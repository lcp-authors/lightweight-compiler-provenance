
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf32-littlearm


Disassembly of section .init:

00014de0 <.init>:
   14de0:	push	{r3, lr}
   14de4:	bl	14f54 <_start@@Base+0x3c>
   14de8:	pop	{r3, pc}

Disassembly of section .plt:

00014dec <raise@plt-0x14>:
   14dec:	push	{lr}		; (str lr, [sp, #-4]!)
   14df0:	ldr	lr, [pc, #4]	; 14dfc <raise@plt-0x4>
   14df4:	add	lr, pc, lr
   14df8:	ldr	pc, [lr, #8]!
   14dfc:	andeq	r8, r4, r4, lsl #4

00014e00 <raise@plt>:
   14e00:	add	ip, pc, #0, 12
   14e04:	add	ip, ip, #72, 20	; 0x48000
   14e08:	ldr	pc, [ip, #516]!	; 0x204

00014e0c <strcmp@plt>:
   14e0c:	add	ip, pc, #0, 12
   14e10:	add	ip, ip, #72, 20	; 0x48000
   14e14:	ldr	pc, [ip, #508]!	; 0x1fc

00014e18 <memmove@plt>:
   14e18:	add	ip, pc, #0, 12
   14e1c:	add	ip, ip, #72, 20	; 0x48000
   14e20:	ldr	pc, [ip, #500]!	; 0x1f4

00014e24 <free@plt>:
   14e24:	add	ip, pc, #0, 12
   14e28:	add	ip, ip, #72, 20	; 0x48000
   14e2c:	ldr	pc, [ip, #492]!	; 0x1ec

00014e30 <memcpy@plt>:
   14e30:	add	ip, pc, #0, 12
   14e34:	add	ip, ip, #72, 20	; 0x48000
   14e38:	ldr	pc, [ip, #484]!	; 0x1e4

00014e3c <memcmp@plt>:
   14e3c:	add	ip, pc, #0, 12
   14e40:	add	ip, ip, #72, 20	; 0x48000
   14e44:	ldr	pc, [ip, #476]!	; 0x1dc

00014e48 <__isinff@plt>:
   14e48:	add	ip, pc, #0, 12
   14e4c:	add	ip, ip, #72, 20	; 0x48000
   14e50:	ldr	pc, [ip, #468]!	; 0x1d4

00014e54 <__isinf@plt>:
   14e54:	add	ip, pc, #0, 12
   14e58:	add	ip, ip, #72, 20	; 0x48000
   14e5c:	ldr	pc, [ip, #460]!	; 0x1cc

00014e60 <realloc@plt>:
   14e60:	add	ip, pc, #0, 12
   14e64:	add	ip, ip, #72, 20	; 0x48000
   14e68:	ldr	pc, [ip, #452]!	; 0x1c4

00014e6c <fwrite@plt>:
   14e6c:	add	ip, pc, #0, 12
   14e70:	add	ip, ip, #72, 20	; 0x48000
   14e74:	ldr	pc, [ip, #444]!	; 0x1bc

00014e78 <malloc@plt>:
   14e78:	add	ip, pc, #0, 12
   14e7c:	add	ip, ip, #72, 20	; 0x48000
   14e80:	ldr	pc, [ip, #436]!	; 0x1b4

00014e84 <__libc_start_main@plt>:
   14e84:	add	ip, pc, #0, 12
   14e88:	add	ip, ip, #72, 20	; 0x48000
   14e8c:	ldr	pc, [ip, #428]!	; 0x1ac

00014e90 <__gmon_start__@plt>:
   14e90:	add	ip, pc, #0, 12
   14e94:	add	ip, ip, #72, 20	; 0x48000
   14e98:	ldr	pc, [ip, #420]!	; 0x1a4

00014e9c <strlen@plt>:
   14e9c:	add	ip, pc, #0, 12
   14ea0:	add	ip, ip, #72, 20	; 0x48000
   14ea4:	ldr	pc, [ip, #412]!	; 0x19c

00014ea8 <fprintf@plt>:
   14ea8:	add	ip, pc, #0, 12
   14eac:	add	ip, ip, #72, 20	; 0x48000
   14eb0:	ldr	pc, [ip, #404]!	; 0x194

00014eb4 <posix_memalign@plt>:
   14eb4:	add	ip, pc, #0, 12
   14eb8:	add	ip, ip, #72, 20	; 0x48000
   14ebc:	ldr	pc, [ip, #396]!	; 0x18c

00014ec0 <memset@plt>:
   14ec0:	add	ip, pc, #0, 12
   14ec4:	add	ip, ip, #72, 20	; 0x48000
   14ec8:	ldr	pc, [ip, #388]!	; 0x184

00014ecc <strncpy@plt>:
   14ecc:	add	ip, pc, #0, 12
   14ed0:	add	ip, ip, #72, 20	; 0x48000
   14ed4:	ldr	pc, [ip, #380]!	; 0x17c

00014ed8 <strtod@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #72, 20	; 0x48000
   14ee0:	ldr	pc, [ip, #372]!	; 0x174

00014ee4 <memchr@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #72, 20	; 0x48000
   14eec:	ldr	pc, [ip, #364]!	; 0x16c

00014ef0 <sprintf@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #72, 20	; 0x48000
   14ef8:	ldr	pc, [ip, #356]!	; 0x164

00014efc <abort@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #72, 20	; 0x48000
   14f04:	ldr	pc, [ip, #348]!	; 0x15c

00014f08 <__assert_fail@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #72, 20	; 0x48000
   14f10:	ldr	pc, [ip, #340]!	; 0x154

Disassembly of section .text:

00014f18 <_start@@Base>:
   14f18:	mov	fp, #0
   14f1c:	mov	lr, #0
   14f20:	pop	{r1}		; (ldr r1, [sp], #4)
   14f24:	mov	r2, sp
   14f28:	push	{r2}		; (str r2, [sp, #-4]!)
   14f2c:	push	{r0}		; (str r0, [sp, #-4]!)
   14f30:	ldr	ip, [pc, #16]	; 14f48 <_start@@Base+0x30>
   14f34:	push	{ip}		; (str ip, [sp, #-4]!)
   14f38:	ldr	r0, [pc, #12]	; 14f4c <_start@@Base+0x34>
   14f3c:	ldr	r3, [pc, #12]	; 14f50 <_start@@Base+0x38>
   14f40:	bl	14e84 <__libc_start_main@plt>
   14f44:	bl	14efc <abort@plt>
   14f48:	andeq	r6, r4, r8, lsr #17
   14f4c:	andeq	r6, r1, r0, lsr #10
   14f50:	andeq	r6, r4, r8, asr #16
   14f54:	ldr	r3, [pc, #20]	; 14f70 <_start@@Base+0x58>
   14f58:	ldr	r2, [pc, #20]	; 14f74 <_start@@Base+0x5c>
   14f5c:	add	r3, pc, r3
   14f60:	ldr	r2, [r3, r2]
   14f64:	cmp	r2, #0
   14f68:	bxeq	lr
   14f6c:	b	14e90 <__gmon_start__@plt>
   14f70:	muleq	r4, ip, r0
   14f74:	andeq	r0, r0, r0, ror r0
   14f78:	ldr	r0, [pc, #24]	; 14f98 <_start@@Base+0x80>
   14f7c:	ldr	r3, [pc, #24]	; 14f9c <_start@@Base+0x84>
   14f80:	cmp	r3, r0
   14f84:	bxeq	lr
   14f88:	ldr	r3, [pc, #16]	; 14fa0 <_start@@Base+0x88>
   14f8c:	cmp	r3, #0
   14f90:	bxeq	lr
   14f94:	bx	r3
   14f98:	andeq	sp, r5, r8, asr #7
   14f9c:	andeq	sp, r5, r8, asr #7
   14fa0:	andeq	r0, r0, r0
   14fa4:	ldr	r0, [pc, #36]	; 14fd0 <_start@@Base+0xb8>
   14fa8:	ldr	r1, [pc, #36]	; 14fd4 <_start@@Base+0xbc>
   14fac:	sub	r1, r1, r0
   14fb0:	asr	r1, r1, #2
   14fb4:	add	r1, r1, r1, lsr #31
   14fb8:	asrs	r1, r1, #1
   14fbc:	bxeq	lr
   14fc0:	ldr	r3, [pc, #16]	; 14fd8 <_start@@Base+0xc0>
   14fc4:	cmp	r3, #0
   14fc8:	bxeq	lr
   14fcc:	bx	r3
   14fd0:	andeq	sp, r5, r8, asr #7
   14fd4:	andeq	sp, r5, r8, asr #7
   14fd8:	andeq	r0, r0, r0
   14fdc:	push	{r4, lr}
   14fe0:	ldr	r4, [pc, #24]	; 15000 <_start@@Base+0xe8>
   14fe4:	ldrb	r3, [r4]
   14fe8:	cmp	r3, #0
   14fec:	popne	{r4, pc}
   14ff0:	bl	14f78 <_start@@Base+0x60>
   14ff4:	mov	r3, #1
   14ff8:	strb	r3, [r4]
   14ffc:	pop	{r4, pc}
   15000:	andeq	sp, r5, r8, asr #7
   15004:	b	14fa4 <_start@@Base+0x8c>

00015008 <test_json@@Base>:
   15008:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1500c:	add	fp, sp, #24
   15010:	sub	sp, sp, #552	; 0x228
   15014:	ldr	ip, [fp, #16]
   15018:	ldr	lr, [fp, #12]
   1501c:	ldr	r4, [fp, #8]
   15020:	str	r0, [fp, #-28]	; 0xffffffe4
   15024:	str	r1, [fp, #-32]	; 0xffffffe0
   15028:	str	r2, [fp, #-36]	; 0xffffffdc
   1502c:	str	r3, [fp, #-40]	; 0xffffffd8
   15030:	mvn	r0, #0
   15034:	str	r0, [fp, #-44]	; 0xffffffd4
   15038:	movw	r0, #0
   1503c:	str	r0, [fp, #-52]	; 0xffffffcc
   15040:	str	r0, [fp, #-56]	; 0xffffffc8
   15044:	add	r0, sp, #280	; 0x118
   15048:	str	r0, [sp, #276]	; 0x114
   1504c:	ldr	r0, [sp, #276]	; 0x114
   15050:	str	r4, [sp, #180]	; 0xb4
   15054:	str	lr, [sp, #176]	; 0xb0
   15058:	str	ip, [sp, #172]	; 0xac
   1505c:	bl	29274 <flatcc_builder_init@@Base>
   15060:	add	r1, sp, #188	; 0xbc
   15064:	str	r0, [sp, #168]	; 0xa8
   15068:	mov	r0, r1
   1506c:	movw	r1, #0
   15070:	bl	44040 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15074:	ldr	r1, [fp, #12]
   15078:	add	r2, sp, #188	; 0xbc
   1507c:	str	r0, [sp, #164]	; 0xa4
   15080:	mov	r0, r2
   15084:	bl	155c8 <test_json@@Base+0x5c0>
   15088:	ldr	r0, [sp, #276]	; 0x114
   1508c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15090:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15094:	str	r0, [sp, #160]	; 0xa0
   15098:	mov	r0, r1
   1509c:	str	r2, [sp, #156]	; 0x9c
   150a0:	bl	14e9c <strlen@plt>
   150a4:	ldr	r1, [fp, #8]
   150a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   150ac:	ldr	r2, [r2]
   150b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150b4:	ldr	r3, [r3, #4]
   150b8:	ldr	ip, [sp, #160]	; 0xa0
   150bc:	str	r0, [sp, #152]	; 0x98
   150c0:	mov	r0, ip
   150c4:	add	lr, sp, #236	; 0xec
   150c8:	str	r1, [sp, #148]	; 0x94
   150cc:	mov	r1, lr
   150d0:	ldr	lr, [sp, #156]	; 0x9c
   150d4:	str	r2, [sp, #144]	; 0x90
   150d8:	mov	r2, lr
   150dc:	ldr	r4, [sp, #152]	; 0x98
   150e0:	str	r3, [sp, #140]	; 0x8c
   150e4:	mov	r3, r4
   150e8:	ldr	r5, [sp, #148]	; 0x94
   150ec:	str	r5, [sp]
   150f0:	ldr	r6, [sp, #144]	; 0x90
   150f4:	str	r6, [sp, #4]
   150f8:	ldr	r7, [sp, #140]	; 0x8c
   150fc:	str	r7, [sp, #8]
   15100:	bl	37848 <flatcc_json_parser_table_as_root@@Base>
   15104:	str	r0, [fp, #-48]	; 0xffffffd0
   15108:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1510c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15110:	cmp	r0, r1
   15114:	beq	1532c <test_json@@Base+0x324>
   15118:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1511c:	cmp	r0, #0
   15120:	beq	15254 <test_json@@Base+0x24c>
   15124:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15128:	cmp	r0, #0
   1512c:	beq	151e0 <test_json@@Base+0x1d8>
   15130:	ldr	r0, [pc, #1140]	; 155ac <test_json@@Base+0x5a4>
   15134:	ldr	r0, [pc, r0]
   15138:	ldr	r0, [r0]
   1513c:	ldr	r2, [fp, #16]
   15140:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15144:	str	r0, [sp, #136]	; 0x88
   15148:	mov	r0, r1
   1514c:	str	r2, [sp, #132]	; 0x84
   15150:	bl	3306c <flatcc_json_parser_error_string@@Base>
   15154:	ldr	r1, [pc, #1100]	; 155a8 <test_json@@Base+0x5a0>
   15158:	add	r1, pc, r1
   1515c:	ldr	r2, [sp, #136]	; 0x88
   15160:	str	r0, [sp, #128]	; 0x80
   15164:	mov	r0, r2
   15168:	ldr	r2, [sp, #132]	; 0x84
   1516c:	ldr	r3, [sp, #128]	; 0x80
   15170:	bl	14ea8 <fprintf@plt>
   15174:	ldr	r1, [pc, #1064]	; 155a4 <test_json@@Base+0x59c>
   15178:	ldr	r1, [pc, r1]
   1517c:	ldr	r1, [r1]
   15180:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15184:	str	r0, [sp, #124]	; 0x7c
   15188:	mov	r0, r2
   1518c:	str	r1, [sp, #120]	; 0x78
   15190:	bl	3306c <flatcc_json_parser_error_string@@Base>
   15194:	ldr	r1, [pc, #1028]	; 155a0 <test_json@@Base+0x598>
   15198:	add	r1, pc, r1
   1519c:	ldr	r2, [sp, #120]	; 0x78
   151a0:	str	r0, [sp, #116]	; 0x74
   151a4:	mov	r0, r2
   151a8:	ldr	r2, [sp, #116]	; 0x74
   151ac:	bl	14ea8 <fprintf@plt>
   151b0:	ldr	r1, [pc, #992]	; 15598 <test_json@@Base+0x590>
   151b4:	add	r1, pc, r1
   151b8:	ldr	r2, [pc, #988]	; 1559c <test_json@@Base+0x594>
   151bc:	ldr	r2, [pc, r2]
   151c0:	ldr	r2, [r2]
   151c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   151c8:	str	r0, [sp, #112]	; 0x70
   151cc:	mov	r0, r2
   151d0:	mov	r2, r3
   151d4:	bl	14ea8 <fprintf@plt>
   151d8:	str	r0, [sp, #108]	; 0x6c
   151dc:	b	15250 <test_json@@Base+0x248>
   151e0:	ldr	r0, [pc, #940]	; 15594 <test_json@@Base+0x58c>
   151e4:	ldr	r0, [pc, r0]
   151e8:	ldr	r0, [r0]
   151ec:	ldr	r2, [fp, #16]
   151f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   151f4:	str	r0, [sp, #104]	; 0x68
   151f8:	mov	r0, r1
   151fc:	str	r2, [sp, #100]	; 0x64
   15200:	bl	3306c <flatcc_json_parser_error_string@@Base>
   15204:	ldr	r1, [pc, #900]	; 15590 <test_json@@Base+0x588>
   15208:	add	r1, pc, r1
   1520c:	ldr	r2, [sp, #104]	; 0x68
   15210:	str	r0, [sp, #96]	; 0x60
   15214:	mov	r0, r2
   15218:	ldr	r2, [sp, #100]	; 0x64
   1521c:	ldr	r3, [sp, #96]	; 0x60
   15220:	bl	14ea8 <fprintf@plt>
   15224:	ldr	r1, [pc, #860]	; 15588 <test_json@@Base+0x580>
   15228:	add	r1, pc, r1
   1522c:	ldr	r2, [pc, #856]	; 1558c <test_json@@Base+0x584>
   15230:	ldr	r2, [pc, r2]
   15234:	ldr	r2, [r2]
   15238:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1523c:	str	r0, [sp, #92]	; 0x5c
   15240:	mov	r0, r2
   15244:	mov	r2, r3
   15248:	bl	14ea8 <fprintf@plt>
   1524c:	str	r0, [sp, #88]	; 0x58
   15250:	b	152c4 <test_json@@Base+0x2bc>
   15254:	ldr	r0, [pc, #808]	; 15584 <test_json@@Base+0x57c>
   15258:	ldr	r0, [pc, r0]
   1525c:	ldr	r0, [r0]
   15260:	ldr	r2, [fp, #16]
   15264:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15268:	str	r0, [sp, #84]	; 0x54
   1526c:	mov	r0, r1
   15270:	str	r2, [sp, #80]	; 0x50
   15274:	bl	3306c <flatcc_json_parser_error_string@@Base>
   15278:	ldr	r1, [pc, #768]	; 15580 <test_json@@Base+0x578>
   1527c:	add	r1, pc, r1
   15280:	ldr	r2, [sp, #84]	; 0x54
   15284:	str	r0, [sp, #76]	; 0x4c
   15288:	mov	r0, r2
   1528c:	ldr	r2, [sp, #80]	; 0x50
   15290:	ldr	r3, [sp, #76]	; 0x4c
   15294:	bl	14ea8 <fprintf@plt>
   15298:	ldr	r1, [pc, #728]	; 15578 <test_json@@Base+0x570>
   1529c:	add	r1, pc, r1
   152a0:	ldr	r2, [pc, #724]	; 1557c <test_json@@Base+0x574>
   152a4:	ldr	r2, [pc, r2]
   152a8:	ldr	r2, [r2]
   152ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   152b0:	str	r0, [sp, #72]	; 0x48
   152b4:	mov	r0, r2
   152b8:	mov	r2, r3
   152bc:	bl	14ea8 <fprintf@plt>
   152c0:	str	r0, [sp, #68]	; 0x44
   152c4:	movw	r0, #0
   152c8:	str	r0, [sp, #184]	; 0xb8
   152cc:	ldr	r0, [sp, #184]	; 0xb8
   152d0:	ldr	r1, [sp, #252]	; 0xfc
   152d4:	sub	r1, r1, #1
   152d8:	cmp	r0, r1
   152dc:	bge	1530c <test_json@@Base+0x304>
   152e0:	ldr	r0, [pc, #728]	; 155c0 <test_json@@Base+0x5b8>
   152e4:	add	r1, pc, r0
   152e8:	ldr	r0, [pc, #724]	; 155c4 <test_json@@Base+0x5bc>
   152ec:	ldr	r0, [pc, r0]
   152f0:	ldr	r0, [r0]
   152f4:	bl	14ea8 <fprintf@plt>
   152f8:	str	r0, [sp, #64]	; 0x40
   152fc:	ldr	r0, [sp, #184]	; 0xb8
   15300:	add	r0, r0, #1
   15304:	str	r0, [sp, #184]	; 0xb8
   15308:	b	152cc <test_json@@Base+0x2c4>
   1530c:	ldr	r0, [pc, #668]	; 155b0 <test_json@@Base+0x5a8>
   15310:	add	r1, pc, r0
   15314:	ldr	r0, [pc, #664]	; 155b4 <test_json@@Base+0x5ac>
   15318:	ldr	r0, [pc, r0]
   1531c:	ldr	r0, [r0]
   15320:	bl	14ea8 <fprintf@plt>
   15324:	str	r0, [sp, #60]	; 0x3c
   15328:	b	15500 <test_json@@Base+0x4f8>
   1532c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15330:	cmp	r0, #0
   15334:	beq	15344 <test_json@@Base+0x33c>
   15338:	movw	r0, #0
   1533c:	str	r0, [fp, #-44]	; 0xffffffd4
   15340:	b	154dc <test_json@@Base+0x4d4>
   15344:	ldr	r0, [sp, #276]	; 0x114
   15348:	sub	r1, fp, #60	; 0x3c
   1534c:	bl	2e98c <flatcc_builder_finalize_aligned_buffer@@Base>
   15350:	str	r0, [fp, #-52]	; 0xffffffcc
   15354:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15358:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1535c:	ldr	lr, [fp, #-28]	; 0xffffffe4
   15360:	ldr	r2, [lr]
   15364:	ldr	lr, [fp, #-28]	; 0xffffffe4
   15368:	ldr	r3, [lr, #12]
   1536c:	bl	31594 <flatcc_verify_table_as_root@@Base>
   15370:	str	r0, [fp, #-44]	; 0xffffffd4
   15374:	cmp	r0, #0
   15378:	beq	153d4 <test_json@@Base+0x3cc>
   1537c:	ldr	r0, [pc, #496]	; 15574 <test_json@@Base+0x56c>
   15380:	ldr	r0, [pc, r0]
   15384:	ldr	r0, [r0]
   15388:	ldr	r3, [fp, #16]
   1538c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15390:	str	r0, [sp, #56]	; 0x38
   15394:	mov	r0, r1
   15398:	str	r3, [sp, #52]	; 0x34
   1539c:	bl	2fa00 <flatcc_verify_error_string@@Base>
   153a0:	ldr	r1, [pc, #452]	; 1556c <test_json@@Base+0x564>
   153a4:	add	r1, pc, r1
   153a8:	ldr	r3, [pc, #448]	; 15570 <test_json@@Base+0x568>
   153ac:	add	r2, pc, r3
   153b0:	ldr	r3, [sp, #56]	; 0x38
   153b4:	str	r0, [sp, #48]	; 0x30
   153b8:	mov	r0, r3
   153bc:	ldr	r3, [sp, #52]	; 0x34
   153c0:	ldr	lr, [sp, #48]	; 0x30
   153c4:	str	lr, [sp]
   153c8:	bl	14ea8 <fprintf@plt>
   153cc:	str	r0, [sp, #44]	; 0x2c
   153d0:	b	15500 <test_json@@Base+0x4f8>
   153d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   153d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   153dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   153e0:	ldr	r3, [r0]
   153e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   153e8:	ldr	r0, [r0, #8]
   153ec:	add	ip, sp, #188	; 0xbc
   153f0:	str	r0, [sp, #40]	; 0x28
   153f4:	mov	r0, ip
   153f8:	ldr	ip, [sp, #40]	; 0x28
   153fc:	str	ip, [sp]
   15400:	bl	4380c <flatcc_json_printer_table_as_root@@Base>
   15404:	add	r1, sp, #188	; 0xbc
   15408:	str	r0, [sp, #36]	; 0x24
   1540c:	mov	r0, r1
   15410:	sub	r1, fp, #64	; 0x40
   15414:	bl	44280 <flatcc_json_printer_get_buffer@@Base>
   15418:	str	r0, [fp, #-56]	; 0xffffffc8
   1541c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15420:	movw	r1, #0
   15424:	cmp	r0, r1
   15428:	beq	15440 <test_json@@Base+0x438>
   1542c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15430:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15434:	bl	14e0c <strcmp@plt>
   15438:	cmp	r0, #0
   1543c:	beq	154d4 <test_json@@Base+0x4cc>
   15440:	ldr	r0, [pc, #284]	; 15564 <test_json@@Base+0x55c>
   15444:	add	r1, pc, r0
   15448:	ldr	r0, [pc, #280]	; 15568 <test_json@@Base+0x560>
   1544c:	ldr	r0, [pc, r0]
   15450:	ldr	r0, [r0]
   15454:	ldr	r2, [fp, #16]
   15458:	bl	14ea8 <fprintf@plt>
   1545c:	ldr	r1, [pc, #248]	; 1555c <test_json@@Base+0x554>
   15460:	add	r1, pc, r1
   15464:	ldr	r2, [pc, #244]	; 15560 <test_json@@Base+0x558>
   15468:	ldr	r2, [pc, r2]
   1546c:	ldr	r2, [r2]
   15470:	ldr	lr, [fp, #-56]	; 0xffffffc8
   15474:	str	r0, [sp, #32]
   15478:	mov	r0, r2
   1547c:	mov	r2, lr
   15480:	bl	14ea8 <fprintf@plt>
   15484:	ldr	r1, [pc, #200]	; 15554 <test_json@@Base+0x54c>
   15488:	add	r1, pc, r1
   1548c:	ldr	r2, [pc, #196]	; 15558 <test_json@@Base+0x550>
   15490:	ldr	r2, [pc, r2]
   15494:	ldr	r2, [r2]
   15498:	str	r0, [sp, #28]
   1549c:	mov	r0, r2
   154a0:	bl	14ea8 <fprintf@plt>
   154a4:	ldr	r1, [pc, #160]	; 1554c <test_json@@Base+0x544>
   154a8:	add	r1, pc, r1
   154ac:	ldr	r2, [pc, #156]	; 15550 <test_json@@Base+0x548>
   154b0:	ldr	r2, [pc, r2]
   154b4:	ldr	r2, [r2]
   154b8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   154bc:	str	r0, [sp, #24]
   154c0:	mov	r0, r2
   154c4:	mov	r2, lr
   154c8:	bl	14ea8 <fprintf@plt>
   154cc:	str	r0, [sp, #20]
   154d0:	b	15500 <test_json@@Base+0x4f8>
   154d4:	movw	r0, #0
   154d8:	str	r0, [fp, #-44]	; 0xffffffd4
   154dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   154e0:	bl	2eb34 <flatcc_builder_aligned_free@@Base>
   154e4:	ldr	r0, [sp, #276]	; 0x114
   154e8:	bl	29520 <flatcc_builder_clear@@Base>
   154ec:	add	r0, sp, #188	; 0xbc
   154f0:	bl	44334 <flatcc_json_printer_clear@@Base>
   154f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154f8:	sub	sp, fp, #24
   154fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15500:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15504:	movw	r1, #0
   15508:	cmp	r0, r1
   1550c:	beq	15540 <test_json@@Base+0x538>
   15510:	ldr	r0, [pc, #160]	; 155b8 <test_json@@Base+0x5b0>
   15514:	add	r0, pc, r0
   15518:	ldr	r1, [pc, #156]	; 155bc <test_json@@Base+0x5b4>
   1551c:	ldr	r1, [pc, r1]
   15520:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15524:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15528:	ldr	r1, [r1]
   1552c:	str	r1, [sp, #16]
   15530:	mov	r1, r2
   15534:	mov	r2, r3
   15538:	ldr	r3, [sp, #16]
   1553c:	bl	156c0 <test_json@@Base+0x6b8>
   15540:	mvn	r0, #0
   15544:	str	r0, [fp, #-44]	; 0xffffffd4
   15548:	b	154dc <test_json@@Base+0x4d4>
   1554c:	andeq	r3, r3, r8, ror #30
   15550:			; <UNDEFINED> instruction: 0x00047bb4
   15554:	andeq	r1, r3, r4, ror r5
   15558:	ldrdeq	r7, [r4], -r4
   1555c:			; <UNDEFINED> instruction: 0x00033fb0
   15560:	strdeq	r7, [r4], -ip
   15564:	andeq	r1, r3, r3, lsl #11
   15568:	andeq	r7, r4, r8, lsl ip
   1556c:	muleq	r3, sl, r5
   15570:			; <UNDEFINED> instruction: 0x000315b9
   15574:	andeq	r7, r4, r4, ror #25
   15578:	andeq	r4, r3, r4, ror r1
   1557c:	andeq	r7, r4, r0, asr #27
   15580:	muleq	r3, lr, r6
   15584:	andeq	r7, r4, ip, lsl #28
   15588:	andeq	r4, r3, r8, ror #3
   1558c:	andeq	r7, r4, r4, lsr lr
   15590:	ldrdeq	r1, [r3], -r2
   15594:	andeq	r7, r4, r0, lsl #29
   15598:	andeq	r4, r3, ip, asr r2
   1559c:	andeq	r7, r4, r8, lsr #29
   155a0:	andeq	r1, r3, r3, ror #14
   155a4:	andeq	r7, r4, ip, ror #29
   155a8:	andeq	r1, r3, ip, asr r7
   155ac:	andeq	r7, r4, r0, lsr pc
   155b0:	andeq	r1, r3, fp, lsr #12
   155b4:	andeq	r7, r4, ip, asr #26
   155b8:	strdeq	r1, [r3], -r3
   155bc:	andeq	r7, r4, r8, asr #22
   155c0:	andeq	r4, r3, r0, asr #2
   155c4:	andeq	r7, r4, r8, ror sp
   155c8:	push	{fp, lr}
   155cc:	mov	fp, sp
   155d0:	sub	sp, sp, #8
   155d4:	str	r0, [sp, #4]
   155d8:	str	r1, [sp]
   155dc:	ldr	r0, [sp]
   155e0:	and	r0, r0, #1
   155e4:	cmp	r0, #0
   155e8:	movw	r0, #0
   155ec:	movne	r0, #1
   155f0:	mvn	r1, #0
   155f4:	eor	r0, r0, r1
   155f8:	eor	r0, r0, r1
   155fc:	and	r0, r0, #1
   15600:	ldr	r2, [sp, #4]
   15604:	strb	r0, [r2, #26]
   15608:	ldr	r0, [sp]
   1560c:	and	r0, r0, #2
   15610:	cmp	r0, #0
   15614:	movw	r0, #0
   15618:	movne	r0, #1
   1561c:	eor	r0, r0, r1
   15620:	eor	r0, r0, r1
   15624:	and	r0, r0, #1
   15628:	ldr	r2, [sp, #4]
   1562c:	strb	r0, [r2, #27]
   15630:	ldr	r0, [sp]
   15634:	and	r0, r0, #4
   15638:	cmp	r0, #0
   1563c:	movw	r0, #0
   15640:	movne	r0, #1
   15644:	eor	r0, r0, r1
   15648:	eor	r0, r0, r1
   1564c:	and	r0, r0, #1
   15650:	ldr	r2, [sp, #4]
   15654:	strb	r0, [r2, #28]
   15658:	ldr	r0, [sp]
   1565c:	and	r0, r0, #8
   15660:	cmp	r0, #0
   15664:	movw	r0, #0
   15668:	movne	r0, #1
   1566c:	eor	r0, r0, r1
   15670:	eor	r0, r0, r1
   15674:	and	r0, r0, #1
   15678:	ldr	r1, [sp, #4]
   1567c:	strb	r0, [r1, #29]
   15680:	ldr	r0, [sp]
   15684:	and	r0, r0, #16
   15688:	cmp	r0, #0
   1568c:	beq	156a0 <test_json@@Base+0x698>
   15690:	ldr	r0, [sp, #4]
   15694:	movw	r1, #2
   15698:	and	r1, r1, #255	; 0xff
   1569c:	bl	170b0 <main@@Base+0xb90>
   156a0:	ldr	r0, [sp]
   156a4:	and	r0, r0, #32
   156a8:	cmp	r0, #0
   156ac:	beq	156b8 <test_json@@Base+0x6b0>
   156b0:	ldr	r0, [sp, #4]
   156b4:	bl	170d0 <main@@Base+0xbb0>
   156b8:	mov	sp, fp
   156bc:	pop	{fp, pc}
   156c0:	push	{fp, lr}
   156c4:	mov	fp, sp
   156c8:	sub	sp, sp, #72	; 0x48
   156cc:	str	r0, [fp, #-4]
   156d0:	str	r1, [fp, #-8]
   156d4:	str	r2, [fp, #-12]
   156d8:	str	r3, [fp, #-16]
   156dc:	ldr	r0, [fp, #-8]
   156e0:	str	r0, [sp, #28]
   156e4:	ldr	r0, [fp, #-4]
   156e8:	movw	r1, #0
   156ec:	cmp	r0, r1
   156f0:	beq	1570c <test_json@@Base+0x704>
   156f4:	ldr	r0, [pc, #440]	; 158b4 <test_json@@Base+0x8ac>
   156f8:	add	r1, pc, r0
   156fc:	ldr	r0, [fp, #-16]
   15700:	ldr	r2, [fp, #-4]
   15704:	bl	14ea8 <fprintf@plt>
   15708:	str	r0, [sp, #24]
   1570c:	movw	r0, #0
   15710:	str	r0, [fp, #-20]	; 0xffffffec
   15714:	ldr	r0, [fp, #-20]	; 0xffffffec
   15718:	ldr	r1, [fp, #-12]
   1571c:	cmp	r0, r1
   15720:	bcs	1585c <test_json@@Base+0x854>
   15724:	ldr	r0, [fp, #-20]	; 0xffffffec
   15728:	and	r0, r0, #15
   1572c:	cmp	r0, #0
   15730:	bne	15774 <test_json@@Base+0x76c>
   15734:	ldr	r0, [fp, #-20]	; 0xffffffec
   15738:	cmp	r0, #0
   1573c:	beq	15758 <test_json@@Base+0x750>
   15740:	ldr	r0, [pc, #380]	; 158c4 <test_json@@Base+0x8bc>
   15744:	add	r1, pc, r0
   15748:	add	r2, sp, #35	; 0x23
   1574c:	ldr	r0, [fp, #-16]
   15750:	bl	14ea8 <fprintf@plt>
   15754:	str	r0, [sp, #20]
   15758:	ldr	r0, [pc, #360]	; 158c8 <test_json@@Base+0x8c0>
   1575c:	add	r1, pc, r0
   15760:	ldr	r0, [fp, #-16]
   15764:	ldr	r2, [fp, #-20]	; 0xffffffec
   15768:	bl	14ea8 <fprintf@plt>
   1576c:	str	r0, [sp, #16]
   15770:	b	1579c <test_json@@Base+0x794>
   15774:	ldr	r0, [fp, #-20]	; 0xffffffec
   15778:	and	r0, r0, #7
   1577c:	cmp	r0, #0
   15780:	bne	15798 <test_json@@Base+0x790>
   15784:	ldr	r0, [pc, #308]	; 158c0 <test_json@@Base+0x8b8>
   15788:	add	r1, pc, r0
   1578c:	ldr	r0, [fp, #-16]
   15790:	bl	14ea8 <fprintf@plt>
   15794:	str	r0, [sp, #12]
   15798:	b	1579c <test_json@@Base+0x794>
   1579c:	ldr	r0, [pc, #296]	; 158cc <test_json@@Base+0x8c4>
   157a0:	add	r1, pc, r0
   157a4:	ldr	r0, [fp, #-16]
   157a8:	ldr	r2, [sp, #28]
   157ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   157b0:	add	r2, r2, r3
   157b4:	ldrb	r2, [r2]
   157b8:	bl	14ea8 <fprintf@plt>
   157bc:	ldr	r1, [sp, #28]
   157c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   157c4:	add	r1, r1, r2
   157c8:	ldrb	r1, [r1]
   157cc:	cmp	r1, #32
   157d0:	str	r0, [sp, #8]
   157d4:	blt	157f0 <test_json@@Base+0x7e8>
   157d8:	ldr	r0, [sp, #28]
   157dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   157e0:	add	r0, r0, r1
   157e4:	ldrb	r0, [r0]
   157e8:	cmp	r0, #126	; 0x7e
   157ec:	ble	1580c <test_json@@Base+0x804>
   157f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   157f4:	and	r0, r0, #15
   157f8:	add	r1, sp, #35	; 0x23
   157fc:	add	r0, r1, r0
   15800:	movw	r1, #46	; 0x2e
   15804:	strb	r1, [r0]
   15808:	b	15830 <test_json@@Base+0x828>
   1580c:	ldr	r0, [sp, #28]
   15810:	ldr	r1, [fp, #-20]	; 0xffffffec
   15814:	add	r0, r0, r1
   15818:	ldrb	r0, [r0]
   1581c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15820:	and	r1, r1, #15
   15824:	add	r2, sp, #35	; 0x23
   15828:	add	r1, r2, r1
   1582c:	strb	r0, [r1]
   15830:	ldr	r0, [fp, #-20]	; 0xffffffec
   15834:	and	r0, r0, #15
   15838:	add	r0, r0, #1
   1583c:	add	r1, sp, #35	; 0x23
   15840:	add	r0, r1, r0
   15844:	movw	r1, #0
   15848:	strb	r1, [r0]
   1584c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15850:	add	r0, r0, #1
   15854:	str	r0, [fp, #-20]	; 0xffffffec
   15858:	b	15714 <test_json@@Base+0x70c>
   1585c:	b	15860 <test_json@@Base+0x858>
   15860:	ldr	r0, [fp, #-20]	; 0xffffffec
   15864:	and	r0, r0, #15
   15868:	cmp	r0, #0
   1586c:	beq	15894 <test_json@@Base+0x88c>
   15870:	ldr	r0, [pc, #68]	; 158bc <test_json@@Base+0x8b4>
   15874:	add	r1, pc, r0
   15878:	ldr	r0, [fp, #-16]
   1587c:	bl	14ea8 <fprintf@plt>
   15880:	ldr	r1, [fp, #-20]	; 0xffffffec
   15884:	add	r1, r1, #1
   15888:	str	r1, [fp, #-20]	; 0xffffffec
   1588c:	str	r0, [sp, #4]
   15890:	b	15860 <test_json@@Base+0x858>
   15894:	ldr	r0, [pc, #28]	; 158b8 <test_json@@Base+0x8b0>
   15898:	add	r1, pc, r0
   1589c:	add	r2, sp, #35	; 0x23
   158a0:	ldr	r0, [fp, #-16]
   158a4:	bl	14ea8 <fprintf@plt>
   158a8:	str	r0, [sp]
   158ac:	mov	sp, fp
   158b0:	pop	{fp, pc}
   158b4:	andeq	r3, r3, r1, lsl sp
   158b8:	andeq	r3, r3, r6, ror fp
   158bc:	andeq	r3, r3, lr, lsr #23
   158c0:	muleq	r3, ip, ip
   158c4:	andeq	r3, r3, sl, asr #25
   158c8:			; <UNDEFINED> instruction: 0x00033cb8
   158cc:	andeq	r3, r3, ip, ror ip

000158d0 <edge_case_tests@@Base>:
   158d0:	push	{fp, lr}
   158d4:	mov	fp, sp
   158d8:	sub	sp, sp, #48	; 0x30
   158dc:	ldr	r0, [pc, #680]	; 15b8c <edge_case_tests@@Base+0x2bc>
   158e0:	add	r1, pc, r0
   158e4:	ldr	r0, [pc, #676]	; 15b90 <edge_case_tests@@Base+0x2c0>
   158e8:	add	r2, pc, r0
   158ec:	ldr	r0, [pc, #672]	; 15b94 <edge_case_tests@@Base+0x2c4>
   158f0:	add	r0, pc, r0
   158f4:	movw	r3, #0
   158f8:	str	r3, [fp, #-4]
   158fc:	str	r0, [fp, #-8]
   15900:	ldr	r0, [fp, #-8]
   15904:	str	r3, [fp, #-12]
   15908:	ldr	ip, [fp, #-12]
   1590c:	str	ip, [sp]
   15910:	str	ip, [sp, #4]
   15914:	movw	lr, #158	; 0x9e
   15918:	str	lr, [sp, #8]
   1591c:	bl	15008 <test_json@@Base>
   15920:	ldr	r1, [pc, #604]	; 15b84 <edge_case_tests@@Base+0x2b4>
   15924:	add	r1, pc, r1
   15928:	ldr	r2, [pc, #600]	; 15b88 <edge_case_tests@@Base+0x2b8>
   1592c:	add	r2, pc, r2
   15930:	ldr	r3, [fp, #-4]
   15934:	orr	r0, r3, r0
   15938:	str	r0, [fp, #-4]
   1593c:	ldr	r0, [fp, #-8]
   15940:	movw	r3, #0
   15944:	str	r3, [fp, #-16]
   15948:	movw	ip, #2
   1594c:	str	ip, [sp]
   15950:	ldr	ip, [fp, #-16]
   15954:	str	ip, [sp, #4]
   15958:	movw	lr, #168	; 0xa8
   1595c:	str	lr, [sp, #8]
   15960:	bl	15008 <test_json@@Base>
   15964:	ldr	r1, [pc, #528]	; 15b7c <edge_case_tests@@Base+0x2ac>
   15968:	add	r1, pc, r1
   1596c:	ldr	r2, [pc, #524]	; 15b80 <edge_case_tests@@Base+0x2b0>
   15970:	add	r2, pc, r2
   15974:	ldr	r3, [fp, #-4]
   15978:	orr	r0, r3, r0
   1597c:	str	r0, [fp, #-4]
   15980:	ldr	r0, [fp, #-8]
   15984:	movw	r3, #0
   15988:	str	r3, [fp, #-20]	; 0xffffffec
   1598c:	ldr	ip, [fp, #-20]	; 0xffffffec
   15990:	str	ip, [sp]
   15994:	movw	lr, #2
   15998:	str	lr, [sp, #4]
   1599c:	movw	lr, #172	; 0xac
   159a0:	str	lr, [sp, #8]
   159a4:	bl	15008 <test_json@@Base>
   159a8:	ldr	r1, [pc, #452]	; 15b74 <edge_case_tests@@Base+0x2a4>
   159ac:	add	r1, pc, r1
   159b0:	ldr	r2, [pc, #448]	; 15b78 <edge_case_tests@@Base+0x2a8>
   159b4:	add	r2, pc, r2
   159b8:	ldr	r3, [fp, #-4]
   159bc:	orr	r0, r3, r0
   159c0:	str	r0, [fp, #-4]
   159c4:	ldr	r0, [fp, #-8]
   159c8:	movw	r3, #0
   159cc:	movw	ip, #2
   159d0:	str	ip, [sp]
   159d4:	movw	ip, #4
   159d8:	str	ip, [sp, #4]
   159dc:	movw	ip, #176	; 0xb0
   159e0:	str	ip, [sp, #8]
   159e4:	bl	15008 <test_json@@Base>
   159e8:	ldr	r1, [pc, #380]	; 15b6c <edge_case_tests@@Base+0x29c>
   159ec:	add	r1, pc, r1
   159f0:	ldr	r2, [pc, #376]	; 15b70 <edge_case_tests@@Base+0x2a0>
   159f4:	add	r2, pc, r2
   159f8:	ldr	r3, [fp, #-4]
   159fc:	orr	r0, r3, r0
   15a00:	str	r0, [fp, #-4]
   15a04:	ldr	r0, [fp, #-8]
   15a08:	movw	r3, #0
   15a0c:	str	r3, [sp, #24]
   15a10:	ldr	ip, [sp, #24]
   15a14:	str	ip, [sp]
   15a18:	movw	lr, #8
   15a1c:	str	lr, [sp, #4]
   15a20:	movw	lr, #180	; 0xb4
   15a24:	str	lr, [sp, #8]
   15a28:	bl	15008 <test_json@@Base>
   15a2c:	ldr	r1, [pc, #304]	; 15b64 <edge_case_tests@@Base+0x294>
   15a30:	add	r1, pc, r1
   15a34:	ldr	r2, [pc, #300]	; 15b68 <edge_case_tests@@Base+0x298>
   15a38:	add	r2, pc, r2
   15a3c:	ldr	r3, [fp, #-4]
   15a40:	orr	r0, r3, r0
   15a44:	str	r0, [fp, #-4]
   15a48:	ldr	r0, [fp, #-8]
   15a4c:	movw	r3, #0
   15a50:	str	r3, [sp, #20]
   15a54:	movw	ip, #2
   15a58:	str	ip, [sp]
   15a5c:	ldr	ip, [sp, #20]
   15a60:	str	ip, [sp, #4]
   15a64:	movw	lr, #195	; 0xc3
   15a68:	str	lr, [sp, #8]
   15a6c:	bl	15008 <test_json@@Base>
   15a70:	ldr	r1, [pc, #228]	; 15b5c <edge_case_tests@@Base+0x28c>
   15a74:	add	r1, pc, r1
   15a78:	ldr	r2, [pc, #224]	; 15b60 <edge_case_tests@@Base+0x290>
   15a7c:	add	r2, pc, r2
   15a80:	ldr	r3, [fp, #-4]
   15a84:	orr	r0, r3, r0
   15a88:	str	r0, [fp, #-4]
   15a8c:	ldr	r0, [fp, #-8]
   15a90:	movw	r3, #0
   15a94:	str	r3, [sp, #16]
   15a98:	movw	ip, #1
   15a9c:	str	ip, [sp]
   15aa0:	ldr	ip, [sp, #16]
   15aa4:	str	ip, [sp, #4]
   15aa8:	movw	lr, #199	; 0xc7
   15aac:	str	lr, [sp, #8]
   15ab0:	bl	15008 <test_json@@Base>
   15ab4:	ldr	r1, [pc, #152]	; 15b54 <edge_case_tests@@Base+0x284>
   15ab8:	add	r1, pc, r1
   15abc:	ldr	r2, [pc, #148]	; 15b58 <edge_case_tests@@Base+0x288>
   15ac0:	add	r2, pc, r2
   15ac4:	ldr	r3, [fp, #-4]
   15ac8:	orr	r0, r3, r0
   15acc:	str	r0, [fp, #-4]
   15ad0:	ldr	r0, [fp, #-8]
   15ad4:	movw	r3, #0
   15ad8:	movw	ip, #1
   15adc:	str	ip, [sp]
   15ae0:	str	ip, [sp, #4]
   15ae4:	movw	ip, #203	; 0xcb
   15ae8:	str	ip, [sp, #8]
   15aec:	bl	15008 <test_json@@Base>
   15af0:	ldr	r1, [pc, #84]	; 15b4c <edge_case_tests@@Base+0x27c>
   15af4:	add	r1, pc, r1
   15af8:	ldr	r2, [pc, #80]	; 15b50 <edge_case_tests@@Base+0x280>
   15afc:	add	r2, pc, r2
   15b00:	ldr	r3, [fp, #-4]
   15b04:	orr	r0, r3, r0
   15b08:	str	r0, [fp, #-4]
   15b0c:	ldr	r0, [fp, #-8]
   15b10:	movw	r3, #0
   15b14:	str	r3, [sp, #12]
   15b18:	movw	ip, #1
   15b1c:	str	ip, [sp]
   15b20:	ldr	ip, [sp, #12]
   15b24:	str	ip, [sp, #4]
   15b28:	movw	lr, #209	; 0xd1
   15b2c:	str	lr, [sp, #8]
   15b30:	bl	15008 <test_json@@Base>
   15b34:	ldr	r1, [fp, #-4]
   15b38:	orr	r0, r1, r0
   15b3c:	str	r0, [fp, #-4]
   15b40:	ldr	r0, [fp, #-4]
   15b44:	mov	sp, fp
   15b48:	pop	{fp, pc}
   15b4c:	andeq	r1, r3, ip, asr #3
   15b50:	muleq	r3, r2, r1
   15b54:	andeq	r1, r3, r4, lsr #3
   15b58:	andeq	r1, r3, r9, ror #3
   15b5c:	andeq	r1, r3, r8, ror #3
   15b60:	andeq	r1, r3, r2, lsl r2
   15b64:	andeq	r1, r3, r6, lsl #4
   15b68:	andeq	r1, r3, r1, asr r0
   15b6c:	andeq	r1, r3, r6, lsl r1
   15b70:	andeq	r1, r3, r0, lsr r1
   15b74:	strheq	r1, [r3], -ip
   15b78:	andeq	r1, r3, fp, lsr r1
   15b7c:	andeq	r1, r3, r3, asr #2
   15b80:	andeq	r1, r3, r2, ror #2
   15b84:	andeq	r1, r3, r4, asr #2
   15b88:	andeq	r1, r3, sp, asr r1
   15b8c:	andeq	r1, r3, r5, lsr r1
   15b90:	andeq	r1, r3, r2, ror #2
   15b94:	andeq	r7, r4, r8, ror #11

00015b98 <error_case_tests@@Base>:
   15b98:	push	{fp, lr}
   15b9c:	mov	fp, sp
   15ba0:	sub	sp, sp, #72	; 0x48
   15ba4:	ldr	r0, [pc, #784]	; 15ebc <error_case_tests@@Base+0x324>
   15ba8:	add	r1, pc, r0
   15bac:	ldr	r0, [pc, #780]	; 15ec0 <error_case_tests@@Base+0x328>
   15bb0:	add	r0, pc, r0
   15bb4:	movw	r2, #0
   15bb8:	str	r2, [fp, #-4]
   15bbc:	str	r0, [fp, #-8]
   15bc0:	ldr	r0, [fp, #-8]
   15bc4:	str	r2, [fp, #-12]
   15bc8:	movw	r3, #13
   15bcc:	ldr	ip, [fp, #-12]
   15bd0:	str	ip, [sp]
   15bd4:	str	ip, [sp, #4]
   15bd8:	movw	lr, #285	; 0x11d
   15bdc:	str	lr, [sp, #8]
   15be0:	bl	15008 <test_json@@Base>
   15be4:	ldr	r1, [pc, #716]	; 15eb8 <error_case_tests@@Base+0x320>
   15be8:	add	r1, pc, r1
   15bec:	ldr	r2, [fp, #-4]
   15bf0:	orr	r0, r2, r0
   15bf4:	str	r0, [fp, #-4]
   15bf8:	ldr	r0, [fp, #-8]
   15bfc:	movw	r2, #0
   15c00:	str	r2, [fp, #-16]
   15c04:	movw	r3, #13
   15c08:	ldr	ip, [fp, #-16]
   15c0c:	str	ip, [sp]
   15c10:	str	ip, [sp, #4]
   15c14:	movw	lr, #287	; 0x11f
   15c18:	str	lr, [sp, #8]
   15c1c:	bl	15008 <test_json@@Base>
   15c20:	ldr	r1, [pc, #652]	; 15eb4 <error_case_tests@@Base+0x31c>
   15c24:	add	r1, pc, r1
   15c28:	ldr	r2, [fp, #-4]
   15c2c:	orr	r0, r2, r0
   15c30:	str	r0, [fp, #-4]
   15c34:	ldr	r0, [fp, #-8]
   15c38:	movw	r2, #0
   15c3c:	str	r2, [fp, #-20]	; 0xffffffec
   15c40:	movw	r3, #13
   15c44:	ldr	ip, [fp, #-20]	; 0xffffffec
   15c48:	str	ip, [sp]
   15c4c:	str	ip, [sp, #4]
   15c50:	movw	lr, #289	; 0x121
   15c54:	str	lr, [sp, #8]
   15c58:	bl	15008 <test_json@@Base>
   15c5c:	ldr	r1, [pc, #588]	; 15eb0 <error_case_tests@@Base+0x318>
   15c60:	add	r1, pc, r1
   15c64:	ldr	r2, [fp, #-4]
   15c68:	orr	r0, r2, r0
   15c6c:	str	r0, [fp, #-4]
   15c70:	ldr	r0, [fp, #-8]
   15c74:	movw	r2, #0
   15c78:	str	r2, [fp, #-24]	; 0xffffffe8
   15c7c:	movw	r3, #13
   15c80:	ldr	ip, [fp, #-24]	; 0xffffffe8
   15c84:	str	ip, [sp]
   15c88:	str	ip, [sp, #4]
   15c8c:	movw	lr, #291	; 0x123
   15c90:	str	lr, [sp, #8]
   15c94:	bl	15008 <test_json@@Base>
   15c98:	ldr	r1, [pc, #524]	; 15eac <error_case_tests@@Base+0x314>
   15c9c:	add	r1, pc, r1
   15ca0:	ldr	r2, [fp, #-4]
   15ca4:	orr	r0, r2, r0
   15ca8:	str	r0, [fp, #-4]
   15cac:	ldr	r0, [fp, #-8]
   15cb0:	movw	r2, #0
   15cb4:	str	r2, [fp, #-28]	; 0xffffffe4
   15cb8:	movw	r3, #13
   15cbc:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15cc0:	str	ip, [sp]
   15cc4:	str	ip, [sp, #4]
   15cc8:	movw	lr, #293	; 0x125
   15ccc:	str	lr, [sp, #8]
   15cd0:	bl	15008 <test_json@@Base>
   15cd4:	ldr	r1, [pc, #460]	; 15ea8 <error_case_tests@@Base+0x310>
   15cd8:	add	r1, pc, r1
   15cdc:	ldr	r2, [fp, #-4]
   15ce0:	orr	r0, r2, r0
   15ce4:	str	r0, [fp, #-4]
   15ce8:	ldr	r0, [fp, #-8]
   15cec:	movw	r2, #0
   15cf0:	str	r2, [fp, #-32]	; 0xffffffe0
   15cf4:	movw	r3, #13
   15cf8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15cfc:	str	ip, [sp]
   15d00:	str	ip, [sp, #4]
   15d04:	movw	lr, #296	; 0x128
   15d08:	str	lr, [sp, #8]
   15d0c:	bl	15008 <test_json@@Base>
   15d10:	ldr	r1, [pc, #396]	; 15ea4 <error_case_tests@@Base+0x30c>
   15d14:	add	r1, pc, r1
   15d18:	ldr	r2, [fp, #-4]
   15d1c:	orr	r0, r2, r0
   15d20:	str	r0, [fp, #-4]
   15d24:	ldr	r0, [fp, #-8]
   15d28:	movw	r2, #0
   15d2c:	str	r2, [sp, #36]	; 0x24
   15d30:	movw	r3, #13
   15d34:	ldr	ip, [sp, #36]	; 0x24
   15d38:	str	ip, [sp]
   15d3c:	str	ip, [sp, #4]
   15d40:	movw	lr, #299	; 0x12b
   15d44:	str	lr, [sp, #8]
   15d48:	bl	15008 <test_json@@Base>
   15d4c:	ldr	r1, [pc, #332]	; 15ea0 <error_case_tests@@Base+0x308>
   15d50:	add	r1, pc, r1
   15d54:	ldr	r2, [fp, #-4]
   15d58:	orr	r0, r2, r0
   15d5c:	str	r0, [fp, #-4]
   15d60:	ldr	r0, [fp, #-8]
   15d64:	movw	r2, #0
   15d68:	str	r2, [sp, #32]
   15d6c:	movw	r3, #13
   15d70:	ldr	ip, [sp, #32]
   15d74:	str	ip, [sp]
   15d78:	str	ip, [sp, #4]
   15d7c:	movw	lr, #303	; 0x12f
   15d80:	str	lr, [sp, #8]
   15d84:	bl	15008 <test_json@@Base>
   15d88:	ldr	r1, [pc, #268]	; 15e9c <error_case_tests@@Base+0x304>
   15d8c:	add	r1, pc, r1
   15d90:	ldr	r2, [fp, #-4]
   15d94:	orr	r0, r2, r0
   15d98:	str	r0, [fp, #-4]
   15d9c:	ldr	r0, [fp, #-8]
   15da0:	movw	r2, #0
   15da4:	str	r2, [sp, #28]
   15da8:	movw	r3, #13
   15dac:	ldr	ip, [sp, #28]
   15db0:	str	ip, [sp]
   15db4:	str	ip, [sp, #4]
   15db8:	movw	lr, #307	; 0x133
   15dbc:	str	lr, [sp, #8]
   15dc0:	bl	15008 <test_json@@Base>
   15dc4:	ldr	r1, [pc, #204]	; 15e98 <error_case_tests@@Base+0x300>
   15dc8:	add	r1, pc, r1
   15dcc:	ldr	r2, [fp, #-4]
   15dd0:	orr	r0, r2, r0
   15dd4:	str	r0, [fp, #-4]
   15dd8:	ldr	r0, [fp, #-8]
   15ddc:	movw	r2, #0
   15de0:	str	r2, [sp, #24]
   15de4:	movw	r3, #5
   15de8:	ldr	ip, [sp, #24]
   15dec:	str	ip, [sp]
   15df0:	str	ip, [sp, #4]
   15df4:	movw	lr, #311	; 0x137
   15df8:	str	lr, [sp, #8]
   15dfc:	bl	15008 <test_json@@Base>
   15e00:	ldr	r1, [pc, #140]	; 15e94 <error_case_tests@@Base+0x2fc>
   15e04:	add	r1, pc, r1
   15e08:	ldr	r2, [fp, #-4]
   15e0c:	orr	r0, r2, r0
   15e10:	str	r0, [fp, #-4]
   15e14:	ldr	r0, [fp, #-8]
   15e18:	movw	r2, #0
   15e1c:	str	r2, [sp, #20]
   15e20:	movw	r3, #5
   15e24:	ldr	ip, [sp, #20]
   15e28:	str	ip, [sp]
   15e2c:	str	ip, [sp, #4]
   15e30:	movw	lr, #314	; 0x13a
   15e34:	str	lr, [sp, #8]
   15e38:	bl	15008 <test_json@@Base>
   15e3c:	ldr	r1, [pc, #76]	; 15e90 <error_case_tests@@Base+0x2f8>
   15e40:	add	r1, pc, r1
   15e44:	ldr	r2, [fp, #-4]
   15e48:	orr	r0, r2, r0
   15e4c:	str	r0, [fp, #-4]
   15e50:	ldr	r0, [fp, #-8]
   15e54:	movw	r2, #0
   15e58:	str	r2, [sp, #16]
   15e5c:	movw	r3, #5
   15e60:	ldr	ip, [sp, #16]
   15e64:	str	ip, [sp]
   15e68:	str	ip, [sp, #4]
   15e6c:	movw	lr, #317	; 0x13d
   15e70:	str	lr, [sp, #8]
   15e74:	bl	15008 <test_json@@Base>
   15e78:	ldr	r1, [fp, #-4]
   15e7c:	orr	r0, r1, r0
   15e80:	str	r0, [fp, #-4]
   15e84:	ldr	r0, [fp, #-4]
   15e88:	mov	sp, fp
   15e8c:	pop	{fp, pc}
   15e90:	andeq	r1, r3, ip, ror r3
   15e94:	muleq	r3, r2, r3
   15e98:			; <UNDEFINED> instruction: 0x000313b6
   15e9c:	andeq	r1, r3, fp, lsr #6
   15ea0:	andeq	r1, r3, r0, lsr #5
   15ea4:	andeq	r1, r3, r1, asr #4
   15ea8:	ldrdeq	r1, [r3], -pc	; <UNPREDICTABLE>
   15eac:	andeq	r1, r3, r6, asr #3
   15eb0:	andeq	r1, r3, sl, lsr #3
   15eb4:	andeq	r1, r3, r8, lsl #3
   15eb8:	andeq	r1, r3, r3, ror #2
   15ebc:	andeq	r1, r3, r9, lsl #3
   15ec0:	andeq	r7, r4, r8, lsr #6

00015ec4 <base64_tests@@Base>:
   15ec4:	push	{fp, lr}
   15ec8:	mov	fp, sp
   15ecc:	sub	sp, sp, #56	; 0x38
   15ed0:	ldr	r0, [pc, #572]	; 16114 <base64_tests@@Base+0x250>
   15ed4:	add	r1, pc, r0
   15ed8:	ldr	r0, [pc, #568]	; 16118 <base64_tests@@Base+0x254>
   15edc:	add	r2, pc, r0
   15ee0:	ldr	r0, [pc, #564]	; 1611c <base64_tests@@Base+0x258>
   15ee4:	add	r0, pc, r0
   15ee8:	movw	r3, #0
   15eec:	str	r3, [fp, #-4]
   15ef0:	str	r0, [fp, #-8]
   15ef4:	ldr	r0, [fp, #-8]
   15ef8:	str	r3, [fp, #-12]
   15efc:	ldr	ip, [fp, #-12]
   15f00:	str	ip, [sp]
   15f04:	str	ip, [sp, #4]
   15f08:	movw	lr, #369	; 0x171
   15f0c:	str	lr, [sp, #8]
   15f10:	bl	15008 <test_json@@Base>
   15f14:	ldr	r1, [pc, #496]	; 1610c <base64_tests@@Base+0x248>
   15f18:	add	r1, pc, r1
   15f1c:	ldr	r2, [pc, #492]	; 16110 <base64_tests@@Base+0x24c>
   15f20:	add	r2, pc, r2
   15f24:	ldr	r3, [fp, #-4]
   15f28:	orr	r0, r3, r0
   15f2c:	str	r0, [fp, #-4]
   15f30:	ldr	r0, [fp, #-8]
   15f34:	movw	r3, #0
   15f38:	str	r3, [fp, #-16]
   15f3c:	ldr	ip, [fp, #-16]
   15f40:	str	ip, [sp]
   15f44:	str	ip, [sp, #4]
   15f48:	movw	lr, #372	; 0x174
   15f4c:	str	lr, [sp, #8]
   15f50:	bl	15008 <test_json@@Base>
   15f54:	ldr	r1, [pc, #424]	; 16104 <base64_tests@@Base+0x240>
   15f58:	add	r1, pc, r1
   15f5c:	ldr	r2, [pc, #420]	; 16108 <base64_tests@@Base+0x244>
   15f60:	add	r2, pc, r2
   15f64:	ldr	r3, [fp, #-4]
   15f68:	orr	r0, r3, r0
   15f6c:	str	r0, [fp, #-4]
   15f70:	ldr	r0, [fp, #-8]
   15f74:	movw	r3, #0
   15f78:	str	r3, [fp, #-20]	; 0xffffffec
   15f7c:	ldr	ip, [fp, #-20]	; 0xffffffec
   15f80:	str	ip, [sp]
   15f84:	str	ip, [sp, #4]
   15f88:	movw	lr, #376	; 0x178
   15f8c:	str	lr, [sp, #8]
   15f90:	bl	15008 <test_json@@Base>
   15f94:	ldr	r1, [pc, #352]	; 160fc <base64_tests@@Base+0x238>
   15f98:	add	r1, pc, r1
   15f9c:	ldr	r2, [pc, #348]	; 16100 <base64_tests@@Base+0x23c>
   15fa0:	add	r2, pc, r2
   15fa4:	ldr	r3, [fp, #-4]
   15fa8:	orr	r0, r3, r0
   15fac:	str	r0, [fp, #-4]
   15fb0:	ldr	r0, [fp, #-8]
   15fb4:	movw	r3, #0
   15fb8:	str	r3, [fp, #-24]	; 0xffffffe8
   15fbc:	ldr	ip, [fp, #-24]	; 0xffffffe8
   15fc0:	str	ip, [sp]
   15fc4:	str	ip, [sp, #4]
   15fc8:	movw	lr, #379	; 0x17b
   15fcc:	str	lr, [sp, #8]
   15fd0:	bl	15008 <test_json@@Base>
   15fd4:	ldr	r1, [pc, #280]	; 160f4 <base64_tests@@Base+0x230>
   15fd8:	add	r1, pc, r1
   15fdc:	ldr	r2, [pc, #276]	; 160f8 <base64_tests@@Base+0x234>
   15fe0:	add	r2, pc, r2
   15fe4:	ldr	r3, [fp, #-4]
   15fe8:	orr	r0, r3, r0
   15fec:	str	r0, [fp, #-4]
   15ff0:	ldr	r0, [fp, #-8]
   15ff4:	movw	r3, #0
   15ff8:	str	r3, [sp, #28]
   15ffc:	ldr	ip, [sp, #28]
   16000:	str	ip, [sp]
   16004:	str	ip, [sp, #4]
   16008:	movw	lr, #382	; 0x17e
   1600c:	str	lr, [sp, #8]
   16010:	bl	15008 <test_json@@Base>
   16014:	ldr	r1, [pc, #208]	; 160ec <base64_tests@@Base+0x228>
   16018:	add	r1, pc, r1
   1601c:	ldr	r2, [pc, #204]	; 160f0 <base64_tests@@Base+0x22c>
   16020:	add	r2, pc, r2
   16024:	ldr	r3, [fp, #-4]
   16028:	orr	r0, r3, r0
   1602c:	str	r0, [fp, #-4]
   16030:	ldr	r0, [fp, #-8]
   16034:	movw	r3, #0
   16038:	str	r3, [sp, #24]
   1603c:	ldr	ip, [sp, #24]
   16040:	str	ip, [sp]
   16044:	str	ip, [sp, #4]
   16048:	movw	lr, #385	; 0x181
   1604c:	str	lr, [sp, #8]
   16050:	bl	15008 <test_json@@Base>
   16054:	ldr	r1, [pc, #140]	; 160e8 <base64_tests@@Base+0x224>
   16058:	add	r1, pc, r1
   1605c:	ldr	r2, [fp, #-4]
   16060:	orr	r0, r2, r0
   16064:	str	r0, [fp, #-4]
   16068:	ldr	r0, [fp, #-8]
   1606c:	movw	r2, #0
   16070:	str	r2, [sp, #20]
   16074:	movw	r3, #31
   16078:	ldr	ip, [sp, #20]
   1607c:	str	ip, [sp]
   16080:	str	ip, [sp, #4]
   16084:	movw	lr, #388	; 0x184
   16088:	str	lr, [sp, #8]
   1608c:	bl	15008 <test_json@@Base>
   16090:	ldr	r1, [pc, #76]	; 160e4 <base64_tests@@Base+0x220>
   16094:	add	r1, pc, r1
   16098:	ldr	r2, [fp, #-4]
   1609c:	orr	r0, r2, r0
   160a0:	str	r0, [fp, #-4]
   160a4:	ldr	r0, [fp, #-8]
   160a8:	movw	r2, #0
   160ac:	str	r2, [sp, #16]
   160b0:	movw	r3, #32
   160b4:	ldr	ip, [sp, #16]
   160b8:	str	ip, [sp]
   160bc:	str	ip, [sp, #4]
   160c0:	movw	lr, #391	; 0x187
   160c4:	str	lr, [sp, #8]
   160c8:	bl	15008 <test_json@@Base>
   160cc:	ldr	r1, [fp, #-4]
   160d0:	orr	r0, r1, r0
   160d4:	str	r0, [fp, #-4]
   160d8:	ldr	r0, [fp, #-4]
   160dc:	mov	sp, fp
   160e0:	pop	{fp, pc}
   160e4:	andeq	r1, r3, sl, asr #13
   160e8:	andeq	r1, r3, sp, asr #12
   160ec:	ldrdeq	r1, [r3], -r3
   160f0:	andeq	r1, r3, sp, asr r4
   160f4:	andeq	r1, r3, ip, asr r5
   160f8:	andeq	r1, r3, sp, lsr #6
   160fc:	andeq	r1, r3, r9, lsr #8
   16100:	ldrdeq	r1, [r3], -sp
   16104:	strdeq	r1, [r3], -ip
   16108:	andeq	r1, r3, sp, lsr #7
   1610c:	strdeq	r1, [r3], -r2
   16110:	andeq	r1, r3, r1, lsl r3
   16114:	andeq	r1, r3, r0, lsr #6
   16118:	andeq	r0, r3, r3, lsl ip
   1611c:	strdeq	r6, [r4], -r4

00016120 <mixed_type_union_tests@@Base>:
   16120:	push	{fp, lr}
   16124:	mov	fp, sp
   16128:	sub	sp, sp, #48	; 0x30
   1612c:	ldr	r0, [pc, #516]	; 16338 <mixed_type_union_tests@@Base+0x218>
   16130:	add	r1, pc, r0
   16134:	ldr	r0, [pc, #512]	; 1633c <mixed_type_union_tests@@Base+0x21c>
   16138:	add	r2, pc, r0
   1613c:	ldr	r0, [pc, #508]	; 16340 <mixed_type_union_tests@@Base+0x220>
   16140:	add	r0, pc, r0
   16144:	movw	r3, #0
   16148:	str	r3, [fp, #-4]
   1614c:	str	r0, [fp, #-8]
   16150:	ldr	r0, [fp, #-8]
   16154:	str	r3, [fp, #-12]
   16158:	ldr	ip, [fp, #-12]
   1615c:	str	ip, [sp]
   16160:	str	ip, [sp, #4]
   16164:	movw	lr, #432	; 0x1b0
   16168:	str	lr, [sp, #8]
   1616c:	bl	15008 <test_json@@Base>
   16170:	ldr	r1, [pc, #440]	; 16330 <mixed_type_union_tests@@Base+0x210>
   16174:	add	r1, pc, r1
   16178:	ldr	r2, [pc, #436]	; 16334 <mixed_type_union_tests@@Base+0x214>
   1617c:	add	r2, pc, r2
   16180:	ldr	r3, [fp, #-4]
   16184:	orr	r0, r3, r0
   16188:	str	r0, [fp, #-4]
   1618c:	ldr	r0, [fp, #-8]
   16190:	movw	r3, #0
   16194:	str	r3, [fp, #-16]
   16198:	ldr	ip, [fp, #-16]
   1619c:	str	ip, [sp]
   161a0:	str	ip, [sp, #4]
   161a4:	movw	lr, #437	; 0x1b5
   161a8:	str	lr, [sp, #8]
   161ac:	bl	15008 <test_json@@Base>
   161b0:	ldr	r1, [pc, #368]	; 16328 <mixed_type_union_tests@@Base+0x208>
   161b4:	add	r1, pc, r1
   161b8:	ldr	r2, [pc, #364]	; 1632c <mixed_type_union_tests@@Base+0x20c>
   161bc:	add	r2, pc, r2
   161c0:	ldr	r3, [fp, #-4]
   161c4:	orr	r0, r3, r0
   161c8:	str	r0, [fp, #-4]
   161cc:	ldr	r0, [fp, #-8]
   161d0:	movw	r3, #0
   161d4:	str	r3, [fp, #-20]	; 0xffffffec
   161d8:	ldr	ip, [fp, #-20]	; 0xffffffec
   161dc:	str	ip, [sp]
   161e0:	str	ip, [sp, #4]
   161e4:	movw	lr, #442	; 0x1ba
   161e8:	str	lr, [sp, #8]
   161ec:	bl	15008 <test_json@@Base>
   161f0:	ldr	r1, [pc, #296]	; 16320 <mixed_type_union_tests@@Base+0x200>
   161f4:	add	r1, pc, r1
   161f8:	ldr	r2, [pc, #292]	; 16324 <mixed_type_union_tests@@Base+0x204>
   161fc:	add	r2, pc, r2
   16200:	ldr	r3, [fp, #-4]
   16204:	orr	r0, r3, r0
   16208:	str	r0, [fp, #-4]
   1620c:	ldr	r0, [fp, #-8]
   16210:	movw	r3, #0
   16214:	str	r3, [sp, #24]
   16218:	ldr	ip, [sp, #24]
   1621c:	str	ip, [sp]
   16220:	str	ip, [sp, #4]
   16224:	movw	lr, #449	; 0x1c1
   16228:	str	lr, [sp, #8]
   1622c:	bl	15008 <test_json@@Base>
   16230:	ldr	r1, [pc, #224]	; 16318 <mixed_type_union_tests@@Base+0x1f8>
   16234:	add	r1, pc, r1
   16238:	ldr	r2, [pc, #220]	; 1631c <mixed_type_union_tests@@Base+0x1fc>
   1623c:	add	r2, pc, r2
   16240:	ldr	r3, [fp, #-4]
   16244:	orr	r0, r3, r0
   16248:	str	r0, [fp, #-4]
   1624c:	ldr	r0, [fp, #-8]
   16250:	movw	r3, #0
   16254:	str	r3, [sp, #20]
   16258:	ldr	ip, [sp, #20]
   1625c:	str	ip, [sp]
   16260:	str	ip, [sp, #4]
   16264:	movw	lr, #458	; 0x1ca
   16268:	str	lr, [sp, #8]
   1626c:	bl	15008 <test_json@@Base>
   16270:	ldr	r1, [pc, #152]	; 16310 <mixed_type_union_tests@@Base+0x1f0>
   16274:	add	r1, pc, r1
   16278:	ldr	r2, [pc, #148]	; 16314 <mixed_type_union_tests@@Base+0x1f4>
   1627c:	add	r2, pc, r2
   16280:	ldr	r3, [fp, #-4]
   16284:	orr	r0, r3, r0
   16288:	str	r0, [fp, #-4]
   1628c:	ldr	r0, [fp, #-8]
   16290:	movw	r3, #0
   16294:	str	r3, [sp, #16]
   16298:	ldr	ip, [sp, #16]
   1629c:	str	ip, [sp]
   162a0:	str	ip, [sp, #4]
   162a4:	movw	lr, #469	; 0x1d5
   162a8:	str	lr, [sp, #8]
   162ac:	bl	15008 <test_json@@Base>
   162b0:	ldr	r1, [pc, #80]	; 16308 <mixed_type_union_tests@@Base+0x1e8>
   162b4:	add	r1, pc, r1
   162b8:	ldr	r2, [pc, #76]	; 1630c <mixed_type_union_tests@@Base+0x1ec>
   162bc:	add	r2, pc, r2
   162c0:	ldr	r3, [fp, #-4]
   162c4:	orr	r0, r3, r0
   162c8:	str	r0, [fp, #-4]
   162cc:	ldr	r0, [fp, #-8]
   162d0:	movw	r3, #0
   162d4:	str	r3, [sp, #12]
   162d8:	ldr	ip, [sp, #12]
   162dc:	str	ip, [sp]
   162e0:	str	ip, [sp, #4]
   162e4:	movw	lr, #474	; 0x1da
   162e8:	str	lr, [sp, #8]
   162ec:	bl	15008 <test_json@@Base>
   162f0:	ldr	r1, [fp, #-4]
   162f4:	orr	r0, r1, r0
   162f8:	str	r0, [fp, #-4]
   162fc:	ldr	r0, [fp, #-4]
   16300:	mov	sp, fp
   16304:	pop	{fp, pc}
   16308:	andeq	r1, r3, sp, asr #27
   1630c:	andeq	r1, r3, r7, ror r6
   16310:	andeq	r1, r3, r6, asr #22
   16314:			; <UNDEFINED> instruction: 0x00031cbf
   16318:	andeq	r1, r3, r2, lsr #19
   1631c:	andeq	r1, r3, r0, lsr #21
   16320:	andeq	r1, r3, ip, asr #16
   16324:	andeq	r1, r3, r1, lsr #18
   16328:	strdeq	r1, [r3], -r6
   1632c:	andeq	r1, r3, r7, ror r7
   16330:	andeq	r1, r3, ip, lsr r7
   16334:			; <UNDEFINED> instruction: 0x000317b7
   16338:	andeq	r1, r3, sl, ror #13
   1633c:	andeq	r1, r3, r1, lsr r7
   16340:	andeq	r6, r4, r8, lsr #27

00016344 <union_vector_tests@@Base>:
   16344:	push	{fp, lr}
   16348:	mov	fp, sp
   1634c:	sub	sp, sp, #48	; 0x30
   16350:	ldr	r0, [pc, #444]	; 16514 <union_vector_tests@@Base+0x1d0>
   16354:	add	r1, pc, r0
   16358:	ldr	r0, [pc, #440]	; 16518 <union_vector_tests@@Base+0x1d4>
   1635c:	add	r2, pc, r0
   16360:	ldr	r0, [pc, #436]	; 1651c <union_vector_tests@@Base+0x1d8>
   16364:	add	r0, pc, r0
   16368:	movw	r3, #0
   1636c:	str	r3, [fp, #-4]
   16370:	str	r0, [fp, #-8]
   16374:	ldr	r0, [fp, #-8]
   16378:	str	r3, [fp, #-12]
   1637c:	ldr	ip, [fp, #-12]
   16380:	str	ip, [sp]
   16384:	str	ip, [sp, #4]
   16388:	movw	lr, #485	; 0x1e5
   1638c:	str	lr, [sp, #8]
   16390:	bl	15008 <test_json@@Base>
   16394:	ldr	r1, [pc, #368]	; 1650c <union_vector_tests@@Base+0x1c8>
   16398:	add	r1, pc, r1
   1639c:	ldr	r2, [pc, #364]	; 16510 <union_vector_tests@@Base+0x1cc>
   163a0:	add	r2, pc, r2
   163a4:	ldr	r3, [fp, #-4]
   163a8:	orr	r0, r3, r0
   163ac:	str	r0, [fp, #-4]
   163b0:	ldr	r0, [fp, #-8]
   163b4:	movw	r3, #0
   163b8:	str	r3, [fp, #-16]
   163bc:	ldr	ip, [fp, #-16]
   163c0:	str	ip, [sp]
   163c4:	str	ip, [sp, #4]
   163c8:	movw	lr, #488	; 0x1e8
   163cc:	str	lr, [sp, #8]
   163d0:	bl	15008 <test_json@@Base>
   163d4:	ldr	r1, [pc, #296]	; 16504 <union_vector_tests@@Base+0x1c0>
   163d8:	add	r1, pc, r1
   163dc:	ldr	r2, [pc, #292]	; 16508 <union_vector_tests@@Base+0x1c4>
   163e0:	add	r2, pc, r2
   163e4:	ldr	r3, [fp, #-4]
   163e8:	orr	r0, r3, r0
   163ec:	str	r0, [fp, #-4]
   163f0:	ldr	r0, [fp, #-8]
   163f4:	movw	r3, #0
   163f8:	str	r3, [fp, #-20]	; 0xffffffec
   163fc:	ldr	ip, [fp, #-20]	; 0xffffffec
   16400:	str	ip, [sp]
   16404:	str	ip, [sp, #4]
   16408:	movw	lr, #491	; 0x1eb
   1640c:	str	lr, [sp, #8]
   16410:	bl	15008 <test_json@@Base>
   16414:	ldr	r1, [pc, #224]	; 164fc <union_vector_tests@@Base+0x1b8>
   16418:	add	r1, pc, r1
   1641c:	ldr	r2, [pc, #220]	; 16500 <union_vector_tests@@Base+0x1bc>
   16420:	add	r2, pc, r2
   16424:	ldr	r3, [fp, #-4]
   16428:	orr	r0, r3, r0
   1642c:	str	r0, [fp, #-4]
   16430:	ldr	r0, [fp, #-8]
   16434:	movw	r3, #0
   16438:	str	r3, [sp, #24]
   1643c:	ldr	ip, [sp, #24]
   16440:	str	ip, [sp]
   16444:	str	ip, [sp, #4]
   16448:	movw	lr, #494	; 0x1ee
   1644c:	str	lr, [sp, #8]
   16450:	bl	15008 <test_json@@Base>
   16454:	ldr	r1, [pc, #152]	; 164f4 <union_vector_tests@@Base+0x1b0>
   16458:	add	r1, pc, r1
   1645c:	ldr	r2, [pc, #148]	; 164f8 <union_vector_tests@@Base+0x1b4>
   16460:	add	r2, pc, r2
   16464:	ldr	r3, [fp, #-4]
   16468:	orr	r0, r3, r0
   1646c:	str	r0, [fp, #-4]
   16470:	ldr	r0, [fp, #-8]
   16474:	movw	r3, #0
   16478:	str	r3, [sp, #20]
   1647c:	ldr	ip, [sp, #20]
   16480:	str	ip, [sp]
   16484:	str	ip, [sp, #4]
   16488:	movw	lr, #497	; 0x1f1
   1648c:	str	lr, [sp, #8]
   16490:	bl	15008 <test_json@@Base>
   16494:	ldr	r1, [pc, #80]	; 164ec <union_vector_tests@@Base+0x1a8>
   16498:	add	r1, pc, r1
   1649c:	ldr	r2, [pc, #76]	; 164f0 <union_vector_tests@@Base+0x1ac>
   164a0:	add	r2, pc, r2
   164a4:	ldr	r3, [fp, #-4]
   164a8:	orr	r0, r3, r0
   164ac:	str	r0, [fp, #-4]
   164b0:	ldr	r0, [fp, #-8]
   164b4:	movw	r3, #0
   164b8:	str	r3, [sp, #16]
   164bc:	ldr	ip, [sp, #16]
   164c0:	str	ip, [sp]
   164c4:	str	ip, [sp, #4]
   164c8:	movw	lr, #500	; 0x1f4
   164cc:	str	lr, [sp, #8]
   164d0:	bl	15008 <test_json@@Base>
   164d4:	ldr	r1, [fp, #-4]
   164d8:	orr	r0, r1, r0
   164dc:	str	r0, [fp, #-4]
   164e0:	ldr	r0, [fp, #-4]
   164e4:	mov	sp, fp
   164e8:	pop	{fp, pc}
   164ec:	andeq	r1, r3, r5, lsl #30
   164f0:	andeq	r1, r3, r3, ror #30
   164f4:	andeq	r1, r3, r6, lsl #30
   164f8:	andeq	r1, r3, lr, ror #25
   164fc:	andeq	r1, r3, sp, asr lr
   16500:	ldrdeq	r1, [r3], -r2
   16504:	andeq	r1, r3, ip, lsl #28
   16508:	andeq	r1, r3, r1, asr lr
   1650c:	andeq	r1, r3, lr, ror #27
   16510:	andeq	r1, r3, r9, lsl lr
   16514:			; <UNDEFINED> instruction: 0x00031dba
   16518:	strdeq	r1, [r3], -r2
   1651c:	muleq	r4, r4, fp

00016520 <main@@Base>:
   16520:	push	{fp, lr}
   16524:	mov	fp, sp
   16528:	sub	sp, sp, #176	; 0xb0
   1652c:	ldr	r0, [pc, #2936]	; 170ac <main@@Base+0xb8c>
   16530:	add	r0, pc, r0
   16534:	movw	r1, #0
   16538:	str	r1, [fp, #-4]
   1653c:	str	r1, [fp, #-8]
   16540:	str	r0, [fp, #-12]
   16544:	bl	158d0 <edge_case_tests@@Base>
   16548:	ldr	r1, [fp, #-8]
   1654c:	orr	r0, r1, r0
   16550:	str	r0, [fp, #-8]
   16554:	bl	15b98 <error_case_tests@@Base>
   16558:	ldr	r1, [fp, #-8]
   1655c:	orr	r0, r1, r0
   16560:	str	r0, [fp, #-8]
   16564:	bl	16344 <union_vector_tests@@Base>
   16568:	ldr	r1, [fp, #-8]
   1656c:	orr	r0, r1, r0
   16570:	str	r0, [fp, #-8]
   16574:	bl	15ec4 <base64_tests@@Base>
   16578:	ldr	r1, [fp, #-8]
   1657c:	orr	r0, r1, r0
   16580:	str	r0, [fp, #-8]
   16584:	bl	16120 <mixed_type_union_tests@@Base>
   16588:	ldr	r1, [pc, #2836]	; 170a4 <main@@Base+0xb84>
   1658c:	add	r1, pc, r1
   16590:	ldr	lr, [pc, #2832]	; 170a8 <main@@Base+0xb88>
   16594:	add	r2, pc, lr
   16598:	ldr	lr, [fp, #-8]
   1659c:	orr	r0, lr, r0
   165a0:	str	r0, [fp, #-8]
   165a4:	ldr	r0, [fp, #-12]
   165a8:	movw	lr, #0
   165ac:	mov	r3, lr
   165b0:	str	lr, [sp]
   165b4:	str	lr, [sp, #4]
   165b8:	movw	lr, #525	; 0x20d
   165bc:	str	lr, [sp, #8]
   165c0:	bl	15008 <test_json@@Base>
   165c4:	ldr	r1, [pc, #2768]	; 1709c <main@@Base+0xb7c>
   165c8:	add	r1, pc, r1
   165cc:	ldr	r2, [pc, #2764]	; 170a0 <main@@Base+0xb80>
   165d0:	add	r2, pc, r2
   165d4:	ldr	r3, [fp, #-8]
   165d8:	orr	r0, r3, r0
   165dc:	str	r0, [fp, #-8]
   165e0:	ldr	r0, [fp, #-12]
   165e4:	movw	r3, #0
   165e8:	str	r3, [fp, #-16]
   165ec:	ldr	lr, [fp, #-16]
   165f0:	str	lr, [sp]
   165f4:	str	lr, [sp, #4]
   165f8:	movw	ip, #528	; 0x210
   165fc:	str	ip, [sp, #8]
   16600:	bl	15008 <test_json@@Base>
   16604:	ldr	r1, [pc, #2696]	; 17094 <main@@Base+0xb74>
   16608:	add	r1, pc, r1
   1660c:	ldr	r2, [pc, #2692]	; 17098 <main@@Base+0xb78>
   16610:	add	r2, pc, r2
   16614:	ldr	r3, [fp, #-8]
   16618:	orr	r0, r3, r0
   1661c:	str	r0, [fp, #-8]
   16620:	ldr	r0, [fp, #-12]
   16624:	movw	r3, #0
   16628:	str	r3, [fp, #-20]	; 0xffffffec
   1662c:	ldr	ip, [fp, #-20]	; 0xffffffec
   16630:	str	ip, [sp]
   16634:	str	ip, [sp, #4]
   16638:	movw	lr, #531	; 0x213
   1663c:	str	lr, [sp, #8]
   16640:	bl	15008 <test_json@@Base>
   16644:	ldr	r1, [pc, #2624]	; 1708c <main@@Base+0xb6c>
   16648:	add	r1, pc, r1
   1664c:	ldr	r2, [pc, #2620]	; 17090 <main@@Base+0xb70>
   16650:	add	r2, pc, r2
   16654:	ldr	r3, [fp, #-8]
   16658:	orr	r0, r3, r0
   1665c:	str	r0, [fp, #-8]
   16660:	ldr	r0, [fp, #-12]
   16664:	movw	r3, #0
   16668:	str	r3, [fp, #-24]	; 0xffffffe8
   1666c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   16670:	str	ip, [sp]
   16674:	str	ip, [sp, #4]
   16678:	movw	lr, #534	; 0x216
   1667c:	str	lr, [sp, #8]
   16680:	bl	15008 <test_json@@Base>
   16684:	ldr	r1, [pc, #2552]	; 17084 <main@@Base+0xb64>
   16688:	add	r1, pc, r1
   1668c:	ldr	r2, [pc, #2548]	; 17088 <main@@Base+0xb68>
   16690:	add	r2, pc, r2
   16694:	ldr	r3, [fp, #-8]
   16698:	orr	r0, r3, r0
   1669c:	str	r0, [fp, #-8]
   166a0:	ldr	r0, [fp, #-12]
   166a4:	movw	r3, #0
   166a8:	str	r3, [fp, #-28]	; 0xffffffe4
   166ac:	ldr	ip, [fp, #-28]	; 0xffffffe4
   166b0:	str	ip, [sp]
   166b4:	str	ip, [sp, #4]
   166b8:	movw	lr, #537	; 0x219
   166bc:	str	lr, [sp, #8]
   166c0:	bl	15008 <test_json@@Base>
   166c4:	ldr	r1, [pc, #2480]	; 1707c <main@@Base+0xb5c>
   166c8:	add	r1, pc, r1
   166cc:	ldr	r2, [pc, #2476]	; 17080 <main@@Base+0xb60>
   166d0:	add	r2, pc, r2
   166d4:	ldr	r3, [fp, #-8]
   166d8:	orr	r0, r3, r0
   166dc:	str	r0, [fp, #-8]
   166e0:	ldr	r0, [fp, #-12]
   166e4:	movw	r3, #0
   166e8:	str	r3, [fp, #-32]	; 0xffffffe0
   166ec:	ldr	ip, [fp, #-32]	; 0xffffffe0
   166f0:	str	ip, [sp]
   166f4:	str	ip, [sp, #4]
   166f8:	movw	lr, #540	; 0x21c
   166fc:	str	lr, [sp, #8]
   16700:	bl	15008 <test_json@@Base>
   16704:	ldr	r1, [pc, #2408]	; 17074 <main@@Base+0xb54>
   16708:	add	r1, pc, r1
   1670c:	ldr	r2, [pc, #2404]	; 17078 <main@@Base+0xb58>
   16710:	add	r2, pc, r2
   16714:	ldr	r3, [fp, #-8]
   16718:	orr	r0, r3, r0
   1671c:	str	r0, [fp, #-8]
   16720:	ldr	r0, [fp, #-12]
   16724:	movw	r3, #0
   16728:	str	r3, [fp, #-36]	; 0xffffffdc
   1672c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16730:	str	ip, [sp]
   16734:	str	ip, [sp, #4]
   16738:	movw	lr, #543	; 0x21f
   1673c:	str	lr, [sp, #8]
   16740:	bl	15008 <test_json@@Base>
   16744:	ldr	r1, [pc, #2336]	; 1706c <main@@Base+0xb4c>
   16748:	add	r1, pc, r1
   1674c:	ldr	r2, [pc, #2332]	; 17070 <main@@Base+0xb50>
   16750:	add	r2, pc, r2
   16754:	ldr	r3, [fp, #-8]
   16758:	orr	r0, r3, r0
   1675c:	str	r0, [fp, #-8]
   16760:	ldr	r0, [fp, #-12]
   16764:	movw	r3, #0
   16768:	str	r3, [fp, #-40]	; 0xffffffd8
   1676c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   16770:	str	ip, [sp]
   16774:	str	ip, [sp, #4]
   16778:	movw	lr, #547	; 0x223
   1677c:	str	lr, [sp, #8]
   16780:	bl	15008 <test_json@@Base>
   16784:	ldr	r1, [pc, #2264]	; 17064 <main@@Base+0xb44>
   16788:	add	r1, pc, r1
   1678c:	ldr	r2, [pc, #2260]	; 17068 <main@@Base+0xb48>
   16790:	add	r2, pc, r2
   16794:	ldr	r3, [fp, #-8]
   16798:	orr	r0, r3, r0
   1679c:	str	r0, [fp, #-8]
   167a0:	ldr	r0, [fp, #-12]
   167a4:	movw	r3, #0
   167a8:	str	r3, [fp, #-44]	; 0xffffffd4
   167ac:	ldr	ip, [fp, #-44]	; 0xffffffd4
   167b0:	str	ip, [sp]
   167b4:	str	ip, [sp, #4]
   167b8:	movw	lr, #551	; 0x227
   167bc:	str	lr, [sp, #8]
   167c0:	bl	15008 <test_json@@Base>
   167c4:	ldr	r1, [pc, #2192]	; 1705c <main@@Base+0xb3c>
   167c8:	add	r1, pc, r1
   167cc:	ldr	r2, [pc, #2188]	; 17060 <main@@Base+0xb40>
   167d0:	add	r2, pc, r2
   167d4:	ldr	r3, [fp, #-8]
   167d8:	orr	r0, r3, r0
   167dc:	str	r0, [fp, #-8]
   167e0:	ldr	r0, [fp, #-12]
   167e4:	movw	r3, #0
   167e8:	str	r3, [fp, #-48]	; 0xffffffd0
   167ec:	ldr	ip, [fp, #-48]	; 0xffffffd0
   167f0:	str	ip, [sp]
   167f4:	str	ip, [sp, #4]
   167f8:	movw	lr, #601	; 0x259
   167fc:	str	lr, [sp, #8]
   16800:	bl	15008 <test_json@@Base>
   16804:	ldr	r1, [pc, #2120]	; 17054 <main@@Base+0xb34>
   16808:	add	r1, pc, r1
   1680c:	ldr	r2, [pc, #2116]	; 17058 <main@@Base+0xb38>
   16810:	add	r2, pc, r2
   16814:	ldr	r3, [fp, #-8]
   16818:	orr	r0, r3, r0
   1681c:	str	r0, [fp, #-8]
   16820:	ldr	r0, [fp, #-12]
   16824:	movw	r3, #0
   16828:	str	r3, [fp, #-52]	; 0xffffffcc
   1682c:	ldr	ip, [fp, #-52]	; 0xffffffcc
   16830:	str	ip, [sp]
   16834:	str	ip, [sp, #4]
   16838:	movw	lr, #604	; 0x25c
   1683c:	str	lr, [sp, #8]
   16840:	bl	15008 <test_json@@Base>
   16844:	ldr	r1, [pc, #2048]	; 1704c <main@@Base+0xb2c>
   16848:	add	r1, pc, r1
   1684c:	ldr	r2, [pc, #2044]	; 17050 <main@@Base+0xb30>
   16850:	add	r2, pc, r2
   16854:	ldr	r3, [fp, #-8]
   16858:	orr	r0, r3, r0
   1685c:	str	r0, [fp, #-8]
   16860:	ldr	r0, [fp, #-12]
   16864:	movw	r3, #0
   16868:	str	r3, [fp, #-56]	; 0xffffffc8
   1686c:	ldr	ip, [fp, #-56]	; 0xffffffc8
   16870:	str	ip, [sp]
   16874:	str	ip, [sp, #4]
   16878:	movw	lr, #607	; 0x25f
   1687c:	str	lr, [sp, #8]
   16880:	bl	15008 <test_json@@Base>
   16884:	ldr	r1, [pc, #1976]	; 17044 <main@@Base+0xb24>
   16888:	add	r1, pc, r1
   1688c:	ldr	r2, [pc, #1972]	; 17048 <main@@Base+0xb28>
   16890:	add	r2, pc, r2
   16894:	ldr	r3, [fp, #-8]
   16898:	orr	r0, r3, r0
   1689c:	str	r0, [fp, #-8]
   168a0:	ldr	r0, [fp, #-12]
   168a4:	movw	r3, #0
   168a8:	str	r3, [fp, #-60]	; 0xffffffc4
   168ac:	ldr	ip, [fp, #-60]	; 0xffffffc4
   168b0:	str	ip, [sp]
   168b4:	str	ip, [sp, #4]
   168b8:	movw	lr, #610	; 0x262
   168bc:	str	lr, [sp, #8]
   168c0:	bl	15008 <test_json@@Base>
   168c4:	ldr	r1, [pc, #1904]	; 1703c <main@@Base+0xb1c>
   168c8:	add	r1, pc, r1
   168cc:	ldr	r2, [pc, #1900]	; 17040 <main@@Base+0xb20>
   168d0:	add	r2, pc, r2
   168d4:	ldr	r3, [fp, #-8]
   168d8:	orr	r0, r3, r0
   168dc:	str	r0, [fp, #-8]
   168e0:	ldr	r0, [fp, #-12]
   168e4:	movw	r3, #0
   168e8:	str	r3, [fp, #-64]	; 0xffffffc0
   168ec:	ldr	ip, [fp, #-64]	; 0xffffffc0
   168f0:	str	ip, [sp]
   168f4:	str	ip, [sp, #4]
   168f8:	movw	lr, #613	; 0x265
   168fc:	str	lr, [sp, #8]
   16900:	bl	15008 <test_json@@Base>
   16904:	ldr	r1, [pc, #1832]	; 17034 <main@@Base+0xb14>
   16908:	add	r1, pc, r1
   1690c:	ldr	r2, [pc, #1828]	; 17038 <main@@Base+0xb18>
   16910:	add	r2, pc, r2
   16914:	ldr	r3, [fp, #-8]
   16918:	orr	r0, r3, r0
   1691c:	str	r0, [fp, #-8]
   16920:	ldr	r0, [fp, #-12]
   16924:	movw	r3, #0
   16928:	str	r3, [fp, #-68]	; 0xffffffbc
   1692c:	ldr	ip, [fp, #-68]	; 0xffffffbc
   16930:	str	ip, [sp]
   16934:	str	ip, [sp, #4]
   16938:	movw	lr, #616	; 0x268
   1693c:	str	lr, [sp, #8]
   16940:	bl	15008 <test_json@@Base>
   16944:	ldr	r1, [pc, #1760]	; 1702c <main@@Base+0xb0c>
   16948:	add	r1, pc, r1
   1694c:	ldr	r2, [pc, #1756]	; 17030 <main@@Base+0xb10>
   16950:	add	r2, pc, r2
   16954:	ldr	r3, [fp, #-8]
   16958:	orr	r0, r3, r0
   1695c:	str	r0, [fp, #-8]
   16960:	ldr	r0, [fp, #-12]
   16964:	movw	r3, #0
   16968:	str	r3, [fp, #-72]	; 0xffffffb8
   1696c:	ldr	ip, [fp, #-72]	; 0xffffffb8
   16970:	str	ip, [sp]
   16974:	str	ip, [sp, #4]
   16978:	movw	lr, #619	; 0x26b
   1697c:	str	lr, [sp, #8]
   16980:	bl	15008 <test_json@@Base>
   16984:	ldr	r1, [pc, #1688]	; 17024 <main@@Base+0xb04>
   16988:	add	r1, pc, r1
   1698c:	ldr	r2, [pc, #1684]	; 17028 <main@@Base+0xb08>
   16990:	add	r2, pc, r2
   16994:	ldr	r3, [fp, #-8]
   16998:	orr	r0, r3, r0
   1699c:	str	r0, [fp, #-8]
   169a0:	ldr	r0, [fp, #-12]
   169a4:	movw	r3, #0
   169a8:	str	r3, [fp, #-76]	; 0xffffffb4
   169ac:	ldr	ip, [fp, #-76]	; 0xffffffb4
   169b0:	str	ip, [sp]
   169b4:	str	ip, [sp, #4]
   169b8:	movw	lr, #622	; 0x26e
   169bc:	str	lr, [sp, #8]
   169c0:	bl	15008 <test_json@@Base>
   169c4:	ldr	r1, [pc, #1616]	; 1701c <main@@Base+0xafc>
   169c8:	add	r1, pc, r1
   169cc:	ldr	r2, [pc, #1612]	; 17020 <main@@Base+0xb00>
   169d0:	add	r2, pc, r2
   169d4:	ldr	r3, [fp, #-8]
   169d8:	orr	r0, r3, r0
   169dc:	str	r0, [fp, #-8]
   169e0:	ldr	r0, [fp, #-12]
   169e4:	movw	r3, #0
   169e8:	str	r3, [fp, #-80]	; 0xffffffb0
   169ec:	ldr	ip, [fp, #-80]	; 0xffffffb0
   169f0:	str	ip, [sp]
   169f4:	str	ip, [sp, #4]
   169f8:	movw	lr, #625	; 0x271
   169fc:	str	lr, [sp, #8]
   16a00:	bl	15008 <test_json@@Base>
   16a04:	ldr	r1, [pc, #1544]	; 17014 <main@@Base+0xaf4>
   16a08:	add	r1, pc, r1
   16a0c:	ldr	r2, [pc, #1540]	; 17018 <main@@Base+0xaf8>
   16a10:	add	r2, pc, r2
   16a14:	ldr	r3, [fp, #-8]
   16a18:	orr	r0, r3, r0
   16a1c:	str	r0, [fp, #-8]
   16a20:	ldr	r0, [fp, #-12]
   16a24:	movw	r3, #0
   16a28:	str	r3, [fp, #-84]	; 0xffffffac
   16a2c:	ldr	ip, [fp, #-84]	; 0xffffffac
   16a30:	str	ip, [sp]
   16a34:	str	ip, [sp, #4]
   16a38:	movw	lr, #628	; 0x274
   16a3c:	str	lr, [sp, #8]
   16a40:	bl	15008 <test_json@@Base>
   16a44:	ldr	r1, [pc, #1472]	; 1700c <main@@Base+0xaec>
   16a48:	add	r1, pc, r1
   16a4c:	ldr	r2, [pc, #1468]	; 17010 <main@@Base+0xaf0>
   16a50:	add	r2, pc, r2
   16a54:	ldr	r3, [fp, #-8]
   16a58:	orr	r0, r3, r0
   16a5c:	str	r0, [fp, #-8]
   16a60:	ldr	r0, [fp, #-12]
   16a64:	movw	r3, #0
   16a68:	str	r3, [sp, #88]	; 0x58
   16a6c:	ldr	ip, [sp, #88]	; 0x58
   16a70:	str	ip, [sp]
   16a74:	str	ip, [sp, #4]
   16a78:	movw	lr, #631	; 0x277
   16a7c:	str	lr, [sp, #8]
   16a80:	bl	15008 <test_json@@Base>
   16a84:	ldr	r1, [pc, #1400]	; 17004 <main@@Base+0xae4>
   16a88:	add	r1, pc, r1
   16a8c:	ldr	r2, [pc, #1396]	; 17008 <main@@Base+0xae8>
   16a90:	add	r2, pc, r2
   16a94:	ldr	r3, [fp, #-8]
   16a98:	orr	r0, r3, r0
   16a9c:	str	r0, [fp, #-8]
   16aa0:	ldr	r0, [fp, #-12]
   16aa4:	movw	r3, #0
   16aa8:	str	r3, [sp, #84]	; 0x54
   16aac:	ldr	ip, [sp, #84]	; 0x54
   16ab0:	str	ip, [sp]
   16ab4:	str	ip, [sp, #4]
   16ab8:	movw	lr, #634	; 0x27a
   16abc:	str	lr, [sp, #8]
   16ac0:	bl	15008 <test_json@@Base>
   16ac4:	ldr	r1, [pc, #1328]	; 16ffc <main@@Base+0xadc>
   16ac8:	add	r1, pc, r1
   16acc:	ldr	r2, [pc, #1324]	; 17000 <main@@Base+0xae0>
   16ad0:	add	r2, pc, r2
   16ad4:	ldr	r3, [fp, #-8]
   16ad8:	orr	r0, r3, r0
   16adc:	str	r0, [fp, #-8]
   16ae0:	ldr	r0, [fp, #-12]
   16ae4:	movw	r3, #0
   16ae8:	str	r3, [sp, #80]	; 0x50
   16aec:	ldr	ip, [sp, #80]	; 0x50
   16af0:	str	ip, [sp]
   16af4:	str	ip, [sp, #4]
   16af8:	movw	lr, #638	; 0x27e
   16afc:	str	lr, [sp, #8]
   16b00:	bl	15008 <test_json@@Base>
   16b04:	ldr	r1, [pc, #1256]	; 16ff4 <main@@Base+0xad4>
   16b08:	add	r1, pc, r1
   16b0c:	ldr	r2, [pc, #1252]	; 16ff8 <main@@Base+0xad8>
   16b10:	add	r2, pc, r2
   16b14:	ldr	r3, [fp, #-8]
   16b18:	orr	r0, r3, r0
   16b1c:	str	r0, [fp, #-8]
   16b20:	ldr	r0, [fp, #-12]
   16b24:	movw	r3, #0
   16b28:	str	r3, [sp, #76]	; 0x4c
   16b2c:	ldr	ip, [sp, #76]	; 0x4c
   16b30:	str	ip, [sp]
   16b34:	str	ip, [sp, #4]
   16b38:	movw	lr, #642	; 0x282
   16b3c:	str	lr, [sp, #8]
   16b40:	bl	15008 <test_json@@Base>
   16b44:	ldr	r1, [pc, #1184]	; 16fec <main@@Base+0xacc>
   16b48:	add	r1, pc, r1
   16b4c:	ldr	r2, [pc, #1180]	; 16ff0 <main@@Base+0xad0>
   16b50:	add	r2, pc, r2
   16b54:	ldr	r3, [fp, #-8]
   16b58:	orr	r0, r3, r0
   16b5c:	str	r0, [fp, #-8]
   16b60:	ldr	r0, [fp, #-12]
   16b64:	movw	r3, #0
   16b68:	str	r3, [sp, #72]	; 0x48
   16b6c:	ldr	ip, [sp, #72]	; 0x48
   16b70:	str	ip, [sp]
   16b74:	str	ip, [sp, #4]
   16b78:	movw	lr, #646	; 0x286
   16b7c:	str	lr, [sp, #8]
   16b80:	bl	15008 <test_json@@Base>
   16b84:	ldr	r1, [pc, #1112]	; 16fe4 <main@@Base+0xac4>
   16b88:	add	r1, pc, r1
   16b8c:	ldr	r2, [pc, #1108]	; 16fe8 <main@@Base+0xac8>
   16b90:	add	r2, pc, r2
   16b94:	ldr	r3, [fp, #-8]
   16b98:	orr	r0, r3, r0
   16b9c:	str	r0, [fp, #-8]
   16ba0:	ldr	r0, [fp, #-12]
   16ba4:	movw	r3, #0
   16ba8:	str	r3, [sp, #68]	; 0x44
   16bac:	ldr	ip, [sp, #68]	; 0x44
   16bb0:	str	ip, [sp]
   16bb4:	str	ip, [sp, #4]
   16bb8:	movw	lr, #649	; 0x289
   16bbc:	str	lr, [sp, #8]
   16bc0:	bl	15008 <test_json@@Base>
   16bc4:	ldr	r1, [pc, #1040]	; 16fdc <main@@Base+0xabc>
   16bc8:	add	r1, pc, r1
   16bcc:	ldr	r2, [pc, #1036]	; 16fe0 <main@@Base+0xac0>
   16bd0:	add	r2, pc, r2
   16bd4:	ldr	r3, [fp, #-8]
   16bd8:	orr	r0, r3, r0
   16bdc:	str	r0, [fp, #-8]
   16be0:	ldr	r0, [fp, #-12]
   16be4:	movw	r3, #0
   16be8:	str	r3, [sp, #64]	; 0x40
   16bec:	ldr	ip, [sp, #64]	; 0x40
   16bf0:	str	ip, [sp]
   16bf4:	str	ip, [sp, #4]
   16bf8:	movw	lr, #716	; 0x2cc
   16bfc:	str	lr, [sp, #8]
   16c00:	bl	15008 <test_json@@Base>
   16c04:	ldr	r1, [pc, #968]	; 16fd4 <main@@Base+0xab4>
   16c08:	add	r1, pc, r1
   16c0c:	ldr	r2, [pc, #964]	; 16fd8 <main@@Base+0xab8>
   16c10:	add	r2, pc, r2
   16c14:	ldr	r3, [fp, #-8]
   16c18:	orr	r0, r3, r0
   16c1c:	str	r0, [fp, #-8]
   16c20:	ldr	r0, [fp, #-12]
   16c24:	movw	r3, #0
   16c28:	str	r3, [sp, #60]	; 0x3c
   16c2c:	ldr	ip, [sp, #60]	; 0x3c
   16c30:	str	ip, [sp]
   16c34:	str	ip, [sp, #4]
   16c38:	movw	lr, #731	; 0x2db
   16c3c:	str	lr, [sp, #8]
   16c40:	bl	15008 <test_json@@Base>
   16c44:	ldr	r1, [pc, #896]	; 16fcc <main@@Base+0xaac>
   16c48:	add	r1, pc, r1
   16c4c:	ldr	r2, [pc, #892]	; 16fd0 <main@@Base+0xab0>
   16c50:	add	r2, pc, r2
   16c54:	ldr	r3, [fp, #-8]
   16c58:	orr	r0, r3, r0
   16c5c:	str	r0, [fp, #-8]
   16c60:	ldr	r0, [fp, #-12]
   16c64:	movw	r3, #0
   16c68:	str	r3, [sp, #56]	; 0x38
   16c6c:	ldr	ip, [sp, #56]	; 0x38
   16c70:	str	ip, [sp]
   16c74:	str	ip, [sp, #4]
   16c78:	movw	lr, #734	; 0x2de
   16c7c:	str	lr, [sp, #8]
   16c80:	bl	15008 <test_json@@Base>
   16c84:	ldr	r1, [pc, #824]	; 16fc4 <main@@Base+0xaa4>
   16c88:	add	r1, pc, r1
   16c8c:	ldr	r2, [pc, #820]	; 16fc8 <main@@Base+0xaa8>
   16c90:	add	r2, pc, r2
   16c94:	ldr	r3, [fp, #-8]
   16c98:	orr	r0, r3, r0
   16c9c:	str	r0, [fp, #-8]
   16ca0:	ldr	r0, [fp, #-12]
   16ca4:	movw	r3, #0
   16ca8:	str	r3, [sp, #52]	; 0x34
   16cac:	ldr	ip, [sp, #52]	; 0x34
   16cb0:	str	ip, [sp]
   16cb4:	str	ip, [sp, #4]
   16cb8:	movw	lr, #738	; 0x2e2
   16cbc:	str	lr, [sp, #8]
   16cc0:	bl	15008 <test_json@@Base>
   16cc4:	ldr	r1, [pc, #752]	; 16fbc <main@@Base+0xa9c>
   16cc8:	add	r1, pc, r1
   16ccc:	ldr	r2, [pc, #748]	; 16fc0 <main@@Base+0xaa0>
   16cd0:	add	r2, pc, r2
   16cd4:	ldr	r3, [fp, #-8]
   16cd8:	orr	r0, r3, r0
   16cdc:	str	r0, [fp, #-8]
   16ce0:	ldr	r0, [fp, #-12]
   16ce4:	movw	r3, #0
   16ce8:	str	r3, [sp, #48]	; 0x30
   16cec:	ldr	ip, [sp, #48]	; 0x30
   16cf0:	str	ip, [sp]
   16cf4:	str	ip, [sp, #4]
   16cf8:	movw	lr, #750	; 0x2ee
   16cfc:	str	lr, [sp, #8]
   16d00:	bl	15008 <test_json@@Base>
   16d04:	ldr	r1, [pc, #680]	; 16fb4 <main@@Base+0xa94>
   16d08:	add	r1, pc, r1
   16d0c:	ldr	r2, [pc, #676]	; 16fb8 <main@@Base+0xa98>
   16d10:	add	r2, pc, r2
   16d14:	ldr	r3, [fp, #-8]
   16d18:	orr	r0, r3, r0
   16d1c:	str	r0, [fp, #-8]
   16d20:	ldr	r0, [fp, #-12]
   16d24:	movw	r3, #0
   16d28:	str	r3, [sp, #44]	; 0x2c
   16d2c:	ldr	ip, [sp, #44]	; 0x2c
   16d30:	str	ip, [sp]
   16d34:	str	ip, [sp, #4]
   16d38:	movw	lr, #766	; 0x2fe
   16d3c:	str	lr, [sp, #8]
   16d40:	bl	15008 <test_json@@Base>
   16d44:	ldr	r1, [pc, #608]	; 16fac <main@@Base+0xa8c>
   16d48:	add	r1, pc, r1
   16d4c:	ldr	r2, [pc, #604]	; 16fb0 <main@@Base+0xa90>
   16d50:	add	r2, pc, r2
   16d54:	ldr	r3, [fp, #-8]
   16d58:	orr	r0, r3, r0
   16d5c:	str	r0, [fp, #-8]
   16d60:	ldr	r0, [fp, #-12]
   16d64:	movw	r3, #0
   16d68:	str	r3, [sp, #40]	; 0x28
   16d6c:	ldr	ip, [sp, #40]	; 0x28
   16d70:	str	ip, [sp]
   16d74:	str	ip, [sp, #4]
   16d78:	movw	lr, #770	; 0x302
   16d7c:	str	lr, [sp, #8]
   16d80:	bl	15008 <test_json@@Base>
   16d84:	ldr	r1, [pc, #536]	; 16fa4 <main@@Base+0xa84>
   16d88:	add	r1, pc, r1
   16d8c:	ldr	r2, [pc, #532]	; 16fa8 <main@@Base+0xa88>
   16d90:	add	r2, pc, r2
   16d94:	ldr	r3, [fp, #-8]
   16d98:	orr	r0, r3, r0
   16d9c:	str	r0, [fp, #-8]
   16da0:	ldr	r0, [fp, #-12]
   16da4:	movw	r3, #0
   16da8:	str	r3, [sp, #36]	; 0x24
   16dac:	ldr	ip, [sp, #36]	; 0x24
   16db0:	str	ip, [sp]
   16db4:	str	ip, [sp, #4]
   16db8:	movw	lr, #776	; 0x308
   16dbc:	str	lr, [sp, #8]
   16dc0:	bl	15008 <test_json@@Base>
   16dc4:	ldr	r1, [pc, #464]	; 16f9c <main@@Base+0xa7c>
   16dc8:	add	r1, pc, r1
   16dcc:	ldr	r2, [pc, #460]	; 16fa0 <main@@Base+0xa80>
   16dd0:	add	r2, pc, r2
   16dd4:	ldr	r3, [fp, #-8]
   16dd8:	orr	r0, r3, r0
   16ddc:	str	r0, [fp, #-8]
   16de0:	ldr	r0, [fp, #-12]
   16de4:	movw	r3, #0
   16de8:	str	r3, [sp, #32]
   16dec:	ldr	ip, [sp, #32]
   16df0:	str	ip, [sp]
   16df4:	str	ip, [sp, #4]
   16df8:	movw	lr, #781	; 0x30d
   16dfc:	str	lr, [sp, #8]
   16e00:	bl	15008 <test_json@@Base>
   16e04:	ldr	r1, [pc, #392]	; 16f94 <main@@Base+0xa74>
   16e08:	add	r1, pc, r1
   16e0c:	ldr	r2, [pc, #388]	; 16f98 <main@@Base+0xa78>
   16e10:	add	r2, pc, r2
   16e14:	ldr	r3, [fp, #-8]
   16e18:	orr	r0, r3, r0
   16e1c:	str	r0, [fp, #-8]
   16e20:	ldr	r0, [fp, #-12]
   16e24:	movw	r3, #0
   16e28:	str	r3, [sp, #28]
   16e2c:	ldr	ip, [sp, #28]
   16e30:	str	ip, [sp]
   16e34:	str	ip, [sp, #4]
   16e38:	movw	lr, #786	; 0x312
   16e3c:	str	lr, [sp, #8]
   16e40:	bl	15008 <test_json@@Base>
   16e44:	ldr	r1, [pc, #320]	; 16f8c <main@@Base+0xa6c>
   16e48:	add	r1, pc, r1
   16e4c:	ldr	r2, [pc, #316]	; 16f90 <main@@Base+0xa70>
   16e50:	add	r2, pc, r2
   16e54:	ldr	r3, [fp, #-8]
   16e58:	orr	r0, r3, r0
   16e5c:	str	r0, [fp, #-8]
   16e60:	ldr	r0, [fp, #-12]
   16e64:	movw	r3, #0
   16e68:	str	r3, [sp, #24]
   16e6c:	ldr	ip, [sp, #24]
   16e70:	str	ip, [sp]
   16e74:	str	ip, [sp, #4]
   16e78:	movw	lr, #791	; 0x317
   16e7c:	str	lr, [sp, #8]
   16e80:	bl	15008 <test_json@@Base>
   16e84:	ldr	r1, [pc, #248]	; 16f84 <main@@Base+0xa64>
   16e88:	add	r1, pc, r1
   16e8c:	ldr	r2, [pc, #244]	; 16f88 <main@@Base+0xa68>
   16e90:	add	r2, pc, r2
   16e94:	ldr	r3, [fp, #-8]
   16e98:	orr	r0, r3, r0
   16e9c:	str	r0, [fp, #-8]
   16ea0:	ldr	r0, [fp, #-12]
   16ea4:	movw	r3, #0
   16ea8:	str	r3, [sp, #20]
   16eac:	ldr	ip, [sp, #20]
   16eb0:	str	ip, [sp]
   16eb4:	str	ip, [sp, #4]
   16eb8:	movw	lr, #796	; 0x31c
   16ebc:	str	lr, [sp, #8]
   16ec0:	bl	15008 <test_json@@Base>
   16ec4:	ldr	r1, [pc, #176]	; 16f7c <main@@Base+0xa5c>
   16ec8:	add	r1, pc, r1
   16ecc:	ldr	r2, [pc, #172]	; 16f80 <main@@Base+0xa60>
   16ed0:	add	r2, pc, r2
   16ed4:	ldr	r3, [fp, #-8]
   16ed8:	orr	r0, r3, r0
   16edc:	str	r0, [fp, #-8]
   16ee0:	ldr	r0, [fp, #-12]
   16ee4:	movw	r3, #0
   16ee8:	str	r3, [sp, #16]
   16eec:	ldr	ip, [sp, #16]
   16ef0:	str	ip, [sp]
   16ef4:	str	ip, [sp, #4]
   16ef8:	movw	lr, #801	; 0x321
   16efc:	str	lr, [sp, #8]
   16f00:	bl	15008 <test_json@@Base>
   16f04:	ldr	r1, [pc, #104]	; 16f74 <main@@Base+0xa54>
   16f08:	add	r1, pc, r1
   16f0c:	ldr	r2, [pc, #100]	; 16f78 <main@@Base+0xa58>
   16f10:	add	r2, pc, r2
   16f14:	ldr	r3, [fp, #-8]
   16f18:	orr	r0, r3, r0
   16f1c:	str	r0, [fp, #-8]
   16f20:	ldr	r0, [fp, #-12]
   16f24:	movw	r3, #0
   16f28:	str	r3, [sp, #12]
   16f2c:	ldr	ip, [sp, #12]
   16f30:	str	ip, [sp]
   16f34:	str	ip, [sp, #4]
   16f38:	movw	lr, #806	; 0x326
   16f3c:	str	lr, [sp, #8]
   16f40:	bl	15008 <test_json@@Base>
   16f44:	ldr	r1, [fp, #-8]
   16f48:	orr	r0, r1, r0
   16f4c:	str	r0, [fp, #-8]
   16f50:	ldr	r0, [fp, #-8]
   16f54:	cmp	r0, #0
   16f58:	movw	r0, #0
   16f5c:	movne	r0, #1
   16f60:	tst	r0, #1
   16f64:	mvn	r0, #0
   16f68:	moveq	r0, #0
   16f6c:	mov	sp, fp
   16f70:	pop	{fp, pc}
   16f74:	andeq	r2, r3, lr, ror #7
   16f78:	andeq	r2, r3, r5, ror r4
   16f7c:	andeq	r2, r3, r5, lsr #6
   16f80:	andeq	r2, r3, r7, lsr #7
   16f84:	andeq	r2, r3, sl, ror r2
   16f88:	andeq	r2, r3, sp, ror #5
   16f8c:			; <UNDEFINED> instruction: 0x000321b1
   16f90:	andeq	r2, r3, r4, lsr r2
   16f94:	andeq	r2, r3, r8, lsl #2
   16f98:	andeq	r2, r3, sl, ror r1
   16f9c:	ldrdeq	r2, [r3], -r0
   16fa0:	andeq	pc, r2, pc, lsl sp	; <UNPREDICTABLE>
   16fa4:	andeq	r2, r3, r5, lsr #32
   16fa8:	muleq	r3, r8, r0
   16fac:	andeq	r2, r3, ip
   16fb0:	andeq	r2, r3, r3, lsr r0
   16fb4:	andeq	r2, r3, r3
   16fb8:	andeq	r2, r3, r2, lsr #32
   16fbc:	andeq	r1, r3, r6, lsr #31
   16fc0:	andeq	r1, r3, sp, asr pc
   16fc4:	andeq	r1, r3, sp, asr pc
   16fc8:	muleq	r3, sp, pc	; <UNPREDICTABLE>
   16fcc:	andeq	r1, r3, r1, ror pc
   16fd0:	andeq	r1, r3, r3, lsl #31
   16fd4:	andeq	r1, r3, r4, asr #30
   16fd8:	andeq	r1, r3, r9, ror pc
   16fdc:			; <UNDEFINED> instruction: 0x00031eb9
   16fe0:	andeq	r1, r3, lr, lsl pc
   16fe4:	ldrdeq	r1, [r3], -r3
   16fe8:	andeq	pc, r2, pc, asr pc	; <UNPREDICTABLE>
   16fec:	andeq	r1, r3, r8, ror #29
   16ff0:	muleq	r2, pc, pc	; <UNPREDICTABLE>
   16ff4:	andeq	r1, r3, r7, asr lr
   16ff8:			; <UNDEFINED> instruction: 0x00031ebe
   16ffc:	strdeq	r1, [r3], -r8
   17000:	andeq	r1, r3, r5, asr #28
   17004:	andeq	r1, r3, r0, lsr #27
   17008:	andeq	r1, r3, r9, ror #27
   1700c:	muleq	r3, ip, sp
   17010:			; <UNDEFINED> instruction: 0x00031dbe
   17014:	ldrdeq	r1, [r3], -ip
   17018:	strdeq	r1, [r3], -lr
   1701c:	andeq	r1, r3, r2, ror #27
   17020:	andeq	r1, r3, sp, asr #21
   17024:	strdeq	r1, [r3], -r7
   17028:	andeq	r1, r3, sp, lsl #22
   1702c:	strdeq	r1, [r3], -r9
   17030:	andeq	r1, r3, r2, lsl lr
   17034:	strdeq	r1, [r3], -r9
   17038:	andeq	r1, r3, r3, lsl lr
   1703c:	strdeq	r1, [r3], -r9
   17040:	andeq	r1, r3, r3, lsl lr
   17044:	andeq	r1, r3, r7, lsl lr
   17048:	andeq	r1, r3, sl, lsr #25
   1704c:	andeq	r1, r3, r0, lsl lr
   17050:	andeq	r1, r3, r9, lsr #28
   17054:	andeq	r1, r3, pc, lsr #28
   17058:	ldrdeq	r1, [r3], -r6
   1705c:	andeq	r1, r3, lr, asr #28
   17060:	andeq	r1, r3, sp, asr #25
   17064:	andeq	r0, r3, r0, ror #5
   17068:	andeq	r0, r3, pc, asr r3
   1706c:	andeq	r1, r3, r7, lsr #29
   17070:	muleq	r3, pc, r3	; <UNPREDICTABLE>
   17074:			; <UNDEFINED> instruction: 0x00031ebe
   17078:	ldrdeq	r1, [r3], -r6
   1707c:	ldrdeq	r1, [r3], -r8
   17080:	andeq	r1, r3, sp, asr #27
   17084:	ldrdeq	r1, [r3], -lr
   17088:	andeq	r1, r3, sl, lsr #29
   1708c:	andeq	r1, r3, r1, asr #29
   17090:	andeq	r1, r3, sl, ror #29
   17094:			; <UNDEFINED> instruction: 0x00031eb6
   17098:	ldrdeq	r1, [r3], -r6
   1709c:	andeq	r1, r3, lr, lsr #29
   170a0:	andeq	r1, r3, sp, asr #29
   170a4:	ldrdeq	r1, [r3], -r3
   170a8:	andeq	r0, r3, fp, asr r5
   170ac:	andeq	r6, r4, r8, lsr #19
   170b0:	sub	sp, sp, #8
   170b4:	str	r0, [sp, #4]
   170b8:	strb	r1, [sp, #3]
   170bc:	ldrb	r0, [sp, #3]
   170c0:	ldr	r1, [sp, #4]
   170c4:	strb	r0, [r1, #25]
   170c8:	add	sp, sp, #8
   170cc:	bx	lr
   170d0:	push	{fp, lr}
   170d4:	mov	fp, sp
   170d8:	sub	sp, sp, #8
   170dc:	str	r0, [sp, #4]
   170e0:	ldr	r0, [sp, #4]
   170e4:	movw	r1, #2
   170e8:	and	r1, r1, #255	; 0xff
   170ec:	bl	170b0 <main@@Base+0xb90>
   170f0:	ldr	r0, [sp, #4]
   170f4:	movw	r1, #1
   170f8:	bl	17110 <main@@Base+0xbf0>
   170fc:	ldr	r0, [sp, #4]
   17100:	movw	r1, #0
   17104:	bl	1714c <main@@Base+0xc2c>
   17108:	mov	sp, fp
   1710c:	pop	{fp, pc}
   17110:	sub	sp, sp, #8
   17114:	str	r0, [sp, #4]
   17118:	str	r1, [sp]
   1711c:	ldr	r0, [sp]
   17120:	cmp	r0, #0
   17124:	movw	r0, #0
   17128:	movne	r0, #1
   1712c:	mvn	r1, #0
   17130:	eor	r0, r0, r1
   17134:	eor	r0, r0, r1
   17138:	and	r0, r0, #1
   1713c:	ldr	r1, [sp, #4]
   17140:	strb	r0, [r1, #26]
   17144:	add	sp, sp, #8
   17148:	bx	lr
   1714c:	sub	sp, sp, #8
   17150:	str	r0, [sp, #4]
   17154:	str	r1, [sp]
   17158:	ldr	r0, [sp]
   1715c:	cmp	r0, #0
   17160:	movw	r0, #0
   17164:	movne	r0, #1
   17168:	mvn	r1, #0
   1716c:	eor	r0, r0, r1
   17170:	eor	r0, r0, r1
   17174:	and	r0, r0, #1
   17178:	ldr	r1, [sp, #4]
   1717c:	strb	r0, [r1, #27]
   17180:	add	sp, sp, #8
   17184:	bx	lr
   17188:	push	{r4, r5, fp, lr}
   1718c:	add	fp, sp, #8
   17190:	sub	sp, sp, #280	; 0x118
   17194:	str	r0, [fp, #-16]
   17198:	str	r1, [fp, #-20]	; 0xffffffec
   1719c:	str	r2, [fp, #-24]	; 0xffffffe8
   171a0:	str	r3, [fp, #-28]	; 0xffffffe4
   171a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   171a8:	movw	r1, #0
   171ac:	str	r1, [r0]
   171b0:	ldr	r0, [fp, #-16]
   171b4:	ldr	r0, [r0]
   171b8:	movw	r1, #36	; 0x24
   171bc:	bl	2baec <flatcc_builder_start_table@@Base>
   171c0:	cmp	r0, #0
   171c4:	beq	171cc <main@@Base+0xcac>
   171c8:	b	1abac <main@@Base+0x468c>
   171cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171d0:	ldr	r1, [fp, #-16]
   171d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   171d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   171dc:	str	r0, [sp, #124]	; 0x7c
   171e0:	mov	r0, r1
   171e4:	mov	r1, r2
   171e8:	mov	r2, r3
   171ec:	movw	r3, #1
   171f0:	sub	ip, fp, #60	; 0x3c
   171f4:	str	ip, [sp]
   171f8:	bl	366ac <flatcc_json_parser_prepare_unions@@Base>
   171fc:	ldr	r1, [sp, #124]	; 0x7c
   17200:	cmp	r1, r0
   17204:	bne	1720c <main@@Base+0xcec>
   17208:	b	1abac <main@@Base+0x468c>
   1720c:	ldr	r0, [fp, #-16]
   17210:	ldr	r1, [fp, #-20]	; 0xffffffec
   17214:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17218:	sub	r3, fp, #32
   1721c:	bl	1bba8 <main@@Base+0x5688>
   17220:	str	r0, [fp, #-20]	; 0xffffffec
   17224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17228:	cmp	r0, #0
   1722c:	beq	1ab14 <main@@Base+0x45f4>
   17230:	ldr	r0, [fp, #-16]
   17234:	ldr	r1, [fp, #-20]	; 0xffffffec
   17238:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1723c:	bl	1bc8c <main@@Base+0x576c>
   17240:	str	r0, [fp, #-20]	; 0xffffffec
   17244:	ldr	r0, [fp, #-20]	; 0xffffffec
   17248:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1724c:	bl	1bd10 <main@@Base+0x57f0>
   17250:	str	r1, [fp, #-52]	; 0xffffffcc
   17254:	str	r0, [fp, #-56]	; 0xffffffc8
   17258:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1725c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17260:	movw	r2, #29280	; 0x7260
   17264:	movt	r2, #24946	; 0x6172
   17268:	subs	r0, r2, r0
   1726c:	movw	r2, #29556	; 0x7374
   17270:	movt	r2, #29797	; 0x7465
   17274:	sbcs	r1, r2, r1
   17278:	str	r0, [sp, #120]	; 0x78
   1727c:	str	r1, [sp, #116]	; 0x74
   17280:	bcc	1842c <main@@Base+0x1f0c>
   17284:	b	17288 <main@@Base+0xd68>
   17288:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1728c:	movw	r1, #28004	; 0x6d64
   17290:	movt	r1, #28257	; 0x6e61
   17294:	cmp	r0, r1
   17298:	bhi	17c0c <main@@Base+0x16ec>
   1729c:	b	172a0 <main@@Base+0xd80>
   172a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   172a4:	movw	r1, #25975	; 0x6577
   172a8:	movt	r1, #26220	; 0x666c
   172ac:	cmp	r0, r1
   172b0:	bhi	174f0 <main@@Base+0xfd0>
   172b4:	b	172b8 <main@@Base+0xd98>
   172b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   172bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   172c0:	and	r0, r0, #-16777216	; 0xff000000
   172c4:	movw	r2, #25965	; 0x656d
   172c8:	movt	r2, #25966	; 0x656e
   172cc:	eor	r1, r1, r2
   172d0:	eor	r0, r0, #2030043136	; 0x79000000
   172d4:	orr	r0, r0, r1
   172d8:	cmp	r0, #0
   172dc:	bne	17380 <main@@Base+0xe60>
   172e0:	b	172e4 <main@@Base+0xdc4>
   172e4:	ldr	r0, [fp, #-16]
   172e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   172ec:	str	r1, [fp, #-48]	; 0xffffffd0
   172f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   172f4:	movw	r3, #5
   172f8:	bl	1bd48 <main@@Base+0x5828>
   172fc:	str	r0, [fp, #-20]	; 0xffffffec
   17300:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17304:	ldr	r1, [fp, #-20]	; 0xffffffec
   17308:	cmp	r0, r1
   1730c:	beq	17368 <main@@Base+0xe48>
   17310:	ldr	r0, [fp, #-16]
   17314:	ldr	r1, [fp, #-20]	; 0xffffffec
   17318:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1731c:	sub	r3, fp, #40	; 0x28
   17320:	bl	17188 <main@@Base+0xc68>
   17324:	str	r0, [fp, #-20]	; 0xffffffec
   17328:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1732c:	cmp	r0, #0
   17330:	beq	17354 <main@@Base+0xe34>
   17334:	ldr	r0, [fp, #-16]
   17338:	ldr	r0, [r0]
   1733c:	movw	r1, #12
   17340:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   17344:	str	r0, [fp, #-44]	; 0xffffffd4
   17348:	movw	r1, #0
   1734c:	cmp	r0, r1
   17350:	bne	17358 <main@@Base+0xe38>
   17354:	b	1abac <main@@Base+0x468c>
   17358:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1735c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17360:	str	r0, [r1]
   17364:	b	1737c <main@@Base+0xe5c>
   17368:	ldr	r0, [fp, #-16]
   1736c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17370:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17374:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17378:	str	r0, [fp, #-20]	; 0xffffffec
   1737c:	b	174ec <main@@Base+0xfcc>
   17380:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17384:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17388:	and	r0, r0, #-16777216	; 0xff000000
   1738c:	movw	r2, #27759	; 0x6c6f
   17390:	movt	r2, #25455	; 0x636f
   17394:	eor	r1, r1, r2
   17398:	eor	r0, r0, #1912602624	; 0x72000000
   1739c:	orr	r0, r0, r1
   173a0:	cmp	r0, #0
   173a4:	bne	174d4 <main@@Base+0xfb4>
   173a8:	b	173ac <main@@Base+0xe8c>
   173ac:	ldr	r0, [fp, #-16]
   173b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   173b4:	str	r1, [fp, #-48]	; 0xffffffd0
   173b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   173bc:	movw	r3, #5
   173c0:	bl	1bd48 <main@@Base+0x5828>
   173c4:	str	r0, [fp, #-20]	; 0xffffffec
   173c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   173cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   173d0:	cmp	r0, r1
   173d4:	beq	174bc <main@@Base+0xf9c>
   173d8:	movw	r0, #0
   173dc:	strb	r0, [fp, #-61]	; 0xffffffc3
   173e0:	ldr	r0, [fp, #-16]
   173e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   173e8:	str	r1, [fp, #-48]	; 0xffffffd0
   173ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   173f0:	sub	r3, fp, #61	; 0x3d
   173f4:	bl	1d258 <main@@Base+0x6d38>
   173f8:	str	r0, [fp, #-20]	; 0xffffffec
   173fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17400:	ldr	r1, [fp, #-20]	; 0xffffffec
   17404:	cmp	r0, r1
   17408:	bne	1745c <main@@Base+0xf3c>
   1740c:	ldr	r0, [pc, #4076]	; 18400 <main@@Base+0x1ee0>
   17410:	add	r3, pc, r0
   17414:	ldr	r0, [fp, #-16]
   17418:	ldr	r1, [fp, #-20]	; 0xffffffec
   1741c:	str	r1, [fp, #-48]	; 0xffffffd0
   17420:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17424:	sub	ip, fp, #61	; 0x3d
   17428:	str	ip, [sp]
   1742c:	bl	1d334 <main@@Base+0x6e14>
   17430:	str	r0, [fp, #-20]	; 0xffffffec
   17434:	ldr	r0, [fp, #-20]	; 0xffffffec
   17438:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1743c:	cmp	r0, r1
   17440:	beq	17454 <main@@Base+0xf34>
   17444:	ldr	r0, [fp, #-20]	; 0xffffffec
   17448:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1744c:	cmp	r0, r1
   17450:	bne	17458 <main@@Base+0xf38>
   17454:	b	1abac <main@@Base+0x468c>
   17458:	b	1745c <main@@Base+0xf3c>
   1745c:	ldrsb	r0, [fp, #-61]	; 0xffffffc3
   17460:	cmp	r0, #8
   17464:	bne	1747c <main@@Base+0xf5c>
   17468:	ldr	r0, [fp, #-16]
   1746c:	ldr	r0, [r0, #8]
   17470:	and	r0, r0, #2
   17474:	cmp	r0, #0
   17478:	beq	174b8 <main@@Base+0xf98>
   1747c:	ldr	r0, [fp, #-16]
   17480:	ldr	r0, [r0]
   17484:	movw	r1, #6
   17488:	movw	r2, #1
   1748c:	movw	r3, #1
   17490:	uxth	r3, r3
   17494:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   17498:	str	r0, [fp, #-36]	; 0xffffffdc
   1749c:	movw	r1, #0
   174a0:	cmp	r0, r1
   174a4:	bne	174ac <main@@Base+0xf8c>
   174a8:	b	1abac <main@@Base+0x468c>
   174ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   174b0:	ldrsb	r1, [fp, #-61]	; 0xffffffc3
   174b4:	bl	1d518 <main@@Base+0x6ff8>
   174b8:	b	174d0 <main@@Base+0xfb0>
   174bc:	ldr	r0, [fp, #-16]
   174c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   174c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174c8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   174cc:	str	r0, [fp, #-20]	; 0xffffffec
   174d0:	b	174e8 <main@@Base+0xfc8>
   174d4:	ldr	r0, [fp, #-16]
   174d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   174dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174e0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   174e4:	str	r0, [fp, #-20]	; 0xffffffec
   174e8:	b	174ec <main@@Base+0xfcc>
   174ec:	b	17c08 <main@@Base+0x16e8>
   174f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   174f4:	movw	r1, #65535	; 0xffff
   174f8:	movt	r1, #26735	; 0x686f
   174fc:	cmp	r0, r1
   17500:	bhi	176e8 <main@@Base+0x11c8>
   17504:	b	17508 <main@@Base+0xfe8>
   17508:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1750c:	movw	r1, #25976	; 0x6578
   17510:	movt	r1, #26220	; 0x666c
   17514:	teq	r0, r1
   17518:	bne	176d0 <main@@Base+0x11b0>
   1751c:	b	17520 <main@@Base+0x1000>
   17520:	ldr	r0, [fp, #-16]
   17524:	ldr	r1, [fp, #-20]	; 0xffffffec
   17528:	str	r1, [fp, #-48]	; 0xffffffd0
   1752c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17530:	movw	r3, #4
   17534:	bl	1bd48 <main@@Base+0x5828>
   17538:	str	r0, [fp, #-20]	; 0xffffffec
   1753c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17540:	ldr	r1, [fp, #-20]	; 0xffffffec
   17544:	cmp	r0, r1
   17548:	beq	176b8 <main@@Base+0x1198>
   1754c:	ldr	r0, [fp, #-16]
   17550:	ldr	r0, [r0]
   17554:	movw	r1, #1
   17558:	movw	r2, #1
   1755c:	uxth	r2, r2
   17560:	mvn	r3, #0
   17564:	bl	2b678 <flatcc_builder_start_vector@@Base>
   17568:	cmp	r0, #0
   1756c:	beq	17574 <main@@Base+0x1054>
   17570:	b	1abac <main@@Base+0x468c>
   17574:	ldr	r0, [fp, #-16]
   17578:	ldr	r1, [fp, #-20]	; 0xffffffec
   1757c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17580:	sub	r3, fp, #32
   17584:	bl	1d544 <main@@Base+0x7024>
   17588:	str	r0, [fp, #-20]	; 0xffffffec
   1758c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17590:	cmp	r0, #0
   17594:	beq	17668 <main@@Base+0x1148>
   17598:	movw	r0, #0
   1759c:	strb	r0, [fp, #-62]	; 0xffffffc2
   175a0:	ldr	r0, [fp, #-16]
   175a4:	ldr	r0, [r0]
   175a8:	movw	r1, #1
   175ac:	bl	2ab7c <flatcc_builder_extend_vector@@Base>
   175b0:	str	r0, [fp, #-36]	; 0xffffffdc
   175b4:	movw	r1, #0
   175b8:	cmp	r0, r1
   175bc:	bne	175c4 <main@@Base+0x10a4>
   175c0:	b	1abac <main@@Base+0x468c>
   175c4:	ldr	r0, [fp, #-16]
   175c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   175cc:	str	r1, [fp, #-48]	; 0xffffffd0
   175d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175d4:	sub	r3, fp, #62	; 0x3e
   175d8:	bl	1d628 <main@@Base+0x7108>
   175dc:	str	r0, [fp, #-20]	; 0xffffffec
   175e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   175e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   175e8:	cmp	r0, r1
   175ec:	bne	17640 <main@@Base+0x1120>
   175f0:	ldr	r0, [pc, #4024]	; 185b0 <main@@Base+0x2090>
   175f4:	add	r3, pc, r0
   175f8:	ldr	r0, [fp, #-16]
   175fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   17600:	str	r1, [fp, #-48]	; 0xffffffd0
   17604:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17608:	sub	ip, fp, #62	; 0x3e
   1760c:	str	ip, [sp]
   17610:	bl	1d704 <main@@Base+0x71e4>
   17614:	str	r0, [fp, #-20]	; 0xffffffec
   17618:	ldr	r0, [fp, #-20]	; 0xffffffec
   1761c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17620:	cmp	r0, r1
   17624:	beq	17638 <main@@Base+0x1118>
   17628:	ldr	r0, [fp, #-20]	; 0xffffffec
   1762c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17630:	cmp	r0, r1
   17634:	bne	1763c <main@@Base+0x111c>
   17638:	b	1abac <main@@Base+0x468c>
   1763c:	b	17640 <main@@Base+0x1120>
   17640:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17644:	ldrb	r1, [fp, #-62]	; 0xffffffc2
   17648:	bl	1d8e8 <main@@Base+0x73c8>
   1764c:	ldr	r0, [fp, #-16]
   17650:	ldr	r1, [fp, #-20]	; 0xffffffec
   17654:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17658:	sub	r3, fp, #32
   1765c:	bl	1d914 <main@@Base+0x73f4>
   17660:	str	r0, [fp, #-20]	; 0xffffffec
   17664:	b	1758c <main@@Base+0x106c>
   17668:	ldr	r0, [fp, #-16]
   1766c:	ldr	r0, [r0]
   17670:	bl	2cb6c <flatcc_builder_end_vector@@Base>
   17674:	str	r0, [fp, #-40]	; 0xffffffd8
   17678:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1767c:	cmp	r0, #0
   17680:	beq	176a4 <main@@Base+0x1184>
   17684:	ldr	r0, [fp, #-16]
   17688:	ldr	r0, [r0]
   1768c:	movw	r1, #30
   17690:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   17694:	str	r0, [fp, #-44]	; 0xffffffd4
   17698:	movw	r1, #0
   1769c:	cmp	r0, r1
   176a0:	bne	176a8 <main@@Base+0x1188>
   176a4:	b	1abac <main@@Base+0x468c>
   176a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   176ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   176b0:	str	r0, [r1]
   176b4:	b	176cc <main@@Base+0x11ac>
   176b8:	ldr	r0, [fp, #-16]
   176bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   176c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176c4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   176c8:	str	r0, [fp, #-20]	; 0xffffffec
   176cc:	b	176e4 <main@@Base+0x11c4>
   176d0:	ldr	r0, [fp, #-16]
   176d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   176d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176dc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   176e0:	str	r0, [fp, #-20]	; 0xffffffec
   176e4:	b	17c04 <main@@Base+0x16e4>
   176e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   176ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   176f0:	movw	r2, #28529	; 0x6f71
   176f4:	movt	r2, #28276	; 0x6e74
   176f8:	subs	r0, r2, r0
   176fc:	movw	r2, #30309	; 0x7665
   17700:	movt	r2, #26990	; 0x696e
   17704:	sbcs	r1, r2, r1
   17708:	str	r0, [sp, #112]	; 0x70
   1770c:	str	r1, [sp, #108]	; 0x6c
   17710:	bcc	17878 <main@@Base+0x1358>
   17714:	b	17718 <main@@Base+0x11f8>
   17718:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1771c:	bfc	r0, #0, #16
   17720:	movw	r1, #0
   17724:	movt	r1, #26736	; 0x6870
   17728:	teq	r0, r1
   1772c:	bne	17860 <main@@Base+0x1340>
   17730:	b	17734 <main@@Base+0x1214>
   17734:	ldr	r0, [fp, #-16]
   17738:	ldr	r1, [fp, #-20]	; 0xffffffec
   1773c:	str	r1, [fp, #-48]	; 0xffffffd0
   17740:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17744:	movw	r3, #2
   17748:	bl	1bd48 <main@@Base+0x5828>
   1774c:	str	r0, [fp, #-20]	; 0xffffffec
   17750:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17754:	ldr	r1, [fp, #-20]	; 0xffffffec
   17758:	cmp	r0, r1
   1775c:	beq	17848 <main@@Base+0x1328>
   17760:	movw	r0, #0
   17764:	strh	r0, [fp, #-64]	; 0xffffffc0
   17768:	ldr	r0, [fp, #-16]
   1776c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17770:	str	r1, [fp, #-48]	; 0xffffffd0
   17774:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17778:	sub	r3, fp, #64	; 0x40
   1777c:	bl	1da78 <main@@Base+0x7558>
   17780:	str	r0, [fp, #-20]	; 0xffffffec
   17784:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17788:	ldr	r1, [fp, #-20]	; 0xffffffec
   1778c:	cmp	r0, r1
   17790:	bne	177e4 <main@@Base+0x12c4>
   17794:	ldr	r0, [pc, #4088]	; 18794 <main@@Base+0x2274>
   17798:	add	r3, pc, r0
   1779c:	ldr	r0, [fp, #-16]
   177a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   177a4:	str	r1, [fp, #-48]	; 0xffffffd0
   177a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177ac:	sub	ip, fp, #64	; 0x40
   177b0:	str	ip, [sp]
   177b4:	bl	1db54 <main@@Base+0x7634>
   177b8:	str	r0, [fp, #-20]	; 0xffffffec
   177bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   177c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   177c4:	cmp	r0, r1
   177c8:	beq	177dc <main@@Base+0x12bc>
   177cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   177d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177d4:	cmp	r0, r1
   177d8:	bne	177e0 <main@@Base+0x12c0>
   177dc:	b	1abac <main@@Base+0x468c>
   177e0:	b	177e4 <main@@Base+0x12c4>
   177e4:	ldrsh	r0, [fp, #-64]	; 0xffffffc0
   177e8:	cmp	r0, #100	; 0x64
   177ec:	bne	17804 <main@@Base+0x12e4>
   177f0:	ldr	r0, [fp, #-16]
   177f4:	ldr	r0, [r0, #8]
   177f8:	and	r0, r0, #2
   177fc:	cmp	r0, #0
   17800:	beq	17844 <main@@Base+0x1324>
   17804:	ldr	r0, [fp, #-16]
   17808:	ldr	r0, [r0]
   1780c:	movw	r1, #2
   17810:	str	r1, [sp, #104]	; 0x68
   17814:	ldr	r2, [sp, #104]	; 0x68
   17818:	movw	r3, #2
   1781c:	uxth	r3, r3
   17820:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   17824:	str	r0, [fp, #-36]	; 0xffffffdc
   17828:	movw	r1, #0
   1782c:	cmp	r0, r1
   17830:	bne	17838 <main@@Base+0x1318>
   17834:	b	1abac <main@@Base+0x468c>
   17838:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1783c:	ldrsh	r1, [fp, #-64]	; 0xffffffc0
   17840:	bl	1dd38 <main@@Base+0x7818>
   17844:	b	1785c <main@@Base+0x133c>
   17848:	ldr	r0, [fp, #-16]
   1784c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17850:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17854:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17858:	str	r0, [fp, #-20]	; 0xffffffec
   1785c:	b	17874 <main@@Base+0x1354>
   17860:	ldr	r0, [fp, #-16]
   17864:	ldr	r1, [fp, #-20]	; 0xffffffec
   17868:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1786c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17870:	str	r0, [fp, #-20]	; 0xffffffec
   17874:	b	17c00 <main@@Base+0x16e0>
   17878:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1787c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17880:	movw	r2, #30309	; 0x7665
   17884:	movt	r2, #26990	; 0x696e
   17888:	eor	r1, r1, r2
   1788c:	movw	r2, #28530	; 0x6f72
   17890:	movt	r2, #28276	; 0x6e74
   17894:	eor	r0, r0, r2
   17898:	orr	r0, r0, r1
   1789c:	cmp	r0, #0
   178a0:	bne	17aa4 <main@@Base+0x1584>
   178a4:	b	178a8 <main@@Base+0x1388>
   178a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   178ac:	add	r0, r0, #8
   178b0:	str	r0, [fp, #-20]	; 0xffffffec
   178b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   178b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178bc:	bl	1bd10 <main@@Base+0x57f0>
   178c0:	str	r1, [fp, #-52]	; 0xffffffcc
   178c4:	str	r0, [fp, #-56]	; 0xffffffc8
   178c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   178cc:	and	r0, r0, #-16777216	; 0xff000000
   178d0:	teq	r0, #2030043136	; 0x79000000
   178d4:	bne	17a8c <main@@Base+0x156c>
   178d8:	b	178dc <main@@Base+0x13bc>
   178dc:	ldr	r0, [fp, #-16]
   178e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   178e4:	str	r1, [fp, #-48]	; 0xffffffd0
   178e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   178ec:	movw	r3, #1
   178f0:	bl	1bd48 <main@@Base+0x5828>
   178f4:	str	r0, [fp, #-20]	; 0xffffffec
   178f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   178fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   17900:	cmp	r0, r1
   17904:	beq	17a74 <main@@Base+0x1554>
   17908:	ldr	r0, [fp, #-16]
   1790c:	ldr	r0, [r0]
   17910:	movw	r1, #1
   17914:	movw	r2, #1
   17918:	uxth	r2, r2
   1791c:	mvn	r3, #0
   17920:	bl	2b678 <flatcc_builder_start_vector@@Base>
   17924:	cmp	r0, #0
   17928:	beq	17930 <main@@Base+0x1410>
   1792c:	b	1abac <main@@Base+0x468c>
   17930:	ldr	r0, [fp, #-16]
   17934:	ldr	r1, [fp, #-20]	; 0xffffffec
   17938:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1793c:	sub	r3, fp, #32
   17940:	bl	1d544 <main@@Base+0x7024>
   17944:	str	r0, [fp, #-20]	; 0xffffffec
   17948:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1794c:	cmp	r0, #0
   17950:	beq	17a24 <main@@Base+0x1504>
   17954:	movw	r0, #0
   17958:	strb	r0, [fp, #-65]	; 0xffffffbf
   1795c:	ldr	r0, [fp, #-16]
   17960:	ldr	r0, [r0]
   17964:	movw	r1, #1
   17968:	bl	2ab7c <flatcc_builder_extend_vector@@Base>
   1796c:	str	r0, [fp, #-36]	; 0xffffffdc
   17970:	movw	r1, #0
   17974:	cmp	r0, r1
   17978:	bne	17980 <main@@Base+0x1460>
   1797c:	b	1abac <main@@Base+0x468c>
   17980:	ldr	r0, [fp, #-16]
   17984:	ldr	r1, [fp, #-20]	; 0xffffffec
   17988:	str	r1, [fp, #-48]	; 0xffffffd0
   1798c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17990:	sub	r3, fp, #65	; 0x41
   17994:	bl	1d628 <main@@Base+0x7108>
   17998:	str	r0, [fp, #-20]	; 0xffffffec
   1799c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   179a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   179a4:	cmp	r0, r1
   179a8:	bne	179fc <main@@Base+0x14dc>
   179ac:	ldr	r0, [pc, #4012]	; 18960 <main@@Base+0x2440>
   179b0:	add	r3, pc, r0
   179b4:	ldr	r0, [fp, #-16]
   179b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   179bc:	str	r1, [fp, #-48]	; 0xffffffd0
   179c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   179c4:	sub	ip, fp, #65	; 0x41
   179c8:	str	ip, [sp]
   179cc:	bl	1d704 <main@@Base+0x71e4>
   179d0:	str	r0, [fp, #-20]	; 0xffffffec
   179d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   179d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   179dc:	cmp	r0, r1
   179e0:	beq	179f4 <main@@Base+0x14d4>
   179e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   179e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179ec:	cmp	r0, r1
   179f0:	bne	179f8 <main@@Base+0x14d8>
   179f4:	b	1abac <main@@Base+0x468c>
   179f8:	b	179fc <main@@Base+0x14dc>
   179fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17a00:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   17a04:	bl	1d8e8 <main@@Base+0x73c8>
   17a08:	ldr	r0, [fp, #-16]
   17a0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a14:	sub	r3, fp, #32
   17a18:	bl	1d914 <main@@Base+0x73f4>
   17a1c:	str	r0, [fp, #-20]	; 0xffffffec
   17a20:	b	17948 <main@@Base+0x1428>
   17a24:	ldr	r0, [fp, #-16]
   17a28:	ldr	r0, [r0]
   17a2c:	bl	2cb6c <flatcc_builder_end_vector@@Base>
   17a30:	str	r0, [fp, #-40]	; 0xffffffd8
   17a34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17a38:	cmp	r0, #0
   17a3c:	beq	17a60 <main@@Base+0x1540>
   17a40:	ldr	r0, [fp, #-16]
   17a44:	ldr	r0, [r0]
   17a48:	movw	r1, #5
   17a4c:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   17a50:	str	r0, [fp, #-44]	; 0xffffffd4
   17a54:	movw	r1, #0
   17a58:	cmp	r0, r1
   17a5c:	bne	17a64 <main@@Base+0x1544>
   17a60:	b	1abac <main@@Base+0x468c>
   17a64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17a68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17a6c:	str	r0, [r1]
   17a70:	b	17a88 <main@@Base+0x1568>
   17a74:	ldr	r0, [fp, #-16]
   17a78:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a80:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17a84:	str	r0, [fp, #-20]	; 0xffffffec
   17a88:	b	17aa0 <main@@Base+0x1580>
   17a8c:	ldr	r0, [fp, #-16]
   17a90:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a98:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17a9c:	str	r0, [fp, #-20]	; 0xffffffec
   17aa0:	b	17bfc <main@@Base+0x16dc>
   17aa4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17aa8:	movw	r1, #28257	; 0x6e61
   17aac:	movt	r1, #28001	; 0x6d61
   17ab0:	teq	r0, r1
   17ab4:	bne	17be4 <main@@Base+0x16c4>
   17ab8:	b	17abc <main@@Base+0x159c>
   17abc:	ldr	r0, [fp, #-16]
   17ac0:	ldr	r1, [fp, #-20]	; 0xffffffec
   17ac4:	str	r1, [fp, #-48]	; 0xffffffd0
   17ac8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17acc:	movw	r3, #4
   17ad0:	bl	1bd48 <main@@Base+0x5828>
   17ad4:	str	r0, [fp, #-20]	; 0xffffffec
   17ad8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17adc:	ldr	r1, [fp, #-20]	; 0xffffffec
   17ae0:	cmp	r0, r1
   17ae4:	beq	17bcc <main@@Base+0x16ac>
   17ae8:	movw	r0, #0
   17aec:	strh	r0, [fp, #-68]	; 0xffffffbc
   17af0:	ldr	r0, [fp, #-16]
   17af4:	ldr	r1, [fp, #-20]	; 0xffffffec
   17af8:	str	r1, [fp, #-48]	; 0xffffffd0
   17afc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17b00:	sub	r3, fp, #68	; 0x44
   17b04:	bl	1da78 <main@@Base+0x7558>
   17b08:	str	r0, [fp, #-20]	; 0xffffffec
   17b0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17b10:	ldr	r1, [fp, #-20]	; 0xffffffec
   17b14:	cmp	r0, r1
   17b18:	bne	17b6c <main@@Base+0x164c>
   17b1c:	ldr	r0, [pc, #3988]	; 18ab8 <main@@Base+0x2598>
   17b20:	add	r3, pc, r0
   17b24:	ldr	r0, [fp, #-16]
   17b28:	ldr	r1, [fp, #-20]	; 0xffffffec
   17b2c:	str	r1, [fp, #-48]	; 0xffffffd0
   17b30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17b34:	sub	ip, fp, #68	; 0x44
   17b38:	str	ip, [sp]
   17b3c:	bl	1db54 <main@@Base+0x7634>
   17b40:	str	r0, [fp, #-20]	; 0xffffffec
   17b44:	ldr	r0, [fp, #-20]	; 0xffffffec
   17b48:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17b4c:	cmp	r0, r1
   17b50:	beq	17b64 <main@@Base+0x1644>
   17b54:	ldr	r0, [fp, #-20]	; 0xffffffec
   17b58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b5c:	cmp	r0, r1
   17b60:	bne	17b68 <main@@Base+0x1648>
   17b64:	b	1abac <main@@Base+0x468c>
   17b68:	b	17b6c <main@@Base+0x164c>
   17b6c:	ldrsh	r0, [fp, #-68]	; 0xffffffbc
   17b70:	cmp	r0, #150	; 0x96
   17b74:	bne	17b8c <main@@Base+0x166c>
   17b78:	ldr	r0, [fp, #-16]
   17b7c:	ldr	r0, [r0, #8]
   17b80:	and	r0, r0, #2
   17b84:	cmp	r0, #0
   17b88:	beq	17bc8 <main@@Base+0x16a8>
   17b8c:	ldr	r0, [fp, #-16]
   17b90:	ldr	r0, [r0]
   17b94:	movw	r1, #1
   17b98:	movw	r2, #2
   17b9c:	movw	r3, #2
   17ba0:	uxth	r3, r3
   17ba4:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   17ba8:	str	r0, [fp, #-36]	; 0xffffffdc
   17bac:	movw	r1, #0
   17bb0:	cmp	r0, r1
   17bb4:	bne	17bbc <main@@Base+0x169c>
   17bb8:	b	1abac <main@@Base+0x468c>
   17bbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17bc0:	ldrsh	r1, [fp, #-68]	; 0xffffffbc
   17bc4:	bl	1dd38 <main@@Base+0x7818>
   17bc8:	b	17be0 <main@@Base+0x16c0>
   17bcc:	ldr	r0, [fp, #-16]
   17bd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   17bd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17bd8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17bdc:	str	r0, [fp, #-20]	; 0xffffffec
   17be0:	b	17bf8 <main@@Base+0x16d8>
   17be4:	ldr	r0, [fp, #-16]
   17be8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17bec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17bf0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17bf4:	str	r0, [fp, #-20]	; 0xffffffec
   17bf8:	b	17bfc <main@@Base+0x16dc>
   17bfc:	b	17c00 <main@@Base+0x16e0>
   17c00:	b	17c04 <main@@Base+0x16e4>
   17c04:	b	17c08 <main@@Base+0x16e8>
   17c08:	b	18428 <main@@Base+0x1f08>
   17c0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17c10:	movw	r1, #29555	; 0x7373
   17c14:	movt	r1, #29797	; 0x7465
   17c18:	cmp	r0, r1
   17c1c:	bhi	17f84 <main@@Base+0x1a64>
   17c20:	b	17c24 <main@@Base+0x1704>
   17c24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17c28:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17c2c:	movw	r2, #24429	; 0x5f6d
   17c30:	movt	r2, #28276	; 0x6e74
   17c34:	subs	r0, r2, r0
   17c38:	movw	r2, #29285	; 0x7265
   17c3c:	movt	r2, #28769	; 0x7061
   17c40:	sbcs	r1, r2, r1
   17c44:	str	r0, [sp, #100]	; 0x64
   17c48:	str	r1, [sp, #96]	; 0x60
   17c4c:	bcc	17d20 <main@@Base+0x1800>
   17c50:	b	17c54 <main@@Base+0x1734>
   17c54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17c58:	movw	r1, #28005	; 0x6d65
   17c5c:	movt	r1, #28257	; 0x6e61
   17c60:	teq	r0, r1
   17c64:	bne	17d08 <main@@Base+0x17e8>
   17c68:	b	17c6c <main@@Base+0x174c>
   17c6c:	ldr	r0, [fp, #-16]
   17c70:	ldr	r1, [fp, #-20]	; 0xffffffec
   17c74:	str	r1, [fp, #-48]	; 0xffffffd0
   17c78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17c7c:	movw	r3, #4
   17c80:	bl	1bd48 <main@@Base+0x5828>
   17c84:	str	r0, [fp, #-20]	; 0xffffffec
   17c88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17c8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17c90:	cmp	r0, r1
   17c94:	beq	17cf0 <main@@Base+0x17d0>
   17c98:	ldr	r0, [fp, #-16]
   17c9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17ca0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17ca4:	sub	r3, fp, #40	; 0x28
   17ca8:	bl	364a4 <flatcc_json_parser_build_string@@Base>
   17cac:	str	r0, [fp, #-20]	; 0xffffffec
   17cb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17cb4:	cmp	r0, #0
   17cb8:	beq	17cdc <main@@Base+0x17bc>
   17cbc:	ldr	r0, [fp, #-16]
   17cc0:	ldr	r0, [r0]
   17cc4:	movw	r1, #3
   17cc8:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   17ccc:	str	r0, [fp, #-44]	; 0xffffffd4
   17cd0:	movw	r1, #0
   17cd4:	cmp	r0, r1
   17cd8:	bne	17ce0 <main@@Base+0x17c0>
   17cdc:	b	1abac <main@@Base+0x468c>
   17ce0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ce4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17ce8:	str	r0, [r1]
   17cec:	b	17d04 <main@@Base+0x17e4>
   17cf0:	ldr	r0, [fp, #-16]
   17cf4:	ldr	r1, [fp, #-20]	; 0xffffffec
   17cf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17cfc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17d00:	str	r0, [fp, #-20]	; 0xffffffec
   17d04:	b	17d1c <main@@Base+0x17fc>
   17d08:	ldr	r0, [fp, #-16]
   17d0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17d10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d14:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17d18:	str	r0, [fp, #-20]	; 0xffffffec
   17d1c:	b	17f80 <main@@Base+0x1a60>
   17d20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17d24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17d28:	movw	r2, #29285	; 0x7265
   17d2c:	movt	r2, #28769	; 0x7061
   17d30:	eor	r1, r1, r2
   17d34:	movw	r2, #24430	; 0x5f6e
   17d38:	movt	r2, #28276	; 0x6e74
   17d3c:	eor	r0, r0, r2
   17d40:	orr	r0, r0, r1
   17d44:	cmp	r0, #0
   17d48:	bne	17eb8 <main@@Base+0x1998>
   17d4c:	b	17d50 <main@@Base+0x1830>
   17d50:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d54:	add	r0, r0, #8
   17d58:	str	r0, [fp, #-20]	; 0xffffffec
   17d5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d64:	bl	1bd10 <main@@Base+0x57f0>
   17d68:	str	r1, [fp, #-52]	; 0xffffffcc
   17d6c:	str	r0, [fp, #-56]	; 0xffffffc8
   17d70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17d74:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17d78:	movw	lr, #25971	; 0x6573
   17d7c:	movt	lr, #24941	; 0x616d
   17d80:	eor	r1, r1, lr
   17d84:	movw	lr, #25445	; 0x6365
   17d88:	movt	lr, #28769	; 0x7061
   17d8c:	eor	r0, r0, lr
   17d90:	orr	r0, r0, r1
   17d94:	cmp	r0, #0
   17d98:	bne	17ea0 <main@@Base+0x1980>
   17d9c:	b	17da0 <main@@Base+0x1880>
   17da0:	ldr	r0, [fp, #-20]	; 0xffffffec
   17da4:	add	r0, r0, #8
   17da8:	str	r0, [fp, #-20]	; 0xffffffec
   17dac:	ldr	r0, [fp, #-20]	; 0xffffffec
   17db0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17db4:	bl	1bd10 <main@@Base+0x57f0>
   17db8:	str	r1, [fp, #-52]	; 0xffffffcc
   17dbc:	str	r0, [fp, #-56]	; 0xffffffc8
   17dc0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17dc4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17dc8:	and	r0, r0, #-16777216	; 0xff000000
   17dcc:	movw	lr, #25971	; 0x6573
   17dd0:	movt	lr, #24436	; 0x5f74
   17dd4:	eor	r1, r1, lr
   17dd8:	eor	r0, r0, #1946157056	; 0x74000000
   17ddc:	orr	r0, r0, r1
   17de0:	cmp	r0, #0
   17de4:	bne	17e88 <main@@Base+0x1968>
   17de8:	b	17dec <main@@Base+0x18cc>
   17dec:	ldr	r0, [fp, #-16]
   17df0:	ldr	r1, [fp, #-20]	; 0xffffffec
   17df4:	str	r1, [fp, #-48]	; 0xffffffd0
   17df8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17dfc:	movw	r3, #5
   17e00:	bl	1bd48 <main@@Base+0x5828>
   17e04:	str	r0, [fp, #-20]	; 0xffffffec
   17e08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17e10:	cmp	r0, r1
   17e14:	beq	17e70 <main@@Base+0x1950>
   17e18:	ldr	r0, [fp, #-16]
   17e1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17e20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17e24:	sub	r3, fp, #40	; 0x28
   17e28:	bl	1dd64 <main@@Base+0x7844>
   17e2c:	str	r0, [fp, #-20]	; 0xffffffec
   17e30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17e34:	cmp	r0, #0
   17e38:	beq	17e5c <main@@Base+0x193c>
   17e3c:	ldr	r0, [fp, #-16]
   17e40:	ldr	r0, [r0]
   17e44:	movw	r1, #34	; 0x22
   17e48:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   17e4c:	str	r0, [fp, #-44]	; 0xffffffd4
   17e50:	movw	r1, #0
   17e54:	cmp	r0, r1
   17e58:	bne	17e60 <main@@Base+0x1940>
   17e5c:	b	1abac <main@@Base+0x468c>
   17e60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17e64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17e68:	str	r0, [r1]
   17e6c:	b	17e84 <main@@Base+0x1964>
   17e70:	ldr	r0, [fp, #-16]
   17e74:	ldr	r1, [fp, #-20]	; 0xffffffec
   17e78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17e7c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17e80:	str	r0, [fp, #-20]	; 0xffffffec
   17e84:	b	17e9c <main@@Base+0x197c>
   17e88:	ldr	r0, [fp, #-16]
   17e8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17e90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17e94:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17e98:	str	r0, [fp, #-20]	; 0xffffffec
   17e9c:	b	17eb4 <main@@Base+0x1994>
   17ea0:	ldr	r0, [fp, #-16]
   17ea4:	ldr	r1, [fp, #-20]	; 0xffffffec
   17ea8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17eac:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17eb0:	str	r0, [fp, #-20]	; 0xffffffec
   17eb4:	b	17f7c <main@@Base+0x1a5c>
   17eb8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17ebc:	bic	r0, r0, #255	; 0xff
   17ec0:	movw	r1, #29440	; 0x7300
   17ec4:	movt	r1, #28783	; 0x706f
   17ec8:	teq	r0, r1
   17ecc:	bne	17f64 <main@@Base+0x1a44>
   17ed0:	b	17ed4 <main@@Base+0x19b4>
   17ed4:	ldr	r0, [fp, #-16]
   17ed8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17edc:	str	r1, [fp, #-48]	; 0xffffffd0
   17ee0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17ee4:	movw	r3, #3
   17ee8:	bl	1bd48 <main@@Base+0x5828>
   17eec:	str	r0, [fp, #-20]	; 0xffffffec
   17ef0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17ef4:	ldr	r1, [fp, #-20]	; 0xffffffec
   17ef8:	cmp	r0, r1
   17efc:	beq	17f4c <main@@Base+0x1a2c>
   17f00:	ldr	r0, [fp, #-16]
   17f04:	ldr	r0, [r0]
   17f08:	movw	r1, #0
   17f0c:	movw	r2, #32
   17f10:	movw	r3, #16
   17f14:	uxth	r3, r3
   17f18:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   17f1c:	str	r0, [fp, #-36]	; 0xffffffdc
   17f20:	movw	r1, #0
   17f24:	cmp	r0, r1
   17f28:	bne	17f30 <main@@Base+0x1a10>
   17f2c:	b	1abac <main@@Base+0x468c>
   17f30:	ldr	r0, [fp, #-16]
   17f34:	ldr	r1, [fp, #-20]	; 0xffffffec
   17f38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17f3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17f40:	bl	1de70 <main@@Base+0x7950>
   17f44:	str	r0, [fp, #-20]	; 0xffffffec
   17f48:	b	17f60 <main@@Base+0x1a40>
   17f4c:	ldr	r0, [fp, #-16]
   17f50:	ldr	r1, [fp, #-20]	; 0xffffffec
   17f54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17f58:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17f5c:	str	r0, [fp, #-20]	; 0xffffffec
   17f60:	b	17f78 <main@@Base+0x1a58>
   17f64:	ldr	r0, [fp, #-16]
   17f68:	ldr	r1, [fp, #-20]	; 0xffffffec
   17f6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17f70:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   17f74:	str	r0, [fp, #-20]	; 0xffffffec
   17f78:	b	17f7c <main@@Base+0x1a5c>
   17f7c:	b	17f80 <main@@Base+0x1a60>
   17f80:	b	18424 <main@@Base+0x1f04>
   17f84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17f88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17f8c:	and	r0, r0, #-16777216	; 0xff000000
   17f90:	movw	r2, #29556	; 0x7374
   17f94:	movt	r2, #29797	; 0x7465
   17f98:	eor	r1, r1, r2
   17f9c:	eor	r0, r0, #872415232	; 0x34000000
   17fa0:	orr	r0, r0, r1
   17fa4:	cmp	r0, #0
   17fa8:	bne	180d8 <main@@Base+0x1bb8>
   17fac:	b	17fb0 <main@@Base+0x1a90>
   17fb0:	ldr	r0, [fp, #-16]
   17fb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   17fb8:	str	r1, [fp, #-48]	; 0xffffffd0
   17fbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17fc0:	movw	r3, #5
   17fc4:	bl	1bd48 <main@@Base+0x5828>
   17fc8:	str	r0, [fp, #-20]	; 0xffffffec
   17fcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17fd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   17fd4:	cmp	r0, r1
   17fd8:	beq	180d0 <main@@Base+0x1bb0>
   17fdc:	ldr	r3, [pc, #4088]	; 18fdc <main@@Base+0x2abc>
   17fe0:	ldr	r0, [fp, #-16]
   17fe4:	ldr	r0, [r0]
   17fe8:	movw	r1, #4
   17fec:	movw	r2, #2
   17ff0:	uxth	r2, r2
   17ff4:	bl	2b678 <flatcc_builder_start_vector@@Base>
   17ff8:	cmp	r0, #0
   17ffc:	beq	18004 <main@@Base+0x1ae4>
   18000:	b	1abac <main@@Base+0x468c>
   18004:	ldr	r0, [fp, #-16]
   18008:	ldr	r1, [fp, #-20]	; 0xffffffec
   1800c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18010:	sub	r3, fp, #32
   18014:	bl	1d544 <main@@Base+0x7024>
   18018:	str	r0, [fp, #-20]	; 0xffffffec
   1801c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18020:	cmp	r0, #0
   18024:	beq	18080 <main@@Base+0x1b60>
   18028:	ldr	r0, [fp, #-16]
   1802c:	ldr	r0, [r0]
   18030:	movw	r1, #1
   18034:	bl	2ab7c <flatcc_builder_extend_vector@@Base>
   18038:	str	r0, [fp, #-36]	; 0xffffffdc
   1803c:	movw	r1, #0
   18040:	cmp	r0, r1
   18044:	bne	1804c <main@@Base+0x1b2c>
   18048:	b	1abac <main@@Base+0x468c>
   1804c:	ldr	r0, [fp, #-16]
   18050:	ldr	r1, [fp, #-20]	; 0xffffffec
   18054:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18058:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1805c:	bl	1e5a4 <main@@Base+0x8084>
   18060:	str	r0, [fp, #-20]	; 0xffffffec
   18064:	ldr	r0, [fp, #-16]
   18068:	ldr	r1, [fp, #-20]	; 0xffffffec
   1806c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18070:	sub	r3, fp, #32
   18074:	bl	1d914 <main@@Base+0x73f4>
   18078:	str	r0, [fp, #-20]	; 0xffffffec
   1807c:	b	1801c <main@@Base+0x1afc>
   18080:	ldr	r0, [fp, #-16]
   18084:	ldr	r0, [r0]
   18088:	bl	2cb6c <flatcc_builder_end_vector@@Base>
   1808c:	str	r0, [fp, #-40]	; 0xffffffd8
   18090:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18094:	cmp	r0, #0
   18098:	beq	180bc <main@@Base+0x1b9c>
   1809c:	ldr	r0, [fp, #-16]
   180a0:	ldr	r0, [r0]
   180a4:	movw	r1, #9
   180a8:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   180ac:	str	r0, [fp, #-44]	; 0xffffffd4
   180b0:	movw	r1, #0
   180b4:	cmp	r0, r1
   180b8:	bne	180c0 <main@@Base+0x1ba0>
   180bc:	b	1abac <main@@Base+0x468c>
   180c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   180c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   180c8:	str	r0, [r1]
   180cc:	b	180d4 <main@@Base+0x1bb4>
   180d0:	b	18180 <main@@Base+0x1c60>
   180d4:	b	1817c <main@@Base+0x1c5c>
   180d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   180dc:	movw	r1, #29556	; 0x7374
   180e0:	movt	r1, #29797	; 0x7465
   180e4:	teq	r0, r1
   180e8:	bne	18174 <main@@Base+0x1c54>
   180ec:	b	180f0 <main@@Base+0x1bd0>
   180f0:	ldr	r0, [fp, #-16]
   180f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   180f8:	str	r1, [fp, #-48]	; 0xffffffd0
   180fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18100:	movw	r3, #4
   18104:	bl	1bd48 <main@@Base+0x5828>
   18108:	str	r0, [fp, #-20]	; 0xffffffec
   1810c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18110:	ldr	r1, [fp, #-20]	; 0xffffffec
   18114:	cmp	r0, r1
   18118:	beq	1816c <main@@Base+0x1c4c>
   1811c:	ldr	r0, [pc, #4068]	; 19108 <main@@Base+0x2be8>
   18120:	add	r0, pc, r0
   18124:	ldr	r1, [fp, #-16]
   18128:	ldr	r2, [fp, #-20]	; 0xffffffec
   1812c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18130:	ldr	ip, [fp, #-60]	; 0xffffffc4
   18134:	str	r0, [sp, #92]	; 0x5c
   18138:	mov	r0, r1
   1813c:	mov	r1, r2
   18140:	mov	r2, r3
   18144:	movw	r3, #0
   18148:	movw	lr, #8
   1814c:	uxth	lr, lr
   18150:	str	lr, [sp]
   18154:	str	ip, [sp, #4]
   18158:	ldr	ip, [sp, #92]	; 0x5c
   1815c:	str	ip, [sp, #8]
   18160:	bl	367d0 <flatcc_json_parser_union@@Base>
   18164:	str	r0, [fp, #-20]	; 0xffffffec
   18168:	b	18170 <main@@Base+0x1c50>
   1816c:	b	18180 <main@@Base+0x1c60>
   18170:	b	18178 <main@@Base+0x1c58>
   18174:	b	18180 <main@@Base+0x1c60>
   18178:	b	1817c <main@@Base+0x1c5c>
   1817c:	b	18420 <main@@Base+0x1f00>
   18180:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18184:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18188:	and	r0, r0, #-16777216	; 0xff000000
   1818c:	movw	r2, #29556	; 0x7374
   18190:	movt	r2, #29797	; 0x7465
   18194:	eor	r1, r1, r2
   18198:	eor	r0, r0, #889192448	; 0x35000000
   1819c:	orr	r0, r0, r1
   181a0:	cmp	r0, #0
   181a4:	bne	182d4 <main@@Base+0x1db4>
   181a8:	b	181ac <main@@Base+0x1c8c>
   181ac:	ldr	r0, [fp, #-16]
   181b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   181b4:	str	r1, [fp, #-48]	; 0xffffffd0
   181b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   181bc:	movw	r3, #5
   181c0:	bl	1bd48 <main@@Base+0x5828>
   181c4:	str	r0, [fp, #-20]	; 0xffffffec
   181c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   181cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   181d0:	cmp	r0, r1
   181d4:	beq	182cc <main@@Base+0x1dac>
   181d8:	ldr	r3, [pc, #3580]	; 18fdc <main@@Base+0x2abc>
   181dc:	ldr	r0, [fp, #-16]
   181e0:	ldr	r0, [r0]
   181e4:	movw	r1, #4
   181e8:	movw	r2, #2
   181ec:	uxth	r2, r2
   181f0:	bl	2b678 <flatcc_builder_start_vector@@Base>
   181f4:	cmp	r0, #0
   181f8:	beq	18200 <main@@Base+0x1ce0>
   181fc:	b	1abac <main@@Base+0x468c>
   18200:	ldr	r0, [fp, #-16]
   18204:	ldr	r1, [fp, #-20]	; 0xffffffec
   18208:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1820c:	sub	r3, fp, #32
   18210:	bl	1d544 <main@@Base+0x7024>
   18214:	str	r0, [fp, #-20]	; 0xffffffec
   18218:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1821c:	cmp	r0, #0
   18220:	beq	1827c <main@@Base+0x1d5c>
   18224:	ldr	r0, [fp, #-16]
   18228:	ldr	r0, [r0]
   1822c:	movw	r1, #1
   18230:	bl	2ab7c <flatcc_builder_extend_vector@@Base>
   18234:	str	r0, [fp, #-36]	; 0xffffffdc
   18238:	movw	r1, #0
   1823c:	cmp	r0, r1
   18240:	bne	18248 <main@@Base+0x1d28>
   18244:	b	1abac <main@@Base+0x468c>
   18248:	ldr	r0, [fp, #-16]
   1824c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18250:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18254:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18258:	bl	1e5a4 <main@@Base+0x8084>
   1825c:	str	r0, [fp, #-20]	; 0xffffffec
   18260:	ldr	r0, [fp, #-16]
   18264:	ldr	r1, [fp, #-20]	; 0xffffffec
   18268:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1826c:	sub	r3, fp, #32
   18270:	bl	1d914 <main@@Base+0x73f4>
   18274:	str	r0, [fp, #-20]	; 0xffffffec
   18278:	b	18218 <main@@Base+0x1cf8>
   1827c:	ldr	r0, [fp, #-16]
   18280:	ldr	r0, [r0]
   18284:	bl	2cb6c <flatcc_builder_end_vector@@Base>
   18288:	str	r0, [fp, #-40]	; 0xffffffd8
   1828c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18290:	cmp	r0, #0
   18294:	beq	182b8 <main@@Base+0x1d98>
   18298:	ldr	r0, [fp, #-16]
   1829c:	ldr	r0, [r0]
   182a0:	movw	r1, #31
   182a4:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   182a8:	str	r0, [fp, #-44]	; 0xffffffd4
   182ac:	movw	r1, #0
   182b0:	cmp	r0, r1
   182b4:	bne	182bc <main@@Base+0x1d9c>
   182b8:	b	1abac <main@@Base+0x468c>
   182bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   182c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   182c4:	str	r0, [r1]
   182c8:	b	182d0 <main@@Base+0x1db0>
   182cc:	b	182dc <main@@Base+0x1dbc>
   182d0:	b	182d8 <main@@Base+0x1db8>
   182d4:	b	182dc <main@@Base+0x1dbc>
   182d8:	b	1841c <main@@Base+0x1efc>
   182dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   182e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   182e4:	movw	r2, #29556	; 0x7374
   182e8:	movt	r2, #29797	; 0x7465
   182ec:	eor	r1, r1, r2
   182f0:	movw	r2, #31088	; 0x7970
   182f4:	movt	r2, #24436	; 0x5f74
   182f8:	eor	r0, r0, r2
   182fc:	orr	r0, r0, r1
   18300:	cmp	r0, #0
   18304:	bne	18404 <main@@Base+0x1ee4>
   18308:	b	1830c <main@@Base+0x1dec>
   1830c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18310:	add	r0, r0, #8
   18314:	str	r0, [fp, #-20]	; 0xffffffec
   18318:	ldr	r0, [fp, #-20]	; 0xffffffec
   1831c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18320:	bl	1bd10 <main@@Base+0x57f0>
   18324:	str	r1, [fp, #-52]	; 0xffffffcc
   18328:	str	r0, [fp, #-56]	; 0xffffffc8
   1832c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18330:	and	r0, r0, #-16777216	; 0xff000000
   18334:	teq	r0, #1694498816	; 0x65000000
   18338:	bne	183e8 <main@@Base+0x1ec8>
   1833c:	b	18340 <main@@Base+0x1e20>
   18340:	ldr	r0, [fp, #-16]
   18344:	ldr	r1, [fp, #-20]	; 0xffffffec
   18348:	str	r1, [fp, #-48]	; 0xffffffd0
   1834c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18350:	movw	r3, #1
   18354:	bl	1bd48 <main@@Base+0x5828>
   18358:	str	r0, [fp, #-20]	; 0xffffffec
   1835c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18360:	ldr	r1, [fp, #-20]	; 0xffffffec
   18364:	cmp	r0, r1
   18368:	beq	183d0 <main@@Base+0x1eb0>
   1836c:	ldr	r0, [pc, #4084]	; 19368 <main@@Base+0x2e48>
   18370:	add	r0, pc, r0
   18374:	ldr	r1, [pc, #4080]	; 1936c <main@@Base+0x2e4c>
   18378:	add	r1, pc, r1
   1837c:	ldr	r2, [fp, #-16]
   18380:	ldr	r3, [fp, #-20]	; 0xffffffec
   18384:	ldr	ip, [fp, #-24]	; 0xffffffe8
   18388:	ldr	lr, [fp, #-60]	; 0xffffffc4
   1838c:	str	r0, [sp, #88]	; 0x58
   18390:	mov	r0, r2
   18394:	str	r1, [sp, #84]	; 0x54
   18398:	mov	r1, r3
   1839c:	mov	r2, ip
   183a0:	movw	r3, #0
   183a4:	movw	ip, #8
   183a8:	uxth	ip, ip
   183ac:	str	ip, [sp]
   183b0:	str	lr, [sp, #4]
   183b4:	ldr	ip, [sp, #88]	; 0x58
   183b8:	str	ip, [sp, #8]
   183bc:	ldr	lr, [sp, #84]	; 0x54
   183c0:	str	lr, [sp, #12]
   183c4:	bl	369bc <flatcc_json_parser_union_type@@Base>
   183c8:	str	r0, [fp, #-20]	; 0xffffffec
   183cc:	b	183e4 <main@@Base+0x1ec4>
   183d0:	ldr	r0, [fp, #-16]
   183d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   183d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   183dc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   183e0:	str	r0, [fp, #-20]	; 0xffffffec
   183e4:	b	183fc <main@@Base+0x1edc>
   183e8:	ldr	r0, [fp, #-16]
   183ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   183f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   183f4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   183f8:	str	r0, [fp, #-20]	; 0xffffffec
   183fc:	b	18418 <main@@Base+0x1ef8>
   18400:	andeq	r5, r4, r0, ror ip
   18404:	ldr	r0, [fp, #-16]
   18408:	ldr	r1, [fp, #-20]	; 0xffffffec
   1840c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18410:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   18414:	str	r0, [fp, #-20]	; 0xffffffec
   18418:	b	1841c <main@@Base+0x1efc>
   1841c:	b	18420 <main@@Base+0x1f00>
   18420:	b	18424 <main@@Base+0x1f04>
   18424:	b	18428 <main@@Base+0x1f08>
   18428:	b	1aaf8 <main@@Base+0x45d8>
   1842c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18430:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18434:	movw	r2, #65535	; 0xffff
   18438:	movt	r2, #26162	; 0x6632
   1843c:	subs	r0, r2, r0
   18440:	movw	r2, #29556	; 0x7374
   18444:	movt	r2, #29797	; 0x7465
   18448:	sbcs	r1, r2, r1
   1844c:	str	r0, [sp, #80]	; 0x50
   18450:	str	r1, [sp, #76]	; 0x4c
   18454:	bcc	194cc <main@@Base+0x2fac>
   18458:	b	1845c <main@@Base+0x1f3c>
   1845c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18460:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18464:	movw	r2, #29556	; 0x7374
   18468:	movt	r2, #29797	; 0x7465
   1846c:	eor	r1, r1, r2
   18470:	movw	r2, #29281	; 0x7261
   18474:	movt	r2, #24946	; 0x6172
   18478:	eor	r0, r0, r2
   1847c:	orr	r0, r0, r1
   18480:	cmp	r0, #0
   18484:	bne	18db0 <main@@Base+0x2890>
   18488:	b	1848c <main@@Base+0x1f6c>
   1848c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18490:	add	r0, r0, #8
   18494:	str	r0, [fp, #-20]	; 0xffffffec
   18498:	ldr	r0, [fp, #-20]	; 0xffffffec
   1849c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184a0:	bl	1bd10 <main@@Base+0x57f0>
   184a4:	str	r1, [fp, #-52]	; 0xffffffcc
   184a8:	str	r0, [fp, #-56]	; 0xffffffc8
   184ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   184b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   184b4:	movw	lr, #26989	; 0x696d
   184b8:	movt	lr, #29810	; 0x7472
   184bc:	subs	r0, lr, r0
   184c0:	movw	lr, #26227	; 0x6673
   184c4:	movt	lr, #31087	; 0x796f
   184c8:	sbcs	r1, lr, r1
   184cc:	str	r0, [sp, #72]	; 0x48
   184d0:	str	r1, [sp, #68]	; 0x44
   184d4:	bcc	188b0 <main@@Base+0x2390>
   184d8:	b	184dc <main@@Base+0x1fbc>
   184dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   184e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   184e4:	movw	r2, #26210	; 0x6662
   184e8:	movt	r2, #31087	; 0x796f
   184ec:	eor	r1, r1, r2
   184f0:	movw	r2, #27763	; 0x6c73
   184f4:	movt	r2, #28527	; 0x6f6f
   184f8:	eor	r0, r0, r2
   184fc:	orr	r0, r0, r1
   18500:	cmp	r0, #0
   18504:	bne	186b0 <main@@Base+0x2190>
   18508:	b	1850c <main@@Base+0x1fec>
   1850c:	ldr	r0, [fp, #-16]
   18510:	ldr	r1, [fp, #-20]	; 0xffffffec
   18514:	str	r1, [fp, #-48]	; 0xffffffd0
   18518:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1851c:	movw	r3, #8
   18520:	bl	1bd48 <main@@Base+0x5828>
   18524:	str	r0, [fp, #-20]	; 0xffffffec
   18528:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1852c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18530:	cmp	r0, r1
   18534:	beq	186a8 <main@@Base+0x2188>
   18538:	ldr	r0, [fp, #-16]
   1853c:	ldr	r0, [r0]
   18540:	movw	r1, #1
   18544:	movw	r2, #1
   18548:	uxth	r2, r2
   1854c:	mvn	r3, #0
   18550:	bl	2b678 <flatcc_builder_start_vector@@Base>
   18554:	cmp	r0, #0
   18558:	beq	18560 <main@@Base+0x2040>
   1855c:	b	1abac <main@@Base+0x468c>
   18560:	ldr	r0, [fp, #-16]
   18564:	ldr	r1, [fp, #-20]	; 0xffffffec
   18568:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1856c:	sub	r3, fp, #32
   18570:	bl	1d544 <main@@Base+0x7024>
   18574:	str	r0, [fp, #-20]	; 0xffffffec
   18578:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1857c:	cmp	r0, #0
   18580:	beq	18658 <main@@Base+0x2138>
   18584:	movw	r0, #0
   18588:	strb	r0, [fp, #-69]	; 0xffffffbb
   1858c:	ldr	r0, [fp, #-16]
   18590:	ldr	r0, [r0]
   18594:	movw	r1, #1
   18598:	bl	2ab7c <flatcc_builder_extend_vector@@Base>
   1859c:	str	r0, [fp, #-36]	; 0xffffffdc
   185a0:	movw	r1, #0
   185a4:	cmp	r0, r1
   185a8:	bne	185b4 <main@@Base+0x2094>
   185ac:	b	1abac <main@@Base+0x468c>
   185b0:	muleq	r4, ip, sl
   185b4:	ldr	r0, [fp, #-16]
   185b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   185bc:	str	r1, [fp, #-48]	; 0xffffffd0
   185c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   185c4:	sub	r3, fp, #69	; 0x45
   185c8:	bl	1ee80 <main@@Base+0x8960>
   185cc:	str	r0, [fp, #-20]	; 0xffffffec
   185d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   185d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   185d8:	cmp	r0, r1
   185dc:	bne	18630 <main@@Base+0x2110>
   185e0:	ldr	r0, [pc, #4080]	; 195d8 <main@@Base+0x30b8>
   185e4:	add	r3, pc, r0
   185e8:	ldr	r0, [fp, #-16]
   185ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   185f0:	str	r1, [fp, #-48]	; 0xffffffd0
   185f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   185f8:	sub	ip, fp, #69	; 0x45
   185fc:	str	ip, [sp]
   18600:	bl	1efa8 <main@@Base+0x8a88>
   18604:	str	r0, [fp, #-20]	; 0xffffffec
   18608:	ldr	r0, [fp, #-20]	; 0xffffffec
   1860c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18610:	cmp	r0, r1
   18614:	beq	18628 <main@@Base+0x2108>
   18618:	ldr	r0, [fp, #-20]	; 0xffffffec
   1861c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18620:	cmp	r0, r1
   18624:	bne	1862c <main@@Base+0x210c>
   18628:	b	1abac <main@@Base+0x468c>
   1862c:	b	18630 <main@@Base+0x2110>
   18630:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18634:	ldrb	r1, [fp, #-69]	; 0xffffffbb
   18638:	bl	1f18c <main@@Base+0x8c6c>
   1863c:	ldr	r0, [fp, #-16]
   18640:	ldr	r1, [fp, #-20]	; 0xffffffec
   18644:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18648:	sub	r3, fp, #32
   1864c:	bl	1d914 <main@@Base+0x73f4>
   18650:	str	r0, [fp, #-20]	; 0xffffffec
   18654:	b	18578 <main@@Base+0x2058>
   18658:	ldr	r0, [fp, #-16]
   1865c:	ldr	r0, [r0]
   18660:	bl	2cb6c <flatcc_builder_end_vector@@Base>
   18664:	str	r0, [fp, #-40]	; 0xffffffd8
   18668:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1866c:	cmp	r0, #0
   18670:	beq	18694 <main@@Base+0x2174>
   18674:	ldr	r0, [fp, #-16]
   18678:	ldr	r0, [r0]
   1867c:	movw	r1, #24
   18680:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   18684:	str	r0, [fp, #-44]	; 0xffffffd4
   18688:	movw	r1, #0
   1868c:	cmp	r0, r1
   18690:	bne	18698 <main@@Base+0x2178>
   18694:	b	1abac <main@@Base+0x468c>
   18698:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1869c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   186a0:	str	r0, [r1]
   186a4:	b	186ac <main@@Base+0x218c>
   186a8:	b	186b8 <main@@Base+0x2198>
   186ac:	b	186b4 <main@@Base+0x2194>
   186b0:	b	186b8 <main@@Base+0x2198>
   186b4:	b	188ac <main@@Base+0x238c>
   186b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   186bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   186c0:	movw	r2, #26227	; 0x6673
   186c4:	movt	r2, #31087	; 0x796f
   186c8:	eor	r1, r1, r2
   186cc:	movw	r2, #29797	; 0x7465
   186d0:	movt	r2, #28530	; 0x6f72
   186d4:	eor	r0, r0, r2
   186d8:	orr	r0, r0, r1
   186dc:	cmp	r0, #0
   186e0:	bne	18894 <main@@Base+0x2374>
   186e4:	b	186e8 <main@@Base+0x21c8>
   186e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   186ec:	add	r0, r0, #8
   186f0:	str	r0, [fp, #-20]	; 0xffffffec
   186f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   186f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186fc:	bl	1bd10 <main@@Base+0x57f0>
   18700:	str	r1, [fp, #-52]	; 0xffffffcc
   18704:	str	r0, [fp, #-56]	; 0xffffffc8
   18708:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1870c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18710:	movw	lr, #29556	; 0x7374
   18714:	movt	lr, #100	; 0x64
   18718:	eor	lr, lr, r1, lsr #8
   1871c:	lsr	r0, r0, #8
   18720:	orr	r0, r0, r1, lsl #24
   18724:	movw	r1, #25460	; 0x6374
   18728:	movt	r1, #29301	; 0x7275
   1872c:	eor	r0, r0, r1
   18730:	orr	r0, r0, lr
   18734:	cmp	r0, #0
   18738:	bne	1887c <main@@Base+0x235c>
   1873c:	b	18740 <main@@Base+0x2220>
   18740:	ldr	r0, [fp, #-16]
   18744:	ldr	r1, [fp, #-20]	; 0xffffffec
   18748:	str	r1, [fp, #-48]	; 0xffffffd0
   1874c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18750:	movw	r3, #7
   18754:	bl	1bd48 <main@@Base+0x5828>
   18758:	str	r0, [fp, #-20]	; 0xffffffec
   1875c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18760:	ldr	r1, [fp, #-20]	; 0xffffffec
   18764:	cmp	r0, r1
   18768:	beq	18864 <main@@Base+0x2344>
   1876c:	ldr	r3, [pc, #4024]	; 1972c <main@@Base+0x320c>
   18770:	ldr	r0, [fp, #-16]
   18774:	ldr	r0, [r0]
   18778:	movw	r1, #8
   1877c:	movw	r2, #4
   18780:	uxth	r2, r2
   18784:	bl	2b678 <flatcc_builder_start_vector@@Base>
   18788:	cmp	r0, #0
   1878c:	beq	18798 <main@@Base+0x2278>
   18790:	b	1abac <main@@Base+0x468c>
   18794:	andeq	r5, r4, r4, lsl #18
   18798:	ldr	r0, [fp, #-16]
   1879c:	ldr	r1, [fp, #-20]	; 0xffffffec
   187a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187a4:	sub	r3, fp, #32
   187a8:	bl	1d544 <main@@Base+0x7024>
   187ac:	str	r0, [fp, #-20]	; 0xffffffec
   187b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   187b4:	cmp	r0, #0
   187b8:	beq	18814 <main@@Base+0x22f4>
   187bc:	ldr	r0, [fp, #-16]
   187c0:	ldr	r0, [r0]
   187c4:	movw	r1, #1
   187c8:	bl	2ab7c <flatcc_builder_extend_vector@@Base>
   187cc:	str	r0, [fp, #-36]	; 0xffffffdc
   187d0:	movw	r1, #0
   187d4:	cmp	r0, r1
   187d8:	bne	187e0 <main@@Base+0x22c0>
   187dc:	b	1abac <main@@Base+0x468c>
   187e0:	ldr	r0, [fp, #-16]
   187e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   187e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   187f0:	bl	1f1b8 <main@@Base+0x8c98>
   187f4:	str	r0, [fp, #-20]	; 0xffffffec
   187f8:	ldr	r0, [fp, #-16]
   187fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18800:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18804:	sub	r3, fp, #32
   18808:	bl	1d914 <main@@Base+0x73f4>
   1880c:	str	r0, [fp, #-20]	; 0xffffffec
   18810:	b	187b0 <main@@Base+0x2290>
   18814:	ldr	r0, [fp, #-16]
   18818:	ldr	r0, [r0]
   1881c:	bl	2cb6c <flatcc_builder_end_vector@@Base>
   18820:	str	r0, [fp, #-40]	; 0xffffffd8
   18824:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18828:	cmp	r0, #0
   1882c:	beq	18850 <main@@Base+0x2330>
   18830:	ldr	r0, [fp, #-16]
   18834:	ldr	r0, [r0]
   18838:	movw	r1, #29
   1883c:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   18840:	str	r0, [fp, #-44]	; 0xffffffd4
   18844:	movw	r1, #0
   18848:	cmp	r0, r1
   1884c:	bne	18854 <main@@Base+0x2334>
   18850:	b	1abac <main@@Base+0x468c>
   18854:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18858:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1885c:	str	r0, [r1]
   18860:	b	18878 <main@@Base+0x2358>
   18864:	ldr	r0, [fp, #-16]
   18868:	ldr	r1, [fp, #-20]	; 0xffffffec
   1886c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18870:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   18874:	str	r0, [fp, #-20]	; 0xffffffec
   18878:	b	18890 <main@@Base+0x2370>
   1887c:	ldr	r0, [fp, #-16]
   18880:	ldr	r1, [fp, #-20]	; 0xffffffec
   18884:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18888:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1888c:	str	r0, [fp, #-20]	; 0xffffffec
   18890:	b	188a8 <main@@Base+0x2388>
   18894:	ldr	r0, [fp, #-16]
   18898:	ldr	r1, [fp, #-20]	; 0xffffffec
   1889c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   188a0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   188a4:	str	r0, [fp, #-20]	; 0xffffffec
   188a8:	b	188ac <main@@Base+0x238c>
   188ac:	b	18dac <main@@Base+0x288c>
   188b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   188b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   188b8:	movw	r2, #26227	; 0x6673
   188bc:	movt	r2, #31087	; 0x796f
   188c0:	eor	r1, r1, r2
   188c4:	movw	r2, #26990	; 0x696e
   188c8:	movt	r2, #29810	; 0x7472
   188cc:	eor	r0, r0, r2
   188d0:	orr	r0, r0, r1
   188d4:	cmp	r0, #0
   188d8:	bne	18bd4 <main@@Base+0x26b4>
   188dc:	b	188e0 <main@@Base+0x23c0>
   188e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   188e4:	add	r0, r0, #8
   188e8:	str	r0, [fp, #-20]	; 0xffffffec
   188ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   188f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188f4:	bl	1bd10 <main@@Base+0x57f0>
   188f8:	str	r1, [fp, #-52]	; 0xffffffcc
   188fc:	str	r0, [fp, #-56]	; 0xffffffc8
   18900:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18904:	bfc	r0, #0, #16
   18908:	movw	r1, #0
   1890c:	movt	r1, #26418	; 0x6732
   18910:	teq	r0, r1
   18914:	bne	18a60 <main@@Base+0x2540>
   18918:	b	1891c <main@@Base+0x23fc>
   1891c:	ldr	r0, [fp, #-16]
   18920:	ldr	r1, [fp, #-20]	; 0xffffffec
   18924:	str	r1, [fp, #-48]	; 0xffffffd0
   18928:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1892c:	movw	r3, #2
   18930:	bl	1bd48 <main@@Base+0x5828>
   18934:	str	r0, [fp, #-20]	; 0xffffffec
   18938:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1893c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18940:	cmp	r0, r1
   18944:	beq	18a48 <main@@Base+0x2528>
   18948:	ldr	r0, [fp, #-16]
   1894c:	ldr	r0, [r0]
   18950:	bl	2b758 <flatcc_builder_start_offset_vector@@Base>
   18954:	cmp	r0, #0
   18958:	beq	18964 <main@@Base+0x2444>
   1895c:	b	1abac <main@@Base+0x468c>
   18960:	strdeq	r5, [r4], -r8
   18964:	ldr	r0, [fp, #-16]
   18968:	ldr	r1, [fp, #-20]	; 0xffffffec
   1896c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18970:	sub	r3, fp, #32
   18974:	bl	1d544 <main@@Base+0x7024>
   18978:	str	r0, [fp, #-20]	; 0xffffffec
   1897c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18980:	cmp	r0, #0
   18984:	beq	189f8 <main@@Base+0x24d8>
   18988:	ldr	r0, [fp, #-16]
   1898c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18990:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18994:	sub	r3, fp, #40	; 0x28
   18998:	bl	364a4 <flatcc_json_parser_build_string@@Base>
   1899c:	str	r0, [fp, #-20]	; 0xffffffec
   189a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   189a4:	cmp	r0, #0
   189a8:	beq	189cc <main@@Base+0x24ac>
   189ac:	ldr	r0, [fp, #-16]
   189b0:	ldr	r0, [r0]
   189b4:	movw	r1, #1
   189b8:	bl	2aeec <flatcc_builder_extend_offset_vector@@Base>
   189bc:	str	r0, [fp, #-44]	; 0xffffffd4
   189c0:	movw	r1, #0
   189c4:	cmp	r0, r1
   189c8:	bne	189d0 <main@@Base+0x24b0>
   189cc:	b	1abac <main@@Base+0x468c>
   189d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   189d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   189d8:	str	r0, [r1]
   189dc:	ldr	r0, [fp, #-16]
   189e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   189e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   189e8:	sub	r3, fp, #32
   189ec:	bl	1d914 <main@@Base+0x73f4>
   189f0:	str	r0, [fp, #-20]	; 0xffffffec
   189f4:	b	1897c <main@@Base+0x245c>
   189f8:	ldr	r0, [fp, #-16]
   189fc:	ldr	r0, [r0]
   18a00:	bl	2b864 <flatcc_builder_end_offset_vector@@Base>
   18a04:	str	r0, [fp, #-40]	; 0xffffffd8
   18a08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a0c:	cmp	r0, #0
   18a10:	beq	18a34 <main@@Base+0x2514>
   18a14:	ldr	r0, [fp, #-16]
   18a18:	ldr	r0, [r0]
   18a1c:	movw	r1, #28
   18a20:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   18a24:	str	r0, [fp, #-44]	; 0xffffffd4
   18a28:	movw	r1, #0
   18a2c:	cmp	r0, r1
   18a30:	bne	18a38 <main@@Base+0x2518>
   18a34:	b	1abac <main@@Base+0x468c>
   18a38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18a40:	str	r0, [r1]
   18a44:	b	18a5c <main@@Base+0x253c>
   18a48:	ldr	r0, [fp, #-16]
   18a4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a54:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   18a58:	str	r0, [fp, #-20]	; 0xffffffec
   18a5c:	b	18bd0 <main@@Base+0x26b0>
   18a60:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18a64:	and	r0, r0, #-16777216	; 0xff000000
   18a68:	teq	r0, #1728053248	; 0x67000000
   18a6c:	bne	18bb8 <main@@Base+0x2698>
   18a70:	b	18a74 <main@@Base+0x2554>
   18a74:	ldr	r0, [fp, #-16]
   18a78:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a7c:	str	r1, [fp, #-48]	; 0xffffffd0
   18a80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a84:	movw	r3, #1
   18a88:	bl	1bd48 <main@@Base+0x5828>
   18a8c:	str	r0, [fp, #-20]	; 0xffffffec
   18a90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18a94:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a98:	cmp	r0, r1
   18a9c:	beq	18ba0 <main@@Base+0x2680>
   18aa0:	ldr	r0, [fp, #-16]
   18aa4:	ldr	r0, [r0]
   18aa8:	bl	2b758 <flatcc_builder_start_offset_vector@@Base>
   18aac:	cmp	r0, #0
   18ab0:	beq	18abc <main@@Base+0x259c>
   18ab4:	b	1abac <main@@Base+0x468c>
   18ab8:	muleq	r4, r4, r5
   18abc:	ldr	r0, [fp, #-16]
   18ac0:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ac4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ac8:	sub	r3, fp, #32
   18acc:	bl	1d544 <main@@Base+0x7024>
   18ad0:	str	r0, [fp, #-20]	; 0xffffffec
   18ad4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ad8:	cmp	r0, #0
   18adc:	beq	18b50 <main@@Base+0x2630>
   18ae0:	ldr	r0, [fp, #-16]
   18ae4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ae8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18aec:	sub	r3, fp, #40	; 0x28
   18af0:	bl	364a4 <flatcc_json_parser_build_string@@Base>
   18af4:	str	r0, [fp, #-20]	; 0xffffffec
   18af8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18afc:	cmp	r0, #0
   18b00:	beq	18b24 <main@@Base+0x2604>
   18b04:	ldr	r0, [fp, #-16]
   18b08:	ldr	r0, [r0]
   18b0c:	movw	r1, #1
   18b10:	bl	2aeec <flatcc_builder_extend_offset_vector@@Base>
   18b14:	str	r0, [fp, #-44]	; 0xffffffd4
   18b18:	movw	r1, #0
   18b1c:	cmp	r0, r1
   18b20:	bne	18b28 <main@@Base+0x2608>
   18b24:	b	1abac <main@@Base+0x468c>
   18b28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18b2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18b30:	str	r0, [r1]
   18b34:	ldr	r0, [fp, #-16]
   18b38:	ldr	r1, [fp, #-20]	; 0xffffffec
   18b3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b40:	sub	r3, fp, #32
   18b44:	bl	1d914 <main@@Base+0x73f4>
   18b48:	str	r0, [fp, #-20]	; 0xffffffec
   18b4c:	b	18ad4 <main@@Base+0x25b4>
   18b50:	ldr	r0, [fp, #-16]
   18b54:	ldr	r0, [r0]
   18b58:	bl	2b864 <flatcc_builder_end_offset_vector@@Base>
   18b5c:	str	r0, [fp, #-40]	; 0xffffffd8
   18b60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18b64:	cmp	r0, #0
   18b68:	beq	18b8c <main@@Base+0x266c>
   18b6c:	ldr	r0, [fp, #-16]
   18b70:	ldr	r0, [r0]
   18b74:	movw	r1, #10
   18b78:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   18b7c:	str	r0, [fp, #-44]	; 0xffffffd4
   18b80:	movw	r1, #0
   18b84:	cmp	r0, r1
   18b88:	bne	18b90 <main@@Base+0x2670>
   18b8c:	b	1abac <main@@Base+0x468c>
   18b90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18b94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18b98:	str	r0, [r1]
   18b9c:	b	18bb4 <main@@Base+0x2694>
   18ba0:	ldr	r0, [fp, #-16]
   18ba4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ba8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18bac:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   18bb0:	str	r0, [fp, #-20]	; 0xffffffec
   18bb4:	b	18bcc <main@@Base+0x26ac>
   18bb8:	ldr	r0, [fp, #-16]
   18bbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18bc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18bc4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   18bc8:	str	r0, [fp, #-20]	; 0xffffffec
   18bcc:	b	18bd0 <main@@Base+0x26b0>
   18bd0:	b	18da8 <main@@Base+0x2888>
   18bd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18bd8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18bdc:	movw	r2, #26228	; 0x6674
   18be0:	movt	r2, #31087	; 0x796f
   18be4:	eor	r1, r1, r2
   18be8:	movw	r2, #27749	; 0x6c65
   18bec:	movt	r2, #24930	; 0x6162
   18bf0:	eor	r0, r0, r2
   18bf4:	orr	r0, r0, r1
   18bf8:	cmp	r0, #0
   18bfc:	bne	18d90 <main@@Base+0x2870>
   18c00:	b	18c04 <main@@Base+0x26e4>
   18c04:	ldr	r0, [fp, #-20]	; 0xffffffec
   18c08:	add	r0, r0, #8
   18c0c:	str	r0, [fp, #-20]	; 0xffffffec
   18c10:	ldr	r0, [fp, #-20]	; 0xffffffec
   18c14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c18:	bl	1bd10 <main@@Base+0x57f0>
   18c1c:	str	r1, [fp, #-52]	; 0xffffffcc
   18c20:	str	r0, [fp, #-56]	; 0xffffffc8
   18c24:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18c28:	and	r0, r0, #-16777216	; 0xff000000
   18c2c:	teq	r0, #1929379840	; 0x73000000
   18c30:	bne	18d78 <main@@Base+0x2858>
   18c34:	b	18c38 <main@@Base+0x2718>
   18c38:	ldr	r0, [fp, #-16]
   18c3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c40:	str	r1, [fp, #-48]	; 0xffffffd0
   18c44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c48:	movw	r3, #1
   18c4c:	bl	1bd48 <main@@Base+0x5828>
   18c50:	str	r0, [fp, #-20]	; 0xffffffec
   18c54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18c58:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c5c:	cmp	r0, r1
   18c60:	beq	18d60 <main@@Base+0x2840>
   18c64:	ldr	r0, [fp, #-16]
   18c68:	ldr	r0, [r0]
   18c6c:	bl	2b758 <flatcc_builder_start_offset_vector@@Base>
   18c70:	cmp	r0, #0
   18c74:	beq	18c7c <main@@Base+0x275c>
   18c78:	b	1abac <main@@Base+0x468c>
   18c7c:	ldr	r0, [fp, #-16]
   18c80:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c88:	sub	r3, fp, #32
   18c8c:	bl	1d544 <main@@Base+0x7024>
   18c90:	str	r0, [fp, #-20]	; 0xffffffec
   18c94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c98:	cmp	r0, #0
   18c9c:	beq	18d10 <main@@Base+0x27f0>
   18ca0:	ldr	r0, [fp, #-16]
   18ca4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18cac:	sub	r3, fp, #40	; 0x28
   18cb0:	bl	17188 <main@@Base+0xc68>
   18cb4:	str	r0, [fp, #-20]	; 0xffffffec
   18cb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18cbc:	cmp	r0, #0
   18cc0:	beq	18ce4 <main@@Base+0x27c4>
   18cc4:	ldr	r0, [fp, #-16]
   18cc8:	ldr	r0, [r0]
   18ccc:	movw	r1, #1
   18cd0:	bl	2aeec <flatcc_builder_extend_offset_vector@@Base>
   18cd4:	str	r0, [fp, #-44]	; 0xffffffd4
   18cd8:	movw	r1, #0
   18cdc:	cmp	r0, r1
   18ce0:	bne	18ce8 <main@@Base+0x27c8>
   18ce4:	b	1abac <main@@Base+0x468c>
   18ce8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18cec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18cf0:	str	r0, [r1]
   18cf4:	ldr	r0, [fp, #-16]
   18cf8:	ldr	r1, [fp, #-20]	; 0xffffffec
   18cfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d00:	sub	r3, fp, #32
   18d04:	bl	1d914 <main@@Base+0x73f4>
   18d08:	str	r0, [fp, #-20]	; 0xffffffec
   18d0c:	b	18c94 <main@@Base+0x2774>
   18d10:	ldr	r0, [fp, #-16]
   18d14:	ldr	r0, [r0]
   18d18:	bl	2b864 <flatcc_builder_end_offset_vector@@Base>
   18d1c:	str	r0, [fp, #-40]	; 0xffffffd8
   18d20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18d24:	cmp	r0, #0
   18d28:	beq	18d4c <main@@Base+0x282c>
   18d2c:	ldr	r0, [fp, #-16]
   18d30:	ldr	r0, [r0]
   18d34:	movw	r1, #11
   18d38:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   18d3c:	str	r0, [fp, #-44]	; 0xffffffd4
   18d40:	movw	r1, #0
   18d44:	cmp	r0, r1
   18d48:	bne	18d50 <main@@Base+0x2830>
   18d4c:	b	1abac <main@@Base+0x468c>
   18d50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18d54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18d58:	str	r0, [r1]
   18d5c:	b	18d74 <main@@Base+0x2854>
   18d60:	ldr	r0, [fp, #-16]
   18d64:	ldr	r1, [fp, #-20]	; 0xffffffec
   18d68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d6c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   18d70:	str	r0, [fp, #-20]	; 0xffffffec
   18d74:	b	18d8c <main@@Base+0x286c>
   18d78:	ldr	r0, [fp, #-16]
   18d7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18d80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d84:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   18d88:	str	r0, [fp, #-20]	; 0xffffffec
   18d8c:	b	18da4 <main@@Base+0x2884>
   18d90:	ldr	r0, [fp, #-16]
   18d94:	ldr	r1, [fp, #-20]	; 0xffffffec
   18d98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d9c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   18da0:	str	r0, [fp, #-20]	; 0xffffffec
   18da4:	b	18da8 <main@@Base+0x2888>
   18da8:	b	18dac <main@@Base+0x288c>
   18dac:	b	194c8 <main@@Base+0x2fa8>
   18db0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18db4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18db8:	movw	r2, #28787	; 0x7073
   18dbc:	movt	r2, #25965	; 0x656d
   18dc0:	subs	r0, r2, r0
   18dc4:	movw	r2, #29556	; 0x7374
   18dc8:	movt	r2, #29797	; 0x7465
   18dcc:	sbcs	r1, r2, r1
   18dd0:	str	r0, [sp, #64]	; 0x40
   18dd4:	str	r1, [sp, #60]	; 0x3c
   18dd8:	bcc	19078 <main@@Base+0x2b58>
   18ddc:	b	18de0 <main@@Base+0x28c0>
   18de0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18de4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18de8:	movw	r2, #29556	; 0x7374
   18dec:	movt	r2, #29797	; 0x7465
   18df0:	eor	r1, r1, r2
   18df4:	movw	r2, #29541	; 0x7365
   18df8:	movt	r2, #25185	; 0x6261
   18dfc:	eor	r0, r0, r2
   18e00:	orr	r0, r0, r1
   18e04:	cmp	r0, #0
   18e08:	bne	18f00 <main@@Base+0x29e0>
   18e0c:	b	18e10 <main@@Base+0x28f0>
   18e10:	ldr	r0, [fp, #-20]	; 0xffffffec
   18e14:	add	r0, r0, #8
   18e18:	str	r0, [fp, #-20]	; 0xffffffec
   18e1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18e20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e24:	bl	1bd10 <main@@Base+0x57f0>
   18e28:	str	r1, [fp, #-52]	; 0xffffffcc
   18e2c:	str	r0, [fp, #-56]	; 0xffffffc8
   18e30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18e34:	bfc	r0, #0, #16
   18e38:	movw	r1, #0
   18e3c:	movt	r1, #13876	; 0x3634
   18e40:	teq	r0, r1
   18e44:	bne	18ee8 <main@@Base+0x29c8>
   18e48:	b	18e4c <main@@Base+0x292c>
   18e4c:	ldr	r0, [fp, #-16]
   18e50:	ldr	r1, [fp, #-20]	; 0xffffffec
   18e54:	str	r1, [fp, #-48]	; 0xffffffd0
   18e58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e5c:	movw	r3, #2
   18e60:	bl	1bd48 <main@@Base+0x5828>
   18e64:	str	r0, [fp, #-20]	; 0xffffffec
   18e68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18e6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18e70:	cmp	r0, r1
   18e74:	beq	18ed0 <main@@Base+0x29b0>
   18e78:	ldr	r0, [fp, #-16]
   18e7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18e80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e84:	sub	r3, fp, #40	; 0x28
   18e88:	bl	1f4a0 <main@@Base+0x8f80>
   18e8c:	str	r0, [fp, #-20]	; 0xffffffec
   18e90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e94:	cmp	r0, #0
   18e98:	beq	18ebc <main@@Base+0x299c>
   18e9c:	ldr	r0, [fp, #-16]
   18ea0:	ldr	r0, [r0]
   18ea4:	movw	r1, #35	; 0x23
   18ea8:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   18eac:	str	r0, [fp, #-44]	; 0xffffffd4
   18eb0:	movw	r1, #0
   18eb4:	cmp	r0, r1
   18eb8:	bne	18ec0 <main@@Base+0x29a0>
   18ebc:	b	1abac <main@@Base+0x468c>
   18ec0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18ec4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18ec8:	str	r0, [r1]
   18ecc:	b	18ee4 <main@@Base+0x29c4>
   18ed0:	ldr	r0, [fp, #-16]
   18ed4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ed8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18edc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   18ee0:	str	r0, [fp, #-20]	; 0xffffffec
   18ee4:	b	18efc <main@@Base+0x29dc>
   18ee8:	ldr	r0, [fp, #-16]
   18eec:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ef0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ef4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   18ef8:	str	r0, [fp, #-20]	; 0xffffffec
   18efc:	b	19074 <main@@Base+0x2b54>
   18f00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18f04:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18f08:	movw	r2, #29556	; 0x7374
   18f0c:	movt	r2, #29797	; 0x7465
   18f10:	eor	r1, r1, r2
   18f14:	movw	r2, #28524	; 0x6f6c
   18f18:	movt	r2, #25199	; 0x626f
   18f1c:	eor	r0, r0, r2
   18f20:	orr	r0, r0, r1
   18f24:	cmp	r0, #0
   18f28:	bne	1905c <main@@Base+0x2b3c>
   18f2c:	b	18f30 <main@@Base+0x2a10>
   18f30:	ldr	r0, [fp, #-16]
   18f34:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f38:	str	r1, [fp, #-48]	; 0xffffffd0
   18f3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18f40:	movw	r3, #8
   18f44:	bl	1bd48 <main@@Base+0x5828>
   18f48:	str	r0, [fp, #-20]	; 0xffffffec
   18f4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18f50:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f54:	cmp	r0, r1
   18f58:	beq	19044 <main@@Base+0x2b24>
   18f5c:	movw	r0, #0
   18f60:	strb	r0, [fp, #-70]	; 0xffffffba
   18f64:	ldr	r0, [fp, #-16]
   18f68:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f6c:	str	r1, [fp, #-48]	; 0xffffffd0
   18f70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18f74:	sub	r3, fp, #70	; 0x46
   18f78:	bl	1ee80 <main@@Base+0x8960>
   18f7c:	str	r0, [fp, #-20]	; 0xffffffec
   18f80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18f84:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f88:	cmp	r0, r1
   18f8c:	bne	18fe4 <main@@Base+0x2ac4>
   18f90:	ldr	r0, [pc, #4080]	; 19f88 <main@@Base+0x3a68>
   18f94:	add	r3, pc, r0
   18f98:	ldr	r0, [fp, #-16]
   18f9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18fa0:	str	r1, [fp, #-48]	; 0xffffffd0
   18fa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18fa8:	sub	ip, fp, #70	; 0x46
   18fac:	str	ip, [sp]
   18fb0:	bl	1efa8 <main@@Base+0x8a88>
   18fb4:	str	r0, [fp, #-20]	; 0xffffffec
   18fb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   18fbc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18fc0:	cmp	r0, r1
   18fc4:	beq	18fd8 <main@@Base+0x2ab8>
   18fc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   18fcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fd0:	cmp	r0, r1
   18fd4:	bne	18fe0 <main@@Base+0x2ac0>
   18fd8:	b	1abac <main@@Base+0x468c>
   18fdc:	svccc	0x00ffffff
   18fe0:	b	18fe4 <main@@Base+0x2ac4>
   18fe4:	ldrb	r0, [fp, #-70]	; 0xffffffba
   18fe8:	cmp	r0, #1
   18fec:	bne	19004 <main@@Base+0x2ae4>
   18ff0:	ldr	r0, [fp, #-16]
   18ff4:	ldr	r0, [r0, #8]
   18ff8:	and	r0, r0, #2
   18ffc:	cmp	r0, #0
   19000:	beq	19040 <main@@Base+0x2b20>
   19004:	ldr	r0, [fp, #-16]
   19008:	ldr	r0, [r0]
   1900c:	movw	r1, #15
   19010:	movw	r2, #1
   19014:	movw	r3, #1
   19018:	uxth	r3, r3
   1901c:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   19020:	str	r0, [fp, #-36]	; 0xffffffdc
   19024:	movw	r1, #0
   19028:	cmp	r0, r1
   1902c:	bne	19034 <main@@Base+0x2b14>
   19030:	b	1abac <main@@Base+0x468c>
   19034:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19038:	ldrb	r1, [fp, #-70]	; 0xffffffba
   1903c:	bl	1f18c <main@@Base+0x8c6c>
   19040:	b	19058 <main@@Base+0x2b38>
   19044:	ldr	r0, [fp, #-16]
   19048:	ldr	r1, [fp, #-20]	; 0xffffffec
   1904c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19050:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   19054:	str	r0, [fp, #-20]	; 0xffffffec
   19058:	b	19070 <main@@Base+0x2b50>
   1905c:	ldr	r0, [fp, #-16]
   19060:	ldr	r1, [fp, #-20]	; 0xffffffec
   19064:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19068:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1906c:	str	r0, [fp, #-20]	; 0xffffffec
   19070:	b	19074 <main@@Base+0x2b54>
   19074:	b	194c4 <main@@Base+0x2fa4>
   19078:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1907c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19080:	mvn	r2, #-1711276032	; 0x9a000000
   19084:	subs	r0, r2, r0
   19088:	movw	r2, #29556	; 0x7374
   1908c:	movt	r2, #29797	; 0x7465
   19090:	sbcs	r1, r2, r1
   19094:	str	r0, [sp, #56]	; 0x38
   19098:	str	r1, [sp, #52]	; 0x34
   1909c:	bcc	191d8 <main@@Base+0x2cb8>
   190a0:	b	190a4 <main@@Base+0x2b84>
   190a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   190a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   190ac:	movw	r2, #29556	; 0x7374
   190b0:	movt	r2, #29797	; 0x7465
   190b4:	eor	r1, r1, r2
   190b8:	movw	r2, #28788	; 0x7074
   190bc:	movt	r2, #25965	; 0x656d
   190c0:	eor	r0, r0, r2
   190c4:	orr	r0, r0, r1
   190c8:	cmp	r0, #0
   190cc:	bne	191c0 <main@@Base+0x2ca0>
   190d0:	b	190d4 <main@@Base+0x2bb4>
   190d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   190d8:	add	r0, r0, #8
   190dc:	str	r0, [fp, #-20]	; 0xffffffec
   190e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   190e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190e8:	bl	1bd10 <main@@Base+0x57f0>
   190ec:	str	r1, [fp, #-52]	; 0xffffffcc
   190f0:	str	r0, [fp, #-56]	; 0xffffffc8
   190f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   190f8:	and	r0, r0, #-16777216	; 0xff000000
   190fc:	teq	r0, #2030043136	; 0x79000000
   19100:	bne	191a8 <main@@Base+0x2c88>
   19104:	b	1910c <main@@Base+0x2bec>
   19108:	andeq	r6, r0, r0, asr #14
   1910c:	ldr	r0, [fp, #-16]
   19110:	ldr	r1, [fp, #-20]	; 0xffffffec
   19114:	str	r1, [fp, #-48]	; 0xffffffd0
   19118:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1911c:	movw	r3, #1
   19120:	bl	1bd48 <main@@Base+0x5828>
   19124:	str	r0, [fp, #-20]	; 0xffffffec
   19128:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1912c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19130:	cmp	r0, r1
   19134:	beq	19190 <main@@Base+0x2c70>
   19138:	ldr	r0, [fp, #-16]
   1913c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19140:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19144:	sub	r3, fp, #40	; 0x28
   19148:	bl	1f880 <main@@Base+0x9360>
   1914c:	str	r0, [fp, #-20]	; 0xffffffec
   19150:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19154:	cmp	r0, #0
   19158:	beq	1917c <main@@Base+0x2c5c>
   1915c:	ldr	r0, [fp, #-16]
   19160:	ldr	r0, [r0]
   19164:	movw	r1, #14
   19168:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   1916c:	str	r0, [fp, #-44]	; 0xffffffd4
   19170:	movw	r1, #0
   19174:	cmp	r0, r1
   19178:	bne	19180 <main@@Base+0x2c60>
   1917c:	b	1abac <main@@Base+0x468c>
   19180:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19184:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19188:	str	r0, [r1]
   1918c:	b	191a4 <main@@Base+0x2c84>
   19190:	ldr	r0, [fp, #-16]
   19194:	ldr	r1, [fp, #-20]	; 0xffffffec
   19198:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1919c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   191a0:	str	r0, [fp, #-20]	; 0xffffffec
   191a4:	b	191bc <main@@Base+0x2c9c>
   191a8:	ldr	r0, [fp, #-16]
   191ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   191b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   191b4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   191b8:	str	r0, [fp, #-20]	; 0xffffffec
   191bc:	b	191d4 <main@@Base+0x2cb4>
   191c0:	ldr	r0, [fp, #-16]
   191c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   191c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   191cc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   191d0:	str	r0, [fp, #-20]	; 0xffffffec
   191d4:	b	194c0 <main@@Base+0x2fa0>
   191d8:	ldrh	r0, [fp, #-54]	; 0xffffffca
   191dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   191e0:	movw	r2, #29797	; 0x7465
   191e4:	eor	r2, r2, r1, lsr #16
   191e8:	orr	r0, r0, r1, lsl #16
   191ec:	movw	r1, #26162	; 0x6632
   191f0:	movt	r1, #29556	; 0x7374
   191f4:	eor	r0, r0, r1
   191f8:	orr	r0, r0, r2
   191fc:	cmp	r0, #0
   19200:	bne	1933c <main@@Base+0x2e1c>
   19204:	b	19208 <main@@Base+0x2ce8>
   19208:	ldr	r0, [fp, #-16]
   1920c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19210:	str	r1, [fp, #-48]	; 0xffffffd0
   19214:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19218:	movw	r3, #6
   1921c:	bl	1bd48 <main@@Base+0x5828>
   19220:	str	r0, [fp, #-20]	; 0xffffffec
   19224:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19228:	ldr	r1, [fp, #-20]	; 0xffffffec
   1922c:	cmp	r0, r1
   19230:	beq	19324 <main@@Base+0x2e04>
   19234:	vldr	s0, [pc, #928]	; 195dc <main@@Base+0x30bc>
   19238:	vstr	s0, [fp, #-76]	; 0xffffffb4
   1923c:	ldr	r0, [fp, #-16]
   19240:	ldr	r1, [fp, #-20]	; 0xffffffec
   19244:	str	r1, [fp, #-48]	; 0xffffffd0
   19248:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1924c:	sub	r3, fp, #76	; 0x4c
   19250:	bl	34e00 <flatcc_json_parser_float@@Base>
   19254:	str	r0, [fp, #-20]	; 0xffffffec
   19258:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1925c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19260:	cmp	r0, r1
   19264:	bne	192b8 <main@@Base+0x2d98>
   19268:	ldr	r0, [pc, #4092]	; 1a26c <main@@Base+0x3d4c>
   1926c:	add	r3, pc, r0
   19270:	ldr	r0, [fp, #-16]
   19274:	ldr	r1, [fp, #-20]	; 0xffffffec
   19278:	str	r1, [fp, #-48]	; 0xffffffd0
   1927c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19280:	sub	ip, fp, #76	; 0x4c
   19284:	str	ip, [sp]
   19288:	bl	1fd4c <main@@Base+0x982c>
   1928c:	str	r0, [fp, #-20]	; 0xffffffec
   19290:	ldr	r0, [fp, #-20]	; 0xffffffec
   19294:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19298:	cmp	r0, r1
   1929c:	beq	192b0 <main@@Base+0x2d90>
   192a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   192a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192a8:	cmp	r0, r1
   192ac:	bne	192b4 <main@@Base+0x2d94>
   192b0:	b	1abac <main@@Base+0x468c>
   192b4:	b	192b8 <main@@Base+0x2d98>
   192b8:	vldr	s0, [fp, #-76]	; 0xffffffb4
   192bc:	vcvt.f64.f32	d16, s0
   192c0:	vmov.f64	d17, #8	; 0x40400000  3.0
   192c4:	vcmp.f64	d16, d17
   192c8:	vmrs	APSR_nzcv, fpscr
   192cc:	bne	192e4 <main@@Base+0x2dc4>
   192d0:	ldr	r0, [fp, #-16]
   192d4:	ldr	r0, [r0, #8]
   192d8:	and	r0, r0, #2
   192dc:	cmp	r0, #0
   192e0:	beq	19320 <main@@Base+0x2e00>
   192e4:	ldr	r0, [fp, #-16]
   192e8:	ldr	r0, [r0]
   192ec:	movw	r1, #26
   192f0:	movw	r2, #4
   192f4:	movw	r3, #4
   192f8:	uxth	r3, r3
   192fc:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   19300:	str	r0, [fp, #-36]	; 0xffffffdc
   19304:	movw	r1, #0
   19308:	cmp	r0, r1
   1930c:	bne	19314 <main@@Base+0x2df4>
   19310:	b	1abac <main@@Base+0x468c>
   19314:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19318:	vldr	s0, [fp, #-76]	; 0xffffffb4
   1931c:	bl	1ff34 <main@@Base+0x9a14>
   19320:	b	19338 <main@@Base+0x2e18>
   19324:	ldr	r0, [fp, #-16]
   19328:	ldr	r1, [fp, #-20]	; 0xffffffec
   1932c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19330:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   19334:	str	r0, [fp, #-20]	; 0xffffffec
   19338:	b	194bc <main@@Base+0x2f9c>
   1933c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19340:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19344:	and	r0, r0, #-16777216	; 0xff000000
   19348:	movw	r2, #29556	; 0x7374
   1934c:	movt	r2, #29797	; 0x7465
   19350:	eor	r1, r1, r2
   19354:	eor	r0, r0, #1711276032	; 0x66000000
   19358:	orr	r0, r0, r1
   1935c:	cmp	r0, #0
   19360:	bne	194a4 <main@@Base+0x2f84>
   19364:	b	19370 <main@@Base+0x2e50>
   19368:	andeq	r4, r4, r0, asr sp
   1936c:	andeq	r6, r0, r8, ror #9
   19370:	ldr	r0, [fp, #-16]
   19374:	ldr	r1, [fp, #-20]	; 0xffffffec
   19378:	str	r1, [fp, #-48]	; 0xffffffd0
   1937c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19380:	movw	r3, #5
   19384:	bl	1bd48 <main@@Base+0x5828>
   19388:	str	r0, [fp, #-20]	; 0xffffffec
   1938c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19390:	ldr	r1, [fp, #-20]	; 0xffffffec
   19394:	cmp	r0, r1
   19398:	beq	1948c <main@@Base+0x2f6c>
   1939c:	vldr	s0, [pc, #568]	; 195dc <main@@Base+0x30bc>
   193a0:	vstr	s0, [fp, #-80]	; 0xffffffb0
   193a4:	ldr	r0, [fp, #-16]
   193a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   193ac:	str	r1, [fp, #-48]	; 0xffffffd0
   193b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   193b4:	sub	r3, fp, #80	; 0x50
   193b8:	bl	34e00 <flatcc_json_parser_float@@Base>
   193bc:	str	r0, [fp, #-20]	; 0xffffffec
   193c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   193c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   193c8:	cmp	r0, r1
   193cc:	bne	19420 <main@@Base+0x2f00>
   193d0:	ldr	r0, [pc, #4056]	; 1a3b0 <main@@Base+0x3e90>
   193d4:	add	r3, pc, r0
   193d8:	ldr	r0, [fp, #-16]
   193dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   193e0:	str	r1, [fp, #-48]	; 0xffffffd0
   193e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   193e8:	sub	ip, fp, #80	; 0x50
   193ec:	str	ip, [sp]
   193f0:	bl	1fd4c <main@@Base+0x982c>
   193f4:	str	r0, [fp, #-20]	; 0xffffffec
   193f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   193fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19400:	cmp	r0, r1
   19404:	beq	19418 <main@@Base+0x2ef8>
   19408:	ldr	r0, [fp, #-20]	; 0xffffffec
   1940c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19410:	cmp	r0, r1
   19414:	bne	1941c <main@@Base+0x2efc>
   19418:	b	1abac <main@@Base+0x468c>
   1941c:	b	19420 <main@@Base+0x2f00>
   19420:	vldr	d16, [pc, #952]	; 197e0 <main@@Base+0x32c0>
   19424:	vldr	s0, [fp, #-80]	; 0xffffffb0
   19428:	vcvt.f64.f32	d17, s0
   1942c:	vcmp.f64	d17, d16
   19430:	vmrs	APSR_nzcv, fpscr
   19434:	bne	1944c <main@@Base+0x2f2c>
   19438:	ldr	r0, [fp, #-16]
   1943c:	ldr	r0, [r0, #8]
   19440:	and	r0, r0, #2
   19444:	cmp	r0, #0
   19448:	beq	19488 <main@@Base+0x2f68>
   1944c:	ldr	r0, [fp, #-16]
   19450:	ldr	r0, [r0]
   19454:	movw	r1, #25
   19458:	movw	r2, #4
   1945c:	movw	r3, #4
   19460:	uxth	r3, r3
   19464:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   19468:	str	r0, [fp, #-36]	; 0xffffffdc
   1946c:	movw	r1, #0
   19470:	cmp	r0, r1
   19474:	bne	1947c <main@@Base+0x2f5c>
   19478:	b	1abac <main@@Base+0x468c>
   1947c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19480:	vldr	s0, [fp, #-80]	; 0xffffffb0
   19484:	bl	1ff34 <main@@Base+0x9a14>
   19488:	b	194a0 <main@@Base+0x2f80>
   1948c:	ldr	r0, [fp, #-16]
   19490:	ldr	r1, [fp, #-20]	; 0xffffffec
   19494:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19498:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1949c:	str	r0, [fp, #-20]	; 0xffffffec
   194a0:	b	194b8 <main@@Base+0x2f98>
   194a4:	ldr	r0, [fp, #-16]
   194a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   194ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   194b0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   194b4:	str	r0, [fp, #-20]	; 0xffffffec
   194b8:	b	194bc <main@@Base+0x2f9c>
   194bc:	b	194c0 <main@@Base+0x2fa0>
   194c0:	b	194c4 <main@@Base+0x2fa4>
   194c4:	b	194c8 <main@@Base+0x2fa8>
   194c8:	b	1aaf4 <main@@Base+0x45d4>
   194cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   194d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   194d4:	movw	r2, #29543	; 0x7367
   194d8:	movt	r2, #26721	; 0x6861
   194dc:	subs	r0, r2, r0
   194e0:	movw	r2, #29556	; 0x7374
   194e4:	movt	r2, #29797	; 0x7465
   194e8:	sbcs	r1, r2, r1
   194ec:	str	r0, [sp, #48]	; 0x30
   194f0:	str	r1, [sp, #44]	; 0x2c
   194f4:	bcc	1967c <main@@Base+0x315c>
   194f8:	b	194fc <main@@Base+0x2fdc>
   194fc:	ldrh	r0, [fp, #-54]	; 0xffffffca
   19500:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19504:	movw	r2, #29797	; 0x7465
   19508:	eor	r2, r2, r1, lsr #16
   1950c:	orr	r0, r0, r1, lsl #16
   19510:	movw	r1, #26163	; 0x6633
   19514:	movt	r1, #29556	; 0x7374
   19518:	eor	r0, r0, r1
   1951c:	orr	r0, r0, r2
   19520:	cmp	r0, #0
   19524:	bne	19664 <main@@Base+0x3144>
   19528:	b	1952c <main@@Base+0x300c>
   1952c:	ldr	r0, [fp, #-16]
   19530:	ldr	r1, [fp, #-20]	; 0xffffffec
   19534:	str	r1, [fp, #-48]	; 0xffffffd0
   19538:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1953c:	movw	r3, #6
   19540:	bl	1bd48 <main@@Base+0x5828>
   19544:	str	r0, [fp, #-20]	; 0xffffffec
   19548:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1954c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19550:	cmp	r0, r1
   19554:	beq	1964c <main@@Base+0x312c>
   19558:	vldr	s0, [pc, #124]	; 195dc <main@@Base+0x30bc>
   1955c:	vstr	s0, [fp, #-84]	; 0xffffffac
   19560:	ldr	r0, [fp, #-16]
   19564:	ldr	r1, [fp, #-20]	; 0xffffffec
   19568:	str	r1, [fp, #-48]	; 0xffffffd0
   1956c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19570:	sub	r3, fp, #84	; 0x54
   19574:	bl	34e00 <flatcc_json_parser_float@@Base>
   19578:	str	r0, [fp, #-20]	; 0xffffffec
   1957c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19580:	ldr	r1, [fp, #-20]	; 0xffffffec
   19584:	cmp	r0, r1
   19588:	bne	195e4 <main@@Base+0x30c4>
   1958c:	ldr	r0, [pc, #4080]	; 1a584 <main@@Base+0x4064>
   19590:	add	r3, pc, r0
   19594:	ldr	r0, [fp, #-16]
   19598:	ldr	r1, [fp, #-20]	; 0xffffffec
   1959c:	str	r1, [fp, #-48]	; 0xffffffd0
   195a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   195a4:	sub	ip, fp, #84	; 0x54
   195a8:	str	ip, [sp]
   195ac:	bl	1fd4c <main@@Base+0x982c>
   195b0:	str	r0, [fp, #-20]	; 0xffffffec
   195b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   195b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   195bc:	cmp	r0, r1
   195c0:	beq	195d4 <main@@Base+0x30b4>
   195c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   195c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195cc:	cmp	r0, r1
   195d0:	bne	195e0 <main@@Base+0x30c0>
   195d4:	b	1abac <main@@Base+0x468c>
   195d8:	andeq	r4, r4, ip, ror #21
   195dc:	andeq	r0, r0, r0
   195e0:	b	195e4 <main@@Base+0x30c4>
   195e4:	vldr	s0, [fp, #-84]	; 0xffffffac
   195e8:	vcvt.f64.f32	d16, s0
   195ec:	vcmp.f64	d16, #0.0
   195f0:	vmrs	APSR_nzcv, fpscr
   195f4:	bne	1960c <main@@Base+0x30ec>
   195f8:	ldr	r0, [fp, #-16]
   195fc:	ldr	r0, [r0, #8]
   19600:	and	r0, r0, #2
   19604:	cmp	r0, #0
   19608:	beq	19648 <main@@Base+0x3128>
   1960c:	ldr	r0, [fp, #-16]
   19610:	ldr	r0, [r0]
   19614:	movw	r1, #27
   19618:	movw	r2, #4
   1961c:	movw	r3, #4
   19620:	uxth	r3, r3
   19624:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   19628:	str	r0, [fp, #-36]	; 0xffffffdc
   1962c:	movw	r1, #0
   19630:	cmp	r0, r1
   19634:	bne	1963c <main@@Base+0x311c>
   19638:	b	1abac <main@@Base+0x468c>
   1963c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19640:	vldr	s0, [fp, #-84]	; 0xffffffac
   19644:	bl	1ff34 <main@@Base+0x9a14>
   19648:	b	19660 <main@@Base+0x3140>
   1964c:	ldr	r0, [fp, #-16]
   19650:	ldr	r1, [fp, #-20]	; 0xffffffec
   19654:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19658:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1965c:	str	r0, [fp, #-20]	; 0xffffffec
   19660:	b	19678 <main@@Base+0x3158>
   19664:	ldr	r0, [fp, #-16]
   19668:	ldr	r1, [fp, #-20]	; 0xffffffec
   1966c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19670:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   19674:	str	r0, [fp, #-20]	; 0xffffffec
   19678:	b	1aaf0 <main@@Base+0x45d0>
   1967c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19680:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19684:	movw	r2, #29556	; 0x7374
   19688:	movt	r2, #29797	; 0x7465
   1968c:	eor	r1, r1, r2
   19690:	movw	r2, #29544	; 0x7368
   19694:	movt	r2, #26721	; 0x6861
   19698:	eor	r0, r0, r2
   1969c:	orr	r0, r0, r1
   196a0:	cmp	r0, #0
   196a4:	bne	1a2c8 <main@@Base+0x3da8>
   196a8:	b	196ac <main@@Base+0x318c>
   196ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   196b0:	add	r0, r0, #8
   196b4:	str	r0, [fp, #-20]	; 0xffffffec
   196b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   196bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196c0:	bl	1bd10 <main@@Base+0x57f0>
   196c4:	str	r1, [fp, #-52]	; 0xffffffcc
   196c8:	str	r0, [fp, #-56]	; 0xffffffc8
   196cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   196d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   196d4:	movw	lr, #30256	; 0x7630
   196d8:	movt	lr, #26222	; 0x666e
   196dc:	subs	r0, lr, r0
   196e0:	movw	lr, #13407	; 0x345f
   196e4:	movt	lr, #29494	; 0x7336
   196e8:	sbcs	r1, lr, r1
   196ec:	str	r0, [sp, #40]	; 0x28
   196f0:	str	r1, [sp, #36]	; 0x24
   196f4:	bcc	199dc <main@@Base+0x34bc>
   196f8:	b	196fc <main@@Base+0x31dc>
   196fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19700:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19704:	movw	r2, #12895	; 0x325f
   19708:	movt	r2, #29491	; 0x7333
   1970c:	eor	r1, r1, r2
   19710:	movw	r2, #30257	; 0x7631
   19714:	movt	r2, #26222	; 0x666e
   19718:	eor	r0, r0, r2
   1971c:	orr	r0, r0, r1
   19720:	cmp	r0, #0
   19724:	bne	199c4 <main@@Base+0x34a4>
   19728:	b	19730 <main@@Base+0x3210>
   1972c:	svcne	0x00ffffff
   19730:	ldr	r0, [fp, #-16]
   19734:	ldr	r1, [fp, #-20]	; 0xffffffec
   19738:	str	r1, [fp, #-48]	; 0xffffffd0
   1973c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19740:	movw	r3, #8
   19744:	bl	1bd48 <main@@Base+0x5828>
   19748:	str	r0, [fp, #-20]	; 0xffffffec
   1974c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19750:	ldr	r1, [fp, #-20]	; 0xffffffec
   19754:	cmp	r0, r1
   19758:	beq	1984c <main@@Base+0x332c>
   1975c:	movw	r0, #0
   19760:	str	r0, [fp, #-88]	; 0xffffffa8
   19764:	ldr	r0, [fp, #-16]
   19768:	ldr	r1, [fp, #-20]	; 0xffffffec
   1976c:	str	r1, [fp, #-48]	; 0xffffffd0
   19770:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19774:	sub	r3, fp, #88	; 0x58
   19778:	bl	1ff60 <main@@Base+0x9a40>
   1977c:	str	r0, [fp, #-20]	; 0xffffffec
   19780:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19784:	ldr	r1, [fp, #-20]	; 0xffffffec
   19788:	cmp	r0, r1
   1978c:	bne	197ec <main@@Base+0x32cc>
   19790:	ldr	r0, [pc, #4092]	; 1a794 <main@@Base+0x4274>
   19794:	add	r3, pc, r0
   19798:	ldr	r0, [fp, #-16]
   1979c:	ldr	r1, [fp, #-20]	; 0xffffffec
   197a0:	str	r1, [fp, #-48]	; 0xffffffd0
   197a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   197a8:	sub	ip, fp, #88	; 0x58
   197ac:	str	ip, [sp]
   197b0:	bl	20038 <main@@Base+0x9b18>
   197b4:	str	r0, [fp, #-20]	; 0xffffffec
   197b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   197bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   197c0:	cmp	r0, r1
   197c4:	beq	197d8 <main@@Base+0x32b8>
   197c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   197cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197d0:	cmp	r0, r1
   197d4:	bne	197e8 <main@@Base+0x32c8>
   197d8:	b	1abac <main@@Base+0x468c>
   197dc:	nop	{0}
   197e0:	andeq	r0, r0, r0
   197e4:			; <UNDEFINED> instruction: 0x41132cbc
   197e8:	b	197ec <main@@Base+0x32cc>
   197ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   197f0:	cmp	r0, #0
   197f4:	bne	1980c <main@@Base+0x32ec>
   197f8:	ldr	r0, [fp, #-16]
   197fc:	ldr	r0, [r0, #8]
   19800:	and	r0, r0, #2
   19804:	cmp	r0, #0
   19808:	beq	19848 <main@@Base+0x3328>
   1980c:	ldr	r0, [fp, #-16]
   19810:	ldr	r0, [r0]
   19814:	movw	r1, #16
   19818:	movw	r2, #4
   1981c:	movw	r3, #4
   19820:	uxth	r3, r3
   19824:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   19828:	str	r0, [fp, #-36]	; 0xffffffdc
   1982c:	movw	r1, #0
   19830:	cmp	r0, r1
   19834:	bne	1983c <main@@Base+0x331c>
   19838:	b	1abac <main@@Base+0x468c>
   1983c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19840:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19844:	bl	2021c <main@@Base+0x9cfc>
   19848:	b	199c0 <main@@Base+0x34a0>
   1984c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19850:	add	r0, r0, #8
   19854:	str	r0, [fp, #-20]	; 0xffffffec
   19858:	ldr	r0, [fp, #-20]	; 0xffffffec
   1985c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19860:	bl	1bd10 <main@@Base+0x57f0>
   19864:	str	r1, [fp, #-52]	; 0xffffffcc
   19868:	str	r0, [fp, #-56]	; 0xffffffc8
   1986c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19870:	and	r0, r0, #-16777216	; 0xff000000
   19874:	teq	r0, #1627389952	; 0x61000000
   19878:	bne	199a8 <main@@Base+0x3488>
   1987c:	b	19880 <main@@Base+0x3360>
   19880:	ldr	r0, [fp, #-16]
   19884:	ldr	r1, [fp, #-20]	; 0xffffffec
   19888:	str	r1, [fp, #-48]	; 0xffffffd0
   1988c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19890:	movw	r3, #1
   19894:	bl	1bd48 <main@@Base+0x5828>
   19898:	str	r0, [fp, #-20]	; 0xffffffec
   1989c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   198a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   198a4:	cmp	r0, r1
   198a8:	beq	19990 <main@@Base+0x3470>
   198ac:	movw	r0, #0
   198b0:	str	r0, [fp, #-92]	; 0xffffffa4
   198b4:	ldr	r0, [fp, #-16]
   198b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   198bc:	str	r1, [fp, #-48]	; 0xffffffd0
   198c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   198c4:	sub	r3, fp, #92	; 0x5c
   198c8:	bl	1ff60 <main@@Base+0x9a40>
   198cc:	str	r0, [fp, #-20]	; 0xffffffec
   198d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   198d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   198d8:	cmp	r0, r1
   198dc:	bne	19930 <main@@Base+0x3410>
   198e0:	ldr	r0, [pc, #4052]	; 1a8bc <main@@Base+0x439c>
   198e4:	add	r3, pc, r0
   198e8:	ldr	r0, [fp, #-16]
   198ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   198f0:	str	r1, [fp, #-48]	; 0xffffffd0
   198f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   198f8:	sub	ip, fp, #92	; 0x5c
   198fc:	str	ip, [sp]
   19900:	bl	20038 <main@@Base+0x9b18>
   19904:	str	r0, [fp, #-20]	; 0xffffffec
   19908:	ldr	r0, [fp, #-20]	; 0xffffffec
   1990c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19910:	cmp	r0, r1
   19914:	beq	19928 <main@@Base+0x3408>
   19918:	ldr	r0, [fp, #-20]	; 0xffffffec
   1991c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19920:	cmp	r0, r1
   19924:	bne	1992c <main@@Base+0x340c>
   19928:	b	1abac <main@@Base+0x468c>
   1992c:	b	19930 <main@@Base+0x3410>
   19930:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19934:	cmp	r0, #0
   19938:	bne	19950 <main@@Base+0x3430>
   1993c:	ldr	r0, [fp, #-16]
   19940:	ldr	r0, [r0, #8]
   19944:	and	r0, r0, #2
   19948:	cmp	r0, #0
   1994c:	beq	1998c <main@@Base+0x346c>
   19950:	ldr	r0, [fp, #-16]
   19954:	ldr	r0, [r0]
   19958:	movw	r1, #20
   1995c:	movw	r2, #4
   19960:	movw	r3, #4
   19964:	uxth	r3, r3
   19968:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   1996c:	str	r0, [fp, #-36]	; 0xffffffdc
   19970:	movw	r1, #0
   19974:	cmp	r0, r1
   19978:	bne	19980 <main@@Base+0x3460>
   1997c:	b	1abac <main@@Base+0x468c>
   19980:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19984:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19988:	bl	2021c <main@@Base+0x9cfc>
   1998c:	b	199a4 <main@@Base+0x3484>
   19990:	ldr	r0, [fp, #-16]
   19994:	ldr	r1, [fp, #-20]	; 0xffffffec
   19998:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1999c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   199a0:	str	r0, [fp, #-20]	; 0xffffffec
   199a4:	b	199bc <main@@Base+0x349c>
   199a8:	ldr	r0, [fp, #-16]
   199ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   199b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   199b4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   199b8:	str	r0, [fp, #-20]	; 0xffffffec
   199bc:	b	199c0 <main@@Base+0x34a0>
   199c0:	b	199d8 <main@@Base+0x34b8>
   199c4:	ldr	r0, [fp, #-16]
   199c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   199cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   199d0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   199d4:	str	r0, [fp, #-20]	; 0xffffffec
   199d8:	b	1a2c4 <main@@Base+0x3da4>
   199dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   199e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   199e4:	movw	r2, #30256	; 0x7630
   199e8:	movt	r2, #26222	; 0x666e
   199ec:	subs	r0, r2, r0
   199f0:	movw	r2, #12895	; 0x325f
   199f4:	movt	r2, #30003	; 0x7533
   199f8:	sbcs	r1, r2, r1
   199fc:	str	r0, [sp, #32]
   19a00:	str	r1, [sp, #28]
   19a04:	bcc	19d04 <main@@Base+0x37e4>
   19a08:	b	19a0c <main@@Base+0x34ec>
   19a0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19a10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19a14:	movw	r2, #13407	; 0x345f
   19a18:	movt	r2, #29494	; 0x7336
   19a1c:	eor	r1, r1, r2
   19a20:	movw	r2, #30257	; 0x7631
   19a24:	movt	r2, #26222	; 0x666e
   19a28:	eor	r0, r0, r2
   19a2c:	orr	r0, r0, r1
   19a30:	cmp	r0, #0
   19a34:	bne	19cec <main@@Base+0x37cc>
   19a38:	b	19a3c <main@@Base+0x351c>
   19a3c:	ldr	r0, [fp, #-16]
   19a40:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a44:	str	r1, [fp, #-48]	; 0xffffffd0
   19a48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a4c:	movw	r3, #8
   19a50:	bl	1bd48 <main@@Base+0x5828>
   19a54:	str	r0, [fp, #-20]	; 0xffffffec
   19a58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19a5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a60:	cmp	r0, r1
   19a64:	beq	19b60 <main@@Base+0x3640>
   19a68:	mov	r0, #0
   19a6c:	str	r0, [fp, #-100]	; 0xffffff9c
   19a70:	str	r0, [fp, #-104]	; 0xffffff98
   19a74:	ldr	r0, [fp, #-16]
   19a78:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a7c:	str	r1, [fp, #-48]	; 0xffffffd0
   19a80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a84:	sub	r3, fp, #104	; 0x68
   19a88:	bl	20248 <main@@Base+0x9d28>
   19a8c:	str	r0, [fp, #-20]	; 0xffffffec
   19a90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19a94:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a98:	cmp	r0, r1
   19a9c:	bne	19af0 <main@@Base+0x35d0>
   19aa0:	ldr	r0, [pc, #4080]	; 1aa98 <main@@Base+0x4578>
   19aa4:	add	r3, pc, r0
   19aa8:	ldr	r0, [fp, #-16]
   19aac:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ab0:	str	r1, [fp, #-48]	; 0xffffffd0
   19ab4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ab8:	sub	ip, fp, #104	; 0x68
   19abc:	str	ip, [sp]
   19ac0:	bl	20320 <main@@Base+0x9e00>
   19ac4:	str	r0, [fp, #-20]	; 0xffffffec
   19ac8:	ldr	r0, [fp, #-20]	; 0xffffffec
   19acc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19ad0:	cmp	r0, r1
   19ad4:	beq	19ae8 <main@@Base+0x35c8>
   19ad8:	ldr	r0, [fp, #-20]	; 0xffffffec
   19adc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ae0:	cmp	r0, r1
   19ae4:	bne	19aec <main@@Base+0x35cc>
   19ae8:	b	1abac <main@@Base+0x468c>
   19aec:	b	19af0 <main@@Base+0x35d0>
   19af0:	ldr	r0, [fp, #-104]	; 0xffffff98
   19af4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19af8:	orr	r0, r0, r1
   19afc:	cmp	r0, #0
   19b00:	bne	19b1c <main@@Base+0x35fc>
   19b04:	b	19b08 <main@@Base+0x35e8>
   19b08:	ldr	r0, [fp, #-16]
   19b0c:	ldr	r0, [r0, #8]
   19b10:	and	r0, r0, #2
   19b14:	cmp	r0, #0
   19b18:	beq	19b5c <main@@Base+0x363c>
   19b1c:	ldr	r0, [fp, #-16]
   19b20:	ldr	r0, [r0]
   19b24:	movw	r1, #18
   19b28:	movw	r2, #8
   19b2c:	movw	r3, #8
   19b30:	uxth	r3, r3
   19b34:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   19b38:	str	r0, [fp, #-36]	; 0xffffffdc
   19b3c:	movw	r1, #0
   19b40:	cmp	r0, r1
   19b44:	bne	19b4c <main@@Base+0x362c>
   19b48:	b	1abac <main@@Base+0x468c>
   19b4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19b50:	ldr	r2, [fp, #-104]	; 0xffffff98
   19b54:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19b58:	bl	2051c <main@@Base+0x9ffc>
   19b5c:	b	19ce8 <main@@Base+0x37c8>
   19b60:	ldr	r0, [fp, #-20]	; 0xffffffec
   19b64:	add	r0, r0, #8
   19b68:	str	r0, [fp, #-20]	; 0xffffffec
   19b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19b70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b74:	bl	1bd10 <main@@Base+0x57f0>
   19b78:	str	r1, [fp, #-52]	; 0xffffffcc
   19b7c:	str	r0, [fp, #-56]	; 0xffffffc8
   19b80:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19b84:	and	r0, r0, #-16777216	; 0xff000000
   19b88:	teq	r0, #1627389952	; 0x61000000
   19b8c:	bne	19cd0 <main@@Base+0x37b0>
   19b90:	b	19b94 <main@@Base+0x3674>
   19b94:	ldr	r0, [fp, #-16]
   19b98:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b9c:	str	r1, [fp, #-48]	; 0xffffffd0
   19ba0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ba4:	movw	r3, #1
   19ba8:	bl	1bd48 <main@@Base+0x5828>
   19bac:	str	r0, [fp, #-20]	; 0xffffffec
   19bb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19bb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19bb8:	cmp	r0, r1
   19bbc:	beq	19cb8 <main@@Base+0x3798>
   19bc0:	mov	r0, #0
   19bc4:	str	r0, [fp, #-108]	; 0xffffff94
   19bc8:	str	r0, [fp, #-112]	; 0xffffff90
   19bcc:	ldr	r0, [fp, #-16]
   19bd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   19bd4:	str	r1, [fp, #-48]	; 0xffffffd0
   19bd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19bdc:	sub	r3, fp, #112	; 0x70
   19be0:	bl	20248 <main@@Base+0x9d28>
   19be4:	str	r0, [fp, #-20]	; 0xffffffec
   19be8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19bec:	ldr	r1, [fp, #-20]	; 0xffffffec
   19bf0:	cmp	r0, r1
   19bf4:	bne	19c48 <main@@Base+0x3728>
   19bf8:	ldr	r0, [pc, #4080]	; 1abf0 <main@@Base+0x46d0>
   19bfc:	add	r3, pc, r0
   19c00:	ldr	r0, [fp, #-16]
   19c04:	ldr	r1, [fp, #-20]	; 0xffffffec
   19c08:	str	r1, [fp, #-48]	; 0xffffffd0
   19c0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c10:	sub	ip, fp, #112	; 0x70
   19c14:	str	ip, [sp]
   19c18:	bl	20320 <main@@Base+0x9e00>
   19c1c:	str	r0, [fp, #-20]	; 0xffffffec
   19c20:	ldr	r0, [fp, #-20]	; 0xffffffec
   19c24:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19c28:	cmp	r0, r1
   19c2c:	beq	19c40 <main@@Base+0x3720>
   19c30:	ldr	r0, [fp, #-20]	; 0xffffffec
   19c34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19c38:	cmp	r0, r1
   19c3c:	bne	19c44 <main@@Base+0x3724>
   19c40:	b	1abac <main@@Base+0x468c>
   19c44:	b	19c48 <main@@Base+0x3728>
   19c48:	ldr	r0, [fp, #-112]	; 0xffffff90
   19c4c:	ldr	r1, [fp, #-108]	; 0xffffff94
   19c50:	orr	r0, r0, r1
   19c54:	cmp	r0, #0
   19c58:	bne	19c74 <main@@Base+0x3754>
   19c5c:	b	19c60 <main@@Base+0x3740>
   19c60:	ldr	r0, [fp, #-16]
   19c64:	ldr	r0, [r0, #8]
   19c68:	and	r0, r0, #2
   19c6c:	cmp	r0, #0
   19c70:	beq	19cb4 <main@@Base+0x3794>
   19c74:	ldr	r0, [fp, #-16]
   19c78:	ldr	r0, [r0]
   19c7c:	movw	r1, #22
   19c80:	movw	r2, #8
   19c84:	movw	r3, #8
   19c88:	uxth	r3, r3
   19c8c:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   19c90:	str	r0, [fp, #-36]	; 0xffffffdc
   19c94:	movw	r1, #0
   19c98:	cmp	r0, r1
   19c9c:	bne	19ca4 <main@@Base+0x3784>
   19ca0:	b	1abac <main@@Base+0x468c>
   19ca4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19ca8:	ldr	r2, [fp, #-112]	; 0xffffff90
   19cac:	ldr	r3, [fp, #-108]	; 0xffffff94
   19cb0:	bl	2051c <main@@Base+0x9ffc>
   19cb4:	b	19ccc <main@@Base+0x37ac>
   19cb8:	ldr	r0, [fp, #-16]
   19cbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   19cc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19cc4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   19cc8:	str	r0, [fp, #-20]	; 0xffffffec
   19ccc:	b	19ce4 <main@@Base+0x37c4>
   19cd0:	ldr	r0, [fp, #-16]
   19cd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19cd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19cdc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   19ce0:	str	r0, [fp, #-20]	; 0xffffffec
   19ce4:	b	19ce8 <main@@Base+0x37c8>
   19ce8:	b	19d00 <main@@Base+0x37e0>
   19cec:	ldr	r0, [fp, #-16]
   19cf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   19cf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19cf8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   19cfc:	str	r0, [fp, #-20]	; 0xffffffec
   19d00:	b	1a2c0 <main@@Base+0x3da0>
   19d04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19d08:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19d0c:	movw	r2, #12895	; 0x325f
   19d10:	movt	r2, #30003	; 0x7533
   19d14:	eor	r1, r1, r2
   19d18:	movw	r2, #30257	; 0x7631
   19d1c:	movt	r2, #26222	; 0x666e
   19d20:	eor	r0, r0, r2
   19d24:	orr	r0, r0, r1
   19d28:	cmp	r0, #0
   19d2c:	bne	19fc0 <main@@Base+0x3aa0>
   19d30:	b	19d34 <main@@Base+0x3814>
   19d34:	ldr	r0, [fp, #-16]
   19d38:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d3c:	str	r1, [fp, #-48]	; 0xffffffd0
   19d40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d44:	movw	r3, #8
   19d48:	bl	1bd48 <main@@Base+0x5828>
   19d4c:	str	r0, [fp, #-20]	; 0xffffffec
   19d50:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19d54:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d58:	cmp	r0, r1
   19d5c:	beq	19e44 <main@@Base+0x3924>
   19d60:	movw	r0, #0
   19d64:	str	r0, [fp, #-116]	; 0xffffff8c
   19d68:	ldr	r0, [fp, #-16]
   19d6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d70:	str	r1, [fp, #-48]	; 0xffffffd0
   19d74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d78:	sub	r3, fp, #116	; 0x74
   19d7c:	bl	20554 <main@@Base+0xa034>
   19d80:	str	r0, [fp, #-20]	; 0xffffffec
   19d84:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19d88:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d8c:	cmp	r0, r1
   19d90:	bne	19de4 <main@@Base+0x38c4>
   19d94:	ldr	r0, [pc, #3664]	; 1abec <main@@Base+0x46cc>
   19d98:	add	r3, pc, r0
   19d9c:	ldr	r0, [fp, #-16]
   19da0:	ldr	r1, [fp, #-20]	; 0xffffffec
   19da4:	str	r1, [fp, #-48]	; 0xffffffd0
   19da8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19dac:	sub	ip, fp, #116	; 0x74
   19db0:	str	ip, [sp]
   19db4:	bl	2062c <main@@Base+0xa10c>
   19db8:	str	r0, [fp, #-20]	; 0xffffffec
   19dbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   19dc0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19dc4:	cmp	r0, r1
   19dc8:	beq	19ddc <main@@Base+0x38bc>
   19dcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   19dd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19dd4:	cmp	r0, r1
   19dd8:	bne	19de0 <main@@Base+0x38c0>
   19ddc:	b	1abac <main@@Base+0x468c>
   19de0:	b	19de4 <main@@Base+0x38c4>
   19de4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19de8:	cmp	r0, #0
   19dec:	bne	19e04 <main@@Base+0x38e4>
   19df0:	ldr	r0, [fp, #-16]
   19df4:	ldr	r0, [r0, #8]
   19df8:	and	r0, r0, #2
   19dfc:	cmp	r0, #0
   19e00:	beq	19e40 <main@@Base+0x3920>
   19e04:	ldr	r0, [fp, #-16]
   19e08:	ldr	r0, [r0]
   19e0c:	movw	r1, #17
   19e10:	movw	r2, #4
   19e14:	movw	r3, #4
   19e18:	uxth	r3, r3
   19e1c:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   19e20:	str	r0, [fp, #-36]	; 0xffffffdc
   19e24:	movw	r1, #0
   19e28:	cmp	r0, r1
   19e2c:	bne	19e34 <main@@Base+0x3914>
   19e30:	b	1abac <main@@Base+0x468c>
   19e34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e38:	ldr	r1, [fp, #-116]	; 0xffffff8c
   19e3c:	bl	20810 <main@@Base+0xa2f0>
   19e40:	b	19fbc <main@@Base+0x3a9c>
   19e44:	ldr	r0, [fp, #-20]	; 0xffffffec
   19e48:	add	r0, r0, #8
   19e4c:	str	r0, [fp, #-20]	; 0xffffffec
   19e50:	ldr	r0, [fp, #-20]	; 0xffffffec
   19e54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e58:	bl	1bd10 <main@@Base+0x57f0>
   19e5c:	str	r1, [fp, #-52]	; 0xffffffcc
   19e60:	str	r0, [fp, #-56]	; 0xffffffc8
   19e64:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19e68:	and	r0, r0, #-16777216	; 0xff000000
   19e6c:	teq	r0, #1627389952	; 0x61000000
   19e70:	bne	19fa4 <main@@Base+0x3a84>
   19e74:	b	19e78 <main@@Base+0x3958>
   19e78:	ldr	r0, [fp, #-16]
   19e7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19e80:	str	r1, [fp, #-48]	; 0xffffffd0
   19e84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e88:	movw	r3, #1
   19e8c:	bl	1bd48 <main@@Base+0x5828>
   19e90:	str	r0, [fp, #-20]	; 0xffffffec
   19e94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19e98:	ldr	r1, [fp, #-20]	; 0xffffffec
   19e9c:	cmp	r0, r1
   19ea0:	beq	19f8c <main@@Base+0x3a6c>
   19ea4:	movw	r0, #0
   19ea8:	str	r0, [fp, #-120]	; 0xffffff88
   19eac:	ldr	r0, [fp, #-16]
   19eb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   19eb4:	str	r1, [fp, #-48]	; 0xffffffd0
   19eb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ebc:	sub	r3, fp, #120	; 0x78
   19ec0:	bl	20554 <main@@Base+0xa034>
   19ec4:	str	r0, [fp, #-20]	; 0xffffffec
   19ec8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19ecc:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ed0:	cmp	r0, r1
   19ed4:	bne	19f28 <main@@Base+0x3a08>
   19ed8:	ldr	r0, [pc, #3336]	; 1abe8 <main@@Base+0x46c8>
   19edc:	add	r3, pc, r0
   19ee0:	ldr	r0, [fp, #-16]
   19ee4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ee8:	str	r1, [fp, #-48]	; 0xffffffd0
   19eec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ef0:	sub	ip, fp, #120	; 0x78
   19ef4:	str	ip, [sp]
   19ef8:	bl	2062c <main@@Base+0xa10c>
   19efc:	str	r0, [fp, #-20]	; 0xffffffec
   19f00:	ldr	r0, [fp, #-20]	; 0xffffffec
   19f04:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19f08:	cmp	r0, r1
   19f0c:	beq	19f20 <main@@Base+0x3a00>
   19f10:	ldr	r0, [fp, #-20]	; 0xffffffec
   19f14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f18:	cmp	r0, r1
   19f1c:	bne	19f24 <main@@Base+0x3a04>
   19f20:	b	1abac <main@@Base+0x468c>
   19f24:	b	19f28 <main@@Base+0x3a08>
   19f28:	ldr	r0, [fp, #-120]	; 0xffffff88
   19f2c:	cmp	r0, #0
   19f30:	bne	19f48 <main@@Base+0x3a28>
   19f34:	ldr	r0, [fp, #-16]
   19f38:	ldr	r0, [r0, #8]
   19f3c:	and	r0, r0, #2
   19f40:	cmp	r0, #0
   19f44:	beq	19f84 <main@@Base+0x3a64>
   19f48:	ldr	r0, [fp, #-16]
   19f4c:	ldr	r0, [r0]
   19f50:	movw	r1, #21
   19f54:	movw	r2, #4
   19f58:	movw	r3, #4
   19f5c:	uxth	r3, r3
   19f60:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   19f64:	str	r0, [fp, #-36]	; 0xffffffdc
   19f68:	movw	r1, #0
   19f6c:	cmp	r0, r1
   19f70:	bne	19f78 <main@@Base+0x3a58>
   19f74:	b	1abac <main@@Base+0x468c>
   19f78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19f7c:	ldr	r1, [fp, #-120]	; 0xffffff88
   19f80:	bl	20810 <main@@Base+0xa2f0>
   19f84:	b	19fa0 <main@@Base+0x3a80>
   19f88:	andeq	r4, r4, r8, asr #2
   19f8c:	ldr	r0, [fp, #-16]
   19f90:	ldr	r1, [fp, #-20]	; 0xffffffec
   19f94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19f98:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   19f9c:	str	r0, [fp, #-20]	; 0xffffffec
   19fa0:	b	19fb8 <main@@Base+0x3a98>
   19fa4:	ldr	r0, [fp, #-16]
   19fa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   19fac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19fb0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   19fb4:	str	r0, [fp, #-20]	; 0xffffffec
   19fb8:	b	19fbc <main@@Base+0x3a9c>
   19fbc:	b	1a2bc <main@@Base+0x3d9c>
   19fc0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19fc4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19fc8:	movw	r2, #13407	; 0x345f
   19fcc:	movt	r2, #30006	; 0x7536
   19fd0:	eor	r1, r1, r2
   19fd4:	movw	r2, #30257	; 0x7631
   19fd8:	movt	r2, #26222	; 0x666e
   19fdc:	eor	r0, r0, r2
   19fe0:	orr	r0, r0, r1
   19fe4:	cmp	r0, #0
   19fe8:	bne	1a2a4 <main@@Base+0x3d84>
   19fec:	b	19ff0 <main@@Base+0x3ad0>
   19ff0:	ldr	r0, [fp, #-16]
   19ff4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ff8:	str	r1, [fp, #-48]	; 0xffffffd0
   19ffc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a000:	movw	r3, #8
   1a004:	bl	1bd48 <main@@Base+0x5828>
   1a008:	str	r0, [fp, #-20]	; 0xffffffec
   1a00c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a010:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a014:	cmp	r0, r1
   1a018:	beq	1a114 <main@@Base+0x3bf4>
   1a01c:	mov	r0, #0
   1a020:	str	r0, [fp, #-124]	; 0xffffff84
   1a024:	str	r0, [fp, #-128]	; 0xffffff80
   1a028:	ldr	r0, [fp, #-16]
   1a02c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a030:	str	r1, [fp, #-48]	; 0xffffffd0
   1a034:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a038:	sub	r3, fp, #128	; 0x80
   1a03c:	bl	2083c <main@@Base+0xa31c>
   1a040:	str	r0, [fp, #-20]	; 0xffffffec
   1a044:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a048:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a04c:	cmp	r0, r1
   1a050:	bne	1a0a4 <main@@Base+0x3b84>
   1a054:	ldr	r0, [pc, #2952]	; 1abe4 <main@@Base+0x46c4>
   1a058:	add	r3, pc, r0
   1a05c:	ldr	r0, [fp, #-16]
   1a060:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a064:	str	r1, [fp, #-48]	; 0xffffffd0
   1a068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a06c:	sub	ip, fp, #128	; 0x80
   1a070:	str	ip, [sp]
   1a074:	bl	20914 <main@@Base+0xa3f4>
   1a078:	str	r0, [fp, #-20]	; 0xffffffec
   1a07c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a080:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a084:	cmp	r0, r1
   1a088:	beq	1a09c <main@@Base+0x3b7c>
   1a08c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a090:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a094:	cmp	r0, r1
   1a098:	bne	1a0a0 <main@@Base+0x3b80>
   1a09c:	b	1abac <main@@Base+0x468c>
   1a0a0:	b	1a0a4 <main@@Base+0x3b84>
   1a0a4:	ldr	r0, [fp, #-128]	; 0xffffff80
   1a0a8:	ldr	r1, [fp, #-124]	; 0xffffff84
   1a0ac:	orr	r0, r0, r1
   1a0b0:	cmp	r0, #0
   1a0b4:	bne	1a0d0 <main@@Base+0x3bb0>
   1a0b8:	b	1a0bc <main@@Base+0x3b9c>
   1a0bc:	ldr	r0, [fp, #-16]
   1a0c0:	ldr	r0, [r0, #8]
   1a0c4:	and	r0, r0, #2
   1a0c8:	cmp	r0, #0
   1a0cc:	beq	1a110 <main@@Base+0x3bf0>
   1a0d0:	ldr	r0, [fp, #-16]
   1a0d4:	ldr	r0, [r0]
   1a0d8:	movw	r1, #19
   1a0dc:	movw	r2, #8
   1a0e0:	movw	r3, #8
   1a0e4:	uxth	r3, r3
   1a0e8:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   1a0ec:	str	r0, [fp, #-36]	; 0xffffffdc
   1a0f0:	movw	r1, #0
   1a0f4:	cmp	r0, r1
   1a0f8:	bne	1a100 <main@@Base+0x3be0>
   1a0fc:	b	1abac <main@@Base+0x468c>
   1a100:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a104:	ldr	r2, [fp, #-128]	; 0xffffff80
   1a108:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a10c:	bl	20b10 <main@@Base+0xa5f0>
   1a110:	b	1a2a0 <main@@Base+0x3d80>
   1a114:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a118:	add	r0, r0, #8
   1a11c:	str	r0, [fp, #-20]	; 0xffffffec
   1a120:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a128:	bl	1bd10 <main@@Base+0x57f0>
   1a12c:	str	r1, [fp, #-52]	; 0xffffffcc
   1a130:	str	r0, [fp, #-56]	; 0xffffffc8
   1a134:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a138:	and	r0, r0, #-16777216	; 0xff000000
   1a13c:	teq	r0, #1627389952	; 0x61000000
   1a140:	bne	1a288 <main@@Base+0x3d68>
   1a144:	b	1a148 <main@@Base+0x3c28>
   1a148:	ldr	r0, [fp, #-16]
   1a14c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a150:	str	r1, [fp, #-48]	; 0xffffffd0
   1a154:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a158:	movw	r3, #1
   1a15c:	bl	1bd48 <main@@Base+0x5828>
   1a160:	str	r0, [fp, #-20]	; 0xffffffec
   1a164:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a168:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a16c:	cmp	r0, r1
   1a170:	beq	1a270 <main@@Base+0x3d50>
   1a174:	mov	r0, #0
   1a178:	str	r0, [fp, #-132]	; 0xffffff7c
   1a17c:	str	r0, [fp, #-136]	; 0xffffff78
   1a180:	ldr	r0, [fp, #-16]
   1a184:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a188:	str	r1, [fp, #-48]	; 0xffffffd0
   1a18c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a190:	sub	r3, fp, #136	; 0x88
   1a194:	bl	2083c <main@@Base+0xa31c>
   1a198:	str	r0, [fp, #-20]	; 0xffffffec
   1a19c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a1a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a1a4:	cmp	r0, r1
   1a1a8:	bne	1a1fc <main@@Base+0x3cdc>
   1a1ac:	ldr	r0, [pc, #2604]	; 1abe0 <main@@Base+0x46c0>
   1a1b0:	add	r3, pc, r0
   1a1b4:	ldr	r0, [fp, #-16]
   1a1b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a1bc:	str	r1, [fp, #-48]	; 0xffffffd0
   1a1c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a1c4:	sub	ip, fp, #136	; 0x88
   1a1c8:	str	ip, [sp]
   1a1cc:	bl	20914 <main@@Base+0xa3f4>
   1a1d0:	str	r0, [fp, #-20]	; 0xffffffec
   1a1d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a1d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a1dc:	cmp	r0, r1
   1a1e0:	beq	1a1f4 <main@@Base+0x3cd4>
   1a1e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a1e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a1ec:	cmp	r0, r1
   1a1f0:	bne	1a1f8 <main@@Base+0x3cd8>
   1a1f4:	b	1abac <main@@Base+0x468c>
   1a1f8:	b	1a1fc <main@@Base+0x3cdc>
   1a1fc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1a200:	ldr	r1, [fp, #-132]	; 0xffffff7c
   1a204:	orr	r0, r0, r1
   1a208:	cmp	r0, #0
   1a20c:	bne	1a228 <main@@Base+0x3d08>
   1a210:	b	1a214 <main@@Base+0x3cf4>
   1a214:	ldr	r0, [fp, #-16]
   1a218:	ldr	r0, [r0, #8]
   1a21c:	and	r0, r0, #2
   1a220:	cmp	r0, #0
   1a224:	beq	1a268 <main@@Base+0x3d48>
   1a228:	ldr	r0, [fp, #-16]
   1a22c:	ldr	r0, [r0]
   1a230:	movw	r1, #23
   1a234:	movw	r2, #8
   1a238:	movw	r3, #8
   1a23c:	uxth	r3, r3
   1a240:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   1a244:	str	r0, [fp, #-36]	; 0xffffffdc
   1a248:	movw	r1, #0
   1a24c:	cmp	r0, r1
   1a250:	bne	1a258 <main@@Base+0x3d38>
   1a254:	b	1abac <main@@Base+0x468c>
   1a258:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a25c:	ldr	r2, [fp, #-136]	; 0xffffff78
   1a260:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1a264:	bl	20b10 <main@@Base+0xa5f0>
   1a268:	b	1a284 <main@@Base+0x3d64>
   1a26c:	andeq	r3, r4, ip, ror lr
   1a270:	ldr	r0, [fp, #-16]
   1a274:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a278:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a27c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a280:	str	r0, [fp, #-20]	; 0xffffffec
   1a284:	b	1a29c <main@@Base+0x3d7c>
   1a288:	ldr	r0, [fp, #-16]
   1a28c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a290:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a294:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a298:	str	r0, [fp, #-20]	; 0xffffffec
   1a29c:	b	1a2a0 <main@@Base+0x3d80>
   1a2a0:	b	1a2b8 <main@@Base+0x3d98>
   1a2a4:	ldr	r0, [fp, #-16]
   1a2a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a2ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a2b0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a2b4:	str	r0, [fp, #-20]	; 0xffffffec
   1a2b8:	b	1a2bc <main@@Base+0x3d9c>
   1a2bc:	b	1a2c0 <main@@Base+0x3da0>
   1a2c0:	b	1a2c4 <main@@Base+0x3da4>
   1a2c4:	b	1aaec <main@@Base+0x45cc>
   1a2c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a2cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a2d0:	movw	r2, #24430	; 0x5f6e
   1a2d4:	movt	r2, #28530	; 0x6f72
   1a2d8:	subs	r0, r2, r0
   1a2dc:	movw	r2, #25460	; 0x6374
   1a2e0:	movt	r2, #30309	; 0x7665
   1a2e4:	sbcs	r1, r2, r1
   1a2e8:	str	r0, [sp, #24]
   1a2ec:	str	r1, [sp, #20]
   1a2f0:	bcc	1a63c <main@@Base+0x411c>
   1a2f4:	b	1a2f8 <main@@Base+0x3dd8>
   1a2f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a2fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a300:	movw	r2, #29556	; 0x7374
   1a304:	movt	r2, #29797	; 0x7465
   1a308:	eor	r1, r1, r2
   1a30c:	movw	r2, #29556	; 0x7374
   1a310:	movt	r2, #28261	; 0x6e65
   1a314:	eor	r0, r0, r2
   1a318:	orr	r0, r0, r1
   1a31c:	cmp	r0, #0
   1a320:	bne	1a624 <main@@Base+0x4104>
   1a324:	b	1a328 <main@@Base+0x3e08>
   1a328:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a32c:	add	r0, r0, #8
   1a330:	str	r0, [fp, #-20]	; 0xffffffec
   1a334:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a33c:	bl	1bd10 <main@@Base+0x57f0>
   1a340:	str	r1, [fp, #-52]	; 0xffffffcc
   1a344:	str	r0, [fp, #-56]	; 0xffffffc8
   1a348:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a34c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a350:	movw	lr, #26220	; 0x666c
   1a354:	movt	lr, #25956	; 0x6564
   1a358:	eor	r1, r1, lr
   1a35c:	movw	lr, #25205	; 0x6275
   1a360:	movt	lr, #24948	; 0x6174
   1a364:	eor	r0, r0, lr
   1a368:	orr	r0, r0, r1
   1a36c:	cmp	r0, #0
   1a370:	bne	1a60c <main@@Base+0x40ec>
   1a374:	b	1a378 <main@@Base+0x3e58>
   1a378:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a37c:	add	r0, r0, #8
   1a380:	str	r0, [fp, #-20]	; 0xffffffec
   1a384:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a388:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a38c:	bl	1bd10 <main@@Base+0x57f0>
   1a390:	str	r1, [fp, #-52]	; 0xffffffcc
   1a394:	str	r0, [fp, #-56]	; 0xffffffc8
   1a398:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a39c:	movw	r1, #25970	; 0x6572
   1a3a0:	movt	r1, #26214	; 0x6666
   1a3a4:	teq	r0, r1
   1a3a8:	bne	1a5f4 <main@@Base+0x40d4>
   1a3ac:	b	1a3b4 <main@@Base+0x3e94>
   1a3b0:	andeq	r3, r4, r0, lsr #26
   1a3b4:	ldr	r0, [fp, #-16]
   1a3b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a3bc:	str	r1, [fp, #-48]	; 0xffffffd0
   1a3c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a3c4:	movw	r3, #4
   1a3c8:	bl	1bd48 <main@@Base+0x5828>
   1a3cc:	str	r0, [fp, #-20]	; 0xffffffec
   1a3d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a3d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a3d8:	cmp	r0, r1
   1a3dc:	beq	1a5dc <main@@Base+0x40bc>
   1a3e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a3e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3e8:	cmp	r0, r1
   1a3ec:	beq	1a530 <main@@Base+0x4010>
   1a3f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a3f4:	ldrb	r0, [r0]
   1a3f8:	cmp	r0, #91	; 0x5b
   1a3fc:	bne	1a530 <main@@Base+0x4010>
   1a400:	ldr	r0, [fp, #-16]
   1a404:	ldr	r0, [r0]
   1a408:	movw	r1, #1
   1a40c:	movw	r2, #1
   1a410:	uxth	r2, r2
   1a414:	mvn	r3, #0
   1a418:	bl	2b678 <flatcc_builder_start_vector@@Base>
   1a41c:	cmp	r0, #0
   1a420:	beq	1a428 <main@@Base+0x3f08>
   1a424:	b	1abac <main@@Base+0x468c>
   1a428:	ldr	r0, [fp, #-16]
   1a42c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a430:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a434:	sub	r3, fp, #32
   1a438:	bl	1d544 <main@@Base+0x7024>
   1a43c:	str	r0, [fp, #-20]	; 0xffffffec
   1a440:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a444:	cmp	r0, #0
   1a448:	beq	1a51c <main@@Base+0x3ffc>
   1a44c:	movw	r0, #0
   1a450:	strb	r0, [fp, #-137]	; 0xffffff77
   1a454:	ldr	r0, [fp, #-16]
   1a458:	ldr	r0, [r0]
   1a45c:	movw	r1, #1
   1a460:	bl	2ab7c <flatcc_builder_extend_vector@@Base>
   1a464:	str	r0, [fp, #-36]	; 0xffffffdc
   1a468:	movw	r1, #0
   1a46c:	cmp	r0, r1
   1a470:	bne	1a478 <main@@Base+0x3f58>
   1a474:	b	1abac <main@@Base+0x468c>
   1a478:	ldr	r0, [fp, #-16]
   1a47c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a480:	str	r1, [fp, #-48]	; 0xffffffd0
   1a484:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a488:	sub	r3, fp, #137	; 0x89
   1a48c:	bl	1d628 <main@@Base+0x7108>
   1a490:	str	r0, [fp, #-20]	; 0xffffffec
   1a494:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a498:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a49c:	cmp	r0, r1
   1a4a0:	bne	1a4f4 <main@@Base+0x3fd4>
   1a4a4:	ldr	r0, [pc, #1840]	; 1abdc <main@@Base+0x46bc>
   1a4a8:	add	r3, pc, r0
   1a4ac:	ldr	r0, [fp, #-16]
   1a4b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a4b4:	str	r1, [fp, #-48]	; 0xffffffd0
   1a4b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a4bc:	sub	ip, fp, #137	; 0x89
   1a4c0:	str	ip, [sp]
   1a4c4:	bl	1d704 <main@@Base+0x71e4>
   1a4c8:	str	r0, [fp, #-20]	; 0xffffffec
   1a4cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a4d4:	cmp	r0, r1
   1a4d8:	beq	1a4ec <main@@Base+0x3fcc>
   1a4dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a4e4:	cmp	r0, r1
   1a4e8:	bne	1a4f0 <main@@Base+0x3fd0>
   1a4ec:	b	1abac <main@@Base+0x468c>
   1a4f0:	b	1a4f4 <main@@Base+0x3fd4>
   1a4f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a4f8:	ldrb	r1, [fp, #-137]	; 0xffffff77
   1a4fc:	bl	1d8e8 <main@@Base+0x73c8>
   1a500:	ldr	r0, [fp, #-16]
   1a504:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a508:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a50c:	sub	r3, fp, #32
   1a510:	bl	1d914 <main@@Base+0x73f4>
   1a514:	str	r0, [fp, #-20]	; 0xffffffec
   1a518:	b	1a440 <main@@Base+0x3f20>
   1a51c:	ldr	r0, [fp, #-16]
   1a520:	ldr	r0, [r0]
   1a524:	bl	2cb6c <flatcc_builder_end_vector@@Base>
   1a528:	str	r0, [fp, #-40]	; 0xffffffd8
   1a52c:	b	1a59c <main@@Base+0x407c>
   1a530:	ldr	r0, [fp, #-16]
   1a534:	ldr	r0, [r0]
   1a538:	movw	r1, #0
   1a53c:	str	r1, [sp, #16]
   1a540:	movw	r2, #0
   1a544:	uxth	r2, r2
   1a548:	ldr	r3, [sp, #16]
   1a54c:	bl	2a3b8 <flatcc_builder_start_buffer@@Base>
   1a550:	cmp	r0, #0
   1a554:	beq	1a55c <main@@Base+0x403c>
   1a558:	b	1abac <main@@Base+0x468c>
   1a55c:	ldr	r0, [fp, #-16]
   1a560:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a564:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a568:	sub	r3, fp, #40	; 0x28
   1a56c:	bl	17188 <main@@Base+0xc68>
   1a570:	str	r0, [fp, #-20]	; 0xffffffec
   1a574:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a578:	cmp	r0, #0
   1a57c:	bne	1a588 <main@@Base+0x4068>
   1a580:	b	1abac <main@@Base+0x468c>
   1a584:	andeq	r3, r4, r0, ror fp
   1a588:	ldr	r0, [fp, #-16]
   1a58c:	ldr	r0, [r0]
   1a590:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a594:	bl	2a6fc <flatcc_builder_end_buffer@@Base>
   1a598:	str	r0, [fp, #-40]	; 0xffffffd8
   1a59c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a5a0:	cmp	r0, #0
   1a5a4:	beq	1a5c8 <main@@Base+0x40a8>
   1a5a8:	ldr	r0, [fp, #-16]
   1a5ac:	ldr	r0, [r0]
   1a5b0:	movw	r1, #13
   1a5b4:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   1a5b8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a5bc:	movw	r1, #0
   1a5c0:	cmp	r0, r1
   1a5c4:	bne	1a5cc <main@@Base+0x40ac>
   1a5c8:	b	1abac <main@@Base+0x468c>
   1a5cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a5d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a5d4:	str	r0, [r1]
   1a5d8:	b	1a5f0 <main@@Base+0x40d0>
   1a5dc:	ldr	r0, [fp, #-16]
   1a5e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a5e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a5e8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a5ec:	str	r0, [fp, #-20]	; 0xffffffec
   1a5f0:	b	1a608 <main@@Base+0x40e8>
   1a5f4:	ldr	r0, [fp, #-16]
   1a5f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a5fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a600:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a604:	str	r0, [fp, #-20]	; 0xffffffec
   1a608:	b	1a620 <main@@Base+0x4100>
   1a60c:	ldr	r0, [fp, #-16]
   1a610:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a614:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a618:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a61c:	str	r0, [fp, #-20]	; 0xffffffec
   1a620:	b	1a638 <main@@Base+0x4118>
   1a624:	ldr	r0, [fp, #-16]
   1a628:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a62c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a630:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a634:	str	r0, [fp, #-20]	; 0xffffffec
   1a638:	b	1aae8 <main@@Base+0x45c8>
   1a63c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a640:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a644:	movw	r2, #25460	; 0x6374
   1a648:	movt	r2, #30309	; 0x7665
   1a64c:	eor	r1, r1, r2
   1a650:	movw	r2, #24431	; 0x5f6f
   1a654:	movt	r2, #28530	; 0x6f72
   1a658:	eor	r0, r0, r2
   1a65c:	orr	r0, r0, r1
   1a660:	cmp	r0, #0
   1a664:	bne	1aad0 <main@@Base+0x45b0>
   1a668:	b	1a66c <main@@Base+0x414c>
   1a66c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a670:	add	r0, r0, #8
   1a674:	str	r0, [fp, #-20]	; 0xffffffec
   1a678:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a67c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a680:	bl	1bd10 <main@@Base+0x57f0>
   1a684:	str	r1, [fp, #-52]	; 0xffffffcc
   1a688:	str	r0, [fp, #-56]	; 0xffffffc8
   1a68c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a690:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a694:	movw	lr, #25711	; 0x646f
   1a698:	movt	lr, #26207	; 0x665f
   1a69c:	eor	r1, r1, lr
   1a6a0:	movw	lr, #27749	; 0x6c65
   1a6a4:	movt	lr, #30050	; 0x7562
   1a6a8:	eor	r0, r0, lr
   1a6ac:	orr	r0, r0, r1
   1a6b0:	cmp	r0, #0
   1a6b4:	bne	1a8c0 <main@@Base+0x43a0>
   1a6b8:	b	1a6bc <main@@Base+0x419c>
   1a6bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a6c0:	add	r0, r0, #8
   1a6c4:	str	r0, [fp, #-20]	; 0xffffffec
   1a6c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a6cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a6d0:	bl	1bd10 <main@@Base+0x57f0>
   1a6d4:	str	r1, [fp, #-52]	; 0xffffffcc
   1a6d8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a6dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a6e0:	and	r0, r0, #-16777216	; 0xff000000
   1a6e4:	teq	r0, #1929379840	; 0x73000000
   1a6e8:	bne	1a8a4 <main@@Base+0x4384>
   1a6ec:	b	1a6f0 <main@@Base+0x41d0>
   1a6f0:	ldr	r0, [fp, #-16]
   1a6f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a6f8:	str	r1, [fp, #-48]	; 0xffffffd0
   1a6fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a700:	movw	r3, #1
   1a704:	bl	1bd48 <main@@Base+0x5828>
   1a708:	str	r0, [fp, #-20]	; 0xffffffec
   1a70c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a710:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a714:	cmp	r0, r1
   1a718:	beq	1a88c <main@@Base+0x436c>
   1a71c:	ldr	r3, [pc, #1196]	; 1abd0 <main@@Base+0x46b0>
   1a720:	ldr	r0, [fp, #-16]
   1a724:	ldr	r0, [r0]
   1a728:	movw	r1, #8
   1a72c:	movw	r2, #8
   1a730:	uxth	r2, r2
   1a734:	bl	2b678 <flatcc_builder_start_vector@@Base>
   1a738:	cmp	r0, #0
   1a73c:	beq	1a744 <main@@Base+0x4224>
   1a740:	b	1abac <main@@Base+0x468c>
   1a744:	ldr	r0, [fp, #-16]
   1a748:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a74c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a750:	sub	r3, fp, #32
   1a754:	bl	1d544 <main@@Base+0x7024>
   1a758:	str	r0, [fp, #-20]	; 0xffffffec
   1a75c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a760:	cmp	r0, #0
   1a764:	beq	1a83c <main@@Base+0x431c>
   1a768:	vldr	d16, [pc, #1008]	; 1ab60 <main@@Base+0x4640>
   1a76c:	vstr	d16, [sp, #136]	; 0x88
   1a770:	ldr	r0, [fp, #-16]
   1a774:	ldr	r0, [r0]
   1a778:	movw	r1, #1
   1a77c:	bl	2ab7c <flatcc_builder_extend_vector@@Base>
   1a780:	str	r0, [fp, #-36]	; 0xffffffdc
   1a784:	movw	r1, #0
   1a788:	cmp	r0, r1
   1a78c:	bne	1a798 <main@@Base+0x4278>
   1a790:	b	1abac <main@@Base+0x468c>
   1a794:	andeq	r3, r4, r8, ror r9
   1a798:	ldr	r0, [fp, #-16]
   1a79c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a7a0:	str	r1, [fp, #-48]	; 0xffffffd0
   1a7a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a7a8:	add	r3, sp, #136	; 0x88
   1a7ac:	bl	34c40 <flatcc_json_parser_double@@Base>
   1a7b0:	str	r0, [fp, #-20]	; 0xffffffec
   1a7b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a7b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a7bc:	cmp	r0, r1
   1a7c0:	bne	1a814 <main@@Base+0x42f4>
   1a7c4:	ldr	r0, [pc, #1036]	; 1abd8 <main@@Base+0x46b8>
   1a7c8:	add	r3, pc, r0
   1a7cc:	ldr	r0, [fp, #-16]
   1a7d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a7d4:	str	r1, [fp, #-48]	; 0xffffffd0
   1a7d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a7dc:	add	ip, sp, #136	; 0x88
   1a7e0:	str	ip, [sp]
   1a7e4:	bl	20b48 <main@@Base+0xa628>
   1a7e8:	str	r0, [fp, #-20]	; 0xffffffec
   1a7ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a7f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a7f4:	cmp	r0, r1
   1a7f8:	beq	1a80c <main@@Base+0x42ec>
   1a7fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a800:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a804:	cmp	r0, r1
   1a808:	bne	1a810 <main@@Base+0x42f0>
   1a80c:	b	1abac <main@@Base+0x468c>
   1a810:	b	1a814 <main@@Base+0x42f4>
   1a814:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a818:	vldr	d0, [sp, #136]	; 0x88
   1a81c:	bl	20d38 <main@@Base+0xa818>
   1a820:	ldr	r0, [fp, #-16]
   1a824:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a828:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a82c:	sub	r3, fp, #32
   1a830:	bl	1d914 <main@@Base+0x73f4>
   1a834:	str	r0, [fp, #-20]	; 0xffffffec
   1a838:	b	1a75c <main@@Base+0x423c>
   1a83c:	ldr	r0, [fp, #-16]
   1a840:	ldr	r0, [r0]
   1a844:	bl	2cb6c <flatcc_builder_end_vector@@Base>
   1a848:	str	r0, [fp, #-40]	; 0xffffffd8
   1a84c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a850:	cmp	r0, #0
   1a854:	beq	1a878 <main@@Base+0x4358>
   1a858:	ldr	r0, [fp, #-16]
   1a85c:	ldr	r0, [r0]
   1a860:	movw	r1, #33	; 0x21
   1a864:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   1a868:	str	r0, [fp, #-44]	; 0xffffffd4
   1a86c:	movw	r1, #0
   1a870:	cmp	r0, r1
   1a874:	bne	1a87c <main@@Base+0x435c>
   1a878:	b	1abac <main@@Base+0x468c>
   1a87c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a880:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a884:	str	r0, [r1]
   1a888:	b	1a8a0 <main@@Base+0x4380>
   1a88c:	ldr	r0, [fp, #-16]
   1a890:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a894:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a898:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a89c:	str	r0, [fp, #-20]	; 0xffffffec
   1a8a0:	b	1a8b8 <main@@Base+0x4398>
   1a8a4:	ldr	r0, [fp, #-16]
   1a8a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a8ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a8b0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a8b4:	str	r0, [fp, #-20]	; 0xffffffec
   1a8b8:	b	1aacc <main@@Base+0x45ac>
   1a8bc:	andeq	r3, r4, r4, lsr r8
   1a8c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a8c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a8c8:	movw	r2, #24428	; 0x5f6c
   1a8cc:	movt	r2, #102	; 0x66
   1a8d0:	eor	r2, r2, r1, lsr #8
   1a8d4:	lsr	r0, r0, #8
   1a8d8:	orr	r0, r0, r1, lsl #24
   1a8dc:	movw	r1, #26483	; 0x6773
   1a8e0:	movt	r1, #28526	; 0x6f6e
   1a8e4:	eor	r0, r0, r1
   1a8e8:	orr	r0, r0, r2
   1a8ec:	cmp	r0, #0
   1a8f0:	bne	1aab4 <main@@Base+0x4594>
   1a8f4:	b	1a8f8 <main@@Base+0x43d8>
   1a8f8:	ldr	r0, [fp, #-16]
   1a8fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a900:	str	r1, [fp, #-48]	; 0xffffffd0
   1a904:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a908:	movw	r3, #7
   1a90c:	bl	1bd48 <main@@Base+0x5828>
   1a910:	str	r0, [fp, #-20]	; 0xffffffec
   1a914:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a918:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a91c:	cmp	r0, r1
   1a920:	beq	1aa9c <main@@Base+0x457c>
   1a924:	ldr	r3, [pc, #676]	; 1abd0 <main@@Base+0x46b0>
   1a928:	ldr	r0, [fp, #-16]
   1a92c:	ldr	r0, [r0]
   1a930:	movw	r1, #8
   1a934:	movw	r2, #8
   1a938:	uxth	r2, r2
   1a93c:	bl	2b678 <flatcc_builder_start_vector@@Base>
   1a940:	cmp	r0, #0
   1a944:	beq	1a94c <main@@Base+0x442c>
   1a948:	b	1abac <main@@Base+0x468c>
   1a94c:	ldr	r0, [fp, #-16]
   1a950:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a954:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a958:	sub	r3, fp, #32
   1a95c:	bl	1d544 <main@@Base+0x7024>
   1a960:	str	r0, [fp, #-20]	; 0xffffffec
   1a964:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a968:	cmp	r0, #0
   1a96c:	beq	1aa48 <main@@Base+0x4528>
   1a970:	mov	r0, #0
   1a974:	str	r0, [sp, #132]	; 0x84
   1a978:	str	r0, [sp, #128]	; 0x80
   1a97c:	ldr	r0, [fp, #-16]
   1a980:	ldr	r0, [r0]
   1a984:	movw	r1, #1
   1a988:	bl	2ab7c <flatcc_builder_extend_vector@@Base>
   1a98c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a990:	movw	r1, #0
   1a994:	cmp	r0, r1
   1a998:	bne	1a9a0 <main@@Base+0x4480>
   1a99c:	b	1abac <main@@Base+0x468c>
   1a9a0:	ldr	r0, [fp, #-16]
   1a9a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a9a8:	str	r1, [fp, #-48]	; 0xffffffd0
   1a9ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a9b0:	add	r3, sp, #128	; 0x80
   1a9b4:	bl	20248 <main@@Base+0x9d28>
   1a9b8:	str	r0, [fp, #-20]	; 0xffffffec
   1a9bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a9c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a9c4:	cmp	r0, r1
   1a9c8:	bne	1aa1c <main@@Base+0x44fc>
   1a9cc:	ldr	r0, [pc, #512]	; 1abd4 <main@@Base+0x46b4>
   1a9d0:	add	r3, pc, r0
   1a9d4:	ldr	r0, [fp, #-16]
   1a9d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a9dc:	str	r1, [fp, #-48]	; 0xffffffd0
   1a9e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a9e4:	add	ip, sp, #128	; 0x80
   1a9e8:	str	ip, [sp]
   1a9ec:	bl	20320 <main@@Base+0x9e00>
   1a9f0:	str	r0, [fp, #-20]	; 0xffffffec
   1a9f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a9f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a9fc:	cmp	r0, r1
   1aa00:	beq	1aa14 <main@@Base+0x44f4>
   1aa04:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aa08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa0c:	cmp	r0, r1
   1aa10:	bne	1aa18 <main@@Base+0x44f8>
   1aa14:	b	1abac <main@@Base+0x468c>
   1aa18:	b	1aa1c <main@@Base+0x44fc>
   1aa1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aa20:	ldr	r2, [sp, #128]	; 0x80
   1aa24:	ldr	r3, [sp, #132]	; 0x84
   1aa28:	bl	2051c <main@@Base+0x9ffc>
   1aa2c:	ldr	r0, [fp, #-16]
   1aa30:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aa34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aa38:	sub	r3, fp, #32
   1aa3c:	bl	1d914 <main@@Base+0x73f4>
   1aa40:	str	r0, [fp, #-20]	; 0xffffffec
   1aa44:	b	1a964 <main@@Base+0x4444>
   1aa48:	ldr	r0, [fp, #-16]
   1aa4c:	ldr	r0, [r0]
   1aa50:	bl	2cb6c <flatcc_builder_end_vector@@Base>
   1aa54:	str	r0, [fp, #-40]	; 0xffffffd8
   1aa58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aa5c:	cmp	r0, #0
   1aa60:	beq	1aa84 <main@@Base+0x4564>
   1aa64:	ldr	r0, [fp, #-16]
   1aa68:	ldr	r0, [r0]
   1aa6c:	movw	r1, #32
   1aa70:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   1aa74:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa78:	movw	r1, #0
   1aa7c:	cmp	r0, r1
   1aa80:	bne	1aa88 <main@@Base+0x4568>
   1aa84:	b	1abac <main@@Base+0x468c>
   1aa88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aa8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aa90:	str	r0, [r1]
   1aa94:	b	1aab0 <main@@Base+0x4590>
   1aa98:	andeq	r3, r4, r0, lsl #13
   1aa9c:	ldr	r0, [fp, #-16]
   1aaa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aaa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aaa8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1aaac:	str	r0, [fp, #-20]	; 0xffffffec
   1aab0:	b	1aac8 <main@@Base+0x45a8>
   1aab4:	ldr	r0, [fp, #-16]
   1aab8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aabc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aac0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1aac4:	str	r0, [fp, #-20]	; 0xffffffec
   1aac8:	b	1aacc <main@@Base+0x45ac>
   1aacc:	b	1aae4 <main@@Base+0x45c4>
   1aad0:	ldr	r0, [fp, #-16]
   1aad4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aad8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aadc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1aae0:	str	r0, [fp, #-20]	; 0xffffffec
   1aae4:	b	1aae8 <main@@Base+0x45c8>
   1aae8:	b	1aaec <main@@Base+0x45cc>
   1aaec:	b	1aaf0 <main@@Base+0x45d0>
   1aaf0:	b	1aaf4 <main@@Base+0x45d4>
   1aaf4:	b	1aaf8 <main@@Base+0x45d8>
   1aaf8:	ldr	r0, [fp, #-16]
   1aafc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ab00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ab04:	sub	r3, fp, #32
   1ab08:	bl	20d64 <main@@Base+0xa844>
   1ab0c:	str	r0, [fp, #-20]	; 0xffffffec
   1ab10:	b	17224 <main@@Base+0xd04>
   1ab14:	ldr	r0, [fp, #-16]
   1ab18:	ldr	r0, [r0, #20]
   1ab1c:	cmp	r0, #0
   1ab20:	beq	1ab28 <main@@Base+0x4608>
   1ab24:	b	1abac <main@@Base+0x468c>
   1ab28:	ldr	r0, [fp, #-16]
   1ab2c:	ldr	r0, [r0]
   1ab30:	movw	r1, #3
   1ab34:	uxth	r1, r1
   1ab38:	bl	2c470 <flatcc_builder_check_required_field@@Base>
   1ab3c:	cmp	r0, #0
   1ab40:	bne	1ab68 <main@@Base+0x4648>
   1ab44:	ldr	r0, [fp, #-16]
   1ab48:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ab4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ab50:	movw	r3, #29
   1ab54:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1ab58:	str	r0, [fp, #-20]	; 0xffffffec
   1ab5c:	b	1abac <main@@Base+0x468c>
	...
   1ab68:	ldr	r0, [fp, #-16]
   1ab6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ab70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ab74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ab78:	bl	36754 <flatcc_json_parser_finalize_unions@@Base>
   1ab7c:	str	r0, [fp, #-20]	; 0xffffffec
   1ab80:	ldr	r0, [fp, #-16]
   1ab84:	ldr	r0, [r0]
   1ab88:	bl	2c764 <flatcc_builder_end_table@@Base>
   1ab8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab90:	str	r0, [r1]
   1ab94:	cmp	r0, #0
   1ab98:	bne	1aba0 <main@@Base+0x4680>
   1ab9c:	b	1abac <main@@Base+0x468c>
   1aba0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aba4:	str	r0, [fp, #-12]
   1aba8:	b	1abc4 <main@@Base+0x46a4>
   1abac:	ldr	r0, [fp, #-16]
   1abb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1abb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1abb8:	movw	r3, #33	; 0x21
   1abbc:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1abc0:	str	r0, [fp, #-12]
   1abc4:	ldr	r0, [fp, #-12]
   1abc8:	sub	sp, fp, #8
   1abcc:	pop	{r4, r5, fp, pc}
   1abd0:	svcne	0x00ffffff
   1abd4:			; <UNDEFINED> instruction: 0x000427b4
   1abd8:			; <UNDEFINED> instruction: 0x000429b0
   1abdc:	andeq	r2, r4, r4, asr #25
   1abe0:			; <UNDEFINED> instruction: 0x00042fb0
   1abe4:	strdeq	r3, [r4], -ip
   1abe8:	andeq	r3, r4, ip, ror #4
   1abec:	andeq	r3, r4, r4, lsr #7
   1abf0:	andeq	r3, r4, r4, lsr r5
   1abf4:	push	{fp, lr}
   1abf8:	mov	fp, sp
   1abfc:	sub	sp, sp, #104	; 0x68
   1ac00:	ldr	r2, [pc, #1928]	; 1b390 <main@@Base+0x4e70>
   1ac04:	add	r3, pc, r2
   1ac08:	ldr	r2, [pc, #1924]	; 1b394 <main@@Base+0x4e74>
   1ac0c:	add	r2, pc, r2
   1ac10:	str	r0, [fp, #-4]
   1ac14:	str	r1, [fp, #-8]
   1ac18:	ldr	r0, [fp, #-4]
   1ac1c:	ldr	r1, [fp, #-8]
   1ac20:	movw	ip, #0
   1ac24:	str	r2, [fp, #-12]
   1ac28:	mov	r2, ip
   1ac2c:	movw	ip, #3
   1ac30:	str	ip, [sp]
   1ac34:	ldr	ip, [fp, #-12]
   1ac38:	str	ip, [sp, #4]
   1ac3c:	bl	433e4 <flatcc_json_printer_struct_field@@Base>
   1ac40:	ldr	r0, [pc, #1860]	; 1b38c <main@@Base+0x4e6c>
   1ac44:	add	r3, pc, r0
   1ac48:	ldr	r0, [fp, #-4]
   1ac4c:	ldr	r1, [fp, #-8]
   1ac50:	movw	r2, #1
   1ac54:	movw	ip, #4
   1ac58:	str	ip, [sp]
   1ac5c:	movw	ip, #150	; 0x96
   1ac60:	sxth	ip, ip
   1ac64:	str	ip, [sp, #4]
   1ac68:	bl	3c394 <flatcc_json_printer_int16_field@@Base>
   1ac6c:	ldr	r0, [pc, #1812]	; 1b388 <main@@Base+0x4e68>
   1ac70:	add	r3, pc, r0
   1ac74:	ldr	r0, [fp, #-4]
   1ac78:	ldr	r1, [fp, #-8]
   1ac7c:	movw	r2, #2
   1ac80:	str	r2, [fp, #-16]
   1ac84:	ldr	ip, [fp, #-16]
   1ac88:	str	ip, [sp]
   1ac8c:	movw	lr, #100	; 0x64
   1ac90:	sxth	lr, lr
   1ac94:	str	lr, [sp, #4]
   1ac98:	bl	3c394 <flatcc_json_printer_int16_field@@Base>
   1ac9c:	ldr	r0, [pc, #1760]	; 1b384 <main@@Base+0x4e64>
   1aca0:	add	r3, pc, r0
   1aca4:	ldr	r0, [fp, #-4]
   1aca8:	ldr	r1, [fp, #-8]
   1acac:	movw	r2, #3
   1acb0:	movw	ip, #4
   1acb4:	str	ip, [sp]
   1acb8:	bl	3b7bc <flatcc_json_printer_string_field@@Base>
   1acbc:	ldr	r0, [pc, #1724]	; 1b380 <main@@Base+0x4e60>
   1acc0:	add	r3, pc, r0
   1acc4:	ldr	r0, [fp, #-4]
   1acc8:	ldr	r1, [fp, #-8]
   1accc:	movw	r2, #5
   1acd0:	movw	ip, #9
   1acd4:	str	ip, [sp]
   1acd8:	bl	3e864 <flatcc_json_printer_uint8_vector_field@@Base>
   1acdc:	ldr	r0, [pc, #1684]	; 1b378 <main@@Base+0x4e58>
   1ace0:	add	r3, pc, r0
   1ace4:	ldr	r0, [pc, #1680]	; 1b37c <main@@Base+0x4e5c>
   1ace8:	add	r0, pc, r0
   1acec:	ldr	r1, [fp, #-4]
   1acf0:	ldr	r2, [fp, #-8]
   1acf4:	str	r0, [fp, #-20]	; 0xffffffec
   1acf8:	mov	r0, r1
   1acfc:	mov	r1, r2
   1ad00:	movw	r2, #6
   1ad04:	movw	ip, #5
   1ad08:	str	ip, [sp]
   1ad0c:	movw	ip, #8
   1ad10:	sxtb	ip, ip
   1ad14:	str	ip, [sp, #4]
   1ad18:	ldr	ip, [fp, #-20]	; 0xffffffec
   1ad1c:	str	ip, [sp, #8]
   1ad20:	bl	3d0b4 <flatcc_json_printer_int8_enum_field@@Base>
   1ad24:	ldr	r0, [pc, #1600]	; 1b36c <main@@Base+0x4e4c>
   1ad28:	add	r3, pc, r0
   1ad2c:	ldr	r0, [pc, #1596]	; 1b370 <main@@Base+0x4e50>
   1ad30:	add	r0, pc, r0
   1ad34:	ldr	r1, [pc, #1592]	; 1b374 <main@@Base+0x4e54>
   1ad38:	add	r1, pc, r1
   1ad3c:	ldr	r2, [fp, #-4]
   1ad40:	ldr	ip, [fp, #-8]
   1ad44:	str	r0, [fp, #-24]	; 0xffffffe8
   1ad48:	mov	r0, r2
   1ad4c:	str	r1, [fp, #-28]	; 0xffffffe4
   1ad50:	mov	r1, ip
   1ad54:	movw	r2, #8
   1ad58:	movw	ip, #4
   1ad5c:	str	ip, [sp]
   1ad60:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1ad64:	str	ip, [sp, #4]
   1ad68:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1ad6c:	str	lr, [sp, #8]
   1ad70:	bl	42e38 <flatcc_json_printer_union_field@@Base>
   1ad74:	ldr	r0, [pc, #1512]	; 1b364 <main@@Base+0x4e44>
   1ad78:	add	r3, pc, r0
   1ad7c:	ldr	r0, [pc, #1508]	; 1b368 <main@@Base+0x4e48>
   1ad80:	add	r0, pc, r0
   1ad84:	ldr	r1, [fp, #-4]
   1ad88:	ldr	r2, [fp, #-8]
   1ad8c:	str	r0, [fp, #-32]	; 0xffffffe0
   1ad90:	mov	r0, r1
   1ad94:	mov	r1, r2
   1ad98:	movw	r2, #9
   1ad9c:	movw	ip, #5
   1ada0:	str	ip, [sp]
   1ada4:	movw	ip, #4
   1ada8:	str	ip, [sp, #4]
   1adac:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1adb0:	str	ip, [sp, #8]
   1adb4:	bl	41fc8 <flatcc_json_printer_struct_vector_field@@Base>
   1adb8:	ldr	r0, [pc, #1440]	; 1b360 <main@@Base+0x4e40>
   1adbc:	add	r3, pc, r0
   1adc0:	ldr	r0, [fp, #-4]
   1adc4:	ldr	r1, [fp, #-8]
   1adc8:	movw	r2, #10
   1adcc:	movw	ip, #17
   1add0:	str	ip, [sp]
   1add4:	bl	4234c <flatcc_json_printer_string_vector_field@@Base>
   1add8:	ldr	r0, [pc, #1400]	; 1b358 <main@@Base+0x4e38>
   1addc:	add	r3, pc, r0
   1ade0:	ldr	r0, [pc, #1396]	; 1b35c <main@@Base+0x4e3c>
   1ade4:	add	r0, pc, r0
   1ade8:	ldr	r1, [fp, #-4]
   1adec:	ldr	r2, [fp, #-8]
   1adf0:	str	r0, [fp, #-36]	; 0xffffffdc
   1adf4:	mov	r0, r1
   1adf8:	mov	r1, r2
   1adfc:	movw	r2, #11
   1ae00:	movw	ip, #17
   1ae04:	str	ip, [sp]
   1ae08:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1ae0c:	str	ip, [sp, #4]
   1ae10:	bl	425bc <flatcc_json_printer_table_vector_field@@Base>
   1ae14:	ldr	r0, [pc, #1332]	; 1b350 <main@@Base+0x4e30>
   1ae18:	add	r3, pc, r0
   1ae1c:	ldr	r0, [pc, #1328]	; 1b354 <main@@Base+0x4e34>
   1ae20:	add	r0, pc, r0
   1ae24:	ldr	r1, [fp, #-4]
   1ae28:	ldr	r2, [fp, #-8]
   1ae2c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ae30:	mov	r0, r1
   1ae34:	mov	r1, r2
   1ae38:	movw	r2, #12
   1ae3c:	movw	ip, #5
   1ae40:	str	ip, [sp]
   1ae44:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1ae48:	str	ip, [sp, #4]
   1ae4c:	bl	42d70 <flatcc_json_printer_table_field@@Base>
   1ae50:	ldr	r0, [pc, #1264]	; 1b348 <main@@Base+0x4e28>
   1ae54:	add	r3, pc, r0
   1ae58:	ldr	r0, [pc, #1260]	; 1b34c <main@@Base+0x4e2c>
   1ae5c:	add	r0, pc, r0
   1ae60:	ldr	r1, [fp, #-4]
   1ae64:	ldr	r2, [fp, #-8]
   1ae68:	str	r0, [fp, #-44]	; 0xffffffd4
   1ae6c:	mov	r0, r1
   1ae70:	mov	r1, r2
   1ae74:	movw	r2, #13
   1ae78:	movw	ip, #20
   1ae7c:	str	ip, [sp]
   1ae80:	movw	ip, #0
   1ae84:	str	ip, [sp, #4]
   1ae88:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1ae8c:	str	ip, [sp, #8]
   1ae90:	bl	43ad4 <flatcc_json_printer_table_as_nested_root@@Base>
   1ae94:	ldr	r0, [pc, #1188]	; 1b340 <main@@Base+0x4e20>
   1ae98:	add	r3, pc, r0
   1ae9c:	ldr	r0, [pc, #1184]	; 1b344 <main@@Base+0x4e24>
   1aea0:	add	r0, pc, r0
   1aea4:	ldr	r1, [fp, #-4]
   1aea8:	ldr	r2, [fp, #-8]
   1aeac:	str	r0, [fp, #-48]	; 0xffffffd0
   1aeb0:	mov	r0, r1
   1aeb4:	mov	r1, r2
   1aeb8:	movw	r2, #14
   1aebc:	movw	ip, #9
   1aec0:	str	ip, [sp]
   1aec4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1aec8:	str	ip, [sp, #4]
   1aecc:	bl	42d70 <flatcc_json_printer_table_field@@Base>
   1aed0:	ldr	r0, [pc, #1124]	; 1b33c <main@@Base+0x4e1c>
   1aed4:	add	r3, pc, r0
   1aed8:	ldr	r0, [fp, #-4]
   1aedc:	ldr	r1, [fp, #-8]
   1aee0:	movw	r2, #15
   1aee4:	movw	ip, #8
   1aee8:	str	ip, [sp]
   1aeec:	movw	ip, #1
   1aef0:	and	ip, ip, #255	; 0xff
   1aef4:	str	ip, [sp, #4]
   1aef8:	bl	3c754 <flatcc_json_printer_bool_field@@Base>
   1aefc:	ldr	r0, [pc, #1076]	; 1b338 <main@@Base+0x4e18>
   1af00:	add	r3, pc, r0
   1af04:	ldr	r0, [fp, #-4]
   1af08:	ldr	r1, [fp, #-8]
   1af0c:	movw	r2, #16
   1af10:	str	r2, [sp, #52]	; 0x34
   1af14:	ldr	ip, [sp, #52]	; 0x34
   1af18:	str	ip, [sp]
   1af1c:	movw	lr, #0
   1af20:	str	lr, [sp, #4]
   1af24:	bl	3c4c4 <flatcc_json_printer_int32_field@@Base>
   1af28:	ldr	r0, [pc, #1028]	; 1b334 <main@@Base+0x4e14>
   1af2c:	add	r3, pc, r0
   1af30:	ldr	r0, [fp, #-4]
   1af34:	ldr	r1, [fp, #-8]
   1af38:	movw	r2, #17
   1af3c:	movw	ip, #16
   1af40:	str	ip, [sp]
   1af44:	movw	ip, #0
   1af48:	str	ip, [sp, #4]
   1af4c:	bl	3bfd4 <flatcc_json_printer_uint32_field@@Base>
   1af50:	ldr	r0, [pc, #984]	; 1b330 <main@@Base+0x4e10>
   1af54:	add	r0, pc, r0
   1af58:	ldr	r1, [fp, #-4]
   1af5c:	ldr	r2, [fp, #-8]
   1af60:	mov	r3, sp
   1af64:	mov	ip, #0
   1af68:	str	ip, [r3, #12]
   1af6c:	str	ip, [r3, #8]
   1af70:	mov	ip, #16
   1af74:	str	ip, [r3]
   1af78:	ldr	r3, [pc, #1048]	; 1b398 <main@@Base+0x4e78>
   1af7c:	add	r3, pc, r3
   1af80:	mov	ip, #18
   1af84:	str	r0, [sp, #48]	; 0x30
   1af88:	mov	r0, r1
   1af8c:	mov	r1, r2
   1af90:	mov	r2, ip
   1af94:	bl	3c5ec <flatcc_json_printer_int64_field@@Base>
   1af98:	ldr	r0, [pc, #908]	; 1b32c <main@@Base+0x4e0c>
   1af9c:	add	r0, pc, r0
   1afa0:	ldr	r1, [fp, #-4]
   1afa4:	ldr	r2, [fp, #-8]
   1afa8:	mov	r3, sp
   1afac:	mov	ip, #0
   1afb0:	str	ip, [r3, #12]
   1afb4:	str	ip, [r3, #8]
   1afb8:	mov	ip, #16
   1afbc:	str	ip, [r3]
   1afc0:	ldr	r3, [pc, #980]	; 1b39c <main@@Base+0x4e7c>
   1afc4:	add	r3, pc, r3
   1afc8:	mov	ip, #19
   1afcc:	str	r0, [sp, #44]	; 0x2c
   1afd0:	mov	r0, r1
   1afd4:	mov	r1, r2
   1afd8:	mov	r2, ip
   1afdc:	bl	3c0fc <flatcc_json_printer_uint64_field@@Base>
   1afe0:	ldr	r0, [pc, #832]	; 1b328 <main@@Base+0x4e08>
   1afe4:	add	r3, pc, r0
   1afe8:	ldr	r0, [fp, #-4]
   1afec:	ldr	r1, [fp, #-8]
   1aff0:	movw	r2, #20
   1aff4:	movw	ip, #17
   1aff8:	str	ip, [sp]
   1affc:	movw	ip, #0
   1b000:	str	ip, [sp, #4]
   1b004:	bl	3c4c4 <flatcc_json_printer_int32_field@@Base>
   1b008:	ldr	r0, [pc, #788]	; 1b324 <main@@Base+0x4e04>
   1b00c:	add	r3, pc, r0
   1b010:	ldr	r0, [fp, #-4]
   1b014:	ldr	r1, [fp, #-8]
   1b018:	movw	r2, #21
   1b01c:	movw	ip, #17
   1b020:	str	ip, [sp]
   1b024:	movw	ip, #0
   1b028:	str	ip, [sp, #4]
   1b02c:	bl	3bfd4 <flatcc_json_printer_uint32_field@@Base>
   1b030:	ldr	r0, [pc, #744]	; 1b320 <main@@Base+0x4e00>
   1b034:	add	r0, pc, r0
   1b038:	ldr	r1, [fp, #-4]
   1b03c:	ldr	r2, [fp, #-8]
   1b040:	mov	r3, sp
   1b044:	mov	ip, #0
   1b048:	str	ip, [r3, #12]
   1b04c:	str	ip, [r3, #8]
   1b050:	mov	ip, #17
   1b054:	str	ip, [r3]
   1b058:	ldr	r3, [pc, #832]	; 1b3a0 <main@@Base+0x4e80>
   1b05c:	add	r3, pc, r3
   1b060:	mov	ip, #22
   1b064:	str	r0, [sp, #40]	; 0x28
   1b068:	mov	r0, r1
   1b06c:	mov	r1, r2
   1b070:	mov	r2, ip
   1b074:	bl	3c5ec <flatcc_json_printer_int64_field@@Base>
   1b078:	ldr	r0, [pc, #668]	; 1b31c <main@@Base+0x4dfc>
   1b07c:	add	r0, pc, r0
   1b080:	ldr	r1, [fp, #-4]
   1b084:	ldr	r2, [fp, #-8]
   1b088:	mov	r3, sp
   1b08c:	mov	ip, #0
   1b090:	str	ip, [r3, #12]
   1b094:	str	ip, [r3, #8]
   1b098:	mov	ip, #17
   1b09c:	str	ip, [r3]
   1b0a0:	ldr	r3, [pc, #764]	; 1b3a4 <main@@Base+0x4e84>
   1b0a4:	add	r3, pc, r3
   1b0a8:	mov	ip, #23
   1b0ac:	str	r0, [sp, #36]	; 0x24
   1b0b0:	mov	r0, r1
   1b0b4:	mov	r1, r2
   1b0b8:	mov	r2, ip
   1b0bc:	bl	3c0fc <flatcc_json_printer_uint64_field@@Base>
   1b0c0:	ldr	r0, [pc, #592]	; 1b318 <main@@Base+0x4df8>
   1b0c4:	add	r3, pc, r0
   1b0c8:	ldr	r0, [fp, #-4]
   1b0cc:	ldr	r1, [fp, #-8]
   1b0d0:	movw	r2, #24
   1b0d4:	movw	ip, #16
   1b0d8:	str	ip, [sp]
   1b0dc:	bl	3fc24 <flatcc_json_printer_bool_vector_field@@Base>
   1b0e0:	ldr	r0, [pc, #552]	; 1b310 <main@@Base+0x4df0>
   1b0e4:	add	r3, pc, r0
   1b0e8:	vldr	s0, [pc, #548]	; 1b314 <main@@Base+0x4df4>
   1b0ec:	ldr	r0, [fp, #-4]
   1b0f0:	ldr	r1, [fp, #-8]
   1b0f4:	movw	r2, #25
   1b0f8:	movw	ip, #5
   1b0fc:	str	ip, [sp]
   1b100:	bl	3c930 <flatcc_json_printer_float_field@@Base>
   1b104:	ldr	r0, [pc, #512]	; 1b30c <main@@Base+0x4dec>
   1b108:	add	r3, pc, r0
   1b10c:	ldr	r0, [fp, #-4]
   1b110:	ldr	r1, [fp, #-8]
   1b114:	movw	r2, #26
   1b118:	movw	ip, #6
   1b11c:	str	ip, [sp]
   1b120:	vmov.f32	s0, #8	; 0x40400000  3.0
   1b124:	bl	3c930 <flatcc_json_printer_float_field@@Base>
   1b128:	ldr	r0, [pc, #468]	; 1b304 <main@@Base+0x4de4>
   1b12c:	add	r3, pc, r0
   1b130:	vldr	s0, [pc, #464]	; 1b308 <main@@Base+0x4de8>
   1b134:	ldr	r0, [fp, #-4]
   1b138:	ldr	r1, [fp, #-8]
   1b13c:	movw	r2, #27
   1b140:	movw	ip, #6
   1b144:	str	ip, [sp]
   1b148:	bl	3c930 <flatcc_json_printer_float_field@@Base>
   1b14c:	ldr	r0, [pc, #428]	; 1b300 <main@@Base+0x4de0>
   1b150:	add	r3, pc, r0
   1b154:	ldr	r0, [fp, #-4]
   1b158:	ldr	r1, [fp, #-8]
   1b15c:	movw	r2, #28
   1b160:	movw	ip, #18
   1b164:	str	ip, [sp]
   1b168:	bl	4234c <flatcc_json_printer_string_vector_field@@Base>
   1b16c:	ldr	r0, [pc, #388]	; 1b2f8 <main@@Base+0x4dd8>
   1b170:	add	r3, pc, r0
   1b174:	ldr	r0, [pc, #384]	; 1b2fc <main@@Base+0x4ddc>
   1b178:	add	r0, pc, r0
   1b17c:	ldr	r1, [fp, #-4]
   1b180:	ldr	r2, [fp, #-8]
   1b184:	str	r0, [sp, #32]
   1b188:	mov	r0, r1
   1b18c:	mov	r1, r2
   1b190:	movw	r2, #29
   1b194:	movw	ip, #23
   1b198:	str	ip, [sp]
   1b19c:	movw	ip, #8
   1b1a0:	str	ip, [sp, #4]
   1b1a4:	ldr	ip, [sp, #32]
   1b1a8:	str	ip, [sp, #8]
   1b1ac:	bl	41fc8 <flatcc_json_printer_struct_vector_field@@Base>
   1b1b0:	ldr	r0, [pc, #316]	; 1b2f4 <main@@Base+0x4dd4>
   1b1b4:	add	r3, pc, r0
   1b1b8:	ldr	r0, [fp, #-4]
   1b1bc:	ldr	r1, [fp, #-8]
   1b1c0:	movw	r2, #30
   1b1c4:	movw	ip, #4
   1b1c8:	str	ip, [sp]
   1b1cc:	bl	3e864 <flatcc_json_printer_uint8_vector_field@@Base>
   1b1d0:	ldr	r0, [pc, #276]	; 1b2ec <main@@Base+0x4dcc>
   1b1d4:	add	r3, pc, r0
   1b1d8:	ldr	r0, [pc, #272]	; 1b2f0 <main@@Base+0x4dd0>
   1b1dc:	add	r0, pc, r0
   1b1e0:	ldr	r1, [fp, #-4]
   1b1e4:	ldr	r2, [fp, #-8]
   1b1e8:	str	r0, [sp, #28]
   1b1ec:	mov	r0, r1
   1b1f0:	mov	r1, r2
   1b1f4:	movw	r2, #31
   1b1f8:	movw	ip, #5
   1b1fc:	str	ip, [sp]
   1b200:	movw	ip, #4
   1b204:	str	ip, [sp, #4]
   1b208:	ldr	ip, [sp, #28]
   1b20c:	str	ip, [sp, #8]
   1b210:	bl	41fc8 <flatcc_json_printer_struct_vector_field@@Base>
   1b214:	ldr	r0, [pc, #204]	; 1b2e8 <main@@Base+0x4dc8>
   1b218:	add	r3, pc, r0
   1b21c:	ldr	r0, [fp, #-4]
   1b220:	ldr	r1, [fp, #-8]
   1b224:	movw	r2, #32
   1b228:	movw	ip, #15
   1b22c:	str	ip, [sp]
   1b230:	bl	3f9b0 <flatcc_json_printer_int64_vector_field@@Base>
   1b234:	ldr	r0, [pc, #168]	; 1b2e4 <main@@Base+0x4dc4>
   1b238:	add	r3, pc, r0
   1b23c:	ldr	r0, [fp, #-4]
   1b240:	ldr	r1, [fp, #-8]
   1b244:	movw	r2, #33	; 0x21
   1b248:	movw	ip, #17
   1b24c:	str	ip, [sp]
   1b250:	bl	4011c <flatcc_json_printer_double_vector_field@@Base>
   1b254:	ldr	r0, [pc, #128]	; 1b2dc <main@@Base+0x4dbc>
   1b258:	add	r3, pc, r0
   1b25c:	ldr	r0, [pc, #124]	; 1b2e0 <main@@Base+0x4dc0>
   1b260:	add	r0, pc, r0
   1b264:	ldr	r1, [fp, #-4]
   1b268:	ldr	r2, [fp, #-8]
   1b26c:	str	r0, [sp, #24]
   1b270:	mov	r0, r1
   1b274:	mov	r1, r2
   1b278:	movw	r2, #34	; 0x22
   1b27c:	movw	ip, #21
   1b280:	str	ip, [sp]
   1b284:	ldr	ip, [sp, #24]
   1b288:	str	ip, [sp, #4]
   1b28c:	bl	42d70 <flatcc_json_printer_table_field@@Base>
   1b290:	ldr	r0, [pc, #60]	; 1b2d4 <main@@Base+0x4db4>
   1b294:	add	r3, pc, r0
   1b298:	ldr	r0, [pc, #56]	; 1b2d8 <main@@Base+0x4db8>
   1b29c:	add	r0, pc, r0
   1b2a0:	ldr	r1, [fp, #-4]
   1b2a4:	ldr	r2, [fp, #-8]
   1b2a8:	str	r0, [sp, #20]
   1b2ac:	mov	r0, r1
   1b2b0:	mov	r1, r2
   1b2b4:	movw	r2, #35	; 0x23
   1b2b8:	movw	ip, #10
   1b2bc:	str	ip, [sp]
   1b2c0:	ldr	ip, [sp, #20]
   1b2c4:	str	ip, [sp, #4]
   1b2c8:	bl	42d70 <flatcc_json_printer_table_field@@Base>
   1b2cc:	mov	sp, fp
   1b2d0:	pop	{fp, pc}
   1b2d4:	andeq	lr, r2, sl, lsr r3
   1b2d8:	muleq	r0, r4, r5
   1b2dc:	andeq	lr, r2, r0, ror #6
   1b2e0:			; <UNDEFINED> instruction: 0x0000c5bc
   1b2e4:	andeq	lr, r2, lr, ror #6
   1b2e8:	andeq	lr, r2, lr, ror r3
   1b2ec:			; <UNDEFINED> instruction: 0x0002e3bc
   1b2f0:	andeq	ip, r0, r4, asr r4
   1b2f4:	ldrdeq	lr, [r2], -r7
   1b2f8:	andeq	lr, r2, r3, lsl #8
   1b2fc:	andeq	ip, r0, r0, lsl r6
   1b300:	andeq	lr, r2, r0, lsl r4
   1b304:	andeq	lr, r2, sp, lsr #8
   1b308:	andeq	r0, r0, r0
   1b30c:	andeq	lr, r2, sl, asr #8
   1b310:	andeq	lr, r2, r8, ror #8
   1b314:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   1b318:	andeq	lr, r2, r7, ror r4
   1b31c:	andeq	lr, r2, sp, lsr #9
   1b320:	andeq	lr, r2, r3, ror #9
   1b324:	strdeq	lr, [r2], -r9
   1b328:	andeq	lr, r2, pc, lsl #10
   1b32c:	andeq	lr, r2, r6, asr #10
   1b330:	andeq	lr, r2, sp, ror r5
   1b334:	muleq	r2, r4, r5
   1b338:	andeq	lr, r2, pc, lsr #11
   1b33c:	ldrdeq	lr, [r2], -r2
   1b340:	andeq	lr, r2, r4, lsl #12
   1b344:	andeq	ip, r0, r8, lsr #16
   1b348:	andeq	lr, r2, r3, lsr r6
   1b34c:			; <UNDEFINED> instruction: 0xfffffd90
   1b350:	andeq	lr, r2, r9, ror #12
   1b354:			; <UNDEFINED> instruction: 0xfffffdcc
   1b358:	muleq	r2, r3, r6
   1b35c:			; <UNDEFINED> instruction: 0xfffffe08
   1b360:	andeq	lr, r2, r1, lsr #13
   1b364:	ldrdeq	lr, [r2], -pc	; <UNPREDICTABLE>
   1b368:			; <UNDEFINED> instruction: 0x0000c8b0
   1b36c:	andeq	lr, r2, r1, lsr #17
   1b370:	andeq	ip, r0, r0, ror #14
   1b374:	andeq	ip, r0, r0, lsr r8
   1b378:	andeq	lr, r2, r1, ror r7
   1b37c:	andeq	ip, r0, r8, ror r6
   1b380:	andeq	lr, r2, r7, lsl #15
   1b384:	andeq	lr, r2, r2, lsr #15
   1b388:	andeq	lr, r2, pc, asr #15
   1b38c:	strdeq	lr, [r2], -r6
   1b390:	andeq	lr, r2, r2, lsr r8
   1b394:	muleq	r0, r8, r5
   1b398:	andeq	lr, r2, r5, asr r5
   1b39c:	andeq	lr, r2, lr, lsl r5
   1b3a0:			; <UNDEFINED> instruction: 0x0002e4bb
   1b3a4:	andeq	lr, r2, r5, lsl #9
   1b3a8:	push	{fp, lr}
   1b3ac:	mov	fp, sp
   1b3b0:	sub	sp, sp, #56	; 0x38
   1b3b4:	str	r0, [fp, #-8]
   1b3b8:	ldr	r0, [fp, #-8]
   1b3bc:	movw	r1, #0
   1b3c0:	uxth	r1, r1
   1b3c4:	movw	r2, #32
   1b3c8:	movw	r3, #16
   1b3cc:	uxth	r3, r3
   1b3d0:	bl	2fdbc <flatcc_verify_field@@Base>
   1b3d4:	str	r0, [fp, #-12]
   1b3d8:	cmp	r0, #0
   1b3dc:	beq	1b3ec <main@@Base+0x4ecc>
   1b3e0:	ldr	r0, [fp, #-12]
   1b3e4:	str	r0, [fp, #-4]
   1b3e8:	b	1bb78 <main@@Base+0x5658>
   1b3ec:	ldr	r0, [fp, #-8]
   1b3f0:	movw	r1, #2
   1b3f4:	uxth	r2, r1
   1b3f8:	str	r1, [fp, #-16]
   1b3fc:	mov	r1, r2
   1b400:	movw	r2, #2
   1b404:	ldr	r3, [fp, #-16]
   1b408:	uxth	r3, r3
   1b40c:	bl	2fdbc <flatcc_verify_field@@Base>
   1b410:	str	r0, [fp, #-12]
   1b414:	cmp	r0, #0
   1b418:	beq	1b428 <main@@Base+0x4f08>
   1b41c:	ldr	r0, [fp, #-12]
   1b420:	str	r0, [fp, #-4]
   1b424:	b	1bb78 <main@@Base+0x5658>
   1b428:	ldr	r0, [fp, #-8]
   1b42c:	movw	r1, #1
   1b430:	uxth	r1, r1
   1b434:	movw	r2, #2
   1b438:	movw	r3, #2
   1b43c:	uxth	r3, r3
   1b440:	bl	2fdbc <flatcc_verify_field@@Base>
   1b444:	str	r0, [fp, #-12]
   1b448:	cmp	r0, #0
   1b44c:	beq	1b45c <main@@Base+0x4f3c>
   1b450:	ldr	r0, [fp, #-12]
   1b454:	str	r0, [fp, #-4]
   1b458:	b	1bb78 <main@@Base+0x5658>
   1b45c:	ldr	r0, [fp, #-8]
   1b460:	movw	r1, #3
   1b464:	uxth	r1, r1
   1b468:	movw	r2, #1
   1b46c:	bl	2ffc8 <flatcc_verify_string_field@@Base>
   1b470:	str	r0, [fp, #-12]
   1b474:	cmp	r0, #0
   1b478:	beq	1b488 <main@@Base+0x4f68>
   1b47c:	ldr	r0, [fp, #-12]
   1b480:	str	r0, [fp, #-4]
   1b484:	b	1bb78 <main@@Base+0x5658>
   1b488:	ldr	r0, [fp, #-8]
   1b48c:	movw	r1, #6
   1b490:	uxth	r1, r1
   1b494:	movw	r2, #1
   1b498:	movw	r3, #1
   1b49c:	uxth	r3, r3
   1b4a0:	bl	2fdbc <flatcc_verify_field@@Base>
   1b4a4:	str	r0, [fp, #-12]
   1b4a8:	cmp	r0, #0
   1b4ac:	beq	1b4bc <main@@Base+0x4f9c>
   1b4b0:	ldr	r0, [fp, #-12]
   1b4b4:	str	r0, [fp, #-4]
   1b4b8:	b	1bb78 <main@@Base+0x5658>
   1b4bc:	ldr	r0, [fp, #-8]
   1b4c0:	movw	r1, #5
   1b4c4:	uxth	r1, r1
   1b4c8:	movw	r2, #0
   1b4cc:	movw	r3, #1
   1b4d0:	movw	ip, #1
   1b4d4:	uxth	ip, ip
   1b4d8:	str	ip, [sp]
   1b4dc:	mvn	ip, #0
   1b4e0:	str	ip, [sp, #4]
   1b4e4:	bl	30324 <flatcc_verify_vector_field@@Base>
   1b4e8:	str	r0, [fp, #-12]
   1b4ec:	cmp	r0, #0
   1b4f0:	beq	1b500 <main@@Base+0x4fe0>
   1b4f4:	ldr	r0, [fp, #-12]
   1b4f8:	str	r0, [fp, #-4]
   1b4fc:	b	1bb78 <main@@Base+0x5658>
   1b500:	ldr	r0, [pc, #1660]	; 1bb84 <main@@Base+0x5664>
   1b504:	add	r3, pc, r0
   1b508:	ldr	r0, [fp, #-8]
   1b50c:	movw	r1, #11
   1b510:	uxth	r1, r1
   1b514:	movw	r2, #0
   1b518:	bl	30bb0 <flatcc_verify_table_vector_field@@Base>
   1b51c:	str	r0, [fp, #-12]
   1b520:	cmp	r0, #0
   1b524:	beq	1b534 <main@@Base+0x5014>
   1b528:	ldr	r0, [fp, #-12]
   1b52c:	str	r0, [fp, #-4]
   1b530:	b	1bb78 <main@@Base+0x5658>
   1b534:	ldr	r0, [fp, #-8]
   1b538:	movw	r1, #10
   1b53c:	uxth	r1, r1
   1b540:	movw	r2, #0
   1b544:	bl	30564 <flatcc_verify_string_vector_field@@Base>
   1b548:	str	r0, [fp, #-12]
   1b54c:	cmp	r0, #0
   1b550:	beq	1b560 <main@@Base+0x5040>
   1b554:	ldr	r0, [fp, #-12]
   1b558:	str	r0, [fp, #-4]
   1b55c:	b	1bb78 <main@@Base+0x5658>
   1b560:	ldr	r0, [fp, #-8]
   1b564:	movw	r1, #28
   1b568:	uxth	r1, r1
   1b56c:	movw	r2, #0
   1b570:	bl	30564 <flatcc_verify_string_vector_field@@Base>
   1b574:	str	r0, [fp, #-12]
   1b578:	cmp	r0, #0
   1b57c:	beq	1b58c <main@@Base+0x506c>
   1b580:	ldr	r0, [fp, #-12]
   1b584:	str	r0, [fp, #-4]
   1b588:	b	1bb78 <main@@Base+0x5658>
   1b58c:	ldr	r0, [fp, #-8]
   1b590:	movw	r1, #24
   1b594:	uxth	r1, r1
   1b598:	movw	r2, #0
   1b59c:	movw	r3, #1
   1b5a0:	movw	ip, #1
   1b5a4:	uxth	ip, ip
   1b5a8:	str	ip, [sp]
   1b5ac:	mvn	ip, #0
   1b5b0:	str	ip, [sp, #4]
   1b5b4:	bl	30324 <flatcc_verify_vector_field@@Base>
   1b5b8:	str	r0, [fp, #-12]
   1b5bc:	cmp	r0, #0
   1b5c0:	beq	1b5d0 <main@@Base+0x50b0>
   1b5c4:	ldr	r0, [fp, #-12]
   1b5c8:	str	r0, [fp, #-4]
   1b5cc:	b	1bb78 <main@@Base+0x5658>
   1b5d0:	ldr	r0, [pc, #1456]	; 1bb88 <main@@Base+0x5668>
   1b5d4:	ldr	r1, [fp, #-8]
   1b5d8:	str	r0, [fp, #-20]	; 0xffffffec
   1b5dc:	mov	r0, r1
   1b5e0:	movw	r1, #29
   1b5e4:	uxth	r1, r1
   1b5e8:	movw	r2, #0
   1b5ec:	movw	r3, #8
   1b5f0:	movw	ip, #4
   1b5f4:	uxth	ip, ip
   1b5f8:	str	ip, [sp]
   1b5fc:	ldr	ip, [fp, #-20]	; 0xffffffec
   1b600:	str	ip, [sp, #4]
   1b604:	bl	30324 <flatcc_verify_vector_field@@Base>
   1b608:	str	r0, [fp, #-12]
   1b60c:	cmp	r0, #0
   1b610:	beq	1b620 <main@@Base+0x5100>
   1b614:	ldr	r0, [fp, #-12]
   1b618:	str	r0, [fp, #-4]
   1b61c:	b	1bb78 <main@@Base+0x5658>
   1b620:	ldr	r0, [pc, #1380]	; 1bb8c <main@@Base+0x566c>
   1b624:	add	r3, pc, r0
   1b628:	ldr	r0, [fp, #-8]
   1b62c:	movw	r1, #12
   1b630:	uxth	r1, r1
   1b634:	movw	r2, #0
   1b638:	bl	307e4 <flatcc_verify_table_field@@Base>
   1b63c:	str	r0, [fp, #-12]
   1b640:	cmp	r0, #0
   1b644:	beq	1b654 <main@@Base+0x5134>
   1b648:	ldr	r0, [fp, #-12]
   1b64c:	str	r0, [fp, #-4]
   1b650:	b	1bb78 <main@@Base+0x5658>
   1b654:	ldr	r0, [pc, #1332]	; 1bb90 <main@@Base+0x5670>
   1b658:	add	r3, pc, r0
   1b65c:	ldr	r0, [fp, #-8]
   1b660:	movw	r1, #8
   1b664:	uxth	r1, r1
   1b668:	movw	r2, #0
   1b66c:	bl	31a40 <flatcc_verify_union_field@@Base>
   1b670:	str	r0, [fp, #-12]
   1b674:	cmp	r0, #0
   1b678:	beq	1b688 <main@@Base+0x5168>
   1b67c:	ldr	r0, [fp, #-12]
   1b680:	str	r0, [fp, #-4]
   1b684:	b	1bb78 <main@@Base+0x5658>
   1b688:	ldr	r0, [pc, #1284]	; 1bb94 <main@@Base+0x5674>
   1b68c:	ldr	r1, [fp, #-8]
   1b690:	str	r0, [fp, #-24]	; 0xffffffe8
   1b694:	mov	r0, r1
   1b698:	movw	r1, #9
   1b69c:	uxth	r1, r1
   1b6a0:	movw	r2, #0
   1b6a4:	movw	r3, #4
   1b6a8:	movw	ip, #2
   1b6ac:	uxth	ip, ip
   1b6b0:	str	ip, [sp]
   1b6b4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1b6b8:	str	ip, [sp, #4]
   1b6bc:	bl	30324 <flatcc_verify_vector_field@@Base>
   1b6c0:	str	r0, [fp, #-12]
   1b6c4:	cmp	r0, #0
   1b6c8:	beq	1b6d8 <main@@Base+0x51b8>
   1b6cc:	ldr	r0, [fp, #-12]
   1b6d0:	str	r0, [fp, #-4]
   1b6d4:	b	1bb78 <main@@Base+0x5658>
   1b6d8:	ldr	r0, [pc, #1204]	; 1bb94 <main@@Base+0x5674>
   1b6dc:	ldr	r1, [fp, #-8]
   1b6e0:	str	r0, [sp, #28]
   1b6e4:	mov	r0, r1
   1b6e8:	movw	r1, #31
   1b6ec:	uxth	r1, r1
   1b6f0:	movw	r2, #0
   1b6f4:	movw	r3, #4
   1b6f8:	movw	ip, #2
   1b6fc:	uxth	ip, ip
   1b700:	str	ip, [sp]
   1b704:	ldr	ip, [sp, #28]
   1b708:	str	ip, [sp, #4]
   1b70c:	bl	30324 <flatcc_verify_vector_field@@Base>
   1b710:	str	r0, [fp, #-12]
   1b714:	cmp	r0, #0
   1b718:	beq	1b728 <main@@Base+0x5208>
   1b71c:	ldr	r0, [fp, #-12]
   1b720:	str	r0, [fp, #-4]
   1b724:	b	1bb78 <main@@Base+0x5658>
   1b728:	ldr	r0, [pc, #1128]	; 1bb98 <main@@Base+0x5678>
   1b72c:	add	r0, pc, r0
   1b730:	ldr	r1, [fp, #-8]
   1b734:	str	r0, [sp, #24]
   1b738:	mov	r0, r1
   1b73c:	movw	r1, #13
   1b740:	uxth	r1, r1
   1b744:	movw	r2, #0
   1b748:	str	r2, [sp, #20]
   1b74c:	ldr	r3, [sp, #20]
   1b750:	movw	ip, #1
   1b754:	uxth	ip, ip
   1b758:	str	ip, [sp]
   1b75c:	ldr	ip, [sp, #24]
   1b760:	str	ip, [sp, #4]
   1b764:	bl	31898 <flatcc_verify_table_as_nested_root@@Base>
   1b768:	str	r0, [fp, #-12]
   1b76c:	cmp	r0, #0
   1b770:	beq	1b780 <main@@Base+0x5260>
   1b774:	ldr	r0, [fp, #-12]
   1b778:	str	r0, [fp, #-4]
   1b77c:	b	1bb78 <main@@Base+0x5658>
   1b780:	ldr	r0, [pc, #1044]	; 1bb9c <main@@Base+0x567c>
   1b784:	add	r3, pc, r0
   1b788:	ldr	r0, [fp, #-8]
   1b78c:	movw	r1, #14
   1b790:	uxth	r1, r1
   1b794:	movw	r2, #0
   1b798:	bl	307e4 <flatcc_verify_table_field@@Base>
   1b79c:	str	r0, [fp, #-12]
   1b7a0:	cmp	r0, #0
   1b7a4:	beq	1b7b4 <main@@Base+0x5294>
   1b7a8:	ldr	r0, [fp, #-12]
   1b7ac:	str	r0, [fp, #-4]
   1b7b0:	b	1bb78 <main@@Base+0x5658>
   1b7b4:	ldr	r0, [fp, #-8]
   1b7b8:	movw	r1, #15
   1b7bc:	uxth	r1, r1
   1b7c0:	movw	r2, #1
   1b7c4:	movw	r3, #1
   1b7c8:	uxth	r3, r3
   1b7cc:	bl	2fdbc <flatcc_verify_field@@Base>
   1b7d0:	str	r0, [fp, #-12]
   1b7d4:	cmp	r0, #0
   1b7d8:	beq	1b7e8 <main@@Base+0x52c8>
   1b7dc:	ldr	r0, [fp, #-12]
   1b7e0:	str	r0, [fp, #-4]
   1b7e4:	b	1bb78 <main@@Base+0x5658>
   1b7e8:	ldr	r0, [fp, #-8]
   1b7ec:	movw	r1, #16
   1b7f0:	uxth	r1, r1
   1b7f4:	movw	r2, #4
   1b7f8:	movw	r3, #4
   1b7fc:	uxth	r3, r3
   1b800:	bl	2fdbc <flatcc_verify_field@@Base>
   1b804:	str	r0, [fp, #-12]
   1b808:	cmp	r0, #0
   1b80c:	beq	1b81c <main@@Base+0x52fc>
   1b810:	ldr	r0, [fp, #-12]
   1b814:	str	r0, [fp, #-4]
   1b818:	b	1bb78 <main@@Base+0x5658>
   1b81c:	ldr	r0, [fp, #-8]
   1b820:	movw	r1, #17
   1b824:	uxth	r1, r1
   1b828:	movw	r2, #4
   1b82c:	movw	r3, #4
   1b830:	uxth	r3, r3
   1b834:	bl	2fdbc <flatcc_verify_field@@Base>
   1b838:	str	r0, [fp, #-12]
   1b83c:	cmp	r0, #0
   1b840:	beq	1b850 <main@@Base+0x5330>
   1b844:	ldr	r0, [fp, #-12]
   1b848:	str	r0, [fp, #-4]
   1b84c:	b	1bb78 <main@@Base+0x5658>
   1b850:	ldr	r0, [fp, #-8]
   1b854:	movw	r1, #18
   1b858:	uxth	r1, r1
   1b85c:	movw	r2, #8
   1b860:	movw	r3, #8
   1b864:	uxth	r3, r3
   1b868:	bl	2fdbc <flatcc_verify_field@@Base>
   1b86c:	str	r0, [fp, #-12]
   1b870:	cmp	r0, #0
   1b874:	beq	1b884 <main@@Base+0x5364>
   1b878:	ldr	r0, [fp, #-12]
   1b87c:	str	r0, [fp, #-4]
   1b880:	b	1bb78 <main@@Base+0x5658>
   1b884:	ldr	r0, [fp, #-8]
   1b888:	movw	r1, #19
   1b88c:	uxth	r1, r1
   1b890:	movw	r2, #8
   1b894:	movw	r3, #8
   1b898:	uxth	r3, r3
   1b89c:	bl	2fdbc <flatcc_verify_field@@Base>
   1b8a0:	str	r0, [fp, #-12]
   1b8a4:	cmp	r0, #0
   1b8a8:	beq	1b8b8 <main@@Base+0x5398>
   1b8ac:	ldr	r0, [fp, #-12]
   1b8b0:	str	r0, [fp, #-4]
   1b8b4:	b	1bb78 <main@@Base+0x5658>
   1b8b8:	ldr	r0, [fp, #-8]
   1b8bc:	movw	r1, #20
   1b8c0:	uxth	r1, r1
   1b8c4:	movw	r2, #4
   1b8c8:	movw	r3, #4
   1b8cc:	uxth	r3, r3
   1b8d0:	bl	2fdbc <flatcc_verify_field@@Base>
   1b8d4:	str	r0, [fp, #-12]
   1b8d8:	cmp	r0, #0
   1b8dc:	beq	1b8ec <main@@Base+0x53cc>
   1b8e0:	ldr	r0, [fp, #-12]
   1b8e4:	str	r0, [fp, #-4]
   1b8e8:	b	1bb78 <main@@Base+0x5658>
   1b8ec:	ldr	r0, [fp, #-8]
   1b8f0:	movw	r1, #21
   1b8f4:	uxth	r1, r1
   1b8f8:	movw	r2, #4
   1b8fc:	movw	r3, #4
   1b900:	uxth	r3, r3
   1b904:	bl	2fdbc <flatcc_verify_field@@Base>
   1b908:	str	r0, [fp, #-12]
   1b90c:	cmp	r0, #0
   1b910:	beq	1b920 <main@@Base+0x5400>
   1b914:	ldr	r0, [fp, #-12]
   1b918:	str	r0, [fp, #-4]
   1b91c:	b	1bb78 <main@@Base+0x5658>
   1b920:	ldr	r0, [fp, #-8]
   1b924:	movw	r1, #22
   1b928:	uxth	r1, r1
   1b92c:	movw	r2, #8
   1b930:	movw	r3, #8
   1b934:	uxth	r3, r3
   1b938:	bl	2fdbc <flatcc_verify_field@@Base>
   1b93c:	str	r0, [fp, #-12]
   1b940:	cmp	r0, #0
   1b944:	beq	1b954 <main@@Base+0x5434>
   1b948:	ldr	r0, [fp, #-12]
   1b94c:	str	r0, [fp, #-4]
   1b950:	b	1bb78 <main@@Base+0x5658>
   1b954:	ldr	r0, [fp, #-8]
   1b958:	movw	r1, #23
   1b95c:	uxth	r1, r1
   1b960:	movw	r2, #8
   1b964:	movw	r3, #8
   1b968:	uxth	r3, r3
   1b96c:	bl	2fdbc <flatcc_verify_field@@Base>
   1b970:	str	r0, [fp, #-12]
   1b974:	cmp	r0, #0
   1b978:	beq	1b988 <main@@Base+0x5468>
   1b97c:	ldr	r0, [fp, #-12]
   1b980:	str	r0, [fp, #-4]
   1b984:	b	1bb78 <main@@Base+0x5658>
   1b988:	ldr	r0, [fp, #-8]
   1b98c:	movw	r1, #25
   1b990:	uxth	r1, r1
   1b994:	movw	r2, #4
   1b998:	movw	r3, #4
   1b99c:	uxth	r3, r3
   1b9a0:	bl	2fdbc <flatcc_verify_field@@Base>
   1b9a4:	str	r0, [fp, #-12]
   1b9a8:	cmp	r0, #0
   1b9ac:	beq	1b9bc <main@@Base+0x549c>
   1b9b0:	ldr	r0, [fp, #-12]
   1b9b4:	str	r0, [fp, #-4]
   1b9b8:	b	1bb78 <main@@Base+0x5658>
   1b9bc:	ldr	r0, [fp, #-8]
   1b9c0:	movw	r1, #26
   1b9c4:	uxth	r1, r1
   1b9c8:	movw	r2, #4
   1b9cc:	movw	r3, #4
   1b9d0:	uxth	r3, r3
   1b9d4:	bl	2fdbc <flatcc_verify_field@@Base>
   1b9d8:	str	r0, [fp, #-12]
   1b9dc:	cmp	r0, #0
   1b9e0:	beq	1b9f0 <main@@Base+0x54d0>
   1b9e4:	ldr	r0, [fp, #-12]
   1b9e8:	str	r0, [fp, #-4]
   1b9ec:	b	1bb78 <main@@Base+0x5658>
   1b9f0:	ldr	r0, [fp, #-8]
   1b9f4:	movw	r1, #27
   1b9f8:	uxth	r1, r1
   1b9fc:	movw	r2, #4
   1ba00:	movw	r3, #4
   1ba04:	uxth	r3, r3
   1ba08:	bl	2fdbc <flatcc_verify_field@@Base>
   1ba0c:	str	r0, [fp, #-12]
   1ba10:	cmp	r0, #0
   1ba14:	beq	1ba24 <main@@Base+0x5504>
   1ba18:	ldr	r0, [fp, #-12]
   1ba1c:	str	r0, [fp, #-4]
   1ba20:	b	1bb78 <main@@Base+0x5658>
   1ba24:	ldr	r0, [fp, #-8]
   1ba28:	movw	r1, #30
   1ba2c:	uxth	r1, r1
   1ba30:	movw	r2, #0
   1ba34:	movw	r3, #1
   1ba38:	movw	ip, #1
   1ba3c:	uxth	ip, ip
   1ba40:	str	ip, [sp]
   1ba44:	mvn	ip, #0
   1ba48:	str	ip, [sp, #4]
   1ba4c:	bl	30324 <flatcc_verify_vector_field@@Base>
   1ba50:	str	r0, [fp, #-12]
   1ba54:	cmp	r0, #0
   1ba58:	beq	1ba68 <main@@Base+0x5548>
   1ba5c:	ldr	r0, [fp, #-12]
   1ba60:	str	r0, [fp, #-4]
   1ba64:	b	1bb78 <main@@Base+0x5658>
   1ba68:	ldr	r0, [pc, #280]	; 1bb88 <main@@Base+0x5668>
   1ba6c:	ldr	r1, [fp, #-8]
   1ba70:	str	r0, [sp, #16]
   1ba74:	mov	r0, r1
   1ba78:	movw	r1, #32
   1ba7c:	uxth	r1, r1
   1ba80:	movw	r2, #0
   1ba84:	movw	r3, #8
   1ba88:	movw	ip, #8
   1ba8c:	uxth	ip, ip
   1ba90:	str	ip, [sp]
   1ba94:	ldr	ip, [sp, #16]
   1ba98:	str	ip, [sp, #4]
   1ba9c:	bl	30324 <flatcc_verify_vector_field@@Base>
   1baa0:	str	r0, [fp, #-12]
   1baa4:	cmp	r0, #0
   1baa8:	beq	1bab8 <main@@Base+0x5598>
   1baac:	ldr	r0, [fp, #-12]
   1bab0:	str	r0, [fp, #-4]
   1bab4:	b	1bb78 <main@@Base+0x5658>
   1bab8:	ldr	r0, [pc, #200]	; 1bb88 <main@@Base+0x5668>
   1babc:	ldr	r1, [fp, #-8]
   1bac0:	str	r0, [sp, #12]
   1bac4:	mov	r0, r1
   1bac8:	movw	r1, #33	; 0x21
   1bacc:	uxth	r1, r1
   1bad0:	movw	r2, #0
   1bad4:	movw	r3, #8
   1bad8:	movw	ip, #8
   1badc:	uxth	ip, ip
   1bae0:	str	ip, [sp]
   1bae4:	ldr	ip, [sp, #12]
   1bae8:	str	ip, [sp, #4]
   1baec:	bl	30324 <flatcc_verify_vector_field@@Base>
   1baf0:	str	r0, [fp, #-12]
   1baf4:	cmp	r0, #0
   1baf8:	beq	1bb08 <main@@Base+0x55e8>
   1bafc:	ldr	r0, [fp, #-12]
   1bb00:	str	r0, [fp, #-4]
   1bb04:	b	1bb78 <main@@Base+0x5658>
   1bb08:	ldr	r0, [pc, #144]	; 1bba0 <main@@Base+0x5680>
   1bb0c:	add	r3, pc, r0
   1bb10:	ldr	r0, [fp, #-8]
   1bb14:	movw	r1, #34	; 0x22
   1bb18:	uxth	r1, r1
   1bb1c:	movw	r2, #0
   1bb20:	bl	307e4 <flatcc_verify_table_field@@Base>
   1bb24:	str	r0, [fp, #-12]
   1bb28:	cmp	r0, #0
   1bb2c:	beq	1bb3c <main@@Base+0x561c>
   1bb30:	ldr	r0, [fp, #-12]
   1bb34:	str	r0, [fp, #-4]
   1bb38:	b	1bb78 <main@@Base+0x5658>
   1bb3c:	ldr	r0, [pc, #96]	; 1bba4 <main@@Base+0x5684>
   1bb40:	add	r3, pc, r0
   1bb44:	ldr	r0, [fp, #-8]
   1bb48:	movw	r1, #35	; 0x23
   1bb4c:	uxth	r1, r1
   1bb50:	movw	r2, #0
   1bb54:	bl	307e4 <flatcc_verify_table_field@@Base>
   1bb58:	str	r0, [fp, #-12]
   1bb5c:	cmp	r0, #0
   1bb60:	beq	1bb70 <main@@Base+0x5650>
   1bb64:	ldr	r0, [fp, #-12]
   1bb68:	str	r0, [fp, #-4]
   1bb6c:	b	1bb78 <main@@Base+0x5658>
   1bb70:	movw	r0, #0
   1bb74:	str	r0, [fp, #-4]
   1bb78:	ldr	r0, [fp, #-4]
   1bb7c:	mov	sp, fp
   1bb80:	pop	{fp, pc}
   1bb84:			; <UNDEFINED> instruction: 0xfffffe9c
   1bb88:	svcne	0x00ffffff
   1bb8c:			; <UNDEFINED> instruction: 0xfffffd7c
   1bb90:	andeq	ip, r0, ip, ror #27
   1bb94:	svccc	0x00ffffff
   1bb98:			; <UNDEFINED> instruction: 0xfffffc74
   1bb9c:	andeq	ip, r0, ip, lsl #27
   1bba0:	andeq	ip, r0, r4, asr #21
   1bba4:	andeq	ip, r0, r4, lsr #21
   1bba8:	push	{fp, lr}
   1bbac:	mov	fp, sp
   1bbb0:	sub	sp, sp, #24
   1bbb4:	str	r0, [fp, #-8]
   1bbb8:	str	r1, [sp, #12]
   1bbbc:	str	r2, [sp, #8]
   1bbc0:	str	r3, [sp, #4]
   1bbc4:	ldr	r0, [sp, #12]
   1bbc8:	ldr	r1, [sp, #8]
   1bbcc:	cmp	r0, r1
   1bbd0:	beq	1bbe4 <main@@Base+0x56c4>
   1bbd4:	ldr	r0, [sp, #12]
   1bbd8:	ldrb	r0, [r0]
   1bbdc:	cmp	r0, #123	; 0x7b
   1bbe0:	beq	1bc0c <main@@Base+0x56ec>
   1bbe4:	ldr	r0, [sp, #4]
   1bbe8:	movw	r1, #0
   1bbec:	str	r1, [r0]
   1bbf0:	ldr	r0, [fp, #-8]
   1bbf4:	ldr	r1, [sp, #12]
   1bbf8:	ldr	r2, [sp, #8]
   1bbfc:	movw	r3, #21
   1bc00:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1bc04:	str	r0, [fp, #-4]
   1bc08:	b	1bc80 <main@@Base+0x5760>
   1bc0c:	ldr	r0, [fp, #-8]
   1bc10:	ldr	r1, [sp, #12]
   1bc14:	add	r1, r1, #1
   1bc18:	ldr	r2, [sp, #8]
   1bc1c:	bl	20ec8 <main@@Base+0xa9a8>
   1bc20:	str	r0, [sp, #12]
   1bc24:	ldr	r0, [sp, #12]
   1bc28:	ldr	r1, [sp, #8]
   1bc2c:	cmp	r0, r1
   1bc30:	beq	1bc6c <main@@Base+0x574c>
   1bc34:	ldr	r0, [sp, #12]
   1bc38:	ldrb	r0, [r0]
   1bc3c:	cmp	r0, #125	; 0x7d
   1bc40:	bne	1bc6c <main@@Base+0x574c>
   1bc44:	ldr	r0, [sp, #4]
   1bc48:	movw	r1, #0
   1bc4c:	str	r1, [r0]
   1bc50:	ldr	r0, [fp, #-8]
   1bc54:	ldr	r1, [sp, #12]
   1bc58:	add	r1, r1, #1
   1bc5c:	ldr	r2, [sp, #8]
   1bc60:	bl	20ec8 <main@@Base+0xa9a8>
   1bc64:	str	r0, [fp, #-4]
   1bc68:	b	1bc80 <main@@Base+0x5760>
   1bc6c:	ldr	r0, [sp, #4]
   1bc70:	movw	r1, #1
   1bc74:	str	r1, [r0]
   1bc78:	ldr	r0, [sp, #12]
   1bc7c:	str	r0, [fp, #-4]
   1bc80:	ldr	r0, [fp, #-4]
   1bc84:	mov	sp, fp
   1bc88:	pop	{fp, pc}
   1bc8c:	push	{fp, lr}
   1bc90:	mov	fp, sp
   1bc94:	sub	sp, sp, #16
   1bc98:	str	r0, [sp, #8]
   1bc9c:	str	r1, [sp, #4]
   1bca0:	str	r2, [sp]
   1bca4:	ldr	r0, [sp, #4]
   1bca8:	ldr	r1, [sp]
   1bcac:	cmp	r0, r1
   1bcb0:	bne	1bcc0 <main@@Base+0x57a0>
   1bcb4:	ldr	r0, [sp, #4]
   1bcb8:	str	r0, [fp, #-4]
   1bcbc:	b	1bd04 <main@@Base+0x57e4>
   1bcc0:	ldr	r0, [sp, #4]
   1bcc4:	ldrb	r0, [r0]
   1bcc8:	cmp	r0, #34	; 0x22
   1bccc:	bne	1bce0 <main@@Base+0x57c0>
   1bcd0:	ldr	r0, [sp, #4]
   1bcd4:	add	r0, r0, #1
   1bcd8:	str	r0, [sp, #4]
   1bcdc:	b	1bcfc <main@@Base+0x57dc>
   1bce0:	ldr	r0, [sp, #8]
   1bce4:	ldr	r1, [sp, #4]
   1bce8:	ldr	r2, [sp]
   1bcec:	movw	r3, #5
   1bcf0:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1bcf4:	str	r0, [fp, #-4]
   1bcf8:	b	1bd04 <main@@Base+0x57e4>
   1bcfc:	ldr	r0, [sp, #4]
   1bd00:	str	r0, [fp, #-4]
   1bd04:	ldr	r0, [fp, #-4]
   1bd08:	mov	sp, fp
   1bd0c:	pop	{fp, pc}
   1bd10:	push	{fp, lr}
   1bd14:	mov	fp, sp
   1bd18:	sub	sp, sp, #16
   1bd1c:	str	r0, [fp, #-4]
   1bd20:	str	r1, [sp, #8]
   1bd24:	ldr	r0, [sp, #8]
   1bd28:	ldr	r1, [fp, #-4]
   1bd2c:	sub	r0, r0, r1
   1bd30:	str	r0, [sp, #4]
   1bd34:	ldr	r0, [fp, #-4]
   1bd38:	ldr	r1, [sp, #8]
   1bd3c:	bl	20f64 <main@@Base+0xaa44>
   1bd40:	mov	sp, fp
   1bd44:	pop	{fp, pc}
   1bd48:	push	{fp, lr}
   1bd4c:	mov	fp, sp
   1bd50:	sub	sp, sp, #24
   1bd54:	str	r0, [fp, #-8]
   1bd58:	str	r1, [sp, #12]
   1bd5c:	str	r2, [sp, #8]
   1bd60:	str	r3, [sp, #4]
   1bd64:	ldr	r0, [sp, #12]
   1bd68:	str	r0, [sp]
   1bd6c:	ldr	r0, [sp, #8]
   1bd70:	ldr	r1, [sp, #12]
   1bd74:	sub	r0, r0, r1
   1bd78:	ldr	r1, [sp, #4]
   1bd7c:	cmp	r0, r1
   1bd80:	bgt	1bd90 <main@@Base+0x5870>
   1bd84:	ldr	r0, [sp]
   1bd88:	str	r0, [fp, #-4]
   1bd8c:	b	1be38 <main@@Base+0x5918>
   1bd90:	ldr	r0, [sp, #12]
   1bd94:	ldr	r1, [sp, #4]
   1bd98:	add	r0, r0, r1
   1bd9c:	ldrb	r0, [r0]
   1bda0:	cmp	r0, #34	; 0x22
   1bda4:	beq	1bdb4 <main@@Base+0x5894>
   1bda8:	ldr	r0, [sp]
   1bdac:	str	r0, [fp, #-4]
   1bdb0:	b	1be38 <main@@Base+0x5918>
   1bdb4:	ldr	r0, [sp, #4]
   1bdb8:	add	r0, r0, #1
   1bdbc:	ldr	r1, [sp, #12]
   1bdc0:	add	r0, r1, r0
   1bdc4:	str	r0, [sp, #12]
   1bdc8:	ldr	r0, [fp, #-8]
   1bdcc:	ldr	r1, [sp, #12]
   1bdd0:	ldr	r2, [sp, #8]
   1bdd4:	bl	20ec8 <main@@Base+0xa9a8>
   1bdd8:	str	r0, [sp, #12]
   1bddc:	ldr	r0, [sp, #12]
   1bde0:	ldr	r1, [sp, #8]
   1bde4:	cmp	r0, r1
   1bde8:	beq	1be20 <main@@Base+0x5900>
   1bdec:	ldr	r0, [sp, #12]
   1bdf0:	ldrb	r0, [r0]
   1bdf4:	cmp	r0, #58	; 0x3a
   1bdf8:	bne	1be20 <main@@Base+0x5900>
   1bdfc:	ldr	r0, [sp, #12]
   1be00:	add	r0, r0, #1
   1be04:	str	r0, [sp, #12]
   1be08:	ldr	r0, [fp, #-8]
   1be0c:	ldr	r1, [sp, #12]
   1be10:	ldr	r2, [sp, #8]
   1be14:	bl	20ec8 <main@@Base+0xa9a8>
   1be18:	str	r0, [fp, #-4]
   1be1c:	b	1be38 <main@@Base+0x5918>
   1be20:	ldr	r0, [fp, #-8]
   1be24:	ldr	r1, [sp, #12]
   1be28:	ldr	r2, [sp, #8]
   1be2c:	movw	r3, #4
   1be30:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1be34:	str	r0, [fp, #-4]
   1be38:	ldr	r0, [fp, #-4]
   1be3c:	mov	sp, fp
   1be40:	pop	{fp, pc}
   1be44:	push	{fp, lr}
   1be48:	mov	fp, sp
   1be4c:	sub	sp, sp, #72	; 0x48
   1be50:	ldr	ip, [fp, #12]
   1be54:	ldr	lr, [fp, #8]
   1be58:	str	r0, [fp, #-8]
   1be5c:	str	r1, [fp, #-12]
   1be60:	str	r2, [fp, #-16]
   1be64:	str	r3, [fp, #-20]	; 0xffffffec
   1be68:	ldr	r0, [fp, #-12]
   1be6c:	str	r0, [fp, #-24]	; 0xffffffe8
   1be70:	ldr	r0, [fp, #-12]
   1be74:	ldr	r1, [fp, #-16]
   1be78:	str	lr, [sp, #28]
   1be7c:	str	ip, [sp, #24]
   1be80:	bl	1bd10 <main@@Base+0x57f0>
   1be84:	str	r1, [sp, #36]	; 0x24
   1be88:	str	r0, [sp, #32]
   1be8c:	ldr	r0, [sp, #32]
   1be90:	ldr	r1, [sp, #36]	; 0x24
   1be94:	mvn	r2, #-1845493760	; 0x92000000
   1be98:	subs	r0, r2, r0
   1be9c:	movw	r2, #25957	; 0x6565
   1bea0:	movt	r2, #18290	; 0x4772
   1bea4:	sbcs	r1, r2, r1
   1bea8:	str	r0, [sp, #20]
   1beac:	str	r1, [sp, #16]
   1beb0:	bcc	1bf54 <main@@Base+0x5a34>
   1beb4:	b	1beb8 <main@@Base+0x5998>
   1beb8:	ldr	r0, [sp, #36]	; 0x24
   1bebc:	movw	r1, #30053	; 0x7565
   1bec0:	movt	r1, #17004	; 0x426c
   1bec4:	teq	r0, r1
   1bec8:	bne	1bf44 <main@@Base+0x5a24>
   1becc:	b	1bed0 <main@@Base+0x59b0>
   1bed0:	ldr	r0, [fp, #-8]
   1bed4:	ldr	r1, [fp, #-12]
   1bed8:	str	r1, [fp, #-28]	; 0xffffffe4
   1bedc:	ldr	r2, [fp, #-16]
   1bee0:	ldr	r3, [fp, #12]
   1bee4:	movw	ip, #4
   1bee8:	str	r3, [sp, #12]
   1beec:	mov	r3, ip
   1bef0:	ldr	ip, [sp, #12]
   1bef4:	str	ip, [sp]
   1bef8:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   1befc:	str	r0, [fp, #-12]
   1bf00:	ldr	r0, [fp, #-12]
   1bf04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bf08:	cmp	r0, r1
   1bf0c:	beq	1bf34 <main@@Base+0x5a14>
   1bf10:	ldr	r0, [fp, #8]
   1bf14:	mov	r1, #0
   1bf18:	str	r1, [r0, #4]
   1bf1c:	mov	r1, #8
   1bf20:	str	r1, [r0]
   1bf24:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bf28:	movw	r1, #0
   1bf2c:	str	r1, [r0]
   1bf30:	b	1bf40 <main@@Base+0x5a20>
   1bf34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf38:	str	r0, [fp, #-4]
   1bf3c:	b	1c0a0 <main@@Base+0x5b80>
   1bf40:	b	1bf50 <main@@Base+0x5a30>
   1bf44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf48:	str	r0, [fp, #-4]
   1bf4c:	b	1c0a0 <main@@Base+0x5b80>
   1bf50:	b	1c098 <main@@Base+0x5b78>
   1bf54:	ldr	r0, [sp, #36]	; 0x24
   1bf58:	bic	r0, r0, #255	; 0xff
   1bf5c:	movw	r1, #25600	; 0x6400
   1bf60:	movt	r1, #21093	; 0x5265
   1bf64:	teq	r0, r1
   1bf68:	bne	1bfe4 <main@@Base+0x5ac4>
   1bf6c:	b	1bf70 <main@@Base+0x5a50>
   1bf70:	ldr	r0, [fp, #-8]
   1bf74:	ldr	r1, [fp, #-12]
   1bf78:	str	r1, [fp, #-28]	; 0xffffffe4
   1bf7c:	ldr	r2, [fp, #-16]
   1bf80:	ldr	r3, [fp, #12]
   1bf84:	movw	ip, #3
   1bf88:	str	r3, [sp, #8]
   1bf8c:	mov	r3, ip
   1bf90:	ldr	ip, [sp, #8]
   1bf94:	str	ip, [sp]
   1bf98:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   1bf9c:	str	r0, [fp, #-12]
   1bfa0:	ldr	r0, [fp, #-12]
   1bfa4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bfa8:	cmp	r0, r1
   1bfac:	beq	1bfd4 <main@@Base+0x5ab4>
   1bfb0:	ldr	r0, [fp, #8]
   1bfb4:	mov	r1, #0
   1bfb8:	str	r1, [r0, #4]
   1bfbc:	mov	r1, #1
   1bfc0:	str	r1, [r0]
   1bfc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bfc8:	movw	r1, #0
   1bfcc:	str	r1, [r0]
   1bfd0:	b	1bfe0 <main@@Base+0x5ac0>
   1bfd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfd8:	str	r0, [fp, #-4]
   1bfdc:	b	1c0a0 <main@@Base+0x5b80>
   1bfe0:	b	1c094 <main@@Base+0x5b74>
   1bfe4:	ldr	r0, [sp, #32]
   1bfe8:	ldr	r1, [sp, #36]	; 0x24
   1bfec:	and	r0, r0, #-16777216	; 0xff000000
   1bff0:	movw	r2, #25957	; 0x6565
   1bff4:	movt	r2, #18290	; 0x4772
   1bff8:	eor	r1, r1, r2
   1bffc:	eor	r0, r0, #1845493760	; 0x6e000000
   1c000:	orr	r0, r0, r1
   1c004:	cmp	r0, #0
   1c008:	bne	1c084 <main@@Base+0x5b64>
   1c00c:	b	1c010 <main@@Base+0x5af0>
   1c010:	ldr	r0, [fp, #-8]
   1c014:	ldr	r1, [fp, #-12]
   1c018:	str	r1, [fp, #-28]	; 0xffffffe4
   1c01c:	ldr	r2, [fp, #-16]
   1c020:	ldr	r3, [fp, #12]
   1c024:	movw	ip, #5
   1c028:	str	r3, [sp, #4]
   1c02c:	mov	r3, ip
   1c030:	ldr	ip, [sp, #4]
   1c034:	str	ip, [sp]
   1c038:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   1c03c:	str	r0, [fp, #-12]
   1c040:	ldr	r0, [fp, #-12]
   1c044:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c048:	cmp	r0, r1
   1c04c:	beq	1c074 <main@@Base+0x5b54>
   1c050:	ldr	r0, [fp, #8]
   1c054:	mov	r1, #0
   1c058:	str	r1, [r0, #4]
   1c05c:	mov	r1, #2
   1c060:	str	r1, [r0]
   1c064:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c068:	movw	r1, #0
   1c06c:	str	r1, [r0]
   1c070:	b	1c080 <main@@Base+0x5b60>
   1c074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c078:	str	r0, [fp, #-4]
   1c07c:	b	1c0a0 <main@@Base+0x5b80>
   1c080:	b	1c090 <main@@Base+0x5b70>
   1c084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c088:	str	r0, [fp, #-4]
   1c08c:	b	1c0a0 <main@@Base+0x5b80>
   1c090:	b	1c094 <main@@Base+0x5b74>
   1c094:	b	1c098 <main@@Base+0x5b78>
   1c098:	ldr	r0, [fp, #-12]
   1c09c:	str	r0, [fp, #-4]
   1c0a0:	ldr	r0, [fp, #-4]
   1c0a4:	mov	sp, fp
   1c0a8:	pop	{fp, pc}
   1c0ac:	push	{fp, lr}
   1c0b0:	mov	fp, sp
   1c0b4:	sub	sp, sp, #88	; 0x58
   1c0b8:	ldr	ip, [fp, #12]
   1c0bc:	ldr	lr, [fp, #8]
   1c0c0:	str	r0, [fp, #-8]
   1c0c4:	str	r1, [fp, #-12]
   1c0c8:	str	r2, [fp, #-16]
   1c0cc:	str	r3, [fp, #-20]	; 0xffffffec
   1c0d0:	ldr	r0, [fp, #-12]
   1c0d4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c0d8:	ldr	r0, [fp, #-12]
   1c0dc:	ldr	r1, [fp, #-16]
   1c0e0:	str	lr, [sp, #44]	; 0x2c
   1c0e4:	str	ip, [sp, #40]	; 0x28
   1c0e8:	bl	1bd10 <main@@Base+0x57f0>
   1c0ec:	str	r1, [fp, #-36]	; 0xffffffdc
   1c0f0:	str	r0, [fp, #-40]	; 0xffffffd8
   1c0f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c0f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c0fc:	movw	r2, #30060	; 0x756c
   1c100:	movt	r2, #25966	; 0x656e
   1c104:	subs	r0, r2, r0
   1c108:	movw	r2, #30815	; 0x785f
   1c10c:	movt	r2, #26725	; 0x6865
   1c110:	sbcs	r1, r2, r1
   1c114:	str	r0, [sp, #36]	; 0x24
   1c118:	str	r1, [sp, #32]
   1c11c:	bcc	1c314 <main@@Base+0x5df4>
   1c120:	b	1c124 <main@@Base+0x5c04>
   1c124:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c128:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c12c:	mvn	r2, #-1912602624	; 0x8e000000
   1c130:	subs	r0, r2, r0
   1c134:	movw	r2, #27759	; 0x6c6f
   1c138:	movt	r2, #17263	; 0x436f
   1c13c:	sbcs	r1, r2, r1
   1c140:	str	r0, [sp, #28]
   1c144:	str	r1, [sp, #24]
   1c148:	bcc	1c1e4 <main@@Base+0x5cc4>
   1c14c:	b	1c150 <main@@Base+0x5c30>
   1c150:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c154:	bic	r0, r0, #255	; 0xff
   1c158:	movw	r1, #30976	; 0x7900
   1c15c:	movt	r1, #16750	; 0x416e
   1c160:	teq	r0, r1
   1c164:	bne	1c1d4 <main@@Base+0x5cb4>
   1c168:	b	1c16c <main@@Base+0x5c4c>
   1c16c:	ldr	r0, [fp, #-8]
   1c170:	ldr	r1, [fp, #-12]
   1c174:	str	r1, [fp, #-28]	; 0xffffffe4
   1c178:	ldr	r2, [fp, #-16]
   1c17c:	movw	r3, #3
   1c180:	bl	210d8 <main@@Base+0xabb8>
   1c184:	str	r0, [fp, #-12]
   1c188:	ldr	r0, [fp, #-12]
   1c18c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c190:	cmp	r0, r1
   1c194:	beq	1c1c4 <main@@Base+0x5ca4>
   1c198:	ldr	r0, [fp, #-8]
   1c19c:	ldr	r1, [fp, #-12]
   1c1a0:	ldr	r2, [fp, #-16]
   1c1a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c1a8:	ldr	ip, [fp, #8]
   1c1ac:	ldr	lr, [fp, #12]
   1c1b0:	str	ip, [sp]
   1c1b4:	str	lr, [sp, #4]
   1c1b8:	bl	1e9fc <main@@Base+0x84dc>
   1c1bc:	str	r0, [fp, #-12]
   1c1c0:	b	1c1d0 <main@@Base+0x5cb0>
   1c1c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1c8:	str	r0, [fp, #-4]
   1c1cc:	b	1c660 <main@@Base+0x6140>
   1c1d0:	b	1c1e0 <main@@Base+0x5cc0>
   1c1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1d8:	str	r0, [fp, #-4]
   1c1dc:	b	1c660 <main@@Base+0x6140>
   1c1e0:	b	1c310 <main@@Base+0x5df0>
   1c1e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c1e8:	bic	r0, r0, #255	; 0xff
   1c1ec:	movw	r1, #28416	; 0x6f00
   1c1f0:	movt	r1, #18031	; 0x466f
   1c1f4:	teq	r0, r1
   1c1f8:	bne	1c268 <main@@Base+0x5d48>
   1c1fc:	b	1c200 <main@@Base+0x5ce0>
   1c200:	ldr	r0, [fp, #-8]
   1c204:	ldr	r1, [fp, #-12]
   1c208:	str	r1, [fp, #-28]	; 0xffffffe4
   1c20c:	ldr	r2, [fp, #-16]
   1c210:	movw	r3, #3
   1c214:	bl	210d8 <main@@Base+0xabb8>
   1c218:	str	r0, [fp, #-12]
   1c21c:	ldr	r0, [fp, #-12]
   1c220:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c224:	cmp	r0, r1
   1c228:	beq	1c258 <main@@Base+0x5d38>
   1c22c:	ldr	r0, [fp, #-8]
   1c230:	ldr	r1, [fp, #-12]
   1c234:	ldr	r2, [fp, #-16]
   1c238:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c23c:	ldr	ip, [fp, #8]
   1c240:	ldr	lr, [fp, #12]
   1c244:	str	ip, [sp]
   1c248:	str	lr, [sp, #4]
   1c24c:	bl	2115c <main@@Base+0xac3c>
   1c250:	str	r0, [fp, #-12]
   1c254:	b	1c264 <main@@Base+0x5d44>
   1c258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c25c:	str	r0, [fp, #-4]
   1c260:	b	1c660 <main@@Base+0x6140>
   1c264:	b	1c30c <main@@Base+0x5dec>
   1c268:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c26c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c270:	and	r0, r0, #-16777216	; 0xff000000
   1c274:	movw	r2, #27759	; 0x6c6f
   1c278:	movt	r2, #17263	; 0x436f
   1c27c:	eor	r1, r1, r2
   1c280:	eor	r0, r0, #1912602624	; 0x72000000
   1c284:	orr	r0, r0, r1
   1c288:	cmp	r0, #0
   1c28c:	bne	1c2fc <main@@Base+0x5ddc>
   1c290:	b	1c294 <main@@Base+0x5d74>
   1c294:	ldr	r0, [fp, #-8]
   1c298:	ldr	r1, [fp, #-12]
   1c29c:	str	r1, [fp, #-28]	; 0xffffffe4
   1c2a0:	ldr	r2, [fp, #-16]
   1c2a4:	movw	r3, #5
   1c2a8:	bl	210d8 <main@@Base+0xabb8>
   1c2ac:	str	r0, [fp, #-12]
   1c2b0:	ldr	r0, [fp, #-12]
   1c2b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c2b8:	cmp	r0, r1
   1c2bc:	beq	1c2ec <main@@Base+0x5dcc>
   1c2c0:	ldr	r0, [fp, #-8]
   1c2c4:	ldr	r1, [fp, #-12]
   1c2c8:	ldr	r2, [fp, #-16]
   1c2cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c2d0:	ldr	ip, [fp, #8]
   1c2d4:	ldr	lr, [fp, #12]
   1c2d8:	str	ip, [sp]
   1c2dc:	str	lr, [sp, #4]
   1c2e0:	bl	1be44 <main@@Base+0x5924>
   1c2e4:	str	r0, [fp, #-12]
   1c2e8:	b	1c2f8 <main@@Base+0x5dd8>
   1c2ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2f0:	str	r0, [fp, #-4]
   1c2f4:	b	1c660 <main@@Base+0x6140>
   1c2f8:	b	1c308 <main@@Base+0x5de8>
   1c2fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c300:	str	r0, [fp, #-4]
   1c304:	b	1c660 <main@@Base+0x6140>
   1c308:	b	1c30c <main@@Base+0x5dec>
   1c30c:	b	1c310 <main@@Base+0x5df0>
   1c310:	b	1c658 <main@@Base+0x6138>
   1c314:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c318:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c31c:	movw	r2, #30060	; 0x756c
   1c320:	movt	r2, #25966	; 0x656e
   1c324:	subs	r0, r2, r0
   1c328:	movw	r2, #29791	; 0x745f
   1c32c:	movt	r2, #26990	; 0x696e
   1c330:	sbcs	r1, r2, r1
   1c334:	str	r0, [sp, #20]
   1c338:	str	r1, [sp, #16]
   1c33c:	bcc	1c3ec <main@@Base+0x5ecc>
   1c340:	b	1c344 <main@@Base+0x5e24>
   1c344:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c348:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c34c:	movw	r2, #30815	; 0x785f
   1c350:	movt	r2, #26725	; 0x6865
   1c354:	eor	r1, r1, r2
   1c358:	movw	r2, #30061	; 0x756d
   1c35c:	movt	r2, #25966	; 0x656e
   1c360:	eor	r0, r0, r2
   1c364:	orr	r0, r0, r1
   1c368:	cmp	r0, #0
   1c36c:	bne	1c3dc <main@@Base+0x5ebc>
   1c370:	b	1c374 <main@@Base+0x5e54>
   1c374:	ldr	r0, [fp, #-8]
   1c378:	ldr	r1, [fp, #-12]
   1c37c:	str	r1, [fp, #-28]	; 0xffffffe4
   1c380:	ldr	r2, [fp, #-16]
   1c384:	movw	r3, #8
   1c388:	bl	210d8 <main@@Base+0xabb8>
   1c38c:	str	r0, [fp, #-12]
   1c390:	ldr	r0, [fp, #-12]
   1c394:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c398:	cmp	r0, r1
   1c39c:	beq	1c3cc <main@@Base+0x5eac>
   1c3a0:	ldr	r0, [fp, #-8]
   1c3a4:	ldr	r1, [fp, #-12]
   1c3a8:	ldr	r2, [fp, #-16]
   1c3ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c3b0:	ldr	ip, [fp, #8]
   1c3b4:	ldr	lr, [fp, #12]
   1c3b8:	str	ip, [sp]
   1c3bc:	str	lr, [sp, #4]
   1c3c0:	bl	21398 <main@@Base+0xae78>
   1c3c4:	str	r0, [fp, #-12]
   1c3c8:	b	1c3d8 <main@@Base+0x5eb8>
   1c3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3d0:	str	r0, [fp, #-4]
   1c3d4:	b	1c660 <main@@Base+0x6140>
   1c3d8:	b	1c3e8 <main@@Base+0x5ec8>
   1c3dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3e0:	str	r0, [fp, #-4]
   1c3e4:	b	1c660 <main@@Base+0x6140>
   1c3e8:	b	1c654 <main@@Base+0x6134>
   1c3ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c3f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c3f4:	movw	r2, #30060	; 0x756c
   1c3f8:	movt	r2, #25966	; 0x656e
   1c3fc:	subs	r0, r2, r0
   1c400:	movw	r2, #26463	; 0x675f
   1c404:	movt	r2, #28261	; 0x6e65
   1c408:	sbcs	r1, r2, r1
   1c40c:	str	r0, [sp, #12]
   1c410:	str	r1, [sp, #8]
   1c414:	bcc	1c4c4 <main@@Base+0x5fa4>
   1c418:	b	1c41c <main@@Base+0x5efc>
   1c41c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c420:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c424:	movw	r2, #29791	; 0x745f
   1c428:	movt	r2, #26990	; 0x696e
   1c42c:	eor	r1, r1, r2
   1c430:	movw	r2, #30061	; 0x756d
   1c434:	movt	r2, #25966	; 0x656e
   1c438:	eor	r0, r0, r2
   1c43c:	orr	r0, r0, r1
   1c440:	cmp	r0, #0
   1c444:	bne	1c4b4 <main@@Base+0x5f94>
   1c448:	b	1c44c <main@@Base+0x5f2c>
   1c44c:	ldr	r0, [fp, #-8]
   1c450:	ldr	r1, [fp, #-12]
   1c454:	str	r1, [fp, #-28]	; 0xffffffe4
   1c458:	ldr	r2, [fp, #-16]
   1c45c:	movw	r3, #8
   1c460:	bl	210d8 <main@@Base+0xabb8>
   1c464:	str	r0, [fp, #-12]
   1c468:	ldr	r0, [fp, #-12]
   1c46c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c470:	cmp	r0, r1
   1c474:	beq	1c4a4 <main@@Base+0x5f84>
   1c478:	ldr	r0, [fp, #-8]
   1c47c:	ldr	r1, [fp, #-12]
   1c480:	ldr	r2, [fp, #-16]
   1c484:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c488:	ldr	ip, [fp, #8]
   1c48c:	ldr	lr, [fp, #12]
   1c490:	str	ip, [sp]
   1c494:	str	lr, [sp, #4]
   1c498:	bl	215f0 <main@@Base+0xb0d0>
   1c49c:	str	r0, [fp, #-12]
   1c4a0:	b	1c4b0 <main@@Base+0x5f90>
   1c4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4a8:	str	r0, [fp, #-4]
   1c4ac:	b	1c660 <main@@Base+0x6140>
   1c4b0:	b	1c4c0 <main@@Base+0x5fa0>
   1c4b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4b8:	str	r0, [fp, #-4]
   1c4bc:	b	1c660 <main@@Base+0x6140>
   1c4c0:	b	1c650 <main@@Base+0x6130>
   1c4c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c4c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c4cc:	movw	r2, #26463	; 0x675f
   1c4d0:	movt	r2, #28261	; 0x6e65
   1c4d4:	eor	r1, r1, r2
   1c4d8:	movw	r2, #30061	; 0x756d
   1c4dc:	movt	r2, #25966	; 0x656e
   1c4e0:	eor	r0, r0, r2
   1c4e4:	orr	r0, r0, r1
   1c4e8:	cmp	r0, #0
   1c4ec:	bne	1c554 <main@@Base+0x6034>
   1c4f0:	b	1c4f4 <main@@Base+0x5fd4>
   1c4f4:	ldr	r0, [fp, #-8]
   1c4f8:	ldr	r1, [fp, #-12]
   1c4fc:	str	r1, [fp, #-28]	; 0xffffffe4
   1c500:	ldr	r2, [fp, #-16]
   1c504:	movw	r3, #8
   1c508:	bl	210d8 <main@@Base+0xabb8>
   1c50c:	str	r0, [fp, #-12]
   1c510:	ldr	r0, [fp, #-12]
   1c514:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c518:	cmp	r0, r1
   1c51c:	beq	1c54c <main@@Base+0x602c>
   1c520:	ldr	r0, [fp, #-8]
   1c524:	ldr	r1, [fp, #-12]
   1c528:	ldr	r2, [fp, #-16]
   1c52c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c530:	ldr	ip, [fp, #8]
   1c534:	ldr	lr, [fp, #12]
   1c538:	str	ip, [sp]
   1c53c:	str	lr, [sp, #4]
   1c540:	bl	21930 <main@@Base+0xb410>
   1c544:	str	r0, [fp, #-12]
   1c548:	b	1c550 <main@@Base+0x6030>
   1c54c:	b	1c55c <main@@Base+0x603c>
   1c550:	b	1c558 <main@@Base+0x6038>
   1c554:	b	1c55c <main@@Base+0x603c>
   1c558:	b	1c64c <main@@Base+0x612c>
   1c55c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c560:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c564:	movw	r2, #29797	; 0x7465
   1c568:	movt	r2, #28271	; 0x6e6f
   1c56c:	eor	r1, r1, r2
   1c570:	movw	r2, #29817	; 0x7479
   1c574:	movt	r2, #28016	; 0x6d70
   1c578:	eor	r0, r0, r2
   1c57c:	orr	r0, r0, r1
   1c580:	cmp	r0, #0
   1c584:	bne	1c63c <main@@Base+0x611c>
   1c588:	b	1c58c <main@@Base+0x606c>
   1c58c:	ldr	r0, [fp, #-12]
   1c590:	add	r0, r0, #8
   1c594:	str	r0, [fp, #-12]
   1c598:	ldr	r0, [fp, #-12]
   1c59c:	ldr	r1, [fp, #-16]
   1c5a0:	bl	1bd10 <main@@Base+0x57f0>
   1c5a4:	str	r1, [fp, #-36]	; 0xffffffdc
   1c5a8:	str	r0, [fp, #-40]	; 0xffffffd8
   1c5ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c5b0:	movw	r1, #30061	; 0x756d
   1c5b4:	movt	r1, #25966	; 0x656e
   1c5b8:	teq	r0, r1
   1c5bc:	bne	1c62c <main@@Base+0x610c>
   1c5c0:	b	1c5c4 <main@@Base+0x60a4>
   1c5c4:	ldr	r0, [fp, #-8]
   1c5c8:	ldr	r1, [fp, #-12]
   1c5cc:	str	r1, [fp, #-28]	; 0xffffffe4
   1c5d0:	ldr	r2, [fp, #-16]
   1c5d4:	movw	r3, #4
   1c5d8:	bl	210d8 <main@@Base+0xabb8>
   1c5dc:	str	r0, [fp, #-12]
   1c5e0:	ldr	r0, [fp, #-12]
   1c5e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c5e8:	cmp	r0, r1
   1c5ec:	beq	1c61c <main@@Base+0x60fc>
   1c5f0:	ldr	r0, [fp, #-8]
   1c5f4:	ldr	r1, [fp, #-12]
   1c5f8:	ldr	r2, [fp, #-16]
   1c5fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c600:	ldr	ip, [fp, #8]
   1c604:	ldr	lr, [fp, #12]
   1c608:	str	ip, [sp]
   1c60c:	str	lr, [sp, #4]
   1c610:	bl	21b6c <main@@Base+0xb64c>
   1c614:	str	r0, [fp, #-12]
   1c618:	b	1c628 <main@@Base+0x6108>
   1c61c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c620:	str	r0, [fp, #-4]
   1c624:	b	1c660 <main@@Base+0x6140>
   1c628:	b	1c638 <main@@Base+0x6118>
   1c62c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c630:	str	r0, [fp, #-4]
   1c634:	b	1c660 <main@@Base+0x6140>
   1c638:	b	1c648 <main@@Base+0x6128>
   1c63c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c640:	str	r0, [fp, #-4]
   1c644:	b	1c660 <main@@Base+0x6140>
   1c648:	b	1c64c <main@@Base+0x612c>
   1c64c:	b	1c650 <main@@Base+0x6130>
   1c650:	b	1c654 <main@@Base+0x6134>
   1c654:	b	1c658 <main@@Base+0x6138>
   1c658:	ldr	r0, [fp, #-12]
   1c65c:	str	r0, [fp, #-4]
   1c660:	ldr	r0, [fp, #-4]
   1c664:	mov	sp, fp
   1c668:	pop	{fp, pc}
   1c66c:	push	{fp, lr}
   1c670:	mov	fp, sp
   1c674:	sub	sp, sp, #96	; 0x60
   1c678:	ldr	ip, [fp, #12]
   1c67c:	ldr	lr, [fp, #8]
   1c680:	str	r0, [fp, #-8]
   1c684:	str	r1, [fp, #-12]
   1c688:	str	r2, [fp, #-16]
   1c68c:	str	r3, [fp, #-20]	; 0xffffffec
   1c690:	ldr	r0, [fp, #-12]
   1c694:	str	r0, [fp, #-24]	; 0xffffffe8
   1c698:	ldr	r0, [fp, #-12]
   1c69c:	ldr	r1, [fp, #-16]
   1c6a0:	str	lr, [fp, #-44]	; 0xffffffd4
   1c6a4:	str	ip, [sp, #48]	; 0x30
   1c6a8:	bl	1bd10 <main@@Base+0x57f0>
   1c6ac:	str	r1, [fp, #-36]	; 0xffffffdc
   1c6b0:	str	r0, [fp, #-40]	; 0xffffffd8
   1c6b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c6b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c6bc:	movw	r2, #11844	; 0x2e44
   1c6c0:	movt	r2, #28005	; 0x6d65
   1c6c4:	subs	r0, r2, r0
   1c6c8:	movw	r2, #18273	; 0x4761
   1c6cc:	movt	r2, #19833	; 0x4d79
   1c6d0:	sbcs	r1, r2, r1
   1c6d4:	str	r0, [sp, #44]	; 0x2c
   1c6d8:	str	r1, [sp, #40]	; 0x28
   1c6dc:	bcc	1c830 <main@@Base+0x6310>
   1c6e0:	b	1c6e4 <main@@Base+0x61c4>
   1c6e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c6e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c6ec:	movw	r2, #28276	; 0x6e74
   1c6f0:	movt	r2, #18017	; 0x4661
   1c6f4:	eor	r1, r1, r2
   1c6f8:	movw	r2, #31022	; 0x792e
   1c6fc:	movt	r2, #24947	; 0x6173
   1c700:	eor	r0, r0, r2
   1c704:	orr	r0, r0, r1
   1c708:	cmp	r0, #0
   1c70c:	bne	1c820 <main@@Base+0x6300>
   1c710:	b	1c714 <main@@Base+0x61f4>
   1c714:	ldr	r0, [fp, #-12]
   1c718:	add	r0, r0, #8
   1c71c:	str	r0, [fp, #-12]
   1c720:	ldr	r0, [fp, #-12]
   1c724:	ldr	r1, [fp, #-16]
   1c728:	bl	1bd10 <main@@Base+0x57f0>
   1c72c:	str	r1, [fp, #-36]	; 0xffffffdc
   1c730:	str	r0, [fp, #-40]	; 0xffffffd8
   1c734:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c738:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c73c:	movw	lr, #24946	; 0x6172
   1c740:	movt	lr, #17256	; 0x4368
   1c744:	eor	r1, r1, lr
   1c748:	movw	lr, #29797	; 0x7465
   1c74c:	movt	lr, #24931	; 0x6163
   1c750:	eor	r0, r0, lr
   1c754:	orr	r0, r0, r1
   1c758:	cmp	r0, #0
   1c75c:	bne	1c810 <main@@Base+0x62f0>
   1c760:	b	1c764 <main@@Base+0x6244>
   1c764:	ldr	r0, [fp, #-12]
   1c768:	add	r0, r0, #8
   1c76c:	str	r0, [fp, #-12]
   1c770:	ldr	r0, [fp, #-12]
   1c774:	ldr	r1, [fp, #-16]
   1c778:	bl	1bd10 <main@@Base+0x57f0>
   1c77c:	str	r1, [fp, #-36]	; 0xffffffdc
   1c780:	str	r0, [fp, #-40]	; 0xffffffd8
   1c784:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c788:	and	r0, r0, #-16777216	; 0xff000000
   1c78c:	teq	r0, #1912602624	; 0x72000000
   1c790:	bne	1c800 <main@@Base+0x62e0>
   1c794:	b	1c798 <main@@Base+0x6278>
   1c798:	ldr	r0, [fp, #-8]
   1c79c:	ldr	r1, [fp, #-12]
   1c7a0:	str	r1, [fp, #-28]	; 0xffffffe4
   1c7a4:	ldr	r2, [fp, #-16]
   1c7a8:	movw	r3, #1
   1c7ac:	bl	210d8 <main@@Base+0xabb8>
   1c7b0:	str	r0, [fp, #-12]
   1c7b4:	ldr	r0, [fp, #-12]
   1c7b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c7bc:	cmp	r0, r1
   1c7c0:	beq	1c7f0 <main@@Base+0x62d0>
   1c7c4:	ldr	r0, [fp, #-8]
   1c7c8:	ldr	r1, [fp, #-12]
   1c7cc:	ldr	r2, [fp, #-16]
   1c7d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c7d4:	ldr	ip, [fp, #8]
   1c7d8:	ldr	lr, [fp, #12]
   1c7dc:	str	ip, [sp]
   1c7e0:	str	lr, [sp, #4]
   1c7e4:	bl	21c58 <main@@Base+0xb738>
   1c7e8:	str	r0, [fp, #-12]
   1c7ec:	b	1c7fc <main@@Base+0x62dc>
   1c7f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7f4:	str	r0, [fp, #-4]
   1c7f8:	b	1d24c <main@@Base+0x6d2c>
   1c7fc:	b	1c80c <main@@Base+0x62ec>
   1c800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c804:	str	r0, [fp, #-4]
   1c808:	b	1d24c <main@@Base+0x6d2c>
   1c80c:	b	1c81c <main@@Base+0x62fc>
   1c810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c814:	str	r0, [fp, #-4]
   1c818:	b	1d24c <main@@Base+0x6d2c>
   1c81c:	b	1c82c <main@@Base+0x630c>
   1c820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c824:	str	r0, [fp, #-4]
   1c828:	b	1d24c <main@@Base+0x6d2c>
   1c82c:	b	1d244 <main@@Base+0x6d24>
   1c830:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c834:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c838:	movw	r2, #18273	; 0x4761
   1c83c:	movt	r2, #19833	; 0x4d79
   1c840:	eor	r1, r1, r2
   1c844:	movw	r2, #11845	; 0x2e45
   1c848:	movt	r2, #28005	; 0x6d65
   1c84c:	eor	r0, r0, r2
   1c850:	orr	r0, r0, r1
   1c854:	cmp	r0, #0
   1c858:	bne	1d034 <main@@Base+0x6b14>
   1c85c:	b	1c860 <main@@Base+0x6340>
   1c860:	ldr	r0, [fp, #-12]
   1c864:	add	r0, r0, #8
   1c868:	str	r0, [fp, #-12]
   1c86c:	ldr	r0, [fp, #-12]
   1c870:	ldr	r1, [fp, #-16]
   1c874:	bl	1bd10 <main@@Base+0x57f0>
   1c878:	str	r1, [fp, #-36]	; 0xffffffdc
   1c87c:	str	r0, [fp, #-40]	; 0xffffffd8
   1c880:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c884:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c888:	movw	lr, #11879	; 0x2e67
   1c88c:	movt	lr, #27749	; 0x6c65
   1c890:	subs	r0, lr, r0
   1c894:	movw	lr, #28016	; 0x6d70
   1c898:	movt	lr, #30817	; 0x7861
   1c89c:	sbcs	r1, lr, r1
   1c8a0:	str	r0, [sp, #36]	; 0x24
   1c8a4:	str	r1, [sp, #32]
   1c8a8:	bcc	1cbb0 <main@@Base+0x6690>
   1c8ac:	b	1c8b0 <main@@Base+0x6390>
   1c8b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c8b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c8b8:	movw	r2, #11842	; 0x2e42
   1c8bc:	movt	r2, #27749	; 0x6c65
   1c8c0:	subs	r0, r2, r0
   1c8c4:	movw	r2, #28016	; 0x6d70
   1c8c8:	movt	r2, #30817	; 0x7861
   1c8cc:	sbcs	r1, r2, r1
   1c8d0:	str	r0, [sp, #28]
   1c8d4:	str	r1, [sp, #24]
   1c8d8:	bcc	1c9d4 <main@@Base+0x64b4>
   1c8dc:	b	1c8e0 <main@@Base+0x63c0>
   1c8e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c8e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c8e8:	movw	r2, #28016	; 0x6d70
   1c8ec:	movt	r2, #30817	; 0x7861
   1c8f0:	eor	r1, r1, r2
   1c8f4:	movw	r2, #11841	; 0x2e41
   1c8f8:	movt	r2, #27749	; 0x6c65
   1c8fc:	eor	r0, r0, r2
   1c900:	orr	r0, r0, r1
   1c904:	cmp	r0, #0
   1c908:	bne	1c9c4 <main@@Base+0x64a4>
   1c90c:	b	1c910 <main@@Base+0x63f0>
   1c910:	ldr	r0, [fp, #-12]
   1c914:	add	r0, r0, #8
   1c918:	str	r0, [fp, #-12]
   1c91c:	ldr	r0, [fp, #-12]
   1c920:	ldr	r1, [fp, #-16]
   1c924:	bl	1bd10 <main@@Base+0x57f0>
   1c928:	str	r1, [fp, #-36]	; 0xffffffdc
   1c92c:	str	r0, [fp, #-40]	; 0xffffffd8
   1c930:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c934:	bfc	r0, #0, #16
   1c938:	movw	r1, #0
   1c93c:	movt	r1, #28281	; 0x6e79
   1c940:	teq	r0, r1
   1c944:	bne	1c9b4 <main@@Base+0x6494>
   1c948:	b	1c94c <main@@Base+0x642c>
   1c94c:	ldr	r0, [fp, #-8]
   1c950:	ldr	r1, [fp, #-12]
   1c954:	str	r1, [fp, #-28]	; 0xffffffe4
   1c958:	ldr	r2, [fp, #-16]
   1c95c:	movw	r3, #2
   1c960:	bl	210d8 <main@@Base+0xabb8>
   1c964:	str	r0, [fp, #-12]
   1c968:	ldr	r0, [fp, #-12]
   1c96c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c970:	cmp	r0, r1
   1c974:	beq	1c9a4 <main@@Base+0x6484>
   1c978:	ldr	r0, [fp, #-8]
   1c97c:	ldr	r1, [fp, #-12]
   1c980:	ldr	r2, [fp, #-16]
   1c984:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c988:	ldr	ip, [fp, #8]
   1c98c:	ldr	lr, [fp, #12]
   1c990:	str	ip, [sp]
   1c994:	str	lr, [sp, #4]
   1c998:	bl	1e9fc <main@@Base+0x84dc>
   1c99c:	str	r0, [fp, #-12]
   1c9a0:	b	1c9b0 <main@@Base+0x6490>
   1c9a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9a8:	str	r0, [fp, #-4]
   1c9ac:	b	1d24c <main@@Base+0x6d2c>
   1c9b0:	b	1c9c0 <main@@Base+0x64a0>
   1c9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9b8:	str	r0, [fp, #-4]
   1c9bc:	b	1d24c <main@@Base+0x6d2c>
   1c9c0:	b	1c9d0 <main@@Base+0x64b0>
   1c9c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9c8:	str	r0, [fp, #-4]
   1c9cc:	b	1d24c <main@@Base+0x6d2c>
   1c9d0:	b	1cbac <main@@Base+0x668c>
   1c9d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c9d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c9dc:	movw	r2, #28016	; 0x6d70
   1c9e0:	movt	r2, #30817	; 0x7861
   1c9e4:	eor	r1, r1, r2
   1c9e8:	movw	r2, #11843	; 0x2e43
   1c9ec:	movt	r2, #27749	; 0x6c65
   1c9f0:	eor	r0, r0, r2
   1c9f4:	orr	r0, r0, r1
   1c9f8:	cmp	r0, #0
   1c9fc:	bne	1cab4 <main@@Base+0x6594>
   1ca00:	b	1ca04 <main@@Base+0x64e4>
   1ca04:	ldr	r0, [fp, #-12]
   1ca08:	add	r0, r0, #8
   1ca0c:	str	r0, [fp, #-12]
   1ca10:	ldr	r0, [fp, #-12]
   1ca14:	ldr	r1, [fp, #-16]
   1ca18:	bl	1bd10 <main@@Base+0x57f0>
   1ca1c:	str	r1, [fp, #-36]	; 0xffffffdc
   1ca20:	str	r0, [fp, #-40]	; 0xffffffd8
   1ca24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ca28:	movw	r1, #28530	; 0x6f72
   1ca2c:	movt	r1, #28524	; 0x6f6c
   1ca30:	teq	r0, r1
   1ca34:	bne	1caa4 <main@@Base+0x6584>
   1ca38:	b	1ca3c <main@@Base+0x651c>
   1ca3c:	ldr	r0, [fp, #-8]
   1ca40:	ldr	r1, [fp, #-12]
   1ca44:	str	r1, [fp, #-28]	; 0xffffffe4
   1ca48:	ldr	r2, [fp, #-16]
   1ca4c:	movw	r3, #4
   1ca50:	bl	210d8 <main@@Base+0xabb8>
   1ca54:	str	r0, [fp, #-12]
   1ca58:	ldr	r0, [fp, #-12]
   1ca5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ca60:	cmp	r0, r1
   1ca64:	beq	1ca94 <main@@Base+0x6574>
   1ca68:	ldr	r0, [fp, #-8]
   1ca6c:	ldr	r1, [fp, #-12]
   1ca70:	ldr	r2, [fp, #-16]
   1ca74:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca78:	ldr	ip, [fp, #8]
   1ca7c:	ldr	lr, [fp, #12]
   1ca80:	str	ip, [sp]
   1ca84:	str	lr, [sp, #4]
   1ca88:	bl	1be44 <main@@Base+0x5924>
   1ca8c:	str	r0, [fp, #-12]
   1ca90:	b	1caa0 <main@@Base+0x6580>
   1ca94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca98:	str	r0, [fp, #-4]
   1ca9c:	b	1d24c <main@@Base+0x6d2c>
   1caa0:	b	1cab0 <main@@Base+0x6590>
   1caa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1caa8:	str	r0, [fp, #-4]
   1caac:	b	1d24c <main@@Base+0x6d2c>
   1cab0:	b	1cba8 <main@@Base+0x6688>
   1cab4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cab8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cabc:	movw	r2, #28016	; 0x6d70
   1cac0:	movt	r2, #30817	; 0x7861
   1cac4:	eor	r1, r1, r2
   1cac8:	movw	r2, #11846	; 0x2e46
   1cacc:	movt	r2, #27749	; 0x6c65
   1cad0:	eor	r0, r0, r2
   1cad4:	orr	r0, r0, r1
   1cad8:	cmp	r0, #0
   1cadc:	bne	1cb98 <main@@Base+0x6678>
   1cae0:	b	1cae4 <main@@Base+0x65c4>
   1cae4:	ldr	r0, [fp, #-12]
   1cae8:	add	r0, r0, #8
   1caec:	str	r0, [fp, #-12]
   1caf0:	ldr	r0, [fp, #-12]
   1caf4:	ldr	r1, [fp, #-16]
   1caf8:	bl	1bd10 <main@@Base+0x57f0>
   1cafc:	str	r1, [fp, #-36]	; 0xffffffdc
   1cb00:	str	r0, [fp, #-40]	; 0xffffffd8
   1cb04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cb08:	bfc	r0, #0, #16
   1cb0c:	movw	r1, #0
   1cb10:	movt	r1, #28527	; 0x6f6f
   1cb14:	teq	r0, r1
   1cb18:	bne	1cb88 <main@@Base+0x6668>
   1cb1c:	b	1cb20 <main@@Base+0x6600>
   1cb20:	ldr	r0, [fp, #-8]
   1cb24:	ldr	r1, [fp, #-12]
   1cb28:	str	r1, [fp, #-28]	; 0xffffffe4
   1cb2c:	ldr	r2, [fp, #-16]
   1cb30:	movw	r3, #2
   1cb34:	bl	210d8 <main@@Base+0xabb8>
   1cb38:	str	r0, [fp, #-12]
   1cb3c:	ldr	r0, [fp, #-12]
   1cb40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cb44:	cmp	r0, r1
   1cb48:	beq	1cb78 <main@@Base+0x6658>
   1cb4c:	ldr	r0, [fp, #-8]
   1cb50:	ldr	r1, [fp, #-12]
   1cb54:	ldr	r2, [fp, #-16]
   1cb58:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cb5c:	ldr	ip, [fp, #8]
   1cb60:	ldr	lr, [fp, #12]
   1cb64:	str	ip, [sp]
   1cb68:	str	lr, [sp, #4]
   1cb6c:	bl	2115c <main@@Base+0xac3c>
   1cb70:	str	r0, [fp, #-12]
   1cb74:	b	1cb84 <main@@Base+0x6664>
   1cb78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb7c:	str	r0, [fp, #-4]
   1cb80:	b	1d24c <main@@Base+0x6d2c>
   1cb84:	b	1cb94 <main@@Base+0x6674>
   1cb88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb8c:	str	r0, [fp, #-4]
   1cb90:	b	1d24c <main@@Base+0x6d2c>
   1cb94:	b	1cba4 <main@@Base+0x6684>
   1cb98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb9c:	str	r0, [fp, #-4]
   1cba0:	b	1d24c <main@@Base+0x6d2c>
   1cba4:	b	1cba8 <main@@Base+0x6688>
   1cba8:	b	1cbac <main@@Base+0x668c>
   1cbac:	b	1d030 <main@@Base+0x6b10>
   1cbb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cbb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cbb8:	movw	r2, #11880	; 0x2e68
   1cbbc:	movt	r2, #27749	; 0x6c65
   1cbc0:	subs	r0, r2, r0
   1cbc4:	movw	r2, #28016	; 0x6d70
   1cbc8:	movt	r2, #30817	; 0x7861
   1cbcc:	sbcs	r1, r2, r1
   1cbd0:	str	r0, [sp, #20]
   1cbd4:	str	r1, [sp, #16]
   1cbd8:	bcc	1ccf0 <main@@Base+0x67d0>
   1cbdc:	b	1cbe0 <main@@Base+0x66c0>
   1cbe0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cbe4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cbe8:	movw	r2, #28016	; 0x6d70
   1cbec:	movt	r2, #30817	; 0x7861
   1cbf0:	eor	r1, r1, r2
   1cbf4:	movw	r2, #11880	; 0x2e68
   1cbf8:	movt	r2, #27749	; 0x6c65
   1cbfc:	eor	r0, r0, r2
   1cc00:	orr	r0, r0, r1
   1cc04:	cmp	r0, #0
   1cc08:	bne	1cce0 <main@@Base+0x67c0>
   1cc0c:	b	1cc10 <main@@Base+0x66f0>
   1cc10:	ldr	r0, [fp, #-12]
   1cc14:	add	r0, r0, #8
   1cc18:	str	r0, [fp, #-12]
   1cc1c:	ldr	r0, [fp, #-12]
   1cc20:	ldr	r1, [fp, #-16]
   1cc24:	bl	1bd10 <main@@Base+0x57f0>
   1cc28:	str	r1, [fp, #-36]	; 0xffffffdc
   1cc2c:	str	r0, [fp, #-40]	; 0xffffffd8
   1cc30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cc34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cc38:	movw	lr, #30815	; 0x785f
   1cc3c:	movt	lr, #101	; 0x65
   1cc40:	eor	lr, lr, r1, lsr #8
   1cc44:	lsr	r0, r0, #8
   1cc48:	orr	r0, r0, r1, lsl #24
   1cc4c:	movw	r1, #30061	; 0x756d
   1cc50:	movt	r1, #25966	; 0x656e
   1cc54:	eor	r0, r0, r1
   1cc58:	orr	r0, r0, lr
   1cc5c:	cmp	r0, #0
   1cc60:	bne	1ccd0 <main@@Base+0x67b0>
   1cc64:	b	1cc68 <main@@Base+0x6748>
   1cc68:	ldr	r0, [fp, #-8]
   1cc6c:	ldr	r1, [fp, #-12]
   1cc70:	str	r1, [fp, #-28]	; 0xffffffe4
   1cc74:	ldr	r2, [fp, #-16]
   1cc78:	movw	r3, #7
   1cc7c:	bl	210d8 <main@@Base+0xabb8>
   1cc80:	str	r0, [fp, #-12]
   1cc84:	ldr	r0, [fp, #-12]
   1cc88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc8c:	cmp	r0, r1
   1cc90:	beq	1ccc0 <main@@Base+0x67a0>
   1cc94:	ldr	r0, [fp, #-8]
   1cc98:	ldr	r1, [fp, #-12]
   1cc9c:	ldr	r2, [fp, #-16]
   1cca0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cca4:	ldr	ip, [fp, #8]
   1cca8:	ldr	lr, [fp, #12]
   1ccac:	str	ip, [sp]
   1ccb0:	str	lr, [sp, #4]
   1ccb4:	bl	21398 <main@@Base+0xae78>
   1ccb8:	str	r0, [fp, #-12]
   1ccbc:	b	1cccc <main@@Base+0x67ac>
   1ccc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccc4:	str	r0, [fp, #-4]
   1ccc8:	b	1d24c <main@@Base+0x6d2c>
   1cccc:	b	1ccdc <main@@Base+0x67bc>
   1ccd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccd4:	str	r0, [fp, #-4]
   1ccd8:	b	1d24c <main@@Base+0x6d2c>
   1ccdc:	b	1ccec <main@@Base+0x67cc>
   1cce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cce4:	str	r0, [fp, #-4]
   1cce8:	b	1d24c <main@@Base+0x6d2c>
   1ccec:	b	1d02c <main@@Base+0x6b0c>
   1ccf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ccf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ccf8:	movw	r2, #11885	; 0x2e6d
   1ccfc:	movt	r2, #27749	; 0x6c65
   1cd00:	subs	r0, r2, r0
   1cd04:	movw	r2, #28016	; 0x6d70
   1cd08:	movt	r2, #30817	; 0x7861
   1cd0c:	sbcs	r1, r2, r1
   1cd10:	str	r0, [sp, #12]
   1cd14:	str	r1, [sp, #8]
   1cd18:	bcc	1ce30 <main@@Base+0x6910>
   1cd1c:	b	1cd20 <main@@Base+0x6800>
   1cd20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cd24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cd28:	movw	r2, #28016	; 0x6d70
   1cd2c:	movt	r2, #30817	; 0x7861
   1cd30:	eor	r1, r1, r2
   1cd34:	movw	r2, #11881	; 0x2e69
   1cd38:	movt	r2, #27749	; 0x6c65
   1cd3c:	eor	r0, r0, r2
   1cd40:	orr	r0, r0, r1
   1cd44:	cmp	r0, #0
   1cd48:	bne	1ce20 <main@@Base+0x6900>
   1cd4c:	b	1cd50 <main@@Base+0x6830>
   1cd50:	ldr	r0, [fp, #-12]
   1cd54:	add	r0, r0, #8
   1cd58:	str	r0, [fp, #-12]
   1cd5c:	ldr	r0, [fp, #-12]
   1cd60:	ldr	r1, [fp, #-16]
   1cd64:	bl	1bd10 <main@@Base+0x57f0>
   1cd68:	str	r1, [fp, #-36]	; 0xffffffdc
   1cd6c:	str	r0, [fp, #-40]	; 0xffffffd8
   1cd70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cd74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cd78:	movw	lr, #29791	; 0x745f
   1cd7c:	movt	lr, #110	; 0x6e
   1cd80:	eor	lr, lr, r1, lsr #8
   1cd84:	lsr	r0, r0, #8
   1cd88:	orr	r0, r0, r1, lsl #24
   1cd8c:	movw	r1, #30061	; 0x756d
   1cd90:	movt	r1, #25966	; 0x656e
   1cd94:	eor	r0, r0, r1
   1cd98:	orr	r0, r0, lr
   1cd9c:	cmp	r0, #0
   1cda0:	bne	1ce10 <main@@Base+0x68f0>
   1cda4:	b	1cda8 <main@@Base+0x6888>
   1cda8:	ldr	r0, [fp, #-8]
   1cdac:	ldr	r1, [fp, #-12]
   1cdb0:	str	r1, [fp, #-28]	; 0xffffffe4
   1cdb4:	ldr	r2, [fp, #-16]
   1cdb8:	movw	r3, #7
   1cdbc:	bl	210d8 <main@@Base+0xabb8>
   1cdc0:	str	r0, [fp, #-12]
   1cdc4:	ldr	r0, [fp, #-12]
   1cdc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cdcc:	cmp	r0, r1
   1cdd0:	beq	1ce00 <main@@Base+0x68e0>
   1cdd4:	ldr	r0, [fp, #-8]
   1cdd8:	ldr	r1, [fp, #-12]
   1cddc:	ldr	r2, [fp, #-16]
   1cde0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cde4:	ldr	ip, [fp, #8]
   1cde8:	ldr	lr, [fp, #12]
   1cdec:	str	ip, [sp]
   1cdf0:	str	lr, [sp, #4]
   1cdf4:	bl	215f0 <main@@Base+0xb0d0>
   1cdf8:	str	r0, [fp, #-12]
   1cdfc:	b	1ce0c <main@@Base+0x68ec>
   1ce00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce04:	str	r0, [fp, #-4]
   1ce08:	b	1d24c <main@@Base+0x6d2c>
   1ce0c:	b	1ce1c <main@@Base+0x68fc>
   1ce10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce14:	str	r0, [fp, #-4]
   1ce18:	b	1d24c <main@@Base+0x6d2c>
   1ce1c:	b	1ce2c <main@@Base+0x690c>
   1ce20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce24:	str	r0, [fp, #-4]
   1ce28:	b	1d24c <main@@Base+0x6d2c>
   1ce2c:	b	1d028 <main@@Base+0x6b08>
   1ce30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ce34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce38:	movw	r2, #28016	; 0x6d70
   1ce3c:	movt	r2, #30817	; 0x7861
   1ce40:	eor	r1, r1, r2
   1ce44:	movw	r2, #11886	; 0x2e6e
   1ce48:	movt	r2, #27749	; 0x6c65
   1ce4c:	eor	r0, r0, r2
   1ce50:	orr	r0, r0, r1
   1ce54:	cmp	r0, #0
   1ce58:	bne	1d018 <main@@Base+0x6af8>
   1ce5c:	b	1ce60 <main@@Base+0x6940>
   1ce60:	ldr	r0, [fp, #-12]
   1ce64:	add	r0, r0, #8
   1ce68:	str	r0, [fp, #-12]
   1ce6c:	ldr	r0, [fp, #-12]
   1ce70:	ldr	r1, [fp, #-16]
   1ce74:	bl	1bd10 <main@@Base+0x57f0>
   1ce78:	str	r1, [fp, #-36]	; 0xffffffdc
   1ce7c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ce80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ce84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce88:	movw	lr, #26463	; 0x675f
   1ce8c:	movt	lr, #101	; 0x65
   1ce90:	eor	lr, lr, r1, lsr #8
   1ce94:	lsr	r0, r0, #8
   1ce98:	orr	r0, r0, r1, lsl #24
   1ce9c:	movw	r1, #30061	; 0x756d
   1cea0:	movt	r1, #25966	; 0x656e
   1cea4:	eor	r0, r0, r1
   1cea8:	orr	r0, r0, lr
   1ceac:	cmp	r0, #0
   1ceb0:	bne	1cf18 <main@@Base+0x69f8>
   1ceb4:	b	1ceb8 <main@@Base+0x6998>
   1ceb8:	ldr	r0, [fp, #-8]
   1cebc:	ldr	r1, [fp, #-12]
   1cec0:	str	r1, [fp, #-28]	; 0xffffffe4
   1cec4:	ldr	r2, [fp, #-16]
   1cec8:	movw	r3, #7
   1cecc:	bl	210d8 <main@@Base+0xabb8>
   1ced0:	str	r0, [fp, #-12]
   1ced4:	ldr	r0, [fp, #-12]
   1ced8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cedc:	cmp	r0, r1
   1cee0:	beq	1cf10 <main@@Base+0x69f0>
   1cee4:	ldr	r0, [fp, #-8]
   1cee8:	ldr	r1, [fp, #-12]
   1ceec:	ldr	r2, [fp, #-16]
   1cef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cef4:	ldr	ip, [fp, #8]
   1cef8:	ldr	lr, [fp, #12]
   1cefc:	str	ip, [sp]
   1cf00:	str	lr, [sp, #4]
   1cf04:	bl	21930 <main@@Base+0xb410>
   1cf08:	str	r0, [fp, #-12]
   1cf0c:	b	1cf14 <main@@Base+0x69f4>
   1cf10:	b	1cf20 <main@@Base+0x6a00>
   1cf14:	b	1cf1c <main@@Base+0x69fc>
   1cf18:	b	1cf20 <main@@Base+0x6a00>
   1cf1c:	b	1d014 <main@@Base+0x6af4>
   1cf20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cf24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cf28:	movw	r2, #25965	; 0x656d
   1cf2c:	movt	r2, #28532	; 0x6f74
   1cf30:	eor	r1, r1, r2
   1cf34:	movw	r2, #31077	; 0x7965
   1cf38:	movt	r2, #28788	; 0x7074
   1cf3c:	eor	r0, r0, r2
   1cf40:	orr	r0, r0, r1
   1cf44:	cmp	r0, #0
   1cf48:	bne	1d004 <main@@Base+0x6ae4>
   1cf4c:	b	1cf50 <main@@Base+0x6a30>
   1cf50:	ldr	r0, [fp, #-12]
   1cf54:	add	r0, r0, #8
   1cf58:	str	r0, [fp, #-12]
   1cf5c:	ldr	r0, [fp, #-12]
   1cf60:	ldr	r1, [fp, #-16]
   1cf64:	bl	1bd10 <main@@Base+0x57f0>
   1cf68:	str	r1, [fp, #-36]	; 0xffffffdc
   1cf6c:	str	r0, [fp, #-40]	; 0xffffffd8
   1cf70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cf74:	bic	r0, r0, #255	; 0xff
   1cf78:	movw	r1, #27904	; 0x6d00
   1cf7c:	movt	r1, #28277	; 0x6e75
   1cf80:	teq	r0, r1
   1cf84:	bne	1cff4 <main@@Base+0x6ad4>
   1cf88:	b	1cf8c <main@@Base+0x6a6c>
   1cf8c:	ldr	r0, [fp, #-8]
   1cf90:	ldr	r1, [fp, #-12]
   1cf94:	str	r1, [fp, #-28]	; 0xffffffe4
   1cf98:	ldr	r2, [fp, #-16]
   1cf9c:	movw	r3, #3
   1cfa0:	bl	210d8 <main@@Base+0xabb8>
   1cfa4:	str	r0, [fp, #-12]
   1cfa8:	ldr	r0, [fp, #-12]
   1cfac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cfb0:	cmp	r0, r1
   1cfb4:	beq	1cfe4 <main@@Base+0x6ac4>
   1cfb8:	ldr	r0, [fp, #-8]
   1cfbc:	ldr	r1, [fp, #-12]
   1cfc0:	ldr	r2, [fp, #-16]
   1cfc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfc8:	ldr	ip, [fp, #8]
   1cfcc:	ldr	lr, [fp, #12]
   1cfd0:	str	ip, [sp]
   1cfd4:	str	lr, [sp, #4]
   1cfd8:	bl	21b6c <main@@Base+0xb64c>
   1cfdc:	str	r0, [fp, #-12]
   1cfe0:	b	1cff0 <main@@Base+0x6ad0>
   1cfe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfe8:	str	r0, [fp, #-4]
   1cfec:	b	1d24c <main@@Base+0x6d2c>
   1cff0:	b	1d000 <main@@Base+0x6ae0>
   1cff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cff8:	str	r0, [fp, #-4]
   1cffc:	b	1d24c <main@@Base+0x6d2c>
   1d000:	b	1d010 <main@@Base+0x6af0>
   1d004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d008:	str	r0, [fp, #-4]
   1d00c:	b	1d24c <main@@Base+0x6d2c>
   1d010:	b	1d014 <main@@Base+0x6af4>
   1d014:	b	1d024 <main@@Base+0x6b04>
   1d018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d01c:	str	r0, [fp, #-4]
   1d020:	b	1d24c <main@@Base+0x6d2c>
   1d024:	b	1d028 <main@@Base+0x6b08>
   1d028:	b	1d02c <main@@Base+0x6b0c>
   1d02c:	b	1d030 <main@@Base+0x6b10>
   1d030:	b	1d240 <main@@Base+0x6d20>
   1d034:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d038:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d03c:	movw	r2, #18273	; 0x4761
   1d040:	movt	r2, #19833	; 0x4d79
   1d044:	eor	r1, r1, r2
   1d048:	movw	r2, #11855	; 0x2e4f
   1d04c:	movt	r2, #28005	; 0x6d65
   1d050:	eor	r0, r0, r2
   1d054:	orr	r0, r0, r1
   1d058:	cmp	r0, #0
   1d05c:	bne	1d230 <main@@Base+0x6d10>
   1d060:	b	1d064 <main@@Base+0x6b44>
   1d064:	ldr	r0, [fp, #-12]
   1d068:	add	r0, r0, #8
   1d06c:	str	r0, [fp, #-12]
   1d070:	ldr	r0, [fp, #-12]
   1d074:	ldr	r1, [fp, #-16]
   1d078:	bl	1bd10 <main@@Base+0x57f0>
   1d07c:	str	r1, [fp, #-36]	; 0xffffffdc
   1d080:	str	r0, [fp, #-40]	; 0xffffffd8
   1d084:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d088:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d08c:	movw	lr, #25970	; 0x6572
   1d090:	movt	lr, #29800	; 0x7468
   1d094:	eor	r1, r1, lr
   1d098:	movw	lr, #28005	; 0x6d65
   1d09c:	movt	lr, #20065	; 0x4e61
   1d0a0:	eor	r0, r0, lr
   1d0a4:	orr	r0, r0, r1
   1d0a8:	cmp	r0, #0
   1d0ac:	bne	1d220 <main@@Base+0x6d00>
   1d0b0:	b	1d0b4 <main@@Base+0x6b94>
   1d0b4:	ldr	r0, [fp, #-12]
   1d0b8:	add	r0, r0, #8
   1d0bc:	str	r0, [fp, #-12]
   1d0c0:	ldr	r0, [fp, #-12]
   1d0c4:	ldr	r1, [fp, #-16]
   1d0c8:	bl	1bd10 <main@@Base+0x57f0>
   1d0cc:	str	r1, [fp, #-36]	; 0xffffffdc
   1d0d0:	str	r0, [fp, #-40]	; 0xffffffd8
   1d0d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d0d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d0dc:	movw	lr, #24931	; 0x6163
   1d0e0:	movt	lr, #21360	; 0x5370
   1d0e4:	eor	r1, r1, lr
   1d0e8:	movw	lr, #18034	; 0x4672
   1d0ec:	movt	lr, #25902	; 0x652e
   1d0f0:	eor	r0, r0, lr
   1d0f4:	orr	r0, r0, r1
   1d0f8:	cmp	r0, #0
   1d0fc:	bne	1d210 <main@@Base+0x6cf0>
   1d100:	b	1d104 <main@@Base+0x6be4>
   1d104:	ldr	r0, [fp, #-12]
   1d108:	add	r0, r0, #8
   1d10c:	str	r0, [fp, #-12]
   1d110:	ldr	r0, [fp, #-12]
   1d114:	ldr	r1, [fp, #-16]
   1d118:	bl	1bd10 <main@@Base+0x57f0>
   1d11c:	str	r1, [fp, #-36]	; 0xffffffdc
   1d120:	str	r0, [fp, #-40]	; 0xffffffd8
   1d124:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d128:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d12c:	movw	lr, #18798	; 0x496e
   1d130:	movt	lr, #28525	; 0x6f6d
   1d134:	eor	r1, r1, lr
   1d138:	movw	lr, #30052	; 0x7564
   1d13c:	movt	lr, #25452	; 0x636c
   1d140:	eor	r0, r0, lr
   1d144:	orr	r0, r0, r1
   1d148:	cmp	r0, #0
   1d14c:	bne	1d200 <main@@Base+0x6ce0>
   1d150:	b	1d154 <main@@Base+0x6c34>
   1d154:	ldr	r0, [fp, #-12]
   1d158:	add	r0, r0, #8
   1d15c:	str	r0, [fp, #-12]
   1d160:	ldr	r0, [fp, #-12]
   1d164:	ldr	r1, [fp, #-16]
   1d168:	bl	1bd10 <main@@Base+0x57f0>
   1d16c:	str	r1, [fp, #-36]	; 0xffffffdc
   1d170:	str	r0, [fp, #-40]	; 0xffffffd8
   1d174:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d178:	and	r0, r0, #-16777216	; 0xff000000
   1d17c:	teq	r0, #1694498816	; 0x65000000
   1d180:	bne	1d1f0 <main@@Base+0x6cd0>
   1d184:	b	1d188 <main@@Base+0x6c68>
   1d188:	ldr	r0, [fp, #-8]
   1d18c:	ldr	r1, [fp, #-12]
   1d190:	str	r1, [fp, #-28]	; 0xffffffe4
   1d194:	ldr	r2, [fp, #-16]
   1d198:	movw	r3, #1
   1d19c:	bl	210d8 <main@@Base+0xabb8>
   1d1a0:	str	r0, [fp, #-12]
   1d1a4:	ldr	r0, [fp, #-12]
   1d1a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d1ac:	cmp	r0, r1
   1d1b0:	beq	1d1e0 <main@@Base+0x6cc0>
   1d1b4:	ldr	r0, [fp, #-8]
   1d1b8:	ldr	r1, [fp, #-12]
   1d1bc:	ldr	r2, [fp, #-16]
   1d1c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1c4:	ldr	ip, [fp, #8]
   1d1c8:	ldr	lr, [fp, #12]
   1d1cc:	str	ip, [sp]
   1d1d0:	str	lr, [sp, #4]
   1d1d4:	bl	22218 <main@@Base+0xbcf8>
   1d1d8:	str	r0, [fp, #-12]
   1d1dc:	b	1d1ec <main@@Base+0x6ccc>
   1d1e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1e4:	str	r0, [fp, #-4]
   1d1e8:	b	1d24c <main@@Base+0x6d2c>
   1d1ec:	b	1d1fc <main@@Base+0x6cdc>
   1d1f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1f4:	str	r0, [fp, #-4]
   1d1f8:	b	1d24c <main@@Base+0x6d2c>
   1d1fc:	b	1d20c <main@@Base+0x6cec>
   1d200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d204:	str	r0, [fp, #-4]
   1d208:	b	1d24c <main@@Base+0x6d2c>
   1d20c:	b	1d21c <main@@Base+0x6cfc>
   1d210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d214:	str	r0, [fp, #-4]
   1d218:	b	1d24c <main@@Base+0x6d2c>
   1d21c:	b	1d22c <main@@Base+0x6d0c>
   1d220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d224:	str	r0, [fp, #-4]
   1d228:	b	1d24c <main@@Base+0x6d2c>
   1d22c:	b	1d23c <main@@Base+0x6d1c>
   1d230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d234:	str	r0, [fp, #-4]
   1d238:	b	1d24c <main@@Base+0x6d2c>
   1d23c:	b	1d240 <main@@Base+0x6d20>
   1d240:	b	1d244 <main@@Base+0x6d24>
   1d244:	ldr	r0, [fp, #-12]
   1d248:	str	r0, [fp, #-4]
   1d24c:	ldr	r0, [fp, #-4]
   1d250:	mov	sp, fp
   1d254:	pop	{fp, pc}
   1d258:	push	{r4, r5, fp, lr}
   1d25c:	add	fp, sp, #8
   1d260:	sub	sp, sp, #56	; 0x38
   1d264:	str	r0, [fp, #-16]
   1d268:	str	r1, [fp, #-20]	; 0xffffffec
   1d26c:	str	r2, [fp, #-24]	; 0xffffffe8
   1d270:	str	r3, [fp, #-28]	; 0xffffffe4
   1d274:	mov	r0, #0
   1d278:	str	r0, [sp, #28]
   1d27c:	str	r0, [sp, #24]
   1d280:	movw	r0, #0
   1d284:	str	r0, [sp, #20]
   1d288:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d28c:	str	r0, [sp, #16]
   1d290:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d294:	movw	r1, #0
   1d298:	strb	r1, [r0]
   1d29c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d2a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2a4:	cmp	r0, r1
   1d2a8:	bne	1d2b8 <main@@Base+0x6d98>
   1d2ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d2b0:	str	r0, [fp, #-12]
   1d2b4:	b	1d328 <main@@Base+0x6e08>
   1d2b8:	ldr	r0, [fp, #-16]
   1d2bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d2c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d2c4:	add	r3, sp, #20
   1d2c8:	add	ip, sp, #24
   1d2cc:	str	ip, [sp]
   1d2d0:	bl	35a5c <flatcc_json_parser_integer@@Base>
   1d2d4:	str	r0, [fp, #-20]	; 0xffffffec
   1d2d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d2dc:	ldr	r1, [sp, #16]
   1d2e0:	cmp	r0, r1
   1d2e4:	beq	1d320 <main@@Base+0x6e00>
   1d2e8:	ldr	r0, [fp, #-16]
   1d2ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d2f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d2f4:	ldr	r3, [sp, #20]
   1d2f8:	ldr	ip, [sp, #24]
   1d2fc:	ldr	lr, [sp, #28]
   1d300:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1d304:	mov	r5, sp
   1d308:	str	r4, [r5, #8]
   1d30c:	str	lr, [r5, #4]
   1d310:	str	ip, [r5]
   1d314:	bl	22400 <main@@Base+0xbee0>
   1d318:	str	r0, [fp, #-12]
   1d31c:	b	1d328 <main@@Base+0x6e08>
   1d320:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d324:	str	r0, [fp, #-12]
   1d328:	ldr	r0, [fp, #-12]
   1d32c:	sub	sp, fp, #8
   1d330:	pop	{r4, r5, fp, pc}
   1d334:	push	{r4, r5, r6, sl, fp, lr}
   1d338:	add	fp, sp, #16
   1d33c:	sub	sp, sp, #80	; 0x50
   1d340:	ldr	ip, [fp, #8]
   1d344:	str	r0, [fp, #-24]	; 0xffffffe8
   1d348:	str	r1, [fp, #-28]	; 0xffffffe4
   1d34c:	str	r2, [fp, #-32]	; 0xffffffe0
   1d350:	str	r3, [fp, #-36]	; 0xffffffdc
   1d354:	movw	r0, #0
   1d358:	strb	r0, [fp, #-45]	; 0xffffffd3
   1d35c:	ldr	r1, [fp, #8]
   1d360:	strb	r0, [r1]
   1d364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d368:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d36c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d370:	str	ip, [sp, #28]
   1d374:	bl	224ec <main@@Base+0xbfcc>
   1d378:	str	r0, [fp, #-28]	; 0xffffffe4
   1d37c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d380:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d384:	cmp	r0, r1
   1d388:	bne	1d398 <main@@Base+0x6e78>
   1d38c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d390:	str	r0, [fp, #-20]	; 0xffffffec
   1d394:	b	1d50c <main@@Base+0x6fec>
   1d398:	b	1d39c <main@@Base+0x6e7c>
   1d39c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d3a0:	str	r0, [fp, #-40]	; 0xffffffd8
   1d3a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d3a8:	ldr	r0, [r0]
   1d3ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d3b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d3b4:	str	r2, [fp, #-44]	; 0xffffffd4
   1d3b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d3bc:	str	r0, [sp, #24]
   1d3c0:	mov	r0, r1
   1d3c4:	mov	r1, r2
   1d3c8:	mov	r2, r3
   1d3cc:	add	r3, sp, #36	; 0x24
   1d3d0:	add	ip, sp, #40	; 0x28
   1d3d4:	str	ip, [sp]
   1d3d8:	add	ip, sp, #32
   1d3dc:	str	ip, [sp, #4]
   1d3e0:	ldr	ip, [sp, #24]
   1d3e4:	blx	ip
   1d3e8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d3f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d3f4:	cmp	r0, r1
   1d3f8:	bne	1d408 <main@@Base+0x6ee8>
   1d3fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d400:	str	r0, [fp, #-20]	; 0xffffffec
   1d404:	b	1d50c <main@@Base+0x6fec>
   1d408:	b	1d40c <main@@Base+0x6eec>
   1d40c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d410:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d414:	cmp	r0, r1
   1d418:	movw	r0, #0
   1d41c:	str	r0, [sp, #20]
   1d420:	bne	1d448 <main@@Base+0x6f28>
   1d424:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d428:	add	r1, r0, #4
   1d42c:	str	r1, [fp, #-40]	; 0xffffffd8
   1d430:	ldr	r0, [r0, #4]
   1d434:	movw	r1, #0
   1d438:	cmp	r0, r1
   1d43c:	movw	r0, #0
   1d440:	movne	r0, #1
   1d444:	str	r0, [sp, #20]
   1d448:	ldr	r0, [sp, #20]
   1d44c:	tst	r0, #1
   1d450:	bne	1d3a4 <main@@Base+0x6e84>
   1d454:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d458:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d45c:	cmp	r0, r1
   1d460:	bne	1d480 <main@@Base+0x6f60>
   1d464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d468:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d46c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d470:	movw	r3, #23
   1d474:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1d478:	str	r0, [fp, #-20]	; 0xffffffec
   1d47c:	b	1d50c <main@@Base+0x6fec>
   1d480:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d484:	mov	r1, r0
   1d488:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d48c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d490:	ldr	ip, [sp, #36]	; 0x24
   1d494:	ldr	lr, [sp, #40]	; 0x28
   1d498:	ldr	r4, [sp, #44]	; 0x2c
   1d49c:	mov	r5, sp
   1d4a0:	sub	r6, fp, #45	; 0x2d
   1d4a4:	str	r6, [r5, #8]
   1d4a8:	str	r4, [r5, #4]
   1d4ac:	str	lr, [r5]
   1d4b0:	str	r0, [sp, #16]
   1d4b4:	mov	r0, r2
   1d4b8:	str	r1, [sp, #12]
   1d4bc:	mov	r1, r3
   1d4c0:	ldr	r2, [sp, #16]
   1d4c4:	mov	r3, ip
   1d4c8:	bl	22400 <main@@Base+0xbee0>
   1d4cc:	ldr	r1, [sp, #12]
   1d4d0:	cmp	r1, r0
   1d4d4:	bne	1d4e4 <main@@Base+0x6fc4>
   1d4d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d4dc:	str	r0, [fp, #-20]	; 0xffffffec
   1d4e0:	b	1d50c <main@@Base+0x6fec>
   1d4e4:	ldrsb	r0, [fp, #-45]	; 0xffffffd3
   1d4e8:	ldr	r1, [fp, #8]
   1d4ec:	ldrsb	r2, [r1]
   1d4f0:	add	r0, r2, r0
   1d4f4:	strb	r0, [r1]
   1d4f8:	ldr	r0, [sp, #32]
   1d4fc:	cmp	r0, #0
   1d500:	bne	1d39c <main@@Base+0x6e7c>
   1d504:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d508:	str	r0, [fp, #-20]	; 0xffffffec
   1d50c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d510:	sub	sp, fp, #16
   1d514:	pop	{r4, r5, r6, sl, fp, pc}
   1d518:	push	{fp, lr}
   1d51c:	mov	fp, sp
   1d520:	sub	sp, sp, #8
   1d524:	str	r0, [sp, #4]
   1d528:	strb	r1, [sp, #3]
   1d52c:	ldrsb	r0, [sp, #3]
   1d530:	bl	22538 <main@@Base+0xc018>
   1d534:	ldr	r1, [sp, #4]
   1d538:	strb	r0, [r1]
   1d53c:	mov	sp, fp
   1d540:	pop	{fp, pc}
   1d544:	push	{fp, lr}
   1d548:	mov	fp, sp
   1d54c:	sub	sp, sp, #24
   1d550:	str	r0, [fp, #-8]
   1d554:	str	r1, [sp, #12]
   1d558:	str	r2, [sp, #8]
   1d55c:	str	r3, [sp, #4]
   1d560:	ldr	r0, [sp, #12]
   1d564:	ldr	r1, [sp, #8]
   1d568:	cmp	r0, r1
   1d56c:	beq	1d580 <main@@Base+0x7060>
   1d570:	ldr	r0, [sp, #12]
   1d574:	ldrb	r0, [r0]
   1d578:	cmp	r0, #91	; 0x5b
   1d57c:	beq	1d5a8 <main@@Base+0x7088>
   1d580:	ldr	r0, [sp, #4]
   1d584:	movw	r1, #0
   1d588:	str	r1, [r0]
   1d58c:	ldr	r0, [fp, #-8]
   1d590:	ldr	r1, [sp, #12]
   1d594:	ldr	r2, [sp, #8]
   1d598:	movw	r3, #22
   1d59c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1d5a0:	str	r0, [fp, #-4]
   1d5a4:	b	1d61c <main@@Base+0x70fc>
   1d5a8:	ldr	r0, [fp, #-8]
   1d5ac:	ldr	r1, [sp, #12]
   1d5b0:	add	r1, r1, #1
   1d5b4:	ldr	r2, [sp, #8]
   1d5b8:	bl	20ec8 <main@@Base+0xa9a8>
   1d5bc:	str	r0, [sp, #12]
   1d5c0:	ldr	r0, [sp, #12]
   1d5c4:	ldr	r1, [sp, #8]
   1d5c8:	cmp	r0, r1
   1d5cc:	beq	1d608 <main@@Base+0x70e8>
   1d5d0:	ldr	r0, [sp, #12]
   1d5d4:	ldrb	r0, [r0]
   1d5d8:	cmp	r0, #93	; 0x5d
   1d5dc:	bne	1d608 <main@@Base+0x70e8>
   1d5e0:	ldr	r0, [sp, #4]
   1d5e4:	movw	r1, #0
   1d5e8:	str	r1, [r0]
   1d5ec:	ldr	r0, [fp, #-8]
   1d5f0:	ldr	r1, [sp, #12]
   1d5f4:	add	r1, r1, #1
   1d5f8:	ldr	r2, [sp, #8]
   1d5fc:	bl	20ec8 <main@@Base+0xa9a8>
   1d600:	str	r0, [fp, #-4]
   1d604:	b	1d61c <main@@Base+0x70fc>
   1d608:	ldr	r0, [sp, #4]
   1d60c:	movw	r1, #1
   1d610:	str	r1, [r0]
   1d614:	ldr	r0, [sp, #12]
   1d618:	str	r0, [fp, #-4]
   1d61c:	ldr	r0, [fp, #-4]
   1d620:	mov	sp, fp
   1d624:	pop	{fp, pc}
   1d628:	push	{r4, r5, fp, lr}
   1d62c:	add	fp, sp, #8
   1d630:	sub	sp, sp, #56	; 0x38
   1d634:	str	r0, [fp, #-16]
   1d638:	str	r1, [fp, #-20]	; 0xffffffec
   1d63c:	str	r2, [fp, #-24]	; 0xffffffe8
   1d640:	str	r3, [fp, #-28]	; 0xffffffe4
   1d644:	mov	r0, #0
   1d648:	str	r0, [sp, #28]
   1d64c:	str	r0, [sp, #24]
   1d650:	movw	r0, #0
   1d654:	str	r0, [sp, #20]
   1d658:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d65c:	str	r0, [sp, #16]
   1d660:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d664:	movw	r1, #0
   1d668:	strb	r1, [r0]
   1d66c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d670:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d674:	cmp	r0, r1
   1d678:	bne	1d688 <main@@Base+0x7168>
   1d67c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d680:	str	r0, [fp, #-12]
   1d684:	b	1d6f8 <main@@Base+0x71d8>
   1d688:	ldr	r0, [fp, #-16]
   1d68c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d690:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d694:	add	r3, sp, #20
   1d698:	add	ip, sp, #24
   1d69c:	str	ip, [sp]
   1d6a0:	bl	35a5c <flatcc_json_parser_integer@@Base>
   1d6a4:	str	r0, [fp, #-20]	; 0xffffffec
   1d6a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d6ac:	ldr	r1, [sp, #16]
   1d6b0:	cmp	r0, r1
   1d6b4:	beq	1d6f0 <main@@Base+0x71d0>
   1d6b8:	ldr	r0, [fp, #-16]
   1d6bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d6c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d6c4:	ldr	r3, [sp, #20]
   1d6c8:	ldr	ip, [sp, #24]
   1d6cc:	ldr	lr, [sp, #28]
   1d6d0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1d6d4:	mov	r5, sp
   1d6d8:	str	r4, [r5, #8]
   1d6dc:	str	lr, [r5, #4]
   1d6e0:	str	ip, [r5]
   1d6e4:	bl	2254c <main@@Base+0xc02c>
   1d6e8:	str	r0, [fp, #-12]
   1d6ec:	b	1d6f8 <main@@Base+0x71d8>
   1d6f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d6f4:	str	r0, [fp, #-12]
   1d6f8:	ldr	r0, [fp, #-12]
   1d6fc:	sub	sp, fp, #8
   1d700:	pop	{r4, r5, fp, pc}
   1d704:	push	{r4, r5, r6, sl, fp, lr}
   1d708:	add	fp, sp, #16
   1d70c:	sub	sp, sp, #80	; 0x50
   1d710:	ldr	ip, [fp, #8]
   1d714:	str	r0, [fp, #-24]	; 0xffffffe8
   1d718:	str	r1, [fp, #-28]	; 0xffffffe4
   1d71c:	str	r2, [fp, #-32]	; 0xffffffe0
   1d720:	str	r3, [fp, #-36]	; 0xffffffdc
   1d724:	movw	r0, #0
   1d728:	strb	r0, [fp, #-45]	; 0xffffffd3
   1d72c:	ldr	r1, [fp, #8]
   1d730:	strb	r0, [r1]
   1d734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d738:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d73c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d740:	str	ip, [sp, #28]
   1d744:	bl	224ec <main@@Base+0xbfcc>
   1d748:	str	r0, [fp, #-28]	; 0xffffffe4
   1d74c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d750:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d754:	cmp	r0, r1
   1d758:	bne	1d768 <main@@Base+0x7248>
   1d75c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d760:	str	r0, [fp, #-20]	; 0xffffffec
   1d764:	b	1d8dc <main@@Base+0x73bc>
   1d768:	b	1d76c <main@@Base+0x724c>
   1d76c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d770:	str	r0, [fp, #-40]	; 0xffffffd8
   1d774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d778:	ldr	r0, [r0]
   1d77c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d780:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d784:	str	r2, [fp, #-44]	; 0xffffffd4
   1d788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d78c:	str	r0, [sp, #24]
   1d790:	mov	r0, r1
   1d794:	mov	r1, r2
   1d798:	mov	r2, r3
   1d79c:	add	r3, sp, #36	; 0x24
   1d7a0:	add	ip, sp, #40	; 0x28
   1d7a4:	str	ip, [sp]
   1d7a8:	add	ip, sp, #32
   1d7ac:	str	ip, [sp, #4]
   1d7b0:	ldr	ip, [sp, #24]
   1d7b4:	blx	ip
   1d7b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d7bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d7c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d7c4:	cmp	r0, r1
   1d7c8:	bne	1d7d8 <main@@Base+0x72b8>
   1d7cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d7d0:	str	r0, [fp, #-20]	; 0xffffffec
   1d7d4:	b	1d8dc <main@@Base+0x73bc>
   1d7d8:	b	1d7dc <main@@Base+0x72bc>
   1d7dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d7e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d7e4:	cmp	r0, r1
   1d7e8:	movw	r0, #0
   1d7ec:	str	r0, [sp, #20]
   1d7f0:	bne	1d818 <main@@Base+0x72f8>
   1d7f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d7f8:	add	r1, r0, #4
   1d7fc:	str	r1, [fp, #-40]	; 0xffffffd8
   1d800:	ldr	r0, [r0, #4]
   1d804:	movw	r1, #0
   1d808:	cmp	r0, r1
   1d80c:	movw	r0, #0
   1d810:	movne	r0, #1
   1d814:	str	r0, [sp, #20]
   1d818:	ldr	r0, [sp, #20]
   1d81c:	tst	r0, #1
   1d820:	bne	1d774 <main@@Base+0x7254>
   1d824:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d828:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d82c:	cmp	r0, r1
   1d830:	bne	1d850 <main@@Base+0x7330>
   1d834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d838:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d83c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d840:	movw	r3, #23
   1d844:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1d848:	str	r0, [fp, #-20]	; 0xffffffec
   1d84c:	b	1d8dc <main@@Base+0x73bc>
   1d850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d854:	mov	r1, r0
   1d858:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d85c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d860:	ldr	ip, [sp, #36]	; 0x24
   1d864:	ldr	lr, [sp, #40]	; 0x28
   1d868:	ldr	r4, [sp, #44]	; 0x2c
   1d86c:	mov	r5, sp
   1d870:	sub	r6, fp, #45	; 0x2d
   1d874:	str	r6, [r5, #8]
   1d878:	str	r4, [r5, #4]
   1d87c:	str	lr, [r5]
   1d880:	str	r0, [sp, #16]
   1d884:	mov	r0, r2
   1d888:	str	r1, [sp, #12]
   1d88c:	mov	r1, r3
   1d890:	ldr	r2, [sp, #16]
   1d894:	mov	r3, ip
   1d898:	bl	2254c <main@@Base+0xc02c>
   1d89c:	ldr	r1, [sp, #12]
   1d8a0:	cmp	r1, r0
   1d8a4:	bne	1d8b4 <main@@Base+0x7394>
   1d8a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d8ac:	str	r0, [fp, #-20]	; 0xffffffec
   1d8b0:	b	1d8dc <main@@Base+0x73bc>
   1d8b4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1d8b8:	ldr	r1, [fp, #8]
   1d8bc:	ldrb	r2, [r1]
   1d8c0:	add	r0, r2, r0
   1d8c4:	strb	r0, [r1]
   1d8c8:	ldr	r0, [sp, #32]
   1d8cc:	cmp	r0, #0
   1d8d0:	bne	1d76c <main@@Base+0x724c>
   1d8d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d8d8:	str	r0, [fp, #-20]	; 0xffffffec
   1d8dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d8e0:	sub	sp, fp, #16
   1d8e4:	pop	{r4, r5, r6, sl, fp, pc}
   1d8e8:	push	{fp, lr}
   1d8ec:	mov	fp, sp
   1d8f0:	sub	sp, sp, #8
   1d8f4:	str	r0, [sp, #4]
   1d8f8:	strb	r1, [sp, #3]
   1d8fc:	ldrb	r0, [sp, #3]
   1d900:	bl	22604 <main@@Base+0xc0e4>
   1d904:	ldr	r1, [sp, #4]
   1d908:	strb	r0, [r1]
   1d90c:	mov	sp, fp
   1d910:	pop	{fp, pc}
   1d914:	push	{fp, lr}
   1d918:	mov	fp, sp
   1d91c:	sub	sp, sp, #24
   1d920:	str	r0, [fp, #-8]
   1d924:	str	r1, [sp, #12]
   1d928:	str	r2, [sp, #8]
   1d92c:	str	r3, [sp, #4]
   1d930:	ldr	r0, [fp, #-8]
   1d934:	ldr	r1, [sp, #12]
   1d938:	ldr	r2, [sp, #8]
   1d93c:	bl	20ec8 <main@@Base+0xa9a8>
   1d940:	str	r0, [sp, #12]
   1d944:	ldr	r0, [sp, #12]
   1d948:	ldr	r1, [sp, #8]
   1d94c:	cmp	r0, r1
   1d950:	bne	1d96c <main@@Base+0x744c>
   1d954:	ldr	r0, [sp, #4]
   1d958:	movw	r1, #0
   1d95c:	str	r1, [r0]
   1d960:	ldr	r0, [sp, #12]
   1d964:	str	r0, [fp, #-4]
   1d968:	b	1da6c <main@@Base+0x754c>
   1d96c:	ldr	r0, [sp, #12]
   1d970:	ldrb	r0, [r0]
   1d974:	cmp	r0, #44	; 0x2c
   1d978:	beq	1d9d0 <main@@Base+0x74b0>
   1d97c:	ldr	r0, [sp, #4]
   1d980:	movw	r1, #0
   1d984:	str	r1, [r0]
   1d988:	ldr	r0, [sp, #12]
   1d98c:	ldrb	r0, [r0]
   1d990:	cmp	r0, #93	; 0x5d
   1d994:	beq	1d9b4 <main@@Base+0x7494>
   1d998:	ldr	r0, [fp, #-8]
   1d99c:	ldr	r1, [sp, #12]
   1d9a0:	ldr	r2, [sp, #8]
   1d9a4:	movw	r3, #9
   1d9a8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1d9ac:	str	r0, [fp, #-4]
   1d9b0:	b	1da6c <main@@Base+0x754c>
   1d9b4:	ldr	r0, [fp, #-8]
   1d9b8:	ldr	r1, [sp, #12]
   1d9bc:	add	r1, r1, #1
   1d9c0:	ldr	r2, [sp, #8]
   1d9c4:	bl	20ec8 <main@@Base+0xa9a8>
   1d9c8:	str	r0, [fp, #-4]
   1d9cc:	b	1da6c <main@@Base+0x754c>
   1d9d0:	ldr	r0, [fp, #-8]
   1d9d4:	ldr	r1, [sp, #12]
   1d9d8:	add	r1, r1, #1
   1d9dc:	ldr	r2, [sp, #8]
   1d9e0:	bl	20ec8 <main@@Base+0xa9a8>
   1d9e4:	str	r0, [sp, #12]
   1d9e8:	ldr	r0, [sp, #12]
   1d9ec:	ldr	r1, [sp, #8]
   1d9f0:	cmp	r0, r1
   1d9f4:	bne	1da20 <main@@Base+0x7500>
   1d9f8:	ldr	r0, [sp, #4]
   1d9fc:	movw	r1, #0
   1da00:	str	r1, [r0]
   1da04:	ldr	r0, [fp, #-8]
   1da08:	ldr	r1, [sp, #12]
   1da0c:	ldr	r2, [sp, #8]
   1da10:	movw	r3, #9
   1da14:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1da18:	str	r0, [fp, #-4]
   1da1c:	b	1da6c <main@@Base+0x754c>
   1da20:	ldr	r0, [sp, #12]
   1da24:	ldrb	r0, [r0]
   1da28:	cmp	r0, #93	; 0x5d
   1da2c:	bne	1da58 <main@@Base+0x7538>
   1da30:	ldr	r0, [sp, #4]
   1da34:	movw	r1, #0
   1da38:	str	r1, [r0]
   1da3c:	ldr	r0, [fp, #-8]
   1da40:	ldr	r1, [sp, #12]
   1da44:	add	r1, r1, #1
   1da48:	ldr	r2, [sp, #8]
   1da4c:	bl	20ec8 <main@@Base+0xa9a8>
   1da50:	str	r0, [fp, #-4]
   1da54:	b	1da6c <main@@Base+0x754c>
   1da58:	ldr	r0, [sp, #4]
   1da5c:	movw	r1, #1
   1da60:	str	r1, [r0]
   1da64:	ldr	r0, [sp, #12]
   1da68:	str	r0, [fp, #-4]
   1da6c:	ldr	r0, [fp, #-4]
   1da70:	mov	sp, fp
   1da74:	pop	{fp, pc}
   1da78:	push	{r4, r5, fp, lr}
   1da7c:	add	fp, sp, #8
   1da80:	sub	sp, sp, #56	; 0x38
   1da84:	str	r0, [fp, #-16]
   1da88:	str	r1, [fp, #-20]	; 0xffffffec
   1da8c:	str	r2, [fp, #-24]	; 0xffffffe8
   1da90:	str	r3, [fp, #-28]	; 0xffffffe4
   1da94:	mov	r0, #0
   1da98:	str	r0, [sp, #28]
   1da9c:	str	r0, [sp, #24]
   1daa0:	movw	r0, #0
   1daa4:	str	r0, [sp, #20]
   1daa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1daac:	str	r0, [sp, #16]
   1dab0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dab4:	movw	r1, #0
   1dab8:	strh	r1, [r0]
   1dabc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dac4:	cmp	r0, r1
   1dac8:	bne	1dad8 <main@@Base+0x75b8>
   1dacc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dad0:	str	r0, [fp, #-12]
   1dad4:	b	1db48 <main@@Base+0x7628>
   1dad8:	ldr	r0, [fp, #-16]
   1dadc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dae0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dae4:	add	r3, sp, #20
   1dae8:	add	ip, sp, #24
   1daec:	str	ip, [sp]
   1daf0:	bl	35a5c <flatcc_json_parser_integer@@Base>
   1daf4:	str	r0, [fp, #-20]	; 0xffffffec
   1daf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dafc:	ldr	r1, [sp, #16]
   1db00:	cmp	r0, r1
   1db04:	beq	1db40 <main@@Base+0x7620>
   1db08:	ldr	r0, [fp, #-16]
   1db0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1db10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1db14:	ldr	r3, [sp, #20]
   1db18:	ldr	ip, [sp, #24]
   1db1c:	ldr	lr, [sp, #28]
   1db20:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1db24:	mov	r5, sp
   1db28:	str	r4, [r5, #8]
   1db2c:	str	lr, [r5, #4]
   1db30:	str	ip, [r5]
   1db34:	bl	22618 <main@@Base+0xc0f8>
   1db38:	str	r0, [fp, #-12]
   1db3c:	b	1db48 <main@@Base+0x7628>
   1db40:	ldr	r0, [fp, #-20]	; 0xffffffec
   1db44:	str	r0, [fp, #-12]
   1db48:	ldr	r0, [fp, #-12]
   1db4c:	sub	sp, fp, #8
   1db50:	pop	{r4, r5, fp, pc}
   1db54:	push	{r4, r5, r6, sl, fp, lr}
   1db58:	add	fp, sp, #16
   1db5c:	sub	sp, sp, #80	; 0x50
   1db60:	ldr	ip, [fp, #8]
   1db64:	str	r0, [fp, #-24]	; 0xffffffe8
   1db68:	str	r1, [fp, #-28]	; 0xffffffe4
   1db6c:	str	r2, [fp, #-32]	; 0xffffffe0
   1db70:	str	r3, [fp, #-36]	; 0xffffffdc
   1db74:	movw	r0, #0
   1db78:	strh	r0, [fp, #-46]	; 0xffffffd2
   1db7c:	ldr	r1, [fp, #8]
   1db80:	strh	r0, [r1]
   1db84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1db8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1db90:	str	ip, [sp, #28]
   1db94:	bl	224ec <main@@Base+0xbfcc>
   1db98:	str	r0, [fp, #-28]	; 0xffffffe4
   1db9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dba0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dba4:	cmp	r0, r1
   1dba8:	bne	1dbb8 <main@@Base+0x7698>
   1dbac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dbb0:	str	r0, [fp, #-20]	; 0xffffffec
   1dbb4:	b	1dd2c <main@@Base+0x780c>
   1dbb8:	b	1dbbc <main@@Base+0x769c>
   1dbbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dbc0:	str	r0, [fp, #-40]	; 0xffffffd8
   1dbc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dbc8:	ldr	r0, [r0]
   1dbcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dbd0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1dbd4:	str	r2, [fp, #-44]	; 0xffffffd4
   1dbd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dbdc:	str	r0, [sp, #24]
   1dbe0:	mov	r0, r1
   1dbe4:	mov	r1, r2
   1dbe8:	mov	r2, r3
   1dbec:	add	r3, sp, #36	; 0x24
   1dbf0:	add	ip, sp, #40	; 0x28
   1dbf4:	str	ip, [sp]
   1dbf8:	add	ip, sp, #32
   1dbfc:	str	ip, [sp, #4]
   1dc00:	ldr	ip, [sp, #24]
   1dc04:	blx	ip
   1dc08:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dc10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dc14:	cmp	r0, r1
   1dc18:	bne	1dc28 <main@@Base+0x7708>
   1dc1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dc20:	str	r0, [fp, #-20]	; 0xffffffec
   1dc24:	b	1dd2c <main@@Base+0x780c>
   1dc28:	b	1dc2c <main@@Base+0x770c>
   1dc2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dc30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1dc34:	cmp	r0, r1
   1dc38:	movw	r0, #0
   1dc3c:	str	r0, [sp, #20]
   1dc40:	bne	1dc68 <main@@Base+0x7748>
   1dc44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dc48:	add	r1, r0, #4
   1dc4c:	str	r1, [fp, #-40]	; 0xffffffd8
   1dc50:	ldr	r0, [r0, #4]
   1dc54:	movw	r1, #0
   1dc58:	cmp	r0, r1
   1dc5c:	movw	r0, #0
   1dc60:	movne	r0, #1
   1dc64:	str	r0, [sp, #20]
   1dc68:	ldr	r0, [sp, #20]
   1dc6c:	tst	r0, #1
   1dc70:	bne	1dbc4 <main@@Base+0x76a4>
   1dc74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dc78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dc7c:	cmp	r0, r1
   1dc80:	bne	1dca0 <main@@Base+0x7780>
   1dc84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dc8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dc90:	movw	r3, #23
   1dc94:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1dc98:	str	r0, [fp, #-20]	; 0xffffffec
   1dc9c:	b	1dd2c <main@@Base+0x780c>
   1dca0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dca4:	mov	r1, r0
   1dca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dcac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dcb0:	ldr	ip, [sp, #36]	; 0x24
   1dcb4:	ldr	lr, [sp, #40]	; 0x28
   1dcb8:	ldr	r4, [sp, #44]	; 0x2c
   1dcbc:	mov	r5, sp
   1dcc0:	sub	r6, fp, #46	; 0x2e
   1dcc4:	str	r6, [r5, #8]
   1dcc8:	str	r4, [r5, #4]
   1dccc:	str	lr, [r5]
   1dcd0:	str	r0, [sp, #16]
   1dcd4:	mov	r0, r2
   1dcd8:	str	r1, [sp, #12]
   1dcdc:	mov	r1, r3
   1dce0:	ldr	r2, [sp, #16]
   1dce4:	mov	r3, ip
   1dce8:	bl	22618 <main@@Base+0xc0f8>
   1dcec:	ldr	r1, [sp, #12]
   1dcf0:	cmp	r1, r0
   1dcf4:	bne	1dd04 <main@@Base+0x77e4>
   1dcf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dcfc:	str	r0, [fp, #-20]	; 0xffffffec
   1dd00:	b	1dd2c <main@@Base+0x780c>
   1dd04:	ldrsh	r0, [fp, #-46]	; 0xffffffd2
   1dd08:	ldr	r1, [fp, #8]
   1dd0c:	ldrsh	r2, [r1]
   1dd10:	add	r0, r2, r0
   1dd14:	strh	r0, [r1]
   1dd18:	ldr	r0, [sp, #32]
   1dd1c:	cmp	r0, #0
   1dd20:	bne	1dbbc <main@@Base+0x769c>
   1dd24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dd28:	str	r0, [fp, #-20]	; 0xffffffec
   1dd2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dd30:	sub	sp, fp, #16
   1dd34:	pop	{r4, r5, r6, sl, fp, pc}
   1dd38:	push	{fp, lr}
   1dd3c:	mov	fp, sp
   1dd40:	sub	sp, sp, #8
   1dd44:	str	r0, [sp, #4]
   1dd48:	strh	r1, [sp, #2]
   1dd4c:	ldrsh	r0, [sp, #2]
   1dd50:	bl	22708 <main@@Base+0xc1e8>
   1dd54:	ldr	r1, [sp, #4]
   1dd58:	strh	r0, [r1]
   1dd5c:	mov	sp, fp
   1dd60:	pop	{fp, pc}
   1dd64:	push	{fp, lr}
   1dd68:	mov	fp, sp
   1dd6c:	sub	sp, sp, #24
   1dd70:	str	r0, [fp, #-8]
   1dd74:	str	r1, [sp, #12]
   1dd78:	str	r2, [sp, #8]
   1dd7c:	str	r3, [sp, #4]
   1dd80:	ldr	r0, [sp, #4]
   1dd84:	movw	r1, #0
   1dd88:	str	r1, [r0]
   1dd8c:	ldr	r0, [fp, #-8]
   1dd90:	ldr	r0, [r0]
   1dd94:	bl	2baec <flatcc_builder_start_table@@Base>
   1dd98:	cmp	r0, #0
   1dd9c:	beq	1dda4 <main@@Base+0x7884>
   1dda0:	b	1de4c <main@@Base+0x792c>
   1dda4:	ldr	r0, [fp, #-8]
   1dda8:	ldr	r1, [sp, #12]
   1ddac:	ldr	r2, [sp, #8]
   1ddb0:	mov	r3, sp
   1ddb4:	bl	1bba8 <main@@Base+0x5688>
   1ddb8:	str	r0, [sp, #12]
   1ddbc:	ldr	r0, [sp]
   1ddc0:	cmp	r0, #0
   1ddc4:	beq	1de0c <main@@Base+0x78ec>
   1ddc8:	ldr	r0, [fp, #-8]
   1ddcc:	ldr	r1, [sp, #12]
   1ddd0:	ldr	r2, [sp, #8]
   1ddd4:	bl	1bc8c <main@@Base+0x576c>
   1ddd8:	str	r0, [sp, #12]
   1dddc:	ldr	r0, [fp, #-8]
   1dde0:	ldr	r1, [sp, #12]
   1dde4:	ldr	r2, [sp, #8]
   1dde8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ddec:	str	r0, [sp, #12]
   1ddf0:	ldr	r0, [fp, #-8]
   1ddf4:	ldr	r1, [sp, #12]
   1ddf8:	ldr	r2, [sp, #8]
   1ddfc:	mov	r3, sp
   1de00:	bl	20d64 <main@@Base+0xa844>
   1de04:	str	r0, [sp, #12]
   1de08:	b	1ddbc <main@@Base+0x789c>
   1de0c:	ldr	r0, [fp, #-8]
   1de10:	ldr	r0, [r0, #20]
   1de14:	cmp	r0, #0
   1de18:	beq	1de20 <main@@Base+0x7900>
   1de1c:	b	1de4c <main@@Base+0x792c>
   1de20:	ldr	r0, [fp, #-8]
   1de24:	ldr	r0, [r0]
   1de28:	bl	2c764 <flatcc_builder_end_table@@Base>
   1de2c:	ldr	lr, [sp, #4]
   1de30:	str	r0, [lr]
   1de34:	cmp	r0, #0
   1de38:	bne	1de40 <main@@Base+0x7920>
   1de3c:	b	1de4c <main@@Base+0x792c>
   1de40:	ldr	r0, [sp, #12]
   1de44:	str	r0, [fp, #-4]
   1de48:	b	1de64 <main@@Base+0x7944>
   1de4c:	ldr	r0, [fp, #-8]
   1de50:	ldr	r1, [sp, #12]
   1de54:	ldr	r2, [sp, #8]
   1de58:	movw	r3, #33	; 0x21
   1de5c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1de60:	str	r0, [fp, #-4]
   1de64:	ldr	r0, [fp, #-4]
   1de68:	mov	sp, fp
   1de6c:	pop	{fp, pc}
   1de70:	push	{fp, lr}
   1de74:	mov	fp, sp
   1de78:	sub	sp, sp, #88	; 0x58
   1de7c:	str	r0, [fp, #-8]
   1de80:	str	r1, [fp, #-12]
   1de84:	str	r2, [fp, #-16]
   1de88:	str	r3, [fp, #-20]	; 0xffffffec
   1de8c:	ldr	r0, [fp, #-8]
   1de90:	ldr	r1, [fp, #-12]
   1de94:	ldr	r2, [fp, #-16]
   1de98:	sub	r3, fp, #24
   1de9c:	bl	1bba8 <main@@Base+0x5688>
   1dea0:	str	r0, [fp, #-12]
   1dea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dea8:	cmp	r0, #0
   1deac:	beq	1e55c <main@@Base+0x803c>
   1deb0:	ldr	r0, [fp, #-8]
   1deb4:	ldr	r1, [fp, #-12]
   1deb8:	ldr	r2, [fp, #-16]
   1debc:	bl	1bc8c <main@@Base+0x576c>
   1dec0:	str	r0, [fp, #-12]
   1dec4:	ldr	r0, [fp, #-12]
   1dec8:	ldr	r1, [fp, #-16]
   1decc:	bl	1bd10 <main@@Base+0x57f0>
   1ded0:	str	r1, [sp, #44]	; 0x2c
   1ded4:	str	r0, [sp, #40]	; 0x28
   1ded8:	ldr	r0, [sp, #40]	; 0x28
   1dedc:	ldr	r1, [sp, #44]	; 0x2c
   1dee0:	mvn	r2, #-855638016	; 0xcd000000
   1dee4:	subs	r0, r2, r0
   1dee8:	movw	r2, #29556	; 0x7374
   1deec:	movt	r2, #29797	; 0x7465
   1def0:	sbcs	r1, r2, r1
   1def4:	str	r0, [sp, #8]
   1def8:	str	r1, [sp, #4]
   1defc:	bcc	1e140 <main@@Base+0x7c20>
   1df00:	b	1df04 <main@@Base+0x79e4>
   1df04:	ldr	r0, [sp, #40]	; 0x28
   1df08:	ldr	r1, [sp, #44]	; 0x2c
   1df0c:	and	r0, r0, #-16777216	; 0xff000000
   1df10:	movw	r2, #29556	; 0x7374
   1df14:	movt	r2, #29797	; 0x7465
   1df18:	eor	r1, r1, r2
   1df1c:	eor	r0, r0, #838860800	; 0x32000000
   1df20:	orr	r0, r0, r1
   1df24:	cmp	r0, #0
   1df28:	bne	1e014 <main@@Base+0x7af4>
   1df2c:	b	1df30 <main@@Base+0x7a10>
   1df30:	ldr	r0, [fp, #-8]
   1df34:	ldr	r1, [fp, #-12]
   1df38:	str	r1, [fp, #-36]	; 0xffffffdc
   1df3c:	ldr	r2, [fp, #-16]
   1df40:	movw	r3, #5
   1df44:	bl	1bd48 <main@@Base+0x5828>
   1df48:	str	r0, [fp, #-12]
   1df4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1df50:	ldr	r1, [fp, #-12]
   1df54:	cmp	r0, r1
   1df58:	beq	1dffc <main@@Base+0x7adc>
   1df5c:	movw	r0, #0
   1df60:	strb	r0, [sp, #39]	; 0x27
   1df64:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df68:	add	r0, r0, #24
   1df6c:	str	r0, [fp, #-32]	; 0xffffffe0
   1df70:	ldr	r0, [fp, #-8]
   1df74:	ldr	r1, [fp, #-12]
   1df78:	str	r1, [fp, #-36]	; 0xffffffdc
   1df7c:	ldr	r2, [fp, #-16]
   1df80:	add	r3, sp, #39	; 0x27
   1df84:	bl	1d258 <main@@Base+0x6d38>
   1df88:	str	r0, [fp, #-12]
   1df8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1df90:	ldr	r1, [fp, #-12]
   1df94:	cmp	r0, r1
   1df98:	bne	1dfec <main@@Base+0x7acc>
   1df9c:	ldr	r0, [pc, #1532]	; 1e5a0 <main@@Base+0x8080>
   1dfa0:	add	r3, pc, r0
   1dfa4:	ldr	r0, [fp, #-8]
   1dfa8:	ldr	r1, [fp, #-12]
   1dfac:	str	r1, [fp, #-36]	; 0xffffffdc
   1dfb0:	ldr	r2, [fp, #-16]
   1dfb4:	add	ip, sp, #39	; 0x27
   1dfb8:	str	ip, [sp]
   1dfbc:	bl	1d334 <main@@Base+0x6e14>
   1dfc0:	str	r0, [fp, #-12]
   1dfc4:	ldr	r0, [fp, #-12]
   1dfc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dfcc:	cmp	r0, r1
   1dfd0:	beq	1dfe4 <main@@Base+0x7ac4>
   1dfd4:	ldr	r0, [fp, #-12]
   1dfd8:	ldr	r1, [fp, #-16]
   1dfdc:	cmp	r0, r1
   1dfe0:	bne	1dfe8 <main@@Base+0x7ac8>
   1dfe4:	b	1e568 <main@@Base+0x8048>
   1dfe8:	b	1dfec <main@@Base+0x7acc>
   1dfec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dff0:	ldrsb	r1, [sp, #39]	; 0x27
   1dff4:	bl	1d518 <main@@Base+0x6ff8>
   1dff8:	b	1e010 <main@@Base+0x7af0>
   1dffc:	ldr	r0, [fp, #-8]
   1e000:	ldr	r1, [fp, #-12]
   1e004:	ldr	r2, [fp, #-16]
   1e008:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e00c:	str	r0, [fp, #-12]
   1e010:	b	1e13c <main@@Base+0x7c1c>
   1e014:	ldr	r0, [sp, #40]	; 0x28
   1e018:	ldr	r1, [sp, #44]	; 0x2c
   1e01c:	and	r0, r0, #-16777216	; 0xff000000
   1e020:	movw	r2, #29556	; 0x7374
   1e024:	movt	r2, #29797	; 0x7465
   1e028:	eor	r1, r1, r2
   1e02c:	eor	r0, r0, #822083584	; 0x31000000
   1e030:	orr	r0, r0, r1
   1e034:	cmp	r0, #0
   1e038:	bne	1e124 <main@@Base+0x7c04>
   1e03c:	b	1e040 <main@@Base+0x7b20>
   1e040:	ldr	r0, [fp, #-8]
   1e044:	ldr	r1, [fp, #-12]
   1e048:	str	r1, [fp, #-36]	; 0xffffffdc
   1e04c:	ldr	r2, [fp, #-16]
   1e050:	movw	r3, #5
   1e054:	bl	1bd48 <main@@Base+0x5828>
   1e058:	str	r0, [fp, #-12]
   1e05c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e060:	ldr	r1, [fp, #-12]
   1e064:	cmp	r0, r1
   1e068:	beq	1e10c <main@@Base+0x7bec>
   1e06c:	vldr	d16, [pc, #956]	; 1e430 <main@@Base+0x7f10>
   1e070:	vstr	d16, [sp, #24]
   1e074:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e078:	add	r0, r0, #16
   1e07c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e080:	ldr	r0, [fp, #-8]
   1e084:	ldr	r1, [fp, #-12]
   1e088:	str	r1, [fp, #-36]	; 0xffffffdc
   1e08c:	ldr	r2, [fp, #-16]
   1e090:	add	r3, sp, #24
   1e094:	bl	34c40 <flatcc_json_parser_double@@Base>
   1e098:	str	r0, [fp, #-12]
   1e09c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e0a0:	ldr	r1, [fp, #-12]
   1e0a4:	cmp	r0, r1
   1e0a8:	bne	1e0fc <main@@Base+0x7bdc>
   1e0ac:	ldr	r0, [pc, #1256]	; 1e59c <main@@Base+0x807c>
   1e0b0:	add	r3, pc, r0
   1e0b4:	ldr	r0, [fp, #-8]
   1e0b8:	ldr	r1, [fp, #-12]
   1e0bc:	str	r1, [fp, #-36]	; 0xffffffdc
   1e0c0:	ldr	r2, [fp, #-16]
   1e0c4:	add	ip, sp, #24
   1e0c8:	str	ip, [sp]
   1e0cc:	bl	20b48 <main@@Base+0xa628>
   1e0d0:	str	r0, [fp, #-12]
   1e0d4:	ldr	r0, [fp, #-12]
   1e0d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e0dc:	cmp	r0, r1
   1e0e0:	beq	1e0f4 <main@@Base+0x7bd4>
   1e0e4:	ldr	r0, [fp, #-12]
   1e0e8:	ldr	r1, [fp, #-16]
   1e0ec:	cmp	r0, r1
   1e0f0:	bne	1e0f8 <main@@Base+0x7bd8>
   1e0f4:	b	1e568 <main@@Base+0x8048>
   1e0f8:	b	1e0fc <main@@Base+0x7bdc>
   1e0fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e100:	vldr	d0, [sp, #24]
   1e104:	bl	20d38 <main@@Base+0xa818>
   1e108:	b	1e120 <main@@Base+0x7c00>
   1e10c:	ldr	r0, [fp, #-8]
   1e110:	ldr	r1, [fp, #-12]
   1e114:	ldr	r2, [fp, #-16]
   1e118:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e11c:	str	r0, [fp, #-12]
   1e120:	b	1e138 <main@@Base+0x7c18>
   1e124:	ldr	r0, [fp, #-8]
   1e128:	ldr	r1, [fp, #-12]
   1e12c:	ldr	r2, [fp, #-16]
   1e130:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e134:	str	r0, [fp, #-12]
   1e138:	b	1e13c <main@@Base+0x7c1c>
   1e13c:	b	1e540 <main@@Base+0x8020>
   1e140:	ldr	r0, [sp, #44]	; 0x2c
   1e144:	cmn	r0, #-2013265919	; 0x88000001
   1e148:	bhi	1e200 <main@@Base+0x7ce0>
   1e14c:	b	1e150 <main@@Base+0x7c30>
   1e150:	ldr	r0, [sp, #40]	; 0x28
   1e154:	ldr	r1, [sp, #44]	; 0x2c
   1e158:	and	r0, r0, #-16777216	; 0xff000000
   1e15c:	movw	r2, #29556	; 0x7374
   1e160:	movt	r2, #29797	; 0x7465
   1e164:	eor	r1, r1, r2
   1e168:	eor	r0, r0, #855638016	; 0x33000000
   1e16c:	orr	r0, r0, r1
   1e170:	cmp	r0, #0
   1e174:	bne	1e1e8 <main@@Base+0x7cc8>
   1e178:	b	1e17c <main@@Base+0x7c5c>
   1e17c:	ldr	r0, [fp, #-8]
   1e180:	ldr	r1, [fp, #-12]
   1e184:	str	r1, [fp, #-36]	; 0xffffffdc
   1e188:	ldr	r2, [fp, #-16]
   1e18c:	movw	r3, #5
   1e190:	bl	1bd48 <main@@Base+0x5828>
   1e194:	str	r0, [fp, #-12]
   1e198:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e19c:	ldr	r1, [fp, #-12]
   1e1a0:	cmp	r0, r1
   1e1a4:	beq	1e1d0 <main@@Base+0x7cb0>
   1e1a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e1ac:	add	r0, r0, #26
   1e1b0:	str	r0, [fp, #-32]	; 0xffffffe0
   1e1b4:	ldr	r0, [fp, #-8]
   1e1b8:	ldr	r1, [fp, #-12]
   1e1bc:	ldr	r2, [fp, #-16]
   1e1c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e1c4:	bl	1e5a4 <main@@Base+0x8084>
   1e1c8:	str	r0, [fp, #-12]
   1e1cc:	b	1e1e4 <main@@Base+0x7cc4>
   1e1d0:	ldr	r0, [fp, #-8]
   1e1d4:	ldr	r1, [fp, #-12]
   1e1d8:	ldr	r2, [fp, #-16]
   1e1dc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e1e0:	str	r0, [fp, #-12]
   1e1e4:	b	1e1fc <main@@Base+0x7cdc>
   1e1e8:	ldr	r0, [fp, #-8]
   1e1ec:	ldr	r1, [fp, #-12]
   1e1f0:	ldr	r2, [fp, #-16]
   1e1f4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e1f8:	str	r0, [fp, #-12]
   1e1fc:	b	1e53c <main@@Base+0x801c>
   1e200:	ldrb	r0, [sp, #47]	; 0x2f
   1e204:	cmp	r0, #120	; 0x78
   1e208:	bhi	1e320 <main@@Base+0x7e00>
   1e20c:	b	1e210 <main@@Base+0x7cf0>
   1e210:	ldr	r0, [sp, #44]	; 0x2c
   1e214:	and	r0, r0, #-16777216	; 0xff000000
   1e218:	teq	r0, #2013265920	; 0x78000000
   1e21c:	bne	1e308 <main@@Base+0x7de8>
   1e220:	b	1e224 <main@@Base+0x7d04>
   1e224:	ldr	r0, [fp, #-8]
   1e228:	ldr	r1, [fp, #-12]
   1e22c:	str	r1, [fp, #-36]	; 0xffffffdc
   1e230:	ldr	r2, [fp, #-16]
   1e234:	movw	r3, #1
   1e238:	bl	1bd48 <main@@Base+0x5828>
   1e23c:	str	r0, [fp, #-12]
   1e240:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e244:	ldr	r1, [fp, #-12]
   1e248:	cmp	r0, r1
   1e24c:	beq	1e2f0 <main@@Base+0x7dd0>
   1e250:	vldr	s0, [pc, #820]	; 1e58c <main@@Base+0x806c>
   1e254:	vstr	s0, [sp, #20]
   1e258:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e25c:	add	r0, r0, #0
   1e260:	str	r0, [fp, #-32]	; 0xffffffe0
   1e264:	ldr	r0, [fp, #-8]
   1e268:	ldr	r1, [fp, #-12]
   1e26c:	str	r1, [fp, #-36]	; 0xffffffdc
   1e270:	ldr	r2, [fp, #-16]
   1e274:	add	r3, sp, #20
   1e278:	bl	34e00 <flatcc_json_parser_float@@Base>
   1e27c:	str	r0, [fp, #-12]
   1e280:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e284:	ldr	r1, [fp, #-12]
   1e288:	cmp	r0, r1
   1e28c:	bne	1e2e0 <main@@Base+0x7dc0>
   1e290:	ldr	r0, [pc, #768]	; 1e598 <main@@Base+0x8078>
   1e294:	add	r3, pc, r0
   1e298:	ldr	r0, [fp, #-8]
   1e29c:	ldr	r1, [fp, #-12]
   1e2a0:	str	r1, [fp, #-36]	; 0xffffffdc
   1e2a4:	ldr	r2, [fp, #-16]
   1e2a8:	add	ip, sp, #20
   1e2ac:	str	ip, [sp]
   1e2b0:	bl	1fd4c <main@@Base+0x982c>
   1e2b4:	str	r0, [fp, #-12]
   1e2b8:	ldr	r0, [fp, #-12]
   1e2bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e2c0:	cmp	r0, r1
   1e2c4:	beq	1e2d8 <main@@Base+0x7db8>
   1e2c8:	ldr	r0, [fp, #-12]
   1e2cc:	ldr	r1, [fp, #-16]
   1e2d0:	cmp	r0, r1
   1e2d4:	bne	1e2dc <main@@Base+0x7dbc>
   1e2d8:	b	1e568 <main@@Base+0x8048>
   1e2dc:	b	1e2e0 <main@@Base+0x7dc0>
   1e2e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e2e4:	vldr	s0, [sp, #20]
   1e2e8:	bl	1ff34 <main@@Base+0x9a14>
   1e2ec:	b	1e304 <main@@Base+0x7de4>
   1e2f0:	ldr	r0, [fp, #-8]
   1e2f4:	ldr	r1, [fp, #-12]
   1e2f8:	ldr	r2, [fp, #-16]
   1e2fc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e300:	str	r0, [fp, #-12]
   1e304:	b	1e31c <main@@Base+0x7dfc>
   1e308:	ldr	r0, [fp, #-8]
   1e30c:	ldr	r1, [fp, #-12]
   1e310:	ldr	r2, [fp, #-16]
   1e314:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e318:	str	r0, [fp, #-12]
   1e31c:	b	1e538 <main@@Base+0x8018>
   1e320:	ldr	r0, [sp, #44]	; 0x2c
   1e324:	and	r0, r0, #-16777216	; 0xff000000
   1e328:	teq	r0, #2046820352	; 0x7a000000
   1e32c:	bne	1e418 <main@@Base+0x7ef8>
   1e330:	b	1e334 <main@@Base+0x7e14>
   1e334:	ldr	r0, [fp, #-8]
   1e338:	ldr	r1, [fp, #-12]
   1e33c:	str	r1, [fp, #-36]	; 0xffffffdc
   1e340:	ldr	r2, [fp, #-16]
   1e344:	movw	r3, #1
   1e348:	bl	1bd48 <main@@Base+0x5828>
   1e34c:	str	r0, [fp, #-12]
   1e350:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e354:	ldr	r1, [fp, #-12]
   1e358:	cmp	r0, r1
   1e35c:	beq	1e400 <main@@Base+0x7ee0>
   1e360:	vldr	s0, [pc, #548]	; 1e58c <main@@Base+0x806c>
   1e364:	vstr	s0, [sp, #16]
   1e368:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e36c:	add	r0, r0, #8
   1e370:	str	r0, [fp, #-32]	; 0xffffffe0
   1e374:	ldr	r0, [fp, #-8]
   1e378:	ldr	r1, [fp, #-12]
   1e37c:	str	r1, [fp, #-36]	; 0xffffffdc
   1e380:	ldr	r2, [fp, #-16]
   1e384:	add	r3, sp, #16
   1e388:	bl	34e00 <flatcc_json_parser_float@@Base>
   1e38c:	str	r0, [fp, #-12]
   1e390:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e394:	ldr	r1, [fp, #-12]
   1e398:	cmp	r0, r1
   1e39c:	bne	1e3f0 <main@@Base+0x7ed0>
   1e3a0:	ldr	r0, [pc, #492]	; 1e594 <main@@Base+0x8074>
   1e3a4:	add	r3, pc, r0
   1e3a8:	ldr	r0, [fp, #-8]
   1e3ac:	ldr	r1, [fp, #-12]
   1e3b0:	str	r1, [fp, #-36]	; 0xffffffdc
   1e3b4:	ldr	r2, [fp, #-16]
   1e3b8:	add	ip, sp, #16
   1e3bc:	str	ip, [sp]
   1e3c0:	bl	1fd4c <main@@Base+0x982c>
   1e3c4:	str	r0, [fp, #-12]
   1e3c8:	ldr	r0, [fp, #-12]
   1e3cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e3d0:	cmp	r0, r1
   1e3d4:	beq	1e3e8 <main@@Base+0x7ec8>
   1e3d8:	ldr	r0, [fp, #-12]
   1e3dc:	ldr	r1, [fp, #-16]
   1e3e0:	cmp	r0, r1
   1e3e4:	bne	1e3ec <main@@Base+0x7ecc>
   1e3e8:	b	1e568 <main@@Base+0x8048>
   1e3ec:	b	1e3f0 <main@@Base+0x7ed0>
   1e3f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e3f4:	vldr	s0, [sp, #16]
   1e3f8:	bl	1ff34 <main@@Base+0x9a14>
   1e3fc:	b	1e414 <main@@Base+0x7ef4>
   1e400:	ldr	r0, [fp, #-8]
   1e404:	ldr	r1, [fp, #-12]
   1e408:	ldr	r2, [fp, #-16]
   1e40c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e410:	str	r0, [fp, #-12]
   1e414:	b	1e534 <main@@Base+0x8014>
   1e418:	ldr	r0, [sp, #44]	; 0x2c
   1e41c:	and	r0, r0, #-16777216	; 0xff000000
   1e420:	teq	r0, #2030043136	; 0x79000000
   1e424:	bne	1e51c <main@@Base+0x7ffc>
   1e428:	b	1e438 <main@@Base+0x7f18>
   1e42c:	nop	{0}
	...
   1e438:	ldr	r0, [fp, #-8]
   1e43c:	ldr	r1, [fp, #-12]
   1e440:	str	r1, [fp, #-36]	; 0xffffffdc
   1e444:	ldr	r2, [fp, #-16]
   1e448:	movw	r3, #1
   1e44c:	bl	1bd48 <main@@Base+0x5828>
   1e450:	str	r0, [fp, #-12]
   1e454:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e458:	ldr	r1, [fp, #-12]
   1e45c:	cmp	r0, r1
   1e460:	beq	1e504 <main@@Base+0x7fe4>
   1e464:	vldr	s0, [pc, #288]	; 1e58c <main@@Base+0x806c>
   1e468:	vstr	s0, [sp, #12]
   1e46c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e470:	add	r0, r0, #4
   1e474:	str	r0, [fp, #-32]	; 0xffffffe0
   1e478:	ldr	r0, [fp, #-8]
   1e47c:	ldr	r1, [fp, #-12]
   1e480:	str	r1, [fp, #-36]	; 0xffffffdc
   1e484:	ldr	r2, [fp, #-16]
   1e488:	add	r3, sp, #12
   1e48c:	bl	34e00 <flatcc_json_parser_float@@Base>
   1e490:	str	r0, [fp, #-12]
   1e494:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e498:	ldr	r1, [fp, #-12]
   1e49c:	cmp	r0, r1
   1e4a0:	bne	1e4f4 <main@@Base+0x7fd4>
   1e4a4:	ldr	r0, [pc, #228]	; 1e590 <main@@Base+0x8070>
   1e4a8:	add	r3, pc, r0
   1e4ac:	ldr	r0, [fp, #-8]
   1e4b0:	ldr	r1, [fp, #-12]
   1e4b4:	str	r1, [fp, #-36]	; 0xffffffdc
   1e4b8:	ldr	r2, [fp, #-16]
   1e4bc:	add	ip, sp, #12
   1e4c0:	str	ip, [sp]
   1e4c4:	bl	1fd4c <main@@Base+0x982c>
   1e4c8:	str	r0, [fp, #-12]
   1e4cc:	ldr	r0, [fp, #-12]
   1e4d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e4d4:	cmp	r0, r1
   1e4d8:	beq	1e4ec <main@@Base+0x7fcc>
   1e4dc:	ldr	r0, [fp, #-12]
   1e4e0:	ldr	r1, [fp, #-16]
   1e4e4:	cmp	r0, r1
   1e4e8:	bne	1e4f0 <main@@Base+0x7fd0>
   1e4ec:	b	1e568 <main@@Base+0x8048>
   1e4f0:	b	1e4f4 <main@@Base+0x7fd4>
   1e4f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e4f8:	vldr	s0, [sp, #12]
   1e4fc:	bl	1ff34 <main@@Base+0x9a14>
   1e500:	b	1e518 <main@@Base+0x7ff8>
   1e504:	ldr	r0, [fp, #-8]
   1e508:	ldr	r1, [fp, #-12]
   1e50c:	ldr	r2, [fp, #-16]
   1e510:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e514:	str	r0, [fp, #-12]
   1e518:	b	1e530 <main@@Base+0x8010>
   1e51c:	ldr	r0, [fp, #-8]
   1e520:	ldr	r1, [fp, #-12]
   1e524:	ldr	r2, [fp, #-16]
   1e528:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e52c:	str	r0, [fp, #-12]
   1e530:	b	1e534 <main@@Base+0x8014>
   1e534:	b	1e538 <main@@Base+0x8018>
   1e538:	b	1e53c <main@@Base+0x801c>
   1e53c:	b	1e540 <main@@Base+0x8020>
   1e540:	ldr	r0, [fp, #-8]
   1e544:	ldr	r1, [fp, #-12]
   1e548:	ldr	r2, [fp, #-16]
   1e54c:	sub	r3, fp, #24
   1e550:	bl	20d64 <main@@Base+0xa844>
   1e554:	str	r0, [fp, #-12]
   1e558:	b	1dea4 <main@@Base+0x7984>
   1e55c:	ldr	r0, [fp, #-12]
   1e560:	str	r0, [fp, #-4]
   1e564:	b	1e580 <main@@Base+0x8060>
   1e568:	ldr	r0, [fp, #-8]
   1e56c:	ldr	r1, [fp, #-12]
   1e570:	ldr	r2, [fp, #-16]
   1e574:	movw	r3, #33	; 0x21
   1e578:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1e57c:	str	r0, [fp, #-4]
   1e580:	ldr	r0, [fp, #-4]
   1e584:	mov	sp, fp
   1e588:	pop	{fp, pc}
   1e58c:	andeq	r0, r0, r0
   1e590:	andeq	lr, r3, ip, lsl sp
   1e594:	andeq	lr, r3, r4, lsl lr
   1e598:	andeq	lr, r3, r8, lsl pc
   1e59c:	strdeq	pc, [r3], -r0
   1e5a0:	strdeq	pc, [r3], -r0
   1e5a4:	push	{fp, lr}
   1e5a8:	mov	fp, sp
   1e5ac:	sub	sp, sp, #56	; 0x38
   1e5b0:	str	r0, [fp, #-8]
   1e5b4:	str	r1, [fp, #-12]
   1e5b8:	str	r2, [fp, #-16]
   1e5bc:	str	r3, [fp, #-20]	; 0xffffffec
   1e5c0:	ldr	r0, [fp, #-8]
   1e5c4:	ldr	r1, [fp, #-12]
   1e5c8:	ldr	r2, [fp, #-16]
   1e5cc:	sub	r3, fp, #24
   1e5d0:	bl	1bba8 <main@@Base+0x5688>
   1e5d4:	str	r0, [fp, #-12]
   1e5d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5dc:	cmp	r0, #0
   1e5e0:	beq	1e830 <main@@Base+0x8310>
   1e5e4:	ldr	r0, [fp, #-8]
   1e5e8:	ldr	r1, [fp, #-12]
   1e5ec:	ldr	r2, [fp, #-16]
   1e5f0:	bl	1bc8c <main@@Base+0x576c>
   1e5f4:	str	r0, [fp, #-12]
   1e5f8:	ldr	r0, [fp, #-12]
   1e5fc:	ldr	r1, [fp, #-16]
   1e600:	bl	1bd10 <main@@Base+0x57f0>
   1e604:	str	r1, [sp, #12]
   1e608:	str	r0, [sp, #8]
   1e60c:	ldr	r0, [sp, #12]
   1e610:	and	r0, r0, #-16777216	; 0xff000000
   1e614:	teq	r0, #1644167168	; 0x62000000
   1e618:	bne	1e704 <main@@Base+0x81e4>
   1e61c:	b	1e620 <main@@Base+0x8100>
   1e620:	ldr	r0, [fp, #-8]
   1e624:	ldr	r1, [fp, #-12]
   1e628:	str	r1, [sp, #20]
   1e62c:	ldr	r2, [fp, #-16]
   1e630:	movw	r3, #1
   1e634:	bl	1bd48 <main@@Base+0x5828>
   1e638:	str	r0, [fp, #-12]
   1e63c:	ldr	r0, [sp, #20]
   1e640:	ldr	r1, [fp, #-12]
   1e644:	cmp	r0, r1
   1e648:	beq	1e6ec <main@@Base+0x81cc>
   1e64c:	movw	r0, #0
   1e650:	strb	r0, [sp, #7]
   1e654:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e658:	add	r0, r0, #2
   1e65c:	str	r0, [sp, #24]
   1e660:	ldr	r0, [fp, #-8]
   1e664:	ldr	r1, [fp, #-12]
   1e668:	str	r1, [sp, #20]
   1e66c:	ldr	r2, [fp, #-16]
   1e670:	add	r3, sp, #7
   1e674:	bl	1d258 <main@@Base+0x6d38>
   1e678:	str	r0, [fp, #-12]
   1e67c:	ldr	r0, [sp, #20]
   1e680:	ldr	r1, [fp, #-12]
   1e684:	cmp	r0, r1
   1e688:	bne	1e6dc <main@@Base+0x81bc>
   1e68c:	ldr	r0, [pc, #464]	; 1e864 <main@@Base+0x8344>
   1e690:	add	r3, pc, r0
   1e694:	ldr	r0, [fp, #-8]
   1e698:	ldr	r1, [fp, #-12]
   1e69c:	str	r1, [sp, #20]
   1e6a0:	ldr	r2, [fp, #-16]
   1e6a4:	add	ip, sp, #7
   1e6a8:	str	ip, [sp]
   1e6ac:	bl	1d334 <main@@Base+0x6e14>
   1e6b0:	str	r0, [fp, #-12]
   1e6b4:	ldr	r0, [fp, #-12]
   1e6b8:	ldr	r1, [sp, #20]
   1e6bc:	cmp	r0, r1
   1e6c0:	beq	1e6d4 <main@@Base+0x81b4>
   1e6c4:	ldr	r0, [fp, #-12]
   1e6c8:	ldr	r1, [fp, #-16]
   1e6cc:	cmp	r0, r1
   1e6d0:	bne	1e6d8 <main@@Base+0x81b8>
   1e6d4:	b	1e83c <main@@Base+0x831c>
   1e6d8:	b	1e6dc <main@@Base+0x81bc>
   1e6dc:	ldr	r0, [sp, #24]
   1e6e0:	ldrsb	r1, [sp, #7]
   1e6e4:	bl	1d518 <main@@Base+0x6ff8>
   1e6e8:	b	1e700 <main@@Base+0x81e0>
   1e6ec:	ldr	r0, [fp, #-8]
   1e6f0:	ldr	r1, [fp, #-12]
   1e6f4:	ldr	r2, [fp, #-16]
   1e6f8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e6fc:	str	r0, [fp, #-12]
   1e700:	b	1e814 <main@@Base+0x82f4>
   1e704:	ldr	r0, [sp, #12]
   1e708:	and	r0, r0, #-16777216	; 0xff000000
   1e70c:	teq	r0, #1627389952	; 0x61000000
   1e710:	bne	1e7fc <main@@Base+0x82dc>
   1e714:	b	1e718 <main@@Base+0x81f8>
   1e718:	ldr	r0, [fp, #-8]
   1e71c:	ldr	r1, [fp, #-12]
   1e720:	str	r1, [sp, #20]
   1e724:	ldr	r2, [fp, #-16]
   1e728:	movw	r3, #1
   1e72c:	bl	1bd48 <main@@Base+0x5828>
   1e730:	str	r0, [fp, #-12]
   1e734:	ldr	r0, [sp, #20]
   1e738:	ldr	r1, [fp, #-12]
   1e73c:	cmp	r0, r1
   1e740:	beq	1e7e4 <main@@Base+0x82c4>
   1e744:	movw	r0, #0
   1e748:	strh	r0, [sp, #4]
   1e74c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e750:	add	r0, r0, #0
   1e754:	str	r0, [sp, #24]
   1e758:	ldr	r0, [fp, #-8]
   1e75c:	ldr	r1, [fp, #-12]
   1e760:	str	r1, [sp, #20]
   1e764:	ldr	r2, [fp, #-16]
   1e768:	add	r3, sp, #4
   1e76c:	bl	1da78 <main@@Base+0x7558>
   1e770:	str	r0, [fp, #-12]
   1e774:	ldr	r0, [sp, #20]
   1e778:	ldr	r1, [fp, #-12]
   1e77c:	cmp	r0, r1
   1e780:	bne	1e7d4 <main@@Base+0x82b4>
   1e784:	ldr	r0, [pc, #212]	; 1e860 <main@@Base+0x8340>
   1e788:	add	r3, pc, r0
   1e78c:	ldr	r0, [fp, #-8]
   1e790:	ldr	r1, [fp, #-12]
   1e794:	str	r1, [sp, #20]
   1e798:	ldr	r2, [fp, #-16]
   1e79c:	add	ip, sp, #4
   1e7a0:	str	ip, [sp]
   1e7a4:	bl	1db54 <main@@Base+0x7634>
   1e7a8:	str	r0, [fp, #-12]
   1e7ac:	ldr	r0, [fp, #-12]
   1e7b0:	ldr	r1, [sp, #20]
   1e7b4:	cmp	r0, r1
   1e7b8:	beq	1e7cc <main@@Base+0x82ac>
   1e7bc:	ldr	r0, [fp, #-12]
   1e7c0:	ldr	r1, [fp, #-16]
   1e7c4:	cmp	r0, r1
   1e7c8:	bne	1e7d0 <main@@Base+0x82b0>
   1e7cc:	b	1e83c <main@@Base+0x831c>
   1e7d0:	b	1e7d4 <main@@Base+0x82b4>
   1e7d4:	ldr	r0, [sp, #24]
   1e7d8:	ldrsh	r1, [sp, #4]
   1e7dc:	bl	1dd38 <main@@Base+0x7818>
   1e7e0:	b	1e7f8 <main@@Base+0x82d8>
   1e7e4:	ldr	r0, [fp, #-8]
   1e7e8:	ldr	r1, [fp, #-12]
   1e7ec:	ldr	r2, [fp, #-16]
   1e7f0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e7f4:	str	r0, [fp, #-12]
   1e7f8:	b	1e810 <main@@Base+0x82f0>
   1e7fc:	ldr	r0, [fp, #-8]
   1e800:	ldr	r1, [fp, #-12]
   1e804:	ldr	r2, [fp, #-16]
   1e808:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e80c:	str	r0, [fp, #-12]
   1e810:	b	1e814 <main@@Base+0x82f4>
   1e814:	ldr	r0, [fp, #-8]
   1e818:	ldr	r1, [fp, #-12]
   1e81c:	ldr	r2, [fp, #-16]
   1e820:	sub	r3, fp, #24
   1e824:	bl	20d64 <main@@Base+0xa844>
   1e828:	str	r0, [fp, #-12]
   1e82c:	b	1e5d8 <main@@Base+0x80b8>
   1e830:	ldr	r0, [fp, #-12]
   1e834:	str	r0, [fp, #-4]
   1e838:	b	1e854 <main@@Base+0x8334>
   1e83c:	ldr	r0, [fp, #-8]
   1e840:	ldr	r1, [fp, #-12]
   1e844:	ldr	r2, [fp, #-16]
   1e848:	movw	r3, #33	; 0x21
   1e84c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1e850:	str	r0, [fp, #-4]
   1e854:	ldr	r0, [fp, #-4]
   1e858:	mov	sp, fp
   1e85c:	pop	{fp, pc}
   1e860:	andeq	lr, r3, r4, asr sl
   1e864:	andeq	lr, r3, r0, asr #22
   1e868:	push	{fp, lr}
   1e86c:	mov	fp, sp
   1e870:	sub	sp, sp, #32
   1e874:	ldr	ip, [fp, #8]
   1e878:	str	r0, [fp, #-8]
   1e87c:	str	r1, [fp, #-12]
   1e880:	str	r2, [sp, #16]
   1e884:	strb	r3, [sp, #15]
   1e888:	ldr	r0, [fp, #8]
   1e88c:	mov	r1, #0
   1e890:	str	r1, [r0]
   1e894:	ldrb	r0, [sp, #15]
   1e898:	mov	r1, r0
   1e89c:	cmp	r0, #4
   1e8a0:	str	ip, [sp, #8]
   1e8a4:	str	r1, [sp, #4]
   1e8a8:	bhi	1e958 <main@@Base+0x8438>
   1e8ac:	add	r0, pc, #8
   1e8b0:	ldr	r1, [sp, #4]
   1e8b4:	ldr	r2, [r0, r1, lsl #2]
   1e8b8:	add	pc, r0, r2
   1e8bc:	andeq	r0, r0, r4, lsl r0
   1e8c0:	andeq	r0, r0, ip, lsr #32
   1e8c4:	andeq	r0, r0, r8, asr #32
   1e8c8:	andeq	r0, r0, r4, rrx
   1e8cc:	andeq	r0, r0, r0, lsl #1
   1e8d0:	ldr	r0, [fp, #-8]
   1e8d4:	ldr	r1, [fp, #-12]
   1e8d8:	ldr	r2, [sp, #16]
   1e8dc:	bl	2271c <main@@Base+0xc1fc>
   1e8e0:	str	r0, [fp, #-4]
   1e8e4:	b	1e9f0 <main@@Base+0x84d0>
   1e8e8:	ldr	r0, [fp, #-8]
   1e8ec:	ldr	r1, [fp, #-12]
   1e8f0:	ldr	r2, [sp, #16]
   1e8f4:	ldr	r3, [fp, #8]
   1e8f8:	bl	17188 <main@@Base+0xc68>
   1e8fc:	str	r0, [fp, #-12]
   1e900:	b	1e9a0 <main@@Base+0x8480>
   1e904:	ldr	r0, [fp, #-8]
   1e908:	ldr	r1, [fp, #-12]
   1e90c:	ldr	r2, [sp, #16]
   1e910:	ldr	r3, [fp, #8]
   1e914:	bl	227a8 <main@@Base+0xc288>
   1e918:	str	r0, [fp, #-12]
   1e91c:	b	1e9a0 <main@@Base+0x8480>
   1e920:	ldr	r0, [fp, #-8]
   1e924:	ldr	r1, [fp, #-12]
   1e928:	ldr	r2, [sp, #16]
   1e92c:	ldr	r3, [fp, #8]
   1e930:	bl	22e08 <main@@Base+0xc8e8>
   1e934:	str	r0, [fp, #-12]
   1e938:	b	1e9a0 <main@@Base+0x8480>
   1e93c:	ldr	r0, [fp, #-8]
   1e940:	ldr	r1, [fp, #-12]
   1e944:	ldr	r2, [sp, #16]
   1e948:	ldr	r3, [fp, #8]
   1e94c:	bl	22f14 <main@@Base+0xc9f4>
   1e950:	str	r0, [fp, #-12]
   1e954:	b	1e9a0 <main@@Base+0x8480>
   1e958:	ldr	r0, [fp, #-8]
   1e95c:	ldr	r0, [r0, #8]
   1e960:	and	r0, r0, #1
   1e964:	cmp	r0, #0
   1e968:	bne	1e988 <main@@Base+0x8468>
   1e96c:	ldr	r0, [fp, #-8]
   1e970:	ldr	r1, [fp, #-12]
   1e974:	ldr	r2, [sp, #16]
   1e978:	movw	r3, #15
   1e97c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1e980:	str	r0, [fp, #-4]
   1e984:	b	1e9f0 <main@@Base+0x84d0>
   1e988:	ldr	r0, [fp, #-8]
   1e98c:	ldr	r1, [fp, #-12]
   1e990:	ldr	r2, [sp, #16]
   1e994:	bl	345e0 <flatcc_json_parser_generic_json@@Base>
   1e998:	str	r0, [fp, #-4]
   1e99c:	b	1e9f0 <main@@Base+0x84d0>
   1e9a0:	ldr	r0, [fp, #-8]
   1e9a4:	ldr	r0, [r0, #20]
   1e9a8:	cmp	r0, #0
   1e9ac:	beq	1e9bc <main@@Base+0x849c>
   1e9b0:	ldr	r0, [fp, #-12]
   1e9b4:	str	r0, [fp, #-4]
   1e9b8:	b	1e9f0 <main@@Base+0x84d0>
   1e9bc:	ldr	r0, [fp, #8]
   1e9c0:	ldr	r0, [r0]
   1e9c4:	cmp	r0, #0
   1e9c8:	bne	1e9e8 <main@@Base+0x84c8>
   1e9cc:	ldr	r0, [fp, #-8]
   1e9d0:	ldr	r1, [fp, #-12]
   1e9d4:	ldr	r2, [sp, #16]
   1e9d8:	movw	r3, #33	; 0x21
   1e9dc:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1e9e0:	str	r0, [fp, #-4]
   1e9e4:	b	1e9f0 <main@@Base+0x84d0>
   1e9e8:	ldr	r0, [fp, #-12]
   1e9ec:	str	r0, [fp, #-4]
   1e9f0:	ldr	r0, [fp, #-4]
   1e9f4:	mov	sp, fp
   1e9f8:	pop	{fp, pc}
   1e9fc:	push	{fp, lr}
   1ea00:	mov	fp, sp
   1ea04:	sub	sp, sp, #80	; 0x50
   1ea08:	ldr	ip, [fp, #12]
   1ea0c:	ldr	lr, [fp, #8]
   1ea10:	str	r0, [fp, #-8]
   1ea14:	str	r1, [fp, #-12]
   1ea18:	str	r2, [fp, #-16]
   1ea1c:	str	r3, [fp, #-20]	; 0xffffffec
   1ea20:	ldr	r0, [fp, #-12]
   1ea24:	str	r0, [fp, #-24]	; 0xffffffe8
   1ea28:	ldr	r0, [fp, #-12]
   1ea2c:	ldr	r1, [fp, #-16]
   1ea30:	str	lr, [sp, #36]	; 0x24
   1ea34:	str	ip, [sp, #32]
   1ea38:	bl	1bd10 <main@@Base+0x57f0>
   1ea3c:	str	r1, [sp, #44]	; 0x2c
   1ea40:	str	r0, [sp, #40]	; 0x28
   1ea44:	ldr	r0, [sp, #40]	; 0x28
   1ea48:	ldr	r1, [sp, #44]	; 0x2c
   1ea4c:	movw	r2, #29183	; 0x71ff
   1ea50:	movt	r2, #29797	; 0x7465
   1ea54:	subs	r0, r2, r0
   1ea58:	movw	r2, #28275	; 0x6e73
   1ea5c:	movt	r2, #19823	; 0x4d6f
   1ea60:	sbcs	r1, r2, r1
   1ea64:	str	r0, [sp, #28]
   1ea68:	str	r1, [sp, #24]
   1ea6c:	bcc	1eb14 <main@@Base+0x85f4>
   1ea70:	b	1ea74 <main@@Base+0x8554>
   1ea74:	ldr	r0, [sp, #44]	; 0x2c
   1ea78:	bic	r0, r0, #255	; 0xff
   1ea7c:	movw	r1, #29696	; 0x7400
   1ea80:	movt	r1, #16748	; 0x416c
   1ea84:	teq	r0, r1
   1ea88:	bne	1eb04 <main@@Base+0x85e4>
   1ea8c:	b	1ea90 <main@@Base+0x8570>
   1ea90:	ldr	r0, [fp, #-8]
   1ea94:	ldr	r1, [fp, #-12]
   1ea98:	str	r1, [fp, #-28]	; 0xffffffe4
   1ea9c:	ldr	r2, [fp, #-16]
   1eaa0:	ldr	r3, [fp, #12]
   1eaa4:	movw	ip, #3
   1eaa8:	str	r3, [sp, #20]
   1eaac:	mov	r3, ip
   1eab0:	ldr	ip, [sp, #20]
   1eab4:	str	ip, [sp]
   1eab8:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   1eabc:	str	r0, [fp, #-12]
   1eac0:	ldr	r0, [fp, #-12]
   1eac4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eac8:	cmp	r0, r1
   1eacc:	beq	1eaf4 <main@@Base+0x85d4>
   1ead0:	ldr	r0, [fp, #8]
   1ead4:	mov	r1, #0
   1ead8:	str	r1, [r0, #4]
   1eadc:	mov	r1, #4
   1eae0:	str	r1, [r0]
   1eae4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eae8:	movw	r1, #0
   1eaec:	str	r1, [r0]
   1eaf0:	b	1eb00 <main@@Base+0x85e0>
   1eaf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eaf8:	str	r0, [fp, #-4]
   1eafc:	b	1ee74 <main@@Base+0x8954>
   1eb00:	b	1eb10 <main@@Base+0x85f0>
   1eb04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb08:	str	r0, [fp, #-4]
   1eb0c:	b	1ee74 <main@@Base+0x8954>
   1eb10:	b	1ee6c <main@@Base+0x894c>
   1eb14:	ldr	r0, [sp, #40]	; 0x28
   1eb18:	ldr	r1, [sp, #44]	; 0x2c
   1eb1c:	movw	r2, #28275	; 0x6e73
   1eb20:	movt	r2, #19823	; 0x4d6f
   1eb24:	eor	r1, r1, r2
   1eb28:	movw	r2, #29234	; 0x7232
   1eb2c:	movt	r2, #29797	; 0x7465
   1eb30:	eor	r0, r0, r2
   1eb34:	orr	r0, r0, r1
   1eb38:	cmp	r0, #0
   1eb3c:	bne	1ebb0 <main@@Base+0x8690>
   1eb40:	b	1eb44 <main@@Base+0x8624>
   1eb44:	ldr	r0, [fp, #-8]
   1eb48:	ldr	r1, [fp, #-12]
   1eb4c:	str	r1, [fp, #-28]	; 0xffffffe4
   1eb50:	ldr	r2, [fp, #-16]
   1eb54:	ldr	r3, [fp, #12]
   1eb58:	movw	ip, #8
   1eb5c:	str	r3, [sp, #16]
   1eb60:	mov	r3, ip
   1eb64:	ldr	ip, [sp, #16]
   1eb68:	str	ip, [sp]
   1eb6c:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   1eb70:	str	r0, [fp, #-12]
   1eb74:	ldr	r0, [fp, #-12]
   1eb78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eb7c:	cmp	r0, r1
   1eb80:	beq	1eba8 <main@@Base+0x8688>
   1eb84:	ldr	r0, [fp, #8]
   1eb88:	mov	r1, #0
   1eb8c:	str	r1, [r0, #4]
   1eb90:	mov	r1, #3
   1eb94:	str	r1, [r0]
   1eb98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eb9c:	movw	r1, #0
   1eba0:	str	r1, [r0]
   1eba4:	b	1ebac <main@@Base+0x868c>
   1eba8:	b	1ec60 <main@@Base+0x8740>
   1ebac:	b	1ec5c <main@@Base+0x873c>
   1ebb0:	ldr	r0, [sp, #40]	; 0x28
   1ebb4:	ldr	r1, [sp, #44]	; 0x2c
   1ebb8:	movw	r2, #28526	; 0x6f6e
   1ebbc:	movt	r2, #77	; 0x4d
   1ebc0:	eor	r2, r2, r1, lsr #8
   1ebc4:	lsr	r0, r0, #8
   1ebc8:	orr	r0, r0, r1, lsl #24
   1ebcc:	movw	r1, #25970	; 0x6572
   1ebd0:	movt	r1, #29556	; 0x7374
   1ebd4:	eor	r0, r0, r1
   1ebd8:	orr	r0, r0, r2
   1ebdc:	cmp	r0, #0
   1ebe0:	bne	1ec54 <main@@Base+0x8734>
   1ebe4:	b	1ebe8 <main@@Base+0x86c8>
   1ebe8:	ldr	r0, [fp, #-8]
   1ebec:	ldr	r1, [fp, #-12]
   1ebf0:	str	r1, [fp, #-28]	; 0xffffffe4
   1ebf4:	ldr	r2, [fp, #-16]
   1ebf8:	ldr	r3, [fp, #12]
   1ebfc:	movw	ip, #7
   1ec00:	str	r3, [sp, #12]
   1ec04:	mov	r3, ip
   1ec08:	ldr	ip, [sp, #12]
   1ec0c:	str	ip, [sp]
   1ec10:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   1ec14:	str	r0, [fp, #-12]
   1ec18:	ldr	r0, [fp, #-12]
   1ec1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ec20:	cmp	r0, r1
   1ec24:	beq	1ec4c <main@@Base+0x872c>
   1ec28:	ldr	r0, [fp, #8]
   1ec2c:	mov	r1, #0
   1ec30:	str	r1, [r0, #4]
   1ec34:	mov	r1, #1
   1ec38:	str	r1, [r0]
   1ec3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ec40:	movw	r1, #0
   1ec44:	str	r1, [r0]
   1ec48:	b	1ec50 <main@@Base+0x8730>
   1ec4c:	b	1ec60 <main@@Base+0x8740>
   1ec50:	b	1ec58 <main@@Base+0x8738>
   1ec54:	b	1ec60 <main@@Base+0x8740>
   1ec58:	b	1ec5c <main@@Base+0x873c>
   1ec5c:	b	1ee68 <main@@Base+0x8948>
   1ec60:	ldr	r0, [sp, #44]	; 0x2c
   1ec64:	movw	r1, #20037	; 0x4e45
   1ec68:	movt	r1, #20047	; 0x4e4f
   1ec6c:	teq	r0, r1
   1ec70:	bne	1ece0 <main@@Base+0x87c0>
   1ec74:	b	1ec78 <main@@Base+0x8758>
   1ec78:	ldr	r0, [fp, #-8]
   1ec7c:	ldr	r1, [fp, #-12]
   1ec80:	str	r1, [fp, #-28]	; 0xffffffe4
   1ec84:	ldr	r2, [fp, #-16]
   1ec88:	ldr	r3, [fp, #12]
   1ec8c:	movw	ip, #4
   1ec90:	str	r3, [sp, #8]
   1ec94:	mov	r3, ip
   1ec98:	ldr	ip, [sp, #8]
   1ec9c:	str	ip, [sp]
   1eca0:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   1eca4:	str	r0, [fp, #-12]
   1eca8:	ldr	r0, [fp, #-12]
   1ecac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ecb0:	cmp	r0, r1
   1ecb4:	beq	1ecd8 <main@@Base+0x87b8>
   1ecb8:	ldr	r0, [fp, #8]
   1ecbc:	mov	r1, #0
   1ecc0:	str	r1, [r0, #4]
   1ecc4:	str	r1, [r0]
   1ecc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eccc:	movw	r1, #0
   1ecd0:	str	r1, [r0]
   1ecd4:	b	1ecdc <main@@Base+0x87bc>
   1ecd8:	b	1ece8 <main@@Base+0x87c8>
   1ecdc:	b	1ece4 <main@@Base+0x87c4>
   1ece0:	b	1ece8 <main@@Base+0x87c8>
   1ece4:	b	1ee64 <main@@Base+0x8944>
   1ece8:	ldr	r0, [sp, #40]	; 0x28
   1ecec:	ldr	r1, [sp, #44]	; 0x2c
   1ecf0:	movw	r2, #29556	; 0x7374
   1ecf4:	movt	r2, #21605	; 0x5465
   1ecf8:	eor	r1, r1, r2
   1ecfc:	movw	r2, #28016	; 0x6d70
   1ed00:	movt	r2, #21353	; 0x5369
   1ed04:	eor	r0, r0, r2
   1ed08:	orr	r0, r0, r1
   1ed0c:	cmp	r0, #0
   1ed10:	bne	1ee54 <main@@Base+0x8934>
   1ed14:	b	1ed18 <main@@Base+0x87f8>
   1ed18:	ldr	r0, [fp, #-12]
   1ed1c:	add	r0, r0, #8
   1ed20:	str	r0, [fp, #-12]
   1ed24:	ldr	r0, [fp, #-12]
   1ed28:	ldr	r1, [fp, #-16]
   1ed2c:	bl	1bd10 <main@@Base+0x57f0>
   1ed30:	str	r1, [sp, #44]	; 0x2c
   1ed34:	str	r0, [sp, #40]	; 0x28
   1ed38:	ldr	r0, [sp, #40]	; 0x28
   1ed3c:	ldr	r1, [sp, #44]	; 0x2c
   1ed40:	movw	lr, #21601	; 0x5461
   1ed44:	movt	lr, #27749	; 0x6c65
   1ed48:	eor	r1, r1, lr
   1ed4c:	movw	lr, #25943	; 0x6557
   1ed50:	movt	lr, #25196	; 0x626c
   1ed54:	eor	r0, r0, lr
   1ed58:	orr	r0, r0, r1
   1ed5c:	cmp	r0, #0
   1ed60:	bne	1ee44 <main@@Base+0x8924>
   1ed64:	b	1ed68 <main@@Base+0x8848>
   1ed68:	ldr	r0, [fp, #-12]
   1ed6c:	add	r0, r0, #8
   1ed70:	str	r0, [fp, #-12]
   1ed74:	ldr	r0, [fp, #-12]
   1ed78:	ldr	r1, [fp, #-16]
   1ed7c:	bl	1bd10 <main@@Base+0x57f0>
   1ed80:	str	r1, [sp, #44]	; 0x2c
   1ed84:	str	r0, [sp, #40]	; 0x28
   1ed88:	ldr	r0, [sp, #40]	; 0x28
   1ed8c:	ldr	r1, [sp, #44]	; 0x2c
   1ed90:	movw	lr, #29800	; 0x7468
   1ed94:	movt	lr, #105	; 0x69
   1ed98:	eor	lr, lr, r1, lsr #8
   1ed9c:	lsr	r0, r0, #8
   1eda0:	orr	r0, r0, r1, lsl #24
   1eda4:	movw	r1, #30061	; 0x756d
   1eda8:	movt	r1, #17774	; 0x456e
   1edac:	eor	r0, r0, r1
   1edb0:	orr	r0, r0, lr
   1edb4:	cmp	r0, #0
   1edb8:	bne	1ee34 <main@@Base+0x8914>
   1edbc:	b	1edc0 <main@@Base+0x88a0>
   1edc0:	ldr	r0, [fp, #-8]
   1edc4:	ldr	r1, [fp, #-12]
   1edc8:	str	r1, [fp, #-28]	; 0xffffffe4
   1edcc:	ldr	r2, [fp, #-16]
   1edd0:	ldr	r3, [fp, #12]
   1edd4:	movw	ip, #7
   1edd8:	str	r3, [sp, #4]
   1eddc:	mov	r3, ip
   1ede0:	ldr	ip, [sp, #4]
   1ede4:	str	ip, [sp]
   1ede8:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   1edec:	str	r0, [fp, #-12]
   1edf0:	ldr	r0, [fp, #-12]
   1edf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1edf8:	cmp	r0, r1
   1edfc:	beq	1ee24 <main@@Base+0x8904>
   1ee00:	ldr	r0, [fp, #8]
   1ee04:	mov	r1, #0
   1ee08:	str	r1, [r0, #4]
   1ee0c:	mov	r1, #2
   1ee10:	str	r1, [r0]
   1ee14:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ee18:	movw	r1, #0
   1ee1c:	str	r1, [r0]
   1ee20:	b	1ee30 <main@@Base+0x8910>
   1ee24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee28:	str	r0, [fp, #-4]
   1ee2c:	b	1ee74 <main@@Base+0x8954>
   1ee30:	b	1ee40 <main@@Base+0x8920>
   1ee34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee38:	str	r0, [fp, #-4]
   1ee3c:	b	1ee74 <main@@Base+0x8954>
   1ee40:	b	1ee50 <main@@Base+0x8930>
   1ee44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee48:	str	r0, [fp, #-4]
   1ee4c:	b	1ee74 <main@@Base+0x8954>
   1ee50:	b	1ee60 <main@@Base+0x8940>
   1ee54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee58:	str	r0, [fp, #-4]
   1ee5c:	b	1ee74 <main@@Base+0x8954>
   1ee60:	b	1ee64 <main@@Base+0x8944>
   1ee64:	b	1ee68 <main@@Base+0x8948>
   1ee68:	b	1ee6c <main@@Base+0x894c>
   1ee6c:	ldr	r0, [fp, #-12]
   1ee70:	str	r0, [fp, #-4]
   1ee74:	ldr	r0, [fp, #-4]
   1ee78:	mov	sp, fp
   1ee7c:	pop	{fp, pc}
   1ee80:	push	{fp, lr}
   1ee84:	mov	fp, sp
   1ee88:	sub	sp, sp, #32
   1ee8c:	str	r0, [fp, #-8]
   1ee90:	str	r1, [fp, #-12]
   1ee94:	str	r2, [sp, #16]
   1ee98:	str	r3, [sp, #12]
   1ee9c:	ldr	r0, [fp, #-12]
   1eea0:	str	r0, [sp, #8]
   1eea4:	ldr	r0, [sp, #16]
   1eea8:	ldr	r1, [fp, #-12]
   1eeac:	sub	r0, r0, r1
   1eeb0:	cmp	r0, #4
   1eeb4:	blt	1ef00 <main@@Base+0x89e0>
   1eeb8:	ldr	r0, [fp, #-12]
   1eebc:	ldr	r0, [r0]
   1eec0:	movw	r1, #36236	; 0x8d8c
   1eec4:	movt	r1, #39562	; 0x9a8a
   1eec8:	add	r1, r0, r1
   1eecc:	movw	r2, #29300	; 0x7274
   1eed0:	movt	r2, #25973	; 0x6575
   1eed4:	cmp	r0, r2
   1eed8:	movwne	r1, #1
   1eedc:	cmp	r1, #0
   1eee0:	bne	1ef00 <main@@Base+0x89e0>
   1eee4:	ldr	r0, [sp, #12]
   1eee8:	movw	r1, #1
   1eeec:	strb	r1, [r0]
   1eef0:	ldr	r0, [sp, #8]
   1eef4:	add	r0, r0, #4
   1eef8:	str	r0, [fp, #-4]
   1eefc:	b	1ef98 <main@@Base+0x8a78>
   1ef00:	ldr	r0, [sp, #16]
   1ef04:	ldr	r1, [fp, #-12]
   1ef08:	sub	r0, r0, r1
   1ef0c:	cmp	r0, #5
   1ef10:	blt	1ef4c <main@@Base+0x8a2c>
   1ef14:	ldr	r0, [fp, #-12]
   1ef18:	ldr	r1, [pc, #132]	; 1efa4 <main@@Base+0x8a84>
   1ef1c:	add	r1, pc, r1
   1ef20:	mov	r2, #5
   1ef24:	bl	14e3c <memcmp@plt>
   1ef28:	cmp	r0, #0
   1ef2c:	bne	1ef4c <main@@Base+0x8a2c>
   1ef30:	ldr	r0, [sp, #12]
   1ef34:	movw	r1, #0
   1ef38:	strb	r1, [r0]
   1ef3c:	ldr	r0, [sp, #8]
   1ef40:	add	r0, r0, #5
   1ef44:	str	r0, [fp, #-4]
   1ef48:	b	1ef98 <main@@Base+0x8a78>
   1ef4c:	b	1ef50 <main@@Base+0x8a30>
   1ef50:	ldr	r0, [fp, #-8]
   1ef54:	ldr	r1, [fp, #-12]
   1ef58:	ldr	r2, [sp, #16]
   1ef5c:	add	r3, sp, #7
   1ef60:	bl	1d628 <main@@Base+0x7108>
   1ef64:	str	r0, [fp, #-12]
   1ef68:	ldrsb	r0, [sp, #7]
   1ef6c:	cmp	r0, #0
   1ef70:	movw	r0, #0
   1ef74:	movne	r0, #1
   1ef78:	mvn	r1, #0
   1ef7c:	eor	r0, r0, r1
   1ef80:	eor	r0, r0, r1
   1ef84:	and	r0, r0, #1
   1ef88:	ldr	r1, [sp, #12]
   1ef8c:	strb	r0, [r1]
   1ef90:	ldr	r0, [fp, #-12]
   1ef94:	str	r0, [fp, #-4]
   1ef98:	ldr	r0, [fp, #-4]
   1ef9c:	mov	sp, fp
   1efa0:	pop	{fp, pc}
   1efa4:	andeq	sl, r2, r4, lsl r5
   1efa8:	push	{r4, r5, r6, sl, fp, lr}
   1efac:	add	fp, sp, #16
   1efb0:	sub	sp, sp, #80	; 0x50
   1efb4:	ldr	ip, [fp, #8]
   1efb8:	str	r0, [fp, #-24]	; 0xffffffe8
   1efbc:	str	r1, [fp, #-28]	; 0xffffffe4
   1efc0:	str	r2, [fp, #-32]	; 0xffffffe0
   1efc4:	str	r3, [fp, #-36]	; 0xffffffdc
   1efc8:	movw	r0, #0
   1efcc:	strb	r0, [fp, #-45]	; 0xffffffd3
   1efd0:	ldr	r1, [fp, #8]
   1efd4:	strb	r0, [r1]
   1efd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1efe0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1efe4:	str	ip, [sp, #28]
   1efe8:	bl	224ec <main@@Base+0xbfcc>
   1efec:	str	r0, [fp, #-28]	; 0xffffffe4
   1eff0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1eff4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1eff8:	cmp	r0, r1
   1effc:	bne	1f00c <main@@Base+0x8aec>
   1f000:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f004:	str	r0, [fp, #-20]	; 0xffffffec
   1f008:	b	1f180 <main@@Base+0x8c60>
   1f00c:	b	1f010 <main@@Base+0x8af0>
   1f010:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f014:	str	r0, [fp, #-40]	; 0xffffffd8
   1f018:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f01c:	ldr	r0, [r0]
   1f020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f024:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f028:	str	r2, [fp, #-44]	; 0xffffffd4
   1f02c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f030:	str	r0, [sp, #24]
   1f034:	mov	r0, r1
   1f038:	mov	r1, r2
   1f03c:	mov	r2, r3
   1f040:	add	r3, sp, #36	; 0x24
   1f044:	add	ip, sp, #40	; 0x28
   1f048:	str	ip, [sp]
   1f04c:	add	ip, sp, #32
   1f050:	str	ip, [sp, #4]
   1f054:	ldr	ip, [sp, #24]
   1f058:	blx	ip
   1f05c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f060:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f064:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f068:	cmp	r0, r1
   1f06c:	bne	1f07c <main@@Base+0x8b5c>
   1f070:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f074:	str	r0, [fp, #-20]	; 0xffffffec
   1f078:	b	1f180 <main@@Base+0x8c60>
   1f07c:	b	1f080 <main@@Base+0x8b60>
   1f080:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f084:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f088:	cmp	r0, r1
   1f08c:	movw	r0, #0
   1f090:	str	r0, [sp, #20]
   1f094:	bne	1f0bc <main@@Base+0x8b9c>
   1f098:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f09c:	add	r1, r0, #4
   1f0a0:	str	r1, [fp, #-40]	; 0xffffffd8
   1f0a4:	ldr	r0, [r0, #4]
   1f0a8:	movw	r1, #0
   1f0ac:	cmp	r0, r1
   1f0b0:	movw	r0, #0
   1f0b4:	movne	r0, #1
   1f0b8:	str	r0, [sp, #20]
   1f0bc:	ldr	r0, [sp, #20]
   1f0c0:	tst	r0, #1
   1f0c4:	bne	1f018 <main@@Base+0x8af8>
   1f0c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f0cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f0d0:	cmp	r0, r1
   1f0d4:	bne	1f0f4 <main@@Base+0x8bd4>
   1f0d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f0e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f0e4:	movw	r3, #23
   1f0e8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1f0ec:	str	r0, [fp, #-20]	; 0xffffffec
   1f0f0:	b	1f180 <main@@Base+0x8c60>
   1f0f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f0f8:	mov	r1, r0
   1f0fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f100:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f104:	ldr	ip, [sp, #36]	; 0x24
   1f108:	ldr	lr, [sp, #40]	; 0x28
   1f10c:	ldr	r4, [sp, #44]	; 0x2c
   1f110:	mov	r5, sp
   1f114:	sub	r6, fp, #45	; 0x2d
   1f118:	str	r6, [r5, #8]
   1f11c:	str	r4, [r5, #4]
   1f120:	str	lr, [r5]
   1f124:	str	r0, [sp, #16]
   1f128:	mov	r0, r2
   1f12c:	str	r1, [sp, #12]
   1f130:	mov	r1, r3
   1f134:	ldr	r2, [sp, #16]
   1f138:	mov	r3, ip
   1f13c:	bl	26c44 <main@@Base+0x10724>
   1f140:	ldr	r1, [sp, #12]
   1f144:	cmp	r1, r0
   1f148:	bne	1f158 <main@@Base+0x8c38>
   1f14c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f150:	str	r0, [fp, #-20]	; 0xffffffec
   1f154:	b	1f180 <main@@Base+0x8c60>
   1f158:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1f15c:	ldr	r1, [fp, #8]
   1f160:	ldrb	r2, [r1]
   1f164:	add	r0, r2, r0
   1f168:	strb	r0, [r1]
   1f16c:	ldr	r0, [sp, #32]
   1f170:	cmp	r0, #0
   1f174:	bne	1f010 <main@@Base+0x8af0>
   1f178:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f17c:	str	r0, [fp, #-20]	; 0xffffffec
   1f180:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f184:	sub	sp, fp, #16
   1f188:	pop	{r4, r5, r6, sl, fp, pc}
   1f18c:	push	{fp, lr}
   1f190:	mov	fp, sp
   1f194:	sub	sp, sp, #8
   1f198:	str	r0, [sp, #4]
   1f19c:	strb	r1, [sp, #3]
   1f1a0:	ldrb	r0, [sp, #3]
   1f1a4:	bl	26ce0 <main@@Base+0x107c0>
   1f1a8:	ldr	r1, [sp, #4]
   1f1ac:	strb	r0, [r1]
   1f1b0:	mov	sp, fp
   1f1b4:	pop	{fp, pc}
   1f1b8:	push	{fp, lr}
   1f1bc:	mov	fp, sp
   1f1c0:	sub	sp, sp, #64	; 0x40
   1f1c4:	str	r0, [fp, #-8]
   1f1c8:	str	r1, [fp, #-12]
   1f1cc:	str	r2, [fp, #-16]
   1f1d0:	str	r3, [fp, #-20]	; 0xffffffec
   1f1d4:	ldr	r0, [fp, #-8]
   1f1d8:	ldr	r1, [fp, #-12]
   1f1dc:	ldr	r2, [fp, #-16]
   1f1e0:	sub	r3, fp, #24
   1f1e4:	bl	1bba8 <main@@Base+0x5688>
   1f1e8:	str	r0, [fp, #-12]
   1f1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1f0:	cmp	r0, #0
   1f1f4:	beq	1f468 <main@@Base+0x8f48>
   1f1f8:	ldr	r0, [fp, #-8]
   1f1fc:	ldr	r1, [fp, #-12]
   1f200:	ldr	r2, [fp, #-16]
   1f204:	bl	1bc8c <main@@Base+0x576c>
   1f208:	str	r0, [fp, #-12]
   1f20c:	ldr	r0, [fp, #-12]
   1f210:	ldr	r1, [fp, #-16]
   1f214:	bl	1bd10 <main@@Base+0x57f0>
   1f218:	str	r1, [sp, #20]
   1f21c:	str	r0, [sp, #16]
   1f220:	ldr	r0, [sp, #20]
   1f224:	bfc	r0, #0, #16
   1f228:	movw	r1, #0
   1f22c:	movt	r1, #26980	; 0x6964
   1f230:	teq	r0, r1
   1f234:	bne	1f320 <main@@Base+0x8e00>
   1f238:	b	1f23c <main@@Base+0x8d1c>
   1f23c:	ldr	r0, [fp, #-8]
   1f240:	ldr	r1, [fp, #-12]
   1f244:	str	r1, [sp, #28]
   1f248:	ldr	r2, [fp, #-16]
   1f24c:	movw	r3, #2
   1f250:	bl	1bd48 <main@@Base+0x5828>
   1f254:	str	r0, [fp, #-12]
   1f258:	ldr	r0, [sp, #28]
   1f25c:	ldr	r1, [fp, #-12]
   1f260:	cmp	r0, r1
   1f264:	beq	1f308 <main@@Base+0x8de8>
   1f268:	movw	r0, #0
   1f26c:	str	r0, [sp, #12]
   1f270:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f274:	add	r0, r0, #0
   1f278:	str	r0, [sp, #32]
   1f27c:	ldr	r0, [fp, #-8]
   1f280:	ldr	r1, [fp, #-12]
   1f284:	str	r1, [sp, #28]
   1f288:	ldr	r2, [fp, #-16]
   1f28c:	add	r3, sp, #12
   1f290:	bl	20554 <main@@Base+0xa034>
   1f294:	str	r0, [fp, #-12]
   1f298:	ldr	r0, [sp, #28]
   1f29c:	ldr	r1, [fp, #-12]
   1f2a0:	cmp	r0, r1
   1f2a4:	bne	1f2f8 <main@@Base+0x8dd8>
   1f2a8:	ldr	r0, [pc, #492]	; 1f49c <main@@Base+0x8f7c>
   1f2ac:	add	r3, pc, r0
   1f2b0:	ldr	r0, [fp, #-8]
   1f2b4:	ldr	r1, [fp, #-12]
   1f2b8:	str	r1, [sp, #28]
   1f2bc:	ldr	r2, [fp, #-16]
   1f2c0:	add	ip, sp, #12
   1f2c4:	str	ip, [sp]
   1f2c8:	bl	2062c <main@@Base+0xa10c>
   1f2cc:	str	r0, [fp, #-12]
   1f2d0:	ldr	r0, [fp, #-12]
   1f2d4:	ldr	r1, [sp, #28]
   1f2d8:	cmp	r0, r1
   1f2dc:	beq	1f2f0 <main@@Base+0x8dd0>
   1f2e0:	ldr	r0, [fp, #-12]
   1f2e4:	ldr	r1, [fp, #-16]
   1f2e8:	cmp	r0, r1
   1f2ec:	bne	1f2f4 <main@@Base+0x8dd4>
   1f2f0:	b	1f474 <main@@Base+0x8f54>
   1f2f4:	b	1f2f8 <main@@Base+0x8dd8>
   1f2f8:	ldr	r0, [sp, #32]
   1f2fc:	ldr	r1, [sp, #12]
   1f300:	bl	20810 <main@@Base+0xa2f0>
   1f304:	b	1f31c <main@@Base+0x8dfc>
   1f308:	ldr	r0, [fp, #-8]
   1f30c:	ldr	r1, [fp, #-12]
   1f310:	ldr	r2, [fp, #-16]
   1f314:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f318:	str	r0, [fp, #-12]
   1f31c:	b	1f44c <main@@Base+0x8f2c>
   1f320:	ldr	r0, [sp, #16]
   1f324:	ldr	r1, [sp, #20]
   1f328:	movw	r2, #29556	; 0x7374
   1f32c:	movt	r2, #25705	; 0x6469
   1f330:	eor	r1, r1, r2
   1f334:	movw	r2, #25445	; 0x6365
   1f338:	movt	r2, #24942	; 0x616e
   1f33c:	eor	r0, r0, r2
   1f340:	orr	r0, r0, r1
   1f344:	cmp	r0, #0
   1f348:	bne	1f434 <main@@Base+0x8f14>
   1f34c:	b	1f350 <main@@Base+0x8e30>
   1f350:	ldr	r0, [fp, #-8]
   1f354:	ldr	r1, [fp, #-12]
   1f358:	str	r1, [sp, #28]
   1f35c:	ldr	r2, [fp, #-16]
   1f360:	movw	r3, #8
   1f364:	bl	1bd48 <main@@Base+0x5828>
   1f368:	str	r0, [fp, #-12]
   1f36c:	ldr	r0, [sp, #28]
   1f370:	ldr	r1, [fp, #-12]
   1f374:	cmp	r0, r1
   1f378:	beq	1f41c <main@@Base+0x8efc>
   1f37c:	movw	r0, #0
   1f380:	str	r0, [sp, #8]
   1f384:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f388:	add	r0, r0, #4
   1f38c:	str	r0, [sp, #32]
   1f390:	ldr	r0, [fp, #-8]
   1f394:	ldr	r1, [fp, #-12]
   1f398:	str	r1, [sp, #28]
   1f39c:	ldr	r2, [fp, #-16]
   1f3a0:	add	r3, sp, #8
   1f3a4:	bl	20554 <main@@Base+0xa034>
   1f3a8:	str	r0, [fp, #-12]
   1f3ac:	ldr	r0, [sp, #28]
   1f3b0:	ldr	r1, [fp, #-12]
   1f3b4:	cmp	r0, r1
   1f3b8:	bne	1f40c <main@@Base+0x8eec>
   1f3bc:	ldr	r0, [pc, #212]	; 1f498 <main@@Base+0x8f78>
   1f3c0:	add	r3, pc, r0
   1f3c4:	ldr	r0, [fp, #-8]
   1f3c8:	ldr	r1, [fp, #-12]
   1f3cc:	str	r1, [sp, #28]
   1f3d0:	ldr	r2, [fp, #-16]
   1f3d4:	add	ip, sp, #8
   1f3d8:	str	ip, [sp]
   1f3dc:	bl	2062c <main@@Base+0xa10c>
   1f3e0:	str	r0, [fp, #-12]
   1f3e4:	ldr	r0, [fp, #-12]
   1f3e8:	ldr	r1, [sp, #28]
   1f3ec:	cmp	r0, r1
   1f3f0:	beq	1f404 <main@@Base+0x8ee4>
   1f3f4:	ldr	r0, [fp, #-12]
   1f3f8:	ldr	r1, [fp, #-16]
   1f3fc:	cmp	r0, r1
   1f400:	bne	1f408 <main@@Base+0x8ee8>
   1f404:	b	1f474 <main@@Base+0x8f54>
   1f408:	b	1f40c <main@@Base+0x8eec>
   1f40c:	ldr	r0, [sp, #32]
   1f410:	ldr	r1, [sp, #8]
   1f414:	bl	20810 <main@@Base+0xa2f0>
   1f418:	b	1f430 <main@@Base+0x8f10>
   1f41c:	ldr	r0, [fp, #-8]
   1f420:	ldr	r1, [fp, #-12]
   1f424:	ldr	r2, [fp, #-16]
   1f428:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f42c:	str	r0, [fp, #-12]
   1f430:	b	1f448 <main@@Base+0x8f28>
   1f434:	ldr	r0, [fp, #-8]
   1f438:	ldr	r1, [fp, #-12]
   1f43c:	ldr	r2, [fp, #-16]
   1f440:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f444:	str	r0, [fp, #-12]
   1f448:	b	1f44c <main@@Base+0x8f2c>
   1f44c:	ldr	r0, [fp, #-8]
   1f450:	ldr	r1, [fp, #-12]
   1f454:	ldr	r2, [fp, #-16]
   1f458:	sub	r3, fp, #24
   1f45c:	bl	20d64 <main@@Base+0xa844>
   1f460:	str	r0, [fp, #-12]
   1f464:	b	1f1ec <main@@Base+0x8ccc>
   1f468:	ldr	r0, [fp, #-12]
   1f46c:	str	r0, [fp, #-4]
   1f470:	b	1f48c <main@@Base+0x8f6c>
   1f474:	ldr	r0, [fp, #-8]
   1f478:	ldr	r1, [fp, #-12]
   1f47c:	ldr	r2, [fp, #-16]
   1f480:	movw	r3, #33	; 0x21
   1f484:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1f488:	str	r0, [fp, #-4]
   1f48c:	ldr	r0, [fp, #-4]
   1f490:	mov	sp, fp
   1f494:	pop	{fp, pc}
   1f498:	andeq	sp, r3, r8, ror #30
   1f49c:	andeq	lr, r3, r0, ror r0
   1f4a0:	push	{fp, lr}
   1f4a4:	mov	fp, sp
   1f4a8:	sub	sp, sp, #64	; 0x40
   1f4ac:	str	r0, [fp, #-8]
   1f4b0:	str	r1, [fp, #-12]
   1f4b4:	str	r2, [fp, #-16]
   1f4b8:	str	r3, [fp, #-20]	; 0xffffffec
   1f4bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f4c0:	movw	r1, #0
   1f4c4:	str	r1, [r0]
   1f4c8:	ldr	r0, [fp, #-8]
   1f4cc:	ldr	r0, [r0]
   1f4d0:	movw	r1, #3
   1f4d4:	bl	2baec <flatcc_builder_start_table@@Base>
   1f4d8:	cmp	r0, #0
   1f4dc:	beq	1f4e4 <main@@Base+0x8fc4>
   1f4e0:	b	1f85c <main@@Base+0x933c>
   1f4e4:	ldr	r0, [fp, #-8]
   1f4e8:	ldr	r1, [fp, #-12]
   1f4ec:	ldr	r2, [fp, #-16]
   1f4f0:	sub	r3, fp, #24
   1f4f4:	bl	1bba8 <main@@Base+0x5688>
   1f4f8:	str	r0, [fp, #-12]
   1f4fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f500:	cmp	r0, #0
   1f504:	beq	1f81c <main@@Base+0x92fc>
   1f508:	ldr	r0, [fp, #-8]
   1f50c:	ldr	r1, [fp, #-12]
   1f510:	ldr	r2, [fp, #-16]
   1f514:	bl	1bc8c <main@@Base+0x576c>
   1f518:	str	r0, [fp, #-12]
   1f51c:	ldr	r0, [fp, #-12]
   1f520:	ldr	r1, [fp, #-16]
   1f524:	bl	1bd10 <main@@Base+0x57f0>
   1f528:	str	r1, [sp, #20]
   1f52c:	str	r0, [sp, #16]
   1f530:	ldr	r0, [sp, #16]
   1f534:	ldr	r1, [sp, #20]
   1f538:	movw	r2, #65535	; 0xffff
   1f53c:	movt	r2, #25955	; 0x6563
   1f540:	subs	r0, r2, r0
   1f544:	movw	r2, #29556	; 0x7374
   1f548:	movt	r2, #28261	; 0x6e65
   1f54c:	sbcs	r1, r2, r1
   1f550:	str	r0, [sp, #12]
   1f554:	str	r1, [sp, #8]
   1f558:	bcc	1f634 <main@@Base+0x9114>
   1f55c:	b	1f560 <main@@Base+0x9040>
   1f560:	ldr	r0, [sp, #20]
   1f564:	movw	r1, #29793	; 0x7461
   1f568:	movt	r1, #25697	; 0x6461
   1f56c:	teq	r0, r1
   1f570:	bne	1f61c <main@@Base+0x90fc>
   1f574:	b	1f578 <main@@Base+0x9058>
   1f578:	ldr	r0, [fp, #-8]
   1f57c:	ldr	r1, [fp, #-12]
   1f580:	str	r1, [sp, #24]
   1f584:	ldr	r2, [fp, #-16]
   1f588:	movw	r3, #4
   1f58c:	bl	1bd48 <main@@Base+0x5828>
   1f590:	str	r0, [fp, #-12]
   1f594:	ldr	r0, [sp, #24]
   1f598:	ldr	r1, [fp, #-12]
   1f59c:	cmp	r0, r1
   1f5a0:	beq	1f604 <main@@Base+0x90e4>
   1f5a4:	ldr	r0, [fp, #-8]
   1f5a8:	ldr	r1, [fp, #-12]
   1f5ac:	ldr	r2, [fp, #-16]
   1f5b0:	add	r3, sp, #32
   1f5b4:	movw	ip, #0
   1f5b8:	str	ip, [sp]
   1f5bc:	bl	35c88 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f5c0:	str	r0, [fp, #-12]
   1f5c4:	ldr	r0, [sp, #32]
   1f5c8:	cmp	r0, #0
   1f5cc:	beq	1f5f0 <main@@Base+0x90d0>
   1f5d0:	ldr	r0, [fp, #-8]
   1f5d4:	ldr	r0, [r0]
   1f5d8:	movw	r1, #0
   1f5dc:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   1f5e0:	str	r0, [sp, #28]
   1f5e4:	movw	r1, #0
   1f5e8:	cmp	r0, r1
   1f5ec:	bne	1f5f4 <main@@Base+0x90d4>
   1f5f0:	b	1f85c <main@@Base+0x933c>
   1f5f4:	ldr	r0, [sp, #32]
   1f5f8:	ldr	r1, [sp, #28]
   1f5fc:	str	r0, [r1]
   1f600:	b	1f618 <main@@Base+0x90f8>
   1f604:	ldr	r0, [fp, #-8]
   1f608:	ldr	r1, [fp, #-12]
   1f60c:	ldr	r2, [fp, #-16]
   1f610:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f614:	str	r0, [fp, #-12]
   1f618:	b	1f630 <main@@Base+0x9110>
   1f61c:	ldr	r0, [fp, #-8]
   1f620:	ldr	r1, [fp, #-12]
   1f624:	ldr	r2, [fp, #-16]
   1f628:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f62c:	str	r0, [fp, #-12]
   1f630:	b	1f800 <main@@Base+0x92e0>
   1f634:	ldr	r0, [sp, #16]
   1f638:	ldr	r1, [sp, #20]
   1f63c:	movw	r2, #29292	; 0x726c
   1f640:	movt	r2, #117	; 0x75
   1f644:	eor	r2, r2, r1, lsr #8
   1f648:	lsr	r0, r0, #8
   1f64c:	orr	r0, r0, r1, lsl #24
   1f650:	movw	r1, #29793	; 0x7461
   1f654:	movt	r1, #25697	; 0x6461
   1f658:	eor	r0, r0, r1
   1f65c:	orr	r0, r0, r2
   1f660:	cmp	r0, #0
   1f664:	bne	1f710 <main@@Base+0x91f0>
   1f668:	b	1f66c <main@@Base+0x914c>
   1f66c:	ldr	r0, [fp, #-8]
   1f670:	ldr	r1, [fp, #-12]
   1f674:	str	r1, [sp, #24]
   1f678:	ldr	r2, [fp, #-16]
   1f67c:	movw	r3, #7
   1f680:	bl	1bd48 <main@@Base+0x5828>
   1f684:	str	r0, [fp, #-12]
   1f688:	ldr	r0, [sp, #24]
   1f68c:	ldr	r1, [fp, #-12]
   1f690:	cmp	r0, r1
   1f694:	beq	1f6f8 <main@@Base+0x91d8>
   1f698:	ldr	r0, [fp, #-8]
   1f69c:	ldr	r1, [fp, #-12]
   1f6a0:	ldr	r2, [fp, #-16]
   1f6a4:	add	r3, sp, #32
   1f6a8:	movw	ip, #1
   1f6ac:	str	ip, [sp]
   1f6b0:	bl	35c88 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f6b4:	str	r0, [fp, #-12]
   1f6b8:	ldr	r0, [sp, #32]
   1f6bc:	cmp	r0, #0
   1f6c0:	beq	1f6e4 <main@@Base+0x91c4>
   1f6c4:	ldr	r0, [fp, #-8]
   1f6c8:	ldr	r0, [r0]
   1f6cc:	movw	r1, #1
   1f6d0:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   1f6d4:	str	r0, [sp, #28]
   1f6d8:	movw	r1, #0
   1f6dc:	cmp	r0, r1
   1f6e0:	bne	1f6e8 <main@@Base+0x91c8>
   1f6e4:	b	1f85c <main@@Base+0x933c>
   1f6e8:	ldr	r0, [sp, #32]
   1f6ec:	ldr	r1, [sp, #28]
   1f6f0:	str	r0, [r1]
   1f6f4:	b	1f70c <main@@Base+0x91ec>
   1f6f8:	ldr	r0, [fp, #-8]
   1f6fc:	ldr	r1, [fp, #-12]
   1f700:	ldr	r2, [fp, #-16]
   1f704:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f708:	str	r0, [fp, #-12]
   1f70c:	b	1f7fc <main@@Base+0x92dc>
   1f710:	ldrh	r0, [sp, #18]
   1f714:	ldr	r1, [sp, #20]
   1f718:	movw	r2, #28261	; 0x6e65
   1f71c:	eor	r2, r2, r1, lsr #16
   1f720:	orr	r0, r0, r1, lsl #16
   1f724:	movw	r1, #25956	; 0x6564
   1f728:	movt	r1, #29556	; 0x7374
   1f72c:	eor	r0, r0, r1
   1f730:	orr	r0, r0, r2
   1f734:	cmp	r0, #0
   1f738:	bne	1f7e4 <main@@Base+0x92c4>
   1f73c:	b	1f740 <main@@Base+0x9220>
   1f740:	ldr	r0, [fp, #-8]
   1f744:	ldr	r1, [fp, #-12]
   1f748:	str	r1, [sp, #24]
   1f74c:	ldr	r2, [fp, #-16]
   1f750:	movw	r3, #6
   1f754:	bl	1bd48 <main@@Base+0x5828>
   1f758:	str	r0, [fp, #-12]
   1f75c:	ldr	r0, [sp, #24]
   1f760:	ldr	r1, [fp, #-12]
   1f764:	cmp	r0, r1
   1f768:	beq	1f7cc <main@@Base+0x92ac>
   1f76c:	ldr	r0, [fp, #-8]
   1f770:	ldr	r1, [fp, #-12]
   1f774:	ldr	r2, [fp, #-16]
   1f778:	add	r3, sp, #32
   1f77c:	movw	ip, #0
   1f780:	str	ip, [sp]
   1f784:	bl	35c88 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f788:	str	r0, [fp, #-12]
   1f78c:	ldr	r0, [sp, #32]
   1f790:	cmp	r0, #0
   1f794:	beq	1f7b8 <main@@Base+0x9298>
   1f798:	ldr	r0, [fp, #-8]
   1f79c:	ldr	r0, [r0]
   1f7a0:	movw	r1, #2
   1f7a4:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   1f7a8:	str	r0, [sp, #28]
   1f7ac:	movw	r1, #0
   1f7b0:	cmp	r0, r1
   1f7b4:	bne	1f7bc <main@@Base+0x929c>
   1f7b8:	b	1f85c <main@@Base+0x933c>
   1f7bc:	ldr	r0, [sp, #32]
   1f7c0:	ldr	r1, [sp, #28]
   1f7c4:	str	r0, [r1]
   1f7c8:	b	1f7e0 <main@@Base+0x92c0>
   1f7cc:	ldr	r0, [fp, #-8]
   1f7d0:	ldr	r1, [fp, #-12]
   1f7d4:	ldr	r2, [fp, #-16]
   1f7d8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f7dc:	str	r0, [fp, #-12]
   1f7e0:	b	1f7f8 <main@@Base+0x92d8>
   1f7e4:	ldr	r0, [fp, #-8]
   1f7e8:	ldr	r1, [fp, #-12]
   1f7ec:	ldr	r2, [fp, #-16]
   1f7f0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1f7f4:	str	r0, [fp, #-12]
   1f7f8:	b	1f7fc <main@@Base+0x92dc>
   1f7fc:	b	1f800 <main@@Base+0x92e0>
   1f800:	ldr	r0, [fp, #-8]
   1f804:	ldr	r1, [fp, #-12]
   1f808:	ldr	r2, [fp, #-16]
   1f80c:	sub	r3, fp, #24
   1f810:	bl	20d64 <main@@Base+0xa844>
   1f814:	str	r0, [fp, #-12]
   1f818:	b	1f4fc <main@@Base+0x8fdc>
   1f81c:	ldr	r0, [fp, #-8]
   1f820:	ldr	r0, [r0, #20]
   1f824:	cmp	r0, #0
   1f828:	beq	1f830 <main@@Base+0x9310>
   1f82c:	b	1f85c <main@@Base+0x933c>
   1f830:	ldr	r0, [fp, #-8]
   1f834:	ldr	r0, [r0]
   1f838:	bl	2c764 <flatcc_builder_end_table@@Base>
   1f83c:	ldr	lr, [fp, #-20]	; 0xffffffec
   1f840:	str	r0, [lr]
   1f844:	cmp	r0, #0
   1f848:	bne	1f850 <main@@Base+0x9330>
   1f84c:	b	1f85c <main@@Base+0x933c>
   1f850:	ldr	r0, [fp, #-12]
   1f854:	str	r0, [fp, #-4]
   1f858:	b	1f874 <main@@Base+0x9354>
   1f85c:	ldr	r0, [fp, #-8]
   1f860:	ldr	r1, [fp, #-12]
   1f864:	ldr	r2, [fp, #-16]
   1f868:	movw	r3, #33	; 0x21
   1f86c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1f870:	str	r0, [fp, #-4]
   1f874:	ldr	r0, [fp, #-4]
   1f878:	mov	sp, fp
   1f87c:	pop	{fp, pc}
   1f880:	push	{fp, lr}
   1f884:	mov	fp, sp
   1f888:	sub	sp, sp, #72	; 0x48
   1f88c:	str	r0, [fp, #-8]
   1f890:	str	r1, [fp, #-12]
   1f894:	str	r2, [fp, #-16]
   1f898:	str	r3, [fp, #-20]	; 0xffffffec
   1f89c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f8a0:	movw	r1, #0
   1f8a4:	str	r1, [r0]
   1f8a8:	ldr	r0, [fp, #-8]
   1f8ac:	ldr	r0, [r0]
   1f8b0:	movw	r1, #3
   1f8b4:	bl	2baec <flatcc_builder_start_table@@Base>
   1f8b8:	cmp	r0, #0
   1f8bc:	beq	1f8c4 <main@@Base+0x93a4>
   1f8c0:	b	1fd20 <main@@Base+0x9800>
   1f8c4:	ldr	r0, [fp, #-8]
   1f8c8:	ldr	r1, [fp, #-12]
   1f8cc:	ldr	r2, [fp, #-16]
   1f8d0:	sub	r3, fp, #24
   1f8d4:	bl	1bba8 <main@@Base+0x5688>
   1f8d8:	str	r0, [fp, #-12]
   1f8dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f8e0:	cmp	r0, #0
   1f8e4:	beq	1fce0 <main@@Base+0x97c0>
   1f8e8:	ldr	r0, [fp, #-8]
   1f8ec:	ldr	r1, [fp, #-12]
   1f8f0:	ldr	r2, [fp, #-16]
   1f8f4:	bl	1bc8c <main@@Base+0x576c>
   1f8f8:	str	r0, [fp, #-12]
   1f8fc:	ldr	r0, [fp, #-12]
   1f900:	ldr	r1, [fp, #-16]
   1f904:	bl	1bd10 <main@@Base+0x57f0>
   1f908:	str	r1, [sp, #28]
   1f90c:	str	r0, [sp, #24]
   1f910:	ldr	r0, [sp, #28]
   1f914:	movw	r1, #65535	; 0xffff
   1f918:	movt	r1, #26979	; 0x6963
   1f91c:	cmp	r0, r1
   1f920:	bhi	1fa98 <main@@Base+0x9578>
   1f924:	b	1f928 <main@@Base+0x9408>
   1f928:	ldr	r0, [sp, #24]
   1f92c:	ldr	r1, [sp, #28]
   1f930:	and	r0, r0, #-16777216	; 0xff000000
   1f934:	movw	r2, #30062	; 0x756e
   1f938:	movt	r2, #25455	; 0x636f
   1f93c:	eor	r1, r1, r2
   1f940:	eor	r0, r0, #1946157056	; 0x74000000
   1f944:	orr	r0, r0, r1
   1f948:	cmp	r0, #0
   1f94c:	bne	1fa80 <main@@Base+0x9560>
   1f950:	b	1f954 <main@@Base+0x9434>
   1f954:	ldr	r0, [fp, #-8]
   1f958:	ldr	r1, [fp, #-12]
   1f95c:	str	r1, [sp, #32]
   1f960:	ldr	r2, [fp, #-16]
   1f964:	movw	r3, #5
   1f968:	bl	1bd48 <main@@Base+0x5828>
   1f96c:	str	r0, [fp, #-12]
   1f970:	ldr	r0, [sp, #32]
   1f974:	ldr	r1, [fp, #-12]
   1f978:	cmp	r0, r1
   1f97c:	beq	1fa68 <main@@Base+0x9548>
   1f980:	movw	r0, #0
   1f984:	strh	r0, [sp, #22]
   1f988:	ldr	r0, [fp, #-8]
   1f98c:	ldr	r1, [fp, #-12]
   1f990:	str	r1, [sp, #32]
   1f994:	ldr	r2, [fp, #-16]
   1f998:	add	r3, sp, #22
   1f99c:	bl	26658 <main@@Base+0x10138>
   1f9a0:	str	r0, [fp, #-12]
   1f9a4:	ldr	r0, [sp, #32]
   1f9a8:	ldr	r1, [fp, #-12]
   1f9ac:	cmp	r0, r1
   1f9b0:	bne	1fa04 <main@@Base+0x94e4>
   1f9b4:	ldr	r0, [pc, #908]	; 1fd48 <main@@Base+0x9828>
   1f9b8:	add	r3, pc, r0
   1f9bc:	ldr	r0, [fp, #-8]
   1f9c0:	ldr	r1, [fp, #-12]
   1f9c4:	str	r1, [sp, #32]
   1f9c8:	ldr	r2, [fp, #-16]
   1f9cc:	add	ip, sp, #22
   1f9d0:	str	ip, [sp]
   1f9d4:	bl	26734 <main@@Base+0x10214>
   1f9d8:	str	r0, [fp, #-12]
   1f9dc:	ldr	r0, [fp, #-12]
   1f9e0:	ldr	r1, [sp, #32]
   1f9e4:	cmp	r0, r1
   1f9e8:	beq	1f9fc <main@@Base+0x94dc>
   1f9ec:	ldr	r0, [fp, #-12]
   1f9f0:	ldr	r1, [fp, #-16]
   1f9f4:	cmp	r0, r1
   1f9f8:	bne	1fa00 <main@@Base+0x94e0>
   1f9fc:	b	1fd20 <main@@Base+0x9800>
   1fa00:	b	1fa04 <main@@Base+0x94e4>
   1fa04:	ldrh	r0, [sp, #22]
   1fa08:	cmp	r0, #0
   1fa0c:	bne	1fa24 <main@@Base+0x9504>
   1fa10:	ldr	r0, [fp, #-8]
   1fa14:	ldr	r0, [r0, #8]
   1fa18:	and	r0, r0, #2
   1fa1c:	cmp	r0, #0
   1fa20:	beq	1fa64 <main@@Base+0x9544>
   1fa24:	ldr	r0, [fp, #-8]
   1fa28:	ldr	r0, [r0]
   1fa2c:	movw	r1, #2
   1fa30:	str	r1, [sp, #4]
   1fa34:	ldr	r2, [sp, #4]
   1fa38:	movw	r3, #2
   1fa3c:	uxth	r3, r3
   1fa40:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   1fa44:	str	r0, [fp, #-28]	; 0xffffffe4
   1fa48:	movw	r1, #0
   1fa4c:	cmp	r0, r1
   1fa50:	bne	1fa58 <main@@Base+0x9538>
   1fa54:	b	1fd20 <main@@Base+0x9800>
   1fa58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fa5c:	ldrh	r1, [sp, #22]
   1fa60:	bl	26918 <main@@Base+0x103f8>
   1fa64:	b	1fa7c <main@@Base+0x955c>
   1fa68:	ldr	r0, [fp, #-8]
   1fa6c:	ldr	r1, [fp, #-12]
   1fa70:	ldr	r2, [fp, #-16]
   1fa74:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fa78:	str	r0, [fp, #-12]
   1fa7c:	b	1fa94 <main@@Base+0x9574>
   1fa80:	ldr	r0, [fp, #-8]
   1fa84:	ldr	r1, [fp, #-12]
   1fa88:	ldr	r2, [fp, #-16]
   1fa8c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fa90:	str	r0, [fp, #-12]
   1fa94:	b	1fcc4 <main@@Base+0x97a4>
   1fa98:	ldr	r0, [sp, #28]
   1fa9c:	bic	r0, r0, #255	; 0xff
   1faa0:	movw	r1, #27648	; 0x6c00
   1faa4:	movt	r1, #30305	; 0x7661
   1faa8:	teq	r0, r1
   1faac:	bne	1fbf0 <main@@Base+0x96d0>
   1fab0:	b	1fab4 <main@@Base+0x9594>
   1fab4:	ldr	r0, [fp, #-8]
   1fab8:	ldr	r1, [fp, #-12]
   1fabc:	str	r1, [sp, #32]
   1fac0:	ldr	r2, [fp, #-16]
   1fac4:	movw	r3, #3
   1fac8:	bl	1bd48 <main@@Base+0x5828>
   1facc:	str	r0, [fp, #-12]
   1fad0:	ldr	r0, [sp, #32]
   1fad4:	ldr	r1, [fp, #-12]
   1fad8:	cmp	r0, r1
   1fadc:	beq	1fbd8 <main@@Base+0x96b8>
   1fae0:	mov	r0, #0
   1fae4:	str	r0, [sp, #12]
   1fae8:	str	r0, [sp, #8]
   1faec:	ldr	r0, [fp, #-8]
   1faf0:	ldr	r1, [fp, #-12]
   1faf4:	str	r1, [sp, #32]
   1faf8:	ldr	r2, [fp, #-16]
   1fafc:	add	r3, sp, #8
   1fb00:	bl	20248 <main@@Base+0x9d28>
   1fb04:	str	r0, [fp, #-12]
   1fb08:	ldr	r0, [sp, #32]
   1fb0c:	ldr	r1, [fp, #-12]
   1fb10:	cmp	r0, r1
   1fb14:	bne	1fb68 <main@@Base+0x9648>
   1fb18:	ldr	r0, [pc, #548]	; 1fd44 <main@@Base+0x9824>
   1fb1c:	add	r3, pc, r0
   1fb20:	ldr	r0, [fp, #-8]
   1fb24:	ldr	r1, [fp, #-12]
   1fb28:	str	r1, [sp, #32]
   1fb2c:	ldr	r2, [fp, #-16]
   1fb30:	add	ip, sp, #8
   1fb34:	str	ip, [sp]
   1fb38:	bl	20320 <main@@Base+0x9e00>
   1fb3c:	str	r0, [fp, #-12]
   1fb40:	ldr	r0, [fp, #-12]
   1fb44:	ldr	r1, [sp, #32]
   1fb48:	cmp	r0, r1
   1fb4c:	beq	1fb60 <main@@Base+0x9640>
   1fb50:	ldr	r0, [fp, #-12]
   1fb54:	ldr	r1, [fp, #-16]
   1fb58:	cmp	r0, r1
   1fb5c:	bne	1fb64 <main@@Base+0x9644>
   1fb60:	b	1fd20 <main@@Base+0x9800>
   1fb64:	b	1fb68 <main@@Base+0x9648>
   1fb68:	ldr	r0, [sp, #8]
   1fb6c:	ldr	r1, [sp, #12]
   1fb70:	orr	r0, r0, r1
   1fb74:	cmp	r0, #0
   1fb78:	bne	1fb94 <main@@Base+0x9674>
   1fb7c:	b	1fb80 <main@@Base+0x9660>
   1fb80:	ldr	r0, [fp, #-8]
   1fb84:	ldr	r0, [r0, #8]
   1fb88:	and	r0, r0, #2
   1fb8c:	cmp	r0, #0
   1fb90:	beq	1fbd4 <main@@Base+0x96b4>
   1fb94:	ldr	r0, [fp, #-8]
   1fb98:	ldr	r0, [r0]
   1fb9c:	movw	r1, #1
   1fba0:	movw	r2, #8
   1fba4:	movw	r3, #8
   1fba8:	uxth	r3, r3
   1fbac:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   1fbb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1fbb4:	movw	r1, #0
   1fbb8:	cmp	r0, r1
   1fbbc:	bne	1fbc4 <main@@Base+0x96a4>
   1fbc0:	b	1fd20 <main@@Base+0x9800>
   1fbc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fbc8:	ldr	r2, [sp, #8]
   1fbcc:	ldr	r3, [sp, #12]
   1fbd0:	bl	2051c <main@@Base+0x9ffc>
   1fbd4:	b	1fbec <main@@Base+0x96cc>
   1fbd8:	ldr	r0, [fp, #-8]
   1fbdc:	ldr	r1, [fp, #-12]
   1fbe0:	ldr	r2, [fp, #-16]
   1fbe4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fbe8:	str	r0, [fp, #-12]
   1fbec:	b	1fcc0 <main@@Base+0x97a0>
   1fbf0:	ldr	r0, [sp, #28]
   1fbf4:	bfc	r0, #0, #16
   1fbf8:	movw	r1, #0
   1fbfc:	movt	r1, #26980	; 0x6964
   1fc00:	teq	r0, r1
   1fc04:	bne	1fca8 <main@@Base+0x9788>
   1fc08:	b	1fc0c <main@@Base+0x96ec>
   1fc0c:	ldr	r0, [fp, #-8]
   1fc10:	ldr	r1, [fp, #-12]
   1fc14:	str	r1, [sp, #32]
   1fc18:	ldr	r2, [fp, #-16]
   1fc1c:	movw	r3, #2
   1fc20:	bl	1bd48 <main@@Base+0x5828>
   1fc24:	str	r0, [fp, #-12]
   1fc28:	ldr	r0, [sp, #32]
   1fc2c:	ldr	r1, [fp, #-12]
   1fc30:	cmp	r0, r1
   1fc34:	beq	1fc90 <main@@Base+0x9770>
   1fc38:	ldr	r0, [fp, #-8]
   1fc3c:	ldr	r1, [fp, #-12]
   1fc40:	ldr	r2, [fp, #-16]
   1fc44:	sub	r3, fp, #32
   1fc48:	bl	364a4 <flatcc_json_parser_build_string@@Base>
   1fc4c:	str	r0, [fp, #-12]
   1fc50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fc54:	cmp	r0, #0
   1fc58:	beq	1fc7c <main@@Base+0x975c>
   1fc5c:	ldr	r0, [fp, #-8]
   1fc60:	ldr	r0, [r0]
   1fc64:	movw	r1, #0
   1fc68:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   1fc6c:	str	r0, [sp, #36]	; 0x24
   1fc70:	movw	r1, #0
   1fc74:	cmp	r0, r1
   1fc78:	bne	1fc80 <main@@Base+0x9760>
   1fc7c:	b	1fd20 <main@@Base+0x9800>
   1fc80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fc84:	ldr	r1, [sp, #36]	; 0x24
   1fc88:	str	r0, [r1]
   1fc8c:	b	1fca4 <main@@Base+0x9784>
   1fc90:	ldr	r0, [fp, #-8]
   1fc94:	ldr	r1, [fp, #-12]
   1fc98:	ldr	r2, [fp, #-16]
   1fc9c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fca0:	str	r0, [fp, #-12]
   1fca4:	b	1fcbc <main@@Base+0x979c>
   1fca8:	ldr	r0, [fp, #-8]
   1fcac:	ldr	r1, [fp, #-12]
   1fcb0:	ldr	r2, [fp, #-16]
   1fcb4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fcb8:	str	r0, [fp, #-12]
   1fcbc:	b	1fcc0 <main@@Base+0x97a0>
   1fcc0:	b	1fcc4 <main@@Base+0x97a4>
   1fcc4:	ldr	r0, [fp, #-8]
   1fcc8:	ldr	r1, [fp, #-12]
   1fccc:	ldr	r2, [fp, #-16]
   1fcd0:	sub	r3, fp, #24
   1fcd4:	bl	20d64 <main@@Base+0xa844>
   1fcd8:	str	r0, [fp, #-12]
   1fcdc:	b	1f8dc <main@@Base+0x93bc>
   1fce0:	ldr	r0, [fp, #-8]
   1fce4:	ldr	r0, [r0, #20]
   1fce8:	cmp	r0, #0
   1fcec:	beq	1fcf4 <main@@Base+0x97d4>
   1fcf0:	b	1fd20 <main@@Base+0x9800>
   1fcf4:	ldr	r0, [fp, #-8]
   1fcf8:	ldr	r0, [r0]
   1fcfc:	bl	2c764 <flatcc_builder_end_table@@Base>
   1fd00:	ldr	lr, [fp, #-20]	; 0xffffffec
   1fd04:	str	r0, [lr]
   1fd08:	cmp	r0, #0
   1fd0c:	bne	1fd14 <main@@Base+0x97f4>
   1fd10:	b	1fd20 <main@@Base+0x9800>
   1fd14:	ldr	r0, [fp, #-12]
   1fd18:	str	r0, [fp, #-4]
   1fd1c:	b	1fd38 <main@@Base+0x9818>
   1fd20:	ldr	r0, [fp, #-8]
   1fd24:	ldr	r1, [fp, #-12]
   1fd28:	ldr	r2, [fp, #-16]
   1fd2c:	movw	r3, #33	; 0x21
   1fd30:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1fd34:	str	r0, [fp, #-4]
   1fd38:	ldr	r0, [fp, #-4]
   1fd3c:	mov	sp, fp
   1fd40:	pop	{fp, pc}
   1fd44:	andeq	sp, r3, r4, lsr #16
   1fd48:	andeq	sp, r3, ip, ror r9
   1fd4c:	push	{r4, r5, r6, sl, fp, lr}
   1fd50:	add	fp, sp, #16
   1fd54:	sub	sp, sp, #80	; 0x50
   1fd58:	ldr	ip, [fp, #8]
   1fd5c:	vldr	s0, [pc, #460]	; 1ff30 <main@@Base+0x9a10>
   1fd60:	str	r0, [fp, #-24]	; 0xffffffe8
   1fd64:	str	r1, [fp, #-28]	; 0xffffffe4
   1fd68:	str	r2, [fp, #-32]	; 0xffffffe0
   1fd6c:	str	r3, [fp, #-36]	; 0xffffffdc
   1fd70:	vstr	s0, [sp, #48]	; 0x30
   1fd74:	ldr	r0, [fp, #8]
   1fd78:	vstr	s0, [r0]
   1fd7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fd80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd88:	str	ip, [sp, #28]
   1fd8c:	bl	224ec <main@@Base+0xbfcc>
   1fd90:	str	r0, [fp, #-28]	; 0xffffffe4
   1fd94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fd98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fd9c:	cmp	r0, r1
   1fda0:	bne	1fdb0 <main@@Base+0x9890>
   1fda4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fda8:	str	r0, [fp, #-20]	; 0xffffffec
   1fdac:	b	1ff24 <main@@Base+0x9a04>
   1fdb0:	b	1fdb4 <main@@Base+0x9894>
   1fdb4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fdb8:	str	r0, [fp, #-40]	; 0xffffffd8
   1fdbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fdc0:	ldr	r0, [r0]
   1fdc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fdc8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fdcc:	str	r2, [fp, #-44]	; 0xffffffd4
   1fdd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fdd4:	str	r0, [sp, #24]
   1fdd8:	mov	r0, r1
   1fddc:	mov	r1, r2
   1fde0:	mov	r2, r3
   1fde4:	add	r3, sp, #36	; 0x24
   1fde8:	add	ip, sp, #40	; 0x28
   1fdec:	str	ip, [sp]
   1fdf0:	add	ip, sp, #32
   1fdf4:	str	ip, [sp, #4]
   1fdf8:	ldr	ip, [sp, #24]
   1fdfc:	blx	ip
   1fe00:	str	r0, [fp, #-28]	; 0xffffffe4
   1fe04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fe08:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fe0c:	cmp	r0, r1
   1fe10:	bne	1fe20 <main@@Base+0x9900>
   1fe14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fe18:	str	r0, [fp, #-20]	; 0xffffffec
   1fe1c:	b	1ff24 <main@@Base+0x9a04>
   1fe20:	b	1fe24 <main@@Base+0x9904>
   1fe24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fe28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fe2c:	cmp	r0, r1
   1fe30:	movw	r0, #0
   1fe34:	str	r0, [sp, #20]
   1fe38:	bne	1fe60 <main@@Base+0x9940>
   1fe3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fe40:	add	r1, r0, #4
   1fe44:	str	r1, [fp, #-40]	; 0xffffffd8
   1fe48:	ldr	r0, [r0, #4]
   1fe4c:	movw	r1, #0
   1fe50:	cmp	r0, r1
   1fe54:	movw	r0, #0
   1fe58:	movne	r0, #1
   1fe5c:	str	r0, [sp, #20]
   1fe60:	ldr	r0, [sp, #20]
   1fe64:	tst	r0, #1
   1fe68:	bne	1fdbc <main@@Base+0x989c>
   1fe6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fe70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fe74:	cmp	r0, r1
   1fe78:	bne	1fe98 <main@@Base+0x9978>
   1fe7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fe80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fe84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fe88:	movw	r3, #23
   1fe8c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   1fe90:	str	r0, [fp, #-20]	; 0xffffffec
   1fe94:	b	1ff24 <main@@Base+0x9a04>
   1fe98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fe9c:	mov	r1, r0
   1fea0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fea4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fea8:	ldr	ip, [sp, #36]	; 0x24
   1feac:	ldr	lr, [sp, #40]	; 0x28
   1feb0:	ldr	r4, [sp, #44]	; 0x2c
   1feb4:	mov	r5, sp
   1feb8:	add	r6, sp, #48	; 0x30
   1febc:	str	r6, [r5, #8]
   1fec0:	str	r4, [r5, #4]
   1fec4:	str	lr, [r5]
   1fec8:	str	r0, [sp, #16]
   1fecc:	mov	r0, r2
   1fed0:	str	r1, [sp, #12]
   1fed4:	mov	r1, r3
   1fed8:	ldr	r2, [sp, #16]
   1fedc:	mov	r3, ip
   1fee0:	bl	26cf4 <main@@Base+0x107d4>
   1fee4:	ldr	r1, [sp, #12]
   1fee8:	cmp	r1, r0
   1feec:	bne	1fefc <main@@Base+0x99dc>
   1fef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fef4:	str	r0, [fp, #-20]	; 0xffffffec
   1fef8:	b	1ff24 <main@@Base+0x9a04>
   1fefc:	vldr	s0, [sp, #48]	; 0x30
   1ff00:	ldr	r0, [fp, #8]
   1ff04:	vldr	s2, [r0]
   1ff08:	vadd.f32	s0, s2, s0
   1ff0c:	vstr	s0, [r0]
   1ff10:	ldr	r0, [sp, #32]
   1ff14:	cmp	r0, #0
   1ff18:	bne	1fdb4 <main@@Base+0x9894>
   1ff1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ff20:	str	r0, [fp, #-20]	; 0xffffffec
   1ff24:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ff28:	sub	sp, fp, #16
   1ff2c:	pop	{r4, r5, r6, sl, fp, pc}
   1ff30:	andeq	r0, r0, r0
   1ff34:	push	{fp, lr}
   1ff38:	mov	fp, sp
   1ff3c:	sub	sp, sp, #8
   1ff40:	str	r0, [sp, #4]
   1ff44:	vstr	s0, [sp]
   1ff48:	vldr	s0, [sp]
   1ff4c:	bl	26d7c <main@@Base+0x1085c>
   1ff50:	ldr	r0, [sp, #4]
   1ff54:	vstr	s0, [r0]
   1ff58:	mov	sp, fp
   1ff5c:	pop	{fp, pc}
   1ff60:	push	{r4, r5, fp, lr}
   1ff64:	add	fp, sp, #8
   1ff68:	sub	sp, sp, #56	; 0x38
   1ff6c:	str	r0, [fp, #-16]
   1ff70:	str	r1, [fp, #-20]	; 0xffffffec
   1ff74:	str	r2, [fp, #-24]	; 0xffffffe8
   1ff78:	str	r3, [fp, #-28]	; 0xffffffe4
   1ff7c:	mov	r0, #0
   1ff80:	str	r0, [sp, #28]
   1ff84:	str	r0, [sp, #24]
   1ff88:	movw	r0, #0
   1ff8c:	str	r0, [sp, #20]
   1ff90:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ff94:	str	r1, [sp, #16]
   1ff98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ff9c:	str	r0, [r1]
   1ffa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ffa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ffa8:	cmp	r0, r1
   1ffac:	bne	1ffbc <main@@Base+0x9a9c>
   1ffb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ffb4:	str	r0, [fp, #-12]
   1ffb8:	b	2002c <main@@Base+0x9b0c>
   1ffbc:	ldr	r0, [fp, #-16]
   1ffc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ffc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ffc8:	add	r3, sp, #20
   1ffcc:	add	ip, sp, #24
   1ffd0:	str	ip, [sp]
   1ffd4:	bl	35a5c <flatcc_json_parser_integer@@Base>
   1ffd8:	str	r0, [fp, #-20]	; 0xffffffec
   1ffdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ffe0:	ldr	r1, [sp, #16]
   1ffe4:	cmp	r0, r1
   1ffe8:	beq	20024 <main@@Base+0x9b04>
   1ffec:	ldr	r0, [fp, #-16]
   1fff0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fff4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fff8:	ldr	r3, [sp, #20]
   1fffc:	ldr	ip, [sp, #24]
   20000:	ldr	lr, [sp, #28]
   20004:	ldr	r4, [fp, #-28]	; 0xffffffe4
   20008:	mov	r5, sp
   2000c:	str	r4, [r5, #8]
   20010:	str	lr, [r5, #4]
   20014:	str	ip, [r5]
   20018:	bl	26da0 <main@@Base+0x10880>
   2001c:	str	r0, [fp, #-12]
   20020:	b	2002c <main@@Base+0x9b0c>
   20024:	ldr	r0, [fp, #-20]	; 0xffffffec
   20028:	str	r0, [fp, #-12]
   2002c:	ldr	r0, [fp, #-12]
   20030:	sub	sp, fp, #8
   20034:	pop	{r4, r5, fp, pc}
   20038:	push	{r4, r5, r6, sl, fp, lr}
   2003c:	add	fp, sp, #16
   20040:	sub	sp, sp, #80	; 0x50
   20044:	ldr	ip, [fp, #8]
   20048:	str	r0, [fp, #-24]	; 0xffffffe8
   2004c:	str	r1, [fp, #-28]	; 0xffffffe4
   20050:	str	r2, [fp, #-32]	; 0xffffffe0
   20054:	str	r3, [fp, #-36]	; 0xffffffdc
   20058:	movw	r0, #0
   2005c:	str	r0, [sp, #48]	; 0x30
   20060:	ldr	r1, [fp, #8]
   20064:	str	r0, [r1]
   20068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2006c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20070:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20074:	str	ip, [sp, #28]
   20078:	bl	224ec <main@@Base+0xbfcc>
   2007c:	str	r0, [fp, #-28]	; 0xffffffe4
   20080:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20084:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20088:	cmp	r0, r1
   2008c:	bne	2009c <main@@Base+0x9b7c>
   20090:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20094:	str	r0, [fp, #-20]	; 0xffffffec
   20098:	b	20210 <main@@Base+0x9cf0>
   2009c:	b	200a0 <main@@Base+0x9b80>
   200a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   200a4:	str	r0, [fp, #-40]	; 0xffffffd8
   200a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   200ac:	ldr	r0, [r0]
   200b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   200b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   200b8:	str	r2, [fp, #-44]	; 0xffffffd4
   200bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   200c0:	str	r0, [sp, #24]
   200c4:	mov	r0, r1
   200c8:	mov	r1, r2
   200cc:	mov	r2, r3
   200d0:	add	r3, sp, #36	; 0x24
   200d4:	add	ip, sp, #40	; 0x28
   200d8:	str	ip, [sp]
   200dc:	add	ip, sp, #32
   200e0:	str	ip, [sp, #4]
   200e4:	ldr	ip, [sp, #24]
   200e8:	blx	ip
   200ec:	str	r0, [fp, #-28]	; 0xffffffe4
   200f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   200f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   200f8:	cmp	r0, r1
   200fc:	bne	2010c <main@@Base+0x9bec>
   20100:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20104:	str	r0, [fp, #-20]	; 0xffffffec
   20108:	b	20210 <main@@Base+0x9cf0>
   2010c:	b	20110 <main@@Base+0x9bf0>
   20110:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20114:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20118:	cmp	r0, r1
   2011c:	movw	r0, #0
   20120:	str	r0, [sp, #20]
   20124:	bne	2014c <main@@Base+0x9c2c>
   20128:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2012c:	add	r1, r0, #4
   20130:	str	r1, [fp, #-40]	; 0xffffffd8
   20134:	ldr	r0, [r0, #4]
   20138:	movw	r1, #0
   2013c:	cmp	r0, r1
   20140:	movw	r0, #0
   20144:	movne	r0, #1
   20148:	str	r0, [sp, #20]
   2014c:	ldr	r0, [sp, #20]
   20150:	tst	r0, #1
   20154:	bne	200a8 <main@@Base+0x9b88>
   20158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2015c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20160:	cmp	r0, r1
   20164:	bne	20184 <main@@Base+0x9c64>
   20168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2016c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20170:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20174:	movw	r3, #23
   20178:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   2017c:	str	r0, [fp, #-20]	; 0xffffffec
   20180:	b	20210 <main@@Base+0x9cf0>
   20184:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20188:	mov	r1, r0
   2018c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20190:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20194:	ldr	ip, [sp, #36]	; 0x24
   20198:	ldr	lr, [sp, #40]	; 0x28
   2019c:	ldr	r4, [sp, #44]	; 0x2c
   201a0:	mov	r5, sp
   201a4:	add	r6, sp, #48	; 0x30
   201a8:	str	r6, [r5, #8]
   201ac:	str	r4, [r5, #4]
   201b0:	str	lr, [r5]
   201b4:	str	r0, [sp, #16]
   201b8:	mov	r0, r2
   201bc:	str	r1, [sp, #12]
   201c0:	mov	r1, r3
   201c4:	ldr	r2, [sp, #16]
   201c8:	mov	r3, ip
   201cc:	bl	26da0 <main@@Base+0x10880>
   201d0:	ldr	r1, [sp, #12]
   201d4:	cmp	r1, r0
   201d8:	bne	201e8 <main@@Base+0x9cc8>
   201dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   201e0:	str	r0, [fp, #-20]	; 0xffffffec
   201e4:	b	20210 <main@@Base+0x9cf0>
   201e8:	ldr	r0, [sp, #48]	; 0x30
   201ec:	ldr	r1, [fp, #8]
   201f0:	ldr	r2, [r1]
   201f4:	add	r0, r2, r0
   201f8:	str	r0, [r1]
   201fc:	ldr	r0, [sp, #32]
   20200:	cmp	r0, #0
   20204:	bne	200a0 <main@@Base+0x9b80>
   20208:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2020c:	str	r0, [fp, #-20]	; 0xffffffec
   20210:	ldr	r0, [fp, #-20]	; 0xffffffec
   20214:	sub	sp, fp, #16
   20218:	pop	{r4, r5, r6, sl, fp, pc}
   2021c:	push	{fp, lr}
   20220:	mov	fp, sp
   20224:	sub	sp, sp, #8
   20228:	str	r0, [sp, #4]
   2022c:	str	r1, [sp]
   20230:	ldr	r0, [sp]
   20234:	bl	26e8c <main@@Base+0x1096c>
   20238:	ldr	r1, [sp, #4]
   2023c:	str	r0, [r1]
   20240:	mov	sp, fp
   20244:	pop	{fp, pc}
   20248:	push	{r4, r5, fp, lr}
   2024c:	add	fp, sp, #8
   20250:	sub	sp, sp, #56	; 0x38
   20254:	str	r0, [fp, #-16]
   20258:	str	r1, [fp, #-20]	; 0xffffffec
   2025c:	str	r2, [fp, #-24]	; 0xffffffe8
   20260:	str	r3, [fp, #-28]	; 0xffffffe4
   20264:	mov	r0, #0
   20268:	str	r0, [sp, #28]
   2026c:	str	r0, [sp, #24]
   20270:	str	r0, [sp, #20]
   20274:	ldr	r1, [fp, #-20]	; 0xffffffec
   20278:	str	r1, [sp, #16]
   2027c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20280:	str	r0, [r1, #4]
   20284:	str	r0, [r1]
   20288:	ldr	r0, [fp, #-20]	; 0xffffffec
   2028c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20290:	cmp	r0, r1
   20294:	bne	202a4 <main@@Base+0x9d84>
   20298:	ldr	r0, [fp, #-20]	; 0xffffffec
   2029c:	str	r0, [fp, #-12]
   202a0:	b	20314 <main@@Base+0x9df4>
   202a4:	ldr	r0, [fp, #-16]
   202a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   202ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   202b0:	add	r3, sp, #20
   202b4:	add	ip, sp, #24
   202b8:	str	ip, [sp]
   202bc:	bl	35a5c <flatcc_json_parser_integer@@Base>
   202c0:	str	r0, [fp, #-20]	; 0xffffffec
   202c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   202c8:	ldr	r1, [sp, #16]
   202cc:	cmp	r0, r1
   202d0:	beq	2030c <main@@Base+0x9dec>
   202d4:	ldr	r0, [fp, #-16]
   202d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   202dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   202e0:	ldr	r3, [sp, #20]
   202e4:	ldr	ip, [sp, #24]
   202e8:	ldr	lr, [sp, #28]
   202ec:	ldr	r4, [fp, #-28]	; 0xffffffe4
   202f0:	mov	r5, sp
   202f4:	str	r4, [r5, #8]
   202f8:	str	lr, [r5, #4]
   202fc:	str	ip, [r5]
   20300:	bl	26ea0 <main@@Base+0x10980>
   20304:	str	r0, [fp, #-12]
   20308:	b	20314 <main@@Base+0x9df4>
   2030c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20310:	str	r0, [fp, #-12]
   20314:	ldr	r0, [fp, #-12]
   20318:	sub	sp, fp, #8
   2031c:	pop	{r4, r5, fp, pc}
   20320:	push	{r4, r5, r6, sl, fp, lr}
   20324:	add	fp, sp, #16
   20328:	sub	sp, sp, #88	; 0x58
   2032c:	ldr	ip, [fp, #8]
   20330:	str	r0, [fp, #-24]	; 0xffffffe8
   20334:	str	r1, [fp, #-28]	; 0xffffffe4
   20338:	str	r2, [fp, #-32]	; 0xffffffe0
   2033c:	str	r3, [fp, #-36]	; 0xffffffdc
   20340:	mov	r0, #0
   20344:	str	r0, [sp, #52]	; 0x34
   20348:	str	r0, [sp, #48]	; 0x30
   2034c:	ldr	r1, [fp, #8]
   20350:	str	r0, [r1, #4]
   20354:	str	r0, [r1]
   20358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2035c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20360:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20364:	str	ip, [sp, #28]
   20368:	bl	224ec <main@@Base+0xbfcc>
   2036c:	str	r0, [fp, #-28]	; 0xffffffe4
   20370:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20374:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20378:	cmp	r0, r1
   2037c:	bne	2038c <main@@Base+0x9e6c>
   20380:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20384:	str	r0, [fp, #-20]	; 0xffffffec
   20388:	b	20510 <main@@Base+0x9ff0>
   2038c:	b	20390 <main@@Base+0x9e70>
   20390:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20394:	str	r0, [fp, #-40]	; 0xffffffd8
   20398:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2039c:	ldr	r0, [r0]
   203a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   203a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   203a8:	str	r2, [fp, #-44]	; 0xffffffd4
   203ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   203b0:	str	r0, [sp, #24]
   203b4:	mov	r0, r1
   203b8:	mov	r1, r2
   203bc:	mov	r2, r3
   203c0:	add	r3, sp, #36	; 0x24
   203c4:	add	ip, sp, #40	; 0x28
   203c8:	str	ip, [sp]
   203cc:	add	ip, sp, #32
   203d0:	str	ip, [sp, #4]
   203d4:	ldr	ip, [sp, #24]
   203d8:	blx	ip
   203dc:	str	r0, [fp, #-28]	; 0xffffffe4
   203e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   203e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   203e8:	cmp	r0, r1
   203ec:	bne	203fc <main@@Base+0x9edc>
   203f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   203f4:	str	r0, [fp, #-20]	; 0xffffffec
   203f8:	b	20510 <main@@Base+0x9ff0>
   203fc:	b	20400 <main@@Base+0x9ee0>
   20400:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20404:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20408:	cmp	r0, r1
   2040c:	movw	r0, #0
   20410:	str	r0, [sp, #20]
   20414:	bne	2043c <main@@Base+0x9f1c>
   20418:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2041c:	add	r1, r0, #4
   20420:	str	r1, [fp, #-40]	; 0xffffffd8
   20424:	ldr	r0, [r0, #4]
   20428:	movw	r1, #0
   2042c:	cmp	r0, r1
   20430:	movw	r0, #0
   20434:	movne	r0, #1
   20438:	str	r0, [sp, #20]
   2043c:	ldr	r0, [sp, #20]
   20440:	tst	r0, #1
   20444:	bne	20398 <main@@Base+0x9e78>
   20448:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2044c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20450:	cmp	r0, r1
   20454:	bne	20474 <main@@Base+0x9f54>
   20458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2045c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20460:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20464:	movw	r3, #23
   20468:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   2046c:	str	r0, [fp, #-20]	; 0xffffffec
   20470:	b	20510 <main@@Base+0x9ff0>
   20474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20478:	mov	r1, r0
   2047c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20480:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20484:	ldr	ip, [sp, #36]	; 0x24
   20488:	ldr	lr, [sp, #40]	; 0x28
   2048c:	ldr	r4, [sp, #44]	; 0x2c
   20490:	mov	r5, sp
   20494:	add	r6, sp, #48	; 0x30
   20498:	str	r6, [r5, #8]
   2049c:	str	r4, [r5, #4]
   204a0:	str	lr, [r5]
   204a4:	str	r0, [sp, #16]
   204a8:	mov	r0, r2
   204ac:	str	r1, [sp, #12]
   204b0:	mov	r1, r3
   204b4:	ldr	r2, [sp, #16]
   204b8:	mov	r3, ip
   204bc:	bl	26ea0 <main@@Base+0x10980>
   204c0:	ldr	r1, [sp, #12]
   204c4:	cmp	r1, r0
   204c8:	bne	204d8 <main@@Base+0x9fb8>
   204cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   204d0:	str	r0, [fp, #-20]	; 0xffffffec
   204d4:	b	20510 <main@@Base+0x9ff0>
   204d8:	ldr	r0, [sp, #48]	; 0x30
   204dc:	ldr	r1, [sp, #52]	; 0x34
   204e0:	ldr	r2, [fp, #8]
   204e4:	ldr	r3, [r2]
   204e8:	ldr	ip, [r2, #4]
   204ec:	adds	r0, r3, r0
   204f0:	adc	r1, ip, r1
   204f4:	str	r0, [r2]
   204f8:	str	r1, [r2, #4]
   204fc:	ldr	r0, [sp, #32]
   20500:	cmp	r0, #0
   20504:	bne	20390 <main@@Base+0x9e70>
   20508:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2050c:	str	r0, [fp, #-20]	; 0xffffffec
   20510:	ldr	r0, [fp, #-20]	; 0xffffffec
   20514:	sub	sp, fp, #16
   20518:	pop	{r4, r5, r6, sl, fp, pc}
   2051c:	push	{fp, lr}
   20520:	mov	fp, sp
   20524:	sub	sp, sp, #16
   20528:	str	r0, [fp, #-4]
   2052c:	str	r3, [sp, #4]
   20530:	str	r2, [sp]
   20534:	ldr	r0, [sp]
   20538:	ldr	r1, [sp, #4]
   2053c:	bl	26f90 <main@@Base+0x10a70>
   20540:	ldr	r2, [fp, #-4]
   20544:	str	r1, [r2, #4]
   20548:	str	r0, [r2]
   2054c:	mov	sp, fp
   20550:	pop	{fp, pc}
   20554:	push	{r4, r5, fp, lr}
   20558:	add	fp, sp, #8
   2055c:	sub	sp, sp, #56	; 0x38
   20560:	str	r0, [fp, #-16]
   20564:	str	r1, [fp, #-20]	; 0xffffffec
   20568:	str	r2, [fp, #-24]	; 0xffffffe8
   2056c:	str	r3, [fp, #-28]	; 0xffffffe4
   20570:	mov	r0, #0
   20574:	str	r0, [sp, #28]
   20578:	str	r0, [sp, #24]
   2057c:	movw	r0, #0
   20580:	str	r0, [sp, #20]
   20584:	ldr	r1, [fp, #-20]	; 0xffffffec
   20588:	str	r1, [sp, #16]
   2058c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20590:	str	r0, [r1]
   20594:	ldr	r0, [fp, #-20]	; 0xffffffec
   20598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2059c:	cmp	r0, r1
   205a0:	bne	205b0 <main@@Base+0xa090>
   205a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   205a8:	str	r0, [fp, #-12]
   205ac:	b	20620 <main@@Base+0xa100>
   205b0:	ldr	r0, [fp, #-16]
   205b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   205b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   205bc:	add	r3, sp, #20
   205c0:	add	ip, sp, #24
   205c4:	str	ip, [sp]
   205c8:	bl	35a5c <flatcc_json_parser_integer@@Base>
   205cc:	str	r0, [fp, #-20]	; 0xffffffec
   205d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   205d4:	ldr	r1, [sp, #16]
   205d8:	cmp	r0, r1
   205dc:	beq	20618 <main@@Base+0xa0f8>
   205e0:	ldr	r0, [fp, #-16]
   205e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   205e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   205ec:	ldr	r3, [sp, #20]
   205f0:	ldr	ip, [sp, #24]
   205f4:	ldr	lr, [sp, #28]
   205f8:	ldr	r4, [fp, #-28]	; 0xffffffe4
   205fc:	mov	r5, sp
   20600:	str	r4, [r5, #8]
   20604:	str	lr, [r5, #4]
   20608:	str	ip, [r5]
   2060c:	bl	26fac <main@@Base+0x10a8c>
   20610:	str	r0, [fp, #-12]
   20614:	b	20620 <main@@Base+0xa100>
   20618:	ldr	r0, [fp, #-20]	; 0xffffffec
   2061c:	str	r0, [fp, #-12]
   20620:	ldr	r0, [fp, #-12]
   20624:	sub	sp, fp, #8
   20628:	pop	{r4, r5, fp, pc}
   2062c:	push	{r4, r5, r6, sl, fp, lr}
   20630:	add	fp, sp, #16
   20634:	sub	sp, sp, #80	; 0x50
   20638:	ldr	ip, [fp, #8]
   2063c:	str	r0, [fp, #-24]	; 0xffffffe8
   20640:	str	r1, [fp, #-28]	; 0xffffffe4
   20644:	str	r2, [fp, #-32]	; 0xffffffe0
   20648:	str	r3, [fp, #-36]	; 0xffffffdc
   2064c:	movw	r0, #0
   20650:	str	r0, [sp, #48]	; 0x30
   20654:	ldr	r1, [fp, #8]
   20658:	str	r0, [r1]
   2065c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20660:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20664:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20668:	str	ip, [sp, #28]
   2066c:	bl	224ec <main@@Base+0xbfcc>
   20670:	str	r0, [fp, #-28]	; 0xffffffe4
   20674:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20678:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2067c:	cmp	r0, r1
   20680:	bne	20690 <main@@Base+0xa170>
   20684:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20688:	str	r0, [fp, #-20]	; 0xffffffec
   2068c:	b	20804 <main@@Base+0xa2e4>
   20690:	b	20694 <main@@Base+0xa174>
   20694:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20698:	str	r0, [fp, #-40]	; 0xffffffd8
   2069c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   206a0:	ldr	r0, [r0]
   206a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   206a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   206ac:	str	r2, [fp, #-44]	; 0xffffffd4
   206b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   206b4:	str	r0, [sp, #24]
   206b8:	mov	r0, r1
   206bc:	mov	r1, r2
   206c0:	mov	r2, r3
   206c4:	add	r3, sp, #36	; 0x24
   206c8:	add	ip, sp, #40	; 0x28
   206cc:	str	ip, [sp]
   206d0:	add	ip, sp, #32
   206d4:	str	ip, [sp, #4]
   206d8:	ldr	ip, [sp, #24]
   206dc:	blx	ip
   206e0:	str	r0, [fp, #-28]	; 0xffffffe4
   206e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   206e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   206ec:	cmp	r0, r1
   206f0:	bne	20700 <main@@Base+0xa1e0>
   206f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   206f8:	str	r0, [fp, #-20]	; 0xffffffec
   206fc:	b	20804 <main@@Base+0xa2e4>
   20700:	b	20704 <main@@Base+0xa1e4>
   20704:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20708:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2070c:	cmp	r0, r1
   20710:	movw	r0, #0
   20714:	str	r0, [sp, #20]
   20718:	bne	20740 <main@@Base+0xa220>
   2071c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20720:	add	r1, r0, #4
   20724:	str	r1, [fp, #-40]	; 0xffffffd8
   20728:	ldr	r0, [r0, #4]
   2072c:	movw	r1, #0
   20730:	cmp	r0, r1
   20734:	movw	r0, #0
   20738:	movne	r0, #1
   2073c:	str	r0, [sp, #20]
   20740:	ldr	r0, [sp, #20]
   20744:	tst	r0, #1
   20748:	bne	2069c <main@@Base+0xa17c>
   2074c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20750:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20754:	cmp	r0, r1
   20758:	bne	20778 <main@@Base+0xa258>
   2075c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20760:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20764:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20768:	movw	r3, #23
   2076c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   20770:	str	r0, [fp, #-20]	; 0xffffffec
   20774:	b	20804 <main@@Base+0xa2e4>
   20778:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2077c:	mov	r1, r0
   20780:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20784:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20788:	ldr	ip, [sp, #36]	; 0x24
   2078c:	ldr	lr, [sp, #40]	; 0x28
   20790:	ldr	r4, [sp, #44]	; 0x2c
   20794:	mov	r5, sp
   20798:	add	r6, sp, #48	; 0x30
   2079c:	str	r6, [r5, #8]
   207a0:	str	r4, [r5, #4]
   207a4:	str	lr, [r5]
   207a8:	str	r0, [sp, #16]
   207ac:	mov	r0, r2
   207b0:	str	r1, [sp, #12]
   207b4:	mov	r1, r3
   207b8:	ldr	r2, [sp, #16]
   207bc:	mov	r3, ip
   207c0:	bl	26fac <main@@Base+0x10a8c>
   207c4:	ldr	r1, [sp, #12]
   207c8:	cmp	r1, r0
   207cc:	bne	207dc <main@@Base+0xa2bc>
   207d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   207d4:	str	r0, [fp, #-20]	; 0xffffffec
   207d8:	b	20804 <main@@Base+0xa2e4>
   207dc:	ldr	r0, [sp, #48]	; 0x30
   207e0:	ldr	r1, [fp, #8]
   207e4:	ldr	r2, [r1]
   207e8:	add	r0, r2, r0
   207ec:	str	r0, [r1]
   207f0:	ldr	r0, [sp, #32]
   207f4:	cmp	r0, #0
   207f8:	bne	20694 <main@@Base+0xa174>
   207fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20800:	str	r0, [fp, #-20]	; 0xffffffec
   20804:	ldr	r0, [fp, #-20]	; 0xffffffec
   20808:	sub	sp, fp, #16
   2080c:	pop	{r4, r5, r6, sl, fp, pc}
   20810:	push	{fp, lr}
   20814:	mov	fp, sp
   20818:	sub	sp, sp, #8
   2081c:	str	r0, [sp, #4]
   20820:	str	r1, [sp]
   20824:	ldr	r0, [sp]
   20828:	bl	27054 <main@@Base+0x10b34>
   2082c:	ldr	r1, [sp, #4]
   20830:	str	r0, [r1]
   20834:	mov	sp, fp
   20838:	pop	{fp, pc}
   2083c:	push	{r4, r5, fp, lr}
   20840:	add	fp, sp, #8
   20844:	sub	sp, sp, #56	; 0x38
   20848:	str	r0, [fp, #-16]
   2084c:	str	r1, [fp, #-20]	; 0xffffffec
   20850:	str	r2, [fp, #-24]	; 0xffffffe8
   20854:	str	r3, [fp, #-28]	; 0xffffffe4
   20858:	mov	r0, #0
   2085c:	str	r0, [sp, #28]
   20860:	str	r0, [sp, #24]
   20864:	str	r0, [sp, #20]
   20868:	ldr	r1, [fp, #-20]	; 0xffffffec
   2086c:	str	r1, [sp, #16]
   20870:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20874:	str	r0, [r1, #4]
   20878:	str	r0, [r1]
   2087c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20880:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20884:	cmp	r0, r1
   20888:	bne	20898 <main@@Base+0xa378>
   2088c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20890:	str	r0, [fp, #-12]
   20894:	b	20908 <main@@Base+0xa3e8>
   20898:	ldr	r0, [fp, #-16]
   2089c:	ldr	r1, [fp, #-20]	; 0xffffffec
   208a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   208a4:	add	r3, sp, #20
   208a8:	add	ip, sp, #24
   208ac:	str	ip, [sp]
   208b0:	bl	35a5c <flatcc_json_parser_integer@@Base>
   208b4:	str	r0, [fp, #-20]	; 0xffffffec
   208b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   208bc:	ldr	r1, [sp, #16]
   208c0:	cmp	r0, r1
   208c4:	beq	20900 <main@@Base+0xa3e0>
   208c8:	ldr	r0, [fp, #-16]
   208cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   208d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   208d4:	ldr	r3, [sp, #20]
   208d8:	ldr	ip, [sp, #24]
   208dc:	ldr	lr, [sp, #28]
   208e0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   208e4:	mov	r5, sp
   208e8:	str	r4, [r5, #8]
   208ec:	str	lr, [r5, #4]
   208f0:	str	ip, [r5]
   208f4:	bl	27068 <main@@Base+0x10b48>
   208f8:	str	r0, [fp, #-12]
   208fc:	b	20908 <main@@Base+0xa3e8>
   20900:	ldr	r0, [fp, #-20]	; 0xffffffec
   20904:	str	r0, [fp, #-12]
   20908:	ldr	r0, [fp, #-12]
   2090c:	sub	sp, fp, #8
   20910:	pop	{r4, r5, fp, pc}
   20914:	push	{r4, r5, r6, sl, fp, lr}
   20918:	add	fp, sp, #16
   2091c:	sub	sp, sp, #88	; 0x58
   20920:	ldr	ip, [fp, #8]
   20924:	str	r0, [fp, #-24]	; 0xffffffe8
   20928:	str	r1, [fp, #-28]	; 0xffffffe4
   2092c:	str	r2, [fp, #-32]	; 0xffffffe0
   20930:	str	r3, [fp, #-36]	; 0xffffffdc
   20934:	mov	r0, #0
   20938:	str	r0, [sp, #52]	; 0x34
   2093c:	str	r0, [sp, #48]	; 0x30
   20940:	ldr	r1, [fp, #8]
   20944:	str	r0, [r1, #4]
   20948:	str	r0, [r1]
   2094c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20950:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20954:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20958:	str	ip, [sp, #28]
   2095c:	bl	224ec <main@@Base+0xbfcc>
   20960:	str	r0, [fp, #-28]	; 0xffffffe4
   20964:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20968:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2096c:	cmp	r0, r1
   20970:	bne	20980 <main@@Base+0xa460>
   20974:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20978:	str	r0, [fp, #-20]	; 0xffffffec
   2097c:	b	20b04 <main@@Base+0xa5e4>
   20980:	b	20984 <main@@Base+0xa464>
   20984:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20988:	str	r0, [fp, #-40]	; 0xffffffd8
   2098c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20990:	ldr	r0, [r0]
   20994:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20998:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2099c:	str	r2, [fp, #-44]	; 0xffffffd4
   209a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   209a4:	str	r0, [sp, #24]
   209a8:	mov	r0, r1
   209ac:	mov	r1, r2
   209b0:	mov	r2, r3
   209b4:	add	r3, sp, #36	; 0x24
   209b8:	add	ip, sp, #40	; 0x28
   209bc:	str	ip, [sp]
   209c0:	add	ip, sp, #32
   209c4:	str	ip, [sp, #4]
   209c8:	ldr	ip, [sp, #24]
   209cc:	blx	ip
   209d0:	str	r0, [fp, #-28]	; 0xffffffe4
   209d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   209d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   209dc:	cmp	r0, r1
   209e0:	bne	209f0 <main@@Base+0xa4d0>
   209e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   209e8:	str	r0, [fp, #-20]	; 0xffffffec
   209ec:	b	20b04 <main@@Base+0xa5e4>
   209f0:	b	209f4 <main@@Base+0xa4d4>
   209f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   209f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   209fc:	cmp	r0, r1
   20a00:	movw	r0, #0
   20a04:	str	r0, [sp, #20]
   20a08:	bne	20a30 <main@@Base+0xa510>
   20a0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20a10:	add	r1, r0, #4
   20a14:	str	r1, [fp, #-40]	; 0xffffffd8
   20a18:	ldr	r0, [r0, #4]
   20a1c:	movw	r1, #0
   20a20:	cmp	r0, r1
   20a24:	movw	r0, #0
   20a28:	movne	r0, #1
   20a2c:	str	r0, [sp, #20]
   20a30:	ldr	r0, [sp, #20]
   20a34:	tst	r0, #1
   20a38:	bne	2098c <main@@Base+0xa46c>
   20a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20a40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20a44:	cmp	r0, r1
   20a48:	bne	20a68 <main@@Base+0xa548>
   20a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20a50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20a54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20a58:	movw	r3, #23
   20a5c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   20a60:	str	r0, [fp, #-20]	; 0xffffffec
   20a64:	b	20b04 <main@@Base+0xa5e4>
   20a68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20a6c:	mov	r1, r0
   20a70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20a74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20a78:	ldr	ip, [sp, #36]	; 0x24
   20a7c:	ldr	lr, [sp, #40]	; 0x28
   20a80:	ldr	r4, [sp, #44]	; 0x2c
   20a84:	mov	r5, sp
   20a88:	add	r6, sp, #48	; 0x30
   20a8c:	str	r6, [r5, #8]
   20a90:	str	r4, [r5, #4]
   20a94:	str	lr, [r5]
   20a98:	str	r0, [sp, #16]
   20a9c:	mov	r0, r2
   20aa0:	str	r1, [sp, #12]
   20aa4:	mov	r1, r3
   20aa8:	ldr	r2, [sp, #16]
   20aac:	mov	r3, ip
   20ab0:	bl	27068 <main@@Base+0x10b48>
   20ab4:	ldr	r1, [sp, #12]
   20ab8:	cmp	r1, r0
   20abc:	bne	20acc <main@@Base+0xa5ac>
   20ac0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20ac4:	str	r0, [fp, #-20]	; 0xffffffec
   20ac8:	b	20b04 <main@@Base+0xa5e4>
   20acc:	ldr	r0, [sp, #48]	; 0x30
   20ad0:	ldr	r1, [sp, #52]	; 0x34
   20ad4:	ldr	r2, [fp, #8]
   20ad8:	ldr	r3, [r2]
   20adc:	ldr	ip, [r2, #4]
   20ae0:	adds	r0, r3, r0
   20ae4:	adc	r1, ip, r1
   20ae8:	str	r0, [r2]
   20aec:	str	r1, [r2, #4]
   20af0:	ldr	r0, [sp, #32]
   20af4:	cmp	r0, #0
   20af8:	bne	20984 <main@@Base+0xa464>
   20afc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20b00:	str	r0, [fp, #-20]	; 0xffffffec
   20b04:	ldr	r0, [fp, #-20]	; 0xffffffec
   20b08:	sub	sp, fp, #16
   20b0c:	pop	{r4, r5, r6, sl, fp, pc}
   20b10:	push	{fp, lr}
   20b14:	mov	fp, sp
   20b18:	sub	sp, sp, #16
   20b1c:	str	r0, [fp, #-4]
   20b20:	str	r3, [sp, #4]
   20b24:	str	r2, [sp]
   20b28:	ldr	r0, [sp]
   20b2c:	ldr	r1, [sp, #4]
   20b30:	bl	270ec <main@@Base+0x10bcc>
   20b34:	ldr	r2, [fp, #-4]
   20b38:	str	r1, [r2, #4]
   20b3c:	str	r0, [r2]
   20b40:	mov	sp, fp
   20b44:	pop	{fp, pc}
   20b48:	push	{r4, r5, r6, sl, fp, lr}
   20b4c:	add	fp, sp, #16
   20b50:	sub	sp, sp, #88	; 0x58
   20b54:	ldr	ip, [fp, #8]
   20b58:	vldr	d16, [pc, #464]	; 20d30 <main@@Base+0xa810>
   20b5c:	str	r0, [fp, #-24]	; 0xffffffe8
   20b60:	str	r1, [fp, #-28]	; 0xffffffe4
   20b64:	str	r2, [fp, #-32]	; 0xffffffe0
   20b68:	str	r3, [fp, #-36]	; 0xffffffdc
   20b6c:	vstr	d16, [sp, #48]	; 0x30
   20b70:	ldr	r0, [fp, #8]
   20b74:	vstr	d16, [r0]
   20b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20b7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20b80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20b84:	str	ip, [sp, #28]
   20b88:	bl	224ec <main@@Base+0xbfcc>
   20b8c:	str	r0, [fp, #-28]	; 0xffffffe4
   20b90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20b94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20b98:	cmp	r0, r1
   20b9c:	bne	20bac <main@@Base+0xa68c>
   20ba0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20ba4:	str	r0, [fp, #-20]	; 0xffffffec
   20ba8:	b	20d20 <main@@Base+0xa800>
   20bac:	b	20bb0 <main@@Base+0xa690>
   20bb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20bb4:	str	r0, [fp, #-40]	; 0xffffffd8
   20bb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20bbc:	ldr	r0, [r0]
   20bc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20bc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20bc8:	str	r2, [fp, #-44]	; 0xffffffd4
   20bcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20bd0:	str	r0, [sp, #24]
   20bd4:	mov	r0, r1
   20bd8:	mov	r1, r2
   20bdc:	mov	r2, r3
   20be0:	add	r3, sp, #36	; 0x24
   20be4:	add	ip, sp, #40	; 0x28
   20be8:	str	ip, [sp]
   20bec:	add	ip, sp, #32
   20bf0:	str	ip, [sp, #4]
   20bf4:	ldr	ip, [sp, #24]
   20bf8:	blx	ip
   20bfc:	str	r0, [fp, #-28]	; 0xffffffe4
   20c00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20c04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20c08:	cmp	r0, r1
   20c0c:	bne	20c1c <main@@Base+0xa6fc>
   20c10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20c14:	str	r0, [fp, #-20]	; 0xffffffec
   20c18:	b	20d20 <main@@Base+0xa800>
   20c1c:	b	20c20 <main@@Base+0xa700>
   20c20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20c24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20c28:	cmp	r0, r1
   20c2c:	movw	r0, #0
   20c30:	str	r0, [sp, #20]
   20c34:	bne	20c5c <main@@Base+0xa73c>
   20c38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20c3c:	add	r1, r0, #4
   20c40:	str	r1, [fp, #-40]	; 0xffffffd8
   20c44:	ldr	r0, [r0, #4]
   20c48:	movw	r1, #0
   20c4c:	cmp	r0, r1
   20c50:	movw	r0, #0
   20c54:	movne	r0, #1
   20c58:	str	r0, [sp, #20]
   20c5c:	ldr	r0, [sp, #20]
   20c60:	tst	r0, #1
   20c64:	bne	20bb8 <main@@Base+0xa698>
   20c68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20c6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20c70:	cmp	r0, r1
   20c74:	bne	20c94 <main@@Base+0xa774>
   20c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20c7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20c80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20c84:	movw	r3, #23
   20c88:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   20c8c:	str	r0, [fp, #-20]	; 0xffffffec
   20c90:	b	20d20 <main@@Base+0xa800>
   20c94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20c98:	mov	r1, r0
   20c9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20ca0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20ca4:	ldr	ip, [sp, #36]	; 0x24
   20ca8:	ldr	lr, [sp, #40]	; 0x28
   20cac:	ldr	r4, [sp, #44]	; 0x2c
   20cb0:	mov	r5, sp
   20cb4:	add	r6, sp, #48	; 0x30
   20cb8:	str	r6, [r5, #8]
   20cbc:	str	r4, [r5, #4]
   20cc0:	str	lr, [r5]
   20cc4:	str	r0, [sp, #16]
   20cc8:	mov	r0, r2
   20ccc:	str	r1, [sp, #12]
   20cd0:	mov	r1, r3
   20cd4:	ldr	r2, [sp, #16]
   20cd8:	mov	r3, ip
   20cdc:	bl	27108 <main@@Base+0x10be8>
   20ce0:	ldr	r1, [sp, #12]
   20ce4:	cmp	r1, r0
   20ce8:	bne	20cf8 <main@@Base+0xa7d8>
   20cec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20cf0:	str	r0, [fp, #-20]	; 0xffffffec
   20cf4:	b	20d20 <main@@Base+0xa800>
   20cf8:	vldr	d16, [sp, #48]	; 0x30
   20cfc:	ldr	r0, [fp, #8]
   20d00:	vldr	d17, [r0]
   20d04:	vadd.f64	d16, d17, d16
   20d08:	vstr	d16, [r0]
   20d0c:	ldr	r0, [sp, #32]
   20d10:	cmp	r0, #0
   20d14:	bne	20bb0 <main@@Base+0xa690>
   20d18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20d1c:	str	r0, [fp, #-20]	; 0xffffffec
   20d20:	ldr	r0, [fp, #-20]	; 0xffffffec
   20d24:	sub	sp, fp, #16
   20d28:	pop	{r4, r5, r6, sl, fp, pc}
   20d2c:	nop	{0}
	...
   20d38:	push	{fp, lr}
   20d3c:	mov	fp, sp
   20d40:	sub	sp, sp, #16
   20d44:	str	r0, [fp, #-4]
   20d48:	vstr	d0, [sp]
   20d4c:	vldr	d0, [sp]
   20d50:	bl	27190 <main@@Base+0x10c70>
   20d54:	ldr	r0, [fp, #-4]
   20d58:	vstr	d0, [r0]
   20d5c:	mov	sp, fp
   20d60:	pop	{fp, pc}
   20d64:	push	{fp, lr}
   20d68:	mov	fp, sp
   20d6c:	sub	sp, sp, #24
   20d70:	str	r0, [fp, #-8]
   20d74:	str	r1, [sp, #12]
   20d78:	str	r2, [sp, #8]
   20d7c:	str	r3, [sp, #4]
   20d80:	ldr	r0, [fp, #-8]
   20d84:	ldr	r1, [sp, #12]
   20d88:	ldr	r2, [sp, #8]
   20d8c:	bl	20ec8 <main@@Base+0xa9a8>
   20d90:	str	r0, [sp, #12]
   20d94:	ldr	r0, [sp, #12]
   20d98:	ldr	r1, [sp, #8]
   20d9c:	cmp	r0, r1
   20da0:	bne	20dbc <main@@Base+0xa89c>
   20da4:	ldr	r0, [sp, #4]
   20da8:	movw	r1, #0
   20dac:	str	r1, [r0]
   20db0:	ldr	r0, [sp, #12]
   20db4:	str	r0, [fp, #-4]
   20db8:	b	20ebc <main@@Base+0xa99c>
   20dbc:	ldr	r0, [sp, #12]
   20dc0:	ldrb	r0, [r0]
   20dc4:	cmp	r0, #44	; 0x2c
   20dc8:	beq	20e20 <main@@Base+0xa900>
   20dcc:	ldr	r0, [sp, #4]
   20dd0:	movw	r1, #0
   20dd4:	str	r1, [r0]
   20dd8:	ldr	r0, [sp, #12]
   20ddc:	ldrb	r0, [r0]
   20de0:	cmp	r0, #125	; 0x7d
   20de4:	beq	20e04 <main@@Base+0xa8e4>
   20de8:	ldr	r0, [fp, #-8]
   20dec:	ldr	r1, [sp, #12]
   20df0:	ldr	r2, [sp, #8]
   20df4:	movw	r3, #10
   20df8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   20dfc:	str	r0, [fp, #-4]
   20e00:	b	20ebc <main@@Base+0xa99c>
   20e04:	ldr	r0, [fp, #-8]
   20e08:	ldr	r1, [sp, #12]
   20e0c:	add	r1, r1, #1
   20e10:	ldr	r2, [sp, #8]
   20e14:	bl	20ec8 <main@@Base+0xa9a8>
   20e18:	str	r0, [fp, #-4]
   20e1c:	b	20ebc <main@@Base+0xa99c>
   20e20:	ldr	r0, [fp, #-8]
   20e24:	ldr	r1, [sp, #12]
   20e28:	add	r1, r1, #1
   20e2c:	ldr	r2, [sp, #8]
   20e30:	bl	20ec8 <main@@Base+0xa9a8>
   20e34:	str	r0, [sp, #12]
   20e38:	ldr	r0, [sp, #12]
   20e3c:	ldr	r1, [sp, #8]
   20e40:	cmp	r0, r1
   20e44:	bne	20e70 <main@@Base+0xa950>
   20e48:	ldr	r0, [sp, #4]
   20e4c:	movw	r1, #0
   20e50:	str	r1, [r0]
   20e54:	ldr	r0, [fp, #-8]
   20e58:	ldr	r1, [sp, #12]
   20e5c:	ldr	r2, [sp, #8]
   20e60:	movw	r3, #10
   20e64:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   20e68:	str	r0, [fp, #-4]
   20e6c:	b	20ebc <main@@Base+0xa99c>
   20e70:	ldr	r0, [sp, #12]
   20e74:	ldrb	r0, [r0]
   20e78:	cmp	r0, #125	; 0x7d
   20e7c:	bne	20ea8 <main@@Base+0xa988>
   20e80:	ldr	r0, [sp, #4]
   20e84:	movw	r1, #0
   20e88:	str	r1, [r0]
   20e8c:	ldr	r0, [fp, #-8]
   20e90:	ldr	r1, [sp, #12]
   20e94:	add	r1, r1, #1
   20e98:	ldr	r2, [sp, #8]
   20e9c:	bl	20ec8 <main@@Base+0xa9a8>
   20ea0:	str	r0, [fp, #-4]
   20ea4:	b	20ebc <main@@Base+0xa99c>
   20ea8:	ldr	r0, [sp, #4]
   20eac:	movw	r1, #1
   20eb0:	str	r1, [r0]
   20eb4:	ldr	r0, [sp, #12]
   20eb8:	str	r0, [fp, #-4]
   20ebc:	ldr	r0, [fp, #-4]
   20ec0:	mov	sp, fp
   20ec4:	pop	{fp, pc}
   20ec8:	push	{fp, lr}
   20ecc:	mov	fp, sp
   20ed0:	sub	sp, sp, #16
   20ed4:	str	r0, [sp, #8]
   20ed8:	str	r1, [sp, #4]
   20edc:	str	r2, [sp]
   20ee0:	ldr	r0, [sp]
   20ee4:	ldr	r1, [sp, #4]
   20ee8:	sub	r0, r0, r1
   20eec:	cmp	r0, #1
   20ef0:	ble	20f44 <main@@Base+0xaa24>
   20ef4:	ldr	r0, [sp, #4]
   20ef8:	ldrb	r0, [r0]
   20efc:	cmp	r0, #32
   20f00:	ble	20f10 <main@@Base+0xa9f0>
   20f04:	ldr	r0, [sp, #4]
   20f08:	str	r0, [fp, #-4]
   20f0c:	b	20f58 <main@@Base+0xaa38>
   20f10:	ldr	r0, [sp, #4]
   20f14:	ldrb	r0, [r0]
   20f18:	cmp	r0, #32
   20f1c:	bne	20f40 <main@@Base+0xaa20>
   20f20:	ldr	r0, [sp, #4]
   20f24:	ldrb	r0, [r0, #1]
   20f28:	cmp	r0, #32
   20f2c:	ble	20f40 <main@@Base+0xaa20>
   20f30:	ldr	r0, [sp, #4]
   20f34:	add	r0, r0, #1
   20f38:	str	r0, [fp, #-4]
   20f3c:	b	20f58 <main@@Base+0xaa38>
   20f40:	b	20f44 <main@@Base+0xaa24>
   20f44:	ldr	r0, [sp, #8]
   20f48:	ldr	r1, [sp, #4]
   20f4c:	ldr	r2, [sp]
   20f50:	bl	33578 <flatcc_json_parser_space_ext@@Base>
   20f54:	str	r0, [fp, #-4]
   20f58:	ldr	r0, [fp, #-4]
   20f5c:	mov	sp, fp
   20f60:	pop	{fp, pc}
   20f64:	sub	sp, sp, #24
   20f68:	str	r0, [sp, #20]
   20f6c:	str	r1, [sp, #16]
   20f70:	mov	r0, #0
   20f74:	str	r0, [sp, #12]
   20f78:	str	r0, [sp, #8]
   20f7c:	ldr	r0, [sp, #16]
   20f80:	ldr	r1, [sp, #20]
   20f84:	sub	r0, r0, r1
   20f88:	str	r0, [sp, #4]
   20f8c:	ldr	r0, [sp, #4]
   20f90:	cmp	r0, #8
   20f94:	bls	20fa0 <main@@Base+0xaa80>
   20f98:	movw	r0, #8
   20f9c:	str	r0, [sp, #4]
   20fa0:	ldr	r0, [sp, #4]
   20fa4:	cmp	r0, #8
   20fa8:	str	r0, [sp]
   20fac:	bhi	210c8 <main@@Base+0xaba8>
   20fb0:	add	r0, pc, #8
   20fb4:	ldr	r1, [sp]
   20fb8:	ldr	r2, [r0, r1, lsl #2]
   20fbc:	add	pc, r0, r2
   20fc0:	andeq	r0, r0, r4, lsl #2
   20fc4:	andeq	r0, r0, r8, ror #1
   20fc8:	andeq	r0, r0, ip, asr #1
   20fcc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   20fd0:	muleq	r0, r4, r0
   20fd4:	andeq	r0, r0, r8, ror r0
   20fd8:	andeq	r0, r0, ip, asr r0
   20fdc:	andeq	r0, r0, r0, asr #32
   20fe0:	andeq	r0, r0, r4, lsr #32
   20fe4:	ldr	r0, [sp, #20]
   20fe8:	ldrb	r0, [r0, #7]
   20fec:	ldr	r1, [sp, #8]
   20ff0:	ldr	r2, [sp, #12]
   20ff4:	orr	r0, r1, r0
   20ff8:	str	r2, [sp, #12]
   20ffc:	str	r0, [sp, #8]
   21000:	ldr	r0, [sp, #20]
   21004:	ldrb	r0, [r0, #6]
   21008:	ldr	r1, [sp, #8]
   2100c:	ldr	r2, [sp, #12]
   21010:	orr	r0, r1, r0, lsl #8
   21014:	str	r2, [sp, #12]
   21018:	str	r0, [sp, #8]
   2101c:	ldr	r0, [sp, #20]
   21020:	ldrb	r0, [r0, #5]
   21024:	ldr	r1, [sp, #8]
   21028:	ldr	r2, [sp, #12]
   2102c:	orr	r0, r1, r0, lsl #16
   21030:	str	r2, [sp, #12]
   21034:	str	r0, [sp, #8]
   21038:	ldr	r0, [sp, #20]
   2103c:	ldrb	r0, [r0, #4]
   21040:	ldr	r1, [sp, #8]
   21044:	ldr	r2, [sp, #12]
   21048:	orr	r0, r1, r0, lsl #24
   2104c:	str	r2, [sp, #12]
   21050:	str	r0, [sp, #8]
   21054:	ldr	r0, [sp, #20]
   21058:	ldrb	r0, [r0, #3]
   2105c:	ldr	r1, [sp, #8]
   21060:	ldr	r2, [sp, #12]
   21064:	orr	r0, r2, r0
   21068:	str	r1, [sp, #8]
   2106c:	str	r0, [sp, #12]
   21070:	ldr	r0, [sp, #20]
   21074:	ldrb	r0, [r0, #2]
   21078:	ldr	r1, [sp, #8]
   2107c:	ldr	r2, [sp, #12]
   21080:	orr	r0, r2, r0, lsl #8
   21084:	str	r1, [sp, #8]
   21088:	str	r0, [sp, #12]
   2108c:	ldr	r0, [sp, #20]
   21090:	ldrb	r0, [r0, #1]
   21094:	ldr	r1, [sp, #8]
   21098:	ldr	r2, [sp, #12]
   2109c:	orr	r0, r2, r0, lsl #16
   210a0:	str	r1, [sp, #8]
   210a4:	str	r0, [sp, #12]
   210a8:	ldr	r0, [sp, #20]
   210ac:	ldrb	r0, [r0]
   210b0:	ldr	r1, [sp, #8]
   210b4:	ldr	r2, [sp, #12]
   210b8:	orr	r0, r2, r0, lsl #24
   210bc:	str	r1, [sp, #8]
   210c0:	str	r0, [sp, #12]
   210c4:	b	210c8 <main@@Base+0xaba8>
   210c8:	ldr	r0, [sp, #8]
   210cc:	ldr	r1, [sp, #12]
   210d0:	add	sp, sp, #24
   210d4:	bx	lr
   210d8:	sub	sp, sp, #24
   210dc:	str	r0, [sp, #16]
   210e0:	str	r1, [sp, #12]
   210e4:	str	r2, [sp, #8]
   210e8:	str	r3, [sp, #4]
   210ec:	ldr	r0, [sp, #12]
   210f0:	str	r0, [sp]
   210f4:	ldr	r0, [sp, #8]
   210f8:	ldr	r1, [sp, #12]
   210fc:	sub	r0, r0, r1
   21100:	ldr	r1, [sp, #4]
   21104:	cmp	r0, r1
   21108:	bgt	21118 <main@@Base+0xabf8>
   2110c:	ldr	r0, [sp]
   21110:	str	r0, [sp, #20]
   21114:	b	21150 <main@@Base+0xac30>
   21118:	ldr	r0, [sp, #12]
   2111c:	ldr	r1, [sp, #4]
   21120:	add	r0, r0, r1
   21124:	ldrb	r0, [r0]
   21128:	cmp	r0, #46	; 0x2e
   2112c:	beq	2113c <main@@Base+0xac1c>
   21130:	ldr	r0, [sp]
   21134:	str	r0, [sp, #20]
   21138:	b	21150 <main@@Base+0xac30>
   2113c:	ldr	r0, [sp, #12]
   21140:	ldr	r1, [sp, #4]
   21144:	add	r0, r0, r1
   21148:	add	r0, r0, #1
   2114c:	str	r0, [sp, #20]
   21150:	ldr	r0, [sp, #20]
   21154:	add	sp, sp, #24
   21158:	bx	lr
   2115c:	push	{fp, lr}
   21160:	mov	fp, sp
   21164:	sub	sp, sp, #64	; 0x40
   21168:	ldr	ip, [fp, #12]
   2116c:	ldr	lr, [fp, #8]
   21170:	str	r0, [fp, #-8]
   21174:	str	r1, [fp, #-12]
   21178:	str	r2, [fp, #-16]
   2117c:	str	r3, [fp, #-20]	; 0xffffffec
   21180:	ldr	r0, [fp, #-12]
   21184:	str	r0, [fp, #-24]	; 0xffffffe8
   21188:	ldr	r0, [fp, #-12]
   2118c:	ldr	r1, [fp, #-16]
   21190:	str	lr, [sp, #20]
   21194:	str	ip, [sp, #16]
   21198:	bl	1bd10 <main@@Base+0x57f0>
   2119c:	str	r1, [sp, #28]
   211a0:	str	r0, [sp, #24]
   211a4:	ldr	r0, [sp, #24]
   211a8:	ldr	r1, [sp, #28]
   211ac:	movw	r2, #20577	; 0x5061
   211b0:	movt	r2, #18798	; 0x496e
   211b4:	eor	r1, r1, r2
   211b8:	movw	r2, #28276	; 0x6e74
   211bc:	movt	r2, #29285	; 0x7265
   211c0:	eor	r0, r0, r2
   211c4:	orr	r0, r0, r1
   211c8:	cmp	r0, #0
   211cc:	bne	212ec <main@@Base+0xadcc>
   211d0:	b	211d4 <main@@Base+0xacb4>
   211d4:	ldr	r0, [fp, #-12]
   211d8:	add	r0, r0, #8
   211dc:	str	r0, [fp, #-12]
   211e0:	ldr	r0, [fp, #-12]
   211e4:	ldr	r1, [fp, #-16]
   211e8:	bl	1bd10 <main@@Base+0x57f0>
   211ec:	str	r1, [sp, #28]
   211f0:	str	r0, [sp, #24]
   211f4:	ldr	r0, [sp, #24]
   211f8:	ldr	r1, [sp, #28]
   211fc:	movw	lr, #28005	; 0x6d65
   21200:	movt	lr, #20065	; 0x4e61
   21204:	eor	r1, r1, lr
   21208:	movw	lr, #24931	; 0x6163
   2120c:	movt	lr, #29552	; 0x7370
   21210:	eor	r0, r0, lr
   21214:	orr	r0, r0, r1
   21218:	cmp	r0, #0
   2121c:	bne	212dc <main@@Base+0xadbc>
   21220:	b	21224 <main@@Base+0xad04>
   21224:	ldr	r0, [fp, #-12]
   21228:	add	r0, r0, #8
   2122c:	str	r0, [fp, #-12]
   21230:	ldr	r0, [fp, #-12]
   21234:	ldr	r1, [fp, #-16]
   21238:	bl	1bd10 <main@@Base+0x57f0>
   2123c:	str	r1, [sp, #28]
   21240:	str	r0, [sp, #24]
   21244:	ldr	r0, [sp, #28]
   21248:	and	r0, r0, #-16777216	; 0xff000000
   2124c:	teq	r0, #1694498816	; 0x65000000
   21250:	bne	212cc <main@@Base+0xadac>
   21254:	b	21258 <main@@Base+0xad38>
   21258:	ldr	r0, [fp, #-8]
   2125c:	ldr	r1, [fp, #-12]
   21260:	str	r1, [fp, #-28]	; 0xffffffe4
   21264:	ldr	r2, [fp, #-16]
   21268:	ldr	r3, [fp, #12]
   2126c:	movw	ip, #1
   21270:	str	r3, [sp, #12]
   21274:	mov	r3, ip
   21278:	ldr	ip, [sp, #12]
   2127c:	str	ip, [sp]
   21280:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   21284:	str	r0, [fp, #-12]
   21288:	ldr	r0, [fp, #-12]
   2128c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21290:	cmp	r0, r1
   21294:	beq	212bc <main@@Base+0xad9c>
   21298:	ldr	r0, [fp, #8]
   2129c:	mov	r1, #0
   212a0:	str	r1, [r0, #4]
   212a4:	mov	r1, #1
   212a8:	str	r1, [r0]
   212ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   212b0:	movw	r1, #0
   212b4:	str	r1, [r0]
   212b8:	b	212c8 <main@@Base+0xada8>
   212bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   212c0:	str	r0, [fp, #-4]
   212c4:	b	2138c <main@@Base+0xae6c>
   212c8:	b	212d8 <main@@Base+0xadb8>
   212cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   212d0:	str	r0, [fp, #-4]
   212d4:	b	2138c <main@@Base+0xae6c>
   212d8:	b	212e8 <main@@Base+0xadc8>
   212dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   212e0:	str	r0, [fp, #-4]
   212e4:	b	2138c <main@@Base+0xae6c>
   212e8:	b	21384 <main@@Base+0xae64>
   212ec:	ldr	r0, [sp, #28]
   212f0:	movw	r1, #20037	; 0x4e45
   212f4:	movt	r1, #20047	; 0x4e4f
   212f8:	teq	r0, r1
   212fc:	bne	21374 <main@@Base+0xae54>
   21300:	b	21304 <main@@Base+0xade4>
   21304:	ldr	r0, [fp, #-8]
   21308:	ldr	r1, [fp, #-12]
   2130c:	str	r1, [fp, #-28]	; 0xffffffe4
   21310:	ldr	r2, [fp, #-16]
   21314:	ldr	r3, [fp, #12]
   21318:	movw	ip, #4
   2131c:	str	r3, [sp, #8]
   21320:	mov	r3, ip
   21324:	ldr	ip, [sp, #8]
   21328:	str	ip, [sp]
   2132c:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   21330:	str	r0, [fp, #-12]
   21334:	ldr	r0, [fp, #-12]
   21338:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2133c:	cmp	r0, r1
   21340:	beq	21364 <main@@Base+0xae44>
   21344:	ldr	r0, [fp, #8]
   21348:	mov	r1, #0
   2134c:	str	r1, [r0, #4]
   21350:	str	r1, [r0]
   21354:	ldr	r0, [fp, #-20]	; 0xffffffec
   21358:	movw	r1, #0
   2135c:	str	r1, [r0]
   21360:	b	21370 <main@@Base+0xae50>
   21364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21368:	str	r0, [fp, #-4]
   2136c:	b	2138c <main@@Base+0xae6c>
   21370:	b	21380 <main@@Base+0xae60>
   21374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21378:	str	r0, [fp, #-4]
   2137c:	b	2138c <main@@Base+0xae6c>
   21380:	b	21384 <main@@Base+0xae64>
   21384:	ldr	r0, [fp, #-12]
   21388:	str	r0, [fp, #-4]
   2138c:	ldr	r0, [fp, #-4]
   21390:	mov	sp, fp
   21394:	pop	{fp, pc}
   21398:	push	{fp, lr}
   2139c:	mov	fp, sp
   213a0:	sub	sp, sp, #64	; 0x40
   213a4:	ldr	ip, [fp, #12]
   213a8:	ldr	lr, [fp, #8]
   213ac:	str	r0, [fp, #-8]
   213b0:	str	r1, [fp, #-12]
   213b4:	str	r2, [fp, #-16]
   213b8:	str	r3, [fp, #-20]	; 0xffffffec
   213bc:	ldr	r0, [fp, #-12]
   213c0:	str	r0, [fp, #-24]	; 0xffffffe8
   213c4:	ldr	r0, [fp, #-12]
   213c8:	ldr	r1, [fp, #-16]
   213cc:	str	lr, [sp, #20]
   213d0:	str	ip, [sp, #16]
   213d4:	bl	1bd10 <main@@Base+0x57f0>
   213d8:	str	r1, [sp, #28]
   213dc:	str	r0, [sp, #24]
   213e0:	ldr	r0, [sp, #28]
   213e4:	movw	r1, #30769	; 0x7831
   213e8:	movt	r1, #26725	; 0x6865
   213ec:	cmp	r0, r1
   213f0:	bhi	21494 <main@@Base+0xaf74>
   213f4:	b	213f8 <main@@Base+0xaed8>
   213f8:	ldr	r0, [sp, #28]
   213fc:	movw	r1, #30769	; 0x7831
   21400:	movt	r1, #26725	; 0x6865
   21404:	teq	r0, r1
   21408:	bne	21484 <main@@Base+0xaf64>
   2140c:	b	21410 <main@@Base+0xaef0>
   21410:	ldr	r0, [fp, #-8]
   21414:	ldr	r1, [fp, #-12]
   21418:	str	r1, [fp, #-28]	; 0xffffffe4
   2141c:	ldr	r2, [fp, #-16]
   21420:	ldr	r3, [fp, #12]
   21424:	movw	ip, #4
   21428:	str	r3, [sp, #12]
   2142c:	mov	r3, ip
   21430:	ldr	ip, [sp, #12]
   21434:	str	ip, [sp]
   21438:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   2143c:	str	r0, [fp, #-12]
   21440:	ldr	r0, [fp, #-12]
   21444:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21448:	cmp	r0, r1
   2144c:	beq	21474 <main@@Base+0xaf54>
   21450:	ldr	r0, [fp, #8]
   21454:	mov	r1, #0
   21458:	str	r1, [r0, #4]
   2145c:	mov	r1, #3
   21460:	str	r1, [r0]
   21464:	ldr	r0, [fp, #-20]	; 0xffffffec
   21468:	movw	r1, #0
   2146c:	str	r1, [r0]
   21470:	b	21480 <main@@Base+0xaf60>
   21474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21478:	str	r0, [fp, #-4]
   2147c:	b	215e4 <main@@Base+0xb0c4>
   21480:	b	21490 <main@@Base+0xaf70>
   21484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21488:	str	r0, [fp, #-4]
   2148c:	b	215e4 <main@@Base+0xb0c4>
   21490:	b	215dc <main@@Base+0xb0bc>
   21494:	ldrh	r0, [sp, #26]
   21498:	ldr	r1, [sp, #28]
   2149c:	movw	r2, #26725	; 0x6865
   214a0:	eor	r2, r2, r1, lsr #16
   214a4:	orr	r0, r0, r1, lsl #16
   214a8:	movw	r1, #25959	; 0x6567
   214ac:	movt	r1, #30830	; 0x786e
   214b0:	eor	r0, r0, r1
   214b4:	orr	r0, r0, r2
   214b8:	cmp	r0, #0
   214bc:	bne	21538 <main@@Base+0xb018>
   214c0:	b	214c4 <main@@Base+0xafa4>
   214c4:	ldr	r0, [fp, #-8]
   214c8:	ldr	r1, [fp, #-12]
   214cc:	str	r1, [fp, #-28]	; 0xffffffe4
   214d0:	ldr	r2, [fp, #-16]
   214d4:	ldr	r3, [fp, #12]
   214d8:	movw	ip, #6
   214dc:	str	r3, [sp, #8]
   214e0:	mov	r3, ip
   214e4:	ldr	ip, [sp, #8]
   214e8:	str	ip, [sp]
   214ec:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   214f0:	str	r0, [fp, #-12]
   214f4:	ldr	r0, [fp, #-12]
   214f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   214fc:	cmp	r0, r1
   21500:	beq	21528 <main@@Base+0xb008>
   21504:	ldr	r0, [fp, #8]
   21508:	mvn	r1, #0
   2150c:	str	r1, [r0, #4]
   21510:	mvn	r1, #1
   21514:	str	r1, [r0]
   21518:	ldr	r0, [fp, #-20]	; 0xffffffec
   2151c:	movw	r1, #1
   21520:	str	r1, [r0]
   21524:	b	21534 <main@@Base+0xb014>
   21528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2152c:	str	r0, [fp, #-4]
   21530:	b	215e4 <main@@Base+0xb0c4>
   21534:	b	215d8 <main@@Base+0xb0b8>
   21538:	ldr	r0, [sp, #28]
   2153c:	movw	r1, #30770	; 0x7832
   21540:	movt	r1, #26725	; 0x6865
   21544:	teq	r0, r1
   21548:	bne	215c8 <main@@Base+0xb0a8>
   2154c:	b	21550 <main@@Base+0xb030>
   21550:	ldr	r0, [fp, #-8]
   21554:	ldr	r1, [fp, #-12]
   21558:	str	r1, [fp, #-28]	; 0xffffffe4
   2155c:	ldr	r2, [fp, #-16]
   21560:	ldr	r3, [fp, #12]
   21564:	movw	ip, #4
   21568:	str	r3, [sp, #4]
   2156c:	mov	r3, ip
   21570:	ldr	ip, [sp, #4]
   21574:	str	ip, [sp]
   21578:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   2157c:	str	r0, [fp, #-12]
   21580:	ldr	r0, [fp, #-12]
   21584:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21588:	cmp	r0, r1
   2158c:	beq	215b8 <main@@Base+0xb098>
   21590:	ldr	r0, [fp, #8]
   21594:	mov	r1, #0
   21598:	str	r1, [r0, #4]
   2159c:	movw	r1, #48815	; 0xbeaf
   215a0:	movt	r1, #32431	; 0x7eaf
   215a4:	str	r1, [r0]
   215a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   215ac:	movw	r1, #0
   215b0:	str	r1, [r0]
   215b4:	b	215c4 <main@@Base+0xb0a4>
   215b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   215bc:	str	r0, [fp, #-4]
   215c0:	b	215e4 <main@@Base+0xb0c4>
   215c4:	b	215d4 <main@@Base+0xb0b4>
   215c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   215cc:	str	r0, [fp, #-4]
   215d0:	b	215e4 <main@@Base+0xb0c4>
   215d4:	b	215d8 <main@@Base+0xb0b8>
   215d8:	b	215dc <main@@Base+0xb0bc>
   215dc:	ldr	r0, [fp, #-12]
   215e0:	str	r0, [fp, #-4]
   215e4:	ldr	r0, [fp, #-4]
   215e8:	mov	sp, fp
   215ec:	pop	{fp, pc}
   215f0:	push	{fp, lr}
   215f4:	mov	fp, sp
   215f8:	sub	sp, sp, #80	; 0x50
   215fc:	ldr	ip, [fp, #12]
   21600:	ldr	lr, [fp, #8]
   21604:	str	r0, [fp, #-8]
   21608:	str	r1, [fp, #-12]
   2160c:	str	r2, [fp, #-16]
   21610:	str	r3, [fp, #-20]	; 0xffffffec
   21614:	ldr	r0, [fp, #-12]
   21618:	str	r0, [fp, #-24]	; 0xffffffe8
   2161c:	ldr	r0, [fp, #-12]
   21620:	ldr	r1, [fp, #-16]
   21624:	str	lr, [sp, #36]	; 0x24
   21628:	str	ip, [sp, #32]
   2162c:	bl	1bd10 <main@@Base+0x57f0>
   21630:	str	r1, [sp, #44]	; 0x2c
   21634:	str	r0, [sp, #40]	; 0x28
   21638:	ldr	r0, [sp, #44]	; 0x2c
   2163c:	movw	r1, #29745	; 0x7431
   21640:	movt	r1, #26990	; 0x696e
   21644:	cmp	r0, r1
   21648:	bhi	216ec <main@@Base+0xb1cc>
   2164c:	b	21650 <main@@Base+0xb130>
   21650:	ldr	r0, [sp, #44]	; 0x2c
   21654:	movw	r1, #29745	; 0x7431
   21658:	movt	r1, #26990	; 0x696e
   2165c:	teq	r0, r1
   21660:	bne	216dc <main@@Base+0xb1bc>
   21664:	b	21668 <main@@Base+0xb148>
   21668:	ldr	r0, [fp, #-8]
   2166c:	ldr	r1, [fp, #-12]
   21670:	str	r1, [fp, #-28]	; 0xffffffe4
   21674:	ldr	r2, [fp, #-16]
   21678:	ldr	r3, [fp, #12]
   2167c:	movw	ip, #4
   21680:	str	r3, [sp, #28]
   21684:	mov	r3, ip
   21688:	ldr	ip, [sp, #28]
   2168c:	str	ip, [sp]
   21690:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   21694:	str	r0, [fp, #-12]
   21698:	ldr	r0, [fp, #-12]
   2169c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   216a0:	cmp	r0, r1
   216a4:	beq	216cc <main@@Base+0xb1ac>
   216a8:	ldr	r0, [fp, #8]
   216ac:	mov	r1, #0
   216b0:	str	r1, [r0, #4]
   216b4:	mov	r1, #2
   216b8:	str	r1, [r0]
   216bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   216c0:	movw	r1, #0
   216c4:	str	r1, [r0]
   216c8:	b	216d8 <main@@Base+0xb1b8>
   216cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   216d0:	str	r0, [fp, #-4]
   216d4:	b	21924 <main@@Base+0xb404>
   216d8:	b	216e8 <main@@Base+0xb1c8>
   216dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   216e0:	str	r0, [fp, #-4]
   216e4:	b	21924 <main@@Base+0xb404>
   216e8:	b	2191c <main@@Base+0xb3fc>
   216ec:	ldr	r0, [sp, #40]	; 0x28
   216f0:	ldr	r1, [sp, #44]	; 0x2c
   216f4:	movw	r2, #65535	; 0xffff
   216f8:	movt	r2, #25958	; 0x6566
   216fc:	subs	r0, r2, r0
   21700:	movw	r2, #29806	; 0x746e
   21704:	movt	r2, #26990	; 0x696e
   21708:	sbcs	r1, r2, r1
   2170c:	str	r0, [sp, #24]
   21710:	str	r1, [sp, #20]
   21714:	bcc	217b8 <main@@Base+0xb298>
   21718:	b	2171c <main@@Base+0xb1fc>
   2171c:	ldr	r0, [sp, #44]	; 0x2c
   21720:	movw	r1, #29746	; 0x7432
   21724:	movt	r1, #26990	; 0x696e
   21728:	teq	r0, r1
   2172c:	bne	217a8 <main@@Base+0xb288>
   21730:	b	21734 <main@@Base+0xb214>
   21734:	ldr	r0, [fp, #-8]
   21738:	ldr	r1, [fp, #-12]
   2173c:	str	r1, [fp, #-28]	; 0xffffffe4
   21740:	ldr	r2, [fp, #-16]
   21744:	ldr	r3, [fp, #12]
   21748:	movw	ip, #4
   2174c:	str	r3, [sp, #16]
   21750:	mov	r3, ip
   21754:	ldr	ip, [sp, #16]
   21758:	str	ip, [sp]
   2175c:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   21760:	str	r0, [fp, #-12]
   21764:	ldr	r0, [fp, #-12]
   21768:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2176c:	cmp	r0, r1
   21770:	beq	21798 <main@@Base+0xb278>
   21774:	ldr	r0, [fp, #8]
   21778:	mov	r1, #0
   2177c:	str	r1, [r0, #4]
   21780:	mov	r1, #42	; 0x2a
   21784:	str	r1, [r0]
   21788:	ldr	r0, [fp, #-20]	; 0xffffffec
   2178c:	movw	r1, #0
   21790:	str	r1, [r0]
   21794:	b	217a4 <main@@Base+0xb284>
   21798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2179c:	str	r0, [fp, #-4]
   217a0:	b	21924 <main@@Base+0xb404>
   217a4:	b	217b4 <main@@Base+0xb294>
   217a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   217ac:	str	r0, [fp, #-4]
   217b0:	b	21924 <main@@Base+0xb404>
   217b4:	b	21918 <main@@Base+0xb3f8>
   217b8:	ldr	r0, [sp, #40]	; 0x28
   217bc:	ldr	r1, [sp, #44]	; 0x2c
   217c0:	movw	r2, #28276	; 0x6e74
   217c4:	movt	r2, #105	; 0x69
   217c8:	eor	r2, r2, r1, lsr #8
   217cc:	lsr	r0, r0, #8
   217d0:	orr	r0, r0, r1, lsl #24
   217d4:	movw	r1, #26418	; 0x6732
   217d8:	movt	r1, #28261	; 0x6e65
   217dc:	eor	r0, r0, r1
   217e0:	orr	r0, r0, r2
   217e4:	cmp	r0, #0
   217e8:	bne	21860 <main@@Base+0xb340>
   217ec:	b	217f0 <main@@Base+0xb2d0>
   217f0:	ldr	r0, [fp, #-8]
   217f4:	ldr	r1, [fp, #-12]
   217f8:	str	r1, [fp, #-28]	; 0xffffffe4
   217fc:	ldr	r2, [fp, #-16]
   21800:	ldr	r3, [fp, #12]
   21804:	movw	ip, #7
   21808:	str	r3, [sp, #12]
   2180c:	mov	r3, ip
   21810:	ldr	ip, [sp, #12]
   21814:	str	ip, [sp]
   21818:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   2181c:	str	r0, [fp, #-12]
   21820:	ldr	r0, [fp, #-12]
   21824:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21828:	cmp	r0, r1
   2182c:	beq	21850 <main@@Base+0xb330>
   21830:	ldr	r0, [fp, #8]
   21834:	mvn	r1, #0
   21838:	str	r1, [r0, #4]
   2183c:	str	r1, [r0]
   21840:	ldr	r0, [fp, #-20]	; 0xffffffec
   21844:	movw	r1, #1
   21848:	str	r1, [r0]
   2184c:	b	2185c <main@@Base+0xb33c>
   21850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21854:	str	r0, [fp, #-4]
   21858:	b	21924 <main@@Base+0xb404>
   2185c:	b	21914 <main@@Base+0xb3f4>
   21860:	ldrh	r0, [sp, #42]	; 0x2a
   21864:	ldr	r1, [sp, #44]	; 0x2c
   21868:	movw	r2, #26990	; 0x696e
   2186c:	eor	r2, r2, r1, lsr #16
   21870:	orr	r0, r0, r1, lsl #16
   21874:	movw	r1, #25959	; 0x6567
   21878:	movt	r1, #29806	; 0x746e
   2187c:	eor	r0, r0, r1
   21880:	orr	r0, r0, r2
   21884:	cmp	r0, #0
   21888:	bne	21904 <main@@Base+0xb3e4>
   2188c:	b	21890 <main@@Base+0xb370>
   21890:	ldr	r0, [fp, #-8]
   21894:	ldr	r1, [fp, #-12]
   21898:	str	r1, [fp, #-28]	; 0xffffffe4
   2189c:	ldr	r2, [fp, #-16]
   218a0:	ldr	r3, [fp, #12]
   218a4:	movw	ip, #6
   218a8:	str	r3, [sp, #8]
   218ac:	mov	r3, ip
   218b0:	ldr	ip, [sp, #8]
   218b4:	str	ip, [sp]
   218b8:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   218bc:	str	r0, [fp, #-12]
   218c0:	ldr	r0, [fp, #-12]
   218c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   218c8:	cmp	r0, r1
   218cc:	beq	218f4 <main@@Base+0xb3d4>
   218d0:	ldr	r0, [fp, #8]
   218d4:	mvn	r1, #0
   218d8:	str	r1, [r0, #4]
   218dc:	mvn	r1, #1
   218e0:	str	r1, [r0]
   218e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   218e8:	movw	r1, #1
   218ec:	str	r1, [r0]
   218f0:	b	21900 <main@@Base+0xb3e0>
   218f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   218f8:	str	r0, [fp, #-4]
   218fc:	b	21924 <main@@Base+0xb404>
   21900:	b	21910 <main@@Base+0xb3f0>
   21904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21908:	str	r0, [fp, #-4]
   2190c:	b	21924 <main@@Base+0xb404>
   21910:	b	21914 <main@@Base+0xb3f4>
   21914:	b	21918 <main@@Base+0xb3f8>
   21918:	b	2191c <main@@Base+0xb3fc>
   2191c:	ldr	r0, [fp, #-12]
   21920:	str	r0, [fp, #-4]
   21924:	ldr	r0, [fp, #-4]
   21928:	mov	sp, fp
   2192c:	pop	{fp, pc}
   21930:	push	{fp, lr}
   21934:	mov	fp, sp
   21938:	sub	sp, sp, #64	; 0x40
   2193c:	ldr	ip, [fp, #12]
   21940:	ldr	lr, [fp, #8]
   21944:	str	r0, [fp, #-8]
   21948:	str	r1, [fp, #-12]
   2194c:	str	r2, [fp, #-16]
   21950:	str	r3, [fp, #-20]	; 0xffffffec
   21954:	ldr	r0, [fp, #-12]
   21958:	str	r0, [fp, #-24]	; 0xffffffe8
   2195c:	ldr	r0, [fp, #-12]
   21960:	ldr	r1, [fp, #-16]
   21964:	str	lr, [sp, #20]
   21968:	str	ip, [sp, #16]
   2196c:	bl	1bd10 <main@@Base+0x57f0>
   21970:	str	r1, [sp, #28]
   21974:	str	r0, [sp, #24]
   21978:	ldr	r0, [sp, #28]
   2197c:	movw	r1, #26417	; 0x6731
   21980:	movt	r1, #28261	; 0x6e65
   21984:	cmp	r0, r1
   21988:	bhi	21a2c <main@@Base+0xb50c>
   2198c:	b	21990 <main@@Base+0xb470>
   21990:	ldr	r0, [sp, #28]
   21994:	movw	r1, #26417	; 0x6731
   21998:	movt	r1, #28261	; 0x6e65
   2199c:	teq	r0, r1
   219a0:	bne	21a1c <main@@Base+0xb4fc>
   219a4:	b	219a8 <main@@Base+0xb488>
   219a8:	ldr	r0, [fp, #-8]
   219ac:	ldr	r1, [fp, #-12]
   219b0:	str	r1, [fp, #-28]	; 0xffffffe4
   219b4:	ldr	r2, [fp, #-16]
   219b8:	ldr	r3, [fp, #12]
   219bc:	movw	ip, #4
   219c0:	str	r3, [sp, #12]
   219c4:	mov	r3, ip
   219c8:	ldr	ip, [sp, #12]
   219cc:	str	ip, [sp]
   219d0:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   219d4:	str	r0, [fp, #-12]
   219d8:	ldr	r0, [fp, #-12]
   219dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   219e0:	cmp	r0, r1
   219e4:	beq	21a0c <main@@Base+0xb4ec>
   219e8:	ldr	r0, [fp, #8]
   219ec:	mvn	r1, #0
   219f0:	str	r1, [r0, #4]
   219f4:	mvn	r1, #11
   219f8:	str	r1, [r0]
   219fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   21a00:	movw	r1, #1
   21a04:	str	r1, [r0]
   21a08:	b	21a18 <main@@Base+0xb4f8>
   21a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21a10:	str	r0, [fp, #-4]
   21a14:	b	21b60 <main@@Base+0xb640>
   21a18:	b	21a28 <main@@Base+0xb508>
   21a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21a20:	str	r0, [fp, #-4]
   21a24:	b	21b60 <main@@Base+0xb640>
   21a28:	b	21b58 <main@@Base+0xb638>
   21a2c:	ldr	r0, [sp, #28]
   21a30:	movw	r1, #26419	; 0x6733
   21a34:	movt	r1, #28261	; 0x6e65
   21a38:	teq	r0, r1
   21a3c:	bne	21ab8 <main@@Base+0xb598>
   21a40:	b	21a44 <main@@Base+0xb524>
   21a44:	ldr	r0, [fp, #-8]
   21a48:	ldr	r1, [fp, #-12]
   21a4c:	str	r1, [fp, #-28]	; 0xffffffe4
   21a50:	ldr	r2, [fp, #-16]
   21a54:	ldr	r3, [fp, #12]
   21a58:	movw	ip, #4
   21a5c:	str	r3, [sp, #8]
   21a60:	mov	r3, ip
   21a64:	ldr	ip, [sp, #8]
   21a68:	str	ip, [sp]
   21a6c:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   21a70:	str	r0, [fp, #-12]
   21a74:	ldr	r0, [fp, #-12]
   21a78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21a7c:	cmp	r0, r1
   21a80:	beq	21aa8 <main@@Base+0xb588>
   21a84:	ldr	r0, [fp, #8]
   21a88:	mvn	r1, #0
   21a8c:	str	r1, [r0, #4]
   21a90:	mvn	r1, #9
   21a94:	str	r1, [r0]
   21a98:	ldr	r0, [fp, #-20]	; 0xffffffec
   21a9c:	movw	r1, #1
   21aa0:	str	r1, [r0]
   21aa4:	b	21ab4 <main@@Base+0xb594>
   21aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21aac:	str	r0, [fp, #-4]
   21ab0:	b	21b60 <main@@Base+0xb640>
   21ab4:	b	21b54 <main@@Base+0xb634>
   21ab8:	ldr	r0, [sp, #28]
   21abc:	movw	r1, #26418	; 0x6732
   21ac0:	movt	r1, #28261	; 0x6e65
   21ac4:	teq	r0, r1
   21ac8:	bne	21b44 <main@@Base+0xb624>
   21acc:	b	21ad0 <main@@Base+0xb5b0>
   21ad0:	ldr	r0, [fp, #-8]
   21ad4:	ldr	r1, [fp, #-12]
   21ad8:	str	r1, [fp, #-28]	; 0xffffffe4
   21adc:	ldr	r2, [fp, #-16]
   21ae0:	ldr	r3, [fp, #12]
   21ae4:	movw	ip, #4
   21ae8:	str	r3, [sp, #4]
   21aec:	mov	r3, ip
   21af0:	ldr	ip, [sp, #4]
   21af4:	str	ip, [sp]
   21af8:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   21afc:	str	r0, [fp, #-12]
   21b00:	ldr	r0, [fp, #-12]
   21b04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21b08:	cmp	r0, r1
   21b0c:	beq	21b34 <main@@Base+0xb614>
   21b10:	ldr	r0, [fp, #8]
   21b14:	mvn	r1, #0
   21b18:	str	r1, [r0, #4]
   21b1c:	mvn	r1, #10
   21b20:	str	r1, [r0]
   21b24:	ldr	r0, [fp, #-20]	; 0xffffffec
   21b28:	movw	r1, #1
   21b2c:	str	r1, [r0]
   21b30:	b	21b40 <main@@Base+0xb620>
   21b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21b38:	str	r0, [fp, #-4]
   21b3c:	b	21b60 <main@@Base+0xb640>
   21b40:	b	21b50 <main@@Base+0xb630>
   21b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21b48:	str	r0, [fp, #-4]
   21b4c:	b	21b60 <main@@Base+0xb640>
   21b50:	b	21b54 <main@@Base+0xb634>
   21b54:	b	21b58 <main@@Base+0xb638>
   21b58:	ldr	r0, [fp, #-12]
   21b5c:	str	r0, [fp, #-4]
   21b60:	ldr	r0, [fp, #-4]
   21b64:	mov	sp, fp
   21b68:	pop	{fp, pc}
   21b6c:	push	{fp, lr}
   21b70:	mov	fp, sp
   21b74:	sub	sp, sp, #56	; 0x38
   21b78:	ldr	ip, [fp, #12]
   21b7c:	ldr	lr, [fp, #8]
   21b80:	str	r0, [fp, #-8]
   21b84:	str	r1, [fp, #-12]
   21b88:	str	r2, [fp, #-16]
   21b8c:	str	r3, [fp, #-20]	; 0xffffffec
   21b90:	ldr	r0, [fp, #-12]
   21b94:	str	r0, [fp, #-24]	; 0xffffffe8
   21b98:	ldr	r0, [fp, #-12]
   21b9c:	ldr	r1, [fp, #-16]
   21ba0:	str	lr, [sp, #12]
   21ba4:	str	ip, [sp, #8]
   21ba8:	bl	1bd10 <main@@Base+0x57f0>
   21bac:	str	r1, [sp, #20]
   21bb0:	str	r0, [sp, #16]
   21bb4:	ldr	r0, [sp, #20]
   21bb8:	and	r0, r0, #-16777216	; 0xff000000
   21bbc:	teq	r0, #2013265920	; 0x78000000
   21bc0:	bne	21c38 <main@@Base+0xb718>
   21bc4:	b	21bc8 <main@@Base+0xb6a8>
   21bc8:	ldr	r0, [fp, #-8]
   21bcc:	ldr	r1, [fp, #-12]
   21bd0:	str	r1, [sp, #28]
   21bd4:	ldr	r2, [fp, #-16]
   21bd8:	ldr	r3, [fp, #12]
   21bdc:	movw	ip, #1
   21be0:	str	r3, [sp, #4]
   21be4:	mov	r3, ip
   21be8:	ldr	ip, [sp, #4]
   21bec:	str	ip, [sp]
   21bf0:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   21bf4:	str	r0, [fp, #-12]
   21bf8:	ldr	r0, [fp, #-12]
   21bfc:	ldr	r1, [sp, #28]
   21c00:	cmp	r0, r1
   21c04:	beq	21c28 <main@@Base+0xb708>
   21c08:	ldr	r0, [fp, #8]
   21c0c:	mov	r1, #0
   21c10:	str	r1, [r0, #4]
   21c14:	str	r1, [r0]
   21c18:	ldr	r0, [fp, #-20]	; 0xffffffec
   21c1c:	movw	r1, #0
   21c20:	str	r1, [r0]
   21c24:	b	21c34 <main@@Base+0xb714>
   21c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21c2c:	str	r0, [fp, #-4]
   21c30:	b	21c4c <main@@Base+0xb72c>
   21c34:	b	21c44 <main@@Base+0xb724>
   21c38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21c3c:	str	r0, [fp, #-4]
   21c40:	b	21c4c <main@@Base+0xb72c>
   21c44:	ldr	r0, [fp, #-12]
   21c48:	str	r0, [fp, #-4]
   21c4c:	ldr	r0, [fp, #-4]
   21c50:	mov	sp, fp
   21c54:	pop	{fp, pc}
   21c58:	push	{fp, lr}
   21c5c:	mov	fp, sp
   21c60:	sub	sp, sp, #104	; 0x68
   21c64:	ldr	ip, [fp, #12]
   21c68:	ldr	lr, [fp, #8]
   21c6c:	str	r0, [fp, #-8]
   21c70:	str	r1, [fp, #-12]
   21c74:	str	r2, [fp, #-16]
   21c78:	str	r3, [fp, #-20]	; 0xffffffec
   21c7c:	ldr	r0, [fp, #-12]
   21c80:	str	r0, [fp, #-24]	; 0xffffffe8
   21c84:	ldr	r0, [fp, #-12]
   21c88:	ldr	r1, [fp, #-16]
   21c8c:	str	lr, [fp, #-44]	; 0xffffffd4
   21c90:	str	ip, [fp, #-48]	; 0xffffffd0
   21c94:	bl	1bd10 <main@@Base+0x57f0>
   21c98:	str	r1, [fp, #-36]	; 0xffffffdc
   21c9c:	str	r0, [fp, #-40]	; 0xffffffd8
   21ca0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21ca4:	movw	r1, #20036	; 0x4e44
   21ca8:	movt	r1, #20047	; 0x4e4f
   21cac:	cmp	r0, r1
   21cb0:	bhi	21efc <main@@Base+0xb9dc>
   21cb4:	b	21cb8 <main@@Base+0xb798>
   21cb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21cbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21cc0:	movw	r2, #28159	; 0x6dff
   21cc4:	movt	r2, #18017	; 0x4661
   21cc8:	subs	r0, r2, r0
   21ccc:	movw	r2, #28523	; 0x6f6b
   21cd0:	movt	r2, #17007	; 0x426f
   21cd4:	sbcs	r1, r2, r1
   21cd8:	str	r0, [sp, #52]	; 0x34
   21cdc:	str	r1, [sp, #48]	; 0x30
   21ce0:	bcc	21d98 <main@@Base+0xb878>
   21ce4:	b	21ce8 <main@@Base+0xb7c8>
   21ce8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21cec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21cf0:	and	r0, r0, #-16777216	; 0xff000000
   21cf4:	movw	r2, #27756	; 0x6c6c
   21cf8:	movt	r2, #16997	; 0x4265
   21cfc:	eor	r1, r1, r2
   21d00:	eor	r0, r0, #1694498816	; 0x65000000
   21d04:	orr	r0, r0, r1
   21d08:	cmp	r0, #0
   21d0c:	bne	21d88 <main@@Base+0xb868>
   21d10:	b	21d14 <main@@Base+0xb7f4>
   21d14:	ldr	r0, [fp, #-8]
   21d18:	ldr	r1, [fp, #-12]
   21d1c:	str	r1, [fp, #-28]	; 0xffffffe4
   21d20:	ldr	r2, [fp, #-16]
   21d24:	ldr	r3, [fp, #12]
   21d28:	movw	ip, #5
   21d2c:	str	r3, [sp, #44]	; 0x2c
   21d30:	mov	r3, ip
   21d34:	ldr	ip, [sp, #44]	; 0x2c
   21d38:	str	ip, [sp]
   21d3c:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   21d40:	str	r0, [fp, #-12]
   21d44:	ldr	r0, [fp, #-12]
   21d48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21d4c:	cmp	r0, r1
   21d50:	beq	21d78 <main@@Base+0xb858>
   21d54:	ldr	r0, [fp, #8]
   21d58:	mov	r1, #0
   21d5c:	str	r1, [r0, #4]
   21d60:	mov	r1, #9
   21d64:	str	r1, [r0]
   21d68:	ldr	r0, [fp, #-20]	; 0xffffffec
   21d6c:	movw	r1, #0
   21d70:	str	r1, [r0]
   21d74:	b	21d84 <main@@Base+0xb864>
   21d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21d7c:	str	r0, [fp, #-4]
   21d80:	b	2220c <main@@Base+0xbcec>
   21d84:	b	21d94 <main@@Base+0xb874>
   21d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21d8c:	str	r0, [fp, #-4]
   21d90:	b	2220c <main@@Base+0xbcec>
   21d94:	b	21ef8 <main@@Base+0xb9d8>
   21d98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21d9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21da0:	and	r0, r0, #-16777216	; 0xff000000
   21da4:	movw	r2, #19553	; 0x4c61
   21da8:	movt	r2, #19829	; 0x4d75
   21dac:	eor	r1, r1, r2
   21db0:	eor	r0, r0, #1845493760	; 0x6e000000
   21db4:	orr	r0, r0, r1
   21db8:	cmp	r0, #0
   21dbc:	bne	21e38 <main@@Base+0xb918>
   21dc0:	b	21dc4 <main@@Base+0xb8a4>
   21dc4:	ldr	r0, [fp, #-8]
   21dc8:	ldr	r1, [fp, #-12]
   21dcc:	str	r1, [fp, #-28]	; 0xffffffe4
   21dd0:	ldr	r2, [fp, #-16]
   21dd4:	ldr	r3, [fp, #12]
   21dd8:	movw	ip, #5
   21ddc:	str	r3, [sp, #40]	; 0x28
   21de0:	mov	r3, ip
   21de4:	ldr	ip, [sp, #40]	; 0x28
   21de8:	str	ip, [sp]
   21dec:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   21df0:	str	r0, [fp, #-12]
   21df4:	ldr	r0, [fp, #-12]
   21df8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21dfc:	cmp	r0, r1
   21e00:	beq	21e28 <main@@Base+0xb908>
   21e04:	ldr	r0, [fp, #8]
   21e08:	mov	r1, #0
   21e0c:	str	r1, [r0, #4]
   21e10:	mov	r1, #2
   21e14:	str	r1, [r0]
   21e18:	ldr	r0, [fp, #-20]	; 0xffffffec
   21e1c:	movw	r1, #0
   21e20:	str	r1, [r0]
   21e24:	b	21e34 <main@@Base+0xb914>
   21e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21e2c:	str	r0, [fp, #-4]
   21e30:	b	2220c <main@@Base+0xbcec>
   21e34:	b	21ef4 <main@@Base+0xb9d4>
   21e38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21e3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21e40:	movw	r2, #28527	; 0x6f6f
   21e44:	movt	r2, #66	; 0x42
   21e48:	eor	r2, r2, r1, lsr #8
   21e4c:	lsr	r0, r0, #8
   21e50:	orr	r0, r0, r1, lsl #24
   21e54:	movw	r1, #24942	; 0x616e
   21e58:	movt	r1, #27462	; 0x6b46
   21e5c:	eor	r0, r0, r1
   21e60:	orr	r0, r0, r2
   21e64:	cmp	r0, #0
   21e68:	bne	21ee4 <main@@Base+0xb9c4>
   21e6c:	b	21e70 <main@@Base+0xb950>
   21e70:	ldr	r0, [fp, #-8]
   21e74:	ldr	r1, [fp, #-12]
   21e78:	str	r1, [fp, #-28]	; 0xffffffe4
   21e7c:	ldr	r2, [fp, #-16]
   21e80:	ldr	r3, [fp, #12]
   21e84:	movw	ip, #7
   21e88:	str	r3, [sp, #36]	; 0x24
   21e8c:	mov	r3, ip
   21e90:	ldr	ip, [sp, #36]	; 0x24
   21e94:	str	ip, [sp]
   21e98:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   21e9c:	str	r0, [fp, #-12]
   21ea0:	ldr	r0, [fp, #-12]
   21ea4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21ea8:	cmp	r0, r1
   21eac:	beq	21ed4 <main@@Base+0xb9b4>
   21eb0:	ldr	r0, [fp, #8]
   21eb4:	mov	r1, #0
   21eb8:	str	r1, [r0, #4]
   21ebc:	mov	r1, #10
   21ec0:	str	r1, [r0]
   21ec4:	ldr	r0, [fp, #-20]	; 0xffffffec
   21ec8:	movw	r1, #0
   21ecc:	str	r1, [r0]
   21ed0:	b	21ee0 <main@@Base+0xb9c0>
   21ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ed8:	str	r0, [fp, #-4]
   21edc:	b	2220c <main@@Base+0xbcec>
   21ee0:	b	21ef0 <main@@Base+0xb9d0>
   21ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ee8:	str	r0, [fp, #-4]
   21eec:	b	2220c <main@@Base+0xbcec>
   21ef0:	b	21ef4 <main@@Base+0xb9d4>
   21ef4:	b	21ef8 <main@@Base+0xb9d8>
   21ef8:	b	22204 <main@@Base+0xbce4>
   21efc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21f00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21f04:	mvn	r2, #-1912602624	; 0x8e000000
   21f08:	subs	r0, r2, r0
   21f0c:	movw	r2, #26725	; 0x6865
   21f10:	movt	r2, #20340	; 0x4f74
   21f14:	sbcs	r1, r2, r1
   21f18:	str	r0, [sp, #32]
   21f1c:	str	r1, [sp, #28]
   21f20:	bcc	21fc0 <main@@Base+0xbaa0>
   21f24:	b	21f28 <main@@Base+0xba08>
   21f28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21f2c:	movw	r1, #20037	; 0x4e45
   21f30:	movt	r1, #20047	; 0x4e4f
   21f34:	teq	r0, r1
   21f38:	bne	21fb0 <main@@Base+0xba90>
   21f3c:	b	21f40 <main@@Base+0xba20>
   21f40:	ldr	r0, [fp, #-8]
   21f44:	ldr	r1, [fp, #-12]
   21f48:	str	r1, [fp, #-28]	; 0xffffffe4
   21f4c:	ldr	r2, [fp, #-16]
   21f50:	ldr	r3, [fp, #12]
   21f54:	movw	ip, #4
   21f58:	str	r3, [sp, #24]
   21f5c:	mov	r3, ip
   21f60:	ldr	ip, [sp, #24]
   21f64:	str	ip, [sp]
   21f68:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   21f6c:	str	r0, [fp, #-12]
   21f70:	ldr	r0, [fp, #-12]
   21f74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21f78:	cmp	r0, r1
   21f7c:	beq	21fa0 <main@@Base+0xba80>
   21f80:	ldr	r0, [fp, #8]
   21f84:	mov	r1, #0
   21f88:	str	r1, [r0, #4]
   21f8c:	str	r1, [r0]
   21f90:	ldr	r0, [fp, #-20]	; 0xffffffec
   21f94:	movw	r1, #0
   21f98:	str	r1, [r0]
   21f9c:	b	21fac <main@@Base+0xba8c>
   21fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21fa4:	str	r0, [fp, #-4]
   21fa8:	b	2220c <main@@Base+0xbcec>
   21fac:	b	21fbc <main@@Base+0xba9c>
   21fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21fb4:	str	r0, [fp, #-4]
   21fb8:	b	2220c <main@@Base+0xbcec>
   21fbc:	b	22200 <main@@Base+0xbce0>
   21fc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21fc4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21fc8:	movw	r2, #25963	; 0x656b
   21fcc:	movt	r2, #28282	; 0x6e7a
   21fd0:	subs	r0, r2, r0
   21fd4:	movw	r2, #28789	; 0x7075
   21fd8:	movt	r2, #21089	; 0x5261
   21fdc:	sbcs	r1, r2, r1
   21fe0:	str	r0, [sp, #20]
   21fe4:	str	r1, [sp, #16]
   21fe8:	bcc	220a0 <main@@Base+0xbb80>
   21fec:	b	21ff0 <main@@Base+0xbad0>
   21ff0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21ff4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21ff8:	and	r0, r0, #-16777216	; 0xff000000
   21ffc:	movw	r2, #26725	; 0x6865
   22000:	movt	r2, #20340	; 0x4f74
   22004:	eor	r1, r1, r2
   22008:	eor	r0, r0, #1912602624	; 0x72000000
   2200c:	orr	r0, r0, r1
   22010:	cmp	r0, #0
   22014:	bne	22090 <main@@Base+0xbb70>
   22018:	b	2201c <main@@Base+0xbafc>
   2201c:	ldr	r0, [fp, #-8]
   22020:	ldr	r1, [fp, #-12]
   22024:	str	r1, [fp, #-28]	; 0xffffffe4
   22028:	ldr	r2, [fp, #-16]
   2202c:	ldr	r3, [fp, #12]
   22030:	movw	ip, #5
   22034:	str	r3, [sp, #12]
   22038:	mov	r3, ip
   2203c:	ldr	ip, [sp, #12]
   22040:	str	ip, [sp]
   22044:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   22048:	str	r0, [fp, #-12]
   2204c:	ldr	r0, [fp, #-12]
   22050:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22054:	cmp	r0, r1
   22058:	beq	22080 <main@@Base+0xbb60>
   2205c:	ldr	r0, [fp, #8]
   22060:	mov	r1, #0
   22064:	str	r1, [r0, #4]
   22068:	mov	r1, #11
   2206c:	str	r1, [r0]
   22070:	ldr	r0, [fp, #-20]	; 0xffffffec
   22074:	movw	r1, #0
   22078:	str	r1, [r0]
   2207c:	b	2208c <main@@Base+0xbb6c>
   22080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22084:	str	r0, [fp, #-4]
   22088:	b	2220c <main@@Base+0xbcec>
   2208c:	b	2209c <main@@Base+0xbb7c>
   22090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22094:	str	r0, [fp, #-4]
   22098:	b	2220c <main@@Base+0xbcec>
   2209c:	b	221fc <main@@Base+0xbcdc>
   220a0:	ldrh	r0, [fp, #-38]	; 0xffffffda
   220a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   220a8:	movw	r2, #21870	; 0x556e
   220ac:	eor	r2, r2, r1, lsr #16
   220b0:	orr	r0, r0, r1, lsl #16
   220b4:	movw	r1, #25956	; 0x6564
   220b8:	movt	r1, #30067	; 0x7573
   220bc:	eor	r0, r0, r1
   220c0:	orr	r0, r0, r2
   220c4:	cmp	r0, #0
   220c8:	bne	22144 <main@@Base+0xbc24>
   220cc:	b	220d0 <main@@Base+0xbbb0>
   220d0:	ldr	r0, [fp, #-8]
   220d4:	ldr	r1, [fp, #-12]
   220d8:	str	r1, [fp, #-28]	; 0xffffffe4
   220dc:	ldr	r2, [fp, #-16]
   220e0:	ldr	r3, [fp, #12]
   220e4:	movw	ip, #6
   220e8:	str	r3, [sp, #8]
   220ec:	mov	r3, ip
   220f0:	ldr	ip, [sp, #8]
   220f4:	str	ip, [sp]
   220f8:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   220fc:	str	r0, [fp, #-12]
   22100:	ldr	r0, [fp, #-12]
   22104:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22108:	cmp	r0, r1
   2210c:	beq	22134 <main@@Base+0xbc14>
   22110:	ldr	r0, [fp, #8]
   22114:	mov	r1, #0
   22118:	str	r1, [r0, #4]
   2211c:	mov	r1, #255	; 0xff
   22120:	str	r1, [r0]
   22124:	ldr	r0, [fp, #-20]	; 0xffffffec
   22128:	movw	r1, #0
   2212c:	str	r1, [r0]
   22130:	b	22140 <main@@Base+0xbc20>
   22134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22138:	str	r0, [fp, #-4]
   2213c:	b	2220c <main@@Base+0xbcec>
   22140:	b	221f8 <main@@Base+0xbcd8>
   22144:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22148:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2214c:	movw	r2, #28789	; 0x7075
   22150:	movt	r2, #21089	; 0x5261
   22154:	eor	r1, r1, r2
   22158:	movw	r2, #25964	; 0x656c
   2215c:	movt	r2, #28282	; 0x6e7a
   22160:	eor	r0, r0, r2
   22164:	orr	r0, r0, r1
   22168:	cmp	r0, #0
   2216c:	bne	221e8 <main@@Base+0xbcc8>
   22170:	b	22174 <main@@Base+0xbc54>
   22174:	ldr	r0, [fp, #-8]
   22178:	ldr	r1, [fp, #-12]
   2217c:	str	r1, [fp, #-28]	; 0xffffffe4
   22180:	ldr	r2, [fp, #-16]
   22184:	ldr	r3, [fp, #12]
   22188:	movw	ip, #8
   2218c:	str	r3, [sp, #4]
   22190:	mov	r3, ip
   22194:	ldr	ip, [sp, #4]
   22198:	str	ip, [sp]
   2219c:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   221a0:	str	r0, [fp, #-12]
   221a4:	ldr	r0, [fp, #-12]
   221a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   221ac:	cmp	r0, r1
   221b0:	beq	221d8 <main@@Base+0xbcb8>
   221b4:	ldr	r0, [fp, #8]
   221b8:	mov	r1, #0
   221bc:	str	r1, [r0, #4]
   221c0:	mov	r1, #8
   221c4:	str	r1, [r0]
   221c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   221cc:	movw	r1, #0
   221d0:	str	r1, [r0]
   221d4:	b	221e4 <main@@Base+0xbcc4>
   221d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   221dc:	str	r0, [fp, #-4]
   221e0:	b	2220c <main@@Base+0xbcec>
   221e4:	b	221f4 <main@@Base+0xbcd4>
   221e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   221ec:	str	r0, [fp, #-4]
   221f0:	b	2220c <main@@Base+0xbcec>
   221f4:	b	221f8 <main@@Base+0xbcd8>
   221f8:	b	221fc <main@@Base+0xbcdc>
   221fc:	b	22200 <main@@Base+0xbce0>
   22200:	b	22204 <main@@Base+0xbce4>
   22204:	ldr	r0, [fp, #-12]
   22208:	str	r0, [fp, #-4]
   2220c:	ldr	r0, [fp, #-4]
   22210:	mov	sp, fp
   22214:	pop	{fp, pc}
   22218:	push	{fp, lr}
   2221c:	mov	fp, sp
   22220:	sub	sp, sp, #64	; 0x40
   22224:	ldr	ip, [fp, #12]
   22228:	ldr	lr, [fp, #8]
   2222c:	str	r0, [fp, #-8]
   22230:	str	r1, [fp, #-12]
   22234:	str	r2, [fp, #-16]
   22238:	str	r3, [fp, #-20]	; 0xffffffec
   2223c:	ldr	r0, [fp, #-12]
   22240:	str	r0, [fp, #-24]	; 0xffffffe8
   22244:	ldr	r0, [fp, #-12]
   22248:	ldr	r1, [fp, #-16]
   2224c:	str	lr, [sp, #20]
   22250:	str	ip, [sp, #16]
   22254:	bl	1bd10 <main@@Base+0x57f0>
   22258:	str	r1, [sp, #28]
   2225c:	str	r0, [sp, #24]
   22260:	ldr	r0, [sp, #28]
   22264:	bic	r0, r0, #255	; 0xff
   22268:	movw	r1, #28416	; 0x6f00
   2226c:	movt	r1, #18031	; 0x466f
   22270:	teq	r0, r1
   22274:	bne	222e8 <main@@Base+0xbdc8>
   22278:	b	2227c <main@@Base+0xbd5c>
   2227c:	ldr	r0, [fp, #-8]
   22280:	ldr	r1, [fp, #-12]
   22284:	str	r1, [fp, #-28]	; 0xffffffe4
   22288:	ldr	r2, [fp, #-16]
   2228c:	ldr	r3, [fp, #12]
   22290:	movw	ip, #3
   22294:	str	r3, [sp, #12]
   22298:	mov	r3, ip
   2229c:	ldr	ip, [sp, #12]
   222a0:	str	ip, [sp]
   222a4:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   222a8:	str	r0, [fp, #-12]
   222ac:	ldr	r0, [fp, #-12]
   222b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   222b4:	cmp	r0, r1
   222b8:	beq	222e0 <main@@Base+0xbdc0>
   222bc:	ldr	r0, [fp, #8]
   222c0:	mov	r1, #0
   222c4:	str	r1, [r0, #4]
   222c8:	mov	r1, #17
   222cc:	str	r1, [r0]
   222d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   222d4:	movw	r1, #0
   222d8:	str	r1, [r0]
   222dc:	b	222e4 <main@@Base+0xbdc4>
   222e0:	b	222f0 <main@@Base+0xbdd0>
   222e4:	b	222ec <main@@Base+0xbdcc>
   222e8:	b	222f0 <main@@Base+0xbdd0>
   222ec:	b	223ec <main@@Base+0xbecc>
   222f0:	ldr	r0, [sp, #24]
   222f4:	ldr	r1, [sp, #28]
   222f8:	movw	r2, #25452	; 0x636c
   222fc:	movt	r2, #18798	; 0x496e
   22300:	eor	r1, r1, r2
   22304:	movw	r2, #25942	; 0x6556
   22308:	movt	r2, #30052	; 0x7564
   2230c:	eor	r0, r0, r2
   22310:	orr	r0, r0, r1
   22314:	cmp	r0, #0
   22318:	bne	223dc <main@@Base+0xbebc>
   2231c:	b	22320 <main@@Base+0xbe00>
   22320:	ldr	r0, [fp, #-12]
   22324:	add	r0, r0, #8
   22328:	str	r0, [fp, #-12]
   2232c:	ldr	r0, [fp, #-12]
   22330:	ldr	r1, [fp, #-16]
   22334:	bl	1bd10 <main@@Base+0x57f0>
   22338:	str	r1, [sp, #28]
   2233c:	str	r0, [sp, #24]
   22340:	ldr	r0, [sp, #28]
   22344:	bfc	r0, #0, #16
   22348:	movw	r1, #0
   2234c:	movt	r1, #24940	; 0x616c
   22350:	teq	r0, r1
   22354:	bne	223cc <main@@Base+0xbeac>
   22358:	b	2235c <main@@Base+0xbe3c>
   2235c:	ldr	r0, [fp, #-8]
   22360:	ldr	r1, [fp, #-12]
   22364:	str	r1, [fp, #-28]	; 0xffffffe4
   22368:	ldr	r2, [fp, #-16]
   2236c:	ldr	r3, [fp, #12]
   22370:	movw	ip, #2
   22374:	str	r3, [sp, #8]
   22378:	mov	r3, ip
   2237c:	ldr	ip, [sp, #8]
   22380:	str	ip, [sp]
   22384:	bl	34220 <flatcc_json_parser_match_constant@@Base>
   22388:	str	r0, [fp, #-12]
   2238c:	ldr	r0, [fp, #-12]
   22390:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22394:	cmp	r0, r1
   22398:	beq	223bc <main@@Base+0xbe9c>
   2239c:	ldr	r0, [fp, #8]
   223a0:	mov	r1, #0
   223a4:	str	r1, [r0, #4]
   223a8:	str	r1, [r0]
   223ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   223b0:	movw	r1, #0
   223b4:	str	r1, [r0]
   223b8:	b	223c8 <main@@Base+0xbea8>
   223bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   223c0:	str	r0, [fp, #-4]
   223c4:	b	223f4 <main@@Base+0xbed4>
   223c8:	b	223d8 <main@@Base+0xbeb8>
   223cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   223d0:	str	r0, [fp, #-4]
   223d4:	b	223f4 <main@@Base+0xbed4>
   223d8:	b	223e8 <main@@Base+0xbec8>
   223dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   223e0:	str	r0, [fp, #-4]
   223e4:	b	223f4 <main@@Base+0xbed4>
   223e8:	b	223ec <main@@Base+0xbecc>
   223ec:	ldr	r0, [fp, #-12]
   223f0:	str	r0, [fp, #-4]
   223f4:	ldr	r0, [fp, #-4]
   223f8:	mov	sp, fp
   223fc:	pop	{fp, pc}
   22400:	push	{r4, sl, fp, lr}
   22404:	add	fp, sp, #8
   22408:	sub	sp, sp, #56	; 0x38
   2240c:	ldr	ip, [fp, #12]
   22410:	ldr	lr, [fp, #8]
   22414:	ldr	r4, [fp, #16]
   22418:	str	r0, [fp, #-16]
   2241c:	str	r1, [fp, #-20]	; 0xffffffec
   22420:	str	r2, [fp, #-24]	; 0xffffffe8
   22424:	str	r3, [fp, #-28]	; 0xffffffe4
   22428:	str	ip, [sp, #28]
   2242c:	str	lr, [sp, #24]
   22430:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22434:	cmp	r0, #0
   22438:	str	r4, [sp, #20]
   2243c:	beq	22490 <main@@Base+0xbf70>
   22440:	ldr	r0, [sp, #24]
   22444:	ldr	r1, [sp, #28]
   22448:	subs	r0, r0, #129	; 0x81
   2244c:	sbcs	r1, r1, #0
   22450:	str	r0, [sp, #16]
   22454:	str	r1, [sp, #12]
   22458:	bcc	2247c <main@@Base+0xbf5c>
   2245c:	b	22460 <main@@Base+0xbf40>
   22460:	ldr	r0, [fp, #-16]
   22464:	ldr	r1, [fp, #-20]	; 0xffffffec
   22468:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2246c:	movw	r3, #8
   22470:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   22474:	str	r0, [fp, #-12]
   22478:	b	224e0 <main@@Base+0xbfc0>
   2247c:	ldr	r0, [sp, #24]
   22480:	rsb	r0, r0, #0
   22484:	ldr	r1, [fp, #16]
   22488:	strb	r0, [r1]
   2248c:	b	224d8 <main@@Base+0xbfb8>
   22490:	ldr	r0, [sp, #24]
   22494:	ldr	r1, [sp, #28]
   22498:	subs	r0, r0, #128	; 0x80
   2249c:	sbcs	r1, r1, #0
   224a0:	str	r0, [sp, #8]
   224a4:	str	r1, [sp, #4]
   224a8:	bcc	224cc <main@@Base+0xbfac>
   224ac:	b	224b0 <main@@Base+0xbf90>
   224b0:	ldr	r0, [fp, #-16]
   224b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   224b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   224bc:	movw	r3, #7
   224c0:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   224c4:	str	r0, [fp, #-12]
   224c8:	b	224e0 <main@@Base+0xbfc0>
   224cc:	ldrb	r0, [sp, #24]
   224d0:	ldr	r1, [fp, #16]
   224d4:	strb	r0, [r1]
   224d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   224dc:	str	r0, [fp, #-12]
   224e0:	ldr	r0, [fp, #-12]
   224e4:	sub	sp, fp, #8
   224e8:	pop	{r4, sl, fp, pc}
   224ec:	push	{fp, lr}
   224f0:	mov	fp, sp
   224f4:	sub	sp, sp, #16
   224f8:	str	r0, [fp, #-4]
   224fc:	str	r1, [sp, #8]
   22500:	str	r2, [sp, #4]
   22504:	ldr	r0, [fp, #-4]
   22508:	ldr	r1, [sp, #8]
   2250c:	ldr	r2, [sp, #4]
   22510:	bl	1bc8c <main@@Base+0x576c>
   22514:	str	r0, [sp, #8]
   22518:	ldr	r0, [fp, #-4]
   2251c:	ldr	r1, [sp, #8]
   22520:	ldr	r2, [sp, #4]
   22524:	bl	20ec8 <main@@Base+0xa9a8>
   22528:	str	r0, [sp, #8]
   2252c:	ldr	r0, [sp, #8]
   22530:	mov	sp, fp
   22534:	pop	{fp, pc}
   22538:	sub	sp, sp, #4
   2253c:	strb	r0, [sp, #3]
   22540:	ldrsb	r0, [sp, #3]
   22544:	add	sp, sp, #4
   22548:	bx	lr
   2254c:	push	{r4, sl, fp, lr}
   22550:	add	fp, sp, #8
   22554:	sub	sp, sp, #48	; 0x30
   22558:	ldr	ip, [fp, #12]
   2255c:	ldr	lr, [fp, #8]
   22560:	ldr	r4, [fp, #16]
   22564:	str	r0, [fp, #-16]
   22568:	str	r1, [fp, #-20]	; 0xffffffec
   2256c:	str	r2, [fp, #-24]	; 0xffffffe8
   22570:	str	r3, [sp, #28]
   22574:	str	ip, [sp, #20]
   22578:	str	lr, [sp, #16]
   2257c:	ldr	r0, [sp, #28]
   22580:	cmp	r0, #0
   22584:	str	r4, [sp, #12]
   22588:	beq	225a8 <main@@Base+0xc088>
   2258c:	ldr	r0, [fp, #-16]
   22590:	ldr	r1, [fp, #-20]	; 0xffffffec
   22594:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22598:	movw	r3, #8
   2259c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   225a0:	str	r0, [fp, #-12]
   225a4:	b	225f8 <main@@Base+0xc0d8>
   225a8:	ldr	r0, [sp, #16]
   225ac:	ldr	r1, [sp, #20]
   225b0:	subs	r0, r0, #256	; 0x100
   225b4:	sbcs	r1, r1, #0
   225b8:	str	r0, [sp, #8]
   225bc:	str	r1, [sp, #4]
   225c0:	bcc	225e4 <main@@Base+0xc0c4>
   225c4:	b	225c8 <main@@Base+0xc0a8>
   225c8:	ldr	r0, [fp, #-16]
   225cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   225d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   225d4:	movw	r3, #7
   225d8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   225dc:	str	r0, [fp, #-12]
   225e0:	b	225f8 <main@@Base+0xc0d8>
   225e4:	ldrb	r0, [sp, #16]
   225e8:	ldr	r1, [fp, #16]
   225ec:	strb	r0, [r1]
   225f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   225f4:	str	r0, [fp, #-12]
   225f8:	ldr	r0, [fp, #-12]
   225fc:	sub	sp, fp, #8
   22600:	pop	{r4, sl, fp, pc}
   22604:	sub	sp, sp, #4
   22608:	strb	r0, [sp, #3]
   2260c:	ldrb	r0, [sp, #3]
   22610:	add	sp, sp, #4
   22614:	bx	lr
   22618:	push	{r4, sl, fp, lr}
   2261c:	add	fp, sp, #8
   22620:	sub	sp, sp, #56	; 0x38
   22624:	ldr	ip, [fp, #12]
   22628:	ldr	lr, [fp, #8]
   2262c:	ldr	r4, [fp, #16]
   22630:	str	r0, [fp, #-16]
   22634:	str	r1, [fp, #-20]	; 0xffffffec
   22638:	str	r2, [fp, #-24]	; 0xffffffe8
   2263c:	str	r3, [fp, #-28]	; 0xffffffe4
   22640:	str	ip, [sp, #28]
   22644:	str	lr, [sp, #24]
   22648:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2264c:	cmp	r0, #0
   22650:	str	r4, [sp, #20]
   22654:	beq	226ac <main@@Base+0xc18c>
   22658:	ldr	r0, [sp, #24]
   2265c:	ldr	r1, [sp, #28]
   22660:	movw	r2, #32769	; 0x8001
   22664:	subs	r0, r0, r2
   22668:	sbcs	r1, r1, #0
   2266c:	str	r0, [sp, #16]
   22670:	str	r1, [sp, #12]
   22674:	bcc	22698 <main@@Base+0xc178>
   22678:	b	2267c <main@@Base+0xc15c>
   2267c:	ldr	r0, [fp, #-16]
   22680:	ldr	r1, [fp, #-20]	; 0xffffffec
   22684:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22688:	movw	r3, #8
   2268c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   22690:	str	r0, [fp, #-12]
   22694:	b	226fc <main@@Base+0xc1dc>
   22698:	ldr	r0, [sp, #24]
   2269c:	rsb	r0, r0, #0
   226a0:	ldr	r1, [fp, #16]
   226a4:	strh	r0, [r1]
   226a8:	b	226f4 <main@@Base+0xc1d4>
   226ac:	ldr	r0, [sp, #24]
   226b0:	ldr	r1, [sp, #28]
   226b4:	subs	r0, r0, #32768	; 0x8000
   226b8:	sbcs	r1, r1, #0
   226bc:	str	r0, [sp, #8]
   226c0:	str	r1, [sp, #4]
   226c4:	bcc	226e8 <main@@Base+0xc1c8>
   226c8:	b	226cc <main@@Base+0xc1ac>
   226cc:	ldr	r0, [fp, #-16]
   226d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   226d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   226d8:	movw	r3, #7
   226dc:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   226e0:	str	r0, [fp, #-12]
   226e4:	b	226fc <main@@Base+0xc1dc>
   226e8:	ldrh	r0, [sp, #24]
   226ec:	ldr	r1, [fp, #16]
   226f0:	strh	r0, [r1]
   226f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   226f8:	str	r0, [fp, #-12]
   226fc:	ldr	r0, [fp, #-12]
   22700:	sub	sp, fp, #8
   22704:	pop	{r4, sl, fp, pc}
   22708:	sub	sp, sp, #4
   2270c:	strh	r0, [sp, #2]
   22710:	ldrsh	r0, [sp, #2]
   22714:	add	sp, sp, #4
   22718:	bx	lr
   2271c:	push	{fp, lr}
   22720:	mov	fp, sp
   22724:	sub	sp, sp, #16
   22728:	str	r0, [sp, #8]
   2272c:	str	r1, [sp, #4]
   22730:	str	r2, [sp]
   22734:	ldr	r0, [sp]
   22738:	ldr	r1, [sp, #4]
   2273c:	sub	r0, r0, r1
   22740:	cmp	r0, #4
   22744:	blt	22784 <main@@Base+0xc264>
   22748:	ldr	r0, [sp, #4]
   2274c:	ldr	r0, [r0]
   22750:	movw	r1, #35474	; 0x8a92
   22754:	movt	r1, #37779	; 0x9393
   22758:	add	r1, r0, r1
   2275c:	movw	r2, #30062	; 0x756e
   22760:	movt	r2, #27756	; 0x6c6c
   22764:	cmp	r0, r2
   22768:	movwne	r1, #1
   2276c:	cmp	r1, #0
   22770:	bne	22784 <main@@Base+0xc264>
   22774:	ldr	r0, [sp, #4]
   22778:	add	r0, r0, #4
   2277c:	str	r0, [fp, #-4]
   22780:	b	2279c <main@@Base+0xc27c>
   22784:	ldr	r0, [sp, #8]
   22788:	ldr	r1, [sp, #4]
   2278c:	ldr	r2, [sp]
   22790:	movw	r3, #26
   22794:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   22798:	str	r0, [fp, #-4]
   2279c:	ldr	r0, [fp, #-4]
   227a0:	mov	sp, fp
   227a4:	pop	{fp, pc}
   227a8:	push	{fp, lr}
   227ac:	mov	fp, sp
   227b0:	sub	sp, sp, #64	; 0x40
   227b4:	str	r0, [fp, #-8]
   227b8:	str	r1, [fp, #-12]
   227bc:	str	r2, [fp, #-16]
   227c0:	str	r3, [fp, #-20]	; 0xffffffec
   227c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   227c8:	movw	r1, #0
   227cc:	str	r1, [r0]
   227d0:	ldr	r0, [fp, #-8]
   227d4:	ldr	r0, [r0]
   227d8:	movw	r1, #4
   227dc:	bl	2baec <flatcc_builder_start_table@@Base>
   227e0:	cmp	r0, #0
   227e4:	beq	227ec <main@@Base+0xc2cc>
   227e8:	b	22dd4 <main@@Base+0xc8b4>
   227ec:	ldr	r0, [fp, #-8]
   227f0:	ldr	r1, [fp, #-12]
   227f4:	ldr	r2, [fp, #-16]
   227f8:	sub	r3, fp, #24
   227fc:	bl	1bba8 <main@@Base+0x5688>
   22800:	str	r0, [fp, #-12]
   22804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22808:	cmp	r0, #0
   2280c:	beq	22d94 <main@@Base+0xc874>
   22810:	ldr	r0, [fp, #-8]
   22814:	ldr	r1, [fp, #-12]
   22818:	ldr	r2, [fp, #-16]
   2281c:	bl	1bc8c <main@@Base+0x576c>
   22820:	str	r0, [fp, #-12]
   22824:	ldr	r0, [fp, #-12]
   22828:	ldr	r1, [fp, #-16]
   2282c:	bl	1bd10 <main@@Base+0x57f0>
   22830:	str	r1, [sp, #20]
   22834:	str	r0, [sp, #16]
   22838:	ldrh	r0, [sp, #18]
   2283c:	ldr	r1, [sp, #20]
   22840:	movw	r2, #25455	; 0x636f
   22844:	eor	r2, r2, r1, lsr #16
   22848:	orr	r0, r0, r1, lsl #16
   2284c:	movw	r1, #29234	; 0x7232
   22850:	movt	r1, #27759	; 0x6c6f
   22854:	eor	r0, r0, r1
   22858:	orr	r0, r0, r2
   2285c:	cmp	r0, #0
   22860:	bne	22984 <main@@Base+0xc464>
   22864:	b	22868 <main@@Base+0xc348>
   22868:	ldr	r0, [fp, #-8]
   2286c:	ldr	r1, [fp, #-12]
   22870:	str	r1, [sp, #24]
   22874:	ldr	r2, [fp, #-16]
   22878:	movw	r3, #6
   2287c:	bl	1bd48 <main@@Base+0x5828>
   22880:	str	r0, [fp, #-12]
   22884:	ldr	r0, [sp, #24]
   22888:	ldr	r1, [fp, #-12]
   2288c:	cmp	r0, r1
   22890:	beq	2297c <main@@Base+0xc45c>
   22894:	movw	r0, #0
   22898:	strb	r0, [sp, #15]
   2289c:	ldr	r0, [fp, #-8]
   228a0:	ldr	r1, [fp, #-12]
   228a4:	str	r1, [sp, #24]
   228a8:	ldr	r2, [fp, #-16]
   228ac:	add	r3, sp, #15
   228b0:	bl	1d258 <main@@Base+0x6d38>
   228b4:	str	r0, [fp, #-12]
   228b8:	ldr	r0, [sp, #24]
   228bc:	ldr	r1, [fp, #-12]
   228c0:	cmp	r0, r1
   228c4:	bne	22918 <main@@Base+0xc3f8>
   228c8:	ldr	r0, [pc, #1332]	; 22e04 <main@@Base+0xc8e4>
   228cc:	add	r3, pc, r0
   228d0:	ldr	r0, [fp, #-8]
   228d4:	ldr	r1, [fp, #-12]
   228d8:	str	r1, [sp, #24]
   228dc:	ldr	r2, [fp, #-16]
   228e0:	add	ip, sp, #15
   228e4:	str	ip, [sp]
   228e8:	bl	1d334 <main@@Base+0x6e14>
   228ec:	str	r0, [fp, #-12]
   228f0:	ldr	r0, [fp, #-12]
   228f4:	ldr	r1, [sp, #24]
   228f8:	cmp	r0, r1
   228fc:	beq	22910 <main@@Base+0xc3f0>
   22900:	ldr	r0, [fp, #-12]
   22904:	ldr	r1, [fp, #-16]
   22908:	cmp	r0, r1
   2290c:	bne	22914 <main@@Base+0xc3f4>
   22910:	b	22dd4 <main@@Base+0xc8b4>
   22914:	b	22918 <main@@Base+0xc3f8>
   22918:	ldrsb	r0, [sp, #15]
   2291c:	cmp	r0, #2
   22920:	bne	22938 <main@@Base+0xc418>
   22924:	ldr	r0, [fp, #-8]
   22928:	ldr	r0, [r0, #8]
   2292c:	and	r0, r0, #2
   22930:	cmp	r0, #0
   22934:	beq	22978 <main@@Base+0xc458>
   22938:	ldr	r0, [fp, #-8]
   2293c:	ldr	r0, [r0]
   22940:	movw	r1, #1
   22944:	str	r1, [sp, #8]
   22948:	ldr	r2, [sp, #8]
   2294c:	movw	r3, #1
   22950:	uxth	r3, r3
   22954:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   22958:	str	r0, [fp, #-28]	; 0xffffffe4
   2295c:	movw	r1, #0
   22960:	cmp	r0, r1
   22964:	bne	2296c <main@@Base+0xc44c>
   22968:	b	22dd4 <main@@Base+0xc8b4>
   2296c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22970:	ldrsb	r1, [sp, #15]
   22974:	bl	1d518 <main@@Base+0x6ff8>
   22978:	b	22980 <main@@Base+0xc460>
   2297c:	b	22ad4 <main@@Base+0xc5b4>
   22980:	b	22ad0 <main@@Base+0xc5b0>
   22984:	ldr	r0, [sp, #16]
   22988:	ldr	r1, [sp, #20]
   2298c:	and	r0, r0, #-16777216	; 0xff000000
   22990:	movw	r2, #27759	; 0x6c6f
   22994:	movt	r2, #25455	; 0x636f
   22998:	eor	r1, r1, r2
   2299c:	eor	r0, r0, #1912602624	; 0x72000000
   229a0:	orr	r0, r0, r1
   229a4:	cmp	r0, #0
   229a8:	bne	22ac8 <main@@Base+0xc5a8>
   229ac:	b	229b0 <main@@Base+0xc490>
   229b0:	ldr	r0, [fp, #-8]
   229b4:	ldr	r1, [fp, #-12]
   229b8:	str	r1, [sp, #24]
   229bc:	ldr	r2, [fp, #-16]
   229c0:	movw	r3, #5
   229c4:	bl	1bd48 <main@@Base+0x5828>
   229c8:	str	r0, [fp, #-12]
   229cc:	ldr	r0, [sp, #24]
   229d0:	ldr	r1, [fp, #-12]
   229d4:	cmp	r0, r1
   229d8:	beq	22ac0 <main@@Base+0xc5a0>
   229dc:	movw	r0, #0
   229e0:	strb	r0, [sp, #14]
   229e4:	ldr	r0, [fp, #-8]
   229e8:	ldr	r1, [fp, #-12]
   229ec:	str	r1, [sp, #24]
   229f0:	ldr	r2, [fp, #-16]
   229f4:	add	r3, sp, #14
   229f8:	bl	1d258 <main@@Base+0x6d38>
   229fc:	str	r0, [fp, #-12]
   22a00:	ldr	r0, [sp, #24]
   22a04:	ldr	r1, [fp, #-12]
   22a08:	cmp	r0, r1
   22a0c:	bne	22a60 <main@@Base+0xc540>
   22a10:	ldr	r0, [pc, #992]	; 22df8 <main@@Base+0xc8d8>
   22a14:	add	r3, pc, r0
   22a18:	ldr	r0, [fp, #-8]
   22a1c:	ldr	r1, [fp, #-12]
   22a20:	str	r1, [sp, #24]
   22a24:	ldr	r2, [fp, #-16]
   22a28:	add	ip, sp, #14
   22a2c:	str	ip, [sp]
   22a30:	bl	1d334 <main@@Base+0x6e14>
   22a34:	str	r0, [fp, #-12]
   22a38:	ldr	r0, [fp, #-12]
   22a3c:	ldr	r1, [sp, #24]
   22a40:	cmp	r0, r1
   22a44:	beq	22a58 <main@@Base+0xc538>
   22a48:	ldr	r0, [fp, #-12]
   22a4c:	ldr	r1, [fp, #-16]
   22a50:	cmp	r0, r1
   22a54:	bne	22a5c <main@@Base+0xc53c>
   22a58:	b	22dd4 <main@@Base+0xc8b4>
   22a5c:	b	22a60 <main@@Base+0xc540>
   22a60:	ldrsb	r0, [sp, #14]
   22a64:	cmp	r0, #2
   22a68:	bne	22a80 <main@@Base+0xc560>
   22a6c:	ldr	r0, [fp, #-8]
   22a70:	ldr	r0, [r0, #8]
   22a74:	and	r0, r0, #2
   22a78:	cmp	r0, #0
   22a7c:	beq	22abc <main@@Base+0xc59c>
   22a80:	ldr	r0, [fp, #-8]
   22a84:	ldr	r0, [r0]
   22a88:	movw	r1, #0
   22a8c:	movw	r2, #1
   22a90:	movw	r3, #1
   22a94:	uxth	r3, r3
   22a98:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   22a9c:	str	r0, [fp, #-28]	; 0xffffffe4
   22aa0:	movw	r1, #0
   22aa4:	cmp	r0, r1
   22aa8:	bne	22ab0 <main@@Base+0xc590>
   22aac:	b	22dd4 <main@@Base+0xc8b4>
   22ab0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22ab4:	ldrsb	r1, [sp, #14]
   22ab8:	bl	1d518 <main@@Base+0x6ff8>
   22abc:	b	22ac4 <main@@Base+0xc5a4>
   22ac0:	b	22ad4 <main@@Base+0xc5b4>
   22ac4:	b	22acc <main@@Base+0xc5ac>
   22ac8:	b	22ad4 <main@@Base+0xc5b4>
   22acc:	b	22ad0 <main@@Base+0xc5b0>
   22ad0:	b	22d78 <main@@Base+0xc858>
   22ad4:	ldr	r0, [sp, #20]
   22ad8:	bic	r0, r0, #255	; 0xff
   22adc:	movw	r1, #12800	; 0x3200
   22ae0:	movt	r1, #30051	; 0x7563
   22ae4:	teq	r0, r1
   22ae8:	bne	22c18 <main@@Base+0xc6f8>
   22aec:	b	22af0 <main@@Base+0xc5d0>
   22af0:	ldr	r0, [fp, #-8]
   22af4:	ldr	r1, [fp, #-12]
   22af8:	str	r1, [sp, #24]
   22afc:	ldr	r2, [fp, #-16]
   22b00:	movw	r3, #3
   22b04:	bl	1bd48 <main@@Base+0x5828>
   22b08:	str	r0, [fp, #-12]
   22b0c:	ldr	r0, [sp, #24]
   22b10:	ldr	r1, [fp, #-12]
   22b14:	cmp	r0, r1
   22b18:	beq	22c00 <main@@Base+0xc6e0>
   22b1c:	movw	r0, #0
   22b20:	strb	r0, [sp, #13]
   22b24:	ldr	r0, [fp, #-8]
   22b28:	ldr	r1, [fp, #-12]
   22b2c:	str	r1, [sp, #24]
   22b30:	ldr	r2, [fp, #-16]
   22b34:	add	r3, sp, #13
   22b38:	bl	1d628 <main@@Base+0x7108>
   22b3c:	str	r0, [fp, #-12]
   22b40:	ldr	r0, [sp, #24]
   22b44:	ldr	r1, [fp, #-12]
   22b48:	cmp	r0, r1
   22b4c:	bne	22ba0 <main@@Base+0xc680>
   22b50:	ldr	r0, [pc, #680]	; 22e00 <main@@Base+0xc8e0>
   22b54:	add	r3, pc, r0
   22b58:	ldr	r0, [fp, #-8]
   22b5c:	ldr	r1, [fp, #-12]
   22b60:	str	r1, [sp, #24]
   22b64:	ldr	r2, [fp, #-16]
   22b68:	add	ip, sp, #13
   22b6c:	str	ip, [sp]
   22b70:	bl	1d704 <main@@Base+0x71e4>
   22b74:	str	r0, [fp, #-12]
   22b78:	ldr	r0, [fp, #-12]
   22b7c:	ldr	r1, [sp, #24]
   22b80:	cmp	r0, r1
   22b84:	beq	22b98 <main@@Base+0xc678>
   22b88:	ldr	r0, [fp, #-12]
   22b8c:	ldr	r1, [fp, #-16]
   22b90:	cmp	r0, r1
   22b94:	bne	22b9c <main@@Base+0xc67c>
   22b98:	b	22dd4 <main@@Base+0xc8b4>
   22b9c:	b	22ba0 <main@@Base+0xc680>
   22ba0:	ldrb	r0, [sp, #13]
   22ba4:	cmp	r0, #2
   22ba8:	bne	22bc0 <main@@Base+0xc6a0>
   22bac:	ldr	r0, [fp, #-8]
   22bb0:	ldr	r0, [r0, #8]
   22bb4:	and	r0, r0, #2
   22bb8:	cmp	r0, #0
   22bbc:	beq	22bfc <main@@Base+0xc6dc>
   22bc0:	ldr	r0, [fp, #-8]
   22bc4:	ldr	r0, [r0]
   22bc8:	movw	r1, #3
   22bcc:	movw	r2, #1
   22bd0:	movw	r3, #1
   22bd4:	uxth	r3, r3
   22bd8:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   22bdc:	str	r0, [fp, #-28]	; 0xffffffe4
   22be0:	movw	r1, #0
   22be4:	cmp	r0, r1
   22be8:	bne	22bf0 <main@@Base+0xc6d0>
   22bec:	b	22dd4 <main@@Base+0xc8b4>
   22bf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22bf4:	ldrb	r1, [sp, #13]
   22bf8:	bl	1d8e8 <main@@Base+0x73c8>
   22bfc:	b	22c14 <main@@Base+0xc6f4>
   22c00:	ldr	r0, [fp, #-8]
   22c04:	ldr	r1, [fp, #-12]
   22c08:	ldr	r2, [fp, #-16]
   22c0c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   22c10:	str	r0, [fp, #-12]
   22c14:	b	22d74 <main@@Base+0xc854>
   22c18:	ldr	r0, [sp, #20]
   22c1c:	bfc	r0, #0, #16
   22c20:	movw	r1, #0
   22c24:	movt	r1, #30051	; 0x7563
   22c28:	teq	r0, r1
   22c2c:	bne	22d5c <main@@Base+0xc83c>
   22c30:	b	22c34 <main@@Base+0xc714>
   22c34:	ldr	r0, [fp, #-8]
   22c38:	ldr	r1, [fp, #-12]
   22c3c:	str	r1, [sp, #24]
   22c40:	ldr	r2, [fp, #-16]
   22c44:	movw	r3, #2
   22c48:	bl	1bd48 <main@@Base+0x5828>
   22c4c:	str	r0, [fp, #-12]
   22c50:	ldr	r0, [sp, #24]
   22c54:	ldr	r1, [fp, #-12]
   22c58:	cmp	r0, r1
   22c5c:	beq	22d44 <main@@Base+0xc824>
   22c60:	movw	r0, #0
   22c64:	strb	r0, [sp, #12]
   22c68:	ldr	r0, [fp, #-8]
   22c6c:	ldr	r1, [fp, #-12]
   22c70:	str	r1, [sp, #24]
   22c74:	ldr	r2, [fp, #-16]
   22c78:	add	r3, sp, #12
   22c7c:	bl	1d628 <main@@Base+0x7108>
   22c80:	str	r0, [fp, #-12]
   22c84:	ldr	r0, [sp, #24]
   22c88:	ldr	r1, [fp, #-12]
   22c8c:	cmp	r0, r1
   22c90:	bne	22ce4 <main@@Base+0xc7c4>
   22c94:	ldr	r0, [pc, #352]	; 22dfc <main@@Base+0xc8dc>
   22c98:	add	r3, pc, r0
   22c9c:	ldr	r0, [fp, #-8]
   22ca0:	ldr	r1, [fp, #-12]
   22ca4:	str	r1, [sp, #24]
   22ca8:	ldr	r2, [fp, #-16]
   22cac:	add	ip, sp, #12
   22cb0:	str	ip, [sp]
   22cb4:	bl	1d704 <main@@Base+0x71e4>
   22cb8:	str	r0, [fp, #-12]
   22cbc:	ldr	r0, [fp, #-12]
   22cc0:	ldr	r1, [sp, #24]
   22cc4:	cmp	r0, r1
   22cc8:	beq	22cdc <main@@Base+0xc7bc>
   22ccc:	ldr	r0, [fp, #-12]
   22cd0:	ldr	r1, [fp, #-16]
   22cd4:	cmp	r0, r1
   22cd8:	bne	22ce0 <main@@Base+0xc7c0>
   22cdc:	b	22dd4 <main@@Base+0xc8b4>
   22ce0:	b	22ce4 <main@@Base+0xc7c4>
   22ce4:	ldrb	r0, [sp, #12]
   22ce8:	cmp	r0, #2
   22cec:	bne	22d04 <main@@Base+0xc7e4>
   22cf0:	ldr	r0, [fp, #-8]
   22cf4:	ldr	r0, [r0, #8]
   22cf8:	and	r0, r0, #2
   22cfc:	cmp	r0, #0
   22d00:	beq	22d40 <main@@Base+0xc820>
   22d04:	ldr	r0, [fp, #-8]
   22d08:	ldr	r0, [r0]
   22d0c:	movw	r1, #2
   22d10:	movw	r2, #1
   22d14:	movw	r3, #1
   22d18:	uxth	r3, r3
   22d1c:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   22d20:	str	r0, [fp, #-28]	; 0xffffffe4
   22d24:	movw	r1, #0
   22d28:	cmp	r0, r1
   22d2c:	bne	22d34 <main@@Base+0xc814>
   22d30:	b	22dd4 <main@@Base+0xc8b4>
   22d34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22d38:	ldrb	r1, [sp, #12]
   22d3c:	bl	1d8e8 <main@@Base+0x73c8>
   22d40:	b	22d58 <main@@Base+0xc838>
   22d44:	ldr	r0, [fp, #-8]
   22d48:	ldr	r1, [fp, #-12]
   22d4c:	ldr	r2, [fp, #-16]
   22d50:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   22d54:	str	r0, [fp, #-12]
   22d58:	b	22d70 <main@@Base+0xc850>
   22d5c:	ldr	r0, [fp, #-8]
   22d60:	ldr	r1, [fp, #-12]
   22d64:	ldr	r2, [fp, #-16]
   22d68:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   22d6c:	str	r0, [fp, #-12]
   22d70:	b	22d74 <main@@Base+0xc854>
   22d74:	b	22d78 <main@@Base+0xc858>
   22d78:	ldr	r0, [fp, #-8]
   22d7c:	ldr	r1, [fp, #-12]
   22d80:	ldr	r2, [fp, #-16]
   22d84:	sub	r3, fp, #24
   22d88:	bl	20d64 <main@@Base+0xa844>
   22d8c:	str	r0, [fp, #-12]
   22d90:	b	22804 <main@@Base+0xc2e4>
   22d94:	ldr	r0, [fp, #-8]
   22d98:	ldr	r0, [r0, #20]
   22d9c:	cmp	r0, #0
   22da0:	beq	22da8 <main@@Base+0xc888>
   22da4:	b	22dd4 <main@@Base+0xc8b4>
   22da8:	ldr	r0, [fp, #-8]
   22dac:	ldr	r0, [r0]
   22db0:	bl	2c764 <flatcc_builder_end_table@@Base>
   22db4:	ldr	lr, [fp, #-20]	; 0xffffffec
   22db8:	str	r0, [lr]
   22dbc:	cmp	r0, #0
   22dc0:	bne	22dc8 <main@@Base+0xc8a8>
   22dc4:	b	22dd4 <main@@Base+0xc8b4>
   22dc8:	ldr	r0, [fp, #-12]
   22dcc:	str	r0, [fp, #-4]
   22dd0:	b	22dec <main@@Base+0xc8cc>
   22dd4:	ldr	r0, [fp, #-8]
   22dd8:	ldr	r1, [fp, #-12]
   22ddc:	ldr	r2, [fp, #-16]
   22de0:	movw	r3, #33	; 0x21
   22de4:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   22de8:	str	r0, [fp, #-4]
   22dec:	ldr	r0, [fp, #-4]
   22df0:	mov	sp, fp
   22df4:	pop	{fp, pc}
   22df8:	andeq	sl, r3, r4, ror #15
   22dfc:	andeq	sl, r3, ip, ror r5
   22e00:			; <UNDEFINED> instruction: 0x0003a6b4
   22e04:	andeq	sl, r3, ip, lsl r9
   22e08:	push	{fp, lr}
   22e0c:	mov	fp, sp
   22e10:	sub	sp, sp, #24
   22e14:	str	r0, [fp, #-8]
   22e18:	str	r1, [sp, #12]
   22e1c:	str	r2, [sp, #8]
   22e20:	str	r3, [sp, #4]
   22e24:	ldr	r0, [sp, #4]
   22e28:	movw	r1, #0
   22e2c:	str	r1, [r0]
   22e30:	ldr	r0, [fp, #-8]
   22e34:	ldr	r0, [r0]
   22e38:	bl	2baec <flatcc_builder_start_table@@Base>
   22e3c:	cmp	r0, #0
   22e40:	beq	22e48 <main@@Base+0xc928>
   22e44:	b	22ef0 <main@@Base+0xc9d0>
   22e48:	ldr	r0, [fp, #-8]
   22e4c:	ldr	r1, [sp, #12]
   22e50:	ldr	r2, [sp, #8]
   22e54:	mov	r3, sp
   22e58:	bl	1bba8 <main@@Base+0x5688>
   22e5c:	str	r0, [sp, #12]
   22e60:	ldr	r0, [sp]
   22e64:	cmp	r0, #0
   22e68:	beq	22eb0 <main@@Base+0xc990>
   22e6c:	ldr	r0, [fp, #-8]
   22e70:	ldr	r1, [sp, #12]
   22e74:	ldr	r2, [sp, #8]
   22e78:	bl	1bc8c <main@@Base+0x576c>
   22e7c:	str	r0, [sp, #12]
   22e80:	ldr	r0, [fp, #-8]
   22e84:	ldr	r1, [sp, #12]
   22e88:	ldr	r2, [sp, #8]
   22e8c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   22e90:	str	r0, [sp, #12]
   22e94:	ldr	r0, [fp, #-8]
   22e98:	ldr	r1, [sp, #12]
   22e9c:	ldr	r2, [sp, #8]
   22ea0:	mov	r3, sp
   22ea4:	bl	20d64 <main@@Base+0xa844>
   22ea8:	str	r0, [sp, #12]
   22eac:	b	22e60 <main@@Base+0xc940>
   22eb0:	ldr	r0, [fp, #-8]
   22eb4:	ldr	r0, [r0, #20]
   22eb8:	cmp	r0, #0
   22ebc:	beq	22ec4 <main@@Base+0xc9a4>
   22ec0:	b	22ef0 <main@@Base+0xc9d0>
   22ec4:	ldr	r0, [fp, #-8]
   22ec8:	ldr	r0, [r0]
   22ecc:	bl	2c764 <flatcc_builder_end_table@@Base>
   22ed0:	ldr	lr, [sp, #4]
   22ed4:	str	r0, [lr]
   22ed8:	cmp	r0, #0
   22edc:	bne	22ee4 <main@@Base+0xc9c4>
   22ee0:	b	22ef0 <main@@Base+0xc9d0>
   22ee4:	ldr	r0, [sp, #12]
   22ee8:	str	r0, [fp, #-4]
   22eec:	b	22f08 <main@@Base+0xc9e8>
   22ef0:	ldr	r0, [fp, #-8]
   22ef4:	ldr	r1, [sp, #12]
   22ef8:	ldr	r2, [sp, #8]
   22efc:	movw	r3, #33	; 0x21
   22f00:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   22f04:	str	r0, [fp, #-4]
   22f08:	ldr	r0, [fp, #-4]
   22f0c:	mov	sp, fp
   22f10:	pop	{fp, pc}
   22f14:	push	{r4, sl, fp, lr}
   22f18:	add	fp, sp, #8
   22f1c:	sub	sp, sp, #96	; 0x60
   22f20:	str	r0, [fp, #-16]
   22f24:	str	r1, [fp, #-20]	; 0xffffffec
   22f28:	str	r2, [fp, #-24]	; 0xffffffe8
   22f2c:	str	r3, [fp, #-28]	; 0xffffffe4
   22f30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22f34:	movw	r1, #0
   22f38:	str	r1, [r0]
   22f3c:	ldr	r0, [fp, #-16]
   22f40:	ldr	r0, [r0]
   22f44:	movw	r1, #4
   22f48:	bl	2baec <flatcc_builder_start_table@@Base>
   22f4c:	cmp	r0, #0
   22f50:	beq	22f58 <main@@Base+0xca38>
   22f54:	b	2340c <main@@Base+0xceec>
   22f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22f5c:	ldr	r1, [fp, #-16]
   22f60:	ldr	r2, [fp, #-20]	; 0xffffffec
   22f64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22f68:	str	r0, [sp, #40]	; 0x28
   22f6c:	mov	r0, r1
   22f70:	mov	r1, r2
   22f74:	mov	r2, r3
   22f78:	movw	r3, #1
   22f7c:	add	ip, sp, #44	; 0x2c
   22f80:	str	ip, [sp]
   22f84:	bl	366ac <flatcc_json_parser_prepare_unions@@Base>
   22f88:	ldr	r1, [sp, #40]	; 0x28
   22f8c:	cmp	r1, r0
   22f90:	bne	22f98 <main@@Base+0xca78>
   22f94:	b	2340c <main@@Base+0xceec>
   22f98:	ldr	r0, [fp, #-16]
   22f9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   22fa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22fa4:	sub	r3, fp, #32
   22fa8:	bl	1bba8 <main@@Base+0x5688>
   22fac:	str	r0, [fp, #-20]	; 0xffffffec
   22fb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22fb4:	cmp	r0, #0
   22fb8:	beq	233b4 <main@@Base+0xce94>
   22fbc:	ldr	r0, [fp, #-16]
   22fc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   22fc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22fc8:	bl	1bc8c <main@@Base+0x576c>
   22fcc:	str	r0, [fp, #-20]	; 0xffffffec
   22fd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   22fd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22fd8:	bl	1bd10 <main@@Base+0x57f0>
   22fdc:	str	r1, [sp, #52]	; 0x34
   22fe0:	str	r0, [sp, #48]	; 0x30
   22fe4:	ldr	r0, [sp, #48]	; 0x30
   22fe8:	ldr	r1, [sp, #52]	; 0x34
   22fec:	movw	r2, #28281	; 0x6e79
   22ff0:	movt	r2, #28001	; 0x6d61
   22ff4:	eor	r1, r1, r2
   22ff8:	movw	r2, #31071	; 0x795f
   22ffc:	movt	r2, #24942	; 0x616e
   23000:	eor	r0, r0, r2
   23004:	orr	r0, r0, r1
   23008:	cmp	r0, #0
   2300c:	bne	23120 <main@@Base+0xcc00>
   23010:	b	23014 <main@@Base+0xcaf4>
   23014:	ldr	r0, [fp, #-20]	; 0xffffffec
   23018:	add	r0, r0, #8
   2301c:	str	r0, [fp, #-20]	; 0xffffffec
   23020:	ldr	r0, [fp, #-20]	; 0xffffffec
   23024:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23028:	bl	1bd10 <main@@Base+0x57f0>
   2302c:	str	r1, [sp, #52]	; 0x34
   23030:	str	r0, [sp, #48]	; 0x30
   23034:	ldr	r0, [sp, #52]	; 0x34
   23038:	movw	r1, #28773	; 0x7065
   2303c:	movt	r1, #29817	; 0x7479
   23040:	teq	r0, r1
   23044:	bne	23108 <main@@Base+0xcbe8>
   23048:	b	2304c <main@@Base+0xcb2c>
   2304c:	ldr	r0, [fp, #-16]
   23050:	ldr	r1, [fp, #-20]	; 0xffffffec
   23054:	str	r1, [fp, #-48]	; 0xffffffd0
   23058:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2305c:	movw	r3, #4
   23060:	bl	1bd48 <main@@Base+0x5828>
   23064:	str	r0, [fp, #-20]	; 0xffffffec
   23068:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2306c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23070:	cmp	r0, r1
   23074:	beq	230f0 <main@@Base+0xcbd0>
   23078:	ldr	r0, [pc, #948]	; 23434 <main@@Base+0xcf14>
   2307c:	add	r0, pc, r0
   23080:	ldr	r1, [pc, #944]	; 23438 <main@@Base+0xcf18>
   23084:	add	r1, pc, r1
   23088:	ldr	r2, [pc, #940]	; 2343c <main@@Base+0xcf1c>
   2308c:	add	r2, pc, r2
   23090:	ldr	r3, [fp, #-16]
   23094:	ldr	ip, [fp, #-20]	; 0xffffffec
   23098:	ldr	lr, [fp, #-24]	; 0xffffffe8
   2309c:	ldr	r4, [sp, #44]	; 0x2c
   230a0:	str	r0, [sp, #36]	; 0x24
   230a4:	mov	r0, r3
   230a8:	str	r1, [sp, #32]
   230ac:	mov	r1, ip
   230b0:	str	r2, [sp, #28]
   230b4:	mov	r2, lr
   230b8:	movw	r3, #0
   230bc:	movw	ip, #3
   230c0:	uxth	ip, ip
   230c4:	str	ip, [sp]
   230c8:	str	r4, [sp, #4]
   230cc:	ldr	ip, [sp, #36]	; 0x24
   230d0:	str	ip, [sp, #8]
   230d4:	ldr	lr, [sp, #32]
   230d8:	str	lr, [sp, #12]
   230dc:	ldr	r4, [sp, #28]
   230e0:	str	r4, [sp, #16]
   230e4:	bl	372ac <flatcc_json_parser_union_type_vector@@Base>
   230e8:	str	r0, [fp, #-20]	; 0xffffffec
   230ec:	b	23104 <main@@Base+0xcbe4>
   230f0:	ldr	r0, [fp, #-16]
   230f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   230f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   230fc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23100:	str	r0, [fp, #-20]	; 0xffffffec
   23104:	b	2311c <main@@Base+0xcbfc>
   23108:	ldr	r0, [fp, #-16]
   2310c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23110:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23114:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23118:	str	r0, [fp, #-20]	; 0xffffffec
   2311c:	b	23398 <main@@Base+0xce78>
   23120:	ldr	r0, [sp, #48]	; 0x30
   23124:	ldr	r1, [sp, #52]	; 0x34
   23128:	movw	r2, #24942	; 0x616e
   2312c:	movt	r2, #109	; 0x6d
   23130:	eor	r2, r2, r1, lsr #8
   23134:	lsr	r0, r0, #8
   23138:	orr	r0, r0, r1, lsl #24
   2313c:	movw	r1, #28281	; 0x6e79
   23140:	movt	r1, #31073	; 0x7961
   23144:	eor	r0, r0, r1
   23148:	orr	r0, r0, r2
   2314c:	cmp	r0, #0
   23150:	bne	231dc <main@@Base+0xccbc>
   23154:	b	23158 <main@@Base+0xcc38>
   23158:	ldr	r0, [fp, #-16]
   2315c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23160:	str	r1, [fp, #-48]	; 0xffffffd0
   23164:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23168:	movw	r3, #7
   2316c:	bl	1bd48 <main@@Base+0x5828>
   23170:	str	r0, [fp, #-20]	; 0xffffffec
   23174:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23178:	ldr	r1, [fp, #-20]	; 0xffffffec
   2317c:	cmp	r0, r1
   23180:	beq	231d4 <main@@Base+0xccb4>
   23184:	ldr	r0, [pc, #676]	; 23430 <main@@Base+0xcf10>
   23188:	add	r0, pc, r0
   2318c:	ldr	r1, [fp, #-16]
   23190:	ldr	r2, [fp, #-20]	; 0xffffffec
   23194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23198:	ldr	ip, [sp, #44]	; 0x2c
   2319c:	str	r0, [sp, #24]
   231a0:	mov	r0, r1
   231a4:	mov	r1, r2
   231a8:	mov	r2, r3
   231ac:	movw	r3, #0
   231b0:	movw	lr, #3
   231b4:	uxth	lr, lr
   231b8:	str	lr, [sp]
   231bc:	str	ip, [sp, #4]
   231c0:	ldr	ip, [sp, #24]
   231c4:	str	ip, [sp, #8]
   231c8:	bl	36f20 <flatcc_json_parser_union_vector@@Base>
   231cc:	str	r0, [fp, #-20]	; 0xffffffec
   231d0:	b	231d8 <main@@Base+0xccb8>
   231d4:	b	231e4 <main@@Base+0xccc4>
   231d8:	b	231e0 <main@@Base+0xccc0>
   231dc:	b	231e4 <main@@Base+0xccc4>
   231e0:	b	23394 <main@@Base+0xce74>
   231e4:	ldrh	r0, [sp, #50]	; 0x32
   231e8:	ldr	r1, [sp, #52]	; 0x34
   231ec:	movw	r2, #28786	; 0x7072
   231f0:	eor	r2, r2, r1, lsr #16
   231f4:	orr	r0, r0, r1, lsl #16
   231f8:	movw	r1, #27000	; 0x6978
   231fc:	movt	r1, #25958	; 0x6566
   23200:	eor	r0, r0, r1
   23204:	orr	r0, r0, r2
   23208:	cmp	r0, #0
   2320c:	bne	232b0 <main@@Base+0xcd90>
   23210:	b	23214 <main@@Base+0xccf4>
   23214:	ldr	r0, [fp, #-16]
   23218:	ldr	r1, [fp, #-20]	; 0xffffffec
   2321c:	str	r1, [fp, #-48]	; 0xffffffd0
   23220:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23224:	movw	r3, #6
   23228:	bl	1bd48 <main@@Base+0x5828>
   2322c:	str	r0, [fp, #-20]	; 0xffffffec
   23230:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23234:	ldr	r1, [fp, #-20]	; 0xffffffec
   23238:	cmp	r0, r1
   2323c:	beq	23298 <main@@Base+0xcd78>
   23240:	ldr	r0, [fp, #-16]
   23244:	ldr	r1, [fp, #-20]	; 0xffffffec
   23248:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2324c:	sub	r3, fp, #40	; 0x28
   23250:	bl	234d0 <main@@Base+0xcfb0>
   23254:	str	r0, [fp, #-20]	; 0xffffffec
   23258:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2325c:	cmp	r0, #0
   23260:	beq	23284 <main@@Base+0xcd64>
   23264:	ldr	r0, [fp, #-16]
   23268:	ldr	r0, [r0]
   2326c:	movw	r1, #0
   23270:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   23274:	str	r0, [fp, #-44]	; 0xffffffd4
   23278:	movw	r1, #0
   2327c:	cmp	r0, r1
   23280:	bne	23288 <main@@Base+0xcd68>
   23284:	b	2340c <main@@Base+0xceec>
   23288:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2328c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23290:	str	r0, [r1]
   23294:	b	232ac <main@@Base+0xcd8c>
   23298:	ldr	r0, [fp, #-16]
   2329c:	ldr	r1, [fp, #-20]	; 0xffffffec
   232a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   232a4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   232a8:	str	r0, [fp, #-20]	; 0xffffffec
   232ac:	b	23390 <main@@Base+0xce70>
   232b0:	ldr	r0, [sp, #48]	; 0x30
   232b4:	ldr	r1, [sp, #52]	; 0x34
   232b8:	and	r0, r0, #-16777216	; 0xff000000
   232bc:	movw	r2, #30313	; 0x7669
   232c0:	movt	r2, #28015	; 0x6d6f
   232c4:	eor	r1, r1, r2
   232c8:	eor	r0, r0, #1694498816	; 0x65000000
   232cc:	orr	r0, r0, r1
   232d0:	cmp	r0, #0
   232d4:	bne	23378 <main@@Base+0xce58>
   232d8:	b	232dc <main@@Base+0xcdbc>
   232dc:	ldr	r0, [fp, #-16]
   232e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   232e4:	str	r1, [fp, #-48]	; 0xffffffd0
   232e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   232ec:	movw	r3, #5
   232f0:	bl	1bd48 <main@@Base+0x5828>
   232f4:	str	r0, [fp, #-20]	; 0xffffffec
   232f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   232fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   23300:	cmp	r0, r1
   23304:	beq	23360 <main@@Base+0xce40>
   23308:	ldr	r0, [fp, #-16]
   2330c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23310:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23314:	sub	r3, fp, #40	; 0x28
   23318:	bl	23914 <main@@Base+0xd3f4>
   2331c:	str	r0, [fp, #-20]	; 0xffffffec
   23320:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23324:	cmp	r0, #0
   23328:	beq	2334c <main@@Base+0xce2c>
   2332c:	ldr	r0, [fp, #-16]
   23330:	ldr	r0, [r0]
   23334:	movw	r1, #1
   23338:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   2333c:	str	r0, [fp, #-44]	; 0xffffffd4
   23340:	movw	r1, #0
   23344:	cmp	r0, r1
   23348:	bne	23350 <main@@Base+0xce30>
   2334c:	b	2340c <main@@Base+0xceec>
   23350:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23354:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23358:	str	r0, [r1]
   2335c:	b	23374 <main@@Base+0xce54>
   23360:	ldr	r0, [fp, #-16]
   23364:	ldr	r1, [fp, #-20]	; 0xffffffec
   23368:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2336c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23370:	str	r0, [fp, #-20]	; 0xffffffec
   23374:	b	2338c <main@@Base+0xce6c>
   23378:	ldr	r0, [fp, #-16]
   2337c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23380:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23384:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23388:	str	r0, [fp, #-20]	; 0xffffffec
   2338c:	b	23390 <main@@Base+0xce70>
   23390:	b	23394 <main@@Base+0xce74>
   23394:	b	23398 <main@@Base+0xce78>
   23398:	ldr	r0, [fp, #-16]
   2339c:	ldr	r1, [fp, #-20]	; 0xffffffec
   233a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   233a4:	sub	r3, fp, #32
   233a8:	bl	20d64 <main@@Base+0xa844>
   233ac:	str	r0, [fp, #-20]	; 0xffffffec
   233b0:	b	22fb0 <main@@Base+0xca90>
   233b4:	ldr	r0, [fp, #-16]
   233b8:	ldr	r0, [r0, #20]
   233bc:	cmp	r0, #0
   233c0:	beq	233c8 <main@@Base+0xcea8>
   233c4:	b	2340c <main@@Base+0xceec>
   233c8:	ldr	r0, [fp, #-16]
   233cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   233d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   233d4:	ldr	r3, [sp, #44]	; 0x2c
   233d8:	bl	36754 <flatcc_json_parser_finalize_unions@@Base>
   233dc:	str	r0, [fp, #-20]	; 0xffffffec
   233e0:	ldr	r0, [fp, #-16]
   233e4:	ldr	r0, [r0]
   233e8:	bl	2c764 <flatcc_builder_end_table@@Base>
   233ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   233f0:	str	r0, [r1]
   233f4:	cmp	r0, #0
   233f8:	bne	23400 <main@@Base+0xcee0>
   233fc:	b	2340c <main@@Base+0xceec>
   23400:	ldr	r0, [fp, #-20]	; 0xffffffec
   23404:	str	r0, [fp, #-12]
   23408:	b	23424 <main@@Base+0xcf04>
   2340c:	ldr	r0, [fp, #-16]
   23410:	ldr	r1, [fp, #-20]	; 0xffffffec
   23414:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23418:	movw	r3, #33	; 0x21
   2341c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   23420:	str	r0, [fp, #-12]
   23424:	ldr	r0, [fp, #-12]
   23428:	sub	sp, fp, #8
   2342c:	pop	{r4, sl, fp, pc}
   23430:			; <UNDEFINED> instruction: 0xffffb6d8
   23434:	andeq	sl, r3, r4, lsr #3
   23438:			; <UNDEFINED> instruction: 0xffffb7dc
   2343c:	andeq	r0, r0, ip, lsr #7
   23440:	sub	sp, sp, #12
   23444:	strb	r0, [sp, #7]
   23448:	ldrb	r0, [sp, #7]
   2344c:	mov	r1, r0
   23450:	cmp	r0, #4
   23454:	str	r1, [sp]
   23458:	bhi	234bc <main@@Base+0xcf9c>
   2345c:	add	r0, pc, #8
   23460:	ldr	r1, [sp]
   23464:	ldr	r2, [r0, r1, lsl #2]
   23468:	add	pc, r0, r2
   2346c:	andeq	r0, r0, r4, lsl r0
   23470:	andeq	r0, r0, r0, lsr #32
   23474:	andeq	r0, r0, ip, lsr #32
   23478:	andeq	r0, r0, r8, lsr r0
   2347c:	andeq	r0, r0, r4, asr #32
   23480:	movw	r0, #1
   23484:	str	r0, [sp, #8]
   23488:	b	234c4 <main@@Base+0xcfa4>
   2348c:	movw	r0, #1
   23490:	str	r0, [sp, #8]
   23494:	b	234c4 <main@@Base+0xcfa4>
   23498:	movw	r0, #1
   2349c:	str	r0, [sp, #8]
   234a0:	b	234c4 <main@@Base+0xcfa4>
   234a4:	movw	r0, #1
   234a8:	str	r0, [sp, #8]
   234ac:	b	234c4 <main@@Base+0xcfa4>
   234b0:	movw	r0, #1
   234b4:	str	r0, [sp, #8]
   234b8:	b	234c4 <main@@Base+0xcfa4>
   234bc:	movw	r0, #0
   234c0:	str	r0, [sp, #8]
   234c4:	ldr	r0, [sp, #8]
   234c8:	add	sp, sp, #12
   234cc:	bx	lr
   234d0:	push	{fp, lr}
   234d4:	mov	fp, sp
   234d8:	sub	sp, sp, #48	; 0x30
   234dc:	str	r0, [fp, #-8]
   234e0:	str	r1, [fp, #-12]
   234e4:	str	r2, [fp, #-16]
   234e8:	str	r3, [fp, #-20]	; 0xffffffec
   234ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   234f0:	movw	r1, #0
   234f4:	str	r1, [r0]
   234f8:	ldr	r0, [fp, #-8]
   234fc:	ldr	r0, [r0]
   23500:	movw	r1, #3
   23504:	bl	2baec <flatcc_builder_start_table@@Base>
   23508:	cmp	r0, #0
   2350c:	beq	23514 <main@@Base+0xcff4>
   23510:	b	238f0 <main@@Base+0xd3d0>
   23514:	ldr	r0, [fp, #-8]
   23518:	ldr	r1, [fp, #-12]
   2351c:	ldr	r2, [fp, #-16]
   23520:	add	r3, sp, #24
   23524:	bl	1bba8 <main@@Base+0x5688>
   23528:	str	r0, [fp, #-12]
   2352c:	ldr	r0, [sp, #24]
   23530:	cmp	r0, #0
   23534:	beq	238b0 <main@@Base+0xd390>
   23538:	ldr	r0, [fp, #-8]
   2353c:	ldr	r1, [fp, #-12]
   23540:	ldr	r2, [fp, #-16]
   23544:	bl	1bc8c <main@@Base+0x576c>
   23548:	str	r0, [fp, #-12]
   2354c:	ldr	r0, [fp, #-12]
   23550:	ldr	r1, [fp, #-16]
   23554:	bl	1bd10 <main@@Base+0x57f0>
   23558:	str	r1, [sp, #4]
   2355c:	str	r0, [sp]
   23560:	ldr	r0, [sp]
   23564:	ldr	r1, [sp, #4]
   23568:	movw	r2, #29556	; 0x7374
   2356c:	movt	r2, #29797	; 0x7465
   23570:	eor	r1, r1, r2
   23574:	movw	r2, #28526	; 0x6f6e
   23578:	movt	r2, #27251	; 0x6a73
   2357c:	eor	r0, r0, r2
   23580:	orr	r0, r0, r1
   23584:	cmp	r0, #0
   23588:	bne	23880 <main@@Base+0xd360>
   2358c:	b	23590 <main@@Base+0xd070>
   23590:	ldr	r0, [fp, #-12]
   23594:	add	r0, r0, #8
   23598:	str	r0, [fp, #-12]
   2359c:	ldr	r0, [fp, #-12]
   235a0:	ldr	r1, [fp, #-16]
   235a4:	bl	1bd10 <main@@Base+0x57f0>
   235a8:	str	r1, [sp, #4]
   235ac:	str	r0, [sp]
   235b0:	ldr	r0, [sp]
   235b4:	ldr	r1, [sp, #4]
   235b8:	movw	lr, #25958	; 0x6566
   235bc:	movt	lr, #28786	; 0x7072
   235c0:	eor	r1, r1, lr
   235c4:	movw	lr, #28769	; 0x7061
   235c8:	movt	lr, #27000	; 0x6978
   235cc:	eor	r0, r0, lr
   235d0:	orr	r0, r0, r1
   235d4:	cmp	r0, #0
   235d8:	bne	23868 <main@@Base+0xd348>
   235dc:	b	235e0 <main@@Base+0xd0c0>
   235e0:	ldr	r0, [fp, #-12]
   235e4:	add	r0, r0, #8
   235e8:	str	r0, [fp, #-12]
   235ec:	ldr	r0, [fp, #-12]
   235f0:	ldr	r1, [fp, #-16]
   235f4:	bl	1bd10 <main@@Base+0x57f0>
   235f8:	str	r1, [sp, #4]
   235fc:	str	r0, [sp]
   23600:	ldrh	r0, [sp, #2]
   23604:	ldr	r1, [sp, #4]
   23608:	movw	lr, #29299	; 0x7273
   2360c:	eor	lr, lr, r1, lsr #16
   23610:	orr	r0, r0, r1, lsl #16
   23614:	movw	r1, #26418	; 0x6732
   23618:	movt	r1, #26990	; 0x696e
   2361c:	eor	r0, r0, r1
   23620:	orr	r0, r0, lr
   23624:	cmp	r0, #0
   23628:	bne	236bc <main@@Base+0xd19c>
   2362c:	b	23630 <main@@Base+0xd110>
   23630:	ldr	r0, [fp, #-8]
   23634:	ldr	r1, [fp, #-12]
   23638:	str	r1, [sp, #8]
   2363c:	ldr	r2, [fp, #-16]
   23640:	movw	r3, #6
   23644:	bl	1bd48 <main@@Base+0x5828>
   23648:	str	r0, [fp, #-12]
   2364c:	ldr	r0, [sp, #8]
   23650:	ldr	r1, [fp, #-12]
   23654:	cmp	r0, r1
   23658:	beq	236b4 <main@@Base+0xd194>
   2365c:	ldr	r0, [fp, #-8]
   23660:	ldr	r1, [fp, #-12]
   23664:	ldr	r2, [fp, #-16]
   23668:	add	r3, sp, #16
   2366c:	bl	245b4 <main@@Base+0xe094>
   23670:	str	r0, [fp, #-12]
   23674:	ldr	r0, [sp, #16]
   23678:	cmp	r0, #0
   2367c:	beq	236a0 <main@@Base+0xd180>
   23680:	ldr	r0, [fp, #-8]
   23684:	ldr	r0, [r0]
   23688:	movw	r1, #1
   2368c:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   23690:	str	r0, [sp, #12]
   23694:	movw	r1, #0
   23698:	cmp	r0, r1
   2369c:	bne	236a4 <main@@Base+0xd184>
   236a0:	b	238f0 <main@@Base+0xd3d0>
   236a4:	ldr	r0, [sp, #16]
   236a8:	ldr	r1, [sp, #12]
   236ac:	str	r0, [r1]
   236b0:	b	236b8 <main@@Base+0xd198>
   236b4:	b	23780 <main@@Base+0xd260>
   236b8:	b	2377c <main@@Base+0xd25c>
   236bc:	ldr	r0, [sp]
   236c0:	ldr	r1, [sp, #4]
   236c4:	and	r0, r0, #-16777216	; 0xff000000
   236c8:	movw	r2, #26990	; 0x696e
   236cc:	movt	r2, #29299	; 0x7273
   236d0:	eor	r1, r1, r2
   236d4:	eor	r0, r0, #1728053248	; 0x67000000
   236d8:	orr	r0, r0, r1
   236dc:	cmp	r0, #0
   236e0:	bne	23774 <main@@Base+0xd254>
   236e4:	b	236e8 <main@@Base+0xd1c8>
   236e8:	ldr	r0, [fp, #-8]
   236ec:	ldr	r1, [fp, #-12]
   236f0:	str	r1, [sp, #8]
   236f4:	ldr	r2, [fp, #-16]
   236f8:	movw	r3, #5
   236fc:	bl	1bd48 <main@@Base+0x5828>
   23700:	str	r0, [fp, #-12]
   23704:	ldr	r0, [sp, #8]
   23708:	ldr	r1, [fp, #-12]
   2370c:	cmp	r0, r1
   23710:	beq	2376c <main@@Base+0xd24c>
   23714:	ldr	r0, [fp, #-8]
   23718:	ldr	r1, [fp, #-12]
   2371c:	ldr	r2, [fp, #-16]
   23720:	add	r3, sp, #16
   23724:	bl	24a18 <main@@Base+0xe4f8>
   23728:	str	r0, [fp, #-12]
   2372c:	ldr	r0, [sp, #16]
   23730:	cmp	r0, #0
   23734:	beq	23758 <main@@Base+0xd238>
   23738:	ldr	r0, [fp, #-8]
   2373c:	ldr	r0, [r0]
   23740:	movw	r1, #0
   23744:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   23748:	str	r0, [sp, #12]
   2374c:	movw	r1, #0
   23750:	cmp	r0, r1
   23754:	bne	2375c <main@@Base+0xd23c>
   23758:	b	238f0 <main@@Base+0xd3d0>
   2375c:	ldr	r0, [sp, #16]
   23760:	ldr	r1, [sp, #12]
   23764:	str	r0, [r1]
   23768:	b	23770 <main@@Base+0xd250>
   2376c:	b	23780 <main@@Base+0xd260>
   23770:	b	23778 <main@@Base+0xd258>
   23774:	b	23780 <main@@Base+0xd260>
   23778:	b	2377c <main@@Base+0xd25c>
   2377c:	b	23864 <main@@Base+0xd344>
   23780:	ldrh	r0, [sp, #2]
   23784:	ldr	r1, [sp, #4]
   23788:	movw	r2, #29299	; 0x7273
   2378c:	eor	r2, r2, r1, lsr #16
   23790:	orr	r0, r0, r1, lsl #16
   23794:	movw	r1, #26419	; 0x6733
   23798:	movt	r1, #26990	; 0x696e
   2379c:	eor	r0, r0, r1
   237a0:	orr	r0, r0, r2
   237a4:	cmp	r0, #0
   237a8:	bne	2384c <main@@Base+0xd32c>
   237ac:	b	237b0 <main@@Base+0xd290>
   237b0:	ldr	r0, [fp, #-8]
   237b4:	ldr	r1, [fp, #-12]
   237b8:	str	r1, [sp, #8]
   237bc:	ldr	r2, [fp, #-16]
   237c0:	movw	r3, #6
   237c4:	bl	1bd48 <main@@Base+0x5828>
   237c8:	str	r0, [fp, #-12]
   237cc:	ldr	r0, [sp, #8]
   237d0:	ldr	r1, [fp, #-12]
   237d4:	cmp	r0, r1
   237d8:	beq	23834 <main@@Base+0xd314>
   237dc:	ldr	r0, [fp, #-8]
   237e0:	ldr	r1, [fp, #-12]
   237e4:	ldr	r2, [fp, #-16]
   237e8:	add	r3, sp, #16
   237ec:	bl	25650 <main@@Base+0xf130>
   237f0:	str	r0, [fp, #-12]
   237f4:	ldr	r0, [sp, #16]
   237f8:	cmp	r0, #0
   237fc:	beq	23820 <main@@Base+0xd300>
   23800:	ldr	r0, [fp, #-8]
   23804:	ldr	r0, [r0]
   23808:	movw	r1, #2
   2380c:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   23810:	str	r0, [sp, #12]
   23814:	movw	r1, #0
   23818:	cmp	r0, r1
   2381c:	bne	23824 <main@@Base+0xd304>
   23820:	b	238f0 <main@@Base+0xd3d0>
   23824:	ldr	r0, [sp, #16]
   23828:	ldr	r1, [sp, #12]
   2382c:	str	r0, [r1]
   23830:	b	23848 <main@@Base+0xd328>
   23834:	ldr	r0, [fp, #-8]
   23838:	ldr	r1, [fp, #-12]
   2383c:	ldr	r2, [fp, #-16]
   23840:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23844:	str	r0, [fp, #-12]
   23848:	b	23860 <main@@Base+0xd340>
   2384c:	ldr	r0, [fp, #-8]
   23850:	ldr	r1, [fp, #-12]
   23854:	ldr	r2, [fp, #-16]
   23858:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   2385c:	str	r0, [fp, #-12]
   23860:	b	23864 <main@@Base+0xd344>
   23864:	b	2387c <main@@Base+0xd35c>
   23868:	ldr	r0, [fp, #-8]
   2386c:	ldr	r1, [fp, #-12]
   23870:	ldr	r2, [fp, #-16]
   23874:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23878:	str	r0, [fp, #-12]
   2387c:	b	23894 <main@@Base+0xd374>
   23880:	ldr	r0, [fp, #-8]
   23884:	ldr	r1, [fp, #-12]
   23888:	ldr	r2, [fp, #-16]
   2388c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23890:	str	r0, [fp, #-12]
   23894:	ldr	r0, [fp, #-8]
   23898:	ldr	r1, [fp, #-12]
   2389c:	ldr	r2, [fp, #-16]
   238a0:	add	r3, sp, #24
   238a4:	bl	20d64 <main@@Base+0xa844>
   238a8:	str	r0, [fp, #-12]
   238ac:	b	2352c <main@@Base+0xd00c>
   238b0:	ldr	r0, [fp, #-8]
   238b4:	ldr	r0, [r0, #20]
   238b8:	cmp	r0, #0
   238bc:	beq	238c4 <main@@Base+0xd3a4>
   238c0:	b	238f0 <main@@Base+0xd3d0>
   238c4:	ldr	r0, [fp, #-8]
   238c8:	ldr	r0, [r0]
   238cc:	bl	2c764 <flatcc_builder_end_table@@Base>
   238d0:	ldr	lr, [fp, #-20]	; 0xffffffec
   238d4:	str	r0, [lr]
   238d8:	cmp	r0, #0
   238dc:	bne	238e4 <main@@Base+0xd3c4>
   238e0:	b	238f0 <main@@Base+0xd3d0>
   238e4:	ldr	r0, [fp, #-12]
   238e8:	str	r0, [fp, #-4]
   238ec:	b	23908 <main@@Base+0xd3e8>
   238f0:	ldr	r0, [fp, #-8]
   238f4:	ldr	r1, [fp, #-12]
   238f8:	ldr	r2, [fp, #-16]
   238fc:	movw	r3, #33	; 0x21
   23900:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   23904:	str	r0, [fp, #-4]
   23908:	ldr	r0, [fp, #-4]
   2390c:	mov	sp, fp
   23910:	pop	{fp, pc}
   23914:	push	{r4, sl, fp, lr}
   23918:	add	fp, sp, #8
   2391c:	sub	sp, sp, #160	; 0xa0
   23920:	str	r0, [fp, #-16]
   23924:	str	r1, [fp, #-20]	; 0xffffffec
   23928:	str	r2, [fp, #-24]	; 0xffffffe8
   2392c:	str	r3, [fp, #-28]	; 0xffffffe4
   23930:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23934:	movw	r1, #0
   23938:	str	r1, [r0]
   2393c:	ldr	r0, [fp, #-16]
   23940:	ldr	r0, [r0]
   23944:	movw	r1, #10
   23948:	bl	2baec <flatcc_builder_start_table@@Base>
   2394c:	cmp	r0, #0
   23950:	beq	23958 <main@@Base+0xd438>
   23954:	b	24550 <main@@Base+0xe030>
   23958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2395c:	ldr	r1, [fp, #-16]
   23960:	ldr	r2, [fp, #-20]	; 0xffffffec
   23964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23968:	str	r0, [fp, #-64]	; 0xffffffc0
   2396c:	mov	r0, r1
   23970:	mov	r1, r2
   23974:	mov	r2, r3
   23978:	movw	r3, #5
   2397c:	sub	ip, fp, #60	; 0x3c
   23980:	str	ip, [sp]
   23984:	bl	366ac <flatcc_json_parser_prepare_unions@@Base>
   23988:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2398c:	cmp	r1, r0
   23990:	bne	23998 <main@@Base+0xd478>
   23994:	b	24550 <main@@Base+0xe030>
   23998:	ldr	r0, [fp, #-16]
   2399c:	ldr	r1, [fp, #-20]	; 0xffffffec
   239a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   239a4:	sub	r3, fp, #32
   239a8:	bl	1bba8 <main@@Base+0x5688>
   239ac:	str	r0, [fp, #-20]	; 0xffffffec
   239b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   239b4:	cmp	r0, #0
   239b8:	beq	244f8 <main@@Base+0xdfd8>
   239bc:	ldr	r0, [fp, #-16]
   239c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   239c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   239c8:	bl	1bc8c <main@@Base+0x576c>
   239cc:	str	r0, [fp, #-20]	; 0xffffffec
   239d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   239d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   239d8:	bl	1bd10 <main@@Base+0x57f0>
   239dc:	str	r1, [fp, #-52]	; 0xffffffcc
   239e0:	str	r0, [fp, #-56]	; 0xffffffc8
   239e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   239e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   239ec:	movw	r2, #29796	; 0x7464
   239f0:	movt	r2, #24931	; 0x6163
   239f4:	subs	r0, r2, r0
   239f8:	movw	r2, #24946	; 0x6172
   239fc:	movt	r2, #25448	; 0x6368
   23a00:	sbcs	r1, r2, r1
   23a04:	str	r0, [fp, #-68]	; 0xffffffbc
   23a08:	str	r1, [fp, #-72]	; 0xffffffb8
   23a0c:	bcc	23e1c <main@@Base+0xd8fc>
   23a10:	b	23a14 <main@@Base+0xd4f4>
   23a14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23a18:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23a1c:	movw	r2, #29793	; 0x7461
   23a20:	movt	r2, #24942	; 0x616e
   23a24:	eor	r1, r1, r2
   23a28:	movw	r2, #28265	; 0x6e69
   23a2c:	movt	r2, #26479	; 0x676f
   23a30:	eor	r0, r0, r2
   23a34:	orr	r0, r0, r1
   23a38:	cmp	r0, #0
   23a3c:	bne	23c10 <main@@Base+0xd6f0>
   23a40:	b	23a44 <main@@Base+0xd524>
   23a44:	ldr	r0, [fp, #-20]	; 0xffffffec
   23a48:	add	r0, r0, #8
   23a4c:	str	r0, [fp, #-20]	; 0xffffffec
   23a50:	ldr	r0, [fp, #-20]	; 0xffffffec
   23a54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23a58:	bl	1bd10 <main@@Base+0x57f0>
   23a5c:	str	r1, [fp, #-52]	; 0xffffffcc
   23a60:	str	r0, [fp, #-56]	; 0xffffffc8
   23a64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23a68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23a6c:	movw	lr, #29791	; 0x745f
   23a70:	movt	lr, #115	; 0x73
   23a74:	eor	lr, lr, r1, lsr #8
   23a78:	lsr	r0, r0, #8
   23a7c:	orr	r0, r0, r1, lsl #24
   23a80:	movw	r1, #28773	; 0x7065
   23a84:	movt	r1, #29817	; 0x7479
   23a88:	eor	r0, r0, r1
   23a8c:	orr	r0, r0, lr
   23a90:	cmp	r0, #0
   23a94:	bne	23b44 <main@@Base+0xd624>
   23a98:	b	23a9c <main@@Base+0xd57c>
   23a9c:	ldr	r0, [fp, #-16]
   23aa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23aa4:	str	r1, [fp, #-48]	; 0xffffffd0
   23aa8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23aac:	movw	r3, #7
   23ab0:	bl	1bd48 <main@@Base+0x5828>
   23ab4:	str	r0, [fp, #-20]	; 0xffffffec
   23ab8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23abc:	ldr	r1, [fp, #-20]	; 0xffffffec
   23ac0:	cmp	r0, r1
   23ac4:	beq	23b2c <main@@Base+0xd60c>
   23ac8:	ldr	r0, [pc, #2780]	; 245ac <main@@Base+0xe08c>
   23acc:	add	r0, pc, r0
   23ad0:	ldr	r1, [pc, #2776]	; 245b0 <main@@Base+0xe090>
   23ad4:	add	r1, pc, r1
   23ad8:	ldr	r2, [fp, #-16]
   23adc:	ldr	r3, [fp, #-20]	; 0xffffffec
   23ae0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   23ae4:	ldr	lr, [fp, #-60]	; 0xffffffc4
   23ae8:	str	r0, [fp, #-76]	; 0xffffffb4
   23aec:	mov	r0, r2
   23af0:	str	r1, [fp, #-80]	; 0xffffffb0
   23af4:	mov	r1, r3
   23af8:	mov	r2, ip
   23afc:	movw	r3, #1
   23b00:	movw	ip, #3
   23b04:	uxth	ip, ip
   23b08:	str	ip, [sp]
   23b0c:	str	lr, [sp, #4]
   23b10:	ldr	ip, [fp, #-76]	; 0xffffffb4
   23b14:	str	ip, [sp, #8]
   23b18:	ldr	lr, [fp, #-80]	; 0xffffffb0
   23b1c:	str	lr, [sp, #12]
   23b20:	bl	369bc <flatcc_json_parser_union_type@@Base>
   23b24:	str	r0, [fp, #-20]	; 0xffffffec
   23b28:	b	23b40 <main@@Base+0xd620>
   23b2c:	ldr	r0, [fp, #-16]
   23b30:	ldr	r1, [fp, #-20]	; 0xffffffec
   23b34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23b38:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23b3c:	str	r0, [fp, #-20]	; 0xffffffec
   23b40:	b	23c0c <main@@Base+0xd6ec>
   23b44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   23b48:	bfc	r0, #0, #16
   23b4c:	movw	r1, #0
   23b50:	movt	r1, #29556	; 0x7374
   23b54:	teq	r0, r1
   23b58:	bne	23bf4 <main@@Base+0xd6d4>
   23b5c:	b	23b60 <main@@Base+0xd640>
   23b60:	ldr	r0, [fp, #-16]
   23b64:	ldr	r1, [fp, #-20]	; 0xffffffec
   23b68:	str	r1, [fp, #-48]	; 0xffffffd0
   23b6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23b70:	movw	r3, #2
   23b74:	bl	1bd48 <main@@Base+0x5828>
   23b78:	str	r0, [fp, #-20]	; 0xffffffec
   23b7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23b80:	ldr	r1, [fp, #-20]	; 0xffffffec
   23b84:	cmp	r0, r1
   23b88:	beq	23bdc <main@@Base+0xd6bc>
   23b8c:	ldr	r0, [pc, #2580]	; 245a8 <main@@Base+0xe088>
   23b90:	add	r0, pc, r0
   23b94:	ldr	r1, [fp, #-16]
   23b98:	ldr	r2, [fp, #-20]	; 0xffffffec
   23b9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23ba0:	ldr	ip, [fp, #-60]	; 0xffffffc4
   23ba4:	str	r0, [sp, #84]	; 0x54
   23ba8:	mov	r0, r1
   23bac:	mov	r1, r2
   23bb0:	mov	r2, r3
   23bb4:	movw	r3, #1
   23bb8:	movw	lr, #3
   23bbc:	uxth	lr, lr
   23bc0:	str	lr, [sp]
   23bc4:	str	ip, [sp, #4]
   23bc8:	ldr	ip, [sp, #84]	; 0x54
   23bcc:	str	ip, [sp, #8]
   23bd0:	bl	367d0 <flatcc_json_parser_union@@Base>
   23bd4:	str	r0, [fp, #-20]	; 0xffffffec
   23bd8:	b	23bf0 <main@@Base+0xd6d0>
   23bdc:	ldr	r0, [fp, #-16]
   23be0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23be4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23be8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23bec:	str	r0, [fp, #-20]	; 0xffffffec
   23bf0:	b	23c08 <main@@Base+0xd6e8>
   23bf4:	ldr	r0, [fp, #-16]
   23bf8:	ldr	r1, [fp, #-20]	; 0xffffffec
   23bfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23c00:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23c04:	str	r0, [fp, #-20]	; 0xffffffec
   23c08:	b	23c0c <main@@Base+0xd6ec>
   23c0c:	b	23e18 <main@@Base+0xd8f8>
   23c10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23c14:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23c18:	movw	r2, #28005	; 0x6d65
   23c1c:	movt	r2, #25441	; 0x6361
   23c20:	eor	r1, r1, r2
   23c24:	movw	r2, #29817	; 0x7479
   23c28:	movt	r2, #28511	; 0x6f5f
   23c2c:	eor	r0, r0, r2
   23c30:	orr	r0, r0, r1
   23c34:	cmp	r0, #0
   23c38:	bne	23d3c <main@@Base+0xd81c>
   23c3c:	b	23c40 <main@@Base+0xd720>
   23c40:	ldr	r0, [fp, #-20]	; 0xffffffec
   23c44:	add	r0, r0, #8
   23c48:	str	r0, [fp, #-20]	; 0xffffffec
   23c4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23c50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23c54:	bl	1bd10 <main@@Base+0x57f0>
   23c58:	str	r1, [fp, #-52]	; 0xffffffcc
   23c5c:	str	r0, [fp, #-56]	; 0xffffffc8
   23c60:	ldr	r0, [fp, #-52]	; 0xffffffcc
   23c64:	bfc	r0, #0, #16
   23c68:	movw	r1, #0
   23c6c:	movt	r1, #28773	; 0x7065
   23c70:	teq	r0, r1
   23c74:	bne	23d24 <main@@Base+0xd804>
   23c78:	b	23c7c <main@@Base+0xd75c>
   23c7c:	ldr	r0, [fp, #-16]
   23c80:	ldr	r1, [fp, #-20]	; 0xffffffec
   23c84:	str	r1, [fp, #-48]	; 0xffffffd0
   23c88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23c8c:	movw	r3, #2
   23c90:	bl	1bd48 <main@@Base+0x5828>
   23c94:	str	r0, [fp, #-20]	; 0xffffffec
   23c98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23c9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23ca0:	cmp	r0, r1
   23ca4:	beq	23d0c <main@@Base+0xd7ec>
   23ca8:	ldr	r0, [pc, #2288]	; 245a0 <main@@Base+0xe080>
   23cac:	add	r0, pc, r0
   23cb0:	ldr	r1, [pc, #2284]	; 245a4 <main@@Base+0xe084>
   23cb4:	add	r1, pc, r1
   23cb8:	ldr	r2, [fp, #-16]
   23cbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   23cc0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   23cc4:	ldr	lr, [fp, #-60]	; 0xffffffc4
   23cc8:	str	r0, [sp, #80]	; 0x50
   23ccc:	mov	r0, r2
   23cd0:	str	r1, [sp, #76]	; 0x4c
   23cd4:	mov	r1, r3
   23cd8:	mov	r2, ip
   23cdc:	movw	r3, #3
   23ce0:	movw	ip, #7
   23ce4:	uxth	ip, ip
   23ce8:	str	ip, [sp]
   23cec:	str	lr, [sp, #4]
   23cf0:	ldr	ip, [sp, #80]	; 0x50
   23cf4:	str	ip, [sp, #8]
   23cf8:	ldr	lr, [sp, #76]	; 0x4c
   23cfc:	str	lr, [sp, #12]
   23d00:	bl	369bc <flatcc_json_parser_union_type@@Base>
   23d04:	str	r0, [fp, #-20]	; 0xffffffec
   23d08:	b	23d20 <main@@Base+0xd800>
   23d0c:	ldr	r0, [fp, #-16]
   23d10:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23d18:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23d1c:	str	r0, [fp, #-20]	; 0xffffffec
   23d20:	b	23d38 <main@@Base+0xd818>
   23d24:	ldr	r0, [fp, #-16]
   23d28:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23d30:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23d34:	str	r0, [fp, #-20]	; 0xffffffec
   23d38:	b	23e14 <main@@Base+0xd8f4>
   23d3c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23d40:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23d44:	and	r0, r0, #-16777216	; 0xff000000
   23d48:	movw	r2, #28005	; 0x6d65
   23d4c:	movt	r2, #25441	; 0x6361
   23d50:	eor	r1, r1, r2
   23d54:	eor	r0, r0, #1862270976	; 0x6f000000
   23d58:	orr	r0, r0, r1
   23d5c:	cmp	r0, #0
   23d60:	bne	23dfc <main@@Base+0xd8dc>
   23d64:	b	23d68 <main@@Base+0xd848>
   23d68:	ldr	r0, [fp, #-16]
   23d6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d70:	str	r1, [fp, #-48]	; 0xffffffd0
   23d74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23d78:	movw	r3, #5
   23d7c:	bl	1bd48 <main@@Base+0x5828>
   23d80:	str	r0, [fp, #-20]	; 0xffffffec
   23d84:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23d88:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d8c:	cmp	r0, r1
   23d90:	beq	23de4 <main@@Base+0xd8c4>
   23d94:	ldr	r0, [pc, #2048]	; 2459c <main@@Base+0xe07c>
   23d98:	add	r0, pc, r0
   23d9c:	ldr	r1, [fp, #-16]
   23da0:	ldr	r2, [fp, #-20]	; 0xffffffec
   23da4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23da8:	ldr	ip, [fp, #-60]	; 0xffffffc4
   23dac:	str	r0, [sp, #72]	; 0x48
   23db0:	mov	r0, r1
   23db4:	mov	r1, r2
   23db8:	mov	r2, r3
   23dbc:	movw	r3, #3
   23dc0:	movw	lr, #7
   23dc4:	uxth	lr, lr
   23dc8:	str	lr, [sp]
   23dcc:	str	ip, [sp, #4]
   23dd0:	ldr	ip, [sp, #72]	; 0x48
   23dd4:	str	ip, [sp, #8]
   23dd8:	bl	367d0 <flatcc_json_parser_union@@Base>
   23ddc:	str	r0, [fp, #-20]	; 0xffffffec
   23de0:	b	23df8 <main@@Base+0xd8d8>
   23de4:	ldr	r0, [fp, #-16]
   23de8:	ldr	r1, [fp, #-20]	; 0xffffffec
   23dec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23df0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23df4:	str	r0, [fp, #-20]	; 0xffffffec
   23df8:	b	23e10 <main@@Base+0xd8f0>
   23dfc:	ldr	r0, [fp, #-16]
   23e00:	ldr	r1, [fp, #-20]	; 0xffffffec
   23e04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23e08:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23e0c:	str	r0, [fp, #-20]	; 0xffffffec
   23e10:	b	23e14 <main@@Base+0xd8f4>
   23e14:	b	23e18 <main@@Base+0xd8f8>
   23e18:	b	244dc <main@@Base+0xdfbc>
   23e1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23e20:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23e24:	movw	r2, #26720	; 0x6860
   23e28:	movt	r2, #24419	; 0x5f63
   23e2c:	subs	r0, r2, r0
   23e30:	movw	r2, #26990	; 0x696e
   23e34:	movt	r2, #28001	; 0x6d61
   23e38:	sbcs	r1, r2, r1
   23e3c:	str	r0, [sp, #68]	; 0x44
   23e40:	str	r1, [sp, #64]	; 0x40
   23e44:	bcc	24074 <main@@Base+0xdb54>
   23e48:	b	23e4c <main@@Base+0xd92c>
   23e4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23e50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23e54:	movw	r2, #24946	; 0x6172
   23e58:	movt	r2, #25448	; 0x6368
   23e5c:	eor	r1, r1, r2
   23e60:	movw	r2, #29797	; 0x7465
   23e64:	movt	r2, #24931	; 0x6163
   23e68:	eor	r0, r0, r2
   23e6c:	orr	r0, r0, r1
   23e70:	cmp	r0, #0
   23e74:	bne	2405c <main@@Base+0xdb3c>
   23e78:	b	23e7c <main@@Base+0xd95c>
   23e7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23e80:	add	r0, r0, #8
   23e84:	str	r0, [fp, #-20]	; 0xffffffec
   23e88:	ldr	r0, [fp, #-20]	; 0xffffffec
   23e8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23e90:	bl	1bd10 <main@@Base+0x57f0>
   23e94:	str	r1, [fp, #-52]	; 0xffffffcc
   23e98:	str	r0, [fp, #-56]	; 0xffffffc8
   23e9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23ea0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23ea4:	movw	lr, #29535	; 0x735f
   23ea8:	movt	lr, #114	; 0x72
   23eac:	eor	lr, lr, r1, lsr #8
   23eb0:	lsr	r0, r0, #8
   23eb4:	orr	r0, r0, r1, lsl #24
   23eb8:	movw	r1, #28773	; 0x7065
   23ebc:	movt	r1, #29817	; 0x7479
   23ec0:	eor	r0, r0, r1
   23ec4:	orr	r0, r0, lr
   23ec8:	cmp	r0, #0
   23ecc:	bne	23f90 <main@@Base+0xda70>
   23ed0:	b	23ed4 <main@@Base+0xd9b4>
   23ed4:	ldr	r0, [fp, #-16]
   23ed8:	ldr	r1, [fp, #-20]	; 0xffffffec
   23edc:	str	r1, [fp, #-48]	; 0xffffffd0
   23ee0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23ee4:	movw	r3, #7
   23ee8:	bl	1bd48 <main@@Base+0x5828>
   23eec:	str	r0, [fp, #-20]	; 0xffffffec
   23ef0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23ef4:	ldr	r1, [fp, #-20]	; 0xffffffec
   23ef8:	cmp	r0, r1
   23efc:	beq	23f78 <main@@Base+0xda58>
   23f00:	ldr	r0, [pc, #1672]	; 24590 <main@@Base+0xe070>
   23f04:	add	r0, pc, r0
   23f08:	ldr	r1, [pc, #1668]	; 24594 <main@@Base+0xe074>
   23f0c:	add	r1, pc, r1
   23f10:	ldr	r2, [pc, #1664]	; 24598 <main@@Base+0xe078>
   23f14:	add	r2, pc, r2
   23f18:	ldr	r3, [fp, #-16]
   23f1c:	ldr	ip, [fp, #-20]	; 0xffffffec
   23f20:	ldr	lr, [fp, #-24]	; 0xffffffe8
   23f24:	ldr	r4, [fp, #-60]	; 0xffffffc4
   23f28:	str	r0, [sp, #60]	; 0x3c
   23f2c:	mov	r0, r3
   23f30:	str	r1, [sp, #56]	; 0x38
   23f34:	mov	r1, ip
   23f38:	str	r2, [sp, #52]	; 0x34
   23f3c:	mov	r2, lr
   23f40:	movw	r3, #4
   23f44:	movw	ip, #9
   23f48:	uxth	ip, ip
   23f4c:	str	ip, [sp]
   23f50:	str	r4, [sp, #4]
   23f54:	ldr	ip, [sp, #60]	; 0x3c
   23f58:	str	ip, [sp, #8]
   23f5c:	ldr	lr, [sp, #56]	; 0x38
   23f60:	str	lr, [sp, #12]
   23f64:	ldr	r4, [sp, #52]	; 0x34
   23f68:	str	r4, [sp, #16]
   23f6c:	bl	372ac <flatcc_json_parser_union_type_vector@@Base>
   23f70:	str	r0, [fp, #-20]	; 0xffffffec
   23f74:	b	23f8c <main@@Base+0xda6c>
   23f78:	ldr	r0, [fp, #-16]
   23f7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23f80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23f84:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   23f88:	str	r0, [fp, #-20]	; 0xffffffec
   23f8c:	b	24058 <main@@Base+0xdb38>
   23f90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   23f94:	bfc	r0, #0, #16
   23f98:	movw	r1, #0
   23f9c:	movt	r1, #29299	; 0x7273
   23fa0:	teq	r0, r1
   23fa4:	bne	24040 <main@@Base+0xdb20>
   23fa8:	b	23fac <main@@Base+0xda8c>
   23fac:	ldr	r0, [fp, #-16]
   23fb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23fb4:	str	r1, [fp, #-48]	; 0xffffffd0
   23fb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23fbc:	movw	r3, #2
   23fc0:	bl	1bd48 <main@@Base+0x5828>
   23fc4:	str	r0, [fp, #-20]	; 0xffffffec
   23fc8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23fcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   23fd0:	cmp	r0, r1
   23fd4:	beq	24028 <main@@Base+0xdb08>
   23fd8:	ldr	r0, [pc, #1452]	; 2458c <main@@Base+0xe06c>
   23fdc:	add	r0, pc, r0
   23fe0:	ldr	r1, [fp, #-16]
   23fe4:	ldr	r2, [fp, #-20]	; 0xffffffec
   23fe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23fec:	ldr	ip, [fp, #-60]	; 0xffffffc4
   23ff0:	str	r0, [sp, #48]	; 0x30
   23ff4:	mov	r0, r1
   23ff8:	mov	r1, r2
   23ffc:	mov	r2, r3
   24000:	movw	r3, #4
   24004:	movw	lr, #9
   24008:	uxth	lr, lr
   2400c:	str	lr, [sp]
   24010:	str	ip, [sp, #4]
   24014:	ldr	ip, [sp, #48]	; 0x30
   24018:	str	ip, [sp, #8]
   2401c:	bl	36f20 <flatcc_json_parser_union_vector@@Base>
   24020:	str	r0, [fp, #-20]	; 0xffffffec
   24024:	b	2403c <main@@Base+0xdb1c>
   24028:	ldr	r0, [fp, #-16]
   2402c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24034:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   24038:	str	r0, [fp, #-20]	; 0xffffffec
   2403c:	b	24054 <main@@Base+0xdb34>
   24040:	ldr	r0, [fp, #-16]
   24044:	ldr	r1, [fp, #-20]	; 0xffffffec
   24048:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2404c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   24050:	str	r0, [fp, #-20]	; 0xffffffec
   24054:	b	24058 <main@@Base+0xdb38>
   24058:	b	24070 <main@@Base+0xdb50>
   2405c:	ldr	r0, [fp, #-16]
   24060:	ldr	r1, [fp, #-20]	; 0xffffffec
   24064:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24068:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   2406c:	str	r0, [fp, #-20]	; 0xffffffec
   24070:	b	244d8 <main@@Base+0xdfb8>
   24074:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24078:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2407c:	movw	r2, #26990	; 0x696e
   24080:	movt	r2, #28001	; 0x6d61
   24084:	eor	r1, r1, r2
   24088:	movw	r2, #26721	; 0x6861
   2408c:	movt	r2, #24419	; 0x5f63
   24090:	eor	r0, r0, r2
   24094:	orr	r0, r0, r1
   24098:	cmp	r0, #0
   2409c:	bne	242d0 <main@@Base+0xddb0>
   240a0:	b	240a4 <main@@Base+0xdb84>
   240a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   240a8:	add	r0, r0, #8
   240ac:	str	r0, [fp, #-20]	; 0xffffffec
   240b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   240b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   240b8:	bl	1bd10 <main@@Base+0x57f0>
   240bc:	str	r1, [fp, #-52]	; 0xffffffcc
   240c0:	str	r0, [fp, #-56]	; 0xffffffc8
   240c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   240c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   240cc:	movw	lr, #25460	; 0x6374
   240d0:	movt	lr, #29281	; 0x7261
   240d4:	eor	r1, r1, lr
   240d8:	movw	lr, #24436	; 0x5f74
   240dc:	movt	lr, #25970	; 0x6572
   240e0:	eor	r0, r0, lr
   240e4:	orr	r0, r0, r1
   240e8:	cmp	r0, #0
   240ec:	bne	241f0 <main@@Base+0xdcd0>
   240f0:	b	240f4 <main@@Base+0xdbd4>
   240f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   240f8:	add	r0, r0, #8
   240fc:	str	r0, [fp, #-20]	; 0xffffffec
   24100:	ldr	r0, [fp, #-20]	; 0xffffffec
   24104:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24108:	bl	1bd10 <main@@Base+0x57f0>
   2410c:	str	r1, [fp, #-52]	; 0xffffffcc
   24110:	str	r0, [fp, #-56]	; 0xffffffc8
   24114:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24118:	bic	r0, r0, #255	; 0xff
   2411c:	movw	r1, #25856	; 0x6500
   24120:	movt	r1, #31088	; 0x7970
   24124:	teq	r0, r1
   24128:	bne	241d8 <main@@Base+0xdcb8>
   2412c:	b	24130 <main@@Base+0xdc10>
   24130:	ldr	r0, [fp, #-16]
   24134:	ldr	r1, [fp, #-20]	; 0xffffffec
   24138:	str	r1, [fp, #-48]	; 0xffffffd0
   2413c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24140:	movw	r3, #3
   24144:	bl	1bd48 <main@@Base+0x5828>
   24148:	str	r0, [fp, #-20]	; 0xffffffec
   2414c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24150:	ldr	r1, [fp, #-20]	; 0xffffffec
   24154:	cmp	r0, r1
   24158:	beq	241c0 <main@@Base+0xdca0>
   2415c:	ldr	r0, [pc, #1056]	; 24584 <main@@Base+0xe064>
   24160:	add	r0, pc, r0
   24164:	ldr	r1, [pc, #1052]	; 24588 <main@@Base+0xe068>
   24168:	add	r1, pc, r1
   2416c:	ldr	r2, [fp, #-16]
   24170:	ldr	r3, [fp, #-20]	; 0xffffffec
   24174:	ldr	ip, [fp, #-24]	; 0xffffffe8
   24178:	ldr	lr, [fp, #-60]	; 0xffffffc4
   2417c:	str	r0, [sp, #44]	; 0x2c
   24180:	mov	r0, r2
   24184:	str	r1, [sp, #40]	; 0x28
   24188:	mov	r1, r3
   2418c:	mov	r2, ip
   24190:	movw	r3, #0
   24194:	movw	ip, #1
   24198:	uxth	ip, ip
   2419c:	str	ip, [sp]
   241a0:	str	lr, [sp, #4]
   241a4:	ldr	ip, [sp, #44]	; 0x2c
   241a8:	str	ip, [sp, #8]
   241ac:	ldr	lr, [sp, #40]	; 0x28
   241b0:	str	lr, [sp, #12]
   241b4:	bl	369bc <flatcc_json_parser_union_type@@Base>
   241b8:	str	r0, [fp, #-20]	; 0xffffffec
   241bc:	b	241d4 <main@@Base+0xdcb4>
   241c0:	ldr	r0, [fp, #-16]
   241c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   241c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   241cc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   241d0:	str	r0, [fp, #-20]	; 0xffffffec
   241d4:	b	241ec <main@@Base+0xdccc>
   241d8:	ldr	r0, [fp, #-16]
   241dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   241e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   241e4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   241e8:	str	r0, [fp, #-20]	; 0xffffffec
   241ec:	b	242cc <main@@Base+0xddac>
   241f0:	ldrh	r0, [fp, #-54]	; 0xffffffca
   241f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   241f8:	movw	r2, #29281	; 0x7261
   241fc:	eor	r2, r2, r1, lsr #16
   24200:	orr	r0, r0, r1, lsl #16
   24204:	movw	r1, #25970	; 0x6572
   24208:	movt	r1, #25460	; 0x6374
   2420c:	eor	r0, r0, r1
   24210:	orr	r0, r0, r2
   24214:	cmp	r0, #0
   24218:	bne	242b4 <main@@Base+0xdd94>
   2421c:	b	24220 <main@@Base+0xdd00>
   24220:	ldr	r0, [fp, #-16]
   24224:	ldr	r1, [fp, #-20]	; 0xffffffec
   24228:	str	r1, [fp, #-48]	; 0xffffffd0
   2422c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24230:	movw	r3, #6
   24234:	bl	1bd48 <main@@Base+0x5828>
   24238:	str	r0, [fp, #-20]	; 0xffffffec
   2423c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24240:	ldr	r1, [fp, #-20]	; 0xffffffec
   24244:	cmp	r0, r1
   24248:	beq	2429c <main@@Base+0xdd7c>
   2424c:	ldr	r0, [pc, #812]	; 24580 <main@@Base+0xe060>
   24250:	add	r0, pc, r0
   24254:	ldr	r1, [fp, #-16]
   24258:	ldr	r2, [fp, #-20]	; 0xffffffec
   2425c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24260:	ldr	ip, [fp, #-60]	; 0xffffffc4
   24264:	str	r0, [sp, #36]	; 0x24
   24268:	mov	r0, r1
   2426c:	mov	r1, r2
   24270:	mov	r2, r3
   24274:	movw	r3, #0
   24278:	movw	lr, #1
   2427c:	uxth	lr, lr
   24280:	str	lr, [sp]
   24284:	str	ip, [sp, #4]
   24288:	ldr	ip, [sp, #36]	; 0x24
   2428c:	str	ip, [sp, #8]
   24290:	bl	367d0 <flatcc_json_parser_union@@Base>
   24294:	str	r0, [fp, #-20]	; 0xffffffec
   24298:	b	242b0 <main@@Base+0xdd90>
   2429c:	ldr	r0, [fp, #-16]
   242a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   242a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   242a8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   242ac:	str	r0, [fp, #-20]	; 0xffffffec
   242b0:	b	242c8 <main@@Base+0xdda8>
   242b4:	ldr	r0, [fp, #-16]
   242b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   242bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   242c0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   242c4:	str	r0, [fp, #-20]	; 0xffffffec
   242c8:	b	242cc <main@@Base+0xddac>
   242cc:	b	244d4 <main@@Base+0xdfb4>
   242d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   242d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   242d8:	movw	r2, #25701	; 0x6465
   242dc:	movt	r2, #29545	; 0x7369
   242e0:	eor	r1, r1, r2
   242e4:	movw	r2, #26979	; 0x6963
   242e8:	movt	r2, #24427	; 0x5f6b
   242ec:	eor	r0, r0, r2
   242f0:	orr	r0, r0, r1
   242f4:	cmp	r0, #0
   242f8:	bne	244bc <main@@Base+0xdf9c>
   242fc:	b	24300 <main@@Base+0xdde0>
   24300:	ldr	r0, [fp, #-20]	; 0xffffffec
   24304:	add	r0, r0, #8
   24308:	str	r0, [fp, #-20]	; 0xffffffec
   2430c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24310:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24314:	bl	1bd10 <main@@Base+0x57f0>
   24318:	str	r1, [fp, #-52]	; 0xffffffcc
   2431c:	str	r0, [fp, #-56]	; 0xffffffc8
   24320:	ldrh	r0, [fp, #-54]	; 0xffffffca
   24324:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24328:	movw	lr, #27487	; 0x6b5f
   2432c:	eor	lr, lr, r1, lsr #16
   24330:	orr	r0, r0, r1, lsl #16
   24334:	movw	r1, #28773	; 0x7065
   24338:	movt	r1, #29817	; 0x7479
   2433c:	eor	r0, r0, r1
   24340:	orr	r0, r0, lr
   24344:	cmp	r0, #0
   24348:	bne	243f8 <main@@Base+0xded8>
   2434c:	b	24350 <main@@Base+0xde30>
   24350:	ldr	r0, [fp, #-16]
   24354:	ldr	r1, [fp, #-20]	; 0xffffffec
   24358:	str	r1, [fp, #-48]	; 0xffffffd0
   2435c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24360:	movw	r3, #6
   24364:	bl	1bd48 <main@@Base+0x5828>
   24368:	str	r0, [fp, #-20]	; 0xffffffec
   2436c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24370:	ldr	r1, [fp, #-20]	; 0xffffffec
   24374:	cmp	r0, r1
   24378:	beq	243e0 <main@@Base+0xdec0>
   2437c:	ldr	r0, [pc, #500]	; 24578 <main@@Base+0xe058>
   24380:	add	r0, pc, r0
   24384:	ldr	r1, [pc, #496]	; 2457c <main@@Base+0xe05c>
   24388:	add	r1, pc, r1
   2438c:	ldr	r2, [fp, #-16]
   24390:	ldr	r3, [fp, #-20]	; 0xffffffec
   24394:	ldr	ip, [fp, #-24]	; 0xffffffe8
   24398:	ldr	lr, [fp, #-60]	; 0xffffffc4
   2439c:	str	r0, [sp, #32]
   243a0:	mov	r0, r2
   243a4:	str	r1, [sp, #28]
   243a8:	mov	r1, r3
   243ac:	mov	r2, ip
   243b0:	movw	r3, #2
   243b4:	movw	ip, #5
   243b8:	uxth	ip, ip
   243bc:	str	ip, [sp]
   243c0:	str	lr, [sp, #4]
   243c4:	ldr	ip, [sp, #32]
   243c8:	str	ip, [sp, #8]
   243cc:	ldr	lr, [sp, #28]
   243d0:	str	lr, [sp, #12]
   243d4:	bl	369bc <flatcc_json_parser_union_type@@Base>
   243d8:	str	r0, [fp, #-20]	; 0xffffffec
   243dc:	b	243f4 <main@@Base+0xded4>
   243e0:	ldr	r0, [fp, #-16]
   243e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   243e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   243ec:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   243f0:	str	r0, [fp, #-20]	; 0xffffffec
   243f4:	b	244b8 <main@@Base+0xdf98>
   243f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   243fc:	and	r0, r0, #-16777216	; 0xff000000
   24400:	teq	r0, #1795162112	; 0x6b000000
   24404:	bne	244a0 <main@@Base+0xdf80>
   24408:	b	2440c <main@@Base+0xdeec>
   2440c:	ldr	r0, [fp, #-16]
   24410:	ldr	r1, [fp, #-20]	; 0xffffffec
   24414:	str	r1, [fp, #-48]	; 0xffffffd0
   24418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2441c:	movw	r3, #1
   24420:	bl	1bd48 <main@@Base+0x5828>
   24424:	str	r0, [fp, #-20]	; 0xffffffec
   24428:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2442c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24430:	cmp	r0, r1
   24434:	beq	24488 <main@@Base+0xdf68>
   24438:	ldr	r0, [pc, #308]	; 24574 <main@@Base+0xe054>
   2443c:	add	r0, pc, r0
   24440:	ldr	r1, [fp, #-16]
   24444:	ldr	r2, [fp, #-20]	; 0xffffffec
   24448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2444c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   24450:	str	r0, [sp, #24]
   24454:	mov	r0, r1
   24458:	mov	r1, r2
   2445c:	mov	r2, r3
   24460:	movw	r3, #2
   24464:	movw	lr, #5
   24468:	uxth	lr, lr
   2446c:	str	lr, [sp]
   24470:	str	ip, [sp, #4]
   24474:	ldr	ip, [sp, #24]
   24478:	str	ip, [sp, #8]
   2447c:	bl	367d0 <flatcc_json_parser_union@@Base>
   24480:	str	r0, [fp, #-20]	; 0xffffffec
   24484:	b	2449c <main@@Base+0xdf7c>
   24488:	ldr	r0, [fp, #-16]
   2448c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24490:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24494:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   24498:	str	r0, [fp, #-20]	; 0xffffffec
   2449c:	b	244b4 <main@@Base+0xdf94>
   244a0:	ldr	r0, [fp, #-16]
   244a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   244a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   244ac:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   244b0:	str	r0, [fp, #-20]	; 0xffffffec
   244b4:	b	244b8 <main@@Base+0xdf98>
   244b8:	b	244d0 <main@@Base+0xdfb0>
   244bc:	ldr	r0, [fp, #-16]
   244c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   244c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   244c8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   244cc:	str	r0, [fp, #-20]	; 0xffffffec
   244d0:	b	244d4 <main@@Base+0xdfb4>
   244d4:	b	244d8 <main@@Base+0xdfb8>
   244d8:	b	244dc <main@@Base+0xdfbc>
   244dc:	ldr	r0, [fp, #-16]
   244e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   244e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   244e8:	sub	r3, fp, #32
   244ec:	bl	20d64 <main@@Base+0xa844>
   244f0:	str	r0, [fp, #-20]	; 0xffffffec
   244f4:	b	239b0 <main@@Base+0xd490>
   244f8:	ldr	r0, [fp, #-16]
   244fc:	ldr	r0, [r0, #20]
   24500:	cmp	r0, #0
   24504:	beq	2450c <main@@Base+0xdfec>
   24508:	b	24550 <main@@Base+0xe030>
   2450c:	ldr	r0, [fp, #-16]
   24510:	ldr	r1, [fp, #-20]	; 0xffffffec
   24514:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24518:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2451c:	bl	36754 <flatcc_json_parser_finalize_unions@@Base>
   24520:	str	r0, [fp, #-20]	; 0xffffffec
   24524:	ldr	r0, [fp, #-16]
   24528:	ldr	r0, [r0]
   2452c:	bl	2c764 <flatcc_builder_end_table@@Base>
   24530:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24534:	str	r0, [r1]
   24538:	cmp	r0, #0
   2453c:	bne	24544 <main@@Base+0xe024>
   24540:	b	24550 <main@@Base+0xe030>
   24544:	ldr	r0, [fp, #-20]	; 0xffffffec
   24548:	str	r0, [fp, #-12]
   2454c:	b	24568 <main@@Base+0xe048>
   24550:	ldr	r0, [fp, #-16]
   24554:	ldr	r1, [fp, #-20]	; 0xffffffec
   24558:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2455c:	movw	r3, #33	; 0x21
   24560:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   24564:	str	r0, [fp, #-12]
   24568:	ldr	r0, [fp, #-12]
   2456c:	sub	sp, fp, #8
   24570:	pop	{r4, sl, fp, pc}
   24574:	andeq	r1, r0, r8, lsl r8
   24578:	andeq	r8, r3, r8, ror #30
   2457c:	andeq	r1, r0, ip, asr #17
   24580:	andeq	r1, r0, r4, lsl #20
   24584:	andeq	r9, r3, r8, ror r1
   24588:	andeq	r1, r0, ip, ror #21
   2458c:	andeq	r1, r0, r8, ror ip
   24590:	andeq	r9, r3, r4, asr #7
   24594:	andeq	r1, r0, r8, asr #26
   24598:	andeq	r1, r0, ip, asr #30
   2459c:			; <UNDEFINED> instruction: 0x00001ebc
   245a0:	andeq	r9, r3, ip, lsl #12
   245a4:	andeq	r1, r0, r0, lsr #31
   245a8:	andeq	r2, r0, r4, asr #1
   245ac:	ldrdeq	r9, [r3], -ip
   245b0:	andeq	r2, r0, r0, lsl #3
   245b4:	push	{fp, lr}
   245b8:	mov	fp, sp
   245bc:	sub	sp, sp, #64	; 0x40
   245c0:	str	r0, [fp, #-8]
   245c4:	str	r1, [fp, #-12]
   245c8:	str	r2, [fp, #-16]
   245cc:	str	r3, [fp, #-20]	; 0xffffffec
   245d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   245d4:	movw	r1, #0
   245d8:	str	r1, [r0]
   245dc:	ldr	r0, [fp, #-8]
   245e0:	ldr	r0, [r0]
   245e4:	movw	r1, #2
   245e8:	bl	2baec <flatcc_builder_start_table@@Base>
   245ec:	cmp	r0, #0
   245f0:	beq	245f8 <main@@Base+0xe0d8>
   245f4:	b	249ec <main@@Base+0xe4cc>
   245f8:	ldr	r0, [fp, #-8]
   245fc:	ldr	r1, [fp, #-12]
   24600:	ldr	r2, [fp, #-16]
   24604:	sub	r3, fp, #24
   24608:	bl	1bba8 <main@@Base+0x5688>
   2460c:	str	r0, [fp, #-12]
   24610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24614:	cmp	r0, #0
   24618:	beq	249ac <main@@Base+0xe48c>
   2461c:	ldr	r0, [fp, #-8]
   24620:	ldr	r1, [fp, #-12]
   24624:	ldr	r2, [fp, #-16]
   24628:	bl	1bc8c <main@@Base+0x576c>
   2462c:	str	r0, [fp, #-12]
   24630:	ldr	r0, [fp, #-12]
   24634:	ldr	r1, [fp, #-16]
   24638:	bl	1bd10 <main@@Base+0x57f0>
   2463c:	str	r1, [sp, #20]
   24640:	str	r0, [sp, #16]
   24644:	ldr	r0, [sp, #16]
   24648:	ldr	r1, [sp, #20]
   2464c:	movw	r2, #24929	; 0x6161
   24650:	movt	r2, #24929	; 0x6161
   24654:	eor	r1, r1, r2
   24658:	movw	r2, #25186	; 0x6262
   2465c:	movt	r2, #24418	; 0x5f62
   24660:	eor	r0, r0, r2
   24664:	orr	r0, r0, r1
   24668:	cmp	r0, #0
   2466c:	bne	2497c <main@@Base+0xe45c>
   24670:	b	24674 <main@@Base+0xe154>
   24674:	ldr	r0, [fp, #-12]
   24678:	add	r0, r0, #8
   2467c:	str	r0, [fp, #-12]
   24680:	ldr	r0, [fp, #-12]
   24684:	ldr	r1, [fp, #-16]
   24688:	bl	1bd10 <main@@Base+0x57f0>
   2468c:	str	r1, [sp, #20]
   24690:	str	r0, [sp, #16]
   24694:	ldr	r0, [sp, #16]
   24698:	ldr	r1, [sp, #20]
   2469c:	movw	lr, #24435	; 0x5f73
   246a0:	movt	lr, #98	; 0x62
   246a4:	eor	lr, lr, r1, lsr #8
   246a8:	lsr	r0, r0, #8
   246ac:	orr	r0, r0, r1, lsl #24
   246b0:	movw	r1, #28787	; 0x7073
   246b4:	movt	r1, #29797	; 0x7465
   246b8:	eor	r0, r0, r1
   246bc:	orr	r0, r0, lr
   246c0:	cmp	r0, #0
   246c4:	bne	24808 <main@@Base+0xe2e8>
   246c8:	b	246cc <main@@Base+0xe1ac>
   246cc:	ldr	r0, [fp, #-8]
   246d0:	ldr	r1, [fp, #-12]
   246d4:	str	r1, [sp, #24]
   246d8:	ldr	r2, [fp, #-16]
   246dc:	movw	r3, #7
   246e0:	bl	1bd48 <main@@Base+0x5828>
   246e4:	str	r0, [fp, #-12]
   246e8:	ldr	r0, [sp, #24]
   246ec:	ldr	r1, [fp, #-12]
   246f0:	cmp	r0, r1
   246f4:	beq	247f0 <main@@Base+0xe2d0>
   246f8:	mov	r0, #0
   246fc:	str	r0, [sp, #12]
   24700:	str	r0, [sp, #8]
   24704:	ldr	r0, [fp, #-8]
   24708:	ldr	r1, [fp, #-12]
   2470c:	str	r1, [sp, #24]
   24710:	ldr	r2, [fp, #-16]
   24714:	add	r3, sp, #8
   24718:	bl	20248 <main@@Base+0x9d28>
   2471c:	str	r0, [fp, #-12]
   24720:	ldr	r0, [sp, #24]
   24724:	ldr	r1, [fp, #-12]
   24728:	cmp	r0, r1
   2472c:	bne	24780 <main@@Base+0xe260>
   24730:	ldr	r0, [pc, #732]	; 24a14 <main@@Base+0xe4f4>
   24734:	add	r3, pc, r0
   24738:	ldr	r0, [fp, #-8]
   2473c:	ldr	r1, [fp, #-12]
   24740:	str	r1, [sp, #24]
   24744:	ldr	r2, [fp, #-16]
   24748:	add	ip, sp, #8
   2474c:	str	ip, [sp]
   24750:	bl	20320 <main@@Base+0x9e00>
   24754:	str	r0, [fp, #-12]
   24758:	ldr	r0, [fp, #-12]
   2475c:	ldr	r1, [sp, #24]
   24760:	cmp	r0, r1
   24764:	beq	24778 <main@@Base+0xe258>
   24768:	ldr	r0, [fp, #-12]
   2476c:	ldr	r1, [fp, #-16]
   24770:	cmp	r0, r1
   24774:	bne	2477c <main@@Base+0xe25c>
   24778:	b	249ec <main@@Base+0xe4cc>
   2477c:	b	24780 <main@@Base+0xe260>
   24780:	ldr	r0, [sp, #8]
   24784:	ldr	r1, [sp, #12]
   24788:	orr	r0, r0, r1
   2478c:	cmp	r0, #0
   24790:	bne	247ac <main@@Base+0xe28c>
   24794:	b	24798 <main@@Base+0xe278>
   24798:	ldr	r0, [fp, #-8]
   2479c:	ldr	r0, [r0, #8]
   247a0:	and	r0, r0, #2
   247a4:	cmp	r0, #0
   247a8:	beq	247ec <main@@Base+0xe2cc>
   247ac:	ldr	r0, [fp, #-8]
   247b0:	ldr	r0, [r0]
   247b4:	movw	r1, #0
   247b8:	movw	r2, #8
   247bc:	movw	r3, #8
   247c0:	uxth	r3, r3
   247c4:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   247c8:	str	r0, [fp, #-28]	; 0xffffffe4
   247cc:	movw	r1, #0
   247d0:	cmp	r0, r1
   247d4:	bne	247dc <main@@Base+0xe2bc>
   247d8:	b	249ec <main@@Base+0xe4cc>
   247dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   247e0:	ldr	r2, [sp, #8]
   247e4:	ldr	r3, [sp, #12]
   247e8:	bl	2051c <main@@Base+0x9ffc>
   247ec:	b	24804 <main@@Base+0xe2e4>
   247f0:	ldr	r0, [fp, #-8]
   247f4:	ldr	r1, [fp, #-12]
   247f8:	ldr	r2, [fp, #-16]
   247fc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   24800:	str	r0, [fp, #-12]
   24804:	b	24978 <main@@Base+0xe458>
   24808:	ldr	r0, [sp, #16]
   2480c:	ldr	r1, [sp, #20]
   24810:	movw	r2, #29556	; 0x7374
   24814:	movt	r2, #25183	; 0x625f
   24818:	eor	r1, r1, r2
   2481c:	movw	r2, #29791	; 0x745f
   24820:	movt	r2, #24946	; 0x6172
   24824:	eor	r0, r0, r2
   24828:	orr	r0, r0, r1
   2482c:	cmp	r0, #0
   24830:	bne	24960 <main@@Base+0xe440>
   24834:	b	24838 <main@@Base+0xe318>
   24838:	ldr	r0, [fp, #-8]
   2483c:	ldr	r1, [fp, #-12]
   24840:	str	r1, [sp, #24]
   24844:	ldr	r2, [fp, #-16]
   24848:	movw	r3, #8
   2484c:	bl	1bd48 <main@@Base+0x5828>
   24850:	str	r0, [fp, #-12]
   24854:	ldr	r0, [sp, #24]
   24858:	ldr	r1, [fp, #-12]
   2485c:	cmp	r0, r1
   24860:	beq	24948 <main@@Base+0xe428>
   24864:	movw	r0, #0
   24868:	str	r0, [sp, #4]
   2486c:	ldr	r0, [fp, #-8]
   24870:	ldr	r1, [fp, #-12]
   24874:	str	r1, [sp, #24]
   24878:	ldr	r2, [fp, #-16]
   2487c:	add	r3, sp, #4
   24880:	bl	20554 <main@@Base+0xa034>
   24884:	str	r0, [fp, #-12]
   24888:	ldr	r0, [sp, #24]
   2488c:	ldr	r1, [fp, #-12]
   24890:	cmp	r0, r1
   24894:	bne	248e8 <main@@Base+0xe3c8>
   24898:	ldr	r0, [pc, #368]	; 24a10 <main@@Base+0xe4f0>
   2489c:	add	r3, pc, r0
   248a0:	ldr	r0, [fp, #-8]
   248a4:	ldr	r1, [fp, #-12]
   248a8:	str	r1, [sp, #24]
   248ac:	ldr	r2, [fp, #-16]
   248b0:	add	ip, sp, #4
   248b4:	str	ip, [sp]
   248b8:	bl	2062c <main@@Base+0xa10c>
   248bc:	str	r0, [fp, #-12]
   248c0:	ldr	r0, [fp, #-12]
   248c4:	ldr	r1, [sp, #24]
   248c8:	cmp	r0, r1
   248cc:	beq	248e0 <main@@Base+0xe3c0>
   248d0:	ldr	r0, [fp, #-12]
   248d4:	ldr	r1, [fp, #-16]
   248d8:	cmp	r0, r1
   248dc:	bne	248e4 <main@@Base+0xe3c4>
   248e0:	b	249ec <main@@Base+0xe4cc>
   248e4:	b	248e8 <main@@Base+0xe3c8>
   248e8:	ldr	r0, [sp, #4]
   248ec:	cmp	r0, #0
   248f0:	bne	24908 <main@@Base+0xe3e8>
   248f4:	ldr	r0, [fp, #-8]
   248f8:	ldr	r0, [r0, #8]
   248fc:	and	r0, r0, #2
   24900:	cmp	r0, #0
   24904:	beq	24944 <main@@Base+0xe424>
   24908:	ldr	r0, [fp, #-8]
   2490c:	ldr	r0, [r0]
   24910:	movw	r1, #1
   24914:	movw	r2, #4
   24918:	movw	r3, #4
   2491c:	uxth	r3, r3
   24920:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   24924:	str	r0, [fp, #-28]	; 0xffffffe4
   24928:	movw	r1, #0
   2492c:	cmp	r0, r1
   24930:	bne	24938 <main@@Base+0xe418>
   24934:	b	249ec <main@@Base+0xe4cc>
   24938:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2493c:	ldr	r1, [sp, #4]
   24940:	bl	20810 <main@@Base+0xa2f0>
   24944:	b	2495c <main@@Base+0xe43c>
   24948:	ldr	r0, [fp, #-8]
   2494c:	ldr	r1, [fp, #-12]
   24950:	ldr	r2, [fp, #-16]
   24954:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   24958:	str	r0, [fp, #-12]
   2495c:	b	24974 <main@@Base+0xe454>
   24960:	ldr	r0, [fp, #-8]
   24964:	ldr	r1, [fp, #-12]
   24968:	ldr	r2, [fp, #-16]
   2496c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   24970:	str	r0, [fp, #-12]
   24974:	b	24978 <main@@Base+0xe458>
   24978:	b	24990 <main@@Base+0xe470>
   2497c:	ldr	r0, [fp, #-8]
   24980:	ldr	r1, [fp, #-12]
   24984:	ldr	r2, [fp, #-16]
   24988:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   2498c:	str	r0, [fp, #-12]
   24990:	ldr	r0, [fp, #-8]
   24994:	ldr	r1, [fp, #-12]
   24998:	ldr	r2, [fp, #-16]
   2499c:	sub	r3, fp, #24
   249a0:	bl	20d64 <main@@Base+0xa844>
   249a4:	str	r0, [fp, #-12]
   249a8:	b	24610 <main@@Base+0xe0f0>
   249ac:	ldr	r0, [fp, #-8]
   249b0:	ldr	r0, [r0, #20]
   249b4:	cmp	r0, #0
   249b8:	beq	249c0 <main@@Base+0xe4a0>
   249bc:	b	249ec <main@@Base+0xe4cc>
   249c0:	ldr	r0, [fp, #-8]
   249c4:	ldr	r0, [r0]
   249c8:	bl	2c764 <flatcc_builder_end_table@@Base>
   249cc:	ldr	lr, [fp, #-20]	; 0xffffffec
   249d0:	str	r0, [lr]
   249d4:	cmp	r0, #0
   249d8:	bne	249e0 <main@@Base+0xe4c0>
   249dc:	b	249ec <main@@Base+0xe4cc>
   249e0:	ldr	r0, [fp, #-12]
   249e4:	str	r0, [fp, #-4]
   249e8:	b	24a04 <main@@Base+0xe4e4>
   249ec:	ldr	r0, [fp, #-8]
   249f0:	ldr	r1, [fp, #-12]
   249f4:	ldr	r2, [fp, #-16]
   249f8:	movw	r3, #33	; 0x21
   249fc:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   24a00:	str	r0, [fp, #-4]
   24a04:	ldr	r0, [fp, #-4]
   24a08:	mov	sp, fp
   24a0c:	pop	{fp, pc}
   24a10:	andeq	r8, r3, r0, lsr #19
   24a14:	strdeq	r8, [r3], -ip
   24a18:	push	{fp, lr}
   24a1c:	mov	fp, sp
   24a20:	sub	sp, sp, #96	; 0x60
   24a24:	str	r0, [fp, #-8]
   24a28:	str	r1, [fp, #-12]
   24a2c:	str	r2, [fp, #-16]
   24a30:	str	r3, [fp, #-20]	; 0xffffffec
   24a34:	ldr	r0, [fp, #-20]	; 0xffffffec
   24a38:	movw	r1, #0
   24a3c:	str	r1, [r0]
   24a40:	ldr	r0, [fp, #-8]
   24a44:	ldr	r0, [r0]
   24a48:	movw	r1, #9
   24a4c:	bl	2baec <flatcc_builder_start_table@@Base>
   24a50:	cmp	r0, #0
   24a54:	beq	24a5c <main@@Base+0xe53c>
   24a58:	b	25614 <main@@Base+0xf0f4>
   24a5c:	ldr	r0, [fp, #-8]
   24a60:	ldr	r1, [fp, #-12]
   24a64:	ldr	r2, [fp, #-16]
   24a68:	sub	r3, fp, #24
   24a6c:	bl	1bba8 <main@@Base+0x5688>
   24a70:	str	r0, [fp, #-12]
   24a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24a78:	cmp	r0, #0
   24a7c:	beq	255d4 <main@@Base+0xf0b4>
   24a80:	ldr	r0, [fp, #-8]
   24a84:	ldr	r1, [fp, #-12]
   24a88:	ldr	r2, [fp, #-16]
   24a8c:	bl	1bc8c <main@@Base+0x576c>
   24a90:	str	r0, [fp, #-12]
   24a94:	ldr	r0, [fp, #-12]
   24a98:	ldr	r1, [fp, #-16]
   24a9c:	bl	1bd10 <main@@Base+0x57f0>
   24aa0:	str	r1, [sp, #52]	; 0x34
   24aa4:	str	r0, [sp, #48]	; 0x30
   24aa8:	ldr	r0, [sp, #52]	; 0x34
   24aac:	movw	r1, #25442	; 0x6362
   24ab0:	movt	r1, #25443	; 0x6363
   24ab4:	cmp	r0, r1
   24ab8:	bhi	24f54 <main@@Base+0xea34>
   24abc:	b	24ac0 <main@@Base+0xe5a0>
   24ac0:	ldr	r0, [sp, #48]	; 0x30
   24ac4:	ldr	r1, [sp, #52]	; 0x34
   24ac8:	movw	r2, #24929	; 0x6161
   24acc:	movt	r2, #24929	; 0x6161
   24ad0:	eor	r1, r1, r2
   24ad4:	movw	r2, #13108	; 0x3334
   24ad8:	movt	r2, #12594	; 0x3132
   24adc:	eor	r0, r0, r2
   24ae0:	orr	r0, r0, r1
   24ae4:	cmp	r0, #0
   24ae8:	bne	24c64 <main@@Base+0xe744>
   24aec:	b	24af0 <main@@Base+0xe5d0>
   24af0:	ldr	r0, [fp, #-12]
   24af4:	add	r0, r0, #8
   24af8:	str	r0, [fp, #-12]
   24afc:	ldr	r0, [fp, #-12]
   24b00:	ldr	r1, [fp, #-16]
   24b04:	bl	1bd10 <main@@Base+0x57f0>
   24b08:	str	r1, [sp, #52]	; 0x34
   24b0c:	str	r0, [sp, #48]	; 0x30
   24b10:	ldr	r0, [sp, #52]	; 0x34
   24b14:	and	r0, r0, #-16777216	; 0xff000000
   24b18:	teq	r0, #889192448	; 0x35000000
   24b1c:	bne	24c4c <main@@Base+0xe72c>
   24b20:	b	24b24 <main@@Base+0xe604>
   24b24:	ldr	r0, [fp, #-8]
   24b28:	ldr	r1, [fp, #-12]
   24b2c:	str	r1, [fp, #-40]	; 0xffffffd8
   24b30:	ldr	r2, [fp, #-16]
   24b34:	movw	r3, #1
   24b38:	bl	1bd48 <main@@Base+0x5828>
   24b3c:	str	r0, [fp, #-12]
   24b40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24b44:	ldr	r1, [fp, #-12]
   24b48:	cmp	r0, r1
   24b4c:	beq	24c34 <main@@Base+0xe714>
   24b50:	movw	r0, #0
   24b54:	str	r0, [sp, #44]	; 0x2c
   24b58:	ldr	r0, [fp, #-8]
   24b5c:	ldr	r1, [fp, #-12]
   24b60:	str	r1, [fp, #-40]	; 0xffffffd8
   24b64:	ldr	r2, [fp, #-16]
   24b68:	add	r3, sp, #44	; 0x2c
   24b6c:	bl	20554 <main@@Base+0xa034>
   24b70:	str	r0, [fp, #-12]
   24b74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24b78:	ldr	r1, [fp, #-12]
   24b7c:	cmp	r0, r1
   24b80:	bne	24bd4 <main@@Base+0xe6b4>
   24b84:	ldr	r0, [pc, #2752]	; 2564c <main@@Base+0xf12c>
   24b88:	add	r3, pc, r0
   24b8c:	ldr	r0, [fp, #-8]
   24b90:	ldr	r1, [fp, #-12]
   24b94:	str	r1, [fp, #-40]	; 0xffffffd8
   24b98:	ldr	r2, [fp, #-16]
   24b9c:	add	ip, sp, #44	; 0x2c
   24ba0:	str	ip, [sp]
   24ba4:	bl	2062c <main@@Base+0xa10c>
   24ba8:	str	r0, [fp, #-12]
   24bac:	ldr	r0, [fp, #-12]
   24bb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24bb4:	cmp	r0, r1
   24bb8:	beq	24bcc <main@@Base+0xe6ac>
   24bbc:	ldr	r0, [fp, #-12]
   24bc0:	ldr	r1, [fp, #-16]
   24bc4:	cmp	r0, r1
   24bc8:	bne	24bd0 <main@@Base+0xe6b0>
   24bcc:	b	25614 <main@@Base+0xf0f4>
   24bd0:	b	24bd4 <main@@Base+0xe6b4>
   24bd4:	ldr	r0, [sp, #44]	; 0x2c
   24bd8:	cmp	r0, #0
   24bdc:	bne	24bf4 <main@@Base+0xe6d4>
   24be0:	ldr	r0, [fp, #-8]
   24be4:	ldr	r0, [r0, #8]
   24be8:	and	r0, r0, #2
   24bec:	cmp	r0, #0
   24bf0:	beq	24c30 <main@@Base+0xe710>
   24bf4:	ldr	r0, [fp, #-8]
   24bf8:	ldr	r0, [r0]
   24bfc:	movw	r1, #1
   24c00:	movw	r2, #4
   24c04:	movw	r3, #4
   24c08:	uxth	r3, r3
   24c0c:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   24c10:	str	r0, [fp, #-28]	; 0xffffffe4
   24c14:	movw	r1, #0
   24c18:	cmp	r0, r1
   24c1c:	bne	24c24 <main@@Base+0xe704>
   24c20:	b	25614 <main@@Base+0xf0f4>
   24c24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24c28:	ldr	r1, [sp, #44]	; 0x2c
   24c2c:	bl	20810 <main@@Base+0xa2f0>
   24c30:	b	24c48 <main@@Base+0xe728>
   24c34:	ldr	r0, [fp, #-8]
   24c38:	ldr	r1, [fp, #-12]
   24c3c:	ldr	r2, [fp, #-16]
   24c40:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   24c44:	str	r0, [fp, #-12]
   24c48:	b	24c60 <main@@Base+0xe740>
   24c4c:	ldr	r0, [fp, #-8]
   24c50:	ldr	r1, [fp, #-12]
   24c54:	ldr	r2, [fp, #-16]
   24c58:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   24c5c:	str	r0, [fp, #-12]
   24c60:	b	24f50 <main@@Base+0xea30>
   24c64:	ldr	r0, [sp, #52]	; 0x34
   24c68:	movw	r1, #24929	; 0x6161
   24c6c:	movt	r1, #24929	; 0x6161
   24c70:	teq	r0, r1
   24c74:	bne	24d08 <main@@Base+0xe7e8>
   24c78:	b	24c7c <main@@Base+0xe75c>
   24c7c:	ldr	r0, [fp, #-8]
   24c80:	ldr	r1, [fp, #-12]
   24c84:	str	r1, [fp, #-40]	; 0xffffffd8
   24c88:	ldr	r2, [fp, #-16]
   24c8c:	movw	r3, #4
   24c90:	bl	1bd48 <main@@Base+0x5828>
   24c94:	str	r0, [fp, #-12]
   24c98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24c9c:	ldr	r1, [fp, #-12]
   24ca0:	cmp	r0, r1
   24ca4:	beq	24d00 <main@@Base+0xe7e0>
   24ca8:	ldr	r0, [fp, #-8]
   24cac:	ldr	r1, [fp, #-12]
   24cb0:	ldr	r2, [fp, #-16]
   24cb4:	sub	r3, fp, #32
   24cb8:	bl	364a4 <flatcc_json_parser_build_string@@Base>
   24cbc:	str	r0, [fp, #-12]
   24cc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24cc4:	cmp	r0, #0
   24cc8:	beq	24cec <main@@Base+0xe7cc>
   24ccc:	ldr	r0, [fp, #-8]
   24cd0:	ldr	r0, [r0]
   24cd4:	movw	r1, #0
   24cd8:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   24cdc:	str	r0, [fp, #-36]	; 0xffffffdc
   24ce0:	movw	r1, #0
   24ce4:	cmp	r0, r1
   24ce8:	bne	24cf0 <main@@Base+0xe7d0>
   24cec:	b	25614 <main@@Base+0xf0f4>
   24cf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24cf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24cf8:	str	r0, [r1]
   24cfc:	b	24d04 <main@@Base+0xe7e4>
   24d00:	b	24d10 <main@@Base+0xe7f0>
   24d04:	b	24d0c <main@@Base+0xe7ec>
   24d08:	b	24d10 <main@@Base+0xe7f0>
   24d0c:	b	24f4c <main@@Base+0xea2c>
   24d10:	ldr	r0, [sp, #48]	; 0x30
   24d14:	ldr	r1, [sp, #52]	; 0x34
   24d18:	movw	r2, #25186	; 0x6262
   24d1c:	movt	r2, #25186	; 0x6262
   24d20:	eor	r1, r1, r2
   24d24:	movw	r2, #13108	; 0x3334
   24d28:	movt	r2, #12594	; 0x3132
   24d2c:	eor	r0, r0, r2
   24d30:	orr	r0, r0, r1
   24d34:	cmp	r0, #0
   24d38:	bne	24e7c <main@@Base+0xe95c>
   24d3c:	b	24d40 <main@@Base+0xe820>
   24d40:	ldr	r0, [fp, #-8]
   24d44:	ldr	r1, [fp, #-12]
   24d48:	str	r1, [fp, #-40]	; 0xffffffd8
   24d4c:	ldr	r2, [fp, #-16]
   24d50:	movw	r3, #8
   24d54:	bl	1bd48 <main@@Base+0x5828>
   24d58:	str	r0, [fp, #-12]
   24d5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24d60:	ldr	r1, [fp, #-12]
   24d64:	cmp	r0, r1
   24d68:	beq	24e64 <main@@Base+0xe944>
   24d6c:	mov	r0, #0
   24d70:	str	r0, [sp, #36]	; 0x24
   24d74:	str	r0, [sp, #32]
   24d78:	ldr	r0, [fp, #-8]
   24d7c:	ldr	r1, [fp, #-12]
   24d80:	str	r1, [fp, #-40]	; 0xffffffd8
   24d84:	ldr	r2, [fp, #-16]
   24d88:	add	r3, sp, #32
   24d8c:	bl	20248 <main@@Base+0x9d28>
   24d90:	str	r0, [fp, #-12]
   24d94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24d98:	ldr	r1, [fp, #-12]
   24d9c:	cmp	r0, r1
   24da0:	bne	24df4 <main@@Base+0xe8d4>
   24da4:	ldr	r0, [pc, #2204]	; 25648 <main@@Base+0xf128>
   24da8:	add	r3, pc, r0
   24dac:	ldr	r0, [fp, #-8]
   24db0:	ldr	r1, [fp, #-12]
   24db4:	str	r1, [fp, #-40]	; 0xffffffd8
   24db8:	ldr	r2, [fp, #-16]
   24dbc:	add	ip, sp, #32
   24dc0:	str	ip, [sp]
   24dc4:	bl	20320 <main@@Base+0x9e00>
   24dc8:	str	r0, [fp, #-12]
   24dcc:	ldr	r0, [fp, #-12]
   24dd0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24dd4:	cmp	r0, r1
   24dd8:	beq	24dec <main@@Base+0xe8cc>
   24ddc:	ldr	r0, [fp, #-12]
   24de0:	ldr	r1, [fp, #-16]
   24de4:	cmp	r0, r1
   24de8:	bne	24df0 <main@@Base+0xe8d0>
   24dec:	b	25614 <main@@Base+0xf0f4>
   24df0:	b	24df4 <main@@Base+0xe8d4>
   24df4:	ldr	r0, [sp, #32]
   24df8:	ldr	r1, [sp, #36]	; 0x24
   24dfc:	orr	r0, r0, r1
   24e00:	cmp	r0, #0
   24e04:	bne	24e20 <main@@Base+0xe900>
   24e08:	b	24e0c <main@@Base+0xe8ec>
   24e0c:	ldr	r0, [fp, #-8]
   24e10:	ldr	r0, [r0, #8]
   24e14:	and	r0, r0, #2
   24e18:	cmp	r0, #0
   24e1c:	beq	24e60 <main@@Base+0xe940>
   24e20:	ldr	r0, [fp, #-8]
   24e24:	ldr	r0, [r0]
   24e28:	movw	r1, #3
   24e2c:	movw	r2, #8
   24e30:	movw	r3, #8
   24e34:	uxth	r3, r3
   24e38:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   24e3c:	str	r0, [fp, #-28]	; 0xffffffe4
   24e40:	movw	r1, #0
   24e44:	cmp	r0, r1
   24e48:	bne	24e50 <main@@Base+0xe930>
   24e4c:	b	25614 <main@@Base+0xf0f4>
   24e50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24e54:	ldr	r2, [sp, #32]
   24e58:	ldr	r3, [sp, #36]	; 0x24
   24e5c:	bl	2051c <main@@Base+0x9ffc>
   24e60:	b	24e78 <main@@Base+0xe958>
   24e64:	ldr	r0, [fp, #-8]
   24e68:	ldr	r1, [fp, #-12]
   24e6c:	ldr	r2, [fp, #-16]
   24e70:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   24e74:	str	r0, [fp, #-12]
   24e78:	b	24f48 <main@@Base+0xea28>
   24e7c:	ldr	r0, [sp, #52]	; 0x34
   24e80:	movw	r1, #25186	; 0x6262
   24e84:	movt	r1, #25186	; 0x6262
   24e88:	teq	r0, r1
   24e8c:	bne	24f30 <main@@Base+0xea10>
   24e90:	b	24e94 <main@@Base+0xe974>
   24e94:	ldr	r0, [fp, #-8]
   24e98:	ldr	r1, [fp, #-12]
   24e9c:	str	r1, [fp, #-40]	; 0xffffffd8
   24ea0:	ldr	r2, [fp, #-16]
   24ea4:	movw	r3, #4
   24ea8:	bl	1bd48 <main@@Base+0x5828>
   24eac:	str	r0, [fp, #-12]
   24eb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24eb4:	ldr	r1, [fp, #-12]
   24eb8:	cmp	r0, r1
   24ebc:	beq	24f18 <main@@Base+0xe9f8>
   24ec0:	ldr	r0, [fp, #-8]
   24ec4:	ldr	r1, [fp, #-12]
   24ec8:	ldr	r2, [fp, #-16]
   24ecc:	sub	r3, fp, #32
   24ed0:	bl	364a4 <flatcc_json_parser_build_string@@Base>
   24ed4:	str	r0, [fp, #-12]
   24ed8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24edc:	cmp	r0, #0
   24ee0:	beq	24f04 <main@@Base+0xe9e4>
   24ee4:	ldr	r0, [fp, #-8]
   24ee8:	ldr	r0, [r0]
   24eec:	movw	r1, #2
   24ef0:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   24ef4:	str	r0, [fp, #-36]	; 0xffffffdc
   24ef8:	movw	r1, #0
   24efc:	cmp	r0, r1
   24f00:	bne	24f08 <main@@Base+0xe9e8>
   24f04:	b	25614 <main@@Base+0xf0f4>
   24f08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24f10:	str	r0, [r1]
   24f14:	b	24f2c <main@@Base+0xea0c>
   24f18:	ldr	r0, [fp, #-8]
   24f1c:	ldr	r1, [fp, #-12]
   24f20:	ldr	r2, [fp, #-16]
   24f24:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   24f28:	str	r0, [fp, #-12]
   24f2c:	b	24f44 <main@@Base+0xea24>
   24f30:	ldr	r0, [fp, #-8]
   24f34:	ldr	r1, [fp, #-12]
   24f38:	ldr	r2, [fp, #-16]
   24f3c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   24f40:	str	r0, [fp, #-12]
   24f44:	b	24f48 <main@@Base+0xea28>
   24f48:	b	24f4c <main@@Base+0xea2c>
   24f4c:	b	24f50 <main@@Base+0xea30>
   24f50:	b	255b8 <main@@Base+0xf098>
   24f54:	ldr	r0, [sp, #48]	; 0x30
   24f58:	ldr	r1, [sp, #52]	; 0x34
   24f5c:	movw	r2, #25443	; 0x6363
   24f60:	movt	r2, #25443	; 0x6363
   24f64:	eor	r1, r1, r2
   24f68:	movw	r2, #13108	; 0x3334
   24f6c:	movt	r2, #12594	; 0x3132
   24f70:	eor	r0, r0, r2
   24f74:	orr	r0, r0, r1
   24f78:	cmp	r0, #0
   24f7c:	bne	25220 <main@@Base+0xed00>
   24f80:	b	24f84 <main@@Base+0xea64>
   24f84:	ldr	r0, [fp, #-8]
   24f88:	ldr	r1, [fp, #-12]
   24f8c:	str	r1, [fp, #-40]	; 0xffffffd8
   24f90:	ldr	r2, [fp, #-16]
   24f94:	movw	r3, #8
   24f98:	bl	1bd48 <main@@Base+0x5828>
   24f9c:	str	r0, [fp, #-12]
   24fa0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24fa4:	ldr	r1, [fp, #-12]
   24fa8:	cmp	r0, r1
   24fac:	beq	250a8 <main@@Base+0xeb88>
   24fb0:	mov	r0, #0
   24fb4:	str	r0, [sp, #28]
   24fb8:	str	r0, [sp, #24]
   24fbc:	ldr	r0, [fp, #-8]
   24fc0:	ldr	r1, [fp, #-12]
   24fc4:	str	r1, [fp, #-40]	; 0xffffffd8
   24fc8:	ldr	r2, [fp, #-16]
   24fcc:	add	r3, sp, #24
   24fd0:	bl	20248 <main@@Base+0x9d28>
   24fd4:	str	r0, [fp, #-12]
   24fd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24fdc:	ldr	r1, [fp, #-12]
   24fe0:	cmp	r0, r1
   24fe4:	bne	25038 <main@@Base+0xeb18>
   24fe8:	ldr	r0, [pc, #1620]	; 25644 <main@@Base+0xf124>
   24fec:	add	r3, pc, r0
   24ff0:	ldr	r0, [fp, #-8]
   24ff4:	ldr	r1, [fp, #-12]
   24ff8:	str	r1, [fp, #-40]	; 0xffffffd8
   24ffc:	ldr	r2, [fp, #-16]
   25000:	add	ip, sp, #24
   25004:	str	ip, [sp]
   25008:	bl	20320 <main@@Base+0x9e00>
   2500c:	str	r0, [fp, #-12]
   25010:	ldr	r0, [fp, #-12]
   25014:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25018:	cmp	r0, r1
   2501c:	beq	25030 <main@@Base+0xeb10>
   25020:	ldr	r0, [fp, #-12]
   25024:	ldr	r1, [fp, #-16]
   25028:	cmp	r0, r1
   2502c:	bne	25034 <main@@Base+0xeb14>
   25030:	b	25614 <main@@Base+0xf0f4>
   25034:	b	25038 <main@@Base+0xeb18>
   25038:	ldr	r0, [sp, #24]
   2503c:	ldr	r1, [sp, #28]
   25040:	orr	r0, r0, r1
   25044:	cmp	r0, #0
   25048:	bne	25064 <main@@Base+0xeb44>
   2504c:	b	25050 <main@@Base+0xeb30>
   25050:	ldr	r0, [fp, #-8]
   25054:	ldr	r0, [r0, #8]
   25058:	and	r0, r0, #2
   2505c:	cmp	r0, #0
   25060:	beq	250a4 <main@@Base+0xeb84>
   25064:	ldr	r0, [fp, #-8]
   25068:	ldr	r0, [r0]
   2506c:	movw	r1, #5
   25070:	movw	r2, #8
   25074:	movw	r3, #8
   25078:	uxth	r3, r3
   2507c:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   25080:	str	r0, [fp, #-28]	; 0xffffffe4
   25084:	movw	r1, #0
   25088:	cmp	r0, r1
   2508c:	bne	25094 <main@@Base+0xeb74>
   25090:	b	25614 <main@@Base+0xf0f4>
   25094:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25098:	ldr	r2, [sp, #24]
   2509c:	ldr	r3, [sp, #28]
   250a0:	bl	2051c <main@@Base+0x9ffc>
   250a4:	b	2521c <main@@Base+0xecfc>
   250a8:	ldr	r0, [fp, #-12]
   250ac:	add	r0, r0, #8
   250b0:	str	r0, [fp, #-12]
   250b4:	ldr	r0, [fp, #-12]
   250b8:	ldr	r1, [fp, #-16]
   250bc:	bl	1bd10 <main@@Base+0x57f0>
   250c0:	str	r1, [sp, #52]	; 0x34
   250c4:	str	r0, [sp, #48]	; 0x30
   250c8:	ldr	r0, [sp, #52]	; 0x34
   250cc:	and	r0, r0, #-16777216	; 0xff000000
   250d0:	teq	r0, #889192448	; 0x35000000
   250d4:	bne	25204 <main@@Base+0xece4>
   250d8:	b	250dc <main@@Base+0xebbc>
   250dc:	ldr	r0, [fp, #-8]
   250e0:	ldr	r1, [fp, #-12]
   250e4:	str	r1, [fp, #-40]	; 0xffffffd8
   250e8:	ldr	r2, [fp, #-16]
   250ec:	movw	r3, #1
   250f0:	bl	1bd48 <main@@Base+0x5828>
   250f4:	str	r0, [fp, #-12]
   250f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   250fc:	ldr	r1, [fp, #-12]
   25100:	cmp	r0, r1
   25104:	beq	251ec <main@@Base+0xeccc>
   25108:	movw	r0, #0
   2510c:	str	r0, [sp, #20]
   25110:	ldr	r0, [fp, #-8]
   25114:	ldr	r1, [fp, #-12]
   25118:	str	r1, [fp, #-40]	; 0xffffffd8
   2511c:	ldr	r2, [fp, #-16]
   25120:	add	r3, sp, #20
   25124:	bl	20554 <main@@Base+0xa034>
   25128:	str	r0, [fp, #-12]
   2512c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25130:	ldr	r1, [fp, #-12]
   25134:	cmp	r0, r1
   25138:	bne	2518c <main@@Base+0xec6c>
   2513c:	ldr	r0, [pc, #1276]	; 25640 <main@@Base+0xf120>
   25140:	add	r3, pc, r0
   25144:	ldr	r0, [fp, #-8]
   25148:	ldr	r1, [fp, #-12]
   2514c:	str	r1, [fp, #-40]	; 0xffffffd8
   25150:	ldr	r2, [fp, #-16]
   25154:	add	ip, sp, #20
   25158:	str	ip, [sp]
   2515c:	bl	2062c <main@@Base+0xa10c>
   25160:	str	r0, [fp, #-12]
   25164:	ldr	r0, [fp, #-12]
   25168:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2516c:	cmp	r0, r1
   25170:	beq	25184 <main@@Base+0xec64>
   25174:	ldr	r0, [fp, #-12]
   25178:	ldr	r1, [fp, #-16]
   2517c:	cmp	r0, r1
   25180:	bne	25188 <main@@Base+0xec68>
   25184:	b	25614 <main@@Base+0xf0f4>
   25188:	b	2518c <main@@Base+0xec6c>
   2518c:	ldr	r0, [sp, #20]
   25190:	cmp	r0, #0
   25194:	bne	251ac <main@@Base+0xec8c>
   25198:	ldr	r0, [fp, #-8]
   2519c:	ldr	r0, [r0, #8]
   251a0:	and	r0, r0, #2
   251a4:	cmp	r0, #0
   251a8:	beq	251e8 <main@@Base+0xecc8>
   251ac:	ldr	r0, [fp, #-8]
   251b0:	ldr	r0, [r0]
   251b4:	movw	r1, #6
   251b8:	movw	r2, #4
   251bc:	movw	r3, #4
   251c0:	uxth	r3, r3
   251c4:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   251c8:	str	r0, [fp, #-28]	; 0xffffffe4
   251cc:	movw	r1, #0
   251d0:	cmp	r0, r1
   251d4:	bne	251dc <main@@Base+0xecbc>
   251d8:	b	25614 <main@@Base+0xf0f4>
   251dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   251e0:	ldr	r1, [sp, #20]
   251e4:	bl	20810 <main@@Base+0xa2f0>
   251e8:	b	25200 <main@@Base+0xece0>
   251ec:	ldr	r0, [fp, #-8]
   251f0:	ldr	r1, [fp, #-12]
   251f4:	ldr	r2, [fp, #-16]
   251f8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   251fc:	str	r0, [fp, #-12]
   25200:	b	25218 <main@@Base+0xecf8>
   25204:	ldr	r0, [fp, #-8]
   25208:	ldr	r1, [fp, #-12]
   2520c:	ldr	r2, [fp, #-16]
   25210:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   25214:	str	r0, [fp, #-12]
   25218:	b	2521c <main@@Base+0xecfc>
   2521c:	b	255b4 <main@@Base+0xf094>
   25220:	ldr	r0, [sp, #52]	; 0x34
   25224:	movw	r1, #25443	; 0x6363
   25228:	movt	r1, #25443	; 0x6363
   2522c:	teq	r0, r1
   25230:	bne	252c4 <main@@Base+0xeda4>
   25234:	b	25238 <main@@Base+0xed18>
   25238:	ldr	r0, [fp, #-8]
   2523c:	ldr	r1, [fp, #-12]
   25240:	str	r1, [fp, #-40]	; 0xffffffd8
   25244:	ldr	r2, [fp, #-16]
   25248:	movw	r3, #4
   2524c:	bl	1bd48 <main@@Base+0x5828>
   25250:	str	r0, [fp, #-12]
   25254:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25258:	ldr	r1, [fp, #-12]
   2525c:	cmp	r0, r1
   25260:	beq	252bc <main@@Base+0xed9c>
   25264:	ldr	r0, [fp, #-8]
   25268:	ldr	r1, [fp, #-12]
   2526c:	ldr	r2, [fp, #-16]
   25270:	sub	r3, fp, #32
   25274:	bl	364a4 <flatcc_json_parser_build_string@@Base>
   25278:	str	r0, [fp, #-12]
   2527c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25280:	cmp	r0, #0
   25284:	beq	252a8 <main@@Base+0xed88>
   25288:	ldr	r0, [fp, #-8]
   2528c:	ldr	r0, [r0]
   25290:	movw	r1, #4
   25294:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   25298:	str	r0, [fp, #-36]	; 0xffffffdc
   2529c:	movw	r1, #0
   252a0:	cmp	r0, r1
   252a4:	bne	252ac <main@@Base+0xed8c>
   252a8:	b	25614 <main@@Base+0xf0f4>
   252ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   252b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   252b4:	str	r0, [r1]
   252b8:	b	252c0 <main@@Base+0xeda0>
   252bc:	b	252cc <main@@Base+0xedac>
   252c0:	b	252c8 <main@@Base+0xeda8>
   252c4:	b	252cc <main@@Base+0xedac>
   252c8:	b	255b0 <main@@Base+0xf090>
   252cc:	ldr	r0, [sp, #48]	; 0x30
   252d0:	ldr	r1, [sp, #52]	; 0x34
   252d4:	movw	r2, #25700	; 0x6464
   252d8:	movt	r2, #25700	; 0x6464
   252dc:	eor	r1, r1, r2
   252e0:	movw	r2, #13108	; 0x3334
   252e4:	movt	r2, #12594	; 0x3132
   252e8:	eor	r0, r0, r2
   252ec:	orr	r0, r0, r1
   252f0:	cmp	r0, #0
   252f4:	bne	25598 <main@@Base+0xf078>
   252f8:	b	252fc <main@@Base+0xeddc>
   252fc:	ldr	r0, [fp, #-8]
   25300:	ldr	r1, [fp, #-12]
   25304:	str	r1, [fp, #-40]	; 0xffffffd8
   25308:	ldr	r2, [fp, #-16]
   2530c:	movw	r3, #8
   25310:	bl	1bd48 <main@@Base+0x5828>
   25314:	str	r0, [fp, #-12]
   25318:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2531c:	ldr	r1, [fp, #-12]
   25320:	cmp	r0, r1
   25324:	beq	25420 <main@@Base+0xef00>
   25328:	mov	r0, #0
   2532c:	str	r0, [sp, #12]
   25330:	str	r0, [sp, #8]
   25334:	ldr	r0, [fp, #-8]
   25338:	ldr	r1, [fp, #-12]
   2533c:	str	r1, [fp, #-40]	; 0xffffffd8
   25340:	ldr	r2, [fp, #-16]
   25344:	add	r3, sp, #8
   25348:	bl	20248 <main@@Base+0x9d28>
   2534c:	str	r0, [fp, #-12]
   25350:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25354:	ldr	r1, [fp, #-12]
   25358:	cmp	r0, r1
   2535c:	bne	253b0 <main@@Base+0xee90>
   25360:	ldr	r0, [pc, #724]	; 2563c <main@@Base+0xf11c>
   25364:	add	r3, pc, r0
   25368:	ldr	r0, [fp, #-8]
   2536c:	ldr	r1, [fp, #-12]
   25370:	str	r1, [fp, #-40]	; 0xffffffd8
   25374:	ldr	r2, [fp, #-16]
   25378:	add	ip, sp, #8
   2537c:	str	ip, [sp]
   25380:	bl	20320 <main@@Base+0x9e00>
   25384:	str	r0, [fp, #-12]
   25388:	ldr	r0, [fp, #-12]
   2538c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25390:	cmp	r0, r1
   25394:	beq	253a8 <main@@Base+0xee88>
   25398:	ldr	r0, [fp, #-12]
   2539c:	ldr	r1, [fp, #-16]
   253a0:	cmp	r0, r1
   253a4:	bne	253ac <main@@Base+0xee8c>
   253a8:	b	25614 <main@@Base+0xf0f4>
   253ac:	b	253b0 <main@@Base+0xee90>
   253b0:	ldr	r0, [sp, #8]
   253b4:	ldr	r1, [sp, #12]
   253b8:	orr	r0, r0, r1
   253bc:	cmp	r0, #0
   253c0:	bne	253dc <main@@Base+0xeebc>
   253c4:	b	253c8 <main@@Base+0xeea8>
   253c8:	ldr	r0, [fp, #-8]
   253cc:	ldr	r0, [r0, #8]
   253d0:	and	r0, r0, #2
   253d4:	cmp	r0, #0
   253d8:	beq	2541c <main@@Base+0xeefc>
   253dc:	ldr	r0, [fp, #-8]
   253e0:	ldr	r0, [r0]
   253e4:	movw	r1, #7
   253e8:	movw	r2, #8
   253ec:	movw	r3, #8
   253f0:	uxth	r3, r3
   253f4:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   253f8:	str	r0, [fp, #-28]	; 0xffffffe4
   253fc:	movw	r1, #0
   25400:	cmp	r0, r1
   25404:	bne	2540c <main@@Base+0xeeec>
   25408:	b	25614 <main@@Base+0xf0f4>
   2540c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25410:	ldr	r2, [sp, #8]
   25414:	ldr	r3, [sp, #12]
   25418:	bl	2051c <main@@Base+0x9ffc>
   2541c:	b	25594 <main@@Base+0xf074>
   25420:	ldr	r0, [fp, #-12]
   25424:	add	r0, r0, #8
   25428:	str	r0, [fp, #-12]
   2542c:	ldr	r0, [fp, #-12]
   25430:	ldr	r1, [fp, #-16]
   25434:	bl	1bd10 <main@@Base+0x57f0>
   25438:	str	r1, [sp, #52]	; 0x34
   2543c:	str	r0, [sp, #48]	; 0x30
   25440:	ldr	r0, [sp, #52]	; 0x34
   25444:	and	r0, r0, #-16777216	; 0xff000000
   25448:	teq	r0, #889192448	; 0x35000000
   2544c:	bne	2557c <main@@Base+0xf05c>
   25450:	b	25454 <main@@Base+0xef34>
   25454:	ldr	r0, [fp, #-8]
   25458:	ldr	r1, [fp, #-12]
   2545c:	str	r1, [fp, #-40]	; 0xffffffd8
   25460:	ldr	r2, [fp, #-16]
   25464:	movw	r3, #1
   25468:	bl	1bd48 <main@@Base+0x5828>
   2546c:	str	r0, [fp, #-12]
   25470:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25474:	ldr	r1, [fp, #-12]
   25478:	cmp	r0, r1
   2547c:	beq	25564 <main@@Base+0xf044>
   25480:	movw	r0, #0
   25484:	str	r0, [sp, #4]
   25488:	ldr	r0, [fp, #-8]
   2548c:	ldr	r1, [fp, #-12]
   25490:	str	r1, [fp, #-40]	; 0xffffffd8
   25494:	ldr	r2, [fp, #-16]
   25498:	add	r3, sp, #4
   2549c:	bl	20554 <main@@Base+0xa034>
   254a0:	str	r0, [fp, #-12]
   254a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   254a8:	ldr	r1, [fp, #-12]
   254ac:	cmp	r0, r1
   254b0:	bne	25504 <main@@Base+0xefe4>
   254b4:	ldr	r0, [pc, #380]	; 25638 <main@@Base+0xf118>
   254b8:	add	r3, pc, r0
   254bc:	ldr	r0, [fp, #-8]
   254c0:	ldr	r1, [fp, #-12]
   254c4:	str	r1, [fp, #-40]	; 0xffffffd8
   254c8:	ldr	r2, [fp, #-16]
   254cc:	add	ip, sp, #4
   254d0:	str	ip, [sp]
   254d4:	bl	2062c <main@@Base+0xa10c>
   254d8:	str	r0, [fp, #-12]
   254dc:	ldr	r0, [fp, #-12]
   254e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   254e4:	cmp	r0, r1
   254e8:	beq	254fc <main@@Base+0xefdc>
   254ec:	ldr	r0, [fp, #-12]
   254f0:	ldr	r1, [fp, #-16]
   254f4:	cmp	r0, r1
   254f8:	bne	25500 <main@@Base+0xefe0>
   254fc:	b	25614 <main@@Base+0xf0f4>
   25500:	b	25504 <main@@Base+0xefe4>
   25504:	ldr	r0, [sp, #4]
   25508:	cmp	r0, #0
   2550c:	bne	25524 <main@@Base+0xf004>
   25510:	ldr	r0, [fp, #-8]
   25514:	ldr	r0, [r0, #8]
   25518:	and	r0, r0, #2
   2551c:	cmp	r0, #0
   25520:	beq	25560 <main@@Base+0xf040>
   25524:	ldr	r0, [fp, #-8]
   25528:	ldr	r0, [r0]
   2552c:	movw	r1, #8
   25530:	movw	r2, #4
   25534:	movw	r3, #4
   25538:	uxth	r3, r3
   2553c:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   25540:	str	r0, [fp, #-28]	; 0xffffffe4
   25544:	movw	r1, #0
   25548:	cmp	r0, r1
   2554c:	bne	25554 <main@@Base+0xf034>
   25550:	b	25614 <main@@Base+0xf0f4>
   25554:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25558:	ldr	r1, [sp, #4]
   2555c:	bl	20810 <main@@Base+0xa2f0>
   25560:	b	25578 <main@@Base+0xf058>
   25564:	ldr	r0, [fp, #-8]
   25568:	ldr	r1, [fp, #-12]
   2556c:	ldr	r2, [fp, #-16]
   25570:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   25574:	str	r0, [fp, #-12]
   25578:	b	25590 <main@@Base+0xf070>
   2557c:	ldr	r0, [fp, #-8]
   25580:	ldr	r1, [fp, #-12]
   25584:	ldr	r2, [fp, #-16]
   25588:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   2558c:	str	r0, [fp, #-12]
   25590:	b	25594 <main@@Base+0xf074>
   25594:	b	255ac <main@@Base+0xf08c>
   25598:	ldr	r0, [fp, #-8]
   2559c:	ldr	r1, [fp, #-12]
   255a0:	ldr	r2, [fp, #-16]
   255a4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   255a8:	str	r0, [fp, #-12]
   255ac:	b	255b0 <main@@Base+0xf090>
   255b0:	b	255b4 <main@@Base+0xf094>
   255b4:	b	255b8 <main@@Base+0xf098>
   255b8:	ldr	r0, [fp, #-8]
   255bc:	ldr	r1, [fp, #-12]
   255c0:	ldr	r2, [fp, #-16]
   255c4:	sub	r3, fp, #24
   255c8:	bl	20d64 <main@@Base+0xa844>
   255cc:	str	r0, [fp, #-12]
   255d0:	b	24a74 <main@@Base+0xe554>
   255d4:	ldr	r0, [fp, #-8]
   255d8:	ldr	r0, [r0, #20]
   255dc:	cmp	r0, #0
   255e0:	beq	255e8 <main@@Base+0xf0c8>
   255e4:	b	25614 <main@@Base+0xf0f4>
   255e8:	ldr	r0, [fp, #-8]
   255ec:	ldr	r0, [r0]
   255f0:	bl	2c764 <flatcc_builder_end_table@@Base>
   255f4:	ldr	lr, [fp, #-20]	; 0xffffffec
   255f8:	str	r0, [lr]
   255fc:	cmp	r0, #0
   25600:	bne	25608 <main@@Base+0xf0e8>
   25604:	b	25614 <main@@Base+0xf0f4>
   25608:	ldr	r0, [fp, #-12]
   2560c:	str	r0, [fp, #-4]
   25610:	b	2562c <main@@Base+0xf10c>
   25614:	ldr	r0, [fp, #-8]
   25618:	ldr	r1, [fp, #-12]
   2561c:	ldr	r2, [fp, #-16]
   25620:	movw	r3, #33	; 0x21
   25624:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   25628:	str	r0, [fp, #-4]
   2562c:	ldr	r0, [fp, #-4]
   25630:	mov	sp, fp
   25634:	pop	{fp, pc}
   25638:	andeq	r7, r3, ip, asr #27
   2563c:	andeq	r7, r3, r4, lsl pc
   25640:	andeq	r8, r3, ip, lsr #2
   25644:	andeq	r8, r3, r4, ror r2
   25648:	andeq	r8, r3, ip, lsr #9
   2564c:	andeq	r8, r3, r0, asr #13
   25650:	push	{fp, lr}
   25654:	mov	fp, sp
   25658:	sub	sp, sp, #72	; 0x48
   2565c:	str	r0, [fp, #-8]
   25660:	str	r1, [fp, #-12]
   25664:	str	r2, [fp, #-16]
   25668:	str	r3, [fp, #-20]	; 0xffffffec
   2566c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25670:	movw	r1, #0
   25674:	str	r1, [r0]
   25678:	ldr	r0, [fp, #-8]
   2567c:	ldr	r0, [r0]
   25680:	movw	r1, #2
   25684:	bl	2baec <flatcc_builder_start_table@@Base>
   25688:	cmp	r0, #0
   2568c:	beq	25694 <main@@Base+0xf174>
   25690:	b	25aec <main@@Base+0xf5cc>
   25694:	ldr	r0, [fp, #-8]
   25698:	ldr	r1, [fp, #-12]
   2569c:	ldr	r2, [fp, #-16]
   256a0:	sub	r3, fp, #24
   256a4:	bl	1bba8 <main@@Base+0x5688>
   256a8:	str	r0, [fp, #-12]
   256ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   256b0:	cmp	r0, #0
   256b4:	beq	25aac <main@@Base+0xf58c>
   256b8:	ldr	r0, [fp, #-8]
   256bc:	ldr	r1, [fp, #-12]
   256c0:	ldr	r2, [fp, #-16]
   256c4:	bl	1bc8c <main@@Base+0x576c>
   256c8:	str	r0, [fp, #-12]
   256cc:	ldr	r0, [fp, #-12]
   256d0:	ldr	r1, [fp, #-16]
   256d4:	bl	1bd10 <main@@Base+0x57f0>
   256d8:	str	r1, [sp, #28]
   256dc:	str	r0, [sp, #24]
   256e0:	ldr	r0, [sp, #24]
   256e4:	ldr	r1, [sp, #28]
   256e8:	movw	r2, #24929	; 0x6161
   256ec:	movt	r2, #24929	; 0x6161
   256f0:	eor	r1, r1, r2
   256f4:	movw	r2, #25186	; 0x6262
   256f8:	movt	r2, #24418	; 0x5f62
   256fc:	eor	r0, r0, r2
   25700:	orr	r0, r0, r1
   25704:	cmp	r0, #0
   25708:	bne	25a7c <main@@Base+0xf55c>
   2570c:	b	25710 <main@@Base+0xf1f0>
   25710:	ldr	r0, [fp, #-12]
   25714:	add	r0, r0, #8
   25718:	str	r0, [fp, #-12]
   2571c:	ldr	r0, [fp, #-12]
   25720:	ldr	r1, [fp, #-16]
   25724:	bl	1bd10 <main@@Base+0x57f0>
   25728:	str	r1, [sp, #28]
   2572c:	str	r0, [sp, #24]
   25730:	ldr	r0, [sp, #24]
   25734:	ldr	r1, [sp, #28]
   25738:	movw	lr, #29556	; 0x7374
   2573c:	movt	lr, #25183	; 0x625f
   25740:	eor	r1, r1, lr
   25744:	movw	lr, #29791	; 0x745f
   25748:	movt	lr, #24946	; 0x6172
   2574c:	eor	r0, r0, lr
   25750:	orr	r0, r0, r1
   25754:	cmp	r0, #0
   25758:	bne	258ec <main@@Base+0xf3cc>
   2575c:	b	25760 <main@@Base+0xf240>
   25760:	ldr	r0, [fp, #-12]
   25764:	add	r0, r0, #8
   25768:	str	r0, [fp, #-12]
   2576c:	ldr	r0, [fp, #-12]
   25770:	ldr	r1, [fp, #-16]
   25774:	bl	1bd10 <main@@Base+0x57f0>
   25778:	str	r1, [sp, #28]
   2577c:	str	r0, [sp, #24]
   25780:	ldr	r0, [sp, #24]
   25784:	ldr	r1, [sp, #28]
   25788:	and	r0, r0, #-16777216	; 0xff000000
   2578c:	movw	lr, #25968	; 0x6570
   25790:	movt	lr, #29556	; 0x7374
   25794:	eor	r1, r1, lr
   25798:	eor	r0, r0, #1929379840	; 0x73000000
   2579c:	orr	r0, r0, r1
   257a0:	cmp	r0, #0
   257a4:	bne	258d4 <main@@Base+0xf3b4>
   257a8:	b	257ac <main@@Base+0xf28c>
   257ac:	ldr	r0, [fp, #-8]
   257b0:	ldr	r1, [fp, #-12]
   257b4:	str	r1, [sp, #32]
   257b8:	ldr	r2, [fp, #-16]
   257bc:	movw	r3, #5
   257c0:	bl	1bd48 <main@@Base+0x5828>
   257c4:	str	r0, [fp, #-12]
   257c8:	ldr	r0, [sp, #32]
   257cc:	ldr	r1, [fp, #-12]
   257d0:	cmp	r0, r1
   257d4:	beq	258bc <main@@Base+0xf39c>
   257d8:	movw	r0, #0
   257dc:	str	r0, [sp, #20]
   257e0:	ldr	r0, [fp, #-8]
   257e4:	ldr	r1, [fp, #-12]
   257e8:	str	r1, [sp, #32]
   257ec:	ldr	r2, [fp, #-16]
   257f0:	add	r3, sp, #20
   257f4:	bl	20554 <main@@Base+0xa034>
   257f8:	str	r0, [fp, #-12]
   257fc:	ldr	r0, [sp, #32]
   25800:	ldr	r1, [fp, #-12]
   25804:	cmp	r0, r1
   25808:	bne	2585c <main@@Base+0xf33c>
   2580c:	ldr	r0, [pc, #768]	; 25b14 <main@@Base+0xf5f4>
   25810:	add	r3, pc, r0
   25814:	ldr	r0, [fp, #-8]
   25818:	ldr	r1, [fp, #-12]
   2581c:	str	r1, [sp, #32]
   25820:	ldr	r2, [fp, #-16]
   25824:	add	ip, sp, #20
   25828:	str	ip, [sp]
   2582c:	bl	2062c <main@@Base+0xa10c>
   25830:	str	r0, [fp, #-12]
   25834:	ldr	r0, [fp, #-12]
   25838:	ldr	r1, [sp, #32]
   2583c:	cmp	r0, r1
   25840:	beq	25854 <main@@Base+0xf334>
   25844:	ldr	r0, [fp, #-12]
   25848:	ldr	r1, [fp, #-16]
   2584c:	cmp	r0, r1
   25850:	bne	25858 <main@@Base+0xf338>
   25854:	b	25aec <main@@Base+0xf5cc>
   25858:	b	2585c <main@@Base+0xf33c>
   2585c:	ldr	r0, [sp, #20]
   25860:	cmp	r0, #0
   25864:	bne	2587c <main@@Base+0xf35c>
   25868:	ldr	r0, [fp, #-8]
   2586c:	ldr	r0, [r0, #8]
   25870:	and	r0, r0, #2
   25874:	cmp	r0, #0
   25878:	beq	258b8 <main@@Base+0xf398>
   2587c:	ldr	r0, [fp, #-8]
   25880:	ldr	r0, [r0]
   25884:	movw	r1, #1
   25888:	movw	r2, #4
   2588c:	movw	r3, #4
   25890:	uxth	r3, r3
   25894:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   25898:	str	r0, [fp, #-28]	; 0xffffffe4
   2589c:	movw	r1, #0
   258a0:	cmp	r0, r1
   258a4:	bne	258ac <main@@Base+0xf38c>
   258a8:	b	25aec <main@@Base+0xf5cc>
   258ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   258b0:	ldr	r1, [sp, #20]
   258b4:	bl	20810 <main@@Base+0xa2f0>
   258b8:	b	258d0 <main@@Base+0xf3b0>
   258bc:	ldr	r0, [fp, #-8]
   258c0:	ldr	r1, [fp, #-12]
   258c4:	ldr	r2, [fp, #-16]
   258c8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   258cc:	str	r0, [fp, #-12]
   258d0:	b	258e8 <main@@Base+0xf3c8>
   258d4:	ldr	r0, [fp, #-8]
   258d8:	ldr	r1, [fp, #-12]
   258dc:	ldr	r2, [fp, #-16]
   258e0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   258e4:	str	r0, [fp, #-12]
   258e8:	b	25a78 <main@@Base+0xf558>
   258ec:	ldr	r0, [sp, #24]
   258f0:	ldr	r1, [sp, #28]
   258f4:	movw	r2, #24435	; 0x5f73
   258f8:	movt	r2, #98	; 0x62
   258fc:	eor	r2, r2, r1, lsr #8
   25900:	lsr	r0, r0, #8
   25904:	orr	r0, r0, r1, lsl #24
   25908:	movw	r1, #28787	; 0x7073
   2590c:	movt	r1, #29797	; 0x7465
   25910:	eor	r0, r0, r1
   25914:	orr	r0, r0, r2
   25918:	cmp	r0, #0
   2591c:	bne	25a60 <main@@Base+0xf540>
   25920:	b	25924 <main@@Base+0xf404>
   25924:	ldr	r0, [fp, #-8]
   25928:	ldr	r1, [fp, #-12]
   2592c:	str	r1, [sp, #32]
   25930:	ldr	r2, [fp, #-16]
   25934:	movw	r3, #7
   25938:	bl	1bd48 <main@@Base+0x5828>
   2593c:	str	r0, [fp, #-12]
   25940:	ldr	r0, [sp, #32]
   25944:	ldr	r1, [fp, #-12]
   25948:	cmp	r0, r1
   2594c:	beq	25a48 <main@@Base+0xf528>
   25950:	mov	r0, #0
   25954:	str	r0, [sp, #12]
   25958:	str	r0, [sp, #8]
   2595c:	ldr	r0, [fp, #-8]
   25960:	ldr	r1, [fp, #-12]
   25964:	str	r1, [sp, #32]
   25968:	ldr	r2, [fp, #-16]
   2596c:	add	r3, sp, #8
   25970:	bl	20248 <main@@Base+0x9d28>
   25974:	str	r0, [fp, #-12]
   25978:	ldr	r0, [sp, #32]
   2597c:	ldr	r1, [fp, #-12]
   25980:	cmp	r0, r1
   25984:	bne	259d8 <main@@Base+0xf4b8>
   25988:	ldr	r0, [pc, #384]	; 25b10 <main@@Base+0xf5f0>
   2598c:	add	r3, pc, r0
   25990:	ldr	r0, [fp, #-8]
   25994:	ldr	r1, [fp, #-12]
   25998:	str	r1, [sp, #32]
   2599c:	ldr	r2, [fp, #-16]
   259a0:	add	ip, sp, #8
   259a4:	str	ip, [sp]
   259a8:	bl	20320 <main@@Base+0x9e00>
   259ac:	str	r0, [fp, #-12]
   259b0:	ldr	r0, [fp, #-12]
   259b4:	ldr	r1, [sp, #32]
   259b8:	cmp	r0, r1
   259bc:	beq	259d0 <main@@Base+0xf4b0>
   259c0:	ldr	r0, [fp, #-12]
   259c4:	ldr	r1, [fp, #-16]
   259c8:	cmp	r0, r1
   259cc:	bne	259d4 <main@@Base+0xf4b4>
   259d0:	b	25aec <main@@Base+0xf5cc>
   259d4:	b	259d8 <main@@Base+0xf4b8>
   259d8:	ldr	r0, [sp, #8]
   259dc:	ldr	r1, [sp, #12]
   259e0:	orr	r0, r0, r1
   259e4:	cmp	r0, #0
   259e8:	bne	25a04 <main@@Base+0xf4e4>
   259ec:	b	259f0 <main@@Base+0xf4d0>
   259f0:	ldr	r0, [fp, #-8]
   259f4:	ldr	r0, [r0, #8]
   259f8:	and	r0, r0, #2
   259fc:	cmp	r0, #0
   25a00:	beq	25a44 <main@@Base+0xf524>
   25a04:	ldr	r0, [fp, #-8]
   25a08:	ldr	r0, [r0]
   25a0c:	movw	r1, #0
   25a10:	movw	r2, #8
   25a14:	movw	r3, #8
   25a18:	uxth	r3, r3
   25a1c:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   25a20:	str	r0, [fp, #-28]	; 0xffffffe4
   25a24:	movw	r1, #0
   25a28:	cmp	r0, r1
   25a2c:	bne	25a34 <main@@Base+0xf514>
   25a30:	b	25aec <main@@Base+0xf5cc>
   25a34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25a38:	ldr	r2, [sp, #8]
   25a3c:	ldr	r3, [sp, #12]
   25a40:	bl	2051c <main@@Base+0x9ffc>
   25a44:	b	25a5c <main@@Base+0xf53c>
   25a48:	ldr	r0, [fp, #-8]
   25a4c:	ldr	r1, [fp, #-12]
   25a50:	ldr	r2, [fp, #-16]
   25a54:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   25a58:	str	r0, [fp, #-12]
   25a5c:	b	25a74 <main@@Base+0xf554>
   25a60:	ldr	r0, [fp, #-8]
   25a64:	ldr	r1, [fp, #-12]
   25a68:	ldr	r2, [fp, #-16]
   25a6c:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   25a70:	str	r0, [fp, #-12]
   25a74:	b	25a78 <main@@Base+0xf558>
   25a78:	b	25a90 <main@@Base+0xf570>
   25a7c:	ldr	r0, [fp, #-8]
   25a80:	ldr	r1, [fp, #-12]
   25a84:	ldr	r2, [fp, #-16]
   25a88:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   25a8c:	str	r0, [fp, #-12]
   25a90:	ldr	r0, [fp, #-8]
   25a94:	ldr	r1, [fp, #-12]
   25a98:	ldr	r2, [fp, #-16]
   25a9c:	sub	r3, fp, #24
   25aa0:	bl	20d64 <main@@Base+0xa844>
   25aa4:	str	r0, [fp, #-12]
   25aa8:	b	256ac <main@@Base+0xf18c>
   25aac:	ldr	r0, [fp, #-8]
   25ab0:	ldr	r0, [r0, #20]
   25ab4:	cmp	r0, #0
   25ab8:	beq	25ac0 <main@@Base+0xf5a0>
   25abc:	b	25aec <main@@Base+0xf5cc>
   25ac0:	ldr	r0, [fp, #-8]
   25ac4:	ldr	r0, [r0]
   25ac8:	bl	2c764 <flatcc_builder_end_table@@Base>
   25acc:	ldr	lr, [fp, #-20]	; 0xffffffec
   25ad0:	str	r0, [lr]
   25ad4:	cmp	r0, #0
   25ad8:	bne	25ae0 <main@@Base+0xf5c0>
   25adc:	b	25aec <main@@Base+0xf5cc>
   25ae0:	ldr	r0, [fp, #-12]
   25ae4:	str	r0, [fp, #-4]
   25ae8:	b	25b04 <main@@Base+0xf5e4>
   25aec:	ldr	r0, [fp, #-8]
   25af0:	ldr	r1, [fp, #-12]
   25af4:	ldr	r2, [fp, #-16]
   25af8:	movw	r3, #33	; 0x21
   25afc:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   25b00:	str	r0, [fp, #-4]
   25b04:	ldr	r0, [fp, #-4]
   25b08:	mov	sp, fp
   25b0c:	pop	{fp, pc}
   25b10:	andeq	r7, r3, r0, lsl r9
   25b14:	andeq	r7, r3, r0, lsl #21
   25b18:	push	{fp, lr}
   25b1c:	mov	fp, sp
   25b20:	sub	sp, sp, #56	; 0x38
   25b24:	ldr	ip, [fp, #12]
   25b28:	ldr	lr, [fp, #8]
   25b2c:	str	r0, [fp, #-8]
   25b30:	str	r1, [fp, #-12]
   25b34:	str	r2, [fp, #-16]
   25b38:	str	r3, [fp, #-20]	; 0xffffffec
   25b3c:	ldr	r0, [fp, #-12]
   25b40:	str	r0, [fp, #-24]	; 0xffffffe8
   25b44:	ldr	r0, [fp, #-12]
   25b48:	ldr	r1, [fp, #-16]
   25b4c:	str	lr, [sp, #12]
   25b50:	str	ip, [sp, #8]
   25b54:	bl	1bd10 <main@@Base+0x57f0>
   25b58:	str	r1, [sp, #20]
   25b5c:	str	r0, [sp, #16]
   25b60:	ldr	r0, [sp, #16]
   25b64:	ldr	r1, [sp, #20]
   25b68:	movw	r2, #24946	; 0x6172
   25b6c:	movt	r2, #17256	; 0x4368
   25b70:	eor	r1, r1, r2
   25b74:	movw	r2, #29797	; 0x7465
   25b78:	movt	r2, #24931	; 0x6163
   25b7c:	eor	r0, r0, r2
   25b80:	orr	r0, r0, r1
   25b84:	cmp	r0, #0
   25b88:	bne	25c3c <main@@Base+0xf71c>
   25b8c:	b	25b90 <main@@Base+0xf670>
   25b90:	ldr	r0, [fp, #-12]
   25b94:	add	r0, r0, #8
   25b98:	str	r0, [fp, #-12]
   25b9c:	ldr	r0, [fp, #-12]
   25ba0:	ldr	r1, [fp, #-16]
   25ba4:	bl	1bd10 <main@@Base+0x57f0>
   25ba8:	str	r1, [sp, #20]
   25bac:	str	r0, [sp, #16]
   25bb0:	ldr	r0, [sp, #20]
   25bb4:	and	r0, r0, #-16777216	; 0xff000000
   25bb8:	teq	r0, #1912602624	; 0x72000000
   25bbc:	bne	25c2c <main@@Base+0xf70c>
   25bc0:	b	25bc4 <main@@Base+0xf6a4>
   25bc4:	ldr	r0, [fp, #-8]
   25bc8:	ldr	r1, [fp, #-12]
   25bcc:	str	r1, [sp, #28]
   25bd0:	ldr	r2, [fp, #-16]
   25bd4:	movw	r3, #1
   25bd8:	bl	210d8 <main@@Base+0xabb8>
   25bdc:	str	r0, [fp, #-12]
   25be0:	ldr	r0, [fp, #-12]
   25be4:	ldr	r1, [sp, #28]
   25be8:	cmp	r0, r1
   25bec:	beq	25c1c <main@@Base+0xf6fc>
   25bf0:	ldr	r0, [fp, #-8]
   25bf4:	ldr	r1, [fp, #-12]
   25bf8:	ldr	r2, [fp, #-16]
   25bfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   25c00:	ldr	ip, [fp, #8]
   25c04:	ldr	lr, [fp, #12]
   25c08:	str	ip, [sp]
   25c0c:	str	lr, [sp, #4]
   25c10:	bl	21c58 <main@@Base+0xb738>
   25c14:	str	r0, [fp, #-12]
   25c18:	b	25c28 <main@@Base+0xf708>
   25c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25c20:	str	r0, [fp, #-4]
   25c24:	b	25c50 <main@@Base+0xf730>
   25c28:	b	25c38 <main@@Base+0xf718>
   25c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25c30:	str	r0, [fp, #-4]
   25c34:	b	25c50 <main@@Base+0xf730>
   25c38:	b	25c48 <main@@Base+0xf728>
   25c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25c40:	str	r0, [fp, #-4]
   25c44:	b	25c50 <main@@Base+0xf730>
   25c48:	ldr	r0, [fp, #-12]
   25c4c:	str	r0, [fp, #-4]
   25c50:	ldr	r0, [fp, #-4]
   25c54:	mov	sp, fp
   25c58:	pop	{fp, pc}
   25c5c:	push	{fp, lr}
   25c60:	mov	fp, sp
   25c64:	sub	sp, sp, #32
   25c68:	ldr	ip, [fp, #8]
   25c6c:	str	r0, [fp, #-8]
   25c70:	str	r1, [fp, #-12]
   25c74:	str	r2, [sp, #16]
   25c78:	strb	r3, [sp, #15]
   25c7c:	ldr	r0, [fp, #8]
   25c80:	mov	r1, #0
   25c84:	str	r1, [r0]
   25c88:	ldrb	r0, [sp, #15]
   25c8c:	mov	r1, r0
   25c90:	cmp	r0, #0
   25c94:	str	ip, [sp, #8]
   25c98:	str	r1, [sp, #4]
   25c9c:	beq	25d04 <main@@Base+0xf7e4>
   25ca0:	b	25ca4 <main@@Base+0xf784>
   25ca4:	ldr	r0, [sp, #4]
   25ca8:	cmp	r0, #2
   25cac:	beq	25d1c <main@@Base+0xf7fc>
   25cb0:	b	25cb4 <main@@Base+0xf794>
   25cb4:	ldr	r0, [sp, #4]
   25cb8:	cmp	r0, #8
   25cbc:	beq	25d38 <main@@Base+0xf818>
   25cc0:	b	25cc4 <main@@Base+0xf7a4>
   25cc4:	ldr	r0, [sp, #4]
   25cc8:	cmp	r0, #9
   25ccc:	beq	25d54 <main@@Base+0xf834>
   25cd0:	b	25cd4 <main@@Base+0xf7b4>
   25cd4:	ldr	r0, [sp, #4]
   25cd8:	cmp	r0, #10
   25cdc:	beq	25d70 <main@@Base+0xf850>
   25ce0:	b	25ce4 <main@@Base+0xf7c4>
   25ce4:	ldr	r0, [sp, #4]
   25ce8:	cmp	r0, #11
   25cec:	beq	25d8c <main@@Base+0xf86c>
   25cf0:	b	25cf4 <main@@Base+0xf7d4>
   25cf4:	ldr	r0, [sp, #4]
   25cf8:	cmp	r0, #255	; 0xff
   25cfc:	beq	25da8 <main@@Base+0xf888>
   25d00:	b	25dc4 <main@@Base+0xf8a4>
   25d04:	ldr	r0, [fp, #-8]
   25d08:	ldr	r1, [fp, #-12]
   25d0c:	ldr	r2, [sp, #16]
   25d10:	bl	2271c <main@@Base+0xc1fc>
   25d14:	str	r0, [fp, #-4]
   25d18:	b	25e5c <main@@Base+0xf93c>
   25d1c:	ldr	r0, [fp, #-8]
   25d20:	ldr	r1, [fp, #-12]
   25d24:	ldr	r2, [sp, #16]
   25d28:	ldr	r3, [fp, #8]
   25d2c:	bl	25f50 <main@@Base+0xfa30>
   25d30:	str	r0, [fp, #-12]
   25d34:	b	25e0c <main@@Base+0xf8ec>
   25d38:	ldr	r0, [fp, #-8]
   25d3c:	ldr	r1, [fp, #-12]
   25d40:	ldr	r2, [sp, #16]
   25d44:	ldr	r3, [fp, #8]
   25d48:	bl	2628c <main@@Base+0xfd6c>
   25d4c:	str	r0, [fp, #-12]
   25d50:	b	25e0c <main@@Base+0xf8ec>
   25d54:	ldr	r0, [fp, #-8]
   25d58:	ldr	r1, [fp, #-12]
   25d5c:	ldr	r2, [sp, #16]
   25d60:	ldr	r3, [fp, #8]
   25d64:	bl	26358 <main@@Base+0xfe38>
   25d68:	str	r0, [fp, #-12]
   25d6c:	b	25e0c <main@@Base+0xf8ec>
   25d70:	ldr	r0, [fp, #-8]
   25d74:	ldr	r1, [fp, #-12]
   25d78:	ldr	r2, [sp, #16]
   25d7c:	ldr	r3, [fp, #8]
   25d80:	bl	26358 <main@@Base+0xfe38>
   25d84:	str	r0, [fp, #-12]
   25d88:	b	25e0c <main@@Base+0xf8ec>
   25d8c:	ldr	r0, [fp, #-8]
   25d90:	ldr	r1, [fp, #-12]
   25d94:	ldr	r2, [sp, #16]
   25d98:	ldr	r3, [fp, #8]
   25d9c:	bl	364a4 <flatcc_json_parser_build_string@@Base>
   25da0:	str	r0, [fp, #-12]
   25da4:	b	25e0c <main@@Base+0xf8ec>
   25da8:	ldr	r0, [fp, #-8]
   25dac:	ldr	r1, [fp, #-12]
   25db0:	ldr	r2, [sp, #16]
   25db4:	ldr	r3, [fp, #8]
   25db8:	bl	364a4 <flatcc_json_parser_build_string@@Base>
   25dbc:	str	r0, [fp, #-12]
   25dc0:	b	25e0c <main@@Base+0xf8ec>
   25dc4:	ldr	r0, [fp, #-8]
   25dc8:	ldr	r0, [r0, #8]
   25dcc:	and	r0, r0, #1
   25dd0:	cmp	r0, #0
   25dd4:	bne	25df4 <main@@Base+0xf8d4>
   25dd8:	ldr	r0, [fp, #-8]
   25ddc:	ldr	r1, [fp, #-12]
   25de0:	ldr	r2, [sp, #16]
   25de4:	movw	r3, #15
   25de8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   25dec:	str	r0, [fp, #-4]
   25df0:	b	25e5c <main@@Base+0xf93c>
   25df4:	ldr	r0, [fp, #-8]
   25df8:	ldr	r1, [fp, #-12]
   25dfc:	ldr	r2, [sp, #16]
   25e00:	bl	345e0 <flatcc_json_parser_generic_json@@Base>
   25e04:	str	r0, [fp, #-4]
   25e08:	b	25e5c <main@@Base+0xf93c>
   25e0c:	ldr	r0, [fp, #-8]
   25e10:	ldr	r0, [r0, #20]
   25e14:	cmp	r0, #0
   25e18:	beq	25e28 <main@@Base+0xf908>
   25e1c:	ldr	r0, [fp, #-12]
   25e20:	str	r0, [fp, #-4]
   25e24:	b	25e5c <main@@Base+0xf93c>
   25e28:	ldr	r0, [fp, #8]
   25e2c:	ldr	r0, [r0]
   25e30:	cmp	r0, #0
   25e34:	bne	25e54 <main@@Base+0xf934>
   25e38:	ldr	r0, [fp, #-8]
   25e3c:	ldr	r1, [fp, #-12]
   25e40:	ldr	r2, [sp, #16]
   25e44:	movw	r3, #33	; 0x21
   25e48:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   25e4c:	str	r0, [fp, #-4]
   25e50:	b	25e5c <main@@Base+0xf93c>
   25e54:	ldr	r0, [fp, #-12]
   25e58:	str	r0, [fp, #-4]
   25e5c:	ldr	r0, [fp, #-4]
   25e60:	mov	sp, fp
   25e64:	pop	{fp, pc}
   25e68:	sub	sp, sp, #12
   25e6c:	strb	r0, [sp, #7]
   25e70:	ldrb	r0, [sp, #7]
   25e74:	mov	r1, r0
   25e78:	cmp	r0, #0
   25e7c:	str	r1, [sp]
   25e80:	beq	25ee8 <main@@Base+0xf9c8>
   25e84:	b	25e88 <main@@Base+0xf968>
   25e88:	ldr	r0, [sp]
   25e8c:	cmp	r0, #2
   25e90:	beq	25ef4 <main@@Base+0xf9d4>
   25e94:	b	25e98 <main@@Base+0xf978>
   25e98:	ldr	r0, [sp]
   25e9c:	cmp	r0, #8
   25ea0:	beq	25f00 <main@@Base+0xf9e0>
   25ea4:	b	25ea8 <main@@Base+0xf988>
   25ea8:	ldr	r0, [sp]
   25eac:	cmp	r0, #9
   25eb0:	beq	25f0c <main@@Base+0xf9ec>
   25eb4:	b	25eb8 <main@@Base+0xf998>
   25eb8:	ldr	r0, [sp]
   25ebc:	cmp	r0, #10
   25ec0:	beq	25f18 <main@@Base+0xf9f8>
   25ec4:	b	25ec8 <main@@Base+0xf9a8>
   25ec8:	ldr	r0, [sp]
   25ecc:	cmp	r0, #11
   25ed0:	beq	25f24 <main@@Base+0xfa04>
   25ed4:	b	25ed8 <main@@Base+0xf9b8>
   25ed8:	ldr	r0, [sp]
   25edc:	cmp	r0, #255	; 0xff
   25ee0:	beq	25f30 <main@@Base+0xfa10>
   25ee4:	b	25f3c <main@@Base+0xfa1c>
   25ee8:	movw	r0, #1
   25eec:	str	r0, [sp, #8]
   25ef0:	b	25f44 <main@@Base+0xfa24>
   25ef4:	movw	r0, #1
   25ef8:	str	r0, [sp, #8]
   25efc:	b	25f44 <main@@Base+0xfa24>
   25f00:	movw	r0, #1
   25f04:	str	r0, [sp, #8]
   25f08:	b	25f44 <main@@Base+0xfa24>
   25f0c:	movw	r0, #1
   25f10:	str	r0, [sp, #8]
   25f14:	b	25f44 <main@@Base+0xfa24>
   25f18:	movw	r0, #1
   25f1c:	str	r0, [sp, #8]
   25f20:	b	25f44 <main@@Base+0xfa24>
   25f24:	movw	r0, #1
   25f28:	str	r0, [sp, #8]
   25f2c:	b	25f44 <main@@Base+0xfa24>
   25f30:	movw	r0, #1
   25f34:	str	r0, [sp, #8]
   25f38:	b	25f44 <main@@Base+0xfa24>
   25f3c:	movw	r0, #0
   25f40:	str	r0, [sp, #8]
   25f44:	ldr	r0, [sp, #8]
   25f48:	add	sp, sp, #12
   25f4c:	bx	lr
   25f50:	push	{fp, lr}
   25f54:	mov	fp, sp
   25f58:	sub	sp, sp, #56	; 0x38
   25f5c:	str	r0, [fp, #-8]
   25f60:	str	r1, [fp, #-12]
   25f64:	str	r2, [fp, #-16]
   25f68:	str	r3, [fp, #-20]	; 0xffffffec
   25f6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25f70:	movw	r1, #0
   25f74:	str	r1, [r0]
   25f78:	ldr	r0, [fp, #-8]
   25f7c:	ldr	r0, [r0]
   25f80:	movw	r1, #1
   25f84:	bl	2baec <flatcc_builder_start_table@@Base>
   25f88:	cmp	r0, #0
   25f8c:	beq	25f94 <main@@Base+0xfa74>
   25f90:	b	26264 <main@@Base+0xfd44>
   25f94:	ldr	r0, [fp, #-8]
   25f98:	ldr	r1, [fp, #-12]
   25f9c:	ldr	r2, [fp, #-16]
   25fa0:	sub	r3, fp, #24
   25fa4:	bl	1bba8 <main@@Base+0x5688>
   25fa8:	str	r0, [fp, #-12]
   25fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25fb0:	cmp	r0, #0
   25fb4:	beq	26224 <main@@Base+0xfd04>
   25fb8:	ldr	r0, [fp, #-8]
   25fbc:	ldr	r1, [fp, #-12]
   25fc0:	ldr	r2, [fp, #-16]
   25fc4:	bl	1bc8c <main@@Base+0x576c>
   25fc8:	str	r0, [fp, #-12]
   25fcc:	ldr	r0, [fp, #-12]
   25fd0:	ldr	r1, [fp, #-16]
   25fd4:	bl	1bd10 <main@@Base+0x57f0>
   25fd8:	str	r1, [sp, #12]
   25fdc:	str	r0, [sp, #8]
   25fe0:	ldr	r0, [sp, #8]
   25fe4:	ldr	r1, [sp, #12]
   25fe8:	movw	r2, #28530	; 0x6f72
   25fec:	movt	r2, #29559	; 0x7377
   25ff0:	eor	r1, r1, r2
   25ff4:	movw	r2, #24948	; 0x6174
   25ff8:	movt	r2, #25695	; 0x645f
   25ffc:	eor	r0, r0, r2
   26000:	orr	r0, r0, r1
   26004:	cmp	r0, #0
   26008:	bne	261f4 <main@@Base+0xfcd4>
   2600c:	b	26010 <main@@Base+0xfaf0>
   26010:	ldr	r0, [fp, #-12]
   26014:	add	r0, r0, #8
   26018:	str	r0, [fp, #-12]
   2601c:	ldr	r0, [fp, #-12]
   26020:	ldr	r1, [fp, #-16]
   26024:	bl	1bd10 <main@@Base+0x57f0>
   26028:	str	r1, [sp, #12]
   2602c:	str	r0, [sp, #8]
   26030:	ldr	r0, [sp, #8]
   26034:	ldr	r1, [sp, #12]
   26038:	movw	lr, #25451	; 0x636b
   2603c:	movt	lr, #29793	; 0x7461
   26040:	eor	r1, r1, lr
   26044:	movw	lr, #24941	; 0x616d
   26048:	movt	lr, #24420	; 0x5f64
   2604c:	eor	r0, r0, lr
   26050:	orr	r0, r0, r1
   26054:	cmp	r0, #0
   26058:	bne	261dc <main@@Base+0xfcbc>
   2605c:	b	26060 <main@@Base+0xfb40>
   26060:	ldr	r0, [fp, #-12]
   26064:	add	r0, r0, #8
   26068:	str	r0, [fp, #-12]
   2606c:	ldr	r0, [fp, #-12]
   26070:	ldr	r1, [fp, #-16]
   26074:	bl	1bd10 <main@@Base+0x57f0>
   26078:	str	r1, [sp, #12]
   2607c:	str	r0, [sp, #8]
   26080:	ldr	r0, [sp, #12]
   26084:	bic	r0, r0, #255	; 0xff
   26088:	movw	r1, #25856	; 0x6500
   2608c:	movt	r1, #24935	; 0x6167
   26090:	teq	r0, r1
   26094:	bne	261c4 <main@@Base+0xfca4>
   26098:	b	2609c <main@@Base+0xfb7c>
   2609c:	ldr	r0, [fp, #-8]
   260a0:	ldr	r1, [fp, #-12]
   260a4:	str	r1, [sp, #16]
   260a8:	ldr	r2, [fp, #-16]
   260ac:	movw	r3, #3
   260b0:	bl	1bd48 <main@@Base+0x5828>
   260b4:	str	r0, [fp, #-12]
   260b8:	ldr	r0, [sp, #16]
   260bc:	ldr	r1, [fp, #-12]
   260c0:	cmp	r0, r1
   260c4:	beq	261ac <main@@Base+0xfc8c>
   260c8:	movw	r0, #0
   260cc:	str	r0, [sp, #4]
   260d0:	ldr	r0, [fp, #-8]
   260d4:	ldr	r1, [fp, #-12]
   260d8:	str	r1, [sp, #16]
   260dc:	ldr	r2, [fp, #-16]
   260e0:	add	r3, sp, #4
   260e4:	bl	1ff60 <main@@Base+0x9a40>
   260e8:	str	r0, [fp, #-12]
   260ec:	ldr	r0, [sp, #16]
   260f0:	ldr	r1, [fp, #-12]
   260f4:	cmp	r0, r1
   260f8:	bne	2614c <main@@Base+0xfc2c>
   260fc:	ldr	r0, [pc, #388]	; 26288 <main@@Base+0xfd68>
   26100:	add	r3, pc, r0
   26104:	ldr	r0, [fp, #-8]
   26108:	ldr	r1, [fp, #-12]
   2610c:	str	r1, [sp, #16]
   26110:	ldr	r2, [fp, #-16]
   26114:	add	ip, sp, #4
   26118:	str	ip, [sp]
   2611c:	bl	20038 <main@@Base+0x9b18>
   26120:	str	r0, [fp, #-12]
   26124:	ldr	r0, [fp, #-12]
   26128:	ldr	r1, [sp, #16]
   2612c:	cmp	r0, r1
   26130:	beq	26144 <main@@Base+0xfc24>
   26134:	ldr	r0, [fp, #-12]
   26138:	ldr	r1, [fp, #-16]
   2613c:	cmp	r0, r1
   26140:	bne	26148 <main@@Base+0xfc28>
   26144:	b	26264 <main@@Base+0xfd44>
   26148:	b	2614c <main@@Base+0xfc2c>
   2614c:	ldr	r0, [sp, #4]
   26150:	cmp	r0, #0
   26154:	bne	2616c <main@@Base+0xfc4c>
   26158:	ldr	r0, [fp, #-8]
   2615c:	ldr	r0, [r0, #8]
   26160:	and	r0, r0, #2
   26164:	cmp	r0, #0
   26168:	beq	261a8 <main@@Base+0xfc88>
   2616c:	ldr	r0, [fp, #-8]
   26170:	ldr	r0, [r0]
   26174:	movw	r1, #0
   26178:	movw	r2, #4
   2617c:	movw	r3, #4
   26180:	uxth	r3, r3
   26184:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   26188:	str	r0, [sp, #28]
   2618c:	movw	r1, #0
   26190:	cmp	r0, r1
   26194:	bne	2619c <main@@Base+0xfc7c>
   26198:	b	26264 <main@@Base+0xfd44>
   2619c:	ldr	r0, [sp, #28]
   261a0:	ldr	r1, [sp, #4]
   261a4:	bl	2021c <main@@Base+0x9cfc>
   261a8:	b	261c0 <main@@Base+0xfca0>
   261ac:	ldr	r0, [fp, #-8]
   261b0:	ldr	r1, [fp, #-12]
   261b4:	ldr	r2, [fp, #-16]
   261b8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   261bc:	str	r0, [fp, #-12]
   261c0:	b	261d8 <main@@Base+0xfcb8>
   261c4:	ldr	r0, [fp, #-8]
   261c8:	ldr	r1, [fp, #-12]
   261cc:	ldr	r2, [fp, #-16]
   261d0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   261d4:	str	r0, [fp, #-12]
   261d8:	b	261f0 <main@@Base+0xfcd0>
   261dc:	ldr	r0, [fp, #-8]
   261e0:	ldr	r1, [fp, #-12]
   261e4:	ldr	r2, [fp, #-16]
   261e8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   261ec:	str	r0, [fp, #-12]
   261f0:	b	26208 <main@@Base+0xfce8>
   261f4:	ldr	r0, [fp, #-8]
   261f8:	ldr	r1, [fp, #-12]
   261fc:	ldr	r2, [fp, #-16]
   26200:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   26204:	str	r0, [fp, #-12]
   26208:	ldr	r0, [fp, #-8]
   2620c:	ldr	r1, [fp, #-12]
   26210:	ldr	r2, [fp, #-16]
   26214:	sub	r3, fp, #24
   26218:	bl	20d64 <main@@Base+0xa844>
   2621c:	str	r0, [fp, #-12]
   26220:	b	25fac <main@@Base+0xfa8c>
   26224:	ldr	r0, [fp, #-8]
   26228:	ldr	r0, [r0, #20]
   2622c:	cmp	r0, #0
   26230:	beq	26238 <main@@Base+0xfd18>
   26234:	b	26264 <main@@Base+0xfd44>
   26238:	ldr	r0, [fp, #-8]
   2623c:	ldr	r0, [r0]
   26240:	bl	2c764 <flatcc_builder_end_table@@Base>
   26244:	ldr	lr, [fp, #-20]	; 0xffffffec
   26248:	str	r0, [lr]
   2624c:	cmp	r0, #0
   26250:	bne	26258 <main@@Base+0xfd38>
   26254:	b	26264 <main@@Base+0xfd44>
   26258:	ldr	r0, [fp, #-12]
   2625c:	str	r0, [fp, #-4]
   26260:	b	2627c <main@@Base+0xfd5c>
   26264:	ldr	r0, [fp, #-8]
   26268:	ldr	r1, [fp, #-12]
   2626c:	ldr	r2, [fp, #-16]
   26270:	movw	r3, #33	; 0x21
   26274:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26278:	str	r0, [fp, #-4]
   2627c:	ldr	r0, [fp, #-4]
   26280:	mov	sp, fp
   26284:	pop	{fp, pc}
   26288:	strdeq	r7, [r3], -r8
   2628c:	push	{fp, lr}
   26290:	mov	fp, sp
   26294:	sub	sp, sp, #24
   26298:	str	r0, [fp, #-8]
   2629c:	str	r1, [sp, #12]
   262a0:	str	r2, [sp, #8]
   262a4:	str	r3, [sp, #4]
   262a8:	ldr	r0, [sp, #4]
   262ac:	movw	r1, #0
   262b0:	str	r1, [r0]
   262b4:	ldr	r0, [fp, #-8]
   262b8:	ldr	r0, [r0]
   262bc:	movw	r1, #2
   262c0:	movw	r2, #2
   262c4:	uxth	r2, r2
   262c8:	bl	2a928 <flatcc_builder_start_struct@@Base>
   262cc:	str	r0, [sp]
   262d0:	movw	r1, #0
   262d4:	cmp	r0, r1
   262d8:	bne	262e0 <main@@Base+0xfdc0>
   262dc:	b	26334 <main@@Base+0xfe14>
   262e0:	ldr	r0, [fp, #-8]
   262e4:	ldr	r1, [sp, #12]
   262e8:	ldr	r2, [sp, #8]
   262ec:	ldr	r3, [sp]
   262f0:	bl	26424 <main@@Base+0xff04>
   262f4:	str	r0, [sp, #12]
   262f8:	ldr	r0, [sp, #12]
   262fc:	ldr	r1, [sp, #8]
   26300:	cmp	r0, r1
   26304:	beq	26324 <main@@Base+0xfe04>
   26308:	ldr	r0, [fp, #-8]
   2630c:	ldr	r0, [r0]
   26310:	bl	2aad0 <flatcc_builder_end_struct@@Base>
   26314:	ldr	lr, [sp, #4]
   26318:	str	r0, [lr]
   2631c:	cmp	r0, #0
   26320:	bne	26328 <main@@Base+0xfe08>
   26324:	b	26334 <main@@Base+0xfe14>
   26328:	ldr	r0, [sp, #12]
   2632c:	str	r0, [fp, #-4]
   26330:	b	2634c <main@@Base+0xfe2c>
   26334:	ldr	r0, [fp, #-8]
   26338:	ldr	r1, [sp, #12]
   2633c:	ldr	r2, [sp, #8]
   26340:	movw	r3, #33	; 0x21
   26344:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26348:	str	r0, [fp, #-4]
   2634c:	ldr	r0, [fp, #-4]
   26350:	mov	sp, fp
   26354:	pop	{fp, pc}
   26358:	push	{fp, lr}
   2635c:	mov	fp, sp
   26360:	sub	sp, sp, #24
   26364:	str	r0, [fp, #-8]
   26368:	str	r1, [sp, #12]
   2636c:	str	r2, [sp, #8]
   26370:	str	r3, [sp, #4]
   26374:	ldr	r0, [sp, #4]
   26378:	movw	r1, #0
   2637c:	str	r1, [r0]
   26380:	ldr	r0, [fp, #-8]
   26384:	ldr	r0, [r0]
   26388:	movw	r1, #4
   2638c:	movw	r2, #4
   26390:	uxth	r2, r2
   26394:	bl	2a928 <flatcc_builder_start_struct@@Base>
   26398:	str	r0, [sp]
   2639c:	movw	r1, #0
   263a0:	cmp	r0, r1
   263a4:	bne	263ac <main@@Base+0xfe8c>
   263a8:	b	26400 <main@@Base+0xfee0>
   263ac:	ldr	r0, [fp, #-8]
   263b0:	ldr	r1, [sp, #12]
   263b4:	ldr	r2, [sp, #8]
   263b8:	ldr	r3, [sp]
   263bc:	bl	26a10 <main@@Base+0x104f0>
   263c0:	str	r0, [sp, #12]
   263c4:	ldr	r0, [sp, #12]
   263c8:	ldr	r1, [sp, #8]
   263cc:	cmp	r0, r1
   263d0:	beq	263f0 <main@@Base+0xfed0>
   263d4:	ldr	r0, [fp, #-8]
   263d8:	ldr	r0, [r0]
   263dc:	bl	2aad0 <flatcc_builder_end_struct@@Base>
   263e0:	ldr	lr, [sp, #4]
   263e4:	str	r0, [lr]
   263e8:	cmp	r0, #0
   263ec:	bne	263f4 <main@@Base+0xfed4>
   263f0:	b	26400 <main@@Base+0xfee0>
   263f4:	ldr	r0, [sp, #12]
   263f8:	str	r0, [fp, #-4]
   263fc:	b	26418 <main@@Base+0xfef8>
   26400:	ldr	r0, [fp, #-8]
   26404:	ldr	r1, [sp, #12]
   26408:	ldr	r2, [sp, #8]
   2640c:	movw	r3, #33	; 0x21
   26410:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26414:	str	r0, [fp, #-4]
   26418:	ldr	r0, [fp, #-4]
   2641c:	mov	sp, fp
   26420:	pop	{fp, pc}
   26424:	push	{fp, lr}
   26428:	mov	fp, sp
   2642c:	sub	sp, sp, #56	; 0x38
   26430:	str	r0, [fp, #-8]
   26434:	str	r1, [fp, #-12]
   26438:	str	r2, [fp, #-16]
   2643c:	str	r3, [fp, #-20]	; 0xffffffec
   26440:	ldr	r0, [fp, #-8]
   26444:	ldr	r1, [fp, #-12]
   26448:	ldr	r2, [fp, #-16]
   2644c:	sub	r3, fp, #24
   26450:	bl	1bba8 <main@@Base+0x5688>
   26454:	str	r0, [fp, #-12]
   26458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2645c:	cmp	r0, #0
   26460:	beq	26624 <main@@Base+0x10104>
   26464:	ldr	r0, [fp, #-8]
   26468:	ldr	r1, [fp, #-12]
   2646c:	ldr	r2, [fp, #-16]
   26470:	bl	1bc8c <main@@Base+0x576c>
   26474:	str	r0, [fp, #-12]
   26478:	ldr	r0, [fp, #-12]
   2647c:	ldr	r1, [fp, #-16]
   26480:	bl	1bd10 <main@@Base+0x57f0>
   26484:	str	r1, [sp, #12]
   26488:	str	r0, [sp, #8]
   2648c:	ldr	r0, [sp, #8]
   26490:	ldr	r1, [sp, #12]
   26494:	movw	r2, #26994	; 0x6972
   26498:	movt	r2, #26721	; 0x6861
   2649c:	eor	r1, r1, r2
   264a0:	movw	r2, #25966	; 0x656e
   264a4:	movt	r2, #24428	; 0x5f6c
   264a8:	eor	r0, r0, r2
   264ac:	orr	r0, r0, r1
   264b0:	cmp	r0, #0
   264b4:	bne	265f4 <main@@Base+0x100d4>
   264b8:	b	264bc <main@@Base+0xff9c>
   264bc:	ldr	r0, [fp, #-12]
   264c0:	add	r0, r0, #8
   264c4:	str	r0, [fp, #-12]
   264c8:	ldr	r0, [fp, #-12]
   264cc:	ldr	r1, [fp, #-16]
   264d0:	bl	1bd10 <main@@Base+0x57f0>
   264d4:	str	r1, [sp, #12]
   264d8:	str	r0, [sp, #8]
   264dc:	ldr	r0, [sp, #12]
   264e0:	bic	r0, r0, #255	; 0xff
   264e4:	movw	r1, #26624	; 0x6800
   264e8:	movt	r1, #26484	; 0x6774
   264ec:	teq	r0, r1
   264f0:	bne	265dc <main@@Base+0x100bc>
   264f4:	b	264f8 <main@@Base+0xffd8>
   264f8:	ldr	r0, [fp, #-8]
   264fc:	ldr	r1, [fp, #-12]
   26500:	str	r1, [sp, #20]
   26504:	ldr	r2, [fp, #-16]
   26508:	movw	r3, #3
   2650c:	bl	1bd48 <main@@Base+0x5828>
   26510:	str	r0, [fp, #-12]
   26514:	ldr	r0, [sp, #20]
   26518:	ldr	r1, [fp, #-12]
   2651c:	cmp	r0, r1
   26520:	beq	265c4 <main@@Base+0x100a4>
   26524:	movw	r0, #0
   26528:	strh	r0, [sp, #6]
   2652c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26530:	add	r0, r0, #0
   26534:	str	r0, [sp, #24]
   26538:	ldr	r0, [fp, #-8]
   2653c:	ldr	r1, [fp, #-12]
   26540:	str	r1, [sp, #20]
   26544:	ldr	r2, [fp, #-16]
   26548:	add	r3, sp, #6
   2654c:	bl	26658 <main@@Base+0x10138>
   26550:	str	r0, [fp, #-12]
   26554:	ldr	r0, [sp, #20]
   26558:	ldr	r1, [fp, #-12]
   2655c:	cmp	r0, r1
   26560:	bne	265b4 <main@@Base+0x10094>
   26564:	ldr	r0, [pc, #232]	; 26654 <main@@Base+0x10134>
   26568:	add	r3, pc, r0
   2656c:	ldr	r0, [fp, #-8]
   26570:	ldr	r1, [fp, #-12]
   26574:	str	r1, [sp, #20]
   26578:	ldr	r2, [fp, #-16]
   2657c:	add	ip, sp, #6
   26580:	str	ip, [sp]
   26584:	bl	26734 <main@@Base+0x10214>
   26588:	str	r0, [fp, #-12]
   2658c:	ldr	r0, [fp, #-12]
   26590:	ldr	r1, [sp, #20]
   26594:	cmp	r0, r1
   26598:	beq	265ac <main@@Base+0x1008c>
   2659c:	ldr	r0, [fp, #-12]
   265a0:	ldr	r1, [fp, #-16]
   265a4:	cmp	r0, r1
   265a8:	bne	265b0 <main@@Base+0x10090>
   265ac:	b	26630 <main@@Base+0x10110>
   265b0:	b	265b4 <main@@Base+0x10094>
   265b4:	ldr	r0, [sp, #24]
   265b8:	ldrh	r1, [sp, #6]
   265bc:	bl	26918 <main@@Base+0x103f8>
   265c0:	b	265d8 <main@@Base+0x100b8>
   265c4:	ldr	r0, [fp, #-8]
   265c8:	ldr	r1, [fp, #-12]
   265cc:	ldr	r2, [fp, #-16]
   265d0:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   265d4:	str	r0, [fp, #-12]
   265d8:	b	265f0 <main@@Base+0x100d0>
   265dc:	ldr	r0, [fp, #-8]
   265e0:	ldr	r1, [fp, #-12]
   265e4:	ldr	r2, [fp, #-16]
   265e8:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   265ec:	str	r0, [fp, #-12]
   265f0:	b	26608 <main@@Base+0x100e8>
   265f4:	ldr	r0, [fp, #-8]
   265f8:	ldr	r1, [fp, #-12]
   265fc:	ldr	r2, [fp, #-16]
   26600:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   26604:	str	r0, [fp, #-12]
   26608:	ldr	r0, [fp, #-8]
   2660c:	ldr	r1, [fp, #-12]
   26610:	ldr	r2, [fp, #-16]
   26614:	sub	r3, fp, #24
   26618:	bl	20d64 <main@@Base+0xa844>
   2661c:	str	r0, [fp, #-12]
   26620:	b	26458 <main@@Base+0xff38>
   26624:	ldr	r0, [fp, #-12]
   26628:	str	r0, [fp, #-4]
   2662c:	b	26648 <main@@Base+0x10128>
   26630:	ldr	r0, [fp, #-8]
   26634:	ldr	r1, [fp, #-12]
   26638:	ldr	r2, [fp, #-16]
   2663c:	movw	r3, #33	; 0x21
   26640:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26644:	str	r0, [fp, #-4]
   26648:	ldr	r0, [fp, #-4]
   2664c:	mov	sp, fp
   26650:	pop	{fp, pc}
   26654:	muleq	r3, ip, sp
   26658:	push	{r4, r5, fp, lr}
   2665c:	add	fp, sp, #8
   26660:	sub	sp, sp, #56	; 0x38
   26664:	str	r0, [fp, #-16]
   26668:	str	r1, [fp, #-20]	; 0xffffffec
   2666c:	str	r2, [fp, #-24]	; 0xffffffe8
   26670:	str	r3, [fp, #-28]	; 0xffffffe4
   26674:	mov	r0, #0
   26678:	str	r0, [sp, #28]
   2667c:	str	r0, [sp, #24]
   26680:	movw	r0, #0
   26684:	str	r0, [sp, #20]
   26688:	ldr	r0, [fp, #-20]	; 0xffffffec
   2668c:	str	r0, [sp, #16]
   26690:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26694:	movw	r1, #0
   26698:	strh	r1, [r0]
   2669c:	ldr	r0, [fp, #-20]	; 0xffffffec
   266a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   266a4:	cmp	r0, r1
   266a8:	bne	266b8 <main@@Base+0x10198>
   266ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   266b0:	str	r0, [fp, #-12]
   266b4:	b	26728 <main@@Base+0x10208>
   266b8:	ldr	r0, [fp, #-16]
   266bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   266c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   266c4:	add	r3, sp, #20
   266c8:	add	ip, sp, #24
   266cc:	str	ip, [sp]
   266d0:	bl	35a5c <flatcc_json_parser_integer@@Base>
   266d4:	str	r0, [fp, #-20]	; 0xffffffec
   266d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   266dc:	ldr	r1, [sp, #16]
   266e0:	cmp	r0, r1
   266e4:	beq	26720 <main@@Base+0x10200>
   266e8:	ldr	r0, [fp, #-16]
   266ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   266f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   266f4:	ldr	r3, [sp, #20]
   266f8:	ldr	ip, [sp, #24]
   266fc:	ldr	lr, [sp, #28]
   26700:	ldr	r4, [fp, #-28]	; 0xffffffe4
   26704:	mov	r5, sp
   26708:	str	r4, [r5, #8]
   2670c:	str	lr, [r5, #4]
   26710:	str	ip, [r5]
   26714:	bl	26944 <main@@Base+0x10424>
   26718:	str	r0, [fp, #-12]
   2671c:	b	26728 <main@@Base+0x10208>
   26720:	ldr	r0, [fp, #-20]	; 0xffffffec
   26724:	str	r0, [fp, #-12]
   26728:	ldr	r0, [fp, #-12]
   2672c:	sub	sp, fp, #8
   26730:	pop	{r4, r5, fp, pc}
   26734:	push	{r4, r5, r6, sl, fp, lr}
   26738:	add	fp, sp, #16
   2673c:	sub	sp, sp, #80	; 0x50
   26740:	ldr	ip, [fp, #8]
   26744:	str	r0, [fp, #-24]	; 0xffffffe8
   26748:	str	r1, [fp, #-28]	; 0xffffffe4
   2674c:	str	r2, [fp, #-32]	; 0xffffffe0
   26750:	str	r3, [fp, #-36]	; 0xffffffdc
   26754:	movw	r0, #0
   26758:	strh	r0, [fp, #-46]	; 0xffffffd2
   2675c:	ldr	r1, [fp, #8]
   26760:	strh	r0, [r1]
   26764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26768:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2676c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26770:	str	ip, [sp, #28]
   26774:	bl	224ec <main@@Base+0xbfcc>
   26778:	str	r0, [fp, #-28]	; 0xffffffe4
   2677c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26780:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26784:	cmp	r0, r1
   26788:	bne	26798 <main@@Base+0x10278>
   2678c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26790:	str	r0, [fp, #-20]	; 0xffffffec
   26794:	b	2690c <main@@Base+0x103ec>
   26798:	b	2679c <main@@Base+0x1027c>
   2679c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   267a0:	str	r0, [fp, #-40]	; 0xffffffd8
   267a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   267a8:	ldr	r0, [r0]
   267ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   267b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   267b4:	str	r2, [fp, #-44]	; 0xffffffd4
   267b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   267bc:	str	r0, [sp, #24]
   267c0:	mov	r0, r1
   267c4:	mov	r1, r2
   267c8:	mov	r2, r3
   267cc:	add	r3, sp, #36	; 0x24
   267d0:	add	ip, sp, #40	; 0x28
   267d4:	str	ip, [sp]
   267d8:	add	ip, sp, #32
   267dc:	str	ip, [sp, #4]
   267e0:	ldr	ip, [sp, #24]
   267e4:	blx	ip
   267e8:	str	r0, [fp, #-28]	; 0xffffffe4
   267ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   267f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   267f4:	cmp	r0, r1
   267f8:	bne	26808 <main@@Base+0x102e8>
   267fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26800:	str	r0, [fp, #-20]	; 0xffffffec
   26804:	b	2690c <main@@Base+0x103ec>
   26808:	b	2680c <main@@Base+0x102ec>
   2680c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26810:	ldr	r1, [fp, #-44]	; 0xffffffd4
   26814:	cmp	r0, r1
   26818:	movw	r0, #0
   2681c:	str	r0, [sp, #20]
   26820:	bne	26848 <main@@Base+0x10328>
   26824:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26828:	add	r1, r0, #4
   2682c:	str	r1, [fp, #-40]	; 0xffffffd8
   26830:	ldr	r0, [r0, #4]
   26834:	movw	r1, #0
   26838:	cmp	r0, r1
   2683c:	movw	r0, #0
   26840:	movne	r0, #1
   26844:	str	r0, [sp, #20]
   26848:	ldr	r0, [sp, #20]
   2684c:	tst	r0, #1
   26850:	bne	267a4 <main@@Base+0x10284>
   26854:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26858:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2685c:	cmp	r0, r1
   26860:	bne	26880 <main@@Base+0x10360>
   26864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26868:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2686c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26870:	movw	r3, #23
   26874:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26878:	str	r0, [fp, #-20]	; 0xffffffec
   2687c:	b	2690c <main@@Base+0x103ec>
   26880:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26884:	mov	r1, r0
   26888:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2688c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26890:	ldr	ip, [sp, #36]	; 0x24
   26894:	ldr	lr, [sp, #40]	; 0x28
   26898:	ldr	r4, [sp, #44]	; 0x2c
   2689c:	mov	r5, sp
   268a0:	sub	r6, fp, #46	; 0x2e
   268a4:	str	r6, [r5, #8]
   268a8:	str	r4, [r5, #4]
   268ac:	str	lr, [r5]
   268b0:	str	r0, [sp, #16]
   268b4:	mov	r0, r2
   268b8:	str	r1, [sp, #12]
   268bc:	mov	r1, r3
   268c0:	ldr	r2, [sp, #16]
   268c4:	mov	r3, ip
   268c8:	bl	26944 <main@@Base+0x10424>
   268cc:	ldr	r1, [sp, #12]
   268d0:	cmp	r1, r0
   268d4:	bne	268e4 <main@@Base+0x103c4>
   268d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   268dc:	str	r0, [fp, #-20]	; 0xffffffec
   268e0:	b	2690c <main@@Base+0x103ec>
   268e4:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   268e8:	ldr	r1, [fp, #8]
   268ec:	ldrh	r2, [r1]
   268f0:	add	r0, r2, r0
   268f4:	strh	r0, [r1]
   268f8:	ldr	r0, [sp, #32]
   268fc:	cmp	r0, #0
   26900:	bne	2679c <main@@Base+0x1027c>
   26904:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26908:	str	r0, [fp, #-20]	; 0xffffffec
   2690c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26910:	sub	sp, fp, #16
   26914:	pop	{r4, r5, r6, sl, fp, pc}
   26918:	push	{fp, lr}
   2691c:	mov	fp, sp
   26920:	sub	sp, sp, #8
   26924:	str	r0, [sp, #4]
   26928:	strh	r1, [sp, #2]
   2692c:	ldrh	r0, [sp, #2]
   26930:	bl	269fc <main@@Base+0x104dc>
   26934:	ldr	r1, [sp, #4]
   26938:	strh	r0, [r1]
   2693c:	mov	sp, fp
   26940:	pop	{fp, pc}
   26944:	push	{r4, sl, fp, lr}
   26948:	add	fp, sp, #8
   2694c:	sub	sp, sp, #48	; 0x30
   26950:	ldr	ip, [fp, #12]
   26954:	ldr	lr, [fp, #8]
   26958:	ldr	r4, [fp, #16]
   2695c:	str	r0, [fp, #-16]
   26960:	str	r1, [fp, #-20]	; 0xffffffec
   26964:	str	r2, [fp, #-24]	; 0xffffffe8
   26968:	str	r3, [sp, #28]
   2696c:	str	ip, [sp, #20]
   26970:	str	lr, [sp, #16]
   26974:	ldr	r0, [sp, #28]
   26978:	cmp	r0, #0
   2697c:	str	r4, [sp, #12]
   26980:	beq	269a0 <main@@Base+0x10480>
   26984:	ldr	r0, [fp, #-16]
   26988:	ldr	r1, [fp, #-20]	; 0xffffffec
   2698c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26990:	movw	r3, #8
   26994:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26998:	str	r0, [fp, #-12]
   2699c:	b	269f0 <main@@Base+0x104d0>
   269a0:	ldr	r0, [sp, #16]
   269a4:	ldr	r1, [sp, #20]
   269a8:	subs	r0, r0, #65536	; 0x10000
   269ac:	sbcs	r1, r1, #0
   269b0:	str	r0, [sp, #8]
   269b4:	str	r1, [sp, #4]
   269b8:	bcc	269dc <main@@Base+0x104bc>
   269bc:	b	269c0 <main@@Base+0x104a0>
   269c0:	ldr	r0, [fp, #-16]
   269c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   269c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   269cc:	movw	r3, #7
   269d0:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   269d4:	str	r0, [fp, #-12]
   269d8:	b	269f0 <main@@Base+0x104d0>
   269dc:	ldrh	r0, [sp, #16]
   269e0:	ldr	r1, [fp, #16]
   269e4:	strh	r0, [r1]
   269e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   269ec:	str	r0, [fp, #-12]
   269f0:	ldr	r0, [fp, #-12]
   269f4:	sub	sp, fp, #8
   269f8:	pop	{r4, sl, fp, pc}
   269fc:	sub	sp, sp, #4
   26a00:	strh	r0, [sp, #2]
   26a04:	ldrh	r0, [sp, #2]
   26a08:	add	sp, sp, #4
   26a0c:	bx	lr
   26a10:	push	{fp, lr}
   26a14:	mov	fp, sp
   26a18:	sub	sp, sp, #56	; 0x38
   26a1c:	str	r0, [fp, #-8]
   26a20:	str	r1, [fp, #-12]
   26a24:	str	r2, [fp, #-16]
   26a28:	str	r3, [fp, #-20]	; 0xffffffec
   26a2c:	ldr	r0, [fp, #-8]
   26a30:	ldr	r1, [fp, #-12]
   26a34:	ldr	r2, [fp, #-16]
   26a38:	sub	r3, fp, #24
   26a3c:	bl	1bba8 <main@@Base+0x5688>
   26a40:	str	r0, [fp, #-12]
   26a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26a48:	cmp	r0, #0
   26a4c:	beq	26c10 <main@@Base+0x106f0>
   26a50:	ldr	r0, [fp, #-8]
   26a54:	ldr	r1, [fp, #-12]
   26a58:	ldr	r2, [fp, #-16]
   26a5c:	bl	1bc8c <main@@Base+0x576c>
   26a60:	str	r0, [fp, #-12]
   26a64:	ldr	r0, [fp, #-12]
   26a68:	ldr	r1, [fp, #-16]
   26a6c:	bl	1bd10 <main@@Base+0x57f0>
   26a70:	str	r1, [sp, #12]
   26a74:	str	r0, [sp, #8]
   26a78:	ldr	r0, [sp, #8]
   26a7c:	ldr	r1, [sp, #12]
   26a80:	movw	r2, #28523	; 0x6f6b
   26a84:	movt	r2, #25199	; 0x626f
   26a88:	eor	r1, r1, r2
   26a8c:	movw	r2, #29285	; 0x7265
   26a90:	movt	r2, #29535	; 0x735f
   26a94:	eor	r0, r0, r2
   26a98:	orr	r0, r0, r1
   26a9c:	cmp	r0, #0
   26aa0:	bne	26be0 <main@@Base+0x106c0>
   26aa4:	b	26aa8 <main@@Base+0x10588>
   26aa8:	ldr	r0, [fp, #-12]
   26aac:	add	r0, r0, #8
   26ab0:	str	r0, [fp, #-12]
   26ab4:	ldr	r0, [fp, #-12]
   26ab8:	ldr	r1, [fp, #-16]
   26abc:	bl	1bd10 <main@@Base+0x57f0>
   26ac0:	str	r1, [sp, #12]
   26ac4:	str	r0, [sp, #8]
   26ac8:	ldr	r0, [sp, #12]
   26acc:	bfc	r0, #0, #16
   26ad0:	movw	r1, #0
   26ad4:	movt	r1, #24932	; 0x6164
   26ad8:	teq	r0, r1
   26adc:	bne	26bc8 <main@@Base+0x106a8>
   26ae0:	b	26ae4 <main@@Base+0x105c4>
   26ae4:	ldr	r0, [fp, #-8]
   26ae8:	ldr	r1, [fp, #-12]
   26aec:	str	r1, [sp, #20]
   26af0:	ldr	r2, [fp, #-16]
   26af4:	movw	r3, #2
   26af8:	bl	1bd48 <main@@Base+0x5828>
   26afc:	str	r0, [fp, #-12]
   26b00:	ldr	r0, [sp, #20]
   26b04:	ldr	r1, [fp, #-12]
   26b08:	cmp	r0, r1
   26b0c:	beq	26bb0 <main@@Base+0x10690>
   26b10:	movw	r0, #0
   26b14:	str	r0, [sp, #4]
   26b18:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b1c:	add	r0, r0, #0
   26b20:	str	r0, [sp, #24]
   26b24:	ldr	r0, [fp, #-8]
   26b28:	ldr	r1, [fp, #-12]
   26b2c:	str	r1, [sp, #20]
   26b30:	ldr	r2, [fp, #-16]
   26b34:	add	r3, sp, #4
   26b38:	bl	1ff60 <main@@Base+0x9a40>
   26b3c:	str	r0, [fp, #-12]
   26b40:	ldr	r0, [sp, #20]
   26b44:	ldr	r1, [fp, #-12]
   26b48:	cmp	r0, r1
   26b4c:	bne	26ba0 <main@@Base+0x10680>
   26b50:	ldr	r0, [pc, #232]	; 26c40 <main@@Base+0x10720>
   26b54:	add	r3, pc, r0
   26b58:	ldr	r0, [fp, #-8]
   26b5c:	ldr	r1, [fp, #-12]
   26b60:	str	r1, [sp, #20]
   26b64:	ldr	r2, [fp, #-16]
   26b68:	add	ip, sp, #4
   26b6c:	str	ip, [sp]
   26b70:	bl	20038 <main@@Base+0x9b18>
   26b74:	str	r0, [fp, #-12]
   26b78:	ldr	r0, [fp, #-12]
   26b7c:	ldr	r1, [sp, #20]
   26b80:	cmp	r0, r1
   26b84:	beq	26b98 <main@@Base+0x10678>
   26b88:	ldr	r0, [fp, #-12]
   26b8c:	ldr	r1, [fp, #-16]
   26b90:	cmp	r0, r1
   26b94:	bne	26b9c <main@@Base+0x1067c>
   26b98:	b	26c1c <main@@Base+0x106fc>
   26b9c:	b	26ba0 <main@@Base+0x10680>
   26ba0:	ldr	r0, [sp, #24]
   26ba4:	ldr	r1, [sp, #4]
   26ba8:	bl	2021c <main@@Base+0x9cfc>
   26bac:	b	26bc4 <main@@Base+0x106a4>
   26bb0:	ldr	r0, [fp, #-8]
   26bb4:	ldr	r1, [fp, #-12]
   26bb8:	ldr	r2, [fp, #-16]
   26bbc:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   26bc0:	str	r0, [fp, #-12]
   26bc4:	b	26bdc <main@@Base+0x106bc>
   26bc8:	ldr	r0, [fp, #-8]
   26bcc:	ldr	r1, [fp, #-12]
   26bd0:	ldr	r2, [fp, #-16]
   26bd4:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   26bd8:	str	r0, [fp, #-12]
   26bdc:	b	26bf4 <main@@Base+0x106d4>
   26be0:	ldr	r0, [fp, #-8]
   26be4:	ldr	r1, [fp, #-12]
   26be8:	ldr	r2, [fp, #-16]
   26bec:	bl	343f4 <flatcc_json_parser_unmatched_symbol@@Base>
   26bf0:	str	r0, [fp, #-12]
   26bf4:	ldr	r0, [fp, #-8]
   26bf8:	ldr	r1, [fp, #-12]
   26bfc:	ldr	r2, [fp, #-16]
   26c00:	sub	r3, fp, #24
   26c04:	bl	20d64 <main@@Base+0xa844>
   26c08:	str	r0, [fp, #-12]
   26c0c:	b	26a44 <main@@Base+0x10524>
   26c10:	ldr	r0, [fp, #-12]
   26c14:	str	r0, [fp, #-4]
   26c18:	b	26c34 <main@@Base+0x10714>
   26c1c:	ldr	r0, [fp, #-8]
   26c20:	ldr	r1, [fp, #-12]
   26c24:	ldr	r2, [fp, #-16]
   26c28:	movw	r3, #33	; 0x21
   26c2c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26c30:	str	r0, [fp, #-4]
   26c34:	ldr	r0, [fp, #-4]
   26c38:	mov	sp, fp
   26c3c:	pop	{fp, pc}
   26c40:			; <UNDEFINED> instruction: 0x000367bc
   26c44:	push	{r4, sl, fp, lr}
   26c48:	add	fp, sp, #8
   26c4c:	sub	sp, sp, #40	; 0x28
   26c50:	ldr	ip, [fp, #12]
   26c54:	ldr	lr, [fp, #8]
   26c58:	ldr	r4, [fp, #16]
   26c5c:	str	r0, [fp, #-16]
   26c60:	str	r1, [fp, #-20]	; 0xffffffec
   26c64:	str	r2, [sp, #24]
   26c68:	str	r3, [sp, #20]
   26c6c:	str	ip, [sp, #12]
   26c70:	str	lr, [sp, #8]
   26c74:	ldr	r0, [sp, #20]
   26c78:	cmp	r0, #0
   26c7c:	str	r4, [sp, #4]
   26c80:	beq	26ca0 <main@@Base+0x10780>
   26c84:	ldr	r0, [fp, #-16]
   26c88:	ldr	r1, [fp, #-20]	; 0xffffffec
   26c8c:	ldr	r2, [sp, #24]
   26c90:	movw	r3, #8
   26c94:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26c98:	str	r0, [fp, #-12]
   26c9c:	b	26cd4 <main@@Base+0x107b4>
   26ca0:	ldr	r0, [sp, #8]
   26ca4:	ldr	r1, [sp, #12]
   26ca8:	orr	r0, r0, r1
   26cac:	cmp	r0, #0
   26cb0:	movwne	r0, #1
   26cb4:	mvn	r1, #0
   26cb8:	eor	r0, r0, r1
   26cbc:	eor	r0, r0, r1
   26cc0:	and	r0, r0, #1
   26cc4:	ldr	r1, [fp, #16]
   26cc8:	strb	r0, [r1]
   26ccc:	ldr	r0, [fp, #-20]	; 0xffffffec
   26cd0:	str	r0, [fp, #-12]
   26cd4:	ldr	r0, [fp, #-12]
   26cd8:	sub	sp, fp, #8
   26cdc:	pop	{r4, sl, fp, pc}
   26ce0:	sub	sp, sp, #4
   26ce4:	strb	r0, [sp, #3]
   26ce8:	ldrb	r0, [sp, #3]
   26cec:	add	sp, sp, #4
   26cf0:	bx	lr
   26cf4:	push	{r4, sl, fp, lr}
   26cf8:	add	fp, sp, #8
   26cfc:	sub	sp, sp, #32
   26d00:	ldr	ip, [fp, #12]
   26d04:	ldr	lr, [fp, #8]
   26d08:	ldr	r4, [fp, #16]
   26d0c:	str	r0, [fp, #-12]
   26d10:	str	r1, [fp, #-16]
   26d14:	str	r2, [sp, #20]
   26d18:	str	r3, [sp, #16]
   26d1c:	str	ip, [sp, #12]
   26d20:	str	lr, [sp, #8]
   26d24:	ldr	r0, [sp, #16]
   26d28:	cmp	r0, #0
   26d2c:	str	r4, [sp, #4]
   26d30:	beq	26d50 <main@@Base+0x10830>
   26d34:	ldr	r0, [sp, #8]
   26d38:	ldr	r1, [sp, #12]
   26d3c:	bl	46648 <flatcc_json_printer_clear@@Base+0x2314>
   26d40:	vmov	s0, r0
   26d44:	vneg.f32	s0, s0
   26d48:	vstr	s0, [sp]
   26d4c:	b	26d64 <main@@Base+0x10844>
   26d50:	ldr	r0, [sp, #8]
   26d54:	ldr	r1, [sp, #12]
   26d58:	bl	46648 <flatcc_json_printer_clear@@Base+0x2314>
   26d5c:	vmov	s0, r0
   26d60:	vstr	s0, [sp]
   26d64:	vldr	s0, [sp]
   26d68:	ldr	r0, [fp, #16]
   26d6c:	vstr	s0, [r0]
   26d70:	ldr	r0, [fp, #-16]
   26d74:	sub	sp, fp, #8
   26d78:	pop	{r4, sl, fp, pc}
   26d7c:	sub	sp, sp, #8
   26d80:	vstr	s0, [sp, #4]
   26d84:	vldr	s0, [sp, #4]
   26d88:	vstr	s0, [sp]
   26d8c:	ldr	r0, [sp]
   26d90:	str	r0, [sp]
   26d94:	vldr	s0, [sp]
   26d98:	add	sp, sp, #8
   26d9c:	bx	lr
   26da0:	push	{r4, sl, fp, lr}
   26da4:	add	fp, sp, #8
   26da8:	sub	sp, sp, #56	; 0x38
   26dac:	ldr	ip, [fp, #12]
   26db0:	ldr	lr, [fp, #8]
   26db4:	ldr	r4, [fp, #16]
   26db8:	str	r0, [fp, #-16]
   26dbc:	str	r1, [fp, #-20]	; 0xffffffec
   26dc0:	str	r2, [fp, #-24]	; 0xffffffe8
   26dc4:	str	r3, [fp, #-28]	; 0xffffffe4
   26dc8:	str	ip, [sp, #28]
   26dcc:	str	lr, [sp, #24]
   26dd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26dd4:	cmp	r0, #0
   26dd8:	str	r4, [sp, #20]
   26ddc:	beq	26e30 <main@@Base+0x10910>
   26de0:	ldr	r0, [sp, #24]
   26de4:	ldr	r1, [sp, #28]
   26de8:	subs	r0, r0, #-2147483647	; 0x80000001
   26dec:	sbcs	r1, r1, #0
   26df0:	str	r0, [sp, #16]
   26df4:	str	r1, [sp, #12]
   26df8:	bcc	26e1c <main@@Base+0x108fc>
   26dfc:	b	26e00 <main@@Base+0x108e0>
   26e00:	ldr	r0, [fp, #-16]
   26e04:	ldr	r1, [fp, #-20]	; 0xffffffec
   26e08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26e0c:	movw	r3, #8
   26e10:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26e14:	str	r0, [fp, #-12]
   26e18:	b	26e80 <main@@Base+0x10960>
   26e1c:	ldr	r0, [sp, #24]
   26e20:	rsb	r0, r0, #0
   26e24:	ldr	r1, [fp, #16]
   26e28:	str	r0, [r1]
   26e2c:	b	26e78 <main@@Base+0x10958>
   26e30:	ldr	r0, [sp, #24]
   26e34:	ldr	r1, [sp, #28]
   26e38:	subs	r0, r0, #-2147483648	; 0x80000000
   26e3c:	sbcs	r1, r1, #0
   26e40:	str	r0, [sp, #8]
   26e44:	str	r1, [sp, #4]
   26e48:	bcc	26e6c <main@@Base+0x1094c>
   26e4c:	b	26e50 <main@@Base+0x10930>
   26e50:	ldr	r0, [fp, #-16]
   26e54:	ldr	r1, [fp, #-20]	; 0xffffffec
   26e58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26e5c:	movw	r3, #7
   26e60:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26e64:	str	r0, [fp, #-12]
   26e68:	b	26e80 <main@@Base+0x10960>
   26e6c:	ldr	r0, [sp, #24]
   26e70:	ldr	r1, [fp, #16]
   26e74:	str	r0, [r1]
   26e78:	ldr	r0, [fp, #-20]	; 0xffffffec
   26e7c:	str	r0, [fp, #-12]
   26e80:	ldr	r0, [fp, #-12]
   26e84:	sub	sp, fp, #8
   26e88:	pop	{r4, sl, fp, pc}
   26e8c:	sub	sp, sp, #4
   26e90:	str	r0, [sp]
   26e94:	ldr	r0, [sp]
   26e98:	add	sp, sp, #4
   26e9c:	bx	lr
   26ea0:	push	{r4, sl, fp, lr}
   26ea4:	add	fp, sp, #8
   26ea8:	sub	sp, sp, #48	; 0x30
   26eac:	ldr	ip, [fp, #12]
   26eb0:	ldr	lr, [fp, #8]
   26eb4:	ldr	r4, [fp, #16]
   26eb8:	str	r0, [fp, #-16]
   26ebc:	str	r1, [fp, #-20]	; 0xffffffec
   26ec0:	str	r2, [fp, #-24]	; 0xffffffe8
   26ec4:	str	r3, [sp, #28]
   26ec8:	str	ip, [sp, #20]
   26ecc:	str	lr, [sp, #16]
   26ed0:	ldr	r0, [sp, #28]
   26ed4:	cmp	r0, #0
   26ed8:	str	r4, [sp, #12]
   26edc:	beq	26f3c <main@@Base+0x10a1c>
   26ee0:	ldr	r0, [sp, #16]
   26ee4:	ldr	r1, [sp, #20]
   26ee8:	subs	r0, r0, #1
   26eec:	sbcs	r1, r1, #-2147483648	; 0x80000000
   26ef0:	str	r0, [sp, #8]
   26ef4:	str	r1, [sp, #4]
   26ef8:	bcc	26f1c <main@@Base+0x109fc>
   26efc:	b	26f00 <main@@Base+0x109e0>
   26f00:	ldr	r0, [fp, #-16]
   26f04:	ldr	r1, [fp, #-20]	; 0xffffffec
   26f08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26f0c:	movw	r3, #8
   26f10:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26f14:	str	r0, [fp, #-12]
   26f18:	b	26f84 <main@@Base+0x10a64>
   26f1c:	ldr	r0, [sp, #16]
   26f20:	ldr	r1, [sp, #20]
   26f24:	rsbs	r0, r0, #0
   26f28:	rsc	r1, r1, #0
   26f2c:	ldr	r2, [fp, #16]
   26f30:	str	r0, [r2]
   26f34:	str	r1, [r2, #4]
   26f38:	b	26f7c <main@@Base+0x10a5c>
   26f3c:	ldr	r0, [sp, #20]
   26f40:	cmn	r0, #1
   26f44:	bgt	26f68 <main@@Base+0x10a48>
   26f48:	b	26f4c <main@@Base+0x10a2c>
   26f4c:	ldr	r0, [fp, #-16]
   26f50:	ldr	r1, [fp, #-20]	; 0xffffffec
   26f54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26f58:	movw	r3, #7
   26f5c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   26f60:	str	r0, [fp, #-12]
   26f64:	b	26f84 <main@@Base+0x10a64>
   26f68:	ldr	r0, [sp, #16]
   26f6c:	ldr	r1, [sp, #20]
   26f70:	ldr	r2, [fp, #16]
   26f74:	str	r1, [r2, #4]
   26f78:	str	r0, [r2]
   26f7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26f80:	str	r0, [fp, #-12]
   26f84:	ldr	r0, [fp, #-12]
   26f88:	sub	sp, fp, #8
   26f8c:	pop	{r4, sl, fp, pc}
   26f90:	sub	sp, sp, #8
   26f94:	str	r0, [sp]
   26f98:	str	r1, [sp, #4]
   26f9c:	ldr	r0, [sp]
   26fa0:	ldr	r1, [sp, #4]
   26fa4:	add	sp, sp, #8
   26fa8:	bx	lr
   26fac:	push	{r4, sl, fp, lr}
   26fb0:	add	fp, sp, #8
   26fb4:	sub	sp, sp, #40	; 0x28
   26fb8:	ldr	ip, [fp, #12]
   26fbc:	ldr	lr, [fp, #8]
   26fc0:	ldr	r4, [fp, #16]
   26fc4:	str	r0, [fp, #-16]
   26fc8:	str	r1, [fp, #-20]	; 0xffffffec
   26fcc:	str	r2, [sp, #24]
   26fd0:	str	r3, [sp, #20]
   26fd4:	str	ip, [sp, #12]
   26fd8:	str	lr, [sp, #8]
   26fdc:	ldr	r0, [sp, #20]
   26fe0:	cmp	r0, #0
   26fe4:	str	r4, [sp, #4]
   26fe8:	beq	27008 <main@@Base+0x10ae8>
   26fec:	ldr	r0, [fp, #-16]
   26ff0:	ldr	r1, [fp, #-20]	; 0xffffffec
   26ff4:	ldr	r2, [sp, #24]
   26ff8:	movw	r3, #8
   26ffc:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   27000:	str	r0, [fp, #-12]
   27004:	b	27048 <main@@Base+0x10b28>
   27008:	ldr	r0, [sp, #12]
   2700c:	cmp	r0, #0
   27010:	beq	27034 <main@@Base+0x10b14>
   27014:	b	27018 <main@@Base+0x10af8>
   27018:	ldr	r0, [fp, #-16]
   2701c:	ldr	r1, [fp, #-20]	; 0xffffffec
   27020:	ldr	r2, [sp, #24]
   27024:	movw	r3, #7
   27028:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   2702c:	str	r0, [fp, #-12]
   27030:	b	27048 <main@@Base+0x10b28>
   27034:	ldr	r0, [sp, #8]
   27038:	ldr	r1, [fp, #16]
   2703c:	str	r0, [r1]
   27040:	ldr	r0, [fp, #-20]	; 0xffffffec
   27044:	str	r0, [fp, #-12]
   27048:	ldr	r0, [fp, #-12]
   2704c:	sub	sp, fp, #8
   27050:	pop	{r4, sl, fp, pc}
   27054:	sub	sp, sp, #4
   27058:	str	r0, [sp]
   2705c:	ldr	r0, [sp]
   27060:	add	sp, sp, #4
   27064:	bx	lr
   27068:	push	{r4, sl, fp, lr}
   2706c:	add	fp, sp, #8
   27070:	sub	sp, sp, #40	; 0x28
   27074:	ldr	ip, [fp, #12]
   27078:	ldr	lr, [fp, #8]
   2707c:	ldr	r4, [fp, #16]
   27080:	str	r0, [fp, #-16]
   27084:	str	r1, [fp, #-20]	; 0xffffffec
   27088:	str	r2, [sp, #24]
   2708c:	str	r3, [sp, #20]
   27090:	str	ip, [sp, #12]
   27094:	str	lr, [sp, #8]
   27098:	ldr	r0, [sp, #20]
   2709c:	cmp	r0, #0
   270a0:	str	r4, [sp, #4]
   270a4:	beq	270c4 <main@@Base+0x10ba4>
   270a8:	ldr	r0, [fp, #-16]
   270ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   270b0:	ldr	r2, [sp, #24]
   270b4:	movw	r3, #8
   270b8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   270bc:	str	r0, [fp, #-12]
   270c0:	b	270e0 <main@@Base+0x10bc0>
   270c4:	ldr	r0, [sp, #8]
   270c8:	ldr	r1, [sp, #12]
   270cc:	ldr	r2, [fp, #16]
   270d0:	str	r1, [r2, #4]
   270d4:	str	r0, [r2]
   270d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   270dc:	str	r0, [fp, #-12]
   270e0:	ldr	r0, [fp, #-12]
   270e4:	sub	sp, fp, #8
   270e8:	pop	{r4, sl, fp, pc}
   270ec:	sub	sp, sp, #8
   270f0:	str	r0, [sp]
   270f4:	str	r1, [sp, #4]
   270f8:	ldr	r0, [sp]
   270fc:	ldr	r1, [sp, #4]
   27100:	add	sp, sp, #8
   27104:	bx	lr
   27108:	push	{r4, sl, fp, lr}
   2710c:	add	fp, sp, #8
   27110:	sub	sp, sp, #40	; 0x28
   27114:	ldr	ip, [fp, #12]
   27118:	ldr	lr, [fp, #8]
   2711c:	ldr	r4, [fp, #16]
   27120:	str	r0, [fp, #-12]
   27124:	str	r1, [fp, #-16]
   27128:	str	r2, [fp, #-20]	; 0xffffffec
   2712c:	str	r3, [sp, #24]
   27130:	str	ip, [sp, #20]
   27134:	str	lr, [sp, #16]
   27138:	ldr	r0, [sp, #24]
   2713c:	cmp	r0, #0
   27140:	str	r4, [sp, #12]
   27144:	beq	27164 <main@@Base+0x10c44>
   27148:	ldr	r0, [sp, #16]
   2714c:	ldr	r1, [sp, #20]
   27150:	bl	46410 <flatcc_json_printer_clear@@Base+0x20dc>
   27154:	vmov	d16, r0, r1
   27158:	vneg.f64	d16, d16
   2715c:	vstr	d16, [sp]
   27160:	b	27178 <main@@Base+0x10c58>
   27164:	ldr	r0, [sp, #16]
   27168:	ldr	r1, [sp, #20]
   2716c:	bl	46410 <flatcc_json_printer_clear@@Base+0x20dc>
   27170:	vmov	d16, r0, r1
   27174:	vstr	d16, [sp]
   27178:	vldr	d16, [sp]
   2717c:	ldr	r0, [fp, #16]
   27180:	vstr	d16, [r0]
   27184:	ldr	r0, [fp, #-16]
   27188:	sub	sp, fp, #8
   2718c:	pop	{r4, sl, fp, pc}
   27190:	sub	sp, sp, #16
   27194:	vstr	d0, [sp, #8]
   27198:	vldr	d0, [sp, #8]
   2719c:	vstr	d0, [sp]
   271a0:	vldr	d0, [sp]
   271a4:	add	sp, sp, #16
   271a8:	bx	lr
   271ac:	push	{r4, sl, fp, lr}
   271b0:	add	fp, sp, #8
   271b4:	sub	sp, sp, #64	; 0x40
   271b8:	ldr	r2, [pc, #420]	; 27364 <main@@Base+0x10e44>
   271bc:	add	r2, pc, r2
   271c0:	str	r0, [fp, #-12]
   271c4:	str	r1, [fp, #-16]
   271c8:	ldr	r0, [fp, #-12]
   271cc:	ldr	r1, [fp, #-16]
   271d0:	movw	r3, #0
   271d4:	str	r1, [fp, #-20]	; 0xffffffec
   271d8:	mov	r1, r3
   271dc:	ldr	ip, [fp, #-20]	; 0xffffffec
   271e0:	str	r2, [fp, #-24]	; 0xffffffe8
   271e4:	mov	r2, ip
   271e8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   271ec:	str	lr, [sp]
   271f0:	movw	r4, #1
   271f4:	str	r4, [sp, #4]
   271f8:	bl	3dcbc <flatcc_json_printer_float_struct_field@@Base>
   271fc:	ldr	r0, [pc, #348]	; 27360 <main@@Base+0x10e40>
   27200:	add	r0, pc, r0
   27204:	ldr	r1, [fp, #-12]
   27208:	ldr	r2, [fp, #-16]
   2720c:	str	r0, [fp, #-28]	; 0xffffffe4
   27210:	mov	r0, r1
   27214:	movw	r1, #1
   27218:	str	r1, [fp, #-32]	; 0xffffffe0
   2721c:	movw	r3, #4
   27220:	ldr	ip, [fp, #-28]	; 0xffffffe4
   27224:	str	ip, [sp]
   27228:	ldr	lr, [fp, #-32]	; 0xffffffe0
   2722c:	str	lr, [sp, #4]
   27230:	bl	3dcbc <flatcc_json_printer_float_struct_field@@Base>
   27234:	ldr	r0, [pc, #288]	; 2735c <main@@Base+0x10e3c>
   27238:	add	r0, pc, r0
   2723c:	ldr	r1, [fp, #-12]
   27240:	ldr	r2, [fp, #-16]
   27244:	str	r0, [sp, #36]	; 0x24
   27248:	mov	r0, r1
   2724c:	movw	r1, #2
   27250:	movw	r3, #8
   27254:	ldr	ip, [sp, #36]	; 0x24
   27258:	str	ip, [sp]
   2725c:	movw	lr, #1
   27260:	str	lr, [sp, #4]
   27264:	bl	3dcbc <flatcc_json_printer_float_struct_field@@Base>
   27268:	ldr	r0, [pc, #232]	; 27358 <main@@Base+0x10e38>
   2726c:	add	r0, pc, r0
   27270:	ldr	r1, [fp, #-12]
   27274:	ldr	r2, [fp, #-16]
   27278:	str	r0, [sp, #32]
   2727c:	mov	r0, r1
   27280:	movw	r1, #3
   27284:	movw	r3, #16
   27288:	ldr	ip, [sp, #32]
   2728c:	str	ip, [sp]
   27290:	movw	lr, #5
   27294:	str	lr, [sp, #4]
   27298:	bl	3dd5c <flatcc_json_printer_double_struct_field@@Base>
   2729c:	ldr	r0, [pc, #172]	; 27350 <main@@Base+0x10e30>
   272a0:	add	r0, pc, r0
   272a4:	ldr	r1, [pc, #168]	; 27354 <main@@Base+0x10e34>
   272a8:	add	r1, pc, r1
   272ac:	ldr	r2, [fp, #-12]
   272b0:	ldr	r3, [fp, #-16]
   272b4:	str	r0, [sp, #28]
   272b8:	mov	r0, r2
   272bc:	movw	r2, #4
   272c0:	str	r1, [sp, #24]
   272c4:	mov	r1, r2
   272c8:	mov	r2, r3
   272cc:	movw	r3, #24
   272d0:	ldr	ip, [sp, #28]
   272d4:	str	ip, [sp]
   272d8:	movw	lr, #5
   272dc:	str	lr, [sp, #4]
   272e0:	ldr	lr, [sp, #24]
   272e4:	str	lr, [sp, #8]
   272e8:	bl	3e160 <flatcc_json_printer_int8_enum_struct_field@@Base>
   272ec:	ldr	r0, [pc, #84]	; 27348 <main@@Base+0x10e28>
   272f0:	add	r0, pc, r0
   272f4:	ldr	r1, [pc, #80]	; 2734c <main@@Base+0x10e2c>
   272f8:	add	r1, pc, r1
   272fc:	ldr	r2, [fp, #-12]
   27300:	ldr	r3, [fp, #-16]
   27304:	str	r0, [sp, #20]
   27308:	mov	r0, r2
   2730c:	movw	r2, #5
   27310:	str	r1, [sp, #16]
   27314:	mov	r1, r2
   27318:	str	r2, [sp, #12]
   2731c:	mov	r2, r3
   27320:	movw	r3, #26
   27324:	ldr	ip, [sp, #20]
   27328:	str	ip, [sp]
   2732c:	ldr	lr, [sp, #12]
   27330:	str	lr, [sp, #4]
   27334:	ldr	r4, [sp, #16]
   27338:	str	r4, [sp, #8]
   2733c:	bl	432c8 <flatcc_json_printer_embedded_struct_field@@Base>
   27340:	sub	sp, fp, #8
   27344:	pop	{r4, sl, fp, pc}
   27348:	strdeq	r2, [r2], -r7
   2734c:	andeq	r0, r0, r8, lsr r3
   27350:	andeq	r2, r2, r1, asr #6
   27354:	strheq	r0, [r0], -r8
   27358:	andeq	r2, r2, pc, ror #6
   2735c:	andeq	r2, r2, r1, lsr #7
   27360:	muleq	r2, r1, pc	; <UNPREDICTABLE>
   27364:	andeq	r2, r2, r4, ror #4
   27368:	push	{fp, lr}
   2736c:	mov	fp, sp
   27370:	sub	sp, sp, #16
   27374:	str	r0, [fp, #-4]
   27378:	strb	r1, [fp, #-5]
   2737c:	ldrb	r0, [fp, #-5]
   27380:	strb	r0, [fp, #-6]
   27384:	ldrb	r0, [fp, #-6]
   27388:	ldrb	r1, [fp, #-6]
   2738c:	sub	r1, r1, #1
   27390:	and	r0, r0, r1
   27394:	movw	r1, #0
   27398:	cmp	r1, r0
   2739c:	movw	r0, #0
   273a0:	movne	r0, #1
   273a4:	and	r0, r0, #1
   273a8:	str	r0, [sp, #4]
   273ac:	str	r1, [sp]
   273b0:	ldrb	r0, [fp, #-6]
   273b4:	and	r0, r0, #244	; 0xf4
   273b8:	cmp	r0, #0
   273bc:	bne	273cc <main@@Base+0x10eac>
   273c0:	ldrb	r0, [fp, #-6]
   273c4:	cmp	r0, #0
   273c8:	bne	273dc <main@@Base+0x10ebc>
   273cc:	ldr	r0, [fp, #-4]
   273d0:	ldrsb	r1, [fp, #-5]
   273d4:	bl	3b25c <flatcc_json_printer_int8@@Base>
   273d8:	b	27484 <main@@Base+0x10f64>
   273dc:	ldr	r0, [fp, #-4]
   273e0:	ldr	r1, [sp, #4]
   273e4:	bl	3b6e4 <flatcc_json_printer_delimit_enum_flags@@Base>
   273e8:	ldrb	r0, [fp, #-6]
   273ec:	and	r0, r0, #1
   273f0:	cmp	r0, #0
   273f4:	beq	27418 <main@@Base+0x10ef8>
   273f8:	ldr	r0, [pc, #140]	; 2748c <main@@Base+0x10f6c>
   273fc:	add	r2, pc, r0
   27400:	ldr	r0, [fp, #-4]
   27404:	ldr	r1, [sp]
   27408:	add	r3, r1, #1
   2740c:	str	r3, [sp]
   27410:	movw	r3, #3
   27414:	bl	3b754 <flatcc_json_printer_enum_flag@@Base>
   27418:	ldrb	r0, [fp, #-6]
   2741c:	and	r0, r0, #2
   27420:	cmp	r0, #0
   27424:	beq	27448 <main@@Base+0x10f28>
   27428:	ldr	r0, [pc, #96]	; 27490 <main@@Base+0x10f70>
   2742c:	add	r2, pc, r0
   27430:	ldr	r0, [fp, #-4]
   27434:	ldr	r1, [sp]
   27438:	add	r3, r1, #1
   2743c:	str	r3, [sp]
   27440:	movw	r3, #5
   27444:	bl	3b754 <flatcc_json_printer_enum_flag@@Base>
   27448:	ldrb	r0, [fp, #-6]
   2744c:	and	r0, r0, #8
   27450:	cmp	r0, #0
   27454:	beq	27478 <main@@Base+0x10f58>
   27458:	ldr	r0, [pc, #52]	; 27494 <main@@Base+0x10f74>
   2745c:	add	r2, pc, r0
   27460:	ldr	r0, [fp, #-4]
   27464:	ldr	r1, [sp]
   27468:	add	r3, r1, #1
   2746c:	str	r3, [sp]
   27470:	movw	r3, #4
   27474:	bl	3b754 <flatcc_json_printer_enum_flag@@Base>
   27478:	ldr	r0, [fp, #-4]
   2747c:	ldr	r1, [sp, #4]
   27480:	bl	3b6e4 <flatcc_json_printer_delimit_enum_flags@@Base>
   27484:	mov	sp, fp
   27488:	pop	{fp, pc}
   2748c:	strdeq	r2, [r2], -r1
   27490:	andeq	r2, r2, r5, asr #3
   27494:	muleq	r2, fp, r1
   27498:	push	{fp, lr}
   2749c:	mov	fp, sp
   274a0:	sub	sp, sp, #16
   274a4:	str	r0, [fp, #-4]
   274a8:	strb	r1, [fp, #-5]
   274ac:	ldrb	r0, [fp, #-5]
   274b0:	sub	r0, r0, #1
   274b4:	cmp	r0, #3
   274b8:	str	r0, [sp, #4]
   274bc:	bhi	27540 <main@@Base+0x11020>
   274c0:	add	r0, pc, #8
   274c4:	ldr	r1, [sp, #4]
   274c8:	ldr	r2, [r0, r1, lsl #2]
   274cc:	add	pc, r0, r2
   274d0:	andeq	r0, r0, r0, lsl r0
   274d4:	andeq	r0, r0, r8, lsr #32
   274d8:	andeq	r0, r0, r0, asr #32
   274dc:	andeq	r0, r0, r8, asr r0
   274e0:	ldr	r0, [pc, #128]	; 27568 <main@@Base+0x11048>
   274e4:	add	r1, pc, r0
   274e8:	ldr	r0, [fp, #-4]
   274ec:	movw	r2, #7
   274f0:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   274f4:	b	27554 <main@@Base+0x11034>
   274f8:	ldr	r0, [pc, #100]	; 27564 <main@@Base+0x11044>
   274fc:	add	r1, pc, r0
   27500:	ldr	r0, [fp, #-4]
   27504:	movw	r2, #23
   27508:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   2750c:	b	27554 <main@@Base+0x11034>
   27510:	ldr	r0, [pc, #72]	; 27560 <main@@Base+0x11040>
   27514:	add	r1, pc, r0
   27518:	ldr	r0, [fp, #-4]
   2751c:	movw	r2, #8
   27520:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   27524:	b	27554 <main@@Base+0x11034>
   27528:	ldr	r0, [pc, #44]	; 2755c <main@@Base+0x1103c>
   2752c:	add	r1, pc, r0
   27530:	ldr	r0, [fp, #-4]
   27534:	movw	r2, #3
   27538:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   2753c:	b	27554 <main@@Base+0x11034>
   27540:	ldr	r0, [pc, #36]	; 2756c <main@@Base+0x1104c>
   27544:	add	r1, pc, r0
   27548:	ldr	r0, [fp, #-4]
   2754c:	movw	r2, #4
   27550:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   27554:	mov	sp, fp
   27558:	pop	{fp, pc}
   2755c:	strdeq	r2, [r2], -r9
   27560:	andeq	r2, r2, r8, lsl #2
   27564:	andeq	r2, r2, r8, lsl #2
   27568:	andeq	r2, r2, r8, lsl r1
   2756c:	andeq	r3, r2, r5, lsl #19
   27570:	push	{fp, lr}
   27574:	mov	fp, sp
   27578:	sub	sp, sp, #16
   2757c:	str	r0, [fp, #-4]
   27580:	str	r1, [sp, #8]
   27584:	ldr	r0, [sp, #8]
   27588:	ldrb	r0, [r0, #8]
   2758c:	sub	r0, r0, #1
   27590:	cmp	r0, #3
   27594:	str	r0, [sp, #4]
   27598:	bhi	2761c <main@@Base+0x110fc>
   2759c:	add	r0, pc, #8
   275a0:	ldr	r1, [sp, #4]
   275a4:	ldr	r2, [r0, r1, lsl #2]
   275a8:	add	pc, r0, r2
   275ac:	andeq	r0, r0, r0, lsl r0
   275b0:	andeq	r0, r0, r8, lsr #32
   275b4:	andeq	r0, r0, r0, asr #32
   275b8:	andeq	r0, r0, r8, asr r0
   275bc:	ldr	r0, [pc, #112]	; 27634 <main@@Base+0x11114>
   275c0:	add	r2, pc, r0
   275c4:	ldr	r0, [fp, #-4]
   275c8:	ldr	r1, [sp, #8]
   275cc:	bl	4314c <flatcc_json_printer_union_table@@Base>
   275d0:	b	27620 <main@@Base+0x11100>
   275d4:	ldr	r0, [pc, #84]	; 27630 <main@@Base+0x11110>
   275d8:	add	r2, pc, r0
   275dc:	ldr	r0, [fp, #-4]
   275e0:	ldr	r1, [sp, #8]
   275e4:	bl	4314c <flatcc_json_printer_union_table@@Base>
   275e8:	b	27620 <main@@Base+0x11100>
   275ec:	ldr	r0, [pc, #56]	; 2762c <main@@Base+0x1110c>
   275f0:	add	r2, pc, r0
   275f4:	ldr	r0, [fp, #-4]
   275f8:	ldr	r1, [sp, #8]
   275fc:	bl	4314c <flatcc_json_printer_union_table@@Base>
   27600:	b	27620 <main@@Base+0x11100>
   27604:	ldr	r0, [pc, #28]	; 27628 <main@@Base+0x11108>
   27608:	add	r2, pc, r0
   2760c:	ldr	r0, [fp, #-4]
   27610:	ldr	r1, [sp, #8]
   27614:	bl	4314c <flatcc_json_printer_union_table@@Base>
   27618:	b	27620 <main@@Base+0x11100>
   2761c:	b	27620 <main@@Base+0x11100>
   27620:	mov	sp, fp
   27624:	pop	{fp, pc}
   27628:	andeq	r0, r0, r4, lsl #8
   2762c:	andeq	r0, r0, r8, lsl #8
   27630:	andeq	r0, r0, r0, lsl #6
   27634:			; <UNDEFINED> instruction: 0xffff362c
   27638:	push	{r4, sl, fp, lr}
   2763c:	add	fp, sp, #8
   27640:	sub	sp, sp, #32
   27644:	ldr	r2, [pc, #128]	; 276cc <main@@Base+0x111ac>
   27648:	add	r2, pc, r2
   2764c:	str	r0, [fp, #-12]
   27650:	str	r1, [fp, #-16]
   27654:	ldr	r0, [fp, #-12]
   27658:	ldr	r1, [fp, #-16]
   2765c:	movw	r3, #0
   27660:	str	r1, [sp, #20]
   27664:	mov	r1, r3
   27668:	ldr	ip, [sp, #20]
   2766c:	str	r2, [sp, #16]
   27670:	mov	r2, ip
   27674:	ldr	lr, [sp, #16]
   27678:	str	lr, [sp]
   2767c:	movw	r4, #1
   27680:	str	r4, [sp, #4]
   27684:	bl	3da40 <flatcc_json_printer_int16_struct_field@@Base>
   27688:	ldr	r0, [pc, #56]	; 276c8 <main@@Base+0x111a8>
   2768c:	add	r0, pc, r0
   27690:	ldr	r1, [fp, #-12]
   27694:	ldr	r2, [fp, #-16]
   27698:	str	r0, [sp, #12]
   2769c:	mov	r0, r1
   276a0:	movw	r1, #1
   276a4:	str	r1, [sp, #8]
   276a8:	movw	r3, #2
   276ac:	ldr	ip, [sp, #12]
   276b0:	str	ip, [sp]
   276b4:	ldr	lr, [sp, #8]
   276b8:	str	lr, [sp, #4]
   276bc:	bl	3d9a0 <flatcc_json_printer_int8_struct_field@@Base>
   276c0:	sub	sp, fp, #8
   276c4:	pop	{r4, sl, fp, pc}
   276c8:	andeq	r2, r2, r6, lsl r0
   276cc:			; <UNDEFINED> instruction: 0x00021ebb
   276d0:	push	{fp, lr}
   276d4:	mov	fp, sp
   276d8:	sub	sp, sp, #32
   276dc:	ldr	r2, [pc, #164]	; 27788 <main@@Base+0x11268>
   276e0:	add	r3, pc, r2
   276e4:	str	r0, [fp, #-4]
   276e8:	str	r1, [fp, #-8]
   276ec:	ldr	r0, [fp, #-4]
   276f0:	ldr	r1, [fp, #-8]
   276f4:	movw	r2, #0
   276f8:	movw	ip, #2
   276fc:	str	ip, [sp]
   27700:	bl	3b7bc <flatcc_json_printer_string_field@@Base>
   27704:	ldr	r0, [pc, #120]	; 27784 <main@@Base+0x11264>
   27708:	add	r0, pc, r0
   2770c:	ldr	r1, [fp, #-4]
   27710:	ldr	r2, [fp, #-8]
   27714:	mov	r3, sp
   27718:	mov	ip, #0
   2771c:	str	ip, [r3, #12]
   27720:	str	ip, [r3, #8]
   27724:	mov	ip, #3
   27728:	str	ip, [r3]
   2772c:	ldr	r3, [pc, #88]	; 2778c <main@@Base+0x1126c>
   27730:	add	r3, pc, r3
   27734:	mov	ip, #1
   27738:	str	r0, [fp, #-12]
   2773c:	mov	r0, r1
   27740:	mov	r1, r2
   27744:	mov	r2, ip
   27748:	bl	3c5ec <flatcc_json_printer_int64_field@@Base>
   2774c:	ldr	r0, [pc, #44]	; 27780 <main@@Base+0x11260>
   27750:	add	r3, pc, r0
   27754:	ldr	r0, [fp, #-4]
   27758:	ldr	r1, [fp, #-8]
   2775c:	movw	r2, #2
   27760:	movw	ip, #5
   27764:	str	ip, [sp]
   27768:	movw	ip, #0
   2776c:	uxth	ip, ip
   27770:	str	ip, [sp, #4]
   27774:	bl	3bea4 <flatcc_json_printer_uint16_field@@Base>
   27778:	mov	sp, fp
   2777c:	pop	{fp, pc}
   27780:	ldrdeq	r2, [r2], -r5
   27784:	muleq	r2, r4, r0
   27788:	strheq	r2, [r2], -r9
   2778c:	andeq	r2, r2, ip, rrx
   27790:	push	{r4, sl, fp, lr}
   27794:	add	fp, sp, #8
   27798:	sub	sp, sp, #32
   2779c:	ldr	r2, [pc, #124]	; 27820 <main@@Base+0x11300>
   277a0:	add	r2, pc, r2
   277a4:	str	r0, [fp, #-12]
   277a8:	str	r1, [fp, #-16]
   277ac:	ldr	r0, [fp, #-12]
   277b0:	ldr	r1, [fp, #-16]
   277b4:	movw	r3, #0
   277b8:	str	r1, [sp, #20]
   277bc:	mov	r1, r3
   277c0:	ldr	ip, [sp, #20]
   277c4:	str	r2, [sp, #16]
   277c8:	mov	r2, ip
   277cc:	ldr	lr, [sp, #16]
   277d0:	str	lr, [sp]
   277d4:	movw	r4, #2
   277d8:	str	r4, [sp, #4]
   277dc:	bl	3d860 <flatcc_json_printer_uint32_struct_field@@Base>
   277e0:	ldr	r0, [pc, #52]	; 2781c <main@@Base+0x112fc>
   277e4:	add	r0, pc, r0
   277e8:	ldr	r1, [fp, #-12]
   277ec:	ldr	r2, [fp, #-16]
   277f0:	str	r0, [sp, #12]
   277f4:	mov	r0, r1
   277f8:	movw	r1, #1
   277fc:	movw	r3, #4
   27800:	ldr	ip, [sp, #12]
   27804:	str	ip, [sp]
   27808:	movw	lr, #8
   2780c:	str	lr, [sp, #4]
   27810:	bl	3d860 <flatcc_json_printer_uint32_struct_field@@Base>
   27814:	sub	sp, fp, #8
   27818:	pop	{r4, sl, fp, pc}
   2781c:			; <UNDEFINED> instruction: 0x00021fbc
   27820:	strdeq	r1, [r2], -r9
   27824:	sub	sp, sp, #8
   27828:	str	r0, [sp, #4]
   2782c:	str	r1, [sp]
   27830:	add	sp, sp, #8
   27834:	bx	lr
   27838:	push	{fp, lr}
   2783c:	mov	fp, sp
   27840:	sub	sp, sp, #24
   27844:	ldr	r2, [pc, #144]	; 278dc <main@@Base+0x113bc>
   27848:	add	r3, pc, r2
   2784c:	str	r0, [fp, #-4]
   27850:	str	r1, [fp, #-8]
   27854:	ldr	r0, [fp, #-4]
   27858:	ldr	r1, [fp, #-8]
   2785c:	movw	r2, #0
   27860:	str	r2, [sp, #12]
   27864:	movw	ip, #4
   27868:	str	ip, [sp]
   2786c:	ldr	ip, [sp, #12]
   27870:	str	ip, [sp, #4]
   27874:	bl	3ba48 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   27878:	ldr	r0, [pc, #88]	; 278d8 <main@@Base+0x113b8>
   2787c:	add	r3, pc, r0
   27880:	ldr	r0, [fp, #-4]
   27884:	ldr	r1, [fp, #-8]
   27888:	movw	r2, #1
   2788c:	str	r2, [sp, #8]
   27890:	movw	ip, #7
   27894:	str	ip, [sp]
   27898:	ldr	ip, [sp, #8]
   2789c:	str	ip, [sp, #4]
   278a0:	bl	3ba48 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   278a4:	ldr	r0, [pc, #40]	; 278d4 <main@@Base+0x113b4>
   278a8:	add	r3, pc, r0
   278ac:	ldr	r0, [fp, #-4]
   278b0:	ldr	r1, [fp, #-8]
   278b4:	movw	r2, #2
   278b8:	movw	ip, #6
   278bc:	str	ip, [sp]
   278c0:	movw	ip, #0
   278c4:	str	ip, [sp, #4]
   278c8:	bl	3ba48 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   278cc:	mov	sp, fp
   278d0:	pop	{fp, pc}
   278d4:	andeq	r1, r2, r9, lsl #30
   278d8:	andeq	r1, r2, sp, lsr #30
   278dc:	andeq	r1, r2, r4, ror #30
   278e0:	push	{fp, lr}
   278e4:	mov	fp, sp
   278e8:	sub	sp, sp, #40	; 0x28
   278ec:	ldr	r2, [pc, #260]	; 279f8 <main@@Base+0x114d8>
   278f0:	add	r3, pc, r2
   278f4:	ldr	r2, [pc, #256]	; 279fc <main@@Base+0x114dc>
   278f8:	add	r2, pc, r2
   278fc:	str	r0, [fp, #-4]
   27900:	str	r1, [fp, #-8]
   27904:	ldr	r0, [fp, #-4]
   27908:	ldr	r1, [fp, #-8]
   2790c:	movw	ip, #0
   27910:	str	r2, [fp, #-12]
   27914:	mov	r2, ip
   27918:	movw	ip, #5
   2791c:	str	ip, [sp]
   27920:	movw	ip, #2
   27924:	sxtb	ip, ip
   27928:	str	ip, [sp, #4]
   2792c:	ldr	ip, [fp, #-12]
   27930:	str	ip, [sp, #8]
   27934:	bl	3d0b4 <flatcc_json_printer_int8_enum_field@@Base>
   27938:	ldr	r0, [pc, #176]	; 279f0 <main@@Base+0x114d0>
   2793c:	add	r3, pc, r0
   27940:	ldr	r0, [pc, #172]	; 279f4 <main@@Base+0x114d4>
   27944:	add	r0, pc, r0
   27948:	ldr	r1, [fp, #-4]
   2794c:	ldr	r2, [fp, #-8]
   27950:	str	r0, [fp, #-16]
   27954:	mov	r0, r1
   27958:	mov	r1, r2
   2795c:	movw	r2, #1
   27960:	movw	ip, #6
   27964:	str	ip, [sp]
   27968:	movw	ip, #2
   2796c:	sxtb	ip, ip
   27970:	str	ip, [sp, #4]
   27974:	ldr	ip, [fp, #-16]
   27978:	str	ip, [sp, #8]
   2797c:	bl	3d0b4 <flatcc_json_printer_int8_enum_field@@Base>
   27980:	ldr	r0, [pc, #100]	; 279ec <main@@Base+0x114cc>
   27984:	add	r3, pc, r0
   27988:	ldr	r0, [fp, #-4]
   2798c:	ldr	r1, [fp, #-8]
   27990:	movw	r2, #2
   27994:	str	r2, [sp, #20]
   27998:	ldr	ip, [sp, #20]
   2799c:	str	ip, [sp]
   279a0:	movw	lr, #2
   279a4:	and	lr, lr, #255	; 0xff
   279a8:	str	lr, [sp, #4]
   279ac:	bl	3bd74 <flatcc_json_printer_uint8_field@@Base>
   279b0:	ldr	r0, [pc, #48]	; 279e8 <main@@Base+0x114c8>
   279b4:	add	r3, pc, r0
   279b8:	ldr	r0, [fp, #-4]
   279bc:	ldr	r1, [fp, #-8]
   279c0:	movw	r2, #3
   279c4:	str	r2, [sp, #16]
   279c8:	ldr	ip, [sp, #16]
   279cc:	str	ip, [sp]
   279d0:	movw	lr, #2
   279d4:	and	lr, lr, #255	; 0xff
   279d8:	str	lr, [sp, #4]
   279dc:	bl	3bd74 <flatcc_json_printer_uint8_field@@Base>
   279e0:	mov	sp, fp
   279e4:	pop	{fp, pc}
   279e8:	andeq	r1, r2, pc, ror ip
   279ec:	andeq	r1, r2, ip, lsr #25
   279f0:	andeq	r1, r2, sp, ror #25
   279f4:			; <UNDEFINED> instruction: 0xfffffa1c
   279f8:	andeq	r1, r2, r1, ror #22
   279fc:			; <UNDEFINED> instruction: 0xfffffa68
   27a00:	sub	sp, sp, #8
   27a04:	str	r0, [sp, #4]
   27a08:	str	r1, [sp]
   27a0c:	add	sp, sp, #8
   27a10:	bx	lr
   27a14:	push	{fp, lr}
   27a18:	mov	fp, sp
   27a1c:	sub	sp, sp, #40	; 0x28
   27a20:	ldr	r2, [pc, #224]	; 27b08 <main@@Base+0x115e8>
   27a24:	add	r3, pc, r2
   27a28:	ldr	r2, [pc, #220]	; 27b0c <main@@Base+0x115ec>
   27a2c:	add	r2, pc, r2
   27a30:	str	r0, [fp, #-4]
   27a34:	str	r1, [fp, #-8]
   27a38:	ldr	r0, [fp, #-4]
   27a3c:	ldr	r1, [fp, #-8]
   27a40:	movw	ip, #0
   27a44:	str	r2, [fp, #-12]
   27a48:	mov	r2, ip
   27a4c:	movw	ip, #6
   27a50:	str	ip, [sp]
   27a54:	ldr	ip, [fp, #-12]
   27a58:	str	ip, [sp, #4]
   27a5c:	bl	42d70 <flatcc_json_printer_table_field@@Base>
   27a60:	ldr	r0, [pc, #152]	; 27b00 <main@@Base+0x115e0>
   27a64:	add	r3, pc, r0
   27a68:	ldr	r0, [pc, #148]	; 27b04 <main@@Base+0x115e4>
   27a6c:	add	r0, pc, r0
   27a70:	ldr	r1, [fp, #-4]
   27a74:	ldr	r2, [fp, #-8]
   27a78:	str	r0, [fp, #-16]
   27a7c:	mov	r0, r1
   27a80:	mov	r1, r2
   27a84:	movw	r2, #1
   27a88:	movw	ip, #5
   27a8c:	str	ip, [sp]
   27a90:	ldr	ip, [fp, #-16]
   27a94:	str	ip, [sp, #4]
   27a98:	bl	42d70 <flatcc_json_printer_table_field@@Base>
   27a9c:	ldr	r0, [pc, #80]	; 27af4 <main@@Base+0x115d4>
   27aa0:	add	r3, pc, r0
   27aa4:	ldr	r0, [pc, #76]	; 27af8 <main@@Base+0x115d8>
   27aa8:	add	r0, pc, r0
   27aac:	ldr	r1, [pc, #72]	; 27afc <main@@Base+0x115dc>
   27ab0:	add	r1, pc, r1
   27ab4:	ldr	r2, [fp, #-4]
   27ab8:	ldr	ip, [fp, #-8]
   27abc:	str	r0, [sp, #20]
   27ac0:	mov	r0, r2
   27ac4:	str	r1, [sp, #16]
   27ac8:	mov	r1, ip
   27acc:	movw	r2, #3
   27ad0:	movw	ip, #7
   27ad4:	str	ip, [sp]
   27ad8:	ldr	ip, [sp, #20]
   27adc:	str	ip, [sp, #4]
   27ae0:	ldr	lr, [sp, #16]
   27ae4:	str	lr, [sp, #8]
   27ae8:	bl	42908 <flatcc_json_printer_union_vector_field@@Base>
   27aec:	mov	sp, fp
   27af0:	pop	{fp, pc}
   27af4:	andeq	r1, r2, r4, lsr #23
   27af8:			; <UNDEFINED> instruction: 0xfffff9e8
   27afc:			; <UNDEFINED> instruction: 0xfffffab8
   27b00:	ldrdeq	r1, [r2], -sl
   27b04:	andeq	r0, r0, r0, lsl #3
   27b08:	andeq	r1, r2, r3, lsl ip
   27b0c:	ldrdeq	r0, [r0], -ip
   27b10:	push	{fp, lr}
   27b14:	mov	fp, sp
   27b18:	sub	sp, sp, #32
   27b1c:	ldr	r2, [pc, #200]	; 27bec <main@@Base+0x116cc>
   27b20:	add	r3, pc, r2
   27b24:	ldr	r2, [pc, #196]	; 27bf0 <main@@Base+0x116d0>
   27b28:	add	r2, pc, r2
   27b2c:	str	r0, [fp, #-4]
   27b30:	str	r1, [fp, #-8]
   27b34:	ldr	r0, [fp, #-4]
   27b38:	ldr	r1, [fp, #-8]
   27b3c:	movw	ip, #0
   27b40:	str	r2, [fp, #-12]
   27b44:	mov	r2, ip
   27b48:	movw	ip, #21
   27b4c:	str	ip, [sp]
   27b50:	ldr	ip, [fp, #-12]
   27b54:	str	ip, [sp, #4]
   27b58:	bl	42d70 <flatcc_json_printer_table_field@@Base>
   27b5c:	ldr	r0, [pc, #128]	; 27be4 <main@@Base+0x116c4>
   27b60:	add	r3, pc, r0
   27b64:	ldr	r0, [pc, #124]	; 27be8 <main@@Base+0x116c8>
   27b68:	add	r0, pc, r0
   27b6c:	ldr	r1, [fp, #-4]
   27b70:	ldr	r2, [fp, #-8]
   27b74:	str	r0, [sp, #16]
   27b78:	mov	r0, r1
   27b7c:	mov	r1, r2
   27b80:	movw	r2, #1
   27b84:	movw	ip, #22
   27b88:	str	ip, [sp]
   27b8c:	ldr	ip, [sp, #16]
   27b90:	str	ip, [sp, #4]
   27b94:	bl	42d70 <flatcc_json_printer_table_field@@Base>
   27b98:	ldr	r0, [pc, #60]	; 27bdc <main@@Base+0x116bc>
   27b9c:	add	r3, pc, r0
   27ba0:	ldr	r0, [pc, #56]	; 27be0 <main@@Base+0x116c0>
   27ba4:	add	r0, pc, r0
   27ba8:	ldr	r1, [fp, #-4]
   27bac:	ldr	r2, [fp, #-8]
   27bb0:	str	r0, [sp, #12]
   27bb4:	mov	r0, r1
   27bb8:	mov	r1, r2
   27bbc:	movw	r2, #2
   27bc0:	movw	ip, #22
   27bc4:	str	ip, [sp]
   27bc8:	ldr	ip, [sp, #12]
   27bcc:	str	ip, [sp, #4]
   27bd0:	bl	42d70 <flatcc_json_printer_table_field@@Base>
   27bd4:	mov	sp, fp
   27bd8:	pop	{fp, pc}
   27bdc:	ldrdeq	r1, [r2], -sp
   27be0:			; <UNDEFINED> instruction: 0x000004b0
   27be4:	andeq	r1, r2, r2, lsl #22
   27be8:	andeq	r0, r0, r0, ror #8
   27bec:	andeq	r1, r2, ip, lsr #22
   27bf0:	andeq	r0, r0, r0, lsr #5
   27bf4:	push	{fp, lr}
   27bf8:	mov	fp, sp
   27bfc:	sub	sp, sp, #56	; 0x38
   27c00:	ldr	r2, [pc, #444]	; 27dc4 <main@@Base+0x118a4>
   27c04:	add	r3, pc, r2
   27c08:	ldr	r2, [pc, #440]	; 27dc8 <main@@Base+0x118a8>
   27c0c:	add	r2, pc, r2
   27c10:	ldr	ip, [pc, #436]	; 27dcc <main@@Base+0x118ac>
   27c14:	add	ip, pc, ip
   27c18:	str	r0, [fp, #-4]
   27c1c:	str	r1, [fp, #-8]
   27c20:	ldr	r0, [fp, #-4]
   27c24:	ldr	r1, [fp, #-8]
   27c28:	movw	lr, #1
   27c2c:	str	r2, [fp, #-12]
   27c30:	mov	r2, lr
   27c34:	movw	lr, #14
   27c38:	str	lr, [sp]
   27c3c:	ldr	lr, [fp, #-12]
   27c40:	str	lr, [sp, #4]
   27c44:	str	ip, [sp, #8]
   27c48:	bl	42e38 <flatcc_json_printer_union_field@@Base>
   27c4c:	ldr	r0, [pc, #356]	; 27db8 <main@@Base+0x11898>
   27c50:	add	r3, pc, r0
   27c54:	ldr	r0, [pc, #352]	; 27dbc <main@@Base+0x1189c>
   27c58:	add	r0, pc, r0
   27c5c:	ldr	r1, [pc, #348]	; 27dc0 <main@@Base+0x118a0>
   27c60:	add	r1, pc, r1
   27c64:	ldr	r2, [fp, #-4]
   27c68:	ldr	ip, [fp, #-8]
   27c6c:	str	r0, [fp, #-16]
   27c70:	mov	r0, r2
   27c74:	str	r1, [fp, #-20]	; 0xffffffec
   27c78:	mov	r1, ip
   27c7c:	movw	r2, #3
   27c80:	movw	ip, #10
   27c84:	str	ip, [sp]
   27c88:	ldr	ip, [fp, #-16]
   27c8c:	str	ip, [sp, #4]
   27c90:	ldr	lr, [fp, #-20]	; 0xffffffec
   27c94:	str	lr, [sp, #8]
   27c98:	bl	42e38 <flatcc_json_printer_union_field@@Base>
   27c9c:	ldr	r0, [pc, #264]	; 27dac <main@@Base+0x1188c>
   27ca0:	add	r3, pc, r0
   27ca4:	ldr	r0, [pc, #260]	; 27db0 <main@@Base+0x11890>
   27ca8:	add	r0, pc, r0
   27cac:	ldr	r1, [pc, #256]	; 27db4 <main@@Base+0x11894>
   27cb0:	add	r1, pc, r1
   27cb4:	ldr	r2, [fp, #-4]
   27cb8:	ldr	ip, [fp, #-8]
   27cbc:	str	r0, [fp, #-24]	; 0xffffffe8
   27cc0:	mov	r0, r2
   27cc4:	str	r1, [sp, #28]
   27cc8:	mov	r1, ip
   27ccc:	movw	r2, #5
   27cd0:	movw	ip, #9
   27cd4:	str	ip, [sp]
   27cd8:	ldr	ip, [fp, #-24]	; 0xffffffe8
   27cdc:	str	ip, [sp, #4]
   27ce0:	ldr	lr, [sp, #28]
   27ce4:	str	lr, [sp, #8]
   27ce8:	bl	42e38 <flatcc_json_printer_union_field@@Base>
   27cec:	ldr	r0, [pc, #172]	; 27da0 <main@@Base+0x11880>
   27cf0:	add	r3, pc, r0
   27cf4:	ldr	r0, [pc, #168]	; 27da4 <main@@Base+0x11884>
   27cf8:	add	r0, pc, r0
   27cfc:	ldr	r1, [pc, #164]	; 27da8 <main@@Base+0x11888>
   27d00:	add	r1, pc, r1
   27d04:	ldr	r2, [fp, #-4]
   27d08:	ldr	ip, [fp, #-8]
   27d0c:	str	r0, [sp, #24]
   27d10:	mov	r0, r2
   27d14:	str	r1, [sp, #20]
   27d18:	mov	r1, ip
   27d1c:	movw	r2, #7
   27d20:	movw	ip, #5
   27d24:	str	ip, [sp]
   27d28:	ldr	ip, [sp, #24]
   27d2c:	str	ip, [sp, #4]
   27d30:	ldr	lr, [sp, #20]
   27d34:	str	lr, [sp, #8]
   27d38:	bl	42e38 <flatcc_json_printer_union_field@@Base>
   27d3c:	ldr	r0, [pc, #80]	; 27d94 <main@@Base+0x11874>
   27d40:	add	r3, pc, r0
   27d44:	ldr	r0, [pc, #76]	; 27d98 <main@@Base+0x11878>
   27d48:	add	r0, pc, r0
   27d4c:	ldr	r1, [pc, #72]	; 27d9c <main@@Base+0x1187c>
   27d50:	add	r1, pc, r1
   27d54:	ldr	r2, [fp, #-4]
   27d58:	ldr	ip, [fp, #-8]
   27d5c:	str	r0, [sp, #16]
   27d60:	mov	r0, r2
   27d64:	str	r1, [sp, #12]
   27d68:	mov	r1, ip
   27d6c:	movw	r2, #9
   27d70:	movw	ip, #10
   27d74:	str	ip, [sp]
   27d78:	ldr	ip, [sp, #16]
   27d7c:	str	ip, [sp, #4]
   27d80:	ldr	lr, [sp, #12]
   27d84:	str	lr, [sp, #8]
   27d88:	bl	42908 <flatcc_json_printer_union_vector_field@@Base>
   27d8c:	mov	sp, fp
   27d90:	pop	{fp, pc}
   27d94:	strdeq	r1, [r2], -r9
   27d98:	muleq	r0, r8, r3
   27d9c:	ldrdeq	r0, [r0], -r4
   27da0:	andeq	r1, r2, r3, asr #20
   27da4:	andeq	r0, r0, r8, ror #7
   27da8:	andeq	r0, r0, r4, lsr #10
   27dac:	andeq	r1, r2, r9, lsl #21
   27db0:	andeq	r0, r0, r8, lsr r4
   27db4:	andeq	r0, r0, r4, ror r5
   27db8:	andeq	r1, r2, lr, asr #21
   27dbc:	andeq	r0, r0, r8, lsl #9
   27dc0:	andeq	r0, r0, r4, asr #11
   27dc4:	andeq	r1, r2, fp, lsl #22
   27dc8:	ldrdeq	r0, [r0], -r4
   27dcc:	andeq	r0, r0, r0, lsl r6
   27dd0:	push	{fp, lr}
   27dd4:	mov	fp, sp
   27dd8:	sub	sp, sp, #40	; 0x28
   27ddc:	ldr	r2, [pc, #476]	; 27fc0 <main@@Base+0x11aa0>
   27de0:	add	r3, pc, r2
   27de4:	str	r0, [fp, #-4]
   27de8:	str	r1, [fp, #-8]
   27dec:	ldr	r0, [fp, #-4]
   27df0:	ldr	r1, [fp, #-8]
   27df4:	movw	r2, #0
   27df8:	movw	ip, #4
   27dfc:	str	ip, [sp]
   27e00:	bl	3b7bc <flatcc_json_printer_string_field@@Base>
   27e04:	ldr	r0, [pc, #432]	; 27fbc <main@@Base+0x11a9c>
   27e08:	add	r3, pc, r0
   27e0c:	ldr	r0, [fp, #-4]
   27e10:	ldr	r1, [fp, #-8]
   27e14:	movw	r2, #1
   27e18:	movw	ip, #9
   27e1c:	str	ip, [sp]
   27e20:	movw	ip, #0
   27e24:	str	ip, [sp, #4]
   27e28:	bl	3bfd4 <flatcc_json_printer_uint32_field@@Base>
   27e2c:	ldr	r0, [pc, #388]	; 27fb8 <main@@Base+0x11a98>
   27e30:	add	r3, pc, r0
   27e34:	ldr	r0, [fp, #-4]
   27e38:	ldr	r1, [fp, #-8]
   27e3c:	movw	r2, #2
   27e40:	movw	ip, #4
   27e44:	str	ip, [sp]
   27e48:	bl	3b7bc <flatcc_json_printer_string_field@@Base>
   27e4c:	ldr	r0, [pc, #352]	; 27fb4 <main@@Base+0x11a94>
   27e50:	add	r0, pc, r0
   27e54:	ldr	r1, [fp, #-4]
   27e58:	ldr	r2, [fp, #-8]
   27e5c:	mov	r3, sp
   27e60:	mov	ip, #0
   27e64:	str	ip, [r3, #12]
   27e68:	str	ip, [r3, #8]
   27e6c:	mov	ip, #8
   27e70:	str	ip, [r3]
   27e74:	ldr	r3, [pc, #328]	; 27fc4 <main@@Base+0x11aa4>
   27e78:	add	r3, pc, r3
   27e7c:	mov	ip, #3
   27e80:	str	r0, [fp, #-12]
   27e84:	mov	r0, r1
   27e88:	mov	r1, r2
   27e8c:	mov	r2, ip
   27e90:	bl	3c5ec <flatcc_json_printer_int64_field@@Base>
   27e94:	ldr	r0, [pc, #276]	; 27fb0 <main@@Base+0x11a90>
   27e98:	add	r3, pc, r0
   27e9c:	ldr	r0, [fp, #-4]
   27ea0:	ldr	r1, [fp, #-8]
   27ea4:	movw	r2, #4
   27ea8:	str	r2, [fp, #-16]
   27eac:	ldr	ip, [fp, #-16]
   27eb0:	str	ip, [sp]
   27eb4:	bl	3b7bc <flatcc_json_printer_string_field@@Base>
   27eb8:	ldr	r0, [pc, #236]	; 27fac <main@@Base+0x11a8c>
   27ebc:	add	r0, pc, r0
   27ec0:	ldr	r1, [fp, #-4]
   27ec4:	ldr	r2, [fp, #-8]
   27ec8:	mov	r3, sp
   27ecc:	mov	ip, #0
   27ed0:	str	ip, [r3, #12]
   27ed4:	str	ip, [r3, #8]
   27ed8:	mov	ip, #8
   27edc:	str	ip, [r3]
   27ee0:	ldr	r3, [pc, #224]	; 27fc8 <main@@Base+0x11aa8>
   27ee4:	add	r3, pc, r3
   27ee8:	mov	ip, #5
   27eec:	str	r0, [sp, #20]
   27ef0:	mov	r0, r1
   27ef4:	mov	r1, r2
   27ef8:	mov	r2, ip
   27efc:	bl	3c5ec <flatcc_json_printer_int64_field@@Base>
   27f00:	ldr	r0, [pc, #160]	; 27fa8 <main@@Base+0x11a88>
   27f04:	add	r3, pc, r0
   27f08:	ldr	r0, [fp, #-4]
   27f0c:	ldr	r1, [fp, #-8]
   27f10:	movw	r2, #6
   27f14:	movw	ip, #9
   27f18:	str	ip, [sp]
   27f1c:	movw	ip, #0
   27f20:	str	ip, [sp, #4]
   27f24:	bl	3bfd4 <flatcc_json_printer_uint32_field@@Base>
   27f28:	ldr	r0, [pc, #116]	; 27fa4 <main@@Base+0x11a84>
   27f2c:	add	r0, pc, r0
   27f30:	ldr	r1, [fp, #-4]
   27f34:	ldr	r2, [fp, #-8]
   27f38:	mov	r3, sp
   27f3c:	mov	ip, #0
   27f40:	str	ip, [r3, #12]
   27f44:	str	ip, [r3, #8]
   27f48:	mov	ip, #8
   27f4c:	str	ip, [r3]
   27f50:	ldr	r3, [pc, #116]	; 27fcc <main@@Base+0x11aac>
   27f54:	add	r3, pc, r3
   27f58:	mov	ip, #7
   27f5c:	str	r0, [sp, #16]
   27f60:	mov	r0, r1
   27f64:	mov	r1, r2
   27f68:	mov	r2, ip
   27f6c:	bl	3c5ec <flatcc_json_printer_int64_field@@Base>
   27f70:	ldr	r0, [pc, #40]	; 27fa0 <main@@Base+0x11a80>
   27f74:	add	r3, pc, r0
   27f78:	ldr	r0, [fp, #-4]
   27f7c:	ldr	r1, [fp, #-8]
   27f80:	movw	r2, #8
   27f84:	movw	ip, #9
   27f88:	str	ip, [sp]
   27f8c:	movw	ip, #0
   27f90:	str	ip, [sp, #4]
   27f94:	bl	3bfd4 <flatcc_json_printer_uint32_field@@Base>
   27f98:	mov	sp, fp
   27f9c:	pop	{fp, pc}
   27fa0:	andeq	r1, r2, sl, asr r7
   27fa4:	muleq	r2, r9, r7
   27fa8:			; <UNDEFINED> instruction: 0x000217b7
   27fac:	strdeq	r1, [r2], -r6
   27fb0:	andeq	r1, r2, r5, lsl r8
   27fb4:	andeq	r1, r2, r4, asr r8
   27fb8:	andeq	r1, r2, pc, ror #16
   27fbc:	andeq	r1, r2, sp, lsl #17
   27fc0:			; <UNDEFINED> instruction: 0x000218b0
   27fc4:	andeq	r1, r2, ip, lsr #16
   27fc8:	andeq	r1, r2, lr, asr #15
   27fcc:	andeq	r1, r2, r1, ror r7
   27fd0:	push	{fp, lr}
   27fd4:	mov	fp, sp
   27fd8:	sub	sp, sp, #32
   27fdc:	ldr	r2, [pc, #112]	; 28054 <main@@Base+0x11b34>
   27fe0:	add	r2, pc, r2
   27fe4:	str	r0, [fp, #-4]
   27fe8:	str	r1, [fp, #-8]
   27fec:	ldr	r0, [fp, #-4]
   27ff0:	ldr	r1, [fp, #-8]
   27ff4:	mov	r3, sp
   27ff8:	mov	ip, #0
   27ffc:	str	ip, [r3, #12]
   28000:	str	ip, [r3, #8]
   28004:	mov	lr, #15
   28008:	str	lr, [r3]
   2800c:	ldr	r3, [pc, #68]	; 28058 <main@@Base+0x11b38>
   28010:	add	r3, pc, r3
   28014:	str	r2, [fp, #-12]
   28018:	mov	r2, ip
   2801c:	bl	3c5ec <flatcc_json_printer_int64_field@@Base>
   28020:	ldr	r0, [pc, #40]	; 28050 <main@@Base+0x11b30>
   28024:	add	r3, pc, r0
   28028:	ldr	r0, [fp, #-4]
   2802c:	ldr	r1, [fp, #-8]
   28030:	movw	r2, #1
   28034:	movw	ip, #16
   28038:	str	ip, [sp]
   2803c:	movw	ip, #0
   28040:	str	ip, [sp, #4]
   28044:	bl	3bfd4 <flatcc_json_printer_uint32_field@@Base>
   28048:	mov	sp, fp
   2804c:	pop	{fp, pc}
   28050:	andeq	r1, r2, r4, asr #13
   28054:	strdeq	r1, [r2], -r8
   28058:	andeq	r1, r2, r8, asr #13
   2805c:	push	{fp, lr}
   28060:	mov	fp, sp
   28064:	sub	sp, sp, #32
   28068:	ldr	r2, [pc, #112]	; 280e0 <main@@Base+0x11bc0>
   2806c:	add	r2, pc, r2
   28070:	str	r0, [fp, #-4]
   28074:	str	r1, [fp, #-8]
   28078:	ldr	r0, [fp, #-4]
   2807c:	ldr	r1, [fp, #-8]
   28080:	mov	r3, sp
   28084:	mov	ip, #0
   28088:	str	ip, [r3, #12]
   2808c:	str	ip, [r3, #8]
   28090:	mov	lr, #15
   28094:	str	lr, [r3]
   28098:	ldr	r3, [pc, #68]	; 280e4 <main@@Base+0x11bc4>
   2809c:	add	r3, pc, r3
   280a0:	str	r2, [fp, #-12]
   280a4:	mov	r2, ip
   280a8:	bl	3c5ec <flatcc_json_printer_int64_field@@Base>
   280ac:	ldr	r0, [pc, #40]	; 280dc <main@@Base+0x11bbc>
   280b0:	add	r3, pc, r0
   280b4:	ldr	r0, [fp, #-4]
   280b8:	ldr	r1, [fp, #-8]
   280bc:	movw	r2, #1
   280c0:	movw	ip, #21
   280c4:	str	ip, [sp]
   280c8:	movw	ip, #0
   280cc:	str	ip, [sp, #4]
   280d0:	bl	3bfd4 <flatcc_json_printer_uint32_field@@Base>
   280d4:	mov	sp, fp
   280d8:	pop	{fp, pc}
   280dc:	andeq	r1, r2, r9, asr #12
   280e0:	andeq	r1, r2, ip, ror #12
   280e4:	andeq	r1, r2, ip, lsr r6
   280e8:	push	{fp, lr}
   280ec:	mov	fp, sp
   280f0:	sub	sp, sp, #16
   280f4:	str	r0, [fp, #-4]
   280f8:	strb	r1, [fp, #-5]
   280fc:	ldrb	r0, [fp, #-5]
   28100:	mov	r1, r0
   28104:	cmp	r0, #2
   28108:	str	r1, [sp, #4]
   2810c:	beq	28164 <main@@Base+0x11c44>
   28110:	b	28114 <main@@Base+0x11bf4>
   28114:	ldr	r0, [sp, #4]
   28118:	cmp	r0, #8
   2811c:	beq	2817c <main@@Base+0x11c5c>
   28120:	b	28124 <main@@Base+0x11c04>
   28124:	ldr	r0, [sp, #4]
   28128:	cmp	r0, #9
   2812c:	beq	28194 <main@@Base+0x11c74>
   28130:	b	28134 <main@@Base+0x11c14>
   28134:	ldr	r0, [sp, #4]
   28138:	cmp	r0, #10
   2813c:	beq	281ac <main@@Base+0x11c8c>
   28140:	b	28144 <main@@Base+0x11c24>
   28144:	ldr	r0, [sp, #4]
   28148:	cmp	r0, #11
   2814c:	beq	281c4 <main@@Base+0x11ca4>
   28150:	b	28154 <main@@Base+0x11c34>
   28154:	ldr	r0, [sp, #4]
   28158:	cmp	r0, #255	; 0xff
   2815c:	beq	281dc <main@@Base+0x11cbc>
   28160:	b	281f4 <main@@Base+0x11cd4>
   28164:	ldr	r0, [pc, #184]	; 28224 <main@@Base+0x11d04>
   28168:	add	r1, pc, r0
   2816c:	ldr	r0, [fp, #-4]
   28170:	movw	r2, #5
   28174:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   28178:	b	28208 <main@@Base+0x11ce8>
   2817c:	ldr	r0, [pc, #156]	; 28220 <main@@Base+0x11d00>
   28180:	add	r1, pc, r0
   28184:	ldr	r0, [fp, #-4]
   28188:	movw	r2, #8
   2818c:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   28190:	b	28208 <main@@Base+0x11ce8>
   28194:	ldr	r0, [pc, #128]	; 2821c <main@@Base+0x11cfc>
   28198:	add	r1, pc, r0
   2819c:	ldr	r0, [fp, #-4]
   281a0:	movw	r2, #5
   281a4:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   281a8:	b	28208 <main@@Base+0x11ce8>
   281ac:	ldr	r0, [pc, #100]	; 28218 <main@@Base+0x11cf8>
   281b0:	add	r1, pc, r0
   281b4:	ldr	r0, [fp, #-4]
   281b8:	movw	r2, #7
   281bc:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   281c0:	b	28208 <main@@Base+0x11ce8>
   281c4:	ldr	r0, [pc, #72]	; 28214 <main@@Base+0x11cf4>
   281c8:	add	r1, pc, r0
   281cc:	ldr	r0, [fp, #-4]
   281d0:	movw	r2, #5
   281d4:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   281d8:	b	28208 <main@@Base+0x11ce8>
   281dc:	ldr	r0, [pc, #44]	; 28210 <main@@Base+0x11cf0>
   281e0:	add	r1, pc, r0
   281e4:	ldr	r0, [fp, #-4]
   281e8:	movw	r2, #6
   281ec:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   281f0:	b	28208 <main@@Base+0x11ce8>
   281f4:	ldr	r0, [pc, #44]	; 28228 <main@@Base+0x11d08>
   281f8:	add	r1, pc, r0
   281fc:	ldr	r0, [fp, #-4]
   28200:	movw	r2, #4
   28204:	bl	3b5b8 <flatcc_json_printer_enum@@Base>
   28208:	mov	sp, fp
   2820c:	pop	{fp, pc}
   28210:	andeq	r1, r2, r7, lsl #11
   28214:	muleq	r2, r9, r5
   28218:	andeq	r1, r2, r9, lsr #11
   2821c:			; <UNDEFINED> instruction: 0x000215bb
   28220:	andeq	r1, r2, sl, asr #11
   28224:	ldrdeq	r1, [r2], -ip
   28228:	ldrdeq	r2, [r2], -r1
   2822c:	push	{fp, lr}
   28230:	mov	fp, sp
   28234:	sub	sp, sp, #16
   28238:	str	r0, [fp, #-4]
   2823c:	str	r1, [sp, #8]
   28240:	ldr	r0, [sp, #8]
   28244:	ldrb	r0, [r0, #8]
   28248:	mov	r1, r0
   2824c:	cmp	r0, #2
   28250:	str	r1, [sp, #4]
   28254:	beq	282ac <main@@Base+0x11d8c>
   28258:	b	2825c <main@@Base+0x11d3c>
   2825c:	ldr	r0, [sp, #4]
   28260:	cmp	r0, #8
   28264:	beq	282c4 <main@@Base+0x11da4>
   28268:	b	2826c <main@@Base+0x11d4c>
   2826c:	ldr	r0, [sp, #4]
   28270:	cmp	r0, #9
   28274:	beq	282dc <main@@Base+0x11dbc>
   28278:	b	2827c <main@@Base+0x11d5c>
   2827c:	ldr	r0, [sp, #4]
   28280:	cmp	r0, #10
   28284:	beq	282f4 <main@@Base+0x11dd4>
   28288:	b	2828c <main@@Base+0x11d6c>
   2828c:	ldr	r0, [sp, #4]
   28290:	cmp	r0, #11
   28294:	beq	2830c <main@@Base+0x11dec>
   28298:	b	2829c <main@@Base+0x11d7c>
   2829c:	ldr	r0, [sp, #4]
   282a0:	cmp	r0, #255	; 0xff
   282a4:	beq	2831c <main@@Base+0x11dfc>
   282a8:	b	2832c <main@@Base+0x11e0c>
   282ac:	ldr	r0, [pc, #144]	; 28344 <main@@Base+0x11e24>
   282b0:	add	r2, pc, r0
   282b4:	ldr	r0, [fp, #-4]
   282b8:	ldr	r1, [sp, #8]
   282bc:	bl	4314c <flatcc_json_printer_union_table@@Base>
   282c0:	b	28330 <main@@Base+0x11e10>
   282c4:	ldr	r0, [pc, #116]	; 28340 <main@@Base+0x11e20>
   282c8:	add	r2, pc, r0
   282cc:	ldr	r0, [fp, #-4]
   282d0:	ldr	r1, [sp, #8]
   282d4:	bl	431a4 <flatcc_json_printer_union_struct@@Base>
   282d8:	b	28330 <main@@Base+0x11e10>
   282dc:	ldr	r0, [pc, #88]	; 2833c <main@@Base+0x11e1c>
   282e0:	add	r2, pc, r0
   282e4:	ldr	r0, [fp, #-4]
   282e8:	ldr	r1, [sp, #8]
   282ec:	bl	431a4 <flatcc_json_printer_union_struct@@Base>
   282f0:	b	28330 <main@@Base+0x11e10>
   282f4:	ldr	r0, [pc, #60]	; 28338 <main@@Base+0x11e18>
   282f8:	add	r2, pc, r0
   282fc:	ldr	r0, [fp, #-4]
   28300:	ldr	r1, [sp, #8]
   28304:	bl	431a4 <flatcc_json_printer_union_struct@@Base>
   28308:	b	28330 <main@@Base+0x11e10>
   2830c:	ldr	r0, [fp, #-4]
   28310:	ldr	r1, [sp, #8]
   28314:	bl	43280 <flatcc_json_printer_union_string@@Base>
   28318:	b	28330 <main@@Base+0x11e10>
   2831c:	ldr	r0, [fp, #-4]
   28320:	ldr	r1, [sp, #8]
   28324:	bl	43280 <flatcc_json_printer_union_string@@Base>
   28328:	b	28330 <main@@Base+0x11e10>
   2832c:	b	28330 <main@@Base+0x11e10>
   28330:	mov	sp, fp
   28334:	pop	{fp, pc}
   28338:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2833c:	andeq	r0, r0, r8, lsl #2
   28340:	andeq	r0, r0, r4, asr #1
   28344:	muleq	r0, r0, r0
   28348:	push	{fp, lr}
   2834c:	mov	fp, sp
   28350:	sub	sp, sp, #24
   28354:	ldr	r2, [pc, #52]	; 28390 <main@@Base+0x11e70>
   28358:	add	r3, pc, r2
   2835c:	str	r0, [fp, #-4]
   28360:	str	r1, [fp, #-8]
   28364:	ldr	r0, [fp, #-4]
   28368:	ldr	r1, [fp, #-8]
   2836c:	movw	r2, #0
   28370:	str	r2, [sp, #12]
   28374:	movw	ip, #19
   28378:	str	ip, [sp]
   2837c:	ldr	ip, [sp, #12]
   28380:	str	ip, [sp, #4]
   28384:	bl	3c4c4 <flatcc_json_printer_int32_field@@Base>
   28388:	mov	sp, fp
   2838c:	pop	{fp, pc}
   28390:	andeq	r1, r2, r6, lsl r4
   28394:	push	{r4, sl, fp, lr}
   28398:	add	fp, sp, #8
   2839c:	sub	sp, sp, #24
   283a0:	ldr	r2, [pc, #68]	; 283ec <main@@Base+0x11ecc>
   283a4:	add	r2, pc, r2
   283a8:	str	r0, [fp, #-12]
   283ac:	str	r1, [sp, #16]
   283b0:	ldr	r0, [fp, #-12]
   283b4:	ldr	r1, [sp, #16]
   283b8:	movw	r3, #0
   283bc:	str	r1, [sp, #12]
   283c0:	mov	r1, r3
   283c4:	ldr	ip, [sp, #12]
   283c8:	str	r2, [sp, #8]
   283cc:	mov	r2, ip
   283d0:	ldr	lr, [sp, #8]
   283d4:	str	lr, [sp]
   283d8:	movw	r4, #11
   283dc:	str	r4, [sp, #4]
   283e0:	bl	3d7c0 <flatcc_json_printer_uint16_struct_field@@Base>
   283e4:	sub	sp, fp, #8
   283e8:	pop	{r4, sl, fp, pc}
   283ec:	ldrdeq	r1, [r2], -lr
   283f0:	push	{r4, sl, fp, lr}
   283f4:	add	fp, sp, #8
   283f8:	sub	sp, sp, #24
   283fc:	ldr	r2, [pc, #68]	; 28448 <main@@Base+0x11f28>
   28400:	add	r2, pc, r2
   28404:	str	r0, [fp, #-12]
   28408:	str	r1, [sp, #16]
   2840c:	ldr	r0, [fp, #-12]
   28410:	ldr	r1, [sp, #16]
   28414:	movw	r3, #0
   28418:	str	r1, [sp, #12]
   2841c:	mov	r1, r3
   28420:	ldr	ip, [sp, #12]
   28424:	str	r2, [sp, #8]
   28428:	mov	r2, ip
   2842c:	ldr	lr, [sp, #8]
   28430:	str	lr, [sp]
   28434:	movw	r4, #10
   28438:	str	r4, [sp, #4]
   2843c:	bl	3dae0 <flatcc_json_printer_int32_struct_field@@Base>
   28440:	sub	sp, fp, #8
   28444:	pop	{r4, sl, fp, pc}
   28448:	andeq	r1, r2, lr, lsl #7
   2844c:	push	{fp, lr}
   28450:	mov	fp, sp
   28454:	sub	sp, sp, #16
   28458:	str	r0, [sp, #8]
   2845c:	ldr	r0, [sp, #8]
   28460:	ldrb	r0, [r0, #12]
   28464:	sub	r0, r0, #1
   28468:	cmp	r0, #3
   2846c:	str	r0, [sp, #4]
   28470:	bhi	284f4 <main@@Base+0x11fd4>
   28474:	add	r0, pc, #8
   28478:	ldr	r1, [sp, #4]
   2847c:	ldr	r2, [r0, r1, lsl #2]
   28480:	add	pc, r0, r2
   28484:	andeq	r0, r0, r0, lsl r0
   28488:	andeq	r0, r0, r8, lsr #32
   2848c:	andeq	r0, r0, r0, asr #32
   28490:	andeq	r0, r0, r8, asr r0
   28494:	ldr	r0, [pc, #120]	; 28514 <main@@Base+0x11ff4>
   28498:	add	r1, pc, r0
   2849c:	ldr	r0, [sp, #8]
   284a0:	bl	30f18 <flatcc_verify_union_table@@Base>
   284a4:	str	r0, [fp, #-4]
   284a8:	b	284fc <main@@Base+0x11fdc>
   284ac:	ldr	r0, [pc, #92]	; 28510 <main@@Base+0x11ff0>
   284b0:	add	r1, pc, r0
   284b4:	ldr	r0, [sp, #8]
   284b8:	bl	30f18 <flatcc_verify_union_table@@Base>
   284bc:	str	r0, [fp, #-4]
   284c0:	b	284fc <main@@Base+0x11fdc>
   284c4:	ldr	r0, [pc, #64]	; 2850c <main@@Base+0x11fec>
   284c8:	add	r1, pc, r0
   284cc:	ldr	r0, [sp, #8]
   284d0:	bl	30f18 <flatcc_verify_union_table@@Base>
   284d4:	str	r0, [fp, #-4]
   284d8:	b	284fc <main@@Base+0x11fdc>
   284dc:	ldr	r0, [pc, #36]	; 28508 <main@@Base+0x11fe8>
   284e0:	add	r1, pc, r0
   284e4:	ldr	r0, [sp, #8]
   284e8:	bl	30f18 <flatcc_verify_union_table@@Base>
   284ec:	str	r0, [fp, #-4]
   284f0:	b	284fc <main@@Base+0x11fdc>
   284f4:	movw	r0, #0
   284f8:	str	r0, [fp, #-4]
   284fc:	ldr	r0, [fp, #-4]
   28500:	mov	sp, fp
   28504:	pop	{fp, pc}
   28508:	andeq	r0, r0, r4, lsr #6
   2850c:	andeq	r0, r0, r8, lsr #6
   28510:	andeq	r0, r0, r4, asr #4
   28514:			; <UNDEFINED> instruction: 0xffff2f08
   28518:	push	{fp, lr}
   2851c:	mov	fp, sp
   28520:	sub	sp, sp, #16
   28524:	str	r0, [sp, #8]
   28528:	ldr	r0, [sp, #8]
   2852c:	movw	r1, #0
   28530:	uxth	r1, r1
   28534:	movw	r2, #0
   28538:	bl	2ffc8 <flatcc_verify_string_field@@Base>
   2853c:	str	r0, [sp, #4]
   28540:	cmp	r0, #0
   28544:	beq	28554 <main@@Base+0x12034>
   28548:	ldr	r0, [sp, #4]
   2854c:	str	r0, [fp, #-4]
   28550:	b	285cc <main@@Base+0x120ac>
   28554:	ldr	r0, [sp, #8]
   28558:	movw	r1, #1
   2855c:	uxth	r1, r1
   28560:	movw	r2, #8
   28564:	movw	r3, #8
   28568:	uxth	r3, r3
   2856c:	bl	2fdbc <flatcc_verify_field@@Base>
   28570:	str	r0, [sp, #4]
   28574:	cmp	r0, #0
   28578:	beq	28588 <main@@Base+0x12068>
   2857c:	ldr	r0, [sp, #4]
   28580:	str	r0, [fp, #-4]
   28584:	b	285cc <main@@Base+0x120ac>
   28588:	ldr	r0, [sp, #8]
   2858c:	movw	r1, #2
   28590:	uxth	r2, r1
   28594:	str	r1, [sp]
   28598:	mov	r1, r2
   2859c:	movw	r2, #2
   285a0:	ldr	r3, [sp]
   285a4:	uxth	r3, r3
   285a8:	bl	2fdbc <flatcc_verify_field@@Base>
   285ac:	str	r0, [sp, #4]
   285b0:	cmp	r0, #0
   285b4:	beq	285c4 <main@@Base+0x120a4>
   285b8:	ldr	r0, [sp, #4]
   285bc:	str	r0, [fp, #-4]
   285c0:	b	285cc <main@@Base+0x120ac>
   285c4:	movw	r0, #0
   285c8:	str	r0, [fp, #-4]
   285cc:	ldr	r0, [fp, #-4]
   285d0:	mov	sp, fp
   285d4:	pop	{fp, pc}
   285d8:	sub	sp, sp, #4
   285dc:	str	r0, [sp]
   285e0:	movw	r0, #0
   285e4:	add	sp, sp, #4
   285e8:	bx	lr
   285ec:	push	{fp, lr}
   285f0:	mov	fp, sp
   285f4:	sub	sp, sp, #32
   285f8:	str	r0, [fp, #-8]
   285fc:	ldr	r0, [fp, #-8]
   28600:	movw	r1, #0
   28604:	uxth	r1, r1
   28608:	movw	r2, #0
   2860c:	movw	r3, #1
   28610:	movw	ip, #1
   28614:	uxth	ip, ip
   28618:	str	ip, [sp]
   2861c:	mvn	ip, #0
   28620:	str	ip, [sp, #4]
   28624:	bl	30324 <flatcc_verify_vector_field@@Base>
   28628:	str	r0, [fp, #-12]
   2862c:	cmp	r0, #0
   28630:	beq	28640 <main@@Base+0x12120>
   28634:	ldr	r0, [fp, #-12]
   28638:	str	r0, [fp, #-4]
   2863c:	b	286ec <main@@Base+0x121cc>
   28640:	ldr	r0, [fp, #-8]
   28644:	movw	r1, #1
   28648:	uxth	r2, r1
   2864c:	str	r1, [sp, #16]
   28650:	mov	r1, r2
   28654:	movw	r2, #0
   28658:	movw	r3, #1
   2865c:	ldr	ip, [sp, #16]
   28660:	uxth	lr, ip
   28664:	str	lr, [sp]
   28668:	mvn	lr, #0
   2866c:	str	lr, [sp, #4]
   28670:	bl	30324 <flatcc_verify_vector_field@@Base>
   28674:	str	r0, [fp, #-12]
   28678:	cmp	r0, #0
   2867c:	beq	2868c <main@@Base+0x1216c>
   28680:	ldr	r0, [fp, #-12]
   28684:	str	r0, [fp, #-4]
   28688:	b	286ec <main@@Base+0x121cc>
   2868c:	ldr	r0, [pc, #100]	; 286f8 <main@@Base+0x121d8>
   28690:	add	r0, pc, r0
   28694:	ldr	r1, [fp, #-8]
   28698:	str	r0, [sp, #12]
   2869c:	mov	r0, r1
   286a0:	movw	r1, #2
   286a4:	uxth	r1, r1
   286a8:	movw	r2, #0
   286ac:	str	r2, [sp, #8]
   286b0:	ldr	r3, [sp, #8]
   286b4:	movw	ip, #1
   286b8:	uxth	ip, ip
   286bc:	str	ip, [sp]
   286c0:	ldr	ip, [sp, #12]
   286c4:	str	ip, [sp, #4]
   286c8:	bl	31898 <flatcc_verify_table_as_nested_root@@Base>
   286cc:	str	r0, [fp, #-12]
   286d0:	cmp	r0, #0
   286d4:	beq	286e4 <main@@Base+0x121c4>
   286d8:	ldr	r0, [fp, #-12]
   286dc:	str	r0, [fp, #-4]
   286e0:	b	286ec <main@@Base+0x121cc>
   286e4:	movw	r0, #0
   286e8:	str	r0, [fp, #-4]
   286ec:	ldr	r0, [fp, #-4]
   286f0:	mov	sp, fp
   286f4:	pop	{fp, pc}
   286f8:			; <UNDEFINED> instruction: 0xffff2d10
   286fc:	push	{fp, lr}
   28700:	mov	fp, sp
   28704:	sub	sp, sp, #16
   28708:	str	r0, [sp, #8]
   2870c:	ldr	r0, [sp, #8]
   28710:	movw	r1, #0
   28714:	uxth	r1, r1
   28718:	movw	r2, #1
   2871c:	movw	r3, #1
   28720:	uxth	r3, r3
   28724:	bl	2fdbc <flatcc_verify_field@@Base>
   28728:	str	r0, [sp, #4]
   2872c:	cmp	r0, #0
   28730:	beq	28740 <main@@Base+0x12220>
   28734:	ldr	r0, [sp, #4]
   28738:	str	r0, [fp, #-4]
   2873c:	b	287ec <main@@Base+0x122cc>
   28740:	ldr	r0, [sp, #8]
   28744:	movw	r1, #1
   28748:	uxth	r2, r1
   2874c:	str	r1, [sp]
   28750:	mov	r1, r2
   28754:	movw	r2, #1
   28758:	ldr	r3, [sp]
   2875c:	uxth	r3, r3
   28760:	bl	2fdbc <flatcc_verify_field@@Base>
   28764:	str	r0, [sp, #4]
   28768:	cmp	r0, #0
   2876c:	beq	2877c <main@@Base+0x1225c>
   28770:	ldr	r0, [sp, #4]
   28774:	str	r0, [fp, #-4]
   28778:	b	287ec <main@@Base+0x122cc>
   2877c:	ldr	r0, [sp, #8]
   28780:	movw	r1, #2
   28784:	uxth	r1, r1
   28788:	movw	r2, #1
   2878c:	movw	r3, #1
   28790:	uxth	r3, r3
   28794:	bl	2fdbc <flatcc_verify_field@@Base>
   28798:	str	r0, [sp, #4]
   2879c:	cmp	r0, #0
   287a0:	beq	287b0 <main@@Base+0x12290>
   287a4:	ldr	r0, [sp, #4]
   287a8:	str	r0, [fp, #-4]
   287ac:	b	287ec <main@@Base+0x122cc>
   287b0:	ldr	r0, [sp, #8]
   287b4:	movw	r1, #3
   287b8:	uxth	r1, r1
   287bc:	movw	r2, #1
   287c0:	movw	r3, #1
   287c4:	uxth	r3, r3
   287c8:	bl	2fdbc <flatcc_verify_field@@Base>
   287cc:	str	r0, [sp, #4]
   287d0:	cmp	r0, #0
   287d4:	beq	287e4 <main@@Base+0x122c4>
   287d8:	ldr	r0, [sp, #4]
   287dc:	str	r0, [fp, #-4]
   287e0:	b	287ec <main@@Base+0x122cc>
   287e4:	movw	r0, #0
   287e8:	str	r0, [fp, #-4]
   287ec:	ldr	r0, [fp, #-4]
   287f0:	mov	sp, fp
   287f4:	pop	{fp, pc}
   287f8:	sub	sp, sp, #4
   287fc:	str	r0, [sp]
   28800:	movw	r0, #0
   28804:	add	sp, sp, #4
   28808:	bx	lr
   2880c:	push	{fp, lr}
   28810:	mov	fp, sp
   28814:	sub	sp, sp, #16
   28818:	ldr	r1, [pc, #172]	; 288cc <main@@Base+0x123ac>
   2881c:	add	r3, pc, r1
   28820:	str	r0, [sp, #8]
   28824:	ldr	r0, [sp, #8]
   28828:	movw	r1, #0
   2882c:	uxth	r1, r1
   28830:	movw	r2, #0
   28834:	bl	307e4 <flatcc_verify_table_field@@Base>
   28838:	str	r0, [sp, #4]
   2883c:	cmp	r0, #0
   28840:	beq	28850 <main@@Base+0x12330>
   28844:	ldr	r0, [sp, #4]
   28848:	str	r0, [fp, #-4]
   2884c:	b	288c0 <main@@Base+0x123a0>
   28850:	ldr	r0, [pc, #120]	; 288d0 <main@@Base+0x123b0>
   28854:	add	r3, pc, r0
   28858:	ldr	r0, [sp, #8]
   2885c:	movw	r1, #1
   28860:	uxth	r1, r1
   28864:	movw	r2, #0
   28868:	bl	307e4 <flatcc_verify_table_field@@Base>
   2886c:	str	r0, [sp, #4]
   28870:	cmp	r0, #0
   28874:	beq	28884 <main@@Base+0x12364>
   28878:	ldr	r0, [sp, #4]
   2887c:	str	r0, [fp, #-4]
   28880:	b	288c0 <main@@Base+0x123a0>
   28884:	ldr	r0, [pc, #72]	; 288d4 <main@@Base+0x123b4>
   28888:	add	r3, pc, r0
   2888c:	ldr	r0, [sp, #8]
   28890:	movw	r1, #3
   28894:	uxth	r1, r1
   28898:	movw	r2, #0
   2889c:	bl	31d38 <flatcc_verify_union_vector_field@@Base>
   288a0:	str	r0, [sp, #4]
   288a4:	cmp	r0, #0
   288a8:	beq	288b8 <main@@Base+0x12398>
   288ac:	ldr	r0, [sp, #4]
   288b0:	str	r0, [fp, #-4]
   288b4:	b	288c0 <main@@Base+0x123a0>
   288b8:	movw	r0, #0
   288bc:	str	r0, [fp, #-4]
   288c0:	ldr	r0, [fp, #-4]
   288c4:	mov	sp, fp
   288c8:	pop	{fp, pc}
   288cc:	strheq	r0, [r0], -r4
   288d0:	andeq	r0, r0, r8, asr #2
   288d4:			; <UNDEFINED> instruction: 0xfffffbbc
   288d8:	push	{fp, lr}
   288dc:	mov	fp, sp
   288e0:	sub	sp, sp, #16
   288e4:	ldr	r1, [pc, #172]	; 28998 <main@@Base+0x12478>
   288e8:	add	r3, pc, r1
   288ec:	str	r0, [sp, #8]
   288f0:	ldr	r0, [sp, #8]
   288f4:	movw	r1, #0
   288f8:	uxth	r1, r1
   288fc:	movw	r2, #0
   28900:	bl	307e4 <flatcc_verify_table_field@@Base>
   28904:	str	r0, [sp, #4]
   28908:	cmp	r0, #0
   2890c:	beq	2891c <main@@Base+0x123fc>
   28910:	ldr	r0, [sp, #4]
   28914:	str	r0, [fp, #-4]
   28918:	b	2898c <main@@Base+0x1246c>
   2891c:	ldr	r0, [pc, #120]	; 2899c <main@@Base+0x1247c>
   28920:	add	r3, pc, r0
   28924:	ldr	r0, [sp, #8]
   28928:	movw	r1, #1
   2892c:	uxth	r1, r1
   28930:	movw	r2, #0
   28934:	bl	307e4 <flatcc_verify_table_field@@Base>
   28938:	str	r0, [sp, #4]
   2893c:	cmp	r0, #0
   28940:	beq	28950 <main@@Base+0x12430>
   28944:	ldr	r0, [sp, #4]
   28948:	str	r0, [fp, #-4]
   2894c:	b	2898c <main@@Base+0x1246c>
   28950:	ldr	r0, [pc, #72]	; 289a0 <main@@Base+0x12480>
   28954:	add	r3, pc, r0
   28958:	ldr	r0, [sp, #8]
   2895c:	movw	r1, #2
   28960:	uxth	r1, r1
   28964:	movw	r2, #0
   28968:	bl	307e4 <flatcc_verify_table_field@@Base>
   2896c:	str	r0, [sp, #4]
   28970:	cmp	r0, #0
   28974:	beq	28984 <main@@Base+0x12464>
   28978:	ldr	r0, [sp, #4]
   2897c:	str	r0, [fp, #-4]
   28980:	b	2898c <main@@Base+0x1246c>
   28984:	movw	r0, #0
   28988:	str	r0, [fp, #-4]
   2898c:	ldr	r0, [fp, #-4]
   28990:	mov	sp, fp
   28994:	pop	{fp, pc}
   28998:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2899c:	muleq	r0, r8, r3
   289a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   289a4:	push	{fp, lr}
   289a8:	mov	fp, sp
   289ac:	sub	sp, sp, #16
   289b0:	ldr	r1, [pc, #276]	; 28acc <main@@Base+0x125ac>
   289b4:	add	r3, pc, r1
   289b8:	str	r0, [sp, #8]
   289bc:	ldr	r0, [sp, #8]
   289c0:	movw	r1, #1
   289c4:	uxth	r1, r1
   289c8:	movw	r2, #0
   289cc:	bl	31a40 <flatcc_verify_union_field@@Base>
   289d0:	str	r0, [sp, #4]
   289d4:	cmp	r0, #0
   289d8:	beq	289e8 <main@@Base+0x124c8>
   289dc:	ldr	r0, [sp, #4]
   289e0:	str	r0, [fp, #-4]
   289e4:	b	28ac0 <main@@Base+0x125a0>
   289e8:	ldr	r0, [pc, #224]	; 28ad0 <main@@Base+0x125b0>
   289ec:	add	r3, pc, r0
   289f0:	ldr	r0, [sp, #8]
   289f4:	movw	r1, #3
   289f8:	uxth	r1, r1
   289fc:	movw	r2, #0
   28a00:	bl	31a40 <flatcc_verify_union_field@@Base>
   28a04:	str	r0, [sp, #4]
   28a08:	cmp	r0, #0
   28a0c:	beq	28a1c <main@@Base+0x124fc>
   28a10:	ldr	r0, [sp, #4]
   28a14:	str	r0, [fp, #-4]
   28a18:	b	28ac0 <main@@Base+0x125a0>
   28a1c:	ldr	r0, [pc, #176]	; 28ad4 <main@@Base+0x125b4>
   28a20:	add	r3, pc, r0
   28a24:	ldr	r0, [sp, #8]
   28a28:	movw	r1, #5
   28a2c:	uxth	r1, r1
   28a30:	movw	r2, #0
   28a34:	bl	31a40 <flatcc_verify_union_field@@Base>
   28a38:	str	r0, [sp, #4]
   28a3c:	cmp	r0, #0
   28a40:	beq	28a50 <main@@Base+0x12530>
   28a44:	ldr	r0, [sp, #4]
   28a48:	str	r0, [fp, #-4]
   28a4c:	b	28ac0 <main@@Base+0x125a0>
   28a50:	ldr	r0, [pc, #128]	; 28ad8 <main@@Base+0x125b8>
   28a54:	add	r3, pc, r0
   28a58:	ldr	r0, [sp, #8]
   28a5c:	movw	r1, #7
   28a60:	uxth	r1, r1
   28a64:	movw	r2, #0
   28a68:	bl	31a40 <flatcc_verify_union_field@@Base>
   28a6c:	str	r0, [sp, #4]
   28a70:	cmp	r0, #0
   28a74:	beq	28a84 <main@@Base+0x12564>
   28a78:	ldr	r0, [sp, #4]
   28a7c:	str	r0, [fp, #-4]
   28a80:	b	28ac0 <main@@Base+0x125a0>
   28a84:	ldr	r0, [pc, #80]	; 28adc <main@@Base+0x125bc>
   28a88:	add	r3, pc, r0
   28a8c:	ldr	r0, [sp, #8]
   28a90:	movw	r1, #9
   28a94:	uxth	r1, r1
   28a98:	movw	r2, #0
   28a9c:	bl	31d38 <flatcc_verify_union_vector_field@@Base>
   28aa0:	str	r0, [sp, #4]
   28aa4:	cmp	r0, #0
   28aa8:	beq	28ab8 <main@@Base+0x12598>
   28aac:	ldr	r0, [sp, #4]
   28ab0:	str	r0, [fp, #-4]
   28ab4:	b	28ac0 <main@@Base+0x125a0>
   28ab8:	movw	r0, #0
   28abc:	str	r0, [fp, #-4]
   28ac0:	ldr	r0, [fp, #-4]
   28ac4:	mov	sp, fp
   28ac8:	pop	{fp, pc}
   28acc:	andeq	r0, r0, ip, lsl r4
   28ad0:	andeq	r0, r0, r4, ror #7
   28ad4:			; <UNDEFINED> instruction: 0x000003b0
   28ad8:	andeq	r0, r0, ip, ror r3
   28adc:	andeq	r0, r0, r8, asr #6
   28ae0:	push	{fp, lr}
   28ae4:	mov	fp, sp
   28ae8:	sub	sp, sp, #16
   28aec:	str	r0, [sp, #8]
   28af0:	ldr	r0, [sp, #8]
   28af4:	movw	r1, #0
   28af8:	uxth	r1, r1
   28afc:	movw	r2, #0
   28b00:	bl	2ffc8 <flatcc_verify_string_field@@Base>
   28b04:	str	r0, [sp, #4]
   28b08:	cmp	r0, #0
   28b0c:	beq	28b1c <main@@Base+0x125fc>
   28b10:	ldr	r0, [sp, #4]
   28b14:	str	r0, [fp, #-4]
   28b18:	b	28cb4 <main@@Base+0x12794>
   28b1c:	ldr	r0, [sp, #8]
   28b20:	movw	r1, #1
   28b24:	uxth	r1, r1
   28b28:	movw	r2, #4
   28b2c:	movw	r3, #4
   28b30:	uxth	r3, r3
   28b34:	bl	2fdbc <flatcc_verify_field@@Base>
   28b38:	str	r0, [sp, #4]
   28b3c:	cmp	r0, #0
   28b40:	beq	28b50 <main@@Base+0x12630>
   28b44:	ldr	r0, [sp, #4]
   28b48:	str	r0, [fp, #-4]
   28b4c:	b	28cb4 <main@@Base+0x12794>
   28b50:	ldr	r0, [sp, #8]
   28b54:	movw	r1, #2
   28b58:	uxth	r1, r1
   28b5c:	movw	r2, #0
   28b60:	bl	2ffc8 <flatcc_verify_string_field@@Base>
   28b64:	str	r0, [sp, #4]
   28b68:	cmp	r0, #0
   28b6c:	beq	28b7c <main@@Base+0x1265c>
   28b70:	ldr	r0, [sp, #4]
   28b74:	str	r0, [fp, #-4]
   28b78:	b	28cb4 <main@@Base+0x12794>
   28b7c:	ldr	r0, [sp, #8]
   28b80:	movw	r1, #3
   28b84:	uxth	r1, r1
   28b88:	movw	r2, #8
   28b8c:	movw	r3, #8
   28b90:	uxth	r3, r3
   28b94:	bl	2fdbc <flatcc_verify_field@@Base>
   28b98:	str	r0, [sp, #4]
   28b9c:	cmp	r0, #0
   28ba0:	beq	28bb0 <main@@Base+0x12690>
   28ba4:	ldr	r0, [sp, #4]
   28ba8:	str	r0, [fp, #-4]
   28bac:	b	28cb4 <main@@Base+0x12794>
   28bb0:	ldr	r0, [sp, #8]
   28bb4:	movw	r1, #4
   28bb8:	uxth	r1, r1
   28bbc:	movw	r2, #0
   28bc0:	bl	2ffc8 <flatcc_verify_string_field@@Base>
   28bc4:	str	r0, [sp, #4]
   28bc8:	cmp	r0, #0
   28bcc:	beq	28bdc <main@@Base+0x126bc>
   28bd0:	ldr	r0, [sp, #4]
   28bd4:	str	r0, [fp, #-4]
   28bd8:	b	28cb4 <main@@Base+0x12794>
   28bdc:	ldr	r0, [sp, #8]
   28be0:	movw	r1, #5
   28be4:	uxth	r1, r1
   28be8:	movw	r2, #8
   28bec:	movw	r3, #8
   28bf0:	uxth	r3, r3
   28bf4:	bl	2fdbc <flatcc_verify_field@@Base>
   28bf8:	str	r0, [sp, #4]
   28bfc:	cmp	r0, #0
   28c00:	beq	28c10 <main@@Base+0x126f0>
   28c04:	ldr	r0, [sp, #4]
   28c08:	str	r0, [fp, #-4]
   28c0c:	b	28cb4 <main@@Base+0x12794>
   28c10:	ldr	r0, [sp, #8]
   28c14:	movw	r1, #6
   28c18:	uxth	r1, r1
   28c1c:	movw	r2, #4
   28c20:	movw	r3, #4
   28c24:	uxth	r3, r3
   28c28:	bl	2fdbc <flatcc_verify_field@@Base>
   28c2c:	str	r0, [sp, #4]
   28c30:	cmp	r0, #0
   28c34:	beq	28c44 <main@@Base+0x12724>
   28c38:	ldr	r0, [sp, #4]
   28c3c:	str	r0, [fp, #-4]
   28c40:	b	28cb4 <main@@Base+0x12794>
   28c44:	ldr	r0, [sp, #8]
   28c48:	movw	r1, #7
   28c4c:	uxth	r1, r1
   28c50:	movw	r2, #8
   28c54:	movw	r3, #8
   28c58:	uxth	r3, r3
   28c5c:	bl	2fdbc <flatcc_verify_field@@Base>
   28c60:	str	r0, [sp, #4]
   28c64:	cmp	r0, #0
   28c68:	beq	28c78 <main@@Base+0x12758>
   28c6c:	ldr	r0, [sp, #4]
   28c70:	str	r0, [fp, #-4]
   28c74:	b	28cb4 <main@@Base+0x12794>
   28c78:	ldr	r0, [sp, #8]
   28c7c:	movw	r1, #8
   28c80:	uxth	r1, r1
   28c84:	movw	r2, #4
   28c88:	movw	r3, #4
   28c8c:	uxth	r3, r3
   28c90:	bl	2fdbc <flatcc_verify_field@@Base>
   28c94:	str	r0, [sp, #4]
   28c98:	cmp	r0, #0
   28c9c:	beq	28cac <main@@Base+0x1278c>
   28ca0:	ldr	r0, [sp, #4]
   28ca4:	str	r0, [fp, #-4]
   28ca8:	b	28cb4 <main@@Base+0x12794>
   28cac:	movw	r0, #0
   28cb0:	str	r0, [fp, #-4]
   28cb4:	ldr	r0, [fp, #-4]
   28cb8:	mov	sp, fp
   28cbc:	pop	{fp, pc}
   28cc0:	push	{fp, lr}
   28cc4:	mov	fp, sp
   28cc8:	sub	sp, sp, #16
   28ccc:	str	r0, [sp, #8]
   28cd0:	ldr	r0, [sp, #8]
   28cd4:	movw	r1, #0
   28cd8:	uxth	r1, r1
   28cdc:	movw	r2, #8
   28ce0:	movw	r3, #8
   28ce4:	uxth	r3, r3
   28ce8:	bl	2fdbc <flatcc_verify_field@@Base>
   28cec:	str	r0, [sp, #4]
   28cf0:	cmp	r0, #0
   28cf4:	beq	28d04 <main@@Base+0x127e4>
   28cf8:	ldr	r0, [sp, #4]
   28cfc:	str	r0, [fp, #-4]
   28d00:	b	28d40 <main@@Base+0x12820>
   28d04:	ldr	r0, [sp, #8]
   28d08:	movw	r1, #1
   28d0c:	uxth	r1, r1
   28d10:	movw	r2, #4
   28d14:	movw	r3, #4
   28d18:	uxth	r3, r3
   28d1c:	bl	2fdbc <flatcc_verify_field@@Base>
   28d20:	str	r0, [sp, #4]
   28d24:	cmp	r0, #0
   28d28:	beq	28d38 <main@@Base+0x12818>
   28d2c:	ldr	r0, [sp, #4]
   28d30:	str	r0, [fp, #-4]
   28d34:	b	28d40 <main@@Base+0x12820>
   28d38:	movw	r0, #0
   28d3c:	str	r0, [fp, #-4]
   28d40:	ldr	r0, [fp, #-4]
   28d44:	mov	sp, fp
   28d48:	pop	{fp, pc}
   28d4c:	push	{fp, lr}
   28d50:	mov	fp, sp
   28d54:	sub	sp, sp, #16
   28d58:	str	r0, [sp, #8]
   28d5c:	ldr	r0, [sp, #8]
   28d60:	movw	r1, #0
   28d64:	uxth	r1, r1
   28d68:	movw	r2, #8
   28d6c:	movw	r3, #8
   28d70:	uxth	r3, r3
   28d74:	bl	2fdbc <flatcc_verify_field@@Base>
   28d78:	str	r0, [sp, #4]
   28d7c:	cmp	r0, #0
   28d80:	beq	28d90 <main@@Base+0x12870>
   28d84:	ldr	r0, [sp, #4]
   28d88:	str	r0, [fp, #-4]
   28d8c:	b	28dcc <main@@Base+0x128ac>
   28d90:	ldr	r0, [sp, #8]
   28d94:	movw	r1, #1
   28d98:	uxth	r1, r1
   28d9c:	movw	r2, #4
   28da0:	movw	r3, #4
   28da4:	uxth	r3, r3
   28da8:	bl	2fdbc <flatcc_verify_field@@Base>
   28dac:	str	r0, [sp, #4]
   28db0:	cmp	r0, #0
   28db4:	beq	28dc4 <main@@Base+0x128a4>
   28db8:	ldr	r0, [sp, #4]
   28dbc:	str	r0, [fp, #-4]
   28dc0:	b	28dcc <main@@Base+0x128ac>
   28dc4:	movw	r0, #0
   28dc8:	str	r0, [fp, #-4]
   28dcc:	ldr	r0, [fp, #-4]
   28dd0:	mov	sp, fp
   28dd4:	pop	{fp, pc}
   28dd8:	push	{fp, lr}
   28ddc:	mov	fp, sp
   28de0:	sub	sp, sp, #16
   28de4:	str	r0, [sp, #8]
   28de8:	ldr	r0, [sp, #8]
   28dec:	ldrb	r0, [r0, #12]
   28df0:	mov	r1, r0
   28df4:	cmp	r0, #2
   28df8:	str	r1, [sp, #4]
   28dfc:	beq	28e54 <main@@Base+0x12934>
   28e00:	b	28e04 <main@@Base+0x128e4>
   28e04:	ldr	r0, [sp, #4]
   28e08:	cmp	r0, #8
   28e0c:	beq	28e6c <main@@Base+0x1294c>
   28e10:	b	28e14 <main@@Base+0x128f4>
   28e14:	ldr	r0, [sp, #4]
   28e18:	cmp	r0, #9
   28e1c:	beq	28e88 <main@@Base+0x12968>
   28e20:	b	28e24 <main@@Base+0x12904>
   28e24:	ldr	r0, [sp, #4]
   28e28:	cmp	r0, #10
   28e2c:	beq	28ea4 <main@@Base+0x12984>
   28e30:	b	28e34 <main@@Base+0x12914>
   28e34:	ldr	r0, [sp, #4]
   28e38:	cmp	r0, #11
   28e3c:	beq	28ec0 <main@@Base+0x129a0>
   28e40:	b	28e44 <main@@Base+0x12924>
   28e44:	ldr	r0, [sp, #4]
   28e48:	cmp	r0, #255	; 0xff
   28e4c:	beq	28ed0 <main@@Base+0x129b0>
   28e50:	b	28ee0 <main@@Base+0x129c0>
   28e54:	ldr	r0, [pc, #152]	; 28ef4 <main@@Base+0x129d4>
   28e58:	add	r1, pc, r0
   28e5c:	ldr	r0, [sp, #8]
   28e60:	bl	30f18 <flatcc_verify_union_table@@Base>
   28e64:	str	r0, [fp, #-4]
   28e68:	b	28ee8 <main@@Base+0x129c8>
   28e6c:	ldr	r0, [sp, #8]
   28e70:	movw	r1, #2
   28e74:	movw	r2, #2
   28e78:	uxth	r2, r2
   28e7c:	bl	30f6c <flatcc_verify_union_struct@@Base>
   28e80:	str	r0, [fp, #-4]
   28e84:	b	28ee8 <main@@Base+0x129c8>
   28e88:	ldr	r0, [sp, #8]
   28e8c:	movw	r1, #4
   28e90:	movw	r2, #4
   28e94:	uxth	r2, r2
   28e98:	bl	30f6c <flatcc_verify_union_struct@@Base>
   28e9c:	str	r0, [fp, #-4]
   28ea0:	b	28ee8 <main@@Base+0x129c8>
   28ea4:	ldr	r0, [sp, #8]
   28ea8:	movw	r1, #4
   28eac:	movw	r2, #4
   28eb0:	uxth	r2, r2
   28eb4:	bl	30f6c <flatcc_verify_union_struct@@Base>
   28eb8:	str	r0, [fp, #-4]
   28ebc:	b	28ee8 <main@@Base+0x129c8>
   28ec0:	ldr	r0, [sp, #8]
   28ec4:	bl	310f4 <flatcc_verify_union_string@@Base>
   28ec8:	str	r0, [fp, #-4]
   28ecc:	b	28ee8 <main@@Base+0x129c8>
   28ed0:	ldr	r0, [sp, #8]
   28ed4:	bl	310f4 <flatcc_verify_union_string@@Base>
   28ed8:	str	r0, [fp, #-4]
   28edc:	b	28ee8 <main@@Base+0x129c8>
   28ee0:	movw	r0, #0
   28ee4:	str	r0, [fp, #-4]
   28ee8:	ldr	r0, [fp, #-4]
   28eec:	mov	sp, fp
   28ef0:	pop	{fp, pc}
   28ef4:	muleq	r0, r8, r0
   28ef8:	push	{fp, lr}
   28efc:	mov	fp, sp
   28f00:	sub	sp, sp, #16
   28f04:	str	r0, [sp, #8]
   28f08:	ldr	r0, [sp, #8]
   28f0c:	movw	r1, #0
   28f10:	uxth	r1, r1
   28f14:	movw	r2, #4
   28f18:	movw	r3, #4
   28f1c:	uxth	r3, r3
   28f20:	bl	2fdbc <flatcc_verify_field@@Base>
   28f24:	str	r0, [sp, #4]
   28f28:	cmp	r0, #0
   28f2c:	beq	28f3c <main@@Base+0x12a1c>
   28f30:	ldr	r0, [sp, #4]
   28f34:	str	r0, [fp, #-4]
   28f38:	b	28f44 <main@@Base+0x12a24>
   28f3c:	movw	r0, #0
   28f40:	str	r0, [fp, #-4]
   28f44:	ldr	r0, [fp, #-4]
   28f48:	mov	sp, fp
   28f4c:	pop	{fp, pc}

00028f50 <flatcc_builder_default_alloc@@Base>:
   28f50:	push	{fp, lr}
   28f54:	mov	fp, sp
   28f58:	sub	sp, sp, #40	; 0x28
   28f5c:	ldr	ip, [fp, #8]
   28f60:	str	r0, [fp, #-8]
   28f64:	str	r1, [fp, #-12]
   28f68:	str	r2, [fp, #-16]
   28f6c:	str	r3, [sp, #20]
   28f70:	ldr	r0, [fp, #-16]
   28f74:	cmp	r0, #0
   28f78:	str	ip, [sp, #8]
   28f7c:	bne	28fc0 <flatcc_builder_default_alloc@@Base+0x70>
   28f80:	ldr	r0, [fp, #-12]
   28f84:	ldr	r0, [r0]
   28f88:	movw	r1, #0
   28f8c:	cmp	r0, r1
   28f90:	beq	28fb4 <flatcc_builder_default_alloc@@Base+0x64>
   28f94:	ldr	r0, [fp, #-12]
   28f98:	ldr	r0, [r0]
   28f9c:	bl	14e24 <free@plt>
   28fa0:	ldr	r0, [fp, #-12]
   28fa4:	movw	lr, #0
   28fa8:	str	lr, [r0]
   28fac:	ldr	r0, [fp, #-12]
   28fb0:	str	lr, [r0, #4]
   28fb4:	movw	r0, #0
   28fb8:	str	r0, [fp, #-4]
   28fbc:	b	2912c <flatcc_builder_default_alloc@@Base+0x1dc>
   28fc0:	ldr	r0, [fp, #8]
   28fc4:	sub	r0, r0, #1
   28fc8:	cmp	r0, #6
   28fcc:	str	r0, [sp, #4]
   28fd0:	bhi	29030 <flatcc_builder_default_alloc@@Base+0xe0>
   28fd4:	add	r0, pc, #8
   28fd8:	ldr	r1, [sp, #4]
   28fdc:	ldr	r2, [r0, r1, lsl #2]
   28fe0:	add	pc, r0, r2
   28fe4:	andeq	r0, r0, ip, lsl r0
   28fe8:	andeq	r0, r0, ip, asr #32
   28fec:	andeq	r0, r0, ip, asr #32
   28ff0:	andeq	r0, r0, r4, lsr r0
   28ff4:	andeq	r0, r0, r8, lsr #32
   28ff8:	andeq	r0, r0, ip, asr #32
   28ffc:	andeq	r0, r0, r0, asr #32
   29000:	movw	r0, #256	; 0x100
   29004:	str	r0, [sp, #12]
   29008:	b	29038 <flatcc_builder_default_alloc@@Base+0xe8>
   2900c:	ldr	r0, [fp, #-16]
   29010:	str	r0, [sp, #12]
   29014:	b	29038 <flatcc_builder_default_alloc@@Base+0xe8>
   29018:	movw	r0, #288	; 0x120
   2901c:	str	r0, [sp, #12]
   29020:	b	29038 <flatcc_builder_default_alloc@@Base+0xe8>
   29024:	movw	r0, #64	; 0x40
   29028:	str	r0, [sp, #12]
   2902c:	b	29038 <flatcc_builder_default_alloc@@Base+0xe8>
   29030:	movw	r0, #32
   29034:	str	r0, [sp, #12]
   29038:	b	2903c <flatcc_builder_default_alloc@@Base+0xec>
   2903c:	ldr	r0, [sp, #12]
   29040:	ldr	r1, [fp, #-16]
   29044:	cmp	r0, r1
   29048:	bcs	2905c <flatcc_builder_default_alloc@@Base+0x10c>
   2904c:	ldr	r0, [sp, #12]
   29050:	lsl	r0, r0, #1
   29054:	str	r0, [sp, #12]
   29058:	b	2903c <flatcc_builder_default_alloc@@Base+0xec>
   2905c:	ldr	r0, [fp, #-16]
   29060:	ldr	r1, [fp, #-12]
   29064:	ldr	r1, [r1, #4]
   29068:	cmp	r0, r1
   2906c:	bhi	29094 <flatcc_builder_default_alloc@@Base+0x144>
   29070:	ldr	r0, [fp, #-12]
   29074:	ldr	r0, [r0, #4]
   29078:	lsr	r0, r0, #1
   2907c:	ldr	r1, [sp, #12]
   29080:	cmp	r0, r1
   29084:	bcc	29094 <flatcc_builder_default_alloc@@Base+0x144>
   29088:	movw	r0, #0
   2908c:	str	r0, [fp, #-4]
   29090:	b	2912c <flatcc_builder_default_alloc@@Base+0x1dc>
   29094:	ldr	r0, [fp, #-12]
   29098:	ldr	r0, [r0]
   2909c:	ldr	r1, [sp, #12]
   290a0:	bl	14e60 <realloc@plt>
   290a4:	str	r0, [sp, #16]
   290a8:	movw	r1, #0
   290ac:	cmp	r0, r1
   290b0:	bne	290c0 <flatcc_builder_default_alloc@@Base+0x170>
   290b4:	mvn	r0, #0
   290b8:	str	r0, [fp, #-4]
   290bc:	b	2912c <flatcc_builder_default_alloc@@Base+0x1dc>
   290c0:	ldr	r0, [sp, #20]
   290c4:	cmp	r0, #0
   290c8:	beq	2910c <flatcc_builder_default_alloc@@Base+0x1bc>
   290cc:	ldr	r0, [fp, #-12]
   290d0:	ldr	r0, [r0, #4]
   290d4:	ldr	r1, [sp, #12]
   290d8:	cmp	r0, r1
   290dc:	bcs	2910c <flatcc_builder_default_alloc@@Base+0x1bc>
   290e0:	ldr	r0, [sp, #16]
   290e4:	ldr	r1, [fp, #-12]
   290e8:	ldr	r1, [r1, #4]
   290ec:	add	r0, r0, r1
   290f0:	ldr	r1, [sp, #12]
   290f4:	ldr	r2, [fp, #-12]
   290f8:	ldr	r2, [r2, #4]
   290fc:	sub	r2, r1, r2
   29100:	movw	r1, #0
   29104:	and	r1, r1, #255	; 0xff
   29108:	bl	14ec0 <memset@plt>
   2910c:	ldr	r0, [sp, #16]
   29110:	ldr	r1, [fp, #-12]
   29114:	str	r0, [r1]
   29118:	ldr	r0, [sp, #12]
   2911c:	ldr	r1, [fp, #-12]
   29120:	str	r0, [r1, #4]
   29124:	movw	r0, #0
   29128:	str	r0, [fp, #-4]
   2912c:	ldr	r0, [fp, #-4]
   29130:	mov	sp, fp
   29134:	pop	{fp, pc}

00029138 <flatcc_builder_flush_vtable_cache@@Base>:
   29138:	push	{fp, lr}
   2913c:	mov	fp, sp
   29140:	sub	sp, sp, #8
   29144:	str	r0, [sp, #4]
   29148:	ldr	r0, [sp, #4]
   2914c:	add	r0, r0, #52	; 0x34
   29150:	add	r0, r0, #40	; 0x28
   29154:	str	r0, [sp]
   29158:	ldr	r0, [sp, #4]
   2915c:	ldr	r0, [r0, #116]	; 0x74
   29160:	cmp	r0, #0
   29164:	bne	2916c <flatcc_builder_flush_vtable_cache@@Base+0x34>
   29168:	b	291a0 <flatcc_builder_flush_vtable_cache@@Base+0x68>
   2916c:	ldr	r0, [sp]
   29170:	ldr	r0, [r0]
   29174:	ldr	r1, [sp]
   29178:	ldr	r2, [r1, #4]
   2917c:	movw	r1, #0
   29180:	and	r1, r1, #255	; 0xff
   29184:	bl	14ec0 <memset@plt>
   29188:	ldr	r0, [sp, #4]
   2918c:	movw	r1, #16
   29190:	str	r1, [r0, #124]	; 0x7c
   29194:	ldr	r0, [sp, #4]
   29198:	movw	r1, #0
   2919c:	str	r1, [r0, #120]	; 0x78
   291a0:	mov	sp, fp
   291a4:	pop	{fp, pc}

000291a8 <flatcc_builder_custom_init@@Base>:
   291a8:	push	{fp, lr}
   291ac:	mov	fp, sp
   291b0:	sub	sp, sp, #24
   291b4:	ldr	ip, [fp, #8]
   291b8:	str	r0, [fp, #-4]
   291bc:	str	r1, [fp, #-8]
   291c0:	str	r2, [sp, #12]
   291c4:	str	r3, [sp, #8]
   291c8:	ldr	r0, [fp, #-4]
   291cc:	movw	r1, #0
   291d0:	and	r1, r1, #255	; 0xff
   291d4:	movw	r2, #232	; 0xe8
   291d8:	str	ip, [sp, #4]
   291dc:	bl	14ec0 <memset@plt>
   291e0:	ldr	r0, [fp, #-8]
   291e4:	movw	r1, #0
   291e8:	cmp	r0, r1
   291ec:	bne	29214 <flatcc_builder_custom_init@@Base+0x6c>
   291f0:	ldr	r0, [pc, #116]	; 2926c <flatcc_builder_custom_init@@Base+0xc4>
   291f4:	ldr	r0, [pc, r0]
   291f8:	ldr	r1, [fp, #-4]
   291fc:	movw	r2, #1
   29200:	str	r2, [r1, #184]	; 0xb8
   29204:	str	r0, [fp, #-8]
   29208:	ldr	r0, [fp, #-4]
   2920c:	add	r0, r0, #188	; 0xbc
   29210:	str	r0, [sp, #12]
   29214:	ldr	r0, [sp, #8]
   29218:	movw	r1, #0
   2921c:	cmp	r0, r1
   29220:	bne	29230 <flatcc_builder_custom_init@@Base+0x88>
   29224:	ldr	r0, [pc, #68]	; 29270 <flatcc_builder_custom_init@@Base+0xc8>
   29228:	ldr	r0, [pc, r0]
   2922c:	str	r0, [sp, #8]
   29230:	ldr	r0, [fp, #8]
   29234:	ldr	r1, [fp, #-4]
   29238:	str	r0, [r1, #40]	; 0x28
   2923c:	ldr	r0, [sp, #8]
   29240:	ldr	r1, [fp, #-4]
   29244:	str	r0, [r1, #48]	; 0x30
   29248:	ldr	r0, [sp, #12]
   2924c:	ldr	r1, [fp, #-4]
   29250:	str	r0, [r1, #36]	; 0x24
   29254:	ldr	r0, [fp, #-8]
   29258:	ldr	r1, [fp, #-4]
   2925c:	str	r0, [r1, #44]	; 0x2c
   29260:	movw	r0, #0
   29264:	mov	sp, fp
   29268:	pop	{fp, pc}
   2926c:	andeq	r3, r3, r0, lsl #29
   29270:	andeq	r3, r3, r4, asr #28

00029274 <flatcc_builder_init@@Base>:
   29274:	push	{fp, lr}
   29278:	mov	fp, sp
   2927c:	sub	sp, sp, #16
   29280:	str	r0, [fp, #-4]
   29284:	ldr	r0, [fp, #-4]
   29288:	movw	r1, #0
   2928c:	str	r1, [sp, #8]
   29290:	ldr	r2, [sp, #8]
   29294:	ldr	r3, [sp, #8]
   29298:	ldr	ip, [sp, #8]
   2929c:	str	ip, [sp]
   292a0:	bl	291a8 <flatcc_builder_custom_init@@Base>
   292a4:	mov	sp, fp
   292a8:	pop	{fp, pc}

000292ac <flatcc_builder_custom_reset@@Base>:
   292ac:	push	{r4, sl, fp, lr}
   292b0:	add	fp, sp, #8
   292b4:	sub	sp, sp, #40	; 0x28
   292b8:	str	r0, [fp, #-16]
   292bc:	str	r1, [fp, #-20]	; 0xffffffec
   292c0:	str	r2, [sp, #24]
   292c4:	movw	r0, #0
   292c8:	str	r0, [sp, #16]
   292cc:	ldr	r0, [sp, #16]
   292d0:	cmp	r0, #8
   292d4:	bge	293e0 <flatcc_builder_custom_reset@@Base+0x134>
   292d8:	ldr	r0, [fp, #-16]
   292dc:	add	r0, r0, #52	; 0x34
   292e0:	ldr	r1, [sp, #16]
   292e4:	add	r0, r0, r1, lsl #3
   292e8:	str	r0, [sp, #20]
   292ec:	ldr	r0, [sp, #20]
   292f0:	ldr	r0, [r0]
   292f4:	movw	r1, #0
   292f8:	cmp	r0, r1
   292fc:	beq	29394 <flatcc_builder_custom_reset@@Base+0xe8>
   29300:	ldr	r0, [sp, #16]
   29304:	cmp	r0, #5
   29308:	beq	29374 <flatcc_builder_custom_reset@@Base+0xc8>
   2930c:	ldr	r0, [sp, #24]
   29310:	cmp	r0, #0
   29314:	beq	29374 <flatcc_builder_custom_reset@@Base+0xc8>
   29318:	ldr	r0, [fp, #-16]
   2931c:	ldr	r0, [r0, #48]	; 0x30
   29320:	ldr	r1, [fp, #-16]
   29324:	ldr	r1, [r1, #40]	; 0x28
   29328:	ldr	r2, [sp, #20]
   2932c:	ldr	r3, [sp, #16]
   29330:	str	r0, [sp, #12]
   29334:	mov	r0, r1
   29338:	mov	r1, r2
   2933c:	movw	r2, #1
   29340:	str	r2, [sp, #8]
   29344:	ldr	ip, [sp, #8]
   29348:	str	r3, [sp, #4]
   2934c:	mov	r3, ip
   29350:	ldr	lr, [sp, #4]
   29354:	str	lr, [sp]
   29358:	ldr	r4, [sp, #12]
   2935c:	blx	r4
   29360:	cmp	r0, #0
   29364:	beq	29374 <flatcc_builder_custom_reset@@Base+0xc8>
   29368:	mvn	r0, #0
   2936c:	str	r0, [fp, #-12]
   29370:	b	294dc <flatcc_builder_custom_reset@@Base+0x230>
   29374:	ldr	r0, [sp, #20]
   29378:	ldr	r0, [r0]
   2937c:	ldr	r1, [sp, #20]
   29380:	ldr	r2, [r1, #4]
   29384:	movw	r1, #0
   29388:	and	r1, r1, #255	; 0xff
   2938c:	bl	14ec0 <memset@plt>
   29390:	b	293cc <flatcc_builder_custom_reset@@Base+0x120>
   29394:	ldr	r0, [sp, #20]
   29398:	ldr	r0, [r0, #4]
   2939c:	cmp	r0, #0
   293a0:	bne	293a8 <flatcc_builder_custom_reset@@Base+0xfc>
   293a4:	b	293c8 <flatcc_builder_custom_reset@@Base+0x11c>
   293a8:	ldr	r0, [pc, #312]	; 294e8 <flatcc_builder_custom_reset@@Base+0x23c>
   293ac:	add	r0, pc, r0
   293b0:	ldr	r1, [pc, #308]	; 294ec <flatcc_builder_custom_reset@@Base+0x240>
   293b4:	add	r1, pc, r1
   293b8:	ldr	r2, [pc, #304]	; 294f0 <flatcc_builder_custom_reset@@Base+0x244>
   293bc:	add	r3, pc, r2
   293c0:	movw	r2, #434	; 0x1b2
   293c4:	bl	14f08 <__assert_fail@plt>
   293c8:	b	293cc <flatcc_builder_custom_reset@@Base+0x120>
   293cc:	b	293d0 <flatcc_builder_custom_reset@@Base+0x124>
   293d0:	ldr	r0, [sp, #16]
   293d4:	add	r0, r0, #1
   293d8:	str	r0, [sp, #16]
   293dc:	b	292cc <flatcc_builder_custom_reset@@Base+0x20>
   293e0:	ldr	r0, [fp, #-16]
   293e4:	movw	r1, #0
   293e8:	str	r1, [r0, #120]	; 0x78
   293ec:	ldr	r0, [fp, #-16]
   293f0:	ldr	r0, [r0, #124]	; 0x7c
   293f4:	cmp	r0, #0
   293f8:	bls	29408 <flatcc_builder_custom_reset@@Base+0x15c>
   293fc:	ldr	r0, [fp, #-16]
   29400:	movw	r1, #16
   29404:	str	r1, [r0, #124]	; 0x7c
   29408:	ldr	r0, [fp, #-16]
   2940c:	movw	r1, #0
   29410:	strh	r1, [r0, #128]	; 0x80
   29414:	ldr	r0, [fp, #-16]
   29418:	movw	r1, #0
   2941c:	str	r1, [r0, #136]	; 0x88
   29420:	ldr	r0, [fp, #-16]
   29424:	str	r1, [r0, #140]	; 0x8c
   29428:	ldr	r0, [fp, #-16]
   2942c:	str	r1, [r0, #156]	; 0x9c
   29430:	ldr	r0, [fp, #-16]
   29434:	str	r1, [r0, #160]	; 0xa0
   29438:	ldr	r0, [fp, #-16]
   2943c:	str	r1, [r0, #20]
   29440:	ldr	r0, [fp, #-16]
   29444:	str	r1, [r0, #24]
   29448:	ldr	r0, [fp, #-16]
   2944c:	str	r1, [r0, #148]	; 0x94
   29450:	ldr	r0, [fp, #-16]
   29454:	str	r1, [r0, #152]	; 0x98
   29458:	ldr	r0, [fp, #-16]
   2945c:	ldr	r0, [r0, #60]	; 0x3c
   29460:	ldr	r2, [fp, #-16]
   29464:	str	r0, [r2, #16]
   29468:	ldr	r0, [fp, #-16]
   2946c:	ldr	r0, [r0, #76]	; 0x4c
   29470:	ldr	r2, [fp, #-16]
   29474:	str	r0, [r2]
   29478:	ldr	r0, [fp, #-16]
   2947c:	ldr	r0, [r0, #52]	; 0x34
   29480:	ldr	r2, [fp, #-16]
   29484:	str	r0, [r2, #4]
   29488:	ldr	r0, [fp, #-16]
   2948c:	str	r1, [r0, #32]
   29490:	ldr	r0, [fp, #-20]	; 0xffffffec
   29494:	cmp	r0, #0
   29498:	beq	294b8 <flatcc_builder_custom_reset@@Base+0x20c>
   2949c:	ldr	r0, [fp, #-16]
   294a0:	movw	r1, #0
   294a4:	str	r1, [r0, #172]	; 0xac
   294a8:	ldr	r0, [fp, #-16]
   294ac:	str	r1, [r0, #176]	; 0xb0
   294b0:	ldr	r0, [fp, #-16]
   294b4:	str	r1, [r0, #180]	; 0xb4
   294b8:	ldr	r0, [fp, #-16]
   294bc:	ldr	r0, [r0, #184]	; 0xb8
   294c0:	cmp	r0, #0
   294c4:	beq	294d4 <flatcc_builder_custom_reset@@Base+0x228>
   294c8:	ldr	r0, [fp, #-16]
   294cc:	add	r0, r0, #188	; 0xbc
   294d0:	bl	2ee84 <flatcc_emitter_reset@@Base>
   294d4:	movw	r0, #0
   294d8:	str	r0, [fp, #-12]
   294dc:	ldr	r0, [fp, #-12]
   294e0:	sub	sp, fp, #8
   294e4:	pop	{r4, sl, fp, pc}
   294e8:	andeq	r0, r2, r6, lsl r6
   294ec:	andeq	r0, r2, r0, lsr #12
   294f0:	andeq	r0, r2, r5, ror r6

000294f4 <flatcc_builder_reset@@Base>:
   294f4:	push	{fp, lr}
   294f8:	mov	fp, sp
   294fc:	sub	sp, sp, #8
   29500:	str	r0, [sp, #4]
   29504:	ldr	r0, [sp, #4]
   29508:	movw	r1, #0
   2950c:	str	r1, [sp]
   29510:	ldr	r2, [sp]
   29514:	bl	292ac <flatcc_builder_custom_reset@@Base>
   29518:	mov	sp, fp
   2951c:	pop	{fp, pc}

00029520 <flatcc_builder_clear@@Base>:
   29520:	push	{r4, sl, fp, lr}
   29524:	add	fp, sp, #8
   29528:	sub	sp, sp, #32
   2952c:	str	r0, [fp, #-12]
   29530:	movw	r0, #0
   29534:	str	r0, [sp, #20]
   29538:	ldr	r0, [sp, #20]
   2953c:	cmp	r0, #8
   29540:	bge	295b4 <flatcc_builder_clear@@Base+0x94>
   29544:	ldr	r0, [fp, #-12]
   29548:	add	r0, r0, #52	; 0x34
   2954c:	ldr	r1, [sp, #20]
   29550:	add	r0, r0, r1, lsl #3
   29554:	str	r0, [fp, #-16]
   29558:	ldr	r0, [fp, #-12]
   2955c:	ldr	r0, [r0, #48]	; 0x30
   29560:	ldr	r1, [fp, #-12]
   29564:	ldr	r1, [r1, #40]	; 0x28
   29568:	ldr	r2, [fp, #-16]
   2956c:	ldr	r3, [sp, #20]
   29570:	str	r0, [sp, #16]
   29574:	mov	r0, r1
   29578:	mov	r1, r2
   2957c:	movw	r2, #0
   29580:	str	r2, [sp, #12]
   29584:	ldr	ip, [sp, #12]
   29588:	str	r3, [sp, #8]
   2958c:	mov	r3, ip
   29590:	ldr	lr, [sp, #8]
   29594:	str	lr, [sp]
   29598:	ldr	r4, [sp, #16]
   2959c:	blx	r4
   295a0:	str	r0, [sp, #4]
   295a4:	ldr	r0, [sp, #20]
   295a8:	add	r0, r0, #1
   295ac:	str	r0, [sp, #20]
   295b0:	b	29538 <flatcc_builder_clear@@Base+0x18>
   295b4:	ldr	r0, [fp, #-12]
   295b8:	ldr	r0, [r0, #184]	; 0xb8
   295bc:	cmp	r0, #0
   295c0:	beq	295d0 <flatcc_builder_clear@@Base+0xb0>
   295c4:	ldr	r0, [fp, #-12]
   295c8:	add	r0, r0, #188	; 0xbc
   295cc:	bl	2f01c <flatcc_emitter_clear@@Base>
   295d0:	ldr	r0, [fp, #-12]
   295d4:	movw	r1, #0
   295d8:	and	r1, r1, #255	; 0xff
   295dc:	movw	r2, #232	; 0xe8
   295e0:	bl	14ec0 <memset@plt>
   295e4:	sub	sp, fp, #8
   295e8:	pop	{r4, sl, fp, pc}

000295ec <flatcc_builder_enter_user_frame_ptr@@Base>:
   295ec:	push	{fp, lr}
   295f0:	mov	fp, sp
   295f4:	sub	sp, sp, #24
   295f8:	str	r0, [fp, #-8]
   295fc:	str	r1, [sp, #12]
   29600:	ldr	r0, [sp, #12]
   29604:	add	r0, r0, #4
   29608:	sub	r0, r0, #1
   2960c:	mvn	r1, #3
   29610:	and	r0, r0, r1
   29614:	add	r0, r0, #4
   29618:	str	r0, [sp, #12]
   2961c:	ldr	r0, [fp, #-8]
   29620:	ldr	r1, [fp, #-8]
   29624:	ldr	r2, [r1, #228]	; 0xe4
   29628:	ldr	r3, [sp, #12]
   2962c:	movw	r1, #7
   29630:	movw	ip, #0
   29634:	str	ip, [sp]
   29638:	bl	296c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2963c:	str	r0, [sp, #8]
   29640:	movw	r1, #0
   29644:	cmp	r0, r1
   29648:	bne	29658 <flatcc_builder_enter_user_frame_ptr@@Base+0x6c>
   2964c:	movw	r0, #0
   29650:	str	r0, [fp, #-4]
   29654:	b	296b4 <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   29658:	ldr	r0, [sp, #8]
   2965c:	ldr	r2, [sp, #12]
   29660:	movw	r1, #0
   29664:	and	r1, r1, #255	; 0xff
   29668:	bl	14ec0 <memset@plt>
   2966c:	ldr	r0, [fp, #-8]
   29670:	ldr	r0, [r0, #224]	; 0xe0
   29674:	ldr	r1, [sp, #8]
   29678:	add	r2, r1, #4
   2967c:	str	r2, [sp, #8]
   29680:	str	r0, [r1]
   29684:	ldr	r0, [fp, #-8]
   29688:	ldr	r0, [r0, #228]	; 0xe4
   2968c:	add	r0, r0, #4
   29690:	ldr	r1, [fp, #-8]
   29694:	str	r0, [r1, #224]	; 0xe0
   29698:	ldr	r0, [sp, #12]
   2969c:	ldr	r1, [fp, #-8]
   296a0:	ldr	r2, [r1, #228]	; 0xe4
   296a4:	add	r0, r2, r0
   296a8:	str	r0, [r1, #228]	; 0xe4
   296ac:	ldr	r0, [sp, #8]
   296b0:	str	r0, [fp, #-4]
   296b4:	ldr	r0, [fp, #-4]
   296b8:	mov	sp, fp
   296bc:	pop	{fp, pc}
   296c0:	push	{fp, lr}
   296c4:	mov	fp, sp
   296c8:	sub	sp, sp, #32
   296cc:	ldr	ip, [fp, #8]
   296d0:	str	r0, [fp, #-4]
   296d4:	str	r1, [fp, #-8]
   296d8:	str	r2, [fp, #-12]
   296dc:	str	r3, [sp, #16]
   296e0:	ldr	r0, [fp, #-4]
   296e4:	add	r0, r0, #52	; 0x34
   296e8:	ldr	r1, [fp, #-8]
   296ec:	add	r0, r0, r1, lsl #3
   296f0:	str	r0, [sp, #12]
   296f4:	ldr	r0, [fp, #-12]
   296f8:	ldr	r1, [sp, #16]
   296fc:	add	r0, r0, r1
   29700:	ldr	r1, [sp, #12]
   29704:	ldr	r1, [r1, #4]
   29708:	cmp	r0, r1
   2970c:	str	ip, [sp, #8]
   29710:	bls	29788 <flatcc_builder_enter_user_frame_ptr@@Base+0x19c>
   29714:	ldr	r0, [fp, #-4]
   29718:	ldr	r0, [r0, #48]	; 0x30
   2971c:	ldr	r1, [fp, #-4]
   29720:	ldr	r1, [r1, #40]	; 0x28
   29724:	ldr	r2, [sp, #12]
   29728:	ldr	r3, [fp, #-12]
   2972c:	ldr	ip, [sp, #16]
   29730:	add	r3, r3, ip
   29734:	ldr	ip, [fp, #8]
   29738:	ldr	lr, [fp, #-8]
   2973c:	str	r0, [sp, #4]
   29740:	mov	r0, r1
   29744:	mov	r1, r2
   29748:	mov	r2, r3
   2974c:	mov	r3, ip
   29750:	str	lr, [sp]
   29754:	ldr	ip, [sp, #4]
   29758:	blx	ip
   2975c:	cmp	r0, #0
   29760:	beq	29784 <flatcc_builder_enter_user_frame_ptr@@Base+0x198>
   29764:	ldr	r0, [pc, #52]	; 297a0 <flatcc_builder_enter_user_frame_ptr@@Base+0x1b4>
   29768:	add	r0, pc, r0
   2976c:	ldr	r1, [pc, #48]	; 297a4 <flatcc_builder_enter_user_frame_ptr@@Base+0x1b8>
   29770:	add	r1, pc, r1
   29774:	ldr	r2, [pc, #44]	; 297a8 <flatcc_builder_enter_user_frame_ptr@@Base+0x1bc>
   29778:	add	r3, pc, r2
   2977c:	movw	r2, #308	; 0x134
   29780:	bl	14f08 <__assert_fail@plt>
   29784:	b	29788 <flatcc_builder_enter_user_frame_ptr@@Base+0x19c>
   29788:	ldr	r0, [sp, #12]
   2978c:	ldr	r0, [r0]
   29790:	ldr	r1, [fp, #-12]
   29794:	add	r0, r0, r1
   29798:	mov	sp, fp
   2979c:	pop	{fp, pc}
   297a0:	andeq	r1, r2, r9, lsr #8
   297a4:	andeq	r0, r2, r4, ror #4
   297a8:	andeq	r1, r2, r3, asr r2

000297ac <flatcc_builder_enter_user_frame@@Base>:
   297ac:	push	{fp, lr}
   297b0:	mov	fp, sp
   297b4:	sub	sp, sp, #24
   297b8:	str	r0, [fp, #-8]
   297bc:	str	r1, [sp, #12]
   297c0:	ldr	r0, [sp, #12]
   297c4:	add	r0, r0, #4
   297c8:	sub	r0, r0, #1
   297cc:	mvn	r1, #3
   297d0:	and	r0, r0, r1
   297d4:	add	r0, r0, #4
   297d8:	str	r0, [sp, #12]
   297dc:	ldr	r0, [fp, #-8]
   297e0:	ldr	r1, [fp, #-8]
   297e4:	ldr	r2, [r1, #228]	; 0xe4
   297e8:	ldr	r3, [sp, #12]
   297ec:	movw	r1, #7
   297f0:	movw	ip, #0
   297f4:	str	ip, [sp]
   297f8:	bl	296c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   297fc:	str	r0, [sp, #8]
   29800:	movw	r1, #0
   29804:	cmp	r0, r1
   29808:	bne	29818 <flatcc_builder_enter_user_frame@@Base+0x6c>
   2980c:	movw	r0, #0
   29810:	str	r0, [fp, #-4]
   29814:	b	29878 <flatcc_builder_enter_user_frame@@Base+0xcc>
   29818:	ldr	r0, [sp, #8]
   2981c:	ldr	r2, [sp, #12]
   29820:	movw	r1, #0
   29824:	and	r1, r1, #255	; 0xff
   29828:	bl	14ec0 <memset@plt>
   2982c:	ldr	r0, [fp, #-8]
   29830:	ldr	r0, [r0, #224]	; 0xe0
   29834:	ldr	r1, [sp, #8]
   29838:	add	r2, r1, #4
   2983c:	str	r2, [sp, #8]
   29840:	str	r0, [r1]
   29844:	ldr	r0, [fp, #-8]
   29848:	ldr	r0, [r0, #228]	; 0xe4
   2984c:	add	r0, r0, #4
   29850:	ldr	r1, [fp, #-8]
   29854:	str	r0, [r1, #224]	; 0xe0
   29858:	ldr	r0, [sp, #12]
   2985c:	ldr	r1, [fp, #-8]
   29860:	ldr	r2, [r1, #228]	; 0xe4
   29864:	add	r0, r2, r0
   29868:	str	r0, [r1, #228]	; 0xe4
   2986c:	ldr	r0, [fp, #-8]
   29870:	ldr	r0, [r0, #224]	; 0xe0
   29874:	str	r0, [fp, #-4]
   29878:	ldr	r0, [fp, #-4]
   2987c:	mov	sp, fp
   29880:	pop	{fp, pc}

00029884 <flatcc_builder_exit_user_frame@@Base>:
   29884:	push	{fp, lr}
   29888:	mov	fp, sp
   2988c:	sub	sp, sp, #8
   29890:	str	r0, [sp, #4]
   29894:	ldr	r0, [sp, #4]
   29898:	ldr	r0, [r0, #224]	; 0xe0
   2989c:	cmp	r0, #0
   298a0:	bls	298a8 <flatcc_builder_exit_user_frame@@Base+0x24>
   298a4:	b	298c8 <flatcc_builder_exit_user_frame@@Base+0x44>
   298a8:	ldr	r0, [pc, #100]	; 29914 <flatcc_builder_exit_user_frame@@Base+0x90>
   298ac:	add	r0, pc, r0
   298b0:	ldr	r1, [pc, #96]	; 29918 <flatcc_builder_exit_user_frame@@Base+0x94>
   298b4:	add	r1, pc, r1
   298b8:	ldr	r2, [pc, #92]	; 2991c <flatcc_builder_exit_user_frame@@Base+0x98>
   298bc:	add	r3, pc, r2
   298c0:	movw	r2, #542	; 0x21e
   298c4:	bl	14f08 <__assert_fail@plt>
   298c8:	ldr	r0, [sp, #4]
   298cc:	ldr	r0, [r0, #108]	; 0x6c
   298d0:	ldr	r1, [sp, #4]
   298d4:	ldr	r1, [r1, #224]	; 0xe0
   298d8:	add	r0, r0, r1
   298dc:	str	r0, [sp]
   298e0:	ldr	r0, [sp, #4]
   298e4:	ldr	r0, [r0, #224]	; 0xe0
   298e8:	sub	r0, r0, #4
   298ec:	ldr	r1, [sp, #4]
   298f0:	str	r0, [r1, #228]	; 0xe4
   298f4:	ldr	r0, [sp]
   298f8:	mvn	r1, #3
   298fc:	add	r0, r0, r1
   29900:	ldr	r0, [r0]
   29904:	ldr	r1, [sp, #4]
   29908:	str	r0, [r1, #224]	; 0xe0
   2990c:	mov	sp, fp
   29910:	pop	{fp, pc}
   29914:	andeq	r0, r2, r3, asr #3
   29918:	andeq	r0, r2, r0, lsr #2
   2991c:	andeq	r0, r2, ip, asr #3

00029920 <flatcc_builder_exit_user_frame_at@@Base>:
   29920:	push	{fp, lr}
   29924:	mov	fp, sp
   29928:	sub	sp, sp, #8
   2992c:	str	r0, [sp, #4]
   29930:	str	r1, [sp]
   29934:	ldr	r0, [sp, #4]
   29938:	ldr	r0, [r0, #224]	; 0xe0
   2993c:	ldr	r1, [sp]
   29940:	cmp	r0, r1
   29944:	bcc	2994c <flatcc_builder_exit_user_frame_at@@Base+0x2c>
   29948:	b	2996c <flatcc_builder_exit_user_frame_at@@Base+0x4c>
   2994c:	ldr	r0, [pc, #52]	; 29988 <flatcc_builder_exit_user_frame_at@@Base+0x68>
   29950:	add	r0, pc, r0
   29954:	ldr	r1, [pc, #48]	; 2998c <flatcc_builder_exit_user_frame_at@@Base+0x6c>
   29958:	add	r1, pc, r1
   2995c:	ldr	r2, [pc, #44]	; 29990 <flatcc_builder_exit_user_frame_at@@Base+0x70>
   29960:	add	r3, pc, r2
   29964:	movw	r2, #551	; 0x227
   29968:	bl	14f08 <__assert_fail@plt>
   2996c:	ldr	r0, [sp]
   29970:	ldr	r1, [sp, #4]
   29974:	str	r0, [r1, #224]	; 0xe0
   29978:	ldr	r0, [sp, #4]
   2997c:	bl	29884 <flatcc_builder_exit_user_frame@@Base>
   29980:	mov	sp, fp
   29984:	pop	{fp, pc}
   29988:	andeq	r0, r2, r2, ror r1
   2998c:	andeq	r0, r2, ip, ror r0
   29990:	andeq	r0, r2, r1, lsl #3

00029994 <flatcc_builder_get_current_user_frame@@Base>:
   29994:	sub	sp, sp, #4
   29998:	str	r0, [sp]
   2999c:	ldr	r0, [sp]
   299a0:	ldr	r0, [r0, #224]	; 0xe0
   299a4:	add	sp, sp, #4
   299a8:	bx	lr

000299ac <flatcc_builder_get_user_frame_ptr@@Base>:
   299ac:	sub	sp, sp, #8
   299b0:	str	r0, [sp, #4]
   299b4:	str	r1, [sp]
   299b8:	ldr	r0, [sp, #4]
   299bc:	ldr	r0, [r0, #108]	; 0x6c
   299c0:	ldr	r1, [sp]
   299c4:	add	r0, r0, r1
   299c8:	add	sp, sp, #8
   299cc:	bx	lr

000299d0 <flatcc_builder_embed_buffer@@Base>:
   299d0:	push	{fp, lr}
   299d4:	mov	fp, sp
   299d8:	sub	sp, sp, #120	; 0x78
   299dc:	ldr	ip, [fp, #12]
   299e0:	ldr	lr, [fp, #8]
   299e4:	str	r0, [fp, #-8]
   299e8:	strh	r1, [fp, #-10]
   299ec:	str	r2, [fp, #-16]
   299f0:	str	r3, [fp, #-20]	; 0xffffffec
   299f4:	strh	lr, [fp, #-22]	; 0xffffffea
   299f8:	ldr	r0, [fp, #12]
   299fc:	and	r0, r0, #2
   29a00:	str	r0, [sp, #12]
   29a04:	ldr	r0, [fp, #-8]
   29a08:	ldrh	r1, [fp, #-10]
   29a0c:	ldr	r2, [fp, #-8]
   29a10:	ldr	r2, [r2, #152]	; 0x98
   29a14:	cmp	r2, #0
   29a18:	movw	r2, #0
   29a1c:	moveq	r2, #1
   29a20:	mvn	r3, #0
   29a24:	eor	r2, r2, r3
   29a28:	and	r3, r2, #1
   29a2c:	sub	r2, fp, #22
   29a30:	str	r1, [sp, #8]
   29a34:	mov	r1, r2
   29a38:	ldr	r2, [sp, #8]
   29a3c:	uxth	r2, r2
   29a40:	str	ip, [sp, #4]
   29a44:	bl	29bb8 <flatcc_builder_embed_buffer@@Base+0x1e8>
   29a48:	cmp	r0, #0
   29a4c:	beq	29a5c <flatcc_builder_embed_buffer@@Base+0x8c>
   29a50:	movw	r0, #0
   29a54:	str	r0, [fp, #-4]
   29a58:	b	29ba8 <flatcc_builder_embed_buffer@@Base+0x1d8>
   29a5c:	ldr	r0, [fp, #-8]
   29a60:	ldr	r1, [fp, #-20]	; 0xffffffec
   29a64:	ldr	r2, [sp, #12]
   29a68:	cmp	r2, #0
   29a6c:	movw	r2, #0
   29a70:	movne	r2, #1
   29a74:	tst	r2, #1
   29a78:	movw	r2, #4
   29a7c:	moveq	r2, #0
   29a80:	add	r1, r1, r2
   29a84:	ldrh	r2, [fp, #-22]	; 0xffffffea
   29a88:	bl	29d24 <flatcc_builder_embed_buffer@@Base+0x354>
   29a8c:	str	r0, [fp, #-32]	; 0xffffffe0
   29a90:	ldr	r0, [fp, #-20]	; 0xffffffec
   29a94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29a98:	add	r0, r0, r1
   29a9c:	bl	29d58 <flatcc_builder_embed_buffer@@Base+0x388>
   29aa0:	str	r0, [fp, #-28]	; 0xffffffe4
   29aa4:	movw	r0, #0
   29aa8:	str	r0, [sp, #16]
   29aac:	str	r0, [sp, #20]
   29ab0:	ldr	r0, [fp, #-8]
   29ab4:	ldr	r0, [r0, #152]	; 0x98
   29ab8:	cmp	r0, #0
   29abc:	beq	29afc <flatcc_builder_embed_buffer@@Base+0x12c>
   29ac0:	ldr	r0, [sp, #16]
   29ac4:	add	r0, r0, #4
   29ac8:	str	r0, [sp, #16]
   29acc:	add	r0, sp, #16
   29ad0:	add	r0, r0, #8
   29ad4:	ldr	r1, [sp, #20]
   29ad8:	sub	r2, fp, #28
   29adc:	str	r2, [r0, r1, lsl #3]
   29ae0:	ldr	r1, [sp, #20]
   29ae4:	add	r0, r0, r1, lsl #3
   29ae8:	movw	r1, #4
   29aec:	str	r1, [r0, #4]
   29af0:	ldr	r0, [sp, #20]
   29af4:	add	r0, r0, #1
   29af8:	str	r0, [sp, #20]
   29afc:	ldr	r0, [fp, #-20]	; 0xffffffec
   29b00:	cmp	r0, #0
   29b04:	bls	29b48 <flatcc_builder_embed_buffer@@Base+0x178>
   29b08:	ldr	r0, [fp, #-20]	; 0xffffffec
   29b0c:	ldr	r1, [sp, #16]
   29b10:	add	r0, r1, r0
   29b14:	str	r0, [sp, #16]
   29b18:	ldr	r0, [fp, #-16]
   29b1c:	add	r1, sp, #16
   29b20:	add	r1, r1, #8
   29b24:	ldr	r2, [sp, #20]
   29b28:	str	r0, [r1, r2, lsl #3]
   29b2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29b30:	ldr	r2, [sp, #20]
   29b34:	add	r1, r1, r2, lsl #3
   29b38:	str	r0, [r1, #4]
   29b3c:	ldr	r0, [sp, #20]
   29b40:	add	r0, r0, #1
   29b44:	str	r0, [sp, #20]
   29b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29b4c:	cmp	r0, #0
   29b50:	bls	29b98 <flatcc_builder_embed_buffer@@Base+0x1c8>
   29b54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29b58:	ldr	r1, [sp, #16]
   29b5c:	add	r0, r1, r0
   29b60:	str	r0, [sp, #16]
   29b64:	add	r0, sp, #16
   29b68:	add	r0, r0, #8
   29b6c:	ldr	r1, [sp, #20]
   29b70:	ldr	r2, [pc, #60]	; 29bb4 <flatcc_builder_embed_buffer@@Base+0x1e4>
   29b74:	ldr	r2, [pc, r2]
   29b78:	str	r2, [r0, r1, lsl #3]
   29b7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29b80:	ldr	r2, [sp, #20]
   29b84:	add	r0, r0, r2, lsl #3
   29b88:	str	r1, [r0, #4]
   29b8c:	ldr	r0, [sp, #20]
   29b90:	add	r0, r0, #1
   29b94:	str	r0, [sp, #20]
   29b98:	ldr	r0, [fp, #-8]
   29b9c:	add	r1, sp, #16
   29ba0:	bl	29d6c <flatcc_builder_embed_buffer@@Base+0x39c>
   29ba4:	str	r0, [fp, #-4]
   29ba8:	ldr	r0, [fp, #-4]
   29bac:	mov	sp, fp
   29bb0:	pop	{fp, pc}
   29bb4:	andeq	r3, r3, ip, ror #9
   29bb8:	push	{fp, lr}
   29bbc:	mov	fp, sp
   29bc0:	sub	sp, sp, #104	; 0x68
   29bc4:	str	r0, [fp, #-4]
   29bc8:	str	r1, [fp, #-8]
   29bcc:	strh	r2, [fp, #-10]
   29bd0:	str	r3, [fp, #-16]
   29bd4:	ldrh	r0, [fp, #-10]
   29bd8:	cmp	r0, #0
   29bdc:	beq	29bec <flatcc_builder_embed_buffer@@Base+0x21c>
   29be0:	ldrh	r0, [fp, #-10]
   29be4:	str	r0, [sp, #8]
   29be8:	b	29c20 <flatcc_builder_embed_buffer@@Base+0x250>
   29bec:	ldr	r0, [fp, #-4]
   29bf0:	ldrh	r0, [r0, #132]	; 0x84
   29bf4:	cmp	r0, #0
   29bf8:	beq	29c0c <flatcc_builder_embed_buffer@@Base+0x23c>
   29bfc:	ldr	r0, [fp, #-4]
   29c00:	ldrh	r0, [r0, #132]	; 0x84
   29c04:	str	r0, [sp, #4]
   29c08:	b	29c18 <flatcc_builder_embed_buffer@@Base+0x248>
   29c0c:	movw	r0, #1
   29c10:	str	r0, [sp, #4]
   29c14:	b	29c18 <flatcc_builder_embed_buffer@@Base+0x248>
   29c18:	ldr	r0, [sp, #4]
   29c1c:	str	r0, [sp, #8]
   29c20:	ldr	r0, [sp, #8]
   29c24:	strh	r0, [fp, #-10]
   29c28:	ldr	r0, [fp, #-8]
   29c2c:	movw	r1, #4
   29c30:	uxth	r1, r1
   29c34:	bl	2b724 <flatcc_builder_start_vector@@Base+0xac>
   29c38:	ldr	r0, [fp, #-8]
   29c3c:	ldrh	r1, [fp, #-10]
   29c40:	bl	2b724 <flatcc_builder_start_vector@@Base+0xac>
   29c44:	ldr	r0, [fp, #-16]
   29c48:	cmp	r0, #0
   29c4c:	bne	29d08 <flatcc_builder_embed_buffer@@Base+0x338>
   29c50:	ldr	r0, [fp, #-4]
   29c54:	ldrh	r1, [fp, #-10]
   29c58:	bl	2eb6c <flatcc_builder_get_emit_context@@Base+0x18>
   29c5c:	str	r0, [fp, #-20]	; 0xffffffec
   29c60:	ldr	r0, [fp, #-20]	; 0xffffffec
   29c64:	cmp	r0, #0
   29c68:	beq	29d04 <flatcc_builder_embed_buffer@@Base+0x334>
   29c6c:	movw	r0, #0
   29c70:	str	r0, [sp, #12]
   29c74:	str	r0, [sp, #16]
   29c78:	ldr	r0, [fp, #-20]	; 0xffffffec
   29c7c:	cmp	r0, #0
   29c80:	bls	29cc8 <flatcc_builder_embed_buffer@@Base+0x2f8>
   29c84:	ldr	r0, [fp, #-20]	; 0xffffffec
   29c88:	ldr	r1, [sp, #12]
   29c8c:	add	r0, r1, r0
   29c90:	str	r0, [sp, #12]
   29c94:	add	r0, sp, #12
   29c98:	add	r0, r0, #8
   29c9c:	ldr	r1, [sp, #16]
   29ca0:	ldr	r2, [pc, #120]	; 29d20 <flatcc_builder_embed_buffer@@Base+0x350>
   29ca4:	ldr	r2, [pc, r2]
   29ca8:	str	r2, [r0, r1, lsl #3]
   29cac:	ldr	r1, [fp, #-20]	; 0xffffffec
   29cb0:	ldr	r2, [sp, #16]
   29cb4:	add	r0, r0, r2, lsl #3
   29cb8:	str	r1, [r0, #4]
   29cbc:	ldr	r0, [sp, #16]
   29cc0:	add	r0, r0, #1
   29cc4:	str	r0, [sp, #16]
   29cc8:	ldr	r0, [fp, #-4]
   29ccc:	add	r1, sp, #12
   29cd0:	bl	2bd08 <flatcc_builder_create_vtable@@Base+0x104>
   29cd4:	movw	r1, #0
   29cd8:	cmp	r1, r0
   29cdc:	bne	29d00 <flatcc_builder_embed_buffer@@Base+0x330>
   29ce0:	ldr	r0, [pc, #44]	; 29d14 <flatcc_builder_embed_buffer@@Base+0x344>
   29ce4:	add	r0, pc, r0
   29ce8:	ldr	r1, [pc, #40]	; 29d18 <flatcc_builder_embed_buffer@@Base+0x348>
   29cec:	add	r1, pc, r1
   29cf0:	ldr	r2, [pc, #36]	; 29d1c <flatcc_builder_embed_buffer@@Base+0x34c>
   29cf4:	add	r3, pc, r2
   29cf8:	movw	r2, #702	; 0x2be
   29cfc:	bl	14f08 <__assert_fail@plt>
   29d00:	b	29d04 <flatcc_builder_embed_buffer@@Base+0x334>
   29d04:	b	29d08 <flatcc_builder_embed_buffer@@Base+0x338>
   29d08:	movw	r0, #0
   29d0c:	mov	sp, fp
   29d10:	pop	{fp, pc}
   29d14:	andeq	r0, r2, sp, lsr #29
   29d18:	andeq	pc, r1, r8, ror #25
   29d1c:	andeq	r0, r2, sl, lsl sp
   29d20:			; <UNDEFINED> instruction: 0x000333bc
   29d24:	sub	sp, sp, #12
   29d28:	str	r0, [sp, #8]
   29d2c:	str	r1, [sp, #4]
   29d30:	strh	r2, [sp, #2]
   29d34:	ldr	r0, [sp, #8]
   29d38:	ldr	r0, [r0, #136]	; 0x88
   29d3c:	ldr	r1, [sp, #4]
   29d40:	sub	r0, r0, r1
   29d44:	ldrh	r1, [sp, #2]
   29d48:	sub	r1, r1, #1
   29d4c:	and	r0, r0, r1
   29d50:	add	sp, sp, #12
   29d54:	bx	lr
   29d58:	sub	sp, sp, #4
   29d5c:	str	r0, [sp]
   29d60:	ldr	r0, [sp]
   29d64:	add	sp, sp, #4
   29d68:	bx	lr
   29d6c:	push	{fp, lr}
   29d70:	mov	fp, sp
   29d74:	sub	sp, sp, #24
   29d78:	str	r0, [fp, #-4]
   29d7c:	str	r1, [fp, #-8]
   29d80:	ldr	r0, [fp, #-4]
   29d84:	ldr	r0, [r0, #136]	; 0x88
   29d88:	ldr	r1, [fp, #-8]
   29d8c:	ldr	r1, [r1]
   29d90:	sub	r0, r0, r1
   29d94:	str	r0, [sp, #12]
   29d98:	ldr	r0, [fp, #-8]
   29d9c:	ldr	r0, [r0]
   29da0:	cmp	r0, #16
   29da4:	bls	29dbc <flatcc_builder_embed_buffer@@Base+0x3ec>
   29da8:	ldr	r0, [fp, #-8]
   29dac:	ldr	r0, [r0]
   29db0:	sub	r0, r0, #16
   29db4:	cmn	r0, #1
   29db8:	bhi	29dd0 <flatcc_builder_embed_buffer@@Base+0x400>
   29dbc:	ldr	r0, [sp, #12]
   29dc0:	ldr	r1, [fp, #-4]
   29dc4:	ldr	r1, [r1, #136]	; 0x88
   29dc8:	cmp	r0, r1
   29dcc:	blt	29df0 <flatcc_builder_embed_buffer@@Base+0x420>
   29dd0:	ldr	r0, [pc, #172]	; 29e84 <flatcc_builder_embed_buffer@@Base+0x4b4>
   29dd4:	add	r0, pc, r0
   29dd8:	ldr	r1, [pc, #168]	; 29e88 <flatcc_builder_embed_buffer@@Base+0x4b8>
   29ddc:	add	r1, pc, r1
   29de0:	ldr	r2, [pc, #164]	; 29e8c <flatcc_builder_embed_buffer@@Base+0x4bc>
   29de4:	add	r3, pc, r2
   29de8:	movw	r2, #647	; 0x287
   29dec:	bl	14f08 <__assert_fail@plt>
   29df0:	ldr	r0, [fp, #-4]
   29df4:	ldr	r0, [r0, #44]	; 0x2c
   29df8:	ldr	r1, [fp, #-4]
   29dfc:	ldr	r1, [r1, #36]	; 0x24
   29e00:	ldr	r2, [fp, #-8]
   29e04:	add	r2, r2, #8
   29e08:	ldr	r3, [fp, #-8]
   29e0c:	ldr	r3, [r3, #4]
   29e10:	ldr	ip, [sp, #12]
   29e14:	ldr	lr, [fp, #-8]
   29e18:	ldr	lr, [lr]
   29e1c:	str	r0, [sp, #8]
   29e20:	mov	r0, r1
   29e24:	mov	r1, r2
   29e28:	mov	r2, r3
   29e2c:	mov	r3, ip
   29e30:	str	lr, [sp]
   29e34:	ldr	ip, [sp, #8]
   29e38:	blx	ip
   29e3c:	cmp	r0, #0
   29e40:	beq	29e64 <flatcc_builder_embed_buffer@@Base+0x494>
   29e44:	ldr	r0, [pc, #44]	; 29e78 <flatcc_builder_embed_buffer@@Base+0x4a8>
   29e48:	add	r0, pc, r0
   29e4c:	ldr	r1, [pc, #40]	; 29e7c <flatcc_builder_embed_buffer@@Base+0x4ac>
   29e50:	add	r1, pc, r1
   29e54:	ldr	r2, [pc, #36]	; 29e80 <flatcc_builder_embed_buffer@@Base+0x4b0>
   29e58:	add	r3, pc, r2
   29e5c:	movw	r2, #651	; 0x28b
   29e60:	bl	14f08 <__assert_fail@plt>
   29e64:	ldr	r0, [sp, #12]
   29e68:	ldr	r1, [fp, #-4]
   29e6c:	str	r0, [r1, #136]	; 0x88
   29e70:	mov	sp, fp
   29e74:	pop	{fp, pc}
   29e78:	andeq	r0, r2, r9, asr #26
   29e7c:	andeq	pc, r1, r4, lsl #23
   29e80:	strdeq	r0, [r2], -r8
   29e84:			; <UNDEFINED> instruction: 0x00020dbd
   29e88:	strdeq	pc, [r1], -r8
   29e8c:	andeq	r0, r2, ip, ror #24

00029e90 <flatcc_builder_create_buffer@@Base>:
   29e90:	push	{fp, lr}
   29e94:	mov	fp, sp
   29e98:	sub	sp, sp, #152	; 0x98
   29e9c:	ldr	ip, [fp, #12]
   29ea0:	ldr	lr, [fp, #8]
   29ea4:	str	r0, [fp, #-8]
   29ea8:	str	r1, [fp, #-12]
   29eac:	strh	r2, [fp, #-14]
   29eb0:	str	r3, [fp, #-20]	; 0xffffffec
   29eb4:	strh	lr, [fp, #-22]	; 0xffffffea
   29eb8:	movw	r0, #0
   29ebc:	str	r0, [fp, #-36]	; 0xffffffdc
   29ec0:	str	r0, [sp, #28]
   29ec4:	ldr	r0, [fp, #12]
   29ec8:	and	r0, r0, #1
   29ecc:	cmp	r0, #0
   29ed0:	movw	r0, #0
   29ed4:	movne	r0, #1
   29ed8:	and	r0, r0, #1
   29edc:	str	r0, [sp, #24]
   29ee0:	ldr	r0, [fp, #12]
   29ee4:	and	r0, r0, #2
   29ee8:	cmp	r0, #0
   29eec:	movw	r0, #0
   29ef0:	movne	r0, #1
   29ef4:	and	r0, r0, #1
   29ef8:	str	r0, [sp, #20]
   29efc:	ldr	r0, [fp, #-8]
   29f00:	ldrh	r1, [fp, #-14]
   29f04:	ldr	r3, [sp, #24]
   29f08:	sub	r2, fp, #22
   29f0c:	str	r1, [sp, #16]
   29f10:	mov	r1, r2
   29f14:	ldr	r2, [sp, #16]
   29f18:	uxth	r2, r2
   29f1c:	str	ip, [sp, #12]
   29f20:	bl	29bb8 <flatcc_builder_embed_buffer@@Base+0x1e8>
   29f24:	cmp	r0, #0
   29f28:	beq	29f38 <flatcc_builder_create_buffer@@Base+0xa8>
   29f2c:	movw	r0, #0
   29f30:	str	r0, [fp, #-4]
   29f34:	b	2a21c <flatcc_builder_create_buffer@@Base+0x38c>
   29f38:	ldr	r0, [fp, #-8]
   29f3c:	ldrh	r1, [fp, #-22]	; 0xffffffea
   29f40:	bl	2a238 <flatcc_builder_create_buffer@@Base+0x3a8>
   29f44:	ldr	r0, [fp, #-12]
   29f48:	movw	r1, #0
   29f4c:	cmp	r0, r1
   29f50:	beq	29f90 <flatcc_builder_create_buffer@@Base+0x100>
   29f54:	ldr	r0, [fp, #-12]
   29f58:	ldrb	r1, [r0]
   29f5c:	strb	r1, [sp, #28]
   29f60:	ldrb	r1, [r0, #1]
   29f64:	strb	r1, [sp, #29]
   29f68:	ldrb	r1, [r0, #2]
   29f6c:	strb	r1, [sp, #30]
   29f70:	ldrb	r0, [r0, #3]
   29f74:	strb	r0, [sp, #31]
   29f78:	ldr	r0, [sp, #28]
   29f7c:	bl	2a26c <flatcc_builder_create_buffer@@Base+0x3dc>
   29f80:	str	r0, [sp, #28]
   29f84:	ldr	r0, [sp, #28]
   29f88:	bl	29d58 <flatcc_builder_embed_buffer@@Base+0x388>
   29f8c:	str	r0, [sp, #28]
   29f90:	ldr	r0, [sp, #28]
   29f94:	cmp	r0, #0
   29f98:	movw	r0, #0
   29f9c:	movne	r0, #1
   29fa0:	tst	r0, #1
   29fa4:	movw	r0, #4
   29fa8:	mov	r1, r0
   29fac:	moveq	r1, #0
   29fb0:	str	r1, [fp, #-36]	; 0xffffffdc
   29fb4:	ldr	r1, [fp, #-8]
   29fb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   29fbc:	add	r2, r2, #4
   29fc0:	ldr	r3, [sp, #20]
   29fc4:	cmp	r3, #0
   29fc8:	movw	r3, #0
   29fcc:	movne	r3, #1
   29fd0:	tst	r3, #1
   29fd4:	moveq	r0, #0
   29fd8:	add	r0, r2, r0
   29fdc:	str	r0, [sp, #8]
   29fe0:	mov	r0, r1
   29fe4:	ldr	r1, [sp, #8]
   29fe8:	ldrh	r2, [fp, #-22]	; 0xffffffea
   29fec:	bl	29d24 <flatcc_builder_embed_buffer@@Base+0x354>
   29ff0:	str	r0, [fp, #-32]	; 0xffffffe0
   29ff4:	movw	r0, #0
   29ff8:	str	r0, [sp, #32]
   29ffc:	str	r0, [sp, #36]	; 0x24
   2a000:	ldr	r0, [sp, #24]
   2a004:	cmp	r0, #0
   2a008:	bne	2a018 <flatcc_builder_create_buffer@@Base+0x188>
   2a00c:	ldr	r0, [sp, #20]
   2a010:	cmp	r0, #0
   2a014:	beq	2a054 <flatcc_builder_create_buffer@@Base+0x1c4>
   2a018:	ldr	r0, [sp, #32]
   2a01c:	add	r0, r0, #4
   2a020:	str	r0, [sp, #32]
   2a024:	add	r0, sp, #32
   2a028:	add	r0, r0, #8
   2a02c:	ldr	r1, [sp, #36]	; 0x24
   2a030:	sub	r2, fp, #44	; 0x2c
   2a034:	str	r2, [r0, r1, lsl #3]
   2a038:	ldr	r1, [sp, #36]	; 0x24
   2a03c:	add	r0, r0, r1, lsl #3
   2a040:	movw	r1, #4
   2a044:	str	r1, [r0, #4]
   2a048:	ldr	r0, [sp, #36]	; 0x24
   2a04c:	add	r0, r0, #1
   2a050:	str	r0, [sp, #36]	; 0x24
   2a054:	ldr	r0, [sp, #32]
   2a058:	add	r0, r0, #4
   2a05c:	str	r0, [sp, #32]
   2a060:	add	r0, sp, #32
   2a064:	add	r0, r0, #8
   2a068:	ldr	r1, [sp, #36]	; 0x24
   2a06c:	sub	r2, fp, #40	; 0x28
   2a070:	str	r2, [r0, r1, lsl #3]
   2a074:	ldr	r1, [sp, #36]	; 0x24
   2a078:	add	r0, r0, r1, lsl #3
   2a07c:	movw	r1, #4
   2a080:	str	r1, [r0, #4]
   2a084:	ldr	r0, [sp, #36]	; 0x24
   2a088:	add	r0, r0, #1
   2a08c:	str	r0, [sp, #36]	; 0x24
   2a090:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a094:	cmp	r0, #0
   2a098:	bls	2a0dc <flatcc_builder_create_buffer@@Base+0x24c>
   2a09c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a0a0:	ldr	r1, [sp, #32]
   2a0a4:	add	r0, r1, r0
   2a0a8:	str	r0, [sp, #32]
   2a0ac:	add	r0, sp, #32
   2a0b0:	add	r0, r0, #8
   2a0b4:	ldr	r1, [sp, #36]	; 0x24
   2a0b8:	add	r2, sp, #28
   2a0bc:	str	r2, [r0, r1, lsl #3]
   2a0c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a0c4:	ldr	r2, [sp, #36]	; 0x24
   2a0c8:	add	r0, r0, r2, lsl #3
   2a0cc:	str	r1, [r0, #4]
   2a0d0:	ldr	r0, [sp, #36]	; 0x24
   2a0d4:	add	r0, r0, #1
   2a0d8:	str	r0, [sp, #36]	; 0x24
   2a0dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a0e0:	cmp	r0, #0
   2a0e4:	bls	2a12c <flatcc_builder_create_buffer@@Base+0x29c>
   2a0e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a0ec:	ldr	r1, [sp, #32]
   2a0f0:	add	r0, r1, r0
   2a0f4:	str	r0, [sp, #32]
   2a0f8:	add	r0, sp, #32
   2a0fc:	add	r0, r0, #8
   2a100:	ldr	r1, [sp, #36]	; 0x24
   2a104:	ldr	r2, [pc, #296]	; 2a234 <flatcc_builder_create_buffer@@Base+0x3a4>
   2a108:	ldr	r2, [pc, r2]
   2a10c:	str	r2, [r0, r1, lsl #3]
   2a110:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a114:	ldr	r2, [sp, #36]	; 0x24
   2a118:	add	r0, r0, r2, lsl #3
   2a11c:	str	r1, [r0, #4]
   2a120:	ldr	r0, [sp, #36]	; 0x24
   2a124:	add	r0, r0, #1
   2a128:	str	r0, [sp, #36]	; 0x24
   2a12c:	ldr	r0, [fp, #-8]
   2a130:	ldr	r0, [r0, #136]	; 0x88
   2a134:	ldr	r1, [sp, #32]
   2a138:	sub	r0, r0, r1
   2a13c:	ldr	r1, [sp, #24]
   2a140:	cmp	r1, #0
   2a144:	movw	r1, #1
   2a148:	str	r0, [sp, #4]
   2a14c:	str	r1, [sp]
   2a150:	bne	2a168 <flatcc_builder_create_buffer@@Base+0x2d8>
   2a154:	ldr	r0, [sp, #20]
   2a158:	cmp	r0, #0
   2a15c:	movw	r0, #0
   2a160:	movne	r0, #1
   2a164:	str	r0, [sp]
   2a168:	ldr	r0, [sp]
   2a16c:	tst	r0, #1
   2a170:	movw	r0, #4
   2a174:	moveq	r0, #0
   2a178:	ldr	r1, [sp, #4]
   2a17c:	add	r0, r1, r0
   2a180:	str	r0, [fp, #-48]	; 0xffffffd0
   2a184:	ldr	r0, [sp, #24]
   2a188:	cmp	r0, #0
   2a18c:	beq	2a1ac <flatcc_builder_create_buffer@@Base+0x31c>
   2a190:	ldr	r0, [fp, #-8]
   2a194:	ldr	r0, [r0, #144]	; 0x90
   2a198:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a19c:	sub	r0, r0, r1
   2a1a0:	bl	29d58 <flatcc_builder_embed_buffer@@Base+0x388>
   2a1a4:	str	r0, [fp, #-44]	; 0xffffffd4
   2a1a8:	b	2a1c4 <flatcc_builder_create_buffer@@Base+0x334>
   2a1ac:	ldr	r0, [fp, #-8]
   2a1b0:	ldr	r0, [r0, #140]	; 0x8c
   2a1b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a1b8:	sub	r0, r0, r1
   2a1bc:	bl	29d58 <flatcc_builder_embed_buffer@@Base+0x388>
   2a1c0:	str	r0, [fp, #-44]	; 0xffffffd4
   2a1c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a1c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a1cc:	sub	r0, r0, r1
   2a1d0:	bl	29d58 <flatcc_builder_embed_buffer@@Base+0x388>
   2a1d4:	str	r0, [fp, #-40]	; 0xffffffd8
   2a1d8:	ldr	r0, [fp, #-8]
   2a1dc:	add	r1, sp, #32
   2a1e0:	bl	29d6c <flatcc_builder_embed_buffer@@Base+0x39c>
   2a1e4:	str	r0, [fp, #-28]	; 0xffffffe4
   2a1e8:	movw	r1, #0
   2a1ec:	cmp	r1, r0
   2a1f0:	bne	2a214 <flatcc_builder_create_buffer@@Base+0x384>
   2a1f4:	ldr	r0, [pc, #44]	; 2a228 <flatcc_builder_create_buffer@@Base+0x398>
   2a1f8:	add	r0, pc, r0
   2a1fc:	ldr	r1, [pc, #40]	; 2a22c <flatcc_builder_create_buffer@@Base+0x39c>
   2a200:	add	r1, pc, r1
   2a204:	ldr	r2, [pc, #36]	; 2a230 <flatcc_builder_create_buffer@@Base+0x3a0>
   2a208:	add	r3, pc, r2
   2a20c:	movw	r2, #772	; 0x304
   2a210:	bl	14f08 <__assert_fail@plt>
   2a214:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a218:	str	r0, [fp, #-4]
   2a21c:	ldr	r0, [fp, #-4]
   2a220:	mov	sp, fp
   2a224:	pop	{fp, pc}
   2a228:	muleq	r2, r9, r9
   2a22c:	ldrdeq	pc, [r1], -r4
   2a230:	andeq	pc, r1, lr, lsl r9	; <UNPREDICTABLE>
   2a234:	andeq	r2, r3, r8, asr pc
   2a238:	sub	sp, sp, #8
   2a23c:	str	r0, [sp, #4]
   2a240:	strh	r1, [sp, #2]
   2a244:	ldr	r0, [sp, #4]
   2a248:	ldrh	r0, [r0, #128]	; 0x80
   2a24c:	ldrh	r1, [sp, #2]
   2a250:	cmp	r0, r1
   2a254:	bge	2a264 <flatcc_builder_create_buffer@@Base+0x3d4>
   2a258:	ldrh	r0, [sp, #2]
   2a25c:	ldr	r1, [sp, #4]
   2a260:	strh	r0, [r1, #128]	; 0x80
   2a264:	add	sp, sp, #8
   2a268:	bx	lr
   2a26c:	sub	sp, sp, #4
   2a270:	str	r0, [sp]
   2a274:	ldr	r0, [sp]
   2a278:	add	sp, sp, #4
   2a27c:	bx	lr

0002a280 <flatcc_builder_create_struct@@Base>:
   2a280:	push	{fp, lr}
   2a284:	mov	fp, sp
   2a288:	sub	sp, sp, #96	; 0x60
   2a28c:	str	r0, [fp, #-4]
   2a290:	str	r1, [fp, #-8]
   2a294:	str	r2, [fp, #-12]
   2a298:	strh	r3, [fp, #-14]
   2a29c:	ldrh	r0, [fp, #-14]
   2a2a0:	cmp	r0, #1
   2a2a4:	blt	2a2ac <flatcc_builder_create_struct@@Base+0x2c>
   2a2a8:	b	2a2cc <flatcc_builder_create_struct@@Base+0x4c>
   2a2ac:	ldr	r0, [pc, #244]	; 2a3a8 <flatcc_builder_create_struct@@Base+0x128>
   2a2b0:	add	r0, pc, r0
   2a2b4:	ldr	r1, [pc, #240]	; 2a3ac <flatcc_builder_create_struct@@Base+0x12c>
   2a2b8:	add	r1, pc, r1
   2a2bc:	ldr	r2, [pc, #236]	; 2a3b0 <flatcc_builder_create_struct@@Base+0x130>
   2a2c0:	add	r3, pc, r2
   2a2c4:	movw	r2, #783	; 0x30f
   2a2c8:	bl	14f08 <__assert_fail@plt>
   2a2cc:	ldr	r0, [fp, #-4]
   2a2d0:	ldrh	r1, [fp, #-14]
   2a2d4:	bl	2a238 <flatcc_builder_create_buffer@@Base+0x3a8>
   2a2d8:	ldr	r0, [fp, #-4]
   2a2dc:	ldr	r1, [fp, #-12]
   2a2e0:	ldrh	r2, [fp, #-14]
   2a2e4:	bl	29d24 <flatcc_builder_embed_buffer@@Base+0x354>
   2a2e8:	str	r0, [fp, #-20]	; 0xffffffec
   2a2ec:	movw	r0, #0
   2a2f0:	str	r0, [sp, #4]
   2a2f4:	str	r0, [sp, #8]
   2a2f8:	ldr	r0, [fp, #-12]
   2a2fc:	cmp	r0, #0
   2a300:	bls	2a344 <flatcc_builder_create_struct@@Base+0xc4>
   2a304:	ldr	r0, [fp, #-12]
   2a308:	ldr	r1, [sp, #4]
   2a30c:	add	r0, r1, r0
   2a310:	str	r0, [sp, #4]
   2a314:	ldr	r0, [fp, #-8]
   2a318:	add	r1, sp, #4
   2a31c:	add	r1, r1, #8
   2a320:	ldr	r2, [sp, #8]
   2a324:	str	r0, [r1, r2, lsl #3]
   2a328:	ldr	r0, [fp, #-12]
   2a32c:	ldr	r2, [sp, #8]
   2a330:	add	r1, r1, r2, lsl #3
   2a334:	str	r0, [r1, #4]
   2a338:	ldr	r0, [sp, #8]
   2a33c:	add	r0, r0, #1
   2a340:	str	r0, [sp, #8]
   2a344:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a348:	cmp	r0, #0
   2a34c:	bls	2a394 <flatcc_builder_create_struct@@Base+0x114>
   2a350:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a354:	ldr	r1, [sp, #4]
   2a358:	add	r0, r1, r0
   2a35c:	str	r0, [sp, #4]
   2a360:	add	r0, sp, #4
   2a364:	add	r0, r0, #8
   2a368:	ldr	r1, [sp, #8]
   2a36c:	ldr	r2, [pc, #64]	; 2a3b4 <flatcc_builder_create_struct@@Base+0x134>
   2a370:	ldr	r2, [pc, r2]
   2a374:	str	r2, [r0, r1, lsl #3]
   2a378:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a37c:	ldr	r2, [sp, #8]
   2a380:	add	r0, r0, r2, lsl #3
   2a384:	str	r1, [r0, #4]
   2a388:	ldr	r0, [sp, #8]
   2a38c:	add	r0, r0, #1
   2a390:	str	r0, [sp, #8]
   2a394:	ldr	r0, [fp, #-4]
   2a398:	add	r1, sp, #4
   2a39c:	bl	29d6c <flatcc_builder_embed_buffer@@Base+0x39c>
   2a3a0:	mov	sp, fp
   2a3a4:	pop	{fp, pc}
   2a3a8:	strdeq	pc, [r1], -r9
   2a3ac:	andeq	pc, r1, ip, lsl r7	; <UNPREDICTABLE>
   2a3b0:	strdeq	pc, [r1], -r4
   2a3b4:	strdeq	r2, [r3], -r0

0002a3b8 <flatcc_builder_start_buffer@@Base>:
   2a3b8:	push	{fp, lr}
   2a3bc:	mov	fp, sp
   2a3c0:	sub	sp, sp, #32
   2a3c4:	str	r0, [fp, #-8]
   2a3c8:	str	r1, [fp, #-12]
   2a3cc:	strh	r2, [fp, #-14]
   2a3d0:	str	r3, [sp, #12]
   2a3d4:	ldr	r0, [fp, #-8]
   2a3d8:	ldr	r1, [fp, #-8]
   2a3dc:	ldrh	r1, [r1, #128]	; 0x80
   2a3e0:	bl	2a530 <flatcc_builder_start_buffer@@Base+0x178>
   2a3e4:	cmp	r0, #0
   2a3e8:	beq	2a3f8 <flatcc_builder_start_buffer@@Base+0x40>
   2a3ec:	mvn	r0, #0
   2a3f0:	str	r0, [fp, #-4]
   2a3f4:	b	2a520 <flatcc_builder_start_buffer@@Base+0x168>
   2a3f8:	ldr	r0, [fp, #-8]
   2a3fc:	movw	r1, #1
   2a400:	strh	r1, [r0, #128]	; 0x80
   2a404:	ldr	r0, [fp, #-8]
   2a408:	ldrh	r0, [r0, #132]	; 0x84
   2a40c:	ldr	r1, [fp, #-8]
   2a410:	ldr	r1, [r1, #32]
   2a414:	strh	r0, [r1, #34]	; 0x22
   2a418:	ldrh	r0, [fp, #-14]
   2a41c:	ldr	r1, [fp, #-8]
   2a420:	strh	r0, [r1, #132]	; 0x84
   2a424:	ldr	r0, [fp, #-8]
   2a428:	ldrh	r0, [r0, #164]	; 0xa4
   2a42c:	ldr	r1, [fp, #-8]
   2a430:	ldr	r1, [r1, #32]
   2a434:	strh	r0, [r1, #32]
   2a438:	ldr	r0, [sp, #12]
   2a43c:	ldr	r1, [fp, #-8]
   2a440:	strh	r0, [r1, #164]	; 0xa4
   2a444:	ldr	r0, [fp, #-8]
   2a448:	ldr	r0, [r0, #144]	; 0x90
   2a44c:	ldr	r1, [fp, #-8]
   2a450:	ldr	r1, [r1, #32]
   2a454:	str	r0, [r1, #20]
   2a458:	ldr	r0, [fp, #-8]
   2a45c:	ldr	r0, [r0, #152]	; 0x98
   2a460:	ldr	r1, [fp, #-8]
   2a464:	ldr	r1, [r1, #32]
   2a468:	str	r0, [r1, #28]
   2a46c:	ldr	r0, [fp, #-8]
   2a470:	ldr	r0, [r0, #136]	; 0x88
   2a474:	ldr	r1, [fp, #-8]
   2a478:	str	r0, [r1, #144]	; 0x90
   2a47c:	ldr	r0, [fp, #-8]
   2a480:	ldr	r1, [r0, #148]	; 0x94
   2a484:	add	r2, r1, #1
   2a488:	str	r2, [r0, #148]	; 0x94
   2a48c:	ldr	r0, [fp, #-8]
   2a490:	str	r1, [r0, #152]	; 0x98
   2a494:	ldr	r0, [fp, #-8]
   2a498:	ldr	r0, [r0, #168]	; 0xa8
   2a49c:	ldr	r1, [fp, #-8]
   2a4a0:	ldr	r1, [r1, #32]
   2a4a4:	str	r0, [r1, #16]
   2a4a8:	ldr	r0, [fp, #-8]
   2a4ac:	add	r0, r0, #168	; 0xa8
   2a4b0:	ldr	r1, [fp, #-12]
   2a4b4:	movw	r2, #0
   2a4b8:	cmp	r1, r2
   2a4bc:	str	r0, [sp, #8]
   2a4c0:	beq	2a4d0 <flatcc_builder_start_buffer@@Base+0x118>
   2a4c4:	ldr	r0, [fp, #-12]
   2a4c8:	str	r0, [sp, #4]
   2a4cc:	b	2a4e0 <flatcc_builder_start_buffer@@Base+0x128>
   2a4d0:	ldr	r0, [pc, #84]	; 2a52c <flatcc_builder_start_buffer@@Base+0x174>
   2a4d4:	ldr	r0, [pc, r0]
   2a4d8:	str	r0, [sp, #4]
   2a4dc:	b	2a4e0 <flatcc_builder_start_buffer@@Base+0x128>
   2a4e0:	ldr	r0, [sp, #4]
   2a4e4:	ldrb	r1, [r0]
   2a4e8:	ldr	r2, [sp, #8]
   2a4ec:	strb	r1, [r2]
   2a4f0:	ldrb	r1, [r0, #1]
   2a4f4:	strb	r1, [r2, #1]
   2a4f8:	ldrb	r1, [r0, #2]
   2a4fc:	strb	r1, [r2, #2]
   2a500:	ldrb	r0, [r0, #3]
   2a504:	strb	r0, [r2, #3]
   2a508:	ldr	r0, [fp, #-8]
   2a50c:	ldr	r0, [r0, #32]
   2a510:	movw	r1, #1
   2a514:	strh	r1, [r0, #14]
   2a518:	movw	r0, #0
   2a51c:	str	r0, [fp, #-4]
   2a520:	ldr	r0, [fp, #-4]
   2a524:	mov	sp, fp
   2a528:	pop	{fp, pc}
   2a52c:	andeq	r2, r3, ip, lsl #23
   2a530:	push	{fp, lr}
   2a534:	mov	fp, sp
   2a538:	sub	sp, sp, #24
   2a53c:	str	r0, [fp, #-8]
   2a540:	strh	r1, [fp, #-10]
   2a544:	ldr	r0, [fp, #-8]
   2a548:	ldr	r1, [r0, #156]	; 0x9c
   2a54c:	add	r1, r1, #1
   2a550:	str	r1, [r0, #156]	; 0x9c
   2a554:	ldr	r0, [fp, #-8]
   2a558:	ldr	r0, [r0, #160]	; 0xa0
   2a55c:	cmp	r1, r0
   2a560:	ble	2a64c <flatcc_builder_start_buffer@@Base+0x294>
   2a564:	ldr	r0, [fp, #-8]
   2a568:	ldr	r0, [r0, #176]	; 0xb0
   2a56c:	cmp	r0, #0
   2a570:	ble	2a598 <flatcc_builder_start_buffer@@Base+0x1e0>
   2a574:	ldr	r0, [fp, #-8]
   2a578:	ldr	r0, [r0, #156]	; 0x9c
   2a57c:	ldr	r1, [fp, #-8]
   2a580:	ldr	r1, [r1, #176]	; 0xb0
   2a584:	cmp	r0, r1
   2a588:	ble	2a598 <flatcc_builder_start_buffer@@Base+0x1e0>
   2a58c:	mvn	r0, #0
   2a590:	str	r0, [fp, #-4]
   2a594:	b	2a6f0 <flatcc_builder_start_buffer@@Base+0x338>
   2a598:	ldr	r0, [fp, #-8]
   2a59c:	ldr	r1, [fp, #-8]
   2a5a0:	ldr	r1, [r1, #156]	; 0x9c
   2a5a4:	sub	r1, r1, #1
   2a5a8:	movw	r2, #36	; 0x24
   2a5ac:	mul	r1, r1, r2
   2a5b0:	movw	r3, #4
   2a5b4:	str	r1, [sp, #8]
   2a5b8:	mov	r1, r3
   2a5bc:	ldr	r3, [sp, #8]
   2a5c0:	str	r2, [sp, #4]
   2a5c4:	mov	r2, r3
   2a5c8:	ldr	r3, [sp, #4]
   2a5cc:	movw	ip, #0
   2a5d0:	str	ip, [sp]
   2a5d4:	bl	296c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2a5d8:	ldr	r1, [fp, #-8]
   2a5dc:	str	r0, [r1, #32]
   2a5e0:	movw	r1, #0
   2a5e4:	cmp	r0, r1
   2a5e8:	bne	2a5f8 <flatcc_builder_start_buffer@@Base+0x240>
   2a5ec:	mvn	r0, #0
   2a5f0:	str	r0, [fp, #-4]
   2a5f4:	b	2a6f0 <flatcc_builder_start_buffer@@Base+0x338>
   2a5f8:	ldr	r0, [fp, #-8]
   2a5fc:	ldr	r0, [r0, #88]	; 0x58
   2a600:	movw	r1, #36	; 0x24
   2a604:	udiv	r0, r0, r1
   2a608:	ldr	r1, [fp, #-8]
   2a60c:	str	r0, [r1, #160]	; 0xa0
   2a610:	ldr	r0, [fp, #-8]
   2a614:	ldr	r0, [r0, #176]	; 0xb0
   2a618:	cmp	r0, #0
   2a61c:	ble	2a648 <flatcc_builder_start_buffer@@Base+0x290>
   2a620:	ldr	r0, [fp, #-8]
   2a624:	ldr	r0, [r0, #176]	; 0xb0
   2a628:	ldr	r1, [fp, #-8]
   2a62c:	ldr	r1, [r1, #160]	; 0xa0
   2a630:	cmp	r0, r1
   2a634:	bge	2a648 <flatcc_builder_start_buffer@@Base+0x290>
   2a638:	ldr	r0, [fp, #-8]
   2a63c:	ldr	r0, [r0, #176]	; 0xb0
   2a640:	ldr	r1, [fp, #-8]
   2a644:	str	r0, [r1, #160]	; 0xa0
   2a648:	b	2a65c <flatcc_builder_start_buffer@@Base+0x2a4>
   2a64c:	ldr	r0, [fp, #-8]
   2a650:	ldr	r1, [r0, #32]
   2a654:	add	r1, r1, #36	; 0x24
   2a658:	str	r1, [r0, #32]
   2a65c:	ldr	r0, [fp, #-8]
   2a660:	ldr	r0, [r0, #20]
   2a664:	ldr	r1, [fp, #-8]
   2a668:	ldr	r1, [r1, #32]
   2a66c:	str	r0, [r1, #8]
   2a670:	ldr	r0, [fp, #-8]
   2a674:	ldrh	r0, [r0, #130]	; 0x82
   2a678:	ldr	r1, [fp, #-8]
   2a67c:	ldr	r1, [r1, #32]
   2a680:	strh	r0, [r1, #12]
   2a684:	ldrh	r0, [fp, #-10]
   2a688:	ldr	r1, [fp, #-8]
   2a68c:	strh	r0, [r1, #130]	; 0x82
   2a690:	ldr	r0, [fp, #-8]
   2a694:	ldr	r0, [r0, #28]
   2a698:	ldr	r1, [fp, #-8]
   2a69c:	ldr	r1, [r1, #32]
   2a6a0:	str	r0, [r1]
   2a6a4:	ldr	r0, [fp, #-8]
   2a6a8:	ldr	r0, [r0, #32]
   2a6ac:	mvn	r1, #3
   2a6b0:	str	r1, [r0, #4]
   2a6b4:	ldr	r0, [fp, #-8]
   2a6b8:	ldr	r0, [r0, #28]
   2a6bc:	ldr	r1, [fp, #-8]
   2a6c0:	ldr	r1, [r1, #20]
   2a6c4:	add	r0, r0, r1
   2a6c8:	add	r0, r0, #8
   2a6cc:	sub	r0, r0, #1
   2a6d0:	mvn	r1, #7
   2a6d4:	and	r0, r0, r1
   2a6d8:	ldr	r1, [fp, #-8]
   2a6dc:	str	r0, [r1, #28]
   2a6e0:	ldr	r0, [fp, #-8]
   2a6e4:	movw	r1, #0
   2a6e8:	str	r1, [r0, #20]
   2a6ec:	str	r1, [fp, #-4]
   2a6f0:	ldr	r0, [fp, #-4]
   2a6f4:	mov	sp, fp
   2a6f8:	pop	{fp, pc}

0002a6fc <flatcc_builder_end_buffer@@Base>:
   2a6fc:	push	{r4, sl, fp, lr}
   2a700:	add	fp, sp, #8
   2a704:	sub	sp, sp, #32
   2a708:	str	r0, [fp, #-16]
   2a70c:	str	r1, [sp, #20]
   2a710:	ldr	r0, [fp, #-16]
   2a714:	ldrh	r0, [r0, #164]	; 0xa4
   2a718:	and	r0, r0, #2
   2a71c:	str	r0, [sp, #12]
   2a720:	ldr	r0, [fp, #-16]
   2a724:	ldr	r0, [r0, #152]	; 0x98
   2a728:	cmp	r0, #0
   2a72c:	movw	r0, #0
   2a730:	moveq	r0, #1
   2a734:	tst	r0, #1
   2a738:	movw	r0, #0
   2a73c:	moveq	r0, #1
   2a740:	ldr	r1, [sp, #12]
   2a744:	orr	r0, r1, r0
   2a748:	str	r0, [sp, #12]
   2a74c:	ldr	r0, [fp, #-16]
   2a750:	ldr	r0, [r0, #32]
   2a754:	ldrh	r0, [r0, #14]
   2a758:	cmp	r0, #1
   2a75c:	bne	2a764 <flatcc_builder_end_buffer@@Base+0x68>
   2a760:	b	2a784 <flatcc_builder_end_buffer@@Base+0x88>
   2a764:	ldr	r0, [pc, #244]	; 2a860 <flatcc_builder_end_buffer@@Base+0x164>
   2a768:	add	r0, pc, r0
   2a76c:	ldr	r1, [pc, #240]	; 2a864 <flatcc_builder_end_buffer@@Base+0x168>
   2a770:	add	r1, pc, r1
   2a774:	ldr	r2, [pc, #236]	; 2a868 <flatcc_builder_end_buffer@@Base+0x16c>
   2a778:	add	r3, pc, r2
   2a77c:	movw	r2, #838	; 0x346
   2a780:	bl	14f08 <__assert_fail@plt>
   2a784:	ldr	r0, [fp, #-16]
   2a788:	ldr	r1, [fp, #-16]
   2a78c:	ldrh	r1, [r1, #132]	; 0x84
   2a790:	bl	2a238 <flatcc_builder_create_buffer@@Base+0x3a8>
   2a794:	ldr	r0, [fp, #-16]
   2a798:	ldr	r1, [fp, #-16]
   2a79c:	add	r1, r1, #168	; 0xa8
   2a7a0:	ldr	lr, [fp, #-16]
   2a7a4:	ldrh	lr, [lr, #132]	; 0x84
   2a7a8:	ldr	r3, [sp, #20]
   2a7ac:	ldr	r2, [fp, #-16]
   2a7b0:	ldrh	r2, [r2, #128]	; 0x80
   2a7b4:	ldr	ip, [sp, #12]
   2a7b8:	uxth	lr, lr
   2a7bc:	str	r2, [sp, #8]
   2a7c0:	mov	r2, lr
   2a7c4:	ldr	lr, [sp, #8]
   2a7c8:	uxth	r4, lr
   2a7cc:	str	r4, [sp]
   2a7d0:	str	ip, [sp, #4]
   2a7d4:	bl	29e90 <flatcc_builder_create_buffer@@Base>
   2a7d8:	str	r0, [sp, #16]
   2a7dc:	movw	r1, #0
   2a7e0:	cmp	r1, r0
   2a7e4:	bne	2a7f4 <flatcc_builder_end_buffer@@Base+0xf8>
   2a7e8:	movw	r0, #0
   2a7ec:	str	r0, [fp, #-12]
   2a7f0:	b	2a854 <flatcc_builder_end_buffer@@Base+0x158>
   2a7f4:	ldr	r0, [fp, #-16]
   2a7f8:	ldr	r0, [r0, #32]
   2a7fc:	ldr	r0, [r0, #20]
   2a800:	ldr	r1, [fp, #-16]
   2a804:	str	r0, [r1, #144]	; 0x90
   2a808:	ldr	r0, [fp, #-16]
   2a80c:	ldr	r0, [r0, #32]
   2a810:	ldr	r0, [r0, #28]
   2a814:	ldr	r1, [fp, #-16]
   2a818:	str	r0, [r1, #152]	; 0x98
   2a81c:	ldr	r0, [fp, #-16]
   2a820:	ldr	r0, [r0, #32]
   2a824:	ldr	r0, [r0, #16]
   2a828:	ldr	r1, [fp, #-16]
   2a82c:	str	r0, [r1, #168]	; 0xa8
   2a830:	ldr	r0, [fp, #-16]
   2a834:	ldr	r0, [r0, #32]
   2a838:	ldrh	r0, [r0, #32]
   2a83c:	ldr	r1, [fp, #-16]
   2a840:	strh	r0, [r1, #164]	; 0xa4
   2a844:	ldr	r0, [fp, #-16]
   2a848:	bl	2a86c <flatcc_builder_end_buffer@@Base+0x170>
   2a84c:	ldr	r0, [sp, #16]
   2a850:	str	r0, [fp, #-12]
   2a854:	ldr	r0, [fp, #-12]
   2a858:	sub	sp, fp, #8
   2a85c:	pop	{r4, sl, fp, pc}
   2a860:			; <UNDEFINED> instruction: 0x0001f4b2
   2a864:	andeq	pc, r1, r4, ror #4
   2a868:	andeq	pc, r1, lr, asr #9
   2a86c:	push	{fp, lr}
   2a870:	mov	fp, sp
   2a874:	sub	sp, sp, #8
   2a878:	str	r0, [sp, #4]
   2a87c:	ldr	r0, [sp, #4]
   2a880:	ldr	r0, [r0, #16]
   2a884:	ldr	r1, [sp, #4]
   2a888:	ldr	r2, [r1, #20]
   2a88c:	movw	r1, #0
   2a890:	and	r1, r1, #255	; 0xff
   2a894:	bl	14ec0 <memset@plt>
   2a898:	ldr	r0, [sp, #4]
   2a89c:	ldr	r0, [r0, #32]
   2a8a0:	ldr	r0, [r0, #8]
   2a8a4:	ldr	r1, [sp, #4]
   2a8a8:	str	r0, [r1, #20]
   2a8ac:	ldr	r0, [sp, #4]
   2a8b0:	ldr	r0, [r0, #32]
   2a8b4:	ldr	r0, [r0]
   2a8b8:	ldr	r1, [sp, #4]
   2a8bc:	str	r0, [r1, #28]
   2a8c0:	ldr	r0, [sp, #4]
   2a8c4:	ldr	r1, [sp, #4]
   2a8c8:	ldr	r1, [r1, #32]
   2a8cc:	ldr	r1, [r1, #4]
   2a8d0:	bl	2a998 <flatcc_builder_start_struct@@Base+0x70>
   2a8d4:	ldr	r0, [sp, #4]
   2a8d8:	ldr	r1, [sp, #4]
   2a8dc:	ldrh	r1, [r1, #130]	; 0x82
   2a8e0:	bl	2a238 <flatcc_builder_create_buffer@@Base+0x3a8>
   2a8e4:	ldr	r0, [sp, #4]
   2a8e8:	ldr	r0, [r0, #32]
   2a8ec:	ldrh	r0, [r0, #12]
   2a8f0:	ldr	r1, [sp, #4]
   2a8f4:	strh	r0, [r1, #130]	; 0x82
   2a8f8:	ldr	r0, [sp, #4]
   2a8fc:	ldr	r1, [r0, #32]
   2a900:	mvn	r2, #35	; 0x23
   2a904:	add	r1, r1, r2
   2a908:	str	r1, [r0, #32]
   2a90c:	ldr	r0, [sp, #4]
   2a910:	ldr	r1, [r0, #156]	; 0x9c
   2a914:	mvn	r2, #0
   2a918:	add	r1, r1, r2
   2a91c:	str	r1, [r0, #156]	; 0x9c
   2a920:	mov	sp, fp
   2a924:	pop	{fp, pc}

0002a928 <flatcc_builder_start_struct@@Base>:
   2a928:	push	{fp, lr}
   2a92c:	mov	fp, sp
   2a930:	sub	sp, sp, #16
   2a934:	str	r0, [sp, #8]
   2a938:	str	r1, [sp, #4]
   2a93c:	strh	r2, [sp, #2]
   2a940:	ldr	r0, [sp, #8]
   2a944:	ldrh	r1, [sp, #2]
   2a948:	bl	2a530 <flatcc_builder_start_buffer@@Base+0x178>
   2a94c:	cmp	r0, #0
   2a950:	beq	2a960 <flatcc_builder_start_struct@@Base+0x38>
   2a954:	movw	r0, #0
   2a958:	str	r0, [fp, #-4]
   2a95c:	b	2a98c <flatcc_builder_start_struct@@Base+0x64>
   2a960:	ldr	r0, [sp, #8]
   2a964:	ldr	r0, [r0, #32]
   2a968:	movw	r1, #2
   2a96c:	strh	r1, [r0, #14]
   2a970:	ldr	r0, [sp, #8]
   2a974:	mvn	r1, #3
   2a978:	bl	2a998 <flatcc_builder_start_struct@@Base+0x70>
   2a97c:	ldr	r0, [sp, #8]
   2a980:	ldr	r1, [sp, #4]
   2a984:	bl	2aa24 <flatcc_builder_start_struct@@Base+0xfc>
   2a988:	str	r0, [fp, #-4]
   2a98c:	ldr	r0, [fp, #-4]
   2a990:	mov	sp, fp
   2a994:	pop	{fp, pc}
   2a998:	sub	sp, sp, #12
   2a99c:	str	r0, [sp, #8]
   2a9a0:	str	r1, [sp, #4]
   2a9a4:	ldr	r0, [sp, #8]
   2a9a8:	add	r0, r0, #52	; 0x34
   2a9ac:	add	r0, r0, #8
   2a9b0:	str	r0, [sp]
   2a9b4:	ldr	r0, [sp, #8]
   2a9b8:	ldr	r0, [r0, #60]	; 0x3c
   2a9bc:	ldr	r1, [sp, #8]
   2a9c0:	ldr	r1, [r1, #28]
   2a9c4:	add	r0, r0, r1
   2a9c8:	ldr	r1, [sp, #8]
   2a9cc:	str	r0, [r1, #16]
   2a9d0:	ldr	r0, [sp]
   2a9d4:	ldr	r0, [r0, #4]
   2a9d8:	ldr	r1, [sp, #8]
   2a9dc:	ldr	r1, [r1, #28]
   2a9e0:	sub	r0, r0, r1
   2a9e4:	ldr	r1, [sp, #8]
   2a9e8:	str	r0, [r1, #24]
   2a9ec:	ldr	r0, [sp, #8]
   2a9f0:	ldr	r0, [r0, #24]
   2a9f4:	ldr	r1, [sp, #4]
   2a9f8:	cmp	r0, r1
   2a9fc:	bls	2aa0c <flatcc_builder_start_struct@@Base+0xe4>
   2aa00:	ldr	r0, [sp, #4]
   2aa04:	ldr	r1, [sp, #8]
   2aa08:	str	r0, [r1, #24]
   2aa0c:	ldr	r0, [sp, #4]
   2aa10:	ldr	r1, [sp, #8]
   2aa14:	ldr	r1, [r1, #32]
   2aa18:	str	r0, [r1, #4]
   2aa1c:	add	sp, sp, #12
   2aa20:	bx	lr
   2aa24:	push	{fp, lr}
   2aa28:	mov	fp, sp
   2aa2c:	sub	sp, sp, #16
   2aa30:	str	r0, [sp, #8]
   2aa34:	str	r1, [sp, #4]
   2aa38:	ldr	r0, [sp, #8]
   2aa3c:	ldr	r0, [r0, #20]
   2aa40:	str	r0, [sp]
   2aa44:	ldr	r0, [sp, #4]
   2aa48:	ldr	r1, [sp, #8]
   2aa4c:	ldr	r2, [r1, #20]
   2aa50:	add	r0, r2, r0
   2aa54:	str	r0, [r1, #20]
   2aa58:	ldr	r1, [sp, #8]
   2aa5c:	ldr	r1, [r1, #24]
   2aa60:	cmp	r0, r1
   2aa64:	bcc	2aa98 <flatcc_builder_start_struct@@Base+0x170>
   2aa68:	ldr	r0, [sp, #8]
   2aa6c:	ldr	r1, [sp, #8]
   2aa70:	ldr	r1, [r1, #20]
   2aa74:	add	r1, r1, #1
   2aa78:	mvn	r2, #3
   2aa7c:	bl	2eb94 <flatcc_builder_get_emit_context@@Base+0x40>
   2aa80:	cmp	r0, #0
   2aa84:	beq	2aa94 <flatcc_builder_start_struct@@Base+0x16c>
   2aa88:	movw	r0, #0
   2aa8c:	str	r0, [fp, #-4]
   2aa90:	b	2aaac <flatcc_builder_start_struct@@Base+0x184>
   2aa94:	b	2aa98 <flatcc_builder_start_struct@@Base+0x170>
   2aa98:	ldr	r0, [sp, #8]
   2aa9c:	ldr	r0, [r0, #16]
   2aaa0:	ldr	r1, [sp]
   2aaa4:	add	r0, r0, r1
   2aaa8:	str	r0, [fp, #-4]
   2aaac:	ldr	r0, [fp, #-4]
   2aab0:	mov	sp, fp
   2aab4:	pop	{fp, pc}

0002aab8 <flatcc_builder_struct_edit@@Base>:
   2aab8:	sub	sp, sp, #4
   2aabc:	str	r0, [sp]
   2aac0:	ldr	r0, [sp]
   2aac4:	ldr	r0, [r0, #16]
   2aac8:	add	sp, sp, #4
   2aacc:	bx	lr

0002aad0 <flatcc_builder_end_struct@@Base>:
   2aad0:	push	{fp, lr}
   2aad4:	mov	fp, sp
   2aad8:	sub	sp, sp, #16
   2aadc:	str	r0, [sp, #8]
   2aae0:	ldr	r0, [sp, #8]
   2aae4:	ldr	r0, [r0, #32]
   2aae8:	ldrh	r0, [r0, #14]
   2aaec:	cmp	r0, #2
   2aaf0:	bne	2aaf8 <flatcc_builder_end_struct@@Base+0x28>
   2aaf4:	b	2ab18 <flatcc_builder_end_struct@@Base+0x48>
   2aaf8:	ldr	r0, [pc, #112]	; 2ab70 <flatcc_builder_end_struct@@Base+0xa0>
   2aafc:	add	r0, pc, r0
   2ab00:	ldr	r1, [pc, #108]	; 2ab74 <flatcc_builder_end_struct@@Base+0xa4>
   2ab04:	add	r1, pc, r1
   2ab08:	ldr	r2, [pc, #104]	; 2ab78 <flatcc_builder_end_struct@@Base+0xa8>
   2ab0c:	add	r3, pc, r2
   2ab10:	movw	r2, #872	; 0x368
   2ab14:	bl	14f08 <__assert_fail@plt>
   2ab18:	ldr	r0, [sp, #8]
   2ab1c:	ldr	r1, [sp, #8]
   2ab20:	ldr	r1, [r1, #16]
   2ab24:	ldr	r2, [sp, #8]
   2ab28:	ldr	r2, [r2, #20]
   2ab2c:	ldr	r3, [sp, #8]
   2ab30:	ldrh	r3, [r3, #130]	; 0x82
   2ab34:	bl	2a280 <flatcc_builder_create_struct@@Base>
   2ab38:	str	r0, [sp, #4]
   2ab3c:	movw	r1, #0
   2ab40:	cmp	r1, r0
   2ab44:	bne	2ab54 <flatcc_builder_end_struct@@Base+0x84>
   2ab48:	movw	r0, #0
   2ab4c:	str	r0, [fp, #-4]
   2ab50:	b	2ab64 <flatcc_builder_end_struct@@Base+0x94>
   2ab54:	ldr	r0, [sp, #8]
   2ab58:	bl	2a86c <flatcc_builder_end_buffer@@Base+0x170>
   2ab5c:	ldr	r0, [sp, #4]
   2ab60:	str	r0, [fp, #-4]
   2ab64:	ldr	r0, [fp, #-4]
   2ab68:	mov	sp, fp
   2ab6c:	pop	{fp, pc}
   2ab70:	andeq	pc, r1, r3, lsr #3
   2ab74:	ldrdeq	lr, [r1], -r0
   2ab78:			; <UNDEFINED> instruction: 0x0001f1bf

0002ab7c <flatcc_builder_extend_vector@@Base>:
   2ab7c:	push	{fp, lr}
   2ab80:	mov	fp, sp
   2ab84:	sub	sp, sp, #16
   2ab88:	str	r0, [sp, #8]
   2ab8c:	str	r1, [sp, #4]
   2ab90:	ldr	r0, [sp, #8]
   2ab94:	ldr	r1, [sp, #4]
   2ab98:	ldr	r2, [sp, #8]
   2ab9c:	ldr	r2, [r2, #32]
   2aba0:	ldr	r2, [r2, #24]
   2aba4:	bl	2abe8 <flatcc_builder_extend_vector@@Base+0x6c>
   2aba8:	cmp	r0, #0
   2abac:	beq	2abbc <flatcc_builder_extend_vector@@Base+0x40>
   2abb0:	movw	r0, #0
   2abb4:	str	r0, [fp, #-4]
   2abb8:	b	2abdc <flatcc_builder_extend_vector@@Base+0x60>
   2abbc:	ldr	r0, [sp, #8]
   2abc0:	ldr	r1, [sp, #8]
   2abc4:	ldr	r1, [r1, #32]
   2abc8:	ldr	r1, [r1, #16]
   2abcc:	ldr	r2, [sp, #4]
   2abd0:	mul	r1, r1, r2
   2abd4:	bl	2aa24 <flatcc_builder_start_struct@@Base+0xfc>
   2abd8:	str	r0, [fp, #-4]
   2abdc:	ldr	r0, [fp, #-4]
   2abe0:	mov	sp, fp
   2abe4:	pop	{fp, pc}
   2abe8:	push	{fp, lr}
   2abec:	mov	fp, sp
   2abf0:	sub	sp, sp, #24
   2abf4:	str	r0, [fp, #-8]
   2abf8:	str	r1, [sp, #12]
   2abfc:	str	r2, [sp, #8]
   2ac00:	ldr	r0, [fp, #-8]
   2ac04:	ldr	r0, [r0, #32]
   2ac08:	ldr	r0, [r0, #20]
   2ac0c:	str	r0, [sp, #4]
   2ac10:	ldr	r0, [sp, #4]
   2ac14:	ldr	r1, [sp, #12]
   2ac18:	add	r0, r0, r1
   2ac1c:	str	r0, [sp]
   2ac20:	ldr	r0, [sp, #4]
   2ac24:	ldr	r1, [sp]
   2ac28:	cmp	r0, r1
   2ac2c:	bhi	2ac40 <flatcc_builder_extend_vector@@Base+0xc4>
   2ac30:	ldr	r0, [sp]
   2ac34:	ldr	r1, [sp, #8]
   2ac38:	cmp	r0, r1
   2ac3c:	bls	2ac90 <flatcc_builder_extend_vector@@Base+0x114>
   2ac40:	ldr	r0, [sp, #4]
   2ac44:	ldr	r1, [sp]
   2ac48:	cmp	r0, r1
   2ac4c:	bhi	2ac64 <flatcc_builder_extend_vector@@Base+0xe8>
   2ac50:	ldr	r0, [sp]
   2ac54:	ldr	r1, [sp, #8]
   2ac58:	cmp	r0, r1
   2ac5c:	bhi	2ac64 <flatcc_builder_extend_vector@@Base+0xe8>
   2ac60:	b	2ac84 <flatcc_builder_extend_vector@@Base+0x108>
   2ac64:	ldr	r0, [pc, #72]	; 2acb4 <flatcc_builder_extend_vector@@Base+0x138>
   2ac68:	add	r0, pc, r0
   2ac6c:	ldr	r1, [pc, #68]	; 2acb8 <flatcc_builder_extend_vector@@Base+0x13c>
   2ac70:	add	r1, pc, r1
   2ac74:	ldr	r2, [pc, #64]	; 2acbc <flatcc_builder_extend_vector@@Base+0x140>
   2ac78:	add	r3, pc, r2
   2ac7c:	movw	r2, #892	; 0x37c
   2ac80:	bl	14f08 <__assert_fail@plt>
   2ac84:	mvn	r0, #0
   2ac88:	str	r0, [fp, #-4]
   2ac8c:	b	2aca8 <flatcc_builder_extend_vector@@Base+0x12c>
   2ac90:	ldr	r0, [sp]
   2ac94:	ldr	r1, [fp, #-8]
   2ac98:	ldr	r1, [r1, #32]
   2ac9c:	str	r0, [r1, #20]
   2aca0:	movw	r0, #0
   2aca4:	str	r0, [fp, #-4]
   2aca8:	ldr	r0, [fp, #-4]
   2acac:	mov	sp, fp
   2acb0:	pop	{fp, pc}
   2acb4:	andeq	pc, r1, r2, lsr lr	; <UNPREDICTABLE>
   2acb8:	andeq	lr, r1, r4, ror #26
   2acbc:	andeq	pc, r1, sp, lsr lr	; <UNPREDICTABLE>

0002acc0 <flatcc_builder_vector_push@@Base>:
   2acc0:	push	{fp, lr}
   2acc4:	mov	fp, sp
   2acc8:	sub	sp, sp, #16
   2accc:	str	r0, [sp, #8]
   2acd0:	str	r1, [sp, #4]
   2acd4:	ldr	r0, [sp, #8]
   2acd8:	ldr	r0, [r0, #32]
   2acdc:	ldrh	r0, [r0, #14]
   2ace0:	cmp	r0, #4
   2ace4:	bne	2acec <flatcc_builder_vector_push@@Base+0x2c>
   2ace8:	b	2ad0c <flatcc_builder_vector_push@@Base+0x4c>
   2acec:	ldr	r0, [pc, #196]	; 2adb8 <flatcc_builder_vector_push@@Base+0xf8>
   2acf0:	add	r0, pc, r0
   2acf4:	ldr	r1, [pc, #192]	; 2adbc <flatcc_builder_vector_push@@Base+0xfc>
   2acf8:	add	r1, pc, r1
   2acfc:	ldr	r2, [pc, #188]	; 2adc0 <flatcc_builder_vector_push@@Base+0x100>
   2ad00:	add	r3, pc, r2
   2ad04:	movw	r2, #907	; 0x38b
   2ad08:	bl	14f08 <__assert_fail@plt>
   2ad0c:	ldr	r0, [sp, #8]
   2ad10:	ldr	r0, [r0, #32]
   2ad14:	ldr	r0, [r0, #20]
   2ad18:	ldr	r1, [sp, #8]
   2ad1c:	ldr	r1, [r1, #32]
   2ad20:	ldr	r1, [r1, #24]
   2ad24:	cmp	r0, r1
   2ad28:	bls	2ad7c <flatcc_builder_vector_push@@Base+0xbc>
   2ad2c:	ldr	r0, [sp, #8]
   2ad30:	ldr	r0, [r0, #32]
   2ad34:	ldr	r0, [r0, #20]
   2ad38:	ldr	r1, [sp, #8]
   2ad3c:	ldr	r1, [r1, #32]
   2ad40:	ldr	r1, [r1, #24]
   2ad44:	cmp	r0, r1
   2ad48:	bhi	2ad50 <flatcc_builder_vector_push@@Base+0x90>
   2ad4c:	b	2ad70 <flatcc_builder_vector_push@@Base+0xb0>
   2ad50:	ldr	r0, [pc, #108]	; 2adc4 <flatcc_builder_vector_push@@Base+0x104>
   2ad54:	add	r0, pc, r0
   2ad58:	ldr	r1, [pc, #104]	; 2adc8 <flatcc_builder_vector_push@@Base+0x108>
   2ad5c:	add	r1, pc, r1
   2ad60:	ldr	r2, [pc, #100]	; 2adcc <flatcc_builder_vector_push@@Base+0x10c>
   2ad64:	add	r3, pc, r2
   2ad68:	movw	r2, #908	; 0x38c
   2ad6c:	bl	14f08 <__assert_fail@plt>
   2ad70:	movw	r0, #0
   2ad74:	str	r0, [fp, #-4]
   2ad78:	b	2adac <flatcc_builder_vector_push@@Base+0xec>
   2ad7c:	ldr	r0, [sp, #8]
   2ad80:	ldr	r0, [r0, #32]
   2ad84:	ldr	r1, [r0, #20]
   2ad88:	add	r1, r1, #1
   2ad8c:	str	r1, [r0, #20]
   2ad90:	ldr	r0, [sp, #8]
   2ad94:	ldr	r1, [sp, #4]
   2ad98:	ldr	r2, [sp, #8]
   2ad9c:	ldr	r2, [r2, #32]
   2ada0:	ldr	r2, [r2, #16]
   2ada4:	bl	2add0 <flatcc_builder_vector_push@@Base+0x110>
   2ada8:	str	r0, [fp, #-4]
   2adac:	ldr	r0, [fp, #-4]
   2adb0:	mov	sp, fp
   2adb4:	pop	{fp, pc}
   2adb8:	andeq	pc, r1, lr, lsl r0	; <UNPREDICTABLE>
   2adbc:	ldrdeq	lr, [r1], -ip
   2adc0:	andeq	pc, r1, sl, lsr r0	; <UNPREDICTABLE>
   2adc4:	andeq	pc, r1, r9, lsr #32
   2adc8:	andeq	lr, r1, r8, ror ip
   2adcc:	ldrdeq	lr, [r1], -r6
   2add0:	push	{fp, lr}
   2add4:	mov	fp, sp
   2add8:	sub	sp, sp, #24
   2addc:	str	r0, [fp, #-8]
   2ade0:	str	r1, [sp, #12]
   2ade4:	str	r2, [sp, #8]
   2ade8:	ldr	r0, [fp, #-8]
   2adec:	ldr	r1, [sp, #8]
   2adf0:	bl	2aa24 <flatcc_builder_start_struct@@Base+0xfc>
   2adf4:	str	r0, [sp, #4]
   2adf8:	movw	r1, #0
   2adfc:	cmp	r0, r1
   2ae00:	bne	2ae10 <flatcc_builder_vector_push@@Base+0x150>
   2ae04:	movw	r0, #0
   2ae08:	str	r0, [fp, #-4]
   2ae0c:	b	2ae28 <flatcc_builder_vector_push@@Base+0x168>
   2ae10:	ldr	r0, [sp, #4]
   2ae14:	ldr	r1, [sp, #12]
   2ae18:	ldr	r2, [sp, #8]
   2ae1c:	bl	14e30 <memcpy@plt>
   2ae20:	ldr	r0, [sp, #4]
   2ae24:	str	r0, [fp, #-4]
   2ae28:	ldr	r0, [fp, #-4]
   2ae2c:	mov	sp, fp
   2ae30:	pop	{fp, pc}

0002ae34 <flatcc_builder_append_vector@@Base>:
   2ae34:	push	{fp, lr}
   2ae38:	mov	fp, sp
   2ae3c:	sub	sp, sp, #16
   2ae40:	str	r0, [sp, #8]
   2ae44:	str	r1, [sp, #4]
   2ae48:	str	r2, [sp]
   2ae4c:	ldr	r0, [sp, #8]
   2ae50:	ldr	r0, [r0, #32]
   2ae54:	ldrh	r0, [r0, #14]
   2ae58:	cmp	r0, #4
   2ae5c:	bne	2ae64 <flatcc_builder_append_vector@@Base+0x30>
   2ae60:	b	2ae84 <flatcc_builder_append_vector@@Base+0x50>
   2ae64:	ldr	r0, [pc, #116]	; 2aee0 <flatcc_builder_append_vector@@Base+0xac>
   2ae68:	add	r0, pc, r0
   2ae6c:	ldr	r1, [pc, #112]	; 2aee4 <flatcc_builder_append_vector@@Base+0xb0>
   2ae70:	add	r1, pc, r1
   2ae74:	ldr	r2, [pc, #108]	; 2aee8 <flatcc_builder_append_vector@@Base+0xb4>
   2ae78:	add	r3, pc, r2
   2ae7c:	movw	r2, #915	; 0x393
   2ae80:	bl	14f08 <__assert_fail@plt>
   2ae84:	ldr	r0, [sp, #8]
   2ae88:	ldr	r1, [sp]
   2ae8c:	ldr	r2, [sp, #8]
   2ae90:	ldr	r2, [r2, #32]
   2ae94:	ldr	r2, [r2, #24]
   2ae98:	bl	2abe8 <flatcc_builder_extend_vector@@Base+0x6c>
   2ae9c:	cmp	r0, #0
   2aea0:	beq	2aeb0 <flatcc_builder_append_vector@@Base+0x7c>
   2aea4:	movw	r0, #0
   2aea8:	str	r0, [fp, #-4]
   2aeac:	b	2aed4 <flatcc_builder_append_vector@@Base+0xa0>
   2aeb0:	ldr	r0, [sp, #8]
   2aeb4:	ldr	r1, [sp, #4]
   2aeb8:	ldr	r2, [sp, #8]
   2aebc:	ldr	r2, [r2, #32]
   2aec0:	ldr	r2, [r2, #16]
   2aec4:	ldr	r3, [sp]
   2aec8:	mul	r2, r2, r3
   2aecc:	bl	2add0 <flatcc_builder_vector_push@@Base+0x110>
   2aed0:	str	r0, [fp, #-4]
   2aed4:	ldr	r0, [fp, #-4]
   2aed8:	mov	sp, fp
   2aedc:	pop	{fp, pc}
   2aee0:	andeq	lr, r1, r6, lsr #29
   2aee4:	andeq	lr, r1, r4, ror #22
   2aee8:	andeq	lr, r1, r2, asr #30

0002aeec <flatcc_builder_extend_offset_vector@@Base>:
   2aeec:	push	{fp, lr}
   2aef0:	mov	fp, sp
   2aef4:	sub	sp, sp, #16
   2aef8:	ldr	r2, [pc, #68]	; 2af44 <flatcc_builder_extend_offset_vector@@Base+0x58>
   2aefc:	str	r0, [sp, #8]
   2af00:	str	r1, [sp, #4]
   2af04:	ldr	r0, [sp, #8]
   2af08:	ldr	r1, [sp, #4]
   2af0c:	bl	2abe8 <flatcc_builder_extend_vector@@Base+0x6c>
   2af10:	cmp	r0, #0
   2af14:	beq	2af24 <flatcc_builder_extend_offset_vector@@Base+0x38>
   2af18:	movw	r0, #0
   2af1c:	str	r0, [fp, #-4]
   2af20:	b	2af38 <flatcc_builder_extend_offset_vector@@Base+0x4c>
   2af24:	ldr	r0, [sp, #8]
   2af28:	ldr	r1, [sp, #4]
   2af2c:	lsl	r1, r1, #2
   2af30:	bl	2aa24 <flatcc_builder_start_struct@@Base+0xfc>
   2af34:	str	r0, [fp, #-4]
   2af38:	ldr	r0, [fp, #-4]
   2af3c:	mov	sp, fp
   2af40:	pop	{fp, pc}
   2af44:	svccc	0x00ffffff

0002af48 <flatcc_builder_offset_vector_push@@Base>:
   2af48:	push	{fp, lr}
   2af4c:	mov	fp, sp
   2af50:	sub	sp, sp, #16
   2af54:	str	r0, [sp, #8]
   2af58:	str	r1, [sp, #4]
   2af5c:	ldr	r0, [sp, #8]
   2af60:	ldr	r0, [r0, #32]
   2af64:	ldrh	r0, [r0, #14]
   2af68:	cmp	r0, #5
   2af6c:	bne	2af74 <flatcc_builder_offset_vector_push@@Base+0x2c>
   2af70:	b	2af94 <flatcc_builder_offset_vector_push@@Base+0x4c>
   2af74:	ldr	r0, [pc, #152]	; 2b014 <flatcc_builder_offset_vector_push@@Base+0xcc>
   2af78:	add	r0, pc, r0
   2af7c:	ldr	r1, [pc, #148]	; 2b018 <flatcc_builder_offset_vector_push@@Base+0xd0>
   2af80:	add	r1, pc, r1
   2af84:	ldr	r2, [pc, #144]	; 2b01c <flatcc_builder_offset_vector_push@@Base+0xd4>
   2af88:	add	r3, pc, r2
   2af8c:	movw	r2, #934	; 0x3a6
   2af90:	bl	14f08 <__assert_fail@plt>
   2af94:	ldr	r0, [pc, #132]	; 2b020 <flatcc_builder_offset_vector_push@@Base+0xd8>
   2af98:	ldr	r1, [sp, #8]
   2af9c:	ldr	r1, [r1, #32]
   2afa0:	ldr	r1, [r1, #20]
   2afa4:	cmp	r1, r0
   2afa8:	bne	2afb8 <flatcc_builder_offset_vector_push@@Base+0x70>
   2afac:	movw	r0, #0
   2afb0:	str	r0, [fp, #-4]
   2afb4:	b	2b008 <flatcc_builder_offset_vector_push@@Base+0xc0>
   2afb8:	ldr	r0, [sp, #8]
   2afbc:	ldr	r0, [r0, #32]
   2afc0:	ldr	r1, [r0, #20]
   2afc4:	add	r1, r1, #1
   2afc8:	str	r1, [r0, #20]
   2afcc:	ldr	r0, [sp, #8]
   2afd0:	movw	r1, #4
   2afd4:	bl	2aa24 <flatcc_builder_start_struct@@Base+0xfc>
   2afd8:	str	r0, [sp]
   2afdc:	movw	r1, #0
   2afe0:	cmp	r1, r0
   2afe4:	bne	2aff4 <flatcc_builder_offset_vector_push@@Base+0xac>
   2afe8:	movw	r0, #0
   2afec:	str	r0, [fp, #-4]
   2aff0:	b	2b008 <flatcc_builder_offset_vector_push@@Base+0xc0>
   2aff4:	ldr	r0, [sp, #4]
   2aff8:	ldr	r1, [sp]
   2affc:	str	r0, [r1]
   2b000:	ldr	r0, [sp]
   2b004:	str	r0, [fp, #-4]
   2b008:	ldr	r0, [fp, #-4]
   2b00c:	mov	sp, fp
   2b010:	pop	{fp, pc}
   2b014:	andeq	lr, r1, pc, lsl #29
   2b018:	andeq	lr, r1, r4, asr sl
   2b01c:			; <UNDEFINED> instruction: 0x0001eeb2
   2b020:	svccc	0x00ffffff

0002b024 <flatcc_builder_append_offset_vector@@Base>:
   2b024:	push	{fp, lr}
   2b028:	mov	fp, sp
   2b02c:	sub	sp, sp, #16
   2b030:	str	r0, [sp, #8]
   2b034:	str	r1, [sp, #4]
   2b038:	str	r2, [sp]
   2b03c:	ldr	r0, [sp, #8]
   2b040:	ldr	r0, [r0, #32]
   2b044:	ldrh	r0, [r0, #14]
   2b048:	cmp	r0, #5
   2b04c:	bne	2b054 <flatcc_builder_append_offset_vector@@Base+0x30>
   2b050:	b	2b074 <flatcc_builder_append_offset_vector@@Base+0x50>
   2b054:	ldr	r0, [pc, #96]	; 2b0bc <flatcc_builder_append_offset_vector@@Base+0x98>
   2b058:	add	r0, pc, r0
   2b05c:	ldr	r1, [pc, #92]	; 2b0c0 <flatcc_builder_append_offset_vector@@Base+0x9c>
   2b060:	add	r1, pc, r1
   2b064:	ldr	r2, [pc, #88]	; 2b0c4 <flatcc_builder_append_offset_vector@@Base+0xa0>
   2b068:	add	r3, pc, r2
   2b06c:	movw	r2, #948	; 0x3b4
   2b070:	bl	14f08 <__assert_fail@plt>
   2b074:	ldr	r2, [pc, #76]	; 2b0c8 <flatcc_builder_append_offset_vector@@Base+0xa4>
   2b078:	ldr	r0, [sp, #8]
   2b07c:	ldr	r1, [sp]
   2b080:	bl	2abe8 <flatcc_builder_extend_vector@@Base+0x6c>
   2b084:	cmp	r0, #0
   2b088:	beq	2b098 <flatcc_builder_append_offset_vector@@Base+0x74>
   2b08c:	movw	r0, #0
   2b090:	str	r0, [fp, #-4]
   2b094:	b	2b0b0 <flatcc_builder_append_offset_vector@@Base+0x8c>
   2b098:	ldr	r0, [sp, #8]
   2b09c:	ldr	r1, [sp, #4]
   2b0a0:	ldr	r2, [sp]
   2b0a4:	lsl	r2, r2, #2
   2b0a8:	bl	2add0 <flatcc_builder_vector_push@@Base+0x110>
   2b0ac:	str	r0, [fp, #-4]
   2b0b0:	ldr	r0, [fp, #-4]
   2b0b4:	mov	sp, fp
   2b0b8:	pop	{fp, pc}
   2b0bc:	andeq	lr, r1, pc, lsr #27
   2b0c0:	andeq	lr, r1, r4, ror r9
   2b0c4:	andeq	lr, r1, r4, lsr lr
   2b0c8:	svccc	0x00ffffff

0002b0cc <flatcc_builder_extend_string@@Base>:
   2b0cc:	push	{fp, lr}
   2b0d0:	mov	fp, sp
   2b0d4:	sub	sp, sp, #16
   2b0d8:	str	r0, [sp, #8]
   2b0dc:	str	r1, [sp, #4]
   2b0e0:	ldr	r0, [sp, #8]
   2b0e4:	ldr	r0, [r0, #32]
   2b0e8:	ldrh	r0, [r0, #14]
   2b0ec:	cmp	r0, #6
   2b0f0:	bne	2b0f8 <flatcc_builder_extend_string@@Base+0x2c>
   2b0f4:	b	2b118 <flatcc_builder_extend_string@@Base+0x4c>
   2b0f8:	ldr	r0, [pc, #88]	; 2b158 <flatcc_builder_extend_string@@Base+0x8c>
   2b0fc:	add	r0, pc, r0
   2b100:	ldr	r1, [pc, #84]	; 2b15c <flatcc_builder_extend_string@@Base+0x90>
   2b104:	add	r1, pc, r1
   2b108:	ldr	r2, [pc, #80]	; 2b160 <flatcc_builder_extend_string@@Base+0x94>
   2b10c:	add	r3, pc, r2
   2b110:	movw	r2, #957	; 0x3bd
   2b114:	bl	14f08 <__assert_fail@plt>
   2b118:	ldr	r0, [sp, #8]
   2b11c:	ldr	r1, [sp, #4]
   2b120:	mvn	r2, #0
   2b124:	bl	2abe8 <flatcc_builder_extend_vector@@Base+0x6c>
   2b128:	cmp	r0, #0
   2b12c:	beq	2b13c <flatcc_builder_extend_string@@Base+0x70>
   2b130:	movw	r0, #0
   2b134:	str	r0, [fp, #-4]
   2b138:	b	2b14c <flatcc_builder_extend_string@@Base+0x80>
   2b13c:	ldr	r0, [sp, #8]
   2b140:	ldr	r1, [sp, #4]
   2b144:	bl	2aa24 <flatcc_builder_start_struct@@Base+0xfc>
   2b148:	str	r0, [fp, #-4]
   2b14c:	ldr	r0, [fp, #-4]
   2b150:	mov	sp, fp
   2b154:	pop	{fp, pc}
   2b158:	andeq	lr, r1, r4, lsl lr
   2b15c:	ldrdeq	lr, [r1], -r0
   2b160:	andeq	lr, r1, r0, lsr lr

0002b164 <flatcc_builder_append_string@@Base>:
   2b164:	push	{fp, lr}
   2b168:	mov	fp, sp
   2b16c:	sub	sp, sp, #16
   2b170:	str	r0, [sp, #8]
   2b174:	str	r1, [sp, #4]
   2b178:	str	r2, [sp]
   2b17c:	ldr	r0, [sp, #8]
   2b180:	ldr	r0, [r0, #32]
   2b184:	ldrh	r0, [r0, #14]
   2b188:	cmp	r0, #6
   2b18c:	bne	2b194 <flatcc_builder_append_string@@Base+0x30>
   2b190:	b	2b1b4 <flatcc_builder_append_string@@Base+0x50>
   2b194:	ldr	r0, [pc, #92]	; 2b1f8 <flatcc_builder_append_string@@Base+0x94>
   2b198:	add	r0, pc, r0
   2b19c:	ldr	r1, [pc, #88]	; 2b1fc <flatcc_builder_append_string@@Base+0x98>
   2b1a0:	add	r1, pc, r1
   2b1a4:	ldr	r2, [pc, #84]	; 2b200 <flatcc_builder_append_string@@Base+0x9c>
   2b1a8:	add	r3, pc, r2
   2b1ac:	movw	r2, #966	; 0x3c6
   2b1b0:	bl	14f08 <__assert_fail@plt>
   2b1b4:	ldr	r0, [sp, #8]
   2b1b8:	ldr	r1, [sp]
   2b1bc:	mvn	r2, #0
   2b1c0:	bl	2abe8 <flatcc_builder_extend_vector@@Base+0x6c>
   2b1c4:	cmp	r0, #0
   2b1c8:	beq	2b1d8 <flatcc_builder_append_string@@Base+0x74>
   2b1cc:	movw	r0, #0
   2b1d0:	str	r0, [fp, #-4]
   2b1d4:	b	2b1ec <flatcc_builder_append_string@@Base+0x88>
   2b1d8:	ldr	r0, [sp, #8]
   2b1dc:	ldr	r1, [sp, #4]
   2b1e0:	ldr	r2, [sp]
   2b1e4:	bl	2add0 <flatcc_builder_vector_push@@Base+0x110>
   2b1e8:	str	r0, [fp, #-4]
   2b1ec:	ldr	r0, [fp, #-4]
   2b1f0:	mov	sp, fp
   2b1f4:	pop	{fp, pc}
   2b1f8:	andeq	lr, r1, r8, ror sp
   2b1fc:	andeq	lr, r1, r4, lsr r8
   2b200:	ldrdeq	lr, [r1], -r3

0002b204 <flatcc_builder_append_string_str@@Base>:
   2b204:	push	{fp, lr}
   2b208:	mov	fp, sp
   2b20c:	sub	sp, sp, #24
   2b210:	str	r0, [fp, #-4]
   2b214:	str	r1, [fp, #-8]
   2b218:	ldr	r0, [fp, #-4]
   2b21c:	ldr	r1, [fp, #-8]
   2b220:	ldr	r2, [fp, #-8]
   2b224:	str	r0, [sp, #12]
   2b228:	mov	r0, r2
   2b22c:	str	r1, [sp, #8]
   2b230:	bl	14e9c <strlen@plt>
   2b234:	ldr	r1, [sp, #12]
   2b238:	str	r0, [sp, #4]
   2b23c:	mov	r0, r1
   2b240:	ldr	r1, [sp, #8]
   2b244:	ldr	r2, [sp, #4]
   2b248:	bl	2b164 <flatcc_builder_append_string@@Base>
   2b24c:	mov	sp, fp
   2b250:	pop	{fp, pc}

0002b254 <flatcc_builder_append_string_strn@@Base>:
   2b254:	push	{fp, lr}
   2b258:	mov	fp, sp
   2b25c:	sub	sp, sp, #24
   2b260:	str	r0, [fp, #-4]
   2b264:	str	r1, [fp, #-8]
   2b268:	str	r2, [sp, #12]
   2b26c:	ldr	r0, [fp, #-4]
   2b270:	ldr	r1, [fp, #-8]
   2b274:	ldr	r2, [fp, #-8]
   2b278:	ldr	r3, [sp, #12]
   2b27c:	str	r0, [sp, #8]
   2b280:	mov	r0, r2
   2b284:	str	r1, [sp, #4]
   2b288:	mov	r1, r3
   2b28c:	bl	2b2b0 <flatcc_builder_append_string_strn@@Base+0x5c>
   2b290:	ldr	r1, [sp, #8]
   2b294:	str	r0, [sp]
   2b298:	mov	r0, r1
   2b29c:	ldr	r1, [sp, #4]
   2b2a0:	ldr	r2, [sp]
   2b2a4:	bl	2b164 <flatcc_builder_append_string@@Base>
   2b2a8:	mov	sp, fp
   2b2ac:	pop	{fp, pc}
   2b2b0:	push	{fp, lr}
   2b2b4:	mov	fp, sp
   2b2b8:	sub	sp, sp, #16
   2b2bc:	str	r0, [fp, #-4]
   2b2c0:	str	r1, [sp, #8]
   2b2c4:	ldr	r0, [fp, #-4]
   2b2c8:	ldr	r2, [sp, #8]
   2b2cc:	mov	r1, #0
   2b2d0:	bl	14ee4 <memchr@plt>
   2b2d4:	str	r0, [sp, #4]
   2b2d8:	ldr	r0, [sp, #4]
   2b2dc:	movw	r1, #0
   2b2e0:	cmp	r0, r1
   2b2e4:	beq	2b2fc <flatcc_builder_append_string_strn@@Base+0xa8>
   2b2e8:	ldr	r0, [sp, #4]
   2b2ec:	ldr	r1, [fp, #-4]
   2b2f0:	sub	r0, r0, r1
   2b2f4:	str	r0, [sp]
   2b2f8:	b	2b304 <flatcc_builder_append_string_strn@@Base+0xb0>
   2b2fc:	ldr	r0, [sp, #8]
   2b300:	str	r0, [sp]
   2b304:	ldr	r0, [sp]
   2b308:	mov	sp, fp
   2b30c:	pop	{fp, pc}

0002b310 <flatcc_builder_truncate_vector@@Base>:
   2b310:	push	{fp, lr}
   2b314:	mov	fp, sp
   2b318:	sub	sp, sp, #16
   2b31c:	str	r0, [sp, #8]
   2b320:	str	r1, [sp, #4]
   2b324:	ldr	r0, [sp, #8]
   2b328:	ldr	r0, [r0, #32]
   2b32c:	ldrh	r0, [r0, #14]
   2b330:	cmp	r0, #4
   2b334:	bne	2b33c <flatcc_builder_truncate_vector@@Base+0x2c>
   2b338:	b	2b35c <flatcc_builder_truncate_vector@@Base+0x4c>
   2b33c:	ldr	r0, [pc, #192]	; 2b404 <flatcc_builder_truncate_vector@@Base+0xf4>
   2b340:	add	r0, pc, r0
   2b344:	ldr	r1, [pc, #188]	; 2b408 <flatcc_builder_truncate_vector@@Base+0xf8>
   2b348:	add	r1, pc, r1
   2b34c:	ldr	r2, [pc, #184]	; 2b40c <flatcc_builder_truncate_vector@@Base+0xfc>
   2b350:	add	r3, pc, r2
   2b354:	movw	r2, #985	; 0x3d9
   2b358:	bl	14f08 <__assert_fail@plt>
   2b35c:	ldr	r0, [sp, #8]
   2b360:	ldr	r0, [r0, #32]
   2b364:	ldr	r0, [r0, #20]
   2b368:	ldr	r1, [sp, #4]
   2b36c:	cmp	r0, r1
   2b370:	bcs	2b3bc <flatcc_builder_truncate_vector@@Base+0xac>
   2b374:	ldr	r0, [sp, #8]
   2b378:	ldr	r0, [r0, #32]
   2b37c:	ldr	r0, [r0, #20]
   2b380:	ldr	r1, [sp, #4]
   2b384:	cmp	r0, r1
   2b388:	bcc	2b390 <flatcc_builder_truncate_vector@@Base+0x80>
   2b38c:	b	2b3b0 <flatcc_builder_truncate_vector@@Base+0xa0>
   2b390:	ldr	r0, [pc, #120]	; 2b410 <flatcc_builder_truncate_vector@@Base+0x100>
   2b394:	add	r0, pc, r0
   2b398:	ldr	r1, [pc, #116]	; 2b414 <flatcc_builder_truncate_vector@@Base+0x104>
   2b39c:	add	r1, pc, r1
   2b3a0:	ldr	r2, [pc, #112]	; 2b418 <flatcc_builder_truncate_vector@@Base+0x108>
   2b3a4:	add	r3, pc, r2
   2b3a8:	movw	r2, #986	; 0x3da
   2b3ac:	bl	14f08 <__assert_fail@plt>
   2b3b0:	mvn	r0, #0
   2b3b4:	str	r0, [fp, #-4]
   2b3b8:	b	2b3f8 <flatcc_builder_truncate_vector@@Base+0xe8>
   2b3bc:	ldr	r0, [sp, #4]
   2b3c0:	ldr	r1, [sp, #8]
   2b3c4:	ldr	r1, [r1, #32]
   2b3c8:	ldr	r2, [r1, #20]
   2b3cc:	sub	r0, r2, r0
   2b3d0:	str	r0, [r1, #20]
   2b3d4:	ldr	r0, [sp, #8]
   2b3d8:	ldr	r1, [sp, #8]
   2b3dc:	ldr	r1, [r1, #32]
   2b3e0:	ldr	r1, [r1, #16]
   2b3e4:	ldr	r2, [sp, #4]
   2b3e8:	mul	r1, r1, r2
   2b3ec:	bl	2b41c <flatcc_builder_truncate_vector@@Base+0x10c>
   2b3f0:	movw	r0, #0
   2b3f4:	str	r0, [fp, #-4]
   2b3f8:	ldr	r0, [fp, #-4]
   2b3fc:	mov	sp, fp
   2b400:	pop	{fp, pc}
   2b404:	andeq	lr, r1, lr, asr #19
   2b408:	andeq	lr, r1, ip, lsl #13
   2b40c:	andeq	lr, r1, r8, ror ip
   2b410:	andeq	lr, r1, r3, ror ip
   2b414:	andeq	lr, r1, r8, lsr r6
   2b418:	andeq	lr, r1, r4, lsr #24
   2b41c:	push	{fp, lr}
   2b420:	mov	fp, sp
   2b424:	sub	sp, sp, #8
   2b428:	str	r0, [sp, #4]
   2b42c:	str	r1, [sp]
   2b430:	ldr	r0, [sp]
   2b434:	ldr	r1, [sp, #4]
   2b438:	ldr	r2, [r1, #20]
   2b43c:	sub	r0, r2, r0
   2b440:	str	r0, [r1, #20]
   2b444:	ldr	r0, [sp, #4]
   2b448:	ldr	r0, [r0, #16]
   2b44c:	ldr	r1, [sp, #4]
   2b450:	ldr	r1, [r1, #20]
   2b454:	add	r0, r0, r1
   2b458:	ldr	r2, [sp]
   2b45c:	movw	r1, #0
   2b460:	and	r1, r1, #255	; 0xff
   2b464:	bl	14ec0 <memset@plt>
   2b468:	mov	sp, fp
   2b46c:	pop	{fp, pc}

0002b470 <flatcc_builder_truncate_offset_vector@@Base>:
   2b470:	push	{fp, lr}
   2b474:	mov	fp, sp
   2b478:	sub	sp, sp, #16
   2b47c:	str	r0, [sp, #8]
   2b480:	str	r1, [sp, #4]
   2b484:	ldr	r0, [sp, #8]
   2b488:	ldr	r0, [r0, #32]
   2b48c:	ldrh	r0, [r0, #14]
   2b490:	cmp	r0, #5
   2b494:	bne	2b49c <flatcc_builder_truncate_offset_vector@@Base+0x2c>
   2b498:	b	2b4bc <flatcc_builder_truncate_offset_vector@@Base+0x4c>
   2b49c:	ldr	r0, [pc, #192]	; 2b564 <flatcc_builder_truncate_offset_vector@@Base+0xf4>
   2b4a0:	add	r0, pc, r0
   2b4a4:	ldr	r1, [pc, #188]	; 2b568 <flatcc_builder_truncate_offset_vector@@Base+0xf8>
   2b4a8:	add	r1, pc, r1
   2b4ac:	ldr	r2, [pc, #184]	; 2b56c <flatcc_builder_truncate_offset_vector@@Base+0xfc>
   2b4b0:	add	r3, pc, r2
   2b4b4:	movw	r2, #994	; 0x3e2
   2b4b8:	bl	14f08 <__assert_fail@plt>
   2b4bc:	ldr	r0, [sp, #8]
   2b4c0:	ldr	r0, [r0, #32]
   2b4c4:	ldr	r0, [r0, #20]
   2b4c8:	ldr	r1, [sp, #4]
   2b4cc:	cmp	r0, r1
   2b4d0:	bcs	2b51c <flatcc_builder_truncate_offset_vector@@Base+0xac>
   2b4d4:	ldr	r0, [sp, #8]
   2b4d8:	ldr	r0, [r0, #32]
   2b4dc:	ldr	r0, [r0, #20]
   2b4e0:	ldr	r1, [sp, #4]
   2b4e4:	cmp	r0, r1
   2b4e8:	bcc	2b4f0 <flatcc_builder_truncate_offset_vector@@Base+0x80>
   2b4ec:	b	2b510 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   2b4f0:	ldr	r0, [pc, #120]	; 2b570 <flatcc_builder_truncate_offset_vector@@Base+0x100>
   2b4f4:	add	r0, pc, r0
   2b4f8:	ldr	r1, [pc, #116]	; 2b574 <flatcc_builder_truncate_offset_vector@@Base+0x104>
   2b4fc:	add	r1, pc, r1
   2b500:	ldr	r2, [pc, #112]	; 2b578 <flatcc_builder_truncate_offset_vector@@Base+0x108>
   2b504:	add	r3, pc, r2
   2b508:	movw	r2, #995	; 0x3e3
   2b50c:	bl	14f08 <__assert_fail@plt>
   2b510:	mvn	r0, #0
   2b514:	str	r0, [fp, #-4]
   2b518:	b	2b558 <flatcc_builder_truncate_offset_vector@@Base+0xe8>
   2b51c:	ldr	r0, [sp, #4]
   2b520:	ldr	r1, [sp, #8]
   2b524:	ldr	r1, [r1, #32]
   2b528:	ldr	r2, [r1, #20]
   2b52c:	sub	r0, r2, r0
   2b530:	str	r0, [r1, #20]
   2b534:	ldr	r0, [sp, #8]
   2b538:	ldr	r1, [sp, #8]
   2b53c:	ldr	r1, [r1, #32]
   2b540:	ldr	r1, [r1, #16]
   2b544:	ldr	r2, [sp, #4]
   2b548:	mul	r1, r1, r2
   2b54c:	bl	2b41c <flatcc_builder_truncate_vector@@Base+0x10c>
   2b550:	movw	r0, #0
   2b554:	str	r0, [fp, #-4]
   2b558:	ldr	r0, [fp, #-4]
   2b55c:	mov	sp, fp
   2b560:	pop	{fp, pc}
   2b564:	andeq	lr, r1, r7, ror #18
   2b568:	andeq	lr, r1, ip, lsr #10
   2b56c:	andeq	lr, r1, fp, ror fp
   2b570:	andeq	lr, r1, sp, ror fp
   2b574:	ldrdeq	lr, [r1], -r8
   2b578:	andeq	lr, r1, r7, lsr #22

0002b57c <flatcc_builder_truncate_string@@Base>:
   2b57c:	push	{fp, lr}
   2b580:	mov	fp, sp
   2b584:	sub	sp, sp, #16
   2b588:	str	r0, [sp, #8]
   2b58c:	str	r1, [sp, #4]
   2b590:	ldr	r0, [sp, #8]
   2b594:	ldr	r0, [r0, #32]
   2b598:	ldrh	r0, [r0, #14]
   2b59c:	cmp	r0, #6
   2b5a0:	bne	2b5a8 <flatcc_builder_truncate_string@@Base+0x2c>
   2b5a4:	b	2b5c8 <flatcc_builder_truncate_string@@Base+0x4c>
   2b5a8:	ldr	r0, [pc, #176]	; 2b660 <flatcc_builder_truncate_string@@Base+0xe4>
   2b5ac:	add	r0, pc, r0
   2b5b0:	ldr	r1, [pc, #172]	; 2b664 <flatcc_builder_truncate_string@@Base+0xe8>
   2b5b4:	add	r1, pc, r1
   2b5b8:	ldr	r2, [pc, #168]	; 2b668 <flatcc_builder_truncate_string@@Base+0xec>
   2b5bc:	add	r3, pc, r2
   2b5c0:	movw	r2, #1003	; 0x3eb
   2b5c4:	bl	14f08 <__assert_fail@plt>
   2b5c8:	ldr	r0, [sp, #8]
   2b5cc:	ldr	r0, [r0, #32]
   2b5d0:	ldr	r0, [r0, #20]
   2b5d4:	ldr	r1, [sp, #4]
   2b5d8:	cmp	r0, r1
   2b5dc:	bcs	2b628 <flatcc_builder_truncate_string@@Base+0xac>
   2b5e0:	ldr	r0, [sp, #8]
   2b5e4:	ldr	r0, [r0, #32]
   2b5e8:	ldr	r0, [r0, #20]
   2b5ec:	ldr	r1, [sp, #4]
   2b5f0:	cmp	r0, r1
   2b5f4:	bcc	2b5fc <flatcc_builder_truncate_string@@Base+0x80>
   2b5f8:	b	2b61c <flatcc_builder_truncate_string@@Base+0xa0>
   2b5fc:	ldr	r0, [pc, #104]	; 2b66c <flatcc_builder_truncate_string@@Base+0xf0>
   2b600:	add	r0, pc, r0
   2b604:	ldr	r1, [pc, #100]	; 2b670 <flatcc_builder_truncate_string@@Base+0xf4>
   2b608:	add	r1, pc, r1
   2b60c:	ldr	r2, [pc, #96]	; 2b674 <flatcc_builder_truncate_string@@Base+0xf8>
   2b610:	add	r3, pc, r2
   2b614:	movw	r2, #1004	; 0x3ec
   2b618:	bl	14f08 <__assert_fail@plt>
   2b61c:	mvn	r0, #0
   2b620:	str	r0, [fp, #-4]
   2b624:	b	2b654 <flatcc_builder_truncate_string@@Base+0xd8>
   2b628:	ldr	r0, [sp, #4]
   2b62c:	ldr	r1, [sp, #8]
   2b630:	ldr	r1, [r1, #32]
   2b634:	ldr	r2, [r1, #20]
   2b638:	sub	r0, r2, r0
   2b63c:	str	r0, [r1, #20]
   2b640:	ldr	r0, [sp, #8]
   2b644:	ldr	r1, [sp, #4]
   2b648:	bl	2b41c <flatcc_builder_truncate_vector@@Base+0x10c>
   2b64c:	movw	r0, #0
   2b650:	str	r0, [fp, #-4]
   2b654:	ldr	r0, [fp, #-4]
   2b658:	mov	sp, fp
   2b65c:	pop	{fp, pc}
   2b660:	andeq	lr, r1, r4, ror #18
   2b664:	andeq	lr, r1, r0, lsr #8
   2b668:	strdeq	lr, [r1], -r0
   2b66c:	andeq	lr, r1, fp, ror #21
   2b670:	andeq	lr, r1, ip, asr #7
   2b674:	muleq	r1, ip, sl

0002b678 <flatcc_builder_start_vector@@Base>:
   2b678:	push	{fp, lr}
   2b67c:	mov	fp, sp
   2b680:	sub	sp, sp, #24
   2b684:	str	r0, [fp, #-8]
   2b688:	str	r1, [sp, #12]
   2b68c:	strh	r2, [sp, #10]
   2b690:	str	r3, [sp, #4]
   2b694:	add	r0, sp, #10
   2b698:	movw	r1, #4
   2b69c:	uxth	r1, r1
   2b6a0:	bl	2b724 <flatcc_builder_start_vector@@Base+0xac>
   2b6a4:	ldr	r0, [fp, #-8]
   2b6a8:	ldrh	r1, [sp, #10]
   2b6ac:	bl	2a530 <flatcc_builder_start_buffer@@Base+0x178>
   2b6b0:	cmp	r0, #0
   2b6b4:	beq	2b6c4 <flatcc_builder_start_vector@@Base+0x4c>
   2b6b8:	mvn	r0, #0
   2b6bc:	str	r0, [fp, #-4]
   2b6c0:	b	2b718 <flatcc_builder_start_vector@@Base+0xa0>
   2b6c4:	ldr	r0, [sp, #12]
   2b6c8:	ldr	r1, [fp, #-8]
   2b6cc:	ldr	r1, [r1, #32]
   2b6d0:	str	r0, [r1, #16]
   2b6d4:	ldr	r0, [fp, #-8]
   2b6d8:	ldr	r0, [r0, #32]
   2b6dc:	movw	r1, #0
   2b6e0:	str	r1, [r0, #20]
   2b6e4:	ldr	r0, [sp, #4]
   2b6e8:	ldr	r1, [fp, #-8]
   2b6ec:	ldr	r1, [r1, #32]
   2b6f0:	str	r0, [r1, #24]
   2b6f4:	ldr	r0, [fp, #-8]
   2b6f8:	ldr	r0, [r0, #32]
   2b6fc:	movw	r1, #4
   2b700:	strh	r1, [r0, #14]
   2b704:	ldr	r0, [fp, #-8]
   2b708:	mvn	r1, #3
   2b70c:	bl	2a998 <flatcc_builder_start_struct@@Base+0x70>
   2b710:	movw	r0, #0
   2b714:	str	r0, [fp, #-4]
   2b718:	ldr	r0, [fp, #-4]
   2b71c:	mov	sp, fp
   2b720:	pop	{fp, pc}
   2b724:	sub	sp, sp, #8
   2b728:	str	r0, [sp, #4]
   2b72c:	strh	r1, [sp, #2]
   2b730:	ldr	r0, [sp, #4]
   2b734:	ldrh	r0, [r0]
   2b738:	ldrh	r1, [sp, #2]
   2b73c:	cmp	r0, r1
   2b740:	bge	2b750 <flatcc_builder_start_vector@@Base+0xd8>
   2b744:	ldrh	r0, [sp, #2]
   2b748:	ldr	r1, [sp, #4]
   2b74c:	strh	r0, [r1]
   2b750:	add	sp, sp, #8
   2b754:	bx	lr

0002b758 <flatcc_builder_start_offset_vector@@Base>:
   2b758:	push	{fp, lr}
   2b75c:	mov	fp, sp
   2b760:	sub	sp, sp, #8
   2b764:	str	r0, [sp]
   2b768:	ldr	r0, [sp]
   2b76c:	movw	r1, #4
   2b770:	uxth	r1, r1
   2b774:	bl	2a530 <flatcc_builder_start_buffer@@Base+0x178>
   2b778:	cmp	r0, #0
   2b77c:	beq	2b78c <flatcc_builder_start_offset_vector@@Base+0x34>
   2b780:	mvn	r0, #0
   2b784:	str	r0, [sp, #4]
   2b788:	b	2b7d0 <flatcc_builder_start_offset_vector@@Base+0x78>
   2b78c:	ldr	r0, [sp]
   2b790:	ldr	r0, [r0, #32]
   2b794:	movw	r1, #4
   2b798:	str	r1, [r0, #16]
   2b79c:	ldr	r0, [sp]
   2b7a0:	ldr	r0, [r0, #32]
   2b7a4:	movw	r1, #0
   2b7a8:	str	r1, [r0, #20]
   2b7ac:	ldr	r0, [sp]
   2b7b0:	ldr	r0, [r0, #32]
   2b7b4:	movw	r1, #5
   2b7b8:	strh	r1, [r0, #14]
   2b7bc:	ldr	r0, [sp]
   2b7c0:	mvn	r1, #3
   2b7c4:	bl	2a998 <flatcc_builder_start_struct@@Base+0x70>
   2b7c8:	movw	r0, #0
   2b7cc:	str	r0, [sp, #4]
   2b7d0:	ldr	r0, [sp, #4]
   2b7d4:	mov	sp, fp
   2b7d8:	pop	{fp, pc}

0002b7dc <flatcc_builder_create_offset_vector@@Base>:
   2b7dc:	push	{fp, lr}
   2b7e0:	mov	fp, sp
   2b7e4:	sub	sp, sp, #24
   2b7e8:	str	r0, [fp, #-8]
   2b7ec:	str	r1, [sp, #12]
   2b7f0:	str	r2, [sp, #8]
   2b7f4:	ldr	r0, [fp, #-8]
   2b7f8:	bl	2b758 <flatcc_builder_start_offset_vector@@Base>
   2b7fc:	cmp	r0, #0
   2b800:	beq	2b810 <flatcc_builder_create_offset_vector@@Base+0x34>
   2b804:	movw	r0, #0
   2b808:	str	r0, [fp, #-4]
   2b80c:	b	2b858 <flatcc_builder_create_offset_vector@@Base+0x7c>
   2b810:	ldr	r0, [fp, #-8]
   2b814:	ldr	r1, [sp, #8]
   2b818:	bl	2aeec <flatcc_builder_extend_offset_vector@@Base>
   2b81c:	str	r0, [sp, #4]
   2b820:	movw	r1, #0
   2b824:	cmp	r0, r1
   2b828:	bne	2b838 <flatcc_builder_create_offset_vector@@Base+0x5c>
   2b82c:	movw	r0, #0
   2b830:	str	r0, [fp, #-4]
   2b834:	b	2b858 <flatcc_builder_create_offset_vector@@Base+0x7c>
   2b838:	ldr	r0, [sp, #4]
   2b83c:	ldr	r1, [sp, #12]
   2b840:	ldr	r2, [sp, #8]
   2b844:	lsl	r2, r2, #2
   2b848:	bl	14e30 <memcpy@plt>
   2b84c:	ldr	r0, [fp, #-8]
   2b850:	bl	2b864 <flatcc_builder_end_offset_vector@@Base>
   2b854:	str	r0, [fp, #-4]
   2b858:	ldr	r0, [fp, #-4]
   2b85c:	mov	sp, fp
   2b860:	pop	{fp, pc}

0002b864 <flatcc_builder_end_offset_vector@@Base>:
   2b864:	push	{fp, lr}
   2b868:	mov	fp, sp
   2b86c:	sub	sp, sp, #16
   2b870:	str	r0, [sp, #8]
   2b874:	ldr	r0, [sp, #8]
   2b878:	ldr	r0, [r0, #32]
   2b87c:	ldrh	r0, [r0, #14]
   2b880:	cmp	r0, #5
   2b884:	bne	2b88c <flatcc_builder_end_offset_vector@@Base+0x28>
   2b888:	b	2b8ac <flatcc_builder_end_offset_vector@@Base+0x48>
   2b88c:	ldr	r0, [pc, #108]	; 2b900 <flatcc_builder_end_offset_vector@@Base+0x9c>
   2b890:	add	r0, pc, r0
   2b894:	ldr	r1, [pc, #104]	; 2b904 <flatcc_builder_end_offset_vector@@Base+0xa0>
   2b898:	add	r1, pc, r1
   2b89c:	ldr	r2, [pc, #100]	; 2b908 <flatcc_builder_end_offset_vector@@Base+0xa4>
   2b8a0:	add	r3, pc, r2
   2b8a4:	movw	r2, #1480	; 0x5c8
   2b8a8:	bl	14f08 <__assert_fail@plt>
   2b8ac:	ldr	r0, [sp, #8]
   2b8b0:	ldr	r1, [sp, #8]
   2b8b4:	ldr	r1, [r1, #16]
   2b8b8:	ldr	r2, [sp, #8]
   2b8bc:	ldr	r2, [r2, #32]
   2b8c0:	ldr	r2, [r2, #20]
   2b8c4:	bl	2cc74 <flatcc_builder_create_offset_vector_direct@@Base>
   2b8c8:	str	r0, [sp, #4]
   2b8cc:	movw	r1, #0
   2b8d0:	cmp	r1, r0
   2b8d4:	bne	2b8e4 <flatcc_builder_end_offset_vector@@Base+0x80>
   2b8d8:	movw	r0, #0
   2b8dc:	str	r0, [fp, #-4]
   2b8e0:	b	2b8f4 <flatcc_builder_end_offset_vector@@Base+0x90>
   2b8e4:	ldr	r0, [sp, #8]
   2b8e8:	bl	2a86c <flatcc_builder_end_buffer@@Base+0x170>
   2b8ec:	ldr	r0, [sp, #4]
   2b8f0:	str	r0, [fp, #-4]
   2b8f4:	ldr	r0, [fp, #-4]
   2b8f8:	mov	sp, fp
   2b8fc:	pop	{fp, pc}
   2b900:	andeq	lr, r1, r7, ror r5
   2b904:	andeq	lr, r1, ip, lsr r1
   2b908:	muleq	r1, r6, fp

0002b90c <flatcc_builder_start_string@@Base>:
   2b90c:	push	{fp, lr}
   2b910:	mov	fp, sp
   2b914:	sub	sp, sp, #8
   2b918:	str	r0, [sp]
   2b91c:	ldr	r0, [sp]
   2b920:	movw	r1, #1
   2b924:	uxth	r1, r1
   2b928:	bl	2a530 <flatcc_builder_start_buffer@@Base+0x178>
   2b92c:	cmp	r0, #0
   2b930:	beq	2b940 <flatcc_builder_start_string@@Base+0x34>
   2b934:	mvn	r0, #0
   2b938:	str	r0, [sp, #4]
   2b93c:	b	2b984 <flatcc_builder_start_string@@Base+0x78>
   2b940:	ldr	r0, [sp]
   2b944:	ldr	r0, [r0, #32]
   2b948:	movw	r1, #1
   2b94c:	str	r1, [r0, #16]
   2b950:	ldr	r0, [sp]
   2b954:	ldr	r0, [r0, #32]
   2b958:	movw	r1, #0
   2b95c:	str	r1, [r0, #20]
   2b960:	ldr	r0, [sp]
   2b964:	ldr	r0, [r0, #32]
   2b968:	movw	r1, #6
   2b96c:	strh	r1, [r0, #14]
   2b970:	ldr	r0, [sp]
   2b974:	mvn	r1, #3
   2b978:	bl	2a998 <flatcc_builder_start_struct@@Base+0x70>
   2b97c:	movw	r0, #0
   2b980:	str	r0, [sp, #4]
   2b984:	ldr	r0, [sp, #4]
   2b988:	mov	sp, fp
   2b98c:	pop	{fp, pc}

0002b990 <flatcc_builder_reserve_table@@Base>:
   2b990:	push	{fp, lr}
   2b994:	mov	fp, sp
   2b998:	sub	sp, sp, #8
   2b99c:	str	r0, [sp, #4]
   2b9a0:	str	r1, [sp]
   2b9a4:	ldr	r0, [sp]
   2b9a8:	cmp	r0, #0
   2b9ac:	blt	2b9b4 <flatcc_builder_reserve_table@@Base+0x24>
   2b9b0:	b	2b9d4 <flatcc_builder_reserve_table@@Base+0x44>
   2b9b4:	ldr	r0, [pc, #44]	; 2b9e8 <flatcc_builder_reserve_table@@Base+0x58>
   2b9b8:	add	r0, pc, r0
   2b9bc:	ldr	r1, [pc, #40]	; 2b9ec <flatcc_builder_reserve_table@@Base+0x5c>
   2b9c0:	add	r1, pc, r1
   2b9c4:	ldr	r2, [pc, #36]	; 2b9f0 <flatcc_builder_reserve_table@@Base+0x60>
   2b9c8:	add	r3, pc, r2
   2b9cc:	movw	r2, #1065	; 0x429
   2b9d0:	bl	14f08 <__assert_fail@plt>
   2b9d4:	ldr	r0, [sp, #4]
   2b9d8:	ldr	r1, [sp]
   2b9dc:	bl	2b9f4 <flatcc_builder_reserve_table@@Base+0x64>
   2b9e0:	mov	sp, fp
   2b9e4:	pop	{fp, pc}
   2b9e8:	muleq	r1, r6, r7
   2b9ec:	andeq	lr, r1, r4, lsl r0
   2b9f0:	andeq	lr, r1, r5, asr #14
   2b9f4:	push	{fp, lr}
   2b9f8:	mov	fp, sp
   2b9fc:	sub	sp, sp, #24
   2ba00:	str	r0, [fp, #-8]
   2ba04:	str	r1, [sp, #12]
   2ba08:	ldr	r0, [fp, #-8]
   2ba0c:	ldr	r0, [r0, #32]
   2ba10:	ldr	r1, [r0, #16]
   2ba14:	ldrh	r0, [r0, #28]
   2ba18:	add	r0, r1, r0, lsl #1
   2ba1c:	str	r0, [sp, #8]
   2ba20:	ldr	r0, [sp, #12]
   2ba24:	add	r0, r0, #2
   2ba28:	lsl	r0, r0, #1
   2ba2c:	str	r0, [sp, #4]
   2ba30:	ldr	r0, [fp, #-8]
   2ba34:	ldr	r2, [sp, #8]
   2ba38:	ldr	r3, [sp, #4]
   2ba3c:	movw	r1, #0
   2ba40:	movw	ip, #1
   2ba44:	str	ip, [sp]
   2ba48:	bl	296c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2ba4c:	ldr	r1, [fp, #-8]
   2ba50:	str	r0, [r1, #4]
   2ba54:	movw	r1, #0
   2ba58:	cmp	r0, r1
   2ba5c:	bne	2ba6c <flatcc_builder_reserve_table@@Base+0xdc>
   2ba60:	mvn	r0, #0
   2ba64:	str	r0, [fp, #-4]
   2ba68:	b	2bae0 <flatcc_builder_reserve_table@@Base+0x150>
   2ba6c:	ldr	r0, [fp, #-8]
   2ba70:	ldr	r1, [r0, #4]
   2ba74:	add	r1, r1, #4
   2ba78:	str	r1, [r0, #4]
   2ba7c:	ldr	r0, [fp, #-8]
   2ba80:	ldr	r0, [r0, #32]
   2ba84:	ldr	r0, [r0, #20]
   2ba88:	str	r0, [sp, #8]
   2ba8c:	ldr	r0, [sp, #12]
   2ba90:	lsl	r0, r0, #1
   2ba94:	add	r0, r0, #1
   2ba98:	str	r0, [sp, #4]
   2ba9c:	ldr	r0, [fp, #-8]
   2baa0:	ldr	r2, [sp, #8]
   2baa4:	ldr	r3, [sp, #4]
   2baa8:	movw	r1, #3
   2baac:	movw	ip, #0
   2bab0:	str	ip, [sp]
   2bab4:	bl	296c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2bab8:	ldr	r1, [fp, #-8]
   2babc:	str	r0, [r1]
   2bac0:	movw	r1, #0
   2bac4:	cmp	r0, r1
   2bac8:	bne	2bad8 <flatcc_builder_reserve_table@@Base+0x148>
   2bacc:	mvn	r0, #0
   2bad0:	str	r0, [fp, #-4]
   2bad4:	b	2bae0 <flatcc_builder_reserve_table@@Base+0x150>
   2bad8:	movw	r0, #0
   2badc:	str	r0, [fp, #-4]
   2bae0:	ldr	r0, [fp, #-4]
   2bae4:	mov	sp, fp
   2bae8:	pop	{fp, pc}

0002baec <flatcc_builder_start_table@@Base>:
   2baec:	push	{fp, lr}
   2baf0:	mov	fp, sp
   2baf4:	sub	sp, sp, #16
   2baf8:	str	r0, [sp, #8]
   2bafc:	str	r1, [sp, #4]
   2bb00:	ldr	r0, [sp, #8]
   2bb04:	movw	r1, #4
   2bb08:	uxth	r1, r1
   2bb0c:	bl	2a530 <flatcc_builder_start_buffer@@Base+0x178>
   2bb10:	cmp	r0, #0
   2bb14:	beq	2bb24 <flatcc_builder_start_table@@Base+0x38>
   2bb18:	mvn	r0, #0
   2bb1c:	str	r0, [fp, #-4]
   2bb20:	b	2bbf4 <flatcc_builder_start_table@@Base+0x108>
   2bb24:	ldr	r0, [pc, #212]	; 2bc00 <flatcc_builder_start_table@@Base+0x114>
   2bb28:	ldr	r1, [sp, #8]
   2bb2c:	ldr	r1, [r1, #4]
   2bb30:	ldr	r2, [sp, #8]
   2bb34:	ldr	r2, [r2, #52]	; 0x34
   2bb38:	sub	r1, r1, r2
   2bb3c:	ldr	r2, [sp, #8]
   2bb40:	ldr	r2, [r2, #32]
   2bb44:	str	r1, [r2, #16]
   2bb48:	ldr	r1, [sp, #8]
   2bb4c:	ldr	r1, [r1]
   2bb50:	ldr	r2, [sp, #8]
   2bb54:	ldr	r2, [r2, #76]	; 0x4c
   2bb58:	sub	r1, r1, r2
   2bb5c:	ldr	r2, [sp, #8]
   2bb60:	ldr	r2, [r2, #32]
   2bb64:	str	r1, [r2, #20]
   2bb68:	ldr	r1, [sp, #8]
   2bb6c:	ldr	r1, [r1, #12]
   2bb70:	ldr	r2, [sp, #8]
   2bb74:	ldr	r2, [r2, #32]
   2bb78:	str	r1, [r2, #24]
   2bb7c:	ldr	r1, [sp, #8]
   2bb80:	ldrh	r1, [r1, #8]
   2bb84:	ldr	r2, [sp, #8]
   2bb88:	ldr	r2, [r2, #32]
   2bb8c:	strh	r1, [r2, #28]
   2bb90:	ldr	r1, [sp, #8]
   2bb94:	movw	r2, #0
   2bb98:	str	r2, [r1, #12]
   2bb9c:	ldr	r1, [sp, #8]
   2bba0:	str	r0, [r1, #12]
   2bba4:	ldr	r0, [sp, #8]
   2bba8:	movw	r1, #0
   2bbac:	strh	r1, [r0, #8]
   2bbb0:	ldr	r0, [sp, #8]
   2bbb4:	ldr	r0, [r0, #32]
   2bbb8:	movw	r1, #3
   2bbbc:	strh	r1, [r0, #14]
   2bbc0:	ldr	r0, [sp, #8]
   2bbc4:	ldr	r1, [sp, #4]
   2bbc8:	bl	2b9f4 <flatcc_builder_reserve_table@@Base+0x64>
   2bbcc:	cmp	r0, #0
   2bbd0:	beq	2bbe0 <flatcc_builder_start_table@@Base+0xf4>
   2bbd4:	mvn	r0, #0
   2bbd8:	str	r0, [fp, #-4]
   2bbdc:	b	2bbf4 <flatcc_builder_start_table@@Base+0x108>
   2bbe0:	ldr	r0, [sp, #8]
   2bbe4:	movw	r1, #65532	; 0xfffc
   2bbe8:	bl	2a998 <flatcc_builder_start_struct@@Base+0x70>
   2bbec:	movw	r0, #0
   2bbf0:	str	r0, [fp, #-4]
   2bbf4:	ldr	r0, [fp, #-4]
   2bbf8:	mov	sp, fp
   2bbfc:	pop	{fp, pc}
   2bc00:	svccs	0x00693b52

0002bc04 <flatcc_builder_create_vtable@@Base>:
   2bc04:	push	{fp, lr}
   2bc08:	mov	fp, sp
   2bc0c:	sub	sp, sp, #104	; 0x68
   2bc10:	str	r0, [fp, #-8]
   2bc14:	str	r1, [fp, #-12]
   2bc18:	strh	r2, [fp, #-14]
   2bc1c:	movw	r0, #0
   2bc20:	str	r0, [sp, #12]
   2bc24:	str	r0, [sp, #16]
   2bc28:	ldrh	r0, [fp, #-14]
   2bc2c:	cmp	r0, #0
   2bc30:	ble	2bc74 <flatcc_builder_create_vtable@@Base+0x70>
   2bc34:	ldrh	r0, [fp, #-14]
   2bc38:	ldr	r1, [sp, #12]
   2bc3c:	add	r0, r1, r0
   2bc40:	str	r0, [sp, #12]
   2bc44:	ldr	r0, [fp, #-12]
   2bc48:	add	r1, sp, #12
   2bc4c:	add	r1, r1, #8
   2bc50:	ldr	r2, [sp, #16]
   2bc54:	str	r0, [r1, r2, lsl #3]
   2bc58:	ldrh	r0, [fp, #-14]
   2bc5c:	ldr	r2, [sp, #16]
   2bc60:	add	r1, r1, r2, lsl #3
   2bc64:	str	r0, [r1, #4]
   2bc68:	ldr	r0, [sp, #16]
   2bc6c:	add	r0, r0, #1
   2bc70:	str	r0, [sp, #16]
   2bc74:	ldr	r0, [fp, #-8]
   2bc78:	ldr	r0, [r0, #152]	; 0x98
   2bc7c:	cmp	r0, #0
   2bc80:	bne	2bcc0 <flatcc_builder_create_vtable@@Base+0xbc>
   2bc84:	ldr	r0, [fp, #-8]
   2bc88:	ldr	r0, [r0, #180]	; 0xb4
   2bc8c:	cmp	r0, #0
   2bc90:	bne	2bcc0 <flatcc_builder_create_vtable@@Base+0xbc>
   2bc94:	ldr	r0, [fp, #-8]
   2bc98:	add	r1, sp, #12
   2bc9c:	bl	2bd08 <flatcc_builder_create_vtable@@Base+0x104>
   2bca0:	str	r0, [fp, #-20]	; 0xffffffec
   2bca4:	movw	r1, #0
   2bca8:	cmp	r1, r0
   2bcac:	bne	2bcbc <flatcc_builder_create_vtable@@Base+0xb8>
   2bcb0:	movw	r0, #0
   2bcb4:	str	r0, [fp, #-4]
   2bcb8:	b	2bcfc <flatcc_builder_create_vtable@@Base+0xf8>
   2bcbc:	b	2bcf4 <flatcc_builder_create_vtable@@Base+0xf0>
   2bcc0:	ldr	r0, [fp, #-8]
   2bcc4:	add	r1, sp, #12
   2bcc8:	bl	29d6c <flatcc_builder_embed_buffer@@Base+0x39c>
   2bccc:	str	r0, [fp, #-20]	; 0xffffffec
   2bcd0:	movw	r1, #0
   2bcd4:	cmp	r1, r0
   2bcd8:	bne	2bce8 <flatcc_builder_create_vtable@@Base+0xe4>
   2bcdc:	movw	r0, #0
   2bce0:	str	r0, [fp, #-4]
   2bce4:	b	2bcfc <flatcc_builder_create_vtable@@Base+0xf8>
   2bce8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2bcec:	add	r0, r0, #1
   2bcf0:	str	r0, [fp, #-20]	; 0xffffffec
   2bcf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2bcf8:	str	r0, [fp, #-4]
   2bcfc:	ldr	r0, [fp, #-4]
   2bd00:	mov	sp, fp
   2bd04:	pop	{fp, pc}
   2bd08:	push	{fp, lr}
   2bd0c:	mov	fp, sp
   2bd10:	sub	sp, sp, #24
   2bd14:	str	r0, [fp, #-4]
   2bd18:	str	r1, [fp, #-8]
   2bd1c:	ldr	r0, [fp, #-4]
   2bd20:	ldr	r0, [r0, #140]	; 0x8c
   2bd24:	str	r0, [sp, #12]
   2bd28:	ldr	r0, [sp, #12]
   2bd2c:	ldr	r1, [fp, #-8]
   2bd30:	ldr	r1, [r1]
   2bd34:	add	r0, r0, r1
   2bd38:	ldr	r1, [fp, #-4]
   2bd3c:	str	r0, [r1, #140]	; 0x8c
   2bd40:	ldr	r0, [fp, #-4]
   2bd44:	ldr	r0, [r0, #140]	; 0x8c
   2bd48:	ldr	r1, [sp, #12]
   2bd4c:	cmp	r0, r1
   2bd50:	bge	2bd74 <flatcc_builder_create_vtable@@Base+0x170>
   2bd54:	ldr	r0, [pc, #168]	; 2be04 <flatcc_builder_create_vtable@@Base+0x200>
   2bd58:	add	r0, pc, r0
   2bd5c:	ldr	r1, [pc, #164]	; 2be08 <flatcc_builder_create_vtable@@Base+0x204>
   2bd60:	add	r1, pc, r1
   2bd64:	ldr	r2, [pc, #160]	; 2be0c <flatcc_builder_create_vtable@@Base+0x208>
   2bd68:	add	r3, pc, r2
   2bd6c:	movw	r2, #673	; 0x2a1
   2bd70:	bl	14f08 <__assert_fail@plt>
   2bd74:	ldr	r0, [fp, #-4]
   2bd78:	ldr	r0, [r0, #44]	; 0x2c
   2bd7c:	ldr	r1, [fp, #-4]
   2bd80:	ldr	r1, [r1, #36]	; 0x24
   2bd84:	ldr	r2, [fp, #-8]
   2bd88:	add	r2, r2, #8
   2bd8c:	ldr	r3, [fp, #-8]
   2bd90:	ldr	r3, [r3, #4]
   2bd94:	ldr	ip, [sp, #12]
   2bd98:	ldr	lr, [fp, #-8]
   2bd9c:	ldr	lr, [lr]
   2bda0:	str	r0, [sp, #8]
   2bda4:	mov	r0, r1
   2bda8:	mov	r1, r2
   2bdac:	mov	r2, r3
   2bdb0:	mov	r3, ip
   2bdb4:	str	lr, [sp]
   2bdb8:	ldr	ip, [sp, #8]
   2bdbc:	blx	ip
   2bdc0:	cmp	r0, #0
   2bdc4:	beq	2bde8 <flatcc_builder_create_vtable@@Base+0x1e4>
   2bdc8:	ldr	r0, [pc, #40]	; 2bdf8 <flatcc_builder_create_vtable@@Base+0x1f4>
   2bdcc:	add	r0, pc, r0
   2bdd0:	ldr	r1, [pc, #36]	; 2bdfc <flatcc_builder_create_vtable@@Base+0x1f8>
   2bdd4:	add	r1, pc, r1
   2bdd8:	ldr	r2, [pc, #32]	; 2be00 <flatcc_builder_create_vtable@@Base+0x1fc>
   2bddc:	add	r3, pc, r2
   2bde0:	movw	r2, #677	; 0x2a5
   2bde4:	bl	14f08 <__assert_fail@plt>
   2bde8:	ldr	r0, [sp, #12]
   2bdec:	add	r0, r0, #1
   2bdf0:	mov	sp, fp
   2bdf4:	pop	{fp, pc}
   2bdf8:	andeq	lr, r1, r5, asr #27
   2bdfc:	andeq	sp, r1, r0, lsl #24
   2be00:	andeq	lr, r1, r0, lsr sp
   2be04:	andeq	lr, r1, r9, lsr lr
   2be08:	andeq	sp, r1, r4, ror ip
   2be0c:	andeq	lr, r1, r4, lsr #27

0002be10 <flatcc_builder_create_cached_vtable@@Base>:
   2be10:	push	{fp, lr}
   2be14:	mov	fp, sp
   2be18:	sub	sp, sp, #48	; 0x30
   2be1c:	str	r0, [fp, #-8]
   2be20:	str	r1, [fp, #-12]
   2be24:	strh	r2, [fp, #-14]
   2be28:	str	r3, [fp, #-20]	; 0xffffffec
   2be2c:	ldr	r0, [fp, #-8]
   2be30:	ldr	r1, [fp, #-20]	; 0xffffffec
   2be34:	bl	2c11c <flatcc_builder_create_cached_vtable@@Base+0x30c>
   2be38:	str	r0, [sp, #12]
   2be3c:	movw	r1, #0
   2be40:	cmp	r0, r1
   2be44:	bne	2be54 <flatcc_builder_create_cached_vtable@@Base+0x44>
   2be48:	movw	r0, #0
   2be4c:	str	r0, [fp, #-4]
   2be50:	b	2c110 <flatcc_builder_create_cached_vtable@@Base+0x300>
   2be54:	ldr	r0, [sp, #12]
   2be58:	str	r0, [sp, #16]
   2be5c:	ldr	r0, [sp, #16]
   2be60:	ldr	r0, [r0]
   2be64:	str	r0, [sp, #8]
   2be68:	movw	r0, #0
   2be6c:	str	r0, [sp, #20]
   2be70:	ldr	r0, [sp, #8]
   2be74:	cmp	r0, #0
   2be78:	beq	2bf7c <flatcc_builder_create_cached_vtable@@Base+0x16c>
   2be7c:	ldr	r0, [fp, #-8]
   2be80:	ldr	r0, [r0, #100]	; 0x64
   2be84:	ldr	r1, [sp, #8]
   2be88:	add	r0, r0, r1
   2be8c:	str	r0, [sp, #24]
   2be90:	ldr	r0, [fp, #-8]
   2be94:	ldr	r0, [r0, #68]	; 0x44
   2be98:	ldr	r1, [sp, #24]
   2be9c:	ldr	r1, [r1, #8]
   2bea0:	add	r0, r0, r1
   2bea4:	str	r0, [sp, #4]
   2bea8:	ldr	r0, [sp, #4]
   2beac:	ldrh	r0, [r0]
   2beb0:	ldrh	r1, [fp, #-14]
   2beb4:	cmp	r0, r1
   2beb8:	bne	2bed8 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2bebc:	ldr	r0, [fp, #-12]
   2bec0:	ldr	r1, [sp, #4]
   2bec4:	ldrh	r2, [fp, #-14]
   2bec8:	bl	14e3c <memcmp@plt>
   2becc:	movw	r1, #0
   2bed0:	cmp	r1, r0
   2bed4:	beq	2bef4 <flatcc_builder_create_cached_vtable@@Base+0xe4>
   2bed8:	ldr	r0, [sp, #24]
   2bedc:	add	r0, r0, #12
   2bee0:	str	r0, [sp, #16]
   2bee4:	ldr	r0, [sp, #24]
   2bee8:	ldr	r0, [r0, #12]
   2beec:	str	r0, [sp, #8]
   2bef0:	b	2be70 <flatcc_builder_create_cached_vtable@@Base+0x60>
   2bef4:	ldr	r0, [sp, #24]
   2bef8:	ldr	r0, [r0, #4]
   2befc:	ldr	r1, [fp, #-8]
   2bf00:	ldr	r1, [r1, #152]	; 0x98
   2bf04:	cmp	r0, r1
   2bf08:	beq	2bf30 <flatcc_builder_create_cached_vtable@@Base+0x120>
   2bf0c:	ldr	r0, [sp, #24]
   2bf10:	str	r0, [sp, #20]
   2bf14:	ldr	r0, [sp, #24]
   2bf18:	add	r0, r0, #12
   2bf1c:	str	r0, [sp, #16]
   2bf20:	ldr	r0, [sp, #24]
   2bf24:	ldr	r0, [r0, #12]
   2bf28:	str	r0, [sp, #8]
   2bf2c:	b	2be70 <flatcc_builder_create_cached_vtable@@Base+0x60>
   2bf30:	ldr	r0, [sp, #16]
   2bf34:	ldr	r1, [sp, #12]
   2bf38:	cmp	r0, r1
   2bf3c:	beq	2bf6c <flatcc_builder_create_cached_vtable@@Base+0x15c>
   2bf40:	ldr	r0, [sp, #24]
   2bf44:	ldr	r0, [r0, #12]
   2bf48:	ldr	r1, [sp, #16]
   2bf4c:	str	r0, [r1]
   2bf50:	ldr	r0, [sp, #12]
   2bf54:	ldr	r0, [r0]
   2bf58:	ldr	r1, [sp, #24]
   2bf5c:	str	r0, [r1, #12]
   2bf60:	ldr	r0, [sp, #8]
   2bf64:	ldr	r1, [sp, #12]
   2bf68:	str	r0, [r1]
   2bf6c:	ldr	r0, [sp, #24]
   2bf70:	ldr	r0, [r0]
   2bf74:	str	r0, [fp, #-4]
   2bf78:	b	2c110 <flatcc_builder_create_cached_vtable@@Base+0x300>
   2bf7c:	ldr	r0, [fp, #-8]
   2bf80:	ldr	r1, [fp, #-8]
   2bf84:	ldr	r2, [r1, #124]	; 0x7c
   2bf88:	movw	r1, #6
   2bf8c:	movw	r3, #16
   2bf90:	movw	ip, #0
   2bf94:	str	ip, [sp]
   2bf98:	bl	296c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2bf9c:	str	r0, [sp, #24]
   2bfa0:	movw	r1, #0
   2bfa4:	cmp	r0, r1
   2bfa8:	bne	2bfb8 <flatcc_builder_create_cached_vtable@@Base+0x1a8>
   2bfac:	movw	r0, #0
   2bfb0:	str	r0, [fp, #-4]
   2bfb4:	b	2c110 <flatcc_builder_create_cached_vtable@@Base+0x300>
   2bfb8:	ldr	r0, [fp, #-8]
   2bfbc:	ldr	r0, [r0, #124]	; 0x7c
   2bfc0:	str	r0, [sp, #8]
   2bfc4:	ldr	r0, [fp, #-8]
   2bfc8:	ldr	r1, [r0, #124]	; 0x7c
   2bfcc:	add	r1, r1, #16
   2bfd0:	str	r1, [r0, #124]	; 0x7c
   2bfd4:	ldr	r0, [fp, #-8]
   2bfd8:	ldr	r0, [r0, #152]	; 0x98
   2bfdc:	ldr	r1, [sp, #24]
   2bfe0:	str	r0, [r1, #4]
   2bfe4:	ldr	r0, [sp, #12]
   2bfe8:	ldr	r0, [r0]
   2bfec:	ldr	r1, [sp, #24]
   2bff0:	str	r0, [r1, #12]
   2bff4:	ldr	r0, [sp, #8]
   2bff8:	ldr	r1, [sp, #12]
   2bffc:	str	r0, [r1]
   2c000:	ldr	r0, [fp, #-8]
   2c004:	ldr	r1, [fp, #-12]
   2c008:	ldrh	r2, [fp, #-14]
   2c00c:	bl	2bc04 <flatcc_builder_create_vtable@@Base>
   2c010:	ldr	r1, [sp, #24]
   2c014:	str	r0, [r1]
   2c018:	movw	r1, #0
   2c01c:	cmp	r1, r0
   2c020:	bne	2c030 <flatcc_builder_create_cached_vtable@@Base+0x220>
   2c024:	movw	r0, #0
   2c028:	str	r0, [fp, #-4]
   2c02c:	b	2c110 <flatcc_builder_create_cached_vtable@@Base+0x300>
   2c030:	ldr	r0, [sp, #20]
   2c034:	movw	r1, #0
   2c038:	cmp	r0, r1
   2c03c:	beq	2c054 <flatcc_builder_create_cached_vtable@@Base+0x244>
   2c040:	ldr	r0, [sp, #20]
   2c044:	ldr	r0, [r0, #8]
   2c048:	ldr	r1, [sp, #24]
   2c04c:	str	r0, [r1, #8]
   2c050:	b	2c104 <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   2c054:	ldr	r0, [fp, #-8]
   2c058:	ldr	r0, [r0, #172]	; 0xac
   2c05c:	cmp	r0, #0
   2c060:	beq	2c090 <flatcc_builder_create_cached_vtable@@Base+0x280>
   2c064:	ldr	r0, [fp, #-8]
   2c068:	ldr	r0, [r0, #172]	; 0xac
   2c06c:	ldr	r1, [fp, #-8]
   2c070:	ldr	r1, [r1, #120]	; 0x78
   2c074:	ldrh	r2, [fp, #-14]
   2c078:	add	r1, r1, r2
   2c07c:	cmp	r0, r1
   2c080:	bcs	2c090 <flatcc_builder_create_cached_vtable@@Base+0x280>
   2c084:	ldr	r0, [fp, #-8]
   2c088:	bl	29138 <flatcc_builder_flush_vtable_cache@@Base>
   2c08c:	b	2c100 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2c090:	ldr	r0, [fp, #-8]
   2c094:	ldr	r1, [fp, #-8]
   2c098:	ldr	r2, [r1, #120]	; 0x78
   2c09c:	ldrh	r3, [fp, #-14]
   2c0a0:	movw	r1, #2
   2c0a4:	movw	ip, #0
   2c0a8:	str	ip, [sp]
   2c0ac:	bl	296c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2c0b0:	str	r0, [sp, #4]
   2c0b4:	movw	r1, #0
   2c0b8:	cmp	r0, r1
   2c0bc:	bne	2c0cc <flatcc_builder_create_cached_vtable@@Base+0x2bc>
   2c0c0:	mvn	r0, #0
   2c0c4:	str	r0, [fp, #-4]
   2c0c8:	b	2c110 <flatcc_builder_create_cached_vtable@@Base+0x300>
   2c0cc:	ldr	r0, [fp, #-8]
   2c0d0:	ldr	r0, [r0, #120]	; 0x78
   2c0d4:	ldr	r1, [sp, #24]
   2c0d8:	str	r0, [r1, #8]
   2c0dc:	ldrh	r0, [fp, #-14]
   2c0e0:	ldr	r1, [fp, #-8]
   2c0e4:	ldr	r2, [r1, #120]	; 0x78
   2c0e8:	add	r0, r2, r0
   2c0ec:	str	r0, [r1, #120]	; 0x78
   2c0f0:	ldr	r0, [sp, #4]
   2c0f4:	ldr	r1, [fp, #-12]
   2c0f8:	ldrh	r2, [fp, #-14]
   2c0fc:	bl	14e30 <memcpy@plt>
   2c100:	b	2c104 <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   2c104:	ldr	r0, [sp, #24]
   2c108:	ldr	r0, [r0]
   2c10c:	str	r0, [fp, #-4]
   2c110:	ldr	r0, [fp, #-4]
   2c114:	mov	sp, fp
   2c118:	pop	{fp, pc}
   2c11c:	push	{fp, lr}
   2c120:	mov	fp, sp
   2c124:	sub	sp, sp, #24
   2c128:	str	r0, [fp, #-8]
   2c12c:	str	r1, [sp, #12]
   2c130:	ldr	r0, [fp, #-8]
   2c134:	ldr	r0, [r0, #116]	; 0x74
   2c138:	cmp	r0, #0
   2c13c:	bne	2c160 <flatcc_builder_create_cached_vtable@@Base+0x350>
   2c140:	ldr	r0, [fp, #-8]
   2c144:	bl	2ec3c <flatcc_builder_get_emit_context@@Base+0xe8>
   2c148:	cmp	r0, #0
   2c14c:	beq	2c15c <flatcc_builder_create_cached_vtable@@Base+0x34c>
   2c150:	movw	r0, #0
   2c154:	str	r0, [fp, #-4]
   2c158:	b	2c194 <flatcc_builder_create_cached_vtable@@Base+0x384>
   2c15c:	b	2c160 <flatcc_builder_create_cached_vtable@@Base+0x350>
   2c160:	ldr	r0, [fp, #-8]
   2c164:	ldr	r0, [r0, #92]	; 0x5c
   2c168:	str	r0, [sp, #8]
   2c16c:	ldr	r0, [sp, #8]
   2c170:	ldr	r1, [sp, #12]
   2c174:	ldr	r2, [fp, #-8]
   2c178:	ldr	r2, [r2, #116]	; 0x74
   2c17c:	rsb	r2, r2, #32
   2c180:	lsr	r1, r1, r2
   2c184:	mov	r2, r1
   2c188:	add	r0, r0, r1, lsl #2
   2c18c:	str	r0, [fp, #-4]
   2c190:	str	r2, [sp, #4]
   2c194:	ldr	r0, [fp, #-4]
   2c198:	mov	sp, fp
   2c19c:	pop	{fp, pc}

0002c1a0 <flatcc_builder_create_table@@Base>:
   2c1a0:	push	{r4, sl, fp, lr}
   2c1a4:	add	fp, sp, #8
   2c1a8:	sub	sp, sp, #136	; 0x88
   2c1ac:	ldr	ip, [fp, #16]
   2c1b0:	ldr	lr, [fp, #12]
   2c1b4:	ldr	r4, [fp, #8]
   2c1b8:	str	r0, [fp, #-16]
   2c1bc:	str	r1, [fp, #-20]	; 0xffffffec
   2c1c0:	str	r2, [fp, #-24]	; 0xffffffe8
   2c1c4:	strh	r3, [fp, #-26]	; 0xffffffe6
   2c1c8:	ldr	r0, [fp, #12]
   2c1cc:	cmp	r0, #0
   2c1d0:	str	r4, [sp, #8]
   2c1d4:	str	lr, [sp, #4]
   2c1d8:	str	ip, [sp]
   2c1dc:	blt	2c1e4 <flatcc_builder_create_table@@Base+0x44>
   2c1e0:	b	2c204 <flatcc_builder_create_table@@Base+0x64>
   2c1e4:	ldr	r0, [pc, #616]	; 2c454 <flatcc_builder_create_table@@Base+0x2b4>
   2c1e8:	add	r0, pc, r0
   2c1ec:	ldr	r1, [pc, #612]	; 2c458 <flatcc_builder_create_table@@Base+0x2b8>
   2c1f0:	add	r1, pc, r1
   2c1f4:	ldr	r2, [pc, #608]	; 2c45c <flatcc_builder_create_table@@Base+0x2bc>
   2c1f8:	add	r3, pc, r2
   2c1fc:	movw	r2, #1237	; 0x4d5
   2c200:	bl	14f08 <__assert_fail@plt>
   2c204:	ldr	r0, [fp, #16]
   2c208:	and	r0, r0, #1
   2c20c:	cmp	r0, #0
   2c210:	beq	2c218 <flatcc_builder_create_table@@Base+0x78>
   2c214:	b	2c238 <flatcc_builder_create_table@@Base+0x98>
   2c218:	ldr	r0, [pc, #576]	; 2c460 <flatcc_builder_create_table@@Base+0x2c0>
   2c21c:	add	r0, pc, r0
   2c220:	ldr	r1, [pc, #572]	; 2c464 <flatcc_builder_create_table@@Base+0x2c4>
   2c224:	add	r1, pc, r1
   2c228:	ldr	r2, [pc, #568]	; 2c468 <flatcc_builder_create_table@@Base+0x2c8>
   2c22c:	add	r3, pc, r2
   2c230:	movw	r2, #1243	; 0x4db
   2c234:	bl	14f08 <__assert_fail@plt>
   2c238:	sub	r0, fp, #26
   2c23c:	movw	r1, #4
   2c240:	uxth	r1, r1
   2c244:	bl	2b724 <flatcc_builder_start_vector@@Base+0xac>
   2c248:	ldr	r0, [fp, #-16]
   2c24c:	ldrh	r1, [fp, #-26]	; 0xffffffe6
   2c250:	bl	2a238 <flatcc_builder_create_buffer@@Base+0x3a8>
   2c254:	ldr	r0, [fp, #-16]
   2c258:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c25c:	ldrh	r2, [fp, #-26]	; 0xffffffe6
   2c260:	bl	29d24 <flatcc_builder_embed_buffer@@Base+0x354>
   2c264:	str	r0, [fp, #-36]	; 0xffffffdc
   2c268:	ldr	r0, [fp, #-16]
   2c26c:	ldr	r0, [r0, #136]	; 0x88
   2c270:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c278:	add	r1, r1, r2
   2c27c:	add	r1, r1, #4
   2c280:	sub	r0, r0, r1
   2c284:	str	r0, [fp, #-52]	; 0xffffffcc
   2c288:	ldr	r0, [fp, #16]
   2c28c:	sub	r0, r0, #1
   2c290:	str	r0, [fp, #-48]	; 0xffffffd0
   2c294:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2c298:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2c29c:	sub	r0, r0, r1
   2c2a0:	str	r0, [fp, #-40]	; 0xffffffd8
   2c2a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2c2a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c2ac:	sub	r0, r0, r1
   2c2b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2c2b4:	cmp	r0, r1
   2c2b8:	beq	2c2c8 <flatcc_builder_create_table@@Base+0x128>
   2c2bc:	mvn	r0, #0
   2c2c0:	str	r0, [fp, #-12]
   2c2c4:	b	2c448 <flatcc_builder_create_table@@Base+0x2a8>
   2c2c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c2cc:	bl	29d58 <flatcc_builder_embed_buffer@@Base+0x388>
   2c2d0:	str	r0, [fp, #-44]	; 0xffffffd4
   2c2d4:	movw	r0, #0
   2c2d8:	str	r0, [fp, #-32]	; 0xffffffe0
   2c2dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c2e0:	ldr	r1, [fp, #12]
   2c2e4:	cmp	r0, r1
   2c2e8:	bge	2c354 <flatcc_builder_create_table@@Base+0x1b4>
   2c2ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c2f0:	ldr	r1, [fp, #8]
   2c2f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c2f8:	add	r1, r1, r2, lsl #1
   2c2fc:	ldrh	r1, [r1]
   2c300:	add	r0, r0, r1
   2c304:	str	r0, [fp, #-60]	; 0xffffffc4
   2c308:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2c30c:	ldr	r0, [r0]
   2c310:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2c314:	sub	r0, r0, r1
   2c318:	ldr	r1, [fp, #8]
   2c31c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c320:	add	r1, r1, r2, lsl #1
   2c324:	ldrh	r1, [r1]
   2c328:	sub	r0, r0, r1
   2c32c:	sub	r0, r0, #4
   2c330:	str	r0, [fp, #-56]	; 0xffffffc8
   2c334:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2c338:	bl	29d58 <flatcc_builder_embed_buffer@@Base+0x388>
   2c33c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2c340:	str	r0, [r1]
   2c344:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c348:	add	r0, r0, #1
   2c34c:	str	r0, [fp, #-32]	; 0xffffffe0
   2c350:	b	2c2dc <flatcc_builder_create_table@@Base+0x13c>
   2c354:	mov	r0, #0
   2c358:	str	r0, [sp, #12]
   2c35c:	str	r0, [sp, #16]
   2c360:	ldr	r0, [sp, #12]
   2c364:	add	r0, r0, #4
   2c368:	str	r0, [sp, #12]
   2c36c:	add	r0, sp, #12
   2c370:	add	r0, r0, #8
   2c374:	ldr	r1, [sp, #16]
   2c378:	sub	r2, fp, #44	; 0x2c
   2c37c:	str	r2, [r0, r1, lsl #3]
   2c380:	ldr	r1, [sp, #16]
   2c384:	add	r0, r0, r1, lsl #3
   2c388:	movw	r1, #4
   2c38c:	str	r1, [r0, #4]
   2c390:	ldr	r0, [sp, #16]
   2c394:	add	r0, r0, #1
   2c398:	str	r0, [sp, #16]
   2c39c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c3a0:	cmp	r0, #0
   2c3a4:	bls	2c3e8 <flatcc_builder_create_table@@Base+0x248>
   2c3a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c3ac:	ldr	r1, [sp, #12]
   2c3b0:	add	r0, r1, r0
   2c3b4:	str	r0, [sp, #12]
   2c3b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c3bc:	add	r1, sp, #12
   2c3c0:	add	r1, r1, #8
   2c3c4:	ldr	r2, [sp, #16]
   2c3c8:	str	r0, [r1, r2, lsl #3]
   2c3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c3d0:	ldr	r2, [sp, #16]
   2c3d4:	add	r1, r1, r2, lsl #3
   2c3d8:	str	r0, [r1, #4]
   2c3dc:	ldr	r0, [sp, #16]
   2c3e0:	add	r0, r0, #1
   2c3e4:	str	r0, [sp, #16]
   2c3e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c3ec:	cmp	r0, #0
   2c3f0:	bls	2c438 <flatcc_builder_create_table@@Base+0x298>
   2c3f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c3f8:	ldr	r1, [sp, #12]
   2c3fc:	add	r0, r1, r0
   2c400:	str	r0, [sp, #12]
   2c404:	add	r0, sp, #12
   2c408:	add	r0, r0, #8
   2c40c:	ldr	r1, [sp, #16]
   2c410:	ldr	r2, [pc, #84]	; 2c46c <flatcc_builder_create_table@@Base+0x2cc>
   2c414:	ldr	r2, [pc, r2]
   2c418:	str	r2, [r0, r1, lsl #3]
   2c41c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c420:	ldr	r2, [sp, #16]
   2c424:	add	r0, r0, r2, lsl #3
   2c428:	str	r1, [r0, #4]
   2c42c:	ldr	r0, [sp, #16]
   2c430:	add	r0, r0, #1
   2c434:	str	r0, [sp, #16]
   2c438:	ldr	r0, [fp, #-16]
   2c43c:	add	r1, sp, #12
   2c440:	bl	29d6c <flatcc_builder_embed_buffer@@Base+0x39c>
   2c444:	str	r0, [fp, #-12]
   2c448:	ldr	r0, [fp, #-12]
   2c44c:	sub	sp, fp, #8
   2c450:	pop	{r4, sl, fp, pc}
   2c454:	andeq	sp, r1, pc, asr pc
   2c458:	andeq	sp, r1, r4, ror #15
   2c45c:	andeq	sp, r1, r1, ror #30
   2c460:	ldrdeq	sp, [r1], -r9
   2c464:			; <UNDEFINED> instruction: 0x0001d7b0
   2c468:	andeq	sp, r1, sp, lsr #30
   2c46c:	andeq	r0, r3, ip, asr #24

0002c470 <flatcc_builder_check_required_field@@Base>:
   2c470:	push	{fp, lr}
   2c474:	mov	fp, sp
   2c478:	sub	sp, sp, #16
   2c47c:	str	r0, [fp, #-4]
   2c480:	strh	r1, [fp, #-6]
   2c484:	ldr	r0, [fp, #-4]
   2c488:	ldr	r0, [r0, #32]
   2c48c:	ldrh	r0, [r0, #14]
   2c490:	cmp	r0, #3
   2c494:	bne	2c49c <flatcc_builder_check_required_field@@Base+0x2c>
   2c498:	b	2c4bc <flatcc_builder_check_required_field@@Base+0x4c>
   2c49c:	ldr	r0, [pc, #104]	; 2c50c <flatcc_builder_check_required_field@@Base+0x9c>
   2c4a0:	add	r0, pc, r0
   2c4a4:	ldr	r1, [pc, #100]	; 2c510 <flatcc_builder_check_required_field@@Base+0xa0>
   2c4a8:	add	r1, pc, r1
   2c4ac:	ldr	r2, [pc, #96]	; 2c514 <flatcc_builder_check_required_field@@Base+0xa4>
   2c4b0:	add	r3, pc, r2
   2c4b4:	movw	r2, #1272	; 0x4f8
   2c4b8:	bl	14f08 <__assert_fail@plt>
   2c4bc:	ldrh	r0, [fp, #-6]
   2c4c0:	ldr	r1, [fp, #-4]
   2c4c4:	ldrh	r1, [r1, #8]
   2c4c8:	cmp	r0, r1
   2c4cc:	movw	r0, #0
   2c4d0:	str	r0, [sp, #4]
   2c4d4:	bge	2c4fc <flatcc_builder_check_required_field@@Base+0x8c>
   2c4d8:	ldr	r0, [fp, #-4]
   2c4dc:	ldr	r0, [r0, #4]
   2c4e0:	ldrh	r1, [fp, #-6]
   2c4e4:	add	r0, r0, r1, lsl #1
   2c4e8:	ldrh	r0, [r0]
   2c4ec:	cmp	r0, #0
   2c4f0:	movw	r0, #0
   2c4f4:	movne	r0, #1
   2c4f8:	str	r0, [sp, #4]
   2c4fc:	ldr	r0, [sp, #4]
   2c500:	and	r0, r0, #1
   2c504:	mov	sp, fp
   2c508:	pop	{fp, pc}
   2c50c:	andeq	sp, r1, r0, ror #26
   2c510:	andeq	sp, r1, ip, lsr #10
   2c514:	andeq	sp, r1, fp, ror sp

0002c518 <flatcc_builder_check_union_field@@Base>:
   2c518:	push	{fp, lr}
   2c51c:	mov	fp, sp
   2c520:	sub	sp, sp, #16
   2c524:	str	r0, [sp, #8]
   2c528:	strh	r1, [sp, #6]
   2c52c:	ldr	r0, [sp, #8]
   2c530:	ldr	r0, [r0, #32]
   2c534:	ldrh	r0, [r0, #14]
   2c538:	cmp	r0, #3
   2c53c:	bne	2c544 <flatcc_builder_check_union_field@@Base+0x2c>
   2c540:	b	2c564 <flatcc_builder_check_union_field@@Base+0x4c>
   2c544:	ldr	r0, [pc, #284]	; 2c668 <flatcc_builder_check_union_field@@Base+0x150>
   2c548:	add	r0, pc, r0
   2c54c:	ldr	r1, [pc, #280]	; 2c66c <flatcc_builder_check_union_field@@Base+0x154>
   2c550:	add	r1, pc, r1
   2c554:	ldr	r2, [pc, #276]	; 2c670 <flatcc_builder_check_union_field@@Base+0x158>
   2c558:	add	r3, pc, r2
   2c55c:	movw	r2, #1279	; 0x4ff
   2c560:	bl	14f08 <__assert_fail@plt>
   2c564:	ldrh	r0, [sp, #6]
   2c568:	cmp	r0, #0
   2c56c:	beq	2c584 <flatcc_builder_check_union_field@@Base+0x6c>
   2c570:	ldrh	r0, [sp, #6]
   2c574:	ldr	r1, [sp, #8]
   2c578:	ldrh	r1, [r1, #8]
   2c57c:	cmp	r0, r1
   2c580:	blt	2c590 <flatcc_builder_check_union_field@@Base+0x78>
   2c584:	movw	r0, #0
   2c588:	str	r0, [fp, #-4]
   2c58c:	b	2c65c <flatcc_builder_check_union_field@@Base+0x144>
   2c590:	ldr	r0, [sp, #8]
   2c594:	ldr	r0, [r0, #4]
   2c598:	ldrh	r1, [sp, #6]
   2c59c:	sub	r1, r1, #1
   2c5a0:	add	r0, r0, r1, lsl #1
   2c5a4:	ldrh	r0, [r0]
   2c5a8:	cmp	r0, #0
   2c5ac:	bne	2c5dc <flatcc_builder_check_union_field@@Base+0xc4>
   2c5b0:	ldr	r0, [sp, #8]
   2c5b4:	ldr	r0, [r0, #4]
   2c5b8:	ldrh	r1, [sp, #6]
   2c5bc:	add	r0, r0, r1, lsl #1
   2c5c0:	ldrh	r0, [r0]
   2c5c4:	cmp	r0, #0
   2c5c8:	movw	r0, #0
   2c5cc:	moveq	r0, #1
   2c5d0:	and	r0, r0, #1
   2c5d4:	str	r0, [fp, #-4]
   2c5d8:	b	2c65c <flatcc_builder_check_union_field@@Base+0x144>
   2c5dc:	ldr	r0, [sp, #8]
   2c5e0:	ldr	r1, [r0, #4]
   2c5e4:	ldr	r0, [r0, #16]
   2c5e8:	ldrh	r2, [sp, #6]
   2c5ec:	sub	r2, r2, #1
   2c5f0:	add	r1, r1, r2, lsl #1
   2c5f4:	ldrh	r1, [r1]
   2c5f8:	add	r0, r0, r1
   2c5fc:	ldrsb	r0, [r0]
   2c600:	cmp	r0, #0
   2c604:	beq	2c634 <flatcc_builder_check_union_field@@Base+0x11c>
   2c608:	ldr	r0, [sp, #8]
   2c60c:	ldr	r0, [r0, #4]
   2c610:	ldrh	r1, [sp, #6]
   2c614:	add	r0, r0, r1, lsl #1
   2c618:	ldrh	r0, [r0]
   2c61c:	cmp	r0, #0
   2c620:	movw	r0, #0
   2c624:	movne	r0, #1
   2c628:	and	r0, r0, #1
   2c62c:	str	r0, [fp, #-4]
   2c630:	b	2c65c <flatcc_builder_check_union_field@@Base+0x144>
   2c634:	ldr	r0, [sp, #8]
   2c638:	ldr	r0, [r0, #4]
   2c63c:	ldrh	r1, [sp, #6]
   2c640:	add	r0, r0, r1, lsl #1
   2c644:	ldrh	r0, [r0]
   2c648:	cmp	r0, #0
   2c64c:	movw	r0, #0
   2c650:	moveq	r0, #1
   2c654:	and	r0, r0, #1
   2c658:	str	r0, [fp, #-4]
   2c65c:	ldr	r0, [fp, #-4]
   2c660:	mov	sp, fp
   2c664:	pop	{fp, pc}
   2c668:			; <UNDEFINED> instruction: 0x0001dcb8
   2c66c:	andeq	sp, r1, r4, lsl #9
   2c670:	andeq	sp, r1, r6, lsr #26

0002c674 <flatcc_builder_check_required@@Base>:
   2c674:	push	{fp, lr}
   2c678:	mov	fp, sp
   2c67c:	sub	sp, sp, #24
   2c680:	str	r0, [fp, #-8]
   2c684:	str	r1, [sp, #12]
   2c688:	str	r2, [sp, #8]
   2c68c:	ldr	r0, [fp, #-8]
   2c690:	ldr	r0, [r0, #32]
   2c694:	ldrh	r0, [r0, #14]
   2c698:	cmp	r0, #3
   2c69c:	bne	2c6a4 <flatcc_builder_check_required@@Base+0x30>
   2c6a0:	b	2c6c4 <flatcc_builder_check_required@@Base+0x50>
   2c6a4:	ldr	r0, [pc, #172]	; 2c758 <flatcc_builder_check_required@@Base+0xe4>
   2c6a8:	add	r0, pc, r0
   2c6ac:	ldr	r1, [pc, #168]	; 2c75c <flatcc_builder_check_required@@Base+0xe8>
   2c6b0:	add	r1, pc, r1
   2c6b4:	ldr	r2, [pc, #164]	; 2c760 <flatcc_builder_check_required@@Base+0xec>
   2c6b8:	add	r3, pc, r2
   2c6bc:	movw	r2, #1297	; 0x511
   2c6c0:	bl	14f08 <__assert_fail@plt>
   2c6c4:	ldr	r0, [fp, #-8]
   2c6c8:	ldrh	r0, [r0, #8]
   2c6cc:	ldr	r1, [sp, #8]
   2c6d0:	cmp	r0, r1
   2c6d4:	bge	2c6e4 <flatcc_builder_check_required@@Base+0x70>
   2c6d8:	movw	r0, #0
   2c6dc:	str	r0, [fp, #-4]
   2c6e0:	b	2c74c <flatcc_builder_check_required@@Base+0xd8>
   2c6e4:	movw	r0, #0
   2c6e8:	str	r0, [sp, #4]
   2c6ec:	ldr	r0, [sp, #4]
   2c6f0:	ldr	r1, [sp, #8]
   2c6f4:	cmp	r0, r1
   2c6f8:	bge	2c744 <flatcc_builder_check_required@@Base+0xd0>
   2c6fc:	ldr	r0, [fp, #-8]
   2c700:	ldr	r0, [r0, #4]
   2c704:	ldr	r1, [sp, #12]
   2c708:	ldr	r2, [sp, #4]
   2c70c:	add	r1, r1, r2, lsl #1
   2c710:	ldrh	r1, [r1]
   2c714:	add	r0, r0, r1, lsl #1
   2c718:	ldrh	r0, [r0]
   2c71c:	cmp	r0, #0
   2c720:	bne	2c730 <flatcc_builder_check_required@@Base+0xbc>
   2c724:	movw	r0, #0
   2c728:	str	r0, [fp, #-4]
   2c72c:	b	2c74c <flatcc_builder_check_required@@Base+0xd8>
   2c730:	b	2c734 <flatcc_builder_check_required@@Base+0xc0>
   2c734:	ldr	r0, [sp, #4]
   2c738:	add	r0, r0, #1
   2c73c:	str	r0, [sp, #4]
   2c740:	b	2c6ec <flatcc_builder_check_required@@Base+0x78>
   2c744:	movw	r0, #1
   2c748:	str	r0, [fp, #-4]
   2c74c:	ldr	r0, [fp, #-4]
   2c750:	mov	sp, fp
   2c754:	pop	{fp, pc}
   2c758:	andeq	sp, r1, r8, asr fp
   2c75c:	andeq	sp, r1, r4, lsr #6
   2c760:	andeq	sp, r1, r6, lsl ip

0002c764 <flatcc_builder_end_table@@Base>:
   2c764:	push	{r4, r5, fp, lr}
   2c768:	add	fp, sp, #8
   2c76c:	sub	sp, sp, #48	; 0x30
   2c770:	str	r0, [fp, #-16]
   2c774:	ldr	r0, [fp, #-16]
   2c778:	ldr	r0, [r0, #32]
   2c77c:	ldrh	r0, [r0, #14]
   2c780:	cmp	r0, #3
   2c784:	bne	2c78c <flatcc_builder_end_table@@Base+0x28>
   2c788:	b	2c7ac <flatcc_builder_end_table@@Base+0x48>
   2c78c:	ldr	r0, [pc, #500]	; 2c988 <flatcc_builder_end_table@@Base+0x224>
   2c790:	add	r0, pc, r0
   2c794:	ldr	r1, [pc, #496]	; 2c98c <flatcc_builder_end_table@@Base+0x228>
   2c798:	add	r1, pc, r1
   2c79c:	ldr	r2, [pc, #492]	; 2c990 <flatcc_builder_end_table@@Base+0x22c>
   2c7a0:	add	r3, pc, r2
   2c7a4:	movw	r2, #1317	; 0x525
   2c7a8:	bl	14f08 <__assert_fail@plt>
   2c7ac:	ldr	r0, [pc, #480]	; 2c994 <flatcc_builder_end_table@@Base+0x230>
   2c7b0:	ldr	r1, [fp, #-16]
   2c7b4:	ldr	r1, [r1, #4]
   2c7b8:	sub	r1, r1, #4
   2c7bc:	str	r1, [fp, #-20]	; 0xffffffec
   2c7c0:	ldr	r1, [fp, #-16]
   2c7c4:	ldrh	r1, [r1, #8]
   2c7c8:	add	r1, r1, #2
   2c7cc:	lsl	r1, r1, #1
   2c7d0:	strh	r1, [fp, #-22]	; 0xffffffea
   2c7d4:	ldrh	r1, [fp, #-22]	; 0xffffffea
   2c7d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c7dc:	strh	r1, [r2]
   2c7e0:	ldr	r1, [fp, #-16]
   2c7e4:	ldr	r1, [r1, #20]
   2c7e8:	uxth	r1, r1
   2c7ec:	add	r1, r1, #4
   2c7f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c7f4:	strh	r1, [r2, #2]
   2c7f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c7fc:	ldrh	r1, [r1]
   2c800:	ldr	r2, [fp, #-16]
   2c804:	ldr	r2, [r2, #12]
   2c808:	eor	r1, r1, r2
   2c80c:	mul	r1, r1, r0
   2c810:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c814:	ldrh	r2, [r2, #2]
   2c818:	eor	r1, r1, r2
   2c81c:	mul	r0, r1, r0
   2c820:	ldr	r1, [fp, #-16]
   2c824:	str	r0, [r1, #12]
   2c828:	ldr	r0, [fp, #-16]
   2c82c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c830:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2c834:	ldr	r3, [fp, #-16]
   2c838:	ldr	r3, [r3, #12]
   2c83c:	uxth	r2, r2
   2c840:	bl	2be10 <flatcc_builder_create_cached_vtable@@Base>
   2c844:	str	r0, [sp, #24]
   2c848:	cmp	r0, #0
   2c84c:	bne	2c85c <flatcc_builder_end_table@@Base+0xf8>
   2c850:	movw	r0, #0
   2c854:	str	r0, [fp, #-12]
   2c858:	b	2c97c <flatcc_builder_end_table@@Base+0x218>
   2c85c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c860:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2c864:	mov	r1, #0
   2c868:	bl	14ec0 <memset@plt>
   2c86c:	ldr	r1, [fp, #-16]
   2c870:	ldr	r2, [r1, #32]
   2c874:	ldr	r1, [r1, #76]	; 0x4c
   2c878:	ldr	r2, [r2, #20]
   2c87c:	add	r1, r1, r2
   2c880:	str	r1, [sp, #16]
   2c884:	ldr	r1, [fp, #-16]
   2c888:	ldr	r1, [r1]
   2c88c:	ldr	r2, [sp, #16]
   2c890:	sub	r1, r1, r2
   2c894:	asr	r1, r1, #1
   2c898:	str	r1, [sp, #20]
   2c89c:	ldr	r1, [fp, #-16]
   2c8a0:	ldr	r2, [fp, #-16]
   2c8a4:	ldr	r2, [r2, #16]
   2c8a8:	ldr	lr, [fp, #-16]
   2c8ac:	ldr	lr, [lr, #20]
   2c8b0:	ldr	r3, [fp, #-16]
   2c8b4:	ldrh	r3, [r3, #130]	; 0x82
   2c8b8:	ldr	ip, [sp, #16]
   2c8bc:	ldr	r4, [sp, #20]
   2c8c0:	ldr	r5, [sp, #24]
   2c8c4:	str	r0, [sp, #12]
   2c8c8:	mov	r0, r1
   2c8cc:	mov	r1, r2
   2c8d0:	mov	r2, lr
   2c8d4:	uxth	r3, r3
   2c8d8:	str	ip, [sp]
   2c8dc:	str	r4, [sp, #4]
   2c8e0:	str	r5, [sp, #8]
   2c8e4:	bl	2c1a0 <flatcc_builder_create_table@@Base>
   2c8e8:	str	r0, [sp, #28]
   2c8ec:	movw	r1, #0
   2c8f0:	cmp	r1, r0
   2c8f4:	bne	2c904 <flatcc_builder_end_table@@Base+0x1a0>
   2c8f8:	movw	r0, #0
   2c8fc:	str	r0, [fp, #-12]
   2c900:	b	2c97c <flatcc_builder_end_table@@Base+0x218>
   2c904:	ldr	r0, [fp, #-16]
   2c908:	ldr	r0, [r0, #32]
   2c90c:	ldr	r0, [r0, #24]
   2c910:	ldr	r1, [fp, #-16]
   2c914:	str	r0, [r1, #12]
   2c918:	ldr	r0, [fp, #-16]
   2c91c:	ldr	r0, [r0, #32]
   2c920:	ldrh	r0, [r0, #28]
   2c924:	ldr	r1, [fp, #-16]
   2c928:	strh	r0, [r1, #8]
   2c92c:	ldr	r0, [fp, #-16]
   2c930:	ldr	r0, [r0, #52]	; 0x34
   2c934:	ldr	r1, [fp, #-16]
   2c938:	ldr	r1, [r1, #32]
   2c93c:	ldr	r1, [r1, #16]
   2c940:	add	r0, r0, r1
   2c944:	ldr	r1, [fp, #-16]
   2c948:	str	r0, [r1, #4]
   2c94c:	ldr	r0, [fp, #-16]
   2c950:	ldr	r0, [r0, #76]	; 0x4c
   2c954:	ldr	r1, [fp, #-16]
   2c958:	ldr	r1, [r1, #32]
   2c95c:	ldr	r1, [r1, #20]
   2c960:	add	r0, r0, r1
   2c964:	ldr	r1, [fp, #-16]
   2c968:	str	r0, [r1]
   2c96c:	ldr	r0, [fp, #-16]
   2c970:	bl	2a86c <flatcc_builder_end_buffer@@Base+0x170>
   2c974:	ldr	r0, [sp, #28]
   2c978:	str	r0, [fp, #-12]
   2c97c:	ldr	r0, [fp, #-12]
   2c980:	sub	sp, fp, #8
   2c984:	pop	{r4, r5, fp, pc}
   2c988:	andeq	sp, r1, r0, ror sl
   2c98c:	andeq	sp, r1, ip, lsr r2
   2c990:	andeq	sp, r1, r8, lsl #23
   2c994:			; <UNDEFINED> instruction: 0x9e3779b1

0002c998 <flatcc_builder_create_vector@@Base>:
   2c998:	push	{fp, lr}
   2c99c:	mov	fp, sp
   2c9a0:	sub	sp, sp, #112	; 0x70
   2c9a4:	ldr	ip, [fp, #12]
   2c9a8:	ldr	lr, [fp, #8]
   2c9ac:	str	r0, [fp, #-8]
   2c9b0:	str	r1, [fp, #-12]
   2c9b4:	str	r2, [fp, #-16]
   2c9b8:	str	r3, [fp, #-20]	; 0xffffffec
   2c9bc:	strh	lr, [fp, #-22]	; 0xffffffea
   2c9c0:	ldr	r0, [fp, #-16]
   2c9c4:	ldr	r1, [fp, #12]
   2c9c8:	cmp	r0, r1
   2c9cc:	str	ip, [sp]
   2c9d0:	bls	2ca14 <flatcc_builder_create_vector@@Base+0x7c>
   2c9d4:	ldr	r0, [fp, #-16]
   2c9d8:	ldr	r1, [fp, #12]
   2c9dc:	cmp	r0, r1
   2c9e0:	bhi	2c9e8 <flatcc_builder_create_vector@@Base+0x50>
   2c9e4:	b	2ca08 <flatcc_builder_create_vector@@Base+0x70>
   2c9e8:	ldr	r0, [pc, #364]	; 2cb5c <flatcc_builder_create_vector@@Base+0x1c4>
   2c9ec:	add	r0, pc, r0
   2c9f0:	ldr	r1, [pc, #360]	; 2cb60 <flatcc_builder_create_vector@@Base+0x1c8>
   2c9f4:	add	r1, pc, r1
   2c9f8:	ldr	r2, [pc, #356]	; 2cb64 <flatcc_builder_create_vector@@Base+0x1cc>
   2c9fc:	add	r3, pc, r2
   2ca00:	movw	r2, #1365	; 0x555
   2ca04:	bl	14f08 <__assert_fail@plt>
   2ca08:	movw	r0, #0
   2ca0c:	str	r0, [fp, #-4]
   2ca10:	b	2cb50 <flatcc_builder_create_vector@@Base+0x1b8>
   2ca14:	sub	r0, fp, #22
   2ca18:	mov	r1, #4
   2ca1c:	bl	2b724 <flatcc_builder_start_vector@@Base+0xac>
   2ca20:	ldr	r0, [fp, #-8]
   2ca24:	ldrh	r1, [fp, #-22]	; 0xffffffea
   2ca28:	bl	2a238 <flatcc_builder_create_buffer@@Base+0x3a8>
   2ca2c:	ldr	r0, [fp, #-16]
   2ca30:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ca34:	mul	r0, r0, r1
   2ca38:	str	r0, [fp, #-28]	; 0xffffffe4
   2ca3c:	ldr	r0, [fp, #-16]
   2ca40:	bl	29d58 <flatcc_builder_embed_buffer@@Base+0x388>
   2ca44:	str	r0, [fp, #-36]	; 0xffffffdc
   2ca48:	ldr	r0, [fp, #-8]
   2ca4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ca50:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2ca54:	bl	29d24 <flatcc_builder_embed_buffer@@Base+0x354>
   2ca58:	str	r0, [fp, #-32]	; 0xffffffe0
   2ca5c:	mov	r0, #0
   2ca60:	str	r0, [sp, #4]
   2ca64:	str	r0, [sp, #8]
   2ca68:	ldr	r0, [sp, #4]
   2ca6c:	add	r0, r0, #4
   2ca70:	str	r0, [sp, #4]
   2ca74:	add	r0, sp, #4
   2ca78:	add	r0, r0, #8
   2ca7c:	ldr	r1, [sp, #8]
   2ca80:	sub	r2, fp, #36	; 0x24
   2ca84:	str	r2, [r0, r1, lsl #3]
   2ca88:	ldr	r1, [sp, #8]
   2ca8c:	add	r0, r0, r1, lsl #3
   2ca90:	movw	r1, #4
   2ca94:	str	r1, [r0, #4]
   2ca98:	ldr	r0, [sp, #8]
   2ca9c:	add	r0, r0, #1
   2caa0:	str	r0, [sp, #8]
   2caa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2caa8:	cmp	r0, #0
   2caac:	bls	2caf0 <flatcc_builder_create_vector@@Base+0x158>
   2cab0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cab4:	ldr	r1, [sp, #4]
   2cab8:	add	r0, r1, r0
   2cabc:	str	r0, [sp, #4]
   2cac0:	ldr	r0, [fp, #-12]
   2cac4:	add	r1, sp, #4
   2cac8:	add	r1, r1, #8
   2cacc:	ldr	r2, [sp, #8]
   2cad0:	str	r0, [r1, r2, lsl #3]
   2cad4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cad8:	ldr	r2, [sp, #8]
   2cadc:	add	r1, r1, r2, lsl #3
   2cae0:	str	r0, [r1, #4]
   2cae4:	ldr	r0, [sp, #8]
   2cae8:	add	r0, r0, #1
   2caec:	str	r0, [sp, #8]
   2caf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2caf4:	cmp	r0, #0
   2caf8:	bls	2cb40 <flatcc_builder_create_vector@@Base+0x1a8>
   2cafc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cb00:	ldr	r1, [sp, #4]
   2cb04:	add	r0, r1, r0
   2cb08:	str	r0, [sp, #4]
   2cb0c:	add	r0, sp, #4
   2cb10:	add	r0, r0, #8
   2cb14:	ldr	r1, [sp, #8]
   2cb18:	ldr	r2, [pc, #72]	; 2cb68 <flatcc_builder_create_vector@@Base+0x1d0>
   2cb1c:	ldr	r2, [pc, r2]
   2cb20:	str	r2, [r0, r1, lsl #3]
   2cb24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2cb28:	ldr	r2, [sp, #8]
   2cb2c:	add	r0, r0, r2, lsl #3
   2cb30:	str	r1, [r0, #4]
   2cb34:	ldr	r0, [sp, #8]
   2cb38:	add	r0, r0, #1
   2cb3c:	str	r0, [sp, #8]
   2cb40:	ldr	r0, [fp, #-8]
   2cb44:	add	r1, sp, #4
   2cb48:	bl	29d6c <flatcc_builder_embed_buffer@@Base+0x39c>
   2cb4c:	str	r0, [fp, #-4]
   2cb50:	ldr	r0, [fp, #-4]
   2cb54:	mov	sp, fp
   2cb58:	pop	{fp, pc}
   2cb5c:	andeq	sp, r1, lr, ror r9
   2cb60:	andeq	ip, r1, r0, ror #31
   2cb64:	andeq	sp, r1, r1, lsl #19
   2cb68:	andeq	r0, r3, r4, asr #10

0002cb6c <flatcc_builder_end_vector@@Base>:
   2cb6c:	push	{fp, lr}
   2cb70:	mov	fp, sp
   2cb74:	sub	sp, sp, #24
   2cb78:	str	r0, [fp, #-8]
   2cb7c:	ldr	r0, [fp, #-8]
   2cb80:	ldr	r0, [r0, #32]
   2cb84:	ldrh	r0, [r0, #14]
   2cb88:	cmp	r0, #4
   2cb8c:	bne	2cb94 <flatcc_builder_end_vector@@Base+0x28>
   2cb90:	b	2cbb4 <flatcc_builder_end_vector@@Base+0x48>
   2cb94:	ldr	r0, [pc, #152]	; 2cc34 <flatcc_builder_end_vector@@Base+0xc8>
   2cb98:	add	r0, pc, r0
   2cb9c:	ldr	r1, [pc, #148]	; 2cc38 <flatcc_builder_end_vector@@Base+0xcc>
   2cba0:	add	r1, pc, r1
   2cba4:	ldr	r2, [pc, #144]	; 2cc3c <flatcc_builder_end_vector@@Base+0xd0>
   2cba8:	add	r3, pc, r2
   2cbac:	movw	r2, #1400	; 0x578
   2cbb0:	bl	14f08 <__assert_fail@plt>
   2cbb4:	ldr	r0, [fp, #-8]
   2cbb8:	ldr	r1, [fp, #-8]
   2cbbc:	ldr	r1, [r1, #16]
   2cbc0:	ldr	r2, [fp, #-8]
   2cbc4:	ldr	r2, [r2, #32]
   2cbc8:	ldr	r2, [r2, #20]
   2cbcc:	ldr	r3, [fp, #-8]
   2cbd0:	ldr	r3, [r3, #32]
   2cbd4:	ldr	r3, [r3, #16]
   2cbd8:	ldr	ip, [fp, #-8]
   2cbdc:	ldrh	ip, [ip, #130]	; 0x82
   2cbe0:	ldr	lr, [fp, #-8]
   2cbe4:	ldr	lr, [lr, #32]
   2cbe8:	ldr	lr, [lr, #24]
   2cbec:	uxth	ip, ip
   2cbf0:	str	ip, [sp]
   2cbf4:	str	lr, [sp, #4]
   2cbf8:	bl	2c998 <flatcc_builder_create_vector@@Base>
   2cbfc:	str	r0, [sp, #12]
   2cc00:	movw	r1, #0
   2cc04:	cmp	r1, r0
   2cc08:	bne	2cc18 <flatcc_builder_end_vector@@Base+0xac>
   2cc0c:	movw	r0, #0
   2cc10:	str	r0, [fp, #-4]
   2cc14:	b	2cc28 <flatcc_builder_end_vector@@Base+0xbc>
   2cc18:	ldr	r0, [fp, #-8]
   2cc1c:	bl	2a86c <flatcc_builder_end_buffer@@Base+0x170>
   2cc20:	ldr	r0, [sp, #12]
   2cc24:	str	r0, [fp, #-4]
   2cc28:	ldr	r0, [fp, #-4]
   2cc2c:	mov	sp, fp
   2cc30:	pop	{fp, pc}
   2cc34:	andeq	sp, r1, r6, ror r1
   2cc38:	andeq	ip, r1, r4, lsr lr
   2cc3c:	andeq	sp, r1, fp, asr #16

0002cc40 <flatcc_builder_vector_count@@Base>:
   2cc40:	sub	sp, sp, #4
   2cc44:	str	r0, [sp]
   2cc48:	ldr	r0, [sp]
   2cc4c:	ldr	r0, [r0, #32]
   2cc50:	ldr	r0, [r0, #20]
   2cc54:	add	sp, sp, #4
   2cc58:	bx	lr

0002cc5c <flatcc_builder_vector_edit@@Base>:
   2cc5c:	sub	sp, sp, #4
   2cc60:	str	r0, [sp]
   2cc64:	ldr	r0, [sp]
   2cc68:	ldr	r0, [r0, #16]
   2cc6c:	add	sp, sp, #4
   2cc70:	bx	lr

0002cc74 <flatcc_builder_create_offset_vector_direct@@Base>:
   2cc74:	push	{fp, lr}
   2cc78:	mov	fp, sp
   2cc7c:	sub	sp, sp, #16
   2cc80:	str	r0, [fp, #-4]
   2cc84:	str	r1, [sp, #8]
   2cc88:	str	r2, [sp, #4]
   2cc8c:	ldr	r0, [fp, #-4]
   2cc90:	ldr	r1, [sp, #8]
   2cc94:	ldr	r2, [sp, #4]
   2cc98:	movw	r3, #0
   2cc9c:	bl	2cca8 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   2cca0:	mov	sp, fp
   2cca4:	pop	{fp, pc}
   2cca8:	push	{fp, lr}
   2ccac:	mov	fp, sp
   2ccb0:	sub	sp, sp, #120	; 0x78
   2ccb4:	ldr	ip, [pc, #696]	; 2cf74 <flatcc_builder_create_offset_vector_direct@@Base+0x300>
   2ccb8:	str	r0, [fp, #-8]
   2ccbc:	str	r1, [fp, #-12]
   2ccc0:	str	r2, [fp, #-16]
   2ccc4:	str	r3, [fp, #-20]	; 0xffffffec
   2ccc8:	ldr	r0, [fp, #-16]
   2cccc:	cmp	r0, ip
   2ccd0:	bls	2cce0 <flatcc_builder_create_offset_vector_direct@@Base+0x6c>
   2ccd4:	movw	r0, #0
   2ccd8:	str	r0, [fp, #-4]
   2ccdc:	b	2cf68 <flatcc_builder_create_offset_vector_direct@@Base+0x2f4>
   2cce0:	ldr	r0, [fp, #-8]
   2cce4:	mov	r1, #4
   2cce8:	str	r1, [sp]
   2ccec:	bl	2a238 <flatcc_builder_create_buffer@@Base+0x3a8>
   2ccf0:	ldr	r0, [fp, #-16]
   2ccf4:	lsl	r0, r0, #2
   2ccf8:	str	r0, [fp, #-24]	; 0xffffffe8
   2ccfc:	ldr	r0, [fp, #-16]
   2cd00:	bl	29d58 <flatcc_builder_embed_buffer@@Base+0x388>
   2cd04:	str	r0, [fp, #-32]	; 0xffffffe0
   2cd08:	ldr	r0, [fp, #-8]
   2cd0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cd10:	ldr	r2, [sp]
   2cd14:	bl	29d24 <flatcc_builder_embed_buffer@@Base+0x354>
   2cd18:	str	r0, [fp, #-28]	; 0xffffffe4
   2cd1c:	mov	r0, #0
   2cd20:	str	r0, [sp, #4]
   2cd24:	str	r0, [sp, #8]
   2cd28:	ldr	r0, [sp, #4]
   2cd2c:	add	r0, r0, #4
   2cd30:	str	r0, [sp, #4]
   2cd34:	add	r0, sp, #4
   2cd38:	add	r0, r0, #8
   2cd3c:	ldr	r1, [sp, #8]
   2cd40:	sub	r2, fp, #32
   2cd44:	str	r2, [r0, r1, lsl #3]
   2cd48:	ldr	r1, [sp, #8]
   2cd4c:	add	r0, r0, r1, lsl #3
   2cd50:	movw	r1, #4
   2cd54:	str	r1, [r0, #4]
   2cd58:	ldr	r0, [sp, #8]
   2cd5c:	add	r0, r0, #1
   2cd60:	str	r0, [sp, #8]
   2cd64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd68:	cmp	r0, #0
   2cd6c:	bls	2cdb0 <flatcc_builder_create_offset_vector_direct@@Base+0x13c>
   2cd70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd74:	ldr	r1, [sp, #4]
   2cd78:	add	r0, r1, r0
   2cd7c:	str	r0, [sp, #4]
   2cd80:	ldr	r0, [fp, #-12]
   2cd84:	add	r1, sp, #4
   2cd88:	add	r1, r1, #8
   2cd8c:	ldr	r2, [sp, #8]
   2cd90:	str	r0, [r1, r2, lsl #3]
   2cd94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd98:	ldr	r2, [sp, #8]
   2cd9c:	add	r1, r1, r2, lsl #3
   2cda0:	str	r0, [r1, #4]
   2cda4:	ldr	r0, [sp, #8]
   2cda8:	add	r0, r0, #1
   2cdac:	str	r0, [sp, #8]
   2cdb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cdb4:	cmp	r0, #0
   2cdb8:	bls	2ce00 <flatcc_builder_create_offset_vector_direct@@Base+0x18c>
   2cdbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cdc0:	ldr	r1, [sp, #4]
   2cdc4:	add	r0, r1, r0
   2cdc8:	str	r0, [sp, #4]
   2cdcc:	add	r0, sp, #4
   2cdd0:	add	r0, r0, #8
   2cdd4:	ldr	r1, [sp, #8]
   2cdd8:	ldr	r2, [pc, #444]	; 2cf9c <flatcc_builder_create_offset_vector_direct@@Base+0x328>
   2cddc:	ldr	r2, [pc, r2]
   2cde0:	str	r2, [r0, r1, lsl #3]
   2cde4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cde8:	ldr	r2, [sp, #8]
   2cdec:	add	r0, r0, r2, lsl #3
   2cdf0:	str	r1, [r0, #4]
   2cdf4:	ldr	r0, [sp, #8]
   2cdf8:	add	r0, r0, #1
   2cdfc:	str	r0, [sp, #8]
   2ce00:	ldr	r0, [fp, #-8]
   2ce04:	ldr	r0, [r0, #136]	; 0x88
   2ce08:	ldr	r1, [sp, #4]
   2ce0c:	sub	r0, r0, r1
   2ce10:	str	r0, [fp, #-36]	; 0xffffffdc
   2ce14:	movw	r0, #0
   2ce18:	str	r0, [fp, #-44]	; 0xffffffd4
   2ce1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ce20:	ldr	r1, [fp, #-16]
   2ce24:	cmp	r0, r1
   2ce28:	bcs	2cf58 <flatcc_builder_create_offset_vector_direct@@Base+0x2e4>
   2ce2c:	ldr	r0, [fp, #-12]
   2ce30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ce34:	add	r0, r0, r1, lsl #2
   2ce38:	ldr	r0, [r0]
   2ce3c:	cmp	r0, #0
   2ce40:	beq	2ced0 <flatcc_builder_create_offset_vector_direct@@Base+0x25c>
   2ce44:	ldr	r0, [fp, #-12]
   2ce48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ce4c:	ldr	r0, [r0, r1, lsl #2]
   2ce50:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ce54:	sub	r0, r0, r2
   2ce58:	sub	r0, r0, r1, lsl #2
   2ce5c:	sub	r0, r0, #4
   2ce60:	str	r0, [fp, #-40]	; 0xffffffd8
   2ce64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ce68:	bl	29d58 <flatcc_builder_embed_buffer@@Base+0x388>
   2ce6c:	ldr	r1, [fp, #-12]
   2ce70:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2ce74:	add	r1, r1, r2, lsl #2
   2ce78:	str	r0, [r1]
   2ce7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ce80:	movw	r1, #0
   2ce84:	cmp	r0, r1
   2ce88:	beq	2cecc <flatcc_builder_create_offset_vector_direct@@Base+0x258>
   2ce8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ce90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ce94:	add	r0, r0, r1
   2ce98:	ldrb	r0, [r0]
   2ce9c:	cmp	r0, #0
   2cea0:	beq	2cea8 <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   2cea4:	b	2cec8 <flatcc_builder_create_offset_vector_direct@@Base+0x254>
   2cea8:	ldr	r0, [pc, #224]	; 2cf90 <flatcc_builder_create_offset_vector_direct@@Base+0x31c>
   2ceac:	add	r0, pc, r0
   2ceb0:	ldr	r1, [pc, #220]	; 2cf94 <flatcc_builder_create_offset_vector_direct@@Base+0x320>
   2ceb4:	add	r1, pc, r1
   2ceb8:	ldr	r2, [pc, #216]	; 2cf98 <flatcc_builder_create_offset_vector_direct@@Base+0x324>
   2cebc:	add	r3, pc, r2
   2cec0:	movw	r2, #1457	; 0x5b1
   2cec4:	bl	14f08 <__assert_fail@plt>
   2cec8:	b	2cecc <flatcc_builder_create_offset_vector_direct@@Base+0x258>
   2cecc:	b	2cf44 <flatcc_builder_create_offset_vector_direct@@Base+0x2d0>
   2ced0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ced4:	movw	r1, #0
   2ced8:	cmp	r0, r1
   2cedc:	beq	2cf20 <flatcc_builder_create_offset_vector_direct@@Base+0x2ac>
   2cee0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cee4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2cee8:	add	r0, r0, r1
   2ceec:	ldrb	r0, [r0]
   2cef0:	cmp	r0, #0
   2cef4:	bne	2cefc <flatcc_builder_create_offset_vector_direct@@Base+0x288>
   2cef8:	b	2cf1c <flatcc_builder_create_offset_vector_direct@@Base+0x2a8>
   2cefc:	ldr	r0, [pc, #128]	; 2cf84 <flatcc_builder_create_offset_vector_direct@@Base+0x310>
   2cf00:	add	r0, pc, r0
   2cf04:	ldr	r1, [pc, #124]	; 2cf88 <flatcc_builder_create_offset_vector_direct@@Base+0x314>
   2cf08:	add	r1, pc, r1
   2cf0c:	ldr	r2, [pc, #120]	; 2cf8c <flatcc_builder_create_offset_vector_direct@@Base+0x318>
   2cf10:	add	r3, pc, r2
   2cf14:	movw	r2, #1461	; 0x5b5
   2cf18:	bl	14f08 <__assert_fail@plt>
   2cf1c:	b	2cf40 <flatcc_builder_create_offset_vector_direct@@Base+0x2cc>
   2cf20:	ldr	r0, [pc, #80]	; 2cf78 <flatcc_builder_create_offset_vector_direct@@Base+0x304>
   2cf24:	add	r0, pc, r0
   2cf28:	ldr	r1, [pc, #76]	; 2cf7c <flatcc_builder_create_offset_vector_direct@@Base+0x308>
   2cf2c:	add	r1, pc, r1
   2cf30:	ldr	r2, [pc, #72]	; 2cf80 <flatcc_builder_create_offset_vector_direct@@Base+0x30c>
   2cf34:	add	r3, pc, r2
   2cf38:	movw	r2, #1463	; 0x5b7
   2cf3c:	bl	14f08 <__assert_fail@plt>
   2cf40:	b	2cf44 <flatcc_builder_create_offset_vector_direct@@Base+0x2d0>
   2cf44:	b	2cf48 <flatcc_builder_create_offset_vector_direct@@Base+0x2d4>
   2cf48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2cf4c:	add	r0, r0, #1
   2cf50:	str	r0, [fp, #-44]	; 0xffffffd4
   2cf54:	b	2ce1c <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   2cf58:	ldr	r0, [fp, #-8]
   2cf5c:	add	r1, sp, #4
   2cf60:	bl	29d6c <flatcc_builder_embed_buffer@@Base+0x39c>
   2cf64:	str	r0, [fp, #-4]
   2cf68:	ldr	r0, [fp, #-4]
   2cf6c:	mov	sp, fp
   2cf70:	pop	{fp, pc}
   2cf74:	svccc	0x00ffffff
   2cf78:	andeq	sp, r1, sp, ror #24
   2cf7c:	andeq	ip, r1, r8, lsr #21
   2cf80:	andeq	sp, r1, pc, asr ip
   2cf84:	andeq	sp, r1, r6, lsl sp
   2cf88:	andeq	ip, r1, ip, asr #21
   2cf8c:	andeq	sp, r1, r3, lsl #25
   2cf90:	ldrdeq	sp, [r1], -r9
   2cf94:	andeq	ip, r1, r0, lsr #22
   2cf98:	ldrdeq	sp, [r1], -r7
   2cf9c:	andeq	r0, r3, r4, lsl #5

0002cfa0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2cfa0:	push	{fp, lr}
   2cfa4:	mov	fp, sp
   2cfa8:	sub	sp, sp, #16
   2cfac:	str	r0, [sp, #8]
   2cfb0:	str	r1, [sp, #4]
   2cfb4:	ldr	r0, [sp, #8]
   2cfb8:	ldr	r0, [r0, #32]
   2cfbc:	ldrh	r0, [r0, #14]
   2cfc0:	cmp	r0, #5
   2cfc4:	bne	2cfcc <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   2cfc8:	b	2cfec <flatcc_builder_end_offset_vector_for_unions@@Base+0x4c>
   2cfcc:	ldr	r0, [pc, #112]	; 2d044 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa4>
   2cfd0:	add	r0, pc, r0
   2cfd4:	ldr	r1, [pc, #108]	; 2d048 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa8>
   2cfd8:	add	r1, pc, r1
   2cfdc:	ldr	r2, [pc, #104]	; 2d04c <flatcc_builder_end_offset_vector_for_unions@@Base+0xac>
   2cfe0:	add	r3, pc, r2
   2cfe4:	movw	r2, #1493	; 0x5d5
   2cfe8:	bl	14f08 <__assert_fail@plt>
   2cfec:	ldr	r0, [sp, #8]
   2cff0:	ldr	r1, [sp, #8]
   2cff4:	ldr	r1, [r1, #16]
   2cff8:	ldr	r2, [sp, #8]
   2cffc:	ldr	r2, [r2, #32]
   2d000:	ldr	r2, [r2, #20]
   2d004:	ldr	r3, [sp, #4]
   2d008:	bl	2cca8 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   2d00c:	str	r0, [sp]
   2d010:	movw	r1, #0
   2d014:	cmp	r1, r0
   2d018:	bne	2d028 <flatcc_builder_end_offset_vector_for_unions@@Base+0x88>
   2d01c:	movw	r0, #0
   2d020:	str	r0, [fp, #-4]
   2d024:	b	2d038 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
   2d028:	ldr	r0, [sp, #8]
   2d02c:	bl	2a86c <flatcc_builder_end_buffer@@Base+0x170>
   2d030:	ldr	r0, [sp]
   2d034:	str	r0, [fp, #-4]
   2d038:	ldr	r0, [fp, #-4]
   2d03c:	mov	sp, fp
   2d040:	pop	{fp, pc}
   2d044:	andeq	ip, r1, r7, lsr lr
   2d048:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   2d04c:	andeq	sp, r1, r0, lsr #9

0002d050 <flatcc_builder_offset_vector_edit@@Base>:
   2d050:	sub	sp, sp, #4
   2d054:	str	r0, [sp]
   2d058:	ldr	r0, [sp]
   2d05c:	ldr	r0, [r0, #16]
   2d060:	add	sp, sp, #4
   2d064:	bx	lr

0002d068 <flatcc_builder_offset_vector_count@@Base>:
   2d068:	sub	sp, sp, #4
   2d06c:	str	r0, [sp]
   2d070:	ldr	r0, [sp]
   2d074:	ldr	r0, [r0, #32]
   2d078:	ldr	r0, [r0, #20]
   2d07c:	add	sp, sp, #4
   2d080:	bx	lr

0002d084 <flatcc_builder_table_add_union@@Base>:
   2d084:	push	{fp, lr}
   2d088:	mov	fp, sp
   2d08c:	sub	sp, sp, #32
   2d090:	str	r2, [fp, #-12]
   2d094:	str	r3, [fp, #-8]
   2d098:	str	r0, [sp, #16]
   2d09c:	str	r1, [sp, #12]
   2d0a0:	ldr	r0, [sp, #16]
   2d0a4:	ldr	r0, [r0, #32]
   2d0a8:	ldrh	r0, [r0, #14]
   2d0ac:	cmp	r0, #3
   2d0b0:	bne	2d0b8 <flatcc_builder_table_add_union@@Base+0x34>
   2d0b4:	b	2d0d8 <flatcc_builder_table_add_union@@Base+0x54>
   2d0b8:	ldr	r0, [pc, #388]	; 2d244 <flatcc_builder_table_add_union@@Base+0x1c0>
   2d0bc:	add	r0, pc, r0
   2d0c0:	ldr	r1, [pc, #384]	; 2d248 <flatcc_builder_table_add_union@@Base+0x1c4>
   2d0c4:	add	r1, pc, r1
   2d0c8:	ldr	r2, [pc, #380]	; 2d24c <flatcc_builder_table_add_union@@Base+0x1c8>
   2d0cc:	add	r3, pc, r2
   2d0d0:	movw	r2, #1518	; 0x5ee
   2d0d4:	bl	14f08 <__assert_fail@plt>
   2d0d8:	ldrb	r0, [fp, #-12]
   2d0dc:	cmp	r0, #0
   2d0e0:	bne	2d138 <flatcc_builder_table_add_union@@Base+0xb4>
   2d0e4:	ldr	r0, [fp, #-8]
   2d0e8:	cmp	r0, #0
   2d0ec:	beq	2d138 <flatcc_builder_table_add_union@@Base+0xb4>
   2d0f0:	ldrb	r0, [fp, #-12]
   2d0f4:	cmp	r0, #0
   2d0f8:	bne	2d108 <flatcc_builder_table_add_union@@Base+0x84>
   2d0fc:	ldr	r0, [fp, #-8]
   2d100:	cmp	r0, #0
   2d104:	bne	2d10c <flatcc_builder_table_add_union@@Base+0x88>
   2d108:	b	2d12c <flatcc_builder_table_add_union@@Base+0xa8>
   2d10c:	ldr	r0, [pc, #316]	; 2d250 <flatcc_builder_table_add_union@@Base+0x1cc>
   2d110:	add	r0, pc, r0
   2d114:	ldr	r1, [pc, #312]	; 2d254 <flatcc_builder_table_add_union@@Base+0x1d0>
   2d118:	add	r1, pc, r1
   2d11c:	ldr	r2, [pc, #308]	; 2d258 <flatcc_builder_table_add_union@@Base+0x1d4>
   2d120:	add	r3, pc, r2
   2d124:	movw	r2, #1519	; 0x5ef
   2d128:	bl	14f08 <__assert_fail@plt>
   2d12c:	mvn	r0, #0
   2d130:	str	r0, [fp, #-4]
   2d134:	b	2d238 <flatcc_builder_table_add_union@@Base+0x1b4>
   2d138:	ldr	r0, [fp, #-8]
   2d13c:	cmp	r0, #0
   2d140:	beq	2d1b0 <flatcc_builder_table_add_union@@Base+0x12c>
   2d144:	ldr	r0, [sp, #16]
   2d148:	ldr	r1, [sp, #12]
   2d14c:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   2d150:	str	r0, [sp, #8]
   2d154:	ldr	r0, [sp, #8]
   2d158:	movw	r1, #0
   2d15c:	cmp	r0, r1
   2d160:	bne	2d1a4 <flatcc_builder_table_add_union@@Base+0x120>
   2d164:	ldr	r0, [sp, #8]
   2d168:	movw	r1, #0
   2d16c:	cmp	r0, r1
   2d170:	beq	2d178 <flatcc_builder_table_add_union@@Base+0xf4>
   2d174:	b	2d198 <flatcc_builder_table_add_union@@Base+0x114>
   2d178:	ldr	r0, [pc, #220]	; 2d25c <flatcc_builder_table_add_union@@Base+0x1d8>
   2d17c:	add	r0, pc, r0
   2d180:	ldr	r1, [pc, #216]	; 2d260 <flatcc_builder_table_add_union@@Base+0x1dc>
   2d184:	add	r1, pc, r1
   2d188:	ldr	r2, [pc, #212]	; 2d264 <flatcc_builder_table_add_union@@Base+0x1e0>
   2d18c:	add	r3, pc, r2
   2d190:	movw	r2, #1522	; 0x5f2
   2d194:	bl	14f08 <__assert_fail@plt>
   2d198:	mvn	r0, #0
   2d19c:	str	r0, [fp, #-4]
   2d1a0:	b	2d238 <flatcc_builder_table_add_union@@Base+0x1b4>
   2d1a4:	ldr	r0, [fp, #-8]
   2d1a8:	ldr	r1, [sp, #8]
   2d1ac:	str	r0, [r1]
   2d1b0:	ldr	r0, [sp, #16]
   2d1b4:	ldr	r1, [sp, #12]
   2d1b8:	sub	r1, r1, #1
   2d1bc:	movw	r2, #1
   2d1c0:	movw	r3, #1
   2d1c4:	uxth	r3, r3
   2d1c8:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   2d1cc:	str	r0, [sp, #4]
   2d1d0:	ldr	r0, [sp, #4]
   2d1d4:	movw	r1, #0
   2d1d8:	cmp	r0, r1
   2d1dc:	bne	2d220 <flatcc_builder_table_add_union@@Base+0x19c>
   2d1e0:	ldr	r0, [sp, #4]
   2d1e4:	movw	r1, #0
   2d1e8:	cmp	r0, r1
   2d1ec:	beq	2d1f4 <flatcc_builder_table_add_union@@Base+0x170>
   2d1f0:	b	2d214 <flatcc_builder_table_add_union@@Base+0x190>
   2d1f4:	ldr	r0, [pc, #108]	; 2d268 <flatcc_builder_table_add_union@@Base+0x1e4>
   2d1f8:	add	r0, pc, r0
   2d1fc:	ldr	r1, [pc, #104]	; 2d26c <flatcc_builder_table_add_union@@Base+0x1e8>
   2d200:	add	r1, pc, r1
   2d204:	ldr	r2, [pc, #100]	; 2d270 <flatcc_builder_table_add_union@@Base+0x1ec>
   2d208:	add	r3, pc, r2
   2d20c:	movw	r2, #1526	; 0x5f6
   2d210:	bl	14f08 <__assert_fail@plt>
   2d214:	mvn	r0, #0
   2d218:	str	r0, [fp, #-4]
   2d21c:	b	2d238 <flatcc_builder_table_add_union@@Base+0x1b4>
   2d220:	ldrb	r0, [fp, #-12]
   2d224:	bl	2d50c <flatcc_builder_table_add@@Base+0x168>
   2d228:	ldr	lr, [sp, #4]
   2d22c:	strb	r0, [lr]
   2d230:	movw	r0, #0
   2d234:	str	r0, [fp, #-4]
   2d238:	ldr	r0, [fp, #-4]
   2d23c:	mov	sp, fp
   2d240:	pop	{fp, pc}
   2d244:	andeq	sp, r1, r4, asr #2
   2d248:	andeq	ip, r1, r0, lsl r9
   2d24c:	andeq	sp, r1, r6, lsr #8
   2d250:	andeq	sp, r1, sl, lsr r4
   2d254:			; <UNDEFINED> instruction: 0x0001c8bc
   2d258:	ldrdeq	sp, [r1], -r2
   2d25c:	strdeq	sp, [r1], -r0
   2d260:	andeq	ip, r1, r0, asr r8
   2d264:	andeq	sp, r1, r6, ror #6
   2d268:	andeq	sp, r1, lr, ror r3
   2d26c:	ldrdeq	ip, [r1], -r4
   2d270:	andeq	sp, r1, sl, ror #5

0002d274 <flatcc_builder_table_add_offset@@Base>:
   2d274:	push	{fp, lr}
   2d278:	mov	fp, sp
   2d27c:	sub	sp, sp, #8
   2d280:	str	r0, [sp, #4]
   2d284:	str	r1, [sp]
   2d288:	ldr	r0, [sp, #4]
   2d28c:	ldr	r0, [r0, #32]
   2d290:	ldrh	r0, [r0, #14]
   2d294:	cmp	r0, #3
   2d298:	bne	2d2a0 <flatcc_builder_table_add_offset@@Base+0x2c>
   2d29c:	b	2d2c0 <flatcc_builder_table_add_offset@@Base+0x4c>
   2d2a0:	ldr	r0, [pc, #212]	; 2d37c <flatcc_builder_table_add_offset@@Base+0x108>
   2d2a4:	add	r0, pc, r0
   2d2a8:	ldr	r1, [pc, #208]	; 2d380 <flatcc_builder_table_add_offset@@Base+0x10c>
   2d2ac:	add	r1, pc, r1
   2d2b0:	ldr	r2, [pc, #204]	; 2d384 <flatcc_builder_table_add_offset@@Base+0x110>
   2d2b4:	add	r3, pc, r2
   2d2b8:	movw	r2, #1811	; 0x713
   2d2bc:	bl	14f08 <__assert_fail@plt>
   2d2c0:	ldr	r0, [sp]
   2d2c4:	cmp	r0, #0
   2d2c8:	blt	2d2e0 <flatcc_builder_table_add_offset@@Base+0x6c>
   2d2cc:	ldr	r0, [sp]
   2d2d0:	movw	r1, #32764	; 0x7ffc
   2d2d4:	cmp	r0, r1
   2d2d8:	bgt	2d2e0 <flatcc_builder_table_add_offset@@Base+0x6c>
   2d2dc:	b	2d300 <flatcc_builder_table_add_offset@@Base+0x8c>
   2d2e0:	ldr	r0, [pc, #160]	; 2d388 <flatcc_builder_table_add_offset@@Base+0x114>
   2d2e4:	add	r0, pc, r0
   2d2e8:	ldr	r1, [pc, #156]	; 2d38c <flatcc_builder_table_add_offset@@Base+0x118>
   2d2ec:	add	r1, pc, r1
   2d2f0:	ldr	r2, [pc, #152]	; 2d390 <flatcc_builder_table_add_offset@@Base+0x11c>
   2d2f4:	add	r3, pc, r2
   2d2f8:	movw	r2, #1812	; 0x714
   2d2fc:	bl	14f08 <__assert_fail@plt>
   2d300:	ldr	r0, [sp, #4]
   2d304:	ldr	r0, [r0, #4]
   2d308:	ldr	r1, [sp]
   2d30c:	add	r0, r0, r1, lsl #1
   2d310:	ldrh	r0, [r0]
   2d314:	cmp	r0, #0
   2d318:	beq	2d33c <flatcc_builder_table_add_offset@@Base+0xc8>
   2d31c:	ldr	r0, [pc, #116]	; 2d398 <flatcc_builder_table_add_offset@@Base+0x124>
   2d320:	add	r0, pc, r0
   2d324:	ldr	r1, [pc, #112]	; 2d39c <flatcc_builder_table_add_offset@@Base+0x128>
   2d328:	add	r1, pc, r1
   2d32c:	ldr	r2, [pc, #108]	; 2d3a0 <flatcc_builder_table_add_offset@@Base+0x12c>
   2d330:	add	r3, pc, r2
   2d334:	movw	r2, #1819	; 0x71b
   2d338:	bl	14f08 <__assert_fail@plt>
   2d33c:	ldr	r0, [pc, #80]	; 2d394 <flatcc_builder_table_add_offset@@Base+0x120>
   2d340:	ldr	r1, [sp]
   2d344:	ldr	r2, [sp, #4]
   2d348:	ldr	r2, [r2, #12]
   2d34c:	eor	r1, r1, r2
   2d350:	mul	r1, r1, r0
   2d354:	eor	r1, r1, #4
   2d358:	mul	r0, r1, r0
   2d35c:	ldr	r1, [sp, #4]
   2d360:	str	r0, [r1, #12]
   2d364:	ldr	r0, [sp, #4]
   2d368:	ldr	r1, [sp]
   2d36c:	uxth	r1, r1
   2d370:	bl	2e334 <flatcc_builder_table_add_copy@@Base+0x64>
   2d374:	mov	sp, fp
   2d378:	pop	{fp, pc}
   2d37c:	andeq	ip, r1, ip, asr pc
   2d380:	andeq	ip, r1, r8, lsr #14
   2d384:	andeq	sp, r1, r0, asr #12
   2d388:	muleq	r1, r0, r5
   2d38c:	andeq	ip, r1, r8, ror #13
   2d390:	andeq	sp, r1, r0, lsl #12
   2d394:			; <UNDEFINED> instruction: 0x9e3779b1
   2d398:	andeq	sp, r1, r1, ror r8
   2d39c:	andeq	ip, r1, ip, lsr #13
   2d3a0:	andeq	sp, r1, r4, asr #11

0002d3a4 <flatcc_builder_table_add@@Base>:
   2d3a4:	push	{fp, lr}
   2d3a8:	mov	fp, sp
   2d3ac:	sub	sp, sp, #16
   2d3b0:	str	r0, [fp, #-4]
   2d3b4:	str	r1, [sp, #8]
   2d3b8:	str	r2, [sp, #4]
   2d3bc:	strh	r3, [sp, #2]
   2d3c0:	ldr	r0, [fp, #-4]
   2d3c4:	ldr	r0, [r0, #32]
   2d3c8:	ldrh	r0, [r0, #14]
   2d3cc:	cmp	r0, #3
   2d3d0:	bne	2d3d8 <flatcc_builder_table_add@@Base+0x34>
   2d3d4:	b	2d3f8 <flatcc_builder_table_add@@Base+0x54>
   2d3d8:	ldr	r0, [pc, #260]	; 2d4e4 <flatcc_builder_table_add@@Base+0x140>
   2d3dc:	add	r0, pc, r0
   2d3e0:	ldr	r1, [pc, #256]	; 2d4e8 <flatcc_builder_table_add@@Base+0x144>
   2d3e4:	add	r1, pc, r1
   2d3e8:	ldr	r2, [pc, #252]	; 2d4ec <flatcc_builder_table_add@@Base+0x148>
   2d3ec:	add	r3, pc, r2
   2d3f0:	movw	r2, #1773	; 0x6ed
   2d3f4:	bl	14f08 <__assert_fail@plt>
   2d3f8:	ldr	r0, [sp, #8]
   2d3fc:	cmp	r0, #0
   2d400:	blt	2d418 <flatcc_builder_table_add@@Base+0x74>
   2d404:	ldr	r0, [sp, #8]
   2d408:	movw	r1, #32764	; 0x7ffc
   2d40c:	cmp	r0, r1
   2d410:	bgt	2d418 <flatcc_builder_table_add@@Base+0x74>
   2d414:	b	2d438 <flatcc_builder_table_add@@Base+0x94>
   2d418:	ldr	r0, [pc, #208]	; 2d4f0 <flatcc_builder_table_add@@Base+0x14c>
   2d41c:	add	r0, pc, r0
   2d420:	ldr	r1, [pc, #204]	; 2d4f4 <flatcc_builder_table_add@@Base+0x150>
   2d424:	add	r1, pc, r1
   2d428:	ldr	r2, [pc, #200]	; 2d4f8 <flatcc_builder_table_add@@Base+0x154>
   2d42c:	add	r3, pc, r2
   2d430:	movw	r2, #1774	; 0x6ee
   2d434:	bl	14f08 <__assert_fail@plt>
   2d438:	ldrh	r0, [sp, #2]
   2d43c:	ldr	r1, [fp, #-4]
   2d440:	ldrh	r1, [r1, #130]	; 0x82
   2d444:	cmp	r0, r1
   2d448:	ble	2d458 <flatcc_builder_table_add@@Base+0xb4>
   2d44c:	ldrh	r0, [sp, #2]
   2d450:	ldr	r1, [fp, #-4]
   2d454:	strh	r0, [r1, #130]	; 0x82
   2d458:	ldr	r0, [fp, #-4]
   2d45c:	ldr	r0, [r0, #4]
   2d460:	ldr	r1, [sp, #8]
   2d464:	add	r0, r0, r1, lsl #1
   2d468:	ldrh	r0, [r0]
   2d46c:	cmp	r0, #0
   2d470:	beq	2d494 <flatcc_builder_table_add@@Base+0xf0>
   2d474:	ldr	r0, [pc, #132]	; 2d500 <flatcc_builder_table_add@@Base+0x15c>
   2d478:	add	r0, pc, r0
   2d47c:	ldr	r1, [pc, #128]	; 2d504 <flatcc_builder_table_add@@Base+0x160>
   2d480:	add	r1, pc, r1
   2d484:	ldr	r2, [pc, #124]	; 2d508 <flatcc_builder_table_add@@Base+0x164>
   2d488:	add	r3, pc, r2
   2d48c:	movw	r2, #1784	; 0x6f8
   2d490:	bl	14f08 <__assert_fail@plt>
   2d494:	ldr	r0, [pc, #96]	; 2d4fc <flatcc_builder_table_add@@Base+0x158>
   2d498:	ldr	r1, [sp, #8]
   2d49c:	ldr	r2, [fp, #-4]
   2d4a0:	ldr	r2, [r2, #12]
   2d4a4:	eor	r1, r1, r2
   2d4a8:	mul	r1, r1, r0
   2d4ac:	ldr	r2, [sp, #4]
   2d4b0:	eor	r1, r1, r2
   2d4b4:	mul	r0, r1, r0
   2d4b8:	ldr	r1, [fp, #-4]
   2d4bc:	str	r0, [r1, #12]
   2d4c0:	ldr	r0, [fp, #-4]
   2d4c4:	ldr	r1, [sp, #4]
   2d4c8:	ldrh	r2, [sp, #2]
   2d4cc:	ldr	r3, [sp, #8]
   2d4d0:	uxth	r2, r2
   2d4d4:	uxth	r3, r3
   2d4d8:	bl	2e150 <flatcc_builder_string_len@@Base+0x1c>
   2d4dc:	mov	sp, fp
   2d4e0:	pop	{fp, pc}
   2d4e4:	andeq	ip, r1, r4, lsr #28
   2d4e8:	strdeq	ip, [r1], -r0
   2d4ec:	andeq	sp, r1, lr, lsr r4
   2d4f0:	andeq	sp, r1, r8, asr r4
   2d4f4:			; <UNDEFINED> instruction: 0x0001c5b0
   2d4f8:	strdeq	sp, [r1], -lr
   2d4fc:			; <UNDEFINED> instruction: 0x9e3779b1
   2d500:	andeq	sp, r1, r9, lsl r7
   2d504:	andeq	ip, r1, r4, asr r5
   2d508:	andeq	sp, r1, r2, lsr #7
   2d50c:	sub	sp, sp, #4
   2d510:	strb	r0, [sp, #3]
   2d514:	ldrb	r0, [sp, #3]
   2d518:	add	sp, sp, #4
   2d51c:	bx	lr

0002d520 <flatcc_builder_table_add_union_vector@@Base>:
   2d520:	push	{fp, lr}
   2d524:	mov	fp, sp
   2d528:	sub	sp, sp, #24
   2d52c:	str	r2, [sp, #12]
   2d530:	str	r3, [sp, #16]
   2d534:	str	r0, [sp, #8]
   2d538:	str	r1, [sp, #4]
   2d53c:	ldr	r0, [sp, #8]
   2d540:	ldr	r0, [r0, #32]
   2d544:	ldrh	r0, [r0, #14]
   2d548:	cmp	r0, #3
   2d54c:	bne	2d554 <flatcc_builder_table_add_union_vector@@Base+0x34>
   2d550:	b	2d574 <flatcc_builder_table_add_union_vector@@Base+0x54>
   2d554:	ldr	r0, [pc, #420]	; 2d700 <flatcc_builder_table_add_union_vector@@Base+0x1e0>
   2d558:	add	r0, pc, r0
   2d55c:	ldr	r1, [pc, #416]	; 2d704 <flatcc_builder_table_add_union_vector@@Base+0x1e4>
   2d560:	add	r1, pc, r1
   2d564:	ldr	r2, [pc, #412]	; 2d708 <flatcc_builder_table_add_union_vector@@Base+0x1e8>
   2d568:	add	r3, pc, r2
   2d56c:	movw	r2, #1536	; 0x600
   2d570:	bl	14f08 <__assert_fail@plt>
   2d574:	ldr	r0, [sp, #12]
   2d578:	cmp	r0, #0
   2d57c:	movw	r0, #0
   2d580:	moveq	r0, #1
   2d584:	and	r0, r0, #1
   2d588:	ldr	r1, [sp, #16]
   2d58c:	cmp	r1, #0
   2d590:	movw	r1, #0
   2d594:	moveq	r1, #1
   2d598:	and	r1, r1, #1
   2d59c:	cmp	r0, r1
   2d5a0:	beq	2d604 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   2d5a4:	ldr	r0, [sp, #12]
   2d5a8:	cmp	r0, #0
   2d5ac:	movw	r0, #0
   2d5b0:	moveq	r0, #1
   2d5b4:	and	r0, r0, #1
   2d5b8:	ldr	r1, [sp, #16]
   2d5bc:	cmp	r1, #0
   2d5c0:	movw	r1, #0
   2d5c4:	moveq	r1, #1
   2d5c8:	and	r1, r1, #1
   2d5cc:	cmp	r0, r1
   2d5d0:	bne	2d5d8 <flatcc_builder_table_add_union_vector@@Base+0xb8>
   2d5d4:	b	2d5f8 <flatcc_builder_table_add_union_vector@@Base+0xd8>
   2d5d8:	ldr	r0, [pc, #300]	; 2d70c <flatcc_builder_table_add_union_vector@@Base+0x1ec>
   2d5dc:	add	r0, pc, r0
   2d5e0:	ldr	r1, [pc, #296]	; 2d710 <flatcc_builder_table_add_union_vector@@Base+0x1f0>
   2d5e4:	add	r1, pc, r1
   2d5e8:	ldr	r2, [pc, #292]	; 2d714 <flatcc_builder_table_add_union_vector@@Base+0x1f4>
   2d5ec:	add	r3, pc, r2
   2d5f0:	movw	r2, #1537	; 0x601
   2d5f4:	bl	14f08 <__assert_fail@plt>
   2d5f8:	mvn	r0, #0
   2d5fc:	str	r0, [fp, #-4]
   2d600:	b	2d6f4 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   2d604:	ldr	r0, [sp, #12]
   2d608:	cmp	r0, #0
   2d60c:	beq	2d6ec <flatcc_builder_table_add_union_vector@@Base+0x1cc>
   2d610:	ldr	r0, [sp, #8]
   2d614:	ldr	r1, [sp, #4]
   2d618:	sub	r1, r1, #1
   2d61c:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   2d620:	str	r0, [sp]
   2d624:	ldr	r0, [sp]
   2d628:	movw	r1, #0
   2d62c:	cmp	r0, r1
   2d630:	bne	2d674 <flatcc_builder_table_add_union_vector@@Base+0x154>
   2d634:	ldr	r0, [sp]
   2d638:	movw	r1, #0
   2d63c:	cmp	r0, r1
   2d640:	beq	2d648 <flatcc_builder_table_add_union_vector@@Base+0x128>
   2d644:	b	2d668 <flatcc_builder_table_add_union_vector@@Base+0x148>
   2d648:	ldr	r0, [pc, #200]	; 2d718 <flatcc_builder_table_add_union_vector@@Base+0x1f8>
   2d64c:	add	r0, pc, r0
   2d650:	ldr	r1, [pc, #196]	; 2d71c <flatcc_builder_table_add_union_vector@@Base+0x1fc>
   2d654:	add	r1, pc, r1
   2d658:	ldr	r2, [pc, #192]	; 2d720 <flatcc_builder_table_add_union_vector@@Base+0x200>
   2d65c:	add	r3, pc, r2
   2d660:	movw	r2, #1540	; 0x604
   2d664:	bl	14f08 <__assert_fail@plt>
   2d668:	mvn	r0, #0
   2d66c:	str	r0, [fp, #-4]
   2d670:	b	2d6f4 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   2d674:	ldr	r0, [sp, #12]
   2d678:	ldr	r1, [sp]
   2d67c:	str	r0, [r1]
   2d680:	ldr	r0, [sp, #8]
   2d684:	ldr	r1, [sp, #4]
   2d688:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   2d68c:	str	r0, [sp]
   2d690:	ldr	r0, [sp]
   2d694:	movw	r1, #0
   2d698:	cmp	r0, r1
   2d69c:	bne	2d6e0 <flatcc_builder_table_add_union_vector@@Base+0x1c0>
   2d6a0:	ldr	r0, [sp]
   2d6a4:	movw	r1, #0
   2d6a8:	cmp	r0, r1
   2d6ac:	beq	2d6b4 <flatcc_builder_table_add_union_vector@@Base+0x194>
   2d6b0:	b	2d6d4 <flatcc_builder_table_add_union_vector@@Base+0x1b4>
   2d6b4:	ldr	r0, [pc, #104]	; 2d724 <flatcc_builder_table_add_union_vector@@Base+0x204>
   2d6b8:	add	r0, pc, r0
   2d6bc:	ldr	r1, [pc, #100]	; 2d728 <flatcc_builder_table_add_union_vector@@Base+0x208>
   2d6c0:	add	r1, pc, r1
   2d6c4:	ldr	r2, [pc, #96]	; 2d72c <flatcc_builder_table_add_union_vector@@Base+0x20c>
   2d6c8:	add	r3, pc, r2
   2d6cc:	movw	r2, #1544	; 0x608
   2d6d0:	bl	14f08 <__assert_fail@plt>
   2d6d4:	mvn	r0, #0
   2d6d8:	str	r0, [fp, #-4]
   2d6dc:	b	2d6f4 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   2d6e0:	ldr	r0, [sp, #16]
   2d6e4:	ldr	r1, [sp]
   2d6e8:	str	r0, [r1]
   2d6ec:	movw	r0, #0
   2d6f0:	str	r0, [fp, #-4]
   2d6f4:	ldr	r0, [fp, #-4]
   2d6f8:	mov	sp, fp
   2d6fc:	pop	{fp, pc}
   2d700:	andeq	ip, r1, r8, lsr #25
   2d704:	andeq	ip, r1, r4, ror r4
   2d708:	andeq	sp, r1, sl, lsl r0
   2d70c:	andeq	sp, r1, r9
   2d710:	strdeq	ip, [r1], -r0
   2d714:	muleq	r1, r6, pc	; <UNPREDICTABLE>
   2d718:	andeq	ip, r1, r0, lsr #30
   2d71c:	andeq	ip, r1, r0, lsl #7
   2d720:	andeq	ip, r1, r6, lsr #30
   2d724:			; <UNDEFINED> instruction: 0x0001ceb4
   2d728:	andeq	ip, r1, r4, lsl r3
   2d72c:			; <UNDEFINED> instruction: 0x0001ceba

0002d730 <flatcc_builder_create_union_vector@@Base>:
   2d730:	push	{fp, lr}
   2d734:	mov	fp, sp
   2d738:	sub	sp, sp, #48	; 0x30
   2d73c:	str	r1, [fp, #-4]
   2d740:	str	r2, [fp, #-8]
   2d744:	str	r3, [fp, #-12]
   2d748:	mov	r1, r0
   2d74c:	str	r0, [sp, #12]
   2d750:	mov	r0, r1
   2d754:	movw	r1, #0
   2d758:	and	r1, r1, #255	; 0xff
   2d75c:	movw	r2, #8
   2d760:	bl	14ec0 <memset@plt>
   2d764:	ldr	r0, [fp, #-4]
   2d768:	bl	2b758 <flatcc_builder_start_offset_vector@@Base>
   2d76c:	cmp	r0, #0
   2d770:	beq	2d778 <flatcc_builder_create_union_vector@@Base+0x48>
   2d774:	b	2d85c <flatcc_builder_create_union_vector@@Base+0x12c>
   2d778:	ldr	r0, [fp, #-4]
   2d77c:	ldr	r1, [fp, #-12]
   2d780:	bl	2aeec <flatcc_builder_extend_offset_vector@@Base>
   2d784:	movw	r1, #0
   2d788:	cmp	r1, r0
   2d78c:	bne	2d794 <flatcc_builder_create_union_vector@@Base+0x64>
   2d790:	b	2d85c <flatcc_builder_create_union_vector@@Base+0x12c>
   2d794:	ldr	r0, [fp, #-4]
   2d798:	ldr	r1, [fp, #-12]
   2d79c:	mov	r2, r1
   2d7a0:	str	r2, [sp, #8]
   2d7a4:	bl	2aa24 <flatcc_builder_start_struct@@Base+0xfc>
   2d7a8:	str	r0, [fp, #-16]
   2d7ac:	movw	r1, #0
   2d7b0:	cmp	r1, r0
   2d7b4:	bne	2d7bc <flatcc_builder_create_union_vector@@Base+0x8c>
   2d7b8:	b	2d85c <flatcc_builder_create_union_vector@@Base+0x12c>
   2d7bc:	ldr	r0, [fp, #-4]
   2d7c0:	bl	2d050 <flatcc_builder_offset_vector_edit@@Base>
   2d7c4:	str	r0, [fp, #-20]	; 0xffffffec
   2d7c8:	movw	r0, #0
   2d7cc:	str	r0, [sp, #24]
   2d7d0:	ldr	r0, [sp, #24]
   2d7d4:	ldr	r1, [fp, #-12]
   2d7d8:	cmp	r0, r1
   2d7dc:	bcs	2d820 <flatcc_builder_create_union_vector@@Base+0xf0>
   2d7e0:	ldr	r0, [fp, #-8]
   2d7e4:	ldr	r1, [sp, #24]
   2d7e8:	ldrb	r0, [r0, r1, lsl #3]
   2d7ec:	ldr	r2, [fp, #-16]
   2d7f0:	strb	r0, [r2, r1]
   2d7f4:	ldr	r0, [fp, #-8]
   2d7f8:	ldr	r1, [sp, #24]
   2d7fc:	add	r0, r0, r1, lsl #3
   2d800:	ldr	r0, [r0, #4]
   2d804:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d808:	add	r1, r2, r1, lsl #2
   2d80c:	str	r0, [r1]
   2d810:	ldr	r0, [sp, #24]
   2d814:	add	r0, r0, #1
   2d818:	str	r0, [sp, #24]
   2d81c:	b	2d7d0 <flatcc_builder_create_union_vector@@Base+0xa0>
   2d820:	ldr	r1, [fp, #-4]
   2d824:	ldr	r2, [fp, #-16]
   2d828:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d82c:	ldr	r0, [fp, #-12]
   2d830:	mov	ip, sp
   2d834:	str	r0, [ip]
   2d838:	add	r0, sp, #16
   2d83c:	bl	2d864 <flatcc_builder_create_union_vector_direct@@Base>
   2d840:	ldr	r0, [sp, #16]
   2d844:	ldr	r1, [sp, #12]
   2d848:	str	r0, [r1]
   2d84c:	ldr	r0, [sp, #20]
   2d850:	str	r0, [r1, #4]
   2d854:	ldr	r0, [fp, #-4]
   2d858:	bl	2a86c <flatcc_builder_end_buffer@@Base+0x170>
   2d85c:	mov	sp, fp
   2d860:	pop	{fp, pc}

0002d864 <flatcc_builder_create_union_vector_direct@@Base>:
   2d864:	push	{fp, lr}
   2d868:	mov	fp, sp
   2d86c:	sub	sp, sp, #32
   2d870:	ldr	ip, [fp, #8]
   2d874:	str	r1, [fp, #-4]
   2d878:	str	r2, [fp, #-8]
   2d87c:	str	r3, [fp, #-12]
   2d880:	mov	r1, r0
   2d884:	str	r0, [sp, #16]
   2d888:	mov	r0, r1
   2d88c:	movw	r1, #0
   2d890:	and	r1, r1, #255	; 0xff
   2d894:	movw	r2, #8
   2d898:	str	ip, [sp, #12]
   2d89c:	bl	14ec0 <memset@plt>
   2d8a0:	ldr	r0, [fp, #-4]
   2d8a4:	ldr	r1, [fp, #-12]
   2d8a8:	ldr	r2, [fp, #8]
   2d8ac:	ldr	r3, [fp, #-8]
   2d8b0:	bl	2cca8 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   2d8b4:	ldr	r1, [sp, #16]
   2d8b8:	str	r0, [r1, #4]
   2d8bc:	movw	r2, #0
   2d8c0:	cmp	r2, r0
   2d8c4:	bne	2d8cc <flatcc_builder_create_union_vector_direct@@Base+0x68>
   2d8c8:	b	2d910 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   2d8cc:	ldr	r0, [fp, #-4]
   2d8d0:	ldr	r1, [fp, #-8]
   2d8d4:	ldr	r2, [fp, #8]
   2d8d8:	movw	r3, #1
   2d8dc:	movw	ip, #1
   2d8e0:	uxth	ip, ip
   2d8e4:	str	ip, [sp]
   2d8e8:	mvn	ip, #0
   2d8ec:	str	ip, [sp, #4]
   2d8f0:	bl	2c998 <flatcc_builder_create_vector@@Base>
   2d8f4:	ldr	r1, [sp, #16]
   2d8f8:	str	r0, [r1]
   2d8fc:	movw	r2, #0
   2d900:	cmp	r2, r0
   2d904:	bne	2d90c <flatcc_builder_create_union_vector_direct@@Base+0xa8>
   2d908:	b	2d910 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   2d90c:	b	2d910 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   2d910:	mov	sp, fp
   2d914:	pop	{fp, pc}

0002d918 <flatcc_builder_start_union_vector@@Base>:
   2d918:	push	{fp, lr}
   2d91c:	mov	fp, sp
   2d920:	sub	sp, sp, #8
   2d924:	str	r0, [sp]
   2d928:	ldr	r0, [sp]
   2d92c:	movw	r1, #4
   2d930:	uxth	r1, r1
   2d934:	bl	2a530 <flatcc_builder_start_buffer@@Base+0x178>
   2d938:	cmp	r0, #0
   2d93c:	beq	2d94c <flatcc_builder_start_union_vector@@Base+0x34>
   2d940:	mvn	r0, #0
   2d944:	str	r0, [sp, #4]
   2d948:	b	2d990 <flatcc_builder_start_union_vector@@Base+0x78>
   2d94c:	ldr	r0, [sp]
   2d950:	ldr	r0, [r0, #32]
   2d954:	movw	r1, #8
   2d958:	str	r1, [r0, #16]
   2d95c:	ldr	r0, [sp]
   2d960:	ldr	r0, [r0, #32]
   2d964:	movw	r1, #0
   2d968:	str	r1, [r0, #20]
   2d96c:	ldr	r0, [sp]
   2d970:	ldr	r0, [r0, #32]
   2d974:	movw	r1, #7
   2d978:	strh	r1, [r0, #14]
   2d97c:	ldr	r0, [sp]
   2d980:	mvn	r1, #3
   2d984:	bl	2a998 <flatcc_builder_start_struct@@Base+0x70>
   2d988:	movw	r0, #0
   2d98c:	str	r0, [sp, #4]
   2d990:	ldr	r0, [sp, #4]
   2d994:	mov	sp, fp
   2d998:	pop	{fp, pc}

0002d99c <flatcc_builder_end_union_vector@@Base>:
   2d99c:	push	{fp, lr}
   2d9a0:	mov	fp, sp
   2d9a4:	sub	sp, sp, #40	; 0x28
   2d9a8:	str	r1, [fp, #-4]
   2d9ac:	mov	r1, r0
   2d9b0:	str	r0, [sp, #4]
   2d9b4:	mov	r0, r1
   2d9b8:	movw	r1, #0
   2d9bc:	and	r1, r1, #255	; 0xff
   2d9c0:	movw	r2, #8
   2d9c4:	bl	14ec0 <memset@plt>
   2d9c8:	ldr	r0, [fp, #-4]
   2d9cc:	ldr	r0, [r0, #32]
   2d9d0:	ldrh	r0, [r0, #14]
   2d9d4:	cmp	r0, #7
   2d9d8:	bne	2d9e0 <flatcc_builder_end_union_vector@@Base+0x44>
   2d9dc:	b	2da00 <flatcc_builder_end_union_vector@@Base+0x64>
   2d9e0:	ldr	r0, [pc, #260]	; 2daec <flatcc_builder_end_union_vector@@Base+0x150>
   2d9e4:	add	r0, pc, r0
   2d9e8:	ldr	r1, [pc, #256]	; 2daf0 <flatcc_builder_end_union_vector@@Base+0x154>
   2d9ec:	add	r1, pc, r1
   2d9f0:	ldr	r2, [pc, #252]	; 2daf4 <flatcc_builder_end_union_vector@@Base+0x158>
   2d9f4:	add	r3, pc, r2
   2d9f8:	movw	r2, #1617	; 0x651
   2d9fc:	bl	14f08 <__assert_fail@plt>
   2da00:	ldr	r0, [fp, #-4]
   2da04:	bl	2daf8 <flatcc_builder_union_vector_count@@Base>
   2da08:	str	r0, [sp, #16]
   2da0c:	ldr	r0, [fp, #-4]
   2da10:	ldr	lr, [sp, #16]
   2da14:	movw	r1, #5
   2da18:	mul	r1, lr, r1
   2da1c:	bl	2aa24 <flatcc_builder_start_struct@@Base+0xfc>
   2da20:	str	r0, [fp, #-16]
   2da24:	movw	r1, #0
   2da28:	cmp	r1, r0
   2da2c:	bne	2da34 <flatcc_builder_end_union_vector@@Base+0x98>
   2da30:	b	2dae4 <flatcc_builder_end_union_vector@@Base+0x148>
   2da34:	ldr	r0, [fp, #-16]
   2da38:	ldr	r1, [sp, #16]
   2da3c:	add	r0, r0, r1, lsl #2
   2da40:	str	r0, [fp, #-8]
   2da44:	ldr	r0, [fp, #-4]
   2da48:	bl	2db14 <flatcc_builder_union_vector_edit@@Base>
   2da4c:	str	r0, [fp, #-12]
   2da50:	movw	r0, #0
   2da54:	str	r0, [sp, #20]
   2da58:	ldr	r0, [sp, #20]
   2da5c:	ldr	r1, [sp, #16]
   2da60:	cmp	r0, r1
   2da64:	bcs	2daa8 <flatcc_builder_end_union_vector@@Base+0x10c>
   2da68:	ldr	r0, [fp, #-12]
   2da6c:	ldr	r1, [sp, #20]
   2da70:	ldrb	r0, [r0, r1, lsl #3]
   2da74:	ldr	r2, [fp, #-8]
   2da78:	strb	r0, [r2, r1]
   2da7c:	ldr	r0, [fp, #-12]
   2da80:	ldr	r1, [sp, #20]
   2da84:	add	r0, r0, r1, lsl #3
   2da88:	ldr	r0, [r0, #4]
   2da8c:	ldr	r2, [fp, #-16]
   2da90:	add	r1, r2, r1, lsl #2
   2da94:	str	r0, [r1]
   2da98:	ldr	r0, [sp, #20]
   2da9c:	add	r0, r0, #1
   2daa0:	str	r0, [sp, #20]
   2daa4:	b	2da58 <flatcc_builder_end_union_vector@@Base+0xbc>
   2daa8:	ldr	r1, [fp, #-4]
   2daac:	ldr	r2, [fp, #-8]
   2dab0:	ldr	r3, [fp, #-16]
   2dab4:	ldr	r0, [sp, #16]
   2dab8:	mov	ip, sp
   2dabc:	str	r0, [ip]
   2dac0:	add	r0, sp, #8
   2dac4:	bl	2d864 <flatcc_builder_create_union_vector_direct@@Base>
   2dac8:	ldr	r0, [sp, #8]
   2dacc:	ldr	r1, [sp, #4]
   2dad0:	str	r0, [r1]
   2dad4:	ldr	r0, [sp, #12]
   2dad8:	str	r0, [r1, #4]
   2dadc:	ldr	r0, [fp, #-4]
   2dae0:	bl	2a86c <flatcc_builder_end_buffer@@Base+0x170>
   2dae4:	mov	sp, fp
   2dae8:	pop	{fp, pc}
   2daec:	andeq	ip, r1, r9, lsr #24
   2daf0:	andeq	fp, r1, r8, ror #31
   2daf4:	andeq	ip, r1, fp, asr #24

0002daf8 <flatcc_builder_union_vector_count@@Base>:
   2daf8:	sub	sp, sp, #4
   2dafc:	str	r0, [sp]
   2db00:	ldr	r0, [sp]
   2db04:	ldr	r0, [r0, #32]
   2db08:	ldr	r0, [r0, #20]
   2db0c:	add	sp, sp, #4
   2db10:	bx	lr

0002db14 <flatcc_builder_union_vector_edit@@Base>:
   2db14:	sub	sp, sp, #4
   2db18:	str	r0, [sp]
   2db1c:	ldr	r0, [sp]
   2db20:	ldr	r0, [r0, #16]
   2db24:	add	sp, sp, #4
   2db28:	bx	lr

0002db2c <flatcc_builder_extend_union_vector@@Base>:
   2db2c:	push	{fp, lr}
   2db30:	mov	fp, sp
   2db34:	sub	sp, sp, #16
   2db38:	ldr	r2, [pc, #68]	; 2db84 <flatcc_builder_extend_union_vector@@Base+0x58>
   2db3c:	str	r0, [sp, #8]
   2db40:	str	r1, [sp, #4]
   2db44:	ldr	r0, [sp, #8]
   2db48:	ldr	r1, [sp, #4]
   2db4c:	bl	2abe8 <flatcc_builder_extend_vector@@Base+0x6c>
   2db50:	cmp	r0, #0
   2db54:	beq	2db64 <flatcc_builder_extend_union_vector@@Base+0x38>
   2db58:	movw	r0, #0
   2db5c:	str	r0, [fp, #-4]
   2db60:	b	2db78 <flatcc_builder_extend_union_vector@@Base+0x4c>
   2db64:	ldr	r0, [sp, #8]
   2db68:	ldr	r1, [sp, #4]
   2db6c:	lsl	r1, r1, #3
   2db70:	bl	2aa24 <flatcc_builder_start_struct@@Base+0xfc>
   2db74:	str	r0, [fp, #-4]
   2db78:	ldr	r0, [fp, #-4]
   2db7c:	mov	sp, fp
   2db80:	pop	{fp, pc}
   2db84:	svcne	0x00ffffff

0002db88 <flatcc_builder_truncate_union_vector@@Base>:
   2db88:	push	{fp, lr}
   2db8c:	mov	fp, sp
   2db90:	sub	sp, sp, #16
   2db94:	str	r0, [sp, #8]
   2db98:	str	r1, [sp, #4]
   2db9c:	ldr	r0, [sp, #8]
   2dba0:	ldr	r0, [r0, #32]
   2dba4:	ldrh	r0, [r0, #14]
   2dba8:	cmp	r0, #7
   2dbac:	bne	2dbb4 <flatcc_builder_truncate_union_vector@@Base+0x2c>
   2dbb0:	b	2dbd4 <flatcc_builder_truncate_union_vector@@Base+0x4c>
   2dbb4:	ldr	r0, [pc, #192]	; 2dc7c <flatcc_builder_truncate_union_vector@@Base+0xf4>
   2dbb8:	add	r0, pc, r0
   2dbbc:	ldr	r1, [pc, #188]	; 2dc80 <flatcc_builder_truncate_union_vector@@Base+0xf8>
   2dbc0:	add	r1, pc, r1
   2dbc4:	ldr	r2, [pc, #184]	; 2dc84 <flatcc_builder_truncate_union_vector@@Base+0xfc>
   2dbc8:	add	r3, pc, r2
   2dbcc:	movw	r2, #1665	; 0x681
   2dbd0:	bl	14f08 <__assert_fail@plt>
   2dbd4:	ldr	r0, [sp, #8]
   2dbd8:	ldr	r0, [r0, #32]
   2dbdc:	ldr	r0, [r0, #20]
   2dbe0:	ldr	r1, [sp, #4]
   2dbe4:	cmp	r0, r1
   2dbe8:	bcs	2dc34 <flatcc_builder_truncate_union_vector@@Base+0xac>
   2dbec:	ldr	r0, [sp, #8]
   2dbf0:	ldr	r0, [r0, #32]
   2dbf4:	ldr	r0, [r0, #20]
   2dbf8:	ldr	r1, [sp, #4]
   2dbfc:	cmp	r0, r1
   2dc00:	bcc	2dc08 <flatcc_builder_truncate_union_vector@@Base+0x80>
   2dc04:	b	2dc28 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   2dc08:	ldr	r0, [pc, #120]	; 2dc88 <flatcc_builder_truncate_union_vector@@Base+0x100>
   2dc0c:	add	r0, pc, r0
   2dc10:	ldr	r1, [pc, #116]	; 2dc8c <flatcc_builder_truncate_union_vector@@Base+0x104>
   2dc14:	add	r1, pc, r1
   2dc18:	ldr	r2, [pc, #112]	; 2dc90 <flatcc_builder_truncate_union_vector@@Base+0x108>
   2dc1c:	add	r3, pc, r2
   2dc20:	movw	r2, #1666	; 0x682
   2dc24:	bl	14f08 <__assert_fail@plt>
   2dc28:	mvn	r0, #0
   2dc2c:	str	r0, [fp, #-4]
   2dc30:	b	2dc70 <flatcc_builder_truncate_union_vector@@Base+0xe8>
   2dc34:	ldr	r0, [sp, #4]
   2dc38:	ldr	r1, [sp, #8]
   2dc3c:	ldr	r1, [r1, #32]
   2dc40:	ldr	r2, [r1, #20]
   2dc44:	sub	r0, r2, r0
   2dc48:	str	r0, [r1, #20]
   2dc4c:	ldr	r0, [sp, #8]
   2dc50:	ldr	r1, [sp, #8]
   2dc54:	ldr	r1, [r1, #32]
   2dc58:	ldr	r1, [r1, #16]
   2dc5c:	ldr	r2, [sp, #4]
   2dc60:	mul	r1, r1, r2
   2dc64:	bl	2b41c <flatcc_builder_truncate_vector@@Base+0x10c>
   2dc68:	movw	r0, #0
   2dc6c:	str	r0, [fp, #-4]
   2dc70:	ldr	r0, [fp, #-4]
   2dc74:	mov	sp, fp
   2dc78:	pop	{fp, pc}
   2dc7c:	andeq	ip, r1, r5, asr sl
   2dc80:	andeq	fp, r1, r4, lsl lr
   2dc84:	andeq	ip, r1, sl, asr #21
   2dc88:	andeq	ip, r1, r5, ror #8
   2dc8c:	andeq	fp, r1, r0, asr #27
   2dc90:	andeq	ip, r1, r6, ror sl

0002dc94 <flatcc_builder_union_vector_push@@Base>:
   2dc94:	push	{fp, lr}
   2dc98:	mov	fp, sp
   2dc9c:	sub	sp, sp, #24
   2dca0:	str	r1, [sp, #12]
   2dca4:	str	r2, [sp, #16]
   2dca8:	str	r0, [sp, #8]
   2dcac:	ldr	r0, [sp, #8]
   2dcb0:	ldr	r0, [r0, #32]
   2dcb4:	ldrh	r0, [r0, #14]
   2dcb8:	cmp	r0, #7
   2dcbc:	bne	2dcc4 <flatcc_builder_union_vector_push@@Base+0x30>
   2dcc0:	b	2dce4 <flatcc_builder_union_vector_push@@Base+0x50>
   2dcc4:	ldr	r0, [pc, #160]	; 2dd6c <flatcc_builder_union_vector_push@@Base+0xd8>
   2dcc8:	add	r0, pc, r0
   2dccc:	ldr	r1, [pc, #156]	; 2dd70 <flatcc_builder_union_vector_push@@Base+0xdc>
   2dcd0:	add	r1, pc, r1
   2dcd4:	ldr	r2, [pc, #152]	; 2dd74 <flatcc_builder_union_vector_push@@Base+0xe0>
   2dcd8:	add	r3, pc, r2
   2dcdc:	movw	r2, #1677	; 0x68d
   2dce0:	bl	14f08 <__assert_fail@plt>
   2dce4:	ldr	r0, [pc, #140]	; 2dd78 <flatcc_builder_union_vector_push@@Base+0xe4>
   2dce8:	ldr	r1, [sp, #8]
   2dcec:	ldr	r1, [r1, #32]
   2dcf0:	ldr	r1, [r1, #20]
   2dcf4:	cmp	r1, r0
   2dcf8:	bne	2dd08 <flatcc_builder_union_vector_push@@Base+0x74>
   2dcfc:	movw	r0, #0
   2dd00:	str	r0, [fp, #-4]
   2dd04:	b	2dd60 <flatcc_builder_union_vector_push@@Base+0xcc>
   2dd08:	ldr	r0, [sp, #8]
   2dd0c:	ldr	r0, [r0, #32]
   2dd10:	ldr	r1, [r0, #20]
   2dd14:	add	r1, r1, #1
   2dd18:	str	r1, [r0, #20]
   2dd1c:	ldr	r0, [sp, #8]
   2dd20:	movw	r1, #8
   2dd24:	bl	2aa24 <flatcc_builder_start_struct@@Base+0xfc>
   2dd28:	str	r0, [sp, #4]
   2dd2c:	movw	r1, #0
   2dd30:	cmp	r1, r0
   2dd34:	bne	2dd44 <flatcc_builder_union_vector_push@@Base+0xb0>
   2dd38:	movw	r0, #0
   2dd3c:	str	r0, [fp, #-4]
   2dd40:	b	2dd60 <flatcc_builder_union_vector_push@@Base+0xcc>
   2dd44:	ldr	r0, [sp, #4]
   2dd48:	ldr	r1, [sp, #12]
   2dd4c:	str	r1, [r0]
   2dd50:	ldr	r1, [sp, #16]
   2dd54:	str	r1, [r0, #4]
   2dd58:	ldr	r0, [sp, #4]
   2dd5c:	str	r0, [fp, #-4]
   2dd60:	ldr	r0, [fp, #-4]
   2dd64:	mov	sp, fp
   2dd68:	pop	{fp, pc}
   2dd6c:	andeq	ip, r1, r5, asr #18
   2dd70:	andeq	fp, r1, r4, lsl #26
   2dd74:	strdeq	ip, [r1], -pc	; <UNPREDICTABLE>
   2dd78:	svcne	0x00ffffff

0002dd7c <flatcc_builder_append_union_vector@@Base>:
   2dd7c:	push	{fp, lr}
   2dd80:	mov	fp, sp
   2dd84:	sub	sp, sp, #16
   2dd88:	str	r0, [sp, #8]
   2dd8c:	str	r1, [sp, #4]
   2dd90:	str	r2, [sp]
   2dd94:	ldr	r0, [sp, #8]
   2dd98:	ldr	r0, [r0, #32]
   2dd9c:	ldrh	r0, [r0, #14]
   2dda0:	cmp	r0, #7
   2dda4:	bne	2ddac <flatcc_builder_append_union_vector@@Base+0x30>
   2dda8:	b	2ddcc <flatcc_builder_append_union_vector@@Base+0x50>
   2ddac:	ldr	r0, [pc, #96]	; 2de14 <flatcc_builder_append_union_vector@@Base+0x98>
   2ddb0:	add	r0, pc, r0
   2ddb4:	ldr	r1, [pc, #92]	; 2de18 <flatcc_builder_append_union_vector@@Base+0x9c>
   2ddb8:	add	r1, pc, r1
   2ddbc:	ldr	r2, [pc, #88]	; 2de1c <flatcc_builder_append_union_vector@@Base+0xa0>
   2ddc0:	add	r3, pc, r2
   2ddc4:	movw	r2, #1692	; 0x69c
   2ddc8:	bl	14f08 <__assert_fail@plt>
   2ddcc:	ldr	r2, [pc, #76]	; 2de20 <flatcc_builder_append_union_vector@@Base+0xa4>
   2ddd0:	ldr	r0, [sp, #8]
   2ddd4:	ldr	r1, [sp]
   2ddd8:	bl	2abe8 <flatcc_builder_extend_vector@@Base+0x6c>
   2dddc:	cmp	r0, #0
   2dde0:	beq	2ddf0 <flatcc_builder_append_union_vector@@Base+0x74>
   2dde4:	movw	r0, #0
   2dde8:	str	r0, [fp, #-4]
   2ddec:	b	2de08 <flatcc_builder_append_union_vector@@Base+0x8c>
   2ddf0:	ldr	r0, [sp, #8]
   2ddf4:	ldr	r1, [sp, #4]
   2ddf8:	ldr	r2, [sp]
   2ddfc:	lsl	r2, r2, #3
   2de00:	bl	2add0 <flatcc_builder_vector_push@@Base+0x110>
   2de04:	str	r0, [fp, #-4]
   2de08:	ldr	r0, [fp, #-4]
   2de0c:	mov	sp, fp
   2de10:	pop	{fp, pc}
   2de14:	andeq	ip, r1, sp, asr r8
   2de18:	andeq	fp, r1, ip, lsl ip
   2de1c:	andeq	ip, r1, r4, lsl #19
   2de20:	svcne	0x00ffffff

0002de24 <flatcc_builder_create_string@@Base>:
   2de24:	push	{fp, lr}
   2de28:	mov	fp, sp
   2de2c:	sub	sp, sp, #96	; 0x60
   2de30:	str	r0, [fp, #-8]
   2de34:	str	r1, [fp, #-12]
   2de38:	str	r2, [fp, #-16]
   2de3c:	ldr	r0, [fp, #-16]
   2de40:	cmn	r0, #1
   2de44:	bls	2de54 <flatcc_builder_create_string@@Base+0x30>
   2de48:	movw	r0, #0
   2de4c:	str	r0, [fp, #-4]
   2de50:	b	2df70 <flatcc_builder_create_string@@Base+0x14c>
   2de54:	ldr	r0, [fp, #-16]
   2de58:	bl	29d58 <flatcc_builder_embed_buffer@@Base+0x388>
   2de5c:	str	r0, [fp, #-24]	; 0xffffffe8
   2de60:	ldr	r0, [fp, #-8]
   2de64:	ldr	lr, [fp, #-16]
   2de68:	add	r1, lr, #1
   2de6c:	mov	r2, #4
   2de70:	bl	29d24 <flatcc_builder_embed_buffer@@Base+0x354>
   2de74:	add	r0, r0, #1
   2de78:	str	r0, [fp, #-20]	; 0xffffffec
   2de7c:	mov	r0, #0
   2de80:	str	r0, [sp]
   2de84:	str	r0, [sp, #4]
   2de88:	ldr	r0, [sp]
   2de8c:	add	r0, r0, #4
   2de90:	str	r0, [sp]
   2de94:	mov	r0, sp
   2de98:	add	r0, r0, #8
   2de9c:	ldr	r1, [sp, #4]
   2dea0:	sub	r2, fp, #24
   2dea4:	str	r2, [r0, r1, lsl #3]
   2dea8:	ldr	r1, [sp, #4]
   2deac:	add	r0, r0, r1, lsl #3
   2deb0:	movw	r1, #4
   2deb4:	str	r1, [r0, #4]
   2deb8:	ldr	r0, [sp, #4]
   2debc:	add	r0, r0, #1
   2dec0:	str	r0, [sp, #4]
   2dec4:	ldr	r0, [fp, #-16]
   2dec8:	cmp	r0, #0
   2decc:	bls	2df10 <flatcc_builder_create_string@@Base+0xec>
   2ded0:	ldr	r0, [fp, #-16]
   2ded4:	ldr	r1, [sp]
   2ded8:	add	r0, r1, r0
   2dedc:	str	r0, [sp]
   2dee0:	ldr	r0, [fp, #-12]
   2dee4:	mov	r1, sp
   2dee8:	add	r1, r1, #8
   2deec:	ldr	r2, [sp, #4]
   2def0:	str	r0, [r1, r2, lsl #3]
   2def4:	ldr	r0, [fp, #-16]
   2def8:	ldr	r2, [sp, #4]
   2defc:	add	r1, r1, r2, lsl #3
   2df00:	str	r0, [r1, #4]
   2df04:	ldr	r0, [sp, #4]
   2df08:	add	r0, r0, #1
   2df0c:	str	r0, [sp, #4]
   2df10:	ldr	r0, [fp, #-20]	; 0xffffffec
   2df14:	cmp	r0, #0
   2df18:	bls	2df60 <flatcc_builder_create_string@@Base+0x13c>
   2df1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2df20:	ldr	r1, [sp]
   2df24:	add	r0, r1, r0
   2df28:	str	r0, [sp]
   2df2c:	mov	r0, sp
   2df30:	add	r0, r0, #8
   2df34:	ldr	r1, [sp, #4]
   2df38:	ldr	r2, [pc, #60]	; 2df7c <flatcc_builder_create_string@@Base+0x158>
   2df3c:	ldr	r2, [pc, r2]
   2df40:	str	r2, [r0, r1, lsl #3]
   2df44:	ldr	r1, [fp, #-20]	; 0xffffffec
   2df48:	ldr	r2, [sp, #4]
   2df4c:	add	r0, r0, r2, lsl #3
   2df50:	str	r1, [r0, #4]
   2df54:	ldr	r0, [sp, #4]
   2df58:	add	r0, r0, #1
   2df5c:	str	r0, [sp, #4]
   2df60:	ldr	r0, [fp, #-8]
   2df64:	mov	r1, sp
   2df68:	bl	29d6c <flatcc_builder_embed_buffer@@Base+0x39c>
   2df6c:	str	r0, [fp, #-4]
   2df70:	ldr	r0, [fp, #-4]
   2df74:	mov	sp, fp
   2df78:	pop	{fp, pc}
   2df7c:	andeq	pc, r2, r4, lsr #2

0002df80 <flatcc_builder_create_string_str@@Base>:
   2df80:	push	{fp, lr}
   2df84:	mov	fp, sp
   2df88:	sub	sp, sp, #24
   2df8c:	str	r0, [fp, #-4]
   2df90:	str	r1, [fp, #-8]
   2df94:	ldr	r0, [fp, #-4]
   2df98:	ldr	r1, [fp, #-8]
   2df9c:	ldr	r2, [fp, #-8]
   2dfa0:	str	r0, [sp, #12]
   2dfa4:	mov	r0, r2
   2dfa8:	str	r1, [sp, #8]
   2dfac:	bl	14e9c <strlen@plt>
   2dfb0:	ldr	r1, [sp, #12]
   2dfb4:	str	r0, [sp, #4]
   2dfb8:	mov	r0, r1
   2dfbc:	ldr	r1, [sp, #8]
   2dfc0:	ldr	r2, [sp, #4]
   2dfc4:	bl	2de24 <flatcc_builder_create_string@@Base>
   2dfc8:	mov	sp, fp
   2dfcc:	pop	{fp, pc}

0002dfd0 <flatcc_builder_create_string_strn@@Base>:
   2dfd0:	push	{fp, lr}
   2dfd4:	mov	fp, sp
   2dfd8:	sub	sp, sp, #24
   2dfdc:	str	r0, [fp, #-4]
   2dfe0:	str	r1, [fp, #-8]
   2dfe4:	str	r2, [sp, #12]
   2dfe8:	ldr	r0, [fp, #-4]
   2dfec:	ldr	r1, [fp, #-8]
   2dff0:	ldr	r2, [fp, #-8]
   2dff4:	ldr	r3, [sp, #12]
   2dff8:	str	r0, [sp, #8]
   2dffc:	mov	r0, r2
   2e000:	str	r1, [sp, #4]
   2e004:	mov	r1, r3
   2e008:	bl	2b2b0 <flatcc_builder_append_string_strn@@Base+0x5c>
   2e00c:	ldr	r1, [sp, #8]
   2e010:	str	r0, [sp]
   2e014:	mov	r0, r1
   2e018:	ldr	r1, [sp, #4]
   2e01c:	ldr	r2, [sp]
   2e020:	bl	2de24 <flatcc_builder_create_string@@Base>
   2e024:	mov	sp, fp
   2e028:	pop	{fp, pc}

0002e02c <flatcc_builder_end_string@@Base>:
   2e02c:	push	{fp, lr}
   2e030:	mov	fp, sp
   2e034:	sub	sp, sp, #16
   2e038:	str	r0, [sp, #8]
   2e03c:	ldr	r0, [sp, #8]
   2e040:	ldr	r0, [r0, #32]
   2e044:	ldrh	r0, [r0, #14]
   2e048:	cmp	r0, #6
   2e04c:	bne	2e054 <flatcc_builder_end_string@@Base+0x28>
   2e050:	b	2e074 <flatcc_builder_end_string@@Base+0x48>
   2e054:	ldr	r0, [pc, #168]	; 2e104 <flatcc_builder_end_string@@Base+0xd8>
   2e058:	add	r0, pc, r0
   2e05c:	ldr	r1, [pc, #164]	; 2e108 <flatcc_builder_end_string@@Base+0xdc>
   2e060:	add	r1, pc, r1
   2e064:	ldr	r2, [pc, #160]	; 2e10c <flatcc_builder_end_string@@Base+0xe0>
   2e068:	add	r3, pc, r2
   2e06c:	movw	r2, #1732	; 0x6c4
   2e070:	bl	14f08 <__assert_fail@plt>
   2e074:	ldr	r0, [sp, #8]
   2e078:	ldr	r0, [r0, #32]
   2e07c:	ldr	r0, [r0, #20]
   2e080:	ldr	r1, [sp, #8]
   2e084:	ldr	r1, [r1, #20]
   2e088:	cmp	r0, r1
   2e08c:	bne	2e094 <flatcc_builder_end_string@@Base+0x68>
   2e090:	b	2e0b4 <flatcc_builder_end_string@@Base+0x88>
   2e094:	ldr	r0, [pc, #116]	; 2e110 <flatcc_builder_end_string@@Base+0xe4>
   2e098:	add	r0, pc, r0
   2e09c:	ldr	r1, [pc, #112]	; 2e114 <flatcc_builder_end_string@@Base+0xe8>
   2e0a0:	add	r1, pc, r1
   2e0a4:	ldr	r2, [pc, #108]	; 2e118 <flatcc_builder_end_string@@Base+0xec>
   2e0a8:	add	r3, pc, r2
   2e0ac:	movw	r2, #1733	; 0x6c5
   2e0b0:	bl	14f08 <__assert_fail@plt>
   2e0b4:	ldr	r0, [sp, #8]
   2e0b8:	ldr	r1, [sp, #8]
   2e0bc:	ldr	r1, [r1, #16]
   2e0c0:	ldr	r2, [sp, #8]
   2e0c4:	ldr	r2, [r2, #20]
   2e0c8:	bl	2de24 <flatcc_builder_create_string@@Base>
   2e0cc:	str	r0, [sp, #4]
   2e0d0:	movw	r1, #0
   2e0d4:	cmp	r1, r0
   2e0d8:	bne	2e0e8 <flatcc_builder_end_string@@Base+0xbc>
   2e0dc:	movw	r0, #0
   2e0e0:	str	r0, [fp, #-4]
   2e0e4:	b	2e0f8 <flatcc_builder_end_string@@Base+0xcc>
   2e0e8:	ldr	r0, [sp, #8]
   2e0ec:	bl	2a86c <flatcc_builder_end_buffer@@Base+0x170>
   2e0f0:	ldr	r0, [sp, #4]
   2e0f4:	str	r0, [fp, #-4]
   2e0f8:	ldr	r0, [fp, #-4]
   2e0fc:	mov	sp, fp
   2e100:	pop	{fp, pc}
   2e104:			; <UNDEFINED> instruction: 0x0001beb8
   2e108:	andeq	fp, r1, r4, ror r9
   2e10c:	andeq	ip, r1, fp, asr r7
   2e110:	andeq	ip, r1, lr, ror #14
   2e114:	andeq	fp, r1, r4, lsr r9
   2e118:	andeq	ip, r1, fp, lsl r7

0002e11c <flatcc_builder_string_edit@@Base>:
   2e11c:	sub	sp, sp, #4
   2e120:	str	r0, [sp]
   2e124:	ldr	r0, [sp]
   2e128:	ldr	r0, [r0, #16]
   2e12c:	add	sp, sp, #4
   2e130:	bx	lr

0002e134 <flatcc_builder_string_len@@Base>:
   2e134:	sub	sp, sp, #4
   2e138:	str	r0, [sp]
   2e13c:	ldr	r0, [sp]
   2e140:	ldr	r0, [r0, #32]
   2e144:	ldr	r0, [r0, #20]
   2e148:	add	sp, sp, #4
   2e14c:	bx	lr
   2e150:	push	{fp, lr}
   2e154:	mov	fp, sp
   2e158:	sub	sp, sp, #24
   2e15c:	str	r0, [fp, #-8]
   2e160:	str	r1, [sp, #12]
   2e164:	strh	r2, [sp, #10]
   2e168:	strh	r3, [sp, #8]
   2e16c:	ldr	r0, [fp, #-8]
   2e170:	ldr	r0, [r0, #20]
   2e174:	ldrh	r1, [sp, #10]
   2e178:	add	r0, r0, r1
   2e17c:	sub	r0, r0, #1
   2e180:	ldrh	r1, [sp, #10]
   2e184:	sub	r1, r1, #1
   2e188:	mvn	r2, #0
   2e18c:	eor	r1, r1, r2
   2e190:	and	r0, r0, r1
   2e194:	str	r0, [sp, #4]
   2e198:	ldr	r0, [sp, #4]
   2e19c:	ldr	r1, [sp, #12]
   2e1a0:	add	r0, r0, r1
   2e1a4:	ldr	r1, [fp, #-8]
   2e1a8:	str	r0, [r1, #20]
   2e1ac:	ldr	r1, [fp, #-8]
   2e1b0:	ldr	r1, [r1, #24]
   2e1b4:	cmp	r0, r1
   2e1b8:	bcc	2e1ec <flatcc_builder_string_len@@Base+0xb8>
   2e1bc:	ldr	r0, [fp, #-8]
   2e1c0:	ldr	r1, [fp, #-8]
   2e1c4:	ldr	r1, [r1, #20]
   2e1c8:	add	r1, r1, #1
   2e1cc:	movw	r2, #65532	; 0xfffc
   2e1d0:	bl	2eb94 <flatcc_builder_get_emit_context@@Base+0x40>
   2e1d4:	cmp	r0, #0
   2e1d8:	beq	2e1e8 <flatcc_builder_string_len@@Base+0xb4>
   2e1dc:	movw	r0, #0
   2e1e0:	str	r0, [fp, #-4]
   2e1e4:	b	2e240 <flatcc_builder_string_len@@Base+0x10c>
   2e1e8:	b	2e1ec <flatcc_builder_string_len@@Base+0xb8>
   2e1ec:	ldr	r0, [sp, #4]
   2e1f0:	add	r0, r0, #4
   2e1f4:	ldr	r1, [fp, #-8]
   2e1f8:	ldr	r1, [r1, #4]
   2e1fc:	ldrh	r2, [sp, #8]
   2e200:	add	r1, r1, r2, lsl #1
   2e204:	strh	r0, [r1]
   2e208:	ldrh	r0, [sp, #8]
   2e20c:	ldr	r1, [fp, #-8]
   2e210:	ldrh	r1, [r1, #8]
   2e214:	cmp	r0, r1
   2e218:	blt	2e22c <flatcc_builder_string_len@@Base+0xf8>
   2e21c:	ldrh	r0, [sp, #8]
   2e220:	add	r0, r0, #1
   2e224:	ldr	r1, [fp, #-8]
   2e228:	strh	r0, [r1, #8]
   2e22c:	ldr	r0, [fp, #-8]
   2e230:	ldr	r0, [r0, #16]
   2e234:	ldr	r1, [sp, #4]
   2e238:	add	r0, r0, r1
   2e23c:	str	r0, [fp, #-4]
   2e240:	ldr	r0, [fp, #-4]
   2e244:	mov	sp, fp
   2e248:	pop	{fp, pc}

0002e24c <flatcc_builder_table_edit@@Base>:
   2e24c:	push	{fp, lr}
   2e250:	mov	fp, sp
   2e254:	sub	sp, sp, #8
   2e258:	str	r0, [sp, #4]
   2e25c:	str	r1, [sp]
   2e260:	ldr	r0, [sp, #4]
   2e264:	ldr	r0, [r0, #32]
   2e268:	ldrh	r0, [r0, #14]
   2e26c:	cmp	r0, #3
   2e270:	bne	2e278 <flatcc_builder_table_edit@@Base+0x2c>
   2e274:	b	2e298 <flatcc_builder_table_edit@@Base+0x4c>
   2e278:	ldr	r0, [pc, #68]	; 2e2c4 <flatcc_builder_table_edit@@Base+0x78>
   2e27c:	add	r0, pc, r0
   2e280:	ldr	r1, [pc, #64]	; 2e2c8 <flatcc_builder_table_edit@@Base+0x7c>
   2e284:	add	r1, pc, r1
   2e288:	ldr	r2, [pc, #60]	; 2e2cc <flatcc_builder_table_edit@@Base+0x80>
   2e28c:	add	r3, pc, r2
   2e290:	movw	r2, #1794	; 0x702
   2e294:	bl	14f08 <__assert_fail@plt>
   2e298:	ldr	r0, [sp, #4]
   2e29c:	ldr	r0, [r0, #16]
   2e2a0:	ldr	r1, [sp, #4]
   2e2a4:	ldr	r1, [r1, #20]
   2e2a8:	add	r0, r0, r1
   2e2ac:	ldr	r1, [sp]
   2e2b0:	movw	r2, #0
   2e2b4:	sub	r1, r2, r1
   2e2b8:	add	r0, r0, r1
   2e2bc:	mov	sp, fp
   2e2c0:	pop	{fp, pc}
   2e2c4:	andeq	fp, r1, r4, lsl #31
   2e2c8:	andeq	fp, r1, r0, asr r7
   2e2cc:	andeq	ip, r1, ip, lsr #12

0002e2d0 <flatcc_builder_table_add_copy@@Base>:
   2e2d0:	push	{fp, lr}
   2e2d4:	mov	fp, sp
   2e2d8:	sub	sp, sp, #24
   2e2dc:	ldr	ip, [fp, #8]
   2e2e0:	str	r0, [fp, #-4]
   2e2e4:	str	r1, [fp, #-8]
   2e2e8:	str	r2, [sp, #12]
   2e2ec:	str	r3, [sp, #8]
   2e2f0:	strh	ip, [sp, #6]
   2e2f4:	ldr	r0, [fp, #-4]
   2e2f8:	ldr	r1, [fp, #-8]
   2e2fc:	ldr	r2, [sp, #8]
   2e300:	ldrh	r3, [sp, #6]
   2e304:	bl	2d3a4 <flatcc_builder_table_add@@Base>
   2e308:	str	r0, [sp]
   2e30c:	movw	r1, #0
   2e310:	cmp	r0, r1
   2e314:	beq	2e328 <flatcc_builder_table_add_copy@@Base+0x58>
   2e318:	ldr	r0, [sp]
   2e31c:	ldr	r1, [sp, #12]
   2e320:	ldr	r2, [sp, #8]
   2e324:	bl	14e30 <memcpy@plt>
   2e328:	ldr	r0, [sp]
   2e32c:	mov	sp, fp
   2e330:	pop	{fp, pc}
   2e334:	push	{fp, lr}
   2e338:	mov	fp, sp
   2e33c:	sub	sp, sp, #16
   2e340:	str	r0, [sp, #8]
   2e344:	strh	r1, [sp, #6]
   2e348:	ldr	r0, [sp, #8]
   2e34c:	ldr	r0, [r0, #20]
   2e350:	add	r0, r0, #4
   2e354:	sub	r0, r0, #1
   2e358:	mvn	r1, #3
   2e35c:	and	r0, r0, r1
   2e360:	str	r0, [sp]
   2e364:	ldr	r0, [sp]
   2e368:	add	r0, r0, #4
   2e36c:	ldr	r1, [sp, #8]
   2e370:	str	r0, [r1, #20]
   2e374:	ldr	r1, [sp, #8]
   2e378:	ldr	r1, [r1, #24]
   2e37c:	cmp	r0, r1
   2e380:	bls	2e3b0 <flatcc_builder_table_add_copy@@Base+0xe0>
   2e384:	ldr	r0, [sp, #8]
   2e388:	ldr	r1, [sp, #8]
   2e38c:	ldr	r1, [r1, #20]
   2e390:	movw	r2, #65532	; 0xfffc
   2e394:	bl	2eb94 <flatcc_builder_get_emit_context@@Base+0x40>
   2e398:	cmp	r0, #0
   2e39c:	beq	2e3ac <flatcc_builder_table_add_copy@@Base+0xdc>
   2e3a0:	movw	r0, #0
   2e3a4:	str	r0, [fp, #-4]
   2e3a8:	b	2e41c <flatcc_builder_table_add_copy@@Base+0x14c>
   2e3ac:	b	2e3b0 <flatcc_builder_table_add_copy@@Base+0xe0>
   2e3b0:	ldr	r0, [sp]
   2e3b4:	add	r0, r0, #4
   2e3b8:	ldr	r1, [sp, #8]
   2e3bc:	ldr	r1, [r1, #4]
   2e3c0:	ldrh	r2, [sp, #6]
   2e3c4:	add	r1, r1, r2, lsl #1
   2e3c8:	strh	r0, [r1]
   2e3cc:	ldrh	r0, [sp, #6]
   2e3d0:	ldr	r1, [sp, #8]
   2e3d4:	ldrh	r1, [r1, #8]
   2e3d8:	cmp	r0, r1
   2e3dc:	blt	2e3f0 <flatcc_builder_table_add_copy@@Base+0x120>
   2e3e0:	ldrh	r0, [sp, #6]
   2e3e4:	add	r0, r0, #1
   2e3e8:	ldr	r1, [sp, #8]
   2e3ec:	strh	r0, [r1, #8]
   2e3f0:	ldr	r0, [sp]
   2e3f4:	ldr	r1, [sp, #8]
   2e3f8:	ldr	r2, [r1]
   2e3fc:	add	r3, r2, #2
   2e400:	str	r3, [r1]
   2e404:	strh	r0, [r2]
   2e408:	ldr	r0, [sp, #8]
   2e40c:	ldr	r0, [r0, #16]
   2e410:	ldr	r1, [sp]
   2e414:	add	r0, r0, r1
   2e418:	str	r0, [fp, #-4]
   2e41c:	ldr	r0, [fp, #-4]
   2e420:	mov	sp, fp
   2e424:	pop	{fp, pc}

0002e428 <flatcc_builder_push_buffer_alignment@@Base>:
   2e428:	sub	sp, sp, #8
   2e42c:	str	r0, [sp, #4]
   2e430:	ldr	r0, [sp, #4]
   2e434:	ldrh	r0, [r0, #128]	; 0x80
   2e438:	strh	r0, [sp, #2]
   2e43c:	ldr	r0, [sp, #4]
   2e440:	movw	r1, #4
   2e444:	strh	r1, [r0, #128]	; 0x80
   2e448:	ldrh	r0, [sp, #2]
   2e44c:	add	sp, sp, #8
   2e450:	bx	lr

0002e454 <flatcc_builder_pop_buffer_alignment@@Base>:
   2e454:	push	{fp, lr}
   2e458:	mov	fp, sp
   2e45c:	sub	sp, sp, #8
   2e460:	str	r0, [sp, #4]
   2e464:	strh	r1, [sp, #2]
   2e468:	ldr	r0, [sp, #4]
   2e46c:	ldrh	r1, [sp, #2]
   2e470:	bl	2a238 <flatcc_builder_create_buffer@@Base+0x3a8>
   2e474:	mov	sp, fp
   2e478:	pop	{fp, pc}

0002e47c <flatcc_builder_get_buffer_alignment@@Base>:
   2e47c:	sub	sp, sp, #4
   2e480:	str	r0, [sp]
   2e484:	ldr	r0, [sp]
   2e488:	ldrh	r0, [r0, #128]	; 0x80
   2e48c:	add	sp, sp, #4
   2e490:	bx	lr

0002e494 <flatcc_builder_set_vtable_clustering@@Base>:
   2e494:	sub	sp, sp, #8
   2e498:	str	r0, [sp, #4]
   2e49c:	str	r1, [sp]
   2e4a0:	ldr	r0, [sp]
   2e4a4:	cmp	r0, #0
   2e4a8:	movw	r0, #0
   2e4ac:	movne	r0, #1
   2e4b0:	mvn	r1, #0
   2e4b4:	eor	r0, r0, r1
   2e4b8:	and	r0, r0, #1
   2e4bc:	ldr	r1, [sp, #4]
   2e4c0:	str	r0, [r1, #180]	; 0xb4
   2e4c4:	add	sp, sp, #8
   2e4c8:	bx	lr

0002e4cc <flatcc_builder_set_block_align@@Base>:
   2e4cc:	sub	sp, sp, #8
   2e4d0:	str	r0, [sp, #4]
   2e4d4:	strh	r1, [sp, #2]
   2e4d8:	ldrh	r0, [sp, #2]
   2e4dc:	ldr	r1, [sp, #4]
   2e4e0:	strh	r0, [r1, #132]	; 0x84
   2e4e4:	add	sp, sp, #8
   2e4e8:	bx	lr

0002e4ec <flatcc_builder_get_level@@Base>:
   2e4ec:	sub	sp, sp, #4
   2e4f0:	str	r0, [sp]
   2e4f4:	ldr	r0, [sp]
   2e4f8:	ldr	r0, [r0, #156]	; 0x9c
   2e4fc:	add	sp, sp, #4
   2e500:	bx	lr

0002e504 <flatcc_builder_set_max_level@@Base>:
   2e504:	sub	sp, sp, #8
   2e508:	str	r0, [sp, #4]
   2e50c:	str	r1, [sp]
   2e510:	ldr	r0, [sp]
   2e514:	ldr	r1, [sp, #4]
   2e518:	str	r0, [r1, #176]	; 0xb0
   2e51c:	ldr	r0, [sp, #4]
   2e520:	ldr	r0, [r0, #160]	; 0xa0
   2e524:	ldr	r1, [sp, #4]
   2e528:	ldr	r1, [r1, #176]	; 0xb0
   2e52c:	cmp	r0, r1
   2e530:	bge	2e544 <flatcc_builder_set_max_level@@Base+0x40>
   2e534:	ldr	r0, [sp, #4]
   2e538:	ldr	r0, [r0, #176]	; 0xb0
   2e53c:	ldr	r1, [sp, #4]
   2e540:	str	r0, [r1, #160]	; 0xa0
   2e544:	add	sp, sp, #8
   2e548:	bx	lr

0002e54c <flatcc_builder_get_buffer_size@@Base>:
   2e54c:	sub	sp, sp, #4
   2e550:	str	r0, [sp]
   2e554:	ldr	r0, [sp]
   2e558:	ldr	r0, [r0, #140]	; 0x8c
   2e55c:	ldr	r1, [sp]
   2e560:	ldr	r1, [r1, #136]	; 0x88
   2e564:	sub	r0, r0, r1
   2e568:	add	sp, sp, #4
   2e56c:	bx	lr

0002e570 <flatcc_builder_get_buffer_start@@Base>:
   2e570:	sub	sp, sp, #4
   2e574:	str	r0, [sp]
   2e578:	ldr	r0, [sp]
   2e57c:	ldr	r0, [r0, #136]	; 0x88
   2e580:	add	sp, sp, #4
   2e584:	bx	lr

0002e588 <flatcc_builder_get_buffer_end@@Base>:
   2e588:	sub	sp, sp, #4
   2e58c:	str	r0, [sp]
   2e590:	ldr	r0, [sp]
   2e594:	ldr	r0, [r0, #140]	; 0x8c
   2e598:	add	sp, sp, #4
   2e59c:	bx	lr

0002e5a0 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2e5a0:	sub	sp, sp, #8
   2e5a4:	str	r0, [sp, #4]
   2e5a8:	str	r1, [sp]
   2e5ac:	ldr	r0, [sp]
   2e5b0:	ldr	r1, [sp, #4]
   2e5b4:	str	r0, [r1, #172]	; 0xac
   2e5b8:	add	sp, sp, #8
   2e5bc:	bx	lr

0002e5c0 <flatcc_builder_set_identifier@@Base>:
   2e5c0:	sub	sp, sp, #16
   2e5c4:	str	r0, [sp, #12]
   2e5c8:	str	r1, [sp, #8]
   2e5cc:	ldr	r0, [sp, #12]
   2e5d0:	add	r0, r0, #168	; 0xa8
   2e5d4:	ldr	r1, [sp, #8]
   2e5d8:	movw	r2, #0
   2e5dc:	cmp	r1, r2
   2e5e0:	str	r0, [sp, #4]
   2e5e4:	beq	2e5f4 <flatcc_builder_set_identifier@@Base+0x34>
   2e5e8:	ldr	r0, [sp, #8]
   2e5ec:	str	r0, [sp]
   2e5f0:	b	2e604 <flatcc_builder_set_identifier@@Base+0x44>
   2e5f4:	ldr	r0, [pc, #56]	; 2e634 <flatcc_builder_set_identifier@@Base+0x74>
   2e5f8:	ldr	r0, [pc, r0]
   2e5fc:	str	r0, [sp]
   2e600:	b	2e604 <flatcc_builder_set_identifier@@Base+0x44>
   2e604:	ldr	r0, [sp]
   2e608:	ldrb	r1, [r0]
   2e60c:	ldr	r2, [sp, #4]
   2e610:	strb	r1, [r2]
   2e614:	ldrb	r1, [r0, #1]
   2e618:	strb	r1, [r2, #1]
   2e61c:	ldrb	r1, [r0, #2]
   2e620:	strb	r1, [r2, #2]
   2e624:	ldrb	r0, [r0, #3]
   2e628:	strb	r0, [r2, #3]
   2e62c:	add	sp, sp, #16
   2e630:	bx	lr
   2e634:	andeq	lr, r2, r8, ror #20

0002e638 <flatcc_builder_get_type@@Base>:
   2e638:	sub	sp, sp, #8
   2e63c:	str	r0, [sp, #4]
   2e640:	ldr	r0, [sp, #4]
   2e644:	ldr	r0, [r0, #32]
   2e648:	movw	r1, #0
   2e64c:	cmp	r0, r1
   2e650:	beq	2e668 <flatcc_builder_get_type@@Base+0x30>
   2e654:	ldr	r0, [sp, #4]
   2e658:	ldr	r0, [r0, #32]
   2e65c:	ldrh	r0, [r0, #14]
   2e660:	str	r0, [sp]
   2e664:	b	2e674 <flatcc_builder_get_type@@Base+0x3c>
   2e668:	movw	r0, #0
   2e66c:	str	r0, [sp]
   2e670:	b	2e674 <flatcc_builder_get_type@@Base+0x3c>
   2e674:	ldr	r0, [sp]
   2e678:	add	sp, sp, #8
   2e67c:	bx	lr

0002e680 <flatcc_builder_get_type_at@@Base>:
   2e680:	sub	sp, sp, #12
   2e684:	str	r0, [sp, #4]
   2e688:	str	r1, [sp]
   2e68c:	ldr	r0, [sp]
   2e690:	cmp	r0, #1
   2e694:	blt	2e6ac <flatcc_builder_get_type_at@@Base+0x2c>
   2e698:	ldr	r0, [sp]
   2e69c:	ldr	r1, [sp, #4]
   2e6a0:	ldr	r1, [r1, #156]	; 0x9c
   2e6a4:	cmp	r0, r1
   2e6a8:	ble	2e6b8 <flatcc_builder_get_type_at@@Base+0x38>
   2e6ac:	movw	r0, #0
   2e6b0:	str	r0, [sp, #8]
   2e6b4:	b	2e6e4 <flatcc_builder_get_type_at@@Base+0x64>
   2e6b8:	ldr	r0, [sp, #4]
   2e6bc:	ldr	r0, [r0, #32]
   2e6c0:	ldr	r1, [sp]
   2e6c4:	ldr	r2, [sp, #4]
   2e6c8:	ldr	r2, [r2, #156]	; 0x9c
   2e6cc:	sub	r1, r1, r2
   2e6d0:	movw	r2, #36	; 0x24
   2e6d4:	mul	r1, r1, r2
   2e6d8:	add	r0, r0, r1
   2e6dc:	ldrh	r0, [r0, #14]
   2e6e0:	str	r0, [sp, #8]
   2e6e4:	ldr	r0, [sp, #8]
   2e6e8:	add	sp, sp, #12
   2e6ec:	bx	lr

0002e6f0 <flatcc_builder_get_direct_buffer@@Base>:
   2e6f0:	push	{fp, lr}
   2e6f4:	mov	fp, sp
   2e6f8:	sub	sp, sp, #16
   2e6fc:	str	r0, [sp, #8]
   2e700:	str	r1, [sp, #4]
   2e704:	ldr	r0, [sp, #8]
   2e708:	ldr	r0, [r0, #184]	; 0xb8
   2e70c:	cmp	r0, #0
   2e710:	beq	2e72c <flatcc_builder_get_direct_buffer@@Base+0x3c>
   2e714:	ldr	r0, [sp, #8]
   2e718:	add	r0, r0, #188	; 0xbc
   2e71c:	ldr	r1, [sp, #4]
   2e720:	bl	2e760 <flatcc_builder_get_direct_buffer@@Base+0x70>
   2e724:	str	r0, [fp, #-4]
   2e728:	b	2e754 <flatcc_builder_get_direct_buffer@@Base+0x64>
   2e72c:	ldr	r0, [sp, #4]
   2e730:	movw	r1, #0
   2e734:	cmp	r0, r1
   2e738:	beq	2e748 <flatcc_builder_get_direct_buffer@@Base+0x58>
   2e73c:	ldr	r0, [sp, #4]
   2e740:	movw	r1, #0
   2e744:	str	r1, [r0]
   2e748:	b	2e74c <flatcc_builder_get_direct_buffer@@Base+0x5c>
   2e74c:	movw	r0, #0
   2e750:	str	r0, [fp, #-4]
   2e754:	ldr	r0, [fp, #-4]
   2e758:	mov	sp, fp
   2e75c:	pop	{fp, pc}
   2e760:	sub	sp, sp, #12
   2e764:	str	r0, [sp, #4]
   2e768:	str	r1, [sp]
   2e76c:	ldr	r0, [sp, #4]
   2e770:	ldr	r0, [r0]
   2e774:	ldr	r1, [sp, #4]
   2e778:	ldr	r1, [r1, #4]
   2e77c:	cmp	r0, r1
   2e780:	bne	2e7b4 <flatcc_builder_get_direct_buffer@@Base+0xc4>
   2e784:	ldr	r0, [sp]
   2e788:	movw	r1, #0
   2e78c:	cmp	r0, r1
   2e790:	beq	2e7a4 <flatcc_builder_get_direct_buffer@@Base+0xb4>
   2e794:	ldr	r0, [sp, #4]
   2e798:	ldr	r0, [r0, #24]
   2e79c:	ldr	r1, [sp]
   2e7a0:	str	r0, [r1]
   2e7a4:	ldr	r0, [sp, #4]
   2e7a8:	ldr	r0, [r0, #8]
   2e7ac:	str	r0, [sp, #8]
   2e7b0:	b	2e7d8 <flatcc_builder_get_direct_buffer@@Base+0xe8>
   2e7b4:	ldr	r0, [sp]
   2e7b8:	movw	r1, #0
   2e7bc:	cmp	r0, r1
   2e7c0:	beq	2e7d0 <flatcc_builder_get_direct_buffer@@Base+0xe0>
   2e7c4:	ldr	r0, [sp]
   2e7c8:	movw	r1, #0
   2e7cc:	str	r1, [r0]
   2e7d0:	movw	r0, #0
   2e7d4:	str	r0, [sp, #8]
   2e7d8:	ldr	r0, [sp, #8]
   2e7dc:	add	sp, sp, #12
   2e7e0:	bx	lr

0002e7e4 <flatcc_builder_copy_buffer@@Base>:
   2e7e4:	push	{fp, lr}
   2e7e8:	mov	fp, sp
   2e7ec:	sub	sp, sp, #16
   2e7f0:	str	r0, [sp, #8]
   2e7f4:	str	r1, [sp, #4]
   2e7f8:	str	r2, [sp]
   2e7fc:	ldr	r0, [sp, #8]
   2e800:	ldr	r0, [r0, #184]	; 0xb8
   2e804:	cmp	r0, #0
   2e808:	bne	2e818 <flatcc_builder_copy_buffer@@Base+0x34>
   2e80c:	movw	r0, #0
   2e810:	str	r0, [fp, #-4]
   2e814:	b	2e86c <flatcc_builder_copy_buffer@@Base+0x88>
   2e818:	ldr	r0, [sp, #8]
   2e81c:	add	r0, r0, #188	; 0xbc
   2e820:	ldr	r1, [sp, #4]
   2e824:	ldr	r2, [sp]
   2e828:	bl	2f4d8 <flatcc_emitter_copy_buffer@@Base>
   2e82c:	str	r0, [sp, #4]
   2e830:	ldr	r0, [sp, #4]
   2e834:	movw	r1, #0
   2e838:	cmp	r0, r1
   2e83c:	beq	2e844 <flatcc_builder_copy_buffer@@Base+0x60>
   2e840:	b	2e864 <flatcc_builder_copy_buffer@@Base+0x80>
   2e844:	ldr	r0, [pc, #44]	; 2e878 <flatcc_builder_copy_buffer@@Base+0x94>
   2e848:	add	r0, pc, r0
   2e84c:	ldr	r1, [pc, #40]	; 2e87c <flatcc_builder_copy_buffer@@Base+0x98>
   2e850:	add	r1, pc, r1
   2e854:	ldr	r2, [pc, #36]	; 2e880 <flatcc_builder_copy_buffer@@Base+0x9c>
   2e858:	add	r3, pc, r2
   2e85c:	movw	r2, #1926	; 0x786
   2e860:	bl	14f08 <__assert_fail@plt>
   2e864:	ldr	r0, [sp, #4]
   2e868:	str	r0, [fp, #-4]
   2e86c:	ldr	r0, [fp, #-4]
   2e870:	mov	sp, fp
   2e874:	pop	{fp, pc}
   2e878:	andeq	r8, r1, r6, asr #3
   2e87c:	andeq	fp, r1, r4, lsl #3
   2e880:	andeq	ip, r1, fp, ror #1

0002e884 <flatcc_builder_finalize_buffer@@Base>:
   2e884:	push	{fp, lr}
   2e888:	mov	fp, sp
   2e88c:	sub	sp, sp, #16
   2e890:	str	r0, [fp, #-4]
   2e894:	str	r1, [sp, #8]
   2e898:	ldr	r0, [fp, #-4]
   2e89c:	bl	2e54c <flatcc_builder_get_buffer_size@@Base>
   2e8a0:	str	r0, [sp]
   2e8a4:	ldr	r0, [sp, #8]
   2e8a8:	movw	r1, #0
   2e8ac:	cmp	r0, r1
   2e8b0:	beq	2e8c0 <flatcc_builder_finalize_buffer@@Base+0x3c>
   2e8b4:	ldr	r0, [sp]
   2e8b8:	ldr	r1, [sp, #8]
   2e8bc:	str	r0, [r1]
   2e8c0:	ldr	r0, [sp]
   2e8c4:	bl	14e78 <malloc@plt>
   2e8c8:	str	r0, [sp, #4]
   2e8cc:	ldr	r0, [sp, #4]
   2e8d0:	movw	lr, #0
   2e8d4:	cmp	r0, lr
   2e8d8:	bne	2e8fc <flatcc_builder_finalize_buffer@@Base+0x78>
   2e8dc:	ldr	r0, [pc, #144]	; 2e974 <flatcc_builder_finalize_buffer@@Base+0xf0>
   2e8e0:	add	r0, pc, r0
   2e8e4:	ldr	r1, [pc, #140]	; 2e978 <flatcc_builder_finalize_buffer@@Base+0xf4>
   2e8e8:	add	r1, pc, r1
   2e8ec:	ldr	r2, [pc, #136]	; 2e97c <flatcc_builder_finalize_buffer@@Base+0xf8>
   2e8f0:	add	r3, pc, r2
   2e8f4:	movw	r2, #1944	; 0x798
   2e8f8:	bl	14f08 <__assert_fail@plt>
   2e8fc:	ldr	r0, [fp, #-4]
   2e900:	ldr	r1, [sp, #4]
   2e904:	ldr	r2, [sp]
   2e908:	bl	2e7e4 <flatcc_builder_copy_buffer@@Base>
   2e90c:	movw	r1, #0
   2e910:	cmp	r0, r1
   2e914:	bne	2e938 <flatcc_builder_finalize_buffer@@Base+0xb4>
   2e918:	ldr	r0, [pc, #96]	; 2e980 <flatcc_builder_finalize_buffer@@Base+0xfc>
   2e91c:	add	r0, pc, r0
   2e920:	ldr	r1, [pc, #92]	; 2e984 <flatcc_builder_finalize_buffer@@Base+0x100>
   2e924:	add	r1, pc, r1
   2e928:	ldr	r2, [pc, #88]	; 2e988 <flatcc_builder_finalize_buffer@@Base+0x104>
   2e92c:	add	r3, pc, r2
   2e930:	movw	r2, #1948	; 0x79c
   2e934:	bl	14f08 <__assert_fail@plt>
   2e938:	b	2e93c <flatcc_builder_finalize_buffer@@Base+0xb8>
   2e93c:	ldr	r0, [sp, #4]
   2e940:	movw	r1, #0
   2e944:	cmp	r0, r1
   2e948:	bne	2e968 <flatcc_builder_finalize_buffer@@Base+0xe4>
   2e94c:	ldr	r0, [sp, #8]
   2e950:	movw	r1, #0
   2e954:	cmp	r0, r1
   2e958:	beq	2e968 <flatcc_builder_finalize_buffer@@Base+0xe4>
   2e95c:	ldr	r0, [sp, #8]
   2e960:	movw	r1, #0
   2e964:	str	r1, [r0]
   2e968:	ldr	r0, [sp, #4]
   2e96c:	mov	sp, fp
   2e970:	pop	{fp, pc}
   2e974:			; <UNDEFINED> instruction: 0x0001c2b1
   2e978:	andeq	fp, r1, ip, ror #1
   2e97c:	muleq	r1, r8, r0
   2e980:	andeq	ip, r1, r5, ror r2
   2e984:	strheq	fp, [r1], -r0
   2e988:	andeq	ip, r1, ip, asr r0

0002e98c <flatcc_builder_finalize_aligned_buffer@@Base>:
   2e98c:	push	{fp, lr}
   2e990:	mov	fp, sp
   2e994:	sub	sp, sp, #24
   2e998:	str	r0, [fp, #-4]
   2e99c:	str	r1, [fp, #-8]
   2e9a0:	ldr	r0, [fp, #-4]
   2e9a4:	bl	2e54c <flatcc_builder_get_buffer_size@@Base>
   2e9a8:	str	r0, [sp, #4]
   2e9ac:	ldr	r0, [fp, #-8]
   2e9b0:	movw	r1, #0
   2e9b4:	cmp	r0, r1
   2e9b8:	beq	2e9c8 <flatcc_builder_finalize_aligned_buffer@@Base+0x3c>
   2e9bc:	ldr	r0, [sp, #4]
   2e9c0:	ldr	r1, [fp, #-8]
   2e9c4:	str	r0, [r1]
   2e9c8:	ldr	r0, [fp, #-4]
   2e9cc:	bl	2e47c <flatcc_builder_get_buffer_alignment@@Base>
   2e9d0:	uxth	r0, r0
   2e9d4:	str	r0, [sp, #8]
   2e9d8:	ldr	r0, [sp, #4]
   2e9dc:	ldr	lr, [sp, #8]
   2e9e0:	add	r0, r0, lr
   2e9e4:	sub	r0, r0, #1
   2e9e8:	ldr	lr, [sp, #8]
   2e9ec:	sub	lr, lr, #1
   2e9f0:	mvn	r1, #0
   2e9f4:	eor	r1, lr, r1
   2e9f8:	and	r0, r0, r1
   2e9fc:	str	r0, [sp, #4]
   2ea00:	ldr	r0, [sp, #8]
   2ea04:	ldr	r1, [sp, #4]
   2ea08:	bl	2ea90 <flatcc_builder_finalize_aligned_buffer@@Base+0x104>
   2ea0c:	str	r0, [sp, #12]
   2ea10:	ldr	r0, [sp, #12]
   2ea14:	movw	r1, #0
   2ea18:	cmp	r0, r1
   2ea1c:	bne	2ea24 <flatcc_builder_finalize_aligned_buffer@@Base+0x98>
   2ea20:	b	2ea58 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   2ea24:	ldr	r0, [fp, #-4]
   2ea28:	ldr	r1, [sp, #12]
   2ea2c:	ldr	r2, [sp, #4]
   2ea30:	bl	2e7e4 <flatcc_builder_copy_buffer@@Base>
   2ea34:	movw	r1, #0
   2ea38:	cmp	r0, r1
   2ea3c:	bne	2ea54 <flatcc_builder_finalize_aligned_buffer@@Base+0xc8>
   2ea40:	ldr	r0, [sp, #12]
   2ea44:	bl	14e24 <free@plt>
   2ea48:	movw	r0, #0
   2ea4c:	str	r0, [sp, #12]
   2ea50:	b	2ea58 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   2ea54:	b	2ea58 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   2ea58:	ldr	r0, [sp, #12]
   2ea5c:	movw	r1, #0
   2ea60:	cmp	r0, r1
   2ea64:	bne	2ea84 <flatcc_builder_finalize_aligned_buffer@@Base+0xf8>
   2ea68:	ldr	r0, [fp, #-8]
   2ea6c:	movw	r1, #0
   2ea70:	cmp	r0, r1
   2ea74:	beq	2ea84 <flatcc_builder_finalize_aligned_buffer@@Base+0xf8>
   2ea78:	ldr	r0, [fp, #-8]
   2ea7c:	movw	r1, #0
   2ea80:	str	r1, [r0]
   2ea84:	ldr	r0, [sp, #12]
   2ea88:	mov	sp, fp
   2ea8c:	pop	{fp, pc}
   2ea90:	push	{fp, lr}
   2ea94:	mov	fp, sp
   2ea98:	sub	sp, sp, #16
   2ea9c:	str	r0, [fp, #-4]
   2eaa0:	str	r1, [sp, #8]
   2eaa4:	movw	r0, #0
   2eaa8:	str	r0, [sp]
   2eaac:	ldr	r0, [fp, #-4]
   2eab0:	cmp	r0, #4
   2eab4:	bcs	2eac0 <flatcc_builder_finalize_aligned_buffer@@Base+0x134>
   2eab8:	movw	r0, #4
   2eabc:	str	r0, [fp, #-4]
   2eac0:	ldr	r1, [fp, #-4]
   2eac4:	ldr	r2, [sp, #8]
   2eac8:	mov	r0, sp
   2eacc:	bl	14eb4 <posix_memalign@plt>
   2ead0:	str	r0, [sp, #4]
   2ead4:	ldr	r0, [sp, #4]
   2ead8:	cmp	r0, #0
   2eadc:	beq	2eb00 <flatcc_builder_finalize_aligned_buffer@@Base+0x174>
   2eae0:	ldr	r0, [sp]
   2eae4:	movw	r1, #0
   2eae8:	cmp	r0, r1
   2eaec:	beq	2eb00 <flatcc_builder_finalize_aligned_buffer@@Base+0x174>
   2eaf0:	ldr	r0, [sp]
   2eaf4:	bl	14e24 <free@plt>
   2eaf8:	movw	r0, #0
   2eafc:	str	r0, [sp]
   2eb00:	ldr	r0, [sp]
   2eb04:	mov	sp, fp
   2eb08:	pop	{fp, pc}

0002eb0c <flatcc_builder_aligned_alloc@@Base>:
   2eb0c:	push	{fp, lr}
   2eb10:	mov	fp, sp
   2eb14:	sub	sp, sp, #8
   2eb18:	str	r0, [sp, #4]
   2eb1c:	str	r1, [sp]
   2eb20:	ldr	r0, [sp, #4]
   2eb24:	ldr	r1, [sp]
   2eb28:	bl	2ea90 <flatcc_builder_finalize_aligned_buffer@@Base+0x104>
   2eb2c:	mov	sp, fp
   2eb30:	pop	{fp, pc}

0002eb34 <flatcc_builder_aligned_free@@Base>:
   2eb34:	push	{fp, lr}
   2eb38:	mov	fp, sp
   2eb3c:	sub	sp, sp, #8
   2eb40:	str	r0, [sp, #4]
   2eb44:	ldr	r0, [sp, #4]
   2eb48:	bl	14e24 <free@plt>
   2eb4c:	mov	sp, fp
   2eb50:	pop	{fp, pc}

0002eb54 <flatcc_builder_get_emit_context@@Base>:
   2eb54:	sub	sp, sp, #4
   2eb58:	str	r0, [sp]
   2eb5c:	ldr	r0, [sp]
   2eb60:	ldr	r0, [r0, #36]	; 0x24
   2eb64:	add	sp, sp, #4
   2eb68:	bx	lr
   2eb6c:	sub	sp, sp, #8
   2eb70:	str	r0, [sp, #4]
   2eb74:	strh	r1, [sp, #2]
   2eb78:	ldr	r0, [sp, #4]
   2eb7c:	ldr	r0, [r0, #140]	; 0x8c
   2eb80:	ldrh	r1, [sp, #2]
   2eb84:	sub	r1, r1, #1
   2eb88:	and	r0, r0, r1
   2eb8c:	add	sp, sp, #8
   2eb90:	bx	lr
   2eb94:	push	{fp, lr}
   2eb98:	mov	fp, sp
   2eb9c:	sub	sp, sp, #32
   2eba0:	str	r0, [fp, #-8]
   2eba4:	str	r1, [fp, #-12]
   2eba8:	str	r2, [sp, #16]
   2ebac:	ldr	r0, [fp, #-8]
   2ebb0:	add	r0, r0, #52	; 0x34
   2ebb4:	add	r0, r0, #8
   2ebb8:	str	r0, [sp, #12]
   2ebbc:	ldr	r0, [fp, #-8]
   2ebc0:	ldr	r0, [r0, #48]	; 0x30
   2ebc4:	ldr	r1, [fp, #-8]
   2ebc8:	ldr	r1, [r1, #40]	; 0x28
   2ebcc:	ldr	r2, [sp, #12]
   2ebd0:	ldr	r3, [fp, #-8]
   2ebd4:	ldr	r3, [r3, #28]
   2ebd8:	ldr	ip, [fp, #-12]
   2ebdc:	add	r3, r3, ip
   2ebe0:	str	r0, [sp, #8]
   2ebe4:	mov	r0, r1
   2ebe8:	mov	r1, r2
   2ebec:	mov	r2, r3
   2ebf0:	movw	r3, #1
   2ebf4:	str	r3, [sp, #4]
   2ebf8:	ldr	ip, [sp, #4]
   2ebfc:	str	ip, [sp]
   2ec00:	ldr	lr, [sp, #8]
   2ec04:	blx	lr
   2ec08:	cmp	r0, #0
   2ec0c:	beq	2ec1c <flatcc_builder_get_emit_context@@Base+0xc8>
   2ec10:	mvn	r0, #0
   2ec14:	str	r0, [fp, #-4]
   2ec18:	b	2ec30 <flatcc_builder_get_emit_context@@Base+0xdc>
   2ec1c:	ldr	r0, [fp, #-8]
   2ec20:	ldr	r1, [sp, #16]
   2ec24:	bl	2a998 <flatcc_builder_start_struct@@Base+0x70>
   2ec28:	movw	r0, #0
   2ec2c:	str	r0, [fp, #-4]
   2ec30:	ldr	r0, [fp, #-4]
   2ec34:	mov	sp, fp
   2ec38:	pop	{fp, pc}
   2ec3c:	push	{fp, lr}
   2ec40:	mov	fp, sp
   2ec44:	sub	sp, sp, #32
   2ec48:	str	r0, [fp, #-8]
   2ec4c:	ldr	r0, [fp, #-8]
   2ec50:	add	r0, r0, #52	; 0x34
   2ec54:	add	r0, r0, #40	; 0x28
   2ec58:	str	r0, [fp, #-12]
   2ec5c:	ldr	r0, [fp, #-8]
   2ec60:	ldr	r0, [r0, #124]	; 0x7c
   2ec64:	cmp	r0, #0
   2ec68:	bne	2ec70 <flatcc_builder_get_emit_context@@Base+0x11c>
   2ec6c:	b	2ec90 <flatcc_builder_get_emit_context@@Base+0x13c>
   2ec70:	ldr	r0, [pc, #320]	; 2edb8 <flatcc_builder_get_emit_context@@Base+0x264>
   2ec74:	add	r0, pc, r0
   2ec78:	ldr	r1, [pc, #316]	; 2edbc <flatcc_builder_get_emit_context@@Base+0x268>
   2ec7c:	add	r1, pc, r1
   2ec80:	ldr	r2, [pc, #312]	; 2edc0 <flatcc_builder_get_emit_context@@Base+0x26c>
   2ec84:	add	r3, pc, r2
   2ec88:	movw	r2, #342	; 0x156
   2ec8c:	bl	14f08 <__assert_fail@plt>
   2ec90:	ldr	r0, [fp, #-8]
   2ec94:	ldr	r1, [fp, #-8]
   2ec98:	ldr	r2, [r1, #124]	; 0x7c
   2ec9c:	movw	r1, #6
   2eca0:	movw	r3, #16
   2eca4:	movw	ip, #0
   2eca8:	str	ip, [sp]
   2ecac:	bl	296c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2ecb0:	movw	r1, #0
   2ecb4:	cmp	r0, r1
   2ecb8:	bne	2ecc8 <flatcc_builder_get_emit_context@@Base+0x174>
   2ecbc:	mvn	r0, #0
   2ecc0:	str	r0, [fp, #-4]
   2ecc4:	b	2edac <flatcc_builder_get_emit_context@@Base+0x258>
   2ecc8:	ldr	r0, [fp, #-8]
   2eccc:	movw	r1, #16
   2ecd0:	str	r1, [r0, #124]	; 0x7c
   2ecd4:	movw	r0, #256	; 0x100
   2ecd8:	str	r0, [sp, #16]
   2ecdc:	ldr	r0, [fp, #-8]
   2ece0:	ldr	r0, [r0, #48]	; 0x30
   2ece4:	ldr	r1, [fp, #-8]
   2ece8:	ldr	r1, [r1, #40]	; 0x28
   2ecec:	ldr	r2, [fp, #-12]
   2ecf0:	ldr	r3, [sp, #16]
   2ecf4:	str	r0, [sp, #8]
   2ecf8:	mov	r0, r1
   2ecfc:	mov	r1, r2
   2ed00:	mov	r2, r3
   2ed04:	movw	r3, #1
   2ed08:	movw	ip, #5
   2ed0c:	str	ip, [sp]
   2ed10:	ldr	ip, [sp, #8]
   2ed14:	blx	ip
   2ed18:	cmp	r0, #0
   2ed1c:	beq	2ed2c <flatcc_builder_get_emit_context@@Base+0x1d8>
   2ed20:	mvn	r0, #0
   2ed24:	str	r0, [fp, #-4]
   2ed28:	b	2edac <flatcc_builder_get_emit_context@@Base+0x258>
   2ed2c:	b	2ed30 <flatcc_builder_get_emit_context@@Base+0x1dc>
   2ed30:	ldr	r0, [sp, #16]
   2ed34:	lsl	r0, r0, #1
   2ed38:	ldr	r1, [fp, #-12]
   2ed3c:	ldr	r1, [r1, #4]
   2ed40:	cmp	r0, r1
   2ed44:	bhi	2ed58 <flatcc_builder_get_emit_context@@Base+0x204>
   2ed48:	ldr	r0, [sp, #16]
   2ed4c:	lsl	r0, r0, #1
   2ed50:	str	r0, [sp, #16]
   2ed54:	b	2ed30 <flatcc_builder_get_emit_context@@Base+0x1dc>
   2ed58:	ldr	r0, [sp, #16]
   2ed5c:	lsr	r0, r0, #2
   2ed60:	str	r0, [sp, #16]
   2ed64:	movw	r0, #0
   2ed68:	str	r0, [sp, #12]
   2ed6c:	ldr	r0, [sp, #12]
   2ed70:	movw	r1, #1
   2ed74:	lsl	r0, r1, r0
   2ed78:	ldr	r1, [sp, #16]
   2ed7c:	cmp	r0, r1
   2ed80:	bcs	2ed98 <flatcc_builder_get_emit_context@@Base+0x244>
   2ed84:	b	2ed88 <flatcc_builder_get_emit_context@@Base+0x234>
   2ed88:	ldr	r0, [sp, #12]
   2ed8c:	add	r0, r0, #1
   2ed90:	str	r0, [sp, #12]
   2ed94:	b	2ed6c <flatcc_builder_get_emit_context@@Base+0x218>
   2ed98:	ldr	r0, [sp, #12]
   2ed9c:	ldr	r1, [fp, #-8]
   2eda0:	str	r0, [r1, #116]	; 0x74
   2eda4:	movw	r0, #0
   2eda8:	str	r0, [fp, #-4]
   2edac:	ldr	r0, [fp, #-4]
   2edb0:	mov	sp, fp
   2edb4:	pop	{fp, pc}
   2edb8:	andeq	fp, r1, r1, ror #29
   2edbc:	andeq	sl, r1, r8, asr sp
   2edc0:	andeq	fp, r1, r0, ror #29

0002edc4 <flatcc_emitter_recycle_page@@Base>:
   2edc4:	sub	sp, sp, #12
   2edc8:	str	r0, [sp, #4]
   2edcc:	str	r1, [sp]
   2edd0:	ldr	r0, [sp]
   2edd4:	ldr	r1, [sp, #4]
   2edd8:	ldr	r1, [r1]
   2eddc:	cmp	r0, r1
   2ede0:	beq	2edf8 <flatcc_emitter_recycle_page@@Base+0x34>
   2ede4:	ldr	r0, [sp]
   2ede8:	ldr	r1, [sp, #4]
   2edec:	ldr	r1, [r1, #4]
   2edf0:	cmp	r0, r1
   2edf4:	bne	2ee04 <flatcc_emitter_recycle_page@@Base+0x40>
   2edf8:	mvn	r0, #0
   2edfc:	str	r0, [sp, #8]
   2ee00:	b	2ee78 <flatcc_emitter_recycle_page@@Base+0xb4>
   2ee04:	ldr	r0, [sp]
   2ee08:	ldr	r0, [r0, #2948]	; 0xb84
   2ee0c:	ldr	r1, [sp]
   2ee10:	ldr	r1, [r1, #2944]	; 0xb80
   2ee14:	str	r0, [r1, #2948]	; 0xb84
   2ee18:	ldr	r0, [sp]
   2ee1c:	ldr	r0, [r0, #2944]	; 0xb80
   2ee20:	ldr	r1, [sp]
   2ee24:	ldr	r1, [r1, #2948]	; 0xb84
   2ee28:	str	r0, [r1, #2944]	; 0xb80
   2ee2c:	ldr	r0, [sp, #4]
   2ee30:	ldr	r0, [r0]
   2ee34:	ldr	r0, [r0, #2948]	; 0xb84
   2ee38:	ldr	r1, [sp]
   2ee3c:	str	r0, [r1, #2948]	; 0xb84
   2ee40:	ldr	r0, [sp, #4]
   2ee44:	ldr	r0, [r0]
   2ee48:	ldr	r1, [sp]
   2ee4c:	str	r0, [r1, #2944]	; 0xb80
   2ee50:	ldr	r0, [sp]
   2ee54:	ldr	r1, [sp]
   2ee58:	ldr	r1, [r1, #2948]	; 0xb84
   2ee5c:	str	r0, [r1, #2944]	; 0xb80
   2ee60:	ldr	r0, [sp]
   2ee64:	ldr	r1, [sp]
   2ee68:	ldr	r1, [r1, #2944]	; 0xb80
   2ee6c:	str	r0, [r1, #2948]	; 0xb84
   2ee70:	movw	r0, #0
   2ee74:	str	r0, [sp, #8]
   2ee78:	ldr	r0, [sp, #8]
   2ee7c:	add	sp, sp, #12
   2ee80:	bx	lr

0002ee84 <flatcc_emitter_reset@@Base>:
   2ee84:	push	{fp, lr}
   2ee88:	mov	fp, sp
   2ee8c:	sub	sp, sp, #16
   2ee90:	str	r0, [fp, #-4]
   2ee94:	ldr	r0, [fp, #-4]
   2ee98:	ldr	r0, [r0]
   2ee9c:	str	r0, [sp, #8]
   2eea0:	ldr	r0, [fp, #-4]
   2eea4:	ldr	r0, [r0]
   2eea8:	movw	r1, #0
   2eeac:	cmp	r0, r1
   2eeb0:	bne	2eeb8 <flatcc_emitter_reset@@Base+0x34>
   2eeb4:	b	2f014 <flatcc_emitter_reset@@Base+0x190>
   2eeb8:	ldr	r0, [fp, #-4]
   2eebc:	ldr	r0, [r0]
   2eec0:	ldr	r1, [fp, #-4]
   2eec4:	str	r0, [r1, #4]
   2eec8:	ldr	r0, [fp, #-4]
   2eecc:	ldr	r0, [r0]
   2eed0:	add	r0, r0, #1472	; 0x5c0
   2eed4:	ldr	r1, [fp, #-4]
   2eed8:	str	r0, [r1, #8]
   2eedc:	ldr	r0, [fp, #-4]
   2eee0:	ldr	r0, [r0, #8]
   2eee4:	ldr	r1, [fp, #-4]
   2eee8:	str	r0, [r1, #16]
   2eeec:	ldr	r0, [fp, #-4]
   2eef0:	movw	r1, #1472	; 0x5c0
   2eef4:	str	r1, [r0, #12]
   2eef8:	ldr	r0, [fp, #-4]
   2eefc:	str	r1, [r0, #20]
   2ef00:	ldr	r0, [fp, #-4]
   2ef04:	ldr	r0, [r0, #12]
   2ef08:	movw	r1, #0
   2ef0c:	sub	r0, r1, r0
   2ef10:	ldr	r1, [fp, #-4]
   2ef14:	ldr	r1, [r1]
   2ef18:	str	r0, [r1, #2952]	; 0xb88
   2ef1c:	ldr	r0, [fp, #-4]
   2ef20:	ldr	r0, [r0, #32]
   2ef24:	cmp	r0, #0
   2ef28:	bne	2ef3c <flatcc_emitter_reset@@Base+0xb8>
   2ef2c:	ldr	r0, [fp, #-4]
   2ef30:	ldr	r0, [r0, #24]
   2ef34:	ldr	r1, [fp, #-4]
   2ef38:	str	r0, [r1, #32]
   2ef3c:	ldr	r0, [fp, #-4]
   2ef40:	ldr	r1, [r0, #24]
   2ef44:	ldr	r0, [r0, #32]
   2ef48:	add	r0, r0, r0, lsl #1
   2ef4c:	lsr	r0, r0, #2
   2ef50:	lsr	r1, r1, #2
   2ef54:	add	r0, r0, r1
   2ef58:	ldr	r1, [fp, #-4]
   2ef5c:	str	r0, [r1, #32]
   2ef60:	ldr	r0, [fp, #-4]
   2ef64:	movw	r1, #0
   2ef68:	str	r1, [r0, #24]
   2ef6c:	ldr	r0, [fp, #-4]
   2ef70:	ldr	r0, [r0, #32]
   2ef74:	lsl	r0, r0, #1
   2ef78:	ldr	r1, [fp, #-4]
   2ef7c:	ldr	r1, [r1, #28]
   2ef80:	cmp	r0, r1
   2ef84:	movw	r0, #0
   2ef88:	str	r0, [sp, #4]
   2ef8c:	bcs	2efb4 <flatcc_emitter_reset@@Base+0x130>
   2ef90:	ldr	r0, [fp, #-4]
   2ef94:	ldr	r0, [r0, #4]
   2ef98:	ldr	r0, [r0, #2944]	; 0xb80
   2ef9c:	ldr	r1, [fp, #-4]
   2efa0:	ldr	r1, [r1]
   2efa4:	cmp	r0, r1
   2efa8:	movw	r0, #0
   2efac:	movne	r0, #1
   2efb0:	str	r0, [sp, #4]
   2efb4:	ldr	r0, [sp, #4]
   2efb8:	tst	r0, #1
   2efbc:	beq	2f014 <flatcc_emitter_reset@@Base+0x190>
   2efc0:	ldr	r0, [fp, #-4]
   2efc4:	ldr	r0, [r0, #4]
   2efc8:	ldr	r0, [r0, #2944]	; 0xb80
   2efcc:	str	r0, [sp, #8]
   2efd0:	ldr	r0, [sp, #8]
   2efd4:	ldr	r0, [r0, #2944]	; 0xb80
   2efd8:	ldr	r1, [fp, #-4]
   2efdc:	ldr	r1, [r1, #4]
   2efe0:	str	r0, [r1, #2944]	; 0xb80
   2efe4:	ldr	r0, [fp, #-4]
   2efe8:	ldr	r0, [r0, #4]
   2efec:	ldr	r1, [sp, #8]
   2eff0:	ldr	r1, [r1, #2944]	; 0xb80
   2eff4:	str	r0, [r1, #2948]	; 0xb84
   2eff8:	ldr	r0, [sp, #8]
   2effc:	bl	14e24 <free@plt>
   2f000:	ldr	r0, [fp, #-4]
   2f004:	ldr	r1, [r0, #28]
   2f008:	sub	r1, r1, #2944	; 0xb80
   2f00c:	str	r1, [r0, #28]
   2f010:	b	2ef6c <flatcc_emitter_reset@@Base+0xe8>
   2f014:	mov	sp, fp
   2f018:	pop	{fp, pc}

0002f01c <flatcc_emitter_clear@@Base>:
   2f01c:	push	{fp, lr}
   2f020:	mov	fp, sp
   2f024:	sub	sp, sp, #8
   2f028:	str	r0, [sp, #4]
   2f02c:	ldr	r0, [sp, #4]
   2f030:	ldr	r0, [r0]
   2f034:	str	r0, [sp]
   2f038:	ldr	r0, [sp]
   2f03c:	movw	r1, #0
   2f040:	cmp	r0, r1
   2f044:	bne	2f04c <flatcc_emitter_clear@@Base+0x30>
   2f048:	b	2f0a8 <flatcc_emitter_clear@@Base+0x8c>
   2f04c:	ldr	r0, [sp]
   2f050:	ldr	r0, [r0, #2948]	; 0xb84
   2f054:	movw	r1, #0
   2f058:	str	r1, [r0, #2944]	; 0xb80
   2f05c:	ldr	r0, [sp]
   2f060:	ldr	r0, [r0, #2944]	; 0xb80
   2f064:	movw	r1, #0
   2f068:	cmp	r0, r1
   2f06c:	beq	2f08c <flatcc_emitter_clear@@Base+0x70>
   2f070:	ldr	r0, [sp]
   2f074:	ldr	r0, [r0, #2944]	; 0xb80
   2f078:	str	r0, [sp]
   2f07c:	ldr	r0, [sp]
   2f080:	ldr	r0, [r0, #2948]	; 0xb84
   2f084:	bl	14e24 <free@plt>
   2f088:	b	2f05c <flatcc_emitter_clear@@Base+0x40>
   2f08c:	ldr	r0, [sp]
   2f090:	bl	14e24 <free@plt>
   2f094:	ldr	r0, [sp, #4]
   2f098:	movw	lr, #0
   2f09c:	and	r1, lr, #255	; 0xff
   2f0a0:	movw	r2, #36	; 0x24
   2f0a4:	bl	14ec0 <memset@plt>
   2f0a8:	mov	sp, fp
   2f0ac:	pop	{fp, pc}

0002f0b0 <flatcc_emitter@@Base>:
   2f0b0:	push	{fp, lr}
   2f0b4:	mov	fp, sp
   2f0b8:	sub	sp, sp, #32
   2f0bc:	ldr	ip, [fp, #8]
   2f0c0:	str	r0, [fp, #-8]
   2f0c4:	str	r1, [fp, #-12]
   2f0c8:	str	r2, [sp, #16]
   2f0cc:	str	r3, [sp, #12]
   2f0d0:	ldr	r0, [fp, #-8]
   2f0d4:	str	r0, [sp, #8]
   2f0d8:	ldr	r0, [fp, #8]
   2f0dc:	ldr	r1, [sp, #8]
   2f0e0:	ldr	r2, [r1, #24]
   2f0e4:	add	r0, r2, r0
   2f0e8:	str	r0, [r1, #24]
   2f0ec:	ldr	r0, [sp, #12]
   2f0f0:	cmp	r0, #0
   2f0f4:	str	ip, [sp]
   2f0f8:	bge	2f1bc <flatcc_emitter@@Base+0x10c>
   2f0fc:	ldr	r0, [fp, #8]
   2f100:	ldr	r1, [sp, #8]
   2f104:	ldr	r1, [r1, #12]
   2f108:	cmp	r0, r1
   2f10c:	bhi	2f150 <flatcc_emitter@@Base+0xa0>
   2f110:	ldr	r0, [fp, #8]
   2f114:	ldr	r1, [sp, #8]
   2f118:	ldr	r2, [r1, #8]
   2f11c:	movw	r3, #0
   2f120:	sub	r0, r3, r0
   2f124:	add	r0, r2, r0
   2f128:	str	r0, [r1, #8]
   2f12c:	ldr	r0, [fp, #8]
   2f130:	ldr	r1, [sp, #8]
   2f134:	ldr	r2, [r1, #12]
   2f138:	sub	r0, r2, r0
   2f13c:	str	r0, [r1, #12]
   2f140:	ldr	r0, [sp, #8]
   2f144:	ldr	r0, [r0, #8]
   2f148:	str	r0, [sp, #4]
   2f14c:	b	2f270 <flatcc_emitter@@Base+0x1c0>
   2f150:	ldr	r0, [sp, #16]
   2f154:	ldr	r1, [fp, #-12]
   2f158:	add	r0, r1, r0, lsl #3
   2f15c:	str	r0, [fp, #-12]
   2f160:	ldr	r0, [sp, #16]
   2f164:	mvn	r1, #0
   2f168:	add	r1, r0, r1
   2f16c:	str	r1, [sp, #16]
   2f170:	cmp	r0, #0
   2f174:	beq	2f1b8 <flatcc_emitter@@Base+0x108>
   2f178:	ldr	r0, [fp, #-12]
   2f17c:	mvn	r1, #7
   2f180:	add	r0, r0, r1
   2f184:	str	r0, [fp, #-12]
   2f188:	ldr	r0, [sp, #8]
   2f18c:	ldr	r1, [fp, #-12]
   2f190:	ldr	r1, [r1]
   2f194:	ldr	r2, [fp, #-12]
   2f198:	ldr	r2, [r2, #4]
   2f19c:	bl	2f2dc <flatcc_emitter@@Base+0x22c>
   2f1a0:	cmp	r0, #0
   2f1a4:	beq	2f1b4 <flatcc_emitter@@Base+0x104>
   2f1a8:	mvn	r0, #0
   2f1ac:	str	r0, [fp, #-4]
   2f1b0:	b	2f2d0 <flatcc_emitter@@Base+0x220>
   2f1b4:	b	2f160 <flatcc_emitter@@Base+0xb0>
   2f1b8:	b	2f264 <flatcc_emitter@@Base+0x1b4>
   2f1bc:	ldr	r0, [fp, #8]
   2f1c0:	ldr	r1, [sp, #8]
   2f1c4:	ldr	r1, [r1, #20]
   2f1c8:	cmp	r0, r1
   2f1cc:	bhi	2f208 <flatcc_emitter@@Base+0x158>
   2f1d0:	ldr	r0, [sp, #8]
   2f1d4:	ldr	r0, [r0, #16]
   2f1d8:	str	r0, [sp, #4]
   2f1dc:	ldr	r0, [fp, #8]
   2f1e0:	ldr	r1, [sp, #8]
   2f1e4:	ldr	r2, [r1, #16]
   2f1e8:	add	r0, r2, r0
   2f1ec:	str	r0, [r1, #16]
   2f1f0:	ldr	r0, [fp, #8]
   2f1f4:	ldr	r1, [sp, #8]
   2f1f8:	ldr	r2, [r1, #20]
   2f1fc:	sub	r0, r2, r0
   2f200:	str	r0, [r1, #20]
   2f204:	b	2f270 <flatcc_emitter@@Base+0x1c0>
   2f208:	b	2f20c <flatcc_emitter@@Base+0x15c>
   2f20c:	ldr	r0, [sp, #16]
   2f210:	mvn	r1, #0
   2f214:	add	r1, r0, r1
   2f218:	str	r1, [sp, #16]
   2f21c:	cmp	r0, #0
   2f220:	beq	2f260 <flatcc_emitter@@Base+0x1b0>
   2f224:	ldr	r0, [sp, #8]
   2f228:	ldr	r1, [fp, #-12]
   2f22c:	ldr	r1, [r1]
   2f230:	ldr	r2, [fp, #-12]
   2f234:	ldr	r2, [r2, #4]
   2f238:	bl	2f3e8 <flatcc_emitter@@Base+0x338>
   2f23c:	cmp	r0, #0
   2f240:	beq	2f250 <flatcc_emitter@@Base+0x1a0>
   2f244:	mvn	r0, #0
   2f248:	str	r0, [fp, #-4]
   2f24c:	b	2f2d0 <flatcc_emitter@@Base+0x220>
   2f250:	ldr	r0, [fp, #-12]
   2f254:	add	r0, r0, #8
   2f258:	str	r0, [fp, #-12]
   2f25c:	b	2f20c <flatcc_emitter@@Base+0x15c>
   2f260:	b	2f264 <flatcc_emitter@@Base+0x1b4>
   2f264:	movw	r0, #0
   2f268:	str	r0, [fp, #-4]
   2f26c:	b	2f2d0 <flatcc_emitter@@Base+0x220>
   2f270:	b	2f274 <flatcc_emitter@@Base+0x1c4>
   2f274:	ldr	r0, [sp, #16]
   2f278:	mvn	r1, #0
   2f27c:	add	r1, r0, r1
   2f280:	str	r1, [sp, #16]
   2f284:	cmp	r0, #0
   2f288:	beq	2f2c8 <flatcc_emitter@@Base+0x218>
   2f28c:	ldr	r0, [sp, #4]
   2f290:	ldr	r1, [fp, #-12]
   2f294:	ldr	r1, [r1]
   2f298:	ldr	r2, [fp, #-12]
   2f29c:	ldr	r2, [r2, #4]
   2f2a0:	bl	14e30 <memcpy@plt>
   2f2a4:	ldr	r0, [fp, #-12]
   2f2a8:	ldr	r0, [r0, #4]
   2f2ac:	ldr	r1, [sp, #4]
   2f2b0:	add	r0, r1, r0
   2f2b4:	str	r0, [sp, #4]
   2f2b8:	ldr	r0, [fp, #-12]
   2f2bc:	add	r0, r0, #8
   2f2c0:	str	r0, [fp, #-12]
   2f2c4:	b	2f274 <flatcc_emitter@@Base+0x1c4>
   2f2c8:	movw	r0, #0
   2f2cc:	str	r0, [fp, #-4]
   2f2d0:	ldr	r0, [fp, #-4]
   2f2d4:	mov	sp, fp
   2f2d8:	pop	{fp, pc}
   2f2dc:	push	{fp, lr}
   2f2e0:	mov	fp, sp
   2f2e4:	sub	sp, sp, #24
   2f2e8:	str	r0, [fp, #-8]
   2f2ec:	str	r1, [sp, #12]
   2f2f0:	str	r2, [sp, #8]
   2f2f4:	ldr	r0, [sp, #8]
   2f2f8:	ldr	r1, [sp, #12]
   2f2fc:	add	r0, r1, r0
   2f300:	str	r0, [sp, #12]
   2f304:	ldr	r0, [sp, #8]
   2f308:	cmp	r0, #0
   2f30c:	beq	2f3d4 <flatcc_emitter@@Base+0x324>
   2f310:	ldr	r0, [sp, #8]
   2f314:	str	r0, [sp, #4]
   2f318:	ldr	r0, [sp, #4]
   2f31c:	ldr	r1, [fp, #-8]
   2f320:	ldr	r1, [r1, #12]
   2f324:	cmp	r0, r1
   2f328:	bls	2f368 <flatcc_emitter@@Base+0x2b8>
   2f32c:	ldr	r0, [fp, #-8]
   2f330:	ldr	r0, [r0, #12]
   2f334:	str	r0, [sp, #4]
   2f338:	ldr	r0, [sp, #4]
   2f33c:	cmp	r0, #0
   2f340:	bne	2f364 <flatcc_emitter@@Base+0x2b4>
   2f344:	ldr	r0, [fp, #-8]
   2f348:	bl	2f624 <flatcc_emitter_copy_buffer@@Base+0x14c>
   2f34c:	cmp	r0, #0
   2f350:	beq	2f360 <flatcc_emitter@@Base+0x2b0>
   2f354:	mvn	r0, #0
   2f358:	str	r0, [fp, #-4]
   2f35c:	b	2f3dc <flatcc_emitter@@Base+0x32c>
   2f360:	b	2f304 <flatcc_emitter@@Base+0x254>
   2f364:	b	2f368 <flatcc_emitter@@Base+0x2b8>
   2f368:	ldr	r0, [sp, #4]
   2f36c:	ldr	r1, [fp, #-8]
   2f370:	ldr	r2, [r1, #8]
   2f374:	movw	r3, #0
   2f378:	sub	r0, r3, r0
   2f37c:	add	r0, r2, r0
   2f380:	str	r0, [r1, #8]
   2f384:	ldr	r0, [sp, #4]
   2f388:	ldr	r1, [fp, #-8]
   2f38c:	ldr	r2, [r1, #12]
   2f390:	sub	r0, r2, r0
   2f394:	str	r0, [r1, #12]
   2f398:	ldr	r0, [sp, #4]
   2f39c:	ldr	r1, [sp, #12]
   2f3a0:	sub	r0, r3, r0
   2f3a4:	add	r0, r1, r0
   2f3a8:	str	r0, [sp, #12]
   2f3ac:	ldr	r0, [sp, #4]
   2f3b0:	ldr	r1, [sp, #8]
   2f3b4:	sub	r0, r1, r0
   2f3b8:	str	r0, [sp, #8]
   2f3bc:	ldr	r0, [fp, #-8]
   2f3c0:	ldr	r0, [r0, #8]
   2f3c4:	ldr	r1, [sp, #12]
   2f3c8:	ldr	r2, [sp, #4]
   2f3cc:	bl	14e30 <memcpy@plt>
   2f3d0:	b	2f304 <flatcc_emitter@@Base+0x254>
   2f3d4:	movw	r0, #0
   2f3d8:	str	r0, [fp, #-4]
   2f3dc:	ldr	r0, [fp, #-4]
   2f3e0:	mov	sp, fp
   2f3e4:	pop	{fp, pc}
   2f3e8:	push	{fp, lr}
   2f3ec:	mov	fp, sp
   2f3f0:	sub	sp, sp, #24
   2f3f4:	str	r0, [fp, #-8]
   2f3f8:	str	r1, [sp, #12]
   2f3fc:	str	r2, [sp, #8]
   2f400:	ldr	r0, [sp, #8]
   2f404:	cmp	r0, #0
   2f408:	beq	2f4c4 <flatcc_emitter@@Base+0x414>
   2f40c:	ldr	r0, [sp, #8]
   2f410:	str	r0, [sp, #4]
   2f414:	ldr	r0, [sp, #4]
   2f418:	ldr	r1, [fp, #-8]
   2f41c:	ldr	r1, [r1, #20]
   2f420:	cmp	r0, r1
   2f424:	bls	2f464 <flatcc_emitter@@Base+0x3b4>
   2f428:	ldr	r0, [fp, #-8]
   2f42c:	ldr	r0, [r0, #20]
   2f430:	str	r0, [sp, #4]
   2f434:	ldr	r0, [sp, #4]
   2f438:	cmp	r0, #0
   2f43c:	bne	2f460 <flatcc_emitter@@Base+0x3b0>
   2f440:	ldr	r0, [fp, #-8]
   2f444:	bl	2f824 <flatcc_emitter_copy_buffer@@Base+0x34c>
   2f448:	cmp	r0, #0
   2f44c:	beq	2f45c <flatcc_emitter@@Base+0x3ac>
   2f450:	mvn	r0, #0
   2f454:	str	r0, [fp, #-4]
   2f458:	b	2f4cc <flatcc_emitter@@Base+0x41c>
   2f45c:	b	2f400 <flatcc_emitter@@Base+0x350>
   2f460:	b	2f464 <flatcc_emitter@@Base+0x3b4>
   2f464:	ldr	r0, [fp, #-8]
   2f468:	ldr	r0, [r0, #16]
   2f46c:	ldr	r1, [sp, #12]
   2f470:	ldr	r2, [sp, #4]
   2f474:	bl	14e30 <memcpy@plt>
   2f478:	ldr	r0, [sp, #4]
   2f47c:	ldr	r1, [sp, #8]
   2f480:	sub	r0, r1, r0
   2f484:	str	r0, [sp, #8]
   2f488:	ldr	r0, [sp, #4]
   2f48c:	ldr	r1, [sp, #12]
   2f490:	add	r0, r1, r0
   2f494:	str	r0, [sp, #12]
   2f498:	ldr	r0, [sp, #4]
   2f49c:	ldr	r1, [fp, #-8]
   2f4a0:	ldr	r2, [r1, #16]
   2f4a4:	add	r0, r2, r0
   2f4a8:	str	r0, [r1, #16]
   2f4ac:	ldr	r0, [sp, #4]
   2f4b0:	ldr	r1, [fp, #-8]
   2f4b4:	ldr	r2, [r1, #20]
   2f4b8:	sub	r0, r2, r0
   2f4bc:	str	r0, [r1, #20]
   2f4c0:	b	2f400 <flatcc_emitter@@Base+0x350>
   2f4c4:	movw	r0, #0
   2f4c8:	str	r0, [fp, #-4]
   2f4cc:	ldr	r0, [fp, #-4]
   2f4d0:	mov	sp, fp
   2f4d4:	pop	{fp, pc}

0002f4d8 <flatcc_emitter_copy_buffer@@Base>:
   2f4d8:	push	{fp, lr}
   2f4dc:	mov	fp, sp
   2f4e0:	sub	sp, sp, #24
   2f4e4:	str	r0, [fp, #-8]
   2f4e8:	str	r1, [sp, #12]
   2f4ec:	str	r2, [sp, #8]
   2f4f0:	ldr	r0, [sp, #8]
   2f4f4:	ldr	r1, [fp, #-8]
   2f4f8:	ldr	r1, [r1, #24]
   2f4fc:	cmp	r0, r1
   2f500:	bcs	2f510 <flatcc_emitter_copy_buffer@@Base+0x38>
   2f504:	movw	r0, #0
   2f508:	str	r0, [fp, #-4]
   2f50c:	b	2f618 <flatcc_emitter_copy_buffer@@Base+0x140>
   2f510:	ldr	r0, [fp, #-8]
   2f514:	ldr	r0, [r0]
   2f518:	movw	r1, #0
   2f51c:	cmp	r0, r1
   2f520:	bne	2f530 <flatcc_emitter_copy_buffer@@Base+0x58>
   2f524:	movw	r0, #0
   2f528:	str	r0, [fp, #-4]
   2f52c:	b	2f618 <flatcc_emitter_copy_buffer@@Base+0x140>
   2f530:	ldr	r0, [fp, #-8]
   2f534:	ldr	r0, [r0]
   2f538:	ldr	r1, [fp, #-8]
   2f53c:	ldr	r1, [r1, #4]
   2f540:	cmp	r0, r1
   2f544:	bne	2f56c <flatcc_emitter_copy_buffer@@Base+0x94>
   2f548:	ldr	r0, [sp, #12]
   2f54c:	ldr	r1, [fp, #-8]
   2f550:	ldr	r1, [r1, #8]
   2f554:	ldr	r2, [fp, #-8]
   2f558:	ldr	r2, [r2, #24]
   2f55c:	bl	14e30 <memcpy@plt>
   2f560:	ldr	r0, [sp, #12]
   2f564:	str	r0, [fp, #-4]
   2f568:	b	2f618 <flatcc_emitter_copy_buffer@@Base+0x140>
   2f56c:	ldr	r0, [fp, #-8]
   2f570:	ldr	r0, [r0, #12]
   2f574:	movw	r1, #2944	; 0xb80
   2f578:	sub	r0, r1, r0
   2f57c:	str	r0, [sp]
   2f580:	ldr	r0, [sp, #12]
   2f584:	ldr	r1, [fp, #-8]
   2f588:	ldr	r1, [r1, #8]
   2f58c:	ldr	r2, [sp]
   2f590:	bl	14e30 <memcpy@plt>
   2f594:	ldr	r0, [sp, #12]
   2f598:	ldr	r1, [sp]
   2f59c:	add	r0, r0, r1
   2f5a0:	str	r0, [sp, #12]
   2f5a4:	ldr	r0, [fp, #-8]
   2f5a8:	ldr	r0, [r0]
   2f5ac:	ldr	r0, [r0, #2944]	; 0xb80
   2f5b0:	str	r0, [sp, #4]
   2f5b4:	ldr	r0, [sp, #4]
   2f5b8:	ldr	r1, [fp, #-8]
   2f5bc:	ldr	r1, [r1, #4]
   2f5c0:	cmp	r0, r1
   2f5c4:	beq	2f5f4 <flatcc_emitter_copy_buffer@@Base+0x11c>
   2f5c8:	ldr	r0, [sp, #12]
   2f5cc:	ldr	r1, [sp, #4]
   2f5d0:	movw	r2, #2944	; 0xb80
   2f5d4:	bl	14e30 <memcpy@plt>
   2f5d8:	ldr	r0, [sp, #12]
   2f5dc:	add	r0, r0, #2944	; 0xb80
   2f5e0:	str	r0, [sp, #12]
   2f5e4:	ldr	r0, [sp, #4]
   2f5e8:	ldr	r0, [r0, #2944]	; 0xb80
   2f5ec:	str	r0, [sp, #4]
   2f5f0:	b	2f5b4 <flatcc_emitter_copy_buffer@@Base+0xdc>
   2f5f4:	ldr	r0, [sp, #12]
   2f5f8:	ldr	r1, [sp, #4]
   2f5fc:	ldr	r2, [fp, #-8]
   2f600:	ldr	r2, [r2, #20]
   2f604:	movw	r3, #2944	; 0xb80
   2f608:	sub	r2, r3, r2
   2f60c:	bl	14e30 <memcpy@plt>
   2f610:	ldr	r0, [sp, #12]
   2f614:	str	r0, [fp, #-4]
   2f618:	ldr	r0, [fp, #-4]
   2f61c:	mov	sp, fp
   2f620:	pop	{fp, pc}
   2f624:	push	{fp, lr}
   2f628:	mov	fp, sp
   2f62c:	sub	sp, sp, #16
   2f630:	str	r0, [sp, #8]
   2f634:	movw	r0, #0
   2f638:	str	r0, [sp, #4]
   2f63c:	ldr	r1, [sp, #8]
   2f640:	ldr	r1, [r1]
   2f644:	cmp	r1, r0
   2f648:	beq	2f6a0 <flatcc_emitter_copy_buffer@@Base+0x1c8>
   2f64c:	ldr	r0, [sp, #8]
   2f650:	ldr	r0, [r0]
   2f654:	ldr	r0, [r0, #2948]	; 0xb84
   2f658:	ldr	r1, [sp, #8]
   2f65c:	ldr	r1, [r1, #4]
   2f660:	cmp	r0, r1
   2f664:	beq	2f6a0 <flatcc_emitter_copy_buffer@@Base+0x1c8>
   2f668:	ldr	r0, [sp, #8]
   2f66c:	ldr	r0, [r0]
   2f670:	ldr	r0, [r0, #2952]	; 0xb88
   2f674:	sub	r0, r0, #2944	; 0xb80
   2f678:	ldr	r1, [sp, #8]
   2f67c:	ldr	r1, [r1]
   2f680:	ldr	r1, [r1, #2948]	; 0xb84
   2f684:	str	r0, [r1, #2952]	; 0xb88
   2f688:	ldr	r0, [sp, #8]
   2f68c:	ldr	r0, [r0]
   2f690:	ldr	r0, [r0, #2948]	; 0xb84
   2f694:	ldr	r1, [sp, #8]
   2f698:	str	r0, [r1]
   2f69c:	b	2f7d0 <flatcc_emitter_copy_buffer@@Base+0x2f8>
   2f6a0:	movw	r0, #2956	; 0xb8c
   2f6a4:	bl	14e78 <malloc@plt>
   2f6a8:	str	r0, [sp, #4]
   2f6ac:	movw	lr, #0
   2f6b0:	cmp	r0, lr
   2f6b4:	bne	2f6c4 <flatcc_emitter_copy_buffer@@Base+0x1ec>
   2f6b8:	mvn	r0, #0
   2f6bc:	str	r0, [fp, #-4]
   2f6c0:	b	2f818 <flatcc_emitter_copy_buffer@@Base+0x340>
   2f6c4:	ldr	r0, [sp, #8]
   2f6c8:	ldr	r1, [r0, #28]
   2f6cc:	add	r1, r1, #2944	; 0xb80
   2f6d0:	str	r1, [r0, #28]
   2f6d4:	ldr	r0, [sp, #8]
   2f6d8:	ldr	r0, [r0]
   2f6dc:	movw	r1, #0
   2f6e0:	cmp	r0, r1
   2f6e4:	beq	2f738 <flatcc_emitter_copy_buffer@@Base+0x260>
   2f6e8:	ldr	r0, [sp, #8]
   2f6ec:	ldr	r0, [r0, #4]
   2f6f0:	ldr	r1, [sp, #4]
   2f6f4:	str	r0, [r1, #2948]	; 0xb84
   2f6f8:	ldr	r0, [sp, #8]
   2f6fc:	ldr	r0, [r0]
   2f700:	ldr	r1, [sp, #4]
   2f704:	str	r0, [r1, #2944]	; 0xb80
   2f708:	ldr	r0, [sp, #4]
   2f70c:	ldr	r1, [sp, #8]
   2f710:	ldr	r1, [r1]
   2f714:	str	r0, [r1, #2948]	; 0xb84
   2f718:	ldr	r0, [sp, #4]
   2f71c:	ldr	r1, [sp, #8]
   2f720:	ldr	r1, [r1, #4]
   2f724:	str	r0, [r1, #2944]	; 0xb80
   2f728:	ldr	r0, [sp, #4]
   2f72c:	ldr	r1, [sp, #8]
   2f730:	str	r0, [r1]
   2f734:	b	2f7d0 <flatcc_emitter_copy_buffer@@Base+0x2f8>
   2f738:	ldr	r0, [sp, #4]
   2f73c:	ldr	r1, [sp, #8]
   2f740:	str	r0, [r1]
   2f744:	ldr	r0, [sp, #4]
   2f748:	ldr	r1, [sp, #8]
   2f74c:	str	r0, [r1, #4]
   2f750:	ldr	r0, [sp, #4]
   2f754:	ldr	r1, [sp, #4]
   2f758:	str	r0, [r1, #2944]	; 0xb80
   2f75c:	ldr	r0, [sp, #4]
   2f760:	ldr	r1, [sp, #4]
   2f764:	str	r0, [r1, #2948]	; 0xb84
   2f768:	ldr	r0, [sp, #8]
   2f76c:	ldr	r0, [r0]
   2f770:	add	r0, r0, #1472	; 0x5c0
   2f774:	ldr	r1, [sp, #8]
   2f778:	str	r0, [r1, #8]
   2f77c:	ldr	r0, [sp, #8]
   2f780:	ldr	r0, [r0, #8]
   2f784:	ldr	r1, [sp, #8]
   2f788:	str	r0, [r1, #16]
   2f78c:	ldr	r0, [sp, #8]
   2f790:	movw	r1, #1472	; 0x5c0
   2f794:	str	r1, [r0, #12]
   2f798:	ldr	r0, [sp, #8]
   2f79c:	ldr	r0, [r0, #12]
   2f7a0:	movw	r1, #2944	; 0xb80
   2f7a4:	sub	r0, r1, r0
   2f7a8:	ldr	r1, [sp, #8]
   2f7ac:	str	r0, [r1, #20]
   2f7b0:	ldr	r0, [sp, #8]
   2f7b4:	ldr	r0, [r0, #12]
   2f7b8:	movw	r1, #0
   2f7bc:	sub	r0, r1, r0
   2f7c0:	ldr	r2, [sp, #4]
   2f7c4:	str	r0, [r2, #2952]	; 0xb88
   2f7c8:	str	r1, [fp, #-4]
   2f7cc:	b	2f818 <flatcc_emitter_copy_buffer@@Base+0x340>
   2f7d0:	ldr	r0, [sp, #8]
   2f7d4:	ldr	r0, [r0]
   2f7d8:	add	r0, r0, #2944	; 0xb80
   2f7dc:	ldr	r1, [sp, #8]
   2f7e0:	str	r0, [r1, #8]
   2f7e4:	ldr	r0, [sp, #8]
   2f7e8:	movw	r1, #2944	; 0xb80
   2f7ec:	str	r1, [r0, #12]
   2f7f0:	ldr	r0, [sp, #8]
   2f7f4:	ldr	r0, [r0]
   2f7f8:	ldr	r0, [r0, #2944]	; 0xb80
   2f7fc:	ldr	r0, [r0, #2952]	; 0xb88
   2f800:	sub	r0, r0, #2944	; 0xb80
   2f804:	ldr	r1, [sp, #8]
   2f808:	ldr	r1, [r1]
   2f80c:	str	r0, [r1, #2952]	; 0xb88
   2f810:	movw	r0, #0
   2f814:	str	r0, [fp, #-4]
   2f818:	ldr	r0, [fp, #-4]
   2f81c:	mov	sp, fp
   2f820:	pop	{fp, pc}
   2f824:	push	{fp, lr}
   2f828:	mov	fp, sp
   2f82c:	sub	sp, sp, #16
   2f830:	str	r0, [sp, #8]
   2f834:	movw	r0, #0
   2f838:	str	r0, [sp, #4]
   2f83c:	ldr	r1, [sp, #8]
   2f840:	ldr	r1, [r1, #4]
   2f844:	cmp	r1, r0
   2f848:	beq	2f880 <flatcc_emitter_copy_buffer@@Base+0x3a8>
   2f84c:	ldr	r0, [sp, #8]
   2f850:	ldr	r0, [r0, #4]
   2f854:	ldr	r0, [r0, #2944]	; 0xb80
   2f858:	ldr	r1, [sp, #8]
   2f85c:	ldr	r1, [r1]
   2f860:	cmp	r0, r1
   2f864:	beq	2f880 <flatcc_emitter_copy_buffer@@Base+0x3a8>
   2f868:	ldr	r0, [sp, #8]
   2f86c:	ldr	r0, [r0, #4]
   2f870:	ldr	r0, [r0, #2944]	; 0xb80
   2f874:	ldr	r1, [sp, #8]
   2f878:	str	r0, [r1, #4]
   2f87c:	b	2f9b0 <flatcc_emitter_copy_buffer@@Base+0x4d8>
   2f880:	movw	r0, #2956	; 0xb8c
   2f884:	bl	14e78 <malloc@plt>
   2f888:	str	r0, [sp, #4]
   2f88c:	movw	lr, #0
   2f890:	cmp	r0, lr
   2f894:	bne	2f8a4 <flatcc_emitter_copy_buffer@@Base+0x3cc>
   2f898:	mvn	r0, #0
   2f89c:	str	r0, [fp, #-4]
   2f8a0:	b	2f9f4 <flatcc_emitter_copy_buffer@@Base+0x51c>
   2f8a4:	ldr	r0, [sp, #8]
   2f8a8:	ldr	r1, [r0, #28]
   2f8ac:	add	r1, r1, #2944	; 0xb80
   2f8b0:	str	r1, [r0, #28]
   2f8b4:	ldr	r0, [sp, #8]
   2f8b8:	ldr	r0, [r0, #4]
   2f8bc:	movw	r1, #0
   2f8c0:	cmp	r0, r1
   2f8c4:	beq	2f918 <flatcc_emitter_copy_buffer@@Base+0x440>
   2f8c8:	ldr	r0, [sp, #8]
   2f8cc:	ldr	r0, [r0, #4]
   2f8d0:	ldr	r1, [sp, #4]
   2f8d4:	str	r0, [r1, #2948]	; 0xb84
   2f8d8:	ldr	r0, [sp, #8]
   2f8dc:	ldr	r0, [r0]
   2f8e0:	ldr	r1, [sp, #4]
   2f8e4:	str	r0, [r1, #2944]	; 0xb80
   2f8e8:	ldr	r0, [sp, #4]
   2f8ec:	ldr	r1, [sp, #8]
   2f8f0:	ldr	r1, [r1]
   2f8f4:	str	r0, [r1, #2948]	; 0xb84
   2f8f8:	ldr	r0, [sp, #4]
   2f8fc:	ldr	r1, [sp, #8]
   2f900:	ldr	r1, [r1, #4]
   2f904:	str	r0, [r1, #2944]	; 0xb80
   2f908:	ldr	r0, [sp, #4]
   2f90c:	ldr	r1, [sp, #8]
   2f910:	str	r0, [r1, #4]
   2f914:	b	2f9b0 <flatcc_emitter_copy_buffer@@Base+0x4d8>
   2f918:	ldr	r0, [sp, #4]
   2f91c:	ldr	r1, [sp, #8]
   2f920:	str	r0, [r1]
   2f924:	ldr	r0, [sp, #4]
   2f928:	ldr	r1, [sp, #8]
   2f92c:	str	r0, [r1, #4]
   2f930:	ldr	r0, [sp, #4]
   2f934:	ldr	r1, [sp, #4]
   2f938:	str	r0, [r1, #2944]	; 0xb80
   2f93c:	ldr	r0, [sp, #4]
   2f940:	ldr	r1, [sp, #4]
   2f944:	str	r0, [r1, #2948]	; 0xb84
   2f948:	ldr	r0, [sp, #8]
   2f94c:	ldr	r0, [r0]
   2f950:	add	r0, r0, #1472	; 0x5c0
   2f954:	ldr	r1, [sp, #8]
   2f958:	str	r0, [r1, #8]
   2f95c:	ldr	r0, [sp, #8]
   2f960:	ldr	r0, [r0, #8]
   2f964:	ldr	r1, [sp, #8]
   2f968:	str	r0, [r1, #16]
   2f96c:	ldr	r0, [sp, #8]
   2f970:	movw	r1, #1472	; 0x5c0
   2f974:	str	r1, [r0, #12]
   2f978:	ldr	r0, [sp, #8]
   2f97c:	ldr	r0, [r0, #12]
   2f980:	movw	r1, #2944	; 0xb80
   2f984:	sub	r0, r1, r0
   2f988:	ldr	r1, [sp, #8]
   2f98c:	str	r0, [r1, #20]
   2f990:	ldr	r0, [sp, #8]
   2f994:	ldr	r0, [r0, #12]
   2f998:	movw	r1, #0
   2f99c:	sub	r0, r1, r0
   2f9a0:	ldr	r2, [sp, #4]
   2f9a4:	str	r0, [r2, #2952]	; 0xb88
   2f9a8:	str	r1, [fp, #-4]
   2f9ac:	b	2f9f4 <flatcc_emitter_copy_buffer@@Base+0x51c>
   2f9b0:	ldr	r0, [sp, #8]
   2f9b4:	ldr	r0, [r0, #4]
   2f9b8:	ldr	r1, [sp, #8]
   2f9bc:	str	r0, [r1, #16]
   2f9c0:	ldr	r0, [sp, #8]
   2f9c4:	movw	r1, #2944	; 0xb80
   2f9c8:	str	r1, [r0, #20]
   2f9cc:	ldr	r0, [sp, #8]
   2f9d0:	ldr	r0, [r0, #4]
   2f9d4:	ldr	r0, [r0, #2948]	; 0xb84
   2f9d8:	ldr	r0, [r0, #2952]	; 0xb88
   2f9dc:	add	r0, r0, #2944	; 0xb80
   2f9e0:	ldr	r1, [sp, #8]
   2f9e4:	ldr	r1, [r1, #4]
   2f9e8:	str	r0, [r1, #2952]	; 0xb88
   2f9ec:	movw	r0, #0
   2f9f0:	str	r0, [fp, #-4]
   2f9f4:	ldr	r0, [fp, #-4]
   2f9f8:	mov	sp, fp
   2f9fc:	pop	{fp, pc}

0002fa00 <flatcc_verify_error_string@@Base>:
   2fa00:	sub	sp, sp, #12
   2fa04:	str	r0, [sp, #4]
   2fa08:	ldr	r0, [sp, #4]
   2fa0c:	cmp	r0, #36	; 0x24
   2fa10:	str	r0, [sp]
   2fa14:	bhi	2fd0c <flatcc_verify_error_string@@Base+0x30c>
   2fa18:	add	r0, pc, #8
   2fa1c:	ldr	r1, [sp]
   2fa20:	ldr	r2, [r0, r1, lsl #2]
   2fa24:	add	pc, r0, r2
   2fa28:	muleq	r0, r4, r0
   2fa2c:	andeq	r0, r0, r4, lsr #1
   2fa30:	strheq	r0, [r0], -r4
   2fa34:	andeq	r0, r0, r4, asr #1
   2fa38:	ldrdeq	r0, [r0], -r4
   2fa3c:	andeq	r0, r0, r4, ror #1
   2fa40:	strdeq	r0, [r0], -r4
   2fa44:	andeq	r0, r0, r4, lsl #2
   2fa48:	andeq	r0, r0, r4, lsl r1
   2fa4c:	andeq	r0, r0, r4, lsr #2
   2fa50:	andeq	r0, r0, r4, lsr r1
   2fa54:	andeq	r0, r0, r4, asr #2
   2fa58:	andeq	r0, r0, r4, asr r1
   2fa5c:	andeq	r0, r0, r4, ror #2
   2fa60:	andeq	r0, r0, r4, ror r1
   2fa64:	andeq	r0, r0, r4, lsl #3
   2fa68:	muleq	r0, r4, r1
   2fa6c:	andeq	r0, r0, r4, lsr #3
   2fa70:			; <UNDEFINED> instruction: 0x000001b4
   2fa74:	andeq	r0, r0, r4, asr #3
   2fa78:	ldrdeq	r0, [r0], -r4
   2fa7c:	andeq	r0, r0, r4, ror #3
   2fa80:	strdeq	r0, [r0], -r4
   2fa84:	andeq	r0, r0, r4, lsl #4
   2fa88:	andeq	r0, r0, r4, lsl r2
   2fa8c:	andeq	r0, r0, r4, lsr #4
   2fa90:	andeq	r0, r0, r4, lsr r2
   2fa94:	andeq	r0, r0, r4, asr #4
   2fa98:	andeq	r0, r0, r4, asr r2
   2fa9c:	andeq	r0, r0, r4, ror #4
   2faa0:	andeq	r0, r0, r4, ror r2
   2faa4:	andeq	r0, r0, r4, lsl #5
   2faa8:	muleq	r0, r4, r2
   2faac:	andeq	r0, r0, r4, lsr #5
   2fab0:			; <UNDEFINED> instruction: 0x000002b4
   2fab4:	andeq	r0, r0, r4, asr #5
   2fab8:	ldrdeq	r0, [r0], -r4
   2fabc:	ldr	r0, [pc, #752]	; 2fdb4 <flatcc_verify_error_string@@Base+0x3b4>
   2fac0:	add	r0, pc, r0
   2fac4:	str	r0, [sp, #8]
   2fac8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2facc:	ldr	r0, [pc, #732]	; 2fdb0 <flatcc_verify_error_string@@Base+0x3b0>
   2fad0:	add	r0, pc, r0
   2fad4:	str	r0, [sp, #8]
   2fad8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fadc:	ldr	r0, [pc, #712]	; 2fdac <flatcc_verify_error_string@@Base+0x3ac>
   2fae0:	add	r0, pc, r0
   2fae4:	str	r0, [sp, #8]
   2fae8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2faec:	ldr	r0, [pc, #692]	; 2fda8 <flatcc_verify_error_string@@Base+0x3a8>
   2faf0:	add	r0, pc, r0
   2faf4:	str	r0, [sp, #8]
   2faf8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fafc:	ldr	r0, [pc, #672]	; 2fda4 <flatcc_verify_error_string@@Base+0x3a4>
   2fb00:	add	r0, pc, r0
   2fb04:	str	r0, [sp, #8]
   2fb08:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fb0c:	ldr	r0, [pc, #652]	; 2fda0 <flatcc_verify_error_string@@Base+0x3a0>
   2fb10:	add	r0, pc, r0
   2fb14:	str	r0, [sp, #8]
   2fb18:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fb1c:	ldr	r0, [pc, #632]	; 2fd9c <flatcc_verify_error_string@@Base+0x39c>
   2fb20:	add	r0, pc, r0
   2fb24:	str	r0, [sp, #8]
   2fb28:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fb2c:	ldr	r0, [pc, #612]	; 2fd98 <flatcc_verify_error_string@@Base+0x398>
   2fb30:	add	r0, pc, r0
   2fb34:	str	r0, [sp, #8]
   2fb38:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fb3c:	ldr	r0, [pc, #592]	; 2fd94 <flatcc_verify_error_string@@Base+0x394>
   2fb40:	add	r0, pc, r0
   2fb44:	str	r0, [sp, #8]
   2fb48:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fb4c:	ldr	r0, [pc, #572]	; 2fd90 <flatcc_verify_error_string@@Base+0x390>
   2fb50:	add	r0, pc, r0
   2fb54:	str	r0, [sp, #8]
   2fb58:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fb5c:	ldr	r0, [pc, #552]	; 2fd8c <flatcc_verify_error_string@@Base+0x38c>
   2fb60:	add	r0, pc, r0
   2fb64:	str	r0, [sp, #8]
   2fb68:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fb6c:	ldr	r0, [pc, #532]	; 2fd88 <flatcc_verify_error_string@@Base+0x388>
   2fb70:	add	r0, pc, r0
   2fb74:	str	r0, [sp, #8]
   2fb78:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fb7c:	ldr	r0, [pc, #512]	; 2fd84 <flatcc_verify_error_string@@Base+0x384>
   2fb80:	add	r0, pc, r0
   2fb84:	str	r0, [sp, #8]
   2fb88:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fb8c:	ldr	r0, [pc, #492]	; 2fd80 <flatcc_verify_error_string@@Base+0x380>
   2fb90:	add	r0, pc, r0
   2fb94:	str	r0, [sp, #8]
   2fb98:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fb9c:	ldr	r0, [pc, #472]	; 2fd7c <flatcc_verify_error_string@@Base+0x37c>
   2fba0:	add	r0, pc, r0
   2fba4:	str	r0, [sp, #8]
   2fba8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fbac:	ldr	r0, [pc, #452]	; 2fd78 <flatcc_verify_error_string@@Base+0x378>
   2fbb0:	add	r0, pc, r0
   2fbb4:	str	r0, [sp, #8]
   2fbb8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fbbc:	ldr	r0, [pc, #432]	; 2fd74 <flatcc_verify_error_string@@Base+0x374>
   2fbc0:	add	r0, pc, r0
   2fbc4:	str	r0, [sp, #8]
   2fbc8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fbcc:	ldr	r0, [pc, #412]	; 2fd70 <flatcc_verify_error_string@@Base+0x370>
   2fbd0:	add	r0, pc, r0
   2fbd4:	str	r0, [sp, #8]
   2fbd8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fbdc:	ldr	r0, [pc, #392]	; 2fd6c <flatcc_verify_error_string@@Base+0x36c>
   2fbe0:	add	r0, pc, r0
   2fbe4:	str	r0, [sp, #8]
   2fbe8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fbec:	ldr	r0, [pc, #372]	; 2fd68 <flatcc_verify_error_string@@Base+0x368>
   2fbf0:	add	r0, pc, r0
   2fbf4:	str	r0, [sp, #8]
   2fbf8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fbfc:	ldr	r0, [pc, #352]	; 2fd64 <flatcc_verify_error_string@@Base+0x364>
   2fc00:	add	r0, pc, r0
   2fc04:	str	r0, [sp, #8]
   2fc08:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fc0c:	ldr	r0, [pc, #332]	; 2fd60 <flatcc_verify_error_string@@Base+0x360>
   2fc10:	add	r0, pc, r0
   2fc14:	str	r0, [sp, #8]
   2fc18:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fc1c:	ldr	r0, [pc, #312]	; 2fd5c <flatcc_verify_error_string@@Base+0x35c>
   2fc20:	add	r0, pc, r0
   2fc24:	str	r0, [sp, #8]
   2fc28:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fc2c:	ldr	r0, [pc, #292]	; 2fd58 <flatcc_verify_error_string@@Base+0x358>
   2fc30:	add	r0, pc, r0
   2fc34:	str	r0, [sp, #8]
   2fc38:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fc3c:	ldr	r0, [pc, #272]	; 2fd54 <flatcc_verify_error_string@@Base+0x354>
   2fc40:	add	r0, pc, r0
   2fc44:	str	r0, [sp, #8]
   2fc48:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fc4c:	ldr	r0, [pc, #252]	; 2fd50 <flatcc_verify_error_string@@Base+0x350>
   2fc50:	add	r0, pc, r0
   2fc54:	str	r0, [sp, #8]
   2fc58:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fc5c:	ldr	r0, [pc, #232]	; 2fd4c <flatcc_verify_error_string@@Base+0x34c>
   2fc60:	add	r0, pc, r0
   2fc64:	str	r0, [sp, #8]
   2fc68:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fc6c:	ldr	r0, [pc, #212]	; 2fd48 <flatcc_verify_error_string@@Base+0x348>
   2fc70:	add	r0, pc, r0
   2fc74:	str	r0, [sp, #8]
   2fc78:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fc7c:	ldr	r0, [pc, #192]	; 2fd44 <flatcc_verify_error_string@@Base+0x344>
   2fc80:	add	r0, pc, r0
   2fc84:	str	r0, [sp, #8]
   2fc88:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fc8c:	ldr	r0, [pc, #172]	; 2fd40 <flatcc_verify_error_string@@Base+0x340>
   2fc90:	add	r0, pc, r0
   2fc94:	str	r0, [sp, #8]
   2fc98:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fc9c:	ldr	r0, [pc, #152]	; 2fd3c <flatcc_verify_error_string@@Base+0x33c>
   2fca0:	add	r0, pc, r0
   2fca4:	str	r0, [sp, #8]
   2fca8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fcac:	ldr	r0, [pc, #132]	; 2fd38 <flatcc_verify_error_string@@Base+0x338>
   2fcb0:	add	r0, pc, r0
   2fcb4:	str	r0, [sp, #8]
   2fcb8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fcbc:	ldr	r0, [pc, #112]	; 2fd34 <flatcc_verify_error_string@@Base+0x334>
   2fcc0:	add	r0, pc, r0
   2fcc4:	str	r0, [sp, #8]
   2fcc8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fccc:	ldr	r0, [pc, #92]	; 2fd30 <flatcc_verify_error_string@@Base+0x330>
   2fcd0:	add	r0, pc, r0
   2fcd4:	str	r0, [sp, #8]
   2fcd8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fcdc:	ldr	r0, [pc, #72]	; 2fd2c <flatcc_verify_error_string@@Base+0x32c>
   2fce0:	add	r0, pc, r0
   2fce4:	str	r0, [sp, #8]
   2fce8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fcec:	ldr	r0, [pc, #52]	; 2fd28 <flatcc_verify_error_string@@Base+0x328>
   2fcf0:	add	r0, pc, r0
   2fcf4:	str	r0, [sp, #8]
   2fcf8:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fcfc:	ldr	r0, [pc, #32]	; 2fd24 <flatcc_verify_error_string@@Base+0x324>
   2fd00:	add	r0, pc, r0
   2fd04:	str	r0, [sp, #8]
   2fd08:	b	2fd18 <flatcc_verify_error_string@@Base+0x318>
   2fd0c:	ldr	r0, [pc, #164]	; 2fdb8 <flatcc_verify_error_string@@Base+0x3b8>
   2fd10:	add	r0, pc, r0
   2fd14:	str	r0, [sp, #8]
   2fd18:	ldr	r0, [sp, #8]
   2fd1c:	add	sp, sp, #12
   2fd20:	bx	lr
   2fd24:	andeq	fp, r1, r1, asr #6
   2fd28:	andeq	fp, r1, r7, lsr r3
   2fd2c:	andeq	fp, r1, r3, lsl r3
   2fd30:	strdeq	fp, [r1], -lr
   2fd34:	andeq	fp, r1, r7, ror #5
   2fd38:	andeq	fp, r1, r2, ror #5
   2fd3c:	andeq	fp, r1, ip, asr #5
   2fd40:			; <UNDEFINED> instruction: 0x0001b2b4
   2fd44:	andeq	fp, r1, ip, lsr #5
   2fd48:	andeq	fp, r1, r1, lsr #5
   2fd4c:	muleq	r1, sp, r2
   2fd50:	andeq	fp, r1, lr, ror r2
   2fd54:	andeq	fp, r1, r5, ror #4
   2fd58:	andeq	fp, r1, ip, asr #4
   2fd5c:	andeq	fp, r1, r9, lsr #4
   2fd60:	andeq	fp, r1, sp, lsl #4
   2fd64:	andeq	fp, r1, r5, lsl #4
   2fd68:	andeq	fp, r1, r5, asr r3
   2fd6c:	andeq	fp, r1, r1, lsl r2
   2fd70:	strdeq	fp, [r1], -r9
   2fd74:	andeq	fp, r1, r1, ror #3
   2fd78:	andeq	fp, r1, sl, asr #3
   2fd7c:	andeq	fp, r1, r0, asr #3
   2fd80:			; <UNDEFINED> instruction: 0x0001b1b7
   2fd84:	andeq	fp, r1, pc, lsr #3
   2fd88:	andeq	fp, r1, lr, lsr #3
   2fd8c:	andeq	fp, r1, r9, lsr #3
   2fd90:	andeq	fp, r1, r5, lsr #3
   2fd94:	andeq	fp, r1, r1, lsr #3
   2fd98:	muleq	r1, r6, r1
   2fd9c:	andeq	fp, r1, r7, lsl #3
   2fda0:	andeq	fp, r1, r4, ror r1
   2fda4:	andeq	fp, r1, sp, ror #2
   2fda8:	andeq	fp, r1, r3, ror #2
   2fdac:	andeq	fp, r1, pc, asr r1
   2fdb0:	andeq	fp, r1, r7, asr r1
   2fdb4:	andeq	fp, r1, r4, ror #2
   2fdb8:	andeq	fp, r1, pc, lsr r3

0002fdbc <flatcc_verify_field@@Base>:
   2fdbc:	push	{fp, lr}
   2fdc0:	mov	fp, sp
   2fdc4:	sub	sp, sp, #24
   2fdc8:	str	r0, [fp, #-8]
   2fdcc:	strh	r1, [fp, #-10]
   2fdd0:	str	r2, [sp, #8]
   2fdd4:	strh	r3, [sp, #6]
   2fdd8:	ldr	r0, [fp, #-8]
   2fddc:	ldrh	r1, [fp, #-10]
   2fde0:	ldr	r3, [sp, #8]
   2fde4:	uxth	r1, r1
   2fde8:	movw	r2, #0
   2fdec:	ldrh	ip, [sp, #6]
   2fdf0:	str	ip, [sp]
   2fdf4:	bl	2fe3c <flatcc_verify_field@@Base+0x80>
   2fdf8:	cmp	r0, #0
   2fdfc:	beq	2fe28 <flatcc_verify_field@@Base+0x6c>
   2fe00:	ldr	r0, [fp, #-8]
   2fe04:	ldrh	r1, [fp, #-10]
   2fe08:	ldr	r3, [sp, #8]
   2fe0c:	uxth	r1, r1
   2fe10:	movw	r2, #0
   2fe14:	ldrh	ip, [sp, #6]
   2fe18:	str	ip, [sp]
   2fe1c:	bl	2fe3c <flatcc_verify_field@@Base+0x80>
   2fe20:	str	r0, [fp, #-4]
   2fe24:	b	2fe30 <flatcc_verify_field@@Base+0x74>
   2fe28:	movw	r0, #0
   2fe2c:	str	r0, [fp, #-4]
   2fe30:	ldr	r0, [fp, #-4]
   2fe34:	mov	sp, fp
   2fe38:	pop	{fp, pc}
   2fe3c:	push	{fp, lr}
   2fe40:	mov	fp, sp
   2fe44:	sub	sp, sp, #56	; 0x38
   2fe48:	ldr	ip, [fp, #8]
   2fe4c:	str	r0, [fp, #-8]
   2fe50:	strh	r1, [fp, #-10]
   2fe54:	str	r2, [fp, #-16]
   2fe58:	str	r3, [fp, #-20]	; 0xffffffec
   2fe5c:	strh	ip, [fp, #-22]	; 0xffffffea
   2fe60:	ldr	r0, [fp, #-8]
   2fe64:	ldr	r0, [r0]
   2fe68:	str	r0, [sp, #16]
   2fe6c:	ldr	r0, [fp, #-8]
   2fe70:	ldrh	r1, [fp, #-10]
   2fe74:	bl	31cd0 <flatcc_verify_union_field@@Base+0x290>
   2fe78:	strh	r0, [sp, #22]
   2fe7c:	ldrsh	r0, [sp, #22]
   2fe80:	cmp	r0, #0
   2fe84:	bne	2fed4 <flatcc_verify_field@@Base+0x118>
   2fe88:	b	2fe8c <flatcc_verify_field@@Base+0xd0>
   2fe8c:	ldr	r0, [fp, #-16]
   2fe90:	cmp	r0, #0
   2fe94:	movw	r0, #0
   2fe98:	movne	r0, #1
   2fe9c:	mvn	r1, #0
   2fea0:	eor	r0, r0, r1
   2fea4:	and	r0, r0, #1
   2fea8:	str	r0, [sp, #12]
   2feac:	ldr	r0, [sp, #12]
   2feb0:	cmp	r0, #0
   2feb4:	bne	2fec4 <flatcc_verify_field@@Base+0x108>
   2feb8:	movw	r0, #4
   2febc:	str	r0, [fp, #-4]
   2fec0:	b	2ffbc <flatcc_verify_field@@Base+0x200>
   2fec4:	b	2fec8 <flatcc_verify_field@@Base+0x10c>
   2fec8:	movw	r0, #0
   2fecc:	str	r0, [fp, #-4]
   2fed0:	b	2ffbc <flatcc_verify_field@@Base+0x200>
   2fed4:	ldrh	r0, [sp, #22]
   2fed8:	str	r0, [sp, #28]
   2fedc:	ldr	r0, [sp, #28]
   2fee0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2fee4:	add	r0, r0, r1
   2fee8:	str	r0, [sp, #24]
   2feec:	ldr	r0, [sp, #24]
   2fef0:	ldr	r1, [fp, #-8]
   2fef4:	ldrh	r1, [r1, #20]
   2fef8:	cmp	r0, r1
   2fefc:	movw	r0, #0
   2ff00:	movls	r0, #1
   2ff04:	and	r0, r0, #1
   2ff08:	str	r0, [sp, #8]
   2ff0c:	ldr	r0, [sp, #8]
   2ff10:	cmp	r0, #0
   2ff14:	bne	2ff24 <flatcc_verify_field@@Base+0x168>
   2ff18:	movw	r0, #13
   2ff1c:	str	r0, [fp, #-4]
   2ff20:	b	2ffbc <flatcc_verify_field@@Base+0x200>
   2ff24:	b	2ff28 <flatcc_verify_field@@Base+0x16c>
   2ff28:	b	2ff2c <flatcc_verify_field@@Base+0x170>
   2ff2c:	movw	r0, #1
   2ff30:	str	r0, [sp, #4]
   2ff34:	ldr	r0, [sp, #4]
   2ff38:	cmp	r0, #0
   2ff3c:	bne	2ff4c <flatcc_verify_field@@Base+0x190>
   2ff40:	movw	r0, #14
   2ff44:	str	r0, [fp, #-4]
   2ff48:	b	2ffbc <flatcc_verify_field@@Base+0x200>
   2ff4c:	b	2ff50 <flatcc_verify_field@@Base+0x194>
   2ff50:	ldr	r0, [fp, #-8]
   2ff54:	ldr	r0, [r0, #16]
   2ff58:	ldr	r1, [sp, #16]
   2ff5c:	add	r0, r0, r1
   2ff60:	ldr	r1, [sp, #28]
   2ff64:	add	r0, r1, r0
   2ff68:	str	r0, [sp, #28]
   2ff6c:	ldr	r0, [sp, #28]
   2ff70:	ldrh	r1, [fp, #-22]	; 0xffffffea
   2ff74:	sub	r1, r1, #1
   2ff78:	and	r0, r0, r1
   2ff7c:	cmp	r0, #0
   2ff80:	movw	r0, #0
   2ff84:	movne	r0, #1
   2ff88:	mvn	r1, #0
   2ff8c:	eor	r0, r0, r1
   2ff90:	and	r0, r0, #1
   2ff94:	str	r0, [sp]
   2ff98:	ldr	r0, [sp]
   2ff9c:	cmp	r0, #0
   2ffa0:	bne	2ffb0 <flatcc_verify_field@@Base+0x1f4>
   2ffa4:	movw	r0, #12
   2ffa8:	str	r0, [fp, #-4]
   2ffac:	b	2ffbc <flatcc_verify_field@@Base+0x200>
   2ffb0:	b	2ffb4 <flatcc_verify_field@@Base+0x1f8>
   2ffb4:	movw	r0, #0
   2ffb8:	str	r0, [fp, #-4]
   2ffbc:	ldr	r0, [fp, #-4]
   2ffc0:	mov	sp, fp
   2ffc4:	pop	{fp, pc}

0002ffc8 <flatcc_verify_string_field@@Base>:
   2ffc8:	push	{fp, lr}
   2ffcc:	mov	fp, sp
   2ffd0:	sub	sp, sp, #40	; 0x28
   2ffd4:	str	r0, [fp, #-8]
   2ffd8:	strh	r1, [fp, #-10]
   2ffdc:	str	r2, [fp, #-16]
   2ffe0:	ldr	r0, [fp, #-8]
   2ffe4:	ldrh	r1, [fp, #-10]
   2ffe8:	ldr	r2, [fp, #-16]
   2ffec:	uxth	r1, r1
   2fff0:	add	r3, sp, #20
   2fff4:	bl	30088 <flatcc_verify_string_field@@Base+0xc0>
   2fff8:	str	r0, [sp, #16]
   2fffc:	ldr	r0, [sp, #16]
   30000:	cmp	r0, #0
   30004:	bne	30014 <flatcc_verify_string_field@@Base+0x4c>
   30008:	ldr	r0, [sp, #20]
   3000c:	cmp	r0, #0
   30010:	bne	30020 <flatcc_verify_string_field@@Base+0x58>
   30014:	ldr	r0, [sp, #16]
   30018:	str	r0, [fp, #-4]
   3001c:	b	3007c <flatcc_verify_string_field@@Base+0xb4>
   30020:	b	30024 <flatcc_verify_string_field@@Base+0x5c>
   30024:	ldr	r0, [fp, #-8]
   30028:	ldr	r0, [r0]
   3002c:	ldr	r1, [fp, #-8]
   30030:	ldr	r1, [r1, #4]
   30034:	ldr	r2, [sp, #20]
   30038:	ldr	r3, [fp, #-8]
   3003c:	ldr	r3, [r3]
   30040:	ldr	ip, [sp, #20]
   30044:	str	r0, [sp, #12]
   30048:	mov	r0, r3
   3004c:	str	r1, [sp, #8]
   30050:	mov	r1, ip
   30054:	str	r2, [sp, #4]
   30058:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   3005c:	ldr	r1, [sp, #12]
   30060:	str	r0, [sp]
   30064:	mov	r0, r1
   30068:	ldr	r1, [sp, #8]
   3006c:	ldr	r2, [sp, #4]
   30070:	ldr	r3, [sp]
   30074:	bl	301dc <flatcc_verify_string_field@@Base+0x214>
   30078:	str	r0, [fp, #-4]
   3007c:	ldr	r0, [fp, #-4]
   30080:	mov	sp, fp
   30084:	pop	{fp, pc}
   30088:	push	{fp, lr}
   3008c:	mov	fp, sp
   30090:	sub	sp, sp, #48	; 0x30
   30094:	str	r0, [fp, #-8]
   30098:	strh	r1, [fp, #-10]
   3009c:	str	r2, [fp, #-16]
   300a0:	str	r3, [fp, #-20]	; 0xffffffec
   300a4:	ldr	r0, [fp, #-8]
   300a8:	ldrh	r1, [fp, #-10]
   300ac:	bl	31cd0 <flatcc_verify_union_field@@Base+0x290>
   300b0:	strh	r0, [sp, #18]
   300b4:	ldrsh	r0, [sp, #18]
   300b8:	cmp	r0, #0
   300bc:	bne	300f0 <flatcc_verify_string_field@@Base+0x128>
   300c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   300c4:	movw	r1, #0
   300c8:	str	r1, [r0]
   300cc:	ldr	r0, [fp, #-16]
   300d0:	cmp	r0, #0
   300d4:	beq	300e4 <flatcc_verify_string_field@@Base+0x11c>
   300d8:	movw	r0, #4
   300dc:	str	r0, [fp, #-4]
   300e0:	b	301d0 <flatcc_verify_string_field@@Base+0x208>
   300e4:	movw	r0, #0
   300e8:	str	r0, [fp, #-4]
   300ec:	b	301d0 <flatcc_verify_string_field@@Base+0x208>
   300f0:	ldrh	r0, [sp, #18]
   300f4:	str	r0, [sp, #24]
   300f8:	ldr	r0, [sp, #24]
   300fc:	add	r0, r0, #4
   30100:	str	r0, [sp, #20]
   30104:	ldr	r0, [sp, #20]
   30108:	ldr	r1, [fp, #-8]
   3010c:	ldrh	r1, [r1, #20]
   30110:	cmp	r0, r1
   30114:	movw	r0, #0
   30118:	movls	r0, #1
   3011c:	and	r0, r0, #1
   30120:	str	r0, [sp, #12]
   30124:	ldr	r0, [sp, #12]
   30128:	cmp	r0, #0
   3012c:	bne	3013c <flatcc_verify_string_field@@Base+0x174>
   30130:	movw	r0, #13
   30134:	str	r0, [fp, #-4]
   30138:	b	301d0 <flatcc_verify_string_field@@Base+0x208>
   3013c:	b	30140 <flatcc_verify_string_field@@Base+0x178>
   30140:	b	30144 <flatcc_verify_string_field@@Base+0x17c>
   30144:	movw	r0, #1
   30148:	str	r0, [sp, #8]
   3014c:	ldr	r0, [sp, #8]
   30150:	cmp	r0, #0
   30154:	bne	30164 <flatcc_verify_string_field@@Base+0x19c>
   30158:	movw	r0, #14
   3015c:	str	r0, [fp, #-4]
   30160:	b	301d0 <flatcc_verify_string_field@@Base+0x208>
   30164:	b	30168 <flatcc_verify_string_field@@Base+0x1a0>
   30168:	ldr	r0, [fp, #-8]
   3016c:	ldr	r0, [r0, #16]
   30170:	ldr	r1, [sp, #24]
   30174:	add	r0, r1, r0
   30178:	str	r0, [sp, #24]
   3017c:	ldr	r0, [sp, #24]
   30180:	and	r0, r0, #3
   30184:	cmp	r0, #0
   30188:	movw	r0, #0
   3018c:	movne	r0, #1
   30190:	mvn	r1, #0
   30194:	eor	r0, r0, r1
   30198:	and	r0, r0, #1
   3019c:	str	r0, [sp, #4]
   301a0:	ldr	r0, [sp, #4]
   301a4:	cmp	r0, #0
   301a8:	bne	301b8 <flatcc_verify_string_field@@Base+0x1f0>
   301ac:	movw	r0, #12
   301b0:	str	r0, [fp, #-4]
   301b4:	b	301d0 <flatcc_verify_string_field@@Base+0x208>
   301b8:	b	301bc <flatcc_verify_string_field@@Base+0x1f4>
   301bc:	ldr	r0, [sp, #24]
   301c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   301c4:	str	r0, [r1]
   301c8:	movw	r0, #0
   301cc:	str	r0, [fp, #-4]
   301d0:	ldr	r0, [fp, #-4]
   301d4:	mov	sp, fp
   301d8:	pop	{fp, pc}
   301dc:	push	{fp, lr}
   301e0:	mov	fp, sp
   301e4:	sub	sp, sp, #40	; 0x28
   301e8:	str	r0, [fp, #-8]
   301ec:	str	r1, [fp, #-12]
   301f0:	str	r2, [fp, #-16]
   301f4:	str	r3, [sp, #20]
   301f8:	ldr	r0, [fp, #-12]
   301fc:	ldr	r1, [fp, #-16]
   30200:	ldr	r2, [sp, #20]
   30204:	bl	322b4 <flatcc_verify_union_vector_field@@Base+0x57c>
   30208:	str	r0, [sp, #12]
   3020c:	ldr	r0, [sp, #12]
   30210:	cmp	r0, #0
   30214:	bne	30224 <flatcc_verify_string_field@@Base+0x25c>
   30218:	movw	r0, #17
   3021c:	str	r0, [fp, #-4]
   30220:	b	302ec <flatcc_verify_string_field@@Base+0x324>
   30224:	b	30228 <flatcc_verify_string_field@@Base+0x260>
   30228:	ldr	r0, [sp, #20]
   3022c:	ldr	r1, [fp, #-16]
   30230:	add	r0, r1, r0
   30234:	str	r0, [fp, #-16]
   30238:	ldr	r0, [fp, #-8]
   3023c:	ldr	r1, [fp, #-16]
   30240:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   30244:	str	r0, [sp, #16]
   30248:	ldr	r0, [fp, #-16]
   3024c:	add	r0, r0, #4
   30250:	str	r0, [fp, #-16]
   30254:	ldr	r0, [fp, #-12]
   30258:	ldr	r1, [fp, #-16]
   3025c:	sub	r0, r0, r1
   30260:	ldr	r1, [sp, #16]
   30264:	add	r1, r1, #1
   30268:	cmp	r0, r1
   3026c:	movw	r0, #0
   30270:	movcs	r0, #1
   30274:	and	r0, r0, #1
   30278:	str	r0, [sp, #8]
   3027c:	ldr	r0, [sp, #8]
   30280:	cmp	r0, #0
   30284:	bne	30294 <flatcc_verify_string_field@@Base+0x2cc>
   30288:	movw	r0, #8
   3028c:	str	r0, [fp, #-4]
   30290:	b	302ec <flatcc_verify_string_field@@Base+0x324>
   30294:	b	30298 <flatcc_verify_string_field@@Base+0x2d0>
   30298:	b	3029c <flatcc_verify_string_field@@Base+0x2d4>
   3029c:	ldr	r0, [fp, #-8]
   302a0:	ldr	r1, [fp, #-16]
   302a4:	add	r0, r0, r1
   302a8:	ldr	r1, [sp, #16]
   302ac:	add	r0, r0, r1
   302b0:	ldrb	r0, [r0]
   302b4:	cmp	r0, #0
   302b8:	movw	r0, #0
   302bc:	moveq	r0, #1
   302c0:	and	r0, r0, #1
   302c4:	str	r0, [sp, #4]
   302c8:	ldr	r0, [sp, #4]
   302cc:	cmp	r0, #0
   302d0:	bne	302e0 <flatcc_verify_string_field@@Base+0x318>
   302d4:	movw	r0, #7
   302d8:	str	r0, [fp, #-4]
   302dc:	b	302ec <flatcc_verify_string_field@@Base+0x324>
   302e0:	b	302e4 <flatcc_verify_string_field@@Base+0x31c>
   302e4:	movw	r0, #0
   302e8:	str	r0, [fp, #-4]
   302ec:	ldr	r0, [fp, #-4]
   302f0:	mov	sp, fp
   302f4:	pop	{fp, pc}
   302f8:	push	{fp, lr}
   302fc:	mov	fp, sp
   30300:	sub	sp, sp, #8
   30304:	str	r0, [sp, #4]
   30308:	str	r1, [sp]
   3030c:	ldr	r0, [sp, #4]
   30310:	ldr	r1, [sp]
   30314:	add	r0, r0, r1
   30318:	bl	32338 <flatcc_verify_union_vector_field@@Base+0x600>
   3031c:	mov	sp, fp
   30320:	pop	{fp, pc}

00030324 <flatcc_verify_vector_field@@Base>:
   30324:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30328:	add	fp, sp, #24
   3032c:	sub	sp, sp, #80	; 0x50
   30330:	ldr	ip, [fp, #12]
   30334:	ldr	lr, [fp, #8]
   30338:	str	r0, [fp, #-32]	; 0xffffffe0
   3033c:	strh	r1, [fp, #-34]	; 0xffffffde
   30340:	str	r2, [fp, #-40]	; 0xffffffd8
   30344:	str	r3, [fp, #-44]	; 0xffffffd4
   30348:	strh	lr, [fp, #-46]	; 0xffffffd2
   3034c:	str	ip, [sp, #44]	; 0x2c
   30350:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30354:	ldrh	r1, [fp, #-34]	; 0xffffffde
   30358:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3035c:	uxth	r1, r1
   30360:	add	r3, sp, #52	; 0x34
   30364:	bl	30088 <flatcc_verify_string_field@@Base+0xc0>
   30368:	str	r0, [sp, #48]	; 0x30
   3036c:	ldr	r0, [sp, #48]	; 0x30
   30370:	cmp	r0, #0
   30374:	bne	30384 <flatcc_verify_vector_field@@Base+0x60>
   30378:	ldr	r0, [sp, #52]	; 0x34
   3037c:	cmp	r0, #0
   30380:	bne	30390 <flatcc_verify_vector_field@@Base+0x6c>
   30384:	ldr	r0, [sp, #48]	; 0x30
   30388:	str	r0, [fp, #-28]	; 0xffffffe4
   3038c:	b	3042c <flatcc_verify_vector_field@@Base+0x108>
   30390:	b	30394 <flatcc_verify_vector_field@@Base+0x70>
   30394:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30398:	ldr	r0, [r0]
   3039c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   303a0:	ldr	r1, [r1, #4]
   303a4:	ldr	r2, [sp, #52]	; 0x34
   303a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   303ac:	ldr	r3, [r3]
   303b0:	ldr	ip, [sp, #52]	; 0x34
   303b4:	str	r0, [sp, #40]	; 0x28
   303b8:	mov	r0, r3
   303bc:	str	r1, [sp, #36]	; 0x24
   303c0:	mov	r1, ip
   303c4:	str	r2, [sp, #32]
   303c8:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   303cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   303d0:	ldrh	r2, [fp, #-46]	; 0xffffffd2
   303d4:	ldr	r3, [fp, #12]
   303d8:	ldr	ip, [sp, #40]	; 0x28
   303dc:	str	r0, [sp, #28]
   303e0:	mov	r0, ip
   303e4:	ldr	lr, [sp, #36]	; 0x24
   303e8:	str	r1, [sp, #24]
   303ec:	mov	r1, lr
   303f0:	ldr	r4, [sp, #32]
   303f4:	str	r2, [sp, #20]
   303f8:	mov	r2, r4
   303fc:	ldr	r5, [sp, #28]
   30400:	str	r3, [sp, #16]
   30404:	mov	r3, r5
   30408:	ldr	r6, [sp, #24]
   3040c:	str	r6, [sp]
   30410:	ldr	r7, [sp, #20]
   30414:	uxth	r8, r7
   30418:	str	r8, [sp, #4]
   3041c:	ldr	r8, [sp, #16]
   30420:	str	r8, [sp, #8]
   30424:	bl	30438 <flatcc_verify_vector_field@@Base+0x114>
   30428:	str	r0, [fp, #-28]	; 0xffffffe4
   3042c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30430:	sub	sp, fp, #24
   30434:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30438:	push	{r4, sl, fp, lr}
   3043c:	add	fp, sp, #8
   30440:	sub	sp, sp, #48	; 0x30
   30444:	ldr	ip, [fp, #16]
   30448:	ldr	lr, [fp, #12]
   3044c:	ldr	r4, [fp, #8]
   30450:	str	r0, [fp, #-16]
   30454:	str	r1, [fp, #-20]	; 0xffffffec
   30458:	str	r2, [fp, #-24]	; 0xffffffe8
   3045c:	str	r3, [sp, #28]
   30460:	strh	lr, [sp, #26]
   30464:	str	r4, [sp, #4]
   30468:	str	ip, [sp]
   3046c:	ldr	r0, [fp, #-20]	; 0xffffffec
   30470:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30474:	ldr	r2, [sp, #28]
   30478:	ldrh	r3, [sp, #26]
   3047c:	bl	32370 <flatcc_verify_union_vector_field@@Base+0x638>
   30480:	str	r0, [sp, #16]
   30484:	ldr	r0, [sp, #16]
   30488:	cmp	r0, #0
   3048c:	bne	3049c <flatcc_verify_vector_field@@Base+0x178>
   30490:	movw	r0, #16
   30494:	str	r0, [fp, #-12]
   30498:	b	30558 <flatcc_verify_vector_field@@Base+0x234>
   3049c:	b	304a0 <flatcc_verify_vector_field@@Base+0x17c>
   304a0:	ldr	r0, [sp, #28]
   304a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   304a8:	add	r0, r1, r0
   304ac:	str	r0, [fp, #-24]	; 0xffffffe8
   304b0:	ldr	r0, [fp, #-16]
   304b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   304b8:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   304bc:	str	r0, [sp, #20]
   304c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   304c4:	add	r0, r0, #4
   304c8:	str	r0, [fp, #-24]	; 0xffffffe8
   304cc:	ldr	r0, [sp, #20]
   304d0:	ldr	r1, [fp, #16]
   304d4:	cmp	r0, r1
   304d8:	movw	r0, #0
   304dc:	movls	r0, #1
   304e0:	and	r0, r0, #1
   304e4:	str	r0, [sp, #12]
   304e8:	ldr	r0, [sp, #12]
   304ec:	cmp	r0, #0
   304f0:	bne	30500 <flatcc_verify_vector_field@@Base+0x1dc>
   304f4:	movw	r0, #25
   304f8:	str	r0, [fp, #-12]
   304fc:	b	30558 <flatcc_verify_vector_field@@Base+0x234>
   30500:	b	30504 <flatcc_verify_vector_field@@Base+0x1e0>
   30504:	b	30508 <flatcc_verify_vector_field@@Base+0x1e4>
   30508:	ldr	r0, [fp, #-20]	; 0xffffffec
   3050c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30510:	sub	r0, r0, r1
   30514:	ldr	r1, [sp, #20]
   30518:	ldr	r2, [fp, #8]
   3051c:	mul	r1, r1, r2
   30520:	cmp	r0, r1
   30524:	movw	r0, #0
   30528:	movcs	r0, #1
   3052c:	and	r0, r0, #1
   30530:	str	r0, [sp, #8]
   30534:	ldr	r0, [sp, #8]
   30538:	cmp	r0, #0
   3053c:	bne	3054c <flatcc_verify_vector_field@@Base+0x228>
   30540:	movw	r0, #26
   30544:	str	r0, [fp, #-12]
   30548:	b	30558 <flatcc_verify_vector_field@@Base+0x234>
   3054c:	b	30550 <flatcc_verify_vector_field@@Base+0x22c>
   30550:	movw	r0, #0
   30554:	str	r0, [fp, #-12]
   30558:	ldr	r0, [fp, #-12]
   3055c:	sub	sp, fp, #8
   30560:	pop	{r4, sl, fp, pc}

00030564 <flatcc_verify_string_vector_field@@Base>:
   30564:	push	{fp, lr}
   30568:	mov	fp, sp
   3056c:	sub	sp, sp, #40	; 0x28
   30570:	str	r0, [fp, #-8]
   30574:	strh	r1, [fp, #-10]
   30578:	str	r2, [fp, #-16]
   3057c:	ldr	r0, [fp, #-8]
   30580:	ldrh	r1, [fp, #-10]
   30584:	ldr	r2, [fp, #-16]
   30588:	uxth	r1, r1
   3058c:	add	r3, sp, #20
   30590:	bl	30088 <flatcc_verify_string_field@@Base+0xc0>
   30594:	str	r0, [sp, #16]
   30598:	ldr	r0, [sp, #16]
   3059c:	cmp	r0, #0
   305a0:	bne	305b0 <flatcc_verify_string_vector_field@@Base+0x4c>
   305a4:	ldr	r0, [sp, #20]
   305a8:	cmp	r0, #0
   305ac:	bne	305bc <flatcc_verify_string_vector_field@@Base+0x58>
   305b0:	ldr	r0, [sp, #16]
   305b4:	str	r0, [fp, #-4]
   305b8:	b	30618 <flatcc_verify_string_vector_field@@Base+0xb4>
   305bc:	b	305c0 <flatcc_verify_string_vector_field@@Base+0x5c>
   305c0:	ldr	r0, [fp, #-8]
   305c4:	ldr	r0, [r0]
   305c8:	ldr	r1, [fp, #-8]
   305cc:	ldr	r1, [r1, #4]
   305d0:	ldr	r2, [sp, #20]
   305d4:	ldr	r3, [fp, #-8]
   305d8:	ldr	r3, [r3]
   305dc:	ldr	ip, [sp, #20]
   305e0:	str	r0, [sp, #12]
   305e4:	mov	r0, r3
   305e8:	str	r1, [sp, #8]
   305ec:	mov	r1, ip
   305f0:	str	r2, [sp, #4]
   305f4:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   305f8:	ldr	r1, [sp, #12]
   305fc:	str	r0, [sp]
   30600:	mov	r0, r1
   30604:	ldr	r1, [sp, #8]
   30608:	ldr	r2, [sp, #4]
   3060c:	ldr	r3, [sp]
   30610:	bl	30624 <flatcc_verify_string_vector_field@@Base+0xc0>
   30614:	str	r0, [fp, #-4]
   30618:	ldr	r0, [fp, #-4]
   3061c:	mov	sp, fp
   30620:	pop	{fp, pc}
   30624:	push	{fp, lr}
   30628:	mov	fp, sp
   3062c:	sub	sp, sp, #80	; 0x50
   30630:	ldr	ip, [pc, #424]	; 307e0 <flatcc_verify_string_vector_field@@Base+0x27c>
   30634:	str	r0, [fp, #-8]
   30638:	str	r1, [fp, #-12]
   3063c:	str	r2, [fp, #-16]
   30640:	str	r3, [fp, #-20]	; 0xffffffec
   30644:	ldr	r0, [fp, #-8]
   30648:	ldr	r1, [fp, #-12]
   3064c:	ldr	r2, [fp, #-16]
   30650:	ldr	r3, [fp, #-20]	; 0xffffffec
   30654:	movw	lr, #4
   30658:	str	lr, [sp]
   3065c:	movw	lr, #4
   30660:	uxth	lr, lr
   30664:	str	lr, [sp, #4]
   30668:	str	ip, [sp, #8]
   3066c:	bl	30438 <flatcc_verify_vector_field@@Base+0x114>
   30670:	cmp	r0, #0
   30674:	beq	306c8 <flatcc_verify_string_vector_field@@Base+0x164>
   30678:	ldr	r0, [pc, #352]	; 307e0 <flatcc_verify_string_vector_field@@Base+0x27c>
   3067c:	ldr	r1, [fp, #-8]
   30680:	ldr	r2, [fp, #-12]
   30684:	ldr	r3, [fp, #-16]
   30688:	ldr	ip, [fp, #-20]	; 0xffffffec
   3068c:	str	r0, [fp, #-32]	; 0xffffffe0
   30690:	mov	r0, r1
   30694:	mov	r1, r2
   30698:	mov	r2, r3
   3069c:	mov	r3, ip
   306a0:	movw	ip, #4
   306a4:	str	ip, [sp]
   306a8:	movw	ip, #4
   306ac:	uxth	ip, ip
   306b0:	str	ip, [sp, #4]
   306b4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   306b8:	str	ip, [sp, #8]
   306bc:	bl	30438 <flatcc_verify_vector_field@@Base+0x114>
   306c0:	str	r0, [fp, #-4]
   306c4:	b	307d4 <flatcc_verify_string_vector_field@@Base+0x270>
   306c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   306cc:	ldr	r1, [fp, #-16]
   306d0:	add	r0, r1, r0
   306d4:	str	r0, [fp, #-16]
   306d8:	ldr	r0, [fp, #-8]
   306dc:	ldr	r1, [fp, #-16]
   306e0:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   306e4:	str	r0, [fp, #-28]	; 0xffffffe4
   306e8:	ldr	r0, [fp, #-16]
   306ec:	add	r0, r0, #4
   306f0:	str	r0, [fp, #-16]
   306f4:	movw	r0, #0
   306f8:	str	r0, [fp, #-24]	; 0xffffffe8
   306fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30700:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30704:	cmp	r0, r1
   30708:	bcs	307cc <flatcc_verify_string_vector_field@@Base+0x268>
   3070c:	ldr	r0, [fp, #-8]
   30710:	ldr	r1, [fp, #-12]
   30714:	ldr	r2, [fp, #-16]
   30718:	ldr	r3, [fp, #-8]
   3071c:	ldr	ip, [fp, #-16]
   30720:	str	r0, [fp, #-36]	; 0xffffffdc
   30724:	mov	r0, r3
   30728:	str	r1, [sp, #40]	; 0x28
   3072c:	mov	r1, ip
   30730:	str	r2, [sp, #36]	; 0x24
   30734:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   30738:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3073c:	str	r0, [sp, #32]
   30740:	mov	r0, r1
   30744:	ldr	r1, [sp, #40]	; 0x28
   30748:	ldr	r2, [sp, #36]	; 0x24
   3074c:	ldr	r3, [sp, #32]
   30750:	bl	301dc <flatcc_verify_string_field@@Base+0x214>
   30754:	cmp	r0, #0
   30758:	beq	307ac <flatcc_verify_string_vector_field@@Base+0x248>
   3075c:	ldr	r0, [fp, #-8]
   30760:	ldr	r1, [fp, #-12]
   30764:	ldr	r2, [fp, #-16]
   30768:	ldr	r3, [fp, #-8]
   3076c:	ldr	ip, [fp, #-16]
   30770:	str	r0, [sp, #28]
   30774:	mov	r0, r3
   30778:	str	r1, [sp, #24]
   3077c:	mov	r1, ip
   30780:	str	r2, [sp, #20]
   30784:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   30788:	ldr	r1, [sp, #28]
   3078c:	str	r0, [sp, #16]
   30790:	mov	r0, r1
   30794:	ldr	r1, [sp, #24]
   30798:	ldr	r2, [sp, #20]
   3079c:	ldr	r3, [sp, #16]
   307a0:	bl	301dc <flatcc_verify_string_field@@Base+0x214>
   307a4:	str	r0, [fp, #-4]
   307a8:	b	307d4 <flatcc_verify_string_vector_field@@Base+0x270>
   307ac:	b	307b0 <flatcc_verify_string_vector_field@@Base+0x24c>
   307b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   307b4:	add	r0, r0, #1
   307b8:	str	r0, [fp, #-24]	; 0xffffffe8
   307bc:	ldr	r0, [fp, #-16]
   307c0:	add	r0, r0, #4
   307c4:	str	r0, [fp, #-16]
   307c8:	b	306fc <flatcc_verify_string_vector_field@@Base+0x198>
   307cc:	movw	r0, #0
   307d0:	str	r0, [fp, #-4]
   307d4:	ldr	r0, [fp, #-4]
   307d8:	mov	sp, fp
   307dc:	pop	{fp, pc}
   307e0:	svccc	0x00ffffff

000307e4 <flatcc_verify_table_field@@Base>:
   307e4:	push	{r4, r5, fp, lr}
   307e8:	add	fp, sp, #8
   307ec:	sub	sp, sp, #64	; 0x40
   307f0:	str	r0, [fp, #-16]
   307f4:	strh	r1, [fp, #-18]	; 0xffffffee
   307f8:	str	r2, [fp, #-24]	; 0xffffffe8
   307fc:	str	r3, [fp, #-28]	; 0xffffffe4
   30800:	ldr	r0, [fp, #-16]
   30804:	ldrh	r1, [fp, #-18]	; 0xffffffee
   30808:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3080c:	uxth	r1, r1
   30810:	sub	r3, fp, #32
   30814:	bl	30088 <flatcc_verify_string_field@@Base+0xc0>
   30818:	str	r0, [sp, #36]	; 0x24
   3081c:	ldr	r0, [sp, #36]	; 0x24
   30820:	cmp	r0, #0
   30824:	bne	30834 <flatcc_verify_table_field@@Base+0x50>
   30828:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3082c:	cmp	r0, #0
   30830:	bne	30840 <flatcc_verify_table_field@@Base+0x5c>
   30834:	ldr	r0, [sp, #36]	; 0x24
   30838:	str	r0, [fp, #-12]
   3083c:	b	308c8 <flatcc_verify_table_field@@Base+0xe4>
   30840:	b	30844 <flatcc_verify_table_field@@Base+0x60>
   30844:	ldr	r0, [fp, #-16]
   30848:	ldr	r0, [r0]
   3084c:	ldr	r1, [fp, #-16]
   30850:	ldr	r1, [r1, #4]
   30854:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30858:	ldr	r3, [fp, #-16]
   3085c:	ldr	r3, [r3]
   30860:	ldr	ip, [fp, #-32]	; 0xffffffe0
   30864:	str	r0, [sp, #32]
   30868:	mov	r0, r3
   3086c:	str	r1, [sp, #28]
   30870:	mov	r1, ip
   30874:	str	r2, [sp, #24]
   30878:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   3087c:	ldr	r1, [fp, #-16]
   30880:	ldr	r1, [r1, #8]
   30884:	ldr	r2, [fp, #-28]	; 0xffffffe4
   30888:	ldr	r3, [sp, #32]
   3088c:	str	r0, [sp, #20]
   30890:	mov	r0, r3
   30894:	ldr	ip, [sp, #28]
   30898:	str	r1, [sp, #16]
   3089c:	mov	r1, ip
   308a0:	ldr	lr, [sp, #24]
   308a4:	str	r2, [sp, #12]
   308a8:	mov	r2, lr
   308ac:	ldr	r3, [sp, #20]
   308b0:	ldr	r4, [sp, #16]
   308b4:	str	r4, [sp]
   308b8:	ldr	r5, [sp, #12]
   308bc:	str	r5, [sp, #4]
   308c0:	bl	308d4 <flatcc_verify_table_field@@Base+0xf0>
   308c4:	str	r0, [fp, #-12]
   308c8:	ldr	r0, [fp, #-12]
   308cc:	sub	sp, fp, #8
   308d0:	pop	{r4, r5, fp, pc}
   308d4:	push	{fp, lr}
   308d8:	mov	fp, sp
   308dc:	sub	sp, sp, #112	; 0x70
   308e0:	ldr	ip, [fp, #12]
   308e4:	ldr	lr, [fp, #8]
   308e8:	str	r0, [fp, #-8]
   308ec:	str	r1, [fp, #-12]
   308f0:	str	r2, [fp, #-16]
   308f4:	str	r3, [fp, #-20]	; 0xffffffec
   308f8:	str	lr, [sp, #24]
   308fc:	str	ip, [sp, #20]
   30900:	ldr	r0, [fp, #8]
   30904:	sub	r0, r0, #1
   30908:	str	r0, [fp, #-44]	; 0xffffffd4
   3090c:	str	r0, [sp, #56]	; 0x38
   30910:	ldr	r0, [sp, #56]	; 0x38
   30914:	cmp	r0, #0
   30918:	bne	30928 <flatcc_verify_table_field@@Base+0x144>
   3091c:	movw	r0, #3
   30920:	str	r0, [fp, #-4]
   30924:	b	30ba4 <flatcc_verify_table_field@@Base+0x3c0>
   30928:	b	3092c <flatcc_verify_table_field@@Base+0x148>
   3092c:	b	30930 <flatcc_verify_table_field@@Base+0x14c>
   30930:	ldr	r0, [fp, #-12]
   30934:	ldr	r1, [fp, #-16]
   30938:	ldr	r2, [fp, #-20]	; 0xffffffec
   3093c:	bl	322b4 <flatcc_verify_union_vector_field@@Base+0x57c>
   30940:	str	r0, [sp, #52]	; 0x34
   30944:	ldr	r0, [sp, #52]	; 0x34
   30948:	cmp	r0, #0
   3094c:	bne	3095c <flatcc_verify_table_field@@Base+0x178>
   30950:	movw	r0, #15
   30954:	str	r0, [fp, #-4]
   30958:	b	30ba4 <flatcc_verify_table_field@@Base+0x3c0>
   3095c:	b	30960 <flatcc_verify_table_field@@Base+0x17c>
   30960:	ldr	r0, [fp, #-16]
   30964:	ldr	r1, [fp, #-20]	; 0xffffffec
   30968:	add	r0, r0, r1
   3096c:	str	r0, [fp, #-36]	; 0xffffffdc
   30970:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30974:	ldr	r1, [fp, #-8]
   30978:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3097c:	str	r0, [sp, #16]
   30980:	mov	r0, r1
   30984:	mov	r1, r2
   30988:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   3098c:	ldr	r1, [sp, #16]
   30990:	sub	r0, r1, r0
   30994:	str	r0, [fp, #-24]	; 0xffffffe8
   30998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3099c:	cmp	r0, #0
   309a0:	movw	r0, #0
   309a4:	str	r0, [sp, #12]
   309a8:	blt	309cc <flatcc_verify_table_field@@Base+0x1e8>
   309ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   309b0:	and	r0, r0, #1
   309b4:	cmp	r0, #0
   309b8:	movw	r0, #0
   309bc:	movne	r0, #1
   309c0:	mvn	r1, #0
   309c4:	eor	r0, r0, r1
   309c8:	str	r0, [sp, #12]
   309cc:	ldr	r0, [sp, #12]
   309d0:	and	r0, r0, #1
   309d4:	str	r0, [sp, #48]	; 0x30
   309d8:	ldr	r0, [sp, #48]	; 0x30
   309dc:	cmp	r0, #0
   309e0:	bne	309f0 <flatcc_verify_table_field@@Base+0x20c>
   309e4:	movw	r0, #29
   309e8:	str	r0, [fp, #-4]
   309ec:	b	30ba4 <flatcc_verify_table_field@@Base+0x3c0>
   309f0:	b	309f4 <flatcc_verify_table_field@@Base+0x210>
   309f4:	b	309f8 <flatcc_verify_table_field@@Base+0x214>
   309f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   309fc:	add	r0, r0, #2
   30a00:	ldr	r1, [fp, #-12]
   30a04:	cmp	r0, r1
   30a08:	movw	r0, #0
   30a0c:	movls	r0, #1
   30a10:	and	r0, r0, #1
   30a14:	str	r0, [sp, #44]	; 0x2c
   30a18:	ldr	r0, [sp, #44]	; 0x2c
   30a1c:	cmp	r0, #0
   30a20:	bne	30a30 <flatcc_verify_table_field@@Base+0x24c>
   30a24:	movw	r0, #27
   30a28:	str	r0, [fp, #-4]
   30a2c:	b	30ba4 <flatcc_verify_table_field@@Base+0x3c0>
   30a30:	b	30a34 <flatcc_verify_table_field@@Base+0x250>
   30a34:	ldr	r0, [fp, #-8]
   30a38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30a3c:	bl	32430 <flatcc_verify_union_vector_field@@Base+0x6f8>
   30a40:	strh	r0, [fp, #-30]	; 0xffffffe2
   30a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30a48:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   30a4c:	add	r0, r0, r1
   30a50:	str	r0, [fp, #-28]	; 0xffffffe4
   30a54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30a58:	ldr	r1, [fp, #-12]
   30a5c:	cmp	r0, r1
   30a60:	movw	r0, #0
   30a64:	str	r0, [sp, #8]
   30a68:	bhi	30a8c <flatcc_verify_table_field@@Base+0x2a8>
   30a6c:	ldrh	r0, [fp, #-30]	; 0xffffffe2
   30a70:	and	r0, r0, #1
   30a74:	cmp	r0, #0
   30a78:	movw	r0, #0
   30a7c:	movne	r0, #1
   30a80:	mvn	r1, #0
   30a84:	eor	r0, r0, r1
   30a88:	str	r0, [sp, #8]
   30a8c:	ldr	r0, [sp, #8]
   30a90:	and	r0, r0, #1
   30a94:	str	r0, [sp, #40]	; 0x28
   30a98:	ldr	r0, [sp, #40]	; 0x28
   30a9c:	cmp	r0, #0
   30aa0:	bne	30ab0 <flatcc_verify_table_field@@Base+0x2cc>
   30aa4:	movw	r0, #30
   30aa8:	str	r0, [fp, #-4]
   30aac:	b	30ba4 <flatcc_verify_table_field@@Base+0x3c0>
   30ab0:	b	30ab4 <flatcc_verify_table_field@@Base+0x2d0>
   30ab4:	b	30ab8 <flatcc_verify_table_field@@Base+0x2d4>
   30ab8:	movw	r0, #1
   30abc:	str	r0, [sp, #36]	; 0x24
   30ac0:	ldr	r0, [sp, #36]	; 0x24
   30ac4:	cmp	r0, #0
   30ac8:	bne	30ad8 <flatcc_verify_table_field@@Base+0x2f4>
   30acc:	movw	r0, #31
   30ad0:	str	r0, [fp, #-4]
   30ad4:	b	30ba4 <flatcc_verify_table_field@@Base+0x3c0>
   30ad8:	b	30adc <flatcc_verify_table_field@@Base+0x2f8>
   30adc:	b	30ae0 <flatcc_verify_table_field@@Base+0x2fc>
   30ae0:	ldrh	r0, [fp, #-30]	; 0xffffffe2
   30ae4:	cmp	r0, #4
   30ae8:	movw	r0, #0
   30aec:	movcs	r0, #1
   30af0:	and	r0, r0, #1
   30af4:	str	r0, [sp, #32]
   30af8:	ldr	r0, [sp, #32]
   30afc:	cmp	r0, #0
   30b00:	bne	30b10 <flatcc_verify_table_field@@Base+0x32c>
   30b04:	movw	r0, #28
   30b08:	str	r0, [fp, #-4]
   30b0c:	b	30ba4 <flatcc_verify_table_field@@Base+0x3c0>
   30b10:	b	30b14 <flatcc_verify_table_field@@Base+0x330>
   30b14:	ldr	r0, [fp, #-8]
   30b18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30b1c:	add	r1, r1, #2
   30b20:	bl	32430 <flatcc_verify_union_vector_field@@Base+0x6f8>
   30b24:	strh	r0, [fp, #-32]	; 0xffffffe0
   30b28:	ldr	r0, [fp, #-12]
   30b2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30b30:	sub	r0, r0, r1
   30b34:	ldrh	r1, [fp, #-32]	; 0xffffffe0
   30b38:	cmp	r0, r1
   30b3c:	movw	r0, #0
   30b40:	movcs	r0, #1
   30b44:	and	r0, r0, #1
   30b48:	str	r0, [sp, #28]
   30b4c:	ldr	r0, [sp, #28]
   30b50:	cmp	r0, #0
   30b54:	bne	30b64 <flatcc_verify_table_field@@Base+0x380>
   30b58:	movw	r0, #20
   30b5c:	str	r0, [fp, #-4]
   30b60:	b	30ba4 <flatcc_verify_table_field@@Base+0x3c0>
   30b64:	b	30b68 <flatcc_verify_table_field@@Base+0x384>
   30b68:	ldr	r0, [fp, #-8]
   30b6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30b70:	add	r0, r0, r1
   30b74:	str	r0, [fp, #-40]	; 0xffffffd8
   30b78:	ldr	r0, [fp, #-8]
   30b7c:	str	r0, [fp, #-52]	; 0xffffffcc
   30b80:	ldr	r0, [fp, #-12]
   30b84:	str	r0, [fp, #-48]	; 0xffffffd0
   30b88:	ldr	r0, [fp, #12]
   30b8c:	sub	r1, fp, #52	; 0x34
   30b90:	str	r0, [sp, #4]
   30b94:	mov	r0, r1
   30b98:	ldr	r1, [sp, #4]
   30b9c:	blx	r1
   30ba0:	str	r0, [fp, #-4]
   30ba4:	ldr	r0, [fp, #-4]
   30ba8:	mov	sp, fp
   30bac:	pop	{fp, pc}

00030bb0 <flatcc_verify_table_vector_field@@Base>:
   30bb0:	push	{r4, r5, fp, lr}
   30bb4:	add	fp, sp, #8
   30bb8:	sub	sp, sp, #64	; 0x40
   30bbc:	str	r0, [fp, #-16]
   30bc0:	strh	r1, [fp, #-18]	; 0xffffffee
   30bc4:	str	r2, [fp, #-24]	; 0xffffffe8
   30bc8:	str	r3, [fp, #-28]	; 0xffffffe4
   30bcc:	ldr	r0, [fp, #-16]
   30bd0:	ldrh	r1, [fp, #-18]	; 0xffffffee
   30bd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30bd8:	uxth	r1, r1
   30bdc:	sub	r3, fp, #32
   30be0:	bl	30088 <flatcc_verify_string_field@@Base+0xc0>
   30be4:	str	r0, [sp, #36]	; 0x24
   30be8:	ldr	r0, [sp, #36]	; 0x24
   30bec:	cmp	r0, #0
   30bf0:	bne	30c00 <flatcc_verify_table_vector_field@@Base+0x50>
   30bf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30bf8:	cmp	r0, #0
   30bfc:	bne	30c0c <flatcc_verify_table_vector_field@@Base+0x5c>
   30c00:	ldr	r0, [sp, #36]	; 0x24
   30c04:	str	r0, [fp, #-12]
   30c08:	b	30c94 <flatcc_verify_table_vector_field@@Base+0xe4>
   30c0c:	b	30c10 <flatcc_verify_table_vector_field@@Base+0x60>
   30c10:	ldr	r0, [fp, #-16]
   30c14:	ldr	r0, [r0]
   30c18:	ldr	r1, [fp, #-16]
   30c1c:	ldr	r1, [r1, #4]
   30c20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30c24:	ldr	r3, [fp, #-16]
   30c28:	ldr	r3, [r3]
   30c2c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   30c30:	str	r0, [sp, #32]
   30c34:	mov	r0, r3
   30c38:	str	r1, [sp, #28]
   30c3c:	mov	r1, ip
   30c40:	str	r2, [sp, #24]
   30c44:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   30c48:	ldr	r1, [fp, #-16]
   30c4c:	ldr	r1, [r1, #8]
   30c50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   30c54:	ldr	r3, [sp, #32]
   30c58:	str	r0, [sp, #20]
   30c5c:	mov	r0, r3
   30c60:	ldr	ip, [sp, #28]
   30c64:	str	r1, [sp, #16]
   30c68:	mov	r1, ip
   30c6c:	ldr	lr, [sp, #24]
   30c70:	str	r2, [sp, #12]
   30c74:	mov	r2, lr
   30c78:	ldr	r3, [sp, #20]
   30c7c:	ldr	r4, [sp, #16]
   30c80:	str	r4, [sp]
   30c84:	ldr	r5, [sp, #12]
   30c88:	str	r5, [sp, #4]
   30c8c:	bl	30ca0 <flatcc_verify_table_vector_field@@Base+0xf0>
   30c90:	str	r0, [fp, #-12]
   30c94:	ldr	r0, [fp, #-12]
   30c98:	sub	sp, fp, #8
   30c9c:	pop	{r4, r5, fp, pc}
   30ca0:	push	{r4, r5, fp, lr}
   30ca4:	add	fp, sp, #8
   30ca8:	sub	sp, sp, #112	; 0x70
   30cac:	ldr	ip, [fp, #12]
   30cb0:	ldr	lr, [fp, #8]
   30cb4:	str	r0, [fp, #-16]
   30cb8:	str	r1, [fp, #-20]	; 0xffffffec
   30cbc:	str	r2, [fp, #-24]	; 0xffffffe8
   30cc0:	str	r3, [fp, #-28]	; 0xffffffe4
   30cc4:	str	lr, [fp, #-44]	; 0xffffffd4
   30cc8:	str	ip, [fp, #-48]	; 0xffffffd0
   30ccc:	ldr	r0, [fp, #8]
   30cd0:	mvn	r1, #0
   30cd4:	add	r1, r0, r1
   30cd8:	str	r1, [fp, #8]
   30cdc:	cmp	r0, #0
   30ce0:	movw	r0, #0
   30ce4:	movgt	r0, #1
   30ce8:	and	r0, r0, #1
   30cec:	str	r0, [fp, #-40]	; 0xffffffd8
   30cf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30cf4:	cmp	r0, #0
   30cf8:	bne	30d08 <flatcc_verify_table_vector_field@@Base+0x158>
   30cfc:	movw	r0, #3
   30d00:	str	r0, [fp, #-12]
   30d04:	b	30f08 <flatcc_verify_table_vector_field@@Base+0x358>
   30d08:	b	30d0c <flatcc_verify_table_vector_field@@Base+0x15c>
   30d0c:	ldr	r0, [pc, #512]	; 30f14 <flatcc_verify_table_vector_field@@Base+0x364>
   30d10:	ldr	r1, [fp, #-16]
   30d14:	ldr	r2, [fp, #-20]	; 0xffffffec
   30d18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d1c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   30d20:	str	r0, [fp, #-52]	; 0xffffffcc
   30d24:	mov	r0, r1
   30d28:	mov	r1, r2
   30d2c:	mov	r2, r3
   30d30:	mov	r3, ip
   30d34:	movw	ip, #4
   30d38:	str	ip, [sp]
   30d3c:	movw	ip, #4
   30d40:	uxth	ip, ip
   30d44:	str	ip, [sp, #4]
   30d48:	ldr	ip, [fp, #-52]	; 0xffffffcc
   30d4c:	str	ip, [sp, #8]
   30d50:	bl	30438 <flatcc_verify_vector_field@@Base+0x114>
   30d54:	cmp	r0, #0
   30d58:	beq	30dac <flatcc_verify_table_vector_field@@Base+0x1fc>
   30d5c:	ldr	r0, [pc, #432]	; 30f14 <flatcc_verify_table_vector_field@@Base+0x364>
   30d60:	ldr	r1, [fp, #-16]
   30d64:	ldr	r2, [fp, #-20]	; 0xffffffec
   30d68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d6c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   30d70:	str	r0, [fp, #-56]	; 0xffffffc8
   30d74:	mov	r0, r1
   30d78:	mov	r1, r2
   30d7c:	mov	r2, r3
   30d80:	mov	r3, ip
   30d84:	movw	ip, #4
   30d88:	str	ip, [sp]
   30d8c:	movw	ip, #4
   30d90:	uxth	ip, ip
   30d94:	str	ip, [sp, #4]
   30d98:	ldr	ip, [fp, #-56]	; 0xffffffc8
   30d9c:	str	ip, [sp, #8]
   30da0:	bl	30438 <flatcc_verify_vector_field@@Base+0x114>
   30da4:	str	r0, [fp, #-12]
   30da8:	b	30f08 <flatcc_verify_table_vector_field@@Base+0x358>
   30dac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30db0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30db4:	add	r0, r1, r0
   30db8:	str	r0, [fp, #-24]	; 0xffffffe8
   30dbc:	ldr	r0, [fp, #-16]
   30dc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30dc4:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   30dc8:	str	r0, [fp, #-36]	; 0xffffffdc
   30dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30dd0:	add	r0, r0, #4
   30dd4:	str	r0, [fp, #-24]	; 0xffffffe8
   30dd8:	movw	r0, #0
   30ddc:	str	r0, [fp, #-32]	; 0xffffffe0
   30de0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30de4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30de8:	cmp	r0, r1
   30dec:	bcs	30f00 <flatcc_verify_table_vector_field@@Base+0x350>
   30df0:	ldr	r0, [fp, #-16]
   30df4:	ldr	r1, [fp, #-20]	; 0xffffffec
   30df8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30dfc:	ldr	r3, [fp, #-16]
   30e00:	ldr	ip, [fp, #-24]	; 0xffffffe8
   30e04:	str	r0, [sp, #60]	; 0x3c
   30e08:	mov	r0, r3
   30e0c:	str	r1, [sp, #56]	; 0x38
   30e10:	mov	r1, ip
   30e14:	str	r2, [sp, #52]	; 0x34
   30e18:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   30e1c:	ldr	r1, [fp, #8]
   30e20:	ldr	r2, [fp, #12]
   30e24:	ldr	r3, [sp, #60]	; 0x3c
   30e28:	str	r0, [sp, #48]	; 0x30
   30e2c:	mov	r0, r3
   30e30:	ldr	ip, [sp, #56]	; 0x38
   30e34:	str	r1, [sp, #44]	; 0x2c
   30e38:	mov	r1, ip
   30e3c:	ldr	lr, [sp, #52]	; 0x34
   30e40:	str	r2, [sp, #40]	; 0x28
   30e44:	mov	r2, lr
   30e48:	ldr	r3, [sp, #48]	; 0x30
   30e4c:	ldr	r4, [sp, #44]	; 0x2c
   30e50:	str	r4, [sp]
   30e54:	ldr	r5, [sp, #40]	; 0x28
   30e58:	str	r5, [sp, #4]
   30e5c:	bl	308d4 <flatcc_verify_table_field@@Base+0xf0>
   30e60:	cmp	r0, #0
   30e64:	beq	30ee0 <flatcc_verify_table_vector_field@@Base+0x330>
   30e68:	ldr	r0, [fp, #-16]
   30e6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   30e70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30e74:	ldr	r3, [fp, #-16]
   30e78:	ldr	ip, [fp, #-24]	; 0xffffffe8
   30e7c:	str	r0, [sp, #36]	; 0x24
   30e80:	mov	r0, r3
   30e84:	str	r1, [sp, #32]
   30e88:	mov	r1, ip
   30e8c:	str	r2, [sp, #28]
   30e90:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   30e94:	ldr	r1, [fp, #8]
   30e98:	ldr	r2, [fp, #12]
   30e9c:	ldr	r3, [sp, #36]	; 0x24
   30ea0:	str	r0, [sp, #24]
   30ea4:	mov	r0, r3
   30ea8:	ldr	ip, [sp, #32]
   30eac:	str	r1, [sp, #20]
   30eb0:	mov	r1, ip
   30eb4:	ldr	lr, [sp, #28]
   30eb8:	str	r2, [sp, #16]
   30ebc:	mov	r2, lr
   30ec0:	ldr	r3, [sp, #24]
   30ec4:	ldr	r4, [sp, #20]
   30ec8:	str	r4, [sp]
   30ecc:	ldr	r5, [sp, #16]
   30ed0:	str	r5, [sp, #4]
   30ed4:	bl	308d4 <flatcc_verify_table_field@@Base+0xf0>
   30ed8:	str	r0, [fp, #-12]
   30edc:	b	30f08 <flatcc_verify_table_vector_field@@Base+0x358>
   30ee0:	b	30ee4 <flatcc_verify_table_vector_field@@Base+0x334>
   30ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30ee8:	add	r0, r0, #1
   30eec:	str	r0, [fp, #-32]	; 0xffffffe0
   30ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30ef4:	add	r0, r0, #4
   30ef8:	str	r0, [fp, #-24]	; 0xffffffe8
   30efc:	b	30de0 <flatcc_verify_table_vector_field@@Base+0x230>
   30f00:	movw	r0, #0
   30f04:	str	r0, [fp, #-12]
   30f08:	ldr	r0, [fp, #-12]
   30f0c:	sub	sp, fp, #8
   30f10:	pop	{r4, r5, fp, pc}
   30f14:	svccc	0x00ffffff

00030f18 <flatcc_verify_union_table@@Base>:
   30f18:	push	{fp, lr}
   30f1c:	mov	fp, sp
   30f20:	sub	sp, sp, #16
   30f24:	str	r0, [fp, #-4]
   30f28:	str	r1, [sp, #8]
   30f2c:	ldr	r0, [fp, #-4]
   30f30:	ldr	r0, [r0]
   30f34:	ldr	r1, [fp, #-4]
   30f38:	ldr	r1, [r1, #4]
   30f3c:	ldr	r2, [fp, #-4]
   30f40:	ldr	r2, [r2, #16]
   30f44:	ldr	r3, [fp, #-4]
   30f48:	ldr	r3, [r3, #20]
   30f4c:	ldr	ip, [fp, #-4]
   30f50:	ldr	ip, [ip, #8]
   30f54:	ldr	lr, [sp, #8]
   30f58:	str	ip, [sp]
   30f5c:	str	lr, [sp, #4]
   30f60:	bl	308d4 <flatcc_verify_table_field@@Base+0xf0>
   30f64:	mov	sp, fp
   30f68:	pop	{fp, pc}

00030f6c <flatcc_verify_union_struct@@Base>:
   30f6c:	push	{fp, lr}
   30f70:	mov	fp, sp
   30f74:	sub	sp, sp, #16
   30f78:	str	r0, [fp, #-4]
   30f7c:	str	r1, [sp, #8]
   30f80:	strh	r2, [sp, #6]
   30f84:	ldr	r0, [fp, #-4]
   30f88:	ldr	r0, [r0, #4]
   30f8c:	ldr	r1, [fp, #-4]
   30f90:	ldr	r1, [r1, #16]
   30f94:	ldr	r2, [fp, #-4]
   30f98:	ldr	r2, [r2, #20]
   30f9c:	ldr	r3, [sp, #8]
   30fa0:	ldrh	ip, [sp, #6]
   30fa4:	str	ip, [sp]
   30fa8:	bl	30fb4 <flatcc_verify_union_struct@@Base+0x48>
   30fac:	mov	sp, fp
   30fb0:	pop	{fp, pc}
   30fb4:	sub	sp, sp, #36	; 0x24
   30fb8:	ldr	ip, [sp, #36]	; 0x24
   30fbc:	str	r0, [sp, #28]
   30fc0:	str	r1, [sp, #24]
   30fc4:	str	r2, [sp, #20]
   30fc8:	str	r3, [sp, #16]
   30fcc:	strh	ip, [sp, #14]
   30fd0:	ldr	r0, [sp, #20]
   30fd4:	cmp	r0, #0
   30fd8:	beq	30ff4 <flatcc_verify_union_struct@@Base+0x88>
   30fdc:	ldr	r0, [sp, #24]
   30fe0:	ldr	r1, [sp, #20]
   30fe4:	add	r0, r0, r1
   30fe8:	ldr	r1, [sp, #28]
   30fec:	cmp	r0, r1
   30ff0:	bls	31000 <flatcc_verify_union_struct@@Base+0x94>
   30ff4:	movw	r0, #18
   30ff8:	str	r0, [sp, #32]
   30ffc:	b	310e8 <flatcc_verify_union_struct@@Base+0x17c>
   31000:	ldr	r0, [sp, #20]
   31004:	ldr	r1, [sp, #24]
   31008:	add	r0, r1, r0
   3100c:	str	r0, [sp, #24]
   31010:	ldr	r0, [sp, #24]
   31014:	ldr	r1, [sp, #16]
   31018:	add	r0, r0, r1
   3101c:	ldr	r1, [sp, #24]
   31020:	cmp	r0, r1
   31024:	movw	r0, #0
   31028:	movcs	r0, #1
   3102c:	and	r0, r0, #1
   31030:	str	r0, [sp, #8]
   31034:	ldr	r0, [sp, #8]
   31038:	cmp	r0, #0
   3103c:	bne	3104c <flatcc_verify_union_struct@@Base+0xe0>
   31040:	movw	r0, #10
   31044:	str	r0, [sp, #32]
   31048:	b	310e8 <flatcc_verify_union_struct@@Base+0x17c>
   3104c:	b	31050 <flatcc_verify_union_struct@@Base+0xe4>
   31050:	b	31054 <flatcc_verify_union_struct@@Base+0xe8>
   31054:	ldr	r0, [sp, #24]
   31058:	ldr	r1, [sp, #16]
   3105c:	add	r0, r0, r1
   31060:	ldr	r1, [sp, #28]
   31064:	cmp	r0, r1
   31068:	movw	r0, #0
   3106c:	movls	r0, #1
   31070:	and	r0, r0, #1
   31074:	str	r0, [sp, #4]
   31078:	ldr	r0, [sp, #4]
   3107c:	cmp	r0, #0
   31080:	bne	31090 <flatcc_verify_union_struct@@Base+0x124>
   31084:	movw	r0, #9
   31088:	str	r0, [sp, #32]
   3108c:	b	310e8 <flatcc_verify_union_struct@@Base+0x17c>
   31090:	b	31094 <flatcc_verify_union_struct@@Base+0x128>
   31094:	b	31098 <flatcc_verify_union_struct@@Base+0x12c>
   31098:	ldr	r0, [sp, #24]
   3109c:	ldrh	r1, [sp, #14]
   310a0:	sub	r1, r1, #1
   310a4:	and	r0, r0, r1
   310a8:	cmp	r0, #0
   310ac:	movw	r0, #0
   310b0:	movne	r0, #1
   310b4:	mvn	r1, #0
   310b8:	eor	r0, r0, r1
   310bc:	and	r0, r0, #1
   310c0:	str	r0, [sp]
   310c4:	ldr	r0, [sp]
   310c8:	cmp	r0, #0
   310cc:	bne	310dc <flatcc_verify_union_struct@@Base+0x170>
   310d0:	movw	r0, #11
   310d4:	str	r0, [sp, #32]
   310d8:	b	310e8 <flatcc_verify_union_struct@@Base+0x17c>
   310dc:	b	310e0 <flatcc_verify_union_struct@@Base+0x174>
   310e0:	movw	r0, #0
   310e4:	str	r0, [sp, #32]
   310e8:	ldr	r0, [sp, #32]
   310ec:	add	sp, sp, #36	; 0x24
   310f0:	bx	lr

000310f4 <flatcc_verify_union_string@@Base>:
   310f4:	push	{fp, lr}
   310f8:	mov	fp, sp
   310fc:	sub	sp, sp, #8
   31100:	str	r0, [sp, #4]
   31104:	ldr	r0, [sp, #4]
   31108:	ldr	r0, [r0]
   3110c:	ldr	r1, [sp, #4]
   31110:	ldr	r1, [r1, #4]
   31114:	ldr	r2, [sp, #4]
   31118:	ldr	r2, [r2, #16]
   3111c:	ldr	r3, [sp, #4]
   31120:	ldr	r3, [r3, #20]
   31124:	bl	301dc <flatcc_verify_string_field@@Base+0x214>
   31128:	mov	sp, fp
   3112c:	pop	{fp, pc}

00031130 <flatcc_verify_buffer_header@@Base>:
   31130:	push	{fp, lr}
   31134:	mov	fp, sp
   31138:	sub	sp, sp, #48	; 0x30
   3113c:	str	r0, [fp, #-8]
   31140:	str	r1, [fp, #-12]
   31144:	str	r2, [fp, #-16]
   31148:	ldr	r0, [fp, #-8]
   3114c:	and	r0, r0, #3
   31150:	cmp	r0, #0
   31154:	movw	r0, #0
   31158:	movne	r0, #1
   3115c:	mvn	r1, #0
   31160:	eor	r0, r0, r1
   31164:	and	r0, r0, #1
   31168:	str	r0, [sp, #20]
   3116c:	ldr	r0, [sp, #20]
   31170:	cmp	r0, #0
   31174:	bne	31184 <flatcc_verify_buffer_header@@Base+0x54>
   31178:	movw	r0, #5
   3117c:	str	r0, [fp, #-4]
   31180:	b	31284 <flatcc_verify_buffer_header@@Base+0x154>
   31184:	b	31188 <flatcc_verify_buffer_header@@Base+0x58>
   31188:	b	3118c <flatcc_verify_buffer_header@@Base+0x5c>
   3118c:	ldr	r0, [fp, #-12]
   31190:	cmn	r0, #9
   31194:	movw	r0, #0
   31198:	movls	r0, #1
   3119c:	and	r0, r0, #1
   311a0:	str	r0, [sp, #16]
   311a4:	ldr	r0, [sp, #16]
   311a8:	cmp	r0, #0
   311ac:	bne	311bc <flatcc_verify_buffer_header@@Base+0x8c>
   311b0:	movw	r0, #6
   311b4:	str	r0, [fp, #-4]
   311b8:	b	31284 <flatcc_verify_buffer_header@@Base+0x154>
   311bc:	b	311c0 <flatcc_verify_buffer_header@@Base+0x90>
   311c0:	b	311c4 <flatcc_verify_buffer_header@@Base+0x94>
   311c4:	ldr	r0, [fp, #-12]
   311c8:	cmp	r0, #8
   311cc:	movw	r0, #0
   311d0:	movcs	r0, #1
   311d4:	and	r0, r0, #1
   311d8:	str	r0, [sp, #12]
   311dc:	ldr	r0, [sp, #12]
   311e0:	cmp	r0, #0
   311e4:	bne	311f4 <flatcc_verify_buffer_header@@Base+0xc4>
   311e8:	movw	r0, #1
   311ec:	str	r0, [fp, #-4]
   311f0:	b	31284 <flatcc_verify_buffer_header@@Base+0x154>
   311f4:	b	311f8 <flatcc_verify_buffer_header@@Base+0xc8>
   311f8:	ldr	r0, [fp, #-16]
   311fc:	movw	r1, #0
   31200:	cmp	r0, r1
   31204:	beq	3127c <flatcc_verify_buffer_header@@Base+0x14c>
   31208:	ldr	r0, [fp, #-16]
   3120c:	bl	31290 <flatcc_verify_buffer_header@@Base+0x160>
   31210:	str	r0, [sp, #24]
   31214:	ldr	r0, [fp, #-8]
   31218:	movw	r1, #4
   3121c:	bl	312d0 <flatcc_verify_buffer_header@@Base+0x1a0>
   31220:	str	r0, [fp, #-20]	; 0xffffffec
   31224:	ldr	r0, [sp, #24]
   31228:	cmp	r0, #0
   3122c:	movw	r0, #1
   31230:	str	r0, [sp, #4]
   31234:	beq	31250 <flatcc_verify_buffer_header@@Base+0x120>
   31238:	ldr	r0, [fp, #-20]	; 0xffffffec
   3123c:	ldr	r1, [sp, #24]
   31240:	cmp	r0, r1
   31244:	movw	r0, #0
   31248:	moveq	r0, #1
   3124c:	str	r0, [sp, #4]
   31250:	ldr	r0, [sp, #4]
   31254:	and	r0, r0, #1
   31258:	str	r0, [sp, #8]
   3125c:	ldr	r0, [sp, #8]
   31260:	cmp	r0, #0
   31264:	bne	31274 <flatcc_verify_buffer_header@@Base+0x144>
   31268:	movw	r0, #2
   3126c:	str	r0, [fp, #-4]
   31270:	b	31284 <flatcc_verify_buffer_header@@Base+0x154>
   31274:	b	31278 <flatcc_verify_buffer_header@@Base+0x148>
   31278:	b	3127c <flatcc_verify_buffer_header@@Base+0x14c>
   3127c:	movw	r0, #0
   31280:	str	r0, [fp, #-4]
   31284:	ldr	r0, [fp, #-4]
   31288:	mov	sp, fp
   3128c:	pop	{fp, pc}
   31290:	push	{fp, lr}
   31294:	mov	fp, sp
   31298:	sub	sp, sp, #16
   3129c:	str	r0, [fp, #-4]
   312a0:	movw	r0, #0
   312a4:	str	r0, [sp, #8]
   312a8:	add	r0, sp, #8
   312ac:	ldr	r1, [fp, #-4]
   312b0:	movw	r2, #4
   312b4:	bl	14ecc <strncpy@plt>
   312b8:	ldr	r1, [sp, #8]
   312bc:	str	r0, [sp, #4]
   312c0:	mov	r0, r1
   312c4:	bl	3249c <flatcc_verify_union_vector_field@@Base+0x764>
   312c8:	mov	sp, fp
   312cc:	pop	{fp, pc}
   312d0:	push	{fp, lr}
   312d4:	mov	fp, sp
   312d8:	sub	sp, sp, #8
   312dc:	str	r0, [sp, #4]
   312e0:	str	r1, [sp]
   312e4:	ldr	r0, [sp, #4]
   312e8:	ldr	r1, [sp]
   312ec:	add	r0, r0, r1
   312f0:	bl	324b0 <flatcc_verify_union_vector_field@@Base+0x778>
   312f4:	mov	sp, fp
   312f8:	pop	{fp, pc}

000312fc <flatcc_verify_typed_buffer_header@@Base>:
   312fc:	push	{fp, lr}
   31300:	mov	fp, sp
   31304:	sub	sp, sp, #48	; 0x30
   31308:	str	r0, [fp, #-8]
   3130c:	str	r1, [fp, #-12]
   31310:	str	r2, [fp, #-16]
   31314:	ldr	r0, [fp, #-8]
   31318:	and	r0, r0, #3
   3131c:	cmp	r0, #0
   31320:	movw	r0, #0
   31324:	movne	r0, #1
   31328:	mvn	r1, #0
   3132c:	eor	r0, r0, r1
   31330:	and	r0, r0, #1
   31334:	str	r0, [sp, #20]
   31338:	ldr	r0, [sp, #20]
   3133c:	cmp	r0, #0
   31340:	bne	31350 <flatcc_verify_typed_buffer_header@@Base+0x54>
   31344:	movw	r0, #5
   31348:	str	r0, [fp, #-4]
   3134c:	b	31448 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   31350:	b	31354 <flatcc_verify_typed_buffer_header@@Base+0x58>
   31354:	b	31358 <flatcc_verify_typed_buffer_header@@Base+0x5c>
   31358:	ldr	r0, [fp, #-12]
   3135c:	cmn	r0, #9
   31360:	movw	r0, #0
   31364:	movls	r0, #1
   31368:	and	r0, r0, #1
   3136c:	str	r0, [sp, #16]
   31370:	ldr	r0, [sp, #16]
   31374:	cmp	r0, #0
   31378:	bne	31388 <flatcc_verify_typed_buffer_header@@Base+0x8c>
   3137c:	movw	r0, #6
   31380:	str	r0, [fp, #-4]
   31384:	b	31448 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   31388:	b	3138c <flatcc_verify_typed_buffer_header@@Base+0x90>
   3138c:	b	31390 <flatcc_verify_typed_buffer_header@@Base+0x94>
   31390:	ldr	r0, [fp, #-12]
   31394:	cmp	r0, #8
   31398:	movw	r0, #0
   3139c:	movcs	r0, #1
   313a0:	and	r0, r0, #1
   313a4:	str	r0, [sp, #12]
   313a8:	ldr	r0, [sp, #12]
   313ac:	cmp	r0, #0
   313b0:	bne	313c0 <flatcc_verify_typed_buffer_header@@Base+0xc4>
   313b4:	movw	r0, #1
   313b8:	str	r0, [fp, #-4]
   313bc:	b	31448 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   313c0:	b	313c4 <flatcc_verify_typed_buffer_header@@Base+0xc8>
   313c4:	ldr	r0, [fp, #-16]
   313c8:	cmp	r0, #0
   313cc:	beq	31440 <flatcc_verify_typed_buffer_header@@Base+0x144>
   313d0:	ldr	r0, [fp, #-16]
   313d4:	str	r0, [sp, #24]
   313d8:	ldr	r0, [fp, #-8]
   313dc:	movw	r1, #4
   313e0:	bl	312d0 <flatcc_verify_buffer_header@@Base+0x1a0>
   313e4:	str	r0, [fp, #-20]	; 0xffffffec
   313e8:	ldr	r0, [sp, #24]
   313ec:	cmp	r0, #0
   313f0:	movw	r0, #1
   313f4:	str	r0, [sp, #4]
   313f8:	beq	31414 <flatcc_verify_typed_buffer_header@@Base+0x118>
   313fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   31400:	ldr	r1, [sp, #24]
   31404:	cmp	r0, r1
   31408:	movw	r0, #0
   3140c:	moveq	r0, #1
   31410:	str	r0, [sp, #4]
   31414:	ldr	r0, [sp, #4]
   31418:	and	r0, r0, #1
   3141c:	str	r0, [sp, #8]
   31420:	ldr	r0, [sp, #8]
   31424:	cmp	r0, #0
   31428:	bne	31438 <flatcc_verify_typed_buffer_header@@Base+0x13c>
   3142c:	movw	r0, #2
   31430:	str	r0, [fp, #-4]
   31434:	b	31448 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   31438:	b	3143c <flatcc_verify_typed_buffer_header@@Base+0x140>
   3143c:	b	31440 <flatcc_verify_typed_buffer_header@@Base+0x144>
   31440:	movw	r0, #0
   31444:	str	r0, [fp, #-4]
   31448:	ldr	r0, [fp, #-4]
   3144c:	mov	sp, fp
   31450:	pop	{fp, pc}

00031454 <flatcc_verify_struct_as_root@@Base>:
   31454:	push	{fp, lr}
   31458:	mov	fp, sp
   3145c:	sub	sp, sp, #40	; 0x28
   31460:	ldr	ip, [fp, #8]
   31464:	str	r0, [fp, #-8]
   31468:	str	r1, [fp, #-12]
   3146c:	str	r2, [fp, #-16]
   31470:	str	r3, [sp, #20]
   31474:	strh	ip, [sp, #18]
   31478:	ldr	r0, [fp, #-8]
   3147c:	ldr	r1, [fp, #-12]
   31480:	ldr	r2, [fp, #-16]
   31484:	bl	31130 <flatcc_verify_buffer_header@@Base>
   31488:	cmp	r0, #0
   3148c:	beq	314a8 <flatcc_verify_struct_as_root@@Base+0x54>
   31490:	ldr	r0, [fp, #-8]
   31494:	ldr	r1, [fp, #-12]
   31498:	ldr	r2, [fp, #-16]
   3149c:	bl	31130 <flatcc_verify_buffer_header@@Base>
   314a0:	str	r0, [fp, #-4]
   314a4:	b	314e8 <flatcc_verify_struct_as_root@@Base+0x94>
   314a8:	ldr	r0, [fp, #-12]
   314ac:	ldr	r1, [fp, #-8]
   314b0:	str	r0, [sp, #12]
   314b4:	mov	r0, r1
   314b8:	movw	r1, #0
   314bc:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   314c0:	ldr	r3, [sp, #20]
   314c4:	ldr	r1, [sp, #12]
   314c8:	str	r0, [sp, #8]
   314cc:	mov	r0, r1
   314d0:	movw	r1, #0
   314d4:	ldr	r2, [sp, #8]
   314d8:	ldrh	lr, [sp, #18]
   314dc:	str	lr, [sp]
   314e0:	bl	30fb4 <flatcc_verify_union_struct@@Base+0x48>
   314e4:	str	r0, [fp, #-4]
   314e8:	ldr	r0, [fp, #-4]
   314ec:	mov	sp, fp
   314f0:	pop	{fp, pc}

000314f4 <flatcc_verify_struct_as_typed_root@@Base>:
   314f4:	push	{fp, lr}
   314f8:	mov	fp, sp
   314fc:	sub	sp, sp, #40	; 0x28
   31500:	ldr	ip, [fp, #8]
   31504:	str	r0, [fp, #-8]
   31508:	str	r1, [fp, #-12]
   3150c:	str	r2, [fp, #-16]
   31510:	str	r3, [sp, #20]
   31514:	strh	ip, [sp, #18]
   31518:	ldr	r0, [fp, #-8]
   3151c:	ldr	r1, [fp, #-12]
   31520:	ldr	r2, [fp, #-16]
   31524:	bl	312fc <flatcc_verify_typed_buffer_header@@Base>
   31528:	cmp	r0, #0
   3152c:	beq	31548 <flatcc_verify_struct_as_typed_root@@Base+0x54>
   31530:	ldr	r0, [fp, #-8]
   31534:	ldr	r1, [fp, #-12]
   31538:	ldr	r2, [fp, #-16]
   3153c:	bl	312fc <flatcc_verify_typed_buffer_header@@Base>
   31540:	str	r0, [fp, #-4]
   31544:	b	31588 <flatcc_verify_struct_as_typed_root@@Base+0x94>
   31548:	ldr	r0, [fp, #-12]
   3154c:	ldr	r1, [fp, #-8]
   31550:	str	r0, [sp, #12]
   31554:	mov	r0, r1
   31558:	movw	r1, #0
   3155c:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   31560:	ldr	r3, [sp, #20]
   31564:	ldr	r1, [sp, #12]
   31568:	str	r0, [sp, #8]
   3156c:	mov	r0, r1
   31570:	movw	r1, #0
   31574:	ldr	r2, [sp, #8]
   31578:	ldrh	lr, [sp, #18]
   3157c:	str	lr, [sp]
   31580:	bl	30fb4 <flatcc_verify_union_struct@@Base+0x48>
   31584:	str	r0, [fp, #-4]
   31588:	ldr	r0, [fp, #-4]
   3158c:	mov	sp, fp
   31590:	pop	{fp, pc}

00031594 <flatcc_verify_table_as_root@@Base>:
   31594:	push	{fp, lr}
   31598:	mov	fp, sp
   3159c:	sub	sp, sp, #48	; 0x30
   315a0:	str	r0, [fp, #-8]
   315a4:	str	r1, [fp, #-12]
   315a8:	str	r2, [fp, #-16]
   315ac:	str	r3, [fp, #-20]	; 0xffffffec
   315b0:	ldr	r0, [fp, #-8]
   315b4:	ldr	r1, [fp, #-12]
   315b8:	ldr	r2, [fp, #-16]
   315bc:	bl	31130 <flatcc_verify_buffer_header@@Base>
   315c0:	cmp	r0, #0
   315c4:	beq	315e0 <flatcc_verify_table_as_root@@Base+0x4c>
   315c8:	ldr	r0, [fp, #-8]
   315cc:	ldr	r1, [fp, #-12]
   315d0:	ldr	r2, [fp, #-16]
   315d4:	bl	31130 <flatcc_verify_buffer_header@@Base>
   315d8:	str	r0, [fp, #-4]
   315dc:	b	31640 <flatcc_verify_table_as_root@@Base+0xac>
   315e0:	ldr	r0, [fp, #-8]
   315e4:	ldr	r1, [fp, #-12]
   315e8:	ldr	r2, [fp, #-8]
   315ec:	str	r0, [sp, #24]
   315f0:	mov	r0, r2
   315f4:	movw	r2, #0
   315f8:	str	r1, [sp, #20]
   315fc:	mov	r1, r2
   31600:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   31604:	ldr	r1, [fp, #-20]	; 0xffffffec
   31608:	ldr	r2, [sp, #24]
   3160c:	str	r0, [sp, #16]
   31610:	mov	r0, r2
   31614:	ldr	lr, [sp, #20]
   31618:	str	r1, [sp, #12]
   3161c:	mov	r1, lr
   31620:	movw	r2, #0
   31624:	ldr	r3, [sp, #16]
   31628:	movw	ip, #100	; 0x64
   3162c:	str	ip, [sp]
   31630:	ldr	ip, [sp, #12]
   31634:	str	ip, [sp, #4]
   31638:	bl	308d4 <flatcc_verify_table_field@@Base+0xf0>
   3163c:	str	r0, [fp, #-4]
   31640:	ldr	r0, [fp, #-4]
   31644:	mov	sp, fp
   31648:	pop	{fp, pc}

0003164c <flatcc_verify_table_as_typed_root@@Base>:
   3164c:	push	{fp, lr}
   31650:	mov	fp, sp
   31654:	sub	sp, sp, #48	; 0x30
   31658:	str	r0, [fp, #-8]
   3165c:	str	r1, [fp, #-12]
   31660:	str	r2, [fp, #-16]
   31664:	str	r3, [fp, #-20]	; 0xffffffec
   31668:	ldr	r0, [fp, #-8]
   3166c:	ldr	r1, [fp, #-12]
   31670:	ldr	r2, [fp, #-16]
   31674:	bl	312fc <flatcc_verify_typed_buffer_header@@Base>
   31678:	cmp	r0, #0
   3167c:	beq	31698 <flatcc_verify_table_as_typed_root@@Base+0x4c>
   31680:	ldr	r0, [fp, #-8]
   31684:	ldr	r1, [fp, #-12]
   31688:	ldr	r2, [fp, #-16]
   3168c:	bl	312fc <flatcc_verify_typed_buffer_header@@Base>
   31690:	str	r0, [fp, #-4]
   31694:	b	316f8 <flatcc_verify_table_as_typed_root@@Base+0xac>
   31698:	ldr	r0, [fp, #-8]
   3169c:	ldr	r1, [fp, #-12]
   316a0:	ldr	r2, [fp, #-8]
   316a4:	str	r0, [sp, #24]
   316a8:	mov	r0, r2
   316ac:	movw	r2, #0
   316b0:	str	r1, [sp, #20]
   316b4:	mov	r1, r2
   316b8:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   316bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   316c0:	ldr	r2, [sp, #24]
   316c4:	str	r0, [sp, #16]
   316c8:	mov	r0, r2
   316cc:	ldr	lr, [sp, #20]
   316d0:	str	r1, [sp, #12]
   316d4:	mov	r1, lr
   316d8:	movw	r2, #0
   316dc:	ldr	r3, [sp, #16]
   316e0:	movw	ip, #100	; 0x64
   316e4:	str	ip, [sp]
   316e8:	ldr	ip, [sp, #12]
   316ec:	str	ip, [sp, #4]
   316f0:	bl	308d4 <flatcc_verify_table_field@@Base+0xf0>
   316f4:	str	r0, [fp, #-4]
   316f8:	ldr	r0, [fp, #-4]
   316fc:	mov	sp, fp
   31700:	pop	{fp, pc}

00031704 <flatcc_verify_struct_as_nested_root@@Base>:
   31704:	push	{fp, lr}
   31708:	mov	fp, sp
   3170c:	sub	sp, sp, #48	; 0x30
   31710:	ldr	ip, [fp, #12]
   31714:	ldr	lr, [fp, #8]
   31718:	str	r0, [fp, #-8]
   3171c:	strh	r1, [fp, #-10]
   31720:	str	r2, [fp, #-16]
   31724:	str	r3, [fp, #-20]	; 0xffffffec
   31728:	strh	ip, [fp, #-22]	; 0xffffffea
   3172c:	ldr	r0, [fp, #-8]
   31730:	ldrh	r1, [fp, #-10]
   31734:	ldr	r2, [fp, #-16]
   31738:	ldrh	r3, [fp, #-22]	; 0xffffffea
   3173c:	uxth	r1, r1
   31740:	movw	ip, #1
   31744:	uxth	ip, ip
   31748:	str	ip, [sp]
   3174c:	mvn	ip, #0
   31750:	str	ip, [sp, #4]
   31754:	str	lr, [sp, #12]
   31758:	bl	30324 <flatcc_verify_vector_field@@Base>
   3175c:	cmp	r0, #0
   31760:	beq	31798 <flatcc_verify_struct_as_nested_root@@Base+0x94>
   31764:	ldr	r0, [fp, #-8]
   31768:	ldrh	r1, [fp, #-10]
   3176c:	ldr	r2, [fp, #-16]
   31770:	ldrh	r3, [fp, #-22]	; 0xffffffea
   31774:	uxth	r1, r1
   31778:	movw	ip, #1
   3177c:	uxth	ip, ip
   31780:	str	ip, [sp]
   31784:	mvn	ip, #0
   31788:	str	ip, [sp, #4]
   3178c:	bl	30324 <flatcc_verify_vector_field@@Base>
   31790:	str	r0, [fp, #-4]
   31794:	b	31820 <flatcc_verify_struct_as_nested_root@@Base+0x11c>
   31798:	ldr	r0, [fp, #-8]
   3179c:	ldrh	r1, [fp, #-10]
   317a0:	bl	3182c <flatcc_verify_struct_as_nested_root@@Base+0x128>
   317a4:	str	r0, [sp, #20]
   317a8:	movw	r1, #0
   317ac:	cmp	r1, r0
   317b0:	bne	317c0 <flatcc_verify_struct_as_nested_root@@Base+0xbc>
   317b4:	movw	r0, #0
   317b8:	str	r0, [fp, #-4]
   317bc:	b	31820 <flatcc_verify_struct_as_nested_root@@Base+0x11c>
   317c0:	ldr	r0, [sp, #20]
   317c4:	ldr	r1, [sp, #20]
   317c8:	str	r0, [sp, #8]
   317cc:	mov	r0, r1
   317d0:	movw	r1, #0
   317d4:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   317d8:	ldr	r1, [sp, #8]
   317dc:	add	r0, r1, r0
   317e0:	str	r0, [sp, #20]
   317e4:	ldr	r0, [sp, #20]
   317e8:	movw	r1, #0
   317ec:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   317f0:	str	r0, [sp, #16]
   317f4:	ldr	r0, [sp, #20]
   317f8:	add	r0, r0, #4
   317fc:	str	r0, [sp, #20]
   31800:	ldr	r0, [sp, #20]
   31804:	ldr	r1, [sp, #16]
   31808:	ldr	r2, [fp, #-20]	; 0xffffffec
   3180c:	ldr	r3, [fp, #8]
   31810:	ldrh	lr, [fp, #-22]	; 0xffffffea
   31814:	str	lr, [sp]
   31818:	bl	31454 <flatcc_verify_struct_as_root@@Base>
   3181c:	str	r0, [fp, #-4]
   31820:	ldr	r0, [fp, #-4]
   31824:	mov	sp, fp
   31828:	pop	{fp, pc}
   3182c:	push	{fp, lr}
   31830:	mov	fp, sp
   31834:	sub	sp, sp, #16
   31838:	str	r0, [fp, #-4]
   3183c:	strh	r1, [fp, #-6]
   31840:	ldr	r0, [fp, #-4]
   31844:	ldrh	r1, [fp, #-6]
   31848:	bl	31cd0 <flatcc_verify_union_field@@Base+0x290>
   3184c:	strh	r0, [sp, #8]
   31850:	ldrh	r0, [sp, #8]
   31854:	cmp	r0, #0
   31858:	beq	31880 <flatcc_verify_struct_as_nested_root@@Base+0x17c>
   3185c:	ldr	r0, [fp, #-4]
   31860:	ldr	r0, [r0]
   31864:	ldr	r1, [fp, #-4]
   31868:	ldr	r1, [r1, #16]
   3186c:	add	r0, r0, r1
   31870:	ldrh	r1, [sp, #8]
   31874:	add	r0, r0, r1
   31878:	str	r0, [sp, #4]
   3187c:	b	3188c <flatcc_verify_struct_as_nested_root@@Base+0x188>
   31880:	movw	r0, #0
   31884:	str	r0, [sp, #4]
   31888:	b	3188c <flatcc_verify_struct_as_nested_root@@Base+0x188>
   3188c:	ldr	r0, [sp, #4]
   31890:	mov	sp, fp
   31894:	pop	{fp, pc}

00031898 <flatcc_verify_table_as_nested_root@@Base>:
   31898:	push	{r4, sl, fp, lr}
   3189c:	add	fp, sp, #8
   318a0:	sub	sp, sp, #72	; 0x48
   318a4:	ldr	ip, [fp, #12]
   318a8:	ldr	lr, [fp, #8]
   318ac:	str	r0, [fp, #-16]
   318b0:	strh	r1, [fp, #-18]	; 0xffffffee
   318b4:	str	r2, [fp, #-24]	; 0xffffffe8
   318b8:	str	r3, [fp, #-28]	; 0xffffffe4
   318bc:	strh	lr, [fp, #-30]	; 0xffffffe2
   318c0:	ldr	r0, [fp, #-16]
   318c4:	ldrh	r1, [fp, #-18]	; 0xffffffee
   318c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   318cc:	ldrh	r3, [fp, #-30]	; 0xffffffe2
   318d0:	uxth	r1, r1
   318d4:	movw	lr, #1
   318d8:	uxth	lr, lr
   318dc:	str	lr, [sp]
   318e0:	mvn	lr, #0
   318e4:	str	lr, [sp, #4]
   318e8:	str	ip, [sp, #36]	; 0x24
   318ec:	bl	30324 <flatcc_verify_vector_field@@Base>
   318f0:	cmp	r0, #0
   318f4:	beq	3192c <flatcc_verify_table_as_nested_root@@Base+0x94>
   318f8:	ldr	r0, [fp, #-16]
   318fc:	ldrh	r1, [fp, #-18]	; 0xffffffee
   31900:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31904:	ldrh	r3, [fp, #-30]	; 0xffffffe2
   31908:	uxth	r1, r1
   3190c:	movw	ip, #1
   31910:	uxth	ip, ip
   31914:	str	ip, [sp]
   31918:	mvn	ip, #0
   3191c:	str	ip, [sp, #4]
   31920:	bl	30324 <flatcc_verify_vector_field@@Base>
   31924:	str	r0, [fp, #-12]
   31928:	b	31a34 <flatcc_verify_table_as_nested_root@@Base+0x19c>
   3192c:	ldr	r0, [fp, #-16]
   31930:	ldrh	r1, [fp, #-18]	; 0xffffffee
   31934:	bl	3182c <flatcc_verify_struct_as_nested_root@@Base+0x128>
   31938:	str	r0, [fp, #-36]	; 0xffffffdc
   3193c:	movw	r1, #0
   31940:	cmp	r1, r0
   31944:	bne	31954 <flatcc_verify_table_as_nested_root@@Base+0xbc>
   31948:	movw	r0, #0
   3194c:	str	r0, [fp, #-12]
   31950:	b	31a34 <flatcc_verify_table_as_nested_root@@Base+0x19c>
   31954:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31958:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3195c:	str	r0, [sp, #32]
   31960:	mov	r0, r1
   31964:	movw	r1, #0
   31968:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   3196c:	ldr	r1, [sp, #32]
   31970:	add	r0, r1, r0
   31974:	str	r0, [fp, #-36]	; 0xffffffdc
   31978:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3197c:	movw	r1, #0
   31980:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   31984:	str	r0, [sp, #40]	; 0x28
   31988:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3198c:	add	r0, r0, #4
   31990:	str	r0, [fp, #-36]	; 0xffffffdc
   31994:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31998:	ldr	r1, [sp, #40]	; 0x28
   3199c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   319a0:	bl	31130 <flatcc_verify_buffer_header@@Base>
   319a4:	cmp	r0, #0
   319a8:	beq	319c4 <flatcc_verify_table_as_nested_root@@Base+0x12c>
   319ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   319b0:	ldr	r1, [sp, #40]	; 0x28
   319b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   319b8:	bl	31130 <flatcc_verify_buffer_header@@Base>
   319bc:	str	r0, [fp, #-12]
   319c0:	b	31a34 <flatcc_verify_table_as_nested_root@@Base+0x19c>
   319c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   319c8:	ldr	r1, [sp, #40]	; 0x28
   319cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   319d0:	str	r0, [sp, #28]
   319d4:	mov	r0, r2
   319d8:	movw	r2, #0
   319dc:	str	r1, [sp, #24]
   319e0:	mov	r1, r2
   319e4:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   319e8:	ldr	r1, [fp, #-16]
   319ec:	ldr	r1, [r1, #8]
   319f0:	ldr	r2, [fp, #12]
   319f4:	ldr	lr, [sp, #28]
   319f8:	str	r0, [sp, #20]
   319fc:	mov	r0, lr
   31a00:	ldr	r3, [sp, #24]
   31a04:	str	r1, [sp, #16]
   31a08:	mov	r1, r3
   31a0c:	movw	ip, #0
   31a10:	str	r2, [sp, #12]
   31a14:	mov	r2, ip
   31a18:	ldr	r3, [sp, #20]
   31a1c:	ldr	ip, [sp, #16]
   31a20:	str	ip, [sp]
   31a24:	ldr	r4, [sp, #12]
   31a28:	str	r4, [sp, #4]
   31a2c:	bl	308d4 <flatcc_verify_table_field@@Base+0xf0>
   31a30:	str	r0, [fp, #-12]
   31a34:	ldr	r0, [fp, #-12]
   31a38:	sub	sp, fp, #8
   31a3c:	pop	{r4, sl, fp, pc}

00031a40 <flatcc_verify_union_field@@Base>:
   31a40:	push	{fp, lr}
   31a44:	mov	fp, sp
   31a48:	sub	sp, sp, #88	; 0x58
   31a4c:	str	r0, [fp, #-8]
   31a50:	strh	r1, [fp, #-10]
   31a54:	str	r2, [fp, #-16]
   31a58:	str	r3, [fp, #-20]	; 0xffffffec
   31a5c:	ldr	r0, [fp, #-8]
   31a60:	ldrh	r1, [fp, #-10]
   31a64:	sub	r1, r1, #1
   31a68:	uxth	r1, r1
   31a6c:	bl	31cd0 <flatcc_verify_union_field@@Base+0x290>
   31a70:	strh	r0, [fp, #-22]	; 0xffffffea
   31a74:	uxth	r0, r0
   31a78:	movw	r1, #0
   31a7c:	cmp	r1, r0
   31a80:	bne	31b14 <flatcc_verify_union_field@@Base+0xd4>
   31a84:	ldr	r0, [fp, #-8]
   31a88:	ldrh	r1, [fp, #-10]
   31a8c:	bl	31cd0 <flatcc_verify_union_field@@Base+0x290>
   31a90:	strh	r0, [fp, #-24]	; 0xffffffe8
   31a94:	ldrh	r0, [fp, #-24]	; 0xffffffe8
   31a98:	cmp	r0, #0
   31a9c:	movw	r0, #0
   31aa0:	moveq	r0, #1
   31aa4:	and	r0, r0, #1
   31aa8:	str	r0, [sp, #28]
   31aac:	ldr	r0, [sp, #28]
   31ab0:	cmp	r0, #0
   31ab4:	bne	31ac4 <flatcc_verify_union_field@@Base+0x84>
   31ab8:	movw	r0, #23
   31abc:	str	r0, [fp, #-4]
   31ac0:	b	31cc4 <flatcc_verify_union_field@@Base+0x284>
   31ac4:	b	31ac8 <flatcc_verify_union_field@@Base+0x88>
   31ac8:	b	31acc <flatcc_verify_union_field@@Base+0x8c>
   31acc:	ldr	r0, [fp, #-16]
   31ad0:	cmp	r0, #0
   31ad4:	movw	r0, #0
   31ad8:	movne	r0, #1
   31adc:	mvn	r1, #0
   31ae0:	eor	r0, r0, r1
   31ae4:	and	r0, r0, #1
   31ae8:	str	r0, [sp, #24]
   31aec:	ldr	r0, [sp, #24]
   31af0:	cmp	r0, #0
   31af4:	bne	31b04 <flatcc_verify_union_field@@Base+0xc4>
   31af8:	movw	r0, #21
   31afc:	str	r0, [fp, #-4]
   31b00:	b	31cc4 <flatcc_verify_union_field@@Base+0x284>
   31b04:	b	31b08 <flatcc_verify_union_field@@Base+0xc8>
   31b08:	movw	r0, #0
   31b0c:	str	r0, [fp, #-4]
   31b10:	b	31cc4 <flatcc_verify_union_field@@Base+0x284>
   31b14:	ldr	r0, [fp, #-8]
   31b18:	ldrh	r1, [fp, #-10]
   31b1c:	sub	r1, r1, #1
   31b20:	uxth	r1, r1
   31b24:	movw	r2, #0
   31b28:	movw	r3, #1
   31b2c:	movw	ip, #1
   31b30:	uxth	ip, ip
   31b34:	str	ip, [sp]
   31b38:	bl	2fe3c <flatcc_verify_field@@Base+0x80>
   31b3c:	cmp	r0, #0
   31b40:	beq	31b74 <flatcc_verify_union_field@@Base+0x134>
   31b44:	ldr	r0, [fp, #-8]
   31b48:	ldrh	r1, [fp, #-10]
   31b4c:	sub	r1, r1, #1
   31b50:	uxth	r1, r1
   31b54:	movw	r2, #0
   31b58:	movw	r3, #1
   31b5c:	movw	ip, #1
   31b60:	uxth	ip, ip
   31b64:	str	ip, [sp]
   31b68:	bl	2fe3c <flatcc_verify_field@@Base+0x80>
   31b6c:	str	r0, [fp, #-4]
   31b70:	b	31cc4 <flatcc_verify_union_field@@Base+0x284>
   31b74:	ldr	r0, [fp, #-8]
   31b78:	ldrh	r1, [fp, #-10]
   31b7c:	bl	31cd0 <flatcc_verify_union_field@@Base+0x290>
   31b80:	strh	r0, [fp, #-24]	; 0xffffffe8
   31b84:	ldr	r0, [fp, #-8]
   31b88:	ldr	r0, [r0]
   31b8c:	ldr	r1, [fp, #-8]
   31b90:	ldr	r1, [r1, #16]
   31b94:	add	r0, r0, r1
   31b98:	ldrh	r1, [fp, #-22]	; 0xffffffea
   31b9c:	add	r0, r0, r1
   31ba0:	str	r0, [fp, #-28]	; 0xffffffe4
   31ba4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31ba8:	ldrb	r0, [r0]
   31bac:	cmp	r0, #0
   31bb0:	movw	r0, #1
   31bb4:	str	r0, [sp, #12]
   31bb8:	bne	31bd0 <flatcc_verify_union_field@@Base+0x190>
   31bbc:	ldrh	r0, [fp, #-24]	; 0xffffffe8
   31bc0:	cmp	r0, #0
   31bc4:	movw	r0, #0
   31bc8:	moveq	r0, #1
   31bcc:	str	r0, [sp, #12]
   31bd0:	ldr	r0, [sp, #12]
   31bd4:	and	r0, r0, #1
   31bd8:	str	r0, [sp, #20]
   31bdc:	ldr	r0, [sp, #20]
   31be0:	cmp	r0, #0
   31be4:	bne	31bf4 <flatcc_verify_union_field@@Base+0x1b4>
   31be8:	movw	r0, #24
   31bec:	str	r0, [fp, #-4]
   31bf0:	b	31cc4 <flatcc_verify_union_field@@Base+0x284>
   31bf4:	b	31bf8 <flatcc_verify_union_field@@Base+0x1b8>
   31bf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31bfc:	ldrb	r0, [r0]
   31c00:	cmp	r0, #0
   31c04:	bne	31c14 <flatcc_verify_union_field@@Base+0x1d4>
   31c08:	movw	r0, #0
   31c0c:	str	r0, [fp, #-4]
   31c10:	b	31cc4 <flatcc_verify_union_field@@Base+0x284>
   31c14:	b	31c18 <flatcc_verify_union_field@@Base+0x1d8>
   31c18:	ldr	r0, [fp, #-8]
   31c1c:	ldrh	r1, [fp, #-10]
   31c20:	ldr	r2, [fp, #-16]
   31c24:	uxth	r1, r1
   31c28:	sub	r3, fp, #32
   31c2c:	bl	30088 <flatcc_verify_string_field@@Base+0xc0>
   31c30:	str	r0, [sp, #16]
   31c34:	ldr	r0, [sp, #16]
   31c38:	cmp	r0, #0
   31c3c:	bne	31c4c <flatcc_verify_union_field@@Base+0x20c>
   31c40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31c44:	cmp	r0, #0
   31c48:	bne	31c58 <flatcc_verify_union_field@@Base+0x218>
   31c4c:	ldr	r0, [sp, #16]
   31c50:	str	r0, [fp, #-4]
   31c54:	b	31cc4 <flatcc_verify_union_field@@Base+0x284>
   31c58:	b	31c5c <flatcc_verify_union_field@@Base+0x21c>
   31c5c:	ldr	r0, [fp, #-8]
   31c60:	ldr	r0, [r0]
   31c64:	str	r0, [sp, #32]
   31c68:	ldr	r0, [fp, #-8]
   31c6c:	ldr	r0, [r0, #4]
   31c70:	str	r0, [sp, #36]	; 0x24
   31c74:	ldr	r0, [fp, #-8]
   31c78:	ldr	r0, [r0, #8]
   31c7c:	str	r0, [sp, #40]	; 0x28
   31c80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31c84:	str	r0, [sp, #48]	; 0x30
   31c88:	ldr	r0, [fp, #-8]
   31c8c:	ldr	r0, [r0]
   31c90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31c94:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   31c98:	str	r0, [sp, #52]	; 0x34
   31c9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31ca0:	ldrb	r0, [r0]
   31ca4:	strb	r0, [sp, #44]	; 0x2c
   31ca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   31cac:	add	r1, sp, #32
   31cb0:	str	r0, [sp, #8]
   31cb4:	mov	r0, r1
   31cb8:	ldr	r1, [sp, #8]
   31cbc:	blx	r1
   31cc0:	str	r0, [fp, #-4]
   31cc4:	ldr	r0, [fp, #-4]
   31cc8:	mov	sp, fp
   31ccc:	pop	{fp, pc}
   31cd0:	push	{fp, lr}
   31cd4:	mov	fp, sp
   31cd8:	sub	sp, sp, #16
   31cdc:	str	r0, [sp, #8]
   31ce0:	strh	r1, [sp, #6]
   31ce4:	ldrh	r0, [sp, #6]
   31ce8:	add	r0, r0, #2
   31cec:	lsl	r0, r0, #1
   31cf0:	strh	r0, [sp, #4]
   31cf4:	ldrh	r0, [sp, #4]
   31cf8:	ldr	r1, [sp, #8]
   31cfc:	ldrh	r1, [r1, #22]
   31d00:	cmp	r0, r1
   31d04:	blt	31d14 <flatcc_verify_union_field@@Base+0x2d4>
   31d08:	movw	r0, #0
   31d0c:	str	r0, [fp, #-4]
   31d10:	b	31d2c <flatcc_verify_union_field@@Base+0x2ec>
   31d14:	ldr	r0, [sp, #8]
   31d18:	ldr	r0, [r0, #12]
   31d1c:	ldrh	r1, [sp, #4]
   31d20:	bl	32430 <flatcc_verify_union_vector_field@@Base+0x6f8>
   31d24:	uxth	r0, r0
   31d28:	str	r0, [fp, #-4]
   31d2c:	ldr	r0, [fp, #-4]
   31d30:	mov	sp, fp
   31d34:	pop	{fp, pc}

00031d38 <flatcc_verify_union_vector_field@@Base>:
   31d38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31d3c:	add	fp, sp, #24
   31d40:	sub	sp, sp, #96	; 0x60
   31d44:	str	r0, [fp, #-32]	; 0xffffffe0
   31d48:	strh	r1, [fp, #-34]	; 0xffffffde
   31d4c:	str	r2, [fp, #-40]	; 0xffffffd8
   31d50:	str	r3, [fp, #-44]	; 0xffffffd4
   31d54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31d58:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31d5c:	sub	r1, r1, #1
   31d60:	uxth	r1, r1
   31d64:	bl	31cd0 <flatcc_verify_union_field@@Base+0x290>
   31d68:	strh	r0, [fp, #-46]	; 0xffffffd2
   31d6c:	uxth	r0, r0
   31d70:	movw	r1, #0
   31d74:	cmp	r1, r0
   31d78:	bne	31de4 <flatcc_verify_union_vector_field@@Base+0xac>
   31d7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31d80:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31d84:	bl	31cd0 <flatcc_verify_union_field@@Base+0x290>
   31d88:	strh	r0, [fp, #-48]	; 0xffffffd0
   31d8c:	uxth	r0, r0
   31d90:	movw	r1, #0
   31d94:	cmp	r1, r0
   31d98:	bne	31de0 <flatcc_verify_union_vector_field@@Base+0xa8>
   31d9c:	b	31da0 <flatcc_verify_union_vector_field@@Base+0x68>
   31da0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31da4:	cmp	r0, #0
   31da8:	movw	r0, #0
   31dac:	movne	r0, #1
   31db0:	mvn	r1, #0
   31db4:	eor	r0, r0, r1
   31db8:	and	r0, r0, #1
   31dbc:	str	r0, [sp, #52]	; 0x34
   31dc0:	ldr	r0, [sp, #52]	; 0x34
   31dc4:	cmp	r0, #0
   31dc8:	bne	31dd8 <flatcc_verify_union_vector_field@@Base+0xa0>
   31dcc:	movw	r0, #22
   31dd0:	str	r0, [fp, #-28]	; 0xffffffe4
   31dd4:	b	31fb0 <flatcc_verify_union_vector_field@@Base+0x278>
   31dd8:	b	31ddc <flatcc_verify_union_vector_field@@Base+0xa4>
   31ddc:	b	31de0 <flatcc_verify_union_vector_field@@Base+0xa8>
   31de0:	b	31de4 <flatcc_verify_union_vector_field@@Base+0xac>
   31de4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31de8:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31dec:	sub	r1, r1, #1
   31df0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31df4:	uxth	r1, r1
   31df8:	movw	r3, #1
   31dfc:	movw	ip, #1
   31e00:	uxth	ip, ip
   31e04:	str	ip, [sp]
   31e08:	mvn	ip, #0
   31e0c:	str	ip, [sp, #4]
   31e10:	bl	30324 <flatcc_verify_vector_field@@Base>
   31e14:	cmp	r0, #0
   31e18:	beq	31e54 <flatcc_verify_union_vector_field@@Base+0x11c>
   31e1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31e20:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31e24:	sub	r1, r1, #1
   31e28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31e2c:	uxth	r1, r1
   31e30:	movw	r3, #1
   31e34:	movw	ip, #1
   31e38:	uxth	ip, ip
   31e3c:	str	ip, [sp]
   31e40:	mvn	ip, #0
   31e44:	str	ip, [sp, #4]
   31e48:	bl	30324 <flatcc_verify_vector_field@@Base>
   31e4c:	str	r0, [fp, #-28]	; 0xffffffe4
   31e50:	b	31fb0 <flatcc_verify_union_vector_field@@Base+0x278>
   31e54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31e58:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31e5c:	sub	r1, r1, #1
   31e60:	uxth	r1, r1
   31e64:	bl	3182c <flatcc_verify_struct_as_nested_root@@Base+0x128>
   31e68:	str	r0, [fp, #-52]	; 0xffffffcc
   31e6c:	movw	r1, #0
   31e70:	cmp	r1, r0
   31e74:	bne	31e84 <flatcc_verify_union_vector_field@@Base+0x14c>
   31e78:	movw	r0, #0
   31e7c:	str	r0, [fp, #-28]	; 0xffffffe4
   31e80:	b	31fb0 <flatcc_verify_union_vector_field@@Base+0x278>
   31e84:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31e88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   31e8c:	str	r0, [sp, #44]	; 0x2c
   31e90:	mov	r0, r1
   31e94:	movw	r1, #0
   31e98:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   31e9c:	ldr	r1, [sp, #44]	; 0x2c
   31ea0:	add	r0, r1, r0
   31ea4:	str	r0, [fp, #-52]	; 0xffffffcc
   31ea8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31eac:	movw	r1, #0
   31eb0:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   31eb4:	str	r0, [sp, #60]	; 0x3c
   31eb8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31ebc:	add	r0, r0, #4
   31ec0:	str	r0, [fp, #-52]	; 0xffffffcc
   31ec4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31ec8:	str	r0, [fp, #-56]	; 0xffffffc8
   31ecc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31ed0:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31ed4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31ed8:	uxth	r1, r1
   31edc:	add	r3, sp, #56	; 0x38
   31ee0:	bl	30088 <flatcc_verify_string_field@@Base+0xc0>
   31ee4:	str	r0, [sp, #48]	; 0x30
   31ee8:	ldr	r0, [sp, #48]	; 0x30
   31eec:	cmp	r0, #0
   31ef0:	bne	31f00 <flatcc_verify_union_vector_field@@Base+0x1c8>
   31ef4:	ldr	r0, [sp, #56]	; 0x38
   31ef8:	cmp	r0, #0
   31efc:	bne	31f0c <flatcc_verify_union_vector_field@@Base+0x1d4>
   31f00:	ldr	r0, [sp, #48]	; 0x30
   31f04:	str	r0, [fp, #-28]	; 0xffffffe4
   31f08:	b	31fb0 <flatcc_verify_union_vector_field@@Base+0x278>
   31f0c:	b	31f10 <flatcc_verify_union_vector_field@@Base+0x1d8>
   31f10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31f14:	ldr	r0, [r0]
   31f18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31f1c:	ldr	r1, [r1, #4]
   31f20:	ldr	r2, [sp, #56]	; 0x38
   31f24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31f28:	ldr	r3, [r3]
   31f2c:	ldr	ip, [sp, #56]	; 0x38
   31f30:	str	r0, [sp, #40]	; 0x28
   31f34:	mov	r0, r3
   31f38:	str	r1, [sp, #36]	; 0x24
   31f3c:	mov	r1, ip
   31f40:	str	r2, [sp, #32]
   31f44:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   31f48:	ldr	r1, [sp, #60]	; 0x3c
   31f4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   31f50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31f54:	ldr	r3, [r3, #8]
   31f58:	ldr	ip, [fp, #-44]	; 0xffffffd4
   31f5c:	ldr	lr, [sp, #40]	; 0x28
   31f60:	str	r0, [sp, #28]
   31f64:	mov	r0, lr
   31f68:	ldr	r4, [sp, #36]	; 0x24
   31f6c:	str	r1, [sp, #24]
   31f70:	mov	r1, r4
   31f74:	ldr	r5, [sp, #32]
   31f78:	str	r2, [sp, #20]
   31f7c:	mov	r2, r5
   31f80:	ldr	r6, [sp, #28]
   31f84:	str	r3, [sp, #16]
   31f88:	mov	r3, r6
   31f8c:	ldr	r7, [sp, #24]
   31f90:	str	r7, [sp]
   31f94:	ldr	r8, [sp, #20]
   31f98:	str	r8, [sp, #4]
   31f9c:	ldr	r9, [sp, #16]
   31fa0:	str	r9, [sp, #8]
   31fa4:	str	ip, [sp, #12]
   31fa8:	bl	31fbc <flatcc_verify_union_vector_field@@Base+0x284>
   31fac:	str	r0, [fp, #-28]	; 0xffffffe4
   31fb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31fb4:	sub	sp, fp, #24
   31fb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31fbc:	push	{r4, r5, fp, lr}
   31fc0:	add	fp, sp, #8
   31fc4:	sub	sp, sp, #120	; 0x78
   31fc8:	ldr	ip, [fp, #20]
   31fcc:	ldr	lr, [fp, #16]
   31fd0:	ldr	r4, [fp, #12]
   31fd4:	ldr	r5, [fp, #8]
   31fd8:	str	r0, [fp, #-16]
   31fdc:	str	r1, [fp, #-20]	; 0xffffffec
   31fe0:	str	r2, [fp, #-24]	; 0xffffffe8
   31fe4:	str	r3, [fp, #-28]	; 0xffffffe4
   31fe8:	str	r5, [sp, #44]	; 0x2c
   31fec:	str	ip, [sp, #40]	; 0x28
   31ff0:	str	lr, [sp, #36]	; 0x24
   31ff4:	str	r4, [sp, #32]
   31ff8:	ldr	r0, [fp, #16]
   31ffc:	mvn	r1, #0
   32000:	add	r1, r0, r1
   32004:	str	r1, [fp, #16]
   32008:	cmp	r0, #0
   3200c:	movw	r0, #0
   32010:	movgt	r0, #1
   32014:	and	r0, r0, #1
   32018:	str	r0, [sp, #60]	; 0x3c
   3201c:	ldr	r0, [sp, #60]	; 0x3c
   32020:	cmp	r0, #0
   32024:	bne	32034 <flatcc_verify_union_vector_field@@Base+0x2fc>
   32028:	movw	r0, #3
   3202c:	str	r0, [fp, #-12]
   32030:	b	322a4 <flatcc_verify_union_vector_field@@Base+0x56c>
   32034:	b	32038 <flatcc_verify_union_vector_field@@Base+0x300>
   32038:	ldr	r0, [pc, #624]	; 322b0 <flatcc_verify_union_vector_field@@Base+0x578>
   3203c:	ldr	r1, [fp, #-16]
   32040:	ldr	r2, [fp, #-20]	; 0xffffffec
   32044:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32048:	ldr	ip, [fp, #-28]	; 0xffffffe4
   3204c:	str	r0, [sp, #28]
   32050:	mov	r0, r1
   32054:	mov	r1, r2
   32058:	mov	r2, r3
   3205c:	mov	r3, ip
   32060:	movw	ip, #4
   32064:	str	ip, [sp]
   32068:	movw	ip, #4
   3206c:	uxth	ip, ip
   32070:	str	ip, [sp, #4]
   32074:	ldr	ip, [sp, #28]
   32078:	str	ip, [sp, #8]
   3207c:	bl	30438 <flatcc_verify_vector_field@@Base+0x114>
   32080:	cmp	r0, #0
   32084:	beq	320d8 <flatcc_verify_union_vector_field@@Base+0x3a0>
   32088:	ldr	r0, [pc, #544]	; 322b0 <flatcc_verify_union_vector_field@@Base+0x578>
   3208c:	ldr	r1, [fp, #-16]
   32090:	ldr	r2, [fp, #-20]	; 0xffffffec
   32094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32098:	ldr	ip, [fp, #-28]	; 0xffffffe4
   3209c:	str	r0, [sp, #24]
   320a0:	mov	r0, r1
   320a4:	mov	r1, r2
   320a8:	mov	r2, r3
   320ac:	mov	r3, ip
   320b0:	movw	ip, #4
   320b4:	str	ip, [sp]
   320b8:	movw	ip, #4
   320bc:	uxth	ip, ip
   320c0:	str	ip, [sp, #4]
   320c4:	ldr	ip, [sp, #24]
   320c8:	str	ip, [sp, #8]
   320cc:	bl	30438 <flatcc_verify_vector_field@@Base+0x114>
   320d0:	str	r0, [fp, #-12]
   320d4:	b	322a4 <flatcc_verify_union_vector_field@@Base+0x56c>
   320d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   320dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   320e0:	add	r0, r1, r0
   320e4:	str	r0, [fp, #-24]	; 0xffffffe8
   320e8:	ldr	r0, [fp, #-16]
   320ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   320f0:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   320f4:	str	r0, [fp, #-36]	; 0xffffffdc
   320f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   320fc:	ldr	r1, [fp, #8]
   32100:	cmp	r0, r1
   32104:	movw	r0, #0
   32108:	moveq	r0, #1
   3210c:	and	r0, r0, #1
   32110:	str	r0, [sp, #56]	; 0x38
   32114:	ldr	r0, [sp, #56]	; 0x38
   32118:	cmp	r0, #0
   3211c:	bne	3212c <flatcc_verify_union_vector_field@@Base+0x3f4>
   32120:	movw	r0, #34	; 0x22
   32124:	str	r0, [fp, #-12]
   32128:	b	322a4 <flatcc_verify_union_vector_field@@Base+0x56c>
   3212c:	b	32130 <flatcc_verify_union_vector_field@@Base+0x3f8>
   32130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32134:	add	r0, r0, #4
   32138:	str	r0, [fp, #-24]	; 0xffffffe8
   3213c:	ldr	r0, [fp, #-16]
   32140:	str	r0, [sp, #64]	; 0x40
   32144:	ldr	r0, [fp, #-20]	; 0xffffffec
   32148:	str	r0, [sp, #68]	; 0x44
   3214c:	ldr	r0, [fp, #16]
   32150:	str	r0, [sp, #72]	; 0x48
   32154:	movw	r0, #0
   32158:	str	r0, [fp, #-32]	; 0xffffffe0
   3215c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32160:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32164:	cmp	r0, r1
   32168:	bcs	3229c <flatcc_verify_union_vector_field@@Base+0x564>
   3216c:	ldr	r0, [fp, #-16]
   32170:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32174:	bl	302f8 <flatcc_verify_string_field@@Base+0x330>
   32178:	str	r0, [fp, #-40]	; 0xffffffd8
   3217c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32180:	cmp	r0, #0
   32184:	bne	321d0 <flatcc_verify_union_vector_field@@Base+0x498>
   32188:	b	3218c <flatcc_verify_union_vector_field@@Base+0x454>
   3218c:	ldr	r0, [fp, #12]
   32190:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32194:	add	r0, r0, r1
   32198:	ldrb	r0, [r0]
   3219c:	cmp	r0, #0
   321a0:	movw	r0, #0
   321a4:	moveq	r0, #1
   321a8:	and	r0, r0, #1
   321ac:	str	r0, [sp, #52]	; 0x34
   321b0:	ldr	r0, [sp, #52]	; 0x34
   321b4:	cmp	r0, #0
   321b8:	bne	321c8 <flatcc_verify_union_vector_field@@Base+0x490>
   321bc:	movw	r0, #32
   321c0:	str	r0, [fp, #-12]
   321c4:	b	322a4 <flatcc_verify_union_vector_field@@Base+0x56c>
   321c8:	b	321cc <flatcc_verify_union_vector_field@@Base+0x494>
   321cc:	b	3227c <flatcc_verify_union_vector_field@@Base+0x544>
   321d0:	b	321d4 <flatcc_verify_union_vector_field@@Base+0x49c>
   321d4:	ldr	r0, [fp, #12]
   321d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   321dc:	add	r0, r0, r1
   321e0:	ldrb	r0, [r0]
   321e4:	cmp	r0, #0
   321e8:	movw	r0, #0
   321ec:	movne	r0, #1
   321f0:	and	r0, r0, #1
   321f4:	str	r0, [sp, #48]	; 0x30
   321f8:	ldr	r0, [sp, #48]	; 0x30
   321fc:	cmp	r0, #0
   32200:	bne	32210 <flatcc_verify_union_vector_field@@Base+0x4d8>
   32204:	movw	r0, #33	; 0x21
   32208:	str	r0, [fp, #-12]
   3220c:	b	322a4 <flatcc_verify_union_vector_field@@Base+0x56c>
   32210:	b	32214 <flatcc_verify_union_vector_field@@Base+0x4dc>
   32214:	ldr	r0, [fp, #12]
   32218:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3221c:	add	r0, r0, r1
   32220:	ldrb	r0, [r0]
   32224:	strb	r0, [sp, #76]	; 0x4c
   32228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3222c:	str	r0, [sp, #80]	; 0x50
   32230:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32234:	str	r0, [sp, #84]	; 0x54
   32238:	ldr	r0, [fp, #20]
   3223c:	add	r1, sp, #64	; 0x40
   32240:	str	r0, [sp, #20]
   32244:	mov	r0, r1
   32248:	ldr	r1, [sp, #20]
   3224c:	blx	r1
   32250:	cmp	r0, #0
   32254:	beq	32278 <flatcc_verify_union_vector_field@@Base+0x540>
   32258:	ldr	r0, [fp, #20]
   3225c:	add	r1, sp, #64	; 0x40
   32260:	str	r0, [sp, #16]
   32264:	mov	r0, r1
   32268:	ldr	r1, [sp, #16]
   3226c:	blx	r1
   32270:	str	r0, [fp, #-12]
   32274:	b	322a4 <flatcc_verify_union_vector_field@@Base+0x56c>
   32278:	b	3227c <flatcc_verify_union_vector_field@@Base+0x544>
   3227c:	b	32280 <flatcc_verify_union_vector_field@@Base+0x548>
   32280:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32284:	add	r0, r0, #1
   32288:	str	r0, [fp, #-32]	; 0xffffffe0
   3228c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32290:	add	r0, r0, #4
   32294:	str	r0, [fp, #-24]	; 0xffffffe8
   32298:	b	3215c <flatcc_verify_union_vector_field@@Base+0x424>
   3229c:	movw	r0, #0
   322a0:	str	r0, [fp, #-12]
   322a4:	ldr	r0, [fp, #-12]
   322a8:	sub	sp, fp, #8
   322ac:	pop	{r4, r5, fp, pc}
   322b0:	svccc	0x00ffffff
   322b4:	sub	sp, sp, #20
   322b8:	str	r0, [sp, #16]
   322bc:	str	r1, [sp, #12]
   322c0:	str	r2, [sp, #8]
   322c4:	ldr	r0, [sp, #12]
   322c8:	ldr	r1, [sp, #8]
   322cc:	add	r0, r0, r1
   322d0:	str	r0, [sp, #4]
   322d4:	ldr	r0, [sp, #4]
   322d8:	ldr	r1, [sp, #12]
   322dc:	cmp	r0, r1
   322e0:	movw	r0, #0
   322e4:	str	r0, [sp]
   322e8:	bls	32328 <flatcc_verify_union_vector_field@@Base+0x5f0>
   322ec:	ldr	r0, [sp, #4]
   322f0:	add	r0, r0, #4
   322f4:	ldr	r1, [sp, #16]
   322f8:	cmp	r0, r1
   322fc:	movw	r0, #0
   32300:	str	r0, [sp]
   32304:	bhi	32328 <flatcc_verify_union_vector_field@@Base+0x5f0>
   32308:	ldr	r0, [sp, #4]
   3230c:	and	r0, r0, #3
   32310:	cmp	r0, #0
   32314:	movw	r0, #0
   32318:	movne	r0, #1
   3231c:	mvn	r1, #0
   32320:	eor	r0, r0, r1
   32324:	str	r0, [sp]
   32328:	ldr	r0, [sp]
   3232c:	and	r0, r0, #1
   32330:	add	sp, sp, #20
   32334:	bx	lr
   32338:	push	{fp, lr}
   3233c:	mov	fp, sp
   32340:	sub	sp, sp, #8
   32344:	str	r0, [sp, #4]
   32348:	ldr	r0, [sp, #4]
   3234c:	ldr	r0, [r0]
   32350:	bl	3235c <flatcc_verify_union_vector_field@@Base+0x624>
   32354:	mov	sp, fp
   32358:	pop	{fp, pc}
   3235c:	sub	sp, sp, #4
   32360:	str	r0, [sp]
   32364:	ldr	r0, [sp]
   32368:	add	sp, sp, #4
   3236c:	bx	lr
   32370:	sub	sp, sp, #28
   32374:	str	r0, [sp, #24]
   32378:	str	r1, [sp, #20]
   3237c:	str	r2, [sp, #16]
   32380:	strh	r3, [sp, #14]
   32384:	ldr	r0, [sp, #20]
   32388:	ldr	r1, [sp, #16]
   3238c:	add	r0, r0, r1
   32390:	str	r0, [sp, #8]
   32394:	ldrh	r0, [sp, #14]
   32398:	cmp	r0, #4
   3239c:	bcs	323ac <flatcc_verify_union_vector_field@@Base+0x674>
   323a0:	movw	r0, #4
   323a4:	str	r0, [sp, #4]
   323a8:	b	323b4 <flatcc_verify_union_vector_field@@Base+0x67c>
   323ac:	ldrh	r0, [sp, #14]
   323b0:	str	r0, [sp, #4]
   323b4:	ldr	r0, [sp, #4]
   323b8:	strh	r0, [sp, #14]
   323bc:	ldr	r0, [sp, #8]
   323c0:	ldr	r1, [sp, #20]
   323c4:	cmp	r0, r1
   323c8:	movw	r0, #0
   323cc:	str	r0, [sp]
   323d0:	bls	32420 <flatcc_verify_union_vector_field@@Base+0x6e8>
   323d4:	ldr	r0, [sp, #8]
   323d8:	add	r0, r0, #4
   323dc:	ldr	r1, [sp, #24]
   323e0:	cmp	r0, r1
   323e4:	movw	r0, #0
   323e8:	str	r0, [sp]
   323ec:	bhi	32420 <flatcc_verify_union_vector_field@@Base+0x6e8>
   323f0:	ldr	r0, [sp, #8]
   323f4:	add	r0, r0, #4
   323f8:	ldrh	r1, [sp, #14]
   323fc:	sub	r1, r1, #1
   32400:	orr	r1, r1, #3
   32404:	and	r0, r0, r1
   32408:	cmp	r0, #0
   3240c:	movw	r0, #0
   32410:	movne	r0, #1
   32414:	mvn	r1, #0
   32418:	eor	r0, r0, r1
   3241c:	str	r0, [sp]
   32420:	ldr	r0, [sp]
   32424:	and	r0, r0, #1
   32428:	add	sp, sp, #28
   3242c:	bx	lr
   32430:	push	{fp, lr}
   32434:	mov	fp, sp
   32438:	sub	sp, sp, #8
   3243c:	str	r0, [sp, #4]
   32440:	str	r1, [sp]
   32444:	ldr	r0, [sp, #4]
   32448:	ldr	r1, [sp]
   3244c:	add	r0, r0, r1
   32450:	bl	32460 <flatcc_verify_union_vector_field@@Base+0x728>
   32454:	uxth	r0, r0
   32458:	mov	sp, fp
   3245c:	pop	{fp, pc}
   32460:	push	{fp, lr}
   32464:	mov	fp, sp
   32468:	sub	sp, sp, #8
   3246c:	str	r0, [sp, #4]
   32470:	ldr	r0, [sp, #4]
   32474:	ldrh	r0, [r0]
   32478:	bl	32488 <flatcc_verify_union_vector_field@@Base+0x750>
   3247c:	uxth	r0, r0
   32480:	mov	sp, fp
   32484:	pop	{fp, pc}
   32488:	sub	sp, sp, #4
   3248c:	strh	r0, [sp, #2]
   32490:	ldrh	r0, [sp, #2]
   32494:	add	sp, sp, #4
   32498:	bx	lr
   3249c:	sub	sp, sp, #4
   324a0:	str	r0, [sp]
   324a4:	ldr	r0, [sp]
   324a8:	add	sp, sp, #4
   324ac:	bx	lr
   324b0:	push	{fp, lr}
   324b4:	mov	fp, sp
   324b8:	sub	sp, sp, #8
   324bc:	str	r0, [sp, #4]
   324c0:	ldr	r0, [sp, #4]
   324c4:	ldr	r0, [r0]
   324c8:	bl	324d4 <flatcc_verify_union_vector_field@@Base+0x79c>
   324cc:	mov	sp, fp
   324d0:	pop	{fp, pc}
   324d4:	sub	sp, sp, #4
   324d8:	str	r0, [sp]
   324dc:	ldr	r0, [sp]
   324e0:	add	sp, sp, #4
   324e4:	bx	lr

000324e8 <grisu3_diy_fp_encode_double@@Base>:
   324e8:	push	{r4, r5, r6, sl, fp, lr}
   324ec:	add	fp, sp, #16
   324f0:	sub	sp, sp, #256	; 0x100
   324f4:	ldr	ip, [fp, #12]
   324f8:	ldr	lr, [fp, #8]
   324fc:	str	r0, [fp, #-24]	; 0xffffffe8
   32500:	str	r1, [fp, #-20]	; 0xffffffec
   32504:	str	r2, [fp, #-28]	; 0xffffffe4
   32508:	str	r3, [fp, #-32]	; 0xffffffe0
   3250c:	mov	r0, #3
   32510:	str	r0, [fp, #-36]	; 0xffffffdc
   32514:	mov	r0, #8
   32518:	str	r0, [fp, #-40]	; 0xffffffd8
   3251c:	movw	r0, #64462	; 0xfbce
   32520:	movt	r0, #65535	; 0xffff
   32524:	str	r0, [fp, #-44]	; 0xffffffd4
   32528:	mov	r0, #1048576	; 0x100000
   3252c:	str	r0, [fp, #-52]	; 0xffffffcc
   32530:	mov	r0, #0
   32534:	str	r0, [fp, #-56]	; 0xffffffc8
   32538:	mov	r1, #64	; 0x40
   3253c:	str	r1, [fp, #-60]	; 0xffffffc4
   32540:	mov	r1, #19
   32544:	str	r1, [fp, #-64]	; 0xffffffc0
   32548:	ldr	r1, [fp, #8]
   3254c:	cmp	r1, #0
   32550:	movwne	r1, #1
   32554:	lsl	r1, r1, #2
   32558:	str	r1, [fp, #-68]	; 0xffffffbc
   3255c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32560:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32564:	sub	r1, r1, r2
   32568:	str	r1, [fp, #-72]	; 0xffffffb8
   3256c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32570:	ldr	r2, [fp, #-20]	; 0xffffffec
   32574:	str	r2, [fp, #-92]	; 0xffffffa4
   32578:	str	r1, [fp, #-96]	; 0xffffffa0
   3257c:	str	r0, [fp, #-88]	; 0xffffffa8
   32580:	ldr	r2, [fp, #-96]	; 0xffffffa0
   32584:	ldr	r3, [fp, #-92]	; 0xffffffa4
   32588:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3258c:	ldr	r1, [fp, #-84]	; 0xffffffac
   32590:	mov	r4, sp
   32594:	str	r0, [r4]
   32598:	str	r1, [r4, #4]
   3259c:	add	r0, sp, #112	; 0x70
   325a0:	str	lr, [sp, #48]	; 0x30
   325a4:	str	ip, [sp, #44]	; 0x2c
   325a8:	bl	32a40 <grisu3_diy_fp_encode_double@@Base+0x558>
   325ac:	ldr	r0, [sp, #112]	; 0x70
   325b0:	str	r0, [fp, #-96]	; 0xffffffa0
   325b4:	ldr	r0, [sp, #116]	; 0x74
   325b8:	str	r0, [fp, #-92]	; 0xffffffa4
   325bc:	ldr	r0, [sp, #120]	; 0x78
   325c0:	str	r0, [fp, #-88]	; 0xffffffa8
   325c4:	ldr	r0, [sp, #124]	; 0x7c
   325c8:	str	r0, [fp, #-84]	; 0xffffffac
   325cc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   325d0:	movw	r1, #0
   325d4:	sub	r0, r1, r0
   325d8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   325dc:	lsl	r0, r1, r0
   325e0:	str	r0, [fp, #-68]	; 0xffffffbc
   325e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   325e8:	sub	r1, fp, #112	; 0x70
   325ec:	bl	32b7c <grisu3_diy_fp_encode_double@@Base+0x694>
   325f0:	str	r0, [fp, #-76]	; 0xffffffb4
   325f4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   325f8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   325fc:	cmp	r0, r1
   32600:	beq	326ec <grisu3_diy_fp_encode_double@@Base+0x204>
   32604:	ldr	r0, [fp, #-72]	; 0xffffffb8
   32608:	ldr	r1, [fp, #-76]	; 0xffffffb4
   3260c:	sub	r0, r0, r1
   32610:	sub	r0, r0, #1
   32614:	str	r0, [sp, #108]	; 0x6c
   32618:	ldr	r0, [sp, #108]	; 0x6c
   3261c:	cmp	r0, #0
   32620:	blt	32634 <grisu3_diy_fp_encode_double@@Base+0x14c>
   32624:	ldr	r0, [sp, #108]	; 0x6c
   32628:	cmp	r0, #7
   3262c:	bge	32634 <grisu3_diy_fp_encode_double@@Base+0x14c>
   32630:	b	32654 <grisu3_diy_fp_encode_double@@Base+0x16c>
   32634:	ldr	r0, [pc, #1004]	; 32a28 <grisu3_diy_fp_encode_double@@Base+0x540>
   32638:	add	r0, pc, r0
   3263c:	ldr	r1, [pc, #1000]	; 32a2c <grisu3_diy_fp_encode_double@@Base+0x544>
   32640:	add	r1, pc, r1
   32644:	ldr	r2, [pc, #996]	; 32a30 <grisu3_diy_fp_encode_double@@Base+0x548>
   32648:	add	r3, pc, r2
   3264c:	movw	r2, #185	; 0xb9
   32650:	bl	14f08 <__assert_fail@plt>
   32654:	ldr	r0, [sp, #108]	; 0x6c
   32658:	ldr	r1, [pc, #988]	; 32a3c <grisu3_diy_fp_encode_double@@Base+0x554>
   3265c:	add	r1, pc, r1
   32660:	ldr	r2, [fp, #-96]	; 0xffffffa0
   32664:	ldr	r3, [fp, #-92]	; 0xffffffa4
   32668:	ldr	ip, [fp, #-88]	; 0xffffffa8
   3266c:	ldr	lr, [fp, #-84]	; 0xffffffac
   32670:	ldr	r0, [r1, r0, lsl #4]!
   32674:	ldr	r4, [r1, #4]
   32678:	ldr	r5, [r1, #8]
   3267c:	ldr	r1, [r1, #12]
   32680:	mov	r6, sp
   32684:	str	r4, [r6, #12]
   32688:	str	r0, [r6, #8]
   3268c:	str	r5, [r6, #16]
   32690:	str	ip, [r6]
   32694:	str	r1, [r6, #20]
   32698:	str	lr, [r6, #4]
   3269c:	add	r0, sp, #88	; 0x58
   326a0:	bl	32d24 <grisu3_diy_fp_encode_double@@Base+0x83c>
   326a4:	ldr	r0, [sp, #88]	; 0x58
   326a8:	str	r0, [fp, #-96]	; 0xffffffa0
   326ac:	ldr	r0, [sp, #92]	; 0x5c
   326b0:	str	r0, [fp, #-92]	; 0xffffffa4
   326b4:	ldr	r0, [sp, #96]	; 0x60
   326b8:	str	r0, [fp, #-88]	; 0xffffffa8
   326bc:	ldr	r0, [sp, #100]	; 0x64
   326c0:	str	r0, [fp, #-84]	; 0xffffffac
   326c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   326c8:	add	r0, r0, #1
   326cc:	ldr	r1, [sp, #108]	; 0x6c
   326d0:	add	r0, r0, r1
   326d4:	cmp	r0, #19
   326d8:	ble	326e8 <grisu3_diy_fp_encode_double@@Base+0x200>
   326dc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   326e0:	add	r0, r0, #4
   326e4:	str	r0, [fp, #-68]	; 0xffffffbc
   326e8:	b	326ec <grisu3_diy_fp_encode_double@@Base+0x204>
   326ec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   326f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   326f4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   326f8:	ldr	r1, [fp, #-84]	; 0xffffffac
   326fc:	ldr	ip, [fp, #-112]	; 0xffffff90
   32700:	ldr	lr, [fp, #-108]	; 0xffffff94
   32704:	ldr	r4, [fp, #-104]	; 0xffffff98
   32708:	ldr	r5, [fp, #-100]	; 0xffffff9c
   3270c:	mov	r6, sp
   32710:	str	r5, [r6, #20]
   32714:	str	r4, [r6, #16]
   32718:	str	lr, [r6, #12]
   3271c:	str	ip, [r6, #8]
   32720:	str	r1, [r6, #4]
   32724:	str	r0, [r6]
   32728:	add	r0, sp, #72	; 0x48
   3272c:	str	r0, [sp, #40]	; 0x28
   32730:	bl	32d24 <grisu3_diy_fp_encode_double@@Base+0x83c>
   32734:	ldr	r0, [sp, #40]	; 0x28
   32738:	vld1.64	{d16-d17}, [r0]
   3273c:	sub	r1, fp, #96	; 0x60
   32740:	vst1.64	{d16-d17}, [r1]
   32744:	ldr	r1, [fp, #-68]	; 0xffffffbc
   32748:	add	r2, r1, #1
   3274c:	cmp	r1, #0
   32750:	movne	r1, r2
   32754:	add	r1, r1, #8
   32758:	str	r1, [fp, #-68]	; 0xffffffbc
   3275c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   32760:	str	r1, [fp, #-80]	; 0xffffffb0
   32764:	ldr	r2, [fp, #-96]	; 0xffffffa0
   32768:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3276c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   32770:	ldr	ip, [fp, #-84]	; 0xffffffac
   32774:	mov	lr, sp
   32778:	str	r1, [lr]
   3277c:	str	ip, [lr, #4]
   32780:	add	r0, sp, #56	; 0x38
   32784:	bl	32a40 <grisu3_diy_fp_encode_double@@Base+0x558>
   32788:	ldr	r0, [pc, #676]	; 32a34 <grisu3_diy_fp_encode_double@@Base+0x54c>
   3278c:	ldr	r1, [sp, #56]	; 0x38
   32790:	str	r1, [fp, #-96]	; 0xffffffa0
   32794:	ldr	r1, [sp, #60]	; 0x3c
   32798:	str	r1, [fp, #-92]	; 0xffffffa4
   3279c:	ldr	r1, [sp, #64]	; 0x40
   327a0:	str	r1, [fp, #-88]	; 0xffffffa8
   327a4:	ldr	r1, [sp, #68]	; 0x44
   327a8:	str	r1, [fp, #-84]	; 0xffffffac
   327ac:	ldr	r1, [fp, #-80]	; 0xffffffb0
   327b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   327b4:	sub	r1, r1, r2
   327b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   327bc:	lsl	r1, r2, r1
   327c0:	str	r1, [fp, #-68]	; 0xffffffbc
   327c4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   327c8:	add	r1, r1, #64	; 0x40
   327cc:	str	r1, [fp, #-132]	; 0xffffff7c
   327d0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   327d4:	cmp	r1, r0
   327d8:	blt	327e8 <grisu3_diy_fp_encode_double@@Base+0x300>
   327dc:	movw	r0, #64	; 0x40
   327e0:	str	r0, [sp, #36]	; 0x24
   327e4:	b	3281c <grisu3_diy_fp_encode_double@@Base+0x334>
   327e8:	ldr	r0, [pc, #584]	; 32a38 <grisu3_diy_fp_encode_double@@Base+0x550>
   327ec:	ldr	r1, [fp, #-132]	; 0xffffff7c
   327f0:	cmp	r1, r0
   327f4:	bgt	32804 <grisu3_diy_fp_encode_double@@Base+0x31c>
   327f8:	movw	r0, #0
   327fc:	str	r0, [sp, #32]
   32800:	b	32814 <grisu3_diy_fp_encode_double@@Base+0x32c>
   32804:	ldr	r0, [pc, #556]	; 32a38 <grisu3_diy_fp_encode_double@@Base+0x550>
   32808:	ldr	r1, [fp, #-132]	; 0xffffff7c
   3280c:	sub	r0, r1, r0
   32810:	str	r0, [sp, #32]
   32814:	ldr	r0, [sp, #32]
   32818:	str	r0, [sp, #36]	; 0x24
   3281c:	ldr	r0, [sp, #36]	; 0x24
   32820:	str	r0, [fp, #-132]	; 0xffffff7c
   32824:	ldr	r0, [fp, #-132]	; 0xffffff7c
   32828:	movw	r1, #64	; 0x40
   3282c:	sub	r0, r1, r0
   32830:	str	r0, [sp, #136]	; 0x88
   32834:	ldr	r0, [sp, #136]	; 0x88
   32838:	add	r0, r0, #3
   3283c:	cmp	r0, #64	; 0x40
   32840:	blt	328c0 <grisu3_diy_fp_encode_double@@Base+0x3d8>
   32844:	ldr	r0, [sp, #136]	; 0x88
   32848:	sub	r0, r0, #62	; 0x3e
   3284c:	str	r0, [sp, #52]	; 0x34
   32850:	ldr	r0, [sp, #52]	; 0x34
   32854:	ldr	r1, [fp, #-96]	; 0xffffffa0
   32858:	ldr	r2, [fp, #-92]	; 0xffffffa4
   3285c:	lsr	r1, r1, r0
   32860:	rsb	r3, r0, #32
   32864:	orr	r1, r1, r2, lsl r3
   32868:	sub	r3, r0, #32
   3286c:	cmp	r3, #0
   32870:	lsrge	r1, r2, r3
   32874:	lsr	r0, r2, r0
   32878:	cmp	r3, #0
   3287c:	movwge	r0, #0
   32880:	str	r0, [fp, #-92]	; 0xffffffa4
   32884:	str	r1, [fp, #-96]	; 0xffffffa0
   32888:	ldr	r0, [sp, #52]	; 0x34
   3288c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   32890:	add	r0, r1, r0
   32894:	str	r0, [fp, #-88]	; 0xffffffa8
   32898:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3289c:	ldr	r1, [sp, #52]	; 0x34
   328a0:	asr	r0, r0, r1
   328a4:	add	r0, r0, #1
   328a8:	add	r0, r0, #8
   328ac:	str	r0, [fp, #-68]	; 0xffffffbc
   328b0:	ldr	r0, [sp, #52]	; 0x34
   328b4:	ldr	r1, [sp, #136]	; 0x88
   328b8:	sub	r0, r1, r0
   328bc:	str	r0, [sp, #136]	; 0x88
   328c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   328c4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   328c8:	ldr	r2, [sp, #136]	; 0x88
   328cc:	lsr	r0, r0, r2
   328d0:	rsb	r3, r2, #32
   328d4:	orr	r0, r0, r1, lsl r3
   328d8:	sub	r3, r2, #32
   328dc:	cmp	r3, #0
   328e0:	lsrge	r0, r1, r3
   328e4:	lsr	r1, r1, r2
   328e8:	cmp	r3, #0
   328ec:	movwge	r1, #0
   328f0:	str	r1, [fp, #-124]	; 0xffffff84
   328f4:	str	r0, [fp, #-128]	; 0xffffff80
   328f8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   328fc:	ldr	r1, [sp, #136]	; 0x88
   32900:	add	r0, r0, r1
   32904:	str	r0, [fp, #-120]	; 0xffffff88
   32908:	ldr	r0, [fp, #-96]	; 0xffffffa0
   3290c:	ldr	r1, [sp, #136]	; 0x88
   32910:	sub	r2, r1, #1
   32914:	mov	r3, #1
   32918:	lsl	r2, r3, r2
   3291c:	sub	r1, r1, #33	; 0x21
   32920:	cmp	r1, #0
   32924:	movwge	r2, #0
   32928:	and	r0, r0, r2
   3292c:	lsl	r0, r0, #3
   32930:	str	r0, [sp, #132]	; 0x84
   32934:	ldr	r0, [sp, #136]	; 0x88
   32938:	sub	r1, r0, #1
   3293c:	lsl	r1, r3, r1
   32940:	sub	r0, r0, #33	; 0x21
   32944:	cmp	r0, #0
   32948:	movwge	r1, #0
   3294c:	lsl	r0, r1, #3
   32950:	str	r0, [sp, #128]	; 0x80
   32954:	ldr	r0, [sp, #136]	; 0x88
   32958:	ldr	r1, [sp, #128]	; 0x80
   3295c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   32960:	add	r1, r1, r2
   32964:	cmp	r0, r1
   32968:	blt	329bc <grisu3_diy_fp_encode_double@@Base+0x4d4>
   3296c:	ldr	r0, [fp, #-128]	; 0xffffff80
   32970:	ldr	r1, [fp, #-124]	; 0xffffff84
   32974:	adds	r0, r0, #1
   32978:	adc	r1, r1, #0
   3297c:	str	r0, [fp, #-128]	; 0xffffff80
   32980:	str	r1, [fp, #-124]	; 0xffffff84
   32984:	ldrb	r0, [fp, #-122]	; 0xffffff86
   32988:	tst	r0, #32
   3298c:	beq	329b8 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   32990:	b	32994 <grisu3_diy_fp_encode_double@@Base+0x4ac>
   32994:	ldr	r0, [fp, #-128]	; 0xffffff80
   32998:	ldr	r1, [fp, #-124]	; 0xffffff84
   3299c:	lsrs	r1, r1, #1
   329a0:	rrx	r0, r0
   329a4:	str	r1, [fp, #-124]	; 0xffffff84
   329a8:	str	r0, [fp, #-128]	; 0xffffff80
   329ac:	ldr	r0, [fp, #-120]	; 0xffffff88
   329b0:	add	r0, r0, #1
   329b4:	str	r0, [fp, #-120]	; 0xffffff88
   329b8:	b	329bc <grisu3_diy_fp_encode_double@@Base+0x4d4>
   329bc:	ldr	r0, [fp, #-128]	; 0xffffff80
   329c0:	ldr	r1, [fp, #-124]	; 0xffffff84
   329c4:	ldr	r2, [fp, #-120]	; 0xffffff88
   329c8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   329cc:	bl	32eb8 <grisu3_diy_fp_encode_double@@Base+0x9d0>
   329d0:	ldr	r0, [fp, #12]
   329d4:	vstr	d0, [r0]
   329d8:	ldr	r0, [sp, #128]	; 0x80
   329dc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   329e0:	sub	r0, r0, r1
   329e4:	ldr	r1, [sp, #132]	; 0x84
   329e8:	cmp	r0, r1
   329ec:	movw	r0, #1
   329f0:	str	r0, [sp, #28]
   329f4:	bge	32a18 <grisu3_diy_fp_encode_double@@Base+0x530>
   329f8:	ldr	r0, [sp, #132]	; 0x84
   329fc:	ldr	r1, [sp, #128]	; 0x80
   32a00:	ldr	r2, [fp, #-68]	; 0xffffffbc
   32a04:	add	r1, r1, r2
   32a08:	cmp	r0, r1
   32a0c:	movw	r0, #0
   32a10:	movge	r0, #1
   32a14:	str	r0, [sp, #28]
   32a18:	ldr	r0, [sp, #28]
   32a1c:	and	r0, r0, #1
   32a20:	sub	sp, fp, #16
   32a24:	pop	{r4, r5, r6, sl, fp, pc}
   32a28:	andeq	r8, r1, pc, lsl sl
   32a2c:	andeq	r8, r1, r3, lsr sl
   32a30:	muleq	r1, r9, sl
   32a34:			; <UNDEFINED> instruction: 0xfffffc0e
   32a38:			; <UNDEFINED> instruction: 0xfffffbce
   32a3c:	strdeq	sl, [r2], -r4
   32a40:	push	{fp, lr}
   32a44:	mov	fp, sp
   32a48:	sub	sp, sp, #24
   32a4c:	ldr	r1, [fp, #12]
   32a50:	ldr	ip, [fp, #8]
   32a54:	str	r2, [sp, #8]
   32a58:	str	r3, [sp, #12]
   32a5c:	str	ip, [sp, #16]
   32a60:	str	r1, [sp, #20]
   32a64:	ldr	r1, [sp, #8]
   32a68:	ldr	r2, [sp, #12]
   32a6c:	orr	r1, r1, r2
   32a70:	cmp	r1, #0
   32a74:	str	r0, [sp, #4]
   32a78:	beq	32a84 <grisu3_diy_fp_encode_double@@Base+0x59c>
   32a7c:	b	32a80 <grisu3_diy_fp_encode_double@@Base+0x598>
   32a80:	b	32aa4 <grisu3_diy_fp_encode_double@@Base+0x5bc>
   32a84:	ldr	r0, [pc, #228]	; 32b70 <grisu3_diy_fp_encode_double@@Base+0x688>
   32a88:	add	r0, pc, r0
   32a8c:	ldr	r1, [pc, #224]	; 32b74 <grisu3_diy_fp_encode_double@@Base+0x68c>
   32a90:	add	r1, pc, r1
   32a94:	ldr	r2, [pc, #220]	; 32b78 <grisu3_diy_fp_encode_double@@Base+0x690>
   32a98:	add	r3, pc, r2
   32a9c:	movw	r2, #260	; 0x104
   32aa0:	bl	14f08 <__assert_fail@plt>
   32aa4:	b	32aa8 <grisu3_diy_fp_encode_double@@Base+0x5c0>
   32aa8:	ldrh	r0, [sp, #14]
   32aac:	movw	r1, #65472	; 0xffc0
   32ab0:	and	r0, r0, r1
   32ab4:	cmp	r0, #0
   32ab8:	movwne	r0, #1
   32abc:	mvn	r1, #0
   32ac0:	eor	r0, r0, r1
   32ac4:	tst	r0, #1
   32ac8:	beq	32af8 <grisu3_diy_fp_encode_double@@Base+0x610>
   32acc:	ldr	r0, [sp, #8]
   32ad0:	ldr	r1, [sp, #12]
   32ad4:	lsl	r1, r1, #10
   32ad8:	orr	r1, r1, r0, lsr #22
   32adc:	lsl	r0, r0, #10
   32ae0:	str	r0, [sp, #8]
   32ae4:	str	r1, [sp, #12]
   32ae8:	ldr	r0, [sp, #16]
   32aec:	sub	r0, r0, #10
   32af0:	str	r0, [sp, #16]
   32af4:	b	32aa8 <grisu3_diy_fp_encode_double@@Base+0x5c0>
   32af8:	b	32afc <grisu3_diy_fp_encode_double@@Base+0x614>
   32afc:	ldrb	r0, [sp, #15]
   32b00:	lsr	r0, r0, #7
   32b04:	mvn	r1, #0
   32b08:	eor	r0, r0, r1
   32b0c:	tst	r0, #1
   32b10:	beq	32b44 <grisu3_diy_fp_encode_double@@Base+0x65c>
   32b14:	ldr	r0, [sp, #8]
   32b18:	ldr	r1, [sp, #12]
   32b1c:	lsl	r1, r1, #1
   32b20:	orr	r1, r1, r0, lsr #31
   32b24:	lsl	r0, r0, #1
   32b28:	str	r0, [sp, #8]
   32b2c:	str	r1, [sp, #12]
   32b30:	ldr	r0, [sp, #16]
   32b34:	mvn	r1, #0
   32b38:	add	r0, r0, r1
   32b3c:	str	r0, [sp, #16]
   32b40:	b	32afc <grisu3_diy_fp_encode_double@@Base+0x614>
   32b44:	ldr	r0, [sp, #8]
   32b48:	ldr	r1, [sp, #4]
   32b4c:	str	r0, [r1]
   32b50:	ldr	r0, [sp, #12]
   32b54:	str	r0, [r1, #4]
   32b58:	ldr	r0, [sp, #16]
   32b5c:	str	r0, [r1, #8]
   32b60:	ldr	r0, [sp, #20]
   32b64:	str	r0, [r1, #12]
   32b68:	mov	sp, fp
   32b6c:	pop	{fp, pc}
   32b70:	andeq	r8, r1, r3, lsr #22
   32b74:	andeq	r8, r1, r4, lsr #22
   32b78:	andeq	r8, r1, r9, lsl #23
   32b7c:	push	{fp, lr}
   32b80:	mov	fp, sp
   32b84:	sub	sp, sp, #32
   32b88:	ldr	r2, [pc, #344]	; 32ce8 <grisu3_diy_fp_encode_double@@Base+0x800>
   32b8c:	str	r0, [fp, #-4]
   32b90:	str	r1, [fp, #-8]
   32b94:	movw	r0, #348	; 0x15c
   32b98:	str	r0, [fp, #-12]
   32b9c:	movw	r0, #8
   32ba0:	str	r0, [sp, #16]
   32ba4:	ldr	r0, [fp, #-4]
   32ba8:	cmp	r2, r0
   32bac:	bgt	32bb4 <grisu3_diy_fp_encode_double@@Base+0x6cc>
   32bb0:	b	32bd4 <grisu3_diy_fp_encode_double@@Base+0x6ec>
   32bb4:	ldr	r0, [pc, #304]	; 32cec <grisu3_diy_fp_encode_double@@Base+0x804>
   32bb8:	add	r0, pc, r0
   32bbc:	ldr	r1, [pc, #300]	; 32cf0 <grisu3_diy_fp_encode_double@@Base+0x808>
   32bc0:	add	r1, pc, r1
   32bc4:	ldr	r2, [pc, #296]	; 32cf4 <grisu3_diy_fp_encode_double@@Base+0x80c>
   32bc8:	add	r3, pc, r2
   32bcc:	movw	r2, #80	; 0x50
   32bd0:	bl	14f08 <__assert_fail@plt>
   32bd4:	ldr	r0, [fp, #-4]
   32bd8:	cmp	r0, #348	; 0x15c
   32bdc:	bge	32be4 <grisu3_diy_fp_encode_double@@Base+0x6fc>
   32be0:	b	32c04 <grisu3_diy_fp_encode_double@@Base+0x71c>
   32be4:	ldr	r0, [pc, #268]	; 32cf8 <grisu3_diy_fp_encode_double@@Base+0x810>
   32be8:	add	r0, pc, r0
   32bec:	ldr	r1, [pc, #264]	; 32cfc <grisu3_diy_fp_encode_double@@Base+0x814>
   32bf0:	add	r1, pc, r1
   32bf4:	ldr	r2, [pc, #260]	; 32d00 <grisu3_diy_fp_encode_double@@Base+0x818>
   32bf8:	add	r3, pc, r2
   32bfc:	movw	r2, #81	; 0x51
   32c00:	bl	14f08 <__assert_fail@plt>
   32c04:	ldr	r0, [pc, #248]	; 32d04 <grisu3_diy_fp_encode_double@@Base+0x81c>
   32c08:	add	r0, pc, r0
   32c0c:	ldr	r1, [fp, #-4]
   32c10:	add	r1, r1, #348	; 0x15c
   32c14:	asr	r2, r1, #31
   32c18:	add	r1, r1, r2, lsr #29
   32c1c:	asr	r1, r1, #3
   32c20:	str	r1, [sp, #12]
   32c24:	ldr	r1, [sp, #12]
   32c28:	ldr	r2, [pc, #240]	; 32d20 <grisu3_diy_fp_encode_double@@Base+0x838>
   32c2c:	add	r2, pc, r2
   32c30:	add	r1, r2, r1, lsl #4
   32c34:	ldrsh	r1, [r1, #10]
   32c38:	str	r1, [sp, #8]
   32c3c:	ldr	r1, [sp, #12]
   32c40:	mov	r3, r2
   32c44:	ldr	r1, [r3, r1, lsl #4]!
   32c48:	ldr	r3, [r3, #4]
   32c4c:	ldr	ip, [fp, #-8]
   32c50:	str	r3, [ip, #4]
   32c54:	str	r1, [ip]
   32c58:	ldr	r1, [sp, #12]
   32c5c:	add	r1, r2, r1, lsl #4
   32c60:	ldrsh	r1, [r1, #8]
   32c64:	ldr	r2, [fp, #-8]
   32c68:	str	r1, [r2, #8]
   32c6c:	ldr	r1, [sp, #8]
   32c70:	ldr	r2, [fp, #-4]
   32c74:	cmp	r1, r2
   32c78:	str	r0, [sp, #4]
   32c7c:	bgt	32c84 <grisu3_diy_fp_encode_double@@Base+0x79c>
   32c80:	b	32ca4 <grisu3_diy_fp_encode_double@@Base+0x7bc>
   32c84:	ldr	r0, [pc, #124]	; 32d08 <grisu3_diy_fp_encode_double@@Base+0x820>
   32c88:	add	r0, pc, r0
   32c8c:	ldr	r1, [pc, #120]	; 32d0c <grisu3_diy_fp_encode_double@@Base+0x824>
   32c90:	add	r1, pc, r1
   32c94:	ldr	r2, [pc, #116]	; 32d10 <grisu3_diy_fp_encode_double@@Base+0x828>
   32c98:	add	r3, pc, r2
   32c9c:	movw	r2, #88	; 0x58
   32ca0:	bl	14f08 <__assert_fail@plt>
   32ca4:	ldr	r0, [fp, #-4]
   32ca8:	ldr	r1, [sp, #8]
   32cac:	add	r1, r1, #8
   32cb0:	cmp	r0, r1
   32cb4:	bge	32cbc <grisu3_diy_fp_encode_double@@Base+0x7d4>
   32cb8:	b	32cdc <grisu3_diy_fp_encode_double@@Base+0x7f4>
   32cbc:	ldr	r0, [pc, #80]	; 32d14 <grisu3_diy_fp_encode_double@@Base+0x82c>
   32cc0:	add	r0, pc, r0
   32cc4:	ldr	r1, [pc, #76]	; 32d18 <grisu3_diy_fp_encode_double@@Base+0x830>
   32cc8:	add	r1, pc, r1
   32ccc:	ldr	r2, [pc, #72]	; 32d1c <grisu3_diy_fp_encode_double@@Base+0x834>
   32cd0:	add	r3, pc, r2
   32cd4:	movw	r2, #89	; 0x59
   32cd8:	bl	14f08 <__assert_fail@plt>
   32cdc:	ldr	r0, [sp, #8]
   32ce0:	mov	sp, fp
   32ce4:	pop	{fp, pc}
   32ce8:			; <UNDEFINED> instruction: 0xfffffea4
   32cec:	andeq	r8, r1, r2, lsr #21
   32cf0:			; <UNDEFINED> instruction: 0x000184b3
   32cf4:			; <UNDEFINED> instruction: 0x00018ab1
   32cf8:	andeq	r8, r1, sl, asr #21
   32cfc:	andeq	r8, r1, r3, lsl #9
   32d00:	andeq	r8, r1, r1, lsl #21
   32d04:	andeq	r8, r1, r0, lsl #22
   32d08:	andeq	r8, r1, r5, asr sl
   32d0c:	andeq	r8, r1, r3, ror #7
   32d10:	andeq	r8, r1, r1, ror #19
   32d14:	andeq	r8, r1, ip, lsr #20
   32d18:	andeq	r8, r1, fp, lsr #7
   32d1c:	andeq	r8, r1, r9, lsr #19
   32d20:	ldrdeq	r8, [r1], -ip
   32d24:	push	{r4, r5, r6, sl, fp, lr}
   32d28:	add	fp, sp, #16
   32d2c:	sub	sp, sp, #104	; 0x68
   32d30:	ldr	r1, [fp, #28]
   32d34:	ldr	ip, [fp, #24]
   32d38:	ldr	lr, [fp, #20]
   32d3c:	ldr	r4, [fp, #16]
   32d40:	ldr	r5, [fp, #12]
   32d44:	ldr	r6, [fp, #8]
   32d48:	str	r2, [fp, #-32]	; 0xffffffe0
   32d4c:	str	r3, [fp, #-28]	; 0xffffffe4
   32d50:	str	r6, [fp, #-24]	; 0xffffffe8
   32d54:	str	r5, [fp, #-20]	; 0xffffffec
   32d58:	str	r1, [fp, #-36]	; 0xffffffdc
   32d5c:	str	ip, [fp, #-40]	; 0xffffffd8
   32d60:	str	lr, [fp, #-44]	; 0xffffffd4
   32d64:	str	r4, [fp, #-48]	; 0xffffffd0
   32d68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32d6c:	mov	r2, #0
   32d70:	str	r2, [fp, #-52]	; 0xffffffcc
   32d74:	str	r1, [fp, #-56]	; 0xffffffc8
   32d78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32d7c:	str	r2, [sp, #60]	; 0x3c
   32d80:	str	r1, [sp, #56]	; 0x38
   32d84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   32d88:	str	r2, [sp, #52]	; 0x34
   32d8c:	str	r1, [sp, #48]	; 0x30
   32d90:	ldr	r1, [fp, #-48]	; 0xffffffd0
   32d94:	str	r2, [sp, #44]	; 0x2c
   32d98:	str	r1, [sp, #40]	; 0x28
   32d9c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   32da0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32da4:	ldr	ip, [sp, #48]	; 0x30
   32da8:	ldr	lr, [sp, #52]	; 0x34
   32dac:	umull	r4, r5, r1, ip
   32db0:	mla	r1, r1, lr, r5
   32db4:	mla	r1, r3, ip, r1
   32db8:	str	r4, [sp, #32]
   32dbc:	str	r1, [sp, #36]	; 0x24
   32dc0:	ldr	r1, [sp, #56]	; 0x38
   32dc4:	ldr	r3, [sp, #60]	; 0x3c
   32dc8:	ldr	ip, [sp, #48]	; 0x30
   32dcc:	ldr	lr, [sp, #52]	; 0x34
   32dd0:	umull	r4, r5, r1, ip
   32dd4:	mla	r1, r1, lr, r5
   32dd8:	mla	r1, r3, ip, r1
   32ddc:	str	r4, [sp, #24]
   32de0:	str	r1, [sp, #28]
   32de4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   32de8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32dec:	ldr	ip, [sp, #40]	; 0x28
   32df0:	ldr	lr, [sp, #44]	; 0x2c
   32df4:	umull	r4, r5, r1, ip
   32df8:	mla	r1, r1, lr, r5
   32dfc:	mla	r1, r3, ip, r1
   32e00:	str	r4, [sp, #16]
   32e04:	str	r1, [sp, #20]
   32e08:	ldr	r1, [sp, #56]	; 0x38
   32e0c:	ldr	r3, [sp, #60]	; 0x3c
   32e10:	ldr	ip, [sp, #40]	; 0x28
   32e14:	ldr	lr, [sp, #44]	; 0x2c
   32e18:	umull	r4, r5, r1, ip
   32e1c:	mla	r1, r1, lr, r5
   32e20:	mla	r1, r3, ip, r1
   32e24:	str	r4, [sp, #8]
   32e28:	str	r1, [sp, #12]
   32e2c:	ldr	r1, [sp, #12]
   32e30:	ldr	r3, [sp, #16]
   32e34:	adds	r1, r1, r3
   32e38:	adc	r2, r2, #0
   32e3c:	ldr	r3, [sp, #24]
   32e40:	adds	r1, r1, r3
   32e44:	adc	r2, r2, #0
   32e48:	str	r1, [sp]
   32e4c:	str	r2, [sp, #4]
   32e50:	ldr	r1, [sp]
   32e54:	ldr	r2, [sp, #4]
   32e58:	adds	r1, r1, #-2147483648	; 0x80000000
   32e5c:	adc	r2, r2, #0
   32e60:	str	r1, [sp]
   32e64:	str	r2, [sp, #4]
   32e68:	ldr	r1, [sp, #32]
   32e6c:	ldr	r2, [sp, #36]	; 0x24
   32e70:	ldr	r3, [sp, #20]
   32e74:	adds	r1, r1, r3
   32e78:	adc	r2, r2, #0
   32e7c:	ldr	r3, [sp, #28]
   32e80:	adds	r1, r1, r3
   32e84:	adc	r2, r2, #0
   32e88:	ldr	r3, [sp, #4]
   32e8c:	adds	r1, r1, r3
   32e90:	adc	r2, r2, #0
   32e94:	str	r1, [r0]
   32e98:	str	r2, [r0, #4]
   32e9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32ea0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   32ea4:	add	r1, r1, r2
   32ea8:	add	r1, r1, #64	; 0x40
   32eac:	str	r1, [r0, #8]
   32eb0:	sub	sp, fp, #16
   32eb4:	pop	{r4, r5, r6, sl, fp, pc}
   32eb8:	push	{fp, lr}
   32ebc:	mov	fp, sp
   32ec0:	sub	sp, sp, #88	; 0x58
   32ec4:	ldr	ip, [pc, #412]	; 33068 <grisu3_diy_fp_encode_double@@Base+0xb80>
   32ec8:	str	r0, [fp, #-24]	; 0xffffffe8
   32ecc:	str	r1, [fp, #-20]	; 0xffffffec
   32ed0:	str	r2, [fp, #-16]
   32ed4:	str	r3, [fp, #-12]
   32ed8:	mov	r0, #1048576	; 0x100000
   32edc:	str	r0, [fp, #-28]	; 0xffffffe4
   32ee0:	mov	r0, #0
   32ee4:	str	r0, [fp, #-32]	; 0xffffffe0
   32ee8:	movw	r0, #65535	; 0xffff
   32eec:	movt	r0, #15
   32ef0:	str	r0, [fp, #-36]	; 0xffffffdc
   32ef4:	mvn	r0, #0
   32ef8:	str	r0, [fp, #-40]	; 0xffffffd8
   32efc:	str	ip, [sp, #44]	; 0x2c
   32f00:	movw	r0, #1075	; 0x433
   32f04:	str	r0, [sp, #40]	; 0x28
   32f08:	movw	r0, #52	; 0x34
   32f0c:	str	r0, [sp, #36]	; 0x24
   32f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32f14:	str	r0, [sp, #16]
   32f18:	ldr	r0, [fp, #-20]	; 0xffffffec
   32f1c:	str	r0, [sp, #20]
   32f20:	ldr	r0, [fp, #-16]
   32f24:	str	r0, [sp, #24]
   32f28:	ldr	r0, [fp, #-12]
   32f2c:	str	r0, [sp, #28]
   32f30:	ldr	r0, [sp, #20]
   32f34:	cmp	r0, #2097152	; 0x200000
   32f38:	bcc	32f68 <grisu3_diy_fp_encode_double@@Base+0xa80>
   32f3c:	b	32f40 <grisu3_diy_fp_encode_double@@Base+0xa58>
   32f40:	ldr	r0, [sp, #16]
   32f44:	ldr	r1, [sp, #20]
   32f48:	lsrs	r1, r1, #1
   32f4c:	rrx	r0, r0
   32f50:	str	r1, [sp, #20]
   32f54:	str	r0, [sp, #16]
   32f58:	ldr	r0, [sp, #24]
   32f5c:	add	r0, r0, #1
   32f60:	str	r0, [sp, #24]
   32f64:	b	32f30 <grisu3_diy_fp_encode_double@@Base+0xa48>
   32f68:	ldr	r0, [pc, #248]	; 33068 <grisu3_diy_fp_encode_double@@Base+0xb80>
   32f6c:	ldr	r1, [sp, #24]
   32f70:	cmp	r1, r0
   32f74:	bge	32f84 <grisu3_diy_fp_encode_double@@Base+0xa9c>
   32f78:	vldr	d16, [pc, #224]	; 33060 <grisu3_diy_fp_encode_double@@Base+0xb78>
   32f7c:	vstr	d16, [fp, #-8]
   32f80:	b	33054 <grisu3_diy_fp_encode_double@@Base+0xb6c>
   32f84:	b	32f88 <grisu3_diy_fp_encode_double@@Base+0xaa0>
   32f88:	ldr	r0, [pc, #216]	; 33068 <grisu3_diy_fp_encode_double@@Base+0xb80>
   32f8c:	ldr	r1, [sp, #24]
   32f90:	cmp	r1, r0
   32f94:	movw	r0, #0
   32f98:	str	r0, [sp, #4]
   32f9c:	ble	32fb4 <grisu3_diy_fp_encode_double@@Base+0xacc>
   32fa0:	ldrb	r0, [sp, #22]
   32fa4:	and	r0, r0, #16
   32fa8:	mov	r1, #1
   32fac:	eor	r0, r1, r0, lsr #4
   32fb0:	str	r0, [sp, #4]
   32fb4:	ldr	r0, [sp, #4]
   32fb8:	tst	r0, #1
   32fbc:	beq	32ff0 <grisu3_diy_fp_encode_double@@Base+0xb08>
   32fc0:	ldr	r0, [sp, #16]
   32fc4:	ldr	r1, [sp, #20]
   32fc8:	lsl	r1, r1, #1
   32fcc:	orr	r1, r1, r0, lsr #31
   32fd0:	lsl	r0, r0, #1
   32fd4:	str	r0, [sp, #16]
   32fd8:	str	r1, [sp, #20]
   32fdc:	ldr	r0, [sp, #24]
   32fe0:	mvn	r1, #0
   32fe4:	add	r0, r0, r1
   32fe8:	str	r0, [sp, #24]
   32fec:	b	32f88 <grisu3_diy_fp_encode_double@@Base+0xaa0>
   32ff0:	ldr	r0, [pc, #112]	; 33068 <grisu3_diy_fp_encode_double@@Base+0xb80>
   32ff4:	ldr	r1, [sp, #24]
   32ff8:	cmp	r1, r0
   32ffc:	bne	33020 <grisu3_diy_fp_encode_double@@Base+0xb38>
   33000:	ldrb	r0, [sp, #22]
   33004:	tst	r0, #16
   33008:	bne	33020 <grisu3_diy_fp_encode_double@@Base+0xb38>
   3300c:	b	33010 <grisu3_diy_fp_encode_double@@Base+0xb28>
   33010:	mov	r0, #0
   33014:	str	r0, [sp, #12]
   33018:	str	r0, [sp, #8]
   3301c:	b	33038 <grisu3_diy_fp_encode_double@@Base+0xb50>
   33020:	ldr	r0, [sp, #24]
   33024:	movw	r1, #1075	; 0x433
   33028:	add	r0, r0, r1
   3302c:	asr	r1, r0, #31
   33030:	str	r0, [sp, #8]
   33034:	str	r1, [sp, #12]
   33038:	ldr	r0, [sp, #16]
   3303c:	ldr	r1, [sp, #20]
   33040:	bfc	r1, #20, #12
   33044:	ldr	r2, [sp, #8]
   33048:	orr	r1, r1, r2, lsl #20
   3304c:	bl	37bbc <flatcc_json_parser_struct_as_root@@Base+0x170>
   33050:	vstr	d0, [fp, #-8]
   33054:	vldr	d0, [fp, #-8]
   33058:	mov	sp, fp
   3305c:	pop	{fp, pc}
	...
   33068:			; <UNDEFINED> instruction: 0xfffffbce

0003306c <flatcc_json_parser_error_string@@Base>:
   3306c:	sub	sp, sp, #12
   33070:	str	r0, [sp, #4]
   33074:	ldr	r0, [sp, #4]
   33078:	cmp	r0, #34	; 0x22
   3307c:	str	r0, [sp]
   33080:	bhi	33350 <flatcc_json_parser_error_string@@Base+0x2e4>
   33084:	add	r0, pc, #8
   33088:	ldr	r1, [sp]
   3308c:	ldr	r2, [r0, r1, lsl #2]
   33090:	add	pc, r0, r2
   33094:	andeq	r0, r0, ip, lsl #1
   33098:	muleq	r0, ip, r0
   3309c:	andeq	r0, r0, ip, lsr #1
   330a0:	strheq	r0, [r0], -ip
   330a4:	andeq	r0, r0, ip, asr #1
   330a8:	ldrdeq	r0, [r0], -ip
   330ac:	andeq	r0, r0, ip, ror #1
   330b0:	strdeq	r0, [r0], -ip
   330b4:	andeq	r0, r0, ip, lsl #2
   330b8:	andeq	r0, r0, ip, lsl r1
   330bc:	andeq	r0, r0, ip, lsr #2
   330c0:	andeq	r0, r0, ip, lsr r1
   330c4:	andeq	r0, r0, ip, asr #2
   330c8:	andeq	r0, r0, ip, asr r1
   330cc:	andeq	r0, r0, ip, ror #2
   330d0:	andeq	r0, r0, ip, ror r1
   330d4:	andeq	r0, r0, ip, lsl #3
   330d8:	muleq	r0, ip, r1
   330dc:	andeq	r0, r0, ip, lsr #3
   330e0:			; <UNDEFINED> instruction: 0x000001bc
   330e4:	andeq	r0, r0, ip, asr #3
   330e8:	ldrdeq	r0, [r0], -ip
   330ec:	andeq	r0, r0, ip, ror #3
   330f0:	strdeq	r0, [r0], -ip
   330f4:	andeq	r0, r0, ip, lsl #4
   330f8:	andeq	r0, r0, ip, lsl r2
   330fc:	andeq	r0, r0, ip, lsr #4
   33100:	andeq	r0, r0, ip, lsr r2
   33104:	andeq	r0, r0, ip, asr #4
   33108:	andeq	r0, r0, ip, asr r2
   3310c:	andeq	r0, r0, ip, ror #4
   33110:	andeq	r0, r0, ip, ror r2
   33114:	andeq	r0, r0, ip, lsl #5
   33118:	muleq	r0, ip, r2
   3311c:	andeq	r0, r0, ip, lsr #5
   33120:	ldr	r0, [pc, #712]	; 333f0 <flatcc_json_parser_error_string@@Base+0x384>
   33124:	add	r0, pc, r0
   33128:	str	r0, [sp, #8]
   3312c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33130:	ldr	r0, [pc, #692]	; 333ec <flatcc_json_parser_error_string@@Base+0x380>
   33134:	add	r0, pc, r0
   33138:	str	r0, [sp, #8]
   3313c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33140:	ldr	r0, [pc, #672]	; 333e8 <flatcc_json_parser_error_string@@Base+0x37c>
   33144:	add	r0, pc, r0
   33148:	str	r0, [sp, #8]
   3314c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33150:	ldr	r0, [pc, #652]	; 333e4 <flatcc_json_parser_error_string@@Base+0x378>
   33154:	add	r0, pc, r0
   33158:	str	r0, [sp, #8]
   3315c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33160:	ldr	r0, [pc, #632]	; 333e0 <flatcc_json_parser_error_string@@Base+0x374>
   33164:	add	r0, pc, r0
   33168:	str	r0, [sp, #8]
   3316c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33170:	ldr	r0, [pc, #612]	; 333dc <flatcc_json_parser_error_string@@Base+0x370>
   33174:	add	r0, pc, r0
   33178:	str	r0, [sp, #8]
   3317c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33180:	ldr	r0, [pc, #592]	; 333d8 <flatcc_json_parser_error_string@@Base+0x36c>
   33184:	add	r0, pc, r0
   33188:	str	r0, [sp, #8]
   3318c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33190:	ldr	r0, [pc, #572]	; 333d4 <flatcc_json_parser_error_string@@Base+0x368>
   33194:	add	r0, pc, r0
   33198:	str	r0, [sp, #8]
   3319c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   331a0:	ldr	r0, [pc, #552]	; 333d0 <flatcc_json_parser_error_string@@Base+0x364>
   331a4:	add	r0, pc, r0
   331a8:	str	r0, [sp, #8]
   331ac:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   331b0:	ldr	r0, [pc, #532]	; 333cc <flatcc_json_parser_error_string@@Base+0x360>
   331b4:	add	r0, pc, r0
   331b8:	str	r0, [sp, #8]
   331bc:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   331c0:	ldr	r0, [pc, #512]	; 333c8 <flatcc_json_parser_error_string@@Base+0x35c>
   331c4:	add	r0, pc, r0
   331c8:	str	r0, [sp, #8]
   331cc:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   331d0:	ldr	r0, [pc, #492]	; 333c4 <flatcc_json_parser_error_string@@Base+0x358>
   331d4:	add	r0, pc, r0
   331d8:	str	r0, [sp, #8]
   331dc:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   331e0:	ldr	r0, [pc, #472]	; 333c0 <flatcc_json_parser_error_string@@Base+0x354>
   331e4:	add	r0, pc, r0
   331e8:	str	r0, [sp, #8]
   331ec:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   331f0:	ldr	r0, [pc, #452]	; 333bc <flatcc_json_parser_error_string@@Base+0x350>
   331f4:	add	r0, pc, r0
   331f8:	str	r0, [sp, #8]
   331fc:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33200:	ldr	r0, [pc, #432]	; 333b8 <flatcc_json_parser_error_string@@Base+0x34c>
   33204:	add	r0, pc, r0
   33208:	str	r0, [sp, #8]
   3320c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33210:	ldr	r0, [pc, #412]	; 333b4 <flatcc_json_parser_error_string@@Base+0x348>
   33214:	add	r0, pc, r0
   33218:	str	r0, [sp, #8]
   3321c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33220:	ldr	r0, [pc, #392]	; 333b0 <flatcc_json_parser_error_string@@Base+0x344>
   33224:	add	r0, pc, r0
   33228:	str	r0, [sp, #8]
   3322c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33230:	ldr	r0, [pc, #372]	; 333ac <flatcc_json_parser_error_string@@Base+0x340>
   33234:	add	r0, pc, r0
   33238:	str	r0, [sp, #8]
   3323c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33240:	ldr	r0, [pc, #352]	; 333a8 <flatcc_json_parser_error_string@@Base+0x33c>
   33244:	add	r0, pc, r0
   33248:	str	r0, [sp, #8]
   3324c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33250:	ldr	r0, [pc, #332]	; 333a4 <flatcc_json_parser_error_string@@Base+0x338>
   33254:	add	r0, pc, r0
   33258:	str	r0, [sp, #8]
   3325c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33260:	ldr	r0, [pc, #312]	; 333a0 <flatcc_json_parser_error_string@@Base+0x334>
   33264:	add	r0, pc, r0
   33268:	str	r0, [sp, #8]
   3326c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33270:	ldr	r0, [pc, #292]	; 3339c <flatcc_json_parser_error_string@@Base+0x330>
   33274:	add	r0, pc, r0
   33278:	str	r0, [sp, #8]
   3327c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33280:	ldr	r0, [pc, #272]	; 33398 <flatcc_json_parser_error_string@@Base+0x32c>
   33284:	add	r0, pc, r0
   33288:	str	r0, [sp, #8]
   3328c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33290:	ldr	r0, [pc, #252]	; 33394 <flatcc_json_parser_error_string@@Base+0x328>
   33294:	add	r0, pc, r0
   33298:	str	r0, [sp, #8]
   3329c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   332a0:	ldr	r0, [pc, #232]	; 33390 <flatcc_json_parser_error_string@@Base+0x324>
   332a4:	add	r0, pc, r0
   332a8:	str	r0, [sp, #8]
   332ac:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   332b0:	ldr	r0, [pc, #212]	; 3338c <flatcc_json_parser_error_string@@Base+0x320>
   332b4:	add	r0, pc, r0
   332b8:	str	r0, [sp, #8]
   332bc:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   332c0:	ldr	r0, [pc, #192]	; 33388 <flatcc_json_parser_error_string@@Base+0x31c>
   332c4:	add	r0, pc, r0
   332c8:	str	r0, [sp, #8]
   332cc:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   332d0:	ldr	r0, [pc, #172]	; 33384 <flatcc_json_parser_error_string@@Base+0x318>
   332d4:	add	r0, pc, r0
   332d8:	str	r0, [sp, #8]
   332dc:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   332e0:	ldr	r0, [pc, #152]	; 33380 <flatcc_json_parser_error_string@@Base+0x314>
   332e4:	add	r0, pc, r0
   332e8:	str	r0, [sp, #8]
   332ec:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   332f0:	ldr	r0, [pc, #132]	; 3337c <flatcc_json_parser_error_string@@Base+0x310>
   332f4:	add	r0, pc, r0
   332f8:	str	r0, [sp, #8]
   332fc:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33300:	ldr	r0, [pc, #112]	; 33378 <flatcc_json_parser_error_string@@Base+0x30c>
   33304:	add	r0, pc, r0
   33308:	str	r0, [sp, #8]
   3330c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33310:	ldr	r0, [pc, #92]	; 33374 <flatcc_json_parser_error_string@@Base+0x308>
   33314:	add	r0, pc, r0
   33318:	str	r0, [sp, #8]
   3331c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33320:	ldr	r0, [pc, #72]	; 33370 <flatcc_json_parser_error_string@@Base+0x304>
   33324:	add	r0, pc, r0
   33328:	str	r0, [sp, #8]
   3332c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33330:	ldr	r0, [pc, #52]	; 3336c <flatcc_json_parser_error_string@@Base+0x300>
   33334:	add	r0, pc, r0
   33338:	str	r0, [sp, #8]
   3333c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33340:	ldr	r0, [pc, #32]	; 33368 <flatcc_json_parser_error_string@@Base+0x2fc>
   33344:	add	r0, pc, r0
   33348:	str	r0, [sp, #8]
   3334c:	b	3335c <flatcc_json_parser_error_string@@Base+0x2f0>
   33350:	ldr	r0, [pc, #156]	; 333f4 <flatcc_json_parser_error_string@@Base+0x388>
   33354:	add	r0, pc, r0
   33358:	str	r0, [sp, #8]
   3335c:	ldr	r0, [sp, #8]
   33360:	add	sp, sp, #12
   33364:	bx	lr
   33368:	strdeq	r7, [r1], -sp
   3336c:	andeq	r8, r1, r4, lsr r0
   33370:	andeq	r8, r1, sl, lsr #32
   33374:	andeq	r8, r1, r3, lsr #32
   33378:	andeq	r8, r1, r6, lsl r0
   3337c:	andeq	r7, r1, r9, ror r9
   33380:	andeq	r8, r1, ip, lsl r0
   33384:	andeq	r8, r1, r1, lsl r0
   33388:	andeq	r8, r1, r2
   3338c:	strdeq	r7, [r1], -r5
   33390:	strdeq	r7, [r1], -r1
   33394:	ldrdeq	r7, [r1], -sp
   33398:	ldrdeq	r7, [r1], -lr
   3339c:	ldrdeq	r7, [r1], -lr
   333a0:	ldrdeq	r7, [r1], -sl
   333a4:	ldrdeq	r7, [r1], -sp
   333a8:	ldrdeq	r7, [r1], -lr
   333ac:	ldrdeq	r7, [r1], -ip
   333b0:	ldrdeq	r7, [r1], -ip
   333b4:	ldrdeq	r7, [r1], -r9
   333b8:	ldrdeq	r7, [r1], -r0
   333bc:	ldrdeq	r7, [r1], -r1
   333c0:	ldrdeq	r7, [r1], -r0
   333c4:	ldrdeq	r7, [r1], -r1
   333c8:	andeq	r7, r1, pc, asr #31
   333cc:	andeq	r7, r1, lr, asr #31
   333d0:	ldrdeq	r7, [r1], -r4
   333d4:	ldrdeq	r7, [r1], -sp
   333d8:	andeq	r7, r1, r4, ror #31
   333dc:	ldrdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   333e0:	andeq	r7, r1, r0, ror #31
   333e4:	andeq	r7, r1, r1, ror #31
   333e8:	andeq	r7, r1, r4, ror #31
   333ec:	strdeq	r7, [r1], -r0
   333f0:	andeq	r7, r1, r0, lsl #22
   333f4:	strdeq	r7, [r1], -fp

000333f8 <flatcc_json_parser_set_error@@Base>:
   333f8:	sub	sp, sp, #16
   333fc:	str	r0, [sp, #12]
   33400:	str	r1, [sp, #8]
   33404:	str	r2, [sp, #4]
   33408:	str	r3, [sp]
   3340c:	ldr	r0, [sp, #12]
   33410:	ldr	r0, [r0, #20]
   33414:	cmp	r0, #0
   33418:	bne	33450 <flatcc_json_parser_set_error@@Base+0x58>
   3341c:	ldr	r0, [sp]
   33420:	ldr	r1, [sp, #12]
   33424:	str	r0, [r1, #20]
   33428:	ldr	r0, [sp, #8]
   3342c:	ldr	r1, [sp, #12]
   33430:	ldr	r1, [r1, #4]
   33434:	sub	r0, r0, r1
   33438:	add	r0, r0, #1
   3343c:	ldr	r1, [sp, #12]
   33440:	str	r0, [r1, #16]
   33444:	ldr	r0, [sp, #8]
   33448:	ldr	r1, [sp, #12]
   3344c:	str	r0, [r1, #32]
   33450:	ldr	r0, [sp, #4]
   33454:	add	sp, sp, #16
   33458:	bx	lr

0003345c <flatcc_json_parser_string_part@@Base>:
   3345c:	push	{fp, lr}
   33460:	mov	fp, sp
   33464:	sub	sp, sp, #24
   33468:	str	r0, [fp, #-8]
   3346c:	str	r1, [sp, #12]
   33470:	str	r2, [sp, #8]
   33474:	ldr	r0, [sp, #12]
   33478:	ldr	r1, [sp, #8]
   3347c:	cmp	r0, r1
   33480:	movw	r0, #0
   33484:	str	r0, [sp, #4]
   33488:	beq	334d4 <flatcc_json_parser_string_part@@Base+0x78>
   3348c:	ldr	r0, [sp, #12]
   33490:	ldrb	r0, [r0]
   33494:	cmp	r0, #34	; 0x22
   33498:	movw	r0, #0
   3349c:	str	r0, [sp, #4]
   334a0:	beq	334d4 <flatcc_json_parser_string_part@@Base+0x78>
   334a4:	ldr	r0, [sp, #12]
   334a8:	ldrb	r0, [r0]
   334ac:	cmp	r0, #32
   334b0:	movw	r0, #0
   334b4:	str	r0, [sp, #4]
   334b8:	blt	334d4 <flatcc_json_parser_string_part@@Base+0x78>
   334bc:	ldr	r0, [sp, #12]
   334c0:	ldrb	r0, [r0]
   334c4:	cmp	r0, #92	; 0x5c
   334c8:	movw	r0, #0
   334cc:	movne	r0, #1
   334d0:	str	r0, [sp, #4]
   334d4:	ldr	r0, [sp, #4]
   334d8:	tst	r0, #1
   334dc:	beq	334f0 <flatcc_json_parser_string_part@@Base+0x94>
   334e0:	ldr	r0, [sp, #12]
   334e4:	add	r0, r0, #1
   334e8:	str	r0, [sp, #12]
   334ec:	b	33474 <flatcc_json_parser_string_part@@Base+0x18>
   334f0:	ldr	r0, [sp, #12]
   334f4:	ldr	r1, [sp, #8]
   334f8:	cmp	r0, r1
   334fc:	bne	3351c <flatcc_json_parser_string_part@@Base+0xc0>
   33500:	ldr	r0, [fp, #-8]
   33504:	ldr	r1, [sp, #12]
   33508:	ldr	r2, [sp, #8]
   3350c:	movw	r3, #20
   33510:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   33514:	str	r0, [fp, #-4]
   33518:	b	3356c <flatcc_json_parser_string_part@@Base+0x110>
   3351c:	ldr	r0, [sp, #12]
   33520:	ldrb	r0, [r0]
   33524:	cmp	r0, #34	; 0x22
   33528:	bne	33538 <flatcc_json_parser_string_part@@Base+0xdc>
   3352c:	ldr	r0, [sp, #12]
   33530:	str	r0, [fp, #-4]
   33534:	b	3356c <flatcc_json_parser_string_part@@Base+0x110>
   33538:	ldr	r0, [sp, #12]
   3353c:	ldrb	r0, [r0]
   33540:	cmp	r0, #32
   33544:	bge	33564 <flatcc_json_parser_string_part@@Base+0x108>
   33548:	ldr	r0, [fp, #-8]
   3354c:	ldr	r1, [sp, #12]
   33550:	ldr	r2, [sp, #8]
   33554:	movw	r3, #17
   33558:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   3355c:	str	r0, [fp, #-4]
   33560:	b	3356c <flatcc_json_parser_string_part@@Base+0x110>
   33564:	ldr	r0, [sp, #12]
   33568:	str	r0, [fp, #-4]
   3356c:	ldr	r0, [fp, #-4]
   33570:	mov	sp, fp
   33574:	pop	{fp, pc}

00033578 <flatcc_json_parser_space_ext@@Base>:
   33578:	push	{fp, lr}
   3357c:	mov	fp, sp
   33580:	sub	sp, sp, #32
   33584:	str	r0, [fp, #-8]
   33588:	str	r1, [fp, #-12]
   3358c:	str	r2, [sp, #16]
   33590:	b	33594 <flatcc_json_parser_space_ext@@Base+0x1c>
   33594:	ldr	r0, [fp, #-12]
   33598:	ldr	r1, [sp, #16]
   3359c:	cmp	r0, r1
   335a0:	movw	r0, #0
   335a4:	str	r0, [sp, #12]
   335a8:	beq	335c4 <flatcc_json_parser_space_ext@@Base+0x4c>
   335ac:	ldr	r0, [fp, #-12]
   335b0:	ldrb	r0, [r0]
   335b4:	cmp	r0, #32
   335b8:	movw	r0, #0
   335bc:	moveq	r0, #1
   335c0:	str	r0, [sp, #12]
   335c4:	ldr	r0, [sp, #12]
   335c8:	tst	r0, #1
   335cc:	beq	335e0 <flatcc_json_parser_space_ext@@Base+0x68>
   335d0:	ldr	r0, [fp, #-12]
   335d4:	add	r0, r0, #1
   335d8:	str	r0, [fp, #-12]
   335dc:	b	33594 <flatcc_json_parser_space_ext@@Base+0x1c>
   335e0:	b	335e4 <flatcc_json_parser_space_ext@@Base+0x6c>
   335e4:	ldr	r0, [fp, #-12]
   335e8:	ldr	r1, [sp, #16]
   335ec:	cmp	r0, r1
   335f0:	movw	r0, #0
   335f4:	str	r0, [sp, #8]
   335f8:	beq	33614 <flatcc_json_parser_space_ext@@Base+0x9c>
   335fc:	ldr	r0, [fp, #-12]
   33600:	ldrb	r0, [r0]
   33604:	cmp	r0, #32
   33608:	movw	r0, #0
   3360c:	movle	r0, #1
   33610:	str	r0, [sp, #8]
   33614:	ldr	r0, [sp, #8]
   33618:	tst	r0, #1
   3361c:	beq	33748 <flatcc_json_parser_space_ext@@Base+0x1d0>
   33620:	ldr	r0, [fp, #-12]
   33624:	ldrb	r0, [r0]
   33628:	sub	r0, r0, #9
   3362c:	cmp	r0, #23
   33630:	str	r0, [sp, #4]
   33634:	bhi	3372c <flatcc_json_parser_space_ext@@Base+0x1b4>
   33638:	add	r0, pc, #8
   3363c:	ldr	r1, [sp, #4]
   33640:	ldr	r2, [r0, r1, lsl #2]
   33644:	add	pc, r0, r2
   33648:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3364c:	andeq	r0, r0, r8, lsr #1
   33650:	andeq	r0, r0, r4, ror #1
   33654:	andeq	r0, r0, r4, ror #1
   33658:	andeq	r0, r0, r0, rrx
   3365c:	andeq	r0, r0, r4, ror #1
   33660:	andeq	r0, r0, r4, ror #1
   33664:	andeq	r0, r0, r4, ror #1
   33668:	andeq	r0, r0, r4, ror #1
   3366c:	andeq	r0, r0, r4, ror #1
   33670:	andeq	r0, r0, r4, ror #1
   33674:	andeq	r0, r0, r4, ror #1
   33678:	andeq	r0, r0, r4, ror #1
   3367c:	andeq	r0, r0, r4, ror #1
   33680:	andeq	r0, r0, r4, ror #1
   33684:	andeq	r0, r0, r4, ror #1
   33688:	andeq	r0, r0, r4, ror #1
   3368c:	andeq	r0, r0, r4, ror #1
   33690:	andeq	r0, r0, r4, ror #1
   33694:	andeq	r0, r0, r4, ror #1
   33698:	andeq	r0, r0, r4, ror #1
   3369c:	andeq	r0, r0, r4, ror #1
   336a0:	andeq	r0, r0, r4, ror #1
   336a4:	andeq	r0, r0, r0, ror #1
   336a8:	ldr	r0, [sp, #16]
   336ac:	ldr	r1, [fp, #-12]
   336b0:	sub	r0, r0, r1
   336b4:	cmp	r0, #1
   336b8:	movw	r0, #0
   336bc:	str	r0, [sp]
   336c0:	ble	336dc <flatcc_json_parser_space_ext@@Base+0x164>
   336c4:	ldr	r0, [fp, #-12]
   336c8:	ldrb	r0, [r0, #1]
   336cc:	cmp	r0, #10
   336d0:	movw	r0, #0
   336d4:	moveq	r0, #1
   336d8:	str	r0, [sp]
   336dc:	ldr	r0, [sp]
   336e0:	and	r0, r0, #1
   336e4:	ldr	r1, [fp, #-12]
   336e8:	add	r0, r1, r0
   336ec:	str	r0, [fp, #-12]
   336f0:	ldr	r0, [fp, #-8]
   336f4:	ldr	r1, [r0, #12]
   336f8:	add	r1, r1, #1
   336fc:	str	r1, [r0, #12]
   33700:	ldr	r0, [fp, #-12]
   33704:	add	r0, r0, #1
   33708:	str	r0, [fp, #-12]
   3370c:	ldr	r1, [fp, #-8]
   33710:	str	r0, [r1, #4]
   33714:	b	335e4 <flatcc_json_parser_space_ext@@Base+0x6c>
   33718:	ldr	r0, [fp, #-12]
   3371c:	add	r0, r0, #1
   33720:	str	r0, [fp, #-12]
   33724:	b	335e4 <flatcc_json_parser_space_ext@@Base+0x6c>
   33728:	b	33590 <flatcc_json_parser_space_ext@@Base+0x18>
   3372c:	ldr	r0, [fp, #-8]
   33730:	ldr	r1, [fp, #-12]
   33734:	ldr	r2, [sp, #16]
   33738:	movw	r3, #5
   3373c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   33740:	str	r0, [fp, #-4]
   33744:	b	33750 <flatcc_json_parser_space_ext@@Base+0x1d8>
   33748:	ldr	r0, [fp, #-12]
   3374c:	str	r0, [fp, #-4]
   33750:	ldr	r0, [fp, #-4]
   33754:	mov	sp, fp
   33758:	pop	{fp, pc}

0003375c <flatcc_json_parser_string_escape@@Base>:
   3375c:	push	{fp, lr}
   33760:	mov	fp, sp
   33764:	sub	sp, sp, #32
   33768:	str	r0, [fp, #-8]
   3376c:	str	r1, [fp, #-12]
   33770:	str	r2, [sp, #16]
   33774:	str	r3, [sp, #12]
   33778:	ldr	r0, [sp, #16]
   3377c:	ldr	r1, [fp, #-12]
   33780:	sub	r0, r0, r1
   33784:	cmp	r0, #2
   33788:	blt	3379c <flatcc_json_parser_string_escape@@Base+0x40>
   3378c:	ldr	r0, [fp, #-12]
   33790:	ldrb	r0, [r0]
   33794:	cmp	r0, #92	; 0x5c
   33798:	beq	337c4 <flatcc_json_parser_string_escape@@Base+0x68>
   3379c:	ldr	r0, [sp, #12]
   337a0:	movw	r1, #0
   337a4:	strb	r1, [r0]
   337a8:	ldr	r0, [fp, #-8]
   337ac:	ldr	r1, [fp, #-12]
   337b0:	ldr	r2, [sp, #16]
   337b4:	movw	r3, #18
   337b8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   337bc:	str	r0, [fp, #-4]
   337c0:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   337c4:	ldr	r0, [fp, #-12]
   337c8:	ldrb	r0, [r0, #1]
   337cc:	sub	r0, r0, #34	; 0x22
   337d0:	cmp	r0, #86	; 0x56
   337d4:	str	r0, [sp]
   337d8:	bhi	34050 <flatcc_json_parser_string_escape@@Base+0x8f4>
   337dc:	add	r0, pc, #8
   337e0:	ldr	r1, [sp]
   337e4:	ldr	r2, [r0, r1, lsl #2]
   337e8:	add	pc, r0, r2
   337ec:	andeq	r0, r0, ip, ror #15
   337f0:	andeq	r0, r0, r4, ror #16
   337f4:	andeq	r0, r0, r4, ror #16
   337f8:	andeq	r0, r0, r4, ror #16
   337fc:	andeq	r0, r0, r4, ror #16
   33800:	andeq	r0, r0, r4, ror #16
   33804:	andeq	r0, r0, r4, ror #16
   33808:	andeq	r0, r0, r4, ror #16
   3380c:	andeq	r0, r0, r4, ror #16
   33810:	andeq	r0, r0, r4, ror #16
   33814:	andeq	r0, r0, r4, ror #16
   33818:	andeq	r0, r0, r4, ror #16
   3381c:	andeq	r0, r0, r4, ror #16
   33820:	andeq	r0, r0, ip, lsr r8
   33824:	andeq	r0, r0, r4, ror #16
   33828:	andeq	r0, r0, r4, ror #16
   3382c:	andeq	r0, r0, r4, ror #16
   33830:	andeq	r0, r0, r4, ror #16
   33834:	andeq	r0, r0, r4, ror #16
   33838:	andeq	r0, r0, r4, ror #16
   3383c:	andeq	r0, r0, r4, ror #16
   33840:	andeq	r0, r0, r4, ror #16
   33844:	andeq	r0, r0, r4, ror #16
   33848:	andeq	r0, r0, r4, ror #16
   3384c:	andeq	r0, r0, r4, ror #16
   33850:	andeq	r0, r0, r4, ror #16
   33854:	andeq	r0, r0, r4, ror #16
   33858:	andeq	r0, r0, r4, ror #16
   3385c:	andeq	r0, r0, r4, ror #16
   33860:	andeq	r0, r0, r4, ror #16
   33864:	andeq	r0, r0, r4, ror #16
   33868:	andeq	r0, r0, r4, ror #16
   3386c:	andeq	r0, r0, r4, ror #16
   33870:	andeq	r0, r0, r4, ror #16
   33874:	andeq	r0, r0, r4, ror #16
   33878:	andeq	r0, r0, r4, ror #16
   3387c:	andeq	r0, r0, r4, ror #16
   33880:	andeq	r0, r0, r4, ror #16
   33884:	andeq	r0, r0, r4, ror #16
   33888:	andeq	r0, r0, r4, ror #16
   3388c:	andeq	r0, r0, r4, ror #16
   33890:	andeq	r0, r0, r4, ror #16
   33894:	andeq	r0, r0, r4, ror #16
   33898:	andeq	r0, r0, r4, ror #16
   3389c:	andeq	r0, r0, r4, ror #16
   338a0:	andeq	r0, r0, r4, ror #16
   338a4:	andeq	r0, r0, r4, ror #16
   338a8:	andeq	r0, r0, r4, ror #16
   338ac:	andeq	r0, r0, r4, ror #16
   338b0:	andeq	r0, r0, r4, ror #16
   338b4:	andeq	r0, r0, r4, ror #16
   338b8:	andeq	r0, r0, r4, ror #16
   338bc:	andeq	r0, r0, r4, ror #16
   338c0:	andeq	r0, r0, r4, ror #16
   338c4:	andeq	r0, r0, r4, ror #16
   338c8:	andeq	r0, r0, r4, ror #16
   338cc:	andeq	r0, r0, r4, ror #16
   338d0:	andeq	r0, r0, r4, ror #16
   338d4:	andeq	r0, r0, r4, lsl r8
   338d8:	andeq	r0, r0, r4, ror #16
   338dc:	andeq	r0, r0, r4, ror #16
   338e0:	andeq	r0, r0, r4, ror #16
   338e4:	andeq	r0, r0, r4, ror #16
   338e8:	andeq	r0, r0, r4, ror #16
   338ec:	muleq	r0, ip, r7
   338f0:	andeq	r0, r0, r4, ror #16
   338f4:	andeq	r0, r0, r4, ror #16
   338f8:	andeq	r0, r0, r4, ror #16
   338fc:	andeq	r0, r0, r4, asr #15
   33900:	andeq	r0, r0, r4, ror #16
   33904:	andeq	r0, r0, r4, ror #16
   33908:	andeq	r0, r0, r4, ror #16
   3390c:	andeq	r0, r0, r4, ror #16
   33910:	andeq	r0, r0, r4, ror #16
   33914:	andeq	r0, r0, r4, ror #16
   33918:	andeq	r0, r0, r4, ror #16
   3391c:	andeq	r0, r0, ip, asr #14
   33920:	andeq	r0, r0, r4, ror #16
   33924:	andeq	r0, r0, r4, ror #16
   33928:	andeq	r0, r0, r4, ror #16
   3392c:	andeq	r0, r0, r4, ror r7
   33930:	andeq	r0, r0, r4, ror #16
   33934:	andeq	r0, r0, r4, lsr #14
   33938:	andeq	r0, r0, r0, lsr #6
   3393c:	andeq	r0, r0, r4, ror #16
   33940:	andeq	r0, r0, r4, ror #16
   33944:	andeq	r0, r0, ip, asr r1
   33948:	movw	r0, #0
   3394c:	strb	r0, [sp, #10]
   33950:	ldr	r0, [sp, #12]
   33954:	movw	r1, #1
   33958:	strb	r1, [r0]
   3395c:	ldr	r0, [sp, #16]
   33960:	ldr	r1, [fp, #-12]
   33964:	sub	r0, r0, r1
   33968:	cmp	r0, #4
   3396c:	bge	33998 <flatcc_json_parser_string_escape@@Base+0x23c>
   33970:	ldr	r0, [sp, #12]
   33974:	movw	r1, #0
   33978:	strb	r1, [r0]
   3397c:	ldr	r0, [fp, #-8]
   33980:	ldr	r1, [fp, #-12]
   33984:	ldr	r2, [sp, #16]
   33988:	movw	r3, #18
   3398c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   33990:	str	r0, [fp, #-4]
   33994:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33998:	ldr	r0, [fp, #-12]
   3399c:	ldrb	r0, [r0, #2]
   339a0:	strb	r0, [sp, #11]
   339a4:	ldrb	r0, [sp, #11]
   339a8:	cmp	r0, #48	; 0x30
   339ac:	blt	339d8 <flatcc_json_parser_string_escape@@Base+0x27c>
   339b0:	ldrb	r0, [sp, #11]
   339b4:	cmp	r0, #57	; 0x39
   339b8:	bgt	339d8 <flatcc_json_parser_string_escape@@Base+0x27c>
   339bc:	ldrb	r0, [sp, #11]
   339c0:	sub	r0, r0, #48	; 0x30
   339c4:	lsl	r0, r0, #4
   339c8:	ldrb	r1, [sp, #10]
   339cc:	orr	r0, r1, r0
   339d0:	strb	r0, [sp, #10]
   339d4:	b	33a48 <flatcc_json_parser_string_escape@@Base+0x2ec>
   339d8:	ldrb	r0, [sp, #11]
   339dc:	orr	r0, r0, #32
   339e0:	strb	r0, [sp, #11]
   339e4:	ldrb	r0, [sp, #11]
   339e8:	cmp	r0, #97	; 0x61
   339ec:	blt	33a1c <flatcc_json_parser_string_escape@@Base+0x2c0>
   339f0:	ldrb	r0, [sp, #11]
   339f4:	cmp	r0, #102	; 0x66
   339f8:	bgt	33a1c <flatcc_json_parser_string_escape@@Base+0x2c0>
   339fc:	ldrb	r0, [sp, #11]
   33a00:	sub	r0, r0, #97	; 0x61
   33a04:	add	r0, r0, #10
   33a08:	lsl	r0, r0, #4
   33a0c:	ldrb	r1, [sp, #10]
   33a10:	orr	r0, r1, r0
   33a14:	strb	r0, [sp, #10]
   33a18:	b	33a44 <flatcc_json_parser_string_escape@@Base+0x2e8>
   33a1c:	ldr	r0, [sp, #12]
   33a20:	movw	r1, #0
   33a24:	strb	r1, [r0]
   33a28:	ldr	r0, [fp, #-8]
   33a2c:	ldr	r1, [fp, #-12]
   33a30:	ldr	r2, [sp, #16]
   33a34:	movw	r3, #18
   33a38:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   33a3c:	str	r0, [fp, #-4]
   33a40:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33a44:	b	33a48 <flatcc_json_parser_string_escape@@Base+0x2ec>
   33a48:	ldr	r0, [fp, #-12]
   33a4c:	ldrb	r0, [r0, #3]
   33a50:	strb	r0, [sp, #11]
   33a54:	ldrb	r0, [sp, #11]
   33a58:	cmp	r0, #48	; 0x30
   33a5c:	blt	33a84 <flatcc_json_parser_string_escape@@Base+0x328>
   33a60:	ldrb	r0, [sp, #11]
   33a64:	cmp	r0, #57	; 0x39
   33a68:	bgt	33a84 <flatcc_json_parser_string_escape@@Base+0x328>
   33a6c:	ldrb	r0, [sp, #11]
   33a70:	sub	r0, r0, #48	; 0x30
   33a74:	ldrb	r1, [sp, #10]
   33a78:	orr	r0, r1, r0
   33a7c:	strb	r0, [sp, #10]
   33a80:	b	33af0 <flatcc_json_parser_string_escape@@Base+0x394>
   33a84:	ldrb	r0, [sp, #11]
   33a88:	orr	r0, r0, #32
   33a8c:	strb	r0, [sp, #11]
   33a90:	ldrb	r0, [sp, #11]
   33a94:	cmp	r0, #97	; 0x61
   33a98:	blt	33ac4 <flatcc_json_parser_string_escape@@Base+0x368>
   33a9c:	ldrb	r0, [sp, #11]
   33aa0:	cmp	r0, #102	; 0x66
   33aa4:	bgt	33ac4 <flatcc_json_parser_string_escape@@Base+0x368>
   33aa8:	ldrb	r0, [sp, #11]
   33aac:	sub	r0, r0, #97	; 0x61
   33ab0:	add	r0, r0, #10
   33ab4:	ldrb	r1, [sp, #10]
   33ab8:	orr	r0, r1, r0
   33abc:	strb	r0, [sp, #10]
   33ac0:	b	33aec <flatcc_json_parser_string_escape@@Base+0x390>
   33ac4:	ldr	r0, [sp, #12]
   33ac8:	movw	r1, #0
   33acc:	strb	r1, [r0]
   33ad0:	ldr	r0, [fp, #-8]
   33ad4:	ldr	r1, [fp, #-12]
   33ad8:	ldr	r2, [sp, #16]
   33adc:	movw	r3, #18
   33ae0:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   33ae4:	str	r0, [fp, #-4]
   33ae8:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33aec:	b	33af0 <flatcc_json_parser_string_escape@@Base+0x394>
   33af0:	ldrb	r0, [sp, #10]
   33af4:	ldr	r1, [sp, #12]
   33af8:	strb	r0, [r1, #1]
   33afc:	ldr	r0, [fp, #-12]
   33b00:	add	r0, r0, #4
   33b04:	str	r0, [fp, #-4]
   33b08:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33b0c:	ldr	r0, [sp, #16]
   33b10:	ldr	r1, [fp, #-12]
   33b14:	sub	r0, r0, r1
   33b18:	cmp	r0, #6
   33b1c:	bge	33b48 <flatcc_json_parser_string_escape@@Base+0x3ec>
   33b20:	ldr	r0, [sp, #12]
   33b24:	movw	r1, #0
   33b28:	strb	r1, [r0]
   33b2c:	ldr	r0, [fp, #-8]
   33b30:	ldr	r1, [fp, #-12]
   33b34:	ldr	r2, [sp, #16]
   33b38:	movw	r3, #18
   33b3c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   33b40:	str	r0, [fp, #-4]
   33b44:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33b48:	movw	r0, #0
   33b4c:	strh	r0, [sp, #8]
   33b50:	ldr	r0, [fp, #-12]
   33b54:	ldrb	r0, [r0, #2]
   33b58:	strb	r0, [sp, #11]
   33b5c:	ldrb	r0, [sp, #11]
   33b60:	cmp	r0, #48	; 0x30
   33b64:	blt	33b90 <flatcc_json_parser_string_escape@@Base+0x434>
   33b68:	ldrb	r0, [sp, #11]
   33b6c:	cmp	r0, #57	; 0x39
   33b70:	bgt	33b90 <flatcc_json_parser_string_escape@@Base+0x434>
   33b74:	ldrb	r0, [sp, #11]
   33b78:	sub	r0, r0, #48	; 0x30
   33b7c:	strh	r0, [sp, #6]
   33b80:	ldrh	r0, [sp, #6]
   33b84:	lsl	r0, r0, #12
   33b88:	strh	r0, [sp, #8]
   33b8c:	b	33c08 <flatcc_json_parser_string_escape@@Base+0x4ac>
   33b90:	ldrb	r0, [sp, #11]
   33b94:	orr	r0, r0, #32
   33b98:	strb	r0, [sp, #11]
   33b9c:	ldrb	r0, [sp, #11]
   33ba0:	cmp	r0, #97	; 0x61
   33ba4:	blt	33bdc <flatcc_json_parser_string_escape@@Base+0x480>
   33ba8:	ldrb	r0, [sp, #11]
   33bac:	cmp	r0, #102	; 0x66
   33bb0:	bgt	33bdc <flatcc_json_parser_string_escape@@Base+0x480>
   33bb4:	ldrb	r0, [sp, #11]
   33bb8:	sub	r0, r0, #97	; 0x61
   33bbc:	add	r0, r0, #10
   33bc0:	strh	r0, [sp, #6]
   33bc4:	ldrh	r0, [sp, #6]
   33bc8:	lsl	r0, r0, #12
   33bcc:	ldrh	r1, [sp, #8]
   33bd0:	orr	r0, r1, r0
   33bd4:	strh	r0, [sp, #8]
   33bd8:	b	33c04 <flatcc_json_parser_string_escape@@Base+0x4a8>
   33bdc:	ldr	r0, [sp, #12]
   33be0:	movw	r1, #0
   33be4:	strb	r1, [r0]
   33be8:	ldr	r0, [fp, #-8]
   33bec:	ldr	r1, [fp, #-12]
   33bf0:	ldr	r2, [sp, #16]
   33bf4:	movw	r3, #18
   33bf8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   33bfc:	str	r0, [fp, #-4]
   33c00:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33c04:	b	33c08 <flatcc_json_parser_string_escape@@Base+0x4ac>
   33c08:	ldr	r0, [fp, #-12]
   33c0c:	ldrb	r0, [r0, #3]
   33c10:	strb	r0, [sp, #11]
   33c14:	ldrb	r0, [sp, #11]
   33c18:	cmp	r0, #48	; 0x30
   33c1c:	blt	33c50 <flatcc_json_parser_string_escape@@Base+0x4f4>
   33c20:	ldrb	r0, [sp, #11]
   33c24:	cmp	r0, #57	; 0x39
   33c28:	bgt	33c50 <flatcc_json_parser_string_escape@@Base+0x4f4>
   33c2c:	ldrb	r0, [sp, #11]
   33c30:	sub	r0, r0, #48	; 0x30
   33c34:	strh	r0, [sp, #6]
   33c38:	ldrh	r0, [sp, #6]
   33c3c:	lsl	r0, r0, #8
   33c40:	ldrh	r1, [sp, #8]
   33c44:	orr	r0, r1, r0
   33c48:	strh	r0, [sp, #8]
   33c4c:	b	33cc8 <flatcc_json_parser_string_escape@@Base+0x56c>
   33c50:	ldrb	r0, [sp, #11]
   33c54:	orr	r0, r0, #32
   33c58:	strb	r0, [sp, #11]
   33c5c:	ldrb	r0, [sp, #11]
   33c60:	cmp	r0, #97	; 0x61
   33c64:	blt	33c9c <flatcc_json_parser_string_escape@@Base+0x540>
   33c68:	ldrb	r0, [sp, #11]
   33c6c:	cmp	r0, #102	; 0x66
   33c70:	bgt	33c9c <flatcc_json_parser_string_escape@@Base+0x540>
   33c74:	ldrb	r0, [sp, #11]
   33c78:	sub	r0, r0, #97	; 0x61
   33c7c:	add	r0, r0, #10
   33c80:	strh	r0, [sp, #6]
   33c84:	ldrh	r0, [sp, #6]
   33c88:	lsl	r0, r0, #8
   33c8c:	ldrh	r1, [sp, #8]
   33c90:	orr	r0, r1, r0
   33c94:	strh	r0, [sp, #8]
   33c98:	b	33cc4 <flatcc_json_parser_string_escape@@Base+0x568>
   33c9c:	ldr	r0, [sp, #12]
   33ca0:	movw	r1, #0
   33ca4:	strb	r1, [r0]
   33ca8:	ldr	r0, [fp, #-8]
   33cac:	ldr	r1, [fp, #-12]
   33cb0:	ldr	r2, [sp, #16]
   33cb4:	movw	r3, #18
   33cb8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   33cbc:	str	r0, [fp, #-4]
   33cc0:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33cc4:	b	33cc8 <flatcc_json_parser_string_escape@@Base+0x56c>
   33cc8:	ldr	r0, [fp, #-12]
   33ccc:	ldrb	r0, [r0, #4]
   33cd0:	strb	r0, [sp, #11]
   33cd4:	ldrb	r0, [sp, #11]
   33cd8:	cmp	r0, #48	; 0x30
   33cdc:	blt	33d10 <flatcc_json_parser_string_escape@@Base+0x5b4>
   33ce0:	ldrb	r0, [sp, #11]
   33ce4:	cmp	r0, #57	; 0x39
   33ce8:	bgt	33d10 <flatcc_json_parser_string_escape@@Base+0x5b4>
   33cec:	ldrb	r0, [sp, #11]
   33cf0:	sub	r0, r0, #48	; 0x30
   33cf4:	strh	r0, [sp, #6]
   33cf8:	ldrh	r0, [sp, #6]
   33cfc:	lsl	r0, r0, #4
   33d00:	ldrh	r1, [sp, #8]
   33d04:	orr	r0, r1, r0
   33d08:	strh	r0, [sp, #8]
   33d0c:	b	33d88 <flatcc_json_parser_string_escape@@Base+0x62c>
   33d10:	ldrb	r0, [sp, #11]
   33d14:	orr	r0, r0, #32
   33d18:	strb	r0, [sp, #11]
   33d1c:	ldrb	r0, [sp, #11]
   33d20:	cmp	r0, #97	; 0x61
   33d24:	blt	33d5c <flatcc_json_parser_string_escape@@Base+0x600>
   33d28:	ldrb	r0, [sp, #11]
   33d2c:	cmp	r0, #102	; 0x66
   33d30:	bgt	33d5c <flatcc_json_parser_string_escape@@Base+0x600>
   33d34:	ldrb	r0, [sp, #11]
   33d38:	sub	r0, r0, #97	; 0x61
   33d3c:	add	r0, r0, #10
   33d40:	strh	r0, [sp, #6]
   33d44:	ldrh	r0, [sp, #6]
   33d48:	lsl	r0, r0, #4
   33d4c:	ldrh	r1, [sp, #8]
   33d50:	orr	r0, r1, r0
   33d54:	strh	r0, [sp, #8]
   33d58:	b	33d84 <flatcc_json_parser_string_escape@@Base+0x628>
   33d5c:	ldr	r0, [sp, #12]
   33d60:	movw	r1, #0
   33d64:	strb	r1, [r0]
   33d68:	ldr	r0, [fp, #-8]
   33d6c:	ldr	r1, [fp, #-12]
   33d70:	ldr	r2, [sp, #16]
   33d74:	movw	r3, #18
   33d78:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   33d7c:	str	r0, [fp, #-4]
   33d80:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33d84:	b	33d88 <flatcc_json_parser_string_escape@@Base+0x62c>
   33d88:	ldr	r0, [fp, #-12]
   33d8c:	ldrb	r0, [r0, #5]
   33d90:	strb	r0, [sp, #11]
   33d94:	ldrb	r0, [sp, #11]
   33d98:	cmp	r0, #48	; 0x30
   33d9c:	blt	33dcc <flatcc_json_parser_string_escape@@Base+0x670>
   33da0:	ldrb	r0, [sp, #11]
   33da4:	cmp	r0, #57	; 0x39
   33da8:	bgt	33dcc <flatcc_json_parser_string_escape@@Base+0x670>
   33dac:	ldrb	r0, [sp, #11]
   33db0:	sub	r0, r0, #48	; 0x30
   33db4:	strh	r0, [sp, #6]
   33db8:	ldrh	r0, [sp, #6]
   33dbc:	ldrh	r1, [sp, #8]
   33dc0:	orr	r0, r1, r0
   33dc4:	strh	r0, [sp, #8]
   33dc8:	b	33e40 <flatcc_json_parser_string_escape@@Base+0x6e4>
   33dcc:	ldrb	r0, [sp, #11]
   33dd0:	orr	r0, r0, #32
   33dd4:	strb	r0, [sp, #11]
   33dd8:	ldrb	r0, [sp, #11]
   33ddc:	cmp	r0, #97	; 0x61
   33de0:	blt	33e14 <flatcc_json_parser_string_escape@@Base+0x6b8>
   33de4:	ldrb	r0, [sp, #11]
   33de8:	cmp	r0, #102	; 0x66
   33dec:	bgt	33e14 <flatcc_json_parser_string_escape@@Base+0x6b8>
   33df0:	ldrb	r0, [sp, #11]
   33df4:	sub	r0, r0, #97	; 0x61
   33df8:	add	r0, r0, #10
   33dfc:	strh	r0, [sp, #6]
   33e00:	ldrh	r0, [sp, #6]
   33e04:	ldrh	r1, [sp, #8]
   33e08:	orr	r0, r1, r0
   33e0c:	strh	r0, [sp, #8]
   33e10:	b	33e3c <flatcc_json_parser_string_escape@@Base+0x6e0>
   33e14:	ldr	r0, [sp, #12]
   33e18:	movw	r1, #0
   33e1c:	strb	r1, [r0]
   33e20:	ldr	r0, [fp, #-8]
   33e24:	ldr	r1, [fp, #-12]
   33e28:	ldr	r2, [sp, #16]
   33e2c:	movw	r3, #18
   33e30:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   33e34:	str	r0, [fp, #-4]
   33e38:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33e3c:	b	33e40 <flatcc_json_parser_string_escape@@Base+0x6e4>
   33e40:	ldrh	r0, [sp, #8]
   33e44:	cmp	r0, #127	; 0x7f
   33e48:	bgt	33e68 <flatcc_json_parser_string_escape@@Base+0x70c>
   33e4c:	ldr	r0, [sp, #12]
   33e50:	movw	r1, #1
   33e54:	strb	r1, [r0]
   33e58:	ldrh	r0, [sp, #8]
   33e5c:	ldr	r1, [sp, #12]
   33e60:	strb	r0, [r1, #1]
   33e64:	b	33f00 <flatcc_json_parser_string_escape@@Base+0x7a4>
   33e68:	ldrh	r0, [sp, #8]
   33e6c:	movw	r1, #2047	; 0x7ff
   33e70:	cmp	r0, r1
   33e74:	bgt	33eb0 <flatcc_json_parser_string_escape@@Base+0x754>
   33e78:	ldr	r0, [sp, #12]
   33e7c:	movw	r1, #2
   33e80:	strb	r1, [r0]
   33e84:	ldrh	r0, [sp, #8]
   33e88:	asr	r0, r0, #6
   33e8c:	orr	r0, r0, #192	; 0xc0
   33e90:	ldr	r1, [sp, #12]
   33e94:	strb	r0, [r1, #1]
   33e98:	ldrh	r0, [sp, #8]
   33e9c:	and	r0, r0, #63	; 0x3f
   33ea0:	orr	r0, r0, #128	; 0x80
   33ea4:	ldr	r1, [sp, #12]
   33ea8:	strb	r0, [r1, #2]
   33eac:	b	33efc <flatcc_json_parser_string_escape@@Base+0x7a0>
   33eb0:	ldr	r0, [sp, #12]
   33eb4:	movw	r1, #3
   33eb8:	strb	r1, [r0]
   33ebc:	ldrh	r0, [sp, #8]
   33ec0:	asr	r0, r0, #12
   33ec4:	orr	r0, r0, #224	; 0xe0
   33ec8:	ldr	r1, [sp, #12]
   33ecc:	strb	r0, [r1, #1]
   33ed0:	ldrh	r0, [sp, #8]
   33ed4:	asr	r0, r0, #6
   33ed8:	and	r0, r0, #63	; 0x3f
   33edc:	orr	r0, r0, #128	; 0x80
   33ee0:	ldr	r1, [sp, #12]
   33ee4:	strb	r0, [r1, #2]
   33ee8:	ldrh	r0, [sp, #8]
   33eec:	and	r0, r0, #63	; 0x3f
   33ef0:	orr	r0, r0, #128	; 0x80
   33ef4:	ldr	r1, [sp, #12]
   33ef8:	strb	r0, [r1, #3]
   33efc:	b	33f00 <flatcc_json_parser_string_escape@@Base+0x7a4>
   33f00:	ldr	r0, [fp, #-12]
   33f04:	add	r0, r0, #6
   33f08:	str	r0, [fp, #-4]
   33f0c:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33f10:	ldr	r0, [sp, #12]
   33f14:	movw	r1, #1
   33f18:	strb	r1, [r0]
   33f1c:	ldr	r0, [sp, #12]
   33f20:	movw	r1, #9
   33f24:	strb	r1, [r0, #1]
   33f28:	ldr	r0, [fp, #-12]
   33f2c:	add	r0, r0, #2
   33f30:	str	r0, [fp, #-4]
   33f34:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33f38:	ldr	r0, [sp, #12]
   33f3c:	movw	r1, #1
   33f40:	strb	r1, [r0]
   33f44:	ldr	r0, [sp, #12]
   33f48:	movw	r1, #10
   33f4c:	strb	r1, [r0, #1]
   33f50:	ldr	r0, [fp, #-12]
   33f54:	add	r0, r0, #2
   33f58:	str	r0, [fp, #-4]
   33f5c:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33f60:	ldr	r0, [sp, #12]
   33f64:	movw	r1, #1
   33f68:	strb	r1, [r0]
   33f6c:	ldr	r0, [sp, #12]
   33f70:	movw	r1, #13
   33f74:	strb	r1, [r0, #1]
   33f78:	ldr	r0, [fp, #-12]
   33f7c:	add	r0, r0, #2
   33f80:	str	r0, [fp, #-4]
   33f84:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33f88:	ldr	r0, [sp, #12]
   33f8c:	movw	r1, #1
   33f90:	strb	r1, [r0]
   33f94:	ldr	r0, [sp, #12]
   33f98:	movw	r1, #8
   33f9c:	strb	r1, [r0, #1]
   33fa0:	ldr	r0, [fp, #-12]
   33fa4:	add	r0, r0, #2
   33fa8:	str	r0, [fp, #-4]
   33fac:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33fb0:	ldr	r0, [sp, #12]
   33fb4:	movw	r1, #1
   33fb8:	strb	r1, [r0]
   33fbc:	ldr	r0, [sp, #12]
   33fc0:	movw	r1, #12
   33fc4:	strb	r1, [r0, #1]
   33fc8:	ldr	r0, [fp, #-12]
   33fcc:	add	r0, r0, #2
   33fd0:	str	r0, [fp, #-4]
   33fd4:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   33fd8:	ldr	r0, [sp, #12]
   33fdc:	movw	r1, #1
   33fe0:	strb	r1, [r0]
   33fe4:	ldr	r0, [sp, #12]
   33fe8:	movw	r1, #34	; 0x22
   33fec:	strb	r1, [r0, #1]
   33ff0:	ldr	r0, [fp, #-12]
   33ff4:	add	r0, r0, #2
   33ff8:	str	r0, [fp, #-4]
   33ffc:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   34000:	ldr	r0, [sp, #12]
   34004:	movw	r1, #1
   34008:	strb	r1, [r0]
   3400c:	ldr	r0, [sp, #12]
   34010:	movw	r1, #92	; 0x5c
   34014:	strb	r1, [r0, #1]
   34018:	ldr	r0, [fp, #-12]
   3401c:	add	r0, r0, #2
   34020:	str	r0, [fp, #-4]
   34024:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   34028:	ldr	r0, [sp, #12]
   3402c:	movw	r1, #1
   34030:	strb	r1, [r0]
   34034:	ldr	r0, [sp, #12]
   34038:	movw	r1, #47	; 0x2f
   3403c:	strb	r1, [r0, #1]
   34040:	ldr	r0, [fp, #-12]
   34044:	add	r0, r0, #2
   34048:	str	r0, [fp, #-4]
   3404c:	b	34074 <flatcc_json_parser_string_escape@@Base+0x918>
   34050:	ldr	r0, [sp, #12]
   34054:	movw	r1, #0
   34058:	strb	r1, [r0]
   3405c:	ldr	r0, [fp, #-8]
   34060:	ldr	r1, [fp, #-12]
   34064:	ldr	r2, [sp, #16]
   34068:	movw	r3, #18
   3406c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   34070:	str	r0, [fp, #-4]
   34074:	ldr	r0, [fp, #-4]
   34078:	mov	sp, fp
   3407c:	pop	{fp, pc}

00034080 <flatcc_json_parser_skip_constant@@Base>:
   34080:	push	{fp, lr}
   34084:	mov	fp, sp
   34088:	sub	sp, sp, #24
   3408c:	str	r0, [fp, #-8]
   34090:	str	r1, [sp, #12]
   34094:	str	r2, [sp, #8]
   34098:	ldr	r0, [sp, #12]
   3409c:	ldr	r1, [sp, #8]
   340a0:	cmp	r0, r1
   340a4:	beq	34170 <flatcc_json_parser_skip_constant@@Base+0xf0>
   340a8:	ldr	r0, [sp, #12]
   340ac:	ldrb	r0, [r0]
   340b0:	strb	r0, [sp, #7]
   340b4:	ldrb	r0, [sp, #7]
   340b8:	and	r0, r0, #128	; 0x80
   340bc:	cmp	r0, #0
   340c0:	bne	340f4 <flatcc_json_parser_skip_constant@@Base+0x74>
   340c4:	ldrb	r0, [sp, #7]
   340c8:	cmp	r0, #95	; 0x5f
   340cc:	beq	340f4 <flatcc_json_parser_skip_constant@@Base+0x74>
   340d0:	ldrb	r0, [sp, #7]
   340d4:	cmp	r0, #48	; 0x30
   340d8:	blt	340e8 <flatcc_json_parser_skip_constant@@Base+0x68>
   340dc:	ldrb	r0, [sp, #7]
   340e0:	cmp	r0, #57	; 0x39
   340e4:	ble	340f4 <flatcc_json_parser_skip_constant@@Base+0x74>
   340e8:	ldrb	r0, [sp, #7]
   340ec:	cmp	r0, #46	; 0x2e
   340f0:	bne	34104 <flatcc_json_parser_skip_constant@@Base+0x84>
   340f4:	ldr	r0, [sp, #12]
   340f8:	add	r0, r0, #1
   340fc:	str	r0, [sp, #12]
   34100:	b	34098 <flatcc_json_parser_skip_constant@@Base+0x18>
   34104:	ldrb	r0, [sp, #7]
   34108:	orr	r0, r0, #32
   3410c:	strb	r0, [sp, #7]
   34110:	ldrb	r0, [sp, #7]
   34114:	cmp	r0, #97	; 0x61
   34118:	blt	34138 <flatcc_json_parser_skip_constant@@Base+0xb8>
   3411c:	ldrb	r0, [sp, #7]
   34120:	cmp	r0, #122	; 0x7a
   34124:	bgt	34138 <flatcc_json_parser_skip_constant@@Base+0xb8>
   34128:	ldr	r0, [sp, #12]
   3412c:	add	r0, r0, #1
   34130:	str	r0, [sp, #12]
   34134:	b	34098 <flatcc_json_parser_skip_constant@@Base+0x18>
   34138:	ldr	r0, [fp, #-8]
   3413c:	ldr	r1, [sp, #12]
   34140:	str	r1, [sp]
   34144:	ldr	r2, [sp, #8]
   34148:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   3414c:	str	r0, [sp, #12]
   34150:	ldr	r0, [sp, #12]
   34154:	ldr	r1, [sp]
   34158:	cmp	r0, r1
   3415c:	bne	3416c <flatcc_json_parser_skip_constant@@Base+0xec>
   34160:	ldr	r0, [sp, #12]
   34164:	str	r0, [fp, #-4]
   34168:	b	34178 <flatcc_json_parser_skip_constant@@Base+0xf8>
   3416c:	b	34098 <flatcc_json_parser_skip_constant@@Base+0x18>
   34170:	ldr	r0, [sp, #12]
   34174:	str	r0, [fp, #-4]
   34178:	ldr	r0, [fp, #-4]
   3417c:	mov	sp, fp
   34180:	pop	{fp, pc}
   34184:	push	{fp, lr}
   34188:	mov	fp, sp
   3418c:	sub	sp, sp, #16
   34190:	str	r0, [sp, #8]
   34194:	str	r1, [sp, #4]
   34198:	str	r2, [sp]
   3419c:	ldr	r0, [sp]
   341a0:	ldr	r1, [sp, #4]
   341a4:	sub	r0, r0, r1
   341a8:	cmp	r0, #1
   341ac:	ble	34200 <flatcc_json_parser_skip_constant@@Base+0x180>
   341b0:	ldr	r0, [sp, #4]
   341b4:	ldrb	r0, [r0]
   341b8:	cmp	r0, #32
   341bc:	ble	341cc <flatcc_json_parser_skip_constant@@Base+0x14c>
   341c0:	ldr	r0, [sp, #4]
   341c4:	str	r0, [fp, #-4]
   341c8:	b	34214 <flatcc_json_parser_skip_constant@@Base+0x194>
   341cc:	ldr	r0, [sp, #4]
   341d0:	ldrb	r0, [r0]
   341d4:	cmp	r0, #32
   341d8:	bne	341fc <flatcc_json_parser_skip_constant@@Base+0x17c>
   341dc:	ldr	r0, [sp, #4]
   341e0:	ldrb	r0, [r0, #1]
   341e4:	cmp	r0, #32
   341e8:	ble	341fc <flatcc_json_parser_skip_constant@@Base+0x17c>
   341ec:	ldr	r0, [sp, #4]
   341f0:	add	r0, r0, #1
   341f4:	str	r0, [fp, #-4]
   341f8:	b	34214 <flatcc_json_parser_skip_constant@@Base+0x194>
   341fc:	b	34200 <flatcc_json_parser_skip_constant@@Base+0x180>
   34200:	ldr	r0, [sp, #8]
   34204:	ldr	r1, [sp, #4]
   34208:	ldr	r2, [sp]
   3420c:	bl	33578 <flatcc_json_parser_space_ext@@Base>
   34210:	str	r0, [fp, #-4]
   34214:	ldr	r0, [fp, #-4]
   34218:	mov	sp, fp
   3421c:	pop	{fp, pc}

00034220 <flatcc_json_parser_match_constant@@Base>:
   34220:	push	{fp, lr}
   34224:	mov	fp, sp
   34228:	sub	sp, sp, #40	; 0x28
   3422c:	ldr	ip, [fp, #8]
   34230:	str	r0, [fp, #-8]
   34234:	str	r1, [fp, #-12]
   34238:	str	r2, [fp, #-16]
   3423c:	str	r3, [sp, #20]
   34240:	ldr	r0, [fp, #-12]
   34244:	str	r0, [sp, #16]
   34248:	ldr	r0, [fp, #-12]
   3424c:	ldr	r1, [sp, #20]
   34250:	add	r0, r0, r1
   34254:	str	r0, [sp, #12]
   34258:	ldr	r0, [fp, #-16]
   3425c:	ldr	r1, [fp, #-12]
   34260:	sub	r0, r0, r1
   34264:	ldr	r1, [sp, #20]
   34268:	cmp	r0, r1
   3426c:	str	ip, [sp, #8]
   34270:	bgt	3428c <flatcc_json_parser_match_constant@@Base+0x6c>
   34274:	ldr	r0, [fp, #8]
   34278:	movw	r1, #0
   3427c:	str	r1, [r0]
   34280:	ldr	r0, [fp, #-12]
   34284:	str	r0, [fp, #-4]
   34288:	b	343e8 <flatcc_json_parser_match_constant@@Base+0x1c8>
   3428c:	ldr	r0, [sp, #12]
   34290:	str	r0, [fp, #-12]
   34294:	ldr	r0, [fp, #-12]
   34298:	ldrb	r0, [r0]
   3429c:	cmp	r0, #32
   342a0:	bne	34350 <flatcc_json_parser_match_constant@@Base+0x130>
   342a4:	ldr	r0, [fp, #-12]
   342a8:	add	r0, r0, #1
   342ac:	str	r0, [fp, #-12]
   342b0:	ldr	r0, [fp, #-12]
   342b4:	ldr	r1, [fp, #-16]
   342b8:	cmp	r0, r1
   342bc:	movw	r0, #0
   342c0:	str	r0, [sp, #4]
   342c4:	beq	342e0 <flatcc_json_parser_match_constant@@Base+0xc0>
   342c8:	ldr	r0, [fp, #-12]
   342cc:	ldrb	r0, [r0]
   342d0:	cmp	r0, #32
   342d4:	movw	r0, #0
   342d8:	moveq	r0, #1
   342dc:	str	r0, [sp, #4]
   342e0:	ldr	r0, [sp, #4]
   342e4:	tst	r0, #1
   342e8:	beq	342fc <flatcc_json_parser_match_constant@@Base+0xdc>
   342ec:	ldr	r0, [fp, #-12]
   342f0:	add	r0, r0, #1
   342f4:	str	r0, [fp, #-12]
   342f8:	b	342b0 <flatcc_json_parser_match_constant@@Base+0x90>
   342fc:	ldr	r0, [fp, #-12]
   34300:	ldr	r1, [fp, #-16]
   34304:	cmp	r0, r1
   34308:	bne	34324 <flatcc_json_parser_match_constant@@Base+0x104>
   3430c:	ldr	r0, [fp, #8]
   34310:	movw	r1, #0
   34314:	str	r1, [r0]
   34318:	ldr	r0, [fp, #-12]
   3431c:	str	r0, [fp, #-4]
   34320:	b	343e8 <flatcc_json_parser_match_constant@@Base+0x1c8>
   34324:	ldr	r0, [fp, #-12]
   34328:	ldrb	r0, [r0]
   3432c:	cmp	r0, #34	; 0x22
   34330:	beq	3434c <flatcc_json_parser_match_constant@@Base+0x12c>
   34334:	ldr	r0, [fp, #8]
   34338:	movw	r1, #1
   3433c:	str	r1, [r0]
   34340:	ldr	r0, [fp, #-12]
   34344:	str	r0, [fp, #-4]
   34348:	b	343e8 <flatcc_json_parser_match_constant@@Base+0x1c8>
   3434c:	b	34350 <flatcc_json_parser_match_constant@@Base+0x130>
   34350:	ldr	r0, [fp, #-12]
   34354:	ldrb	r0, [r0]
   34358:	mov	r1, r0
   3435c:	cmp	r0, #34	; 0x22
   34360:	str	r1, [sp]
   34364:	beq	343a4 <flatcc_json_parser_match_constant@@Base+0x184>
   34368:	b	3436c <flatcc_json_parser_match_constant@@Base+0x14c>
   3436c:	ldr	r0, [sp]
   34370:	cmp	r0, #92	; 0x5c
   34374:	bne	343d4 <flatcc_json_parser_match_constant@@Base+0x1b4>
   34378:	b	3437c <flatcc_json_parser_match_constant@@Base+0x15c>
   3437c:	ldr	r0, [fp, #8]
   34380:	movw	r1, #0
   34384:	str	r1, [r0]
   34388:	ldr	r0, [fp, #-8]
   3438c:	ldr	r1, [fp, #-12]
   34390:	ldr	r2, [fp, #-16]
   34394:	movw	r3, #18
   34398:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   3439c:	str	r0, [fp, #-4]
   343a0:	b	343e8 <flatcc_json_parser_match_constant@@Base+0x1c8>
   343a4:	ldr	r0, [fp, #-8]
   343a8:	ldr	r1, [fp, #-12]
   343ac:	add	r1, r1, #1
   343b0:	movw	r2, #0
   343b4:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   343b8:	str	r0, [fp, #-12]
   343bc:	ldr	r0, [fp, #8]
   343c0:	movw	r1, #0
   343c4:	str	r1, [r0]
   343c8:	ldr	r0, [fp, #-12]
   343cc:	str	r0, [fp, #-4]
   343d0:	b	343e8 <flatcc_json_parser_match_constant@@Base+0x1c8>
   343d4:	ldr	r0, [fp, #8]
   343d8:	movw	r1, #0
   343dc:	str	r1, [r0]
   343e0:	ldr	r0, [sp, #16]
   343e4:	str	r0, [fp, #-4]
   343e8:	ldr	r0, [fp, #-4]
   343ec:	mov	sp, fp
   343f0:	pop	{fp, pc}

000343f4 <flatcc_json_parser_unmatched_symbol@@Base>:
   343f4:	push	{fp, lr}
   343f8:	mov	fp, sp
   343fc:	sub	sp, sp, #16
   34400:	str	r0, [sp, #8]
   34404:	str	r1, [sp, #4]
   34408:	str	r2, [sp]
   3440c:	ldr	r0, [sp, #8]
   34410:	ldr	r0, [r0, #8]
   34414:	and	r0, r0, #1
   34418:	cmp	r0, #0
   3441c:	beq	344c0 <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   34420:	ldr	r0, [sp, #8]
   34424:	ldr	r1, [sp, #4]
   34428:	ldr	r2, [sp]
   3442c:	bl	344e4 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   34430:	str	r0, [sp, #4]
   34434:	ldr	r0, [sp, #8]
   34438:	ldr	r1, [sp, #4]
   3443c:	ldr	r2, [sp]
   34440:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   34444:	str	r0, [sp, #4]
   34448:	ldr	r0, [sp, #4]
   3444c:	ldr	r1, [sp]
   34450:	cmp	r0, r1
   34454:	beq	3448c <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   34458:	ldr	r0, [sp, #4]
   3445c:	ldrb	r0, [r0]
   34460:	cmp	r0, #58	; 0x3a
   34464:	bne	3448c <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   34468:	ldr	r0, [sp, #4]
   3446c:	add	r0, r0, #1
   34470:	str	r0, [sp, #4]
   34474:	ldr	r0, [sp, #8]
   34478:	ldr	r1, [sp, #4]
   3447c:	ldr	r2, [sp]
   34480:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   34484:	str	r0, [sp, #4]
   34488:	b	344a8 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   3448c:	ldr	r0, [sp, #8]
   34490:	ldr	r1, [sp, #4]
   34494:	ldr	r2, [sp]
   34498:	movw	r3, #4
   3449c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   344a0:	str	r0, [fp, #-4]
   344a4:	b	344d8 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   344a8:	ldr	r0, [sp, #8]
   344ac:	ldr	r1, [sp, #4]
   344b0:	ldr	r2, [sp]
   344b4:	bl	345e0 <flatcc_json_parser_generic_json@@Base>
   344b8:	str	r0, [fp, #-4]
   344bc:	b	344d8 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   344c0:	ldr	r0, [sp, #8]
   344c4:	ldr	r1, [sp, #4]
   344c8:	ldr	r2, [sp]
   344cc:	movw	r3, #13
   344d0:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   344d4:	str	r0, [fp, #-4]
   344d8:	ldr	r0, [fp, #-4]
   344dc:	mov	sp, fp
   344e0:	pop	{fp, pc}
   344e4:	push	{fp, lr}
   344e8:	mov	fp, sp
   344ec:	sub	sp, sp, #24
   344f0:	str	r0, [fp, #-8]
   344f4:	str	r1, [sp, #12]
   344f8:	str	r2, [sp, #8]
   344fc:	movw	r0, #0
   34500:	strb	r0, [sp, #6]
   34504:	ldr	r0, [sp, #12]
   34508:	ldr	r1, [sp, #8]
   3450c:	cmp	r0, r1
   34510:	movw	r0, #0
   34514:	str	r0, [sp]
   34518:	beq	34534 <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   3451c:	ldr	r0, [sp, #12]
   34520:	ldrb	r0, [r0]
   34524:	cmp	r0, #34	; 0x22
   34528:	movw	r0, #0
   3452c:	movne	r0, #1
   34530:	str	r0, [sp]
   34534:	ldr	r0, [sp]
   34538:	tst	r0, #1
   3453c:	beq	34584 <flatcc_json_parser_unmatched_symbol@@Base+0x190>
   34540:	ldr	r0, [sp, #12]
   34544:	ldrb	r0, [r0]
   34548:	cmp	r0, #92	; 0x5c
   3454c:	bne	34574 <flatcc_json_parser_unmatched_symbol@@Base+0x180>
   34550:	ldr	r0, [sp, #8]
   34554:	ldr	r1, [sp, #12]
   34558:	sub	r0, r0, r1
   3455c:	cmp	r0, #2
   34560:	bge	34568 <flatcc_json_parser_unmatched_symbol@@Base+0x174>
   34564:	b	34584 <flatcc_json_parser_unmatched_symbol@@Base+0x190>
   34568:	ldr	r0, [sp, #12]
   3456c:	add	r0, r0, #1
   34570:	str	r0, [sp, #12]
   34574:	ldr	r0, [sp, #12]
   34578:	add	r0, r0, #1
   3457c:	str	r0, [sp, #12]
   34580:	b	34504 <flatcc_json_parser_unmatched_symbol@@Base+0x110>
   34584:	ldr	r0, [sp, #12]
   34588:	ldr	r1, [sp, #8]
   3458c:	cmp	r0, r1
   34590:	beq	345a4 <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
   34594:	ldr	r0, [sp, #12]
   34598:	ldrb	r0, [r0]
   3459c:	cmp	r0, #34	; 0x22
   345a0:	beq	345c0 <flatcc_json_parser_unmatched_symbol@@Base+0x1cc>
   345a4:	ldr	r0, [fp, #-8]
   345a8:	ldr	r1, [sp, #12]
   345ac:	ldr	r2, [sp, #8]
   345b0:	movw	r3, #20
   345b4:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   345b8:	str	r0, [fp, #-4]
   345bc:	b	345d4 <flatcc_json_parser_unmatched_symbol@@Base+0x1e0>
   345c0:	ldr	r0, [sp, #12]
   345c4:	add	r0, r0, #1
   345c8:	str	r0, [sp, #12]
   345cc:	ldr	r0, [sp, #12]
   345d0:	str	r0, [fp, #-4]
   345d4:	ldr	r0, [fp, #-4]
   345d8:	mov	sp, fp
   345dc:	pop	{fp, pc}

000345e0 <flatcc_json_parser_generic_json@@Base>:
   345e0:	push	{r4, r5, fp, lr}
   345e4:	add	fp, sp, #8
   345e8:	sub	sp, sp, #568	; 0x238
   345ec:	add	r3, sp, #40	; 0x28
   345f0:	str	r0, [fp, #-16]
   345f4:	str	r1, [fp, #-20]	; 0xffffffec
   345f8:	str	r2, [fp, #-24]	; 0xffffffe8
   345fc:	movw	r0, #0
   34600:	str	r0, [sp, #20]
   34604:	str	r3, [sp, #36]	; 0x24
   34608:	ldr	r0, [sp, #36]	; 0x24
   3460c:	add	r0, r0, #512	; 0x200
   34610:	str	r0, [sp, #32]
   34614:	ldr	r0, [fp, #-20]	; 0xffffffec
   34618:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3461c:	cmp	r0, r1
   34620:	bne	34630 <flatcc_json_parser_generic_json@@Base+0x50>
   34624:	ldr	r0, [fp, #-20]	; 0xffffffec
   34628:	str	r0, [fp, #-12]
   3462c:	b	34c30 <flatcc_json_parser_generic_json@@Base+0x650>
   34630:	add	r0, sp, #40	; 0x28
   34634:	ldr	r1, [sp, #36]	; 0x24
   34638:	cmp	r1, r0
   3463c:	beq	34704 <flatcc_json_parser_generic_json@@Base+0x124>
   34640:	ldr	r0, [sp, #36]	; 0x24
   34644:	mvn	r1, #0
   34648:	add	r0, r0, r1
   3464c:	ldrb	r0, [r0]
   34650:	cmp	r0, #125	; 0x7d
   34654:	bne	34704 <flatcc_json_parser_generic_json@@Base+0x124>
   34658:	ldr	r0, [fp, #-16]
   3465c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34660:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34664:	bl	35054 <flatcc_json_parser_float@@Base+0x254>
   34668:	str	r0, [fp, #-20]	; 0xffffffec
   3466c:	ldr	r0, [fp, #-16]
   34670:	ldr	r1, [fp, #-20]	; 0xffffffec
   34674:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34678:	bl	344e4 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   3467c:	str	r0, [fp, #-20]	; 0xffffffec
   34680:	ldr	r0, [fp, #-16]
   34684:	ldr	r1, [fp, #-20]	; 0xffffffec
   34688:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3468c:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   34690:	str	r0, [fp, #-20]	; 0xffffffec
   34694:	ldr	r0, [fp, #-20]	; 0xffffffec
   34698:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3469c:	cmp	r0, r1
   346a0:	bne	346c0 <flatcc_json_parser_generic_json@@Base+0xe0>
   346a4:	ldr	r0, [fp, #-16]
   346a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   346ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   346b0:	movw	r3, #10
   346b4:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   346b8:	str	r0, [fp, #-12]
   346bc:	b	34c30 <flatcc_json_parser_generic_json@@Base+0x650>
   346c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   346c4:	ldrb	r0, [r0]
   346c8:	cmp	r0, #58	; 0x3a
   346cc:	beq	346ec <flatcc_json_parser_generic_json@@Base+0x10c>
   346d0:	ldr	r0, [fp, #-16]
   346d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   346d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   346dc:	movw	r3, #4
   346e0:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   346e4:	str	r0, [fp, #-12]
   346e8:	b	34c30 <flatcc_json_parser_generic_json@@Base+0x650>
   346ec:	ldr	r0, [fp, #-16]
   346f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   346f4:	add	r1, r1, #1
   346f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   346fc:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   34700:	str	r0, [fp, #-20]	; 0xffffffec
   34704:	ldr	r0, [fp, #-20]	; 0xffffffec
   34708:	ldrb	r0, [r0]
   3470c:	sub	r0, r0, #34	; 0x22
   34710:	cmp	r0, #89	; 0x59
   34714:	str	r0, [sp, #12]
   34718:	bhi	34af8 <flatcc_json_parser_generic_json@@Base+0x518>
   3471c:	add	r0, pc, #8
   34720:	ldr	r1, [sp, #12]
   34724:	ldr	r2, [r0, r1, lsl #2]
   34728:	add	pc, r0, r2
   3472c:	andeq	r0, r0, r8, ror #2
   34730:	andeq	r0, r0, ip, asr #7
   34734:	andeq	r0, r0, ip, asr #7
   34738:	andeq	r0, r0, ip, asr #7
   3473c:	andeq	r0, r0, ip, asr #7
   34740:	andeq	r0, r0, ip, asr #7
   34744:	andeq	r0, r0, ip, asr #7
   34748:	andeq	r0, r0, ip, asr #7
   3474c:	andeq	r0, r0, ip, asr #7
   34750:	andeq	r0, r0, ip, asr #7
   34754:	andeq	r0, r0, ip, asr #7
   34758:	andeq	r0, r0, r4, lsr #4
   3475c:	andeq	r0, r0, ip, asr #7
   34760:	andeq	r0, r0, ip, asr #7
   34764:	andeq	r0, r0, r4, lsr #4
   34768:	andeq	r0, r0, r4, lsr #4
   3476c:	andeq	r0, r0, r4, lsr #4
   34770:	andeq	r0, r0, r4, lsr #4
   34774:	andeq	r0, r0, r4, lsr #4
   34778:	andeq	r0, r0, r4, lsr #4
   3477c:	andeq	r0, r0, r4, lsr #4
   34780:	andeq	r0, r0, r4, lsr #4
   34784:	andeq	r0, r0, r4, lsr #4
   34788:	andeq	r0, r0, r4, lsr #4
   3478c:	andeq	r0, r0, ip, asr #7
   34790:	andeq	r0, r0, ip, asr #7
   34794:	andeq	r0, r0, ip, asr #7
   34798:	andeq	r0, r0, ip, asr #7
   3479c:	andeq	r0, r0, ip, asr #7
   347a0:	andeq	r0, r0, ip, asr #7
   347a4:	andeq	r0, r0, ip, asr #7
   347a8:	andeq	r0, r0, ip, asr #7
   347ac:	andeq	r0, r0, ip, asr #7
   347b0:	andeq	r0, r0, ip, asr #7
   347b4:	andeq	r0, r0, ip, asr #7
   347b8:	andeq	r0, r0, ip, asr #7
   347bc:	andeq	r0, r0, ip, asr #7
   347c0:	andeq	r0, r0, ip, asr #7
   347c4:	andeq	r0, r0, ip, asr #7
   347c8:	andeq	r0, r0, ip, asr #7
   347cc:	andeq	r0, r0, ip, asr #7
   347d0:	andeq	r0, r0, ip, asr #7
   347d4:	andeq	r0, r0, ip, asr #7
   347d8:	andeq	r0, r0, ip, asr #7
   347dc:	andeq	r0, r0, ip, asr #7
   347e0:	andeq	r0, r0, ip, asr #7
   347e4:	andeq	r0, r0, ip, asr #7
   347e8:	andeq	r0, r0, ip, asr #7
   347ec:	andeq	r0, r0, ip, asr #7
   347f0:	andeq	r0, r0, ip, asr #7
   347f4:	andeq	r0, r0, ip, asr #7
   347f8:	andeq	r0, r0, ip, asr #7
   347fc:	andeq	r0, r0, ip, asr #7
   34800:	andeq	r0, r0, ip, asr #7
   34804:	andeq	r0, r0, ip, asr #7
   34808:	andeq	r0, r0, ip, asr #7
   3480c:	andeq	r0, r0, ip, asr #7
   34810:	andeq	r0, r0, ip, asr #5
   34814:	andeq	r0, r0, ip, asr #7
   34818:	andeq	r0, r0, ip, asr #7
   3481c:	andeq	r0, r0, ip, asr #7
   34820:	andeq	r0, r0, ip, asr #7
   34824:	andeq	r0, r0, ip, asr #7
   34828:	andeq	r0, r0, ip, asr #7
   3482c:	andeq	r0, r0, ip, asr #7
   34830:	andeq	r0, r0, ip, asr #7
   34834:	andeq	r0, r0, ip, asr #7
   34838:	andeq	r0, r0, ip, asr #7
   3483c:	andeq	r0, r0, ip, lsr r2
   34840:	andeq	r0, r0, ip, asr #7
   34844:	andeq	r0, r0, ip, asr #7
   34848:	andeq	r0, r0, ip, asr #7
   3484c:	andeq	r0, r0, ip, asr #7
   34850:	andeq	r0, r0, ip, asr #7
   34854:	andeq	r0, r0, ip, asr #7
   34858:	andeq	r0, r0, ip, asr #7
   3485c:	andeq	r0, r0, r8, lsl #5
   34860:	andeq	r0, r0, ip, asr #7
   34864:	andeq	r0, r0, ip, asr #7
   34868:	andeq	r0, r0, ip, asr #7
   3486c:	andeq	r0, r0, ip, asr #7
   34870:	andeq	r0, r0, ip, asr #7
   34874:	andeq	r0, r0, ip, lsr r2
   34878:	andeq	r0, r0, ip, asr #7
   3487c:	andeq	r0, r0, ip, asr #7
   34880:	andeq	r0, r0, ip, asr #7
   34884:	andeq	r0, r0, ip, asr #7
   34888:	andeq	r0, r0, ip, asr #7
   3488c:	andeq	r0, r0, ip, asr #7
   34890:	andeq	r0, r0, ip, asr #6
   34894:	ldr	r0, [fp, #-16]
   34898:	ldr	r1, [fp, #-20]	; 0xffffffec
   3489c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   348a0:	bl	350d8 <flatcc_json_parser_float@@Base+0x2d8>
   348a4:	str	r0, [fp, #-20]	; 0xffffffec
   348a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   348ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   348b0:	cmp	r0, r1
   348b4:	movw	r0, #0
   348b8:	str	r0, [sp, #8]
   348bc:	beq	348d8 <flatcc_json_parser_generic_json@@Base+0x2f8>
   348c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   348c4:	ldrb	r0, [r0]
   348c8:	cmp	r0, #34	; 0x22
   348cc:	movw	r0, #0
   348d0:	movne	r0, #1
   348d4:	str	r0, [sp, #8]
   348d8:	ldr	r0, [sp, #8]
   348dc:	tst	r0, #1
   348e0:	beq	34938 <flatcc_json_parser_generic_json@@Base+0x358>
   348e4:	ldr	r0, [fp, #-16]
   348e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   348ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   348f0:	bl	3345c <flatcc_json_parser_string_part@@Base>
   348f4:	str	r0, [fp, #-20]	; 0xffffffec
   348f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   348fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34900:	cmp	r0, r1
   34904:	beq	3491c <flatcc_json_parser_generic_json@@Base+0x33c>
   34908:	ldr	r0, [fp, #-20]	; 0xffffffec
   3490c:	ldrb	r0, [r0]
   34910:	cmp	r0, #34	; 0x22
   34914:	bne	3491c <flatcc_json_parser_generic_json@@Base+0x33c>
   34918:	b	34938 <flatcc_json_parser_generic_json@@Base+0x358>
   3491c:	add	r3, sp, #24
   34920:	ldr	r0, [fp, #-16]
   34924:	ldr	r1, [fp, #-20]	; 0xffffffec
   34928:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3492c:	bl	3375c <flatcc_json_parser_string_escape@@Base>
   34930:	str	r0, [fp, #-20]	; 0xffffffec
   34934:	b	348a8 <flatcc_json_parser_generic_json@@Base+0x2c8>
   34938:	ldr	r0, [fp, #-16]
   3493c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34940:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34944:	bl	35148 <flatcc_json_parser_float@@Base+0x348>
   34948:	str	r0, [fp, #-20]	; 0xffffffec
   3494c:	b	34b14 <flatcc_json_parser_generic_json@@Base+0x534>
   34950:	ldr	r0, [fp, #-16]
   34954:	ldr	r1, [fp, #-20]	; 0xffffffec
   34958:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3495c:	bl	351b8 <flatcc_json_parser_float@@Base+0x3b8>
   34960:	str	r0, [fp, #-20]	; 0xffffffec
   34964:	b	34b14 <flatcc_json_parser_generic_json@@Base+0x534>
   34968:	ldr	r0, [fp, #-16]
   3496c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34970:	str	r1, [sp, #28]
   34974:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34978:	add	r3, sp, #19
   3497c:	bl	355fc <flatcc_json_parser_float@@Base+0x7fc>
   34980:	str	r0, [fp, #-20]	; 0xffffffec
   34984:	ldr	r0, [sp, #28]
   34988:	ldr	r1, [fp, #-20]	; 0xffffffec
   3498c:	cmp	r0, r1
   34990:	bne	349b0 <flatcc_json_parser_generic_json@@Base+0x3d0>
   34994:	ldr	r0, [fp, #-16]
   34998:	ldr	r1, [fp, #-20]	; 0xffffffec
   3499c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   349a0:	movw	r3, #5
   349a4:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   349a8:	str	r0, [fp, #-12]
   349ac:	b	34c30 <flatcc_json_parser_generic_json@@Base+0x650>
   349b0:	b	34b14 <flatcc_json_parser_generic_json@@Base+0x534>
   349b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   349b8:	str	r0, [sp, #28]
   349bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   349c0:	bl	35724 <flatcc_json_parser_float@@Base+0x924>
   349c4:	str	r0, [fp, #-20]	; 0xffffffec
   349c8:	ldr	r0, [sp, #28]
   349cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   349d0:	cmp	r0, r1
   349d4:	bne	349f4 <flatcc_json_parser_generic_json@@Base+0x414>
   349d8:	ldr	r0, [fp, #-16]
   349dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   349e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   349e4:	movw	r3, #5
   349e8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   349ec:	str	r0, [fp, #-12]
   349f0:	b	34c30 <flatcc_json_parser_generic_json@@Base+0x650>
   349f4:	b	34b14 <flatcc_json_parser_generic_json@@Base+0x534>
   349f8:	ldr	r0, [sp, #36]	; 0x24
   349fc:	ldr	r1, [sp, #32]
   34a00:	cmp	r0, r1
   34a04:	bne	34a24 <flatcc_json_parser_generic_json@@Base+0x444>
   34a08:	ldr	r0, [fp, #-16]
   34a0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34a10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34a14:	movw	r3, #2
   34a18:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   34a1c:	str	r0, [fp, #-12]
   34a20:	b	34c30 <flatcc_json_parser_generic_json@@Base+0x650>
   34a24:	ldr	r0, [sp, #36]	; 0x24
   34a28:	add	r1, r0, #1
   34a2c:	str	r1, [sp, #36]	; 0x24
   34a30:	movw	r1, #93	; 0x5d
   34a34:	strb	r1, [r0]
   34a38:	ldr	r0, [fp, #-16]
   34a3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34a40:	add	r1, r1, #1
   34a44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34a48:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   34a4c:	str	r0, [fp, #-20]	; 0xffffffec
   34a50:	ldr	r0, [fp, #-20]	; 0xffffffec
   34a54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34a58:	cmp	r0, r1
   34a5c:	beq	34a74 <flatcc_json_parser_generic_json@@Base+0x494>
   34a60:	ldr	r0, [fp, #-20]	; 0xffffffec
   34a64:	ldrb	r0, [r0]
   34a68:	cmp	r0, #93	; 0x5d
   34a6c:	bne	34a74 <flatcc_json_parser_generic_json@@Base+0x494>
   34a70:	b	34b14 <flatcc_json_parser_generic_json@@Base+0x534>
   34a74:	b	34614 <flatcc_json_parser_generic_json@@Base+0x34>
   34a78:	ldr	r0, [sp, #36]	; 0x24
   34a7c:	ldr	r1, [sp, #32]
   34a80:	cmp	r0, r1
   34a84:	bne	34aa4 <flatcc_json_parser_generic_json@@Base+0x4c4>
   34a88:	ldr	r0, [fp, #-16]
   34a8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34a90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34a94:	movw	r3, #2
   34a98:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   34a9c:	str	r0, [fp, #-12]
   34aa0:	b	34c30 <flatcc_json_parser_generic_json@@Base+0x650>
   34aa4:	ldr	r0, [sp, #36]	; 0x24
   34aa8:	add	r1, r0, #1
   34aac:	str	r1, [sp, #36]	; 0x24
   34ab0:	movw	r1, #125	; 0x7d
   34ab4:	strb	r1, [r0]
   34ab8:	ldr	r0, [fp, #-16]
   34abc:	ldr	r1, [fp, #-20]	; 0xffffffec
   34ac0:	add	r1, r1, #1
   34ac4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34ac8:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   34acc:	str	r0, [fp, #-20]	; 0xffffffec
   34ad0:	ldr	r0, [fp, #-20]	; 0xffffffec
   34ad4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34ad8:	cmp	r0, r1
   34adc:	beq	34af4 <flatcc_json_parser_generic_json@@Base+0x514>
   34ae0:	ldr	r0, [fp, #-20]	; 0xffffffec
   34ae4:	ldrb	r0, [r0]
   34ae8:	cmp	r0, #125	; 0x7d
   34aec:	bne	34af4 <flatcc_json_parser_generic_json@@Base+0x514>
   34af0:	b	34b14 <flatcc_json_parser_generic_json@@Base+0x534>
   34af4:	b	34614 <flatcc_json_parser_generic_json@@Base+0x34>
   34af8:	ldr	r0, [fp, #-16]
   34afc:	ldr	r1, [fp, #-20]	; 0xffffffec
   34b00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34b04:	movw	r3, #5
   34b08:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   34b0c:	str	r0, [fp, #-12]
   34b10:	b	34c30 <flatcc_json_parser_generic_json@@Base+0x650>
   34b14:	b	34b18 <flatcc_json_parser_generic_json@@Base+0x538>
   34b18:	ldr	r0, [fp, #-20]	; 0xffffffec
   34b1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34b20:	cmp	r0, r1
   34b24:	movw	r0, #0
   34b28:	str	r0, [sp, #4]
   34b2c:	beq	34b48 <flatcc_json_parser_generic_json@@Base+0x568>
   34b30:	add	r0, sp, #40	; 0x28
   34b34:	ldr	r1, [sp, #36]	; 0x24
   34b38:	cmp	r1, r0
   34b3c:	movw	r0, #0
   34b40:	movne	r0, #1
   34b44:	str	r0, [sp, #4]
   34b48:	ldr	r0, [sp, #4]
   34b4c:	tst	r0, #1
   34b50:	beq	34bc8 <flatcc_json_parser_generic_json@@Base+0x5e8>
   34b54:	ldr	r0, [sp, #36]	; 0x24
   34b58:	mvn	r1, #0
   34b5c:	add	r0, r0, r1
   34b60:	str	r0, [sp, #36]	; 0x24
   34b64:	ldr	r0, [sp, #36]	; 0x24
   34b68:	ldrb	r0, [r0]
   34b6c:	cmp	r0, #93	; 0x5d
   34b70:	bne	34b90 <flatcc_json_parser_generic_json@@Base+0x5b0>
   34b74:	ldr	r0, [fp, #-16]
   34b78:	ldr	r1, [fp, #-20]	; 0xffffffec
   34b7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34b80:	add	r3, sp, #20
   34b84:	bl	35794 <flatcc_json_parser_float@@Base+0x994>
   34b88:	str	r0, [fp, #-20]	; 0xffffffec
   34b8c:	b	34ba8 <flatcc_json_parser_generic_json@@Base+0x5c8>
   34b90:	ldr	r0, [fp, #-16]
   34b94:	ldr	r1, [fp, #-20]	; 0xffffffec
   34b98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34b9c:	add	r3, sp, #20
   34ba0:	bl	358f8 <flatcc_json_parser_float@@Base+0xaf8>
   34ba4:	str	r0, [fp, #-20]	; 0xffffffec
   34ba8:	ldr	r0, [sp, #20]
   34bac:	cmp	r0, #0
   34bb0:	beq	34bc4 <flatcc_json_parser_generic_json@@Base+0x5e4>
   34bb4:	ldr	r0, [sp, #36]	; 0x24
   34bb8:	add	r0, r0, #1
   34bbc:	str	r0, [sp, #36]	; 0x24
   34bc0:	b	34614 <flatcc_json_parser_generic_json@@Base+0x34>
   34bc4:	b	34b18 <flatcc_json_parser_generic_json@@Base+0x538>
   34bc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   34bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34bd0:	cmp	r0, r1
   34bd4:	bne	34c28 <flatcc_json_parser_generic_json@@Base+0x648>
   34bd8:	add	r0, sp, #40	; 0x28
   34bdc:	ldr	r1, [sp, #36]	; 0x24
   34be0:	cmp	r1, r0
   34be4:	beq	34c28 <flatcc_json_parser_generic_json@@Base+0x648>
   34be8:	ldr	r0, [fp, #-16]
   34bec:	ldr	r1, [fp, #-20]	; 0xffffffec
   34bf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34bf4:	ldr	r3, [sp, #36]	; 0x24
   34bf8:	mvn	ip, #0
   34bfc:	add	r3, r3, ip
   34c00:	ldrb	r3, [r3]
   34c04:	cmp	r3, #93	; 0x5d
   34c08:	movw	r3, #0
   34c0c:	moveq	r3, #1
   34c10:	tst	r3, #1
   34c14:	movw	r3, #9
   34c18:	moveq	r3, #10
   34c1c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   34c20:	str	r0, [fp, #-12]
   34c24:	b	34c30 <flatcc_json_parser_generic_json@@Base+0x650>
   34c28:	ldr	r0, [fp, #-20]	; 0xffffffec
   34c2c:	str	r0, [fp, #-12]
   34c30:	ldr	r0, [fp, #-12]
   34c34:	sub	sp, fp, #8
   34c38:	pop	{r4, r5, fp, pc}
   34c3c:	nop	{0}

00034c40 <flatcc_json_parser_double@@Base>:
   34c40:	push	{fp, lr}
   34c44:	mov	fp, sp
   34c48:	sub	sp, sp, #32
   34c4c:	vldr	d16, [pc, #372]	; 34dc8 <flatcc_json_parser_double@@Base+0x188>
   34c50:	str	r0, [fp, #-8]
   34c54:	str	r1, [fp, #-12]
   34c58:	str	r2, [sp, #16]
   34c5c:	str	r3, [sp, #12]
   34c60:	ldr	r0, [sp, #12]
   34c64:	vstr	d16, [r0]
   34c68:	ldr	r0, [fp, #-12]
   34c6c:	ldr	r1, [sp, #16]
   34c70:	cmp	r0, r1
   34c74:	bne	34c84 <flatcc_json_parser_double@@Base+0x44>
   34c78:	ldr	r0, [fp, #-12]
   34c7c:	str	r0, [fp, #-4]
   34c80:	b	34db8 <flatcc_json_parser_double@@Base+0x178>
   34c84:	ldr	r0, [fp, #-12]
   34c88:	str	r0, [sp, #4]
   34c8c:	ldr	r0, [fp, #-12]
   34c90:	ldrb	r0, [r0]
   34c94:	cmp	r0, #45	; 0x2d
   34c98:	bne	34ca8 <flatcc_json_parser_double@@Base+0x68>
   34c9c:	ldr	r0, [sp, #4]
   34ca0:	add	r0, r0, #1
   34ca4:	str	r0, [sp, #4]
   34ca8:	ldr	r0, [sp, #16]
   34cac:	ldr	r1, [sp, #4]
   34cb0:	sub	r0, r0, r1
   34cb4:	cmp	r0, #1
   34cb8:	ble	34d08 <flatcc_json_parser_double@@Base+0xc8>
   34cbc:	ldr	r0, [sp, #4]
   34cc0:	ldrb	r0, [r0]
   34cc4:	cmp	r0, #46	; 0x2e
   34cc8:	beq	34cec <flatcc_json_parser_double@@Base+0xac>
   34ccc:	ldr	r0, [sp, #4]
   34cd0:	ldrb	r0, [r0]
   34cd4:	cmp	r0, #48	; 0x30
   34cd8:	bne	34d08 <flatcc_json_parser_double@@Base+0xc8>
   34cdc:	ldr	r0, [sp, #4]
   34ce0:	ldrb	r0, [r0, #1]
   34ce4:	cmp	r0, #48	; 0x30
   34ce8:	bne	34d08 <flatcc_json_parser_double@@Base+0xc8>
   34cec:	ldr	r0, [fp, #-8]
   34cf0:	ldr	r1, [fp, #-12]
   34cf4:	ldr	r2, [sp, #16]
   34cf8:	movw	r3, #6
   34cfc:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   34d00:	str	r0, [fp, #-4]
   34d04:	b	34db8 <flatcc_json_parser_double@@Base+0x178>
   34d08:	ldr	r0, [fp, #-12]
   34d0c:	ldr	r1, [sp, #16]
   34d10:	ldr	r2, [fp, #-12]
   34d14:	sub	r1, r1, r2
   34d18:	ldr	r2, [sp, #12]
   34d1c:	bl	34dd0 <flatcc_json_parser_double@@Base+0x190>
   34d20:	str	r0, [sp, #8]
   34d24:	ldr	r0, [sp, #8]
   34d28:	movw	r1, #0
   34d2c:	cmp	r0, r1
   34d30:	beq	34d44 <flatcc_json_parser_double@@Base+0x104>
   34d34:	ldr	r0, [sp, #8]
   34d38:	ldr	r1, [fp, #-12]
   34d3c:	cmp	r0, r1
   34d40:	bne	34db0 <flatcc_json_parser_double@@Base+0x170>
   34d44:	b	34d64 <flatcc_json_parser_double@@Base+0x124>
   34d48:	ldr	r0, [sp, #12]
   34d4c:	vldr	d16, [r0]
   34d50:	vcvt.f32.f64	s0, d16
   34d54:	bl	14e48 <__isinff@plt>
   34d58:	cmp	r0, #0
   34d5c:	bne	34d78 <flatcc_json_parser_double@@Base+0x138>
   34d60:	b	34d94 <flatcc_json_parser_double@@Base+0x154>
   34d64:	ldr	r0, [sp, #12]
   34d68:	vldr	d0, [r0]
   34d6c:	bl	14e54 <__isinf@plt>
   34d70:	cmp	r0, #0
   34d74:	beq	34d94 <flatcc_json_parser_double@@Base+0x154>
   34d78:	ldr	r0, [fp, #-8]
   34d7c:	ldr	r1, [fp, #-12]
   34d80:	ldr	r2, [sp, #16]
   34d84:	movw	r3, #7
   34d88:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   34d8c:	str	r0, [fp, #-4]
   34d90:	b	34db8 <flatcc_json_parser_double@@Base+0x178>
   34d94:	ldr	r0, [fp, #-8]
   34d98:	ldr	r1, [fp, #-12]
   34d9c:	ldr	r2, [sp, #16]
   34da0:	movw	r3, #6
   34da4:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   34da8:	str	r0, [fp, #-4]
   34dac:	b	34db8 <flatcc_json_parser_double@@Base+0x178>
   34db0:	ldr	r0, [sp, #8]
   34db4:	str	r0, [fp, #-4]
   34db8:	ldr	r0, [fp, #-4]
   34dbc:	mov	sp, fp
   34dc0:	pop	{fp, pc}
   34dc4:	nop	{0}
	...
   34dd0:	push	{fp, lr}
   34dd4:	mov	fp, sp
   34dd8:	sub	sp, sp, #16
   34ddc:	str	r0, [fp, #-4]
   34de0:	str	r1, [sp, #8]
   34de4:	str	r2, [sp, #4]
   34de8:	ldr	r0, [fp, #-4]
   34dec:	ldr	r1, [sp, #8]
   34df0:	ldr	r2, [sp, #4]
   34df4:	bl	37be8 <flatcc_json_parser_struct_as_root@@Base+0x19c>
   34df8:	mov	sp, fp
   34dfc:	pop	{fp, pc}

00034e00 <flatcc_json_parser_float@@Base>:
   34e00:	push	{fp, lr}
   34e04:	mov	fp, sp
   34e08:	sub	sp, sp, #32
   34e0c:	vldr	s0, [pc, #368]	; 34f84 <flatcc_json_parser_float@@Base+0x184>
   34e10:	str	r0, [fp, #-8]
   34e14:	str	r1, [fp, #-12]
   34e18:	str	r2, [sp, #16]
   34e1c:	str	r3, [sp, #12]
   34e20:	ldr	r0, [sp, #12]
   34e24:	vstr	s0, [r0]
   34e28:	ldr	r0, [fp, #-12]
   34e2c:	ldr	r1, [sp, #16]
   34e30:	cmp	r0, r1
   34e34:	bne	34e44 <flatcc_json_parser_float@@Base+0x44>
   34e38:	ldr	r0, [fp, #-12]
   34e3c:	str	r0, [fp, #-4]
   34e40:	b	34f78 <flatcc_json_parser_float@@Base+0x178>
   34e44:	ldr	r0, [fp, #-12]
   34e48:	str	r0, [sp, #4]
   34e4c:	ldr	r0, [fp, #-12]
   34e50:	ldrb	r0, [r0]
   34e54:	cmp	r0, #45	; 0x2d
   34e58:	bne	34e68 <flatcc_json_parser_float@@Base+0x68>
   34e5c:	ldr	r0, [sp, #4]
   34e60:	add	r0, r0, #1
   34e64:	str	r0, [sp, #4]
   34e68:	ldr	r0, [sp, #16]
   34e6c:	ldr	r1, [sp, #4]
   34e70:	sub	r0, r0, r1
   34e74:	cmp	r0, #1
   34e78:	ble	34ec8 <flatcc_json_parser_float@@Base+0xc8>
   34e7c:	ldr	r0, [sp, #4]
   34e80:	ldrb	r0, [r0]
   34e84:	cmp	r0, #46	; 0x2e
   34e88:	beq	34eac <flatcc_json_parser_float@@Base+0xac>
   34e8c:	ldr	r0, [sp, #4]
   34e90:	ldrb	r0, [r0]
   34e94:	cmp	r0, #48	; 0x30
   34e98:	bne	34ec8 <flatcc_json_parser_float@@Base+0xc8>
   34e9c:	ldr	r0, [sp, #4]
   34ea0:	ldrb	r0, [r0, #1]
   34ea4:	cmp	r0, #48	; 0x30
   34ea8:	bne	34ec8 <flatcc_json_parser_float@@Base+0xc8>
   34eac:	ldr	r0, [fp, #-8]
   34eb0:	ldr	r1, [fp, #-12]
   34eb4:	ldr	r2, [sp, #16]
   34eb8:	movw	r3, #6
   34ebc:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   34ec0:	str	r0, [fp, #-4]
   34ec4:	b	34f78 <flatcc_json_parser_float@@Base+0x178>
   34ec8:	ldr	r0, [fp, #-12]
   34ecc:	ldr	r1, [sp, #16]
   34ed0:	ldr	r2, [fp, #-12]
   34ed4:	sub	r1, r1, r2
   34ed8:	ldr	r2, [sp, #12]
   34edc:	bl	34f88 <flatcc_json_parser_float@@Base+0x188>
   34ee0:	str	r0, [sp, #8]
   34ee4:	ldr	r0, [sp, #8]
   34ee8:	movw	r1, #0
   34eec:	cmp	r0, r1
   34ef0:	beq	34f04 <flatcc_json_parser_float@@Base+0x104>
   34ef4:	ldr	r0, [sp, #8]
   34ef8:	ldr	r1, [fp, #-12]
   34efc:	cmp	r0, r1
   34f00:	bne	34f70 <flatcc_json_parser_float@@Base+0x170>
   34f04:	b	34f08 <flatcc_json_parser_float@@Base+0x108>
   34f08:	ldr	r0, [sp, #12]
   34f0c:	vldr	s0, [r0]
   34f10:	bl	14e48 <__isinff@plt>
   34f14:	cmp	r0, #0
   34f18:	bne	34f38 <flatcc_json_parser_float@@Base+0x138>
   34f1c:	b	34f54 <flatcc_json_parser_float@@Base+0x154>
   34f20:	ldr	r0, [sp, #12]
   34f24:	vldr	s0, [r0]
   34f28:	vcvt.f64.f32	d0, s0
   34f2c:	bl	14e54 <__isinf@plt>
   34f30:	cmp	r0, #0
   34f34:	beq	34f54 <flatcc_json_parser_float@@Base+0x154>
   34f38:	ldr	r0, [fp, #-8]
   34f3c:	ldr	r1, [fp, #-12]
   34f40:	ldr	r2, [sp, #16]
   34f44:	movw	r3, #7
   34f48:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   34f4c:	str	r0, [fp, #-4]
   34f50:	b	34f78 <flatcc_json_parser_float@@Base+0x178>
   34f54:	ldr	r0, [fp, #-8]
   34f58:	ldr	r1, [fp, #-12]
   34f5c:	ldr	r2, [sp, #16]
   34f60:	movw	r3, #6
   34f64:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   34f68:	str	r0, [fp, #-4]
   34f6c:	b	34f78 <flatcc_json_parser_float@@Base+0x178>
   34f70:	ldr	r0, [sp, #8]
   34f74:	str	r0, [fp, #-4]
   34f78:	ldr	r0, [fp, #-4]
   34f7c:	mov	sp, fp
   34f80:	pop	{fp, pc}
   34f84:	andeq	r0, r0, r0
   34f88:	push	{fp, lr}
   34f8c:	mov	fp, sp
   34f90:	sub	sp, sp, #40	; 0x28
   34f94:	ldr	r3, [pc, #180]	; 35050 <flatcc_json_parser_float@@Base+0x250>
   34f98:	str	r0, [fp, #-8]
   34f9c:	str	r1, [fp, #-12]
   34fa0:	str	r2, [fp, #-16]
   34fa4:	str	r3, [sp, #4]
   34fa8:	ldr	r0, [fp, #-8]
   34fac:	ldr	r1, [fp, #-12]
   34fb0:	add	r2, sp, #8
   34fb4:	bl	34dd0 <flatcc_json_parser_double@@Base+0x190>
   34fb8:	str	r0, [sp, #20]
   34fbc:	vldr	d16, [sp, #8]
   34fc0:	vcvt.f32.f64	s0, d16
   34fc4:	ldr	r0, [fp, #-16]
   34fc8:	vstr	s0, [r0]
   34fcc:	ldr	r0, [fp, #-16]
   34fd0:	vldr	s0, [r0]
   34fd4:	bl	14e48 <__isinff@plt>
   34fd8:	cmp	r0, #0
   34fdc:	bne	34ffc <flatcc_json_parser_float@@Base+0x1fc>
   34fe0:	b	3503c <flatcc_json_parser_float@@Base+0x23c>
   34fe4:	ldr	r0, [fp, #-16]
   34fe8:	vldr	s0, [r0]
   34fec:	vcvt.f64.f32	d0, s0
   34ff0:	bl	14e54 <__isinf@plt>
   34ff4:	cmp	r0, #0
   34ff8:	beq	3503c <flatcc_json_parser_float@@Base+0x23c>
   34ffc:	vldr	d16, [sp, #8]
   35000:	vcmpe.f64	d16, #0.0
   35004:	vmrs	APSR_nzcv, fpscr
   35008:	bpl	3501c <flatcc_json_parser_float@@Base+0x21c>
   3500c:	vldr	s0, [sp, #4]
   35010:	vneg.f32	s0, s0
   35014:	vstr	s0, [sp]
   35018:	b	35024 <flatcc_json_parser_float@@Base+0x224>
   3501c:	vldr	s0, [sp, #4]
   35020:	vstr	s0, [sp]
   35024:	vldr	s0, [sp]
   35028:	ldr	r0, [fp, #-16]
   3502c:	vstr	s0, [r0]
   35030:	ldr	r0, [fp, #-8]
   35034:	str	r0, [fp, #-4]
   35038:	b	35044 <flatcc_json_parser_float@@Base+0x244>
   3503c:	ldr	r0, [sp, #20]
   35040:	str	r0, [fp, #-4]
   35044:	ldr	r0, [fp, #-4]
   35048:	mov	sp, fp
   3504c:	pop	{fp, pc}
   35050:	svcvc	0x00800000
   35054:	push	{fp, lr}
   35058:	mov	fp, sp
   3505c:	sub	sp, sp, #16
   35060:	str	r0, [sp, #8]
   35064:	str	r1, [sp, #4]
   35068:	str	r2, [sp]
   3506c:	ldr	r0, [sp, #4]
   35070:	ldr	r1, [sp]
   35074:	cmp	r0, r1
   35078:	bne	35088 <flatcc_json_parser_float@@Base+0x288>
   3507c:	ldr	r0, [sp, #4]
   35080:	str	r0, [fp, #-4]
   35084:	b	350cc <flatcc_json_parser_float@@Base+0x2cc>
   35088:	ldr	r0, [sp, #4]
   3508c:	ldrb	r0, [r0]
   35090:	cmp	r0, #34	; 0x22
   35094:	bne	350a8 <flatcc_json_parser_float@@Base+0x2a8>
   35098:	ldr	r0, [sp, #4]
   3509c:	add	r0, r0, #1
   350a0:	str	r0, [sp, #4]
   350a4:	b	350c4 <flatcc_json_parser_float@@Base+0x2c4>
   350a8:	ldr	r0, [sp, #8]
   350ac:	ldr	r1, [sp, #4]
   350b0:	ldr	r2, [sp]
   350b4:	movw	r3, #5
   350b8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   350bc:	str	r0, [fp, #-4]
   350c0:	b	350cc <flatcc_json_parser_float@@Base+0x2cc>
   350c4:	ldr	r0, [sp, #4]
   350c8:	str	r0, [fp, #-4]
   350cc:	ldr	r0, [fp, #-4]
   350d0:	mov	sp, fp
   350d4:	pop	{fp, pc}
   350d8:	push	{fp, lr}
   350dc:	mov	fp, sp
   350e0:	sub	sp, sp, #16
   350e4:	str	r0, [sp, #8]
   350e8:	str	r1, [sp, #4]
   350ec:	str	r2, [sp]
   350f0:	ldr	r0, [sp, #4]
   350f4:	ldr	r1, [sp]
   350f8:	cmp	r0, r1
   350fc:	beq	35110 <flatcc_json_parser_float@@Base+0x310>
   35100:	ldr	r0, [sp, #4]
   35104:	ldrb	r0, [r0]
   35108:	cmp	r0, #34	; 0x22
   3510c:	beq	3512c <flatcc_json_parser_float@@Base+0x32c>
   35110:	ldr	r0, [sp, #8]
   35114:	ldr	r1, [sp, #4]
   35118:	ldr	r2, [sp]
   3511c:	movw	r3, #16
   35120:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   35124:	str	r0, [fp, #-4]
   35128:	b	3513c <flatcc_json_parser_float@@Base+0x33c>
   3512c:	ldr	r0, [sp, #4]
   35130:	add	r0, r0, #1
   35134:	str	r0, [sp, #4]
   35138:	str	r0, [fp, #-4]
   3513c:	ldr	r0, [fp, #-4]
   35140:	mov	sp, fp
   35144:	pop	{fp, pc}
   35148:	push	{fp, lr}
   3514c:	mov	fp, sp
   35150:	sub	sp, sp, #16
   35154:	str	r0, [sp, #8]
   35158:	str	r1, [sp, #4]
   3515c:	str	r2, [sp]
   35160:	ldr	r0, [sp, #4]
   35164:	ldr	r1, [sp]
   35168:	cmp	r0, r1
   3516c:	beq	35180 <flatcc_json_parser_float@@Base+0x380>
   35170:	ldr	r0, [sp, #4]
   35174:	ldrb	r0, [r0]
   35178:	cmp	r0, #34	; 0x22
   3517c:	beq	3519c <flatcc_json_parser_float@@Base+0x39c>
   35180:	ldr	r0, [sp, #8]
   35184:	ldr	r1, [sp, #4]
   35188:	ldr	r2, [sp]
   3518c:	movw	r3, #20
   35190:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   35194:	str	r0, [fp, #-4]
   35198:	b	351ac <flatcc_json_parser_float@@Base+0x3ac>
   3519c:	ldr	r0, [sp, #4]
   351a0:	add	r0, r0, #1
   351a4:	str	r0, [sp, #4]
   351a8:	str	r0, [fp, #-4]
   351ac:	ldr	r0, [fp, #-4]
   351b0:	mov	sp, fp
   351b4:	pop	{fp, pc}
   351b8:	push	{fp, lr}
   351bc:	mov	fp, sp
   351c0:	sub	sp, sp, #32
   351c4:	str	r0, [fp, #-8]
   351c8:	str	r1, [fp, #-12]
   351cc:	str	r2, [sp, #16]
   351d0:	ldr	r0, [fp, #-12]
   351d4:	ldr	r1, [sp, #16]
   351d8:	cmp	r0, r1
   351dc:	bne	351ec <flatcc_json_parser_float@@Base+0x3ec>
   351e0:	ldr	r0, [fp, #-12]
   351e4:	str	r0, [fp, #-4]
   351e8:	b	355f0 <flatcc_json_parser_float@@Base+0x7f0>
   351ec:	ldr	r0, [fp, #-12]
   351f0:	ldrb	r0, [r0]
   351f4:	cmp	r0, #45	; 0x2d
   351f8:	bne	35238 <flatcc_json_parser_float@@Base+0x438>
   351fc:	ldr	r0, [fp, #-12]
   35200:	add	r0, r0, #1
   35204:	str	r0, [fp, #-12]
   35208:	ldr	r0, [fp, #-12]
   3520c:	ldr	r1, [sp, #16]
   35210:	cmp	r0, r1
   35214:	bne	35234 <flatcc_json_parser_float@@Base+0x434>
   35218:	ldr	r0, [fp, #-8]
   3521c:	ldr	r1, [fp, #-12]
   35220:	ldr	r2, [sp, #16]
   35224:	movw	r3, #6
   35228:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   3522c:	str	r0, [fp, #-4]
   35230:	b	355f0 <flatcc_json_parser_float@@Base+0x7f0>
   35234:	b	35238 <flatcc_json_parser_float@@Base+0x438>
   35238:	ldr	r0, [fp, #-12]
   3523c:	ldrb	r0, [r0]
   35240:	cmp	r0, #48	; 0x30
   35244:	bne	35258 <flatcc_json_parser_float@@Base+0x458>
   35248:	ldr	r0, [fp, #-12]
   3524c:	add	r0, r0, #1
   35250:	str	r0, [fp, #-12]
   35254:	b	35308 <flatcc_json_parser_float@@Base+0x508>
   35258:	ldr	r0, [fp, #-12]
   3525c:	ldrb	r0, [r0]
   35260:	cmp	r0, #49	; 0x31
   35264:	blt	35278 <flatcc_json_parser_float@@Base+0x478>
   35268:	ldr	r0, [fp, #-12]
   3526c:	ldrb	r0, [r0]
   35270:	cmp	r0, #57	; 0x39
   35274:	ble	35294 <flatcc_json_parser_float@@Base+0x494>
   35278:	ldr	r0, [fp, #-8]
   3527c:	ldr	r1, [fp, #-12]
   35280:	ldr	r2, [sp, #16]
   35284:	movw	r3, #6
   35288:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   3528c:	str	r0, [fp, #-4]
   35290:	b	355f0 <flatcc_json_parser_float@@Base+0x7f0>
   35294:	ldr	r0, [fp, #-12]
   35298:	add	r0, r0, #1
   3529c:	str	r0, [fp, #-12]
   352a0:	ldr	r0, [fp, #-12]
   352a4:	ldr	r1, [sp, #16]
   352a8:	cmp	r0, r1
   352ac:	movw	r0, #0
   352b0:	str	r0, [sp, #12]
   352b4:	beq	352e8 <flatcc_json_parser_float@@Base+0x4e8>
   352b8:	ldr	r0, [fp, #-12]
   352bc:	ldrb	r0, [r0]
   352c0:	cmp	r0, #48	; 0x30
   352c4:	movw	r0, #0
   352c8:	str	r0, [sp, #12]
   352cc:	blt	352e8 <flatcc_json_parser_float@@Base+0x4e8>
   352d0:	ldr	r0, [fp, #-12]
   352d4:	ldrb	r0, [r0]
   352d8:	cmp	r0, #57	; 0x39
   352dc:	movw	r0, #0
   352e0:	movle	r0, #1
   352e4:	str	r0, [sp, #12]
   352e8:	ldr	r0, [sp, #12]
   352ec:	tst	r0, #1
   352f0:	beq	35304 <flatcc_json_parser_float@@Base+0x504>
   352f4:	ldr	r0, [fp, #-12]
   352f8:	add	r0, r0, #1
   352fc:	str	r0, [fp, #-12]
   35300:	b	352a0 <flatcc_json_parser_float@@Base+0x4a0>
   35304:	b	35308 <flatcc_json_parser_float@@Base+0x508>
   35308:	ldr	r0, [fp, #-12]
   3530c:	ldr	r1, [sp, #16]
   35310:	cmp	r0, r1
   35314:	beq	353e8 <flatcc_json_parser_float@@Base+0x5e8>
   35318:	ldr	r0, [fp, #-12]
   3531c:	ldrb	r0, [r0]
   35320:	cmp	r0, #46	; 0x2e
   35324:	bne	353e4 <flatcc_json_parser_float@@Base+0x5e4>
   35328:	ldr	r0, [fp, #-12]
   3532c:	add	r0, r0, #1
   35330:	str	r0, [fp, #-12]
   35334:	ldr	r0, [fp, #-12]
   35338:	ldrb	r0, [r0]
   3533c:	cmp	r0, #48	; 0x30
   35340:	blt	35354 <flatcc_json_parser_float@@Base+0x554>
   35344:	ldr	r0, [fp, #-12]
   35348:	ldrb	r0, [r0]
   3534c:	cmp	r0, #57	; 0x39
   35350:	ble	35370 <flatcc_json_parser_float@@Base+0x570>
   35354:	ldr	r0, [fp, #-8]
   35358:	ldr	r1, [fp, #-12]
   3535c:	ldr	r2, [sp, #16]
   35360:	movw	r3, #6
   35364:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   35368:	str	r0, [fp, #-4]
   3536c:	b	355f0 <flatcc_json_parser_float@@Base+0x7f0>
   35370:	ldr	r0, [fp, #-12]
   35374:	add	r0, r0, #1
   35378:	str	r0, [fp, #-12]
   3537c:	ldr	r0, [fp, #-12]
   35380:	ldr	r1, [sp, #16]
   35384:	cmp	r0, r1
   35388:	movw	r0, #0
   3538c:	str	r0, [sp, #8]
   35390:	beq	353c4 <flatcc_json_parser_float@@Base+0x5c4>
   35394:	ldr	r0, [fp, #-12]
   35398:	ldrb	r0, [r0]
   3539c:	cmp	r0, #48	; 0x30
   353a0:	movw	r0, #0
   353a4:	str	r0, [sp, #8]
   353a8:	blt	353c4 <flatcc_json_parser_float@@Base+0x5c4>
   353ac:	ldr	r0, [fp, #-12]
   353b0:	ldrb	r0, [r0]
   353b4:	cmp	r0, #57	; 0x39
   353b8:	movw	r0, #0
   353bc:	movle	r0, #1
   353c0:	str	r0, [sp, #8]
   353c4:	ldr	r0, [sp, #8]
   353c8:	tst	r0, #1
   353cc:	beq	353e0 <flatcc_json_parser_float@@Base+0x5e0>
   353d0:	ldr	r0, [fp, #-12]
   353d4:	add	r0, r0, #1
   353d8:	str	r0, [fp, #-12]
   353dc:	b	3537c <flatcc_json_parser_float@@Base+0x57c>
   353e0:	b	353e4 <flatcc_json_parser_float@@Base+0x5e4>
   353e4:	b	353e8 <flatcc_json_parser_float@@Base+0x5e8>
   353e8:	ldr	r0, [fp, #-12]
   353ec:	ldr	r1, [sp, #16]
   353f0:	cmp	r0, r1
   353f4:	beq	3553c <flatcc_json_parser_float@@Base+0x73c>
   353f8:	ldr	r0, [fp, #-12]
   353fc:	ldrb	r0, [r0]
   35400:	cmp	r0, #101	; 0x65
   35404:	beq	35418 <flatcc_json_parser_float@@Base+0x618>
   35408:	ldr	r0, [fp, #-12]
   3540c:	ldrb	r0, [r0]
   35410:	cmp	r0, #69	; 0x45
   35414:	bne	3553c <flatcc_json_parser_float@@Base+0x73c>
   35418:	ldr	r0, [fp, #-12]
   3541c:	add	r0, r0, #1
   35420:	str	r0, [fp, #-12]
   35424:	ldr	r0, [fp, #-12]
   35428:	ldr	r1, [sp, #16]
   3542c:	cmp	r0, r1
   35430:	bne	35450 <flatcc_json_parser_float@@Base+0x650>
   35434:	ldr	r0, [fp, #-8]
   35438:	ldr	r1, [fp, #-12]
   3543c:	ldr	r2, [sp, #16]
   35440:	movw	r3, #6
   35444:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   35448:	str	r0, [fp, #-4]
   3544c:	b	355f0 <flatcc_json_parser_float@@Base+0x7f0>
   35450:	ldr	r0, [fp, #-12]
   35454:	ldrb	r0, [r0]
   35458:	cmp	r0, #43	; 0x2b
   3545c:	beq	35470 <flatcc_json_parser_float@@Base+0x670>
   35460:	ldr	r0, [fp, #-12]
   35464:	ldrb	r0, [r0]
   35468:	cmp	r0, #45	; 0x2d
   3546c:	bne	3547c <flatcc_json_parser_float@@Base+0x67c>
   35470:	ldr	r0, [fp, #-12]
   35474:	add	r0, r0, #1
   35478:	str	r0, [fp, #-12]
   3547c:	ldr	r0, [fp, #-12]
   35480:	ldr	r1, [sp, #16]
   35484:	cmp	r0, r1
   35488:	beq	354ac <flatcc_json_parser_float@@Base+0x6ac>
   3548c:	ldr	r0, [fp, #-12]
   35490:	ldrb	r0, [r0]
   35494:	cmp	r0, #48	; 0x30
   35498:	blt	354ac <flatcc_json_parser_float@@Base+0x6ac>
   3549c:	ldr	r0, [fp, #-12]
   354a0:	ldrb	r0, [r0]
   354a4:	cmp	r0, #57	; 0x39
   354a8:	ble	354c8 <flatcc_json_parser_float@@Base+0x6c8>
   354ac:	ldr	r0, [fp, #-8]
   354b0:	ldr	r1, [fp, #-12]
   354b4:	ldr	r2, [sp, #16]
   354b8:	movw	r3, #6
   354bc:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   354c0:	str	r0, [fp, #-4]
   354c4:	b	355f0 <flatcc_json_parser_float@@Base+0x7f0>
   354c8:	ldr	r0, [fp, #-12]
   354cc:	add	r0, r0, #1
   354d0:	str	r0, [fp, #-12]
   354d4:	ldr	r0, [fp, #-12]
   354d8:	ldr	r1, [sp, #16]
   354dc:	cmp	r0, r1
   354e0:	movw	r0, #0
   354e4:	str	r0, [sp, #4]
   354e8:	beq	3551c <flatcc_json_parser_float@@Base+0x71c>
   354ec:	ldr	r0, [fp, #-12]
   354f0:	ldrb	r0, [r0]
   354f4:	cmp	r0, #48	; 0x30
   354f8:	movw	r0, #0
   354fc:	str	r0, [sp, #4]
   35500:	blt	3551c <flatcc_json_parser_float@@Base+0x71c>
   35504:	ldr	r0, [fp, #-12]
   35508:	ldrb	r0, [r0]
   3550c:	cmp	r0, #57	; 0x39
   35510:	movw	r0, #0
   35514:	movle	r0, #1
   35518:	str	r0, [sp, #4]
   3551c:	ldr	r0, [sp, #4]
   35520:	tst	r0, #1
   35524:	beq	35538 <flatcc_json_parser_float@@Base+0x738>
   35528:	ldr	r0, [fp, #-12]
   3552c:	add	r0, r0, #1
   35530:	str	r0, [fp, #-12]
   35534:	b	354d4 <flatcc_json_parser_float@@Base+0x6d4>
   35538:	b	3553c <flatcc_json_parser_float@@Base+0x73c>
   3553c:	ldr	r0, [fp, #-12]
   35540:	ldr	r1, [sp, #16]
   35544:	cmp	r0, r1
   35548:	beq	355d8 <flatcc_json_parser_float@@Base+0x7d8>
   3554c:	ldr	r0, [fp, #-12]
   35550:	ldrb	r0, [r0]
   35554:	sub	r1, r0, #9
   35558:	cmp	r1, #3
   3555c:	str	r0, [sp]
   35560:	bcc	355c8 <flatcc_json_parser_float@@Base+0x7c8>
   35564:	b	35568 <flatcc_json_parser_float@@Base+0x768>
   35568:	ldr	r0, [sp]
   3556c:	cmp	r0, #13
   35570:	beq	355c8 <flatcc_json_parser_float@@Base+0x7c8>
   35574:	b	35578 <flatcc_json_parser_float@@Base+0x778>
   35578:	ldr	r0, [sp]
   3557c:	cmp	r0, #32
   35580:	beq	355c8 <flatcc_json_parser_float@@Base+0x7c8>
   35584:	b	35588 <flatcc_json_parser_float@@Base+0x788>
   35588:	ldr	r0, [sp]
   3558c:	cmp	r0, #44	; 0x2c
   35590:	beq	355c8 <flatcc_json_parser_float@@Base+0x7c8>
   35594:	b	35598 <flatcc_json_parser_float@@Base+0x798>
   35598:	ldr	r0, [sp]
   3559c:	cmp	r0, #58	; 0x3a
   355a0:	beq	355c8 <flatcc_json_parser_float@@Base+0x7c8>
   355a4:	b	355a8 <flatcc_json_parser_float@@Base+0x7a8>
   355a8:	ldr	r0, [sp]
   355ac:	cmp	r0, #93	; 0x5d
   355b0:	beq	355c8 <flatcc_json_parser_float@@Base+0x7c8>
   355b4:	b	355b8 <flatcc_json_parser_float@@Base+0x7b8>
   355b8:	ldr	r0, [sp]
   355bc:	cmp	r0, #125	; 0x7d
   355c0:	bne	355d4 <flatcc_json_parser_float@@Base+0x7d4>
   355c4:	b	355c8 <flatcc_json_parser_float@@Base+0x7c8>
   355c8:	ldr	r0, [fp, #-12]
   355cc:	str	r0, [fp, #-4]
   355d0:	b	355f0 <flatcc_json_parser_float@@Base+0x7f0>
   355d4:	b	355d8 <flatcc_json_parser_float@@Base+0x7d8>
   355d8:	ldr	r0, [fp, #-8]
   355dc:	ldr	r1, [fp, #-12]
   355e0:	ldr	r2, [sp, #16]
   355e4:	movw	r3, #6
   355e8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   355ec:	str	r0, [fp, #-4]
   355f0:	ldr	r0, [fp, #-4]
   355f4:	mov	sp, fp
   355f8:	pop	{fp, pc}
   355fc:	push	{fp, lr}
   35600:	mov	fp, sp
   35604:	sub	sp, sp, #32
   35608:	str	r0, [fp, #-8]
   3560c:	str	r1, [fp, #-12]
   35610:	str	r2, [sp, #16]
   35614:	str	r3, [sp, #12]
   35618:	ldr	r0, [fp, #-12]
   3561c:	str	r0, [sp, #8]
   35620:	ldr	r0, [sp, #16]
   35624:	ldr	r1, [fp, #-12]
   35628:	sub	r0, r0, r1
   3562c:	cmp	r0, #4
   35630:	blt	3567c <flatcc_json_parser_float@@Base+0x87c>
   35634:	ldr	r0, [fp, #-12]
   35638:	ldr	r0, [r0]
   3563c:	movw	r1, #36236	; 0x8d8c
   35640:	movt	r1, #39562	; 0x9a8a
   35644:	add	r1, r0, r1
   35648:	movw	r2, #29300	; 0x7274
   3564c:	movt	r2, #25973	; 0x6575
   35650:	cmp	r0, r2
   35654:	movwne	r1, #1
   35658:	cmp	r1, #0
   3565c:	bne	3567c <flatcc_json_parser_float@@Base+0x87c>
   35660:	ldr	r0, [sp, #12]
   35664:	movw	r1, #1
   35668:	strb	r1, [r0]
   3566c:	ldr	r0, [sp, #8]
   35670:	add	r0, r0, #4
   35674:	str	r0, [fp, #-4]
   35678:	b	35714 <flatcc_json_parser_float@@Base+0x914>
   3567c:	ldr	r0, [sp, #16]
   35680:	ldr	r1, [fp, #-12]
   35684:	sub	r0, r0, r1
   35688:	cmp	r0, #5
   3568c:	blt	356c8 <flatcc_json_parser_float@@Base+0x8c8>
   35690:	ldr	r0, [fp, #-12]
   35694:	ldr	r1, [pc, #132]	; 35720 <flatcc_json_parser_float@@Base+0x920>
   35698:	add	r1, pc, r1
   3569c:	mov	r2, #5
   356a0:	bl	14e3c <memcmp@plt>
   356a4:	cmp	r0, #0
   356a8:	bne	356c8 <flatcc_json_parser_float@@Base+0x8c8>
   356ac:	ldr	r0, [sp, #12]
   356b0:	movw	r1, #0
   356b4:	strb	r1, [r0]
   356b8:	ldr	r0, [sp, #8]
   356bc:	add	r0, r0, #5
   356c0:	str	r0, [fp, #-4]
   356c4:	b	35714 <flatcc_json_parser_float@@Base+0x914>
   356c8:	b	356cc <flatcc_json_parser_float@@Base+0x8cc>
   356cc:	ldr	r0, [fp, #-8]
   356d0:	ldr	r1, [fp, #-12]
   356d4:	ldr	r2, [sp, #16]
   356d8:	add	r3, sp, #7
   356dc:	bl	36c60 <flatcc_json_parser_union_type@@Base+0x2a4>
   356e0:	str	r0, [fp, #-12]
   356e4:	ldrsb	r0, [sp, #7]
   356e8:	cmp	r0, #0
   356ec:	movw	r0, #0
   356f0:	movne	r0, #1
   356f4:	mvn	r1, #0
   356f8:	eor	r0, r0, r1
   356fc:	eor	r0, r0, r1
   35700:	and	r0, r0, #1
   35704:	ldr	r1, [sp, #12]
   35708:	strb	r0, [r1]
   3570c:	ldr	r0, [fp, #-12]
   35710:	str	r0, [fp, #-4]
   35714:	ldr	r0, [fp, #-4]
   35718:	mov	sp, fp
   3571c:	pop	{fp, pc}
   35720:	muleq	r1, r8, sp
   35724:	sub	sp, sp, #12
   35728:	str	r0, [sp, #4]
   3572c:	str	r1, [sp]
   35730:	ldr	r0, [sp]
   35734:	ldr	r1, [sp, #4]
   35738:	sub	r0, r0, r1
   3573c:	cmp	r0, #4
   35740:	blt	35780 <flatcc_json_parser_float@@Base+0x980>
   35744:	ldr	r0, [sp, #4]
   35748:	ldr	r0, [r0]
   3574c:	movw	r1, #35474	; 0x8a92
   35750:	movt	r1, #37779	; 0x9393
   35754:	add	r1, r0, r1
   35758:	movw	r2, #30062	; 0x756e
   3575c:	movt	r2, #27756	; 0x6c6c
   35760:	cmp	r0, r2
   35764:	movwne	r1, #1
   35768:	cmp	r1, #0
   3576c:	bne	35780 <flatcc_json_parser_float@@Base+0x980>
   35770:	ldr	r0, [sp, #4]
   35774:	add	r0, r0, #4
   35778:	str	r0, [sp, #8]
   3577c:	b	35788 <flatcc_json_parser_float@@Base+0x988>
   35780:	ldr	r0, [sp, #4]
   35784:	str	r0, [sp, #8]
   35788:	ldr	r0, [sp, #8]
   3578c:	add	sp, sp, #12
   35790:	bx	lr
   35794:	push	{fp, lr}
   35798:	mov	fp, sp
   3579c:	sub	sp, sp, #24
   357a0:	str	r0, [fp, #-8]
   357a4:	str	r1, [sp, #12]
   357a8:	str	r2, [sp, #8]
   357ac:	str	r3, [sp, #4]
   357b0:	ldr	r0, [fp, #-8]
   357b4:	ldr	r1, [sp, #12]
   357b8:	ldr	r2, [sp, #8]
   357bc:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   357c0:	str	r0, [sp, #12]
   357c4:	ldr	r0, [sp, #12]
   357c8:	ldr	r1, [sp, #8]
   357cc:	cmp	r0, r1
   357d0:	bne	357ec <flatcc_json_parser_float@@Base+0x9ec>
   357d4:	ldr	r0, [sp, #4]
   357d8:	movw	r1, #0
   357dc:	str	r1, [r0]
   357e0:	ldr	r0, [sp, #12]
   357e4:	str	r0, [fp, #-4]
   357e8:	b	358ec <flatcc_json_parser_float@@Base+0xaec>
   357ec:	ldr	r0, [sp, #12]
   357f0:	ldrb	r0, [r0]
   357f4:	cmp	r0, #44	; 0x2c
   357f8:	beq	35850 <flatcc_json_parser_float@@Base+0xa50>
   357fc:	ldr	r0, [sp, #4]
   35800:	movw	r1, #0
   35804:	str	r1, [r0]
   35808:	ldr	r0, [sp, #12]
   3580c:	ldrb	r0, [r0]
   35810:	cmp	r0, #93	; 0x5d
   35814:	beq	35834 <flatcc_json_parser_float@@Base+0xa34>
   35818:	ldr	r0, [fp, #-8]
   3581c:	ldr	r1, [sp, #12]
   35820:	ldr	r2, [sp, #8]
   35824:	movw	r3, #9
   35828:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   3582c:	str	r0, [fp, #-4]
   35830:	b	358ec <flatcc_json_parser_float@@Base+0xaec>
   35834:	ldr	r0, [fp, #-8]
   35838:	ldr	r1, [sp, #12]
   3583c:	add	r1, r1, #1
   35840:	ldr	r2, [sp, #8]
   35844:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   35848:	str	r0, [fp, #-4]
   3584c:	b	358ec <flatcc_json_parser_float@@Base+0xaec>
   35850:	ldr	r0, [fp, #-8]
   35854:	ldr	r1, [sp, #12]
   35858:	add	r1, r1, #1
   3585c:	ldr	r2, [sp, #8]
   35860:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   35864:	str	r0, [sp, #12]
   35868:	ldr	r0, [sp, #12]
   3586c:	ldr	r1, [sp, #8]
   35870:	cmp	r0, r1
   35874:	bne	358a0 <flatcc_json_parser_float@@Base+0xaa0>
   35878:	ldr	r0, [sp, #4]
   3587c:	movw	r1, #0
   35880:	str	r1, [r0]
   35884:	ldr	r0, [fp, #-8]
   35888:	ldr	r1, [sp, #12]
   3588c:	ldr	r2, [sp, #8]
   35890:	movw	r3, #9
   35894:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   35898:	str	r0, [fp, #-4]
   3589c:	b	358ec <flatcc_json_parser_float@@Base+0xaec>
   358a0:	ldr	r0, [sp, #12]
   358a4:	ldrb	r0, [r0]
   358a8:	cmp	r0, #93	; 0x5d
   358ac:	bne	358d8 <flatcc_json_parser_float@@Base+0xad8>
   358b0:	ldr	r0, [sp, #4]
   358b4:	movw	r1, #0
   358b8:	str	r1, [r0]
   358bc:	ldr	r0, [fp, #-8]
   358c0:	ldr	r1, [sp, #12]
   358c4:	add	r1, r1, #1
   358c8:	ldr	r2, [sp, #8]
   358cc:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   358d0:	str	r0, [fp, #-4]
   358d4:	b	358ec <flatcc_json_parser_float@@Base+0xaec>
   358d8:	ldr	r0, [sp, #4]
   358dc:	movw	r1, #1
   358e0:	str	r1, [r0]
   358e4:	ldr	r0, [sp, #12]
   358e8:	str	r0, [fp, #-4]
   358ec:	ldr	r0, [fp, #-4]
   358f0:	mov	sp, fp
   358f4:	pop	{fp, pc}
   358f8:	push	{fp, lr}
   358fc:	mov	fp, sp
   35900:	sub	sp, sp, #24
   35904:	str	r0, [fp, #-8]
   35908:	str	r1, [sp, #12]
   3590c:	str	r2, [sp, #8]
   35910:	str	r3, [sp, #4]
   35914:	ldr	r0, [fp, #-8]
   35918:	ldr	r1, [sp, #12]
   3591c:	ldr	r2, [sp, #8]
   35920:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   35924:	str	r0, [sp, #12]
   35928:	ldr	r0, [sp, #12]
   3592c:	ldr	r1, [sp, #8]
   35930:	cmp	r0, r1
   35934:	bne	35950 <flatcc_json_parser_float@@Base+0xb50>
   35938:	ldr	r0, [sp, #4]
   3593c:	movw	r1, #0
   35940:	str	r1, [r0]
   35944:	ldr	r0, [sp, #12]
   35948:	str	r0, [fp, #-4]
   3594c:	b	35a50 <flatcc_json_parser_float@@Base+0xc50>
   35950:	ldr	r0, [sp, #12]
   35954:	ldrb	r0, [r0]
   35958:	cmp	r0, #44	; 0x2c
   3595c:	beq	359b4 <flatcc_json_parser_float@@Base+0xbb4>
   35960:	ldr	r0, [sp, #4]
   35964:	movw	r1, #0
   35968:	str	r1, [r0]
   3596c:	ldr	r0, [sp, #12]
   35970:	ldrb	r0, [r0]
   35974:	cmp	r0, #125	; 0x7d
   35978:	beq	35998 <flatcc_json_parser_float@@Base+0xb98>
   3597c:	ldr	r0, [fp, #-8]
   35980:	ldr	r1, [sp, #12]
   35984:	ldr	r2, [sp, #8]
   35988:	movw	r3, #10
   3598c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   35990:	str	r0, [fp, #-4]
   35994:	b	35a50 <flatcc_json_parser_float@@Base+0xc50>
   35998:	ldr	r0, [fp, #-8]
   3599c:	ldr	r1, [sp, #12]
   359a0:	add	r1, r1, #1
   359a4:	ldr	r2, [sp, #8]
   359a8:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   359ac:	str	r0, [fp, #-4]
   359b0:	b	35a50 <flatcc_json_parser_float@@Base+0xc50>
   359b4:	ldr	r0, [fp, #-8]
   359b8:	ldr	r1, [sp, #12]
   359bc:	add	r1, r1, #1
   359c0:	ldr	r2, [sp, #8]
   359c4:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   359c8:	str	r0, [sp, #12]
   359cc:	ldr	r0, [sp, #12]
   359d0:	ldr	r1, [sp, #8]
   359d4:	cmp	r0, r1
   359d8:	bne	35a04 <flatcc_json_parser_float@@Base+0xc04>
   359dc:	ldr	r0, [sp, #4]
   359e0:	movw	r1, #0
   359e4:	str	r1, [r0]
   359e8:	ldr	r0, [fp, #-8]
   359ec:	ldr	r1, [sp, #12]
   359f0:	ldr	r2, [sp, #8]
   359f4:	movw	r3, #10
   359f8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   359fc:	str	r0, [fp, #-4]
   35a00:	b	35a50 <flatcc_json_parser_float@@Base+0xc50>
   35a04:	ldr	r0, [sp, #12]
   35a08:	ldrb	r0, [r0]
   35a0c:	cmp	r0, #125	; 0x7d
   35a10:	bne	35a3c <flatcc_json_parser_float@@Base+0xc3c>
   35a14:	ldr	r0, [sp, #4]
   35a18:	movw	r1, #0
   35a1c:	str	r1, [r0]
   35a20:	ldr	r0, [fp, #-8]
   35a24:	ldr	r1, [sp, #12]
   35a28:	add	r1, r1, #1
   35a2c:	ldr	r2, [sp, #8]
   35a30:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   35a34:	str	r0, [fp, #-4]
   35a38:	b	35a50 <flatcc_json_parser_float@@Base+0xc50>
   35a3c:	ldr	r0, [sp, #4]
   35a40:	movw	r1, #1
   35a44:	str	r1, [r0]
   35a48:	ldr	r0, [sp, #12]
   35a4c:	str	r0, [fp, #-4]
   35a50:	ldr	r0, [fp, #-4]
   35a54:	mov	sp, fp
   35a58:	pop	{fp, pc}

00035a5c <flatcc_json_parser_integer@@Base>:
   35a5c:	push	{fp, lr}
   35a60:	mov	fp, sp
   35a64:	sub	sp, sp, #64	; 0x40
   35a68:	ldr	ip, [fp, #8]
   35a6c:	str	r0, [fp, #-8]
   35a70:	str	r1, [fp, #-12]
   35a74:	str	r2, [fp, #-16]
   35a78:	str	r3, [fp, #-20]	; 0xffffffec
   35a7c:	mov	r0, #0
   35a80:	str	r0, [sp, #28]
   35a84:	str	r0, [sp, #24]
   35a88:	ldr	r0, [fp, #-12]
   35a8c:	ldr	r1, [fp, #-16]
   35a90:	cmp	r0, r1
   35a94:	str	ip, [sp, #16]
   35a98:	bne	35aa8 <flatcc_json_parser_integer@@Base+0x4c>
   35a9c:	ldr	r0, [fp, #-12]
   35aa0:	str	r0, [fp, #-4]
   35aa4:	b	35c7c <flatcc_json_parser_integer@@Base+0x220>
   35aa8:	ldr	r0, [fp, #-12]
   35aac:	str	r0, [sp, #20]
   35ab0:	ldr	r0, [fp, #-12]
   35ab4:	ldrb	r0, [r0]
   35ab8:	cmp	r0, #45	; 0x2d
   35abc:	movw	r0, #0
   35ac0:	moveq	r0, #1
   35ac4:	and	r0, r0, #1
   35ac8:	ldr	r1, [fp, #-20]	; 0xffffffec
   35acc:	str	r0, [r1]
   35ad0:	ldr	r0, [fp, #-20]	; 0xffffffec
   35ad4:	ldr	r0, [r0]
   35ad8:	ldr	r1, [fp, #-12]
   35adc:	add	r0, r1, r0
   35ae0:	str	r0, [fp, #-12]
   35ae4:	ldr	r0, [fp, #-12]
   35ae8:	ldr	r1, [fp, #-16]
   35aec:	cmp	r0, r1
   35af0:	movw	r0, #0
   35af4:	str	r0, [sp, #12]
   35af8:	beq	35b2c <flatcc_json_parser_integer@@Base+0xd0>
   35afc:	ldr	r0, [fp, #-12]
   35b00:	ldrb	r0, [r0]
   35b04:	cmp	r0, #48	; 0x30
   35b08:	movw	r0, #0
   35b0c:	str	r0, [sp, #12]
   35b10:	blt	35b2c <flatcc_json_parser_integer@@Base+0xd0>
   35b14:	ldr	r0, [fp, #-12]
   35b18:	ldrb	r0, [r0]
   35b1c:	cmp	r0, #57	; 0x39
   35b20:	movw	r0, #0
   35b24:	movle	r0, #1
   35b28:	str	r0, [sp, #12]
   35b2c:	ldr	r0, [sp, #12]
   35b30:	tst	r0, #1
   35b34:	beq	35be8 <flatcc_json_parser_integer@@Base+0x18c>
   35b38:	ldr	r0, [sp, #24]
   35b3c:	ldr	r1, [sp, #28]
   35b40:	str	r1, [sp, #36]	; 0x24
   35b44:	str	r0, [sp, #32]
   35b48:	ldr	r0, [sp, #24]
   35b4c:	ldr	r1, [sp, #28]
   35b50:	add	r1, r1, r1, lsl #2
   35b54:	lsl	r1, r1, #1
   35b58:	ldr	r2, [fp, #-12]
   35b5c:	ldrb	r2, [r2]
   35b60:	mov	r3, #10
   35b64:	umlal	r2, r1, r0, r3
   35b68:	subs	r0, r2, #48	; 0x30
   35b6c:	sbc	r1, r1, #0
   35b70:	str	r0, [sp, #24]
   35b74:	str	r1, [sp, #28]
   35b78:	ldr	r0, [sp, #32]
   35b7c:	ldr	r1, [sp, #36]	; 0x24
   35b80:	ldr	r2, [sp, #24]
   35b84:	ldr	r3, [sp, #28]
   35b88:	subs	r0, r2, r0
   35b8c:	sbcs	r1, r3, r1
   35b90:	str	r0, [sp, #8]
   35b94:	str	r1, [sp, #4]
   35b98:	bcs	35bd8 <flatcc_json_parser_integer@@Base+0x17c>
   35b9c:	b	35ba0 <flatcc_json_parser_integer@@Base+0x144>
   35ba0:	ldr	r0, [fp, #-8]
   35ba4:	ldr	r1, [fp, #-12]
   35ba8:	ldr	r2, [fp, #-16]
   35bac:	ldr	r3, [fp, #-20]	; 0xffffffec
   35bb0:	movw	ip, #0
   35bb4:	cmp	r3, ip
   35bb8:	movw	r3, #0
   35bbc:	movne	r3, #1
   35bc0:	tst	r3, #1
   35bc4:	movw	r3, #8
   35bc8:	moveq	r3, #7
   35bcc:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   35bd0:	str	r0, [fp, #-4]
   35bd4:	b	35c7c <flatcc_json_parser_integer@@Base+0x220>
   35bd8:	ldr	r0, [fp, #-12]
   35bdc:	add	r0, r0, #1
   35be0:	str	r0, [fp, #-12]
   35be4:	b	35ae4 <flatcc_json_parser_integer@@Base+0x88>
   35be8:	ldr	r0, [fp, #-12]
   35bec:	ldr	r1, [sp, #20]
   35bf0:	cmp	r0, r1
   35bf4:	bne	35c04 <flatcc_json_parser_integer@@Base+0x1a8>
   35bf8:	ldr	r0, [fp, #-12]
   35bfc:	str	r0, [fp, #-4]
   35c00:	b	35c7c <flatcc_json_parser_integer@@Base+0x220>
   35c04:	ldr	r0, [fp, #-12]
   35c08:	ldr	r1, [fp, #-16]
   35c0c:	cmp	r0, r1
   35c10:	beq	35c60 <flatcc_json_parser_integer@@Base+0x204>
   35c14:	ldr	r0, [fp, #-12]
   35c18:	ldrb	r0, [r0]
   35c1c:	cmp	r0, #101	; 0x65
   35c20:	beq	35c44 <flatcc_json_parser_integer@@Base+0x1e8>
   35c24:	ldr	r0, [fp, #-12]
   35c28:	ldrb	r0, [r0]
   35c2c:	cmp	r0, #69	; 0x45
   35c30:	beq	35c44 <flatcc_json_parser_integer@@Base+0x1e8>
   35c34:	ldr	r0, [fp, #-12]
   35c38:	ldrb	r0, [r0]
   35c3c:	cmp	r0, #46	; 0x2e
   35c40:	bne	35c60 <flatcc_json_parser_integer@@Base+0x204>
   35c44:	ldr	r0, [fp, #-8]
   35c48:	ldr	r1, [fp, #-12]
   35c4c:	ldr	r2, [fp, #-16]
   35c50:	movw	r3, #12
   35c54:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   35c58:	str	r0, [fp, #-4]
   35c5c:	b	35c7c <flatcc_json_parser_integer@@Base+0x220>
   35c60:	ldr	r0, [sp, #24]
   35c64:	ldr	r1, [sp, #28]
   35c68:	ldr	r2, [fp, #8]
   35c6c:	str	r1, [r2, #4]
   35c70:	str	r0, [r2]
   35c74:	ldr	r0, [fp, #-12]
   35c78:	str	r0, [fp, #-4]
   35c7c:	ldr	r0, [fp, #-4]
   35c80:	mov	sp, fp
   35c84:	pop	{fp, pc}

00035c88 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   35c88:	push	{fp, lr}
   35c8c:	mov	fp, sp
   35c90:	sub	sp, sp, #64	; 0x40
   35c94:	ldr	ip, [fp, #8]
   35c98:	str	r0, [fp, #-8]
   35c9c:	str	r1, [fp, #-12]
   35ca0:	str	r2, [fp, #-16]
   35ca4:	str	r3, [fp, #-20]	; 0xffffffec
   35ca8:	ldr	r0, [fp, #8]
   35cac:	cmp	r0, #0
   35cb0:	movw	r0, #0
   35cb4:	movne	r0, #1
   35cb8:	tst	r0, #1
   35cbc:	movw	r0, #1
   35cc0:	moveq	r0, #0
   35cc4:	str	r0, [sp, #20]
   35cc8:	ldr	r0, [fp, #-8]
   35ccc:	ldr	r1, [fp, #-12]
   35cd0:	ldr	r2, [fp, #-16]
   35cd4:	str	ip, [sp, #12]
   35cd8:	bl	350d8 <flatcc_json_parser_float@@Base+0x2d8>
   35cdc:	str	r0, [fp, #-12]
   35ce0:	ldr	r0, [fp, #-8]
   35ce4:	ldr	r1, [fp, #-12]
   35ce8:	str	r1, [fp, #-24]	; 0xffffffe8
   35cec:	ldr	r2, [fp, #-16]
   35cf0:	bl	3345c <flatcc_json_parser_string_part@@Base>
   35cf4:	str	r0, [fp, #-12]
   35cf8:	ldr	r0, [fp, #-12]
   35cfc:	ldr	r1, [fp, #-16]
   35d00:	cmp	r0, r1
   35d04:	beq	35d18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   35d08:	ldr	r0, [fp, #-12]
   35d0c:	ldrb	r0, [r0]
   35d10:	cmp	r0, #34	; 0x22
   35d14:	beq	35d1c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x94>
   35d18:	b	35ea0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   35d1c:	ldr	r0, [fp, #-12]
   35d20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35d24:	sub	r0, r0, r1
   35d28:	bl	35ee8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x260>
   35d2c:	str	r0, [sp, #32]
   35d30:	ldr	r0, [fp, #-8]
   35d34:	ldr	r0, [r0]
   35d38:	movw	r1, #1
   35d3c:	movw	lr, #1
   35d40:	uxth	r2, lr
   35d44:	mvn	r3, #0
   35d48:	bl	2b678 <flatcc_builder_start_vector@@Base>
   35d4c:	cmp	r0, #0
   35d50:	beq	35d58 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd0>
   35d54:	b	35e78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   35d58:	ldr	r0, [fp, #-8]
   35d5c:	ldr	r0, [r0]
   35d60:	ldr	r1, [sp, #32]
   35d64:	bl	2ab7c <flatcc_builder_extend_vector@@Base>
   35d68:	str	r0, [fp, #-28]	; 0xffffffe4
   35d6c:	movw	r1, #0
   35d70:	cmp	r0, r1
   35d74:	bne	35d7c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf4>
   35d78:	b	35e78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   35d7c:	ldr	r0, [fp, #-12]
   35d80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35d84:	sub	r0, r0, r1
   35d88:	str	r0, [sp, #24]
   35d8c:	ldr	r0, [sp, #32]
   35d90:	str	r0, [sp, #28]
   35d94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   35d98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35d9c:	ldr	r2, [sp, #20]
   35da0:	add	r3, sp, #28
   35da4:	str	r2, [sp, #8]
   35da8:	mov	r2, r3
   35dac:	add	r3, sp, #24
   35db0:	ldr	ip, [sp, #8]
   35db4:	str	ip, [sp]
   35db8:	bl	35f78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f0>
   35dbc:	str	r0, [sp, #16]
   35dc0:	cmp	r0, #0
   35dc4:	beq	35ddc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x154>
   35dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35dcc:	ldr	r1, [sp, #24]
   35dd0:	add	r0, r0, r1
   35dd4:	str	r0, [fp, #-12]
   35dd8:	b	35ea0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   35ddc:	ldr	r0, [sp, #24]
   35de0:	ldr	r1, [fp, #-12]
   35de4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35de8:	sub	r1, r1, r2
   35dec:	cmp	r0, r1
   35df0:	beq	35e08 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x180>
   35df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35df8:	ldr	r1, [sp, #24]
   35dfc:	add	r0, r0, r1
   35e00:	str	r0, [fp, #-12]
   35e04:	b	35ea0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   35e08:	ldr	r0, [sp, #28]
   35e0c:	ldr	r1, [sp, #32]
   35e10:	cmp	r0, r1
   35e14:	bcs	35e40 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   35e18:	ldr	r0, [fp, #-8]
   35e1c:	ldr	r0, [r0]
   35e20:	ldr	r1, [sp, #32]
   35e24:	ldr	r2, [sp, #28]
   35e28:	sub	r1, r1, r2
   35e2c:	bl	2b310 <flatcc_builder_truncate_vector@@Base>
   35e30:	cmp	r0, #0
   35e34:	beq	35e3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b4>
   35e38:	b	35e78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   35e3c:	b	35e40 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   35e40:	ldr	r0, [fp, #-8]
   35e44:	ldr	r0, [r0]
   35e48:	bl	2cb6c <flatcc_builder_end_vector@@Base>
   35e4c:	ldr	lr, [fp, #-20]	; 0xffffffec
   35e50:	str	r0, [lr]
   35e54:	cmp	r0, #0
   35e58:	bne	35e60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d8>
   35e5c:	b	35e78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   35e60:	ldr	r0, [fp, #-8]
   35e64:	ldr	r1, [fp, #-12]
   35e68:	ldr	r2, [fp, #-16]
   35e6c:	bl	35148 <flatcc_json_parser_float@@Base+0x348>
   35e70:	str	r0, [fp, #-4]
   35e74:	b	35edc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   35e78:	ldr	r0, [fp, #-20]	; 0xffffffec
   35e7c:	movw	r1, #0
   35e80:	str	r1, [r0]
   35e84:	ldr	r0, [fp, #-8]
   35e88:	ldr	r1, [fp, #-12]
   35e8c:	ldr	r2, [fp, #-16]
   35e90:	movw	r3, #33	; 0x21
   35e94:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   35e98:	str	r0, [fp, #-4]
   35e9c:	b	35edc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   35ea0:	ldr	r0, [fp, #-20]	; 0xffffffec
   35ea4:	movw	r1, #0
   35ea8:	str	r1, [r0]
   35eac:	ldr	r0, [fp, #-8]
   35eb0:	ldr	r1, [fp, #-12]
   35eb4:	ldr	r2, [fp, #-16]
   35eb8:	ldr	r3, [fp, #8]
   35ebc:	cmp	r3, #0
   35ec0:	movw	r3, #0
   35ec4:	movne	r3, #1
   35ec8:	tst	r3, #1
   35ecc:	movw	r3, #32
   35ed0:	moveq	r3, #31
   35ed4:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   35ed8:	str	r0, [fp, #-4]
   35edc:	ldr	r0, [fp, #-4]
   35ee0:	mov	sp, fp
   35ee4:	pop	{fp, pc}
   35ee8:	sub	sp, sp, #20
   35eec:	str	r0, [sp, #12]
   35ef0:	ldr	r0, [sp, #12]
   35ef4:	and	r0, r0, #3
   35ef8:	str	r0, [sp, #8]
   35efc:	ldr	r0, [sp, #12]
   35f00:	lsr	r0, r0, #2
   35f04:	add	r0, r0, r0, lsl #1
   35f08:	str	r0, [sp, #4]
   35f0c:	ldr	r0, [sp, #8]
   35f10:	cmp	r0, #2
   35f14:	str	r0, [sp]
   35f18:	bcc	35f60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   35f1c:	b	35f20 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x298>
   35f20:	ldr	r0, [sp]
   35f24:	cmp	r0, #2
   35f28:	beq	35f50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c8>
   35f2c:	b	35f30 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2a8>
   35f30:	ldr	r0, [sp]
   35f34:	cmp	r0, #3
   35f38:	bne	35f64 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   35f3c:	b	35f40 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b8>
   35f40:	ldr	r0, [sp, #4]
   35f44:	add	r0, r0, #2
   35f48:	str	r0, [sp, #16]
   35f4c:	b	35f6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   35f50:	ldr	r0, [sp, #4]
   35f54:	add	r0, r0, #1
   35f58:	str	r0, [sp, #16]
   35f5c:	b	35f6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   35f60:	b	35f64 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   35f64:	ldr	r0, [sp, #4]
   35f68:	str	r0, [sp, #16]
   35f6c:	ldr	r0, [sp, #16]
   35f70:	add	sp, sp, #20
   35f74:	bx	lr
   35f78:	push	{fp, lr}
   35f7c:	mov	fp, sp
   35f80:	sub	sp, sp, #72	; 0x48
   35f84:	ldr	ip, [fp, #8]
   35f88:	ldr	lr, [pc, #1280]	; 36490 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x808>
   35f8c:	add	lr, pc, lr
   35f90:	str	r0, [fp, #-4]
   35f94:	str	r1, [fp, #-8]
   35f98:	str	r2, [fp, #-12]
   35f9c:	str	r3, [fp, #-16]
   35fa0:	movw	r0, #0
   35fa4:	str	r0, [fp, #-20]	; 0xffffffec
   35fa8:	ldr	r1, [fp, #-4]
   35fac:	str	r1, [sp, #36]	; 0x24
   35fb0:	mvn	r1, #0
   35fb4:	str	r1, [sp, #32]
   35fb8:	str	r1, [sp, #28]
   35fbc:	str	lr, [sp, #20]
   35fc0:	ldr	r1, [fp, #8]
   35fc4:	and	r1, r1, #32
   35fc8:	str	r1, [sp, #16]
   35fcc:	ldr	r1, [fp, #-16]
   35fd0:	cmp	r1, r0
   35fd4:	str	ip, [sp, #12]
   35fd8:	beq	35fe8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
   35fdc:	ldr	r0, [fp, #-16]
   35fe0:	ldr	r0, [r0]
   35fe4:	str	r0, [sp, #28]
   35fe8:	ldr	r0, [sp, #28]
   35fec:	str	r0, [sp, #24]
   35ff0:	ldr	r0, [fp, #8]
   35ff4:	bic	r0, r0, #224	; 0xe0
   35ff8:	str	r0, [fp, #8]
   35ffc:	ldr	r0, [fp, #8]
   36000:	cmp	r0, #0
   36004:	str	r0, [sp, #8]
   36008:	beq	36020 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   3600c:	b	36010 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x388>
   36010:	ldr	r0, [sp, #8]
   36014:	cmp	r0, #1
   36018:	beq	36050 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c8>
   3601c:	b	36080 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f8>
   36020:	ldr	r0, [pc, #1140]	; 3649c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x814>
   36024:	add	r0, pc, r0
   36028:	ldr	r1, [pc, #1136]	; 364a0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x818>
   3602c:	add	r1, pc, r1
   36030:	ldr	r2, [sp, #16]
   36034:	cmp	r2, #0
   36038:	movw	r2, #0
   3603c:	movne	r2, #1
   36040:	tst	r2, #1
   36044:	movne	r1, r0
   36048:	str	r1, [sp, #20]
   3604c:	b	3608c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x404>
   36050:	ldr	r0, [pc, #1084]	; 36494 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x80c>
   36054:	add	r0, pc, r0
   36058:	ldr	r1, [pc, #1080]	; 36498 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x810>
   3605c:	add	r1, pc, r1
   36060:	ldr	r2, [sp, #16]
   36064:	cmp	r2, #0
   36068:	movw	r2, #0
   3606c:	movne	r2, #1
   36070:	tst	r2, #1
   36074:	movne	r1, r0
   36078:	str	r1, [sp, #20]
   3607c:	b	3608c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x404>
   36080:	movw	r0, #3
   36084:	str	r0, [fp, #-20]	; 0xffffffec
   36088:	b	36310 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   3608c:	ldr	r0, [fp, #-12]
   36090:	movw	r1, #0
   36094:	cmp	r0, r1
   36098:	beq	360b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x430>
   3609c:	ldr	r0, [fp, #-12]
   360a0:	ldr	r0, [r0]
   360a4:	cmp	r0, #0
   360a8:	bls	360b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x430>
   360ac:	ldr	r0, [fp, #-12]
   360b0:	ldr	r0, [r0]
   360b4:	str	r0, [sp, #32]
   360b8:	b	360bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x434>
   360bc:	ldr	r0, [sp, #32]
   360c0:	cmp	r0, #0
   360c4:	bls	3630c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   360c8:	movw	r0, #0
   360cc:	str	r0, [fp, #-24]	; 0xffffffe8
   360d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   360d4:	cmp	r0, #4
   360d8:	bcs	36270 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5e8>
   360dc:	ldr	r0, [sp, #28]
   360e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   360e4:	cmp	r0, r1
   360e8:	bne	36108 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x480>
   360ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   360f0:	str	r0, [fp, #-28]	; 0xffffffe4
   360f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   360f8:	ldr	r1, [sp, #28]
   360fc:	sub	r0, r1, r0
   36100:	str	r0, [sp, #28]
   36104:	b	36364 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6dc>
   36108:	ldr	r0, [sp, #20]
   3610c:	ldr	r1, [fp, #-8]
   36110:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36114:	add	r1, r1, r2
   36118:	ldrb	r1, [r1]
   3611c:	add	r0, r0, r1
   36120:	ldrb	r0, [r0]
   36124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36128:	sub	r2, fp, #32
   3612c:	add	r1, r2, r1
   36130:	strb	r0, [r1]
   36134:	and	r0, r0, #255	; 0xff
   36138:	cmp	r0, #64	; 0x40
   3613c:	blt	3625c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d4>
   36140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36144:	sub	r1, fp, #32
   36148:	add	r0, r1, r0
   3614c:	ldrb	r0, [r0]
   36150:	cmp	r0, #65	; 0x41
   36154:	bne	36184 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4fc>
   36158:	ldr	r0, [fp, #-8]
   3615c:	add	r0, r0, #1
   36160:	str	r0, [fp, #-8]
   36164:	ldr	r0, [sp, #28]
   36168:	mvn	r1, #0
   3616c:	add	r0, r0, r1
   36170:	str	r0, [sp, #28]
   36174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36178:	add	r0, r0, r1
   3617c:	str	r0, [fp, #-24]	; 0xffffffe8
   36180:	b	36260 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d8>
   36184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36188:	str	r0, [fp, #-28]	; 0xffffffe4
   3618c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36190:	sub	r1, fp, #32
   36194:	add	r0, r1, r0
   36198:	ldrb	r0, [r0]
   3619c:	cmp	r0, #66	; 0x42
   361a0:	bne	36248 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5c0>
   361a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   361a8:	add	r0, r0, #1
   361ac:	str	r0, [fp, #-24]	; 0xffffffe8
   361b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   361b4:	ldr	r1, [sp, #28]
   361b8:	cmp	r0, r1
   361bc:	movw	r0, #0
   361c0:	str	r0, [sp, #4]
   361c4:	bcs	361dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x554>
   361c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   361cc:	cmp	r0, #8
   361d0:	movw	r0, #0
   361d4:	movcc	r0, #1
   361d8:	str	r0, [sp, #4]
   361dc:	ldr	r0, [sp, #4]
   361e0:	tst	r0, #1
   361e4:	beq	36244 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5bc>
   361e8:	ldr	r0, [sp, #20]
   361ec:	ldr	r1, [fp, #-8]
   361f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   361f4:	add	r1, r1, r2
   361f8:	ldrb	r1, [r1]
   361fc:	add	r0, r0, r1
   36200:	ldrb	r0, [r0]
   36204:	cmp	r0, #66	; 0x42
   36208:	beq	36234 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5ac>
   3620c:	ldr	r0, [sp, #20]
   36210:	ldr	r1, [fp, #-8]
   36214:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36218:	add	r1, r1, r2
   3621c:	ldrb	r1, [r1]
   36220:	add	r0, r0, r1
   36224:	ldrb	r0, [r0]
   36228:	cmp	r0, #65	; 0x41
   3622c:	beq	36234 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5ac>
   36230:	b	36244 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5bc>
   36234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36238:	add	r0, r0, #1
   3623c:	str	r0, [fp, #-24]	; 0xffffffe8
   36240:	b	361b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x528>
   36244:	b	36248 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5c0>
   36248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3624c:	ldr	r1, [sp, #28]
   36250:	sub	r0, r1, r0
   36254:	str	r0, [sp, #28]
   36258:	b	36364 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6dc>
   3625c:	b	36260 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d8>
   36260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36264:	add	r0, r0, #1
   36268:	str	r0, [fp, #-24]	; 0xffffffe8
   3626c:	b	360d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x448>
   36270:	ldr	r0, [sp, #32]
   36274:	cmp	r0, #3
   36278:	bcs	36280 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5f8>
   3627c:	b	36484 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7fc>
   36280:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   36284:	lsl	r0, r0, #2
   36288:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   3628c:	asr	r1, r1, #4
   36290:	orr	r0, r0, r1
   36294:	ldr	r1, [fp, #-4]
   36298:	strb	r0, [r1]
   3629c:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   362a0:	lsl	r0, r0, #4
   362a4:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   362a8:	asr	r1, r1, #2
   362ac:	orr	r0, r0, r1
   362b0:	ldr	r1, [fp, #-4]
   362b4:	strb	r0, [r1, #1]
   362b8:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   362bc:	lsl	r0, r0, #6
   362c0:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   362c4:	orr	r0, r0, r1
   362c8:	ldr	r1, [fp, #-4]
   362cc:	strb	r0, [r1, #2]
   362d0:	ldr	r0, [fp, #-4]
   362d4:	add	r0, r0, #3
   362d8:	str	r0, [fp, #-4]
   362dc:	ldr	r0, [fp, #-8]
   362e0:	add	r0, r0, #4
   362e4:	str	r0, [fp, #-8]
   362e8:	ldr	r0, [sp, #32]
   362ec:	sub	r0, r0, #3
   362f0:	str	r0, [sp, #32]
   362f4:	ldr	r0, [sp, #28]
   362f8:	sub	r0, r0, #4
   362fc:	str	r0, [sp, #28]
   36300:	ldr	r0, [sp, #28]
   36304:	str	r0, [sp, #24]
   36308:	b	360bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x434>
   3630c:	b	36310 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   36310:	ldr	r0, [fp, #-12]
   36314:	movw	r1, #0
   36318:	cmp	r0, r1
   3631c:	beq	36334 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6ac>
   36320:	ldr	r0, [fp, #-4]
   36324:	ldr	r1, [sp, #36]	; 0x24
   36328:	sub	r0, r0, r1
   3632c:	ldr	r1, [fp, #-12]
   36330:	str	r0, [r1]
   36334:	ldr	r0, [fp, #-16]
   36338:	movw	r1, #0
   3633c:	cmp	r0, r1
   36340:	beq	36358 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6d0>
   36344:	ldr	r0, [sp, #24]
   36348:	ldr	r1, [fp, #-16]
   3634c:	ldr	r2, [r1]
   36350:	sub	r0, r2, r0
   36354:	str	r0, [r1]
   36358:	ldr	r0, [fp, #-20]	; 0xffffffec
   3635c:	mov	sp, fp
   36360:	pop	{fp, pc}
   36364:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36368:	cmp	r0, #0
   3636c:	str	r0, [sp]
   36370:	beq	36398 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x710>
   36374:	b	36378 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6f0>
   36378:	ldr	r0, [sp]
   3637c:	cmp	r0, #2
   36380:	beq	3639c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x714>
   36384:	b	36388 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x700>
   36388:	ldr	r0, [sp]
   3638c:	cmp	r0, #3
   36390:	beq	363f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x768>
   36394:	b	36460 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7d8>
   36398:	b	3646c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e4>
   3639c:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   363a0:	lsl	r0, r0, #4
   363a4:	and	r0, r0, #255	; 0xff
   363a8:	cmp	r0, #0
   363ac:	beq	363b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x72c>
   363b0:	b	36478 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f0>
   363b4:	ldr	r0, [sp, #32]
   363b8:	cmp	r0, #1
   363bc:	bcs	363c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x73c>
   363c0:	b	36484 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7fc>
   363c4:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   363c8:	lsl	r0, r0, #2
   363cc:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   363d0:	asr	r1, r1, #4
   363d4:	orr	r0, r0, r1
   363d8:	ldr	r1, [fp, #-4]
   363dc:	strb	r0, [r1]
   363e0:	ldr	r0, [fp, #-4]
   363e4:	add	r0, r0, #1
   363e8:	str	r0, [fp, #-4]
   363ec:	b	3646c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e4>
   363f0:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   363f4:	lsl	r0, r0, #6
   363f8:	and	r0, r0, #255	; 0xff
   363fc:	cmp	r0, #0
   36400:	beq	36408 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x780>
   36404:	b	36478 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f0>
   36408:	ldr	r0, [sp, #32]
   3640c:	cmp	r0, #2
   36410:	bcs	36418 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x790>
   36414:	b	36484 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7fc>
   36418:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   3641c:	lsl	r0, r0, #2
   36420:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   36424:	asr	r1, r1, #4
   36428:	orr	r0, r0, r1
   3642c:	ldr	r1, [fp, #-4]
   36430:	strb	r0, [r1]
   36434:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   36438:	lsl	r0, r0, #4
   3643c:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   36440:	asr	r1, r1, #2
   36444:	orr	r0, r0, r1
   36448:	ldr	r1, [fp, #-4]
   3644c:	strb	r0, [r1, #1]
   36450:	ldr	r0, [fp, #-4]
   36454:	add	r0, r0, #2
   36458:	str	r0, [fp, #-4]
   3645c:	b	3646c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e4>
   36460:	movw	r0, #4
   36464:	str	r0, [fp, #-20]	; 0xffffffec
   36468:	b	36310 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   3646c:	ldr	r0, [sp, #28]
   36470:	str	r0, [sp, #24]
   36474:	b	36310 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   36478:	movw	r0, #5
   3647c:	str	r0, [fp, #-20]	; 0xffffffec
   36480:	b	36310 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   36484:	movw	r0, #1
   36488:	str	r0, [fp, #-20]	; 0xffffffec
   3648c:	b	36310 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   36490:	andeq	r5, r1, pc, ror #25
   36494:	andeq	r5, r1, r7, lsr #30
   36498:	andeq	r5, r1, pc, lsl sp
   3649c:	andeq	r5, r1, r7, asr lr
   364a0:	andeq	r5, r1, pc, asr #24

000364a4 <flatcc_json_parser_build_string@@Base>:
   364a4:	push	{fp, lr}
   364a8:	mov	fp, sp
   364ac:	sub	sp, sp, #40	; 0x28
   364b0:	str	r0, [fp, #-8]
   364b4:	str	r1, [fp, #-12]
   364b8:	str	r2, [fp, #-16]
   364bc:	str	r3, [sp, #20]
   364c0:	ldr	r0, [fp, #-8]
   364c4:	ldr	r1, [fp, #-12]
   364c8:	ldr	r2, [fp, #-16]
   364cc:	bl	350d8 <flatcc_json_parser_float@@Base+0x2d8>
   364d0:	str	r0, [fp, #-12]
   364d4:	ldr	r0, [fp, #-8]
   364d8:	ldr	r1, [fp, #-12]
   364dc:	str	r1, [sp, #12]
   364e0:	ldr	r2, [fp, #-16]
   364e4:	bl	3345c <flatcc_json_parser_string_part@@Base>
   364e8:	str	r0, [fp, #-12]
   364ec:	ldr	r0, [fp, #-12]
   364f0:	ldr	r1, [fp, #-16]
   364f4:	cmp	r0, r1
   364f8:	beq	36534 <flatcc_json_parser_build_string@@Base+0x90>
   364fc:	ldr	r0, [fp, #-12]
   36500:	ldrb	r0, [r0]
   36504:	cmp	r0, #34	; 0x22
   36508:	bne	36534 <flatcc_json_parser_build_string@@Base+0x90>
   3650c:	ldr	r0, [fp, #-8]
   36510:	ldr	r0, [r0]
   36514:	ldr	r1, [sp, #12]
   36518:	ldr	r2, [fp, #-12]
   3651c:	ldr	r3, [sp, #12]
   36520:	sub	r2, r2, r3
   36524:	bl	2de24 <flatcc_builder_create_string@@Base>
   36528:	ldr	r1, [sp, #20]
   3652c:	str	r0, [r1]
   36530:	b	36674 <flatcc_json_parser_build_string@@Base+0x1d0>
   36534:	ldr	r0, [fp, #-8]
   36538:	ldr	r0, [r0]
   3653c:	bl	2b90c <flatcc_builder_start_string@@Base>
   36540:	cmp	r0, #0
   36544:	bne	36570 <flatcc_json_parser_build_string@@Base+0xcc>
   36548:	ldr	r0, [fp, #-8]
   3654c:	ldr	r0, [r0]
   36550:	ldr	r1, [sp, #12]
   36554:	ldr	r2, [fp, #-12]
   36558:	ldr	r3, [sp, #12]
   3655c:	sub	r2, r2, r3
   36560:	bl	2b164 <flatcc_builder_append_string@@Base>
   36564:	movw	r1, #0
   36568:	cmp	r1, r0
   3656c:	bne	36574 <flatcc_json_parser_build_string@@Base+0xd0>
   36570:	b	3668c <flatcc_json_parser_build_string@@Base+0x1e8>
   36574:	b	36578 <flatcc_json_parser_build_string@@Base+0xd4>
   36578:	ldr	r0, [fp, #-12]
   3657c:	ldr	r1, [fp, #-16]
   36580:	cmp	r0, r1
   36584:	movw	r0, #0
   36588:	str	r0, [sp, #8]
   3658c:	beq	365a8 <flatcc_json_parser_build_string@@Base+0x104>
   36590:	ldr	r0, [fp, #-12]
   36594:	ldrb	r0, [r0]
   36598:	cmp	r0, #34	; 0x22
   3659c:	movw	r0, #0
   365a0:	movne	r0, #1
   365a4:	str	r0, [sp, #8]
   365a8:	ldr	r0, [sp, #8]
   365ac:	tst	r0, #1
   365b0:	beq	36660 <flatcc_json_parser_build_string@@Base+0x1bc>
   365b4:	add	r3, sp, #16
   365b8:	ldr	r0, [fp, #-8]
   365bc:	ldr	r1, [fp, #-12]
   365c0:	ldr	r2, [fp, #-16]
   365c4:	bl	3375c <flatcc_json_parser_string_escape@@Base>
   365c8:	add	r1, sp, #16
   365cc:	str	r0, [fp, #-12]
   365d0:	ldr	r0, [fp, #-8]
   365d4:	ldr	r0, [r0]
   365d8:	add	r1, r1, #1
   365dc:	ldrb	r2, [sp, #16]
   365e0:	bl	2b164 <flatcc_builder_append_string@@Base>
   365e4:	movw	r1, #0
   365e8:	cmp	r1, r0
   365ec:	bne	365f4 <flatcc_json_parser_build_string@@Base+0x150>
   365f0:	b	3668c <flatcc_json_parser_build_string@@Base+0x1e8>
   365f4:	ldr	r0, [fp, #-16]
   365f8:	ldr	r1, [fp, #-8]
   365fc:	ldr	r2, [fp, #-12]
   36600:	str	r2, [sp, #12]
   36604:	ldr	r3, [fp, #-16]
   36608:	str	r0, [sp, #4]
   3660c:	mov	r0, r1
   36610:	mov	r1, r2
   36614:	mov	r2, r3
   36618:	bl	3345c <flatcc_json_parser_string_part@@Base>
   3661c:	str	r0, [fp, #-12]
   36620:	ldr	r1, [sp, #4]
   36624:	cmp	r1, r0
   36628:	beq	3665c <flatcc_json_parser_build_string@@Base+0x1b8>
   3662c:	ldr	r0, [fp, #-8]
   36630:	ldr	r0, [r0]
   36634:	ldr	r1, [sp, #12]
   36638:	ldr	r2, [fp, #-12]
   3663c:	ldr	r3, [sp, #12]
   36640:	sub	r2, r2, r3
   36644:	bl	2b164 <flatcc_builder_append_string@@Base>
   36648:	movw	r1, #0
   3664c:	cmp	r1, r0
   36650:	bne	36658 <flatcc_json_parser_build_string@@Base+0x1b4>
   36654:	b	3668c <flatcc_json_parser_build_string@@Base+0x1e8>
   36658:	b	3665c <flatcc_json_parser_build_string@@Base+0x1b8>
   3665c:	b	36578 <flatcc_json_parser_build_string@@Base+0xd4>
   36660:	ldr	r0, [fp, #-8]
   36664:	ldr	r0, [r0]
   36668:	bl	2e02c <flatcc_builder_end_string@@Base>
   3666c:	ldr	lr, [sp, #20]
   36670:	str	r0, [lr]
   36674:	ldr	r0, [fp, #-8]
   36678:	ldr	r1, [fp, #-12]
   3667c:	ldr	r2, [fp, #-16]
   36680:	bl	35148 <flatcc_json_parser_float@@Base+0x348>
   36684:	str	r0, [fp, #-4]
   36688:	b	366a0 <flatcc_json_parser_build_string@@Base+0x1fc>
   3668c:	ldr	r0, [sp, #20]
   36690:	movw	r1, #0
   36694:	str	r1, [r0]
   36698:	ldr	r0, [fp, #-12]
   3669c:	str	r0, [fp, #-4]
   366a0:	ldr	r0, [fp, #-4]
   366a4:	mov	sp, fp
   366a8:	pop	{fp, pc}

000366ac <flatcc_json_parser_prepare_unions@@Base>:
   366ac:	push	{fp, lr}
   366b0:	mov	fp, sp
   366b4:	sub	sp, sp, #32
   366b8:	ldr	ip, [fp, #8]
   366bc:	str	r0, [fp, #-8]
   366c0:	str	r1, [fp, #-12]
   366c4:	str	r2, [sp, #16]
   366c8:	str	r3, [sp, #12]
   366cc:	ldr	r0, [fp, #-8]
   366d0:	ldr	r0, [r0]
   366d4:	ldr	r1, [sp, #12]
   366d8:	sub	r1, r1, #1
   366dc:	movw	r2, #24
   366e0:	mul	r1, r1, r2
   366e4:	add	r1, r1, #32
   366e8:	str	ip, [sp, #4]
   366ec:	bl	297ac <flatcc_builder_enter_user_frame@@Base>
   366f0:	ldr	r1, [fp, #8]
   366f4:	str	r0, [r1]
   366f8:	cmp	r0, #0
   366fc:	bne	3671c <flatcc_json_parser_prepare_unions@@Base+0x70>
   36700:	ldr	r0, [fp, #-8]
   36704:	ldr	r1, [fp, #-12]
   36708:	ldr	r2, [sp, #16]
   3670c:	movw	r3, #33	; 0x21
   36710:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   36714:	str	r0, [fp, #-4]
   36718:	b	36748 <flatcc_json_parser_prepare_unions@@Base+0x9c>
   3671c:	ldr	r0, [fp, #-8]
   36720:	ldr	r0, [r0]
   36724:	ldr	r1, [fp, #8]
   36728:	ldr	r1, [r1]
   3672c:	bl	299ac <flatcc_builder_get_user_frame_ptr@@Base>
   36730:	str	r0, [sp, #8]
   36734:	ldr	r0, [sp, #12]
   36738:	ldr	r1, [sp, #8]
   3673c:	str	r0, [r1]
   36740:	ldr	r0, [fp, #-12]
   36744:	str	r0, [fp, #-4]
   36748:	ldr	r0, [fp, #-4]
   3674c:	mov	sp, fp
   36750:	pop	{fp, pc}

00036754 <flatcc_json_parser_finalize_unions@@Base>:
   36754:	push	{fp, lr}
   36758:	mov	fp, sp
   3675c:	sub	sp, sp, #24
   36760:	str	r0, [fp, #-4]
   36764:	str	r1, [fp, #-8]
   36768:	str	r2, [sp, #12]
   3676c:	str	r3, [sp, #8]
   36770:	ldr	r0, [fp, #-4]
   36774:	ldr	r0, [r0]
   36778:	ldr	r1, [sp, #8]
   3677c:	bl	299ac <flatcc_builder_get_user_frame_ptr@@Base>
   36780:	str	r0, [sp, #4]
   36784:	ldr	r0, [sp, #4]
   36788:	ldr	r0, [r0, #4]
   3678c:	cmp	r0, #0
   36790:	beq	367ac <flatcc_json_parser_finalize_unions@@Base+0x58>
   36794:	ldr	r0, [fp, #-4]
   36798:	ldr	r1, [fp, #-8]
   3679c:	ldr	r2, [sp, #12]
   367a0:	movw	r3, #27
   367a4:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   367a8:	str	r0, [fp, #-8]
   367ac:	ldr	r0, [fp, #-4]
   367b0:	ldr	r0, [r0]
   367b4:	ldr	r1, [sp, #8]
   367b8:	bl	29920 <flatcc_builder_exit_user_frame_at@@Base>
   367bc:	ldr	r1, [fp, #-8]
   367c0:	str	r0, [sp]
   367c4:	mov	r0, r1
   367c8:	mov	sp, fp
   367cc:	pop	{fp, pc}

000367d0 <flatcc_json_parser_union@@Base>:
   367d0:	push	{r4, sl, fp, lr}
   367d4:	add	fp, sp, #8
   367d8:	sub	sp, sp, #56	; 0x38
   367dc:	ldr	ip, [fp, #16]
   367e0:	ldr	lr, [fp, #12]
   367e4:	ldr	r4, [fp, #8]
   367e8:	str	r0, [fp, #-16]
   367ec:	str	r1, [fp, #-20]	; 0xffffffec
   367f0:	str	r2, [fp, #-24]	; 0xffffffe8
   367f4:	str	r3, [fp, #-28]	; 0xffffffe4
   367f8:	strh	r4, [fp, #-30]	; 0xffffffe2
   367fc:	ldr	r0, [fp, #-16]
   36800:	ldr	r0, [r0]
   36804:	ldr	r1, [fp, #12]
   36808:	str	ip, [sp, #12]
   3680c:	str	lr, [sp, #8]
   36810:	bl	299ac <flatcc_builder_get_user_frame_ptr@@Base>
   36814:	str	r0, [sp, #28]
   36818:	ldr	r0, [sp, #28]
   3681c:	add	r0, r0, #8
   36820:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36824:	movw	r2, #24
   36828:	mul	r1, r1, r2
   3682c:	add	r0, r0, r1
   36830:	str	r0, [sp, #24]
   36834:	ldr	r0, [sp, #24]
   36838:	ldr	r0, [r0]
   3683c:	movw	r1, #0
   36840:	cmp	r0, r1
   36844:	beq	36864 <flatcc_json_parser_union@@Base+0x94>
   36848:	ldr	r0, [fp, #-16]
   3684c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36850:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36854:	movw	r3, #28
   36858:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   3685c:	str	r0, [fp, #-12]
   36860:	b	369b0 <flatcc_json_parser_union@@Base+0x1e0>
   36864:	ldr	r0, [sp, #24]
   36868:	ldrsb	r0, [r0, #12]
   3686c:	cmp	r0, #0
   36870:	bne	368c4 <flatcc_json_parser_union@@Base+0xf4>
   36874:	ldr	r0, [sp, #28]
   36878:	ldr	r1, [r0, #4]
   3687c:	add	r1, r1, #1
   36880:	str	r1, [r0, #4]
   36884:	ldr	r0, [fp, #-16]
   36888:	ldr	r0, [r0, #12]
   3688c:	ldr	r1, [sp, #24]
   36890:	str	r0, [r1, #8]
   36894:	ldr	r0, [fp, #-16]
   36898:	ldr	r0, [r0, #4]
   3689c:	ldr	r1, [sp, #24]
   368a0:	str	r0, [r1, #4]
   368a4:	ldr	r0, [fp, #-16]
   368a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   368ac:	ldr	r2, [sp, #24]
   368b0:	str	r1, [r2]
   368b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   368b8:	bl	345e0 <flatcc_json_parser_generic_json@@Base>
   368bc:	str	r0, [fp, #-20]	; 0xffffffec
   368c0:	b	369a8 <flatcc_json_parser_union@@Base+0x1d8>
   368c4:	ldr	r0, [sp, #24]
   368c8:	ldrb	r0, [r0, #13]
   368cc:	strb	r0, [sp, #16]
   368d0:	ldr	r0, [sp, #24]
   368d4:	ldrb	r0, [r0, #13]
   368d8:	cmp	r0, #0
   368dc:	bne	368fc <flatcc_json_parser_union@@Base+0x12c>
   368e0:	ldr	r0, [fp, #-16]
   368e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   368e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   368ec:	movw	r3, #25
   368f0:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   368f4:	str	r0, [fp, #-12]
   368f8:	b	369b0 <flatcc_json_parser_union@@Base+0x1e0>
   368fc:	ldr	r0, [sp, #28]
   36900:	ldr	r1, [r0, #4]
   36904:	mvn	r2, #0
   36908:	add	r1, r1, r2
   3690c:	str	r1, [r0, #4]
   36910:	ldr	r0, [fp, #16]
   36914:	ldr	r1, [fp, #-16]
   36918:	ldr	r2, [fp, #-20]	; 0xffffffec
   3691c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36920:	ldr	ip, [sp, #24]
   36924:	ldrb	ip, [ip, #13]
   36928:	add	lr, sp, #16
   3692c:	add	lr, lr, #4
   36930:	str	r0, [sp, #4]
   36934:	mov	r0, r1
   36938:	mov	r1, r2
   3693c:	mov	r2, r3
   36940:	and	r3, ip, #255	; 0xff
   36944:	str	lr, [sp]
   36948:	ldr	ip, [sp, #4]
   3694c:	blx	ip
   36950:	str	r0, [fp, #-20]	; 0xffffffec
   36954:	ldr	r0, [fp, #-20]	; 0xffffffec
   36958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3695c:	cmp	r0, r1
   36960:	beq	369a4 <flatcc_json_parser_union@@Base+0x1d4>
   36964:	ldr	r0, [fp, #-16]
   36968:	ldr	r0, [r0]
   3696c:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   36970:	ldr	r2, [sp, #16]
   36974:	ldr	r3, [sp, #20]
   36978:	bl	2d084 <flatcc_builder_table_add_union@@Base>
   3697c:	cmp	r0, #0
   36980:	beq	369a0 <flatcc_json_parser_union@@Base+0x1d0>
   36984:	ldr	r0, [fp, #-16]
   36988:	ldr	r1, [fp, #-20]	; 0xffffffec
   3698c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36990:	movw	r3, #28
   36994:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   36998:	str	r0, [fp, #-12]
   3699c:	b	369b0 <flatcc_json_parser_union@@Base+0x1e0>
   369a0:	b	369a4 <flatcc_json_parser_union@@Base+0x1d4>
   369a4:	b	369a8 <flatcc_json_parser_union@@Base+0x1d8>
   369a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   369ac:	str	r0, [fp, #-12]
   369b0:	ldr	r0, [fp, #-12]
   369b4:	sub	sp, fp, #8
   369b8:	pop	{r4, sl, fp, pc}

000369bc <flatcc_json_parser_union_type@@Base>:
   369bc:	push	{r4, r5, fp, lr}
   369c0:	add	fp, sp, #8
   369c4:	sub	sp, sp, #80	; 0x50
   369c8:	ldr	ip, [fp, #20]
   369cc:	ldr	lr, [fp, #16]
   369d0:	ldr	r4, [fp, #12]
   369d4:	ldr	r5, [fp, #8]
   369d8:	str	r0, [fp, #-16]
   369dc:	str	r1, [fp, #-20]	; 0xffffffec
   369e0:	str	r2, [fp, #-24]	; 0xffffffe8
   369e4:	str	r3, [fp, #-28]	; 0xffffffe4
   369e8:	strh	r5, [fp, #-30]	; 0xffffffe2
   369ec:	ldr	r0, [fp, #-16]
   369f0:	ldr	r0, [r0]
   369f4:	ldr	r1, [fp, #12]
   369f8:	str	r4, [sp, #24]
   369fc:	str	ip, [sp, #20]
   36a00:	str	lr, [sp, #16]
   36a04:	bl	299ac <flatcc_builder_get_user_frame_ptr@@Base>
   36a08:	str	r0, [fp, #-36]	; 0xffffffdc
   36a0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36a10:	add	r0, r0, #8
   36a14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36a18:	movw	r2, #24
   36a1c:	mul	r1, r1, r2
   36a20:	add	r0, r0, r1
   36a24:	str	r0, [fp, #-40]	; 0xffffffd8
   36a28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36a2c:	ldrsb	r0, [r0, #12]
   36a30:	cmp	r0, #0
   36a34:	beq	36a54 <flatcc_json_parser_union_type@@Base+0x98>
   36a38:	ldr	r0, [fp, #-16]
   36a3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36a40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36a44:	movw	r3, #28
   36a48:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   36a4c:	str	r0, [fp, #-12]
   36a50:	b	36c48 <flatcc_json_parser_union_type@@Base+0x28c>
   36a54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36a58:	movw	r1, #1
   36a5c:	strb	r1, [r0, #12]
   36a60:	ldr	r0, [fp, #-16]
   36a64:	ldr	r1, [fp, #-20]	; 0xffffffec
   36a68:	str	r1, [sp, #36]	; 0x24
   36a6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36a70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36a74:	add	r3, r3, #13
   36a78:	bl	36c60 <flatcc_json_parser_union_type@@Base+0x2a4>
   36a7c:	str	r0, [fp, #-20]	; 0xffffffec
   36a80:	ldr	r0, [sp, #36]	; 0x24
   36a84:	ldr	r1, [fp, #-20]	; 0xffffffec
   36a88:	cmp	r0, r1
   36a8c:	bne	36ab4 <flatcc_json_parser_union_type@@Base+0xf8>
   36a90:	ldr	r0, [fp, #-16]
   36a94:	ldr	r1, [fp, #-20]	; 0xffffffec
   36a98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36a9c:	ldr	r3, [fp, #16]
   36aa0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   36aa4:	add	ip, ip, #13
   36aa8:	str	ip, [sp]
   36aac:	bl	36d3c <flatcc_json_parser_union_type@@Base+0x380>
   36ab0:	str	r0, [fp, #-20]	; 0xffffffec
   36ab4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36ab8:	ldr	r0, [r0]
   36abc:	movw	r1, #0
   36ac0:	cmp	r0, r1
   36ac4:	bne	36afc <flatcc_json_parser_union_type@@Base+0x140>
   36ac8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36acc:	ldrb	r0, [r0, #13]
   36ad0:	cmp	r0, #0
   36ad4:	movw	r0, #0
   36ad8:	movne	r0, #1
   36adc:	and	r0, r0, #1
   36ae0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36ae4:	ldr	r2, [r1, #4]
   36ae8:	add	r0, r2, r0
   36aec:	str	r0, [r1, #4]
   36af0:	ldr	r0, [fp, #-20]	; 0xffffffec
   36af4:	str	r0, [fp, #-12]
   36af8:	b	36c48 <flatcc_json_parser_union_type@@Base+0x28c>
   36afc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36b00:	ldr	r0, [r0, #4]
   36b04:	cmp	r0, #0
   36b08:	beq	36b10 <flatcc_json_parser_union_type@@Base+0x154>
   36b0c:	b	36b30 <flatcc_json_parser_union_type@@Base+0x174>
   36b10:	ldr	r0, [pc, #316]	; 36c54 <flatcc_json_parser_union_type@@Base+0x298>
   36b14:	add	r0, pc, r0
   36b18:	ldr	r1, [pc, #312]	; 36c58 <flatcc_json_parser_union_type@@Base+0x29c>
   36b1c:	add	r1, pc, r1
   36b20:	ldr	r2, [pc, #308]	; 36c5c <flatcc_json_parser_union_type@@Base+0x2a0>
   36b24:	add	r3, pc, r2
   36b28:	movw	r2, #965	; 0x3c5
   36b2c:	bl	14f08 <__assert_fail@plt>
   36b30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36b34:	ldr	r1, [r0, #4]
   36b38:	mvn	r2, #0
   36b3c:	add	r1, r1, r2
   36b40:	str	r1, [r0, #4]
   36b44:	ldr	r0, [fp, #-16]
   36b48:	ldr	r0, [r0, #12]
   36b4c:	str	r0, [sp, #32]
   36b50:	ldr	r0, [fp, #-16]
   36b54:	ldr	r0, [r0, #4]
   36b58:	str	r0, [sp, #28]
   36b5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36b60:	ldr	r0, [r0, #8]
   36b64:	ldr	r1, [fp, #-16]
   36b68:	str	r0, [r1, #12]
   36b6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36b70:	ldr	r0, [r0, #4]
   36b74:	ldr	r1, [fp, #-16]
   36b78:	str	r0, [r1, #4]
   36b7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36b80:	ldrb	r0, [r0, #13]
   36b84:	strb	r0, [sp, #40]	; 0x28
   36b88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36b8c:	ldr	r1, [fp, #20]
   36b90:	ldr	r2, [fp, #-16]
   36b94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36b98:	ldr	r3, [r3]
   36b9c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   36ba0:	ldr	lr, [fp, #-40]	; 0xffffffd8
   36ba4:	ldrb	lr, [lr, #13]
   36ba8:	add	r4, sp, #40	; 0x28
   36bac:	add	r4, r4, #4
   36bb0:	str	r0, [sp, #12]
   36bb4:	mov	r0, r2
   36bb8:	str	r1, [sp, #8]
   36bbc:	mov	r1, r3
   36bc0:	mov	r2, ip
   36bc4:	and	r3, lr, #255	; 0xff
   36bc8:	str	r4, [sp]
   36bcc:	ldr	ip, [sp, #8]
   36bd0:	blx	ip
   36bd4:	ldr	r1, [sp, #12]
   36bd8:	cmp	r1, r0
   36bdc:	bne	36bec <flatcc_json_parser_union_type@@Base+0x230>
   36be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36be4:	str	r0, [fp, #-12]
   36be8:	b	36c48 <flatcc_json_parser_union_type@@Base+0x28c>
   36bec:	ldr	r0, [fp, #-16]
   36bf0:	ldr	r0, [r0]
   36bf4:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   36bf8:	ldr	r2, [sp, #40]	; 0x28
   36bfc:	ldr	r3, [sp, #44]	; 0x2c
   36c00:	bl	2d084 <flatcc_builder_table_add_union@@Base>
   36c04:	cmp	r0, #0
   36c08:	beq	36c28 <flatcc_json_parser_union_type@@Base+0x26c>
   36c0c:	ldr	r0, [fp, #-16]
   36c10:	ldr	r1, [fp, #-20]	; 0xffffffec
   36c14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36c18:	movw	r3, #28
   36c1c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   36c20:	str	r0, [fp, #-12]
   36c24:	b	36c48 <flatcc_json_parser_union_type@@Base+0x28c>
   36c28:	ldr	r0, [sp, #32]
   36c2c:	ldr	r1, [fp, #-16]
   36c30:	str	r0, [r1, #12]
   36c34:	ldr	r0, [sp, #28]
   36c38:	ldr	r1, [fp, #-16]
   36c3c:	str	r0, [r1, #4]
   36c40:	ldr	r0, [fp, #-20]	; 0xffffffec
   36c44:	str	r0, [fp, #-12]
   36c48:	ldr	r0, [fp, #-12]
   36c4c:	sub	sp, fp, #8
   36c50:	pop	{r4, r5, fp, pc}
   36c54:	andeq	r4, r1, r2, ror #16
   36c58:	andeq	r4, r1, r9, ror #16
   36c5c:	andeq	r4, r1, r2, asr #17
   36c60:	push	{r4, r5, fp, lr}
   36c64:	add	fp, sp, #8
   36c68:	sub	sp, sp, #56	; 0x38
   36c6c:	str	r0, [fp, #-16]
   36c70:	str	r1, [fp, #-20]	; 0xffffffec
   36c74:	str	r2, [fp, #-24]	; 0xffffffe8
   36c78:	str	r3, [fp, #-28]	; 0xffffffe4
   36c7c:	mov	r0, #0
   36c80:	str	r0, [sp, #28]
   36c84:	str	r0, [sp, #24]
   36c88:	movw	r0, #0
   36c8c:	str	r0, [sp, #20]
   36c90:	ldr	r0, [fp, #-20]	; 0xffffffec
   36c94:	str	r0, [sp, #16]
   36c98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36c9c:	movw	r1, #0
   36ca0:	strb	r1, [r0]
   36ca4:	ldr	r0, [fp, #-20]	; 0xffffffec
   36ca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36cac:	cmp	r0, r1
   36cb0:	bne	36cc0 <flatcc_json_parser_union_type@@Base+0x304>
   36cb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   36cb8:	str	r0, [fp, #-12]
   36cbc:	b	36d30 <flatcc_json_parser_union_type@@Base+0x374>
   36cc0:	ldr	r0, [fp, #-16]
   36cc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   36cc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36ccc:	add	r3, sp, #20
   36cd0:	add	ip, sp, #24
   36cd4:	str	ip, [sp]
   36cd8:	bl	35a5c <flatcc_json_parser_integer@@Base>
   36cdc:	str	r0, [fp, #-20]	; 0xffffffec
   36ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   36ce4:	ldr	r1, [sp, #16]
   36ce8:	cmp	r0, r1
   36cec:	beq	36d28 <flatcc_json_parser_union_type@@Base+0x36c>
   36cf0:	ldr	r0, [fp, #-16]
   36cf4:	ldr	r1, [fp, #-20]	; 0xffffffec
   36cf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36cfc:	ldr	r3, [sp, #20]
   36d00:	ldr	ip, [sp, #24]
   36d04:	ldr	lr, [sp, #28]
   36d08:	ldr	r4, [fp, #-28]	; 0xffffffe4
   36d0c:	mov	r5, sp
   36d10:	str	r4, [r5, #8]
   36d14:	str	lr, [r5, #4]
   36d18:	str	ip, [r5]
   36d1c:	bl	38ca8 <flatcc_json_parser_struct_as_root@@Base+0x125c>
   36d20:	str	r0, [fp, #-12]
   36d24:	b	36d30 <flatcc_json_parser_union_type@@Base+0x374>
   36d28:	ldr	r0, [fp, #-20]	; 0xffffffec
   36d2c:	str	r0, [fp, #-12]
   36d30:	ldr	r0, [fp, #-12]
   36d34:	sub	sp, fp, #8
   36d38:	pop	{r4, r5, fp, pc}
   36d3c:	push	{r4, r5, r6, sl, fp, lr}
   36d40:	add	fp, sp, #16
   36d44:	sub	sp, sp, #80	; 0x50
   36d48:	ldr	ip, [fp, #8]
   36d4c:	str	r0, [fp, #-24]	; 0xffffffe8
   36d50:	str	r1, [fp, #-28]	; 0xffffffe4
   36d54:	str	r2, [fp, #-32]	; 0xffffffe0
   36d58:	str	r3, [fp, #-36]	; 0xffffffdc
   36d5c:	movw	r0, #0
   36d60:	strb	r0, [fp, #-45]	; 0xffffffd3
   36d64:	ldr	r1, [fp, #8]
   36d68:	strb	r0, [r1]
   36d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36d70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36d74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   36d78:	str	ip, [sp, #28]
   36d7c:	bl	38d60 <flatcc_json_parser_struct_as_root@@Base+0x1314>
   36d80:	str	r0, [fp, #-28]	; 0xffffffe4
   36d84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36d88:	ldr	r1, [fp, #-32]	; 0xffffffe0
   36d8c:	cmp	r0, r1
   36d90:	bne	36da0 <flatcc_json_parser_union_type@@Base+0x3e4>
   36d94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36d98:	str	r0, [fp, #-20]	; 0xffffffec
   36d9c:	b	36f14 <flatcc_json_parser_union_type@@Base+0x558>
   36da0:	b	36da4 <flatcc_json_parser_union_type@@Base+0x3e8>
   36da4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36da8:	str	r0, [fp, #-40]	; 0xffffffd8
   36dac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36db0:	ldr	r0, [r0]
   36db4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36db8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   36dbc:	str	r2, [fp, #-44]	; 0xffffffd4
   36dc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36dc4:	str	r0, [sp, #24]
   36dc8:	mov	r0, r1
   36dcc:	mov	r1, r2
   36dd0:	mov	r2, r3
   36dd4:	add	r3, sp, #36	; 0x24
   36dd8:	add	ip, sp, #40	; 0x28
   36ddc:	str	ip, [sp]
   36de0:	add	ip, sp, #32
   36de4:	str	ip, [sp, #4]
   36de8:	ldr	ip, [sp, #24]
   36dec:	blx	ip
   36df0:	str	r0, [fp, #-28]	; 0xffffffe4
   36df4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36df8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   36dfc:	cmp	r0, r1
   36e00:	bne	36e10 <flatcc_json_parser_union_type@@Base+0x454>
   36e04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36e08:	str	r0, [fp, #-20]	; 0xffffffec
   36e0c:	b	36f14 <flatcc_json_parser_union_type@@Base+0x558>
   36e10:	b	36e14 <flatcc_json_parser_union_type@@Base+0x458>
   36e14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36e18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   36e1c:	cmp	r0, r1
   36e20:	movw	r0, #0
   36e24:	str	r0, [sp, #20]
   36e28:	bne	36e50 <flatcc_json_parser_union_type@@Base+0x494>
   36e2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36e30:	add	r1, r0, #4
   36e34:	str	r1, [fp, #-40]	; 0xffffffd8
   36e38:	ldr	r0, [r0, #4]
   36e3c:	movw	r1, #0
   36e40:	cmp	r0, r1
   36e44:	movw	r0, #0
   36e48:	movne	r0, #1
   36e4c:	str	r0, [sp, #20]
   36e50:	ldr	r0, [sp, #20]
   36e54:	tst	r0, #1
   36e58:	bne	36dac <flatcc_json_parser_union_type@@Base+0x3f0>
   36e5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   36e60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36e64:	cmp	r0, r1
   36e68:	bne	36e88 <flatcc_json_parser_union_type@@Base+0x4cc>
   36e6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36e70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36e74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   36e78:	movw	r3, #23
   36e7c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   36e80:	str	r0, [fp, #-20]	; 0xffffffec
   36e84:	b	36f14 <flatcc_json_parser_union_type@@Base+0x558>
   36e88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36e8c:	mov	r1, r0
   36e90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36e94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36e98:	ldr	ip, [sp, #36]	; 0x24
   36e9c:	ldr	lr, [sp, #40]	; 0x28
   36ea0:	ldr	r4, [sp, #44]	; 0x2c
   36ea4:	mov	r5, sp
   36ea8:	sub	r6, fp, #45	; 0x2d
   36eac:	str	r6, [r5, #8]
   36eb0:	str	r4, [r5, #4]
   36eb4:	str	lr, [r5]
   36eb8:	str	r0, [sp, #16]
   36ebc:	mov	r0, r2
   36ec0:	str	r1, [sp, #12]
   36ec4:	mov	r1, r3
   36ec8:	ldr	r2, [sp, #16]
   36ecc:	mov	r3, ip
   36ed0:	bl	38ca8 <flatcc_json_parser_struct_as_root@@Base+0x125c>
   36ed4:	ldr	r1, [sp, #12]
   36ed8:	cmp	r1, r0
   36edc:	bne	36eec <flatcc_json_parser_union_type@@Base+0x530>
   36ee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36ee4:	str	r0, [fp, #-20]	; 0xffffffec
   36ee8:	b	36f14 <flatcc_json_parser_union_type@@Base+0x558>
   36eec:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   36ef0:	ldr	r1, [fp, #8]
   36ef4:	ldrb	r2, [r1]
   36ef8:	add	r0, r2, r0
   36efc:	strb	r0, [r1]
   36f00:	ldr	r0, [sp, #32]
   36f04:	cmp	r0, #0
   36f08:	bne	36da4 <flatcc_json_parser_union_type@@Base+0x3e8>
   36f0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36f10:	str	r0, [fp, #-20]	; 0xffffffec
   36f14:	ldr	r0, [fp, #-20]	; 0xffffffec
   36f18:	sub	sp, fp, #16
   36f1c:	pop	{r4, r5, r6, sl, fp, pc}

00036f20 <flatcc_json_parser_union_vector@@Base>:
   36f20:	push	{r4, sl, fp, lr}
   36f24:	add	fp, sp, #8
   36f28:	sub	sp, sp, #56	; 0x38
   36f2c:	ldr	ip, [fp, #16]
   36f30:	ldr	lr, [fp, #12]
   36f34:	ldr	r4, [fp, #8]
   36f38:	str	r0, [fp, #-16]
   36f3c:	str	r1, [fp, #-20]	; 0xffffffec
   36f40:	str	r2, [fp, #-24]	; 0xffffffe8
   36f44:	str	r3, [fp, #-28]	; 0xffffffe4
   36f48:	strh	r4, [fp, #-30]	; 0xffffffe2
   36f4c:	ldr	r0, [fp, #-16]
   36f50:	ldr	r0, [r0]
   36f54:	ldr	r1, [fp, #12]
   36f58:	str	ip, [sp, #20]
   36f5c:	str	lr, [sp, #16]
   36f60:	bl	299ac <flatcc_builder_get_user_frame_ptr@@Base>
   36f64:	str	r0, [sp, #28]
   36f68:	ldr	r0, [sp, #28]
   36f6c:	add	r0, r0, #8
   36f70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36f74:	movw	r2, #24
   36f78:	mul	r1, r1, r2
   36f7c:	add	r0, r0, r1
   36f80:	str	r0, [sp, #24]
   36f84:	ldr	r0, [sp, #24]
   36f88:	ldr	r0, [r0]
   36f8c:	movw	r1, #0
   36f90:	cmp	r0, r1
   36f94:	beq	36fb4 <flatcc_json_parser_union_vector@@Base+0x94>
   36f98:	ldr	r0, [fp, #-16]
   36f9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36fa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36fa4:	movw	r3, #28
   36fa8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   36fac:	str	r0, [fp, #-12]
   36fb0:	b	3706c <flatcc_json_parser_union_vector@@Base+0x14c>
   36fb4:	ldr	r0, [sp, #24]
   36fb8:	ldrsb	r0, [r0, #12]
   36fbc:	cmp	r0, #0
   36fc0:	bne	37014 <flatcc_json_parser_union_vector@@Base+0xf4>
   36fc4:	ldr	r0, [sp, #28]
   36fc8:	ldr	r1, [r0, #4]
   36fcc:	add	r1, r1, #1
   36fd0:	str	r1, [r0, #4]
   36fd4:	ldr	r0, [fp, #-16]
   36fd8:	ldr	r0, [r0, #12]
   36fdc:	ldr	r1, [sp, #24]
   36fe0:	str	r0, [r1, #8]
   36fe4:	ldr	r0, [fp, #-16]
   36fe8:	ldr	r0, [r0, #4]
   36fec:	ldr	r1, [sp, #24]
   36ff0:	str	r0, [r1, #4]
   36ff4:	ldr	r0, [fp, #-16]
   36ff8:	ldr	r1, [fp, #-20]	; 0xffffffec
   36ffc:	ldr	r2, [sp, #24]
   37000:	str	r1, [r2]
   37004:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37008:	bl	345e0 <flatcc_json_parser_generic_json@@Base>
   3700c:	str	r0, [fp, #-20]	; 0xffffffec
   37010:	b	37064 <flatcc_json_parser_union_vector@@Base+0x144>
   37014:	ldr	r0, [sp, #28]
   37018:	ldr	r1, [r0, #4]
   3701c:	mvn	r2, #0
   37020:	add	r1, r1, r2
   37024:	str	r1, [r0, #4]
   37028:	ldr	r0, [fp, #-16]
   3702c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37034:	ldr	r3, [sp, #24]
   37038:	ldr	r3, [r3, #20]
   3703c:	ldr	ip, [sp, #24]
   37040:	ldr	ip, [ip, #16]
   37044:	ldrh	lr, [fp, #-30]	; 0xffffffe2
   37048:	ldr	r4, [fp, #16]
   3704c:	str	ip, [sp]
   37050:	uxth	ip, lr
   37054:	str	ip, [sp, #4]
   37058:	str	r4, [sp, #8]
   3705c:	bl	37078 <flatcc_json_parser_union_vector@@Base+0x158>
   37060:	str	r0, [fp, #-20]	; 0xffffffec
   37064:	ldr	r0, [fp, #-20]	; 0xffffffec
   37068:	str	r0, [fp, #-12]
   3706c:	ldr	r0, [fp, #-12]
   37070:	sub	sp, fp, #8
   37074:	pop	{r4, sl, fp, pc}
   37078:	push	{r4, sl, fp, lr}
   3707c:	add	fp, sp, #8
   37080:	sub	sp, sp, #64	; 0x40
   37084:	ldr	ip, [fp, #16]
   37088:	ldr	lr, [fp, #12]
   3708c:	ldr	r4, [fp, #8]
   37090:	str	r0, [fp, #-16]
   37094:	str	r1, [fp, #-20]	; 0xffffffec
   37098:	str	r2, [fp, #-24]	; 0xffffffe8
   3709c:	str	r3, [fp, #-28]	; 0xffffffe4
   370a0:	strh	lr, [fp, #-30]	; 0xffffffe2
   370a4:	movw	r0, #0
   370a8:	str	r0, [sp, #36]	; 0x24
   370ac:	ldr	r0, [fp, #-16]
   370b0:	ldr	r0, [r0]
   370b4:	str	r4, [sp, #16]
   370b8:	str	ip, [sp, #12]
   370bc:	bl	2b758 <flatcc_builder_start_offset_vector@@Base>
   370c0:	cmp	r0, #0
   370c4:	beq	370cc <flatcc_json_parser_union_vector@@Base+0x1ac>
   370c8:	b	37288 <flatcc_json_parser_union_vector@@Base+0x368>
   370cc:	ldr	r0, [fp, #-16]
   370d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   370d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   370d8:	add	r3, sp, #24
   370dc:	bl	37738 <flatcc_json_parser_union_type_vector@@Base+0x48c>
   370e0:	str	r0, [fp, #-20]	; 0xffffffec
   370e4:	movw	r0, #0
   370e8:	str	r0, [sp, #20]
   370ec:	ldr	r0, [sp, #24]
   370f0:	cmp	r0, #0
   370f4:	beq	371ec <flatcc_json_parser_union_vector@@Base+0x2cc>
   370f8:	ldr	r0, [sp, #20]
   370fc:	ldr	r1, [fp, #8]
   37100:	cmp	r0, r1
   37104:	bne	37124 <flatcc_json_parser_union_vector@@Base+0x204>
   37108:	ldr	r0, [fp, #-16]
   3710c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37110:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37114:	movw	r3, #30
   37118:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   3711c:	str	r0, [fp, #-12]
   37120:	b	372a0 <flatcc_json_parser_union_vector@@Base+0x380>
   37124:	ldr	r0, [fp, #-16]
   37128:	ldr	r0, [r0]
   3712c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37130:	bl	299ac <flatcc_builder_get_user_frame_ptr@@Base>
   37134:	str	r0, [sp, #28]
   37138:	ldr	r0, [fp, #16]
   3713c:	ldr	r1, [fp, #-16]
   37140:	ldr	lr, [fp, #-20]	; 0xffffffec
   37144:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37148:	ldr	r3, [sp, #28]
   3714c:	ldr	ip, [sp, #20]
   37150:	add	r3, r3, ip
   37154:	str	r0, [sp, #8]
   37158:	mov	r0, r1
   3715c:	mov	r1, lr
   37160:	ldrb	r3, [r3]
   37164:	add	ip, sp, #36	; 0x24
   37168:	str	ip, [sp]
   3716c:	ldr	ip, [sp, #8]
   37170:	blx	ip
   37174:	str	r0, [fp, #-20]	; 0xffffffec
   37178:	ldr	r0, [fp, #-20]	; 0xffffffec
   3717c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37180:	cmp	r0, r1
   37184:	bne	37194 <flatcc_json_parser_union_vector@@Base+0x274>
   37188:	ldr	r0, [fp, #-20]	; 0xffffffec
   3718c:	str	r0, [fp, #-12]
   37190:	b	372a0 <flatcc_json_parser_union_vector@@Base+0x380>
   37194:	ldr	r0, [fp, #-16]
   37198:	ldr	r0, [r0]
   3719c:	movw	r1, #1
   371a0:	bl	2aeec <flatcc_builder_extend_offset_vector@@Base>
   371a4:	str	r0, [sp, #32]
   371a8:	movw	r1, #0
   371ac:	cmp	r0, r1
   371b0:	bne	371b8 <flatcc_json_parser_union_vector@@Base+0x298>
   371b4:	b	37288 <flatcc_json_parser_union_vector@@Base+0x368>
   371b8:	ldr	r0, [sp, #36]	; 0x24
   371bc:	ldr	r1, [sp, #32]
   371c0:	str	r0, [r1]
   371c4:	ldr	r0, [fp, #-16]
   371c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   371cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   371d0:	add	r3, sp, #24
   371d4:	bl	35794 <flatcc_json_parser_float@@Base+0x994>
   371d8:	str	r0, [fp, #-20]	; 0xffffffec
   371dc:	ldr	r0, [sp, #20]
   371e0:	add	r0, r0, #1
   371e4:	str	r0, [sp, #20]
   371e8:	b	370ec <flatcc_json_parser_union_vector@@Base+0x1cc>
   371ec:	ldr	r0, [sp, #20]
   371f0:	ldr	r1, [fp, #8]
   371f4:	cmp	r0, r1
   371f8:	beq	37218 <flatcc_json_parser_union_vector@@Base+0x2f8>
   371fc:	ldr	r0, [fp, #-16]
   37200:	ldr	r1, [fp, #-20]	; 0xffffffec
   37204:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37208:	movw	r3, #30
   3720c:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   37210:	str	r0, [fp, #-12]
   37214:	b	372a0 <flatcc_json_parser_union_vector@@Base+0x380>
   37218:	ldr	r0, [fp, #-16]
   3721c:	ldr	r0, [r0]
   37220:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37224:	bl	299ac <flatcc_builder_get_user_frame_ptr@@Base>
   37228:	str	r0, [sp, #28]
   3722c:	ldr	r0, [fp, #-16]
   37230:	ldr	r0, [r0]
   37234:	ldr	r1, [sp, #28]
   37238:	bl	2cfa0 <flatcc_builder_end_offset_vector_for_unions@@Base>
   3723c:	str	r0, [sp, #36]	; 0x24
   37240:	cmp	r0, #0
   37244:	bne	3724c <flatcc_json_parser_union_vector@@Base+0x32c>
   37248:	b	37288 <flatcc_json_parser_union_vector@@Base+0x368>
   3724c:	ldr	r0, [fp, #-16]
   37250:	ldr	r0, [r0]
   37254:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   37258:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   3725c:	str	r0, [sp, #32]
   37260:	movw	r1, #0
   37264:	cmp	r0, r1
   37268:	bne	37270 <flatcc_json_parser_union_vector@@Base+0x350>
   3726c:	b	37288 <flatcc_json_parser_union_vector@@Base+0x368>
   37270:	ldr	r0, [sp, #36]	; 0x24
   37274:	ldr	r1, [sp, #32]
   37278:	str	r0, [r1]
   3727c:	ldr	r0, [fp, #-20]	; 0xffffffec
   37280:	str	r0, [fp, #-12]
   37284:	b	372a0 <flatcc_json_parser_union_vector@@Base+0x380>
   37288:	ldr	r0, [fp, #-16]
   3728c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37290:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37294:	movw	r3, #33	; 0x21
   37298:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   3729c:	str	r0, [fp, #-12]
   372a0:	ldr	r0, [fp, #-12]
   372a4:	sub	sp, fp, #8
   372a8:	pop	{r4, sl, fp, pc}

000372ac <flatcc_json_parser_union_type_vector@@Base>:
   372ac:	push	{r4, r5, r6, sl, fp, lr}
   372b0:	add	fp, sp, #16
   372b4:	sub	sp, sp, #128	; 0x80
   372b8:	ldr	ip, [fp, #24]
   372bc:	ldr	lr, [fp, #20]
   372c0:	ldr	r4, [fp, #16]
   372c4:	ldr	r5, [fp, #12]
   372c8:	ldr	r6, [fp, #8]
   372cc:	str	r0, [fp, #-24]	; 0xffffffe8
   372d0:	str	r1, [fp, #-28]	; 0xffffffe4
   372d4:	str	r2, [fp, #-32]	; 0xffffffe0
   372d8:	str	r3, [fp, #-36]	; 0xffffffdc
   372dc:	strh	r6, [fp, #-38]	; 0xffffffda
   372e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   372e4:	ldr	r0, [r0]
   372e8:	ldr	r1, [fp, #12]
   372ec:	str	ip, [sp, #44]	; 0x2c
   372f0:	str	lr, [sp, #40]	; 0x28
   372f4:	str	r4, [sp, #36]	; 0x24
   372f8:	str	r5, [sp, #32]
   372fc:	bl	299ac <flatcc_builder_get_user_frame_ptr@@Base>
   37300:	str	r0, [fp, #-44]	; 0xffffffd4
   37304:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37308:	add	r0, r0, #8
   3730c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   37310:	movw	r2, #24
   37314:	mul	r1, r1, r2
   37318:	add	r0, r0, r1
   3731c:	str	r0, [fp, #-48]	; 0xffffffd0
   37320:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37324:	ldrsb	r0, [r0, #12]
   37328:	cmp	r0, #0
   3732c:	beq	3734c <flatcc_json_parser_union_type_vector@@Base+0xa0>
   37330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37334:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37338:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3733c:	movw	r3, #28
   37340:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   37344:	str	r0, [fp, #-20]	; 0xffffffec
   37348:	b	37720 <flatcc_json_parser_union_type_vector@@Base+0x474>
   3734c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37350:	movw	r1, #1
   37354:	strb	r1, [r0, #12]
   37358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3735c:	ldr	r0, [r0]
   37360:	movw	r1, #1
   37364:	movw	r2, #1
   37368:	uxth	r2, r2
   3736c:	mvn	r3, #0
   37370:	bl	2b678 <flatcc_builder_start_vector@@Base>
   37374:	cmp	r0, #0
   37378:	beq	37380 <flatcc_json_parser_union_type_vector@@Base+0xd4>
   3737c:	b	37708 <flatcc_json_parser_union_type_vector@@Base+0x45c>
   37380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37384:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37388:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3738c:	sub	r3, fp, #64	; 0x40
   37390:	bl	37738 <flatcc_json_parser_union_type_vector@@Base+0x48c>
   37394:	str	r0, [fp, #-28]	; 0xffffffe4
   37398:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3739c:	cmp	r0, #0
   373a0:	beq	374c0 <flatcc_json_parser_union_type_vector@@Base+0x214>
   373a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   373a8:	ldr	r0, [r0]
   373ac:	movw	r1, #1
   373b0:	bl	2ab7c <flatcc_builder_extend_vector@@Base>
   373b4:	str	r0, [sp, #72]	; 0x48
   373b8:	movw	r1, #0
   373bc:	cmp	r0, r1
   373c0:	bne	373c8 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   373c4:	b	37708 <flatcc_json_parser_union_type_vector@@Base+0x45c>
   373c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   373cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   373d0:	str	r1, [fp, #-52]	; 0xffffffcc
   373d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   373d8:	sub	r3, fp, #65	; 0x41
   373dc:	bl	36c60 <flatcc_json_parser_union_type@@Base+0x2a4>
   373e0:	str	r0, [fp, #-28]	; 0xffffffe4
   373e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   373e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   373ec:	cmp	r0, r1
   373f0:	bne	37440 <flatcc_json_parser_union_type_vector@@Base+0x194>
   373f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   373f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   373fc:	str	r1, [fp, #-52]	; 0xffffffcc
   37400:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37404:	ldr	r3, [fp, #16]
   37408:	sub	ip, fp, #65	; 0x41
   3740c:	str	ip, [sp]
   37410:	bl	36d3c <flatcc_json_parser_union_type@@Base+0x380>
   37414:	str	r0, [fp, #-28]	; 0xffffffe4
   37418:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3741c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37420:	cmp	r0, r1
   37424:	beq	37438 <flatcc_json_parser_union_type_vector@@Base+0x18c>
   37428:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3742c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   37430:	cmp	r0, r1
   37434:	bne	3743c <flatcc_json_parser_union_type_vector@@Base+0x190>
   37438:	b	37708 <flatcc_json_parser_union_type_vector@@Base+0x45c>
   3743c:	b	37440 <flatcc_json_parser_union_type_vector@@Base+0x194>
   37440:	ldr	r0, [fp, #24]
   37444:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   37448:	str	r0, [sp, #28]
   3744c:	mov	r0, r1
   37450:	ldr	r1, [sp, #28]
   37454:	blx	r1
   37458:	cmp	r0, #0
   3745c:	bne	37498 <flatcc_json_parser_union_type_vector@@Base+0x1ec>
   37460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37464:	ldr	r0, [r0, #8]
   37468:	and	r0, r0, #1
   3746c:	cmp	r0, #0
   37470:	bne	37490 <flatcc_json_parser_union_type_vector@@Base+0x1e4>
   37474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37478:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3747c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37480:	movw	r3, #15
   37484:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   37488:	str	r0, [fp, #-20]	; 0xffffffec
   3748c:	b	37720 <flatcc_json_parser_union_type_vector@@Base+0x474>
   37490:	movw	r0, #0
   37494:	strb	r0, [fp, #-65]	; 0xffffffbf
   37498:	ldr	r0, [sp, #72]	; 0x48
   3749c:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   374a0:	bl	3781c <flatcc_json_parser_union_type_vector@@Base+0x570>
   374a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   374a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   374ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   374b0:	sub	r3, fp, #64	; 0x40
   374b4:	bl	35794 <flatcc_json_parser_float@@Base+0x994>
   374b8:	str	r0, [fp, #-28]	; 0xffffffe4
   374bc:	b	37398 <flatcc_json_parser_union_type_vector@@Base+0xec>
   374c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   374c4:	ldr	r0, [r0]
   374c8:	bl	2cc40 <flatcc_builder_vector_count@@Base>
   374cc:	str	r0, [sp, #48]	; 0x30
   374d0:	ldr	r0, [sp, #48]	; 0x30
   374d4:	ldr	lr, [fp, #-48]	; 0xffffffd0
   374d8:	str	r0, [lr, #16]
   374dc:	ldr	r0, [sp, #48]	; 0x30
   374e0:	mov	lr, r0
   374e4:	str	r0, [sp, #56]	; 0x38
   374e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   374ec:	ldr	r0, [r0]
   374f0:	ldr	r1, [sp, #56]	; 0x38
   374f4:	str	lr, [sp, #24]
   374f8:	bl	297ac <flatcc_builder_enter_user_frame@@Base>
   374fc:	str	r0, [sp, #52]	; 0x34
   37500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37504:	ldr	r0, [r0]
   37508:	ldr	r1, [sp, #52]	; 0x34
   3750c:	bl	299ac <flatcc_builder_get_user_frame_ptr@@Base>
   37510:	str	r0, [sp, #60]	; 0x3c
   37514:	ldr	r0, [sp, #60]	; 0x3c
   37518:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3751c:	ldr	r1, [r1]
   37520:	str	r0, [sp, #20]
   37524:	mov	r0, r1
   37528:	bl	2cc5c <flatcc_builder_vector_edit@@Base>
   3752c:	ldr	r2, [sp, #56]	; 0x38
   37530:	ldr	r1, [sp, #20]
   37534:	str	r0, [sp, #16]
   37538:	mov	r0, r1
   3753c:	ldr	r1, [sp, #16]
   37540:	bl	14e30 <memcpy@plt>
   37544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37548:	ldr	r0, [r0]
   3754c:	bl	2cb6c <flatcc_builder_end_vector@@Base>
   37550:	str	r0, [sp, #68]	; 0x44
   37554:	cmp	r0, #0
   37558:	bne	37560 <flatcc_json_parser_union_type_vector@@Base+0x2b4>
   3755c:	b	37708 <flatcc_json_parser_union_type_vector@@Base+0x45c>
   37560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37564:	ldr	r0, [r0]
   37568:	ldrh	r1, [fp, #-38]	; 0xffffffda
   3756c:	sub	r1, r1, #1
   37570:	bl	2d274 <flatcc_builder_table_add_offset@@Base>
   37574:	str	r0, [sp, #64]	; 0x40
   37578:	movw	r1, #0
   3757c:	cmp	r0, r1
   37580:	bne	37588 <flatcc_json_parser_union_type_vector@@Base+0x2dc>
   37584:	b	37708 <flatcc_json_parser_union_type_vector@@Base+0x45c>
   37588:	ldr	r0, [sp, #68]	; 0x44
   3758c:	ldr	r1, [sp, #64]	; 0x40
   37590:	str	r0, [r1]
   37594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37598:	ldr	r0, [r0]
   3759c:	ldr	r1, [fp, #12]
   375a0:	bl	299ac <flatcc_builder_get_user_frame_ptr@@Base>
   375a4:	str	r0, [fp, #-44]	; 0xffffffd4
   375a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   375ac:	add	r0, r0, #8
   375b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   375b4:	movw	lr, #24
   375b8:	mul	r1, r1, lr
   375bc:	add	r0, r0, r1
   375c0:	str	r0, [fp, #-48]	; 0xffffffd0
   375c4:	ldr	r0, [sp, #52]	; 0x34
   375c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   375cc:	str	r0, [r1, #20]
   375d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   375d4:	ldr	r0, [r0]
   375d8:	movw	r1, #0
   375dc:	cmp	r0, r1
   375e0:	bne	37600 <flatcc_json_parser_union_type_vector@@Base+0x354>
   375e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   375e8:	ldr	r1, [r0, #4]
   375ec:	add	r1, r1, #1
   375f0:	str	r1, [r0, #4]
   375f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   375f8:	str	r0, [fp, #-20]	; 0xffffffec
   375fc:	b	37720 <flatcc_json_parser_union_type_vector@@Base+0x474>
   37600:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37604:	ldr	r0, [r0, #4]
   37608:	cmp	r0, #0
   3760c:	beq	37614 <flatcc_json_parser_union_type_vector@@Base+0x368>
   37610:	b	37634 <flatcc_json_parser_union_type_vector@@Base+0x388>
   37614:	ldr	r0, [pc, #272]	; 3772c <flatcc_json_parser_union_type_vector@@Base+0x480>
   37618:	add	r0, pc, r0
   3761c:	ldr	r1, [pc, #268]	; 37730 <flatcc_json_parser_union_type_vector@@Base+0x484>
   37620:	add	r1, pc, r1
   37624:	ldr	r2, [pc, #264]	; 37734 <flatcc_json_parser_union_type_vector@@Base+0x488>
   37628:	add	r3, pc, r2
   3762c:	movw	r2, #1122	; 0x462
   37630:	bl	14f08 <__assert_fail@plt>
   37634:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37638:	ldr	r1, [r0, #4]
   3763c:	mvn	r2, #0
   37640:	add	r1, r1, r2
   37644:	str	r1, [r0, #4]
   37648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3764c:	ldr	r0, [r0, #12]
   37650:	str	r0, [fp, #-56]	; 0xffffffc8
   37654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37658:	ldr	r0, [r0, #4]
   3765c:	str	r0, [fp, #-60]	; 0xffffffc4
   37660:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37664:	ldr	r0, [r0, #8]
   37668:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3766c:	str	r0, [r1, #12]
   37670:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37674:	ldr	r0, [r0, #4]
   37678:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3767c:	str	r0, [r1, #4]
   37680:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37684:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37688:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3768c:	ldr	r2, [r2]
   37690:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37694:	ldr	ip, [sp, #52]	; 0x34
   37698:	ldr	lr, [sp, #48]	; 0x30
   3769c:	ldrh	r4, [fp, #-38]	; 0xffffffda
   376a0:	ldr	r5, [fp, #20]
   376a4:	str	r0, [sp, #12]
   376a8:	mov	r0, r1
   376ac:	mov	r1, r2
   376b0:	mov	r2, r3
   376b4:	mov	r3, ip
   376b8:	str	lr, [sp]
   376bc:	uxth	ip, r4
   376c0:	str	ip, [sp, #4]
   376c4:	str	r5, [sp, #8]
   376c8:	bl	37078 <flatcc_json_parser_union_vector@@Base+0x158>
   376cc:	ldr	r1, [sp, #12]
   376d0:	cmp	r1, r0
   376d4:	bne	376e4 <flatcc_json_parser_union_type_vector@@Base+0x438>
   376d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   376dc:	str	r0, [fp, #-20]	; 0xffffffec
   376e0:	b	37720 <flatcc_json_parser_union_type_vector@@Base+0x474>
   376e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   376e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   376ec:	str	r0, [r1, #12]
   376f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   376f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   376f8:	str	r0, [r1, #4]
   376fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37700:	str	r0, [fp, #-20]	; 0xffffffec
   37704:	b	37720 <flatcc_json_parser_union_type_vector@@Base+0x474>
   37708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3770c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37710:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37714:	movw	r3, #33	; 0x21
   37718:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   3771c:	str	r0, [fp, #-20]	; 0xffffffec
   37720:	ldr	r0, [fp, #-20]	; 0xffffffec
   37724:	sub	sp, fp, #16
   37728:	pop	{r4, r5, r6, sl, fp, pc}
   3772c:	andeq	r3, r1, lr, asr sp
   37730:	andeq	r3, r1, r5, ror #26
   37734:	andeq	r3, r1, sl, lsl #29
   37738:	push	{fp, lr}
   3773c:	mov	fp, sp
   37740:	sub	sp, sp, #24
   37744:	str	r0, [fp, #-8]
   37748:	str	r1, [sp, #12]
   3774c:	str	r2, [sp, #8]
   37750:	str	r3, [sp, #4]
   37754:	ldr	r0, [sp, #12]
   37758:	ldr	r1, [sp, #8]
   3775c:	cmp	r0, r1
   37760:	beq	37774 <flatcc_json_parser_union_type_vector@@Base+0x4c8>
   37764:	ldr	r0, [sp, #12]
   37768:	ldrb	r0, [r0]
   3776c:	cmp	r0, #91	; 0x5b
   37770:	beq	3779c <flatcc_json_parser_union_type_vector@@Base+0x4f0>
   37774:	ldr	r0, [sp, #4]
   37778:	movw	r1, #0
   3777c:	str	r1, [r0]
   37780:	ldr	r0, [fp, #-8]
   37784:	ldr	r1, [sp, #12]
   37788:	ldr	r2, [sp, #8]
   3778c:	movw	r3, #22
   37790:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   37794:	str	r0, [fp, #-4]
   37798:	b	37810 <flatcc_json_parser_union_type_vector@@Base+0x564>
   3779c:	ldr	r0, [fp, #-8]
   377a0:	ldr	r1, [sp, #12]
   377a4:	add	r1, r1, #1
   377a8:	ldr	r2, [sp, #8]
   377ac:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   377b0:	str	r0, [sp, #12]
   377b4:	ldr	r0, [sp, #12]
   377b8:	ldr	r1, [sp, #8]
   377bc:	cmp	r0, r1
   377c0:	beq	377fc <flatcc_json_parser_union_type_vector@@Base+0x550>
   377c4:	ldr	r0, [sp, #12]
   377c8:	ldrb	r0, [r0]
   377cc:	cmp	r0, #93	; 0x5d
   377d0:	bne	377fc <flatcc_json_parser_union_type_vector@@Base+0x550>
   377d4:	ldr	r0, [sp, #4]
   377d8:	movw	r1, #0
   377dc:	str	r1, [r0]
   377e0:	ldr	r0, [fp, #-8]
   377e4:	ldr	r1, [sp, #12]
   377e8:	add	r1, r1, #1
   377ec:	ldr	r2, [sp, #8]
   377f0:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   377f4:	str	r0, [fp, #-4]
   377f8:	b	37810 <flatcc_json_parser_union_type_vector@@Base+0x564>
   377fc:	ldr	r0, [sp, #4]
   37800:	movw	r1, #1
   37804:	str	r1, [r0]
   37808:	ldr	r0, [sp, #12]
   3780c:	str	r0, [fp, #-4]
   37810:	ldr	r0, [fp, #-4]
   37814:	mov	sp, fp
   37818:	pop	{fp, pc}
   3781c:	push	{fp, lr}
   37820:	mov	fp, sp
   37824:	sub	sp, sp, #8
   37828:	str	r0, [sp, #4]
   3782c:	strb	r1, [sp, #3]
   37830:	ldrb	r0, [sp, #3]
   37834:	bl	38dac <flatcc_json_parser_struct_as_root@@Base+0x1360>
   37838:	ldr	r1, [sp, #4]
   3783c:	strb	r0, [r1]
   37840:	mov	sp, fp
   37844:	pop	{fp, pc}

00037848 <flatcc_json_parser_table_as_root@@Base>:
   37848:	push	{r4, sl, fp, lr}
   3784c:	add	fp, sp, #8
   37850:	sub	sp, sp, #96	; 0x60
   37854:	ldr	ip, [fp, #16]
   37858:	ldr	lr, [fp, #12]
   3785c:	ldr	r4, [fp, #8]
   37860:	str	r0, [fp, #-16]
   37864:	str	r1, [fp, #-20]	; 0xffffffec
   37868:	str	r2, [fp, #-24]	; 0xffffffe8
   3786c:	str	r3, [fp, #-28]	; 0xffffffe4
   37870:	ldr	r0, [fp, #8]
   37874:	and	r0, r0, #4
   37878:	cmp	r0, #0
   3787c:	movw	r0, #0
   37880:	movne	r0, #1
   37884:	tst	r0, #1
   37888:	movw	r0, #2
   3788c:	moveq	r0, #0
   37890:	str	r0, [sp, #28]
   37894:	ldr	r0, [fp, #-20]	; 0xffffffec
   37898:	movw	r1, #0
   3789c:	cmp	r0, r1
   378a0:	str	r4, [sp, #24]
   378a4:	str	lr, [sp, #20]
   378a8:	str	ip, [sp, #16]
   378ac:	beq	378bc <flatcc_json_parser_table_as_root@@Base+0x74>
   378b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   378b4:	str	r0, [sp, #12]
   378b8:	b	378c8 <flatcc_json_parser_table_as_root@@Base+0x80>
   378bc:	add	r0, sp, #36	; 0x24
   378c0:	str	r0, [sp, #12]
   378c4:	b	378c8 <flatcc_json_parser_table_as_root@@Base+0x80>
   378c8:	ldr	r0, [sp, #12]
   378cc:	str	r0, [fp, #-20]	; 0xffffffec
   378d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   378d4:	ldr	r1, [fp, #-16]
   378d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   378dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   378e0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   378e4:	add	r3, r3, ip
   378e8:	ldr	ip, [fp, #8]
   378ec:	str	ip, [sp]
   378f0:	bl	379b8 <flatcc_json_parser_table_as_root@@Base+0x170>
   378f4:	ldr	r0, [fp, #-16]
   378f8:	ldr	r1, [fp, #12]
   378fc:	ldr	r3, [sp, #28]
   37900:	movw	r2, #0
   37904:	uxth	r2, r2
   37908:	bl	2a3b8 <flatcc_builder_start_buffer@@Base>
   3790c:	cmp	r0, #0
   37910:	beq	37920 <flatcc_json_parser_table_as_root@@Base+0xd8>
   37914:	mvn	r0, #0
   37918:	str	r0, [fp, #-12]
   3791c:	b	379ac <flatcc_json_parser_table_as_root@@Base+0x164>
   37920:	ldr	r0, [fp, #16]
   37924:	ldr	r1, [fp, #-20]	; 0xffffffec
   37928:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3792c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37930:	ldr	ip, [fp, #-28]	; 0xffffffe4
   37934:	add	r3, r3, ip
   37938:	str	r0, [sp, #8]
   3793c:	mov	r0, r1
   37940:	mov	r1, r2
   37944:	mov	r2, r3
   37948:	add	r3, sp, #32
   3794c:	ldr	ip, [sp, #8]
   37950:	blx	ip
   37954:	ldr	r1, [fp, #-20]	; 0xffffffec
   37958:	ldr	r1, [r1, #20]
   3795c:	cmp	r1, #0
   37960:	str	r0, [sp, #4]
   37964:	beq	37978 <flatcc_json_parser_table_as_root@@Base+0x130>
   37968:	ldr	r0, [fp, #-20]	; 0xffffffec
   3796c:	ldr	r0, [r0, #20]
   37970:	str	r0, [fp, #-12]
   37974:	b	379ac <flatcc_json_parser_table_as_root@@Base+0x164>
   37978:	ldr	r0, [fp, #-16]
   3797c:	ldr	r1, [sp, #32]
   37980:	bl	2a6fc <flatcc_builder_end_buffer@@Base>
   37984:	cmp	r0, #0
   37988:	bne	37998 <flatcc_json_parser_table_as_root@@Base+0x150>
   3798c:	mvn	r0, #0
   37990:	str	r0, [fp, #-12]
   37994:	b	379ac <flatcc_json_parser_table_as_root@@Base+0x164>
   37998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3799c:	ldr	r1, [fp, #-20]	; 0xffffffec
   379a0:	str	r0, [r1, #36]	; 0x24
   379a4:	movw	r0, #0
   379a8:	str	r0, [fp, #-12]
   379ac:	ldr	r0, [fp, #-12]
   379b0:	sub	sp, fp, #8
   379b4:	pop	{r4, sl, fp, pc}
   379b8:	push	{fp, lr}
   379bc:	mov	fp, sp
   379c0:	sub	sp, sp, #24
   379c4:	ldr	ip, [fp, #8]
   379c8:	str	r0, [fp, #-4]
   379cc:	str	r1, [fp, #-8]
   379d0:	str	r2, [sp, #12]
   379d4:	str	r3, [sp, #8]
   379d8:	ldr	r0, [fp, #-4]
   379dc:	movw	r1, #0
   379e0:	and	r1, r1, #255	; 0xff
   379e4:	movw	r2, #40	; 0x28
   379e8:	str	ip, [sp, #4]
   379ec:	bl	14ec0 <memset@plt>
   379f0:	ldr	r0, [fp, #-8]
   379f4:	ldr	r1, [fp, #-4]
   379f8:	str	r0, [r1]
   379fc:	ldr	r0, [sp, #12]
   37a00:	ldr	r1, [fp, #-4]
   37a04:	str	r0, [r1, #4]
   37a08:	ldr	r0, [fp, #-4]
   37a0c:	movw	r1, #1
   37a10:	str	r1, [r0, #12]
   37a14:	ldr	r0, [fp, #8]
   37a18:	ldr	r1, [fp, #-4]
   37a1c:	str	r0, [r1, #8]
   37a20:	ldr	r0, [sp, #12]
   37a24:	ldr	r1, [fp, #-4]
   37a28:	str	r0, [r1, #24]
   37a2c:	ldr	r0, [sp, #8]
   37a30:	ldr	r1, [fp, #-4]
   37a34:	str	r0, [r1, #28]
   37a38:	ldr	r0, [sp, #12]
   37a3c:	ldr	r1, [fp, #-4]
   37a40:	str	r0, [r1, #32]
   37a44:	mov	sp, fp
   37a48:	pop	{fp, pc}

00037a4c <flatcc_json_parser_struct_as_root@@Base>:
   37a4c:	push	{r4, sl, fp, lr}
   37a50:	add	fp, sp, #8
   37a54:	sub	sp, sp, #96	; 0x60
   37a58:	ldr	ip, [fp, #16]
   37a5c:	ldr	lr, [fp, #12]
   37a60:	ldr	r4, [fp, #8]
   37a64:	str	r0, [fp, #-16]
   37a68:	str	r1, [fp, #-20]	; 0xffffffec
   37a6c:	str	r2, [fp, #-24]	; 0xffffffe8
   37a70:	str	r3, [fp, #-28]	; 0xffffffe4
   37a74:	ldr	r0, [fp, #8]
   37a78:	and	r0, r0, #4
   37a7c:	cmp	r0, #0
   37a80:	movw	r0, #0
   37a84:	movne	r0, #1
   37a88:	tst	r0, #1
   37a8c:	movw	r0, #2
   37a90:	moveq	r0, #0
   37a94:	str	r0, [sp, #28]
   37a98:	ldr	r0, [fp, #-20]	; 0xffffffec
   37a9c:	movw	r1, #0
   37aa0:	cmp	r0, r1
   37aa4:	str	r4, [sp, #24]
   37aa8:	str	lr, [sp, #20]
   37aac:	str	ip, [sp, #16]
   37ab0:	beq	37ac0 <flatcc_json_parser_struct_as_root@@Base+0x74>
   37ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
   37ab8:	str	r0, [sp, #12]
   37abc:	b	37acc <flatcc_json_parser_struct_as_root@@Base+0x80>
   37ac0:	add	r0, sp, #36	; 0x24
   37ac4:	str	r0, [sp, #12]
   37ac8:	b	37acc <flatcc_json_parser_struct_as_root@@Base+0x80>
   37acc:	ldr	r0, [sp, #12]
   37ad0:	str	r0, [fp, #-20]	; 0xffffffec
   37ad4:	ldr	r0, [fp, #-20]	; 0xffffffec
   37ad8:	ldr	r1, [fp, #-16]
   37adc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37ae4:	ldr	ip, [fp, #-28]	; 0xffffffe4
   37ae8:	add	r3, r3, ip
   37aec:	ldr	ip, [fp, #8]
   37af0:	str	ip, [sp]
   37af4:	bl	379b8 <flatcc_json_parser_table_as_root@@Base+0x170>
   37af8:	ldr	r0, [fp, #-16]
   37afc:	ldr	r1, [fp, #12]
   37b00:	ldr	r3, [sp, #28]
   37b04:	movw	r2, #0
   37b08:	uxth	r2, r2
   37b0c:	bl	2a3b8 <flatcc_builder_start_buffer@@Base>
   37b10:	cmp	r0, #0
   37b14:	beq	37b24 <flatcc_json_parser_struct_as_root@@Base+0xd8>
   37b18:	mvn	r0, #0
   37b1c:	str	r0, [fp, #-12]
   37b20:	b	37bb0 <flatcc_json_parser_struct_as_root@@Base+0x164>
   37b24:	ldr	r0, [fp, #16]
   37b28:	ldr	r1, [fp, #-20]	; 0xffffffec
   37b2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37b30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37b34:	ldr	ip, [fp, #-28]	; 0xffffffe4
   37b38:	add	r3, r3, ip
   37b3c:	str	r0, [sp, #8]
   37b40:	mov	r0, r1
   37b44:	mov	r1, r2
   37b48:	mov	r2, r3
   37b4c:	add	r3, sp, #32
   37b50:	ldr	ip, [sp, #8]
   37b54:	blx	ip
   37b58:	ldr	r1, [fp, #-20]	; 0xffffffec
   37b5c:	ldr	r1, [r1, #20]
   37b60:	cmp	r1, #0
   37b64:	str	r0, [sp, #4]
   37b68:	beq	37b7c <flatcc_json_parser_struct_as_root@@Base+0x130>
   37b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   37b70:	ldr	r0, [r0, #20]
   37b74:	str	r0, [fp, #-12]
   37b78:	b	37bb0 <flatcc_json_parser_struct_as_root@@Base+0x164>
   37b7c:	ldr	r0, [fp, #-16]
   37b80:	ldr	r1, [sp, #32]
   37b84:	bl	2a6fc <flatcc_builder_end_buffer@@Base>
   37b88:	cmp	r0, #0
   37b8c:	bne	37b9c <flatcc_json_parser_struct_as_root@@Base+0x150>
   37b90:	mvn	r0, #0
   37b94:	str	r0, [fp, #-12]
   37b98:	b	37bb0 <flatcc_json_parser_struct_as_root@@Base+0x164>
   37b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37ba0:	ldr	r1, [fp, #-20]	; 0xffffffec
   37ba4:	str	r0, [r1, #36]	; 0x24
   37ba8:	movw	r0, #0
   37bac:	str	r0, [fp, #-12]
   37bb0:	ldr	r0, [fp, #-12]
   37bb4:	sub	sp, fp, #8
   37bb8:	pop	{r4, sl, fp, pc}
   37bbc:	sub	sp, sp, #16
   37bc0:	str	r0, [sp, #8]
   37bc4:	str	r1, [sp, #12]
   37bc8:	ldr	r0, [sp, #8]
   37bcc:	ldr	r1, [sp, #12]
   37bd0:	str	r1, [sp, #4]
   37bd4:	str	r0, [sp]
   37bd8:	vldr	d0, [sp]
   37bdc:	add	sp, sp, #16
   37be0:	bx	lr
   37be4:	nop	{0}
   37be8:	push	{r4, r5, r6, r7, fp, lr}
   37bec:	add	fp, sp, #16
   37bf0:	sub	sp, sp, #152	; 0x98
   37bf4:	vldr	d16, [pc, #892]	; 37f78 <flatcc_json_parser_struct_as_root@@Base+0x52c>
   37bf8:	str	r0, [fp, #-24]	; 0xffffffe8
   37bfc:	str	r1, [fp, #-28]	; 0xffffffe4
   37c00:	str	r2, [fp, #-32]	; 0xffffffe0
   37c04:	mov	r0, #0
   37c08:	str	r0, [fp, #-48]	; 0xffffffd0
   37c0c:	str	r0, [fp, #-52]	; 0xffffffcc
   37c10:	str	r0, [fp, #-60]	; 0xffffffc4
   37c14:	str	r0, [fp, #-64]	; 0xffffffc0
   37c18:	movw	r0, #0
   37c1c:	str	r0, [fp, #-68]	; 0xffffffbc
   37c20:	str	r0, [fp, #-72]	; 0xffffffb8
   37c24:	str	r0, [fp, #-76]	; 0xffffffb4
   37c28:	str	r0, [fp, #-80]	; 0xffffffb0
   37c2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37c30:	vstr	d16, [r0]
   37c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37c3c:	add	r0, r0, r1
   37c40:	add	r0, r0, #1
   37c44:	str	r0, [fp, #-44]	; 0xffffffd4
   37c48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37c4c:	cmp	r0, #1000	; 0x3e8
   37c50:	ble	37c64 <flatcc_json_parser_struct_as_root@@Base+0x218>
   37c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c58:	add	r0, r0, #1000	; 0x3e8
   37c5c:	add	r0, r0, #1
   37c60:	str	r0, [fp, #-44]	; 0xffffffd4
   37c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37c6c:	cmp	r0, r1
   37c70:	bne	37c80 <flatcc_json_parser_struct_as_root@@Base+0x234>
   37c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c78:	str	r0, [fp, #-20]	; 0xffffffec
   37c7c:	b	38544 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   37c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c84:	str	r0, [fp, #-36]	; 0xffffffdc
   37c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c8c:	ldrb	r0, [r0]
   37c90:	cmp	r0, #45	; 0x2d
   37c94:	bne	37ccc <flatcc_json_parser_struct_as_root@@Base+0x280>
   37c98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c9c:	add	r0, r0, #1
   37ca0:	str	r0, [fp, #-24]	; 0xffffffe8
   37ca4:	movw	r0, #1
   37ca8:	str	r0, [fp, #-48]	; 0xffffffd0
   37cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37cb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37cb4:	cmp	r0, r1
   37cb8:	bne	37cc8 <flatcc_json_parser_struct_as_root@@Base+0x27c>
   37cbc:	movw	r0, #0
   37cc0:	str	r0, [fp, #-20]	; 0xffffffec
   37cc4:	b	38544 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   37cc8:	b	37ccc <flatcc_json_parser_struct_as_root@@Base+0x280>
   37ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37cd0:	ldrb	r0, [r0]
   37cd4:	cmp	r0, #48	; 0x30
   37cd8:	bne	37da0 <flatcc_json_parser_struct_as_root@@Base+0x354>
   37cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37ce0:	add	r0, r0, #1
   37ce4:	str	r0, [fp, #-24]	; 0xffffffe8
   37ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37cec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37cf0:	cmp	r0, r1
   37cf4:	beq	37d4c <flatcc_json_parser_struct_as_root@@Base+0x300>
   37cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37cfc:	ldrb	r0, [r0]
   37d00:	orr	r0, r0, #32
   37d04:	cmp	r0, #120	; 0x78
   37d08:	bne	37d4c <flatcc_json_parser_struct_as_root@@Base+0x300>
   37d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37d14:	ldr	r2, [fp, #-48]	; 0xffffffd0
   37d18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37d1c:	bl	38550 <flatcc_json_parser_struct_as_root@@Base+0xb04>
   37d20:	str	r0, [fp, #-40]	; 0xffffffd8
   37d24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37d28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37d2c:	cmp	r0, r1
   37d30:	bne	37d40 <flatcc_json_parser_struct_as_root@@Base+0x2f4>
   37d34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   37d38:	str	r0, [fp, #-20]	; 0xffffffec
   37d3c:	b	38544 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   37d40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37d44:	str	r0, [fp, #-20]	; 0xffffffec
   37d48:	b	38544 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   37d4c:	b	37d50 <flatcc_json_parser_struct_as_root@@Base+0x304>
   37d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37d58:	cmp	r0, r1
   37d5c:	movw	r0, #0
   37d60:	str	r0, [sp, #84]	; 0x54
   37d64:	beq	37d80 <flatcc_json_parser_struct_as_root@@Base+0x334>
   37d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d6c:	ldrb	r0, [r0]
   37d70:	cmp	r0, #48	; 0x30
   37d74:	movw	r0, #0
   37d78:	moveq	r0, #1
   37d7c:	str	r0, [sp, #84]	; 0x54
   37d80:	ldr	r0, [sp, #84]	; 0x54
   37d84:	tst	r0, #1
   37d88:	beq	37d9c <flatcc_json_parser_struct_as_root@@Base+0x350>
   37d8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d90:	add	r0, r0, #1
   37d94:	str	r0, [fp, #-24]	; 0xffffffe8
   37d98:	b	37d50 <flatcc_json_parser_struct_as_root@@Base+0x304>
   37d9c:	b	37e0c <flatcc_json_parser_struct_as_root@@Base+0x3c0>
   37da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37da4:	ldrb	r0, [r0]
   37da8:	cmp	r0, #49	; 0x31
   37dac:	blt	37dc0 <flatcc_json_parser_struct_as_root@@Base+0x374>
   37db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37db4:	ldrb	r0, [r0]
   37db8:	cmp	r0, #57	; 0x39
   37dbc:	ble	37dec <flatcc_json_parser_struct_as_root@@Base+0x3a0>
   37dc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37dc4:	cmp	r0, #0
   37dc8:	beq	37dd8 <flatcc_json_parser_struct_as_root@@Base+0x38c>
   37dcc:	movw	r0, #0
   37dd0:	str	r0, [sp, #80]	; 0x50
   37dd4:	b	37de0 <flatcc_json_parser_struct_as_root@@Base+0x394>
   37dd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   37ddc:	str	r0, [sp, #80]	; 0x50
   37de0:	ldr	r0, [sp, #80]	; 0x50
   37de4:	str	r0, [fp, #-20]	; 0xffffffec
   37de8:	b	38544 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   37dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37df0:	add	r1, r0, #1
   37df4:	str	r1, [fp, #-24]	; 0xffffffe8
   37df8:	ldrb	r0, [r0]
   37dfc:	sub	r0, r0, #48	; 0x30
   37e00:	asr	r1, r0, #31
   37e04:	str	r0, [fp, #-64]	; 0xffffffc0
   37e08:	str	r1, [fp, #-60]	; 0xffffffc4
   37e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37e10:	str	r0, [fp, #-40]	; 0xffffffd8
   37e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37e18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37e1c:	cmp	r0, r1
   37e20:	movw	r0, #0
   37e24:	str	r0, [sp, #76]	; 0x4c
   37e28:	beq	37e5c <flatcc_json_parser_struct_as_root@@Base+0x410>
   37e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37e30:	ldrb	r0, [r0]
   37e34:	cmp	r0, #48	; 0x30
   37e38:	movw	r0, #0
   37e3c:	str	r0, [sp, #76]	; 0x4c
   37e40:	blt	37e5c <flatcc_json_parser_struct_as_root@@Base+0x410>
   37e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37e48:	ldrb	r0, [r0]
   37e4c:	cmp	r0, #57	; 0x39
   37e50:	movw	r0, #0
   37e54:	movle	r0, #1
   37e58:	str	r0, [sp, #76]	; 0x4c
   37e5c:	ldr	r0, [sp, #76]	; 0x4c
   37e60:	tst	r0, #1
   37e64:	beq	37f10 <flatcc_json_parser_struct_as_root@@Base+0x4c4>
   37e68:	ldr	r0, [fp, #-64]	; 0xffffffc0
   37e6c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37e70:	movw	r2, #39321	; 0x9999
   37e74:	movt	r2, #39321	; 0x9999
   37e78:	subs	r0, r0, r2
   37e7c:	movw	r2, #39321	; 0x9999
   37e80:	movt	r2, #6553	; 0x1999
   37e84:	sbcs	r1, r1, r2
   37e88:	str	r0, [sp, #72]	; 0x48
   37e8c:	str	r1, [sp, #68]	; 0x44
   37e90:	bcc	37ed4 <flatcc_json_parser_struct_as_root@@Base+0x488>
   37e94:	b	37e98 <flatcc_json_parser_struct_as_root@@Base+0x44c>
   37e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37e9c:	ldrb	r0, [r0]
   37ea0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   37ea4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37ea8:	adds	r3, r1, #1
   37eac:	adc	ip, r2, #0
   37eb0:	cmp	r0, #52	; 0x34
   37eb4:	movgt	r1, r3
   37eb8:	cmp	r0, #52	; 0x34
   37ebc:	movgt	r2, ip
   37ec0:	str	r1, [fp, #-64]	; 0xffffffc0
   37ec4:	str	r2, [fp, #-60]	; 0xffffffc4
   37ec8:	movw	r0, #1
   37ecc:	str	r0, [fp, #-80]	; 0xffffffb0
   37ed0:	b	37f10 <flatcc_json_parser_struct_as_root@@Base+0x4c4>
   37ed4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   37ed8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37edc:	add	r1, r1, r1, lsl #2
   37ee0:	lsl	r1, r1, #1
   37ee4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37ee8:	add	r3, r2, #1
   37eec:	str	r3, [fp, #-24]	; 0xffffffe8
   37ef0:	ldrb	r2, [r2]
   37ef4:	mov	r3, #10
   37ef8:	umlal	r2, r1, r0, r3
   37efc:	subs	r0, r2, #48	; 0x30
   37f00:	sbc	r1, r1, #0
   37f04:	str	r0, [fp, #-64]	; 0xffffffc0
   37f08:	str	r1, [fp, #-60]	; 0xffffffc4
   37f0c:	b	37e14 <flatcc_json_parser_struct_as_root@@Base+0x3c8>
   37f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   37f18:	sub	r0, r0, r1
   37f1c:	str	r0, [fp, #-76]	; 0xffffffb4
   37f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37f28:	cmp	r0, r1
   37f2c:	movw	r0, #0
   37f30:	str	r0, [sp, #64]	; 0x40
   37f34:	beq	37f50 <flatcc_json_parser_struct_as_root@@Base+0x504>
   37f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f3c:	ldrb	r0, [r0]
   37f40:	cmp	r0, #48	; 0x30
   37f44:	movw	r0, #0
   37f48:	moveq	r0, #1
   37f4c:	str	r0, [sp, #64]	; 0x40
   37f50:	ldr	r0, [sp, #64]	; 0x40
   37f54:	tst	r0, #1
   37f58:	beq	37f80 <flatcc_json_parser_struct_as_root@@Base+0x534>
   37f5c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   37f60:	add	r0, r0, #1
   37f64:	str	r0, [fp, #-68]	; 0xffffffbc
   37f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f6c:	add	r0, r0, #1
   37f70:	str	r0, [fp, #-24]	; 0xffffffe8
   37f74:	b	37f20 <flatcc_json_parser_struct_as_root@@Base+0x4d4>
	...
   37f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37f88:	cmp	r0, r1
   37f8c:	beq	38044 <flatcc_json_parser_struct_as_root@@Base+0x5f8>
   37f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f94:	ldrb	r0, [r0]
   37f98:	cmp	r0, #49	; 0x31
   37f9c:	blt	38044 <flatcc_json_parser_struct_as_root@@Base+0x5f8>
   37fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37fa4:	ldrb	r0, [r0]
   37fa8:	cmp	r0, #57	; 0x39
   37fac:	bgt	38044 <flatcc_json_parser_struct_as_root@@Base+0x5f8>
   37fb0:	movw	r0, #1
   37fb4:	str	r0, [fp, #-80]	; 0xffffffb0
   37fb8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   37fbc:	add	r0, r0, #1
   37fc0:	str	r0, [fp, #-68]	; 0xffffffbc
   37fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37fc8:	add	r0, r0, #1
   37fcc:	str	r0, [fp, #-24]	; 0xffffffe8
   37fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37fd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37fd8:	cmp	r0, r1
   37fdc:	movw	r0, #0
   37fe0:	str	r0, [sp, #60]	; 0x3c
   37fe4:	beq	38018 <flatcc_json_parser_struct_as_root@@Base+0x5cc>
   37fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37fec:	ldrb	r0, [r0]
   37ff0:	cmp	r0, #48	; 0x30
   37ff4:	movw	r0, #0
   37ff8:	str	r0, [sp, #60]	; 0x3c
   37ffc:	blt	38018 <flatcc_json_parser_struct_as_root@@Base+0x5cc>
   38000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38004:	ldrb	r0, [r0]
   38008:	cmp	r0, #57	; 0x39
   3800c:	movw	r0, #0
   38010:	movle	r0, #1
   38014:	str	r0, [sp, #60]	; 0x3c
   38018:	ldr	r0, [sp, #60]	; 0x3c
   3801c:	tst	r0, #1
   38020:	beq	38040 <flatcc_json_parser_struct_as_root@@Base+0x5f4>
   38024:	ldr	r0, [fp, #-68]	; 0xffffffbc
   38028:	add	r0, r0, #1
   3802c:	str	r0, [fp, #-68]	; 0xffffffbc
   38030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38034:	add	r0, r0, #1
   38038:	str	r0, [fp, #-24]	; 0xffffffe8
   3803c:	b	37fd0 <flatcc_json_parser_struct_as_root@@Base+0x584>
   38040:	b	38044 <flatcc_json_parser_struct_as_root@@Base+0x5f8>
   38044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38048:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3804c:	cmp	r0, r1
   38050:	beq	382e0 <flatcc_json_parser_struct_as_root@@Base+0x894>
   38054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38058:	ldrb	r0, [r0]
   3805c:	cmp	r0, #46	; 0x2e
   38060:	bne	382e0 <flatcc_json_parser_struct_as_root@@Base+0x894>
   38064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38068:	add	r0, r0, #1
   3806c:	str	r0, [fp, #-24]	; 0xffffffe8
   38070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38074:	str	r0, [fp, #-40]	; 0xffffffd8
   38078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3807c:	ldrb	r0, [r0]
   38080:	cmp	r0, #48	; 0x30
   38084:	blt	38098 <flatcc_json_parser_struct_as_root@@Base+0x64c>
   38088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3808c:	ldrb	r0, [r0]
   38090:	cmp	r0, #57	; 0x39
   38094:	ble	380a4 <flatcc_json_parser_struct_as_root@@Base+0x658>
   38098:	movw	r0, #0
   3809c:	str	r0, [fp, #-20]	; 0xffffffec
   380a0:	b	38544 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   380a4:	b	380a8 <flatcc_json_parser_struct_as_root@@Base+0x65c>
   380a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   380ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   380b0:	cmp	r0, r1
   380b4:	movw	r0, #0
   380b8:	str	r0, [sp, #56]	; 0x38
   380bc:	beq	380f0 <flatcc_json_parser_struct_as_root@@Base+0x6a4>
   380c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   380c4:	ldrb	r0, [r0]
   380c8:	cmp	r0, #48	; 0x30
   380cc:	movw	r0, #0
   380d0:	str	r0, [sp, #56]	; 0x38
   380d4:	blt	380f0 <flatcc_json_parser_struct_as_root@@Base+0x6a4>
   380d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   380dc:	ldrb	r0, [r0]
   380e0:	cmp	r0, #57	; 0x39
   380e4:	movw	r0, #0
   380e8:	movle	r0, #1
   380ec:	str	r0, [sp, #56]	; 0x38
   380f0:	ldr	r0, [sp, #56]	; 0x38
   380f4:	tst	r0, #1
   380f8:	beq	381c0 <flatcc_json_parser_struct_as_root@@Base+0x774>
   380fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   38100:	ldr	r1, [fp, #-60]	; 0xffffffc4
   38104:	movw	r2, #39321	; 0x9999
   38108:	movt	r2, #39321	; 0x9999
   3810c:	subs	r0, r0, r2
   38110:	movw	r2, #39321	; 0x9999
   38114:	movt	r2, #6553	; 0x1999
   38118:	sbcs	r1, r1, r2
   3811c:	str	r0, [sp, #52]	; 0x34
   38120:	str	r1, [sp, #48]	; 0x30
   38124:	bcc	38174 <flatcc_json_parser_struct_as_root@@Base+0x728>
   38128:	b	3812c <flatcc_json_parser_struct_as_root@@Base+0x6e0>
   3812c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   38130:	cmp	r0, #0
   38134:	bne	38170 <flatcc_json_parser_struct_as_root@@Base+0x724>
   38138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3813c:	ldrb	r0, [r0]
   38140:	ldr	r1, [fp, #-64]	; 0xffffffc0
   38144:	ldr	r2, [fp, #-60]	; 0xffffffc4
   38148:	adds	r3, r1, #1
   3814c:	adc	ip, r2, #0
   38150:	cmp	r0, #52	; 0x34
   38154:	movgt	r1, r3
   38158:	cmp	r0, #52	; 0x34
   3815c:	movgt	r2, ip
   38160:	str	r1, [fp, #-64]	; 0xffffffc0
   38164:	str	r2, [fp, #-60]	; 0xffffffc4
   38168:	movw	r0, #1
   3816c:	str	r0, [fp, #-80]	; 0xffffffb0
   38170:	b	381c0 <flatcc_json_parser_struct_as_root@@Base+0x774>
   38174:	ldr	r0, [fp, #-64]	; 0xffffffc0
   38178:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3817c:	add	r1, r1, r1, lsl #2
   38180:	lsl	r1, r1, #1
   38184:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38188:	add	r3, r2, #1
   3818c:	str	r3, [fp, #-24]	; 0xffffffe8
   38190:	ldrb	r2, [r2]
   38194:	mov	r3, #10
   38198:	umlal	r2, r1, r0, r3
   3819c:	subs	r0, r2, #48	; 0x30
   381a0:	sbc	r1, r1, #0
   381a4:	str	r0, [fp, #-64]	; 0xffffffc0
   381a8:	str	r1, [fp, #-60]	; 0xffffffc4
   381ac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   381b0:	mvn	r1, #0
   381b4:	add	r0, r0, r1
   381b8:	str	r0, [fp, #-68]	; 0xffffffbc
   381bc:	b	380a8 <flatcc_json_parser_struct_as_root@@Base+0x65c>
   381c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   381c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   381c8:	sub	r0, r0, r1
   381cc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   381d0:	add	r0, r1, r0
   381d4:	str	r0, [fp, #-76]	; 0xffffffb4
   381d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   381dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   381e0:	cmp	r0, r1
   381e4:	movw	r0, #0
   381e8:	str	r0, [sp, #44]	; 0x2c
   381ec:	beq	38208 <flatcc_json_parser_struct_as_root@@Base+0x7bc>
   381f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   381f4:	ldrb	r0, [r0]
   381f8:	cmp	r0, #48	; 0x30
   381fc:	movw	r0, #0
   38200:	moveq	r0, #1
   38204:	str	r0, [sp, #44]	; 0x2c
   38208:	ldr	r0, [sp, #44]	; 0x2c
   3820c:	tst	r0, #1
   38210:	beq	38230 <flatcc_json_parser_struct_as_root@@Base+0x7e4>
   38214:	ldr	r0, [fp, #-68]	; 0xffffffbc
   38218:	add	r0, r0, #1
   3821c:	str	r0, [fp, #-68]	; 0xffffffbc
   38220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38224:	add	r0, r0, #1
   38228:	str	r0, [fp, #-24]	; 0xffffffe8
   3822c:	b	381d8 <flatcc_json_parser_struct_as_root@@Base+0x78c>
   38230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38234:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38238:	cmp	r0, r1
   3823c:	beq	382dc <flatcc_json_parser_struct_as_root@@Base+0x890>
   38240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38244:	ldrb	r0, [r0]
   38248:	cmp	r0, #49	; 0x31
   3824c:	blt	382dc <flatcc_json_parser_struct_as_root@@Base+0x890>
   38250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38254:	ldrb	r0, [r0]
   38258:	cmp	r0, #57	; 0x39
   3825c:	bgt	382dc <flatcc_json_parser_struct_as_root@@Base+0x890>
   38260:	movw	r0, #1
   38264:	str	r0, [fp, #-80]	; 0xffffffb0
   38268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3826c:	add	r0, r0, #1
   38270:	str	r0, [fp, #-24]	; 0xffffffe8
   38274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38278:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3827c:	cmp	r0, r1
   38280:	movw	r0, #0
   38284:	str	r0, [sp, #40]	; 0x28
   38288:	beq	382bc <flatcc_json_parser_struct_as_root@@Base+0x870>
   3828c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38290:	ldrb	r0, [r0]
   38294:	cmp	r0, #48	; 0x30
   38298:	movw	r0, #0
   3829c:	str	r0, [sp, #40]	; 0x28
   382a0:	blt	382bc <flatcc_json_parser_struct_as_root@@Base+0x870>
   382a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   382a8:	ldrb	r0, [r0]
   382ac:	cmp	r0, #57	; 0x39
   382b0:	movw	r0, #0
   382b4:	movle	r0, #1
   382b8:	str	r0, [sp, #40]	; 0x28
   382bc:	ldr	r0, [sp, #40]	; 0x28
   382c0:	tst	r0, #1
   382c4:	beq	382d8 <flatcc_json_parser_struct_as_root@@Base+0x88c>
   382c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   382cc:	add	r0, r0, #1
   382d0:	str	r0, [fp, #-24]	; 0xffffffe8
   382d4:	b	38274 <flatcc_json_parser_struct_as_root@@Base+0x828>
   382d8:	b	382dc <flatcc_json_parser_struct_as_root@@Base+0x890>
   382dc:	b	382e0 <flatcc_json_parser_struct_as_root@@Base+0x894>
   382e0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   382e4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   382e8:	add	r0, r1, r0
   382ec:	str	r0, [fp, #-68]	; 0xffffffbc
   382f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   382f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   382f8:	cmp	r0, r1
   382fc:	beq	384a0 <flatcc_json_parser_struct_as_root@@Base+0xa54>
   38300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38304:	ldrb	r0, [r0]
   38308:	orr	r0, r0, #32
   3830c:	cmp	r0, #101	; 0x65
   38310:	bne	384a0 <flatcc_json_parser_struct_as_root@@Base+0xa54>
   38314:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3831c:	sub	r0, r0, r1
   38320:	cmp	r0, #2
   38324:	bge	38334 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   38328:	movw	r0, #0
   3832c:	str	r0, [fp, #-20]	; 0xffffffec
   38330:	b	38544 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   38334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38338:	add	r0, r0, #1
   3833c:	str	r0, [fp, #-24]	; 0xffffffe8
   38340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38344:	ldrb	r0, [r0]
   38348:	cmp	r0, #43	; 0x2b
   3834c:	bne	3837c <flatcc_json_parser_struct_as_root@@Base+0x930>
   38350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38354:	add	r0, r0, #1
   38358:	str	r0, [fp, #-24]	; 0xffffffe8
   3835c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38360:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38364:	cmp	r0, r1
   38368:	bne	38378 <flatcc_json_parser_struct_as_root@@Base+0x92c>
   3836c:	movw	r0, #0
   38370:	str	r0, [fp, #-20]	; 0xffffffec
   38374:	b	38544 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   38378:	b	383c4 <flatcc_json_parser_struct_as_root@@Base+0x978>
   3837c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38380:	ldrb	r0, [r0]
   38384:	cmp	r0, #45	; 0x2d
   38388:	bne	383c0 <flatcc_json_parser_struct_as_root@@Base+0x974>
   3838c:	movw	r0, #1
   38390:	str	r0, [fp, #-52]	; 0xffffffcc
   38394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38398:	add	r0, r0, #1
   3839c:	str	r0, [fp, #-24]	; 0xffffffe8
   383a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   383a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   383a8:	cmp	r0, r1
   383ac:	bne	383bc <flatcc_json_parser_struct_as_root@@Base+0x970>
   383b0:	movw	r0, #0
   383b4:	str	r0, [fp, #-20]	; 0xffffffec
   383b8:	b	38544 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   383bc:	b	383c0 <flatcc_json_parser_struct_as_root@@Base+0x974>
   383c0:	b	383c4 <flatcc_json_parser_struct_as_root@@Base+0x978>
   383c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   383c8:	ldrb	r0, [r0]
   383cc:	cmp	r0, #48	; 0x30
   383d0:	blt	383e4 <flatcc_json_parser_struct_as_root@@Base+0x998>
   383d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   383d8:	ldrb	r0, [r0]
   383dc:	cmp	r0, #57	; 0x39
   383e0:	ble	383f0 <flatcc_json_parser_struct_as_root@@Base+0x9a4>
   383e4:	movw	r0, #0
   383e8:	str	r0, [fp, #-20]	; 0xffffffec
   383ec:	b	38544 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   383f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   383f4:	add	r1, r0, #1
   383f8:	str	r1, [fp, #-24]	; 0xffffffe8
   383fc:	ldrb	r0, [r0]
   38400:	sub	r0, r0, #48	; 0x30
   38404:	str	r0, [fp, #-72]	; 0xffffffb8
   38408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3840c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38410:	cmp	r0, r1
   38414:	movw	r0, #0
   38418:	str	r0, [sp, #36]	; 0x24
   3841c:	beq	38450 <flatcc_json_parser_struct_as_root@@Base+0xa04>
   38420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38424:	ldrb	r0, [r0]
   38428:	cmp	r0, #48	; 0x30
   3842c:	movw	r0, #0
   38430:	str	r0, [sp, #36]	; 0x24
   38434:	blt	38450 <flatcc_json_parser_struct_as_root@@Base+0xa04>
   38438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3843c:	ldrb	r0, [r0]
   38440:	cmp	r0, #57	; 0x39
   38444:	movw	r0, #0
   38448:	movle	r0, #1
   3844c:	str	r0, [sp, #36]	; 0x24
   38450:	ldr	r0, [sp, #36]	; 0x24
   38454:	tst	r0, #1
   38458:	beq	3849c <flatcc_json_parser_struct_as_root@@Base+0xa50>
   3845c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   38460:	movw	r1, #32767	; 0x7fff
   38464:	cmp	r0, r1
   38468:	bgt	3848c <flatcc_json_parser_struct_as_root@@Base+0xa40>
   3846c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   38470:	movw	r1, #10
   38474:	mul	r0, r0, r1
   38478:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3847c:	ldrb	r1, [r1]
   38480:	add	r0, r0, r1
   38484:	sub	r0, r0, #48	; 0x30
   38488:	str	r0, [fp, #-72]	; 0xffffffb8
   3848c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38490:	add	r0, r0, #1
   38494:	str	r0, [fp, #-24]	; 0xffffffe8
   38498:	b	38408 <flatcc_json_parser_struct_as_root@@Base+0x9bc>
   3849c:	b	384a0 <flatcc_json_parser_struct_as_root@@Base+0xa54>
   384a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   384a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   384a8:	cmp	r1, #0
   384ac:	str	r0, [sp, #32]
   384b0:	beq	384c8 <flatcc_json_parser_struct_as_root@@Base+0xa7c>
   384b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   384b8:	movw	r1, #0
   384bc:	sub	r0, r1, r0
   384c0:	str	r0, [sp, #28]
   384c4:	b	384d0 <flatcc_json_parser_struct_as_root@@Base+0xa84>
   384c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   384cc:	str	r0, [sp, #28]
   384d0:	ldr	r0, [sp, #28]
   384d4:	ldr	r1, [sp, #32]
   384d8:	add	r0, r1, r0
   384dc:	str	r0, [fp, #-68]	; 0xffffffbc
   384e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   384e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   384e8:	cmp	r0, r2
   384ec:	bne	384fc <flatcc_json_parser_struct_as_root@@Base+0xab0>
   384f0:	movw	r0, #0
   384f4:	str	r0, [fp, #-20]	; 0xffffffec
   384f8:	b	38544 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   384fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38504:	ldr	r2, [fp, #-48]	; 0xffffffd0
   38508:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3850c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   38510:	ldr	lr, [fp, #-68]	; 0xffffffbc
   38514:	ldr	r4, [fp, #-76]	; 0xffffffb4
   38518:	ldr	r5, [fp, #-80]	; 0xffffffb0
   3851c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   38520:	mov	r7, sp
   38524:	str	r6, [r7, #20]
   38528:	str	r5, [r7, #16]
   3852c:	str	r4, [r7, #12]
   38530:	str	lr, [r7, #8]
   38534:	str	ip, [r7, #4]
   38538:	str	r3, [r7]
   3853c:	bl	38588 <flatcc_json_parser_struct_as_root@@Base+0xb3c>
   38540:	str	r0, [fp, #-20]	; 0xffffffec
   38544:	ldr	r0, [fp, #-20]	; 0xffffffec
   38548:	sub	sp, fp, #16
   3854c:	pop	{r4, r5, r6, r7, fp, pc}
   38550:	sub	sp, sp, #16
   38554:	vldr	d16, [pc, #36]	; 38580 <flatcc_json_parser_struct_as_root@@Base+0xb34>
   38558:	str	r0, [sp, #12]
   3855c:	str	r1, [sp, #8]
   38560:	str	r2, [sp, #4]
   38564:	str	r3, [sp]
   38568:	ldr	r0, [sp]
   3856c:	vstr	d16, [r0]
   38570:	ldr	r0, [sp, #12]
   38574:	add	sp, sp, #16
   38578:	bx	lr
   3857c:	nop	{0}
	...
   38588:	push	{r4, r5, r6, sl, fp, lr}
   3858c:	add	fp, sp, #16
   38590:	sub	sp, sp, #80	; 0x50
   38594:	ldr	r3, [fp, #12]
   38598:	ldr	ip, [fp, #8]
   3859c:	ldr	lr, [fp, #28]
   385a0:	ldr	r4, [fp, #24]
   385a4:	ldr	r5, [fp, #20]
   385a8:	ldr	r6, [fp, #16]
   385ac:	str	r0, [fp, #-24]	; 0xffffffe8
   385b0:	str	r1, [fp, #-28]	; 0xffffffe4
   385b4:	str	r2, [fp, #-32]	; 0xffffffe0
   385b8:	str	r3, [fp, #-36]	; 0xffffffdc
   385bc:	str	ip, [fp, #-40]	; 0xffffffd8
   385c0:	movw	r0, #309	; 0x135
   385c4:	str	r0, [fp, #-44]	; 0xffffffd4
   385c8:	movw	r0, #65212	; 0xfebc
   385cc:	movt	r0, #65535	; 0xffff
   385d0:	str	r0, [sp, #48]	; 0x30
   385d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   385d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   385dc:	orr	r0, r0, r1
   385e0:	cmp	r0, #0
   385e4:	str	r6, [sp, #28]
   385e8:	str	r4, [sp, #24]
   385ec:	str	r5, [sp, #20]
   385f0:	str	lr, [sp, #16]
   385f4:	beq	38608 <flatcc_json_parser_struct_as_root@@Base+0xbbc>
   385f8:	b	385fc <flatcc_json_parser_struct_as_root@@Base+0xbb0>
   385fc:	ldr	r0, [fp, #16]
   38600:	cmn	r0, #324	; 0x144
   38604:	bge	38618 <flatcc_json_parser_struct_as_root@@Base+0xbcc>
   38608:	vldr	d16, [pc, #1008]	; 38a00 <flatcc_json_parser_struct_as_root@@Base+0xfb4>
   3860c:	ldr	r0, [fp, #28]
   38610:	vstr	d16, [r0]
   38614:	b	38bc8 <flatcc_json_parser_struct_as_root@@Base+0x117c>
   38618:	ldr	r0, [fp, #16]
   3861c:	sub	r0, r0, #1
   38620:	movw	r1, #309	; 0x135
   38624:	cmp	r0, r1
   38628:	ble	38648 <flatcc_json_parser_struct_as_root@@Base+0xbfc>
   3862c:	mov	r0, #0
   38630:	movw	r1, #0
   38634:	movt	r1, #32752	; 0x7ff0
   38638:	bl	37bbc <flatcc_json_parser_struct_as_root@@Base+0x170>
   3863c:	ldr	r0, [fp, #28]
   38640:	vstr	d0, [r0]
   38644:	b	38bc8 <flatcc_json_parser_struct_as_root@@Base+0x117c>
   38648:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3864c:	mov	r1, #0
   38650:	cmp	r1, r0, lsr #21
   38654:	bne	38b58 <flatcc_json_parser_struct_as_root@@Base+0x110c>
   38658:	b	3865c <flatcc_json_parser_struct_as_root@@Base+0xc10>
   3865c:	ldr	r0, [fp, #16]
   38660:	cmp	r0, #0
   38664:	blt	38b58 <flatcc_json_parser_struct_as_root@@Base+0x110c>
   38668:	ldr	r0, [fp, #16]
   3866c:	cmp	r0, #22
   38670:	bgt	38b58 <flatcc_json_parser_struct_as_root@@Base+0x110c>
   38674:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38678:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3867c:	bl	46410 <flatcc_json_printer_clear@@Base+0x20dc>
   38680:	str	r0, [sp, #32]
   38684:	str	r1, [sp, #36]	; 0x24
   38688:	ldr	r0, [fp, #16]
   3868c:	ldr	r1, [fp, #20]
   38690:	sub	r0, r0, r1
   38694:	add	r0, r0, #22
   38698:	cmp	r0, #44	; 0x2c
   3869c:	str	r0, [sp, #12]
   386a0:	bhi	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   386a4:	add	r0, pc, #8
   386a8:	ldr	r1, [sp, #12]
   386ac:	ldr	r2, [r0, r1, lsl #2]
   386b0:	add	pc, r0, r2
   386b4:	strheq	r0, [r0], -r4
   386b8:	andeq	r0, r0, r8, asr #1
   386bc:	ldrdeq	r0, [r0], -ip
   386c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   386c4:	andeq	r0, r0, r4, lsl #2
   386c8:	andeq	r0, r0, r8, lsl r1
   386cc:	andeq	r0, r0, ip, lsr #2
   386d0:	andeq	r0, r0, r0, asr #2
   386d4:	andeq	r0, r0, r4, asr r1
   386d8:	andeq	r0, r0, r8, ror #2
   386dc:	andeq	r0, r0, ip, ror r1
   386e0:	muleq	r0, r0, r1
   386e4:	andeq	r0, r0, r4, lsr #3
   386e8:			; <UNDEFINED> instruction: 0x000001b8
   386ec:	andeq	r0, r0, ip, asr #3
   386f0:	andeq	r0, r0, r0, ror #3
   386f4:	strdeq	r0, [r0], -r4
   386f8:	andeq	r0, r0, r8, lsl #4
   386fc:	andeq	r0, r0, ip, lsl r2
   38700:	andeq	r0, r0, r0, lsr r2
   38704:	andeq	r0, r0, r4, asr #4
   38708:	andeq	r0, r0, r8, asr r2
   3870c:	andeq	r0, r0, ip, ror #4
   38710:	andeq	r0, r0, r0, ror r2
   38714:	andeq	r0, r0, r4, lsl #5
   38718:	muleq	r0, r8, r2
   3871c:	andeq	r0, r0, ip, lsr #5
   38720:	andeq	r0, r0, r0, asr #5
   38724:	ldrdeq	r0, [r0], -r4
   38728:	andeq	r0, r0, r8, ror #5
   3872c:	strdeq	r0, [r0], -ip
   38730:	andeq	r0, r0, r0, lsl r3
   38734:	andeq	r0, r0, r4, lsr #6
   38738:	andeq	r0, r0, r8, lsr r3
   3873c:			; <UNDEFINED> instruction: 0x000003bc
   38740:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   38744:	andeq	r0, r0, r4, ror #7
   38748:	strdeq	r0, [r0], -r8
   3874c:	andeq	r0, r0, ip, lsl #8
   38750:	andeq	r0, r0, r0, lsr #8
   38754:	andeq	r0, r0, r4, lsr r4
   38758:	andeq	r0, r0, r8, asr #8
   3875c:	andeq	r0, r0, ip, asr r4
   38760:	andeq	r0, r0, r0, ror r4
   38764:	andeq	r0, r0, r4, lsl #9
   38768:	vldr	d16, [pc, #664]	; 38a08 <flatcc_json_parser_struct_as_root@@Base+0xfbc>
   3876c:	vldr	d17, [sp, #32]
   38770:	vdiv.f64	d16, d17, d16
   38774:	vstr	d16, [sp, #32]
   38778:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3877c:	vldr	d16, [pc, #652]	; 38a10 <flatcc_json_parser_struct_as_root@@Base+0xfc4>
   38780:	vldr	d17, [sp, #32]
   38784:	vdiv.f64	d16, d17, d16
   38788:	vstr	d16, [sp, #32]
   3878c:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38790:	vldr	d16, [pc, #640]	; 38a18 <flatcc_json_parser_struct_as_root@@Base+0xfcc>
   38794:	vldr	d17, [sp, #32]
   38798:	vdiv.f64	d16, d17, d16
   3879c:	vstr	d16, [sp, #32]
   387a0:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   387a4:	vldr	d16, [pc, #628]	; 38a20 <flatcc_json_parser_struct_as_root@@Base+0xfd4>
   387a8:	vldr	d17, [sp, #32]
   387ac:	vdiv.f64	d16, d17, d16
   387b0:	vstr	d16, [sp, #32]
   387b4:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   387b8:	vldr	d16, [pc, #616]	; 38a28 <flatcc_json_parser_struct_as_root@@Base+0xfdc>
   387bc:	vldr	d17, [sp, #32]
   387c0:	vdiv.f64	d16, d17, d16
   387c4:	vstr	d16, [sp, #32]
   387c8:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   387cc:	vldr	d16, [pc, #604]	; 38a30 <flatcc_json_parser_struct_as_root@@Base+0xfe4>
   387d0:	vldr	d17, [sp, #32]
   387d4:	vdiv.f64	d16, d17, d16
   387d8:	vstr	d16, [sp, #32]
   387dc:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   387e0:	vldr	d16, [pc, #592]	; 38a38 <flatcc_json_parser_struct_as_root@@Base+0xfec>
   387e4:	vldr	d17, [sp, #32]
   387e8:	vdiv.f64	d16, d17, d16
   387ec:	vstr	d16, [sp, #32]
   387f0:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   387f4:	vldr	d16, [pc, #580]	; 38a40 <flatcc_json_parser_struct_as_root@@Base+0xff4>
   387f8:	vldr	d17, [sp, #32]
   387fc:	vdiv.f64	d16, d17, d16
   38800:	vstr	d16, [sp, #32]
   38804:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38808:	vldr	d16, [pc, #568]	; 38a48 <flatcc_json_parser_struct_as_root@@Base+0xffc>
   3880c:	vldr	d17, [sp, #32]
   38810:	vdiv.f64	d16, d17, d16
   38814:	vstr	d16, [sp, #32]
   38818:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3881c:	vldr	d16, [pc, #556]	; 38a50 <flatcc_json_parser_struct_as_root@@Base+0x1004>
   38820:	vldr	d17, [sp, #32]
   38824:	vdiv.f64	d16, d17, d16
   38828:	vstr	d16, [sp, #32]
   3882c:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38830:	vldr	d16, [pc, #544]	; 38a58 <flatcc_json_parser_struct_as_root@@Base+0x100c>
   38834:	vldr	d17, [sp, #32]
   38838:	vdiv.f64	d16, d17, d16
   3883c:	vstr	d16, [sp, #32]
   38840:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38844:	vldr	d16, [pc, #532]	; 38a60 <flatcc_json_parser_struct_as_root@@Base+0x1014>
   38848:	vldr	d17, [sp, #32]
   3884c:	vdiv.f64	d16, d17, d16
   38850:	vstr	d16, [sp, #32]
   38854:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38858:	vldr	d16, [pc, #520]	; 38a68 <flatcc_json_parser_struct_as_root@@Base+0x101c>
   3885c:	vldr	d17, [sp, #32]
   38860:	vdiv.f64	d16, d17, d16
   38864:	vstr	d16, [sp, #32]
   38868:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3886c:	vldr	d16, [pc, #1012]	; 38c68 <flatcc_json_parser_struct_as_root@@Base+0x121c>
   38870:	vldr	d17, [sp, #32]
   38874:	vdiv.f64	d16, d17, d16
   38878:	vstr	d16, [sp, #32]
   3887c:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38880:	vldr	d16, [pc, #1000]	; 38c70 <flatcc_json_parser_struct_as_root@@Base+0x1224>
   38884:	vldr	d17, [sp, #32]
   38888:	vdiv.f64	d16, d17, d16
   3888c:	vstr	d16, [sp, #32]
   38890:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38894:	vldr	d16, [pc, #988]	; 38c78 <flatcc_json_parser_struct_as_root@@Base+0x122c>
   38898:	vldr	d17, [sp, #32]
   3889c:	vdiv.f64	d16, d17, d16
   388a0:	vstr	d16, [sp, #32]
   388a4:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   388a8:	vldr	d16, [pc, #976]	; 38c80 <flatcc_json_parser_struct_as_root@@Base+0x1234>
   388ac:	vldr	d17, [sp, #32]
   388b0:	vdiv.f64	d16, d17, d16
   388b4:	vstr	d16, [sp, #32]
   388b8:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   388bc:	vldr	d16, [pc, #964]	; 38c88 <flatcc_json_parser_struct_as_root@@Base+0x123c>
   388c0:	vldr	d17, [sp, #32]
   388c4:	vdiv.f64	d16, d17, d16
   388c8:	vstr	d16, [sp, #32]
   388cc:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   388d0:	vldr	d16, [pc, #952]	; 38c90 <flatcc_json_parser_struct_as_root@@Base+0x1244>
   388d4:	vldr	d17, [sp, #32]
   388d8:	vdiv.f64	d16, d17, d16
   388dc:	vstr	d16, [sp, #32]
   388e0:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   388e4:	vldr	d16, [pc, #940]	; 38c98 <flatcc_json_parser_struct_as_root@@Base+0x124c>
   388e8:	vldr	d17, [sp, #32]
   388ec:	vdiv.f64	d16, d17, d16
   388f0:	vstr	d16, [sp, #32]
   388f4:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   388f8:	vldr	d16, [pc, #928]	; 38ca0 <flatcc_json_parser_struct_as_root@@Base+0x1254>
   388fc:	vldr	d17, [sp, #32]
   38900:	vdiv.f64	d16, d17, d16
   38904:	vstr	d16, [sp, #32]
   38908:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3890c:	vldr	d16, [sp, #32]
   38910:	vmov.f64	d17, #36	; 0x41200000  10.0
   38914:	vdiv.f64	d16, d16, d17
   38918:	vstr	d16, [sp, #32]
   3891c:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38920:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38924:	vldr	d16, [sp, #32]
   38928:	vmov.f64	d17, #36	; 0x41200000  10.0
   3892c:	vmul.f64	d16, d16, d17
   38930:	vstr	d16, [sp, #32]
   38934:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38938:	vldr	d16, [pc, #864]	; 38ca0 <flatcc_json_parser_struct_as_root@@Base+0x1254>
   3893c:	vldr	d17, [sp, #32]
   38940:	vmul.f64	d16, d17, d16
   38944:	vstr	d16, [sp, #32]
   38948:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3894c:	vldr	d16, [pc, #836]	; 38c98 <flatcc_json_parser_struct_as_root@@Base+0x124c>
   38950:	vldr	d17, [sp, #32]
   38954:	vmul.f64	d16, d17, d16
   38958:	vstr	d16, [sp, #32]
   3895c:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38960:	vldr	d16, [pc, #808]	; 38c90 <flatcc_json_parser_struct_as_root@@Base+0x1244>
   38964:	vldr	d17, [sp, #32]
   38968:	vmul.f64	d16, d17, d16
   3896c:	vstr	d16, [sp, #32]
   38970:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38974:	vldr	d16, [pc, #780]	; 38c88 <flatcc_json_parser_struct_as_root@@Base+0x123c>
   38978:	vldr	d17, [sp, #32]
   3897c:	vmul.f64	d16, d17, d16
   38980:	vstr	d16, [sp, #32]
   38984:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38988:	vldr	d16, [pc, #752]	; 38c80 <flatcc_json_parser_struct_as_root@@Base+0x1234>
   3898c:	vldr	d17, [sp, #32]
   38990:	vmul.f64	d16, d17, d16
   38994:	vstr	d16, [sp, #32]
   38998:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3899c:	vldr	d16, [pc, #724]	; 38c78 <flatcc_json_parser_struct_as_root@@Base+0x122c>
   389a0:	vldr	d17, [sp, #32]
   389a4:	vmul.f64	d16, d17, d16
   389a8:	vstr	d16, [sp, #32]
   389ac:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   389b0:	vldr	d16, [pc, #696]	; 38c70 <flatcc_json_parser_struct_as_root@@Base+0x1224>
   389b4:	vldr	d17, [sp, #32]
   389b8:	vmul.f64	d16, d17, d16
   389bc:	vstr	d16, [sp, #32]
   389c0:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   389c4:	vldr	d16, [pc, #668]	; 38c68 <flatcc_json_parser_struct_as_root@@Base+0x121c>
   389c8:	vldr	d17, [sp, #32]
   389cc:	vmul.f64	d16, d17, d16
   389d0:	vstr	d16, [sp, #32]
   389d4:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   389d8:	vldr	d16, [pc, #640]	; 38c60 <flatcc_json_parser_struct_as_root@@Base+0x1214>
   389dc:	vldr	d17, [sp, #32]
   389e0:	vmul.f64	d16, d17, d16
   389e4:	vstr	d16, [sp, #32]
   389e8:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   389ec:	vldr	d16, [pc, #612]	; 38c58 <flatcc_json_parser_struct_as_root@@Base+0x120c>
   389f0:	vldr	d17, [sp, #32]
   389f4:	vmul.f64	d16, d17, d16
   389f8:	vstr	d16, [sp, #32]
   389fc:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
	...
   38a08:			; <UNDEFINED> instruction: 0x064dd592
   38a0c:	strmi	pc, [r0], #207	; 0xcf
   38a10:	usatle	lr, #2, r0, asr #30
   38a14:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   38a18:	ldmvc	r5!, {r6, sl, fp, pc}
   38a1c:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   38a20:	addsvs	r3, r1, r0, lsl #26
   38a24:	mvnmi	r5, #228, 16	; 0xe40000
   38a28:	strbvs	ip, [lr, -r0, lsl #16]
   38a2c:			; <UNDEFINED> instruction: 0x43abc16d
   38a30:	ldrbhi	sl, [r8]
   38a34:	cmnmi	r6, #1459617792	; 0x57000000
   38a38:	strbcc	r8, [r0, r0]!
   38a3c:	movtmi	ip, #4985	; 0x1379
   38a40:	ldrtcs	r0, [r4], -r0
   38a44:	movwmi	r6, #52213	; 0xcbf5
   38a48:	cdpne	0, 9, cr0, cr0, cr0, {0}
   38a4c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   38a50:	strb	r0, [r0, #-0]
   38a54:	adcmi	r3, r2, #156	; 0x9c
   38a58:	andge	r0, r0, #0
   38a5c:	rsbmi	r1, sp, #148, 20	; 0x94000
   38a60:	stmda	r0, {}	; <UNPREDICTABLE>
   38a64:	eorsmi	r4, r7, #7733248	; 0x760000
   38a68:	andcs	r0, r0, r0
   38a6c:	andmi	sl, r2, #95	; 0x5f
   38a70:	vldr	d16, [pc, #472]	; 38c50 <flatcc_json_parser_struct_as_root@@Base+0x1204>
   38a74:	vldr	d17, [sp, #32]
   38a78:	vmul.f64	d16, d17, d16
   38a7c:	vstr	d16, [sp, #32]
   38a80:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38a84:	vldr	d16, [pc, #444]	; 38c48 <flatcc_json_parser_struct_as_root@@Base+0x11fc>
   38a88:	vldr	d17, [sp, #32]
   38a8c:	vmul.f64	d16, d17, d16
   38a90:	vstr	d16, [sp, #32]
   38a94:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38a98:	vldr	d16, [pc, #416]	; 38c40 <flatcc_json_parser_struct_as_root@@Base+0x11f4>
   38a9c:	vldr	d17, [sp, #32]
   38aa0:	vmul.f64	d16, d17, d16
   38aa4:	vstr	d16, [sp, #32]
   38aa8:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38aac:	vldr	d16, [pc, #388]	; 38c38 <flatcc_json_parser_struct_as_root@@Base+0x11ec>
   38ab0:	vldr	d17, [sp, #32]
   38ab4:	vmul.f64	d16, d17, d16
   38ab8:	vstr	d16, [sp, #32]
   38abc:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38ac0:	vldr	d16, [pc, #360]	; 38c30 <flatcc_json_parser_struct_as_root@@Base+0x11e4>
   38ac4:	vldr	d17, [sp, #32]
   38ac8:	vmul.f64	d16, d17, d16
   38acc:	vstr	d16, [sp, #32]
   38ad0:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38ad4:	vldr	d16, [pc, #332]	; 38c28 <flatcc_json_parser_struct_as_root@@Base+0x11dc>
   38ad8:	vldr	d17, [sp, #32]
   38adc:	vmul.f64	d16, d17, d16
   38ae0:	vstr	d16, [sp, #32]
   38ae4:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38ae8:	vldr	d16, [pc, #304]	; 38c20 <flatcc_json_parser_struct_as_root@@Base+0x11d4>
   38aec:	vldr	d17, [sp, #32]
   38af0:	vmul.f64	d16, d17, d16
   38af4:	vstr	d16, [sp, #32]
   38af8:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38afc:	vldr	d16, [pc, #276]	; 38c18 <flatcc_json_parser_struct_as_root@@Base+0x11cc>
   38b00:	vldr	d17, [sp, #32]
   38b04:	vmul.f64	d16, d17, d16
   38b08:	vstr	d16, [sp, #32]
   38b0c:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38b10:	vldr	d16, [pc, #248]	; 38c10 <flatcc_json_parser_struct_as_root@@Base+0x11c4>
   38b14:	vldr	d17, [sp, #32]
   38b18:	vmul.f64	d16, d17, d16
   38b1c:	vstr	d16, [sp, #32]
   38b20:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38b24:	vldr	d16, [pc, #220]	; 38c08 <flatcc_json_parser_struct_as_root@@Base+0x11bc>
   38b28:	vldr	d17, [sp, #32]
   38b2c:	vmul.f64	d16, d17, d16
   38b30:	vstr	d16, [sp, #32]
   38b34:	b	38b48 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   38b38:	vldr	d16, [pc, #192]	; 38c00 <flatcc_json_parser_struct_as_root@@Base+0x11b4>
   38b3c:	vldr	d17, [sp, #32]
   38b40:	vmul.f64	d16, d17, d16
   38b44:	vstr	d16, [sp, #32]
   38b48:	vldr	d16, [sp, #32]
   38b4c:	ldr	r0, [fp, #28]
   38b50:	vstr	d16, [r0]
   38b54:	b	38bc8 <flatcc_json_parser_struct_as_root@@Base+0x117c>
   38b58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38b5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38b60:	ldr	r2, [fp, #16]
   38b64:	ldr	r3, [fp, #20]
   38b68:	ldr	ip, [fp, #24]
   38b6c:	ldr	lr, [fp, #28]
   38b70:	mov	r4, sp
   38b74:	str	lr, [r4, #4]
   38b78:	str	ip, [r4]
   38b7c:	bl	324e8 <grisu3_diy_fp_encode_double@@Base>
   38b80:	cmp	r0, #0
   38b84:	beq	38b8c <flatcc_json_parser_struct_as_root@@Base+0x1140>
   38b88:	b	38bc8 <flatcc_json_parser_struct_as_root@@Base+0x117c>
   38b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38b90:	add	r1, sp, #44	; 0x2c
   38b94:	bl	14ed8 <strtod@plt>
   38b98:	ldr	r0, [fp, #28]
   38b9c:	vstr	d0, [r0]
   38ba0:	ldr	r0, [sp, #44]	; 0x2c
   38ba4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38ba8:	cmp	r0, r1
   38bac:	bcs	38bbc <flatcc_json_parser_struct_as_root@@Base+0x1170>
   38bb0:	ldr	r0, [sp, #44]	; 0x2c
   38bb4:	str	r0, [fp, #-20]	; 0xffffffec
   38bb8:	b	38bf0 <flatcc_json_parser_struct_as_root@@Base+0x11a4>
   38bbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38bc0:	str	r0, [fp, #-20]	; 0xffffffec
   38bc4:	b	38bf0 <flatcc_json_parser_struct_as_root@@Base+0x11a4>
   38bc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38bcc:	cmp	r0, #0
   38bd0:	beq	38be8 <flatcc_json_parser_struct_as_root@@Base+0x119c>
   38bd4:	ldr	r0, [fp, #28]
   38bd8:	vldr	d16, [r0]
   38bdc:	vneg.f64	d16, d16
   38be0:	ldr	r0, [fp, #28]
   38be4:	vstr	d16, [r0]
   38be8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38bec:	str	r0, [fp, #-20]	; 0xffffffec
   38bf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   38bf4:	sub	sp, fp, #16
   38bf8:	pop	{r4, r5, r6, sl, fp, pc}
   38bfc:	nop	{0}
   38c00:			; <UNDEFINED> instruction: 0x064dd592
   38c04:	strmi	pc, [r0], #207	; 0xcf
   38c08:	usatle	lr, #2, r0, asr #30
   38c0c:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   38c10:	ldmvc	r5!, {r6, sl, fp, pc}
   38c14:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   38c18:	addsvs	r3, r1, r0, lsl #26
   38c1c:	mvnmi	r5, #228, 16	; 0xe40000
   38c20:	strbvs	ip, [lr, -r0, lsl #16]
   38c24:			; <UNDEFINED> instruction: 0x43abc16d
   38c28:	ldrbhi	sl, [r8]
   38c2c:	cmnmi	r6, #1459617792	; 0x57000000
   38c30:	strbcc	r8, [r0, r0]!
   38c34:	movtmi	ip, #4985	; 0x1379
   38c38:	ldrtcs	r0, [r4], -r0
   38c3c:	movwmi	r6, #52213	; 0xcbf5
   38c40:	cdpne	0, 9, cr0, cr0, cr0, {0}
   38c44:	sbcsmi	fp, r6, #196, 24	; 0xc400
   38c48:	strb	r0, [r0, #-0]
   38c4c:	adcmi	r3, r2, #156	; 0x9c
   38c50:	andge	r0, r0, #0
   38c54:	rsbmi	r1, sp, #148, 20	; 0x94000
   38c58:	stmda	r0, {}	; <UNPREDICTABLE>
   38c5c:	eorsmi	r4, r7, #7733248	; 0x760000
   38c60:	andcs	r0, r0, r0
   38c64:	andmi	sl, r2, #95	; 0x5f
   38c68:	andeq	r0, r0, r0
   38c6c:	bicmi	ip, sp, r5, ror #26
   38c70:	andeq	r0, r0, r0
   38c74:	orrsmi	sp, r7, r4, lsl #15
   38c78:	andeq	r0, r0, r0
   38c7c:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   38c80:	andeq	r0, r0, r0
   38c84:	smlawbmi	lr, r0, r4, r8
   38c88:	andeq	r0, r0, r0
   38c8c:	rscsmi	r6, r8, r0, lsl #20
   38c90:	andeq	r0, r0, r0
   38c94:	sbcmi	r8, r3, r0, lsl #16
   38c98:	andeq	r0, r0, r0
   38c9c:	addmi	r4, pc, r0
   38ca0:	andeq	r0, r0, r0
   38ca4:	subsmi	r0, r9, r0
   38ca8:	push	{r4, sl, fp, lr}
   38cac:	add	fp, sp, #8
   38cb0:	sub	sp, sp, #48	; 0x30
   38cb4:	ldr	ip, [fp, #12]
   38cb8:	ldr	lr, [fp, #8]
   38cbc:	ldr	r4, [fp, #16]
   38cc0:	str	r0, [fp, #-16]
   38cc4:	str	r1, [fp, #-20]	; 0xffffffec
   38cc8:	str	r2, [fp, #-24]	; 0xffffffe8
   38ccc:	str	r3, [sp, #28]
   38cd0:	str	ip, [sp, #20]
   38cd4:	str	lr, [sp, #16]
   38cd8:	ldr	r0, [sp, #28]
   38cdc:	cmp	r0, #0
   38ce0:	str	r4, [sp, #12]
   38ce4:	beq	38d04 <flatcc_json_parser_struct_as_root@@Base+0x12b8>
   38ce8:	ldr	r0, [fp, #-16]
   38cec:	ldr	r1, [fp, #-20]	; 0xffffffec
   38cf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38cf4:	movw	r3, #8
   38cf8:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   38cfc:	str	r0, [fp, #-12]
   38d00:	b	38d54 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   38d04:	ldr	r0, [sp, #16]
   38d08:	ldr	r1, [sp, #20]
   38d0c:	subs	r0, r0, #256	; 0x100
   38d10:	sbcs	r1, r1, #0
   38d14:	str	r0, [sp, #8]
   38d18:	str	r1, [sp, #4]
   38d1c:	bcc	38d40 <flatcc_json_parser_struct_as_root@@Base+0x12f4>
   38d20:	b	38d24 <flatcc_json_parser_struct_as_root@@Base+0x12d8>
   38d24:	ldr	r0, [fp, #-16]
   38d28:	ldr	r1, [fp, #-20]	; 0xffffffec
   38d2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38d30:	movw	r3, #7
   38d34:	bl	333f8 <flatcc_json_parser_set_error@@Base>
   38d38:	str	r0, [fp, #-12]
   38d3c:	b	38d54 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   38d40:	ldrb	r0, [sp, #16]
   38d44:	ldr	r1, [fp, #16]
   38d48:	strb	r0, [r1]
   38d4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38d50:	str	r0, [fp, #-12]
   38d54:	ldr	r0, [fp, #-12]
   38d58:	sub	sp, fp, #8
   38d5c:	pop	{r4, sl, fp, pc}
   38d60:	push	{fp, lr}
   38d64:	mov	fp, sp
   38d68:	sub	sp, sp, #16
   38d6c:	str	r0, [fp, #-4]
   38d70:	str	r1, [sp, #8]
   38d74:	str	r2, [sp, #4]
   38d78:	ldr	r0, [fp, #-4]
   38d7c:	ldr	r1, [sp, #8]
   38d80:	ldr	r2, [sp, #4]
   38d84:	bl	35054 <flatcc_json_parser_float@@Base+0x254>
   38d88:	str	r0, [sp, #8]
   38d8c:	ldr	r0, [fp, #-4]
   38d90:	ldr	r1, [sp, #8]
   38d94:	ldr	r2, [sp, #4]
   38d98:	bl	34184 <flatcc_json_parser_skip_constant@@Base+0x104>
   38d9c:	str	r0, [sp, #8]
   38da0:	ldr	r0, [sp, #8]
   38da4:	mov	sp, fp
   38da8:	pop	{fp, pc}
   38dac:	sub	sp, sp, #4
   38db0:	strb	r0, [sp, #3]
   38db4:	ldrb	r0, [sp, #3]
   38db8:	add	sp, sp, #4
   38dbc:	bx	lr

00038dc0 <flatcc_json_printer_error_string@@Base>:
   38dc0:	sub	sp, sp, #12
   38dc4:	str	r0, [sp, #4]
   38dc8:	ldr	r0, [sp, #4]
   38dcc:	cmp	r0, #3
   38dd0:	str	r0, [sp]
   38dd4:	bhi	38e38 <flatcc_json_printer_error_string@@Base+0x78>
   38dd8:	add	r0, pc, #8
   38ddc:	ldr	r1, [sp]
   38de0:	ldr	r2, [r0, r1, lsl #2]
   38de4:	add	pc, r0, r2
   38de8:	andeq	r0, r0, r0, lsl r0
   38dec:	andeq	r0, r0, r0, lsr #32
   38df0:	andeq	r0, r0, r0, lsr r0
   38df4:	andeq	r0, r0, r0, asr #32
   38df8:	ldr	r0, [pc, #92]	; 38e5c <flatcc_json_printer_error_string@@Base+0x9c>
   38dfc:	add	r0, pc, r0
   38e00:	str	r0, [sp, #8]
   38e04:	b	38e44 <flatcc_json_printer_error_string@@Base+0x84>
   38e08:	ldr	r0, [pc, #72]	; 38e58 <flatcc_json_printer_error_string@@Base+0x98>
   38e0c:	add	r0, pc, r0
   38e10:	str	r0, [sp, #8]
   38e14:	b	38e44 <flatcc_json_printer_error_string@@Base+0x84>
   38e18:	ldr	r0, [pc, #52]	; 38e54 <flatcc_json_printer_error_string@@Base+0x94>
   38e1c:	add	r0, pc, r0
   38e20:	str	r0, [sp, #8]
   38e24:	b	38e44 <flatcc_json_printer_error_string@@Base+0x84>
   38e28:	ldr	r0, [pc, #32]	; 38e50 <flatcc_json_printer_error_string@@Base+0x90>
   38e2c:	add	r0, pc, r0
   38e30:	str	r0, [sp, #8]
   38e34:	b	38e44 <flatcc_json_printer_error_string@@Base+0x84>
   38e38:	ldr	r0, [pc, #32]	; 38e60 <flatcc_json_printer_error_string@@Base+0xa0>
   38e3c:	add	r0, pc, r0
   38e40:	str	r0, [sp, #8]
   38e44:	ldr	r0, [sp, #8]
   38e48:	add	sp, sp, #12
   38e4c:	bx	lr
   38e50:	andeq	r1, r1, r5, asr #30
   38e54:	andeq	r3, r1, r9, ror #4
   38e58:	andeq	r3, r1, pc, ror #4
   38e5c:	andeq	r1, r1, r8, lsr #28
   38e60:	andeq	r2, r1, r3, lsl r2

00038e64 <flatcc_json_printer_fmt_float@@Base>:
   38e64:	push	{fp, lr}
   38e68:	mov	fp, sp
   38e6c:	sub	sp, sp, #8
   38e70:	str	r0, [sp, #4]
   38e74:	vstr	s0, [sp]
   38e78:	vldr	s0, [sp]
   38e7c:	vcvt.f64.f32	d0, s0
   38e80:	ldr	r0, [sp, #4]
   38e84:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   38e88:	mov	sp, fp
   38e8c:	pop	{fp, pc}
   38e90:	push	{fp, lr}
   38e94:	mov	fp, sp
   38e98:	sub	sp, sp, #80	; 0x50
   38e9c:	vstr	d0, [fp, #-16]
   38ea0:	str	r0, [fp, #-20]	; 0xffffffec
   38ea4:	vldr	d0, [fp, #-16]
   38ea8:	bl	44390 <flatcc_json_printer_clear@@Base+0x5c>
   38eac:	str	r1, [sp, #36]	; 0x24
   38eb0:	str	r0, [sp, #32]
   38eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   38eb8:	str	r0, [sp, #28]
   38ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   38ec0:	movw	r1, #0
   38ec4:	cmp	r0, r1
   38ec8:	beq	38ed0 <flatcc_json_printer_fmt_float@@Base+0x6c>
   38ecc:	b	38ef0 <flatcc_json_printer_fmt_float@@Base+0x8c>
   38ed0:	ldr	r0, [pc, #1312]	; 393f8 <flatcc_json_printer_fmt_float@@Base+0x594>
   38ed4:	add	r0, pc, r0
   38ed8:	ldr	r1, [pc, #1308]	; 393fc <flatcc_json_printer_fmt_float@@Base+0x598>
   38edc:	add	r1, pc, r1
   38ee0:	ldr	r2, [pc, #1304]	; 39400 <flatcc_json_printer_fmt_float@@Base+0x59c>
   38ee4:	add	r3, pc, r2
   38ee8:	movw	r2, #189	; 0xbd
   38eec:	bl	14f08 <__assert_fail@plt>
   38ef0:	ldr	r0, [sp, #32]
   38ef4:	ldr	r1, [sp, #36]	; 0x24
   38ef8:	lsl	r1, r1, #1
   38efc:	orr	r1, r1, r0, lsr #31
   38f00:	mov	r2, #1
   38f04:	rsbs	r0, r2, r0, lsl #1
   38f08:	movw	r2, #0
   38f0c:	movt	r2, #65504	; 0xffe0
   38f10:	sbcs	r1, r1, r2
   38f14:	str	r0, [sp, #24]
   38f18:	str	r1, [sp, #20]
   38f1c:	bcc	38f44 <flatcc_json_printer_fmt_float@@Base+0xe0>
   38f20:	b	38f24 <flatcc_json_printer_fmt_float@@Base+0xc0>
   38f24:	ldr	r0, [pc, #1244]	; 39408 <flatcc_json_printer_fmt_float@@Base+0x5a4>
   38f28:	add	r1, pc, r0
   38f2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38f30:	ldr	r3, [sp, #32]
   38f34:	ldr	r2, [sp, #36]	; 0x24
   38f38:	bl	14ef0 <sprintf@plt>
   38f3c:	str	r0, [fp, #-4]
   38f40:	b	393ec <flatcc_json_printer_fmt_float@@Base+0x588>
   38f44:	ldrb	r0, [sp, #39]	; 0x27
   38f48:	tst	r0, #128	; 0x80
   38f4c:	beq	38f80 <flatcc_json_printer_fmt_float@@Base+0x11c>
   38f50:	b	38f54 <flatcc_json_printer_fmt_float@@Base+0xf0>
   38f54:	ldr	r0, [sp, #28]
   38f58:	add	r1, r0, #1
   38f5c:	str	r1, [sp, #28]
   38f60:	mov	r1, #45	; 0x2d
   38f64:	strb	r1, [r0]
   38f68:	vldr	d16, [fp, #-16]
   38f6c:	vneg.f64	d16, d16
   38f70:	vstr	d16, [fp, #-16]
   38f74:	ldr	r0, [sp, #36]	; 0x24
   38f78:	eor	r0, r0, #-2147483648	; 0x80000000
   38f7c:	str	r0, [sp, #36]	; 0x24
   38f80:	ldr	r0, [sp, #32]
   38f84:	ldr	r1, [sp, #36]	; 0x24
   38f88:	orr	r0, r0, r1
   38f8c:	cmp	r0, #0
   38f90:	bne	38fcc <flatcc_json_printer_fmt_float@@Base+0x168>
   38f94:	b	38f98 <flatcc_json_printer_fmt_float@@Base+0x134>
   38f98:	ldr	r0, [sp, #28]
   38f9c:	add	r1, r0, #1
   38fa0:	str	r1, [sp, #28]
   38fa4:	movw	r1, #48	; 0x30
   38fa8:	strb	r1, [r0]
   38fac:	ldr	r0, [sp, #28]
   38fb0:	movw	r1, #0
   38fb4:	strb	r1, [r0]
   38fb8:	ldr	r0, [sp, #28]
   38fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   38fc0:	sub	r0, r0, r1
   38fc4:	str	r0, [fp, #-4]
   38fc8:	b	393ec <flatcc_json_printer_fmt_float@@Base+0x588>
   38fcc:	ldr	r0, [sp, #32]
   38fd0:	ldr	r1, [sp, #36]	; 0x24
   38fd4:	movw	r2, #0
   38fd8:	movt	r2, #32752	; 0x7ff0
   38fdc:	eor	r1, r1, r2
   38fe0:	orr	r0, r0, r1
   38fe4:	cmp	r0, #0
   38fe8:	bne	3904c <flatcc_json_printer_fmt_float@@Base+0x1e8>
   38fec:	b	38ff0 <flatcc_json_printer_fmt_float@@Base+0x18c>
   38ff0:	ldr	r0, [sp, #28]
   38ff4:	add	r1, r0, #1
   38ff8:	str	r1, [sp, #28]
   38ffc:	movw	r1, #105	; 0x69
   39000:	strb	r1, [r0]
   39004:	ldr	r0, [sp, #28]
   39008:	add	r1, r0, #1
   3900c:	str	r1, [sp, #28]
   39010:	movw	r1, #110	; 0x6e
   39014:	strb	r1, [r0]
   39018:	ldr	r0, [sp, #28]
   3901c:	add	r1, r0, #1
   39020:	str	r1, [sp, #28]
   39024:	movw	r1, #102	; 0x66
   39028:	strb	r1, [r0]
   3902c:	ldr	r0, [sp, #28]
   39030:	movw	r1, #0
   39034:	strb	r1, [r0]
   39038:	ldr	r0, [sp, #28]
   3903c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39040:	sub	r0, r0, r1
   39044:	str	r0, [fp, #-4]
   39048:	b	393ec <flatcc_json_printer_fmt_float@@Base+0x588>
   3904c:	vldr	d0, [fp, #-16]
   39050:	ldr	r0, [sp, #28]
   39054:	sub	r1, fp, #28
   39058:	sub	r2, fp, #24
   3905c:	bl	443b0 <flatcc_json_printer_clear@@Base+0x7c>
   39060:	str	r0, [fp, #-32]	; 0xffffffe0
   39064:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39068:	cmp	r0, #0
   3906c:	bne	390a0 <flatcc_json_printer_fmt_float@@Base+0x23c>
   39070:	ldr	r0, [pc, #908]	; 39404 <flatcc_json_printer_fmt_float@@Base+0x5a0>
   39074:	add	r1, pc, r0
   39078:	ldr	r0, [sp, #28]
   3907c:	vldr	d16, [fp, #-16]
   39080:	vmov	r2, r3, d16
   39084:	bl	14ef0 <sprintf@plt>
   39088:	ldr	r1, [sp, #28]
   3908c:	ldr	r2, [fp, #-20]	; 0xffffffec
   39090:	sub	r1, r1, r2
   39094:	add	r0, r0, r1
   39098:	str	r0, [fp, #-4]
   3909c:	b	393ec <flatcc_json_printer_fmt_float@@Base+0x588>
   390a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   390a4:	movw	r1, #0
   390a8:	sub	r0, r1, r0
   390ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   390b0:	sub	r1, r1, #1
   390b4:	movw	r2, #1
   390b8:	cmp	r2, r1
   390bc:	str	r0, [sp, #16]
   390c0:	blt	390d0 <flatcc_json_printer_fmt_float@@Base+0x26c>
   390c4:	movw	r0, #1
   390c8:	str	r0, [sp, #12]
   390cc:	b	390dc <flatcc_json_printer_fmt_float@@Base+0x278>
   390d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   390d4:	sub	r0, r0, #1
   390d8:	str	r0, [sp, #12]
   390dc:	ldr	r0, [sp, #12]
   390e0:	ldr	r1, [sp, #16]
   390e4:	cmp	r1, r0
   390e8:	bgt	39100 <flatcc_json_printer_fmt_float@@Base+0x29c>
   390ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   390f0:	movw	r1, #0
   390f4:	sub	r0, r1, r0
   390f8:	str	r0, [sp, #8]
   390fc:	b	39134 <flatcc_json_printer_fmt_float@@Base+0x2d0>
   39100:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39104:	sub	r0, r0, #1
   39108:	movw	r1, #1
   3910c:	cmp	r1, r0
   39110:	blt	39120 <flatcc_json_printer_fmt_float@@Base+0x2bc>
   39114:	movw	r0, #1
   39118:	str	r0, [sp, #4]
   3911c:	b	3912c <flatcc_json_printer_fmt_float@@Base+0x2c8>
   39120:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39124:	sub	r0, r0, #1
   39128:	str	r0, [sp, #4]
   3912c:	ldr	r0, [sp, #4]
   39130:	str	r0, [sp, #8]
   39134:	ldr	r0, [sp, #8]
   39138:	str	r0, [fp, #-36]	; 0xffffffdc
   3913c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39140:	cmp	r0, #0
   39144:	bge	3921c <flatcc_json_printer_fmt_float@@Base+0x3b8>
   39148:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3914c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   39150:	add	r0, r0, r1
   39154:	cmn	r0, #3
   39158:	ble	3921c <flatcc_json_printer_fmt_float@@Base+0x3b8>
   3915c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39160:	ldr	r1, [fp, #-24]	; 0xffffffe8
   39164:	movw	r2, #0
   39168:	sub	r1, r2, r1
   3916c:	cmp	r0, r1
   39170:	bgt	3921c <flatcc_json_printer_fmt_float@@Base+0x3b8>
   39174:	ldr	r0, [sp, #28]
   39178:	add	r0, r0, #2
   3917c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   39180:	movw	r2, #0
   39184:	sub	r1, r2, r1
   39188:	add	r0, r0, r1
   3918c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39190:	sub	r1, r2, r1
   39194:	add	r0, r0, r1
   39198:	ldr	r1, [sp, #28]
   3919c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   391a0:	bl	14e18 <memmove@plt>
   391a4:	ldr	r0, [sp, #28]
   391a8:	movw	r1, #48	; 0x30
   391ac:	strb	r1, [r0]
   391b0:	ldr	r0, [sp, #28]
   391b4:	movw	r1, #46	; 0x2e
   391b8:	strb	r1, [r0, #1]
   391bc:	movw	r0, #2
   391c0:	str	r0, [sp, #40]	; 0x28
   391c4:	ldr	r0, [sp, #40]	; 0x28
   391c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   391cc:	movw	r2, #2
   391d0:	sub	r1, r2, r1
   391d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   391d8:	sub	r1, r1, r2
   391dc:	cmp	r0, r1
   391e0:	bge	39208 <flatcc_json_printer_fmt_float@@Base+0x3a4>
   391e4:	ldr	r0, [sp, #28]
   391e8:	ldr	r1, [sp, #40]	; 0x28
   391ec:	add	r0, r0, r1
   391f0:	movw	r1, #48	; 0x30
   391f4:	strb	r1, [r0]
   391f8:	ldr	r0, [sp, #40]	; 0x28
   391fc:	add	r0, r0, #1
   39200:	str	r0, [sp, #40]	; 0x28
   39204:	b	391c4 <flatcc_json_printer_fmt_float@@Base+0x360>
   39208:	ldr	r0, [sp, #40]	; 0x28
   3920c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39210:	add	r0, r1, r0
   39214:	str	r0, [fp, #-28]	; 0xffffffe4
   39218:	b	393c0 <flatcc_json_printer_fmt_float@@Base+0x55c>
   3921c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39220:	cmp	r0, #0
   39224:	bge	39310 <flatcc_json_printer_fmt_float@@Base+0x4ac>
   39228:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3922c:	cmp	r0, #1
   39230:	ble	39310 <flatcc_json_printer_fmt_float@@Base+0x4ac>
   39234:	movw	r0, #0
   39238:	str	r0, [sp, #40]	; 0x28
   3923c:	ldr	r0, [sp, #40]	; 0x28
   39240:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39244:	cmp	r0, r1
   39248:	bge	39290 <flatcc_json_printer_fmt_float@@Base+0x42c>
   3924c:	ldr	r0, [sp, #28]
   39250:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39254:	ldr	r2, [sp, #40]	; 0x28
   39258:	sub	r1, r1, r2
   3925c:	sub	r1, r1, #1
   39260:	add	r0, r0, r1
   39264:	ldrb	r0, [r0]
   39268:	ldr	r1, [sp, #28]
   3926c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39270:	ldr	r3, [sp, #40]	; 0x28
   39274:	sub	r2, r2, r3
   39278:	add	r1, r1, r2
   3927c:	strb	r0, [r1]
   39280:	ldr	r0, [sp, #40]	; 0x28
   39284:	add	r0, r0, #1
   39288:	str	r0, [sp, #40]	; 0x28
   3928c:	b	3923c <flatcc_json_printer_fmt_float@@Base+0x3d8>
   39290:	ldr	r0, [sp, #28]
   39294:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39298:	add	r2, r1, #1
   3929c:	str	r2, [fp, #-28]	; 0xffffffe4
   392a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   392a4:	sub	r1, r1, r2
   392a8:	add	r0, r0, r1
   392ac:	movw	r1, #46	; 0x2e
   392b0:	strb	r1, [r0]
   392b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   392b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   392bc:	add	r0, r1, r0
   392c0:	str	r0, [fp, #-24]	; 0xffffffe8
   392c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   392c8:	cmp	r0, #0
   392cc:	beq	3930c <flatcc_json_printer_fmt_float@@Base+0x4a8>
   392d0:	ldr	r0, [sp, #28]
   392d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   392d8:	add	r2, r1, #1
   392dc:	str	r2, [fp, #-28]	; 0xffffffe4
   392e0:	add	r0, r0, r1
   392e4:	movw	r1, #101	; 0x65
   392e8:	strb	r1, [r0]
   392ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   392f0:	ldr	r1, [sp, #28]
   392f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   392f8:	add	r1, r1, r2
   392fc:	bl	4477c <flatcc_json_printer_clear@@Base+0x448>
   39300:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39304:	add	r0, r1, r0
   39308:	str	r0, [fp, #-28]	; 0xffffffe4
   3930c:	b	393bc <flatcc_json_printer_fmt_float@@Base+0x558>
   39310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39314:	cmp	r0, #0
   39318:	blt	39328 <flatcc_json_printer_fmt_float@@Base+0x4c4>
   3931c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39320:	cmp	r0, #2
   39324:	ble	39368 <flatcc_json_printer_fmt_float@@Base+0x504>
   39328:	ldr	r0, [sp, #28]
   3932c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39330:	add	r2, r1, #1
   39334:	str	r2, [fp, #-28]	; 0xffffffe4
   39338:	add	r0, r0, r1
   3933c:	movw	r1, #101	; 0x65
   39340:	strb	r1, [r0]
   39344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39348:	ldr	r1, [sp, #28]
   3934c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39350:	add	r1, r1, r2
   39354:	bl	4477c <flatcc_json_printer_clear@@Base+0x448>
   39358:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3935c:	add	r0, r1, r0
   39360:	str	r0, [fp, #-28]	; 0xffffffe4
   39364:	b	393b8 <flatcc_json_printer_fmt_float@@Base+0x554>
   39368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3936c:	cmp	r0, #0
   39370:	ble	393b4 <flatcc_json_printer_fmt_float@@Base+0x550>
   39374:	b	39378 <flatcc_json_printer_fmt_float@@Base+0x514>
   39378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3937c:	mvn	r1, #0
   39380:	add	r1, r0, r1
   39384:	str	r1, [fp, #-24]	; 0xffffffe8
   39388:	cmp	r0, #0
   3938c:	ble	393b0 <flatcc_json_printer_fmt_float@@Base+0x54c>
   39390:	ldr	r0, [sp, #28]
   39394:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39398:	add	r2, r1, #1
   3939c:	str	r2, [fp, #-28]	; 0xffffffe4
   393a0:	add	r0, r0, r1
   393a4:	movw	r1, #48	; 0x30
   393a8:	strb	r1, [r0]
   393ac:	b	39378 <flatcc_json_printer_fmt_float@@Base+0x514>
   393b0:	b	393b4 <flatcc_json_printer_fmt_float@@Base+0x550>
   393b4:	b	393b8 <flatcc_json_printer_fmt_float@@Base+0x554>
   393b8:	b	393bc <flatcc_json_printer_fmt_float@@Base+0x558>
   393bc:	b	393c0 <flatcc_json_printer_fmt_float@@Base+0x55c>
   393c0:	ldr	r0, [sp, #28]
   393c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   393c8:	add	r0, r0, r1
   393cc:	movw	r1, #0
   393d0:	strb	r1, [r0]
   393d4:	ldr	r0, [sp, #28]
   393d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   393dc:	add	r0, r0, r1
   393e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   393e4:	sub	r0, r0, r1
   393e8:	str	r0, [fp, #-4]
   393ec:	ldr	r0, [fp, #-4]
   393f0:	mov	sp, fp
   393f4:	pop	{fp, pc}
   393f8:	strdeq	r3, [r1], -sl
   393fc:	strdeq	r3, [r1], -r6
   39400:	andeq	r3, r1, ip, asr r4
   39404:	andeq	r3, r1, r2, lsl #6
   39408:	andeq	r3, r1, r0, asr #8

0003940c <flatcc_json_printer_fmt_double@@Base>:
   3940c:	push	{fp, lr}
   39410:	mov	fp, sp
   39414:	sub	sp, sp, #16
   39418:	str	r0, [fp, #-4]
   3941c:	vstr	d0, [sp]
   39420:	vldr	d0, [sp]
   39424:	ldr	r0, [fp, #-4]
   39428:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3942c:	mov	sp, fp
   39430:	pop	{fp, pc}

00039434 <flatcc_json_printer_fmt_bool@@Base>:
   39434:	sub	sp, sp, #12
   39438:	str	r0, [sp, #4]
   3943c:	str	r1, [sp]
   39440:	ldr	r0, [sp]
   39444:	cmp	r0, #0
   39448:	beq	39484 <flatcc_json_printer_fmt_bool@@Base+0x50>
   3944c:	ldr	r0, [pc, #124]	; 394d0 <flatcc_json_printer_fmt_bool@@Base+0x9c>
   39450:	add	r0, pc, r0
   39454:	ldr	r1, [sp, #4]
   39458:	ldrb	r2, [r0]
   3945c:	strb	r2, [r1]
   39460:	ldrb	r2, [r0, #1]
   39464:	strb	r2, [r1, #1]
   39468:	ldrb	r2, [r0, #2]
   3946c:	strb	r2, [r1, #2]
   39470:	ldrb	r0, [r0, #3]
   39474:	strb	r0, [r1, #3]
   39478:	movw	r0, #4
   3947c:	str	r0, [sp, #8]
   39480:	b	394c0 <flatcc_json_printer_fmt_bool@@Base+0x8c>
   39484:	ldr	r0, [pc, #64]	; 394cc <flatcc_json_printer_fmt_bool@@Base+0x98>
   39488:	add	r0, pc, r0
   3948c:	ldr	r1, [sp, #4]
   39490:	ldrb	r2, [r0]
   39494:	strb	r2, [r1]
   39498:	ldrb	r2, [r0, #1]
   3949c:	strb	r2, [r1, #1]
   394a0:	ldrb	r2, [r0, #2]
   394a4:	strb	r2, [r1, #2]
   394a8:	ldrb	r2, [r0, #3]
   394ac:	strb	r2, [r1, #3]
   394b0:	ldrb	r0, [r0, #4]
   394b4:	strb	r0, [r1, #4]
   394b8:	movw	r0, #5
   394bc:	str	r0, [sp, #8]
   394c0:	ldr	r0, [sp, #8]
   394c4:	add	sp, sp, #12
   394c8:	bx	lr
   394cc:	andeq	pc, r0, r8, lsr #31
   394d0:	ldrdeq	pc, [r0], -fp

000394d4 <flatcc_json_printer_string@@Base>:
   394d4:	push	{fp, lr}
   394d8:	mov	fp, sp
   394dc:	sub	sp, sp, #16
   394e0:	str	r0, [fp, #-4]
   394e4:	str	r1, [sp, #8]
   394e8:	str	r2, [sp, #4]
   394ec:	ldr	r0, [fp, #-4]
   394f0:	ldr	r1, [sp, #8]
   394f4:	ldr	r2, [sp, #4]
   394f8:	bl	39504 <flatcc_json_printer_string@@Base+0x30>
   394fc:	mov	sp, fp
   39500:	pop	{fp, pc}
   39504:	push	{fp, lr}
   39508:	mov	fp, sp
   3950c:	sub	sp, sp, #32
   39510:	str	r0, [fp, #-4]
   39514:	str	r1, [fp, #-8]
   39518:	str	r2, [fp, #-12]
   3951c:	ldr	r0, [fp, #-8]
   39520:	str	r0, [sp, #16]
   39524:	ldr	r0, [fp, #-4]
   39528:	ldr	r1, [r0, #20]
   3952c:	add	r2, r1, #1
   39530:	str	r2, [r0, #20]
   39534:	movw	r0, #34	; 0x22
   39538:	strb	r0, [r1]
   3953c:	ldr	r0, [sp, #16]
   39540:	ldrb	r0, [r0]
   39544:	strb	r0, [sp, #15]
   39548:	ldrb	r0, [sp, #15]
   3954c:	cmp	r0, #32
   39550:	movw	r0, #0
   39554:	str	r0, [sp, #4]
   39558:	blt	39584 <flatcc_json_printer_string@@Base+0xb0>
   3955c:	ldrb	r0, [sp, #15]
   39560:	cmp	r0, #34	; 0x22
   39564:	movw	r0, #0
   39568:	str	r0, [sp, #4]
   3956c:	beq	39584 <flatcc_json_printer_string@@Base+0xb0>
   39570:	ldrb	r0, [sp, #15]
   39574:	cmp	r0, #92	; 0x5c
   39578:	movw	r0, #0
   3957c:	movne	r0, #1
   39580:	str	r0, [sp, #4]
   39584:	ldr	r0, [sp, #4]
   39588:	tst	r0, #1
   3958c:	beq	395a8 <flatcc_json_printer_string@@Base+0xd4>
   39590:	ldr	r0, [sp, #16]
   39594:	add	r1, r0, #1
   39598:	str	r1, [sp, #16]
   3959c:	ldrb	r0, [r0, #1]
   395a0:	strb	r0, [sp, #15]
   395a4:	b	39548 <flatcc_json_printer_string@@Base+0x74>
   395a8:	ldr	r0, [sp, #16]
   395ac:	ldr	r1, [fp, #-8]
   395b0:	sub	r0, r0, r1
   395b4:	str	r0, [sp, #8]
   395b8:	ldr	r0, [fp, #-4]
   395bc:	ldr	r1, [fp, #-8]
   395c0:	ldr	r2, [sp, #8]
   395c4:	bl	398a4 <flatcc_json_printer_write@@Base+0x30>
   395c8:	ldr	r0, [sp, #8]
   395cc:	ldr	r1, [fp, #-12]
   395d0:	sub	r0, r1, r0
   395d4:	str	r0, [fp, #-12]
   395d8:	ldr	r0, [fp, #-12]
   395dc:	cmp	r0, #0
   395e0:	bne	395e8 <flatcc_json_printer_string@@Base+0x114>
   395e4:	b	39854 <flatcc_json_printer_string@@Base+0x380>
   395e8:	ldr	r0, [sp, #8]
   395ec:	ldr	r1, [fp, #-8]
   395f0:	add	r0, r1, r0
   395f4:	str	r0, [fp, #-8]
   395f8:	ldr	r0, [fp, #-4]
   395fc:	ldr	r1, [r0, #20]
   39600:	add	r2, r1, #1
   39604:	str	r2, [r0, #20]
   39608:	mov	r0, #92	; 0x5c
   3960c:	strb	r0, [r1]
   39610:	ldrb	r0, [sp, #15]
   39614:	mov	r1, r0
   39618:	cmp	r0, #8
   3961c:	str	r1, [sp]
   39620:	beq	39730 <flatcc_json_printer_string@@Base+0x25c>
   39624:	b	39628 <flatcc_json_printer_string@@Base+0x154>
   39628:	ldr	r0, [sp]
   3962c:	cmp	r0, #9
   39630:	beq	396c0 <flatcc_json_printer_string@@Base+0x1ec>
   39634:	b	39638 <flatcc_json_printer_string@@Base+0x164>
   39638:	ldr	r0, [sp]
   3963c:	cmp	r0, #10
   39640:	beq	39714 <flatcc_json_printer_string@@Base+0x240>
   39644:	b	39648 <flatcc_json_printer_string@@Base+0x174>
   39648:	ldr	r0, [sp]
   3964c:	cmp	r0, #12
   39650:	beq	396dc <flatcc_json_printer_string@@Base+0x208>
   39654:	b	39658 <flatcc_json_printer_string@@Base+0x184>
   39658:	ldr	r0, [sp]
   3965c:	cmp	r0, #13
   39660:	beq	396f8 <flatcc_json_printer_string@@Base+0x224>
   39664:	b	39668 <flatcc_json_printer_string@@Base+0x194>
   39668:	ldr	r0, [sp]
   3966c:	cmp	r0, #34	; 0x22
   39670:	beq	39688 <flatcc_json_printer_string@@Base+0x1b4>
   39674:	b	39678 <flatcc_json_printer_string@@Base+0x1a4>
   39678:	ldr	r0, [sp]
   3967c:	cmp	r0, #92	; 0x5c
   39680:	beq	396a4 <flatcc_json_printer_string@@Base+0x1d0>
   39684:	b	3974c <flatcc_json_printer_string@@Base+0x278>
   39688:	ldr	r0, [fp, #-4]
   3968c:	ldr	r1, [r0, #20]
   39690:	add	r2, r1, #1
   39694:	str	r2, [r0, #20]
   39698:	movw	r0, #34	; 0x22
   3969c:	strb	r0, [r1]
   396a0:	b	39828 <flatcc_json_printer_string@@Base+0x354>
   396a4:	ldr	r0, [fp, #-4]
   396a8:	ldr	r1, [r0, #20]
   396ac:	add	r2, r1, #1
   396b0:	str	r2, [r0, #20]
   396b4:	movw	r0, #92	; 0x5c
   396b8:	strb	r0, [r1]
   396bc:	b	39828 <flatcc_json_printer_string@@Base+0x354>
   396c0:	ldr	r0, [fp, #-4]
   396c4:	ldr	r1, [r0, #20]
   396c8:	add	r2, r1, #1
   396cc:	str	r2, [r0, #20]
   396d0:	movw	r0, #116	; 0x74
   396d4:	strb	r0, [r1]
   396d8:	b	39828 <flatcc_json_printer_string@@Base+0x354>
   396dc:	ldr	r0, [fp, #-4]
   396e0:	ldr	r1, [r0, #20]
   396e4:	add	r2, r1, #1
   396e8:	str	r2, [r0, #20]
   396ec:	movw	r0, #102	; 0x66
   396f0:	strb	r0, [r1]
   396f4:	b	39828 <flatcc_json_printer_string@@Base+0x354>
   396f8:	ldr	r0, [fp, #-4]
   396fc:	ldr	r1, [r0, #20]
   39700:	add	r2, r1, #1
   39704:	str	r2, [r0, #20]
   39708:	movw	r0, #114	; 0x72
   3970c:	strb	r0, [r1]
   39710:	b	39828 <flatcc_json_printer_string@@Base+0x354>
   39714:	ldr	r0, [fp, #-4]
   39718:	ldr	r1, [r0, #20]
   3971c:	add	r2, r1, #1
   39720:	str	r2, [r0, #20]
   39724:	movw	r0, #110	; 0x6e
   39728:	strb	r0, [r1]
   3972c:	b	39828 <flatcc_json_printer_string@@Base+0x354>
   39730:	ldr	r0, [fp, #-4]
   39734:	ldr	r1, [r0, #20]
   39738:	add	r2, r1, #1
   3973c:	str	r2, [r0, #20]
   39740:	movw	r0, #98	; 0x62
   39744:	strb	r0, [r1]
   39748:	b	39828 <flatcc_json_printer_string@@Base+0x354>
   3974c:	ldr	r0, [fp, #-4]
   39750:	ldr	r1, [r0, #20]
   39754:	add	r2, r1, #1
   39758:	str	r2, [r0, #20]
   3975c:	movw	r0, #117	; 0x75
   39760:	strb	r0, [r1]
   39764:	ldr	r0, [fp, #-4]
   39768:	ldr	r1, [r0, #20]
   3976c:	add	r2, r1, #1
   39770:	str	r2, [r0, #20]
   39774:	movw	r0, #48	; 0x30
   39778:	strb	r0, [r1]
   3977c:	ldr	r1, [fp, #-4]
   39780:	ldr	r2, [r1, #20]
   39784:	add	r3, r2, #1
   39788:	str	r3, [r1, #20]
   3978c:	strb	r0, [r2]
   39790:	ldrb	r0, [sp, #15]
   39794:	asr	r0, r0, #4
   39798:	strb	r0, [sp, #14]
   3979c:	ldrb	r0, [sp, #14]
   397a0:	cmp	r0, #10
   397a4:	movw	r0, #0
   397a8:	movlt	r0, #1
   397ac:	tst	r0, #1
   397b0:	movw	r0, #48	; 0x30
   397b4:	mov	r1, r0
   397b8:	moveq	r1, #87	; 0x57
   397bc:	ldrb	r2, [sp, #14]
   397c0:	add	r1, r2, r1
   397c4:	strb	r1, [sp, #14]
   397c8:	ldrb	r1, [sp, #14]
   397cc:	ldr	r2, [fp, #-4]
   397d0:	ldr	r3, [r2, #20]
   397d4:	add	ip, r3, #1
   397d8:	str	ip, [r2, #20]
   397dc:	strb	r1, [r3]
   397e0:	ldrb	r1, [sp, #15]
   397e4:	and	r1, r1, #15
   397e8:	strb	r1, [sp, #14]
   397ec:	ldrb	r1, [sp, #14]
   397f0:	cmp	r1, #10
   397f4:	movw	r1, #0
   397f8:	movlt	r1, #1
   397fc:	tst	r1, #1
   39800:	moveq	r0, #87	; 0x57
   39804:	ldrb	r1, [sp, #14]
   39808:	add	r0, r1, r0
   3980c:	strb	r0, [sp, #14]
   39810:	ldrb	r0, [sp, #14]
   39814:	ldr	r1, [fp, #-4]
   39818:	ldr	r2, [r1, #20]
   3981c:	add	r3, r2, #1
   39820:	str	r3, [r1, #20]
   39824:	strb	r0, [r2]
   39828:	ldr	r0, [sp, #16]
   3982c:	add	r0, r0, #1
   39830:	str	r0, [sp, #16]
   39834:	ldr	r0, [fp, #-12]
   39838:	mvn	r1, #0
   3983c:	add	r0, r0, r1
   39840:	str	r0, [fp, #-12]
   39844:	ldr	r0, [fp, #-8]
   39848:	add	r0, r0, #1
   3984c:	str	r0, [fp, #-8]
   39850:	b	3953c <flatcc_json_printer_string@@Base+0x68>
   39854:	ldr	r0, [fp, #-4]
   39858:	ldr	r1, [r0, #20]
   3985c:	add	r2, r1, #1
   39860:	str	r2, [r0, #20]
   39864:	movw	r0, #34	; 0x22
   39868:	strb	r0, [r1]
   3986c:	mov	sp, fp
   39870:	pop	{fp, pc}

00039874 <flatcc_json_printer_write@@Base>:
   39874:	push	{fp, lr}
   39878:	mov	fp, sp
   3987c:	sub	sp, sp, #16
   39880:	str	r0, [fp, #-4]
   39884:	str	r1, [sp, #8]
   39888:	str	r2, [sp, #4]
   3988c:	ldr	r0, [fp, #-4]
   39890:	ldr	r1, [sp, #8]
   39894:	ldr	r2, [sp, #4]
   39898:	bl	398a4 <flatcc_json_printer_write@@Base+0x30>
   3989c:	mov	sp, fp
   398a0:	pop	{fp, pc}
   398a4:	push	{fp, lr}
   398a8:	mov	fp, sp
   398ac:	sub	sp, sp, #16
   398b0:	str	r0, [fp, #-4]
   398b4:	str	r1, [sp, #8]
   398b8:	str	r2, [sp, #4]
   398bc:	ldr	r0, [fp, #-4]
   398c0:	ldr	r0, [r0, #20]
   398c4:	ldr	r1, [sp, #4]
   398c8:	add	r0, r0, r1
   398cc:	ldr	r1, [fp, #-4]
   398d0:	ldr	r1, [r1, #16]
   398d4:	cmp	r0, r1
   398d8:	bcc	398f0 <flatcc_json_printer_write@@Base+0x7c>
   398dc:	ldr	r0, [fp, #-4]
   398e0:	ldr	r1, [sp, #8]
   398e4:	ldr	r2, [sp, #4]
   398e8:	bl	4582c <flatcc_json_printer_clear@@Base+0x14f8>
   398ec:	b	39918 <flatcc_json_printer_write@@Base+0xa4>
   398f0:	ldr	r0, [fp, #-4]
   398f4:	ldr	r0, [r0, #20]
   398f8:	ldr	r1, [sp, #8]
   398fc:	ldr	r2, [sp, #4]
   39900:	bl	14e30 <memcpy@plt>
   39904:	ldr	r0, [sp, #4]
   39908:	ldr	r1, [fp, #-4]
   3990c:	ldr	r2, [r1, #20]
   39910:	add	r0, r2, r0
   39914:	str	r0, [r1, #20]
   39918:	mov	sp, fp
   3991c:	pop	{fp, pc}

00039920 <flatcc_json_printer_nl@@Base>:
   39920:	push	{fp, lr}
   39924:	mov	fp, sp
   39928:	sub	sp, sp, #8
   3992c:	str	r0, [sp, #4]
   39930:	ldr	r0, [sp, #4]
   39934:	ldr	r1, [r0, #20]
   39938:	add	r2, r1, #1
   3993c:	str	r2, [r0, #20]
   39940:	movw	r0, #10
   39944:	strb	r0, [r1]
   39948:	ldr	r0, [sp, #4]
   3994c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   39950:	mov	sp, fp
   39954:	pop	{fp, pc}
   39958:	push	{fp, lr}
   3995c:	mov	fp, sp
   39960:	sub	sp, sp, #8
   39964:	str	r0, [sp, #4]
   39968:	ldr	r0, [sp, #4]
   3996c:	ldr	r0, [r0, #20]
   39970:	ldr	r1, [sp, #4]
   39974:	ldr	r1, [r1, #16]
   39978:	cmp	r0, r1
   3997c:	bcc	399a0 <flatcc_json_printer_nl@@Base+0x80>
   39980:	ldr	r0, [sp, #4]
   39984:	ldr	r0, [r0, #44]	; 0x2c
   39988:	ldr	r1, [sp, #4]
   3998c:	str	r0, [sp]
   39990:	mov	r0, r1
   39994:	movw	r1, #0
   39998:	ldr	r2, [sp]
   3999c:	blx	r2
   399a0:	mov	sp, fp
   399a4:	pop	{fp, pc}

000399a8 <flatcc_json_printer_char@@Base>:
   399a8:	sub	sp, sp, #8
   399ac:	str	r0, [sp, #4]
   399b0:	strb	r1, [sp, #3]
   399b4:	ldrb	r0, [sp, #3]
   399b8:	ldr	r1, [sp, #4]
   399bc:	ldr	r2, [r1, #20]
   399c0:	add	r3, r2, #1
   399c4:	str	r3, [r1, #20]
   399c8:	strb	r0, [r2]
   399cc:	add	sp, sp, #8
   399d0:	bx	lr

000399d4 <flatcc_json_printer_indent@@Base>:
   399d4:	push	{fp, lr}
   399d8:	mov	fp, sp
   399dc:	sub	sp, sp, #8
   399e0:	str	r0, [sp, #4]
   399e4:	ldr	r0, [sp, #4]
   399e8:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   399ec:	mov	sp, fp
   399f0:	pop	{fp, pc}
   399f4:	push	{fp, lr}
   399f8:	mov	fp, sp
   399fc:	sub	sp, sp, #8
   39a00:	str	r0, [sp, #4]
   39a04:	ldr	r0, [sp, #4]
   39a08:	ldr	r0, [r0, #32]
   39a0c:	ldr	r1, [sp, #4]
   39a10:	ldrb	r1, [r1, #25]
   39a14:	mul	r0, r0, r1
   39a18:	str	r0, [sp]
   39a1c:	ldr	r0, [sp, #4]
   39a20:	ldr	r0, [r0, #20]
   39a24:	ldr	r1, [sp]
   39a28:	add	r0, r0, r1
   39a2c:	ldr	r1, [sp, #4]
   39a30:	ldr	r1, [r1, #16]
   39a34:	cmp	r0, r1
   39a38:	bls	39a4c <flatcc_json_printer_indent@@Base+0x78>
   39a3c:	ldr	r0, [sp, #4]
   39a40:	ldr	r1, [sp]
   39a44:	bl	45958 <flatcc_json_printer_clear@@Base+0x1624>
   39a48:	b	39a78 <flatcc_json_printer_indent@@Base+0xa4>
   39a4c:	ldr	r0, [sp, #4]
   39a50:	ldr	r0, [r0, #20]
   39a54:	ldr	r2, [sp]
   39a58:	movw	r1, #32
   39a5c:	and	r1, r1, #255	; 0xff
   39a60:	bl	14ec0 <memset@plt>
   39a64:	ldr	r0, [sp]
   39a68:	ldr	r1, [sp, #4]
   39a6c:	ldr	r2, [r1, #20]
   39a70:	add	r0, r2, r0
   39a74:	str	r0, [r1, #20]
   39a78:	mov	sp, fp
   39a7c:	pop	{fp, pc}

00039a80 <flatcc_json_printer_add_level@@Base>:
   39a80:	sub	sp, sp, #8
   39a84:	str	r0, [sp, #4]
   39a88:	str	r1, [sp]
   39a8c:	ldr	r0, [sp]
   39a90:	ldr	r1, [sp, #4]
   39a94:	ldr	r2, [r1, #32]
   39a98:	add	r0, r2, r0
   39a9c:	str	r0, [r1, #32]
   39aa0:	add	sp, sp, #8
   39aa4:	bx	lr

00039aa8 <flatcc_json_printer_get_level@@Base>:
   39aa8:	sub	sp, sp, #4
   39aac:	str	r0, [sp]
   39ab0:	ldr	r0, [sp]
   39ab4:	ldr	r0, [r0, #32]
   39ab8:	add	sp, sp, #4
   39abc:	bx	lr

00039ac0 <flatcc_json_printer_uint8@@Base>:
   39ac0:	push	{fp, lr}
   39ac4:	mov	fp, sp
   39ac8:	sub	sp, sp, #8
   39acc:	str	r0, [sp, #4]
   39ad0:	strb	r1, [sp, #3]
   39ad4:	ldrb	r0, [sp, #3]
   39ad8:	ldr	r1, [sp, #4]
   39adc:	ldr	r1, [r1, #20]
   39ae0:	and	r0, r0, #255	; 0xff
   39ae4:	bl	39b00 <flatcc_json_printer_uint8@@Base+0x40>
   39ae8:	ldr	r1, [sp, #4]
   39aec:	ldr	lr, [r1, #20]
   39af0:	add	r0, lr, r0
   39af4:	str	r0, [r1, #20]
   39af8:	mov	sp, fp
   39afc:	pop	{fp, pc}
   39b00:	sub	sp, sp, #24
   39b04:	strb	r0, [sp, #19]
   39b08:	str	r1, [sp, #12]
   39b0c:	ldrb	r0, [sp, #19]
   39b10:	cmp	r0, #100	; 0x64
   39b14:	blt	39bc4 <flatcc_json_printer_uint8@@Base+0x104>
   39b18:	ldr	r0, [pc, #376]	; 39c98 <flatcc_json_printer_uint8@@Base+0x1d8>
   39b1c:	add	r0, pc, r0
   39b20:	ldr	r1, [sp, #12]
   39b24:	add	r1, r1, #3
   39b28:	str	r1, [sp, #12]
   39b2c:	ldr	r1, [sp, #12]
   39b30:	mov	r2, #0
   39b34:	strb	r2, [r1]
   39b38:	ldr	r1, [sp, #12]
   39b3c:	sub	r1, r1, #2
   39b40:	str	r1, [sp, #12]
   39b44:	ldrb	r1, [sp, #19]
   39b48:	movw	r2, #34079	; 0x851f
   39b4c:	movt	r2, #20971	; 0x51eb
   39b50:	umull	r2, r3, r1, r2
   39b54:	lsr	r3, r3, #5
   39b58:	mov	ip, #100	; 0x64
   39b5c:	mls	r1, r3, ip, r1
   39b60:	lsl	r1, r1, #1
   39b64:	add	r0, r0, r1
   39b68:	str	r0, [sp, #8]
   39b6c:	ldrb	r0, [sp, #19]
   39b70:	movw	r1, #100	; 0x64
   39b74:	sdiv	r0, r0, r1
   39b78:	strb	r0, [sp, #19]
   39b7c:	ldr	r0, [sp, #8]
   39b80:	ldrb	r0, [r0]
   39b84:	ldr	r1, [sp, #12]
   39b88:	strb	r0, [r1]
   39b8c:	ldr	r0, [sp, #8]
   39b90:	ldrb	r0, [r0, #1]
   39b94:	ldr	r1, [sp, #12]
   39b98:	strb	r0, [r1, #1]
   39b9c:	ldrb	r0, [sp, #19]
   39ba0:	add	r0, r0, #48	; 0x30
   39ba4:	ldr	r1, [sp, #12]
   39ba8:	mvn	r3, #0
   39bac:	add	r1, r1, r3
   39bb0:	strb	r0, [r1]
   39bb4:	movw	r0, #3
   39bb8:	str	r0, [sp, #20]
   39bbc:	str	r2, [sp, #4]
   39bc0:	b	39c88 <flatcc_json_printer_uint8@@Base+0x1c8>
   39bc4:	ldrb	r0, [sp, #19]
   39bc8:	cmp	r0, #10
   39bcc:	blt	39c64 <flatcc_json_printer_uint8@@Base+0x1a4>
   39bd0:	ldr	r0, [pc, #188]	; 39c94 <flatcc_json_printer_uint8@@Base+0x1d4>
   39bd4:	add	r0, pc, r0
   39bd8:	ldr	r1, [sp, #12]
   39bdc:	add	r1, r1, #2
   39be0:	str	r1, [sp, #12]
   39be4:	ldr	r1, [sp, #12]
   39be8:	mov	r2, #0
   39bec:	strb	r2, [r1]
   39bf0:	ldr	r1, [sp, #12]
   39bf4:	sub	r1, r1, #2
   39bf8:	str	r1, [sp, #12]
   39bfc:	ldrb	r1, [sp, #19]
   39c00:	movw	r2, #34079	; 0x851f
   39c04:	movt	r2, #20971	; 0x51eb
   39c08:	umull	r2, r3, r1, r2
   39c0c:	lsr	r3, r3, #5
   39c10:	mov	ip, #100	; 0x64
   39c14:	mls	r1, r3, ip, r1
   39c18:	lsl	r1, r1, #1
   39c1c:	add	r0, r0, r1
   39c20:	str	r0, [sp, #8]
   39c24:	ldrb	r0, [sp, #19]
   39c28:	movw	r1, #100	; 0x64
   39c2c:	sdiv	r0, r0, r1
   39c30:	strb	r0, [sp, #19]
   39c34:	ldr	r0, [sp, #8]
   39c38:	ldrb	r0, [r0]
   39c3c:	ldr	r1, [sp, #12]
   39c40:	strb	r0, [r1]
   39c44:	ldr	r0, [sp, #8]
   39c48:	ldrb	r0, [r0, #1]
   39c4c:	ldr	r1, [sp, #12]
   39c50:	strb	r0, [r1, #1]
   39c54:	movw	r0, #2
   39c58:	str	r0, [sp, #20]
   39c5c:	str	r2, [sp]
   39c60:	b	39c88 <flatcc_json_printer_uint8@@Base+0x1c8>
   39c64:	ldr	r0, [sp, #12]
   39c68:	movw	r1, #0
   39c6c:	strb	r1, [r0, #1]
   39c70:	ldrb	r0, [sp, #19]
   39c74:	add	r0, r0, #48	; 0x30
   39c78:	ldr	r1, [sp, #12]
   39c7c:	strb	r0, [r1]
   39c80:	movw	r0, #1
   39c84:	str	r0, [sp, #20]
   39c88:	ldr	r0, [sp, #20]
   39c8c:	add	sp, sp, #24
   39c90:	bx	lr
   39c94:	andeq	r2, r1, r8, asr pc
   39c98:	andeq	r3, r1, r0, lsl r0

00039c9c <flatcc_json_printer_uint16@@Base>:
   39c9c:	push	{fp, lr}
   39ca0:	mov	fp, sp
   39ca4:	sub	sp, sp, #8
   39ca8:	str	r0, [sp, #4]
   39cac:	strh	r1, [sp, #2]
   39cb0:	ldrh	r0, [sp, #2]
   39cb4:	ldr	r1, [sp, #4]
   39cb8:	ldr	r1, [r1, #20]
   39cbc:	uxth	r0, r0
   39cc0:	bl	39cdc <flatcc_json_printer_uint16@@Base+0x40>
   39cc4:	ldr	r1, [sp, #4]
   39cc8:	ldr	lr, [r1, #20]
   39ccc:	add	r0, lr, r0
   39cd0:	str	r0, [r1, #20]
   39cd4:	mov	sp, fp
   39cd8:	pop	{fp, pc}
   39cdc:	sub	sp, sp, #40	; 0x28
   39ce0:	strh	r0, [sp, #38]	; 0x26
   39ce4:	str	r1, [sp, #32]
   39ce8:	movw	r0, #0
   39cec:	str	r0, [sp, #28]
   39cf0:	ldrh	r0, [sp, #38]	; 0x26
   39cf4:	cmp	r0, #1000	; 0x3e8
   39cf8:	blt	39d24 <flatcc_json_printer_uint16@@Base+0x88>
   39cfc:	ldrh	r0, [sp, #38]	; 0x26
   39d00:	movw	r1, #10000	; 0x2710
   39d04:	cmp	r0, r1
   39d08:	blt	39d18 <flatcc_json_printer_uint16@@Base+0x7c>
   39d0c:	movw	r0, #5
   39d10:	str	r0, [sp, #28]
   39d14:	b	39d20 <flatcc_json_printer_uint16@@Base+0x84>
   39d18:	movw	r0, #4
   39d1c:	str	r0, [sp, #28]
   39d20:	b	39d64 <flatcc_json_printer_uint16@@Base+0xc8>
   39d24:	ldrh	r0, [sp, #38]	; 0x26
   39d28:	cmp	r0, #100	; 0x64
   39d2c:	blt	39d3c <flatcc_json_printer_uint16@@Base+0xa0>
   39d30:	movw	r0, #3
   39d34:	str	r0, [sp, #28]
   39d38:	b	39d60 <flatcc_json_printer_uint16@@Base+0xc4>
   39d3c:	ldrh	r0, [sp, #38]	; 0x26
   39d40:	cmp	r0, #10
   39d44:	blt	39d54 <flatcc_json_printer_uint16@@Base+0xb8>
   39d48:	movw	r0, #2
   39d4c:	str	r0, [sp, #28]
   39d50:	b	39d5c <flatcc_json_printer_uint16@@Base+0xc0>
   39d54:	movw	r0, #1
   39d58:	str	r0, [sp, #28]
   39d5c:	b	39d60 <flatcc_json_printer_uint16@@Base+0xc4>
   39d60:	b	39d64 <flatcc_json_printer_uint16@@Base+0xc8>
   39d64:	ldr	r0, [sp, #28]
   39d68:	ldr	r1, [sp, #32]
   39d6c:	add	r0, r1, r0
   39d70:	str	r0, [sp, #32]
   39d74:	ldr	r0, [sp, #32]
   39d78:	movw	r1, #0
   39d7c:	strb	r1, [r0]
   39d80:	ldr	r0, [sp, #28]
   39d84:	and	r0, r0, #1
   39d88:	cmp	r0, #0
   39d8c:	beq	39ec0 <flatcc_json_printer_uint16@@Base+0x224>
   39d90:	ldr	r0, [sp, #28]
   39d94:	cmp	r0, #1
   39d98:	str	r0, [sp, #20]
   39d9c:	beq	39ea4 <flatcc_json_printer_uint16@@Base+0x208>
   39da0:	b	39da4 <flatcc_json_printer_uint16@@Base+0x108>
   39da4:	ldr	r0, [sp, #20]
   39da8:	cmp	r0, #3
   39dac:	beq	39e34 <flatcc_json_printer_uint16@@Base+0x198>
   39db0:	b	39db4 <flatcc_json_printer_uint16@@Base+0x118>
   39db4:	ldr	r0, [sp, #20]
   39db8:	cmp	r0, #5
   39dbc:	bne	39ebc <flatcc_json_printer_uint16@@Base+0x220>
   39dc0:	b	39dc4 <flatcc_json_printer_uint16@@Base+0x128>
   39dc4:	ldr	r0, [pc, #528]	; 39fdc <flatcc_json_printer_uint16@@Base+0x340>
   39dc8:	add	r0, pc, r0
   39dcc:	ldr	r1, [sp, #32]
   39dd0:	sub	r1, r1, #2
   39dd4:	str	r1, [sp, #32]
   39dd8:	ldrh	r1, [sp, #38]	; 0x26
   39ddc:	movw	r2, #34079	; 0x851f
   39de0:	movt	r2, #20971	; 0x51eb
   39de4:	umull	r2, r3, r1, r2
   39de8:	lsr	r3, r3, #5
   39dec:	mov	ip, #100	; 0x64
   39df0:	mls	r1, r3, ip, r1
   39df4:	lsl	r1, r1, #1
   39df8:	add	r0, r0, r1
   39dfc:	str	r0, [sp, #24]
   39e00:	ldrh	r0, [sp, #38]	; 0x26
   39e04:	movw	r1, #100	; 0x64
   39e08:	sdiv	r0, r0, r1
   39e0c:	strh	r0, [sp, #38]	; 0x26
   39e10:	ldr	r0, [sp, #24]
   39e14:	ldrb	r0, [r0]
   39e18:	ldr	r1, [sp, #32]
   39e1c:	strb	r0, [r1]
   39e20:	ldr	r0, [sp, #24]
   39e24:	ldrb	r0, [r0, #1]
   39e28:	ldr	r1, [sp, #32]
   39e2c:	strb	r0, [r1, #1]
   39e30:	str	r2, [sp, #16]
   39e34:	ldr	r0, [pc, #420]	; 39fe0 <flatcc_json_printer_uint16@@Base+0x344>
   39e38:	add	r0, pc, r0
   39e3c:	ldr	r1, [sp, #32]
   39e40:	sub	r1, r1, #2
   39e44:	str	r1, [sp, #32]
   39e48:	ldrh	r1, [sp, #38]	; 0x26
   39e4c:	movw	r2, #34079	; 0x851f
   39e50:	movt	r2, #20971	; 0x51eb
   39e54:	umull	r2, r3, r1, r2
   39e58:	lsr	r3, r3, #5
   39e5c:	mov	ip, #100	; 0x64
   39e60:	mls	r1, r3, ip, r1
   39e64:	lsl	r1, r1, #1
   39e68:	add	r0, r0, r1
   39e6c:	str	r0, [sp, #24]
   39e70:	ldrh	r0, [sp, #38]	; 0x26
   39e74:	movw	r1, #100	; 0x64
   39e78:	sdiv	r0, r0, r1
   39e7c:	strh	r0, [sp, #38]	; 0x26
   39e80:	ldr	r0, [sp, #24]
   39e84:	ldrb	r0, [r0]
   39e88:	ldr	r1, [sp, #32]
   39e8c:	strb	r0, [r1]
   39e90:	ldr	r0, [sp, #24]
   39e94:	ldrb	r0, [r0, #1]
   39e98:	ldr	r1, [sp, #32]
   39e9c:	strb	r0, [r1, #1]
   39ea0:	str	r2, [sp, #12]
   39ea4:	ldrh	r0, [sp, #38]	; 0x26
   39ea8:	add	r0, r0, #48	; 0x30
   39eac:	ldr	r1, [sp, #32]
   39eb0:	mvn	r2, #0
   39eb4:	add	r1, r1, r2
   39eb8:	strb	r0, [r1]
   39ebc:	b	39fc8 <flatcc_json_printer_uint16@@Base+0x32c>
   39ec0:	ldr	r0, [sp, #28]
   39ec4:	cmp	r0, #2
   39ec8:	str	r0, [sp, #8]
   39ecc:	beq	39f54 <flatcc_json_printer_uint16@@Base+0x2b8>
   39ed0:	b	39ed4 <flatcc_json_printer_uint16@@Base+0x238>
   39ed4:	ldr	r0, [sp, #8]
   39ed8:	cmp	r0, #4
   39edc:	bne	39fc4 <flatcc_json_printer_uint16@@Base+0x328>
   39ee0:	b	39ee4 <flatcc_json_printer_uint16@@Base+0x248>
   39ee4:	ldr	r0, [pc, #232]	; 39fd4 <flatcc_json_printer_uint16@@Base+0x338>
   39ee8:	add	r0, pc, r0
   39eec:	ldr	r1, [sp, #32]
   39ef0:	sub	r1, r1, #2
   39ef4:	str	r1, [sp, #32]
   39ef8:	ldrh	r1, [sp, #38]	; 0x26
   39efc:	movw	r2, #34079	; 0x851f
   39f00:	movt	r2, #20971	; 0x51eb
   39f04:	umull	r2, r3, r1, r2
   39f08:	lsr	r3, r3, #5
   39f0c:	mov	ip, #100	; 0x64
   39f10:	mls	r1, r3, ip, r1
   39f14:	lsl	r1, r1, #1
   39f18:	add	r0, r0, r1
   39f1c:	str	r0, [sp, #24]
   39f20:	ldrh	r0, [sp, #38]	; 0x26
   39f24:	movw	r1, #100	; 0x64
   39f28:	sdiv	r0, r0, r1
   39f2c:	strh	r0, [sp, #38]	; 0x26
   39f30:	ldr	r0, [sp, #24]
   39f34:	ldrb	r0, [r0]
   39f38:	ldr	r1, [sp, #32]
   39f3c:	strb	r0, [r1]
   39f40:	ldr	r0, [sp, #24]
   39f44:	ldrb	r0, [r0, #1]
   39f48:	ldr	r1, [sp, #32]
   39f4c:	strb	r0, [r1, #1]
   39f50:	str	r2, [sp, #4]
   39f54:	ldr	r0, [pc, #124]	; 39fd8 <flatcc_json_printer_uint16@@Base+0x33c>
   39f58:	add	r0, pc, r0
   39f5c:	ldr	r1, [sp, #32]
   39f60:	sub	r1, r1, #2
   39f64:	str	r1, [sp, #32]
   39f68:	ldrh	r1, [sp, #38]	; 0x26
   39f6c:	movw	r2, #34079	; 0x851f
   39f70:	movt	r2, #20971	; 0x51eb
   39f74:	umull	r2, r3, r1, r2
   39f78:	lsr	r3, r3, #5
   39f7c:	mov	ip, #100	; 0x64
   39f80:	mls	r1, r3, ip, r1
   39f84:	lsl	r1, r1, #1
   39f88:	add	r0, r0, r1
   39f8c:	str	r0, [sp, #24]
   39f90:	ldrh	r0, [sp, #38]	; 0x26
   39f94:	movw	r1, #100	; 0x64
   39f98:	sdiv	r0, r0, r1
   39f9c:	strh	r0, [sp, #38]	; 0x26
   39fa0:	ldr	r0, [sp, #24]
   39fa4:	ldrb	r0, [r0]
   39fa8:	ldr	r1, [sp, #32]
   39fac:	strb	r0, [r1]
   39fb0:	ldr	r0, [sp, #24]
   39fb4:	ldrb	r0, [r0, #1]
   39fb8:	ldr	r1, [sp, #32]
   39fbc:	strb	r0, [r1, #1]
   39fc0:	str	r2, [sp]
   39fc4:	b	39fc8 <flatcc_json_printer_uint16@@Base+0x32c>
   39fc8:	ldr	r0, [sp, #28]
   39fcc:	add	sp, sp, #40	; 0x28
   39fd0:	bx	lr
   39fd4:	andeq	r2, r1, r4, asr #24
   39fd8:	ldrdeq	r2, [r1], -r4
   39fdc:	andeq	r2, r1, r4, ror #26
   39fe0:	strdeq	r2, [r1], -r4

00039fe4 <flatcc_json_printer_uint32@@Base>:
   39fe4:	push	{fp, lr}
   39fe8:	mov	fp, sp
   39fec:	sub	sp, sp, #8
   39ff0:	str	r0, [sp, #4]
   39ff4:	str	r1, [sp]
   39ff8:	ldr	r0, [sp]
   39ffc:	ldr	r1, [sp, #4]
   3a000:	ldr	r1, [r1, #20]
   3a004:	bl	3a020 <flatcc_json_printer_uint32@@Base+0x3c>
   3a008:	ldr	r1, [sp, #4]
   3a00c:	ldr	lr, [r1, #20]
   3a010:	add	r0, lr, r0
   3a014:	str	r0, [r1, #20]
   3a018:	mov	sp, fp
   3a01c:	pop	{fp, pc}
   3a020:	sub	sp, sp, #60	; 0x3c
   3a024:	str	r0, [sp, #56]	; 0x38
   3a028:	str	r1, [sp, #52]	; 0x34
   3a02c:	movw	r0, #0
   3a030:	str	r0, [sp, #48]	; 0x30
   3a034:	ldr	r0, [sp, #56]	; 0x38
   3a038:	movw	r1, #10000	; 0x2710
   3a03c:	cmp	r0, r1
   3a040:	bcc	3a0e8 <flatcc_json_printer_uint32@@Base+0x104>
   3a044:	ldr	r0, [pc, #1484]	; 3a618 <flatcc_json_printer_uint32@@Base+0x634>
   3a048:	ldr	r1, [sp, #56]	; 0x38
   3a04c:	cmp	r1, r0
   3a050:	bcc	3a09c <flatcc_json_printer_uint32@@Base+0xb8>
   3a054:	ldr	r0, [pc, #1480]	; 3a624 <flatcc_json_printer_uint32@@Base+0x640>
   3a058:	ldr	r1, [sp, #56]	; 0x38
   3a05c:	cmp	r1, r0
   3a060:	bcc	3a070 <flatcc_json_printer_uint32@@Base+0x8c>
   3a064:	movw	r0, #10
   3a068:	str	r0, [sp, #48]	; 0x30
   3a06c:	b	3a098 <flatcc_json_printer_uint32@@Base+0xb4>
   3a070:	ldr	r0, [pc, #1456]	; 3a628 <flatcc_json_printer_uint32@@Base+0x644>
   3a074:	ldr	r1, [sp, #56]	; 0x38
   3a078:	cmp	r1, r0
   3a07c:	bcc	3a08c <flatcc_json_printer_uint32@@Base+0xa8>
   3a080:	movw	r0, #9
   3a084:	str	r0, [sp, #48]	; 0x30
   3a088:	b	3a094 <flatcc_json_printer_uint32@@Base+0xb0>
   3a08c:	movw	r0, #8
   3a090:	str	r0, [sp, #48]	; 0x30
   3a094:	b	3a098 <flatcc_json_printer_uint32@@Base+0xb4>
   3a098:	b	3a0e4 <flatcc_json_printer_uint32@@Base+0x100>
   3a09c:	ldr	r0, [pc, #1400]	; 3a61c <flatcc_json_printer_uint32@@Base+0x638>
   3a0a0:	ldr	r1, [sp, #56]	; 0x38
   3a0a4:	cmp	r1, r0
   3a0a8:	bcc	3a0b8 <flatcc_json_printer_uint32@@Base+0xd4>
   3a0ac:	movw	r0, #7
   3a0b0:	str	r0, [sp, #48]	; 0x30
   3a0b4:	b	3a0e0 <flatcc_json_printer_uint32@@Base+0xfc>
   3a0b8:	ldr	r0, [pc, #1376]	; 3a620 <flatcc_json_printer_uint32@@Base+0x63c>
   3a0bc:	ldr	r1, [sp, #56]	; 0x38
   3a0c0:	cmp	r1, r0
   3a0c4:	bcc	3a0d4 <flatcc_json_printer_uint32@@Base+0xf0>
   3a0c8:	movw	r0, #6
   3a0cc:	str	r0, [sp, #48]	; 0x30
   3a0d0:	b	3a0dc <flatcc_json_printer_uint32@@Base+0xf8>
   3a0d4:	movw	r0, #5
   3a0d8:	str	r0, [sp, #48]	; 0x30
   3a0dc:	b	3a0e0 <flatcc_json_printer_uint32@@Base+0xfc>
   3a0e0:	b	3a0e4 <flatcc_json_printer_uint32@@Base+0x100>
   3a0e4:	b	3a140 <flatcc_json_printer_uint32@@Base+0x15c>
   3a0e8:	ldr	r0, [sp, #56]	; 0x38
   3a0ec:	cmp	r0, #100	; 0x64
   3a0f0:	bcc	3a118 <flatcc_json_printer_uint32@@Base+0x134>
   3a0f4:	ldr	r0, [sp, #56]	; 0x38
   3a0f8:	cmp	r0, #1000	; 0x3e8
   3a0fc:	bcc	3a10c <flatcc_json_printer_uint32@@Base+0x128>
   3a100:	movw	r0, #4
   3a104:	str	r0, [sp, #48]	; 0x30
   3a108:	b	3a114 <flatcc_json_printer_uint32@@Base+0x130>
   3a10c:	movw	r0, #3
   3a110:	str	r0, [sp, #48]	; 0x30
   3a114:	b	3a13c <flatcc_json_printer_uint32@@Base+0x158>
   3a118:	ldr	r0, [sp, #56]	; 0x38
   3a11c:	cmp	r0, #10
   3a120:	bcc	3a130 <flatcc_json_printer_uint32@@Base+0x14c>
   3a124:	movw	r0, #2
   3a128:	str	r0, [sp, #48]	; 0x30
   3a12c:	b	3a138 <flatcc_json_printer_uint32@@Base+0x154>
   3a130:	movw	r0, #1
   3a134:	str	r0, [sp, #48]	; 0x30
   3a138:	b	3a13c <flatcc_json_printer_uint32@@Base+0x158>
   3a13c:	b	3a140 <flatcc_json_printer_uint32@@Base+0x15c>
   3a140:	ldr	r0, [sp, #48]	; 0x30
   3a144:	ldr	r1, [sp, #52]	; 0x34
   3a148:	add	r0, r1, r0
   3a14c:	str	r0, [sp, #52]	; 0x34
   3a150:	ldr	r0, [sp, #52]	; 0x34
   3a154:	movw	r1, #0
   3a158:	strb	r1, [r0]
   3a15c:	ldr	r0, [sp, #48]	; 0x30
   3a160:	and	r0, r0, #1
   3a164:	cmp	r0, #0
   3a168:	beq	3a390 <flatcc_json_printer_uint32@@Base+0x3ac>
   3a16c:	ldr	r0, [sp, #48]	; 0x30
   3a170:	sub	r0, r0, #1
   3a174:	cmp	r0, #8
   3a178:	str	r0, [sp, #40]	; 0x28
   3a17c:	bhi	3a38c <flatcc_json_printer_uint32@@Base+0x3a8>
   3a180:	add	r0, pc, #8
   3a184:	ldr	r1, [sp, #40]	; 0x28
   3a188:	ldr	r2, [r0, r1, lsl #2]
   3a18c:	add	pc, r0, r2
   3a190:	andeq	r0, r0, r4, ror #3
   3a194:	strdeq	r0, [r0], -ip
   3a198:	andeq	r0, r0, r4, ror r1
   3a19c:	strdeq	r0, [r0], -ip
   3a1a0:	andeq	r0, r0, r4, lsl #2
   3a1a4:	strdeq	r0, [r0], -ip
   3a1a8:	muleq	r0, r4, r0
   3a1ac:	strdeq	r0, [r0], -ip
   3a1b0:	andeq	r0, r0, r4, lsr #32
   3a1b4:	ldr	r0, [pc, #1156]	; 3a640 <flatcc_json_printer_uint32@@Base+0x65c>
   3a1b8:	add	r0, pc, r0
   3a1bc:	ldr	r1, [sp, #52]	; 0x34
   3a1c0:	sub	r1, r1, #2
   3a1c4:	str	r1, [sp, #52]	; 0x34
   3a1c8:	ldr	r1, [sp, #56]	; 0x38
   3a1cc:	movw	r2, #34079	; 0x851f
   3a1d0:	movt	r2, #20971	; 0x51eb
   3a1d4:	umull	r2, r3, r1, r2
   3a1d8:	lsr	r3, r3, #5
   3a1dc:	mov	ip, #100	; 0x64
   3a1e0:	mls	r1, r3, ip, r1
   3a1e4:	lsl	r1, r1, #1
   3a1e8:	add	r0, r0, r1
   3a1ec:	str	r0, [sp, #44]	; 0x2c
   3a1f0:	ldr	r0, [sp, #56]	; 0x38
   3a1f4:	movw	r1, #100	; 0x64
   3a1f8:	udiv	r0, r0, r1
   3a1fc:	str	r0, [sp, #56]	; 0x38
   3a200:	ldr	r0, [sp, #44]	; 0x2c
   3a204:	ldrb	r0, [r0]
   3a208:	ldr	r1, [sp, #52]	; 0x34
   3a20c:	strb	r0, [r1]
   3a210:	ldr	r0, [sp, #44]	; 0x2c
   3a214:	ldrb	r0, [r0, #1]
   3a218:	ldr	r1, [sp, #52]	; 0x34
   3a21c:	strb	r0, [r1, #1]
   3a220:	str	r2, [sp, #36]	; 0x24
   3a224:	ldr	r0, [pc, #1048]	; 3a644 <flatcc_json_printer_uint32@@Base+0x660>
   3a228:	add	r0, pc, r0
   3a22c:	ldr	r1, [sp, #52]	; 0x34
   3a230:	sub	r1, r1, #2
   3a234:	str	r1, [sp, #52]	; 0x34
   3a238:	ldr	r1, [sp, #56]	; 0x38
   3a23c:	movw	r2, #34079	; 0x851f
   3a240:	movt	r2, #20971	; 0x51eb
   3a244:	umull	r2, r3, r1, r2
   3a248:	lsr	r3, r3, #5
   3a24c:	mov	ip, #100	; 0x64
   3a250:	mls	r1, r3, ip, r1
   3a254:	lsl	r1, r1, #1
   3a258:	add	r0, r0, r1
   3a25c:	str	r0, [sp, #44]	; 0x2c
   3a260:	ldr	r0, [sp, #56]	; 0x38
   3a264:	movw	r1, #100	; 0x64
   3a268:	udiv	r0, r0, r1
   3a26c:	str	r0, [sp, #56]	; 0x38
   3a270:	ldr	r0, [sp, #44]	; 0x2c
   3a274:	ldrb	r0, [r0]
   3a278:	ldr	r1, [sp, #52]	; 0x34
   3a27c:	strb	r0, [r1]
   3a280:	ldr	r0, [sp, #44]	; 0x2c
   3a284:	ldrb	r0, [r0, #1]
   3a288:	ldr	r1, [sp, #52]	; 0x34
   3a28c:	strb	r0, [r1, #1]
   3a290:	str	r2, [sp, #32]
   3a294:	ldr	r0, [pc, #940]	; 3a648 <flatcc_json_printer_uint32@@Base+0x664>
   3a298:	add	r0, pc, r0
   3a29c:	ldr	r1, [sp, #52]	; 0x34
   3a2a0:	sub	r1, r1, #2
   3a2a4:	str	r1, [sp, #52]	; 0x34
   3a2a8:	ldr	r1, [sp, #56]	; 0x38
   3a2ac:	movw	r2, #34079	; 0x851f
   3a2b0:	movt	r2, #20971	; 0x51eb
   3a2b4:	umull	r2, r3, r1, r2
   3a2b8:	lsr	r3, r3, #5
   3a2bc:	mov	ip, #100	; 0x64
   3a2c0:	mls	r1, r3, ip, r1
   3a2c4:	lsl	r1, r1, #1
   3a2c8:	add	r0, r0, r1
   3a2cc:	str	r0, [sp, #44]	; 0x2c
   3a2d0:	ldr	r0, [sp, #56]	; 0x38
   3a2d4:	movw	r1, #100	; 0x64
   3a2d8:	udiv	r0, r0, r1
   3a2dc:	str	r0, [sp, #56]	; 0x38
   3a2e0:	ldr	r0, [sp, #44]	; 0x2c
   3a2e4:	ldrb	r0, [r0]
   3a2e8:	ldr	r1, [sp, #52]	; 0x34
   3a2ec:	strb	r0, [r1]
   3a2f0:	ldr	r0, [sp, #44]	; 0x2c
   3a2f4:	ldrb	r0, [r0, #1]
   3a2f8:	ldr	r1, [sp, #52]	; 0x34
   3a2fc:	strb	r0, [r1, #1]
   3a300:	str	r2, [sp, #28]
   3a304:	ldr	r0, [pc, #832]	; 3a64c <flatcc_json_printer_uint32@@Base+0x668>
   3a308:	add	r0, pc, r0
   3a30c:	ldr	r1, [sp, #52]	; 0x34
   3a310:	sub	r1, r1, #2
   3a314:	str	r1, [sp, #52]	; 0x34
   3a318:	ldr	r1, [sp, #56]	; 0x38
   3a31c:	movw	r2, #34079	; 0x851f
   3a320:	movt	r2, #20971	; 0x51eb
   3a324:	umull	r2, r3, r1, r2
   3a328:	lsr	r3, r3, #5
   3a32c:	mov	ip, #100	; 0x64
   3a330:	mls	r1, r3, ip, r1
   3a334:	lsl	r1, r1, #1
   3a338:	add	r0, r0, r1
   3a33c:	str	r0, [sp, #44]	; 0x2c
   3a340:	ldr	r0, [sp, #56]	; 0x38
   3a344:	movw	r1, #100	; 0x64
   3a348:	udiv	r0, r0, r1
   3a34c:	str	r0, [sp, #56]	; 0x38
   3a350:	ldr	r0, [sp, #44]	; 0x2c
   3a354:	ldrb	r0, [r0]
   3a358:	ldr	r1, [sp, #52]	; 0x34
   3a35c:	strb	r0, [r1]
   3a360:	ldr	r0, [sp, #44]	; 0x2c
   3a364:	ldrb	r0, [r0, #1]
   3a368:	ldr	r1, [sp, #52]	; 0x34
   3a36c:	strb	r0, [r1, #1]
   3a370:	str	r2, [sp, #24]
   3a374:	ldr	r0, [sp, #56]	; 0x38
   3a378:	add	r0, r0, #48	; 0x30
   3a37c:	ldr	r1, [sp, #52]	; 0x34
   3a380:	mvn	r2, #0
   3a384:	add	r1, r1, r2
   3a388:	strb	r0, [r1]
   3a38c:	b	3a60c <flatcc_json_printer_uint32@@Base+0x628>
   3a390:	ldr	r0, [sp, #48]	; 0x30
   3a394:	sub	r0, r0, #2
   3a398:	cmp	r0, #8
   3a39c:	str	r0, [sp, #20]
   3a3a0:	bhi	3a608 <flatcc_json_printer_uint32@@Base+0x624>
   3a3a4:	add	r0, pc, #8
   3a3a8:	ldr	r1, [sp, #20]
   3a3ac:	ldr	r2, [r0, r1, lsl #2]
   3a3b0:	add	pc, r0, r2
   3a3b4:	andeq	r0, r0, r4, ror #3
   3a3b8:	andeq	r0, r0, r4, asr r2
   3a3bc:	andeq	r0, r0, r4, ror r1
   3a3c0:	andeq	r0, r0, r4, asr r2
   3a3c4:	andeq	r0, r0, r4, lsl #2
   3a3c8:	andeq	r0, r0, r4, asr r2
   3a3cc:	muleq	r0, r4, r0
   3a3d0:	andeq	r0, r0, r4, asr r2
   3a3d4:	andeq	r0, r0, r4, lsr #32
   3a3d8:	ldr	r0, [pc, #588]	; 3a62c <flatcc_json_printer_uint32@@Base+0x648>
   3a3dc:	add	r0, pc, r0
   3a3e0:	ldr	r1, [sp, #52]	; 0x34
   3a3e4:	sub	r1, r1, #2
   3a3e8:	str	r1, [sp, #52]	; 0x34
   3a3ec:	ldr	r1, [sp, #56]	; 0x38
   3a3f0:	movw	r2, #34079	; 0x851f
   3a3f4:	movt	r2, #20971	; 0x51eb
   3a3f8:	umull	r2, r3, r1, r2
   3a3fc:	lsr	r3, r3, #5
   3a400:	mov	ip, #100	; 0x64
   3a404:	mls	r1, r3, ip, r1
   3a408:	lsl	r1, r1, #1
   3a40c:	add	r0, r0, r1
   3a410:	str	r0, [sp, #44]	; 0x2c
   3a414:	ldr	r0, [sp, #56]	; 0x38
   3a418:	movw	r1, #100	; 0x64
   3a41c:	udiv	r0, r0, r1
   3a420:	str	r0, [sp, #56]	; 0x38
   3a424:	ldr	r0, [sp, #44]	; 0x2c
   3a428:	ldrb	r0, [r0]
   3a42c:	ldr	r1, [sp, #52]	; 0x34
   3a430:	strb	r0, [r1]
   3a434:	ldr	r0, [sp, #44]	; 0x2c
   3a438:	ldrb	r0, [r0, #1]
   3a43c:	ldr	r1, [sp, #52]	; 0x34
   3a440:	strb	r0, [r1, #1]
   3a444:	str	r2, [sp, #16]
   3a448:	ldr	r0, [pc, #480]	; 3a630 <flatcc_json_printer_uint32@@Base+0x64c>
   3a44c:	add	r0, pc, r0
   3a450:	ldr	r1, [sp, #52]	; 0x34
   3a454:	sub	r1, r1, #2
   3a458:	str	r1, [sp, #52]	; 0x34
   3a45c:	ldr	r1, [sp, #56]	; 0x38
   3a460:	movw	r2, #34079	; 0x851f
   3a464:	movt	r2, #20971	; 0x51eb
   3a468:	umull	r2, r3, r1, r2
   3a46c:	lsr	r3, r3, #5
   3a470:	mov	ip, #100	; 0x64
   3a474:	mls	r1, r3, ip, r1
   3a478:	lsl	r1, r1, #1
   3a47c:	add	r0, r0, r1
   3a480:	str	r0, [sp, #44]	; 0x2c
   3a484:	ldr	r0, [sp, #56]	; 0x38
   3a488:	movw	r1, #100	; 0x64
   3a48c:	udiv	r0, r0, r1
   3a490:	str	r0, [sp, #56]	; 0x38
   3a494:	ldr	r0, [sp, #44]	; 0x2c
   3a498:	ldrb	r0, [r0]
   3a49c:	ldr	r1, [sp, #52]	; 0x34
   3a4a0:	strb	r0, [r1]
   3a4a4:	ldr	r0, [sp, #44]	; 0x2c
   3a4a8:	ldrb	r0, [r0, #1]
   3a4ac:	ldr	r1, [sp, #52]	; 0x34
   3a4b0:	strb	r0, [r1, #1]
   3a4b4:	str	r2, [sp, #12]
   3a4b8:	ldr	r0, [pc, #372]	; 3a634 <flatcc_json_printer_uint32@@Base+0x650>
   3a4bc:	add	r0, pc, r0
   3a4c0:	ldr	r1, [sp, #52]	; 0x34
   3a4c4:	sub	r1, r1, #2
   3a4c8:	str	r1, [sp, #52]	; 0x34
   3a4cc:	ldr	r1, [sp, #56]	; 0x38
   3a4d0:	movw	r2, #34079	; 0x851f
   3a4d4:	movt	r2, #20971	; 0x51eb
   3a4d8:	umull	r2, r3, r1, r2
   3a4dc:	lsr	r3, r3, #5
   3a4e0:	mov	ip, #100	; 0x64
   3a4e4:	mls	r1, r3, ip, r1
   3a4e8:	lsl	r1, r1, #1
   3a4ec:	add	r0, r0, r1
   3a4f0:	str	r0, [sp, #44]	; 0x2c
   3a4f4:	ldr	r0, [sp, #56]	; 0x38
   3a4f8:	movw	r1, #100	; 0x64
   3a4fc:	udiv	r0, r0, r1
   3a500:	str	r0, [sp, #56]	; 0x38
   3a504:	ldr	r0, [sp, #44]	; 0x2c
   3a508:	ldrb	r0, [r0]
   3a50c:	ldr	r1, [sp, #52]	; 0x34
   3a510:	strb	r0, [r1]
   3a514:	ldr	r0, [sp, #44]	; 0x2c
   3a518:	ldrb	r0, [r0, #1]
   3a51c:	ldr	r1, [sp, #52]	; 0x34
   3a520:	strb	r0, [r1, #1]
   3a524:	str	r2, [sp, #8]
   3a528:	ldr	r0, [pc, #264]	; 3a638 <flatcc_json_printer_uint32@@Base+0x654>
   3a52c:	add	r0, pc, r0
   3a530:	ldr	r1, [sp, #52]	; 0x34
   3a534:	sub	r1, r1, #2
   3a538:	str	r1, [sp, #52]	; 0x34
   3a53c:	ldr	r1, [sp, #56]	; 0x38
   3a540:	movw	r2, #34079	; 0x851f
   3a544:	movt	r2, #20971	; 0x51eb
   3a548:	umull	r2, r3, r1, r2
   3a54c:	lsr	r3, r3, #5
   3a550:	mov	ip, #100	; 0x64
   3a554:	mls	r1, r3, ip, r1
   3a558:	lsl	r1, r1, #1
   3a55c:	add	r0, r0, r1
   3a560:	str	r0, [sp, #44]	; 0x2c
   3a564:	ldr	r0, [sp, #56]	; 0x38
   3a568:	movw	r1, #100	; 0x64
   3a56c:	udiv	r0, r0, r1
   3a570:	str	r0, [sp, #56]	; 0x38
   3a574:	ldr	r0, [sp, #44]	; 0x2c
   3a578:	ldrb	r0, [r0]
   3a57c:	ldr	r1, [sp, #52]	; 0x34
   3a580:	strb	r0, [r1]
   3a584:	ldr	r0, [sp, #44]	; 0x2c
   3a588:	ldrb	r0, [r0, #1]
   3a58c:	ldr	r1, [sp, #52]	; 0x34
   3a590:	strb	r0, [r1, #1]
   3a594:	str	r2, [sp, #4]
   3a598:	ldr	r0, [pc, #156]	; 3a63c <flatcc_json_printer_uint32@@Base+0x658>
   3a59c:	add	r0, pc, r0
   3a5a0:	ldr	r1, [sp, #52]	; 0x34
   3a5a4:	sub	r1, r1, #2
   3a5a8:	str	r1, [sp, #52]	; 0x34
   3a5ac:	ldr	r1, [sp, #56]	; 0x38
   3a5b0:	movw	r2, #34079	; 0x851f
   3a5b4:	movt	r2, #20971	; 0x51eb
   3a5b8:	umull	r2, r3, r1, r2
   3a5bc:	lsr	r3, r3, #5
   3a5c0:	mov	ip, #100	; 0x64
   3a5c4:	mls	r1, r3, ip, r1
   3a5c8:	lsl	r1, r1, #1
   3a5cc:	add	r0, r0, r1
   3a5d0:	str	r0, [sp, #44]	; 0x2c
   3a5d4:	ldr	r0, [sp, #56]	; 0x38
   3a5d8:	movw	r1, #100	; 0x64
   3a5dc:	udiv	r0, r0, r1
   3a5e0:	str	r0, [sp, #56]	; 0x38
   3a5e4:	ldr	r0, [sp, #44]	; 0x2c
   3a5e8:	ldrb	r0, [r0]
   3a5ec:	ldr	r1, [sp, #52]	; 0x34
   3a5f0:	strb	r0, [r1]
   3a5f4:	ldr	r0, [sp, #44]	; 0x2c
   3a5f8:	ldrb	r0, [r0, #1]
   3a5fc:	ldr	r1, [sp, #52]	; 0x34
   3a600:	strb	r0, [r1, #1]
   3a604:	str	r2, [sp]
   3a608:	b	3a60c <flatcc_json_printer_uint32@@Base+0x628>
   3a60c:	ldr	r0, [sp, #48]	; 0x30
   3a610:	add	sp, sp, #60	; 0x3c
   3a614:	bx	lr
   3a618:	addseq	r9, r8, r0, lsl #13
   3a61c:	andeq	r4, pc, r0, asr #4
   3a620:	andeq	r8, r1, r0, lsr #13
   3a624:	blcc	fe6ece2c <__bss_end__@@Base+0xfe68fa60>
   3a628:	ldrbeq	lr, [r5, #256]!	; 0x100
   3a62c:	andeq	r2, r1, r0, asr r7
   3a630:	andeq	r2, r1, r0, ror #13
   3a634:	andeq	r2, r1, r0, ror r6
   3a638:	andeq	r2, r1, r0, lsl #12
   3a63c:	muleq	r1, r0, r5
   3a640:	andeq	r2, r1, r4, ror r9
   3a644:	andeq	r2, r1, r4, lsl #18
   3a648:	muleq	r1, r4, r8
   3a64c:	andeq	r2, r1, r4, lsr #16

0003a650 <flatcc_json_printer_uint64@@Base>:
   3a650:	push	{fp, lr}
   3a654:	mov	fp, sp
   3a658:	sub	sp, sp, #16
   3a65c:	str	r0, [fp, #-4]
   3a660:	str	r3, [sp, #4]
   3a664:	str	r2, [sp]
   3a668:	ldr	r0, [sp]
   3a66c:	ldr	r1, [sp, #4]
   3a670:	ldr	r2, [fp, #-4]
   3a674:	ldr	r2, [r2, #20]
   3a678:	bl	3a694 <flatcc_json_printer_uint64@@Base+0x44>
   3a67c:	ldr	r1, [fp, #-4]
   3a680:	ldr	r2, [r1, #20]
   3a684:	add	r0, r2, r0
   3a688:	str	r0, [r1, #20]
   3a68c:	mov	sp, fp
   3a690:	pop	{fp, pc}
   3a694:	push	{fp, lr}
   3a698:	mov	fp, sp
   3a69c:	sub	sp, sp, #368	; 0x170
   3a6a0:	str	r0, [fp, #-16]
   3a6a4:	str	r1, [fp, #-12]
   3a6a8:	str	r2, [fp, #-20]	; 0xffffffec
   3a6ac:	mov	r0, #0
   3a6b0:	str	r0, [fp, #-24]	; 0xffffffe8
   3a6b4:	str	r0, [fp, #-36]	; 0xffffffdc
   3a6b8:	movw	r0, #51712	; 0xca00
   3a6bc:	movt	r0, #15258	; 0x3b9a
   3a6c0:	str	r0, [fp, #-40]	; 0xffffffd8
   3a6c4:	ldr	r0, [fp, #-16]
   3a6c8:	ldr	r1, [fp, #-12]
   3a6cc:	movw	r2, #51711	; 0xc9ff
   3a6d0:	movt	r2, #15258	; 0x3b9a
   3a6d4:	subs	r0, r2, r0
   3a6d8:	rscs	r1, r1, #0
   3a6dc:	str	r0, [fp, #-44]	; 0xffffffd4
   3a6e0:	str	r1, [fp, #-48]	; 0xffffffd0
   3a6e4:	bcc	3a700 <flatcc_json_printer_uint64@@Base+0xb0>
   3a6e8:	b	3a6ec <flatcc_json_printer_uint64@@Base+0x9c>
   3a6ec:	ldr	r0, [fp, #-16]
   3a6f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a6f4:	bl	3a020 <flatcc_json_printer_uint32@@Base+0x3c>
   3a6f8:	str	r0, [fp, #-4]
   3a6fc:	b	3b220 <flatcc_json_printer_uint64@@Base+0xbd0>
   3a700:	ldr	r0, [fp, #-16]
   3a704:	ldr	r1, [fp, #-12]
   3a708:	movw	r2, #40960	; 0xa000
   3a70c:	movt	r2, #20082	; 0x4e72
   3a710:	subs	r0, r0, r2
   3a714:	movw	r2, #2328	; 0x918
   3a718:	sbcs	r1, r1, r2
   3a71c:	str	r0, [fp, #-52]	; 0xffffffcc
   3a720:	str	r1, [fp, #-56]	; 0xffffffc8
   3a724:	bcc	3a8a8 <flatcc_json_printer_uint64@@Base+0x258>
   3a728:	b	3a72c <flatcc_json_printer_uint64@@Base+0xdc>
   3a72c:	ldr	r0, [fp, #-16]
   3a730:	ldr	r1, [fp, #-12]
   3a734:	movw	r2, #0
   3a738:	movt	r2, #28609	; 0x6fc1
   3a73c:	subs	r0, r0, r2
   3a740:	movw	r2, #34546	; 0x86f2
   3a744:	movt	r2, #35	; 0x23
   3a748:	sbcs	r1, r1, r2
   3a74c:	str	r0, [fp, #-60]	; 0xffffffc4
   3a750:	str	r1, [fp, #-64]	; 0xffffffc0
   3a754:	bcc	3a820 <flatcc_json_printer_uint64@@Base+0x1d0>
   3a758:	b	3a75c <flatcc_json_printer_uint64@@Base+0x10c>
   3a75c:	ldr	r0, [fp, #-16]
   3a760:	ldr	r1, [fp, #-12]
   3a764:	movw	r2, #0
   3a768:	movt	r2, #42852	; 0xa764
   3a76c:	subs	r0, r0, r2
   3a770:	movw	r2, #46771	; 0xb6b3
   3a774:	movt	r2, #3552	; 0xde0
   3a778:	sbcs	r1, r1, r2
   3a77c:	str	r0, [fp, #-68]	; 0xffffffbc
   3a780:	str	r1, [fp, #-72]	; 0xffffffb8
   3a784:	bcc	3a7d4 <flatcc_json_printer_uint64@@Base+0x184>
   3a788:	b	3a78c <flatcc_json_printer_uint64@@Base+0x13c>
   3a78c:	ldr	r0, [fp, #-16]
   3a790:	ldr	r1, [fp, #-12]
   3a794:	movw	r2, #0
   3a798:	movt	r2, #35304	; 0x89e8
   3a79c:	subs	r0, r0, r2
   3a7a0:	movw	r2, #8964	; 0x2304
   3a7a4:	movt	r2, #35527	; 0x8ac7
   3a7a8:	sbcs	r1, r1, r2
   3a7ac:	str	r0, [fp, #-76]	; 0xffffffb4
   3a7b0:	str	r1, [fp, #-80]	; 0xffffffb0
   3a7b4:	bcc	3a7c8 <flatcc_json_printer_uint64@@Base+0x178>
   3a7b8:	b	3a7bc <flatcc_json_printer_uint64@@Base+0x16c>
   3a7bc:	movw	r0, #20
   3a7c0:	str	r0, [fp, #-24]	; 0xffffffe8
   3a7c4:	b	3a7d0 <flatcc_json_printer_uint64@@Base+0x180>
   3a7c8:	movw	r0, #19
   3a7cc:	str	r0, [fp, #-24]	; 0xffffffe8
   3a7d0:	b	3a81c <flatcc_json_printer_uint64@@Base+0x1cc>
   3a7d4:	ldr	r0, [fp, #-16]
   3a7d8:	ldr	r1, [fp, #-12]
   3a7dc:	movw	r2, #0
   3a7e0:	movt	r2, #23946	; 0x5d8a
   3a7e4:	subs	r0, r0, r2
   3a7e8:	movw	r2, #17784	; 0x4578
   3a7ec:	movt	r2, #355	; 0x163
   3a7f0:	sbcs	r1, r1, r2
   3a7f4:	str	r0, [fp, #-84]	; 0xffffffac
   3a7f8:	str	r1, [fp, #-88]	; 0xffffffa8
   3a7fc:	bcc	3a810 <flatcc_json_printer_uint64@@Base+0x1c0>
   3a800:	b	3a804 <flatcc_json_printer_uint64@@Base+0x1b4>
   3a804:	movw	r0, #18
   3a808:	str	r0, [fp, #-24]	; 0xffffffe8
   3a80c:	b	3a818 <flatcc_json_printer_uint64@@Base+0x1c8>
   3a810:	movw	r0, #17
   3a814:	str	r0, [fp, #-24]	; 0xffffffe8
   3a818:	b	3a81c <flatcc_json_printer_uint64@@Base+0x1cc>
   3a81c:	b	3a8a4 <flatcc_json_printer_uint64@@Base+0x254>
   3a820:	ldr	r0, [fp, #-16]
   3a824:	ldr	r1, [fp, #-12]
   3a828:	movw	r2, #32768	; 0x8000
   3a82c:	movt	r2, #42182	; 0xa4c6
   3a830:	subs	r0, r0, r2
   3a834:	movw	r2, #36222	; 0x8d7e
   3a838:	movt	r2, #3
   3a83c:	sbcs	r1, r1, r2
   3a840:	str	r0, [fp, #-92]	; 0xffffffa4
   3a844:	str	r1, [fp, #-96]	; 0xffffffa0
   3a848:	bcc	3a85c <flatcc_json_printer_uint64@@Base+0x20c>
   3a84c:	b	3a850 <flatcc_json_printer_uint64@@Base+0x200>
   3a850:	movw	r0, #16
   3a854:	str	r0, [fp, #-24]	; 0xffffffe8
   3a858:	b	3a8a0 <flatcc_json_printer_uint64@@Base+0x250>
   3a85c:	ldr	r0, [fp, #-16]
   3a860:	ldr	r1, [fp, #-12]
   3a864:	movw	r2, #16384	; 0x4000
   3a868:	movt	r2, #4218	; 0x107a
   3a86c:	subs	r0, r0, r2
   3a870:	movw	r2, #23283	; 0x5af3
   3a874:	sbcs	r1, r1, r2
   3a878:	str	r0, [fp, #-100]	; 0xffffff9c
   3a87c:	str	r1, [fp, #-104]	; 0xffffff98
   3a880:	bcc	3a894 <flatcc_json_printer_uint64@@Base+0x244>
   3a884:	b	3a888 <flatcc_json_printer_uint64@@Base+0x238>
   3a888:	movw	r0, #15
   3a88c:	str	r0, [fp, #-24]	; 0xffffffe8
   3a890:	b	3a89c <flatcc_json_printer_uint64@@Base+0x24c>
   3a894:	movw	r0, #14
   3a898:	str	r0, [fp, #-24]	; 0xffffffe8
   3a89c:	b	3a8a0 <flatcc_json_printer_uint64@@Base+0x250>
   3a8a0:	b	3a8a4 <flatcc_json_printer_uint64@@Base+0x254>
   3a8a4:	b	3a954 <flatcc_json_printer_uint64@@Base+0x304>
   3a8a8:	ldr	r0, [fp, #-16]
   3a8ac:	ldr	r1, [fp, #-12]
   3a8b0:	movw	r2, #59392	; 0xe800
   3a8b4:	movt	r2, #18550	; 0x4876
   3a8b8:	subs	r0, r0, r2
   3a8bc:	sbcs	r1, r1, #23
   3a8c0:	str	r0, [fp, #-108]	; 0xffffff94
   3a8c4:	str	r1, [fp, #-112]	; 0xffffff90
   3a8c8:	bcc	3a910 <flatcc_json_printer_uint64@@Base+0x2c0>
   3a8cc:	b	3a8d0 <flatcc_json_printer_uint64@@Base+0x280>
   3a8d0:	ldr	r0, [fp, #-16]
   3a8d4:	ldr	r1, [fp, #-12]
   3a8d8:	movw	r2, #4096	; 0x1000
   3a8dc:	movt	r2, #54437	; 0xd4a5
   3a8e0:	subs	r0, r0, r2
   3a8e4:	sbcs	r1, r1, #232	; 0xe8
   3a8e8:	str	r0, [fp, #-116]	; 0xffffff8c
   3a8ec:	str	r1, [fp, #-120]	; 0xffffff88
   3a8f0:	bcc	3a904 <flatcc_json_printer_uint64@@Base+0x2b4>
   3a8f4:	b	3a8f8 <flatcc_json_printer_uint64@@Base+0x2a8>
   3a8f8:	movw	r0, #13
   3a8fc:	str	r0, [fp, #-24]	; 0xffffffe8
   3a900:	b	3a90c <flatcc_json_printer_uint64@@Base+0x2bc>
   3a904:	movw	r0, #12
   3a908:	str	r0, [fp, #-24]	; 0xffffffe8
   3a90c:	b	3a950 <flatcc_json_printer_uint64@@Base+0x300>
   3a910:	ldr	r0, [fp, #-16]
   3a914:	ldr	r1, [fp, #-12]
   3a918:	movw	r2, #58368	; 0xe400
   3a91c:	movt	r2, #21515	; 0x540b
   3a920:	subs	r0, r0, r2
   3a924:	sbcs	r1, r1, #2
   3a928:	str	r0, [fp, #-124]	; 0xffffff84
   3a92c:	str	r1, [fp, #-128]	; 0xffffff80
   3a930:	bcc	3a944 <flatcc_json_printer_uint64@@Base+0x2f4>
   3a934:	b	3a938 <flatcc_json_printer_uint64@@Base+0x2e8>
   3a938:	movw	r0, #11
   3a93c:	str	r0, [fp, #-24]	; 0xffffffe8
   3a940:	b	3a94c <flatcc_json_printer_uint64@@Base+0x2fc>
   3a944:	movw	r0, #10
   3a948:	str	r0, [fp, #-24]	; 0xffffffe8
   3a94c:	b	3a950 <flatcc_json_printer_uint64@@Base+0x300>
   3a950:	b	3a954 <flatcc_json_printer_uint64@@Base+0x304>
   3a954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a958:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a95c:	add	r0, r1, r0
   3a960:	str	r0, [fp, #-20]	; 0xffffffec
   3a964:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a968:	movw	r1, #0
   3a96c:	strb	r1, [r0]
   3a970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a974:	and	r0, r0, #1
   3a978:	cmp	r0, #0
   3a97c:	beq	3acb8 <flatcc_json_printer_uint64@@Base+0x668>
   3a980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a984:	sub	r0, r0, #11
   3a988:	cmp	r0, #8
   3a98c:	str	r0, [fp, #-132]	; 0xffffff7c
   3a990:	bhi	3acb4 <flatcc_json_printer_uint64@@Base+0x664>
   3a994:	add	r0, pc, #8
   3a998:	ldr	r1, [fp, #-132]	; 0xffffff7c
   3a99c:	ldr	r2, [r0, r1, lsl #2]
   3a9a0:	add	pc, r0, r2
   3a9a4:	andeq	r0, r0, r4, lsr r2
   3a9a8:	andeq	r0, r0, r0, lsl r3
   3a9ac:			; <UNDEFINED> instruction: 0x000001b0
   3a9b0:	andeq	r0, r0, r0, lsl r3
   3a9b4:	andeq	r0, r0, ip, lsr #2
   3a9b8:	andeq	r0, r0, r0, lsl r3
   3a9bc:	andeq	r0, r0, r8, lsr #1
   3a9c0:	andeq	r0, r0, r0, lsl r3
   3a9c4:	andeq	r0, r0, r4, lsr #32
   3a9c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a9cc:	sub	r0, r0, #2
   3a9d0:	str	r0, [fp, #-20]	; 0xffffffec
   3a9d4:	ldr	r0, [fp, #-16]
   3a9d8:	ldr	r1, [fp, #-12]
   3a9dc:	mov	r2, #100	; 0x64
   3a9e0:	mov	r3, #0
   3a9e4:	str	r2, [fp, #-136]	; 0xffffff78
   3a9e8:	str	r3, [fp, #-140]	; 0xffffff74
   3a9ec:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3a9f0:	ldr	r3, [pc, #2100]	; 3b22c <flatcc_json_printer_uint64@@Base+0xbdc>
   3a9f4:	add	r3, pc, r3
   3a9f8:	add	r2, r3, r2, lsl #1
   3a9fc:	str	r2, [fp, #-28]	; 0xffffffe4
   3aa00:	ldr	r2, [fp, #-16]
   3aa04:	ldr	r3, [fp, #-12]
   3aa08:	str	r0, [fp, #-144]	; 0xffffff70
   3aa0c:	mov	r0, r2
   3aa10:	str	r1, [fp, #-148]	; 0xffffff6c
   3aa14:	mov	r1, r3
   3aa18:	ldr	r2, [fp, #-136]	; 0xffffff78
   3aa1c:	ldr	r3, [fp, #-140]	; 0xffffff74
   3aa20:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3aa24:	str	r1, [fp, #-12]
   3aa28:	str	r0, [fp, #-16]
   3aa2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3aa30:	ldrb	r0, [r0]
   3aa34:	ldr	r1, [fp, #-20]	; 0xffffffec
   3aa38:	strb	r0, [r1]
   3aa3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3aa40:	ldrb	r0, [r0, #1]
   3aa44:	ldr	r1, [fp, #-20]	; 0xffffffec
   3aa48:	strb	r0, [r1, #1]
   3aa4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3aa50:	sub	r0, r0, #2
   3aa54:	str	r0, [fp, #-20]	; 0xffffffec
   3aa58:	ldr	r0, [fp, #-16]
   3aa5c:	ldr	r1, [fp, #-12]
   3aa60:	mov	r2, #100	; 0x64
   3aa64:	mov	r3, #0
   3aa68:	str	r2, [fp, #-152]	; 0xffffff68
   3aa6c:	str	r3, [fp, #-156]	; 0xffffff64
   3aa70:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3aa74:	ldr	r3, [pc, #1972]	; 3b230 <flatcc_json_printer_uint64@@Base+0xbe0>
   3aa78:	add	r3, pc, r3
   3aa7c:	add	r2, r3, r2, lsl #1
   3aa80:	str	r2, [fp, #-28]	; 0xffffffe4
   3aa84:	ldr	r2, [fp, #-16]
   3aa88:	ldr	r3, [fp, #-12]
   3aa8c:	str	r0, [fp, #-160]	; 0xffffff60
   3aa90:	mov	r0, r2
   3aa94:	str	r1, [fp, #-164]	; 0xffffff5c
   3aa98:	mov	r1, r3
   3aa9c:	ldr	r2, [fp, #-152]	; 0xffffff68
   3aaa0:	ldr	r3, [fp, #-156]	; 0xffffff64
   3aaa4:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3aaa8:	str	r1, [fp, #-12]
   3aaac:	str	r0, [fp, #-16]
   3aab0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3aab4:	ldrb	r0, [r0]
   3aab8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3aabc:	strb	r0, [r1]
   3aac0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3aac4:	ldrb	r0, [r0, #1]
   3aac8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3aacc:	strb	r0, [r1, #1]
   3aad0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3aad4:	sub	r0, r0, #2
   3aad8:	str	r0, [fp, #-20]	; 0xffffffec
   3aadc:	ldr	r0, [fp, #-16]
   3aae0:	ldr	r1, [fp, #-12]
   3aae4:	mov	r2, #100	; 0x64
   3aae8:	mov	r3, #0
   3aaec:	str	r2, [fp, #-168]	; 0xffffff58
   3aaf0:	str	r3, [fp, #-172]	; 0xffffff54
   3aaf4:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3aaf8:	ldr	r3, [pc, #1844]	; 3b234 <flatcc_json_printer_uint64@@Base+0xbe4>
   3aafc:	add	r3, pc, r3
   3ab00:	add	r2, r3, r2, lsl #1
   3ab04:	str	r2, [fp, #-28]	; 0xffffffe4
   3ab08:	ldr	r2, [fp, #-16]
   3ab0c:	ldr	r3, [fp, #-12]
   3ab10:	str	r0, [fp, #-176]	; 0xffffff50
   3ab14:	mov	r0, r2
   3ab18:	str	r1, [fp, #-180]	; 0xffffff4c
   3ab1c:	mov	r1, r3
   3ab20:	ldr	r2, [fp, #-168]	; 0xffffff58
   3ab24:	ldr	r3, [fp, #-172]	; 0xffffff54
   3ab28:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3ab2c:	str	r1, [fp, #-12]
   3ab30:	str	r0, [fp, #-16]
   3ab34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ab38:	ldrb	r0, [r0]
   3ab3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ab40:	strb	r0, [r1]
   3ab44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ab48:	ldrb	r0, [r0, #1]
   3ab4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ab50:	strb	r0, [r1, #1]
   3ab54:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ab58:	sub	r0, r0, #2
   3ab5c:	str	r0, [fp, #-20]	; 0xffffffec
   3ab60:	ldr	r0, [fp, #-16]
   3ab64:	ldr	r1, [fp, #-12]
   3ab68:	mov	r2, #100	; 0x64
   3ab6c:	mov	r3, #0
   3ab70:	str	r2, [sp, #184]	; 0xb8
   3ab74:	str	r3, [sp, #180]	; 0xb4
   3ab78:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3ab7c:	ldr	r3, [pc, #1716]	; 3b238 <flatcc_json_printer_uint64@@Base+0xbe8>
   3ab80:	add	r3, pc, r3
   3ab84:	add	r2, r3, r2, lsl #1
   3ab88:	str	r2, [fp, #-28]	; 0xffffffe4
   3ab8c:	ldr	r2, [fp, #-16]
   3ab90:	ldr	r3, [fp, #-12]
   3ab94:	str	r0, [sp, #176]	; 0xb0
   3ab98:	mov	r0, r2
   3ab9c:	str	r1, [sp, #172]	; 0xac
   3aba0:	mov	r1, r3
   3aba4:	ldr	r2, [sp, #184]	; 0xb8
   3aba8:	ldr	r3, [sp, #180]	; 0xb4
   3abac:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3abb0:	str	r1, [fp, #-12]
   3abb4:	str	r0, [fp, #-16]
   3abb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3abbc:	ldrb	r0, [r0]
   3abc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3abc4:	strb	r0, [r1]
   3abc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3abcc:	ldrb	r0, [r0, #1]
   3abd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3abd4:	strb	r0, [r1, #1]
   3abd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3abdc:	sub	r0, r0, #2
   3abe0:	str	r0, [fp, #-20]	; 0xffffffec
   3abe4:	ldr	r0, [fp, #-16]
   3abe8:	ldr	r1, [fp, #-12]
   3abec:	mov	r2, #100	; 0x64
   3abf0:	mov	r3, #0
   3abf4:	str	r2, [sp, #168]	; 0xa8
   3abf8:	str	r3, [sp, #164]	; 0xa4
   3abfc:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3ac00:	ldr	r3, [pc, #1588]	; 3b23c <flatcc_json_printer_uint64@@Base+0xbec>
   3ac04:	add	r3, pc, r3
   3ac08:	add	r2, r3, r2, lsl #1
   3ac0c:	str	r2, [fp, #-28]	; 0xffffffe4
   3ac10:	ldr	r2, [fp, #-16]
   3ac14:	ldr	r3, [fp, #-12]
   3ac18:	str	r0, [sp, #160]	; 0xa0
   3ac1c:	mov	r0, r2
   3ac20:	str	r1, [sp, #156]	; 0x9c
   3ac24:	mov	r1, r3
   3ac28:	ldr	r2, [sp, #168]	; 0xa8
   3ac2c:	ldr	r3, [sp, #164]	; 0xa4
   3ac30:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3ac34:	str	r1, [fp, #-12]
   3ac38:	str	r0, [fp, #-16]
   3ac3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ac40:	ldrb	r0, [r0]
   3ac44:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ac48:	strb	r0, [r1]
   3ac4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ac50:	ldrb	r0, [r0, #1]
   3ac54:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ac58:	strb	r0, [r1, #1]
   3ac5c:	ldr	r0, [fp, #-16]
   3ac60:	ldr	r1, [fp, #-12]
   3ac64:	mov	r2, #10
   3ac68:	str	r2, [sp, #152]	; 0x98
   3ac6c:	ldr	r3, [sp, #164]	; 0xa4
   3ac70:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3ac74:	orr	r2, r2, #48	; 0x30
   3ac78:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ac7c:	sub	lr, r3, #1
   3ac80:	str	lr, [fp, #-20]	; 0xffffffec
   3ac84:	strb	r2, [r3, #-1]
   3ac88:	ldr	r2, [fp, #-16]
   3ac8c:	ldr	r3, [fp, #-12]
   3ac90:	str	r0, [sp, #148]	; 0x94
   3ac94:	mov	r0, r2
   3ac98:	str	r1, [sp, #144]	; 0x90
   3ac9c:	mov	r1, r3
   3aca0:	ldr	r2, [sp, #152]	; 0x98
   3aca4:	ldr	r3, [sp, #164]	; 0xa4
   3aca8:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3acac:	str	r1, [fp, #-12]
   3acb0:	str	r0, [fp, #-16]
   3acb4:	b	3b024 <flatcc_json_printer_uint64@@Base+0x9d4>
   3acb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3acbc:	sub	r0, r0, #10
   3acc0:	cmp	r0, #10
   3acc4:	str	r0, [sp, #140]	; 0x8c
   3acc8:	bhi	3b020 <flatcc_json_printer_uint64@@Base+0x9d0>
   3accc:	add	r0, pc, #8
   3acd0:	ldr	r1, [sp, #140]	; 0x8c
   3acd4:	ldr	r2, [r0, r1, lsl #2]
   3acd8:	add	pc, r0, r2
   3acdc:	andeq	r0, r0, r0, asr #5
   3ace0:	andeq	r0, r0, r4, asr #6
   3ace4:	andeq	r0, r0, ip, lsr r2
   3ace8:	andeq	r0, r0, r4, asr #6
   3acec:			; <UNDEFINED> instruction: 0x000001b8
   3acf0:	andeq	r0, r0, r4, asr #6
   3acf4:	andeq	r0, r0, r4, lsr r1
   3acf8:	andeq	r0, r0, r4, asr #6
   3acfc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   3ad00:	andeq	r0, r0, r4, asr #6
   3ad04:	andeq	r0, r0, ip, lsr #32
   3ad08:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ad0c:	sub	r0, r0, #2
   3ad10:	str	r0, [fp, #-20]	; 0xffffffec
   3ad14:	ldr	r0, [fp, #-16]
   3ad18:	ldr	r1, [fp, #-12]
   3ad1c:	mov	r2, #100	; 0x64
   3ad20:	mov	r3, #0
   3ad24:	str	r2, [sp, #136]	; 0x88
   3ad28:	str	r3, [sp, #132]	; 0x84
   3ad2c:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3ad30:	ldr	r3, [pc, #1288]	; 3b240 <flatcc_json_printer_uint64@@Base+0xbf0>
   3ad34:	add	r3, pc, r3
   3ad38:	add	r2, r3, r2, lsl #1
   3ad3c:	str	r2, [fp, #-28]	; 0xffffffe4
   3ad40:	ldr	r2, [fp, #-16]
   3ad44:	ldr	r3, [fp, #-12]
   3ad48:	str	r0, [sp, #128]	; 0x80
   3ad4c:	mov	r0, r2
   3ad50:	str	r1, [sp, #124]	; 0x7c
   3ad54:	mov	r1, r3
   3ad58:	ldr	r2, [sp, #136]	; 0x88
   3ad5c:	ldr	r3, [sp, #132]	; 0x84
   3ad60:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3ad64:	str	r1, [fp, #-12]
   3ad68:	str	r0, [fp, #-16]
   3ad6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ad70:	ldrb	r0, [r0]
   3ad74:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ad78:	strb	r0, [r1]
   3ad7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ad80:	ldrb	r0, [r0, #1]
   3ad84:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ad88:	strb	r0, [r1, #1]
   3ad8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ad90:	sub	r0, r0, #2
   3ad94:	str	r0, [fp, #-20]	; 0xffffffec
   3ad98:	ldr	r0, [fp, #-16]
   3ad9c:	ldr	r1, [fp, #-12]
   3ada0:	mov	r2, #100	; 0x64
   3ada4:	mov	r3, #0
   3ada8:	str	r2, [sp, #120]	; 0x78
   3adac:	str	r3, [sp, #116]	; 0x74
   3adb0:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3adb4:	ldr	r3, [pc, #1160]	; 3b244 <flatcc_json_printer_uint64@@Base+0xbf4>
   3adb8:	add	r3, pc, r3
   3adbc:	add	r2, r3, r2, lsl #1
   3adc0:	str	r2, [fp, #-28]	; 0xffffffe4
   3adc4:	ldr	r2, [fp, #-16]
   3adc8:	ldr	r3, [fp, #-12]
   3adcc:	str	r0, [sp, #112]	; 0x70
   3add0:	mov	r0, r2
   3add4:	str	r1, [sp, #108]	; 0x6c
   3add8:	mov	r1, r3
   3addc:	ldr	r2, [sp, #120]	; 0x78
   3ade0:	ldr	r3, [sp, #116]	; 0x74
   3ade4:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3ade8:	str	r1, [fp, #-12]
   3adec:	str	r0, [fp, #-16]
   3adf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3adf4:	ldrb	r0, [r0]
   3adf8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3adfc:	strb	r0, [r1]
   3ae00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ae04:	ldrb	r0, [r0, #1]
   3ae08:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ae0c:	strb	r0, [r1, #1]
   3ae10:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ae14:	sub	r0, r0, #2
   3ae18:	str	r0, [fp, #-20]	; 0xffffffec
   3ae1c:	ldr	r0, [fp, #-16]
   3ae20:	ldr	r1, [fp, #-12]
   3ae24:	mov	r2, #100	; 0x64
   3ae28:	mov	r3, #0
   3ae2c:	str	r2, [sp, #104]	; 0x68
   3ae30:	str	r3, [sp, #100]	; 0x64
   3ae34:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3ae38:	ldr	r3, [pc, #1032]	; 3b248 <flatcc_json_printer_uint64@@Base+0xbf8>
   3ae3c:	add	r3, pc, r3
   3ae40:	add	r2, r3, r2, lsl #1
   3ae44:	str	r2, [fp, #-28]	; 0xffffffe4
   3ae48:	ldr	r2, [fp, #-16]
   3ae4c:	ldr	r3, [fp, #-12]
   3ae50:	str	r0, [sp, #96]	; 0x60
   3ae54:	mov	r0, r2
   3ae58:	str	r1, [sp, #92]	; 0x5c
   3ae5c:	mov	r1, r3
   3ae60:	ldr	r2, [sp, #104]	; 0x68
   3ae64:	ldr	r3, [sp, #100]	; 0x64
   3ae68:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3ae6c:	str	r1, [fp, #-12]
   3ae70:	str	r0, [fp, #-16]
   3ae74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ae78:	ldrb	r0, [r0]
   3ae7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ae80:	strb	r0, [r1]
   3ae84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ae88:	ldrb	r0, [r0, #1]
   3ae8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ae90:	strb	r0, [r1, #1]
   3ae94:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ae98:	sub	r0, r0, #2
   3ae9c:	str	r0, [fp, #-20]	; 0xffffffec
   3aea0:	ldr	r0, [fp, #-16]
   3aea4:	ldr	r1, [fp, #-12]
   3aea8:	mov	r2, #100	; 0x64
   3aeac:	mov	r3, #0
   3aeb0:	str	r2, [sp, #88]	; 0x58
   3aeb4:	str	r3, [sp, #84]	; 0x54
   3aeb8:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3aebc:	ldr	r3, [pc, #904]	; 3b24c <flatcc_json_printer_uint64@@Base+0xbfc>
   3aec0:	add	r3, pc, r3
   3aec4:	add	r2, r3, r2, lsl #1
   3aec8:	str	r2, [fp, #-28]	; 0xffffffe4
   3aecc:	ldr	r2, [fp, #-16]
   3aed0:	ldr	r3, [fp, #-12]
   3aed4:	str	r0, [sp, #80]	; 0x50
   3aed8:	mov	r0, r2
   3aedc:	str	r1, [sp, #76]	; 0x4c
   3aee0:	mov	r1, r3
   3aee4:	ldr	r2, [sp, #88]	; 0x58
   3aee8:	ldr	r3, [sp, #84]	; 0x54
   3aeec:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3aef0:	str	r1, [fp, #-12]
   3aef4:	str	r0, [fp, #-16]
   3aef8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3aefc:	ldrb	r0, [r0]
   3af00:	ldr	r1, [fp, #-20]	; 0xffffffec
   3af04:	strb	r0, [r1]
   3af08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3af0c:	ldrb	r0, [r0, #1]
   3af10:	ldr	r1, [fp, #-20]	; 0xffffffec
   3af14:	strb	r0, [r1, #1]
   3af18:	ldr	r0, [fp, #-20]	; 0xffffffec
   3af1c:	sub	r0, r0, #2
   3af20:	str	r0, [fp, #-20]	; 0xffffffec
   3af24:	ldr	r0, [fp, #-16]
   3af28:	ldr	r1, [fp, #-12]
   3af2c:	mov	r2, #100	; 0x64
   3af30:	mov	r3, #0
   3af34:	str	r2, [sp, #72]	; 0x48
   3af38:	str	r3, [sp, #68]	; 0x44
   3af3c:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3af40:	ldr	r3, [pc, #776]	; 3b250 <flatcc_json_printer_uint64@@Base+0xc00>
   3af44:	add	r3, pc, r3
   3af48:	add	r2, r3, r2, lsl #1
   3af4c:	str	r2, [fp, #-28]	; 0xffffffe4
   3af50:	ldr	r2, [fp, #-16]
   3af54:	ldr	r3, [fp, #-12]
   3af58:	str	r0, [sp, #64]	; 0x40
   3af5c:	mov	r0, r2
   3af60:	str	r1, [sp, #60]	; 0x3c
   3af64:	mov	r1, r3
   3af68:	ldr	r2, [sp, #72]	; 0x48
   3af6c:	ldr	r3, [sp, #68]	; 0x44
   3af70:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3af74:	str	r1, [fp, #-12]
   3af78:	str	r0, [fp, #-16]
   3af7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3af80:	ldrb	r0, [r0]
   3af84:	ldr	r1, [fp, #-20]	; 0xffffffec
   3af88:	strb	r0, [r1]
   3af8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3af90:	ldrb	r0, [r0, #1]
   3af94:	ldr	r1, [fp, #-20]	; 0xffffffec
   3af98:	strb	r0, [r1, #1]
   3af9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3afa0:	sub	r0, r0, #2
   3afa4:	str	r0, [fp, #-20]	; 0xffffffec
   3afa8:	ldr	r0, [fp, #-16]
   3afac:	ldr	r1, [fp, #-12]
   3afb0:	mov	r2, #100	; 0x64
   3afb4:	mov	r3, #0
   3afb8:	str	r2, [sp, #56]	; 0x38
   3afbc:	str	r3, [sp, #52]	; 0x34
   3afc0:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3afc4:	ldr	r3, [pc, #648]	; 3b254 <flatcc_json_printer_uint64@@Base+0xc04>
   3afc8:	add	r3, pc, r3
   3afcc:	add	r2, r3, r2, lsl #1
   3afd0:	str	r2, [fp, #-28]	; 0xffffffe4
   3afd4:	ldr	r2, [fp, #-16]
   3afd8:	ldr	r3, [fp, #-12]
   3afdc:	str	r0, [sp, #48]	; 0x30
   3afe0:	mov	r0, r2
   3afe4:	str	r1, [sp, #44]	; 0x2c
   3afe8:	mov	r1, r3
   3afec:	ldr	r2, [sp, #56]	; 0x38
   3aff0:	ldr	r3, [sp, #52]	; 0x34
   3aff4:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3aff8:	str	r1, [fp, #-12]
   3affc:	str	r0, [fp, #-16]
   3b000:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b004:	ldrb	r0, [r0]
   3b008:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b00c:	strb	r0, [r1]
   3b010:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b014:	ldrb	r0, [r0, #1]
   3b018:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b01c:	strb	r0, [r1, #1]
   3b020:	b	3b024 <flatcc_json_printer_uint64@@Base+0x9d4>
   3b024:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b028:	sub	r0, r0, #2
   3b02c:	str	r0, [fp, #-20]	; 0xffffffec
   3b030:	ldr	r0, [fp, #-16]
   3b034:	ldr	r1, [fp, #-12]
   3b038:	mov	r2, #100	; 0x64
   3b03c:	mov	r3, #0
   3b040:	str	r2, [sp, #40]	; 0x28
   3b044:	str	r3, [sp, #36]	; 0x24
   3b048:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3b04c:	ldr	r3, [pc, #516]	; 3b258 <flatcc_json_printer_uint64@@Base+0xc08>
   3b050:	add	r3, pc, r3
   3b054:	add	r2, r3, r2, lsl #1
   3b058:	str	r2, [fp, #-28]	; 0xffffffe4
   3b05c:	ldr	r2, [fp, #-16]
   3b060:	ldr	lr, [fp, #-12]
   3b064:	str	r0, [sp, #32]
   3b068:	mov	r0, r2
   3b06c:	str	r1, [sp, #28]
   3b070:	mov	r1, lr
   3b074:	ldr	r2, [sp, #40]	; 0x28
   3b078:	ldr	lr, [sp, #36]	; 0x24
   3b07c:	str	r3, [sp, #24]
   3b080:	mov	r3, lr
   3b084:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3b088:	str	r1, [fp, #-12]
   3b08c:	str	r0, [fp, #-16]
   3b090:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b094:	ldrb	r0, [r0]
   3b098:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b09c:	strb	r0, [r1]
   3b0a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b0a4:	ldrb	r0, [r0, #1]
   3b0a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b0ac:	strb	r0, [r1, #1]
   3b0b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b0b4:	sub	r0, r0, #2
   3b0b8:	str	r0, [fp, #-20]	; 0xffffffec
   3b0bc:	ldr	r0, [fp, #-16]
   3b0c0:	ldr	r1, [fp, #-12]
   3b0c4:	ldr	r2, [sp, #40]	; 0x28
   3b0c8:	ldr	r3, [sp, #36]	; 0x24
   3b0cc:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3b0d0:	ldr	r3, [sp, #24]
   3b0d4:	add	r2, r3, r2, lsl #1
   3b0d8:	str	r2, [fp, #-28]	; 0xffffffe4
   3b0dc:	ldr	r2, [fp, #-16]
   3b0e0:	ldr	lr, [fp, #-12]
   3b0e4:	str	r0, [sp, #20]
   3b0e8:	mov	r0, r2
   3b0ec:	str	r1, [sp, #16]
   3b0f0:	mov	r1, lr
   3b0f4:	ldr	r2, [sp, #40]	; 0x28
   3b0f8:	ldr	r3, [sp, #36]	; 0x24
   3b0fc:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3b100:	str	r1, [fp, #-12]
   3b104:	str	r0, [fp, #-16]
   3b108:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b10c:	ldrb	r0, [r0]
   3b110:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b114:	strb	r0, [r1]
   3b118:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b11c:	ldrb	r0, [r0, #1]
   3b120:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b124:	strb	r0, [r1, #1]
   3b128:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b12c:	sub	r0, r0, #2
   3b130:	str	r0, [fp, #-20]	; 0xffffffec
   3b134:	ldr	r0, [fp, #-16]
   3b138:	ldr	r1, [fp, #-12]
   3b13c:	ldr	r2, [sp, #40]	; 0x28
   3b140:	ldr	r3, [sp, #36]	; 0x24
   3b144:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3b148:	ldr	r3, [sp, #24]
   3b14c:	add	r2, r3, r2, lsl #1
   3b150:	str	r2, [fp, #-28]	; 0xffffffe4
   3b154:	ldr	r2, [fp, #-16]
   3b158:	ldr	lr, [fp, #-12]
   3b15c:	str	r0, [sp, #12]
   3b160:	mov	r0, r2
   3b164:	str	r1, [sp, #8]
   3b168:	mov	r1, lr
   3b16c:	ldr	r2, [sp, #40]	; 0x28
   3b170:	ldr	r3, [sp, #36]	; 0x24
   3b174:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3b178:	str	r1, [fp, #-12]
   3b17c:	str	r0, [fp, #-16]
   3b180:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b184:	ldrb	r0, [r0]
   3b188:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b18c:	strb	r0, [r1]
   3b190:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b194:	ldrb	r0, [r0, #1]
   3b198:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b19c:	strb	r0, [r1, #1]
   3b1a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b1a4:	sub	r0, r0, #2
   3b1a8:	str	r0, [fp, #-20]	; 0xffffffec
   3b1ac:	ldr	r0, [fp, #-16]
   3b1b0:	ldr	r1, [fp, #-12]
   3b1b4:	ldr	r2, [sp, #40]	; 0x28
   3b1b8:	ldr	r3, [sp, #36]	; 0x24
   3b1bc:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3b1c0:	ldr	r3, [sp, #24]
   3b1c4:	add	r2, r3, r2, lsl #1
   3b1c8:	str	r2, [fp, #-28]	; 0xffffffe4
   3b1cc:	ldr	r2, [fp, #-16]
   3b1d0:	ldr	lr, [fp, #-12]
   3b1d4:	str	r0, [sp, #4]
   3b1d8:	mov	r0, r2
   3b1dc:	str	r1, [sp]
   3b1e0:	mov	r1, lr
   3b1e4:	ldr	r2, [sp, #40]	; 0x28
   3b1e8:	ldr	r3, [sp, #36]	; 0x24
   3b1ec:	bl	466d4 <flatcc_json_printer_clear@@Base+0x23a0>
   3b1f0:	str	r1, [fp, #-12]
   3b1f4:	str	r0, [fp, #-16]
   3b1f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b1fc:	ldrb	r0, [r0]
   3b200:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b204:	strb	r0, [r1]
   3b208:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b20c:	ldrb	r0, [r0, #1]
   3b210:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b214:	strb	r0, [r1, #1]
   3b218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b21c:	str	r0, [fp, #-4]
   3b220:	ldr	r0, [fp, #-4]
   3b224:	mov	sp, fp
   3b228:	pop	{fp, pc}
   3b22c:	andeq	r2, r1, r8, lsr r1
   3b230:	strheq	r2, [r1], -r4
   3b234:	andeq	r2, r1, r0, lsr r0
   3b238:	andeq	r1, r1, ip, lsr #31
   3b23c:	andeq	r1, r1, r8, lsr #30
   3b240:	strdeq	r1, [r1], -r8
   3b244:	andeq	r1, r1, r4, ror sp
   3b248:	strdeq	r1, [r1], -r0
   3b24c:	andeq	r1, r1, ip, ror #24
   3b250:	andeq	r1, r1, r8, ror #23
   3b254:	andeq	r1, r1, r4, ror #22
   3b258:	ldrdeq	r1, [r1], -ip

0003b25c <flatcc_json_printer_int8@@Base>:
   3b25c:	push	{fp, lr}
   3b260:	mov	fp, sp
   3b264:	sub	sp, sp, #8
   3b268:	str	r0, [sp, #4]
   3b26c:	strb	r1, [sp, #3]
   3b270:	ldrb	r0, [sp, #3]
   3b274:	ldr	r1, [sp, #4]
   3b278:	ldr	r1, [r1, #20]
   3b27c:	sxtb	r0, r0
   3b280:	bl	3b29c <flatcc_json_printer_int8@@Base+0x40>
   3b284:	ldr	r1, [sp, #4]
   3b288:	ldr	lr, [r1, #20]
   3b28c:	add	r0, lr, r0
   3b290:	str	r0, [r1, #20]
   3b294:	mov	sp, fp
   3b298:	pop	{fp, pc}
   3b29c:	push	{fp, lr}
   3b2a0:	mov	fp, sp
   3b2a4:	sub	sp, sp, #16
   3b2a8:	strb	r0, [fp, #-1]
   3b2ac:	str	r1, [sp, #8]
   3b2b0:	ldrsb	r0, [fp, #-1]
   3b2b4:	cmp	r0, #0
   3b2b8:	movw	r0, #0
   3b2bc:	movlt	r0, #1
   3b2c0:	and	r1, r0, #1
   3b2c4:	str	r1, [sp, #4]
   3b2c8:	tst	r0, #1
   3b2cc:	beq	3b2f4 <flatcc_json_printer_int8@@Base+0x98>
   3b2d0:	ldr	r0, [sp, #8]
   3b2d4:	add	r1, r0, #1
   3b2d8:	str	r1, [sp, #8]
   3b2dc:	movw	r1, #45	; 0x2d
   3b2e0:	strb	r1, [r0]
   3b2e4:	ldrsb	r0, [fp, #-1]
   3b2e8:	movw	r1, #0
   3b2ec:	sub	r0, r1, r0
   3b2f0:	strb	r0, [fp, #-1]
   3b2f4:	ldrb	r0, [fp, #-1]
   3b2f8:	ldr	r1, [sp, #8]
   3b2fc:	and	r0, r0, #255	; 0xff
   3b300:	bl	39b00 <flatcc_json_printer_uint8@@Base+0x40>
   3b304:	ldr	r1, [sp, #4]
   3b308:	add	r0, r0, r1
   3b30c:	mov	sp, fp
   3b310:	pop	{fp, pc}

0003b314 <flatcc_json_printer_int16@@Base>:
   3b314:	push	{fp, lr}
   3b318:	mov	fp, sp
   3b31c:	sub	sp, sp, #8
   3b320:	str	r0, [sp, #4]
   3b324:	strh	r1, [sp, #2]
   3b328:	ldrh	r0, [sp, #2]
   3b32c:	ldr	r1, [sp, #4]
   3b330:	ldr	r1, [r1, #20]
   3b334:	sxth	r0, r0
   3b338:	bl	3b354 <flatcc_json_printer_int16@@Base+0x40>
   3b33c:	ldr	r1, [sp, #4]
   3b340:	ldr	lr, [r1, #20]
   3b344:	add	r0, lr, r0
   3b348:	str	r0, [r1, #20]
   3b34c:	mov	sp, fp
   3b350:	pop	{fp, pc}
   3b354:	push	{fp, lr}
   3b358:	mov	fp, sp
   3b35c:	sub	sp, sp, #16
   3b360:	strh	r0, [fp, #-2]
   3b364:	str	r1, [sp, #8]
   3b368:	ldrsh	r0, [fp, #-2]
   3b36c:	cmp	r0, #0
   3b370:	movw	r0, #0
   3b374:	movlt	r0, #1
   3b378:	and	r1, r0, #1
   3b37c:	str	r1, [sp, #4]
   3b380:	tst	r0, #1
   3b384:	beq	3b3ac <flatcc_json_printer_int16@@Base+0x98>
   3b388:	ldr	r0, [sp, #8]
   3b38c:	add	r1, r0, #1
   3b390:	str	r1, [sp, #8]
   3b394:	movw	r1, #45	; 0x2d
   3b398:	strb	r1, [r0]
   3b39c:	ldrsh	r0, [fp, #-2]
   3b3a0:	movw	r1, #0
   3b3a4:	sub	r0, r1, r0
   3b3a8:	strh	r0, [fp, #-2]
   3b3ac:	ldrh	r0, [fp, #-2]
   3b3b0:	ldr	r1, [sp, #8]
   3b3b4:	uxth	r0, r0
   3b3b8:	bl	39cdc <flatcc_json_printer_uint16@@Base+0x40>
   3b3bc:	ldr	r1, [sp, #4]
   3b3c0:	add	r0, r0, r1
   3b3c4:	mov	sp, fp
   3b3c8:	pop	{fp, pc}

0003b3cc <flatcc_json_printer_int32@@Base>:
   3b3cc:	push	{fp, lr}
   3b3d0:	mov	fp, sp
   3b3d4:	sub	sp, sp, #8
   3b3d8:	str	r0, [sp, #4]
   3b3dc:	str	r1, [sp]
   3b3e0:	ldr	r0, [sp]
   3b3e4:	ldr	r1, [sp, #4]
   3b3e8:	ldr	r1, [r1, #20]
   3b3ec:	bl	3b408 <flatcc_json_printer_int32@@Base+0x3c>
   3b3f0:	ldr	r1, [sp, #4]
   3b3f4:	ldr	lr, [r1, #20]
   3b3f8:	add	r0, lr, r0
   3b3fc:	str	r0, [r1, #20]
   3b400:	mov	sp, fp
   3b404:	pop	{fp, pc}
   3b408:	push	{fp, lr}
   3b40c:	mov	fp, sp
   3b410:	sub	sp, sp, #16
   3b414:	str	r0, [fp, #-4]
   3b418:	str	r1, [sp, #8]
   3b41c:	ldr	r0, [fp, #-4]
   3b420:	cmp	r0, #0
   3b424:	movw	r0, #0
   3b428:	movlt	r0, #1
   3b42c:	and	r1, r0, #1
   3b430:	str	r1, [sp, #4]
   3b434:	tst	r0, #1
   3b438:	beq	3b460 <flatcc_json_printer_int32@@Base+0x94>
   3b43c:	ldr	r0, [sp, #8]
   3b440:	add	r1, r0, #1
   3b444:	str	r1, [sp, #8]
   3b448:	movw	r1, #45	; 0x2d
   3b44c:	strb	r1, [r0]
   3b450:	ldr	r0, [fp, #-4]
   3b454:	movw	r1, #0
   3b458:	sub	r0, r1, r0
   3b45c:	str	r0, [fp, #-4]
   3b460:	ldr	r0, [fp, #-4]
   3b464:	ldr	r1, [sp, #8]
   3b468:	bl	3a020 <flatcc_json_printer_uint32@@Base+0x3c>
   3b46c:	ldr	r1, [sp, #4]
   3b470:	add	r0, r0, r1
   3b474:	mov	sp, fp
   3b478:	pop	{fp, pc}

0003b47c <flatcc_json_printer_int64@@Base>:
   3b47c:	push	{fp, lr}
   3b480:	mov	fp, sp
   3b484:	sub	sp, sp, #16
   3b488:	str	r0, [fp, #-4]
   3b48c:	str	r3, [sp, #4]
   3b490:	str	r2, [sp]
   3b494:	ldr	r0, [sp]
   3b498:	ldr	r1, [sp, #4]
   3b49c:	ldr	r2, [fp, #-4]
   3b4a0:	ldr	r2, [r2, #20]
   3b4a4:	bl	3b4c0 <flatcc_json_printer_int64@@Base+0x44>
   3b4a8:	ldr	r1, [fp, #-4]
   3b4ac:	ldr	r2, [r1, #20]
   3b4b0:	add	r0, r2, r0
   3b4b4:	str	r0, [r1, #20]
   3b4b8:	mov	sp, fp
   3b4bc:	pop	{fp, pc}
   3b4c0:	push	{fp, lr}
   3b4c4:	mov	fp, sp
   3b4c8:	sub	sp, sp, #16
   3b4cc:	str	r0, [sp, #8]
   3b4d0:	str	r1, [sp, #12]
   3b4d4:	str	r2, [sp, #4]
   3b4d8:	ldr	r0, [sp, #12]
   3b4dc:	lsr	r0, r0, #31
   3b4e0:	and	r1, r0, #1
   3b4e4:	str	r1, [sp]
   3b4e8:	tst	r0, #1
   3b4ec:	beq	3b51c <flatcc_json_printer_int64@@Base+0xa0>
   3b4f0:	ldr	r0, [sp, #4]
   3b4f4:	add	r1, r0, #1
   3b4f8:	str	r1, [sp, #4]
   3b4fc:	mov	r1, #45	; 0x2d
   3b500:	strb	r1, [r0]
   3b504:	ldr	r0, [sp, #8]
   3b508:	ldr	r1, [sp, #12]
   3b50c:	rsbs	r0, r0, #0
   3b510:	rsc	r1, r1, #0
   3b514:	str	r0, [sp, #8]
   3b518:	str	r1, [sp, #12]
   3b51c:	ldr	r0, [sp, #8]
   3b520:	ldr	r1, [sp, #12]
   3b524:	ldr	r2, [sp, #4]
   3b528:	bl	3a694 <flatcc_json_printer_uint64@@Base+0x44>
   3b52c:	ldr	r1, [sp]
   3b530:	add	r0, r0, r1
   3b534:	mov	sp, fp
   3b538:	pop	{fp, pc}

0003b53c <flatcc_json_printer_float@@Base>:
   3b53c:	push	{fp, lr}
   3b540:	mov	fp, sp
   3b544:	sub	sp, sp, #8
   3b548:	str	r0, [sp, #4]
   3b54c:	vstr	s0, [sp]
   3b550:	vldr	s0, [sp]
   3b554:	vcvt.f64.f32	d0, s0
   3b558:	ldr	r0, [sp, #4]
   3b55c:	ldr	r0, [r0, #20]
   3b560:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3b564:	ldr	lr, [sp, #4]
   3b568:	ldr	r1, [lr, #20]
   3b56c:	add	r0, r1, r0
   3b570:	str	r0, [lr, #20]
   3b574:	mov	sp, fp
   3b578:	pop	{fp, pc}

0003b57c <flatcc_json_printer_double@@Base>:
   3b57c:	push	{fp, lr}
   3b580:	mov	fp, sp
   3b584:	sub	sp, sp, #16
   3b588:	str	r0, [fp, #-4]
   3b58c:	vstr	d0, [sp]
   3b590:	vldr	d0, [sp]
   3b594:	ldr	r0, [fp, #-4]
   3b598:	ldr	r0, [r0, #20]
   3b59c:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3b5a0:	ldr	lr, [fp, #-4]
   3b5a4:	ldr	r1, [lr, #20]
   3b5a8:	add	r0, r1, r0
   3b5ac:	str	r0, [lr, #20]
   3b5b0:	mov	sp, fp
   3b5b4:	pop	{fp, pc}

0003b5b8 <flatcc_json_printer_enum@@Base>:
   3b5b8:	push	{fp, lr}
   3b5bc:	mov	fp, sp
   3b5c0:	sub	sp, sp, #16
   3b5c4:	str	r0, [fp, #-4]
   3b5c8:	str	r1, [sp, #8]
   3b5cc:	str	r2, [sp, #4]
   3b5d0:	ldr	r0, [fp, #-4]
   3b5d4:	ldr	r1, [sp, #8]
   3b5d8:	ldr	r2, [sp, #4]
   3b5dc:	bl	3b5e8 <flatcc_json_printer_enum@@Base+0x30>
   3b5e0:	mov	sp, fp
   3b5e4:	pop	{fp, pc}
   3b5e8:	push	{fp, lr}
   3b5ec:	mov	fp, sp
   3b5f0:	sub	sp, sp, #16
   3b5f4:	str	r0, [fp, #-4]
   3b5f8:	str	r1, [sp, #8]
   3b5fc:	str	r2, [sp, #4]
   3b600:	ldr	r0, [fp, #-4]
   3b604:	ldr	r0, [r0, #20]
   3b608:	movw	r1, #34	; 0x22
   3b60c:	strb	r1, [r0]
   3b610:	ldr	r0, [fp, #-4]
   3b614:	ldrsb	r0, [r0, #26]
   3b618:	cmp	r0, #0
   3b61c:	movw	r0, #0
   3b620:	movne	r0, #1
   3b624:	mvn	r1, #0
   3b628:	eor	r0, r0, r1
   3b62c:	and	r0, r0, #1
   3b630:	ldr	r1, [fp, #-4]
   3b634:	ldr	r2, [r1, #20]
   3b638:	add	r0, r2, r0
   3b63c:	str	r0, [r1, #20]
   3b640:	ldr	r0, [fp, #-4]
   3b644:	ldr	r0, [r0, #20]
   3b648:	ldr	r1, [sp, #4]
   3b64c:	add	r0, r0, r1
   3b650:	ldr	r1, [fp, #-4]
   3b654:	ldr	r1, [r1, #16]
   3b658:	cmp	r0, r1
   3b65c:	bcs	3b68c <flatcc_json_printer_enum@@Base+0xd4>
   3b660:	ldr	r0, [fp, #-4]
   3b664:	ldr	r0, [r0, #20]
   3b668:	ldr	r1, [sp, #8]
   3b66c:	ldr	r2, [sp, #4]
   3b670:	bl	14e30 <memcpy@plt>
   3b674:	ldr	r0, [sp, #4]
   3b678:	ldr	r1, [fp, #-4]
   3b67c:	ldr	r2, [r1, #20]
   3b680:	add	r0, r2, r0
   3b684:	str	r0, [r1, #20]
   3b688:	b	3b69c <flatcc_json_printer_enum@@Base+0xe4>
   3b68c:	ldr	r0, [fp, #-4]
   3b690:	ldr	r1, [sp, #8]
   3b694:	ldr	r2, [sp, #4]
   3b698:	bl	398a4 <flatcc_json_printer_write@@Base+0x30>
   3b69c:	ldr	r0, [fp, #-4]
   3b6a0:	ldr	r0, [r0, #20]
   3b6a4:	movw	r1, #34	; 0x22
   3b6a8:	strb	r1, [r0]
   3b6ac:	ldr	r0, [fp, #-4]
   3b6b0:	ldrsb	r0, [r0, #26]
   3b6b4:	cmp	r0, #0
   3b6b8:	movw	r0, #0
   3b6bc:	movne	r0, #1
   3b6c0:	mvn	r1, #0
   3b6c4:	eor	r0, r0, r1
   3b6c8:	and	r0, r0, #1
   3b6cc:	ldr	r1, [fp, #-4]
   3b6d0:	ldr	r2, [r1, #20]
   3b6d4:	add	r0, r2, r0
   3b6d8:	str	r0, [r1, #20]
   3b6dc:	mov	sp, fp
   3b6e0:	pop	{fp, pc}

0003b6e4 <flatcc_json_printer_delimit_enum_flags@@Base>:
   3b6e4:	sub	sp, sp, #16
   3b6e8:	str	r0, [sp, #12]
   3b6ec:	str	r1, [sp, #8]
   3b6f0:	ldr	r0, [sp, #12]
   3b6f4:	ldrsb	r0, [r0, #26]
   3b6f8:	cmp	r0, #0
   3b6fc:	movw	r0, #1
   3b700:	str	r0, [sp]
   3b704:	beq	3b71c <flatcc_json_printer_delimit_enum_flags@@Base+0x38>
   3b708:	ldr	r0, [sp, #8]
   3b70c:	cmp	r0, #0
   3b710:	movw	r0, #0
   3b714:	movne	r0, #1
   3b718:	str	r0, [sp]
   3b71c:	ldr	r0, [sp]
   3b720:	and	r0, r0, #1
   3b724:	str	r0, [sp, #4]
   3b728:	ldr	r0, [sp, #12]
   3b72c:	ldr	r0, [r0, #20]
   3b730:	movw	r1, #34	; 0x22
   3b734:	strb	r1, [r0]
   3b738:	ldr	r0, [sp, #4]
   3b73c:	ldr	r1, [sp, #12]
   3b740:	ldr	r2, [r1, #20]
   3b744:	add	r0, r2, r0
   3b748:	str	r0, [r1, #20]
   3b74c:	add	sp, sp, #16
   3b750:	bx	lr

0003b754 <flatcc_json_printer_enum_flag@@Base>:
   3b754:	push	{fp, lr}
   3b758:	mov	fp, sp
   3b75c:	sub	sp, sp, #16
   3b760:	str	r0, [fp, #-4]
   3b764:	str	r1, [sp, #8]
   3b768:	str	r2, [sp, #4]
   3b76c:	str	r3, [sp]
   3b770:	ldr	r0, [fp, #-4]
   3b774:	ldr	r0, [r0, #20]
   3b778:	movw	r1, #32
   3b77c:	strb	r1, [r0]
   3b780:	ldr	r0, [sp, #8]
   3b784:	cmp	r0, #0
   3b788:	movw	r0, #0
   3b78c:	movgt	r0, #1
   3b790:	and	r0, r0, #1
   3b794:	ldr	r1, [fp, #-4]
   3b798:	ldr	r2, [r1, #20]
   3b79c:	add	r0, r2, r0
   3b7a0:	str	r0, [r1, #20]
   3b7a4:	ldr	r0, [fp, #-4]
   3b7a8:	ldr	r1, [sp, #4]
   3b7ac:	ldr	r2, [sp]
   3b7b0:	bl	398a4 <flatcc_json_printer_write@@Base+0x30>
   3b7b4:	mov	sp, fp
   3b7b8:	pop	{fp, pc}

0003b7bc <flatcc_json_printer_string_field@@Base>:
   3b7bc:	push	{fp, lr}
   3b7c0:	mov	fp, sp
   3b7c4:	sub	sp, sp, #32
   3b7c8:	ldr	ip, [fp, #8]
   3b7cc:	str	r0, [fp, #-4]
   3b7d0:	str	r1, [fp, #-8]
   3b7d4:	str	r2, [fp, #-12]
   3b7d8:	str	r3, [sp, #16]
   3b7dc:	ldr	r0, [fp, #-8]
   3b7e0:	ldr	r1, [fp, #-12]
   3b7e4:	str	ip, [sp, #8]
   3b7e8:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3b7ec:	str	r0, [sp, #12]
   3b7f0:	ldr	r0, [sp, #12]
   3b7f4:	movw	r1, #0
   3b7f8:	cmp	r0, r1
   3b7fc:	beq	3b868 <flatcc_json_printer_string_field@@Base+0xac>
   3b800:	ldr	r0, [fp, #-8]
   3b804:	ldr	r1, [r0, #16]
   3b808:	add	r2, r1, #1
   3b80c:	str	r2, [r0, #16]
   3b810:	cmp	r1, #0
   3b814:	beq	3b830 <flatcc_json_printer_string_field@@Base+0x74>
   3b818:	ldr	r0, [fp, #-4]
   3b81c:	ldr	r1, [r0, #20]
   3b820:	add	r2, r1, #1
   3b824:	str	r2, [r0, #20]
   3b828:	movw	r0, #44	; 0x2c
   3b82c:	strb	r0, [r1]
   3b830:	ldr	r0, [fp, #-4]
   3b834:	ldr	r1, [sp, #16]
   3b838:	ldr	r2, [fp, #8]
   3b83c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3b840:	ldr	r0, [fp, #-4]
   3b844:	ldr	r1, [sp, #12]
   3b848:	str	r0, [sp, #4]
   3b84c:	mov	r0, r1
   3b850:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3b854:	ldr	r1, [sp, #4]
   3b858:	str	r0, [sp]
   3b85c:	mov	r0, r1
   3b860:	ldr	r1, [sp]
   3b864:	bl	3b9d0 <flatcc_json_printer_string_field@@Base+0x214>
   3b868:	mov	sp, fp
   3b86c:	pop	{fp, pc}
   3b870:	push	{fp, lr}
   3b874:	mov	fp, sp
   3b878:	sub	sp, sp, #16
   3b87c:	str	r0, [sp, #8]
   3b880:	str	r1, [sp, #4]
   3b884:	ldr	r0, [sp, #4]
   3b888:	add	r0, r0, #2
   3b88c:	lsl	r0, r0, #1
   3b890:	str	r0, [sp]
   3b894:	ldr	r0, [sp]
   3b898:	ldr	r1, [sp, #8]
   3b89c:	ldr	r1, [r1, #8]
   3b8a0:	cmp	r0, r1
   3b8a4:	blt	3b8b4 <flatcc_json_printer_string_field@@Base+0xf8>
   3b8a8:	movw	r0, #0
   3b8ac:	str	r0, [fp, #-4]
   3b8b0:	b	3b8f8 <flatcc_json_printer_string_field@@Base+0x13c>
   3b8b4:	ldr	r0, [sp, #8]
   3b8b8:	ldr	r0, [r0, #4]
   3b8bc:	ldr	r1, [sp]
   3b8c0:	bl	45a78 <flatcc_json_printer_clear@@Base+0x1744>
   3b8c4:	uxth	r0, r0
   3b8c8:	str	r0, [sp]
   3b8cc:	ldr	r0, [sp]
   3b8d0:	cmp	r0, #0
   3b8d4:	bne	3b8e4 <flatcc_json_printer_string_field@@Base+0x128>
   3b8d8:	movw	r0, #0
   3b8dc:	str	r0, [fp, #-4]
   3b8e0:	b	3b8f8 <flatcc_json_printer_string_field@@Base+0x13c>
   3b8e4:	ldr	r0, [sp, #8]
   3b8e8:	ldr	r0, [r0]
   3b8ec:	ldr	r1, [sp]
   3b8f0:	add	r0, r0, r1
   3b8f4:	str	r0, [fp, #-4]
   3b8f8:	ldr	r0, [fp, #-4]
   3b8fc:	mov	sp, fp
   3b900:	pop	{fp, pc}
   3b904:	push	{fp, lr}
   3b908:	mov	fp, sp
   3b90c:	sub	sp, sp, #16
   3b910:	str	r0, [fp, #-4]
   3b914:	str	r1, [sp, #8]
   3b918:	str	r2, [sp, #4]
   3b91c:	ldr	r0, [fp, #-4]
   3b920:	ldrsb	r0, [r0, #25]
   3b924:	cmp	r0, #0
   3b928:	beq	3b950 <flatcc_json_printer_string_field@@Base+0x194>
   3b92c:	ldr	r0, [fp, #-4]
   3b930:	ldr	r1, [r0, #20]
   3b934:	add	r2, r1, #1
   3b938:	str	r2, [r0, #20]
   3b93c:	movw	r0, #10
   3b940:	strb	r0, [r1]
   3b944:	ldr	r0, [fp, #-4]
   3b948:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3b94c:	b	3b958 <flatcc_json_printer_string_field@@Base+0x19c>
   3b950:	ldr	r0, [fp, #-4]
   3b954:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3b958:	b	3b95c <flatcc_json_printer_string_field@@Base+0x1a0>
   3b95c:	ldr	r0, [fp, #-4]
   3b960:	ldr	r1, [sp, #8]
   3b964:	ldr	r2, [sp, #4]
   3b968:	bl	3b5e8 <flatcc_json_printer_enum@@Base+0x30>
   3b96c:	ldr	r0, [fp, #-4]
   3b970:	ldr	r1, [r0, #20]
   3b974:	add	r2, r1, #1
   3b978:	str	r2, [r0, #20]
   3b97c:	movw	r0, #58	; 0x3a
   3b980:	strb	r0, [r1]
   3b984:	ldr	r0, [fp, #-4]
   3b988:	ldr	r0, [r0, #20]
   3b98c:	movw	r1, #32
   3b990:	strb	r1, [r0]
   3b994:	ldr	r0, [fp, #-4]
   3b998:	ldrsb	r0, [r0, #25]
   3b99c:	cmp	r0, #0
   3b9a0:	movw	r0, #0
   3b9a4:	movne	r0, #1
   3b9a8:	mvn	r1, #0
   3b9ac:	eor	r0, r0, r1
   3b9b0:	eor	r0, r0, r1
   3b9b4:	and	r0, r0, #1
   3b9b8:	ldr	r1, [fp, #-4]
   3b9bc:	ldr	r2, [r1, #20]
   3b9c0:	add	r0, r2, r0
   3b9c4:	str	r0, [r1, #20]
   3b9c8:	mov	sp, fp
   3b9cc:	pop	{fp, pc}
   3b9d0:	push	{fp, lr}
   3b9d4:	mov	fp, sp
   3b9d8:	sub	sp, sp, #16
   3b9dc:	str	r0, [fp, #-4]
   3b9e0:	str	r1, [sp, #8]
   3b9e4:	ldr	r0, [sp, #8]
   3b9e8:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3b9ec:	str	r0, [sp, #4]
   3b9f0:	ldr	r0, [sp, #8]
   3b9f4:	add	r0, r0, #4
   3b9f8:	str	r0, [sp]
   3b9fc:	ldr	r0, [fp, #-4]
   3ba00:	ldr	r1, [sp]
   3ba04:	ldr	r2, [sp, #4]
   3ba08:	bl	39504 <flatcc_json_printer_string@@Base+0x30>
   3ba0c:	mov	sp, fp
   3ba10:	pop	{fp, pc}
   3ba14:	push	{fp, lr}
   3ba18:	mov	fp, sp
   3ba1c:	sub	sp, sp, #8
   3ba20:	str	r0, [sp, #4]
   3ba24:	ldr	r0, [sp, #4]
   3ba28:	ldr	r1, [sp, #4]
   3ba2c:	str	r0, [sp]
   3ba30:	mov	r0, r1
   3ba34:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3ba38:	ldr	r1, [sp]
   3ba3c:	add	r0, r1, r0
   3ba40:	mov	sp, fp
   3ba44:	pop	{fp, pc}

0003ba48 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   3ba48:	push	{fp, lr}
   3ba4c:	mov	fp, sp
   3ba50:	sub	sp, sp, #40	; 0x28
   3ba54:	ldr	ip, [fp, #12]
   3ba58:	ldr	lr, [fp, #8]
   3ba5c:	str	r0, [fp, #-4]
   3ba60:	str	r1, [fp, #-8]
   3ba64:	str	r2, [fp, #-12]
   3ba68:	str	r3, [fp, #-16]
   3ba6c:	ldr	r0, [fp, #-8]
   3ba70:	ldr	r1, [fp, #-12]
   3ba74:	str	lr, [sp, #12]
   3ba78:	str	ip, [sp, #8]
   3ba7c:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3ba80:	str	r0, [sp, #20]
   3ba84:	ldr	r0, [fp, #12]
   3ba88:	cmp	r0, #0
   3ba8c:	movw	r0, #0
   3ba90:	movne	r0, #1
   3ba94:	tst	r0, #1
   3ba98:	movw	r0, #1
   3ba9c:	moveq	r0, #0
   3baa0:	str	r0, [sp, #16]
   3baa4:	ldr	r0, [sp, #16]
   3baa8:	orr	r0, r0, #128	; 0x80
   3baac:	str	r0, [sp, #16]
   3bab0:	ldr	r0, [sp, #20]
   3bab4:	movw	r1, #0
   3bab8:	cmp	r0, r1
   3babc:	beq	3bb2c <flatcc_json_printer_uint8_vector_base64_field@@Base+0xe4>
   3bac0:	ldr	r0, [fp, #-8]
   3bac4:	ldr	r1, [r0, #16]
   3bac8:	add	r2, r1, #1
   3bacc:	str	r2, [r0, #16]
   3bad0:	cmp	r1, #0
   3bad4:	beq	3baf0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa8>
   3bad8:	ldr	r0, [fp, #-4]
   3badc:	ldr	r1, [r0, #20]
   3bae0:	add	r2, r1, #1
   3bae4:	str	r2, [r0, #20]
   3bae8:	movw	r0, #44	; 0x2c
   3baec:	strb	r0, [r1]
   3baf0:	ldr	r0, [fp, #-4]
   3baf4:	ldr	r1, [fp, #-16]
   3baf8:	ldr	r2, [fp, #8]
   3bafc:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3bb00:	ldr	r0, [fp, #-4]
   3bb04:	ldr	r1, [sp, #20]
   3bb08:	str	r0, [sp, #4]
   3bb0c:	mov	r0, r1
   3bb10:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3bb14:	ldr	r2, [sp, #16]
   3bb18:	ldr	r1, [sp, #4]
   3bb1c:	str	r0, [sp]
   3bb20:	mov	r0, r1
   3bb24:	ldr	r1, [sp]
   3bb28:	bl	3bb34 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xec>
   3bb2c:	mov	sp, fp
   3bb30:	pop	{fp, pc}
   3bb34:	push	{fp, lr}
   3bb38:	mov	fp, sp
   3bb3c:	sub	sp, sp, #72	; 0x48
   3bb40:	str	r0, [fp, #-4]
   3bb44:	str	r1, [fp, #-8]
   3bb48:	str	r2, [fp, #-12]
   3bb4c:	ldr	r0, [fp, #-12]
   3bb50:	mvn	r1, #128	; 0x80
   3bb54:	and	r0, r0, r1
   3bb58:	str	r0, [fp, #-16]
   3bb5c:	ldr	r0, [fp, #-8]
   3bb60:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3bb64:	str	r0, [sp, #36]	; 0x24
   3bb68:	ldr	r0, [fp, #-8]
   3bb6c:	add	r0, r0, #4
   3bb70:	str	r0, [fp, #-32]	; 0xffffffe0
   3bb74:	ldr	r0, [fp, #-4]
   3bb78:	ldr	r1, [r0, #20]
   3bb7c:	add	r2, r1, #1
   3bb80:	str	r2, [r0, #20]
   3bb84:	movw	r0, #34	; 0x22
   3bb88:	strb	r0, [r1]
   3bb8c:	ldr	r0, [sp, #36]	; 0x24
   3bb90:	ldr	r1, [fp, #-12]
   3bb94:	bl	45ae4 <flatcc_json_printer_clear@@Base+0x17b0>
   3bb98:	str	r0, [fp, #-28]	; 0xffffffe4
   3bb9c:	ldr	r0, [fp, #-4]
   3bba0:	ldr	r0, [r0, #20]
   3bba4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bba8:	add	r0, r0, r1
   3bbac:	ldr	r1, [fp, #-4]
   3bbb0:	ldr	r1, [r1, #16]
   3bbb4:	cmp	r0, r1
   3bbb8:	bcc	3bbdc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x194>
   3bbbc:	ldr	r0, [fp, #-4]
   3bbc0:	ldr	r0, [r0, #44]	; 0x2c
   3bbc4:	ldr	r1, [fp, #-4]
   3bbc8:	str	r0, [sp, #28]
   3bbcc:	mov	r0, r1
   3bbd0:	movw	r1, #0
   3bbd4:	ldr	r2, [sp, #28]
   3bbd8:	blx	r2
   3bbdc:	b	3bbe0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   3bbe0:	ldr	r0, [fp, #-4]
   3bbe4:	ldr	r0, [r0, #20]
   3bbe8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bbec:	add	r0, r0, r1
   3bbf0:	ldr	r1, [fp, #-4]
   3bbf4:	ldr	r1, [r1, #16]
   3bbf8:	cmp	r0, r1
   3bbfc:	bls	3bd04 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2bc>
   3bc00:	ldr	r0, [fp, #-4]
   3bc04:	ldr	r1, [r0, #16]
   3bc08:	ldr	r0, [r0, #20]
   3bc0c:	sub	r0, r1, r0
   3bc10:	bic	r0, r0, #3
   3bc14:	str	r0, [fp, #-20]	; 0xffffffec
   3bc18:	ldr	r0, [fp, #-20]	; 0xffffffec
   3bc1c:	add	r0, r0, r0, lsl #1
   3bc20:	lsr	r0, r0, #2
   3bc24:	str	r0, [fp, #-24]	; 0xffffffe8
   3bc28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3bc2c:	cmp	r0, #0
   3bc30:	bls	3bc38 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1f0>
   3bc34:	b	3bc58 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x210>
   3bc38:	ldr	r0, [pc, #296]	; 3bd68 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x320>
   3bc3c:	add	r0, pc, r0
   3bc40:	ldr	r1, [pc, #292]	; 3bd6c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x324>
   3bc44:	add	r1, pc, r1
   3bc48:	ldr	r2, [pc, #288]	; 3bd70 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x328>
   3bc4c:	add	r3, pc, r2
   3bc50:	movw	r2, #277	; 0x115
   3bc54:	bl	14f08 <__assert_fail@plt>
   3bc58:	ldr	r0, [fp, #-20]	; 0xffffffec
   3bc5c:	add	r0, r0, r0, lsl #1
   3bc60:	lsr	r0, r0, #2
   3bc64:	str	r0, [sp, #32]
   3bc68:	ldr	r0, [fp, #-4]
   3bc6c:	ldr	r0, [r0, #20]
   3bc70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3bc74:	ldr	r2, [fp, #-16]
   3bc78:	movw	r3, #0
   3bc7c:	str	r2, [sp, #24]
   3bc80:	mov	r2, r3
   3bc84:	add	r3, sp, #32
   3bc88:	ldr	ip, [sp, #24]
   3bc8c:	str	ip, [sp]
   3bc90:	bl	45ba4 <flatcc_json_printer_clear@@Base+0x1870>
   3bc94:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bc98:	ldr	r2, [fp, #-4]
   3bc9c:	ldr	r3, [r2, #20]
   3bca0:	add	r1, r3, r1
   3bca4:	str	r1, [r2, #20]
   3bca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3bcac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3bcb0:	add	r1, r2, r1
   3bcb4:	str	r1, [fp, #-32]	; 0xffffffe0
   3bcb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3bcbc:	ldr	r2, [sp, #36]	; 0x24
   3bcc0:	sub	r1, r2, r1
   3bcc4:	str	r1, [sp, #36]	; 0x24
   3bcc8:	ldr	r1, [fp, #-4]
   3bccc:	ldr	r1, [r1, #44]	; 0x2c
   3bcd0:	ldr	r2, [fp, #-4]
   3bcd4:	str	r0, [sp, #20]
   3bcd8:	mov	r0, r2
   3bcdc:	movw	r2, #0
   3bce0:	str	r1, [sp, #16]
   3bce4:	mov	r1, r2
   3bce8:	ldr	r2, [sp, #16]
   3bcec:	blx	r2
   3bcf0:	ldr	r0, [sp, #36]	; 0x24
   3bcf4:	ldr	r1, [fp, #-12]
   3bcf8:	bl	45ae4 <flatcc_json_printer_clear@@Base+0x17b0>
   3bcfc:	str	r0, [fp, #-28]	; 0xffffffe4
   3bd00:	b	3bbe0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   3bd04:	ldr	r0, [fp, #-4]
   3bd08:	ldr	r0, [r0, #20]
   3bd0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3bd10:	ldr	r2, [fp, #-12]
   3bd14:	movw	r3, #0
   3bd18:	str	r2, [sp, #12]
   3bd1c:	mov	r2, r3
   3bd20:	add	r3, sp, #36	; 0x24
   3bd24:	ldr	ip, [sp, #12]
   3bd28:	str	ip, [sp]
   3bd2c:	bl	45ba4 <flatcc_json_printer_clear@@Base+0x1870>
   3bd30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bd34:	ldr	r2, [fp, #-4]
   3bd38:	ldr	r3, [r2, #20]
   3bd3c:	add	r1, r3, r1
   3bd40:	str	r1, [r2, #20]
   3bd44:	ldr	r1, [fp, #-4]
   3bd48:	ldr	r2, [r1, #20]
   3bd4c:	add	r3, r2, #1
   3bd50:	str	r3, [r1, #20]
   3bd54:	movw	r1, #34	; 0x22
   3bd58:	strb	r1, [r2]
   3bd5c:	str	r0, [sp, #8]
   3bd60:	mov	sp, fp
   3bd64:	pop	{fp, pc}
   3bd68:	andeq	r0, r1, sp, ror #15
   3bd6c:	andeq	r0, r1, fp, ror #8
   3bd70:	andeq	r0, r1, r3, ror #15

0003bd74 <flatcc_json_printer_uint8_field@@Base>:
   3bd74:	push	{fp, lr}
   3bd78:	mov	fp, sp
   3bd7c:	sub	sp, sp, #32
   3bd80:	ldr	ip, [fp, #12]
   3bd84:	ldr	lr, [fp, #8]
   3bd88:	str	r0, [fp, #-4]
   3bd8c:	str	r1, [fp, #-8]
   3bd90:	str	r2, [fp, #-12]
   3bd94:	str	r3, [sp, #16]
   3bd98:	strb	ip, [sp, #15]
   3bd9c:	ldr	r0, [fp, #-8]
   3bda0:	ldr	r1, [fp, #-12]
   3bda4:	str	lr, [sp, #4]
   3bda8:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3bdac:	str	r0, [sp, #8]
   3bdb0:	ldr	r0, [sp, #8]
   3bdb4:	movw	r1, #0
   3bdb8:	cmp	r0, r1
   3bdbc:	beq	3bdf4 <flatcc_json_printer_uint8_field@@Base+0x80>
   3bdc0:	ldr	r0, [sp, #8]
   3bdc4:	bl	3be7c <flatcc_json_printer_uint8_field@@Base+0x108>
   3bdc8:	strb	r0, [sp, #14]
   3bdcc:	ldrb	r0, [sp, #14]
   3bdd0:	ldrb	lr, [sp, #15]
   3bdd4:	cmp	r0, lr
   3bdd8:	bne	3bdf0 <flatcc_json_printer_uint8_field@@Base+0x7c>
   3bddc:	ldr	r0, [fp, #-4]
   3bde0:	ldrb	r0, [r0, #28]
   3bde4:	cmp	r0, #0
   3bde8:	beq	3bdf0 <flatcc_json_printer_uint8_field@@Base+0x7c>
   3bdec:	b	3be74 <flatcc_json_printer_uint8_field@@Base+0x100>
   3bdf0:	b	3be10 <flatcc_json_printer_uint8_field@@Base+0x9c>
   3bdf4:	ldr	r0, [fp, #-4]
   3bdf8:	ldrsb	r0, [r0, #29]
   3bdfc:	cmp	r0, #0
   3be00:	bne	3be08 <flatcc_json_printer_uint8_field@@Base+0x94>
   3be04:	b	3be74 <flatcc_json_printer_uint8_field@@Base+0x100>
   3be08:	ldrb	r0, [sp, #15]
   3be0c:	strb	r0, [sp, #14]
   3be10:	ldr	r0, [fp, #-8]
   3be14:	ldr	r1, [r0, #16]
   3be18:	add	r2, r1, #1
   3be1c:	str	r2, [r0, #16]
   3be20:	cmp	r1, #0
   3be24:	beq	3be40 <flatcc_json_printer_uint8_field@@Base+0xcc>
   3be28:	ldr	r0, [fp, #-4]
   3be2c:	ldr	r1, [r0, #20]
   3be30:	add	r2, r1, #1
   3be34:	str	r2, [r0, #20]
   3be38:	movw	r0, #44	; 0x2c
   3be3c:	strb	r0, [r1]
   3be40:	ldr	r0, [fp, #-4]
   3be44:	ldr	r1, [sp, #16]
   3be48:	ldr	r2, [fp, #8]
   3be4c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3be50:	ldrb	r0, [sp, #14]
   3be54:	ldr	r1, [fp, #-4]
   3be58:	ldr	r1, [r1, #20]
   3be5c:	and	r0, r0, #255	; 0xff
   3be60:	bl	39b00 <flatcc_json_printer_uint8@@Base+0x40>
   3be64:	ldr	r1, [fp, #-4]
   3be68:	ldr	r2, [r1, #20]
   3be6c:	add	r0, r2, r0
   3be70:	str	r0, [r1, #20]
   3be74:	mov	sp, fp
   3be78:	pop	{fp, pc}
   3be7c:	push	{fp, lr}
   3be80:	mov	fp, sp
   3be84:	sub	sp, sp, #8
   3be88:	str	r0, [sp, #4]
   3be8c:	ldr	r0, [sp, #4]
   3be90:	ldrb	r0, [r0]
   3be94:	bl	45f14 <flatcc_json_printer_clear@@Base+0x1be0>
   3be98:	and	r0, r0, #255	; 0xff
   3be9c:	mov	sp, fp
   3bea0:	pop	{fp, pc}

0003bea4 <flatcc_json_printer_uint16_field@@Base>:
   3bea4:	push	{fp, lr}
   3bea8:	mov	fp, sp
   3beac:	sub	sp, sp, #32
   3beb0:	ldr	ip, [fp, #12]
   3beb4:	ldr	lr, [fp, #8]
   3beb8:	str	r0, [fp, #-4]
   3bebc:	str	r1, [fp, #-8]
   3bec0:	str	r2, [fp, #-12]
   3bec4:	str	r3, [sp, #16]
   3bec8:	strh	ip, [sp, #14]
   3becc:	ldr	r0, [fp, #-8]
   3bed0:	ldr	r1, [fp, #-12]
   3bed4:	str	lr, [sp, #4]
   3bed8:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3bedc:	str	r0, [sp, #8]
   3bee0:	ldr	r0, [sp, #8]
   3bee4:	movw	r1, #0
   3bee8:	cmp	r0, r1
   3beec:	beq	3bf24 <flatcc_json_printer_uint16_field@@Base+0x80>
   3bef0:	ldr	r0, [sp, #8]
   3bef4:	bl	3bfac <flatcc_json_printer_uint16_field@@Base+0x108>
   3bef8:	strh	r0, [sp, #12]
   3befc:	ldrh	r0, [sp, #12]
   3bf00:	ldrh	lr, [sp, #14]
   3bf04:	cmp	r0, lr
   3bf08:	bne	3bf20 <flatcc_json_printer_uint16_field@@Base+0x7c>
   3bf0c:	ldr	r0, [fp, #-4]
   3bf10:	ldrb	r0, [r0, #28]
   3bf14:	cmp	r0, #0
   3bf18:	beq	3bf20 <flatcc_json_printer_uint16_field@@Base+0x7c>
   3bf1c:	b	3bfa4 <flatcc_json_printer_uint16_field@@Base+0x100>
   3bf20:	b	3bf40 <flatcc_json_printer_uint16_field@@Base+0x9c>
   3bf24:	ldr	r0, [fp, #-4]
   3bf28:	ldrsb	r0, [r0, #29]
   3bf2c:	cmp	r0, #0
   3bf30:	bne	3bf38 <flatcc_json_printer_uint16_field@@Base+0x94>
   3bf34:	b	3bfa4 <flatcc_json_printer_uint16_field@@Base+0x100>
   3bf38:	ldrh	r0, [sp, #14]
   3bf3c:	strh	r0, [sp, #12]
   3bf40:	ldr	r0, [fp, #-8]
   3bf44:	ldr	r1, [r0, #16]
   3bf48:	add	r2, r1, #1
   3bf4c:	str	r2, [r0, #16]
   3bf50:	cmp	r1, #0
   3bf54:	beq	3bf70 <flatcc_json_printer_uint16_field@@Base+0xcc>
   3bf58:	ldr	r0, [fp, #-4]
   3bf5c:	ldr	r1, [r0, #20]
   3bf60:	add	r2, r1, #1
   3bf64:	str	r2, [r0, #20]
   3bf68:	movw	r0, #44	; 0x2c
   3bf6c:	strb	r0, [r1]
   3bf70:	ldr	r0, [fp, #-4]
   3bf74:	ldr	r1, [sp, #16]
   3bf78:	ldr	r2, [fp, #8]
   3bf7c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3bf80:	ldrh	r0, [sp, #12]
   3bf84:	ldr	r1, [fp, #-4]
   3bf88:	ldr	r1, [r1, #20]
   3bf8c:	uxth	r0, r0
   3bf90:	bl	39cdc <flatcc_json_printer_uint16@@Base+0x40>
   3bf94:	ldr	r1, [fp, #-4]
   3bf98:	ldr	r2, [r1, #20]
   3bf9c:	add	r0, r2, r0
   3bfa0:	str	r0, [r1, #20]
   3bfa4:	mov	sp, fp
   3bfa8:	pop	{fp, pc}
   3bfac:	push	{fp, lr}
   3bfb0:	mov	fp, sp
   3bfb4:	sub	sp, sp, #8
   3bfb8:	str	r0, [sp, #4]
   3bfbc:	ldr	r0, [sp, #4]
   3bfc0:	ldrh	r0, [r0]
   3bfc4:	bl	45f28 <flatcc_json_printer_clear@@Base+0x1bf4>
   3bfc8:	uxth	r0, r0
   3bfcc:	mov	sp, fp
   3bfd0:	pop	{fp, pc}

0003bfd4 <flatcc_json_printer_uint32_field@@Base>:
   3bfd4:	push	{fp, lr}
   3bfd8:	mov	fp, sp
   3bfdc:	sub	sp, sp, #32
   3bfe0:	ldr	ip, [fp, #12]
   3bfe4:	ldr	lr, [fp, #8]
   3bfe8:	str	r0, [fp, #-4]
   3bfec:	str	r1, [fp, #-8]
   3bff0:	str	r2, [fp, #-12]
   3bff4:	str	r3, [sp, #16]
   3bff8:	ldr	r0, [fp, #-8]
   3bffc:	ldr	r1, [fp, #-12]
   3c000:	str	lr, [sp, #4]
   3c004:	str	ip, [sp]
   3c008:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3c00c:	str	r0, [sp, #8]
   3c010:	ldr	r0, [sp, #8]
   3c014:	movw	r1, #0
   3c018:	cmp	r0, r1
   3c01c:	beq	3c054 <flatcc_json_printer_uint32_field@@Base+0x80>
   3c020:	ldr	r0, [sp, #8]
   3c024:	bl	3c0d8 <flatcc_json_printer_uint32_field@@Base+0x104>
   3c028:	str	r0, [sp, #12]
   3c02c:	ldr	r0, [sp, #12]
   3c030:	ldr	lr, [fp, #12]
   3c034:	cmp	r0, lr
   3c038:	bne	3c050 <flatcc_json_printer_uint32_field@@Base+0x7c>
   3c03c:	ldr	r0, [fp, #-4]
   3c040:	ldrb	r0, [r0, #28]
   3c044:	cmp	r0, #0
   3c048:	beq	3c050 <flatcc_json_printer_uint32_field@@Base+0x7c>
   3c04c:	b	3c0d0 <flatcc_json_printer_uint32_field@@Base+0xfc>
   3c050:	b	3c070 <flatcc_json_printer_uint32_field@@Base+0x9c>
   3c054:	ldr	r0, [fp, #-4]
   3c058:	ldrsb	r0, [r0, #29]
   3c05c:	cmp	r0, #0
   3c060:	bne	3c068 <flatcc_json_printer_uint32_field@@Base+0x94>
   3c064:	b	3c0d0 <flatcc_json_printer_uint32_field@@Base+0xfc>
   3c068:	ldr	r0, [fp, #12]
   3c06c:	str	r0, [sp, #12]
   3c070:	ldr	r0, [fp, #-8]
   3c074:	ldr	r1, [r0, #16]
   3c078:	add	r2, r1, #1
   3c07c:	str	r2, [r0, #16]
   3c080:	cmp	r1, #0
   3c084:	beq	3c0a0 <flatcc_json_printer_uint32_field@@Base+0xcc>
   3c088:	ldr	r0, [fp, #-4]
   3c08c:	ldr	r1, [r0, #20]
   3c090:	add	r2, r1, #1
   3c094:	str	r2, [r0, #20]
   3c098:	movw	r0, #44	; 0x2c
   3c09c:	strb	r0, [r1]
   3c0a0:	ldr	r0, [fp, #-4]
   3c0a4:	ldr	r1, [sp, #16]
   3c0a8:	ldr	r2, [fp, #8]
   3c0ac:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3c0b0:	ldr	r0, [sp, #12]
   3c0b4:	ldr	r1, [fp, #-4]
   3c0b8:	ldr	r1, [r1, #20]
   3c0bc:	bl	3a020 <flatcc_json_printer_uint32@@Base+0x3c>
   3c0c0:	ldr	r1, [fp, #-4]
   3c0c4:	ldr	r2, [r1, #20]
   3c0c8:	add	r0, r2, r0
   3c0cc:	str	r0, [r1, #20]
   3c0d0:	mov	sp, fp
   3c0d4:	pop	{fp, pc}
   3c0d8:	push	{fp, lr}
   3c0dc:	mov	fp, sp
   3c0e0:	sub	sp, sp, #8
   3c0e4:	str	r0, [sp, #4]
   3c0e8:	ldr	r0, [sp, #4]
   3c0ec:	ldr	r0, [r0]
   3c0f0:	bl	45f3c <flatcc_json_printer_clear@@Base+0x1c08>
   3c0f4:	mov	sp, fp
   3c0f8:	pop	{fp, pc}

0003c0fc <flatcc_json_printer_uint64_field@@Base>:
   3c0fc:	push	{r4, sl, fp, lr}
   3c100:	add	fp, sp, #8
   3c104:	sub	sp, sp, #40	; 0x28
   3c108:	ldr	ip, [fp, #20]
   3c10c:	ldr	lr, [fp, #16]
   3c110:	ldr	r4, [fp, #8]
   3c114:	str	r0, [fp, #-12]
   3c118:	str	r1, [fp, #-16]
   3c11c:	str	r2, [fp, #-20]	; 0xffffffec
   3c120:	str	r3, [sp, #24]
   3c124:	str	ip, [sp, #20]
   3c128:	str	lr, [sp, #16]
   3c12c:	ldr	r0, [fp, #-16]
   3c130:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c134:	str	r4, [sp]
   3c138:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3c13c:	str	r0, [sp, #4]
   3c140:	ldr	r0, [sp, #4]
   3c144:	movw	r1, #0
   3c148:	cmp	r0, r1
   3c14c:	beq	3c1a0 <flatcc_json_printer_uint64_field@@Base+0xa4>
   3c150:	ldr	r0, [sp, #4]
   3c154:	bl	3c230 <flatcc_json_printer_uint64_field@@Base+0x134>
   3c158:	str	r1, [sp, #12]
   3c15c:	str	r0, [sp, #8]
   3c160:	ldr	r0, [sp, #8]
   3c164:	ldr	r1, [sp, #12]
   3c168:	ldr	lr, [sp, #16]
   3c16c:	ldr	r2, [sp, #20]
   3c170:	eor	r1, r1, r2
   3c174:	eor	r0, r0, lr
   3c178:	orr	r0, r0, r1
   3c17c:	cmp	r0, #0
   3c180:	bne	3c19c <flatcc_json_printer_uint64_field@@Base+0xa0>
   3c184:	b	3c188 <flatcc_json_printer_uint64_field@@Base+0x8c>
   3c188:	ldr	r0, [fp, #-12]
   3c18c:	ldrb	r0, [r0, #28]
   3c190:	cmp	r0, #0
   3c194:	beq	3c19c <flatcc_json_printer_uint64_field@@Base+0xa0>
   3c198:	b	3c228 <flatcc_json_printer_uint64_field@@Base+0x12c>
   3c19c:	b	3c1c4 <flatcc_json_printer_uint64_field@@Base+0xc8>
   3c1a0:	ldr	r0, [fp, #-12]
   3c1a4:	ldrsb	r0, [r0, #29]
   3c1a8:	cmp	r0, #0
   3c1ac:	bne	3c1b4 <flatcc_json_printer_uint64_field@@Base+0xb8>
   3c1b0:	b	3c228 <flatcc_json_printer_uint64_field@@Base+0x12c>
   3c1b4:	ldr	r0, [sp, #16]
   3c1b8:	ldr	r1, [sp, #20]
   3c1bc:	str	r1, [sp, #12]
   3c1c0:	str	r0, [sp, #8]
   3c1c4:	ldr	r0, [fp, #-16]
   3c1c8:	ldr	r1, [r0, #16]
   3c1cc:	add	r2, r1, #1
   3c1d0:	str	r2, [r0, #16]
   3c1d4:	cmp	r1, #0
   3c1d8:	beq	3c1f4 <flatcc_json_printer_uint64_field@@Base+0xf8>
   3c1dc:	ldr	r0, [fp, #-12]
   3c1e0:	ldr	r1, [r0, #20]
   3c1e4:	add	r2, r1, #1
   3c1e8:	str	r2, [r0, #20]
   3c1ec:	movw	r0, #44	; 0x2c
   3c1f0:	strb	r0, [r1]
   3c1f4:	ldr	r0, [fp, #-12]
   3c1f8:	ldr	r1, [sp, #24]
   3c1fc:	ldr	r2, [fp, #8]
   3c200:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3c204:	ldr	r0, [sp, #8]
   3c208:	ldr	r1, [sp, #12]
   3c20c:	ldr	r2, [fp, #-12]
   3c210:	ldr	r2, [r2, #20]
   3c214:	bl	3a694 <flatcc_json_printer_uint64@@Base+0x44>
   3c218:	ldr	r1, [fp, #-12]
   3c21c:	ldr	r2, [r1, #20]
   3c220:	add	r0, r2, r0
   3c224:	str	r0, [r1, #20]
   3c228:	sub	sp, fp, #8
   3c22c:	pop	{r4, sl, fp, pc}
   3c230:	push	{fp, lr}
   3c234:	mov	fp, sp
   3c238:	sub	sp, sp, #8
   3c23c:	str	r0, [sp, #4]
   3c240:	ldr	r0, [sp, #4]
   3c244:	ldr	r1, [r0]
   3c248:	ldr	r0, [r0, #4]
   3c24c:	str	r0, [sp]
   3c250:	mov	r0, r1
   3c254:	ldr	r1, [sp]
   3c258:	bl	45f50 <flatcc_json_printer_clear@@Base+0x1c1c>
   3c25c:	mov	sp, fp
   3c260:	pop	{fp, pc}

0003c264 <flatcc_json_printer_int8_field@@Base>:
   3c264:	push	{fp, lr}
   3c268:	mov	fp, sp
   3c26c:	sub	sp, sp, #32
   3c270:	ldr	ip, [fp, #12]
   3c274:	ldr	lr, [fp, #8]
   3c278:	str	r0, [fp, #-4]
   3c27c:	str	r1, [fp, #-8]
   3c280:	str	r2, [fp, #-12]
   3c284:	str	r3, [sp, #16]
   3c288:	strb	ip, [sp, #15]
   3c28c:	ldr	r0, [fp, #-8]
   3c290:	ldr	r1, [fp, #-12]
   3c294:	str	lr, [sp, #4]
   3c298:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3c29c:	str	r0, [sp, #8]
   3c2a0:	ldr	r0, [sp, #8]
   3c2a4:	movw	r1, #0
   3c2a8:	cmp	r0, r1
   3c2ac:	beq	3c2e4 <flatcc_json_printer_int8_field@@Base+0x80>
   3c2b0:	ldr	r0, [sp, #8]
   3c2b4:	bl	3c36c <flatcc_json_printer_int8_field@@Base+0x108>
   3c2b8:	strb	r0, [sp, #14]
   3c2bc:	ldrsb	r0, [sp, #14]
   3c2c0:	ldrsb	lr, [sp, #15]
   3c2c4:	cmp	r0, lr
   3c2c8:	bne	3c2e0 <flatcc_json_printer_int8_field@@Base+0x7c>
   3c2cc:	ldr	r0, [fp, #-4]
   3c2d0:	ldrb	r0, [r0, #28]
   3c2d4:	cmp	r0, #0
   3c2d8:	beq	3c2e0 <flatcc_json_printer_int8_field@@Base+0x7c>
   3c2dc:	b	3c364 <flatcc_json_printer_int8_field@@Base+0x100>
   3c2e0:	b	3c300 <flatcc_json_printer_int8_field@@Base+0x9c>
   3c2e4:	ldr	r0, [fp, #-4]
   3c2e8:	ldrsb	r0, [r0, #29]
   3c2ec:	cmp	r0, #0
   3c2f0:	bne	3c2f8 <flatcc_json_printer_int8_field@@Base+0x94>
   3c2f4:	b	3c364 <flatcc_json_printer_int8_field@@Base+0x100>
   3c2f8:	ldrb	r0, [sp, #15]
   3c2fc:	strb	r0, [sp, #14]
   3c300:	ldr	r0, [fp, #-8]
   3c304:	ldr	r1, [r0, #16]
   3c308:	add	r2, r1, #1
   3c30c:	str	r2, [r0, #16]
   3c310:	cmp	r1, #0
   3c314:	beq	3c330 <flatcc_json_printer_int8_field@@Base+0xcc>
   3c318:	ldr	r0, [fp, #-4]
   3c31c:	ldr	r1, [r0, #20]
   3c320:	add	r2, r1, #1
   3c324:	str	r2, [r0, #20]
   3c328:	movw	r0, #44	; 0x2c
   3c32c:	strb	r0, [r1]
   3c330:	ldr	r0, [fp, #-4]
   3c334:	ldr	r1, [sp, #16]
   3c338:	ldr	r2, [fp, #8]
   3c33c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3c340:	ldrb	r0, [sp, #14]
   3c344:	ldr	r1, [fp, #-4]
   3c348:	ldr	r1, [r1, #20]
   3c34c:	sxtb	r0, r0
   3c350:	bl	3b29c <flatcc_json_printer_int8@@Base+0x40>
   3c354:	ldr	r1, [fp, #-4]
   3c358:	ldr	r2, [r1, #20]
   3c35c:	add	r0, r2, r0
   3c360:	str	r0, [r1, #20]
   3c364:	mov	sp, fp
   3c368:	pop	{fp, pc}
   3c36c:	push	{fp, lr}
   3c370:	mov	fp, sp
   3c374:	sub	sp, sp, #8
   3c378:	str	r0, [sp, #4]
   3c37c:	ldr	r0, [sp, #4]
   3c380:	ldrsb	r0, [r0]
   3c384:	bl	45f6c <flatcc_json_printer_clear@@Base+0x1c38>
   3c388:	sxtb	r0, r0
   3c38c:	mov	sp, fp
   3c390:	pop	{fp, pc}

0003c394 <flatcc_json_printer_int16_field@@Base>:
   3c394:	push	{fp, lr}
   3c398:	mov	fp, sp
   3c39c:	sub	sp, sp, #32
   3c3a0:	ldr	ip, [fp, #12]
   3c3a4:	ldr	lr, [fp, #8]
   3c3a8:	str	r0, [fp, #-4]
   3c3ac:	str	r1, [fp, #-8]
   3c3b0:	str	r2, [fp, #-12]
   3c3b4:	str	r3, [sp, #16]
   3c3b8:	strh	ip, [sp, #14]
   3c3bc:	ldr	r0, [fp, #-8]
   3c3c0:	ldr	r1, [fp, #-12]
   3c3c4:	str	lr, [sp, #4]
   3c3c8:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3c3cc:	str	r0, [sp, #8]
   3c3d0:	ldr	r0, [sp, #8]
   3c3d4:	movw	r1, #0
   3c3d8:	cmp	r0, r1
   3c3dc:	beq	3c414 <flatcc_json_printer_int16_field@@Base+0x80>
   3c3e0:	ldr	r0, [sp, #8]
   3c3e4:	bl	3c49c <flatcc_json_printer_int16_field@@Base+0x108>
   3c3e8:	strh	r0, [sp, #12]
   3c3ec:	ldrsh	r0, [sp, #12]
   3c3f0:	ldrsh	lr, [sp, #14]
   3c3f4:	cmp	r0, lr
   3c3f8:	bne	3c410 <flatcc_json_printer_int16_field@@Base+0x7c>
   3c3fc:	ldr	r0, [fp, #-4]
   3c400:	ldrb	r0, [r0, #28]
   3c404:	cmp	r0, #0
   3c408:	beq	3c410 <flatcc_json_printer_int16_field@@Base+0x7c>
   3c40c:	b	3c494 <flatcc_json_printer_int16_field@@Base+0x100>
   3c410:	b	3c430 <flatcc_json_printer_int16_field@@Base+0x9c>
   3c414:	ldr	r0, [fp, #-4]
   3c418:	ldrsb	r0, [r0, #29]
   3c41c:	cmp	r0, #0
   3c420:	bne	3c428 <flatcc_json_printer_int16_field@@Base+0x94>
   3c424:	b	3c494 <flatcc_json_printer_int16_field@@Base+0x100>
   3c428:	ldrh	r0, [sp, #14]
   3c42c:	strh	r0, [sp, #12]
   3c430:	ldr	r0, [fp, #-8]
   3c434:	ldr	r1, [r0, #16]
   3c438:	add	r2, r1, #1
   3c43c:	str	r2, [r0, #16]
   3c440:	cmp	r1, #0
   3c444:	beq	3c460 <flatcc_json_printer_int16_field@@Base+0xcc>
   3c448:	ldr	r0, [fp, #-4]
   3c44c:	ldr	r1, [r0, #20]
   3c450:	add	r2, r1, #1
   3c454:	str	r2, [r0, #20]
   3c458:	movw	r0, #44	; 0x2c
   3c45c:	strb	r0, [r1]
   3c460:	ldr	r0, [fp, #-4]
   3c464:	ldr	r1, [sp, #16]
   3c468:	ldr	r2, [fp, #8]
   3c46c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3c470:	ldrh	r0, [sp, #12]
   3c474:	ldr	r1, [fp, #-4]
   3c478:	ldr	r1, [r1, #20]
   3c47c:	sxth	r0, r0
   3c480:	bl	3b354 <flatcc_json_printer_int16@@Base+0x40>
   3c484:	ldr	r1, [fp, #-4]
   3c488:	ldr	r2, [r1, #20]
   3c48c:	add	r0, r2, r0
   3c490:	str	r0, [r1, #20]
   3c494:	mov	sp, fp
   3c498:	pop	{fp, pc}
   3c49c:	push	{fp, lr}
   3c4a0:	mov	fp, sp
   3c4a4:	sub	sp, sp, #8
   3c4a8:	str	r0, [sp, #4]
   3c4ac:	ldr	r0, [sp, #4]
   3c4b0:	ldrsh	r0, [r0]
   3c4b4:	bl	45f80 <flatcc_json_printer_clear@@Base+0x1c4c>
   3c4b8:	sxth	r0, r0
   3c4bc:	mov	sp, fp
   3c4c0:	pop	{fp, pc}

0003c4c4 <flatcc_json_printer_int32_field@@Base>:
   3c4c4:	push	{fp, lr}
   3c4c8:	mov	fp, sp
   3c4cc:	sub	sp, sp, #32
   3c4d0:	ldr	ip, [fp, #12]
   3c4d4:	ldr	lr, [fp, #8]
   3c4d8:	str	r0, [fp, #-4]
   3c4dc:	str	r1, [fp, #-8]
   3c4e0:	str	r2, [fp, #-12]
   3c4e4:	str	r3, [sp, #16]
   3c4e8:	ldr	r0, [fp, #-8]
   3c4ec:	ldr	r1, [fp, #-12]
   3c4f0:	str	lr, [sp, #4]
   3c4f4:	str	ip, [sp]
   3c4f8:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3c4fc:	str	r0, [sp, #8]
   3c500:	ldr	r0, [sp, #8]
   3c504:	movw	r1, #0
   3c508:	cmp	r0, r1
   3c50c:	beq	3c544 <flatcc_json_printer_int32_field@@Base+0x80>
   3c510:	ldr	r0, [sp, #8]
   3c514:	bl	3c5c8 <flatcc_json_printer_int32_field@@Base+0x104>
   3c518:	str	r0, [sp, #12]
   3c51c:	ldr	r0, [sp, #12]
   3c520:	ldr	lr, [fp, #12]
   3c524:	cmp	r0, lr
   3c528:	bne	3c540 <flatcc_json_printer_int32_field@@Base+0x7c>
   3c52c:	ldr	r0, [fp, #-4]
   3c530:	ldrb	r0, [r0, #28]
   3c534:	cmp	r0, #0
   3c538:	beq	3c540 <flatcc_json_printer_int32_field@@Base+0x7c>
   3c53c:	b	3c5c0 <flatcc_json_printer_int32_field@@Base+0xfc>
   3c540:	b	3c560 <flatcc_json_printer_int32_field@@Base+0x9c>
   3c544:	ldr	r0, [fp, #-4]
   3c548:	ldrsb	r0, [r0, #29]
   3c54c:	cmp	r0, #0
   3c550:	bne	3c558 <flatcc_json_printer_int32_field@@Base+0x94>
   3c554:	b	3c5c0 <flatcc_json_printer_int32_field@@Base+0xfc>
   3c558:	ldr	r0, [fp, #12]
   3c55c:	str	r0, [sp, #12]
   3c560:	ldr	r0, [fp, #-8]
   3c564:	ldr	r1, [r0, #16]
   3c568:	add	r2, r1, #1
   3c56c:	str	r2, [r0, #16]
   3c570:	cmp	r1, #0
   3c574:	beq	3c590 <flatcc_json_printer_int32_field@@Base+0xcc>
   3c578:	ldr	r0, [fp, #-4]
   3c57c:	ldr	r1, [r0, #20]
   3c580:	add	r2, r1, #1
   3c584:	str	r2, [r0, #20]
   3c588:	movw	r0, #44	; 0x2c
   3c58c:	strb	r0, [r1]
   3c590:	ldr	r0, [fp, #-4]
   3c594:	ldr	r1, [sp, #16]
   3c598:	ldr	r2, [fp, #8]
   3c59c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3c5a0:	ldr	r0, [sp, #12]
   3c5a4:	ldr	r1, [fp, #-4]
   3c5a8:	ldr	r1, [r1, #20]
   3c5ac:	bl	3b408 <flatcc_json_printer_int32@@Base+0x3c>
   3c5b0:	ldr	r1, [fp, #-4]
   3c5b4:	ldr	r2, [r1, #20]
   3c5b8:	add	r0, r2, r0
   3c5bc:	str	r0, [r1, #20]
   3c5c0:	mov	sp, fp
   3c5c4:	pop	{fp, pc}
   3c5c8:	push	{fp, lr}
   3c5cc:	mov	fp, sp
   3c5d0:	sub	sp, sp, #8
   3c5d4:	str	r0, [sp, #4]
   3c5d8:	ldr	r0, [sp, #4]
   3c5dc:	ldr	r0, [r0]
   3c5e0:	bl	45f94 <flatcc_json_printer_clear@@Base+0x1c60>
   3c5e4:	mov	sp, fp
   3c5e8:	pop	{fp, pc}

0003c5ec <flatcc_json_printer_int64_field@@Base>:
   3c5ec:	push	{r4, sl, fp, lr}
   3c5f0:	add	fp, sp, #8
   3c5f4:	sub	sp, sp, #40	; 0x28
   3c5f8:	ldr	ip, [fp, #20]
   3c5fc:	ldr	lr, [fp, #16]
   3c600:	ldr	r4, [fp, #8]
   3c604:	str	r0, [fp, #-12]
   3c608:	str	r1, [fp, #-16]
   3c60c:	str	r2, [fp, #-20]	; 0xffffffec
   3c610:	str	r3, [sp, #24]
   3c614:	str	ip, [sp, #20]
   3c618:	str	lr, [sp, #16]
   3c61c:	ldr	r0, [fp, #-16]
   3c620:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c624:	str	r4, [sp]
   3c628:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3c62c:	str	r0, [sp, #4]
   3c630:	ldr	r0, [sp, #4]
   3c634:	movw	r1, #0
   3c638:	cmp	r0, r1
   3c63c:	beq	3c690 <flatcc_json_printer_int64_field@@Base+0xa4>
   3c640:	ldr	r0, [sp, #4]
   3c644:	bl	3c720 <flatcc_json_printer_int64_field@@Base+0x134>
   3c648:	str	r1, [sp, #12]
   3c64c:	str	r0, [sp, #8]
   3c650:	ldr	r0, [sp, #8]
   3c654:	ldr	r1, [sp, #12]
   3c658:	ldr	lr, [sp, #16]
   3c65c:	ldr	r2, [sp, #20]
   3c660:	eor	r1, r1, r2
   3c664:	eor	r0, r0, lr
   3c668:	orr	r0, r0, r1
   3c66c:	cmp	r0, #0
   3c670:	bne	3c68c <flatcc_json_printer_int64_field@@Base+0xa0>
   3c674:	b	3c678 <flatcc_json_printer_int64_field@@Base+0x8c>
   3c678:	ldr	r0, [fp, #-12]
   3c67c:	ldrb	r0, [r0, #28]
   3c680:	cmp	r0, #0
   3c684:	beq	3c68c <flatcc_json_printer_int64_field@@Base+0xa0>
   3c688:	b	3c718 <flatcc_json_printer_int64_field@@Base+0x12c>
   3c68c:	b	3c6b4 <flatcc_json_printer_int64_field@@Base+0xc8>
   3c690:	ldr	r0, [fp, #-12]
   3c694:	ldrsb	r0, [r0, #29]
   3c698:	cmp	r0, #0
   3c69c:	bne	3c6a4 <flatcc_json_printer_int64_field@@Base+0xb8>
   3c6a0:	b	3c718 <flatcc_json_printer_int64_field@@Base+0x12c>
   3c6a4:	ldr	r0, [sp, #16]
   3c6a8:	ldr	r1, [sp, #20]
   3c6ac:	str	r1, [sp, #12]
   3c6b0:	str	r0, [sp, #8]
   3c6b4:	ldr	r0, [fp, #-16]
   3c6b8:	ldr	r1, [r0, #16]
   3c6bc:	add	r2, r1, #1
   3c6c0:	str	r2, [r0, #16]
   3c6c4:	cmp	r1, #0
   3c6c8:	beq	3c6e4 <flatcc_json_printer_int64_field@@Base+0xf8>
   3c6cc:	ldr	r0, [fp, #-12]
   3c6d0:	ldr	r1, [r0, #20]
   3c6d4:	add	r2, r1, #1
   3c6d8:	str	r2, [r0, #20]
   3c6dc:	movw	r0, #44	; 0x2c
   3c6e0:	strb	r0, [r1]
   3c6e4:	ldr	r0, [fp, #-12]
   3c6e8:	ldr	r1, [sp, #24]
   3c6ec:	ldr	r2, [fp, #8]
   3c6f0:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3c6f4:	ldr	r0, [sp, #8]
   3c6f8:	ldr	r1, [sp, #12]
   3c6fc:	ldr	r2, [fp, #-12]
   3c700:	ldr	r2, [r2, #20]
   3c704:	bl	3b4c0 <flatcc_json_printer_int64@@Base+0x44>
   3c708:	ldr	r1, [fp, #-12]
   3c70c:	ldr	r2, [r1, #20]
   3c710:	add	r0, r2, r0
   3c714:	str	r0, [r1, #20]
   3c718:	sub	sp, fp, #8
   3c71c:	pop	{r4, sl, fp, pc}
   3c720:	push	{fp, lr}
   3c724:	mov	fp, sp
   3c728:	sub	sp, sp, #8
   3c72c:	str	r0, [sp, #4]
   3c730:	ldr	r0, [sp, #4]
   3c734:	ldr	r1, [r0]
   3c738:	ldr	r0, [r0, #4]
   3c73c:	str	r0, [sp]
   3c740:	mov	r0, r1
   3c744:	ldr	r1, [sp]
   3c748:	bl	45fa8 <flatcc_json_printer_clear@@Base+0x1c74>
   3c74c:	mov	sp, fp
   3c750:	pop	{fp, pc}

0003c754 <flatcc_json_printer_bool_field@@Base>:
   3c754:	push	{fp, lr}
   3c758:	mov	fp, sp
   3c75c:	sub	sp, sp, #32
   3c760:	ldr	ip, [fp, #12]
   3c764:	ldr	lr, [fp, #8]
   3c768:	str	r0, [fp, #-4]
   3c76c:	str	r1, [fp, #-8]
   3c770:	str	r2, [fp, #-12]
   3c774:	str	r3, [sp, #16]
   3c778:	strb	ip, [sp, #15]
   3c77c:	ldr	r0, [fp, #-8]
   3c780:	ldr	r1, [fp, #-12]
   3c784:	str	lr, [sp, #4]
   3c788:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3c78c:	str	r0, [sp, #8]
   3c790:	ldr	r0, [sp, #8]
   3c794:	movw	r1, #0
   3c798:	cmp	r0, r1
   3c79c:	beq	3c7d4 <flatcc_json_printer_bool_field@@Base+0x80>
   3c7a0:	ldr	r0, [sp, #8]
   3c7a4:	bl	3c858 <flatcc_json_printer_bool_field@@Base+0x104>
   3c7a8:	strb	r0, [sp, #14]
   3c7ac:	ldrb	r0, [sp, #14]
   3c7b0:	ldrb	lr, [sp, #15]
   3c7b4:	cmp	r0, lr
   3c7b8:	bne	3c7d0 <flatcc_json_printer_bool_field@@Base+0x7c>
   3c7bc:	ldr	r0, [fp, #-4]
   3c7c0:	ldrb	r0, [r0, #28]
   3c7c4:	cmp	r0, #0
   3c7c8:	beq	3c7d0 <flatcc_json_printer_bool_field@@Base+0x7c>
   3c7cc:	b	3c850 <flatcc_json_printer_bool_field@@Base+0xfc>
   3c7d0:	b	3c7f0 <flatcc_json_printer_bool_field@@Base+0x9c>
   3c7d4:	ldr	r0, [fp, #-4]
   3c7d8:	ldrsb	r0, [r0, #29]
   3c7dc:	cmp	r0, #0
   3c7e0:	bne	3c7e8 <flatcc_json_printer_bool_field@@Base+0x94>
   3c7e4:	b	3c850 <flatcc_json_printer_bool_field@@Base+0xfc>
   3c7e8:	ldrb	r0, [sp, #15]
   3c7ec:	strb	r0, [sp, #14]
   3c7f0:	ldr	r0, [fp, #-8]
   3c7f4:	ldr	r1, [r0, #16]
   3c7f8:	add	r2, r1, #1
   3c7fc:	str	r2, [r0, #16]
   3c800:	cmp	r1, #0
   3c804:	beq	3c820 <flatcc_json_printer_bool_field@@Base+0xcc>
   3c808:	ldr	r0, [fp, #-4]
   3c80c:	ldr	r1, [r0, #20]
   3c810:	add	r2, r1, #1
   3c814:	str	r2, [r0, #20]
   3c818:	movw	r0, #44	; 0x2c
   3c81c:	strb	r0, [r1]
   3c820:	ldr	r0, [fp, #-4]
   3c824:	ldr	r1, [sp, #16]
   3c828:	ldr	r2, [fp, #8]
   3c82c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3c830:	ldrb	r0, [sp, #14]
   3c834:	ldr	r1, [fp, #-4]
   3c838:	ldr	r1, [r1, #20]
   3c83c:	bl	3c880 <flatcc_json_printer_bool_field@@Base+0x12c>
   3c840:	ldr	r1, [fp, #-4]
   3c844:	ldr	r2, [r1, #20]
   3c848:	add	r0, r2, r0
   3c84c:	str	r0, [r1, #20]
   3c850:	mov	sp, fp
   3c854:	pop	{fp, pc}
   3c858:	push	{fp, lr}
   3c85c:	mov	fp, sp
   3c860:	sub	sp, sp, #8
   3c864:	str	r0, [sp, #4]
   3c868:	ldr	r0, [sp, #4]
   3c86c:	ldrb	r0, [r0]
   3c870:	bl	45fc4 <flatcc_json_printer_clear@@Base+0x1c90>
   3c874:	and	r0, r0, #255	; 0xff
   3c878:	mov	sp, fp
   3c87c:	pop	{fp, pc}
   3c880:	sub	sp, sp, #12
   3c884:	str	r0, [sp, #4]
   3c888:	str	r1, [sp]
   3c88c:	ldr	r0, [sp, #4]
   3c890:	cmp	r0, #0
   3c894:	beq	3c8d8 <flatcc_json_printer_bool_field@@Base+0x184>
   3c898:	ldr	r0, [pc, #140]	; 3c92c <flatcc_json_printer_bool_field@@Base+0x1d8>
   3c89c:	add	r0, pc, r0
   3c8a0:	ldr	r1, [sp]
   3c8a4:	ldrb	r2, [r0]
   3c8a8:	strb	r2, [r1]
   3c8ac:	ldrb	r2, [r0, #1]
   3c8b0:	strb	r2, [r1, #1]
   3c8b4:	ldrb	r2, [r0, #2]
   3c8b8:	strb	r2, [r1, #2]
   3c8bc:	ldrb	r2, [r0, #3]
   3c8c0:	strb	r2, [r1, #3]
   3c8c4:	ldrb	r0, [r0, #4]
   3c8c8:	strb	r0, [r1, #4]
   3c8cc:	movw	r0, #4
   3c8d0:	str	r0, [sp, #8]
   3c8d4:	b	3c91c <flatcc_json_printer_bool_field@@Base+0x1c8>
   3c8d8:	ldr	r0, [pc, #72]	; 3c928 <flatcc_json_printer_bool_field@@Base+0x1d4>
   3c8dc:	add	r0, pc, r0
   3c8e0:	ldr	r1, [sp]
   3c8e4:	ldrb	r2, [r0]
   3c8e8:	strb	r2, [r1]
   3c8ec:	ldrb	r2, [r0, #1]
   3c8f0:	strb	r2, [r1, #1]
   3c8f4:	ldrb	r2, [r0, #2]
   3c8f8:	strb	r2, [r1, #2]
   3c8fc:	ldrb	r2, [r0, #3]
   3c900:	strb	r2, [r1, #3]
   3c904:	ldrb	r2, [r0, #4]
   3c908:	strb	r2, [r1, #4]
   3c90c:	ldrb	r0, [r0, #5]
   3c910:	strb	r0, [r1, #5]
   3c914:	movw	r0, #5
   3c918:	str	r0, [sp, #8]
   3c91c:	ldr	r0, [sp, #8]
   3c920:	add	sp, sp, #12
   3c924:	bx	lr
   3c928:	andeq	r0, r1, pc, lsl r3
   3c92c:	andeq	r0, r1, r9, asr r3

0003c930 <flatcc_json_printer_float_field@@Base>:
   3c930:	push	{fp, lr}
   3c934:	mov	fp, sp
   3c938:	sub	sp, sp, #32
   3c93c:	ldr	ip, [fp, #8]
   3c940:	str	r0, [fp, #-4]
   3c944:	str	r1, [fp, #-8]
   3c948:	str	r2, [fp, #-12]
   3c94c:	str	r3, [sp, #16]
   3c950:	vstr	s0, [sp, #12]
   3c954:	ldr	r0, [fp, #-8]
   3c958:	ldr	r1, [fp, #-12]
   3c95c:	str	ip, [sp]
   3c960:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3c964:	str	r0, [sp, #4]
   3c968:	ldr	r0, [sp, #4]
   3c96c:	movw	r1, #0
   3c970:	cmp	r0, r1
   3c974:	beq	3c9b0 <flatcc_json_printer_float_field@@Base+0x80>
   3c978:	ldr	r0, [sp, #4]
   3c97c:	bl	3ca38 <flatcc_json_printer_float_field@@Base+0x108>
   3c980:	vstr	s0, [sp, #8]
   3c984:	vldr	s0, [sp, #8]
   3c988:	vldr	s2, [sp, #12]
   3c98c:	vcmp.f32	s0, s2
   3c990:	vmrs	APSR_nzcv, fpscr
   3c994:	bne	3c9ac <flatcc_json_printer_float_field@@Base+0x7c>
   3c998:	ldr	r0, [fp, #-4]
   3c99c:	ldrb	r0, [r0, #28]
   3c9a0:	cmp	r0, #0
   3c9a4:	beq	3c9ac <flatcc_json_printer_float_field@@Base+0x7c>
   3c9a8:	b	3ca30 <flatcc_json_printer_float_field@@Base+0x100>
   3c9ac:	b	3c9cc <flatcc_json_printer_float_field@@Base+0x9c>
   3c9b0:	ldr	r0, [fp, #-4]
   3c9b4:	ldrsb	r0, [r0, #29]
   3c9b8:	cmp	r0, #0
   3c9bc:	bne	3c9c4 <flatcc_json_printer_float_field@@Base+0x94>
   3c9c0:	b	3ca30 <flatcc_json_printer_float_field@@Base+0x100>
   3c9c4:	vldr	s0, [sp, #12]
   3c9c8:	vstr	s0, [sp, #8]
   3c9cc:	ldr	r0, [fp, #-8]
   3c9d0:	ldr	r1, [r0, #16]
   3c9d4:	add	r2, r1, #1
   3c9d8:	str	r2, [r0, #16]
   3c9dc:	cmp	r1, #0
   3c9e0:	beq	3c9fc <flatcc_json_printer_float_field@@Base+0xcc>
   3c9e4:	ldr	r0, [fp, #-4]
   3c9e8:	ldr	r1, [r0, #20]
   3c9ec:	add	r2, r1, #1
   3c9f0:	str	r2, [r0, #20]
   3c9f4:	movw	r0, #44	; 0x2c
   3c9f8:	strb	r0, [r1]
   3c9fc:	ldr	r0, [fp, #-4]
   3ca00:	ldr	r1, [sp, #16]
   3ca04:	ldr	r2, [fp, #8]
   3ca08:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3ca0c:	vldr	s0, [sp, #8]
   3ca10:	vcvt.f64.f32	d0, s0
   3ca14:	ldr	r0, [fp, #-4]
   3ca18:	ldr	r0, [r0, #20]
   3ca1c:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3ca20:	ldr	r1, [fp, #-4]
   3ca24:	ldr	r2, [r1, #20]
   3ca28:	add	r0, r2, r0
   3ca2c:	str	r0, [r1, #20]
   3ca30:	mov	sp, fp
   3ca34:	pop	{fp, pc}
   3ca38:	push	{fp, lr}
   3ca3c:	mov	fp, sp
   3ca40:	sub	sp, sp, #8
   3ca44:	str	r0, [sp, #4]
   3ca48:	ldr	r0, [sp, #4]
   3ca4c:	vldr	s0, [r0]
   3ca50:	bl	45fd8 <flatcc_json_printer_clear@@Base+0x1ca4>
   3ca54:	mov	sp, fp
   3ca58:	pop	{fp, pc}

0003ca5c <flatcc_json_printer_double_field@@Base>:
   3ca5c:	push	{fp, lr}
   3ca60:	mov	fp, sp
   3ca64:	sub	sp, sp, #40	; 0x28
   3ca68:	ldr	ip, [fp, #8]
   3ca6c:	str	r0, [fp, #-4]
   3ca70:	str	r1, [fp, #-8]
   3ca74:	str	r2, [fp, #-12]
   3ca78:	str	r3, [fp, #-16]
   3ca7c:	vstr	d0, [sp, #16]
   3ca80:	ldr	r0, [fp, #-8]
   3ca84:	ldr	r1, [fp, #-12]
   3ca88:	str	ip, [sp]
   3ca8c:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3ca90:	str	r0, [sp, #4]
   3ca94:	ldr	r0, [sp, #4]
   3ca98:	movw	r1, #0
   3ca9c:	cmp	r0, r1
   3caa0:	beq	3cadc <flatcc_json_printer_double_field@@Base+0x80>
   3caa4:	ldr	r0, [sp, #4]
   3caa8:	bl	3cb60 <flatcc_json_printer_double_field@@Base+0x104>
   3caac:	vstr	d0, [sp, #8]
   3cab0:	vldr	d0, [sp, #8]
   3cab4:	vldr	d16, [sp, #16]
   3cab8:	vcmp.f64	d0, d16
   3cabc:	vmrs	APSR_nzcv, fpscr
   3cac0:	bne	3cad8 <flatcc_json_printer_double_field@@Base+0x7c>
   3cac4:	ldr	r0, [fp, #-4]
   3cac8:	ldrb	r0, [r0, #28]
   3cacc:	cmp	r0, #0
   3cad0:	beq	3cad8 <flatcc_json_printer_double_field@@Base+0x7c>
   3cad4:	b	3cb58 <flatcc_json_printer_double_field@@Base+0xfc>
   3cad8:	b	3caf8 <flatcc_json_printer_double_field@@Base+0x9c>
   3cadc:	ldr	r0, [fp, #-4]
   3cae0:	ldrsb	r0, [r0, #29]
   3cae4:	cmp	r0, #0
   3cae8:	bne	3caf0 <flatcc_json_printer_double_field@@Base+0x94>
   3caec:	b	3cb58 <flatcc_json_printer_double_field@@Base+0xfc>
   3caf0:	vldr	d16, [sp, #16]
   3caf4:	vstr	d16, [sp, #8]
   3caf8:	ldr	r0, [fp, #-8]
   3cafc:	ldr	r1, [r0, #16]
   3cb00:	add	r2, r1, #1
   3cb04:	str	r2, [r0, #16]
   3cb08:	cmp	r1, #0
   3cb0c:	beq	3cb28 <flatcc_json_printer_double_field@@Base+0xcc>
   3cb10:	ldr	r0, [fp, #-4]
   3cb14:	ldr	r1, [r0, #20]
   3cb18:	add	r2, r1, #1
   3cb1c:	str	r2, [r0, #20]
   3cb20:	movw	r0, #44	; 0x2c
   3cb24:	strb	r0, [r1]
   3cb28:	ldr	r0, [fp, #-4]
   3cb2c:	ldr	r1, [fp, #-16]
   3cb30:	ldr	r2, [fp, #8]
   3cb34:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3cb38:	vldr	d0, [sp, #8]
   3cb3c:	ldr	r0, [fp, #-4]
   3cb40:	ldr	r0, [r0, #20]
   3cb44:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3cb48:	ldr	r1, [fp, #-4]
   3cb4c:	ldr	r2, [r1, #20]
   3cb50:	add	r0, r2, r0
   3cb54:	str	r0, [r1, #20]
   3cb58:	mov	sp, fp
   3cb5c:	pop	{fp, pc}
   3cb60:	push	{fp, lr}
   3cb64:	mov	fp, sp
   3cb68:	sub	sp, sp, #8
   3cb6c:	str	r0, [sp, #4]
   3cb70:	ldr	r0, [sp, #4]
   3cb74:	vldr	d0, [r0]
   3cb78:	bl	45ffc <flatcc_json_printer_clear@@Base+0x1cc8>
   3cb7c:	mov	sp, fp
   3cb80:	pop	{fp, pc}

0003cb84 <flatcc_json_printer_uint8_enum_field@@Base>:
   3cb84:	push	{r4, sl, fp, lr}
   3cb88:	add	fp, sp, #8
   3cb8c:	sub	sp, sp, #40	; 0x28
   3cb90:	ldr	ip, [fp, #16]
   3cb94:	ldr	lr, [fp, #12]
   3cb98:	ldr	r4, [fp, #8]
   3cb9c:	str	r0, [fp, #-12]
   3cba0:	str	r1, [fp, #-16]
   3cba4:	str	r2, [fp, #-20]	; 0xffffffec
   3cba8:	str	r3, [sp, #24]
   3cbac:	strb	lr, [sp, #23]
   3cbb0:	ldr	r0, [fp, #-16]
   3cbb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cbb8:	str	r4, [sp, #12]
   3cbbc:	str	ip, [sp, #8]
   3cbc0:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3cbc4:	str	r0, [sp, #16]
   3cbc8:	ldr	r0, [sp, #16]
   3cbcc:	movw	r1, #0
   3cbd0:	cmp	r0, r1
   3cbd4:	beq	3cc0c <flatcc_json_printer_uint8_enum_field@@Base+0x88>
   3cbd8:	ldr	r0, [sp, #16]
   3cbdc:	bl	3be7c <flatcc_json_printer_uint8_field@@Base+0x108>
   3cbe0:	strb	r0, [sp, #22]
   3cbe4:	ldrb	r0, [sp, #22]
   3cbe8:	ldrb	lr, [sp, #23]
   3cbec:	cmp	r0, lr
   3cbf0:	bne	3cc08 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   3cbf4:	ldr	r0, [fp, #-12]
   3cbf8:	ldrb	r0, [r0, #28]
   3cbfc:	cmp	r0, #0
   3cc00:	beq	3cc08 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   3cc04:	b	3ccbc <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   3cc08:	b	3cc28 <flatcc_json_printer_uint8_enum_field@@Base+0xa4>
   3cc0c:	ldr	r0, [fp, #-12]
   3cc10:	ldrsb	r0, [r0, #29]
   3cc14:	cmp	r0, #0
   3cc18:	bne	3cc20 <flatcc_json_printer_uint8_enum_field@@Base+0x9c>
   3cc1c:	b	3ccbc <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   3cc20:	ldrb	r0, [sp, #23]
   3cc24:	strb	r0, [sp, #22]
   3cc28:	ldr	r0, [fp, #-16]
   3cc2c:	ldr	r1, [r0, #16]
   3cc30:	add	r2, r1, #1
   3cc34:	str	r2, [r0, #16]
   3cc38:	cmp	r1, #0
   3cc3c:	beq	3cc58 <flatcc_json_printer_uint8_enum_field@@Base+0xd4>
   3cc40:	ldr	r0, [fp, #-12]
   3cc44:	ldr	r1, [r0, #20]
   3cc48:	add	r2, r1, #1
   3cc4c:	str	r2, [r0, #20]
   3cc50:	movw	r0, #44	; 0x2c
   3cc54:	strb	r0, [r1]
   3cc58:	ldr	r0, [fp, #-12]
   3cc5c:	ldr	r1, [sp, #24]
   3cc60:	ldr	r2, [fp, #8]
   3cc64:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3cc68:	ldr	r0, [fp, #-12]
   3cc6c:	ldrsb	r0, [r0, #27]
   3cc70:	cmp	r0, #0
   3cc74:	beq	3cca0 <flatcc_json_printer_uint8_enum_field@@Base+0x11c>
   3cc78:	ldrb	r0, [sp, #22]
   3cc7c:	ldr	r1, [fp, #-12]
   3cc80:	ldr	r1, [r1, #20]
   3cc84:	and	r0, r0, #255	; 0xff
   3cc88:	bl	39b00 <flatcc_json_printer_uint8@@Base+0x40>
   3cc8c:	ldr	r1, [fp, #-12]
   3cc90:	ldr	lr, [r1, #20]
   3cc94:	add	r0, lr, r0
   3cc98:	str	r0, [r1, #20]
   3cc9c:	b	3ccbc <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   3cca0:	ldr	r0, [fp, #16]
   3cca4:	ldr	r1, [fp, #-12]
   3cca8:	str	r0, [sp, #4]
   3ccac:	mov	r0, r1
   3ccb0:	ldrb	r1, [sp, #22]
   3ccb4:	ldr	r2, [sp, #4]
   3ccb8:	blx	r2
   3ccbc:	sub	sp, fp, #8
   3ccc0:	pop	{r4, sl, fp, pc}

0003ccc4 <flatcc_json_printer_uint16_enum_field@@Base>:
   3ccc4:	push	{r4, sl, fp, lr}
   3ccc8:	add	fp, sp, #8
   3cccc:	sub	sp, sp, #40	; 0x28
   3ccd0:	ldr	ip, [fp, #16]
   3ccd4:	ldr	lr, [fp, #12]
   3ccd8:	ldr	r4, [fp, #8]
   3ccdc:	str	r0, [fp, #-12]
   3cce0:	str	r1, [fp, #-16]
   3cce4:	str	r2, [fp, #-20]	; 0xffffffec
   3cce8:	str	r3, [sp, #24]
   3ccec:	strh	lr, [sp, #22]
   3ccf0:	ldr	r0, [fp, #-16]
   3ccf4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ccf8:	str	r4, [sp, #12]
   3ccfc:	str	ip, [sp, #8]
   3cd00:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3cd04:	str	r0, [sp, #16]
   3cd08:	ldr	r0, [sp, #16]
   3cd0c:	movw	r1, #0
   3cd10:	cmp	r0, r1
   3cd14:	beq	3cd4c <flatcc_json_printer_uint16_enum_field@@Base+0x88>
   3cd18:	ldr	r0, [sp, #16]
   3cd1c:	bl	3bfac <flatcc_json_printer_uint16_field@@Base+0x108>
   3cd20:	strh	r0, [sp, #20]
   3cd24:	ldrh	r0, [sp, #20]
   3cd28:	ldrh	lr, [sp, #22]
   3cd2c:	cmp	r0, lr
   3cd30:	bne	3cd48 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   3cd34:	ldr	r0, [fp, #-12]
   3cd38:	ldrb	r0, [r0, #28]
   3cd3c:	cmp	r0, #0
   3cd40:	beq	3cd48 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   3cd44:	b	3cdfc <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   3cd48:	b	3cd68 <flatcc_json_printer_uint16_enum_field@@Base+0xa4>
   3cd4c:	ldr	r0, [fp, #-12]
   3cd50:	ldrsb	r0, [r0, #29]
   3cd54:	cmp	r0, #0
   3cd58:	bne	3cd60 <flatcc_json_printer_uint16_enum_field@@Base+0x9c>
   3cd5c:	b	3cdfc <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   3cd60:	ldrh	r0, [sp, #22]
   3cd64:	strh	r0, [sp, #20]
   3cd68:	ldr	r0, [fp, #-16]
   3cd6c:	ldr	r1, [r0, #16]
   3cd70:	add	r2, r1, #1
   3cd74:	str	r2, [r0, #16]
   3cd78:	cmp	r1, #0
   3cd7c:	beq	3cd98 <flatcc_json_printer_uint16_enum_field@@Base+0xd4>
   3cd80:	ldr	r0, [fp, #-12]
   3cd84:	ldr	r1, [r0, #20]
   3cd88:	add	r2, r1, #1
   3cd8c:	str	r2, [r0, #20]
   3cd90:	movw	r0, #44	; 0x2c
   3cd94:	strb	r0, [r1]
   3cd98:	ldr	r0, [fp, #-12]
   3cd9c:	ldr	r1, [sp, #24]
   3cda0:	ldr	r2, [fp, #8]
   3cda4:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3cda8:	ldr	r0, [fp, #-12]
   3cdac:	ldrsb	r0, [r0, #27]
   3cdb0:	cmp	r0, #0
   3cdb4:	beq	3cde0 <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
   3cdb8:	ldrh	r0, [sp, #20]
   3cdbc:	ldr	r1, [fp, #-12]
   3cdc0:	ldr	r1, [r1, #20]
   3cdc4:	uxth	r0, r0
   3cdc8:	bl	39cdc <flatcc_json_printer_uint16@@Base+0x40>
   3cdcc:	ldr	r1, [fp, #-12]
   3cdd0:	ldr	lr, [r1, #20]
   3cdd4:	add	r0, lr, r0
   3cdd8:	str	r0, [r1, #20]
   3cddc:	b	3cdfc <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   3cde0:	ldr	r0, [fp, #16]
   3cde4:	ldr	r1, [fp, #-12]
   3cde8:	str	r0, [sp, #4]
   3cdec:	mov	r0, r1
   3cdf0:	ldrh	r1, [sp, #20]
   3cdf4:	ldr	r2, [sp, #4]
   3cdf8:	blx	r2
   3cdfc:	sub	sp, fp, #8
   3ce00:	pop	{r4, sl, fp, pc}

0003ce04 <flatcc_json_printer_uint32_enum_field@@Base>:
   3ce04:	push	{r4, sl, fp, lr}
   3ce08:	add	fp, sp, #8
   3ce0c:	sub	sp, sp, #40	; 0x28
   3ce10:	ldr	ip, [fp, #16]
   3ce14:	ldr	lr, [fp, #12]
   3ce18:	ldr	r4, [fp, #8]
   3ce1c:	str	r0, [fp, #-12]
   3ce20:	str	r1, [fp, #-16]
   3ce24:	str	r2, [fp, #-20]	; 0xffffffec
   3ce28:	str	r3, [sp, #24]
   3ce2c:	ldr	r0, [fp, #-16]
   3ce30:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ce34:	str	r4, [sp, #12]
   3ce38:	str	lr, [sp, #8]
   3ce3c:	str	ip, [sp, #4]
   3ce40:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3ce44:	str	r0, [sp, #16]
   3ce48:	ldr	r0, [sp, #16]
   3ce4c:	movw	r1, #0
   3ce50:	cmp	r0, r1
   3ce54:	beq	3ce8c <flatcc_json_printer_uint32_enum_field@@Base+0x88>
   3ce58:	ldr	r0, [sp, #16]
   3ce5c:	bl	3c0d8 <flatcc_json_printer_uint32_field@@Base+0x104>
   3ce60:	str	r0, [sp, #20]
   3ce64:	ldr	r0, [sp, #20]
   3ce68:	ldr	lr, [fp, #12]
   3ce6c:	cmp	r0, lr
   3ce70:	bne	3ce88 <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   3ce74:	ldr	r0, [fp, #-12]
   3ce78:	ldrb	r0, [r0, #28]
   3ce7c:	cmp	r0, #0
   3ce80:	beq	3ce88 <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   3ce84:	b	3cf3c <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   3ce88:	b	3cea8 <flatcc_json_printer_uint32_enum_field@@Base+0xa4>
   3ce8c:	ldr	r0, [fp, #-12]
   3ce90:	ldrsb	r0, [r0, #29]
   3ce94:	cmp	r0, #0
   3ce98:	bne	3cea0 <flatcc_json_printer_uint32_enum_field@@Base+0x9c>
   3ce9c:	b	3cf3c <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   3cea0:	ldr	r0, [fp, #12]
   3cea4:	str	r0, [sp, #20]
   3cea8:	ldr	r0, [fp, #-16]
   3ceac:	ldr	r1, [r0, #16]
   3ceb0:	add	r2, r1, #1
   3ceb4:	str	r2, [r0, #16]
   3ceb8:	cmp	r1, #0
   3cebc:	beq	3ced8 <flatcc_json_printer_uint32_enum_field@@Base+0xd4>
   3cec0:	ldr	r0, [fp, #-12]
   3cec4:	ldr	r1, [r0, #20]
   3cec8:	add	r2, r1, #1
   3cecc:	str	r2, [r0, #20]
   3ced0:	movw	r0, #44	; 0x2c
   3ced4:	strb	r0, [r1]
   3ced8:	ldr	r0, [fp, #-12]
   3cedc:	ldr	r1, [sp, #24]
   3cee0:	ldr	r2, [fp, #8]
   3cee4:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3cee8:	ldr	r0, [fp, #-12]
   3ceec:	ldrsb	r0, [r0, #27]
   3cef0:	cmp	r0, #0
   3cef4:	beq	3cf1c <flatcc_json_printer_uint32_enum_field@@Base+0x118>
   3cef8:	ldr	r0, [sp, #20]
   3cefc:	ldr	r1, [fp, #-12]
   3cf00:	ldr	r1, [r1, #20]
   3cf04:	bl	3a020 <flatcc_json_printer_uint32@@Base+0x3c>
   3cf08:	ldr	r1, [fp, #-12]
   3cf0c:	ldr	lr, [r1, #20]
   3cf10:	add	r0, lr, r0
   3cf14:	str	r0, [r1, #20]
   3cf18:	b	3cf3c <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   3cf1c:	ldr	r0, [fp, #16]
   3cf20:	ldr	r1, [fp, #-12]
   3cf24:	ldr	r2, [sp, #20]
   3cf28:	str	r0, [sp]
   3cf2c:	mov	r0, r1
   3cf30:	mov	r1, r2
   3cf34:	ldr	r2, [sp]
   3cf38:	blx	r2
   3cf3c:	sub	sp, fp, #8
   3cf40:	pop	{r4, sl, fp, pc}

0003cf44 <flatcc_json_printer_uint64_enum_field@@Base>:
   3cf44:	push	{r4, r5, fp, lr}
   3cf48:	add	fp, sp, #8
   3cf4c:	sub	sp, sp, #48	; 0x30
   3cf50:	ldr	ip, [fp, #20]
   3cf54:	ldr	lr, [fp, #16]
   3cf58:	ldr	r4, [fp, #24]
   3cf5c:	ldr	r5, [fp, #8]
   3cf60:	str	r0, [fp, #-12]
   3cf64:	str	r1, [fp, #-16]
   3cf68:	str	r2, [fp, #-20]	; 0xffffffec
   3cf6c:	str	r3, [fp, #-24]	; 0xffffffe8
   3cf70:	str	ip, [sp, #28]
   3cf74:	str	lr, [sp, #24]
   3cf78:	ldr	r0, [fp, #-16]
   3cf7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cf80:	str	r5, [sp, #8]
   3cf84:	str	r4, [sp, #4]
   3cf88:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3cf8c:	str	r0, [sp, #12]
   3cf90:	ldr	r0, [sp, #12]
   3cf94:	movw	r1, #0
   3cf98:	cmp	r0, r1
   3cf9c:	beq	3cff0 <flatcc_json_printer_uint64_enum_field@@Base+0xac>
   3cfa0:	ldr	r0, [sp, #12]
   3cfa4:	bl	3c230 <flatcc_json_printer_uint64_field@@Base+0x134>
   3cfa8:	str	r1, [sp, #20]
   3cfac:	str	r0, [sp, #16]
   3cfb0:	ldr	r0, [sp, #16]
   3cfb4:	ldr	r1, [sp, #20]
   3cfb8:	ldr	lr, [sp, #24]
   3cfbc:	ldr	r2, [sp, #28]
   3cfc0:	eor	r1, r1, r2
   3cfc4:	eor	r0, r0, lr
   3cfc8:	orr	r0, r0, r1
   3cfcc:	cmp	r0, #0
   3cfd0:	bne	3cfec <flatcc_json_printer_uint64_enum_field@@Base+0xa8>
   3cfd4:	b	3cfd8 <flatcc_json_printer_uint64_enum_field@@Base+0x94>
   3cfd8:	ldr	r0, [fp, #-12]
   3cfdc:	ldrb	r0, [r0, #28]
   3cfe0:	cmp	r0, #0
   3cfe4:	beq	3cfec <flatcc_json_printer_uint64_enum_field@@Base+0xa8>
   3cfe8:	b	3d0ac <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   3cfec:	b	3d014 <flatcc_json_printer_uint64_enum_field@@Base+0xd0>
   3cff0:	ldr	r0, [fp, #-12]
   3cff4:	ldrsb	r0, [r0, #29]
   3cff8:	cmp	r0, #0
   3cffc:	bne	3d004 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   3d000:	b	3d0ac <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   3d004:	ldr	r0, [sp, #24]
   3d008:	ldr	r1, [sp, #28]
   3d00c:	str	r1, [sp, #20]
   3d010:	str	r0, [sp, #16]
   3d014:	ldr	r0, [fp, #-16]
   3d018:	ldr	r1, [r0, #16]
   3d01c:	add	r2, r1, #1
   3d020:	str	r2, [r0, #16]
   3d024:	cmp	r1, #0
   3d028:	beq	3d044 <flatcc_json_printer_uint64_enum_field@@Base+0x100>
   3d02c:	ldr	r0, [fp, #-12]
   3d030:	ldr	r1, [r0, #20]
   3d034:	add	r2, r1, #1
   3d038:	str	r2, [r0, #20]
   3d03c:	movw	r0, #44	; 0x2c
   3d040:	strb	r0, [r1]
   3d044:	ldr	r0, [fp, #-12]
   3d048:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d04c:	ldr	r2, [fp, #8]
   3d050:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3d054:	ldr	r0, [fp, #-12]
   3d058:	ldrsb	r0, [r0, #27]
   3d05c:	cmp	r0, #0
   3d060:	beq	3d08c <flatcc_json_printer_uint64_enum_field@@Base+0x148>
   3d064:	ldr	r0, [sp, #16]
   3d068:	ldr	r1, [sp, #20]
   3d06c:	ldr	r2, [fp, #-12]
   3d070:	ldr	r2, [r2, #20]
   3d074:	bl	3a694 <flatcc_json_printer_uint64@@Base+0x44>
   3d078:	ldr	r1, [fp, #-12]
   3d07c:	ldr	r2, [r1, #20]
   3d080:	add	r0, r2, r0
   3d084:	str	r0, [r1, #20]
   3d088:	b	3d0ac <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   3d08c:	ldr	r0, [fp, #24]
   3d090:	ldr	r1, [fp, #-12]
   3d094:	ldr	r2, [sp, #16]
   3d098:	ldr	r3, [sp, #20]
   3d09c:	str	r0, [sp]
   3d0a0:	mov	r0, r1
   3d0a4:	ldr	r1, [sp]
   3d0a8:	blx	r1
   3d0ac:	sub	sp, fp, #8
   3d0b0:	pop	{r4, r5, fp, pc}

0003d0b4 <flatcc_json_printer_int8_enum_field@@Base>:
   3d0b4:	push	{r4, sl, fp, lr}
   3d0b8:	add	fp, sp, #8
   3d0bc:	sub	sp, sp, #40	; 0x28
   3d0c0:	ldr	ip, [fp, #16]
   3d0c4:	ldr	lr, [fp, #12]
   3d0c8:	ldr	r4, [fp, #8]
   3d0cc:	str	r0, [fp, #-12]
   3d0d0:	str	r1, [fp, #-16]
   3d0d4:	str	r2, [fp, #-20]	; 0xffffffec
   3d0d8:	str	r3, [sp, #24]
   3d0dc:	strb	lr, [sp, #23]
   3d0e0:	ldr	r0, [fp, #-16]
   3d0e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d0e8:	str	r4, [sp, #12]
   3d0ec:	str	ip, [sp, #8]
   3d0f0:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3d0f4:	str	r0, [sp, #16]
   3d0f8:	ldr	r0, [sp, #16]
   3d0fc:	movw	r1, #0
   3d100:	cmp	r0, r1
   3d104:	beq	3d13c <flatcc_json_printer_int8_enum_field@@Base+0x88>
   3d108:	ldr	r0, [sp, #16]
   3d10c:	bl	3c36c <flatcc_json_printer_int8_field@@Base+0x108>
   3d110:	strb	r0, [sp, #22]
   3d114:	ldrsb	r0, [sp, #22]
   3d118:	ldrsb	lr, [sp, #23]
   3d11c:	cmp	r0, lr
   3d120:	bne	3d138 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   3d124:	ldr	r0, [fp, #-12]
   3d128:	ldrb	r0, [r0, #28]
   3d12c:	cmp	r0, #0
   3d130:	beq	3d138 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   3d134:	b	3d1ec <flatcc_json_printer_int8_enum_field@@Base+0x138>
   3d138:	b	3d158 <flatcc_json_printer_int8_enum_field@@Base+0xa4>
   3d13c:	ldr	r0, [fp, #-12]
   3d140:	ldrsb	r0, [r0, #29]
   3d144:	cmp	r0, #0
   3d148:	bne	3d150 <flatcc_json_printer_int8_enum_field@@Base+0x9c>
   3d14c:	b	3d1ec <flatcc_json_printer_int8_enum_field@@Base+0x138>
   3d150:	ldrb	r0, [sp, #23]
   3d154:	strb	r0, [sp, #22]
   3d158:	ldr	r0, [fp, #-16]
   3d15c:	ldr	r1, [r0, #16]
   3d160:	add	r2, r1, #1
   3d164:	str	r2, [r0, #16]
   3d168:	cmp	r1, #0
   3d16c:	beq	3d188 <flatcc_json_printer_int8_enum_field@@Base+0xd4>
   3d170:	ldr	r0, [fp, #-12]
   3d174:	ldr	r1, [r0, #20]
   3d178:	add	r2, r1, #1
   3d17c:	str	r2, [r0, #20]
   3d180:	movw	r0, #44	; 0x2c
   3d184:	strb	r0, [r1]
   3d188:	ldr	r0, [fp, #-12]
   3d18c:	ldr	r1, [sp, #24]
   3d190:	ldr	r2, [fp, #8]
   3d194:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3d198:	ldr	r0, [fp, #-12]
   3d19c:	ldrsb	r0, [r0, #27]
   3d1a0:	cmp	r0, #0
   3d1a4:	beq	3d1d0 <flatcc_json_printer_int8_enum_field@@Base+0x11c>
   3d1a8:	ldrb	r0, [sp, #22]
   3d1ac:	ldr	r1, [fp, #-12]
   3d1b0:	ldr	r1, [r1, #20]
   3d1b4:	sxtb	r0, r0
   3d1b8:	bl	3b29c <flatcc_json_printer_int8@@Base+0x40>
   3d1bc:	ldr	r1, [fp, #-12]
   3d1c0:	ldr	lr, [r1, #20]
   3d1c4:	add	r0, lr, r0
   3d1c8:	str	r0, [r1, #20]
   3d1cc:	b	3d1ec <flatcc_json_printer_int8_enum_field@@Base+0x138>
   3d1d0:	ldr	r0, [fp, #16]
   3d1d4:	ldr	r1, [fp, #-12]
   3d1d8:	str	r0, [sp, #4]
   3d1dc:	mov	r0, r1
   3d1e0:	ldrsb	r1, [sp, #22]
   3d1e4:	ldr	r2, [sp, #4]
   3d1e8:	blx	r2
   3d1ec:	sub	sp, fp, #8
   3d1f0:	pop	{r4, sl, fp, pc}

0003d1f4 <flatcc_json_printer_int16_enum_field@@Base>:
   3d1f4:	push	{r4, sl, fp, lr}
   3d1f8:	add	fp, sp, #8
   3d1fc:	sub	sp, sp, #40	; 0x28
   3d200:	ldr	ip, [fp, #16]
   3d204:	ldr	lr, [fp, #12]
   3d208:	ldr	r4, [fp, #8]
   3d20c:	str	r0, [fp, #-12]
   3d210:	str	r1, [fp, #-16]
   3d214:	str	r2, [fp, #-20]	; 0xffffffec
   3d218:	str	r3, [sp, #24]
   3d21c:	strh	lr, [sp, #22]
   3d220:	ldr	r0, [fp, #-16]
   3d224:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d228:	str	r4, [sp, #12]
   3d22c:	str	ip, [sp, #8]
   3d230:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3d234:	str	r0, [sp, #16]
   3d238:	ldr	r0, [sp, #16]
   3d23c:	movw	r1, #0
   3d240:	cmp	r0, r1
   3d244:	beq	3d27c <flatcc_json_printer_int16_enum_field@@Base+0x88>
   3d248:	ldr	r0, [sp, #16]
   3d24c:	bl	3c49c <flatcc_json_printer_int16_field@@Base+0x108>
   3d250:	strh	r0, [sp, #20]
   3d254:	ldrsh	r0, [sp, #20]
   3d258:	ldrsh	lr, [sp, #22]
   3d25c:	cmp	r0, lr
   3d260:	bne	3d278 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   3d264:	ldr	r0, [fp, #-12]
   3d268:	ldrb	r0, [r0, #28]
   3d26c:	cmp	r0, #0
   3d270:	beq	3d278 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   3d274:	b	3d32c <flatcc_json_printer_int16_enum_field@@Base+0x138>
   3d278:	b	3d298 <flatcc_json_printer_int16_enum_field@@Base+0xa4>
   3d27c:	ldr	r0, [fp, #-12]
   3d280:	ldrsb	r0, [r0, #29]
   3d284:	cmp	r0, #0
   3d288:	bne	3d290 <flatcc_json_printer_int16_enum_field@@Base+0x9c>
   3d28c:	b	3d32c <flatcc_json_printer_int16_enum_field@@Base+0x138>
   3d290:	ldrh	r0, [sp, #22]
   3d294:	strh	r0, [sp, #20]
   3d298:	ldr	r0, [fp, #-16]
   3d29c:	ldr	r1, [r0, #16]
   3d2a0:	add	r2, r1, #1
   3d2a4:	str	r2, [r0, #16]
   3d2a8:	cmp	r1, #0
   3d2ac:	beq	3d2c8 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   3d2b0:	ldr	r0, [fp, #-12]
   3d2b4:	ldr	r1, [r0, #20]
   3d2b8:	add	r2, r1, #1
   3d2bc:	str	r2, [r0, #20]
   3d2c0:	movw	r0, #44	; 0x2c
   3d2c4:	strb	r0, [r1]
   3d2c8:	ldr	r0, [fp, #-12]
   3d2cc:	ldr	r1, [sp, #24]
   3d2d0:	ldr	r2, [fp, #8]
   3d2d4:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3d2d8:	ldr	r0, [fp, #-12]
   3d2dc:	ldrsb	r0, [r0, #27]
   3d2e0:	cmp	r0, #0
   3d2e4:	beq	3d310 <flatcc_json_printer_int16_enum_field@@Base+0x11c>
   3d2e8:	ldrh	r0, [sp, #20]
   3d2ec:	ldr	r1, [fp, #-12]
   3d2f0:	ldr	r1, [r1, #20]
   3d2f4:	sxth	r0, r0
   3d2f8:	bl	3b354 <flatcc_json_printer_int16@@Base+0x40>
   3d2fc:	ldr	r1, [fp, #-12]
   3d300:	ldr	lr, [r1, #20]
   3d304:	add	r0, lr, r0
   3d308:	str	r0, [r1, #20]
   3d30c:	b	3d32c <flatcc_json_printer_int16_enum_field@@Base+0x138>
   3d310:	ldr	r0, [fp, #16]
   3d314:	ldr	r1, [fp, #-12]
   3d318:	str	r0, [sp, #4]
   3d31c:	mov	r0, r1
   3d320:	ldrsh	r1, [sp, #20]
   3d324:	ldr	r2, [sp, #4]
   3d328:	blx	r2
   3d32c:	sub	sp, fp, #8
   3d330:	pop	{r4, sl, fp, pc}

0003d334 <flatcc_json_printer_int32_enum_field@@Base>:
   3d334:	push	{r4, sl, fp, lr}
   3d338:	add	fp, sp, #8
   3d33c:	sub	sp, sp, #40	; 0x28
   3d340:	ldr	ip, [fp, #16]
   3d344:	ldr	lr, [fp, #12]
   3d348:	ldr	r4, [fp, #8]
   3d34c:	str	r0, [fp, #-12]
   3d350:	str	r1, [fp, #-16]
   3d354:	str	r2, [fp, #-20]	; 0xffffffec
   3d358:	str	r3, [sp, #24]
   3d35c:	ldr	r0, [fp, #-16]
   3d360:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d364:	str	r4, [sp, #12]
   3d368:	str	lr, [sp, #8]
   3d36c:	str	ip, [sp, #4]
   3d370:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3d374:	str	r0, [sp, #16]
   3d378:	ldr	r0, [sp, #16]
   3d37c:	movw	r1, #0
   3d380:	cmp	r0, r1
   3d384:	beq	3d3bc <flatcc_json_printer_int32_enum_field@@Base+0x88>
   3d388:	ldr	r0, [sp, #16]
   3d38c:	bl	3c5c8 <flatcc_json_printer_int32_field@@Base+0x104>
   3d390:	str	r0, [sp, #20]
   3d394:	ldr	r0, [sp, #20]
   3d398:	ldr	lr, [fp, #12]
   3d39c:	cmp	r0, lr
   3d3a0:	bne	3d3b8 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   3d3a4:	ldr	r0, [fp, #-12]
   3d3a8:	ldrb	r0, [r0, #28]
   3d3ac:	cmp	r0, #0
   3d3b0:	beq	3d3b8 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   3d3b4:	b	3d46c <flatcc_json_printer_int32_enum_field@@Base+0x138>
   3d3b8:	b	3d3d8 <flatcc_json_printer_int32_enum_field@@Base+0xa4>
   3d3bc:	ldr	r0, [fp, #-12]
   3d3c0:	ldrsb	r0, [r0, #29]
   3d3c4:	cmp	r0, #0
   3d3c8:	bne	3d3d0 <flatcc_json_printer_int32_enum_field@@Base+0x9c>
   3d3cc:	b	3d46c <flatcc_json_printer_int32_enum_field@@Base+0x138>
   3d3d0:	ldr	r0, [fp, #12]
   3d3d4:	str	r0, [sp, #20]
   3d3d8:	ldr	r0, [fp, #-16]
   3d3dc:	ldr	r1, [r0, #16]
   3d3e0:	add	r2, r1, #1
   3d3e4:	str	r2, [r0, #16]
   3d3e8:	cmp	r1, #0
   3d3ec:	beq	3d408 <flatcc_json_printer_int32_enum_field@@Base+0xd4>
   3d3f0:	ldr	r0, [fp, #-12]
   3d3f4:	ldr	r1, [r0, #20]
   3d3f8:	add	r2, r1, #1
   3d3fc:	str	r2, [r0, #20]
   3d400:	movw	r0, #44	; 0x2c
   3d404:	strb	r0, [r1]
   3d408:	ldr	r0, [fp, #-12]
   3d40c:	ldr	r1, [sp, #24]
   3d410:	ldr	r2, [fp, #8]
   3d414:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3d418:	ldr	r0, [fp, #-12]
   3d41c:	ldrsb	r0, [r0, #27]
   3d420:	cmp	r0, #0
   3d424:	beq	3d44c <flatcc_json_printer_int32_enum_field@@Base+0x118>
   3d428:	ldr	r0, [sp, #20]
   3d42c:	ldr	r1, [fp, #-12]
   3d430:	ldr	r1, [r1, #20]
   3d434:	bl	3b408 <flatcc_json_printer_int32@@Base+0x3c>
   3d438:	ldr	r1, [fp, #-12]
   3d43c:	ldr	lr, [r1, #20]
   3d440:	add	r0, lr, r0
   3d444:	str	r0, [r1, #20]
   3d448:	b	3d46c <flatcc_json_printer_int32_enum_field@@Base+0x138>
   3d44c:	ldr	r0, [fp, #16]
   3d450:	ldr	r1, [fp, #-12]
   3d454:	ldr	r2, [sp, #20]
   3d458:	str	r0, [sp]
   3d45c:	mov	r0, r1
   3d460:	mov	r1, r2
   3d464:	ldr	r2, [sp]
   3d468:	blx	r2
   3d46c:	sub	sp, fp, #8
   3d470:	pop	{r4, sl, fp, pc}

0003d474 <flatcc_json_printer_int64_enum_field@@Base>:
   3d474:	push	{r4, r5, fp, lr}
   3d478:	add	fp, sp, #8
   3d47c:	sub	sp, sp, #48	; 0x30
   3d480:	ldr	ip, [fp, #20]
   3d484:	ldr	lr, [fp, #16]
   3d488:	ldr	r4, [fp, #24]
   3d48c:	ldr	r5, [fp, #8]
   3d490:	str	r0, [fp, #-12]
   3d494:	str	r1, [fp, #-16]
   3d498:	str	r2, [fp, #-20]	; 0xffffffec
   3d49c:	str	r3, [fp, #-24]	; 0xffffffe8
   3d4a0:	str	ip, [sp, #28]
   3d4a4:	str	lr, [sp, #24]
   3d4a8:	ldr	r0, [fp, #-16]
   3d4ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d4b0:	str	r5, [sp, #8]
   3d4b4:	str	r4, [sp, #4]
   3d4b8:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3d4bc:	str	r0, [sp, #12]
   3d4c0:	ldr	r0, [sp, #12]
   3d4c4:	movw	r1, #0
   3d4c8:	cmp	r0, r1
   3d4cc:	beq	3d520 <flatcc_json_printer_int64_enum_field@@Base+0xac>
   3d4d0:	ldr	r0, [sp, #12]
   3d4d4:	bl	3c720 <flatcc_json_printer_int64_field@@Base+0x134>
   3d4d8:	str	r1, [sp, #20]
   3d4dc:	str	r0, [sp, #16]
   3d4e0:	ldr	r0, [sp, #16]
   3d4e4:	ldr	r1, [sp, #20]
   3d4e8:	ldr	lr, [sp, #24]
   3d4ec:	ldr	r2, [sp, #28]
   3d4f0:	eor	r1, r1, r2
   3d4f4:	eor	r0, r0, lr
   3d4f8:	orr	r0, r0, r1
   3d4fc:	cmp	r0, #0
   3d500:	bne	3d51c <flatcc_json_printer_int64_enum_field@@Base+0xa8>
   3d504:	b	3d508 <flatcc_json_printer_int64_enum_field@@Base+0x94>
   3d508:	ldr	r0, [fp, #-12]
   3d50c:	ldrb	r0, [r0, #28]
   3d510:	cmp	r0, #0
   3d514:	beq	3d51c <flatcc_json_printer_int64_enum_field@@Base+0xa8>
   3d518:	b	3d5dc <flatcc_json_printer_int64_enum_field@@Base+0x168>
   3d51c:	b	3d544 <flatcc_json_printer_int64_enum_field@@Base+0xd0>
   3d520:	ldr	r0, [fp, #-12]
   3d524:	ldrsb	r0, [r0, #29]
   3d528:	cmp	r0, #0
   3d52c:	bne	3d534 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   3d530:	b	3d5dc <flatcc_json_printer_int64_enum_field@@Base+0x168>
   3d534:	ldr	r0, [sp, #24]
   3d538:	ldr	r1, [sp, #28]
   3d53c:	str	r1, [sp, #20]
   3d540:	str	r0, [sp, #16]
   3d544:	ldr	r0, [fp, #-16]
   3d548:	ldr	r1, [r0, #16]
   3d54c:	add	r2, r1, #1
   3d550:	str	r2, [r0, #16]
   3d554:	cmp	r1, #0
   3d558:	beq	3d574 <flatcc_json_printer_int64_enum_field@@Base+0x100>
   3d55c:	ldr	r0, [fp, #-12]
   3d560:	ldr	r1, [r0, #20]
   3d564:	add	r2, r1, #1
   3d568:	str	r2, [r0, #20]
   3d56c:	movw	r0, #44	; 0x2c
   3d570:	strb	r0, [r1]
   3d574:	ldr	r0, [fp, #-12]
   3d578:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d57c:	ldr	r2, [fp, #8]
   3d580:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3d584:	ldr	r0, [fp, #-12]
   3d588:	ldrsb	r0, [r0, #27]
   3d58c:	cmp	r0, #0
   3d590:	beq	3d5bc <flatcc_json_printer_int64_enum_field@@Base+0x148>
   3d594:	ldr	r0, [sp, #16]
   3d598:	ldr	r1, [sp, #20]
   3d59c:	ldr	r2, [fp, #-12]
   3d5a0:	ldr	r2, [r2, #20]
   3d5a4:	bl	3b4c0 <flatcc_json_printer_int64@@Base+0x44>
   3d5a8:	ldr	r1, [fp, #-12]
   3d5ac:	ldr	r2, [r1, #20]
   3d5b0:	add	r0, r2, r0
   3d5b4:	str	r0, [r1, #20]
   3d5b8:	b	3d5dc <flatcc_json_printer_int64_enum_field@@Base+0x168>
   3d5bc:	ldr	r0, [fp, #24]
   3d5c0:	ldr	r1, [fp, #-12]
   3d5c4:	ldr	r2, [sp, #16]
   3d5c8:	ldr	r3, [sp, #20]
   3d5cc:	str	r0, [sp]
   3d5d0:	mov	r0, r1
   3d5d4:	ldr	r1, [sp]
   3d5d8:	blx	r1
   3d5dc:	sub	sp, fp, #8
   3d5e0:	pop	{r4, r5, fp, pc}

0003d5e4 <flatcc_json_printer_bool_enum_field@@Base>:
   3d5e4:	push	{r4, sl, fp, lr}
   3d5e8:	add	fp, sp, #8
   3d5ec:	sub	sp, sp, #40	; 0x28
   3d5f0:	ldr	ip, [fp, #16]
   3d5f4:	ldr	lr, [fp, #12]
   3d5f8:	ldr	r4, [fp, #8]
   3d5fc:	str	r0, [fp, #-12]
   3d600:	str	r1, [fp, #-16]
   3d604:	str	r2, [fp, #-20]	; 0xffffffec
   3d608:	str	r3, [sp, #24]
   3d60c:	strb	lr, [sp, #23]
   3d610:	ldr	r0, [fp, #-16]
   3d614:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d618:	str	r4, [sp, #12]
   3d61c:	str	ip, [sp, #8]
   3d620:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3d624:	str	r0, [sp, #16]
   3d628:	ldr	r0, [sp, #16]
   3d62c:	movw	r1, #0
   3d630:	cmp	r0, r1
   3d634:	beq	3d66c <flatcc_json_printer_bool_enum_field@@Base+0x88>
   3d638:	ldr	r0, [sp, #16]
   3d63c:	bl	3c858 <flatcc_json_printer_bool_field@@Base+0x104>
   3d640:	strb	r0, [sp, #22]
   3d644:	ldrb	r0, [sp, #22]
   3d648:	ldrb	lr, [sp, #23]
   3d64c:	cmp	r0, lr
   3d650:	bne	3d668 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   3d654:	ldr	r0, [fp, #-12]
   3d658:	ldrb	r0, [r0, #28]
   3d65c:	cmp	r0, #0
   3d660:	beq	3d668 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   3d664:	b	3d718 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   3d668:	b	3d688 <flatcc_json_printer_bool_enum_field@@Base+0xa4>
   3d66c:	ldr	r0, [fp, #-12]
   3d670:	ldrsb	r0, [r0, #29]
   3d674:	cmp	r0, #0
   3d678:	bne	3d680 <flatcc_json_printer_bool_enum_field@@Base+0x9c>
   3d67c:	b	3d718 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   3d680:	ldrb	r0, [sp, #23]
   3d684:	strb	r0, [sp, #22]
   3d688:	ldr	r0, [fp, #-16]
   3d68c:	ldr	r1, [r0, #16]
   3d690:	add	r2, r1, #1
   3d694:	str	r2, [r0, #16]
   3d698:	cmp	r1, #0
   3d69c:	beq	3d6b8 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   3d6a0:	ldr	r0, [fp, #-12]
   3d6a4:	ldr	r1, [r0, #20]
   3d6a8:	add	r2, r1, #1
   3d6ac:	str	r2, [r0, #20]
   3d6b0:	movw	r0, #44	; 0x2c
   3d6b4:	strb	r0, [r1]
   3d6b8:	ldr	r0, [fp, #-12]
   3d6bc:	ldr	r1, [sp, #24]
   3d6c0:	ldr	r2, [fp, #8]
   3d6c4:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3d6c8:	ldr	r0, [fp, #-12]
   3d6cc:	ldrsb	r0, [r0, #27]
   3d6d0:	cmp	r0, #0
   3d6d4:	beq	3d6fc <flatcc_json_printer_bool_enum_field@@Base+0x118>
   3d6d8:	ldrb	r0, [sp, #22]
   3d6dc:	ldr	r1, [fp, #-12]
   3d6e0:	ldr	r1, [r1, #20]
   3d6e4:	bl	3c880 <flatcc_json_printer_bool_field@@Base+0x12c>
   3d6e8:	ldr	r1, [fp, #-12]
   3d6ec:	ldr	lr, [r1, #20]
   3d6f0:	add	r0, lr, r0
   3d6f4:	str	r0, [r1, #20]
   3d6f8:	b	3d718 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   3d6fc:	ldr	r0, [fp, #16]
   3d700:	ldr	r1, [fp, #-12]
   3d704:	str	r0, [sp, #4]
   3d708:	mov	r0, r1
   3d70c:	ldrb	r1, [sp, #22]
   3d710:	ldr	r2, [sp, #4]
   3d714:	blx	r2
   3d718:	sub	sp, fp, #8
   3d71c:	pop	{r4, sl, fp, pc}

0003d720 <flatcc_json_printer_uint8_struct_field@@Base>:
   3d720:	push	{fp, lr}
   3d724:	mov	fp, sp
   3d728:	sub	sp, sp, #32
   3d72c:	ldr	ip, [fp, #12]
   3d730:	ldr	lr, [fp, #8]
   3d734:	str	r0, [fp, #-4]
   3d738:	str	r1, [fp, #-8]
   3d73c:	str	r2, [fp, #-12]
   3d740:	str	r3, [sp, #16]
   3d744:	ldr	r0, [fp, #-12]
   3d748:	ldr	r1, [sp, #16]
   3d74c:	add	r0, r0, r1
   3d750:	str	lr, [sp, #8]
   3d754:	str	ip, [sp, #4]
   3d758:	bl	3be7c <flatcc_json_printer_uint8_field@@Base+0x108>
   3d75c:	strb	r0, [sp, #15]
   3d760:	ldr	r0, [fp, #-8]
   3d764:	cmp	r0, #0
   3d768:	beq	3d784 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   3d76c:	ldr	r0, [fp, #-4]
   3d770:	ldr	r1, [r0, #20]
   3d774:	add	r2, r1, #1
   3d778:	str	r2, [r0, #20]
   3d77c:	movw	r0, #44	; 0x2c
   3d780:	strb	r0, [r1]
   3d784:	ldr	r0, [fp, #-4]
   3d788:	ldr	r1, [fp, #8]
   3d78c:	ldr	r2, [fp, #12]
   3d790:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3d794:	ldrb	r0, [sp, #15]
   3d798:	ldr	r1, [fp, #-4]
   3d79c:	ldr	r1, [r1, #20]
   3d7a0:	and	r0, r0, #255	; 0xff
   3d7a4:	bl	39b00 <flatcc_json_printer_uint8@@Base+0x40>
   3d7a8:	ldr	r1, [fp, #-4]
   3d7ac:	ldr	r2, [r1, #20]
   3d7b0:	add	r0, r2, r0
   3d7b4:	str	r0, [r1, #20]
   3d7b8:	mov	sp, fp
   3d7bc:	pop	{fp, pc}

0003d7c0 <flatcc_json_printer_uint16_struct_field@@Base>:
   3d7c0:	push	{fp, lr}
   3d7c4:	mov	fp, sp
   3d7c8:	sub	sp, sp, #32
   3d7cc:	ldr	ip, [fp, #12]
   3d7d0:	ldr	lr, [fp, #8]
   3d7d4:	str	r0, [fp, #-4]
   3d7d8:	str	r1, [fp, #-8]
   3d7dc:	str	r2, [fp, #-12]
   3d7e0:	str	r3, [sp, #16]
   3d7e4:	ldr	r0, [fp, #-12]
   3d7e8:	ldr	r1, [sp, #16]
   3d7ec:	add	r0, r0, r1
   3d7f0:	str	lr, [sp, #8]
   3d7f4:	str	ip, [sp, #4]
   3d7f8:	bl	3bfac <flatcc_json_printer_uint16_field@@Base+0x108>
   3d7fc:	strh	r0, [sp, #14]
   3d800:	ldr	r0, [fp, #-8]
   3d804:	cmp	r0, #0
   3d808:	beq	3d824 <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   3d80c:	ldr	r0, [fp, #-4]
   3d810:	ldr	r1, [r0, #20]
   3d814:	add	r2, r1, #1
   3d818:	str	r2, [r0, #20]
   3d81c:	movw	r0, #44	; 0x2c
   3d820:	strb	r0, [r1]
   3d824:	ldr	r0, [fp, #-4]
   3d828:	ldr	r1, [fp, #8]
   3d82c:	ldr	r2, [fp, #12]
   3d830:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3d834:	ldrh	r0, [sp, #14]
   3d838:	ldr	r1, [fp, #-4]
   3d83c:	ldr	r1, [r1, #20]
   3d840:	uxth	r0, r0
   3d844:	bl	39cdc <flatcc_json_printer_uint16@@Base+0x40>
   3d848:	ldr	r1, [fp, #-4]
   3d84c:	ldr	r2, [r1, #20]
   3d850:	add	r0, r2, r0
   3d854:	str	r0, [r1, #20]
   3d858:	mov	sp, fp
   3d85c:	pop	{fp, pc}

0003d860 <flatcc_json_printer_uint32_struct_field@@Base>:
   3d860:	push	{fp, lr}
   3d864:	mov	fp, sp
   3d868:	sub	sp, sp, #32
   3d86c:	ldr	ip, [fp, #12]
   3d870:	ldr	lr, [fp, #8]
   3d874:	str	r0, [fp, #-4]
   3d878:	str	r1, [fp, #-8]
   3d87c:	str	r2, [fp, #-12]
   3d880:	str	r3, [sp, #16]
   3d884:	ldr	r0, [fp, #-12]
   3d888:	ldr	r1, [sp, #16]
   3d88c:	add	r0, r0, r1
   3d890:	str	lr, [sp, #8]
   3d894:	str	ip, [sp, #4]
   3d898:	bl	3c0d8 <flatcc_json_printer_uint32_field@@Base+0x104>
   3d89c:	str	r0, [sp, #12]
   3d8a0:	ldr	r0, [fp, #-8]
   3d8a4:	cmp	r0, #0
   3d8a8:	beq	3d8c4 <flatcc_json_printer_uint32_struct_field@@Base+0x64>
   3d8ac:	ldr	r0, [fp, #-4]
   3d8b0:	ldr	r1, [r0, #20]
   3d8b4:	add	r2, r1, #1
   3d8b8:	str	r2, [r0, #20]
   3d8bc:	movw	r0, #44	; 0x2c
   3d8c0:	strb	r0, [r1]
   3d8c4:	ldr	r0, [fp, #-4]
   3d8c8:	ldr	r1, [fp, #8]
   3d8cc:	ldr	r2, [fp, #12]
   3d8d0:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3d8d4:	ldr	r0, [sp, #12]
   3d8d8:	ldr	r1, [fp, #-4]
   3d8dc:	ldr	r1, [r1, #20]
   3d8e0:	bl	3a020 <flatcc_json_printer_uint32@@Base+0x3c>
   3d8e4:	ldr	r1, [fp, #-4]
   3d8e8:	ldr	r2, [r1, #20]
   3d8ec:	add	r0, r2, r0
   3d8f0:	str	r0, [r1, #20]
   3d8f4:	mov	sp, fp
   3d8f8:	pop	{fp, pc}

0003d8fc <flatcc_json_printer_uint64_struct_field@@Base>:
   3d8fc:	push	{fp, lr}
   3d900:	mov	fp, sp
   3d904:	sub	sp, sp, #32
   3d908:	ldr	ip, [fp, #12]
   3d90c:	ldr	lr, [fp, #8]
   3d910:	str	r0, [fp, #-4]
   3d914:	str	r1, [fp, #-8]
   3d918:	str	r2, [fp, #-12]
   3d91c:	str	r3, [sp, #16]
   3d920:	ldr	r0, [fp, #-12]
   3d924:	ldr	r1, [sp, #16]
   3d928:	add	r0, r0, r1
   3d92c:	str	lr, [sp, #4]
   3d930:	str	ip, [sp]
   3d934:	bl	3c230 <flatcc_json_printer_uint64_field@@Base+0x134>
   3d938:	str	r1, [sp, #12]
   3d93c:	str	r0, [sp, #8]
   3d940:	ldr	r0, [fp, #-8]
   3d944:	cmp	r0, #0
   3d948:	beq	3d964 <flatcc_json_printer_uint64_struct_field@@Base+0x68>
   3d94c:	ldr	r0, [fp, #-4]
   3d950:	ldr	r1, [r0, #20]
   3d954:	add	r2, r1, #1
   3d958:	str	r2, [r0, #20]
   3d95c:	movw	r0, #44	; 0x2c
   3d960:	strb	r0, [r1]
   3d964:	ldr	r0, [fp, #-4]
   3d968:	ldr	r1, [fp, #8]
   3d96c:	ldr	r2, [fp, #12]
   3d970:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3d974:	ldr	r0, [sp, #8]
   3d978:	ldr	r1, [sp, #12]
   3d97c:	ldr	r2, [fp, #-4]
   3d980:	ldr	r2, [r2, #20]
   3d984:	bl	3a694 <flatcc_json_printer_uint64@@Base+0x44>
   3d988:	ldr	r1, [fp, #-4]
   3d98c:	ldr	r2, [r1, #20]
   3d990:	add	r0, r2, r0
   3d994:	str	r0, [r1, #20]
   3d998:	mov	sp, fp
   3d99c:	pop	{fp, pc}

0003d9a0 <flatcc_json_printer_int8_struct_field@@Base>:
   3d9a0:	push	{fp, lr}
   3d9a4:	mov	fp, sp
   3d9a8:	sub	sp, sp, #32
   3d9ac:	ldr	ip, [fp, #12]
   3d9b0:	ldr	lr, [fp, #8]
   3d9b4:	str	r0, [fp, #-4]
   3d9b8:	str	r1, [fp, #-8]
   3d9bc:	str	r2, [fp, #-12]
   3d9c0:	str	r3, [sp, #16]
   3d9c4:	ldr	r0, [fp, #-12]
   3d9c8:	ldr	r1, [sp, #16]
   3d9cc:	add	r0, r0, r1
   3d9d0:	str	lr, [sp, #8]
   3d9d4:	str	ip, [sp, #4]
   3d9d8:	bl	3c36c <flatcc_json_printer_int8_field@@Base+0x108>
   3d9dc:	strb	r0, [sp, #15]
   3d9e0:	ldr	r0, [fp, #-8]
   3d9e4:	cmp	r0, #0
   3d9e8:	beq	3da04 <flatcc_json_printer_int8_struct_field@@Base+0x64>
   3d9ec:	ldr	r0, [fp, #-4]
   3d9f0:	ldr	r1, [r0, #20]
   3d9f4:	add	r2, r1, #1
   3d9f8:	str	r2, [r0, #20]
   3d9fc:	movw	r0, #44	; 0x2c
   3da00:	strb	r0, [r1]
   3da04:	ldr	r0, [fp, #-4]
   3da08:	ldr	r1, [fp, #8]
   3da0c:	ldr	r2, [fp, #12]
   3da10:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3da14:	ldrb	r0, [sp, #15]
   3da18:	ldr	r1, [fp, #-4]
   3da1c:	ldr	r1, [r1, #20]
   3da20:	sxtb	r0, r0
   3da24:	bl	3b29c <flatcc_json_printer_int8@@Base+0x40>
   3da28:	ldr	r1, [fp, #-4]
   3da2c:	ldr	r2, [r1, #20]
   3da30:	add	r0, r2, r0
   3da34:	str	r0, [r1, #20]
   3da38:	mov	sp, fp
   3da3c:	pop	{fp, pc}

0003da40 <flatcc_json_printer_int16_struct_field@@Base>:
   3da40:	push	{fp, lr}
   3da44:	mov	fp, sp
   3da48:	sub	sp, sp, #32
   3da4c:	ldr	ip, [fp, #12]
   3da50:	ldr	lr, [fp, #8]
   3da54:	str	r0, [fp, #-4]
   3da58:	str	r1, [fp, #-8]
   3da5c:	str	r2, [fp, #-12]
   3da60:	str	r3, [sp, #16]
   3da64:	ldr	r0, [fp, #-12]
   3da68:	ldr	r1, [sp, #16]
   3da6c:	add	r0, r0, r1
   3da70:	str	lr, [sp, #8]
   3da74:	str	ip, [sp, #4]
   3da78:	bl	3c49c <flatcc_json_printer_int16_field@@Base+0x108>
   3da7c:	strh	r0, [sp, #14]
   3da80:	ldr	r0, [fp, #-8]
   3da84:	cmp	r0, #0
   3da88:	beq	3daa4 <flatcc_json_printer_int16_struct_field@@Base+0x64>
   3da8c:	ldr	r0, [fp, #-4]
   3da90:	ldr	r1, [r0, #20]
   3da94:	add	r2, r1, #1
   3da98:	str	r2, [r0, #20]
   3da9c:	movw	r0, #44	; 0x2c
   3daa0:	strb	r0, [r1]
   3daa4:	ldr	r0, [fp, #-4]
   3daa8:	ldr	r1, [fp, #8]
   3daac:	ldr	r2, [fp, #12]
   3dab0:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3dab4:	ldrh	r0, [sp, #14]
   3dab8:	ldr	r1, [fp, #-4]
   3dabc:	ldr	r1, [r1, #20]
   3dac0:	sxth	r0, r0
   3dac4:	bl	3b354 <flatcc_json_printer_int16@@Base+0x40>
   3dac8:	ldr	r1, [fp, #-4]
   3dacc:	ldr	r2, [r1, #20]
   3dad0:	add	r0, r2, r0
   3dad4:	str	r0, [r1, #20]
   3dad8:	mov	sp, fp
   3dadc:	pop	{fp, pc}

0003dae0 <flatcc_json_printer_int32_struct_field@@Base>:
   3dae0:	push	{fp, lr}
   3dae4:	mov	fp, sp
   3dae8:	sub	sp, sp, #32
   3daec:	ldr	ip, [fp, #12]
   3daf0:	ldr	lr, [fp, #8]
   3daf4:	str	r0, [fp, #-4]
   3daf8:	str	r1, [fp, #-8]
   3dafc:	str	r2, [fp, #-12]
   3db00:	str	r3, [sp, #16]
   3db04:	ldr	r0, [fp, #-12]
   3db08:	ldr	r1, [sp, #16]
   3db0c:	add	r0, r0, r1
   3db10:	str	lr, [sp, #8]
   3db14:	str	ip, [sp, #4]
   3db18:	bl	3c5c8 <flatcc_json_printer_int32_field@@Base+0x104>
   3db1c:	str	r0, [sp, #12]
   3db20:	ldr	r0, [fp, #-8]
   3db24:	cmp	r0, #0
   3db28:	beq	3db44 <flatcc_json_printer_int32_struct_field@@Base+0x64>
   3db2c:	ldr	r0, [fp, #-4]
   3db30:	ldr	r1, [r0, #20]
   3db34:	add	r2, r1, #1
   3db38:	str	r2, [r0, #20]
   3db3c:	movw	r0, #44	; 0x2c
   3db40:	strb	r0, [r1]
   3db44:	ldr	r0, [fp, #-4]
   3db48:	ldr	r1, [fp, #8]
   3db4c:	ldr	r2, [fp, #12]
   3db50:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3db54:	ldr	r0, [sp, #12]
   3db58:	ldr	r1, [fp, #-4]
   3db5c:	ldr	r1, [r1, #20]
   3db60:	bl	3b408 <flatcc_json_printer_int32@@Base+0x3c>
   3db64:	ldr	r1, [fp, #-4]
   3db68:	ldr	r2, [r1, #20]
   3db6c:	add	r0, r2, r0
   3db70:	str	r0, [r1, #20]
   3db74:	mov	sp, fp
   3db78:	pop	{fp, pc}

0003db7c <flatcc_json_printer_int64_struct_field@@Base>:
   3db7c:	push	{fp, lr}
   3db80:	mov	fp, sp
   3db84:	sub	sp, sp, #32
   3db88:	ldr	ip, [fp, #12]
   3db8c:	ldr	lr, [fp, #8]
   3db90:	str	r0, [fp, #-4]
   3db94:	str	r1, [fp, #-8]
   3db98:	str	r2, [fp, #-12]
   3db9c:	str	r3, [sp, #16]
   3dba0:	ldr	r0, [fp, #-12]
   3dba4:	ldr	r1, [sp, #16]
   3dba8:	add	r0, r0, r1
   3dbac:	str	lr, [sp, #4]
   3dbb0:	str	ip, [sp]
   3dbb4:	bl	3c720 <flatcc_json_printer_int64_field@@Base+0x134>
   3dbb8:	str	r1, [sp, #12]
   3dbbc:	str	r0, [sp, #8]
   3dbc0:	ldr	r0, [fp, #-8]
   3dbc4:	cmp	r0, #0
   3dbc8:	beq	3dbe4 <flatcc_json_printer_int64_struct_field@@Base+0x68>
   3dbcc:	ldr	r0, [fp, #-4]
   3dbd0:	ldr	r1, [r0, #20]
   3dbd4:	add	r2, r1, #1
   3dbd8:	str	r2, [r0, #20]
   3dbdc:	movw	r0, #44	; 0x2c
   3dbe0:	strb	r0, [r1]
   3dbe4:	ldr	r0, [fp, #-4]
   3dbe8:	ldr	r1, [fp, #8]
   3dbec:	ldr	r2, [fp, #12]
   3dbf0:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3dbf4:	ldr	r0, [sp, #8]
   3dbf8:	ldr	r1, [sp, #12]
   3dbfc:	ldr	r2, [fp, #-4]
   3dc00:	ldr	r2, [r2, #20]
   3dc04:	bl	3b4c0 <flatcc_json_printer_int64@@Base+0x44>
   3dc08:	ldr	r1, [fp, #-4]
   3dc0c:	ldr	r2, [r1, #20]
   3dc10:	add	r0, r2, r0
   3dc14:	str	r0, [r1, #20]
   3dc18:	mov	sp, fp
   3dc1c:	pop	{fp, pc}

0003dc20 <flatcc_json_printer_bool_struct_field@@Base>:
   3dc20:	push	{fp, lr}
   3dc24:	mov	fp, sp
   3dc28:	sub	sp, sp, #32
   3dc2c:	ldr	ip, [fp, #12]
   3dc30:	ldr	lr, [fp, #8]
   3dc34:	str	r0, [fp, #-4]
   3dc38:	str	r1, [fp, #-8]
   3dc3c:	str	r2, [fp, #-12]
   3dc40:	str	r3, [sp, #16]
   3dc44:	ldr	r0, [fp, #-12]
   3dc48:	ldr	r1, [sp, #16]
   3dc4c:	add	r0, r0, r1
   3dc50:	str	lr, [sp, #8]
   3dc54:	str	ip, [sp, #4]
   3dc58:	bl	3c858 <flatcc_json_printer_bool_field@@Base+0x104>
   3dc5c:	strb	r0, [sp, #15]
   3dc60:	ldr	r0, [fp, #-8]
   3dc64:	cmp	r0, #0
   3dc68:	beq	3dc84 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   3dc6c:	ldr	r0, [fp, #-4]
   3dc70:	ldr	r1, [r0, #20]
   3dc74:	add	r2, r1, #1
   3dc78:	str	r2, [r0, #20]
   3dc7c:	movw	r0, #44	; 0x2c
   3dc80:	strb	r0, [r1]
   3dc84:	ldr	r0, [fp, #-4]
   3dc88:	ldr	r1, [fp, #8]
   3dc8c:	ldr	r2, [fp, #12]
   3dc90:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3dc94:	ldrb	r0, [sp, #15]
   3dc98:	ldr	r1, [fp, #-4]
   3dc9c:	ldr	r1, [r1, #20]
   3dca0:	bl	3c880 <flatcc_json_printer_bool_field@@Base+0x12c>
   3dca4:	ldr	r1, [fp, #-4]
   3dca8:	ldr	r2, [r1, #20]
   3dcac:	add	r0, r2, r0
   3dcb0:	str	r0, [r1, #20]
   3dcb4:	mov	sp, fp
   3dcb8:	pop	{fp, pc}

0003dcbc <flatcc_json_printer_float_struct_field@@Base>:
   3dcbc:	push	{fp, lr}
   3dcc0:	mov	fp, sp
   3dcc4:	sub	sp, sp, #32
   3dcc8:	ldr	ip, [fp, #12]
   3dccc:	ldr	lr, [fp, #8]
   3dcd0:	str	r0, [fp, #-4]
   3dcd4:	str	r1, [fp, #-8]
   3dcd8:	str	r2, [fp, #-12]
   3dcdc:	str	r3, [sp, #16]
   3dce0:	ldr	r0, [fp, #-12]
   3dce4:	ldr	r1, [sp, #16]
   3dce8:	add	r0, r0, r1
   3dcec:	str	lr, [sp, #8]
   3dcf0:	str	ip, [sp, #4]
   3dcf4:	bl	3ca38 <flatcc_json_printer_float_field@@Base+0x108>
   3dcf8:	vstr	s0, [sp, #12]
   3dcfc:	ldr	r0, [fp, #-8]
   3dd00:	cmp	r0, #0
   3dd04:	beq	3dd20 <flatcc_json_printer_float_struct_field@@Base+0x64>
   3dd08:	ldr	r0, [fp, #-4]
   3dd0c:	ldr	r1, [r0, #20]
   3dd10:	add	r2, r1, #1
   3dd14:	str	r2, [r0, #20]
   3dd18:	movw	r0, #44	; 0x2c
   3dd1c:	strb	r0, [r1]
   3dd20:	ldr	r0, [fp, #-4]
   3dd24:	ldr	r1, [fp, #8]
   3dd28:	ldr	r2, [fp, #12]
   3dd2c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3dd30:	vldr	s0, [sp, #12]
   3dd34:	vcvt.f64.f32	d0, s0
   3dd38:	ldr	r0, [fp, #-4]
   3dd3c:	ldr	r0, [r0, #20]
   3dd40:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3dd44:	ldr	r1, [fp, #-4]
   3dd48:	ldr	r2, [r1, #20]
   3dd4c:	add	r0, r2, r0
   3dd50:	str	r0, [r1, #20]
   3dd54:	mov	sp, fp
   3dd58:	pop	{fp, pc}

0003dd5c <flatcc_json_printer_double_struct_field@@Base>:
   3dd5c:	push	{fp, lr}
   3dd60:	mov	fp, sp
   3dd64:	sub	sp, sp, #32
   3dd68:	ldr	ip, [fp, #12]
   3dd6c:	ldr	lr, [fp, #8]
   3dd70:	str	r0, [fp, #-4]
   3dd74:	str	r1, [fp, #-8]
   3dd78:	str	r2, [fp, #-12]
   3dd7c:	str	r3, [sp, #16]
   3dd80:	ldr	r0, [fp, #-12]
   3dd84:	ldr	r1, [sp, #16]
   3dd88:	add	r0, r0, r1
   3dd8c:	str	lr, [sp, #4]
   3dd90:	str	ip, [sp]
   3dd94:	bl	3cb60 <flatcc_json_printer_double_field@@Base+0x104>
   3dd98:	vstr	d0, [sp, #8]
   3dd9c:	ldr	r0, [fp, #-8]
   3dda0:	cmp	r0, #0
   3dda4:	beq	3ddc0 <flatcc_json_printer_double_struct_field@@Base+0x64>
   3dda8:	ldr	r0, [fp, #-4]
   3ddac:	ldr	r1, [r0, #20]
   3ddb0:	add	r2, r1, #1
   3ddb4:	str	r2, [r0, #20]
   3ddb8:	movw	r0, #44	; 0x2c
   3ddbc:	strb	r0, [r1]
   3ddc0:	ldr	r0, [fp, #-4]
   3ddc4:	ldr	r1, [fp, #8]
   3ddc8:	ldr	r2, [fp, #12]
   3ddcc:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3ddd0:	vldr	d0, [sp, #8]
   3ddd4:	ldr	r0, [fp, #-4]
   3ddd8:	ldr	r0, [r0, #20]
   3dddc:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3dde0:	ldr	r1, [fp, #-4]
   3dde4:	ldr	r2, [r1, #20]
   3dde8:	add	r0, r2, r0
   3ddec:	str	r0, [r1, #20]
   3ddf0:	mov	sp, fp
   3ddf4:	pop	{fp, pc}

0003ddf8 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3ddf8:	push	{r4, sl, fp, lr}
   3ddfc:	add	fp, sp, #8
   3de00:	sub	sp, sp, #40	; 0x28
   3de04:	ldr	ip, [fp, #16]
   3de08:	ldr	lr, [fp, #12]
   3de0c:	ldr	r4, [fp, #8]
   3de10:	str	r0, [fp, #-12]
   3de14:	str	r1, [fp, #-16]
   3de18:	str	r2, [fp, #-20]	; 0xffffffec
   3de1c:	str	r3, [sp, #24]
   3de20:	ldr	r0, [fp, #-20]	; 0xffffffec
   3de24:	ldr	r1, [sp, #24]
   3de28:	add	r0, r0, r1
   3de2c:	str	r4, [sp, #16]
   3de30:	str	lr, [sp, #12]
   3de34:	str	ip, [sp, #8]
   3de38:	bl	3be7c <flatcc_json_printer_uint8_field@@Base+0x108>
   3de3c:	strb	r0, [sp, #23]
   3de40:	ldr	r0, [fp, #-16]
   3de44:	cmp	r0, #0
   3de48:	beq	3de64 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x6c>
   3de4c:	ldr	r0, [fp, #-12]
   3de50:	ldr	r1, [r0, #20]
   3de54:	add	r2, r1, #1
   3de58:	str	r2, [r0, #20]
   3de5c:	movw	r0, #44	; 0x2c
   3de60:	strb	r0, [r1]
   3de64:	ldr	r0, [fp, #-12]
   3de68:	ldr	r1, [fp, #8]
   3de6c:	ldr	r2, [fp, #12]
   3de70:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3de74:	ldr	r0, [fp, #-12]
   3de78:	ldrsb	r0, [r0, #27]
   3de7c:	cmp	r0, #0
   3de80:	beq	3deac <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb4>
   3de84:	ldrb	r0, [sp, #23]
   3de88:	ldr	r1, [fp, #-12]
   3de8c:	ldr	r1, [r1, #20]
   3de90:	and	r0, r0, #255	; 0xff
   3de94:	bl	39b00 <flatcc_json_printer_uint8@@Base+0x40>
   3de98:	ldr	r1, [fp, #-12]
   3de9c:	ldr	lr, [r1, #20]
   3dea0:	add	r0, lr, r0
   3dea4:	str	r0, [r1, #20]
   3dea8:	b	3dec8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xd0>
   3deac:	ldr	r0, [fp, #16]
   3deb0:	ldr	r1, [fp, #-12]
   3deb4:	str	r0, [sp, #4]
   3deb8:	mov	r0, r1
   3debc:	ldrb	r1, [sp, #23]
   3dec0:	ldr	r2, [sp, #4]
   3dec4:	blx	r2
   3dec8:	sub	sp, fp, #8
   3decc:	pop	{r4, sl, fp, pc}

0003ded0 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3ded0:	push	{r4, sl, fp, lr}
   3ded4:	add	fp, sp, #8
   3ded8:	sub	sp, sp, #40	; 0x28
   3dedc:	ldr	ip, [fp, #16]
   3dee0:	ldr	lr, [fp, #12]
   3dee4:	ldr	r4, [fp, #8]
   3dee8:	str	r0, [fp, #-12]
   3deec:	str	r1, [fp, #-16]
   3def0:	str	r2, [fp, #-20]	; 0xffffffec
   3def4:	str	r3, [sp, #24]
   3def8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3defc:	ldr	r1, [sp, #24]
   3df00:	add	r0, r0, r1
   3df04:	str	r4, [sp, #16]
   3df08:	str	lr, [sp, #12]
   3df0c:	str	ip, [sp, #8]
   3df10:	bl	3bfac <flatcc_json_printer_uint16_field@@Base+0x108>
   3df14:	strh	r0, [sp, #22]
   3df18:	ldr	r0, [fp, #-16]
   3df1c:	cmp	r0, #0
   3df20:	beq	3df3c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   3df24:	ldr	r0, [fp, #-12]
   3df28:	ldr	r1, [r0, #20]
   3df2c:	add	r2, r1, #1
   3df30:	str	r2, [r0, #20]
   3df34:	movw	r0, #44	; 0x2c
   3df38:	strb	r0, [r1]
   3df3c:	ldr	r0, [fp, #-12]
   3df40:	ldr	r1, [fp, #8]
   3df44:	ldr	r2, [fp, #12]
   3df48:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3df4c:	ldr	r0, [fp, #-12]
   3df50:	ldrsb	r0, [r0, #27]
   3df54:	cmp	r0, #0
   3df58:	beq	3df84 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xb4>
   3df5c:	ldrh	r0, [sp, #22]
   3df60:	ldr	r1, [fp, #-12]
   3df64:	ldr	r1, [r1, #20]
   3df68:	uxth	r0, r0
   3df6c:	bl	39cdc <flatcc_json_printer_uint16@@Base+0x40>
   3df70:	ldr	r1, [fp, #-12]
   3df74:	ldr	lr, [r1, #20]
   3df78:	add	r0, lr, r0
   3df7c:	str	r0, [r1, #20]
   3df80:	b	3dfa0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xd0>
   3df84:	ldr	r0, [fp, #16]
   3df88:	ldr	r1, [fp, #-12]
   3df8c:	str	r0, [sp, #4]
   3df90:	mov	r0, r1
   3df94:	ldrh	r1, [sp, #22]
   3df98:	ldr	r2, [sp, #4]
   3df9c:	blx	r2
   3dfa0:	sub	sp, fp, #8
   3dfa4:	pop	{r4, sl, fp, pc}

0003dfa8 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3dfa8:	push	{r4, sl, fp, lr}
   3dfac:	add	fp, sp, #8
   3dfb0:	sub	sp, sp, #40	; 0x28
   3dfb4:	ldr	ip, [fp, #16]
   3dfb8:	ldr	lr, [fp, #12]
   3dfbc:	ldr	r4, [fp, #8]
   3dfc0:	str	r0, [fp, #-12]
   3dfc4:	str	r1, [fp, #-16]
   3dfc8:	str	r2, [fp, #-20]	; 0xffffffec
   3dfcc:	str	r3, [sp, #24]
   3dfd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3dfd4:	ldr	r1, [sp, #24]
   3dfd8:	add	r0, r0, r1
   3dfdc:	str	r4, [sp, #16]
   3dfe0:	str	lr, [sp, #12]
   3dfe4:	str	ip, [sp, #8]
   3dfe8:	bl	3c0d8 <flatcc_json_printer_uint32_field@@Base+0x104>
   3dfec:	str	r0, [sp, #20]
   3dff0:	ldr	r0, [fp, #-16]
   3dff4:	cmp	r0, #0
   3dff8:	beq	3e014 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x6c>
   3dffc:	ldr	r0, [fp, #-12]
   3e000:	ldr	r1, [r0, #20]
   3e004:	add	r2, r1, #1
   3e008:	str	r2, [r0, #20]
   3e00c:	movw	r0, #44	; 0x2c
   3e010:	strb	r0, [r1]
   3e014:	ldr	r0, [fp, #-12]
   3e018:	ldr	r1, [fp, #8]
   3e01c:	ldr	r2, [fp, #12]
   3e020:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3e024:	ldr	r0, [fp, #-12]
   3e028:	ldrsb	r0, [r0, #27]
   3e02c:	cmp	r0, #0
   3e030:	beq	3e058 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb0>
   3e034:	ldr	r0, [sp, #20]
   3e038:	ldr	r1, [fp, #-12]
   3e03c:	ldr	r1, [r1, #20]
   3e040:	bl	3a020 <flatcc_json_printer_uint32@@Base+0x3c>
   3e044:	ldr	r1, [fp, #-12]
   3e048:	ldr	lr, [r1, #20]
   3e04c:	add	r0, lr, r0
   3e050:	str	r0, [r1, #20]
   3e054:	b	3e078 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xd0>
   3e058:	ldr	r0, [fp, #16]
   3e05c:	ldr	r1, [fp, #-12]
   3e060:	ldr	r2, [sp, #20]
   3e064:	str	r0, [sp, #4]
   3e068:	mov	r0, r1
   3e06c:	mov	r1, r2
   3e070:	ldr	r2, [sp, #4]
   3e074:	blx	r2
   3e078:	sub	sp, fp, #8
   3e07c:	pop	{r4, sl, fp, pc}

0003e080 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3e080:	push	{r4, sl, fp, lr}
   3e084:	add	fp, sp, #8
   3e088:	sub	sp, sp, #40	; 0x28
   3e08c:	ldr	ip, [fp, #16]
   3e090:	ldr	lr, [fp, #12]
   3e094:	ldr	r4, [fp, #8]
   3e098:	str	r0, [fp, #-12]
   3e09c:	str	r1, [fp, #-16]
   3e0a0:	str	r2, [fp, #-20]	; 0xffffffec
   3e0a4:	str	r3, [sp, #24]
   3e0a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e0ac:	ldr	r1, [sp, #24]
   3e0b0:	add	r0, r0, r1
   3e0b4:	str	r4, [sp, #12]
   3e0b8:	str	lr, [sp, #8]
   3e0bc:	str	ip, [sp, #4]
   3e0c0:	bl	3c230 <flatcc_json_printer_uint64_field@@Base+0x134>
   3e0c4:	str	r1, [sp, #20]
   3e0c8:	str	r0, [sp, #16]
   3e0cc:	ldr	r0, [fp, #-16]
   3e0d0:	cmp	r0, #0
   3e0d4:	beq	3e0f0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   3e0d8:	ldr	r0, [fp, #-12]
   3e0dc:	ldr	r1, [r0, #20]
   3e0e0:	add	r2, r1, #1
   3e0e4:	str	r2, [r0, #20]
   3e0e8:	movw	r0, #44	; 0x2c
   3e0ec:	strb	r0, [r1]
   3e0f0:	ldr	r0, [fp, #-12]
   3e0f4:	ldr	r1, [fp, #8]
   3e0f8:	ldr	r2, [fp, #12]
   3e0fc:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3e100:	ldr	r0, [fp, #-12]
   3e104:	ldrsb	r0, [r0, #27]
   3e108:	cmp	r0, #0
   3e10c:	beq	3e138 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xb8>
   3e110:	ldr	r0, [sp, #16]
   3e114:	ldr	r1, [sp, #20]
   3e118:	ldr	r2, [fp, #-12]
   3e11c:	ldr	r2, [r2, #20]
   3e120:	bl	3a694 <flatcc_json_printer_uint64@@Base+0x44>
   3e124:	ldr	r1, [fp, #-12]
   3e128:	ldr	r2, [r1, #20]
   3e12c:	add	r0, r2, r0
   3e130:	str	r0, [r1, #20]
   3e134:	b	3e158 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xd8>
   3e138:	ldr	r0, [fp, #16]
   3e13c:	ldr	r1, [fp, #-12]
   3e140:	ldr	r2, [sp, #16]
   3e144:	ldr	r3, [sp, #20]
   3e148:	str	r0, [sp]
   3e14c:	mov	r0, r1
   3e150:	ldr	r1, [sp]
   3e154:	blx	r1
   3e158:	sub	sp, fp, #8
   3e15c:	pop	{r4, sl, fp, pc}

0003e160 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3e160:	push	{r4, sl, fp, lr}
   3e164:	add	fp, sp, #8
   3e168:	sub	sp, sp, #40	; 0x28
   3e16c:	ldr	ip, [fp, #16]
   3e170:	ldr	lr, [fp, #12]
   3e174:	ldr	r4, [fp, #8]
   3e178:	str	r0, [fp, #-12]
   3e17c:	str	r1, [fp, #-16]
   3e180:	str	r2, [fp, #-20]	; 0xffffffec
   3e184:	str	r3, [sp, #24]
   3e188:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e18c:	ldr	r1, [sp, #24]
   3e190:	add	r0, r0, r1
   3e194:	str	r4, [sp, #16]
   3e198:	str	lr, [sp, #12]
   3e19c:	str	ip, [sp, #8]
   3e1a0:	bl	3c36c <flatcc_json_printer_int8_field@@Base+0x108>
   3e1a4:	strb	r0, [sp, #23]
   3e1a8:	ldr	r0, [fp, #-16]
   3e1ac:	cmp	r0, #0
   3e1b0:	beq	3e1cc <flatcc_json_printer_int8_enum_struct_field@@Base+0x6c>
   3e1b4:	ldr	r0, [fp, #-12]
   3e1b8:	ldr	r1, [r0, #20]
   3e1bc:	add	r2, r1, #1
   3e1c0:	str	r2, [r0, #20]
   3e1c4:	movw	r0, #44	; 0x2c
   3e1c8:	strb	r0, [r1]
   3e1cc:	ldr	r0, [fp, #-12]
   3e1d0:	ldr	r1, [fp, #8]
   3e1d4:	ldr	r2, [fp, #12]
   3e1d8:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3e1dc:	ldr	r0, [fp, #-12]
   3e1e0:	ldrsb	r0, [r0, #27]
   3e1e4:	cmp	r0, #0
   3e1e8:	beq	3e214 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb4>
   3e1ec:	ldrb	r0, [sp, #23]
   3e1f0:	ldr	r1, [fp, #-12]
   3e1f4:	ldr	r1, [r1, #20]
   3e1f8:	sxtb	r0, r0
   3e1fc:	bl	3b29c <flatcc_json_printer_int8@@Base+0x40>
   3e200:	ldr	r1, [fp, #-12]
   3e204:	ldr	lr, [r1, #20]
   3e208:	add	r0, lr, r0
   3e20c:	str	r0, [r1, #20]
   3e210:	b	3e230 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd0>
   3e214:	ldr	r0, [fp, #16]
   3e218:	ldr	r1, [fp, #-12]
   3e21c:	str	r0, [sp, #4]
   3e220:	mov	r0, r1
   3e224:	ldrsb	r1, [sp, #23]
   3e228:	ldr	r2, [sp, #4]
   3e22c:	blx	r2
   3e230:	sub	sp, fp, #8
   3e234:	pop	{r4, sl, fp, pc}

0003e238 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3e238:	push	{r4, sl, fp, lr}
   3e23c:	add	fp, sp, #8
   3e240:	sub	sp, sp, #40	; 0x28
   3e244:	ldr	ip, [fp, #16]
   3e248:	ldr	lr, [fp, #12]
   3e24c:	ldr	r4, [fp, #8]
   3e250:	str	r0, [fp, #-12]
   3e254:	str	r1, [fp, #-16]
   3e258:	str	r2, [fp, #-20]	; 0xffffffec
   3e25c:	str	r3, [sp, #24]
   3e260:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e264:	ldr	r1, [sp, #24]
   3e268:	add	r0, r0, r1
   3e26c:	str	r4, [sp, #16]
   3e270:	str	lr, [sp, #12]
   3e274:	str	ip, [sp, #8]
   3e278:	bl	3c49c <flatcc_json_printer_int16_field@@Base+0x108>
   3e27c:	strh	r0, [sp, #22]
   3e280:	ldr	r0, [fp, #-16]
   3e284:	cmp	r0, #0
   3e288:	beq	3e2a4 <flatcc_json_printer_int16_enum_struct_field@@Base+0x6c>
   3e28c:	ldr	r0, [fp, #-12]
   3e290:	ldr	r1, [r0, #20]
   3e294:	add	r2, r1, #1
   3e298:	str	r2, [r0, #20]
   3e29c:	movw	r0, #44	; 0x2c
   3e2a0:	strb	r0, [r1]
   3e2a4:	ldr	r0, [fp, #-12]
   3e2a8:	ldr	r1, [fp, #8]
   3e2ac:	ldr	r2, [fp, #12]
   3e2b0:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3e2b4:	ldr	r0, [fp, #-12]
   3e2b8:	ldrsb	r0, [r0, #27]
   3e2bc:	cmp	r0, #0
   3e2c0:	beq	3e2ec <flatcc_json_printer_int16_enum_struct_field@@Base+0xb4>
   3e2c4:	ldrh	r0, [sp, #22]
   3e2c8:	ldr	r1, [fp, #-12]
   3e2cc:	ldr	r1, [r1, #20]
   3e2d0:	sxth	r0, r0
   3e2d4:	bl	3b354 <flatcc_json_printer_int16@@Base+0x40>
   3e2d8:	ldr	r1, [fp, #-12]
   3e2dc:	ldr	lr, [r1, #20]
   3e2e0:	add	r0, lr, r0
   3e2e4:	str	r0, [r1, #20]
   3e2e8:	b	3e308 <flatcc_json_printer_int16_enum_struct_field@@Base+0xd0>
   3e2ec:	ldr	r0, [fp, #16]
   3e2f0:	ldr	r1, [fp, #-12]
   3e2f4:	str	r0, [sp, #4]
   3e2f8:	mov	r0, r1
   3e2fc:	ldrsh	r1, [sp, #22]
   3e300:	ldr	r2, [sp, #4]
   3e304:	blx	r2
   3e308:	sub	sp, fp, #8
   3e30c:	pop	{r4, sl, fp, pc}

0003e310 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3e310:	push	{r4, sl, fp, lr}
   3e314:	add	fp, sp, #8
   3e318:	sub	sp, sp, #40	; 0x28
   3e31c:	ldr	ip, [fp, #16]
   3e320:	ldr	lr, [fp, #12]
   3e324:	ldr	r4, [fp, #8]
   3e328:	str	r0, [fp, #-12]
   3e32c:	str	r1, [fp, #-16]
   3e330:	str	r2, [fp, #-20]	; 0xffffffec
   3e334:	str	r3, [sp, #24]
   3e338:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e33c:	ldr	r1, [sp, #24]
   3e340:	add	r0, r0, r1
   3e344:	str	r4, [sp, #16]
   3e348:	str	lr, [sp, #12]
   3e34c:	str	ip, [sp, #8]
   3e350:	bl	3c5c8 <flatcc_json_printer_int32_field@@Base+0x104>
   3e354:	str	r0, [sp, #20]
   3e358:	ldr	r0, [fp, #-16]
   3e35c:	cmp	r0, #0
   3e360:	beq	3e37c <flatcc_json_printer_int32_enum_struct_field@@Base+0x6c>
   3e364:	ldr	r0, [fp, #-12]
   3e368:	ldr	r1, [r0, #20]
   3e36c:	add	r2, r1, #1
   3e370:	str	r2, [r0, #20]
   3e374:	movw	r0, #44	; 0x2c
   3e378:	strb	r0, [r1]
   3e37c:	ldr	r0, [fp, #-12]
   3e380:	ldr	r1, [fp, #8]
   3e384:	ldr	r2, [fp, #12]
   3e388:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3e38c:	ldr	r0, [fp, #-12]
   3e390:	ldrsb	r0, [r0, #27]
   3e394:	cmp	r0, #0
   3e398:	beq	3e3c0 <flatcc_json_printer_int32_enum_struct_field@@Base+0xb0>
   3e39c:	ldr	r0, [sp, #20]
   3e3a0:	ldr	r1, [fp, #-12]
   3e3a4:	ldr	r1, [r1, #20]
   3e3a8:	bl	3b408 <flatcc_json_printer_int32@@Base+0x3c>
   3e3ac:	ldr	r1, [fp, #-12]
   3e3b0:	ldr	lr, [r1, #20]
   3e3b4:	add	r0, lr, r0
   3e3b8:	str	r0, [r1, #20]
   3e3bc:	b	3e3e0 <flatcc_json_printer_int32_enum_struct_field@@Base+0xd0>
   3e3c0:	ldr	r0, [fp, #16]
   3e3c4:	ldr	r1, [fp, #-12]
   3e3c8:	ldr	r2, [sp, #20]
   3e3cc:	str	r0, [sp, #4]
   3e3d0:	mov	r0, r1
   3e3d4:	mov	r1, r2
   3e3d8:	ldr	r2, [sp, #4]
   3e3dc:	blx	r2
   3e3e0:	sub	sp, fp, #8
   3e3e4:	pop	{r4, sl, fp, pc}

0003e3e8 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3e3e8:	push	{r4, sl, fp, lr}
   3e3ec:	add	fp, sp, #8
   3e3f0:	sub	sp, sp, #40	; 0x28
   3e3f4:	ldr	ip, [fp, #16]
   3e3f8:	ldr	lr, [fp, #12]
   3e3fc:	ldr	r4, [fp, #8]
   3e400:	str	r0, [fp, #-12]
   3e404:	str	r1, [fp, #-16]
   3e408:	str	r2, [fp, #-20]	; 0xffffffec
   3e40c:	str	r3, [sp, #24]
   3e410:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e414:	ldr	r1, [sp, #24]
   3e418:	add	r0, r0, r1
   3e41c:	str	r4, [sp, #12]
   3e420:	str	lr, [sp, #8]
   3e424:	str	ip, [sp, #4]
   3e428:	bl	3c720 <flatcc_json_printer_int64_field@@Base+0x134>
   3e42c:	str	r1, [sp, #20]
   3e430:	str	r0, [sp, #16]
   3e434:	ldr	r0, [fp, #-16]
   3e438:	cmp	r0, #0
   3e43c:	beq	3e458 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   3e440:	ldr	r0, [fp, #-12]
   3e444:	ldr	r1, [r0, #20]
   3e448:	add	r2, r1, #1
   3e44c:	str	r2, [r0, #20]
   3e450:	movw	r0, #44	; 0x2c
   3e454:	strb	r0, [r1]
   3e458:	ldr	r0, [fp, #-12]
   3e45c:	ldr	r1, [fp, #8]
   3e460:	ldr	r2, [fp, #12]
   3e464:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3e468:	ldr	r0, [fp, #-12]
   3e46c:	ldrsb	r0, [r0, #27]
   3e470:	cmp	r0, #0
   3e474:	beq	3e4a0 <flatcc_json_printer_int64_enum_struct_field@@Base+0xb8>
   3e478:	ldr	r0, [sp, #16]
   3e47c:	ldr	r1, [sp, #20]
   3e480:	ldr	r2, [fp, #-12]
   3e484:	ldr	r2, [r2, #20]
   3e488:	bl	3b4c0 <flatcc_json_printer_int64@@Base+0x44>
   3e48c:	ldr	r1, [fp, #-12]
   3e490:	ldr	r2, [r1, #20]
   3e494:	add	r0, r2, r0
   3e498:	str	r0, [r1, #20]
   3e49c:	b	3e4c0 <flatcc_json_printer_int64_enum_struct_field@@Base+0xd8>
   3e4a0:	ldr	r0, [fp, #16]
   3e4a4:	ldr	r1, [fp, #-12]
   3e4a8:	ldr	r2, [sp, #16]
   3e4ac:	ldr	r3, [sp, #20]
   3e4b0:	str	r0, [sp]
   3e4b4:	mov	r0, r1
   3e4b8:	ldr	r1, [sp]
   3e4bc:	blx	r1
   3e4c0:	sub	sp, fp, #8
   3e4c4:	pop	{r4, sl, fp, pc}

0003e4c8 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3e4c8:	push	{r4, sl, fp, lr}
   3e4cc:	add	fp, sp, #8
   3e4d0:	sub	sp, sp, #40	; 0x28
   3e4d4:	ldr	ip, [fp, #16]
   3e4d8:	ldr	lr, [fp, #12]
   3e4dc:	ldr	r4, [fp, #8]
   3e4e0:	str	r0, [fp, #-12]
   3e4e4:	str	r1, [fp, #-16]
   3e4e8:	str	r2, [fp, #-20]	; 0xffffffec
   3e4ec:	str	r3, [sp, #24]
   3e4f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e4f4:	ldr	r1, [sp, #24]
   3e4f8:	add	r0, r0, r1
   3e4fc:	str	r4, [sp, #16]
   3e500:	str	lr, [sp, #12]
   3e504:	str	ip, [sp, #8]
   3e508:	bl	3c858 <flatcc_json_printer_bool_field@@Base+0x104>
   3e50c:	strb	r0, [sp, #23]
   3e510:	ldr	r0, [fp, #-16]
   3e514:	cmp	r0, #0
   3e518:	beq	3e534 <flatcc_json_printer_bool_enum_struct_field@@Base+0x6c>
   3e51c:	ldr	r0, [fp, #-12]
   3e520:	ldr	r1, [r0, #20]
   3e524:	add	r2, r1, #1
   3e528:	str	r2, [r0, #20]
   3e52c:	movw	r0, #44	; 0x2c
   3e530:	strb	r0, [r1]
   3e534:	ldr	r0, [fp, #-12]
   3e538:	ldr	r1, [fp, #8]
   3e53c:	ldr	r2, [fp, #12]
   3e540:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3e544:	ldr	r0, [fp, #-12]
   3e548:	ldrsb	r0, [r0, #27]
   3e54c:	cmp	r0, #0
   3e550:	beq	3e578 <flatcc_json_printer_bool_enum_struct_field@@Base+0xb0>
   3e554:	ldrb	r0, [sp, #23]
   3e558:	ldr	r1, [fp, #-12]
   3e55c:	ldr	r1, [r1, #20]
   3e560:	bl	3c880 <flatcc_json_printer_bool_field@@Base+0x12c>
   3e564:	ldr	r1, [fp, #-12]
   3e568:	ldr	lr, [r1, #20]
   3e56c:	add	r0, lr, r0
   3e570:	str	r0, [r1, #20]
   3e574:	b	3e594 <flatcc_json_printer_bool_enum_struct_field@@Base+0xcc>
   3e578:	ldr	r0, [fp, #16]
   3e57c:	ldr	r1, [fp, #-12]
   3e580:	str	r0, [sp, #4]
   3e584:	mov	r0, r1
   3e588:	ldrb	r1, [sp, #23]
   3e58c:	ldr	r2, [sp, #4]
   3e590:	blx	r2
   3e594:	sub	sp, fp, #8
   3e598:	pop	{r4, sl, fp, pc}

0003e59c <flatcc_json_printer_utype_vector_field@@Base>:
   3e59c:	push	{fp, lr}
   3e5a0:	mov	fp, sp
   3e5a4:	sub	sp, sp, #32
   3e5a8:	ldr	ip, [fp, #8]
   3e5ac:	str	r0, [fp, #-4]
   3e5b0:	str	r1, [fp, #-8]
   3e5b4:	str	r2, [fp, #-12]
   3e5b8:	str	r3, [sp, #16]
   3e5bc:	ldr	r0, [fp, #-8]
   3e5c0:	ldr	r1, [fp, #-12]
   3e5c4:	str	ip, [sp, #4]
   3e5c8:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3e5cc:	str	r0, [sp, #12]
   3e5d0:	ldr	r0, [sp, #12]
   3e5d4:	movw	r1, #0
   3e5d8:	cmp	r0, r1
   3e5dc:	beq	3e810 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   3e5e0:	ldr	r0, [fp, #-8]
   3e5e4:	ldr	r1, [r0, #16]
   3e5e8:	add	r2, r1, #1
   3e5ec:	str	r2, [r0, #16]
   3e5f0:	cmp	r1, #0
   3e5f4:	beq	3e610 <flatcc_json_printer_utype_vector_field@@Base+0x74>
   3e5f8:	ldr	r0, [fp, #-4]
   3e5fc:	ldr	r1, [r0, #20]
   3e600:	add	r2, r1, #1
   3e604:	str	r2, [r0, #20]
   3e608:	movw	r0, #44	; 0x2c
   3e60c:	strb	r0, [r1]
   3e610:	ldr	r0, [sp, #12]
   3e614:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3e618:	str	r0, [sp, #12]
   3e61c:	ldr	r0, [sp, #12]
   3e620:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3e624:	str	r0, [sp, #8]
   3e628:	ldr	r0, [sp, #12]
   3e62c:	add	r0, r0, #4
   3e630:	str	r0, [sp, #12]
   3e634:	ldr	r0, [fp, #-4]
   3e638:	ldr	r1, [sp, #16]
   3e63c:	ldr	r2, [fp, #8]
   3e640:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3e644:	ldr	r0, [fp, #-4]
   3e648:	ldr	r1, [r0, #32]
   3e64c:	add	r1, r1, #1
   3e650:	str	r1, [r0, #32]
   3e654:	ldr	r0, [fp, #-4]
   3e658:	ldr	r1, [r0, #20]
   3e65c:	add	r2, r1, #1
   3e660:	str	r2, [r0, #20]
   3e664:	movw	r0, #91	; 0x5b
   3e668:	strb	r0, [r1]
   3e66c:	ldr	r0, [sp, #8]
   3e670:	cmp	r0, #0
   3e674:	beq	3e700 <flatcc_json_printer_utype_vector_field@@Base+0x164>
   3e678:	b	3e67c <flatcc_json_printer_utype_vector_field@@Base+0xe0>
   3e67c:	ldr	r0, [fp, #-4]
   3e680:	ldrsb	r0, [r0, #25]
   3e684:	cmp	r0, #0
   3e688:	beq	3e6b0 <flatcc_json_printer_utype_vector_field@@Base+0x114>
   3e68c:	ldr	r0, [fp, #-4]
   3e690:	ldr	r1, [r0, #20]
   3e694:	add	r2, r1, #1
   3e698:	str	r2, [r0, #20]
   3e69c:	movw	r0, #10
   3e6a0:	strb	r0, [r1]
   3e6a4:	ldr	r0, [fp, #-4]
   3e6a8:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3e6ac:	b	3e6b8 <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   3e6b0:	ldr	r0, [fp, #-4]
   3e6b4:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3e6b8:	b	3e6bc <flatcc_json_printer_utype_vector_field@@Base+0x120>
   3e6bc:	ldr	r0, [sp, #12]
   3e6c0:	bl	3e83c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   3e6c4:	ldr	lr, [fp, #-4]
   3e6c8:	ldr	r1, [lr, #20]
   3e6cc:	and	r0, r0, #255	; 0xff
   3e6d0:	bl	39b00 <flatcc_json_printer_uint8@@Base+0x40>
   3e6d4:	ldr	r1, [fp, #-4]
   3e6d8:	ldr	lr, [r1, #20]
   3e6dc:	add	r0, lr, r0
   3e6e0:	str	r0, [r1, #20]
   3e6e4:	ldr	r0, [sp, #12]
   3e6e8:	add	r0, r0, #1
   3e6ec:	str	r0, [sp, #12]
   3e6f0:	ldr	r0, [sp, #8]
   3e6f4:	mvn	r1, #0
   3e6f8:	add	r0, r0, r1
   3e6fc:	str	r0, [sp, #8]
   3e700:	b	3e704 <flatcc_json_printer_utype_vector_field@@Base+0x168>
   3e704:	ldr	r0, [sp, #8]
   3e708:	mvn	r1, #0
   3e70c:	add	r1, r0, r1
   3e710:	str	r1, [sp, #8]
   3e714:	cmp	r0, #0
   3e718:	beq	3e7ac <flatcc_json_printer_utype_vector_field@@Base+0x210>
   3e71c:	ldr	r0, [fp, #-4]
   3e720:	ldr	r1, [r0, #20]
   3e724:	add	r2, r1, #1
   3e728:	str	r2, [r0, #20]
   3e72c:	movw	r0, #44	; 0x2c
   3e730:	strb	r0, [r1]
   3e734:	ldr	r0, [fp, #-4]
   3e738:	ldrsb	r0, [r0, #25]
   3e73c:	cmp	r0, #0
   3e740:	beq	3e768 <flatcc_json_printer_utype_vector_field@@Base+0x1cc>
   3e744:	ldr	r0, [fp, #-4]
   3e748:	ldr	r1, [r0, #20]
   3e74c:	add	r2, r1, #1
   3e750:	str	r2, [r0, #20]
   3e754:	movw	r0, #10
   3e758:	strb	r0, [r1]
   3e75c:	ldr	r0, [fp, #-4]
   3e760:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3e764:	b	3e770 <flatcc_json_printer_utype_vector_field@@Base+0x1d4>
   3e768:	ldr	r0, [fp, #-4]
   3e76c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3e770:	b	3e774 <flatcc_json_printer_utype_vector_field@@Base+0x1d8>
   3e774:	ldr	r0, [sp, #12]
   3e778:	bl	3e83c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   3e77c:	ldr	lr, [fp, #-4]
   3e780:	ldr	r1, [lr, #20]
   3e784:	and	r0, r0, #255	; 0xff
   3e788:	bl	39b00 <flatcc_json_printer_uint8@@Base+0x40>
   3e78c:	ldr	r1, [fp, #-4]
   3e790:	ldr	lr, [r1, #20]
   3e794:	add	r0, lr, r0
   3e798:	str	r0, [r1, #20]
   3e79c:	ldr	r0, [sp, #12]
   3e7a0:	add	r0, r0, #1
   3e7a4:	str	r0, [sp, #12]
   3e7a8:	b	3e704 <flatcc_json_printer_utype_vector_field@@Base+0x168>
   3e7ac:	b	3e7b0 <flatcc_json_printer_utype_vector_field@@Base+0x214>
   3e7b0:	ldr	r0, [fp, #-4]
   3e7b4:	ldrsb	r0, [r0, #25]
   3e7b8:	cmp	r0, #0
   3e7bc:	beq	3e7f4 <flatcc_json_printer_utype_vector_field@@Base+0x258>
   3e7c0:	ldr	r0, [fp, #-4]
   3e7c4:	ldr	r1, [r0, #20]
   3e7c8:	add	r2, r1, #1
   3e7cc:	str	r2, [r0, #20]
   3e7d0:	movw	r0, #10
   3e7d4:	strb	r0, [r1]
   3e7d8:	ldr	r0, [fp, #-4]
   3e7dc:	ldr	r1, [r0, #32]
   3e7e0:	mvn	r2, #0
   3e7e4:	add	r1, r1, r2
   3e7e8:	str	r1, [r0, #32]
   3e7ec:	ldr	r0, [fp, #-4]
   3e7f0:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3e7f4:	ldr	r0, [fp, #-4]
   3e7f8:	ldr	r1, [r0, #20]
   3e7fc:	add	r2, r1, #1
   3e800:	str	r2, [r0, #20]
   3e804:	movw	r0, #93	; 0x5d
   3e808:	strb	r0, [r1]
   3e80c:	b	3e810 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   3e810:	mov	sp, fp
   3e814:	pop	{fp, pc}
   3e818:	push	{fp, lr}
   3e81c:	mov	fp, sp
   3e820:	sub	sp, sp, #8
   3e824:	str	r0, [sp, #4]
   3e828:	ldr	r0, [sp, #4]
   3e82c:	ldr	r0, [r0]
   3e830:	bl	46018 <flatcc_json_printer_clear@@Base+0x1ce4>
   3e834:	mov	sp, fp
   3e838:	pop	{fp, pc}
   3e83c:	push	{fp, lr}
   3e840:	mov	fp, sp
   3e844:	sub	sp, sp, #8
   3e848:	str	r0, [sp, #4]
   3e84c:	ldr	r0, [sp, #4]
   3e850:	ldrb	r0, [r0]
   3e854:	bl	4602c <flatcc_json_printer_clear@@Base+0x1cf8>
   3e858:	and	r0, r0, #255	; 0xff
   3e85c:	mov	sp, fp
   3e860:	pop	{fp, pc}

0003e864 <flatcc_json_printer_uint8_vector_field@@Base>:
   3e864:	push	{fp, lr}
   3e868:	mov	fp, sp
   3e86c:	sub	sp, sp, #32
   3e870:	ldr	ip, [fp, #8]
   3e874:	str	r0, [fp, #-4]
   3e878:	str	r1, [fp, #-8]
   3e87c:	str	r2, [fp, #-12]
   3e880:	str	r3, [sp, #16]
   3e884:	ldr	r0, [fp, #-8]
   3e888:	ldr	r1, [fp, #-12]
   3e88c:	str	ip, [sp, #4]
   3e890:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3e894:	str	r0, [sp, #12]
   3e898:	ldr	r0, [sp, #12]
   3e89c:	movw	r1, #0
   3e8a0:	cmp	r0, r1
   3e8a4:	beq	3ead8 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   3e8a8:	ldr	r0, [fp, #-8]
   3e8ac:	ldr	r1, [r0, #16]
   3e8b0:	add	r2, r1, #1
   3e8b4:	str	r2, [r0, #16]
   3e8b8:	cmp	r1, #0
   3e8bc:	beq	3e8d8 <flatcc_json_printer_uint8_vector_field@@Base+0x74>
   3e8c0:	ldr	r0, [fp, #-4]
   3e8c4:	ldr	r1, [r0, #20]
   3e8c8:	add	r2, r1, #1
   3e8cc:	str	r2, [r0, #20]
   3e8d0:	movw	r0, #44	; 0x2c
   3e8d4:	strb	r0, [r1]
   3e8d8:	ldr	r0, [sp, #12]
   3e8dc:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3e8e0:	str	r0, [sp, #12]
   3e8e4:	ldr	r0, [sp, #12]
   3e8e8:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3e8ec:	str	r0, [sp, #8]
   3e8f0:	ldr	r0, [sp, #12]
   3e8f4:	add	r0, r0, #4
   3e8f8:	str	r0, [sp, #12]
   3e8fc:	ldr	r0, [fp, #-4]
   3e900:	ldr	r1, [sp, #16]
   3e904:	ldr	r2, [fp, #8]
   3e908:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3e90c:	ldr	r0, [fp, #-4]
   3e910:	ldr	r1, [r0, #32]
   3e914:	add	r1, r1, #1
   3e918:	str	r1, [r0, #32]
   3e91c:	ldr	r0, [fp, #-4]
   3e920:	ldr	r1, [r0, #20]
   3e924:	add	r2, r1, #1
   3e928:	str	r2, [r0, #20]
   3e92c:	movw	r0, #91	; 0x5b
   3e930:	strb	r0, [r1]
   3e934:	ldr	r0, [sp, #8]
   3e938:	cmp	r0, #0
   3e93c:	beq	3e9c8 <flatcc_json_printer_uint8_vector_field@@Base+0x164>
   3e940:	b	3e944 <flatcc_json_printer_uint8_vector_field@@Base+0xe0>
   3e944:	ldr	r0, [fp, #-4]
   3e948:	ldrsb	r0, [r0, #25]
   3e94c:	cmp	r0, #0
   3e950:	beq	3e978 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
   3e954:	ldr	r0, [fp, #-4]
   3e958:	ldr	r1, [r0, #20]
   3e95c:	add	r2, r1, #1
   3e960:	str	r2, [r0, #20]
   3e964:	movw	r0, #10
   3e968:	strb	r0, [r1]
   3e96c:	ldr	r0, [fp, #-4]
   3e970:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3e974:	b	3e980 <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   3e978:	ldr	r0, [fp, #-4]
   3e97c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3e980:	b	3e984 <flatcc_json_printer_uint8_vector_field@@Base+0x120>
   3e984:	ldr	r0, [sp, #12]
   3e988:	bl	3be7c <flatcc_json_printer_uint8_field@@Base+0x108>
   3e98c:	ldr	lr, [fp, #-4]
   3e990:	ldr	r1, [lr, #20]
   3e994:	and	r0, r0, #255	; 0xff
   3e998:	bl	39b00 <flatcc_json_printer_uint8@@Base+0x40>
   3e99c:	ldr	r1, [fp, #-4]
   3e9a0:	ldr	lr, [r1, #20]
   3e9a4:	add	r0, lr, r0
   3e9a8:	str	r0, [r1, #20]
   3e9ac:	ldr	r0, [sp, #12]
   3e9b0:	add	r0, r0, #1
   3e9b4:	str	r0, [sp, #12]
   3e9b8:	ldr	r0, [sp, #8]
   3e9bc:	mvn	r1, #0
   3e9c0:	add	r0, r0, r1
   3e9c4:	str	r0, [sp, #8]
   3e9c8:	b	3e9cc <flatcc_json_printer_uint8_vector_field@@Base+0x168>
   3e9cc:	ldr	r0, [sp, #8]
   3e9d0:	mvn	r1, #0
   3e9d4:	add	r1, r0, r1
   3e9d8:	str	r1, [sp, #8]
   3e9dc:	cmp	r0, #0
   3e9e0:	beq	3ea74 <flatcc_json_printer_uint8_vector_field@@Base+0x210>
   3e9e4:	ldr	r0, [fp, #-4]
   3e9e8:	ldr	r1, [r0, #20]
   3e9ec:	add	r2, r1, #1
   3e9f0:	str	r2, [r0, #20]
   3e9f4:	movw	r0, #44	; 0x2c
   3e9f8:	strb	r0, [r1]
   3e9fc:	ldr	r0, [fp, #-4]
   3ea00:	ldrsb	r0, [r0, #25]
   3ea04:	cmp	r0, #0
   3ea08:	beq	3ea30 <flatcc_json_printer_uint8_vector_field@@Base+0x1cc>
   3ea0c:	ldr	r0, [fp, #-4]
   3ea10:	ldr	r1, [r0, #20]
   3ea14:	add	r2, r1, #1
   3ea18:	str	r2, [r0, #20]
   3ea1c:	movw	r0, #10
   3ea20:	strb	r0, [r1]
   3ea24:	ldr	r0, [fp, #-4]
   3ea28:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3ea2c:	b	3ea38 <flatcc_json_printer_uint8_vector_field@@Base+0x1d4>
   3ea30:	ldr	r0, [fp, #-4]
   3ea34:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3ea38:	b	3ea3c <flatcc_json_printer_uint8_vector_field@@Base+0x1d8>
   3ea3c:	ldr	r0, [sp, #12]
   3ea40:	bl	3be7c <flatcc_json_printer_uint8_field@@Base+0x108>
   3ea44:	ldr	lr, [fp, #-4]
   3ea48:	ldr	r1, [lr, #20]
   3ea4c:	and	r0, r0, #255	; 0xff
   3ea50:	bl	39b00 <flatcc_json_printer_uint8@@Base+0x40>
   3ea54:	ldr	r1, [fp, #-4]
   3ea58:	ldr	lr, [r1, #20]
   3ea5c:	add	r0, lr, r0
   3ea60:	str	r0, [r1, #20]
   3ea64:	ldr	r0, [sp, #12]
   3ea68:	add	r0, r0, #1
   3ea6c:	str	r0, [sp, #12]
   3ea70:	b	3e9cc <flatcc_json_printer_uint8_vector_field@@Base+0x168>
   3ea74:	b	3ea78 <flatcc_json_printer_uint8_vector_field@@Base+0x214>
   3ea78:	ldr	r0, [fp, #-4]
   3ea7c:	ldrsb	r0, [r0, #25]
   3ea80:	cmp	r0, #0
   3ea84:	beq	3eabc <flatcc_json_printer_uint8_vector_field@@Base+0x258>
   3ea88:	ldr	r0, [fp, #-4]
   3ea8c:	ldr	r1, [r0, #20]
   3ea90:	add	r2, r1, #1
   3ea94:	str	r2, [r0, #20]
   3ea98:	movw	r0, #10
   3ea9c:	strb	r0, [r1]
   3eaa0:	ldr	r0, [fp, #-4]
   3eaa4:	ldr	r1, [r0, #32]
   3eaa8:	mvn	r2, #0
   3eaac:	add	r1, r1, r2
   3eab0:	str	r1, [r0, #32]
   3eab4:	ldr	r0, [fp, #-4]
   3eab8:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3eabc:	ldr	r0, [fp, #-4]
   3eac0:	ldr	r1, [r0, #20]
   3eac4:	add	r2, r1, #1
   3eac8:	str	r2, [r0, #20]
   3eacc:	movw	r0, #93	; 0x5d
   3ead0:	strb	r0, [r1]
   3ead4:	b	3ead8 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   3ead8:	mov	sp, fp
   3eadc:	pop	{fp, pc}

0003eae0 <flatcc_json_printer_uint16_vector_field@@Base>:
   3eae0:	push	{fp, lr}
   3eae4:	mov	fp, sp
   3eae8:	sub	sp, sp, #32
   3eaec:	ldr	ip, [fp, #8]
   3eaf0:	str	r0, [fp, #-4]
   3eaf4:	str	r1, [fp, #-8]
   3eaf8:	str	r2, [fp, #-12]
   3eafc:	str	r3, [sp, #16]
   3eb00:	ldr	r0, [fp, #-8]
   3eb04:	ldr	r1, [fp, #-12]
   3eb08:	str	ip, [sp, #4]
   3eb0c:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3eb10:	str	r0, [sp, #12]
   3eb14:	ldr	r0, [sp, #12]
   3eb18:	movw	r1, #0
   3eb1c:	cmp	r0, r1
   3eb20:	beq	3ed54 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   3eb24:	ldr	r0, [fp, #-8]
   3eb28:	ldr	r1, [r0, #16]
   3eb2c:	add	r2, r1, #1
   3eb30:	str	r2, [r0, #16]
   3eb34:	cmp	r1, #0
   3eb38:	beq	3eb54 <flatcc_json_printer_uint16_vector_field@@Base+0x74>
   3eb3c:	ldr	r0, [fp, #-4]
   3eb40:	ldr	r1, [r0, #20]
   3eb44:	add	r2, r1, #1
   3eb48:	str	r2, [r0, #20]
   3eb4c:	movw	r0, #44	; 0x2c
   3eb50:	strb	r0, [r1]
   3eb54:	ldr	r0, [sp, #12]
   3eb58:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3eb5c:	str	r0, [sp, #12]
   3eb60:	ldr	r0, [sp, #12]
   3eb64:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3eb68:	str	r0, [sp, #8]
   3eb6c:	ldr	r0, [sp, #12]
   3eb70:	add	r0, r0, #4
   3eb74:	str	r0, [sp, #12]
   3eb78:	ldr	r0, [fp, #-4]
   3eb7c:	ldr	r1, [sp, #16]
   3eb80:	ldr	r2, [fp, #8]
   3eb84:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3eb88:	ldr	r0, [fp, #-4]
   3eb8c:	ldr	r1, [r0, #32]
   3eb90:	add	r1, r1, #1
   3eb94:	str	r1, [r0, #32]
   3eb98:	ldr	r0, [fp, #-4]
   3eb9c:	ldr	r1, [r0, #20]
   3eba0:	add	r2, r1, #1
   3eba4:	str	r2, [r0, #20]
   3eba8:	movw	r0, #91	; 0x5b
   3ebac:	strb	r0, [r1]
   3ebb0:	ldr	r0, [sp, #8]
   3ebb4:	cmp	r0, #0
   3ebb8:	beq	3ec44 <flatcc_json_printer_uint16_vector_field@@Base+0x164>
   3ebbc:	b	3ebc0 <flatcc_json_printer_uint16_vector_field@@Base+0xe0>
   3ebc0:	ldr	r0, [fp, #-4]
   3ebc4:	ldrsb	r0, [r0, #25]
   3ebc8:	cmp	r0, #0
   3ebcc:	beq	3ebf4 <flatcc_json_printer_uint16_vector_field@@Base+0x114>
   3ebd0:	ldr	r0, [fp, #-4]
   3ebd4:	ldr	r1, [r0, #20]
   3ebd8:	add	r2, r1, #1
   3ebdc:	str	r2, [r0, #20]
   3ebe0:	movw	r0, #10
   3ebe4:	strb	r0, [r1]
   3ebe8:	ldr	r0, [fp, #-4]
   3ebec:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3ebf0:	b	3ebfc <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   3ebf4:	ldr	r0, [fp, #-4]
   3ebf8:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3ebfc:	b	3ec00 <flatcc_json_printer_uint16_vector_field@@Base+0x120>
   3ec00:	ldr	r0, [sp, #12]
   3ec04:	bl	3bfac <flatcc_json_printer_uint16_field@@Base+0x108>
   3ec08:	ldr	lr, [fp, #-4]
   3ec0c:	ldr	r1, [lr, #20]
   3ec10:	uxth	r0, r0
   3ec14:	bl	39cdc <flatcc_json_printer_uint16@@Base+0x40>
   3ec18:	ldr	r1, [fp, #-4]
   3ec1c:	ldr	lr, [r1, #20]
   3ec20:	add	r0, lr, r0
   3ec24:	str	r0, [r1, #20]
   3ec28:	ldr	r0, [sp, #12]
   3ec2c:	add	r0, r0, #2
   3ec30:	str	r0, [sp, #12]
   3ec34:	ldr	r0, [sp, #8]
   3ec38:	mvn	r1, #0
   3ec3c:	add	r0, r0, r1
   3ec40:	str	r0, [sp, #8]
   3ec44:	b	3ec48 <flatcc_json_printer_uint16_vector_field@@Base+0x168>
   3ec48:	ldr	r0, [sp, #8]
   3ec4c:	mvn	r1, #0
   3ec50:	add	r1, r0, r1
   3ec54:	str	r1, [sp, #8]
   3ec58:	cmp	r0, #0
   3ec5c:	beq	3ecf0 <flatcc_json_printer_uint16_vector_field@@Base+0x210>
   3ec60:	ldr	r0, [fp, #-4]
   3ec64:	ldr	r1, [r0, #20]
   3ec68:	add	r2, r1, #1
   3ec6c:	str	r2, [r0, #20]
   3ec70:	movw	r0, #44	; 0x2c
   3ec74:	strb	r0, [r1]
   3ec78:	ldr	r0, [fp, #-4]
   3ec7c:	ldrsb	r0, [r0, #25]
   3ec80:	cmp	r0, #0
   3ec84:	beq	3ecac <flatcc_json_printer_uint16_vector_field@@Base+0x1cc>
   3ec88:	ldr	r0, [fp, #-4]
   3ec8c:	ldr	r1, [r0, #20]
   3ec90:	add	r2, r1, #1
   3ec94:	str	r2, [r0, #20]
   3ec98:	movw	r0, #10
   3ec9c:	strb	r0, [r1]
   3eca0:	ldr	r0, [fp, #-4]
   3eca4:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3eca8:	b	3ecb4 <flatcc_json_printer_uint16_vector_field@@Base+0x1d4>
   3ecac:	ldr	r0, [fp, #-4]
   3ecb0:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3ecb4:	b	3ecb8 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
   3ecb8:	ldr	r0, [sp, #12]
   3ecbc:	bl	3bfac <flatcc_json_printer_uint16_field@@Base+0x108>
   3ecc0:	ldr	lr, [fp, #-4]
   3ecc4:	ldr	r1, [lr, #20]
   3ecc8:	uxth	r0, r0
   3eccc:	bl	39cdc <flatcc_json_printer_uint16@@Base+0x40>
   3ecd0:	ldr	r1, [fp, #-4]
   3ecd4:	ldr	lr, [r1, #20]
   3ecd8:	add	r0, lr, r0
   3ecdc:	str	r0, [r1, #20]
   3ece0:	ldr	r0, [sp, #12]
   3ece4:	add	r0, r0, #2
   3ece8:	str	r0, [sp, #12]
   3ecec:	b	3ec48 <flatcc_json_printer_uint16_vector_field@@Base+0x168>
   3ecf0:	b	3ecf4 <flatcc_json_printer_uint16_vector_field@@Base+0x214>
   3ecf4:	ldr	r0, [fp, #-4]
   3ecf8:	ldrsb	r0, [r0, #25]
   3ecfc:	cmp	r0, #0
   3ed00:	beq	3ed38 <flatcc_json_printer_uint16_vector_field@@Base+0x258>
   3ed04:	ldr	r0, [fp, #-4]
   3ed08:	ldr	r1, [r0, #20]
   3ed0c:	add	r2, r1, #1
   3ed10:	str	r2, [r0, #20]
   3ed14:	movw	r0, #10
   3ed18:	strb	r0, [r1]
   3ed1c:	ldr	r0, [fp, #-4]
   3ed20:	ldr	r1, [r0, #32]
   3ed24:	mvn	r2, #0
   3ed28:	add	r1, r1, r2
   3ed2c:	str	r1, [r0, #32]
   3ed30:	ldr	r0, [fp, #-4]
   3ed34:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3ed38:	ldr	r0, [fp, #-4]
   3ed3c:	ldr	r1, [r0, #20]
   3ed40:	add	r2, r1, #1
   3ed44:	str	r2, [r0, #20]
   3ed48:	movw	r0, #93	; 0x5d
   3ed4c:	strb	r0, [r1]
   3ed50:	b	3ed54 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   3ed54:	mov	sp, fp
   3ed58:	pop	{fp, pc}

0003ed5c <flatcc_json_printer_uint32_vector_field@@Base>:
   3ed5c:	push	{fp, lr}
   3ed60:	mov	fp, sp
   3ed64:	sub	sp, sp, #32
   3ed68:	ldr	ip, [fp, #8]
   3ed6c:	str	r0, [fp, #-4]
   3ed70:	str	r1, [fp, #-8]
   3ed74:	str	r2, [fp, #-12]
   3ed78:	str	r3, [sp, #16]
   3ed7c:	ldr	r0, [fp, #-8]
   3ed80:	ldr	r1, [fp, #-12]
   3ed84:	str	ip, [sp, #4]
   3ed88:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3ed8c:	str	r0, [sp, #12]
   3ed90:	ldr	r0, [sp, #12]
   3ed94:	movw	r1, #0
   3ed98:	cmp	r0, r1
   3ed9c:	beq	3efc8 <flatcc_json_printer_uint32_vector_field@@Base+0x26c>
   3eda0:	ldr	r0, [fp, #-8]
   3eda4:	ldr	r1, [r0, #16]
   3eda8:	add	r2, r1, #1
   3edac:	str	r2, [r0, #16]
   3edb0:	cmp	r1, #0
   3edb4:	beq	3edd0 <flatcc_json_printer_uint32_vector_field@@Base+0x74>
   3edb8:	ldr	r0, [fp, #-4]
   3edbc:	ldr	r1, [r0, #20]
   3edc0:	add	r2, r1, #1
   3edc4:	str	r2, [r0, #20]
   3edc8:	movw	r0, #44	; 0x2c
   3edcc:	strb	r0, [r1]
   3edd0:	ldr	r0, [sp, #12]
   3edd4:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3edd8:	str	r0, [sp, #12]
   3eddc:	ldr	r0, [sp, #12]
   3ede0:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3ede4:	str	r0, [sp, #8]
   3ede8:	ldr	r0, [sp, #12]
   3edec:	add	r0, r0, #4
   3edf0:	str	r0, [sp, #12]
   3edf4:	ldr	r0, [fp, #-4]
   3edf8:	ldr	r1, [sp, #16]
   3edfc:	ldr	r2, [fp, #8]
   3ee00:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3ee04:	ldr	r0, [fp, #-4]
   3ee08:	ldr	r1, [r0, #32]
   3ee0c:	add	r1, r1, #1
   3ee10:	str	r1, [r0, #32]
   3ee14:	ldr	r0, [fp, #-4]
   3ee18:	ldr	r1, [r0, #20]
   3ee1c:	add	r2, r1, #1
   3ee20:	str	r2, [r0, #20]
   3ee24:	movw	r0, #91	; 0x5b
   3ee28:	strb	r0, [r1]
   3ee2c:	ldr	r0, [sp, #8]
   3ee30:	cmp	r0, #0
   3ee34:	beq	3eebc <flatcc_json_printer_uint32_vector_field@@Base+0x160>
   3ee38:	b	3ee3c <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
   3ee3c:	ldr	r0, [fp, #-4]
   3ee40:	ldrsb	r0, [r0, #25]
   3ee44:	cmp	r0, #0
   3ee48:	beq	3ee70 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
   3ee4c:	ldr	r0, [fp, #-4]
   3ee50:	ldr	r1, [r0, #20]
   3ee54:	add	r2, r1, #1
   3ee58:	str	r2, [r0, #20]
   3ee5c:	movw	r0, #10
   3ee60:	strb	r0, [r1]
   3ee64:	ldr	r0, [fp, #-4]
   3ee68:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3ee6c:	b	3ee78 <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   3ee70:	ldr	r0, [fp, #-4]
   3ee74:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3ee78:	b	3ee7c <flatcc_json_printer_uint32_vector_field@@Base+0x120>
   3ee7c:	ldr	r0, [sp, #12]
   3ee80:	bl	3c0d8 <flatcc_json_printer_uint32_field@@Base+0x104>
   3ee84:	ldr	lr, [fp, #-4]
   3ee88:	ldr	r1, [lr, #20]
   3ee8c:	bl	3a020 <flatcc_json_printer_uint32@@Base+0x3c>
   3ee90:	ldr	r1, [fp, #-4]
   3ee94:	ldr	lr, [r1, #20]
   3ee98:	add	r0, lr, r0
   3ee9c:	str	r0, [r1, #20]
   3eea0:	ldr	r0, [sp, #12]
   3eea4:	add	r0, r0, #4
   3eea8:	str	r0, [sp, #12]
   3eeac:	ldr	r0, [sp, #8]
   3eeb0:	mvn	r1, #0
   3eeb4:	add	r0, r0, r1
   3eeb8:	str	r0, [sp, #8]
   3eebc:	b	3eec0 <flatcc_json_printer_uint32_vector_field@@Base+0x164>
   3eec0:	ldr	r0, [sp, #8]
   3eec4:	mvn	r1, #0
   3eec8:	add	r1, r0, r1
   3eecc:	str	r1, [sp, #8]
   3eed0:	cmp	r0, #0
   3eed4:	beq	3ef64 <flatcc_json_printer_uint32_vector_field@@Base+0x208>
   3eed8:	ldr	r0, [fp, #-4]
   3eedc:	ldr	r1, [r0, #20]
   3eee0:	add	r2, r1, #1
   3eee4:	str	r2, [r0, #20]
   3eee8:	movw	r0, #44	; 0x2c
   3eeec:	strb	r0, [r1]
   3eef0:	ldr	r0, [fp, #-4]
   3eef4:	ldrsb	r0, [r0, #25]
   3eef8:	cmp	r0, #0
   3eefc:	beq	3ef24 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3ef00:	ldr	r0, [fp, #-4]
   3ef04:	ldr	r1, [r0, #20]
   3ef08:	add	r2, r1, #1
   3ef0c:	str	r2, [r0, #20]
   3ef10:	movw	r0, #10
   3ef14:	strb	r0, [r1]
   3ef18:	ldr	r0, [fp, #-4]
   3ef1c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3ef20:	b	3ef2c <flatcc_json_printer_uint32_vector_field@@Base+0x1d0>
   3ef24:	ldr	r0, [fp, #-4]
   3ef28:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3ef2c:	b	3ef30 <flatcc_json_printer_uint32_vector_field@@Base+0x1d4>
   3ef30:	ldr	r0, [sp, #12]
   3ef34:	bl	3c0d8 <flatcc_json_printer_uint32_field@@Base+0x104>
   3ef38:	ldr	lr, [fp, #-4]
   3ef3c:	ldr	r1, [lr, #20]
   3ef40:	bl	3a020 <flatcc_json_printer_uint32@@Base+0x3c>
   3ef44:	ldr	r1, [fp, #-4]
   3ef48:	ldr	lr, [r1, #20]
   3ef4c:	add	r0, lr, r0
   3ef50:	str	r0, [r1, #20]
   3ef54:	ldr	r0, [sp, #12]
   3ef58:	add	r0, r0, #4
   3ef5c:	str	r0, [sp, #12]
   3ef60:	b	3eec0 <flatcc_json_printer_uint32_vector_field@@Base+0x164>
   3ef64:	b	3ef68 <flatcc_json_printer_uint32_vector_field@@Base+0x20c>
   3ef68:	ldr	r0, [fp, #-4]
   3ef6c:	ldrsb	r0, [r0, #25]
   3ef70:	cmp	r0, #0
   3ef74:	beq	3efac <flatcc_json_printer_uint32_vector_field@@Base+0x250>
   3ef78:	ldr	r0, [fp, #-4]
   3ef7c:	ldr	r1, [r0, #20]
   3ef80:	add	r2, r1, #1
   3ef84:	str	r2, [r0, #20]
   3ef88:	movw	r0, #10
   3ef8c:	strb	r0, [r1]
   3ef90:	ldr	r0, [fp, #-4]
   3ef94:	ldr	r1, [r0, #32]
   3ef98:	mvn	r2, #0
   3ef9c:	add	r1, r1, r2
   3efa0:	str	r1, [r0, #32]
   3efa4:	ldr	r0, [fp, #-4]
   3efa8:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3efac:	ldr	r0, [fp, #-4]
   3efb0:	ldr	r1, [r0, #20]
   3efb4:	add	r2, r1, #1
   3efb8:	str	r2, [r0, #20]
   3efbc:	movw	r0, #93	; 0x5d
   3efc0:	strb	r0, [r1]
   3efc4:	b	3efc8 <flatcc_json_printer_uint32_vector_field@@Base+0x26c>
   3efc8:	mov	sp, fp
   3efcc:	pop	{fp, pc}

0003efd0 <flatcc_json_printer_uint64_vector_field@@Base>:
   3efd0:	push	{fp, lr}
   3efd4:	mov	fp, sp
   3efd8:	sub	sp, sp, #32
   3efdc:	ldr	ip, [fp, #8]
   3efe0:	str	r0, [fp, #-4]
   3efe4:	str	r1, [fp, #-8]
   3efe8:	str	r2, [fp, #-12]
   3efec:	str	r3, [sp, #16]
   3eff0:	ldr	r0, [fp, #-8]
   3eff4:	ldr	r1, [fp, #-12]
   3eff8:	str	ip, [sp, #4]
   3effc:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3f000:	str	r0, [sp, #12]
   3f004:	ldr	r0, [sp, #12]
   3f008:	movw	r1, #0
   3f00c:	cmp	r0, r1
   3f010:	beq	3f23c <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   3f014:	ldr	r0, [fp, #-8]
   3f018:	ldr	r1, [r0, #16]
   3f01c:	add	r2, r1, #1
   3f020:	str	r2, [r0, #16]
   3f024:	cmp	r1, #0
   3f028:	beq	3f044 <flatcc_json_printer_uint64_vector_field@@Base+0x74>
   3f02c:	ldr	r0, [fp, #-4]
   3f030:	ldr	r1, [r0, #20]
   3f034:	add	r2, r1, #1
   3f038:	str	r2, [r0, #20]
   3f03c:	movw	r0, #44	; 0x2c
   3f040:	strb	r0, [r1]
   3f044:	ldr	r0, [sp, #12]
   3f048:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3f04c:	str	r0, [sp, #12]
   3f050:	ldr	r0, [sp, #12]
   3f054:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f058:	str	r0, [sp, #8]
   3f05c:	ldr	r0, [sp, #12]
   3f060:	add	r0, r0, #4
   3f064:	str	r0, [sp, #12]
   3f068:	ldr	r0, [fp, #-4]
   3f06c:	ldr	r1, [sp, #16]
   3f070:	ldr	r2, [fp, #8]
   3f074:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3f078:	ldr	r0, [fp, #-4]
   3f07c:	ldr	r1, [r0, #32]
   3f080:	add	r1, r1, #1
   3f084:	str	r1, [r0, #32]
   3f088:	ldr	r0, [fp, #-4]
   3f08c:	ldr	r1, [r0, #20]
   3f090:	add	r2, r1, #1
   3f094:	str	r2, [r0, #20]
   3f098:	movw	r0, #91	; 0x5b
   3f09c:	strb	r0, [r1]
   3f0a0:	ldr	r0, [sp, #8]
   3f0a4:	cmp	r0, #0
   3f0a8:	beq	3f130 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
   3f0ac:	b	3f0b0 <flatcc_json_printer_uint64_vector_field@@Base+0xe0>
   3f0b0:	ldr	r0, [fp, #-4]
   3f0b4:	ldrsb	r0, [r0, #25]
   3f0b8:	cmp	r0, #0
   3f0bc:	beq	3f0e4 <flatcc_json_printer_uint64_vector_field@@Base+0x114>
   3f0c0:	ldr	r0, [fp, #-4]
   3f0c4:	ldr	r1, [r0, #20]
   3f0c8:	add	r2, r1, #1
   3f0cc:	str	r2, [r0, #20]
   3f0d0:	movw	r0, #10
   3f0d4:	strb	r0, [r1]
   3f0d8:	ldr	r0, [fp, #-4]
   3f0dc:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f0e0:	b	3f0ec <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   3f0e4:	ldr	r0, [fp, #-4]
   3f0e8:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3f0ec:	b	3f0f0 <flatcc_json_printer_uint64_vector_field@@Base+0x120>
   3f0f0:	ldr	r0, [sp, #12]
   3f0f4:	bl	3c230 <flatcc_json_printer_uint64_field@@Base+0x134>
   3f0f8:	ldr	lr, [fp, #-4]
   3f0fc:	ldr	r2, [lr, #20]
   3f100:	bl	3a694 <flatcc_json_printer_uint64@@Base+0x44>
   3f104:	ldr	r1, [fp, #-4]
   3f108:	ldr	r2, [r1, #20]
   3f10c:	add	r0, r2, r0
   3f110:	str	r0, [r1, #20]
   3f114:	ldr	r0, [sp, #12]
   3f118:	add	r0, r0, #8
   3f11c:	str	r0, [sp, #12]
   3f120:	ldr	r0, [sp, #8]
   3f124:	mvn	r1, #0
   3f128:	add	r0, r0, r1
   3f12c:	str	r0, [sp, #8]
   3f130:	b	3f134 <flatcc_json_printer_uint64_vector_field@@Base+0x164>
   3f134:	ldr	r0, [sp, #8]
   3f138:	mvn	r1, #0
   3f13c:	add	r1, r0, r1
   3f140:	str	r1, [sp, #8]
   3f144:	cmp	r0, #0
   3f148:	beq	3f1d8 <flatcc_json_printer_uint64_vector_field@@Base+0x208>
   3f14c:	ldr	r0, [fp, #-4]
   3f150:	ldr	r1, [r0, #20]
   3f154:	add	r2, r1, #1
   3f158:	str	r2, [r0, #20]
   3f15c:	movw	r0, #44	; 0x2c
   3f160:	strb	r0, [r1]
   3f164:	ldr	r0, [fp, #-4]
   3f168:	ldrsb	r0, [r0, #25]
   3f16c:	cmp	r0, #0
   3f170:	beq	3f198 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3f174:	ldr	r0, [fp, #-4]
   3f178:	ldr	r1, [r0, #20]
   3f17c:	add	r2, r1, #1
   3f180:	str	r2, [r0, #20]
   3f184:	movw	r0, #10
   3f188:	strb	r0, [r1]
   3f18c:	ldr	r0, [fp, #-4]
   3f190:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f194:	b	3f1a0 <flatcc_json_printer_uint64_vector_field@@Base+0x1d0>
   3f198:	ldr	r0, [fp, #-4]
   3f19c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3f1a0:	b	3f1a4 <flatcc_json_printer_uint64_vector_field@@Base+0x1d4>
   3f1a4:	ldr	r0, [sp, #12]
   3f1a8:	bl	3c230 <flatcc_json_printer_uint64_field@@Base+0x134>
   3f1ac:	ldr	lr, [fp, #-4]
   3f1b0:	ldr	r2, [lr, #20]
   3f1b4:	bl	3a694 <flatcc_json_printer_uint64@@Base+0x44>
   3f1b8:	ldr	r1, [fp, #-4]
   3f1bc:	ldr	r2, [r1, #20]
   3f1c0:	add	r0, r2, r0
   3f1c4:	str	r0, [r1, #20]
   3f1c8:	ldr	r0, [sp, #12]
   3f1cc:	add	r0, r0, #8
   3f1d0:	str	r0, [sp, #12]
   3f1d4:	b	3f134 <flatcc_json_printer_uint64_vector_field@@Base+0x164>
   3f1d8:	b	3f1dc <flatcc_json_printer_uint64_vector_field@@Base+0x20c>
   3f1dc:	ldr	r0, [fp, #-4]
   3f1e0:	ldrsb	r0, [r0, #25]
   3f1e4:	cmp	r0, #0
   3f1e8:	beq	3f220 <flatcc_json_printer_uint64_vector_field@@Base+0x250>
   3f1ec:	ldr	r0, [fp, #-4]
   3f1f0:	ldr	r1, [r0, #20]
   3f1f4:	add	r2, r1, #1
   3f1f8:	str	r2, [r0, #20]
   3f1fc:	movw	r0, #10
   3f200:	strb	r0, [r1]
   3f204:	ldr	r0, [fp, #-4]
   3f208:	ldr	r1, [r0, #32]
   3f20c:	mvn	r2, #0
   3f210:	add	r1, r1, r2
   3f214:	str	r1, [r0, #32]
   3f218:	ldr	r0, [fp, #-4]
   3f21c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f220:	ldr	r0, [fp, #-4]
   3f224:	ldr	r1, [r0, #20]
   3f228:	add	r2, r1, #1
   3f22c:	str	r2, [r0, #20]
   3f230:	movw	r0, #93	; 0x5d
   3f234:	strb	r0, [r1]
   3f238:	b	3f23c <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   3f23c:	mov	sp, fp
   3f240:	pop	{fp, pc}

0003f244 <flatcc_json_printer_int8_vector_field@@Base>:
   3f244:	push	{fp, lr}
   3f248:	mov	fp, sp
   3f24c:	sub	sp, sp, #32
   3f250:	ldr	ip, [fp, #8]
   3f254:	str	r0, [fp, #-4]
   3f258:	str	r1, [fp, #-8]
   3f25c:	str	r2, [fp, #-12]
   3f260:	str	r3, [sp, #16]
   3f264:	ldr	r0, [fp, #-8]
   3f268:	ldr	r1, [fp, #-12]
   3f26c:	str	ip, [sp, #4]
   3f270:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3f274:	str	r0, [sp, #12]
   3f278:	ldr	r0, [sp, #12]
   3f27c:	movw	r1, #0
   3f280:	cmp	r0, r1
   3f284:	beq	3f4b8 <flatcc_json_printer_int8_vector_field@@Base+0x274>
   3f288:	ldr	r0, [fp, #-8]
   3f28c:	ldr	r1, [r0, #16]
   3f290:	add	r2, r1, #1
   3f294:	str	r2, [r0, #16]
   3f298:	cmp	r1, #0
   3f29c:	beq	3f2b8 <flatcc_json_printer_int8_vector_field@@Base+0x74>
   3f2a0:	ldr	r0, [fp, #-4]
   3f2a4:	ldr	r1, [r0, #20]
   3f2a8:	add	r2, r1, #1
   3f2ac:	str	r2, [r0, #20]
   3f2b0:	movw	r0, #44	; 0x2c
   3f2b4:	strb	r0, [r1]
   3f2b8:	ldr	r0, [sp, #12]
   3f2bc:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3f2c0:	str	r0, [sp, #12]
   3f2c4:	ldr	r0, [sp, #12]
   3f2c8:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f2cc:	str	r0, [sp, #8]
   3f2d0:	ldr	r0, [sp, #12]
   3f2d4:	add	r0, r0, #4
   3f2d8:	str	r0, [sp, #12]
   3f2dc:	ldr	r0, [fp, #-4]
   3f2e0:	ldr	r1, [sp, #16]
   3f2e4:	ldr	r2, [fp, #8]
   3f2e8:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3f2ec:	ldr	r0, [fp, #-4]
   3f2f0:	ldr	r1, [r0, #32]
   3f2f4:	add	r1, r1, #1
   3f2f8:	str	r1, [r0, #32]
   3f2fc:	ldr	r0, [fp, #-4]
   3f300:	ldr	r1, [r0, #20]
   3f304:	add	r2, r1, #1
   3f308:	str	r2, [r0, #20]
   3f30c:	movw	r0, #91	; 0x5b
   3f310:	strb	r0, [r1]
   3f314:	ldr	r0, [sp, #8]
   3f318:	cmp	r0, #0
   3f31c:	beq	3f3a8 <flatcc_json_printer_int8_vector_field@@Base+0x164>
   3f320:	b	3f324 <flatcc_json_printer_int8_vector_field@@Base+0xe0>
   3f324:	ldr	r0, [fp, #-4]
   3f328:	ldrsb	r0, [r0, #25]
   3f32c:	cmp	r0, #0
   3f330:	beq	3f358 <flatcc_json_printer_int8_vector_field@@Base+0x114>
   3f334:	ldr	r0, [fp, #-4]
   3f338:	ldr	r1, [r0, #20]
   3f33c:	add	r2, r1, #1
   3f340:	str	r2, [r0, #20]
   3f344:	movw	r0, #10
   3f348:	strb	r0, [r1]
   3f34c:	ldr	r0, [fp, #-4]
   3f350:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f354:	b	3f360 <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   3f358:	ldr	r0, [fp, #-4]
   3f35c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3f360:	b	3f364 <flatcc_json_printer_int8_vector_field@@Base+0x120>
   3f364:	ldr	r0, [sp, #12]
   3f368:	bl	3c36c <flatcc_json_printer_int8_field@@Base+0x108>
   3f36c:	ldr	lr, [fp, #-4]
   3f370:	ldr	r1, [lr, #20]
   3f374:	sxtb	r0, r0
   3f378:	bl	3b29c <flatcc_json_printer_int8@@Base+0x40>
   3f37c:	ldr	r1, [fp, #-4]
   3f380:	ldr	lr, [r1, #20]
   3f384:	add	r0, lr, r0
   3f388:	str	r0, [r1, #20]
   3f38c:	ldr	r0, [sp, #12]
   3f390:	add	r0, r0, #1
   3f394:	str	r0, [sp, #12]
   3f398:	ldr	r0, [sp, #8]
   3f39c:	mvn	r1, #0
   3f3a0:	add	r0, r0, r1
   3f3a4:	str	r0, [sp, #8]
   3f3a8:	b	3f3ac <flatcc_json_printer_int8_vector_field@@Base+0x168>
   3f3ac:	ldr	r0, [sp, #8]
   3f3b0:	mvn	r1, #0
   3f3b4:	add	r1, r0, r1
   3f3b8:	str	r1, [sp, #8]
   3f3bc:	cmp	r0, #0
   3f3c0:	beq	3f454 <flatcc_json_printer_int8_vector_field@@Base+0x210>
   3f3c4:	ldr	r0, [fp, #-4]
   3f3c8:	ldr	r1, [r0, #20]
   3f3cc:	add	r2, r1, #1
   3f3d0:	str	r2, [r0, #20]
   3f3d4:	movw	r0, #44	; 0x2c
   3f3d8:	strb	r0, [r1]
   3f3dc:	ldr	r0, [fp, #-4]
   3f3e0:	ldrsb	r0, [r0, #25]
   3f3e4:	cmp	r0, #0
   3f3e8:	beq	3f410 <flatcc_json_printer_int8_vector_field@@Base+0x1cc>
   3f3ec:	ldr	r0, [fp, #-4]
   3f3f0:	ldr	r1, [r0, #20]
   3f3f4:	add	r2, r1, #1
   3f3f8:	str	r2, [r0, #20]
   3f3fc:	movw	r0, #10
   3f400:	strb	r0, [r1]
   3f404:	ldr	r0, [fp, #-4]
   3f408:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f40c:	b	3f418 <flatcc_json_printer_int8_vector_field@@Base+0x1d4>
   3f410:	ldr	r0, [fp, #-4]
   3f414:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3f418:	b	3f41c <flatcc_json_printer_int8_vector_field@@Base+0x1d8>
   3f41c:	ldr	r0, [sp, #12]
   3f420:	bl	3c36c <flatcc_json_printer_int8_field@@Base+0x108>
   3f424:	ldr	lr, [fp, #-4]
   3f428:	ldr	r1, [lr, #20]
   3f42c:	sxtb	r0, r0
   3f430:	bl	3b29c <flatcc_json_printer_int8@@Base+0x40>
   3f434:	ldr	r1, [fp, #-4]
   3f438:	ldr	lr, [r1, #20]
   3f43c:	add	r0, lr, r0
   3f440:	str	r0, [r1, #20]
   3f444:	ldr	r0, [sp, #12]
   3f448:	add	r0, r0, #1
   3f44c:	str	r0, [sp, #12]
   3f450:	b	3f3ac <flatcc_json_printer_int8_vector_field@@Base+0x168>
   3f454:	b	3f458 <flatcc_json_printer_int8_vector_field@@Base+0x214>
   3f458:	ldr	r0, [fp, #-4]
   3f45c:	ldrsb	r0, [r0, #25]
   3f460:	cmp	r0, #0
   3f464:	beq	3f49c <flatcc_json_printer_int8_vector_field@@Base+0x258>
   3f468:	ldr	r0, [fp, #-4]
   3f46c:	ldr	r1, [r0, #20]
   3f470:	add	r2, r1, #1
   3f474:	str	r2, [r0, #20]
   3f478:	movw	r0, #10
   3f47c:	strb	r0, [r1]
   3f480:	ldr	r0, [fp, #-4]
   3f484:	ldr	r1, [r0, #32]
   3f488:	mvn	r2, #0
   3f48c:	add	r1, r1, r2
   3f490:	str	r1, [r0, #32]
   3f494:	ldr	r0, [fp, #-4]
   3f498:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f49c:	ldr	r0, [fp, #-4]
   3f4a0:	ldr	r1, [r0, #20]
   3f4a4:	add	r2, r1, #1
   3f4a8:	str	r2, [r0, #20]
   3f4ac:	movw	r0, #93	; 0x5d
   3f4b0:	strb	r0, [r1]
   3f4b4:	b	3f4b8 <flatcc_json_printer_int8_vector_field@@Base+0x274>
   3f4b8:	mov	sp, fp
   3f4bc:	pop	{fp, pc}

0003f4c0 <flatcc_json_printer_int16_vector_field@@Base>:
   3f4c0:	push	{fp, lr}
   3f4c4:	mov	fp, sp
   3f4c8:	sub	sp, sp, #32
   3f4cc:	ldr	ip, [fp, #8]
   3f4d0:	str	r0, [fp, #-4]
   3f4d4:	str	r1, [fp, #-8]
   3f4d8:	str	r2, [fp, #-12]
   3f4dc:	str	r3, [sp, #16]
   3f4e0:	ldr	r0, [fp, #-8]
   3f4e4:	ldr	r1, [fp, #-12]
   3f4e8:	str	ip, [sp, #4]
   3f4ec:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3f4f0:	str	r0, [sp, #12]
   3f4f4:	ldr	r0, [sp, #12]
   3f4f8:	movw	r1, #0
   3f4fc:	cmp	r0, r1
   3f500:	beq	3f734 <flatcc_json_printer_int16_vector_field@@Base+0x274>
   3f504:	ldr	r0, [fp, #-8]
   3f508:	ldr	r1, [r0, #16]
   3f50c:	add	r2, r1, #1
   3f510:	str	r2, [r0, #16]
   3f514:	cmp	r1, #0
   3f518:	beq	3f534 <flatcc_json_printer_int16_vector_field@@Base+0x74>
   3f51c:	ldr	r0, [fp, #-4]
   3f520:	ldr	r1, [r0, #20]
   3f524:	add	r2, r1, #1
   3f528:	str	r2, [r0, #20]
   3f52c:	movw	r0, #44	; 0x2c
   3f530:	strb	r0, [r1]
   3f534:	ldr	r0, [sp, #12]
   3f538:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3f53c:	str	r0, [sp, #12]
   3f540:	ldr	r0, [sp, #12]
   3f544:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f548:	str	r0, [sp, #8]
   3f54c:	ldr	r0, [sp, #12]
   3f550:	add	r0, r0, #4
   3f554:	str	r0, [sp, #12]
   3f558:	ldr	r0, [fp, #-4]
   3f55c:	ldr	r1, [sp, #16]
   3f560:	ldr	r2, [fp, #8]
   3f564:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3f568:	ldr	r0, [fp, #-4]
   3f56c:	ldr	r1, [r0, #32]
   3f570:	add	r1, r1, #1
   3f574:	str	r1, [r0, #32]
   3f578:	ldr	r0, [fp, #-4]
   3f57c:	ldr	r1, [r0, #20]
   3f580:	add	r2, r1, #1
   3f584:	str	r2, [r0, #20]
   3f588:	movw	r0, #91	; 0x5b
   3f58c:	strb	r0, [r1]
   3f590:	ldr	r0, [sp, #8]
   3f594:	cmp	r0, #0
   3f598:	beq	3f624 <flatcc_json_printer_int16_vector_field@@Base+0x164>
   3f59c:	b	3f5a0 <flatcc_json_printer_int16_vector_field@@Base+0xe0>
   3f5a0:	ldr	r0, [fp, #-4]
   3f5a4:	ldrsb	r0, [r0, #25]
   3f5a8:	cmp	r0, #0
   3f5ac:	beq	3f5d4 <flatcc_json_printer_int16_vector_field@@Base+0x114>
   3f5b0:	ldr	r0, [fp, #-4]
   3f5b4:	ldr	r1, [r0, #20]
   3f5b8:	add	r2, r1, #1
   3f5bc:	str	r2, [r0, #20]
   3f5c0:	movw	r0, #10
   3f5c4:	strb	r0, [r1]
   3f5c8:	ldr	r0, [fp, #-4]
   3f5cc:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f5d0:	b	3f5dc <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   3f5d4:	ldr	r0, [fp, #-4]
   3f5d8:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3f5dc:	b	3f5e0 <flatcc_json_printer_int16_vector_field@@Base+0x120>
   3f5e0:	ldr	r0, [sp, #12]
   3f5e4:	bl	3c49c <flatcc_json_printer_int16_field@@Base+0x108>
   3f5e8:	ldr	lr, [fp, #-4]
   3f5ec:	ldr	r1, [lr, #20]
   3f5f0:	sxth	r0, r0
   3f5f4:	bl	3b354 <flatcc_json_printer_int16@@Base+0x40>
   3f5f8:	ldr	r1, [fp, #-4]
   3f5fc:	ldr	lr, [r1, #20]
   3f600:	add	r0, lr, r0
   3f604:	str	r0, [r1, #20]
   3f608:	ldr	r0, [sp, #12]
   3f60c:	add	r0, r0, #2
   3f610:	str	r0, [sp, #12]
   3f614:	ldr	r0, [sp, #8]
   3f618:	mvn	r1, #0
   3f61c:	add	r0, r0, r1
   3f620:	str	r0, [sp, #8]
   3f624:	b	3f628 <flatcc_json_printer_int16_vector_field@@Base+0x168>
   3f628:	ldr	r0, [sp, #8]
   3f62c:	mvn	r1, #0
   3f630:	add	r1, r0, r1
   3f634:	str	r1, [sp, #8]
   3f638:	cmp	r0, #0
   3f63c:	beq	3f6d0 <flatcc_json_printer_int16_vector_field@@Base+0x210>
   3f640:	ldr	r0, [fp, #-4]
   3f644:	ldr	r1, [r0, #20]
   3f648:	add	r2, r1, #1
   3f64c:	str	r2, [r0, #20]
   3f650:	movw	r0, #44	; 0x2c
   3f654:	strb	r0, [r1]
   3f658:	ldr	r0, [fp, #-4]
   3f65c:	ldrsb	r0, [r0, #25]
   3f660:	cmp	r0, #0
   3f664:	beq	3f68c <flatcc_json_printer_int16_vector_field@@Base+0x1cc>
   3f668:	ldr	r0, [fp, #-4]
   3f66c:	ldr	r1, [r0, #20]
   3f670:	add	r2, r1, #1
   3f674:	str	r2, [r0, #20]
   3f678:	movw	r0, #10
   3f67c:	strb	r0, [r1]
   3f680:	ldr	r0, [fp, #-4]
   3f684:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f688:	b	3f694 <flatcc_json_printer_int16_vector_field@@Base+0x1d4>
   3f68c:	ldr	r0, [fp, #-4]
   3f690:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3f694:	b	3f698 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   3f698:	ldr	r0, [sp, #12]
   3f69c:	bl	3c49c <flatcc_json_printer_int16_field@@Base+0x108>
   3f6a0:	ldr	lr, [fp, #-4]
   3f6a4:	ldr	r1, [lr, #20]
   3f6a8:	sxth	r0, r0
   3f6ac:	bl	3b354 <flatcc_json_printer_int16@@Base+0x40>
   3f6b0:	ldr	r1, [fp, #-4]
   3f6b4:	ldr	lr, [r1, #20]
   3f6b8:	add	r0, lr, r0
   3f6bc:	str	r0, [r1, #20]
   3f6c0:	ldr	r0, [sp, #12]
   3f6c4:	add	r0, r0, #2
   3f6c8:	str	r0, [sp, #12]
   3f6cc:	b	3f628 <flatcc_json_printer_int16_vector_field@@Base+0x168>
   3f6d0:	b	3f6d4 <flatcc_json_printer_int16_vector_field@@Base+0x214>
   3f6d4:	ldr	r0, [fp, #-4]
   3f6d8:	ldrsb	r0, [r0, #25]
   3f6dc:	cmp	r0, #0
   3f6e0:	beq	3f718 <flatcc_json_printer_int16_vector_field@@Base+0x258>
   3f6e4:	ldr	r0, [fp, #-4]
   3f6e8:	ldr	r1, [r0, #20]
   3f6ec:	add	r2, r1, #1
   3f6f0:	str	r2, [r0, #20]
   3f6f4:	movw	r0, #10
   3f6f8:	strb	r0, [r1]
   3f6fc:	ldr	r0, [fp, #-4]
   3f700:	ldr	r1, [r0, #32]
   3f704:	mvn	r2, #0
   3f708:	add	r1, r1, r2
   3f70c:	str	r1, [r0, #32]
   3f710:	ldr	r0, [fp, #-4]
   3f714:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f718:	ldr	r0, [fp, #-4]
   3f71c:	ldr	r1, [r0, #20]
   3f720:	add	r2, r1, #1
   3f724:	str	r2, [r0, #20]
   3f728:	movw	r0, #93	; 0x5d
   3f72c:	strb	r0, [r1]
   3f730:	b	3f734 <flatcc_json_printer_int16_vector_field@@Base+0x274>
   3f734:	mov	sp, fp
   3f738:	pop	{fp, pc}

0003f73c <flatcc_json_printer_int32_vector_field@@Base>:
   3f73c:	push	{fp, lr}
   3f740:	mov	fp, sp
   3f744:	sub	sp, sp, #32
   3f748:	ldr	ip, [fp, #8]
   3f74c:	str	r0, [fp, #-4]
   3f750:	str	r1, [fp, #-8]
   3f754:	str	r2, [fp, #-12]
   3f758:	str	r3, [sp, #16]
   3f75c:	ldr	r0, [fp, #-8]
   3f760:	ldr	r1, [fp, #-12]
   3f764:	str	ip, [sp, #4]
   3f768:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3f76c:	str	r0, [sp, #12]
   3f770:	ldr	r0, [sp, #12]
   3f774:	movw	r1, #0
   3f778:	cmp	r0, r1
   3f77c:	beq	3f9a8 <flatcc_json_printer_int32_vector_field@@Base+0x26c>
   3f780:	ldr	r0, [fp, #-8]
   3f784:	ldr	r1, [r0, #16]
   3f788:	add	r2, r1, #1
   3f78c:	str	r2, [r0, #16]
   3f790:	cmp	r1, #0
   3f794:	beq	3f7b0 <flatcc_json_printer_int32_vector_field@@Base+0x74>
   3f798:	ldr	r0, [fp, #-4]
   3f79c:	ldr	r1, [r0, #20]
   3f7a0:	add	r2, r1, #1
   3f7a4:	str	r2, [r0, #20]
   3f7a8:	movw	r0, #44	; 0x2c
   3f7ac:	strb	r0, [r1]
   3f7b0:	ldr	r0, [sp, #12]
   3f7b4:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3f7b8:	str	r0, [sp, #12]
   3f7bc:	ldr	r0, [sp, #12]
   3f7c0:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f7c4:	str	r0, [sp, #8]
   3f7c8:	ldr	r0, [sp, #12]
   3f7cc:	add	r0, r0, #4
   3f7d0:	str	r0, [sp, #12]
   3f7d4:	ldr	r0, [fp, #-4]
   3f7d8:	ldr	r1, [sp, #16]
   3f7dc:	ldr	r2, [fp, #8]
   3f7e0:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3f7e4:	ldr	r0, [fp, #-4]
   3f7e8:	ldr	r1, [r0, #32]
   3f7ec:	add	r1, r1, #1
   3f7f0:	str	r1, [r0, #32]
   3f7f4:	ldr	r0, [fp, #-4]
   3f7f8:	ldr	r1, [r0, #20]
   3f7fc:	add	r2, r1, #1
   3f800:	str	r2, [r0, #20]
   3f804:	movw	r0, #91	; 0x5b
   3f808:	strb	r0, [r1]
   3f80c:	ldr	r0, [sp, #8]
   3f810:	cmp	r0, #0
   3f814:	beq	3f89c <flatcc_json_printer_int32_vector_field@@Base+0x160>
   3f818:	b	3f81c <flatcc_json_printer_int32_vector_field@@Base+0xe0>
   3f81c:	ldr	r0, [fp, #-4]
   3f820:	ldrsb	r0, [r0, #25]
   3f824:	cmp	r0, #0
   3f828:	beq	3f850 <flatcc_json_printer_int32_vector_field@@Base+0x114>
   3f82c:	ldr	r0, [fp, #-4]
   3f830:	ldr	r1, [r0, #20]
   3f834:	add	r2, r1, #1
   3f838:	str	r2, [r0, #20]
   3f83c:	movw	r0, #10
   3f840:	strb	r0, [r1]
   3f844:	ldr	r0, [fp, #-4]
   3f848:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f84c:	b	3f858 <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   3f850:	ldr	r0, [fp, #-4]
   3f854:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3f858:	b	3f85c <flatcc_json_printer_int32_vector_field@@Base+0x120>
   3f85c:	ldr	r0, [sp, #12]
   3f860:	bl	3c5c8 <flatcc_json_printer_int32_field@@Base+0x104>
   3f864:	ldr	lr, [fp, #-4]
   3f868:	ldr	r1, [lr, #20]
   3f86c:	bl	3b408 <flatcc_json_printer_int32@@Base+0x3c>
   3f870:	ldr	r1, [fp, #-4]
   3f874:	ldr	lr, [r1, #20]
   3f878:	add	r0, lr, r0
   3f87c:	str	r0, [r1, #20]
   3f880:	ldr	r0, [sp, #12]
   3f884:	add	r0, r0, #4
   3f888:	str	r0, [sp, #12]
   3f88c:	ldr	r0, [sp, #8]
   3f890:	mvn	r1, #0
   3f894:	add	r0, r0, r1
   3f898:	str	r0, [sp, #8]
   3f89c:	b	3f8a0 <flatcc_json_printer_int32_vector_field@@Base+0x164>
   3f8a0:	ldr	r0, [sp, #8]
   3f8a4:	mvn	r1, #0
   3f8a8:	add	r1, r0, r1
   3f8ac:	str	r1, [sp, #8]
   3f8b0:	cmp	r0, #0
   3f8b4:	beq	3f944 <flatcc_json_printer_int32_vector_field@@Base+0x208>
   3f8b8:	ldr	r0, [fp, #-4]
   3f8bc:	ldr	r1, [r0, #20]
   3f8c0:	add	r2, r1, #1
   3f8c4:	str	r2, [r0, #20]
   3f8c8:	movw	r0, #44	; 0x2c
   3f8cc:	strb	r0, [r1]
   3f8d0:	ldr	r0, [fp, #-4]
   3f8d4:	ldrsb	r0, [r0, #25]
   3f8d8:	cmp	r0, #0
   3f8dc:	beq	3f904 <flatcc_json_printer_int32_vector_field@@Base+0x1c8>
   3f8e0:	ldr	r0, [fp, #-4]
   3f8e4:	ldr	r1, [r0, #20]
   3f8e8:	add	r2, r1, #1
   3f8ec:	str	r2, [r0, #20]
   3f8f0:	movw	r0, #10
   3f8f4:	strb	r0, [r1]
   3f8f8:	ldr	r0, [fp, #-4]
   3f8fc:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f900:	b	3f90c <flatcc_json_printer_int32_vector_field@@Base+0x1d0>
   3f904:	ldr	r0, [fp, #-4]
   3f908:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3f90c:	b	3f910 <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   3f910:	ldr	r0, [sp, #12]
   3f914:	bl	3c5c8 <flatcc_json_printer_int32_field@@Base+0x104>
   3f918:	ldr	lr, [fp, #-4]
   3f91c:	ldr	r1, [lr, #20]
   3f920:	bl	3b408 <flatcc_json_printer_int32@@Base+0x3c>
   3f924:	ldr	r1, [fp, #-4]
   3f928:	ldr	lr, [r1, #20]
   3f92c:	add	r0, lr, r0
   3f930:	str	r0, [r1, #20]
   3f934:	ldr	r0, [sp, #12]
   3f938:	add	r0, r0, #4
   3f93c:	str	r0, [sp, #12]
   3f940:	b	3f8a0 <flatcc_json_printer_int32_vector_field@@Base+0x164>
   3f944:	b	3f948 <flatcc_json_printer_int32_vector_field@@Base+0x20c>
   3f948:	ldr	r0, [fp, #-4]
   3f94c:	ldrsb	r0, [r0, #25]
   3f950:	cmp	r0, #0
   3f954:	beq	3f98c <flatcc_json_printer_int32_vector_field@@Base+0x250>
   3f958:	ldr	r0, [fp, #-4]
   3f95c:	ldr	r1, [r0, #20]
   3f960:	add	r2, r1, #1
   3f964:	str	r2, [r0, #20]
   3f968:	movw	r0, #10
   3f96c:	strb	r0, [r1]
   3f970:	ldr	r0, [fp, #-4]
   3f974:	ldr	r1, [r0, #32]
   3f978:	mvn	r2, #0
   3f97c:	add	r1, r1, r2
   3f980:	str	r1, [r0, #32]
   3f984:	ldr	r0, [fp, #-4]
   3f988:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3f98c:	ldr	r0, [fp, #-4]
   3f990:	ldr	r1, [r0, #20]
   3f994:	add	r2, r1, #1
   3f998:	str	r2, [r0, #20]
   3f99c:	movw	r0, #93	; 0x5d
   3f9a0:	strb	r0, [r1]
   3f9a4:	b	3f9a8 <flatcc_json_printer_int32_vector_field@@Base+0x26c>
   3f9a8:	mov	sp, fp
   3f9ac:	pop	{fp, pc}

0003f9b0 <flatcc_json_printer_int64_vector_field@@Base>:
   3f9b0:	push	{fp, lr}
   3f9b4:	mov	fp, sp
   3f9b8:	sub	sp, sp, #32
   3f9bc:	ldr	ip, [fp, #8]
   3f9c0:	str	r0, [fp, #-4]
   3f9c4:	str	r1, [fp, #-8]
   3f9c8:	str	r2, [fp, #-12]
   3f9cc:	str	r3, [sp, #16]
   3f9d0:	ldr	r0, [fp, #-8]
   3f9d4:	ldr	r1, [fp, #-12]
   3f9d8:	str	ip, [sp, #4]
   3f9dc:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3f9e0:	str	r0, [sp, #12]
   3f9e4:	ldr	r0, [sp, #12]
   3f9e8:	movw	r1, #0
   3f9ec:	cmp	r0, r1
   3f9f0:	beq	3fc1c <flatcc_json_printer_int64_vector_field@@Base+0x26c>
   3f9f4:	ldr	r0, [fp, #-8]
   3f9f8:	ldr	r1, [r0, #16]
   3f9fc:	add	r2, r1, #1
   3fa00:	str	r2, [r0, #16]
   3fa04:	cmp	r1, #0
   3fa08:	beq	3fa24 <flatcc_json_printer_int64_vector_field@@Base+0x74>
   3fa0c:	ldr	r0, [fp, #-4]
   3fa10:	ldr	r1, [r0, #20]
   3fa14:	add	r2, r1, #1
   3fa18:	str	r2, [r0, #20]
   3fa1c:	movw	r0, #44	; 0x2c
   3fa20:	strb	r0, [r1]
   3fa24:	ldr	r0, [sp, #12]
   3fa28:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3fa2c:	str	r0, [sp, #12]
   3fa30:	ldr	r0, [sp, #12]
   3fa34:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3fa38:	str	r0, [sp, #8]
   3fa3c:	ldr	r0, [sp, #12]
   3fa40:	add	r0, r0, #4
   3fa44:	str	r0, [sp, #12]
   3fa48:	ldr	r0, [fp, #-4]
   3fa4c:	ldr	r1, [sp, #16]
   3fa50:	ldr	r2, [fp, #8]
   3fa54:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3fa58:	ldr	r0, [fp, #-4]
   3fa5c:	ldr	r1, [r0, #32]
   3fa60:	add	r1, r1, #1
   3fa64:	str	r1, [r0, #32]
   3fa68:	ldr	r0, [fp, #-4]
   3fa6c:	ldr	r1, [r0, #20]
   3fa70:	add	r2, r1, #1
   3fa74:	str	r2, [r0, #20]
   3fa78:	movw	r0, #91	; 0x5b
   3fa7c:	strb	r0, [r1]
   3fa80:	ldr	r0, [sp, #8]
   3fa84:	cmp	r0, #0
   3fa88:	beq	3fb10 <flatcc_json_printer_int64_vector_field@@Base+0x160>
   3fa8c:	b	3fa90 <flatcc_json_printer_int64_vector_field@@Base+0xe0>
   3fa90:	ldr	r0, [fp, #-4]
   3fa94:	ldrsb	r0, [r0, #25]
   3fa98:	cmp	r0, #0
   3fa9c:	beq	3fac4 <flatcc_json_printer_int64_vector_field@@Base+0x114>
   3faa0:	ldr	r0, [fp, #-4]
   3faa4:	ldr	r1, [r0, #20]
   3faa8:	add	r2, r1, #1
   3faac:	str	r2, [r0, #20]
   3fab0:	movw	r0, #10
   3fab4:	strb	r0, [r1]
   3fab8:	ldr	r0, [fp, #-4]
   3fabc:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3fac0:	b	3facc <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   3fac4:	ldr	r0, [fp, #-4]
   3fac8:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3facc:	b	3fad0 <flatcc_json_printer_int64_vector_field@@Base+0x120>
   3fad0:	ldr	r0, [sp, #12]
   3fad4:	bl	3c720 <flatcc_json_printer_int64_field@@Base+0x134>
   3fad8:	ldr	lr, [fp, #-4]
   3fadc:	ldr	r2, [lr, #20]
   3fae0:	bl	3b4c0 <flatcc_json_printer_int64@@Base+0x44>
   3fae4:	ldr	r1, [fp, #-4]
   3fae8:	ldr	r2, [r1, #20]
   3faec:	add	r0, r2, r0
   3faf0:	str	r0, [r1, #20]
   3faf4:	ldr	r0, [sp, #12]
   3faf8:	add	r0, r0, #8
   3fafc:	str	r0, [sp, #12]
   3fb00:	ldr	r0, [sp, #8]
   3fb04:	mvn	r1, #0
   3fb08:	add	r0, r0, r1
   3fb0c:	str	r0, [sp, #8]
   3fb10:	b	3fb14 <flatcc_json_printer_int64_vector_field@@Base+0x164>
   3fb14:	ldr	r0, [sp, #8]
   3fb18:	mvn	r1, #0
   3fb1c:	add	r1, r0, r1
   3fb20:	str	r1, [sp, #8]
   3fb24:	cmp	r0, #0
   3fb28:	beq	3fbb8 <flatcc_json_printer_int64_vector_field@@Base+0x208>
   3fb2c:	ldr	r0, [fp, #-4]
   3fb30:	ldr	r1, [r0, #20]
   3fb34:	add	r2, r1, #1
   3fb38:	str	r2, [r0, #20]
   3fb3c:	movw	r0, #44	; 0x2c
   3fb40:	strb	r0, [r1]
   3fb44:	ldr	r0, [fp, #-4]
   3fb48:	ldrsb	r0, [r0, #25]
   3fb4c:	cmp	r0, #0
   3fb50:	beq	3fb78 <flatcc_json_printer_int64_vector_field@@Base+0x1c8>
   3fb54:	ldr	r0, [fp, #-4]
   3fb58:	ldr	r1, [r0, #20]
   3fb5c:	add	r2, r1, #1
   3fb60:	str	r2, [r0, #20]
   3fb64:	movw	r0, #10
   3fb68:	strb	r0, [r1]
   3fb6c:	ldr	r0, [fp, #-4]
   3fb70:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3fb74:	b	3fb80 <flatcc_json_printer_int64_vector_field@@Base+0x1d0>
   3fb78:	ldr	r0, [fp, #-4]
   3fb7c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3fb80:	b	3fb84 <flatcc_json_printer_int64_vector_field@@Base+0x1d4>
   3fb84:	ldr	r0, [sp, #12]
   3fb88:	bl	3c720 <flatcc_json_printer_int64_field@@Base+0x134>
   3fb8c:	ldr	lr, [fp, #-4]
   3fb90:	ldr	r2, [lr, #20]
   3fb94:	bl	3b4c0 <flatcc_json_printer_int64@@Base+0x44>
   3fb98:	ldr	r1, [fp, #-4]
   3fb9c:	ldr	r2, [r1, #20]
   3fba0:	add	r0, r2, r0
   3fba4:	str	r0, [r1, #20]
   3fba8:	ldr	r0, [sp, #12]
   3fbac:	add	r0, r0, #8
   3fbb0:	str	r0, [sp, #12]
   3fbb4:	b	3fb14 <flatcc_json_printer_int64_vector_field@@Base+0x164>
   3fbb8:	b	3fbbc <flatcc_json_printer_int64_vector_field@@Base+0x20c>
   3fbbc:	ldr	r0, [fp, #-4]
   3fbc0:	ldrsb	r0, [r0, #25]
   3fbc4:	cmp	r0, #0
   3fbc8:	beq	3fc00 <flatcc_json_printer_int64_vector_field@@Base+0x250>
   3fbcc:	ldr	r0, [fp, #-4]
   3fbd0:	ldr	r1, [r0, #20]
   3fbd4:	add	r2, r1, #1
   3fbd8:	str	r2, [r0, #20]
   3fbdc:	movw	r0, #10
   3fbe0:	strb	r0, [r1]
   3fbe4:	ldr	r0, [fp, #-4]
   3fbe8:	ldr	r1, [r0, #32]
   3fbec:	mvn	r2, #0
   3fbf0:	add	r1, r1, r2
   3fbf4:	str	r1, [r0, #32]
   3fbf8:	ldr	r0, [fp, #-4]
   3fbfc:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3fc00:	ldr	r0, [fp, #-4]
   3fc04:	ldr	r1, [r0, #20]
   3fc08:	add	r2, r1, #1
   3fc0c:	str	r2, [r0, #20]
   3fc10:	movw	r0, #93	; 0x5d
   3fc14:	strb	r0, [r1]
   3fc18:	b	3fc1c <flatcc_json_printer_int64_vector_field@@Base+0x26c>
   3fc1c:	mov	sp, fp
   3fc20:	pop	{fp, pc}

0003fc24 <flatcc_json_printer_bool_vector_field@@Base>:
   3fc24:	push	{fp, lr}
   3fc28:	mov	fp, sp
   3fc2c:	sub	sp, sp, #32
   3fc30:	ldr	ip, [fp, #8]
   3fc34:	str	r0, [fp, #-4]
   3fc38:	str	r1, [fp, #-8]
   3fc3c:	str	r2, [fp, #-12]
   3fc40:	str	r3, [sp, #16]
   3fc44:	ldr	r0, [fp, #-8]
   3fc48:	ldr	r1, [fp, #-12]
   3fc4c:	str	ip, [sp, #4]
   3fc50:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3fc54:	str	r0, [sp, #12]
   3fc58:	ldr	r0, [sp, #12]
   3fc5c:	movw	r1, #0
   3fc60:	cmp	r0, r1
   3fc64:	beq	3fe98 <flatcc_json_printer_bool_vector_field@@Base+0x274>
   3fc68:	ldr	r0, [fp, #-8]
   3fc6c:	ldr	r1, [r0, #16]
   3fc70:	add	r2, r1, #1
   3fc74:	str	r2, [r0, #16]
   3fc78:	cmp	r1, #0
   3fc7c:	beq	3fc98 <flatcc_json_printer_bool_vector_field@@Base+0x74>
   3fc80:	ldr	r0, [fp, #-4]
   3fc84:	ldr	r1, [r0, #20]
   3fc88:	add	r2, r1, #1
   3fc8c:	str	r2, [r0, #20]
   3fc90:	movw	r0, #44	; 0x2c
   3fc94:	strb	r0, [r1]
   3fc98:	ldr	r0, [sp, #12]
   3fc9c:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3fca0:	str	r0, [sp, #12]
   3fca4:	ldr	r0, [sp, #12]
   3fca8:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3fcac:	str	r0, [sp, #8]
   3fcb0:	ldr	r0, [sp, #12]
   3fcb4:	add	r0, r0, #4
   3fcb8:	str	r0, [sp, #12]
   3fcbc:	ldr	r0, [fp, #-4]
   3fcc0:	ldr	r1, [sp, #16]
   3fcc4:	ldr	r2, [fp, #8]
   3fcc8:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3fccc:	ldr	r0, [fp, #-4]
   3fcd0:	ldr	r1, [r0, #32]
   3fcd4:	add	r1, r1, #1
   3fcd8:	str	r1, [r0, #32]
   3fcdc:	ldr	r0, [fp, #-4]
   3fce0:	ldr	r1, [r0, #20]
   3fce4:	add	r2, r1, #1
   3fce8:	str	r2, [r0, #20]
   3fcec:	movw	r0, #91	; 0x5b
   3fcf0:	strb	r0, [r1]
   3fcf4:	ldr	r0, [sp, #8]
   3fcf8:	cmp	r0, #0
   3fcfc:	beq	3fd88 <flatcc_json_printer_bool_vector_field@@Base+0x164>
   3fd00:	b	3fd04 <flatcc_json_printer_bool_vector_field@@Base+0xe0>
   3fd04:	ldr	r0, [fp, #-4]
   3fd08:	ldrsb	r0, [r0, #25]
   3fd0c:	cmp	r0, #0
   3fd10:	beq	3fd38 <flatcc_json_printer_bool_vector_field@@Base+0x114>
   3fd14:	ldr	r0, [fp, #-4]
   3fd18:	ldr	r1, [r0, #20]
   3fd1c:	add	r2, r1, #1
   3fd20:	str	r2, [r0, #20]
   3fd24:	movw	r0, #10
   3fd28:	strb	r0, [r1]
   3fd2c:	ldr	r0, [fp, #-4]
   3fd30:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3fd34:	b	3fd40 <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   3fd38:	ldr	r0, [fp, #-4]
   3fd3c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3fd40:	b	3fd44 <flatcc_json_printer_bool_vector_field@@Base+0x120>
   3fd44:	ldr	r0, [sp, #12]
   3fd48:	bl	3c858 <flatcc_json_printer_bool_field@@Base+0x104>
   3fd4c:	and	r0, r0, #255	; 0xff
   3fd50:	ldr	lr, [fp, #-4]
   3fd54:	ldr	r1, [lr, #20]
   3fd58:	bl	3c880 <flatcc_json_printer_bool_field@@Base+0x12c>
   3fd5c:	ldr	r1, [fp, #-4]
   3fd60:	ldr	lr, [r1, #20]
   3fd64:	add	r0, lr, r0
   3fd68:	str	r0, [r1, #20]
   3fd6c:	ldr	r0, [sp, #12]
   3fd70:	add	r0, r0, #1
   3fd74:	str	r0, [sp, #12]
   3fd78:	ldr	r0, [sp, #8]
   3fd7c:	mvn	r1, #0
   3fd80:	add	r0, r0, r1
   3fd84:	str	r0, [sp, #8]
   3fd88:	b	3fd8c <flatcc_json_printer_bool_vector_field@@Base+0x168>
   3fd8c:	ldr	r0, [sp, #8]
   3fd90:	mvn	r1, #0
   3fd94:	add	r1, r0, r1
   3fd98:	str	r1, [sp, #8]
   3fd9c:	cmp	r0, #0
   3fda0:	beq	3fe34 <flatcc_json_printer_bool_vector_field@@Base+0x210>
   3fda4:	ldr	r0, [fp, #-4]
   3fda8:	ldr	r1, [r0, #20]
   3fdac:	add	r2, r1, #1
   3fdb0:	str	r2, [r0, #20]
   3fdb4:	movw	r0, #44	; 0x2c
   3fdb8:	strb	r0, [r1]
   3fdbc:	ldr	r0, [fp, #-4]
   3fdc0:	ldrsb	r0, [r0, #25]
   3fdc4:	cmp	r0, #0
   3fdc8:	beq	3fdf0 <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   3fdcc:	ldr	r0, [fp, #-4]
   3fdd0:	ldr	r1, [r0, #20]
   3fdd4:	add	r2, r1, #1
   3fdd8:	str	r2, [r0, #20]
   3fddc:	movw	r0, #10
   3fde0:	strb	r0, [r1]
   3fde4:	ldr	r0, [fp, #-4]
   3fde8:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3fdec:	b	3fdf8 <flatcc_json_printer_bool_vector_field@@Base+0x1d4>
   3fdf0:	ldr	r0, [fp, #-4]
   3fdf4:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3fdf8:	b	3fdfc <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   3fdfc:	ldr	r0, [sp, #12]
   3fe00:	bl	3c858 <flatcc_json_printer_bool_field@@Base+0x104>
   3fe04:	and	r0, r0, #255	; 0xff
   3fe08:	ldr	lr, [fp, #-4]
   3fe0c:	ldr	r1, [lr, #20]
   3fe10:	bl	3c880 <flatcc_json_printer_bool_field@@Base+0x12c>
   3fe14:	ldr	r1, [fp, #-4]
   3fe18:	ldr	lr, [r1, #20]
   3fe1c:	add	r0, lr, r0
   3fe20:	str	r0, [r1, #20]
   3fe24:	ldr	r0, [sp, #12]
   3fe28:	add	r0, r0, #1
   3fe2c:	str	r0, [sp, #12]
   3fe30:	b	3fd8c <flatcc_json_printer_bool_vector_field@@Base+0x168>
   3fe34:	b	3fe38 <flatcc_json_printer_bool_vector_field@@Base+0x214>
   3fe38:	ldr	r0, [fp, #-4]
   3fe3c:	ldrsb	r0, [r0, #25]
   3fe40:	cmp	r0, #0
   3fe44:	beq	3fe7c <flatcc_json_printer_bool_vector_field@@Base+0x258>
   3fe48:	ldr	r0, [fp, #-4]
   3fe4c:	ldr	r1, [r0, #20]
   3fe50:	add	r2, r1, #1
   3fe54:	str	r2, [r0, #20]
   3fe58:	movw	r0, #10
   3fe5c:	strb	r0, [r1]
   3fe60:	ldr	r0, [fp, #-4]
   3fe64:	ldr	r1, [r0, #32]
   3fe68:	mvn	r2, #0
   3fe6c:	add	r1, r1, r2
   3fe70:	str	r1, [r0, #32]
   3fe74:	ldr	r0, [fp, #-4]
   3fe78:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3fe7c:	ldr	r0, [fp, #-4]
   3fe80:	ldr	r1, [r0, #20]
   3fe84:	add	r2, r1, #1
   3fe88:	str	r2, [r0, #20]
   3fe8c:	movw	r0, #93	; 0x5d
   3fe90:	strb	r0, [r1]
   3fe94:	b	3fe98 <flatcc_json_printer_bool_vector_field@@Base+0x274>
   3fe98:	mov	sp, fp
   3fe9c:	pop	{fp, pc}

0003fea0 <flatcc_json_printer_float_vector_field@@Base>:
   3fea0:	push	{fp, lr}
   3fea4:	mov	fp, sp
   3fea8:	sub	sp, sp, #32
   3feac:	ldr	ip, [fp, #8]
   3feb0:	str	r0, [fp, #-4]
   3feb4:	str	r1, [fp, #-8]
   3feb8:	str	r2, [fp, #-12]
   3febc:	str	r3, [sp, #16]
   3fec0:	ldr	r0, [fp, #-8]
   3fec4:	ldr	r1, [fp, #-12]
   3fec8:	str	ip, [sp, #4]
   3fecc:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   3fed0:	str	r0, [sp, #12]
   3fed4:	ldr	r0, [sp, #12]
   3fed8:	movw	r1, #0
   3fedc:	cmp	r0, r1
   3fee0:	beq	40114 <flatcc_json_printer_float_vector_field@@Base+0x274>
   3fee4:	ldr	r0, [fp, #-8]
   3fee8:	ldr	r1, [r0, #16]
   3feec:	add	r2, r1, #1
   3fef0:	str	r2, [r0, #16]
   3fef4:	cmp	r1, #0
   3fef8:	beq	3ff14 <flatcc_json_printer_float_vector_field@@Base+0x74>
   3fefc:	ldr	r0, [fp, #-4]
   3ff00:	ldr	r1, [r0, #20]
   3ff04:	add	r2, r1, #1
   3ff08:	str	r2, [r0, #20]
   3ff0c:	movw	r0, #44	; 0x2c
   3ff10:	strb	r0, [r1]
   3ff14:	ldr	r0, [sp, #12]
   3ff18:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   3ff1c:	str	r0, [sp, #12]
   3ff20:	ldr	r0, [sp, #12]
   3ff24:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3ff28:	str	r0, [sp, #8]
   3ff2c:	ldr	r0, [sp, #12]
   3ff30:	add	r0, r0, #4
   3ff34:	str	r0, [sp, #12]
   3ff38:	ldr	r0, [fp, #-4]
   3ff3c:	ldr	r1, [sp, #16]
   3ff40:	ldr	r2, [fp, #8]
   3ff44:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   3ff48:	ldr	r0, [fp, #-4]
   3ff4c:	ldr	r1, [r0, #32]
   3ff50:	add	r1, r1, #1
   3ff54:	str	r1, [r0, #32]
   3ff58:	ldr	r0, [fp, #-4]
   3ff5c:	ldr	r1, [r0, #20]
   3ff60:	add	r2, r1, #1
   3ff64:	str	r2, [r0, #20]
   3ff68:	movw	r0, #91	; 0x5b
   3ff6c:	strb	r0, [r1]
   3ff70:	ldr	r0, [sp, #8]
   3ff74:	cmp	r0, #0
   3ff78:	beq	40004 <flatcc_json_printer_float_vector_field@@Base+0x164>
   3ff7c:	b	3ff80 <flatcc_json_printer_float_vector_field@@Base+0xe0>
   3ff80:	ldr	r0, [fp, #-4]
   3ff84:	ldrsb	r0, [r0, #25]
   3ff88:	cmp	r0, #0
   3ff8c:	beq	3ffb4 <flatcc_json_printer_float_vector_field@@Base+0x114>
   3ff90:	ldr	r0, [fp, #-4]
   3ff94:	ldr	r1, [r0, #20]
   3ff98:	add	r2, r1, #1
   3ff9c:	str	r2, [r0, #20]
   3ffa0:	movw	r0, #10
   3ffa4:	strb	r0, [r1]
   3ffa8:	ldr	r0, [fp, #-4]
   3ffac:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   3ffb0:	b	3ffbc <flatcc_json_printer_float_vector_field@@Base+0x11c>
   3ffb4:	ldr	r0, [fp, #-4]
   3ffb8:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   3ffbc:	b	3ffc0 <flatcc_json_printer_float_vector_field@@Base+0x120>
   3ffc0:	ldr	r0, [sp, #12]
   3ffc4:	bl	3ca38 <flatcc_json_printer_float_field@@Base+0x108>
   3ffc8:	vcvt.f64.f32	d0, s0
   3ffcc:	ldr	r0, [fp, #-4]
   3ffd0:	ldr	r0, [r0, #20]
   3ffd4:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3ffd8:	ldr	lr, [fp, #-4]
   3ffdc:	ldr	r1, [lr, #20]
   3ffe0:	add	r0, r1, r0
   3ffe4:	str	r0, [lr, #20]
   3ffe8:	ldr	r0, [sp, #12]
   3ffec:	add	r0, r0, #4
   3fff0:	str	r0, [sp, #12]
   3fff4:	ldr	r0, [sp, #8]
   3fff8:	mvn	r1, #0
   3fffc:	add	r0, r0, r1
   40000:	str	r0, [sp, #8]
   40004:	b	40008 <flatcc_json_printer_float_vector_field@@Base+0x168>
   40008:	ldr	r0, [sp, #8]
   4000c:	mvn	r1, #0
   40010:	add	r1, r0, r1
   40014:	str	r1, [sp, #8]
   40018:	cmp	r0, #0
   4001c:	beq	400b0 <flatcc_json_printer_float_vector_field@@Base+0x210>
   40020:	ldr	r0, [fp, #-4]
   40024:	ldr	r1, [r0, #20]
   40028:	add	r2, r1, #1
   4002c:	str	r2, [r0, #20]
   40030:	movw	r0, #44	; 0x2c
   40034:	strb	r0, [r1]
   40038:	ldr	r0, [fp, #-4]
   4003c:	ldrsb	r0, [r0, #25]
   40040:	cmp	r0, #0
   40044:	beq	4006c <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   40048:	ldr	r0, [fp, #-4]
   4004c:	ldr	r1, [r0, #20]
   40050:	add	r2, r1, #1
   40054:	str	r2, [r0, #20]
   40058:	movw	r0, #10
   4005c:	strb	r0, [r1]
   40060:	ldr	r0, [fp, #-4]
   40064:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   40068:	b	40074 <flatcc_json_printer_float_vector_field@@Base+0x1d4>
   4006c:	ldr	r0, [fp, #-4]
   40070:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   40074:	b	40078 <flatcc_json_printer_float_vector_field@@Base+0x1d8>
   40078:	ldr	r0, [sp, #12]
   4007c:	bl	3ca38 <flatcc_json_printer_float_field@@Base+0x108>
   40080:	vcvt.f64.f32	d0, s0
   40084:	ldr	r0, [fp, #-4]
   40088:	ldr	r0, [r0, #20]
   4008c:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   40090:	ldr	lr, [fp, #-4]
   40094:	ldr	r1, [lr, #20]
   40098:	add	r0, r1, r0
   4009c:	str	r0, [lr, #20]
   400a0:	ldr	r0, [sp, #12]
   400a4:	add	r0, r0, #4
   400a8:	str	r0, [sp, #12]
   400ac:	b	40008 <flatcc_json_printer_float_vector_field@@Base+0x168>
   400b0:	b	400b4 <flatcc_json_printer_float_vector_field@@Base+0x214>
   400b4:	ldr	r0, [fp, #-4]
   400b8:	ldrsb	r0, [r0, #25]
   400bc:	cmp	r0, #0
   400c0:	beq	400f8 <flatcc_json_printer_float_vector_field@@Base+0x258>
   400c4:	ldr	r0, [fp, #-4]
   400c8:	ldr	r1, [r0, #20]
   400cc:	add	r2, r1, #1
   400d0:	str	r2, [r0, #20]
   400d4:	movw	r0, #10
   400d8:	strb	r0, [r1]
   400dc:	ldr	r0, [fp, #-4]
   400e0:	ldr	r1, [r0, #32]
   400e4:	mvn	r2, #0
   400e8:	add	r1, r1, r2
   400ec:	str	r1, [r0, #32]
   400f0:	ldr	r0, [fp, #-4]
   400f4:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   400f8:	ldr	r0, [fp, #-4]
   400fc:	ldr	r1, [r0, #20]
   40100:	add	r2, r1, #1
   40104:	str	r2, [r0, #20]
   40108:	movw	r0, #93	; 0x5d
   4010c:	strb	r0, [r1]
   40110:	b	40114 <flatcc_json_printer_float_vector_field@@Base+0x274>
   40114:	mov	sp, fp
   40118:	pop	{fp, pc}

0004011c <flatcc_json_printer_double_vector_field@@Base>:
   4011c:	push	{fp, lr}
   40120:	mov	fp, sp
   40124:	sub	sp, sp, #32
   40128:	ldr	ip, [fp, #8]
   4012c:	str	r0, [fp, #-4]
   40130:	str	r1, [fp, #-8]
   40134:	str	r2, [fp, #-12]
   40138:	str	r3, [sp, #16]
   4013c:	ldr	r0, [fp, #-8]
   40140:	ldr	r1, [fp, #-12]
   40144:	str	ip, [sp, #4]
   40148:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   4014c:	str	r0, [sp, #12]
   40150:	ldr	r0, [sp, #12]
   40154:	movw	r1, #0
   40158:	cmp	r0, r1
   4015c:	beq	40388 <flatcc_json_printer_double_vector_field@@Base+0x26c>
   40160:	ldr	r0, [fp, #-8]
   40164:	ldr	r1, [r0, #16]
   40168:	add	r2, r1, #1
   4016c:	str	r2, [r0, #16]
   40170:	cmp	r1, #0
   40174:	beq	40190 <flatcc_json_printer_double_vector_field@@Base+0x74>
   40178:	ldr	r0, [fp, #-4]
   4017c:	ldr	r1, [r0, #20]
   40180:	add	r2, r1, #1
   40184:	str	r2, [r0, #20]
   40188:	movw	r0, #44	; 0x2c
   4018c:	strb	r0, [r1]
   40190:	ldr	r0, [sp, #12]
   40194:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   40198:	str	r0, [sp, #12]
   4019c:	ldr	r0, [sp, #12]
   401a0:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   401a4:	str	r0, [sp, #8]
   401a8:	ldr	r0, [sp, #12]
   401ac:	add	r0, r0, #4
   401b0:	str	r0, [sp, #12]
   401b4:	ldr	r0, [fp, #-4]
   401b8:	ldr	r1, [sp, #16]
   401bc:	ldr	r2, [fp, #8]
   401c0:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   401c4:	ldr	r0, [fp, #-4]
   401c8:	ldr	r1, [r0, #32]
   401cc:	add	r1, r1, #1
   401d0:	str	r1, [r0, #32]
   401d4:	ldr	r0, [fp, #-4]
   401d8:	ldr	r1, [r0, #20]
   401dc:	add	r2, r1, #1
   401e0:	str	r2, [r0, #20]
   401e4:	movw	r0, #91	; 0x5b
   401e8:	strb	r0, [r1]
   401ec:	ldr	r0, [sp, #8]
   401f0:	cmp	r0, #0
   401f4:	beq	4027c <flatcc_json_printer_double_vector_field@@Base+0x160>
   401f8:	b	401fc <flatcc_json_printer_double_vector_field@@Base+0xe0>
   401fc:	ldr	r0, [fp, #-4]
   40200:	ldrsb	r0, [r0, #25]
   40204:	cmp	r0, #0
   40208:	beq	40230 <flatcc_json_printer_double_vector_field@@Base+0x114>
   4020c:	ldr	r0, [fp, #-4]
   40210:	ldr	r1, [r0, #20]
   40214:	add	r2, r1, #1
   40218:	str	r2, [r0, #20]
   4021c:	movw	r0, #10
   40220:	strb	r0, [r1]
   40224:	ldr	r0, [fp, #-4]
   40228:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   4022c:	b	40238 <flatcc_json_printer_double_vector_field@@Base+0x11c>
   40230:	ldr	r0, [fp, #-4]
   40234:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   40238:	b	4023c <flatcc_json_printer_double_vector_field@@Base+0x120>
   4023c:	ldr	r0, [sp, #12]
   40240:	bl	3cb60 <flatcc_json_printer_double_field@@Base+0x104>
   40244:	ldr	r0, [fp, #-4]
   40248:	ldr	r0, [r0, #20]
   4024c:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   40250:	ldr	lr, [fp, #-4]
   40254:	ldr	r1, [lr, #20]
   40258:	add	r0, r1, r0
   4025c:	str	r0, [lr, #20]
   40260:	ldr	r0, [sp, #12]
   40264:	add	r0, r0, #8
   40268:	str	r0, [sp, #12]
   4026c:	ldr	r0, [sp, #8]
   40270:	mvn	r1, #0
   40274:	add	r0, r0, r1
   40278:	str	r0, [sp, #8]
   4027c:	b	40280 <flatcc_json_printer_double_vector_field@@Base+0x164>
   40280:	ldr	r0, [sp, #8]
   40284:	mvn	r1, #0
   40288:	add	r1, r0, r1
   4028c:	str	r1, [sp, #8]
   40290:	cmp	r0, #0
   40294:	beq	40324 <flatcc_json_printer_double_vector_field@@Base+0x208>
   40298:	ldr	r0, [fp, #-4]
   4029c:	ldr	r1, [r0, #20]
   402a0:	add	r2, r1, #1
   402a4:	str	r2, [r0, #20]
   402a8:	movw	r0, #44	; 0x2c
   402ac:	strb	r0, [r1]
   402b0:	ldr	r0, [fp, #-4]
   402b4:	ldrsb	r0, [r0, #25]
   402b8:	cmp	r0, #0
   402bc:	beq	402e4 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   402c0:	ldr	r0, [fp, #-4]
   402c4:	ldr	r1, [r0, #20]
   402c8:	add	r2, r1, #1
   402cc:	str	r2, [r0, #20]
   402d0:	movw	r0, #10
   402d4:	strb	r0, [r1]
   402d8:	ldr	r0, [fp, #-4]
   402dc:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   402e0:	b	402ec <flatcc_json_printer_double_vector_field@@Base+0x1d0>
   402e4:	ldr	r0, [fp, #-4]
   402e8:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   402ec:	b	402f0 <flatcc_json_printer_double_vector_field@@Base+0x1d4>
   402f0:	ldr	r0, [sp, #12]
   402f4:	bl	3cb60 <flatcc_json_printer_double_field@@Base+0x104>
   402f8:	ldr	r0, [fp, #-4]
   402fc:	ldr	r0, [r0, #20]
   40300:	bl	38e90 <flatcc_json_printer_fmt_float@@Base+0x2c>
   40304:	ldr	lr, [fp, #-4]
   40308:	ldr	r1, [lr, #20]
   4030c:	add	r0, r1, r0
   40310:	str	r0, [lr, #20]
   40314:	ldr	r0, [sp, #12]
   40318:	add	r0, r0, #8
   4031c:	str	r0, [sp, #12]
   40320:	b	40280 <flatcc_json_printer_double_vector_field@@Base+0x164>
   40324:	b	40328 <flatcc_json_printer_double_vector_field@@Base+0x20c>
   40328:	ldr	r0, [fp, #-4]
   4032c:	ldrsb	r0, [r0, #25]
   40330:	cmp	r0, #0
   40334:	beq	4036c <flatcc_json_printer_double_vector_field@@Base+0x250>
   40338:	ldr	r0, [fp, #-4]
   4033c:	ldr	r1, [r0, #20]
   40340:	add	r2, r1, #1
   40344:	str	r2, [r0, #20]
   40348:	movw	r0, #10
   4034c:	strb	r0, [r1]
   40350:	ldr	r0, [fp, #-4]
   40354:	ldr	r1, [r0, #32]
   40358:	mvn	r2, #0
   4035c:	add	r1, r1, r2
   40360:	str	r1, [r0, #32]
   40364:	ldr	r0, [fp, #-4]
   40368:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   4036c:	ldr	r0, [fp, #-4]
   40370:	ldr	r1, [r0, #20]
   40374:	add	r2, r1, #1
   40378:	str	r2, [r0, #20]
   4037c:	movw	r0, #93	; 0x5d
   40380:	strb	r0, [r1]
   40384:	b	40388 <flatcc_json_printer_double_vector_field@@Base+0x26c>
   40388:	mov	sp, fp
   4038c:	pop	{fp, pc}

00040390 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   40390:	push	{fp, lr}
   40394:	mov	fp, sp
   40398:	sub	sp, sp, #64	; 0x40
   4039c:	ldr	ip, [fp, #12]
   403a0:	ldr	lr, [fp, #8]
   403a4:	str	r0, [fp, #-4]
   403a8:	str	r1, [fp, #-8]
   403ac:	str	r2, [fp, #-12]
   403b0:	str	r3, [fp, #-16]
   403b4:	ldr	r0, [fp, #-4]
   403b8:	ldrsb	r0, [r0, #27]
   403bc:	cmp	r0, #0
   403c0:	str	lr, [fp, #-28]	; 0xffffffe4
   403c4:	str	ip, [sp, #32]
   403c8:	beq	403ec <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   403cc:	ldr	r0, [fp, #-4]
   403d0:	ldr	r1, [fp, #-8]
   403d4:	ldr	r2, [fp, #-12]
   403d8:	ldr	r3, [fp, #-16]
   403dc:	ldr	ip, [fp, #8]
   403e0:	str	ip, [sp]
   403e4:	bl	3e59c <flatcc_json_printer_utype_vector_field@@Base>
   403e8:	b	4065c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2cc>
   403ec:	ldr	r0, [fp, #-8]
   403f0:	ldr	r1, [fp, #-12]
   403f4:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   403f8:	str	r0, [fp, #-20]	; 0xffffffec
   403fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   40400:	movw	r1, #0
   40404:	cmp	r0, r1
   40408:	beq	4065c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2cc>
   4040c:	ldr	r0, [fp, #-8]
   40410:	ldr	r1, [r0, #16]
   40414:	add	r2, r1, #1
   40418:	str	r2, [r0, #16]
   4041c:	cmp	r1, #0
   40420:	beq	4043c <flatcc_json_printer_utype_enum_vector_field@@Base+0xac>
   40424:	ldr	r0, [fp, #-4]
   40428:	ldr	r1, [r0, #20]
   4042c:	add	r2, r1, #1
   40430:	str	r2, [r0, #20]
   40434:	movw	r0, #44	; 0x2c
   40438:	strb	r0, [r1]
   4043c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40440:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   40444:	str	r0, [fp, #-20]	; 0xffffffec
   40448:	ldr	r0, [fp, #-20]	; 0xffffffec
   4044c:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40450:	str	r0, [fp, #-24]	; 0xffffffe8
   40454:	ldr	r0, [fp, #-20]	; 0xffffffec
   40458:	add	r0, r0, #4
   4045c:	str	r0, [fp, #-20]	; 0xffffffec
   40460:	ldr	r0, [fp, #-4]
   40464:	ldr	r1, [fp, #-16]
   40468:	ldr	r2, [fp, #8]
   4046c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   40470:	ldr	r0, [fp, #-4]
   40474:	ldr	r1, [r0, #32]
   40478:	add	r1, r1, #1
   4047c:	str	r1, [r0, #32]
   40480:	ldr	r0, [fp, #-4]
   40484:	ldr	r1, [r0, #20]
   40488:	add	r2, r1, #1
   4048c:	str	r2, [r0, #20]
   40490:	movw	r0, #91	; 0x5b
   40494:	strb	r0, [r1]
   40498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4049c:	cmp	r0, #0
   404a0:	beq	4053c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ac>
   404a4:	b	404a8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x118>
   404a8:	ldr	r0, [fp, #-4]
   404ac:	ldrsb	r0, [r0, #25]
   404b0:	cmp	r0, #0
   404b4:	beq	404dc <flatcc_json_printer_utype_enum_vector_field@@Base+0x14c>
   404b8:	ldr	r0, [fp, #-4]
   404bc:	ldr	r1, [r0, #20]
   404c0:	add	r2, r1, #1
   404c4:	str	r2, [r0, #20]
   404c8:	movw	r0, #10
   404cc:	strb	r0, [r1]
   404d0:	ldr	r0, [fp, #-4]
   404d4:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   404d8:	b	404e4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x154>
   404dc:	ldr	r0, [fp, #-4]
   404e0:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   404e4:	b	404e8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x158>
   404e8:	ldr	r0, [fp, #12]
   404ec:	ldr	r1, [fp, #-4]
   404f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   404f4:	str	r0, [sp, #28]
   404f8:	mov	r0, r2
   404fc:	str	r1, [sp, #24]
   40500:	bl	3e83c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   40504:	ldr	r1, [sp, #24]
   40508:	str	r0, [sp, #20]
   4050c:	mov	r0, r1
   40510:	ldr	r2, [sp, #20]
   40514:	and	r1, r2, #255	; 0xff
   40518:	ldr	lr, [sp, #28]
   4051c:	blx	lr
   40520:	ldr	r0, [fp, #-20]	; 0xffffffec
   40524:	add	r0, r0, #1
   40528:	str	r0, [fp, #-20]	; 0xffffffec
   4052c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40530:	mvn	r1, #0
   40534:	add	r0, r0, r1
   40538:	str	r0, [fp, #-24]	; 0xffffffe8
   4053c:	b	40540 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   40540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40544:	mvn	r1, #0
   40548:	add	r1, r0, r1
   4054c:	str	r1, [fp, #-24]	; 0xffffffe8
   40550:	cmp	r0, #0
   40554:	beq	405f8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x268>
   40558:	ldr	r0, [fp, #-4]
   4055c:	ldr	r1, [r0, #20]
   40560:	add	r2, r1, #1
   40564:	str	r2, [r0, #20]
   40568:	movw	r0, #44	; 0x2c
   4056c:	strb	r0, [r1]
   40570:	ldr	r0, [fp, #-4]
   40574:	ldrsb	r0, [r0, #25]
   40578:	cmp	r0, #0
   4057c:	beq	405a4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x214>
   40580:	ldr	r0, [fp, #-4]
   40584:	ldr	r1, [r0, #20]
   40588:	add	r2, r1, #1
   4058c:	str	r2, [r0, #20]
   40590:	movw	r0, #10
   40594:	strb	r0, [r1]
   40598:	ldr	r0, [fp, #-4]
   4059c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   405a0:	b	405ac <flatcc_json_printer_utype_enum_vector_field@@Base+0x21c>
   405a4:	ldr	r0, [fp, #-4]
   405a8:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   405ac:	b	405b0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x220>
   405b0:	ldr	r0, [fp, #12]
   405b4:	ldr	r1, [fp, #-4]
   405b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   405bc:	str	r0, [sp, #16]
   405c0:	mov	r0, r2
   405c4:	str	r1, [sp, #12]
   405c8:	bl	3e83c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   405cc:	ldr	r1, [sp, #12]
   405d0:	str	r0, [sp, #8]
   405d4:	mov	r0, r1
   405d8:	ldr	r2, [sp, #8]
   405dc:	and	r1, r2, #255	; 0xff
   405e0:	ldr	lr, [sp, #16]
   405e4:	blx	lr
   405e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   405ec:	add	r0, r0, #1
   405f0:	str	r0, [fp, #-20]	; 0xffffffec
   405f4:	b	40540 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   405f8:	b	405fc <flatcc_json_printer_utype_enum_vector_field@@Base+0x26c>
   405fc:	ldr	r0, [fp, #-4]
   40600:	ldrsb	r0, [r0, #25]
   40604:	cmp	r0, #0
   40608:	beq	40640 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2b0>
   4060c:	ldr	r0, [fp, #-4]
   40610:	ldr	r1, [r0, #20]
   40614:	add	r2, r1, #1
   40618:	str	r2, [r0, #20]
   4061c:	movw	r0, #10
   40620:	strb	r0, [r1]
   40624:	ldr	r0, [fp, #-4]
   40628:	ldr	r1, [r0, #32]
   4062c:	mvn	r2, #0
   40630:	add	r1, r1, r2
   40634:	str	r1, [r0, #32]
   40638:	ldr	r0, [fp, #-4]
   4063c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   40640:	ldr	r0, [fp, #-4]
   40644:	ldr	r1, [r0, #20]
   40648:	add	r2, r1, #1
   4064c:	str	r2, [r0, #20]
   40650:	movw	r0, #93	; 0x5d
   40654:	strb	r0, [r1]
   40658:	b	4065c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2cc>
   4065c:	mov	sp, fp
   40660:	pop	{fp, pc}

00040664 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   40664:	push	{fp, lr}
   40668:	mov	fp, sp
   4066c:	sub	sp, sp, #64	; 0x40
   40670:	ldr	ip, [fp, #12]
   40674:	ldr	lr, [fp, #8]
   40678:	str	r0, [fp, #-4]
   4067c:	str	r1, [fp, #-8]
   40680:	str	r2, [fp, #-12]
   40684:	str	r3, [fp, #-16]
   40688:	ldr	r0, [fp, #-4]
   4068c:	ldrsb	r0, [r0, #27]
   40690:	cmp	r0, #0
   40694:	str	lr, [fp, #-28]	; 0xffffffe4
   40698:	str	ip, [sp, #32]
   4069c:	beq	406c0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   406a0:	ldr	r0, [fp, #-4]
   406a4:	ldr	r1, [fp, #-8]
   406a8:	ldr	r2, [fp, #-12]
   406ac:	ldr	r3, [fp, #-16]
   406b0:	ldr	ip, [fp, #8]
   406b4:	str	ip, [sp]
   406b8:	bl	3e864 <flatcc_json_printer_uint8_vector_field@@Base>
   406bc:	b	40930 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2cc>
   406c0:	ldr	r0, [fp, #-8]
   406c4:	ldr	r1, [fp, #-12]
   406c8:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   406cc:	str	r0, [fp, #-20]	; 0xffffffec
   406d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   406d4:	movw	r1, #0
   406d8:	cmp	r0, r1
   406dc:	beq	40930 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2cc>
   406e0:	ldr	r0, [fp, #-8]
   406e4:	ldr	r1, [r0, #16]
   406e8:	add	r2, r1, #1
   406ec:	str	r2, [r0, #16]
   406f0:	cmp	r1, #0
   406f4:	beq	40710 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xac>
   406f8:	ldr	r0, [fp, #-4]
   406fc:	ldr	r1, [r0, #20]
   40700:	add	r2, r1, #1
   40704:	str	r2, [r0, #20]
   40708:	movw	r0, #44	; 0x2c
   4070c:	strb	r0, [r1]
   40710:	ldr	r0, [fp, #-20]	; 0xffffffec
   40714:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   40718:	str	r0, [fp, #-20]	; 0xffffffec
   4071c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40720:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40724:	str	r0, [fp, #-24]	; 0xffffffe8
   40728:	ldr	r0, [fp, #-20]	; 0xffffffec
   4072c:	add	r0, r0, #4
   40730:	str	r0, [fp, #-20]	; 0xffffffec
   40734:	ldr	r0, [fp, #-4]
   40738:	ldr	r1, [fp, #-16]
   4073c:	ldr	r2, [fp, #8]
   40740:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   40744:	ldr	r0, [fp, #-4]
   40748:	ldr	r1, [r0, #32]
   4074c:	add	r1, r1, #1
   40750:	str	r1, [r0, #32]
   40754:	ldr	r0, [fp, #-4]
   40758:	ldr	r1, [r0, #20]
   4075c:	add	r2, r1, #1
   40760:	str	r2, [r0, #20]
   40764:	movw	r0, #91	; 0x5b
   40768:	strb	r0, [r1]
   4076c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40770:	cmp	r0, #0
   40774:	beq	40810 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ac>
   40778:	b	4077c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x118>
   4077c:	ldr	r0, [fp, #-4]
   40780:	ldrsb	r0, [r0, #25]
   40784:	cmp	r0, #0
   40788:	beq	407b0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14c>
   4078c:	ldr	r0, [fp, #-4]
   40790:	ldr	r1, [r0, #20]
   40794:	add	r2, r1, #1
   40798:	str	r2, [r0, #20]
   4079c:	movw	r0, #10
   407a0:	strb	r0, [r1]
   407a4:	ldr	r0, [fp, #-4]
   407a8:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   407ac:	b	407b8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x154>
   407b0:	ldr	r0, [fp, #-4]
   407b4:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   407b8:	b	407bc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x158>
   407bc:	ldr	r0, [fp, #12]
   407c0:	ldr	r1, [fp, #-4]
   407c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   407c8:	str	r0, [sp, #28]
   407cc:	mov	r0, r2
   407d0:	str	r1, [sp, #24]
   407d4:	bl	3be7c <flatcc_json_printer_uint8_field@@Base+0x108>
   407d8:	ldr	r1, [sp, #24]
   407dc:	str	r0, [sp, #20]
   407e0:	mov	r0, r1
   407e4:	ldr	r2, [sp, #20]
   407e8:	and	r1, r2, #255	; 0xff
   407ec:	ldr	lr, [sp, #28]
   407f0:	blx	lr
   407f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   407f8:	add	r0, r0, #1
   407fc:	str	r0, [fp, #-20]	; 0xffffffec
   40800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40804:	mvn	r1, #0
   40808:	add	r0, r0, r1
   4080c:	str	r0, [fp, #-24]	; 0xffffffe8
   40810:	b	40814 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   40814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40818:	mvn	r1, #0
   4081c:	add	r1, r0, r1
   40820:	str	r1, [fp, #-24]	; 0xffffffe8
   40824:	cmp	r0, #0
   40828:	beq	408cc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x268>
   4082c:	ldr	r0, [fp, #-4]
   40830:	ldr	r1, [r0, #20]
   40834:	add	r2, r1, #1
   40838:	str	r2, [r0, #20]
   4083c:	movw	r0, #44	; 0x2c
   40840:	strb	r0, [r1]
   40844:	ldr	r0, [fp, #-4]
   40848:	ldrsb	r0, [r0, #25]
   4084c:	cmp	r0, #0
   40850:	beq	40878 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x214>
   40854:	ldr	r0, [fp, #-4]
   40858:	ldr	r1, [r0, #20]
   4085c:	add	r2, r1, #1
   40860:	str	r2, [r0, #20]
   40864:	movw	r0, #10
   40868:	strb	r0, [r1]
   4086c:	ldr	r0, [fp, #-4]
   40870:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   40874:	b	40880 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x21c>
   40878:	ldr	r0, [fp, #-4]
   4087c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   40880:	b	40884 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x220>
   40884:	ldr	r0, [fp, #12]
   40888:	ldr	r1, [fp, #-4]
   4088c:	ldr	r2, [fp, #-20]	; 0xffffffec
   40890:	str	r0, [sp, #16]
   40894:	mov	r0, r2
   40898:	str	r1, [sp, #12]
   4089c:	bl	3be7c <flatcc_json_printer_uint8_field@@Base+0x108>
   408a0:	ldr	r1, [sp, #12]
   408a4:	str	r0, [sp, #8]
   408a8:	mov	r0, r1
   408ac:	ldr	r2, [sp, #8]
   408b0:	and	r1, r2, #255	; 0xff
   408b4:	ldr	lr, [sp, #16]
   408b8:	blx	lr
   408bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   408c0:	add	r0, r0, #1
   408c4:	str	r0, [fp, #-20]	; 0xffffffec
   408c8:	b	40814 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   408cc:	b	408d0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x26c>
   408d0:	ldr	r0, [fp, #-4]
   408d4:	ldrsb	r0, [r0, #25]
   408d8:	cmp	r0, #0
   408dc:	beq	40914 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2b0>
   408e0:	ldr	r0, [fp, #-4]
   408e4:	ldr	r1, [r0, #20]
   408e8:	add	r2, r1, #1
   408ec:	str	r2, [r0, #20]
   408f0:	movw	r0, #10
   408f4:	strb	r0, [r1]
   408f8:	ldr	r0, [fp, #-4]
   408fc:	ldr	r1, [r0, #32]
   40900:	mvn	r2, #0
   40904:	add	r1, r1, r2
   40908:	str	r1, [r0, #32]
   4090c:	ldr	r0, [fp, #-4]
   40910:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   40914:	ldr	r0, [fp, #-4]
   40918:	ldr	r1, [r0, #20]
   4091c:	add	r2, r1, #1
   40920:	str	r2, [r0, #20]
   40924:	movw	r0, #93	; 0x5d
   40928:	strb	r0, [r1]
   4092c:	b	40930 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2cc>
   40930:	mov	sp, fp
   40934:	pop	{fp, pc}

00040938 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   40938:	push	{fp, lr}
   4093c:	mov	fp, sp
   40940:	sub	sp, sp, #64	; 0x40
   40944:	ldr	ip, [fp, #12]
   40948:	ldr	lr, [fp, #8]
   4094c:	str	r0, [fp, #-4]
   40950:	str	r1, [fp, #-8]
   40954:	str	r2, [fp, #-12]
   40958:	str	r3, [fp, #-16]
   4095c:	ldr	r0, [fp, #-4]
   40960:	ldrsb	r0, [r0, #27]
   40964:	cmp	r0, #0
   40968:	str	lr, [fp, #-28]	; 0xffffffe4
   4096c:	str	ip, [sp, #32]
   40970:	beq	40994 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   40974:	ldr	r0, [fp, #-4]
   40978:	ldr	r1, [fp, #-8]
   4097c:	ldr	r2, [fp, #-12]
   40980:	ldr	r3, [fp, #-16]
   40984:	ldr	ip, [fp, #8]
   40988:	str	ip, [sp]
   4098c:	bl	3eae0 <flatcc_json_printer_uint16_vector_field@@Base>
   40990:	b	40c04 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2cc>
   40994:	ldr	r0, [fp, #-8]
   40998:	ldr	r1, [fp, #-12]
   4099c:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   409a0:	str	r0, [fp, #-20]	; 0xffffffec
   409a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   409a8:	movw	r1, #0
   409ac:	cmp	r0, r1
   409b0:	beq	40c04 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2cc>
   409b4:	ldr	r0, [fp, #-8]
   409b8:	ldr	r1, [r0, #16]
   409bc:	add	r2, r1, #1
   409c0:	str	r2, [r0, #16]
   409c4:	cmp	r1, #0
   409c8:	beq	409e4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xac>
   409cc:	ldr	r0, [fp, #-4]
   409d0:	ldr	r1, [r0, #20]
   409d4:	add	r2, r1, #1
   409d8:	str	r2, [r0, #20]
   409dc:	movw	r0, #44	; 0x2c
   409e0:	strb	r0, [r1]
   409e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   409e8:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   409ec:	str	r0, [fp, #-20]	; 0xffffffec
   409f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   409f4:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   409f8:	str	r0, [fp, #-24]	; 0xffffffe8
   409fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   40a00:	add	r0, r0, #4
   40a04:	str	r0, [fp, #-20]	; 0xffffffec
   40a08:	ldr	r0, [fp, #-4]
   40a0c:	ldr	r1, [fp, #-16]
   40a10:	ldr	r2, [fp, #8]
   40a14:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   40a18:	ldr	r0, [fp, #-4]
   40a1c:	ldr	r1, [r0, #32]
   40a20:	add	r1, r1, #1
   40a24:	str	r1, [r0, #32]
   40a28:	ldr	r0, [fp, #-4]
   40a2c:	ldr	r1, [r0, #20]
   40a30:	add	r2, r1, #1
   40a34:	str	r2, [r0, #20]
   40a38:	movw	r0, #91	; 0x5b
   40a3c:	strb	r0, [r1]
   40a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40a44:	cmp	r0, #0
   40a48:	beq	40ae4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ac>
   40a4c:	b	40a50 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x118>
   40a50:	ldr	r0, [fp, #-4]
   40a54:	ldrsb	r0, [r0, #25]
   40a58:	cmp	r0, #0
   40a5c:	beq	40a84 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14c>
   40a60:	ldr	r0, [fp, #-4]
   40a64:	ldr	r1, [r0, #20]
   40a68:	add	r2, r1, #1
   40a6c:	str	r2, [r0, #20]
   40a70:	movw	r0, #10
   40a74:	strb	r0, [r1]
   40a78:	ldr	r0, [fp, #-4]
   40a7c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   40a80:	b	40a8c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x154>
   40a84:	ldr	r0, [fp, #-4]
   40a88:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   40a8c:	b	40a90 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x158>
   40a90:	ldr	r0, [fp, #12]
   40a94:	ldr	r1, [fp, #-4]
   40a98:	ldr	r2, [fp, #-20]	; 0xffffffec
   40a9c:	str	r0, [sp, #28]
   40aa0:	mov	r0, r2
   40aa4:	str	r1, [sp, #24]
   40aa8:	bl	3bfac <flatcc_json_printer_uint16_field@@Base+0x108>
   40aac:	ldr	r1, [sp, #24]
   40ab0:	str	r0, [sp, #20]
   40ab4:	mov	r0, r1
   40ab8:	ldr	r2, [sp, #20]
   40abc:	uxth	r1, r2
   40ac0:	ldr	lr, [sp, #28]
   40ac4:	blx	lr
   40ac8:	ldr	r0, [fp, #-20]	; 0xffffffec
   40acc:	add	r0, r0, #2
   40ad0:	str	r0, [fp, #-20]	; 0xffffffec
   40ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40ad8:	mvn	r1, #0
   40adc:	add	r0, r0, r1
   40ae0:	str	r0, [fp, #-24]	; 0xffffffe8
   40ae4:	b	40ae8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   40ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40aec:	mvn	r1, #0
   40af0:	add	r1, r0, r1
   40af4:	str	r1, [fp, #-24]	; 0xffffffe8
   40af8:	cmp	r0, #0
   40afc:	beq	40ba0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x268>
   40b00:	ldr	r0, [fp, #-4]
   40b04:	ldr	r1, [r0, #20]
   40b08:	add	r2, r1, #1
   40b0c:	str	r2, [r0, #20]
   40b10:	movw	r0, #44	; 0x2c
   40b14:	strb	r0, [r1]
   40b18:	ldr	r0, [fp, #-4]
   40b1c:	ldrsb	r0, [r0, #25]
   40b20:	cmp	r0, #0
   40b24:	beq	40b4c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x214>
   40b28:	ldr	r0, [fp, #-4]
   40b2c:	ldr	r1, [r0, #20]
   40b30:	add	r2, r1, #1
   40b34:	str	r2, [r0, #20]
   40b38:	movw	r0, #10
   40b3c:	strb	r0, [r1]
   40b40:	ldr	r0, [fp, #-4]
   40b44:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   40b48:	b	40b54 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x21c>
   40b4c:	ldr	r0, [fp, #-4]
   40b50:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   40b54:	b	40b58 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x220>
   40b58:	ldr	r0, [fp, #12]
   40b5c:	ldr	r1, [fp, #-4]
   40b60:	ldr	r2, [fp, #-20]	; 0xffffffec
   40b64:	str	r0, [sp, #16]
   40b68:	mov	r0, r2
   40b6c:	str	r1, [sp, #12]
   40b70:	bl	3bfac <flatcc_json_printer_uint16_field@@Base+0x108>
   40b74:	ldr	r1, [sp, #12]
   40b78:	str	r0, [sp, #8]
   40b7c:	mov	r0, r1
   40b80:	ldr	r2, [sp, #8]
   40b84:	uxth	r1, r2
   40b88:	ldr	lr, [sp, #16]
   40b8c:	blx	lr
   40b90:	ldr	r0, [fp, #-20]	; 0xffffffec
   40b94:	add	r0, r0, #2
   40b98:	str	r0, [fp, #-20]	; 0xffffffec
   40b9c:	b	40ae8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   40ba0:	b	40ba4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x26c>
   40ba4:	ldr	r0, [fp, #-4]
   40ba8:	ldrsb	r0, [r0, #25]
   40bac:	cmp	r0, #0
   40bb0:	beq	40be8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2b0>
   40bb4:	ldr	r0, [fp, #-4]
   40bb8:	ldr	r1, [r0, #20]
   40bbc:	add	r2, r1, #1
   40bc0:	str	r2, [r0, #20]
   40bc4:	movw	r0, #10
   40bc8:	strb	r0, [r1]
   40bcc:	ldr	r0, [fp, #-4]
   40bd0:	ldr	r1, [r0, #32]
   40bd4:	mvn	r2, #0
   40bd8:	add	r1, r1, r2
   40bdc:	str	r1, [r0, #32]
   40be0:	ldr	r0, [fp, #-4]
   40be4:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   40be8:	ldr	r0, [fp, #-4]
   40bec:	ldr	r1, [r0, #20]
   40bf0:	add	r2, r1, #1
   40bf4:	str	r2, [r0, #20]
   40bf8:	movw	r0, #93	; 0x5d
   40bfc:	strb	r0, [r1]
   40c00:	b	40c04 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2cc>
   40c04:	mov	sp, fp
   40c08:	pop	{fp, pc}

00040c0c <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   40c0c:	push	{fp, lr}
   40c10:	mov	fp, sp
   40c14:	sub	sp, sp, #64	; 0x40
   40c18:	ldr	ip, [fp, #12]
   40c1c:	ldr	lr, [fp, #8]
   40c20:	str	r0, [fp, #-4]
   40c24:	str	r1, [fp, #-8]
   40c28:	str	r2, [fp, #-12]
   40c2c:	str	r3, [fp, #-16]
   40c30:	ldr	r0, [fp, #-4]
   40c34:	ldrsb	r0, [r0, #27]
   40c38:	cmp	r0, #0
   40c3c:	str	lr, [fp, #-28]	; 0xffffffe4
   40c40:	str	ip, [sp, #32]
   40c44:	beq	40c68 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   40c48:	ldr	r0, [fp, #-4]
   40c4c:	ldr	r1, [fp, #-8]
   40c50:	ldr	r2, [fp, #-12]
   40c54:	ldr	r3, [fp, #-16]
   40c58:	ldr	ip, [fp, #8]
   40c5c:	str	ip, [sp]
   40c60:	bl	3ed5c <flatcc_json_printer_uint32_vector_field@@Base>
   40c64:	b	40ed0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   40c68:	ldr	r0, [fp, #-8]
   40c6c:	ldr	r1, [fp, #-12]
   40c70:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   40c74:	str	r0, [fp, #-20]	; 0xffffffec
   40c78:	ldr	r0, [fp, #-20]	; 0xffffffec
   40c7c:	movw	r1, #0
   40c80:	cmp	r0, r1
   40c84:	beq	40ed0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   40c88:	ldr	r0, [fp, #-8]
   40c8c:	ldr	r1, [r0, #16]
   40c90:	add	r2, r1, #1
   40c94:	str	r2, [r0, #16]
   40c98:	cmp	r1, #0
   40c9c:	beq	40cb8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xac>
   40ca0:	ldr	r0, [fp, #-4]
   40ca4:	ldr	r1, [r0, #20]
   40ca8:	add	r2, r1, #1
   40cac:	str	r2, [r0, #20]
   40cb0:	movw	r0, #44	; 0x2c
   40cb4:	strb	r0, [r1]
   40cb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   40cbc:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   40cc0:	str	r0, [fp, #-20]	; 0xffffffec
   40cc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   40cc8:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40ccc:	str	r0, [fp, #-24]	; 0xffffffe8
   40cd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   40cd4:	add	r0, r0, #4
   40cd8:	str	r0, [fp, #-20]	; 0xffffffec
   40cdc:	ldr	r0, [fp, #-4]
   40ce0:	ldr	r1, [fp, #-16]
   40ce4:	ldr	r2, [fp, #8]
   40ce8:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   40cec:	ldr	r0, [fp, #-4]
   40cf0:	ldr	r1, [r0, #32]
   40cf4:	add	r1, r1, #1
   40cf8:	str	r1, [r0, #32]
   40cfc:	ldr	r0, [fp, #-4]
   40d00:	ldr	r1, [r0, #20]
   40d04:	add	r2, r1, #1
   40d08:	str	r2, [r0, #20]
   40d0c:	movw	r0, #91	; 0x5b
   40d10:	strb	r0, [r1]
   40d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40d18:	cmp	r0, #0
   40d1c:	beq	40db4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
   40d20:	b	40d24 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x118>
   40d24:	ldr	r0, [fp, #-4]
   40d28:	ldrsb	r0, [r0, #25]
   40d2c:	cmp	r0, #0
   40d30:	beq	40d58 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14c>
   40d34:	ldr	r0, [fp, #-4]
   40d38:	ldr	r1, [r0, #20]
   40d3c:	add	r2, r1, #1
   40d40:	str	r2, [r0, #20]
   40d44:	movw	r0, #10
   40d48:	strb	r0, [r1]
   40d4c:	ldr	r0, [fp, #-4]
   40d50:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   40d54:	b	40d60 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x154>
   40d58:	ldr	r0, [fp, #-4]
   40d5c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   40d60:	b	40d64 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x158>
   40d64:	ldr	r0, [fp, #12]
   40d68:	ldr	r1, [fp, #-4]
   40d6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   40d70:	str	r0, [sp, #28]
   40d74:	mov	r0, r2
   40d78:	str	r1, [sp, #24]
   40d7c:	bl	3c0d8 <flatcc_json_printer_uint32_field@@Base+0x104>
   40d80:	ldr	r1, [sp, #24]
   40d84:	str	r0, [sp, #20]
   40d88:	mov	r0, r1
   40d8c:	ldr	r1, [sp, #20]
   40d90:	ldr	r2, [sp, #28]
   40d94:	blx	r2
   40d98:	ldr	r0, [fp, #-20]	; 0xffffffec
   40d9c:	add	r0, r0, #4
   40da0:	str	r0, [fp, #-20]	; 0xffffffec
   40da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40da8:	mvn	r1, #0
   40dac:	add	r0, r0, r1
   40db0:	str	r0, [fp, #-24]	; 0xffffffe8
   40db4:	b	40db8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ac>
   40db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40dbc:	mvn	r1, #0
   40dc0:	add	r1, r0, r1
   40dc4:	str	r1, [fp, #-24]	; 0xffffffe8
   40dc8:	cmp	r0, #0
   40dcc:	beq	40e6c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x260>
   40dd0:	ldr	r0, [fp, #-4]
   40dd4:	ldr	r1, [r0, #20]
   40dd8:	add	r2, r1, #1
   40ddc:	str	r2, [r0, #20]
   40de0:	movw	r0, #44	; 0x2c
   40de4:	strb	r0, [r1]
   40de8:	ldr	r0, [fp, #-4]
   40dec:	ldrsb	r0, [r0, #25]
   40df0:	cmp	r0, #0
   40df4:	beq	40e1c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
   40df8:	ldr	r0, [fp, #-4]
   40dfc:	ldr	r1, [r0, #20]
   40e00:	add	r2, r1, #1
   40e04:	str	r2, [r0, #20]
   40e08:	movw	r0, #10
   40e0c:	strb	r0, [r1]
   40e10:	ldr	r0, [fp, #-4]
   40e14:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   40e18:	b	40e24 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x218>
   40e1c:	ldr	r0, [fp, #-4]
   40e20:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   40e24:	b	40e28 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x21c>
   40e28:	ldr	r0, [fp, #12]
   40e2c:	ldr	r1, [fp, #-4]
   40e30:	ldr	r2, [fp, #-20]	; 0xffffffec
   40e34:	str	r0, [sp, #16]
   40e38:	mov	r0, r2
   40e3c:	str	r1, [sp, #12]
   40e40:	bl	3c0d8 <flatcc_json_printer_uint32_field@@Base+0x104>
   40e44:	ldr	r1, [sp, #12]
   40e48:	str	r0, [sp, #8]
   40e4c:	mov	r0, r1
   40e50:	ldr	r1, [sp, #8]
   40e54:	ldr	r2, [sp, #16]
   40e58:	blx	r2
   40e5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40e60:	add	r0, r0, #4
   40e64:	str	r0, [fp, #-20]	; 0xffffffec
   40e68:	b	40db8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ac>
   40e6c:	b	40e70 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x264>
   40e70:	ldr	r0, [fp, #-4]
   40e74:	ldrsb	r0, [r0, #25]
   40e78:	cmp	r0, #0
   40e7c:	beq	40eb4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a8>
   40e80:	ldr	r0, [fp, #-4]
   40e84:	ldr	r1, [r0, #20]
   40e88:	add	r2, r1, #1
   40e8c:	str	r2, [r0, #20]
   40e90:	movw	r0, #10
   40e94:	strb	r0, [r1]
   40e98:	ldr	r0, [fp, #-4]
   40e9c:	ldr	r1, [r0, #32]
   40ea0:	mvn	r2, #0
   40ea4:	add	r1, r1, r2
   40ea8:	str	r1, [r0, #32]
   40eac:	ldr	r0, [fp, #-4]
   40eb0:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   40eb4:	ldr	r0, [fp, #-4]
   40eb8:	ldr	r1, [r0, #20]
   40ebc:	add	r2, r1, #1
   40ec0:	str	r2, [r0, #20]
   40ec4:	movw	r0, #93	; 0x5d
   40ec8:	strb	r0, [r1]
   40ecc:	b	40ed0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   40ed0:	mov	sp, fp
   40ed4:	pop	{fp, pc}

00040ed8 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   40ed8:	push	{fp, lr}
   40edc:	mov	fp, sp
   40ee0:	sub	sp, sp, #64	; 0x40
   40ee4:	ldr	ip, [fp, #12]
   40ee8:	ldr	lr, [fp, #8]
   40eec:	str	r0, [fp, #-4]
   40ef0:	str	r1, [fp, #-8]
   40ef4:	str	r2, [fp, #-12]
   40ef8:	str	r3, [fp, #-16]
   40efc:	ldr	r0, [fp, #-4]
   40f00:	ldrsb	r0, [r0, #27]
   40f04:	cmp	r0, #0
   40f08:	str	lr, [fp, #-28]	; 0xffffffe4
   40f0c:	str	ip, [sp, #32]
   40f10:	beq	40f34 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   40f14:	ldr	r0, [fp, #-4]
   40f18:	ldr	r1, [fp, #-8]
   40f1c:	ldr	r2, [fp, #-12]
   40f20:	ldr	r3, [fp, #-16]
   40f24:	ldr	ip, [fp, #8]
   40f28:	str	ip, [sp]
   40f2c:	bl	3efd0 <flatcc_json_printer_uint64_vector_field@@Base>
   40f30:	b	411a4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2cc>
   40f34:	ldr	r0, [fp, #-8]
   40f38:	ldr	r1, [fp, #-12]
   40f3c:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   40f40:	str	r0, [fp, #-20]	; 0xffffffec
   40f44:	ldr	r0, [fp, #-20]	; 0xffffffec
   40f48:	movw	r1, #0
   40f4c:	cmp	r0, r1
   40f50:	beq	411a4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2cc>
   40f54:	ldr	r0, [fp, #-8]
   40f58:	ldr	r1, [r0, #16]
   40f5c:	add	r2, r1, #1
   40f60:	str	r2, [r0, #16]
   40f64:	cmp	r1, #0
   40f68:	beq	40f84 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xac>
   40f6c:	ldr	r0, [fp, #-4]
   40f70:	ldr	r1, [r0, #20]
   40f74:	add	r2, r1, #1
   40f78:	str	r2, [r0, #20]
   40f7c:	movw	r0, #44	; 0x2c
   40f80:	strb	r0, [r1]
   40f84:	ldr	r0, [fp, #-20]	; 0xffffffec
   40f88:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   40f8c:	str	r0, [fp, #-20]	; 0xffffffec
   40f90:	ldr	r0, [fp, #-20]	; 0xffffffec
   40f94:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40f98:	str	r0, [fp, #-24]	; 0xffffffe8
   40f9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40fa0:	add	r0, r0, #4
   40fa4:	str	r0, [fp, #-20]	; 0xffffffec
   40fa8:	ldr	r0, [fp, #-4]
   40fac:	ldr	r1, [fp, #-16]
   40fb0:	ldr	r2, [fp, #8]
   40fb4:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   40fb8:	ldr	r0, [fp, #-4]
   40fbc:	ldr	r1, [r0, #32]
   40fc0:	add	r1, r1, #1
   40fc4:	str	r1, [r0, #32]
   40fc8:	ldr	r0, [fp, #-4]
   40fcc:	ldr	r1, [r0, #20]
   40fd0:	add	r2, r1, #1
   40fd4:	str	r2, [r0, #20]
   40fd8:	movw	r0, #91	; 0x5b
   40fdc:	strb	r0, [r1]
   40fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40fe4:	cmp	r0, #0
   40fe8:	beq	41084 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ac>
   40fec:	b	40ff0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x118>
   40ff0:	ldr	r0, [fp, #-4]
   40ff4:	ldrsb	r0, [r0, #25]
   40ff8:	cmp	r0, #0
   40ffc:	beq	41024 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x14c>
   41000:	ldr	r0, [fp, #-4]
   41004:	ldr	r1, [r0, #20]
   41008:	add	r2, r1, #1
   4100c:	str	r2, [r0, #20]
   41010:	movw	r0, #10
   41014:	strb	r0, [r1]
   41018:	ldr	r0, [fp, #-4]
   4101c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   41020:	b	4102c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x154>
   41024:	ldr	r0, [fp, #-4]
   41028:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   4102c:	b	41030 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x158>
   41030:	ldr	r0, [fp, #12]
   41034:	ldr	r1, [fp, #-4]
   41038:	ldr	r2, [fp, #-20]	; 0xffffffec
   4103c:	str	r0, [sp, #28]
   41040:	mov	r0, r2
   41044:	str	r1, [sp, #24]
   41048:	bl	3c230 <flatcc_json_printer_uint64_field@@Base+0x134>
   4104c:	ldr	r2, [sp, #24]
   41050:	str	r0, [sp, #20]
   41054:	mov	r0, r2
   41058:	ldr	r2, [sp, #20]
   4105c:	mov	r3, r1
   41060:	ldr	r1, [sp, #28]
   41064:	blx	r1
   41068:	ldr	r0, [fp, #-20]	; 0xffffffec
   4106c:	add	r0, r0, #8
   41070:	str	r0, [fp, #-20]	; 0xffffffec
   41074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41078:	mvn	r1, #0
   4107c:	add	r0, r0, r1
   41080:	str	r0, [fp, #-24]	; 0xffffffe8
   41084:	b	41088 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   41088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4108c:	mvn	r1, #0
   41090:	add	r1, r0, r1
   41094:	str	r1, [fp, #-24]	; 0xffffffe8
   41098:	cmp	r0, #0
   4109c:	beq	41140 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x268>
   410a0:	ldr	r0, [fp, #-4]
   410a4:	ldr	r1, [r0, #20]
   410a8:	add	r2, r1, #1
   410ac:	str	r2, [r0, #20]
   410b0:	movw	r0, #44	; 0x2c
   410b4:	strb	r0, [r1]
   410b8:	ldr	r0, [fp, #-4]
   410bc:	ldrsb	r0, [r0, #25]
   410c0:	cmp	r0, #0
   410c4:	beq	410ec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x214>
   410c8:	ldr	r0, [fp, #-4]
   410cc:	ldr	r1, [r0, #20]
   410d0:	add	r2, r1, #1
   410d4:	str	r2, [r0, #20]
   410d8:	movw	r0, #10
   410dc:	strb	r0, [r1]
   410e0:	ldr	r0, [fp, #-4]
   410e4:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   410e8:	b	410f4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x21c>
   410ec:	ldr	r0, [fp, #-4]
   410f0:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   410f4:	b	410f8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x220>
   410f8:	ldr	r0, [fp, #12]
   410fc:	ldr	r1, [fp, #-4]
   41100:	ldr	r2, [fp, #-20]	; 0xffffffec
   41104:	str	r0, [sp, #16]
   41108:	mov	r0, r2
   4110c:	str	r1, [sp, #12]
   41110:	bl	3c230 <flatcc_json_printer_uint64_field@@Base+0x134>
   41114:	ldr	r2, [sp, #12]
   41118:	str	r0, [sp, #8]
   4111c:	mov	r0, r2
   41120:	ldr	r2, [sp, #8]
   41124:	mov	r3, r1
   41128:	ldr	r1, [sp, #16]
   4112c:	blx	r1
   41130:	ldr	r0, [fp, #-20]	; 0xffffffec
   41134:	add	r0, r0, #8
   41138:	str	r0, [fp, #-20]	; 0xffffffec
   4113c:	b	41088 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   41140:	b	41144 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x26c>
   41144:	ldr	r0, [fp, #-4]
   41148:	ldrsb	r0, [r0, #25]
   4114c:	cmp	r0, #0
   41150:	beq	41188 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2b0>
   41154:	ldr	r0, [fp, #-4]
   41158:	ldr	r1, [r0, #20]
   4115c:	add	r2, r1, #1
   41160:	str	r2, [r0, #20]
   41164:	movw	r0, #10
   41168:	strb	r0, [r1]
   4116c:	ldr	r0, [fp, #-4]
   41170:	ldr	r1, [r0, #32]
   41174:	mvn	r2, #0
   41178:	add	r1, r1, r2
   4117c:	str	r1, [r0, #32]
   41180:	ldr	r0, [fp, #-4]
   41184:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   41188:	ldr	r0, [fp, #-4]
   4118c:	ldr	r1, [r0, #20]
   41190:	add	r2, r1, #1
   41194:	str	r2, [r0, #20]
   41198:	movw	r0, #93	; 0x5d
   4119c:	strb	r0, [r1]
   411a0:	b	411a4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2cc>
   411a4:	mov	sp, fp
   411a8:	pop	{fp, pc}

000411ac <flatcc_json_printer_int8_enum_vector_field@@Base>:
   411ac:	push	{fp, lr}
   411b0:	mov	fp, sp
   411b4:	sub	sp, sp, #64	; 0x40
   411b8:	ldr	ip, [fp, #12]
   411bc:	ldr	lr, [fp, #8]
   411c0:	str	r0, [fp, #-4]
   411c4:	str	r1, [fp, #-8]
   411c8:	str	r2, [fp, #-12]
   411cc:	str	r3, [fp, #-16]
   411d0:	ldr	r0, [fp, #-4]
   411d4:	ldrsb	r0, [r0, #27]
   411d8:	cmp	r0, #0
   411dc:	str	lr, [fp, #-28]	; 0xffffffe4
   411e0:	str	ip, [sp, #32]
   411e4:	beq	41208 <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   411e8:	ldr	r0, [fp, #-4]
   411ec:	ldr	r1, [fp, #-8]
   411f0:	ldr	r2, [fp, #-12]
   411f4:	ldr	r3, [fp, #-16]
   411f8:	ldr	ip, [fp, #8]
   411fc:	str	ip, [sp]
   41200:	bl	3f244 <flatcc_json_printer_int8_vector_field@@Base>
   41204:	b	41478 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2cc>
   41208:	ldr	r0, [fp, #-8]
   4120c:	ldr	r1, [fp, #-12]
   41210:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   41214:	str	r0, [fp, #-20]	; 0xffffffec
   41218:	ldr	r0, [fp, #-20]	; 0xffffffec
   4121c:	movw	r1, #0
   41220:	cmp	r0, r1
   41224:	beq	41478 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2cc>
   41228:	ldr	r0, [fp, #-8]
   4122c:	ldr	r1, [r0, #16]
   41230:	add	r2, r1, #1
   41234:	str	r2, [r0, #16]
   41238:	cmp	r1, #0
   4123c:	beq	41258 <flatcc_json_printer_int8_enum_vector_field@@Base+0xac>
   41240:	ldr	r0, [fp, #-4]
   41244:	ldr	r1, [r0, #20]
   41248:	add	r2, r1, #1
   4124c:	str	r2, [r0, #20]
   41250:	movw	r0, #44	; 0x2c
   41254:	strb	r0, [r1]
   41258:	ldr	r0, [fp, #-20]	; 0xffffffec
   4125c:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   41260:	str	r0, [fp, #-20]	; 0xffffffec
   41264:	ldr	r0, [fp, #-20]	; 0xffffffec
   41268:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   4126c:	str	r0, [fp, #-24]	; 0xffffffe8
   41270:	ldr	r0, [fp, #-20]	; 0xffffffec
   41274:	add	r0, r0, #4
   41278:	str	r0, [fp, #-20]	; 0xffffffec
   4127c:	ldr	r0, [fp, #-4]
   41280:	ldr	r1, [fp, #-16]
   41284:	ldr	r2, [fp, #8]
   41288:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   4128c:	ldr	r0, [fp, #-4]
   41290:	ldr	r1, [r0, #32]
   41294:	add	r1, r1, #1
   41298:	str	r1, [r0, #32]
   4129c:	ldr	r0, [fp, #-4]
   412a0:	ldr	r1, [r0, #20]
   412a4:	add	r2, r1, #1
   412a8:	str	r2, [r0, #20]
   412ac:	movw	r0, #91	; 0x5b
   412b0:	strb	r0, [r1]
   412b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   412b8:	cmp	r0, #0
   412bc:	beq	41358 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ac>
   412c0:	b	412c4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x118>
   412c4:	ldr	r0, [fp, #-4]
   412c8:	ldrsb	r0, [r0, #25]
   412cc:	cmp	r0, #0
   412d0:	beq	412f8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x14c>
   412d4:	ldr	r0, [fp, #-4]
   412d8:	ldr	r1, [r0, #20]
   412dc:	add	r2, r1, #1
   412e0:	str	r2, [r0, #20]
   412e4:	movw	r0, #10
   412e8:	strb	r0, [r1]
   412ec:	ldr	r0, [fp, #-4]
   412f0:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   412f4:	b	41300 <flatcc_json_printer_int8_enum_vector_field@@Base+0x154>
   412f8:	ldr	r0, [fp, #-4]
   412fc:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   41300:	b	41304 <flatcc_json_printer_int8_enum_vector_field@@Base+0x158>
   41304:	ldr	r0, [fp, #12]
   41308:	ldr	r1, [fp, #-4]
   4130c:	ldr	r2, [fp, #-20]	; 0xffffffec
   41310:	str	r0, [sp, #28]
   41314:	mov	r0, r2
   41318:	str	r1, [sp, #24]
   4131c:	bl	3c36c <flatcc_json_printer_int8_field@@Base+0x108>
   41320:	ldr	r1, [sp, #24]
   41324:	str	r0, [sp, #20]
   41328:	mov	r0, r1
   4132c:	ldr	r2, [sp, #20]
   41330:	sxtb	r1, r2
   41334:	ldr	lr, [sp, #28]
   41338:	blx	lr
   4133c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41340:	add	r0, r0, #1
   41344:	str	r0, [fp, #-20]	; 0xffffffec
   41348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4134c:	mvn	r1, #0
   41350:	add	r0, r0, r1
   41354:	str	r0, [fp, #-24]	; 0xffffffe8
   41358:	b	4135c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   4135c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41360:	mvn	r1, #0
   41364:	add	r1, r0, r1
   41368:	str	r1, [fp, #-24]	; 0xffffffe8
   4136c:	cmp	r0, #0
   41370:	beq	41414 <flatcc_json_printer_int8_enum_vector_field@@Base+0x268>
   41374:	ldr	r0, [fp, #-4]
   41378:	ldr	r1, [r0, #20]
   4137c:	add	r2, r1, #1
   41380:	str	r2, [r0, #20]
   41384:	movw	r0, #44	; 0x2c
   41388:	strb	r0, [r1]
   4138c:	ldr	r0, [fp, #-4]
   41390:	ldrsb	r0, [r0, #25]
   41394:	cmp	r0, #0
   41398:	beq	413c0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x214>
   4139c:	ldr	r0, [fp, #-4]
   413a0:	ldr	r1, [r0, #20]
   413a4:	add	r2, r1, #1
   413a8:	str	r2, [r0, #20]
   413ac:	movw	r0, #10
   413b0:	strb	r0, [r1]
   413b4:	ldr	r0, [fp, #-4]
   413b8:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   413bc:	b	413c8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x21c>
   413c0:	ldr	r0, [fp, #-4]
   413c4:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   413c8:	b	413cc <flatcc_json_printer_int8_enum_vector_field@@Base+0x220>
   413cc:	ldr	r0, [fp, #12]
   413d0:	ldr	r1, [fp, #-4]
   413d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   413d8:	str	r0, [sp, #16]
   413dc:	mov	r0, r2
   413e0:	str	r1, [sp, #12]
   413e4:	bl	3c36c <flatcc_json_printer_int8_field@@Base+0x108>
   413e8:	ldr	r1, [sp, #12]
   413ec:	str	r0, [sp, #8]
   413f0:	mov	r0, r1
   413f4:	ldr	r2, [sp, #8]
   413f8:	sxtb	r1, r2
   413fc:	ldr	lr, [sp, #16]
   41400:	blx	lr
   41404:	ldr	r0, [fp, #-20]	; 0xffffffec
   41408:	add	r0, r0, #1
   4140c:	str	r0, [fp, #-20]	; 0xffffffec
   41410:	b	4135c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   41414:	b	41418 <flatcc_json_printer_int8_enum_vector_field@@Base+0x26c>
   41418:	ldr	r0, [fp, #-4]
   4141c:	ldrsb	r0, [r0, #25]
   41420:	cmp	r0, #0
   41424:	beq	4145c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2b0>
   41428:	ldr	r0, [fp, #-4]
   4142c:	ldr	r1, [r0, #20]
   41430:	add	r2, r1, #1
   41434:	str	r2, [r0, #20]
   41438:	movw	r0, #10
   4143c:	strb	r0, [r1]
   41440:	ldr	r0, [fp, #-4]
   41444:	ldr	r1, [r0, #32]
   41448:	mvn	r2, #0
   4144c:	add	r1, r1, r2
   41450:	str	r1, [r0, #32]
   41454:	ldr	r0, [fp, #-4]
   41458:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   4145c:	ldr	r0, [fp, #-4]
   41460:	ldr	r1, [r0, #20]
   41464:	add	r2, r1, #1
   41468:	str	r2, [r0, #20]
   4146c:	movw	r0, #93	; 0x5d
   41470:	strb	r0, [r1]
   41474:	b	41478 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2cc>
   41478:	mov	sp, fp
   4147c:	pop	{fp, pc}

00041480 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   41480:	push	{fp, lr}
   41484:	mov	fp, sp
   41488:	sub	sp, sp, #64	; 0x40
   4148c:	ldr	ip, [fp, #12]
   41490:	ldr	lr, [fp, #8]
   41494:	str	r0, [fp, #-4]
   41498:	str	r1, [fp, #-8]
   4149c:	str	r2, [fp, #-12]
   414a0:	str	r3, [fp, #-16]
   414a4:	ldr	r0, [fp, #-4]
   414a8:	ldrsb	r0, [r0, #27]
   414ac:	cmp	r0, #0
   414b0:	str	lr, [fp, #-28]	; 0xffffffe4
   414b4:	str	ip, [sp, #32]
   414b8:	beq	414dc <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   414bc:	ldr	r0, [fp, #-4]
   414c0:	ldr	r1, [fp, #-8]
   414c4:	ldr	r2, [fp, #-12]
   414c8:	ldr	r3, [fp, #-16]
   414cc:	ldr	ip, [fp, #8]
   414d0:	str	ip, [sp]
   414d4:	bl	3f4c0 <flatcc_json_printer_int16_vector_field@@Base>
   414d8:	b	4174c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2cc>
   414dc:	ldr	r0, [fp, #-8]
   414e0:	ldr	r1, [fp, #-12]
   414e4:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   414e8:	str	r0, [fp, #-20]	; 0xffffffec
   414ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   414f0:	movw	r1, #0
   414f4:	cmp	r0, r1
   414f8:	beq	4174c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2cc>
   414fc:	ldr	r0, [fp, #-8]
   41500:	ldr	r1, [r0, #16]
   41504:	add	r2, r1, #1
   41508:	str	r2, [r0, #16]
   4150c:	cmp	r1, #0
   41510:	beq	4152c <flatcc_json_printer_int16_enum_vector_field@@Base+0xac>
   41514:	ldr	r0, [fp, #-4]
   41518:	ldr	r1, [r0, #20]
   4151c:	add	r2, r1, #1
   41520:	str	r2, [r0, #20]
   41524:	movw	r0, #44	; 0x2c
   41528:	strb	r0, [r1]
   4152c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41530:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   41534:	str	r0, [fp, #-20]	; 0xffffffec
   41538:	ldr	r0, [fp, #-20]	; 0xffffffec
   4153c:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41540:	str	r0, [fp, #-24]	; 0xffffffe8
   41544:	ldr	r0, [fp, #-20]	; 0xffffffec
   41548:	add	r0, r0, #4
   4154c:	str	r0, [fp, #-20]	; 0xffffffec
   41550:	ldr	r0, [fp, #-4]
   41554:	ldr	r1, [fp, #-16]
   41558:	ldr	r2, [fp, #8]
   4155c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   41560:	ldr	r0, [fp, #-4]
   41564:	ldr	r1, [r0, #32]
   41568:	add	r1, r1, #1
   4156c:	str	r1, [r0, #32]
   41570:	ldr	r0, [fp, #-4]
   41574:	ldr	r1, [r0, #20]
   41578:	add	r2, r1, #1
   4157c:	str	r2, [r0, #20]
   41580:	movw	r0, #91	; 0x5b
   41584:	strb	r0, [r1]
   41588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4158c:	cmp	r0, #0
   41590:	beq	4162c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ac>
   41594:	b	41598 <flatcc_json_printer_int16_enum_vector_field@@Base+0x118>
   41598:	ldr	r0, [fp, #-4]
   4159c:	ldrsb	r0, [r0, #25]
   415a0:	cmp	r0, #0
   415a4:	beq	415cc <flatcc_json_printer_int16_enum_vector_field@@Base+0x14c>
   415a8:	ldr	r0, [fp, #-4]
   415ac:	ldr	r1, [r0, #20]
   415b0:	add	r2, r1, #1
   415b4:	str	r2, [r0, #20]
   415b8:	movw	r0, #10
   415bc:	strb	r0, [r1]
   415c0:	ldr	r0, [fp, #-4]
   415c4:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   415c8:	b	415d4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x154>
   415cc:	ldr	r0, [fp, #-4]
   415d0:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   415d4:	b	415d8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x158>
   415d8:	ldr	r0, [fp, #12]
   415dc:	ldr	r1, [fp, #-4]
   415e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   415e4:	str	r0, [sp, #28]
   415e8:	mov	r0, r2
   415ec:	str	r1, [sp, #24]
   415f0:	bl	3c49c <flatcc_json_printer_int16_field@@Base+0x108>
   415f4:	ldr	r1, [sp, #24]
   415f8:	str	r0, [sp, #20]
   415fc:	mov	r0, r1
   41600:	ldr	r2, [sp, #20]
   41604:	sxth	r1, r2
   41608:	ldr	lr, [sp, #28]
   4160c:	blx	lr
   41610:	ldr	r0, [fp, #-20]	; 0xffffffec
   41614:	add	r0, r0, #2
   41618:	str	r0, [fp, #-20]	; 0xffffffec
   4161c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41620:	mvn	r1, #0
   41624:	add	r0, r0, r1
   41628:	str	r0, [fp, #-24]	; 0xffffffe8
   4162c:	b	41630 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   41630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41634:	mvn	r1, #0
   41638:	add	r1, r0, r1
   4163c:	str	r1, [fp, #-24]	; 0xffffffe8
   41640:	cmp	r0, #0
   41644:	beq	416e8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x268>
   41648:	ldr	r0, [fp, #-4]
   4164c:	ldr	r1, [r0, #20]
   41650:	add	r2, r1, #1
   41654:	str	r2, [r0, #20]
   41658:	movw	r0, #44	; 0x2c
   4165c:	strb	r0, [r1]
   41660:	ldr	r0, [fp, #-4]
   41664:	ldrsb	r0, [r0, #25]
   41668:	cmp	r0, #0
   4166c:	beq	41694 <flatcc_json_printer_int16_enum_vector_field@@Base+0x214>
   41670:	ldr	r0, [fp, #-4]
   41674:	ldr	r1, [r0, #20]
   41678:	add	r2, r1, #1
   4167c:	str	r2, [r0, #20]
   41680:	movw	r0, #10
   41684:	strb	r0, [r1]
   41688:	ldr	r0, [fp, #-4]
   4168c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   41690:	b	4169c <flatcc_json_printer_int16_enum_vector_field@@Base+0x21c>
   41694:	ldr	r0, [fp, #-4]
   41698:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   4169c:	b	416a0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x220>
   416a0:	ldr	r0, [fp, #12]
   416a4:	ldr	r1, [fp, #-4]
   416a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   416ac:	str	r0, [sp, #16]
   416b0:	mov	r0, r2
   416b4:	str	r1, [sp, #12]
   416b8:	bl	3c49c <flatcc_json_printer_int16_field@@Base+0x108>
   416bc:	ldr	r1, [sp, #12]
   416c0:	str	r0, [sp, #8]
   416c4:	mov	r0, r1
   416c8:	ldr	r2, [sp, #8]
   416cc:	sxth	r1, r2
   416d0:	ldr	lr, [sp, #16]
   416d4:	blx	lr
   416d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   416dc:	add	r0, r0, #2
   416e0:	str	r0, [fp, #-20]	; 0xffffffec
   416e4:	b	41630 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   416e8:	b	416ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x26c>
   416ec:	ldr	r0, [fp, #-4]
   416f0:	ldrsb	r0, [r0, #25]
   416f4:	cmp	r0, #0
   416f8:	beq	41730 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2b0>
   416fc:	ldr	r0, [fp, #-4]
   41700:	ldr	r1, [r0, #20]
   41704:	add	r2, r1, #1
   41708:	str	r2, [r0, #20]
   4170c:	movw	r0, #10
   41710:	strb	r0, [r1]
   41714:	ldr	r0, [fp, #-4]
   41718:	ldr	r1, [r0, #32]
   4171c:	mvn	r2, #0
   41720:	add	r1, r1, r2
   41724:	str	r1, [r0, #32]
   41728:	ldr	r0, [fp, #-4]
   4172c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   41730:	ldr	r0, [fp, #-4]
   41734:	ldr	r1, [r0, #20]
   41738:	add	r2, r1, #1
   4173c:	str	r2, [r0, #20]
   41740:	movw	r0, #93	; 0x5d
   41744:	strb	r0, [r1]
   41748:	b	4174c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2cc>
   4174c:	mov	sp, fp
   41750:	pop	{fp, pc}

00041754 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   41754:	push	{fp, lr}
   41758:	mov	fp, sp
   4175c:	sub	sp, sp, #64	; 0x40
   41760:	ldr	ip, [fp, #12]
   41764:	ldr	lr, [fp, #8]
   41768:	str	r0, [fp, #-4]
   4176c:	str	r1, [fp, #-8]
   41770:	str	r2, [fp, #-12]
   41774:	str	r3, [fp, #-16]
   41778:	ldr	r0, [fp, #-4]
   4177c:	ldrsb	r0, [r0, #27]
   41780:	cmp	r0, #0
   41784:	str	lr, [fp, #-28]	; 0xffffffe4
   41788:	str	ip, [sp, #32]
   4178c:	beq	417b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   41790:	ldr	r0, [fp, #-4]
   41794:	ldr	r1, [fp, #-8]
   41798:	ldr	r2, [fp, #-12]
   4179c:	ldr	r3, [fp, #-16]
   417a0:	ldr	ip, [fp, #8]
   417a4:	str	ip, [sp]
   417a8:	bl	3f73c <flatcc_json_printer_int32_vector_field@@Base>
   417ac:	b	41a18 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   417b0:	ldr	r0, [fp, #-8]
   417b4:	ldr	r1, [fp, #-12]
   417b8:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   417bc:	str	r0, [fp, #-20]	; 0xffffffec
   417c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   417c4:	movw	r1, #0
   417c8:	cmp	r0, r1
   417cc:	beq	41a18 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   417d0:	ldr	r0, [fp, #-8]
   417d4:	ldr	r1, [r0, #16]
   417d8:	add	r2, r1, #1
   417dc:	str	r2, [r0, #16]
   417e0:	cmp	r1, #0
   417e4:	beq	41800 <flatcc_json_printer_int32_enum_vector_field@@Base+0xac>
   417e8:	ldr	r0, [fp, #-4]
   417ec:	ldr	r1, [r0, #20]
   417f0:	add	r2, r1, #1
   417f4:	str	r2, [r0, #20]
   417f8:	movw	r0, #44	; 0x2c
   417fc:	strb	r0, [r1]
   41800:	ldr	r0, [fp, #-20]	; 0xffffffec
   41804:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   41808:	str	r0, [fp, #-20]	; 0xffffffec
   4180c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41810:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41814:	str	r0, [fp, #-24]	; 0xffffffe8
   41818:	ldr	r0, [fp, #-20]	; 0xffffffec
   4181c:	add	r0, r0, #4
   41820:	str	r0, [fp, #-20]	; 0xffffffec
   41824:	ldr	r0, [fp, #-4]
   41828:	ldr	r1, [fp, #-16]
   4182c:	ldr	r2, [fp, #8]
   41830:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   41834:	ldr	r0, [fp, #-4]
   41838:	ldr	r1, [r0, #32]
   4183c:	add	r1, r1, #1
   41840:	str	r1, [r0, #32]
   41844:	ldr	r0, [fp, #-4]
   41848:	ldr	r1, [r0, #20]
   4184c:	add	r2, r1, #1
   41850:	str	r2, [r0, #20]
   41854:	movw	r0, #91	; 0x5b
   41858:	strb	r0, [r1]
   4185c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41860:	cmp	r0, #0
   41864:	beq	418fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
   41868:	b	4186c <flatcc_json_printer_int32_enum_vector_field@@Base+0x118>
   4186c:	ldr	r0, [fp, #-4]
   41870:	ldrsb	r0, [r0, #25]
   41874:	cmp	r0, #0
   41878:	beq	418a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x14c>
   4187c:	ldr	r0, [fp, #-4]
   41880:	ldr	r1, [r0, #20]
   41884:	add	r2, r1, #1
   41888:	str	r2, [r0, #20]
   4188c:	movw	r0, #10
   41890:	strb	r0, [r1]
   41894:	ldr	r0, [fp, #-4]
   41898:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   4189c:	b	418a8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x154>
   418a0:	ldr	r0, [fp, #-4]
   418a4:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   418a8:	b	418ac <flatcc_json_printer_int32_enum_vector_field@@Base+0x158>
   418ac:	ldr	r0, [fp, #12]
   418b0:	ldr	r1, [fp, #-4]
   418b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   418b8:	str	r0, [sp, #28]
   418bc:	mov	r0, r2
   418c0:	str	r1, [sp, #24]
   418c4:	bl	3c5c8 <flatcc_json_printer_int32_field@@Base+0x104>
   418c8:	ldr	r1, [sp, #24]
   418cc:	str	r0, [sp, #20]
   418d0:	mov	r0, r1
   418d4:	ldr	r1, [sp, #20]
   418d8:	ldr	r2, [sp, #28]
   418dc:	blx	r2
   418e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   418e4:	add	r0, r0, #4
   418e8:	str	r0, [fp, #-20]	; 0xffffffec
   418ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   418f0:	mvn	r1, #0
   418f4:	add	r0, r0, r1
   418f8:	str	r0, [fp, #-24]	; 0xffffffe8
   418fc:	b	41900 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ac>
   41900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41904:	mvn	r1, #0
   41908:	add	r1, r0, r1
   4190c:	str	r1, [fp, #-24]	; 0xffffffe8
   41910:	cmp	r0, #0
   41914:	beq	419b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x260>
   41918:	ldr	r0, [fp, #-4]
   4191c:	ldr	r1, [r0, #20]
   41920:	add	r2, r1, #1
   41924:	str	r2, [r0, #20]
   41928:	movw	r0, #44	; 0x2c
   4192c:	strb	r0, [r1]
   41930:	ldr	r0, [fp, #-4]
   41934:	ldrsb	r0, [r0, #25]
   41938:	cmp	r0, #0
   4193c:	beq	41964 <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
   41940:	ldr	r0, [fp, #-4]
   41944:	ldr	r1, [r0, #20]
   41948:	add	r2, r1, #1
   4194c:	str	r2, [r0, #20]
   41950:	movw	r0, #10
   41954:	strb	r0, [r1]
   41958:	ldr	r0, [fp, #-4]
   4195c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   41960:	b	4196c <flatcc_json_printer_int32_enum_vector_field@@Base+0x218>
   41964:	ldr	r0, [fp, #-4]
   41968:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   4196c:	b	41970 <flatcc_json_printer_int32_enum_vector_field@@Base+0x21c>
   41970:	ldr	r0, [fp, #12]
   41974:	ldr	r1, [fp, #-4]
   41978:	ldr	r2, [fp, #-20]	; 0xffffffec
   4197c:	str	r0, [sp, #16]
   41980:	mov	r0, r2
   41984:	str	r1, [sp, #12]
   41988:	bl	3c5c8 <flatcc_json_printer_int32_field@@Base+0x104>
   4198c:	ldr	r1, [sp, #12]
   41990:	str	r0, [sp, #8]
   41994:	mov	r0, r1
   41998:	ldr	r1, [sp, #8]
   4199c:	ldr	r2, [sp, #16]
   419a0:	blx	r2
   419a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   419a8:	add	r0, r0, #4
   419ac:	str	r0, [fp, #-20]	; 0xffffffec
   419b0:	b	41900 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ac>
   419b4:	b	419b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x264>
   419b8:	ldr	r0, [fp, #-4]
   419bc:	ldrsb	r0, [r0, #25]
   419c0:	cmp	r0, #0
   419c4:	beq	419fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a8>
   419c8:	ldr	r0, [fp, #-4]
   419cc:	ldr	r1, [r0, #20]
   419d0:	add	r2, r1, #1
   419d4:	str	r2, [r0, #20]
   419d8:	movw	r0, #10
   419dc:	strb	r0, [r1]
   419e0:	ldr	r0, [fp, #-4]
   419e4:	ldr	r1, [r0, #32]
   419e8:	mvn	r2, #0
   419ec:	add	r1, r1, r2
   419f0:	str	r1, [r0, #32]
   419f4:	ldr	r0, [fp, #-4]
   419f8:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   419fc:	ldr	r0, [fp, #-4]
   41a00:	ldr	r1, [r0, #20]
   41a04:	add	r2, r1, #1
   41a08:	str	r2, [r0, #20]
   41a0c:	movw	r0, #93	; 0x5d
   41a10:	strb	r0, [r1]
   41a14:	b	41a18 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   41a18:	mov	sp, fp
   41a1c:	pop	{fp, pc}

00041a20 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   41a20:	push	{fp, lr}
   41a24:	mov	fp, sp
   41a28:	sub	sp, sp, #64	; 0x40
   41a2c:	ldr	ip, [fp, #12]
   41a30:	ldr	lr, [fp, #8]
   41a34:	str	r0, [fp, #-4]
   41a38:	str	r1, [fp, #-8]
   41a3c:	str	r2, [fp, #-12]
   41a40:	str	r3, [fp, #-16]
   41a44:	ldr	r0, [fp, #-4]
   41a48:	ldrsb	r0, [r0, #27]
   41a4c:	cmp	r0, #0
   41a50:	str	lr, [fp, #-28]	; 0xffffffe4
   41a54:	str	ip, [sp, #32]
   41a58:	beq	41a7c <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   41a5c:	ldr	r0, [fp, #-4]
   41a60:	ldr	r1, [fp, #-8]
   41a64:	ldr	r2, [fp, #-12]
   41a68:	ldr	r3, [fp, #-16]
   41a6c:	ldr	ip, [fp, #8]
   41a70:	str	ip, [sp]
   41a74:	bl	3f9b0 <flatcc_json_printer_int64_vector_field@@Base>
   41a78:	b	41cec <flatcc_json_printer_int64_enum_vector_field@@Base+0x2cc>
   41a7c:	ldr	r0, [fp, #-8]
   41a80:	ldr	r1, [fp, #-12]
   41a84:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   41a88:	str	r0, [fp, #-20]	; 0xffffffec
   41a8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41a90:	movw	r1, #0
   41a94:	cmp	r0, r1
   41a98:	beq	41cec <flatcc_json_printer_int64_enum_vector_field@@Base+0x2cc>
   41a9c:	ldr	r0, [fp, #-8]
   41aa0:	ldr	r1, [r0, #16]
   41aa4:	add	r2, r1, #1
   41aa8:	str	r2, [r0, #16]
   41aac:	cmp	r1, #0
   41ab0:	beq	41acc <flatcc_json_printer_int64_enum_vector_field@@Base+0xac>
   41ab4:	ldr	r0, [fp, #-4]
   41ab8:	ldr	r1, [r0, #20]
   41abc:	add	r2, r1, #1
   41ac0:	str	r2, [r0, #20]
   41ac4:	movw	r0, #44	; 0x2c
   41ac8:	strb	r0, [r1]
   41acc:	ldr	r0, [fp, #-20]	; 0xffffffec
   41ad0:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   41ad4:	str	r0, [fp, #-20]	; 0xffffffec
   41ad8:	ldr	r0, [fp, #-20]	; 0xffffffec
   41adc:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41ae0:	str	r0, [fp, #-24]	; 0xffffffe8
   41ae4:	ldr	r0, [fp, #-20]	; 0xffffffec
   41ae8:	add	r0, r0, #4
   41aec:	str	r0, [fp, #-20]	; 0xffffffec
   41af0:	ldr	r0, [fp, #-4]
   41af4:	ldr	r1, [fp, #-16]
   41af8:	ldr	r2, [fp, #8]
   41afc:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   41b00:	ldr	r0, [fp, #-4]
   41b04:	ldr	r1, [r0, #32]
   41b08:	add	r1, r1, #1
   41b0c:	str	r1, [r0, #32]
   41b10:	ldr	r0, [fp, #-4]
   41b14:	ldr	r1, [r0, #20]
   41b18:	add	r2, r1, #1
   41b1c:	str	r2, [r0, #20]
   41b20:	movw	r0, #91	; 0x5b
   41b24:	strb	r0, [r1]
   41b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41b2c:	cmp	r0, #0
   41b30:	beq	41bcc <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ac>
   41b34:	b	41b38 <flatcc_json_printer_int64_enum_vector_field@@Base+0x118>
   41b38:	ldr	r0, [fp, #-4]
   41b3c:	ldrsb	r0, [r0, #25]
   41b40:	cmp	r0, #0
   41b44:	beq	41b6c <flatcc_json_printer_int64_enum_vector_field@@Base+0x14c>
   41b48:	ldr	r0, [fp, #-4]
   41b4c:	ldr	r1, [r0, #20]
   41b50:	add	r2, r1, #1
   41b54:	str	r2, [r0, #20]
   41b58:	movw	r0, #10
   41b5c:	strb	r0, [r1]
   41b60:	ldr	r0, [fp, #-4]
   41b64:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   41b68:	b	41b74 <flatcc_json_printer_int64_enum_vector_field@@Base+0x154>
   41b6c:	ldr	r0, [fp, #-4]
   41b70:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   41b74:	b	41b78 <flatcc_json_printer_int64_enum_vector_field@@Base+0x158>
   41b78:	ldr	r0, [fp, #12]
   41b7c:	ldr	r1, [fp, #-4]
   41b80:	ldr	r2, [fp, #-20]	; 0xffffffec
   41b84:	str	r0, [sp, #28]
   41b88:	mov	r0, r2
   41b8c:	str	r1, [sp, #24]
   41b90:	bl	3c720 <flatcc_json_printer_int64_field@@Base+0x134>
   41b94:	ldr	r2, [sp, #24]
   41b98:	str	r0, [sp, #20]
   41b9c:	mov	r0, r2
   41ba0:	ldr	r2, [sp, #20]
   41ba4:	mov	r3, r1
   41ba8:	ldr	r1, [sp, #28]
   41bac:	blx	r1
   41bb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   41bb4:	add	r0, r0, #8
   41bb8:	str	r0, [fp, #-20]	; 0xffffffec
   41bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41bc0:	mvn	r1, #0
   41bc4:	add	r0, r0, r1
   41bc8:	str	r0, [fp, #-24]	; 0xffffffe8
   41bcc:	b	41bd0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   41bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41bd4:	mvn	r1, #0
   41bd8:	add	r1, r0, r1
   41bdc:	str	r1, [fp, #-24]	; 0xffffffe8
   41be0:	cmp	r0, #0
   41be4:	beq	41c88 <flatcc_json_printer_int64_enum_vector_field@@Base+0x268>
   41be8:	ldr	r0, [fp, #-4]
   41bec:	ldr	r1, [r0, #20]
   41bf0:	add	r2, r1, #1
   41bf4:	str	r2, [r0, #20]
   41bf8:	movw	r0, #44	; 0x2c
   41bfc:	strb	r0, [r1]
   41c00:	ldr	r0, [fp, #-4]
   41c04:	ldrsb	r0, [r0, #25]
   41c08:	cmp	r0, #0
   41c0c:	beq	41c34 <flatcc_json_printer_int64_enum_vector_field@@Base+0x214>
   41c10:	ldr	r0, [fp, #-4]
   41c14:	ldr	r1, [r0, #20]
   41c18:	add	r2, r1, #1
   41c1c:	str	r2, [r0, #20]
   41c20:	movw	r0, #10
   41c24:	strb	r0, [r1]
   41c28:	ldr	r0, [fp, #-4]
   41c2c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   41c30:	b	41c3c <flatcc_json_printer_int64_enum_vector_field@@Base+0x21c>
   41c34:	ldr	r0, [fp, #-4]
   41c38:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   41c3c:	b	41c40 <flatcc_json_printer_int64_enum_vector_field@@Base+0x220>
   41c40:	ldr	r0, [fp, #12]
   41c44:	ldr	r1, [fp, #-4]
   41c48:	ldr	r2, [fp, #-20]	; 0xffffffec
   41c4c:	str	r0, [sp, #16]
   41c50:	mov	r0, r2
   41c54:	str	r1, [sp, #12]
   41c58:	bl	3c720 <flatcc_json_printer_int64_field@@Base+0x134>
   41c5c:	ldr	r2, [sp, #12]
   41c60:	str	r0, [sp, #8]
   41c64:	mov	r0, r2
   41c68:	ldr	r2, [sp, #8]
   41c6c:	mov	r3, r1
   41c70:	ldr	r1, [sp, #16]
   41c74:	blx	r1
   41c78:	ldr	r0, [fp, #-20]	; 0xffffffec
   41c7c:	add	r0, r0, #8
   41c80:	str	r0, [fp, #-20]	; 0xffffffec
   41c84:	b	41bd0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   41c88:	b	41c8c <flatcc_json_printer_int64_enum_vector_field@@Base+0x26c>
   41c8c:	ldr	r0, [fp, #-4]
   41c90:	ldrsb	r0, [r0, #25]
   41c94:	cmp	r0, #0
   41c98:	beq	41cd0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2b0>
   41c9c:	ldr	r0, [fp, #-4]
   41ca0:	ldr	r1, [r0, #20]
   41ca4:	add	r2, r1, #1
   41ca8:	str	r2, [r0, #20]
   41cac:	movw	r0, #10
   41cb0:	strb	r0, [r1]
   41cb4:	ldr	r0, [fp, #-4]
   41cb8:	ldr	r1, [r0, #32]
   41cbc:	mvn	r2, #0
   41cc0:	add	r1, r1, r2
   41cc4:	str	r1, [r0, #32]
   41cc8:	ldr	r0, [fp, #-4]
   41ccc:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   41cd0:	ldr	r0, [fp, #-4]
   41cd4:	ldr	r1, [r0, #20]
   41cd8:	add	r2, r1, #1
   41cdc:	str	r2, [r0, #20]
   41ce0:	movw	r0, #93	; 0x5d
   41ce4:	strb	r0, [r1]
   41ce8:	b	41cec <flatcc_json_printer_int64_enum_vector_field@@Base+0x2cc>
   41cec:	mov	sp, fp
   41cf0:	pop	{fp, pc}

00041cf4 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   41cf4:	push	{fp, lr}
   41cf8:	mov	fp, sp
   41cfc:	sub	sp, sp, #64	; 0x40
   41d00:	ldr	ip, [fp, #12]
   41d04:	ldr	lr, [fp, #8]
   41d08:	str	r0, [fp, #-4]
   41d0c:	str	r1, [fp, #-8]
   41d10:	str	r2, [fp, #-12]
   41d14:	str	r3, [fp, #-16]
   41d18:	ldr	r0, [fp, #-4]
   41d1c:	ldrsb	r0, [r0, #27]
   41d20:	cmp	r0, #0
   41d24:	str	lr, [fp, #-28]	; 0xffffffe4
   41d28:	str	ip, [sp, #32]
   41d2c:	beq	41d50 <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   41d30:	ldr	r0, [fp, #-4]
   41d34:	ldr	r1, [fp, #-8]
   41d38:	ldr	r2, [fp, #-12]
   41d3c:	ldr	r3, [fp, #-16]
   41d40:	ldr	ip, [fp, #8]
   41d44:	str	ip, [sp]
   41d48:	bl	3fc24 <flatcc_json_printer_bool_vector_field@@Base>
   41d4c:	b	41fc0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2cc>
   41d50:	ldr	r0, [fp, #-8]
   41d54:	ldr	r1, [fp, #-12]
   41d58:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   41d5c:	str	r0, [fp, #-20]	; 0xffffffec
   41d60:	ldr	r0, [fp, #-20]	; 0xffffffec
   41d64:	movw	r1, #0
   41d68:	cmp	r0, r1
   41d6c:	beq	41fc0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2cc>
   41d70:	ldr	r0, [fp, #-8]
   41d74:	ldr	r1, [r0, #16]
   41d78:	add	r2, r1, #1
   41d7c:	str	r2, [r0, #16]
   41d80:	cmp	r1, #0
   41d84:	beq	41da0 <flatcc_json_printer_bool_enum_vector_field@@Base+0xac>
   41d88:	ldr	r0, [fp, #-4]
   41d8c:	ldr	r1, [r0, #20]
   41d90:	add	r2, r1, #1
   41d94:	str	r2, [r0, #20]
   41d98:	movw	r0, #44	; 0x2c
   41d9c:	strb	r0, [r1]
   41da0:	ldr	r0, [fp, #-20]	; 0xffffffec
   41da4:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   41da8:	str	r0, [fp, #-20]	; 0xffffffec
   41dac:	ldr	r0, [fp, #-20]	; 0xffffffec
   41db0:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41db4:	str	r0, [fp, #-24]	; 0xffffffe8
   41db8:	ldr	r0, [fp, #-20]	; 0xffffffec
   41dbc:	add	r0, r0, #4
   41dc0:	str	r0, [fp, #-20]	; 0xffffffec
   41dc4:	ldr	r0, [fp, #-4]
   41dc8:	ldr	r1, [fp, #-16]
   41dcc:	ldr	r2, [fp, #8]
   41dd0:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   41dd4:	ldr	r0, [fp, #-4]
   41dd8:	ldr	r1, [r0, #32]
   41ddc:	add	r1, r1, #1
   41de0:	str	r1, [r0, #32]
   41de4:	ldr	r0, [fp, #-4]
   41de8:	ldr	r1, [r0, #20]
   41dec:	add	r2, r1, #1
   41df0:	str	r2, [r0, #20]
   41df4:	movw	r0, #91	; 0x5b
   41df8:	strb	r0, [r1]
   41dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41e00:	cmp	r0, #0
   41e04:	beq	41ea0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ac>
   41e08:	b	41e0c <flatcc_json_printer_bool_enum_vector_field@@Base+0x118>
   41e0c:	ldr	r0, [fp, #-4]
   41e10:	ldrsb	r0, [r0, #25]
   41e14:	cmp	r0, #0
   41e18:	beq	41e40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x14c>
   41e1c:	ldr	r0, [fp, #-4]
   41e20:	ldr	r1, [r0, #20]
   41e24:	add	r2, r1, #1
   41e28:	str	r2, [r0, #20]
   41e2c:	movw	r0, #10
   41e30:	strb	r0, [r1]
   41e34:	ldr	r0, [fp, #-4]
   41e38:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   41e3c:	b	41e48 <flatcc_json_printer_bool_enum_vector_field@@Base+0x154>
   41e40:	ldr	r0, [fp, #-4]
   41e44:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   41e48:	b	41e4c <flatcc_json_printer_bool_enum_vector_field@@Base+0x158>
   41e4c:	ldr	r0, [fp, #12]
   41e50:	ldr	r1, [fp, #-4]
   41e54:	ldr	r2, [fp, #-20]	; 0xffffffec
   41e58:	str	r0, [sp, #28]
   41e5c:	mov	r0, r2
   41e60:	str	r1, [sp, #24]
   41e64:	bl	3c858 <flatcc_json_printer_bool_field@@Base+0x104>
   41e68:	ldr	r1, [sp, #24]
   41e6c:	str	r0, [sp, #20]
   41e70:	mov	r0, r1
   41e74:	ldr	r2, [sp, #20]
   41e78:	and	r1, r2, #255	; 0xff
   41e7c:	ldr	lr, [sp, #28]
   41e80:	blx	lr
   41e84:	ldr	r0, [fp, #-20]	; 0xffffffec
   41e88:	add	r0, r0, #1
   41e8c:	str	r0, [fp, #-20]	; 0xffffffec
   41e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41e94:	mvn	r1, #0
   41e98:	add	r0, r0, r1
   41e9c:	str	r0, [fp, #-24]	; 0xffffffe8
   41ea0:	b	41ea4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   41ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41ea8:	mvn	r1, #0
   41eac:	add	r1, r0, r1
   41eb0:	str	r1, [fp, #-24]	; 0xffffffe8
   41eb4:	cmp	r0, #0
   41eb8:	beq	41f5c <flatcc_json_printer_bool_enum_vector_field@@Base+0x268>
   41ebc:	ldr	r0, [fp, #-4]
   41ec0:	ldr	r1, [r0, #20]
   41ec4:	add	r2, r1, #1
   41ec8:	str	r2, [r0, #20]
   41ecc:	movw	r0, #44	; 0x2c
   41ed0:	strb	r0, [r1]
   41ed4:	ldr	r0, [fp, #-4]
   41ed8:	ldrsb	r0, [r0, #25]
   41edc:	cmp	r0, #0
   41ee0:	beq	41f08 <flatcc_json_printer_bool_enum_vector_field@@Base+0x214>
   41ee4:	ldr	r0, [fp, #-4]
   41ee8:	ldr	r1, [r0, #20]
   41eec:	add	r2, r1, #1
   41ef0:	str	r2, [r0, #20]
   41ef4:	movw	r0, #10
   41ef8:	strb	r0, [r1]
   41efc:	ldr	r0, [fp, #-4]
   41f00:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   41f04:	b	41f10 <flatcc_json_printer_bool_enum_vector_field@@Base+0x21c>
   41f08:	ldr	r0, [fp, #-4]
   41f0c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   41f10:	b	41f14 <flatcc_json_printer_bool_enum_vector_field@@Base+0x220>
   41f14:	ldr	r0, [fp, #12]
   41f18:	ldr	r1, [fp, #-4]
   41f1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   41f20:	str	r0, [sp, #16]
   41f24:	mov	r0, r2
   41f28:	str	r1, [sp, #12]
   41f2c:	bl	3c858 <flatcc_json_printer_bool_field@@Base+0x104>
   41f30:	ldr	r1, [sp, #12]
   41f34:	str	r0, [sp, #8]
   41f38:	mov	r0, r1
   41f3c:	ldr	r2, [sp, #8]
   41f40:	and	r1, r2, #255	; 0xff
   41f44:	ldr	lr, [sp, #16]
   41f48:	blx	lr
   41f4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41f50:	add	r0, r0, #1
   41f54:	str	r0, [fp, #-20]	; 0xffffffec
   41f58:	b	41ea4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   41f5c:	b	41f60 <flatcc_json_printer_bool_enum_vector_field@@Base+0x26c>
   41f60:	ldr	r0, [fp, #-4]
   41f64:	ldrsb	r0, [r0, #25]
   41f68:	cmp	r0, #0
   41f6c:	beq	41fa4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2b0>
   41f70:	ldr	r0, [fp, #-4]
   41f74:	ldr	r1, [r0, #20]
   41f78:	add	r2, r1, #1
   41f7c:	str	r2, [r0, #20]
   41f80:	movw	r0, #10
   41f84:	strb	r0, [r1]
   41f88:	ldr	r0, [fp, #-4]
   41f8c:	ldr	r1, [r0, #32]
   41f90:	mvn	r2, #0
   41f94:	add	r1, r1, r2
   41f98:	str	r1, [r0, #32]
   41f9c:	ldr	r0, [fp, #-4]
   41fa0:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   41fa4:	ldr	r0, [fp, #-4]
   41fa8:	ldr	r1, [r0, #20]
   41fac:	add	r2, r1, #1
   41fb0:	str	r2, [r0, #20]
   41fb4:	movw	r0, #93	; 0x5d
   41fb8:	strb	r0, [r1]
   41fbc:	b	41fc0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2cc>
   41fc0:	mov	sp, fp
   41fc4:	pop	{fp, pc}

00041fc8 <flatcc_json_printer_struct_vector_field@@Base>:
   41fc8:	push	{r4, sl, fp, lr}
   41fcc:	add	fp, sp, #8
   41fd0:	sub	sp, sp, #48	; 0x30
   41fd4:	ldr	ip, [fp, #16]
   41fd8:	ldr	lr, [fp, #12]
   41fdc:	ldr	r4, [fp, #8]
   41fe0:	str	r0, [fp, #-12]
   41fe4:	str	r1, [fp, #-16]
   41fe8:	str	r2, [fp, #-20]	; 0xffffffec
   41fec:	str	r3, [fp, #-24]	; 0xffffffe8
   41ff0:	ldr	r0, [fp, #-16]
   41ff4:	ldr	r1, [fp, #-20]	; 0xffffffec
   41ff8:	str	r4, [sp, #20]
   41ffc:	str	lr, [sp, #16]
   42000:	str	ip, [sp, #12]
   42004:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   42008:	str	r0, [sp, #28]
   4200c:	ldr	r0, [sp, #28]
   42010:	movw	r1, #0
   42014:	cmp	r0, r1
   42018:	beq	42344 <flatcc_json_printer_struct_vector_field@@Base+0x37c>
   4201c:	ldr	r0, [fp, #-16]
   42020:	ldr	r1, [r0, #16]
   42024:	add	r2, r1, #1
   42028:	str	r2, [r0, #16]
   4202c:	cmp	r1, #0
   42030:	beq	4204c <flatcc_json_printer_struct_vector_field@@Base+0x84>
   42034:	ldr	r0, [fp, #-12]
   42038:	ldr	r1, [r0, #20]
   4203c:	add	r2, r1, #1
   42040:	str	r2, [r0, #20]
   42044:	movw	r0, #44	; 0x2c
   42048:	strb	r0, [r1]
   4204c:	ldr	r0, [sp, #28]
   42050:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   42054:	str	r0, [sp, #28]
   42058:	ldr	r0, [sp, #28]
   4205c:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   42060:	str	r0, [sp, #24]
   42064:	ldr	r0, [sp, #28]
   42068:	add	r0, r0, #4
   4206c:	str	r0, [sp, #28]
   42070:	ldr	r0, [fp, #-12]
   42074:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42078:	ldr	r2, [fp, #8]
   4207c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   42080:	ldr	r0, [fp, #-12]
   42084:	ldr	r1, [r0, #32]
   42088:	add	r1, r1, #1
   4208c:	str	r1, [r0, #32]
   42090:	ldr	r0, [fp, #-12]
   42094:	ldr	r1, [r0, #20]
   42098:	add	r2, r1, #1
   4209c:	str	r2, [r0, #20]
   420a0:	movw	r0, #91	; 0x5b
   420a4:	strb	r0, [r1]
   420a8:	ldr	r0, [sp, #24]
   420ac:	cmp	r0, #0
   420b0:	beq	421b0 <flatcc_json_printer_struct_vector_field@@Base+0x1e8>
   420b4:	b	420b8 <flatcc_json_printer_struct_vector_field@@Base+0xf0>
   420b8:	ldr	r0, [fp, #-12]
   420bc:	ldrsb	r0, [r0, #25]
   420c0:	cmp	r0, #0
   420c4:	beq	420ec <flatcc_json_printer_struct_vector_field@@Base+0x124>
   420c8:	ldr	r0, [fp, #-12]
   420cc:	ldr	r1, [r0, #20]
   420d0:	add	r2, r1, #1
   420d4:	str	r2, [r0, #20]
   420d8:	movw	r0, #10
   420dc:	strb	r0, [r1]
   420e0:	ldr	r0, [fp, #-12]
   420e4:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   420e8:	b	420f4 <flatcc_json_printer_struct_vector_field@@Base+0x12c>
   420ec:	ldr	r0, [fp, #-12]
   420f0:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   420f4:	b	420f8 <flatcc_json_printer_struct_vector_field@@Base+0x130>
   420f8:	b	420fc <flatcc_json_printer_struct_vector_field@@Base+0x134>
   420fc:	ldr	r0, [fp, #-12]
   42100:	ldr	r1, [r0, #32]
   42104:	add	r1, r1, #1
   42108:	str	r1, [r0, #32]
   4210c:	ldr	r0, [fp, #-12]
   42110:	ldr	r1, [r0, #20]
   42114:	add	r2, r1, #1
   42118:	str	r2, [r0, #20]
   4211c:	movw	r0, #123	; 0x7b
   42120:	strb	r0, [r1]
   42124:	ldr	r0, [fp, #16]
   42128:	ldr	r1, [fp, #-12]
   4212c:	ldr	r2, [sp, #28]
   42130:	str	r0, [sp, #8]
   42134:	mov	r0, r1
   42138:	mov	r1, r2
   4213c:	ldr	r2, [sp, #8]
   42140:	blx	r2
   42144:	ldr	r0, [fp, #-12]
   42148:	ldrsb	r0, [r0, #25]
   4214c:	cmp	r0, #0
   42150:	beq	42188 <flatcc_json_printer_struct_vector_field@@Base+0x1c0>
   42154:	ldr	r0, [fp, #-12]
   42158:	ldr	r1, [r0, #20]
   4215c:	add	r2, r1, #1
   42160:	str	r2, [r0, #20]
   42164:	movw	r0, #10
   42168:	strb	r0, [r1]
   4216c:	ldr	r0, [fp, #-12]
   42170:	ldr	r1, [r0, #32]
   42174:	mvn	r2, #0
   42178:	add	r1, r1, r2
   4217c:	str	r1, [r0, #32]
   42180:	ldr	r0, [fp, #-12]
   42184:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   42188:	ldr	r0, [fp, #-12]
   4218c:	ldr	r1, [r0, #20]
   42190:	add	r2, r1, #1
   42194:	str	r2, [r0, #20]
   42198:	movw	r0, #125	; 0x7d
   4219c:	strb	r0, [r1]
   421a0:	ldr	r0, [sp, #24]
   421a4:	mvn	r1, #0
   421a8:	add	r0, r0, r1
   421ac:	str	r0, [sp, #24]
   421b0:	b	421b4 <flatcc_json_printer_struct_vector_field@@Base+0x1ec>
   421b4:	ldr	r0, [sp, #24]
   421b8:	mvn	r1, #0
   421bc:	add	r1, r0, r1
   421c0:	str	r1, [sp, #24]
   421c4:	cmp	r0, #0
   421c8:	beq	422e0 <flatcc_json_printer_struct_vector_field@@Base+0x318>
   421cc:	ldr	r0, [fp, #12]
   421d0:	ldr	r1, [sp, #28]
   421d4:	add	r0, r1, r0
   421d8:	str	r0, [sp, #28]
   421dc:	ldr	r0, [fp, #-12]
   421e0:	ldr	r1, [r0, #20]
   421e4:	add	r2, r1, #1
   421e8:	str	r2, [r0, #20]
   421ec:	movw	r0, #44	; 0x2c
   421f0:	strb	r0, [r1]
   421f4:	ldr	r0, [fp, #-12]
   421f8:	ldrsb	r0, [r0, #25]
   421fc:	cmp	r0, #0
   42200:	beq	42228 <flatcc_json_printer_struct_vector_field@@Base+0x260>
   42204:	ldr	r0, [fp, #-12]
   42208:	ldr	r1, [r0, #20]
   4220c:	add	r2, r1, #1
   42210:	str	r2, [r0, #20]
   42214:	movw	r0, #10
   42218:	strb	r0, [r1]
   4221c:	ldr	r0, [fp, #-12]
   42220:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   42224:	b	42230 <flatcc_json_printer_struct_vector_field@@Base+0x268>
   42228:	ldr	r0, [fp, #-12]
   4222c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   42230:	b	42234 <flatcc_json_printer_struct_vector_field@@Base+0x26c>
   42234:	b	42238 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   42238:	ldr	r0, [fp, #-12]
   4223c:	ldr	r1, [r0, #32]
   42240:	add	r1, r1, #1
   42244:	str	r1, [r0, #32]
   42248:	ldr	r0, [fp, #-12]
   4224c:	ldr	r1, [r0, #20]
   42250:	add	r2, r1, #1
   42254:	str	r2, [r0, #20]
   42258:	movw	r0, #123	; 0x7b
   4225c:	strb	r0, [r1]
   42260:	ldr	r0, [fp, #16]
   42264:	ldr	r1, [fp, #-12]
   42268:	ldr	r2, [sp, #28]
   4226c:	str	r0, [sp, #4]
   42270:	mov	r0, r1
   42274:	mov	r1, r2
   42278:	ldr	r2, [sp, #4]
   4227c:	blx	r2
   42280:	ldr	r0, [fp, #-12]
   42284:	ldrsb	r0, [r0, #25]
   42288:	cmp	r0, #0
   4228c:	beq	422c4 <flatcc_json_printer_struct_vector_field@@Base+0x2fc>
   42290:	ldr	r0, [fp, #-12]
   42294:	ldr	r1, [r0, #20]
   42298:	add	r2, r1, #1
   4229c:	str	r2, [r0, #20]
   422a0:	movw	r0, #10
   422a4:	strb	r0, [r1]
   422a8:	ldr	r0, [fp, #-12]
   422ac:	ldr	r1, [r0, #32]
   422b0:	mvn	r2, #0
   422b4:	add	r1, r1, r2
   422b8:	str	r1, [r0, #32]
   422bc:	ldr	r0, [fp, #-12]
   422c0:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   422c4:	ldr	r0, [fp, #-12]
   422c8:	ldr	r1, [r0, #20]
   422cc:	add	r2, r1, #1
   422d0:	str	r2, [r0, #20]
   422d4:	movw	r0, #125	; 0x7d
   422d8:	strb	r0, [r1]
   422dc:	b	421b4 <flatcc_json_printer_struct_vector_field@@Base+0x1ec>
   422e0:	b	422e4 <flatcc_json_printer_struct_vector_field@@Base+0x31c>
   422e4:	ldr	r0, [fp, #-12]
   422e8:	ldrsb	r0, [r0, #25]
   422ec:	cmp	r0, #0
   422f0:	beq	42328 <flatcc_json_printer_struct_vector_field@@Base+0x360>
   422f4:	ldr	r0, [fp, #-12]
   422f8:	ldr	r1, [r0, #20]
   422fc:	add	r2, r1, #1
   42300:	str	r2, [r0, #20]
   42304:	movw	r0, #10
   42308:	strb	r0, [r1]
   4230c:	ldr	r0, [fp, #-12]
   42310:	ldr	r1, [r0, #32]
   42314:	mvn	r2, #0
   42318:	add	r1, r1, r2
   4231c:	str	r1, [r0, #32]
   42320:	ldr	r0, [fp, #-12]
   42324:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   42328:	ldr	r0, [fp, #-12]
   4232c:	ldr	r1, [r0, #20]
   42330:	add	r2, r1, #1
   42334:	str	r2, [r0, #20]
   42338:	movw	r0, #93	; 0x5d
   4233c:	strb	r0, [r1]
   42340:	b	42344 <flatcc_json_printer_struct_vector_field@@Base+0x37c>
   42344:	sub	sp, fp, #8
   42348:	pop	{r4, sl, fp, pc}

0004234c <flatcc_json_printer_string_vector_field@@Base>:
   4234c:	push	{fp, lr}
   42350:	mov	fp, sp
   42354:	sub	sp, sp, #48	; 0x30
   42358:	ldr	ip, [fp, #8]
   4235c:	str	r0, [fp, #-4]
   42360:	str	r1, [fp, #-8]
   42364:	str	r2, [fp, #-12]
   42368:	str	r3, [fp, #-16]
   4236c:	ldr	r0, [fp, #-8]
   42370:	ldr	r1, [fp, #-12]
   42374:	str	ip, [sp, #20]
   42378:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   4237c:	str	r0, [fp, #-20]	; 0xffffffec
   42380:	ldr	r0, [fp, #-20]	; 0xffffffec
   42384:	movw	r1, #0
   42388:	cmp	r0, r1
   4238c:	beq	425b4 <flatcc_json_printer_string_vector_field@@Base+0x268>
   42390:	ldr	r0, [fp, #-8]
   42394:	ldr	r1, [r0, #16]
   42398:	add	r2, r1, #1
   4239c:	str	r2, [r0, #16]
   423a0:	cmp	r1, #0
   423a4:	beq	423c0 <flatcc_json_printer_string_vector_field@@Base+0x74>
   423a8:	ldr	r0, [fp, #-4]
   423ac:	ldr	r1, [r0, #20]
   423b0:	add	r2, r1, #1
   423b4:	str	r2, [r0, #20]
   423b8:	movw	r0, #44	; 0x2c
   423bc:	strb	r0, [r1]
   423c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   423c4:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   423c8:	str	r0, [fp, #-20]	; 0xffffffec
   423cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   423d0:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   423d4:	str	r0, [sp, #24]
   423d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   423dc:	add	r0, r0, #4
   423e0:	str	r0, [fp, #-20]	; 0xffffffec
   423e4:	ldr	r0, [fp, #-4]
   423e8:	ldr	r1, [fp, #-16]
   423ec:	ldr	r2, [fp, #8]
   423f0:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   423f4:	ldr	r0, [fp, #-4]
   423f8:	ldr	r1, [r0, #32]
   423fc:	add	r1, r1, #1
   42400:	str	r1, [r0, #32]
   42404:	ldr	r0, [fp, #-4]
   42408:	ldr	r1, [r0, #20]
   4240c:	add	r2, r1, #1
   42410:	str	r2, [r0, #20]
   42414:	movw	r0, #91	; 0x5b
   42418:	strb	r0, [r1]
   4241c:	ldr	r0, [sp, #24]
   42420:	cmp	r0, #0
   42424:	beq	424a4 <flatcc_json_printer_string_vector_field@@Base+0x158>
   42428:	b	4242c <flatcc_json_printer_string_vector_field@@Base+0xe0>
   4242c:	ldr	r0, [fp, #-4]
   42430:	ldrsb	r0, [r0, #25]
   42434:	cmp	r0, #0
   42438:	beq	42460 <flatcc_json_printer_string_vector_field@@Base+0x114>
   4243c:	ldr	r0, [fp, #-4]
   42440:	ldr	r1, [r0, #20]
   42444:	add	r2, r1, #1
   42448:	str	r2, [r0, #20]
   4244c:	movw	r0, #10
   42450:	strb	r0, [r1]
   42454:	ldr	r0, [fp, #-4]
   42458:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   4245c:	b	42468 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   42460:	ldr	r0, [fp, #-4]
   42464:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   42468:	b	4246c <flatcc_json_printer_string_vector_field@@Base+0x120>
   4246c:	ldr	r0, [fp, #-4]
   42470:	ldr	r1, [fp, #-20]	; 0xffffffec
   42474:	str	r0, [sp, #16]
   42478:	mov	r0, r1
   4247c:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   42480:	ldr	r1, [sp, #16]
   42484:	str	r0, [sp, #12]
   42488:	mov	r0, r1
   4248c:	ldr	r1, [sp, #12]
   42490:	bl	3b9d0 <flatcc_json_printer_string_field@@Base+0x214>
   42494:	ldr	r0, [sp, #24]
   42498:	mvn	r1, #0
   4249c:	add	r0, r0, r1
   424a0:	str	r0, [sp, #24]
   424a4:	b	424a8 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   424a8:	ldr	r0, [sp, #24]
   424ac:	mvn	r1, #0
   424b0:	add	r1, r0, r1
   424b4:	str	r1, [sp, #24]
   424b8:	cmp	r0, #0
   424bc:	beq	42550 <flatcc_json_printer_string_vector_field@@Base+0x204>
   424c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   424c4:	add	r0, r0, #4
   424c8:	str	r0, [fp, #-20]	; 0xffffffec
   424cc:	ldr	r0, [fp, #-4]
   424d0:	ldr	r1, [r0, #20]
   424d4:	add	r2, r1, #1
   424d8:	str	r2, [r0, #20]
   424dc:	movw	r0, #44	; 0x2c
   424e0:	strb	r0, [r1]
   424e4:	ldr	r0, [fp, #-4]
   424e8:	ldrsb	r0, [r0, #25]
   424ec:	cmp	r0, #0
   424f0:	beq	42518 <flatcc_json_printer_string_vector_field@@Base+0x1cc>
   424f4:	ldr	r0, [fp, #-4]
   424f8:	ldr	r1, [r0, #20]
   424fc:	add	r2, r1, #1
   42500:	str	r2, [r0, #20]
   42504:	movw	r0, #10
   42508:	strb	r0, [r1]
   4250c:	ldr	r0, [fp, #-4]
   42510:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   42514:	b	42520 <flatcc_json_printer_string_vector_field@@Base+0x1d4>
   42518:	ldr	r0, [fp, #-4]
   4251c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   42520:	b	42524 <flatcc_json_printer_string_vector_field@@Base+0x1d8>
   42524:	ldr	r0, [fp, #-4]
   42528:	ldr	r1, [fp, #-20]	; 0xffffffec
   4252c:	str	r0, [sp, #8]
   42530:	mov	r0, r1
   42534:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   42538:	ldr	r1, [sp, #8]
   4253c:	str	r0, [sp, #4]
   42540:	mov	r0, r1
   42544:	ldr	r1, [sp, #4]
   42548:	bl	3b9d0 <flatcc_json_printer_string_field@@Base+0x214>
   4254c:	b	424a8 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   42550:	b	42554 <flatcc_json_printer_string_vector_field@@Base+0x208>
   42554:	ldr	r0, [fp, #-4]
   42558:	ldrsb	r0, [r0, #25]
   4255c:	cmp	r0, #0
   42560:	beq	42598 <flatcc_json_printer_string_vector_field@@Base+0x24c>
   42564:	ldr	r0, [fp, #-4]
   42568:	ldr	r1, [r0, #20]
   4256c:	add	r2, r1, #1
   42570:	str	r2, [r0, #20]
   42574:	movw	r0, #10
   42578:	strb	r0, [r1]
   4257c:	ldr	r0, [fp, #-4]
   42580:	ldr	r1, [r0, #32]
   42584:	mvn	r2, #0
   42588:	add	r1, r1, r2
   4258c:	str	r1, [r0, #32]
   42590:	ldr	r0, [fp, #-4]
   42594:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   42598:	ldr	r0, [fp, #-4]
   4259c:	ldr	r1, [r0, #20]
   425a0:	add	r2, r1, #1
   425a4:	str	r2, [r0, #20]
   425a8:	movw	r0, #93	; 0x5d
   425ac:	strb	r0, [r1]
   425b0:	b	425b4 <flatcc_json_printer_string_vector_field@@Base+0x268>
   425b4:	mov	sp, fp
   425b8:	pop	{fp, pc}

000425bc <flatcc_json_printer_table_vector_field@@Base>:
   425bc:	push	{fp, lr}
   425c0:	mov	fp, sp
   425c4:	sub	sp, sp, #48	; 0x30
   425c8:	ldr	ip, [fp, #12]
   425cc:	ldr	lr, [fp, #8]
   425d0:	str	r0, [fp, #-4]
   425d4:	str	r1, [fp, #-8]
   425d8:	str	r2, [fp, #-12]
   425dc:	str	r3, [fp, #-16]
   425e0:	ldr	r0, [fp, #-8]
   425e4:	ldr	r1, [fp, #-12]
   425e8:	str	lr, [sp, #20]
   425ec:	str	ip, [sp, #16]
   425f0:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   425f4:	str	r0, [fp, #-20]	; 0xffffffec
   425f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   425fc:	movw	r1, #0
   42600:	cmp	r0, r1
   42604:	beq	427c0 <flatcc_json_printer_table_vector_field@@Base+0x204>
   42608:	ldr	r0, [fp, #-8]
   4260c:	ldr	r1, [r0, #16]
   42610:	add	r2, r1, #1
   42614:	str	r2, [r0, #16]
   42618:	cmp	r1, #0
   4261c:	beq	42638 <flatcc_json_printer_table_vector_field@@Base+0x7c>
   42620:	ldr	r0, [fp, #-4]
   42624:	ldr	r1, [r0, #20]
   42628:	add	r2, r1, #1
   4262c:	str	r2, [r0, #20]
   42630:	movw	r0, #44	; 0x2c
   42634:	strb	r0, [r1]
   42638:	ldr	r0, [fp, #-20]	; 0xffffffec
   4263c:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   42640:	str	r0, [fp, #-20]	; 0xffffffec
   42644:	ldr	r0, [fp, #-20]	; 0xffffffec
   42648:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   4264c:	str	r0, [sp, #24]
   42650:	ldr	r0, [fp, #-20]	; 0xffffffec
   42654:	add	r0, r0, #4
   42658:	str	r0, [fp, #-20]	; 0xffffffec
   4265c:	ldr	r0, [fp, #-4]
   42660:	ldr	r1, [fp, #-16]
   42664:	ldr	r2, [fp, #8]
   42668:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   4266c:	ldr	r0, [fp, #-4]
   42670:	ldr	r1, [r0, #32]
   42674:	add	r1, r1, #1
   42678:	str	r1, [r0, #32]
   4267c:	ldr	r0, [fp, #-4]
   42680:	ldr	r1, [r0, #20]
   42684:	add	r2, r1, #1
   42688:	str	r2, [r0, #20]
   4268c:	movw	r0, #91	; 0x5b
   42690:	strb	r0, [r1]
   42694:	ldr	r0, [sp, #24]
   42698:	cmp	r0, #0
   4269c:	beq	426e4 <flatcc_json_printer_table_vector_field@@Base+0x128>
   426a0:	ldr	r0, [fp, #-4]
   426a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   426a8:	str	r0, [sp, #12]
   426ac:	mov	r0, r1
   426b0:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   426b4:	ldr	r1, [fp, #-8]
   426b8:	ldr	r2, [r1, #12]
   426bc:	ldr	r3, [fp, #12]
   426c0:	ldr	r1, [sp, #12]
   426c4:	str	r0, [sp, #8]
   426c8:	mov	r0, r1
   426cc:	ldr	r1, [sp, #8]
   426d0:	bl	427c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   426d4:	ldr	r0, [sp, #24]
   426d8:	mvn	r1, #0
   426dc:	add	r0, r0, r1
   426e0:	str	r0, [sp, #24]
   426e4:	b	426e8 <flatcc_json_printer_table_vector_field@@Base+0x12c>
   426e8:	ldr	r0, [sp, #24]
   426ec:	mvn	r1, #0
   426f0:	add	r1, r0, r1
   426f4:	str	r1, [sp, #24]
   426f8:	cmp	r0, #0
   426fc:	beq	4275c <flatcc_json_printer_table_vector_field@@Base+0x1a0>
   42700:	ldr	r0, [fp, #-20]	; 0xffffffec
   42704:	add	r0, r0, #4
   42708:	str	r0, [fp, #-20]	; 0xffffffec
   4270c:	ldr	r0, [fp, #-4]
   42710:	ldr	r1, [r0, #20]
   42714:	add	r2, r1, #1
   42718:	str	r2, [r0, #20]
   4271c:	movw	r0, #44	; 0x2c
   42720:	strb	r0, [r1]
   42724:	ldr	r0, [fp, #-4]
   42728:	ldr	r1, [fp, #-20]	; 0xffffffec
   4272c:	str	r0, [sp, #4]
   42730:	mov	r0, r1
   42734:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   42738:	ldr	r1, [fp, #-8]
   4273c:	ldr	r2, [r1, #12]
   42740:	ldr	r3, [fp, #12]
   42744:	ldr	r1, [sp, #4]
   42748:	str	r0, [sp]
   4274c:	mov	r0, r1
   42750:	ldr	r1, [sp]
   42754:	bl	427c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   42758:	b	426e8 <flatcc_json_printer_table_vector_field@@Base+0x12c>
   4275c:	b	42760 <flatcc_json_printer_table_vector_field@@Base+0x1a4>
   42760:	ldr	r0, [fp, #-4]
   42764:	ldrsb	r0, [r0, #25]
   42768:	cmp	r0, #0
   4276c:	beq	427a4 <flatcc_json_printer_table_vector_field@@Base+0x1e8>
   42770:	ldr	r0, [fp, #-4]
   42774:	ldr	r1, [r0, #20]
   42778:	add	r2, r1, #1
   4277c:	str	r2, [r0, #20]
   42780:	movw	r0, #10
   42784:	strb	r0, [r1]
   42788:	ldr	r0, [fp, #-4]
   4278c:	ldr	r1, [r0, #32]
   42790:	mvn	r2, #0
   42794:	add	r1, r1, r2
   42798:	str	r1, [r0, #32]
   4279c:	ldr	r0, [fp, #-4]
   427a0:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   427a4:	ldr	r0, [fp, #-4]
   427a8:	ldr	r1, [r0, #20]
   427ac:	add	r2, r1, #1
   427b0:	str	r2, [r0, #20]
   427b4:	movw	r0, #93	; 0x5d
   427b8:	strb	r0, [r1]
   427bc:	b	427c0 <flatcc_json_printer_table_vector_field@@Base+0x204>
   427c0:	mov	sp, fp
   427c4:	pop	{fp, pc}
   427c8:	push	{fp, lr}
   427cc:	mov	fp, sp
   427d0:	sub	sp, sp, #48	; 0x30
   427d4:	str	r0, [fp, #-4]
   427d8:	str	r1, [fp, #-8]
   427dc:	str	r2, [fp, #-12]
   427e0:	str	r3, [fp, #-16]
   427e4:	ldr	r0, [fp, #-12]
   427e8:	mvn	r1, #0
   427ec:	add	r0, r0, r1
   427f0:	str	r0, [fp, #-12]
   427f4:	cmp	r0, #0
   427f8:	bne	4280c <flatcc_json_printer_table_vector_field@@Base+0x250>
   427fc:	ldr	r0, [fp, #-4]
   42800:	movw	r1, #2
   42804:	bl	42d40 <flatcc_json_printer_union_vector_field@@Base+0x438>
   42808:	b	42900 <flatcc_json_printer_table_vector_field@@Base+0x344>
   4280c:	b	42810 <flatcc_json_printer_table_vector_field@@Base+0x254>
   42810:	ldr	r0, [fp, #-4]
   42814:	ldr	r1, [r0, #32]
   42818:	add	r1, r1, #1
   4281c:	str	r1, [r0, #32]
   42820:	ldr	r0, [fp, #-4]
   42824:	ldr	r1, [r0, #20]
   42828:	add	r2, r1, #1
   4282c:	str	r2, [r0, #20]
   42830:	movw	r0, #123	; 0x7b
   42834:	strb	r0, [r1]
   42838:	movw	r0, #0
   4283c:	str	r0, [sp, #28]
   42840:	ldr	r0, [fp, #-12]
   42844:	str	r0, [sp, #24]
   42848:	ldr	r0, [fp, #-8]
   4284c:	str	r0, [sp, #12]
   42850:	ldr	r0, [fp, #-8]
   42854:	ldr	r1, [fp, #-8]
   42858:	str	r0, [sp, #8]
   4285c:	mov	r0, r1
   42860:	bl	46040 <flatcc_json_printer_clear@@Base+0x1d0c>
   42864:	movw	r1, #0
   42868:	sub	r0, r1, r0
   4286c:	ldr	r1, [sp, #8]
   42870:	add	r0, r1, r0
   42874:	str	r0, [sp, #16]
   42878:	ldr	r0, [sp, #16]
   4287c:	bl	45aa8 <flatcc_json_printer_clear@@Base+0x1774>
   42880:	uxth	r0, r0
   42884:	str	r0, [sp, #20]
   42888:	ldr	r0, [fp, #-16]
   4288c:	ldr	r1, [fp, #-4]
   42890:	str	r0, [sp, #4]
   42894:	mov	r0, r1
   42898:	add	r1, sp, #12
   4289c:	ldr	lr, [sp, #4]
   428a0:	blx	lr
   428a4:	ldr	r0, [fp, #-4]
   428a8:	ldrsb	r0, [r0, #25]
   428ac:	cmp	r0, #0
   428b0:	beq	428e8 <flatcc_json_printer_table_vector_field@@Base+0x32c>
   428b4:	ldr	r0, [fp, #-4]
   428b8:	ldr	r1, [r0, #20]
   428bc:	add	r2, r1, #1
   428c0:	str	r2, [r0, #20]
   428c4:	movw	r0, #10
   428c8:	strb	r0, [r1]
   428cc:	ldr	r0, [fp, #-4]
   428d0:	ldr	r1, [r0, #32]
   428d4:	mvn	r2, #0
   428d8:	add	r1, r1, r2
   428dc:	str	r1, [r0, #32]
   428e0:	ldr	r0, [fp, #-4]
   428e4:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   428e8:	ldr	r0, [fp, #-4]
   428ec:	ldr	r1, [r0, #20]
   428f0:	add	r2, r1, #1
   428f4:	str	r2, [r0, #20]
   428f8:	movw	r0, #125	; 0x7d
   428fc:	strb	r0, [r1]
   42900:	mov	sp, fp
   42904:	pop	{fp, pc}

00042908 <flatcc_json_printer_union_vector_field@@Base>:
   42908:	push	{r4, sl, fp, lr}
   4290c:	add	fp, sp, #8
   42910:	sub	sp, sp, #192	; 0xc0
   42914:	ldr	ip, [fp, #16]
   42918:	ldr	lr, [fp, #12]
   4291c:	ldr	r4, [fp, #8]
   42920:	str	r0, [fp, #-12]
   42924:	str	r1, [fp, #-16]
   42928:	str	r2, [fp, #-20]	; 0xffffffec
   4292c:	str	r3, [fp, #-24]	; 0xffffffe8
   42930:	ldr	r0, [fp, #-16]
   42934:	ldr	r1, [fp, #-20]	; 0xffffffec
   42938:	sub	r1, r1, #1
   4293c:	str	r4, [sp, #32]
   42940:	str	lr, [sp, #28]
   42944:	str	ip, [sp, #24]
   42948:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   4294c:	str	r0, [fp, #-28]	; 0xffffffe4
   42950:	ldr	r0, [fp, #-16]
   42954:	ldr	r1, [fp, #-20]	; 0xffffffec
   42958:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   4295c:	str	r0, [fp, #-32]	; 0xffffffe0
   42960:	ldr	r0, [fp, #-16]
   42964:	ldr	r0, [r0, #12]
   42968:	str	r0, [sp, #40]	; 0x28
   4296c:	ldr	r0, [fp, #8]
   42970:	cmp	r0, #100	; 0x64
   42974:	ble	429a4 <flatcc_json_printer_union_vector_field@@Base+0x9c>
   42978:	ldr	r0, [fp, #-12]
   4297c:	movw	r1, #1
   42980:	bl	42d40 <flatcc_json_printer_union_vector_field@@Base+0x438>
   42984:	ldr	r0, [pc, #936]	; 42d34 <flatcc_json_printer_union_vector_field@@Base+0x42c>
   42988:	add	r0, pc, r0
   4298c:	ldr	r1, [pc, #932]	; 42d38 <flatcc_json_printer_union_vector_field@@Base+0x430>
   42990:	add	r1, pc, r1
   42994:	ldr	lr, [pc, #928]	; 42d3c <flatcc_json_printer_union_vector_field@@Base+0x434>
   42998:	add	r3, pc, lr
   4299c:	movw	r2, #843	; 0x34b
   429a0:	bl	14f08 <__assert_fail@plt>
   429a4:	ldr	r0, [pc, #900]	; 42d30 <flatcc_json_printer_union_vector_field@@Base+0x428>
   429a8:	add	r0, pc, r0
   429ac:	add	r1, sp, #51	; 0x33
   429b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   429b4:	ldr	r3, [fp, #8]
   429b8:	str	r0, [sp, #20]
   429bc:	mov	r0, r1
   429c0:	str	r1, [sp, #16]
   429c4:	mov	r1, r2
   429c8:	mov	r2, r3
   429cc:	bl	14e30 <memcpy@plt>
   429d0:	ldr	r0, [fp, #8]
   429d4:	ldr	r1, [sp, #16]
   429d8:	add	r0, r1, r0
   429dc:	ldr	r2, [sp, #20]
   429e0:	ldrb	r3, [r2]
   429e4:	strb	r3, [r0]
   429e8:	ldrb	r3, [r2, #1]
   429ec:	strb	r3, [r0, #1]
   429f0:	ldrb	r3, [r2, #2]
   429f4:	strb	r3, [r0, #2]
   429f8:	ldrb	r3, [r2, #3]
   429fc:	strb	r3, [r0, #3]
   42a00:	ldrb	r3, [r2, #4]
   42a04:	strb	r3, [r0, #4]
   42a08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42a0c:	movw	r3, #0
   42a10:	cmp	r0, r3
   42a14:	beq	42d28 <flatcc_json_printer_union_vector_field@@Base+0x420>
   42a18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   42a1c:	movw	r1, #0
   42a20:	cmp	r0, r1
   42a24:	beq	42d28 <flatcc_json_printer_union_vector_field@@Base+0x420>
   42a28:	add	r3, sp, #51	; 0x33
   42a2c:	ldr	r0, [fp, #-12]
   42a30:	ldr	r1, [fp, #-16]
   42a34:	ldr	r2, [fp, #-20]	; 0xffffffec
   42a38:	sub	r2, r2, #1
   42a3c:	ldr	ip, [fp, #8]
   42a40:	add	ip, ip, #5
   42a44:	ldr	lr, [fp, #12]
   42a48:	str	ip, [sp]
   42a4c:	str	lr, [sp, #4]
   42a50:	bl	40390 <flatcc_json_printer_utype_enum_vector_field@@Base>
   42a54:	ldr	r0, [fp, #-16]
   42a58:	ldr	r1, [r0, #16]
   42a5c:	add	r2, r1, #1
   42a60:	str	r2, [r0, #16]
   42a64:	cmp	r1, #0
   42a68:	beq	42a84 <flatcc_json_printer_union_vector_field@@Base+0x17c>
   42a6c:	ldr	r0, [fp, #-12]
   42a70:	ldr	r1, [r0, #20]
   42a74:	add	r2, r1, #1
   42a78:	str	r2, [r0, #20]
   42a7c:	movw	r0, #44	; 0x2c
   42a80:	strb	r0, [r1]
   42a84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42a88:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   42a8c:	str	r0, [fp, #-32]	; 0xffffffe0
   42a90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   42a94:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   42a98:	str	r0, [fp, #-28]	; 0xffffffe4
   42a9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42aa0:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   42aa4:	str	r0, [fp, #-44]	; 0xffffffd4
   42aa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42aac:	add	r0, r0, #4
   42ab0:	str	r0, [fp, #-32]	; 0xffffffe0
   42ab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   42ab8:	add	r0, r0, #4
   42abc:	str	r0, [fp, #-28]	; 0xffffffe4
   42ac0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   42ac4:	str	r0, [fp, #-36]	; 0xffffffdc
   42ac8:	ldr	r0, [fp, #-12]
   42acc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42ad0:	ldr	r2, [fp, #8]
   42ad4:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   42ad8:	ldr	r0, [fp, #-12]
   42adc:	ldr	r1, [r0, #32]
   42ae0:	add	r1, r1, #1
   42ae4:	str	r1, [r0, #32]
   42ae8:	ldr	r0, [fp, #-12]
   42aec:	ldr	r1, [r0, #20]
   42af0:	add	r2, r1, #1
   42af4:	str	r2, [r0, #20]
   42af8:	movw	r0, #91	; 0x5b
   42afc:	strb	r0, [r1]
   42b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   42b04:	cmp	r0, #0
   42b08:	beq	42bc8 <flatcc_json_printer_union_vector_field@@Base+0x2c0>
   42b0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   42b10:	bl	3e83c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   42b14:	strb	r0, [fp, #-37]	; 0xffffffdb
   42b18:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   42b1c:	cmp	r0, #0
   42b20:	beq	42b54 <flatcc_json_printer_union_vector_field@@Base+0x24c>
   42b24:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   42b28:	strb	r0, [sp, #44]	; 0x2c
   42b2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42b30:	str	r0, [sp, #36]	; 0x24
   42b34:	ldr	r0, [fp, #16]
   42b38:	ldr	r1, [fp, #-12]
   42b3c:	str	r0, [sp, #12]
   42b40:	mov	r0, r1
   42b44:	add	r1, sp, #36	; 0x24
   42b48:	ldr	r2, [sp, #12]
   42b4c:	blx	r2
   42b50:	b	42bb8 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   42b54:	b	42b58 <flatcc_json_printer_union_vector_field@@Base+0x250>
   42b58:	ldr	r0, [fp, #-12]
   42b5c:	ldr	r1, [r0, #20]
   42b60:	add	r2, r1, #1
   42b64:	str	r2, [r0, #20]
   42b68:	movw	r0, #110	; 0x6e
   42b6c:	strb	r0, [r1]
   42b70:	ldr	r0, [fp, #-12]
   42b74:	ldr	r1, [r0, #20]
   42b78:	add	r2, r1, #1
   42b7c:	str	r2, [r0, #20]
   42b80:	movw	r0, #117	; 0x75
   42b84:	strb	r0, [r1]
   42b88:	ldr	r0, [fp, #-12]
   42b8c:	ldr	r1, [r0, #20]
   42b90:	add	r2, r1, #1
   42b94:	str	r2, [r0, #20]
   42b98:	movw	r0, #108	; 0x6c
   42b9c:	strb	r0, [r1]
   42ba0:	ldr	r1, [fp, #-12]
   42ba4:	ldr	r2, [r1, #20]
   42ba8:	add	r3, r2, #1
   42bac:	str	r3, [r1, #20]
   42bb0:	strb	r0, [r2]
   42bb4:	b	42bb8 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   42bb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   42bbc:	mvn	r1, #0
   42bc0:	add	r0, r0, r1
   42bc4:	str	r0, [fp, #-44]	; 0xffffffd4
   42bc8:	b	42bcc <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   42bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   42bd0:	mvn	r1, #0
   42bd4:	add	r1, r0, r1
   42bd8:	str	r1, [fp, #-44]	; 0xffffffd4
   42bdc:	cmp	r0, #0
   42be0:	beq	42cc4 <flatcc_json_printer_union_vector_field@@Base+0x3bc>
   42be4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42be8:	add	r0, r0, #4
   42bec:	str	r0, [fp, #-32]	; 0xffffffe0
   42bf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   42bf4:	add	r0, r0, #1
   42bf8:	str	r0, [fp, #-36]	; 0xffffffdc
   42bfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   42c00:	bl	3e83c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   42c04:	strb	r0, [fp, #-37]	; 0xffffffdb
   42c08:	ldr	r0, [fp, #-12]
   42c0c:	ldr	lr, [r0, #20]
   42c10:	add	r1, lr, #1
   42c14:	str	r1, [r0, #20]
   42c18:	movw	r0, #44	; 0x2c
   42c1c:	strb	r0, [lr]
   42c20:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   42c24:	cmp	r0, #0
   42c28:	beq	42c5c <flatcc_json_printer_union_vector_field@@Base+0x354>
   42c2c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   42c30:	strb	r0, [sp, #44]	; 0x2c
   42c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42c38:	str	r0, [sp, #36]	; 0x24
   42c3c:	ldr	r0, [fp, #16]
   42c40:	ldr	r1, [fp, #-12]
   42c44:	str	r0, [sp, #8]
   42c48:	mov	r0, r1
   42c4c:	add	r1, sp, #36	; 0x24
   42c50:	ldr	r2, [sp, #8]
   42c54:	blx	r2
   42c58:	b	42cc0 <flatcc_json_printer_union_vector_field@@Base+0x3b8>
   42c5c:	b	42c60 <flatcc_json_printer_union_vector_field@@Base+0x358>
   42c60:	ldr	r0, [fp, #-12]
   42c64:	ldr	r1, [r0, #20]
   42c68:	add	r2, r1, #1
   42c6c:	str	r2, [r0, #20]
   42c70:	movw	r0, #110	; 0x6e
   42c74:	strb	r0, [r1]
   42c78:	ldr	r0, [fp, #-12]
   42c7c:	ldr	r1, [r0, #20]
   42c80:	add	r2, r1, #1
   42c84:	str	r2, [r0, #20]
   42c88:	movw	r0, #117	; 0x75
   42c8c:	strb	r0, [r1]
   42c90:	ldr	r0, [fp, #-12]
   42c94:	ldr	r1, [r0, #20]
   42c98:	add	r2, r1, #1
   42c9c:	str	r2, [r0, #20]
   42ca0:	movw	r0, #108	; 0x6c
   42ca4:	strb	r0, [r1]
   42ca8:	ldr	r1, [fp, #-12]
   42cac:	ldr	r2, [r1, #20]
   42cb0:	add	r3, r2, #1
   42cb4:	str	r3, [r1, #20]
   42cb8:	strb	r0, [r2]
   42cbc:	b	42cc0 <flatcc_json_printer_union_vector_field@@Base+0x3b8>
   42cc0:	b	42bcc <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   42cc4:	b	42cc8 <flatcc_json_printer_union_vector_field@@Base+0x3c0>
   42cc8:	ldr	r0, [fp, #-12]
   42ccc:	ldrsb	r0, [r0, #25]
   42cd0:	cmp	r0, #0
   42cd4:	beq	42d0c <flatcc_json_printer_union_vector_field@@Base+0x404>
   42cd8:	ldr	r0, [fp, #-12]
   42cdc:	ldr	r1, [r0, #20]
   42ce0:	add	r2, r1, #1
   42ce4:	str	r2, [r0, #20]
   42ce8:	movw	r0, #10
   42cec:	strb	r0, [r1]
   42cf0:	ldr	r0, [fp, #-12]
   42cf4:	ldr	r1, [r0, #32]
   42cf8:	mvn	r2, #0
   42cfc:	add	r1, r1, r2
   42d00:	str	r1, [r0, #32]
   42d04:	ldr	r0, [fp, #-12]
   42d08:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   42d0c:	ldr	r0, [fp, #-12]
   42d10:	ldr	r1, [r0, #20]
   42d14:	add	r2, r1, #1
   42d18:	str	r2, [r0, #20]
   42d1c:	movw	r0, #93	; 0x5d
   42d20:	strb	r0, [r1]
   42d24:	b	42d28 <flatcc_json_printer_union_vector_field@@Base+0x420>
   42d28:	sub	sp, fp, #8
   42d2c:	pop	{r4, sl, fp, pc}
   42d30:	andeq	r9, r0, r3, lsr r8
   42d34:	andeq	r9, r0, ip, lsl #14
   42d38:	andeq	r9, r0, pc, lsl r7
   42d3c:	andeq	r9, r0, r9, ror r7
   42d40:	sub	sp, sp, #8
   42d44:	str	r0, [sp, #4]
   42d48:	str	r1, [sp]
   42d4c:	ldr	r0, [sp, #4]
   42d50:	ldr	r0, [r0, #36]	; 0x24
   42d54:	cmp	r0, #0
   42d58:	bne	42d68 <flatcc_json_printer_union_vector_field@@Base+0x460>
   42d5c:	ldr	r0, [sp]
   42d60:	ldr	r1, [sp, #4]
   42d64:	str	r0, [r1, #36]	; 0x24
   42d68:	add	sp, sp, #8
   42d6c:	bx	lr

00042d70 <flatcc_json_printer_table_field@@Base>:
   42d70:	push	{fp, lr}
   42d74:	mov	fp, sp
   42d78:	sub	sp, sp, #40	; 0x28
   42d7c:	ldr	ip, [fp, #12]
   42d80:	ldr	lr, [fp, #8]
   42d84:	str	r0, [fp, #-4]
   42d88:	str	r1, [fp, #-8]
   42d8c:	str	r2, [fp, #-12]
   42d90:	str	r3, [fp, #-16]
   42d94:	ldr	r0, [fp, #-8]
   42d98:	ldr	r1, [fp, #-12]
   42d9c:	str	lr, [sp, #16]
   42da0:	str	ip, [sp, #12]
   42da4:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   42da8:	str	r0, [sp, #20]
   42dac:	ldr	r0, [sp, #20]
   42db0:	movw	r1, #0
   42db4:	cmp	r0, r1
   42db8:	beq	42e30 <flatcc_json_printer_table_field@@Base+0xc0>
   42dbc:	ldr	r0, [fp, #-8]
   42dc0:	ldr	r1, [r0, #16]
   42dc4:	add	r2, r1, #1
   42dc8:	str	r2, [r0, #16]
   42dcc:	cmp	r1, #0
   42dd0:	beq	42dec <flatcc_json_printer_table_field@@Base+0x7c>
   42dd4:	ldr	r0, [fp, #-4]
   42dd8:	ldr	r1, [r0, #20]
   42ddc:	add	r2, r1, #1
   42de0:	str	r2, [r0, #20]
   42de4:	movw	r0, #44	; 0x2c
   42de8:	strb	r0, [r1]
   42dec:	ldr	r0, [fp, #-4]
   42df0:	ldr	r1, [fp, #-16]
   42df4:	ldr	r2, [fp, #8]
   42df8:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   42dfc:	ldr	r0, [fp, #-4]
   42e00:	ldr	r1, [sp, #20]
   42e04:	str	r0, [sp, #8]
   42e08:	mov	r0, r1
   42e0c:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   42e10:	ldr	r1, [fp, #-8]
   42e14:	ldr	r2, [r1, #12]
   42e18:	ldr	r3, [fp, #12]
   42e1c:	ldr	r1, [sp, #8]
   42e20:	str	r0, [sp, #4]
   42e24:	mov	r0, r1
   42e28:	ldr	r1, [sp, #4]
   42e2c:	bl	427c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   42e30:	mov	sp, fp
   42e34:	pop	{fp, pc}

00042e38 <flatcc_json_printer_union_field@@Base>:
   42e38:	push	{r4, sl, fp, lr}
   42e3c:	add	fp, sp, #8
   42e40:	sub	sp, sp, #64	; 0x40
   42e44:	ldr	ip, [fp, #16]
   42e48:	ldr	lr, [fp, #12]
   42e4c:	ldr	r4, [fp, #8]
   42e50:	str	r0, [fp, #-12]
   42e54:	str	r1, [fp, #-16]
   42e58:	str	r2, [fp, #-20]	; 0xffffffec
   42e5c:	str	r3, [fp, #-24]	; 0xffffffe8
   42e60:	ldr	r0, [fp, #-16]
   42e64:	ldr	r1, [fp, #-20]	; 0xffffffec
   42e68:	sub	r1, r1, #1
   42e6c:	str	r4, [sp, #20]
   42e70:	str	lr, [sp, #16]
   42e74:	str	ip, [sp, #12]
   42e78:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   42e7c:	str	r0, [fp, #-28]	; 0xffffffe4
   42e80:	ldr	r0, [fp, #-16]
   42e84:	ldr	r1, [fp, #-20]	; 0xffffffec
   42e88:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   42e8c:	str	r0, [fp, #-32]	; 0xffffffe0
   42e90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42e94:	movw	r1, #0
   42e98:	cmp	r0, r1
   42e9c:	beq	42eb0 <flatcc_json_printer_union_field@@Base+0x78>
   42ea0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   42ea4:	movw	r1, #0
   42ea8:	cmp	r0, r1
   42eac:	bne	42eb4 <flatcc_json_printer_union_field@@Base+0x7c>
   42eb0:	b	43140 <flatcc_json_printer_union_field@@Base+0x308>
   42eb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   42eb8:	bl	3e83c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   42ebc:	strb	r0, [fp, #-33]	; 0xffffffdf
   42ec0:	ldr	r0, [fp, #-16]
   42ec4:	ldr	lr, [r0, #16]
   42ec8:	add	r1, lr, #1
   42ecc:	str	r1, [r0, #16]
   42ed0:	cmp	lr, #0
   42ed4:	beq	42ef0 <flatcc_json_printer_union_field@@Base+0xb8>
   42ed8:	ldr	r0, [fp, #-12]
   42edc:	ldr	r1, [r0, #20]
   42ee0:	add	r2, r1, #1
   42ee4:	str	r2, [r0, #20]
   42ee8:	movw	r0, #44	; 0x2c
   42eec:	strb	r0, [r1]
   42ef0:	b	42ef4 <flatcc_json_printer_union_field@@Base+0xbc>
   42ef4:	ldr	r0, [fp, #-12]
   42ef8:	ldrsb	r0, [r0, #25]
   42efc:	cmp	r0, #0
   42f00:	beq	42f28 <flatcc_json_printer_union_field@@Base+0xf0>
   42f04:	ldr	r0, [fp, #-12]
   42f08:	ldr	r1, [r0, #20]
   42f0c:	add	r2, r1, #1
   42f10:	str	r2, [r0, #20]
   42f14:	movw	r0, #10
   42f18:	strb	r0, [r1]
   42f1c:	ldr	r0, [fp, #-12]
   42f20:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   42f24:	b	42f30 <flatcc_json_printer_union_field@@Base+0xf8>
   42f28:	ldr	r0, [fp, #-12]
   42f2c:	bl	39958 <flatcc_json_printer_nl@@Base+0x38>
   42f30:	b	42f34 <flatcc_json_printer_union_field@@Base+0xfc>
   42f34:	ldr	r0, [fp, #-12]
   42f38:	ldr	r0, [r0, #20]
   42f3c:	movw	r1, #34	; 0x22
   42f40:	strb	r1, [r0]
   42f44:	ldr	r0, [fp, #-12]
   42f48:	ldrsb	r0, [r0, #26]
   42f4c:	cmp	r0, #0
   42f50:	movw	r0, #0
   42f54:	movne	r0, #1
   42f58:	mvn	r1, #0
   42f5c:	eor	r0, r0, r1
   42f60:	and	r0, r0, #1
   42f64:	ldr	r1, [fp, #-12]
   42f68:	ldr	r2, [r1, #20]
   42f6c:	add	r0, r2, r0
   42f70:	str	r0, [r1, #20]
   42f74:	ldr	r0, [fp, #-12]
   42f78:	ldr	r0, [r0, #20]
   42f7c:	ldr	r1, [fp, #8]
   42f80:	add	r0, r0, r1
   42f84:	ldr	r1, [fp, #-12]
   42f88:	ldr	r1, [r1, #16]
   42f8c:	cmp	r0, r1
   42f90:	bcs	42fc0 <flatcc_json_printer_union_field@@Base+0x188>
   42f94:	ldr	r0, [fp, #-12]
   42f98:	ldr	r0, [r0, #20]
   42f9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42fa0:	ldr	r2, [fp, #8]
   42fa4:	bl	14e30 <memcpy@plt>
   42fa8:	ldr	r0, [fp, #8]
   42fac:	ldr	r1, [fp, #-12]
   42fb0:	ldr	r2, [r1, #20]
   42fb4:	add	r0, r2, r0
   42fb8:	str	r0, [r1, #20]
   42fbc:	b	42fd0 <flatcc_json_printer_union_field@@Base+0x198>
   42fc0:	ldr	r0, [fp, #-12]
   42fc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42fc8:	ldr	r2, [fp, #8]
   42fcc:	bl	398a4 <flatcc_json_printer_write@@Base+0x30>
   42fd0:	ldr	r0, [pc, #368]	; 43148 <flatcc_json_printer_union_field@@Base+0x310>
   42fd4:	add	r1, pc, r0
   42fd8:	ldr	r0, [fp, #-12]
   42fdc:	movw	r2, #5
   42fe0:	bl	398a4 <flatcc_json_printer_write@@Base+0x30>
   42fe4:	ldr	r0, [fp, #-12]
   42fe8:	ldr	r0, [r0, #20]
   42fec:	movw	r1, #34	; 0x22
   42ff0:	strb	r1, [r0]
   42ff4:	ldr	r0, [fp, #-12]
   42ff8:	ldrsb	r0, [r0, #26]
   42ffc:	cmp	r0, #0
   43000:	movw	r0, #0
   43004:	movne	r0, #1
   43008:	mvn	r1, #0
   4300c:	eor	r0, r0, r1
   43010:	and	r0, r0, #1
   43014:	ldr	r1, [fp, #-12]
   43018:	ldr	r2, [r1, #20]
   4301c:	add	r0, r2, r0
   43020:	str	r0, [r1, #20]
   43024:	ldr	r0, [fp, #-12]
   43028:	ldr	r1, [r0, #20]
   4302c:	add	r2, r1, #1
   43030:	str	r2, [r0, #20]
   43034:	movw	r0, #58	; 0x3a
   43038:	strb	r0, [r1]
   4303c:	ldr	r0, [fp, #-12]
   43040:	ldr	r0, [r0, #20]
   43044:	movw	r1, #32
   43048:	strb	r1, [r0]
   4304c:	ldr	r0, [fp, #-12]
   43050:	ldrsb	r0, [r0, #25]
   43054:	cmp	r0, #0
   43058:	movw	r0, #0
   4305c:	movne	r0, #1
   43060:	mvn	r1, #0
   43064:	eor	r0, r0, r1
   43068:	eor	r0, r0, r1
   4306c:	and	r0, r0, #1
   43070:	ldr	r1, [fp, #-12]
   43074:	ldr	r2, [r1, #20]
   43078:	add	r0, r2, r0
   4307c:	str	r0, [r1, #20]
   43080:	ldr	r0, [fp, #-12]
   43084:	ldrsb	r0, [r0, #27]
   43088:	cmp	r0, #0
   4308c:	beq	430b8 <flatcc_json_printer_union_field@@Base+0x280>
   43090:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   43094:	ldr	r1, [fp, #-12]
   43098:	ldr	r1, [r1, #20]
   4309c:	and	r0, r0, #255	; 0xff
   430a0:	bl	39b00 <flatcc_json_printer_uint8@@Base+0x40>
   430a4:	ldr	r1, [fp, #-12]
   430a8:	ldr	lr, [r1, #20]
   430ac:	add	r0, lr, r0
   430b0:	str	r0, [r1, #20]
   430b4:	b	430d4 <flatcc_json_printer_union_field@@Base+0x29c>
   430b8:	ldr	r0, [fp, #12]
   430bc:	ldr	r1, [fp, #-12]
   430c0:	str	r0, [sp, #8]
   430c4:	mov	r0, r1
   430c8:	ldrb	r1, [fp, #-33]	; 0xffffffdf
   430cc:	ldr	r2, [sp, #8]
   430d0:	blx	r2
   430d4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   430d8:	cmp	r0, #0
   430dc:	beq	43140 <flatcc_json_printer_union_field@@Base+0x308>
   430e0:	ldr	r0, [fp, #-12]
   430e4:	ldr	r1, [r0, #20]
   430e8:	add	r2, r1, #1
   430ec:	str	r2, [r0, #20]
   430f0:	movw	r0, #44	; 0x2c
   430f4:	strb	r0, [r1]
   430f8:	ldr	r0, [fp, #-12]
   430fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43100:	ldr	r2, [fp, #8]
   43104:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   43108:	ldr	r0, [fp, #-16]
   4310c:	ldr	r0, [r0, #12]
   43110:	str	r0, [sp, #28]
   43114:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   43118:	strb	r0, [sp, #32]
   4311c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   43120:	str	r0, [sp, #24]
   43124:	ldr	r0, [fp, #16]
   43128:	ldr	r1, [fp, #-12]
   4312c:	str	r0, [sp, #4]
   43130:	mov	r0, r1
   43134:	add	r1, sp, #24
   43138:	ldr	r2, [sp, #4]
   4313c:	blx	r2
   43140:	sub	sp, fp, #8
   43144:	pop	{r4, sl, fp, pc}
   43148:	andeq	r9, r0, r7, lsl #4

0004314c <flatcc_json_printer_union_table@@Base>:
   4314c:	push	{fp, lr}
   43150:	mov	fp, sp
   43154:	sub	sp, sp, #24
   43158:	str	r0, [fp, #-4]
   4315c:	str	r1, [fp, #-8]
   43160:	str	r2, [sp, #12]
   43164:	ldr	r0, [fp, #-4]
   43168:	ldr	r1, [fp, #-8]
   4316c:	ldr	r1, [r1]
   43170:	str	r0, [sp, #8]
   43174:	mov	r0, r1
   43178:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   4317c:	ldr	r1, [fp, #-8]
   43180:	ldr	r2, [r1, #4]
   43184:	ldr	r3, [sp, #12]
   43188:	ldr	r1, [sp, #8]
   4318c:	str	r0, [sp, #4]
   43190:	mov	r0, r1
   43194:	ldr	r1, [sp, #4]
   43198:	bl	427c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   4319c:	mov	sp, fp
   431a0:	pop	{fp, pc}

000431a4 <flatcc_json_printer_union_struct@@Base>:
   431a4:	push	{fp, lr}
   431a8:	mov	fp, sp
   431ac:	sub	sp, sp, #24
   431b0:	str	r0, [fp, #-4]
   431b4:	str	r1, [fp, #-8]
   431b8:	str	r2, [sp, #12]
   431bc:	ldr	r0, [fp, #-4]
   431c0:	ldr	r1, [r0, #32]
   431c4:	add	r1, r1, #1
   431c8:	str	r1, [r0, #32]
   431cc:	ldr	r0, [fp, #-4]
   431d0:	ldr	r1, [r0, #20]
   431d4:	add	r2, r1, #1
   431d8:	str	r2, [r0, #20]
   431dc:	movw	r0, #123	; 0x7b
   431e0:	strb	r0, [r1]
   431e4:	ldr	r0, [sp, #12]
   431e8:	ldr	r1, [fp, #-4]
   431ec:	ldr	r2, [fp, #-8]
   431f0:	ldr	r2, [r2]
   431f4:	str	r0, [sp, #8]
   431f8:	mov	r0, r2
   431fc:	str	r1, [sp, #4]
   43200:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   43204:	ldr	r1, [sp, #4]
   43208:	str	r0, [sp]
   4320c:	mov	r0, r1
   43210:	ldr	r1, [sp]
   43214:	ldr	r2, [sp, #8]
   43218:	blx	r2
   4321c:	ldr	r0, [fp, #-4]
   43220:	ldrsb	r0, [r0, #25]
   43224:	cmp	r0, #0
   43228:	beq	43260 <flatcc_json_printer_union_struct@@Base+0xbc>
   4322c:	ldr	r0, [fp, #-4]
   43230:	ldr	r1, [r0, #20]
   43234:	add	r2, r1, #1
   43238:	str	r2, [r0, #20]
   4323c:	movw	r0, #10
   43240:	strb	r0, [r1]
   43244:	ldr	r0, [fp, #-4]
   43248:	ldr	r1, [r0, #32]
   4324c:	mvn	r2, #0
   43250:	add	r1, r1, r2
   43254:	str	r1, [r0, #32]
   43258:	ldr	r0, [fp, #-4]
   4325c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   43260:	ldr	r0, [fp, #-4]
   43264:	ldr	r1, [r0, #20]
   43268:	add	r2, r1, #1
   4326c:	str	r2, [r0, #20]
   43270:	movw	r0, #125	; 0x7d
   43274:	strb	r0, [r1]
   43278:	mov	sp, fp
   4327c:	pop	{fp, pc}

00043280 <flatcc_json_printer_union_string@@Base>:
   43280:	push	{fp, lr}
   43284:	mov	fp, sp
   43288:	sub	sp, sp, #16
   4328c:	str	r0, [fp, #-4]
   43290:	str	r1, [sp, #8]
   43294:	ldr	r0, [fp, #-4]
   43298:	ldr	r1, [sp, #8]
   4329c:	ldr	r1, [r1]
   432a0:	str	r0, [sp, #4]
   432a4:	mov	r0, r1
   432a8:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   432ac:	ldr	r1, [sp, #4]
   432b0:	str	r0, [sp]
   432b4:	mov	r0, r1
   432b8:	ldr	r1, [sp]
   432bc:	bl	3b9d0 <flatcc_json_printer_string_field@@Base+0x214>
   432c0:	mov	sp, fp
   432c4:	pop	{fp, pc}

000432c8 <flatcc_json_printer_embedded_struct_field@@Base>:
   432c8:	push	{r4, sl, fp, lr}
   432cc:	add	fp, sp, #8
   432d0:	sub	sp, sp, #32
   432d4:	ldr	ip, [fp, #16]
   432d8:	ldr	lr, [fp, #12]
   432dc:	ldr	r4, [fp, #8]
   432e0:	str	r0, [fp, #-12]
   432e4:	str	r1, [fp, #-16]
   432e8:	str	r2, [sp, #20]
   432ec:	str	r3, [sp, #16]
   432f0:	ldr	r0, [fp, #-16]
   432f4:	cmp	r0, #0
   432f8:	str	r4, [sp, #12]
   432fc:	str	lr, [sp, #8]
   43300:	str	ip, [sp, #4]
   43304:	beq	43320 <flatcc_json_printer_embedded_struct_field@@Base+0x58>
   43308:	ldr	r0, [fp, #-12]
   4330c:	ldr	r1, [r0, #20]
   43310:	add	r2, r1, #1
   43314:	str	r2, [r0, #20]
   43318:	movw	r0, #44	; 0x2c
   4331c:	strb	r0, [r1]
   43320:	ldr	r0, [fp, #-12]
   43324:	ldr	r1, [fp, #8]
   43328:	ldr	r2, [fp, #12]
   4332c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   43330:	ldr	r0, [fp, #-12]
   43334:	ldr	r1, [r0, #32]
   43338:	add	r1, r1, #1
   4333c:	str	r1, [r0, #32]
   43340:	ldr	r0, [fp, #-12]
   43344:	ldr	r1, [r0, #20]
   43348:	add	r2, r1, #1
   4334c:	str	r2, [r0, #20]
   43350:	movw	r0, #123	; 0x7b
   43354:	strb	r0, [r1]
   43358:	ldr	r0, [fp, #16]
   4335c:	ldr	r1, [fp, #-12]
   43360:	ldr	r2, [sp, #20]
   43364:	ldr	r3, [sp, #16]
   43368:	add	r2, r2, r3
   4336c:	str	r0, [sp]
   43370:	mov	r0, r1
   43374:	mov	r1, r2
   43378:	ldr	r2, [sp]
   4337c:	blx	r2
   43380:	ldr	r0, [fp, #-12]
   43384:	ldrsb	r0, [r0, #25]
   43388:	cmp	r0, #0
   4338c:	beq	433c4 <flatcc_json_printer_embedded_struct_field@@Base+0xfc>
   43390:	ldr	r0, [fp, #-12]
   43394:	ldr	r1, [r0, #20]
   43398:	add	r2, r1, #1
   4339c:	str	r2, [r0, #20]
   433a0:	movw	r0, #10
   433a4:	strb	r0, [r1]
   433a8:	ldr	r0, [fp, #-12]
   433ac:	ldr	r1, [r0, #32]
   433b0:	mvn	r2, #0
   433b4:	add	r1, r1, r2
   433b8:	str	r1, [r0, #32]
   433bc:	ldr	r0, [fp, #-12]
   433c0:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   433c4:	ldr	r0, [fp, #-12]
   433c8:	ldr	r1, [r0, #20]
   433cc:	add	r2, r1, #1
   433d0:	str	r2, [r0, #20]
   433d4:	movw	r0, #125	; 0x7d
   433d8:	strb	r0, [r1]
   433dc:	sub	sp, fp, #8
   433e0:	pop	{r4, sl, fp, pc}

000433e4 <flatcc_json_printer_struct_field@@Base>:
   433e4:	push	{fp, lr}
   433e8:	mov	fp, sp
   433ec:	sub	sp, sp, #32
   433f0:	ldr	ip, [fp, #12]
   433f4:	ldr	lr, [fp, #8]
   433f8:	str	r0, [fp, #-4]
   433fc:	str	r1, [fp, #-8]
   43400:	str	r2, [fp, #-12]
   43404:	str	r3, [sp, #16]
   43408:	ldr	r0, [fp, #-8]
   4340c:	ldr	r1, [fp, #-12]
   43410:	str	lr, [sp, #8]
   43414:	str	ip, [sp, #4]
   43418:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   4341c:	str	r0, [sp, #12]
   43420:	ldr	r0, [sp, #12]
   43424:	movw	r1, #0
   43428:	cmp	r0, r1
   4342c:	beq	43518 <flatcc_json_printer_struct_field@@Base+0x134>
   43430:	ldr	r0, [fp, #-8]
   43434:	ldr	r1, [r0, #16]
   43438:	add	r2, r1, #1
   4343c:	str	r2, [r0, #16]
   43440:	cmp	r1, #0
   43444:	beq	43460 <flatcc_json_printer_struct_field@@Base+0x7c>
   43448:	ldr	r0, [fp, #-4]
   4344c:	ldr	r1, [r0, #20]
   43450:	add	r2, r1, #1
   43454:	str	r2, [r0, #20]
   43458:	movw	r0, #44	; 0x2c
   4345c:	strb	r0, [r1]
   43460:	ldr	r0, [fp, #-4]
   43464:	ldr	r1, [sp, #16]
   43468:	ldr	r2, [fp, #8]
   4346c:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   43470:	ldr	r0, [fp, #-4]
   43474:	ldr	r1, [r0, #32]
   43478:	add	r1, r1, #1
   4347c:	str	r1, [r0, #32]
   43480:	ldr	r0, [fp, #-4]
   43484:	ldr	r1, [r0, #20]
   43488:	add	r2, r1, #1
   4348c:	str	r2, [r0, #20]
   43490:	movw	r0, #123	; 0x7b
   43494:	strb	r0, [r1]
   43498:	ldr	r0, [fp, #12]
   4349c:	ldr	r1, [fp, #-4]
   434a0:	ldr	r2, [sp, #12]
   434a4:	str	r0, [sp]
   434a8:	mov	r0, r1
   434ac:	mov	r1, r2
   434b0:	ldr	r2, [sp]
   434b4:	blx	r2
   434b8:	ldr	r0, [fp, #-4]
   434bc:	ldrsb	r0, [r0, #25]
   434c0:	cmp	r0, #0
   434c4:	beq	434fc <flatcc_json_printer_struct_field@@Base+0x118>
   434c8:	ldr	r0, [fp, #-4]
   434cc:	ldr	r1, [r0, #20]
   434d0:	add	r2, r1, #1
   434d4:	str	r2, [r0, #20]
   434d8:	movw	r0, #10
   434dc:	strb	r0, [r1]
   434e0:	ldr	r0, [fp, #-4]
   434e4:	ldr	r1, [r0, #32]
   434e8:	mvn	r2, #0
   434ec:	add	r1, r1, r2
   434f0:	str	r1, [r0, #32]
   434f4:	ldr	r0, [fp, #-4]
   434f8:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   434fc:	ldr	r0, [fp, #-4]
   43500:	ldr	r1, [r0, #20]
   43504:	add	r2, r1, #1
   43508:	str	r2, [r0, #20]
   4350c:	movw	r0, #125	; 0x7d
   43510:	strb	r0, [r1]
   43514:	b	43518 <flatcc_json_printer_struct_field@@Base+0x134>
   43518:	mov	sp, fp
   4351c:	pop	{fp, pc}

00043520 <flatcc_json_printer_struct_as_root@@Base>:
   43520:	push	{fp, lr}
   43524:	mov	fp, sp
   43528:	sub	sp, sp, #48	; 0x30
   4352c:	ldr	ip, [fp, #8]
   43530:	str	r0, [fp, #-8]
   43534:	str	r1, [fp, #-12]
   43538:	str	r2, [fp, #-16]
   4353c:	str	r3, [fp, #-20]	; 0xffffffec
   43540:	ldr	r0, [fp, #-8]
   43544:	ldr	r1, [fp, #-12]
   43548:	ldr	r2, [fp, #-16]
   4354c:	ldr	r3, [fp, #-20]	; 0xffffffec
   43550:	str	ip, [sp, #24]
   43554:	bl	436d8 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   43558:	cmp	r0, #0
   4355c:	bne	4356c <flatcc_json_printer_struct_as_root@@Base+0x4c>
   43560:	mvn	r0, #0
   43564:	str	r0, [fp, #-4]
   43568:	b	436cc <flatcc_json_printer_struct_as_root@@Base+0x1ac>
   4356c:	b	43570 <flatcc_json_printer_struct_as_root@@Base+0x50>
   43570:	ldr	r0, [fp, #-8]
   43574:	ldr	r1, [r0, #32]
   43578:	add	r1, r1, #1
   4357c:	str	r1, [r0, #32]
   43580:	ldr	r0, [fp, #-8]
   43584:	ldr	r1, [r0, #20]
   43588:	add	r2, r1, #1
   4358c:	str	r2, [r0, #20]
   43590:	movw	r0, #123	; 0x7b
   43594:	strb	r0, [r1]
   43598:	ldr	r0, [fp, #8]
   4359c:	ldr	r1, [fp, #-8]
   435a0:	ldr	r2, [fp, #-12]
   435a4:	str	r0, [sp, #20]
   435a8:	mov	r0, r2
   435ac:	str	r1, [sp, #16]
   435b0:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   435b4:	ldr	r1, [sp, #16]
   435b8:	str	r0, [sp, #12]
   435bc:	mov	r0, r1
   435c0:	ldr	r1, [sp, #12]
   435c4:	ldr	r2, [sp, #20]
   435c8:	blx	r2
   435cc:	ldr	r0, [fp, #-8]
   435d0:	ldrsb	r0, [r0, #25]
   435d4:	cmp	r0, #0
   435d8:	beq	43610 <flatcc_json_printer_struct_as_root@@Base+0xf0>
   435dc:	ldr	r0, [fp, #-8]
   435e0:	ldr	r1, [r0, #20]
   435e4:	add	r2, r1, #1
   435e8:	str	r2, [r0, #20]
   435ec:	movw	r0, #10
   435f0:	strb	r0, [r1]
   435f4:	ldr	r0, [fp, #-8]
   435f8:	ldr	r1, [r0, #32]
   435fc:	mvn	r2, #0
   43600:	add	r1, r1, r2
   43604:	str	r1, [r0, #32]
   43608:	ldr	r0, [fp, #-8]
   4360c:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   43610:	ldr	r0, [fp, #-8]
   43614:	ldr	r1, [r0, #20]
   43618:	add	r2, r1, #1
   4361c:	str	r2, [r0, #20]
   43620:	movw	r0, #125	; 0x7d
   43624:	strb	r0, [r1]
   43628:	b	4362c <flatcc_json_printer_struct_as_root@@Base+0x10c>
   4362c:	ldr	r0, [fp, #-8]
   43630:	ldrb	r0, [r0, #25]
   43634:	cmp	r0, #0
   43638:	beq	43664 <flatcc_json_printer_struct_as_root@@Base+0x144>
   4363c:	ldr	r0, [fp, #-8]
   43640:	ldr	r0, [r0, #32]
   43644:	cmp	r0, #0
   43648:	bne	43664 <flatcc_json_printer_struct_as_root@@Base+0x144>
   4364c:	ldr	r0, [fp, #-8]
   43650:	ldr	r1, [r0, #20]
   43654:	add	r2, r1, #1
   43658:	str	r2, [r0, #20]
   4365c:	movw	r0, #10
   43660:	strb	r0, [r1]
   43664:	ldr	r0, [fp, #-8]
   43668:	ldr	r0, [r0, #44]	; 0x2c
   4366c:	ldr	r1, [fp, #-8]
   43670:	str	r0, [sp, #8]
   43674:	mov	r0, r1
   43678:	movw	r1, #1
   4367c:	ldr	r2, [sp, #8]
   43680:	blx	r2
   43684:	ldr	r0, [fp, #-8]
   43688:	bl	437f4 <flatcc_json_printer_struct_as_root@@Base+0x2d4>
   4368c:	cmp	r0, #0
   43690:	beq	436a0 <flatcc_json_printer_struct_as_root@@Base+0x180>
   43694:	mvn	r0, #0
   43698:	str	r0, [sp, #4]
   4369c:	b	436c4 <flatcc_json_printer_struct_as_root@@Base+0x1a4>
   436a0:	ldr	r0, [fp, #-8]
   436a4:	ldr	r0, [r0, #12]
   436a8:	ldr	r1, [fp, #-8]
   436ac:	ldr	r1, [r1, #20]
   436b0:	ldr	r2, [fp, #-8]
   436b4:	ldr	r2, [r2]
   436b8:	sub	r1, r1, r2
   436bc:	add	r0, r0, r1
   436c0:	str	r0, [sp, #4]
   436c4:	ldr	r0, [sp, #4]
   436c8:	str	r0, [fp, #-4]
   436cc:	ldr	r0, [fp, #-4]
   436d0:	mov	sp, fp
   436d4:	pop	{fp, pc}
   436d8:	push	{fp, lr}
   436dc:	mov	fp, sp
   436e0:	sub	sp, sp, #32
   436e4:	str	r0, [fp, #-4]
   436e8:	str	r1, [fp, #-8]
   436ec:	str	r2, [fp, #-12]
   436f0:	str	r3, [sp, #16]
   436f4:	movw	r0, #0
   436f8:	str	r0, [sp, #8]
   436fc:	ldr	r1, [fp, #-8]
   43700:	cmp	r1, r0
   43704:	beq	43714 <flatcc_json_printer_struct_as_root@@Base+0x1f4>
   43708:	ldr	r0, [fp, #-12]
   4370c:	cmp	r0, #8
   43710:	bcs	43740 <flatcc_json_printer_struct_as_root@@Base+0x220>
   43714:	ldr	r0, [fp, #-4]
   43718:	movw	r1, #1
   4371c:	bl	42d40 <flatcc_json_printer_union_vector_field@@Base+0x438>
   43720:	ldr	r0, [pc, #192]	; 437e8 <flatcc_json_printer_struct_as_root@@Base+0x2c8>
   43724:	add	r0, pc, r0
   43728:	ldr	r1, [pc, #188]	; 437ec <flatcc_json_printer_struct_as_root@@Base+0x2cc>
   4372c:	add	r1, pc, r1
   43730:	ldr	lr, [pc, #184]	; 437f0 <flatcc_json_printer_struct_as_root@@Base+0x2d0>
   43734:	add	r3, pc, lr
   43738:	movw	r2, #1019	; 0x3fb
   4373c:	bl	14f08 <__assert_fail@plt>
   43740:	ldr	r0, [sp, #16]
   43744:	movw	r1, #0
   43748:	cmp	r0, r1
   4374c:	beq	437d0 <flatcc_json_printer_struct_as_root@@Base+0x2b0>
   43750:	add	r0, sp, #8
   43754:	ldr	r1, [sp, #16]
   43758:	movw	r2, #4
   4375c:	bl	14ecc <strncpy@plt>
   43760:	ldr	r1, [sp, #8]
   43764:	str	r0, [sp, #4]
   43768:	mov	r0, r1
   4376c:	bl	46078 <flatcc_json_printer_clear@@Base+0x1d44>
   43770:	str	r0, [sp, #8]
   43774:	ldr	r0, [fp, #-8]
   43778:	add	r0, r0, #4
   4377c:	bl	4608c <flatcc_json_printer_clear@@Base+0x1d58>
   43780:	str	r0, [sp, #12]
   43784:	ldr	r0, [sp, #8]
   43788:	cmp	r0, #0
   4378c:	beq	437cc <flatcc_json_printer_struct_as_root@@Base+0x2ac>
   43790:	ldr	r0, [sp, #12]
   43794:	ldr	r1, [sp, #8]
   43798:	cmp	r0, r1
   4379c:	beq	437cc <flatcc_json_printer_struct_as_root@@Base+0x2ac>
   437a0:	ldr	r0, [fp, #-4]
   437a4:	movw	r1, #1
   437a8:	bl	42d40 <flatcc_json_printer_union_vector_field@@Base+0x438>
   437ac:	ldr	r0, [pc, #40]	; 437dc <flatcc_json_printer_struct_as_root@@Base+0x2bc>
   437b0:	add	r0, pc, r0
   437b4:	ldr	r1, [pc, #36]	; 437e0 <flatcc_json_printer_struct_as_root@@Base+0x2c0>
   437b8:	add	r1, pc, r1
   437bc:	ldr	lr, [pc, #32]	; 437e4 <flatcc_json_printer_struct_as_root@@Base+0x2c4>
   437c0:	add	r3, pc, lr
   437c4:	movw	r2, #1028	; 0x404
   437c8:	bl	14f08 <__assert_fail@plt>
   437cc:	b	437d0 <flatcc_json_printer_struct_as_root@@Base+0x2b0>
   437d0:	movw	r0, #1
   437d4:	mov	sp, fp
   437d8:	pop	{fp, pc}
   437dc:	andeq	r8, r0, r1, asr #27
   437e0:	strdeq	r8, [r0], -r7
   437e4:	andeq	r8, r0, r2, ror #26
   437e8:	ldrdeq	r8, [r0], -pc	; <UNPREDICTABLE>
   437ec:	andeq	r8, r0, r3, lsl #19
   437f0:	andeq	r8, r0, lr, ror #27
   437f4:	sub	sp, sp, #4
   437f8:	str	r0, [sp]
   437fc:	ldr	r0, [sp]
   43800:	ldr	r0, [r0, #36]	; 0x24
   43804:	add	sp, sp, #4
   43808:	bx	lr

0004380c <flatcc_json_printer_table_as_root@@Base>:
   4380c:	push	{fp, lr}
   43810:	mov	fp, sp
   43814:	sub	sp, sp, #40	; 0x28
   43818:	ldr	ip, [fp, #8]
   4381c:	str	r0, [fp, #-8]
   43820:	str	r1, [fp, #-12]
   43824:	str	r2, [fp, #-16]
   43828:	str	r3, [sp, #20]
   4382c:	ldr	r0, [fp, #-8]
   43830:	ldr	r1, [fp, #-12]
   43834:	ldr	r2, [fp, #-16]
   43838:	ldr	r3, [sp, #20]
   4383c:	str	ip, [sp, #16]
   43840:	bl	436d8 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   43844:	cmp	r0, #0
   43848:	bne	43858 <flatcc_json_printer_table_as_root@@Base+0x4c>
   4384c:	mvn	r0, #0
   43850:	str	r0, [fp, #-4]
   43854:	b	43928 <flatcc_json_printer_table_as_root@@Base+0x11c>
   43858:	ldr	r0, [fp, #-8]
   4385c:	ldr	r1, [fp, #-12]
   43860:	str	r0, [sp, #12]
   43864:	mov	r0, r1
   43868:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   4386c:	ldr	r3, [fp, #8]
   43870:	ldr	r1, [sp, #12]
   43874:	str	r0, [sp, #8]
   43878:	mov	r0, r1
   4387c:	ldr	r1, [sp, #8]
   43880:	movw	r2, #100	; 0x64
   43884:	bl	427c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   43888:	ldr	r0, [fp, #-8]
   4388c:	ldrb	r0, [r0, #25]
   43890:	cmp	r0, #0
   43894:	beq	438c0 <flatcc_json_printer_table_as_root@@Base+0xb4>
   43898:	ldr	r0, [fp, #-8]
   4389c:	ldr	r0, [r0, #32]
   438a0:	cmp	r0, #0
   438a4:	bne	438c0 <flatcc_json_printer_table_as_root@@Base+0xb4>
   438a8:	ldr	r0, [fp, #-8]
   438ac:	ldr	r1, [r0, #20]
   438b0:	add	r2, r1, #1
   438b4:	str	r2, [r0, #20]
   438b8:	movw	r0, #10
   438bc:	strb	r0, [r1]
   438c0:	ldr	r0, [fp, #-8]
   438c4:	ldr	r0, [r0, #44]	; 0x2c
   438c8:	ldr	r1, [fp, #-8]
   438cc:	str	r0, [sp, #4]
   438d0:	mov	r0, r1
   438d4:	movw	r1, #1
   438d8:	ldr	r2, [sp, #4]
   438dc:	blx	r2
   438e0:	ldr	r0, [fp, #-8]
   438e4:	bl	437f4 <flatcc_json_printer_struct_as_root@@Base+0x2d4>
   438e8:	cmp	r0, #0
   438ec:	beq	438fc <flatcc_json_printer_table_as_root@@Base+0xf0>
   438f0:	mvn	r0, #0
   438f4:	str	r0, [sp]
   438f8:	b	43920 <flatcc_json_printer_table_as_root@@Base+0x114>
   438fc:	ldr	r0, [fp, #-8]
   43900:	ldr	r0, [r0, #12]
   43904:	ldr	r1, [fp, #-8]
   43908:	ldr	r1, [r1, #20]
   4390c:	ldr	r2, [fp, #-8]
   43910:	ldr	r2, [r2]
   43914:	sub	r1, r1, r2
   43918:	add	r0, r0, r1
   4391c:	str	r0, [sp]
   43920:	ldr	r0, [sp]
   43924:	str	r0, [fp, #-4]
   43928:	ldr	r0, [fp, #-4]
   4392c:	mov	sp, fp
   43930:	pop	{fp, pc}

00043934 <flatcc_json_printer_struct_as_nested_root@@Base>:
   43934:	push	{r4, sl, fp, lr}
   43938:	add	fp, sp, #8
   4393c:	sub	sp, sp, #56	; 0x38
   43940:	ldr	ip, [fp, #16]
   43944:	ldr	lr, [fp, #12]
   43948:	ldr	r4, [fp, #8]
   4394c:	str	r0, [fp, #-12]
   43950:	str	r1, [fp, #-16]
   43954:	str	r2, [fp, #-20]	; 0xffffffec
   43958:	str	r3, [fp, #-24]	; 0xffffffe8
   4395c:	ldr	r0, [fp, #-16]
   43960:	ldr	r1, [fp, #-20]	; 0xffffffec
   43964:	str	r4, [sp, #28]
   43968:	str	lr, [sp, #24]
   4396c:	str	ip, [sp, #20]
   43970:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   43974:	str	r0, [fp, #-28]	; 0xffffffe4
   43978:	movw	r1, #0
   4397c:	cmp	r1, r0
   43980:	bne	43988 <flatcc_json_printer_struct_as_nested_root@@Base+0x54>
   43984:	b	43acc <flatcc_json_printer_struct_as_nested_root@@Base+0x198>
   43988:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4398c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43990:	str	r0, [sp, #16]
   43994:	mov	r0, r1
   43998:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   4399c:	ldr	r1, [sp, #16]
   439a0:	add	r0, r1, r0
   439a4:	str	r0, [fp, #-28]	; 0xffffffe4
   439a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   439ac:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   439b0:	str	r0, [sp, #32]
   439b4:	ldr	r0, [fp, #-12]
   439b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   439bc:	ldr	r2, [sp, #32]
   439c0:	ldr	r3, [fp, #12]
   439c4:	bl	436d8 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   439c8:	cmp	r0, #0
   439cc:	bne	439d4 <flatcc_json_printer_struct_as_nested_root@@Base+0xa0>
   439d0:	b	43acc <flatcc_json_printer_struct_as_nested_root@@Base+0x198>
   439d4:	ldr	r0, [fp, #-16]
   439d8:	ldr	r1, [r0, #16]
   439dc:	add	r2, r1, #1
   439e0:	str	r2, [r0, #16]
   439e4:	cmp	r1, #0
   439e8:	beq	43a04 <flatcc_json_printer_struct_as_nested_root@@Base+0xd0>
   439ec:	ldr	r0, [fp, #-12]
   439f0:	ldr	r1, [r0, #20]
   439f4:	add	r2, r1, #1
   439f8:	str	r2, [r0, #20]
   439fc:	movw	r0, #44	; 0x2c
   43a00:	strb	r0, [r1]
   43a04:	ldr	r0, [fp, #-12]
   43a08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43a0c:	ldr	r2, [fp, #8]
   43a10:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   43a14:	ldr	r0, [fp, #-12]
   43a18:	ldr	r1, [r0, #32]
   43a1c:	add	r1, r1, #1
   43a20:	str	r1, [r0, #32]
   43a24:	ldr	r0, [fp, #-12]
   43a28:	ldr	r1, [r0, #20]
   43a2c:	add	r2, r1, #1
   43a30:	str	r2, [r0, #20]
   43a34:	movw	r0, #123	; 0x7b
   43a38:	strb	r0, [r1]
   43a3c:	ldr	r0, [fp, #16]
   43a40:	ldr	r1, [fp, #-12]
   43a44:	ldr	r2, [fp, #-28]	; 0xffffffe4
   43a48:	str	r0, [sp, #12]
   43a4c:	mov	r0, r2
   43a50:	str	r1, [sp, #8]
   43a54:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   43a58:	ldr	r1, [sp, #8]
   43a5c:	str	r0, [sp, #4]
   43a60:	mov	r0, r1
   43a64:	ldr	r1, [sp, #4]
   43a68:	ldr	r2, [sp, #12]
   43a6c:	blx	r2
   43a70:	ldr	r0, [fp, #-12]
   43a74:	ldrsb	r0, [r0, #25]
   43a78:	cmp	r0, #0
   43a7c:	beq	43ab4 <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   43a80:	ldr	r0, [fp, #-12]
   43a84:	ldr	r1, [r0, #20]
   43a88:	add	r2, r1, #1
   43a8c:	str	r2, [r0, #20]
   43a90:	movw	r0, #10
   43a94:	strb	r0, [r1]
   43a98:	ldr	r0, [fp, #-12]
   43a9c:	ldr	r1, [r0, #32]
   43aa0:	mvn	r2, #0
   43aa4:	add	r1, r1, r2
   43aa8:	str	r1, [r0, #32]
   43aac:	ldr	r0, [fp, #-12]
   43ab0:	bl	399f4 <flatcc_json_printer_indent@@Base+0x20>
   43ab4:	ldr	r0, [fp, #-12]
   43ab8:	ldr	r1, [r0, #20]
   43abc:	add	r2, r1, #1
   43ac0:	str	r2, [r0, #20]
   43ac4:	movw	r0, #125	; 0x7d
   43ac8:	strb	r0, [r1]
   43acc:	sub	sp, fp, #8
   43ad0:	pop	{r4, sl, fp, pc}

00043ad4 <flatcc_json_printer_table_as_nested_root@@Base>:
   43ad4:	push	{r4, sl, fp, lr}
   43ad8:	add	fp, sp, #8
   43adc:	sub	sp, sp, #48	; 0x30
   43ae0:	ldr	ip, [fp, #16]
   43ae4:	ldr	lr, [fp, #12]
   43ae8:	ldr	r4, [fp, #8]
   43aec:	str	r0, [fp, #-12]
   43af0:	str	r1, [fp, #-16]
   43af4:	str	r2, [fp, #-20]	; 0xffffffec
   43af8:	str	r3, [fp, #-24]	; 0xffffffe8
   43afc:	ldr	r0, [fp, #-16]
   43b00:	ldr	r1, [fp, #-20]	; 0xffffffec
   43b04:	str	r4, [sp, #20]
   43b08:	str	lr, [sp, #16]
   43b0c:	str	ip, [sp, #12]
   43b10:	bl	3b870 <flatcc_json_printer_string_field@@Base+0xb4>
   43b14:	str	r0, [sp, #28]
   43b18:	movw	r1, #0
   43b1c:	cmp	r1, r0
   43b20:	bne	43b28 <flatcc_json_printer_table_as_nested_root@@Base+0x54>
   43b24:	b	43bf4 <flatcc_json_printer_table_as_nested_root@@Base+0x120>
   43b28:	ldr	r0, [sp, #28]
   43b2c:	ldr	r1, [sp, #28]
   43b30:	str	r0, [sp, #8]
   43b34:	mov	r0, r1
   43b38:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   43b3c:	ldr	r1, [sp, #8]
   43b40:	add	r0, r1, r0
   43b44:	str	r0, [sp, #28]
   43b48:	ldr	r0, [sp, #28]
   43b4c:	bl	3e818 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   43b50:	str	r0, [sp, #24]
   43b54:	ldr	r0, [sp, #28]
   43b58:	add	r0, r0, #4
   43b5c:	str	r0, [sp, #28]
   43b60:	ldr	r0, [fp, #-12]
   43b64:	ldr	r1, [sp, #28]
   43b68:	ldr	r2, [sp, #24]
   43b6c:	ldr	r3, [fp, #12]
   43b70:	bl	436d8 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   43b74:	cmp	r0, #0
   43b78:	bne	43b80 <flatcc_json_printer_table_as_nested_root@@Base+0xac>
   43b7c:	b	43bf4 <flatcc_json_printer_table_as_nested_root@@Base+0x120>
   43b80:	ldr	r0, [fp, #-16]
   43b84:	ldr	r1, [r0, #16]
   43b88:	add	r2, r1, #1
   43b8c:	str	r2, [r0, #16]
   43b90:	cmp	r1, #0
   43b94:	beq	43bb0 <flatcc_json_printer_table_as_nested_root@@Base+0xdc>
   43b98:	ldr	r0, [fp, #-12]
   43b9c:	ldr	r1, [r0, #20]
   43ba0:	add	r2, r1, #1
   43ba4:	str	r2, [r0, #20]
   43ba8:	movw	r0, #44	; 0x2c
   43bac:	strb	r0, [r1]
   43bb0:	ldr	r0, [fp, #-12]
   43bb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43bb8:	ldr	r2, [fp, #8]
   43bbc:	bl	3b904 <flatcc_json_printer_string_field@@Base+0x148>
   43bc0:	ldr	r0, [fp, #-12]
   43bc4:	ldr	r1, [sp, #28]
   43bc8:	str	r0, [sp, #4]
   43bcc:	mov	r0, r1
   43bd0:	bl	3ba14 <flatcc_json_printer_string_field@@Base+0x258>
   43bd4:	ldr	r1, [fp, #-16]
   43bd8:	ldr	r2, [r1, #12]
   43bdc:	ldr	r3, [fp, #16]
   43be0:	ldr	r1, [sp, #4]
   43be4:	str	r0, [sp]
   43be8:	mov	r0, r1
   43bec:	ldr	r1, [sp]
   43bf0:	bl	427c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   43bf4:	sub	sp, fp, #8
   43bf8:	pop	{r4, sl, fp, pc}

00043bfc <flatcc_json_printer_init@@Base>:
   43bfc:	push	{fp, lr}
   43c00:	mov	fp, sp
   43c04:	sub	sp, sp, #16
   43c08:	str	r0, [sp, #8]
   43c0c:	str	r1, [sp, #4]
   43c10:	ldr	r0, [sp, #8]
   43c14:	movw	r1, #0
   43c18:	and	r1, r1, #255	; 0xff
   43c1c:	movw	r2, #48	; 0x30
   43c20:	bl	14ec0 <memset@plt>
   43c24:	ldr	r0, [sp, #4]
   43c28:	movw	r1, #0
   43c2c:	cmp	r0, r1
   43c30:	beq	43c40 <flatcc_json_printer_init@@Base+0x44>
   43c34:	ldr	r0, [sp, #4]
   43c38:	str	r0, [sp]
   43c3c:	b	43c50 <flatcc_json_printer_init@@Base+0x54>
   43c40:	ldr	r0, [pc, #240]	; 43d38 <flatcc_json_printer_init@@Base+0x13c>
   43c44:	ldr	r0, [pc, r0]
   43c48:	ldr	r0, [r0]
   43c4c:	str	r0, [sp]
   43c50:	ldr	r0, [sp]
   43c54:	ldr	r1, [pc, #224]	; 43d3c <flatcc_json_printer_init@@Base+0x140>
   43c58:	add	r1, pc, r1
   43c5c:	ldr	r2, [sp, #8]
   43c60:	str	r0, [r2, #40]	; 0x28
   43c64:	ldr	r0, [sp, #8]
   43c68:	str	r1, [r0, #44]	; 0x2c
   43c6c:	movw	r0, #16448	; 0x4040
   43c70:	bl	14e78 <malloc@plt>
   43c74:	ldr	r1, [sp, #8]
   43c78:	str	r0, [r1]
   43c7c:	movw	r1, #0
   43c80:	cmp	r0, r1
   43c84:	bne	43c94 <flatcc_json_printer_init@@Base+0x98>
   43c88:	mvn	r0, #0
   43c8c:	str	r0, [fp, #-4]
   43c90:	b	43d2c <flatcc_json_printer_init@@Base+0x130>
   43c94:	ldr	r0, [sp, #8]
   43c98:	movw	r1, #1
   43c9c:	strb	r1, [r0, #24]
   43ca0:	ldr	r0, [sp, #8]
   43ca4:	movw	r1, #16448	; 0x4040
   43ca8:	str	r1, [r0, #4]
   43cac:	ldr	r0, [sp, #8]
   43cb0:	movw	r1, #16384	; 0x4000
   43cb4:	str	r1, [r0, #8]
   43cb8:	ldr	r0, [sp, #8]
   43cbc:	ldr	r0, [r0]
   43cc0:	ldr	r1, [sp, #8]
   43cc4:	str	r0, [r1, #20]
   43cc8:	ldr	r0, [sp, #8]
   43ccc:	ldr	r0, [r0]
   43cd0:	ldr	r1, [sp, #8]
   43cd4:	ldr	r1, [r1, #8]
   43cd8:	add	r0, r0, r1
   43cdc:	ldr	r1, [sp, #8]
   43ce0:	str	r0, [r1, #16]
   43ce4:	ldr	r0, [sp, #8]
   43ce8:	ldr	r0, [r0, #8]
   43cec:	add	r0, r0, #64	; 0x40
   43cf0:	ldr	r1, [sp, #8]
   43cf4:	ldr	r1, [r1, #4]
   43cf8:	cmp	r0, r1
   43cfc:	bhi	43d04 <flatcc_json_printer_init@@Base+0x108>
   43d00:	b	43d24 <flatcc_json_printer_init@@Base+0x128>
   43d04:	ldr	r0, [pc, #52]	; 43d40 <flatcc_json_printer_init@@Base+0x144>
   43d08:	add	r0, pc, r0
   43d0c:	ldr	r1, [pc, #48]	; 43d44 <flatcc_json_printer_init@@Base+0x148>
   43d10:	add	r1, pc, r1
   43d14:	ldr	r2, [pc, #44]	; 43d48 <flatcc_json_printer_init@@Base+0x14c>
   43d18:	add	r3, pc, r2
   43d1c:	movw	r2, #1147	; 0x47b
   43d20:	bl	14f08 <__assert_fail@plt>
   43d24:	movw	r0, #0
   43d28:	str	r0, [fp, #-4]
   43d2c:	ldr	r0, [fp, #-4]
   43d30:	mov	sp, fp
   43d34:	pop	{fp, pc}
   43d38:	andeq	r9, r1, ip, lsr #8
   43d3c:	andeq	r0, r0, ip, ror #1
   43d40:	ldrdeq	r8, [r0], -r9
   43d44:	muleq	r0, pc, r3	; <UNPREDICTABLE>
   43d48:	andeq	r8, r0, r2, lsl #10
   43d4c:	push	{fp, lr}
   43d50:	mov	fp, sp
   43d54:	sub	sp, sp, #32
   43d58:	str	r0, [fp, #-4]
   43d5c:	str	r1, [fp, #-8]
   43d60:	ldr	r0, [fp, #-8]
   43d64:	cmp	r0, #0
   43d68:	bne	43e30 <flatcc_json_printer_init@@Base+0x234>
   43d6c:	ldr	r0, [fp, #-4]
   43d70:	ldr	r0, [r0, #20]
   43d74:	ldr	r1, [fp, #-4]
   43d78:	ldr	r1, [r1, #16]
   43d7c:	cmp	r0, r1
   43d80:	bcc	43e30 <flatcc_json_printer_init@@Base+0x234>
   43d84:	ldr	r0, [fp, #-4]
   43d88:	ldr	r0, [r0, #20]
   43d8c:	ldr	r1, [fp, #-4]
   43d90:	ldr	r1, [r1, #16]
   43d94:	sub	r0, r0, r1
   43d98:	str	r0, [fp, #-12]
   43d9c:	ldr	r0, [fp, #-4]
   43da0:	ldr	r0, [r0]
   43da4:	ldr	r1, [fp, #-4]
   43da8:	ldr	r1, [r1, #8]
   43dac:	ldr	r2, [fp, #-4]
   43db0:	ldr	r2, [r2, #40]	; 0x28
   43db4:	movw	r3, #1
   43db8:	str	r2, [sp, #12]
   43dbc:	mov	r2, r3
   43dc0:	ldr	r3, [sp, #12]
   43dc4:	bl	14e6c <fwrite@plt>
   43dc8:	ldr	r1, [fp, #-4]
   43dcc:	ldr	r1, [r1]
   43dd0:	ldr	r2, [fp, #-4]
   43dd4:	ldr	r2, [r2]
   43dd8:	ldr	r3, [fp, #-4]
   43ddc:	ldr	r3, [r3, #8]
   43de0:	add	r2, r2, r3
   43de4:	ldr	r3, [fp, #-12]
   43de8:	str	r0, [sp, #8]
   43dec:	mov	r0, r1
   43df0:	mov	r1, r2
   43df4:	mov	r2, r3
   43df8:	bl	14e30 <memcpy@plt>
   43dfc:	ldr	r0, [fp, #-4]
   43e00:	ldr	r0, [r0]
   43e04:	ldr	r1, [fp, #-12]
   43e08:	add	r0, r0, r1
   43e0c:	ldr	r1, [fp, #-4]
   43e10:	str	r0, [r1, #20]
   43e14:	ldr	r0, [fp, #-4]
   43e18:	ldr	r0, [r0, #8]
   43e1c:	ldr	r1, [fp, #-4]
   43e20:	ldr	r2, [r1, #12]
   43e24:	add	r0, r2, r0
   43e28:	str	r0, [r1, #12]
   43e2c:	b	43e98 <flatcc_json_printer_init@@Base+0x29c>
   43e30:	ldr	r0, [fp, #-4]
   43e34:	ldr	r0, [r0, #20]
   43e38:	ldr	r1, [fp, #-4]
   43e3c:	ldr	r1, [r1]
   43e40:	sub	r0, r0, r1
   43e44:	str	r0, [sp, #16]
   43e48:	ldr	r0, [fp, #-4]
   43e4c:	ldr	r0, [r0]
   43e50:	ldr	r1, [sp, #16]
   43e54:	ldr	r2, [fp, #-4]
   43e58:	ldr	r2, [r2, #40]	; 0x28
   43e5c:	movw	r3, #1
   43e60:	str	r2, [sp, #4]
   43e64:	mov	r2, r3
   43e68:	ldr	r3, [sp, #4]
   43e6c:	bl	14e6c <fwrite@plt>
   43e70:	ldr	r1, [fp, #-4]
   43e74:	ldr	r1, [r1]
   43e78:	ldr	r2, [fp, #-4]
   43e7c:	str	r1, [r2, #20]
   43e80:	ldr	r1, [sp, #16]
   43e84:	ldr	r2, [fp, #-4]
   43e88:	ldr	r3, [r2, #12]
   43e8c:	add	r1, r3, r1
   43e90:	str	r1, [r2, #12]
   43e94:	str	r0, [sp]
   43e98:	ldr	r0, [fp, #-4]
   43e9c:	ldr	r0, [r0, #20]
   43ea0:	movw	r1, #0
   43ea4:	strb	r1, [r0]
   43ea8:	mov	sp, fp
   43eac:	pop	{fp, pc}

00043eb0 <flatcc_json_printer_init_buffer@@Base>:
   43eb0:	push	{fp, lr}
   43eb4:	mov	fp, sp
   43eb8:	sub	sp, sp, #24
   43ebc:	str	r0, [fp, #-8]
   43ec0:	str	r1, [sp, #12]
   43ec4:	str	r2, [sp, #8]
   43ec8:	ldr	r0, [sp, #8]
   43ecc:	cmp	r0, #64	; 0x40
   43ed0:	bcc	43ed8 <flatcc_json_printer_init_buffer@@Base+0x28>
   43ed4:	b	43ef8 <flatcc_json_printer_init_buffer@@Base+0x48>
   43ed8:	ldr	r0, [pc, #204]	; 43fac <flatcc_json_printer_init_buffer@@Base+0xfc>
   43edc:	add	r0, pc, r0
   43ee0:	ldr	r1, [pc, #200]	; 43fb0 <flatcc_json_printer_init_buffer@@Base+0x100>
   43ee4:	add	r1, pc, r1
   43ee8:	ldr	r2, [pc, #196]	; 43fb4 <flatcc_json_printer_init_buffer@@Base+0x104>
   43eec:	add	r3, pc, r2
   43ef0:	movw	r2, #1165	; 0x48d
   43ef4:	bl	14f08 <__assert_fail@plt>
   43ef8:	ldr	r0, [sp, #8]
   43efc:	cmp	r0, #64	; 0x40
   43f00:	bcs	43f10 <flatcc_json_printer_init_buffer@@Base+0x60>
   43f04:	mvn	r0, #0
   43f08:	str	r0, [fp, #-4]
   43f0c:	b	43fa0 <flatcc_json_printer_init_buffer@@Base+0xf0>
   43f10:	ldr	r0, [pc, #160]	; 43fb8 <flatcc_json_printer_init_buffer@@Base+0x108>
   43f14:	add	r0, pc, r0
   43f18:	ldr	r1, [fp, #-8]
   43f1c:	str	r0, [sp, #4]
   43f20:	mov	r0, r1
   43f24:	movw	r1, #0
   43f28:	and	r1, r1, #255	; 0xff
   43f2c:	movw	r2, #48	; 0x30
   43f30:	bl	14ec0 <memset@plt>
   43f34:	ldr	r0, [sp, #12]
   43f38:	ldr	r1, [fp, #-8]
   43f3c:	str	r0, [r1]
   43f40:	ldr	r0, [sp, #8]
   43f44:	ldr	r1, [fp, #-8]
   43f48:	str	r0, [r1, #4]
   43f4c:	ldr	r0, [fp, #-8]
   43f50:	ldr	r0, [r0, #4]
   43f54:	sub	r0, r0, #64	; 0x40
   43f58:	ldr	r1, [fp, #-8]
   43f5c:	str	r0, [r1, #8]
   43f60:	ldr	r0, [fp, #-8]
   43f64:	ldr	r0, [r0]
   43f68:	ldr	r1, [fp, #-8]
   43f6c:	str	r0, [r1, #20]
   43f70:	ldr	r0, [fp, #-8]
   43f74:	ldr	r0, [r0]
   43f78:	ldr	r1, [fp, #-8]
   43f7c:	ldr	r1, [r1, #8]
   43f80:	add	r0, r0, r1
   43f84:	ldr	r1, [fp, #-8]
   43f88:	str	r0, [r1, #16]
   43f8c:	ldr	r0, [fp, #-8]
   43f90:	ldr	r1, [sp, #4]
   43f94:	str	r1, [r0, #44]	; 0x2c
   43f98:	movw	r0, #0
   43f9c:	str	r0, [fp, #-4]
   43fa0:	ldr	r0, [fp, #-4]
   43fa4:	mov	sp, fp
   43fa8:	pop	{fp, pc}
   43fac:	andeq	r8, r0, ip, ror r3
   43fb0:	andeq	r8, r0, fp, asr #3
   43fb4:	muleq	r0, r5, r3
   43fb8:	andeq	r0, r0, r0, lsr #1
   43fbc:	push	{fp, lr}
   43fc0:	mov	fp, sp
   43fc4:	sub	sp, sp, #8
   43fc8:	str	r0, [sp, #4]
   43fcc:	str	r1, [sp]
   43fd0:	ldr	r0, [sp, #4]
   43fd4:	ldr	r0, [r0, #20]
   43fd8:	ldr	r1, [sp, #4]
   43fdc:	ldr	r1, [r1, #16]
   43fe0:	cmp	r0, r1
   43fe4:	bcc	44028 <flatcc_json_printer_init_buffer@@Base+0x178>
   43fe8:	ldr	r0, [sp, #4]
   43fec:	movw	r1, #3
   43ff0:	bl	42d40 <flatcc_json_printer_union_vector_field@@Base+0x438>
   43ff4:	ldr	r0, [sp, #4]
   43ff8:	ldr	r0, [r0, #20]
   43ffc:	ldr	r1, [sp, #4]
   44000:	ldr	r1, [r1]
   44004:	sub	r0, r0, r1
   44008:	ldr	r1, [sp, #4]
   4400c:	ldr	lr, [r1, #12]
   44010:	add	r0, lr, r0
   44014:	str	r0, [r1, #12]
   44018:	ldr	r0, [sp, #4]
   4401c:	ldr	r0, [r0]
   44020:	ldr	r1, [sp, #4]
   44024:	str	r0, [r1, #20]
   44028:	ldr	r0, [sp, #4]
   4402c:	ldr	r0, [r0, #20]
   44030:	movw	r1, #0
   44034:	strb	r1, [r0]
   44038:	mov	sp, fp
   4403c:	pop	{fp, pc}

00044040 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   44040:	push	{fp, lr}
   44044:	mov	fp, sp
   44048:	sub	sp, sp, #16
   4404c:	str	r0, [sp, #8]
   44050:	str	r1, [sp, #4]
   44054:	ldr	r0, [sp, #4]
   44058:	cmp	r0, #0
   4405c:	bne	44068 <flatcc_json_printer_init_dynamic_buffer@@Base+0x28>
   44060:	movw	r0, #4096	; 0x1000
   44064:	str	r0, [sp, #4]
   44068:	ldr	r0, [sp, #4]
   4406c:	cmp	r0, #64	; 0x40
   44070:	bcs	4407c <flatcc_json_printer_init_dynamic_buffer@@Base+0x3c>
   44074:	movw	r0, #64	; 0x40
   44078:	str	r0, [sp, #4]
   4407c:	ldr	r0, [sp, #8]
   44080:	movw	r1, #0
   44084:	and	r1, r1, #255	; 0xff
   44088:	movw	r2, #48	; 0x30
   4408c:	bl	14ec0 <memset@plt>
   44090:	ldr	r0, [sp, #4]
   44094:	bl	14e78 <malloc@plt>
   44098:	ldr	r1, [pc, #168]	; 44148 <flatcc_json_printer_init_dynamic_buffer@@Base+0x108>
   4409c:	add	r1, pc, r1
   440a0:	ldr	r2, [sp, #8]
   440a4:	str	r0, [r2]
   440a8:	ldr	r0, [sp, #8]
   440ac:	movw	r2, #1
   440b0:	strb	r2, [r0, #24]
   440b4:	ldr	r0, [sp, #4]
   440b8:	ldr	r2, [sp, #8]
   440bc:	str	r0, [r2, #4]
   440c0:	ldr	r0, [sp, #8]
   440c4:	ldr	r0, [r0, #4]
   440c8:	sub	r0, r0, #64	; 0x40
   440cc:	ldr	r2, [sp, #8]
   440d0:	str	r0, [r2, #8]
   440d4:	ldr	r0, [sp, #8]
   440d8:	ldr	r0, [r0]
   440dc:	ldr	r2, [sp, #8]
   440e0:	str	r0, [r2, #20]
   440e4:	ldr	r0, [sp, #8]
   440e8:	ldr	r0, [r0]
   440ec:	ldr	r2, [sp, #8]
   440f0:	ldr	r2, [r2, #8]
   440f4:	add	r0, r0, r2
   440f8:	ldr	r2, [sp, #8]
   440fc:	str	r0, [r2, #16]
   44100:	ldr	r0, [sp, #8]
   44104:	str	r1, [r0, #44]	; 0x2c
   44108:	ldr	r0, [sp, #8]
   4410c:	ldr	r0, [r0]
   44110:	movw	r1, #0
   44114:	cmp	r0, r1
   44118:	bne	44134 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   4411c:	ldr	r0, [sp, #8]
   44120:	movw	r1, #3
   44124:	bl	42d40 <flatcc_json_printer_union_vector_field@@Base+0x438>
   44128:	mvn	r0, #0
   4412c:	str	r0, [fp, #-4]
   44130:	b	4413c <flatcc_json_printer_init_dynamic_buffer@@Base+0xfc>
   44134:	movw	r0, #0
   44138:	str	r0, [fp, #-4]
   4413c:	ldr	r0, [fp, #-4]
   44140:	mov	sp, fp
   44144:	pop	{fp, pc}
   44148:	andeq	r0, r0, r8, lsr #1
   4414c:	push	{fp, lr}
   44150:	mov	fp, sp
   44154:	sub	sp, sp, #24
   44158:	str	r0, [fp, #-4]
   4415c:	str	r1, [fp, #-8]
   44160:	ldr	r0, [fp, #-4]
   44164:	ldr	r0, [r0, #20]
   44168:	ldr	r1, [fp, #-4]
   4416c:	ldr	r1, [r1]
   44170:	sub	r0, r0, r1
   44174:	str	r0, [sp, #12]
   44178:	ldr	r0, [fp, #-4]
   4417c:	ldr	r0, [r0, #20]
   44180:	movw	r1, #0
   44184:	strb	r1, [r0]
   44188:	ldr	r0, [fp, #-4]
   4418c:	ldr	r0, [r0, #20]
   44190:	ldr	r1, [fp, #-4]
   44194:	ldr	r1, [r1, #16]
   44198:	cmp	r0, r1
   4419c:	bcs	441a4 <flatcc_json_printer_init_dynamic_buffer@@Base+0x164>
   441a0:	b	44278 <flatcc_json_printer_init_dynamic_buffer@@Base+0x238>
   441a4:	ldr	r0, [fp, #-4]
   441a8:	ldr	r1, [r0]
   441ac:	ldr	r0, [r0, #4]
   441b0:	lsl	r0, r0, #1
   441b4:	str	r0, [sp, #4]
   441b8:	mov	r0, r1
   441bc:	ldr	r1, [sp, #4]
   441c0:	bl	14e60 <realloc@plt>
   441c4:	str	r0, [sp, #8]
   441c8:	ldr	r0, [sp, #8]
   441cc:	movw	r1, #0
   441d0:	cmp	r0, r1
   441d4:	bne	4420c <flatcc_json_printer_init_dynamic_buffer@@Base+0x1cc>
   441d8:	ldr	r0, [fp, #-4]
   441dc:	movw	r1, #3
   441e0:	bl	42d40 <flatcc_json_printer_union_vector_field@@Base+0x438>
   441e4:	ldr	r0, [sp, #12]
   441e8:	ldr	r1, [fp, #-4]
   441ec:	ldr	lr, [r1, #12]
   441f0:	add	r0, lr, r0
   441f4:	str	r0, [r1, #12]
   441f8:	ldr	r0, [fp, #-4]
   441fc:	ldr	r0, [r0]
   44200:	ldr	r1, [fp, #-4]
   44204:	str	r0, [r1, #20]
   44208:	b	44268 <flatcc_json_printer_init_dynamic_buffer@@Base+0x228>
   4420c:	ldr	r0, [fp, #-4]
   44210:	ldr	r1, [r0, #4]
   44214:	lsl	r1, r1, #1
   44218:	str	r1, [r0, #4]
   4421c:	ldr	r0, [fp, #-4]
   44220:	ldr	r0, [r0, #4]
   44224:	sub	r0, r0, #64	; 0x40
   44228:	ldr	r1, [fp, #-4]
   4422c:	str	r0, [r1, #8]
   44230:	ldr	r0, [sp, #8]
   44234:	ldr	r1, [fp, #-4]
   44238:	str	r0, [r1]
   4423c:	ldr	r0, [sp, #8]
   44240:	ldr	r1, [sp, #12]
   44244:	add	r0, r0, r1
   44248:	ldr	r1, [fp, #-4]
   4424c:	str	r0, [r1, #20]
   44250:	ldr	r0, [sp, #8]
   44254:	ldr	r1, [fp, #-4]
   44258:	ldr	r1, [r1, #8]
   4425c:	add	r0, r0, r1
   44260:	ldr	r1, [fp, #-4]
   44264:	str	r0, [r1, #16]
   44268:	ldr	r0, [fp, #-4]
   4426c:	ldr	r0, [r0, #20]
   44270:	movw	r1, #0
   44274:	strb	r1, [r0]
   44278:	mov	sp, fp
   4427c:	pop	{fp, pc}

00044280 <flatcc_json_printer_get_buffer@@Base>:
   44280:	push	{fp, lr}
   44284:	mov	fp, sp
   44288:	sub	sp, sp, #16
   4428c:	str	r0, [fp, #-4]
   44290:	str	r1, [sp, #8]
   44294:	ldr	r0, [fp, #-4]
   44298:	ldr	r0, [r0, #44]	; 0x2c
   4429c:	ldr	r1, [fp, #-4]
   442a0:	str	r0, [sp, #4]
   442a4:	mov	r0, r1
   442a8:	movw	r1, #0
   442ac:	ldr	r2, [sp, #4]
   442b0:	blx	r2
   442b4:	ldr	r0, [sp, #8]
   442b8:	movw	r1, #0
   442bc:	cmp	r0, r1
   442c0:	beq	442e0 <flatcc_json_printer_get_buffer@@Base+0x60>
   442c4:	ldr	r0, [fp, #-4]
   442c8:	ldr	r0, [r0, #20]
   442cc:	ldr	r1, [fp, #-4]
   442d0:	ldr	r1, [r1]
   442d4:	sub	r0, r0, r1
   442d8:	ldr	r1, [sp, #8]
   442dc:	str	r0, [r1]
   442e0:	ldr	r0, [fp, #-4]
   442e4:	ldr	r0, [r0]
   442e8:	mov	sp, fp
   442ec:	pop	{fp, pc}

000442f0 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   442f0:	push	{fp, lr}
   442f4:	mov	fp, sp
   442f8:	sub	sp, sp, #16
   442fc:	str	r0, [fp, #-4]
   44300:	str	r1, [sp, #8]
   44304:	ldr	r0, [fp, #-4]
   44308:	ldr	r1, [sp, #8]
   4430c:	bl	44280 <flatcc_json_printer_get_buffer@@Base>
   44310:	str	r0, [sp, #4]
   44314:	ldr	r0, [fp, #-4]
   44318:	movw	r1, #0
   4431c:	and	r1, r1, #255	; 0xff
   44320:	movw	r2, #48	; 0x30
   44324:	bl	14ec0 <memset@plt>
   44328:	ldr	r0, [sp, #4]
   4432c:	mov	sp, fp
   44330:	pop	{fp, pc}

00044334 <flatcc_json_printer_clear@@Base>:
   44334:	push	{fp, lr}
   44338:	mov	fp, sp
   4433c:	sub	sp, sp, #8
   44340:	str	r0, [sp, #4]
   44344:	ldr	r0, [sp, #4]
   44348:	ldrb	r0, [r0, #24]
   4434c:	cmp	r0, #0
   44350:	beq	44374 <flatcc_json_printer_clear@@Base+0x40>
   44354:	ldr	r0, [sp, #4]
   44358:	ldr	r0, [r0]
   4435c:	movw	r1, #0
   44360:	cmp	r0, r1
   44364:	beq	44374 <flatcc_json_printer_clear@@Base+0x40>
   44368:	ldr	r0, [sp, #4]
   4436c:	ldr	r0, [r0]
   44370:	bl	14e24 <free@plt>
   44374:	ldr	r0, [sp, #4]
   44378:	movw	r1, #0
   4437c:	and	r1, r1, #255	; 0xff
   44380:	movw	r2, #48	; 0x30
   44384:	bl	14ec0 <memset@plt>
   44388:	mov	sp, fp
   4438c:	pop	{fp, pc}
   44390:	sub	sp, sp, #16
   44394:	vstr	d0, [sp, #8]
   44398:	vldr	d0, [sp, #8]
   4439c:	vstr	d0, [sp]
   443a0:	ldr	r0, [sp]
   443a4:	ldr	r1, [sp, #4]
   443a8:	add	sp, sp, #16
   443ac:	bx	lr
   443b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   443b4:	add	fp, sp, #28
   443b8:	sub	sp, sp, #260	; 0x104
   443bc:	vstr	d0, [fp, #-40]	; 0xffffffd8
   443c0:	str	r0, [fp, #-44]	; 0xffffffd4
   443c4:	str	r1, [fp, #-48]	; 0xffffffd0
   443c8:	str	r2, [fp, #-52]	; 0xffffffcc
   443cc:	vldr	d0, [fp, #-40]	; 0xffffffd8
   443d0:	sub	r0, fp, #80	; 0x50
   443d4:	bl	448e0 <flatcc_json_printer_clear@@Base+0x5ac>
   443d8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   443dc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   443e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   443e4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   443e8:	mov	lr, sp
   443ec:	str	r1, [lr, #4]
   443f0:	str	r0, [lr]
   443f4:	sub	r0, fp, #96	; 0x60
   443f8:	bl	44978 <flatcc_json_printer_clear@@Base+0x644>
   443fc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   44400:	ldr	r1, [fp, #-76]	; 0xffffffb4
   44404:	lsl	r1, r1, #1
   44408:	orr	r1, r1, r0, lsr #31
   4440c:	mov	r2, #1
   44410:	orr	r0, r2, r0, lsl #1
   44414:	str	r0, [fp, #-112]	; 0xffffff90
   44418:	str	r1, [fp, #-108]	; 0xffffff94
   4441c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   44420:	sub	r0, r0, #1
   44424:	str	r0, [fp, #-104]	; 0xffffff98
   44428:	ldr	r2, [fp, #-112]	; 0xffffff90
   4442c:	ldr	r3, [fp, #-108]	; 0xffffff94
   44430:	ldr	r0, [fp, #-104]	; 0xffffff98
   44434:	ldr	r1, [fp, #-100]	; 0xffffff9c
   44438:	mov	lr, sp
   4443c:	str	r1, [lr, #4]
   44440:	str	r0, [lr]
   44444:	sub	r0, fp, #128	; 0x80
   44448:	bl	44978 <flatcc_json_printer_clear@@Base+0x644>
   4444c:	vldr	d0, [fp, #-40]	; 0xffffffd8
   44450:	bl	44390 <flatcc_json_printer_clear@@Base+0x5c>
   44454:	str	r1, [sp, #124]	; 0x7c
   44458:	str	r0, [sp, #120]	; 0x78
   4445c:	vldr	d0, [fp, #-40]	; 0xffffffd8
   44460:	vcmpe.f64	d0, #0.0
   44464:	vmrs	APSR_nzcv, fpscr
   44468:	ble	44484 <flatcc_json_printer_clear@@Base+0x150>
   4446c:	vldr	d16, [pc, #756]	; 44768 <flatcc_json_printer_clear@@Base+0x434>
   44470:	vldr	d17, [fp, #-40]	; 0xffffffd8
   44474:	vcmpe.f64	d17, d16
   44478:	vmrs	APSR_nzcv, fpscr
   4447c:	bhi	44484 <flatcc_json_printer_clear@@Base+0x150>
   44480:	b	444a4 <flatcc_json_printer_clear@@Base+0x170>
   44484:	ldr	r0, [pc, #740]	; 44770 <flatcc_json_printer_clear@@Base+0x43c>
   44488:	add	r0, pc, r0
   4448c:	ldr	r1, [pc, #736]	; 44774 <flatcc_json_printer_clear@@Base+0x440>
   44490:	add	r1, pc, r1
   44494:	ldr	r2, [pc, #732]	; 44778 <flatcc_json_printer_clear@@Base+0x444>
   44498:	add	r3, pc, r2
   4449c:	movw	r2, #138	; 0x8a
   444a0:	bl	14f08 <__assert_fail@plt>
   444a4:	ldr	r0, [sp, #120]	; 0x78
   444a8:	ldr	r1, [sp, #124]	; 0x7c
   444ac:	bfc	r1, #20, #12
   444b0:	orr	r0, r0, r1
   444b4:	cmp	r0, #0
   444b8:	bne	44508 <flatcc_json_printer_clear@@Base+0x1d4>
   444bc:	b	444c0 <flatcc_json_printer_clear@@Base+0x18c>
   444c0:	ldrh	r0, [sp, #126]	; 0x7e
   444c4:	movw	r1, #32752	; 0x7ff0
   444c8:	tst	r0, r1
   444cc:	beq	44508 <flatcc_json_printer_clear@@Base+0x1d4>
   444d0:	b	444d4 <flatcc_json_printer_clear@@Base+0x1a0>
   444d4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   444d8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   444dc:	lsl	r1, r1, #2
   444e0:	orr	r1, r1, r0, lsr #30
   444e4:	mvn	r2, #0
   444e8:	adds	r0, r2, r0, lsl #2
   444ec:	sbc	r1, r1, #0
   444f0:	str	r0, [sp, #144]	; 0x90
   444f4:	str	r1, [sp, #148]	; 0x94
   444f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   444fc:	sub	r0, r0, #2
   44500:	str	r0, [sp, #152]	; 0x98
   44504:	b	44538 <flatcc_json_printer_clear@@Base+0x204>
   44508:	ldr	r0, [fp, #-80]	; 0xffffffb0
   4450c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   44510:	lsl	r1, r1, #1
   44514:	orr	r1, r1, r0, lsr #31
   44518:	mvn	r2, #0
   4451c:	adds	r0, r2, r0, lsl #1
   44520:	sbc	r1, r1, #0
   44524:	str	r0, [sp, #144]	; 0x90
   44528:	str	r1, [sp, #148]	; 0x94
   4452c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   44530:	sub	r0, r0, #1
   44534:	str	r0, [sp, #152]	; 0x98
   44538:	ldr	r0, [sp, #144]	; 0x90
   4453c:	ldr	r1, [sp, #148]	; 0x94
   44540:	ldr	r2, [sp, #152]	; 0x98
   44544:	ldr	r3, [fp, #-120]	; 0xffffff88
   44548:	sub	r2, r2, r3
   4454c:	rsb	r3, r2, #32
   44550:	lsr	r3, r0, r3
   44554:	orr	r1, r3, r1, lsl r2
   44558:	sub	r3, r2, #32
   4455c:	cmp	r3, #0
   44560:	lslge	r1, r0, r3
   44564:	lsl	r0, r0, r2
   44568:	cmp	r3, #0
   4456c:	movwge	r0, #0
   44570:	str	r0, [sp, #144]	; 0x90
   44574:	str	r1, [sp, #148]	; 0x94
   44578:	ldr	r0, [fp, #-120]	; 0xffffff88
   4457c:	str	r0, [sp, #152]	; 0x98
   44580:	ldr	r0, [fp, #-88]	; 0xffffffa8
   44584:	mvn	r1, #123	; 0x7b
   44588:	sub	r0, r1, r0
   4458c:	add	r1, sp, #128	; 0x80
   44590:	bl	44ab8 <flatcc_json_printer_clear@@Base+0x784>
   44594:	str	r0, [fp, #-56]	; 0xffffffc8
   44598:	ldr	r2, [fp, #-96]	; 0xffffffa0
   4459c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   445a0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   445a4:	ldr	r1, [fp, #-84]	; 0xffffffac
   445a8:	ldr	lr, [sp, #128]	; 0x80
   445ac:	ldr	ip, [sp, #132]	; 0x84
   445b0:	ldr	r4, [sp, #136]	; 0x88
   445b4:	ldr	r5, [sp, #140]	; 0x8c
   445b8:	mov	r6, sp
   445bc:	str	r5, [r6, #20]
   445c0:	str	r4, [r6, #16]
   445c4:	str	ip, [r6, #12]
   445c8:	str	lr, [r6, #8]
   445cc:	str	r1, [r6, #4]
   445d0:	str	r0, [r6]
   445d4:	add	r0, sp, #104	; 0x68
   445d8:	str	r0, [sp, #68]	; 0x44
   445dc:	bl	44b78 <flatcc_json_printer_clear@@Base+0x844>
   445e0:	ldr	r0, [sp, #68]	; 0x44
   445e4:	vld1.64	{d16-d17}, [r0]
   445e8:	sub	r1, fp, #96	; 0x60
   445ec:	vst1.64	{d16-d17}, [r1]
   445f0:	ldr	r2, [sp, #144]	; 0x90
   445f4:	ldr	r3, [sp, #148]	; 0x94
   445f8:	ldr	r1, [sp, #152]	; 0x98
   445fc:	ldr	ip, [sp, #156]	; 0x9c
   44600:	ldr	lr, [sp, #128]	; 0x80
   44604:	ldr	r4, [sp, #132]	; 0x84
   44608:	ldr	r5, [sp, #136]	; 0x88
   4460c:	ldr	r6, [sp, #140]	; 0x8c
   44610:	mov	r7, sp
   44614:	str	r6, [r7, #20]
   44618:	str	r5, [r7, #16]
   4461c:	str	r4, [r7, #12]
   44620:	str	lr, [r7, #8]
   44624:	str	ip, [r7, #4]
   44628:	str	r1, [r7]
   4462c:	add	r1, sp, #88	; 0x58
   44630:	mov	r0, r1
   44634:	str	r1, [sp, #64]	; 0x40
   44638:	bl	44b78 <flatcc_json_printer_clear@@Base+0x844>
   4463c:	ldr	r0, [sp, #64]	; 0x40
   44640:	vld1.64	{d16-d17}, [r0]
   44644:	add	r1, sp, #144	; 0x90
   44648:	vst1.64	{d16-d17}, [r1]
   4464c:	ldr	r2, [fp, #-128]	; 0xffffff80
   44650:	ldr	r3, [fp, #-124]	; 0xffffff84
   44654:	ldr	r1, [fp, #-120]	; 0xffffff88
   44658:	ldr	ip, [fp, #-116]	; 0xffffff8c
   4465c:	ldr	lr, [sp, #128]	; 0x80
   44660:	ldr	r4, [sp, #132]	; 0x84
   44664:	ldr	r5, [sp, #136]	; 0x88
   44668:	ldr	r6, [sp, #140]	; 0x8c
   4466c:	mov	r7, sp
   44670:	str	r6, [r7, #20]
   44674:	str	r5, [r7, #16]
   44678:	str	r4, [r7, #12]
   4467c:	str	lr, [r7, #8]
   44680:	str	ip, [r7, #4]
   44684:	str	r1, [r7]
   44688:	add	r1, sp, #72	; 0x48
   4468c:	mov	r0, r1
   44690:	str	r1, [sp, #60]	; 0x3c
   44694:	bl	44b78 <flatcc_json_printer_clear@@Base+0x844>
   44698:	ldr	r0, [sp, #60]	; 0x3c
   4469c:	vld1.64	{d16-d17}, [r0]
   446a0:	sub	r1, fp, #128	; 0x80
   446a4:	vst1.64	{d16-d17}, [r1]
   446a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   446ac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   446b0:	ldr	r0, [sp, #144]	; 0x90
   446b4:	ldr	r3, [sp, #148]	; 0x94
   446b8:	ldr	ip, [sp, #152]	; 0x98
   446bc:	ldr	lr, [sp, #156]	; 0x9c
   446c0:	ldr	r4, [fp, #-96]	; 0xffffffa0
   446c4:	ldr	r5, [fp, #-92]	; 0xffffffa4
   446c8:	ldr	r6, [fp, #-88]	; 0xffffffa8
   446cc:	ldr	r7, [fp, #-84]	; 0xffffffac
   446d0:	ldr	r8, [fp, #-128]	; 0xffffff80
   446d4:	ldr	r9, [fp, #-124]	; 0xffffff84
   446d8:	ldr	sl, [fp, #-120]	; 0xffffff88
   446dc:	str	r0, [sp, #56]	; 0x38
   446e0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   446e4:	str	r0, [sp, #52]	; 0x34
   446e8:	mov	r0, sp
   446ec:	str	r0, [sp, #48]	; 0x30
   446f0:	sub	r0, fp, #60	; 0x3c
   446f4:	str	r1, [sp, #44]	; 0x2c
   446f8:	ldr	r1, [sp, #48]	; 0x30
   446fc:	str	r0, [r1, #40]	; 0x28
   44700:	str	r2, [r1, #36]	; 0x24
   44704:	ldr	r0, [sp, #44]	; 0x2c
   44708:	str	r0, [r1, #32]
   4470c:	str	r9, [r1, #20]
   44710:	str	r8, [r1, #16]
   44714:	str	r5, [r1, #4]
   44718:	str	r4, [r1]
   4471c:	str	sl, [r1, #24]
   44720:	str	r6, [r1, #8]
   44724:	ldr	r2, [sp, #52]	; 0x34
   44728:	str	r2, [r1, #28]
   4472c:	str	r7, [r1, #12]
   44730:	ldr	r0, [sp, #56]	; 0x38
   44734:	mov	r1, r3
   44738:	mov	r2, ip
   4473c:	mov	r3, lr
   44740:	bl	44d0c <flatcc_json_printer_clear@@Base+0x9d8>
   44744:	str	r0, [fp, #-64]	; 0xffffffc0
   44748:	ldr	r0, [fp, #-60]	; 0xffffffc4
   4474c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   44750:	sub	r0, r0, r1
   44754:	ldr	r1, [fp, #-52]	; 0xffffffcc
   44758:	str	r0, [r1]
   4475c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   44760:	sub	sp, fp, #28
   44764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44768:			; <UNDEFINED> instruction: 0xffffffff
   4476c:	svcvc	0x00efffff
   44770:	strdeq	r7, [r0], -r4
   44774:	andeq	r7, r0, r2, asr #28
   44778:	andeq	r7, r0, r9, lsl #30
   4477c:	sub	sp, sp, #36	; 0x24
   44780:	str	r0, [sp, #32]
   44784:	str	r1, [sp, #28]
   44788:	ldr	r0, [sp, #28]
   4478c:	str	r0, [sp, #12]
   44790:	ldr	r0, [sp, #32]
   44794:	cmp	r0, #0
   44798:	bge	447c0 <flatcc_json_printer_clear@@Base+0x48c>
   4479c:	ldr	r0, [sp, #28]
   447a0:	add	r1, r0, #1
   447a4:	str	r1, [sp, #28]
   447a8:	movw	r1, #45	; 0x2d
   447ac:	strb	r1, [r0]
   447b0:	ldr	r0, [sp, #32]
   447b4:	movw	r1, #0
   447b8:	sub	r0, r1, r0
   447bc:	str	r0, [sp, #32]
   447c0:	ldr	r0, [sp, #28]
   447c4:	str	r0, [sp, #16]
   447c8:	ldr	r0, [sp, #32]
   447cc:	movw	r1, #10
   447d0:	sdiv	r0, r0, r1
   447d4:	str	r0, [sp, #8]
   447d8:	ldr	r0, [sp, #32]
   447dc:	ldr	r2, [sp, #8]
   447e0:	mul	r1, r2, r1
   447e4:	sub	r0, r0, r1
   447e8:	str	r0, [sp, #4]
   447ec:	ldr	r0, [sp, #4]
   447f0:	add	r0, r0, #48	; 0x30
   447f4:	ldr	r1, [sp, #16]
   447f8:	add	r2, r1, #1
   447fc:	str	r2, [sp, #16]
   44800:	strb	r0, [r1]
   44804:	ldr	r0, [sp, #8]
   44808:	cmp	r0, #0
   4480c:	bne	44814 <flatcc_json_printer_clear@@Base+0x4e0>
   44810:	b	44820 <flatcc_json_printer_clear@@Base+0x4ec>
   44814:	ldr	r0, [sp, #8]
   44818:	str	r0, [sp, #32]
   4481c:	b	447c8 <flatcc_json_printer_clear@@Base+0x494>
   44820:	ldr	r0, [sp, #16]
   44824:	movw	r1, #0
   44828:	strb	r1, [r0]
   4482c:	ldr	r0, [sp, #16]
   44830:	ldr	r1, [sp, #28]
   44834:	sub	r0, r0, r1
   44838:	str	r0, [sp, #24]
   4483c:	movw	r0, #0
   44840:	str	r0, [sp, #20]
   44844:	ldr	r0, [sp, #20]
   44848:	ldr	r1, [sp, #24]
   4484c:	movw	r2, #2
   44850:	sdiv	r1, r1, r2
   44854:	cmp	r0, r1
   44858:	bge	448cc <flatcc_json_printer_clear@@Base+0x598>
   4485c:	ldr	r0, [sp, #28]
   44860:	ldr	r1, [sp, #20]
   44864:	add	r0, r0, r1
   44868:	ldrb	r0, [r0]
   4486c:	strb	r0, [sp, #3]
   44870:	ldr	r0, [sp, #28]
   44874:	ldr	r1, [sp, #24]
   44878:	sub	r1, r1, #1
   4487c:	ldr	r2, [sp, #20]
   44880:	sub	r1, r1, r2
   44884:	add	r0, r0, r1
   44888:	ldrb	r0, [r0]
   4488c:	ldr	r1, [sp, #28]
   44890:	ldr	r2, [sp, #20]
   44894:	add	r1, r1, r2
   44898:	strb	r0, [r1]
   4489c:	ldrb	r0, [sp, #3]
   448a0:	ldr	r1, [sp, #28]
   448a4:	ldr	r2, [sp, #24]
   448a8:	sub	r2, r2, #1
   448ac:	ldr	r3, [sp, #20]
   448b0:	sub	r2, r2, r3
   448b4:	add	r1, r1, r2
   448b8:	strb	r0, [r1]
   448bc:	ldr	r0, [sp, #20]
   448c0:	add	r0, r0, #1
   448c4:	str	r0, [sp, #20]
   448c8:	b	44844 <flatcc_json_printer_clear@@Base+0x510>
   448cc:	ldr	r0, [sp, #16]
   448d0:	ldr	r1, [sp, #12]
   448d4:	sub	r0, r0, r1
   448d8:	add	sp, sp, #36	; 0x24
   448dc:	bx	lr
   448e0:	push	{fp, lr}
   448e4:	mov	fp, sp
   448e8:	sub	sp, sp, #24
   448ec:	vstr	d0, [fp, #-8]
   448f0:	vldr	d0, [fp, #-8]
   448f4:	str	r0, [sp, #4]
   448f8:	bl	44390 <flatcc_json_printer_clear@@Base+0x5c>
   448fc:	str	r1, [sp, #12]
   44900:	str	r0, [sp, #8]
   44904:	ldrh	r0, [sp, #14]
   44908:	movw	r1, #32752	; 0x7ff0
   4490c:	tst	r0, r1
   44910:	bne	4493c <flatcc_json_printer_clear@@Base+0x608>
   44914:	b	44918 <flatcc_json_printer_clear@@Base+0x5e4>
   44918:	ldr	r0, [pc, #84]	; 44974 <flatcc_json_printer_clear@@Base+0x640>
   4491c:	ldr	r1, [sp, #8]
   44920:	ldr	r2, [sp, #12]
   44924:	bfc	r2, #20, #12
   44928:	ldr	r3, [sp, #4]
   4492c:	str	r1, [r3]
   44930:	str	r2, [r3, #4]
   44934:	str	r0, [r3, #8]
   44938:	b	4496c <flatcc_json_printer_clear@@Base+0x638>
   4493c:	ldr	r0, [sp, #8]
   44940:	ldr	r1, [sp, #12]
   44944:	mov	r2, #1
   44948:	bfi	r1, r2, #20, #12
   4494c:	ldr	r2, [sp, #4]
   44950:	str	r0, [r2]
   44954:	str	r1, [r2, #4]
   44958:	ldr	r0, [sp, #12]
   4495c:	ubfx	r0, r0, #20, #11
   44960:	movw	r1, #1075	; 0x433
   44964:	sub	r0, r0, r1
   44968:	str	r0, [r2, #8]
   4496c:	mov	sp, fp
   44970:	pop	{fp, pc}
   44974:			; <UNDEFINED> instruction: 0xfffffbce
   44978:	push	{fp, lr}
   4497c:	mov	fp, sp
   44980:	sub	sp, sp, #24
   44984:	ldr	r1, [fp, #12]
   44988:	ldr	ip, [fp, #8]
   4498c:	str	r2, [sp, #8]
   44990:	str	r3, [sp, #12]
   44994:	str	ip, [sp, #16]
   44998:	str	r1, [sp, #20]
   4499c:	ldr	r1, [sp, #8]
   449a0:	ldr	r2, [sp, #12]
   449a4:	orr	r1, r1, r2
   449a8:	cmp	r1, #0
   449ac:	str	r0, [sp, #4]
   449b0:	beq	449bc <flatcc_json_printer_clear@@Base+0x688>
   449b4:	b	449b8 <flatcc_json_printer_clear@@Base+0x684>
   449b8:	b	449dc <flatcc_json_printer_clear@@Base+0x6a8>
   449bc:	ldr	r0, [pc, #228]	; 44aa8 <flatcc_json_printer_clear@@Base+0x774>
   449c0:	add	r0, pc, r0
   449c4:	ldr	r1, [pc, #224]	; 44aac <flatcc_json_printer_clear@@Base+0x778>
   449c8:	add	r1, pc, r1
   449cc:	ldr	r2, [pc, #220]	; 44ab0 <flatcc_json_printer_clear@@Base+0x77c>
   449d0:	add	r3, pc, r2
   449d4:	movw	r2, #260	; 0x104
   449d8:	bl	14f08 <__assert_fail@plt>
   449dc:	b	449e0 <flatcc_json_printer_clear@@Base+0x6ac>
   449e0:	ldrh	r0, [sp, #14]
   449e4:	movw	r1, #65472	; 0xffc0
   449e8:	and	r0, r0, r1
   449ec:	cmp	r0, #0
   449f0:	movwne	r0, #1
   449f4:	mvn	r1, #0
   449f8:	eor	r0, r0, r1
   449fc:	tst	r0, #1
   44a00:	beq	44a30 <flatcc_json_printer_clear@@Base+0x6fc>
   44a04:	ldr	r0, [sp, #8]
   44a08:	ldr	r1, [sp, #12]
   44a0c:	lsl	r1, r1, #10
   44a10:	orr	r1, r1, r0, lsr #22
   44a14:	lsl	r0, r0, #10
   44a18:	str	r0, [sp, #8]
   44a1c:	str	r1, [sp, #12]
   44a20:	ldr	r0, [sp, #16]
   44a24:	sub	r0, r0, #10
   44a28:	str	r0, [sp, #16]
   44a2c:	b	449e0 <flatcc_json_printer_clear@@Base+0x6ac>
   44a30:	b	44a34 <flatcc_json_printer_clear@@Base+0x700>
   44a34:	ldrb	r0, [sp, #15]
   44a38:	lsr	r0, r0, #7
   44a3c:	mvn	r1, #0
   44a40:	eor	r0, r0, r1
   44a44:	tst	r0, #1
   44a48:	beq	44a7c <flatcc_json_printer_clear@@Base+0x748>
   44a4c:	ldr	r0, [sp, #8]
   44a50:	ldr	r1, [sp, #12]
   44a54:	lsl	r1, r1, #1
   44a58:	orr	r1, r1, r0, lsr #31
   44a5c:	lsl	r0, r0, #1
   44a60:	str	r0, [sp, #8]
   44a64:	str	r1, [sp, #12]
   44a68:	ldr	r0, [sp, #16]
   44a6c:	mvn	r1, #0
   44a70:	add	r0, r0, r1
   44a74:	str	r0, [sp, #16]
   44a78:	b	44a34 <flatcc_json_printer_clear@@Base+0x700>
   44a7c:	ldr	r0, [sp, #8]
   44a80:	ldr	r1, [sp, #4]
   44a84:	str	r0, [r1]
   44a88:	ldr	r0, [sp, #12]
   44a8c:	str	r0, [r1, #4]
   44a90:	ldr	r0, [sp, #16]
   44a94:	str	r0, [r1, #8]
   44a98:	ldr	r0, [sp, #20]
   44a9c:	str	r0, [r1, #12]
   44aa0:	mov	sp, fp
   44aa4:	pop	{fp, pc}
   44aa8:	andeq	r6, r0, fp, ror #23
   44aac:	andeq	r6, r0, ip, ror #23
   44ab0:	andeq	r6, r0, r1, asr ip
   44ab4:	nop	{0}
   44ab8:	push	{fp, lr}
   44abc:	mov	fp, sp
   44ac0:	sub	sp, sp, #24
   44ac4:	ldr	r2, [pc, #164]	; 44b70 <flatcc_json_printer_clear@@Base+0x83c>
   44ac8:	add	r2, pc, r2
   44acc:	str	r0, [fp, #-4]
   44ad0:	str	r1, [fp, #-8]
   44ad4:	ldr	r0, [fp, #-4]
   44ad8:	add	r0, r0, #63	; 0x3f
   44adc:	vmov	s0, r0
   44ae0:	vcvt.f64.s32	d16, s0
   44ae4:	vldr	d17, [pc, #124]	; 44b68 <flatcc_json_printer_clear@@Base+0x834>
   44ae8:	vmul.f64	d0, d16, d17
   44aec:	str	r2, [sp, #4]
   44af0:	bl	452bc <flatcc_json_printer_clear@@Base+0xf88>
   44af4:	str	r0, [sp, #12]
   44af8:	ldr	r0, [sp, #12]
   44afc:	movw	r1, #347	; 0x15b
   44b00:	add	r0, r0, r1
   44b04:	asr	r1, r0, #31
   44b08:	add	r0, r0, r1, lsr #29
   44b0c:	mov	r1, #1
   44b10:	add	r0, r1, r0, asr #3
   44b14:	str	r0, [sp, #8]
   44b18:	ldr	r0, [sp, #8]
   44b1c:	ldr	r1, [pc, #80]	; 44b74 <flatcc_json_printer_clear@@Base+0x840>
   44b20:	add	r1, pc, r1
   44b24:	mov	r2, r1
   44b28:	ldr	r0, [r2, r0, lsl #4]!
   44b2c:	ldr	r2, [r2, #4]
   44b30:	ldr	lr, [fp, #-8]
   44b34:	str	r2, [lr, #4]
   44b38:	str	r0, [lr]
   44b3c:	ldr	r0, [sp, #8]
   44b40:	add	r0, r1, r0, lsl #4
   44b44:	ldrsh	r0, [r0, #8]
   44b48:	ldr	r2, [fp, #-8]
   44b4c:	str	r0, [r2, #8]
   44b50:	ldr	r0, [sp, #8]
   44b54:	add	r0, r1, r0, lsl #4
   44b58:	ldrsh	r0, [r0, #10]
   44b5c:	mov	sp, fp
   44b60:	pop	{fp, pc}
   44b64:	nop	{0}
   44b68:			; <UNDEFINED> instruction: 0x509f79fe
   44b6c:	svccc	0x00d34413
   44b70:	andeq	r7, r0, r8, asr #21
   44b74:	andeq	r7, r0, r0, ror sl
   44b78:	push	{r4, r5, r6, sl, fp, lr}
   44b7c:	add	fp, sp, #16
   44b80:	sub	sp, sp, #104	; 0x68
   44b84:	ldr	r1, [fp, #28]
   44b88:	ldr	ip, [fp, #24]
   44b8c:	ldr	lr, [fp, #20]
   44b90:	ldr	r4, [fp, #16]
   44b94:	ldr	r5, [fp, #12]
   44b98:	ldr	r6, [fp, #8]
   44b9c:	str	r2, [fp, #-32]	; 0xffffffe0
   44ba0:	str	r3, [fp, #-28]	; 0xffffffe4
   44ba4:	str	r6, [fp, #-24]	; 0xffffffe8
   44ba8:	str	r5, [fp, #-20]	; 0xffffffec
   44bac:	str	r1, [fp, #-36]	; 0xffffffdc
   44bb0:	str	ip, [fp, #-40]	; 0xffffffd8
   44bb4:	str	lr, [fp, #-44]	; 0xffffffd4
   44bb8:	str	r4, [fp, #-48]	; 0xffffffd0
   44bbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   44bc0:	mov	r2, #0
   44bc4:	str	r2, [fp, #-52]	; 0xffffffcc
   44bc8:	str	r1, [fp, #-56]	; 0xffffffc8
   44bcc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   44bd0:	str	r2, [sp, #60]	; 0x3c
   44bd4:	str	r1, [sp, #56]	; 0x38
   44bd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   44bdc:	str	r2, [sp, #52]	; 0x34
   44be0:	str	r1, [sp, #48]	; 0x30
   44be4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   44be8:	str	r2, [sp, #44]	; 0x2c
   44bec:	str	r1, [sp, #40]	; 0x28
   44bf0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   44bf4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   44bf8:	ldr	ip, [sp, #48]	; 0x30
   44bfc:	ldr	lr, [sp, #52]	; 0x34
   44c00:	umull	r4, r5, r1, ip
   44c04:	mla	r1, r1, lr, r5
   44c08:	mla	r1, r3, ip, r1
   44c0c:	str	r4, [sp, #32]
   44c10:	str	r1, [sp, #36]	; 0x24
   44c14:	ldr	r1, [sp, #56]	; 0x38
   44c18:	ldr	r3, [sp, #60]	; 0x3c
   44c1c:	ldr	ip, [sp, #48]	; 0x30
   44c20:	ldr	lr, [sp, #52]	; 0x34
   44c24:	umull	r4, r5, r1, ip
   44c28:	mla	r1, r1, lr, r5
   44c2c:	mla	r1, r3, ip, r1
   44c30:	str	r4, [sp, #24]
   44c34:	str	r1, [sp, #28]
   44c38:	ldr	r1, [fp, #-56]	; 0xffffffc8
   44c3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   44c40:	ldr	ip, [sp, #40]	; 0x28
   44c44:	ldr	lr, [sp, #44]	; 0x2c
   44c48:	umull	r4, r5, r1, ip
   44c4c:	mla	r1, r1, lr, r5
   44c50:	mla	r1, r3, ip, r1
   44c54:	str	r4, [sp, #16]
   44c58:	str	r1, [sp, #20]
   44c5c:	ldr	r1, [sp, #56]	; 0x38
   44c60:	ldr	r3, [sp, #60]	; 0x3c
   44c64:	ldr	ip, [sp, #40]	; 0x28
   44c68:	ldr	lr, [sp, #44]	; 0x2c
   44c6c:	umull	r4, r5, r1, ip
   44c70:	mla	r1, r1, lr, r5
   44c74:	mla	r1, r3, ip, r1
   44c78:	str	r4, [sp, #8]
   44c7c:	str	r1, [sp, #12]
   44c80:	ldr	r1, [sp, #12]
   44c84:	ldr	r3, [sp, #16]
   44c88:	adds	r1, r1, r3
   44c8c:	adc	r2, r2, #0
   44c90:	ldr	r3, [sp, #24]
   44c94:	adds	r1, r1, r3
   44c98:	adc	r2, r2, #0
   44c9c:	str	r1, [sp]
   44ca0:	str	r2, [sp, #4]
   44ca4:	ldr	r1, [sp]
   44ca8:	ldr	r2, [sp, #4]
   44cac:	adds	r1, r1, #-2147483648	; 0x80000000
   44cb0:	adc	r2, r2, #0
   44cb4:	str	r1, [sp]
   44cb8:	str	r2, [sp, #4]
   44cbc:	ldr	r1, [sp, #32]
   44cc0:	ldr	r2, [sp, #36]	; 0x24
   44cc4:	ldr	r3, [sp, #20]
   44cc8:	adds	r1, r1, r3
   44ccc:	adc	r2, r2, #0
   44cd0:	ldr	r3, [sp, #28]
   44cd4:	adds	r1, r1, r3
   44cd8:	adc	r2, r2, #0
   44cdc:	ldr	r3, [sp, #4]
   44ce0:	adds	r1, r1, r3
   44ce4:	adc	r2, r2, #0
   44ce8:	str	r1, [r0]
   44cec:	str	r2, [r0, #4]
   44cf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   44cf4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   44cf8:	add	r1, r1, r2
   44cfc:	add	r1, r1, #64	; 0x40
   44d00:	str	r1, [r0, #8]
   44d04:	sub	sp, fp, #16
   44d08:	pop	{r4, r5, r6, sl, fp, pc}
   44d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44d10:	add	fp, sp, #28
   44d14:	sub	sp, sp, #300	; 0x12c
   44d18:	ldr	ip, [fp, #36]	; 0x24
   44d1c:	ldr	lr, [fp, #32]
   44d20:	ldr	r4, [fp, #28]
   44d24:	ldr	r5, [fp, #24]
   44d28:	ldr	r6, [fp, #20]
   44d2c:	ldr	r7, [fp, #16]
   44d30:	ldr	r8, [fp, #12]
   44d34:	ldr	r9, [fp, #8]
   44d38:	ldr	sl, [fp, #48]	; 0x30
   44d3c:	str	r0, [sp, #84]	; 0x54
   44d40:	ldr	r0, [fp, #44]	; 0x2c
   44d44:	str	r0, [sp, #80]	; 0x50
   44d48:	ldr	r0, [fp, #40]	; 0x28
   44d4c:	str	r0, [sp, #76]	; 0x4c
   44d50:	ldr	r0, [sp, #84]	; 0x54
   44d54:	str	r0, [fp, #-56]	; 0xffffffc8
   44d58:	str	r1, [fp, #-52]	; 0xffffffcc
   44d5c:	str	r2, [fp, #-48]	; 0xffffffd0
   44d60:	str	r3, [fp, #-44]	; 0xffffffd4
   44d64:	str	r6, [fp, #-60]	; 0xffffffc4
   44d68:	str	r7, [fp, #-64]	; 0xffffffc0
   44d6c:	str	r8, [fp, #-68]	; 0xffffffbc
   44d70:	str	r9, [fp, #-72]	; 0xffffffb8
   44d74:	str	ip, [fp, #-76]	; 0xffffffb4
   44d78:	str	lr, [fp, #-80]	; 0xffffffb0
   44d7c:	str	r4, [fp, #-84]	; 0xffffffac
   44d80:	str	r5, [fp, #-88]	; 0xffffffa8
   44d84:	mov	r1, #0
   44d88:	str	r1, [fp, #-92]	; 0xffffffa4
   44d8c:	mov	r1, #1
   44d90:	str	r1, [fp, #-96]	; 0xffffffa0
   44d94:	ldr	r2, [fp, #-56]	; 0xffffffc8
   44d98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   44d9c:	ldr	ip, [fp, #-96]	; 0xffffffa0
   44da0:	ldr	lr, [fp, #-92]	; 0xffffffa4
   44da4:	subs	r2, r2, ip
   44da8:	sbc	r3, r3, lr
   44dac:	str	r2, [fp, #-112]	; 0xffffff90
   44db0:	str	r3, [fp, #-108]	; 0xffffff94
   44db4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   44db8:	str	r2, [fp, #-104]	; 0xffffff98
   44dbc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   44dc0:	ldr	r3, [fp, #-84]	; 0xffffffac
   44dc4:	ldr	ip, [fp, #-96]	; 0xffffffa0
   44dc8:	ldr	lr, [fp, #-92]	; 0xffffffa4
   44dcc:	adds	r2, r2, ip
   44dd0:	adc	r3, r3, lr
   44dd4:	str	r2, [fp, #-128]	; 0xffffff80
   44dd8:	str	r3, [fp, #-124]	; 0xffffff84
   44ddc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   44de0:	str	r2, [fp, #-120]	; 0xffffff88
   44de4:	ldr	r2, [fp, #-128]	; 0xffffff80
   44de8:	ldr	r3, [fp, #-124]	; 0xffffff84
   44dec:	ldr	ip, [fp, #-120]	; 0xffffff88
   44df0:	ldr	lr, [fp, #-116]	; 0xffffff8c
   44df4:	ldr	r4, [fp, #-112]	; 0xffffff90
   44df8:	ldr	r5, [fp, #-108]	; 0xffffff94
   44dfc:	ldr	r6, [fp, #-104]	; 0xffffff98
   44e00:	ldr	r7, [fp, #-100]	; 0xffffff9c
   44e04:	mov	r8, sp
   44e08:	str	r7, [r8, #20]
   44e0c:	str	r6, [r8, #16]
   44e10:	str	r5, [r8, #12]
   44e14:	str	r4, [r8, #8]
   44e18:	str	lr, [r8, #4]
   44e1c:	str	ip, [r8]
   44e20:	sub	r0, fp, #144	; 0x90
   44e24:	str	sl, [sp, #72]	; 0x48
   44e28:	str	r1, [sp, #68]	; 0x44
   44e2c:	bl	4533c <flatcc_json_printer_clear@@Base+0x1008>
   44e30:	ldr	r0, [fp, #-64]	; 0xffffffc0
   44e34:	rsb	r1, r0, #0
   44e38:	mvn	r2, #31
   44e3c:	sub	r3, r2, r0
   44e40:	ldr	ip, [sp, #68]	; 0x44
   44e44:	lsl	r1, ip, r1
   44e48:	cmp	r3, #0
   44e4c:	movwge	r1, #0
   44e50:	add	r0, r0, #32
   44e54:	lsr	r0, ip, r0
   44e58:	cmp	r3, #0
   44e5c:	lslge	r0, ip, r3
   44e60:	str	r0, [fp, #-156]	; 0xffffff64
   44e64:	str	r1, [fp, #-160]	; 0xffffff60
   44e68:	ldr	r0, [fp, #-64]	; 0xffffffc0
   44e6c:	str	r0, [fp, #-152]	; 0xffffff68
   44e70:	ldr	r0, [fp, #-128]	; 0xffffff80
   44e74:	ldr	r1, [fp, #-124]	; 0xffffff84
   44e78:	ldr	r3, [fp, #-152]	; 0xffffff68
   44e7c:	rsb	lr, r3, #0
   44e80:	lsr	r0, r0, lr
   44e84:	add	lr, r3, #32
   44e88:	orr	r0, r0, r1, lsl lr
   44e8c:	sub	r2, r2, r3
   44e90:	cmp	r2, #0
   44e94:	lsrge	r0, r1, r2
   44e98:	str	r0, [sp, #164]	; 0xa4
   44e9c:	ldr	r0, [fp, #-128]	; 0xffffff80
   44ea0:	ldr	r1, [fp, #-124]	; 0xffffff84
   44ea4:	ldr	r2, [fp, #-160]	; 0xffffff60
   44ea8:	ldr	r3, [fp, #-156]	; 0xffffff64
   44eac:	subs	r2, r2, #1
   44eb0:	sbc	r3, r3, #0
   44eb4:	and	r1, r1, r3
   44eb8:	and	r0, r0, r2
   44ebc:	str	r0, [sp, #152]	; 0x98
   44ec0:	str	r1, [sp, #156]	; 0x9c
   44ec4:	ldr	r0, [sp, #164]	; 0xa4
   44ec8:	ldr	r1, [fp, #-152]	; 0xffffff68
   44ecc:	add	r1, r1, #64	; 0x40
   44ed0:	add	r2, sp, #148	; 0x94
   44ed4:	bl	45418 <flatcc_json_printer_clear@@Base+0x10e4>
   44ed8:	ldr	r1, [fp, #48]	; 0x30
   44edc:	str	r0, [r1]
   44ee0:	ldr	r0, [fp, #44]	; 0x2c
   44ee4:	movw	r1, #0
   44ee8:	str	r1, [r0]
   44eec:	ldr	r0, [fp, #48]	; 0x30
   44ef0:	ldr	r0, [r0]
   44ef4:	cmp	r0, #0
   44ef8:	ble	450c0 <flatcc_json_printer_clear@@Base+0xd8c>
   44efc:	ldr	r0, [sp, #164]	; 0xa4
   44f00:	ldr	r1, [sp, #148]	; 0x94
   44f04:	udiv	r0, r0, r1
   44f08:	str	r0, [sp, #132]	; 0x84
   44f0c:	ldr	r0, [sp, #132]	; 0x84
   44f10:	add	r0, r0, #48	; 0x30
   44f14:	ldr	r1, [fp, #40]	; 0x28
   44f18:	ldr	r2, [fp, #44]	; 0x2c
   44f1c:	ldr	r2, [r2]
   44f20:	strb	r0, [r1, r2]
   44f24:	ldr	r0, [fp, #44]	; 0x2c
   44f28:	ldr	r1, [r0]
   44f2c:	add	r1, r1, #1
   44f30:	str	r1, [r0]
   44f34:	ldr	r0, [sp, #148]	; 0x94
   44f38:	ldr	r1, [sp, #164]	; 0xa4
   44f3c:	udiv	r2, r1, r0
   44f40:	mls	r0, r2, r0, r1
   44f44:	str	r0, [sp, #164]	; 0xa4
   44f48:	ldr	r0, [fp, #48]	; 0x30
   44f4c:	ldr	r1, [r0]
   44f50:	sub	r1, r1, #1
   44f54:	str	r1, [r0]
   44f58:	ldr	r0, [sp, #164]	; 0xa4
   44f5c:	ldr	r1, [fp, #-152]	; 0xffffff68
   44f60:	rsb	r2, r1, #0
   44f64:	mvn	r3, #31
   44f68:	sub	r3, r3, r1
   44f6c:	add	r1, r1, #32
   44f70:	lsr	r1, r0, r1
   44f74:	cmp	r3, #0
   44f78:	lslge	r1, r0, r3
   44f7c:	lsl	r0, r0, r2
   44f80:	cmp	r3, #0
   44f84:	movwge	r0, #0
   44f88:	ldr	r2, [sp, #152]	; 0x98
   44f8c:	ldr	r3, [sp, #156]	; 0x9c
   44f90:	adds	r0, r0, r2
   44f94:	adc	r1, r1, r3
   44f98:	str	r0, [sp, #136]	; 0x88
   44f9c:	str	r1, [sp, #140]	; 0x8c
   44fa0:	ldr	r0, [sp, #136]	; 0x88
   44fa4:	ldr	r1, [sp, #140]	; 0x8c
   44fa8:	ldr	r2, [fp, #-144]	; 0xffffff70
   44fac:	ldr	r3, [fp, #-140]	; 0xffffff74
   44fb0:	subs	r0, r0, r2
   44fb4:	sbcs	r1, r1, r3
   44fb8:	str	r0, [sp, #64]	; 0x40
   44fbc:	str	r1, [sp, #60]	; 0x3c
   44fc0:	bcs	450ac <flatcc_json_printer_clear@@Base+0xd78>
   44fc4:	b	44fc8 <flatcc_json_printer_clear@@Base+0xc94>
   44fc8:	ldr	r0, [fp, #40]	; 0x28
   44fcc:	ldr	r1, [fp, #44]	; 0x2c
   44fd0:	ldr	r1, [r1]
   44fd4:	ldr	r2, [fp, #-128]	; 0xffffff80
   44fd8:	ldr	r3, [fp, #-124]	; 0xffffff84
   44fdc:	ldr	ip, [fp, #-120]	; 0xffffff88
   44fe0:	ldr	lr, [fp, #-116]	; 0xffffff8c
   44fe4:	ldr	r4, [fp, #-72]	; 0xffffffb8
   44fe8:	ldr	r5, [fp, #-68]	; 0xffffffbc
   44fec:	ldr	r6, [fp, #-64]	; 0xffffffc0
   44ff0:	ldr	r7, [fp, #-60]	; 0xffffffc4
   44ff4:	mov	r8, sp
   44ff8:	str	r7, [r8, #20]
   44ffc:	str	r6, [r8, #16]
   45000:	str	r5, [r8, #12]
   45004:	str	r4, [r8, #8]
   45008:	str	lr, [r8, #4]
   4500c:	str	ip, [r8]
   45010:	add	ip, sp, #112	; 0x70
   45014:	str	r0, [sp, #56]	; 0x38
   45018:	mov	r0, ip
   4501c:	str	r1, [sp, #52]	; 0x34
   45020:	bl	4533c <flatcc_json_printer_clear@@Base+0x1008>
   45024:	ldr	r2, [sp, #112]	; 0x70
   45028:	ldr	r3, [sp, #116]	; 0x74
   4502c:	ldr	r0, [fp, #-144]	; 0xffffff70
   45030:	ldr	r1, [fp, #-140]	; 0xffffff74
   45034:	ldr	ip, [sp, #136]	; 0x88
   45038:	ldr	lr, [sp, #140]	; 0x8c
   4503c:	ldr	r4, [sp, #148]	; 0x94
   45040:	ldr	r5, [fp, #-152]	; 0xffffff68
   45044:	rsb	r6, r5, #0
   45048:	mvn	r7, #31
   4504c:	sub	r7, r7, r5
   45050:	add	r5, r5, #32
   45054:	lsr	r5, r4, r5
   45058:	cmp	r7, #0
   4505c:	lslge	r5, r4, r7
   45060:	lsl	r4, r4, r6
   45064:	cmp	r7, #0
   45068:	movwge	r4, #0
   4506c:	ldr	r6, [fp, #-96]	; 0xffffffa0
   45070:	ldr	r7, [fp, #-92]	; 0xffffffa4
   45074:	mov	r8, sp
   45078:	str	r7, [r8, #28]
   4507c:	str	r6, [r8, #24]
   45080:	str	r5, [r8, #20]
   45084:	str	r4, [r8, #16]
   45088:	str	lr, [r8, #12]
   4508c:	str	ip, [r8, #8]
   45090:	str	r1, [r8, #4]
   45094:	str	r0, [r8]
   45098:	ldr	r0, [sp, #56]	; 0x38
   4509c:	ldr	r1, [sp, #52]	; 0x34
   450a0:	bl	454c4 <flatcc_json_printer_clear@@Base+0x1190>
   450a4:	str	r0, [fp, #-36]	; 0xffffffdc
   450a8:	b	452b0 <flatcc_json_printer_clear@@Base+0xf7c>
   450ac:	ldr	r0, [sp, #148]	; 0x94
   450b0:	movw	r1, #10
   450b4:	udiv	r0, r0, r1
   450b8:	str	r0, [sp, #148]	; 0x94
   450bc:	b	44eec <flatcc_json_printer_clear@@Base+0xbb8>
   450c0:	b	450c4 <flatcc_json_printer_clear@@Base+0xd90>
   450c4:	ldr	r0, [sp, #152]	; 0x98
   450c8:	ldr	r1, [sp, #156]	; 0x9c
   450cc:	mov	r2, #10
   450d0:	umull	r0, r3, r0, r2
   450d4:	add	r1, r1, r1, lsl #2
   450d8:	add	r1, r3, r1, lsl #1
   450dc:	str	r0, [sp, #152]	; 0x98
   450e0:	str	r1, [sp, #156]	; 0x9c
   450e4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   450e8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   450ec:	umull	r0, r3, r0, r2
   450f0:	add	r1, r1, r1, lsl #2
   450f4:	add	r1, r3, r1, lsl #1
   450f8:	str	r0, [fp, #-96]	; 0xffffffa0
   450fc:	str	r1, [fp, #-92]	; 0xffffffa4
   45100:	ldr	r0, [fp, #-144]	; 0xffffff70
   45104:	ldr	r1, [fp, #-140]	; 0xffffff74
   45108:	umull	r0, r2, r0, r2
   4510c:	add	r1, r1, r1, lsl #2
   45110:	add	r1, r2, r1, lsl #1
   45114:	str	r0, [fp, #-144]	; 0xffffff70
   45118:	str	r1, [fp, #-140]	; 0xffffff74
   4511c:	ldr	r0, [sp, #152]	; 0x98
   45120:	ldr	r1, [sp, #156]	; 0x9c
   45124:	ldr	r2, [fp, #-152]	; 0xffffff68
   45128:	rsb	r3, r2, #0
   4512c:	lsr	r0, r0, r3
   45130:	add	r3, r2, #32
   45134:	orr	r0, r0, r1, lsl r3
   45138:	mvn	r3, #31
   4513c:	sub	r2, r3, r2
   45140:	cmp	r2, #0
   45144:	lsrge	r0, r1, r2
   45148:	str	r0, [sp, #108]	; 0x6c
   4514c:	ldr	r0, [sp, #108]	; 0x6c
   45150:	add	r0, r0, #48	; 0x30
   45154:	ldr	r1, [fp, #40]	; 0x28
   45158:	ldr	r2, [fp, #44]	; 0x2c
   4515c:	ldr	r2, [r2]
   45160:	strb	r0, [r1, r2]
   45164:	ldr	r0, [fp, #44]	; 0x2c
   45168:	ldr	r1, [r0]
   4516c:	add	r1, r1, #1
   45170:	str	r1, [r0]
   45174:	ldr	r0, [fp, #-160]	; 0xffffff60
   45178:	ldr	r1, [fp, #-156]	; 0xffffff64
   4517c:	subs	r0, r0, #1
   45180:	sbc	r1, r1, #0
   45184:	ldr	r2, [sp, #152]	; 0x98
   45188:	ldr	r3, [sp, #156]	; 0x9c
   4518c:	and	r1, r3, r1
   45190:	and	r0, r2, r0
   45194:	str	r0, [sp, #152]	; 0x98
   45198:	str	r1, [sp, #156]	; 0x9c
   4519c:	ldr	r0, [fp, #48]	; 0x30
   451a0:	ldr	r1, [r0]
   451a4:	sub	r1, r1, #1
   451a8:	str	r1, [r0]
   451ac:	ldr	r0, [sp, #152]	; 0x98
   451b0:	ldr	r1, [sp, #156]	; 0x9c
   451b4:	ldr	r2, [fp, #-144]	; 0xffffff70
   451b8:	ldr	r3, [fp, #-140]	; 0xffffff74
   451bc:	subs	r0, r0, r2
   451c0:	sbcs	r1, r1, r3
   451c4:	str	r0, [sp, #48]	; 0x30
   451c8:	str	r1, [sp, #44]	; 0x2c
   451cc:	bcs	452ac <flatcc_json_printer_clear@@Base+0xf78>
   451d0:	b	451d4 <flatcc_json_printer_clear@@Base+0xea0>
   451d4:	ldr	r0, [fp, #40]	; 0x28
   451d8:	ldr	r1, [fp, #44]	; 0x2c
   451dc:	ldr	r1, [r1]
   451e0:	ldr	r2, [fp, #-128]	; 0xffffff80
   451e4:	ldr	r3, [fp, #-124]	; 0xffffff84
   451e8:	ldr	ip, [fp, #-120]	; 0xffffff88
   451ec:	ldr	lr, [fp, #-116]	; 0xffffff8c
   451f0:	ldr	r4, [fp, #-72]	; 0xffffffb8
   451f4:	ldr	r5, [fp, #-68]	; 0xffffffbc
   451f8:	ldr	r6, [fp, #-64]	; 0xffffffc0
   451fc:	ldr	r7, [fp, #-60]	; 0xffffffc4
   45200:	mov	r8, sp
   45204:	str	r7, [r8, #20]
   45208:	str	r6, [r8, #16]
   4520c:	str	r5, [r8, #12]
   45210:	str	r4, [r8, #8]
   45214:	str	lr, [r8, #4]
   45218:	str	ip, [r8]
   4521c:	add	ip, sp, #88	; 0x58
   45220:	str	r0, [sp, #40]	; 0x28
   45224:	mov	r0, ip
   45228:	str	r1, [sp, #36]	; 0x24
   4522c:	bl	4533c <flatcc_json_printer_clear@@Base+0x1008>
   45230:	ldr	r0, [sp, #88]	; 0x58
   45234:	ldr	r1, [sp, #92]	; 0x5c
   45238:	ldr	r2, [fp, #-96]	; 0xffffffa0
   4523c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   45240:	umull	ip, lr, r0, r2
   45244:	mla	r0, r0, r3, lr
   45248:	mla	r0, r1, r2, r0
   4524c:	ldr	r1, [fp, #-144]	; 0xffffff70
   45250:	ldr	lr, [fp, #-140]	; 0xffffff74
   45254:	ldr	r4, [sp, #152]	; 0x98
   45258:	ldr	r5, [sp, #156]	; 0x9c
   4525c:	ldr	r6, [fp, #-160]	; 0xffffff60
   45260:	ldr	r7, [fp, #-156]	; 0xffffff64
   45264:	mov	r8, sp
   45268:	str	r3, [r8, #28]
   4526c:	str	r2, [r8, #24]
   45270:	str	r7, [r8, #20]
   45274:	str	r6, [r8, #16]
   45278:	str	r5, [r8, #12]
   4527c:	str	r4, [r8, #8]
   45280:	str	lr, [r8, #4]
   45284:	str	r1, [r8]
   45288:	ldr	r1, [sp, #40]	; 0x28
   4528c:	str	r0, [sp, #32]
   45290:	mov	r0, r1
   45294:	ldr	r1, [sp, #36]	; 0x24
   45298:	mov	r2, ip
   4529c:	ldr	r3, [sp, #32]
   452a0:	bl	454c4 <flatcc_json_printer_clear@@Base+0x1190>
   452a4:	str	r0, [fp, #-36]	; 0xffffffdc
   452a8:	b	452b0 <flatcc_json_printer_clear@@Base+0xf7c>
   452ac:	b	450c4 <flatcc_json_printer_clear@@Base+0xd90>
   452b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   452b4:	sub	sp, fp, #28
   452b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   452bc:	sub	sp, sp, #24
   452c0:	vstr	d0, [sp, #8]
   452c4:	vldr	d0, [sp, #8]
   452c8:	vcvt.s32.f64	s2, d0
   452cc:	vmov	r0, s2
   452d0:	str	r0, [sp, #4]
   452d4:	vldr	d0, [sp, #8]
   452d8:	vcmpe.f64	d0, #0.0
   452dc:	vmrs	APSR_nzcv, fpscr
   452e0:	bpl	452f0 <flatcc_json_printer_clear@@Base+0xfbc>
   452e4:	ldr	r0, [sp, #4]
   452e8:	str	r0, [sp, #20]
   452ec:	b	45330 <flatcc_json_printer_clear@@Base+0xffc>
   452f0:	vldr	d16, [sp, #8]
   452f4:	ldr	r0, [sp, #4]
   452f8:	vmov	s0, r0
   452fc:	vcvt.f64.s32	d17, s0
   45300:	vsub.f64	d16, d16, d17
   45304:	vcmp.f64	d16, #0.0
   45308:	vmrs	APSR_nzcv, fpscr
   4530c:	bne	4531c <flatcc_json_printer_clear@@Base+0xfe8>
   45310:	ldr	r0, [sp, #4]
   45314:	str	r0, [sp]
   45318:	b	45328 <flatcc_json_printer_clear@@Base+0xff4>
   4531c:	ldr	r0, [sp, #4]
   45320:	add	r0, r0, #1
   45324:	str	r0, [sp]
   45328:	ldr	r0, [sp]
   4532c:	str	r0, [sp, #20]
   45330:	ldr	r0, [sp, #20]
   45334:	add	sp, sp, #24
   45338:	bx	lr
   4533c:	push	{r4, r5, r6, sl, fp, lr}
   45340:	add	fp, sp, #16
   45344:	sub	sp, sp, #40	; 0x28
   45348:	ldr	r1, [fp, #28]
   4534c:	ldr	ip, [fp, #24]
   45350:	ldr	lr, [fp, #20]
   45354:	ldr	r4, [fp, #16]
   45358:	ldr	r5, [fp, #12]
   4535c:	ldr	r6, [fp, #8]
   45360:	str	r2, [sp, #24]
   45364:	str	r3, [sp, #28]
   45368:	str	r6, [sp, #32]
   4536c:	str	r5, [sp, #36]	; 0x24
   45370:	str	r1, [sp, #20]
   45374:	str	ip, [sp, #16]
   45378:	str	lr, [sp, #12]
   4537c:	str	r4, [sp, #8]
   45380:	ldr	r1, [sp, #24]
   45384:	ldr	r2, [sp, #28]
   45388:	ldr	r3, [sp, #8]
   4538c:	ldr	ip, [sp, #12]
   45390:	subs	r1, r1, r3
   45394:	sbc	r2, r2, ip
   45398:	str	r1, [r0]
   4539c:	str	r2, [r0, #4]
   453a0:	ldr	r1, [sp, #32]
   453a4:	str	r1, [r0, #8]
   453a8:	ldr	r0, [sp, #32]
   453ac:	ldr	r1, [sp, #16]
   453b0:	cmp	r0, r1
   453b4:	bne	453e4 <flatcc_json_printer_clear@@Base+0x10b0>
   453b8:	ldr	r0, [sp, #24]
   453bc:	ldr	r1, [sp, #28]
   453c0:	ldr	r2, [sp, #8]
   453c4:	ldr	r3, [sp, #12]
   453c8:	subs	r0, r0, r2
   453cc:	sbcs	r1, r1, r3
   453d0:	str	r0, [sp, #4]
   453d4:	str	r1, [sp]
   453d8:	bcc	453e4 <flatcc_json_printer_clear@@Base+0x10b0>
   453dc:	b	453e0 <flatcc_json_printer_clear@@Base+0x10ac>
   453e0:	b	45404 <flatcc_json_printer_clear@@Base+0x10d0>
   453e4:	ldr	r0, [pc, #32]	; 4540c <flatcc_json_printer_clear@@Base+0x10d8>
   453e8:	add	r0, pc, r0
   453ec:	ldr	r1, [pc, #28]	; 45410 <flatcc_json_printer_clear@@Base+0x10dc>
   453f0:	add	r1, pc, r1
   453f4:	ldr	r2, [pc, #24]	; 45414 <flatcc_json_printer_clear@@Base+0x10e0>
   453f8:	add	r3, pc, r2
   453fc:	movw	r2, #239	; 0xef
   45400:	bl	14f08 <__assert_fail@plt>
   45404:	sub	sp, fp, #16
   45408:	pop	{r4, r5, r6, sl, fp, pc}
   4540c:	andeq	r6, r0, r2, ror #31
   45410:	andeq	r6, r0, r4, asr #3
   45414:	andeq	r6, r0, fp, ror #31
   45418:	sub	sp, sp, #24
   4541c:	ldr	r3, [pc, #144]	; 454b4 <flatcc_json_printer_clear@@Base+0x1180>
   45420:	add	r3, pc, r3
   45424:	str	r0, [sp, #20]
   45428:	str	r1, [sp, #16]
   4542c:	str	r2, [sp, #12]
   45430:	ldr	r0, [sp, #16]
   45434:	movw	r1, #1233	; 0x4d1
   45438:	mla	r0, r0, r1, r1
   4543c:	mov	r1, #1
   45440:	add	r0, r1, r0, asr #12
   45444:	str	r0, [sp, #8]
   45448:	ldr	r0, [sp, #20]
   4544c:	ldr	r1, [sp, #8]
   45450:	ldr	r2, [pc, #100]	; 454bc <flatcc_json_printer_clear@@Base+0x1188>
   45454:	add	r2, pc, r2
   45458:	add	r1, r2, r1, lsl #2
   4545c:	ldr	r1, [r1]
   45460:	cmp	r0, r1
   45464:	str	r3, [sp, #4]
   45468:	bcs	4547c <flatcc_json_printer_clear@@Base+0x1148>
   4546c:	ldr	r0, [sp, #8]
   45470:	mvn	r1, #0
   45474:	add	r0, r0, r1
   45478:	str	r0, [sp, #8]
   4547c:	ldr	r0, [pc, #52]	; 454b8 <flatcc_json_printer_clear@@Base+0x1184>
   45480:	add	r0, pc, r0
   45484:	ldr	r1, [sp, #8]
   45488:	ldr	r2, [pc, #48]	; 454c0 <flatcc_json_printer_clear@@Base+0x118c>
   4548c:	add	r2, pc, r2
   45490:	add	r1, r2, r1, lsl #2
   45494:	ldr	r1, [r1]
   45498:	ldr	r2, [sp, #12]
   4549c:	str	r1, [r2]
   454a0:	ldr	r1, [sp, #8]
   454a4:	str	r0, [sp]
   454a8:	mov	r0, r1
   454ac:	add	sp, sp, #24
   454b0:	bx	lr
   454b4:	andeq	r7, r0, r0, ror #13
   454b8:	andeq	r7, r0, r0, lsl #13
   454bc:	andeq	r7, r0, ip, lsr #13
   454c0:	andeq	r7, r0, r4, ror r6
   454c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   454c8:	add	fp, sp, #24
   454cc:	sub	sp, sp, #168	; 0xa8
   454d0:	ldr	ip, [fp, #36]	; 0x24
   454d4:	ldr	lr, [fp, #32]
   454d8:	ldr	r4, [fp, #28]
   454dc:	ldr	r5, [fp, #24]
   454e0:	ldr	r6, [fp, #20]
   454e4:	ldr	r7, [fp, #16]
   454e8:	ldr	r8, [fp, #12]
   454ec:	ldr	r9, [fp, #8]
   454f0:	str	r0, [fp, #-32]	; 0xffffffe0
   454f4:	str	r1, [fp, #-36]	; 0xffffffdc
   454f8:	str	r3, [fp, #-44]	; 0xffffffd4
   454fc:	str	r2, [fp, #-48]	; 0xffffffd0
   45500:	str	r8, [fp, #-52]	; 0xffffffcc
   45504:	str	r9, [fp, #-56]	; 0xffffffc8
   45508:	str	r6, [fp, #-60]	; 0xffffffc4
   4550c:	str	r7, [fp, #-64]	; 0xffffffc0
   45510:	str	r4, [fp, #-68]	; 0xffffffbc
   45514:	str	r5, [fp, #-72]	; 0xffffffb8
   45518:	str	ip, [fp, #-76]	; 0xffffffb4
   4551c:	str	lr, [fp, #-80]	; 0xffffffb0
   45520:	ldr	r0, [fp, #-48]	; 0xffffffd0
   45524:	ldr	r1, [fp, #-44]	; 0xffffffd4
   45528:	ldr	r2, [fp, #-80]	; 0xffffffb0
   4552c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   45530:	subs	r0, r0, r2
   45534:	sbc	r1, r1, r3
   45538:	str	r0, [fp, #-88]	; 0xffffffa8
   4553c:	str	r1, [fp, #-84]	; 0xffffffac
   45540:	ldr	r0, [fp, #-48]	; 0xffffffd0
   45544:	ldr	r1, [fp, #-44]	; 0xffffffd4
   45548:	ldr	r2, [fp, #-80]	; 0xffffffb0
   4554c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   45550:	adds	r0, r0, r2
   45554:	adc	r1, r1, r3
   45558:	str	r0, [sp, #96]	; 0x60
   4555c:	str	r1, [sp, #100]	; 0x64
   45560:	ldr	r0, [fp, #-64]	; 0xffffffc0
   45564:	ldr	r1, [fp, #-60]	; 0xffffffc4
   45568:	ldr	r2, [fp, #-88]	; 0xffffffa8
   4556c:	ldr	r3, [fp, #-84]	; 0xffffffac
   45570:	mov	ip, #0
   45574:	subs	r0, r0, r2
   45578:	sbcs	r1, r1, r3
   4557c:	str	r1, [sp, #92]	; 0x5c
   45580:	str	r0, [sp, #88]	; 0x58
   45584:	str	ip, [sp, #84]	; 0x54
   45588:	bcs	45664 <flatcc_json_printer_clear@@Base+0x1330>
   4558c:	b	45590 <flatcc_json_printer_clear@@Base+0x125c>
   45590:	ldr	r0, [fp, #-56]	; 0xffffffc8
   45594:	ldr	r1, [fp, #-52]	; 0xffffffcc
   45598:	ldr	r2, [fp, #-64]	; 0xffffffc0
   4559c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   455a0:	subs	r0, r0, r2
   455a4:	sbc	r1, r1, r3
   455a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   455ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   455b0:	mov	ip, #0
   455b4:	subs	r0, r0, r2
   455b8:	sbcs	r1, r1, r3
   455bc:	str	r1, [sp, #80]	; 0x50
   455c0:	str	r0, [sp, #76]	; 0x4c
   455c4:	str	ip, [sp, #84]	; 0x54
   455c8:	bcc	45664 <flatcc_json_printer_clear@@Base+0x1330>
   455cc:	b	455d0 <flatcc_json_printer_clear@@Base+0x129c>
   455d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   455d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   455d8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   455dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   455e0:	adds	r0, r0, r2
   455e4:	adc	r1, r1, r3
   455e8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   455ec:	ldr	r3, [fp, #-84]	; 0xffffffac
   455f0:	mov	ip, #1
   455f4:	subs	r0, r0, r2
   455f8:	sbcs	r1, r1, r3
   455fc:	str	r1, [sp, #72]	; 0x48
   45600:	str	r0, [sp, #68]	; 0x44
   45604:	str	ip, [sp, #64]	; 0x40
   45608:	bcc	4565c <flatcc_json_printer_clear@@Base+0x1328>
   4560c:	b	45610 <flatcc_json_printer_clear@@Base+0x12dc>
   45610:	ldr	r0, [fp, #-88]	; 0xffffffa8
   45614:	ldr	r1, [fp, #-84]	; 0xffffffac
   45618:	ldr	r2, [fp, #-64]	; 0xffffffc0
   4561c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   45620:	subs	ip, r0, r2
   45624:	sbc	lr, r1, r3
   45628:	ldr	r4, [fp, #-72]	; 0xffffffb8
   4562c:	ldr	r5, [fp, #-68]	; 0xffffffbc
   45630:	adds	r2, r2, r4
   45634:	adc	r3, r3, r5
   45638:	subs	r0, r2, r0
   4563c:	sbc	r1, r3, r1
   45640:	subs	r0, ip, r0
   45644:	sbcs	r1, lr, r1
   45648:	mov	r2, #0
   4564c:	movwcs	r2, #1
   45650:	str	r0, [sp, #60]	; 0x3c
   45654:	str	r1, [sp, #56]	; 0x38
   45658:	str	r2, [sp, #64]	; 0x40
   4565c:	ldr	r0, [sp, #64]	; 0x40
   45660:	str	r0, [sp, #84]	; 0x54
   45664:	ldr	r0, [sp, #84]	; 0x54
   45668:	tst	r0, #1
   4566c:	beq	456ac <flatcc_json_printer_clear@@Base+0x1378>
   45670:	ldr	r0, [fp, #-32]	; 0xffffffe0
   45674:	ldr	r1, [fp, #-36]	; 0xffffffdc
   45678:	add	r0, r0, r1
   4567c:	ldrb	r1, [r0, #-1]
   45680:	sub	r1, r1, #1
   45684:	strb	r1, [r0, #-1]
   45688:	ldr	r0, [fp, #-72]	; 0xffffffb8
   4568c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   45690:	ldr	r2, [fp, #-64]	; 0xffffffc0
   45694:	ldr	r3, [fp, #-60]	; 0xffffffc4
   45698:	adds	r0, r2, r0
   4569c:	adc	r1, r3, r1
   456a0:	str	r0, [fp, #-64]	; 0xffffffc0
   456a4:	str	r1, [fp, #-60]	; 0xffffffc4
   456a8:	b	45560 <flatcc_json_printer_clear@@Base+0x122c>
   456ac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   456b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   456b4:	ldr	r2, [sp, #96]	; 0x60
   456b8:	ldr	r3, [sp, #100]	; 0x64
   456bc:	subs	r0, r0, r2
   456c0:	sbcs	r1, r1, r3
   456c4:	str	r0, [sp, #52]	; 0x34
   456c8:	str	r1, [sp, #48]	; 0x30
   456cc:	bcs	45798 <flatcc_json_printer_clear@@Base+0x1464>
   456d0:	b	456d4 <flatcc_json_printer_clear@@Base+0x13a0>
   456d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   456d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   456dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   456e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   456e4:	subs	r0, r0, r2
   456e8:	sbc	r1, r1, r3
   456ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   456f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   456f4:	subs	r0, r0, r2
   456f8:	sbcs	r1, r1, r3
   456fc:	str	r0, [sp, #44]	; 0x2c
   45700:	str	r1, [sp, #40]	; 0x28
   45704:	bcc	45798 <flatcc_json_printer_clear@@Base+0x1464>
   45708:	b	4570c <flatcc_json_printer_clear@@Base+0x13d8>
   4570c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   45710:	ldr	r1, [fp, #-60]	; 0xffffffc4
   45714:	ldr	r2, [fp, #-72]	; 0xffffffb8
   45718:	ldr	r3, [fp, #-68]	; 0xffffffbc
   4571c:	adds	r0, r0, r2
   45720:	adc	r1, r1, r3
   45724:	ldr	r2, [sp, #96]	; 0x60
   45728:	ldr	r3, [sp, #100]	; 0x64
   4572c:	subs	r0, r0, r2
   45730:	sbcs	r1, r1, r3
   45734:	str	r0, [sp, #36]	; 0x24
   45738:	str	r1, [sp, #32]
   4573c:	bcc	4578c <flatcc_json_printer_clear@@Base+0x1458>
   45740:	b	45744 <flatcc_json_printer_clear@@Base+0x1410>
   45744:	ldr	r0, [sp, #96]	; 0x60
   45748:	ldr	r1, [sp, #100]	; 0x64
   4574c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   45750:	ldr	r3, [fp, #-60]	; 0xffffffc4
   45754:	subs	ip, r0, r2
   45758:	sbc	lr, r1, r3
   4575c:	ldr	r4, [fp, #-72]	; 0xffffffb8
   45760:	ldr	r5, [fp, #-68]	; 0xffffffbc
   45764:	adds	r2, r2, r4
   45768:	adc	r3, r3, r5
   4576c:	subs	r0, r2, r0
   45770:	sbc	r1, r3, r1
   45774:	subs	r0, r0, ip
   45778:	sbcs	r1, r1, lr
   4577c:	str	r0, [sp, #28]
   45780:	str	r1, [sp, #24]
   45784:	bcs	45798 <flatcc_json_printer_clear@@Base+0x1464>
   45788:	b	4578c <flatcc_json_printer_clear@@Base+0x1458>
   4578c:	movw	r0, #0
   45790:	str	r0, [fp, #-28]	; 0xffffffe4
   45794:	b	45820 <flatcc_json_printer_clear@@Base+0x14ec>
   45798:	ldr	r0, [fp, #-80]	; 0xffffffb0
   4579c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   457a0:	lsl	r1, r1, #1
   457a4:	orr	r1, r1, r0, lsr #31
   457a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   457ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   457b0:	mov	ip, #0
   457b4:	subs	r0, r2, r0, lsl #1
   457b8:	sbcs	r1, r3, r1
   457bc:	str	r0, [sp, #20]
   457c0:	str	r1, [sp, #16]
   457c4:	str	ip, [sp, #12]
   457c8:	bcc	45814 <flatcc_json_printer_clear@@Base+0x14e0>
   457cc:	b	457d0 <flatcc_json_printer_clear@@Base+0x149c>
   457d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   457d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   457d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   457dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   457e0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   457e4:	ldr	lr, [fp, #-76]	; 0xffffffb4
   457e8:	lsl	lr, lr, #2
   457ec:	orr	lr, lr, ip, lsr #30
   457f0:	subs	r2, r2, ip, lsl #2
   457f4:	sbc	r3, r3, lr
   457f8:	subs	r0, r2, r0
   457fc:	sbcs	r1, r3, r1
   45800:	mov	r2, #0
   45804:	movwcs	r2, #1
   45808:	str	r0, [sp, #8]
   4580c:	str	r1, [sp, #4]
   45810:	str	r2, [sp, #12]
   45814:	ldr	r0, [sp, #12]
   45818:	and	r0, r0, #1
   4581c:	str	r0, [fp, #-28]	; 0xffffffe4
   45820:	ldr	r0, [fp, #-28]	; 0xffffffe4
   45824:	sub	sp, fp, #24
   45828:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   4582c:	push	{fp, lr}
   45830:	mov	fp, sp
   45834:	sub	sp, sp, #24
   45838:	str	r0, [fp, #-4]
   4583c:	str	r1, [fp, #-8]
   45840:	str	r2, [sp, #12]
   45844:	ldr	r0, [fp, #-4]
   45848:	ldr	r0, [r0, #20]
   4584c:	ldr	r1, [fp, #-4]
   45850:	ldr	r1, [r1, #16]
   45854:	cmp	r0, r1
   45858:	bcc	4587c <flatcc_json_printer_clear@@Base+0x1548>
   4585c:	ldr	r0, [fp, #-4]
   45860:	ldr	r0, [r0, #44]	; 0x2c
   45864:	ldr	r1, [fp, #-4]
   45868:	str	r0, [sp, #4]
   4586c:	mov	r0, r1
   45870:	movw	r1, #0
   45874:	ldr	r2, [sp, #4]
   45878:	blx	r2
   4587c:	ldr	r0, [fp, #-4]
   45880:	ldr	r0, [r0, #16]
   45884:	ldr	r1, [fp, #-4]
   45888:	ldr	r1, [r1, #20]
   4588c:	sub	r0, r0, r1
   45890:	str	r0, [sp, #8]
   45894:	ldr	r0, [sp, #12]
   45898:	ldr	r1, [sp, #8]
   4589c:	cmp	r0, r1
   458a0:	bls	45928 <flatcc_json_printer_clear@@Base+0x15f4>
   458a4:	ldr	r0, [fp, #-4]
   458a8:	ldr	r0, [r0, #20]
   458ac:	ldr	r1, [fp, #-8]
   458b0:	ldr	r2, [sp, #8]
   458b4:	bl	14e30 <memcpy@plt>
   458b8:	ldr	r0, [sp, #8]
   458bc:	ldr	r1, [fp, #-4]
   458c0:	ldr	r2, [r1, #20]
   458c4:	add	r0, r2, r0
   458c8:	str	r0, [r1, #20]
   458cc:	ldr	r0, [sp, #8]
   458d0:	ldr	r1, [fp, #-8]
   458d4:	add	r0, r1, r0
   458d8:	str	r0, [fp, #-8]
   458dc:	ldr	r0, [sp, #8]
   458e0:	ldr	r1, [sp, #12]
   458e4:	sub	r0, r1, r0
   458e8:	str	r0, [sp, #12]
   458ec:	ldr	r0, [fp, #-4]
   458f0:	ldr	r0, [r0, #44]	; 0x2c
   458f4:	ldr	r1, [fp, #-4]
   458f8:	str	r0, [sp]
   458fc:	mov	r0, r1
   45900:	movw	r1, #0
   45904:	ldr	r2, [sp]
   45908:	blx	r2
   4590c:	ldr	r0, [fp, #-4]
   45910:	ldr	r0, [r0, #16]
   45914:	ldr	r1, [fp, #-4]
   45918:	ldr	r1, [r1, #20]
   4591c:	sub	r0, r0, r1
   45920:	str	r0, [sp, #8]
   45924:	b	45894 <flatcc_json_printer_clear@@Base+0x1560>
   45928:	ldr	r0, [fp, #-4]
   4592c:	ldr	r0, [r0, #20]
   45930:	ldr	r1, [fp, #-8]
   45934:	ldr	r2, [sp, #12]
   45938:	bl	14e30 <memcpy@plt>
   4593c:	ldr	r0, [sp, #12]
   45940:	ldr	r1, [fp, #-4]
   45944:	ldr	r2, [r1, #20]
   45948:	add	r0, r2, r0
   4594c:	str	r0, [r1, #20]
   45950:	mov	sp, fp
   45954:	pop	{fp, pc}
   45958:	push	{fp, lr}
   4595c:	mov	fp, sp
   45960:	sub	sp, sp, #24
   45964:	str	r0, [fp, #-4]
   45968:	str	r1, [fp, #-8]
   4596c:	ldr	r0, [fp, #-4]
   45970:	ldr	r0, [r0, #20]
   45974:	ldr	r1, [fp, #-4]
   45978:	ldr	r1, [r1, #16]
   4597c:	cmp	r0, r1
   45980:	bcc	459a4 <flatcc_json_printer_clear@@Base+0x1670>
   45984:	ldr	r0, [fp, #-4]
   45988:	ldr	r0, [r0, #44]	; 0x2c
   4598c:	ldr	r1, [fp, #-4]
   45990:	str	r0, [sp, #8]
   45994:	mov	r0, r1
   45998:	movw	r1, #0
   4599c:	ldr	r2, [sp, #8]
   459a0:	blx	r2
   459a4:	ldr	r0, [fp, #-4]
   459a8:	ldr	r0, [r0, #16]
   459ac:	ldr	r1, [fp, #-4]
   459b0:	ldr	r1, [r1, #20]
   459b4:	sub	r0, r0, r1
   459b8:	str	r0, [sp, #12]
   459bc:	ldr	r0, [fp, #-8]
   459c0:	ldr	r1, [sp, #12]
   459c4:	cmp	r0, r1
   459c8:	bls	45a44 <flatcc_json_printer_clear@@Base+0x1710>
   459cc:	ldr	r0, [fp, #-4]
   459d0:	ldr	r0, [r0, #20]
   459d4:	ldr	r2, [sp, #12]
   459d8:	movw	r1, #32
   459dc:	and	r1, r1, #255	; 0xff
   459e0:	bl	14ec0 <memset@plt>
   459e4:	ldr	r0, [sp, #12]
   459e8:	ldr	r1, [fp, #-4]
   459ec:	ldr	r2, [r1, #20]
   459f0:	add	r0, r2, r0
   459f4:	str	r0, [r1, #20]
   459f8:	ldr	r0, [sp, #12]
   459fc:	ldr	r1, [fp, #-8]
   45a00:	sub	r0, r1, r0
   45a04:	str	r0, [fp, #-8]
   45a08:	ldr	r0, [fp, #-4]
   45a0c:	ldr	r0, [r0, #44]	; 0x2c
   45a10:	ldr	r1, [fp, #-4]
   45a14:	str	r0, [sp, #4]
   45a18:	mov	r0, r1
   45a1c:	movw	r1, #0
   45a20:	ldr	r2, [sp, #4]
   45a24:	blx	r2
   45a28:	ldr	r0, [fp, #-4]
   45a2c:	ldr	r0, [r0, #16]
   45a30:	ldr	r1, [fp, #-4]
   45a34:	ldr	r1, [r1, #20]
   45a38:	sub	r0, r0, r1
   45a3c:	str	r0, [sp, #12]
   45a40:	b	459bc <flatcc_json_printer_clear@@Base+0x1688>
   45a44:	ldr	r0, [fp, #-4]
   45a48:	ldr	r0, [r0, #20]
   45a4c:	ldr	r2, [fp, #-8]
   45a50:	movw	r1, #32
   45a54:	and	r1, r1, #255	; 0xff
   45a58:	bl	14ec0 <memset@plt>
   45a5c:	ldr	r0, [fp, #-8]
   45a60:	ldr	r1, [fp, #-4]
   45a64:	ldr	r2, [r1, #20]
   45a68:	add	r0, r2, r0
   45a6c:	str	r0, [r1, #20]
   45a70:	mov	sp, fp
   45a74:	pop	{fp, pc}
   45a78:	push	{fp, lr}
   45a7c:	mov	fp, sp
   45a80:	sub	sp, sp, #8
   45a84:	str	r0, [sp, #4]
   45a88:	str	r1, [sp]
   45a8c:	ldr	r0, [sp, #4]
   45a90:	ldr	r1, [sp]
   45a94:	add	r0, r0, r1
   45a98:	bl	45aa8 <flatcc_json_printer_clear@@Base+0x1774>
   45a9c:	uxth	r0, r0
   45aa0:	mov	sp, fp
   45aa4:	pop	{fp, pc}
   45aa8:	push	{fp, lr}
   45aac:	mov	fp, sp
   45ab0:	sub	sp, sp, #8
   45ab4:	str	r0, [sp, #4]
   45ab8:	ldr	r0, [sp, #4]
   45abc:	ldrh	r0, [r0]
   45ac0:	bl	45ad0 <flatcc_json_printer_clear@@Base+0x179c>
   45ac4:	uxth	r0, r0
   45ac8:	mov	sp, fp
   45acc:	pop	{fp, pc}
   45ad0:	sub	sp, sp, #4
   45ad4:	strh	r0, [sp, #2]
   45ad8:	ldrh	r0, [sp, #2]
   45adc:	add	sp, sp, #4
   45ae0:	bx	lr
   45ae4:	sub	sp, sp, #28
   45ae8:	str	r0, [sp, #24]
   45aec:	str	r1, [sp, #20]
   45af0:	ldr	r0, [sp, #24]
   45af4:	movw	r1, #43691	; 0xaaab
   45af8:	movt	r1, #43690	; 0xaaaa
   45afc:	umull	r1, r2, r0, r1
   45b00:	lsr	r2, r2, #1
   45b04:	add	r2, r2, r2, lsl #1
   45b08:	sub	r0, r0, r2
   45b0c:	str	r0, [sp, #16]
   45b10:	ldr	r0, [sp, #24]
   45b14:	lsl	r0, r0, #2
   45b18:	movw	r2, #3
   45b1c:	udiv	r0, r0, r2
   45b20:	add	r0, r0, #3
   45b24:	mvn	r2, #3
   45b28:	and	r0, r0, r2
   45b2c:	str	r0, [sp, #12]
   45b30:	ldr	r0, [sp, #20]
   45b34:	and	r0, r0, #128	; 0x80
   45b38:	str	r0, [sp, #8]
   45b3c:	ldr	r0, [sp, #8]
   45b40:	cmp	r0, #0
   45b44:	str	r1, [sp, #4]
   45b48:	bne	45b98 <flatcc_json_printer_clear@@Base+0x1864>
   45b4c:	ldr	r0, [sp, #16]
   45b50:	cmp	r0, #1
   45b54:	str	r0, [sp]
   45b58:	beq	45b80 <flatcc_json_printer_clear@@Base+0x184c>
   45b5c:	b	45b60 <flatcc_json_printer_clear@@Base+0x182c>
   45b60:	ldr	r0, [sp]
   45b64:	cmp	r0, #2
   45b68:	bne	45b90 <flatcc_json_printer_clear@@Base+0x185c>
   45b6c:	b	45b70 <flatcc_json_printer_clear@@Base+0x183c>
   45b70:	ldr	r0, [sp, #12]
   45b74:	sub	r0, r0, #1
   45b78:	str	r0, [sp, #12]
   45b7c:	b	45b94 <flatcc_json_printer_clear@@Base+0x1860>
   45b80:	ldr	r0, [sp, #12]
   45b84:	sub	r0, r0, #2
   45b88:	str	r0, [sp, #12]
   45b8c:	b	45b94 <flatcc_json_printer_clear@@Base+0x1860>
   45b90:	b	45b94 <flatcc_json_printer_clear@@Base+0x1860>
   45b94:	b	45b98 <flatcc_json_printer_clear@@Base+0x1864>
   45b98:	ldr	r0, [sp, #12]
   45b9c:	add	sp, sp, #28
   45ba0:	bx	lr
   45ba4:	push	{r4, sl, fp, lr}
   45ba8:	add	fp, sp, #8
   45bac:	sub	sp, sp, #56	; 0x38
   45bb0:	ldr	ip, [fp, #8]
   45bb4:	ldr	lr, [pc, #848]	; 45f0c <flatcc_json_printer_clear@@Base+0x1bd8>
   45bb8:	add	lr, pc, lr
   45bbc:	ldr	r4, [pc, #844]	; 45f10 <flatcc_json_printer_clear@@Base+0x1bdc>
   45bc0:	add	r4, pc, r4
   45bc4:	str	r0, [fp, #-12]
   45bc8:	str	r1, [fp, #-16]
   45bcc:	str	r2, [fp, #-20]	; 0xffffffec
   45bd0:	str	r3, [fp, #-24]	; 0xffffffe8
   45bd4:	str	r4, [fp, #-28]	; 0xffffffe4
   45bd8:	str	lr, [sp, #32]
   45bdc:	ldr	r0, [fp, #-12]
   45be0:	str	r0, [sp, #24]
   45be4:	ldr	r0, [fp, #8]
   45be8:	and	r0, r0, #128	; 0x80
   45bec:	str	r0, [sp, #20]
   45bf0:	movw	r0, #0
   45bf4:	str	r0, [sp, #16]
   45bf8:	movw	r1, #3
   45bfc:	str	r1, [sp, #12]
   45c00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45c04:	cmp	r1, r0
   45c08:	str	ip, [sp, #8]
   45c0c:	bne	45c1c <flatcc_json_printer_clear@@Base+0x18e8>
   45c10:	movw	r0, #2
   45c14:	str	r0, [sp, #12]
   45c18:	b	45eb8 <flatcc_json_printer_clear@@Base+0x1b84>
   45c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   45c20:	ldr	r0, [r0]
   45c24:	str	r0, [sp, #16]
   45c28:	ldr	r0, [fp, #8]
   45c2c:	bic	r0, r0, #224	; 0xe0
   45c30:	str	r0, [fp, #8]
   45c34:	ldr	r0, [fp, #8]
   45c38:	cmp	r0, #0
   45c3c:	str	r0, [sp, #4]
   45c40:	beq	45c58 <flatcc_json_printer_clear@@Base+0x1924>
   45c44:	b	45c48 <flatcc_json_printer_clear@@Base+0x1914>
   45c48:	ldr	r0, [sp, #4]
   45c4c:	cmp	r0, #1
   45c50:	beq	45c64 <flatcc_json_printer_clear@@Base+0x1930>
   45c54:	b	45c70 <flatcc_json_printer_clear@@Base+0x193c>
   45c58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   45c5c:	str	r0, [sp, #28]
   45c60:	b	45c74 <flatcc_json_printer_clear@@Base+0x1940>
   45c64:	ldr	r0, [sp, #32]
   45c68:	str	r0, [sp, #28]
   45c6c:	b	45c74 <flatcc_json_printer_clear@@Base+0x1940>
   45c70:	b	45eb8 <flatcc_json_printer_clear@@Base+0x1b84>
   45c74:	movw	r0, #0
   45c78:	str	r0, [sp, #12]
   45c7c:	ldr	r0, [sp, #16]
   45c80:	cmp	r0, #3
   45c84:	bcc	45d58 <flatcc_json_printer_clear@@Base+0x1a24>
   45c88:	ldr	r0, [sp, #28]
   45c8c:	ldr	r1, [fp, #-16]
   45c90:	ldrb	r1, [r1]
   45c94:	asr	r1, r1, #2
   45c98:	add	r0, r0, r1
   45c9c:	ldrb	r0, [r0]
   45ca0:	ldr	r1, [fp, #-12]
   45ca4:	strb	r0, [r1]
   45ca8:	ldr	r0, [sp, #28]
   45cac:	ldr	r1, [fp, #-16]
   45cb0:	ldrb	r1, [r1]
   45cb4:	lsl	r1, r1, #4
   45cb8:	and	r1, r1, #48	; 0x30
   45cbc:	ldr	r2, [fp, #-16]
   45cc0:	ldrb	r2, [r2, #1]
   45cc4:	asr	r2, r2, #4
   45cc8:	orr	r1, r1, r2
   45ccc:	add	r0, r0, r1
   45cd0:	ldrb	r0, [r0]
   45cd4:	ldr	r1, [fp, #-12]
   45cd8:	strb	r0, [r1, #1]
   45cdc:	ldr	r0, [sp, #28]
   45ce0:	ldr	r1, [fp, #-16]
   45ce4:	ldrb	r1, [r1, #1]
   45ce8:	lsl	r1, r1, #2
   45cec:	and	r1, r1, #60	; 0x3c
   45cf0:	ldr	r2, [fp, #-16]
   45cf4:	ldrb	r2, [r2, #2]
   45cf8:	asr	r2, r2, #6
   45cfc:	orr	r1, r1, r2
   45d00:	add	r0, r0, r1
   45d04:	ldrb	r0, [r0]
   45d08:	ldr	r1, [fp, #-12]
   45d0c:	strb	r0, [r1, #2]
   45d10:	ldr	r0, [sp, #28]
   45d14:	ldr	r1, [fp, #-16]
   45d18:	ldrb	r1, [r1, #2]
   45d1c:	and	r1, r1, #63	; 0x3f
   45d20:	add	r0, r0, r1
   45d24:	ldrb	r0, [r0]
   45d28:	ldr	r1, [fp, #-12]
   45d2c:	strb	r0, [r1, #3]
   45d30:	ldr	r0, [sp, #16]
   45d34:	sub	r0, r0, #3
   45d38:	str	r0, [sp, #16]
   45d3c:	ldr	r0, [fp, #-12]
   45d40:	add	r0, r0, #4
   45d44:	str	r0, [fp, #-12]
   45d48:	ldr	r0, [fp, #-16]
   45d4c:	add	r0, r0, #3
   45d50:	str	r0, [fp, #-16]
   45d54:	b	45c7c <flatcc_json_printer_clear@@Base+0x1948>
   45d58:	ldr	r0, [sp, #16]
   45d5c:	cmp	r0, #1
   45d60:	str	r0, [sp]
   45d64:	beq	45e24 <flatcc_json_printer_clear@@Base+0x1af0>
   45d68:	b	45d6c <flatcc_json_printer_clear@@Base+0x1a38>
   45d6c:	ldr	r0, [sp]
   45d70:	cmp	r0, #2
   45d74:	bne	45ea8 <flatcc_json_printer_clear@@Base+0x1b74>
   45d78:	b	45d7c <flatcc_json_printer_clear@@Base+0x1a48>
   45d7c:	ldr	r0, [sp, #28]
   45d80:	ldr	r1, [fp, #-16]
   45d84:	ldrb	r1, [r1]
   45d88:	asr	r1, r1, #2
   45d8c:	add	r0, r0, r1
   45d90:	ldrb	r0, [r0]
   45d94:	ldr	r1, [fp, #-12]
   45d98:	strb	r0, [r1]
   45d9c:	ldr	r0, [sp, #28]
   45da0:	ldr	r1, [fp, #-16]
   45da4:	ldrb	r1, [r1]
   45da8:	lsl	r1, r1, #4
   45dac:	and	r1, r1, #48	; 0x30
   45db0:	ldr	r2, [fp, #-16]
   45db4:	ldrb	r2, [r2, #1]
   45db8:	asr	r2, r2, #4
   45dbc:	orr	r1, r1, r2
   45dc0:	add	r0, r0, r1
   45dc4:	ldrb	r0, [r0]
   45dc8:	ldr	r1, [fp, #-12]
   45dcc:	strb	r0, [r1, #1]
   45dd0:	ldr	r0, [sp, #28]
   45dd4:	ldr	r1, [fp, #-16]
   45dd8:	ldrb	r1, [r1, #1]
   45ddc:	lsl	r1, r1, #2
   45de0:	and	r1, r1, #60	; 0x3c
   45de4:	add	r0, r0, r1
   45de8:	ldrb	r0, [r0]
   45dec:	ldr	r1, [fp, #-12]
   45df0:	strb	r0, [r1, #2]
   45df4:	ldr	r0, [fp, #-12]
   45df8:	add	r0, r0, #3
   45dfc:	str	r0, [fp, #-12]
   45e00:	ldr	r0, [sp, #20]
   45e04:	cmp	r0, #0
   45e08:	beq	45e20 <flatcc_json_printer_clear@@Base+0x1aec>
   45e0c:	ldr	r0, [fp, #-12]
   45e10:	add	r1, r0, #1
   45e14:	str	r1, [fp, #-12]
   45e18:	movw	r1, #61	; 0x3d
   45e1c:	strb	r1, [r0]
   45e20:	b	45eb0 <flatcc_json_printer_clear@@Base+0x1b7c>
   45e24:	ldr	r0, [sp, #28]
   45e28:	ldr	r1, [fp, #-16]
   45e2c:	ldrb	r1, [r1]
   45e30:	asr	r1, r1, #2
   45e34:	add	r0, r0, r1
   45e38:	ldrb	r0, [r0]
   45e3c:	ldr	r1, [fp, #-12]
   45e40:	strb	r0, [r1]
   45e44:	ldr	r0, [sp, #28]
   45e48:	ldr	r1, [fp, #-16]
   45e4c:	ldrb	r1, [r1]
   45e50:	lsl	r1, r1, #4
   45e54:	and	r1, r1, #48	; 0x30
   45e58:	add	r0, r0, r1
   45e5c:	ldrb	r0, [r0]
   45e60:	ldr	r1, [fp, #-12]
   45e64:	strb	r0, [r1, #1]
   45e68:	ldr	r0, [fp, #-12]
   45e6c:	add	r0, r0, #2
   45e70:	str	r0, [fp, #-12]
   45e74:	ldr	r0, [sp, #20]
   45e78:	cmp	r0, #0
   45e7c:	beq	45ea4 <flatcc_json_printer_clear@@Base+0x1b70>
   45e80:	ldr	r0, [fp, #-12]
   45e84:	add	r1, r0, #1
   45e88:	str	r1, [fp, #-12]
   45e8c:	movw	r1, #61	; 0x3d
   45e90:	strb	r1, [r0]
   45e94:	ldr	r0, [fp, #-12]
   45e98:	add	r2, r0, #1
   45e9c:	str	r2, [fp, #-12]
   45ea0:	strb	r1, [r0]
   45ea4:	b	45eb0 <flatcc_json_printer_clear@@Base+0x1b7c>
   45ea8:	movw	r0, #0
   45eac:	str	r0, [sp, #20]
   45eb0:	movw	r0, #0
   45eb4:	str	r0, [sp, #16]
   45eb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   45ebc:	movw	r1, #0
   45ec0:	cmp	r0, r1
   45ec4:	beq	45edc <flatcc_json_printer_clear@@Base+0x1ba8>
   45ec8:	ldr	r0, [fp, #-12]
   45ecc:	ldr	r1, [sp, #24]
   45ed0:	sub	r0, r0, r1
   45ed4:	ldr	r1, [fp, #-20]	; 0xffffffec
   45ed8:	str	r0, [r1]
   45edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   45ee0:	movw	r1, #0
   45ee4:	cmp	r0, r1
   45ee8:	beq	45f00 <flatcc_json_printer_clear@@Base+0x1bcc>
   45eec:	ldr	r0, [sp, #16]
   45ef0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45ef4:	ldr	r2, [r1]
   45ef8:	sub	r0, r2, r0
   45efc:	str	r0, [r1]
   45f00:	ldr	r0, [sp, #12]
   45f04:	sub	sp, fp, #8
   45f08:	pop	{r4, sl, fp, pc}
   45f0c:	andeq	r6, r0, sl, lsl #18
   45f10:	andeq	r6, r0, r1, asr #17
   45f14:	sub	sp, sp, #4
   45f18:	strb	r0, [sp, #3]
   45f1c:	ldrb	r0, [sp, #3]
   45f20:	add	sp, sp, #4
   45f24:	bx	lr
   45f28:	sub	sp, sp, #4
   45f2c:	strh	r0, [sp, #2]
   45f30:	ldrh	r0, [sp, #2]
   45f34:	add	sp, sp, #4
   45f38:	bx	lr
   45f3c:	sub	sp, sp, #4
   45f40:	str	r0, [sp]
   45f44:	ldr	r0, [sp]
   45f48:	add	sp, sp, #4
   45f4c:	bx	lr
   45f50:	sub	sp, sp, #8
   45f54:	str	r0, [sp]
   45f58:	str	r1, [sp, #4]
   45f5c:	ldr	r0, [sp]
   45f60:	ldr	r1, [sp, #4]
   45f64:	add	sp, sp, #8
   45f68:	bx	lr
   45f6c:	sub	sp, sp, #4
   45f70:	strb	r0, [sp, #3]
   45f74:	ldrsb	r0, [sp, #3]
   45f78:	add	sp, sp, #4
   45f7c:	bx	lr
   45f80:	sub	sp, sp, #4
   45f84:	strh	r0, [sp, #2]
   45f88:	ldrsh	r0, [sp, #2]
   45f8c:	add	sp, sp, #4
   45f90:	bx	lr
   45f94:	sub	sp, sp, #4
   45f98:	str	r0, [sp]
   45f9c:	ldr	r0, [sp]
   45fa0:	add	sp, sp, #4
   45fa4:	bx	lr
   45fa8:	sub	sp, sp, #8
   45fac:	str	r0, [sp]
   45fb0:	str	r1, [sp, #4]
   45fb4:	ldr	r0, [sp]
   45fb8:	ldr	r1, [sp, #4]
   45fbc:	add	sp, sp, #8
   45fc0:	bx	lr
   45fc4:	sub	sp, sp, #4
   45fc8:	strb	r0, [sp, #3]
   45fcc:	ldrb	r0, [sp, #3]
   45fd0:	add	sp, sp, #4
   45fd4:	bx	lr
   45fd8:	sub	sp, sp, #8
   45fdc:	vstr	s0, [sp, #4]
   45fe0:	vldr	s0, [sp, #4]
   45fe4:	vstr	s0, [sp]
   45fe8:	ldr	r0, [sp]
   45fec:	str	r0, [sp]
   45ff0:	vldr	s0, [sp]
   45ff4:	add	sp, sp, #8
   45ff8:	bx	lr
   45ffc:	sub	sp, sp, #16
   46000:	vstr	d0, [sp, #8]
   46004:	vldr	d0, [sp, #8]
   46008:	vstr	d0, [sp]
   4600c:	vldr	d0, [sp]
   46010:	add	sp, sp, #16
   46014:	bx	lr
   46018:	sub	sp, sp, #4
   4601c:	str	r0, [sp]
   46020:	ldr	r0, [sp]
   46024:	add	sp, sp, #4
   46028:	bx	lr
   4602c:	sub	sp, sp, #4
   46030:	strb	r0, [sp, #3]
   46034:	ldrb	r0, [sp, #3]
   46038:	add	sp, sp, #4
   4603c:	bx	lr
   46040:	push	{fp, lr}
   46044:	mov	fp, sp
   46048:	sub	sp, sp, #8
   4604c:	str	r0, [sp, #4]
   46050:	ldr	r0, [sp, #4]
   46054:	ldr	r0, [r0]
   46058:	bl	46064 <flatcc_json_printer_clear@@Base+0x1d30>
   4605c:	mov	sp, fp
   46060:	pop	{fp, pc}
   46064:	sub	sp, sp, #4
   46068:	str	r0, [sp]
   4606c:	ldr	r0, [sp]
   46070:	add	sp, sp, #4
   46074:	bx	lr
   46078:	sub	sp, sp, #4
   4607c:	str	r0, [sp]
   46080:	ldr	r0, [sp]
   46084:	add	sp, sp, #4
   46088:	bx	lr
   4608c:	push	{fp, lr}
   46090:	mov	fp, sp
   46094:	sub	sp, sp, #8
   46098:	str	r0, [sp, #4]
   4609c:	ldr	r0, [sp, #4]
   460a0:	ldr	r0, [r0]
   460a4:	bl	460b0 <flatcc_json_printer_clear@@Base+0x1d7c>
   460a8:	mov	sp, fp
   460ac:	pop	{fp, pc}
   460b0:	sub	sp, sp, #4
   460b4:	str	r0, [sp]
   460b8:	ldr	r0, [sp]
   460bc:	add	sp, sp, #4
   460c0:	bx	lr
   460c4:	eor	r1, r1, #-2147483648	; 0x80000000
   460c8:	b	460d0 <flatcc_json_printer_clear@@Base+0x1d9c>
   460cc:	eor	r3, r3, #-2147483648	; 0x80000000
   460d0:	push	{r4, r5, lr}
   460d4:	lsl	r4, r1, #1
   460d8:	lsl	r5, r3, #1
   460dc:	teq	r4, r5
   460e0:	teqeq	r0, r2
   460e4:	orrsne	ip, r4, r0
   460e8:	orrsne	ip, r5, r2
   460ec:	mvnsne	ip, r4, asr #21
   460f0:	mvnsne	ip, r5, asr #21
   460f4:	beq	462e0 <flatcc_json_printer_clear@@Base+0x1fac>
   460f8:	lsr	r4, r4, #21
   460fc:	rsbs	r5, r4, r5, lsr #21
   46100:	rsblt	r5, r5, #0
   46104:	ble	46124 <flatcc_json_printer_clear@@Base+0x1df0>
   46108:	add	r4, r4, r5
   4610c:	eor	r2, r0, r2
   46110:	eor	r3, r1, r3
   46114:	eor	r0, r2, r0
   46118:	eor	r1, r3, r1
   4611c:	eor	r2, r0, r2
   46120:	eor	r3, r1, r3
   46124:	cmp	r5, #54	; 0x36
   46128:	pophi	{r4, r5, pc}
   4612c:	tst	r1, #-2147483648	; 0x80000000
   46130:	lsl	r1, r1, #12
   46134:	mov	ip, #1048576	; 0x100000
   46138:	orr	r1, ip, r1, lsr #12
   4613c:	beq	46148 <flatcc_json_printer_clear@@Base+0x1e14>
   46140:	rsbs	r0, r0, #0
   46144:	rsc	r1, r1, #0
   46148:	tst	r3, #-2147483648	; 0x80000000
   4614c:	lsl	r3, r3, #12
   46150:	orr	r3, ip, r3, lsr #12
   46154:	beq	46160 <flatcc_json_printer_clear@@Base+0x1e2c>
   46158:	rsbs	r2, r2, #0
   4615c:	rsc	r3, r3, #0
   46160:	teq	r4, r5
   46164:	beq	462c8 <flatcc_json_printer_clear@@Base+0x1f94>
   46168:	sub	r4, r4, #1
   4616c:	rsbs	lr, r5, #32
   46170:	blt	4618c <flatcc_json_printer_clear@@Base+0x1e58>
   46174:	lsl	ip, r2, lr
   46178:	adds	r0, r0, r2, lsr r5
   4617c:	adc	r1, r1, #0
   46180:	adds	r0, r0, r3, lsl lr
   46184:	adcs	r1, r1, r3, asr r5
   46188:	b	461a8 <flatcc_json_printer_clear@@Base+0x1e74>
   4618c:	sub	r5, r5, #32
   46190:	add	lr, lr, #32
   46194:	cmp	r2, #1
   46198:	lsl	ip, r3, lr
   4619c:	orrcs	ip, ip, #2
   461a0:	adds	r0, r0, r3, asr r5
   461a4:	adcs	r1, r1, r3, asr #31
   461a8:	and	r5, r1, #-2147483648	; 0x80000000
   461ac:	bpl	461bc <flatcc_json_printer_clear@@Base+0x1e88>
   461b0:	rsbs	ip, ip, #0
   461b4:	rscs	r0, r0, #0
   461b8:	rsc	r1, r1, #0
   461bc:	cmp	r1, #1048576	; 0x100000
   461c0:	bcc	46200 <flatcc_json_printer_clear@@Base+0x1ecc>
   461c4:	cmp	r1, #2097152	; 0x200000
   461c8:	bcc	461e8 <flatcc_json_printer_clear@@Base+0x1eb4>
   461cc:	lsrs	r1, r1, #1
   461d0:	rrxs	r0, r0
   461d4:	rrx	ip, ip
   461d8:	add	r4, r4, #1
   461dc:	lsl	r2, r4, #21
   461e0:	cmn	r2, #4194304	; 0x400000
   461e4:	bcs	46340 <flatcc_json_printer_clear@@Base+0x200c>
   461e8:	cmp	ip, #-2147483648	; 0x80000000
   461ec:	lsrseq	ip, r0, #1
   461f0:	adcs	r0, r0, #0
   461f4:	adc	r1, r1, r4, lsl #20
   461f8:	orr	r1, r1, r5
   461fc:	pop	{r4, r5, pc}
   46200:	lsls	ip, ip, #1
   46204:	adcs	r0, r0, r0
   46208:	adc	r1, r1, r1
   4620c:	tst	r1, #1048576	; 0x100000
   46210:	sub	r4, r4, #1
   46214:	bne	461e8 <flatcc_json_printer_clear@@Base+0x1eb4>
   46218:	teq	r1, #0
   4621c:	moveq	r1, r0
   46220:	moveq	r0, #0
   46224:	clz	r3, r1
   46228:	addeq	r3, r3, #32
   4622c:	sub	r3, r3, #11
   46230:	subs	r2, r3, #32
   46234:	bge	46258 <flatcc_json_printer_clear@@Base+0x1f24>
   46238:	adds	r2, r2, #12
   4623c:	ble	46254 <flatcc_json_printer_clear@@Base+0x1f20>
   46240:	add	ip, r2, #20
   46244:	rsb	r2, r2, #12
   46248:	lsl	r0, r1, ip
   4624c:	lsr	r1, r1, r2
   46250:	b	46268 <flatcc_json_printer_clear@@Base+0x1f34>
   46254:	add	r2, r2, #20
   46258:	rsble	ip, r2, #32
   4625c:	lsl	r1, r1, r2
   46260:	orrle	r1, r1, r0, lsr ip
   46264:	lslle	r0, r0, r2
   46268:	subs	r4, r4, r3
   4626c:	addge	r1, r1, r4, lsl #20
   46270:	orrge	r1, r1, r5
   46274:	popge	{r4, r5, pc}
   46278:	mvn	r4, r4
   4627c:	subs	r4, r4, #31
   46280:	bge	462bc <flatcc_json_printer_clear@@Base+0x1f88>
   46284:	adds	r4, r4, #12
   46288:	bgt	462a4 <flatcc_json_printer_clear@@Base+0x1f70>
   4628c:	add	r4, r4, #20
   46290:	rsb	r2, r4, #32
   46294:	lsr	r0, r0, r4
   46298:	orr	r0, r0, r1, lsl r2
   4629c:	orr	r1, r5, r1, lsr r4
   462a0:	pop	{r4, r5, pc}
   462a4:	rsb	r4, r4, #12
   462a8:	rsb	r2, r4, #32
   462ac:	lsr	r0, r0, r2
   462b0:	orr	r0, r0, r1, lsl r4
   462b4:	mov	r1, r5
   462b8:	pop	{r4, r5, pc}
   462bc:	lsr	r0, r1, r4
   462c0:	mov	r1, r5
   462c4:	pop	{r4, r5, pc}
   462c8:	teq	r4, #0
   462cc:	eor	r3, r3, #1048576	; 0x100000
   462d0:	eoreq	r1, r1, #1048576	; 0x100000
   462d4:	addeq	r4, r4, #1
   462d8:	subne	r5, r5, #1
   462dc:	b	46168 <flatcc_json_printer_clear@@Base+0x1e34>
   462e0:	mvns	ip, r4, asr #21
   462e4:	mvnsne	ip, r5, asr #21
   462e8:	beq	46350 <flatcc_json_printer_clear@@Base+0x201c>
   462ec:	teq	r4, r5
   462f0:	teqeq	r0, r2
   462f4:	beq	46308 <flatcc_json_printer_clear@@Base+0x1fd4>
   462f8:	orrs	ip, r4, r0
   462fc:	moveq	r1, r3
   46300:	moveq	r0, r2
   46304:	pop	{r4, r5, pc}
   46308:	teq	r1, r3
   4630c:	movne	r1, #0
   46310:	movne	r0, #0
   46314:	popne	{r4, r5, pc}
   46318:	lsrs	ip, r4, #21
   4631c:	bne	46330 <flatcc_json_printer_clear@@Base+0x1ffc>
   46320:	lsls	r0, r0, #1
   46324:	adcs	r1, r1, r1
   46328:	orrcs	r1, r1, #-2147483648	; 0x80000000
   4632c:	pop	{r4, r5, pc}
   46330:	adds	r4, r4, #4194304	; 0x400000
   46334:	addcc	r1, r1, #1048576	; 0x100000
   46338:	popcc	{r4, r5, pc}
   4633c:	and	r5, r1, #-2147483648	; 0x80000000
   46340:	orr	r1, r5, #2130706432	; 0x7f000000
   46344:	orr	r1, r1, #15728640	; 0xf00000
   46348:	mov	r0, #0
   4634c:	pop	{r4, r5, pc}
   46350:	mvns	ip, r4, asr #21
   46354:	movne	r1, r3
   46358:	movne	r0, r2
   4635c:	mvnseq	ip, r5, asr #21
   46360:	movne	r3, r1
   46364:	movne	r2, r0
   46368:	orrs	r4, r0, r1, lsl #12
   4636c:	orrseq	r5, r2, r3, lsl #12
   46370:	teqeq	r1, r3
   46374:	orrne	r1, r1, #524288	; 0x80000
   46378:	pop	{r4, r5, pc}
   4637c:	teq	r0, #0
   46380:	moveq	r1, #0
   46384:	bxeq	lr
   46388:	push	{r4, r5, lr}
   4638c:	mov	r4, #1024	; 0x400
   46390:	add	r4, r4, #50	; 0x32
   46394:	mov	r5, #0
   46398:	mov	r1, #0
   4639c:	b	46218 <flatcc_json_printer_clear@@Base+0x1ee4>
   463a0:	teq	r0, #0
   463a4:	moveq	r1, #0
   463a8:	bxeq	lr
   463ac:	push	{r4, r5, lr}
   463b0:	mov	r4, #1024	; 0x400
   463b4:	add	r4, r4, #50	; 0x32
   463b8:	ands	r5, r0, #-2147483648	; 0x80000000
   463bc:	rsbmi	r0, r0, #0
   463c0:	mov	r1, #0
   463c4:	b	46218 <flatcc_json_printer_clear@@Base+0x1ee4>
   463c8:	lsls	r2, r0, #1
   463cc:	asr	r1, r2, #3
   463d0:	rrx	r1, r1
   463d4:	lsl	r0, r2, #28
   463d8:	andsne	r3, r2, #-16777216	; 0xff000000
   463dc:	teqne	r3, #-16777216	; 0xff000000
   463e0:	eorne	r1, r1, #939524096	; 0x38000000
   463e4:	bxne	lr
   463e8:	bics	r2, r2, #-16777216	; 0xff000000
   463ec:	bxeq	lr
   463f0:	teq	r3, #-16777216	; 0xff000000
   463f4:	orreq	r1, r1, #524288	; 0x80000
   463f8:	bxeq	lr
   463fc:	push	{r4, r5, lr}
   46400:	mov	r4, #896	; 0x380
   46404:	and	r5, r1, #-2147483648	; 0x80000000
   46408:	bic	r1, r1, #-2147483648	; 0x80000000
   4640c:	b	46218 <flatcc_json_printer_clear@@Base+0x1ee4>
   46410:	orrs	r2, r0, r1
   46414:	bxeq	lr
   46418:	push	{r4, r5, lr}
   4641c:	mov	r5, #0
   46420:	b	46440 <flatcc_json_printer_clear@@Base+0x210c>
   46424:	orrs	r2, r0, r1
   46428:	bxeq	lr
   4642c:	push	{r4, r5, lr}
   46430:	ands	r5, r1, #-2147483648	; 0x80000000
   46434:	bpl	46440 <flatcc_json_printer_clear@@Base+0x210c>
   46438:	rsbs	r0, r0, #0
   4643c:	rsc	r1, r1, #0
   46440:	mov	r4, #1024	; 0x400
   46444:	add	r4, r4, #50	; 0x32
   46448:	lsrs	ip, r1, #22
   4644c:	beq	461bc <flatcc_json_printer_clear@@Base+0x1e88>
   46450:	mov	r2, #3
   46454:	lsrs	ip, ip, #3
   46458:	addne	r2, r2, #3
   4645c:	lsrs	ip, ip, #3
   46460:	addne	r2, r2, #3
   46464:	add	r2, r2, ip, lsr #3
   46468:	rsb	r3, r2, #32
   4646c:	lsl	ip, r0, r3
   46470:	lsr	r0, r0, r2
   46474:	orr	r0, r0, r1, lsl r3
   46478:	lsr	r1, r1, r2
   4647c:	add	r4, r4, r2
   46480:	b	461bc <flatcc_json_printer_clear@@Base+0x1e88>
   46484:	eor	r0, r0, #-2147483648	; 0x80000000
   46488:	b	46490 <flatcc_json_printer_clear@@Base+0x215c>
   4648c:	eor	r1, r1, #-2147483648	; 0x80000000
   46490:	lsls	r2, r0, #1
   46494:	lslsne	r3, r1, #1
   46498:	teqne	r2, r3
   4649c:	mvnsne	ip, r2, asr #24
   464a0:	mvnsne	ip, r3, asr #24
   464a4:	beq	4659c <flatcc_json_printer_clear@@Base+0x2268>
   464a8:	lsr	r2, r2, #24
   464ac:	rsbs	r3, r2, r3, lsr #24
   464b0:	addgt	r2, r2, r3
   464b4:	eorgt	r1, r0, r1
   464b8:	eorgt	r0, r1, r0
   464bc:	eorgt	r1, r0, r1
   464c0:	rsblt	r3, r3, #0
   464c4:	cmp	r3, #25
   464c8:	bxhi	lr
   464cc:	tst	r0, #-2147483648	; 0x80000000
   464d0:	orr	r0, r0, #8388608	; 0x800000
   464d4:	bic	r0, r0, #-16777216	; 0xff000000
   464d8:	rsbne	r0, r0, #0
   464dc:	tst	r1, #-2147483648	; 0x80000000
   464e0:	orr	r1, r1, #8388608	; 0x800000
   464e4:	bic	r1, r1, #-16777216	; 0xff000000
   464e8:	rsbne	r1, r1, #0
   464ec:	teq	r2, r3
   464f0:	beq	46584 <flatcc_json_printer_clear@@Base+0x2250>
   464f4:	sub	r2, r2, #1
   464f8:	adds	r0, r0, r1, asr r3
   464fc:	rsb	r3, r3, #32
   46500:	lsl	r1, r1, r3
   46504:	and	r3, r0, #-2147483648	; 0x80000000
   46508:	bpl	46514 <flatcc_json_printer_clear@@Base+0x21e0>
   4650c:	rsbs	r1, r1, #0
   46510:	rsc	r0, r0, #0
   46514:	cmp	r0, #8388608	; 0x800000
   46518:	bcc	4654c <flatcc_json_printer_clear@@Base+0x2218>
   4651c:	cmp	r0, #16777216	; 0x1000000
   46520:	bcc	46538 <flatcc_json_printer_clear@@Base+0x2204>
   46524:	lsrs	r0, r0, #1
   46528:	rrx	r1, r1
   4652c:	add	r2, r2, #1
   46530:	cmp	r2, #254	; 0xfe
   46534:	bcs	465f0 <flatcc_json_printer_clear@@Base+0x22bc>
   46538:	cmp	r1, #-2147483648	; 0x80000000
   4653c:	adc	r0, r0, r2, lsl #23
   46540:	biceq	r0, r0, #1
   46544:	orr	r0, r0, r3
   46548:	bx	lr
   4654c:	lsls	r1, r1, #1
   46550:	adc	r0, r0, r0
   46554:	tst	r0, #8388608	; 0x800000
   46558:	sub	r2, r2, #1
   4655c:	bne	46538 <flatcc_json_printer_clear@@Base+0x2204>
   46560:	clz	ip, r0
   46564:	sub	ip, ip, #8
   46568:	subs	r2, r2, ip
   4656c:	lsl	r0, r0, ip
   46570:	addge	r0, r0, r2, lsl #23
   46574:	rsblt	r2, r2, #0
   46578:	orrge	r0, r0, r3
   4657c:	orrlt	r0, r3, r0, lsr r2
   46580:	bx	lr
   46584:	teq	r2, #0
   46588:	eor	r1, r1, #8388608	; 0x800000
   4658c:	eoreq	r0, r0, #8388608	; 0x800000
   46590:	addeq	r2, r2, #1
   46594:	subne	r3, r3, #1
   46598:	b	464f4 <flatcc_json_printer_clear@@Base+0x21c0>
   4659c:	lsl	r3, r1, #1
   465a0:	mvns	ip, r2, asr #24
   465a4:	mvnsne	ip, r3, asr #24
   465a8:	beq	465fc <flatcc_json_printer_clear@@Base+0x22c8>
   465ac:	teq	r2, r3
   465b0:	beq	465c0 <flatcc_json_printer_clear@@Base+0x228c>
   465b4:	teq	r2, #0
   465b8:	moveq	r0, r1
   465bc:	bx	lr
   465c0:	teq	r0, r1
   465c4:	movne	r0, #0
   465c8:	bxne	lr
   465cc:	tst	r2, #-16777216	; 0xff000000
   465d0:	bne	465e0 <flatcc_json_printer_clear@@Base+0x22ac>
   465d4:	lsls	r0, r0, #1
   465d8:	orrcs	r0, r0, #-2147483648	; 0x80000000
   465dc:	bx	lr
   465e0:	adds	r2, r2, #33554432	; 0x2000000
   465e4:	addcc	r0, r0, #8388608	; 0x800000
   465e8:	bxcc	lr
   465ec:	and	r3, r0, #-2147483648	; 0x80000000
   465f0:	orr	r0, r3, #2130706432	; 0x7f000000
   465f4:	orr	r0, r0, #8388608	; 0x800000
   465f8:	bx	lr
   465fc:	mvns	r2, r2, asr #24
   46600:	movne	r0, r1
   46604:	mvnseq	r3, r3, asr #24
   46608:	movne	r1, r0
   4660c:	lsls	r2, r0, #9
   46610:	lslseq	r3, r1, #9
   46614:	teqeq	r0, r1
   46618:	orrne	r0, r0, #4194304	; 0x400000
   4661c:	bx	lr
   46620:	mov	r3, #0
   46624:	b	46630 <flatcc_json_printer_clear@@Base+0x22fc>
   46628:	ands	r3, r0, #-2147483648	; 0x80000000
   4662c:	rsbmi	r0, r0, #0
   46630:	movs	ip, r0
   46634:	bxeq	lr
   46638:	orr	r3, r3, #1258291200	; 0x4b000000
   4663c:	mov	r1, r0
   46640:	mov	r0, #0
   46644:	b	46688 <flatcc_json_printer_clear@@Base+0x2354>
   46648:	orrs	r2, r0, r1
   4664c:	bxeq	lr
   46650:	mov	r3, #0
   46654:	b	46670 <flatcc_json_printer_clear@@Base+0x233c>
   46658:	orrs	r2, r0, r1
   4665c:	bxeq	lr
   46660:	ands	r3, r1, #-2147483648	; 0x80000000
   46664:	bpl	46670 <flatcc_json_printer_clear@@Base+0x233c>
   46668:	rsbs	r0, r0, #0
   4666c:	rsc	r1, r1, #0
   46670:	movs	ip, r1
   46674:	moveq	ip, r0
   46678:	moveq	r1, r0
   4667c:	moveq	r0, #0
   46680:	orr	r3, r3, #1526726656	; 0x5b000000
   46684:	subeq	r3, r3, #268435456	; 0x10000000
   46688:	sub	r3, r3, #8388608	; 0x800000
   4668c:	clz	r2, ip
   46690:	subs	r2, r2, #8
   46694:	sub	r3, r3, r2, lsl #23
   46698:	blt	466b8 <flatcc_json_printer_clear@@Base+0x2384>
   4669c:	add	r3, r3, r1, lsl r2
   466a0:	lsl	ip, r0, r2
   466a4:	rsb	r2, r2, #32
   466a8:	cmp	ip, #-2147483648	; 0x80000000
   466ac:	adc	r0, r3, r0, lsr r2
   466b0:	biceq	r0, r0, #1
   466b4:	bx	lr
   466b8:	add	r2, r2, #32
   466bc:	lsl	ip, r1, r2
   466c0:	rsb	r2, r2, #32
   466c4:	orrs	r0, r0, ip, lsl #1
   466c8:	adc	r0, r3, r1, lsr r2
   466cc:	biceq	r0, r0, ip, lsr #31
   466d0:	bx	lr
   466d4:	cmp	r3, #0
   466d8:	cmpeq	r2, #0
   466dc:	bne	466f4 <flatcc_json_printer_clear@@Base+0x23c0>
   466e0:	cmp	r1, #0
   466e4:	cmpeq	r0, #0
   466e8:	mvnne	r1, #0
   466ec:	mvnne	r0, #0
   466f0:	b	46710 <flatcc_json_printer_clear@@Base+0x23dc>
   466f4:	sub	sp, sp, #8
   466f8:	push	{sp, lr}
   466fc:	bl	46720 <flatcc_json_printer_clear@@Base+0x23ec>
   46700:	ldr	lr, [sp, #4]
   46704:	add	sp, sp, #8
   46708:	pop	{r2, r3}
   4670c:	bx	lr
   46710:	push	{r1, lr}
   46714:	mov	r0, #8
   46718:	bl	14e00 <raise@plt>
   4671c:	pop	{r1, pc}
   46720:	cmp	r1, r3
   46724:	cmpeq	r0, r2
   46728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4672c:	mov	r4, r0
   46730:	movcc	r0, #0
   46734:	mov	r5, r1
   46738:	ldr	lr, [sp, #36]	; 0x24
   4673c:	movcc	r1, r0
   46740:	bcc	4683c <flatcc_json_printer_clear@@Base+0x2508>
   46744:	cmp	r3, #0
   46748:	clzeq	ip, r2
   4674c:	clzne	ip, r3
   46750:	addeq	ip, ip, #32
   46754:	cmp	r5, #0
   46758:	clzeq	r1, r4
   4675c:	addeq	r1, r1, #32
   46760:	clzne	r1, r5
   46764:	sub	ip, ip, r1
   46768:	sub	sl, ip, #32
   4676c:	lsl	r9, r3, ip
   46770:	rsb	fp, ip, #32
   46774:	orr	r9, r9, r2, lsl sl
   46778:	orr	r9, r9, r2, lsr fp
   4677c:	lsl	r8, r2, ip
   46780:	cmp	r5, r9
   46784:	cmpeq	r4, r8
   46788:	movcc	r0, #0
   4678c:	movcc	r1, r0
   46790:	bcc	467ac <flatcc_json_printer_clear@@Base+0x2478>
   46794:	mov	r0, #1
   46798:	subs	r4, r4, r8
   4679c:	lsl	r1, r0, sl
   467a0:	orr	r1, r1, r0, lsr fp
   467a4:	lsl	r0, r0, ip
   467a8:	sbc	r5, r5, r9
   467ac:	cmp	ip, #0
   467b0:	beq	4683c <flatcc_json_printer_clear@@Base+0x2508>
   467b4:	lsr	r6, r8, #1
   467b8:	orr	r6, r6, r9, lsl #31
   467bc:	lsr	r7, r9, #1
   467c0:	mov	r2, ip
   467c4:	b	467e8 <flatcc_json_printer_clear@@Base+0x24b4>
   467c8:	subs	r3, r4, r6
   467cc:	sbc	r8, r5, r7
   467d0:	adds	r3, r3, r3
   467d4:	adc	r8, r8, r8
   467d8:	adds	r4, r3, #1
   467dc:	adc	r5, r8, #0
   467e0:	subs	r2, r2, #1
   467e4:	beq	46804 <flatcc_json_printer_clear@@Base+0x24d0>
   467e8:	cmp	r5, r7
   467ec:	cmpeq	r4, r6
   467f0:	bcs	467c8 <flatcc_json_printer_clear@@Base+0x2494>
   467f4:	adds	r4, r4, r4
   467f8:	adc	r5, r5, r5
   467fc:	subs	r2, r2, #1
   46800:	bne	467e8 <flatcc_json_printer_clear@@Base+0x24b4>
   46804:	lsr	r3, r4, ip
   46808:	orr	r3, r3, r5, lsl fp
   4680c:	lsr	r2, r5, ip
   46810:	orr	r3, r3, r5, lsr sl
   46814:	adds	r0, r0, r4
   46818:	mov	r4, r3
   4681c:	lsl	r3, r2, ip
   46820:	orr	r3, r3, r4, lsl sl
   46824:	lsl	ip, r4, ip
   46828:	orr	r3, r3, r4, lsr fp
   4682c:	adc	r1, r1, r5
   46830:	subs	r0, r0, ip
   46834:	mov	r5, r2
   46838:	sbc	r1, r1, r3
   4683c:	cmp	lr, #0
   46840:	strdne	r4, [lr]
   46844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00046848 <__libc_csu_init@@Base>:
   46848:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4684c:	mov	r7, r0
   46850:	ldr	r6, [pc, #72]	; 468a0 <__libc_csu_init@@Base+0x58>
   46854:	ldr	r5, [pc, #72]	; 468a4 <__libc_csu_init@@Base+0x5c>
   46858:	add	r6, pc, r6
   4685c:	add	r5, pc, r5
   46860:	sub	r6, r6, r5
   46864:	mov	r8, r1
   46868:	mov	r9, r2
   4686c:	bl	14de0 <raise@plt-0x20>
   46870:	asrs	r6, r6, #2
   46874:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   46878:	mov	r4, #0
   4687c:	add	r4, r4, #1
   46880:	ldr	r3, [r5], #4
   46884:	mov	r2, r9
   46888:	mov	r1, r8
   4688c:	mov	r0, r7
   46890:	blx	r3
   46894:	cmp	r6, r4
   46898:	bne	4687c <__libc_csu_init@@Base+0x34>
   4689c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   468a0:	andeq	r6, r1, ip, ror r6
   468a4:	andeq	r6, r1, r4, ror r6

000468a8 <__libc_csu_fini@@Base>:
   468a8:	bx	lr

Disassembly of section .fini:

000468ac <.fini>:
   468ac:	push	{r3, lr}
   468b0:	pop	{r3, pc}
