
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

0001083c <.init>:
   1083c:	push	{r3, lr}
   10840:	bl	10964 <_start@@Base+0x3c>
   10844:	pop	{r3, pc}

Disassembly of section .plt:

00010848 <strcmp@plt-0x14>:
   10848:	push	{lr}		; (str lr, [sp, #-4]!)
   1084c:	ldr	lr, [pc, #4]	; 10858 <strcmp@plt-0x4>
   10850:	add	lr, pc, lr
   10854:	ldr	pc, [lr, #8]!
   10858:	andeq	r2, r1, r8, lsr #15

0001085c <strcmp@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #73728	; 0x12000
   10864:	ldr	pc, [ip, #1960]!	; 0x7a8

00010868 <printf@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #73728	; 0x12000
   10870:	ldr	pc, [ip, #1952]!	; 0x7a0

00010874 <fopen@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #73728	; 0x12000
   1087c:	ldr	pc, [ip, #1944]!	; 0x798

00010880 <free@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #73728	; 0x12000
   10888:	ldr	pc, [ip, #1936]!	; 0x790

0001088c <ftell@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #73728	; 0x12000
   10894:	ldr	pc, [ip, #1928]!	; 0x788

00010898 <rewind@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #73728	; 0x12000
   108a0:	ldr	pc, [ip, #1920]!	; 0x780

000108a4 <fread@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #73728	; 0x12000
   108ac:	ldr	pc, [ip, #1912]!	; 0x778

000108b0 <malloc@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #73728	; 0x12000
   108b8:	ldr	pc, [ip, #1904]!	; 0x770

000108bc <__libc_start_main@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #73728	; 0x12000
   108c4:	ldr	pc, [ip, #1896]!	; 0x768

000108c8 <__gmon_start__@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #73728	; 0x12000
   108d0:	ldr	pc, [ip, #1888]!	; 0x760

000108d4 <exit@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #73728	; 0x12000
   108dc:	ldr	pc, [ip, #1880]!	; 0x758

000108e0 <fprintf@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #73728	; 0x12000
   108e8:	ldr	pc, [ip, #1872]!	; 0x750

000108ec <strncpy@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #73728	; 0x12000
   108f4:	ldr	pc, [ip, #1864]!	; 0x748

000108f8 <fclose@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #73728	; 0x12000
   10900:	ldr	pc, [ip, #1856]!	; 0x740

00010904 <fseek@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #73728	; 0x12000
   1090c:	ldr	pc, [ip, #1848]!	; 0x738

00010910 <abort@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #73728	; 0x12000
   10918:	ldr	pc, [ip, #1840]!	; 0x730

0001091c <__assert_fail@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #73728	; 0x12000
   10924:	ldr	pc, [ip, #1832]!	; 0x728

Disassembly of section .text:

00010928 <_start@@Base>:
   10928:	mov	fp, #0
   1092c:	mov	lr, #0
   10930:	pop	{r1}		; (ldr r1, [sp], #4)
   10934:	mov	r2, sp
   10938:	push	{r2}		; (str r2, [sp, #-4]!)
   1093c:	push	{r0}		; (str r0, [sp, #-4]!)
   10940:	ldr	ip, [pc, #16]	; 10958 <_start@@Base+0x30>
   10944:	push	{ip}		; (str ip, [sp, #-4]!)
   10948:	ldr	r0, [pc, #12]	; 1095c <_start@@Base+0x34>
   1094c:	ldr	r3, [pc, #12]	; 10960 <_start@@Base+0x38>
   10950:	bl	108bc <__libc_start_main@plt>
   10954:	bl	10910 <abort@plt>
   10958:			; <UNDEFINED> instruction: 0x000122b0
   1095c:	andeq	r1, r1, r8, lsl #24
   10960:	andeq	r2, r1, r0, asr r2
   10964:	ldr	r3, [pc, #20]	; 10980 <_start@@Base+0x58>
   10968:	ldr	r2, [pc, #20]	; 10984 <_start@@Base+0x5c>
   1096c:	add	r3, pc, r3
   10970:	ldr	r2, [r3, r2]
   10974:	cmp	r2, #0
   10978:	bxeq	lr
   1097c:	b	108c8 <__gmon_start__@plt>
   10980:	andeq	r2, r1, ip, lsl #13
   10984:	andeq	r0, r0, r4, asr r0
   10988:	ldr	r0, [pc, #24]	; 109a8 <_start@@Base+0x80>
   1098c:	ldr	r3, [pc, #24]	; 109ac <_start@@Base+0x84>
   10990:	cmp	r3, r0
   10994:	bxeq	lr
   10998:	ldr	r3, [pc, #16]	; 109b0 <_start@@Base+0x88>
   1099c:	cmp	r3, #0
   109a0:	bxeq	lr
   109a4:	bx	r3
   109a8:	andeq	r3, r2, ip, rrx
   109ac:	andeq	r3, r2, ip, rrx
   109b0:	andeq	r0, r0, r0
   109b4:	ldr	r0, [pc, #36]	; 109e0 <_start@@Base+0xb8>
   109b8:	ldr	r1, [pc, #36]	; 109e4 <_start@@Base+0xbc>
   109bc:	sub	r1, r1, r0
   109c0:	asr	r1, r1, #2
   109c4:	add	r1, r1, r1, lsr #31
   109c8:	asrs	r1, r1, #1
   109cc:	bxeq	lr
   109d0:	ldr	r3, [pc, #16]	; 109e8 <_start@@Base+0xc0>
   109d4:	cmp	r3, #0
   109d8:	bxeq	lr
   109dc:	bx	r3
   109e0:	andeq	r3, r2, ip, rrx
   109e4:	andeq	r3, r2, ip, rrx
   109e8:	andeq	r0, r0, r0
   109ec:	push	{r4, lr}
   109f0:	ldr	r4, [pc, #24]	; 10a10 <_start@@Base+0xe8>
   109f4:	ldrb	r3, [r4]
   109f8:	cmp	r3, #0
   109fc:	popne	{r4, pc}
   10a00:	bl	10988 <_start@@Base+0x60>
   10a04:	mov	r3, #1
   10a08:	strb	r3, [r4]
   10a0c:	pop	{r4, pc}
   10a10:	andeq	r3, r2, ip, rrx
   10a14:	b	109b4 <_start@@Base+0x8c>

00010a18 <test_schema@@Base>:
   10a18:	push	{fp, lr}
   10a1c:	mov	fp, sp
   10a20:	sub	sp, sp, #80	; 0x50
   10a24:	str	r0, [fp, #-4]
   10a28:	mvn	r0, #0
   10a2c:	str	r0, [fp, #-16]
   10a30:	ldr	r0, [fp, #-4]
   10a34:	movw	r1, #10000	; 0x2710
   10a38:	sub	r2, fp, #12
   10a3c:	bl	10e6c <test_schema@@Base+0x454>
   10a40:	str	r0, [fp, #-8]
   10a44:	ldr	r0, [fp, #-8]
   10a48:	movw	r1, #0
   10a4c:	cmp	r0, r1
   10a50:	bne	10a64 <test_schema@@Base+0x4c>
   10a54:	ldr	r0, [pc, #936]	; 10e04 <test_schema@@Base+0x3ec>
   10a58:	add	r0, pc, r0
   10a5c:	bl	10868 <printf@plt>
   10a60:	b	10de0 <test_schema@@Base+0x3c8>
   10a64:	ldr	r0, [fp, #-8]
   10a68:	bl	11054 <test_schema@@Base+0x63c>
   10a6c:	str	r0, [fp, #-20]	; 0xffffffec
   10a70:	ldr	r0, [fp, #-20]	; 0xffffffec
   10a74:	bl	110d0 <test_schema@@Base+0x6b8>
   10a78:	str	r0, [fp, #-24]	; 0xffffffe8
   10a7c:	movw	r0, #0
   10a80:	str	r0, [sp, #36]	; 0x24
   10a84:	ldr	r0, [sp, #36]	; 0x24
   10a88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10a8c:	str	r0, [sp, #28]
   10a90:	mov	r0, r1
   10a94:	bl	111f0 <test_schema@@Base+0x7d8>
   10a98:	ldr	r1, [sp, #28]
   10a9c:	cmp	r1, r0
   10aa0:	bcs	10aec <test_schema@@Base+0xd4>
   10aa4:	ldr	r1, [sp, #36]	; 0x24
   10aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10aac:	ldr	r2, [sp, #36]	; 0x24
   10ab0:	str	r1, [sp, #24]
   10ab4:	mov	r1, r2
   10ab8:	bl	11360 <test_schema@@Base+0x948>
   10abc:	bl	11240 <test_schema@@Base+0x828>
   10ac0:	ldr	r1, [pc, #920]	; 10e60 <test_schema@@Base+0x448>
   10ac4:	add	r1, pc, r1
   10ac8:	str	r0, [sp, #20]
   10acc:	mov	r0, r1
   10ad0:	ldr	r1, [sp, #24]
   10ad4:	ldr	r2, [sp, #20]
   10ad8:	bl	10868 <printf@plt>
   10adc:	ldr	r0, [sp, #36]	; 0x24
   10ae0:	add	r0, r0, #1
   10ae4:	str	r0, [sp, #36]	; 0x24
   10ae8:	b	10a84 <test_schema@@Base+0x6c>
   10aec:	ldr	r0, [pc, #792]	; 10e0c <test_schema@@Base+0x3f4>
   10af0:	add	r1, pc, r0
   10af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10af8:	bl	113f0 <test_schema@@Base+0x9d8>
   10afc:	ldr	r1, [pc, #772]	; 10e08 <test_schema@@Base+0x3f0>
   10b00:	add	r1, pc, r1
   10b04:	str	r0, [sp, #36]	; 0x24
   10b08:	ldr	r0, [sp, #36]	; 0x24
   10b0c:	ldr	r1, [r1]
   10b10:	cmp	r0, r1
   10b14:	bne	10b28 <test_schema@@Base+0x110>
   10b18:	ldr	r0, [pc, #828]	; 10e5c <test_schema@@Base+0x444>
   10b1c:	add	r0, pc, r0
   10b20:	bl	10868 <printf@plt>
   10b24:	b	10de0 <test_schema@@Base+0x3c8>
   10b28:	ldr	r0, [sp, #36]	; 0x24
   10b2c:	str	r0, [sp, #32]
   10b30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b34:	ldr	r1, [sp, #36]	; 0x24
   10b38:	bl	11360 <test_schema@@Base+0x948>
   10b3c:	str	r0, [fp, #-28]	; 0xffffffe4
   10b40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10b44:	bl	11240 <test_schema@@Base+0x828>
   10b48:	ldr	r1, [pc, #788]	; 10e64 <test_schema@@Base+0x44c>
   10b4c:	add	r1, pc, r1
   10b50:	bl	1085c <strcmp@plt>
   10b54:	cmp	r0, #0
   10b58:	beq	10b6c <test_schema@@Base+0x154>
   10b5c:	ldr	r0, [pc, #756]	; 10e58 <test_schema@@Base+0x440>
   10b60:	add	r0, pc, r0
   10b64:	bl	10868 <printf@plt>
   10b68:	b	10de0 <test_schema@@Base+0x3c8>
   10b6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10b70:	bl	11418 <test_schema@@Base+0xa00>
   10b74:	ldr	r1, [pc, #664]	; 10e14 <test_schema@@Base+0x3fc>
   10b78:	add	r1, pc, r1
   10b7c:	str	r0, [fp, #-32]	; 0xffffffe0
   10b80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10b84:	bl	11538 <test_schema@@Base+0xb20>
   10b88:	ldr	r1, [pc, #640]	; 10e10 <test_schema@@Base+0x3f8>
   10b8c:	add	r1, pc, r1
   10b90:	str	r0, [sp, #36]	; 0x24
   10b94:	ldr	r0, [sp, #36]	; 0x24
   10b98:	ldr	r1, [r1]
   10b9c:	cmp	r0, r1
   10ba0:	bne	10bb4 <test_schema@@Base+0x19c>
   10ba4:	ldr	r0, [pc, #680]	; 10e54 <test_schema@@Base+0x43c>
   10ba8:	add	r0, pc, r0
   10bac:	bl	10868 <printf@plt>
   10bb0:	b	10de0 <test_schema@@Base+0x3c8>
   10bb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10bb8:	ldr	r1, [sp, #36]	; 0x24
   10bbc:	bl	11560 <test_schema@@Base+0xb48>
   10bc0:	str	r0, [fp, #-36]	; 0xffffffdc
   10bc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10bc8:	bl	115f0 <test_schema@@Base+0xbd8>
   10bcc:	eor	r0, r0, #150	; 0x96
   10bd0:	orr	r0, r0, r1
   10bd4:	cmp	r0, #0
   10bd8:	beq	10c54 <test_schema@@Base+0x23c>
   10bdc:	b	10be0 <test_schema@@Base+0x1c8>
   10be0:	ldr	r0, [pc, #616]	; 10e50 <test_schema@@Base+0x438>
   10be4:	add	r0, pc, r0
   10be8:	bl	10868 <printf@plt>
   10bec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10bf0:	str	r0, [sp, #16]
   10bf4:	mov	r0, r1
   10bf8:	bl	116f8 <test_schema@@Base+0xce0>
   10bfc:	ldr	r1, [pc, #584]	; 10e4c <test_schema@@Base+0x434>
   10c00:	add	r1, pc, r1
   10c04:	str	r0, [sp, #12]
   10c08:	mov	r0, r1
   10c0c:	ldr	r1, [sp, #12]
   10c10:	bl	10868 <printf@plt>
   10c14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10c18:	str	r0, [sp, #8]
   10c1c:	mov	r0, r1
   10c20:	bl	115f0 <test_schema@@Base+0xbd8>
   10c24:	ldr	r2, [pc, #540]	; 10e48 <test_schema@@Base+0x430>
   10c28:	add	r2, pc, r2
   10c2c:	ldr	r3, [pc, #564]	; 10e68 <test_schema@@Base+0x450>
   10c30:	add	r3, pc, r3
   10c34:	str	r0, [sp, #4]
   10c38:	mov	r0, r3
   10c3c:	ldr	r3, [sp, #4]
   10c40:	str	r2, [sp]
   10c44:	mov	r2, r3
   10c48:	mov	r3, r1
   10c4c:	bl	10868 <printf@plt>
   10c50:	b	10de0 <test_schema@@Base+0x3c8>
   10c54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10c58:	bl	11818 <test_schema@@Base+0xe00>
   10c5c:	str	r0, [sp, #40]	; 0x28
   10c60:	ldr	r0, [sp, #40]	; 0x28
   10c64:	bl	11934 <test_schema@@Base+0xf1c>
   10c68:	sxtb	r0, r0
   10c6c:	cmp	r0, #5
   10c70:	beq	10c84 <test_schema@@Base+0x26c>
   10c74:	ldr	r0, [pc, #456]	; 10e44 <test_schema@@Base+0x42c>
   10c78:	add	r0, pc, r0
   10c7c:	bl	10868 <printf@plt>
   10c80:	b	10de0 <test_schema@@Base+0x3c8>
   10c84:	ldr	r0, [pc, #400]	; 10e1c <test_schema@@Base+0x404>
   10c88:	add	r1, pc, r0
   10c8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10c90:	bl	11538 <test_schema@@Base+0xb20>
   10c94:	ldr	r1, [pc, #380]	; 10e18 <test_schema@@Base+0x400>
   10c98:	add	r1, pc, r1
   10c9c:	str	r0, [sp, #36]	; 0x24
   10ca0:	ldr	r0, [sp, #36]	; 0x24
   10ca4:	ldr	r1, [r1]
   10ca8:	cmp	r0, r1
   10cac:	bne	10cc0 <test_schema@@Base+0x2a8>
   10cb0:	ldr	r0, [pc, #392]	; 10e40 <test_schema@@Base+0x428>
   10cb4:	add	r0, pc, r0
   10cb8:	bl	10868 <printf@plt>
   10cbc:	b	10de0 <test_schema@@Base+0x3c8>
   10cc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10cc4:	ldr	r1, [sp, #36]	; 0x24
   10cc8:	bl	11560 <test_schema@@Base+0xb48>
   10ccc:	bl	11818 <test_schema@@Base+0xe00>
   10cd0:	str	r0, [sp, #40]	; 0x28
   10cd4:	ldr	r0, [sp, #40]	; 0x28
   10cd8:	bl	11934 <test_schema@@Base+0xf1c>
   10cdc:	sxtb	r0, r0
   10ce0:	cmp	r0, #15
   10ce4:	beq	10cf8 <test_schema@@Base+0x2e0>
   10ce8:	ldr	r0, [pc, #332]	; 10e3c <test_schema@@Base+0x424>
   10cec:	add	r0, pc, r0
   10cf0:	bl	10868 <printf@plt>
   10cf4:	b	10de0 <test_schema@@Base+0x3c8>
   10cf8:	ldr	r0, [sp, #40]	; 0x28
   10cfc:	bl	11a28 <test_schema@@Base+0x1010>
   10d00:	ldr	r1, [sp, #32]
   10d04:	cmp	r0, r1
   10d08:	beq	10d1c <test_schema@@Base+0x304>
   10d0c:	ldr	r0, [pc, #292]	; 10e38 <test_schema@@Base+0x420>
   10d10:	add	r0, pc, r0
   10d14:	bl	10868 <printf@plt>
   10d18:	b	10de0 <test_schema@@Base+0x3c8>
   10d1c:	ldr	r0, [pc, #256]	; 10e24 <test_schema@@Base+0x40c>
   10d20:	add	r1, pc, r0
   10d24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10d28:	bl	11538 <test_schema@@Base+0xb20>
   10d2c:	ldr	r1, [pc, #236]	; 10e20 <test_schema@@Base+0x408>
   10d30:	add	r1, pc, r1
   10d34:	str	r0, [sp, #36]	; 0x24
   10d38:	ldr	r0, [sp, #36]	; 0x24
   10d3c:	ldr	r1, [r1]
   10d40:	cmp	r0, r1
   10d44:	bne	10d58 <test_schema@@Base+0x340>
   10d48:	ldr	r0, [pc, #228]	; 10e34 <test_schema@@Base+0x41c>
   10d4c:	add	r0, pc, r0
   10d50:	bl	10868 <printf@plt>
   10d54:	b	10de0 <test_schema@@Base+0x3c8>
   10d58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10d5c:	ldr	r1, [sp, #36]	; 0x24
   10d60:	bl	11560 <test_schema@@Base+0xb48>
   10d64:	bl	11818 <test_schema@@Base+0xe00>
   10d68:	str	r0, [sp, #40]	; 0x28
   10d6c:	ldr	r0, [sp, #40]	; 0x28
   10d70:	bl	11934 <test_schema@@Base+0xf1c>
   10d74:	sxtb	r0, r0
   10d78:	cmp	r0, #14
   10d7c:	beq	10d90 <test_schema@@Base+0x378>
   10d80:	ldr	r0, [pc, #168]	; 10e30 <test_schema@@Base+0x418>
   10d84:	add	r0, pc, r0
   10d88:	bl	10868 <printf@plt>
   10d8c:	b	10de0 <test_schema@@Base+0x3c8>
   10d90:	ldr	r0, [sp, #40]	; 0x28
   10d94:	bl	11b14 <test_schema@@Base+0x10fc>
   10d98:	sxtb	r0, r0
   10d9c:	cmp	r0, #15
   10da0:	beq	10db4 <test_schema@@Base+0x39c>
   10da4:	ldr	r0, [pc, #128]	; 10e2c <test_schema@@Base+0x414>
   10da8:	add	r0, pc, r0
   10dac:	bl	10868 <printf@plt>
   10db0:	b	10de0 <test_schema@@Base+0x3c8>
   10db4:	ldr	r0, [sp, #40]	; 0x28
   10db8:	bl	11a28 <test_schema@@Base+0x1010>
   10dbc:	ldr	r1, [sp, #32]
   10dc0:	cmp	r0, r1
   10dc4:	beq	10dd8 <test_schema@@Base+0x3c0>
   10dc8:	ldr	r0, [pc, #88]	; 10e28 <test_schema@@Base+0x410>
   10dcc:	add	r0, pc, r0
   10dd0:	bl	10868 <printf@plt>
   10dd4:	b	10de0 <test_schema@@Base+0x3c8>
   10dd8:	movw	r0, #0
   10ddc:	str	r0, [fp, #-16]
   10de0:	ldr	r0, [fp, #-8]
   10de4:	movw	r1, #0
   10de8:	cmp	r0, r1
   10dec:	beq	10df8 <test_schema@@Base+0x3e0>
   10df0:	ldr	r0, [fp, #-8]
   10df4:	bl	10880 <free@plt>
   10df8:	ldr	r0, [fp, #-16]
   10dfc:	mov	sp, fp
   10e00:	pop	{fp, pc}
   10e04:	andeq	r1, r0, r0, ror #16
   10e08:	andeq	r2, r1, ip, asr r5
   10e0c:	strdeq	r1, [r0], -r9
   10e10:	ldrdeq	r2, [r1], -r0
   10e14:	andeq	r1, r0, r8, asr #15
   10e18:	andeq	r2, r1, r4, asr #7
   10e1c:	andeq	r1, r0, sp, lsr r7
   10e20:	andeq	r2, r1, ip, lsr #6
   10e24:	strdeq	r1, [r0], -r2
   10e28:	andeq	r1, r0, r9, asr #13
   10e2c:			; <UNDEFINED> instruction: 0x000016be
   10e30:			; <UNDEFINED> instruction: 0x000016bb
   10e34:	ldrdeq	r1, [r0], -r8
   10e38:	andeq	r1, r0, sl, ror #13
   10e3c:	strdeq	r1, [r0], -r6
   10e40:	andeq	r1, r0, r7, lsl r7
   10e44:	andeq	r1, r0, r2, lsr r7
   10e48:	andeq	r1, r0, ip, ror r7
   10e4c:	muleq	r0, r4, r7
   10e50:	andeq	r1, r0, ip, lsl #15
   10e54:	muleq	r0, sp, r7
   10e58:	andeq	r1, r0, r2, asr #15
   10e5c:	andeq	r1, r0, r4, ror #15
   10e60:	andeq	r1, r0, r2, lsl r8
   10e64:	muleq	r0, sp, r7
   10e68:	andeq	r1, r0, r4, ror r7
   10e6c:	push	{fp, lr}
   10e70:	mov	fp, sp
   10e74:	sub	sp, sp, #56	; 0x38
   10e78:	str	r0, [fp, #-8]
   10e7c:	str	r1, [fp, #-12]
   10e80:	str	r2, [fp, #-16]
   10e84:	ldr	r0, [fp, #-16]
   10e88:	movw	r1, #0
   10e8c:	cmp	r0, r1
   10e90:	beq	10ea0 <test_schema@@Base+0x488>
   10e94:	ldr	r0, [fp, #-16]
   10e98:	str	r0, [sp, #12]
   10e9c:	b	10eac <test_schema@@Base+0x494>
   10ea0:	add	r0, sp, #20
   10ea4:	str	r0, [sp, #12]
   10ea8:	b	10eac <test_schema@@Base+0x494>
   10eac:	ldr	r0, [sp, #12]
   10eb0:	ldr	r1, [pc, #408]	; 11050 <test_schema@@Base+0x638>
   10eb4:	add	r1, pc, r1
   10eb8:	str	r0, [fp, #-16]
   10ebc:	ldr	r0, [fp, #-8]
   10ec0:	bl	10874 <fopen@plt>
   10ec4:	str	r0, [fp, #-20]	; 0xffffffec
   10ec8:	movw	r0, #0
   10ecc:	str	r0, [fp, #-24]	; 0xffffffe8
   10ed0:	str	r0, [sp, #16]
   10ed4:	ldr	r1, [fp, #-20]	; 0xffffffec
   10ed8:	cmp	r1, r0
   10edc:	bne	10ee4 <test_schema@@Base+0x4cc>
   10ee0:	b	11000 <test_schema@@Base+0x5e8>
   10ee4:	ldr	r0, [fp, #-20]	; 0xffffffec
   10ee8:	movw	r1, #0
   10eec:	movw	r2, #2
   10ef0:	bl	10904 <fseek@plt>
   10ef4:	ldr	r1, [fp, #-20]	; 0xffffffec
   10ef8:	str	r0, [sp, #8]
   10efc:	mov	r0, r1
   10f00:	bl	1088c <ftell@plt>
   10f04:	str	r0, [fp, #-24]	; 0xffffffe8
   10f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f0c:	ldr	r1, [fp, #-16]
   10f10:	str	r0, [r1]
   10f14:	ldr	r0, [fp, #-12]
   10f18:	cmp	r0, #0
   10f1c:	bls	10f34 <test_schema@@Base+0x51c>
   10f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f24:	ldr	r1, [fp, #-12]
   10f28:	cmp	r0, r1
   10f2c:	bls	10f34 <test_schema@@Base+0x51c>
   10f30:	b	11000 <test_schema@@Base+0x5e8>
   10f34:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f38:	bl	10898 <rewind@plt>
   10f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f40:	cmp	r0, #0
   10f44:	beq	10f54 <test_schema@@Base+0x53c>
   10f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f4c:	str	r0, [sp, #4]
   10f50:	b	10f60 <test_schema@@Base+0x548>
   10f54:	movw	r0, #1
   10f58:	str	r0, [sp, #4]
   10f5c:	b	10f60 <test_schema@@Base+0x548>
   10f60:	ldr	r0, [sp, #4]
   10f64:	bl	108b0 <malloc@plt>
   10f68:	str	r0, [sp, #16]
   10f6c:	ldr	r0, [sp, #16]
   10f70:	movw	r1, #0
   10f74:	cmp	r0, r1
   10f78:	bne	10f80 <test_schema@@Base+0x568>
   10f7c:	b	11000 <test_schema@@Base+0x5e8>
   10f80:	movw	r0, #0
   10f84:	str	r0, [sp, #28]
   10f88:	ldr	r0, [sp, #16]
   10f8c:	ldr	r1, [sp, #28]
   10f90:	add	r0, r0, r1
   10f94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f98:	ldr	r2, [sp, #28]
   10f9c:	sub	r2, r1, r2
   10fa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fa4:	movw	r1, #1
   10fa8:	bl	108a4 <fread@plt>
   10fac:	str	r0, [sp, #24]
   10fb0:	cmp	r0, #0
   10fb4:	beq	10fcc <test_schema@@Base+0x5b4>
   10fb8:	ldr	r0, [sp, #24]
   10fbc:	ldr	r1, [sp, #28]
   10fc0:	add	r0, r1, r0
   10fc4:	str	r0, [sp, #28]
   10fc8:	b	10f88 <test_schema@@Base+0x570>
   10fcc:	ldr	r0, [sp, #28]
   10fd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10fd4:	cmp	r0, r1
   10fd8:	beq	10fe0 <test_schema@@Base+0x5c8>
   10fdc:	b	11000 <test_schema@@Base+0x5e8>
   10fe0:	ldr	r0, [fp, #-20]	; 0xffffffec
   10fe4:	bl	108f8 <fclose@plt>
   10fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10fec:	ldr	r2, [fp, #-16]
   10ff0:	str	r1, [r2]
   10ff4:	ldr	r1, [sp, #16]
   10ff8:	str	r1, [fp, #-4]
   10ffc:	b	11044 <test_schema@@Base+0x62c>
   11000:	ldr	r0, [fp, #-20]	; 0xffffffec
   11004:	movw	r1, #0
   11008:	cmp	r0, r1
   1100c:	beq	11018 <test_schema@@Base+0x600>
   11010:	ldr	r0, [fp, #-20]	; 0xffffffec
   11014:	bl	108f8 <fclose@plt>
   11018:	ldr	r0, [sp, #16]
   1101c:	movw	r1, #0
   11020:	cmp	r0, r1
   11024:	beq	11030 <test_schema@@Base+0x618>
   11028:	ldr	r0, [sp, #16]
   1102c:	bl	10880 <free@plt>
   11030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11034:	ldr	r1, [fp, #-16]
   11038:	str	r0, [r1]
   1103c:	movw	r0, #0
   11040:	str	r0, [fp, #-4]
   11044:	ldr	r0, [fp, #-4]
   11048:	mov	sp, fp
   1104c:	pop	{fp, pc}
   11050:	andeq	r1, r0, r7, ror #12
   11054:	push	{fp, lr}
   11058:	mov	fp, sp
   1105c:	sub	sp, sp, #16
   11060:	ldr	r1, [pc, #100]	; 110cc <test_schema@@Base+0x6b4>
   11064:	add	r1, pc, r1
   11068:	str	r0, [fp, #-4]
   1106c:	str	r1, [sp, #8]
   11070:	ldr	r0, [fp, #-4]
   11074:	movw	r1, #0
   11078:	cmp	r0, r1
   1107c:	beq	11094 <test_schema@@Base+0x67c>
   11080:	ldr	r0, [fp, #-4]
   11084:	ldr	r1, [sp, #8]
   11088:	bl	11cac <main@@Base+0xa4>
   1108c:	cmp	r0, #0
   11090:	bne	110a0 <test_schema@@Base+0x688>
   11094:	movw	r0, #0
   11098:	str	r0, [sp, #4]
   1109c:	b	110c0 <test_schema@@Base+0x6a8>
   110a0:	ldr	r0, [fp, #-4]
   110a4:	ldr	r1, [fp, #-4]
   110a8:	str	r0, [sp]
   110ac:	mov	r0, r1
   110b0:	bl	11d58 <main@@Base+0x150>
   110b4:	ldr	r1, [sp]
   110b8:	add	r0, r1, r0
   110bc:	str	r0, [sp, #4]
   110c0:	ldr	r0, [sp, #4]
   110c4:	mov	sp, fp
   110c8:	pop	{fp, pc}
   110cc:			; <UNDEFINED> instruction: 0x000014ba
   110d0:	push	{fp, lr}
   110d4:	mov	fp, sp
   110d8:	sub	sp, sp, #24
   110dc:	str	r0, [fp, #-4]
   110e0:	movw	r0, #0
   110e4:	strh	r0, [fp, #-10]
   110e8:	ldr	r0, [fp, #-4]
   110ec:	movw	r1, #0
   110f0:	cmp	r0, r1
   110f4:	beq	11100 <test_schema@@Base+0x6e8>
   110f8:	b	110fc <test_schema@@Base+0x6e4>
   110fc:	b	11120 <test_schema@@Base+0x708>
   11100:	ldr	r0, [pc, #208]	; 111d8 <test_schema@@Base+0x7c0>
   11104:	add	r0, pc, r0
   11108:	ldr	r1, [pc, #204]	; 111dc <test_schema@@Base+0x7c4>
   1110c:	add	r1, pc, r1
   11110:	ldr	r2, [pc, #200]	; 111e0 <test_schema@@Base+0x7c8>
   11114:	add	r3, pc, r2
   11118:	movw	r2, #237	; 0xed
   1111c:	bl	1091c <__assert_fail@plt>
   11120:	mov	r0, #0
   11124:	strh	r0, [sp, #12]
   11128:	ldr	r0, [fp, #-4]
   1112c:	str	r0, [sp, #4]
   11130:	bl	11ddc <main@@Base+0x1d4>
   11134:	ldr	r1, [sp, #4]
   11138:	sub	r0, r1, r0
   1113c:	str	r0, [sp, #8]
   11140:	ldr	r0, [sp, #8]
   11144:	bl	11e00 <main@@Base+0x1f8>
   11148:	ldrh	r1, [sp, #12]
   1114c:	add	r1, r1, #3
   11150:	lsl	r1, r1, #1
   11154:	cmp	r0, r1
   11158:	bcc	11174 <test_schema@@Base+0x75c>
   1115c:	ldr	r0, [sp, #8]
   11160:	ldrh	r1, [sp, #12]
   11164:	add	r0, r0, r1, lsl #1
   11168:	add	r0, r0, #4
   1116c:	bl	11e00 <main@@Base+0x1f8>
   11170:	strh	r0, [fp, #-10]
   11174:	ldrsh	r0, [fp, #-10]
   11178:	cmp	r0, #0
   1117c:	beq	111b8 <test_schema@@Base+0x7a0>
   11180:	ldr	r0, [fp, #-4]
   11184:	ldrh	r1, [fp, #-10]
   11188:	add	r0, r0, r1
   1118c:	str	r0, [fp, #-8]
   11190:	ldr	r0, [fp, #-8]
   11194:	add	r0, r0, #4
   11198:	ldr	r1, [fp, #-8]
   1119c:	str	r0, [sp]
   111a0:	mov	r0, r1
   111a4:	bl	11d58 <main@@Base+0x150>
   111a8:	ldr	r1, [sp]
   111ac:	add	r0, r1, r0
   111b0:	mov	sp, fp
   111b4:	pop	{fp, pc}
   111b8:	ldr	r0, [pc, #36]	; 111e4 <test_schema@@Base+0x7cc>
   111bc:	add	r0, pc, r0
   111c0:	ldr	r1, [pc, #32]	; 111e8 <test_schema@@Base+0x7d0>
   111c4:	add	r1, pc, r1
   111c8:	ldr	r2, [pc, #28]	; 111ec <test_schema@@Base+0x7d4>
   111cc:	add	r3, pc, r2
   111d0:	movw	r2, #237	; 0xed
   111d4:	bl	1091c <__assert_fail@plt>
   111d8:	andeq	r1, r0, r9, lsr r4
   111dc:	andeq	r1, r0, r7, asr r4
   111e0:	andeq	r1, r0, r4, asr #9
   111e4:	andeq	r1, r0, r9, ror #8
   111e8:	muleq	r0, pc, r3	; <UNPREDICTABLE>
   111ec:	andeq	r1, r0, ip, lsl #8
   111f0:	push	{fp, lr}
   111f4:	mov	fp, sp
   111f8:	sub	sp, sp, #8
   111fc:	str	r0, [sp, #4]
   11200:	ldr	r0, [sp, #4]
   11204:	movw	r1, #0
   11208:	cmp	r0, r1
   1120c:	beq	11228 <test_schema@@Base+0x810>
   11210:	ldr	r0, [sp, #4]
   11214:	mvn	r1, #3
   11218:	add	r0, r0, r1
   1121c:	bl	11d58 <main@@Base+0x150>
   11220:	str	r0, [sp]
   11224:	b	11234 <test_schema@@Base+0x81c>
   11228:	movw	r0, #0
   1122c:	str	r0, [sp]
   11230:	b	11234 <test_schema@@Base+0x81c>
   11234:	ldr	r0, [sp]
   11238:	mov	sp, fp
   1123c:	pop	{fp, pc}
   11240:	push	{fp, lr}
   11244:	mov	fp, sp
   11248:	sub	sp, sp, #24
   1124c:	str	r0, [fp, #-4]
   11250:	movw	r0, #0
   11254:	strh	r0, [fp, #-10]
   11258:	ldr	r0, [fp, #-4]
   1125c:	movw	r1, #0
   11260:	cmp	r0, r1
   11264:	beq	11270 <test_schema@@Base+0x858>
   11268:	b	1126c <test_schema@@Base+0x854>
   1126c:	b	11290 <test_schema@@Base+0x878>
   11270:	ldr	r0, [pc, #208]	; 11348 <test_schema@@Base+0x930>
   11274:	add	r0, pc, r0
   11278:	ldr	r1, [pc, #204]	; 1134c <test_schema@@Base+0x934>
   1127c:	add	r1, pc, r1
   11280:	ldr	r2, [pc, #200]	; 11350 <test_schema@@Base+0x938>
   11284:	add	r3, pc, r2
   11288:	movw	r2, #218	; 0xda
   1128c:	bl	1091c <__assert_fail@plt>
   11290:	mov	r0, #0
   11294:	strh	r0, [sp, #12]
   11298:	ldr	r0, [fp, #-4]
   1129c:	str	r0, [sp, #4]
   112a0:	bl	11ddc <main@@Base+0x1d4>
   112a4:	ldr	r1, [sp, #4]
   112a8:	sub	r0, r1, r0
   112ac:	str	r0, [sp, #8]
   112b0:	ldr	r0, [sp, #8]
   112b4:	bl	11e00 <main@@Base+0x1f8>
   112b8:	ldrh	r1, [sp, #12]
   112bc:	add	r1, r1, #3
   112c0:	lsl	r1, r1, #1
   112c4:	cmp	r0, r1
   112c8:	bcc	112e4 <test_schema@@Base+0x8cc>
   112cc:	ldr	r0, [sp, #8]
   112d0:	ldrh	r1, [sp, #12]
   112d4:	add	r0, r0, r1, lsl #1
   112d8:	add	r0, r0, #4
   112dc:	bl	11e00 <main@@Base+0x1f8>
   112e0:	strh	r0, [fp, #-10]
   112e4:	ldrsh	r0, [fp, #-10]
   112e8:	cmp	r0, #0
   112ec:	beq	11328 <test_schema@@Base+0x910>
   112f0:	ldr	r0, [fp, #-4]
   112f4:	ldrh	r1, [fp, #-10]
   112f8:	add	r0, r0, r1
   112fc:	str	r0, [fp, #-8]
   11300:	ldr	r0, [fp, #-8]
   11304:	add	r0, r0, #4
   11308:	ldr	r1, [fp, #-8]
   1130c:	str	r0, [sp]
   11310:	mov	r0, r1
   11314:	bl	11d58 <main@@Base+0x150>
   11318:	ldr	r1, [sp]
   1131c:	add	r0, r1, r0
   11320:	mov	sp, fp
   11324:	pop	{fp, pc}
   11328:	ldr	r0, [pc, #36]	; 11354 <test_schema@@Base+0x93c>
   1132c:	add	r0, pc, r0
   11330:	ldr	r1, [pc, #32]	; 11358 <test_schema@@Base+0x940>
   11334:	add	r1, pc, r1
   11338:	ldr	r2, [pc, #28]	; 1135c <test_schema@@Base+0x944>
   1133c:	add	r3, pc, r2
   11340:	movw	r2, #218	; 0xda
   11344:	bl	1091c <__assert_fail@plt>
   11348:	andeq	r1, r0, r9, asr #5
   1134c:	andeq	r1, r0, r7, ror #5
   11350:	andeq	r1, r0, r2, asr #7
   11354:	strdeq	r1, [r0], -r9
   11358:	andeq	r1, r0, pc, lsr #4
   1135c:	andeq	r1, r0, sl, lsl #6
   11360:	push	{fp, lr}
   11364:	mov	fp, sp
   11368:	sub	sp, sp, #16
   1136c:	str	r0, [fp, #-4]
   11370:	str	r1, [sp, #8]
   11374:	ldr	r0, [fp, #-4]
   11378:	ldr	r1, [sp, #8]
   1137c:	add	r0, r0, r1, lsl #2
   11380:	str	r0, [sp, #4]
   11384:	ldr	r0, [fp, #-4]
   11388:	bl	11e50 <main@@Base+0x248>
   1138c:	ldr	r1, [sp, #8]
   11390:	cmp	r0, r1
   11394:	bls	113a0 <test_schema@@Base+0x988>
   11398:	b	1139c <test_schema@@Base+0x984>
   1139c:	b	113c0 <test_schema@@Base+0x9a8>
   113a0:	ldr	r0, [pc, #60]	; 113e4 <test_schema@@Base+0x9cc>
   113a4:	add	r0, pc, r0
   113a8:	ldr	r1, [pc, #56]	; 113e8 <test_schema@@Base+0x9d0>
   113ac:	add	r1, pc, r1
   113b0:	ldr	r2, [pc, #52]	; 113ec <test_schema@@Base+0x9d4>
   113b4:	add	r3, pc, r2
   113b8:	movw	r2, #215	; 0xd7
   113bc:	bl	1091c <__assert_fail@plt>
   113c0:	ldr	r0, [sp, #4]
   113c4:	ldr	r1, [sp, #4]
   113c8:	str	r0, [sp]
   113cc:	mov	r0, r1
   113d0:	bl	11d58 <main@@Base+0x150>
   113d4:	ldr	r1, [sp]
   113d8:	add	r0, r1, r0
   113dc:	mov	sp, fp
   113e0:	pop	{fp, pc}
   113e4:	strdeq	r1, [r0], -ip
   113e8:			; <UNDEFINED> instruction: 0x000011b7
   113ec:	andeq	r1, r0, r3, lsr #6
   113f0:	push	{fp, lr}
   113f4:	mov	fp, sp
   113f8:	sub	sp, sp, #8
   113fc:	str	r0, [sp, #4]
   11400:	str	r1, [sp]
   11404:	ldr	r0, [sp, #4]
   11408:	ldr	r1, [sp]
   1140c:	bl	11ea0 <main@@Base+0x298>
   11410:	mov	sp, fp
   11414:	pop	{fp, pc}
   11418:	push	{fp, lr}
   1141c:	mov	fp, sp
   11420:	sub	sp, sp, #24
   11424:	str	r0, [fp, #-4]
   11428:	movw	r0, #0
   1142c:	strh	r0, [fp, #-10]
   11430:	ldr	r0, [fp, #-4]
   11434:	movw	r1, #0
   11438:	cmp	r0, r1
   1143c:	beq	11448 <test_schema@@Base+0xa30>
   11440:	b	11444 <test_schema@@Base+0xa2c>
   11444:	b	11468 <test_schema@@Base+0xa50>
   11448:	ldr	r0, [pc, #208]	; 11520 <test_schema@@Base+0xb08>
   1144c:	add	r0, pc, r0
   11450:	ldr	r1, [pc, #204]	; 11524 <test_schema@@Base+0xb0c>
   11454:	add	r1, pc, r1
   11458:	ldr	r2, [pc, #200]	; 11528 <test_schema@@Base+0xb10>
   1145c:	add	r3, pc, r2
   11460:	movw	r2, #224	; 0xe0
   11464:	bl	1091c <__assert_fail@plt>
   11468:	mov	r0, #1
   1146c:	strh	r0, [sp, #12]
   11470:	ldr	r0, [fp, #-4]
   11474:	str	r0, [sp, #4]
   11478:	bl	11ddc <main@@Base+0x1d4>
   1147c:	ldr	r1, [sp, #4]
   11480:	sub	r0, r1, r0
   11484:	str	r0, [sp, #8]
   11488:	ldr	r0, [sp, #8]
   1148c:	bl	11e00 <main@@Base+0x1f8>
   11490:	ldrh	r1, [sp, #12]
   11494:	add	r1, r1, #3
   11498:	lsl	r1, r1, #1
   1149c:	cmp	r0, r1
   114a0:	bcc	114bc <test_schema@@Base+0xaa4>
   114a4:	ldr	r0, [sp, #8]
   114a8:	ldrh	r1, [sp, #12]
   114ac:	add	r0, r0, r1, lsl #1
   114b0:	add	r0, r0, #4
   114b4:	bl	11e00 <main@@Base+0x1f8>
   114b8:	strh	r0, [fp, #-10]
   114bc:	ldrsh	r0, [fp, #-10]
   114c0:	cmp	r0, #0
   114c4:	beq	11500 <test_schema@@Base+0xae8>
   114c8:	ldr	r0, [fp, #-4]
   114cc:	ldrh	r1, [fp, #-10]
   114d0:	add	r0, r0, r1
   114d4:	str	r0, [fp, #-8]
   114d8:	ldr	r0, [fp, #-8]
   114dc:	add	r0, r0, #4
   114e0:	ldr	r1, [fp, #-8]
   114e4:	str	r0, [sp]
   114e8:	mov	r0, r1
   114ec:	bl	11d58 <main@@Base+0x150>
   114f0:	ldr	r1, [sp]
   114f4:	add	r0, r1, r0
   114f8:	mov	sp, fp
   114fc:	pop	{fp, pc}
   11500:	ldr	r0, [pc, #36]	; 1152c <test_schema@@Base+0xb14>
   11504:	add	r0, pc, r0
   11508:	ldr	r1, [pc, #32]	; 11530 <test_schema@@Base+0xb18>
   1150c:	add	r1, pc, r1
   11510:	ldr	r2, [pc, #28]	; 11534 <test_schema@@Base+0xb1c>
   11514:	add	r3, pc, r2
   11518:	movw	r2, #224	; 0xe0
   1151c:	bl	1091c <__assert_fail@plt>
   11520:	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   11524:	andeq	r1, r0, pc, lsl #2
   11528:	andeq	r1, r0, pc, asr #5
   1152c:	andeq	r1, r0, r1, lsr #2
   11530:	andeq	r1, r0, r7, asr r0
   11534:	andeq	r1, r0, r7, lsl r2
   11538:	push	{fp, lr}
   1153c:	mov	fp, sp
   11540:	sub	sp, sp, #8
   11544:	str	r0, [sp, #4]
   11548:	str	r1, [sp]
   1154c:	ldr	r0, [sp, #4]
   11550:	ldr	r1, [sp]
   11554:	bl	12004 <main@@Base+0x3fc>
   11558:	mov	sp, fp
   1155c:	pop	{fp, pc}
   11560:	push	{fp, lr}
   11564:	mov	fp, sp
   11568:	sub	sp, sp, #16
   1156c:	str	r0, [fp, #-4]
   11570:	str	r1, [sp, #8]
   11574:	ldr	r0, [fp, #-4]
   11578:	ldr	r1, [sp, #8]
   1157c:	add	r0, r0, r1, lsl #2
   11580:	str	r0, [sp, #4]
   11584:	ldr	r0, [fp, #-4]
   11588:	bl	11e50 <main@@Base+0x248>
   1158c:	ldr	r1, [sp, #8]
   11590:	cmp	r0, r1
   11594:	bls	115a0 <test_schema@@Base+0xb88>
   11598:	b	1159c <test_schema@@Base+0xb84>
   1159c:	b	115c0 <test_schema@@Base+0xba8>
   115a0:	ldr	r0, [pc, #60]	; 115e4 <test_schema@@Base+0xbcc>
   115a4:	add	r0, pc, r0
   115a8:	ldr	r1, [pc, #56]	; 115e8 <test_schema@@Base+0xbd0>
   115ac:	add	r1, pc, r1
   115b0:	ldr	r2, [pc, #52]	; 115ec <test_schema@@Base+0xbd4>
   115b4:	add	r3, pc, r2
   115b8:	movw	r2, #192	; 0xc0
   115bc:	bl	1091c <__assert_fail@plt>
   115c0:	ldr	r0, [sp, #4]
   115c4:	ldr	r1, [sp, #4]
   115c8:	str	r0, [sp]
   115cc:	mov	r0, r1
   115d0:	bl	11d58 <main@@Base+0x150>
   115d4:	ldr	r1, [sp]
   115d8:	add	r0, r1, r0
   115dc:	mov	sp, fp
   115e0:	pop	{fp, pc}
   115e4:	strdeq	r1, [r0], -ip
   115e8:			; <UNDEFINED> instruction: 0x00000fb7
   115ec:	andeq	r1, r0, r2, asr #3
   115f0:	push	{fp, lr}
   115f4:	mov	fp, sp
   115f8:	sub	sp, sp, #32
   115fc:	str	r0, [fp, #-4]
   11600:	movw	r0, #0
   11604:	strh	r0, [fp, #-6]
   11608:	ldr	r0, [fp, #-4]
   1160c:	movw	r1, #0
   11610:	cmp	r0, r1
   11614:	beq	11620 <test_schema@@Base+0xc08>
   11618:	b	1161c <test_schema@@Base+0xc04>
   1161c:	b	11640 <test_schema@@Base+0xc28>
   11620:	ldr	r0, [pc, #196]	; 116ec <test_schema@@Base+0xcd4>
   11624:	add	r0, pc, r0
   11628:	ldr	r1, [pc, #192]	; 116f0 <test_schema@@Base+0xcd8>
   1162c:	add	r1, pc, r1
   11630:	ldr	r2, [pc, #188]	; 116f4 <test_schema@@Base+0xcdc>
   11634:	add	r3, pc, r2
   11638:	movw	r2, #204	; 0xcc
   1163c:	bl	1091c <__assert_fail@plt>
   11640:	mov	r0, #4
   11644:	strh	r0, [fp, #-8]
   11648:	ldr	r0, [fp, #-4]
   1164c:	str	r0, [sp, #16]
   11650:	bl	11ddc <main@@Base+0x1d4>
   11654:	ldr	r1, [sp, #16]
   11658:	sub	r0, r1, r0
   1165c:	str	r0, [fp, #-12]
   11660:	ldr	r0, [fp, #-12]
   11664:	bl	11e00 <main@@Base+0x1f8>
   11668:	ldrh	r1, [fp, #-8]
   1166c:	add	r1, r1, #3
   11670:	lsl	r1, r1, #1
   11674:	cmp	r0, r1
   11678:	bcc	11694 <test_schema@@Base+0xc7c>
   1167c:	ldr	r0, [fp, #-12]
   11680:	ldrh	r1, [fp, #-8]
   11684:	add	r0, r0, r1, lsl #1
   11688:	add	r0, r0, #4
   1168c:	bl	11e00 <main@@Base+0x1f8>
   11690:	strh	r0, [fp, #-6]
   11694:	ldrh	r0, [fp, #-6]
   11698:	cmp	r0, #0
   1169c:	beq	116bc <test_schema@@Base+0xca4>
   116a0:	ldr	r0, [fp, #-4]
   116a4:	ldrh	r1, [fp, #-6]
   116a8:	add	r0, r0, r1
   116ac:	bl	1218c <main@@Base+0x584>
   116b0:	str	r0, [sp, #12]
   116b4:	str	r1, [sp, #8]
   116b8:	b	116d0 <test_schema@@Base+0xcb8>
   116bc:	mov	r0, #0
   116c0:	mov	r1, r0
   116c4:	str	r1, [sp, #12]
   116c8:	str	r0, [sp, #8]
   116cc:	b	116d0 <test_schema@@Base+0xcb8>
   116d0:	ldr	r0, [sp, #8]
   116d4:	ldr	r1, [sp, #12]
   116d8:	str	r0, [sp, #4]
   116dc:	mov	r0, r1
   116e0:	ldr	r1, [sp, #4]
   116e4:	mov	sp, fp
   116e8:	pop	{fp, pc}
   116ec:	andeq	r0, r0, r9, lsl pc
   116f0:	andeq	r0, r0, r7, lsr pc
   116f4:	muleq	r0, r3, r1
   116f8:	push	{fp, lr}
   116fc:	mov	fp, sp
   11700:	sub	sp, sp, #24
   11704:	str	r0, [fp, #-4]
   11708:	movw	r0, #0
   1170c:	strh	r0, [fp, #-10]
   11710:	ldr	r0, [fp, #-4]
   11714:	movw	r1, #0
   11718:	cmp	r0, r1
   1171c:	beq	11728 <test_schema@@Base+0xd10>
   11720:	b	11724 <test_schema@@Base+0xd0c>
   11724:	b	11748 <test_schema@@Base+0xd30>
   11728:	ldr	r0, [pc, #208]	; 11800 <test_schema@@Base+0xde8>
   1172c:	add	r0, pc, r0
   11730:	ldr	r1, [pc, #204]	; 11804 <test_schema@@Base+0xdec>
   11734:	add	r1, pc, r1
   11738:	ldr	r2, [pc, #200]	; 11808 <test_schema@@Base+0xdf0>
   1173c:	add	r3, pc, r2
   11740:	movw	r2, #195	; 0xc3
   11744:	bl	1091c <__assert_fail@plt>
   11748:	mov	r0, #0
   1174c:	strh	r0, [sp, #12]
   11750:	ldr	r0, [fp, #-4]
   11754:	str	r0, [sp, #4]
   11758:	bl	11ddc <main@@Base+0x1d4>
   1175c:	ldr	r1, [sp, #4]
   11760:	sub	r0, r1, r0
   11764:	str	r0, [sp, #8]
   11768:	ldr	r0, [sp, #8]
   1176c:	bl	11e00 <main@@Base+0x1f8>
   11770:	ldrh	r1, [sp, #12]
   11774:	add	r1, r1, #3
   11778:	lsl	r1, r1, #1
   1177c:	cmp	r0, r1
   11780:	bcc	1179c <test_schema@@Base+0xd84>
   11784:	ldr	r0, [sp, #8]
   11788:	ldrh	r1, [sp, #12]
   1178c:	add	r0, r0, r1, lsl #1
   11790:	add	r0, r0, #4
   11794:	bl	11e00 <main@@Base+0x1f8>
   11798:	strh	r0, [fp, #-10]
   1179c:	ldrsh	r0, [fp, #-10]
   117a0:	cmp	r0, #0
   117a4:	beq	117e0 <test_schema@@Base+0xdc8>
   117a8:	ldr	r0, [fp, #-4]
   117ac:	ldrh	r1, [fp, #-10]
   117b0:	add	r0, r0, r1
   117b4:	str	r0, [fp, #-8]
   117b8:	ldr	r0, [fp, #-8]
   117bc:	add	r0, r0, #4
   117c0:	ldr	r1, [fp, #-8]
   117c4:	str	r0, [sp]
   117c8:	mov	r0, r1
   117cc:	bl	11d58 <main@@Base+0x150>
   117d0:	ldr	r1, [sp]
   117d4:	add	r0, r1, r0
   117d8:	mov	sp, fp
   117dc:	pop	{fp, pc}
   117e0:	ldr	r0, [pc, #36]	; 1180c <test_schema@@Base+0xdf4>
   117e4:	add	r0, pc, r0
   117e8:	ldr	r1, [pc, #32]	; 11810 <test_schema@@Base+0xdf8>
   117ec:	add	r1, pc, r1
   117f0:	ldr	r2, [pc, #28]	; 11814 <test_schema@@Base+0xdfc>
   117f4:	add	r3, pc, r2
   117f8:	movw	r2, #195	; 0xc3
   117fc:	bl	1091c <__assert_fail@plt>
   11800:	andeq	r0, r0, r1, lsl lr
   11804:	andeq	r0, r0, pc, lsr #28
   11808:	andeq	r1, r0, lr, asr #1
   1180c:	andeq	r0, r0, r1, asr #28
   11810:	andeq	r0, r0, r7, ror sp
   11814:	andeq	r1, r0, r6, lsl r0
   11818:	push	{fp, lr}
   1181c:	mov	fp, sp
   11820:	sub	sp, sp, #24
   11824:	str	r0, [fp, #-4]
   11828:	movw	r0, #0
   1182c:	strh	r0, [fp, #-10]
   11830:	ldr	r0, [fp, #-4]
   11834:	movw	r1, #0
   11838:	cmp	r0, r1
   1183c:	beq	11848 <test_schema@@Base+0xe30>
   11840:	b	11844 <test_schema@@Base+0xe2c>
   11844:	b	11868 <test_schema@@Base+0xe50>
   11848:	ldr	r0, [pc, #204]	; 1191c <test_schema@@Base+0xf04>
   1184c:	add	r0, pc, r0
   11850:	ldr	r1, [pc, #200]	; 11920 <test_schema@@Base+0xf08>
   11854:	add	r1, pc, r1
   11858:	ldr	r2, [pc, #196]	; 11924 <test_schema@@Base+0xf0c>
   1185c:	add	r3, pc, r2
   11860:	movw	r2, #201	; 0xc9
   11864:	bl	1091c <__assert_fail@plt>
   11868:	mov	r0, #1
   1186c:	strh	r0, [sp, #12]
   11870:	ldr	r0, [fp, #-4]
   11874:	str	r0, [sp, #4]
   11878:	bl	11ddc <main@@Base+0x1d4>
   1187c:	ldr	r1, [sp, #4]
   11880:	sub	r0, r1, r0
   11884:	str	r0, [sp, #8]
   11888:	ldr	r0, [sp, #8]
   1188c:	bl	11e00 <main@@Base+0x1f8>
   11890:	ldrh	r1, [sp, #12]
   11894:	add	r1, r1, #3
   11898:	lsl	r1, r1, #1
   1189c:	cmp	r0, r1
   118a0:	bcc	118bc <test_schema@@Base+0xea4>
   118a4:	ldr	r0, [sp, #8]
   118a8:	ldrh	r1, [sp, #12]
   118ac:	add	r0, r0, r1, lsl #1
   118b0:	add	r0, r0, #4
   118b4:	bl	11e00 <main@@Base+0x1f8>
   118b8:	strh	r0, [fp, #-10]
   118bc:	ldrsh	r0, [fp, #-10]
   118c0:	cmp	r0, #0
   118c4:	beq	118fc <test_schema@@Base+0xee4>
   118c8:	ldr	r0, [fp, #-4]
   118cc:	ldrh	r1, [fp, #-10]
   118d0:	add	r0, r0, r1
   118d4:	str	r0, [fp, #-8]
   118d8:	ldr	r0, [fp, #-8]
   118dc:	ldr	r1, [fp, #-8]
   118e0:	str	r0, [sp]
   118e4:	mov	r0, r1
   118e8:	bl	11d58 <main@@Base+0x150>
   118ec:	ldr	r1, [sp]
   118f0:	add	r0, r1, r0
   118f4:	mov	sp, fp
   118f8:	pop	{fp, pc}
   118fc:	ldr	r0, [pc, #36]	; 11928 <test_schema@@Base+0xf10>
   11900:	add	r0, pc, r0
   11904:	ldr	r1, [pc, #32]	; 1192c <test_schema@@Base+0xf14>
   11908:	add	r1, pc, r1
   1190c:	ldr	r2, [pc, #28]	; 11930 <test_schema@@Base+0xf18>
   11910:	add	r3, pc, r2
   11914:	movw	r2, #201	; 0xc9
   11918:	bl	1091c <__assert_fail@plt>
   1191c:	strdeq	r0, [r0], -r1
   11920:	andeq	r0, r0, pc, lsl #26
   11924:	strdeq	r0, [r0], -r3
   11928:	andeq	r0, r0, r5, lsr #26
   1192c:	andeq	r0, r0, fp, asr ip
   11930:	andeq	r0, r0, pc, lsr pc
   11934:	push	{fp, lr}
   11938:	mov	fp, sp
   1193c:	sub	sp, sp, #24
   11940:	str	r0, [fp, #-4]
   11944:	movw	r0, #0
   11948:	strh	r0, [fp, #-6]
   1194c:	ldr	r0, [fp, #-4]
   11950:	movw	r1, #0
   11954:	cmp	r0, r1
   11958:	beq	11964 <test_schema@@Base+0xf4c>
   1195c:	b	11960 <test_schema@@Base+0xf48>
   11960:	b	11984 <test_schema@@Base+0xf6c>
   11964:	ldr	r0, [pc, #176]	; 11a1c <test_schema@@Base+0x1004>
   11968:	add	r0, pc, r0
   1196c:	ldr	r1, [pc, #172]	; 11a20 <test_schema@@Base+0x1008>
   11970:	add	r1, pc, r1
   11974:	ldr	r2, [pc, #168]	; 11a24 <test_schema@@Base+0x100c>
   11978:	add	r3, pc, r2
   1197c:	movw	r2, #147	; 0x93
   11980:	bl	1091c <__assert_fail@plt>
   11984:	mov	r0, #0
   11988:	strh	r0, [fp, #-8]
   1198c:	ldr	r0, [fp, #-4]
   11990:	str	r0, [sp, #8]
   11994:	bl	11ddc <main@@Base+0x1d4>
   11998:	ldr	r1, [sp, #8]
   1199c:	sub	r0, r1, r0
   119a0:	str	r0, [sp, #12]
   119a4:	ldr	r0, [sp, #12]
   119a8:	bl	11e00 <main@@Base+0x1f8>
   119ac:	ldrh	r1, [fp, #-8]
   119b0:	add	r1, r1, #3
   119b4:	lsl	r1, r1, #1
   119b8:	cmp	r0, r1
   119bc:	bcc	119d8 <test_schema@@Base+0xfc0>
   119c0:	ldr	r0, [sp, #12]
   119c4:	ldrh	r1, [fp, #-8]
   119c8:	add	r0, r0, r1, lsl #1
   119cc:	add	r0, r0, #4
   119d0:	bl	11e00 <main@@Base+0x1f8>
   119d4:	strh	r0, [fp, #-6]
   119d8:	ldrh	r0, [fp, #-6]
   119dc:	cmp	r0, #0
   119e0:	beq	11a00 <test_schema@@Base+0xfe8>
   119e4:	ldr	r0, [fp, #-4]
   119e8:	ldrh	r1, [fp, #-6]
   119ec:	add	r0, r0, r1
   119f0:	bl	121dc <main@@Base+0x5d4>
   119f4:	sxtb	r0, r0
   119f8:	str	r0, [sp, #4]
   119fc:	b	11a0c <test_schema@@Base+0xff4>
   11a00:	movw	r0, #0
   11a04:	str	r0, [sp, #4]
   11a08:	b	11a0c <test_schema@@Base+0xff4>
   11a0c:	ldr	r0, [sp, #4]
   11a10:	sxtb	r0, r0
   11a14:	mov	sp, fp
   11a18:	pop	{fp, pc}
   11a1c:	ldrdeq	r0, [r0], -r5
   11a20:	strdeq	r0, [r0], -r3
   11a24:	andeq	r0, r0, pc, lsl pc
   11a28:	push	{fp, lr}
   11a2c:	mov	fp, sp
   11a30:	sub	sp, sp, #24
   11a34:	str	r0, [fp, #-4]
   11a38:	movw	r0, #0
   11a3c:	strh	r0, [fp, #-6]
   11a40:	ldr	r0, [fp, #-4]
   11a44:	movw	r1, #0
   11a48:	cmp	r0, r1
   11a4c:	beq	11a58 <test_schema@@Base+0x1040>
   11a50:	b	11a54 <test_schema@@Base+0x103c>
   11a54:	b	11a78 <test_schema@@Base+0x1060>
   11a58:	ldr	r0, [pc, #168]	; 11b08 <test_schema@@Base+0x10f0>
   11a5c:	add	r0, pc, r0
   11a60:	ldr	r1, [pc, #164]	; 11b0c <test_schema@@Base+0x10f4>
   11a64:	add	r1, pc, r1
   11a68:	ldr	r2, [pc, #160]	; 11b10 <test_schema@@Base+0x10f8>
   11a6c:	add	r3, pc, r2
   11a70:	movw	r2, #149	; 0x95
   11a74:	bl	1091c <__assert_fail@plt>
   11a78:	mov	r0, #2
   11a7c:	strh	r0, [fp, #-8]
   11a80:	ldr	r0, [fp, #-4]
   11a84:	str	r0, [sp, #8]
   11a88:	bl	11ddc <main@@Base+0x1d4>
   11a8c:	ldr	r1, [sp, #8]
   11a90:	sub	r0, r1, r0
   11a94:	str	r0, [sp, #12]
   11a98:	ldr	r0, [sp, #12]
   11a9c:	bl	11e00 <main@@Base+0x1f8>
   11aa0:	ldrh	r1, [fp, #-8]
   11aa4:	add	r1, r1, #3
   11aa8:	lsl	r1, r1, #1
   11aac:	cmp	r0, r1
   11ab0:	bcc	11acc <test_schema@@Base+0x10b4>
   11ab4:	ldr	r0, [sp, #12]
   11ab8:	ldrh	r1, [fp, #-8]
   11abc:	add	r0, r0, r1, lsl #1
   11ac0:	add	r0, r0, #4
   11ac4:	bl	11e00 <main@@Base+0x1f8>
   11ac8:	strh	r0, [fp, #-6]
   11acc:	ldrh	r0, [fp, #-6]
   11ad0:	cmp	r0, #0
   11ad4:	beq	11af0 <test_schema@@Base+0x10d8>
   11ad8:	ldr	r0, [fp, #-4]
   11adc:	ldrh	r1, [fp, #-6]
   11ae0:	add	r0, r0, r1
   11ae4:	bl	12218 <main@@Base+0x610>
   11ae8:	str	r0, [sp, #4]
   11aec:	b	11afc <test_schema@@Base+0x10e4>
   11af0:	mvn	r0, #0
   11af4:	str	r0, [sp, #4]
   11af8:	b	11afc <test_schema@@Base+0x10e4>
   11afc:	ldr	r0, [sp, #4]
   11b00:	mov	sp, fp
   11b04:	pop	{fp, pc}
   11b08:	andeq	r0, r0, r1, ror #21
   11b0c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11b10:	andeq	r0, r0, r9, ror lr
   11b14:	push	{fp, lr}
   11b18:	mov	fp, sp
   11b1c:	sub	sp, sp, #24
   11b20:	str	r0, [fp, #-4]
   11b24:	movw	r0, #0
   11b28:	strh	r0, [fp, #-6]
   11b2c:	ldr	r0, [fp, #-4]
   11b30:	movw	r1, #0
   11b34:	cmp	r0, r1
   11b38:	beq	11b44 <test_schema@@Base+0x112c>
   11b3c:	b	11b40 <test_schema@@Base+0x1128>
   11b40:	b	11b64 <test_schema@@Base+0x114c>
   11b44:	ldr	r0, [pc, #176]	; 11bfc <test_schema@@Base+0x11e4>
   11b48:	add	r0, pc, r0
   11b4c:	ldr	r1, [pc, #172]	; 11c00 <test_schema@@Base+0x11e8>
   11b50:	add	r1, pc, r1
   11b54:	ldr	r2, [pc, #168]	; 11c04 <test_schema@@Base+0x11ec>
   11b58:	add	r3, pc, r2
   11b5c:	movw	r2, #148	; 0x94
   11b60:	bl	1091c <__assert_fail@plt>
   11b64:	mov	r0, #1
   11b68:	strh	r0, [fp, #-8]
   11b6c:	ldr	r0, [fp, #-4]
   11b70:	str	r0, [sp, #8]
   11b74:	bl	11ddc <main@@Base+0x1d4>
   11b78:	ldr	r1, [sp, #8]
   11b7c:	sub	r0, r1, r0
   11b80:	str	r0, [sp, #12]
   11b84:	ldr	r0, [sp, #12]
   11b88:	bl	11e00 <main@@Base+0x1f8>
   11b8c:	ldrh	r1, [fp, #-8]
   11b90:	add	r1, r1, #3
   11b94:	lsl	r1, r1, #1
   11b98:	cmp	r0, r1
   11b9c:	bcc	11bb8 <test_schema@@Base+0x11a0>
   11ba0:	ldr	r0, [sp, #12]
   11ba4:	ldrh	r1, [fp, #-8]
   11ba8:	add	r0, r0, r1, lsl #1
   11bac:	add	r0, r0, #4
   11bb0:	bl	11e00 <main@@Base+0x1f8>
   11bb4:	strh	r0, [fp, #-6]
   11bb8:	ldrh	r0, [fp, #-6]
   11bbc:	cmp	r0, #0
   11bc0:	beq	11be0 <test_schema@@Base+0x11c8>
   11bc4:	ldr	r0, [fp, #-4]
   11bc8:	ldrh	r1, [fp, #-6]
   11bcc:	add	r0, r0, r1
   11bd0:	bl	121dc <main@@Base+0x5d4>
   11bd4:	sxtb	r0, r0
   11bd8:	str	r0, [sp, #4]
   11bdc:	b	11bec <test_schema@@Base+0x11d4>
   11be0:	movw	r0, #0
   11be4:	str	r0, [sp, #4]
   11be8:	b	11bec <test_schema@@Base+0x11d4>
   11bec:	ldr	r0, [sp, #4]
   11bf0:	sxtb	r0, r0
   11bf4:	mov	sp, fp
   11bf8:	pop	{fp, pc}
   11bfc:	strdeq	r0, [r0], -r5
   11c00:	andeq	r0, r0, r3, lsl sl
   11c04:	andeq	r0, r0, r4, asr #27

00011c08 <main@@Base>:
   11c08:	push	{fp, lr}
   11c0c:	mov	fp, sp
   11c10:	sub	sp, sp, #16
   11c14:	movw	r2, #0
   11c18:	str	r2, [fp, #-4]
   11c1c:	str	r0, [sp, #8]
   11c20:	str	r1, [sp, #4]
   11c24:	ldr	r0, [sp, #8]
   11c28:	cmp	r0, #1
   11c2c:	beq	11c64 <main@@Base+0x5c>
   11c30:	ldr	r0, [sp, #8]
   11c34:	cmp	r0, #2
   11c38:	beq	11c64 <main@@Base+0x5c>
   11c3c:	ldr	r0, [pc, #96]	; 11ca4 <main@@Base+0x9c>
   11c40:	add	r1, pc, r0
   11c44:	ldr	r0, [pc, #92]	; 11ca8 <main@@Base+0xa0>
   11c48:	ldr	r0, [pc, r0]
   11c4c:	ldr	r0, [r0]
   11c50:	bl	108e0 <fprintf@plt>
   11c54:	movw	r1, #1
   11c58:	str	r0, [sp]
   11c5c:	mov	r0, r1
   11c60:	bl	108d4 <exit@plt>
   11c64:	ldr	r0, [sp, #8]
   11c68:	cmp	r0, #2
   11c6c:	bne	11c84 <main@@Base+0x7c>
   11c70:	ldr	r0, [pc, #36]	; 11c9c <main@@Base+0x94>
   11c74:	ldr	r0, [pc, r0]
   11c78:	ldr	r1, [sp, #4]
   11c7c:	ldr	r1, [r1, #4]
   11c80:	str	r1, [r0]
   11c84:	ldr	r0, [pc, #20]	; 11ca0 <main@@Base+0x98>
   11c88:	ldr	r0, [pc, r0]
   11c8c:	ldr	r0, [r0]
   11c90:	bl	10a18 <test_schema@@Base>
   11c94:	mov	sp, fp
   11c98:	pop	{fp, pc}
   11c9c:	ldrdeq	r1, [r1], -ip
   11ca0:	andeq	r1, r1, r8, asr #7
   11ca4:	muleq	r0, sl, r8
   11ca8:	andeq	r1, r1, r0, lsl #8
   11cac:	push	{fp, lr}
   11cb0:	mov	fp, sp
   11cb4:	sub	sp, sp, #32
   11cb8:	str	r0, [fp, #-8]
   11cbc:	str	r1, [fp, #-12]
   11cc0:	movw	r0, #0
   11cc4:	str	r0, [sp, #12]
   11cc8:	ldr	r1, [fp, #-12]
   11ccc:	cmp	r1, r0
   11cd0:	bne	11ce0 <main@@Base+0xd8>
   11cd4:	movw	r0, #1
   11cd8:	str	r0, [fp, #-4]
   11cdc:	b	11d4c <main@@Base+0x144>
   11ce0:	add	r0, sp, #12
   11ce4:	ldr	r1, [fp, #-12]
   11ce8:	movw	r2, #4
   11cec:	bl	108ec <strncpy@plt>
   11cf0:	ldr	r1, [sp, #12]
   11cf4:	str	r0, [sp, #8]
   11cf8:	mov	r0, r1
   11cfc:	bl	11d7c <main@@Base+0x174>
   11d00:	str	r0, [sp, #12]
   11d04:	ldr	r0, [fp, #-8]
   11d08:	add	r0, r0, #4
   11d0c:	bl	11d90 <main@@Base+0x188>
   11d10:	str	r0, [sp, #16]
   11d14:	ldr	r0, [sp, #12]
   11d18:	cmp	r0, #0
   11d1c:	movw	r0, #1
   11d20:	str	r0, [sp, #4]
   11d24:	beq	11d40 <main@@Base+0x138>
   11d28:	ldr	r0, [sp, #16]
   11d2c:	ldr	r1, [sp, #12]
   11d30:	cmp	r0, r1
   11d34:	movw	r0, #0
   11d38:	moveq	r0, #1
   11d3c:	str	r0, [sp, #4]
   11d40:	ldr	r0, [sp, #4]
   11d44:	and	r0, r0, #1
   11d48:	str	r0, [fp, #-4]
   11d4c:	ldr	r0, [fp, #-4]
   11d50:	mov	sp, fp
   11d54:	pop	{fp, pc}
   11d58:	push	{fp, lr}
   11d5c:	mov	fp, sp
   11d60:	sub	sp, sp, #8
   11d64:	str	r0, [sp, #4]
   11d68:	ldr	r0, [sp, #4]
   11d6c:	ldr	r0, [r0]
   11d70:	bl	11dc8 <main@@Base+0x1c0>
   11d74:	mov	sp, fp
   11d78:	pop	{fp, pc}
   11d7c:	sub	sp, sp, #4
   11d80:	str	r0, [sp]
   11d84:	ldr	r0, [sp]
   11d88:	add	sp, sp, #4
   11d8c:	bx	lr
   11d90:	push	{fp, lr}
   11d94:	mov	fp, sp
   11d98:	sub	sp, sp, #8
   11d9c:	str	r0, [sp, #4]
   11da0:	ldr	r0, [sp, #4]
   11da4:	ldr	r0, [r0]
   11da8:	bl	11db4 <main@@Base+0x1ac>
   11dac:	mov	sp, fp
   11db0:	pop	{fp, pc}
   11db4:	sub	sp, sp, #4
   11db8:	str	r0, [sp]
   11dbc:	ldr	r0, [sp]
   11dc0:	add	sp, sp, #4
   11dc4:	bx	lr
   11dc8:	sub	sp, sp, #4
   11dcc:	str	r0, [sp]
   11dd0:	ldr	r0, [sp]
   11dd4:	add	sp, sp, #4
   11dd8:	bx	lr
   11ddc:	push	{fp, lr}
   11de0:	mov	fp, sp
   11de4:	sub	sp, sp, #8
   11de8:	str	r0, [sp, #4]
   11dec:	ldr	r0, [sp, #4]
   11df0:	ldr	r0, [r0]
   11df4:	bl	11e28 <main@@Base+0x220>
   11df8:	mov	sp, fp
   11dfc:	pop	{fp, pc}
   11e00:	push	{fp, lr}
   11e04:	mov	fp, sp
   11e08:	sub	sp, sp, #8
   11e0c:	str	r0, [sp, #4]
   11e10:	ldr	r0, [sp, #4]
   11e14:	ldrh	r0, [r0]
   11e18:	bl	11e3c <main@@Base+0x234>
   11e1c:	uxth	r0, r0
   11e20:	mov	sp, fp
   11e24:	pop	{fp, pc}
   11e28:	sub	sp, sp, #4
   11e2c:	str	r0, [sp]
   11e30:	ldr	r0, [sp]
   11e34:	add	sp, sp, #4
   11e38:	bx	lr
   11e3c:	sub	sp, sp, #4
   11e40:	strh	r0, [sp, #2]
   11e44:	ldrh	r0, [sp, #2]
   11e48:	add	sp, sp, #4
   11e4c:	bx	lr
   11e50:	push	{fp, lr}
   11e54:	mov	fp, sp
   11e58:	sub	sp, sp, #8
   11e5c:	str	r0, [sp, #4]
   11e60:	ldr	r0, [sp, #4]
   11e64:	movw	r1, #0
   11e68:	cmp	r0, r1
   11e6c:	beq	11e88 <main@@Base+0x280>
   11e70:	ldr	r0, [sp, #4]
   11e74:	mvn	r1, #3
   11e78:	add	r0, r0, r1
   11e7c:	bl	11d58 <main@@Base+0x150>
   11e80:	str	r0, [sp]
   11e84:	b	11e94 <main@@Base+0x28c>
   11e88:	movw	r0, #0
   11e8c:	str	r0, [sp]
   11e90:	b	11e94 <main@@Base+0x28c>
   11e94:	ldr	r0, [sp]
   11e98:	mov	sp, fp
   11e9c:	pop	{fp, pc}
   11ea0:	push	{fp, lr}
   11ea4:	mov	fp, sp
   11ea8:	sub	sp, sp, #32
   11eac:	str	r0, [fp, #-8]
   11eb0:	str	r1, [fp, #-12]
   11eb4:	movw	r0, #0
   11eb8:	str	r0, [sp, #12]
   11ebc:	ldr	r0, [fp, #-8]
   11ec0:	bl	111f0 <test_schema@@Base+0x7d8>
   11ec4:	str	r0, [sp, #8]
   11ec8:	cmp	r0, #0
   11ecc:	bne	11ee4 <main@@Base+0x2dc>
   11ed0:	ldr	r0, [pc, #248]	; 11fd0 <main@@Base+0x3c8>
   11ed4:	add	r0, pc, r0
   11ed8:	ldr	r0, [r0]
   11edc:	str	r0, [fp, #-4]
   11ee0:	b	11fc4 <main@@Base+0x3bc>
   11ee4:	ldr	r0, [sp, #8]
   11ee8:	mvn	r1, #0
   11eec:	add	r0, r0, r1
   11ef0:	str	r0, [sp, #8]
   11ef4:	ldr	r0, [sp, #12]
   11ef8:	ldr	r1, [sp, #8]
   11efc:	cmp	r0, r1
   11f00:	bcs	11f68 <main@@Base+0x360>
   11f04:	ldr	r0, [sp, #12]
   11f08:	ldr	r1, [sp, #8]
   11f0c:	ldr	r2, [sp, #12]
   11f10:	sub	r1, r1, r2
   11f14:	lsr	r1, r1, #1
   11f18:	add	r0, r0, r1
   11f1c:	str	r0, [sp, #4]
   11f20:	ldr	r0, [fp, #-8]
   11f24:	ldr	r1, [sp, #4]
   11f28:	bl	11360 <test_schema@@Base+0x948>
   11f2c:	bl	11240 <test_schema@@Base+0x828>
   11f30:	str	r0, [sp, #16]
   11f34:	ldr	r0, [sp, #16]
   11f38:	ldr	r1, [fp, #-12]
   11f3c:	movw	r2, #0
   11f40:	bl	11fd8 <main@@Base+0x3d0>
   11f44:	cmp	r0, #0
   11f48:	bge	11f5c <main@@Base+0x354>
   11f4c:	ldr	r0, [sp, #4]
   11f50:	add	r0, r0, #1
   11f54:	str	r0, [sp, #12]
   11f58:	b	11f64 <main@@Base+0x35c>
   11f5c:	ldr	r0, [sp, #4]
   11f60:	str	r0, [sp, #8]
   11f64:	b	11ef4 <main@@Base+0x2ec>
   11f68:	ldr	r0, [sp, #12]
   11f6c:	ldr	r1, [sp, #8]
   11f70:	cmp	r0, r1
   11f74:	bne	11fb4 <main@@Base+0x3ac>
   11f78:	ldr	r0, [fp, #-8]
   11f7c:	ldr	r1, [sp, #12]
   11f80:	bl	11360 <test_schema@@Base+0x948>
   11f84:	bl	11240 <test_schema@@Base+0x828>
   11f88:	str	r0, [sp, #16]
   11f8c:	ldr	r0, [sp, #16]
   11f90:	ldr	r1, [fp, #-12]
   11f94:	movw	r2, #0
   11f98:	bl	11fd8 <main@@Base+0x3d0>
   11f9c:	cmp	r0, #0
   11fa0:	bne	11fb0 <main@@Base+0x3a8>
   11fa4:	ldr	r0, [sp, #12]
   11fa8:	str	r0, [fp, #-4]
   11fac:	b	11fc4 <main@@Base+0x3bc>
   11fb0:	b	11fb4 <main@@Base+0x3ac>
   11fb4:	ldr	r0, [pc, #24]	; 11fd4 <main@@Base+0x3cc>
   11fb8:	add	r0, pc, r0
   11fbc:	ldr	r0, [r0]
   11fc0:	str	r0, [fp, #-4]
   11fc4:	ldr	r0, [fp, #-4]
   11fc8:	mov	sp, fp
   11fcc:	pop	{fp, pc}
   11fd0:	andeq	r1, r1, r8, lsl #3
   11fd4:	andeq	r1, r1, r4, lsr #1
   11fd8:	push	{fp, lr}
   11fdc:	mov	fp, sp
   11fe0:	sub	sp, sp, #16
   11fe4:	str	r0, [fp, #-4]
   11fe8:	str	r1, [sp, #8]
   11fec:	str	r2, [sp, #4]
   11ff0:	ldr	r0, [fp, #-4]
   11ff4:	ldr	r1, [sp, #8]
   11ff8:	bl	1085c <strcmp@plt>
   11ffc:	mov	sp, fp
   12000:	pop	{fp, pc}
   12004:	push	{fp, lr}
   12008:	mov	fp, sp
   1200c:	sub	sp, sp, #32
   12010:	str	r0, [fp, #-8]
   12014:	str	r1, [fp, #-12]
   12018:	movw	r0, #0
   1201c:	str	r0, [sp, #12]
   12020:	ldr	r0, [fp, #-8]
   12024:	bl	1213c <main@@Base+0x534>
   12028:	str	r0, [sp, #8]
   1202c:	cmp	r0, #0
   12030:	bne	12048 <main@@Base+0x440>
   12034:	ldr	r0, [pc, #248]	; 12134 <main@@Base+0x52c>
   12038:	add	r0, pc, r0
   1203c:	ldr	r0, [r0]
   12040:	str	r0, [fp, #-4]
   12044:	b	12128 <main@@Base+0x520>
   12048:	ldr	r0, [sp, #8]
   1204c:	mvn	r1, #0
   12050:	add	r0, r0, r1
   12054:	str	r0, [sp, #8]
   12058:	ldr	r0, [sp, #12]
   1205c:	ldr	r1, [sp, #8]
   12060:	cmp	r0, r1
   12064:	bcs	120cc <main@@Base+0x4c4>
   12068:	ldr	r0, [sp, #12]
   1206c:	ldr	r1, [sp, #8]
   12070:	ldr	r2, [sp, #12]
   12074:	sub	r1, r1, r2
   12078:	lsr	r1, r1, #1
   1207c:	add	r0, r0, r1
   12080:	str	r0, [sp, #4]
   12084:	ldr	r0, [fp, #-8]
   12088:	ldr	r1, [sp, #4]
   1208c:	bl	11560 <test_schema@@Base+0xb48>
   12090:	bl	116f8 <test_schema@@Base+0xce0>
   12094:	str	r0, [sp, #16]
   12098:	ldr	r0, [sp, #16]
   1209c:	ldr	r1, [fp, #-12]
   120a0:	movw	r2, #0
   120a4:	bl	11fd8 <main@@Base+0x3d0>
   120a8:	cmp	r0, #0
   120ac:	bge	120c0 <main@@Base+0x4b8>
   120b0:	ldr	r0, [sp, #4]
   120b4:	add	r0, r0, #1
   120b8:	str	r0, [sp, #12]
   120bc:	b	120c8 <main@@Base+0x4c0>
   120c0:	ldr	r0, [sp, #4]
   120c4:	str	r0, [sp, #8]
   120c8:	b	12058 <main@@Base+0x450>
   120cc:	ldr	r0, [sp, #12]
   120d0:	ldr	r1, [sp, #8]
   120d4:	cmp	r0, r1
   120d8:	bne	12118 <main@@Base+0x510>
   120dc:	ldr	r0, [fp, #-8]
   120e0:	ldr	r1, [sp, #12]
   120e4:	bl	11560 <test_schema@@Base+0xb48>
   120e8:	bl	116f8 <test_schema@@Base+0xce0>
   120ec:	str	r0, [sp, #16]
   120f0:	ldr	r0, [sp, #16]
   120f4:	ldr	r1, [fp, #-12]
   120f8:	movw	r2, #0
   120fc:	bl	11fd8 <main@@Base+0x3d0>
   12100:	cmp	r0, #0
   12104:	bne	12114 <main@@Base+0x50c>
   12108:	ldr	r0, [sp, #12]
   1210c:	str	r0, [fp, #-4]
   12110:	b	12128 <main@@Base+0x520>
   12114:	b	12118 <main@@Base+0x510>
   12118:	ldr	r0, [pc, #24]	; 12138 <main@@Base+0x530>
   1211c:	add	r0, pc, r0
   12120:	ldr	r0, [r0]
   12124:	str	r0, [fp, #-4]
   12128:	ldr	r0, [fp, #-4]
   1212c:	mov	sp, fp
   12130:	pop	{fp, pc}
   12134:	andeq	r1, r1, r4, lsr #32
   12138:	andeq	r0, r1, r0, asr #30
   1213c:	push	{fp, lr}
   12140:	mov	fp, sp
   12144:	sub	sp, sp, #8
   12148:	str	r0, [sp, #4]
   1214c:	ldr	r0, [sp, #4]
   12150:	movw	r1, #0
   12154:	cmp	r0, r1
   12158:	beq	12174 <main@@Base+0x56c>
   1215c:	ldr	r0, [sp, #4]
   12160:	mvn	r1, #3
   12164:	add	r0, r0, r1
   12168:	bl	11d58 <main@@Base+0x150>
   1216c:	str	r0, [sp]
   12170:	b	12180 <main@@Base+0x578>
   12174:	movw	r0, #0
   12178:	str	r0, [sp]
   1217c:	b	12180 <main@@Base+0x578>
   12180:	ldr	r0, [sp]
   12184:	mov	sp, fp
   12188:	pop	{fp, pc}
   1218c:	push	{fp, lr}
   12190:	mov	fp, sp
   12194:	sub	sp, sp, #8
   12198:	str	r0, [sp, #4]
   1219c:	ldr	r0, [sp, #4]
   121a0:	ldr	r1, [r0]
   121a4:	ldr	r0, [r0, #4]
   121a8:	str	r0, [sp]
   121ac:	mov	r0, r1
   121b0:	ldr	r1, [sp]
   121b4:	bl	121c0 <main@@Base+0x5b8>
   121b8:	mov	sp, fp
   121bc:	pop	{fp, pc}
   121c0:	sub	sp, sp, #8
   121c4:	str	r0, [sp]
   121c8:	str	r1, [sp, #4]
   121cc:	ldr	r0, [sp]
   121d0:	ldr	r1, [sp, #4]
   121d4:	add	sp, sp, #8
   121d8:	bx	lr
   121dc:	push	{fp, lr}
   121e0:	mov	fp, sp
   121e4:	sub	sp, sp, #8
   121e8:	str	r0, [sp, #4]
   121ec:	ldr	r0, [sp, #4]
   121f0:	ldrsb	r0, [r0]
   121f4:	bl	12204 <main@@Base+0x5fc>
   121f8:	sxtb	r0, r0
   121fc:	mov	sp, fp
   12200:	pop	{fp, pc}
   12204:	sub	sp, sp, #4
   12208:	strb	r0, [sp, #3]
   1220c:	ldrsb	r0, [sp, #3]
   12210:	add	sp, sp, #4
   12214:	bx	lr
   12218:	push	{fp, lr}
   1221c:	mov	fp, sp
   12220:	sub	sp, sp, #8
   12224:	str	r0, [sp, #4]
   12228:	ldr	r0, [sp, #4]
   1222c:	ldr	r0, [r0]
   12230:	bl	1223c <main@@Base+0x634>
   12234:	mov	sp, fp
   12238:	pop	{fp, pc}
   1223c:	sub	sp, sp, #4
   12240:	str	r0, [sp]
   12244:	ldr	r0, [sp]
   12248:	add	sp, sp, #4
   1224c:	bx	lr

00012250 <__libc_csu_init@@Base>:
   12250:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12254:	mov	r7, r0
   12258:	ldr	r6, [pc, #72]	; 122a8 <__libc_csu_init@@Base+0x58>
   1225c:	ldr	r5, [pc, #72]	; 122ac <__libc_csu_init@@Base+0x5c>
   12260:	add	r6, pc, r6
   12264:	add	r5, pc, r5
   12268:	sub	r6, r6, r5
   1226c:	mov	r8, r1
   12270:	mov	r9, r2
   12274:	bl	1083c <strcmp@plt-0x20>
   12278:	asrs	r6, r6, #2
   1227c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12280:	mov	r4, #0
   12284:	add	r4, r4, #1
   12288:	ldr	r3, [r5], #4
   1228c:	mov	r2, r9
   12290:	mov	r1, r8
   12294:	mov	r0, r7
   12298:	blx	r3
   1229c:	cmp	r6, r4
   122a0:	bne	12284 <__libc_csu_init@@Base+0x34>
   122a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122a8:	andeq	r0, r1, r4, lsr #25
   122ac:	muleq	r1, ip, ip

000122b0 <__libc_csu_fini@@Base>:
   122b0:	bx	lr

Disassembly of section .fini:

000122b4 <.fini>:
   122b4:	push	{r3, lr}
   122b8:	pop	{r3, pc}
