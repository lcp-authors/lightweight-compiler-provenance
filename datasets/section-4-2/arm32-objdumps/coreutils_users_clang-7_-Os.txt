
../repos/coreutils/src/users:     file format elf32-littlearm


Disassembly of section .init:

00010d74 <.init>:
   10d74:	push	{r3, lr}
   10d78:	bl	11028 <putchar_unlocked@plt+0x48>
   10d7c:	pop	{r3, pc}

Disassembly of section .plt:

00010d80 <calloc@plt-0x14>:
   10d80:	push	{lr}		; (str lr, [sp, #-4]!)
   10d84:	ldr	lr, [pc, #4]	; 10d90 <calloc@plt-0x4>
   10d88:	add	lr, pc, lr
   10d8c:	ldr	pc, [lr, #8]!
   10d90:	andeq	r4, r1, r0, ror r2

00010d94 <calloc@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #20, 20	; 0x14000
   10d9c:	ldr	pc, [ip, #624]!	; 0x270

00010da0 <fputs_unlocked@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #20, 20	; 0x14000
   10da8:	ldr	pc, [ip, #616]!	; 0x268

00010dac <strcmp@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #608]!	; 0x260

00010db8 <fflush@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #600]!	; 0x258

00010dc4 <utmpxname@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #592]!	; 0x250

00010dd0 <free@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #584]!	; 0x248

00010ddc <_exit@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #576]!	; 0x240

00010de8 <memcpy@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #568]!	; 0x238

00010df4 <mbsinit@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #20, 20	; 0x14000
   10dfc:	ldr	pc, [ip, #560]!	; 0x230

00010e00 <memcmp@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #20, 20	; 0x14000
   10e08:	ldr	pc, [ip, #552]!	; 0x228

00010e0c <dcgettext@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #20, 20	; 0x14000
   10e14:	ldr	pc, [ip, #544]!	; 0x220

00010e18 <setutxent@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #20, 20	; 0x14000
   10e20:	ldr	pc, [ip, #536]!	; 0x218

00010e24 <realloc@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #20, 20	; 0x14000
   10e2c:	ldr	pc, [ip, #528]!	; 0x210

00010e30 <textdomain@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #20, 20	; 0x14000
   10e38:	ldr	pc, [ip, #520]!	; 0x208

00010e3c <iswprint@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #20, 20	; 0x14000
   10e44:	ldr	pc, [ip, #512]!	; 0x200

00010e48 <lseek64@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #20, 20	; 0x14000
   10e50:	ldr	pc, [ip, #504]!	; 0x1f8

00010e54 <__ctype_get_mb_cur_max@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #20, 20	; 0x14000
   10e5c:	ldr	pc, [ip, #496]!	; 0x1f0

00010e60 <__fpending@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #20, 20	; 0x14000
   10e68:	ldr	pc, [ip, #488]!	; 0x1e8

00010e6c <ferror_unlocked@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #20, 20	; 0x14000
   10e74:	ldr	pc, [ip, #480]!	; 0x1e0

00010e78 <mbrtowc@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #20, 20	; 0x14000
   10e80:	ldr	pc, [ip, #472]!	; 0x1d8

00010e84 <error@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #20, 20	; 0x14000
   10e8c:	ldr	pc, [ip, #464]!	; 0x1d0

00010e90 <malloc@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #20, 20	; 0x14000
   10e98:	ldr	pc, [ip, #456]!	; 0x1c8

00010e9c <__libc_start_main@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #20, 20	; 0x14000
   10ea4:	ldr	pc, [ip, #448]!	; 0x1c0

00010ea8 <__freading@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #20, 20	; 0x14000
   10eb0:	ldr	pc, [ip, #440]!	; 0x1b8

00010eb4 <__gmon_start__@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #20, 20	; 0x14000
   10ebc:	ldr	pc, [ip, #432]!	; 0x1b0

00010ec0 <getopt_long@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #20, 20	; 0x14000
   10ec8:	ldr	pc, [ip, #424]!	; 0x1a8

00010ecc <kill@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #20, 20	; 0x14000
   10ed4:	ldr	pc, [ip, #416]!	; 0x1a0

00010ed8 <__ctype_b_loc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #20, 20	; 0x14000
   10ee0:	ldr	pc, [ip, #408]!	; 0x198

00010ee4 <exit@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #20, 20	; 0x14000
   10eec:	ldr	pc, [ip, #400]!	; 0x190

00010ef0 <strlen@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #20, 20	; 0x14000
   10ef8:	ldr	pc, [ip, #392]!	; 0x188

00010efc <__errno_location@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #20, 20	; 0x14000
   10f04:	ldr	pc, [ip, #384]!	; 0x180

00010f08 <__cxa_atexit@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #20, 20	; 0x14000
   10f10:	ldr	pc, [ip, #376]!	; 0x178

00010f14 <memset@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #20, 20	; 0x14000
   10f1c:	ldr	pc, [ip, #368]!	; 0x170

00010f20 <strncpy@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #20, 20	; 0x14000
   10f28:	ldr	pc, [ip, #360]!	; 0x168

00010f2c <__printf_chk@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #20, 20	; 0x14000
   10f34:	ldr	pc, [ip, #352]!	; 0x160

00010f38 <fileno@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #20, 20	; 0x14000
   10f40:	ldr	pc, [ip, #344]!	; 0x158

00010f44 <__fprintf_chk@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #20, 20	; 0x14000
   10f4c:	ldr	pc, [ip, #336]!	; 0x150

00010f50 <fclose@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #20, 20	; 0x14000
   10f58:	ldr	pc, [ip, #328]!	; 0x148

00010f5c <fseeko64@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #20, 20	; 0x14000
   10f64:	ldr	pc, [ip, #320]!	; 0x140

00010f68 <endutxent@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #20, 20	; 0x14000
   10f70:	ldr	pc, [ip, #312]!	; 0x138

00010f74 <setlocale@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #20, 20	; 0x14000
   10f7c:	ldr	pc, [ip, #304]!	; 0x130

00010f80 <strrchr@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #20, 20	; 0x14000
   10f88:	ldr	pc, [ip, #296]!	; 0x128

00010f8c <nl_langinfo@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #20, 20	; 0x14000
   10f94:	ldr	pc, [ip, #288]!	; 0x120

00010f98 <qsort@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #20, 20	; 0x14000
   10fa0:	ldr	pc, [ip, #280]!	; 0x118

00010fa4 <bindtextdomain@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #20, 20	; 0x14000
   10fac:	ldr	pc, [ip, #272]!	; 0x110

00010fb0 <fputs@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #20, 20	; 0x14000
   10fb8:	ldr	pc, [ip, #264]!	; 0x108

00010fbc <strncmp@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #20, 20	; 0x14000
   10fc4:	ldr	pc, [ip, #256]!	; 0x100

00010fc8 <abort@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #20, 20	; 0x14000
   10fd0:	ldr	pc, [ip, #248]!	; 0xf8

00010fd4 <getutxent@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #20, 20	; 0x14000
   10fdc:	ldr	pc, [ip, #240]!	; 0xf0

00010fe0 <putchar_unlocked@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #20, 20	; 0x14000
   10fe8:	ldr	pc, [ip, #232]!	; 0xe8

Disassembly of section .text:

00010fec <.text>:
   10fec:	mov	fp, #0
   10ff0:	mov	lr, #0
   10ff4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ff8:	mov	r2, sp
   10ffc:	push	{r2}		; (str r2, [sp, #-4]!)
   11000:	push	{r0}		; (str r0, [sp, #-4]!)
   11004:	ldr	ip, [pc, #16]	; 1101c <putchar_unlocked@plt+0x3c>
   11008:	push	{ip}		; (str ip, [sp, #-4]!)
   1100c:	ldr	r0, [pc, #12]	; 11020 <putchar_unlocked@plt+0x40>
   11010:	ldr	r3, [pc, #12]	; 11024 <putchar_unlocked@plt+0x44>
   11014:	bl	10e9c <__libc_start_main@plt>
   11018:	bl	10fc8 <abort@plt>
   1101c:	muleq	r1, r4, r3
   11020:	andeq	r1, r1, r4, lsl r3
   11024:	andeq	r4, r1, r4, lsr r3
   11028:	ldr	r3, [pc, #20]	; 11044 <putchar_unlocked@plt+0x64>
   1102c:	ldr	r2, [pc, #20]	; 11048 <putchar_unlocked@plt+0x68>
   11030:	add	r3, pc, r3
   11034:	ldr	r2, [r3, r2]
   11038:	cmp	r2, #0
   1103c:	bxeq	lr
   11040:	b	10eb4 <__gmon_start__@plt>
   11044:	andeq	r3, r1, r8, asr #31
   11048:	ldrdeq	r0, [r0], -r4
   1104c:	ldr	r0, [pc, #24]	; 1106c <putchar_unlocked@plt+0x8c>
   11050:	ldr	r3, [pc, #24]	; 11070 <putchar_unlocked@plt+0x90>
   11054:	cmp	r3, r0
   11058:	bxeq	lr
   1105c:	ldr	r3, [pc, #16]	; 11074 <putchar_unlocked@plt+0x94>
   11060:	cmp	r3, #0
   11064:	bxeq	lr
   11068:	bx	r3
   1106c:	andeq	r5, r2, r8, lsr #2
   11070:	andeq	r5, r2, r8, lsr #2
   11074:	andeq	r0, r0, r0
   11078:	ldr	r0, [pc, #36]	; 110a4 <putchar_unlocked@plt+0xc4>
   1107c:	ldr	r1, [pc, #36]	; 110a8 <putchar_unlocked@plt+0xc8>
   11080:	sub	r1, r1, r0
   11084:	asr	r1, r1, #2
   11088:	add	r1, r1, r1, lsr #31
   1108c:	asrs	r1, r1, #1
   11090:	bxeq	lr
   11094:	ldr	r3, [pc, #16]	; 110ac <putchar_unlocked@plt+0xcc>
   11098:	cmp	r3, #0
   1109c:	bxeq	lr
   110a0:	bx	r3
   110a4:	andeq	r5, r2, r8, lsr #2
   110a8:	andeq	r5, r2, r8, lsr #2
   110ac:	andeq	r0, r0, r0
   110b0:	push	{r4, lr}
   110b4:	ldr	r4, [pc, #24]	; 110d4 <putchar_unlocked@plt+0xf4>
   110b8:	ldrb	r3, [r4]
   110bc:	cmp	r3, #0
   110c0:	popne	{r4, pc}
   110c4:	bl	1104c <putchar_unlocked@plt+0x6c>
   110c8:	mov	r3, #1
   110cc:	strb	r3, [r4]
   110d0:	pop	{r4, pc}
   110d4:	andeq	r5, r2, r4, asr #2
   110d8:	b	11078 <putchar_unlocked@plt+0x98>
   110dc:	push	{fp, lr}
   110e0:	mov	fp, sp
   110e4:	sub	sp, sp, #56	; 0x38
   110e8:	mov	r9, r0
   110ec:	cmp	r0, #0
   110f0:	bne	112d4 <putchar_unlocked@plt+0x2f4>
   110f4:	movw	r1, #17379	; 0x43e3
   110f8:	mov	r0, #0
   110fc:	mov	r2, #5
   11100:	movt	r1, #1
   11104:	bl	10e0c <dcgettext@plt>
   11108:	mov	r1, r0
   1110c:	movw	r0, #20816	; 0x5150
   11110:	movt	r0, #2
   11114:	ldr	r2, [r0]
   11118:	mov	r0, #1
   1111c:	bl	10f2c <__printf_chk@plt>
   11120:	movw	r1, #17409	; 0x4401
   11124:	mov	r0, #0
   11128:	mov	r2, #5
   1112c:	movt	r1, #1
   11130:	bl	10e0c <dcgettext@plt>
   11134:	movw	r2, #17521	; 0x4471
   11138:	movw	r3, #17535	; 0x447f
   1113c:	mov	r1, r0
   11140:	mov	r0, #1
   11144:	movt	r2, #1
   11148:	movt	r3, #1
   1114c:	bl	10f2c <__printf_chk@plt>
   11150:	movw	r1, #17549	; 0x448d
   11154:	mov	r0, #0
   11158:	mov	r2, #5
   1115c:	movt	r1, #1
   11160:	bl	10e0c <dcgettext@plt>
   11164:	movw	r8, #20796	; 0x513c
   11168:	movt	r8, #2
   1116c:	ldr	r1, [r8]
   11170:	bl	10da0 <fputs_unlocked@plt>
   11174:	movw	r1, #17594	; 0x44ba
   11178:	mov	r0, #0
   1117c:	mov	r2, #5
   11180:	movt	r1, #1
   11184:	bl	10e0c <dcgettext@plt>
   11188:	ldr	r1, [r8]
   1118c:	bl	10da0 <fputs_unlocked@plt>
   11190:	movw	r0, #18056	; 0x4688
   11194:	mov	r6, sp
   11198:	movt	r0, #1
   1119c:	mov	r1, r6
   111a0:	ldm	r0!, {r2, r3, r5, r7}
   111a4:	stmia	r1!, {r2, r3, r5, r7}
   111a8:	ldm	r0!, {r2, r3, r4, r5, r7}
   111ac:	stmia	r1!, {r2, r3, r4, r5, r7}
   111b0:	ldm	r0, {r2, r3, r4, r5, r7}
   111b4:	stm	r1, {r2, r3, r4, r5, r7}
   111b8:	movw	r1, #17742	; 0x454e
   111bc:	movw	r5, #17648	; 0x44f0
   111c0:	movt	r1, #1
   111c4:	movt	r5, #1
   111c8:	mov	r0, r5
   111cc:	bl	10dac <strcmp@plt>
   111d0:	cmp	r0, #0
   111d4:	ldrne	r1, [r6, #8]!
   111d8:	cmpne	r1, #0
   111dc:	bne	111c8 <putchar_unlocked@plt+0x1e8>
   111e0:	ldr	r6, [r6, #4]
   111e4:	movw	r1, #17837	; 0x45ad
   111e8:	mov	r0, #0
   111ec:	mov	r2, #5
   111f0:	movt	r1, #1
   111f4:	bl	10e0c <dcgettext@plt>
   111f8:	movw	r2, #17678	; 0x450e
   111fc:	movw	r3, #17860	; 0x45c4
   11200:	mov	r1, r0
   11204:	mov	r0, #1
   11208:	movt	r2, #1
   1120c:	movt	r3, #1
   11210:	bl	10f2c <__printf_chk@plt>
   11214:	cmp	r6, #0
   11218:	mov	r0, #5
   1121c:	mov	r1, #0
   11220:	moveq	r6, r5
   11224:	bl	10f74 <setlocale@plt>
   11228:	cmp	r0, #0
   1122c:	beq	11264 <putchar_unlocked@plt+0x284>
   11230:	movw	r1, #17900	; 0x45ec
   11234:	mov	r2, #3
   11238:	movt	r1, #1
   1123c:	bl	10fbc <strncmp@plt>
   11240:	cmp	r0, #0
   11244:	beq	11264 <putchar_unlocked@plt+0x284>
   11248:	movw	r1, #17904	; 0x45f0
   1124c:	mov	r0, #0
   11250:	mov	r2, #5
   11254:	movt	r1, #1
   11258:	bl	10e0c <dcgettext@plt>
   1125c:	ldr	r1, [r8]
   11260:	bl	10da0 <fputs_unlocked@plt>
   11264:	movw	r1, #17975	; 0x4637
   11268:	mov	r0, #0
   1126c:	mov	r2, #5
   11270:	movt	r1, #1
   11274:	bl	10e0c <dcgettext@plt>
   11278:	movw	r2, #17860	; 0x45c4
   1127c:	mov	r1, r0
   11280:	mov	r0, #1
   11284:	mov	r3, r5
   11288:	movt	r2, #1
   1128c:	bl	10f2c <__printf_chk@plt>
   11290:	movw	r1, #18002	; 0x4652
   11294:	mov	r0, #0
   11298:	mov	r2, #5
   1129c:	movt	r1, #1
   112a0:	bl	10e0c <dcgettext@plt>
   112a4:	movw	r3, #17520	; 0x4470
   112a8:	mov	r1, r0
   112ac:	movw	r0, #17770	; 0x456a
   112b0:	cmp	r6, r5
   112b4:	mov	r2, r6
   112b8:	movt	r0, #1
   112bc:	movt	r3, #1
   112c0:	moveq	r3, r0
   112c4:	mov	r0, #1
   112c8:	bl	10f2c <__printf_chk@plt>
   112cc:	mov	r0, r9
   112d0:	bl	10ee4 <exit@plt>
   112d4:	movw	r0, #20792	; 0x5138
   112d8:	movw	r1, #17340	; 0x43bc
   112dc:	mov	r2, #5
   112e0:	movt	r0, #2
   112e4:	movt	r1, #1
   112e8:	ldr	r5, [r0]
   112ec:	mov	r0, #0
   112f0:	bl	10e0c <dcgettext@plt>
   112f4:	mov	r2, r0
   112f8:	movw	r0, #20816	; 0x5150
   112fc:	mov	r1, #1
   11300:	movt	r0, #2
   11304:	ldr	r3, [r0]
   11308:	mov	r0, r5
   1130c:	bl	10f44 <__fprintf_chk@plt>
   11310:	b	112cc <putchar_unlocked@plt+0x2ec>
   11314:	push	{r4, r5, r6, sl, fp, lr}
   11318:	add	fp, sp, #16
   1131c:	sub	sp, sp, #24
   11320:	mov	r5, r0
   11324:	ldr	r0, [r1]
   11328:	mov	r4, r1
   1132c:	bl	11854 <putchar_unlocked@plt+0x874>
   11330:	movw	r1, #17520	; 0x4470
   11334:	mov	r0, #6
   11338:	movt	r1, #1
   1133c:	bl	10f74 <setlocale@plt>
   11340:	movw	r6, #17682	; 0x4512
   11344:	movw	r1, #17654	; 0x44f6
   11348:	movt	r6, #1
   1134c:	movt	r1, #1
   11350:	mov	r0, r6
   11354:	bl	10fa4 <bindtextdomain@plt>
   11358:	mov	r0, r6
   1135c:	bl	10e30 <textdomain@plt>
   11360:	movw	r0, #5580	; 0x15cc
   11364:	movt	r0, #1
   11368:	bl	14398 <putchar_unlocked@plt+0x33b8>
   1136c:	movw	r0, #20704	; 0x50e0
   11370:	movw	r2, #17709	; 0x452d
   11374:	movw	r3, #17692	; 0x451c
   11378:	movw	r6, #4316	; 0x10dc
   1137c:	mov	r1, #1
   11380:	mov	ip, #0
   11384:	movt	r0, #2
   11388:	movt	r2, #1
   1138c:	movt	r3, #1
   11390:	movt	r6, #1
   11394:	ldr	r0, [r0]
   11398:	stm	sp, {r0, r1, r6}
   1139c:	str	r3, [sp, #12]
   113a0:	movw	r3, #17678	; 0x450e
   113a4:	str	r2, [sp, #16]
   113a8:	movw	r2, #17648	; 0x44f0
   113ac:	mov	r0, r5
   113b0:	mov	r1, r4
   113b4:	str	ip, [sp, #20]
   113b8:	movt	r2, #1
   113bc:	movt	r3, #1
   113c0:	bl	1178c <putchar_unlocked@plt+0x7ac>
   113c4:	movw	r6, #20784	; 0x5130
   113c8:	movt	r6, #2
   113cc:	ldr	r0, [r6]
   113d0:	sub	r1, r5, r0
   113d4:	cmp	r1, #1
   113d8:	beq	113f4 <putchar_unlocked@plt+0x414>
   113dc:	cmp	r1, #0
   113e0:	bne	1140c <putchar_unlocked@plt+0x42c>
   113e4:	movw	r0, #17521	; 0x4471
   113e8:	mov	r1, #1
   113ec:	movt	r0, #1
   113f0:	b	113fc <putchar_unlocked@plt+0x41c>
   113f4:	ldr	r0, [r4, r0, lsl #2]
   113f8:	mov	r1, #0
   113fc:	bl	11450 <putchar_unlocked@plt+0x470>
   11400:	mov	r0, #0
   11404:	sub	sp, fp, #16
   11408:	pop	{r4, r5, r6, sl, fp, pc}
   1140c:	movw	r1, #17725	; 0x453d
   11410:	mov	r0, #0
   11414:	mov	r2, #5
   11418:	movt	r1, #1
   1141c:	bl	10e0c <dcgettext@plt>
   11420:	mov	r5, r0
   11424:	ldr	r0, [r6]
   11428:	add	r0, r4, r0, lsl #2
   1142c:	ldr	r0, [r0, #4]
   11430:	bl	13258 <putchar_unlocked@plt+0x2278>
   11434:	mov	r3, r0
   11438:	mov	r0, #0
   1143c:	mov	r1, #0
   11440:	mov	r2, r5
   11444:	bl	10e84 <error@plt>
   11448:	mov	r0, #1
   1144c:	bl	110dc <putchar_unlocked@plt+0xfc>
   11450:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11454:	add	fp, sp, #24
   11458:	sub	sp, sp, #8
   1145c:	mov	r3, r1
   11460:	add	r1, sp, #4
   11464:	mov	r2, sp
   11468:	mov	r4, r0
   1146c:	bl	133f8 <putchar_unlocked@plt+0x2418>
   11470:	cmp	r0, #0
   11474:	bne	11570 <putchar_unlocked@plt+0x590>
   11478:	ldm	sp, {r6, r7}
   1147c:	mov	r1, #4
   11480:	mov	r0, r7
   11484:	bl	13ab4 <putchar_unlocked@plt+0x2ad4>
   11488:	mov	r4, r0
   1148c:	cmp	r7, #0
   11490:	beq	11540 <putchar_unlocked@plt+0x560>
   11494:	mov	r5, #0
   11498:	ldrb	r0, [r6, #44]	; 0x2c
   1149c:	sub	r7, r7, #1
   114a0:	cmp	r0, #0
   114a4:	beq	114c4 <putchar_unlocked@plt+0x4e4>
   114a8:	ldrh	r0, [r6]
   114ac:	cmp	r0, #7
   114b0:	bne	114c4 <putchar_unlocked@plt+0x4e4>
   114b4:	mov	r0, r6
   114b8:	bl	13390 <putchar_unlocked@plt+0x23b0>
   114bc:	str	r0, [r4, r5, lsl #2]
   114c0:	add	r5, r5, #1
   114c4:	add	r6, r6, #384	; 0x180
   114c8:	cmp	r7, #0
   114cc:	bne	11498 <putchar_unlocked@plt+0x4b8>
   114d0:	movw	r3, #5536	; 0x15a0
   114d4:	mov	r0, r4
   114d8:	mov	r1, r5
   114dc:	mov	r2, #4
   114e0:	movt	r3, #1
   114e4:	bl	10f98 <qsort@plt>
   114e8:	cmp	r5, #0
   114ec:	beq	11558 <putchar_unlocked@plt+0x578>
   114f0:	movw	r8, #20796	; 0x513c
   114f4:	sub	r6, r5, #1
   114f8:	mov	r7, #0
   114fc:	movt	r8, #2
   11500:	ldr	r0, [r4, r7, lsl #2]
   11504:	ldr	r1, [r8]
   11508:	bl	10da0 <fputs_unlocked@plt>
   1150c:	cmp	r7, r6
   11510:	mov	r0, #10
   11514:	movwcc	r0, #32
   11518:	bl	10fe0 <putchar_unlocked@plt>
   1151c:	add	r7, r7, #1
   11520:	cmp	r5, r7
   11524:	bne	11500 <putchar_unlocked@plt+0x520>
   11528:	mov	r6, r4
   1152c:	ldr	r0, [r6], #4
   11530:	bl	116b4 <putchar_unlocked@plt+0x6d4>
   11534:	subs	r5, r5, #1
   11538:	bne	1152c <putchar_unlocked@plt+0x54c>
   1153c:	b	11558 <putchar_unlocked@plt+0x578>
   11540:	movw	r3, #5536	; 0x15a0
   11544:	mov	r0, r4
   11548:	mov	r1, #0
   1154c:	mov	r2, #4
   11550:	movt	r3, #1
   11554:	bl	10f98 <qsort@plt>
   11558:	mov	r0, r4
   1155c:	bl	116b4 <putchar_unlocked@plt+0x6d4>
   11560:	ldr	r0, [sp]
   11564:	bl	116b4 <putchar_unlocked@plt+0x6d4>
   11568:	sub	sp, fp, #24
   1156c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11570:	bl	10efc <__errno_location@plt>
   11574:	ldr	r5, [r0]
   11578:	mov	r0, #0
   1157c:	mov	r1, #3
   11580:	mov	r2, r4
   11584:	bl	130c4 <putchar_unlocked@plt+0x20e4>
   11588:	movw	r2, #18143	; 0x46df
   1158c:	mov	r3, r0
   11590:	mov	r0, #1
   11594:	mov	r1, r5
   11598:	movt	r2, #1
   1159c:	bl	10e84 <error@plt>
   115a0:	ldr	r1, [r1]
   115a4:	ldr	r0, [r0]
   115a8:	b	10dac <strcmp@plt>
   115ac:	movw	r1, #20808	; 0x5148
   115b0:	movt	r1, #2
   115b4:	str	r0, [r1]
   115b8:	bx	lr
   115bc:	movw	r1, #20812	; 0x514c
   115c0:	movt	r1, #2
   115c4:	strb	r0, [r1]
   115c8:	bx	lr
   115cc:	push	{r4, r5, r6, sl, fp, lr}
   115d0:	add	fp, sp, #16
   115d4:	sub	sp, sp, #8
   115d8:	movw	r0, #20796	; 0x513c
   115dc:	movt	r0, #2
   115e0:	ldr	r0, [r0]
   115e4:	bl	13f4c <putchar_unlocked@plt+0x2f6c>
   115e8:	cmp	r0, #0
   115ec:	beq	11614 <putchar_unlocked@plt+0x634>
   115f0:	movw	r0, #20812	; 0x514c
   115f4:	movt	r0, #2
   115f8:	ldrb	r0, [r0]
   115fc:	cmp	r0, #0
   11600:	beq	11634 <putchar_unlocked@plt+0x654>
   11604:	bl	10efc <__errno_location@plt>
   11608:	ldr	r0, [r0]
   1160c:	cmp	r0, #32
   11610:	bne	11634 <putchar_unlocked@plt+0x654>
   11614:	movw	r0, #20792	; 0x5138
   11618:	movt	r0, #2
   1161c:	ldr	r0, [r0]
   11620:	bl	13f4c <putchar_unlocked@plt+0x2f6c>
   11624:	cmp	r0, #0
   11628:	subeq	sp, fp, #16
   1162c:	popeq	{r4, r5, r6, sl, fp, pc}
   11630:	b	116a4 <putchar_unlocked@plt+0x6c4>
   11634:	movw	r1, #18127	; 0x46cf
   11638:	mov	r0, #0
   1163c:	mov	r2, #5
   11640:	movt	r1, #1
   11644:	bl	10e0c <dcgettext@plt>
   11648:	mov	r4, r0
   1164c:	movw	r0, #20808	; 0x5148
   11650:	movt	r0, #2
   11654:	ldr	r6, [r0]
   11658:	bl	10efc <__errno_location@plt>
   1165c:	ldr	r5, [r0]
   11660:	cmp	r6, #0
   11664:	bne	11680 <putchar_unlocked@plt+0x6a0>
   11668:	movw	r2, #18143	; 0x46df
   1166c:	mov	r0, #0
   11670:	mov	r1, r5
   11674:	mov	r3, r4
   11678:	movt	r2, #1
   1167c:	b	116a0 <putchar_unlocked@plt+0x6c0>
   11680:	mov	r0, r6
   11684:	bl	13018 <putchar_unlocked@plt+0x2038>
   11688:	movw	r2, #18139	; 0x46db
   1168c:	mov	r3, r0
   11690:	str	r4, [sp]
   11694:	mov	r0, #0
   11698:	mov	r1, r5
   1169c:	movt	r2, #1
   116a0:	bl	10e84 <error@plt>
   116a4:	movw	r0, #20708	; 0x50e4
   116a8:	movt	r0, #2
   116ac:	ldr	r0, [r0]
   116b0:	bl	10ddc <_exit@plt>
   116b4:	push	{r4, r5, r6, sl, fp, lr}
   116b8:	add	fp, sp, #16
   116bc:	mov	r4, r0
   116c0:	bl	10efc <__errno_location@plt>
   116c4:	ldr	r6, [r0]
   116c8:	mov	r5, r0
   116cc:	mov	r0, r4
   116d0:	bl	10dd0 <free@plt>
   116d4:	str	r6, [r5]
   116d8:	pop	{r4, r5, r6, sl, fp, pc}
   116dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   116e0:	add	fp, sp, #24
   116e4:	sub	sp, sp, #8
   116e8:	movw	r6, #20800	; 0x5140
   116ec:	mov	r4, #0
   116f0:	cmp	r0, #2
   116f4:	movt	r6, #2
   116f8:	ldr	r7, [r6]
   116fc:	str	r4, [r6]
   11700:	bne	11774 <putchar_unlocked@plt+0x794>
   11704:	mov	r8, r3
   11708:	movw	r3, #18164	; 0x46f4
   1170c:	mov	r5, r2
   11710:	movw	r2, #18146	; 0x46e2
   11714:	mov	r0, #2
   11718:	str	r4, [sp]
   1171c:	movt	r2, #1
   11720:	movt	r3, #1
   11724:	bl	10ec0 <getopt_long@plt>
   11728:	cmp	r0, #104	; 0x68
   1172c:	beq	11768 <putchar_unlocked@plt+0x788>
   11730:	cmp	r0, #118	; 0x76
   11734:	bne	11774 <putchar_unlocked@plt+0x794>
   11738:	movw	r0, #20796	; 0x513c
   1173c:	ldr	r3, [fp, #8]
   11740:	add	r1, fp, #16
   11744:	mov	r2, r8
   11748:	movt	r0, #2
   1174c:	str	r1, [sp, #4]
   11750:	str	r1, [sp]
   11754:	mov	r1, r5
   11758:	ldr	r0, [r0]
   1175c:	bl	13890 <putchar_unlocked@plt+0x28b0>
   11760:	mov	r0, #0
   11764:	bl	10ee4 <exit@plt>
   11768:	ldr	r1, [fp, #12]
   1176c:	mov	r0, #0
   11770:	blx	r1
   11774:	movw	r0, #20784	; 0x5130
   11778:	str	r7, [r6]
   1177c:	movt	r0, #2
   11780:	str	r4, [r0]
   11784:	sub	sp, fp, #24
   11788:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1178c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11790:	add	fp, sp, #24
   11794:	sub	sp, sp, #8
   11798:	movw	r6, #20800	; 0x5140
   1179c:	mov	r8, r3
   117a0:	ldr	r3, [fp, #12]
   117a4:	mov	r5, r2
   117a8:	mov	r2, #1
   117ac:	movw	r4, #17520	; 0x4470
   117b0:	movt	r6, #2
   117b4:	movt	r4, #1
   117b8:	ldr	r7, [r6]
   117bc:	str	r2, [r6]
   117c0:	mov	r2, #0
   117c4:	str	r2, [sp]
   117c8:	movw	r2, #18146	; 0x46e2
   117cc:	cmp	r3, #0
   117d0:	movt	r2, #1
   117d4:	movw	r3, #18164	; 0x46f4
   117d8:	movne	r2, r4
   117dc:	movt	r3, #1
   117e0:	bl	10ec0 <getopt_long@plt>
   117e4:	cmn	r0, #1
   117e8:	beq	11818 <putchar_unlocked@plt+0x838>
   117ec:	ldr	r1, [fp, #16]
   117f0:	cmp	r0, #104	; 0x68
   117f4:	beq	11810 <putchar_unlocked@plt+0x830>
   117f8:	cmp	r0, #118	; 0x76
   117fc:	beq	11824 <putchar_unlocked@plt+0x844>
   11800:	movw	r0, #20708	; 0x50e4
   11804:	movt	r0, #2
   11808:	ldr	r0, [r0]
   1180c:	b	11814 <putchar_unlocked@plt+0x834>
   11810:	mov	r0, #0
   11814:	blx	r1
   11818:	str	r7, [r6]
   1181c:	sub	sp, fp, #24
   11820:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11824:	movw	r0, #20796	; 0x513c
   11828:	ldr	r3, [fp, #8]
   1182c:	add	r1, fp, #20
   11830:	mov	r2, r8
   11834:	movt	r0, #2
   11838:	str	r1, [sp, #4]
   1183c:	str	r1, [sp]
   11840:	mov	r1, r5
   11844:	ldr	r0, [r0]
   11848:	bl	13890 <putchar_unlocked@plt+0x28b0>
   1184c:	mov	r0, #0
   11850:	bl	10ee4 <exit@plt>
   11854:	push	{r4, r5, fp, lr}
   11858:	add	fp, sp, #8
   1185c:	cmp	r0, #0
   11860:	beq	118f4 <putchar_unlocked@plt+0x914>
   11864:	mov	r1, #47	; 0x2f
   11868:	mov	r4, r0
   1186c:	bl	10f80 <strrchr@plt>
   11870:	cmp	r0, #0
   11874:	mov	r5, r4
   11878:	addne	r5, r0, #1
   1187c:	sub	r0, r5, r4
   11880:	cmp	r0, #7
   11884:	blt	118d8 <putchar_unlocked@plt+0x8f8>
   11888:	movw	r1, #18268	; 0x475c
   1188c:	sub	r0, r5, #7
   11890:	mov	r2, #7
   11894:	movt	r1, #1
   11898:	bl	10fbc <strncmp@plt>
   1189c:	cmp	r0, #0
   118a0:	bne	118d8 <putchar_unlocked@plt+0x8f8>
   118a4:	movw	r1, #18276	; 0x4764
   118a8:	mov	r0, r5
   118ac:	mov	r2, #3
   118b0:	movt	r1, #1
   118b4:	bl	10fbc <strncmp@plt>
   118b8:	cmp	r0, #0
   118bc:	beq	118c8 <putchar_unlocked@plt+0x8e8>
   118c0:	mov	r4, r5
   118c4:	b	118d8 <putchar_unlocked@plt+0x8f8>
   118c8:	movw	r0, #20776	; 0x5128
   118cc:	add	r4, r5, #3
   118d0:	movt	r0, #2
   118d4:	str	r4, [r0]
   118d8:	movw	r0, #20780	; 0x512c
   118dc:	movt	r0, #2
   118e0:	str	r4, [r0]
   118e4:	movw	r0, #20816	; 0x5150
   118e8:	movt	r0, #2
   118ec:	str	r4, [r0]
   118f0:	pop	{r4, r5, fp, pc}
   118f4:	movw	r0, #20792	; 0x5138
   118f8:	movt	r0, #2
   118fc:	ldr	r1, [r0]
   11900:	movw	r0, #18212	; 0x4724
   11904:	movt	r0, #1
   11908:	bl	10fb0 <fputs@plt>
   1190c:	bl	10fc8 <abort@plt>
   11910:	push	{r4, r5, r6, sl, fp, lr}
   11914:	add	fp, sp, #16
   11918:	mov	r4, r0
   1191c:	movw	r0, #20824	; 0x5158
   11920:	movt	r0, #2
   11924:	cmp	r4, #0
   11928:	moveq	r4, r0
   1192c:	bl	10efc <__errno_location@plt>
   11930:	ldr	r6, [r0]
   11934:	mov	r5, r0
   11938:	mov	r0, r4
   1193c:	mov	r1, #48	; 0x30
   11940:	bl	13d34 <putchar_unlocked@plt+0x2d54>
   11944:	str	r6, [r5]
   11948:	pop	{r4, r5, r6, sl, fp, pc}
   1194c:	movw	r1, #20824	; 0x5158
   11950:	cmp	r0, #0
   11954:	movt	r1, #2
   11958:	movne	r1, r0
   1195c:	ldr	r0, [r1]
   11960:	bx	lr
   11964:	movw	r2, #20824	; 0x5158
   11968:	cmp	r0, #0
   1196c:	movt	r2, #2
   11970:	movne	r2, r0
   11974:	str	r1, [r2]
   11978:	bx	lr
   1197c:	movw	r3, #20824	; 0x5158
   11980:	cmp	r0, #0
   11984:	movt	r3, #2
   11988:	movne	r3, r0
   1198c:	ubfx	r0, r1, #5, #3
   11990:	and	r1, r1, #31
   11994:	add	r0, r3, r0, lsl #2
   11998:	ldr	r3, [r0, #8]
   1199c:	eor	r2, r2, r3, lsr r1
   119a0:	and	r2, r2, #1
   119a4:	eor	r2, r3, r2, lsl r1
   119a8:	str	r2, [r0, #8]
   119ac:	mov	r0, #1
   119b0:	and	r0, r0, r3, lsr r1
   119b4:	bx	lr
   119b8:	movw	r2, #20824	; 0x5158
   119bc:	cmp	r0, #0
   119c0:	movt	r2, #2
   119c4:	movne	r2, r0
   119c8:	ldr	r0, [r2, #4]
   119cc:	str	r1, [r2, #4]
   119d0:	bx	lr
   119d4:	movw	r3, #20824	; 0x5158
   119d8:	cmp	r0, #0
   119dc:	movt	r3, #2
   119e0:	movne	r3, r0
   119e4:	cmp	r1, #0
   119e8:	mov	r0, #10
   119ec:	cmpne	r2, #0
   119f0:	str	r0, [r3]
   119f4:	bne	11a04 <putchar_unlocked@plt+0xa24>
   119f8:	push	{fp, lr}
   119fc:	mov	fp, sp
   11a00:	bl	10fc8 <abort@plt>
   11a04:	str	r1, [r3, #40]	; 0x28
   11a08:	str	r2, [r3, #44]	; 0x2c
   11a0c:	bx	lr
   11a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a14:	add	fp, sp, #28
   11a18:	sub	sp, sp, #20
   11a1c:	mov	r7, r0
   11a20:	ldr	r0, [fp, #8]
   11a24:	movw	r5, #20824	; 0x5158
   11a28:	mov	r8, r3
   11a2c:	mov	r9, r2
   11a30:	mov	sl, r1
   11a34:	movt	r5, #2
   11a38:	cmp	r0, #0
   11a3c:	movne	r5, r0
   11a40:	bl	10efc <__errno_location@plt>
   11a44:	mov	r4, r0
   11a48:	ldm	r5, {r0, r1}
   11a4c:	ldr	r2, [r5, #40]	; 0x28
   11a50:	ldr	r3, [r5, #44]	; 0x2c
   11a54:	add	r5, r5, #8
   11a58:	ldr	r6, [r4]
   11a5c:	stm	sp, {r0, r1, r5}
   11a60:	str	r2, [sp, #12]
   11a64:	str	r3, [sp, #16]
   11a68:	mov	r0, r7
   11a6c:	mov	r1, sl
   11a70:	mov	r2, r9
   11a74:	mov	r3, r8
   11a78:	bl	11a88 <putchar_unlocked@plt+0xaa8>
   11a7c:	str	r6, [r4]
   11a80:	sub	sp, fp, #28
   11a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a8c:	add	fp, sp, #28
   11a90:	sub	sp, sp, #156	; 0x9c
   11a94:	str	r0, [fp, #-56]	; 0xffffffc8
   11a98:	ldr	r0, [fp, #12]
   11a9c:	mov	r4, r1
   11aa0:	str	r3, [sp, #80]	; 0x50
   11aa4:	str	r2, [fp, #-84]	; 0xffffffac
   11aa8:	and	r1, r0, #4
   11aac:	str	r1, [sp, #24]
   11ab0:	and	r1, r0, #1
   11ab4:	str	r1, [sp, #28]
   11ab8:	ubfx	r7, r0, #1, #1
   11abc:	bl	10e54 <__ctype_get_mb_cur_max@plt>
   11ac0:	str	r0, [sp, #32]
   11ac4:	ldr	r0, [fp, #24]
   11ac8:	ldr	r9, [fp, #8]
   11acc:	mov	r2, #0
   11ad0:	mov	r1, #0
   11ad4:	mov	r5, #0
   11ad8:	str	r2, [sp, #52]	; 0x34
   11adc:	mov	r2, #1
   11ae0:	str	r0, [sp, #72]	; 0x48
   11ae4:	ldr	r0, [fp, #20]
   11ae8:	str	r0, [sp, #64]	; 0x40
   11aec:	mov	r0, #0
   11af0:	str	r0, [sp, #92]	; 0x5c
   11af4:	mov	r0, #0
   11af8:	str	r0, [fp, #-76]	; 0xffffffb4
   11afc:	mov	r0, #0
   11b00:	cmp	r9, #10
   11b04:	str	r1, [sp, #68]	; 0x44
   11b08:	bhi	12b08 <putchar_unlocked@plt+0x1b28>
   11b0c:	add	r1, pc, #28
   11b10:	ldr	ip, [fp, #-84]	; 0xffffffac
   11b14:	ldr	lr, [sp, #80]	; 0x50
   11b18:	mov	r6, r4
   11b1c:	mov	r8, #0
   11b20:	mov	r3, #1
   11b24:	mov	sl, #0
   11b28:	mov	r4, r2
   11b2c:	ldr	pc, [r1, r9, lsl #2]
   11b30:	andeq	r1, r1, r0, lsl #24
   11b34:	andeq	r1, r1, ip, lsr ip
   11b38:	andeq	r1, r1, r0, lsl ip
   11b3c:	strdeq	r1, [r1], -r8
   11b40:	andeq	r1, r1, r0, lsr ip
   11b44:	andeq	r1, r1, r8, lsl #25
   11b48:	andeq	r1, r1, r0, lsr #24
   11b4c:	andeq	r1, r1, r8, ror #25
   11b50:	andeq	r1, r1, ip, asr fp
   11b54:	andeq	r1, r1, ip, asr fp
   11b58:	andeq	r1, r1, r4, lsl #23
   11b5c:	movw	r0, #18360	; 0x47b8
   11b60:	mov	r1, r9
   11b64:	movt	r0, #1
   11b68:	bl	13270 <putchar_unlocked@plt+0x2290>
   11b6c:	str	r0, [sp, #64]	; 0x40
   11b70:	movw	r0, #18362	; 0x47ba
   11b74:	mov	r1, r9
   11b78:	movt	r0, #1
   11b7c:	bl	13270 <putchar_unlocked@plt+0x2290>
   11b80:	str	r0, [sp, #72]	; 0x48
   11b84:	mov	r8, #0
   11b88:	mov	sl, r7
   11b8c:	tst	r7, #1
   11b90:	str	r5, [fp, #-48]	; 0xffffffd0
   11b94:	bne	11bd0 <putchar_unlocked@plt+0xbf0>
   11b98:	ldr	r0, [sp, #64]	; 0x40
   11b9c:	ldrb	r0, [r0]
   11ba0:	cmp	r0, #0
   11ba4:	beq	11bd0 <putchar_unlocked@plt+0xbf0>
   11ba8:	ldr	r1, [sp, #64]	; 0x40
   11bac:	mov	r8, #0
   11bb0:	add	r1, r1, #1
   11bb4:	cmp	r8, r6
   11bb8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   11bbc:	strbcc	r0, [r2, r8]
   11bc0:	ldrb	r0, [r1, r8]
   11bc4:	add	r8, r8, #1
   11bc8:	cmp	r0, #0
   11bcc:	bne	11bb4 <putchar_unlocked@plt+0xbd4>
   11bd0:	ldr	r7, [sp, #72]	; 0x48
   11bd4:	mov	r0, r7
   11bd8:	bl	10ef0 <strlen@plt>
   11bdc:	ldr	ip, [fp, #-84]	; 0xffffffac
   11be0:	ldr	lr, [sp, #80]	; 0x50
   11be4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   11be8:	str	r0, [fp, #-76]	; 0xffffffb4
   11bec:	str	r7, [sp, #92]	; 0x5c
   11bf0:	mov	r3, #1
   11bf4:	b	11ce8 <putchar_unlocked@plt+0xd08>
   11bf8:	mov	r0, #1
   11bfc:	b	11c3c <putchar_unlocked@plt+0xc5c>
   11c00:	mov	r9, #0
   11c04:	mov	r8, #0
   11c08:	mov	r3, r0
   11c0c:	b	11ce4 <putchar_unlocked@plt+0xd04>
   11c10:	tst	r7, #1
   11c14:	bne	11c3c <putchar_unlocked@plt+0xc5c>
   11c18:	mov	r3, r0
   11c1c:	b	11c64 <putchar_unlocked@plt+0xc84>
   11c20:	mov	r0, #1
   11c24:	mov	r8, #0
   11c28:	mov	r9, #5
   11c2c:	b	11c9c <putchar_unlocked@plt+0xcbc>
   11c30:	mov	r3, #1
   11c34:	tst	r7, #1
   11c38:	beq	11c64 <putchar_unlocked@plt+0xc84>
   11c3c:	mov	r1, #1
   11c40:	mov	r8, #0
   11c44:	mov	r9, #2
   11c48:	mov	r3, r0
   11c4c:	mov	sl, #1
   11c50:	str	r1, [fp, #-76]	; 0xffffffb4
   11c54:	movw	r1, #18362	; 0x47ba
   11c58:	movt	r1, #1
   11c5c:	str	r1, [sp, #92]	; 0x5c
   11c60:	b	11ce8 <putchar_unlocked@plt+0xd08>
   11c64:	cmp	r6, #0
   11c68:	mov	r8, #1
   11c6c:	mov	r9, #2
   11c70:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   11c74:	movne	r0, #39	; 0x27
   11c78:	strbne	r0, [r1]
   11c7c:	movw	r0, #18362	; 0x47ba
   11c80:	movt	r0, #1
   11c84:	b	11cd8 <putchar_unlocked@plt+0xcf8>
   11c88:	mov	r9, #5
   11c8c:	tst	r7, #1
   11c90:	beq	11cb8 <putchar_unlocked@plt+0xcd8>
   11c94:	mov	r0, #1
   11c98:	mov	r8, #0
   11c9c:	str	r0, [fp, #-76]	; 0xffffffb4
   11ca0:	movw	r0, #18358	; 0x47b6
   11ca4:	mov	r3, #1
   11ca8:	mov	sl, #1
   11cac:	movt	r0, #1
   11cb0:	str	r0, [sp, #92]	; 0x5c
   11cb4:	b	11ce8 <putchar_unlocked@plt+0xd08>
   11cb8:	cmp	r6, #0
   11cbc:	mov	r8, #1
   11cc0:	mov	r3, #1
   11cc4:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   11cc8:	movne	r0, #34	; 0x22
   11ccc:	strbne	r0, [r1]
   11cd0:	movw	r0, #18358	; 0x47b6
   11cd4:	movt	r0, #1
   11cd8:	str	r0, [sp, #92]	; 0x5c
   11cdc:	mov	r0, #1
   11ce0:	str	r0, [fp, #-76]	; 0xffffffb4
   11ce4:	mov	sl, #0
   11ce8:	ldr	r0, [fp, #16]
   11cec:	mov	r7, #0
   11cf0:	str	r9, [fp, #-64]	; 0xffffffc0
   11cf4:	str	sl, [fp, #-72]	; 0xffffffb8
   11cf8:	str	r3, [sp, #84]	; 0x54
   11cfc:	cmp	r0, #0
   11d00:	movwne	r0, #1
   11d04:	and	r0, r0, sl
   11d08:	str	r0, [fp, #-88]	; 0xffffffa8
   11d0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11d10:	cmp	r0, #0
   11d14:	movwne	r0, #1
   11d18:	subs	r2, r9, #2
   11d1c:	and	r1, r0, sl
   11d20:	str	r2, [fp, #-80]	; 0xffffffb0
   11d24:	and	r1, r3, r1
   11d28:	str	r1, [sp, #44]	; 0x2c
   11d2c:	clz	r1, r2
   11d30:	lsr	r1, r1, #5
   11d34:	and	r1, r1, sl
   11d38:	str	r1, [sp, #56]	; 0x38
   11d3c:	mov	r1, r2
   11d40:	eor	r2, sl, #1
   11d44:	movwne	r1, #1
   11d48:	str	r2, [sp, #88]	; 0x58
   11d4c:	orr	r2, r1, r2
   11d50:	and	r1, r1, r3
   11d54:	and	r0, r0, r1
   11d58:	str	r2, [sp, #60]	; 0x3c
   11d5c:	str	r1, [fp, #-68]	; 0xffffffbc
   11d60:	str	r0, [fp, #-60]	; 0xffffffc4
   11d64:	eor	r0, r3, #1
   11d68:	str	r0, [sp, #48]	; 0x30
   11d6c:	cmn	lr, #1
   11d70:	beq	11d80 <putchar_unlocked@plt+0xda0>
   11d74:	cmp	r7, lr
   11d78:	bne	11d8c <putchar_unlocked@plt+0xdac>
   11d7c:	b	12938 <putchar_unlocked@plt+0x1958>
   11d80:	ldrb	r0, [ip, r7]
   11d84:	cmp	r0, #0
   11d88:	beq	12940 <putchar_unlocked@plt+0x1960>
   11d8c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11d90:	mov	r9, #0
   11d94:	str	r5, [fp, #-48]	; 0xffffffd0
   11d98:	str	r6, [fp, #-52]	; 0xffffffcc
   11d9c:	cmp	r0, #0
   11da0:	beq	11de0 <putchar_unlocked@plt+0xe00>
   11da4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11da8:	mov	r5, r4
   11dac:	add	r4, r7, r0
   11db0:	cmp	r0, #2
   11db4:	bcc	11dd0 <putchar_unlocked@plt+0xdf0>
   11db8:	cmn	lr, #1
   11dbc:	bne	11dd0 <putchar_unlocked@plt+0xdf0>
   11dc0:	mov	r0, ip
   11dc4:	bl	10ef0 <strlen@plt>
   11dc8:	ldr	ip, [fp, #-84]	; 0xffffffac
   11dcc:	mov	lr, r0
   11dd0:	cmp	r4, lr
   11dd4:	bls	11de8 <putchar_unlocked@plt+0xe08>
   11dd8:	mov	r6, #0
   11ddc:	b	11e28 <putchar_unlocked@plt+0xe48>
   11de0:	mov	r6, #0
   11de4:	b	11e2c <putchar_unlocked@plt+0xe4c>
   11de8:	ldr	r1, [sp, #92]	; 0x5c
   11dec:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11df0:	add	r0, ip, r7
   11df4:	mov	r4, lr
   11df8:	bl	10e00 <memcmp@plt>
   11dfc:	ldr	r2, [sp, #88]	; 0x58
   11e00:	cmp	r0, #0
   11e04:	mov	r1, r0
   11e08:	movwne	r1, #1
   11e0c:	orr	r1, r1, r2
   11e10:	tst	r1, #1
   11e14:	beq	129d4 <putchar_unlocked@plt+0x19f4>
   11e18:	ldr	ip, [fp, #-84]	; 0xffffffac
   11e1c:	clz	r0, r0
   11e20:	mov	lr, r4
   11e24:	lsr	r6, r0, #5
   11e28:	mov	r4, r5
   11e2c:	ldrb	r5, [ip, r7]
   11e30:	cmp	r5, #126	; 0x7e
   11e34:	bhi	121fc <putchar_unlocked@plt+0x121c>
   11e38:	add	r3, pc, #16
   11e3c:	mov	sl, #1
   11e40:	mov	r2, #110	; 0x6e
   11e44:	mov	r0, #97	; 0x61
   11e48:	mov	r1, #0
   11e4c:	ldr	pc, [r3, r5, lsl #2]
   11e50:	andeq	r2, r1, r0, ror #1
   11e54:	strdeq	r2, [r1], -ip
   11e58:	strdeq	r2, [r1], -ip
   11e5c:	strdeq	r2, [r1], -ip
   11e60:	strdeq	r2, [r1], -ip
   11e64:	strdeq	r2, [r1], -ip
   11e68:	strdeq	r2, [r1], -ip
   11e6c:	andeq	r2, r1, r0, lsr #5
   11e70:	andeq	r2, r1, r0, asr #1
   11e74:	strheq	r2, [r1], -r8
   11e78:	andeq	r2, r1, ip, asr #1
   11e7c:	andeq	r2, r1, r0, asr r1
   11e80:	strheq	r2, [r1], -r0
   11e84:	andeq	r2, r1, r8, asr #1
   11e88:	strdeq	r2, [r1], -ip
   11e8c:	strdeq	r2, [r1], -ip
   11e90:	strdeq	r2, [r1], -ip
   11e94:	strdeq	r2, [r1], -ip
   11e98:	strdeq	r2, [r1], -ip
   11e9c:	strdeq	r2, [r1], -ip
   11ea0:	strdeq	r2, [r1], -ip
   11ea4:	strdeq	r2, [r1], -ip
   11ea8:	strdeq	r2, [r1], -ip
   11eac:	strdeq	r2, [r1], -ip
   11eb0:	strdeq	r2, [r1], -ip
   11eb4:	strdeq	r2, [r1], -ip
   11eb8:	strdeq	r2, [r1], -ip
   11ebc:	strdeq	r2, [r1], -ip
   11ec0:	strdeq	r2, [r1], -ip
   11ec4:	strdeq	r2, [r1], -ip
   11ec8:	strdeq	r2, [r1], -ip
   11ecc:	strdeq	r2, [r1], -ip
   11ed0:	andeq	r2, r1, r0, ror #4
   11ed4:	andeq	r2, r1, r4, ror #4
   11ed8:	andeq	r2, r1, r4, ror #4
   11edc:	andeq	r2, r1, r0, rrx
   11ee0:	andeq	r2, r1, r4, ror #4
   11ee4:	andeq	r2, r1, ip, asr #32
   11ee8:	andeq	r2, r1, r4, ror #4
   11eec:	andeq	r2, r1, r8, asr r1
   11ef0:	andeq	r2, r1, r4, ror #4
   11ef4:	andeq	r2, r1, r4, ror #4
   11ef8:	andeq	r2, r1, r4, ror #4
   11efc:	andeq	r2, r1, ip, asr #32
   11f00:	andeq	r2, r1, ip, asr #32
   11f04:	andeq	r2, r1, ip, asr #32
   11f08:	andeq	r2, r1, ip, asr #32
   11f0c:	andeq	r2, r1, ip, asr #32
   11f10:	andeq	r2, r1, ip, asr #32
   11f14:	andeq	r2, r1, ip, asr #32
   11f18:	andeq	r2, r1, ip, asr #32
   11f1c:	andeq	r2, r1, ip, asr #32
   11f20:	andeq	r2, r1, ip, asr #32
   11f24:	andeq	r2, r1, ip, asr #32
   11f28:	andeq	r2, r1, ip, asr #32
   11f2c:	andeq	r2, r1, ip, asr #32
   11f30:	andeq	r2, r1, ip, asr #32
   11f34:	andeq	r2, r1, ip, asr #32
   11f38:	andeq	r2, r1, ip, asr #32
   11f3c:	andeq	r2, r1, r4, ror #4
   11f40:	andeq	r2, r1, r4, ror #4
   11f44:	andeq	r2, r1, r4, ror #4
   11f48:	andeq	r2, r1, r4, ror #4
   11f4c:	andeq	r2, r1, r4, lsr #2
   11f50:	strdeq	r2, [r1], -ip
   11f54:	andeq	r2, r1, ip, asr #32
   11f58:	andeq	r2, r1, ip, asr #32
   11f5c:	andeq	r2, r1, ip, asr #32
   11f60:	andeq	r2, r1, ip, asr #32
   11f64:	andeq	r2, r1, ip, asr #32
   11f68:	andeq	r2, r1, ip, asr #32
   11f6c:	andeq	r2, r1, ip, asr #32
   11f70:	andeq	r2, r1, ip, asr #32
   11f74:	andeq	r2, r1, ip, asr #32
   11f78:	andeq	r2, r1, ip, asr #32
   11f7c:	andeq	r2, r1, ip, asr #32
   11f80:	andeq	r2, r1, ip, asr #32
   11f84:	andeq	r2, r1, ip, asr #32
   11f88:	andeq	r2, r1, ip, asr #32
   11f8c:	andeq	r2, r1, ip, asr #32
   11f90:	andeq	r2, r1, ip, asr #32
   11f94:	andeq	r2, r1, ip, asr #32
   11f98:	andeq	r2, r1, ip, asr #32
   11f9c:	andeq	r2, r1, ip, asr #32
   11fa0:	andeq	r2, r1, ip, asr #32
   11fa4:	andeq	r2, r1, ip, asr #32
   11fa8:	andeq	r2, r1, ip, asr #32
   11fac:	andeq	r2, r1, ip, asr #32
   11fb0:	andeq	r2, r1, ip, asr #32
   11fb4:	andeq	r2, r1, ip, asr #32
   11fb8:	andeq	r2, r1, ip, asr #32
   11fbc:	andeq	r2, r1, r4, ror #4
   11fc0:	andeq	r2, r1, ip, lsl #1
   11fc4:	andeq	r2, r1, ip, asr #32
   11fc8:	andeq	r2, r1, r4, ror #4
   11fcc:	andeq	r2, r1, ip, asr #32
   11fd0:	andeq	r2, r1, r4, ror #4
   11fd4:	andeq	r2, r1, ip, asr #32
   11fd8:	andeq	r2, r1, ip, asr #32
   11fdc:	andeq	r2, r1, ip, asr #32
   11fe0:	andeq	r2, r1, ip, asr #32
   11fe4:	andeq	r2, r1, ip, asr #32
   11fe8:	andeq	r2, r1, ip, asr #32
   11fec:	andeq	r2, r1, ip, asr #32
   11ff0:	andeq	r2, r1, ip, asr #32
   11ff4:	andeq	r2, r1, ip, asr #32
   11ff8:	andeq	r2, r1, ip, asr #32
   11ffc:	andeq	r2, r1, ip, asr #32
   12000:	andeq	r2, r1, ip, asr #32
   12004:	andeq	r2, r1, ip, asr #32
   12008:	andeq	r2, r1, ip, asr #32
   1200c:	andeq	r2, r1, ip, asr #32
   12010:	andeq	r2, r1, ip, asr #32
   12014:	andeq	r2, r1, ip, asr #32
   12018:	andeq	r2, r1, ip, asr #32
   1201c:	andeq	r2, r1, ip, asr #32
   12020:	andeq	r2, r1, ip, asr #32
   12024:	andeq	r2, r1, ip, asr #32
   12028:	andeq	r2, r1, ip, asr #32
   1202c:	andeq	r2, r1, ip, asr #32
   12030:	andeq	r2, r1, ip, asr #32
   12034:	andeq	r2, r1, ip, asr #32
   12038:	andeq	r2, r1, ip, asr #32
   1203c:	andeq	r2, r1, r0, ror r0
   12040:	andeq	r2, r1, r4, ror #4
   12044:	andeq	r2, r1, r0, ror r0
   12048:	andeq	r2, r1, r0, rrx
   1204c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12050:	cmp	r0, #0
   12054:	beq	122b4 <putchar_unlocked@plt+0x12d4>
   12058:	ldr	r0, [fp, #16]
   1205c:	b	122b8 <putchar_unlocked@plt+0x12d8>
   12060:	mov	sl, #0
   12064:	cmp	r7, #0
   12068:	bne	124d0 <putchar_unlocked@plt+0x14f0>
   1206c:	b	12260 <putchar_unlocked@plt+0x1280>
   12070:	mov	sl, #0
   12074:	cmn	lr, #1
   12078:	beq	1224c <putchar_unlocked@plt+0x126c>
   1207c:	cmp	r7, #0
   12080:	cmpeq	lr, #1
   12084:	bne	124d0 <putchar_unlocked@plt+0x14f0>
   12088:	b	12260 <putchar_unlocked@plt+0x1280>
   1208c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12090:	cmp	r0, #2
   12094:	bne	12284 <putchar_unlocked@plt+0x12a4>
   12098:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1209c:	tst	r0, #1
   120a0:	bne	129f0 <putchar_unlocked@plt+0x1a10>
   120a4:	mov	r9, #0
   120a8:	mov	r0, #92	; 0x5c
   120ac:	b	12298 <putchar_unlocked@plt+0x12b8>
   120b0:	mov	r0, #102	; 0x66
   120b4:	b	122a0 <putchar_unlocked@plt+0x12c0>
   120b8:	mov	r2, #116	; 0x74
   120bc:	b	120cc <putchar_unlocked@plt+0x10ec>
   120c0:	mov	r0, #98	; 0x62
   120c4:	b	122a0 <putchar_unlocked@plt+0x12c0>
   120c8:	mov	r2, #114	; 0x72
   120cc:	ldr	r0, [sp, #60]	; 0x3c
   120d0:	tst	r0, #1
   120d4:	mov	r0, r2
   120d8:	bne	122a0 <putchar_unlocked@plt+0x12c0>
   120dc:	b	129f0 <putchar_unlocked@plt+0x1a10>
   120e0:	ldr	r0, [sp, #84]	; 0x54
   120e4:	tst	r0, #1
   120e8:	beq	1238c <putchar_unlocked@plt+0x13ac>
   120ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   120f0:	tst	r0, #1
   120f4:	bne	12af8 <putchar_unlocked@plt+0x1b18>
   120f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   120fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12100:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12104:	cmp	r0, #2
   12108:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1210c:	movwne	r0, #1
   12110:	orr	r0, r0, r3
   12114:	tst	r0, #1
   12118:	beq	1280c <putchar_unlocked@plt+0x182c>
   1211c:	mov	r0, r8
   12120:	b	1284c <putchar_unlocked@plt+0x186c>
   12124:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12128:	mov	r9, #0
   1212c:	mov	r5, #63	; 0x3f
   12130:	cmp	r0, #5
   12134:	beq	124d8 <putchar_unlocked@plt+0x14f8>
   12138:	cmp	r0, #2
   1213c:	bne	12598 <putchar_unlocked@plt+0x15b8>
   12140:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12144:	tst	r0, #1
   12148:	beq	1259c <putchar_unlocked@plt+0x15bc>
   1214c:	b	129f0 <putchar_unlocked@plt+0x1a10>
   12150:	mov	r0, #118	; 0x76
   12154:	b	122a0 <putchar_unlocked@plt+0x12c0>
   12158:	mov	r0, #1
   1215c:	mov	r5, #39	; 0x27
   12160:	str	r0, [sp, #52]	; 0x34
   12164:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12168:	cmp	r0, #2
   1216c:	bne	121f4 <putchar_unlocked@plt+0x1214>
   12170:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12174:	tst	r0, #1
   12178:	bne	129f0 <putchar_unlocked@plt+0x1a10>
   1217c:	ldr	r3, [sp, #68]	; 0x44
   12180:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12184:	mov	r9, #0
   12188:	clz	r1, r2
   1218c:	cmp	r3, #0
   12190:	mov	r0, r3
   12194:	movwne	r0, #1
   12198:	lsr	r1, r1, #5
   1219c:	orrs	r0, r0, r1
   121a0:	moveq	r3, r2
   121a4:	moveq	r2, r0
   121a8:	cmp	r8, r2
   121ac:	str	r3, [sp, #68]	; 0x44
   121b0:	str	r2, [fp, #-52]	; 0xffffffcc
   121b4:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   121b8:	movcc	r0, #39	; 0x27
   121bc:	strbcc	r0, [r1, r8]
   121c0:	add	r0, r8, #1
   121c4:	cmp	r0, r2
   121c8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   121cc:	movcc	r1, #92	; 0x5c
   121d0:	strbcc	r1, [r3, r0]
   121d4:	add	r0, r8, #2
   121d8:	add	r8, r8, #3
   121dc:	cmp	r0, r2
   121e0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   121e4:	movcc	r1, #39	; 0x27
   121e8:	strbcc	r1, [r2, r0]
   121ec:	mov	r0, #0
   121f0:	str	r0, [fp, #-48]	; 0xffffffd0
   121f4:	mov	sl, #1
   121f8:	b	1204c <putchar_unlocked@plt+0x106c>
   121fc:	ldr	r0, [sp, #32]
   12200:	cmp	r0, #1
   12204:	bne	123b0 <putchar_unlocked@plt+0x13d0>
   12208:	str	lr, [sp, #80]	; 0x50
   1220c:	bl	10ed8 <__ctype_b_loc@plt>
   12210:	ldr	r0, [r0]
   12214:	ldr	ip, [fp, #-84]	; 0xffffffac
   12218:	mov	r1, #1
   1221c:	add	r0, r0, r5, lsl #1
   12220:	ldrb	r0, [r0, #1]
   12224:	ubfx	sl, r0, #6, #1
   12228:	ldr	r0, [sp, #48]	; 0x30
   1222c:	mov	r2, r1
   12230:	cmp	r1, #1
   12234:	orr	r0, sl, r0
   12238:	bhi	125a4 <putchar_unlocked@plt+0x15c4>
   1223c:	tst	r0, #1
   12240:	beq	125a4 <putchar_unlocked@plt+0x15c4>
   12244:	ldr	lr, [sp, #80]	; 0x50
   12248:	b	1204c <putchar_unlocked@plt+0x106c>
   1224c:	cmp	r7, #0
   12250:	bne	124cc <putchar_unlocked@plt+0x14ec>
   12254:	ldrb	r0, [ip, #1]
   12258:	cmp	r0, #0
   1225c:	bne	124cc <putchar_unlocked@plt+0x14ec>
   12260:	mov	r1, #1
   12264:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12268:	cmp	r0, #2
   1226c:	bne	1227c <putchar_unlocked@plt+0x129c>
   12270:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12274:	tst	r0, #1
   12278:	bne	129f0 <putchar_unlocked@plt+0x1a10>
   1227c:	mov	sl, r1
   12280:	b	1204c <putchar_unlocked@plt+0x106c>
   12284:	ldr	r1, [sp, #44]	; 0x2c
   12288:	mov	r9, #0
   1228c:	mov	r0, #92	; 0x5c
   12290:	cmp	r1, #0
   12294:	beq	122a0 <putchar_unlocked@plt+0x12c0>
   12298:	mov	sl, #0
   1229c:	b	127b8 <putchar_unlocked@plt+0x17d8>
   122a0:	ldr	r1, [sp, #84]	; 0x54
   122a4:	mov	sl, #0
   122a8:	mov	r9, #0
   122ac:	tst	r1, #1
   122b0:	bne	122ec <putchar_unlocked@plt+0x130c>
   122b4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   122b8:	cmp	r0, #0
   122bc:	mov	r0, r5
   122c0:	beq	122e4 <putchar_unlocked@plt+0x1304>
   122c4:	ldr	r1, [fp, #16]
   122c8:	ubfx	r0, r5, #5, #3
   122cc:	mov	r2, #1
   122d0:	ldr	r0, [r1, r0, lsl #2]
   122d4:	and	r1, r5, #31
   122d8:	tst	r0, r2, lsl r1
   122dc:	mov	r0, r5
   122e0:	bne	122ec <putchar_unlocked@plt+0x130c>
   122e4:	cmp	r6, #0
   122e8:	beq	127b8 <putchar_unlocked@plt+0x17d8>
   122ec:	ldr	r1, [fp, #-72]	; 0xffffffb8
   122f0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   122f4:	tst	r1, #1
   122f8:	bne	129cc <putchar_unlocked@plt+0x19ec>
   122fc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12300:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12304:	cmp	r1, #2
   12308:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1230c:	movwne	r1, #1
   12310:	orr	r1, r1, r5
   12314:	tst	r1, #1
   12318:	bne	1235c <putchar_unlocked@plt+0x137c>
   1231c:	cmp	r8, r6
   12320:	mov	r5, #1
   12324:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12328:	movcc	r1, #39	; 0x27
   1232c:	strbcc	r1, [r2, r8]
   12330:	add	r1, r8, #1
   12334:	cmp	r1, r6
   12338:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1233c:	movcc	r2, #36	; 0x24
   12340:	strbcc	r2, [r3, r1]
   12344:	add	r1, r8, #2
   12348:	add	r8, r8, #3
   1234c:	cmp	r1, r6
   12350:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12354:	movcc	r2, #39	; 0x27
   12358:	strbcc	r2, [r3, r1]
   1235c:	cmp	r8, r6
   12360:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12364:	movcc	r1, #92	; 0x5c
   12368:	strbcc	r1, [r2, r8]
   1236c:	add	r8, r8, #1
   12370:	cmp	r8, r6
   12374:	and	r4, r4, sl
   12378:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   1237c:	strbcc	r0, [r1, r8]
   12380:	add	r8, r8, #1
   12384:	add	r7, r7, #1
   12388:	b	11d6c <putchar_unlocked@plt+0xd8c>
   1238c:	ldr	r0, [sp, #28]
   12390:	mov	sl, #0
   12394:	mov	r9, #0
   12398:	mov	r5, #0
   1239c:	cmp	r0, #0
   123a0:	beq	122b4 <putchar_unlocked@plt+0x12d4>
   123a4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   123a8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   123ac:	b	12384 <putchar_unlocked@plt+0x13a4>
   123b0:	mov	r0, #0
   123b4:	cmn	lr, #1
   123b8:	str	r6, [sp, #76]	; 0x4c
   123bc:	str	r4, [sp, #20]
   123c0:	str	r0, [fp, #-36]	; 0xffffffdc
   123c4:	str	r0, [fp, #-40]	; 0xffffffd8
   123c8:	bne	123dc <putchar_unlocked@plt+0x13fc>
   123cc:	mov	r0, ip
   123d0:	bl	10ef0 <strlen@plt>
   123d4:	ldr	ip, [fp, #-84]	; 0xffffffac
   123d8:	mov	lr, r0
   123dc:	add	r0, ip, r7
   123e0:	mov	sl, #1
   123e4:	mov	r6, #0
   123e8:	sub	r4, fp, #40	; 0x28
   123ec:	str	lr, [sp, #80]	; 0x50
   123f0:	str	r0, [sp, #36]	; 0x24
   123f4:	str	r6, [sp, #40]	; 0x28
   123f8:	add	r6, r6, r7
   123fc:	sub	r0, fp, #44	; 0x2c
   12400:	mov	r3, r4
   12404:	add	r1, ip, r6
   12408:	sub	r2, lr, r6
   1240c:	bl	141a0 <putchar_unlocked@plt+0x31c0>
   12410:	cmp	r0, #0
   12414:	beq	12920 <putchar_unlocked@plt+0x1940>
   12418:	cmn	r0, #1
   1241c:	beq	128e0 <putchar_unlocked@plt+0x1900>
   12420:	ldr	lr, [sp, #80]	; 0x50
   12424:	cmn	r0, #2
   12428:	beq	128e8 <putchar_unlocked@plt+0x1908>
   1242c:	ldr	r2, [sp, #56]	; 0x38
   12430:	cmp	r0, #2
   12434:	mov	r1, #0
   12438:	movwcc	r1, #1
   1243c:	eor	r2, r2, #1
   12440:	orrs	r1, r2, r1
   12444:	bne	12490 <putchar_unlocked@plt+0x14b0>
   12448:	ldr	r1, [sp, #40]	; 0x28
   1244c:	ldr	r2, [sp, #36]	; 0x24
   12450:	add	ip, r2, r1
   12454:	mov	r2, #1
   12458:	ldrb	r3, [ip, r2]
   1245c:	sub	r6, r3, #94	; 0x5e
   12460:	cmp	r6, #30
   12464:	bhi	12478 <putchar_unlocked@plt+0x1498>
   12468:	mov	r4, #1
   1246c:	mov	r1, #1073741829	; 0x40000005
   12470:	tst	r1, r4, lsl r6
   12474:	bne	129ec <putchar_unlocked@plt+0x1a0c>
   12478:	sub	r3, r3, #91	; 0x5b
   1247c:	cmp	r3, #2
   12480:	bcc	129ec <putchar_unlocked@plt+0x1a0c>
   12484:	add	r2, r2, #1
   12488:	cmp	r2, r0
   1248c:	bcc	12458 <putchar_unlocked@plt+0x1478>
   12490:	ldr	r6, [sp, #40]	; 0x28
   12494:	add	r6, r0, r6
   12498:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1249c:	bl	10e3c <iswprint@plt>
   124a0:	cmp	r0, #0
   124a4:	sub	r4, fp, #40	; 0x28
   124a8:	movwne	r0, #1
   124ac:	and	sl, sl, r0
   124b0:	mov	r0, r4
   124b4:	bl	10df4 <mbsinit@plt>
   124b8:	ldr	lr, [sp, #80]	; 0x50
   124bc:	ldr	ip, [fp, #-84]	; 0xffffffac
   124c0:	cmp	r0, #0
   124c4:	beq	123f4 <putchar_unlocked@plt+0x1414>
   124c8:	b	12928 <putchar_unlocked@plt+0x1948>
   124cc:	mvn	lr, #0
   124d0:	mov	r9, #0
   124d4:	b	1204c <putchar_unlocked@plt+0x106c>
   124d8:	ldr	r0, [sp, #24]
   124dc:	cmp	r0, #0
   124e0:	beq	12598 <putchar_unlocked@plt+0x15b8>
   124e4:	add	r0, r7, #2
   124e8:	cmp	r0, lr
   124ec:	bcs	12598 <putchar_unlocked@plt+0x15b8>
   124f0:	add	r1, ip, r7
   124f4:	ldrb	r1, [r1, #1]
   124f8:	cmp	r1, #63	; 0x3f
   124fc:	bne	12598 <putchar_unlocked@plt+0x15b8>
   12500:	ldrb	r5, [ip, r0]
   12504:	sub	r1, r5, #33	; 0x21
   12508:	cmp	r1, #29
   1250c:	bhi	12598 <putchar_unlocked@plt+0x15b8>
   12510:	movw	r3, #20929	; 0x51c1
   12514:	mov	r2, #1
   12518:	movt	r3, #14336	; 0x3800
   1251c:	tst	r3, r2, lsl r1
   12520:	beq	12598 <putchar_unlocked@plt+0x15b8>
   12524:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12528:	tst	r1, #1
   1252c:	bne	12b00 <putchar_unlocked@plt+0x1b20>
   12530:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12534:	mov	r7, r0
   12538:	cmp	r8, r1
   1253c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12540:	movcc	r1, #63	; 0x3f
   12544:	strbcc	r1, [r2, r8]
   12548:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1254c:	add	r1, r8, #1
   12550:	cmp	r1, r2
   12554:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12558:	movcc	r2, #34	; 0x22
   1255c:	strbcc	r2, [r3, r1]
   12560:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12564:	add	r1, r8, #2
   12568:	cmp	r1, r2
   1256c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12570:	movcc	r2, #34	; 0x22
   12574:	strbcc	r2, [r3, r1]
   12578:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1257c:	add	r1, r8, #3
   12580:	add	r8, r8, #4
   12584:	cmp	r1, r2
   12588:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1258c:	movcc	r2, #63	; 0x3f
   12590:	strbcc	r2, [r3, r1]
   12594:	b	1259c <putchar_unlocked@plt+0x15bc>
   12598:	mov	r5, #63	; 0x3f
   1259c:	mov	sl, #0
   125a0:	b	1204c <putchar_unlocked@plt+0x106c>
   125a4:	str	r0, [sp, #40]	; 0x28
   125a8:	add	r0, r2, r7
   125ac:	str	r6, [sp, #76]	; 0x4c
   125b0:	add	r1, r7, #1
   125b4:	ldr	lr, [sp, #80]	; 0x50
   125b8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   125bc:	ldr	r6, [fp, #-52]	; 0xffffffcc
   125c0:	mov	r3, #0
   125c4:	str	r0, [sp, #36]	; 0x24
   125c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   125cc:	b	12660 <putchar_unlocked@plt+0x1680>
   125d0:	str	r0, [sp, #76]	; 0x4c
   125d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   125d8:	cmp	r9, #0
   125dc:	movwne	r9, #1
   125e0:	mvn	r7, r0
   125e4:	orr	r7, r7, r9
   125e8:	tst	r7, #1
   125ec:	bne	1263c <putchar_unlocked@plt+0x165c>
   125f0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   125f4:	cmp	r8, r6
   125f8:	bcs	12610 <putchar_unlocked@plt+0x1630>
   125fc:	ldr	r7, [fp, #-56]	; 0xffffffc8
   12600:	mov	r2, r4
   12604:	mov	r4, #39	; 0x27
   12608:	strb	r4, [r7, r8]
   1260c:	mov	r4, r2
   12610:	add	r7, r8, #1
   12614:	cmp	r7, r6
   12618:	bcs	12630 <putchar_unlocked@plt+0x1650>
   1261c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12620:	mov	r2, r4
   12624:	mov	r4, #39	; 0x27
   12628:	strb	r4, [r0, r7]
   1262c:	mov	r4, r2
   12630:	add	r8, r8, #2
   12634:	mov	r0, #0
   12638:	b	12644 <putchar_unlocked@plt+0x1664>
   1263c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12640:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12644:	cmp	r8, r6
   12648:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1264c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12650:	strbcc	r5, [r2, r8]
   12654:	add	r8, r8, #1
   12658:	ldrb	r5, [ip, r1]
   1265c:	add	r1, r1, #1
   12660:	ldr	r2, [sp, #40]	; 0x28
   12664:	tst	r2, #1
   12668:	beq	126a4 <putchar_unlocked@plt+0x16c4>
   1266c:	ldr	r2, [sp, #76]	; 0x4c
   12670:	str	r0, [fp, #-48]	; 0xffffffd0
   12674:	tst	r2, #1
   12678:	beq	1269c <putchar_unlocked@plt+0x16bc>
   1267c:	cmp	r8, r6
   12680:	bcs	12698 <putchar_unlocked@plt+0x16b8>
   12684:	ldr	r6, [fp, #-56]	; 0xffffffc8
   12688:	mov	r2, r4
   1268c:	mov	r4, #92	; 0x5c
   12690:	strb	r4, [r6, r8]
   12694:	mov	r4, r2
   12698:	add	r8, r8, #1
   1269c:	mov	r0, #0
   126a0:	b	12798 <putchar_unlocked@plt+0x17b8>
   126a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   126a8:	tst	r2, #1
   126ac:	bne	129f8 <putchar_unlocked@plt+0x1a18>
   126b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   126b4:	cmp	r7, #2
   126b8:	movwne	r3, #1
   126bc:	orr	r3, r3, r0
   126c0:	tst	r3, #1
   126c4:	bne	12720 <putchar_unlocked@plt+0x1740>
   126c8:	cmp	r8, r6
   126cc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   126d0:	movcc	r3, #39	; 0x27
   126d4:	strbcc	r3, [r2, r8]
   126d8:	add	r3, r8, #1
   126dc:	cmp	r3, r6
   126e0:	bcs	126f8 <putchar_unlocked@plt+0x1718>
   126e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   126e8:	mov	r7, r4
   126ec:	mov	r4, #36	; 0x24
   126f0:	strb	r4, [r2, r3]
   126f4:	mov	r4, r7
   126f8:	add	r3, r8, #2
   126fc:	cmp	r3, r6
   12700:	bcs	12718 <putchar_unlocked@plt+0x1738>
   12704:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12708:	mov	r7, r4
   1270c:	mov	r4, #39	; 0x27
   12710:	strb	r4, [r2, r3]
   12714:	mov	r4, r7
   12718:	add	r8, r8, #3
   1271c:	mov	r0, #1
   12720:	cmp	r8, r6
   12724:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12728:	movcc	r3, #92	; 0x5c
   1272c:	strbcc	r3, [r2, r8]
   12730:	add	r3, r8, #1
   12734:	cmp	r3, r6
   12738:	bcs	12758 <putchar_unlocked@plt+0x1778>
   1273c:	mov	r2, r4
   12740:	and	r7, r5, #192	; 0xc0
   12744:	mov	r4, #48	; 0x30
   12748:	orr	r7, r4, r7, lsr #6
   1274c:	mov	r4, r2
   12750:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12754:	strb	r7, [r2, r3]
   12758:	add	r3, r8, #2
   1275c:	cmp	r3, r6
   12760:	bcs	12780 <putchar_unlocked@plt+0x17a0>
   12764:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12768:	mov	r6, r4
   1276c:	lsr	r7, r5, #3
   12770:	mov	r4, #6
   12774:	bfi	r7, r4, #3, #29
   12778:	mov	r4, r6
   1277c:	strb	r7, [r2, r3]
   12780:	str	r0, [fp, #-48]	; 0xffffffd0
   12784:	ldr	r0, [sp, #76]	; 0x4c
   12788:	mov	r3, #6
   1278c:	add	r8, r8, #3
   12790:	bfi	r5, r3, #3, #29
   12794:	mov	r3, #1
   12798:	ldr	r2, [sp, #36]	; 0x24
   1279c:	and	r9, r3, #1
   127a0:	cmp	r2, r1
   127a4:	bhi	125d0 <putchar_unlocked@plt+0x15f0>
   127a8:	cmp	r9, #0
   127ac:	sub	r7, r1, #1
   127b0:	mov	r0, r5
   127b4:	movwne	r9, #1
   127b8:	cmp	r9, #0
   127bc:	bne	12800 <putchar_unlocked@plt+0x1820>
   127c0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   127c4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   127c8:	tst	r5, #1
   127cc:	beq	12370 <putchar_unlocked@plt+0x1390>
   127d0:	cmp	r8, r6
   127d4:	mov	r5, #0
   127d8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   127dc:	movcc	r1, #39	; 0x27
   127e0:	strbcc	r1, [r2, r8]
   127e4:	add	r1, r8, #1
   127e8:	add	r8, r8, #2
   127ec:	cmp	r1, r6
   127f0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   127f4:	movcc	r2, #39	; 0x27
   127f8:	strbcc	r2, [r3, r1]
   127fc:	b	12370 <putchar_unlocked@plt+0x1390>
   12800:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12804:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12808:	b	12370 <putchar_unlocked@plt+0x1390>
   1280c:	cmp	r8, r1
   12810:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12814:	movcc	r0, #39	; 0x27
   12818:	strbcc	r0, [r2, r8]
   1281c:	add	r0, r8, #1
   12820:	cmp	r0, r1
   12824:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12828:	movcc	r2, #36	; 0x24
   1282c:	strbcc	r2, [r3, r0]
   12830:	add	r0, r8, #2
   12834:	cmp	r0, r1
   12838:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1283c:	movcc	r2, #39	; 0x27
   12840:	strbcc	r2, [r3, r0]
   12844:	add	r0, r8, #3
   12848:	mov	r3, #1
   1284c:	cmp	r0, r1
   12850:	add	r8, r0, #1
   12854:	str	r3, [fp, #-48]	; 0xffffffd0
   12858:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1285c:	movcc	r1, #92	; 0x5c
   12860:	strbcc	r1, [r2, r0]
   12864:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12868:	cmp	r1, #2
   1286c:	beq	128d0 <putchar_unlocked@plt+0x18f0>
   12870:	add	r1, r7, #1
   12874:	mov	sl, #0
   12878:	mov	r9, #1
   1287c:	mov	r5, #48	; 0x30
   12880:	cmp	r1, lr
   12884:	bcs	1204c <putchar_unlocked@plt+0x106c>
   12888:	ldrb	r1, [ip, r1]
   1288c:	sub	r1, r1, #48	; 0x30
   12890:	uxtb	r1, r1
   12894:	cmp	r1, #9
   12898:	bhi	1204c <putchar_unlocked@plt+0x106c>
   1289c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   128a0:	cmp	r8, r1
   128a4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   128a8:	movcc	r1, #48	; 0x30
   128ac:	strbcc	r1, [r2, r8]
   128b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   128b4:	add	r1, r0, #2
   128b8:	add	r8, r0, #3
   128bc:	cmp	r1, r2
   128c0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   128c4:	movcc	r2, #48	; 0x30
   128c8:	strbcc	r2, [r3, r1]
   128cc:	b	1204c <putchar_unlocked@plt+0x106c>
   128d0:	mov	r0, #48	; 0x30
   128d4:	mov	r9, #1
   128d8:	mov	sl, #0
   128dc:	b	122e4 <putchar_unlocked@plt+0x1304>
   128e0:	mov	sl, #0
   128e4:	b	12920 <putchar_unlocked@plt+0x1940>
   128e8:	mov	sl, #0
   128ec:	cmp	lr, r6
   128f0:	bls	12920 <putchar_unlocked@plt+0x1940>
   128f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   128f8:	ldr	r6, [sp, #40]	; 0x28
   128fc:	ldr	r0, [sp, #36]	; 0x24
   12900:	ldrb	r0, [r0, r6]
   12904:	cmp	r0, #0
   12908:	beq	12928 <putchar_unlocked@plt+0x1948>
   1290c:	add	r6, r6, #1
   12910:	add	r0, r7, r6
   12914:	cmp	r0, lr
   12918:	bcc	128fc <putchar_unlocked@plt+0x191c>
   1291c:	b	12928 <putchar_unlocked@plt+0x1948>
   12920:	ldr	ip, [fp, #-84]	; 0xffffffac
   12924:	ldr	r6, [sp, #40]	; 0x28
   12928:	mov	r1, r6
   1292c:	ldr	r4, [sp, #20]
   12930:	ldr	r6, [sp, #76]	; 0x4c
   12934:	b	12228 <putchar_unlocked@plt+0x1248>
   12938:	mov	lr, r7
   1293c:	b	12944 <putchar_unlocked@plt+0x1964>
   12940:	mvn	lr, #0
   12944:	ldr	r9, [fp, #-64]	; 0xffffffc0
   12948:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1294c:	eor	r0, r9, #2
   12950:	orr	r0, r0, r8
   12954:	clz	r0, r0
   12958:	lsr	r0, r0, #5
   1295c:	tst	r1, r0
   12960:	bne	12a5c <putchar_unlocked@plt+0x1a7c>
   12964:	mov	r0, r1
   12968:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1296c:	cmp	r9, #2
   12970:	movwne	r1, #1
   12974:	orr	r0, r0, r1
   12978:	tst	r0, #1
   1297c:	bne	12a9c <putchar_unlocked@plt+0x1abc>
   12980:	ldr	r0, [sp, #52]	; 0x34
   12984:	ldr	r1, [sp, #68]	; 0x44
   12988:	str	lr, [sp, #80]	; 0x50
   1298c:	eor	r0, r0, #1
   12990:	tst	r0, #1
   12994:	bne	12a9c <putchar_unlocked@plt+0x1abc>
   12998:	tst	r4, #1
   1299c:	bne	12a64 <putchar_unlocked@plt+0x1a84>
   129a0:	mov	r7, #0
   129a4:	cmp	r1, #0
   129a8:	beq	12a94 <putchar_unlocked@plt+0x1ab4>
   129ac:	ldr	r0, [sp, #84]	; 0x54
   129b0:	mov	r3, #0
   129b4:	cmp	r6, #0
   129b8:	mov	r2, #0
   129bc:	mov	r4, r1
   129c0:	str	r3, [fp, #-72]	; 0xffffffb8
   129c4:	beq	11b00 <putchar_unlocked@plt+0xb20>
   129c8:	b	12a9c <putchar_unlocked@plt+0x1abc>
   129cc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   129d0:	b	129f8 <putchar_unlocked@plt+0x1a18>
   129d4:	ldr	ip, [fp, #-84]	; 0xffffffac
   129d8:	mov	r2, #1
   129dc:	mov	lr, r4
   129e0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   129e4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   129e8:	b	129fc <putchar_unlocked@plt+0x1a1c>
   129ec:	ldr	ip, [fp, #-84]	; 0xffffffac
   129f0:	mov	r7, #2
   129f4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   129f8:	ldr	r2, [sp, #84]	; 0x54
   129fc:	mov	r0, #0
   12a00:	ldr	r1, [fp, #12]
   12a04:	tst	r2, #1
   12a08:	mov	r2, r7
   12a0c:	mov	r3, lr
   12a10:	str	r0, [sp, #8]
   12a14:	ldr	r0, [sp, #64]	; 0x40
   12a18:	movwne	r2, #4
   12a1c:	cmp	r7, #2
   12a20:	movne	r2, r7
   12a24:	str	r2, [sp]
   12a28:	mov	r2, ip
   12a2c:	bic	r1, r1, #2
   12a30:	str	r0, [sp, #12]
   12a34:	ldr	r0, [sp, #72]	; 0x48
   12a38:	str	r1, [sp, #4]
   12a3c:	mov	r1, r6
   12a40:	str	r0, [sp, #16]
   12a44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12a48:	bl	11a88 <putchar_unlocked@plt+0xaa8>
   12a4c:	mov	r8, r0
   12a50:	mov	r0, r8
   12a54:	sub	sp, fp, #28
   12a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a5c:	mov	r7, #2
   12a60:	b	129f8 <putchar_unlocked@plt+0x1a18>
   12a64:	mov	r0, #5
   12a68:	ldr	r2, [fp, #-84]	; 0xffffffac
   12a6c:	ldr	r3, [sp, #80]	; 0x50
   12a70:	str	r0, [sp]
   12a74:	ldr	r0, [fp, #12]
   12a78:	str	r0, [sp, #4]
   12a7c:	ldr	r0, [fp, #16]
   12a80:	str	r0, [sp, #8]
   12a84:	ldr	r0, [sp, #64]	; 0x40
   12a88:	str	r0, [sp, #12]
   12a8c:	ldr	r0, [sp, #72]	; 0x48
   12a90:	b	12a40 <putchar_unlocked@plt+0x1a60>
   12a94:	mov	r0, #0
   12a98:	str	r0, [fp, #-72]	; 0xffffffb8
   12a9c:	ldr	r1, [sp, #92]	; 0x5c
   12aa0:	cmp	r1, #0
   12aa4:	beq	12ae4 <putchar_unlocked@plt+0x1b04>
   12aa8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12aac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12ab0:	tst	r0, #1
   12ab4:	bne	12ae8 <putchar_unlocked@plt+0x1b08>
   12ab8:	ldrb	r0, [r1]
   12abc:	cmp	r0, #0
   12ac0:	beq	12ae8 <putchar_unlocked@plt+0x1b08>
   12ac4:	add	r1, r1, #1
   12ac8:	cmp	r8, r6
   12acc:	strbcc	r0, [r2, r8]
   12ad0:	add	r8, r8, #1
   12ad4:	ldrb	r0, [r1], #1
   12ad8:	cmp	r0, #0
   12adc:	bne	12ac8 <putchar_unlocked@plt+0x1ae8>
   12ae0:	b	12ae8 <putchar_unlocked@plt+0x1b08>
   12ae4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12ae8:	cmp	r8, r6
   12aec:	movcc	r0, #0
   12af0:	strbcc	r0, [r2, r8]
   12af4:	b	12a50 <putchar_unlocked@plt+0x1a70>
   12af8:	mov	r2, #1
   12afc:	b	129e0 <putchar_unlocked@plt+0x1a00>
   12b00:	mov	r7, #5
   12b04:	b	129f4 <putchar_unlocked@plt+0x1a14>
   12b08:	bl	10fc8 <abort@plt>
   12b0c:	mov	r3, r2
   12b10:	mov	r2, #0
   12b14:	b	12b18 <putchar_unlocked@plt+0x1b38>
   12b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b1c:	add	fp, sp, #28
   12b20:	sub	sp, sp, #36	; 0x24
   12b24:	movw	r8, #20824	; 0x5158
   12b28:	cmp	r3, #0
   12b2c:	mov	r4, r2
   12b30:	str	r2, [sp, #24]
   12b34:	mov	r5, r1
   12b38:	mov	r6, r0
   12b3c:	str	r0, [sp, #20]
   12b40:	movt	r8, #2
   12b44:	movne	r8, r3
   12b48:	bl	10efc <__errno_location@plt>
   12b4c:	str	r0, [sp, #28]
   12b50:	cmp	r4, #0
   12b54:	add	sl, r8, #8
   12b58:	ldm	r8, {r3, r9}
   12b5c:	ldr	r7, [r0]
   12b60:	ldr	r1, [r8, #40]	; 0x28
   12b64:	ldr	r2, [r8, #44]	; 0x2c
   12b68:	mov	r0, #0
   12b6c:	orreq	r9, r9, #1
   12b70:	str	r7, [sp, #32]
   12b74:	mov	r7, r5
   12b78:	stm	sp, {r3, r9, sl}
   12b7c:	str	r1, [sp, #12]
   12b80:	str	r2, [sp, #16]
   12b84:	mov	r1, #0
   12b88:	mov	r2, r6
   12b8c:	mov	r3, r5
   12b90:	bl	11a88 <putchar_unlocked@plt+0xaa8>
   12b94:	add	r4, r0, #1
   12b98:	mov	r5, r0
   12b9c:	mov	r0, r4
   12ba0:	bl	13a14 <putchar_unlocked@plt+0x2a34>
   12ba4:	mov	r6, r0
   12ba8:	ldr	r0, [r8]
   12bac:	ldr	r2, [r8, #44]	; 0x2c
   12bb0:	ldr	r1, [r8, #40]	; 0x28
   12bb4:	mov	r3, r7
   12bb8:	stm	sp, {r0, r9, sl}
   12bbc:	str	r2, [sp, #16]
   12bc0:	str	r1, [sp, #12]
   12bc4:	mov	r0, r6
   12bc8:	mov	r1, r4
   12bcc:	ldr	r2, [sp, #20]
   12bd0:	bl	11a88 <putchar_unlocked@plt+0xaa8>
   12bd4:	ldr	r0, [sp, #24]
   12bd8:	ldr	r1, [sp, #32]
   12bdc:	ldr	r2, [sp, #28]
   12be0:	cmp	r0, #0
   12be4:	str	r1, [r2]
   12be8:	strne	r5, [r0]
   12bec:	mov	r0, r6
   12bf0:	sub	sp, fp, #28
   12bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bf8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12bfc:	add	fp, sp, #24
   12c00:	movw	r5, #20716	; 0x50ec
   12c04:	movw	r8, #20712	; 0x50e8
   12c08:	movt	r5, #2
   12c0c:	movt	r8, #2
   12c10:	ldr	r0, [r5]
   12c14:	ldr	r4, [r8]
   12c18:	cmp	r0, #2
   12c1c:	blt	12c48 <putchar_unlocked@plt+0x1c68>
   12c20:	add	r7, r4, #12
   12c24:	mov	r6, #0
   12c28:	ldr	r0, [r7, r6, lsl #3]
   12c2c:	bl	116b4 <putchar_unlocked@plt+0x6d4>
   12c30:	ldr	r1, [r5]
   12c34:	add	r2, r6, #2
   12c38:	add	r0, r6, #1
   12c3c:	mov	r6, r0
   12c40:	cmp	r2, r1
   12c44:	blt	12c28 <putchar_unlocked@plt+0x1c48>
   12c48:	ldr	r0, [r4, #4]
   12c4c:	movw	r7, #20872	; 0x5188
   12c50:	movt	r7, #2
   12c54:	cmp	r0, r7
   12c58:	beq	12c70 <putchar_unlocked@plt+0x1c90>
   12c5c:	bl	116b4 <putchar_unlocked@plt+0x6d4>
   12c60:	movw	r0, #20720	; 0x50f0
   12c64:	mov	r6, #256	; 0x100
   12c68:	movt	r0, #2
   12c6c:	strd	r6, [r0]
   12c70:	movw	r6, #20720	; 0x50f0
   12c74:	movt	r6, #2
   12c78:	cmp	r4, r6
   12c7c:	beq	12c8c <putchar_unlocked@plt+0x1cac>
   12c80:	mov	r0, r4
   12c84:	bl	116b4 <putchar_unlocked@plt+0x6d4>
   12c88:	str	r6, [r8]
   12c8c:	mov	r0, #1
   12c90:	str	r0, [r5]
   12c94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12c98:	movw	r3, #20824	; 0x5158
   12c9c:	mvn	r2, #0
   12ca0:	movt	r3, #2
   12ca4:	b	12ca8 <putchar_unlocked@plt+0x1cc8>
   12ca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cac:	add	fp, sp, #28
   12cb0:	sub	sp, sp, #44	; 0x2c
   12cb4:	mov	r7, r3
   12cb8:	str	r2, [sp, #36]	; 0x24
   12cbc:	str	r1, [sp, #32]
   12cc0:	mov	r5, r0
   12cc4:	bl	10efc <__errno_location@plt>
   12cc8:	cmp	r5, #0
   12ccc:	blt	12e38 <putchar_unlocked@plt+0x1e58>
   12cd0:	cmn	r5, #-2147483647	; 0x80000001
   12cd4:	beq	12e38 <putchar_unlocked@plt+0x1e58>
   12cd8:	movw	r8, #20716	; 0x50ec
   12cdc:	movw	r4, #20712	; 0x50e8
   12ce0:	str	r0, [sp, #28]
   12ce4:	ldr	r0, [r0]
   12ce8:	movt	r8, #2
   12cec:	movt	r4, #2
   12cf0:	ldr	r1, [r8]
   12cf4:	ldr	r6, [r4]
   12cf8:	str	r0, [sp, #24]
   12cfc:	cmp	r1, r5
   12d00:	ble	12d0c <putchar_unlocked@plt+0x1d2c>
   12d04:	mov	sl, r6
   12d08:	b	12d74 <putchar_unlocked@plt+0x1d94>
   12d0c:	movw	r9, #20720	; 0x50f0
   12d10:	mov	r0, #8
   12d14:	add	r2, r5, #1
   12d18:	str	r1, [fp, #-32]	; 0xffffffe0
   12d1c:	mvn	r3, #-2147483648	; 0x80000000
   12d20:	movt	r9, #2
   12d24:	str	r0, [sp]
   12d28:	sub	r2, r2, r1
   12d2c:	sub	r1, fp, #32
   12d30:	subs	r0, r6, r9
   12d34:	movne	r0, r6
   12d38:	bl	13b44 <putchar_unlocked@plt+0x2b64>
   12d3c:	cmp	r6, r9
   12d40:	mov	sl, r0
   12d44:	str	r0, [r4]
   12d48:	ldrdeq	r0, [r9]
   12d4c:	stmeq	sl, {r0, r1}
   12d50:	ldr	r1, [r8]
   12d54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12d58:	add	r0, sl, r1, lsl #3
   12d5c:	sub	r1, r2, r1
   12d60:	lsl	r2, r1, #3
   12d64:	mov	r1, #0
   12d68:	bl	10f14 <memset@plt>
   12d6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d70:	str	r0, [r8]
   12d74:	mov	r9, sl
   12d78:	ldr	r6, [r9, r5, lsl #3]!
   12d7c:	ldr	r4, [r9, #4]!
   12d80:	ldm	r7, {r0, r1}
   12d84:	ldr	r2, [r7, #40]	; 0x28
   12d88:	ldr	r3, [r7, #44]	; 0x2c
   12d8c:	orr	r8, r1, #1
   12d90:	add	r1, r7, #8
   12d94:	stm	sp, {r0, r8}
   12d98:	add	r0, sp, #8
   12d9c:	str	r1, [sp, #20]
   12da0:	stm	r0, {r1, r2, r3}
   12da4:	mov	r0, r4
   12da8:	mov	r1, r6
   12dac:	ldr	r2, [sp, #32]
   12db0:	ldr	r3, [sp, #36]	; 0x24
   12db4:	bl	11a88 <putchar_unlocked@plt+0xaa8>
   12db8:	cmp	r6, r0
   12dbc:	bhi	12e20 <putchar_unlocked@plt+0x1e40>
   12dc0:	add	r6, r0, #1
   12dc4:	movw	r0, #20872	; 0x5188
   12dc8:	movt	r0, #2
   12dcc:	str	r6, [sl, r5, lsl #3]
   12dd0:	cmp	r4, r0
   12dd4:	beq	12de0 <putchar_unlocked@plt+0x1e00>
   12dd8:	mov	r0, r4
   12ddc:	bl	116b4 <putchar_unlocked@plt+0x6d4>
   12de0:	mov	r0, r6
   12de4:	bl	13a14 <putchar_unlocked@plt+0x2a34>
   12de8:	str	r0, [r9]
   12dec:	mov	r4, r0
   12df0:	add	r3, sp, #8
   12df4:	ldr	r0, [r7]
   12df8:	ldr	r1, [r7, #40]	; 0x28
   12dfc:	ldr	r2, [r7, #44]	; 0x2c
   12e00:	stm	sp, {r0, r8}
   12e04:	ldr	r0, [sp, #20]
   12e08:	stm	r3, {r0, r1, r2}
   12e0c:	mov	r0, r4
   12e10:	mov	r1, r6
   12e14:	ldr	r2, [sp, #32]
   12e18:	ldr	r3, [sp, #36]	; 0x24
   12e1c:	bl	11a88 <putchar_unlocked@plt+0xaa8>
   12e20:	ldr	r0, [sp, #28]
   12e24:	ldr	r1, [sp, #24]
   12e28:	str	r1, [r0]
   12e2c:	mov	r0, r4
   12e30:	sub	sp, fp, #28
   12e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e38:	bl	10fc8 <abort@plt>
   12e3c:	movw	r3, #20824	; 0x5158
   12e40:	movt	r3, #2
   12e44:	b	12ca8 <putchar_unlocked@plt+0x1cc8>
   12e48:	movw	r3, #20824	; 0x5158
   12e4c:	mov	r1, r0
   12e50:	mov	r0, #0
   12e54:	mvn	r2, #0
   12e58:	movt	r3, #2
   12e5c:	b	12ca8 <putchar_unlocked@plt+0x1cc8>
   12e60:	movw	r3, #20824	; 0x5158
   12e64:	mov	r2, r1
   12e68:	mov	r1, r0
   12e6c:	mov	r0, #0
   12e70:	movt	r3, #2
   12e74:	b	12ca8 <putchar_unlocked@plt+0x1cc8>
   12e78:	push	{fp, lr}
   12e7c:	mov	fp, sp
   12e80:	sub	sp, sp, #48	; 0x30
   12e84:	vmov.i32	q8, #0	; 0x00000000
   12e88:	mov	ip, #32
   12e8c:	mov	r3, sp
   12e90:	mov	lr, r2
   12e94:	cmp	r1, #10
   12e98:	add	r2, r3, #16
   12e9c:	vst1.64	{d16-d17}, [r3], ip
   12ea0:	vst1.64	{d16-d17}, [r3]
   12ea4:	vst1.64	{d16-d17}, [r2]
   12ea8:	beq	12ec8 <putchar_unlocked@plt+0x1ee8>
   12eac:	str	r1, [sp]
   12eb0:	mov	r3, sp
   12eb4:	mov	r1, lr
   12eb8:	mvn	r2, #0
   12ebc:	bl	12ca8 <putchar_unlocked@plt+0x1cc8>
   12ec0:	mov	sp, fp
   12ec4:	pop	{fp, pc}
   12ec8:	bl	10fc8 <abort@plt>
   12ecc:	push	{r4, sl, fp, lr}
   12ed0:	add	fp, sp, #8
   12ed4:	sub	sp, sp, #48	; 0x30
   12ed8:	mov	ip, r3
   12edc:	mov	r3, sp
   12ee0:	vmov.i32	q8, #0	; 0x00000000
   12ee4:	mov	lr, #32
   12ee8:	cmp	r1, #10
   12eec:	add	r4, r3, #16
   12ef0:	vst1.64	{d16-d17}, [r3], lr
   12ef4:	vst1.64	{d16-d17}, [r3]
   12ef8:	vst1.64	{d16-d17}, [r4]
   12efc:	beq	12f1c <putchar_unlocked@plt+0x1f3c>
   12f00:	str	r1, [sp]
   12f04:	mov	r1, r2
   12f08:	mov	r3, sp
   12f0c:	mov	r2, ip
   12f10:	bl	12ca8 <putchar_unlocked@plt+0x1cc8>
   12f14:	sub	sp, fp, #8
   12f18:	pop	{r4, sl, fp, pc}
   12f1c:	bl	10fc8 <abort@plt>
   12f20:	mov	r2, r1
   12f24:	mov	r1, r0
   12f28:	mov	r0, #0
   12f2c:	b	12e78 <putchar_unlocked@plt+0x1e98>
   12f30:	mov	r3, r2
   12f34:	mov	r2, r1
   12f38:	mov	r1, r0
   12f3c:	mov	r0, #0
   12f40:	b	12ecc <putchar_unlocked@plt+0x1eec>
   12f44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12f48:	add	fp, sp, #24
   12f4c:	sub	sp, sp, #48	; 0x30
   12f50:	movw	r8, #20824	; 0x5158
   12f54:	mov	lr, r0
   12f58:	mov	r3, sp
   12f5c:	mov	ip, r1
   12f60:	movt	r8, #2
   12f64:	mov	r1, r3
   12f68:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   12f6c:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   12f70:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   12f74:	stm	r1, {r0, r4, r5, r6, r7, r9}
   12f78:	ubfx	r0, r2, #5, #3
   12f7c:	and	r2, r2, #31
   12f80:	mov	r4, #1
   12f84:	add	r0, r3, r0, lsl #2
   12f88:	ldr	r1, [r0, #8]
   12f8c:	bic	r4, r4, r1, lsr r2
   12f90:	eor	r1, r1, r4, lsl r2
   12f94:	mov	r2, ip
   12f98:	str	r1, [r0, #8]
   12f9c:	mov	r0, #0
   12fa0:	mov	r1, lr
   12fa4:	bl	12ca8 <putchar_unlocked@plt+0x1cc8>
   12fa8:	sub	sp, fp, #24
   12fac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12fb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12fb4:	add	fp, sp, #24
   12fb8:	sub	sp, sp, #48	; 0x30
   12fbc:	movw	lr, #20824	; 0x5158
   12fc0:	mov	ip, r0
   12fc4:	mov	r3, sp
   12fc8:	movt	lr, #2
   12fcc:	mov	r2, r3
   12fd0:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   12fd4:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   12fd8:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   12fdc:	stm	r2, {r0, r4, r5, r6, r7, r8}
   12fe0:	ubfx	r0, r1, #5, #3
   12fe4:	and	r1, r1, #31
   12fe8:	mov	r7, #1
   12fec:	add	r0, r3, r0, lsl #2
   12ff0:	ldr	r2, [r0, #8]
   12ff4:	bic	r7, r7, r2, lsr r1
   12ff8:	eor	r1, r2, r7, lsl r1
   12ffc:	mvn	r2, #0
   13000:	str	r1, [r0, #8]
   13004:	mov	r0, #0
   13008:	mov	r1, ip
   1300c:	bl	12ca8 <putchar_unlocked@plt+0x1cc8>
   13010:	sub	sp, fp, #24
   13014:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13018:	push	{r4, r5, r6, r7, fp, lr}
   1301c:	add	fp, sp, #16
   13020:	sub	sp, sp, #48	; 0x30
   13024:	movw	lr, #20824	; 0x5158
   13028:	mov	ip, r0
   1302c:	mov	r3, sp
   13030:	movt	lr, #2
   13034:	mov	r2, r3
   13038:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   1303c:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13040:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   13044:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13048:	mov	r1, ip
   1304c:	mvn	r2, #0
   13050:	ldr	r0, [sp, #12]
   13054:	orr	r0, r0, #67108864	; 0x4000000
   13058:	str	r0, [sp, #12]
   1305c:	mov	r0, #0
   13060:	bl	12ca8 <putchar_unlocked@plt+0x1cc8>
   13064:	sub	sp, fp, #16
   13068:	pop	{r4, r5, r6, r7, fp, pc}
   1306c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13070:	add	fp, sp, #24
   13074:	sub	sp, sp, #48	; 0x30
   13078:	movw	r8, #20824	; 0x5158
   1307c:	mov	ip, r1
   13080:	mov	lr, r0
   13084:	mov	r3, sp
   13088:	movt	r8, #2
   1308c:	mov	r2, r3
   13090:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   13094:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13098:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   1309c:	stm	r2, {r0, r1, r4, r5, r6, r7}
   130a0:	mov	r1, lr
   130a4:	mov	r2, ip
   130a8:	ldr	r0, [sp, #12]
   130ac:	orr	r0, r0, #67108864	; 0x4000000
   130b0:	str	r0, [sp, #12]
   130b4:	mov	r0, #0
   130b8:	bl	12ca8 <putchar_unlocked@plt+0x1cc8>
   130bc:	sub	sp, fp, #24
   130c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   130c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   130c8:	add	fp, sp, #24
   130cc:	sub	sp, sp, #96	; 0x60
   130d0:	mov	lr, sp
   130d4:	vmov.i32	q8, #0	; 0x00000000
   130d8:	mov	ip, r2
   130dc:	cmp	r1, #10
   130e0:	add	r3, lr, #16
   130e4:	mov	r2, lr
   130e8:	vst1.64	{d16-d17}, [r3]
   130ec:	mov	r3, #28
   130f0:	vst1.64	{d16-d17}, [r2], r3
   130f4:	vst1.32	{d16-d17}, [r2]
   130f8:	beq	13138 <putchar_unlocked@plt+0x2158>
   130fc:	str	r1, [sp, #48]	; 0x30
   13100:	add	r3, sp, #48	; 0x30
   13104:	ldm	lr!, {r2, r4, r5, r6, r7}
   13108:	add	r1, r3, #4
   1310c:	stmia	r1!, {r2, r4, r5, r6, r7}
   13110:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   13114:	stm	r1, {r2, r4, r5, r6, r7, r8}
   13118:	mvn	r2, #0
   1311c:	ldr	r1, [sp, #60]	; 0x3c
   13120:	orr	r1, r1, #67108864	; 0x4000000
   13124:	str	r1, [sp, #60]	; 0x3c
   13128:	mov	r1, ip
   1312c:	bl	12ca8 <putchar_unlocked@plt+0x1cc8>
   13130:	sub	sp, fp, #24
   13134:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13138:	bl	10fc8 <abort@plt>
   1313c:	push	{fp, lr}
   13140:	mov	fp, sp
   13144:	sub	sp, sp, #8
   13148:	mvn	ip, #0
   1314c:	str	ip, [sp]
   13150:	bl	1315c <putchar_unlocked@plt+0x217c>
   13154:	mov	sp, fp
   13158:	pop	{fp, pc}
   1315c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13160:	add	fp, sp, #24
   13164:	sub	sp, sp, #48	; 0x30
   13168:	movw	ip, #20824	; 0x5158
   1316c:	mov	lr, r3
   13170:	mov	r3, sp
   13174:	cmp	r1, #0
   13178:	movt	ip, #2
   1317c:	cmpne	r2, #0
   13180:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   13184:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   13188:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   1318c:	stm	r3, {r4, r5, r6, r7, r8, r9}
   13190:	mov	r3, #10
   13194:	str	r3, [sp]
   13198:	bne	131a0 <putchar_unlocked@plt+0x21c0>
   1319c:	bl	10fc8 <abort@plt>
   131a0:	ldr	ip, [fp, #8]
   131a4:	str	r2, [sp, #44]	; 0x2c
   131a8:	str	r1, [sp, #40]	; 0x28
   131ac:	mov	r3, sp
   131b0:	mov	r1, lr
   131b4:	mov	r2, ip
   131b8:	bl	12ca8 <putchar_unlocked@plt+0x1cc8>
   131bc:	sub	sp, fp, #24
   131c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   131c4:	push	{fp, lr}
   131c8:	mov	fp, sp
   131cc:	sub	sp, sp, #8
   131d0:	mov	r3, r2
   131d4:	mov	r2, r1
   131d8:	mov	r1, r0
   131dc:	mvn	r0, #0
   131e0:	str	r0, [sp]
   131e4:	mov	r0, #0
   131e8:	bl	1315c <putchar_unlocked@plt+0x217c>
   131ec:	mov	sp, fp
   131f0:	pop	{fp, pc}
   131f4:	push	{fp, lr}
   131f8:	mov	fp, sp
   131fc:	sub	sp, sp, #8
   13200:	mov	ip, r2
   13204:	mov	r2, r1
   13208:	mov	r1, r0
   1320c:	str	r3, [sp]
   13210:	mov	r0, #0
   13214:	mov	r3, ip
   13218:	bl	1315c <putchar_unlocked@plt+0x217c>
   1321c:	mov	sp, fp
   13220:	pop	{fp, pc}
   13224:	movw	r3, #20728	; 0x50f8
   13228:	movt	r3, #2
   1322c:	b	12ca8 <putchar_unlocked@plt+0x1cc8>
   13230:	movw	r3, #20728	; 0x50f8
   13234:	mov	r2, r1
   13238:	mov	r1, r0
   1323c:	mov	r0, #0
   13240:	movt	r3, #2
   13244:	b	12ca8 <putchar_unlocked@plt+0x1cc8>
   13248:	movw	r3, #20728	; 0x50f8
   1324c:	mvn	r2, #0
   13250:	movt	r3, #2
   13254:	b	12ca8 <putchar_unlocked@plt+0x1cc8>
   13258:	movw	r3, #20728	; 0x50f8
   1325c:	mov	r1, r0
   13260:	mov	r0, #0
   13264:	mvn	r2, #0
   13268:	movt	r3, #2
   1326c:	b	12ca8 <putchar_unlocked@plt+0x1cc8>
   13270:	push	{r4, r5, fp, lr}
   13274:	add	fp, sp, #8
   13278:	mov	r5, r0
   1327c:	mov	r4, r1
   13280:	mov	r0, #0
   13284:	mov	r2, #5
   13288:	mov	r1, r5
   1328c:	bl	10e0c <dcgettext@plt>
   13290:	cmp	r0, r5
   13294:	popne	{r4, r5, fp, pc}
   13298:	bl	14168 <putchar_unlocked@plt+0x3188>
   1329c:	ldrb	r1, [r0]
   132a0:	and	r1, r1, #223	; 0xdf
   132a4:	cmp	r1, #71	; 0x47
   132a8:	beq	13310 <putchar_unlocked@plt+0x2330>
   132ac:	cmp	r1, #85	; 0x55
   132b0:	bne	13334 <putchar_unlocked@plt+0x2354>
   132b4:	ldrb	r1, [r0, #1]
   132b8:	and	r1, r1, #223	; 0xdf
   132bc:	cmp	r1, #84	; 0x54
   132c0:	bne	13334 <putchar_unlocked@plt+0x2354>
   132c4:	ldrb	r1, [r0, #2]
   132c8:	and	r1, r1, #223	; 0xdf
   132cc:	cmp	r1, #70	; 0x46
   132d0:	ldrbeq	r1, [r0, #3]
   132d4:	cmpeq	r1, #45	; 0x2d
   132d8:	bne	13334 <putchar_unlocked@plt+0x2354>
   132dc:	ldrb	r1, [r0, #4]
   132e0:	cmp	r1, #56	; 0x38
   132e4:	ldrbeq	r0, [r0, #5]
   132e8:	cmpeq	r0, #0
   132ec:	bne	13334 <putchar_unlocked@plt+0x2354>
   132f0:	ldrb	r1, [r5]
   132f4:	movw	r2, #18364	; 0x47bc
   132f8:	movw	r0, #18368	; 0x47c0
   132fc:	movt	r2, #1
   13300:	movt	r0, #1
   13304:	cmp	r1, #96	; 0x60
   13308:	moveq	r0, r2
   1330c:	pop	{r4, r5, fp, pc}
   13310:	ldrb	r1, [r0, #1]
   13314:	and	r1, r1, #223	; 0xdf
   13318:	cmp	r1, #66	; 0x42
   1331c:	bne	13334 <putchar_unlocked@plt+0x2354>
   13320:	ldrb	r1, [r0, #2]
   13324:	cmp	r1, #49	; 0x31
   13328:	ldrbeq	r1, [r0, #3]
   1332c:	cmpeq	r1, #56	; 0x38
   13330:	beq	13350 <putchar_unlocked@plt+0x2370>
   13334:	movw	r1, #18358	; 0x47b6
   13338:	movw	r0, #18362	; 0x47ba
   1333c:	cmp	r4, #9
   13340:	movt	r1, #1
   13344:	movt	r0, #1
   13348:	moveq	r0, r1
   1334c:	pop	{r4, r5, fp, pc}
   13350:	ldrb	r1, [r0, #4]
   13354:	cmp	r1, #48	; 0x30
   13358:	ldrbeq	r1, [r0, #5]
   1335c:	cmpeq	r1, #51	; 0x33
   13360:	bne	13334 <putchar_unlocked@plt+0x2354>
   13364:	ldrb	r1, [r0, #6]
   13368:	cmp	r1, #48	; 0x30
   1336c:	ldrbeq	r0, [r0, #7]
   13370:	cmpeq	r0, #0
   13374:	bne	13334 <putchar_unlocked@plt+0x2354>
   13378:	ldrb	r1, [r5]
   1337c:	movw	r2, #18372	; 0x47c4
   13380:	movw	r0, #18376	; 0x47c8
   13384:	movt	r2, #1
   13388:	movt	r0, #1
   1338c:	b	13304 <putchar_unlocked@plt+0x2324>
   13390:	push	{r4, r5, fp, lr}
   13394:	add	fp, sp, #8
   13398:	mov	r5, r0
   1339c:	mov	r0, #33	; 0x21
   133a0:	bl	139e4 <putchar_unlocked@plt+0x2a04>
   133a4:	add	r1, r5, #44	; 0x2c
   133a8:	mov	r2, #32
   133ac:	mov	r4, r0
   133b0:	bl	10f20 <strncpy@plt>
   133b4:	mov	r5, #0
   133b8:	mov	r0, r4
   133bc:	strb	r5, [r4, #32]
   133c0:	bl	10ef0 <strlen@plt>
   133c4:	cmp	r0, #1
   133c8:	blt	133f0 <putchar_unlocked@plt+0x2410>
   133cc:	add	r1, r4, r0
   133d0:	mov	r0, r1
   133d4:	ldrb	r2, [r0, #-1]!
   133d8:	cmp	r2, #32
   133dc:	bne	133f0 <putchar_unlocked@plt+0x2410>
   133e0:	strb	r5, [r1, #-1]
   133e4:	cmp	r4, r0
   133e8:	mov	r1, r0
   133ec:	bcc	133d4 <putchar_unlocked@plt+0x23f4>
   133f0:	mov	r0, r4
   133f4:	pop	{r4, r5, fp, pc}
   133f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133fc:	add	fp, sp, #28
   13400:	sub	sp, sp, #20
   13404:	mov	r6, #0
   13408:	mov	r5, r3
   1340c:	str	r2, [sp, #12]
   13410:	str	r1, [sp, #8]
   13414:	str	r6, [sp, #16]
   13418:	bl	10dc4 <utmpxname@plt>
   1341c:	bl	10e18 <setutxent@plt>
   13420:	bl	10fd4 <getutxent@plt>
   13424:	cmp	r0, #0
   13428:	beq	13504 <putchar_unlocked@plt+0x2524>
   1342c:	mov	r4, r0
   13430:	and	r7, r5, #1
   13434:	and	r8, r5, #2
   13438:	mov	r5, #0
   1343c:	mov	r9, #384	; 0x180
   13440:	add	sl, sp, #16
   13444:	mov	r6, #0
   13448:	ldrb	r0, [r4, #44]	; 0x2c
   1344c:	cmp	r0, #0
   13450:	mov	r0, #0
   13454:	ldrhne	r0, [r4]
   13458:	subne	r0, r0, #7
   1345c:	clzne	r0, r0
   13460:	lsrne	r0, r0, #5
   13464:	cmp	r8, #0
   13468:	beq	13474 <putchar_unlocked@plt+0x2494>
   1346c:	cmp	r0, #0
   13470:	beq	134f0 <putchar_unlocked@plt+0x2510>
   13474:	cmp	r7, #0
   13478:	beq	134b0 <putchar_unlocked@plt+0x24d0>
   1347c:	eors	r0, r0, #1
   13480:	bne	134b0 <putchar_unlocked@plt+0x24d0>
   13484:	ldr	r0, [r4, #4]
   13488:	cmp	r0, #1
   1348c:	blt	134b0 <putchar_unlocked@plt+0x24d0>
   13490:	mov	r1, #0
   13494:	bl	10ecc <kill@plt>
   13498:	cmn	r0, #1
   1349c:	bgt	134b0 <putchar_unlocked@plt+0x24d0>
   134a0:	bl	10efc <__errno_location@plt>
   134a4:	ldr	r0, [r0]
   134a8:	cmp	r0, #3
   134ac:	beq	134f0 <putchar_unlocked@plt+0x2510>
   134b0:	ldr	r0, [sp, #16]
   134b4:	cmp	r5, r0
   134b8:	bne	134d8 <putchar_unlocked@plt+0x24f8>
   134bc:	mov	r0, r6
   134c0:	mov	r1, sl
   134c4:	mov	r2, #1
   134c8:	mvn	r3, #0
   134cc:	str	r9, [sp]
   134d0:	bl	13b44 <putchar_unlocked@plt+0x2b64>
   134d4:	mov	r6, r0
   134d8:	add	r0, r5, r5, lsl #1
   134dc:	mov	r1, r4
   134e0:	mov	r2, #384	; 0x180
   134e4:	add	r0, r6, r0, lsl #7
   134e8:	bl	10de8 <memcpy@plt>
   134ec:	add	r5, r5, #1
   134f0:	bl	10fd4 <getutxent@plt>
   134f4:	mov	r4, r0
   134f8:	cmp	r0, #0
   134fc:	bne	13448 <putchar_unlocked@plt+0x2468>
   13500:	b	13508 <putchar_unlocked@plt+0x2528>
   13504:	mov	r5, #0
   13508:	bl	10f68 <endutxent@plt>
   1350c:	ldr	r0, [sp, #8]
   13510:	str	r5, [r0]
   13514:	ldr	r0, [sp, #12]
   13518:	str	r6, [r0]
   1351c:	mov	r0, #0
   13520:	sub	sp, fp, #28
   13524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13528:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1352c:	add	fp, sp, #24
   13530:	sub	sp, sp, #32
   13534:	ldr	r6, [fp, #12]
   13538:	ldr	r7, [fp, #8]
   1353c:	mov	r4, r2
   13540:	mov	r8, r0
   13544:	cmp	r1, #0
   13548:	beq	13570 <putchar_unlocked@plt+0x2590>
   1354c:	movw	r2, #18464	; 0x4820
   13550:	mov	r5, r1
   13554:	str	r3, [sp, #4]
   13558:	str	r4, [sp]
   1355c:	mov	r0, r8
   13560:	mov	r1, #1
   13564:	movt	r2, #1
   13568:	mov	r3, r5
   1356c:	b	13588 <putchar_unlocked@plt+0x25a8>
   13570:	movw	r2, #18476	; 0x482c
   13574:	str	r3, [sp]
   13578:	mov	r0, r8
   1357c:	mov	r1, #1
   13580:	mov	r3, r4
   13584:	movt	r2, #1
   13588:	bl	10f44 <__fprintf_chk@plt>
   1358c:	movw	r1, #18483	; 0x4833
   13590:	mov	r0, #0
   13594:	mov	r2, #5
   13598:	movt	r1, #1
   1359c:	bl	10e0c <dcgettext@plt>
   135a0:	movw	r2, #19201	; 0x4b01
   135a4:	mov	r3, r0
   135a8:	movw	r0, #2022	; 0x7e6
   135ac:	mov	r1, #1
   135b0:	str	r0, [sp]
   135b4:	movt	r2, #1
   135b8:	mov	r0, r8
   135bc:	bl	10f44 <__fprintf_chk@plt>
   135c0:	movw	r4, #17519	; 0x446f
   135c4:	mov	r1, r8
   135c8:	movt	r4, #1
   135cc:	mov	r0, r4
   135d0:	bl	10da0 <fputs_unlocked@plt>
   135d4:	movw	r1, #18487	; 0x4837
   135d8:	mov	r0, #0
   135dc:	mov	r2, #5
   135e0:	movt	r1, #1
   135e4:	bl	10e0c <dcgettext@plt>
   135e8:	movw	r3, #18658	; 0x48e2
   135ec:	mov	r2, r0
   135f0:	mov	r0, r8
   135f4:	mov	r1, #1
   135f8:	movt	r3, #1
   135fc:	bl	10f44 <__fprintf_chk@plt>
   13600:	mov	r0, r4
   13604:	mov	r1, r8
   13608:	bl	10da0 <fputs_unlocked@plt>
   1360c:	cmp	r6, #9
   13610:	bhi	13674 <putchar_unlocked@plt+0x2694>
   13614:	add	r0, pc, #0
   13618:	ldr	pc, [r0, r6, lsl #2]
   1361c:	andeq	r3, r1, ip, asr #16
   13620:	andeq	r3, r1, r4, asr #12
   13624:	andeq	r3, r1, r0, lsl #13
   13628:	andeq	r3, r1, r8, lsr #13
   1362c:	ldrdeq	r3, [r1], -r0
   13630:	strdeq	r3, [r1], -r8
   13634:	andeq	r3, r1, r0, lsr #14
   13638:	andeq	r3, r1, r8, asr r7
   1363c:	strdeq	r3, [r1], -r8
   13640:	andeq	r3, r1, r0, lsr #15
   13644:	movw	r1, #18692	; 0x4904
   13648:	mov	r0, #0
   1364c:	mov	r2, #5
   13650:	movt	r1, #1
   13654:	bl	10e0c <dcgettext@plt>
   13658:	ldr	r3, [r7]
   1365c:	mov	r2, r0
   13660:	mov	r0, r8
   13664:	mov	r1, #1
   13668:	sub	sp, fp, #24
   1366c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13670:	b	10f44 <__fprintf_chk@plt>
   13674:	movw	r1, #19011	; 0x4a43
   13678:	movt	r1, #1
   1367c:	b	137a8 <putchar_unlocked@plt+0x27c8>
   13680:	movw	r1, #18708	; 0x4914
   13684:	mov	r0, #0
   13688:	mov	r2, #5
   1368c:	movt	r1, #1
   13690:	bl	10e0c <dcgettext@plt>
   13694:	mov	r2, r0
   13698:	ldr	r3, [r7]
   1369c:	ldr	r0, [r7, #4]
   136a0:	str	r0, [sp]
   136a4:	b	13794 <putchar_unlocked@plt+0x27b4>
   136a8:	movw	r1, #18731	; 0x492b
   136ac:	mov	r0, #0
   136b0:	mov	r2, #5
   136b4:	movt	r1, #1
   136b8:	bl	10e0c <dcgettext@plt>
   136bc:	ldr	r3, [r7]
   136c0:	mov	r2, r0
   136c4:	ldmib	r7, {r0, r1}
   136c8:	stm	sp, {r0, r1}
   136cc:	b	13794 <putchar_unlocked@plt+0x27b4>
   136d0:	movw	r1, #18759	; 0x4947
   136d4:	mov	r0, #0
   136d8:	mov	r2, #5
   136dc:	movt	r1, #1
   136e0:	bl	10e0c <dcgettext@plt>
   136e4:	ldr	r3, [r7]
   136e8:	mov	r2, r0
   136ec:	ldmib	r7, {r0, r1, r7}
   136f0:	stm	sp, {r0, r1, r7}
   136f4:	b	13794 <putchar_unlocked@plt+0x27b4>
   136f8:	movw	r1, #18791	; 0x4967
   136fc:	mov	r0, #0
   13700:	mov	r2, #5
   13704:	movt	r1, #1
   13708:	bl	10e0c <dcgettext@plt>
   1370c:	ldr	r3, [r7]
   13710:	mov	r2, r0
   13714:	ldmib	r7, {r0, r1, r6, r7}
   13718:	stm	sp, {r0, r1, r6, r7}
   1371c:	b	13794 <putchar_unlocked@plt+0x27b4>
   13720:	movw	r1, #18827	; 0x498b
   13724:	mov	r0, #0
   13728:	mov	r2, #5
   1372c:	movt	r1, #1
   13730:	bl	10e0c <dcgettext@plt>
   13734:	ldr	r3, [r7]
   13738:	mov	r2, r0
   1373c:	ldmib	r7, {r0, r1, r6}
   13740:	ldr	r5, [r7, #16]
   13744:	ldr	r7, [r7, #20]
   13748:	stm	sp, {r0, r1, r6}
   1374c:	str	r5, [sp, #12]
   13750:	str	r7, [sp, #16]
   13754:	b	13794 <putchar_unlocked@plt+0x27b4>
   13758:	movw	r1, #18867	; 0x49b3
   1375c:	mov	r0, #0
   13760:	mov	r2, #5
   13764:	movt	r1, #1
   13768:	bl	10e0c <dcgettext@plt>
   1376c:	ldr	r3, [r7]
   13770:	mov	r2, r0
   13774:	ldmib	r7, {r0, r1, r6}
   13778:	ldr	r5, [r7, #16]
   1377c:	ldr	r4, [r7, #20]
   13780:	ldr	r7, [r7, #24]
   13784:	stm	sp, {r0, r1, r6}
   13788:	str	r5, [sp, #12]
   1378c:	str	r4, [sp, #16]
   13790:	str	r7, [sp, #20]
   13794:	mov	r0, r8
   13798:	mov	r1, #1
   1379c:	b	13848 <putchar_unlocked@plt+0x2868>
   137a0:	movw	r1, #18959	; 0x4a0f
   137a4:	movt	r1, #1
   137a8:	mov	r0, #0
   137ac:	mov	r2, #5
   137b0:	bl	10e0c <dcgettext@plt>
   137b4:	mov	ip, r0
   137b8:	ldr	r3, [r7]
   137bc:	ldr	r0, [r7, #4]
   137c0:	ldr	r1, [r7, #8]
   137c4:	ldr	r6, [r7, #12]
   137c8:	ldr	r5, [r7, #16]
   137cc:	ldr	r4, [r7, #20]
   137d0:	ldr	r2, [r7, #24]
   137d4:	ldr	lr, [r7, #28]
   137d8:	ldr	r7, [r7, #32]
   137dc:	stm	sp, {r0, r1, r6}
   137e0:	str	r5, [sp, #12]
   137e4:	str	r4, [sp, #16]
   137e8:	str	r2, [sp, #20]
   137ec:	str	lr, [sp, #24]
   137f0:	str	r7, [sp, #28]
   137f4:	b	1383c <putchar_unlocked@plt+0x285c>
   137f8:	movw	r1, #18911	; 0x49df
   137fc:	mov	r0, #0
   13800:	mov	r2, #5
   13804:	movt	r1, #1
   13808:	bl	10e0c <dcgettext@plt>
   1380c:	mov	ip, r0
   13810:	ldr	r3, [r7]
   13814:	ldmib	r7, {r0, r1, r6}
   13818:	ldr	r5, [r7, #16]
   1381c:	ldr	r4, [r7, #20]
   13820:	ldr	r2, [r7, #24]
   13824:	ldr	r7, [r7, #28]
   13828:	stm	sp, {r0, r1, r6}
   1382c:	str	r5, [sp, #12]
   13830:	str	r4, [sp, #16]
   13834:	str	r2, [sp, #20]
   13838:	str	r7, [sp, #24]
   1383c:	mov	r0, r8
   13840:	mov	r1, #1
   13844:	mov	r2, ip
   13848:	bl	10f44 <__fprintf_chk@plt>
   1384c:	sub	sp, fp, #24
   13850:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13854:	push	{r4, sl, fp, lr}
   13858:	add	fp, sp, #8
   1385c:	sub	sp, sp, #8
   13860:	ldr	ip, [fp, #8]
   13864:	mov	lr, #0
   13868:	ldr	r4, [ip, lr, lsl #2]
   1386c:	add	lr, lr, #1
   13870:	cmp	r4, #0
   13874:	bne	13868 <putchar_unlocked@plt+0x2888>
   13878:	sub	r4, lr, #1
   1387c:	str	ip, [sp]
   13880:	str	r4, [sp, #4]
   13884:	bl	13528 <putchar_unlocked@plt+0x2548>
   13888:	sub	sp, fp, #8
   1388c:	pop	{r4, sl, fp, pc}
   13890:	push	{r4, r5, fp, lr}
   13894:	add	fp, sp, #8
   13898:	sub	sp, sp, #48	; 0x30
   1389c:	ldr	r4, [fp, #8]
   138a0:	mov	ip, #0
   138a4:	add	lr, sp, #8
   138a8:	ldr	r5, [r4]
   138ac:	cmp	r5, #0
   138b0:	str	r5, [lr, ip, lsl #2]
   138b4:	beq	138c8 <putchar_unlocked@plt+0x28e8>
   138b8:	add	ip, ip, #1
   138bc:	add	r4, r4, #4
   138c0:	cmp	ip, #10
   138c4:	bcc	138a8 <putchar_unlocked@plt+0x28c8>
   138c8:	str	lr, [sp]
   138cc:	str	ip, [sp, #4]
   138d0:	bl	13528 <putchar_unlocked@plt+0x2548>
   138d4:	sub	sp, fp, #8
   138d8:	pop	{r4, r5, fp, pc}
   138dc:	push	{fp, lr}
   138e0:	mov	fp, sp
   138e4:	sub	sp, sp, #8
   138e8:	add	ip, fp, #8
   138ec:	str	ip, [sp, #4]
   138f0:	str	ip, [sp]
   138f4:	bl	13890 <putchar_unlocked@plt+0x28b0>
   138f8:	mov	sp, fp
   138fc:	pop	{fp, pc}
   13900:	push	{fp, lr}
   13904:	mov	fp, sp
   13908:	movw	r0, #20796	; 0x513c
   1390c:	movt	r0, #2
   13910:	ldr	r1, [r0]
   13914:	movw	r0, #17519	; 0x446f
   13918:	movt	r0, #1
   1391c:	bl	10da0 <fputs_unlocked@plt>
   13920:	movw	r1, #19071	; 0x4a7f
   13924:	mov	r0, #0
   13928:	mov	r2, #5
   1392c:	movt	r1, #1
   13930:	bl	10e0c <dcgettext@plt>
   13934:	movw	r2, #19091	; 0x4a93
   13938:	mov	r1, r0
   1393c:	mov	r0, #1
   13940:	movt	r2, #1
   13944:	bl	10f2c <__printf_chk@plt>
   13948:	movw	r1, #19113	; 0x4aa9
   1394c:	mov	r0, #0
   13950:	mov	r2, #5
   13954:	movt	r1, #1
   13958:	bl	10e0c <dcgettext@plt>
   1395c:	movw	r2, #17678	; 0x450e
   13960:	movw	r3, #17860	; 0x45c4
   13964:	mov	r1, r0
   13968:	mov	r0, #1
   1396c:	movt	r2, #1
   13970:	movt	r3, #1
   13974:	bl	10f2c <__printf_chk@plt>
   13978:	movw	r1, #19133	; 0x4abd
   1397c:	mov	r0, #0
   13980:	mov	r2, #5
   13984:	movt	r1, #1
   13988:	bl	10e0c <dcgettext@plt>
   1398c:	movw	r2, #19172	; 0x4ae4
   13990:	mov	r1, r0
   13994:	mov	r0, #1
   13998:	movt	r2, #1
   1399c:	pop	{fp, lr}
   139a0:	b	10f2c <__printf_chk@plt>
   139a4:	b	139a8 <putchar_unlocked@plt+0x29c8>
   139a8:	push	{r4, r5, r6, sl, fp, lr}
   139ac:	add	fp, sp, #16
   139b0:	mov	r4, r2
   139b4:	mov	r5, r1
   139b8:	mov	r6, r0
   139bc:	bl	14200 <putchar_unlocked@plt+0x3220>
   139c0:	cmp	r0, #0
   139c4:	popne	{r4, r5, r6, sl, fp, pc}
   139c8:	cmp	r6, #0
   139cc:	beq	139e0 <putchar_unlocked@plt+0x2a00>
   139d0:	cmp	r5, #0
   139d4:	cmpne	r4, #0
   139d8:	bne	139e0 <putchar_unlocked@plt+0x2a00>
   139dc:	pop	{r4, r5, r6, sl, fp, pc}
   139e0:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   139e4:	push	{fp, lr}
   139e8:	mov	fp, sp
   139ec:	bl	13ecc <putchar_unlocked@plt+0x2eec>
   139f0:	cmp	r0, #0
   139f4:	popne	{fp, pc}
   139f8:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   139fc:	push	{fp, lr}
   13a00:	mov	fp, sp
   13a04:	bl	13ecc <putchar_unlocked@plt+0x2eec>
   13a08:	cmp	r0, #0
   13a0c:	popne	{fp, pc}
   13a10:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13a14:	push	{fp, lr}
   13a18:	mov	fp, sp
   13a1c:	bl	13ecc <putchar_unlocked@plt+0x2eec>
   13a20:	cmp	r0, #0
   13a24:	popne	{fp, pc}
   13a28:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13a2c:	push	{r4, r5, fp, lr}
   13a30:	add	fp, sp, #8
   13a34:	mov	r4, r1
   13a38:	mov	r5, r0
   13a3c:	bl	13efc <putchar_unlocked@plt+0x2f1c>
   13a40:	cmp	r0, #0
   13a44:	popne	{r4, r5, fp, pc}
   13a48:	cmp	r5, #0
   13a4c:	beq	13a5c <putchar_unlocked@plt+0x2a7c>
   13a50:	cmp	r4, #0
   13a54:	bne	13a5c <putchar_unlocked@plt+0x2a7c>
   13a58:	pop	{r4, r5, fp, pc}
   13a5c:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13a60:	push	{fp, lr}
   13a64:	mov	fp, sp
   13a68:	cmp	r1, #0
   13a6c:	orreq	r1, r1, #1
   13a70:	bl	13efc <putchar_unlocked@plt+0x2f1c>
   13a74:	cmp	r0, #0
   13a78:	popne	{fp, pc}
   13a7c:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13a80:	push	{fp, lr}
   13a84:	mov	fp, sp
   13a88:	clz	r3, r2
   13a8c:	lsr	ip, r3, #5
   13a90:	clz	r3, r1
   13a94:	lsr	r3, r3, #5
   13a98:	orrs	r3, r3, ip
   13a9c:	movwne	r1, #1
   13aa0:	movwne	r2, #1
   13aa4:	bl	14200 <putchar_unlocked@plt+0x3220>
   13aa8:	cmp	r0, #0
   13aac:	popne	{fp, pc}
   13ab0:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13ab4:	push	{fp, lr}
   13ab8:	mov	fp, sp
   13abc:	mov	r2, r1
   13ac0:	mov	r1, r0
   13ac4:	mov	r0, #0
   13ac8:	bl	14200 <putchar_unlocked@plt+0x3220>
   13acc:	cmp	r0, #0
   13ad0:	popne	{fp, pc}
   13ad4:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13ad8:	mov	r2, r1
   13adc:	mov	r1, r0
   13ae0:	mov	r0, #0
   13ae4:	b	13a80 <putchar_unlocked@plt+0x2aa0>
   13ae8:	mov	r2, #1
   13aec:	b	13af0 <putchar_unlocked@plt+0x2b10>
   13af0:	push	{r4, r5, fp, lr}
   13af4:	add	fp, sp, #8
   13af8:	ldr	r5, [r1]
   13afc:	mov	r4, r1
   13b00:	cmp	r0, #0
   13b04:	beq	13b1c <putchar_unlocked@plt+0x2b3c>
   13b08:	mov	r1, #1
   13b0c:	add	r1, r1, r5, lsr #1
   13b10:	adds	r5, r5, r1
   13b14:	bcc	13b34 <putchar_unlocked@plt+0x2b54>
   13b18:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13b1c:	cmp	r5, #0
   13b20:	bne	13b34 <putchar_unlocked@plt+0x2b54>
   13b24:	mov	r1, #64	; 0x40
   13b28:	cmp	r2, #64	; 0x40
   13b2c:	udiv	r5, r1, r2
   13b30:	addhi	r5, r5, #1
   13b34:	mov	r1, r5
   13b38:	bl	139a8 <putchar_unlocked@plt+0x29c8>
   13b3c:	str	r5, [r4]
   13b40:	pop	{r4, r5, fp, pc}
   13b44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b48:	add	fp, sp, #24
   13b4c:	ldr	r6, [r1]
   13b50:	mov	r8, r1
   13b54:	ldr	r4, [fp, #8]
   13b58:	add	r1, r6, r6, asr #1
   13b5c:	cmp	r1, r6
   13b60:	mvnvs	r1, #-2147483648	; 0x80000000
   13b64:	cmp	r1, r3
   13b68:	mov	r5, r1
   13b6c:	movgt	r5, r3
   13b70:	cmn	r3, #1
   13b74:	movle	r5, r1
   13b78:	cmn	r4, #1
   13b7c:	ble	13b9c <putchar_unlocked@plt+0x2bbc>
   13b80:	cmp	r4, #0
   13b84:	beq	13bf0 <putchar_unlocked@plt+0x2c10>
   13b88:	cmn	r5, #1
   13b8c:	ble	13bc4 <putchar_unlocked@plt+0x2be4>
   13b90:	mvn	r7, #-2147483648	; 0x80000000
   13b94:	udiv	r1, r7, r4
   13b98:	b	13bb8 <putchar_unlocked@plt+0x2bd8>
   13b9c:	cmn	r5, #1
   13ba0:	ble	13be0 <putchar_unlocked@plt+0x2c00>
   13ba4:	cmn	r4, #1
   13ba8:	beq	13bf0 <putchar_unlocked@plt+0x2c10>
   13bac:	mov	r1, #-2147483648	; 0x80000000
   13bb0:	mvn	r7, #-2147483648	; 0x80000000
   13bb4:	sdiv	r1, r1, r4
   13bb8:	cmp	r1, r5
   13bbc:	bge	13bf0 <putchar_unlocked@plt+0x2c10>
   13bc0:	b	13c00 <putchar_unlocked@plt+0x2c20>
   13bc4:	beq	13bf0 <putchar_unlocked@plt+0x2c10>
   13bc8:	mov	r1, #-2147483648	; 0x80000000
   13bcc:	mvn	r7, #-2147483648	; 0x80000000
   13bd0:	sdiv	r1, r1, r5
   13bd4:	cmp	r1, r4
   13bd8:	bge	13bf0 <putchar_unlocked@plt+0x2c10>
   13bdc:	b	13c00 <putchar_unlocked@plt+0x2c20>
   13be0:	mvn	r7, #-2147483648	; 0x80000000
   13be4:	sdiv	r1, r7, r4
   13be8:	cmp	r5, r1
   13bec:	blt	13c00 <putchar_unlocked@plt+0x2c20>
   13bf0:	mul	r1, r5, r4
   13bf4:	mov	r7, #64	; 0x40
   13bf8:	cmp	r1, #63	; 0x3f
   13bfc:	bgt	13c08 <putchar_unlocked@plt+0x2c28>
   13c00:	sdiv	r5, r7, r4
   13c04:	mul	r1, r5, r4
   13c08:	cmp	r0, #0
   13c0c:	moveq	r7, #0
   13c10:	streq	r7, [r8]
   13c14:	sub	r7, r5, r6
   13c18:	cmp	r7, r2
   13c1c:	bge	13cc0 <putchar_unlocked@plt+0x2ce0>
   13c20:	add	r5, r6, r2
   13c24:	mov	r2, #0
   13c28:	mov	r1, #0
   13c2c:	cmp	r5, r3
   13c30:	movwgt	r2, #1
   13c34:	cmn	r3, #1
   13c38:	movwgt	r1, #1
   13c3c:	cmp	r5, r6
   13c40:	bvs	13ca8 <putchar_unlocked@plt+0x2cc8>
   13c44:	ands	r1, r1, r2
   13c48:	bne	13ca8 <putchar_unlocked@plt+0x2cc8>
   13c4c:	cmn	r4, #1
   13c50:	ble	13c70 <putchar_unlocked@plt+0x2c90>
   13c54:	cmp	r4, #0
   13c58:	beq	13cbc <putchar_unlocked@plt+0x2cdc>
   13c5c:	cmn	r5, #1
   13c60:	ble	13c94 <putchar_unlocked@plt+0x2cb4>
   13c64:	mvn	r1, #-2147483648	; 0x80000000
   13c68:	udiv	r1, r1, r4
   13c6c:	b	13c88 <putchar_unlocked@plt+0x2ca8>
   13c70:	cmn	r5, #1
   13c74:	ble	13cac <putchar_unlocked@plt+0x2ccc>
   13c78:	cmn	r4, #1
   13c7c:	beq	13cbc <putchar_unlocked@plt+0x2cdc>
   13c80:	mov	r1, #-2147483648	; 0x80000000
   13c84:	sdiv	r1, r1, r4
   13c88:	cmp	r1, r5
   13c8c:	bge	13cbc <putchar_unlocked@plt+0x2cdc>
   13c90:	b	13ca8 <putchar_unlocked@plt+0x2cc8>
   13c94:	beq	13cbc <putchar_unlocked@plt+0x2cdc>
   13c98:	mov	r1, #-2147483648	; 0x80000000
   13c9c:	sdiv	r1, r1, r5
   13ca0:	cmp	r1, r4
   13ca4:	bge	13cbc <putchar_unlocked@plt+0x2cdc>
   13ca8:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13cac:	mvn	r1, #-2147483648	; 0x80000000
   13cb0:	sdiv	r1, r1, r4
   13cb4:	cmp	r5, r1
   13cb8:	blt	13ca8 <putchar_unlocked@plt+0x2cc8>
   13cbc:	mul	r1, r5, r4
   13cc0:	bl	13a2c <putchar_unlocked@plt+0x2a4c>
   13cc4:	str	r5, [r8]
   13cc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ccc:	push	{fp, lr}
   13cd0:	mov	fp, sp
   13cd4:	mov	r1, #1
   13cd8:	bl	13e78 <putchar_unlocked@plt+0x2e98>
   13cdc:	cmp	r0, #0
   13ce0:	popne	{fp, pc}
   13ce4:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13ce8:	push	{fp, lr}
   13cec:	mov	fp, sp
   13cf0:	bl	13e78 <putchar_unlocked@plt+0x2e98>
   13cf4:	cmp	r0, #0
   13cf8:	popne	{fp, pc}
   13cfc:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13d00:	push	{fp, lr}
   13d04:	mov	fp, sp
   13d08:	mov	r1, #1
   13d0c:	bl	13e78 <putchar_unlocked@plt+0x2e98>
   13d10:	cmp	r0, #0
   13d14:	popne	{fp, pc}
   13d18:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13d1c:	push	{fp, lr}
   13d20:	mov	fp, sp
   13d24:	bl	13e78 <putchar_unlocked@plt+0x2e98>
   13d28:	cmp	r0, #0
   13d2c:	popne	{fp, pc}
   13d30:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13d34:	push	{r4, r5, r6, sl, fp, lr}
   13d38:	add	fp, sp, #16
   13d3c:	mov	r5, r0
   13d40:	mov	r0, r1
   13d44:	mov	r4, r1
   13d48:	bl	13ecc <putchar_unlocked@plt+0x2eec>
   13d4c:	cmp	r0, #0
   13d50:	beq	13d6c <putchar_unlocked@plt+0x2d8c>
   13d54:	mov	r1, r5
   13d58:	mov	r2, r4
   13d5c:	mov	r6, r0
   13d60:	bl	10de8 <memcpy@plt>
   13d64:	mov	r0, r6
   13d68:	pop	{r4, r5, r6, sl, fp, pc}
   13d6c:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13d70:	push	{r4, r5, r6, sl, fp, lr}
   13d74:	add	fp, sp, #16
   13d78:	mov	r5, r0
   13d7c:	mov	r0, r1
   13d80:	mov	r4, r1
   13d84:	bl	13ecc <putchar_unlocked@plt+0x2eec>
   13d88:	cmp	r0, #0
   13d8c:	beq	13da8 <putchar_unlocked@plt+0x2dc8>
   13d90:	mov	r1, r5
   13d94:	mov	r2, r4
   13d98:	mov	r6, r0
   13d9c:	bl	10de8 <memcpy@plt>
   13da0:	mov	r0, r6
   13da4:	pop	{r4, r5, r6, sl, fp, pc}
   13da8:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13dac:	push	{r4, r5, r6, sl, fp, lr}
   13db0:	add	fp, sp, #16
   13db4:	mov	r5, r0
   13db8:	add	r0, r1, #1
   13dbc:	mov	r4, r1
   13dc0:	bl	13ecc <putchar_unlocked@plt+0x2eec>
   13dc4:	cmp	r0, #0
   13dc8:	beq	13df0 <putchar_unlocked@plt+0x2e10>
   13dcc:	mov	r6, r0
   13dd0:	mov	r0, #0
   13dd4:	mov	r1, r5
   13dd8:	mov	r2, r4
   13ddc:	strb	r0, [r6, r4]
   13de0:	mov	r0, r6
   13de4:	bl	10de8 <memcpy@plt>
   13de8:	mov	r0, r6
   13dec:	pop	{r4, r5, r6, sl, fp, pc}
   13df0:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13df4:	push	{r4, r5, r6, sl, fp, lr}
   13df8:	add	fp, sp, #16
   13dfc:	mov	r4, r0
   13e00:	bl	10ef0 <strlen@plt>
   13e04:	add	r5, r0, #1
   13e08:	mov	r0, r5
   13e0c:	bl	13ecc <putchar_unlocked@plt+0x2eec>
   13e10:	cmp	r0, #0
   13e14:	beq	13e30 <putchar_unlocked@plt+0x2e50>
   13e18:	mov	r1, r4
   13e1c:	mov	r2, r5
   13e20:	mov	r6, r0
   13e24:	bl	10de8 <memcpy@plt>
   13e28:	mov	r0, r6
   13e2c:	pop	{r4, r5, r6, sl, fp, pc}
   13e30:	bl	13e34 <putchar_unlocked@plt+0x2e54>
   13e34:	push	{fp, lr}
   13e38:	mov	fp, sp
   13e3c:	movw	r0, #20708	; 0x50e4
   13e40:	movw	r1, #19248	; 0x4b30
   13e44:	mov	r2, #5
   13e48:	movt	r0, #2
   13e4c:	movt	r1, #1
   13e50:	ldr	r4, [r0]
   13e54:	mov	r0, #0
   13e58:	bl	10e0c <dcgettext@plt>
   13e5c:	movw	r2, #18143	; 0x46df
   13e60:	mov	r3, r0
   13e64:	mov	r0, r4
   13e68:	mov	r1, #0
   13e6c:	movt	r2, #1
   13e70:	bl	10e84 <error@plt>
   13e74:	bl	10fc8 <abort@plt>
   13e78:	clz	r2, r1
   13e7c:	clz	r3, r0
   13e80:	lsr	r2, r2, #5
   13e84:	lsr	r3, r3, #5
   13e88:	orrs	r2, r3, r2
   13e8c:	movwne	r1, #1
   13e90:	movwne	r0, #1
   13e94:	cmp	r1, #0
   13e98:	beq	13ec8 <putchar_unlocked@plt+0x2ee8>
   13e9c:	mvn	r2, #-2147483648	; 0x80000000
   13ea0:	udiv	r2, r2, r1
   13ea4:	cmp	r2, r0
   13ea8:	bcs	13ec8 <putchar_unlocked@plt+0x2ee8>
   13eac:	push	{fp, lr}
   13eb0:	mov	fp, sp
   13eb4:	bl	10efc <__errno_location@plt>
   13eb8:	mov	r1, #12
   13ebc:	str	r1, [r0]
   13ec0:	mov	r0, #0
   13ec4:	pop	{fp, pc}
   13ec8:	b	10d94 <calloc@plt>
   13ecc:	cmp	r0, #0
   13ed0:	movweq	r0, #1
   13ed4:	cmn	r0, #1
   13ed8:	ble	13ee0 <putchar_unlocked@plt+0x2f00>
   13edc:	b	10e90 <malloc@plt>
   13ee0:	push	{fp, lr}
   13ee4:	mov	fp, sp
   13ee8:	bl	10efc <__errno_location@plt>
   13eec:	mov	r1, #12
   13ef0:	str	r1, [r0]
   13ef4:	mov	r0, #0
   13ef8:	pop	{fp, pc}
   13efc:	push	{fp, lr}
   13f00:	mov	fp, sp
   13f04:	cmp	r0, #0
   13f08:	beq	13f24 <putchar_unlocked@plt+0x2f44>
   13f0c:	cmp	r1, #0
   13f10:	beq	13f30 <putchar_unlocked@plt+0x2f50>
   13f14:	cmn	r1, #1
   13f18:	ble	13f38 <putchar_unlocked@plt+0x2f58>
   13f1c:	pop	{fp, lr}
   13f20:	b	10e24 <realloc@plt>
   13f24:	mov	r0, r1
   13f28:	pop	{fp, lr}
   13f2c:	b	13ecc <putchar_unlocked@plt+0x2eec>
   13f30:	bl	116b4 <putchar_unlocked@plt+0x6d4>
   13f34:	b	13f44 <putchar_unlocked@plt+0x2f64>
   13f38:	bl	10efc <__errno_location@plt>
   13f3c:	mov	r1, #12
   13f40:	str	r1, [r0]
   13f44:	mov	r0, #0
   13f48:	pop	{fp, pc}
   13f4c:	push	{r4, r5, r6, sl, fp, lr}
   13f50:	add	fp, sp, #16
   13f54:	mov	r4, r0
   13f58:	bl	10e60 <__fpending@plt>
   13f5c:	mov	r5, r0
   13f60:	mov	r0, r4
   13f64:	bl	10e6c <ferror_unlocked@plt>
   13f68:	mov	r6, r0
   13f6c:	mov	r0, r4
   13f70:	bl	13fcc <putchar_unlocked@plt+0x2fec>
   13f74:	cmp	r6, #0
   13f78:	beq	13f98 <putchar_unlocked@plt+0x2fb8>
   13f7c:	mvn	r4, #0
   13f80:	cmp	r0, #0
   13f84:	bne	13fc4 <putchar_unlocked@plt+0x2fe4>
   13f88:	bl	10efc <__errno_location@plt>
   13f8c:	mov	r1, #0
   13f90:	str	r1, [r0]
   13f94:	b	13fc4 <putchar_unlocked@plt+0x2fe4>
   13f98:	cmp	r0, #0
   13f9c:	mov	r4, r0
   13fa0:	mvnne	r4, #0
   13fa4:	cmp	r5, #0
   13fa8:	bne	13fc4 <putchar_unlocked@plt+0x2fe4>
   13fac:	cmp	r0, #0
   13fb0:	beq	13fc4 <putchar_unlocked@plt+0x2fe4>
   13fb4:	bl	10efc <__errno_location@plt>
   13fb8:	ldr	r0, [r0]
   13fbc:	subs	r4, r0, #9
   13fc0:	mvnne	r4, #0
   13fc4:	mov	r0, r4
   13fc8:	pop	{r4, r5, r6, sl, fp, pc}
   13fcc:	push	{r4, r5, r6, sl, fp, lr}
   13fd0:	add	fp, sp, #16
   13fd4:	sub	sp, sp, #8
   13fd8:	mov	r4, r0
   13fdc:	bl	10f38 <fileno@plt>
   13fe0:	cmn	r0, #1
   13fe4:	ble	14058 <putchar_unlocked@plt+0x3078>
   13fe8:	mov	r0, r4
   13fec:	bl	10ea8 <__freading@plt>
   13ff0:	cmp	r0, #0
   13ff4:	beq	14020 <putchar_unlocked@plt+0x3040>
   13ff8:	mov	r0, r4
   13ffc:	bl	10f38 <fileno@plt>
   14000:	mov	r1, #1
   14004:	mov	r2, #0
   14008:	mov	r3, #0
   1400c:	str	r1, [sp]
   14010:	bl	10e48 <lseek64@plt>
   14014:	and	r0, r0, r1
   14018:	cmn	r0, #1
   1401c:	beq	14058 <putchar_unlocked@plt+0x3078>
   14020:	mov	r0, r4
   14024:	bl	14068 <putchar_unlocked@plt+0x3088>
   14028:	cmp	r0, #0
   1402c:	beq	14058 <putchar_unlocked@plt+0x3078>
   14030:	bl	10efc <__errno_location@plt>
   14034:	ldr	r6, [r0]
   14038:	mov	r5, r0
   1403c:	mov	r0, r4
   14040:	bl	10f50 <fclose@plt>
   14044:	cmp	r6, #0
   14048:	strne	r6, [r5]
   1404c:	mvnne	r0, #0
   14050:	sub	sp, fp, #16
   14054:	pop	{r4, r5, r6, sl, fp, pc}
   14058:	mov	r0, r4
   1405c:	sub	sp, fp, #16
   14060:	pop	{r4, r5, r6, sl, fp, lr}
   14064:	b	10f50 <fclose@plt>
   14068:	push	{r4, sl, fp, lr}
   1406c:	add	fp, sp, #8
   14070:	sub	sp, sp, #8
   14074:	mov	r4, r0
   14078:	cmp	r0, #0
   1407c:	beq	14098 <putchar_unlocked@plt+0x30b8>
   14080:	mov	r0, r4
   14084:	bl	10ea8 <__freading@plt>
   14088:	cmp	r0, #0
   1408c:	ldrbne	r0, [r4, #1]
   14090:	tstne	r0, #1
   14094:	bne	140a8 <putchar_unlocked@plt+0x30c8>
   14098:	mov	r0, r4
   1409c:	sub	sp, fp, #8
   140a0:	pop	{r4, sl, fp, lr}
   140a4:	b	10db8 <fflush@plt>
   140a8:	mov	r0, #1
   140ac:	mov	r2, #0
   140b0:	mov	r3, #0
   140b4:	str	r0, [sp]
   140b8:	mov	r0, r4
   140bc:	bl	140c4 <putchar_unlocked@plt+0x30e4>
   140c0:	b	14098 <putchar_unlocked@plt+0x30b8>
   140c4:	push	{r4, r5, r6, r7, fp, lr}
   140c8:	add	fp, sp, #16
   140cc:	sub	sp, sp, #8
   140d0:	mov	r4, r0
   140d4:	ldr	r0, [r0, #4]
   140d8:	mov	r5, r3
   140dc:	mov	r6, r2
   140e0:	ldr	r1, [r4, #8]
   140e4:	cmp	r1, r0
   140e8:	bne	14104 <putchar_unlocked@plt+0x3124>
   140ec:	ldrd	r0, [r4, #16]
   140f0:	cmp	r1, r0
   140f4:	bne	14104 <putchar_unlocked@plt+0x3124>
   140f8:	ldr	r0, [r4, #36]	; 0x24
   140fc:	cmp	r0, #0
   14100:	beq	1411c <putchar_unlocked@plt+0x313c>
   14104:	mov	r0, r4
   14108:	mov	r2, r6
   1410c:	mov	r3, r5
   14110:	sub	sp, fp, #16
   14114:	pop	{r4, r5, r6, r7, fp, lr}
   14118:	b	10f5c <fseeko64@plt>
   1411c:	ldr	r7, [fp, #8]
   14120:	mov	r0, r4
   14124:	bl	10f38 <fileno@plt>
   14128:	mov	r2, r6
   1412c:	mov	r3, r5
   14130:	str	r7, [sp]
   14134:	bl	10e48 <lseek64@plt>
   14138:	and	r2, r0, r1
   1413c:	cmn	r2, #1
   14140:	beq	1415c <putchar_unlocked@plt+0x317c>
   14144:	strd	r0, [r4, #80]	; 0x50
   14148:	ldr	r0, [r4]
   1414c:	bic	r0, r0, #16
   14150:	str	r0, [r4]
   14154:	mov	r0, #0
   14158:	b	14160 <putchar_unlocked@plt+0x3180>
   1415c:	mvn	r0, #0
   14160:	sub	sp, fp, #16
   14164:	pop	{r4, r5, r6, r7, fp, pc}
   14168:	push	{fp, lr}
   1416c:	mov	fp, sp
   14170:	mov	r0, #14
   14174:	bl	10f8c <nl_langinfo@plt>
   14178:	movw	r1, #17520	; 0x4470
   1417c:	cmp	r0, #0
   14180:	movt	r1, #1
   14184:	movne	r1, r0
   14188:	movw	r0, #19265	; 0x4b41
   1418c:	ldrb	r2, [r1]
   14190:	movt	r0, #1
   14194:	cmp	r2, #0
   14198:	movne	r0, r1
   1419c:	pop	{fp, pc}
   141a0:	push	{r4, r5, r6, r7, fp, lr}
   141a4:	add	fp, sp, #16
   141a8:	sub	sp, sp, #8
   141ac:	add	r5, sp, #4
   141b0:	cmp	r0, #0
   141b4:	mov	r7, r2
   141b8:	mov	r4, r1
   141bc:	movne	r5, r0
   141c0:	mov	r0, r5
   141c4:	bl	10e78 <mbrtowc@plt>
   141c8:	mov	r6, r0
   141cc:	cmp	r7, #0
   141d0:	beq	141f4 <putchar_unlocked@plt+0x3214>
   141d4:	cmn	r6, #2
   141d8:	bcc	141f4 <putchar_unlocked@plt+0x3214>
   141dc:	mov	r0, #0
   141e0:	bl	1423c <putchar_unlocked@plt+0x325c>
   141e4:	cmp	r0, #0
   141e8:	ldrbeq	r0, [r4]
   141ec:	moveq	r6, #1
   141f0:	streq	r0, [r5]
   141f4:	mov	r0, r6
   141f8:	sub	sp, fp, #16
   141fc:	pop	{r4, r5, r6, r7, fp, pc}
   14200:	cmp	r2, #0
   14204:	beq	14234 <putchar_unlocked@plt+0x3254>
   14208:	mvn	r3, #0
   1420c:	udiv	r3, r3, r2
   14210:	cmp	r3, r1
   14214:	bcs	14234 <putchar_unlocked@plt+0x3254>
   14218:	push	{fp, lr}
   1421c:	mov	fp, sp
   14220:	bl	10efc <__errno_location@plt>
   14224:	mov	r1, #12
   14228:	str	r1, [r0]
   1422c:	mov	r0, #0
   14230:	pop	{fp, pc}
   14234:	mul	r1, r2, r1
   14238:	b	13efc <putchar_unlocked@plt+0x2f1c>
   1423c:	push	{r4, sl, fp, lr}
   14240:	add	fp, sp, #8
   14244:	sub	sp, sp, #264	; 0x108
   14248:	add	r1, sp, #7
   1424c:	movw	r2, #257	; 0x101
   14250:	bl	142a0 <putchar_unlocked@plt+0x32c0>
   14254:	mov	r4, #0
   14258:	cmp	r0, #0
   1425c:	bne	14294 <putchar_unlocked@plt+0x32b4>
   14260:	movw	r1, #19271	; 0x4b47
   14264:	add	r0, sp, #7
   14268:	movt	r1, #1
   1426c:	bl	10dac <strcmp@plt>
   14270:	cmp	r0, #0
   14274:	beq	14294 <putchar_unlocked@plt+0x32b4>
   14278:	movw	r1, #19273	; 0x4b49
   1427c:	add	r0, sp, #7
   14280:	movt	r1, #1
   14284:	bl	10dac <strcmp@plt>
   14288:	mov	r4, r0
   1428c:	cmp	r0, #0
   14290:	movwne	r4, #1
   14294:	mov	r0, r4
   14298:	sub	sp, fp, #8
   1429c:	pop	{r4, sl, fp, pc}
   142a0:	push	{r4, r5, r6, r7, fp, lr}
   142a4:	add	fp, sp, #16
   142a8:	mov	r4, r1
   142ac:	mov	r1, #0
   142b0:	mov	r6, r2
   142b4:	bl	10f74 <setlocale@plt>
   142b8:	cmp	r0, #0
   142bc:	beq	142e8 <putchar_unlocked@plt+0x3308>
   142c0:	mov	r7, r0
   142c4:	bl	10ef0 <strlen@plt>
   142c8:	cmp	r0, r6
   142cc:	bcs	142fc <putchar_unlocked@plt+0x331c>
   142d0:	add	r2, r0, #1
   142d4:	mov	r0, r4
   142d8:	mov	r1, r7
   142dc:	bl	10de8 <memcpy@plt>
   142e0:	mov	r5, #0
   142e4:	b	14324 <putchar_unlocked@plt+0x3344>
   142e8:	cmp	r6, #0
   142ec:	mov	r5, #22
   142f0:	movne	r0, #0
   142f4:	strbne	r0, [r4]
   142f8:	b	14324 <putchar_unlocked@plt+0x3344>
   142fc:	mov	r5, #34	; 0x22
   14300:	cmp	r6, #0
   14304:	beq	14324 <putchar_unlocked@plt+0x3344>
   14308:	sub	r6, r6, #1
   1430c:	mov	r0, r4
   14310:	mov	r1, r7
   14314:	mov	r2, r6
   14318:	bl	10de8 <memcpy@plt>
   1431c:	mov	r0, #0
   14320:	strb	r0, [r4, r6]
   14324:	mov	r0, r5
   14328:	pop	{r4, r5, r6, r7, fp, pc}
   1432c:	mov	r1, #0
   14330:	b	10f74 <setlocale@plt>
   14334:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14338:	mov	r7, r0
   1433c:	ldr	r6, [pc, #72]	; 1438c <putchar_unlocked@plt+0x33ac>
   14340:	ldr	r5, [pc, #72]	; 14390 <putchar_unlocked@plt+0x33b0>
   14344:	add	r6, pc, r6
   14348:	add	r5, pc, r5
   1434c:	sub	r6, r6, r5
   14350:	mov	r8, r1
   14354:	mov	r9, r2
   14358:	bl	10d74 <calloc@plt-0x20>
   1435c:	asrs	r6, r6, #2
   14360:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14364:	mov	r4, #0
   14368:	add	r4, r4, #1
   1436c:	ldr	r3, [r5], #4
   14370:	mov	r2, r9
   14374:	mov	r1, r8
   14378:	mov	r0, r7
   1437c:	blx	r3
   14380:	cmp	r6, r4
   14384:	bne	14368 <putchar_unlocked@plt+0x3388>
   14388:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1438c:	andeq	r0, r1, r0, asr #23
   14390:			; <UNDEFINED> instruction: 0x00010bb8
   14394:	bx	lr
   14398:	ldr	r3, [pc, #12]	; 143ac <putchar_unlocked@plt+0x33cc>
   1439c:	mov	r1, #0
   143a0:	add	r3, pc, r3
   143a4:	ldr	r2, [r3]
   143a8:	b	10f08 <__cxa_atexit@plt>
   143ac:	andeq	r0, r1, r4, lsr sp

Disassembly of section .fini:

000143b0 <.fini>:
   143b0:	push	{r3, lr}
   143b4:	pop	{r3, pc}
