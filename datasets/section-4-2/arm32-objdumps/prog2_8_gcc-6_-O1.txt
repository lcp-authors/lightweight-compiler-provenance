
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010aa8 <.init>:
   10aa8:	push	{r3, lr}
   10aac:	bl	10b88 <_start@@Base+0x3c>
   10ab0:	pop	{r3, pc}

Disassembly of section .plt:

00010ab4 <calloc@plt-0x14>:
   10ab4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ab8:	ldr	lr, [pc, #4]	; 10ac4 <calloc@plt-0x4>
   10abc:	add	lr, pc, lr
   10ac0:	ldr	pc, [lr, #8]!
   10ac4:	andeq	r2, r1, ip, lsr r5

00010ac8 <calloc@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #73728	; 0x12000
   10ad0:	ldr	pc, [ip, #1340]!	; 0x53c

00010ad4 <printf@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #73728	; 0x12000
   10adc:	ldr	pc, [ip, #1332]!	; 0x534

00010ae0 <free@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #73728	; 0x12000
   10ae8:	ldr	pc, [ip, #1324]!	; 0x52c

00010aec <realloc@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1316]!	; 0x524

00010af8 <puts@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1308]!	; 0x51c

00010b04 <malloc@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1300]!	; 0x514

00010b10 <__libc_start_main@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1292]!	; 0x50c

00010b1c <__gmon_start__@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1284]!	; 0x504

00010b28 <setvbuf@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b34 <putchar@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b40 <abort@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1260]!	; 0x4ec

Disassembly of section .text:

00010b4c <_start@@Base>:
   10b4c:	mov	fp, #0
   10b50:	mov	lr, #0
   10b54:	pop	{r1}		; (ldr r1, [sp], #4)
   10b58:	mov	r2, sp
   10b5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10b60:	push	{r0}		; (str r0, [sp, #-4]!)
   10b64:	ldr	ip, [pc, #16]	; 10b7c <_start@@Base+0x30>
   10b68:	push	{ip}		; (str ip, [sp, #-4]!)
   10b6c:	ldr	r0, [pc, #12]	; 10b80 <_start@@Base+0x34>
   10b70:	ldr	r3, [pc, #12]	; 10b84 <_start@@Base+0x38>
   10b74:	bl	10b10 <__libc_start_main@plt>
   10b78:	bl	10b40 <abort@plt>
   10b7c:	ldrdeq	r2, [r1], -r8
   10b80:	andeq	r1, r1, r8, ror #18
   10b84:	andeq	r2, r1, r8, ror r2
   10b88:	ldr	r3, [pc, #20]	; 10ba4 <_start@@Base+0x58>
   10b8c:	ldr	r2, [pc, #20]	; 10ba8 <_start@@Base+0x5c>
   10b90:	add	r3, pc, r3
   10b94:	ldr	r2, [r3, r2]
   10b98:	cmp	r2, #0
   10b9c:	bxeq	lr
   10ba0:	b	10b1c <__gmon_start__@plt>
   10ba4:	andeq	r2, r1, r8, ror #8
   10ba8:	andeq	r0, r0, r8, lsr r0
   10bac:	ldr	r3, [pc, #28]	; 10bd0 <_start@@Base+0x84>
   10bb0:	ldr	r0, [pc, #28]	; 10bd4 <_start@@Base+0x88>
   10bb4:	sub	r3, r3, r0
   10bb8:	cmp	r3, #6
   10bbc:	bxls	lr
   10bc0:	ldr	r3, [pc, #16]	; 10bd8 <_start@@Base+0x8c>
   10bc4:	cmp	r3, #0
   10bc8:	bxeq	lr
   10bcc:	bx	r3
   10bd0:	andeq	r3, r2, r7, asr #32
   10bd4:	andeq	r3, r2, r4, asr #32
   10bd8:	andeq	r0, r0, r0
   10bdc:	ldr	r1, [pc, #36]	; 10c08 <_start@@Base+0xbc>
   10be0:	ldr	r0, [pc, #36]	; 10c0c <_start@@Base+0xc0>
   10be4:	sub	r1, r1, r0
   10be8:	asr	r1, r1, #2
   10bec:	add	r1, r1, r1, lsr #31
   10bf0:	asrs	r1, r1, #1
   10bf4:	bxeq	lr
   10bf8:	ldr	r3, [pc, #16]	; 10c10 <_start@@Base+0xc4>
   10bfc:	cmp	r3, #0
   10c00:	bxeq	lr
   10c04:	bx	r3
   10c08:	andeq	r3, r2, r4, asr #32
   10c0c:	andeq	r3, r2, r4, asr #32
   10c10:	andeq	r0, r0, r0
   10c14:	push	{r4, lr}
   10c18:	ldr	r4, [pc, #24]	; 10c38 <_start@@Base+0xec>
   10c1c:	ldrb	r3, [r4]
   10c20:	cmp	r3, #0
   10c24:	popne	{r4, pc}
   10c28:	bl	10bac <_start@@Base+0x60>
   10c2c:	mov	r3, #1
   10c30:	strb	r3, [r4]
   10c34:	pop	{r4, pc}
   10c38:	andeq	r3, r2, r0, asr r0
   10c3c:	ldr	r0, [pc, #40]	; 10c6c <_start@@Base+0x120>
   10c40:	ldr	r3, [r0]
   10c44:	cmp	r3, #0
   10c48:	bne	10c50 <_start@@Base+0x104>
   10c4c:	b	10bdc <_start@@Base+0x90>
   10c50:	ldr	r3, [pc, #24]	; 10c70 <_start@@Base+0x124>
   10c54:	cmp	r3, #0
   10c58:	beq	10c4c <_start@@Base+0x100>
   10c5c:	push	{r4, lr}
   10c60:	blx	r3
   10c64:	pop	{r4, lr}
   10c68:	b	10bdc <_start@@Base+0x90>
   10c6c:	andeq	r2, r2, r4, lsl pc
   10c70:	andeq	r0, r0, r0

00010c74 <_g@@Base>:
   10c74:	push	{r1, r2, r3}
   10c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c7c:	sub	sp, sp, #8
   10c80:	mov	sl, r0
   10c84:	ldr	r7, [sp, #44]	; 0x2c
   10c88:	mov	r0, #8
   10c8c:	bl	10b04 <malloc@plt>
   10c90:	mov	r6, r0
   10c94:	add	r3, sp, #48	; 0x30
   10c98:	str	r3, [sp, #4]
   10c9c:	mov	r1, #8
   10ca0:	mov	r0, sl
   10ca4:	bl	10ac8 <calloc@plt>
   10ca8:	str	r0, [r6, #4]
   10cac:	cmp	r7, #0
   10cb0:	ble	10d1c <_g@@Base+0xa8>
   10cb4:	mov	r5, #0
   10cb8:	mov	r9, #8
   10cbc:	mov	r8, #1
   10cc0:	ldr	r3, [sp, #4]
   10cc4:	add	r2, r3, #4
   10cc8:	str	r2, [sp, #4]
   10ccc:	mov	r2, r3
   10cd0:	ldr	r4, [r2], #8
   10cd4:	str	r2, [sp, #4]
   10cd8:	ldr	fp, [r3, #4]
   10cdc:	mov	r1, r9
   10ce0:	mov	r0, r8
   10ce4:	bl	10ac8 <calloc@plt>
   10ce8:	str	fp, [r0]
   10cec:	ldr	r3, [r6, #4]
   10cf0:	add	r3, r3, r4, lsl #3
   10cf4:	ldr	r2, [r3, #4]
   10cf8:	str	r2, [r0, #4]
   10cfc:	str	r0, [r3, #4]
   10d00:	ldr	r2, [r6, #4]
   10d04:	ldr	r3, [r2, r4, lsl #3]
   10d08:	add	r3, r3, #1
   10d0c:	str	r3, [r2, r4, lsl #3]
   10d10:	add	r5, r5, #2
   10d14:	cmp	r7, r5
   10d18:	bgt	10cc0 <_g@@Base+0x4c>
   10d1c:	str	sl, [r6]
   10d20:	mov	r0, r6
   10d24:	add	sp, sp, #8
   10d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d2c:	add	sp, sp, #12
   10d30:	bx	lr

00010d34 <_f@@Base>:
   10d34:	push	{r4, r5, r6, lr}
   10d38:	subs	r5, r0, #0
   10d3c:	beq	10d80 <_f@@Base+0x4c>
   10d40:	ldr	r3, [r5]
   10d44:	cmp	r3, #0
   10d48:	ble	10d88 <_f@@Base+0x54>
   10d4c:	mov	r6, r1
   10d50:	mov	r4, #0
   10d54:	mov	r1, r4
   10d58:	mov	r0, r5
   10d5c:	bl	11fb4 <vetor_elemento@@Base>
   10d60:	cmp	r0, r6
   10d64:	beq	10d90 <_f@@Base+0x5c>
   10d68:	add	r4, r4, #1
   10d6c:	ldr	r3, [r5]
   10d70:	cmp	r3, r4
   10d74:	bgt	10d54 <_f@@Base+0x20>
   10d78:	mov	r0, #0
   10d7c:	pop	{r4, r5, r6, pc}
   10d80:	mov	r0, #0
   10d84:	pop	{r4, r5, r6, pc}
   10d88:	mov	r0, #0
   10d8c:	pop	{r4, r5, r6, pc}
   10d90:	mov	r0, #1
   10d94:	pop	{r4, r5, r6, pc}

00010d98 <teste_grafo_novo@@Base>:
   10d98:	push	{r4, r5, r6, lr}
   10d9c:	ldr	r0, [pc, #184]	; 10e5c <teste_grafo_novo@@Base+0xc4>
   10da0:	bl	10ad4 <printf@plt>
   10da4:	mov	r0, #10
   10da8:	bl	11a30 <grafo_novo@@Base>
   10dac:	subs	r5, r0, #0
   10db0:	beq	10e20 <teste_grafo_novo@@Base+0x88>
   10db4:	ldr	r3, [r5]
   10db8:	cmp	r3, #10
   10dbc:	moveq	r4, #0
   10dc0:	beq	10dd0 <teste_grafo_novo@@Base+0x38>
   10dc4:	ldr	r0, [pc, #148]	; 10e60 <teste_grafo_novo@@Base+0xc8>
   10dc8:	bl	10ad4 <printf@plt>
   10dcc:	mov	r4, #1
   10dd0:	mov	r0, r5
   10dd4:	bl	11a90 <grafo_apaga@@Base>
   10dd8:	mov	r0, #1
   10ddc:	bl	11a30 <grafo_novo@@Base>
   10de0:	subs	r5, r0, #0
   10de4:	beq	10e44 <teste_grafo_novo@@Base+0xac>
   10de8:	ldr	r3, [r5]
   10dec:	cmp	r3, #1
   10df0:	beq	10e00 <teste_grafo_novo@@Base+0x68>
   10df4:	ldr	r0, [pc, #104]	; 10e64 <teste_grafo_novo@@Base+0xcc>
   10df8:	bl	10ad4 <printf@plt>
   10dfc:	add	r4, r4, #1
   10e00:	mov	r0, r5
   10e04:	bl	11a90 <grafo_apaga@@Base>
   10e08:	cmp	r4, #0
   10e0c:	beq	10e38 <teste_grafo_novo@@Base+0xa0>
   10e10:	mov	r0, #10
   10e14:	bl	10b34 <putchar@plt>
   10e18:	mov	r0, r4
   10e1c:	pop	{r4, r5, r6, pc}
   10e20:	ldr	r0, [pc, #64]	; 10e68 <teste_grafo_novo@@Base+0xd0>
   10e24:	bl	10ad4 <printf@plt>
   10e28:	mov	r0, #10
   10e2c:	bl	10b34 <putchar@plt>
   10e30:	mov	r4, #1
   10e34:	b	10e18 <teste_grafo_novo@@Base+0x80>
   10e38:	ldr	r0, [pc, #44]	; 10e6c <teste_grafo_novo@@Base+0xd4>
   10e3c:	bl	10af8 <puts@plt>
   10e40:	b	10e18 <teste_grafo_novo@@Base+0x80>
   10e44:	ldr	r0, [pc, #28]	; 10e68 <teste_grafo_novo@@Base+0xd0>
   10e48:	bl	10ad4 <printf@plt>
   10e4c:	add	r4, r4, #1
   10e50:	mov	r0, #10
   10e54:	bl	10b34 <putchar@plt>
   10e58:	b	10e18 <teste_grafo_novo@@Base+0x80>
   10e5c:	andeq	r2, r1, r8, ror #5
   10e60:	andeq	r2, r1, r0, lsl r3
   10e64:	andeq	r2, r1, r4, lsr r3
   10e68:	strdeq	r2, [r1], -r8
   10e6c:	andeq	r2, r1, r8, asr r3

00010e70 <teste_grafo_aresta@@Base>:
   10e70:	push	{r4, r5, r6, lr}
   10e74:	sub	sp, sp, #80	; 0x50
   10e78:	mov	ip, #1
   10e7c:	str	ip, [sp, #76]	; 0x4c
   10e80:	mov	r0, #0
   10e84:	str	r0, [sp, #72]	; 0x48
   10e88:	mov	r2, #3
   10e8c:	str	r2, [sp, #68]	; 0x44
   10e90:	mov	r3, #6
   10e94:	str	r3, [sp, #64]	; 0x40
   10e98:	str	r3, [sp, #60]	; 0x3c
   10e9c:	mov	r1, #7
   10ea0:	str	r1, [sp, #56]	; 0x38
   10ea4:	str	ip, [sp, #52]	; 0x34
   10ea8:	str	ip, [sp, #48]	; 0x30
   10eac:	str	r3, [sp, #44]	; 0x2c
   10eb0:	mov	r4, #4
   10eb4:	str	r4, [sp, #40]	; 0x28
   10eb8:	str	r0, [sp, #36]	; 0x24
   10ebc:	str	r4, [sp, #32]
   10ec0:	str	r4, [sp, #28]
   10ec4:	mov	r6, #5
   10ec8:	str	r6, [sp, #24]
   10ecc:	str	r6, [sp, #20]
   10ed0:	str	r1, [sp, #16]
   10ed4:	mov	r3, #2
   10ed8:	str	r3, [sp, #12]
   10edc:	str	r0, [sp, #8]
   10ee0:	str	r3, [sp, #4]
   10ee4:	str	r1, [sp]
   10ee8:	mov	r1, #22
   10eec:	mov	r0, #8
   10ef0:	bl	10c74 <_g@@Base>
   10ef4:	mov	r5, r0
   10ef8:	ldr	r0, [pc, #200]	; 10fc8 <teste_grafo_aresta@@Base+0x158>
   10efc:	bl	10ad4 <printf@plt>
   10f00:	mov	r2, r4
   10f04:	mov	r1, r6
   10f08:	mov	r0, r5
   10f0c:	bl	11af8 <grafo_aresta@@Base>
   10f10:	cmp	r0, #1
   10f14:	moveq	r4, #0
   10f18:	beq	10f28 <teste_grafo_aresta@@Base+0xb8>
   10f1c:	ldr	r0, [pc, #168]	; 10fcc <teste_grafo_aresta@@Base+0x15c>
   10f20:	bl	10ad4 <printf@plt>
   10f24:	mov	r4, #1
   10f28:	mov	r2, #6
   10f2c:	mov	r1, #7
   10f30:	mov	r0, r5
   10f34:	bl	11af8 <grafo_aresta@@Base>
   10f38:	cmp	r0, #1
   10f3c:	beq	10f4c <teste_grafo_aresta@@Base+0xdc>
   10f40:	ldr	r0, [pc, #132]	; 10fcc <teste_grafo_aresta@@Base+0x15c>
   10f44:	bl	10ad4 <printf@plt>
   10f48:	add	r4, r4, #1
   10f4c:	mov	r2, #1
   10f50:	mov	r1, #7
   10f54:	mov	r0, r5
   10f58:	bl	11af8 <grafo_aresta@@Base>
   10f5c:	cmp	r0, #0
   10f60:	bne	10fac <teste_grafo_aresta@@Base+0x13c>
   10f64:	mov	r2, #7
   10f68:	mov	r1, #2
   10f6c:	mov	r0, #0
   10f70:	bl	11af8 <grafo_aresta@@Base>
   10f74:	cmn	r0, #1
   10f78:	beq	10f88 <teste_grafo_aresta@@Base+0x118>
   10f7c:	ldr	r0, [pc, #76]	; 10fd0 <teste_grafo_aresta@@Base+0x160>
   10f80:	bl	10ad4 <printf@plt>
   10f84:	add	r4, r4, #1
   10f88:	mov	r0, r5
   10f8c:	bl	11a90 <grafo_apaga@@Base>
   10f90:	cmp	r4, #0
   10f94:	beq	10fbc <teste_grafo_aresta@@Base+0x14c>
   10f98:	mov	r0, #10
   10f9c:	bl	10b34 <putchar@plt>
   10fa0:	mov	r0, r4
   10fa4:	add	sp, sp, #80	; 0x50
   10fa8:	pop	{r4, r5, r6, pc}
   10fac:	ldr	r0, [pc, #32]	; 10fd4 <teste_grafo_aresta@@Base+0x164>
   10fb0:	bl	10ad4 <printf@plt>
   10fb4:	add	r4, r4, #1
   10fb8:	b	10f64 <teste_grafo_aresta@@Base+0xf4>
   10fbc:	ldr	r0, [pc, #20]	; 10fd8 <teste_grafo_aresta@@Base+0x168>
   10fc0:	bl	10af8 <puts@plt>
   10fc4:	b	10fa0 <teste_grafo_aresta@@Base+0x130>
   10fc8:	andeq	r2, r1, ip, asr r3
   10fcc:	andeq	r2, r1, r0, ror r3
   10fd0:	andeq	r2, r1, r4, ror #7
   10fd4:	andeq	r2, r1, r8, lsr #7
   10fd8:	andeq	r2, r1, r8, asr r3

00010fdc <teste_grafo_adiciona@@Base>:
   10fdc:	push	{r4, r5, r6, lr}
   10fe0:	sub	sp, sp, #8
   10fe4:	mov	r4, #2
   10fe8:	str	r4, [sp, #4]
   10fec:	mov	r6, #7
   10ff0:	str	r6, [sp]
   10ff4:	mov	r3, r4
   10ff8:	mov	r2, #3
   10ffc:	mov	r1, #4
   11000:	mov	r0, #9
   11004:	bl	10c74 <_g@@Base>
   11008:	mov	r5, r0
   1100c:	ldr	r0, [pc, #380]	; 11190 <teste_grafo_adiciona@@Base+0x1b4>
   11010:	bl	10ad4 <printf@plt>
   11014:	mov	r2, r6
   11018:	mov	r1, r4
   1101c:	mov	r0, r5
   11020:	bl	11b84 <grafo_adiciona@@Base>
   11024:	cmp	r0, #1
   11028:	moveq	r4, #0
   1102c:	beq	1103c <teste_grafo_adiciona@@Base+0x60>
   11030:	ldr	r0, [pc, #348]	; 11194 <teste_grafo_adiciona@@Base+0x1b8>
   11034:	bl	10ad4 <printf@plt>
   11038:	mov	r4, #1
   1103c:	ldr	r3, [r5, #4]
   11040:	ldr	r3, [r3, #20]
   11044:	cmp	r3, #0
   11048:	beq	11058 <teste_grafo_adiciona@@Base+0x7c>
   1104c:	ldr	r3, [r3]
   11050:	cmp	r3, #7
   11054:	beq	11064 <teste_grafo_adiciona@@Base+0x88>
   11058:	ldr	r0, [pc, #312]	; 11198 <teste_grafo_adiciona@@Base+0x1bc>
   1105c:	bl	10ad4 <printf@plt>
   11060:	add	r4, r4, #1
   11064:	mov	r2, #8
   11068:	mov	r1, #3
   1106c:	mov	r0, r5
   11070:	bl	11b84 <grafo_adiciona@@Base>
   11074:	cmp	r0, #1
   11078:	beq	11088 <teste_grafo_adiciona@@Base+0xac>
   1107c:	ldr	r0, [pc, #272]	; 11194 <teste_grafo_adiciona@@Base+0x1b8>
   11080:	bl	10ad4 <printf@plt>
   11084:	add	r4, r4, #1
   11088:	ldr	r3, [r5, #4]
   1108c:	ldr	r3, [r3, #28]
   11090:	cmp	r3, #0
   11094:	beq	110b0 <teste_grafo_adiciona@@Base+0xd4>
   11098:	ldr	r2, [r3, #4]
   1109c:	cmp	r2, #0
   110a0:	beq	110b0 <teste_grafo_adiciona@@Base+0xd4>
   110a4:	ldr	r1, [r2, #4]
   110a8:	cmp	r1, #0
   110ac:	beq	11140 <teste_grafo_adiciona@@Base+0x164>
   110b0:	ldr	r0, [pc, #228]	; 1119c <teste_grafo_adiciona@@Base+0x1c0>
   110b4:	bl	10ad4 <printf@plt>
   110b8:	add	r4, r4, #1
   110bc:	mov	r2, #7
   110c0:	mov	r1, #2
   110c4:	mov	r0, r5
   110c8:	bl	11b84 <grafo_adiciona@@Base>
   110cc:	cmp	r0, #0
   110d0:	bne	11174 <teste_grafo_adiciona@@Base+0x198>
   110d4:	mov	r2, #7
   110d8:	mov	r1, #22
   110dc:	mov	r0, r5
   110e0:	bl	11b84 <grafo_adiciona@@Base>
   110e4:	cmn	r0, #1
   110e8:	beq	110f8 <teste_grafo_adiciona@@Base+0x11c>
   110ec:	ldr	r0, [pc, #172]	; 111a0 <teste_grafo_adiciona@@Base+0x1c4>
   110f0:	bl	10ad4 <printf@plt>
   110f4:	add	r4, r4, #1
   110f8:	mov	r2, #7
   110fc:	mov	r1, #2
   11100:	mov	r0, #0
   11104:	bl	11b84 <grafo_adiciona@@Base>
   11108:	cmn	r0, #1
   1110c:	beq	1111c <teste_grafo_adiciona@@Base+0x140>
   11110:	ldr	r0, [pc, #140]	; 111a4 <teste_grafo_adiciona@@Base+0x1c8>
   11114:	bl	10ad4 <printf@plt>
   11118:	add	r4, r4, #1
   1111c:	mov	r0, r5
   11120:	bl	11a90 <grafo_apaga@@Base>
   11124:	cmp	r4, #0
   11128:	beq	11184 <teste_grafo_adiciona@@Base+0x1a8>
   1112c:	mov	r0, #10
   11130:	bl	10b34 <putchar@plt>
   11134:	mov	r0, r4
   11138:	add	sp, sp, #8
   1113c:	pop	{r4, r5, r6, pc}
   11140:	ldr	r3, [r3]
   11144:	cmp	r3, #2
   11148:	beq	11164 <teste_grafo_adiciona@@Base+0x188>
   1114c:	cmp	r3, #8
   11150:	bne	110b0 <teste_grafo_adiciona@@Base+0xd4>
   11154:	ldr	r3, [r2]
   11158:	cmp	r3, #2
   1115c:	bne	110b0 <teste_grafo_adiciona@@Base+0xd4>
   11160:	b	110bc <teste_grafo_adiciona@@Base+0xe0>
   11164:	ldr	r3, [r2]
   11168:	cmp	r3, #8
   1116c:	bne	110b0 <teste_grafo_adiciona@@Base+0xd4>
   11170:	b	110bc <teste_grafo_adiciona@@Base+0xe0>
   11174:	ldr	r0, [pc, #44]	; 111a8 <teste_grafo_adiciona@@Base+0x1cc>
   11178:	bl	10ad4 <printf@plt>
   1117c:	add	r4, r4, #1
   11180:	b	110d4 <teste_grafo_adiciona@@Base+0xf8>
   11184:	ldr	r0, [pc, #32]	; 111ac <teste_grafo_adiciona@@Base+0x1d0>
   11188:	bl	10af8 <puts@plt>
   1118c:	b	11134 <teste_grafo_adiciona@@Base+0x158>
   11190:	andeq	r2, r1, ip, lsl r4
   11194:	andeq	r2, r1, r0, lsr r4
   11198:	andeq	r2, r1, ip, ror #8
   1119c:	muleq	r1, ip, r4
   111a0:	andeq	r2, r1, r0, lsl r5
   111a4:	andeq	r2, r1, r8, asr #10
   111a8:	ldrdeq	r2, [r1], -r8
   111ac:	andeq	r2, r1, r8, asr r3

000111b0 <teste_grafo_remove@@Base>:
   111b0:	push	{r4, r5, r6, lr}
   111b4:	sub	sp, sp, #16
   111b8:	mov	r6, #1
   111bc:	str	r6, [sp, #12]
   111c0:	mov	r4, #7
   111c4:	str	r4, [sp, #8]
   111c8:	mov	r3, #2
   111cc:	str	r3, [sp, #4]
   111d0:	str	r4, [sp]
   111d4:	mov	r2, #3
   111d8:	mov	r1, #6
   111dc:	mov	r0, #9
   111e0:	bl	10c74 <_g@@Base>
   111e4:	mov	r5, r0
   111e8:	ldr	r0, [pc, #284]	; 1130c <teste_grafo_remove@@Base+0x15c>
   111ec:	bl	10ad4 <printf@plt>
   111f0:	mov	r2, r6
   111f4:	mov	r1, r4
   111f8:	mov	r0, r5
   111fc:	bl	11c14 <grafo_remove@@Base>
   11200:	cmp	r0, r6
   11204:	moveq	r4, #0
   11208:	beq	11218 <teste_grafo_remove@@Base+0x68>
   1120c:	ldr	r0, [pc, #252]	; 11310 <teste_grafo_remove@@Base+0x160>
   11210:	bl	10ad4 <printf@plt>
   11214:	mov	r4, r6
   11218:	ldr	r3, [r5, #4]
   1121c:	ldr	r3, [r3, #60]	; 0x3c
   11220:	cmp	r3, #0
   11224:	beq	11234 <teste_grafo_remove@@Base+0x84>
   11228:	ldr	r2, [r3, #4]
   1122c:	cmp	r2, #0
   11230:	beq	112e0 <teste_grafo_remove@@Base+0x130>
   11234:	ldr	r0, [pc, #216]	; 11314 <teste_grafo_remove@@Base+0x164>
   11238:	bl	10ad4 <printf@plt>
   1123c:	add	r4, r4, #1
   11240:	mov	r2, #2
   11244:	mov	r1, #7
   11248:	mov	r0, r5
   1124c:	bl	11c14 <grafo_remove@@Base>
   11250:	cmp	r0, #1
   11254:	beq	11264 <teste_grafo_remove@@Base+0xb4>
   11258:	ldr	r0, [pc, #176]	; 11310 <teste_grafo_remove@@Base+0x160>
   1125c:	bl	10ad4 <printf@plt>
   11260:	add	r4, r4, #1
   11264:	ldr	r3, [r5, #4]
   11268:	ldr	r3, [r3, #60]	; 0x3c
   1126c:	cmp	r3, #0
   11270:	beq	11280 <teste_grafo_remove@@Base+0xd0>
   11274:	ldr	r0, [pc, #152]	; 11314 <teste_grafo_remove@@Base+0x164>
   11278:	bl	10ad4 <printf@plt>
   1127c:	add	r4, r4, #1
   11280:	mov	r2, #0
   11284:	mov	r1, #4
   11288:	mov	r0, r5
   1128c:	bl	11c14 <grafo_remove@@Base>
   11290:	cmp	r0, #0
   11294:	bne	112f0 <teste_grafo_remove@@Base+0x140>
   11298:	mov	r2, #22
   1129c:	mov	r1, #7
   112a0:	mov	r0, r5
   112a4:	bl	11c14 <grafo_remove@@Base>
   112a8:	cmn	r0, #1
   112ac:	beq	112bc <teste_grafo_remove@@Base+0x10c>
   112b0:	ldr	r0, [pc, #96]	; 11318 <teste_grafo_remove@@Base+0x168>
   112b4:	bl	10ad4 <printf@plt>
   112b8:	add	r4, r4, #1
   112bc:	mov	r0, r5
   112c0:	bl	11a90 <grafo_apaga@@Base>
   112c4:	cmp	r4, #0
   112c8:	beq	11300 <teste_grafo_remove@@Base+0x150>
   112cc:	mov	r0, #10
   112d0:	bl	10b34 <putchar@plt>
   112d4:	mov	r0, r4
   112d8:	add	sp, sp, #16
   112dc:	pop	{r4, r5, r6, pc}
   112e0:	ldr	r3, [r3]
   112e4:	cmp	r3, #2
   112e8:	bne	11234 <teste_grafo_remove@@Base+0x84>
   112ec:	b	11240 <teste_grafo_remove@@Base+0x90>
   112f0:	ldr	r0, [pc, #36]	; 1131c <teste_grafo_remove@@Base+0x16c>
   112f4:	bl	10ad4 <printf@plt>
   112f8:	add	r4, r4, #1
   112fc:	b	11298 <teste_grafo_remove@@Base+0xe8>
   11300:	ldr	r0, [pc, #24]	; 11320 <teste_grafo_remove@@Base+0x170>
   11304:	bl	10af8 <puts@plt>
   11308:	b	112d4 <teste_grafo_remove@@Base+0x124>
   1130c:	andeq	r2, r1, r0, lsl #11
   11310:	muleq	r1, r4, r5
   11314:	ldrdeq	r2, [r1], -r0
   11318:	andeq	r2, r1, r8, asr #12
   1131c:	andeq	r2, r1, ip, lsl #12
   11320:	andeq	r2, r1, r8, asr r3

00011324 <teste_v_sucessores@@Base>:
   11324:	push	{r4, r5, r6, lr}
   11328:	sub	sp, sp, #80	; 0x50
   1132c:	mov	r0, #1
   11330:	str	r0, [sp, #76]	; 0x4c
   11334:	mov	r1, #0
   11338:	str	r1, [sp, #72]	; 0x48
   1133c:	mov	r2, #3
   11340:	str	r2, [sp, #68]	; 0x44
   11344:	mov	r3, #6
   11348:	str	r3, [sp, #64]	; 0x40
   1134c:	str	r3, [sp, #60]	; 0x3c
   11350:	mov	r4, #7
   11354:	str	r4, [sp, #56]	; 0x38
   11358:	str	r0, [sp, #52]	; 0x34
   1135c:	str	r0, [sp, #48]	; 0x30
   11360:	str	r3, [sp, #44]	; 0x2c
   11364:	mov	r3, #4
   11368:	str	r3, [sp, #40]	; 0x28
   1136c:	str	r1, [sp, #36]	; 0x24
   11370:	str	r3, [sp, #32]
   11374:	str	r3, [sp, #28]
   11378:	mov	r3, #5
   1137c:	str	r3, [sp, #24]
   11380:	str	r3, [sp, #20]
   11384:	str	r4, [sp, #16]
   11388:	mov	r3, #2
   1138c:	str	r3, [sp, #12]
   11390:	str	r1, [sp, #8]
   11394:	str	r3, [sp, #4]
   11398:	str	r4, [sp]
   1139c:	mov	r1, #22
   113a0:	mov	r0, #8
   113a4:	bl	10c74 <_g@@Base>
   113a8:	mov	r6, r0
   113ac:	ldr	r0, [pc, #300]	; 114e0 <teste_v_sucessores@@Base+0x1bc>
   113b0:	bl	10ad4 <printf@plt>
   113b4:	mov	r1, r4
   113b8:	mov	r0, r6
   113bc:	bl	11cf4 <v_sucessores@@Base>
   113c0:	subs	r5, r0, #0
   113c4:	beq	1146c <teste_v_sucessores@@Base+0x148>
   113c8:	ldr	r3, [r5]
   113cc:	cmp	r3, #3
   113d0:	moveq	r4, #0
   113d4:	beq	113e4 <teste_v_sucessores@@Base+0xc0>
   113d8:	ldr	r0, [pc, #260]	; 114e4 <teste_v_sucessores@@Base+0x1c0>
   113dc:	bl	10ad4 <printf@plt>
   113e0:	mov	r4, #1
   113e4:	mov	r1, #2
   113e8:	mov	r0, r5
   113ec:	bl	10d34 <_f@@Base>
   113f0:	cmp	r0, #0
   113f4:	beq	1140c <teste_v_sucessores@@Base+0xe8>
   113f8:	mov	r1, #5
   113fc:	mov	r0, r5
   11400:	bl	10d34 <_f@@Base>
   11404:	cmp	r0, #0
   11408:	bne	11484 <teste_v_sucessores@@Base+0x160>
   1140c:	ldr	r0, [pc, #212]	; 114e8 <teste_v_sucessores@@Base+0x1c4>
   11410:	bl	10ad4 <printf@plt>
   11414:	add	r4, r4, #1
   11418:	mov	r0, r5
   1141c:	bl	11f44 <vetor_apaga@@Base>
   11420:	mov	r1, #2
   11424:	mov	r0, r6
   11428:	bl	11cf4 <v_sucessores@@Base>
   1142c:	subs	r5, r0, #0
   11430:	beq	1149c <teste_v_sucessores@@Base+0x178>
   11434:	ldr	r3, [r5]
   11438:	cmp	r3, #0
   1143c:	bne	114c4 <teste_v_sucessores@@Base+0x1a0>
   11440:	mov	r0, r5
   11444:	bl	11f44 <vetor_apaga@@Base>
   11448:	mov	r0, r6
   1144c:	bl	11a90 <grafo_apaga@@Base>
   11450:	cmp	r4, #0
   11454:	beq	114d4 <teste_v_sucessores@@Base+0x1b0>
   11458:	mov	r0, #10
   1145c:	bl	10b34 <putchar@plt>
   11460:	mov	r0, r4
   11464:	add	sp, sp, #80	; 0x50
   11468:	pop	{r4, r5, r6, pc}
   1146c:	ldr	r0, [pc, #120]	; 114ec <teste_v_sucessores@@Base+0x1c8>
   11470:	bl	10ad4 <printf@plt>
   11474:	mov	r0, #10
   11478:	bl	10b34 <putchar@plt>
   1147c:	mov	r4, #1
   11480:	b	11460 <teste_v_sucessores@@Base+0x13c>
   11484:	mov	r1, #6
   11488:	mov	r0, r5
   1148c:	bl	10d34 <_f@@Base>
   11490:	cmp	r0, #0
   11494:	bne	11418 <teste_v_sucessores@@Base+0xf4>
   11498:	b	1140c <teste_v_sucessores@@Base+0xe8>
   1149c:	ldr	r0, [pc, #76]	; 114f0 <teste_v_sucessores@@Base+0x1cc>
   114a0:	bl	10ad4 <printf@plt>
   114a4:	adds	r4, r4, #1
   114a8:	bne	114b8 <teste_v_sucessores@@Base+0x194>
   114ac:	ldr	r0, [pc, #64]	; 114f4 <teste_v_sucessores@@Base+0x1d0>
   114b0:	bl	10af8 <puts@plt>
   114b4:	b	11460 <teste_v_sucessores@@Base+0x13c>
   114b8:	mov	r0, #10
   114bc:	bl	10b34 <putchar@plt>
   114c0:	b	11460 <teste_v_sucessores@@Base+0x13c>
   114c4:	ldr	r0, [pc, #44]	; 114f8 <teste_v_sucessores@@Base+0x1d4>
   114c8:	bl	10ad4 <printf@plt>
   114cc:	add	r4, r4, #1
   114d0:	b	11440 <teste_v_sucessores@@Base+0x11c>
   114d4:	ldr	r0, [pc, #24]	; 114f4 <teste_v_sucessores@@Base+0x1d0>
   114d8:	bl	10af8 <puts@plt>
   114dc:	b	11460 <teste_v_sucessores@@Base+0x13c>
   114e0:	andeq	r2, r1, r0, lsl #13
   114e4:	andeq	r2, r1, r4, asr #13
   114e8:	strdeq	r2, [r1], -r0
   114ec:	muleq	r1, r4, r6
   114f0:	andeq	r2, r1, ip, lsl r7
   114f4:	andeq	r2, r1, r8, asr r3
   114f8:	andeq	r2, r1, ip, asr r7

000114fc <teste_v_antecessores@@Base>:
   114fc:	push	{r4, r5, r6, lr}
   11500:	sub	sp, sp, #80	; 0x50
   11504:	mov	ip, #1
   11508:	str	ip, [sp, #76]	; 0x4c
   1150c:	mov	r1, #0
   11510:	str	r1, [sp, #72]	; 0x48
   11514:	mov	r2, #3
   11518:	str	r2, [sp, #68]	; 0x44
   1151c:	mov	r0, #6
   11520:	str	r0, [sp, #64]	; 0x40
   11524:	str	r0, [sp, #60]	; 0x3c
   11528:	mov	r3, #7
   1152c:	str	r3, [sp, #56]	; 0x38
   11530:	str	ip, [sp, #52]	; 0x34
   11534:	str	ip, [sp, #48]	; 0x30
   11538:	str	r0, [sp, #44]	; 0x2c
   1153c:	mov	r0, #4
   11540:	str	r0, [sp, #40]	; 0x28
   11544:	str	r1, [sp, #36]	; 0x24
   11548:	str	r0, [sp, #32]
   1154c:	str	r0, [sp, #28]
   11550:	mov	r0, #5
   11554:	str	r0, [sp, #24]
   11558:	str	r0, [sp, #20]
   1155c:	str	r3, [sp, #16]
   11560:	mov	r4, #2
   11564:	str	r4, [sp, #12]
   11568:	str	r1, [sp, #8]
   1156c:	str	r4, [sp, #4]
   11570:	str	r3, [sp]
   11574:	mov	r3, r4
   11578:	mov	r1, #22
   1157c:	mov	r0, #8
   11580:	bl	10c74 <_g@@Base>
   11584:	mov	r6, r0
   11588:	ldr	r0, [pc, #300]	; 116bc <teste_v_antecessores@@Base+0x1c0>
   1158c:	bl	10ad4 <printf@plt>
   11590:	mov	r1, r4
   11594:	mov	r0, r6
   11598:	bl	11d6c <v_antecessores@@Base>
   1159c:	subs	r5, r0, #0
   115a0:	beq	11648 <teste_v_antecessores@@Base+0x14c>
   115a4:	ldr	r3, [r5]
   115a8:	cmp	r3, #3
   115ac:	moveq	r4, #0
   115b0:	beq	115c0 <teste_v_antecessores@@Base+0xc4>
   115b4:	ldr	r0, [pc, #260]	; 116c0 <teste_v_antecessores@@Base+0x1c4>
   115b8:	bl	10ad4 <printf@plt>
   115bc:	mov	r4, #1
   115c0:	mov	r1, #0
   115c4:	mov	r0, r5
   115c8:	bl	10d34 <_f@@Base>
   115cc:	cmp	r0, #0
   115d0:	beq	115e8 <teste_v_antecessores@@Base+0xec>
   115d4:	mov	r1, #3
   115d8:	mov	r0, r5
   115dc:	bl	10d34 <_f@@Base>
   115e0:	cmp	r0, #0
   115e4:	bne	11660 <teste_v_antecessores@@Base+0x164>
   115e8:	ldr	r0, [pc, #212]	; 116c4 <teste_v_antecessores@@Base+0x1c8>
   115ec:	bl	10ad4 <printf@plt>
   115f0:	add	r4, r4, #1
   115f4:	mov	r0, r5
   115f8:	bl	11f44 <vetor_apaga@@Base>
   115fc:	mov	r1, #7
   11600:	mov	r0, r6
   11604:	bl	11d6c <v_antecessores@@Base>
   11608:	subs	r5, r0, #0
   1160c:	beq	11678 <teste_v_antecessores@@Base+0x17c>
   11610:	ldr	r3, [r5]
   11614:	cmp	r3, #0
   11618:	bne	116a0 <teste_v_antecessores@@Base+0x1a4>
   1161c:	mov	r0, r5
   11620:	bl	11f44 <vetor_apaga@@Base>
   11624:	mov	r0, r6
   11628:	bl	11a90 <grafo_apaga@@Base>
   1162c:	cmp	r4, #0
   11630:	beq	116b0 <teste_v_antecessores@@Base+0x1b4>
   11634:	mov	r0, #10
   11638:	bl	10b34 <putchar@plt>
   1163c:	mov	r0, r4
   11640:	add	sp, sp, #80	; 0x50
   11644:	pop	{r4, r5, r6, pc}
   11648:	ldr	r0, [pc, #120]	; 116c8 <teste_v_antecessores@@Base+0x1cc>
   1164c:	bl	10ad4 <printf@plt>
   11650:	mov	r0, #10
   11654:	bl	10b34 <putchar@plt>
   11658:	mov	r4, #1
   1165c:	b	1163c <teste_v_antecessores@@Base+0x140>
   11660:	mov	r1, #7
   11664:	mov	r0, r5
   11668:	bl	10d34 <_f@@Base>
   1166c:	cmp	r0, #0
   11670:	bne	115f4 <teste_v_antecessores@@Base+0xf8>
   11674:	b	115e8 <teste_v_antecessores@@Base+0xec>
   11678:	ldr	r0, [pc, #76]	; 116cc <teste_v_antecessores@@Base+0x1d0>
   1167c:	bl	10ad4 <printf@plt>
   11680:	adds	r4, r4, #1
   11684:	bne	11694 <teste_v_antecessores@@Base+0x198>
   11688:	ldr	r0, [pc, #64]	; 116d0 <teste_v_antecessores@@Base+0x1d4>
   1168c:	bl	10af8 <puts@plt>
   11690:	b	1163c <teste_v_antecessores@@Base+0x140>
   11694:	mov	r0, #10
   11698:	bl	10b34 <putchar@plt>
   1169c:	b	1163c <teste_v_antecessores@@Base+0x140>
   116a0:	ldr	r0, [pc, #44]	; 116d4 <teste_v_antecessores@@Base+0x1d8>
   116a4:	bl	10ad4 <printf@plt>
   116a8:	add	r4, r4, #1
   116ac:	b	1161c <teste_v_antecessores@@Base+0x120>
   116b0:	ldr	r0, [pc, #24]	; 116d0 <teste_v_antecessores@@Base+0x1d4>
   116b4:	bl	10af8 <puts@plt>
   116b8:	b	1163c <teste_v_antecessores@@Base+0x140>
   116bc:	andeq	r2, r1, ip, lsl #15
   116c0:	ldrdeq	r2, [r1], -r0
   116c4:	andeq	r2, r1, r0, lsl #16
   116c8:	andeq	r2, r1, r0, lsr #15
   116cc:	andeq	r2, r1, r0, lsr r8
   116d0:	andeq	r2, r1, r8, asr r3
   116d4:	andeq	r2, r1, r0, ror r8

000116d8 <teste_v_grau@@Base>:
   116d8:	push	{r4, r5, lr}
   116dc:	sub	sp, sp, #84	; 0x54
   116e0:	mov	ip, #1
   116e4:	str	ip, [sp, #76]	; 0x4c
   116e8:	mov	r0, #0
   116ec:	str	r0, [sp, #72]	; 0x48
   116f0:	mov	r2, #3
   116f4:	str	r2, [sp, #68]	; 0x44
   116f8:	mov	r3, #6
   116fc:	str	r3, [sp, #64]	; 0x40
   11700:	str	r3, [sp, #60]	; 0x3c
   11704:	mov	r1, #7
   11708:	str	r1, [sp, #56]	; 0x38
   1170c:	str	ip, [sp, #52]	; 0x34
   11710:	str	ip, [sp, #48]	; 0x30
   11714:	str	r3, [sp, #44]	; 0x2c
   11718:	mov	r3, #4
   1171c:	str	r3, [sp, #40]	; 0x28
   11720:	str	r0, [sp, #36]	; 0x24
   11724:	str	r3, [sp, #32]
   11728:	str	r3, [sp, #28]
   1172c:	mov	r3, #5
   11730:	str	r3, [sp, #24]
   11734:	str	r3, [sp, #20]
   11738:	str	r1, [sp, #16]
   1173c:	mov	r3, #2
   11740:	str	r3, [sp, #12]
   11744:	str	r0, [sp, #8]
   11748:	str	r3, [sp, #4]
   1174c:	str	r1, [sp]
   11750:	mov	r1, #22
   11754:	mov	r0, #8
   11758:	bl	10c74 <_g@@Base>
   1175c:	mov	r5, r0
   11760:	ldr	r0, [pc, #148]	; 117fc <teste_v_grau@@Base+0x124>
   11764:	bl	10ad4 <printf@plt>
   11768:	mvn	r1, #3
   1176c:	mov	r0, r5
   11770:	bl	11e20 <v_grau@@Base>
   11774:	cmn	r0, #1
   11778:	moveq	r4, #0
   1177c:	beq	1178c <teste_v_grau@@Base+0xb4>
   11780:	ldr	r0, [pc, #120]	; 11800 <teste_v_grau@@Base+0x128>
   11784:	bl	10ad4 <printf@plt>
   11788:	mov	r4, #1
   1178c:	mov	r1, #7
   11790:	mov	r0, r5
   11794:	bl	11e20 <v_grau@@Base>
   11798:	cmp	r0, #3
   1179c:	beq	117ac <teste_v_grau@@Base+0xd4>
   117a0:	ldr	r0, [pc, #92]	; 11804 <teste_v_grau@@Base+0x12c>
   117a4:	bl	10ad4 <printf@plt>
   117a8:	add	r4, r4, #1
   117ac:	mov	r1, #5
   117b0:	mov	r0, r5
   117b4:	bl	11e20 <v_grau@@Base>
   117b8:	cmp	r0, #2
   117bc:	beq	117cc <teste_v_grau@@Base+0xf4>
   117c0:	ldr	r0, [pc, #64]	; 11808 <teste_v_grau@@Base+0x130>
   117c4:	bl	10ad4 <printf@plt>
   117c8:	add	r4, r4, #1
   117cc:	mov	r0, r5
   117d0:	bl	11a90 <grafo_apaga@@Base>
   117d4:	cmp	r4, #0
   117d8:	beq	117f0 <teste_v_grau@@Base+0x118>
   117dc:	mov	r0, #10
   117e0:	bl	10b34 <putchar@plt>
   117e4:	mov	r0, r4
   117e8:	add	sp, sp, #84	; 0x54
   117ec:	pop	{r4, r5, pc}
   117f0:	ldr	r0, [pc, #20]	; 1180c <teste_v_grau@@Base+0x134>
   117f4:	bl	10af8 <puts@plt>
   117f8:	b	117e4 <teste_v_grau@@Base+0x10c>
   117fc:	andeq	r2, r1, r0, lsr #17
   11800:	andeq	r2, r1, ip, lsr #17
   11804:	ldrdeq	r2, [r1], -ip
   11808:	andeq	r2, r1, ip, lsl #18
   1180c:	andeq	r2, r1, r8, asr r3

00011810 <teste_v_celebridade@@Base>:
   11810:	push	{r4, r5, lr}
   11814:	sub	sp, sp, #116	; 0x74
   11818:	mov	r3, #2
   1181c:	str	r3, [sp, #108]	; 0x6c
   11820:	mov	r5, #5
   11824:	str	r5, [sp, #104]	; 0x68
   11828:	str	r3, [sp, #100]	; 0x64
   1182c:	mov	r1, #4
   11830:	str	r1, [sp, #96]	; 0x60
   11834:	str	r3, [sp, #92]	; 0x5c
   11838:	mov	r0, #6
   1183c:	str	r0, [sp, #88]	; 0x58
   11840:	str	r3, [sp, #84]	; 0x54
   11844:	mov	ip, #1
   11848:	str	ip, [sp, #80]	; 0x50
   1184c:	str	ip, [sp, #76]	; 0x4c
   11850:	mov	lr, #0
   11854:	str	lr, [sp, #72]	; 0x48
   11858:	mov	r2, #3
   1185c:	str	r2, [sp, #68]	; 0x44
   11860:	str	r0, [sp, #64]	; 0x40
   11864:	str	r0, [sp, #60]	; 0x3c
   11868:	mov	r4, #7
   1186c:	str	r4, [sp, #56]	; 0x38
   11870:	str	ip, [sp, #52]	; 0x34
   11874:	str	ip, [sp, #48]	; 0x30
   11878:	str	r0, [sp, #44]	; 0x2c
   1187c:	str	r1, [sp, #40]	; 0x28
   11880:	str	lr, [sp, #36]	; 0x24
   11884:	str	r1, [sp, #32]
   11888:	str	r1, [sp, #28]
   1188c:	str	r5, [sp, #24]
   11890:	str	r5, [sp, #20]
   11894:	str	r4, [sp, #16]
   11898:	str	r3, [sp, #12]
   1189c:	str	lr, [sp, #8]
   118a0:	str	r3, [sp, #4]
   118a4:	str	r4, [sp]
   118a8:	mov	r1, #30
   118ac:	mov	r0, #8
   118b0:	bl	10c74 <_g@@Base>
   118b4:	mov	r5, r0
   118b8:	ldr	r0, [pc, #152]	; 11958 <teste_v_celebridade@@Base+0x148>
   118bc:	bl	10ad4 <printf@plt>
   118c0:	mov	r1, r4
   118c4:	mov	r0, r5
   118c8:	bl	11e84 <v_celebridade@@Base>
   118cc:	subs	r4, r0, #0
   118d0:	bne	11910 <teste_v_celebridade@@Base+0x100>
   118d4:	mov	r1, #2
   118d8:	mov	r0, r5
   118dc:	bl	11e84 <v_celebridade@@Base>
   118e0:	cmp	r0, #1
   118e4:	beq	1193c <teste_v_celebridade@@Base+0x12c>
   118e8:	ldr	r0, [pc, #108]	; 1195c <teste_v_celebridade@@Base+0x14c>
   118ec:	bl	10ad4 <printf@plt>
   118f0:	add	r4, r4, #1
   118f4:	mov	r0, r5
   118f8:	bl	11a90 <grafo_apaga@@Base>
   118fc:	mov	r0, #10
   11900:	bl	10b34 <putchar@plt>
   11904:	mov	r0, r4
   11908:	add	sp, sp, #116	; 0x74
   1190c:	pop	{r4, r5, pc}
   11910:	ldr	r0, [pc, #72]	; 11960 <teste_v_celebridade@@Base+0x150>
   11914:	bl	10ad4 <printf@plt>
   11918:	mov	r1, #2
   1191c:	mov	r0, r5
   11920:	bl	11e84 <v_celebridade@@Base>
   11924:	mov	r4, r0
   11928:	cmp	r0, #1
   1192c:	bne	11950 <teste_v_celebridade@@Base+0x140>
   11930:	mov	r0, r5
   11934:	bl	11a90 <grafo_apaga@@Base>
   11938:	b	118fc <teste_v_celebridade@@Base+0xec>
   1193c:	mov	r0, r5
   11940:	bl	11a90 <grafo_apaga@@Base>
   11944:	ldr	r0, [pc, #24]	; 11964 <teste_v_celebridade@@Base+0x154>
   11948:	bl	10af8 <puts@plt>
   1194c:	b	11904 <teste_v_celebridade@@Base+0xf4>
   11950:	mov	r4, #1
   11954:	b	118e8 <teste_v_celebridade@@Base+0xd8>
   11958:	andeq	r2, r1, ip, lsr r9
   1195c:	andeq	r2, r1, r8, lsl #19
   11960:	andeq	r2, r1, r0, asr r9
   11964:	andeq	r2, r1, r8, asr r3

00011968 <main@@Base>:
   11968:	push	{r4, lr}
   1196c:	mov	r3, #0
   11970:	mov	r2, #2
   11974:	mov	r1, r3
   11978:	ldr	r0, [pc, #124]	; 119fc <main@@Base+0x94>
   1197c:	ldr	r0, [r0]
   11980:	bl	10b28 <setvbuf@plt>
   11984:	mov	r3, #0
   11988:	mov	r2, #2
   1198c:	mov	r1, r3
   11990:	ldr	r0, [pc, #104]	; 11a00 <main@@Base+0x98>
   11994:	ldr	r0, [r0]
   11998:	bl	10b28 <setvbuf@plt>
   1199c:	bl	10d98 <teste_grafo_novo@@Base>
   119a0:	mov	r4, r0
   119a4:	bl	10e70 <teste_grafo_aresta@@Base>
   119a8:	add	r4, r4, r0
   119ac:	bl	10fdc <teste_grafo_adiciona@@Base>
   119b0:	add	r4, r4, r0
   119b4:	bl	111b0 <teste_grafo_remove@@Base>
   119b8:	add	r4, r4, r0
   119bc:	bl	11324 <teste_v_sucessores@@Base>
   119c0:	add	r4, r4, r0
   119c4:	bl	114fc <teste_v_antecessores@@Base>
   119c8:	add	r4, r4, r0
   119cc:	bl	116d8 <teste_v_grau@@Base>
   119d0:	add	r4, r4, r0
   119d4:	bl	11810 <teste_v_celebridade@@Base>
   119d8:	adds	r1, r4, r0
   119dc:	beq	119f0 <main@@Base+0x88>
   119e0:	ldr	r0, [pc, #28]	; 11a04 <main@@Base+0x9c>
   119e4:	bl	10ad4 <printf@plt>
   119e8:	mov	r0, #0
   119ec:	pop	{r4, pc}
   119f0:	ldr	r0, [pc, #16]	; 11a08 <main@@Base+0xa0>
   119f4:	bl	10af8 <puts@plt>
   119f8:	b	119e8 <main@@Base+0x80>
   119fc:	andeq	r3, r2, ip, asr #32
   11a00:	andeq	r3, r2, r8, asr #32
   11a04:	ldrdeq	r2, [r1], -r4
   11a08:			; <UNDEFINED> instruction: 0x000129bc

00011a0c <cria_elem@@Base>:
   11a0c:	push	{r4, lr}
   11a10:	mov	r4, r0
   11a14:	mov	r0, #8
   11a18:	bl	10b04 <malloc@plt>
   11a1c:	cmp	r0, #0
   11a20:	strne	r4, [r0]
   11a24:	movne	r3, #0
   11a28:	strne	r3, [r0, #4]
   11a2c:	pop	{r4, pc}

00011a30 <grafo_novo@@Base>:
   11a30:	push	{r4, r5, r6, lr}
   11a34:	subs	r5, r0, #0
   11a38:	ble	11a88 <grafo_novo@@Base+0x58>
   11a3c:	mov	r0, #8
   11a40:	bl	10b04 <malloc@plt>
   11a44:	mov	r4, r0
   11a48:	str	r5, [r0]
   11a4c:	lsl	r0, r5, #3
   11a50:	bl	10b04 <malloc@plt>
   11a54:	str	r0, [r4, #4]
   11a58:	mov	r3, #0
   11a5c:	mov	r1, r3
   11a60:	ldr	r2, [r4, #4]
   11a64:	str	r1, [r2, r3, lsl #3]
   11a68:	ldr	r2, [r4, #4]
   11a6c:	add	r2, r2, r3, lsl #3
   11a70:	str	r1, [r2, #4]
   11a74:	add	r3, r3, #1
   11a78:	cmp	r5, r3
   11a7c:	bne	11a60 <grafo_novo@@Base+0x30>
   11a80:	mov	r0, r4
   11a84:	pop	{r4, r5, r6, pc}
   11a88:	mov	r4, #0
   11a8c:	b	11a80 <grafo_novo@@Base+0x50>

00011a90 <grafo_apaga@@Base>:
   11a90:	push	{r4, r5, r6, lr}
   11a94:	subs	r6, r0, #0
   11a98:	popeq	{r4, r5, r6, pc}
   11a9c:	ldr	r3, [r6]
   11aa0:	cmp	r3, #0
   11aa4:	ble	11ae4 <grafo_apaga@@Base+0x54>
   11aa8:	mov	r5, #0
   11aac:	ldr	r3, [r6, #4]
   11ab0:	add	r3, r3, r5, lsl #3
   11ab4:	ldr	r0, [r3, #4]
   11ab8:	cmp	r0, #0
   11abc:	beq	11ad4 <grafo_apaga@@Base+0x44>
   11ac0:	ldr	r4, [r0, #4]
   11ac4:	bl	10ae0 <free@plt>
   11ac8:	mov	r0, r4
   11acc:	cmp	r4, #0
   11ad0:	bne	11ac0 <grafo_apaga@@Base+0x30>
   11ad4:	add	r5, r5, #1
   11ad8:	ldr	r3, [r6]
   11adc:	cmp	r3, r5
   11ae0:	bgt	11aac <grafo_apaga@@Base+0x1c>
   11ae4:	ldr	r0, [r6, #4]
   11ae8:	bl	10ae0 <free@plt>
   11aec:	mov	r0, r6
   11af0:	bl	10ae0 <free@plt>
   11af4:	pop	{r4, r5, r6, pc}

00011af8 <grafo_aresta@@Base>:
   11af8:	cmp	r0, #0
   11afc:	beq	11b5c <grafo_aresta@@Base+0x64>
   11b00:	ldr	r3, [r0]
   11b04:	cmp	r3, r1
   11b08:	blt	11b64 <grafo_aresta@@Base+0x6c>
   11b0c:	cmp	r3, r2
   11b10:	blt	11b6c <grafo_aresta@@Base+0x74>
   11b14:	ldr	r3, [r0, #4]
   11b18:	add	r1, r3, r1, lsl #3
   11b1c:	ldr	r3, [r1, #4]
   11b20:	cmp	r3, #0
   11b24:	beq	11b74 <grafo_aresta@@Base+0x7c>
   11b28:	ldr	r1, [r3]
   11b2c:	cmp	r2, r1
   11b30:	beq	11b7c <grafo_aresta@@Base+0x84>
   11b34:	ldr	r3, [r3, #4]
   11b38:	cmp	r3, #0
   11b3c:	beq	11b54 <grafo_aresta@@Base+0x5c>
   11b40:	ldr	r1, [r3]
   11b44:	cmp	r2, r1
   11b48:	bne	11b34 <grafo_aresta@@Base+0x3c>
   11b4c:	mov	r0, #1
   11b50:	bx	lr
   11b54:	mov	r0, #0
   11b58:	bx	lr
   11b5c:	mvn	r0, #0
   11b60:	bx	lr
   11b64:	mvn	r0, #0
   11b68:	bx	lr
   11b6c:	mov	r0, #0
   11b70:	bx	lr
   11b74:	mov	r0, #0
   11b78:	bx	lr
   11b7c:	mov	r0, #1
   11b80:	bx	lr

00011b84 <grafo_adiciona@@Base>:
   11b84:	push	{r4, r5, r6, r7, r8, lr}
   11b88:	subs	r5, r0, #0
   11b8c:	beq	11bfc <grafo_adiciona@@Base+0x78>
   11b90:	ldr	r3, [r5]
   11b94:	cmp	r3, r1
   11b98:	cmpge	r3, r2
   11b9c:	blt	11c04 <grafo_adiciona@@Base+0x80>
   11ba0:	mov	r6, r2
   11ba4:	mov	r4, r1
   11ba8:	mov	r0, r5
   11bac:	bl	11af8 <grafo_aresta@@Base>
   11bb0:	cmp	r0, #1
   11bb4:	beq	11c0c <grafo_adiciona@@Base+0x88>
   11bb8:	lsl	r4, r4, #3
   11bbc:	ldr	r7, [r5, #4]
   11bc0:	add	r7, r7, r4
   11bc4:	ldr	r8, [r7, #4]
   11bc8:	mov	r0, r6
   11bcc:	bl	11a0c <cria_elem@@Base>
   11bd0:	str	r0, [r7, #4]
   11bd4:	ldr	r1, [r5, #4]
   11bd8:	add	r4, r1, r4
   11bdc:	ldr	r3, [r4, #4]
   11be0:	str	r8, [r3, #4]
   11be4:	ldr	r2, [r5, #4]
   11be8:	ldr	r3, [r2]
   11bec:	add	r3, r3, #1
   11bf0:	str	r3, [r2]
   11bf4:	mov	r0, #1
   11bf8:	pop	{r4, r5, r6, r7, r8, pc}
   11bfc:	mvn	r0, #0
   11c00:	pop	{r4, r5, r6, r7, r8, pc}
   11c04:	mvn	r0, #0
   11c08:	pop	{r4, r5, r6, r7, r8, pc}
   11c0c:	mov	r0, #0
   11c10:	pop	{r4, r5, r6, r7, r8, pc}

00011c14 <grafo_remove@@Base>:
   11c14:	push	{r4, lr}
   11c18:	subs	lr, r0, #0
   11c1c:	beq	11cdc <grafo_remove@@Base+0xc8>
   11c20:	cmp	r1, r2
   11c24:	movge	r3, r1
   11c28:	movlt	r3, r2
   11c2c:	ldr	ip, [lr]
   11c30:	cmp	ip, r3
   11c34:	blt	11ce4 <grafo_remove@@Base+0xd0>
   11c38:	ldr	r3, [lr, #4]
   11c3c:	add	r1, r3, r1, lsl #3
   11c40:	ldr	ip, [r1, #4]
   11c44:	cmp	ip, #0
   11c48:	beq	11cec <grafo_remove@@Base+0xd8>
   11c4c:	ldr	r3, [ip]
   11c50:	cmp	r2, r3
   11c54:	beq	11c8c <grafo_remove@@Base+0x78>
   11c58:	ldr	r0, [ip, #4]
   11c5c:	cmp	r0, #0
   11c60:	beq	11cd8 <grafo_remove@@Base+0xc4>
   11c64:	ldr	r3, [r0]
   11c68:	cmp	r3, r2
   11c6c:	movne	r3, #0
   11c70:	moveq	r3, #1
   11c74:	cmp	ip, #0
   11c78:	moveq	r3, #0
   11c7c:	cmp	r3, #0
   11c80:	bne	11cb4 <grafo_remove@@Base+0xa0>
   11c84:	mov	ip, r0
   11c88:	b	11c58 <grafo_remove@@Base+0x44>
   11c8c:	ldr	r3, [ip, #4]
   11c90:	str	r3, [r1, #4]
   11c94:	ldr	r2, [lr, #4]
   11c98:	ldr	r3, [r2]
   11c9c:	sub	r3, r3, #1
   11ca0:	str	r3, [r2]
   11ca4:	mov	r0, ip
   11ca8:	bl	10ae0 <free@plt>
   11cac:	mov	r0, #1
   11cb0:	pop	{r4, pc}
   11cb4:	ldr	r3, [r0, #4]
   11cb8:	str	r3, [ip, #4]
   11cbc:	ldr	r2, [lr, #4]
   11cc0:	ldr	r3, [r2]
   11cc4:	sub	r3, r3, #1
   11cc8:	str	r3, [r2]
   11ccc:	bl	10ae0 <free@plt>
   11cd0:	mov	r0, #1
   11cd4:	pop	{r4, pc}
   11cd8:	pop	{r4, pc}
   11cdc:	mvn	r0, #0
   11ce0:	pop	{r4, pc}
   11ce4:	mvn	r0, #0
   11ce8:	pop	{r4, pc}
   11cec:	mov	r0, #0
   11cf0:	pop	{r4, pc}

00011cf4 <v_sucessores@@Base>:
   11cf4:	push	{r4, r5, r6, lr}
   11cf8:	subs	r5, r0, #0
   11cfc:	beq	11d5c <v_sucessores@@Base+0x68>
   11d00:	ldr	r3, [r5]
   11d04:	cmp	r1, #0
   11d08:	cmpge	r3, r1
   11d0c:	ble	11d64 <v_sucessores@@Base+0x70>
   11d10:	mov	r4, r1
   11d14:	bl	11f20 <vetor_novo@@Base>
   11d18:	mov	r6, r0
   11d1c:	ldr	r1, [r5, #4]
   11d20:	add	r1, r1, r4, lsl #3
   11d24:	ldr	r4, [r1, #4]
   11d28:	cmp	r4, #0
   11d2c:	beq	11d54 <v_sucessores@@Base+0x60>
   11d30:	mov	r5, #0
   11d34:	mov	r2, r5
   11d38:	ldr	r1, [r4]
   11d3c:	mov	r0, r6
   11d40:	bl	11ff0 <vetor_insere@@Base>
   11d44:	add	r5, r5, #1
   11d48:	ldr	r4, [r4, #4]
   11d4c:	cmp	r4, #0
   11d50:	bne	11d34 <v_sucessores@@Base+0x40>
   11d54:	mov	r0, r6
   11d58:	pop	{r4, r5, r6, pc}
   11d5c:	mov	r6, #0
   11d60:	b	11d54 <v_sucessores@@Base+0x60>
   11d64:	mov	r6, #0
   11d68:	b	11d54 <v_sucessores@@Base+0x60>

00011d6c <v_antecessores@@Base>:
   11d6c:	push	{r4, r5, r6, r7, r8, lr}
   11d70:	subs	r6, r0, #0
   11d74:	beq	11e0c <v_antecessores@@Base+0xa0>
   11d78:	ldr	r3, [r6]
   11d7c:	cmp	r1, #0
   11d80:	cmpge	r3, r1
   11d84:	ble	11e14 <v_antecessores@@Base+0xa8>
   11d88:	mov	r4, r1
   11d8c:	bl	11f20 <vetor_novo@@Base>
   11d90:	mov	r8, r0
   11d94:	ldr	r3, [r6]
   11d98:	cmp	r3, #0
   11d9c:	ble	11e18 <v_antecessores@@Base+0xac>
   11da0:	mov	r7, #0
   11da4:	mov	r5, r7
   11da8:	b	11dd0 <v_antecessores@@Base+0x64>
   11dac:	mov	r2, r7
   11db0:	mov	r1, r5
   11db4:	mov	r0, r8
   11db8:	bl	11ff0 <vetor_insere@@Base>
   11dbc:	add	r7, r7, #1
   11dc0:	add	r5, r5, #1
   11dc4:	ldr	r3, [r6]
   11dc8:	cmp	r3, r5
   11dcc:	ble	11e18 <v_antecessores@@Base+0xac>
   11dd0:	ldr	r3, [r6, #4]
   11dd4:	add	r3, r3, r5, lsl #3
   11dd8:	ldr	r3, [r3, #4]
   11ddc:	cmp	r3, #0
   11de0:	beq	11dc0 <v_antecessores@@Base+0x54>
   11de4:	ldr	r2, [r3]
   11de8:	cmp	r4, r2
   11dec:	beq	11dac <v_antecessores@@Base+0x40>
   11df0:	ldr	r3, [r3, #4]
   11df4:	cmp	r3, #0
   11df8:	beq	11dc0 <v_antecessores@@Base+0x54>
   11dfc:	ldr	r2, [r3]
   11e00:	cmp	r4, r2
   11e04:	bne	11df0 <v_antecessores@@Base+0x84>
   11e08:	b	11dac <v_antecessores@@Base+0x40>
   11e0c:	mov	r8, #0
   11e10:	b	11e18 <v_antecessores@@Base+0xac>
   11e14:	mov	r8, #0
   11e18:	mov	r0, r8
   11e1c:	pop	{r4, r5, r6, r7, r8, pc}

00011e20 <v_grau@@Base>:
   11e20:	push	{r4, r5, r6, lr}
   11e24:	subs	r5, r1, #0
   11e28:	blt	11e7c <v_grau@@Base+0x5c>
   11e2c:	mov	r4, r0
   11e30:	mov	r1, r5
   11e34:	bl	11d6c <v_antecessores@@Base>
   11e38:	mov	r6, r0
   11e3c:	mov	r1, r5
   11e40:	mov	r0, r4
   11e44:	bl	11cf4 <v_sucessores@@Base>
   11e48:	mov	r5, r0
   11e4c:	mov	r0, r6
   11e50:	bl	11fa4 <vetor_tamanho@@Base>
   11e54:	mov	r4, r0
   11e58:	mov	r0, r5
   11e5c:	bl	11fa4 <vetor_tamanho@@Base>
   11e60:	add	r4, r4, r0
   11e64:	mov	r0, r6
   11e68:	bl	11f44 <vetor_apaga@@Base>
   11e6c:	mov	r0, r5
   11e70:	bl	11f44 <vetor_apaga@@Base>
   11e74:	mov	r0, r4
   11e78:	pop	{r4, r5, r6, pc}
   11e7c:	mvn	r4, #0
   11e80:	b	11e74 <v_grau@@Base+0x54>

00011e84 <v_celebridade@@Base>:
   11e84:	cmp	r0, #0
   11e88:	beq	11f10 <v_celebridade@@Base+0x8c>
   11e8c:	push	{r4, lr}
   11e90:	ldr	lr, [r0, #4]
   11e94:	ldr	ip, [lr, r1, lsl #3]
   11e98:	cmp	ip, #0
   11e9c:	bne	11f18 <v_celebridade@@Base+0x94>
   11ea0:	ldr	r4, [r0]
   11ea4:	cmp	r4, #0
   11ea8:	ble	11efc <v_celebridade@@Base+0x78>
   11eac:	mov	r0, lr
   11eb0:	add	lr, lr, r4, lsl #3
   11eb4:	b	11ec8 <v_celebridade@@Base+0x44>
   11eb8:	add	ip, ip, #1
   11ebc:	add	r0, r0, #8
   11ec0:	cmp	r0, lr
   11ec4:	beq	11efc <v_celebridade@@Base+0x78>
   11ec8:	ldr	r3, [r0, #4]
   11ecc:	cmp	r3, #0
   11ed0:	beq	11ebc <v_celebridade@@Base+0x38>
   11ed4:	ldr	r2, [r3]
   11ed8:	cmp	r1, r2
   11edc:	beq	11eb8 <v_celebridade@@Base+0x34>
   11ee0:	ldr	r3, [r3, #4]
   11ee4:	cmp	r3, #0
   11ee8:	beq	11ebc <v_celebridade@@Base+0x38>
   11eec:	ldr	r2, [r3]
   11ef0:	cmp	r1, r2
   11ef4:	bne	11ee0 <v_celebridade@@Base+0x5c>
   11ef8:	b	11eb8 <v_celebridade@@Base+0x34>
   11efc:	add	r0, ip, #1
   11f00:	cmp	r0, r4
   11f04:	movne	r0, #0
   11f08:	moveq	r0, #1
   11f0c:	pop	{r4, pc}
   11f10:	mvn	r0, #0
   11f14:	bx	lr
   11f18:	mov	r0, #0
   11f1c:	pop	{r4, pc}

00011f20 <vetor_novo@@Base>:
   11f20:	push	{r4, lr}
   11f24:	mov	r0, #12
   11f28:	bl	10b04 <malloc@plt>
   11f2c:	cmp	r0, #0
   11f30:	movne	r3, #0
   11f34:	strne	r3, [r0]
   11f38:	strne	r3, [r0, #4]
   11f3c:	strne	r3, [r0, #8]
   11f40:	pop	{r4, pc}

00011f44 <vetor_apaga@@Base>:
   11f44:	push	{r4, lr}
   11f48:	subs	r4, r0, #0
   11f4c:	popeq	{r4, pc}
   11f50:	ldr	r0, [r4, #8]
   11f54:	bl	10ae0 <free@plt>
   11f58:	mov	r0, r4
   11f5c:	bl	10ae0 <free@plt>
   11f60:	pop	{r4, pc}

00011f64 <vetor_atribui@@Base>:
   11f64:	mov	r3, r0
   11f68:	clz	r0, r0
   11f6c:	lsr	r0, r0, #5
   11f70:	orrs	r0, r0, r1, lsr #31
   11f74:	bne	11f94 <vetor_atribui@@Base+0x30>
   11f78:	ldr	r0, [r3]
   11f7c:	cmp	r1, r0
   11f80:	bge	11f9c <vetor_atribui@@Base+0x38>
   11f84:	ldr	r3, [r3, #8]
   11f88:	str	r2, [r3, r1, lsl #2]
   11f8c:	mov	r0, r1
   11f90:	bx	lr
   11f94:	mvn	r0, #0
   11f98:	bx	lr
   11f9c:	mvn	r0, #0
   11fa0:	bx	lr

00011fa4 <vetor_tamanho@@Base>:
   11fa4:	cmp	r0, #0
   11fa8:	ldrne	r0, [r0]
   11fac:	mvneq	r0, #0
   11fb0:	bx	lr

00011fb4 <vetor_elemento@@Base>:
   11fb4:	mov	r3, r0
   11fb8:	clz	r0, r0
   11fbc:	lsr	r0, r0, #5
   11fc0:	orrs	r2, r0, r1, lsr #31
   11fc4:	bne	11fe0 <vetor_elemento@@Base+0x2c>
   11fc8:	ldr	r2, [r3]
   11fcc:	cmp	r1, r2
   11fd0:	bge	11fe8 <vetor_elemento@@Base+0x34>
   11fd4:	ldr	r3, [r3, #8]
   11fd8:	ldr	r0, [r3, r1, lsl #2]
   11fdc:	bx	lr
   11fe0:	mov	r0, #-2147483648	; 0x80000000
   11fe4:	bx	lr
   11fe8:	mov	r0, #-2147483648	; 0x80000000
   11fec:	bx	lr

00011ff0 <vetor_insere@@Base>:
   11ff0:	push	{r4, r5, r6, lr}
   11ff4:	mov	r5, r0
   11ff8:	cmn	r2, #1
   11ffc:	movge	r3, #0
   12000:	movlt	r3, #1
   12004:	cmp	r0, #0
   12008:	movne	r0, r3
   1200c:	orreq	r0, r3, #1
   12010:	cmp	r0, #0
   12014:	bne	120c4 <vetor_insere@@Base+0xd4>
   12018:	mov	r6, r1
   1201c:	mov	r4, r2
   12020:	ldr	r3, [r5]
   12024:	cmp	r2, r3
   12028:	bgt	120cc <vetor_insere@@Base+0xdc>
   1202c:	cmn	r2, #1
   12030:	moveq	r4, r3
   12034:	ldr	r2, [r5, #4]
   12038:	cmp	r3, r2
   1203c:	beq	12090 <vetor_insere@@Base+0xa0>
   12040:	ldr	r3, [r5]
   12044:	sub	r2, r3, #1
   12048:	cmp	r4, r2
   1204c:	bgt	12074 <vetor_insere@@Base+0x84>
   12050:	lsl	r3, r3, #2
   12054:	ldr	r1, [r5, #8]
   12058:	add	r0, r1, r3
   1205c:	ldr	r0, [r0, #-4]
   12060:	str	r0, [r1, r3]
   12064:	sub	r2, r2, #1
   12068:	sub	r3, r3, #4
   1206c:	cmp	r4, r2
   12070:	ble	12054 <vetor_insere@@Base+0x64>
   12074:	ldr	r3, [r5, #8]
   12078:	str	r6, [r3, r4, lsl #2]
   1207c:	ldr	r3, [r5]
   12080:	add	r3, r3, #1
   12084:	str	r3, [r5]
   12088:	mov	r0, r4
   1208c:	pop	{r4, r5, r6, pc}
   12090:	cmp	r3, #0
   12094:	moveq	r3, #1
   12098:	lslne	r3, r3, #1
   1209c:	str	r3, [r5, #4]
   120a0:	ldr	r1, [r5, #4]
   120a4:	lsl	r1, r1, #2
   120a8:	ldr	r0, [r5, #8]
   120ac:	bl	10aec <realloc@plt>
   120b0:	str	r0, [r5, #8]
   120b4:	cmp	r0, #0
   120b8:	bne	12040 <vetor_insere@@Base+0x50>
   120bc:	mvn	r0, #0
   120c0:	pop	{r4, r5, r6, pc}
   120c4:	mvn	r0, #0
   120c8:	pop	{r4, r5, r6, pc}
   120cc:	mvn	r0, #0
   120d0:	pop	{r4, r5, r6, pc}

000120d4 <vetor_remove@@Base>:
   120d4:	mov	ip, r0
   120d8:	clz	r0, r0
   120dc:	lsr	r0, r0, #5
   120e0:	orrs	r3, r0, r1, lsr #31
   120e4:	bne	1213c <vetor_remove@@Base+0x68>
   120e8:	ldr	r0, [ip]
   120ec:	cmp	r1, r0
   120f0:	bge	12144 <vetor_remove@@Base+0x70>
   120f4:	add	r3, r1, #1
   120f8:	cmp	r0, r3
   120fc:	ble	1214c <vetor_remove@@Base+0x78>
   12100:	push	{lr}		; (str lr, [sp, #-4]!)
   12104:	lsl	r1, r1, #2
   12108:	ldr	r0, [ip, #8]
   1210c:	add	r2, r1, #4
   12110:	ldr	lr, [r0, r2]
   12114:	str	lr, [r0, r1]
   12118:	add	r3, r3, #1
   1211c:	ldr	r0, [ip]
   12120:	mov	r1, r2
   12124:	cmp	r0, r3
   12128:	bgt	12108 <vetor_remove@@Base+0x34>
   1212c:	sub	r0, r0, #1
   12130:	str	r0, [ip]
   12134:	mov	r0, #0
   12138:	pop	{pc}		; (ldr pc, [sp], #4)
   1213c:	mvn	r0, #0
   12140:	bx	lr
   12144:	mvn	r0, #0
   12148:	bx	lr
   1214c:	sub	r0, r0, #1
   12150:	str	r0, [ip]
   12154:	mov	r0, #0
   12158:	bx	lr

0001215c <vetor_pesquisa@@Base>:
   1215c:	cmp	r0, #0
   12160:	beq	121ac <vetor_pesquisa@@Base+0x50>
   12164:	ldr	ip, [r0]
   12168:	cmp	ip, #0
   1216c:	ble	121b4 <vetor_pesquisa@@Base+0x58>
   12170:	ldr	r3, [r0, #8]
   12174:	ldr	r2, [r3]
   12178:	cmp	r1, r2
   1217c:	beq	121bc <vetor_pesquisa@@Base+0x60>
   12180:	add	r3, r3, #4
   12184:	mov	r0, #0
   12188:	add	r0, r0, #1
   1218c:	cmp	r0, ip
   12190:	beq	121a4 <vetor_pesquisa@@Base+0x48>
   12194:	ldr	r2, [r3], #4
   12198:	cmp	r2, r1
   1219c:	bne	12188 <vetor_pesquisa@@Base+0x2c>
   121a0:	bx	lr
   121a4:	mvn	r0, #0
   121a8:	bx	lr
   121ac:	mvn	r0, #0
   121b0:	bx	lr
   121b4:	mvn	r0, #0
   121b8:	bx	lr
   121bc:	mov	r0, #0
   121c0:	bx	lr

000121c4 <vetor_ordena@@Base>:
   121c4:	cmp	r0, #0
   121c8:	beq	12268 <vetor_ordena@@Base+0xa4>
   121cc:	ldr	r3, [r0]
   121d0:	cmp	r3, #1
   121d4:	ble	12270 <vetor_ordena@@Base+0xac>
   121d8:	push	{r4, r5, lr}
   121dc:	mov	r5, #4
   121e0:	mov	r4, #1
   121e4:	b	12208 <vetor_ordena@@Base+0x44>
   121e8:	mov	r1, r4
   121ec:	ldr	r3, [r0, #8]
   121f0:	str	lr, [r3, r1, lsl #2]
   121f4:	add	r4, r4, #1
   121f8:	add	r5, r5, #4
   121fc:	ldr	r3, [r0]
   12200:	cmp	r3, r4
   12204:	ble	12260 <vetor_ordena@@Base+0x9c>
   12208:	ldr	r2, [r0, #8]
   1220c:	ldr	lr, [r2, r5]
   12210:	cmp	r4, #0
   12214:	ble	121e8 <vetor_ordena@@Base+0x24>
   12218:	add	r3, r2, r5
   1221c:	ldr	ip, [r3, #-4]
   12220:	cmp	lr, ip
   12224:	bge	12258 <vetor_ordena@@Base+0x94>
   12228:	mov	r3, r5
   1222c:	mov	r1, r4
   12230:	str	ip, [r2, r3]
   12234:	subs	r1, r1, #1
   12238:	beq	121ec <vetor_ordena@@Base+0x28>
   1223c:	ldr	r2, [r0, #8]
   12240:	add	ip, r2, r3
   12244:	ldr	ip, [ip, #-8]
   12248:	sub	r3, r3, #4
   1224c:	cmp	lr, ip
   12250:	blt	12230 <vetor_ordena@@Base+0x6c>
   12254:	b	121ec <vetor_ordena@@Base+0x28>
   12258:	mov	r1, r4
   1225c:	b	121ec <vetor_ordena@@Base+0x28>
   12260:	mov	r0, #0
   12264:	pop	{r4, r5, pc}
   12268:	mvn	r0, #0
   1226c:	bx	lr
   12270:	mov	r0, #0
   12274:	bx	lr

00012278 <__libc_csu_init@@Base>:
   12278:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1227c:	mov	r7, r0
   12280:	ldr	r6, [pc, #72]	; 122d0 <__libc_csu_init@@Base+0x58>
   12284:	ldr	r5, [pc, #72]	; 122d4 <__libc_csu_init@@Base+0x5c>
   12288:	add	r6, pc, r6
   1228c:	add	r5, pc, r5
   12290:	sub	r6, r6, r5
   12294:	mov	r8, r1
   12298:	mov	r9, r2
   1229c:	bl	10aa8 <calloc@plt-0x20>
   122a0:	asrs	r6, r6, #2
   122a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   122a8:	mov	r4, #0
   122ac:	add	r4, r4, #1
   122b0:	ldr	r3, [r5], #4
   122b4:	mov	r2, r9
   122b8:	mov	r1, r8
   122bc:	mov	r0, r7
   122c0:	blx	r3
   122c4:	cmp	r6, r4
   122c8:	bne	122ac <__libc_csu_init@@Base+0x34>
   122cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122d0:	andeq	r0, r1, r0, lsl #25
   122d4:	andeq	r0, r1, r8, ror ip

000122d8 <__libc_csu_fini@@Base>:
   122d8:	bx	lr

Disassembly of section .fini:

000122dc <.fini>:
   122dc:	push	{r3, lr}
   122e0:	pop	{r3, pc}
