
../repos/coreutils/src/unlink:     file format elf32-littlearm


Disassembly of section .init:

00010afc <.init>:
   10afc:	push	{r3, lr}
   10b00:	bl	10ef8 <abort@plt+0x1d8>
   10b04:	pop	{r3, pc}

Disassembly of section .plt:

00010b08 <calloc@plt-0x14>:
   10b08:	push	{lr}		; (str lr, [sp, #-4]!)
   10b0c:	ldr	lr, [pc, #4]	; 10b18 <calloc@plt-0x4>
   10b10:	add	lr, pc, lr
   10b14:	ldr	pc, [lr, #8]!
   10b18:	andeq	r7, r1, r8, ror #9

00010b1c <calloc@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #94208	; 0x17000
   10b24:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b28 <fputs_unlocked@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #94208	; 0x17000
   10b30:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b34 <raise@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #94208	; 0x17000
   10b3c:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b40 <strcmp@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #94208	; 0x17000
   10b48:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b4c <fflush@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #94208	; 0x17000
   10b54:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b58 <free@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #94208	; 0x17000
   10b60:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b64 <_exit@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #94208	; 0x17000
   10b6c:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b70 <memcpy@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #94208	; 0x17000
   10b78:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b7c <mbsinit@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #94208	; 0x17000
   10b84:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b88 <memcmp@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #94208	; 0x17000
   10b90:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b94 <fputc_unlocked@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #94208	; 0x17000
   10b9c:	ldr	pc, [ip, #1176]!	; 0x498

00010ba0 <dcgettext@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #94208	; 0x17000
   10ba8:	ldr	pc, [ip, #1168]!	; 0x490

00010bac <unlink@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #94208	; 0x17000
   10bb4:	ldr	pc, [ip, #1160]!	; 0x488

00010bb8 <realloc@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #94208	; 0x17000
   10bc0:	ldr	pc, [ip, #1152]!	; 0x480

00010bc4 <textdomain@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #94208	; 0x17000
   10bcc:	ldr	pc, [ip, #1144]!	; 0x478

00010bd0 <iswprint@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #94208	; 0x17000
   10bd8:	ldr	pc, [ip, #1136]!	; 0x470

00010bdc <fwrite@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #94208	; 0x17000
   10be4:	ldr	pc, [ip, #1128]!	; 0x468

00010be8 <lseek64@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #94208	; 0x17000
   10bf0:	ldr	pc, [ip, #1120]!	; 0x460

00010bf4 <__ctype_get_mb_cur_max@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #94208	; 0x17000
   10bfc:	ldr	pc, [ip, #1112]!	; 0x458

00010c00 <__fpending@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #94208	; 0x17000
   10c08:	ldr	pc, [ip, #1104]!	; 0x450

00010c0c <mbrtowc@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #94208	; 0x17000
   10c14:	ldr	pc, [ip, #1096]!	; 0x448

00010c18 <error@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #94208	; 0x17000
   10c20:	ldr	pc, [ip, #1088]!	; 0x440

00010c24 <malloc@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #94208	; 0x17000
   10c2c:	ldr	pc, [ip, #1080]!	; 0x438

00010c30 <__libc_start_main@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #94208	; 0x17000
   10c38:	ldr	pc, [ip, #1072]!	; 0x430

00010c3c <__freading@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #94208	; 0x17000
   10c44:	ldr	pc, [ip, #1064]!	; 0x428

00010c48 <__gmon_start__@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #94208	; 0x17000
   10c50:	ldr	pc, [ip, #1056]!	; 0x420

00010c54 <getopt_long@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #94208	; 0x17000
   10c5c:	ldr	pc, [ip, #1048]!	; 0x418

00010c60 <__ctype_b_loc@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #94208	; 0x17000
   10c68:	ldr	pc, [ip, #1040]!	; 0x410

00010c6c <exit@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #94208	; 0x17000
   10c74:	ldr	pc, [ip, #1032]!	; 0x408

00010c78 <strlen@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #94208	; 0x17000
   10c80:	ldr	pc, [ip, #1024]!	; 0x400

00010c84 <__errno_location@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #94208	; 0x17000
   10c8c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c90 <__cxa_atexit@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #94208	; 0x17000
   10c98:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c9c <memset@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #94208	; 0x17000
   10ca4:	ldr	pc, [ip, #1000]!	; 0x3e8

00010ca8 <__printf_chk@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #94208	; 0x17000
   10cb0:	ldr	pc, [ip, #992]!	; 0x3e0

00010cb4 <fileno@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #94208	; 0x17000
   10cbc:	ldr	pc, [ip, #984]!	; 0x3d8

00010cc0 <__fprintf_chk@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #94208	; 0x17000
   10cc8:	ldr	pc, [ip, #976]!	; 0x3d0

00010ccc <fclose@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #94208	; 0x17000
   10cd4:	ldr	pc, [ip, #968]!	; 0x3c8

00010cd8 <fseeko64@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #94208	; 0x17000
   10ce0:	ldr	pc, [ip, #960]!	; 0x3c0

00010ce4 <setlocale@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #94208	; 0x17000
   10cec:	ldr	pc, [ip, #952]!	; 0x3b8

00010cf0 <strrchr@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #94208	; 0x17000
   10cf8:	ldr	pc, [ip, #944]!	; 0x3b0

00010cfc <nl_langinfo@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #94208	; 0x17000
   10d04:	ldr	pc, [ip, #936]!	; 0x3a8

00010d08 <bindtextdomain@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #94208	; 0x17000
   10d10:	ldr	pc, [ip, #928]!	; 0x3a0

00010d14 <strncmp@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #94208	; 0x17000
   10d1c:	ldr	pc, [ip, #920]!	; 0x398

00010d20 <abort@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #94208	; 0x17000
   10d28:	ldr	pc, [ip, #912]!	; 0x390

Disassembly of section .text:

00010d2c <.text>:
   10d2c:	push	{r4, r5, r6, r7, r8, lr}
   10d30:	mov	r5, r0
   10d34:	sub	sp, sp, #24
   10d38:	ldr	r0, [r1]
   10d3c:	mov	r4, r1
   10d40:	bl	11544 <abort@plt+0x824>
   10d44:	ldr	r1, [pc, #316]	; 10e88 <abort@plt+0x168>
   10d48:	mov	r0, #6
   10d4c:	bl	10ce4 <setlocale@plt>
   10d50:	ldr	r1, [pc, #308]	; 10e8c <abort@plt+0x16c>
   10d54:	ldr	r0, [pc, #308]	; 10e90 <abort@plt+0x170>
   10d58:	bl	10d08 <bindtextdomain@plt>
   10d5c:	ldr	r0, [pc, #300]	; 10e90 <abort@plt+0x170>
   10d60:	bl	10bc4 <textdomain@plt>
   10d64:	ldr	r0, [pc, #296]	; 10e94 <abort@plt+0x174>
   10d68:	bl	17020 <abort@plt+0x6300>
   10d6c:	ldr	r1, [pc, #292]	; 10e98 <abort@plt+0x178>
   10d70:	ldr	r2, [pc, #292]	; 10e9c <abort@plt+0x17c>
   10d74:	ldr	r3, [pc, #292]	; 10ea0 <abort@plt+0x180>
   10d78:	ldr	r1, [r1]
   10d7c:	ldr	r8, [pc, #288]	; 10ea4 <abort@plt+0x184>
   10d80:	mov	r6, #0
   10d84:	mov	r7, #1
   10d88:	str	r1, [sp]
   10d8c:	str	r2, [sp, #12]
   10d90:	str	r3, [sp, #8]
   10d94:	mov	r1, r4
   10d98:	ldr	r3, [pc, #264]	; 10ea8 <abort@plt+0x188>
   10d9c:	mov	r0, r5
   10da0:	str	r6, [sp, #16]
   10da4:	str	r7, [sp, #4]
   10da8:	ldr	r2, [pc, #252]	; 10eac <abort@plt+0x18c>
   10dac:	bl	1146c <abort@plt+0x74c>
   10db0:	ldr	r3, [r8]
   10db4:	cmp	r5, r3
   10db8:	ble	10de0 <abort@plt+0xc0>
   10dbc:	add	r2, r3, #1
   10dc0:	cmp	r5, r2
   10dc4:	bgt	10e48 <abort@plt+0x128>
   10dc8:	ldr	r0, [r4, r3, lsl #2]
   10dcc:	bl	10bac <unlink@plt>
   10dd0:	cmp	r0, #0
   10dd4:	bne	10e08 <abort@plt+0xe8>
   10dd8:	add	sp, sp, #24
   10ddc:	pop	{r4, r5, r6, r7, r8, pc}
   10de0:	mov	r2, #5
   10de4:	ldr	r1, [pc, #196]	; 10eb0 <abort@plt+0x190>
   10de8:	mov	r0, r6
   10dec:	bl	10ba0 <dcgettext@plt>
   10df0:	mov	r1, r6
   10df4:	mov	r2, r0
   10df8:	mov	r0, r6
   10dfc:	bl	10c18 <error@plt>
   10e00:	mov	r0, r7
   10e04:	bl	10fe4 <abort@plt+0x2c4>
   10e08:	bl	10c84 <__errno_location@plt>
   10e0c:	mov	r2, #5
   10e10:	ldr	r1, [pc, #156]	; 10eb4 <abort@plt+0x194>
   10e14:	ldr	r5, [r0]
   10e18:	mov	r0, r6
   10e1c:	bl	10ba0 <dcgettext@plt>
   10e20:	ldr	r3, [r8]
   10e24:	ldr	r1, [r4, r3, lsl #2]
   10e28:	mov	r6, r0
   10e2c:	mov	r0, #4
   10e30:	bl	13aa0 <abort@plt+0x2d80>
   10e34:	mov	r2, r6
   10e38:	mov	r1, r5
   10e3c:	mov	r3, r0
   10e40:	mov	r0, r7
   10e44:	bl	10c18 <error@plt>
   10e48:	mov	r2, #5
   10e4c:	ldr	r1, [pc, #100]	; 10eb8 <abort@plt+0x198>
   10e50:	mov	r0, r6
   10e54:	bl	10ba0 <dcgettext@plt>
   10e58:	ldr	r3, [r8]
   10e5c:	add	r3, r3, #1
   10e60:	mov	r5, r0
   10e64:	ldr	r0, [r4, r3, lsl #2]
   10e68:	bl	15410 <abort@plt+0x46f0>
   10e6c:	mov	r2, r5
   10e70:	mov	r1, r6
   10e74:	mov	r3, r0
   10e78:	mov	r0, r6
   10e7c:	bl	10c18 <error@plt>
   10e80:	mov	r0, r7
   10e84:	bl	10fe4 <abort@plt+0x2c4>
   10e88:	andeq	r7, r1, r8, lsl #2
   10e8c:	andeq	r7, r1, r0, ror #4
   10e90:			; <UNDEFINED> instruction: 0x000171b8
   10e94:	ldrdeq	r1, [r1], -r0
   10e98:	andeq	r8, r2, r8, asr #1
   10e9c:	andeq	r7, r1, r8, ror r2
   10ea0:	andeq	r0, r1, r4, ror #31
   10ea4:	andeq	r8, r2, r8, lsl r1
   10ea8:			; <UNDEFINED> instruction: 0x000171b4
   10eac:	andeq	r7, r1, ip, ror r0
   10eb0:	andeq	r7, r1, r8, lsl #5
   10eb4:	andeq	r7, r1, ip, lsr #5
   10eb8:	muleq	r1, r8, r2
   10ebc:	mov	fp, #0
   10ec0:	mov	lr, #0
   10ec4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec8:	mov	r2, sp
   10ecc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ed0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ed4:	ldr	ip, [pc, #16]	; 10eec <abort@plt+0x1cc>
   10ed8:	push	{ip}		; (str ip, [sp, #-4]!)
   10edc:	ldr	r0, [pc, #12]	; 10ef0 <abort@plt+0x1d0>
   10ee0:	ldr	r3, [pc, #12]	; 10ef4 <abort@plt+0x1d4>
   10ee4:	bl	10c30 <__libc_start_main@plt>
   10ee8:	bl	10d20 <abort@plt>
   10eec:	andeq	r7, r1, ip, lsl r0
   10ef0:	andeq	r0, r1, ip, lsr #26
   10ef4:			; <UNDEFINED> instruction: 0x00016fbc
   10ef8:	ldr	r3, [pc, #20]	; 10f14 <abort@plt+0x1f4>
   10efc:	ldr	r2, [pc, #20]	; 10f18 <abort@plt+0x1f8>
   10f00:	add	r3, pc, r3
   10f04:	ldr	r2, [r3, r2]
   10f08:	cmp	r2, #0
   10f0c:	bxeq	lr
   10f10:	b	10c48 <__gmon_start__@plt>
   10f14:	strdeq	r7, [r1], -r8
   10f18:	strheq	r0, [r0], -ip
   10f1c:	ldr	r3, [pc, #28]	; 10f40 <abort@plt+0x220>
   10f20:	ldr	r0, [pc, #28]	; 10f44 <abort@plt+0x224>
   10f24:	sub	r3, r3, r0
   10f28:	cmp	r3, #6
   10f2c:	bxls	lr
   10f30:	ldr	r3, [pc, #16]	; 10f48 <abort@plt+0x228>
   10f34:	cmp	r3, #0
   10f38:	bxeq	lr
   10f3c:	bx	r3
   10f40:	andeq	r8, r2, r3, lsl r1
   10f44:	andeq	r8, r2, r0, lsl r1
   10f48:	andeq	r0, r0, r0
   10f4c:	ldr	r1, [pc, #36]	; 10f78 <abort@plt+0x258>
   10f50:	ldr	r0, [pc, #36]	; 10f7c <abort@plt+0x25c>
   10f54:	sub	r1, r1, r0
   10f58:	asr	r1, r1, #2
   10f5c:	add	r1, r1, r1, lsr #31
   10f60:	asrs	r1, r1, #1
   10f64:	bxeq	lr
   10f68:	ldr	r3, [pc, #16]	; 10f80 <abort@plt+0x260>
   10f6c:	cmp	r3, #0
   10f70:	bxeq	lr
   10f74:	bx	r3
   10f78:	andeq	r8, r2, r0, lsl r1
   10f7c:	andeq	r8, r2, r0, lsl r1
   10f80:	andeq	r0, r0, r0
   10f84:	push	{r4, lr}
   10f88:	ldr	r4, [pc, #24]	; 10fa8 <abort@plt+0x288>
   10f8c:	ldrb	r3, [r4]
   10f90:	cmp	r3, #0
   10f94:	popne	{r4, pc}
   10f98:	bl	10f1c <abort@plt+0x1fc>
   10f9c:	mov	r3, #1
   10fa0:	strb	r3, [r4]
   10fa4:	pop	{r4, pc}
   10fa8:	andeq	r8, r2, ip, lsr #2
   10fac:	ldr	r0, [pc, #40]	; 10fdc <abort@plt+0x2bc>
   10fb0:	ldr	r3, [r0]
   10fb4:	cmp	r3, #0
   10fb8:	bne	10fc0 <abort@plt+0x2a0>
   10fbc:	b	10f4c <abort@plt+0x22c>
   10fc0:	ldr	r3, [pc, #24]	; 10fe0 <abort@plt+0x2c0>
   10fc4:	cmp	r3, #0
   10fc8:	beq	10fbc <abort@plt+0x29c>
   10fcc:	push	{r4, lr}
   10fd0:	blx	r3
   10fd4:	pop	{r4, lr}
   10fd8:	b	10f4c <abort@plt+0x22c>
   10fdc:	andeq	r7, r2, r4, lsl pc
   10fe0:	andeq	r0, r0, r0
   10fe4:	subs	r6, r0, #0
   10fe8:	push	{r7, lr}
   10fec:	sub	sp, sp, #56	; 0x38
   10ff0:	beq	1102c <abort@plt+0x30c>
   10ff4:	ldr	r3, [pc, #616]	; 11264 <abort@plt+0x544>
   10ff8:	mov	r2, #5
   10ffc:	ldr	r1, [pc, #612]	; 11268 <abort@plt+0x548>
   11000:	mov	r0, #0
   11004:	ldr	r4, [r3]
   11008:	bl	10ba0 <dcgettext@plt>
   1100c:	ldr	r3, [pc, #600]	; 1126c <abort@plt+0x54c>
   11010:	mov	r1, #1
   11014:	ldr	r3, [r3]
   11018:	mov	r2, r0
   1101c:	mov	r0, r4
   11020:	bl	10cc0 <__fprintf_chk@plt>
   11024:	mov	r0, r6
   11028:	bl	10c6c <exit@plt>
   1102c:	mov	r2, #5
   11030:	ldr	r1, [pc, #568]	; 11270 <abort@plt+0x550>
   11034:	bl	10ba0 <dcgettext@plt>
   11038:	ldr	r3, [pc, #556]	; 1126c <abort@plt+0x54c>
   1103c:	ldr	r7, [pc, #560]	; 11274 <abort@plt+0x554>
   11040:	ldr	r4, [pc, #560]	; 11278 <abort@plt+0x558>
   11044:	ldr	r3, [r3]
   11048:	mov	r2, r3
   1104c:	mov	r1, r0
   11050:	mov	r0, #1
   11054:	bl	10ca8 <__printf_chk@plt>
   11058:	mov	r2, #5
   1105c:	ldr	r1, [pc, #536]	; 1127c <abort@plt+0x55c>
   11060:	mov	r0, r6
   11064:	bl	10ba0 <dcgettext@plt>
   11068:	ldr	r1, [r7]
   1106c:	bl	10b28 <fputs_unlocked@plt>
   11070:	mov	r2, #5
   11074:	ldr	r1, [pc, #516]	; 11280 <abort@plt+0x560>
   11078:	mov	r0, r6
   1107c:	bl	10ba0 <dcgettext@plt>
   11080:	ldr	r1, [r7]
   11084:	bl	10b28 <fputs_unlocked@plt>
   11088:	mov	r2, #5
   1108c:	ldr	r1, [pc, #496]	; 11284 <abort@plt+0x564>
   11090:	mov	r0, r6
   11094:	bl	10ba0 <dcgettext@plt>
   11098:	ldr	r1, [r7]
   1109c:	bl	10b28 <fputs_unlocked@plt>
   110a0:	ldm	r4!, {r0, r1, r2, r3}
   110a4:	mov	lr, sp
   110a8:	stmia	lr!, {r0, r1, r2, r3}
   110ac:	ldm	r4!, {r0, r1, r2, r3}
   110b0:	ldr	ip, [sp]
   110b4:	stmia	lr!, {r0, r1, r2, r3}
   110b8:	cmp	ip, #0
   110bc:	ldm	r4!, {r0, r1, r2, r3}
   110c0:	stmia	lr!, {r0, r1, r2, r3}
   110c4:	ldm	r4, {r0, r1}
   110c8:	moveq	r4, sp
   110cc:	stm	lr, {r0, r1}
   110d0:	beq	11100 <abort@plt+0x3e0>
   110d4:	ldr	r5, [pc, #428]	; 11288 <abort@plt+0x568>
   110d8:	mov	r4, sp
   110dc:	b	110ec <abort@plt+0x3cc>
   110e0:	ldr	ip, [r4, #8]!
   110e4:	cmp	ip, #0
   110e8:	beq	11100 <abort@plt+0x3e0>
   110ec:	mov	r1, ip
   110f0:	mov	r0, r5
   110f4:	bl	10b40 <strcmp@plt>
   110f8:	cmp	r0, #0
   110fc:	bne	110e0 <abort@plt+0x3c0>
   11100:	ldr	r4, [r4, #4]
   11104:	mov	r2, #5
   11108:	cmp	r4, #0
   1110c:	ldr	r1, [pc, #376]	; 1128c <abort@plt+0x56c>
   11110:	beq	111b8 <abort@plt+0x498>
   11114:	mov	r0, #0
   11118:	bl	10ba0 <dcgettext@plt>
   1111c:	ldr	r3, [pc, #364]	; 11290 <abort@plt+0x570>
   11120:	ldr	r2, [pc, #364]	; 11294 <abort@plt+0x574>
   11124:	mov	r1, r0
   11128:	mov	r0, #1
   1112c:	bl	10ca8 <__printf_chk@plt>
   11130:	mov	r1, #0
   11134:	mov	r0, #5
   11138:	bl	10ce4 <setlocale@plt>
   1113c:	cmp	r0, #0
   11140:	ldreq	r5, [pc, #320]	; 11288 <abort@plt+0x568>
   11144:	beq	11160 <abort@plt+0x440>
   11148:	mov	r2, #3
   1114c:	ldr	r1, [pc, #324]	; 11298 <abort@plt+0x578>
   11150:	bl	10d14 <strncmp@plt>
   11154:	ldr	r5, [pc, #300]	; 11288 <abort@plt+0x568>
   11158:	cmp	r0, #0
   1115c:	bne	11248 <abort@plt+0x528>
   11160:	mov	r2, #5
   11164:	ldr	r1, [pc, #304]	; 1129c <abort@plt+0x57c>
   11168:	mov	r0, #0
   1116c:	bl	10ba0 <dcgettext@plt>
   11170:	ldr	r3, [pc, #272]	; 11288 <abort@plt+0x568>
   11174:	ldr	r2, [pc, #276]	; 11290 <abort@plt+0x570>
   11178:	mov	r1, r0
   1117c:	mov	r0, #1
   11180:	bl	10ca8 <__printf_chk@plt>
   11184:	mov	r2, #5
   11188:	ldr	r1, [pc, #272]	; 112a0 <abort@plt+0x580>
   1118c:	mov	r0, #0
   11190:	bl	10ba0 <dcgettext@plt>
   11194:	ldr	r2, [pc, #264]	; 112a4 <abort@plt+0x584>
   11198:	cmp	r4, r5
   1119c:	ldr	r3, [pc, #260]	; 112a8 <abort@plt+0x588>
   111a0:	movne	r3, r2
   111a4:	mov	r1, r0
   111a8:	mov	r2, r4
   111ac:	mov	r0, #1
   111b0:	bl	10ca8 <__printf_chk@plt>
   111b4:	b	11024 <abort@plt+0x304>
   111b8:	mov	r0, r4
   111bc:	bl	10ba0 <dcgettext@plt>
   111c0:	ldr	r3, [pc, #200]	; 11290 <abort@plt+0x570>
   111c4:	ldr	r2, [pc, #200]	; 11294 <abort@plt+0x574>
   111c8:	mov	r1, r0
   111cc:	mov	r0, #1
   111d0:	bl	10ca8 <__printf_chk@plt>
   111d4:	mov	r1, r4
   111d8:	mov	r0, #5
   111dc:	bl	10ce4 <setlocale@plt>
   111e0:	cmp	r0, #0
   111e4:	beq	111fc <abort@plt+0x4dc>
   111e8:	mov	r2, #3
   111ec:	ldr	r1, [pc, #164]	; 11298 <abort@plt+0x578>
   111f0:	bl	10d14 <strncmp@plt>
   111f4:	cmp	r0, #0
   111f8:	bne	11240 <abort@plt+0x520>
   111fc:	mov	r2, #5
   11200:	ldr	r1, [pc, #148]	; 1129c <abort@plt+0x57c>
   11204:	mov	r0, #0
   11208:	bl	10ba0 <dcgettext@plt>
   1120c:	ldr	r3, [pc, #116]	; 11288 <abort@plt+0x568>
   11210:	ldr	r2, [pc, #120]	; 11290 <abort@plt+0x570>
   11214:	mov	r4, r3
   11218:	mov	r1, r0
   1121c:	mov	r0, #1
   11220:	bl	10ca8 <__printf_chk@plt>
   11224:	ldr	r1, [pc, #116]	; 112a0 <abort@plt+0x580>
   11228:	mov	r2, #5
   1122c:	mov	r0, #0
   11230:	bl	10ba0 <dcgettext@plt>
   11234:	ldr	r3, [pc, #108]	; 112a8 <abort@plt+0x588>
   11238:	mov	r1, r0
   1123c:	b	111a8 <abort@plt+0x488>
   11240:	ldr	r5, [pc, #64]	; 11288 <abort@plt+0x568>
   11244:	mov	r4, r5
   11248:	mov	r2, #5
   1124c:	ldr	r1, [pc, #88]	; 112ac <abort@plt+0x58c>
   11250:	mov	r0, #0
   11254:	bl	10ba0 <dcgettext@plt>
   11258:	ldr	r1, [r7]
   1125c:	bl	10b28 <fputs_unlocked@plt>
   11260:	b	11160 <abort@plt+0x440>
   11264:	andeq	r8, r2, r0, lsr #2
   11268:	andeq	r7, r1, r4, lsl #1
   1126c:	andeq	r8, r2, r8, lsr r1
   11270:	andeq	r7, r1, ip, lsr #1
   11274:	andeq	r8, r2, r4, lsr #2
   11278:	andeq	r7, r1, r4, asr #32
   1127c:	ldrdeq	r7, [r1], -r0
   11280:	andeq	r7, r1, ip, lsl #2
   11284:	andeq	r7, r1, ip, lsr r1
   11288:	andeq	r7, r1, ip, ror r0
   1128c:	andeq	r7, r1, r4, ror r1
   11290:	andeq	r7, r1, ip, lsl #3
   11294:			; <UNDEFINED> instruction: 0x000171b4
   11298:	andeq	r7, r1, r4, asr #3
   1129c:	andeq	r7, r1, r0, lsl r2
   112a0:	andeq	r7, r1, ip, lsr #4
   112a4:	andeq	r7, r1, r8, lsl #2
   112a8:	andeq	r7, r1, r8, asr #5
   112ac:	andeq	r7, r1, r8, asr #3
   112b0:	ldr	r3, [pc, #4]	; 112bc <abort@plt+0x59c>
   112b4:	str	r0, [r3]
   112b8:	bx	lr
   112bc:	andeq	r8, r2, r0, lsr r1
   112c0:	ldr	r3, [pc, #4]	; 112cc <abort@plt+0x5ac>
   112c4:	strb	r0, [r3, #4]
   112c8:	bx	lr
   112cc:	andeq	r8, r2, r0, lsr r1
   112d0:	ldr	r3, [pc, #192]	; 11398 <abort@plt+0x678>
   112d4:	push	{r4, r5, r6, lr}
   112d8:	sub	sp, sp, #8
   112dc:	ldr	r0, [r3]
   112e0:	bl	16724 <abort@plt+0x5a04>
   112e4:	cmp	r0, #0
   112e8:	beq	1130c <abort@plt+0x5ec>
   112ec:	ldr	r4, [pc, #168]	; 1139c <abort@plt+0x67c>
   112f0:	ldrb	r3, [r4, #4]
   112f4:	cmp	r3, #0
   112f8:	beq	11328 <abort@plt+0x608>
   112fc:	bl	10c84 <__errno_location@plt>
   11300:	ldr	r3, [r0]
   11304:	cmp	r3, #32
   11308:	bne	11328 <abort@plt+0x608>
   1130c:	ldr	r3, [pc, #140]	; 113a0 <abort@plt+0x680>
   11310:	ldr	r0, [r3]
   11314:	bl	16724 <abort@plt+0x5a04>
   11318:	cmp	r0, #0
   1131c:	bne	11370 <abort@plt+0x650>
   11320:	add	sp, sp, #8
   11324:	pop	{r4, r5, r6, pc}
   11328:	mov	r2, #5
   1132c:	ldr	r1, [pc, #112]	; 113a4 <abort@plt+0x684>
   11330:	mov	r0, #0
   11334:	bl	10ba0 <dcgettext@plt>
   11338:	ldr	r4, [r4]
   1133c:	cmp	r4, #0
   11340:	mov	r5, r0
   11344:	beq	1137c <abort@plt+0x65c>
   11348:	bl	10c84 <__errno_location@plt>
   1134c:	ldr	r6, [r0]
   11350:	mov	r0, r4
   11354:	bl	141b0 <abort@plt+0x3490>
   11358:	mov	r1, r6
   1135c:	str	r5, [sp]
   11360:	ldr	r2, [pc, #64]	; 113a8 <abort@plt+0x688>
   11364:	mov	r3, r0
   11368:	mov	r0, #0
   1136c:	bl	10c18 <error@plt>
   11370:	ldr	r3, [pc, #52]	; 113ac <abort@plt+0x68c>
   11374:	ldr	r0, [r3]
   11378:	bl	10b64 <_exit@plt>
   1137c:	bl	10c84 <__errno_location@plt>
   11380:	mov	r3, r5
   11384:	ldr	r2, [pc, #36]	; 113b0 <abort@plt+0x690>
   11388:	ldr	r1, [r0]
   1138c:	mov	r0, r4
   11390:	bl	10c18 <error@plt>
   11394:	b	11370 <abort@plt+0x650>
   11398:	andeq	r8, r2, r4, lsr #2
   1139c:	andeq	r8, r2, r0, lsr r1
   113a0:	andeq	r8, r2, r0, lsr #2
   113a4:	andeq	r7, r1, ip, lsr r3
   113a8:	andeq	r7, r1, r8, asr #6
   113ac:	andeq	r8, r2, ip, asr #1
   113b0:	andeq	r7, r1, ip, asr #6
   113b4:	push	{r4, r5, r6, r7, r8, lr}
   113b8:	cmp	r0, #2
   113bc:	ldr	r4, [pc, #148]	; 11458 <abort@plt+0x738>
   113c0:	mov	r5, #0
   113c4:	sub	sp, sp, #16
   113c8:	ldr	r6, [r4]
   113cc:	str	r5, [r4]
   113d0:	beq	113ec <abort@plt+0x6cc>
   113d4:	ldr	r3, [pc, #128]	; 1145c <abort@plt+0x73c>
   113d8:	mov	r2, #0
   113dc:	str	r6, [r4]
   113e0:	str	r2, [r3]
   113e4:	add	sp, sp, #16
   113e8:	pop	{r4, r5, r6, r7, r8, pc}
   113ec:	mov	r8, r3
   113f0:	mov	r7, r2
   113f4:	str	r5, [sp]
   113f8:	ldr	r3, [pc, #96]	; 11460 <abort@plt+0x740>
   113fc:	ldr	r2, [pc, #96]	; 11464 <abort@plt+0x744>
   11400:	bl	10c54 <getopt_long@plt>
   11404:	cmn	r0, #1
   11408:	beq	113d4 <abort@plt+0x6b4>
   1140c:	cmp	r0, #104	; 0x68
   11410:	beq	11448 <abort@plt+0x728>
   11414:	cmp	r0, #118	; 0x76
   11418:	bne	113d4 <abort@plt+0x6b4>
   1141c:	ldr	r3, [pc, #68]	; 11468 <abort@plt+0x748>
   11420:	add	ip, sp, #48	; 0x30
   11424:	mov	r2, r8
   11428:	ldr	r0, [r3]
   1142c:	mov	r1, r7
   11430:	str	ip, [sp]
   11434:	ldr	r3, [sp, #40]	; 0x28
   11438:	str	ip, [sp, #12]
   1143c:	bl	15968 <abort@plt+0x4c48>
   11440:	mov	r0, r5
   11444:	bl	10c6c <exit@plt>
   11448:	mov	r0, r5
   1144c:	ldr	r3, [sp, #44]	; 0x2c
   11450:	blx	r3
   11454:	b	113d4 <abort@plt+0x6b4>
   11458:	andeq	r8, r2, r8, lsr #2
   1145c:	andeq	r8, r2, r8, lsl r1
   11460:	andeq	r7, r1, r0, asr r3
   11464:	andeq	r7, r1, r0, lsl #7
   11468:	andeq	r8, r2, r4, lsr #2
   1146c:	push	{r4, r5, r6, r7, r8, lr}
   11470:	sub	sp, sp, #16
   11474:	ldr	r5, [pc, #176]	; 1152c <abort@plt+0x80c>
   11478:	ldrb	r8, [sp, #44]	; 0x2c
   1147c:	ldr	r4, [pc, #172]	; 11530 <abort@plt+0x810>
   11480:	ldr	lr, [pc, #172]	; 11534 <abort@plt+0x814>
   11484:	cmp	r8, #0
   11488:	mov	r6, r2
   1148c:	movne	r2, r5
   11490:	mov	r5, #0
   11494:	mov	ip, #1
   11498:	moveq	r2, lr
   1149c:	mov	r7, r3
   114a0:	str	r5, [sp]
   114a4:	ldr	r3, [pc, #140]	; 11538 <abort@plt+0x818>
   114a8:	ldr	r8, [r4]
   114ac:	str	ip, [r4]
   114b0:	bl	10c54 <getopt_long@plt>
   114b4:	cmn	r0, #1
   114b8:	beq	11508 <abort@plt+0x7e8>
   114bc:	cmp	r0, #104	; 0x68
   114c0:	beq	11514 <abort@plt+0x7f4>
   114c4:	cmp	r0, #118	; 0x76
   114c8:	bne	114f8 <abort@plt+0x7d8>
   114cc:	ldr	r3, [pc, #104]	; 1153c <abort@plt+0x81c>
   114d0:	add	ip, sp, #52	; 0x34
   114d4:	mov	r2, r7
   114d8:	ldr	r0, [r3]
   114dc:	mov	r1, r6
   114e0:	str	ip, [sp]
   114e4:	ldr	r3, [sp, #40]	; 0x28
   114e8:	str	ip, [sp, #12]
   114ec:	bl	15968 <abort@plt+0x4c48>
   114f0:	mov	r0, r5
   114f4:	bl	10c6c <exit@plt>
   114f8:	ldr	r3, [pc, #64]	; 11540 <abort@plt+0x820>
   114fc:	ldr	r0, [r3]
   11500:	ldr	r3, [sp, #48]	; 0x30
   11504:	blx	r3
   11508:	str	r8, [r4]
   1150c:	add	sp, sp, #16
   11510:	pop	{r4, r5, r6, r7, r8, pc}
   11514:	mov	r0, r5
   11518:	ldr	r3, [sp, #48]	; 0x30
   1151c:	blx	r3
   11520:	str	r8, [r4]
   11524:	add	sp, sp, #16
   11528:	pop	{r4, r5, r6, r7, r8, pc}
   1152c:	andeq	r7, r1, r8, lsl #2
   11530:	andeq	r8, r2, r8, lsr #2
   11534:	andeq	r7, r1, r0, lsl #7
   11538:	andeq	r7, r1, r0, asr r3
   1153c:	andeq	r8, r2, r4, lsr #2
   11540:	andeq	r8, r2, ip, asr #1
   11544:	push	{r4, r5, r6, lr}
   11548:	subs	r4, r0, #0
   1154c:	beq	115c0 <abort@plt+0x8a0>
   11550:	mov	r1, #47	; 0x2f
   11554:	bl	10cf0 <strrchr@plt>
   11558:	subs	r5, r0, #0
   1155c:	beq	115ac <abort@plt+0x88c>
   11560:	add	r6, r5, #1
   11564:	sub	r3, r6, r4
   11568:	cmp	r3, #6
   1156c:	ble	115ac <abort@plt+0x88c>
   11570:	mov	r2, #7
   11574:	ldr	r1, [pc, #96]	; 115dc <abort@plt+0x8bc>
   11578:	sub	r0, r5, #6
   1157c:	bl	10d14 <strncmp@plt>
   11580:	cmp	r0, #0
   11584:	bne	115ac <abort@plt+0x88c>
   11588:	mov	r2, #3
   1158c:	ldr	r1, [pc, #76]	; 115e0 <abort@plt+0x8c0>
   11590:	mov	r0, r6
   11594:	bl	10d14 <strncmp@plt>
   11598:	cmp	r0, #0
   1159c:	movne	r4, r6
   115a0:	ldreq	r3, [pc, #60]	; 115e4 <abort@plt+0x8c4>
   115a4:	addeq	r4, r5, #4
   115a8:	streq	r4, [r3]
   115ac:	ldr	r2, [pc, #52]	; 115e8 <abort@plt+0x8c8>
   115b0:	ldr	r3, [pc, #52]	; 115ec <abort@plt+0x8cc>
   115b4:	str	r4, [r2]
   115b8:	str	r4, [r3]
   115bc:	pop	{r4, r5, r6, pc}
   115c0:	ldr	r3, [pc, #40]	; 115f0 <abort@plt+0x8d0>
   115c4:	mov	r2, #55	; 0x37
   115c8:	mov	r1, #1
   115cc:	ldr	r3, [r3]
   115d0:	ldr	r0, [pc, #28]	; 115f4 <abort@plt+0x8d4>
   115d4:	bl	10bdc <fwrite@plt>
   115d8:	bl	10d20 <abort@plt>
   115dc:	andeq	r7, r1, ip, asr #7
   115e0:	ldrdeq	r7, [r1], -r4
   115e4:	andeq	r8, r2, r0, lsl r1
   115e8:	andeq	r8, r2, r8, lsr r1
   115ec:	andeq	r8, r2, r4, lsl r1
   115f0:	andeq	r8, r2, r0, lsr #2
   115f4:	muleq	r1, r4, r3
   115f8:	push	{r4, r5, r6, lr}
   115fc:	mov	r4, r0
   11600:	mov	r5, r1
   11604:	bl	16998 <abort@plt+0x5c78>
   11608:	ldrb	r3, [r0]
   1160c:	bic	r3, r3, #32
   11610:	cmp	r3, #85	; 0x55
   11614:	bne	11674 <abort@plt+0x954>
   11618:	ldrb	r3, [r0, #1]
   1161c:	bic	r3, r3, #32
   11620:	cmp	r3, #84	; 0x54
   11624:	bne	116b0 <abort@plt+0x990>
   11628:	ldrb	r3, [r0, #2]
   1162c:	bic	r3, r3, #32
   11630:	cmp	r3, #70	; 0x46
   11634:	bne	116b0 <abort@plt+0x990>
   11638:	ldrb	r3, [r0, #3]
   1163c:	cmp	r3, #45	; 0x2d
   11640:	bne	116b0 <abort@plt+0x990>
   11644:	ldrb	r3, [r0, #4]
   11648:	cmp	r3, #56	; 0x38
   1164c:	bne	116b0 <abort@plt+0x990>
   11650:	ldrb	r3, [r0, #5]
   11654:	cmp	r3, #0
   11658:	bne	116b0 <abort@plt+0x990>
   1165c:	ldrb	r2, [r4]
   11660:	ldr	r3, [pc, #152]	; 11700 <abort@plt+0x9e0>
   11664:	ldr	r0, [pc, #152]	; 11704 <abort@plt+0x9e4>
   11668:	cmp	r2, #96	; 0x60
   1166c:	movne	r0, r3
   11670:	pop	{r4, r5, r6, pc}
   11674:	cmp	r3, #71	; 0x47
   11678:	bne	116b0 <abort@plt+0x990>
   1167c:	ldrb	r3, [r0, #1]
   11680:	bic	r3, r3, #32
   11684:	cmp	r3, #66	; 0x42
   11688:	bne	116b0 <abort@plt+0x990>
   1168c:	ldrb	r3, [r0, #2]
   11690:	cmp	r3, #49	; 0x31
   11694:	bne	116b0 <abort@plt+0x990>
   11698:	ldrb	r3, [r0, #3]
   1169c:	cmp	r3, #56	; 0x38
   116a0:	bne	116b0 <abort@plt+0x990>
   116a4:	ldrb	r3, [r0, #4]
   116a8:	cmp	r3, #48	; 0x30
   116ac:	beq	116c4 <abort@plt+0x9a4>
   116b0:	ldr	r3, [pc, #80]	; 11708 <abort@plt+0x9e8>
   116b4:	cmp	r5, #9
   116b8:	ldr	r0, [pc, #76]	; 1170c <abort@plt+0x9ec>
   116bc:	movne	r0, r3
   116c0:	pop	{r4, r5, r6, pc}
   116c4:	ldrb	r3, [r0, #5]
   116c8:	cmp	r3, #51	; 0x33
   116cc:	bne	116b0 <abort@plt+0x990>
   116d0:	ldrb	r3, [r0, #6]
   116d4:	cmp	r3, #48	; 0x30
   116d8:	bne	116b0 <abort@plt+0x990>
   116dc:	ldrb	r3, [r0, #7]
   116e0:	cmp	r3, #0
   116e4:	bne	116b0 <abort@plt+0x990>
   116e8:	ldrb	r2, [r4]
   116ec:	ldr	r3, [pc, #28]	; 11710 <abort@plt+0x9f0>
   116f0:	ldr	r0, [pc, #28]	; 11714 <abort@plt+0x9f4>
   116f4:	cmp	r2, #96	; 0x60
   116f8:	movne	r0, r3
   116fc:	pop	{r4, r5, r6, pc}
   11700:	andeq	r7, r1, r0, lsr r4
   11704:	andeq	r7, r1, ip, lsr #8
   11708:	andeq	r7, r1, r0, asr #8
   1170c:	andeq	r7, r1, ip, lsr r4
   11710:	andeq	r7, r1, r8, lsr r4
   11714:	andeq	r7, r1, r4, lsr r4
   11718:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1171c:	sub	sp, sp, #140	; 0x8c
   11720:	mov	r9, r1
   11724:	str	r3, [sp, #24]
   11728:	mov	r3, #1
   1172c:	mov	sl, r0
   11730:	str	r2, [sp, #44]	; 0x2c
   11734:	str	r3, [sp, #28]
   11738:	bl	10bf4 <__ctype_get_mb_cur_max@plt>
   1173c:	ldr	r3, [sp, #180]	; 0xb4
   11740:	mov	fp, r9
   11744:	mov	r9, sl
   11748:	lsr	r3, r3, #1
   1174c:	and	r3, r3, #1
   11750:	str	r3, [sp, #40]	; 0x28
   11754:	ldr	r3, [sp, #180]	; 0xb4
   11758:	mov	r2, #0
   1175c:	and	r3, r3, #4
   11760:	str	r3, [sp, #100]	; 0x64
   11764:	ldr	r3, [sp, #180]	; 0xb4
   11768:	str	r2, [sp, #76]	; 0x4c
   1176c:	and	r3, r3, #1
   11770:	str	r3, [sp, #96]	; 0x60
   11774:	str	r2, [sp, #36]	; 0x24
   11778:	str	r2, [sp, #56]	; 0x38
   1177c:	str	r2, [sp, #68]	; 0x44
   11780:	str	r2, [sp, #72]	; 0x48
   11784:	str	r2, [sp, #84]	; 0x54
   11788:	str	r0, [sp, #80]	; 0x50
   1178c:	ldr	r3, [sp, #176]	; 0xb0
   11790:	cmp	r3, #10
   11794:	ldrls	pc, [pc, r3, lsl #2]
   11798:	b	12970 <abort@plt+0x1c50>
   1179c:	andeq	r1, r1, r8, asr #15
   117a0:	andeq	r1, r1, r8, ror #21
   117a4:	andeq	r1, r1, r0, asr #24
   117a8:	andeq	r1, r1, ip, lsl fp
   117ac:	muleq	r1, r4, ip
   117b0:	andeq	r1, r1, r4, ror ip
   117b4:	andeq	r1, r1, ip, lsr fp
   117b8:	andeq	r1, r1, r0, ror #22
   117bc:	andeq	r1, r1, r8, lsl #23
   117c0:	andeq	r1, r1, r8, lsl #23
   117c4:	andeq	r1, r1, r8, lsl #23
   117c8:	mov	r3, #0
   117cc:	ldr	r1, [sp, #56]	; 0x38
   117d0:	ldr	r2, [sp, #176]	; 0xb0
   117d4:	ldr	lr, [sp, #176]	; 0xb0
   117d8:	mov	r8, r3
   117dc:	mov	ip, r3
   117e0:	str	r3, [sp, #40]	; 0x28
   117e4:	mov	r3, r1
   117e8:	cmp	r2, #2
   117ec:	moveq	r3, #0
   117f0:	andne	r3, r3, #1
   117f4:	mov	r0, r3
   117f8:	str	r3, [sp, #92]	; 0x5c
   117fc:	ldr	r3, [sp, #68]	; 0x44
   11800:	sub	lr, lr, #2
   11804:	adds	r2, r3, #0
   11808:	movne	r2, #1
   1180c:	and	r3, r1, ip
   11810:	and	r3, r2, r3
   11814:	clz	lr, lr
   11818:	str	r3, [sp, #88]	; 0x58
   1181c:	lsr	lr, lr, #5
   11820:	mov	r3, ip
   11824:	and	r3, r3, lr
   11828:	mov	sl, #0
   1182c:	and	r0, r2, r0
   11830:	str	r3, [sp, #64]	; 0x40
   11834:	eor	r3, r1, #1
   11838:	str	lr, [sp, #52]	; 0x34
   1183c:	str	r0, [sp, #48]	; 0x30
   11840:	str	r3, [sp, #60]	; 0x3c
   11844:	ldr	r3, [sp, #24]
   11848:	cmn	r3, #1
   1184c:	beq	11d7c <abort@plt+0x105c>
   11850:	subs	r7, r3, sl
   11854:	movne	r7, #1
   11858:	cmp	r7, #0
   1185c:	beq	11d94 <abort@plt+0x1074>
   11860:	ldr	r3, [sp, #48]	; 0x30
   11864:	cmp	r3, #0
   11868:	beq	12100 <abort@plt+0x13e0>
   1186c:	ldr	r2, [sp, #68]	; 0x44
   11870:	ldr	r1, [sp, #24]
   11874:	cmp	r2, #1
   11878:	mov	r3, r2
   1187c:	movls	r3, #0
   11880:	movhi	r3, #1
   11884:	cmn	r1, #1
   11888:	movne	r3, #0
   1188c:	cmp	r3, #0
   11890:	add	r4, sl, r2
   11894:	beq	118a4 <abort@plt+0xb84>
   11898:	ldr	r0, [sp, #44]	; 0x2c
   1189c:	bl	10c78 <strlen@plt>
   118a0:	str	r0, [sp, #24]
   118a4:	ldr	r3, [sp, #24]
   118a8:	cmp	r3, r4
   118ac:	ldr	r3, [sp, #44]	; 0x2c
   118b0:	add	r5, r3, sl
   118b4:	bcc	12108 <abort@plt+0x13e8>
   118b8:	mov	r0, r5
   118bc:	ldr	r2, [sp, #68]	; 0x44
   118c0:	ldr	r1, [sp, #72]	; 0x48
   118c4:	bl	10b88 <memcmp@plt>
   118c8:	cmp	r0, #0
   118cc:	bne	12108 <abort@plt+0x13e8>
   118d0:	ldr	r3, [sp, #40]	; 0x28
   118d4:	cmp	r3, #0
   118d8:	bne	12ac4 <abort@plt+0x1da4>
   118dc:	ldrb	r4, [r5]
   118e0:	cmp	r4, #126	; 0x7e
   118e4:	ldrls	pc, [pc, r4, lsl #2]
   118e8:	b	12a00 <abort@plt+0x1ce0>
   118ec:	andeq	r1, r1, r0, asr #31
   118f0:	andeq	r2, r1, r0, lsl #20
   118f4:	andeq	r2, r1, r0, lsl #20
   118f8:	andeq	r2, r1, r0, lsl #20
   118fc:	andeq	r2, r1, r0, lsl #20
   11900:	andeq	r2, r1, r0, lsl #20
   11904:	andeq	r2, r1, r0, lsl #20
   11908:	andeq	r1, r1, ip, lsr #31
   1190c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11910:	andeq	r1, r1, r4, ror pc
   11914:	andeq	r1, r1, r4, asr pc
   11918:	andeq	r1, r1, r4, lsl #31
   1191c:			; <UNDEFINED> instruction: 0x00011ebc
   11920:	strdeq	r2, [r1], -r0
   11924:	andeq	r2, r1, r0, lsl #20
   11928:	andeq	r2, r1, r0, lsl #20
   1192c:	andeq	r2, r1, r0, lsl #20
   11930:	andeq	r2, r1, r0, lsl #20
   11934:	andeq	r2, r1, r0, lsl #20
   11938:	andeq	r2, r1, r0, lsl #20
   1193c:	andeq	r2, r1, r0, lsl #20
   11940:	andeq	r2, r1, r0, lsl #20
   11944:	andeq	r2, r1, r0, lsl #20
   11948:	andeq	r2, r1, r0, lsl #20
   1194c:	andeq	r2, r1, r0, lsl #20
   11950:	andeq	r2, r1, r0, lsl #20
   11954:	andeq	r2, r1, r0, lsl #20
   11958:	andeq	r2, r1, r0, lsl #20
   1195c:	andeq	r2, r1, r0, lsl #20
   11960:	andeq	r2, r1, r0, lsl #20
   11964:	andeq	r2, r1, r0, lsl #20
   11968:	andeq	r2, r1, r0, lsl #20
   1196c:	andeq	r2, r1, r0, ror #1
   11970:	andeq	r2, r1, r0, asr #1
   11974:	andeq	r2, r1, r0, asr #1
   11978:	andeq	r2, r1, r0, lsr #1
   1197c:	andeq	r2, r1, r0, asr #1
   11980:	andeq	r1, r1, ip, lsr #29
   11984:	andeq	r2, r1, r0, asr #1
   11988:	andeq	r1, r1, r8, lsl #29
   1198c:	andeq	r2, r1, r0, asr #1
   11990:	andeq	r2, r1, r0, asr #1
   11994:	andeq	r2, r1, r0, asr #1
   11998:	andeq	r1, r1, ip, lsr #29
   1199c:	andeq	r1, r1, ip, lsr #29
   119a0:	andeq	r1, r1, ip, lsr #29
   119a4:	andeq	r1, r1, ip, lsr #29
   119a8:	andeq	r1, r1, ip, lsr #29
   119ac:	andeq	r1, r1, ip, lsr #29
   119b0:	andeq	r1, r1, ip, lsr #29
   119b4:	andeq	r1, r1, ip, lsr #29
   119b8:	andeq	r1, r1, ip, lsr #29
   119bc:	andeq	r1, r1, ip, lsr #29
   119c0:	andeq	r1, r1, ip, lsr #29
   119c4:	andeq	r1, r1, ip, lsr #29
   119c8:	andeq	r1, r1, ip, lsr #29
   119cc:	andeq	r1, r1, ip, lsr #29
   119d0:	andeq	r1, r1, ip, lsr #29
   119d4:	andeq	r1, r1, ip, lsr #29
   119d8:	andeq	r2, r1, r0, asr #1
   119dc:	andeq	r2, r1, r0, asr #1
   119e0:	andeq	r2, r1, r0, asr #1
   119e4:	andeq	r2, r1, r0, asr #1
   119e8:	andeq	r1, r1, r8, lsr lr
   119ec:	andeq	r2, r1, r0, lsl #20
   119f0:	andeq	r1, r1, ip, lsr #29
   119f4:	andeq	r1, r1, ip, lsr #29
   119f8:	andeq	r1, r1, ip, lsr #29
   119fc:	andeq	r1, r1, ip, lsr #29
   11a00:	andeq	r1, r1, ip, lsr #29
   11a04:	andeq	r1, r1, ip, lsr #29
   11a08:	andeq	r1, r1, ip, lsr #29
   11a0c:	andeq	r1, r1, ip, lsr #29
   11a10:	andeq	r1, r1, ip, lsr #29
   11a14:	andeq	r1, r1, ip, lsr #29
   11a18:	andeq	r1, r1, ip, lsr #29
   11a1c:	andeq	r1, r1, ip, lsr #29
   11a20:	andeq	r1, r1, ip, lsr #29
   11a24:	andeq	r1, r1, ip, lsr #29
   11a28:	andeq	r1, r1, ip, lsr #29
   11a2c:	andeq	r1, r1, ip, lsr #29
   11a30:	andeq	r1, r1, ip, lsr #29
   11a34:	andeq	r1, r1, ip, lsr #29
   11a38:	andeq	r1, r1, ip, lsr #29
   11a3c:	andeq	r1, r1, ip, lsr #29
   11a40:	andeq	r1, r1, ip, lsr #29
   11a44:	andeq	r1, r1, ip, lsr #29
   11a48:	andeq	r1, r1, ip, lsr #29
   11a4c:	andeq	r1, r1, ip, lsr #29
   11a50:	andeq	r1, r1, ip, lsr #29
   11a54:	andeq	r1, r1, ip, lsr #29
   11a58:	andeq	r2, r1, r0, asr #1
   11a5c:	andeq	r1, r1, r4, lsl #28
   11a60:	andeq	r1, r1, ip, lsr #29
   11a64:	andeq	r2, r1, r0, asr #1
   11a68:	andeq	r1, r1, ip, lsr #29
   11a6c:	andeq	r2, r1, r0, asr #1
   11a70:	andeq	r1, r1, ip, lsr #29
   11a74:	andeq	r1, r1, ip, lsr #29
   11a78:	andeq	r1, r1, ip, lsr #29
   11a7c:	andeq	r1, r1, ip, lsr #29
   11a80:	andeq	r1, r1, ip, lsr #29
   11a84:	andeq	r1, r1, ip, lsr #29
   11a88:	andeq	r1, r1, ip, lsr #29
   11a8c:	andeq	r1, r1, ip, lsr #29
   11a90:	andeq	r1, r1, ip, lsr #29
   11a94:	andeq	r1, r1, ip, lsr #29
   11a98:	andeq	r1, r1, ip, lsr #29
   11a9c:	andeq	r1, r1, ip, lsr #29
   11aa0:	andeq	r1, r1, ip, lsr #29
   11aa4:	andeq	r1, r1, ip, lsr #29
   11aa8:	andeq	r1, r1, ip, lsr #29
   11aac:	andeq	r1, r1, ip, lsr #29
   11ab0:	andeq	r1, r1, ip, lsr #29
   11ab4:	andeq	r1, r1, ip, lsr #29
   11ab8:	andeq	r1, r1, ip, lsr #29
   11abc:	andeq	r1, r1, ip, lsr #29
   11ac0:	andeq	r1, r1, ip, lsr #29
   11ac4:	andeq	r1, r1, ip, lsr #29
   11ac8:	andeq	r1, r1, ip, lsr #29
   11acc:	andeq	r1, r1, ip, lsr #29
   11ad0:	andeq	r1, r1, ip, lsr #29
   11ad4:	andeq	r1, r1, ip, lsr #29
   11ad8:			; <UNDEFINED> instruction: 0x00011cbc
   11adc:	andeq	r2, r1, r0, asr #1
   11ae0:			; <UNDEFINED> instruction: 0x00011cbc
   11ae4:	andeq	r2, r1, r0, lsr #1
   11ae8:	mov	r3, #1
   11aec:	str	r3, [sp, #40]	; 0x28
   11af0:	str	r3, [sp, #68]	; 0x44
   11af4:	mov	r8, #0
   11af8:	ldr	r3, [pc, #4056]	; 12ad8 <abort@plt+0x1db8>
   11afc:	str	r3, [sp, #72]	; 0x48
   11b00:	mov	r3, #2
   11b04:	str	r3, [sp, #176]	; 0xb0
   11b08:	ldr	r1, [sp, #56]	; 0x38
   11b0c:	mov	r2, r3
   11b10:	ldr	ip, [sp, #40]	; 0x28
   11b14:	mov	lr, r3
   11b18:	b	117e4 <abort@plt+0xac4>
   11b1c:	mov	r3, #1
   11b20:	str	r3, [sp, #56]	; 0x38
   11b24:	str	r3, [sp, #68]	; 0x44
   11b28:	str	r3, [sp, #40]	; 0x28
   11b2c:	ldr	r3, [pc, #4004]	; 12ad8 <abort@plt+0x1db8>
   11b30:	mov	r8, #0
   11b34:	str	r3, [sp, #72]	; 0x48
   11b38:	b	11b00 <abort@plt+0xde0>
   11b3c:	mov	r3, #1
   11b40:	str	r3, [sp, #56]	; 0x38
   11b44:	str	r3, [sp, #68]	; 0x44
   11b48:	str	r3, [sp, #40]	; 0x28
   11b4c:	ldr	r3, [pc, #3976]	; 12adc <abort@plt+0x1dbc>
   11b50:	mov	r8, #0
   11b54:	str	r3, [sp, #72]	; 0x48
   11b58:	mov	r3, #5
   11b5c:	b	11b04 <abort@plt+0xde4>
   11b60:	mov	r3, #0
   11b64:	str	r3, [sp, #40]	; 0x28
   11b68:	mov	r3, #1
   11b6c:	str	r3, [sp, #56]	; 0x38
   11b70:	mov	r8, #0
   11b74:	mov	r1, r3
   11b78:	ldr	r2, [sp, #176]	; 0xb0
   11b7c:	ldr	ip, [sp, #40]	; 0x28
   11b80:	ldr	lr, [sp, #176]	; 0xb0
   11b84:	b	117e4 <abort@plt+0xac4>
   11b88:	ldr	r3, [sp, #176]	; 0xb0
   11b8c:	cmp	r3, #10
   11b90:	beq	11bd4 <abort@plt+0xeb4>
   11b94:	mov	r2, #5
   11b98:	ldr	r1, [pc, #3904]	; 12ae0 <abort@plt+0x1dc0>
   11b9c:	mov	r0, #0
   11ba0:	bl	10ba0 <dcgettext@plt>
   11ba4:	ldr	r2, [pc, #3892]	; 12ae0 <abort@plt+0x1dc0>
   11ba8:	cmp	r0, r2
   11bac:	str	r0, [sp, #188]	; 0xbc
   11bb0:	beq	12c6c <abort@plt+0x1f4c>
   11bb4:	mov	r2, #5
   11bb8:	ldr	r1, [pc, #3864]	; 12ad8 <abort@plt+0x1db8>
   11bbc:	mov	r0, #0
   11bc0:	bl	10ba0 <dcgettext@plt>
   11bc4:	ldr	r2, [pc, #3852]	; 12ad8 <abort@plt+0x1db8>
   11bc8:	cmp	r0, r2
   11bcc:	str	r0, [sp, #192]	; 0xc0
   11bd0:	beq	12c5c <abort@plt+0x1f3c>
   11bd4:	ldr	r8, [sp, #40]	; 0x28
   11bd8:	cmp	r8, #0
   11bdc:	movne	r8, #0
   11be0:	bne	11c10 <abort@plt+0xef0>
   11be4:	ldr	r3, [sp, #188]	; 0xbc
   11be8:	ldrb	r3, [r3]
   11bec:	cmp	r3, #0
   11bf0:	beq	11c10 <abort@plt+0xef0>
   11bf4:	ldr	r2, [sp, #188]	; 0xbc
   11bf8:	cmp	fp, r8
   11bfc:	strbhi	r3, [r9, r8]
   11c00:	ldrb	r3, [r2, #1]!
   11c04:	add	r8, r8, #1
   11c08:	cmp	r3, #0
   11c0c:	bne	11bf8 <abort@plt+0xed8>
   11c10:	ldr	r0, [sp, #192]	; 0xc0
   11c14:	bl	10c78 <strlen@plt>
   11c18:	ldr	r3, [sp, #192]	; 0xc0
   11c1c:	ldr	r2, [sp, #176]	; 0xb0
   11c20:	str	r3, [sp, #72]	; 0x48
   11c24:	mov	r3, #1
   11c28:	str	r3, [sp, #56]	; 0x38
   11c2c:	mov	r1, r3
   11c30:	ldr	ip, [sp, #40]	; 0x28
   11c34:	ldr	lr, [sp, #176]	; 0xb0
   11c38:	str	r0, [sp, #68]	; 0x44
   11c3c:	b	117e4 <abort@plt+0xac4>
   11c40:	ldr	r3, [sp, #40]	; 0x28
   11c44:	cmp	r3, #0
   11c48:	beq	128f0 <abort@plt+0x1bd0>
   11c4c:	mov	r3, #1
   11c50:	str	r3, [sp, #68]	; 0x44
   11c54:	ldr	r3, [pc, #3708]	; 12ad8 <abort@plt+0x1db8>
   11c58:	str	r3, [sp, #72]	; 0x48
   11c5c:	mov	r8, #0
   11c60:	ldr	r1, [sp, #56]	; 0x38
   11c64:	ldr	r2, [sp, #176]	; 0xb0
   11c68:	ldr	ip, [sp, #40]	; 0x28
   11c6c:	ldr	lr, [sp, #176]	; 0xb0
   11c70:	b	117e4 <abort@plt+0xac4>
   11c74:	ldr	r3, [sp, #40]	; 0x28
   11c78:	cmp	r3, #0
   11c7c:	beq	12974 <abort@plt+0x1c54>
   11c80:	str	r3, [sp, #56]	; 0x38
   11c84:	mov	r3, #1
   11c88:	str	r3, [sp, #68]	; 0x44
   11c8c:	ldr	r3, [pc, #3656]	; 12adc <abort@plt+0x1dbc>
   11c90:	b	11c58 <abort@plt+0xf38>
   11c94:	ldr	r3, [sp, #40]	; 0x28
   11c98:	cmp	r3, #0
   11c9c:	mov	r3, #1
   11ca0:	streq	r3, [sp, #56]	; 0x38
   11ca4:	beq	128f0 <abort@plt+0x1bd0>
   11ca8:	str	r3, [sp, #68]	; 0x44
   11cac:	ldr	r3, [pc, #3620]	; 12ad8 <abort@plt+0x1db8>
   11cb0:	mov	r8, #0
   11cb4:	str	r3, [sp, #72]	; 0x48
   11cb8:	b	11b00 <abort@plt+0xde0>
   11cbc:	ldr	r3, [sp, #24]
   11cc0:	ldr	r6, [sp, #48]	; 0x30
   11cc4:	cmn	r3, #1
   11cc8:	beq	12324 <abort@plt+0x1604>
   11ccc:	subs	r3, r3, #1
   11cd0:	movne	r3, #1
   11cd4:	cmp	r3, #0
   11cd8:	beq	120a4 <abort@plt+0x1384>
   11cdc:	ldr	r1, [sp, #52]	; 0x34
   11ce0:	mov	r7, r3
   11ce4:	mov	r3, #0
   11ce8:	str	r3, [sp, #32]
   11cec:	ldr	r3, [sp, #60]	; 0x3c
   11cf0:	orr	r2, r1, r3
   11cf4:	ldr	r3, [sp, #40]	; 0x28
   11cf8:	eor	r2, r2, #1
   11cfc:	orr	r2, r3, r2
   11d00:	tst	r2, #255	; 0xff
   11d04:	bne	12628 <abort@plt+0x1908>
   11d08:	cmp	r6, #0
   11d0c:	bne	11ee8 <abort@plt+0x11c8>
   11d10:	ldr	r3, [sp, #36]	; 0x24
   11d14:	add	sl, sl, #1
   11d18:	and	r3, r3, r7
   11d1c:	uxtb	r6, r3
   11d20:	cmp	r6, #0
   11d24:	beq	11d50 <abort@plt+0x1030>
   11d28:	cmp	fp, r8
   11d2c:	movhi	r3, #39	; 0x27
   11d30:	strbhi	r3, [r9, r8]
   11d34:	add	r3, r8, #1
   11d38:	cmp	fp, r3
   11d3c:	movhi	r2, #39	; 0x27
   11d40:	add	r8, r8, #2
   11d44:	strbhi	r2, [r9, r3]
   11d48:	mov	r3, #0
   11d4c:	str	r3, [sp, #36]	; 0x24
   11d50:	ldr	r2, [sp, #32]
   11d54:	cmp	r8, fp
   11d58:	ldr	r3, [sp, #28]
   11d5c:	strbcc	r4, [r9, r8]
   11d60:	cmp	r2, #0
   11d64:	moveq	r3, #0
   11d68:	str	r3, [sp, #28]
   11d6c:	ldr	r3, [sp, #24]
   11d70:	add	r8, r8, #1
   11d74:	cmn	r3, #1
   11d78:	bne	11850 <abort@plt+0xb30>
   11d7c:	ldr	r3, [sp, #44]	; 0x2c
   11d80:	ldrb	r3, [r3, sl]
   11d84:	adds	r7, r3, #0
   11d88:	movne	r7, #1
   11d8c:	cmp	r7, #0
   11d90:	bne	11860 <abort@plt+0xb40>
   11d94:	ldr	r3, [sp, #64]	; 0x40
   11d98:	cmp	r8, #0
   11d9c:	movne	r3, #0
   11da0:	andeq	r3, r3, #1
   11da4:	cmp	r3, #0
   11da8:	str	r3, [sp, #64]	; 0x40
   11dac:	bne	12850 <abort@plt+0x1b30>
   11db0:	ldr	r3, [sp, #40]	; 0x28
   11db4:	ldr	r2, [sp, #52]	; 0x34
   11db8:	eor	r3, r3, #1
   11dbc:	ands	r2, r2, r3
   11dc0:	beq	12c7c <abort@plt+0x1f5c>
   11dc4:	ldr	r3, [sp, #76]	; 0x4c
   11dc8:	cmp	r3, #0
   11dcc:	beq	12c4c <abort@plt+0x1f2c>
   11dd0:	ldr	r3, [sp, #28]
   11dd4:	cmp	r3, #0
   11dd8:	bne	12c08 <abort@plt+0x1ee8>
   11ddc:	ldr	r2, [sp, #84]	; 0x54
   11de0:	clz	r3, fp
   11de4:	cmp	r2, #0
   11de8:	lsr	r3, r3, #5
   11dec:	moveq	r3, #0
   11df0:	cmp	r3, #0
   11df4:	beq	12ba8 <abort@plt+0x1e88>
   11df8:	mov	fp, r2
   11dfc:	str	r3, [sp, #76]	; 0x4c
   11e00:	b	1178c <abort@plt+0xa6c>
   11e04:	ldr	r3, [sp, #176]	; 0xb0
   11e08:	ldr	r6, [sp, #48]	; 0x30
   11e0c:	cmp	r3, #2
   11e10:	beq	12348 <abort@plt+0x1628>
   11e14:	ldr	r3, [sp, #88]	; 0x58
   11e18:	cmp	r3, #0
   11e1c:	beq	128cc <abort@plt+0x1bac>
   11e20:	mov	r3, #0
   11e24:	add	sl, sl, #1
   11e28:	ldr	r6, [sp, #36]	; 0x24
   11e2c:	str	r3, [sp, #32]
   11e30:	mov	r4, #92	; 0x5c
   11e34:	b	11d20 <abort@plt+0x1000>
   11e38:	ldr	r3, [sp, #176]	; 0xb0
   11e3c:	ldr	r6, [sp, #48]	; 0x30
   11e40:	cmp	r3, #2
   11e44:	beq	12378 <abort@plt+0x1658>
   11e48:	cmp	r3, #5
   11e4c:	bne	128dc <abort@plt+0x1bbc>
   11e50:	ldr	r3, [sp, #100]	; 0x64
   11e54:	cmp	r3, #0
   11e58:	beq	12940 <abort@plt+0x1c20>
   11e5c:	ldr	r2, [sp, #24]
   11e60:	add	r3, sl, #2
   11e64:	cmp	r2, r3
   11e68:	bls	11e78 <abort@plt+0x1158>
   11e6c:	ldrb	r4, [r5, #1]
   11e70:	cmp	r4, #63	; 0x3f
   11e74:	beq	12ae8 <abort@plt+0x1dc8>
   11e78:	mov	r1, #0
   11e7c:	str	r1, [sp, #32]
   11e80:	mov	r4, #63	; 0x3f
   11e84:	b	11cec <abort@plt+0xfcc>
   11e88:	ldr	r3, [sp, #176]	; 0xb0
   11e8c:	ldr	r6, [sp, #48]	; 0x30
   11e90:	cmp	r3, #2
   11e94:	beq	123a4 <abort@plt+0x1684>
   11e98:	str	r7, [sp, #32]
   11e9c:	str	r7, [sp, #76]	; 0x4c
   11ea0:	mov	r1, #0
   11ea4:	mov	r4, #39	; 0x27
   11ea8:	b	11cec <abort@plt+0xfcc>
   11eac:	ldr	r6, [sp, #48]	; 0x30
   11eb0:	ldr	r1, [sp, #52]	; 0x34
   11eb4:	str	r7, [sp, #32]
   11eb8:	b	11cec <abort@plt+0xfcc>
   11ebc:	ldr	r6, [sp, #48]	; 0x30
   11ec0:	ldr	r1, [sp, #52]	; 0x34
   11ec4:	mov	r4, #12
   11ec8:	mov	r3, #102	; 0x66
   11ecc:	ldr	r2, [sp, #56]	; 0x38
   11ed0:	cmp	r2, #0
   11ed4:	streq	r2, [sp, #32]
   11ed8:	beq	11cec <abort@plt+0xfcc>
   11edc:	mov	r4, r3
   11ee0:	mov	r3, #0
   11ee4:	str	r3, [sp, #32]
   11ee8:	ldr	r3, [sp, #40]	; 0x28
   11eec:	cmp	r3, #0
   11ef0:	bne	12660 <abort@plt+0x1940>
   11ef4:	ldr	r3, [sp, #36]	; 0x24
   11ef8:	eor	r3, r3, #1
   11efc:	and	r3, r3, r1
   11f00:	ands	r3, r3, #255	; 0xff
   11f04:	beq	11f3c <abort@plt+0x121c>
   11f08:	cmp	fp, r8
   11f0c:	movhi	r2, #39	; 0x27
   11f10:	strbhi	r2, [r9, r8]
   11f14:	add	r2, r8, #1
   11f18:	cmp	fp, r2
   11f1c:	movhi	r1, #36	; 0x24
   11f20:	strbhi	r1, [r9, r2]
   11f24:	add	r2, r8, #2
   11f28:	cmp	fp, r2
   11f2c:	add	r8, r8, #3
   11f30:	movhi	r1, #39	; 0x27
   11f34:	strbhi	r1, [r9, r2]
   11f38:	str	r3, [sp, #36]	; 0x24
   11f3c:	cmp	fp, r8
   11f40:	movhi	r3, #92	; 0x5c
   11f44:	strbhi	r3, [r9, r8]
   11f48:	add	sl, sl, #1
   11f4c:	add	r8, r8, #1
   11f50:	b	11d50 <abort@plt+0x1030>
   11f54:	ldr	r6, [sp, #48]	; 0x30
   11f58:	mov	r4, #10
   11f5c:	mov	r3, #110	; 0x6e
   11f60:	ldr	r2, [sp, #64]	; 0x40
   11f64:	cmp	r2, #0
   11f68:	bne	129e8 <abort@plt+0x1cc8>
   11f6c:	ldr	r1, [sp, #52]	; 0x34
   11f70:	b	11ecc <abort@plt+0x11ac>
   11f74:	ldr	r6, [sp, #48]	; 0x30
   11f78:	ldr	r1, [sp, #52]	; 0x34
   11f7c:	mov	r3, #116	; 0x74
   11f80:	b	11ecc <abort@plt+0x11ac>
   11f84:	ldr	r6, [sp, #48]	; 0x30
   11f88:	ldr	r1, [sp, #52]	; 0x34
   11f8c:	mov	r4, #11
   11f90:	mov	r3, #118	; 0x76
   11f94:	b	11ecc <abort@plt+0x11ac>
   11f98:	ldr	r6, [sp, #48]	; 0x30
   11f9c:	ldr	r1, [sp, #52]	; 0x34
   11fa0:	mov	r4, #8
   11fa4:	mov	r3, #98	; 0x62
   11fa8:	b	11ecc <abort@plt+0x11ac>
   11fac:	ldr	r6, [sp, #48]	; 0x30
   11fb0:	ldr	r1, [sp, #52]	; 0x34
   11fb4:	mov	r4, #7
   11fb8:	mov	r3, #97	; 0x61
   11fbc:	b	11ecc <abort@plt+0x11ac>
   11fc0:	ldr	r3, [sp, #56]	; 0x38
   11fc4:	ldr	r6, [sp, #48]	; 0x30
   11fc8:	cmp	r3, #0
   11fcc:	beq	12490 <abort@plt+0x1770>
   11fd0:	ldr	r3, [sp, #40]	; 0x28
   11fd4:	cmp	r3, #0
   11fd8:	bne	12ac4 <abort@plt+0x1da4>
   11fdc:	ldr	r3, [sp, #36]	; 0x24
   11fe0:	ldr	r2, [sp, #52]	; 0x34
   11fe4:	eor	r3, r3, #1
   11fe8:	ands	r3, r2, r3
   11fec:	moveq	r2, r8
   11ff0:	beq	12028 <abort@plt+0x1308>
   11ff4:	cmp	fp, r8
   11ff8:	movhi	r2, #39	; 0x27
   11ffc:	strbhi	r2, [r9, r8]
   12000:	add	r2, r8, #1
   12004:	cmp	fp, r2
   12008:	movhi	r1, #36	; 0x24
   1200c:	strbhi	r1, [r9, r2]
   12010:	add	r2, r8, #2
   12014:	cmp	fp, r2
   12018:	movhi	r1, #39	; 0x27
   1201c:	strbhi	r1, [r9, r2]
   12020:	add	r2, r8, #3
   12024:	str	r3, [sp, #36]	; 0x24
   12028:	cmp	fp, r2
   1202c:	movhi	r3, #92	; 0x5c
   12030:	strbhi	r3, [r9, r2]
   12034:	ldr	r3, [sp, #92]	; 0x5c
   12038:	add	r8, r2, #1
   1203c:	cmp	r3, #0
   12040:	beq	129c4 <abort@plt+0x1ca4>
   12044:	ldr	r1, [sp, #24]
   12048:	add	r3, sl, #1
   1204c:	cmp	r1, r3
   12050:	bls	12088 <abort@plt+0x1368>
   12054:	ldr	r1, [sp, #44]	; 0x2c
   12058:	ldrb	r3, [r1, r3]
   1205c:	sub	r3, r3, #48	; 0x30
   12060:	cmp	r3, #9
   12064:	bhi	12088 <abort@plt+0x1368>
   12068:	cmp	fp, r8
   1206c:	movhi	r3, #48	; 0x30
   12070:	strbhi	r3, [r9, r8]
   12074:	add	r3, r2, #2
   12078:	cmp	fp, r3
   1207c:	add	r8, r2, #3
   12080:	movhi	r1, #48	; 0x30
   12084:	strbhi	r1, [r9, r3]
   12088:	ldr	r3, [sp, #40]	; 0x28
   1208c:	ldr	r1, [sp, #52]	; 0x34
   12090:	mov	r7, r3
   12094:	str	r3, [sp, #32]
   12098:	mov	r4, #48	; 0x30
   1209c:	b	11cec <abort@plt+0xfcc>
   120a0:	ldr	r6, [sp, #48]	; 0x30
   120a4:	cmp	sl, #0
   120a8:	streq	r7, [sp, #32]
   120ac:	beq	120cc <abort@plt+0x13ac>
   120b0:	mov	r3, #0
   120b4:	ldr	r1, [sp, #52]	; 0x34
   120b8:	str	r3, [sp, #32]
   120bc:	b	11cec <abort@plt+0xfcc>
   120c0:	ldr	r6, [sp, #48]	; 0x30
   120c4:	mov	r3, #0
   120c8:	str	r3, [sp, #32]
   120cc:	ldr	r3, [sp, #64]	; 0x40
   120d0:	cmp	r3, #0
   120d4:	bne	12850 <abort@plt+0x1b30>
   120d8:	ldr	r1, [sp, #52]	; 0x34
   120dc:	b	11cec <abort@plt+0xfcc>
   120e0:	ldr	r3, [sp, #48]	; 0x30
   120e4:	mov	r6, r3
   120e8:	str	r3, [sp, #32]
   120ec:	b	120cc <abort@plt+0x13ac>
   120f0:	ldr	r6, [sp, #48]	; 0x30
   120f4:	mov	r4, #13
   120f8:	mov	r3, #114	; 0x72
   120fc:	b	11f60 <abort@plt+0x1240>
   12100:	ldr	r3, [sp, #44]	; 0x2c
   12104:	add	r5, r3, sl
   12108:	ldrb	r4, [r5]
   1210c:	cmp	r4, #126	; 0x7e
   12110:	ldrls	pc, [pc, r4, lsl #2]
   12114:	b	124b0 <abort@plt+0x1790>
   12118:	andeq	r2, r1, r0, lsl #9
   1211c:			; <UNDEFINED> instruction: 0x000124b0
   12120:			; <UNDEFINED> instruction: 0x000124b0
   12124:			; <UNDEFINED> instruction: 0x000124b0
   12128:			; <UNDEFINED> instruction: 0x000124b0
   1212c:			; <UNDEFINED> instruction: 0x000124b0
   12130:			; <UNDEFINED> instruction: 0x000124b0
   12134:	andeq	r2, r1, r8, ror r4
   12138:	andeq	r2, r1, r0, ror r4
   1213c:	andeq	r2, r1, r4, ror #8
   12140:	andeq	r2, r1, ip, asr r4
   12144:	andeq	r2, r1, r4, asr r4
   12148:	andeq	r2, r1, ip, asr #8
   1214c:	andeq	r2, r1, r4, asr #8
   12150:			; <UNDEFINED> instruction: 0x000124b0
   12154:			; <UNDEFINED> instruction: 0x000124b0
   12158:			; <UNDEFINED> instruction: 0x000124b0
   1215c:			; <UNDEFINED> instruction: 0x000124b0
   12160:			; <UNDEFINED> instruction: 0x000124b0
   12164:			; <UNDEFINED> instruction: 0x000124b0
   12168:			; <UNDEFINED> instruction: 0x000124b0
   1216c:			; <UNDEFINED> instruction: 0x000124b0
   12170:			; <UNDEFINED> instruction: 0x000124b0
   12174:			; <UNDEFINED> instruction: 0x000124b0
   12178:			; <UNDEFINED> instruction: 0x000124b0
   1217c:			; <UNDEFINED> instruction: 0x000124b0
   12180:			; <UNDEFINED> instruction: 0x000124b0
   12184:			; <UNDEFINED> instruction: 0x000124b0
   12188:			; <UNDEFINED> instruction: 0x000124b0
   1218c:			; <UNDEFINED> instruction: 0x000124b0
   12190:			; <UNDEFINED> instruction: 0x000124b0
   12194:			; <UNDEFINED> instruction: 0x000124b0
   12198:	andeq	r2, r1, r8, lsr r4
   1219c:	andeq	r2, r1, r0, lsr r4
   121a0:	andeq	r2, r1, r0, lsr r4
   121a4:	andeq	r2, r1, r8, lsr #8
   121a8:	andeq	r2, r1, r0, lsr r4
   121ac:	andeq	r2, r1, r0, lsr #8
   121b0:	andeq	r2, r1, r0, lsr r4
   121b4:	muleq	r1, r4, r3
   121b8:	andeq	r2, r1, r0, lsr r4
   121bc:	andeq	r2, r1, r0, lsr r4
   121c0:	andeq	r2, r1, r0, lsr r4
   121c4:	andeq	r2, r1, r0, lsr #8
   121c8:	andeq	r2, r1, r0, lsr #8
   121cc:	andeq	r2, r1, r0, lsr #8
   121d0:	andeq	r2, r1, r0, lsr #8
   121d4:	andeq	r2, r1, r0, lsr #8
   121d8:	andeq	r2, r1, r0, lsr #8
   121dc:	andeq	r2, r1, r0, lsr #8
   121e0:	andeq	r2, r1, r0, lsr #8
   121e4:	andeq	r2, r1, r0, lsr #8
   121e8:	andeq	r2, r1, r0, lsr #8
   121ec:	andeq	r2, r1, r0, lsr #8
   121f0:	andeq	r2, r1, r0, lsr #8
   121f4:	andeq	r2, r1, r0, lsr #8
   121f8:	andeq	r2, r1, r0, lsr #8
   121fc:	andeq	r2, r1, r0, lsr #8
   12200:	andeq	r2, r1, r0, lsr #8
   12204:	andeq	r2, r1, r0, lsr r4
   12208:	andeq	r2, r1, r0, lsr r4
   1220c:	andeq	r2, r1, r0, lsr r4
   12210:	andeq	r2, r1, r0, lsr r4
   12214:	andeq	r2, r1, r8, ror #6
   12218:			; <UNDEFINED> instruction: 0x000124b0
   1221c:	andeq	r2, r1, r0, lsr #8
   12220:	andeq	r2, r1, r0, lsr #8
   12224:	andeq	r2, r1, r0, lsr #8
   12228:	andeq	r2, r1, r0, lsr #8
   1222c:	andeq	r2, r1, r0, lsr #8
   12230:	andeq	r2, r1, r0, lsr #8
   12234:	andeq	r2, r1, r0, lsr #8
   12238:	andeq	r2, r1, r0, lsr #8
   1223c:	andeq	r2, r1, r0, lsr #8
   12240:	andeq	r2, r1, r0, lsr #8
   12244:	andeq	r2, r1, r0, lsr #8
   12248:	andeq	r2, r1, r0, lsr #8
   1224c:	andeq	r2, r1, r0, lsr #8
   12250:	andeq	r2, r1, r0, lsr #8
   12254:	andeq	r2, r1, r0, lsr #8
   12258:	andeq	r2, r1, r0, lsr #8
   1225c:	andeq	r2, r1, r0, lsr #8
   12260:	andeq	r2, r1, r0, lsr #8
   12264:	andeq	r2, r1, r0, lsr #8
   12268:	andeq	r2, r1, r0, lsr #8
   1226c:	andeq	r2, r1, r0, lsr #8
   12270:	andeq	r2, r1, r0, lsr #8
   12274:	andeq	r2, r1, r0, lsr #8
   12278:	andeq	r2, r1, r0, lsr #8
   1227c:	andeq	r2, r1, r0, lsr #8
   12280:	andeq	r2, r1, r0, lsr #8
   12284:	andeq	r2, r1, r0, lsr r4
   12288:	andeq	r2, r1, r8, lsr r3
   1228c:	andeq	r2, r1, r0, lsr #8
   12290:	andeq	r2, r1, r0, lsr r4
   12294:	andeq	r2, r1, r0, lsr #8
   12298:	andeq	r2, r1, r0, lsr r4
   1229c:	andeq	r2, r1, r0, lsr #8
   122a0:	andeq	r2, r1, r0, lsr #8
   122a4:	andeq	r2, r1, r0, lsr #8
   122a8:	andeq	r2, r1, r0, lsr #8
   122ac:	andeq	r2, r1, r0, lsr #8
   122b0:	andeq	r2, r1, r0, lsr #8
   122b4:	andeq	r2, r1, r0, lsr #8
   122b8:	andeq	r2, r1, r0, lsr #8
   122bc:	andeq	r2, r1, r0, lsr #8
   122c0:	andeq	r2, r1, r0, lsr #8
   122c4:	andeq	r2, r1, r0, lsr #8
   122c8:	andeq	r2, r1, r0, lsr #8
   122cc:	andeq	r2, r1, r0, lsr #8
   122d0:	andeq	r2, r1, r0, lsr #8
   122d4:	andeq	r2, r1, r0, lsr #8
   122d8:	andeq	r2, r1, r0, lsr #8
   122dc:	andeq	r2, r1, r0, lsr #8
   122e0:	andeq	r2, r1, r0, lsr #8
   122e4:	andeq	r2, r1, r0, lsr #8
   122e8:	andeq	r2, r1, r0, lsr #8
   122ec:	andeq	r2, r1, r0, lsr #8
   122f0:	andeq	r2, r1, r0, lsr #8
   122f4:	andeq	r2, r1, r0, lsr #8
   122f8:	andeq	r2, r1, r0, lsr #8
   122fc:	andeq	r2, r1, r0, lsr #8
   12300:	andeq	r2, r1, r0, lsr #8
   12304:	andeq	r2, r1, r4, lsl r3
   12308:	andeq	r2, r1, r0, lsr r4
   1230c:	andeq	r2, r1, r4, lsl r3
   12310:	andeq	r2, r1, r8, lsr #8
   12314:	ldr	r3, [sp, #24]
   12318:	mov	r6, #0
   1231c:	cmn	r3, #1
   12320:	bne	11ccc <abort@plt+0xfac>
   12324:	ldr	r3, [sp, #44]	; 0x2c
   12328:	ldrb	r3, [r3, #1]
   1232c:	adds	r3, r3, #0
   12330:	movne	r3, #1
   12334:	b	11cd4 <abort@plt+0xfb4>
   12338:	ldr	r3, [sp, #176]	; 0xb0
   1233c:	mov	r6, #0
   12340:	cmp	r3, #2
   12344:	bne	11e14 <abort@plt+0x10f4>
   12348:	ldr	r3, [sp, #64]	; 0x40
   1234c:	cmp	r3, #0
   12350:	bne	12b88 <abort@plt+0x1e68>
   12354:	add	sl, sl, #1
   12358:	ldr	r6, [sp, #36]	; 0x24
   1235c:	str	r3, [sp, #32]
   12360:	mov	r4, #92	; 0x5c
   12364:	b	11d20 <abort@plt+0x1000>
   12368:	ldr	r3, [sp, #176]	; 0xb0
   1236c:	mov	r6, #0
   12370:	cmp	r3, #2
   12374:	bne	11e48 <abort@plt+0x1128>
   12378:	ldr	r3, [sp, #40]	; 0x28
   1237c:	cmp	r3, #0
   12380:	bne	12664 <abort@plt+0x1944>
   12384:	mov	r1, r7
   12388:	str	r3, [sp, #32]
   1238c:	mov	r4, #63	; 0x3f
   12390:	b	11cec <abort@plt+0xfcc>
   12394:	ldr	r3, [sp, #176]	; 0xb0
   12398:	mov	r6, #0
   1239c:	cmp	r3, #2
   123a0:	bne	11e98 <abort@plt+0x1178>
   123a4:	ldr	r3, [sp, #64]	; 0x40
   123a8:	cmp	r3, #0
   123ac:	bne	12b88 <abort@plt+0x1e68>
   123b0:	ldr	r2, [sp, #84]	; 0x54
   123b4:	adds	r3, fp, #0
   123b8:	movne	r3, #1
   123bc:	cmp	r2, #0
   123c0:	movne	r3, #0
   123c4:	cmp	r3, #0
   123c8:	strne	fp, [sp, #84]	; 0x54
   123cc:	movne	fp, #0
   123d0:	bne	12400 <abort@plt+0x16e0>
   123d4:	cmp	fp, r8
   123d8:	movhi	r3, #39	; 0x27
   123dc:	strbhi	r3, [r9, r8]
   123e0:	add	r3, r8, #1
   123e4:	cmp	fp, r3
   123e8:	movhi	r2, #92	; 0x5c
   123ec:	strbhi	r2, [r9, r3]
   123f0:	add	r3, r8, #2
   123f4:	cmp	fp, r3
   123f8:	movhi	r2, #39	; 0x27
   123fc:	strbhi	r2, [r9, r3]
   12400:	ldr	r3, [sp, #64]	; 0x40
   12404:	add	r8, r8, #3
   12408:	mov	r1, r7
   1240c:	str	r7, [sp, #32]
   12410:	str	r7, [sp, #76]	; 0x4c
   12414:	str	r3, [sp, #36]	; 0x24
   12418:	mov	r4, #39	; 0x27
   1241c:	b	11cec <abort@plt+0xfcc>
   12420:	mov	r6, #0
   12424:	b	11eb0 <abort@plt+0x1190>
   12428:	mov	r6, #0
   1242c:	b	120a4 <abort@plt+0x1384>
   12430:	mov	r6, #0
   12434:	b	120c4 <abort@plt+0x13a4>
   12438:	str	r7, [sp, #32]
   1243c:	mov	r6, #0
   12440:	b	120cc <abort@plt+0x13ac>
   12444:	mov	r6, #0
   12448:	b	120f4 <abort@plt+0x13d4>
   1244c:	mov	r6, #0
   12450:	b	11ec0 <abort@plt+0x11a0>
   12454:	mov	r6, #0
   12458:	b	11f88 <abort@plt+0x1268>
   1245c:	mov	r6, #0
   12460:	b	11f58 <abort@plt+0x1238>
   12464:	mov	r6, #0
   12468:	mov	r3, #116	; 0x74
   1246c:	b	11f60 <abort@plt+0x1240>
   12470:	mov	r6, #0
   12474:	b	11f9c <abort@plt+0x127c>
   12478:	mov	r6, #0
   1247c:	b	11fb0 <abort@plt+0x1290>
   12480:	ldr	r3, [sp, #56]	; 0x38
   12484:	mov	r6, #0
   12488:	cmp	r3, #0
   1248c:	bne	11fd0 <abort@plt+0x12b0>
   12490:	ldr	r3, [sp, #96]	; 0x60
   12494:	cmp	r3, #0
   12498:	addne	sl, sl, #1
   1249c:	bne	11844 <abort@plt+0xb24>
   124a0:	ldr	r1, [sp, #52]	; 0x34
   124a4:	str	r3, [sp, #32]
   124a8:	mov	r4, r3
   124ac:	b	11cec <abort@plt+0xfcc>
   124b0:	mov	r6, #0
   124b4:	ldr	r3, [sp, #80]	; 0x50
   124b8:	cmp	r3, #1
   124bc:	bne	126ac <abort@plt+0x198c>
   124c0:	bl	10c60 <__ctype_b_loc@plt>
   124c4:	ldr	r2, [sp, #80]	; 0x50
   124c8:	sxth	r3, r4
   124cc:	mov	r1, r2
   124d0:	lsl	r3, r3, #1
   124d4:	ldr	r2, [r0]
   124d8:	ldrh	r3, [r2, r3]
   124dc:	and	r3, r3, #16384	; 0x4000
   124e0:	cmp	r3, #0
   124e4:	movne	r3, #1
   124e8:	moveq	r3, #0
   124ec:	str	r3, [sp, #32]
   124f0:	moveq	r3, #1
   124f4:	movne	r3, #0
   124f8:	ldr	r2, [sp, #56]	; 0x38
   124fc:	and	r3, r3, r2
   12500:	ands	r3, r3, #255	; 0xff
   12504:	beq	120d8 <abort@plt+0x13b8>
   12508:	add	r1, sl, r1
   1250c:	mov	r0, #0
   12510:	ldr	r7, [sp, #40]	; 0x28
   12514:	ldr	r2, [sp, #36]	; 0x24
   12518:	ldr	lr, [sp, #52]	; 0x34
   1251c:	b	125cc <abort@plt+0x18ac>
   12520:	cmp	r7, #0
   12524:	bne	12920 <abort@plt+0x1c00>
   12528:	eor	r0, r2, #1
   1252c:	ands	r0, lr, r0
   12530:	beq	12568 <abort@plt+0x1848>
   12534:	cmp	fp, r8
   12538:	movhi	r2, #39	; 0x27
   1253c:	strbhi	r2, [r9, r8]
   12540:	add	r2, r8, #1
   12544:	cmp	fp, r2
   12548:	movhi	ip, #36	; 0x24
   1254c:	strbhi	ip, [r9, r2]
   12550:	add	r2, r8, #2
   12554:	cmp	fp, r2
   12558:	movhi	ip, #39	; 0x27
   1255c:	strbhi	ip, [r9, r2]
   12560:	add	r8, r8, #3
   12564:	mov	r2, r0
   12568:	cmp	fp, r8
   1256c:	movhi	r0, #92	; 0x5c
   12570:	strbhi	r0, [r9, r8]
   12574:	add	r0, r8, #1
   12578:	cmp	fp, r0
   1257c:	lsrhi	ip, r4, #6
   12580:	addhi	ip, ip, #48	; 0x30
   12584:	strbhi	ip, [r9, r0]
   12588:	add	ip, r8, #2
   1258c:	cmp	fp, ip
   12590:	lsrhi	r0, r4, #3
   12594:	andhi	r0, r0, #7
   12598:	addhi	r0, r0, #48	; 0x30
   1259c:	add	sl, sl, #1
   125a0:	strbhi	r0, [r9, ip]
   125a4:	and	r4, r4, #7
   125a8:	cmp	sl, r1
   125ac:	add	r4, r4, #48	; 0x30
   125b0:	add	r8, r8, #3
   125b4:	bcs	12938 <abort@plt+0x1c18>
   125b8:	mov	r0, r3
   125bc:	cmp	fp, r8
   125c0:	strbhi	r4, [r9, r8]
   125c4:	ldrb	r4, [r5, #1]!
   125c8:	add	r8, r8, #1
   125cc:	cmp	r3, #0
   125d0:	bne	12520 <abort@plt+0x1800>
   125d4:	cmp	r6, #0
   125d8:	bne	1267c <abort@plt+0x195c>
   125dc:	eor	r6, r0, #1
   125e0:	and	r6, r6, r2
   125e4:	add	sl, sl, #1
   125e8:	cmp	r1, sl
   125ec:	uxtb	r6, r6
   125f0:	bls	126a4 <abort@plt+0x1984>
   125f4:	cmp	r6, #0
   125f8:	beq	125bc <abort@plt+0x189c>
   125fc:	cmp	fp, r8
   12600:	movhi	r2, #39	; 0x27
   12604:	strbhi	r2, [r9, r8]
   12608:	add	r2, r8, #1
   1260c:	cmp	fp, r2
   12610:	movhi	ip, #39	; 0x27
   12614:	strbhi	ip, [r9, r2]
   12618:	add	r8, r8, #2
   1261c:	mov	r6, r3
   12620:	mov	r2, r3
   12624:	b	125bc <abort@plt+0x189c>
   12628:	ldr	r3, [sp, #184]	; 0xb8
   1262c:	cmp	r3, #0
   12630:	beq	11d08 <abort@plt+0xfe8>
   12634:	lsr	r2, r4, #5
   12638:	mov	r0, r3
   1263c:	uxtb	r2, r2
   12640:	and	r3, r4, #31
   12644:	ldr	r2, [r0, r2, lsl #2]
   12648:	lsr	r3, r2, r3
   1264c:	tst	r3, #1
   12650:	beq	11d08 <abort@plt+0xfe8>
   12654:	ldr	r3, [sp, #40]	; 0x28
   12658:	cmp	r3, #0
   1265c:	beq	11ef4 <abort@plt+0x11d4>
   12660:	mov	r3, r1
   12664:	str	r3, [sp, #64]	; 0x40
   12668:	mov	sl, r9
   1266c:	ldr	r3, [sp, #56]	; 0x38
   12670:	mov	r9, fp
   12674:	ldr	r2, [sp, #64]	; 0x40
   12678:	b	12868 <abort@plt+0x1b48>
   1267c:	cmp	fp, r8
   12680:	eor	r6, r0, #1
   12684:	movhi	ip, #92	; 0x5c
   12688:	and	r6, r6, r2
   1268c:	add	sl, sl, #1
   12690:	strbhi	ip, [r9, r8]
   12694:	cmp	r1, sl
   12698:	add	r8, r8, #1
   1269c:	uxtb	r6, r6
   126a0:	bhi	125f4 <abort@plt+0x18d4>
   126a4:	str	r2, [sp, #36]	; 0x24
   126a8:	b	11d20 <abort@plt+0x1000>
   126ac:	ldr	r3, [sp, #24]
   126b0:	cmn	r3, #1
   126b4:	mov	r3, #0
   126b8:	str	r3, [sp, #128]	; 0x80
   126bc:	str	r3, [sp, #132]	; 0x84
   126c0:	beq	129b4 <abort@plt+0x1c94>
   126c4:	mov	r2, r7
   126c8:	mov	r3, #0
   126cc:	str	r7, [sp, #104]	; 0x68
   126d0:	str	r5, [sp, #116]	; 0x74
   126d4:	mov	r7, r3
   126d8:	mov	r5, r2
   126dc:	str	r4, [sp, #32]
   126e0:	str	r6, [sp, #108]	; 0x6c
   126e4:	str	r8, [sp, #112]	; 0x70
   126e8:	ldr	r3, [sp, #44]	; 0x2c
   126ec:	add	r6, sl, r7
   126f0:	add	r4, r3, r6
   126f4:	ldr	r3, [sp, #24]
   126f8:	mov	r1, r4
   126fc:	sub	r2, r3, r6
   12700:	add	r0, sp, #124	; 0x7c
   12704:	add	r3, sp, #128	; 0x80
   12708:	bl	169cc <abort@plt+0x5cac>
   1270c:	subs	r8, r0, #0
   12710:	beq	12a98 <abort@plt+0x1d78>
   12714:	cmn	r8, #1
   12718:	beq	12a70 <abort@plt+0x1d50>
   1271c:	cmn	r8, #2
   12720:	beq	12a08 <abort@plt+0x1ce8>
   12724:	ldr	r3, [sp, #64]	; 0x40
   12728:	cmp	r3, #0
   1272c:	beq	127ec <abort@plt+0x1acc>
   12730:	cmp	r8, #1
   12734:	beq	127ec <abort@plt+0x1acc>
   12738:	sub	r3, r8, #1
   1273c:	add	r6, r3, r6
   12740:	ldr	r3, [sp, #44]	; 0x2c
   12744:	add	r6, r3, r6
   12748:	ldrb	r3, [r4, #1]!
   1274c:	sub	r3, r3, #91	; 0x5b
   12750:	cmp	r3, #33	; 0x21
   12754:	ldrls	pc, [pc, r3, lsl #2]
   12758:	b	127e4 <abort@plt+0x1ac4>
   1275c:	andeq	r2, r1, r0, asr r8
   12760:	andeq	r2, r1, r0, asr r8
   12764:	andeq	r2, r1, r4, ror #15
   12768:	andeq	r2, r1, r0, asr r8
   1276c:	andeq	r2, r1, r4, ror #15
   12770:	andeq	r2, r1, r0, asr r8
   12774:	andeq	r2, r1, r4, ror #15
   12778:	andeq	r2, r1, r4, ror #15
   1277c:	andeq	r2, r1, r4, ror #15
   12780:	andeq	r2, r1, r4, ror #15
   12784:	andeq	r2, r1, r4, ror #15
   12788:	andeq	r2, r1, r4, ror #15
   1278c:	andeq	r2, r1, r4, ror #15
   12790:	andeq	r2, r1, r4, ror #15
   12794:	andeq	r2, r1, r4, ror #15
   12798:	andeq	r2, r1, r4, ror #15
   1279c:	andeq	r2, r1, r4, ror #15
   127a0:	andeq	r2, r1, r4, ror #15
   127a4:	andeq	r2, r1, r4, ror #15
   127a8:	andeq	r2, r1, r4, ror #15
   127ac:	andeq	r2, r1, r4, ror #15
   127b0:	andeq	r2, r1, r4, ror #15
   127b4:	andeq	r2, r1, r4, ror #15
   127b8:	andeq	r2, r1, r4, ror #15
   127bc:	andeq	r2, r1, r4, ror #15
   127c0:	andeq	r2, r1, r4, ror #15
   127c4:	andeq	r2, r1, r4, ror #15
   127c8:	andeq	r2, r1, r4, ror #15
   127cc:	andeq	r2, r1, r4, ror #15
   127d0:	andeq	r2, r1, r4, ror #15
   127d4:	andeq	r2, r1, r4, ror #15
   127d8:	andeq	r2, r1, r4, ror #15
   127dc:	andeq	r2, r1, r4, ror #15
   127e0:	andeq	r2, r1, r0, asr r8
   127e4:	cmp	r6, r4
   127e8:	bne	12748 <abort@plt+0x1a28>
   127ec:	ldr	r0, [sp, #124]	; 0x7c
   127f0:	bl	10bd0 <iswprint@plt>
   127f4:	add	r7, r7, r8
   127f8:	cmp	r0, #0
   127fc:	add	r0, sp, #128	; 0x80
   12800:	moveq	r5, #0
   12804:	bl	10b7c <mbsinit@plt>
   12808:	cmp	r0, #0
   1280c:	beq	126e8 <abort@plt+0x19c8>
   12810:	ldr	r4, [sp, #32]
   12814:	str	r5, [sp, #32]
   12818:	ldr	r3, [sp, #32]
   1281c:	mov	r1, r7
   12820:	eor	r3, r3, #1
   12824:	ldr	r7, [sp, #104]	; 0x68
   12828:	ldr	r6, [sp, #108]	; 0x6c
   1282c:	ldr	r8, [sp, #112]	; 0x70
   12830:	ldr	r5, [sp, #116]	; 0x74
   12834:	uxtb	r3, r3
   12838:	cmp	r1, #1
   1283c:	bls	124f8 <abort@plt+0x17d8>
   12840:	ldr	r2, [sp, #56]	; 0x38
   12844:	and	r3, r3, r2
   12848:	uxtb	r3, r3
   1284c:	b	12508 <abort@plt+0x17e8>
   12850:	mov	r3, #2
   12854:	str	r3, [sp, #176]	; 0xb0
   12858:	ldr	r2, [sp, #64]	; 0x40
   1285c:	ldr	r3, [sp, #56]	; 0x38
   12860:	mov	sl, r9
   12864:	mov	r9, fp
   12868:	and	r3, r3, r2
   1286c:	tst	r3, #255	; 0xff
   12870:	ldr	r3, [sp, #176]	; 0xb0
   12874:	movne	r3, #4
   12878:	str	r3, [sp, #176]	; 0xb0
   1287c:	ldr	r3, [sp, #180]	; 0xb4
   12880:	mov	ip, #0
   12884:	bic	r3, r3, #2
   12888:	str	r3, [sp, #4]
   1288c:	ldr	r3, [sp, #192]	; 0xc0
   12890:	ldr	r2, [sp, #44]	; 0x2c
   12894:	str	r3, [sp, #16]
   12898:	ldr	r3, [sp, #188]	; 0xbc
   1289c:	mov	r1, r9
   128a0:	str	r3, [sp, #12]
   128a4:	ldr	r3, [sp, #176]	; 0xb0
   128a8:	mov	r0, sl
   128ac:	str	r3, [sp]
   128b0:	str	ip, [sp, #8]
   128b4:	ldr	r3, [sp, #24]
   128b8:	bl	11718 <abort@plt+0x9f8>
   128bc:	mov	fp, r0
   128c0:	mov	r0, fp
   128c4:	add	sp, sp, #140	; 0x8c
   128c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128cc:	mov	r4, #92	; 0x5c
   128d0:	mov	r1, #0
   128d4:	mov	r3, r4
   128d8:	b	11ecc <abort@plt+0x11ac>
   128dc:	mov	r3, #0
   128e0:	ldr	r1, [sp, #52]	; 0x34
   128e4:	str	r3, [sp, #32]
   128e8:	mov	r4, #63	; 0x3f
   128ec:	b	11cec <abort@plt+0xfcc>
   128f0:	cmp	fp, #0
   128f4:	beq	12950 <abort@plt+0x1c30>
   128f8:	mov	r3, #39	; 0x27
   128fc:	strb	r3, [r9]
   12900:	mov	r3, #0
   12904:	str	r3, [sp, #40]	; 0x28
   12908:	mov	r3, #1
   1290c:	str	r3, [sp, #68]	; 0x44
   12910:	ldr	r3, [pc, #448]	; 12ad8 <abort@plt+0x1db8>
   12914:	mov	r8, #1
   12918:	str	r3, [sp, #72]	; 0x48
   1291c:	b	11b00 <abort@plt+0xde0>
   12920:	ldr	r3, [sp, #40]	; 0x28
   12924:	mov	sl, r9
   12928:	str	r3, [sp, #56]	; 0x38
   1292c:	mov	r9, fp
   12930:	ldr	r2, [sp, #64]	; 0x40
   12934:	b	12868 <abort@plt+0x1b48>
   12938:	str	r2, [sp, #36]	; 0x24
   1293c:	b	11d50 <abort@plt+0x1030>
   12940:	mov	r1, #0
   12944:	str	r3, [sp, #32]
   12948:	mov	r4, #63	; 0x3f
   1294c:	b	11cec <abort@plt+0xfcc>
   12950:	ldr	r3, [pc, #384]	; 12ad8 <abort@plt+0x1db8>
   12954:	str	r3, [sp, #72]	; 0x48
   12958:	mov	r3, #0
   1295c:	str	r3, [sp, #40]	; 0x28
   12960:	mov	r3, #1
   12964:	str	r3, [sp, #68]	; 0x44
   12968:	mov	r8, r3
   1296c:	b	11b00 <abort@plt+0xde0>
   12970:	bl	10d20 <abort@plt>
   12974:	cmp	fp, #0
   12978:	beq	129d8 <abort@plt+0x1cb8>
   1297c:	mov	r2, #1
   12980:	mov	r3, #34	; 0x22
   12984:	strb	r3, [r9]
   12988:	mov	r8, r2
   1298c:	mov	r3, r2
   12990:	str	r2, [sp, #68]	; 0x44
   12994:	str	r3, [sp, #56]	; 0x38
   12998:	ldr	r3, [pc, #316]	; 12adc <abort@plt+0x1dbc>
   1299c:	ldr	r1, [sp, #56]	; 0x38
   129a0:	str	r3, [sp, #72]	; 0x48
   129a4:	ldr	r2, [sp, #176]	; 0xb0
   129a8:	ldr	ip, [sp, #40]	; 0x28
   129ac:	ldr	lr, [sp, #176]	; 0xb0
   129b0:	b	117e4 <abort@plt+0xac4>
   129b4:	ldr	r0, [sp, #44]	; 0x2c
   129b8:	bl	10c78 <strlen@plt>
   129bc:	str	r0, [sp, #24]
   129c0:	b	126c4 <abort@plt+0x19a4>
   129c4:	mov	r7, #0
   129c8:	ldr	r1, [sp, #52]	; 0x34
   129cc:	str	r3, [sp, #32]
   129d0:	mov	r4, #48	; 0x30
   129d4:	b	11cec <abort@plt+0xfcc>
   129d8:	mov	r3, #1
   129dc:	str	r3, [sp, #68]	; 0x44
   129e0:	mov	r8, r3
   129e4:	b	12994 <abort@plt+0x1c74>
   129e8:	mov	r3, #2
   129ec:	mov	sl, r9
   129f0:	str	r3, [sp, #176]	; 0xb0
   129f4:	mov	r9, fp
   129f8:	ldr	r3, [sp, #56]	; 0x38
   129fc:	b	12868 <abort@plt+0x1b48>
   12a00:	ldr	r6, [sp, #48]	; 0x30
   12a04:	b	124b4 <abort@plt+0x1794>
   12a08:	ldr	r0, [sp, #24]
   12a0c:	mov	ip, r6
   12a10:	cmp	r0, ip
   12a14:	mov	r1, r7
   12a18:	mov	r2, r4
   12a1c:	ldr	r7, [sp, #104]	; 0x68
   12a20:	ldr	r4, [sp, #32]
   12a24:	ldr	r6, [sp, #108]	; 0x6c
   12a28:	ldr	r8, [sp, #112]	; 0x70
   12a2c:	ldr	r5, [sp, #116]	; 0x74
   12a30:	bls	12a60 <abort@plt+0x1d40>
   12a34:	ldrb	r3, [r2]
   12a38:	cmp	r3, #0
   12a3c:	bne	12a50 <abort@plt+0x1d30>
   12a40:	b	12b70 <abort@plt+0x1e50>
   12a44:	ldrb	r3, [r2, #1]!
   12a48:	cmp	r3, #0
   12a4c:	beq	12b70 <abort@plt+0x1e50>
   12a50:	add	r1, r1, #1
   12a54:	add	r3, sl, r1
   12a58:	cmp	r0, r3
   12a5c:	bhi	12a44 <abort@plt+0x1d24>
   12a60:	mov	r2, #0
   12a64:	mov	r3, r7
   12a68:	str	r2, [sp, #32]
   12a6c:	b	12838 <abort@plt+0x1b18>
   12a70:	mov	r1, r7
   12a74:	ldr	r7, [sp, #104]	; 0x68
   12a78:	mov	r2, #0
   12a7c:	ldr	r4, [sp, #32]
   12a80:	ldr	r6, [sp, #108]	; 0x6c
   12a84:	ldr	r8, [sp, #112]	; 0x70
   12a88:	ldr	r5, [sp, #116]	; 0x74
   12a8c:	mov	r3, r7
   12a90:	str	r2, [sp, #32]
   12a94:	b	12838 <abort@plt+0x1b18>
   12a98:	mov	r3, r5
   12a9c:	eor	r3, r3, #1
   12aa0:	ldr	r4, [sp, #32]
   12aa4:	mov	r1, r7
   12aa8:	str	r5, [sp, #32]
   12aac:	ldr	r7, [sp, #104]	; 0x68
   12ab0:	ldr	r6, [sp, #108]	; 0x6c
   12ab4:	ldr	r8, [sp, #112]	; 0x70
   12ab8:	ldr	r5, [sp, #116]	; 0x74
   12abc:	uxtb	r3, r3
   12ac0:	b	12838 <abort@plt+0x1b18>
   12ac4:	mov	sl, r9
   12ac8:	str	r3, [sp, #56]	; 0x38
   12acc:	mov	r9, fp
   12ad0:	ldr	r2, [sp, #64]	; 0x40
   12ad4:	b	12868 <abort@plt+0x1b48>
   12ad8:	andeq	r7, r1, r0, asr #8
   12adc:	andeq	r7, r1, ip, lsr r4
   12ae0:	andeq	r7, r1, r4, asr #8
   12ae4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12ae8:	ldr	r2, [sp, #44]	; 0x2c
   12aec:	ldrb	r1, [r2, r3]
   12af0:	sub	r2, r1, #33	; 0x21
   12af4:	uxtb	r2, r2
   12af8:	cmp	r2, #29
   12afc:	bhi	12b7c <abort@plt+0x1e5c>
   12b00:	ldr	r0, [pc, #-36]	; 12ae4 <abort@plt+0x1dc4>
   12b04:	mov	ip, #1
   12b08:	ands	r2, r0, ip, lsl r2
   12b0c:	beq	12b9c <abort@plt+0x1e7c>
   12b10:	ldr	r2, [sp, #40]	; 0x28
   12b14:	cmp	r2, #0
   12b18:	bne	12c90 <abort@plt+0x1f70>
   12b1c:	add	r2, r8, #1
   12b20:	cmp	fp, r8
   12b24:	strbhi	r4, [r9, r8]
   12b28:	cmp	fp, r2
   12b2c:	movhi	r0, #34	; 0x22
   12b30:	strbhi	r0, [r9, r2]
   12b34:	add	r2, r8, #2
   12b38:	cmp	fp, r2
   12b3c:	movhi	r0, #34	; 0x22
   12b40:	strbhi	r0, [r9, r2]
   12b44:	add	r2, r8, #3
   12b48:	cmp	fp, r2
   12b4c:	mov	sl, r3
   12b50:	ldr	r3, [sp, #40]	; 0x28
   12b54:	movhi	r0, #63	; 0x3f
   12b58:	mov	r4, r1
   12b5c:	strbhi	r0, [r9, r2]
   12b60:	add	r8, r8, #4
   12b64:	mov	r1, r3
   12b68:	str	r3, [sp, #32]
   12b6c:	b	11cec <abort@plt+0xfcc>
   12b70:	str	r3, [sp, #32]
   12b74:	mov	r3, r7
   12b78:	b	12838 <abort@plt+0x1b18>
   12b7c:	mov	r1, #0
   12b80:	str	r1, [sp, #32]
   12b84:	b	11cec <abort@plt+0xfcc>
   12b88:	mov	sl, r9
   12b8c:	ldr	r3, [sp, #56]	; 0x38
   12b90:	mov	r9, fp
   12b94:	ldr	r2, [sp, #64]	; 0x40
   12b98:	b	12868 <abort@plt+0x1b48>
   12b9c:	str	r2, [sp, #32]
   12ba0:	mov	r1, #0
   12ba4:	b	11cec <abort@plt+0xfcc>
   12ba8:	ldr	r2, [sp, #76]	; 0x4c
   12bac:	mov	sl, r9
   12bb0:	mov	r9, fp
   12bb4:	mov	fp, r8
   12bb8:	ldr	r1, [sp, #72]	; 0x48
   12bbc:	cmp	r1, #0
   12bc0:	moveq	r3, #0
   12bc4:	andne	r3, r2, #1
   12bc8:	cmp	r3, #0
   12bcc:	beq	12bf8 <abort@plt+0x1ed8>
   12bd0:	ldrb	r3, [r1]
   12bd4:	cmp	r3, #0
   12bd8:	beq	12bf8 <abort@plt+0x1ed8>
   12bdc:	mov	r2, r1
   12be0:	cmp	r9, fp
   12be4:	strbhi	r3, [sl, fp]
   12be8:	ldrb	r3, [r2, #1]!
   12bec:	add	fp, fp, #1
   12bf0:	cmp	r3, #0
   12bf4:	bne	12be0 <abort@plt+0x1ec0>
   12bf8:	cmp	r9, fp
   12bfc:	movhi	r3, #0
   12c00:	strbhi	r3, [sl, fp]
   12c04:	b	128c0 <abort@plt+0x1ba0>
   12c08:	ldr	r3, [sp, #192]	; 0xc0
   12c0c:	mov	ip, #5
   12c10:	str	r3, [sp, #16]
   12c14:	ldr	r3, [sp, #188]	; 0xbc
   12c18:	ldr	r2, [sp, #44]	; 0x2c
   12c1c:	str	r3, [sp, #12]
   12c20:	ldr	r3, [sp, #184]	; 0xb8
   12c24:	ldr	r1, [sp, #84]	; 0x54
   12c28:	str	r3, [sp, #8]
   12c2c:	ldr	r3, [sp, #180]	; 0xb4
   12c30:	mov	r0, r9
   12c34:	str	r3, [sp, #4]
   12c38:	str	ip, [sp]
   12c3c:	ldr	r3, [sp, #24]
   12c40:	bl	11718 <abort@plt+0x9f8>
   12c44:	mov	fp, r0
   12c48:	b	128c0 <abort@plt+0x1ba0>
   12c4c:	mov	sl, r9
   12c50:	mov	r9, fp
   12c54:	mov	fp, r8
   12c58:	b	12bb8 <abort@plt+0x1e98>
   12c5c:	ldr	r1, [sp, #176]	; 0xb0
   12c60:	bl	115f8 <abort@plt+0x8d8>
   12c64:	str	r0, [sp, #192]	; 0xc0
   12c68:	b	11bd4 <abort@plt+0xeb4>
   12c6c:	ldr	r1, [sp, #176]	; 0xb0
   12c70:	bl	115f8 <abort@plt+0x8d8>
   12c74:	str	r0, [sp, #188]	; 0xbc
   12c78:	b	11bb4 <abort@plt+0xe94>
   12c7c:	mov	sl, r9
   12c80:	mov	r2, r3
   12c84:	mov	r9, fp
   12c88:	mov	fp, r8
   12c8c:	b	12bb8 <abort@plt+0x1e98>
   12c90:	mov	sl, r9
   12c94:	mov	r9, fp
   12c98:	b	1287c <abort@plt+0x1b5c>
   12c9c:	push	{r4, r5, r6, lr}
   12ca0:	mov	r5, r0
   12ca4:	bl	10c84 <__errno_location@plt>
   12ca8:	cmp	r5, #0
   12cac:	mov	r1, #48	; 0x30
   12cb0:	mov	r4, r0
   12cb4:	ldr	r0, [pc, #16]	; 12ccc <abort@plt+0x1fac>
   12cb8:	ldr	r6, [r4]
   12cbc:	movne	r0, r5
   12cc0:	bl	16538 <abort@plt+0x5818>
   12cc4:	str	r6, [r4]
   12cc8:	pop	{r4, r5, r6, pc}
   12ccc:	andeq	r8, r2, ip, lsr r1
   12cd0:	ldr	r3, [pc, #12]	; 12ce4 <abort@plt+0x1fc4>
   12cd4:	cmp	r0, #0
   12cd8:	moveq	r0, r3
   12cdc:	ldr	r0, [r0]
   12ce0:	bx	lr
   12ce4:	andeq	r8, r2, ip, lsr r1
   12ce8:	ldr	r3, [pc, #12]	; 12cfc <abort@plt+0x1fdc>
   12cec:	cmp	r0, #0
   12cf0:	moveq	r0, r3
   12cf4:	str	r1, [r0]
   12cf8:	bx	lr
   12cfc:	andeq	r8, r2, ip, lsr r1
   12d00:	ldr	r3, [pc, #52]	; 12d3c <abort@plt+0x201c>
   12d04:	cmp	r0, #0
   12d08:	moveq	r0, r3
   12d0c:	add	r3, r0, #8
   12d10:	push	{lr}		; (str lr, [sp, #-4]!)
   12d14:	lsr	lr, r1, #5
   12d18:	and	r1, r1, #31
   12d1c:	ldr	ip, [r3, lr, lsl #2]
   12d20:	lsr	r0, ip, r1
   12d24:	eor	r2, r2, r0
   12d28:	and	r2, r2, #1
   12d2c:	and	r0, r0, #1
   12d30:	eor	r1, ip, r2, lsl r1
   12d34:	str	r1, [r3, lr, lsl #2]
   12d38:	pop	{pc}		; (ldr pc, [sp], #4)
   12d3c:	andeq	r8, r2, ip, lsr r1
   12d40:	ldr	r3, [pc, #16]	; 12d58 <abort@plt+0x2038>
   12d44:	cmp	r0, #0
   12d48:	movne	r3, r0
   12d4c:	ldr	r0, [r3, #4]
   12d50:	str	r1, [r3, #4]
   12d54:	bx	lr
   12d58:	andeq	r8, r2, ip, lsr r1
   12d5c:	ldr	r3, [pc, #44]	; 12d90 <abort@plt+0x2070>
   12d60:	cmp	r0, #0
   12d64:	moveq	r0, r3
   12d68:	mov	ip, #10
   12d6c:	cmp	r2, #0
   12d70:	cmpne	r1, #0
   12d74:	str	ip, [r0]
   12d78:	beq	12d88 <abort@plt+0x2068>
   12d7c:	str	r1, [r0, #40]	; 0x28
   12d80:	str	r2, [r0, #44]	; 0x2c
   12d84:	bx	lr
   12d88:	push	{r4, lr}
   12d8c:	bl	10d20 <abort@plt>
   12d90:	andeq	r8, r2, ip, lsr r1
   12d94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d98:	sub	sp, sp, #24
   12d9c:	ldr	ip, [pc, #108]	; 12e10 <abort@plt+0x20f0>
   12da0:	ldr	r4, [sp, #56]	; 0x38
   12da4:	mov	r9, r2
   12da8:	cmp	r4, #0
   12dac:	moveq	r4, ip
   12db0:	mov	sl, r3
   12db4:	mov	r7, r0
   12db8:	mov	r8, r1
   12dbc:	bl	10c84 <__errno_location@plt>
   12dc0:	ldr	r3, [r4, #44]	; 0x2c
   12dc4:	mov	r1, r8
   12dc8:	ldr	r6, [r0]
   12dcc:	str	r3, [sp, #16]
   12dd0:	ldr	r2, [r4, #40]	; 0x28
   12dd4:	add	r3, r4, #8
   12dd8:	str	r3, [sp, #8]
   12ddc:	str	r2, [sp, #12]
   12de0:	ldr	r2, [r4, #4]
   12de4:	mov	r5, r0
   12de8:	str	r2, [sp, #4]
   12dec:	ldr	ip, [r4]
   12df0:	mov	r3, sl
   12df4:	mov	r2, r9
   12df8:	mov	r0, r7
   12dfc:	str	ip, [sp]
   12e00:	bl	11718 <abort@plt+0x9f8>
   12e04:	str	r6, [r5]
   12e08:	add	sp, sp, #24
   12e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e10:	andeq	r8, r2, ip, lsr r1
   12e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e18:	cmp	r2, #0
   12e1c:	sub	sp, sp, #36	; 0x24
   12e20:	ldr	r4, [pc, #164]	; 12ecc <abort@plt+0x21ac>
   12e24:	mov	r8, r1
   12e28:	movne	r4, r2
   12e2c:	mov	r7, r0
   12e30:	bl	10c84 <__errno_location@plt>
   12e34:	ldr	r3, [r4, #44]	; 0x2c
   12e38:	ldr	r5, [r4, #4]
   12e3c:	add	r9, r4, #8
   12e40:	orr	r5, r5, #1
   12e44:	mov	r1, #0
   12e48:	mov	r2, r7
   12e4c:	ldr	fp, [r0]
   12e50:	str	r3, [sp, #16]
   12e54:	ldr	r3, [r4, #40]	; 0x28
   12e58:	stmib	sp, {r5, r9}
   12e5c:	str	r3, [sp, #12]
   12e60:	ldr	r3, [r4]
   12e64:	mov	r6, r0
   12e68:	str	r3, [sp]
   12e6c:	mov	r0, r1
   12e70:	mov	r3, r8
   12e74:	bl	11718 <abort@plt+0x9f8>
   12e78:	add	r1, r0, #1
   12e7c:	mov	r0, r1
   12e80:	str	r1, [sp, #28]
   12e84:	bl	15ff4 <abort@plt+0x52d4>
   12e88:	ldr	r3, [r4, #44]	; 0x2c
   12e8c:	ldr	r1, [sp, #28]
   12e90:	str	r3, [sp, #16]
   12e94:	ldr	r3, [r4, #40]	; 0x28
   12e98:	str	r5, [sp, #4]
   12e9c:	str	r3, [sp, #12]
   12ea0:	str	r9, [sp, #8]
   12ea4:	ldr	ip, [r4]
   12ea8:	mov	r3, r8
   12eac:	mov	r2, r7
   12eb0:	str	ip, [sp]
   12eb4:	mov	sl, r0
   12eb8:	bl	11718 <abort@plt+0x9f8>
   12ebc:	mov	r0, sl
   12ec0:	str	fp, [r6]
   12ec4:	add	sp, sp, #36	; 0x24
   12ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ecc:	andeq	r8, r2, ip, lsr r1
   12ed0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ed4:	cmp	r3, #0
   12ed8:	sub	sp, sp, #44	; 0x2c
   12edc:	ldr	r4, [pc, #192]	; 12fa4 <abort@plt+0x2284>
   12ee0:	mov	r6, r2
   12ee4:	movne	r4, r3
   12ee8:	mov	r9, r1
   12eec:	mov	r8, r0
   12ef0:	bl	10c84 <__errno_location@plt>
   12ef4:	ldr	r3, [r4, #44]	; 0x2c
   12ef8:	ldr	r5, [r4, #4]
   12efc:	add	sl, r4, #8
   12f00:	cmp	r6, #0
   12f04:	orreq	r5, r5, #1
   12f08:	mov	r1, #0
   12f0c:	ldr	r2, [r0]
   12f10:	str	r3, [sp, #16]
   12f14:	ldr	r3, [r4, #40]	; 0x28
   12f18:	stmib	sp, {r5, sl}
   12f1c:	str	r3, [sp, #12]
   12f20:	ldr	r3, [r4]
   12f24:	mov	r7, r0
   12f28:	str	r2, [sp, #28]
   12f2c:	str	r3, [sp]
   12f30:	mov	r2, r8
   12f34:	mov	r3, r9
   12f38:	mov	r0, r1
   12f3c:	bl	11718 <abort@plt+0x9f8>
   12f40:	add	r1, r0, #1
   12f44:	mov	fp, r0
   12f48:	mov	r0, r1
   12f4c:	str	r1, [sp, #36]	; 0x24
   12f50:	bl	15ff4 <abort@plt+0x52d4>
   12f54:	ldr	r3, [r4, #44]	; 0x2c
   12f58:	mov	r2, r8
   12f5c:	str	r3, [sp, #16]
   12f60:	ldr	r3, [r4, #40]	; 0x28
   12f64:	str	r5, [sp, #4]
   12f68:	str	r3, [sp, #12]
   12f6c:	str	sl, [sp, #8]
   12f70:	ldr	ip, [r4]
   12f74:	ldr	r1, [sp, #36]	; 0x24
   12f78:	mov	r3, r9
   12f7c:	str	ip, [sp]
   12f80:	str	r0, [sp, #32]
   12f84:	bl	11718 <abort@plt+0x9f8>
   12f88:	ldr	r2, [sp, #28]
   12f8c:	cmp	r6, #0
   12f90:	str	r2, [r7]
   12f94:	ldr	r0, [sp, #32]
   12f98:	strne	fp, [r6]
   12f9c:	add	sp, sp, #44	; 0x2c
   12fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fa4:	andeq	r8, r2, ip, lsr r1
   12fa8:	push	{r4, r5, r6, r7, r8, lr}
   12fac:	ldr	r6, [pc, #116]	; 13028 <abort@plt+0x2308>
   12fb0:	ldr	r3, [r6, #4]
   12fb4:	ldr	r7, [r6]
   12fb8:	cmp	r3, #1
   12fbc:	movgt	r5, r7
   12fc0:	movgt	r4, #1
   12fc4:	ble	12fe4 <abort@plt+0x22c4>
   12fc8:	ldr	r0, [r5, #12]
   12fcc:	bl	168a0 <abort@plt+0x5b80>
   12fd0:	ldr	r3, [r6, #4]
   12fd4:	add	r4, r4, #1
   12fd8:	cmp	r3, r4
   12fdc:	add	r5, r5, #8
   12fe0:	bgt	12fc8 <abort@plt+0x22a8>
   12fe4:	ldr	r0, [r7, #4]
   12fe8:	ldr	r4, [pc, #60]	; 1302c <abort@plt+0x230c>
   12fec:	cmp	r0, r4
   12ff0:	beq	13004 <abort@plt+0x22e4>
   12ff4:	bl	168a0 <abort@plt+0x5b80>
   12ff8:	mov	r3, #256	; 0x100
   12ffc:	str	r4, [r6, #12]
   13000:	str	r3, [r6, #8]
   13004:	ldr	r4, [pc, #36]	; 13030 <abort@plt+0x2310>
   13008:	cmp	r7, r4
   1300c:	beq	1301c <abort@plt+0x22fc>
   13010:	mov	r0, r7
   13014:	bl	168a0 <abort@plt+0x5b80>
   13018:	str	r4, [r6]
   1301c:	mov	r3, #1
   13020:	str	r3, [r6, #4]
   13024:	pop	{r4, r5, r6, r7, r8, pc}
   13028:	ldrdeq	r8, [r2], -r0
   1302c:	andeq	r8, r2, ip, ror #2
   13030:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13034:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13038:	sub	sp, sp, #44	; 0x2c
   1303c:	mov	r5, r0
   13040:	mov	sl, r1
   13044:	bl	10c84 <__errno_location@plt>
   13048:	ldr	r4, [pc, #400]	; 131e0 <abort@plt+0x24c0>
   1304c:	cmn	r5, #-2147483647	; 0x80000001
   13050:	ldr	r6, [r4]
   13054:	mov	r8, r0
   13058:	movne	r0, #0
   1305c:	moveq	r0, #1
   13060:	ldr	r3, [r8]
   13064:	orrs	r0, r0, r5, lsr #31
   13068:	str	r3, [sp, #24]
   1306c:	bne	131dc <abort@plt+0x24bc>
   13070:	ldr	r2, [r4, #4]
   13074:	cmp	r5, r2
   13078:	blt	130d8 <abort@plt+0x23b8>
   1307c:	add	r7, r4, #8
   13080:	cmp	r6, r7
   13084:	str	r2, [sp, #36]	; 0x24
   13088:	beq	131ac <abort@plt+0x248c>
   1308c:	mov	r3, #8
   13090:	sub	r2, r5, r2
   13094:	mov	r0, r6
   13098:	str	r3, [sp]
   1309c:	add	r2, r2, #1
   130a0:	mvn	r3, #-2147483648	; 0x80000000
   130a4:	add	r1, sp, #36	; 0x24
   130a8:	bl	16210 <abort@plt+0x54f0>
   130ac:	mov	r6, r0
   130b0:	str	r0, [r4]
   130b4:	ldr	r0, [r4, #4]
   130b8:	ldr	r2, [sp, #36]	; 0x24
   130bc:	mov	r1, #0
   130c0:	sub	r2, r2, r0
   130c4:	add	r0, r6, r0, lsl #3
   130c8:	lsl	r2, r2, #3
   130cc:	bl	10c9c <memset@plt>
   130d0:	ldr	r3, [sp, #36]	; 0x24
   130d4:	str	r3, [r4, #4]
   130d8:	ldr	r4, [pc, #260]	; 131e4 <abort@plt+0x24c4>
   130dc:	add	fp, r6, r5, lsl #3
   130e0:	ldr	r9, [r6, r5, lsl #3]
   130e4:	ldr	r0, [r4, #4]
   130e8:	ldr	r3, [r4]
   130ec:	ldr	r7, [fp, #4]
   130f0:	ldr	r1, [r4, #44]	; 0x2c
   130f4:	ldr	r2, [r4, #40]	; 0x28
   130f8:	orr	r0, r0, #1
   130fc:	str	r3, [sp]
   13100:	add	r3, r4, #8
   13104:	str	r0, [sp, #28]
   13108:	str	r0, [sp, #4]
   1310c:	str	r1, [sp, #16]
   13110:	str	r2, [sp, #12]
   13114:	str	r3, [sp, #8]
   13118:	mov	r0, r7
   1311c:	mov	r1, r9
   13120:	mvn	r3, #0
   13124:	mov	r2, sl
   13128:	bl	11718 <abort@plt+0x9f8>
   1312c:	cmp	r9, r0
   13130:	bhi	13198 <abort@plt+0x2478>
   13134:	add	r3, r4, #48	; 0x30
   13138:	add	r9, r0, #1
   1313c:	cmp	r7, r3
   13140:	str	r9, [r6, r5, lsl #3]
   13144:	beq	13150 <abort@plt+0x2430>
   13148:	mov	r0, r7
   1314c:	bl	168a0 <abort@plt+0x5b80>
   13150:	mov	r0, r9
   13154:	bl	15ff4 <abort@plt+0x52d4>
   13158:	ldr	ip, [r4, #44]	; 0x2c
   1315c:	ldr	r3, [r4]
   13160:	ldr	lr, [r4, #40]	; 0x28
   13164:	ldr	r4, [pc, #124]	; 131e8 <abort@plt+0x24c8>
   13168:	mov	r2, sl
   1316c:	mov	r1, r9
   13170:	str	r0, [fp, #4]
   13174:	str	r4, [sp, #8]
   13178:	ldr	r4, [sp, #28]
   1317c:	str	r3, [sp]
   13180:	str	r4, [sp, #4]
   13184:	str	ip, [sp, #16]
   13188:	str	lr, [sp, #12]
   1318c:	mvn	r3, #0
   13190:	mov	r7, r0
   13194:	bl	11718 <abort@plt+0x9f8>
   13198:	ldr	r3, [sp, #24]
   1319c:	mov	r0, r7
   131a0:	str	r3, [r8]
   131a4:	add	sp, sp, #44	; 0x2c
   131a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131ac:	mov	r3, #8
   131b0:	sub	r2, r5, r2
   131b4:	str	r3, [sp]
   131b8:	add	r1, sp, #36	; 0x24
   131bc:	add	r2, r2, #1
   131c0:	mvn	r3, #-2147483648	; 0x80000000
   131c4:	bl	16210 <abort@plt+0x54f0>
   131c8:	mov	r6, r0
   131cc:	ldm	r7, {r0, r1}
   131d0:	str	r6, [r4]
   131d4:	stm	r6, {r0, r1}
   131d8:	b	130b4 <abort@plt+0x2394>
   131dc:	bl	10d20 <abort@plt>
   131e0:	ldrdeq	r8, [r2], -r0
   131e4:	andeq	r8, r2, ip, lsr r1
   131e8:	andeq	r8, r2, r4, asr #2
   131ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131f0:	sub	sp, sp, #52	; 0x34
   131f4:	mov	r5, r0
   131f8:	mov	sl, r1
   131fc:	mov	fp, r2
   13200:	bl	10c84 <__errno_location@plt>
   13204:	ldr	r4, [pc, #408]	; 133a4 <abort@plt+0x2684>
   13208:	cmn	r5, #-2147483647	; 0x80000001
   1320c:	ldr	r6, [r4]
   13210:	mov	r8, r0
   13214:	movne	r0, #0
   13218:	moveq	r0, #1
   1321c:	ldr	r3, [r8]
   13220:	orrs	r0, r0, r5, lsr #31
   13224:	str	r3, [sp, #28]
   13228:	bne	133a0 <abort@plt+0x2680>
   1322c:	ldr	r2, [r4, #4]
   13230:	cmp	r5, r2
   13234:	blt	13294 <abort@plt+0x2574>
   13238:	add	r7, r4, #8
   1323c:	cmp	r6, r7
   13240:	str	r2, [sp, #44]	; 0x2c
   13244:	beq	13370 <abort@plt+0x2650>
   13248:	mov	r3, #8
   1324c:	sub	r2, r5, r2
   13250:	mov	r0, r6
   13254:	str	r3, [sp]
   13258:	add	r2, r2, #1
   1325c:	mvn	r3, #-2147483648	; 0x80000000
   13260:	add	r1, sp, #44	; 0x2c
   13264:	bl	16210 <abort@plt+0x54f0>
   13268:	mov	r6, r0
   1326c:	str	r0, [r4]
   13270:	ldr	r0, [r4, #4]
   13274:	ldr	r2, [sp, #44]	; 0x2c
   13278:	mov	r1, #0
   1327c:	sub	r2, r2, r0
   13280:	add	r0, r6, r0, lsl #3
   13284:	lsl	r2, r2, #3
   13288:	bl	10c9c <memset@plt>
   1328c:	ldr	r3, [sp, #44]	; 0x2c
   13290:	str	r3, [r4, #4]
   13294:	ldr	r4, [pc, #268]	; 133a8 <abort@plt+0x2688>
   13298:	add	r3, r6, r5, lsl #3
   1329c:	str	r3, [sp, #32]
   132a0:	ldr	r7, [r3, #4]
   132a4:	ldr	r0, [r4, #4]
   132a8:	ldr	r3, [r4]
   132ac:	ldr	r9, [r6, r5, lsl #3]
   132b0:	ldr	r1, [r4, #44]	; 0x2c
   132b4:	ldr	r2, [r4, #40]	; 0x28
   132b8:	orr	r0, r0, #1
   132bc:	str	r3, [sp]
   132c0:	add	r3, r4, #8
   132c4:	str	r0, [sp, #36]	; 0x24
   132c8:	str	r0, [sp, #4]
   132cc:	str	r1, [sp, #16]
   132d0:	str	r2, [sp, #12]
   132d4:	str	r3, [sp, #8]
   132d8:	mov	r0, r7
   132dc:	mov	r1, r9
   132e0:	mov	r3, fp
   132e4:	mov	r2, sl
   132e8:	bl	11718 <abort@plt+0x9f8>
   132ec:	cmp	r9, r0
   132f0:	bhi	1335c <abort@plt+0x263c>
   132f4:	add	r3, r4, #48	; 0x30
   132f8:	add	r9, r0, #1
   132fc:	cmp	r7, r3
   13300:	str	r9, [r6, r5, lsl #3]
   13304:	beq	13310 <abort@plt+0x25f0>
   13308:	mov	r0, r7
   1330c:	bl	168a0 <abort@plt+0x5b80>
   13310:	mov	r0, r9
   13314:	bl	15ff4 <abort@plt+0x52d4>
   13318:	ldr	ip, [sp, #32]
   1331c:	ldr	lr, [r4, #44]	; 0x2c
   13320:	ldr	r5, [r4, #40]	; 0x28
   13324:	mov	r3, fp
   13328:	mov	r2, sl
   1332c:	mov	r1, r9
   13330:	str	r0, [ip, #4]
   13334:	ldr	ip, [r4]
   13338:	ldr	r4, [pc, #108]	; 133ac <abort@plt+0x268c>
   1333c:	str	lr, [sp, #16]
   13340:	str	r4, [sp, #8]
   13344:	ldr	r4, [sp, #36]	; 0x24
   13348:	str	r5, [sp, #12]
   1334c:	str	r4, [sp, #4]
   13350:	str	ip, [sp]
   13354:	mov	r7, r0
   13358:	bl	11718 <abort@plt+0x9f8>
   1335c:	ldr	r3, [sp, #28]
   13360:	mov	r0, r7
   13364:	str	r3, [r8]
   13368:	add	sp, sp, #52	; 0x34
   1336c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13370:	mov	r3, #8
   13374:	sub	r2, r5, r2
   13378:	str	r3, [sp]
   1337c:	add	r1, sp, #44	; 0x2c
   13380:	add	r2, r2, #1
   13384:	mvn	r3, #-2147483648	; 0x80000000
   13388:	bl	16210 <abort@plt+0x54f0>
   1338c:	mov	r6, r0
   13390:	ldm	r7, {r0, r1}
   13394:	str	r6, [r4]
   13398:	stm	r6, {r0, r1}
   1339c:	b	13270 <abort@plt+0x2550>
   133a0:	bl	10d20 <abort@plt>
   133a4:	ldrdeq	r8, [r2], -r0
   133a8:	andeq	r8, r2, ip, lsr r1
   133ac:	andeq	r8, r2, r4, asr #2
   133b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133b4:	sub	sp, sp, #44	; 0x2c
   133b8:	mov	sl, r0
   133bc:	bl	10c84 <__errno_location@plt>
   133c0:	ldr	r4, [pc, #352]	; 13528 <abort@plt+0x2808>
   133c4:	ldr	r2, [r4, #4]
   133c8:	ldr	r5, [r4]
   133cc:	cmp	r2, #0
   133d0:	ldr	r3, [r0]
   133d4:	mov	r8, r0
   133d8:	str	r3, [sp, #28]
   133dc:	bgt	13438 <abort@plt+0x2718>
   133e0:	add	r6, r4, #8
   133e4:	cmp	r5, r6
   133e8:	str	r2, [sp, #36]	; 0x24
   133ec:	beq	134f8 <abort@plt+0x27d8>
   133f0:	mov	r3, #8
   133f4:	mov	r0, r5
   133f8:	str	r3, [sp]
   133fc:	rsb	r2, r2, #1
   13400:	mvn	r3, #-2147483648	; 0x80000000
   13404:	add	r1, sp, #36	; 0x24
   13408:	bl	16210 <abort@plt+0x54f0>
   1340c:	mov	r5, r0
   13410:	str	r0, [r4]
   13414:	ldr	r0, [r4, #4]
   13418:	ldr	r2, [sp, #36]	; 0x24
   1341c:	mov	r1, #0
   13420:	sub	r2, r2, r0
   13424:	add	r0, r5, r0, lsl #3
   13428:	lsl	r2, r2, #3
   1342c:	bl	10c9c <memset@plt>
   13430:	ldr	r3, [sp, #36]	; 0x24
   13434:	str	r3, [r4, #4]
   13438:	ldr	r4, [pc, #236]	; 1352c <abort@plt+0x280c>
   1343c:	ldr	r9, [r5]
   13440:	ldr	r6, [r5, #4]
   13444:	ldr	r7, [r4, #4]
   13448:	ldr	r1, [r4, #44]	; 0x2c
   1344c:	ldr	r2, [r4, #40]	; 0x28
   13450:	ldr	r3, [r4]
   13454:	orr	r7, r7, #1
   13458:	add	fp, r4, #8
   1345c:	str	r1, [sp, #16]
   13460:	str	r2, [sp, #12]
   13464:	str	r3, [sp]
   13468:	str	r7, [sp, #4]
   1346c:	str	fp, [sp, #8]
   13470:	mov	r1, r9
   13474:	mov	r0, r6
   13478:	mvn	r3, #0
   1347c:	mov	r2, sl
   13480:	bl	11718 <abort@plt+0x9f8>
   13484:	cmp	r9, r0
   13488:	bhi	134e4 <abort@plt+0x27c4>
   1348c:	add	r3, r4, #48	; 0x30
   13490:	add	r9, r0, #1
   13494:	cmp	r6, r3
   13498:	str	r9, [r5]
   1349c:	beq	134a8 <abort@plt+0x2788>
   134a0:	mov	r0, r6
   134a4:	bl	168a0 <abort@plt+0x5b80>
   134a8:	mov	r0, r9
   134ac:	bl	15ff4 <abort@plt+0x52d4>
   134b0:	ldr	ip, [r4, #44]	; 0x2c
   134b4:	ldr	r3, [r4]
   134b8:	ldr	lr, [r4, #40]	; 0x28
   134bc:	mov	r2, sl
   134c0:	mov	r1, r9
   134c4:	str	r0, [r5, #4]
   134c8:	str	r3, [sp]
   134cc:	stmib	sp, {r7, fp}
   134d0:	str	ip, [sp, #16]
   134d4:	str	lr, [sp, #12]
   134d8:	mvn	r3, #0
   134dc:	mov	r6, r0
   134e0:	bl	11718 <abort@plt+0x9f8>
   134e4:	ldr	r3, [sp, #28]
   134e8:	mov	r0, r6
   134ec:	str	r3, [r8]
   134f0:	add	sp, sp, #44	; 0x2c
   134f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134f8:	mov	r3, #8
   134fc:	str	r3, [sp]
   13500:	add	r1, sp, #36	; 0x24
   13504:	rsb	r2, r2, #1
   13508:	mvn	r3, #-2147483648	; 0x80000000
   1350c:	mov	r0, #0
   13510:	bl	16210 <abort@plt+0x54f0>
   13514:	mov	r5, r0
   13518:	ldm	r6, {r0, r1}
   1351c:	str	r5, [r4]
   13520:	stm	r5, {r0, r1}
   13524:	b	13414 <abort@plt+0x26f4>
   13528:	ldrdeq	r8, [r2], -r0
   1352c:	andeq	r8, r2, ip, lsr r1
   13530:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13534:	sub	sp, sp, #44	; 0x2c
   13538:	mov	r9, r0
   1353c:	mov	sl, r1
   13540:	bl	10c84 <__errno_location@plt>
   13544:	ldr	r4, [pc, #364]	; 136b8 <abort@plt+0x2998>
   13548:	ldr	r2, [r4, #4]
   1354c:	ldr	r5, [r4]
   13550:	cmp	r2, #0
   13554:	ldr	r3, [r0]
   13558:	mov	r7, r0
   1355c:	str	r3, [sp, #24]
   13560:	bgt	135bc <abort@plt+0x289c>
   13564:	add	r6, r4, #8
   13568:	cmp	r5, r6
   1356c:	str	r2, [sp, #36]	; 0x24
   13570:	beq	13688 <abort@plt+0x2968>
   13574:	mov	r3, #8
   13578:	mov	r0, r5
   1357c:	str	r3, [sp]
   13580:	rsb	r2, r2, #1
   13584:	mvn	r3, #-2147483648	; 0x80000000
   13588:	add	r1, sp, #36	; 0x24
   1358c:	bl	16210 <abort@plt+0x54f0>
   13590:	mov	r5, r0
   13594:	str	r0, [r4]
   13598:	ldr	r0, [r4, #4]
   1359c:	ldr	r2, [sp, #36]	; 0x24
   135a0:	mov	r1, #0
   135a4:	sub	r2, r2, r0
   135a8:	add	r0, r5, r0, lsl #3
   135ac:	lsl	r2, r2, #3
   135b0:	bl	10c9c <memset@plt>
   135b4:	ldr	r3, [sp, #36]	; 0x24
   135b8:	str	r3, [r4, #4]
   135bc:	ldr	r4, [pc, #248]	; 136bc <abort@plt+0x299c>
   135c0:	ldr	r8, [r5]
   135c4:	ldr	r6, [r5, #4]
   135c8:	ldr	r0, [r4, #4]
   135cc:	ldr	r1, [r4, #44]	; 0x2c
   135d0:	ldr	r2, [r4, #40]	; 0x28
   135d4:	ldr	r3, [r4]
   135d8:	orr	r0, r0, #1
   135dc:	add	fp, r4, #8
   135e0:	str	r0, [sp, #28]
   135e4:	str	r0, [sp, #4]
   135e8:	str	r1, [sp, #16]
   135ec:	str	r2, [sp, #12]
   135f0:	str	r3, [sp]
   135f4:	str	fp, [sp, #8]
   135f8:	mov	r1, r8
   135fc:	mov	r0, r6
   13600:	mov	r3, sl
   13604:	mov	r2, r9
   13608:	bl	11718 <abort@plt+0x9f8>
   1360c:	cmp	r8, r0
   13610:	bhi	13674 <abort@plt+0x2954>
   13614:	add	r3, r4, #48	; 0x30
   13618:	add	r8, r0, #1
   1361c:	cmp	r6, r3
   13620:	str	r8, [r5]
   13624:	beq	13630 <abort@plt+0x2910>
   13628:	mov	r0, r6
   1362c:	bl	168a0 <abort@plt+0x5b80>
   13630:	mov	r0, r8
   13634:	bl	15ff4 <abort@plt+0x52d4>
   13638:	ldr	lr, [r4, #44]	; 0x2c
   1363c:	ldr	ip, [r4]
   13640:	mov	r3, sl
   13644:	mov	r2, r9
   13648:	mov	r1, r8
   1364c:	str	r0, [r5, #4]
   13650:	ldr	r5, [r4, #40]	; 0x28
   13654:	ldr	r4, [sp, #28]
   13658:	str	fp, [sp, #8]
   1365c:	str	r4, [sp, #4]
   13660:	str	lr, [sp, #16]
   13664:	str	r5, [sp, #12]
   13668:	str	ip, [sp]
   1366c:	mov	r6, r0
   13670:	bl	11718 <abort@plt+0x9f8>
   13674:	ldr	r3, [sp, #24]
   13678:	mov	r0, r6
   1367c:	str	r3, [r7]
   13680:	add	sp, sp, #44	; 0x2c
   13684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13688:	mov	r3, #8
   1368c:	str	r3, [sp]
   13690:	add	r1, sp, #36	; 0x24
   13694:	rsb	r2, r2, #1
   13698:	mvn	r3, #-2147483648	; 0x80000000
   1369c:	mov	r0, #0
   136a0:	bl	16210 <abort@plt+0x54f0>
   136a4:	mov	r5, r0
   136a8:	ldm	r6, {r0, r1}
   136ac:	str	r5, [r4]
   136b0:	stm	r5, {r0, r1}
   136b4:	b	13598 <abort@plt+0x2878>
   136b8:	ldrdeq	r8, [r2], -r0
   136bc:	andeq	r8, r2, ip, lsr r1
   136c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136c4:	sub	sp, sp, #132	; 0x84
   136c8:	mov	r5, r1
   136cc:	mov	r4, r0
   136d0:	mov	r9, r2
   136d4:	add	r0, sp, #80	; 0x50
   136d8:	mov	r2, #48	; 0x30
   136dc:	mov	r1, #0
   136e0:	bl	10c9c <memset@plt>
   136e4:	cmp	r5, #10
   136e8:	beq	138a0 <abort@plt+0x2b80>
   136ec:	add	lr, sp, #80	; 0x50
   136f0:	str	r5, [sp, #80]	; 0x50
   136f4:	ldm	lr!, {r0, r1, r2, r3}
   136f8:	add	ip, sp, #32
   136fc:	ldr	r6, [pc, #416]	; 138a4 <abort@plt+0x2b84>
   13700:	stmia	ip!, {r0, r1, r2, r3}
   13704:	ldm	lr!, {r0, r1, r2, r3}
   13708:	stmia	ip!, {r0, r1, r2, r3}
   1370c:	ldm	lr, {r0, r1, r2, r3}
   13710:	stm	ip, {r0, r1, r2, r3}
   13714:	bl	10c84 <__errno_location@plt>
   13718:	cmn	r4, #-2147483647	; 0x80000001
   1371c:	ldr	r5, [r6]
   13720:	mov	r7, r0
   13724:	movne	r0, #0
   13728:	moveq	r0, #1
   1372c:	ldr	r3, [r7]
   13730:	orrs	r0, r0, r4, lsr #31
   13734:	str	r3, [sp, #24]
   13738:	bne	138a0 <abort@plt+0x2b80>
   1373c:	ldr	r2, [r6, #4]
   13740:	cmp	r4, r2
   13744:	blt	137a4 <abort@plt+0x2a84>
   13748:	add	r8, r6, #8
   1374c:	cmp	r5, r8
   13750:	str	r2, [sp, #80]	; 0x50
   13754:	beq	13870 <abort@plt+0x2b50>
   13758:	mov	r3, #8
   1375c:	sub	r2, r4, r2
   13760:	mov	r0, r5
   13764:	str	r3, [sp]
   13768:	add	r2, r2, #1
   1376c:	add	r1, sp, #80	; 0x50
   13770:	mvn	r3, #-2147483648	; 0x80000000
   13774:	bl	16210 <abort@plt+0x54f0>
   13778:	mov	r5, r0
   1377c:	str	r0, [r6]
   13780:	ldr	r0, [r6, #4]
   13784:	ldr	r2, [sp, #80]	; 0x50
   13788:	mov	r1, #0
   1378c:	sub	r2, r2, r0
   13790:	add	r0, r5, r0, lsl #3
   13794:	lsl	r2, r2, #3
   13798:	bl	10c9c <memset@plt>
   1379c:	ldr	r3, [sp, #80]	; 0x50
   137a0:	str	r3, [r6, #4]
   137a4:	add	fp, r5, r4, lsl #3
   137a8:	ldr	r1, [sp, #36]	; 0x24
   137ac:	ldr	r8, [r5, r4, lsl #3]
   137b0:	ldr	r6, [fp, #4]
   137b4:	ldr	r2, [sp, #72]	; 0x48
   137b8:	ldr	r3, [sp, #32]
   137bc:	ldr	ip, [sp, #76]	; 0x4c
   137c0:	orr	r1, r1, #1
   137c4:	add	sl, sp, #40	; 0x28
   137c8:	str	r1, [sp, #28]
   137cc:	str	r1, [sp, #4]
   137d0:	str	r2, [sp, #12]
   137d4:	str	r3, [sp]
   137d8:	mov	r0, r6
   137dc:	mov	r1, r8
   137e0:	str	ip, [sp, #16]
   137e4:	str	sl, [sp, #8]
   137e8:	mvn	r3, #0
   137ec:	mov	r2, r9
   137f0:	bl	11718 <abort@plt+0x9f8>
   137f4:	cmp	r8, r0
   137f8:	bhi	1385c <abort@plt+0x2b3c>
   137fc:	ldr	r3, [pc, #164]	; 138a8 <abort@plt+0x2b88>
   13800:	add	r8, r0, #1
   13804:	cmp	r6, r3
   13808:	str	r8, [r5, r4, lsl #3]
   1380c:	beq	13818 <abort@plt+0x2af8>
   13810:	mov	r0, r6
   13814:	bl	168a0 <abort@plt+0x5b80>
   13818:	mov	r0, r8
   1381c:	bl	15ff4 <abort@plt+0x52d4>
   13820:	ldr	lr, [sp, #76]	; 0x4c
   13824:	ldr	r3, [sp, #32]
   13828:	ldr	ip, [sp, #72]	; 0x48
   1382c:	ldr	r4, [sp, #28]
   13830:	mov	r2, r9
   13834:	mov	r1, r8
   13838:	str	r0, [fp, #4]
   1383c:	str	r3, [sp]
   13840:	str	sl, [sp, #8]
   13844:	str	r4, [sp, #4]
   13848:	str	lr, [sp, #16]
   1384c:	str	ip, [sp, #12]
   13850:	mvn	r3, #0
   13854:	mov	r6, r0
   13858:	bl	11718 <abort@plt+0x9f8>
   1385c:	ldr	r3, [sp, #24]
   13860:	mov	r0, r6
   13864:	str	r3, [r7]
   13868:	add	sp, sp, #132	; 0x84
   1386c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13870:	mov	r3, #8
   13874:	sub	r2, r4, r2
   13878:	add	r1, sp, #80	; 0x50
   1387c:	str	r3, [sp]
   13880:	add	r2, r2, #1
   13884:	mvn	r3, #-2147483648	; 0x80000000
   13888:	bl	16210 <abort@plt+0x54f0>
   1388c:	mov	r5, r0
   13890:	ldm	r8, {r0, r1}
   13894:	str	r5, [r6]
   13898:	stm	r5, {r0, r1}
   1389c:	b	13780 <abort@plt+0x2a60>
   138a0:	bl	10d20 <abort@plt>
   138a4:	ldrdeq	r8, [r2], -r0
   138a8:	andeq	r8, r2, ip, ror #2
   138ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138b0:	sub	sp, sp, #132	; 0x84
   138b4:	mov	r5, r1
   138b8:	mov	r4, r0
   138bc:	mov	r9, r2
   138c0:	add	r0, sp, #80	; 0x50
   138c4:	mov	r2, #48	; 0x30
   138c8:	mov	r1, #0
   138cc:	mov	sl, r3
   138d0:	bl	10c9c <memset@plt>
   138d4:	cmp	r5, #10
   138d8:	beq	13a94 <abort@plt+0x2d74>
   138dc:	add	lr, sp, #80	; 0x50
   138e0:	str	r5, [sp, #80]	; 0x50
   138e4:	ldm	lr!, {r0, r1, r2, r3}
   138e8:	add	ip, sp, #32
   138ec:	ldr	r6, [pc, #420]	; 13a98 <abort@plt+0x2d78>
   138f0:	stmia	ip!, {r0, r1, r2, r3}
   138f4:	ldm	lr!, {r0, r1, r2, r3}
   138f8:	stmia	ip!, {r0, r1, r2, r3}
   138fc:	ldm	lr, {r0, r1, r2, r3}
   13900:	stm	ip, {r0, r1, r2, r3}
   13904:	bl	10c84 <__errno_location@plt>
   13908:	cmn	r4, #-2147483647	; 0x80000001
   1390c:	ldr	r5, [r6]
   13910:	mov	r7, r0
   13914:	movne	r0, #0
   13918:	moveq	r0, #1
   1391c:	ldr	r3, [r7]
   13920:	orrs	r0, r0, r4, lsr #31
   13924:	str	r3, [sp, #24]
   13928:	bne	13a94 <abort@plt+0x2d74>
   1392c:	ldr	r2, [r6, #4]
   13930:	cmp	r4, r2
   13934:	blt	13994 <abort@plt+0x2c74>
   13938:	add	r8, r6, #8
   1393c:	cmp	r5, r8
   13940:	str	r2, [sp, #80]	; 0x50
   13944:	beq	13a64 <abort@plt+0x2d44>
   13948:	mov	r3, #8
   1394c:	sub	r2, r4, r2
   13950:	mov	r0, r5
   13954:	str	r3, [sp]
   13958:	add	r2, r2, #1
   1395c:	add	r1, sp, #80	; 0x50
   13960:	mvn	r3, #-2147483648	; 0x80000000
   13964:	bl	16210 <abort@plt+0x54f0>
   13968:	mov	r5, r0
   1396c:	str	r0, [r6]
   13970:	ldr	r0, [r6, #4]
   13974:	ldr	r2, [sp, #80]	; 0x50
   13978:	mov	r1, #0
   1397c:	sub	r2, r2, r0
   13980:	add	r0, r5, r0, lsl #3
   13984:	lsl	r2, r2, #3
   13988:	bl	10c9c <memset@plt>
   1398c:	ldr	r3, [sp, #80]	; 0x50
   13990:	str	r3, [r6, #4]
   13994:	add	fp, r5, r4, lsl #3
   13998:	ldr	r3, [sp, #32]
   1399c:	ldr	r1, [sp, #36]	; 0x24
   139a0:	ldr	r8, [r5, r4, lsl #3]
   139a4:	ldr	r6, [fp, #4]
   139a8:	ldr	r2, [sp, #72]	; 0x48
   139ac:	ldr	ip, [sp, #76]	; 0x4c
   139b0:	orr	r1, r1, #1
   139b4:	str	r3, [sp]
   139b8:	add	r3, sp, #40	; 0x28
   139bc:	str	r1, [sp, #28]
   139c0:	str	r1, [sp, #4]
   139c4:	str	r2, [sp, #12]
   139c8:	str	r3, [sp, #8]
   139cc:	mov	r0, r6
   139d0:	mov	r1, r8
   139d4:	str	ip, [sp, #16]
   139d8:	mov	r3, sl
   139dc:	mov	r2, r9
   139e0:	bl	11718 <abort@plt+0x9f8>
   139e4:	cmp	r8, r0
   139e8:	bhi	13a50 <abort@plt+0x2d30>
   139ec:	ldr	r3, [pc, #168]	; 13a9c <abort@plt+0x2d7c>
   139f0:	add	r8, r0, #1
   139f4:	cmp	r6, r3
   139f8:	str	r8, [r5, r4, lsl #3]
   139fc:	beq	13a08 <abort@plt+0x2ce8>
   13a00:	mov	r0, r6
   13a04:	bl	168a0 <abort@plt+0x5b80>
   13a08:	mov	r0, r8
   13a0c:	bl	15ff4 <abort@plt+0x52d4>
   13a10:	add	lr, sp, #40	; 0x28
   13a14:	ldr	ip, [sp, #76]	; 0x4c
   13a18:	ldr	r4, [sp, #72]	; 0x48
   13a1c:	ldr	r5, [sp, #28]
   13a20:	mov	r3, sl
   13a24:	mov	r2, r9
   13a28:	mov	r1, r8
   13a2c:	str	r0, [fp, #4]
   13a30:	str	lr, [sp, #8]
   13a34:	ldr	lr, [sp, #32]
   13a38:	str	r5, [sp, #4]
   13a3c:	str	ip, [sp, #16]
   13a40:	str	r4, [sp, #12]
   13a44:	str	lr, [sp]
   13a48:	mov	r6, r0
   13a4c:	bl	11718 <abort@plt+0x9f8>
   13a50:	ldr	r3, [sp, #24]
   13a54:	mov	r0, r6
   13a58:	str	r3, [r7]
   13a5c:	add	sp, sp, #132	; 0x84
   13a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a64:	mov	r3, #8
   13a68:	sub	r2, r4, r2
   13a6c:	add	r1, sp, #80	; 0x50
   13a70:	str	r3, [sp]
   13a74:	add	r2, r2, #1
   13a78:	mvn	r3, #-2147483648	; 0x80000000
   13a7c:	bl	16210 <abort@plt+0x54f0>
   13a80:	mov	r5, r0
   13a84:	ldm	r8, {r0, r1}
   13a88:	str	r5, [r6]
   13a8c:	stm	r5, {r0, r1}
   13a90:	b	13970 <abort@plt+0x2c50>
   13a94:	bl	10d20 <abort@plt>
   13a98:	ldrdeq	r8, [r2], -r0
   13a9c:	andeq	r8, r2, ip, ror #2
   13aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13aa4:	sub	sp, sp, #124	; 0x7c
   13aa8:	mov	r4, r0
   13aac:	mov	r9, r1
   13ab0:	add	r0, sp, #72	; 0x48
   13ab4:	mov	r2, #48	; 0x30
   13ab8:	mov	r1, #0
   13abc:	bl	10c9c <memset@plt>
   13ac0:	cmp	r4, #10
   13ac4:	beq	13c50 <abort@plt+0x2f30>
   13ac8:	add	lr, sp, #72	; 0x48
   13acc:	str	r4, [sp, #72]	; 0x48
   13ad0:	ldm	lr!, {r0, r1, r2, r3}
   13ad4:	add	ip, sp, #24
   13ad8:	ldr	r5, [pc, #372]	; 13c54 <abort@plt+0x2f34>
   13adc:	stmia	ip!, {r0, r1, r2, r3}
   13ae0:	ldm	lr!, {r0, r1, r2, r3}
   13ae4:	stmia	ip!, {r0, r1, r2, r3}
   13ae8:	ldm	lr, {r0, r1, r2, r3}
   13aec:	stm	ip, {r0, r1, r2, r3}
   13af0:	bl	10c84 <__errno_location@plt>
   13af4:	ldr	r2, [r5, #4]
   13af8:	ldr	r4, [r5]
   13afc:	cmp	r2, #0
   13b00:	mov	r7, r0
   13b04:	ldr	fp, [r0]
   13b08:	bgt	13b64 <abort@plt+0x2e44>
   13b0c:	add	r6, r5, #8
   13b10:	cmp	r4, r6
   13b14:	str	r2, [sp, #72]	; 0x48
   13b18:	beq	13c20 <abort@plt+0x2f00>
   13b1c:	mov	r3, #8
   13b20:	mov	r0, r4
   13b24:	str	r3, [sp]
   13b28:	rsb	r2, r2, #1
   13b2c:	add	r1, sp, #72	; 0x48
   13b30:	mvn	r3, #-2147483648	; 0x80000000
   13b34:	bl	16210 <abort@plt+0x54f0>
   13b38:	mov	r4, r0
   13b3c:	str	r0, [r5]
   13b40:	ldr	r0, [r5, #4]
   13b44:	ldr	r2, [sp, #72]	; 0x48
   13b48:	mov	r1, #0
   13b4c:	sub	r2, r2, r0
   13b50:	add	r0, r4, r0, lsl #3
   13b54:	lsl	r2, r2, #3
   13b58:	bl	10c9c <memset@plt>
   13b5c:	ldr	r3, [sp, #72]	; 0x48
   13b60:	str	r3, [r5, #4]
   13b64:	ldr	r6, [sp, #28]
   13b68:	ldr	r8, [r4]
   13b6c:	ldr	r5, [r4, #4]
   13b70:	ldr	r2, [sp, #64]	; 0x40
   13b74:	ldr	r3, [sp, #24]
   13b78:	ldr	ip, [sp, #68]	; 0x44
   13b7c:	orr	r6, r6, #1
   13b80:	add	sl, sp, #32
   13b84:	str	r2, [sp, #12]
   13b88:	str	r3, [sp]
   13b8c:	str	r6, [sp, #4]
   13b90:	mov	r1, r8
   13b94:	mov	r0, r5
   13b98:	str	ip, [sp, #16]
   13b9c:	str	sl, [sp, #8]
   13ba0:	mvn	r3, #0
   13ba4:	mov	r2, r9
   13ba8:	bl	11718 <abort@plt+0x9f8>
   13bac:	cmp	r8, r0
   13bb0:	bhi	13c10 <abort@plt+0x2ef0>
   13bb4:	ldr	r3, [pc, #156]	; 13c58 <abort@plt+0x2f38>
   13bb8:	add	r8, r0, #1
   13bbc:	cmp	r5, r3
   13bc0:	str	r8, [r4]
   13bc4:	beq	13bd0 <abort@plt+0x2eb0>
   13bc8:	mov	r0, r5
   13bcc:	bl	168a0 <abort@plt+0x5b80>
   13bd0:	mov	r0, r8
   13bd4:	bl	15ff4 <abort@plt+0x52d4>
   13bd8:	ldr	lr, [sp, #68]	; 0x44
   13bdc:	ldr	r3, [sp, #24]
   13be0:	ldr	ip, [sp, #64]	; 0x40
   13be4:	mov	r2, r9
   13be8:	mov	r1, r8
   13bec:	str	r0, [r4, #4]
   13bf0:	str	r3, [sp]
   13bf4:	str	sl, [sp, #8]
   13bf8:	str	r6, [sp, #4]
   13bfc:	str	lr, [sp, #16]
   13c00:	str	ip, [sp, #12]
   13c04:	mvn	r3, #0
   13c08:	mov	r5, r0
   13c0c:	bl	11718 <abort@plt+0x9f8>
   13c10:	mov	r0, r5
   13c14:	str	fp, [r7]
   13c18:	add	sp, sp, #124	; 0x7c
   13c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c20:	mov	r3, #8
   13c24:	add	r1, sp, #72	; 0x48
   13c28:	str	r3, [sp]
   13c2c:	rsb	r2, r2, #1
   13c30:	mvn	r3, #-2147483648	; 0x80000000
   13c34:	mov	r0, #0
   13c38:	bl	16210 <abort@plt+0x54f0>
   13c3c:	mov	r4, r0
   13c40:	ldm	r6, {r0, r1}
   13c44:	str	r4, [r5]
   13c48:	stm	r4, {r0, r1}
   13c4c:	b	13b40 <abort@plt+0x2e20>
   13c50:	bl	10d20 <abort@plt>
   13c54:	ldrdeq	r8, [r2], -r0
   13c58:	andeq	r8, r2, ip, ror #2
   13c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c60:	sub	sp, sp, #132	; 0x84
   13c64:	mov	r4, r0
   13c68:	mov	r9, r1
   13c6c:	mov	sl, r2
   13c70:	add	r0, sp, #80	; 0x50
   13c74:	mov	r2, #48	; 0x30
   13c78:	mov	r1, #0
   13c7c:	bl	10c9c <memset@plt>
   13c80:	cmp	r4, #10
   13c84:	beq	13e18 <abort@plt+0x30f8>
   13c88:	add	lr, sp, #80	; 0x50
   13c8c:	str	r4, [sp, #80]	; 0x50
   13c90:	ldm	lr!, {r0, r1, r2, r3}
   13c94:	add	ip, sp, #32
   13c98:	ldr	r5, [pc, #380]	; 13e1c <abort@plt+0x30fc>
   13c9c:	stmia	ip!, {r0, r1, r2, r3}
   13ca0:	ldm	lr!, {r0, r1, r2, r3}
   13ca4:	stmia	ip!, {r0, r1, r2, r3}
   13ca8:	ldm	lr, {r0, r1, r2, r3}
   13cac:	stm	ip, {r0, r1, r2, r3}
   13cb0:	bl	10c84 <__errno_location@plt>
   13cb4:	ldr	r2, [r5, #4]
   13cb8:	ldr	r4, [r5]
   13cbc:	cmp	r2, #0
   13cc0:	ldr	r3, [r0]
   13cc4:	mov	r7, r0
   13cc8:	str	r3, [sp, #28]
   13ccc:	bgt	13d28 <abort@plt+0x3008>
   13cd0:	add	r6, r5, #8
   13cd4:	cmp	r4, r6
   13cd8:	str	r2, [sp, #80]	; 0x50
   13cdc:	beq	13de8 <abort@plt+0x30c8>
   13ce0:	mov	r3, #8
   13ce4:	mov	r0, r4
   13ce8:	str	r3, [sp]
   13cec:	rsb	r2, r2, #1
   13cf0:	add	r1, sp, #80	; 0x50
   13cf4:	mvn	r3, #-2147483648	; 0x80000000
   13cf8:	bl	16210 <abort@plt+0x54f0>
   13cfc:	mov	r4, r0
   13d00:	str	r0, [r5]
   13d04:	ldr	r0, [r5, #4]
   13d08:	ldr	r2, [sp, #80]	; 0x50
   13d0c:	mov	r1, #0
   13d10:	sub	r2, r2, r0
   13d14:	add	r0, r4, r0, lsl #3
   13d18:	lsl	r2, r2, #3
   13d1c:	bl	10c9c <memset@plt>
   13d20:	ldr	r3, [sp, #80]	; 0x50
   13d24:	str	r3, [r5, #4]
   13d28:	ldr	r6, [sp, #36]	; 0x24
   13d2c:	ldr	r8, [r4]
   13d30:	ldr	r5, [r4, #4]
   13d34:	ldr	r2, [sp, #72]	; 0x48
   13d38:	ldr	r3, [sp, #32]
   13d3c:	ldr	ip, [sp, #76]	; 0x4c
   13d40:	orr	r6, r6, #1
   13d44:	add	fp, sp, #40	; 0x28
   13d48:	str	r2, [sp, #12]
   13d4c:	str	r3, [sp]
   13d50:	str	r6, [sp, #4]
   13d54:	mov	r1, r8
   13d58:	mov	r0, r5
   13d5c:	str	ip, [sp, #16]
   13d60:	str	fp, [sp, #8]
   13d64:	mov	r3, sl
   13d68:	mov	r2, r9
   13d6c:	bl	11718 <abort@plt+0x9f8>
   13d70:	cmp	r8, r0
   13d74:	bhi	13dd4 <abort@plt+0x30b4>
   13d78:	ldr	r3, [pc, #160]	; 13e20 <abort@plt+0x3100>
   13d7c:	add	r8, r0, #1
   13d80:	cmp	r5, r3
   13d84:	str	r8, [r4]
   13d88:	beq	13d94 <abort@plt+0x3074>
   13d8c:	mov	r0, r5
   13d90:	bl	168a0 <abort@plt+0x5b80>
   13d94:	mov	r0, r8
   13d98:	bl	15ff4 <abort@plt+0x52d4>
   13d9c:	ldr	ip, [sp, #76]	; 0x4c
   13da0:	ldr	lr, [sp, #32]
   13da4:	mov	r3, sl
   13da8:	mov	r2, r9
   13dac:	mov	r1, r8
   13db0:	str	r0, [r4, #4]
   13db4:	ldr	r4, [sp, #72]	; 0x48
   13db8:	str	fp, [sp, #8]
   13dbc:	str	r6, [sp, #4]
   13dc0:	str	ip, [sp, #16]
   13dc4:	str	r4, [sp, #12]
   13dc8:	str	lr, [sp]
   13dcc:	mov	r5, r0
   13dd0:	bl	11718 <abort@plt+0x9f8>
   13dd4:	ldr	r3, [sp, #28]
   13dd8:	mov	r0, r5
   13ddc:	str	r3, [r7]
   13de0:	add	sp, sp, #132	; 0x84
   13de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13de8:	mov	r3, #8
   13dec:	add	r1, sp, #80	; 0x50
   13df0:	str	r3, [sp]
   13df4:	rsb	r2, r2, #1
   13df8:	mvn	r3, #-2147483648	; 0x80000000
   13dfc:	mov	r0, #0
   13e00:	bl	16210 <abort@plt+0x54f0>
   13e04:	mov	r4, r0
   13e08:	ldm	r6, {r0, r1}
   13e0c:	str	r4, [r5]
   13e10:	stm	r4, {r0, r1}
   13e14:	b	13d04 <abort@plt+0x2fe4>
   13e18:	bl	10d20 <abort@plt>
   13e1c:	ldrdeq	r8, [r2], -r0
   13e20:	andeq	r8, r2, ip, ror #2
   13e24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e28:	mov	r4, r2
   13e2c:	ldr	lr, [pc, #432]	; 13fe4 <abort@plt+0x32c4>
   13e30:	mov	sl, r0
   13e34:	mov	fp, r1
   13e38:	ldm	lr!, {r0, r1, r2, r3}
   13e3c:	sub	sp, sp, #92	; 0x5c
   13e40:	add	ip, sp, #40	; 0x28
   13e44:	lsr	r7, r4, #5
   13e48:	stmia	ip!, {r0, r1, r2, r3}
   13e4c:	add	r6, sp, #48	; 0x30
   13e50:	ldm	lr!, {r0, r1, r2, r3}
   13e54:	and	r4, r4, #31
   13e58:	ldr	r5, [pc, #392]	; 13fe8 <abort@plt+0x32c8>
   13e5c:	stmia	ip!, {r0, r1, r2, r3}
   13e60:	ldm	lr, {r0, r1, r2, r3}
   13e64:	stm	ip, {r0, r1, r2, r3}
   13e68:	ldr	r2, [r6, r7, lsl #2]
   13e6c:	lsr	r3, r2, r4
   13e70:	eor	r3, r3, #1
   13e74:	and	r3, r3, #1
   13e78:	eor	r4, r2, r3, lsl r4
   13e7c:	str	r4, [r6, r7, lsl #2]
   13e80:	bl	10c84 <__errno_location@plt>
   13e84:	ldr	r2, [r5, #4]
   13e88:	ldr	r4, [r5]
   13e8c:	cmp	r2, #0
   13e90:	ldr	r3, [r0]
   13e94:	mov	r8, r0
   13e98:	str	r3, [sp, #28]
   13e9c:	bgt	13ef8 <abort@plt+0x31d8>
   13ea0:	add	r7, r5, #8
   13ea4:	cmp	r4, r7
   13ea8:	str	r2, [sp, #36]	; 0x24
   13eac:	beq	13fb4 <abort@plt+0x3294>
   13eb0:	mov	r3, #8
   13eb4:	mov	r0, r4
   13eb8:	str	r3, [sp]
   13ebc:	rsb	r2, r2, #1
   13ec0:	mvn	r3, #-2147483648	; 0x80000000
   13ec4:	add	r1, sp, #36	; 0x24
   13ec8:	bl	16210 <abort@plt+0x54f0>
   13ecc:	mov	r4, r0
   13ed0:	str	r0, [r5]
   13ed4:	ldr	r0, [r5, #4]
   13ed8:	ldr	r2, [sp, #36]	; 0x24
   13edc:	mov	r1, #0
   13ee0:	sub	r2, r2, r0
   13ee4:	add	r0, r4, r0, lsl #3
   13ee8:	lsl	r2, r2, #3
   13eec:	bl	10c9c <memset@plt>
   13ef0:	ldr	r3, [sp, #36]	; 0x24
   13ef4:	str	r3, [r5, #4]
   13ef8:	ldr	r7, [sp, #44]	; 0x2c
   13efc:	ldr	r9, [r4]
   13f00:	ldr	r5, [r4, #4]
   13f04:	ldr	r2, [sp, #80]	; 0x50
   13f08:	ldr	r3, [sp, #40]	; 0x28
   13f0c:	ldr	ip, [sp, #84]	; 0x54
   13f10:	orr	r7, r7, #1
   13f14:	str	r2, [sp, #12]
   13f18:	str	r3, [sp]
   13f1c:	str	r7, [sp, #4]
   13f20:	str	r6, [sp, #8]
   13f24:	mov	r1, r9
   13f28:	mov	r0, r5
   13f2c:	str	ip, [sp, #16]
   13f30:	mov	r3, fp
   13f34:	mov	r2, sl
   13f38:	bl	11718 <abort@plt+0x9f8>
   13f3c:	cmp	r9, r0
   13f40:	bhi	13fa0 <abort@plt+0x3280>
   13f44:	ldr	r3, [pc, #160]	; 13fec <abort@plt+0x32cc>
   13f48:	add	r9, r0, #1
   13f4c:	cmp	r5, r3
   13f50:	str	r9, [r4]
   13f54:	beq	13f60 <abort@plt+0x3240>
   13f58:	mov	r0, r5
   13f5c:	bl	168a0 <abort@plt+0x5b80>
   13f60:	mov	r0, r9
   13f64:	bl	15ff4 <abort@plt+0x52d4>
   13f68:	ldr	ip, [sp, #84]	; 0x54
   13f6c:	ldr	lr, [sp, #40]	; 0x28
   13f70:	mov	r3, fp
   13f74:	mov	r2, sl
   13f78:	mov	r1, r9
   13f7c:	str	r0, [r4, #4]
   13f80:	ldr	r4, [sp, #80]	; 0x50
   13f84:	str	r6, [sp, #8]
   13f88:	str	r7, [sp, #4]
   13f8c:	str	ip, [sp, #16]
   13f90:	str	r4, [sp, #12]
   13f94:	str	lr, [sp]
   13f98:	mov	r5, r0
   13f9c:	bl	11718 <abort@plt+0x9f8>
   13fa0:	ldr	r3, [sp, #28]
   13fa4:	mov	r0, r5
   13fa8:	str	r3, [r8]
   13fac:	add	sp, sp, #92	; 0x5c
   13fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fb4:	mov	r3, #8
   13fb8:	str	r3, [sp]
   13fbc:	add	r1, sp, #36	; 0x24
   13fc0:	rsb	r2, r2, #1
   13fc4:	mvn	r3, #-2147483648	; 0x80000000
   13fc8:	mov	r0, #0
   13fcc:	bl	16210 <abort@plt+0x54f0>
   13fd0:	mov	r4, r0
   13fd4:	ldm	r7, {r0, r1}
   13fd8:	str	r4, [r5]
   13fdc:	stm	r4, {r0, r1}
   13fe0:	b	13ed4 <abort@plt+0x31b4>
   13fe4:	andeq	r8, r2, ip, lsr r1
   13fe8:	ldrdeq	r8, [r2], -r0
   13fec:	andeq	r8, r2, ip, ror #2
   13ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ff4:	mov	r4, r1
   13ff8:	ldr	lr, [pc, #420]	; 141a4 <abort@plt+0x3484>
   13ffc:	mov	r6, r0
   14000:	sub	sp, sp, #84	; 0x54
   14004:	ldm	lr!, {r0, r1, r2, r3}
   14008:	add	ip, sp, #32
   1400c:	lsr	r8, r4, #5
   14010:	add	r5, sp, #40	; 0x28
   14014:	stmia	ip!, {r0, r1, r2, r3}
   14018:	and	r4, r4, #31
   1401c:	ldm	lr!, {r0, r1, r2, r3}
   14020:	ldr	r7, [pc, #384]	; 141a8 <abort@plt+0x3488>
   14024:	stmia	ip!, {r0, r1, r2, r3}
   14028:	ldm	lr, {r0, r1, r2, r3}
   1402c:	stm	ip, {r0, r1, r2, r3}
   14030:	ldr	r2, [r5, r8, lsl #2]
   14034:	lsr	r3, r2, r4
   14038:	eor	r3, r3, #1
   1403c:	and	r3, r3, #1
   14040:	eor	r4, r2, r3, lsl r4
   14044:	str	r4, [r5, r8, lsl #2]
   14048:	bl	10c84 <__errno_location@plt>
   1404c:	ldr	r2, [r7, #4]
   14050:	ldr	r4, [r7]
   14054:	cmp	r2, #0
   14058:	mov	r9, r0
   1405c:	ldr	sl, [r0]
   14060:	bgt	140bc <abort@plt+0x339c>
   14064:	add	r8, r7, #8
   14068:	cmp	r4, r8
   1406c:	str	r2, [sp, #28]
   14070:	beq	14174 <abort@plt+0x3454>
   14074:	mov	r3, #8
   14078:	mov	r0, r4
   1407c:	str	r3, [sp]
   14080:	rsb	r2, r2, #1
   14084:	mvn	r3, #-2147483648	; 0x80000000
   14088:	add	r1, sp, #28
   1408c:	bl	16210 <abort@plt+0x54f0>
   14090:	mov	r4, r0
   14094:	str	r0, [r7]
   14098:	ldr	r0, [r7, #4]
   1409c:	ldr	r2, [sp, #28]
   140a0:	mov	r1, #0
   140a4:	sub	r2, r2, r0
   140a8:	add	r0, r4, r0, lsl #3
   140ac:	lsl	r2, r2, #3
   140b0:	bl	10c9c <memset@plt>
   140b4:	ldr	r3, [sp, #28]
   140b8:	str	r3, [r7, #4]
   140bc:	ldr	r8, [sp, #36]	; 0x24
   140c0:	ldr	fp, [r4]
   140c4:	ldr	r7, [r4, #4]
   140c8:	ldr	r2, [sp, #72]	; 0x48
   140cc:	ldr	r3, [sp, #32]
   140d0:	ldr	ip, [sp, #76]	; 0x4c
   140d4:	orr	r8, r8, #1
   140d8:	str	r2, [sp, #12]
   140dc:	str	r3, [sp]
   140e0:	str	r8, [sp, #4]
   140e4:	str	r5, [sp, #8]
   140e8:	mov	r1, fp
   140ec:	mov	r0, r7
   140f0:	str	ip, [sp, #16]
   140f4:	mvn	r3, #0
   140f8:	mov	r2, r6
   140fc:	bl	11718 <abort@plt+0x9f8>
   14100:	cmp	fp, r0
   14104:	bhi	14164 <abort@plt+0x3444>
   14108:	ldr	r3, [pc, #156]	; 141ac <abort@plt+0x348c>
   1410c:	add	fp, r0, #1
   14110:	cmp	r7, r3
   14114:	str	fp, [r4]
   14118:	beq	14124 <abort@plt+0x3404>
   1411c:	mov	r0, r7
   14120:	bl	168a0 <abort@plt+0x5b80>
   14124:	mov	r0, fp
   14128:	bl	15ff4 <abort@plt+0x52d4>
   1412c:	ldr	lr, [sp, #76]	; 0x4c
   14130:	ldr	r3, [sp, #32]
   14134:	ldr	ip, [sp, #72]	; 0x48
   14138:	mov	r2, r6
   1413c:	mov	r1, fp
   14140:	str	r0, [r4, #4]
   14144:	str	r3, [sp]
   14148:	str	r5, [sp, #8]
   1414c:	str	r8, [sp, #4]
   14150:	str	lr, [sp, #16]
   14154:	str	ip, [sp, #12]
   14158:	mvn	r3, #0
   1415c:	mov	r7, r0
   14160:	bl	11718 <abort@plt+0x9f8>
   14164:	mov	r0, r7
   14168:	str	sl, [r9]
   1416c:	add	sp, sp, #84	; 0x54
   14170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14174:	mov	r3, #8
   14178:	str	r3, [sp]
   1417c:	add	r1, sp, #28
   14180:	rsb	r2, r2, #1
   14184:	mvn	r3, #-2147483648	; 0x80000000
   14188:	mov	r0, #0
   1418c:	bl	16210 <abort@plt+0x54f0>
   14190:	mov	r4, r0
   14194:	ldm	r8, {r0, r1}
   14198:	str	r4, [r7]
   1419c:	stm	r4, {r0, r1}
   141a0:	b	14098 <abort@plt+0x3378>
   141a4:	andeq	r8, r2, ip, lsr r1
   141a8:	ldrdeq	r8, [r2], -r0
   141ac:	andeq	r8, r2, ip, ror #2
   141b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141b4:	mov	r6, r0
   141b8:	ldr	lr, [pc, #404]	; 14354 <abort@plt+0x3634>
   141bc:	sub	sp, sp, #84	; 0x54
   141c0:	add	ip, sp, #32
   141c4:	ldm	lr!, {r0, r1, r2, r3}
   141c8:	ldr	r5, [pc, #392]	; 14358 <abort@plt+0x3638>
   141cc:	stmia	ip!, {r0, r1, r2, r3}
   141d0:	ldm	lr!, {r0, r1, r2, r3}
   141d4:	ldr	r4, [sp, #44]	; 0x2c
   141d8:	stmia	ip!, {r0, r1, r2, r3}
   141dc:	ldm	lr, {r0, r1, r2, r3}
   141e0:	mvn	lr, r4
   141e4:	and	lr, lr, #67108864	; 0x4000000
   141e8:	eor	lr, lr, r4
   141ec:	stm	ip, {r0, r1, r2, r3}
   141f0:	str	lr, [sp, #44]	; 0x2c
   141f4:	bl	10c84 <__errno_location@plt>
   141f8:	ldr	r2, [r5, #4]
   141fc:	ldr	r4, [r5]
   14200:	cmp	r2, #0
   14204:	mov	r8, r0
   14208:	ldr	sl, [r0]
   1420c:	bgt	14268 <abort@plt+0x3548>
   14210:	add	r7, r5, #8
   14214:	cmp	r4, r7
   14218:	str	r2, [sp, #28]
   1421c:	beq	14324 <abort@plt+0x3604>
   14220:	mov	r3, #8
   14224:	mov	r0, r4
   14228:	str	r3, [sp]
   1422c:	rsb	r2, r2, #1
   14230:	mvn	r3, #-2147483648	; 0x80000000
   14234:	add	r1, sp, #28
   14238:	bl	16210 <abort@plt+0x54f0>
   1423c:	mov	r4, r0
   14240:	str	r0, [r5]
   14244:	ldr	r0, [r5, #4]
   14248:	ldr	r2, [sp, #28]
   1424c:	mov	r1, #0
   14250:	sub	r2, r2, r0
   14254:	add	r0, r4, r0, lsl #3
   14258:	lsl	r2, r2, #3
   1425c:	bl	10c9c <memset@plt>
   14260:	ldr	r3, [sp, #28]
   14264:	str	r3, [r5, #4]
   14268:	ldr	r7, [sp, #36]	; 0x24
   1426c:	ldr	r9, [r4]
   14270:	ldr	r5, [r4, #4]
   14274:	ldr	r2, [sp, #72]	; 0x48
   14278:	ldr	r3, [sp, #32]
   1427c:	ldr	ip, [sp, #76]	; 0x4c
   14280:	orr	r7, r7, #1
   14284:	add	fp, sp, #40	; 0x28
   14288:	str	r2, [sp, #12]
   1428c:	str	r3, [sp]
   14290:	str	r7, [sp, #4]
   14294:	mov	r1, r9
   14298:	mov	r0, r5
   1429c:	str	ip, [sp, #16]
   142a0:	str	fp, [sp, #8]
   142a4:	mvn	r3, #0
   142a8:	mov	r2, r6
   142ac:	bl	11718 <abort@plt+0x9f8>
   142b0:	cmp	r9, r0
   142b4:	bhi	14314 <abort@plt+0x35f4>
   142b8:	ldr	r3, [pc, #156]	; 1435c <abort@plt+0x363c>
   142bc:	add	r9, r0, #1
   142c0:	cmp	r5, r3
   142c4:	str	r9, [r4]
   142c8:	beq	142d4 <abort@plt+0x35b4>
   142cc:	mov	r0, r5
   142d0:	bl	168a0 <abort@plt+0x5b80>
   142d4:	mov	r0, r9
   142d8:	bl	15ff4 <abort@plt+0x52d4>
   142dc:	ldr	lr, [sp, #76]	; 0x4c
   142e0:	ldr	r3, [sp, #32]
   142e4:	ldr	ip, [sp, #72]	; 0x48
   142e8:	mov	r2, r6
   142ec:	mov	r1, r9
   142f0:	str	r0, [r4, #4]
   142f4:	str	r3, [sp]
   142f8:	str	fp, [sp, #8]
   142fc:	str	r7, [sp, #4]
   14300:	str	lr, [sp, #16]
   14304:	str	ip, [sp, #12]
   14308:	mvn	r3, #0
   1430c:	mov	r5, r0
   14310:	bl	11718 <abort@plt+0x9f8>
   14314:	mov	r0, r5
   14318:	str	sl, [r8]
   1431c:	add	sp, sp, #84	; 0x54
   14320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14324:	mov	r3, #8
   14328:	str	r3, [sp]
   1432c:	add	r1, sp, #28
   14330:	rsb	r2, r2, #1
   14334:	mvn	r3, #-2147483648	; 0x80000000
   14338:	mov	r0, #0
   1433c:	bl	16210 <abort@plt+0x54f0>
   14340:	mov	r4, r0
   14344:	ldm	r7, {r0, r1}
   14348:	str	r4, [r5]
   1434c:	stm	r4, {r0, r1}
   14350:	b	14244 <abort@plt+0x3524>
   14354:	andeq	r8, r2, ip, lsr r1
   14358:	ldrdeq	r8, [r2], -r0
   1435c:	andeq	r8, r2, ip, ror #2
   14360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14364:	mov	r9, r0
   14368:	ldr	lr, [pc, #416]	; 14510 <abort@plt+0x37f0>
   1436c:	mov	sl, r1
   14370:	sub	sp, sp, #92	; 0x5c
   14374:	ldm	lr!, {r0, r1, r2, r3}
   14378:	add	ip, sp, #40	; 0x28
   1437c:	ldr	r5, [pc, #400]	; 14514 <abort@plt+0x37f4>
   14380:	stmia	ip!, {r0, r1, r2, r3}
   14384:	ldm	lr!, {r0, r1, r2, r3}
   14388:	ldr	r4, [sp, #52]	; 0x34
   1438c:	stmia	ip!, {r0, r1, r2, r3}
   14390:	ldm	lr, {r0, r1, r2, r3}
   14394:	mvn	lr, r4
   14398:	and	lr, lr, #67108864	; 0x4000000
   1439c:	eor	lr, lr, r4
   143a0:	stm	ip, {r0, r1, r2, r3}
   143a4:	str	lr, [sp, #52]	; 0x34
   143a8:	bl	10c84 <__errno_location@plt>
   143ac:	ldr	r2, [r5, #4]
   143b0:	ldr	r4, [r5]
   143b4:	cmp	r2, #0
   143b8:	ldr	r3, [r0]
   143bc:	mov	r7, r0
   143c0:	str	r3, [sp, #28]
   143c4:	bgt	14420 <abort@plt+0x3700>
   143c8:	add	r6, r5, #8
   143cc:	cmp	r4, r6
   143d0:	str	r2, [sp, #36]	; 0x24
   143d4:	beq	144e0 <abort@plt+0x37c0>
   143d8:	mov	r3, #8
   143dc:	mov	r0, r4
   143e0:	str	r3, [sp]
   143e4:	rsb	r2, r2, #1
   143e8:	mvn	r3, #-2147483648	; 0x80000000
   143ec:	add	r1, sp, #36	; 0x24
   143f0:	bl	16210 <abort@plt+0x54f0>
   143f4:	mov	r4, r0
   143f8:	str	r0, [r5]
   143fc:	ldr	r0, [r5, #4]
   14400:	ldr	r2, [sp, #36]	; 0x24
   14404:	mov	r1, #0
   14408:	sub	r2, r2, r0
   1440c:	add	r0, r4, r0, lsl #3
   14410:	lsl	r2, r2, #3
   14414:	bl	10c9c <memset@plt>
   14418:	ldr	r3, [sp, #36]	; 0x24
   1441c:	str	r3, [r5, #4]
   14420:	ldr	r6, [sp, #44]	; 0x2c
   14424:	ldr	r8, [r4]
   14428:	ldr	r5, [r4, #4]
   1442c:	ldr	r2, [sp, #80]	; 0x50
   14430:	ldr	r3, [sp, #40]	; 0x28
   14434:	ldr	ip, [sp, #84]	; 0x54
   14438:	orr	r6, r6, #1
   1443c:	add	fp, sp, #48	; 0x30
   14440:	str	r2, [sp, #12]
   14444:	str	r3, [sp]
   14448:	str	r6, [sp, #4]
   1444c:	mov	r1, r8
   14450:	mov	r0, r5
   14454:	str	ip, [sp, #16]
   14458:	str	fp, [sp, #8]
   1445c:	mov	r3, sl
   14460:	mov	r2, r9
   14464:	bl	11718 <abort@plt+0x9f8>
   14468:	cmp	r8, r0
   1446c:	bhi	144cc <abort@plt+0x37ac>
   14470:	ldr	r3, [pc, #160]	; 14518 <abort@plt+0x37f8>
   14474:	add	r8, r0, #1
   14478:	cmp	r5, r3
   1447c:	str	r8, [r4]
   14480:	beq	1448c <abort@plt+0x376c>
   14484:	mov	r0, r5
   14488:	bl	168a0 <abort@plt+0x5b80>
   1448c:	mov	r0, r8
   14490:	bl	15ff4 <abort@plt+0x52d4>
   14494:	ldr	ip, [sp, #84]	; 0x54
   14498:	ldr	lr, [sp, #40]	; 0x28
   1449c:	mov	r3, sl
   144a0:	mov	r2, r9
   144a4:	mov	r1, r8
   144a8:	str	r0, [r4, #4]
   144ac:	ldr	r4, [sp, #80]	; 0x50
   144b0:	str	fp, [sp, #8]
   144b4:	str	r6, [sp, #4]
   144b8:	str	ip, [sp, #16]
   144bc:	str	r4, [sp, #12]
   144c0:	str	lr, [sp]
   144c4:	mov	r5, r0
   144c8:	bl	11718 <abort@plt+0x9f8>
   144cc:	ldr	r3, [sp, #28]
   144d0:	mov	r0, r5
   144d4:	str	r3, [r7]
   144d8:	add	sp, sp, #92	; 0x5c
   144dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144e0:	mov	r3, #8
   144e4:	str	r3, [sp]
   144e8:	add	r1, sp, #36	; 0x24
   144ec:	rsb	r2, r2, #1
   144f0:	mvn	r3, #-2147483648	; 0x80000000
   144f4:	mov	r0, #0
   144f8:	bl	16210 <abort@plt+0x54f0>
   144fc:	mov	r4, r0
   14500:	ldm	r6, {r0, r1}
   14504:	str	r4, [r5]
   14508:	stm	r4, {r0, r1}
   1450c:	b	143fc <abort@plt+0x36dc>
   14510:	andeq	r8, r2, ip, lsr r1
   14514:	ldrdeq	r8, [r2], -r0
   14518:	andeq	r8, r2, ip, ror #2
   1451c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14520:	sub	sp, sp, #180	; 0xb4
   14524:	mov	r6, r1
   14528:	mov	r4, r0
   1452c:	mov	r9, r2
   14530:	add	r0, sp, #80	; 0x50
   14534:	mov	r2, #48	; 0x30
   14538:	mov	r1, #0
   1453c:	bl	10c9c <memset@plt>
   14540:	cmp	r6, #10
   14544:	beq	14724 <abort@plt+0x3a04>
   14548:	add	r5, sp, #80	; 0x50
   1454c:	str	r6, [sp, #80]	; 0x50
   14550:	ldm	r5!, {r0, r1, r2, r3}
   14554:	add	ip, sp, #128	; 0x80
   14558:	mov	r7, ip
   1455c:	add	lr, sp, #32
   14560:	stmia	ip!, {r0, r1, r2, r3}
   14564:	mov	r8, #67108864	; 0x4000000
   14568:	ldm	r5!, {r0, r1, r2, r3}
   1456c:	ldr	r6, [pc, #436]	; 14728 <abort@plt+0x3a08>
   14570:	stmia	ip!, {r0, r1, r2, r3}
   14574:	ldm	r5, {r0, r1, r2, r3}
   14578:	stm	ip, {r0, r1, r2, r3}
   1457c:	ldm	r7!, {r0, r1, r2, r3}
   14580:	stmia	lr!, {r0, r1, r2, r3}
   14584:	ldm	r7!, {r0, r1, r2, r3}
   14588:	str	r8, [sp, #44]	; 0x2c
   1458c:	stmia	lr!, {r0, r1, r2, r3}
   14590:	ldm	ip, {r0, r1, r2, r3}
   14594:	stm	lr, {r0, r1, r2, r3}
   14598:	bl	10c84 <__errno_location@plt>
   1459c:	cmn	r4, #-2147483647	; 0x80000001
   145a0:	ldr	r5, [r6]
   145a4:	mov	r7, r0
   145a8:	movne	r0, #0
   145ac:	moveq	r0, #1
   145b0:	ldr	r3, [r7]
   145b4:	orrs	r0, r0, r4, lsr #31
   145b8:	str	r3, [sp, #24]
   145bc:	bne	14724 <abort@plt+0x3a04>
   145c0:	ldr	r2, [r6, #4]
   145c4:	cmp	r4, r2
   145c8:	blt	14628 <abort@plt+0x3908>
   145cc:	add	r8, r6, #8
   145d0:	cmp	r5, r8
   145d4:	str	r2, [sp, #80]	; 0x50
   145d8:	beq	146f4 <abort@plt+0x39d4>
   145dc:	mov	r3, #8
   145e0:	sub	r2, r4, r2
   145e4:	mov	r0, r5
   145e8:	str	r3, [sp]
   145ec:	add	r2, r2, #1
   145f0:	add	r1, sp, #80	; 0x50
   145f4:	mvn	r3, #-2147483648	; 0x80000000
   145f8:	bl	16210 <abort@plt+0x54f0>
   145fc:	mov	r5, r0
   14600:	str	r0, [r6]
   14604:	ldr	r0, [r6, #4]
   14608:	ldr	r2, [sp, #80]	; 0x50
   1460c:	mov	r1, #0
   14610:	sub	r2, r2, r0
   14614:	add	r0, r5, r0, lsl #3
   14618:	lsl	r2, r2, #3
   1461c:	bl	10c9c <memset@plt>
   14620:	ldr	r3, [sp, #80]	; 0x50
   14624:	str	r3, [r6, #4]
   14628:	add	fp, r5, r4, lsl #3
   1462c:	ldr	r1, [sp, #36]	; 0x24
   14630:	ldr	r8, [r5, r4, lsl #3]
   14634:	ldr	r6, [fp, #4]
   14638:	ldr	r2, [sp, #72]	; 0x48
   1463c:	ldr	r3, [sp, #32]
   14640:	ldr	ip, [sp, #76]	; 0x4c
   14644:	orr	r1, r1, #1
   14648:	add	sl, sp, #40	; 0x28
   1464c:	str	r1, [sp, #28]
   14650:	str	r1, [sp, #4]
   14654:	str	r2, [sp, #12]
   14658:	str	r3, [sp]
   1465c:	mov	r0, r6
   14660:	mov	r1, r8
   14664:	str	ip, [sp, #16]
   14668:	str	sl, [sp, #8]
   1466c:	mvn	r3, #0
   14670:	mov	r2, r9
   14674:	bl	11718 <abort@plt+0x9f8>
   14678:	cmp	r8, r0
   1467c:	bhi	146e0 <abort@plt+0x39c0>
   14680:	ldr	r3, [pc, #164]	; 1472c <abort@plt+0x3a0c>
   14684:	add	r8, r0, #1
   14688:	cmp	r6, r3
   1468c:	str	r8, [r5, r4, lsl #3]
   14690:	beq	1469c <abort@plt+0x397c>
   14694:	mov	r0, r6
   14698:	bl	168a0 <abort@plt+0x5b80>
   1469c:	mov	r0, r8
   146a0:	bl	15ff4 <abort@plt+0x52d4>
   146a4:	ldr	lr, [sp, #76]	; 0x4c
   146a8:	ldr	r3, [sp, #32]
   146ac:	ldr	ip, [sp, #72]	; 0x48
   146b0:	ldr	r4, [sp, #28]
   146b4:	mov	r2, r9
   146b8:	mov	r1, r8
   146bc:	str	r0, [fp, #4]
   146c0:	str	r3, [sp]
   146c4:	str	sl, [sp, #8]
   146c8:	str	r4, [sp, #4]
   146cc:	str	lr, [sp, #16]
   146d0:	str	ip, [sp, #12]
   146d4:	mvn	r3, #0
   146d8:	mov	r6, r0
   146dc:	bl	11718 <abort@plt+0x9f8>
   146e0:	ldr	r3, [sp, #24]
   146e4:	mov	r0, r6
   146e8:	str	r3, [r7]
   146ec:	add	sp, sp, #180	; 0xb4
   146f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146f4:	mov	r3, #8
   146f8:	sub	r2, r4, r2
   146fc:	add	r1, sp, #80	; 0x50
   14700:	str	r3, [sp]
   14704:	add	r2, r2, #1
   14708:	mvn	r3, #-2147483648	; 0x80000000
   1470c:	bl	16210 <abort@plt+0x54f0>
   14710:	mov	r5, r0
   14714:	ldm	r8, {r0, r1}
   14718:	str	r5, [r6]
   1471c:	stm	r5, {r0, r1}
   14720:	b	14604 <abort@plt+0x38e4>
   14724:	bl	10d20 <abort@plt>
   14728:	ldrdeq	r8, [r2], -r0
   1472c:	andeq	r8, r2, ip, ror #2
   14730:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14734:	mov	r7, r1
   14738:	ldr	lr, [pc, #492]	; 1492c <abort@plt+0x3c0c>
   1473c:	mov	r8, r2
   14740:	mov	r4, r0
   14744:	mov	fp, r3
   14748:	ldm	lr!, {r0, r1, r2, r3}
   1474c:	sub	sp, sp, #100	; 0x64
   14750:	add	ip, sp, #48	; 0x30
   14754:	mov	sl, #10
   14758:	stmia	ip!, {r0, r1, r2, r3}
   1475c:	cmp	r8, #0
   14760:	cmpne	r7, #0
   14764:	ldm	lr!, {r0, r1, r2, r3}
   14768:	str	sl, [sp, #48]	; 0x30
   1476c:	stmia	ip!, {r0, r1, r2, r3}
   14770:	ldm	lr, {r0, r1, r2, r3}
   14774:	stm	ip, {r0, r1, r2, r3}
   14778:	beq	14928 <abort@plt+0x3c08>
   1477c:	str	r7, [sp, #88]	; 0x58
   14780:	str	r8, [sp, #92]	; 0x5c
   14784:	bl	10c84 <__errno_location@plt>
   14788:	ldr	r6, [pc, #416]	; 14930 <abort@plt+0x3c10>
   1478c:	cmn	r4, #-2147483647	; 0x80000001
   14790:	ldr	r5, [r6]
   14794:	mov	r9, r0
   14798:	movne	r0, #0
   1479c:	moveq	r0, #1
   147a0:	ldr	r3, [r9]
   147a4:	orrs	r0, r0, r4, lsr #31
   147a8:	str	r3, [sp, #28]
   147ac:	bne	14928 <abort@plt+0x3c08>
   147b0:	ldr	r2, [r6, #4]
   147b4:	cmp	r4, r2
   147b8:	movlt	r3, sl
   147bc:	blt	14828 <abort@plt+0x3b08>
   147c0:	add	r7, r6, #8
   147c4:	cmp	r5, r7
   147c8:	str	r2, [sp, #44]	; 0x2c
   147cc:	beq	148f8 <abort@plt+0x3bd8>
   147d0:	mov	r3, #8
   147d4:	sub	r2, r4, r2
   147d8:	mov	r0, r5
   147dc:	str	r3, [sp]
   147e0:	add	r2, r2, #1
   147e4:	mvn	r3, #-2147483648	; 0x80000000
   147e8:	add	r1, sp, #44	; 0x2c
   147ec:	bl	16210 <abort@plt+0x54f0>
   147f0:	mov	r5, r0
   147f4:	str	r0, [r6]
   147f8:	ldr	r0, [r6, #4]
   147fc:	ldr	r2, [sp, #44]	; 0x2c
   14800:	mov	r1, #0
   14804:	sub	r2, r2, r0
   14808:	add	r0, r5, r0, lsl #3
   1480c:	lsl	r2, r2, #3
   14810:	bl	10c9c <memset@plt>
   14814:	ldr	r3, [sp, #48]	; 0x30
   14818:	ldr	r7, [sp, #88]	; 0x58
   1481c:	ldr	r8, [sp, #92]	; 0x5c
   14820:	ldr	r2, [sp, #44]	; 0x2c
   14824:	str	r2, [r6, #4]
   14828:	add	r2, r5, r4, lsl #3
   1482c:	mov	r1, r2
   14830:	str	r2, [sp, #32]
   14834:	ldr	r2, [sp, #52]	; 0x34
   14838:	ldr	r6, [r1, #4]
   1483c:	ldr	sl, [r5, r4, lsl #3]
   14840:	orr	r2, r2, #1
   14844:	str	r3, [sp]
   14848:	add	r3, sp, #56	; 0x38
   1484c:	str	r2, [sp, #36]	; 0x24
   14850:	str	r2, [sp, #4]
   14854:	str	r3, [sp, #8]
   14858:	mov	r0, r6
   1485c:	str	r8, [sp, #16]
   14860:	str	r7, [sp, #12]
   14864:	mov	r1, sl
   14868:	mvn	r3, #0
   1486c:	mov	r2, fp
   14870:	bl	11718 <abort@plt+0x9f8>
   14874:	cmp	sl, r0
   14878:	bhi	148e4 <abort@plt+0x3bc4>
   1487c:	ldr	r3, [pc, #176]	; 14934 <abort@plt+0x3c14>
   14880:	add	r7, r0, #1
   14884:	cmp	r6, r3
   14888:	str	r7, [r5, r4, lsl #3]
   1488c:	beq	14898 <abort@plt+0x3b78>
   14890:	mov	r0, r6
   14894:	bl	168a0 <abort@plt+0x5b80>
   14898:	mov	r0, r7
   1489c:	bl	15ff4 <abort@plt+0x52d4>
   148a0:	ldr	r3, [sp, #32]
   148a4:	ldr	lr, [sp, #92]	; 0x5c
   148a8:	ldr	ip, [sp, #88]	; 0x58
   148ac:	ldr	r4, [sp, #36]	; 0x24
   148b0:	mov	r2, fp
   148b4:	mov	r1, r7
   148b8:	str	r0, [r3, #4]
   148bc:	add	r3, sp, #56	; 0x38
   148c0:	str	r3, [sp, #8]
   148c4:	ldr	r3, [sp, #48]	; 0x30
   148c8:	str	r4, [sp, #4]
   148cc:	str	r3, [sp]
   148d0:	str	lr, [sp, #16]
   148d4:	str	ip, [sp, #12]
   148d8:	mvn	r3, #0
   148dc:	mov	r6, r0
   148e0:	bl	11718 <abort@plt+0x9f8>
   148e4:	ldr	r3, [sp, #28]
   148e8:	mov	r0, r6
   148ec:	str	r3, [r9]
   148f0:	add	sp, sp, #100	; 0x64
   148f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148f8:	mov	r3, #8
   148fc:	sub	r2, r4, r2
   14900:	str	r3, [sp]
   14904:	add	r1, sp, #44	; 0x2c
   14908:	add	r2, r2, #1
   1490c:	mvn	r3, #-2147483648	; 0x80000000
   14910:	bl	16210 <abort@plt+0x54f0>
   14914:	mov	r5, r0
   14918:	ldm	r7, {r0, r1}
   1491c:	str	r5, [r6]
   14920:	stm	r5, {r0, r1}
   14924:	b	147f8 <abort@plt+0x3ad8>
   14928:	bl	10d20 <abort@plt>
   1492c:	andeq	r8, r2, ip, lsr r1
   14930:	ldrdeq	r8, [r2], -r0
   14934:	andeq	r8, r2, ip, ror #2
   14938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1493c:	mov	r7, r1
   14940:	ldr	lr, [pc, #492]	; 14b34 <abort@plt+0x3e14>
   14944:	mov	r8, r2
   14948:	mov	r4, r0
   1494c:	mov	fp, r3
   14950:	ldm	lr!, {r0, r1, r2, r3}
   14954:	sub	sp, sp, #100	; 0x64
   14958:	add	ip, sp, #48	; 0x30
   1495c:	mov	sl, #10
   14960:	stmia	ip!, {r0, r1, r2, r3}
   14964:	cmp	r8, #0
   14968:	cmpne	r7, #0
   1496c:	ldm	lr!, {r0, r1, r2, r3}
   14970:	str	sl, [sp, #48]	; 0x30
   14974:	stmia	ip!, {r0, r1, r2, r3}
   14978:	ldm	lr, {r0, r1, r2, r3}
   1497c:	stm	ip, {r0, r1, r2, r3}
   14980:	beq	14b30 <abort@plt+0x3e10>
   14984:	str	r7, [sp, #88]	; 0x58
   14988:	str	r8, [sp, #92]	; 0x5c
   1498c:	bl	10c84 <__errno_location@plt>
   14990:	ldr	r6, [pc, #416]	; 14b38 <abort@plt+0x3e18>
   14994:	cmn	r4, #-2147483647	; 0x80000001
   14998:	ldr	r5, [r6]
   1499c:	mov	r9, r0
   149a0:	movne	r0, #0
   149a4:	moveq	r0, #1
   149a8:	ldr	r3, [r9]
   149ac:	orrs	r0, r0, r4, lsr #31
   149b0:	str	r3, [sp, #28]
   149b4:	bne	14b30 <abort@plt+0x3e10>
   149b8:	ldr	r2, [r6, #4]
   149bc:	cmp	r4, r2
   149c0:	movlt	r3, sl
   149c4:	blt	14a30 <abort@plt+0x3d10>
   149c8:	add	r7, r6, #8
   149cc:	cmp	r5, r7
   149d0:	str	r2, [sp, #44]	; 0x2c
   149d4:	beq	14b00 <abort@plt+0x3de0>
   149d8:	mov	r3, #8
   149dc:	sub	r2, r4, r2
   149e0:	mov	r0, r5
   149e4:	str	r3, [sp]
   149e8:	add	r2, r2, #1
   149ec:	mvn	r3, #-2147483648	; 0x80000000
   149f0:	add	r1, sp, #44	; 0x2c
   149f4:	bl	16210 <abort@plt+0x54f0>
   149f8:	mov	r5, r0
   149fc:	str	r0, [r6]
   14a00:	ldr	r0, [r6, #4]
   14a04:	ldr	r2, [sp, #44]	; 0x2c
   14a08:	mov	r1, #0
   14a0c:	sub	r2, r2, r0
   14a10:	add	r0, r5, r0, lsl #3
   14a14:	lsl	r2, r2, #3
   14a18:	bl	10c9c <memset@plt>
   14a1c:	ldr	r3, [sp, #48]	; 0x30
   14a20:	ldr	r7, [sp, #88]	; 0x58
   14a24:	ldr	r8, [sp, #92]	; 0x5c
   14a28:	ldr	r2, [sp, #44]	; 0x2c
   14a2c:	str	r2, [r6, #4]
   14a30:	add	r2, r5, r4, lsl #3
   14a34:	mov	r1, r2
   14a38:	str	r2, [sp, #32]
   14a3c:	ldr	r2, [sp, #52]	; 0x34
   14a40:	ldr	r6, [r1, #4]
   14a44:	ldr	sl, [r5, r4, lsl #3]
   14a48:	orr	r2, r2, #1
   14a4c:	str	r3, [sp]
   14a50:	add	r3, sp, #56	; 0x38
   14a54:	str	r2, [sp, #36]	; 0x24
   14a58:	str	r2, [sp, #4]
   14a5c:	str	r3, [sp, #8]
   14a60:	mov	r0, r6
   14a64:	str	r8, [sp, #16]
   14a68:	str	r7, [sp, #12]
   14a6c:	mov	r1, sl
   14a70:	ldr	r3, [sp, #136]	; 0x88
   14a74:	mov	r2, fp
   14a78:	bl	11718 <abort@plt+0x9f8>
   14a7c:	cmp	sl, r0
   14a80:	bhi	14aec <abort@plt+0x3dcc>
   14a84:	ldr	r3, [pc, #176]	; 14b3c <abort@plt+0x3e1c>
   14a88:	add	r7, r0, #1
   14a8c:	cmp	r6, r3
   14a90:	str	r7, [r5, r4, lsl #3]
   14a94:	beq	14aa0 <abort@plt+0x3d80>
   14a98:	mov	r0, r6
   14a9c:	bl	168a0 <abort@plt+0x5b80>
   14aa0:	mov	r0, r7
   14aa4:	bl	15ff4 <abort@plt+0x52d4>
   14aa8:	ldr	r3, [sp, #32]
   14aac:	ldr	lr, [sp, #92]	; 0x5c
   14ab0:	ldr	ip, [sp, #88]	; 0x58
   14ab4:	ldr	r4, [sp, #36]	; 0x24
   14ab8:	mov	r2, fp
   14abc:	mov	r1, r7
   14ac0:	str	r0, [r3, #4]
   14ac4:	add	r3, sp, #56	; 0x38
   14ac8:	str	r3, [sp, #8]
   14acc:	ldr	r3, [sp, #48]	; 0x30
   14ad0:	str	r4, [sp, #4]
   14ad4:	str	r3, [sp]
   14ad8:	str	lr, [sp, #16]
   14adc:	str	ip, [sp, #12]
   14ae0:	ldr	r3, [sp, #136]	; 0x88
   14ae4:	mov	r6, r0
   14ae8:	bl	11718 <abort@plt+0x9f8>
   14aec:	ldr	r3, [sp, #28]
   14af0:	mov	r0, r6
   14af4:	str	r3, [r9]
   14af8:	add	sp, sp, #100	; 0x64
   14afc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b00:	mov	r3, #8
   14b04:	sub	r2, r4, r2
   14b08:	str	r3, [sp]
   14b0c:	add	r1, sp, #44	; 0x2c
   14b10:	add	r2, r2, #1
   14b14:	mvn	r3, #-2147483648	; 0x80000000
   14b18:	bl	16210 <abort@plt+0x54f0>
   14b1c:	mov	r5, r0
   14b20:	ldm	r7, {r0, r1}
   14b24:	str	r5, [r6]
   14b28:	stm	r5, {r0, r1}
   14b2c:	b	14a00 <abort@plt+0x3ce0>
   14b30:	bl	10d20 <abort@plt>
   14b34:	andeq	r8, r2, ip, lsr r1
   14b38:	ldrdeq	r8, [r2], -r0
   14b3c:	andeq	r8, r2, ip, ror #2
   14b40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b44:	mov	r5, r0
   14b48:	ldr	lr, [pc, #452]	; 14d14 <abort@plt+0x3ff4>
   14b4c:	mov	r6, r1
   14b50:	mov	sl, r2
   14b54:	ldm	lr!, {r0, r1, r2, r3}
   14b58:	sub	sp, sp, #92	; 0x5c
   14b5c:	add	ip, sp, #40	; 0x28
   14b60:	cmp	r6, #0
   14b64:	cmpne	r5, #0
   14b68:	stmia	ip!, {r0, r1, r2, r3}
   14b6c:	mov	r9, #10
   14b70:	ldm	lr!, {r0, r1, r2, r3}
   14b74:	moveq	fp, #1
   14b78:	movne	fp, #0
   14b7c:	str	r9, [sp, #40]	; 0x28
   14b80:	stmia	ip!, {r0, r1, r2, r3}
   14b84:	ldm	lr, {r0, r1, r2, r3}
   14b88:	stm	ip, {r0, r1, r2, r3}
   14b8c:	beq	14d10 <abort@plt+0x3ff0>
   14b90:	str	r5, [sp, #80]	; 0x50
   14b94:	str	r6, [sp, #84]	; 0x54
   14b98:	bl	10c84 <__errno_location@plt>
   14b9c:	ldr	r7, [pc, #372]	; 14d18 <abort@plt+0x3ff8>
   14ba0:	ldr	r2, [r7, #4]
   14ba4:	ldr	r4, [r7]
   14ba8:	cmp	r2, #0
   14bac:	ldr	r3, [r0]
   14bb0:	mov	r8, r0
   14bb4:	str	r3, [sp, #24]
   14bb8:	movgt	r3, r9
   14bbc:	bgt	14c24 <abort@plt+0x3f04>
   14bc0:	add	r5, r7, #8
   14bc4:	cmp	r4, r5
   14bc8:	str	r2, [sp, #36]	; 0x24
   14bcc:	beq	14ce0 <abort@plt+0x3fc0>
   14bd0:	mov	r3, #8
   14bd4:	mov	r0, r4
   14bd8:	str	r3, [sp]
   14bdc:	rsb	r2, r2, #1
   14be0:	mvn	r3, #-2147483648	; 0x80000000
   14be4:	add	r1, sp, #36	; 0x24
   14be8:	bl	16210 <abort@plt+0x54f0>
   14bec:	mov	r4, r0
   14bf0:	str	r0, [r7]
   14bf4:	ldr	r0, [r7, #4]
   14bf8:	ldr	r2, [sp, #36]	; 0x24
   14bfc:	mov	r1, #0
   14c00:	sub	r2, r2, r0
   14c04:	add	r0, r4, r0, lsl #3
   14c08:	lsl	r2, r2, #3
   14c0c:	bl	10c9c <memset@plt>
   14c10:	ldr	r3, [sp, #40]	; 0x28
   14c14:	ldr	r5, [sp, #80]	; 0x50
   14c18:	ldr	r6, [sp, #84]	; 0x54
   14c1c:	ldr	r2, [sp, #36]	; 0x24
   14c20:	str	r2, [r7, #4]
   14c24:	ldr	r2, [sp, #44]	; 0x2c
   14c28:	ldr	r9, [r4]
   14c2c:	ldr	r7, [r4, #4]
   14c30:	orr	r2, r2, #1
   14c34:	add	fp, sp, #48	; 0x30
   14c38:	str	r2, [sp, #28]
   14c3c:	str	r2, [sp, #4]
   14c40:	str	r3, [sp]
   14c44:	str	r6, [sp, #16]
   14c48:	str	r5, [sp, #12]
   14c4c:	mov	r1, r9
   14c50:	mov	r0, r7
   14c54:	str	fp, [sp, #8]
   14c58:	mvn	r3, #0
   14c5c:	mov	r2, sl
   14c60:	bl	11718 <abort@plt+0x9f8>
   14c64:	cmp	r9, r0
   14c68:	bhi	14ccc <abort@plt+0x3fac>
   14c6c:	ldr	r3, [pc, #168]	; 14d1c <abort@plt+0x3ffc>
   14c70:	add	r5, r0, #1
   14c74:	cmp	r7, r3
   14c78:	str	r5, [r4]
   14c7c:	beq	14c88 <abort@plt+0x3f68>
   14c80:	mov	r0, r7
   14c84:	bl	168a0 <abort@plt+0x5b80>
   14c88:	mov	r0, r5
   14c8c:	bl	15ff4 <abort@plt+0x52d4>
   14c90:	ldr	lr, [sp, #84]	; 0x54
   14c94:	ldr	r3, [sp, #40]	; 0x28
   14c98:	ldr	ip, [sp, #80]	; 0x50
   14c9c:	mov	r2, sl
   14ca0:	mov	r1, r5
   14ca4:	str	r0, [r4, #4]
   14ca8:	ldr	r4, [sp, #28]
   14cac:	str	r3, [sp]
   14cb0:	str	fp, [sp, #8]
   14cb4:	str	r4, [sp, #4]
   14cb8:	str	lr, [sp, #16]
   14cbc:	str	ip, [sp, #12]
   14cc0:	mvn	r3, #0
   14cc4:	mov	r7, r0
   14cc8:	bl	11718 <abort@plt+0x9f8>
   14ccc:	ldr	r3, [sp, #24]
   14cd0:	mov	r0, r7
   14cd4:	str	r3, [r8]
   14cd8:	add	sp, sp, #92	; 0x5c
   14cdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ce0:	mov	r3, #8
   14ce4:	str	r3, [sp]
   14ce8:	add	r1, sp, #36	; 0x24
   14cec:	rsb	r2, r2, #1
   14cf0:	mov	r0, fp
   14cf4:	mvn	r3, #-2147483648	; 0x80000000
   14cf8:	bl	16210 <abort@plt+0x54f0>
   14cfc:	mov	r4, r0
   14d00:	ldm	r5, {r0, r1}
   14d04:	str	r4, [r7]
   14d08:	stm	r4, {r0, r1}
   14d0c:	b	14bf4 <abort@plt+0x3ed4>
   14d10:	bl	10d20 <abort@plt>
   14d14:	andeq	r8, r2, ip, lsr r1
   14d18:	ldrdeq	r8, [r2], -r0
   14d1c:	andeq	r8, r2, ip, ror #2
   14d20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d24:	mov	r5, r0
   14d28:	ldr	lr, [pc, #464]	; 14f00 <abort@plt+0x41e0>
   14d2c:	mov	r6, r1
   14d30:	mov	sl, r2
   14d34:	mov	fp, r3
   14d38:	ldm	lr!, {r0, r1, r2, r3}
   14d3c:	sub	sp, sp, #92	; 0x5c
   14d40:	add	ip, sp, #40	; 0x28
   14d44:	cmp	r6, #0
   14d48:	cmpne	r5, #0
   14d4c:	stmia	ip!, {r0, r1, r2, r3}
   14d50:	moveq	r4, #1
   14d54:	ldm	lr!, {r0, r1, r2, r3}
   14d58:	movne	r4, #0
   14d5c:	mov	r9, #10
   14d60:	str	r4, [sp, #28]
   14d64:	stmia	ip!, {r0, r1, r2, r3}
   14d68:	ldm	lr, {r0, r1, r2, r3}
   14d6c:	str	r9, [sp, #40]	; 0x28
   14d70:	stm	ip, {r0, r1, r2, r3}
   14d74:	beq	14efc <abort@plt+0x41dc>
   14d78:	str	r5, [sp, #80]	; 0x50
   14d7c:	str	r6, [sp, #84]	; 0x54
   14d80:	bl	10c84 <__errno_location@plt>
   14d84:	ldr	r7, [pc, #376]	; 14f04 <abort@plt+0x41e4>
   14d88:	ldr	r2, [r7, #4]
   14d8c:	ldr	r4, [r7]
   14d90:	cmp	r2, #0
   14d94:	ldr	r3, [r0]
   14d98:	mov	r8, r0
   14d9c:	str	r3, [sp, #24]
   14da0:	movgt	r3, r9
   14da4:	bgt	14e0c <abort@plt+0x40ec>
   14da8:	add	r5, r7, #8
   14dac:	cmp	r4, r5
   14db0:	str	r2, [sp, #36]	; 0x24
   14db4:	beq	14ecc <abort@plt+0x41ac>
   14db8:	mov	r3, #8
   14dbc:	mov	r0, r4
   14dc0:	str	r3, [sp]
   14dc4:	rsb	r2, r2, #1
   14dc8:	mvn	r3, #-2147483648	; 0x80000000
   14dcc:	add	r1, sp, #36	; 0x24
   14dd0:	bl	16210 <abort@plt+0x54f0>
   14dd4:	mov	r4, r0
   14dd8:	str	r0, [r7]
   14ddc:	ldr	r0, [r7, #4]
   14de0:	ldr	r2, [sp, #36]	; 0x24
   14de4:	mov	r1, #0
   14de8:	sub	r2, r2, r0
   14dec:	add	r0, r4, r0, lsl #3
   14df0:	lsl	r2, r2, #3
   14df4:	bl	10c9c <memset@plt>
   14df8:	ldr	r3, [sp, #40]	; 0x28
   14dfc:	ldr	r5, [sp, #80]	; 0x50
   14e00:	ldr	r6, [sp, #84]	; 0x54
   14e04:	ldr	r2, [sp, #36]	; 0x24
   14e08:	str	r2, [r7, #4]
   14e0c:	ldr	r2, [sp, #44]	; 0x2c
   14e10:	ldr	r9, [r4]
   14e14:	ldr	r7, [r4, #4]
   14e18:	orr	r2, r2, #1
   14e1c:	str	r3, [sp]
   14e20:	add	r3, sp, #48	; 0x30
   14e24:	str	r2, [sp, #28]
   14e28:	str	r2, [sp, #4]
   14e2c:	str	r3, [sp, #8]
   14e30:	str	r6, [sp, #16]
   14e34:	str	r5, [sp, #12]
   14e38:	mov	r1, r9
   14e3c:	mov	r0, r7
   14e40:	mov	r3, fp
   14e44:	mov	r2, sl
   14e48:	bl	11718 <abort@plt+0x9f8>
   14e4c:	cmp	r9, r0
   14e50:	bhi	14eb8 <abort@plt+0x4198>
   14e54:	ldr	r3, [pc, #172]	; 14f08 <abort@plt+0x41e8>
   14e58:	add	r5, r0, #1
   14e5c:	cmp	r7, r3
   14e60:	str	r5, [r4]
   14e64:	beq	14e70 <abort@plt+0x4150>
   14e68:	mov	r0, r7
   14e6c:	bl	168a0 <abort@plt+0x5b80>
   14e70:	mov	r0, r5
   14e74:	bl	15ff4 <abort@plt+0x52d4>
   14e78:	add	lr, sp, #48	; 0x30
   14e7c:	ldr	ip, [sp, #84]	; 0x54
   14e80:	mov	r1, r5
   14e84:	ldr	r5, [sp, #28]
   14e88:	mov	r3, fp
   14e8c:	mov	r2, sl
   14e90:	str	r0, [r4, #4]
   14e94:	ldr	r4, [sp, #80]	; 0x50
   14e98:	str	lr, [sp, #8]
   14e9c:	ldr	lr, [sp, #40]	; 0x28
   14ea0:	str	r5, [sp, #4]
   14ea4:	str	ip, [sp, #16]
   14ea8:	str	r4, [sp, #12]
   14eac:	str	lr, [sp]
   14eb0:	mov	r7, r0
   14eb4:	bl	11718 <abort@plt+0x9f8>
   14eb8:	ldr	r3, [sp, #24]
   14ebc:	mov	r0, r7
   14ec0:	str	r3, [r8]
   14ec4:	add	sp, sp, #92	; 0x5c
   14ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ecc:	mov	r3, #8
   14ed0:	str	r3, [sp]
   14ed4:	add	r1, sp, #36	; 0x24
   14ed8:	rsb	r2, r2, #1
   14edc:	ldr	r0, [sp, #28]
   14ee0:	mvn	r3, #-2147483648	; 0x80000000
   14ee4:	bl	16210 <abort@plt+0x54f0>
   14ee8:	mov	r4, r0
   14eec:	ldm	r5, {r0, r1}
   14ef0:	str	r4, [r7]
   14ef4:	stm	r4, {r0, r1}
   14ef8:	b	14ddc <abort@plt+0x40bc>
   14efc:	bl	10d20 <abort@plt>
   14f00:	andeq	r8, r2, ip, lsr r1
   14f04:	ldrdeq	r8, [r2], -r0
   14f08:	andeq	r8, r2, ip, ror #2
   14f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f10:	sub	sp, sp, #52	; 0x34
   14f14:	mov	r5, r0
   14f18:	mov	sl, r1
   14f1c:	mov	fp, r2
   14f20:	bl	10c84 <__errno_location@plt>
   14f24:	ldr	r4, [pc, #404]	; 150c0 <abort@plt+0x43a0>
   14f28:	cmn	r5, #-2147483647	; 0x80000001
   14f2c:	ldr	r6, [r4]
   14f30:	mov	r8, r0
   14f34:	movne	r0, #0
   14f38:	moveq	r0, #1
   14f3c:	ldr	r3, [r8]
   14f40:	orrs	r0, r0, r5, lsr #31
   14f44:	str	r3, [sp, #28]
   14f48:	bne	150bc <abort@plt+0x439c>
   14f4c:	ldr	r2, [r4, #4]
   14f50:	cmp	r5, r2
   14f54:	blt	14fb4 <abort@plt+0x4294>
   14f58:	add	r7, r4, #8
   14f5c:	cmp	r6, r7
   14f60:	str	r2, [sp, #44]	; 0x2c
   14f64:	beq	1508c <abort@plt+0x436c>
   14f68:	mov	r3, #8
   14f6c:	sub	r2, r5, r2
   14f70:	mov	r0, r6
   14f74:	str	r3, [sp]
   14f78:	add	r2, r2, #1
   14f7c:	mvn	r3, #-2147483648	; 0x80000000
   14f80:	add	r1, sp, #44	; 0x2c
   14f84:	bl	16210 <abort@plt+0x54f0>
   14f88:	mov	r6, r0
   14f8c:	str	r0, [r4]
   14f90:	ldr	r0, [r4, #4]
   14f94:	ldr	r2, [sp, #44]	; 0x2c
   14f98:	mov	r1, #0
   14f9c:	sub	r2, r2, r0
   14fa0:	add	r0, r6, r0, lsl #3
   14fa4:	lsl	r2, r2, #3
   14fa8:	bl	10c9c <memset@plt>
   14fac:	ldr	r3, [sp, #44]	; 0x2c
   14fb0:	str	r3, [r4, #4]
   14fb4:	ldr	r2, [r4, #56]	; 0x38
   14fb8:	add	r3, r6, r5, lsl #3
   14fbc:	ldr	r1, [r4, #20]
   14fc0:	ldr	r7, [r3, #4]
   14fc4:	ldr	r9, [r6, r5, lsl #3]
   14fc8:	ldr	ip, [r4, #60]	; 0x3c
   14fcc:	str	r3, [sp, #32]
   14fd0:	ldr	r3, [r4, #16]
   14fd4:	str	r2, [sp, #12]
   14fd8:	ldr	r2, [pc, #228]	; 150c4 <abort@plt+0x43a4>
   14fdc:	orr	r1, r1, #1
   14fe0:	str	r1, [sp, #36]	; 0x24
   14fe4:	str	r1, [sp, #4]
   14fe8:	str	r2, [sp, #8]
   14fec:	str	r3, [sp]
   14ff0:	mov	r0, r7
   14ff4:	mov	r1, r9
   14ff8:	str	ip, [sp, #16]
   14ffc:	mov	r3, fp
   15000:	mov	r2, sl
   15004:	bl	11718 <abort@plt+0x9f8>
   15008:	cmp	r9, r0
   1500c:	bhi	15078 <abort@plt+0x4358>
   15010:	ldr	r3, [pc, #176]	; 150c8 <abort@plt+0x43a8>
   15014:	add	r9, r0, #1
   15018:	cmp	r7, r3
   1501c:	str	r9, [r6, r5, lsl #3]
   15020:	beq	1502c <abort@plt+0x430c>
   15024:	mov	r0, r7
   15028:	bl	168a0 <abort@plt+0x5b80>
   1502c:	mov	r0, r9
   15030:	bl	15ff4 <abort@plt+0x52d4>
   15034:	ldr	ip, [sp, #32]
   15038:	ldr	lr, [r4, #60]	; 0x3c
   1503c:	ldr	r5, [r4, #56]	; 0x38
   15040:	mov	r3, fp
   15044:	mov	r2, sl
   15048:	mov	r1, r9
   1504c:	str	r0, [ip, #4]
   15050:	ldr	ip, [r4, #16]
   15054:	ldr	r4, [pc, #104]	; 150c4 <abort@plt+0x43a4>
   15058:	str	lr, [sp, #16]
   1505c:	str	r4, [sp, #8]
   15060:	ldr	r4, [sp, #36]	; 0x24
   15064:	str	r5, [sp, #12]
   15068:	str	r4, [sp, #4]
   1506c:	str	ip, [sp]
   15070:	mov	r7, r0
   15074:	bl	11718 <abort@plt+0x9f8>
   15078:	ldr	r3, [sp, #28]
   1507c:	mov	r0, r7
   15080:	str	r3, [r8]
   15084:	add	sp, sp, #52	; 0x34
   15088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1508c:	mov	r3, #8
   15090:	sub	r2, r5, r2
   15094:	str	r3, [sp]
   15098:	add	r1, sp, #44	; 0x2c
   1509c:	add	r2, r2, #1
   150a0:	mvn	r3, #-2147483648	; 0x80000000
   150a4:	bl	16210 <abort@plt+0x54f0>
   150a8:	mov	r6, r0
   150ac:	ldm	r7, {r0, r1}
   150b0:	str	r6, [r4]
   150b4:	stm	r6, {r0, r1}
   150b8:	b	14f90 <abort@plt+0x4270>
   150bc:	bl	10d20 <abort@plt>
   150c0:	ldrdeq	r8, [r2], -r0
   150c4:	andeq	r8, r2, r8, ror #1
   150c8:	andeq	r8, r2, ip, ror #2
   150cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150d0:	sub	sp, sp, #44	; 0x2c
   150d4:	mov	r9, r0
   150d8:	mov	sl, r1
   150dc:	bl	10c84 <__errno_location@plt>
   150e0:	ldr	r4, [pc, #360]	; 15250 <abort@plt+0x4530>
   150e4:	ldr	r2, [r4, #4]
   150e8:	ldr	r5, [r4]
   150ec:	cmp	r2, #0
   150f0:	ldr	r3, [r0]
   150f4:	mov	r7, r0
   150f8:	str	r3, [sp, #24]
   150fc:	bgt	15158 <abort@plt+0x4438>
   15100:	add	r6, r4, #8
   15104:	cmp	r5, r6
   15108:	str	r2, [sp, #36]	; 0x24
   1510c:	beq	15220 <abort@plt+0x4500>
   15110:	mov	r3, #8
   15114:	mov	r0, r5
   15118:	str	r3, [sp]
   1511c:	rsb	r2, r2, #1
   15120:	mvn	r3, #-2147483648	; 0x80000000
   15124:	add	r1, sp, #36	; 0x24
   15128:	bl	16210 <abort@plt+0x54f0>
   1512c:	mov	r5, r0
   15130:	str	r0, [r4]
   15134:	ldr	r0, [r4, #4]
   15138:	ldr	r2, [sp, #36]	; 0x24
   1513c:	mov	r1, #0
   15140:	sub	r2, r2, r0
   15144:	add	r0, r5, r0, lsl #3
   15148:	lsl	r2, r2, #3
   1514c:	bl	10c9c <memset@plt>
   15150:	ldr	r3, [sp, #36]	; 0x24
   15154:	str	r3, [r4, #4]
   15158:	ldr	r1, [r4, #20]
   1515c:	ldr	r8, [r5]
   15160:	ldr	r6, [r5, #4]
   15164:	ldr	r2, [r4, #56]	; 0x38
   15168:	ldr	r3, [r4, #16]
   1516c:	ldr	ip, [r4, #60]	; 0x3c
   15170:	ldr	fp, [pc, #220]	; 15254 <abort@plt+0x4534>
   15174:	orr	r1, r1, #1
   15178:	str	r1, [sp, #28]
   1517c:	str	r1, [sp, #4]
   15180:	str	r2, [sp, #12]
   15184:	str	r3, [sp]
   15188:	mov	r1, r8
   1518c:	mov	r0, r6
   15190:	str	ip, [sp, #16]
   15194:	str	fp, [sp, #8]
   15198:	mov	r3, sl
   1519c:	mov	r2, r9
   151a0:	bl	11718 <abort@plt+0x9f8>
   151a4:	cmp	r8, r0
   151a8:	bhi	1520c <abort@plt+0x44ec>
   151ac:	ldr	r3, [pc, #164]	; 15258 <abort@plt+0x4538>
   151b0:	add	r8, r0, #1
   151b4:	cmp	r6, r3
   151b8:	str	r8, [r5]
   151bc:	beq	151c8 <abort@plt+0x44a8>
   151c0:	mov	r0, r6
   151c4:	bl	168a0 <abort@plt+0x5b80>
   151c8:	mov	r0, r8
   151cc:	bl	15ff4 <abort@plt+0x52d4>
   151d0:	ldr	lr, [r4, #60]	; 0x3c
   151d4:	ldr	ip, [r4, #16]
   151d8:	mov	r3, sl
   151dc:	mov	r2, r9
   151e0:	mov	r1, r8
   151e4:	str	r0, [r5, #4]
   151e8:	ldr	r5, [r4, #56]	; 0x38
   151ec:	ldr	r4, [sp, #28]
   151f0:	str	fp, [sp, #8]
   151f4:	str	r4, [sp, #4]
   151f8:	str	lr, [sp, #16]
   151fc:	str	r5, [sp, #12]
   15200:	str	ip, [sp]
   15204:	mov	r6, r0
   15208:	bl	11718 <abort@plt+0x9f8>
   1520c:	ldr	r3, [sp, #24]
   15210:	mov	r0, r6
   15214:	str	r3, [r7]
   15218:	add	sp, sp, #44	; 0x2c
   1521c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15220:	mov	r3, #8
   15224:	str	r3, [sp]
   15228:	add	r1, sp, #36	; 0x24
   1522c:	rsb	r2, r2, #1
   15230:	mvn	r3, #-2147483648	; 0x80000000
   15234:	mov	r0, #0
   15238:	bl	16210 <abort@plt+0x54f0>
   1523c:	mov	r5, r0
   15240:	ldm	r6, {r0, r1}
   15244:	str	r5, [r4]
   15248:	stm	r5, {r0, r1}
   1524c:	b	15134 <abort@plt+0x4414>
   15250:	ldrdeq	r8, [r2], -r0
   15254:	andeq	r8, r2, r8, ror #1
   15258:	andeq	r8, r2, ip, ror #2
   1525c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15260:	sub	sp, sp, #44	; 0x2c
   15264:	mov	r5, r0
   15268:	mov	sl, r1
   1526c:	bl	10c84 <__errno_location@plt>
   15270:	ldr	r4, [pc, #396]	; 15404 <abort@plt+0x46e4>
   15274:	cmn	r5, #-2147483647	; 0x80000001
   15278:	ldr	r6, [r4]
   1527c:	mov	r8, r0
   15280:	movne	r0, #0
   15284:	moveq	r0, #1
   15288:	ldr	r3, [r8]
   1528c:	orrs	r0, r0, r5, lsr #31
   15290:	str	r3, [sp, #24]
   15294:	bne	15400 <abort@plt+0x46e0>
   15298:	ldr	r2, [r4, #4]
   1529c:	cmp	r5, r2
   152a0:	blt	15300 <abort@plt+0x45e0>
   152a4:	add	r7, r4, #8
   152a8:	cmp	r6, r7
   152ac:	str	r2, [sp, #36]	; 0x24
   152b0:	beq	153d0 <abort@plt+0x46b0>
   152b4:	mov	r3, #8
   152b8:	sub	r2, r5, r2
   152bc:	mov	r0, r6
   152c0:	str	r3, [sp]
   152c4:	add	r2, r2, #1
   152c8:	mvn	r3, #-2147483648	; 0x80000000
   152cc:	add	r1, sp, #36	; 0x24
   152d0:	bl	16210 <abort@plt+0x54f0>
   152d4:	mov	r6, r0
   152d8:	str	r0, [r4]
   152dc:	ldr	r0, [r4, #4]
   152e0:	ldr	r2, [sp, #36]	; 0x24
   152e4:	mov	r1, #0
   152e8:	sub	r2, r2, r0
   152ec:	add	r0, r6, r0, lsl #3
   152f0:	lsl	r2, r2, #3
   152f4:	bl	10c9c <memset@plt>
   152f8:	ldr	r3, [sp, #36]	; 0x24
   152fc:	str	r3, [r4, #4]
   15300:	ldr	r2, [r4, #56]	; 0x38
   15304:	add	fp, r6, r5, lsl #3
   15308:	ldr	r1, [r4, #20]
   1530c:	ldr	r9, [r6, r5, lsl #3]
   15310:	ldr	r7, [fp, #4]
   15314:	ldr	r3, [r4, #16]
   15318:	ldr	ip, [r4, #60]	; 0x3c
   1531c:	str	r2, [sp, #12]
   15320:	ldr	r2, [pc, #224]	; 15408 <abort@plt+0x46e8>
   15324:	orr	r1, r1, #1
   15328:	str	r1, [sp, #28]
   1532c:	str	r1, [sp, #4]
   15330:	str	r2, [sp, #8]
   15334:	str	r3, [sp]
   15338:	mov	r0, r7
   1533c:	mov	r1, r9
   15340:	str	ip, [sp, #16]
   15344:	mvn	r3, #0
   15348:	mov	r2, sl
   1534c:	bl	11718 <abort@plt+0x9f8>
   15350:	cmp	r9, r0
   15354:	bhi	153bc <abort@plt+0x469c>
   15358:	ldr	r3, [pc, #172]	; 1540c <abort@plt+0x46ec>
   1535c:	add	r9, r0, #1
   15360:	cmp	r7, r3
   15364:	str	r9, [r6, r5, lsl #3]
   15368:	beq	15374 <abort@plt+0x4654>
   1536c:	mov	r0, r7
   15370:	bl	168a0 <abort@plt+0x5b80>
   15374:	mov	r0, r9
   15378:	bl	15ff4 <abort@plt+0x52d4>
   1537c:	ldr	ip, [r4, #60]	; 0x3c
   15380:	ldr	r3, [r4, #16]
   15384:	ldr	lr, [r4, #56]	; 0x38
   15388:	ldr	r4, [pc, #120]	; 15408 <abort@plt+0x46e8>
   1538c:	mov	r2, sl
   15390:	mov	r1, r9
   15394:	str	r0, [fp, #4]
   15398:	str	r4, [sp, #8]
   1539c:	ldr	r4, [sp, #28]
   153a0:	str	r3, [sp]
   153a4:	str	r4, [sp, #4]
   153a8:	str	ip, [sp, #16]
   153ac:	str	lr, [sp, #12]
   153b0:	mvn	r3, #0
   153b4:	mov	r7, r0
   153b8:	bl	11718 <abort@plt+0x9f8>
   153bc:	ldr	r3, [sp, #24]
   153c0:	mov	r0, r7
   153c4:	str	r3, [r8]
   153c8:	add	sp, sp, #44	; 0x2c
   153cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153d0:	mov	r3, #8
   153d4:	sub	r2, r5, r2
   153d8:	str	r3, [sp]
   153dc:	add	r1, sp, #36	; 0x24
   153e0:	add	r2, r2, #1
   153e4:	mvn	r3, #-2147483648	; 0x80000000
   153e8:	bl	16210 <abort@plt+0x54f0>
   153ec:	mov	r6, r0
   153f0:	ldm	r7, {r0, r1}
   153f4:	str	r6, [r4]
   153f8:	stm	r6, {r0, r1}
   153fc:	b	152dc <abort@plt+0x45bc>
   15400:	bl	10d20 <abort@plt>
   15404:	ldrdeq	r8, [r2], -r0
   15408:	andeq	r8, r2, r8, ror #1
   1540c:	andeq	r8, r2, ip, ror #2
   15410:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15414:	sub	sp, sp, #44	; 0x2c
   15418:	mov	sl, r0
   1541c:	bl	10c84 <__errno_location@plt>
   15420:	ldr	r4, [pc, #348]	; 15584 <abort@plt+0x4864>
   15424:	ldr	r2, [r4, #4]
   15428:	ldr	r5, [r4]
   1542c:	cmp	r2, #0
   15430:	ldr	r3, [r0]
   15434:	mov	r8, r0
   15438:	str	r3, [sp, #28]
   1543c:	bgt	15498 <abort@plt+0x4778>
   15440:	add	r6, r4, #8
   15444:	cmp	r5, r6
   15448:	str	r2, [sp, #36]	; 0x24
   1544c:	beq	15554 <abort@plt+0x4834>
   15450:	mov	r3, #8
   15454:	mov	r0, r5
   15458:	str	r3, [sp]
   1545c:	rsb	r2, r2, #1
   15460:	mvn	r3, #-2147483648	; 0x80000000
   15464:	add	r1, sp, #36	; 0x24
   15468:	bl	16210 <abort@plt+0x54f0>
   1546c:	mov	r5, r0
   15470:	str	r0, [r4]
   15474:	ldr	r0, [r4, #4]
   15478:	ldr	r2, [sp, #36]	; 0x24
   1547c:	mov	r1, #0
   15480:	sub	r2, r2, r0
   15484:	add	r0, r5, r0, lsl #3
   15488:	lsl	r2, r2, #3
   1548c:	bl	10c9c <memset@plt>
   15490:	ldr	r3, [sp, #36]	; 0x24
   15494:	str	r3, [r4, #4]
   15498:	ldr	r7, [r4, #20]
   1549c:	ldr	r9, [r5]
   154a0:	ldr	r6, [r5, #4]
   154a4:	ldr	r2, [r4, #56]	; 0x38
   154a8:	ldr	r3, [r4, #16]
   154ac:	ldr	ip, [r4, #60]	; 0x3c
   154b0:	ldr	fp, [pc, #208]	; 15588 <abort@plt+0x4868>
   154b4:	orr	r7, r7, #1
   154b8:	str	r2, [sp, #12]
   154bc:	str	r3, [sp]
   154c0:	str	r7, [sp, #4]
   154c4:	mov	r1, r9
   154c8:	mov	r0, r6
   154cc:	str	ip, [sp, #16]
   154d0:	str	fp, [sp, #8]
   154d4:	mvn	r3, #0
   154d8:	mov	r2, sl
   154dc:	bl	11718 <abort@plt+0x9f8>
   154e0:	cmp	r9, r0
   154e4:	bhi	15540 <abort@plt+0x4820>
   154e8:	ldr	r3, [pc, #156]	; 1558c <abort@plt+0x486c>
   154ec:	add	r9, r0, #1
   154f0:	cmp	r6, r3
   154f4:	str	r9, [r5]
   154f8:	beq	15504 <abort@plt+0x47e4>
   154fc:	mov	r0, r6
   15500:	bl	168a0 <abort@plt+0x5b80>
   15504:	mov	r0, r9
   15508:	bl	15ff4 <abort@plt+0x52d4>
   1550c:	ldr	ip, [r4, #60]	; 0x3c
   15510:	ldr	r3, [r4, #16]
   15514:	ldr	lr, [r4, #56]	; 0x38
   15518:	mov	r2, sl
   1551c:	mov	r1, r9
   15520:	str	r0, [r5, #4]
   15524:	str	r3, [sp]
   15528:	stmib	sp, {r7, fp}
   1552c:	str	ip, [sp, #16]
   15530:	str	lr, [sp, #12]
   15534:	mvn	r3, #0
   15538:	mov	r6, r0
   1553c:	bl	11718 <abort@plt+0x9f8>
   15540:	ldr	r3, [sp, #28]
   15544:	mov	r0, r6
   15548:	str	r3, [r8]
   1554c:	add	sp, sp, #44	; 0x2c
   15550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15554:	mov	r3, #8
   15558:	str	r3, [sp]
   1555c:	add	r1, sp, #36	; 0x24
   15560:	rsb	r2, r2, #1
   15564:	mvn	r3, #-2147483648	; 0x80000000
   15568:	mov	r0, #0
   1556c:	bl	16210 <abort@plt+0x54f0>
   15570:	mov	r5, r0
   15574:	ldm	r6, {r0, r1}
   15578:	str	r5, [r4]
   1557c:	stm	r5, {r0, r1}
   15580:	b	15474 <abort@plt+0x4754>
   15584:	ldrdeq	r8, [r2], -r0
   15588:	andeq	r8, r2, r8, ror #1
   1558c:	andeq	r8, r2, ip, ror #2
   15590:	push	{r4, r5, r6, lr}
   15594:	sub	sp, sp, #32
   15598:	cmp	r1, #0
   1559c:	mov	r4, r0
   155a0:	ldr	r5, [sp, #48]	; 0x30
   155a4:	ldr	r6, [sp, #52]	; 0x34
   155a8:	beq	158c0 <abort@plt+0x4ba0>
   155ac:	stm	sp, {r2, r3}
   155b0:	mov	r3, r1
   155b4:	ldr	r2, [pc, #808]	; 158e4 <abort@plt+0x4bc4>
   155b8:	mov	r1, #1
   155bc:	bl	10cc0 <__fprintf_chk@plt>
   155c0:	mov	r2, #5
   155c4:	ldr	r1, [pc, #796]	; 158e8 <abort@plt+0x4bc8>
   155c8:	mov	r0, #0
   155cc:	bl	10ba0 <dcgettext@plt>
   155d0:	ldr	r3, [pc, #788]	; 158ec <abort@plt+0x4bcc>
   155d4:	ldr	r2, [pc, #788]	; 158f0 <abort@plt+0x4bd0>
   155d8:	str	r3, [sp]
   155dc:	mov	r1, #1
   155e0:	mov	r3, r0
   155e4:	mov	r0, r4
   155e8:	bl	10cc0 <__fprintf_chk@plt>
   155ec:	mov	r1, r4
   155f0:	mov	r0, #10
   155f4:	bl	10b94 <fputc_unlocked@plt>
   155f8:	mov	r2, #5
   155fc:	ldr	r1, [pc, #752]	; 158f4 <abort@plt+0x4bd4>
   15600:	mov	r0, #0
   15604:	bl	10ba0 <dcgettext@plt>
   15608:	mov	r1, #1
   1560c:	ldr	r3, [pc, #740]	; 158f8 <abort@plt+0x4bd8>
   15610:	mov	r2, r0
   15614:	mov	r0, r4
   15618:	bl	10cc0 <__fprintf_chk@plt>
   1561c:	mov	r1, r4
   15620:	mov	r0, #10
   15624:	bl	10b94 <fputc_unlocked@plt>
   15628:	cmp	r6, #9
   1562c:	ldrls	pc, [pc, r6, lsl #2]
   15630:	b	158d8 <abort@plt+0x4bb8>
   15634:			; <UNDEFINED> instruction: 0x000156b8
   15638:	andeq	r5, r1, r0, asr #13
   1563c:	andeq	r5, r1, ip, ror #13
   15640:	andeq	r5, r1, r0, lsr #14
   15644:	andeq	r5, r1, ip, asr r7
   15648:	muleq	r1, r8, r7
   1564c:	ldrdeq	r5, [r1], -r4
   15650:	andeq	r5, r1, r8, lsl r8
   15654:	andeq	r5, r1, r8, ror #16
   15658:	andeq	r5, r1, ip, asr r6
   1565c:	ldr	r1, [pc, #664]	; 158fc <abort@plt+0x4bdc>
   15660:	mov	r2, #5
   15664:	mov	r0, #0
   15668:	bl	10ba0 <dcgettext@plt>
   1566c:	ldr	ip, [r5, #32]
   15670:	ldr	r1, [r5, #28]
   15674:	ldr	r2, [r5, #24]
   15678:	ldr	r3, [r5]
   1567c:	ldr	r6, [r5, #20]
   15680:	str	ip, [sp, #28]
   15684:	ldr	lr, [r5, #16]
   15688:	str	r1, [sp, #24]
   1568c:	ldr	ip, [r5, #12]
   15690:	str	r2, [sp, #20]
   15694:	ldr	r1, [r5, #8]
   15698:	ldr	r2, [r5, #4]
   1569c:	str	r6, [sp, #16]
   156a0:	stmib	sp, {r1, ip, lr}
   156a4:	mov	r1, #1
   156a8:	str	r2, [sp]
   156ac:	mov	r2, r0
   156b0:	mov	r0, r4
   156b4:	bl	10cc0 <__fprintf_chk@plt>
   156b8:	add	sp, sp, #32
   156bc:	pop	{r4, r5, r6, pc}
   156c0:	mov	r2, #5
   156c4:	ldr	r1, [pc, #564]	; 15900 <abort@plt+0x4be0>
   156c8:	mov	r0, #0
   156cc:	bl	10ba0 <dcgettext@plt>
   156d0:	ldr	r3, [r5]
   156d4:	mov	r1, #1
   156d8:	mov	r2, r0
   156dc:	mov	r0, r4
   156e0:	add	sp, sp, #32
   156e4:	pop	{r4, r5, r6, lr}
   156e8:	b	10cc0 <__fprintf_chk@plt>
   156ec:	mov	r2, #5
   156f0:	ldr	r1, [pc, #524]	; 15904 <abort@plt+0x4be4>
   156f4:	mov	r0, #0
   156f8:	bl	10ba0 <dcgettext@plt>
   156fc:	ldr	r2, [r5, #4]
   15700:	ldr	r3, [r5]
   15704:	mov	r1, #1
   15708:	str	r2, [sp, #48]	; 0x30
   1570c:	mov	r2, r0
   15710:	mov	r0, r4
   15714:	add	sp, sp, #32
   15718:	pop	{r4, r5, r6, lr}
   1571c:	b	10cc0 <__fprintf_chk@plt>
   15720:	mov	r2, #5
   15724:	ldr	r1, [pc, #476]	; 15908 <abort@plt+0x4be8>
   15728:	mov	r0, #0
   1572c:	bl	10ba0 <dcgettext@plt>
   15730:	ldr	r1, [r5, #8]
   15734:	ldr	r2, [r5, #4]
   15738:	ldr	r3, [r5]
   1573c:	str	r1, [sp, #52]	; 0x34
   15740:	str	r2, [sp, #48]	; 0x30
   15744:	mov	r1, #1
   15748:	mov	r2, r0
   1574c:	mov	r0, r4
   15750:	add	sp, sp, #32
   15754:	pop	{r4, r5, r6, lr}
   15758:	b	10cc0 <__fprintf_chk@plt>
   1575c:	mov	r2, #5
   15760:	ldr	r1, [pc, #420]	; 1590c <abort@plt+0x4bec>
   15764:	mov	r0, #0
   15768:	bl	10ba0 <dcgettext@plt>
   1576c:	ldr	r1, [r5, #8]
   15770:	ldr	ip, [r5, #12]
   15774:	ldr	r2, [r5, #4]
   15778:	ldr	r3, [r5]
   1577c:	stmib	sp, {r1, ip}
   15780:	str	r2, [sp]
   15784:	mov	r1, #1
   15788:	mov	r2, r0
   1578c:	mov	r0, r4
   15790:	bl	10cc0 <__fprintf_chk@plt>
   15794:	b	156b8 <abort@plt+0x4998>
   15798:	mov	r2, #5
   1579c:	ldr	r1, [pc, #364]	; 15910 <abort@plt+0x4bf0>
   157a0:	mov	r0, #0
   157a4:	bl	10ba0 <dcgettext@plt>
   157a8:	add	r1, r5, #8
   157ac:	ldr	r2, [r5, #4]
   157b0:	ldm	r1, {r1, ip, lr}
   157b4:	ldr	r3, [r5]
   157b8:	str	r2, [sp]
   157bc:	stmib	sp, {r1, ip, lr}
   157c0:	mov	r1, #1
   157c4:	mov	r2, r0
   157c8:	mov	r0, r4
   157cc:	bl	10cc0 <__fprintf_chk@plt>
   157d0:	b	156b8 <abort@plt+0x4998>
   157d4:	mov	r2, #5
   157d8:	ldr	r1, [pc, #308]	; 15914 <abort@plt+0x4bf4>
   157dc:	mov	r0, #0
   157e0:	bl	10ba0 <dcgettext@plt>
   157e4:	add	r1, r5, #8
   157e8:	ldr	r2, [r5, #4]
   157ec:	ldm	r1, {r1, ip, lr}
   157f0:	ldr	r6, [r5, #20]
   157f4:	ldr	r3, [r5]
   157f8:	stmib	sp, {r1, ip, lr}
   157fc:	mov	r1, #1
   15800:	str	r2, [sp]
   15804:	str	r6, [sp, #16]
   15808:	mov	r2, r0
   1580c:	mov	r0, r4
   15810:	bl	10cc0 <__fprintf_chk@plt>
   15814:	b	156b8 <abort@plt+0x4998>
   15818:	mov	r2, #5
   1581c:	ldr	r1, [pc, #244]	; 15918 <abort@plt+0x4bf8>
   15820:	mov	r0, #0
   15824:	bl	10ba0 <dcgettext@plt>
   15828:	ldr	r2, [r5, #24]
   1582c:	ldr	r3, [r5]
   15830:	ldr	r6, [r5, #20]
   15834:	ldr	lr, [r5, #16]
   15838:	ldr	ip, [r5, #12]
   1583c:	str	r2, [sp, #20]
   15840:	ldr	r1, [r5, #8]
   15844:	ldr	r2, [r5, #4]
   15848:	str	r6, [sp, #16]
   1584c:	stmib	sp, {r1, ip, lr}
   15850:	mov	r1, #1
   15854:	str	r2, [sp]
   15858:	mov	r2, r0
   1585c:	mov	r0, r4
   15860:	bl	10cc0 <__fprintf_chk@plt>
   15864:	b	156b8 <abort@plt+0x4998>
   15868:	mov	r2, #5
   1586c:	ldr	r1, [pc, #168]	; 1591c <abort@plt+0x4bfc>
   15870:	mov	r0, #0
   15874:	bl	10ba0 <dcgettext@plt>
   15878:	ldr	r1, [r5, #28]
   1587c:	ldr	r2, [r5, #24]
   15880:	ldr	r3, [r5]
   15884:	ldr	r6, [r5, #20]
   15888:	ldr	lr, [r5, #16]
   1588c:	str	r1, [sp, #24]
   15890:	ldr	ip, [r5, #12]
   15894:	str	r2, [sp, #20]
   15898:	ldr	r1, [r5, #8]
   1589c:	ldr	r2, [r5, #4]
   158a0:	str	r6, [sp, #16]
   158a4:	stmib	sp, {r1, ip, lr}
   158a8:	mov	r1, #1
   158ac:	str	r2, [sp]
   158b0:	mov	r2, r0
   158b4:	mov	r0, r4
   158b8:	bl	10cc0 <__fprintf_chk@plt>
   158bc:	b	156b8 <abort@plt+0x4998>
   158c0:	str	r3, [sp]
   158c4:	mov	r1, #1
   158c8:	mov	r3, r2
   158cc:	ldr	r2, [pc, #76]	; 15920 <abort@plt+0x4c00>
   158d0:	bl	10cc0 <__fprintf_chk@plt>
   158d4:	b	155c0 <abort@plt+0x48a0>
   158d8:	mov	r2, #5
   158dc:	ldr	r1, [pc, #64]	; 15924 <abort@plt+0x4c04>
   158e0:	b	15664 <abort@plt+0x4944>
   158e4:			; <UNDEFINED> instruction: 0x000174b0
   158e8:	andeq	r7, r1, r4, asr #9
   158ec:	andeq	r0, r0, r6, ror #15
   158f0:	muleq	r1, ip, r7
   158f4:	andeq	r7, r1, r8, asr #9
   158f8:	andeq	r7, r1, r4, ror r5
   158fc:	andeq	r7, r1, r4, lsr #13
   15900:	muleq	r1, r8, r5
   15904:	andeq	r7, r1, r8, lsr #11
   15908:	andeq	r7, r1, r0, asr #11
   1590c:	ldrdeq	r7, [r1], -ip
   15910:	strdeq	r7, [r1], -ip
   15914:	andeq	r7, r1, r0, lsr #12
   15918:	andeq	r7, r1, r8, asr #12
   1591c:	andeq	r7, r1, r4, ror r6
   15920:			; <UNDEFINED> instruction: 0x000174bc
   15924:	ldrdeq	r7, [r1], -r8
   15928:	push	{r4, r5, lr}
   1592c:	sub	sp, sp, #12
   15930:	ldr	r5, [sp, #24]
   15934:	ldr	ip, [r5]
   15938:	cmp	ip, #0
   1593c:	beq	15958 <abort@plt+0x4c38>
   15940:	mov	lr, r5
   15944:	mov	ip, #0
   15948:	ldr	r4, [lr, #4]!
   1594c:	add	ip, ip, #1
   15950:	cmp	r4, #0
   15954:	bne	15948 <abort@plt+0x4c28>
   15958:	stm	sp, {r5, ip}
   1595c:	bl	15590 <abort@plt+0x4870>
   15960:	add	sp, sp, #12
   15964:	pop	{r4, r5, pc}
   15968:	push	{r4, r5, lr}
   1596c:	sub	sp, sp, #76	; 0x4c
   15970:	mov	r5, r0
   15974:	ldr	ip, [sp, #88]	; 0x58
   15978:	ldr	r0, [ip]
   1597c:	cmp	r0, #0
   15980:	str	r0, [sp, #32]
   15984:	beq	15d58 <abort@plt+0x5038>
   15988:	ldr	r0, [ip, #4]
   1598c:	cmp	r0, #0
   15990:	str	r0, [sp, #36]	; 0x24
   15994:	beq	15d60 <abort@plt+0x5040>
   15998:	ldr	r0, [ip, #8]
   1599c:	cmp	r0, #0
   159a0:	str	r0, [sp, #40]	; 0x28
   159a4:	beq	15d68 <abort@plt+0x5048>
   159a8:	ldr	r0, [ip, #12]
   159ac:	cmp	r0, #0
   159b0:	str	r0, [sp, #44]	; 0x2c
   159b4:	beq	15d70 <abort@plt+0x5050>
   159b8:	ldr	r0, [ip, #16]
   159bc:	cmp	r0, #0
   159c0:	str	r0, [sp, #48]	; 0x30
   159c4:	beq	15d78 <abort@plt+0x5058>
   159c8:	ldr	r0, [ip, #20]
   159cc:	cmp	r0, #0
   159d0:	str	r0, [sp, #52]	; 0x34
   159d4:	beq	15d80 <abort@plt+0x5060>
   159d8:	ldr	r0, [ip, #24]
   159dc:	cmp	r0, #0
   159e0:	str	r0, [sp, #56]	; 0x38
   159e4:	beq	15d88 <abort@plt+0x5068>
   159e8:	ldr	r0, [ip, #28]
   159ec:	cmp	r0, #0
   159f0:	str	r0, [sp, #60]	; 0x3c
   159f4:	beq	15d90 <abort@plt+0x5070>
   159f8:	ldr	r0, [ip, #32]
   159fc:	cmp	r0, #0
   15a00:	str	r0, [sp, #64]	; 0x40
   15a04:	beq	15d98 <abort@plt+0x5078>
   15a08:	ldr	r0, [ip, #36]	; 0x24
   15a0c:	cmp	r0, #0
   15a10:	movne	r4, #10
   15a14:	moveq	r4, #9
   15a18:	cmp	r1, #0
   15a1c:	beq	15d30 <abort@plt+0x5010>
   15a20:	stm	sp, {r2, r3}
   15a24:	mov	r0, r5
   15a28:	mov	r3, r1
   15a2c:	ldr	r2, [pc, #876]	; 15da0 <abort@plt+0x5080>
   15a30:	mov	r1, #1
   15a34:	bl	10cc0 <__fprintf_chk@plt>
   15a38:	mov	r2, #5
   15a3c:	ldr	r1, [pc, #864]	; 15da4 <abort@plt+0x5084>
   15a40:	mov	r0, #0
   15a44:	bl	10ba0 <dcgettext@plt>
   15a48:	ldr	r3, [pc, #856]	; 15da8 <abort@plt+0x5088>
   15a4c:	ldr	r2, [pc, #856]	; 15dac <abort@plt+0x508c>
   15a50:	str	r3, [sp]
   15a54:	mov	r1, #1
   15a58:	mov	r3, r0
   15a5c:	mov	r0, r5
   15a60:	bl	10cc0 <__fprintf_chk@plt>
   15a64:	mov	r1, r5
   15a68:	mov	r0, #10
   15a6c:	bl	10b94 <fputc_unlocked@plt>
   15a70:	mov	r2, #5
   15a74:	ldr	r1, [pc, #820]	; 15db0 <abort@plt+0x5090>
   15a78:	mov	r0, #0
   15a7c:	bl	10ba0 <dcgettext@plt>
   15a80:	mov	r1, #1
   15a84:	ldr	r3, [pc, #808]	; 15db4 <abort@plt+0x5094>
   15a88:	mov	r2, r0
   15a8c:	mov	r0, r5
   15a90:	bl	10cc0 <__fprintf_chk@plt>
   15a94:	mov	r1, r5
   15a98:	mov	r0, #10
   15a9c:	bl	10b94 <fputc_unlocked@plt>
   15aa0:	cmp	r4, #9
   15aa4:	ldrls	pc, [pc, r4, lsl #2]
   15aa8:	b	15d4c <abort@plt+0x502c>
   15aac:	andeq	r5, r1, r0, lsr fp
   15ab0:	andeq	r5, r1, r8, lsr fp
   15ab4:	andeq	r5, r1, r4, ror #22
   15ab8:	muleq	r1, r8, fp
   15abc:	ldrdeq	r5, [r1], -r0
   15ac0:	andeq	r5, r1, ip, lsl #24
   15ac4:	andeq	r5, r1, r8, asr #24
   15ac8:	andeq	r5, r1, ip, lsl #25
   15acc:	ldrdeq	r5, [r1], -r8
   15ad0:	ldrdeq	r5, [r1], -r4
   15ad4:	ldr	r1, [pc, #732]	; 15db8 <abort@plt+0x5098>
   15ad8:	mov	r2, #5
   15adc:	mov	r0, #0
   15ae0:	bl	10ba0 <dcgettext@plt>
   15ae4:	ldr	ip, [sp, #64]	; 0x40
   15ae8:	ldr	r1, [sp, #60]	; 0x3c
   15aec:	ldr	r2, [sp, #56]	; 0x38
   15af0:	ldr	lr, [sp, #48]	; 0x30
   15af4:	str	ip, [sp, #28]
   15af8:	str	r1, [sp, #24]
   15afc:	ldr	ip, [sp, #44]	; 0x2c
   15b00:	ldr	r1, [sp, #40]	; 0x28
   15b04:	ldr	r4, [sp, #52]	; 0x34
   15b08:	str	r2, [sp, #20]
   15b0c:	ldr	r2, [sp, #36]	; 0x24
   15b10:	stmib	sp, {r1, ip, lr}
   15b14:	mov	r1, #1
   15b18:	str	r2, [sp]
   15b1c:	ldr	r3, [sp, #32]
   15b20:	str	r4, [sp, #16]
   15b24:	mov	r2, r0
   15b28:	mov	r0, r5
   15b2c:	bl	10cc0 <__fprintf_chk@plt>
   15b30:	add	sp, sp, #76	; 0x4c
   15b34:	pop	{r4, r5, pc}
   15b38:	mov	r2, #5
   15b3c:	ldr	r1, [pc, #632]	; 15dbc <abort@plt+0x509c>
   15b40:	mov	r0, #0
   15b44:	bl	10ba0 <dcgettext@plt>
   15b48:	ldr	r3, [sp, #32]
   15b4c:	mov	r1, #1
   15b50:	mov	r2, r0
   15b54:	mov	r0, r5
   15b58:	add	sp, sp, #76	; 0x4c
   15b5c:	pop	{r4, r5, lr}
   15b60:	b	10cc0 <__fprintf_chk@plt>
   15b64:	mov	r2, #5
   15b68:	ldr	r1, [pc, #592]	; 15dc0 <abort@plt+0x50a0>
   15b6c:	mov	r0, #0
   15b70:	bl	10ba0 <dcgettext@plt>
   15b74:	ldr	r2, [sp, #36]	; 0x24
   15b78:	ldr	r3, [sp, #32]
   15b7c:	str	r2, [sp, #88]	; 0x58
   15b80:	mov	r1, #1
   15b84:	mov	r2, r0
   15b88:	mov	r0, r5
   15b8c:	add	sp, sp, #76	; 0x4c
   15b90:	pop	{r4, r5, lr}
   15b94:	b	10cc0 <__fprintf_chk@plt>
   15b98:	mov	r2, #5
   15b9c:	ldr	r1, [pc, #544]	; 15dc4 <abort@plt+0x50a4>
   15ba0:	mov	r0, #0
   15ba4:	bl	10ba0 <dcgettext@plt>
   15ba8:	ldr	r1, [sp, #40]	; 0x28
   15bac:	ldr	r2, [sp, #36]	; 0x24
   15bb0:	str	r1, [sp, #4]
   15bb4:	str	r2, [sp]
   15bb8:	ldr	r3, [sp, #32]
   15bbc:	mov	r1, #1
   15bc0:	mov	r2, r0
   15bc4:	mov	r0, r5
   15bc8:	bl	10cc0 <__fprintf_chk@plt>
   15bcc:	b	15b30 <abort@plt+0x4e10>
   15bd0:	mov	r2, #5
   15bd4:	ldr	r1, [pc, #492]	; 15dc8 <abort@plt+0x50a8>
   15bd8:	mov	r0, #0
   15bdc:	bl	10ba0 <dcgettext@plt>
   15be0:	ldr	r1, [sp, #40]	; 0x28
   15be4:	ldr	ip, [sp, #44]	; 0x2c
   15be8:	ldr	r2, [sp, #36]	; 0x24
   15bec:	ldr	r3, [sp, #32]
   15bf0:	stmib	sp, {r1, ip}
   15bf4:	str	r2, [sp]
   15bf8:	mov	r1, #1
   15bfc:	mov	r2, r0
   15c00:	mov	r0, r5
   15c04:	bl	10cc0 <__fprintf_chk@plt>
   15c08:	b	15b30 <abort@plt+0x4e10>
   15c0c:	mov	r2, #5
   15c10:	ldr	r1, [pc, #436]	; 15dcc <abort@plt+0x50ac>
   15c14:	mov	r0, #0
   15c18:	bl	10ba0 <dcgettext@plt>
   15c1c:	add	r1, sp, #40	; 0x28
   15c20:	ldr	r2, [sp, #36]	; 0x24
   15c24:	ldm	r1, {r1, ip, lr}
   15c28:	ldr	r3, [sp, #32]
   15c2c:	str	r2, [sp]
   15c30:	stmib	sp, {r1, ip, lr}
   15c34:	mov	r1, #1
   15c38:	mov	r2, r0
   15c3c:	mov	r0, r5
   15c40:	bl	10cc0 <__fprintf_chk@plt>
   15c44:	b	15b30 <abort@plt+0x4e10>
   15c48:	mov	r2, #5
   15c4c:	ldr	r1, [pc, #380]	; 15dd0 <abort@plt+0x50b0>
   15c50:	mov	r0, #0
   15c54:	bl	10ba0 <dcgettext@plt>
   15c58:	add	r1, sp, #40	; 0x28
   15c5c:	ldr	r2, [sp, #36]	; 0x24
   15c60:	ldm	r1, {r1, ip, lr}
   15c64:	ldr	r4, [sp, #52]	; 0x34
   15c68:	str	r2, [sp]
   15c6c:	stmib	sp, {r1, ip, lr}
   15c70:	mov	r1, #1
   15c74:	ldr	r3, [sp, #32]
   15c78:	str	r4, [sp, #16]
   15c7c:	mov	r2, r0
   15c80:	mov	r0, r5
   15c84:	bl	10cc0 <__fprintf_chk@plt>
   15c88:	b	15b30 <abort@plt+0x4e10>
   15c8c:	mov	r2, #5
   15c90:	ldr	r1, [pc, #316]	; 15dd4 <abort@plt+0x50b4>
   15c94:	mov	r0, #0
   15c98:	bl	10ba0 <dcgettext@plt>
   15c9c:	add	r1, sp, #40	; 0x28
   15ca0:	ldr	r2, [sp, #56]	; 0x38
   15ca4:	ldm	r1, {r1, ip, lr}
   15ca8:	ldr	r4, [sp, #52]	; 0x34
   15cac:	str	r2, [sp, #20]
   15cb0:	ldr	r2, [sp, #36]	; 0x24
   15cb4:	stmib	sp, {r1, ip, lr}
   15cb8:	mov	r1, #1
   15cbc:	str	r2, [sp]
   15cc0:	ldr	r3, [sp, #32]
   15cc4:	str	r4, [sp, #16]
   15cc8:	mov	r2, r0
   15ccc:	mov	r0, r5
   15cd0:	bl	10cc0 <__fprintf_chk@plt>
   15cd4:	b	15b30 <abort@plt+0x4e10>
   15cd8:	mov	r2, #5
   15cdc:	ldr	r1, [pc, #244]	; 15dd8 <abort@plt+0x50b8>
   15ce0:	mov	r0, #0
   15ce4:	bl	10ba0 <dcgettext@plt>
   15ce8:	ldr	r1, [sp, #60]	; 0x3c
   15cec:	ldr	r2, [sp, #56]	; 0x38
   15cf0:	ldr	lr, [sp, #48]	; 0x30
   15cf4:	ldr	ip, [sp, #44]	; 0x2c
   15cf8:	str	r1, [sp, #24]
   15cfc:	ldr	r1, [sp, #40]	; 0x28
   15d00:	ldr	r4, [sp, #52]	; 0x34
   15d04:	str	r2, [sp, #20]
   15d08:	ldr	r2, [sp, #36]	; 0x24
   15d0c:	stmib	sp, {r1, ip, lr}
   15d10:	mov	r1, #1
   15d14:	str	r2, [sp]
   15d18:	ldr	r3, [sp, #32]
   15d1c:	str	r4, [sp, #16]
   15d20:	mov	r2, r0
   15d24:	mov	r0, r5
   15d28:	bl	10cc0 <__fprintf_chk@plt>
   15d2c:	b	15b30 <abort@plt+0x4e10>
   15d30:	str	r3, [sp]
   15d34:	mov	r1, #1
   15d38:	mov	r3, r2
   15d3c:	mov	r0, r5
   15d40:	ldr	r2, [pc, #148]	; 15ddc <abort@plt+0x50bc>
   15d44:	bl	10cc0 <__fprintf_chk@plt>
   15d48:	b	15a38 <abort@plt+0x4d18>
   15d4c:	mov	r2, #5
   15d50:	ldr	r1, [pc, #136]	; 15de0 <abort@plt+0x50c0>
   15d54:	b	15adc <abort@plt+0x4dbc>
   15d58:	mov	r4, r0
   15d5c:	b	15a18 <abort@plt+0x4cf8>
   15d60:	mov	r4, #1
   15d64:	b	15a18 <abort@plt+0x4cf8>
   15d68:	mov	r4, #2
   15d6c:	b	15a18 <abort@plt+0x4cf8>
   15d70:	mov	r4, #3
   15d74:	b	15a18 <abort@plt+0x4cf8>
   15d78:	mov	r4, #4
   15d7c:	b	15a18 <abort@plt+0x4cf8>
   15d80:	mov	r4, #5
   15d84:	b	15a18 <abort@plt+0x4cf8>
   15d88:	mov	r4, #6
   15d8c:	b	15a18 <abort@plt+0x4cf8>
   15d90:	mov	r4, #7
   15d94:	b	15a18 <abort@plt+0x4cf8>
   15d98:	mov	r4, #8
   15d9c:	b	15a18 <abort@plt+0x4cf8>
   15da0:			; <UNDEFINED> instruction: 0x000174b0
   15da4:	andeq	r7, r1, r4, asr #9
   15da8:	andeq	r0, r0, r6, ror #15
   15dac:	muleq	r1, ip, r7
   15db0:	andeq	r7, r1, r8, asr #9
   15db4:	andeq	r7, r1, r4, ror r5
   15db8:	andeq	r7, r1, r4, lsr #13
   15dbc:	muleq	r1, r8, r5
   15dc0:	andeq	r7, r1, r8, lsr #11
   15dc4:	andeq	r7, r1, r0, asr #11
   15dc8:	ldrdeq	r7, [r1], -ip
   15dcc:	strdeq	r7, [r1], -ip
   15dd0:	andeq	r7, r1, r0, lsr #12
   15dd4:	andeq	r7, r1, r8, asr #12
   15dd8:	andeq	r7, r1, r4, ror r6
   15ddc:			; <UNDEFINED> instruction: 0x000174bc
   15de0:	ldrdeq	r7, [r1], -r8
   15de4:	push	{r3}		; (str r3, [sp, #-4]!)
   15de8:	push	{lr}		; (str lr, [sp, #-4]!)
   15dec:	sub	sp, sp, #56	; 0x38
   15df0:	add	r3, sp, #64	; 0x40
   15df4:	ldr	ip, [sp, #64]	; 0x40
   15df8:	str	r3, [sp, #12]
   15dfc:	cmp	ip, #0
   15e00:	str	ip, [sp, #16]
   15e04:	beq	15e9c <abort@plt+0x517c>
   15e08:	ldr	ip, [sp, #68]	; 0x44
   15e0c:	cmp	ip, #0
   15e10:	str	ip, [sp, #20]
   15e14:	beq	15ebc <abort@plt+0x519c>
   15e18:	ldr	ip, [sp, #72]	; 0x48
   15e1c:	cmp	ip, #0
   15e20:	str	ip, [sp, #24]
   15e24:	beq	15ec4 <abort@plt+0x51a4>
   15e28:	ldr	ip, [sp, #76]	; 0x4c
   15e2c:	cmp	ip, #0
   15e30:	str	ip, [sp, #28]
   15e34:	beq	15ecc <abort@plt+0x51ac>
   15e38:	ldr	ip, [sp, #80]	; 0x50
   15e3c:	cmp	ip, #0
   15e40:	str	ip, [sp, #32]
   15e44:	beq	15ed4 <abort@plt+0x51b4>
   15e48:	ldr	ip, [sp, #84]	; 0x54
   15e4c:	cmp	ip, #0
   15e50:	str	ip, [sp, #36]	; 0x24
   15e54:	beq	15edc <abort@plt+0x51bc>
   15e58:	ldr	ip, [sp, #88]	; 0x58
   15e5c:	cmp	ip, #0
   15e60:	str	ip, [sp, #40]	; 0x28
   15e64:	beq	15ee4 <abort@plt+0x51c4>
   15e68:	ldr	ip, [sp, #92]	; 0x5c
   15e6c:	cmp	ip, #0
   15e70:	str	ip, [sp, #44]	; 0x2c
   15e74:	beq	15eec <abort@plt+0x51cc>
   15e78:	ldr	ip, [sp, #96]	; 0x60
   15e7c:	cmp	ip, #0
   15e80:	str	ip, [sp, #48]	; 0x30
   15e84:	beq	15ef4 <abort@plt+0x51d4>
   15e88:	ldr	ip, [sp, #100]	; 0x64
   15e8c:	cmp	ip, #0
   15e90:	str	ip, [sp, #52]	; 0x34
   15e94:	movne	ip, #10
   15e98:	moveq	ip, #9
   15e9c:	add	r3, sp, #16
   15ea0:	stm	sp, {r3, ip}
   15ea4:	ldr	r3, [sp, #60]	; 0x3c
   15ea8:	bl	15590 <abort@plt+0x4870>
   15eac:	add	sp, sp, #56	; 0x38
   15eb0:	pop	{lr}		; (ldr lr, [sp], #4)
   15eb4:	add	sp, sp, #4
   15eb8:	bx	lr
   15ebc:	mov	ip, #1
   15ec0:	b	15e9c <abort@plt+0x517c>
   15ec4:	mov	ip, #2
   15ec8:	b	15e9c <abort@plt+0x517c>
   15ecc:	mov	ip, #3
   15ed0:	b	15e9c <abort@plt+0x517c>
   15ed4:	mov	ip, #4
   15ed8:	b	15e9c <abort@plt+0x517c>
   15edc:	mov	ip, #5
   15ee0:	b	15e9c <abort@plt+0x517c>
   15ee4:	mov	ip, #6
   15ee8:	b	15e9c <abort@plt+0x517c>
   15eec:	mov	ip, #7
   15ef0:	b	15e9c <abort@plt+0x517c>
   15ef4:	mov	ip, #8
   15ef8:	b	15e9c <abort@plt+0x517c>
   15efc:	ldr	r3, [pc, #116]	; 15f78 <abort@plt+0x5258>
   15f00:	push	{r4, lr}
   15f04:	mov	r0, #10
   15f08:	ldr	r1, [r3]
   15f0c:	bl	10b94 <fputc_unlocked@plt>
   15f10:	mov	r2, #5
   15f14:	ldr	r1, [pc, #96]	; 15f7c <abort@plt+0x525c>
   15f18:	mov	r0, #0
   15f1c:	bl	10ba0 <dcgettext@plt>
   15f20:	ldr	r2, [pc, #88]	; 15f80 <abort@plt+0x5260>
   15f24:	mov	r1, r0
   15f28:	mov	r0, #1
   15f2c:	bl	10ca8 <__printf_chk@plt>
   15f30:	mov	r2, #5
   15f34:	ldr	r1, [pc, #72]	; 15f84 <abort@plt+0x5264>
   15f38:	mov	r0, #0
   15f3c:	bl	10ba0 <dcgettext@plt>
   15f40:	ldr	r3, [pc, #64]	; 15f88 <abort@plt+0x5268>
   15f44:	ldr	r2, [pc, #64]	; 15f8c <abort@plt+0x526c>
   15f48:	mov	r1, r0
   15f4c:	mov	r0, #1
   15f50:	bl	10ca8 <__printf_chk@plt>
   15f54:	mov	r2, #5
   15f58:	ldr	r1, [pc, #48]	; 15f90 <abort@plt+0x5270>
   15f5c:	mov	r0, #0
   15f60:	bl	10ba0 <dcgettext@plt>
   15f64:	ldr	r2, [pc, #40]	; 15f94 <abort@plt+0x5274>
   15f68:	pop	{r4, lr}
   15f6c:	mov	r1, r0
   15f70:	mov	r0, #1
   15f74:	b	10ca8 <__printf_chk@plt>
   15f78:	andeq	r8, r2, r4, lsr #2
   15f7c:	andeq	r7, r1, r4, lsl r7
   15f80:	andeq	r7, r1, r8, lsr #14
   15f84:	andeq	r7, r1, r0, asr #14
   15f88:	andeq	r7, r1, ip, lsl #3
   15f8c:			; <UNDEFINED> instruction: 0x000171b4
   15f90:	andeq	r7, r1, r4, asr r7
   15f94:	andeq	r7, r1, ip, ror r7
   15f98:	push	{r4, r5, r6, lr}
   15f9c:	mov	r6, r0
   15fa0:	mov	r5, r1
   15fa4:	mov	r4, r2
   15fa8:	bl	16a20 <abort@plt+0x5d00>
   15fac:	cmp	r0, #0
   15fb0:	popne	{r4, r5, r6, pc}
   15fb4:	cmp	r6, #0
   15fb8:	beq	15fc8 <abort@plt+0x52a8>
   15fbc:	cmp	r5, #0
   15fc0:	cmpne	r4, #0
   15fc4:	popeq	{r4, r5, r6, pc}
   15fc8:	bl	16614 <abort@plt+0x58f4>
   15fcc:	push	{r4, lr}
   15fd0:	bl	1669c <abort@plt+0x597c>
   15fd4:	cmp	r0, #0
   15fd8:	popne	{r4, pc}
   15fdc:	bl	16614 <abort@plt+0x58f4>
   15fe0:	push	{r4, lr}
   15fe4:	bl	1669c <abort@plt+0x597c>
   15fe8:	cmp	r0, #0
   15fec:	popne	{r4, pc}
   15ff0:	bl	16614 <abort@plt+0x58f4>
   15ff4:	push	{r4, lr}
   15ff8:	bl	1669c <abort@plt+0x597c>
   15ffc:	cmp	r0, #0
   16000:	popne	{r4, pc}
   16004:	bl	16614 <abort@plt+0x58f4>
   16008:	push	{r4, r5, r6, lr}
   1600c:	mov	r5, r0
   16010:	mov	r4, r1
   16014:	bl	166c8 <abort@plt+0x59a8>
   16018:	cmp	r0, #0
   1601c:	popne	{r4, r5, r6, pc}
   16020:	adds	r4, r4, #0
   16024:	movne	r4, #1
   16028:	cmp	r5, #0
   1602c:	orreq	r4, r4, #1
   16030:	cmp	r4, #0
   16034:	popeq	{r4, r5, r6, pc}
   16038:	bl	16614 <abort@plt+0x58f4>
   1603c:	push	{r4, lr}
   16040:	cmp	r1, #0
   16044:	orreq	r1, r1, #1
   16048:	bl	166c8 <abort@plt+0x59a8>
   1604c:	cmp	r0, #0
   16050:	popne	{r4, pc}
   16054:	bl	16614 <abort@plt+0x58f4>
   16058:	push	{r4, r5, r6, lr}
   1605c:	mov	r6, r0
   16060:	mov	r5, r1
   16064:	mov	r4, r2
   16068:	bl	16a20 <abort@plt+0x5d00>
   1606c:	cmp	r0, #0
   16070:	popne	{r4, r5, r6, pc}
   16074:	cmp	r6, #0
   16078:	beq	16088 <abort@plt+0x5368>
   1607c:	cmp	r5, #0
   16080:	cmpne	r4, #0
   16084:	popeq	{r4, r5, r6, pc}
   16088:	bl	16614 <abort@plt+0x58f4>
   1608c:	cmp	r2, #0
   16090:	cmpne	r1, #0
   16094:	moveq	r2, #1
   16098:	moveq	r1, r2
   1609c:	push	{r4, lr}
   160a0:	bl	16a20 <abort@plt+0x5d00>
   160a4:	cmp	r0, #0
   160a8:	popne	{r4, pc}
   160ac:	bl	16614 <abort@plt+0x58f4>
   160b0:	push	{r4, lr}
   160b4:	mov	r2, r1
   160b8:	mov	r1, r0
   160bc:	mov	r0, #0
   160c0:	bl	16a20 <abort@plt+0x5d00>
   160c4:	cmp	r0, #0
   160c8:	popne	{r4, pc}
   160cc:	bl	16614 <abort@plt+0x58f4>
   160d0:	cmp	r1, #0
   160d4:	cmpne	r0, #0
   160d8:	moveq	r2, #1
   160dc:	movne	r2, r1
   160e0:	moveq	r1, r2
   160e4:	movne	r1, r0
   160e8:	push	{r4, lr}
   160ec:	mov	r0, #0
   160f0:	bl	16a20 <abort@plt+0x5d00>
   160f4:	cmp	r0, #0
   160f8:	popne	{r4, pc}
   160fc:	bl	16614 <abort@plt+0x58f4>
   16100:	cmp	r0, #0
   16104:	push	{r4, r5, r6, lr}
   16108:	mov	r5, r1
   1610c:	ldr	r4, [r1]
   16110:	beq	1614c <abort@plt+0x542c>
   16114:	lsr	r2, r4, #1
   16118:	add	r3, r2, #1
   1611c:	mvn	r3, r3
   16120:	cmp	r4, r3
   16124:	bhi	16168 <abort@plt+0x5448>
   16128:	add	r4, r4, #1
   1612c:	add	r4, r4, r2
   16130:	mov	r1, r4
   16134:	mov	r2, #1
   16138:	bl	16a20 <abort@plt+0x5d00>
   1613c:	cmp	r0, #0
   16140:	beq	1616c <abort@plt+0x544c>
   16144:	str	r4, [r5]
   16148:	pop	{r4, r5, r6, pc}
   1614c:	cmp	r4, #0
   16150:	moveq	r4, #64	; 0x40
   16154:	mov	r1, r4
   16158:	mov	r2, #1
   1615c:	bl	16a20 <abort@plt+0x5d00>
   16160:	cmp	r0, #0
   16164:	bne	16144 <abort@plt+0x5424>
   16168:	bl	16614 <abort@plt+0x58f4>
   1616c:	cmp	r4, #0
   16170:	bne	16168 <abort@plt+0x5448>
   16174:	str	r4, [r5]
   16178:	pop	{r4, r5, r6, pc}
   1617c:	cmp	r0, #0
   16180:	push	{r4, r5, r6, lr}
   16184:	mov	r5, r1
   16188:	ldr	r4, [r1]
   1618c:	mov	r6, r2
   16190:	beq	161d4 <abort@plt+0x54b4>
   16194:	lsr	r1, r4, #1
   16198:	add	r3, r1, #1
   1619c:	mvn	r3, r3
   161a0:	cmp	r4, r3
   161a4:	bhi	1620c <abort@plt+0x54ec>
   161a8:	add	r4, r4, #1
   161ac:	add	r4, r4, r1
   161b0:	mov	r1, r4
   161b4:	bl	16a20 <abort@plt+0x5d00>
   161b8:	cmp	r0, #0
   161bc:	bne	161cc <abort@plt+0x54ac>
   161c0:	cmp	r4, #0
   161c4:	cmpne	r6, #0
   161c8:	bne	1620c <abort@plt+0x54ec>
   161cc:	str	r4, [r5]
   161d0:	pop	{r4, r5, r6, pc}
   161d4:	cmp	r4, #0
   161d8:	bne	161f4 <abort@plt+0x54d4>
   161dc:	mov	r1, r2
   161e0:	mov	r0, #64	; 0x40
   161e4:	bl	16b60 <abort@plt+0x5e40>
   161e8:	cmp	r0, #0
   161ec:	movne	r4, r0
   161f0:	addeq	r4, r0, #1
   161f4:	mov	r2, r6
   161f8:	mov	r1, r4
   161fc:	mov	r0, #0
   16200:	bl	16a20 <abort@plt+0x5d00>
   16204:	cmp	r0, #0
   16208:	bne	161cc <abort@plt+0x54ac>
   1620c:	bl	16614 <abort@plt+0x58f4>
   16210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16214:	sub	sp, sp, #12
   16218:	ldr	r6, [r1]
   1621c:	mov	r8, r1
   16220:	mov	r9, r0
   16224:	asrs	r4, r6, #1
   16228:	mov	sl, r2
   1622c:	mov	fp, r3
   16230:	ldr	r7, [sp, #48]	; 0x30
   16234:	bmi	163b0 <abort@plt+0x5690>
   16238:	mvn	r1, #-2147483648	; 0x80000000
   1623c:	sub	r1, r1, r4
   16240:	cmp	r6, r1
   16244:	movle	r1, #0
   16248:	movgt	r1, #1
   1624c:	mvn	r3, fp
   16250:	cmp	r1, #0
   16254:	addeq	r4, r4, r6
   16258:	mvnne	r4, #-2147483648	; 0x80000000
   1625c:	lsr	r3, r3, #31
   16260:	cmp	fp, r4
   16264:	movge	r2, #0
   16268:	andlt	r2, r3, #1
   1626c:	cmp	r2, #0
   16270:	beq	16360 <abort@plt+0x5640>
   16274:	cmp	r7, #0
   16278:	blt	16448 <abort@plt+0x5728>
   1627c:	bne	16440 <abort@plt+0x5720>
   16280:	mov	r5, #64	; 0x40
   16284:	mov	r1, r7
   16288:	mov	r0, r5
   1628c:	str	r3, [sp, #4]
   16290:	bl	16d6c <abort@plt+0x604c>
   16294:	mov	r1, r7
   16298:	mov	r4, r0
   1629c:	mov	r0, r5
   162a0:	bl	16f8c <abort@plt+0x626c>
   162a4:	ldr	r3, [sp, #4]
   162a8:	sub	r5, r5, r1
   162ac:	cmp	r9, #0
   162b0:	sub	r2, r4, r6
   162b4:	streq	r9, [r8]
   162b8:	cmp	r2, sl
   162bc:	bge	16340 <abort@plt+0x5620>
   162c0:	cmp	sl, #0
   162c4:	blt	163e0 <abort@plt+0x56c0>
   162c8:	cmp	r6, #0
   162cc:	blt	162ec <abort@plt+0x55cc>
   162d0:	mvn	r2, #-2147483648	; 0x80000000
   162d4:	sub	r2, r2, sl
   162d8:	cmp	r6, r2
   162dc:	movle	r2, #0
   162e0:	movgt	r2, #1
   162e4:	cmp	r2, #0
   162e8:	bne	163dc <abort@plt+0x56bc>
   162ec:	add	r6, r6, sl
   162f0:	cmp	fp, r6
   162f4:	movge	r3, #0
   162f8:	andlt	r3, r3, #1
   162fc:	cmp	r3, #0
   16300:	mov	r4, r6
   16304:	bne	163dc <abort@plt+0x56bc>
   16308:	cmp	r7, #0
   1630c:	blt	163f4 <abort@plt+0x56d4>
   16310:	beq	1633c <abort@plt+0x561c>
   16314:	cmp	r6, #0
   16318:	blt	16498 <abort@plt+0x5778>
   1631c:	mov	r1, r7
   16320:	mvn	r0, #-2147483648	; 0x80000000
   16324:	bl	16d6c <abort@plt+0x604c>
   16328:	cmp	r6, r0
   1632c:	movle	r0, #0
   16330:	movgt	r0, #1
   16334:	cmp	r0, #0
   16338:	bne	163dc <abort@plt+0x56bc>
   1633c:	mul	r5, r6, r7
   16340:	mov	r1, r5
   16344:	mov	r0, r9
   16348:	bl	166c8 <abort@plt+0x59a8>
   1634c:	cmp	r0, #0
   16350:	beq	163c4 <abort@plt+0x56a4>
   16354:	str	r4, [r8]
   16358:	add	sp, sp, #12
   1635c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16360:	cmp	r7, #0
   16364:	blt	16420 <abort@plt+0x5700>
   16368:	beq	16280 <abort@plt+0x5560>
   1636c:	cmp	r4, #0
   16370:	blt	16450 <abort@plt+0x5730>
   16374:	mov	r1, r7
   16378:	mvn	r0, #-2147483648	; 0x80000000
   1637c:	str	r3, [sp, #4]
   16380:	bl	16d6c <abort@plt+0x604c>
   16384:	ldr	r3, [sp, #4]
   16388:	cmp	r0, r4
   1638c:	movge	r0, #0
   16390:	movlt	r0, #1
   16394:	cmp	r0, #0
   16398:	mvnne	r5, #-2147483648	; 0x80000000
   1639c:	bne	16284 <abort@plt+0x5564>
   163a0:	mul	r5, r7, r4
   163a4:	cmp	r5, #63	; 0x3f
   163a8:	bgt	162ac <abort@plt+0x558c>
   163ac:	b	16280 <abort@plt+0x5560>
   163b0:	rsb	r1, r4, #-2147483648	; 0x80000000
   163b4:	cmp	r6, r1
   163b8:	movge	r1, #0
   163bc:	movlt	r1, #1
   163c0:	b	1624c <abort@plt+0x552c>
   163c4:	adds	r5, r5, #0
   163c8:	movne	r5, #1
   163cc:	cmp	r9, #0
   163d0:	orreq	r5, r5, #1
   163d4:	cmp	r5, #0
   163d8:	beq	16354 <abort@plt+0x5634>
   163dc:	bl	16614 <abort@plt+0x58f4>
   163e0:	rsb	r2, sl, #-2147483648	; 0x80000000
   163e4:	cmp	r6, r2
   163e8:	movge	r2, #0
   163ec:	movlt	r2, #1
   163f0:	b	162e4 <abort@plt+0x55c4>
   163f4:	cmp	r6, #0
   163f8:	blt	1647c <abort@plt+0x575c>
   163fc:	cmn	r7, #1
   16400:	beq	1633c <abort@plt+0x561c>
   16404:	mov	r1, r7
   16408:	mov	r0, #-2147483648	; 0x80000000
   1640c:	bl	16d6c <abort@plt+0x604c>
   16410:	cmp	r6, r0
   16414:	movle	r0, #0
   16418:	movgt	r0, #1
   1641c:	b	16334 <abort@plt+0x5614>
   16420:	cmp	r4, #0
   16424:	blt	164bc <abort@plt+0x579c>
   16428:	cmn	r7, #1
   1642c:	beq	163a0 <abort@plt+0x5680>
   16430:	str	r3, [sp, #4]
   16434:	mov	r1, r7
   16438:	mov	r0, #-2147483648	; 0x80000000
   1643c:	b	16380 <abort@plt+0x5660>
   16440:	mov	r4, fp
   16444:	b	16374 <abort@plt+0x5654>
   16448:	mov	r4, fp
   1644c:	b	16428 <abort@plt+0x5708>
   16450:	cmn	r4, #1
   16454:	beq	163a0 <abort@plt+0x5680>
   16458:	mov	r1, r4
   1645c:	mov	r0, #-2147483648	; 0x80000000
   16460:	str	r3, [sp, #4]
   16464:	bl	16d6c <abort@plt+0x604c>
   16468:	ldr	r3, [sp, #4]
   1646c:	cmp	r7, r0
   16470:	movle	r0, #0
   16474:	movgt	r0, #1
   16478:	b	16394 <abort@plt+0x5674>
   1647c:	mov	r1, r7
   16480:	mvn	r0, #-2147483648	; 0x80000000
   16484:	bl	16d6c <abort@plt+0x604c>
   16488:	cmp	r6, r0
   1648c:	movge	r0, #0
   16490:	movlt	r0, #1
   16494:	b	16334 <abort@plt+0x5614>
   16498:	cmn	r6, #1
   1649c:	beq	1633c <abort@plt+0x561c>
   164a0:	mov	r1, r6
   164a4:	mov	r0, #-2147483648	; 0x80000000
   164a8:	bl	16d6c <abort@plt+0x604c>
   164ac:	cmp	r7, r0
   164b0:	movle	r0, #0
   164b4:	movgt	r0, #1
   164b8:	b	16334 <abort@plt+0x5614>
   164bc:	mov	r1, r7
   164c0:	mvn	r0, #-2147483648	; 0x80000000
   164c4:	str	r3, [sp, #4]
   164c8:	bl	16d6c <abort@plt+0x604c>
   164cc:	ldr	r3, [sp, #4]
   164d0:	cmp	r0, r4
   164d4:	movle	r0, #0
   164d8:	movgt	r0, #1
   164dc:	b	16394 <abort@plt+0x5674>
   164e0:	push	{r4, lr}
   164e4:	mov	r1, #1
   164e8:	bl	16654 <abort@plt+0x5934>
   164ec:	cmp	r0, #0
   164f0:	popne	{r4, pc}
   164f4:	bl	16614 <abort@plt+0x58f4>
   164f8:	push	{r4, lr}
   164fc:	mov	r1, #1
   16500:	bl	16654 <abort@plt+0x5934>
   16504:	cmp	r0, #0
   16508:	popne	{r4, pc}
   1650c:	bl	16614 <abort@plt+0x58f4>
   16510:	push	{r4, lr}
   16514:	bl	16654 <abort@plt+0x5934>
   16518:	cmp	r0, #0
   1651c:	popne	{r4, pc}
   16520:	bl	16614 <abort@plt+0x58f4>
   16524:	push	{r4, lr}
   16528:	bl	16654 <abort@plt+0x5934>
   1652c:	cmp	r0, #0
   16530:	popne	{r4, pc}
   16534:	bl	16614 <abort@plt+0x58f4>
   16538:	push	{r4, r5, r6, lr}
   1653c:	mov	r6, r0
   16540:	mov	r0, r1
   16544:	mov	r4, r1
   16548:	bl	1669c <abort@plt+0x597c>
   1654c:	subs	r5, r0, #0
   16550:	beq	16568 <abort@plt+0x5848>
   16554:	mov	r2, r4
   16558:	mov	r1, r6
   1655c:	bl	10b70 <memcpy@plt>
   16560:	mov	r0, r5
   16564:	pop	{r4, r5, r6, pc}
   16568:	bl	16614 <abort@plt+0x58f4>
   1656c:	push	{r4, r5, r6, lr}
   16570:	mov	r6, r0
   16574:	mov	r0, r1
   16578:	mov	r4, r1
   1657c:	bl	1669c <abort@plt+0x597c>
   16580:	subs	r5, r0, #0
   16584:	beq	1659c <abort@plt+0x587c>
   16588:	mov	r2, r4
   1658c:	mov	r1, r6
   16590:	bl	10b70 <memcpy@plt>
   16594:	mov	r0, r5
   16598:	pop	{r4, r5, r6, pc}
   1659c:	bl	16614 <abort@plt+0x58f4>
   165a0:	push	{r4, r5, r6, lr}
   165a4:	mov	r6, r0
   165a8:	add	r0, r1, #1
   165ac:	mov	r4, r1
   165b0:	bl	1669c <abort@plt+0x597c>
   165b4:	subs	r5, r0, #0
   165b8:	beq	165d8 <abort@plt+0x58b8>
   165bc:	mov	r3, #0
   165c0:	mov	r1, r6
   165c4:	strb	r3, [r5, r4]
   165c8:	mov	r2, r4
   165cc:	bl	10b70 <memcpy@plt>
   165d0:	mov	r0, r5
   165d4:	pop	{r4, r5, r6, pc}
   165d8:	bl	16614 <abort@plt+0x58f4>
   165dc:	push	{r4, r5, r6, lr}
   165e0:	mov	r6, r0
   165e4:	bl	10c78 <strlen@plt>
   165e8:	add	r4, r0, #1
   165ec:	mov	r0, r4
   165f0:	bl	1669c <abort@plt+0x597c>
   165f4:	subs	r5, r0, #0
   165f8:	beq	16610 <abort@plt+0x58f0>
   165fc:	mov	r2, r4
   16600:	mov	r1, r6
   16604:	bl	10b70 <memcpy@plt>
   16608:	mov	r0, r5
   1660c:	pop	{r4, r5, r6, pc}
   16610:	bl	16614 <abort@plt+0x58f4>
   16614:	ldr	r3, [pc, #44]	; 16648 <abort@plt+0x5928>
   16618:	push	{r4, lr}
   1661c:	mov	r2, #5
   16620:	ldr	r1, [pc, #36]	; 1664c <abort@plt+0x592c>
   16624:	mov	r0, #0
   16628:	ldr	r4, [r3]
   1662c:	bl	10ba0 <dcgettext@plt>
   16630:	ldr	r2, [pc, #24]	; 16650 <abort@plt+0x5930>
   16634:	mov	r1, #0
   16638:	mov	r3, r0
   1663c:	mov	r0, r4
   16640:	bl	10c18 <error@plt>
   16644:	bl	10d20 <abort@plt>
   16648:	andeq	r8, r2, ip, asr #1
   1664c:	andeq	r7, r1, ip, asr #15
   16650:	andeq	r7, r1, ip, asr #6
   16654:	cmp	r1, #0
   16658:	cmpne	r0, #0
   1665c:	moveq	r1, #1
   16660:	moveq	r0, r1
   16664:	umull	r2, r3, r0, r1
   16668:	adds	r3, r3, #0
   1666c:	movne	r3, #1
   16670:	cmp	r2, #0
   16674:	blt	16684 <abort@plt+0x5964>
   16678:	cmp	r3, #0
   1667c:	bne	16684 <abort@plt+0x5964>
   16680:	b	10b1c <calloc@plt>
   16684:	push	{r4, lr}
   16688:	bl	10c84 <__errno_location@plt>
   1668c:	mov	r3, #12
   16690:	str	r3, [r0]
   16694:	mov	r0, #0
   16698:	pop	{r4, pc}
   1669c:	cmp	r0, #0
   166a0:	moveq	r0, #1
   166a4:	cmp	r0, #0
   166a8:	blt	166b0 <abort@plt+0x5990>
   166ac:	b	10c24 <malloc@plt>
   166b0:	push	{r4, lr}
   166b4:	bl	10c84 <__errno_location@plt>
   166b8:	mov	r3, #12
   166bc:	str	r3, [r0]
   166c0:	mov	r0, #0
   166c4:	pop	{r4, pc}
   166c8:	cmp	r0, #0
   166cc:	beq	166f0 <abort@plt+0x59d0>
   166d0:	cmp	r1, #0
   166d4:	push	{lr}		; (str lr, [sp, #-4]!)
   166d8:	sub	sp, sp, #12
   166dc:	beq	166f8 <abort@plt+0x59d8>
   166e0:	blt	16710 <abort@plt+0x59f0>
   166e4:	add	sp, sp, #12
   166e8:	pop	{lr}		; (ldr lr, [sp], #4)
   166ec:	b	10bb8 <realloc@plt>
   166f0:	mov	r0, r1
   166f4:	b	1669c <abort@plt+0x597c>
   166f8:	str	r1, [sp, #4]
   166fc:	bl	168a0 <abort@plt+0x5b80>
   16700:	ldr	r3, [sp, #4]
   16704:	mov	r0, r3
   16708:	add	sp, sp, #12
   1670c:	pop	{pc}		; (ldr pc, [sp], #4)
   16710:	bl	10c84 <__errno_location@plt>
   16714:	mov	r2, #12
   16718:	mov	r3, #0
   1671c:	str	r2, [r0]
   16720:	b	16704 <abort@plt+0x59e4>
   16724:	push	{r4, r5, r6, lr}
   16728:	mov	r4, r0
   1672c:	bl	10c00 <__fpending@plt>
   16730:	ldr	r5, [r4]
   16734:	and	r5, r5, #32
   16738:	mov	r6, r0
   1673c:	mov	r0, r4
   16740:	bl	167a0 <abort@plt+0x5a80>
   16744:	cmp	r5, #0
   16748:	mov	r4, r0
   1674c:	bne	1676c <abort@plt+0x5a4c>
   16750:	cmp	r0, #0
   16754:	beq	16764 <abort@plt+0x5a44>
   16758:	cmp	r6, #0
   1675c:	beq	16788 <abort@plt+0x5a68>
   16760:	mvn	r4, #0
   16764:	mov	r0, r4
   16768:	pop	{r4, r5, r6, pc}
   1676c:	cmp	r0, #0
   16770:	bne	16760 <abort@plt+0x5a40>
   16774:	bl	10c84 <__errno_location@plt>
   16778:	str	r4, [r0]
   1677c:	mvn	r4, #0
   16780:	mov	r0, r4
   16784:	pop	{r4, r5, r6, pc}
   16788:	bl	10c84 <__errno_location@plt>
   1678c:	ldr	r4, [r0]
   16790:	subs	r4, r4, #9
   16794:	mvnne	r4, #0
   16798:	mov	r0, r4
   1679c:	pop	{r4, r5, r6, pc}
   167a0:	push	{r4, r5, lr}
   167a4:	sub	sp, sp, #12
   167a8:	mov	r4, r0
   167ac:	bl	10cb4 <fileno@plt>
   167b0:	cmp	r0, #0
   167b4:	mov	r0, r4
   167b8:	blt	16834 <abort@plt+0x5b14>
   167bc:	bl	10c3c <__freading@plt>
   167c0:	cmp	r0, #0
   167c4:	bne	16800 <abort@plt+0x5ae0>
   167c8:	mov	r0, r4
   167cc:	bl	16840 <abort@plt+0x5b20>
   167d0:	cmp	r0, #0
   167d4:	beq	16830 <abort@plt+0x5b10>
   167d8:	bl	10c84 <__errno_location@plt>
   167dc:	mov	r5, r0
   167e0:	mov	r0, r4
   167e4:	ldr	r4, [r5]
   167e8:	bl	10ccc <fclose@plt>
   167ec:	cmp	r4, #0
   167f0:	mvnne	r0, #0
   167f4:	strne	r4, [r5]
   167f8:	add	sp, sp, #12
   167fc:	pop	{r4, r5, pc}
   16800:	mov	r0, r4
   16804:	bl	10cb4 <fileno@plt>
   16808:	mov	r3, #1
   1680c:	str	r3, [sp]
   16810:	mov	r2, #0
   16814:	mov	r3, #0
   16818:	bl	10be8 <lseek64@plt>
   1681c:	mvn	r3, #0
   16820:	mvn	r2, #0
   16824:	cmp	r1, r3
   16828:	cmpeq	r0, r2
   1682c:	bne	167c8 <abort@plt+0x5aa8>
   16830:	mov	r0, r4
   16834:	add	sp, sp, #12
   16838:	pop	{r4, r5, lr}
   1683c:	b	10ccc <fclose@plt>
   16840:	push	{r4, lr}
   16844:	subs	r4, r0, #0
   16848:	sub	sp, sp, #8
   1684c:	beq	16868 <abort@plt+0x5b48>
   16850:	bl	10c3c <__freading@plt>
   16854:	cmp	r0, #0
   16858:	beq	16868 <abort@plt+0x5b48>
   1685c:	ldr	r3, [r4]
   16860:	tst	r3, #256	; 0x100
   16864:	bne	16878 <abort@plt+0x5b58>
   16868:	mov	r0, r4
   1686c:	add	sp, sp, #8
   16870:	pop	{r4, lr}
   16874:	b	10b4c <fflush@plt>
   16878:	mov	r3, #1
   1687c:	str	r3, [sp]
   16880:	mov	r2, #0
   16884:	mov	r3, #0
   16888:	mov	r0, r4
   1688c:	bl	168f8 <abort@plt+0x5bd8>
   16890:	mov	r0, r4
   16894:	add	sp, sp, #8
   16898:	pop	{r4, lr}
   1689c:	b	10b4c <fflush@plt>
   168a0:	push	{r4, r5, lr}
   168a4:	sub	sp, sp, #12
   168a8:	mov	r5, r0
   168ac:	bl	10c84 <__errno_location@plt>
   168b0:	mov	r2, #0
   168b4:	mov	r4, r0
   168b8:	ldr	r3, [r0]
   168bc:	str	r2, [r4]
   168c0:	mov	r0, r5
   168c4:	str	r3, [sp]
   168c8:	str	r3, [sp, #4]
   168cc:	bl	10b58 <free@plt>
   168d0:	ldr	r3, [r4]
   168d4:	add	r2, sp, #8
   168d8:	cmp	r3, #0
   168dc:	moveq	r3, #4
   168e0:	movne	r3, #0
   168e4:	add	r3, r2, r3
   168e8:	ldr	r3, [r3, #-8]
   168ec:	str	r3, [r4]
   168f0:	add	sp, sp, #12
   168f4:	pop	{r4, r5, pc}
   168f8:	push	{r4, r5, r6, r7, r8, lr}
   168fc:	sub	sp, sp, #8
   16900:	ldmib	r0, {ip, lr}
   16904:	mov	r4, r0
   16908:	ldr	r5, [sp, #32]
   1690c:	cmp	lr, ip
   16910:	beq	16928 <abort@plt+0x5c08>
   16914:	str	r5, [sp, #32]
   16918:	mov	r0, r4
   1691c:	add	sp, sp, #8
   16920:	pop	{r4, r5, r6, r7, r8, lr}
   16924:	b	10cd8 <fseeko64@plt>
   16928:	ldr	lr, [r0, #20]
   1692c:	ldr	ip, [r0, #16]
   16930:	cmp	lr, ip
   16934:	bne	16914 <abort@plt+0x5bf4>
   16938:	ldr	r8, [r0, #36]	; 0x24
   1693c:	cmp	r8, #0
   16940:	bne	16914 <abort@plt+0x5bf4>
   16944:	mov	r6, r2
   16948:	mov	r7, r3
   1694c:	bl	10cb4 <fileno@plt>
   16950:	mov	r2, r6
   16954:	mov	r3, r7
   16958:	str	r5, [sp]
   1695c:	bl	10be8 <lseek64@plt>
   16960:	mvn	r3, #0
   16964:	mvn	r2, #0
   16968:	cmp	r1, r3
   1696c:	cmpeq	r0, r2
   16970:	beq	16990 <abort@plt+0x5c70>
   16974:	ldr	r3, [r4]
   16978:	strd	r0, [r4, #80]	; 0x50
   1697c:	mov	r0, r8
   16980:	bic	r3, r3, #16
   16984:	str	r3, [r4]
   16988:	add	sp, sp, #8
   1698c:	pop	{r4, r5, r6, r7, r8, pc}
   16990:	mvn	r0, #0
   16994:	b	16988 <abort@plt+0x5c68>
   16998:	push	{r4, lr}
   1699c:	mov	r0, #14
   169a0:	bl	10cfc <nl_langinfo@plt>
   169a4:	cmp	r0, #0
   169a8:	beq	169c0 <abort@plt+0x5ca0>
   169ac:	ldrb	r2, [r0]
   169b0:	ldr	r3, [pc, #16]	; 169c8 <abort@plt+0x5ca8>
   169b4:	cmp	r2, #0
   169b8:	moveq	r0, r3
   169bc:	pop	{r4, pc}
   169c0:	ldr	r0, [pc]	; 169c8 <abort@plt+0x5ca8>
   169c4:	pop	{r4, pc}
   169c8:	andeq	r7, r1, r0, ror #15
   169cc:	push	{r4, r5, r6, r7, lr}
   169d0:	subs	r6, r0, #0
   169d4:	sub	sp, sp, #12
   169d8:	addeq	r6, sp, #4
   169dc:	mov	r0, r6
   169e0:	mov	r5, r2
   169e4:	mov	r7, r1
   169e8:	bl	10c0c <mbrtowc@plt>
   169ec:	cmp	r5, #0
   169f0:	cmnne	r0, #3
   169f4:	mov	r4, r0
   169f8:	bls	16a14 <abort@plt+0x5cf4>
   169fc:	mov	r0, #0
   16a00:	bl	16a6c <abort@plt+0x5d4c>
   16a04:	cmp	r0, #0
   16a08:	moveq	r4, #1
   16a0c:	ldrbeq	r3, [r7]
   16a10:	streq	r3, [r6]
   16a14:	mov	r0, r4
   16a18:	add	sp, sp, #12
   16a1c:	pop	{r4, r5, r6, r7, pc}
   16a20:	push	{r4, r5, r6, lr}
   16a24:	subs	r4, r2, #0
   16a28:	mov	r6, r0
   16a2c:	mov	r5, r1
   16a30:	beq	16a5c <abort@plt+0x5d3c>
   16a34:	mov	r1, r4
   16a38:	mvn	r0, #0
   16a3c:	bl	16b60 <abort@plt+0x5e40>
   16a40:	cmp	r0, r5
   16a44:	bcs	16a5c <abort@plt+0x5d3c>
   16a48:	bl	10c84 <__errno_location@plt>
   16a4c:	mov	r3, #12
   16a50:	str	r3, [r0]
   16a54:	mov	r0, #0
   16a58:	pop	{r4, r5, r6, pc}
   16a5c:	mul	r1, r5, r4
   16a60:	mov	r0, r6
   16a64:	pop	{r4, r5, r6, lr}
   16a68:	b	166c8 <abort@plt+0x59a8>
   16a6c:	push	{lr}		; (str lr, [sp, #-4]!)
   16a70:	sub	sp, sp, #268	; 0x10c
   16a74:	add	r1, sp, #4
   16a78:	ldr	r2, [pc, #60]	; 16abc <abort@plt+0x5d9c>
   16a7c:	bl	16ac8 <abort@plt+0x5da8>
   16a80:	cmp	r0, #0
   16a84:	movne	r0, #0
   16a88:	bne	16ab4 <abort@plt+0x5d94>
   16a8c:	ldr	r1, [pc, #44]	; 16ac0 <abort@plt+0x5da0>
   16a90:	add	r0, sp, #4
   16a94:	bl	10b40 <strcmp@plt>
   16a98:	cmp	r0, #0
   16a9c:	beq	16ab4 <abort@plt+0x5d94>
   16aa0:	add	r0, sp, #4
   16aa4:	ldr	r1, [pc, #24]	; 16ac4 <abort@plt+0x5da4>
   16aa8:	bl	10b40 <strcmp@plt>
   16aac:	adds	r0, r0, #0
   16ab0:	movne	r0, #1
   16ab4:	add	sp, sp, #268	; 0x10c
   16ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   16abc:	andeq	r0, r0, r1, lsl #2
   16ac0:	andeq	r7, r1, r8, ror #15
   16ac4:	andeq	r7, r1, ip, ror #15
   16ac8:	push	{r4, r5, r6, lr}
   16acc:	mov	r5, r1
   16ad0:	mov	r1, #0
   16ad4:	mov	r4, r2
   16ad8:	bl	10ce4 <setlocale@plt>
   16adc:	subs	r6, r0, #0
   16ae0:	beq	16b3c <abort@plt+0x5e1c>
   16ae4:	bl	10c78 <strlen@plt>
   16ae8:	cmp	r4, r0
   16aec:	bhi	16b24 <abort@plt+0x5e04>
   16af0:	cmp	r4, #0
   16af4:	bne	16b00 <abort@plt+0x5de0>
   16af8:	mov	r0, #34	; 0x22
   16afc:	pop	{r4, r5, r6, pc}
   16b00:	sub	r4, r4, #1
   16b04:	mov	r1, r6
   16b08:	mov	r2, r4
   16b0c:	mov	r0, r5
   16b10:	bl	10b70 <memcpy@plt>
   16b14:	mov	r3, #0
   16b18:	strb	r3, [r5, r4]
   16b1c:	mov	r0, #34	; 0x22
   16b20:	pop	{r4, r5, r6, pc}
   16b24:	add	r2, r0, #1
   16b28:	mov	r1, r6
   16b2c:	mov	r0, r5
   16b30:	bl	10b70 <memcpy@plt>
   16b34:	mov	r0, #0
   16b38:	pop	{r4, r5, r6, pc}
   16b3c:	cmp	r4, #0
   16b40:	beq	16b50 <abort@plt+0x5e30>
   16b44:	strb	r6, [r5]
   16b48:	mov	r0, #22
   16b4c:	pop	{r4, r5, r6, pc}
   16b50:	mov	r0, #22
   16b54:	pop	{r4, r5, r6, pc}
   16b58:	mov	r1, #0
   16b5c:	b	10ce4 <setlocale@plt>
   16b60:	subs	r2, r1, #1
   16b64:	bxeq	lr
   16b68:	bcc	16d40 <abort@plt+0x6020>
   16b6c:	cmp	r0, r1
   16b70:	bls	16d24 <abort@plt+0x6004>
   16b74:	tst	r1, r2
   16b78:	beq	16d30 <abort@plt+0x6010>
   16b7c:	clz	r3, r0
   16b80:	clz	r2, r1
   16b84:	sub	r3, r2, r3
   16b88:	rsbs	r3, r3, #31
   16b8c:	addne	r3, r3, r3, lsl #1
   16b90:	mov	r2, #0
   16b94:	addne	pc, pc, r3, lsl #2
   16b98:	nop			; (mov r0, r0)
   16b9c:	cmp	r0, r1, lsl #31
   16ba0:	adc	r2, r2, r2
   16ba4:	subcs	r0, r0, r1, lsl #31
   16ba8:	cmp	r0, r1, lsl #30
   16bac:	adc	r2, r2, r2
   16bb0:	subcs	r0, r0, r1, lsl #30
   16bb4:	cmp	r0, r1, lsl #29
   16bb8:	adc	r2, r2, r2
   16bbc:	subcs	r0, r0, r1, lsl #29
   16bc0:	cmp	r0, r1, lsl #28
   16bc4:	adc	r2, r2, r2
   16bc8:	subcs	r0, r0, r1, lsl #28
   16bcc:	cmp	r0, r1, lsl #27
   16bd0:	adc	r2, r2, r2
   16bd4:	subcs	r0, r0, r1, lsl #27
   16bd8:	cmp	r0, r1, lsl #26
   16bdc:	adc	r2, r2, r2
   16be0:	subcs	r0, r0, r1, lsl #26
   16be4:	cmp	r0, r1, lsl #25
   16be8:	adc	r2, r2, r2
   16bec:	subcs	r0, r0, r1, lsl #25
   16bf0:	cmp	r0, r1, lsl #24
   16bf4:	adc	r2, r2, r2
   16bf8:	subcs	r0, r0, r1, lsl #24
   16bfc:	cmp	r0, r1, lsl #23
   16c00:	adc	r2, r2, r2
   16c04:	subcs	r0, r0, r1, lsl #23
   16c08:	cmp	r0, r1, lsl #22
   16c0c:	adc	r2, r2, r2
   16c10:	subcs	r0, r0, r1, lsl #22
   16c14:	cmp	r0, r1, lsl #21
   16c18:	adc	r2, r2, r2
   16c1c:	subcs	r0, r0, r1, lsl #21
   16c20:	cmp	r0, r1, lsl #20
   16c24:	adc	r2, r2, r2
   16c28:	subcs	r0, r0, r1, lsl #20
   16c2c:	cmp	r0, r1, lsl #19
   16c30:	adc	r2, r2, r2
   16c34:	subcs	r0, r0, r1, lsl #19
   16c38:	cmp	r0, r1, lsl #18
   16c3c:	adc	r2, r2, r2
   16c40:	subcs	r0, r0, r1, lsl #18
   16c44:	cmp	r0, r1, lsl #17
   16c48:	adc	r2, r2, r2
   16c4c:	subcs	r0, r0, r1, lsl #17
   16c50:	cmp	r0, r1, lsl #16
   16c54:	adc	r2, r2, r2
   16c58:	subcs	r0, r0, r1, lsl #16
   16c5c:	cmp	r0, r1, lsl #15
   16c60:	adc	r2, r2, r2
   16c64:	subcs	r0, r0, r1, lsl #15
   16c68:	cmp	r0, r1, lsl #14
   16c6c:	adc	r2, r2, r2
   16c70:	subcs	r0, r0, r1, lsl #14
   16c74:	cmp	r0, r1, lsl #13
   16c78:	adc	r2, r2, r2
   16c7c:	subcs	r0, r0, r1, lsl #13
   16c80:	cmp	r0, r1, lsl #12
   16c84:	adc	r2, r2, r2
   16c88:	subcs	r0, r0, r1, lsl #12
   16c8c:	cmp	r0, r1, lsl #11
   16c90:	adc	r2, r2, r2
   16c94:	subcs	r0, r0, r1, lsl #11
   16c98:	cmp	r0, r1, lsl #10
   16c9c:	adc	r2, r2, r2
   16ca0:	subcs	r0, r0, r1, lsl #10
   16ca4:	cmp	r0, r1, lsl #9
   16ca8:	adc	r2, r2, r2
   16cac:	subcs	r0, r0, r1, lsl #9
   16cb0:	cmp	r0, r1, lsl #8
   16cb4:	adc	r2, r2, r2
   16cb8:	subcs	r0, r0, r1, lsl #8
   16cbc:	cmp	r0, r1, lsl #7
   16cc0:	adc	r2, r2, r2
   16cc4:	subcs	r0, r0, r1, lsl #7
   16cc8:	cmp	r0, r1, lsl #6
   16ccc:	adc	r2, r2, r2
   16cd0:	subcs	r0, r0, r1, lsl #6
   16cd4:	cmp	r0, r1, lsl #5
   16cd8:	adc	r2, r2, r2
   16cdc:	subcs	r0, r0, r1, lsl #5
   16ce0:	cmp	r0, r1, lsl #4
   16ce4:	adc	r2, r2, r2
   16ce8:	subcs	r0, r0, r1, lsl #4
   16cec:	cmp	r0, r1, lsl #3
   16cf0:	adc	r2, r2, r2
   16cf4:	subcs	r0, r0, r1, lsl #3
   16cf8:	cmp	r0, r1, lsl #2
   16cfc:	adc	r2, r2, r2
   16d00:	subcs	r0, r0, r1, lsl #2
   16d04:	cmp	r0, r1, lsl #1
   16d08:	adc	r2, r2, r2
   16d0c:	subcs	r0, r0, r1, lsl #1
   16d10:	cmp	r0, r1
   16d14:	adc	r2, r2, r2
   16d18:	subcs	r0, r0, r1
   16d1c:	mov	r0, r2
   16d20:	bx	lr
   16d24:	moveq	r0, #1
   16d28:	movne	r0, #0
   16d2c:	bx	lr
   16d30:	clz	r2, r1
   16d34:	rsb	r2, r2, #31
   16d38:	lsr	r0, r0, r2
   16d3c:	bx	lr
   16d40:	cmp	r0, #0
   16d44:	mvnne	r0, #0
   16d48:	b	16fac <abort@plt+0x628c>
   16d4c:	cmp	r1, #0
   16d50:	beq	16d40 <abort@plt+0x6020>
   16d54:	push	{r0, r1, lr}
   16d58:	bl	16b60 <abort@plt+0x5e40>
   16d5c:	pop	{r1, r2, lr}
   16d60:	mul	r3, r2, r0
   16d64:	sub	r1, r1, r3
   16d68:	bx	lr
   16d6c:	cmp	r1, #0
   16d70:	beq	16f7c <abort@plt+0x625c>
   16d74:	eor	ip, r0, r1
   16d78:	rsbmi	r1, r1, #0
   16d7c:	subs	r2, r1, #1
   16d80:	beq	16f48 <abort@plt+0x6228>
   16d84:	movs	r3, r0
   16d88:	rsbmi	r3, r0, #0
   16d8c:	cmp	r3, r1
   16d90:	bls	16f54 <abort@plt+0x6234>
   16d94:	tst	r1, r2
   16d98:	beq	16f64 <abort@plt+0x6244>
   16d9c:	clz	r2, r3
   16da0:	clz	r0, r1
   16da4:	sub	r2, r0, r2
   16da8:	rsbs	r2, r2, #31
   16dac:	addne	r2, r2, r2, lsl #1
   16db0:	mov	r0, #0
   16db4:	addne	pc, pc, r2, lsl #2
   16db8:	nop			; (mov r0, r0)
   16dbc:	cmp	r3, r1, lsl #31
   16dc0:	adc	r0, r0, r0
   16dc4:	subcs	r3, r3, r1, lsl #31
   16dc8:	cmp	r3, r1, lsl #30
   16dcc:	adc	r0, r0, r0
   16dd0:	subcs	r3, r3, r1, lsl #30
   16dd4:	cmp	r3, r1, lsl #29
   16dd8:	adc	r0, r0, r0
   16ddc:	subcs	r3, r3, r1, lsl #29
   16de0:	cmp	r3, r1, lsl #28
   16de4:	adc	r0, r0, r0
   16de8:	subcs	r3, r3, r1, lsl #28
   16dec:	cmp	r3, r1, lsl #27
   16df0:	adc	r0, r0, r0
   16df4:	subcs	r3, r3, r1, lsl #27
   16df8:	cmp	r3, r1, lsl #26
   16dfc:	adc	r0, r0, r0
   16e00:	subcs	r3, r3, r1, lsl #26
   16e04:	cmp	r3, r1, lsl #25
   16e08:	adc	r0, r0, r0
   16e0c:	subcs	r3, r3, r1, lsl #25
   16e10:	cmp	r3, r1, lsl #24
   16e14:	adc	r0, r0, r0
   16e18:	subcs	r3, r3, r1, lsl #24
   16e1c:	cmp	r3, r1, lsl #23
   16e20:	adc	r0, r0, r0
   16e24:	subcs	r3, r3, r1, lsl #23
   16e28:	cmp	r3, r1, lsl #22
   16e2c:	adc	r0, r0, r0
   16e30:	subcs	r3, r3, r1, lsl #22
   16e34:	cmp	r3, r1, lsl #21
   16e38:	adc	r0, r0, r0
   16e3c:	subcs	r3, r3, r1, lsl #21
   16e40:	cmp	r3, r1, lsl #20
   16e44:	adc	r0, r0, r0
   16e48:	subcs	r3, r3, r1, lsl #20
   16e4c:	cmp	r3, r1, lsl #19
   16e50:	adc	r0, r0, r0
   16e54:	subcs	r3, r3, r1, lsl #19
   16e58:	cmp	r3, r1, lsl #18
   16e5c:	adc	r0, r0, r0
   16e60:	subcs	r3, r3, r1, lsl #18
   16e64:	cmp	r3, r1, lsl #17
   16e68:	adc	r0, r0, r0
   16e6c:	subcs	r3, r3, r1, lsl #17
   16e70:	cmp	r3, r1, lsl #16
   16e74:	adc	r0, r0, r0
   16e78:	subcs	r3, r3, r1, lsl #16
   16e7c:	cmp	r3, r1, lsl #15
   16e80:	adc	r0, r0, r0
   16e84:	subcs	r3, r3, r1, lsl #15
   16e88:	cmp	r3, r1, lsl #14
   16e8c:	adc	r0, r0, r0
   16e90:	subcs	r3, r3, r1, lsl #14
   16e94:	cmp	r3, r1, lsl #13
   16e98:	adc	r0, r0, r0
   16e9c:	subcs	r3, r3, r1, lsl #13
   16ea0:	cmp	r3, r1, lsl #12
   16ea4:	adc	r0, r0, r0
   16ea8:	subcs	r3, r3, r1, lsl #12
   16eac:	cmp	r3, r1, lsl #11
   16eb0:	adc	r0, r0, r0
   16eb4:	subcs	r3, r3, r1, lsl #11
   16eb8:	cmp	r3, r1, lsl #10
   16ebc:	adc	r0, r0, r0
   16ec0:	subcs	r3, r3, r1, lsl #10
   16ec4:	cmp	r3, r1, lsl #9
   16ec8:	adc	r0, r0, r0
   16ecc:	subcs	r3, r3, r1, lsl #9
   16ed0:	cmp	r3, r1, lsl #8
   16ed4:	adc	r0, r0, r0
   16ed8:	subcs	r3, r3, r1, lsl #8
   16edc:	cmp	r3, r1, lsl #7
   16ee0:	adc	r0, r0, r0
   16ee4:	subcs	r3, r3, r1, lsl #7
   16ee8:	cmp	r3, r1, lsl #6
   16eec:	adc	r0, r0, r0
   16ef0:	subcs	r3, r3, r1, lsl #6
   16ef4:	cmp	r3, r1, lsl #5
   16ef8:	adc	r0, r0, r0
   16efc:	subcs	r3, r3, r1, lsl #5
   16f00:	cmp	r3, r1, lsl #4
   16f04:	adc	r0, r0, r0
   16f08:	subcs	r3, r3, r1, lsl #4
   16f0c:	cmp	r3, r1, lsl #3
   16f10:	adc	r0, r0, r0
   16f14:	subcs	r3, r3, r1, lsl #3
   16f18:	cmp	r3, r1, lsl #2
   16f1c:	adc	r0, r0, r0
   16f20:	subcs	r3, r3, r1, lsl #2
   16f24:	cmp	r3, r1, lsl #1
   16f28:	adc	r0, r0, r0
   16f2c:	subcs	r3, r3, r1, lsl #1
   16f30:	cmp	r3, r1
   16f34:	adc	r0, r0, r0
   16f38:	subcs	r3, r3, r1
   16f3c:	cmp	ip, #0
   16f40:	rsbmi	r0, r0, #0
   16f44:	bx	lr
   16f48:	teq	ip, r0
   16f4c:	rsbmi	r0, r0, #0
   16f50:	bx	lr
   16f54:	movcc	r0, #0
   16f58:	asreq	r0, ip, #31
   16f5c:	orreq	r0, r0, #1
   16f60:	bx	lr
   16f64:	clz	r2, r1
   16f68:	rsb	r2, r2, #31
   16f6c:	cmp	ip, #0
   16f70:	lsr	r0, r3, r2
   16f74:	rsbmi	r0, r0, #0
   16f78:	bx	lr
   16f7c:	cmp	r0, #0
   16f80:	mvngt	r0, #-2147483648	; 0x80000000
   16f84:	movlt	r0, #-2147483648	; 0x80000000
   16f88:	b	16fac <abort@plt+0x628c>
   16f8c:	cmp	r1, #0
   16f90:	beq	16f7c <abort@plt+0x625c>
   16f94:	push	{r0, r1, lr}
   16f98:	bl	16d74 <abort@plt+0x6054>
   16f9c:	pop	{r1, r2, lr}
   16fa0:	mul	r3, r2, r0
   16fa4:	sub	r1, r1, r3
   16fa8:	bx	lr
   16fac:	push	{r1, lr}
   16fb0:	mov	r0, #8
   16fb4:	bl	10b34 <raise@plt>
   16fb8:	pop	{r1, pc}
   16fbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16fc0:	mov	r7, r0
   16fc4:	ldr	r6, [pc, #72]	; 17014 <abort@plt+0x62f4>
   16fc8:	ldr	r5, [pc, #72]	; 17018 <abort@plt+0x62f8>
   16fcc:	add	r6, pc, r6
   16fd0:	add	r5, pc, r5
   16fd4:	sub	r6, r6, r5
   16fd8:	mov	r8, r1
   16fdc:	mov	r9, r2
   16fe0:	bl	10afc <calloc@plt-0x20>
   16fe4:	asrs	r6, r6, #2
   16fe8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16fec:	mov	r4, #0
   16ff0:	add	r4, r4, #1
   16ff4:	ldr	r3, [r5], #4
   16ff8:	mov	r2, r9
   16ffc:	mov	r1, r8
   17000:	mov	r0, r7
   17004:	blx	r3
   17008:	cmp	r6, r4
   1700c:	bne	16ff0 <abort@plt+0x62d0>
   17010:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17014:	andeq	r0, r1, ip, lsr pc
   17018:	andeq	r0, r1, r4, lsr pc
   1701c:	bx	lr
   17020:	ldr	r3, [pc, #12]	; 17034 <abort@plt+0x6314>
   17024:	mov	r1, #0
   17028:	add	r3, pc, r3
   1702c:	ldr	r2, [r3]
   17030:	b	10c90 <__cxa_atexit@plt>
   17034:	muleq	r1, r4, r0

Disassembly of section .fini:

00017038 <.fini>:
   17038:	push	{r3, lr}
   1703c:	pop	{r3, pc}
