
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

0001082c <.init>:
   1082c:	push	{r3, lr}
   10830:	bl	109b4 <abort@plt+0x48>
   10834:	pop	{r3, pc}

Disassembly of section .plt:

00010838 <calloc@plt-0x14>:
   10838:	push	{lr}		; (str lr, [sp, #-4]!)
   1083c:	ldr	lr, [pc, #4]	; 10848 <calloc@plt-0x4>
   10840:	add	lr, pc, lr
   10844:	ldr	pc, [lr, #8]!
   10848:			; <UNDEFINED> instruction: 0x000127b8

0001084c <calloc@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #1976]!	; 0x7b8

00010858 <strcmp@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #1968]!	; 0x7b0

00010864 <printf@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #1960]!	; 0x7a8

00010870 <fopen@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #1952]!	; 0x7a0

0001087c <free@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #1944]!	; 0x798

00010888 <fgets@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #1936]!	; 0x790

00010894 <strdup@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1928]!	; 0x788

000108a0 <unlink@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1920]!	; 0x780

000108ac <__xstat@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #73728	; 0x12000
   108b4:	ldr	pc, [ip, #1912]!	; 0x778

000108b8 <fwrite@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #73728	; 0x12000
   108c0:	ldr	pc, [ip, #1904]!	; 0x770

000108c4 <__libc_start_main@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #73728	; 0x12000
   108cc:	ldr	pc, [ip, #1896]!	; 0x768

000108d0 <__sysv_signal@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #73728	; 0x12000
   108d8:	ldr	pc, [ip, #1888]!	; 0x760

000108dc <__gmon_start__@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #73728	; 0x12000
   108e4:	ldr	pc, [ip, #1880]!	; 0x758

000108e8 <getpid@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #73728	; 0x12000
   108f0:	ldr	pc, [ip, #1872]!	; 0x750

000108f4 <exit@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #73728	; 0x12000
   108fc:	ldr	pc, [ip, #1864]!	; 0x748

00010900 <strlen@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #73728	; 0x12000
   10908:	ldr	pc, [ip, #1856]!	; 0x740

0001090c <fprintf@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #73728	; 0x12000
   10914:	ldr	pc, [ip, #1848]!	; 0x738

00010918 <sqrt@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #73728	; 0x12000
   10920:	ldr	pc, [ip, #1840]!	; 0x730

00010924 <__isoc99_sscanf@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #73728	; 0x12000
   1092c:	ldr	pc, [ip, #1832]!	; 0x728

00010930 <fclose@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #73728	; 0x12000
   10938:	ldr	pc, [ip, #1824]!	; 0x720

0001093c <fputc@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #73728	; 0x12000
   10944:	ldr	pc, [ip, #1816]!	; 0x718

00010948 <sprintf@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #73728	; 0x12000
   10950:	ldr	pc, [ip, #1808]!	; 0x710

00010954 <atoi@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #73728	; 0x12000
   1095c:	ldr	pc, [ip, #1800]!	; 0x708

00010960 <strncmp@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #73728	; 0x12000
   10968:	ldr	pc, [ip, #1792]!	; 0x700

0001096c <abort@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #73728	; 0x12000
   10974:	ldr	pc, [ip, #1784]!	; 0x6f8

Disassembly of section .text:

00010978 <error@@Base-0x133c>:
   10978:	mov	fp, #0
   1097c:	mov	lr, #0
   10980:	pop	{r1}		; (ldr r1, [sp], #4)
   10984:	mov	r2, sp
   10988:	push	{r2}		; (str r2, [sp, #-4]!)
   1098c:	push	{r0}		; (str r0, [sp, #-4]!)
   10990:	ldr	ip, [pc, #16]	; 109a8 <abort@plt+0x3c>
   10994:	push	{ip}		; (str ip, [sp, #-4]!)
   10998:	ldr	r0, [pc, #12]	; 109ac <abort@plt+0x40>
   1099c:	ldr	r3, [pc, #12]	; 109b0 <abort@plt+0x44>
   109a0:	bl	108c4 <__libc_start_main@plt>
   109a4:	bl	1096c <abort@plt>
   109a8:	muleq	r1, r0, r2
   109ac:	andeq	r0, r1, r0, ror fp
   109b0:	andeq	r2, r1, r0, lsr r2
   109b4:	ldr	r3, [pc, #20]	; 109d0 <abort@plt+0x64>
   109b8:	ldr	r2, [pc, #20]	; 109d4 <abort@plt+0x68>
   109bc:	add	r3, pc, r3
   109c0:	ldr	r2, [r3, r2]
   109c4:	cmp	r2, #0
   109c8:	bxeq	lr
   109cc:	b	108dc <__gmon_start__@plt>
   109d0:	andeq	r2, r1, ip, lsr r6
   109d4:	andeq	r0, r0, r0, ror r0
   109d8:	ldr	r0, [pc, #24]	; 109f8 <abort@plt+0x8c>
   109dc:	ldr	r3, [pc, #24]	; 109fc <abort@plt+0x90>
   109e0:	cmp	r3, r0
   109e4:	bxeq	lr
   109e8:	ldr	r3, [pc, #16]	; 10a00 <abort@plt+0x94>
   109ec:	cmp	r3, #0
   109f0:	bxeq	lr
   109f4:	bx	r3
   109f8:	andeq	r3, r2, r4, lsl #1
   109fc:	andeq	r3, r2, r4, lsl #1
   10a00:	andeq	r0, r0, r0
   10a04:	ldr	r0, [pc, #36]	; 10a30 <abort@plt+0xc4>
   10a08:	ldr	r1, [pc, #36]	; 10a34 <abort@plt+0xc8>
   10a0c:	sub	r1, r1, r0
   10a10:	asr	r1, r1, #2
   10a14:	add	r1, r1, r1, lsr #31
   10a18:	asrs	r1, r1, #1
   10a1c:	bxeq	lr
   10a20:	ldr	r3, [pc, #16]	; 10a38 <abort@plt+0xcc>
   10a24:	cmp	r3, #0
   10a28:	bxeq	lr
   10a2c:	bx	r3
   10a30:	andeq	r3, r2, r4, lsl #1
   10a34:	andeq	r3, r2, r4, lsl #1
   10a38:	andeq	r0, r0, r0
   10a3c:	push	{r4, lr}
   10a40:	ldr	r4, [pc, #24]	; 10a60 <abort@plt+0xf4>
   10a44:	ldrb	r3, [r4]
   10a48:	cmp	r3, #0
   10a4c:	popne	{r4, pc}
   10a50:	bl	109d8 <abort@plt+0x6c>
   10a54:	mov	r3, #1
   10a58:	strb	r3, [r4]
   10a5c:	pop	{r4, pc}
   10a60:	muleq	r2, r8, r0
   10a64:	b	10a04 <abort@plt+0x98>
   10a68:	push	{r4, r5, r6, sl, fp, lr}
   10a6c:	add	fp, sp, #16
   10a70:	mov	r1, r0
   10a74:	movw	r4, #12560	; 0x3110
   10a78:	movt	r4, #2
   10a7c:	ldm	r4, {r5, r6}
   10a80:	mov	r0, r4
   10a84:	bl	10ed0 <abort@plt+0x564>
   10a88:	ldm	r4, {r0, r2}
   10a8c:	sub	r1, r0, r5
   10a90:	sub	r2, r2, r6
   10a94:	movw	r0, #29664	; 0x73e0
   10a98:	movt	r0, #2
   10a9c:	pop	{r4, r5, r6, sl, fp, lr}
   10aa0:	b	10be0 <abort@plt+0x274>
   10aa4:	nop	{0}
   10aa8:	push	{r4, sl, fp, lr}
   10aac:	add	fp, sp, #8
   10ab0:	sub	sp, sp, #32
   10ab4:	movw	r4, #29664	; 0x73e0
   10ab8:	movt	r4, #2
   10abc:	sub	r1, fp, #16
   10ac0:	add	r2, sp, #16
   10ac4:	mov	r0, r4
   10ac8:	bl	10c30 <abort@plt+0x2c4>
   10acc:	ldr	r1, [r4, #12]
   10ad0:	movw	r0, #8880	; 0x22b0
   10ad4:	movt	r0, #1
   10ad8:	bl	10864 <printf@plt>
   10adc:	movw	r4, #12560	; 0x3110
   10ae0:	movt	r4, #2
   10ae4:	ldr	r1, [r4]
   10ae8:	movw	r0, #8902	; 0x22c6
   10aec:	movt	r0, #1
   10af0:	bl	10864 <printf@plt>
   10af4:	ldr	r1, [r4, #4]
   10af8:	movw	r0, #8917	; 0x22d5
   10afc:	movt	r0, #1
   10b00:	bl	10864 <printf@plt>
   10b04:	ldm	r4, {r0, r1}
   10b08:	sub	r1, r0, r1
   10b0c:	vldr	d16, [pc, #84]	; 10b68 <abort@plt+0x1fc>
   10b10:	vmov	s0, r1
   10b14:	vmov	s2, r0
   10b18:	vcvt.f64.s32	d17, s0
   10b1c:	vcvt.f64.s32	d18, s2
   10b20:	vmul.f64	d16, d17, d16
   10b24:	vdiv.f64	d16, d16, d18
   10b28:	vmov	r2, r3, d16
   10b2c:	movw	r0, #8940	; 0x22ec
   10b30:	movt	r0, #1
   10b34:	bl	10864 <printf@plt>
   10b38:	vldr	d16, [fp, #-16]
   10b3c:	vldr	d17, [sp, #16]
   10b40:	movw	r0, #8981	; 0x2315
   10b44:	movt	r0, #1
   10b48:	str	r0, [sp, #8]
   10b4c:	vstr	d17, [sp]
   10b50:	vmov	r2, r3, d16
   10b54:	movw	r0, #8960	; 0x2300
   10b58:	movt	r0, #1
   10b5c:	bl	10864 <printf@plt>
   10b60:	sub	sp, fp, #8
   10b64:	pop	{r4, sl, fp, pc}
   10b68:	andeq	r0, r0, r0
   10b6c:	subsmi	r0, r9, r0
   10b70:	push	{fp, lr}
   10b74:	mov	fp, sp
   10b78:	sub	sp, sp, #8
   10b7c:	mov	r4, r1
   10b80:	str	r0, [sp, #4]
   10b84:	add	r0, sp, #4
   10b88:	movw	r2, #9030	; 0x2346
   10b8c:	movt	r2, #1
   10b90:	mov	r3, #0
   10b94:	bl	11b34 <abort@plt+0x11c8>
   10b98:	ldr	r0, [sp, #4]
   10b9c:	cmp	r0, #2
   10ba0:	blt	10bd4 <abort@plt+0x268>
   10ba4:	ldr	r0, [sp, #4]
   10ba8:	cmp	r0, #1
   10bac:	blt	10bcc <abort@plt+0x260>
   10bb0:	mov	r5, #0
   10bb4:	ldr	r0, [r4, r5, lsl #2]
   10bb8:	bl	10a68 <abort@plt+0xfc>
   10bbc:	add	r5, r5, #1
   10bc0:	ldr	r0, [sp, #4]
   10bc4:	cmp	r5, r0
   10bc8:	blt	10bb4 <abort@plt+0x248>
   10bcc:	bl	10aa8 <abort@plt+0x13c>
   10bd0:	bl	11c74 <abort@plt+0x1308>
   10bd4:	movw	r0, #9078	; 0x2376
   10bd8:	movt	r0, #1
   10bdc:	bl	11cb4 <error@@Base>
   10be0:	push	{r4, r5, r6, sl, fp, lr}
   10be4:	add	fp, sp, #16
   10be8:	mov	r5, r2
   10bec:	mov	r6, r1
   10bf0:	mov	r4, r0
   10bf4:	mov	r0, #1
   10bf8:	mov	r1, #32
   10bfc:	bl	11914 <abort@plt+0xfa8>
   10c00:	mov	r1, r0
   10c04:	str	r6, [r1, #8]
   10c08:	str	r5, [r1, #12]
   10c0c:	ldr	r0, [r4, #24]
   10c10:	ldr	r3, [r4, #28]
   10c14:	add	r3, r3, r5
   10c18:	add	r2, r0, r6
   10c1c:	strd	r2, [r4, #24]
   10c20:	mov	r0, r4
   10c24:	pop	{r4, r5, r6, sl, fp, lr}
   10c28:	b	11fc4 <error@@Base+0x310>
   10c2c:	nop	{0}
   10c30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c34:	add	fp, sp, #28
   10c38:	sub	sp, sp, #4
   10c3c:	vpush	{d8-d12}
   10c40:	mov	sl, r2
   10c44:	mov	r6, r1
   10c48:	mov	r5, r0
   10c4c:	bl	10de8 <abort@plt+0x47c>
   10c50:	cmp	r0, #0
   10c54:	beq	10dcc <abort@plt+0x460>
   10c58:	ldr	r7, [r5, #12]
   10c5c:	ldrd	r8, [r5, #24]
   10c60:	mov	r0, r8
   10c64:	mov	r1, r9
   10c68:	bl	10e28 <abort@plt+0x4bc>
   10c6c:	vmov	s2, r7
   10c70:	vcvt.f64.s32	d8, s2
   10c74:	vmov.i32	d9, #0	; 0x00000000
   10c78:	vmul.f64	d10, d0, d8
   10c7c:	vstr	d0, [r5, #32]
   10c80:	ldr	r4, [r5]
   10c84:	cmp	r4, #0
   10c88:	vmov.i32	d11, #0	; 0x00000000
   10c8c:	beq	10cd0 <abort@plt+0x364>
   10c90:	sub	r0, r7, #1
   10c94:	vmov.i32	d11, #0	; 0x00000000
   10c98:	vmov	s0, r0
   10c9c:	vcvt.f64.s32	d12, s0
   10ca0:	ldrd	r0, [r4, #8]
   10ca4:	sub	r0, r8, r0
   10ca8:	sub	r1, r9, r1
   10cac:	bl	10e28 <abort@plt+0x4bc>
   10cb0:	vmov.f64	d16, d10
   10cb4:	vmls.f64	d16, d0, d12
   10cb8:	vadd.f64	d11, d11, d0
   10cbc:	vstr	d0, [r4, #16]
   10cc0:	vstr	d16, [r4, #24]
   10cc4:	ldr	r4, [r4, #4]
   10cc8:	cmp	r4, #0
   10ccc:	bne	10ca0 <abort@plt+0x334>
   10cd0:	sub	r0, r7, #1
   10cd4:	vmov	s0, r0
   10cd8:	vcvt.f64.s32	d16, s0
   10cdc:	vmul.f64	d17, d11, d16
   10ce0:	vdiv.f64	d17, d17, d8
   10ce4:	vsub.f64	d17, d10, d17
   10ce8:	vstr	d17, [r5, #40]	; 0x28
   10cec:	ldr	r0, [r5]
   10cf0:	cmp	r0, #0
   10cf4:	beq	10d14 <abort@plt+0x3a8>
   10cf8:	vmov.i32	d9, #0	; 0x00000000
   10cfc:	vldr	d18, [r0, #24]
   10d00:	ldr	r0, [r0, #4]
   10d04:	vsub.f64	d18, d18, d17
   10d08:	vmla.f64	d9, d18, d18
   10d0c:	cmp	r0, #0
   10d10:	bne	10cfc <abort@plt+0x390>
   10d14:	vdiv.f64	d16, d9, d16
   10d18:	vdiv.f64	d16, d16, d8
   10d1c:	vsqrt.f64	d0, d16
   10d20:	vcmpe.f64	d0, d0
   10d24:	vmrs	APSR_nzcv, fpscr
   10d28:	bvc	10d34 <abort@plt+0x3c8>
   10d2c:	vmov.f64	d0, d16
   10d30:	bl	10918 <sqrt@plt>
   10d34:	vldr	d16, [pc, #156]	; 10dd8 <abort@plt+0x46c>
   10d38:	vldr	d17, [r5, #40]	; 0x28
   10d3c:	vldr	d18, [pc, #156]	; 10de0 <abort@plt+0x474>
   10d40:	vmul.f64	d16, d0, d16
   10d44:	vmov.i32	d19, #0	; 0x00000000
   10d48:	vsub.f64	d17, d17, d16
   10d4c:	vcmpe.f64	d17, d18
   10d50:	vmrs	APSR_nzcv, fpscr
   10d54:	vselgt.f64	d20, d18, d19
   10d58:	vcmpe.f64	d17, #0.0
   10d5c:	vmrs	APSR_nzcv, fpscr
   10d60:	vmov.f64	d21, d18
   10d64:	vmovmi.f64	d21, d20
   10d68:	vcmpe.f64	d17, d18
   10d6c:	vmrs	APSR_nzcv, fpscr
   10d70:	vselgt.f64	d20, d21, d17
   10d74:	vcmpe.f64	d17, #0.0
   10d78:	vmrs	APSR_nzcv, fpscr
   10d7c:	vmovmi.f64	d20, d21
   10d80:	vstr	d20, [r6]
   10d84:	vldr	d17, [r5, #40]	; 0x28
   10d88:	vadd.f64	d16, d16, d17
   10d8c:	vcmpe.f64	d16, d18
   10d90:	vmrs	APSR_nzcv, fpscr
   10d94:	vselgt.f64	d17, d18, d19
   10d98:	vcmpe.f64	d16, #0.0
   10d9c:	vmrs	APSR_nzcv, fpscr
   10da0:	vcmpe.f64	d16, d18
   10da4:	vmovmi.f64	d18, d17
   10da8:	vmrs	APSR_nzcv, fpscr
   10dac:	vselgt.f64	d17, d18, d16
   10db0:	vcmpe.f64	d16, #0.0
   10db4:	vmrs	APSR_nzcv, fpscr
   10db8:	vmovmi.f64	d17, d18
   10dbc:	vstr	d17, [sl]
   10dc0:	vpop	{d8-d12}
   10dc4:	add	sp, sp, #4
   10dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10dcc:	movw	r0, #9101	; 0x238d
   10dd0:	movt	r0, #1
   10dd4:	bl	11cb4 <error@@Base>
   10dd8:			; <UNDEFINED> instruction: 0xf5c28f5c
   10ddc:	svccc	0x00ff5c28
   10de0:	andeq	r0, r0, r0
   10de4:	subsmi	r0, r9, r0
   10de8:	ldr	r0, [r0]
   10dec:	cmp	r0, #0
   10df0:	moveq	r0, #0
   10df4:	bxeq	lr
   10df8:	mov	r1, #0
   10dfc:	ldr	r2, [r0, #4]
   10e00:	ldr	r0, [r0, #8]
   10e04:	cmp	r0, #0
   10e08:	addgt	r1, r1, #1
   10e0c:	cmp	r2, #0
   10e10:	mov	r0, r2
   10e14:	bne	10dfc <abort@plt+0x490>
   10e18:	mov	r0, #0
   10e1c:	cmp	r1, #1
   10e20:	movwhi	r0, #1
   10e24:	bx	lr
   10e28:	sub	r1, r0, r1
   10e2c:	vldr	d16, [pc, #28]	; 10e50 <abort@plt+0x4e4>
   10e30:	vmov	s0, r1
   10e34:	vmov	s2, r0
   10e38:	vcvt.f64.s32	d17, s0
   10e3c:	vcvt.f64.s32	d18, s2
   10e40:	vmul.f64	d16, d17, d16
   10e44:	vdiv.f64	d0, d16, d18
   10e48:	bx	lr
   10e4c:	nop	{0}
   10e50:	andeq	r0, r0, r0
   10e54:	subsmi	r0, r9, r0
   10e58:	ldm	r0, {r3, ip}
   10e5c:	add	r1, r3, r1
   10e60:	add	r2, ip, r2
   10e64:	stm	r0, {r1, r2}
   10e68:	bx	lr
   10e6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e70:	add	fp, sp, #24
   10e74:	mov	r8, r3
   10e78:	mov	r5, r2
   10e7c:	mov	r7, r1
   10e80:	mov	r6, r0
   10e84:	bl	116fc <abort@plt+0xd90>
   10e88:	mov	r4, r0
   10e8c:	cmp	r0, #0
   10e90:	bne	10ebc <abort@plt+0x550>
   10e94:	mov	r0, #1
   10e98:	mov	r1, #20
   10e9c:	bl	11914 <abort@plt+0xfa8>
   10ea0:	mov	r4, r0
   10ea4:	mov	r0, r7
   10ea8:	bl	10894 <strdup@plt>
   10eac:	str	r0, [r4, #8]
   10eb0:	mov	r0, r6
   10eb4:	mov	r1, r4
   10eb8:	bl	117a4 <abort@plt+0xe38>
   10ebc:	add	r0, r4, #12
   10ec0:	mov	r1, r5
   10ec4:	mov	r2, r8
   10ec8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10ecc:	b	10e58 <abort@plt+0x4ec>
   10ed0:	push	{r4, r5, r6, r7, fp, lr}
   10ed4:	add	fp, sp, #16
   10ed8:	sub	sp, sp, #8
   10edc:	mov	r6, r1
   10ee0:	mov	r5, r0
   10ee4:	movw	r1, #9125	; 0x23a5
   10ee8:	movt	r1, #1
   10eec:	mov	r0, r6
   10ef0:	bl	119b0 <abort@plt+0x1044>
   10ef4:	mov	r4, r0
   10ef8:	bl	11044 <abort@plt+0x6d8>
   10efc:	cmp	r0, #0
   10f00:	beq	11028 <abort@plt+0x6bc>
   10f04:	movw	r0, #12441	; 0x3099
   10f08:	movt	r0, #2
   10f0c:	movw	r1, #9127	; 0x23a7
   10f10:	movt	r1, #1
   10f14:	mov	r2, #45	; 0x2d
   10f18:	bl	10960 <strncmp@plt>
   10f1c:	cmp	r0, #0
   10f20:	bne	11028 <abort@plt+0x6bc>
   10f24:	mov	r0, r4
   10f28:	bl	11044 <abort@plt+0x6d8>
   10f2c:	cmp	r0, #0
   10f30:	beq	11028 <abort@plt+0x6bc>
   10f34:	movw	r0, #12441	; 0x3099
   10f38:	movt	r0, #2
   10f3c:	movw	r1, #9175	; 0x23d7
   10f40:	movt	r1, #1
   10f44:	bl	10858 <strcmp@plt>
   10f48:	cmp	r0, #0
   10f4c:	bne	11028 <abort@plt+0x6bc>
   10f50:	add	r1, sp, #4
   10f54:	mov	r0, r4
   10f58:	bl	1106c <abort@plt+0x700>
   10f5c:	cmp	r0, #0
   10f60:	beq	11028 <abort@plt+0x6bc>
   10f64:	mov	r1, sp
   10f68:	mov	r0, r4
   10f6c:	bl	1106c <abort@plt+0x700>
   10f70:	cmp	r0, #0
   10f74:	beq	11028 <abort@plt+0x6bc>
   10f78:	mov	r0, r4
   10f7c:	bl	11044 <abort@plt+0x6d8>
   10f80:	cmp	r0, #0
   10f84:	beq	11028 <abort@plt+0x6bc>
   10f88:	mov	r0, r4
   10f8c:	bl	11044 <abort@plt+0x6d8>
   10f90:	cmp	r0, #0
   10f94:	beq	11028 <abort@plt+0x6bc>
   10f98:	ldr	r2, [sp]
   10f9c:	ldr	r1, [sp, #4]
   10fa0:	mov	r0, r5
   10fa4:	bl	10e58 <abort@plt+0x4ec>
   10fa8:	add	r1, r5, #8
   10fac:	mov	r0, r4
   10fb0:	bl	110b0 <abort@plt+0x744>
   10fb4:	mov	r7, r0
   10fb8:	add	r1, r5, #416	; 0x1a0
   10fbc:	mov	r0, r4
   10fc0:	bl	110b0 <abort@plt+0x744>
   10fc4:	mov	r6, r0
   10fc8:	add	r1, r5, #824	; 0x338
   10fcc:	mov	r0, r4
   10fd0:	bl	110b0 <abort@plt+0x744>
   10fd4:	ldr	r0, [sp, #4]
   10fd8:	cmp	r0, #1
   10fdc:	blt	11018 <abort@plt+0x6ac>
   10fe0:	add	r1, r5, #920	; 0x398
   10fe4:	mov	r0, r4
   10fe8:	bl	110b0 <abort@plt+0x744>
   10fec:	cmp	r7, #1
   10ff0:	blt	11000 <abort@plt+0x694>
   10ff4:	add	r1, r5, #992	; 0x3e0
   10ff8:	mov	r0, r4
   10ffc:	bl	1117c <abort@plt+0x810>
   11000:	cmp	r6, #1
   11004:	blt	11018 <abort@plt+0x6ac>
   11008:	movw	r0, #9048	; 0x2358
   1100c:	add	r1, r5, r0
   11010:	mov	r0, r4
   11014:	bl	1117c <abort@plt+0x810>
   11018:	mov	r0, r4
   1101c:	bl	11a28 <abort@plt+0x10bc>
   11020:	sub	sp, fp, #16
   11024:	pop	{r4, r5, r6, r7, fp, pc}
   11028:	movw	r1, #9241	; 0x2419
   1102c:	movt	r1, #1
   11030:	cmp	r6, #0
   11034:	movne	r1, r6
   11038:	movw	r0, #9223	; 0x2407
   1103c:	movt	r0, #1
   11040:	bl	11cf4 <error@@Base+0x40>
   11044:	push	{fp, lr}
   11048:	mov	fp, sp
   1104c:	mov	r2, r0
   11050:	movw	r0, #12441	; 0x3099
   11054:	movt	r0, #2
   11058:	mov	r1, #99	; 0x63
   1105c:	bl	10888 <fgets@plt>
   11060:	cmp	r0, #0
   11064:	movwne	r0, #1
   11068:	pop	{fp, pc}
   1106c:	push	{r4, sl, fp, lr}
   11070:	add	fp, sp, #8
   11074:	mov	r4, r1
   11078:	bl	11044 <abort@plt+0x6d8>
   1107c:	cmp	r0, #0
   11080:	moveq	r0, #0
   11084:	popeq	{r4, sl, fp, pc}
   11088:	movw	r0, #12441	; 0x3099
   1108c:	movt	r0, #2
   11090:	movw	r1, #9343	; 0x247f
   11094:	movt	r1, #1
   11098:	mov	r2, r4
   1109c:	bl	10924 <__isoc99_sscanf@plt>
   110a0:	sub	r0, r0, #1
   110a4:	clz	r0, r0
   110a8:	lsr	r0, r0, #5
   110ac:	pop	{r4, sl, fp, pc}
   110b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110b4:	add	fp, sp, #28
   110b8:	sub	sp, sp, #12
   110bc:	mov	r4, r1
   110c0:	mov	r6, r0
   110c4:	bl	11044 <abort@plt+0x6d8>
   110c8:	mov	r5, #0
   110cc:	cmp	r0, #0
   110d0:	beq	11170 <abort@plt+0x804>
   110d4:	mov	r0, r6
   110d8:	bl	11044 <abort@plt+0x6d8>
   110dc:	cmp	r0, #0
   110e0:	beq	11170 <abort@plt+0x804>
   110e4:	add	r1, sp, #8
   110e8:	add	r2, sp, #4
   110ec:	mov	r0, r6
   110f0:	bl	115f4 <abort@plt+0xc88>
   110f4:	cmp	r0, #0
   110f8:	beq	11170 <abort@plt+0x804>
   110fc:	mov	r5, #0
   11100:	movw	r0, #12441	; 0x3099
   11104:	movt	r0, #2
   11108:	add	r7, r0, #29
   1110c:	add	r9, sp, #8
   11110:	add	sl, sp, #4
   11114:	mov	r0, r7
   11118:	bl	10954 <atoi@plt>
   1111c:	mov	r8, r0
   11120:	cmp	r0, #0
   11124:	bne	11148 <abort@plt+0x7dc>
   11128:	mov	r0, r7
   1112c:	movw	r1, #9331	; 0x2473
   11130:	movt	r1, #1
   11134:	bl	10858 <strcmp@plt>
   11138:	cmp	r0, #0
   1113c:	movne	r8, #11
   11140:	ldr	r0, [sp, #8]
   11144:	moveq	r5, r0
   11148:	add	r0, r4, r8, lsl #3
   1114c:	ldr	r2, [sp, #4]
   11150:	ldr	r1, [sp, #8]
   11154:	bl	10e58 <abort@plt+0x4ec>
   11158:	mov	r0, r6
   1115c:	mov	r1, r9
   11160:	mov	r2, sl
   11164:	bl	115f4 <abort@plt+0xc88>
   11168:	cmp	r0, #0
   1116c:	bne	11114 <abort@plt+0x7a8>
   11170:	mov	r0, r5
   11174:	sub	sp, fp, #28
   11178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1117c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11180:	add	fp, sp, #28
   11184:	sub	sp, sp, #12
   11188:	mov	r4, r1
   1118c:	mov	r5, r0
   11190:	bl	11044 <abort@plt+0x6d8>
   11194:	cmp	r0, #0
   11198:	beq	11218 <abort@plt+0x8ac>
   1119c:	mov	r0, r5
   111a0:	bl	11044 <abort@plt+0x6d8>
   111a4:	cmp	r0, #0
   111a8:	beq	11218 <abort@plt+0x8ac>
   111ac:	add	r1, sp, #8
   111b0:	add	r2, sp, #4
   111b4:	mov	r0, r5
   111b8:	bl	115f4 <abort@plt+0xc88>
   111bc:	cmp	r0, #0
   111c0:	beq	11218 <abort@plt+0x8ac>
   111c4:	movw	r6, #12441	; 0x3099
   111c8:	movt	r6, #2
   111cc:	mov	sl, #0
   111d0:	add	r7, r6, #29
   111d4:	add	r8, sp, #8
   111d8:	add	r9, sp, #4
   111dc:	mov	r0, r6
   111e0:	bl	10900 <strlen@plt>
   111e4:	add	r0, r6, r0
   111e8:	strb	sl, [r0, #-1]
   111ec:	ldr	r2, [sp, #8]
   111f0:	ldr	r3, [sp, #4]
   111f4:	mov	r0, r4
   111f8:	mov	r1, r7
   111fc:	bl	10e6c <abort@plt+0x500>
   11200:	mov	r0, r5
   11204:	mov	r1, r8
   11208:	mov	r2, r9
   1120c:	bl	115f4 <abort@plt+0xc88>
   11210:	cmp	r0, #0
   11214:	bne	111dc <abort@plt+0x870>
   11218:	sub	sp, fp, #28
   1121c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11220:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11224:	add	fp, sp, #24
   11228:	sub	sp, sp, #8
   1122c:	mov	r2, r1
   11230:	mov	r5, r0
   11234:	movw	r1, #9247	; 0x241f
   11238:	movt	r1, #1
   1123c:	mov	r0, r2
   11240:	bl	119b0 <abort@plt+0x1044>
   11244:	mov	r4, r0
   11248:	movw	r1, #9249	; 0x2421
   1124c:	movt	r1, #1
   11250:	movw	r2, #9127	; 0x23a7
   11254:	movt	r2, #1
   11258:	movw	r3, #9175	; 0x23d7
   1125c:	movt	r3, #1
   11260:	bl	1090c <fprintf@plt>
   11264:	ldr	r2, [r5]
   11268:	movw	r1, #9254	; 0x2426
   1126c:	movt	r1, #1
   11270:	mov	r0, r4
   11274:	bl	1090c <fprintf@plt>
   11278:	ldr	r2, [r5, #4]
   1127c:	movw	r1, #9268	; 0x2434
   11280:	movt	r1, #1
   11284:	mov	r0, r4
   11288:	bl	1090c <fprintf@plt>
   1128c:	mov	r0, r4
   11290:	mov	r1, r5
   11294:	bl	113a0 <abort@plt+0xa34>
   11298:	movw	r0, #8947	; 0x22f3
   1129c:	movt	r0, #1
   112a0:	mov	r7, #1
   112a4:	mov	r1, #12
   112a8:	mov	r2, #1
   112ac:	mov	r3, r4
   112b0:	bl	108b8 <fwrite@plt>
   112b4:	mov	r8, #0
   112b8:	str	r8, [sp]
   112bc:	str	r7, [sp, #4]
   112c0:	add	r1, r5, #8
   112c4:	movw	r3, #9290	; 0x244a
   112c8:	movt	r3, #1
   112cc:	mov	r0, r4
   112d0:	mov	r2, #50	; 0x32
   112d4:	bl	11408 <abort@plt+0xa9c>
   112d8:	str	r8, [sp]
   112dc:	str	r7, [sp, #4]
   112e0:	add	r6, r5, #416	; 0x1a0
   112e4:	movw	r3, #9309	; 0x245d
   112e8:	movt	r3, #1
   112ec:	mov	r0, r4
   112f0:	mov	r1, r6
   112f4:	mov	r2, #50	; 0x32
   112f8:	bl	11408 <abort@plt+0xa9c>
   112fc:	str	r7, [sp]
   11300:	str	r7, [sp, #4]
   11304:	add	r1, r5, #824	; 0x338
   11308:	movw	r3, #9300	; 0x2454
   1130c:	movt	r3, #1
   11310:	mov	r0, r4
   11314:	mov	r2, #10
   11318:	bl	11408 <abort@plt+0xa9c>
   1131c:	ldr	r0, [r5]
   11320:	cmp	r0, #1
   11324:	blt	1138c <abort@plt+0xa20>
   11328:	str	r8, [sp]
   1132c:	str	r8, [sp, #4]
   11330:	add	r1, r5, #920	; 0x398
   11334:	movw	r3, #9323	; 0x246b
   11338:	movt	r3, #1
   1133c:	mov	r0, r4
   11340:	mov	r2, #8
   11344:	bl	11408 <abort@plt+0xa9c>
   11348:	ldr	r0, [r5, #8]
   1134c:	cmp	r0, #1
   11350:	blt	11368 <abort@plt+0x9fc>
   11354:	add	r1, r5, #992	; 0x3e0
   11358:	movw	r2, #9290	; 0x244a
   1135c:	movt	r2, #1
   11360:	mov	r0, r4
   11364:	bl	11538 <abort@plt+0xbcc>
   11368:	ldr	r0, [r6]
   1136c:	cmp	r0, #1
   11370:	blt	1138c <abort@plt+0xa20>
   11374:	movw	r0, #9048	; 0x2358
   11378:	add	r1, r5, r0
   1137c:	movw	r2, #9309	; 0x245d
   11380:	movt	r2, #1
   11384:	mov	r0, r4
   11388:	bl	11538 <abort@plt+0xbcc>
   1138c:	mov	r0, r4
   11390:	sub	sp, fp, #24
   11394:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11398:	b	11a28 <abort@plt+0x10bc>
   1139c:	nop	{0}
   113a0:	mov	ip, r0
   113a4:	ldr	r0, [r1]
   113a8:	cmp	r0, #0
   113ac:	beq	113e8 <abort@plt+0xa7c>
   113b0:	ldr	r1, [r1, #4]
   113b4:	sub	r1, r0, r1
   113b8:	vldr	d16, [pc, #64]	; 11400 <abort@plt+0xa94>
   113bc:	vmov	s0, r1
   113c0:	vmov	s2, r0
   113c4:	vcvt.f64.s32	d17, s0
   113c8:	vcvt.f64.s32	d18, s2
   113cc:	vmul.f64	d16, d17, d16
   113d0:	vdiv.f64	d16, d16, d18
   113d4:	vmov	r2, r3, d16
   113d8:	movw	r1, #9356	; 0x248c
   113dc:	movt	r1, #1
   113e0:	mov	r0, ip
   113e4:	b	1090c <fprintf@plt>
   113e8:	movw	r0, #9347	; 0x2483
   113ec:	movt	r0, #1
   113f0:	mov	r1, #8
   113f4:	mov	r2, #1
   113f8:	mov	r3, ip
   113fc:	b	108b8 <fwrite@plt>
   11400:	andeq	r0, r0, r0
   11404:	subsmi	r0, r9, r0
   11408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1140c:	add	fp, sp, #28
   11410:	sub	sp, sp, #4
   11414:	mov	r7, r2
   11418:	mov	r5, r1
   1141c:	mov	r4, r0
   11420:	movw	r1, #9362	; 0x2492
   11424:	movt	r1, #1
   11428:	mov	r2, r3
   1142c:	bl	1090c <fprintf@plt>
   11430:	mov	r0, r4
   11434:	mov	r1, #0
   11438:	bl	11640 <abort@plt+0xcd4>
   1143c:	ldrb	sl, [fp, #8]
   11440:	movw	r0, #9367	; 0x2497
   11444:	movt	r0, #1
   11448:	movw	r2, #9374	; 0x249e
   1144c:	movt	r2, #1
   11450:	cmp	sl, #0
   11454:	movne	r2, r0
   11458:	movw	r1, #9363	; 0x2493
   1145c:	movt	r1, #1
   11460:	mov	r0, r4
   11464:	bl	1090c <fprintf@plt>
   11468:	sxth	r6, r7
   1146c:	lsl	r0, r7, #16
   11470:	ldr	r1, [fp, #12]
   11474:	str	r1, [sp]
   11478:	cmp	r0, #65536	; 0x10000
   1147c:	blt	114c8 <abort@plt+0xb5c>
   11480:	mov	r7, #1
   11484:	movw	r8, #9381	; 0x24a5
   11488:	movt	r8, #1
   1148c:	mov	r9, #1
   11490:	mov	r1, r5
   11494:	ldr	r0, [r1, r7, lsl #3]!
   11498:	cmp	r0, #1
   1149c:	blt	114b8 <abort@plt+0xb4c>
   114a0:	mov	r0, r4
   114a4:	bl	11640 <abort@plt+0xcd4>
   114a8:	mov	r0, r4
   114ac:	mov	r1, r8
   114b0:	mov	r2, r7
   114b4:	bl	1090c <fprintf@plt>
   114b8:	add	r9, r9, #1
   114bc:	sxth	r7, r9
   114c0:	cmp	r6, r7
   114c4:	bge	11490 <abort@plt+0xb24>
   114c8:	cmp	sl, #0
   114cc:	beq	114fc <abort@plt+0xb90>
   114d0:	add	r1, r5, r6, lsl #3
   114d4:	ldr	r0, [r1, #8]!
   114d8:	cmp	r0, #1
   114dc:	blt	114fc <abort@plt+0xb90>
   114e0:	mov	r0, r4
   114e4:	bl	11640 <abort@plt+0xcd4>
   114e8:	movw	r1, #9390	; 0x24ae
   114ec:	movt	r1, #1
   114f0:	mov	r0, r4
   114f4:	mov	r2, r6
   114f8:	bl	1090c <fprintf@plt>
   114fc:	ldr	r0, [sp]
   11500:	tst	r0, #255	; 0xff
   11504:	subeq	sp, fp, #28
   11508:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1150c:	mov	r0, r4
   11510:	mov	r1, r5
   11514:	bl	11640 <abort@plt+0xcd4>
   11518:	movw	r0, #9331	; 0x2473
   1151c:	movt	r0, #1
   11520:	mov	r1, #7
   11524:	mov	r2, #1
   11528:	mov	r3, r4
   1152c:	sub	sp, fp, #28
   11530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11534:	b	108b8 <fwrite@plt>
   11538:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1153c:	add	fp, sp, #24
   11540:	mov	r6, r2
   11544:	mov	r4, r1
   11548:	mov	r5, r0
   1154c:	mov	r0, r1
   11550:	bl	11850 <abort@plt+0xee4>
   11554:	movw	r0, #8052	; 0x1f74
   11558:	ldr	r0, [r4, r0]!
   1155c:	mov	r7, r4
   11560:	ldr	r1, [r7, #-4]!
   11564:	movw	r2, #5808	; 0x16b0
   11568:	movt	r2, #1
   1156c:	bl	12104 <error@@Base+0x450>
   11570:	movw	r1, #9362	; 0x2492
   11574:	movt	r1, #1
   11578:	mov	r0, r5
   1157c:	mov	r2, r6
   11580:	bl	1090c <fprintf@plt>
   11584:	mov	r6, #0
   11588:	mov	r0, r5
   1158c:	mov	r1, #0
   11590:	bl	11640 <abort@plt+0xcd4>
   11594:	mov	r0, #10
   11598:	mov	r1, r5
   1159c:	bl	1093c <fputc@plt>
   115a0:	ldr	r0, [r4]
   115a4:	cmp	r0, #1
   115a8:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   115ac:	movw	r8, #9363	; 0x2493
   115b0:	movt	r8, #1
   115b4:	ldr	r0, [r7]
   115b8:	ldr	r0, [r0, r6, lsl #2]
   115bc:	add	r1, r0, #12
   115c0:	mov	r0, r5
   115c4:	bl	11640 <abort@plt+0xcd4>
   115c8:	ldr	r0, [r7]
   115cc:	ldr	r0, [r0, r6, lsl #2]
   115d0:	ldr	r2, [r0, #8]
   115d4:	mov	r0, r5
   115d8:	mov	r1, r8
   115dc:	bl	1090c <fprintf@plt>
   115e0:	add	r6, r6, #1
   115e4:	ldr	r0, [r4]
   115e8:	cmp	r6, r0
   115ec:	blt	115b4 <abort@plt+0xc48>
   115f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   115f4:	push	{r4, r5, fp, lr}
   115f8:	add	fp, sp, #8
   115fc:	mov	r4, r2
   11600:	mov	r5, r1
   11604:	bl	11044 <abort@plt+0x6d8>
   11608:	cmp	r0, #0
   1160c:	moveq	r0, #0
   11610:	popeq	{r4, r5, fp, pc}
   11614:	movw	r0, #12441	; 0x3099
   11618:	movt	r0, #2
   1161c:	movw	r1, #9339	; 0x247b
   11620:	movt	r1, #1
   11624:	mov	r2, r5
   11628:	mov	r3, r4
   1162c:	bl	10924 <__isoc99_sscanf@plt>
   11630:	sub	r0, r0, #2
   11634:	clz	r0, r0
   11638:	lsr	r0, r0, #5
   1163c:	pop	{r4, r5, fp, pc}
   11640:	push	{r4, r5, fp, lr}
   11644:	add	fp, sp, #8
   11648:	mov	r4, r0
   1164c:	cmp	r1, #0
   11650:	beq	1167c <abort@plt+0xd10>
   11654:	mov	r5, r1
   11658:	ldm	r1, {r2, r3}
   1165c:	movw	r1, #9399	; 0x24b7
   11660:	movt	r1, #1
   11664:	mov	r0, r4
   11668:	bl	1090c <fprintf@plt>
   1166c:	mov	r0, r4
   11670:	mov	r1, r5
   11674:	bl	113a0 <abort@plt+0xa34>
   11678:	b	11694 <abort@plt+0xd28>
   1167c:	movw	r0, #9410	; 0x24c2
   11680:	movt	r0, #1
   11684:	mov	r1, #26
   11688:	mov	r2, #1
   1168c:	mov	r3, r4
   11690:	bl	108b8 <fwrite@plt>
   11694:	movw	r0, #9437	; 0x24dd
   11698:	movt	r0, #1
   1169c:	mov	r1, #3
   116a0:	mov	r2, #1
   116a4:	mov	r3, r4
   116a8:	pop	{r4, r5, fp, lr}
   116ac:	b	108b8 <fwrite@plt>
   116b0:	ldr	r1, [r1, #8]
   116b4:	ldr	r0, [r0, #8]
   116b8:	b	11934 <abort@plt+0xfc8>
   116bc:	push	{r4, r5, r6, sl, fp, lr}
   116c0:	add	fp, sp, #16
   116c4:	mov	r4, r0
   116c8:	movw	r6, #503	; 0x1f7
   116cc:	mov	r5, r0
   116d0:	mov	r0, r5
   116d4:	bl	11f68 <error@@Base+0x2b4>
   116d8:	subs	r6, r6, #1
   116dc:	add	r5, r5, #16
   116e0:	bne	116d0 <abort@plt+0xd64>
   116e4:	movw	r0, #8052	; 0x1f74
   116e8:	mov	r1, #0
   116ec:	str	r1, [r4, r0]
   116f0:	movw	r0, #8048	; 0x1f70
   116f4:	str	r1, [r4, r0]
   116f8:	pop	{r4, r5, r6, sl, fp, pc}
   116fc:	push	{r4, r5, r6, sl, fp, lr}
   11700:	add	fp, sp, #16
   11704:	mov	r5, r1
   11708:	mov	r4, r0
   1170c:	mov	r0, r1
   11710:	bl	11758 <abort@plt+0xdec>
   11714:	ldr	r6, [r4, r0, lsl #4]
   11718:	mov	r4, #0
   1171c:	cmp	r6, #0
   11720:	bne	11738 <abort@plt+0xdcc>
   11724:	mov	r0, r4
   11728:	pop	{r4, r5, r6, sl, fp, pc}
   1172c:	ldr	r6, [r6, #4]
   11730:	cmp	r6, #0
   11734:	beq	11724 <abort@plt+0xdb8>
   11738:	ldr	r1, [r6, #8]
   1173c:	mov	r0, r5
   11740:	bl	10858 <strcmp@plt>
   11744:	cmp	r0, #0
   11748:	bne	1172c <abort@plt+0xdc0>
   1174c:	mov	r4, r6
   11750:	mov	r0, r4
   11754:	pop	{r4, r5, r6, sl, fp, pc}
   11758:	ldrb	r1, [r0]
   1175c:	cmp	r1, #0
   11760:	moveq	r0, #0
   11764:	sxtheq	r0, r0
   11768:	bxeq	lr
   1176c:	add	r2, r0, #1
   11770:	mov	r0, #0
   11774:	uxtab	r0, r0, r1
   11778:	ldrb	r1, [r2], #1
   1177c:	cmp	r1, #0
   11780:	bne	11774 <abort@plt+0xe08>
   11784:	movw	r1, #20065	; 0x4e61
   11788:	movt	r1, #33354	; 0x824a
   1178c:	umull	r1, r2, r0, r1
   11790:	lsr	r1, r2, #8
   11794:	movw	r2, #503	; 0x1f7
   11798:	mls	r0, r1, r2, r0
   1179c:	sxth	r0, r0
   117a0:	bx	lr
   117a4:	push	{r4, r5, fp, lr}
   117a8:	add	fp, sp, #8
   117ac:	mov	r4, r1
   117b0:	mov	r5, r0
   117b4:	ldr	r0, [r1, #8]
   117b8:	bl	11758 <abort@plt+0xdec>
   117bc:	add	r0, r5, r0, lsl #4
   117c0:	mov	r1, r4
   117c4:	bl	11f74 <error@@Base+0x2c0>
   117c8:	mov	r0, r5
   117cc:	bl	117e4 <abort@plt+0xe78>
   117d0:	movw	r0, #8052	; 0x1f74
   117d4:	ldr	r0, [r5, r0]!
   117d8:	add	r0, r0, #1
   117dc:	str	r0, [r5]
   117e0:	pop	{r4, r5, fp, pc}
   117e4:	push	{r4, sl, fp, lr}
   117e8:	add	fp, sp, #8
   117ec:	mov	r4, r0
   117f0:	movw	r0, #8048	; 0x1f70
   117f4:	ldr	r0, [r4, r0]!
   117f8:	cmp	r0, #0
   117fc:	popeq	{r4, sl, fp, pc}
   11800:	bl	1087c <free@plt>
   11804:	mov	r0, #0
   11808:	str	r0, [r4]
   1180c:	pop	{r4, sl, fp, pc}
   11810:	push	{r4, r5, fp, lr}
   11814:	add	fp, sp, #8
   11818:	mov	r4, r1
   1181c:	mov	r5, r0
   11820:	ldr	r0, [r1, #8]
   11824:	bl	11758 <abort@plt+0xdec>
   11828:	add	r0, r5, r0, lsl #4
   1182c:	mov	r1, r4
   11830:	bl	11fec <error@@Base+0x338>
   11834:	mov	r0, r5
   11838:	bl	117e4 <abort@plt+0xe78>
   1183c:	movw	r0, #8052	; 0x1f74
   11840:	ldr	r0, [r5, r0]!
   11844:	sub	r0, r0, #1
   11848:	str	r0, [r5]
   1184c:	pop	{r4, r5, fp, pc}
   11850:	push	{r4, r5, fp, lr}
   11854:	add	fp, sp, #8
   11858:	mov	r4, r0
   1185c:	movw	r0, #8048	; 0x1f70
   11860:	mov	r5, r4
   11864:	ldr	r0, [r5, r0]!
   11868:	cmp	r0, #0
   1186c:	bne	118c8 <abort@plt+0xf5c>
   11870:	movw	r0, #8052	; 0x1f74
   11874:	ldr	r0, [r4, r0]
   11878:	cmp	r0, #0
   1187c:	popeq	{r4, r5, fp, pc}
   11880:	mov	r1, #4
   11884:	bl	11914 <abort@plt+0xfa8>
   11888:	str	r0, [r5]
   1188c:	mov	r0, #0
   11890:	movw	ip, #503	; 0x1f7
   11894:	mov	r2, #0
   11898:	ldr	r3, [r4, r2, lsl #4]
   1189c:	cmp	r3, #0
   118a0:	beq	118bc <abort@plt+0xf50>
   118a4:	ldr	r1, [r5]
   118a8:	str	r3, [r1, r0, lsl #2]
   118ac:	add	r0, r0, #1
   118b0:	ldr	r3, [r3, #4]
   118b4:	cmp	r3, #0
   118b8:	bne	118a4 <abort@plt+0xf38>
   118bc:	add	r2, r2, #1
   118c0:	cmp	r2, ip
   118c4:	bne	11898 <abort@plt+0xf2c>
   118c8:	pop	{r4, r5, fp, pc}
   118cc:	push	{r4, r5, r6, r7, fp, lr}
   118d0:	add	fp, sp, #16
   118d4:	mov	r5, r1
   118d8:	mov	r4, r0
   118dc:	mov	r6, #0
   118e0:	movw	r7, #8048	; 0x1f70
   118e4:	add	r0, r4, r6
   118e8:	mov	r1, r5
   118ec:	bl	120c4 <error@@Base+0x410>
   118f0:	add	r6, r6, #16
   118f4:	cmp	r6, r7
   118f8:	bne	118e4 <abort@plt+0xf78>
   118fc:	mov	r0, r4
   11900:	bl	117e4 <abort@plt+0xe78>
   11904:	movw	r0, #8052	; 0x1f74
   11908:	mov	r1, #0
   1190c:	str	r1, [r4, r0]
   11910:	pop	{r4, r5, r6, r7, fp, pc}
   11914:	push	{fp, lr}
   11918:	mov	fp, sp
   1191c:	bl	1084c <calloc@plt>
   11920:	cmp	r0, #0
   11924:	popne	{fp, pc}
   11928:	movw	r0, #9441	; 0x24e1
   1192c:	movt	r0, #1
   11930:	bl	11cb4 <error@@Base>
   11934:	push	{r4, r5, r6, sl, fp, lr}
   11938:	add	fp, sp, #16
   1193c:	mov	r2, r0
   11940:	ldrb	ip, [r1]
   11944:	ldrb	r3, [r0]
   11948:	mov	r0, #0
   1194c:	cmp	r3, #0
   11950:	beq	11988 <abort@plt+0x101c>
   11954:	add	lr, r1, #1
   11958:	add	r6, r2, #1
   1195c:	mov	r2, #0
   11960:	uxtb	r4, ip
   11964:	uxtb	r5, r3
   11968:	cmp	r5, r4
   1196c:	bne	11998 <abort@plt+0x102c>
   11970:	ldrb	ip, [lr, r2]
   11974:	ldrb	r3, [r6, r2]
   11978:	add	r2, r2, #1
   1197c:	cmp	r3, #0
   11980:	bne	11960 <abort@plt+0xff4>
   11984:	b	1198c <abort@plt+0x1020>
   11988:	mov	r2, #0
   1198c:	cmp	ip, #0
   11990:	popeq	{r4, r5, r6, sl, fp, pc}
   11994:	mov	r3, #0
   11998:	ldrb	r1, [r1, r2]
   1199c:	uxtb	r2, r3
   119a0:	mov	r0, #1
   119a4:	cmp	r2, r1
   119a8:	mvncc	r0, #0
   119ac:	pop	{r4, r5, r6, sl, fp, pc}
   119b0:	push	{r4, r5, fp, lr}
   119b4:	add	fp, sp, #8
   119b8:	mov	r5, r1
   119bc:	cmp	r0, #0
   119c0:	beq	119f4 <abort@plt+0x1088>
   119c4:	mov	r4, r0
   119c8:	mov	r1, r5
   119cc:	bl	10870 <fopen@plt>
   119d0:	cmp	r0, #0
   119d4:	popne	{r4, r5, fp, pc}
   119d8:	ldrb	r0, [r5]
   119dc:	cmp	r0, #119	; 0x77
   119e0:	bne	11a18 <abort@plt+0x10ac>
   119e4:	movw	r0, #9467	; 0x24fb
   119e8:	movt	r0, #1
   119ec:	mov	r1, r4
   119f0:	bl	11cf4 <error@@Base+0x40>
   119f4:	ldrb	r0, [r5]
   119f8:	movw	r1, #12432	; 0x3090
   119fc:	movt	r1, #2
   11a00:	movw	r2, #12436	; 0x3094
   11a04:	movt	r2, #2
   11a08:	cmp	r0, #114	; 0x72
   11a0c:	moveq	r2, r1
   11a10:	ldr	r0, [r2]
   11a14:	pop	{r4, r5, fp, pc}
   11a18:	movw	r0, #9489	; 0x2511
   11a1c:	movt	r0, #1
   11a20:	mov	r1, r4
   11a24:	bl	11cf4 <error@@Base+0x40>
   11a28:	movw	r1, #12432	; 0x3090
   11a2c:	movt	r1, #2
   11a30:	ldr	r1, [r1]
   11a34:	cmp	r1, r0
   11a38:	movwne	r1, #12436	; 0x3094
   11a3c:	movtne	r1, #2
   11a40:	ldrne	r1, [r1]
   11a44:	cmpne	r1, r0
   11a48:	bxeq	lr
   11a4c:	b	10930 <fclose@plt>
   11a50:	push	{fp, lr}
   11a54:	mov	fp, sp
   11a58:	sub	sp, sp, #88	; 0x58
   11a5c:	mov	r1, sp
   11a60:	bl	12294 <error@@Base+0x5e0>
   11a64:	clz	r0, r0
   11a68:	lsr	r0, r0, #5
   11a6c:	mov	sp, fp
   11a70:	pop	{fp, pc}
   11a74:	push	{r4, sl, fp, lr}
   11a78:	add	fp, sp, #8
   11a7c:	movw	r0, #12542	; 0x30fe
   11a80:	movt	r0, #2
   11a84:	ldrh	r1, [r0]
   11a88:	add	r1, r1, #1
   11a8c:	strh	r1, [r0]
   11a90:	sxth	r0, r1
   11a94:	bl	11aa8 <abort@plt+0x113c>
   11a98:	mov	r4, r0
   11a9c:	bl	108a0 <unlink@plt>
   11aa0:	mov	r0, r4
   11aa4:	pop	{r4, sl, fp, pc}
   11aa8:	push	{r4, r5, fp, lr}
   11aac:	add	fp, sp, #8
   11ab0:	sub	sp, sp, #104	; 0x68
   11ab4:	mov	r4, r0
   11ab8:	movw	r0, #29716	; 0x7414
   11abc:	movt	r0, #2
   11ac0:	ldr	r5, [r0]
   11ac4:	bl	108e8 <getpid@plt>
   11ac8:	mov	r3, r0
   11acc:	sxth	r0, r4
   11ad0:	str	r0, [sp]
   11ad4:	add	r4, sp, #4
   11ad8:	movw	r1, #9530	; 0x253a
   11adc:	movt	r1, #1
   11ae0:	mov	r0, r4
   11ae4:	mov	r2, r5
   11ae8:	bl	10948 <sprintf@plt>
   11aec:	mov	r0, r4
   11af0:	bl	10894 <strdup@plt>
   11af4:	sub	sp, fp, #8
   11af8:	pop	{r4, r5, fp, pc}
   11afc:	push	{r4, sl, fp, lr}
   11b00:	add	fp, sp, #8
   11b04:	mov	r4, r0
   11b08:	bl	10900 <strlen@plt>
   11b0c:	sub	r0, r0, #1
   11b10:	sxth	r0, r0
   11b14:	cmp	r0, #0
   11b18:	blt	11b28 <abort@plt+0x11bc>
   11b1c:	ldrb	r1, [r4, r0]
   11b20:	cmp	r1, #47	; 0x2f
   11b24:	bne	11b0c <abort@plt+0x11a0>
   11b28:	add	r0, r4, r0
   11b2c:	add	r0, r0, #1
   11b30:	pop	{r4, sl, fp, pc}
   11b34:	push	{r4, r5, r6, r7, fp, lr}
   11b38:	add	fp, sp, #16
   11b3c:	mov	r4, r3
   11b40:	mov	r5, r2
   11b44:	mov	r6, r1
   11b48:	mov	r7, r0
   11b4c:	ldr	r0, [r1]
   11b50:	bl	11afc <abort@plt+0x1190>
   11b54:	movw	r1, #29716	; 0x7414
   11b58:	movt	r1, #2
   11b5c:	str	r0, [r1]
   11b60:	bl	11d7c <error@@Base+0xc8>
   11b64:	mov	r0, r7
   11b68:	mov	r1, r6
   11b6c:	mov	r2, r5
   11b70:	mov	r3, r4
   11b74:	pop	{r4, r5, r6, r7, fp, lr}
   11b78:	b	11b7c <abort@plt+0x1210>
   11b7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b80:	add	fp, sp, #28
   11b84:	sub	sp, sp, #12
   11b88:	stmib	sp, {r2, r3}
   11b8c:	mov	r7, r1
   11b90:	mov	r5, r0
   11b94:	ldr	r0, [r0]
   11b98:	cmp	r0, #1
   11b9c:	bne	11bb4 <abort@plt+0x1248>
   11ba0:	movw	r0, #12412	; 0x307c
   11ba4:	movt	r0, #2
   11ba8:	ldrb	r0, [r0]
   11bac:	cmp	r0, #0
   11bb0:	bne	11c6c <abort@plt+0x1300>
   11bb4:	ldr	r9, [r5]
   11bb8:	mov	r6, #0
   11bbc:	cmp	r9, #2
   11bc0:	blt	11c5c <abort@plt+0x12f0>
   11bc4:	mov	sl, #1
   11bc8:	mov	r6, #0
   11bcc:	mov	r8, #1
   11bd0:	ldr	r4, [r7, sl, lsl #2]
   11bd4:	ldrb	r0, [r4]
   11bd8:	cmp	r0, #45	; 0x2d
   11bdc:	bne	11c38 <abort@plt+0x12cc>
   11be0:	ldrb	r0, [r4, #1]
   11be4:	cmp	r0, #0
   11be8:	beq	11c38 <abort@plt+0x12cc>
   11bec:	mov	r0, r4
   11bf0:	bl	10900 <strlen@plt>
   11bf4:	mov	r2, r0
   11bf8:	movw	r0, #9559	; 0x2557
   11bfc:	movt	r0, #1
   11c00:	mov	r1, r4
   11c04:	bl	10960 <strncmp@plt>
   11c08:	cmp	r0, #0
   11c0c:	beq	11c6c <abort@plt+0x1300>
   11c10:	add	r0, sl, #1
   11c14:	mov	r1, #0
   11c18:	cmp	r0, r9
   11c1c:	ldrlt	r1, [r7, r0, lsl #2]
   11c20:	mov	r0, r4
   11c24:	ldr	r2, [sp, #8]
   11c28:	bl	11e28 <error@@Base+0x174>
   11c2c:	cmp	r0, #0
   11c30:	addne	r8, r8, #1
   11c34:	b	11c48 <abort@plt+0x12dc>
   11c38:	ldr	r0, [r7, sl, lsl #2]
   11c3c:	sxth	r1, r6
   11c40:	str	r0, [r7, r1, lsl #2]
   11c44:	add	r6, r6, #1
   11c48:	ldr	r9, [r5]
   11c4c:	add	r8, r8, #1
   11c50:	sxth	sl, r8
   11c54:	cmp	r9, sl
   11c58:	bgt	11bd0 <abort@plt+0x1264>
   11c5c:	sxth	r0, r6
   11c60:	str	r0, [r5]
   11c64:	sub	sp, fp, #28
   11c68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c6c:	ldr	r0, [sp, #4]
   11c70:	bl	11dd8 <error@@Base+0x124>
   11c74:	push	{fp, lr}
   11c78:	mov	fp, sp
   11c7c:	mov	r0, #0
   11c80:	bl	11c84 <abort@plt+0x1318>
   11c84:	push	{fp, lr}
   11c88:	mov	fp, sp
   11c8c:	mov	r4, r0
   11c90:	movw	r0, #29720	; 0x7418
   11c94:	movt	r0, #2
   11c98:	ldr	r0, [r0]
   11c9c:	cmp	r0, #0
   11ca0:	beq	11ca8 <abort@plt+0x133c>
   11ca4:	blx	r0
   11ca8:	bl	11f18 <error@@Base+0x264>
   11cac:	mov	r0, r4
   11cb0:	bl	108f4 <exit@plt>

00011cb4 <error@@Base>:
   11cb4:	push	{fp, lr}
   11cb8:	mov	fp, sp
   11cbc:	mov	r3, r0
   11cc0:	movw	r0, #29716	; 0x7414
   11cc4:	movt	r0, #2
   11cc8:	ldr	r2, [r0]
   11ccc:	movw	r0, #12424	; 0x3088
   11cd0:	movt	r0, #2
   11cd4:	ldr	r0, [r0]
   11cd8:	movw	r1, #9509	; 0x2525
   11cdc:	movt	r1, #1
   11ce0:	bl	1090c <fprintf@plt>
   11ce4:	movw	r0, #12416	; 0x3080
   11ce8:	movt	r0, #2
   11cec:	ldr	r0, [r0]
   11cf0:	bl	11c84 <abort@plt+0x1318>
   11cf4:	push	{fp, lr}
   11cf8:	mov	fp, sp
   11cfc:	sub	sp, sp, #8
   11d00:	mov	r3, r0
   11d04:	movw	r0, #29716	; 0x7414
   11d08:	movt	r0, #2
   11d0c:	ldr	r2, [r0]
   11d10:	movw	r0, #12424	; 0x3088
   11d14:	movt	r0, #2
   11d18:	ldr	r0, [r0]
   11d1c:	str	r1, [sp]
   11d20:	movw	r1, #9517	; 0x252d
   11d24:	movt	r1, #1
   11d28:	bl	1090c <fprintf@plt>
   11d2c:	movw	r0, #12416	; 0x3080
   11d30:	movt	r0, #2
   11d34:	ldr	r0, [r0]
   11d38:	bl	11c84 <abort@plt+0x1318>
   11d3c:	push	{fp, lr}
   11d40:	mov	fp, sp
   11d44:	sub	sp, sp, #8
   11d48:	mov	r3, r0
   11d4c:	movw	r0, #29716	; 0x7414
   11d50:	movt	r0, #2
   11d54:	ldr	r2, [r0]
   11d58:	movw	r0, #12424	; 0x3088
   11d5c:	movt	r0, #2
   11d60:	ldr	r0, [r0]
   11d64:	str	r1, [sp]
   11d68:	movw	r1, #9517	; 0x252d
   11d6c:	movt	r1, #1
   11d70:	bl	1090c <fprintf@plt>
   11d74:	mov	sp, fp
   11d78:	pop	{fp, pc}
   11d7c:	push	{r4, sl, fp, lr}
   11d80:	add	fp, sp, #8
   11d84:	movw	r4, #7592	; 0x1da8
   11d88:	movt	r4, #1
   11d8c:	mov	r0, #2
   11d90:	mov	r1, r4
   11d94:	bl	108d0 <__sysv_signal@plt>
   11d98:	mov	r0, #15
   11d9c:	mov	r1, r4
   11da0:	pop	{r4, sl, fp, lr}
   11da4:	b	108d0 <__sysv_signal@plt>
   11da8:	movw	r0, #12544	; 0x3100
   11dac:	movt	r0, #2
   11db0:	ldrb	r1, [r0]
   11db4:	cmp	r1, #1
   11db8:	bxeq	lr
   11dbc:	push	{fp, lr}
   11dc0:	mov	fp, sp
   11dc4:	mov	r1, #1
   11dc8:	strb	r1, [r0]
   11dcc:	movw	r0, #9544	; 0x2548
   11dd0:	movt	r0, #1
   11dd4:	bl	11cb4 <error@@Base>
   11dd8:	push	{fp, lr}
   11ddc:	mov	fp, sp
   11de0:	mov	r3, r0
   11de4:	movw	r0, #29712	; 0x7410
   11de8:	movt	r0, #2
   11dec:	ldr	r0, [r0]
   11df0:	cmp	r0, #0
   11df4:	bne	11e20 <error@@Base+0x16c>
   11df8:	movw	r0, #29716	; 0x7414
   11dfc:	movt	r0, #2
   11e00:	ldr	r2, [r0]
   11e04:	movw	r0, #12424	; 0x3088
   11e08:	movt	r0, #2
   11e0c:	ldr	r0, [r0]
   11e10:	movw	r1, #9565	; 0x255d
   11e14:	movt	r1, #1
   11e18:	bl	1090c <fprintf@plt>
   11e1c:	bl	11c74 <abort@plt+0x1308>
   11e20:	blx	r0
   11e24:	bl	11c74 <abort@plt+0x1308>
   11e28:	push	{r4, sl, fp, lr}
   11e2c:	add	fp, sp, #8
   11e30:	mov	ip, r0
   11e34:	cmp	r2, #0
   11e38:	ldrbne	r0, [r2]
   11e3c:	cmpne	r0, #0
   11e40:	bne	11e54 <error@@Base+0x1a0>
   11e44:	movw	r0, #9580	; 0x256c
   11e48:	movt	r0, #1
   11e4c:	mov	r1, ip
   11e50:	bl	11cf4 <error@@Base+0x40>
   11e54:	ldrb	lr, [ip, #1]
   11e58:	mov	r3, #0
   11e5c:	cmp	lr, r0
   11e60:	beq	11e88 <error@@Base+0x1d4>
   11e64:	mov	r0, #1
   11e68:	sxth	r3, r0
   11e6c:	add	r4, r3, r3, lsl #1
   11e70:	ldrb	r4, [r2, r4, lsl #2]
   11e74:	cmp	r4, #0
   11e78:	beq	11e44 <error@@Base+0x190>
   11e7c:	add	r0, r0, #1
   11e80:	cmp	lr, r4
   11e84:	bne	11e68 <error@@Base+0x1b4>
   11e88:	add	r0, r3, r3, lsl #1
   11e8c:	add	r3, r2, r0, lsl #2
   11e90:	ldr	r0, [r3, #4]
   11e94:	cmp	r0, #0
   11e98:	beq	11ed8 <error@@Base+0x224>
   11e9c:	mov	r2, ip
   11ea0:	ldrb	lr, [r2, #2]!
   11ea4:	cmp	r1, #0
   11ea8:	cmpeq	lr, #0
   11eac:	beq	11ed8 <error@@Base+0x224>
   11eb0:	ldr	r3, [r0]
   11eb4:	cmp	r3, #0
   11eb8:	bne	11f08 <error@@Base+0x254>
   11ebc:	cmp	lr, #0
   11ec0:	movne	r1, r2
   11ec4:	str	r1, [r0]
   11ec8:	ldrb	r0, [r2]
   11ecc:	clz	r0, r0
   11ed0:	lsr	r0, r0, #5
   11ed4:	pop	{r4, sl, fp, pc}
   11ed8:	ldr	r0, [r3, #8]
   11edc:	cmp	r0, #0
   11ee0:	beq	11e44 <error@@Base+0x190>
   11ee4:	ldrb	r1, [ip, #2]
   11ee8:	cmp	r1, #0
   11eec:	bne	11e44 <error@@Base+0x190>
   11ef0:	ldrb	r1, [r0]
   11ef4:	cmp	r1, #0
   11ef8:	moveq	r1, #1
   11efc:	strbeq	r1, [r0]
   11f00:	moveq	r0, #0
   11f04:	popeq	{r4, sl, fp, pc}
   11f08:	movw	r0, #9595	; 0x257b
   11f0c:	movt	r0, #1
   11f10:	mov	r1, ip
   11f14:	bl	11cf4 <error@@Base+0x40>
   11f18:	push	{r4, r5, r6, sl, fp, lr}
   11f1c:	add	fp, sp, #16
   11f20:	movw	r5, #12542	; 0x30fe
   11f24:	movt	r5, #2
   11f28:	ldrsh	r0, [r5]
   11f2c:	cmp	r0, #1
   11f30:	poplt	{r4, r5, r6, sl, fp, pc}
   11f34:	mov	r6, #1
   11f38:	sxth	r0, r6
   11f3c:	bl	11aa8 <abort@plt+0x113c>
   11f40:	mov	r4, r0
   11f44:	bl	108a0 <unlink@plt>
   11f48:	mov	r0, r4
   11f4c:	bl	1087c <free@plt>
   11f50:	add	r0, r6, #1
   11f54:	sxth	r6, r0
   11f58:	ldrsh	r0, [r5]
   11f5c:	cmp	r6, r0
   11f60:	ble	11f38 <error@@Base+0x284>
   11f64:	pop	{r4, r5, r6, sl, fp, pc}
   11f68:	vmov.i32	q8, #0	; 0x00000000
   11f6c:	vst1.32	{d16-d17}, [r0]
   11f70:	bx	lr
   11f74:	mov	r2, r1
   11f78:	ldr	r3, [r0]
   11f7c:	mov	r1, #0
   11f80:	b	11f84 <error@@Base+0x2d0>
   11f84:	push	{r4, sl, fp, lr}
   11f88:	add	fp, sp, #8
   11f8c:	mov	r4, r0
   11f90:	stm	r2, {r1, r3}
   11f94:	cmp	r1, #0
   11f98:	addne	r0, r1, #4
   11f9c:	str	r2, [r0]
   11fa0:	cmp	r3, #0
   11fa4:	addeq	r3, r4, #4
   11fa8:	str	r2, [r3]
   11fac:	mov	r0, r4
   11fb0:	bl	12040 <error@@Base+0x38c>
   11fb4:	ldr	r0, [r4, #12]
   11fb8:	add	r0, r0, #1
   11fbc:	str	r0, [r4, #12]
   11fc0:	pop	{r4, sl, fp, pc}
   11fc4:	mov	r2, r1
   11fc8:	ldr	r1, [r0, #4]
   11fcc:	mov	r3, #0
   11fd0:	b	11f84 <error@@Base+0x2d0>
   11fd4:	mov	r3, r2
   11fd8:	mov	r2, r1
   11fdc:	ldr	r1, [r3]
   11fe0:	b	11f84 <error@@Base+0x2d0>
   11fe4:	ldr	r3, [r1, #4]
   11fe8:	b	11f84 <error@@Base+0x2d0>
   11fec:	push	{r4, sl, fp, lr}
   11ff0:	add	fp, sp, #8
   11ff4:	mov	r4, r0
   11ff8:	ldm	r1, {r0, r2}
   11ffc:	cmp	r0, #0
   12000:	mov	r3, r4
   12004:	addne	r3, r0, #4
   12008:	str	r2, [r3]
   1200c:	ldm	r1, {r0, r2}
   12010:	cmp	r2, #0
   12014:	addeq	r2, r4, #4
   12018:	str	r0, [r2]
   1201c:	mov	r0, #0
   12020:	str	r0, [r1]
   12024:	str	r0, [r1, #4]
   12028:	mov	r0, r4
   1202c:	bl	12040 <error@@Base+0x38c>
   12030:	ldr	r0, [r4, #12]
   12034:	sub	r0, r0, #1
   12038:	str	r0, [r4, #12]
   1203c:	pop	{r4, sl, fp, pc}
   12040:	push	{r4, sl, fp, lr}
   12044:	add	fp, sp, #8
   12048:	mov	r4, r0
   1204c:	ldr	r0, [r0, #8]
   12050:	cmp	r0, #0
   12054:	popeq	{r4, sl, fp, pc}
   12058:	bl	1087c <free@plt>
   1205c:	mov	r0, #0
   12060:	str	r0, [r4, #8]
   12064:	pop	{r4, sl, fp, pc}
   12068:	push	{r4, sl, fp, lr}
   1206c:	add	fp, sp, #8
   12070:	mov	r4, r0
   12074:	ldr	r0, [r0, #8]
   12078:	cmp	r0, #0
   1207c:	bne	120c0 <error@@Base+0x40c>
   12080:	ldr	r0, [r4, #12]
   12084:	cmp	r0, #0
   12088:	beq	120c0 <error@@Base+0x40c>
   1208c:	mov	r1, #4
   12090:	bl	11914 <abort@plt+0xfa8>
   12094:	str	r0, [r4, #8]
   12098:	ldr	r0, [r4]
   1209c:	cmp	r0, #0
   120a0:	popeq	{r4, sl, fp, pc}
   120a4:	mov	r1, #0
   120a8:	ldr	r2, [r4, #8]
   120ac:	str	r0, [r2, r1]
   120b0:	add	r1, r1, #4
   120b4:	ldr	r0, [r0, #4]
   120b8:	cmp	r0, #0
   120bc:	bne	120a8 <error@@Base+0x3f4>
   120c0:	pop	{r4, sl, fp, pc}
   120c4:	push	{r4, r5, r6, sl, fp, lr}
   120c8:	add	fp, sp, #16
   120cc:	ldr	r6, [r0]
   120d0:	cmp	r6, #0
   120d4:	popeq	{r4, r5, r6, sl, fp, pc}
   120d8:	mov	r4, r1
   120dc:	mov	r5, r0
   120e0:	mov	r0, r5
   120e4:	mov	r1, r6
   120e8:	bl	11fec <error@@Base+0x338>
   120ec:	mov	r0, r6
   120f0:	blx	r4
   120f4:	ldr	r6, [r5]
   120f8:	cmp	r6, #0
   120fc:	bne	120e0 <error@@Base+0x42c>
   12100:	pop	{r4, r5, r6, sl, fp, pc}
   12104:	cmp	r0, #2
   12108:	bxlt	lr
   1210c:	movw	r3, #12552	; 0x3108
   12110:	movt	r3, #2
   12114:	str	r2, [r3]
   12118:	movw	r2, #12548	; 0x3104
   1211c:	movt	r2, #2
   12120:	str	r1, [r2]
   12124:	sub	r1, r0, #1
   12128:	mov	r0, #0
   1212c:	b	12130 <error@@Base+0x47c>
   12130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12134:	add	fp, sp, #28
   12138:	sub	sp, sp, #4
   1213c:	mov	r8, r1
   12140:	mov	r9, r0
   12144:	movw	r7, #12548	; 0x3104
   12148:	movt	r7, #2
   1214c:	movw	sl, #12552	; 0x3108
   12150:	movt	sl, #2
   12154:	b	12180 <error@@Base+0x4cc>
   12158:	ldr	r0, [r7]
   1215c:	str	r6, [r0, r4, lsl #2]
   12160:	sub	r1, r4, #1
   12164:	cmp	r1, r9
   12168:	movgt	r0, r9
   1216c:	blgt	12130 <error@@Base+0x47c>
   12170:	add	r9, r5, #1
   12174:	cmp	r9, r8
   12178:	subge	sp, fp, #28
   1217c:	popge	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12180:	ldr	r0, [r7]
   12184:	ldr	r6, [r0, r9, lsl #2]
   12188:	cmp	r9, r8
   1218c:	mov	r4, r8
   12190:	mov	r5, r9
   12194:	bge	12158 <error@@Base+0x4a4>
   12198:	mov	r5, r9
   1219c:	mov	r4, r8
   121a0:	cmp	r5, r4
   121a4:	blt	121b8 <error@@Base+0x504>
   121a8:	b	121d4 <error@@Base+0x520>
   121ac:	sub	r4, r4, #1
   121b0:	cmp	r5, r4
   121b4:	bge	121d4 <error@@Base+0x520>
   121b8:	ldr	r0, [r7]
   121bc:	ldr	r1, [r0, r4, lsl #2]
   121c0:	ldr	r2, [sl]
   121c4:	mov	r0, r6
   121c8:	blx	r2
   121cc:	cmn	r0, #1
   121d0:	ble	121ac <error@@Base+0x4f8>
   121d4:	cmp	r5, r4
   121d8:	beq	121ec <error@@Base+0x538>
   121dc:	ldr	r0, [r7]
   121e0:	ldr	r1, [r0, r4, lsl #2]
   121e4:	str	r1, [r0, r5, lsl #2]
   121e8:	add	r5, r5, #1
   121ec:	cmp	r5, r4
   121f0:	bge	12210 <error@@Base+0x55c>
   121f4:	ldr	r0, [r7]
   121f8:	ldr	r1, [r0, r5, lsl #2]
   121fc:	ldr	r2, [sl]
   12200:	mov	r0, r6
   12204:	blx	r2
   12208:	cmp	r0, #1
   1220c:	bge	121e8 <error@@Base+0x534>
   12210:	cmp	r5, r4
   12214:	ldrne	r0, [r7]
   12218:	ldrne	r1, [r0, r5, lsl #2]
   1221c:	strne	r1, [r0, r4, lsl #2]
   12220:	subne	r4, r4, #1
   12224:	cmp	r5, r4
   12228:	blt	121b0 <error@@Base+0x4fc>
   1222c:	b	12158 <error@@Base+0x4a4>
   12230:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12234:	mov	r7, r0
   12238:	ldr	r6, [pc, #72]	; 12288 <error@@Base+0x5d4>
   1223c:	ldr	r5, [pc, #72]	; 1228c <error@@Base+0x5d8>
   12240:	add	r6, pc, r6
   12244:	add	r5, pc, r5
   12248:	sub	r6, r6, r5
   1224c:	mov	r8, r1
   12250:	mov	r9, r2
   12254:	bl	1082c <calloc@plt-0x20>
   12258:	asrs	r6, r6, #2
   1225c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12260:	mov	r4, #0
   12264:	add	r4, r4, #1
   12268:	ldr	r3, [r5], #4
   1226c:	mov	r2, r9
   12270:	mov	r1, r8
   12274:	mov	r0, r7
   12278:	blx	r3
   1227c:	cmp	r6, r4
   12280:	bne	12264 <error@@Base+0x5b0>
   12284:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12288:			; <UNDEFINED> instruction: 0x00010cb4
   1228c:	andeq	r0, r1, ip, lsr #25
   12290:	bx	lr
   12294:	mov	r2, r1
   12298:	mov	r1, r0
   1229c:	mov	r0, #3
   122a0:	b	108ac <__xstat@plt>

Disassembly of section .fini:

000122a4 <.fini>:
   122a4:	push	{r3, lr}
   122a8:	pop	{r3, pc}
