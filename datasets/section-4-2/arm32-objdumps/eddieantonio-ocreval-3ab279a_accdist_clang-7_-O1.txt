
../repos/eddieantonio-ocreval-3ab279a/accdist/accdist:     file format elf32-littlearm


Disassembly of section .init:

000109d4 <.init>:
   109d4:	push	{r3, lr}
   109d8:	bl	10ba4 <getc@plt+0x48>
   109dc:	pop	{r3, pc}

Disassembly of section .plt:

000109e0 <calloc@plt-0x14>:
   109e0:	push	{lr}		; (str lr, [sp, #-4]!)
   109e4:	ldr	lr, [pc, #4]	; 109f0 <calloc@plt-0x4>
   109e8:	add	lr, pc, lr
   109ec:	ldr	pc, [lr, #8]!
   109f0:	andeq	r3, r1, r0, lsl r6

000109f4 <calloc@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #77824	; 0x13000
   109fc:	ldr	pc, [ip, #1552]!	; 0x610

00010a00 <strcmp@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #77824	; 0x13000
   10a08:	ldr	pc, [ip, #1544]!	; 0x608

00010a0c <fopen@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #77824	; 0x13000
   10a14:	ldr	pc, [ip, #1536]!	; 0x600

00010a18 <free@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #77824	; 0x13000
   10a20:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a24 <utf8proc_get_property@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #77824	; 0x13000
   10a2c:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a30 <fgets@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #77824	; 0x13000
   10a38:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a3c <utf8proc_encode_char@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #77824	; 0x13000
   10a44:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a48 <strdup@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #77824	; 0x13000
   10a50:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a54 <rewind@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #77824	; 0x13000
   10a5c:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a60 <unlink@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #77824	; 0x13000
   10a68:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a6c <utf8proc_tolower@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #77824	; 0x13000
   10a74:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a78 <__xstat@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #77824	; 0x13000
   10a80:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a84 <fwrite@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #77824	; 0x13000
   10a8c:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a90 <fread@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #77824	; 0x13000
   10a98:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a9c <utf8proc_iterate@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #77824	; 0x13000
   10aa4:	ldr	pc, [ip, #1440]!	; 0x5a0

00010aa8 <__libc_start_main@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #77824	; 0x13000
   10ab0:	ldr	pc, [ip, #1432]!	; 0x598

00010ab4 <__sysv_signal@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #77824	; 0x13000
   10abc:	ldr	pc, [ip, #1424]!	; 0x590

00010ac0 <__gmon_start__@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #77824	; 0x13000
   10ac8:	ldr	pc, [ip, #1416]!	; 0x588

00010acc <getpid@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #77824	; 0x13000
   10ad4:	ldr	pc, [ip, #1408]!	; 0x580

00010ad8 <exit@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #77824	; 0x13000
   10ae0:	ldr	pc, [ip, #1400]!	; 0x578

00010ae4 <utf8proc_category@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #77824	; 0x13000
   10aec:	ldr	pc, [ip, #1392]!	; 0x570

00010af0 <strlen@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #77824	; 0x13000
   10af8:	ldr	pc, [ip, #1384]!	; 0x568

00010afc <fprintf@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #77824	; 0x13000
   10b04:	ldr	pc, [ip, #1376]!	; 0x560

00010b08 <__isoc99_sscanf@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #77824	; 0x13000
   10b10:	ldr	pc, [ip, #1368]!	; 0x558

00010b14 <fclose@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #77824	; 0x13000
   10b1c:	ldr	pc, [ip, #1360]!	; 0x550

00010b20 <sprintf@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #77824	; 0x13000
   10b28:	ldr	pc, [ip, #1352]!	; 0x548

00010b2c <utf8proc_errmsg@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #77824	; 0x13000
   10b34:	ldr	pc, [ip, #1344]!	; 0x540

00010b38 <fputs@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #77824	; 0x13000
   10b40:	ldr	pc, [ip, #1336]!	; 0x538

00010b44 <strncmp@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #77824	; 0x13000
   10b4c:	ldr	pc, [ip, #1328]!	; 0x530

00010b50 <abort@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #77824	; 0x13000
   10b58:	ldr	pc, [ip, #1320]!	; 0x528

00010b5c <getc@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #77824	; 0x13000
   10b64:	ldr	pc, [ip, #1312]!	; 0x520

Disassembly of section .text:

00010b68 <error@@Base-0x1538>:
   10b68:	mov	fp, #0
   10b6c:	mov	lr, #0
   10b70:	pop	{r1}		; (ldr r1, [sp], #4)
   10b74:	mov	r2, sp
   10b78:	push	{r2}		; (str r2, [sp, #-4]!)
   10b7c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b80:	ldr	ip, [pc, #16]	; 10b98 <getc@plt+0x3c>
   10b84:	push	{ip}		; (str ip, [sp, #-4]!)
   10b88:	ldr	r0, [pc, #12]	; 10b9c <getc@plt+0x40>
   10b8c:	ldr	r3, [pc, #12]	; 10ba0 <getc@plt+0x44>
   10b90:	bl	10aa8 <__libc_start_main@plt>
   10b94:	bl	10b50 <abort@plt>
   10b98:	andeq	r2, r1, r8, asr #24
   10b9c:	muleq	r1, r4, ip
   10ba0:	andeq	r2, r1, r8, ror #23
   10ba4:	ldr	r3, [pc, #20]	; 10bc0 <getc@plt+0x64>
   10ba8:	ldr	r2, [pc, #20]	; 10bc4 <getc@plt+0x68>
   10bac:	add	r3, pc, r3
   10bb0:	ldr	r2, [r3, r2]
   10bb4:	cmp	r2, #0
   10bb8:	bxeq	lr
   10bbc:	b	10ac0 <__gmon_start__@plt>
   10bc0:	andeq	r3, r1, ip, asr #8
   10bc4:	andeq	r0, r0, r8, lsl #1
   10bc8:	ldr	r0, [pc, #24]	; 10be8 <getc@plt+0x8c>
   10bcc:	ldr	r3, [pc, #24]	; 10bec <getc@plt+0x90>
   10bd0:	cmp	r3, r0
   10bd4:	bxeq	lr
   10bd8:	ldr	r3, [pc, #16]	; 10bf0 <getc@plt+0x94>
   10bdc:	cmp	r3, #0
   10be0:	bxeq	lr
   10be4:	bx	r3
   10be8:	muleq	r2, ip, r0
   10bec:	muleq	r2, ip, r0
   10bf0:	andeq	r0, r0, r0
   10bf4:	ldr	r0, [pc, #36]	; 10c20 <getc@plt+0xc4>
   10bf8:	ldr	r1, [pc, #36]	; 10c24 <getc@plt+0xc8>
   10bfc:	sub	r1, r1, r0
   10c00:	asr	r1, r1, #2
   10c04:	add	r1, r1, r1, lsr #31
   10c08:	asrs	r1, r1, #1
   10c0c:	bxeq	lr
   10c10:	ldr	r3, [pc, #16]	; 10c28 <getc@plt+0xcc>
   10c14:	cmp	r3, #0
   10c18:	bxeq	lr
   10c1c:	bx	r3
   10c20:	muleq	r2, ip, r0
   10c24:	muleq	r2, ip, r0
   10c28:	andeq	r0, r0, r0
   10c2c:	push	{r4, lr}
   10c30:	ldr	r4, [pc, #24]	; 10c50 <getc@plt+0xf4>
   10c34:	ldrb	r3, [r4]
   10c38:	cmp	r3, #0
   10c3c:	popne	{r4, pc}
   10c40:	bl	10bc8 <getc@plt+0x6c>
   10c44:	mov	r3, #1
   10c48:	strb	r3, [r4]
   10c4c:	pop	{r4, pc}
   10c50:	strheq	r4, [r2], -r0
   10c54:	b	10bf4 <getc@plt+0x98>
   10c58:	push	{r4, r5, r6, sl, fp, lr}
   10c5c:	add	fp, sp, #16
   10c60:	mov	r1, r0
   10c64:	movw	r4, #17704	; 0x4528
   10c68:	movt	r4, #19
   10c6c:	ldm	r4, {r5, r6}
   10c70:	mov	r0, r4
   10c74:	bl	10dec <getc@plt+0x290>
   10c78:	ldm	r4, {r0, r2}
   10c7c:	sub	r1, r0, r5
   10c80:	sub	r2, r2, r6
   10c84:	movw	r0, #27876	; 0x6ce4
   10c88:	movt	r0, #155	; 0x9b
   10c8c:	pop	{r4, r5, r6, sl, fp, lr}
   10c90:	b	117d0 <getc@plt+0xc74>
   10c94:	push	{fp, lr}
   10c98:	mov	fp, sp
   10c9c:	sub	sp, sp, #8
   10ca0:	mov	r4, r1
   10ca4:	str	r0, [sp, #4]
   10ca8:	add	r0, sp, #4
   10cac:	movw	r2, #11368	; 0x2c68
   10cb0:	movt	r2, #1
   10cb4:	mov	r5, #0
   10cb8:	mov	r3, #0
   10cbc:	bl	11f20 <getc@plt+0x13c4>
   10cc0:	ldr	r0, [sp, #4]
   10cc4:	cmp	r0, #1
   10cc8:	blt	10ce4 <getc@plt+0x188>
   10ccc:	ldr	r0, [r4, r5, lsl #2]
   10cd0:	bl	10c58 <getc@plt+0xfc>
   10cd4:	add	r5, r5, #1
   10cd8:	ldr	r0, [sp, #4]
   10cdc:	cmp	r5, r0
   10ce0:	blt	10ccc <getc@plt+0x170>
   10ce4:	movw	r0, #27876	; 0x6ce4
   10ce8:	movt	r0, #155	; 0x9b
   10cec:	mov	r1, #0
   10cf0:	bl	11858 <getc@plt+0xcfc>
   10cf4:	bl	12060 <getc@plt+0x1504>
   10cf8:	push	{r4, r5, r6, r7, fp, lr}
   10cfc:	add	fp, sp, #16
   10d00:	mov	r4, r3
   10d04:	mov	r5, r2
   10d08:	mov	r6, r1
   10d0c:	mov	r7, r0
   10d10:	mov	r0, r1
   10d14:	bl	11b58 <getc@plt+0xffc>
   10d18:	add	r0, r7, r0, lsl #3
   10d1c:	add	r0, r0, #68	; 0x44
   10d20:	mov	r1, r5
   10d24:	mov	r2, r4
   10d28:	bl	10d5c <getc@plt+0x200>
   10d2c:	movw	r0, #2116	; 0x844
   10d30:	add	r0, r7, r0
   10d34:	mov	r1, r5
   10d38:	mov	r2, r4
   10d3c:	bl	10d5c <getc@plt+0x200>
   10d40:	add	r0, r7, r6, lsl #3
   10d44:	movw	r1, #10180	; 0x27c4
   10d48:	add	r0, r0, r1
   10d4c:	mov	r1, r5
   10d50:	mov	r2, r4
   10d54:	pop	{r4, r5, r6, r7, fp, lr}
   10d58:	b	10d5c <getc@plt+0x200>
   10d5c:	ldm	r0, {r3, ip}
   10d60:	add	r1, r3, r1
   10d64:	add	r2, ip, r2
   10d68:	stm	r0, {r1, r2}
   10d6c:	bx	lr
   10d70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10d74:	add	fp, sp, #24
   10d78:	mov	r8, r3
   10d7c:	mov	r5, r2
   10d80:	mov	r7, r1
   10d84:	movw	r1, #2124	; 0x84c
   10d88:	add	r6, r0, r1
   10d8c:	mov	r0, r6
   10d90:	mov	r1, r7
   10d94:	bl	11940 <getc@plt+0xde4>
   10d98:	cmp	r0, #0
   10d9c:	beq	10dbc <getc@plt+0x260>
   10da0:	ldr	r1, [r0, #12]
   10da4:	ldr	r2, [r0, #16]
   10da8:	add	r1, r1, r5
   10dac:	add	r2, r2, r8
   10db0:	str	r1, [r0, #12]
   10db4:	str	r2, [r0, #16]
   10db8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10dbc:	mov	r0, #1
   10dc0:	mov	r1, #20
   10dc4:	bl	11d00 <getc@plt+0x11a4>
   10dc8:	mov	r4, r0
   10dcc:	mov	r0, r7
   10dd0:	bl	10a48 <strdup@plt>
   10dd4:	add	r1, r4, #8
   10dd8:	stm	r1, {r0, r5, r8}
   10ddc:	mov	r0, r6
   10de0:	mov	r1, r4
   10de4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10de8:	b	119e8 <getc@plt+0xe8c>
   10dec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10df0:	add	fp, sp, #28
   10df4:	sub	sp, sp, #20
   10df8:	mov	r7, r1
   10dfc:	mov	sl, r0
   10e00:	movw	r1, #14821	; 0x39e5
   10e04:	movt	r1, #1
   10e08:	mov	r0, r7
   10e0c:	bl	11d9c <getc@plt+0x1240>
   10e10:	mov	r5, r0
   10e14:	bl	110f0 <getc@plt+0x594>
   10e18:	cmp	r0, #0
   10e1c:	beq	110d4 <getc@plt+0x578>
   10e20:	movw	r0, #16561	; 0x40b1
   10e24:	movt	r0, #2
   10e28:	movw	r1, #11414	; 0x2c96
   10e2c:	movt	r1, #1
   10e30:	mov	r2, #40	; 0x28
   10e34:	bl	10b44 <strncmp@plt>
   10e38:	cmp	r0, #0
   10e3c:	bne	110d4 <getc@plt+0x578>
   10e40:	mov	r0, r5
   10e44:	bl	110f0 <getc@plt+0x594>
   10e48:	cmp	r0, #0
   10e4c:	beq	110d4 <getc@plt+0x578>
   10e50:	movw	r9, #16561	; 0x40b1
   10e54:	movt	r9, #2
   10e58:	movw	r1, #14756	; 0x39a4
   10e5c:	movt	r1, #1
   10e60:	mov	r0, r9
   10e64:	bl	10a00 <strcmp@plt>
   10e68:	cmp	r0, #0
   10e6c:	bne	110d4 <getc@plt+0x578>
   10e70:	add	r1, sp, #16
   10e74:	mov	r0, r5
   10e78:	mov	r2, sl
   10e7c:	bl	11118 <getc@plt+0x5bc>
   10e80:	cmp	r0, #0
   10e84:	beq	110d4 <getc@plt+0x578>
   10e88:	add	r2, sl, #4
   10e8c:	add	r1, sp, #12
   10e90:	mov	r0, r5
   10e94:	bl	11118 <getc@plt+0x5bc>
   10e98:	cmp	r0, #0
   10e9c:	beq	110d4 <getc@plt+0x578>
   10ea0:	mov	r0, r5
   10ea4:	bl	110f0 <getc@plt+0x594>
   10ea8:	cmp	r0, #0
   10eac:	beq	110d4 <getc@plt+0x578>
   10eb0:	mov	r0, r5
   10eb4:	bl	110f0 <getc@plt+0x594>
   10eb8:	cmp	r0, #0
   10ebc:	beq	110d4 <getc@plt+0x578>
   10ec0:	add	r2, sl, #8
   10ec4:	add	r1, sp, #8
   10ec8:	mov	r0, r5
   10ecc:	bl	11118 <getc@plt+0x5bc>
   10ed0:	cmp	r0, #0
   10ed4:	beq	110d4 <getc@plt+0x578>
   10ed8:	add	r2, sl, #12
   10edc:	add	r1, sp, #8
   10ee0:	mov	r0, r5
   10ee4:	bl	11118 <getc@plt+0x5bc>
   10ee8:	cmp	r0, #0
   10eec:	beq	110d4 <getc@plt+0x578>
   10ef0:	add	r2, sl, #16
   10ef4:	add	r1, sp, #8
   10ef8:	mov	r0, r5
   10efc:	bl	11118 <getc@plt+0x5bc>
   10f00:	cmp	r0, #0
   10f04:	beq	110d4 <getc@plt+0x578>
   10f08:	mov	r0, r5
   10f0c:	bl	110f0 <getc@plt+0x594>
   10f10:	cmp	r0, #0
   10f14:	beq	110d4 <getc@plt+0x578>
   10f18:	mov	r0, r5
   10f1c:	bl	110f0 <getc@plt+0x594>
   10f20:	cmp	r0, #0
   10f24:	beq	110d4 <getc@plt+0x578>
   10f28:	mov	r0, r5
   10f2c:	bl	110f0 <getc@plt+0x594>
   10f30:	cmp	r0, #0
   10f34:	beq	110d4 <getc@plt+0x578>
   10f38:	mov	r0, r5
   10f3c:	bl	110f0 <getc@plt+0x594>
   10f40:	cmp	r0, #0
   10f44:	beq	110d4 <getc@plt+0x578>
   10f48:	add	r1, sl, #20
   10f4c:	mov	r0, r5
   10f50:	bl	11174 <getc@plt+0x618>
   10f54:	cmp	r0, #0
   10f58:	beq	110d4 <getc@plt+0x578>
   10f5c:	add	r1, sl, #36	; 0x24
   10f60:	mov	r0, r5
   10f64:	bl	11174 <getc@plt+0x618>
   10f68:	cmp	r0, #0
   10f6c:	beq	110d4 <getc@plt+0x578>
   10f70:	add	r1, sl, #52	; 0x34
   10f74:	mov	r0, r5
   10f78:	bl	11174 <getc@plt+0x618>
   10f7c:	cmp	r0, #0
   10f80:	beq	110d4 <getc@plt+0x578>
   10f84:	mov	r0, r5
   10f88:	bl	110f0 <getc@plt+0x594>
   10f8c:	cmp	r0, #0
   10f90:	beq	110d4 <getc@plt+0x578>
   10f94:	mov	r0, r5
   10f98:	bl	110f0 <getc@plt+0x594>
   10f9c:	cmp	r0, #0
   10fa0:	ldrbne	r0, [r9]
   10fa4:	cmpne	r0, #10
   10fa8:	bne	10f94 <getc@plt+0x438>
   10fac:	ldr	r0, [sp, #12]
   10fb0:	cmp	r0, #1
   10fb4:	blt	11018 <getc@plt+0x4bc>
   10fb8:	mov	r0, r5
   10fbc:	bl	110f0 <getc@plt+0x594>
   10fc0:	cmp	r0, #0
   10fc4:	beq	11018 <getc@plt+0x4bc>
   10fc8:	add	r1, sp, #8
   10fcc:	add	r2, sp, #4
   10fd0:	mov	r0, r5
   10fd4:	bl	11200 <getc@plt+0x6a4>
   10fd8:	cmp	r0, #0
   10fdc:	beq	11018 <getc@plt+0x4bc>
   10fe0:	add	r7, r9, #20
   10fe4:	add	r4, sp, #8
   10fe8:	add	r6, sp, #4
   10fec:	ldr	r3, [sp, #4]
   10ff0:	ldr	r2, [sp, #8]
   10ff4:	mov	r0, sl
   10ff8:	mov	r1, r7
   10ffc:	bl	10d70 <getc@plt+0x214>
   11000:	mov	r0, r5
   11004:	mov	r1, r4
   11008:	mov	r2, r6
   1100c:	bl	11200 <getc@plt+0x6a4>
   11010:	cmp	r0, #0
   11014:	bne	10fec <getc@plt+0x490>
   11018:	ldr	r0, [sp, #16]
   1101c:	cmp	r0, #1
   11020:	blt	110c4 <getc@plt+0x568>
   11024:	mov	r0, r5
   11028:	bl	110f0 <getc@plt+0x594>
   1102c:	cmp	r0, #0
   11030:	beq	110c4 <getc@plt+0x568>
   11034:	add	r1, sp, #8
   11038:	add	r2, sp, #4
   1103c:	mov	r0, r5
   11040:	bl	11200 <getc@plt+0x6a4>
   11044:	cmp	r0, #0
   11048:	beq	110c4 <getc@plt+0x568>
   1104c:	add	r8, sp, #8
   11050:	add	r7, sp, #4
   11054:	add	r6, r9, #31
   11058:	mov	r4, sp
   1105c:	ldrb	r0, [r9, #31]
   11060:	cmp	r0, #92	; 0x5c
   11064:	beq	1107c <getc@plt+0x520>
   11068:	cmp	r0, #125	; 0x7d
   1106c:	bne	11088 <getc@plt+0x52c>
   11070:	ldrb	r0, [r9, #30]
   11074:	str	r0, [sp]
   11078:	b	1109c <getc@plt+0x540>
   1107c:	mov	r0, #10
   11080:	str	r0, [sp]
   11084:	b	1109c <getc@plt+0x540>
   11088:	mov	r0, r6
   1108c:	movw	r1, #11457	; 0x2cc1
   11090:	movt	r1, #1
   11094:	mov	r2, r4
   11098:	bl	10b08 <__isoc99_sscanf@plt>
   1109c:	ldr	r2, [sp, #8]
   110a0:	ldm	sp, {r1, r3}
   110a4:	mov	r0, sl
   110a8:	bl	10cf8 <getc@plt+0x19c>
   110ac:	mov	r0, r5
   110b0:	mov	r1, r8
   110b4:	mov	r2, r7
   110b8:	bl	11200 <getc@plt+0x6a4>
   110bc:	cmp	r0, #0
   110c0:	bne	1105c <getc@plt+0x500>
   110c4:	mov	r0, r5
   110c8:	bl	11e14 <getc@plt+0x12b8>
   110cc:	sub	sp, fp, #28
   110d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110d4:	movw	r1, #11479	; 0x2cd7
   110d8:	movt	r1, #1
   110dc:	cmp	r7, #0
   110e0:	movne	r1, r7
   110e4:	movw	r0, #11461	; 0x2cc5
   110e8:	movt	r0, #1
   110ec:	bl	120e0 <error@@Base+0x40>
   110f0:	push	{fp, lr}
   110f4:	mov	fp, sp
   110f8:	mov	r2, r0
   110fc:	movw	r0, #16561	; 0x40b1
   11100:	movt	r0, #2
   11104:	mov	r1, #99	; 0x63
   11108:	bl	10a30 <fgets@plt>
   1110c:	cmp	r0, #0
   11110:	movwne	r0, #1
   11114:	pop	{fp, pc}
   11118:	push	{r4, r5, r6, sl, fp, lr}
   1111c:	add	fp, sp, #16
   11120:	mov	r4, r2
   11124:	mov	r5, r1
   11128:	bl	110f0 <getc@plt+0x594>
   1112c:	mov	r6, #0
   11130:	cmp	r0, #0
   11134:	beq	1116c <getc@plt+0x610>
   11138:	movw	r0, #16561	; 0x40b1
   1113c:	movt	r0, #2
   11140:	movw	r1, #11754	; 0x2dea
   11144:	movt	r1, #1
   11148:	mov	r2, r5
   1114c:	bl	10b08 <__isoc99_sscanf@plt>
   11150:	cmp	r0, #1
   11154:	bne	1116c <getc@plt+0x610>
   11158:	ldr	r0, [r5]
   1115c:	ldr	r1, [r4]
   11160:	add	r0, r1, r0
   11164:	str	r0, [r4]
   11168:	mov	r6, #1
   1116c:	mov	r0, r6
   11170:	pop	{r4, r5, r6, sl, fp, pc}
   11174:	push	{r4, r5, fp, lr}
   11178:	add	fp, sp, #8
   1117c:	sub	sp, sp, #24
   11180:	mov	r4, r1
   11184:	bl	110f0 <getc@plt+0x594>
   11188:	mov	r5, #0
   1118c:	cmp	r0, #0
   11190:	beq	111f4 <getc@plt+0x698>
   11194:	add	r2, sp, #8
   11198:	add	r0, r2, #12
   1119c:	add	r1, r2, #8
   111a0:	str	r1, [sp]
   111a4:	str	r0, [sp, #4]
   111a8:	add	r3, r2, #4
   111ac:	movw	r0, #16561	; 0x40b1
   111b0:	movt	r0, #2
   111b4:	movw	r1, #11742	; 0x2dde
   111b8:	movt	r1, #1
   111bc:	bl	10b08 <__isoc99_sscanf@plt>
   111c0:	cmp	r0, #4
   111c4:	bne	111f4 <getc@plt+0x698>
   111c8:	ldm	r4, {r0, r1, r2, r3}
   111cc:	ldr	r5, [sp, #8]
   111d0:	add	r0, r0, r5
   111d4:	ldr	r5, [sp, #12]
   111d8:	add	r1, r1, r5
   111dc:	ldr	r5, [sp, #16]
   111e0:	add	r2, r2, r5
   111e4:	ldr	r5, [sp, #20]
   111e8:	add	r3, r3, r5
   111ec:	stm	r4, {r0, r1, r2, r3}
   111f0:	mov	r5, #1
   111f4:	mov	r0, r5
   111f8:	sub	sp, fp, #8
   111fc:	pop	{r4, r5, fp, pc}
   11200:	push	{r4, r5, fp, lr}
   11204:	add	fp, sp, #8
   11208:	mov	r4, r2
   1120c:	mov	r5, r1
   11210:	bl	110f0 <getc@plt+0x594>
   11214:	cmp	r0, #0
   11218:	moveq	r0, #0
   1121c:	popeq	{r4, r5, fp, pc}
   11220:	movw	r0, #16561	; 0x40b1
   11224:	movt	r0, #2
   11228:	movw	r1, #11750	; 0x2de6
   1122c:	movt	r1, #1
   11230:	mov	r2, r5
   11234:	mov	r3, r4
   11238:	bl	10b08 <__isoc99_sscanf@plt>
   1123c:	sub	r0, r0, #2
   11240:	clz	r0, r0
   11244:	lsr	r0, r0, #5
   11248:	pop	{r4, r5, fp, pc}
   1124c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11250:	add	fp, sp, #24
   11254:	mov	r2, r1
   11258:	mov	r8, r0
   1125c:	movw	r1, #12341	; 0x3035
   11260:	movt	r1, #1
   11264:	mov	r0, r2
   11268:	bl	11d9c <getc@plt+0x1240>
   1126c:	mov	r4, r0
   11270:	movw	r1, #11485	; 0x2cdd
   11274:	movt	r1, #1
   11278:	movw	r2, #11414	; 0x2c96
   1127c:	movt	r2, #1
   11280:	movw	r3, #14756	; 0x39a4
   11284:	movt	r3, #1
   11288:	bl	10afc <fprintf@plt>
   1128c:	ldr	r1, [r8]
   11290:	movw	r2, #12071	; 0x2f27
   11294:	movt	r2, #1
   11298:	mov	r0, r4
   1129c:	bl	1150c <getc@plt+0x9b0>
   112a0:	ldr	r1, [r8, #4]
   112a4:	movw	r2, #11490	; 0x2ce2
   112a8:	movt	r2, #1
   112ac:	mov	r0, r4
   112b0:	bl	1150c <getc@plt+0x9b0>
   112b4:	ldr	r2, [r8]
   112b8:	ldr	r0, [r8, #4]
   112bc:	sub	r1, r2, r0
   112c0:	mov	r0, r4
   112c4:	bl	11520 <getc@plt+0x9c4>
   112c8:	movw	r1, #11497	; 0x2ce9
   112cc:	movt	r1, #1
   112d0:	mov	r0, r4
   112d4:	bl	10afc <fprintf@plt>
   112d8:	ldr	r1, [r8, #8]
   112dc:	movw	r2, #11512	; 0x2cf8
   112e0:	movt	r2, #1
   112e4:	mov	r0, r4
   112e8:	bl	1150c <getc@plt+0x9b0>
   112ec:	ldr	r1, [r8, #12]
   112f0:	movw	r2, #11530	; 0x2d0a
   112f4:	movt	r2, #1
   112f8:	mov	r0, r4
   112fc:	bl	1150c <getc@plt+0x9b0>
   11300:	ldr	r1, [r8, #16]
   11304:	movw	r2, #11546	; 0x2d1a
   11308:	movt	r2, #1
   1130c:	mov	r0, r4
   11310:	bl	1150c <getc@plt+0x9b0>
   11314:	ldr	r2, [r8]
   11318:	ldr	r0, [r8, #8]
   1131c:	ldr	r1, [r8, #12]
   11320:	add	r1, r1, r0
   11324:	mov	r0, r4
   11328:	bl	11520 <getc@plt+0x9c4>
   1132c:	movw	r1, #11558	; 0x2d26
   11330:	movt	r1, #1
   11334:	mov	r0, r4
   11338:	bl	10afc <fprintf@plt>
   1133c:	ldr	r2, [r8]
   11340:	ldr	r0, [r8, #48]	; 0x30
   11344:	sub	r1, r2, r0
   11348:	mov	r0, r4
   1134c:	bl	11520 <getc@plt+0x9c4>
   11350:	movw	r1, #11581	; 0x2d3d
   11354:	movt	r1, #1
   11358:	mov	r0, r4
   1135c:	bl	10afc <fprintf@plt>
   11360:	movw	r0, #11612	; 0x2d5c
   11364:	movt	r0, #1
   11368:	mov	r1, #37	; 0x25
   1136c:	mov	r2, #1
   11370:	mov	r3, r4
   11374:	bl	10a84 <fwrite@plt>
   11378:	add	r1, r8, #20
   1137c:	movw	r2, #11650	; 0x2d82
   11380:	movt	r2, #1
   11384:	mov	r0, r4
   11388:	bl	11580 <getc@plt+0xa24>
   1138c:	add	r1, r8, #36	; 0x24
   11390:	movw	r2, #11657	; 0x2d89
   11394:	movt	r2, #1
   11398:	mov	r0, r4
   1139c:	bl	11580 <getc@plt+0xa24>
   113a0:	add	r1, r8, #52	; 0x34
   113a4:	movw	r2, #11666	; 0x2d92
   113a8:	movt	r2, #1
   113ac:	mov	r0, r4
   113b0:	bl	11580 <getc@plt+0xa24>
   113b4:	movw	r1, #11672	; 0x2d98
   113b8:	movt	r1, #1
   113bc:	mov	r0, r4
   113c0:	bl	10afc <fprintf@plt>
   113c4:	add	r6, r8, #68	; 0x44
   113c8:	mvn	r7, #255	; 0xff
   113cc:	ldr	r0, [r6]
   113d0:	cmp	r0, #1
   113d4:	blt	113f4 <getc@plt+0x898>
   113d8:	add	r0, r7, #256	; 0x100
   113dc:	bl	11b88 <getc@plt+0x102c>
   113e0:	mov	r2, r0
   113e4:	mov	r0, r4
   113e8:	mov	r1, r6
   113ec:	mov	r3, #0
   113f0:	bl	115b8 <getc@plt+0xa5c>
   113f4:	add	r6, r6, #8
   113f8:	adds	r7, r7, #1
   113fc:	bne	113cc <getc@plt+0x870>
   11400:	movw	r0, #2116	; 0x844
   11404:	add	r1, r8, r0
   11408:	movw	r2, #11666	; 0x2d92
   1140c:	movt	r2, #1
   11410:	mov	r0, r4
   11414:	mov	r3, #0
   11418:	bl	115b8 <getc@plt+0xa5c>
   1141c:	ldr	r0, [r8, #4]
   11420:	cmp	r0, #1
   11424:	blt	1149c <getc@plt+0x940>
   11428:	movw	r0, #2124	; 0x84c
   1142c:	add	r0, r8, r0
   11430:	bl	11a94 <getc@plt+0xf38>
   11434:	mov	r0, #10176	; 0x27c0
   11438:	mov	r6, r8
   1143c:	ldr	r0, [r6, r0]!
   11440:	mov	r7, r6
   11444:	ldr	r1, [r7, #-4]!
   11448:	movw	r2, #5696	; 0x1640
   1144c:	movt	r2, #1
   11450:	bl	116a4 <getc@plt+0xb48>
   11454:	movw	r0, #11702	; 0x2db6
   11458:	movt	r0, #1
   1145c:	mov	r1, #39	; 0x27
   11460:	mov	r2, #1
   11464:	mov	r3, r4
   11468:	bl	10a84 <fwrite@plt>
   1146c:	ldr	r0, [r6]
   11470:	cmp	r0, #1
   11474:	blt	1149c <getc@plt+0x940>
   11478:	mov	r5, #0
   1147c:	ldr	r0, [r7]
   11480:	ldr	r1, [r0, r5, lsl #2]
   11484:	mov	r0, r4
   11488:	bl	11674 <getc@plt+0xb18>
   1148c:	add	r5, r5, #1
   11490:	ldr	r0, [r6]
   11494:	cmp	r5, r0
   11498:	blt	1147c <getc@plt+0x920>
   1149c:	ldr	r0, [r8]
   114a0:	cmp	r0, #1
   114a4:	blt	11500 <getc@plt+0x9a4>
   114a8:	movw	r1, #11672	; 0x2d98
   114ac:	movt	r1, #1
   114b0:	mov	r0, r4
   114b4:	bl	10afc <fprintf@plt>
   114b8:	movw	r0, #10180	; 0x27c4
   114bc:	add	r6, r8, r0
   114c0:	mov	r7, #0
   114c4:	movw	r8, #65535	; 0xffff
   114c8:	movt	r8, #16
   114cc:	mov	r5, #0
   114d0:	ldr	r0, [r6, r5, lsl #3]
   114d4:	cmp	r0, #1
   114d8:	blt	114f0 <getc@plt+0x994>
   114dc:	add	r1, r6, r7
   114e0:	mov	r0, r4
   114e4:	mov	r2, #0
   114e8:	mov	r3, r5
   114ec:	bl	115b8 <getc@plt+0xa5c>
   114f0:	add	r7, r7, #8
   114f4:	add	r5, r5, #1
   114f8:	cmp	r5, r8
   114fc:	bne	114d0 <getc@plt+0x974>
   11500:	mov	r0, r4
   11504:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11508:	b	11e14 <getc@plt+0x12b8>
   1150c:	mov	r3, r2
   11510:	mov	r2, r1
   11514:	movw	r1, #11788	; 0x2e0c
   11518:	movt	r1, #1
   1151c:	b	10afc <fprintf@plt>
   11520:	mov	ip, r0
   11524:	cmp	r2, #0
   11528:	beq	1155c <getc@plt+0xa00>
   1152c:	vldr	d16, [pc, #68]	; 11578 <getc@plt+0xa1c>
   11530:	vmov	s0, r1
   11534:	vcvt.f64.s32	d17, s0
   11538:	vmov	s0, r2
   1153c:	vcvt.f64.s32	d18, s0
   11540:	vmul.f64	d16, d17, d16
   11544:	vdiv.f64	d16, d16, d18
   11548:	vmov	r2, r3, d16
   1154c:	movw	r1, #11767	; 0x2df7
   11550:	movt	r1, #1
   11554:	mov	r0, ip
   11558:	b	10afc <fprintf@plt>
   1155c:	movw	r0, #11758	; 0x2dee
   11560:	movt	r0, #1
   11564:	mov	r1, #8
   11568:	mov	r2, #1
   1156c:	mov	r3, ip
   11570:	b	10a84 <fwrite@plt>
   11574:	nop	{0}
   11578:	andeq	r0, r0, r0
   1157c:	subsmi	r0, r9, r0
   11580:	push	{fp, lr}
   11584:	mov	fp, sp
   11588:	sub	sp, sp, #16
   1158c:	ldr	ip, [r1]
   11590:	ldmib	r1, {r3, lr}
   11594:	ldr	r1, [r1, #12]
   11598:	str	lr, [sp]
   1159c:	stmib	sp, {r1, r2}
   115a0:	movw	r1, #11773	; 0x2dfd
   115a4:	movt	r1, #1
   115a8:	mov	r2, ip
   115ac:	bl	10afc <fprintf@plt>
   115b0:	mov	sp, fp
   115b4:	pop	{fp, pc}
   115b8:	push	{r4, r5, r6, r7, fp, lr}
   115bc:	add	fp, sp, #16
   115c0:	sub	sp, sp, #16
   115c4:	mov	r5, r3
   115c8:	mov	r6, r2
   115cc:	mov	r7, r1
   115d0:	mov	r4, r0
   115d4:	ldm	r1, {r2, r3}
   115d8:	movw	r1, #11799	; 0x2e17
   115dc:	movt	r1, #1
   115e0:	bl	10afc <fprintf@plt>
   115e4:	ldr	r2, [r7]
   115e8:	ldr	r0, [r7, #4]
   115ec:	sub	r1, r2, r0
   115f0:	mov	r0, r4
   115f4:	bl	11520 <getc@plt+0x9c4>
   115f8:	cmp	r6, #0
   115fc:	beq	1160c <getc@plt+0xab0>
   11600:	movw	r1, #11792	; 0x2e10
   11604:	movt	r1, #1
   11608:	b	1162c <getc@plt+0xad0>
   1160c:	add	r6, sp, #7
   11610:	mov	r0, #0
   11614:	mov	r1, r5
   11618:	mov	r2, r6
   1161c:	mov	r3, #1
   11620:	bl	12750 <error@@Base+0x6b0>
   11624:	movw	r1, #11810	; 0x2e22
   11628:	movt	r1, #1
   1162c:	mov	r0, r4
   11630:	mov	r2, r6
   11634:	bl	10afc <fprintf@plt>
   11638:	sub	sp, fp, #16
   1163c:	pop	{r4, r5, r6, r7, fp, pc}
   11640:	ldr	r2, [r1, #12]
   11644:	ldr	r3, [r0, #12]
   11648:	cmp	r2, r3
   1164c:	bne	1166c <getc@plt+0xb10>
   11650:	ldr	r2, [r1, #16]
   11654:	ldr	r3, [r0, #16]
   11658:	cmp	r2, r3
   1165c:	bne	1166c <getc@plt+0xb10>
   11660:	ldr	r1, [r1, #8]
   11664:	ldr	r0, [r0, #8]
   11668:	b	11d20 <getc@plt+0x11c4>
   1166c:	sub	r0, r2, r3
   11670:	bx	lr
   11674:	push	{fp, lr}
   11678:	mov	fp, sp
   1167c:	sub	sp, sp, #8
   11680:	ldr	ip, [r1, #8]
   11684:	ldr	r2, [r1, #12]
   11688:	ldr	r3, [r1, #16]
   1168c:	str	ip, [sp]
   11690:	movw	r1, #11819	; 0x2e2b
   11694:	movt	r1, #1
   11698:	bl	10afc <fprintf@plt>
   1169c:	mov	sp, fp
   116a0:	pop	{fp, pc}
   116a4:	cmp	r0, #2
   116a8:	bxlt	lr
   116ac:	movw	r3, #16668	; 0x411c
   116b0:	movt	r3, #2
   116b4:	str	r2, [r3]
   116b8:	movw	r2, #16664	; 0x4118
   116bc:	movt	r2, #2
   116c0:	str	r1, [r2]
   116c4:	sub	r1, r0, #1
   116c8:	mov	r0, #0
   116cc:	b	116d0 <getc@plt+0xb74>
   116d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116d4:	add	fp, sp, #28
   116d8:	sub	sp, sp, #4
   116dc:	mov	r8, r1
   116e0:	mov	r9, r0
   116e4:	movw	r7, #16664	; 0x4118
   116e8:	movt	r7, #2
   116ec:	movw	sl, #16668	; 0x411c
   116f0:	movt	sl, #2
   116f4:	b	11720 <getc@plt+0xbc4>
   116f8:	ldr	r0, [r7]
   116fc:	str	r6, [r0, r4, lsl #2]
   11700:	sub	r1, r4, #1
   11704:	cmp	r1, r9
   11708:	movgt	r0, r9
   1170c:	blgt	116d0 <getc@plt+0xb74>
   11710:	add	r9, r5, #1
   11714:	cmp	r9, r8
   11718:	subge	sp, fp, #28
   1171c:	popge	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11720:	ldr	r0, [r7]
   11724:	ldr	r6, [r0, r9, lsl #2]
   11728:	cmp	r9, r8
   1172c:	mov	r4, r8
   11730:	mov	r5, r9
   11734:	bge	116f8 <getc@plt+0xb9c>
   11738:	mov	r5, r9
   1173c:	mov	r4, r8
   11740:	cmp	r5, r4
   11744:	blt	11758 <getc@plt+0xbfc>
   11748:	b	11774 <getc@plt+0xc18>
   1174c:	sub	r4, r4, #1
   11750:	cmp	r5, r4
   11754:	bge	11774 <getc@plt+0xc18>
   11758:	ldr	r0, [r7]
   1175c:	ldr	r1, [r0, r4, lsl #2]
   11760:	ldr	r2, [sl]
   11764:	mov	r0, r6
   11768:	blx	r2
   1176c:	cmn	r0, #1
   11770:	ble	1174c <getc@plt+0xbf0>
   11774:	cmp	r5, r4
   11778:	beq	1178c <getc@plt+0xc30>
   1177c:	ldr	r0, [r7]
   11780:	ldr	r1, [r0, r4, lsl #2]
   11784:	str	r1, [r0, r5, lsl #2]
   11788:	add	r5, r5, #1
   1178c:	cmp	r5, r4
   11790:	bge	117b0 <getc@plt+0xc54>
   11794:	ldr	r0, [r7]
   11798:	ldr	r1, [r0, r5, lsl #2]
   1179c:	ldr	r2, [sl]
   117a0:	mov	r0, r6
   117a4:	blx	r2
   117a8:	cmp	r0, #1
   117ac:	bge	11788 <getc@plt+0xc2c>
   117b0:	cmp	r5, r4
   117b4:	ldrne	r0, [r7]
   117b8:	ldrne	r1, [r0, r5, lsl #2]
   117bc:	strne	r1, [r0, r4, lsl #2]
   117c0:	subne	r4, r4, #1
   117c4:	cmp	r5, r4
   117c8:	blt	11750 <getc@plt+0xbf4>
   117cc:	b	116f8 <getc@plt+0xb9c>
   117d0:	cmp	r1, #0
   117d4:	bxeq	lr
   117d8:	push	{fp, lr}
   117dc:	mov	fp, sp
   117e0:	sub	r2, r1, r2
   117e4:	vldr	d16, [pc, #100]	; 11850 <getc@plt+0xcf4>
   117e8:	vmov	s0, r2
   117ec:	vmov	s2, r1
   117f0:	vcvt.f64.s32	d17, s0
   117f4:	vcvt.f64.s32	d18, s2
   117f8:	vmul.f64	d16, d17, d16
   117fc:	vdiv.f64	d16, d16, d18
   11800:	vcmpe.f64	d16, #0.0
   11804:	vmrs	APSR_nzcv, fpscr
   11808:	blt	1183c <getc@plt+0xce0>
   1180c:	mov	r2, #0
   11810:	sxth	ip, r2
   11814:	ldr	r3, [r0, ip, lsl #2]
   11818:	add	lr, r3, r1
   1181c:	add	r2, r2, #1
   11820:	sxth	r3, r2
   11824:	vmov	s0, r3
   11828:	str	lr, [r0, ip, lsl #2]
   1182c:	vcvt.f64.s32	d17, s0
   11830:	vcmpe.f64	d16, d17
   11834:	vmrs	APSR_nzcv, fpscr
   11838:	bge	11810 <getc@plt+0xcb4>
   1183c:	ldr	r2, [r0, #404]	; 0x194
   11840:	add	r1, r2, r1
   11844:	str	r1, [r0, #404]	; 0x194
   11848:	pop	{fp, lr}
   1184c:	bx	lr
   11850:	andeq	r0, r0, r0
   11854:	subsmi	r0, r9, r0
   11858:	push	{r4, r5, r6, r7, fp, lr}
   1185c:	add	fp, sp, #16
   11860:	vpush	{d8}
   11864:	sub	sp, sp, #8
   11868:	mov	r4, r0
   1186c:	ldr	r0, [r0, #404]	; 0x194
   11870:	cmp	r0, #0
   11874:	subeq	sp, fp, #24
   11878:	vpopeq	{d8}
   1187c:	popeq	{r4, r5, r6, r7, fp, pc}
   11880:	movw	r2, #12341	; 0x3035
   11884:	movt	r2, #1
   11888:	mov	r0, r1
   1188c:	mov	r1, r2
   11890:	bl	11d9c <getc@plt+0x1240>
   11894:	mov	r5, r0
   11898:	mov	r6, #0
   1189c:	vldr	d8, [pc, #84]	; 118f8 <getc@plt+0xd9c>
   118a0:	movw	r7, #11834	; 0x2e3a
   118a4:	movt	r7, #1
   118a8:	add	r0, r4, r6, lsl #2
   118ac:	vldr	s0, [r0]
   118b0:	vldr	s2, [r4, #404]	; 0x194
   118b4:	vcvt.f64.s32	d16, s0
   118b8:	vcvt.f64.s32	d17, s2
   118bc:	vmul.f64	d16, d16, d8
   118c0:	vdiv.f64	d16, d16, d17
   118c4:	vstr	d16, [sp]
   118c8:	mov	r0, r5
   118cc:	mov	r1, r7
   118d0:	mov	r2, r6
   118d4:	bl	10afc <fprintf@plt>
   118d8:	add	r6, r6, #1
   118dc:	cmp	r6, #101	; 0x65
   118e0:	bne	118a8 <getc@plt+0xd4c>
   118e4:	mov	r0, r5
   118e8:	sub	sp, fp, #24
   118ec:	vpop	{d8}
   118f0:	pop	{r4, r5, r6, r7, fp, lr}
   118f4:	b	11e14 <getc@plt+0x12b8>
   118f8:	andeq	r0, r0, r0
   118fc:	subsmi	r0, r9, r0
   11900:	push	{r4, r5, r6, sl, fp, lr}
   11904:	add	fp, sp, #16
   11908:	mov	r4, r0
   1190c:	movw	r6, #503	; 0x1f7
   11910:	mov	r5, r0
   11914:	mov	r0, r5
   11918:	bl	12a4c <error@@Base+0x9ac>
   1191c:	subs	r6, r6, #1
   11920:	add	r5, r5, #16
   11924:	bne	11914 <getc@plt+0xdb8>
   11928:	movw	r0, #8052	; 0x1f74
   1192c:	mov	r1, #0
   11930:	str	r1, [r4, r0]
   11934:	movw	r0, #8048	; 0x1f70
   11938:	str	r1, [r4, r0]
   1193c:	pop	{r4, r5, r6, sl, fp, pc}
   11940:	push	{r4, r5, r6, sl, fp, lr}
   11944:	add	fp, sp, #16
   11948:	mov	r5, r1
   1194c:	mov	r4, r0
   11950:	mov	r0, r1
   11954:	bl	1199c <getc@plt+0xe40>
   11958:	ldr	r6, [r4, r0, lsl #4]
   1195c:	mov	r4, #0
   11960:	cmp	r6, #0
   11964:	bne	1197c <getc@plt+0xe20>
   11968:	mov	r0, r4
   1196c:	pop	{r4, r5, r6, sl, fp, pc}
   11970:	ldr	r6, [r6, #4]
   11974:	cmp	r6, #0
   11978:	beq	11968 <getc@plt+0xe0c>
   1197c:	ldr	r1, [r6, #8]
   11980:	mov	r0, r5
   11984:	bl	10a00 <strcmp@plt>
   11988:	cmp	r0, #0
   1198c:	bne	11970 <getc@plt+0xe14>
   11990:	mov	r4, r6
   11994:	mov	r0, r4
   11998:	pop	{r4, r5, r6, sl, fp, pc}
   1199c:	ldrb	r1, [r0]
   119a0:	cmp	r1, #0
   119a4:	moveq	r0, #0
   119a8:	sxtheq	r0, r0
   119ac:	bxeq	lr
   119b0:	add	r2, r0, #1
   119b4:	mov	r0, #0
   119b8:	uxtab	r0, r0, r1
   119bc:	ldrb	r1, [r2], #1
   119c0:	cmp	r1, #0
   119c4:	bne	119b8 <getc@plt+0xe5c>
   119c8:	movw	r1, #20065	; 0x4e61
   119cc:	movt	r1, #33354	; 0x824a
   119d0:	umull	r1, r2, r0, r1
   119d4:	lsr	r1, r2, #8
   119d8:	movw	r2, #503	; 0x1f7
   119dc:	mls	r0, r1, r2, r0
   119e0:	sxth	r0, r0
   119e4:	bx	lr
   119e8:	push	{r4, r5, fp, lr}
   119ec:	add	fp, sp, #8
   119f0:	mov	r4, r1
   119f4:	mov	r5, r0
   119f8:	ldr	r0, [r1, #8]
   119fc:	bl	1199c <getc@plt+0xe40>
   11a00:	add	r0, r5, r0, lsl #4
   11a04:	mov	r1, r4
   11a08:	bl	12a58 <error@@Base+0x9b8>
   11a0c:	mov	r0, r5
   11a10:	bl	11a28 <getc@plt+0xecc>
   11a14:	movw	r0, #8052	; 0x1f74
   11a18:	ldr	r0, [r5, r0]!
   11a1c:	add	r0, r0, #1
   11a20:	str	r0, [r5]
   11a24:	pop	{r4, r5, fp, pc}
   11a28:	push	{r4, sl, fp, lr}
   11a2c:	add	fp, sp, #8
   11a30:	mov	r4, r0
   11a34:	movw	r0, #8048	; 0x1f70
   11a38:	ldr	r0, [r4, r0]!
   11a3c:	cmp	r0, #0
   11a40:	popeq	{r4, sl, fp, pc}
   11a44:	bl	10a18 <free@plt>
   11a48:	mov	r0, #0
   11a4c:	str	r0, [r4]
   11a50:	pop	{r4, sl, fp, pc}
   11a54:	push	{r4, r5, fp, lr}
   11a58:	add	fp, sp, #8
   11a5c:	mov	r4, r1
   11a60:	mov	r5, r0
   11a64:	ldr	r0, [r1, #8]
   11a68:	bl	1199c <getc@plt+0xe40>
   11a6c:	add	r0, r5, r0, lsl #4
   11a70:	mov	r1, r4
   11a74:	bl	12ad0 <error@@Base+0xa30>
   11a78:	mov	r0, r5
   11a7c:	bl	11a28 <getc@plt+0xecc>
   11a80:	movw	r0, #8052	; 0x1f74
   11a84:	ldr	r0, [r5, r0]!
   11a88:	sub	r0, r0, #1
   11a8c:	str	r0, [r5]
   11a90:	pop	{r4, r5, fp, pc}
   11a94:	push	{r4, r5, fp, lr}
   11a98:	add	fp, sp, #8
   11a9c:	mov	r4, r0
   11aa0:	movw	r0, #8048	; 0x1f70
   11aa4:	mov	r5, r4
   11aa8:	ldr	r0, [r5, r0]!
   11aac:	cmp	r0, #0
   11ab0:	bne	11b0c <getc@plt+0xfb0>
   11ab4:	movw	r0, #8052	; 0x1f74
   11ab8:	ldr	r0, [r4, r0]
   11abc:	cmp	r0, #0
   11ac0:	popeq	{r4, r5, fp, pc}
   11ac4:	mov	r1, #4
   11ac8:	bl	11d00 <getc@plt+0x11a4>
   11acc:	str	r0, [r5]
   11ad0:	mov	r0, #0
   11ad4:	movw	ip, #503	; 0x1f7
   11ad8:	mov	r2, #0
   11adc:	ldr	r3, [r4, r2, lsl #4]
   11ae0:	cmp	r3, #0
   11ae4:	beq	11b00 <getc@plt+0xfa4>
   11ae8:	ldr	r1, [r5]
   11aec:	str	r3, [r1, r0, lsl #2]
   11af0:	add	r0, r0, #1
   11af4:	ldr	r3, [r3, #4]
   11af8:	cmp	r3, #0
   11afc:	bne	11ae8 <getc@plt+0xf8c>
   11b00:	add	r2, r2, #1
   11b04:	cmp	r2, ip
   11b08:	bne	11adc <getc@plt+0xf80>
   11b0c:	pop	{r4, r5, fp, pc}
   11b10:	push	{r4, r5, r6, r7, fp, lr}
   11b14:	add	fp, sp, #16
   11b18:	mov	r5, r1
   11b1c:	mov	r4, r0
   11b20:	mov	r6, #0
   11b24:	movw	r7, #8048	; 0x1f70
   11b28:	add	r0, r4, r6
   11b2c:	mov	r1, r5
   11b30:	bl	12ba8 <error@@Base+0xb08>
   11b34:	add	r6, r6, #16
   11b38:	cmp	r6, r7
   11b3c:	bne	11b28 <getc@plt+0xfcc>
   11b40:	mov	r0, r4
   11b44:	bl	11a28 <getc@plt+0xecc>
   11b48:	movw	r0, #8052	; 0x1f74
   11b4c:	mov	r1, #0
   11b50:	str	r1, [r4, r0]
   11b54:	pop	{r4, r5, r6, r7, fp, pc}
   11b58:	push	{r4, sl, fp, lr}
   11b5c:	add	fp, sp, #8
   11b60:	mov	r4, r0
   11b64:	movw	r0, #16672	; 0x4120
   11b68:	movt	r0, #2
   11b6c:	ldrh	r0, [r0]
   11b70:	cmp	r0, #0
   11b74:	bleq	11bd0 <getc@plt+0x1074>
   11b78:	movw	r0, #16674	; 0x4122
   11b7c:	movt	r0, #2
   11b80:	ldrb	r0, [r0, r4]
   11b84:	pop	{r4, sl, fp, pc}
   11b88:	push	{r4, r5, fp, lr}
   11b8c:	add	fp, sp, #8
   11b90:	mov	r4, r0
   11b94:	movw	r5, #16672	; 0x4120
   11b98:	movt	r5, #2
   11b9c:	ldrh	r0, [r5]
   11ba0:	cmp	r0, #0
   11ba4:	bleq	11bd0 <getc@plt+0x1074>
   11ba8:	ldrsh	r1, [r5]
   11bac:	uxtb	r0, r4
   11bb0:	cmp	r0, r1
   11bb4:	movwlt	r1, #16676	; 0x4124
   11bb8:	movtlt	r1, #19
   11bbc:	ldrlt	r0, [r1, r0, lsl #2]
   11bc0:	poplt	{r4, r5, fp, pc}
   11bc4:	movw	r0, #11845	; 0x2e45
   11bc8:	movt	r0, #1
   11bcc:	bl	120a0 <error@@Base>
   11bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bd4:	add	fp, sp, #28
   11bd8:	sub	sp, sp, #4
   11bdc:	mov	r5, #0
   11be0:	movw	r3, #16672	; 0x4120
   11be4:	movt	r3, #2
   11be8:	movw	r4, #13356	; 0x342c
   11bec:	movt	r4, #1
   11bf0:	movw	sl, #16676	; 0x4124
   11bf4:	movt	sl, #19
   11bf8:	movw	r7, #16674	; 0x4122
   11bfc:	movt	r7, #2
   11c00:	b	11c14 <getc@plt+0x10b8>
   11c04:	add	r5, r5, #1
   11c08:	cmp	r5, #91	; 0x5b
   11c0c:	subcs	sp, fp, #28
   11c10:	popcs	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c14:	ldrsh	r8, [r3]
   11c18:	cmp	r8, #1
   11c1c:	blt	11c80 <getc@plt+0x1124>
   11c20:	add	r0, r5, r5, lsl #1
   11c24:	add	r0, r4, r0, lsl #2
   11c28:	ldr	r4, [r0, #8]
   11c2c:	ldrsh	r9, [r3]
   11c30:	ldr	r1, [sl]
   11c34:	mov	r0, r4
   11c38:	bl	10a00 <strcmp@plt>
   11c3c:	cmp	r0, #0
   11c40:	mov	r6, #0
   11c44:	mov	r0, r8
   11c48:	beq	11c88 <getc@plt+0x112c>
   11c4c:	uxth	r8, r9
   11c50:	mov	r1, #1
   11c54:	mov	r6, r1
   11c58:	cmp	r1, r9
   11c5c:	bge	11c78 <getc@plt+0x111c>
   11c60:	ldr	r1, [sl, r6, lsl #2]
   11c64:	mov	r0, r4
   11c68:	bl	10a00 <strcmp@plt>
   11c6c:	add	r1, r6, #1
   11c70:	cmp	r0, #0
   11c74:	bne	11c54 <getc@plt+0x10f8>
   11c78:	mov	r0, r9
   11c7c:	b	11c88 <getc@plt+0x112c>
   11c80:	mov	r6, #0
   11c84:	mov	r0, r8
   11c88:	cmp	r6, r0
   11c8c:	movw	r3, #16672	; 0x4120
   11c90:	movt	r3, #2
   11c94:	movw	r4, #13356	; 0x342c
   11c98:	movt	r4, #1
   11c9c:	bne	11cc4 <getc@plt+0x1168>
   11ca0:	uxth	r0, r8
   11ca4:	cmp	r0, #256	; 0x100
   11ca8:	beq	11cf4 <getc@plt+0x1198>
   11cac:	add	r0, r8, #1
   11cb0:	strh	r0, [r3]
   11cb4:	add	r0, r5, r5, lsl #1
   11cb8:	add	r0, r4, r0, lsl #2
   11cbc:	ldr	r0, [r0, #8]
   11cc0:	str	r0, [sl, r6, lsl #2]
   11cc4:	add	r0, r5, r5, lsl #1
   11cc8:	mov	r1, r4
   11ccc:	ldr	r0, [r1, r0, lsl #2]!
   11cd0:	ldr	r2, [r1, #4]!
   11cd4:	cmp	r0, r2
   11cd8:	bhi	11c04 <getc@plt+0x10a8>
   11cdc:	ldr	r1, [r1]
   11ce0:	strb	r6, [r7, r0]
   11ce4:	add	r0, r0, #1
   11ce8:	cmp	r0, r1
   11cec:	bls	11ce0 <getc@plt+0x1184>
   11cf0:	b	11c04 <getc@plt+0x10a8>
   11cf4:	movw	r0, #11869	; 0x2e5d
   11cf8:	movt	r0, #1
   11cfc:	bl	120a0 <error@@Base>
   11d00:	push	{fp, lr}
   11d04:	mov	fp, sp
   11d08:	bl	109f4 <calloc@plt>
   11d0c:	cmp	r0, #0
   11d10:	popne	{fp, pc}
   11d14:	movw	r0, #14448	; 0x3870
   11d18:	movt	r0, #1
   11d1c:	bl	120a0 <error@@Base>
   11d20:	push	{r4, r5, r6, sl, fp, lr}
   11d24:	add	fp, sp, #16
   11d28:	mov	r2, r0
   11d2c:	ldrb	ip, [r1]
   11d30:	ldrb	r3, [r0]
   11d34:	mov	r0, #0
   11d38:	cmp	r3, #0
   11d3c:	beq	11d74 <getc@plt+0x1218>
   11d40:	add	lr, r1, #1
   11d44:	add	r6, r2, #1
   11d48:	mov	r2, #0
   11d4c:	uxtb	r4, ip
   11d50:	uxtb	r5, r3
   11d54:	cmp	r5, r4
   11d58:	bne	11d84 <getc@plt+0x1228>
   11d5c:	ldrb	ip, [lr, r2]
   11d60:	ldrb	r3, [r6, r2]
   11d64:	add	r2, r2, #1
   11d68:	cmp	r3, #0
   11d6c:	bne	11d4c <getc@plt+0x11f0>
   11d70:	b	11d78 <getc@plt+0x121c>
   11d74:	mov	r2, #0
   11d78:	cmp	ip, #0
   11d7c:	popeq	{r4, r5, r6, sl, fp, pc}
   11d80:	mov	r3, #0
   11d84:	ldrb	r1, [r1, r2]
   11d88:	uxtb	r2, r3
   11d8c:	mov	r0, #1
   11d90:	cmp	r2, r1
   11d94:	mvncc	r0, #0
   11d98:	pop	{r4, r5, r6, sl, fp, pc}
   11d9c:	push	{r4, r5, fp, lr}
   11da0:	add	fp, sp, #8
   11da4:	mov	r5, r1
   11da8:	cmp	r0, #0
   11dac:	beq	11de0 <getc@plt+0x1284>
   11db0:	mov	r4, r0
   11db4:	mov	r1, r5
   11db8:	bl	10a0c <fopen@plt>
   11dbc:	cmp	r0, #0
   11dc0:	popne	{r4, r5, fp, pc}
   11dc4:	ldrb	r0, [r5]
   11dc8:	cmp	r0, #119	; 0x77
   11dcc:	bne	11e04 <getc@plt+0x12a8>
   11dd0:	movw	r0, #14474	; 0x388a
   11dd4:	movt	r0, #1
   11dd8:	mov	r1, r4
   11ddc:	bl	120e0 <error@@Base+0x40>
   11de0:	ldrb	r0, [r5]
   11de4:	movw	r1, #16552	; 0x40a8
   11de8:	movt	r1, #2
   11dec:	movw	r2, #16556	; 0x40ac
   11df0:	movt	r2, #2
   11df4:	cmp	r0, #114	; 0x72
   11df8:	moveq	r2, r1
   11dfc:	ldr	r0, [r2]
   11e00:	pop	{r4, r5, fp, pc}
   11e04:	movw	r0, #14496	; 0x38a0
   11e08:	movt	r0, #1
   11e0c:	mov	r1, r4
   11e10:	bl	120e0 <error@@Base+0x40>
   11e14:	movw	r1, #16552	; 0x40a8
   11e18:	movt	r1, #2
   11e1c:	ldr	r1, [r1]
   11e20:	cmp	r1, r0
   11e24:	movwne	r1, #16556	; 0x40ac
   11e28:	movtne	r1, #2
   11e2c:	ldrne	r1, [r1]
   11e30:	cmpne	r1, r0
   11e34:	bxeq	lr
   11e38:	b	10b14 <fclose@plt>
   11e3c:	push	{fp, lr}
   11e40:	mov	fp, sp
   11e44:	sub	sp, sp, #88	; 0x58
   11e48:	mov	r1, sp
   11e4c:	bl	12c4c <error@@Base+0xbac>
   11e50:	clz	r0, r0
   11e54:	lsr	r0, r0, #5
   11e58:	mov	sp, fp
   11e5c:	pop	{fp, pc}
   11e60:	push	{r4, sl, fp, lr}
   11e64:	add	fp, sp, #8
   11e68:	movw	r0, #17700	; 0x4524
   11e6c:	movt	r0, #19
   11e70:	ldrh	r1, [r0]
   11e74:	add	r1, r1, #1
   11e78:	strh	r1, [r0]
   11e7c:	sxth	r0, r1
   11e80:	bl	11e94 <getc@plt+0x1338>
   11e84:	mov	r4, r0
   11e88:	bl	10a60 <unlink@plt>
   11e8c:	mov	r0, r4
   11e90:	pop	{r4, sl, fp, pc}
   11e94:	push	{r4, r5, fp, lr}
   11e98:	add	fp, sp, #8
   11e9c:	sub	sp, sp, #104	; 0x68
   11ea0:	mov	r4, r0
   11ea4:	movw	r0, #28288	; 0x6e80
   11ea8:	movt	r0, #155	; 0x9b
   11eac:	ldr	r5, [r0]
   11eb0:	bl	10acc <getpid@plt>
   11eb4:	mov	r3, r0
   11eb8:	sxth	r0, r4
   11ebc:	str	r0, [sp]
   11ec0:	add	r4, sp, #4
   11ec4:	movw	r1, #14537	; 0x38c9
   11ec8:	movt	r1, #1
   11ecc:	mov	r0, r4
   11ed0:	mov	r2, r5
   11ed4:	bl	10b20 <sprintf@plt>
   11ed8:	mov	r0, r4
   11edc:	bl	10a48 <strdup@plt>
   11ee0:	sub	sp, fp, #8
   11ee4:	pop	{r4, r5, fp, pc}
   11ee8:	push	{r4, sl, fp, lr}
   11eec:	add	fp, sp, #8
   11ef0:	mov	r4, r0
   11ef4:	bl	10af0 <strlen@plt>
   11ef8:	sub	r0, r0, #1
   11efc:	sxth	r0, r0
   11f00:	cmp	r0, #0
   11f04:	blt	11f14 <getc@plt+0x13b8>
   11f08:	ldrb	r1, [r4, r0]
   11f0c:	cmp	r1, #47	; 0x2f
   11f10:	bne	11ef8 <getc@plt+0x139c>
   11f14:	add	r0, r4, r0
   11f18:	add	r0, r0, #1
   11f1c:	pop	{r4, sl, fp, pc}
   11f20:	push	{r4, r5, r6, r7, fp, lr}
   11f24:	add	fp, sp, #16
   11f28:	mov	r4, r3
   11f2c:	mov	r5, r2
   11f30:	mov	r6, r1
   11f34:	mov	r7, r0
   11f38:	ldr	r0, [r1]
   11f3c:	bl	11ee8 <getc@plt+0x138c>
   11f40:	movw	r1, #28288	; 0x6e80
   11f44:	movt	r1, #155	; 0x9b
   11f48:	str	r0, [r1]
   11f4c:	bl	12168 <error@@Base+0xc8>
   11f50:	mov	r0, r7
   11f54:	mov	r1, r6
   11f58:	mov	r2, r5
   11f5c:	mov	r3, r4
   11f60:	pop	{r4, r5, r6, r7, fp, lr}
   11f64:	b	11f68 <getc@plt+0x140c>
   11f68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f6c:	add	fp, sp, #28
   11f70:	sub	sp, sp, #12
   11f74:	stmib	sp, {r2, r3}
   11f78:	mov	r7, r1
   11f7c:	mov	r5, r0
   11f80:	ldr	r0, [r0]
   11f84:	cmp	r0, #1
   11f88:	bne	11fa0 <getc@plt+0x1444>
   11f8c:	movw	r0, #16532	; 0x4094
   11f90:	movt	r0, #2
   11f94:	ldrb	r0, [r0]
   11f98:	cmp	r0, #0
   11f9c:	bne	12058 <getc@plt+0x14fc>
   11fa0:	ldr	r9, [r5]
   11fa4:	mov	r6, #0
   11fa8:	cmp	r9, #2
   11fac:	blt	12048 <getc@plt+0x14ec>
   11fb0:	mov	sl, #1
   11fb4:	mov	r6, #0
   11fb8:	mov	r8, #1
   11fbc:	ldr	r4, [r7, sl, lsl #2]
   11fc0:	ldrb	r0, [r4]
   11fc4:	cmp	r0, #45	; 0x2d
   11fc8:	bne	12024 <getc@plt+0x14c8>
   11fcc:	ldrb	r0, [r4, #1]
   11fd0:	cmp	r0, #0
   11fd4:	beq	12024 <getc@plt+0x14c8>
   11fd8:	mov	r0, r4
   11fdc:	bl	10af0 <strlen@plt>
   11fe0:	mov	r2, r0
   11fe4:	movw	r0, #14566	; 0x38e6
   11fe8:	movt	r0, #1
   11fec:	mov	r1, r4
   11ff0:	bl	10b44 <strncmp@plt>
   11ff4:	cmp	r0, #0
   11ff8:	beq	12058 <getc@plt+0x14fc>
   11ffc:	add	r0, sl, #1
   12000:	mov	r1, #0
   12004:	cmp	r0, r9
   12008:	ldrlt	r1, [r7, r0, lsl #2]
   1200c:	mov	r0, r4
   12010:	ldr	r2, [sp, #8]
   12014:	bl	12214 <error@@Base+0x174>
   12018:	cmp	r0, #0
   1201c:	addne	r8, r8, #1
   12020:	b	12034 <getc@plt+0x14d8>
   12024:	ldr	r0, [r7, sl, lsl #2]
   12028:	sxth	r1, r6
   1202c:	str	r0, [r7, r1, lsl #2]
   12030:	add	r6, r6, #1
   12034:	ldr	r9, [r5]
   12038:	add	r8, r8, #1
   1203c:	sxth	sl, r8
   12040:	cmp	r9, sl
   12044:	bgt	11fbc <getc@plt+0x1460>
   12048:	sxth	r0, r6
   1204c:	str	r0, [r5]
   12050:	sub	sp, fp, #28
   12054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12058:	ldr	r0, [sp, #4]
   1205c:	bl	121c4 <error@@Base+0x124>
   12060:	push	{fp, lr}
   12064:	mov	fp, sp
   12068:	mov	r0, #0
   1206c:	bl	12070 <getc@plt+0x1514>
   12070:	push	{fp, lr}
   12074:	mov	fp, sp
   12078:	mov	r4, r0
   1207c:	movw	r0, #28292	; 0x6e84
   12080:	movt	r0, #155	; 0x9b
   12084:	ldr	r0, [r0]
   12088:	cmp	r0, #0
   1208c:	beq	12094 <getc@plt+0x1538>
   12090:	blx	r0
   12094:	bl	12304 <error@@Base+0x264>
   12098:	mov	r0, r4
   1209c:	bl	10ad8 <exit@plt>

000120a0 <error@@Base>:
   120a0:	push	{fp, lr}
   120a4:	mov	fp, sp
   120a8:	mov	r3, r0
   120ac:	movw	r0, #28288	; 0x6e80
   120b0:	movt	r0, #155	; 0x9b
   120b4:	ldr	r2, [r0]
   120b8:	movw	r0, #16544	; 0x40a0
   120bc:	movt	r0, #2
   120c0:	ldr	r0, [r0]
   120c4:	movw	r1, #14516	; 0x38b4
   120c8:	movt	r1, #1
   120cc:	bl	10afc <fprintf@plt>
   120d0:	movw	r0, #16536	; 0x4098
   120d4:	movt	r0, #2
   120d8:	ldr	r0, [r0]
   120dc:	bl	12070 <getc@plt+0x1514>
   120e0:	push	{fp, lr}
   120e4:	mov	fp, sp
   120e8:	sub	sp, sp, #8
   120ec:	mov	r3, r0
   120f0:	movw	r0, #28288	; 0x6e80
   120f4:	movt	r0, #155	; 0x9b
   120f8:	ldr	r2, [r0]
   120fc:	movw	r0, #16544	; 0x40a0
   12100:	movt	r0, #2
   12104:	ldr	r0, [r0]
   12108:	str	r1, [sp]
   1210c:	movw	r1, #14524	; 0x38bc
   12110:	movt	r1, #1
   12114:	bl	10afc <fprintf@plt>
   12118:	movw	r0, #16536	; 0x4098
   1211c:	movt	r0, #2
   12120:	ldr	r0, [r0]
   12124:	bl	12070 <getc@plt+0x1514>
   12128:	push	{fp, lr}
   1212c:	mov	fp, sp
   12130:	sub	sp, sp, #8
   12134:	mov	r3, r0
   12138:	movw	r0, #28288	; 0x6e80
   1213c:	movt	r0, #155	; 0x9b
   12140:	ldr	r2, [r0]
   12144:	movw	r0, #16544	; 0x40a0
   12148:	movt	r0, #2
   1214c:	ldr	r0, [r0]
   12150:	str	r1, [sp]
   12154:	movw	r1, #14524	; 0x38bc
   12158:	movt	r1, #1
   1215c:	bl	10afc <fprintf@plt>
   12160:	mov	sp, fp
   12164:	pop	{fp, pc}
   12168:	push	{r4, sl, fp, lr}
   1216c:	add	fp, sp, #8
   12170:	movw	r4, #8596	; 0x2194
   12174:	movt	r4, #1
   12178:	mov	r0, #2
   1217c:	mov	r1, r4
   12180:	bl	10ab4 <__sysv_signal@plt>
   12184:	mov	r0, #15
   12188:	mov	r1, r4
   1218c:	pop	{r4, sl, fp, lr}
   12190:	b	10ab4 <__sysv_signal@plt>
   12194:	movw	r0, #17702	; 0x4526
   12198:	movt	r0, #19
   1219c:	ldrb	r1, [r0]
   121a0:	cmp	r1, #1
   121a4:	bxeq	lr
   121a8:	push	{fp, lr}
   121ac:	mov	fp, sp
   121b0:	mov	r1, #1
   121b4:	strb	r1, [r0]
   121b8:	movw	r0, #14551	; 0x38d7
   121bc:	movt	r0, #1
   121c0:	bl	120a0 <error@@Base>
   121c4:	push	{fp, lr}
   121c8:	mov	fp, sp
   121cc:	mov	r3, r0
   121d0:	movw	r0, #28284	; 0x6e7c
   121d4:	movt	r0, #155	; 0x9b
   121d8:	ldr	r0, [r0]
   121dc:	cmp	r0, #0
   121e0:	bne	1220c <error@@Base+0x16c>
   121e4:	movw	r0, #28288	; 0x6e80
   121e8:	movt	r0, #155	; 0x9b
   121ec:	ldr	r2, [r0]
   121f0:	movw	r0, #16544	; 0x40a0
   121f4:	movt	r0, #2
   121f8:	ldr	r0, [r0]
   121fc:	movw	r1, #14572	; 0x38ec
   12200:	movt	r1, #1
   12204:	bl	10afc <fprintf@plt>
   12208:	bl	12060 <getc@plt+0x1504>
   1220c:	blx	r0
   12210:	bl	12060 <getc@plt+0x1504>
   12214:	push	{r4, sl, fp, lr}
   12218:	add	fp, sp, #8
   1221c:	mov	ip, r0
   12220:	cmp	r2, #0
   12224:	ldrbne	r0, [r2]
   12228:	cmpne	r0, #0
   1222c:	bne	12240 <error@@Base+0x1a0>
   12230:	movw	r0, #14587	; 0x38fb
   12234:	movt	r0, #1
   12238:	mov	r1, ip
   1223c:	bl	120e0 <error@@Base+0x40>
   12240:	ldrb	lr, [ip, #1]
   12244:	mov	r3, #0
   12248:	cmp	lr, r0
   1224c:	beq	12274 <error@@Base+0x1d4>
   12250:	mov	r0, #1
   12254:	sxth	r3, r0
   12258:	add	r4, r3, r3, lsl #1
   1225c:	ldrb	r4, [r2, r4, lsl #2]
   12260:	cmp	r4, #0
   12264:	beq	12230 <error@@Base+0x190>
   12268:	add	r0, r0, #1
   1226c:	cmp	lr, r4
   12270:	bne	12254 <error@@Base+0x1b4>
   12274:	add	r0, r3, r3, lsl #1
   12278:	add	r3, r2, r0, lsl #2
   1227c:	ldr	r0, [r3, #4]
   12280:	cmp	r0, #0
   12284:	beq	122c4 <error@@Base+0x224>
   12288:	mov	r2, ip
   1228c:	ldrb	lr, [r2, #2]!
   12290:	cmp	r1, #0
   12294:	cmpeq	lr, #0
   12298:	beq	122c4 <error@@Base+0x224>
   1229c:	ldr	r3, [r0]
   122a0:	cmp	r3, #0
   122a4:	bne	122f4 <error@@Base+0x254>
   122a8:	cmp	lr, #0
   122ac:	movne	r1, r2
   122b0:	str	r1, [r0]
   122b4:	ldrb	r0, [r2]
   122b8:	clz	r0, r0
   122bc:	lsr	r0, r0, #5
   122c0:	pop	{r4, sl, fp, pc}
   122c4:	ldr	r0, [r3, #8]
   122c8:	cmp	r0, #0
   122cc:	beq	12230 <error@@Base+0x190>
   122d0:	ldrb	r1, [ip, #2]
   122d4:	cmp	r1, #0
   122d8:	bne	12230 <error@@Base+0x190>
   122dc:	ldrb	r1, [r0]
   122e0:	cmp	r1, #0
   122e4:	moveq	r1, #1
   122e8:	strbeq	r1, [r0]
   122ec:	moveq	r0, #0
   122f0:	popeq	{r4, sl, fp, pc}
   122f4:	movw	r0, #14602	; 0x390a
   122f8:	movt	r0, #1
   122fc:	mov	r1, ip
   12300:	bl	120e0 <error@@Base+0x40>
   12304:	push	{r4, r5, r6, sl, fp, lr}
   12308:	add	fp, sp, #16
   1230c:	movw	r5, #17700	; 0x4524
   12310:	movt	r5, #19
   12314:	ldrsh	r0, [r5]
   12318:	cmp	r0, #1
   1231c:	poplt	{r4, r5, r6, sl, fp, pc}
   12320:	mov	r6, #1
   12324:	sxth	r0, r6
   12328:	bl	11e94 <getc@plt+0x1338>
   1232c:	mov	r4, r0
   12330:	bl	10a60 <unlink@plt>
   12334:	mov	r0, r4
   12338:	bl	10a18 <free@plt>
   1233c:	add	r0, r6, #1
   12340:	sxth	r6, r0
   12344:	ldrsh	r0, [r5]
   12348:	cmp	r6, r0
   1234c:	ble	12324 <error@@Base+0x284>
   12350:	pop	{r4, r5, r6, sl, fp, pc}
   12354:	push	{r4, r5, r6, sl, fp, lr}
   12358:	add	fp, sp, #16
   1235c:	mov	r4, r2
   12360:	mov	r5, r1
   12364:	mov	r6, r0
   12368:	mov	r0, #1
   1236c:	mov	r1, #16
   12370:	bl	11d00 <getc@plt+0x11a4>
   12374:	mov	r1, r0
   12378:	strb	r5, [r0, #8]
   1237c:	str	r4, [r0, #12]
   12380:	mov	r0, r6
   12384:	pop	{r4, r5, r6, sl, fp, lr}
   12388:	b	12aa8 <error@@Base+0xa08>
   1238c:	push	{r4, r5, r6, r7, fp, lr}
   12390:	add	fp, sp, #16
   12394:	mov	r5, r2
   12398:	mov	r2, r1
   1239c:	mov	r4, r0
   123a0:	cmp	r1, #0
   123a4:	bne	123b4 <error@@Base+0x314>
   123a8:	ldrb	r0, [r5]
   123ac:	cmp	r0, #0
   123b0:	bne	1244c <error@@Base+0x3ac>
   123b4:	ldr	r7, [r4, #4]
   123b8:	movw	r1, #14821	; 0x39e5
   123bc:	movt	r1, #1
   123c0:	mov	r0, r2
   123c4:	bl	11d9c <getc@plt+0x1240>
   123c8:	mov	r6, r0
   123cc:	ldrb	r0, [r5]
   123d0:	cmp	r0, #0
   123d4:	beq	123e4 <error@@Base+0x344>
   123d8:	mov	r0, r6
   123dc:	bl	12460 <error@@Base+0x3c0>
   123e0:	strb	r0, [r5, #11]
   123e4:	ldrb	r2, [r5, #1]
   123e8:	ldr	r3, [r5, #4]
   123ec:	cmp	r3, #0
   123f0:	movweq	r3, #94	; 0x5e
   123f4:	mov	r0, r6
   123f8:	mov	r1, r4
   123fc:	bl	1250c <error@@Base+0x46c>
   12400:	mov	r0, r6
   12404:	bl	11e14 <getc@plt+0x12b8>
   12408:	ldrb	r0, [r5, #9]
   1240c:	cmp	r0, #0
   12410:	beq	1242c <error@@Base+0x38c>
   12414:	cmp	r7, #0
   12418:	mov	r0, r4
   1241c:	addne	r0, r7, #4
   12420:	ldr	r1, [r0]
   12424:	mov	r0, r4
   12428:	bl	12614 <error@@Base+0x574>
   1242c:	ldrb	r0, [r5, #10]
   12430:	cmp	r0, #0
   12434:	popeq	{r4, r5, r6, r7, fp, pc}
   12438:	cmp	r7, #0
   1243c:	addne	r4, r7, #4
   12440:	ldr	r0, [r4]
   12444:	pop	{r4, r5, r6, r7, fp, lr}
   12448:	b	126fc <error@@Base+0x65c>
   1244c:	movw	r0, #14619	; 0x391b
   12450:	movt	r0, #1
   12454:	movw	r1, #14635	; 0x392b
   12458:	movt	r1, #1
   1245c:	bl	120e0 <error@@Base+0x40>
   12460:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12464:	add	fp, sp, #24
   12468:	sub	sp, sp, #104	; 0x68
   1246c:	mov	r4, r0
   12470:	add	r0, sp, #4
   12474:	mov	r1, #99	; 0x63
   12478:	mov	r2, r4
   1247c:	bl	10a30 <fgets@plt>
   12480:	cmp	r0, #0
   12484:	beq	124a4 <error@@Base+0x404>
   12488:	add	r0, sp, #4
   1248c:	movw	r1, #14687	; 0x395f
   12490:	movt	r1, #1
   12494:	mov	r2, #51	; 0x33
   12498:	bl	10b44 <strncmp@plt>
   1249c:	cmp	r0, #0
   124a0:	beq	124bc <error@@Base+0x41c>
   124a4:	mov	r0, r4
   124a8:	bl	10a54 <rewind@plt>
   124ac:	mov	r7, #0
   124b0:	mov	r0, r7
   124b4:	sub	sp, fp, #24
   124b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   124bc:	mov	r6, #0
   124c0:	add	r5, sp, #4
   124c4:	movw	r8, #14743	; 0x3997
   124c8:	movt	r8, #1
   124cc:	mov	r7, #1
   124d0:	mov	r0, r5
   124d4:	mov	r1, #99	; 0x63
   124d8:	mov	r2, r4
   124dc:	bl	10a30 <fgets@plt>
   124e0:	cmp	r0, #0
   124e4:	beq	124b0 <error@@Base+0x410>
   124e8:	mov	r0, r5
   124ec:	mov	r1, r8
   124f0:	bl	10a00 <strcmp@plt>
   124f4:	cmp	r0, #0
   124f8:	addeq	r6, r6, #1
   124fc:	sxth	r6, r6
   12500:	cmp	r6, #2
   12504:	blt	124d0 <error@@Base+0x430>
   12508:	b	124b0 <error@@Base+0x410>
   1250c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12510:	add	fp, sp, #28
   12514:	sub	sp, sp, #20
   12518:	str	r3, [sp, #8]
   1251c:	mov	r5, r2
   12520:	str	r1, [sp, #4]
   12524:	mov	r9, r0
   12528:	bl	10b5c <getc@plt>
   1252c:	cmn	r0, #1
   12530:	beq	125ec <error@@Base+0x54c>
   12534:	uxtb	r8, r5
   12538:	add	r4, sp, #16
   1253c:	add	r1, r4, #1
   12540:	str	r1, [sp]
   12544:	mov	r7, #0
   12548:	movw	r6, #15872	; 0x3e00
   1254c:	movt	r6, #2
   12550:	add	r1, r6, r0
   12554:	ldrsb	sl, [r1]
   12558:	cmp	sl, #0
   1255c:	ble	125f4 <error@@Base+0x554>
   12560:	strb	r0, [sp, #16]
   12564:	cmp	sl, #1
   12568:	beq	12594 <error@@Base+0x4f4>
   1256c:	mov	r5, r8
   12570:	sub	r8, sl, #1
   12574:	ldr	r0, [sp]
   12578:	mov	r1, #1
   1257c:	mov	r2, r8
   12580:	mov	r3, r9
   12584:	bl	10a90 <fread@plt>
   12588:	cmp	r0, r8
   1258c:	mov	r8, r5
   12590:	bne	12608 <error@@Base+0x568>
   12594:	mov	r0, r4
   12598:	mov	r1, #4
   1259c:	add	r2, sp, #12
   125a0:	bl	10a9c <utf8proc_iterate@plt>
   125a4:	cmp	r0, sl
   125a8:	bne	12600 <error@@Base+0x560>
   125ac:	ldr	r2, [sp, #12]
   125b0:	cmp	r8, #0
   125b4:	beq	125c8 <error@@Base+0x528>
   125b8:	mov	r5, #1
   125bc:	ldr	r0, [sp, #8]
   125c0:	cmp	r2, r0
   125c4:	beq	125d8 <error@@Base+0x538>
   125c8:	ldr	r0, [sp, #4]
   125cc:	mov	r1, r7
   125d0:	bl	12354 <error@@Base+0x2b4>
   125d4:	mov	r5, #0
   125d8:	mov	r0, r9
   125dc:	bl	10b5c <getc@plt>
   125e0:	cmn	r0, #1
   125e4:	mov	r7, r5
   125e8:	bne	12550 <error@@Base+0x4b0>
   125ec:	sub	sp, fp, #28
   125f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125f4:	movw	r0, #14799	; 0x39cf
   125f8:	movt	r0, #1
   125fc:	bl	120a0 <error@@Base>
   12600:	bl	10b2c <utf8proc_errmsg@plt>
   12604:	bl	120a0 <error@@Base>
   12608:	movw	r0, #14823	; 0x39e7
   1260c:	movt	r0, #1
   12610:	bl	120a0 <error@@Base>
   12614:	push	{r4, r5, r6, r7, fp, lr}
   12618:	add	fp, sp, #16
   1261c:	cmp	r1, #0
   12620:	popeq	{r4, r5, r6, r7, fp, pc}
   12624:	mov	r5, r1
   12628:	mov	r4, r0
   1262c:	mov	r6, #32
   12630:	mov	r7, r1
   12634:	ldr	r0, [r7, #12]
   12638:	bl	129d8 <error@@Base+0x938>
   1263c:	cmp	r0, #0
   12640:	strne	r6, [r7, #12]
   12644:	ldr	r7, [r7, #4]
   12648:	cmp	r7, #0
   1264c:	bne	12634 <error@@Base+0x594>
   12650:	mov	r6, #0
   12654:	b	12668 <error@@Base+0x5c8>
   12658:	mov	r0, #1
   1265c:	cmp	r1, #32
   12660:	beq	12690 <error@@Base+0x5f0>
   12664:	b	126d0 <error@@Base+0x630>
   12668:	ldr	r7, [r5, #4]
   1266c:	ldr	r1, [r5, #12]
   12670:	cmp	r1, #32
   12674:	bne	126bc <error@@Base+0x61c>
   12678:	tst	r6, #255	; 0xff
   1267c:	beq	12690 <error@@Base+0x5f0>
   12680:	cmp	r7, #0
   12684:	ldrne	r1, [r7, #12]
   12688:	cmpne	r1, #10
   1268c:	bne	12658 <error@@Base+0x5b8>
   12690:	tst	r6, #255	; 0xff
   12694:	cmpne	r7, #0
   12698:	beq	126d8 <error@@Base+0x638>
   1269c:	ldr	r0, [r7, #12]
   126a0:	cmp	r0, #32
   126a4:	bne	126d8 <error@@Base+0x638>
   126a8:	ldrb	r0, [r5, #8]
   126ac:	ldrb	r1, [r7, #8]
   126b0:	orr	r0, r1, r0
   126b4:	strb	r0, [r7, #8]
   126b8:	b	126d8 <error@@Base+0x638>
   126bc:	subs	r0, r1, #10
   126c0:	movwne	r0, #1
   126c4:	tst	r6, #255	; 0xff
   126c8:	cmpeq	r1, #10
   126cc:	beq	126d8 <error@@Base+0x638>
   126d0:	mov	r6, r0
   126d4:	b	126ec <error@@Base+0x64c>
   126d8:	mov	r0, r4
   126dc:	mov	r1, r5
   126e0:	bl	12ad0 <error@@Base+0xa30>
   126e4:	mov	r0, r5
   126e8:	bl	10a18 <free@plt>
   126ec:	cmp	r7, #0
   126f0:	mov	r5, r7
   126f4:	bne	12668 <error@@Base+0x5c8>
   126f8:	pop	{r4, r5, r6, r7, fp, pc}
   126fc:	push	{r4, sl, fp, lr}
   12700:	add	fp, sp, #8
   12704:	cmp	r0, #0
   12708:	popeq	{r4, sl, fp, pc}
   1270c:	mov	r4, r0
   12710:	ldr	r0, [r4, #12]
   12714:	bl	10a6c <utf8proc_tolower@plt>
   12718:	str	r0, [r4, #12]
   1271c:	ldr	r4, [r4, #4]
   12720:	cmp	r4, #0
   12724:	bne	12710 <error@@Base+0x670>
   12728:	pop	{r4, sl, fp, pc}
   1272c:	push	{fp, lr}
   12730:	mov	fp, sp
   12734:	bl	10a3c <utf8proc_encode_char@plt>
   12738:	cmp	r0, #0
   1273c:	sxtbgt	r0, r0
   12740:	popgt	{fp, pc}
   12744:	movw	r0, #14645	; 0x3935
   12748:	movt	r0, #1
   1274c:	bl	120a0 <error@@Base>
   12750:	push	{r4, r5, r6, r7, fp, lr}
   12754:	add	fp, sp, #16
   12758:	mov	r7, r3
   1275c:	mov	r4, r2
   12760:	mov	r5, r1
   12764:	tst	r0, #255	; 0xff
   12768:	beq	127a8 <error@@Base+0x708>
   1276c:	mov	r0, #94	; 0x5e
   12770:	mov	r1, r4
   12774:	bl	1272c <error@@Base+0x68c>
   12778:	mov	r6, r0
   1277c:	cmp	r5, #10
   12780:	bne	127b4 <error@@Base+0x714>
   12784:	movw	r0, #11510	; 0x2cf6
   12788:	movt	r0, #1
   1278c:	movw	r1, #14668	; 0x394c
   12790:	movt	r1, #1
   12794:	tst	r7, #255	; 0xff
   12798:	moveq	r1, r0
   1279c:	add	r0, r4, r6
   127a0:	pop	{r4, r5, r6, r7, fp, lr}
   127a4:	b	10b20 <sprintf@plt>
   127a8:	mov	r6, #0
   127ac:	cmp	r5, #10
   127b0:	beq	12784 <error@@Base+0x6e4>
   127b4:	mov	r0, r5
   127b8:	bl	1282c <error@@Base+0x78c>
   127bc:	cmp	r0, #0
   127c0:	beq	12800 <error@@Base+0x760>
   127c4:	mov	r0, r5
   127c8:	bl	1286c <error@@Base+0x7cc>
   127cc:	cmp	r0, #0
   127d0:	beq	127e4 <error@@Base+0x744>
   127d4:	add	r1, r4, r6
   127d8:	movw	r0, #9676	; 0x25cc
   127dc:	bl	1272c <error@@Base+0x68c>
   127e0:	add	r6, r6, r0
   127e4:	add	r1, r4, r6
   127e8:	mov	r0, r5
   127ec:	bl	1272c <error@@Base+0x68c>
   127f0:	add	r0, r6, r0
   127f4:	mov	r1, #0
   127f8:	strb	r1, [r4, r0]
   127fc:	pop	{r4, r5, r6, r7, fp, pc}
   12800:	add	r0, r4, r6
   12804:	cmp	r5, #255	; 0xff
   12808:	bhi	12818 <error@@Base+0x778>
   1280c:	movw	r1, #14673	; 0x3951
   12810:	movt	r1, #1
   12814:	b	12820 <error@@Base+0x780>
   12818:	movw	r1, #14680	; 0x3958
   1281c:	movt	r1, #1
   12820:	mov	r2, r5
   12824:	pop	{r4, r5, r6, r7, fp, lr}
   12828:	b	10b20 <sprintf@plt>
   1282c:	push	{r4, sl, fp, lr}
   12830:	add	fp, sp, #8
   12834:	mov	r4, r0
   12838:	bl	10a24 <utf8proc_get_property@plt>
   1283c:	mov	r1, r0
   12840:	mov	r0, #1
   12844:	cmp	r4, #32
   12848:	popeq	{r4, sl, fp, pc}
   1284c:	ldrsh	r1, [r1]
   12850:	sub	r2, r1, #1
   12854:	cmp	r2, #22
   12858:	bcs	12860 <error@@Base+0x7c0>
   1285c:	pop	{r4, sl, fp, pc}
   12860:	cmp	r1, #29
   12864:	movne	r0, #0
   12868:	pop	{r4, sl, fp, pc}
   1286c:	push	{fp, lr}
   12870:	mov	fp, sp
   12874:	bl	10ae4 <utf8proc_category@plt>
   12878:	sub	r1, r0, #6
   1287c:	mov	r0, #0
   12880:	cmp	r1, #3
   12884:	movwcc	r0, #1
   12888:	pop	{fp, pc}
   1288c:	push	{r4, r5, r6, r7, fp, lr}
   12890:	add	fp, sp, #16
   12894:	sub	sp, sp, #16
   12898:	mov	r6, r2
   1289c:	mov	r2, r1
   128a0:	mov	r5, r0
   128a4:	movw	r1, #12341	; 0x3035
   128a8:	movt	r1, #1
   128ac:	mov	r0, r2
   128b0:	bl	11d9c <getc@plt+0x1240>
   128b4:	mov	r4, r0
   128b8:	cmp	r6, #0
   128bc:	beq	12910 <error@@Base+0x870>
   128c0:	movw	r0, #14687	; 0x395f
   128c4:	movt	r0, #1
   128c8:	mov	r1, #55	; 0x37
   128cc:	mov	r2, #1
   128d0:	mov	r3, r4
   128d4:	bl	10a84 <fwrite@plt>
   128d8:	movw	r7, #14743	; 0x3997
   128dc:	movt	r7, #1
   128e0:	mov	r0, r7
   128e4:	mov	r1, #55	; 0x37
   128e8:	mov	r2, #1
   128ec:	mov	r3, r4
   128f0:	bl	10a84 <fwrite@plt>
   128f4:	mov	r0, r4
   128f8:	blx	r6
   128fc:	mov	r0, r7
   12900:	mov	r1, #55	; 0x37
   12904:	mov	r2, #1
   12908:	mov	r3, r4
   1290c:	bl	10a84 <fwrite@plt>
   12910:	ldr	r6, [r5]
   12914:	cmp	r6, #0
   12918:	beq	1294c <error@@Base+0x8ac>
   1291c:	add	r5, sp, #7
   12920:	ldr	r1, [r6, #12]
   12924:	ldrb	r0, [r6, #8]
   12928:	mov	r2, r5
   1292c:	mov	r3, #0
   12930:	bl	12750 <error@@Base+0x6b0>
   12934:	mov	r0, r5
   12938:	mov	r1, r4
   1293c:	bl	10b38 <fputs@plt>
   12940:	ldr	r6, [r6, #4]
   12944:	cmp	r6, #0
   12948:	bne	12920 <error@@Base+0x880>
   1294c:	mov	r0, r4
   12950:	bl	11e14 <getc@plt+0x12b8>
   12954:	sub	sp, fp, #16
   12958:	pop	{r4, r5, r6, r7, fp, pc}
   1295c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12960:	add	fp, sp, #24
   12964:	sub	sp, sp, #8
   12968:	mov	r6, r0
   1296c:	mov	r0, #0
   12970:	str	r0, [sp, #4]
   12974:	ldrb	r0, [r1]
   12978:	mov	r8, #1
   1297c:	cmp	r0, #0
   12980:	beq	129cc <error@@Base+0x92c>
   12984:	mov	r5, r1
   12988:	add	r7, sp, #4
   1298c:	mov	r0, r5
   12990:	mvn	r1, #0
   12994:	mov	r2, r7
   12998:	bl	10a9c <utf8proc_iterate@plt>
   1299c:	cmp	r0, #1
   129a0:	blt	129c8 <error@@Base+0x928>
   129a4:	mov	r4, r0
   129a8:	ldr	r2, [sp, #4]
   129ac:	mov	r0, r6
   129b0:	mov	r1, #0
   129b4:	bl	12354 <error@@Base+0x2b4>
   129b8:	ldrb	r0, [r5, r4]!
   129bc:	cmp	r0, #0
   129c0:	bne	1298c <error@@Base+0x8ec>
   129c4:	b	129cc <error@@Base+0x92c>
   129c8:	mov	r8, #0
   129cc:	mov	r0, r8
   129d0:	sub	sp, fp, #24
   129d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   129d8:	push	{r4, sl, fp, lr}
   129dc:	add	fp, sp, #8
   129e0:	mov	r4, r0
   129e4:	bl	10a24 <utf8proc_get_property@plt>
   129e8:	cmp	r4, #10
   129ec:	ble	12a08 <error@@Base+0x968>
   129f0:	sub	r1, r4, #11
   129f4:	cmp	r1, #3
   129f8:	bcc	12a24 <error@@Base+0x984>
   129fc:	cmp	r4, #160	; 0xa0
   12a00:	beq	12a24 <error@@Base+0x984>
   12a04:	b	12a30 <error@@Base+0x990>
   12a08:	cmp	r4, #9
   12a0c:	beq	12a24 <error@@Base+0x984>
   12a10:	mov	r1, #0
   12a14:	cmp	r4, #10
   12a18:	bne	12a30 <error@@Base+0x990>
   12a1c:	mov	r0, r1
   12a20:	pop	{r4, sl, fp, pc}
   12a24:	mov	r1, #1
   12a28:	mov	r0, r1
   12a2c:	pop	{r4, sl, fp, pc}
   12a30:	ldrsh	r0, [r0]
   12a34:	sub	r0, r0, #23
   12a38:	mov	r1, #0
   12a3c:	cmp	r0, #3
   12a40:	movwcc	r1, #1
   12a44:	mov	r0, r1
   12a48:	pop	{r4, sl, fp, pc}
   12a4c:	vmov.i32	q8, #0	; 0x00000000
   12a50:	vst1.32	{d16-d17}, [r0]
   12a54:	bx	lr
   12a58:	mov	r2, r1
   12a5c:	ldr	r3, [r0]
   12a60:	mov	r1, #0
   12a64:	b	12a68 <error@@Base+0x9c8>
   12a68:	push	{r4, sl, fp, lr}
   12a6c:	add	fp, sp, #8
   12a70:	mov	r4, r0
   12a74:	stm	r2, {r1, r3}
   12a78:	cmp	r1, #0
   12a7c:	addne	r0, r1, #4
   12a80:	str	r2, [r0]
   12a84:	cmp	r3, #0
   12a88:	addeq	r3, r4, #4
   12a8c:	str	r2, [r3]
   12a90:	mov	r0, r4
   12a94:	bl	12b24 <error@@Base+0xa84>
   12a98:	ldr	r0, [r4, #12]
   12a9c:	add	r0, r0, #1
   12aa0:	str	r0, [r4, #12]
   12aa4:	pop	{r4, sl, fp, pc}
   12aa8:	mov	r2, r1
   12aac:	ldr	r1, [r0, #4]
   12ab0:	mov	r3, #0
   12ab4:	b	12a68 <error@@Base+0x9c8>
   12ab8:	mov	r3, r2
   12abc:	mov	r2, r1
   12ac0:	ldr	r1, [r3]
   12ac4:	b	12a68 <error@@Base+0x9c8>
   12ac8:	ldr	r3, [r1, #4]
   12acc:	b	12a68 <error@@Base+0x9c8>
   12ad0:	push	{r4, sl, fp, lr}
   12ad4:	add	fp, sp, #8
   12ad8:	mov	r4, r0
   12adc:	ldm	r1, {r0, r2}
   12ae0:	cmp	r0, #0
   12ae4:	mov	r3, r4
   12ae8:	addne	r3, r0, #4
   12aec:	str	r2, [r3]
   12af0:	ldm	r1, {r0, r2}
   12af4:	cmp	r2, #0
   12af8:	addeq	r2, r4, #4
   12afc:	str	r0, [r2]
   12b00:	mov	r0, #0
   12b04:	str	r0, [r1]
   12b08:	str	r0, [r1, #4]
   12b0c:	mov	r0, r4
   12b10:	bl	12b24 <error@@Base+0xa84>
   12b14:	ldr	r0, [r4, #12]
   12b18:	sub	r0, r0, #1
   12b1c:	str	r0, [r4, #12]
   12b20:	pop	{r4, sl, fp, pc}
   12b24:	push	{r4, sl, fp, lr}
   12b28:	add	fp, sp, #8
   12b2c:	mov	r4, r0
   12b30:	ldr	r0, [r0, #8]
   12b34:	cmp	r0, #0
   12b38:	popeq	{r4, sl, fp, pc}
   12b3c:	bl	10a18 <free@plt>
   12b40:	mov	r0, #0
   12b44:	str	r0, [r4, #8]
   12b48:	pop	{r4, sl, fp, pc}
   12b4c:	push	{r4, sl, fp, lr}
   12b50:	add	fp, sp, #8
   12b54:	mov	r4, r0
   12b58:	ldr	r0, [r0, #8]
   12b5c:	cmp	r0, #0
   12b60:	bne	12ba4 <error@@Base+0xb04>
   12b64:	ldr	r0, [r4, #12]
   12b68:	cmp	r0, #0
   12b6c:	beq	12ba4 <error@@Base+0xb04>
   12b70:	mov	r1, #4
   12b74:	bl	11d00 <getc@plt+0x11a4>
   12b78:	str	r0, [r4, #8]
   12b7c:	ldr	r0, [r4]
   12b80:	cmp	r0, #0
   12b84:	popeq	{r4, sl, fp, pc}
   12b88:	mov	r1, #0
   12b8c:	ldr	r2, [r4, #8]
   12b90:	str	r0, [r2, r1]
   12b94:	add	r1, r1, #4
   12b98:	ldr	r0, [r0, #4]
   12b9c:	cmp	r0, #0
   12ba0:	bne	12b8c <error@@Base+0xaec>
   12ba4:	pop	{r4, sl, fp, pc}
   12ba8:	push	{r4, r5, r6, sl, fp, lr}
   12bac:	add	fp, sp, #16
   12bb0:	ldr	r6, [r0]
   12bb4:	cmp	r6, #0
   12bb8:	popeq	{r4, r5, r6, sl, fp, pc}
   12bbc:	mov	r4, r1
   12bc0:	mov	r5, r0
   12bc4:	mov	r0, r5
   12bc8:	mov	r1, r6
   12bcc:	bl	12ad0 <error@@Base+0xa30>
   12bd0:	mov	r0, r6
   12bd4:	blx	r4
   12bd8:	ldr	r6, [r5]
   12bdc:	cmp	r6, #0
   12be0:	bne	12bc4 <error@@Base+0xb24>
   12be4:	pop	{r4, r5, r6, sl, fp, pc}
   12be8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bec:	mov	r7, r0
   12bf0:	ldr	r6, [pc, #72]	; 12c40 <error@@Base+0xba0>
   12bf4:	ldr	r5, [pc, #72]	; 12c44 <error@@Base+0xba4>
   12bf8:	add	r6, pc, r6
   12bfc:	add	r5, pc, r5
   12c00:	sub	r6, r6, r5
   12c04:	mov	r8, r1
   12c08:	mov	r9, r2
   12c0c:	bl	109d4 <calloc@plt-0x20>
   12c10:	asrs	r6, r6, #2
   12c14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c18:	mov	r4, #0
   12c1c:	add	r4, r4, #1
   12c20:	ldr	r3, [r5], #4
   12c24:	mov	r2, r9
   12c28:	mov	r1, r8
   12c2c:	mov	r0, r7
   12c30:	blx	r3
   12c34:	cmp	r6, r4
   12c38:	bne	12c1c <error@@Base+0xb7c>
   12c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c40:	strdeq	r1, [r1], -ip
   12c44:	strdeq	r1, [r1], -r4
   12c48:	bx	lr
   12c4c:	mov	r2, r1
   12c50:	mov	r1, r0
   12c54:	mov	r0, #3
   12c58:	b	10a78 <__xstat@plt>

Disassembly of section .fini:

00012c5c <.fini>:
   12c5c:	push	{r3, lr}
   12c60:	pop	{r3, pc}
