
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010d84 <.init>:
   10d84:	push	{r3, lr}
   10d88:	bl	11a58 <Mat_VarReadNextInfo@plt+0xa38>
   10d8c:	pop	{r3, pc}

Disassembly of section .plt:

00010d90 <Mat_VarGetNumberOfFields@plt-0x14>:
   10d90:	push	{lr}		; (str lr, [sp, #-4]!)
   10d94:	ldr	lr, [pc, #4]	; 10da0 <Mat_VarGetNumberOfFields@plt-0x4>
   10d98:	add	lr, pc, lr
   10d9c:	ldr	pc, [lr, #8]!
   10da0:	andeq	r4, r1, r0, ror #4

00010da4 <Mat_VarGetNumberOfFields@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #20, 20	; 0x14000
   10dac:	ldr	pc, [ip, #608]!	; 0x260

00010db0 <Mat_SetVerbose@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #20, 20	; 0x14000
   10db8:	ldr	pc, [ip, #600]!	; 0x258

00010dbc <raise@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #592]!	; 0x250

00010dc8 <Mat_LogClose@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #584]!	; 0x248

00010dd4 <Mat_VarReadNext@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #576]!	; 0x240

00010de0 <strcmp@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #568]!	; 0x238

00010dec <Mat_Open@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #20, 20	; 0x14000
   10df4:	ldr	pc, [ip, #560]!	; 0x230

00010df8 <printf@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #20, 20	; 0x14000
   10e00:	ldr	pc, [ip, #552]!	; 0x228

00010e04 <Mat_VarGetCells@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #20, 20	; 0x14000
   10e0c:	ldr	pc, [ip, #544]!	; 0x220

00010e10 <Mat_VarGetCell@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #20, 20	; 0x14000
   10e18:	ldr	pc, [ip, #536]!	; 0x218

00010e1c <Mat_VarCreate@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #20, 20	; 0x14000
   10e24:	ldr	pc, [ip, #528]!	; 0x210

00010e28 <free@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #20, 20	; 0x14000
   10e30:	ldr	pc, [ip, #520]!	; 0x208

00010e34 <Mat_Warning@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #20, 20	; 0x14000
   10e3c:	ldr	pc, [ip, #512]!	; 0x200

00010e40 <Mat_VarReadDataLinear@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #20, 20	; 0x14000
   10e48:	ldr	pc, [ip, #504]!	; 0x1f8

00010e4c <Mat_Message@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #20, 20	; 0x14000
   10e54:	ldr	pc, [ip, #496]!	; 0x1f0

00010e58 <Mat_VarReadData@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #20, 20	; 0x14000
   10e60:	ldr	pc, [ip, #488]!	; 0x1e8

00010e64 <Mat_VarReadDataAll@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #20, 20	; 0x14000
   10e6c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e70 <Mat_VarReadInfo@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #20, 20	; 0x14000
   10e78:	ldr	pc, [ip, #472]!	; 0x1d8

00010e7c <Mat_VarGetStructFieldnames@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #20, 20	; 0x14000
   10e84:	ldr	pc, [ip, #464]!	; 0x1d0

00010e88 <floor@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #20, 20	; 0x14000
   10e90:	ldr	pc, [ip, #456]!	; 0x1c8

00010e94 <getenv@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #20, 20	; 0x14000
   10e9c:	ldr	pc, [ip, #448]!	; 0x1c0

00010ea0 <puts@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #20, 20	; 0x14000
   10ea8:	ldr	pc, [ip, #440]!	; 0x1b8

00010eac <malloc@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #20, 20	; 0x14000
   10eb4:	ldr	pc, [ip, #432]!	; 0x1b0

00010eb8 <log10@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #20, 20	; 0x14000
   10ec0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ec4 <__libc_start_main@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #20, 20	; 0x14000
   10ecc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ed0 <__gmon_start__@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #20, 20	; 0x14000
   10ed8:	ldr	pc, [ip, #408]!	; 0x198

00010edc <exit@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #20, 20	; 0x14000
   10ee4:	ldr	pc, [ip, #400]!	; 0x190

00010ee8 <Mat_VarFree@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #20, 20	; 0x14000
   10ef0:	ldr	pc, [ip, #392]!	; 0x188

00010ef4 <Mat_SizeOf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #20, 20	; 0x14000
   10efc:	ldr	pc, [ip, #384]!	; 0x180

00010f00 <strlen@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #20, 20	; 0x14000
   10f08:	ldr	pc, [ip, #376]!	; 0x178

00010f0c <strchr@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #20, 20	; 0x14000
   10f14:	ldr	pc, [ip, #368]!	; 0x170

00010f18 <warnx@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #20, 20	; 0x14000
   10f20:	ldr	pc, [ip, #360]!	; 0x168

00010f24 <fprintf@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #20, 20	; 0x14000
   10f2c:	ldr	pc, [ip, #352]!	; 0x160

00010f30 <Mat_GetLibraryVersion@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #20, 20	; 0x14000
   10f38:	ldr	pc, [ip, #344]!	; 0x158

00010f3c <Mat_VarPrint@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #20, 20	; 0x14000
   10f44:	ldr	pc, [ip, #336]!	; 0x150

00010f48 <memset@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #20, 20	; 0x14000
   10f50:	ldr	pc, [ip, #328]!	; 0x148

00010f54 <putchar@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #20, 20	; 0x14000
   10f5c:	ldr	pc, [ip, #320]!	; 0x140

00010f60 <Mat_Close@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #20, 20	; 0x14000
   10f68:	ldr	pc, [ip, #312]!	; 0x138

00010f6c <Mat_Critical@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #20, 20	; 0x14000
   10f74:	ldr	pc, [ip, #304]!	; 0x130

00010f78 <ceil@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #20, 20	; 0x14000
   10f80:	ldr	pc, [ip, #296]!	; 0x128

00010f84 <Mat_LogInitFunc@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #20, 20	; 0x14000
   10f8c:	ldr	pc, [ip, #288]!	; 0x120

00010f90 <Mat_VerbMessage@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #20, 20	; 0x14000
   10f98:	ldr	pc, [ip, #280]!	; 0x118

00010f9c <Mat_VarGetCellsLinear@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #20, 20	; 0x14000
   10fa4:	ldr	pc, [ip, #272]!	; 0x110

00010fa8 <sprintf@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #20, 20	; 0x14000
   10fb0:	ldr	pc, [ip, #264]!	; 0x108

00010fb4 <Mat_Help@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #20, 20	; 0x14000
   10fbc:	ldr	pc, [ip, #256]!	; 0x100

00010fc0 <atoi@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #20, 20	; 0x14000
   10fc8:	ldr	pc, [ip, #248]!	; 0xf8

00010fcc <Mat_VarGetStructFieldByName@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #20, 20	; 0x14000
   10fd4:	ldr	pc, [ip, #240]!	; 0xf0

00010fd8 <Mat_SizeOfClass@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #20, 20	; 0x14000
   10fe0:	ldr	pc, [ip, #232]!	; 0xe8

00010fe4 <Mat_VarGetSize@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #20, 20	; 0x14000
   10fec:	ldr	pc, [ip, #224]!	; 0xe0

00010ff0 <fputs@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #20, 20	; 0x14000
   10ff8:	ldr	pc, [ip, #216]!	; 0xd8

00010ffc <strncmp@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #20, 20	; 0x14000
   11004:	ldr	pc, [ip, #208]!	; 0xd0

00011008 <abort@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #20, 20	; 0x14000
   11010:	ldr	pc, [ip, #200]!	; 0xc8

00011014 <Mat_VarDuplicate@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #20, 20	; 0x14000
   1101c:	ldr	pc, [ip, #192]!	; 0xc0

00011020 <Mat_VarReadNextInfo@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #20, 20	; 0x14000
   11028:	ldr	pc, [ip, #184]!	; 0xb8

Disassembly of section .text:

00011030 <getopt@@Base-0x2604>:
   11030:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11034:	sub	sp, sp, #76	; 0x4c
   11038:	add	r3, sp, #60	; 0x3c
   1103c:	str	r0, [sp, #40]	; 0x28
   11040:	mov	r5, r1
   11044:	mov	r0, r3
   11048:	add	r1, r3, #4
   1104c:	add	r2, sp, #68	; 0x44
   11050:	bl	10f30 <Mat_GetLibraryVersion@plt>
   11054:	ldr	r3, [sp, #60]	; 0x3c
   11058:	cmp	r3, #1
   1105c:	str	r3, [sp, #16]
   11060:	bne	1107c <Mat_VarReadNextInfo@plt+0x5c>
   11064:	ldr	r3, [sp, #64]	; 0x40
   11068:	cmp	r3, #5
   1106c:	bne	1107c <Mat_VarReadNextInfo@plt+0x5c>
   11070:	ldr	r3, [sp, #68]	; 0x44
   11074:	cmp	r3, #15
   11078:	beq	11098 <Mat_VarReadNextInfo@plt+0x78>
   1107c:	ldr	r3, [pc, #2336]	; 119a4 <Mat_VarReadNextInfo@plt+0x984>
   11080:	ldr	r0, [pc, #2336]	; 119a8 <Mat_VarReadNextInfo@plt+0x988>
   11084:	ldr	r1, [r3]
   11088:	bl	10ff0 <fputs@plt>
   1108c:	mov	r3, #1
   11090:	str	r3, [sp, #16]
   11094:	b	11100 <Mat_VarReadNextInfo@plt+0xe0>
   11098:	ldr	r1, [pc, #2316]	; 119ac <Mat_VarReadNextInfo@plt+0x98c>
   1109c:	ldr	r0, [pc, #2316]	; 119b0 <Mat_VarReadNextInfo@plt+0x990>
   110a0:	ldr	r4, [pc, #2316]	; 119b4 <Mat_VarReadNextInfo@plt+0x994>
   110a4:	ldr	r7, [pc, #2316]	; 119b8 <Mat_VarReadNextInfo@plt+0x998>
   110a8:	ldr	r8, [pc, #2316]	; 119bc <Mat_VarReadNextInfo@plt+0x99c>
   110ac:	bl	10f84 <Mat_LogInitFunc@plt>
   110b0:	mov	r6, #0
   110b4:	ldr	r3, [pc, #2308]	; 119c0 <Mat_VarReadNextInfo@plt+0x9a0>
   110b8:	str	r3, [r4, #12]
   110bc:	mov	r1, r5
   110c0:	str	r6, [sp]
   110c4:	ldr	r3, [pc, #2296]	; 119c4 <Mat_VarReadNextInfo@plt+0x9a4>
   110c8:	ldr	r2, [pc, #2296]	; 119c8 <Mat_VarReadNextInfo@plt+0x9a8>
   110cc:	ldr	r0, [sp, #40]	; 0x28
   110d0:	bl	13650 <getopt_long@@Base>
   110d4:	cmn	r0, #1
   110d8:	mov	r1, r0
   110dc:	bne	1110c <Mat_VarReadNextInfo@plt+0xec>
   110e0:	ldr	r6, [pc, #2276]	; 119cc <Mat_VarReadNextInfo@plt+0x9ac>
   110e4:	ldr	r2, [sp, #40]	; 0x28
   110e8:	ldr	r3, [r6]
   110ec:	sub	r2, r2, r3
   110f0:	cmp	r2, #0
   110f4:	bgt	111dc <Mat_VarReadNextInfo@plt+0x1bc>
   110f8:	ldr	r0, [pc, #2256]	; 119d0 <Mat_VarReadNextInfo@plt+0x9b0>
   110fc:	bl	10f6c <Mat_Critical@plt>
   11100:	ldr	r0, [sp, #16]
   11104:	add	sp, sp, #76	; 0x4c
   11108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1110c:	cmp	r1, #100	; 0x64
   11110:	beq	11188 <Mat_VarReadNextInfo@plt+0x168>
   11114:	bgt	11134 <Mat_VarReadNextInfo@plt+0x114>
   11118:	cmp	r1, #72	; 0x48
   1111c:	beq	111b8 <Mat_VarReadNextInfo@plt+0x198>
   11120:	cmp	r1, #86	; 0x56
   11124:	beq	111c8 <Mat_VarReadNextInfo@plt+0x1a8>
   11128:	ldr	r0, [pc, #2212]	; 119d4 <Mat_VarReadNextInfo@plt+0x9b4>
   1112c:	bl	10df8 <printf@plt>
   11130:	b	110bc <Mat_VarReadNextInfo@plt+0x9c>
   11134:	cmp	r1, #104	; 0x68
   11138:	moveq	r3, #1
   1113c:	streq	r3, [r4]
   11140:	beq	110bc <Mat_VarReadNextInfo@plt+0x9c>
   11144:	cmp	r1, #118	; 0x76
   11148:	beq	111a8 <Mat_VarReadNextInfo@plt+0x188>
   1114c:	cmp	r1, #102	; 0x66
   11150:	bne	11128 <Mat_VarReadNextInfo@plt+0x108>
   11154:	ldr	r9, [r7]
   11158:	cmp	r9, #0
   1115c:	beq	1119c <Mat_VarReadNextInfo@plt+0x17c>
   11160:	ldr	r1, [pc, #2160]	; 119d8 <Mat_VarReadNextInfo@plt+0x9b8>
   11164:	mov	r0, r9
   11168:	bl	10de0 <strcmp@plt>
   1116c:	cmp	r0, #0
   11170:	streq	r8, [r4, #12]
   11174:	beq	110bc <Mat_VarReadNextInfo@plt+0x9c>
   11178:	mov	r1, r9
   1117c:	ldr	r0, [pc, #2136]	; 119dc <Mat_VarReadNextInfo@plt+0x9bc>
   11180:	bl	10e34 <Mat_Warning@plt>
   11184:	b	110bc <Mat_VarReadNextInfo@plt+0x9c>
   11188:	mov	r0, #1
   1118c:	ldr	r1, [pc, #2124]	; 119e0 <Mat_VarReadNextInfo@plt+0x9c0>
   11190:	str	r0, [r4, #8]
   11194:	bl	10f90 <Mat_VerbMessage@plt>
   11198:	b	110bc <Mat_VarReadNextInfo@plt+0x9c>
   1119c:	ldr	r0, [pc, #2112]	; 119e4 <Mat_VarReadNextInfo@plt+0x9c4>
   111a0:	bl	10e34 <Mat_Warning@plt>
   111a4:	b	110bc <Mat_VarReadNextInfo@plt+0x9c>
   111a8:	mov	r1, r6
   111ac:	mov	r0, #1
   111b0:	bl	10db0 <Mat_SetVerbose@plt>
   111b4:	b	110bc <Mat_VarReadNextInfo@plt+0x9c>
   111b8:	ldr	r0, [pc, #2088]	; 119e8 <Mat_VarReadNextInfo@plt+0x9c8>
   111bc:	bl	10fb4 <Mat_Help@plt>
   111c0:	mov	r0, #0
   111c4:	bl	10edc <exit@plt>
   111c8:	ldr	r2, [pc, #2076]	; 119ec <Mat_VarReadNextInfo@plt+0x9cc>
   111cc:	ldr	r1, [pc, #2012]	; 119b0 <Mat_VarReadNextInfo@plt+0x990>
   111d0:	ldr	r0, [pc, #2072]	; 119f0 <Mat_VarReadNextInfo@plt+0x9d0>
   111d4:	bl	10df8 <printf@plt>
   111d8:	b	111c0 <Mat_VarReadNextInfo@plt+0x1a0>
   111dc:	ldr	r0, [r5, r3, lsl #2]
   111e0:	mov	r1, #0
   111e4:	bl	10dec <Mat_Open@plt>
   111e8:	subs	r3, r0, #0
   111ec:	str	r3, [sp, #24]
   111f0:	ldr	r3, [r6]
   111f4:	bne	11208 <Mat_VarReadNextInfo@plt+0x1e8>
   111f8:	ldr	r1, [r5, r3, lsl #2]
   111fc:	ldr	r0, [pc, #2032]	; 119f4 <Mat_VarReadNextInfo@plt+0x9d4>
   11200:	bl	10f6c <Mat_Critical@plt>
   11204:	b	11100 <Mat_VarReadNextInfo@plt+0xe0>
   11208:	add	r2, r3, #1
   1120c:	str	r2, [sp, #44]	; 0x2c
   11210:	str	r2, [r6]
   11214:	ldr	r2, [sp, #40]	; 0x28
   11218:	add	r1, r3, #1
   1121c:	cmp	r2, r1
   11220:	ble	11944 <Mat_VarReadNextInfo@plt+0x924>
   11224:	add	r3, r5, r3, lsl #2
   11228:	str	r3, [sp, #36]	; 0x24
   1122c:	ldr	r3, [sp, #36]	; 0x24
   11230:	ldr	r4, [r3, #4]
   11234:	mov	r0, r4
   11238:	bl	124c0 <Mat_VarReadNextInfo@plt+0x14a0>
   1123c:	mov	r3, #0
   11240:	cmp	r4, r0
   11244:	moveq	r6, r3
   11248:	ldrbne	r6, [r0]
   1124c:	strbne	r3, [r0]
   11250:	ldr	r3, [sp, #36]	; 0x24
   11254:	mov	r5, r0
   11258:	ldr	r0, [sp, #24]
   1125c:	ldr	r1, [r3, #4]!
   11260:	str	r3, [sp, #36]	; 0x24
   11264:	bl	10e70 <Mat_VarReadInfo@plt>
   11268:	subs	r4, r0, #0
   1126c:	beq	11930 <Mat_VarReadNextInfo@plt+0x910>
   11270:	ldr	r3, [pc, #1852]	; 119b4 <Mat_VarReadNextInfo@plt+0x994>
   11274:	ldr	r3, [r3, #8]
   11278:	cmp	r3, #0
   1127c:	beq	11294 <Mat_VarReadNextInfo@plt+0x274>
   11280:	cmp	r6, #0
   11284:	bne	112dc <Mat_VarReadNextInfo@plt+0x2bc>
   11288:	mov	r1, r4
   1128c:	ldr	r0, [sp, #24]
   11290:	bl	10e64 <Mat_VarReadDataAll@plt>
   11294:	ldr	r3, [pc, #1816]	; 119b4 <Mat_VarReadNextInfo@plt+0x994>
   11298:	mov	r0, r4
   1129c:	ldr	r3, [r3, #12]
   112a0:	blx	r3
   112a4:	mov	r0, r4
   112a8:	bl	10ee8 <Mat_VarFree@plt>
   112ac:	ldr	r3, [sp, #44]	; 0x2c
   112b0:	add	r3, r3, #1
   112b4:	str	r3, [sp, #44]	; 0x2c
   112b8:	ldr	r2, [sp, #44]	; 0x2c
   112bc:	ldr	r3, [sp, #40]	; 0x28
   112c0:	cmp	r3, r2
   112c4:	bne	1122c <Mat_VarReadNextInfo@plt+0x20c>
   112c8:	ldr	r0, [sp, #24]
   112cc:	bl	10f60 <Mat_Close@plt>
   112d0:	bl	10dc8 <Mat_LogClose@plt>
   112d4:	mov	r3, #0
   112d8:	b	11090 <Mat_VarReadNextInfo@plt+0x70>
   112dc:	strb	r6, [r5]
   112e0:	mov	r0, r5
   112e4:	bl	124c0 <Mat_VarReadNextInfo@plt+0x14a0>
   112e8:	mov	r6, #0
   112ec:	ldrb	r3, [r0]
   112f0:	mov	r5, r0
   112f4:	str	r3, [sp, #28]
   112f8:	ldr	r3, [sp, #28]
   112fc:	cmp	r3, #40	; 0x28
   11300:	bne	11530 <Mat_VarReadNextInfo@plt+0x510>
   11304:	add	r6, r5, #1
   11308:	mov	r1, #41	; 0x29
   1130c:	mov	r0, r6
   11310:	bl	10f0c <strchr@plt>
   11314:	add	r7, r0, #1
   11318:	mov	sl, r0
   1131c:	mov	r0, r7
   11320:	bl	124c0 <Mat_VarReadNextInfo@plt+0x14a0>
   11324:	cmp	r7, r0
   11328:	moveq	r0, r6
   1132c:	ldreq	r7, [sp, #16]
   11330:	beq	1135c <Mat_VarReadNextInfo@plt+0x33c>
   11334:	mov	r3, #0
   11338:	strb	r3, [r0]
   1133c:	ldr	r3, [pc, #1632]	; 119a4 <Mat_VarReadNextInfo@plt+0x984>
   11340:	ldr	r0, [pc, #1712]	; 119f8 <Mat_VarReadNextInfo@plt+0x9d8>
   11344:	ldr	r1, [r3]
   11348:	bl	10ff0 <fputs@plt>
   1134c:	b	11294 <Mat_VarReadNextInfo@plt+0x274>
   11350:	ldrb	r3, [r0], #1
   11354:	cmp	r3, #44	; 0x2c
   11358:	addeq	r7, r7, #1
   1135c:	cmp	sl, r0
   11360:	bne	11350 <Mat_VarReadNextInfo@plt+0x330>
   11364:	lsl	r6, r7, #2
   11368:	mov	r0, r6
   1136c:	bl	10eac <malloc@plt>
   11370:	mov	r9, r0
   11374:	mov	r0, r6
   11378:	bl	10eac <malloc@plt>
   1137c:	mov	r8, r0
   11380:	mov	r0, r6
   11384:	bl	10eac <malloc@plt>
   11388:	mov	r3, #0
   1138c:	mov	r1, r3
   11390:	mov	r2, #1
   11394:	mov	r6, r0
   11398:	str	r1, [r9, r3, lsl #2]
   1139c:	str	r2, [r8, r3, lsl #2]
   113a0:	str	r2, [r6, r3, lsl #2]
   113a4:	add	r3, r3, #1
   113a8:	cmp	r3, r7
   113ac:	bne	11398 <Mat_VarReadNextInfo@plt+0x378>
   113b0:	mov	r0, r5
   113b4:	mov	r3, r8
   113b8:	mov	r2, r9
   113bc:	mov	r1, sl
   113c0:	str	r6, [sp]
   113c4:	bl	12818 <Mat_VarReadNextInfo@plt+0x17f8>
   113c8:	str	r4, [sp]
   113cc:	mov	r3, r6
   113d0:	mov	r2, r8
   113d4:	mov	r1, r9
   113d8:	mov	r0, r7
   113dc:	bl	1251c <Mat_VarReadNextInfo@plt+0x14fc>
   113e0:	subs	r5, r0, #0
   113e4:	beq	1144c <Mat_VarReadNextInfo@plt+0x42c>
   113e8:	ldr	r0, [r4, #16]
   113ec:	bl	10fd8 <Mat_SizeOfClass@plt>
   113f0:	ldr	r3, [r4, #20]
   113f4:	cmp	r3, #0
   113f8:	mul	r5, r0, r5
   113fc:	str	r0, [r4, #12]
   11400:	str	r5, [r4]
   11404:	beq	11470 <Mat_VarReadNextInfo@plt+0x450>
   11408:	mov	r0, #8
   1140c:	bl	10eac <malloc@plt>
   11410:	mov	sl, r0
   11414:	str	r0, [r4, #40]	; 0x28
   11418:	mov	r0, r5
   1141c:	bl	10eac <malloc@plt>
   11420:	str	r0, [sl]
   11424:	mov	r0, r5
   11428:	bl	10eac <malloc@plt>
   1142c:	str	r0, [sl, #4]
   11430:	ldr	r2, [r4, #40]	; 0x28
   11434:	cmp	r2, #0
   11438:	bne	11480 <Mat_VarReadNextInfo@plt+0x460>
   1143c:	ldr	r3, [pc, #1376]	; 119a4 <Mat_VarReadNextInfo@plt+0x984>
   11440:	ldr	r0, [pc, #1460]	; 119fc <Mat_VarReadNextInfo@plt+0x9dc>
   11444:	ldr	r1, [r3]
   11448:	bl	10ff0 <fputs@plt>
   1144c:	mov	r0, r9
   11450:	bl	10e28 <free@plt>
   11454:	mov	r0, r8
   11458:	bl	10e28 <free@plt>
   1145c:	mov	r0, r6
   11460:	bl	10e28 <free@plt>
   11464:	mov	r7, r4
   11468:	mov	r4, r7
   1146c:	b	11294 <Mat_VarReadNextInfo@plt+0x274>
   11470:	mov	r0, r5
   11474:	bl	10eac <malloc@plt>
   11478:	str	r0, [r4, #40]	; 0x28
   1147c:	b	11430 <Mat_VarReadNextInfo@plt+0x410>
   11480:	cmp	r7, #1
   11484:	bne	114f8 <Mat_VarReadNextInfo@plt+0x4d8>
   11488:	ldr	r3, [r6]
   1148c:	mov	r1, r4
   11490:	str	r3, [sp, #4]
   11494:	ldr	r3, [r8]
   11498:	ldr	r0, [sp, #24]
   1149c:	str	r3, [sp]
   114a0:	ldr	r3, [r9]
   114a4:	bl	10e40 <Mat_VarReadDataLinear@plt>
   114a8:	ldr	r3, [r4, #4]
   114ac:	cmp	r3, #2
   114b0:	ldr	r3, [r4, #32]
   114b4:	bne	114dc <Mat_VarReadNextInfo@plt+0x4bc>
   114b8:	ldr	r2, [r3]
   114bc:	cmp	r2, #1
   114c0:	ldreq	r2, [r6]
   114c4:	beq	114f0 <Mat_VarReadNextInfo@plt+0x4d0>
   114c8:	ldr	r2, [r3, #4]
   114cc:	cmp	r2, #1
   114d0:	ldreq	r2, [r6]
   114d4:	streq	r2, [r3]
   114d8:	beq	1144c <Mat_VarReadNextInfo@plt+0x42c>
   114dc:	mov	r2, #2
   114e0:	str	r2, [r4, #4]
   114e4:	ldr	r2, [r6]
   114e8:	str	r2, [r3]
   114ec:	mov	r2, #1
   114f0:	str	r2, [r3, #4]
   114f4:	b	1144c <Mat_VarReadNextInfo@plt+0x42c>
   114f8:	mov	r3, r9
   114fc:	str	r6, [sp, #4]
   11500:	str	r8, [sp]
   11504:	mov	r1, r4
   11508:	ldr	r0, [sp, #24]
   1150c:	bl	10e58 <Mat_VarReadData@plt>
   11510:	ldr	r2, [r4, #32]
   11514:	mov	r3, #0
   11518:	ldr	r1, [r6, r3, lsl #2]
   1151c:	str	r1, [r2, r3, lsl #2]
   11520:	add	r3, r3, #1
   11524:	cmp	r3, r7
   11528:	bne	11518 <Mat_VarReadNextInfo@plt+0x4f8>
   1152c:	b	1144c <Mat_VarReadNextInfo@plt+0x42c>
   11530:	ldr	r3, [sp, #28]
   11534:	cmp	r3, #46	; 0x2e
   11538:	bne	116c0 <Mat_VarReadNextInfo@plt+0x6a0>
   1153c:	ldr	r3, [r4, #16]
   11540:	add	r7, r5, #1
   11544:	cmp	r3, #2
   11548:	bne	115d0 <Mat_VarReadNextInfo@plt+0x5b0>
   1154c:	mov	r0, r7
   11550:	bl	124c0 <Mat_VarReadNextInfo@plt+0x14a0>
   11554:	mov	r2, r6
   11558:	mov	r1, r7
   1155c:	cmp	r7, r0
   11560:	mov	r5, r0
   11564:	ldrbne	r3, [r0]
   11568:	strbne	r6, [r0]
   1156c:	mov	r0, r4
   11570:	strne	r3, [sp, #28]
   11574:	movne	r8, r6
   11578:	ldreq	r8, [sp, #16]
   1157c:	bl	10fcc <Mat_VarGetStructFieldByName@plt>
   11580:	cmp	r0, #0
   11584:	bne	115a4 <Mat_VarReadNextInfo@plt+0x584>
   11588:	ldr	r0, [pc, #1044]	; 119a4 <Mat_VarReadNextInfo@plt+0x984>
   1158c:	ldr	r3, [r4, #36]	; 0x24
   11590:	mov	r2, r7
   11594:	ldr	r1, [pc, #1124]	; 11a00 <Mat_VarReadNextInfo@plt+0x9e0>
   11598:	ldr	r0, [r0]
   1159c:	bl	10f24 <fprintf@plt>
   115a0:	b	11294 <Mat_VarReadNextInfo@plt+0x274>
   115a4:	mov	r1, #1
   115a8:	bl	11014 <Mat_VarDuplicate@plt>
   115ac:	mov	r7, r0
   115b0:	mov	r0, r4
   115b4:	bl	10ee8 <Mat_VarFree@plt>
   115b8:	cmp	r8, #1
   115bc:	bne	11998 <Mat_VarReadNextInfo@plt+0x978>
   115c0:	mov	r1, r7
   115c4:	ldr	r0, [sp, #24]
   115c8:	bl	10e64 <Mat_VarReadDataAll@plt>
   115cc:	b	11468 <Mat_VarReadNextInfo@plt+0x448>
   115d0:	cmp	r3, #1
   115d4:	bne	116b4 <Mat_VarReadNextInfo@plt+0x694>
   115d8:	ldr	r1, [r4, #12]
   115dc:	ldr	r0, [r4]
   115e0:	bl	13690 <getopt_long_only@@Base+0x20>
   115e4:	mov	r5, #0
   115e8:	mov	sl, #1
   115ec:	ldr	r9, [r4, #40]	; 0x28
   115f0:	mov	r8, r0
   115f4:	mov	r0, r7
   115f8:	bl	124c0 <Mat_VarReadNextInfo@plt+0x14a0>
   115fc:	cmp	r7, r0
   11600:	mov	r3, r0
   11604:	ldrbne	r3, [r0]
   11608:	ldreq	r3, [sp, #16]
   1160c:	str	r0, [sp, #20]
   11610:	strne	r3, [sp, #28]
   11614:	movne	r3, r0
   11618:	strne	r6, [sp, #32]
   1161c:	strbne	r6, [r3]
   11620:	streq	r3, [sp, #32]
   11624:	cmp	r8, r5
   11628:	bgt	11644 <Mat_VarReadNextInfo@plt+0x624>
   1162c:	bne	11294 <Mat_VarReadNextInfo@plt+0x274>
   11630:	ldr	r3, [sp, #32]
   11634:	cmp	r3, #0
   11638:	bne	11294 <Mat_VarReadNextInfo@plt+0x274>
   1163c:	ldr	r5, [sp, #20]
   11640:	b	112f8 <Mat_VarReadNextInfo@plt+0x2d8>
   11644:	mov	r1, r5
   11648:	mov	r0, r4
   1164c:	bl	10e10 <Mat_VarGetCell@plt>
   11650:	subs	fp, r0, #0
   11654:	bne	11670 <Mat_VarReadNextInfo@plt+0x650>
   11658:	ldr	r1, [pc, #932]	; 11a04 <Mat_VarReadNextInfo@plt+0x9e4>
   1165c:	mov	r2, r5
   11660:	ldr	r3, [pc, #828]	; 119a4 <Mat_VarReadNextInfo@plt+0x984>
   11664:	ldr	r0, [r3]
   11668:	bl	10f24 <fprintf@plt>
   1166c:	b	11294 <Mat_VarReadNextInfo@plt+0x274>
   11670:	ldr	r3, [fp, #16]
   11674:	cmp	r3, #2
   11678:	bne	11658 <Mat_VarReadNextInfo@plt+0x638>
   1167c:	mov	r2, r6
   11680:	mov	r1, r7
   11684:	bl	10fcc <Mat_VarGetStructFieldByName@plt>
   11688:	cmp	r0, #0
   1168c:	beq	11588 <Mat_VarReadNextInfo@plt+0x568>
   11690:	mov	r1, sl
   11694:	bl	11014 <Mat_VarDuplicate@plt>
   11698:	str	r0, [sp, #48]	; 0x30
   1169c:	mov	r0, fp
   116a0:	bl	10ee8 <Mat_VarFree@plt>
   116a4:	ldr	r3, [sp, #48]	; 0x30
   116a8:	str	r3, [r9, r5, lsl #2]
   116ac:	add	r5, r5, #1
   116b0:	b	11624 <Mat_VarReadNextInfo@plt+0x604>
   116b4:	mov	r2, r7
   116b8:	ldr	r1, [pc, #840]	; 11a08 <Mat_VarReadNextInfo@plt+0x9e8>
   116bc:	b	11660 <Mat_VarReadNextInfo@plt+0x640>
   116c0:	ldr	r3, [sp, #28]
   116c4:	cmp	r3, #123	; 0x7b
   116c8:	movne	r7, r4
   116cc:	bne	11998 <Mat_VarReadNextInfo@plt+0x978>
   116d0:	ldr	r3, [r4, #16]
   116d4:	cmp	r3, #1
   116d8:	ldrne	r3, [pc, #708]	; 119a4 <Mat_VarReadNextInfo@plt+0x984>
   116dc:	ldrne	r0, [pc, #808]	; 11a0c <Mat_VarReadNextInfo@plt+0x9ec>
   116e0:	ldrne	r1, [r3]
   116e4:	bne	11348 <Mat_VarReadNextInfo@plt+0x328>
   116e8:	add	r7, r5, #1
   116ec:	mov	r1, #125	; 0x7d
   116f0:	mov	r0, r7
   116f4:	bl	10f0c <strchr@plt>
   116f8:	mov	r8, r0
   116fc:	add	r0, r0, #1
   11700:	bl	124c0 <Mat_VarReadNextInfo@plt+0x14a0>
   11704:	ldr	fp, [sp, #16]
   11708:	ldrb	r3, [r0]
   1170c:	str	r0, [sp, #20]
   11710:	cmp	r3, #0
   11714:	movne	r2, r0
   11718:	ldreq	r3, [sp, #16]
   1171c:	mov	r0, r7
   11720:	strbne	r6, [r2]
   11724:	strne	r3, [sp, #28]
   11728:	strne	r6, [sp, #32]
   1172c:	streq	r3, [sp, #32]
   11730:	cmp	r8, r0
   11734:	bne	11890 <Mat_VarReadNextInfo@plt+0x870>
   11738:	lsl	r7, fp, #2
   1173c:	mov	r0, r7
   11740:	str	r8, [sp, #48]	; 0x30
   11744:	bl	10eac <malloc@plt>
   11748:	mov	r8, #0
   1174c:	mov	sl, r0
   11750:	mov	r0, r7
   11754:	bl	10eac <malloc@plt>
   11758:	mov	r9, r0
   1175c:	mov	r0, r7
   11760:	bl	10eac <malloc@plt>
   11764:	ldr	r1, [sp, #48]	; 0x30
   11768:	mov	r3, #1
   1176c:	mov	r7, r0
   11770:	str	r6, [sl, r8, lsl #2]
   11774:	str	r3, [r9, r8, lsl #2]
   11778:	str	r3, [r7, r8, lsl #2]
   1177c:	add	r8, r8, #1
   11780:	cmp	r8, fp
   11784:	bne	11770 <Mat_VarReadNextInfo@plt+0x750>
   11788:	mov	r3, r9
   1178c:	mov	r2, sl
   11790:	mov	r0, r5
   11794:	str	r7, [sp]
   11798:	bl	12818 <Mat_VarReadNextInfo@plt+0x17f8>
   1179c:	mov	r3, r7
   117a0:	str	r4, [sp]
   117a4:	mov	r2, r9
   117a8:	mov	r1, sl
   117ac:	mov	r0, r8
   117b0:	bl	1251c <Mat_VarReadNextInfo@plt+0x14fc>
   117b4:	subs	r3, r0, #0
   117b8:	str	r3, [sp, #48]	; 0x30
   117bc:	beq	11920 <Mat_VarReadNextInfo@plt+0x900>
   117c0:	cmp	r8, #1
   117c4:	bne	118b0 <Mat_VarReadNextInfo@plt+0x890>
   117c8:	ldr	r3, [r7]
   117cc:	ldr	r2, [r9]
   117d0:	ldr	r1, [sl]
   117d4:	mov	r0, r4
   117d8:	bl	10f9c <Mat_VarGetCellsLinear@plt>
   117dc:	ldr	r3, [r4, #4]
   117e0:	cmp	r3, #2
   117e4:	mov	r5, r0
   117e8:	bne	118a0 <Mat_VarReadNextInfo@plt+0x880>
   117ec:	ldr	r3, [r4, #32]
   117f0:	ldr	r2, [r3]
   117f4:	cmp	r2, #1
   117f8:	ldreq	r2, [r7]
   117fc:	streq	r2, [r3, #4]
   11800:	beq	11818 <Mat_VarReadNextInfo@plt+0x7f8>
   11804:	ldr	r2, [r3, #4]
   11808:	cmp	r2, #1
   1180c:	bne	118a0 <Mat_VarReadNextInfo@plt+0x880>
   11810:	ldr	r2, [r7]
   11814:	str	r2, [r3]
   11818:	cmp	r5, #0
   1181c:	beq	118e8 <Mat_VarReadNextInfo@plt+0x8c8>
   11820:	sub	fp, r5, #4
   11824:	mov	r8, #0
   11828:	mov	r3, #1
   1182c:	ldr	r2, [sp, #48]	; 0x30
   11830:	cmp	r2, r8
   11834:	bgt	11900 <Mat_VarReadNextInfo@plt+0x8e0>
   11838:	mov	r1, #1
   1183c:	str	r1, [sp, #8]
   11840:	str	r5, [sp, #4]
   11844:	ldr	r3, [r4, #32]
   11848:	mov	r2, #21
   1184c:	str	r3, [sp]
   11850:	ldr	r3, [r4, #4]
   11854:	ldr	r0, [r4, #36]	; 0x24
   11858:	bl	10e1c <Mat_VarCreate@plt>
   1185c:	mov	r5, r0
   11860:	mov	r0, r4
   11864:	bl	10ee8 <Mat_VarFree@plt>
   11868:	mov	r4, r5
   1186c:	mov	r5, r6
   11870:	mov	r0, sl
   11874:	bl	10e28 <free@plt>
   11878:	mov	r0, r9
   1187c:	bl	10e28 <free@plt>
   11880:	mov	r0, r7
   11884:	bl	10e28 <free@plt>
   11888:	cmp	r5, #0
   1188c:	b	1162c <Mat_VarReadNextInfo@plt+0x60c>
   11890:	ldrb	r3, [r0], #1
   11894:	cmp	r3, #44	; 0x2c
   11898:	addeq	fp, fp, #1
   1189c:	b	11730 <Mat_VarReadNextInfo@plt+0x710>
   118a0:	mov	r3, #1
   118a4:	str	r3, [r4, #4]
   118a8:	ldr	r3, [r4, #32]
   118ac:	b	11810 <Mat_VarReadNextInfo@plt+0x7f0>
   118b0:	mov	r3, r7
   118b4:	mov	r2, r9
   118b8:	mov	r1, sl
   118bc:	mov	r0, r4
   118c0:	bl	10e04 <Mat_VarGetCells@plt>
   118c4:	ldr	r2, [r4, #32]
   118c8:	mov	r3, #0
   118cc:	mov	r5, r0
   118d0:	ldr	r1, [r7, r3, lsl #2]
   118d4:	str	r1, [r2, r3, lsl #2]
   118d8:	add	r3, r3, #1
   118dc:	cmp	r3, fp
   118e0:	bne	118d0 <Mat_VarReadNextInfo@plt+0x8b0>
   118e4:	b	11818 <Mat_VarReadNextInfo@plt+0x7f8>
   118e8:	ldr	r3, [pc, #180]	; 119a4 <Mat_VarReadNextInfo@plt+0x984>
   118ec:	ldr	r0, [pc, #284]	; 11a10 <Mat_VarReadNextInfo@plt+0x9f0>
   118f0:	ldr	r1, [r3]
   118f4:	bl	10ff0 <fputs@plt>
   118f8:	ldr	r5, [sp, #16]
   118fc:	b	11870 <Mat_VarReadNextInfo@plt+0x850>
   11900:	mov	r1, r3
   11904:	ldr	r0, [fp, #4]
   11908:	str	r3, [sp, #52]	; 0x34
   1190c:	bl	11014 <Mat_VarDuplicate@plt>
   11910:	add	r8, r8, #1
   11914:	ldr	r3, [sp, #52]	; 0x34
   11918:	str	r0, [fp, #4]!
   1191c:	b	1182c <Mat_VarReadNextInfo@plt+0x80c>
   11920:	ldr	r3, [pc, #124]	; 119a4 <Mat_VarReadNextInfo@plt+0x984>
   11924:	ldr	r0, [pc, #232]	; 11a14 <Mat_VarReadNextInfo@plt+0x9f4>
   11928:	ldr	r1, [r3]
   1192c:	b	118f4 <Mat_VarReadNextInfo@plt+0x8d4>
   11930:	ldr	r3, [sp, #36]	; 0x24
   11934:	ldr	r0, [pc, #220]	; 11a18 <Mat_VarReadNextInfo@plt+0x9f8>
   11938:	ldr	r1, [r3]
   1193c:	bl	10e34 <Mat_Warning@plt>
   11940:	b	112ac <Mat_VarReadNextInfo@plt+0x28c>
   11944:	ldr	r3, [r4, #8]
   11948:	cmp	r3, #0
   1194c:	bne	11984 <Mat_VarReadNextInfo@plt+0x964>
   11950:	ldr	r0, [sp, #24]
   11954:	bl	11020 <Mat_VarReadNextInfo@plt>
   11958:	subs	r5, r0, #0
   1195c:	beq	112c8 <Mat_VarReadNextInfo@plt+0x2a8>
   11960:	ldr	r3, [r4, #12]
   11964:	blx	r3
   11968:	mov	r0, r5
   1196c:	bl	10ee8 <Mat_VarFree@plt>
   11970:	b	11950 <Mat_VarReadNextInfo@plt+0x930>
   11974:	ldr	r3, [r4, #12]
   11978:	blx	r3
   1197c:	mov	r0, r5
   11980:	bl	10ee8 <Mat_VarFree@plt>
   11984:	ldr	r0, [sp, #24]
   11988:	bl	10dd4 <Mat_VarReadNext@plt>
   1198c:	subs	r5, r0, #0
   11990:	bne	11974 <Mat_VarReadNextInfo@plt+0x954>
   11994:	b	112c8 <Mat_VarReadNextInfo@plt+0x2a8>
   11998:	mov	r4, r7
   1199c:	str	r5, [sp, #20]
   119a0:	b	1163c <Mat_VarReadNextInfo@plt+0x61c>
   119a4:	andeq	r5, r2, r0, ror #3
   119a8:	andeq	r3, r1, sp, ror sp
   119ac:	andeq	r2, r1, ip, ror r4
   119b0:			; <UNDEFINED> instruction: 0x00013db5
   119b4:	andeq	r5, r2, r8, ror #3
   119b8:	strdeq	r5, [r2], -ip
   119bc:	andeq	r1, r1, r0, lsr ip
   119c0:	andeq	r1, r1, r4, ror #28
   119c4:	andeq	r5, r2, r0, asr r1
   119c8:	andeq	r3, r1, r0, lsr #29
   119cc:	ldrdeq	r5, [r2], -r0
   119d0:	andeq	r3, r1, r8, lsr #29
   119d4:	andeq	r3, r1, r9, lsl #29
   119d8:	andeq	r3, r1, ip, asr #27
   119dc:	ldrdeq	r3, [r1], -r1
   119e0:			; <UNDEFINED> instruction: 0x00013dbd
   119e4:	andeq	r3, r1, r6, lsl #28
   119e8:	andeq	r5, r2, r8, lsl #2
   119ec:	andeq	r3, r1, ip, lsr #28
   119f0:	andeq	r3, r1, r3, lsr lr
   119f4:	andeq	r3, r1, fp, asr #29
   119f8:	ldrdeq	r3, [r1], -sp
   119fc:	andeq	r3, r1, r6, lsl pc
   11a00:	andeq	r3, r1, ip, lsr pc
   11a04:	andeq	r3, r1, r3, ror #30
   11a08:	andeq	r3, r1, r4, lsl #31
   11a0c:	muleq	r1, sl, pc	; <UNPREDICTABLE>
   11a10:			; <UNDEFINED> instruction: 0x00013fbd
   11a14:	ldrdeq	r3, [r1], -sp
   11a18:	strdeq	r3, [r1], -r6
   11a1c:	mov	fp, #0
   11a20:	mov	lr, #0
   11a24:	pop	{r1}		; (ldr r1, [sp], #4)
   11a28:	mov	r2, sp
   11a2c:	push	{r2}		; (str r2, [sp, #-4]!)
   11a30:	push	{r0}		; (str r0, [sp, #-4]!)
   11a34:	ldr	ip, [pc, #16]	; 11a4c <Mat_VarReadNextInfo@plt+0xa2c>
   11a38:	push	{ip}		; (str ip, [sp, #-4]!)
   11a3c:	ldr	r0, [pc, #12]	; 11a50 <Mat_VarReadNextInfo@plt+0xa30>
   11a40:	ldr	r3, [pc, #12]	; 11a54 <Mat_VarReadNextInfo@plt+0xa34>
   11a44:	bl	10ec4 <__libc_start_main@plt>
   11a48:	bl	11008 <abort@plt>
   11a4c:	andeq	r3, r1, ip, asr #22
   11a50:	andeq	r1, r1, r0, lsr r0
   11a54:	andeq	r3, r1, ip, ror #21
   11a58:	ldr	r3, [pc, #20]	; 11a74 <Mat_VarReadNextInfo@plt+0xa54>
   11a5c:	ldr	r2, [pc, #20]	; 11a78 <Mat_VarReadNextInfo@plt+0xa58>
   11a60:	add	r3, pc, r3
   11a64:	ldr	r2, [r3, r2]
   11a68:	cmp	r2, #0
   11a6c:	bxeq	lr
   11a70:	b	10ed0 <__gmon_start__@plt>
   11a74:	muleq	r1, r8, r5
   11a78:	andeq	r0, r0, ip, ror #1
   11a7c:	ldr	r3, [pc, #28]	; 11aa0 <Mat_VarReadNextInfo@plt+0xa80>
   11a80:	ldr	r0, [pc, #28]	; 11aa4 <Mat_VarReadNextInfo@plt+0xa84>
   11a84:	sub	r3, r3, r0
   11a88:	cmp	r3, #6
   11a8c:	bxls	lr
   11a90:	ldr	r3, [pc, #16]	; 11aa8 <Mat_VarReadNextInfo@plt+0xa88>
   11a94:	cmp	r3, #0
   11a98:	bxeq	lr
   11a9c:	bx	r3
   11aa0:	ldrdeq	r5, [r2], -pc	; <UNPREDICTABLE>
   11aa4:	ldrdeq	r5, [r2], -ip
   11aa8:	andeq	r0, r0, r0
   11aac:	ldr	r1, [pc, #36]	; 11ad8 <Mat_VarReadNextInfo@plt+0xab8>
   11ab0:	ldr	r0, [pc, #36]	; 11adc <Mat_VarReadNextInfo@plt+0xabc>
   11ab4:	sub	r1, r1, r0
   11ab8:	asr	r1, r1, #2
   11abc:	add	r1, r1, r1, lsr #31
   11ac0:	asrs	r1, r1, #1
   11ac4:	bxeq	lr
   11ac8:	ldr	r3, [pc, #16]	; 11ae0 <Mat_VarReadNextInfo@plt+0xac0>
   11acc:	cmp	r3, #0
   11ad0:	bxeq	lr
   11ad4:	bx	r3
   11ad8:	ldrdeq	r5, [r2], -ip
   11adc:	ldrdeq	r5, [r2], -ip
   11ae0:	andeq	r0, r0, r0
   11ae4:	push	{r4, lr}
   11ae8:	ldr	r4, [pc, #24]	; 11b08 <Mat_VarReadNextInfo@plt+0xae8>
   11aec:	ldrb	r3, [r4]
   11af0:	cmp	r3, #0
   11af4:	popne	{r4, pc}
   11af8:	bl	11a7c <Mat_VarReadNextInfo@plt+0xa5c>
   11afc:	mov	r3, #1
   11b00:	strb	r3, [r4]
   11b04:	pop	{r4, pc}
   11b08:	andeq	r5, r2, r4, ror #3
   11b0c:	ldr	r0, [pc, #40]	; 11b3c <Mat_VarReadNextInfo@plt+0xb1c>
   11b10:	ldr	r3, [r0]
   11b14:	cmp	r3, #0
   11b18:	bne	11b20 <Mat_VarReadNextInfo@plt+0xb00>
   11b1c:	b	11aac <Mat_VarReadNextInfo@plt+0xa8c>
   11b20:	ldr	r3, [pc, #24]	; 11b40 <Mat_VarReadNextInfo@plt+0xb20>
   11b24:	cmp	r3, #0
   11b28:	beq	11b1c <Mat_VarReadNextInfo@plt+0xafc>
   11b2c:	push	{r4, lr}
   11b30:	blx	r3
   11b34:	pop	{r4, lr}
   11b38:	b	11aac <Mat_VarReadNextInfo@plt+0xa8c>
   11b3c:	strdeq	r4, [r2], -ip
	...
   11b48:	sub	r0, r0, #1
   11b4c:	cmp	r0, #12
   11b50:	ldrls	pc, [pc, r0, lsl #2]
   11b54:	b	11c08 <Mat_VarReadNextInfo@plt+0xbe8>
   11b58:	strdeq	r1, [r1], -r0
   11b5c:	strdeq	r1, [r1], -ip
   11b60:	ldrdeq	r1, [r1], -r8
   11b64:	andeq	r1, r1, r4, ror #23
   11b68:	andeq	r1, r1, r0, asr #23
   11b6c:	andeq	r1, r1, ip, asr #23
   11b70:	muleq	r1, r8, fp
   11b74:	andeq	r1, r1, r8, lsl #24
   11b78:	andeq	r1, r1, ip, lsl #23
   11b7c:	andeq	r1, r1, r8, lsl #24
   11b80:	andeq	r1, r1, r8, lsl #24
   11b84:	andeq	r1, r1, r8, lsr #23
   11b88:			; <UNDEFINED> instruction: 0x00011bb4
   11b8c:	ldrd	r2, [r1]
   11b90:	ldr	r0, [pc, #116]	; 11c0c <Mat_VarReadNextInfo@plt+0xbec>
   11b94:	b	10df8 <printf@plt>
   11b98:	vldr	s15, [r1]
   11b9c:	vcvt.f64.f32	d7, s15
   11ba0:	vmov	r2, r3, d7
   11ba4:	b	11b90 <Mat_VarReadNextInfo@plt+0xb70>
   11ba8:	ldrd	r2, [r1]
   11bac:	ldr	r0, [pc, #92]	; 11c10 <Mat_VarReadNextInfo@plt+0xbf0>
   11bb0:	b	10df8 <printf@plt>
   11bb4:	ldrd	r2, [r1]
   11bb8:	ldr	r0, [pc, #84]	; 11c14 <Mat_VarReadNextInfo@plt+0xbf4>
   11bbc:	b	11bb0 <Mat_VarReadNextInfo@plt+0xb90>
   11bc0:	ldr	r1, [r1]
   11bc4:	ldr	r0, [pc, #76]	; 11c18 <Mat_VarReadNextInfo@plt+0xbf8>
   11bc8:	b	10df8 <printf@plt>
   11bcc:	ldr	r1, [r1]
   11bd0:	ldr	r0, [pc, #68]	; 11c1c <Mat_VarReadNextInfo@plt+0xbfc>
   11bd4:	b	11bc8 <Mat_VarReadNextInfo@plt+0xba8>
   11bd8:	ldrsh	r1, [r1]
   11bdc:	ldr	r0, [pc, #60]	; 11c20 <Mat_VarReadNextInfo@plt+0xc00>
   11be0:	b	11bc8 <Mat_VarReadNextInfo@plt+0xba8>
   11be4:	ldrh	r1, [r1]
   11be8:	ldr	r0, [pc, #52]	; 11c24 <Mat_VarReadNextInfo@plt+0xc04>
   11bec:	b	11bc8 <Mat_VarReadNextInfo@plt+0xba8>
   11bf0:	ldrsb	r1, [r1]
   11bf4:	ldr	r0, [pc, #44]	; 11c28 <Mat_VarReadNextInfo@plt+0xc08>
   11bf8:	b	11bc8 <Mat_VarReadNextInfo@plt+0xba8>
   11bfc:	ldrb	r1, [r1]
   11c00:	ldr	r0, [pc, #36]	; 11c2c <Mat_VarReadNextInfo@plt+0xc0c>
   11c04:	b	11bc8 <Mat_VarReadNextInfo@plt+0xba8>
   11c08:	bx	lr
   11c0c:	andeq	r3, r1, r4, lsr #23
   11c10:	andeq	r3, r1, r7, lsr #23
   11c14:	andeq	r3, r1, ip, lsr #23
   11c18:	muleq	r1, r4, ip
   11c1c:			; <UNDEFINED> instruction: 0x00013bb1
   11c20:			; <UNDEFINED> instruction: 0x00013bb4
   11c24:			; <UNDEFINED> instruction: 0x00013bb8
   11c28:			; <UNDEFINED> instruction: 0x00013bbc
   11c2c:	andeq	r3, r1, r1, asr #23
   11c30:	push	{r4, r5, r6, r7, lr}
   11c34:	vpush	{d8-d9}
   11c38:	ldr	r5, [pc, #472]	; 11e18 <Mat_VarReadNextInfo@plt+0xdf8>
   11c3c:	mov	r4, r0
   11c40:	mov	r2, #32
   11c44:	sub	sp, sp, #44	; 0x2c
   11c48:	mov	r1, #0
   11c4c:	add	r0, sp, #8
   11c50:	bl	10f48 <memset@plt>
   11c54:	ldr	r3, [r5]
   11c58:	cmp	r3, #0
   11c5c:	beq	11c84 <Mat_VarReadNextInfo@plt+0xc64>
   11c60:	ldr	r3, [pc, #436]	; 11e1c <Mat_VarReadNextInfo@plt+0xdfc>
   11c64:	ldr	r2, [pc, #436]	; 11e20 <Mat_VarReadNextInfo@plt+0xe00>
   11c68:	str	r3, [sp]
   11c6c:	ldr	r1, [pc, #432]	; 11e24 <Mat_VarReadNextInfo@plt+0xe04>
   11c70:	ldr	r3, [pc, #432]	; 11e28 <Mat_VarReadNextInfo@plt+0xe08>
   11c74:	ldr	r0, [pc, #432]	; 11e2c <Mat_VarReadNextInfo@plt+0xe0c>
   11c78:	bl	10df8 <printf@plt>
   11c7c:	mov	r3, #0
   11c80:	str	r3, [r5]
   11c84:	ldr	r1, [r4, #36]	; 0x24
   11c88:	ldr	r0, [pc, #416]	; 11e30 <Mat_VarReadNextInfo@plt+0xe10>
   11c8c:	bl	10df8 <printf@plt>
   11c90:	ldr	r3, [r4, #4]
   11c94:	cmp	r3, #0
   11c98:	ble	11d84 <Mat_VarReadNextInfo@plt+0xd64>
   11c9c:	ldr	r3, [r4, #32]
   11ca0:	ldr	r0, [pc, #396]	; 11e34 <Mat_VarReadNextInfo@plt+0xe14>
   11ca4:	vldr	d8, [pc, #324]	; 11df0 <Mat_VarReadNextInfo@plt+0xdd0>
   11ca8:	ldr	r1, [r3]
   11cac:	bl	10df8 <printf@plt>
   11cb0:	vldr	d9, [pc, #320]	; 11df8 <Mat_VarReadNextInfo@plt+0xdd8>
   11cb4:	ldr	r7, [pc, #380]	; 11e38 <Mat_VarReadNextInfo@plt+0xe18>
   11cb8:	mov	r6, #0
   11cbc:	mov	r5, #1
   11cc0:	ldr	r3, [r4, #4]
   11cc4:	cmp	r5, r3
   11cc8:	blt	11d38 <Mat_VarReadNextInfo@plt+0xd18>
   11ccc:	add	r1, sp, #8
   11cd0:	ldr	r0, [pc, #356]	; 11e3c <Mat_VarReadNextInfo@plt+0xe1c>
   11cd4:	bl	10df8 <printf@plt>
   11cd8:	mov	r0, r4
   11cdc:	bl	10fe4 <Mat_VarGetSize@plt>
   11ce0:	ldr	r3, [pc, #344]	; 11e40 <Mat_VarReadNextInfo@plt+0xe20>
   11ce4:	ldr	r3, [r3]
   11ce8:	cmp	r3, #0
   11cec:	mov	r1, r0
   11cf0:	beq	11de4 <Mat_VarReadNextInfo@plt+0xdc4>
   11cf4:	cmp	r0, #1073741824	; 0x40000000
   11cf8:	bls	11d90 <Mat_VarReadNextInfo@plt+0xd70>
   11cfc:	vmov	s15, r0
   11d00:	vldr	d6, [pc, #248]	; 11e00 <Mat_VarReadNextInfo@plt+0xde0>
   11d04:	ldr	r0, [pc, #312]	; 11e44 <Mat_VarReadNextInfo@plt+0xe24>
   11d08:	vcvt.f64.u32	d7, s15
   11d0c:	vmul.f64	d7, d7, d6
   11d10:	vmov	r2, r3, d7
   11d14:	bl	10df8 <printf@plt>
   11d18:	ldr	r2, [r4, #16]
   11d1c:	ldr	r3, [pc, #292]	; 11e48 <Mat_VarReadNextInfo@plt+0xe28>
   11d20:	ldr	r0, [pc, #292]	; 11e4c <Mat_VarReadNextInfo@plt+0xe2c>
   11d24:	ldr	r1, [r3, r2, lsl #2]
   11d28:	bl	10df8 <printf@plt>
   11d2c:	add	sp, sp, #44	; 0x2c
   11d30:	vpop	{d8-d9}
   11d34:	pop	{r4, r5, r6, r7, pc}
   11d38:	ldr	r3, [r4, #32]
   11d3c:	ldr	r3, [r3, r5, lsl #2]
   11d40:	vmov	s0, r3
   11d44:	vcvt.f64.u32	d0, s0
   11d48:	bl	10eb8 <log10@plt>
   11d4c:	bl	10f78 <ceil@plt>
   11d50:	vadd.f64	d0, d0, d8
   11d54:	vcmpe.f64	d0, d9
   11d58:	vmrs	APSR_nzcv, fpscr
   11d5c:	bpl	11d7c <Mat_VarReadNextInfo@plt+0xd5c>
   11d60:	ldr	r3, [r4, #32]
   11d64:	mov	r1, r7
   11d68:	ldr	r2, [r3, r5, lsl #2]
   11d6c:	add	r3, sp, #8
   11d70:	add	r0, r3, r6
   11d74:	bl	10fa8 <sprintf@plt>
   11d78:	add	r6, r6, r0
   11d7c:	add	r5, r5, #1
   11d80:	b	11cc0 <Mat_VarReadNextInfo@plt+0xca0>
   11d84:	ldr	r0, [pc, #196]	; 11e50 <Mat_VarReadNextInfo@plt+0xe30>
   11d88:	bl	10df8 <printf@plt>
   11d8c:	b	11cd8 <Mat_VarReadNextInfo@plt+0xcb8>
   11d90:	cmp	r0, #1048576	; 0x100000
   11d94:	bls	11db4 <Mat_VarReadNextInfo@plt+0xd94>
   11d98:	vmov	s15, r0
   11d9c:	vldr	d6, [pc, #100]	; 11e08 <Mat_VarReadNextInfo@plt+0xde8>
   11da0:	ldr	r0, [pc, #172]	; 11e54 <Mat_VarReadNextInfo@plt+0xe34>
   11da4:	vcvt.f64.s32	d7, s15
   11da8:	vmul.f64	d7, d7, d6
   11dac:	vmov	r2, r3, d7
   11db0:	b	11d14 <Mat_VarReadNextInfo@plt+0xcf4>
   11db4:	cmp	r0, #1024	; 0x400
   11db8:	bls	11dd8 <Mat_VarReadNextInfo@plt+0xdb8>
   11dbc:	vmov	s15, r0
   11dc0:	vldr	d6, [pc, #72]	; 11e10 <Mat_VarReadNextInfo@plt+0xdf0>
   11dc4:	ldr	r0, [pc, #140]	; 11e58 <Mat_VarReadNextInfo@plt+0xe38>
   11dc8:	vcvt.f64.s32	d7, s15
   11dcc:	vmul.f64	d7, d7, d6
   11dd0:	vmov	r2, r3, d7
   11dd4:	b	11d14 <Mat_VarReadNextInfo@plt+0xcf4>
   11dd8:	ldr	r0, [pc, #124]	; 11e5c <Mat_VarReadNextInfo@plt+0xe3c>
   11ddc:	bl	10df8 <printf@plt>
   11de0:	b	11d18 <Mat_VarReadNextInfo@plt+0xcf8>
   11de4:	ldr	r0, [pc, #116]	; 11e60 <Mat_VarReadNextInfo@plt+0xe40>
   11de8:	b	11ddc <Mat_VarReadNextInfo@plt+0xdbc>
   11dec:	nop			; (mov r0, r0)
   11df0:	andeq	r0, r0, r0
   11df4:	svccc	0x00f00000	; IMB
   11df8:	andeq	r0, r0, r0
   11dfc:	submi	r0, r0, r0
   11e00:	andeq	r0, r0, r0
   11e04:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   11e08:	andeq	r0, r0, r0
   11e0c:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   11e10:	andeq	r0, r0, r0
   11e14:	svccc	0x00500000
   11e18:	andeq	r5, r2, r4, lsl #2
   11e1c:	strdeq	r3, [r1], -lr
   11e20:	andeq	r3, r1, ip, asr #23
   11e24:	ldrdeq	r3, [r1], -r1
   11e28:	andeq	r3, r1, r6, asr #23
   11e2c:	ldrdeq	r3, [r1], -r6
   11e30:	andeq	r3, r1, r4, lsl #24
   11e34:	andeq	r3, r1, sl, lsl #24
   11e38:	andeq	r3, r1, pc, lsl #24
   11e3c:	andeq	r3, r1, r4, lsl ip
   11e40:	andeq	r5, r2, r8, ror #3
   11e44:	andeq	r3, r1, pc, lsr #24
   11e48:	andeq	r3, r1, ip, asr fp
   11e4c:	andeq	r3, r1, sl, asr ip
   11e50:	andeq	r3, r1, sl, lsl ip
   11e54:	andeq	r3, r1, r8, lsr ip
   11e58:	andeq	r3, r1, r1, asr #24
   11e5c:	andeq	r3, r1, sl, asr #24
   11e60:	andeq	r3, r1, r2, asr ip
   11e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e68:	subs	sl, r0, #0
   11e6c:	sub	sp, sp, #20
   11e70:	beq	12040 <Mat_VarReadNextInfo@plt+0x1020>
   11e74:	ldr	r2, [sl, #16]
   11e78:	sub	r2, r2, #1
   11e7c:	cmp	r2, #14
   11e80:	ldrls	pc, [pc, r2, lsl #2]
   11e84:	b	1243c <Mat_VarReadNextInfo@plt+0x141c>
   11e88:	muleq	r1, r0, r3
   11e8c:	andeq	r2, r1, r8, lsr #4
   11e90:	andeq	r2, r1, ip, lsr r4
   11e94:	andeq	r2, r1, r0, lsl r2
   11e98:	andeq	r2, r1, r0, lsl r2
   11e9c:	andeq	r1, r1, r4, asr #29
   11ea0:	andeq	r1, r1, r4, asr #29
   11ea4:	andeq	r1, r1, r4, asr #29
   11ea8:	andeq	r1, r1, r4, asr #29
   11eac:	andeq	r1, r1, r4, asr #29
   11eb0:	andeq	r1, r1, r4, asr #29
   11eb4:	andeq	r1, r1, r4, asr #29
   11eb8:	andeq	r1, r1, r4, asr #29
   11ebc:	andeq	r1, r1, r4, asr #29
   11ec0:	andeq	r1, r1, r4, asr #29
   11ec4:	ldr	r2, [sl, #4]
   11ec8:	cmp	r2, #2
   11ecc:	bne	11fe4 <Mat_VarReadNextInfo@plt+0xfc4>
   11ed0:	ldr	r2, [sl, #40]	; 0x28
   11ed4:	cmp	r2, #0
   11ed8:	beq	12040 <Mat_VarReadNextInfo@plt+0x1020>
   11edc:	ldr	r0, [sl, #8]
   11ee0:	bl	10ef4 <Mat_SizeOf@plt>
   11ee4:	ldr	r4, [sl, #20]
   11ee8:	ldr	r7, [sl, #40]	; 0x28
   11eec:	cmp	r4, #0
   11ef0:	mov	r5, r0
   11ef4:	beq	11f84 <Mat_VarReadNextInfo@plt+0xf64>
   11ef8:	ldr	r3, [r7]
   11efc:	ldr	r8, [pc, #1344]	; 12444 <Mat_VarReadNextInfo@plt+0x1424>
   11f00:	ldr	r7, [r7, #4]
   11f04:	ldr	r9, [pc, #1340]	; 12448 <Mat_VarReadNextInfo@plt+0x1428>
   11f08:	mov	r6, #0
   11f0c:	str	r3, [sp, #4]
   11f10:	ldr	r1, [sl, #32]
   11f14:	ldr	r1, [r1]
   11f18:	cmp	r6, r1
   11f1c:	bcs	12040 <Mat_VarReadNextInfo@plt+0x1020>
   11f20:	mov	fp, #0
   11f24:	b	11f64 <Mat_VarReadNextInfo@plt+0xf44>
   11f28:	ldr	r4, [r1]
   11f2c:	ldr	r3, [sp, #4]
   11f30:	ldr	r0, [sl, #8]
   11f34:	mla	r4, r4, fp, r6
   11f38:	add	fp, fp, #1
   11f3c:	mul	r4, r5, r4
   11f40:	add	r1, r3, r4
   11f44:	bl	11b48 <Mat_VarReadNextInfo@plt+0xb28>
   11f48:	mov	r0, r8
   11f4c:	bl	10df8 <printf@plt>
   11f50:	add	r1, r7, r4
   11f54:	ldr	r0, [sl, #8]
   11f58:	bl	11b48 <Mat_VarReadNextInfo@plt+0xb28>
   11f5c:	mov	r0, r9
   11f60:	bl	10df8 <printf@plt>
   11f64:	ldr	r1, [sl, #32]
   11f68:	ldr	r0, [r1, #4]
   11f6c:	cmp	fp, r0
   11f70:	bcc	11f28 <Mat_VarReadNextInfo@plt+0xf08>
   11f74:	mov	r0, #10
   11f78:	bl	10f54 <putchar@plt>
   11f7c:	add	r6, r6, #1
   11f80:	b	11f10 <Mat_VarReadNextInfo@plt+0xef0>
   11f84:	mov	r8, #32
   11f88:	mov	r9, #10
   11f8c:	ldr	r2, [sl, #32]
   11f90:	ldr	r2, [r2]
   11f94:	cmp	r4, r2
   11f98:	bcs	12040 <Mat_VarReadNextInfo@plt+0x1020>
   11f9c:	mov	r6, #0
   11fa0:	b	11fc4 <Mat_VarReadNextInfo@plt+0xfa4>
   11fa4:	ldr	r1, [r2]
   11fa8:	ldr	r0, [sl, #8]
   11fac:	mla	r1, r1, r6, r4
   11fb0:	add	r6, r6, #1
   11fb4:	mla	r1, r5, r1, r7
   11fb8:	bl	11b48 <Mat_VarReadNextInfo@plt+0xb28>
   11fbc:	mov	r0, r8
   11fc0:	bl	10f54 <putchar@plt>
   11fc4:	ldr	r2, [sl, #32]
   11fc8:	ldr	r1, [r2, #4]
   11fcc:	cmp	r6, r1
   11fd0:	bcc	11fa4 <Mat_VarReadNextInfo@plt+0xf84>
   11fd4:	mov	r0, r9
   11fd8:	bl	10f54 <putchar@plt>
   11fdc:	add	r4, r4, #1
   11fe0:	b	11f8c <Mat_VarReadNextInfo@plt+0xf6c>
   11fe4:	cmp	r2, #3
   11fe8:	bne	12040 <Mat_VarReadNextInfo@plt+0x1020>
   11fec:	ldr	r2, [sl, #40]	; 0x28
   11ff0:	cmp	r2, #0
   11ff4:	beq	12040 <Mat_VarReadNextInfo@plt+0x1020>
   11ff8:	ldr	r0, [sl, #8]
   11ffc:	bl	10ef4 <Mat_SizeOf@plt>
   12000:	ldr	r4, [sl, #20]
   12004:	ldr	r7, [sl, #40]	; 0x28
   12008:	cmp	r4, #0
   1200c:	mov	r8, r0
   12010:	beq	1212c <Mat_VarReadNextInfo@plt+0x110c>
   12014:	ldr	r3, [r7]
   12018:	ldr	r5, [pc, #1068]	; 1244c <Mat_VarReadNextInfo@plt+0x142c>
   1201c:	str	r3, [sp, #4]
   12020:	ldr	r3, [r7, #4]
   12024:	ldr	r7, [pc, #1060]	; 12450 <Mat_VarReadNextInfo@plt+0x1430>
   12028:	mov	r4, #0
   1202c:	str	r3, [sp, #8]
   12030:	ldr	r2, [sl, #32]
   12034:	ldr	r2, [r2, #8]
   12038:	cmp	r4, r2
   1203c:	bcc	12048 <Mat_VarReadNextInfo@plt+0x1028>
   12040:	add	sp, sp, #20
   12044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12048:	mov	r2, r4
   1204c:	ldr	r1, [sl, #36]	; 0x24
   12050:	ldr	r0, [pc, #1020]	; 12454 <Mat_VarReadNextInfo@plt+0x1434>
   12054:	bl	10e4c <Mat_Message@plt>
   12058:	ldr	r9, [pc, #996]	; 12444 <Mat_VarReadNextInfo@plt+0x1424>
   1205c:	ldr	r2, [r5, #4]
   12060:	mov	r6, #0
   12064:	add	r2, r2, #1
   12068:	str	r2, [r5, #4]
   1206c:	ldr	r2, [sl, #32]
   12070:	ldr	r2, [r2]
   12074:	cmp	r6, r2
   12078:	bcs	12110 <Mat_VarReadNextInfo@plt+0x10f0>
   1207c:	mov	fp, #0
   12080:	b	12090 <Mat_VarReadNextInfo@plt+0x1070>
   12084:	mov	r0, r7
   12088:	bl	10df8 <printf@plt>
   1208c:	add	fp, fp, #1
   12090:	ldr	r2, [r5, #4]
   12094:	cmp	fp, r2
   12098:	bcc	12084 <Mat_VarReadNextInfo@plt+0x1064>
   1209c:	mov	r2, #0
   120a0:	ldr	r1, [sl, #32]
   120a4:	ldr	fp, [r1, #4]
   120a8:	cmp	fp, r2
   120ac:	bhi	120c0 <Mat_VarReadNextInfo@plt+0x10a0>
   120b0:	mov	r0, #10
   120b4:	bl	10f54 <putchar@plt>
   120b8:	add	r6, r6, #1
   120bc:	b	1206c <Mat_VarReadNextInfo@plt+0x104c>
   120c0:	mla	fp, fp, r4, r2
   120c4:	ldr	r1, [r1]
   120c8:	ldr	r3, [sp, #4]
   120cc:	ldr	r0, [sl, #8]
   120d0:	mla	fp, r1, fp, r6
   120d4:	str	r2, [sp, #12]
   120d8:	mul	fp, r8, fp
   120dc:	add	r1, r3, fp
   120e0:	bl	11b48 <Mat_VarReadNextInfo@plt+0xb28>
   120e4:	mov	r0, r9
   120e8:	bl	10df8 <printf@plt>
   120ec:	ldr	r3, [sp, #8]
   120f0:	ldr	r0, [sl, #8]
   120f4:	add	r1, r3, fp
   120f8:	bl	11b48 <Mat_VarReadNextInfo@plt+0xb28>
   120fc:	ldr	r0, [pc, #836]	; 12448 <Mat_VarReadNextInfo@plt+0x1428>
   12100:	bl	10df8 <printf@plt>
   12104:	ldr	r2, [sp, #12]
   12108:	add	r2, r2, #1
   1210c:	b	120a0 <Mat_VarReadNextInfo@plt+0x1080>
   12110:	ldr	r2, [r5, #4]
   12114:	mov	r0, #10
   12118:	sub	r2, r2, #1
   1211c:	str	r2, [r5, #4]
   12120:	add	r4, r4, #1
   12124:	bl	10f54 <putchar@plt>
   12128:	b	12030 <Mat_VarReadNextInfo@plt+0x1010>
   1212c:	ldr	r5, [pc, #792]	; 1244c <Mat_VarReadNextInfo@plt+0x142c>
   12130:	ldr	r9, [pc, #792]	; 12450 <Mat_VarReadNextInfo@plt+0x1430>
   12134:	ldr	r2, [sl, #32]
   12138:	ldr	r2, [r2, #8]
   1213c:	cmp	r4, r2
   12140:	bcs	12040 <Mat_VarReadNextInfo@plt+0x1020>
   12144:	mov	r2, r4
   12148:	ldr	r1, [sl, #36]	; 0x24
   1214c:	ldr	r0, [pc, #768]	; 12454 <Mat_VarReadNextInfo@plt+0x1434>
   12150:	bl	10e4c <Mat_Message@plt>
   12154:	ldr	r2, [r5, #4]
   12158:	mov	r6, #0
   1215c:	mov	fp, #10
   12160:	add	r2, r2, #1
   12164:	str	r2, [r5, #4]
   12168:	ldr	r2, [sl, #32]
   1216c:	ldr	r2, [r2]
   12170:	cmp	r6, r2
   12174:	bcs	121f4 <Mat_VarReadNextInfo@plt+0x11d4>
   12178:	mov	r2, #0
   1217c:	b	12194 <Mat_VarReadNextInfo@plt+0x1174>
   12180:	mov	r0, r9
   12184:	str	r2, [sp, #4]
   12188:	bl	10df8 <printf@plt>
   1218c:	ldr	r2, [sp, #4]
   12190:	add	r2, r2, #1
   12194:	ldr	r1, [r5, #4]
   12198:	cmp	r2, r1
   1219c:	bcc	12180 <Mat_VarReadNextInfo@plt+0x1160>
   121a0:	mov	r2, #0
   121a4:	ldr	r0, [sl, #32]
   121a8:	ldr	r1, [r0, #4]
   121ac:	cmp	r1, r2
   121b0:	bhi	121c4 <Mat_VarReadNextInfo@plt+0x11a4>
   121b4:	mov	r0, fp
   121b8:	bl	10f54 <putchar@plt>
   121bc:	add	r6, r6, #1
   121c0:	b	12168 <Mat_VarReadNextInfo@plt+0x1148>
   121c4:	mla	r1, r1, r4, r2
   121c8:	ldr	r0, [r0]
   121cc:	str	r2, [sp, #4]
   121d0:	mla	r1, r0, r1, r6
   121d4:	ldr	r0, [sl, #8]
   121d8:	mla	r1, r8, r1, r7
   121dc:	bl	11b48 <Mat_VarReadNextInfo@plt+0xb28>
   121e0:	mov	r0, #32
   121e4:	bl	10f54 <putchar@plt>
   121e8:	ldr	r2, [sp, #4]
   121ec:	add	r2, r2, #1
   121f0:	b	121a4 <Mat_VarReadNextInfo@plt+0x1184>
   121f4:	ldr	r2, [r5, #4]
   121f8:	mov	r0, #10
   121fc:	sub	r2, r2, #1
   12200:	str	r2, [r5, #4]
   12204:	add	r4, r4, #1
   12208:	bl	10f54 <putchar@plt>
   1220c:	b	12134 <Mat_VarReadNextInfo@plt+0x1114>
   12210:	ldr	r2, [pc, #564]	; 1244c <Mat_VarReadNextInfo@plt+0x142c>
   12214:	mov	r0, sl
   12218:	ldr	r1, [r2, #8]
   1221c:	add	sp, sp, #20
   12220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12224:	b	10f3c <Mat_VarPrint@plt>
   12228:	ldr	r1, [sl, #36]	; 0x24
   1222c:	cmp	r1, #0
   12230:	beq	1223c <Mat_VarReadNextInfo@plt+0x121c>
   12234:	ldr	r0, [pc, #540]	; 12458 <Mat_VarReadNextInfo@plt+0x1438>
   12238:	bl	10e4c <Mat_Message@plt>
   1223c:	ldr	r1, [sl, #4]
   12240:	ldr	r0, [pc, #532]	; 1245c <Mat_VarReadNextInfo@plt+0x143c>
   12244:	bl	10e4c <Mat_Message@plt>
   12248:	ldr	r2, [sl, #4]
   1224c:	cmp	r2, #0
   12250:	beq	12040 <Mat_VarReadNextInfo@plt+0x1020>
   12254:	ldr	r0, [pc, #516]	; 12460 <Mat_VarReadNextInfo@plt+0x1440>
   12258:	bl	10e4c <Mat_Message@plt>
   1225c:	mov	r0, sl
   12260:	bl	10da4 <Mat_VarGetNumberOfFields@plt>
   12264:	ldr	r1, [sl, #32]
   12268:	mov	r2, #1
   1226c:	ldr	r7, [r1]
   12270:	mov	r4, r0
   12274:	ldr	r0, [sl, #4]
   12278:	cmp	r2, r0
   1227c:	blt	122f8 <Mat_VarReadNextInfo@plt+0x12d8>
   12280:	cmp	r4, #0
   12284:	movle	r2, #0
   12288:	movgt	r2, #1
   1228c:	cmp	r7, #0
   12290:	movne	r5, #0
   12294:	andeq	r5, r2, #1
   12298:	cmp	r5, #0
   1229c:	beq	12324 <Mat_VarReadNextInfo@plt+0x1304>
   122a0:	mov	r0, sl
   122a4:	bl	10e7c <Mat_VarGetStructFieldnames@plt>
   122a8:	mov	r1, r4
   122ac:	mov	r7, r0
   122b0:	ldr	r0, [pc, #428]	; 12464 <Mat_VarReadNextInfo@plt+0x1444>
   122b4:	bl	10e4c <Mat_Message@plt>
   122b8:	ldr	r3, [pc, #396]	; 1244c <Mat_VarReadNextInfo@plt+0x142c>
   122bc:	cmp	r7, #0
   122c0:	mov	r5, r3
   122c4:	ldr	r2, [r3, #4]
   122c8:	movne	r6, #0
   122cc:	add	r2, r2, #1
   122d0:	str	r2, [r3, #4]
   122d4:	ldrne	r8, [pc, #396]	; 12468 <Mat_VarReadNextInfo@plt+0x1448>
   122d8:	bne	12308 <Mat_VarReadNextInfo@plt+0x12e8>
   122dc:	ldr	r3, [r5, #4]
   122e0:	sub	r3, r3, #1
   122e4:	str	r3, [r5, #4]
   122e8:	ldr	r0, [pc, #380]	; 1246c <Mat_VarReadNextInfo@plt+0x144c>
   122ec:	add	sp, sp, #20
   122f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122f4:	b	10e4c <Mat_Message@plt>
   122f8:	ldr	ip, [r1, r2, lsl #2]
   122fc:	add	r2, r2, #1
   12300:	mul	r7, ip, r7
   12304:	b	12278 <Mat_VarReadNextInfo@plt+0x1258>
   12308:	ldr	r1, [r7, r6, lsl #2]
   1230c:	mov	r0, r8
   12310:	add	r6, r6, #1
   12314:	bl	10e4c <Mat_Message@plt>
   12318:	cmp	r4, r6
   1231c:	bgt	12308 <Mat_VarReadNextInfo@plt+0x12e8>
   12320:	b	122dc <Mat_VarReadNextInfo@plt+0x12bc>
   12324:	cmp	r7, #0
   12328:	moveq	r2, #0
   1232c:	andne	r2, r2, #1
   12330:	cmp	r2, #0
   12334:	beq	12040 <Mat_VarReadNextInfo@plt+0x1020>
   12338:	mov	r1, r4
   1233c:	ldr	r0, [pc, #288]	; 12464 <Mat_VarReadNextInfo@plt+0x1444>
   12340:	bl	10e4c <Mat_Message@plt>
   12344:	ldr	r2, [pc, #256]	; 1244c <Mat_VarReadNextInfo@plt+0x142c>
   12348:	ldr	r8, [sl, #40]	; 0x28
   1234c:	mov	r6, r2
   12350:	ldr	r1, [r2, #4]
   12354:	cmp	r8, #0
   12358:	add	r1, r1, #1
   1235c:	str	r1, [r2, #4]
   12360:	mulne	r4, r4, r7
   12364:	bne	12384 <Mat_VarReadNextInfo@plt+0x1364>
   12368:	ldr	r3, [r6, #4]
   1236c:	sub	r3, r3, #1
   12370:	str	r3, [r6, #4]
   12374:	b	122e8 <Mat_VarReadNextInfo@plt+0x12c8>
   12378:	ldr	r0, [r8, r5, lsl #2]
   1237c:	bl	11e64 <Mat_VarReadNextInfo@plt+0xe44>
   12380:	add	r5, r5, #1
   12384:	cmp	r5, r4
   12388:	bne	12378 <Mat_VarReadNextInfo@plt+0x1358>
   1238c:	b	12368 <Mat_VarReadNextInfo@plt+0x1348>
   12390:	ldr	r1, [sl, #36]	; 0x24
   12394:	cmp	r1, #0
   12398:	beq	123a4 <Mat_VarReadNextInfo@plt+0x1384>
   1239c:	ldr	r0, [pc, #180]	; 12458 <Mat_VarReadNextInfo@plt+0x1438>
   123a0:	bl	10e4c <Mat_Message@plt>
   123a4:	ldr	r1, [sl, #4]
   123a8:	ldr	r0, [pc, #172]	; 1245c <Mat_VarReadNextInfo@plt+0x143c>
   123ac:	bl	10e4c <Mat_Message@plt>
   123b0:	ldr	r1, [sl, #4]
   123b4:	cmp	r1, #0
   123b8:	movne	r2, #1
   123bc:	ldrne	r0, [sl, #32]
   123c0:	ldrne	r7, [r0]
   123c4:	beq	12040 <Mat_VarReadNextInfo@plt+0x1020>
   123c8:	cmp	r2, r1
   123cc:	blt	12414 <Mat_VarReadNextInfo@plt+0x13f4>
   123d0:	ldr	r0, [pc, #152]	; 12470 <Mat_VarReadNextInfo@plt+0x1450>
   123d4:	bl	10e4c <Mat_Message@plt>
   123d8:	ldr	r0, [pc, #148]	; 12474 <Mat_VarReadNextInfo@plt+0x1454>
   123dc:	bl	10e4c <Mat_Message@plt>
   123e0:	ldr	r2, [pc, #100]	; 1244c <Mat_VarReadNextInfo@plt+0x142c>
   123e4:	ldr	r6, [sl, #40]	; 0x28
   123e8:	mov	r4, r2
   123ec:	ldr	r1, [r2, #4]
   123f0:	cmp	r6, #0
   123f4:	add	r1, r1, #1
   123f8:	str	r1, [r2, #4]
   123fc:	movne	r5, #0
   12400:	bne	12430 <Mat_VarReadNextInfo@plt+0x1410>
   12404:	ldr	r3, [r4, #4]
   12408:	sub	r3, r3, #1
   1240c:	str	r3, [r4, #4]
   12410:	b	122e8 <Mat_VarReadNextInfo@plt+0x12c8>
   12414:	ldr	ip, [r0, r2, lsl #2]
   12418:	add	r2, r2, #1
   1241c:	mul	r7, ip, r7
   12420:	b	123c8 <Mat_VarReadNextInfo@plt+0x13a8>
   12424:	ldr	r0, [r6, r5, lsl #2]
   12428:	bl	11e64 <Mat_VarReadNextInfo@plt+0xe44>
   1242c:	add	r5, r5, #1
   12430:	cmp	r5, r7
   12434:	bne	12424 <Mat_VarReadNextInfo@plt+0x1404>
   12438:	b	12404 <Mat_VarReadNextInfo@plt+0x13e4>
   1243c:	ldr	r0, [pc, #52]	; 12478 <Mat_VarReadNextInfo@plt+0x1458>
   12440:	b	122ec <Mat_VarReadNextInfo@plt+0x12cc>
   12444:	andeq	r3, r1, r3, ror #24
   12448:	andeq	r3, r1, r7, ror #24
   1244c:	andeq	r5, r2, r8, ror #3
   12450:	andeq	r3, r1, sl, lsr #24
   12454:	andeq	r3, r1, sl, ror #24
   12458:	andeq	r3, r1, r9, ror ip
   1245c:	andeq	r3, r1, r8, lsl #25
   12460:	muleq	r1, r7, ip
   12464:	andeq	r3, r1, sp, lsr #25
   12468:	andeq	r3, r1, fp, ror ip
   1246c:			; <UNDEFINED> instruction: 0x00013fbb
   12470:			; <UNDEFINED> instruction: 0x00013cba
   12474:			; <UNDEFINED> instruction: 0x00013cb8
   12478:	ldrdeq	r3, [r1], -r1
   1247c:	push	{r4, r5, r6, r7, r8, lr}
   12480:	mov	r5, r1
   12484:	ldr	r6, [pc, #44]	; 124b8 <Mat_VarReadNextInfo@plt+0x1498>
   12488:	ldr	r7, [pc, #44]	; 124bc <Mat_VarReadNextInfo@plt+0x149c>
   1248c:	mov	r4, #0
   12490:	ldr	r3, [r6, #4]
   12494:	cmp	r4, r3
   12498:	blt	124a8 <Mat_VarReadNextInfo@plt+0x1488>
   1249c:	mov	r0, r5
   124a0:	pop	{r4, r5, r6, r7, r8, lr}
   124a4:	b	10ea0 <puts@plt>
   124a8:	mov	r0, r7
   124ac:	bl	10df8 <printf@plt>
   124b0:	add	r4, r4, #1
   124b4:	b	12490 <Mat_VarReadNextInfo@plt+0x1470>
   124b8:	andeq	r5, r2, r8, ror #3
   124bc:	andeq	r3, r1, sl, lsr #24
   124c0:	push	{r4, r5, r6, lr}
   124c4:	mov	r5, r0
   124c8:	ldr	r6, [pc, #72]	; 12518 <Mat_VarReadNextInfo@plt+0x14f8>
   124cc:	mov	r4, #0
   124d0:	ldrb	r1, [r6], #1
   124d4:	cmp	r1, #0
   124d8:	bne	124ec <Mat_VarReadNextInfo@plt+0x14cc>
   124dc:	cmp	r4, #0
   124e0:	movne	r0, r4
   124e4:	moveq	r0, r5
   124e8:	pop	{r4, r5, r6, pc}
   124ec:	mov	r0, r5
   124f0:	bl	10f0c <strchr@plt>
   124f4:	cmp	r0, #0
   124f8:	beq	124d0 <Mat_VarReadNextInfo@plt+0x14b0>
   124fc:	clz	r3, r4
   12500:	lsr	r3, r3, #5
   12504:	cmp	r4, r0
   12508:	orrhi	r3, r3, #1
   1250c:	cmp	r3, #0
   12510:	movne	r4, r0
   12514:	b	124d0 <Mat_VarReadNextInfo@plt+0x14b0>
   12518:	ldrdeq	r3, [r1], -r7
   1251c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12520:	mov	fp, r2
   12524:	ldr	r8, [sp, #40]	; 0x28
   12528:	ldr	r2, [r8, #4]
   1252c:	cmp	r2, r0
   12530:	cmpne	r0, #1
   12534:	movne	ip, #1
   12538:	moveq	ip, #0
   1253c:	bne	12594 <Mat_VarReadNextInfo@plt+0x1574>
   12540:	cmp	r0, #1
   12544:	movne	sl, #1
   12548:	mov	r5, r3
   1254c:	mov	r7, r0
   12550:	moveq	r3, r0
   12554:	movne	r6, r1
   12558:	movne	r9, sl
   1255c:	bne	12704 <Mat_VarReadNextInfo@plt+0x16e4>
   12560:	cmp	ip, r2
   12564:	blt	1259c <Mat_VarReadNextInfo@plt+0x157c>
   12568:	ldr	r0, [fp]
   1256c:	cmp	r0, #0
   12570:	bgt	125b0 <Mat_VarReadNextInfo@plt+0x1590>
   12574:	ldr	r3, [pc, #644]	; 12800 <Mat_VarReadNextInfo@plt+0x17e0>
   12578:	ldr	r0, [pc, #644]	; 12804 <Mat_VarReadNextInfo@plt+0x17e4>
   1257c:	ldr	r1, [r3]
   12580:	bl	10ff0 <fputs@plt>
   12584:	mov	r7, #0
   12588:	cmp	r7, #0
   1258c:	ldr	sl, [r5]
   12590:	bne	1270c <Mat_VarReadNextInfo@plt+0x16ec>
   12594:	mov	sl, #0
   12598:	b	1270c <Mat_VarReadNextInfo@plt+0x16ec>
   1259c:	ldr	r0, [r8, #32]
   125a0:	ldr	r0, [r0, ip, lsl #2]
   125a4:	add	ip, ip, #1
   125a8:	mul	r3, r0, r3
   125ac:	b	12560 <Mat_VarReadNextInfo@plt+0x1540>
   125b0:	ldr	r2, [r5]
   125b4:	cmp	r3, r2
   125b8:	ldrlt	r3, [pc, #576]	; 12800 <Mat_VarReadNextInfo@plt+0x17e0>
   125bc:	ldrlt	r0, [pc, #580]	; 12808 <Mat_VarReadNextInfo@plt+0x17e8>
   125c0:	ldrlt	r1, [r3]
   125c4:	blt	12580 <Mat_VarReadNextInfo@plt+0x1560>
   125c8:	ldr	ip, [r1]
   125cc:	cmp	r3, ip
   125d0:	ble	125f0 <Mat_VarReadNextInfo@plt+0x15d0>
   125d4:	cmp	r2, ip
   125d8:	movge	lr, #0
   125dc:	movlt	lr, #1
   125e0:	cmp	r2, #0
   125e4:	movle	lr, #0
   125e8:	cmp	lr, #0
   125ec:	beq	12600 <Mat_VarReadNextInfo@plt+0x15e0>
   125f0:	ldr	r3, [pc, #520]	; 12800 <Mat_VarReadNextInfo@plt+0x17e0>
   125f4:	ldr	r0, [pc, #528]	; 1280c <Mat_VarReadNextInfo@plt+0x17ec>
   125f8:	ldr	r1, [r3]
   125fc:	b	12580 <Mat_VarReadNextInfo@plt+0x1560>
   12600:	cmn	r2, #1
   12604:	bne	12678 <Mat_VarReadNextInfo@plt+0x1658>
   12608:	cmn	ip, #1
   1260c:	moveq	r2, #1
   12610:	subeq	r3, r3, #1
   12614:	streq	r2, [r5]
   12618:	streq	r3, [r1]
   1261c:	beq	12588 <Mat_VarReadNextInfo@plt+0x1568>
   12620:	cmp	r0, #1
   12624:	str	r3, [r5]
   12628:	bne	12640 <Mat_VarReadNextInfo@plt+0x1620>
   1262c:	ldr	r3, [r1]
   12630:	cmp	r3, #0
   12634:	strlt	lr, [r1]
   12638:	movlt	r7, r0
   1263c:	b	12588 <Mat_VarReadNextInfo@plt+0x1568>
   12640:	ldr	r2, [r1]
   12644:	vldr	s0, [fp]
   12648:	sub	r3, r3, r2
   1264c:	sub	r3, r3, #1
   12650:	vmov	s15, r3
   12654:	vcvt.f64.s32	d0, s0
   12658:	vcvt.f64.s32	d7, s15
   1265c:	vdiv.f64	d0, d7, d0
   12660:	bl	10e88 <floor@plt>
   12664:	vcvt.s32.f64	s0, d0
   12668:	vmov	r3, s0
   1266c:	add	r3, r3, #1
   12670:	str	r3, [r5]
   12674:	b	12588 <Mat_VarReadNextInfo@plt+0x1568>
   12678:	cmp	r2, #0
   1267c:	ble	12588 <Mat_VarReadNextInfo@plt+0x1568>
   12680:	sub	r2, r2, ip
   12684:	sub	r2, r2, #1
   12688:	vmov	s15, r2
   1268c:	vcvt.f64.s32	d0, s15
   12690:	vmov	s15, r0
   12694:	vcvt.f64.s32	d7, s15
   12698:	vdiv.f64	d0, d0, d7
   1269c:	b	12660 <Mat_VarReadNextInfo@plt+0x1640>
   126a0:	ldr	r2, [fp, ip, lsl #2]
   126a4:	lsl	r1, ip, #2
   126a8:	cmp	r2, #0
   126ac:	bgt	126c4 <Mat_VarReadNextInfo@plt+0x16a4>
   126b0:	ldr	r3, [pc, #328]	; 12800 <Mat_VarReadNextInfo@plt+0x17e0>
   126b4:	ldr	r0, [pc, #328]	; 12804 <Mat_VarReadNextInfo@plt+0x17e4>
   126b8:	ldr	r1, [r3]
   126bc:	bl	10ff0 <fputs@plt>
   126c0:	b	12594 <Mat_VarReadNextInfo@plt+0x1574>
   126c4:	ldr	r3, [r5]
   126c8:	ldr	lr, [r8, #32]
   126cc:	cmn	r3, #1
   126d0:	add	r4, ip, #1
   126d4:	bne	12714 <Mat_VarReadNextInfo@plt+0x16f4>
   126d8:	ldr	r3, [r6]
   126dc:	cmn	r3, #1
   126e0:	bne	1271c <Mat_VarReadNextInfo@plt+0x16fc>
   126e4:	str	r9, [r5]
   126e8:	ldr	r3, [lr, r1]
   126ec:	sub	r3, r3, #1
   126f0:	str	r3, [r6]
   126f4:	ldr	r3, [r5], #4
   126f8:	mov	ip, r4
   126fc:	add	r6, r6, #4
   12700:	mul	sl, r3, sl
   12704:	cmp	ip, r7
   12708:	blt	126a0 <Mat_VarReadNextInfo@plt+0x1680>
   1270c:	mov	r0, sl
   12710:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12714:	cmp	r3, #0
   12718:	bge	1277c <Mat_VarReadNextInfo@plt+0x175c>
   1271c:	cmp	r2, #1
   12720:	bne	12740 <Mat_VarReadNextInfo@plt+0x1720>
   12724:	ldr	r3, [lr, r1]
   12728:	str	r3, [r5]
   1272c:	ldr	r3, [r6]
   12730:	cmp	r3, #0
   12734:	bge	126f4 <Mat_VarReadNextInfo@plt+0x16d4>
   12738:	mov	r3, #0
   1273c:	b	126f0 <Mat_VarReadNextInfo@plt+0x16d0>
   12740:	ldr	r3, [r6]
   12744:	ldr	r1, [lr, r1]
   12748:	mvn	r3, r3
   1274c:	add	r3, r3, r1
   12750:	vmov	s15, r3
   12754:	vcvt.f64.u32	d7, s15
   12758:	vmov	s13, r2
   1275c:	vcvt.f64.s32	d0, s13
   12760:	vdiv.f64	d0, d7, d0
   12764:	bl	10e88 <floor@plt>
   12768:	vcvt.s32.f64	s0, d0
   1276c:	vmov	r3, s0
   12770:	add	r3, r3, #1
   12774:	str	r3, [r5]
   12778:	b	126f4 <Mat_VarReadNextInfo@plt+0x16d4>
   1277c:	ldr	ip, [lr, r1]
   12780:	cmp	r3, ip
   12784:	bls	127a0 <Mat_VarReadNextInfo@plt+0x1780>
   12788:	ldr	r1, [pc, #128]	; 12810 <Mat_VarReadNextInfo@plt+0x17f0>
   1278c:	mov	r2, r4
   12790:	ldr	r3, [pc, #104]	; 12800 <Mat_VarReadNextInfo@plt+0x17e0>
   12794:	ldr	r0, [r3]
   12798:	bl	10f24 <fprintf@plt>
   1279c:	b	12594 <Mat_VarReadNextInfo@plt+0x1574>
   127a0:	ldr	r1, [r6]
   127a4:	cmp	ip, r1
   127a8:	bhi	127b8 <Mat_VarReadNextInfo@plt+0x1798>
   127ac:	mov	r2, r4
   127b0:	ldr	r1, [pc, #92]	; 12814 <Mat_VarReadNextInfo@plt+0x17f4>
   127b4:	b	12790 <Mat_VarReadNextInfo@plt+0x1770>
   127b8:	cmp	r3, #0
   127bc:	movle	ip, #0
   127c0:	movgt	ip, #1
   127c4:	cmp	r3, r1
   127c8:	movge	ip, #0
   127cc:	cmp	ip, #0
   127d0:	bne	127ac <Mat_VarReadNextInfo@plt+0x178c>
   127d4:	add	ip, r1, #1
   127d8:	cmp	r3, ip
   127dc:	streq	r9, [r5]
   127e0:	beq	126f4 <Mat_VarReadNextInfo@plt+0x16d4>
   127e4:	cmp	r3, #0
   127e8:	ble	126f4 <Mat_VarReadNextInfo@plt+0x16d4>
   127ec:	sub	r3, r3, r1
   127f0:	sub	r3, r3, #1
   127f4:	vmov	s15, r3
   127f8:	vcvt.f64.s32	d7, s15
   127fc:	b	12758 <Mat_VarReadNextInfo@plt+0x1738>
   12800:	andeq	r5, r2, r0, ror #3
   12804:	ldrdeq	r3, [r1], -sp
   12808:	strdeq	r3, [r1], -r5
   1280c:	andeq	r3, r1, r7, lsl #26
   12810:	andeq	r3, r1, sl, lsl sp
   12814:	andeq	r3, r1, ip, lsr sp
   12818:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1281c:	mov	r4, #0
   12820:	ldr	r5, [sp, #48]	; 0x30
   12824:	ldr	r9, [pc, #464]	; 129fc <Mat_VarReadNextInfo@plt+0x19dc>
   12828:	mov	r6, r0
   1282c:	mov	r8, r2
   12830:	add	fp, r0, #1
   12834:	mov	sl, r4
   12838:	str	r1, [sp]
   1283c:	str	r3, [sp, #4]
   12840:	ldrb	r1, [r6, #1]
   12844:	add	r7, r6, #1
   12848:	cmp	r1, #44	; 0x2c
   1284c:	bne	128f4 <Mat_VarReadNextInfo@plt+0x18d4>
   12850:	cmp	sl, #2
   12854:	bne	12888 <Mat_VarReadNextInfo@plt+0x1868>
   12858:	mov	r3, #0
   1285c:	strb	r3, [r7]
   12860:	mov	r1, r9
   12864:	mov	r0, fp
   12868:	bl	10de0 <strcmp@plt>
   1286c:	cmp	r0, #0
   12870:	mvneq	r3, #0
   12874:	beq	128b8 <Mat_VarReadNextInfo@plt+0x1898>
   12878:	mov	r0, fp
   1287c:	bl	10fc0 <atoi@plt>
   12880:	str	r0, [r5, r4, lsl #2]
   12884:	b	128bc <Mat_VarReadNextInfo@plt+0x189c>
   12888:	cmp	sl, #1
   1288c:	beq	12858 <Mat_VarReadNextInfo@plt+0x1838>
   12890:	cmp	sl, #0
   12894:	bne	128bc <Mat_VarReadNextInfo@plt+0x189c>
   12898:	strb	sl, [r7]
   1289c:	mov	r1, r9
   128a0:	mov	r0, fp
   128a4:	bl	10de0 <strcmp@plt>
   128a8:	cmp	r0, #0
   128ac:	bne	128e0 <Mat_VarReadNextInfo@plt+0x18c0>
   128b0:	mvn	r3, #0
   128b4:	str	r3, [r8, r4, lsl #2]
   128b8:	str	r3, [r5, r4, lsl #2]
   128bc:	add	r4, r4, #1
   128c0:	add	fp, r6, #2
   128c4:	mov	sl, #0
   128c8:	ldr	r3, [sp]
   128cc:	mov	r6, r7
   128d0:	cmp	r7, r3
   128d4:	bne	12840 <Mat_VarReadNextInfo@plt+0x1820>
   128d8:	add	sp, sp, #12
   128dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128e0:	mov	r0, fp
   128e4:	bl	10fc0 <atoi@plt>
   128e8:	sub	r3, r0, #1
   128ec:	str	r3, [r8, r4, lsl #2]
   128f0:	b	12880 <Mat_VarReadNextInfo@plt+0x1860>
   128f4:	cmp	r1, #58	; 0x3a
   128f8:	bne	1296c <Mat_VarReadNextInfo@plt+0x194c>
   128fc:	mov	r3, #0
   12900:	strb	r3, [r7]
   12904:	mov	r1, r9
   12908:	mov	r0, fp
   1290c:	bl	10de0 <strcmp@plt>
   12910:	cmp	r0, #0
   12914:	bne	12938 <Mat_VarReadNextInfo@plt+0x1918>
   12918:	cmp	sl, #0
   1291c:	mvneq	r2, #0
   12920:	streq	r2, [r8, r4, lsl #2]
   12924:	beq	129a8 <Mat_VarReadNextInfo@plt+0x1988>
   12928:	cmp	sl, #1
   1292c:	bne	129b4 <Mat_VarReadNextInfo@plt+0x1994>
   12930:	mvn	r2, #0
   12934:	b	129a4 <Mat_VarReadNextInfo@plt+0x1984>
   12938:	mov	r0, fp
   1293c:	bl	10fc0 <atoi@plt>
   12940:	cmp	sl, #0
   12944:	subeq	r0, r0, #1
   12948:	streq	r0, [r8, r4, lsl #2]
   1294c:	beq	129a8 <Mat_VarReadNextInfo@plt+0x1988>
   12950:	cmp	sl, #1
   12954:	ldreq	r3, [sp, #4]
   12958:	streq	r0, [r3, r4, lsl #2]
   1295c:	beq	129a8 <Mat_VarReadNextInfo@plt+0x1988>
   12960:	cmp	sl, #2
   12964:	bne	129bc <Mat_VarReadNextInfo@plt+0x199c>
   12968:	b	129f4 <Mat_VarReadNextInfo@plt+0x19d4>
   1296c:	cmp	r1, #125	; 0x7d
   12970:	cmpne	r1, #41	; 0x29
   12974:	bne	128c8 <Mat_VarReadNextInfo@plt+0x18a8>
   12978:	mov	r3, #0
   1297c:	strb	r3, [r7]
   12980:	mov	r1, r9
   12984:	mov	r0, fp
   12988:	bl	10de0 <strcmp@plt>
   1298c:	cmp	r0, #0
   12990:	bne	129d4 <Mat_VarReadNextInfo@plt+0x19b4>
   12994:	cmp	sl, #0
   12998:	mvneq	r2, #0
   1299c:	streq	r2, [r8, r4, lsl #2]
   129a0:	bne	12928 <Mat_VarReadNextInfo@plt+0x1908>
   129a4:	str	r2, [r5, r4, lsl #2]
   129a8:	add	sl, sl, #1
   129ac:	add	fp, r6, #2
   129b0:	b	128c8 <Mat_VarReadNextInfo@plt+0x18a8>
   129b4:	cmp	sl, #2
   129b8:	beq	12930 <Mat_VarReadNextInfo@plt+0x1910>
   129bc:	ldr	r3, [pc, #60]	; 12a00 <Mat_VarReadNextInfo@plt+0x19e0>
   129c0:	add	r2, r4, #1
   129c4:	ldr	r1, [pc, #56]	; 12a04 <Mat_VarReadNextInfo@plt+0x19e4>
   129c8:	ldr	r0, [r3]
   129cc:	bl	10f24 <fprintf@plt>
   129d0:	b	129a8 <Mat_VarReadNextInfo@plt+0x1988>
   129d4:	mov	r0, fp
   129d8:	bl	10fc0 <atoi@plt>
   129dc:	cmp	sl, #0
   129e0:	subeq	r2, r0, #1
   129e4:	streq	r2, [r8, r4, lsl #2]
   129e8:	beq	129f4 <Mat_VarReadNextInfo@plt+0x19d4>
   129ec:	cmp	sl, #1
   129f0:	bne	12960 <Mat_VarReadNextInfo@plt+0x1940>
   129f4:	str	r0, [r5, r4, lsl #2]
   129f8:	b	129a8 <Mat_VarReadNextInfo@plt+0x1988>
   129fc:	andeq	r3, r1, pc, asr sp
   12a00:	andeq	r5, r2, r0, ror #3
   12a04:	andeq	r3, r1, r3, ror #26
   12a08:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a0c:	sub	r7, r2, r1
   12a10:	sub	r9, r1, r0
   12a14:	mov	sl, r0
   12a18:	mov	r5, r1
   12a1c:	mov	r0, r9
   12a20:	mov	r1, r7
   12a24:	mov	fp, r2
   12a28:	mov	r8, r3
   12a2c:	bl	13abc <getopt_long_only@@Base+0x44c>
   12a30:	mov	r6, r7
   12a34:	mov	r4, r1
   12a38:	cmp	r4, #0
   12a3c:	bne	12a60 <Mat_VarReadNextInfo@plt+0x1a40>
   12a40:	mov	r1, r6
   12a44:	sub	r0, fp, sl
   12a48:	bl	1389c <getopt_long_only@@Base+0x22c>
   12a4c:	add	ip, r8, r5, lsl #2
   12a50:	mov	r2, r4
   12a54:	cmp	r2, r6
   12a58:	blt	12a78 <Mat_VarReadNextInfo@plt+0x1a58>
   12a5c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a60:	mov	r1, r4
   12a64:	mov	r0, r6
   12a68:	bl	13abc <getopt_long_only@@Base+0x44c>
   12a6c:	mov	r6, r4
   12a70:	mov	r4, r1
   12a74:	b	12a38 <Mat_VarReadNextInfo@plt+0x1a18>
   12a78:	add	r3, r2, r5
   12a7c:	mov	r1, r4
   12a80:	cmp	r1, r0
   12a84:	addge	r2, r2, #1
   12a88:	bge	12a54 <Mat_VarReadNextInfo@plt+0x1a34>
   12a8c:	cmp	r3, r5
   12a90:	subge	r3, r3, r9
   12a94:	addlt	r3, r3, r7
   12a98:	ldr	sl, [ip, r2, lsl #2]
   12a9c:	ldr	lr, [r8, r3, lsl #2]
   12aa0:	add	r1, r1, #1
   12aa4:	str	sl, [r8, r3, lsl #2]
   12aa8:	str	lr, [ip, r2, lsl #2]
   12aac:	b	12a80 <Mat_VarReadNextInfo@plt+0x1a60>
   12ab0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ab4:	sub	sp, sp, #44	; 0x2c
   12ab8:	ldr	r5, [pc, #1040]	; 12ed0 <Mat_VarReadNextInfo@plt+0x1eb0>
   12abc:	str	r3, [sp, #24]
   12ac0:	ldr	r3, [pc, #1036]	; 12ed4 <Mat_VarReadNextInfo@plt+0x1eb4>
   12ac4:	str	r0, [sp, #28]
   12ac8:	str	r1, [sp, #4]
   12acc:	str	r2, [sp, #16]
   12ad0:	ldr	r7, [pc, r3]
   12ad4:	ldr	r3, [pc, #1020]	; 12ed8 <Mat_VarReadNextInfo@plt+0x1eb8>
   12ad8:	add	r5, pc, r5
   12adc:	add	r3, pc, r3
   12ae0:	ldr	r3, [r3]
   12ae4:	cmp	r3, #1
   12ae8:	beq	12b08 <Mat_VarReadNextInfo@plt+0x1ae8>
   12aec:	cmp	r3, #2
   12af0:	beq	12bfc <Mat_VarReadNextInfo@plt+0x1bdc>
   12af4:	cmp	r3, #0
   12af8:	bne	12c08 <Mat_VarReadNextInfo@plt+0x1be8>
   12afc:	ldr	r8, [pc, #984]	; 12edc <Mat_VarReadNextInfo@plt+0x1ebc>
   12b00:	add	r8, pc, r8
   12b04:	b	12b10 <Mat_VarReadNextInfo@plt+0x1af0>
   12b08:	ldr	r8, [pc, #976]	; 12ee0 <Mat_VarReadNextInfo@plt+0x1ec0>
   12b0c:	add	r8, pc, r8
   12b10:	ldr	r3, [pc, #972]	; 12ee4 <Mat_VarReadNextInfo@plt+0x1ec4>
   12b14:	mov	r1, #61	; 0x3d
   12b18:	mov	r0, r7
   12b1c:	ldr	r3, [r5, r3]
   12b20:	str	r3, [sp]
   12b24:	ldr	r3, [r3]
   12b28:	str	r3, [sp, #12]
   12b2c:	add	r3, r3, #1
   12b30:	str	r3, [sp, #20]
   12b34:	ldr	r3, [sp]
   12b38:	ldr	r2, [sp, #20]
   12b3c:	str	r2, [r3]
   12b40:	bl	10f0c <strchr@plt>
   12b44:	subs	sl, r0, #0
   12b48:	subne	fp, sl, r7
   12b4c:	addne	sl, sl, #1
   12b50:	bne	12b60 <Mat_VarReadNextInfo@plt+0x1b40>
   12b54:	mov	r0, r7
   12b58:	bl	10f00 <strlen@plt>
   12b5c:	mov	fp, r0
   12b60:	ldr	r2, [sp, #84]	; 0x54
   12b64:	ldr	r3, [sp, #16]
   12b68:	mvn	r4, #0
   12b6c:	mov	r9, #0
   12b70:	and	r2, r2, #4
   12b74:	str	r9, [sp, #8]
   12b78:	str	r2, [sp, #32]
   12b7c:	ldr	r6, [r3]
   12b80:	cmp	r6, #0
   12b84:	bne	12c14 <Mat_VarReadNextInfo@plt+0x1bf4>
   12b88:	eor	r6, r6, #1
   12b8c:	cmp	r9, #0
   12b90:	moveq	r9, #0
   12b94:	andne	r9, r6, #1
   12b98:	cmp	r9, #0
   12b9c:	beq	12cdc <Mat_VarReadNextInfo@plt+0x1cbc>
   12ba0:	ldr	r3, [pc, #832]	; 12ee8 <Mat_VarReadNextInfo@plt+0x1ec8>
   12ba4:	ldr	r3, [r5, r3]
   12ba8:	ldr	r3, [r3]
   12bac:	cmp	r3, #0
   12bb0:	beq	12bdc <Mat_VarReadNextInfo@plt+0x1bbc>
   12bb4:	ldr	r3, [sp, #4]
   12bb8:	ldrb	r3, [r3]
   12bbc:	cmp	r3, #58	; 0x3a
   12bc0:	beq	12bdc <Mat_VarReadNextInfo@plt+0x1bbc>
   12bc4:	ldr	r0, [pc, #800]	; 12eec <Mat_VarReadNextInfo@plt+0x1ecc>
   12bc8:	mov	r3, r7
   12bcc:	mov	r2, fp
   12bd0:	mov	r1, r8
   12bd4:	add	r0, pc, r0
   12bd8:	bl	10f18 <warnx@plt>
   12bdc:	ldr	r3, [pc, #780]	; 12ef0 <Mat_VarReadNextInfo@plt+0x1ed0>
   12be0:	mov	r2, #0
   12be4:	ldr	r3, [r5, r3]
   12be8:	mov	r4, #63	; 0x3f
   12bec:	str	r2, [r3]
   12bf0:	mov	r0, r4
   12bf4:	add	sp, sp, #44	; 0x2c
   12bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bfc:	ldr	r8, [pc, #752]	; 12ef4 <Mat_VarReadNextInfo@plt+0x1ed4>
   12c00:	add	r8, pc, r8
   12c04:	b	12b10 <Mat_VarReadNextInfo@plt+0x1af0>
   12c08:	ldr	r8, [pc, #744]	; 12ef8 <Mat_VarReadNextInfo@plt+0x1ed8>
   12c0c:	add	r8, pc, r8
   12c10:	b	12b10 <Mat_VarReadNextInfo@plt+0x1af0>
   12c14:	mov	r2, fp
   12c18:	mov	r1, r6
   12c1c:	mov	r0, r7
   12c20:	str	r3, [sp, #36]	; 0x24
   12c24:	bl	10ffc <strncmp@plt>
   12c28:	ldr	r3, [sp, #36]	; 0x24
   12c2c:	cmp	r0, #0
   12c30:	bne	12cb4 <Mat_VarReadNextInfo@plt+0x1c94>
   12c34:	mov	r0, r6
   12c38:	bl	10f00 <strlen@plt>
   12c3c:	cmp	fp, r0
   12c40:	beq	12cd0 <Mat_VarReadNextInfo@plt+0x1cb0>
   12c44:	ldr	r2, [sp, #80]	; 0x50
   12c48:	ldr	r3, [sp, #36]	; 0x24
   12c4c:	adds	r2, r2, #0
   12c50:	movne	r2, #1
   12c54:	cmp	fp, #1
   12c58:	movne	r2, #0
   12c5c:	cmp	r2, #0
   12c60:	bne	12cb4 <Mat_VarReadNextInfo@plt+0x1c94>
   12c64:	cmn	r4, #1
   12c68:	ldreq	r4, [sp, #8]
   12c6c:	beq	12cb4 <Mat_VarReadNextInfo@plt+0x1c94>
   12c70:	ldr	r2, [sp, #32]
   12c74:	cmp	r2, #0
   12c78:	bne	12cc8 <Mat_VarReadNextInfo@plt+0x1ca8>
   12c7c:	ldr	r2, [sp, #16]
   12c80:	ldr	r0, [r3, #4]
   12c84:	add	r2, r2, r4, lsl #4
   12c88:	ldr	r1, [r2, #4]
   12c8c:	cmp	r0, r1
   12c90:	bne	12cc8 <Mat_VarReadNextInfo@plt+0x1ca8>
   12c94:	ldr	r0, [r3, #8]
   12c98:	ldr	r1, [r2, #8]
   12c9c:	cmp	r0, r1
   12ca0:	bne	12cc8 <Mat_VarReadNextInfo@plt+0x1ca8>
   12ca4:	ldr	r1, [r3, #12]
   12ca8:	ldr	r2, [r2, #12]
   12cac:	cmp	r1, r2
   12cb0:	movne	r9, #1
   12cb4:	ldr	r2, [sp, #8]
   12cb8:	add	r3, r3, #16
   12cbc:	add	r2, r2, #1
   12cc0:	str	r2, [sp, #8]
   12cc4:	b	12b7c <Mat_VarReadNextInfo@plt+0x1b5c>
   12cc8:	mov	r9, #1
   12ccc:	b	12cb4 <Mat_VarReadNextInfo@plt+0x1c94>
   12cd0:	ldr	r4, [sp, #8]
   12cd4:	mov	r6, #1
   12cd8:	b	12b88 <Mat_VarReadNextInfo@plt+0x1b68>
   12cdc:	cmn	r4, #1
   12ce0:	beq	12e78 <Mat_VarReadNextInfo@plt+0x1e58>
   12ce4:	ldr	r3, [sp, #16]
   12ce8:	adds	r2, sl, #0
   12cec:	add	r6, r3, r4, lsl #4
   12cf0:	movne	r2, #1
   12cf4:	ldr	r3, [r6, #4]
   12cf8:	cmp	r3, #0
   12cfc:	movne	r2, #0
   12d00:	cmp	r2, #0
   12d04:	beq	12d64 <Mat_VarReadNextInfo@plt+0x1d44>
   12d08:	ldr	r3, [pc, #472]	; 12ee8 <Mat_VarReadNextInfo@plt+0x1ec8>
   12d0c:	ldr	r3, [r5, r3]
   12d10:	ldr	r3, [r3]
   12d14:	cmp	r3, #0
   12d18:	beq	12d48 <Mat_VarReadNextInfo@plt+0x1d28>
   12d1c:	ldr	r3, [sp, #4]
   12d20:	ldrb	r3, [r3]
   12d24:	cmp	r3, #58	; 0x3a
   12d28:	beq	12d48 <Mat_VarReadNextInfo@plt+0x1d28>
   12d2c:	ldr	r0, [pc, #456]	; 12efc <Mat_VarReadNextInfo@plt+0x1edc>
   12d30:	mov	r3, r7
   12d34:	add	r0, pc, r0
   12d38:	mov	r2, fp
   12d3c:	mov	r1, r8
   12d40:	add	r0, r0, #29
   12d44:	bl	10f18 <warnx@plt>
   12d48:	ldr	r3, [r6, #8]
   12d4c:	cmp	r3, #0
   12d50:	bne	12bdc <Mat_VarReadNextInfo@plt+0x1bbc>
   12d54:	ldr	r3, [pc, #404]	; 12ef0 <Mat_VarReadNextInfo@plt+0x1ed0>
   12d58:	ldr	r2, [r6, #12]
   12d5c:	ldr	r3, [r5, r3]
   12d60:	b	12be8 <Mat_VarReadNextInfo@plt+0x1bc8>
   12d64:	sub	r2, r3, #1
   12d68:	cmp	r2, #1
   12d6c:	bhi	12d8c <Mat_VarReadNextInfo@plt+0x1d6c>
   12d70:	cmp	sl, #0
   12d74:	beq	12db0 <Mat_VarReadNextInfo@plt+0x1d90>
   12d78:	ldr	r2, [pc, #384]	; 12f00 <Mat_VarReadNextInfo@plt+0x1ee0>
   12d7c:	cmp	r3, #1
   12d80:	ldr	r2, [r5, r2]
   12d84:	str	sl, [r2]
   12d88:	beq	12de0 <Mat_VarReadNextInfo@plt+0x1dc0>
   12d8c:	ldr	r3, [sp, #24]
   12d90:	cmp	r3, #0
   12d94:	strne	r4, [r3]
   12d98:	ldr	r3, [r6, #8]
   12d9c:	ldr	r4, [r6, #12]
   12da0:	cmp	r3, #0
   12da4:	strne	r4, [r3]
   12da8:	movne	r4, #0
   12dac:	b	12bf0 <Mat_VarReadNextInfo@plt+0x1bd0>
   12db0:	cmp	r3, #1
   12db4:	bne	12d8c <Mat_VarReadNextInfo@plt+0x1d6c>
   12db8:	ldr	r2, [sp]
   12dbc:	ldr	r3, [sp, #12]
   12dc0:	add	r3, r3, #2
   12dc4:	str	r3, [r2]
   12dc8:	ldr	r3, [sp, #28]
   12dcc:	ldr	r2, [sp, #20]
   12dd0:	ldr	r2, [r3, r2, lsl #2]
   12dd4:	ldr	r3, [pc, #292]	; 12f00 <Mat_VarReadNextInfo@plt+0x1ee0>
   12dd8:	ldr	r3, [r5, r3]
   12ddc:	str	r2, [r3]
   12de0:	ldr	r3, [pc, #280]	; 12f00 <Mat_VarReadNextInfo@plt+0x1ee0>
   12de4:	ldr	r3, [r5, r3]
   12de8:	ldr	r3, [r3]
   12dec:	cmp	r3, #0
   12df0:	bne	12d8c <Mat_VarReadNextInfo@plt+0x1d6c>
   12df4:	ldr	r3, [pc, #236]	; 12ee8 <Mat_VarReadNextInfo@plt+0x1ec8>
   12df8:	ldr	r3, [r5, r3]
   12dfc:	ldr	r3, [r3]
   12e00:	cmp	r3, #0
   12e04:	beq	12e30 <Mat_VarReadNextInfo@plt+0x1e10>
   12e08:	ldr	r3, [sp, #4]
   12e0c:	ldrb	r3, [r3]
   12e10:	cmp	r3, #58	; 0x3a
   12e14:	beq	12e30 <Mat_VarReadNextInfo@plt+0x1e10>
   12e18:	ldr	r0, [pc, #228]	; 12f04 <Mat_VarReadNextInfo@plt+0x1ee4>
   12e1c:	mov	r2, r7
   12e20:	add	r0, pc, r0
   12e24:	mov	r1, r8
   12e28:	add	r0, r0, #71	; 0x47
   12e2c:	bl	10f18 <warnx@plt>
   12e30:	ldr	r3, [r6, #8]
   12e34:	cmp	r3, #0
   12e38:	ldr	r3, [pc, #176]	; 12ef0 <Mat_VarReadNextInfo@plt+0x1ed0>
   12e3c:	ldreq	r2, [r6, #12]
   12e40:	movne	r2, #0
   12e44:	ldr	r3, [r5, r3]
   12e48:	str	r2, [r3]
   12e4c:	ldr	r3, [sp]
   12e50:	ldr	r2, [sp]
   12e54:	ldr	r3, [r3]
   12e58:	sub	r3, r3, #1
   12e5c:	str	r3, [r2]
   12e60:	ldr	r3, [sp, #4]
   12e64:	ldrb	r4, [r3]
   12e68:	cmp	r4, #58	; 0x3a
   12e6c:	moveq	r4, #58	; 0x3a
   12e70:	movne	r4, #63	; 0x3f
   12e74:	b	12bf0 <Mat_VarReadNextInfo@plt+0x1bd0>
   12e78:	ldr	r3, [sp, #80]	; 0x50
   12e7c:	cmp	r3, #0
   12e80:	ldrne	r3, [sp]
   12e84:	ldrne	r2, [sp, #12]
   12e88:	strne	r2, [r3]
   12e8c:	bne	12bf0 <Mat_VarReadNextInfo@plt+0x1bd0>
   12e90:	ldr	r3, [pc, #80]	; 12ee8 <Mat_VarReadNextInfo@plt+0x1ec8>
   12e94:	ldr	r3, [r5, r3]
   12e98:	ldr	r3, [r3]
   12e9c:	cmp	r3, #0
   12ea0:	beq	12bdc <Mat_VarReadNextInfo@plt+0x1bbc>
   12ea4:	ldr	r3, [sp, #4]
   12ea8:	ldrb	r3, [r3]
   12eac:	cmp	r3, #58	; 0x3a
   12eb0:	beq	12bdc <Mat_VarReadNextInfo@plt+0x1bbc>
   12eb4:	ldr	r0, [pc, #76]	; 12f08 <Mat_VarReadNextInfo@plt+0x1ee8>
   12eb8:	mov	r2, r7
   12ebc:	add	r0, pc, r0
   12ec0:	mov	r1, r8
   12ec4:	add	r0, r0, #106	; 0x6a
   12ec8:	bl	10f18 <warnx@plt>
   12ecc:	b	12bdc <Mat_VarReadNextInfo@plt+0x1bbc>
   12ed0:	andeq	r2, r1, r0, lsr #10
   12ed4:	andeq	r2, r1, r0, lsl #14
   12ed8:	ldrdeq	r2, [r1], -ip
   12edc:	andeq	r1, r0, fp, lsr #18
   12ee0:	andeq	r1, r0, lr, lsl r9
   12ee4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12ee8:	andeq	r0, r0, r8, ror #1
   12eec:	andeq	r1, r0, r5, lsl #15
   12ef0:	strdeq	r0, [r0], -r4
   12ef4:	andeq	r1, r0, sp, lsr #16
   12ef8:	andeq	r0, r0, r9, ror #31
   12efc:	andeq	r1, r0, r5, lsr #12
   12f00:	strdeq	r0, [r0], -r8
   12f04:	andeq	r1, r0, r9, lsr r5
   12f08:	muleq	r0, sp, r4
   12f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f10:	sub	sp, sp, #44	; 0x2c
   12f14:	ldr	r6, [pc, #1652]	; 13590 <Mat_VarReadNextInfo@plt+0x2570>
   12f18:	subs	r5, r2, #0
   12f1c:	add	r6, pc, r6
   12f20:	str	r0, [sp, #20]
   12f24:	str	r3, [sp, #12]
   12f28:	ldr	r8, [sp, #84]	; 0x54
   12f2c:	bne	12f40 <Mat_VarReadNextInfo@plt+0x1f20>
   12f30:	mvn	r9, #0
   12f34:	mov	r0, r9
   12f38:	add	sp, sp, #44	; 0x2c
   12f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f40:	ldr	r0, [pc, #1612]	; 13594 <Mat_VarReadNextInfo@plt+0x2574>
   12f44:	mov	r7, r1
   12f48:	add	r0, pc, r0
   12f4c:	bl	10e94 <getenv@plt>
   12f50:	ldrb	r3, [r5]
   12f54:	cmp	r3, #45	; 0x2d
   12f58:	orreq	r8, r8, #2
   12f5c:	str	r0, [sp, #24]
   12f60:	beq	12f80 <Mat_VarReadNextInfo@plt+0x1f60>
   12f64:	ldr	r2, [sp, #24]
   12f68:	adds	r2, r2, #0
   12f6c:	movne	r2, #1
   12f70:	cmp	r3, #43	; 0x2b
   12f74:	orreq	r2, r2, #1
   12f78:	cmp	r2, #0
   12f7c:	bicne	r8, r8, #1
   12f80:	sub	r3, r3, #43	; 0x2b
   12f84:	tst	r3, #253	; 0xfd
   12f88:	ldr	r3, [pc, #1544]	; 13598 <Mat_VarReadNextInfo@plt+0x2578>
   12f8c:	addeq	r5, r5, #1
   12f90:	ldr	r4, [r6, r3]
   12f94:	ldr	r3, [r4]
   12f98:	cmp	r3, #0
   12f9c:	ldr	r3, [pc, #1528]	; 1359c <Mat_VarReadNextInfo@plt+0x257c>
   12fa0:	ldr	fp, [r6, r3]
   12fa4:	moveq	r3, #1
   12fa8:	streq	r3, [r4]
   12fac:	streq	r3, [fp]
   12fb0:	ldr	r3, [pc, #1512]	; 135a0 <Mat_VarReadNextInfo@plt+0x2580>
   12fb4:	ldr	r3, [r6, r3]
   12fb8:	str	r3, [sp, #8]
   12fbc:	ldr	r2, [sp, #8]
   12fc0:	mov	r3, #0
   12fc4:	str	r3, [r2]
   12fc8:	ldr	r3, [fp]
   12fcc:	cmp	r3, #0
   12fd0:	ldrne	r3, [pc, #1484]	; 135a4 <Mat_VarReadNextInfo@plt+0x2584>
   12fd4:	mvnne	r2, #0
   12fd8:	addne	r3, pc, r3
   12fdc:	strne	r2, [r3, #4]
   12fe0:	strne	r2, [r3, #8]
   12fe4:	ldr	r3, [pc, #1468]	; 135a8 <Mat_VarReadNextInfo@plt+0x2588>
   12fe8:	add	r3, pc, r3
   12fec:	str	r3, [sp, #28]
   12ff0:	ldr	r3, [pc, #1460]	; 135ac <Mat_VarReadNextInfo@plt+0x258c>
   12ff4:	add	r3, pc, r3
   12ff8:	str	r3, [sp, #32]
   12ffc:	ldr	r3, [pc, #1452]	; 135b0 <Mat_VarReadNextInfo@plt+0x2590>
   13000:	add	r3, pc, r3
   13004:	str	r3, [sp, #36]	; 0x24
   13008:	ldr	r3, [fp]
   1300c:	cmp	r3, #0
   13010:	bne	13028 <Mat_VarReadNextInfo@plt+0x2008>
   13014:	ldr	r3, [sp, #28]
   13018:	ldr	r3, [r3]
   1301c:	ldrb	r3, [r3]
   13020:	cmp	r3, #0
   13024:	bne	13204 <Mat_VarReadNextInfo@plt+0x21e4>
   13028:	mov	r3, #0
   1302c:	str	r3, [fp]
   13030:	ldr	r2, [r4]
   13034:	ldr	r3, [sp, #20]
   13038:	cmp	r2, r3
   1303c:	blt	130b4 <Mat_VarReadNextInfo@plt+0x2094>
   13040:	ldr	r1, [pc, #1388]	; 135b4 <Mat_VarReadNextInfo@plt+0x2594>
   13044:	ldr	r3, [pc, #1388]	; 135b8 <Mat_VarReadNextInfo@plt+0x2598>
   13048:	add	r1, pc, r1
   1304c:	add	r3, pc, r3
   13050:	str	r3, [r1]
   13054:	ldr	r3, [pc, #1376]	; 135bc <Mat_VarReadNextInfo@plt+0x259c>
   13058:	add	r3, pc, r3
   1305c:	ldr	r5, [r3, #4]
   13060:	cmn	r5, #1
   13064:	beq	130a4 <Mat_VarReadNextInfo@plt+0x2084>
   13068:	ldr	r6, [r3, #8]
   1306c:	mov	r1, r5
   13070:	mov	r3, r7
   13074:	mov	r0, r6
   13078:	bl	12a08 <Mat_VarReadNextInfo@plt+0x19e8>
   1307c:	ldr	r3, [r4]
   13080:	sub	r5, r5, r6
   13084:	sub	r5, r3, r5
   13088:	str	r5, [r4]
   1308c:	ldr	r3, [pc, #1324]	; 135c0 <Mat_VarReadNextInfo@plt+0x25a0>
   13090:	mvn	r9, #0
   13094:	add	r3, pc, r3
   13098:	str	r9, [r3, #4]
   1309c:	str	r9, [r3, #8]
   130a0:	b	12f34 <Mat_VarReadNextInfo@plt+0x1f14>
   130a4:	ldr	r3, [r3, #8]
   130a8:	cmn	r3, #1
   130ac:	strne	r3, [r4]
   130b0:	b	1308c <Mat_VarReadNextInfo@plt+0x206c>
   130b4:	ldr	r3, [r7, r2, lsl #2]
   130b8:	ldr	r1, [sp, #32]
   130bc:	str	r3, [r1]
   130c0:	ldrb	r1, [r3]
   130c4:	cmp	r1, #45	; 0x2d
   130c8:	bne	130d8 <Mat_VarReadNextInfo@plt+0x20b8>
   130cc:	ldrb	r0, [r3, #1]
   130d0:	cmp	r0, #0
   130d4:	bne	13174 <Mat_VarReadNextInfo@plt+0x2154>
   130d8:	ldr	r1, [pc, #1252]	; 135c4 <Mat_VarReadNextInfo@plt+0x25a4>
   130dc:	ldr	r0, [sp, #36]	; 0x24
   130e0:	add	r1, pc, r1
   130e4:	tst	r8, #2
   130e8:	str	r1, [r0]
   130ec:	beq	13108 <Mat_VarReadNextInfo@plt+0x20e8>
   130f0:	add	r2, r2, #1
   130f4:	str	r2, [r4]
   130f8:	ldr	r2, [sp, #8]
   130fc:	mov	r9, #1
   13100:	str	r3, [r2]
   13104:	b	12f34 <Mat_VarReadNextInfo@plt+0x1f14>
   13108:	tst	r8, #1
   1310c:	beq	12f30 <Mat_VarReadNextInfo@plt+0x1f10>
   13110:	ldr	r9, [pc, #1200]	; 135c8 <Mat_VarReadNextInfo@plt+0x25a8>
   13114:	add	r9, pc, r9
   13118:	ldr	r3, [r9, #8]
   1311c:	cmn	r3, #1
   13120:	str	r3, [sp, #16]
   13124:	streq	r2, [r9, #8]
   13128:	beq	13164 <Mat_VarReadNextInfo@plt+0x2144>
   1312c:	ldr	sl, [r9, #4]
   13130:	cmn	sl, #1
   13134:	beq	13164 <Mat_VarReadNextInfo@plt+0x2144>
   13138:	mov	r3, r7
   1313c:	mov	r1, sl
   13140:	ldr	r0, [sp, #16]
   13144:	bl	12a08 <Mat_VarReadNextInfo@plt+0x19e8>
   13148:	ldr	r3, [sp, #16]
   1314c:	sub	sl, sl, r3
   13150:	ldr	r3, [r4]
   13154:	sub	sl, r3, sl
   13158:	mvn	r3, #0
   1315c:	str	sl, [r9, #8]
   13160:	str	r3, [r9, #4]
   13164:	ldr	r3, [r4]
   13168:	add	r3, r3, #1
   1316c:	str	r3, [r4]
   13170:	b	13008 <Mat_VarReadNextInfo@plt+0x1fe8>
   13174:	ldr	r1, [pc, #1104]	; 135cc <Mat_VarReadNextInfo@plt+0x25ac>
   13178:	add	r1, pc, r1
   1317c:	ldr	r9, [r1, #8]
   13180:	cmn	r9, #1
   13184:	beq	13194 <Mat_VarReadNextInfo@plt+0x2174>
   13188:	ldr	ip, [r1, #4]
   1318c:	cmn	ip, #1
   13190:	streq	r2, [r1, #4]
   13194:	ldr	r1, [pc, #1076]	; 135d0 <Mat_VarReadNextInfo@plt+0x25b0>
   13198:	add	ip, r3, #1
   1319c:	add	r1, pc, r1
   131a0:	cmp	r0, #45	; 0x2d
   131a4:	str	ip, [r1]
   131a8:	bne	13204 <Mat_VarReadNextInfo@plt+0x21e4>
   131ac:	ldrb	r3, [r3, #2]
   131b0:	cmp	r3, #0
   131b4:	bne	13204 <Mat_VarReadNextInfo@plt+0x21e4>
   131b8:	ldr	r3, [pc, #1044]	; 135d4 <Mat_VarReadNextInfo@plt+0x25b4>
   131bc:	add	r2, r2, #1
   131c0:	add	r3, pc, r3
   131c4:	str	r3, [r1]
   131c8:	ldr	r3, [pc, #1032]	; 135d8 <Mat_VarReadNextInfo@plt+0x25b8>
   131cc:	str	r2, [r4]
   131d0:	add	r3, pc, r3
   131d4:	ldr	r5, [r3, #4]
   131d8:	cmn	r5, #1
   131dc:	beq	1308c <Mat_VarReadNextInfo@plt+0x206c>
   131e0:	mov	r1, r5
   131e4:	mov	r0, r9
   131e8:	mov	r3, r7
   131ec:	bl	12a08 <Mat_VarReadNextInfo@plt+0x19e8>
   131f0:	sub	r9, r5, r9
   131f4:	ldr	r5, [r4]
   131f8:	sub	r9, r5, r9
   131fc:	str	r9, [r4]
   13200:	b	1308c <Mat_VarReadNextInfo@plt+0x206c>
   13204:	ldr	r3, [sp, #12]
   13208:	cmp	r3, #0
   1320c:	beq	132c8 <Mat_VarReadNextInfo@plt+0x22a8>
   13210:	ldr	r3, [pc, #964]	; 135dc <Mat_VarReadNextInfo@plt+0x25bc>
   13214:	ldr	r2, [r4]
   13218:	add	r3, pc, r3
   1321c:	ldr	r2, [r7, r2, lsl #2]
   13220:	ldr	r3, [r3]
   13224:	cmp	r2, r3
   13228:	beq	132c8 <Mat_VarReadNextInfo@plt+0x22a8>
   1322c:	ldrb	r1, [r3]
   13230:	cmp	r1, #45	; 0x2d
   13234:	beq	13240 <Mat_VarReadNextInfo@plt+0x2220>
   13238:	tst	r8, #4
   1323c:	beq	132c8 <Mat_VarReadNextInfo@plt+0x22a8>
   13240:	ldr	r2, [pc, #920]	; 135e0 <Mat_VarReadNextInfo@plt+0x25c0>
   13244:	mov	r0, #0
   13248:	add	r2, pc, r2
   1324c:	cmp	r1, #45	; 0x2d
   13250:	str	r0, [r2]
   13254:	bne	132ac <Mat_VarReadNextInfo@plt+0x228c>
   13258:	ldr	r1, [pc, #900]	; 135e4 <Mat_VarReadNextInfo@plt+0x25c4>
   1325c:	add	r3, r3, #1
   13260:	add	r1, pc, r1
   13264:	str	r3, [r1]
   13268:	mov	r3, #1
   1326c:	str	r3, [r2]
   13270:	stm	sp, {r0, r8}
   13274:	ldr	r3, [sp, #80]	; 0x50
   13278:	ldr	r2, [sp, #12]
   1327c:	mov	r1, r5
   13280:	mov	r0, r7
   13284:	bl	12ab0 <Mat_VarReadNextInfo@plt+0x1a90>
   13288:	cmn	r0, #1
   1328c:	mov	r9, r0
   13290:	beq	132c8 <Mat_VarReadNextInfo@plt+0x22a8>
   13294:	ldr	r3, [pc, #844]	; 135e8 <Mat_VarReadNextInfo@plt+0x25c8>
   13298:	ldr	r2, [pc, #844]	; 135ec <Mat_VarReadNextInfo@plt+0x25cc>
   1329c:	add	r3, pc, r3
   132a0:	add	r2, pc, r2
   132a4:	str	r3, [r2]
   132a8:	b	12f34 <Mat_VarReadNextInfo@plt+0x1f14>
   132ac:	cmp	r1, #58	; 0x3a
   132b0:	beq	13270 <Mat_VarReadNextInfo@plt+0x2250>
   132b4:	mov	r0, r5
   132b8:	bl	10f0c <strchr@plt>
   132bc:	adds	r0, r0, #0
   132c0:	movne	r0, #1
   132c4:	b	13270 <Mat_VarReadNextInfo@plt+0x2250>
   132c8:	ldr	r3, [pc, #800]	; 135f0 <Mat_VarReadNextInfo@plt+0x25d0>
   132cc:	add	r3, pc, r3
   132d0:	ldr	sl, [r3]
   132d4:	add	fp, sl, #1
   132d8:	ldrb	r9, [sl]
   132dc:	str	fp, [r3]
   132e0:	cmp	r9, #58	; 0x3a
   132e4:	beq	13324 <Mat_VarReadNextInfo@plt+0x2304>
   132e8:	cmp	r9, #45	; 0x2d
   132ec:	bne	132fc <Mat_VarReadNextInfo@plt+0x22dc>
   132f0:	ldrb	r3, [sl, #1]
   132f4:	cmp	r3, #0
   132f8:	bne	13318 <Mat_VarReadNextInfo@plt+0x22f8>
   132fc:	mov	r1, r9
   13300:	mov	r0, r5
   13304:	bl	10f0c <strchr@plt>
   13308:	cmp	r0, #0
   1330c:	bne	1339c <Mat_VarReadNextInfo@plt+0x237c>
   13310:	cmp	r9, #45	; 0x2d
   13314:	bne	13324 <Mat_VarReadNextInfo@plt+0x2304>
   13318:	ldrb	r3, [sl, #1]
   1331c:	cmp	r3, #0
   13320:	beq	12f30 <Mat_VarReadNextInfo@plt+0x1f10>
   13324:	ldrb	r3, [sl, #1]
   13328:	cmp	r3, #0
   1332c:	ldreq	r3, [r4]
   13330:	addeq	r3, r3, #1
   13334:	streq	r3, [r4]
   13338:	ldr	r3, [pc, #692]	; 135f4 <Mat_VarReadNextInfo@plt+0x25d4>
   1333c:	ldr	r3, [r6, r3]
   13340:	ldr	r3, [r3]
   13344:	cmp	r3, #0
   13348:	beq	13378 <Mat_VarReadNextInfo@plt+0x2358>
   1334c:	ldrb	r3, [r5]
   13350:	cmp	r3, #58	; 0x3a
   13354:	beq	13378 <Mat_VarReadNextInfo@plt+0x2358>
   13358:	ldr	r3, [sp, #24]
   1335c:	cmp	r3, #0
   13360:	bne	1338c <Mat_VarReadNextInfo@plt+0x236c>
   13364:	ldr	r0, [pc, #652]	; 135f8 <Mat_VarReadNextInfo@plt+0x25d8>
   13368:	add	r0, pc, r0
   1336c:	add	r0, r0, #154	; 0x9a
   13370:	mov	r1, r9
   13374:	bl	10f18 <warnx@plt>
   13378:	ldr	r3, [pc, #636]	; 135fc <Mat_VarReadNextInfo@plt+0x25dc>
   1337c:	ldr	r3, [r6, r3]
   13380:	str	r9, [r3]
   13384:	mov	r9, #63	; 0x3f
   13388:	b	12f34 <Mat_VarReadNextInfo@plt+0x1f14>
   1338c:	ldr	r0, [pc, #620]	; 13600 <Mat_VarReadNextInfo@plt+0x25e0>
   13390:	add	r0, pc, r0
   13394:	add	r0, r0, #133	; 0x85
   13398:	b	13370 <Mat_VarReadNextInfo@plt+0x2350>
   1339c:	ldr	r3, [sp, #12]
   133a0:	adds	r3, r3, #0
   133a4:	movne	r3, #1
   133a8:	cmp	r9, #87	; 0x57
   133ac:	movne	r3, #0
   133b0:	cmp	r3, #0
   133b4:	ldrb	r3, [r0, #1]
   133b8:	beq	134ac <Mat_VarReadNextInfo@plt+0x248c>
   133bc:	cmp	r3, #59	; 0x3b
   133c0:	bne	134ac <Mat_VarReadNextInfo@plt+0x248c>
   133c4:	ldrb	r3, [sl, #1]
   133c8:	cmp	r3, #0
   133cc:	bne	13464 <Mat_VarReadNextInfo@plt+0x2444>
   133d0:	ldr	r3, [r4]
   133d4:	ldr	r2, [sp, #20]
   133d8:	add	r3, r3, #1
   133dc:	cmp	r2, r3
   133e0:	str	r3, [r4]
   133e4:	bgt	13454 <Mat_VarReadNextInfo@plt+0x2434>
   133e8:	ldr	r2, [pc, #532]	; 13604 <Mat_VarReadNextInfo@plt+0x25e4>
   133ec:	ldr	r3, [pc, #532]	; 13608 <Mat_VarReadNextInfo@plt+0x25e8>
   133f0:	add	r2, pc, r2
   133f4:	add	r3, pc, r3
   133f8:	str	r3, [r2]
   133fc:	ldr	r3, [pc, #496]	; 135f4 <Mat_VarReadNextInfo@plt+0x25d4>
   13400:	ldr	r3, [r6, r3]
   13404:	ldr	r3, [r3]
   13408:	cmp	r3, #0
   1340c:	beq	13430 <Mat_VarReadNextInfo@plt+0x2410>
   13410:	ldrb	r3, [r5]
   13414:	cmp	r3, #58	; 0x3a
   13418:	beq	13430 <Mat_VarReadNextInfo@plt+0x2410>
   1341c:	ldr	r0, [pc, #488]	; 1360c <Mat_VarReadNextInfo@plt+0x25ec>
   13420:	mov	r1, #87	; 0x57
   13424:	add	r0, pc, r0
   13428:	add	r0, r0, #175	; 0xaf
   1342c:	bl	10f18 <warnx@plt>
   13430:	ldr	r3, [pc, #452]	; 135fc <Mat_VarReadNextInfo@plt+0x25dc>
   13434:	mov	r2, #87	; 0x57
   13438:	ldr	r3, [r6, r3]
   1343c:	str	r2, [r3]
   13440:	ldrb	r3, [r5]
   13444:	cmp	r3, #58	; 0x3a
   13448:	moveq	r9, #58	; 0x3a
   1344c:	bne	13384 <Mat_VarReadNextInfo@plt+0x2364>
   13450:	b	12f34 <Mat_VarReadNextInfo@plt+0x1f14>
   13454:	ldr	r2, [r7, r3, lsl #2]
   13458:	ldr	r3, [pc, #432]	; 13610 <Mat_VarReadNextInfo@plt+0x25f0>
   1345c:	add	r3, pc, r3
   13460:	str	r2, [r3]
   13464:	ldr	r3, [pc, #424]	; 13614 <Mat_VarReadNextInfo@plt+0x25f4>
   13468:	mov	r2, #2
   1346c:	add	r3, pc, r3
   13470:	mov	r1, r5
   13474:	str	r2, [r3]
   13478:	mov	r3, #0
   1347c:	str	r3, [sp]
   13480:	ldr	r2, [sp, #12]
   13484:	ldr	r3, [sp, #80]	; 0x50
   13488:	str	r8, [sp, #4]
   1348c:	mov	r0, r7
   13490:	bl	12ab0 <Mat_VarReadNextInfo@plt+0x1a90>
   13494:	ldr	r3, [pc, #380]	; 13618 <Mat_VarReadNextInfo@plt+0x25f8>
   13498:	ldr	r2, [pc, #380]	; 1361c <Mat_VarReadNextInfo@plt+0x25fc>
   1349c:	add	r3, pc, r3
   134a0:	add	r2, pc, r2
   134a4:	mov	r9, r0
   134a8:	b	132a4 <Mat_VarReadNextInfo@plt+0x2284>
   134ac:	cmp	r3, #58	; 0x3a
   134b0:	beq	134d0 <Mat_VarReadNextInfo@plt+0x24b0>
   134b4:	ldrb	r3, [sl, #1]
   134b8:	cmp	r3, #0
   134bc:	bne	12f34 <Mat_VarReadNextInfo@plt+0x1f14>
   134c0:	ldr	r3, [r4]
   134c4:	add	r3, r3, #1
   134c8:	str	r3, [r4]
   134cc:	b	12f34 <Mat_VarReadNextInfo@plt+0x1f14>
   134d0:	ldr	r2, [sp, #8]
   134d4:	mov	r3, #0
   134d8:	str	r3, [r2]
   134dc:	ldrb	r3, [sl, #1]
   134e0:	cmp	r3, #0
   134e4:	movne	r3, r2
   134e8:	strne	fp, [r3]
   134ec:	bne	13578 <Mat_VarReadNextInfo@plt+0x2558>
   134f0:	ldrb	r3, [r0, #2]
   134f4:	cmp	r3, #58	; 0x3a
   134f8:	beq	13578 <Mat_VarReadNextInfo@plt+0x2558>
   134fc:	ldr	r3, [r4]
   13500:	ldr	r2, [sp, #20]
   13504:	add	r3, r3, #1
   13508:	cmp	r2, r3
   1350c:	str	r3, [r4]
   13510:	bgt	1356c <Mat_VarReadNextInfo@plt+0x254c>
   13514:	ldr	r2, [pc, #260]	; 13620 <Mat_VarReadNextInfo@plt+0x2600>
   13518:	ldr	r3, [pc, #260]	; 13624 <Mat_VarReadNextInfo@plt+0x2604>
   1351c:	add	r2, pc, r2
   13520:	add	r3, pc, r3
   13524:	str	r3, [r2]
   13528:	ldr	r3, [pc, #196]	; 135f4 <Mat_VarReadNextInfo@plt+0x25d4>
   1352c:	ldr	r3, [r6, r3]
   13530:	ldr	r3, [r3]
   13534:	cmp	r3, #0
   13538:	beq	1355c <Mat_VarReadNextInfo@plt+0x253c>
   1353c:	ldrb	r3, [r5]
   13540:	cmp	r3, #58	; 0x3a
   13544:	beq	1355c <Mat_VarReadNextInfo@plt+0x253c>
   13548:	ldr	r0, [pc, #216]	; 13628 <Mat_VarReadNextInfo@plt+0x2608>
   1354c:	mov	r1, r9
   13550:	add	r0, pc, r0
   13554:	add	r0, r0, #175	; 0xaf
   13558:	bl	10f18 <warnx@plt>
   1355c:	ldr	r3, [pc, #152]	; 135fc <Mat_VarReadNextInfo@plt+0x25dc>
   13560:	ldr	r3, [r6, r3]
   13564:	str	r9, [r3]
   13568:	b	13440 <Mat_VarReadNextInfo@plt+0x2420>
   1356c:	ldr	r2, [sp, #8]
   13570:	ldr	r3, [r7, r3, lsl #2]
   13574:	str	r3, [r2]
   13578:	ldr	r2, [pc, #172]	; 1362c <Mat_VarReadNextInfo@plt+0x260c>
   1357c:	ldr	r3, [pc, #172]	; 13630 <Mat_VarReadNextInfo@plt+0x2610>
   13580:	add	r2, pc, r2
   13584:	add	r3, pc, r3
   13588:	str	r3, [r2]
   1358c:	b	134c0 <Mat_VarReadNextInfo@plt+0x24a0>
   13590:	ldrdeq	r2, [r1], -ip
   13594:	andeq	r1, r0, r9, ror #9
   13598:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1359c:	andeq	r0, r0, r4, ror #1
   135a0:	strdeq	r0, [r0], -r8
   135a4:	andeq	r2, r1, r0, ror #3
   135a8:	andeq	r2, r1, r8, ror #3
   135ac:	ldrdeq	r2, [r1], -ip
   135b0:	ldrdeq	r2, [r1], -r0
   135b4:	andeq	r2, r1, r8, lsl #3
   135b8:	andeq	r0, r0, r9, lsr #23
   135bc:	andeq	r2, r1, r0, ror #2
   135c0:	andeq	r2, r1, r4, lsr #2
   135c4:	andeq	r0, r0, r5, lsl fp
   135c8:	andeq	r2, r1, r4, lsr #1
   135cc:	andeq	r2, r1, r0, asr #32
   135d0:	andeq	r2, r1, r4, lsr r0
   135d4:	andeq	r0, r0, r5, lsr sl
   135d8:	andeq	r1, r1, r8, ror #31
   135dc:			; <UNDEFINED> instruction: 0x00011fb8
   135e0:	andeq	r1, r1, r0, ror pc
   135e4:	andeq	r1, r1, r0, ror pc
   135e8:	andeq	r0, r0, r9, asr r9
   135ec:	andeq	r1, r1, r0, lsr pc
   135f0:	andeq	r1, r1, r4, lsl #30
   135f4:	andeq	r0, r0, r8, ror #1
   135f8:	strdeq	r0, [r0], -r1
   135fc:	strdeq	r0, [r0], -r4
   13600:	andeq	r0, r0, r9, asr #31
   13604:	andeq	r1, r1, r0, ror #27
   13608:	andeq	r0, r0, r1, lsl #16
   1360c:	andeq	r0, r0, r5, lsr pc
   13610:	andeq	r1, r1, r4, ror sp
   13614:	andeq	r1, r1, ip, asr #26
   13618:	andeq	r0, r0, r9, asr r7
   1361c:	andeq	r1, r1, r0, lsr sp
   13620:			; <UNDEFINED> instruction: 0x00011cb4
   13624:	ldrdeq	r0, [r0], -r5
   13628:	andeq	r0, r0, r9, lsl #28
   1362c:	andeq	r1, r1, r0, asr ip
   13630:	andeq	r0, r0, r1, ror r6

00013634 <getopt@@Base>:
   13634:	mov	r3, #0
   13638:	push	{r0, r1, r2, lr}
   1363c:	str	r3, [sp, #4]
   13640:	str	r3, [sp]
   13644:	bl	12f0c <Mat_VarReadNextInfo@plt+0x1eec>
   13648:	add	sp, sp, #12
   1364c:	pop	{pc}		; (ldr pc, [sp], #4)

00013650 <getopt_long@@Base>:
   13650:	push	{r0, r1, r2, lr}
   13654:	mov	ip, #1
   13658:	str	ip, [sp, #4]
   1365c:	ldr	ip, [sp, #16]
   13660:	str	ip, [sp]
   13664:	bl	12f0c <Mat_VarReadNextInfo@plt+0x1eec>
   13668:	add	sp, sp, #12
   1366c:	pop	{pc}		; (ldr pc, [sp], #4)

00013670 <getopt_long_only@@Base>:
   13670:	push	{r0, r1, r2, lr}
   13674:	mov	ip, #5
   13678:	str	ip, [sp, #4]
   1367c:	ldr	ip, [sp, #16]
   13680:	str	ip, [sp]
   13684:	bl	12f0c <Mat_VarReadNextInfo@plt+0x1eec>
   13688:	add	sp, sp, #12
   1368c:	pop	{pc}		; (ldr pc, [sp], #4)
   13690:	subs	r2, r1, #1
   13694:	bxeq	lr
   13698:	bcc	13870 <getopt_long_only@@Base+0x200>
   1369c:	cmp	r0, r1
   136a0:	bls	13854 <getopt_long_only@@Base+0x1e4>
   136a4:	tst	r1, r2
   136a8:	beq	13860 <getopt_long_only@@Base+0x1f0>
   136ac:	clz	r3, r0
   136b0:	clz	r2, r1
   136b4:	sub	r3, r2, r3
   136b8:	rsbs	r3, r3, #31
   136bc:	addne	r3, r3, r3, lsl #1
   136c0:	mov	r2, #0
   136c4:	addne	pc, pc, r3, lsl #2
   136c8:	nop			; (mov r0, r0)
   136cc:	cmp	r0, r1, lsl #31
   136d0:	adc	r2, r2, r2
   136d4:	subcs	r0, r0, r1, lsl #31
   136d8:	cmp	r0, r1, lsl #30
   136dc:	adc	r2, r2, r2
   136e0:	subcs	r0, r0, r1, lsl #30
   136e4:	cmp	r0, r1, lsl #29
   136e8:	adc	r2, r2, r2
   136ec:	subcs	r0, r0, r1, lsl #29
   136f0:	cmp	r0, r1, lsl #28
   136f4:	adc	r2, r2, r2
   136f8:	subcs	r0, r0, r1, lsl #28
   136fc:	cmp	r0, r1, lsl #27
   13700:	adc	r2, r2, r2
   13704:	subcs	r0, r0, r1, lsl #27
   13708:	cmp	r0, r1, lsl #26
   1370c:	adc	r2, r2, r2
   13710:	subcs	r0, r0, r1, lsl #26
   13714:	cmp	r0, r1, lsl #25
   13718:	adc	r2, r2, r2
   1371c:	subcs	r0, r0, r1, lsl #25
   13720:	cmp	r0, r1, lsl #24
   13724:	adc	r2, r2, r2
   13728:	subcs	r0, r0, r1, lsl #24
   1372c:	cmp	r0, r1, lsl #23
   13730:	adc	r2, r2, r2
   13734:	subcs	r0, r0, r1, lsl #23
   13738:	cmp	r0, r1, lsl #22
   1373c:	adc	r2, r2, r2
   13740:	subcs	r0, r0, r1, lsl #22
   13744:	cmp	r0, r1, lsl #21
   13748:	adc	r2, r2, r2
   1374c:	subcs	r0, r0, r1, lsl #21
   13750:	cmp	r0, r1, lsl #20
   13754:	adc	r2, r2, r2
   13758:	subcs	r0, r0, r1, lsl #20
   1375c:	cmp	r0, r1, lsl #19
   13760:	adc	r2, r2, r2
   13764:	subcs	r0, r0, r1, lsl #19
   13768:	cmp	r0, r1, lsl #18
   1376c:	adc	r2, r2, r2
   13770:	subcs	r0, r0, r1, lsl #18
   13774:	cmp	r0, r1, lsl #17
   13778:	adc	r2, r2, r2
   1377c:	subcs	r0, r0, r1, lsl #17
   13780:	cmp	r0, r1, lsl #16
   13784:	adc	r2, r2, r2
   13788:	subcs	r0, r0, r1, lsl #16
   1378c:	cmp	r0, r1, lsl #15
   13790:	adc	r2, r2, r2
   13794:	subcs	r0, r0, r1, lsl #15
   13798:	cmp	r0, r1, lsl #14
   1379c:	adc	r2, r2, r2
   137a0:	subcs	r0, r0, r1, lsl #14
   137a4:	cmp	r0, r1, lsl #13
   137a8:	adc	r2, r2, r2
   137ac:	subcs	r0, r0, r1, lsl #13
   137b0:	cmp	r0, r1, lsl #12
   137b4:	adc	r2, r2, r2
   137b8:	subcs	r0, r0, r1, lsl #12
   137bc:	cmp	r0, r1, lsl #11
   137c0:	adc	r2, r2, r2
   137c4:	subcs	r0, r0, r1, lsl #11
   137c8:	cmp	r0, r1, lsl #10
   137cc:	adc	r2, r2, r2
   137d0:	subcs	r0, r0, r1, lsl #10
   137d4:	cmp	r0, r1, lsl #9
   137d8:	adc	r2, r2, r2
   137dc:	subcs	r0, r0, r1, lsl #9
   137e0:	cmp	r0, r1, lsl #8
   137e4:	adc	r2, r2, r2
   137e8:	subcs	r0, r0, r1, lsl #8
   137ec:	cmp	r0, r1, lsl #7
   137f0:	adc	r2, r2, r2
   137f4:	subcs	r0, r0, r1, lsl #7
   137f8:	cmp	r0, r1, lsl #6
   137fc:	adc	r2, r2, r2
   13800:	subcs	r0, r0, r1, lsl #6
   13804:	cmp	r0, r1, lsl #5
   13808:	adc	r2, r2, r2
   1380c:	subcs	r0, r0, r1, lsl #5
   13810:	cmp	r0, r1, lsl #4
   13814:	adc	r2, r2, r2
   13818:	subcs	r0, r0, r1, lsl #4
   1381c:	cmp	r0, r1, lsl #3
   13820:	adc	r2, r2, r2
   13824:	subcs	r0, r0, r1, lsl #3
   13828:	cmp	r0, r1, lsl #2
   1382c:	adc	r2, r2, r2
   13830:	subcs	r0, r0, r1, lsl #2
   13834:	cmp	r0, r1, lsl #1
   13838:	adc	r2, r2, r2
   1383c:	subcs	r0, r0, r1, lsl #1
   13840:	cmp	r0, r1
   13844:	adc	r2, r2, r2
   13848:	subcs	r0, r0, r1
   1384c:	mov	r0, r2
   13850:	bx	lr
   13854:	moveq	r0, #1
   13858:	movne	r0, #0
   1385c:	bx	lr
   13860:	clz	r2, r1
   13864:	rsb	r2, r2, #31
   13868:	lsr	r0, r0, r2
   1386c:	bx	lr
   13870:	cmp	r0, #0
   13874:	mvnne	r0, #0
   13878:	b	13adc <getopt_long_only@@Base+0x46c>
   1387c:	cmp	r1, #0
   13880:	beq	13870 <getopt_long_only@@Base+0x200>
   13884:	push	{r0, r1, lr}
   13888:	bl	13690 <getopt_long_only@@Base+0x20>
   1388c:	pop	{r1, r2, lr}
   13890:	mul	r3, r2, r0
   13894:	sub	r1, r1, r3
   13898:	bx	lr
   1389c:	cmp	r1, #0
   138a0:	beq	13aac <getopt_long_only@@Base+0x43c>
   138a4:	eor	ip, r0, r1
   138a8:	rsbmi	r1, r1, #0
   138ac:	subs	r2, r1, #1
   138b0:	beq	13a78 <getopt_long_only@@Base+0x408>
   138b4:	movs	r3, r0
   138b8:	rsbmi	r3, r0, #0
   138bc:	cmp	r3, r1
   138c0:	bls	13a84 <getopt_long_only@@Base+0x414>
   138c4:	tst	r1, r2
   138c8:	beq	13a94 <getopt_long_only@@Base+0x424>
   138cc:	clz	r2, r3
   138d0:	clz	r0, r1
   138d4:	sub	r2, r0, r2
   138d8:	rsbs	r2, r2, #31
   138dc:	addne	r2, r2, r2, lsl #1
   138e0:	mov	r0, #0
   138e4:	addne	pc, pc, r2, lsl #2
   138e8:	nop			; (mov r0, r0)
   138ec:	cmp	r3, r1, lsl #31
   138f0:	adc	r0, r0, r0
   138f4:	subcs	r3, r3, r1, lsl #31
   138f8:	cmp	r3, r1, lsl #30
   138fc:	adc	r0, r0, r0
   13900:	subcs	r3, r3, r1, lsl #30
   13904:	cmp	r3, r1, lsl #29
   13908:	adc	r0, r0, r0
   1390c:	subcs	r3, r3, r1, lsl #29
   13910:	cmp	r3, r1, lsl #28
   13914:	adc	r0, r0, r0
   13918:	subcs	r3, r3, r1, lsl #28
   1391c:	cmp	r3, r1, lsl #27
   13920:	adc	r0, r0, r0
   13924:	subcs	r3, r3, r1, lsl #27
   13928:	cmp	r3, r1, lsl #26
   1392c:	adc	r0, r0, r0
   13930:	subcs	r3, r3, r1, lsl #26
   13934:	cmp	r3, r1, lsl #25
   13938:	adc	r0, r0, r0
   1393c:	subcs	r3, r3, r1, lsl #25
   13940:	cmp	r3, r1, lsl #24
   13944:	adc	r0, r0, r0
   13948:	subcs	r3, r3, r1, lsl #24
   1394c:	cmp	r3, r1, lsl #23
   13950:	adc	r0, r0, r0
   13954:	subcs	r3, r3, r1, lsl #23
   13958:	cmp	r3, r1, lsl #22
   1395c:	adc	r0, r0, r0
   13960:	subcs	r3, r3, r1, lsl #22
   13964:	cmp	r3, r1, lsl #21
   13968:	adc	r0, r0, r0
   1396c:	subcs	r3, r3, r1, lsl #21
   13970:	cmp	r3, r1, lsl #20
   13974:	adc	r0, r0, r0
   13978:	subcs	r3, r3, r1, lsl #20
   1397c:	cmp	r3, r1, lsl #19
   13980:	adc	r0, r0, r0
   13984:	subcs	r3, r3, r1, lsl #19
   13988:	cmp	r3, r1, lsl #18
   1398c:	adc	r0, r0, r0
   13990:	subcs	r3, r3, r1, lsl #18
   13994:	cmp	r3, r1, lsl #17
   13998:	adc	r0, r0, r0
   1399c:	subcs	r3, r3, r1, lsl #17
   139a0:	cmp	r3, r1, lsl #16
   139a4:	adc	r0, r0, r0
   139a8:	subcs	r3, r3, r1, lsl #16
   139ac:	cmp	r3, r1, lsl #15
   139b0:	adc	r0, r0, r0
   139b4:	subcs	r3, r3, r1, lsl #15
   139b8:	cmp	r3, r1, lsl #14
   139bc:	adc	r0, r0, r0
   139c0:	subcs	r3, r3, r1, lsl #14
   139c4:	cmp	r3, r1, lsl #13
   139c8:	adc	r0, r0, r0
   139cc:	subcs	r3, r3, r1, lsl #13
   139d0:	cmp	r3, r1, lsl #12
   139d4:	adc	r0, r0, r0
   139d8:	subcs	r3, r3, r1, lsl #12
   139dc:	cmp	r3, r1, lsl #11
   139e0:	adc	r0, r0, r0
   139e4:	subcs	r3, r3, r1, lsl #11
   139e8:	cmp	r3, r1, lsl #10
   139ec:	adc	r0, r0, r0
   139f0:	subcs	r3, r3, r1, lsl #10
   139f4:	cmp	r3, r1, lsl #9
   139f8:	adc	r0, r0, r0
   139fc:	subcs	r3, r3, r1, lsl #9
   13a00:	cmp	r3, r1, lsl #8
   13a04:	adc	r0, r0, r0
   13a08:	subcs	r3, r3, r1, lsl #8
   13a0c:	cmp	r3, r1, lsl #7
   13a10:	adc	r0, r0, r0
   13a14:	subcs	r3, r3, r1, lsl #7
   13a18:	cmp	r3, r1, lsl #6
   13a1c:	adc	r0, r0, r0
   13a20:	subcs	r3, r3, r1, lsl #6
   13a24:	cmp	r3, r1, lsl #5
   13a28:	adc	r0, r0, r0
   13a2c:	subcs	r3, r3, r1, lsl #5
   13a30:	cmp	r3, r1, lsl #4
   13a34:	adc	r0, r0, r0
   13a38:	subcs	r3, r3, r1, lsl #4
   13a3c:	cmp	r3, r1, lsl #3
   13a40:	adc	r0, r0, r0
   13a44:	subcs	r3, r3, r1, lsl #3
   13a48:	cmp	r3, r1, lsl #2
   13a4c:	adc	r0, r0, r0
   13a50:	subcs	r3, r3, r1, lsl #2
   13a54:	cmp	r3, r1, lsl #1
   13a58:	adc	r0, r0, r0
   13a5c:	subcs	r3, r3, r1, lsl #1
   13a60:	cmp	r3, r1
   13a64:	adc	r0, r0, r0
   13a68:	subcs	r3, r3, r1
   13a6c:	cmp	ip, #0
   13a70:	rsbmi	r0, r0, #0
   13a74:	bx	lr
   13a78:	teq	ip, r0
   13a7c:	rsbmi	r0, r0, #0
   13a80:	bx	lr
   13a84:	movcc	r0, #0
   13a88:	asreq	r0, ip, #31
   13a8c:	orreq	r0, r0, #1
   13a90:	bx	lr
   13a94:	clz	r2, r1
   13a98:	rsb	r2, r2, #31
   13a9c:	cmp	ip, #0
   13aa0:	lsr	r0, r3, r2
   13aa4:	rsbmi	r0, r0, #0
   13aa8:	bx	lr
   13aac:	cmp	r0, #0
   13ab0:	mvngt	r0, #-2147483648	; 0x80000000
   13ab4:	movlt	r0, #-2147483648	; 0x80000000
   13ab8:	b	13adc <getopt_long_only@@Base+0x46c>
   13abc:	cmp	r1, #0
   13ac0:	beq	13aac <getopt_long_only@@Base+0x43c>
   13ac4:	push	{r0, r1, lr}
   13ac8:	bl	138a4 <getopt_long_only@@Base+0x234>
   13acc:	pop	{r1, r2, lr}
   13ad0:	mul	r3, r2, r0
   13ad4:	sub	r1, r1, r3
   13ad8:	bx	lr
   13adc:	push	{r1, lr}
   13ae0:	mov	r0, #8
   13ae4:	bl	10dbc <raise@plt>
   13ae8:	pop	{r1, pc}
   13aec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13af0:	mov	r7, r0
   13af4:	ldr	r6, [pc, #72]	; 13b44 <getopt_long_only@@Base+0x4d4>
   13af8:	ldr	r5, [pc, #72]	; 13b48 <getopt_long_only@@Base+0x4d8>
   13afc:	add	r6, pc, r6
   13b00:	add	r5, pc, r5
   13b04:	sub	r6, r6, r5
   13b08:	mov	r8, r1
   13b0c:	mov	r9, r2
   13b10:	bl	10d84 <Mat_VarGetNumberOfFields@plt-0x20>
   13b14:	asrs	r6, r6, #2
   13b18:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b1c:	mov	r4, #0
   13b20:	add	r4, r4, #1
   13b24:	ldr	r3, [r5], #4
   13b28:	mov	r2, r9
   13b2c:	mov	r1, r8
   13b30:	mov	r0, r7
   13b34:	blx	r3
   13b38:	cmp	r6, r4
   13b3c:	bne	13b20 <getopt_long_only@@Base+0x4b0>
   13b40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b44:	strdeq	r1, [r1], -r4
   13b48:	andeq	r1, r1, ip, ror #7
   13b4c:	bx	lr

Disassembly of section .fini:

00013b50 <.fini>:
   13b50:	push	{r3, lr}
   13b54:	pop	{r3, pc}
