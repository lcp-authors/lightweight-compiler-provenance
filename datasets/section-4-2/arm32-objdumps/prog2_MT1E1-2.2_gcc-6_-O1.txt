
../repos/prog2/MT1E1-2.2:     file format elf32-littlearm


Disassembly of section .init:

00010724 <.init>:
   10724:	push	{r3, lr}
   10728:	bl	10828 <_start@@Base+0x3c>
   1072c:	pop	{r3, pc}

Disassembly of section .plt:

00010730 <strcmp@plt-0x14>:
   10730:	push	{lr}		; (str lr, [sp, #-4]!)
   10734:	ldr	lr, [pc, #4]	; 10740 <strcmp@plt-0x4>
   10738:	add	lr, pc, lr
   1073c:	ldr	pc, [lr, #8]!
   10740:	andeq	r0, r1, r0, asr #17

00010744 <strcmp@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2240]!	; 0x8c0

00010750 <__isoc99_fscanf@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2232]!	; 0x8b8

0001075c <fopen@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2224]!	; 0x8b0

00010768 <free@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #16, 20	; 0x10000
   10770:	ldr	pc, [ip, #2216]!	; 0x8a8

00010774 <realloc@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #16, 20	; 0x10000
   1077c:	ldr	pc, [ip, #2208]!	; 0x8a0

00010780 <fwrite@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #16, 20	; 0x10000
   10788:	ldr	pc, [ip, #2200]!	; 0x898

0001078c <strcpy@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #16, 20	; 0x10000
   10794:	ldr	pc, [ip, #2192]!	; 0x890

00010798 <malloc@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #16, 20	; 0x10000
   107a0:	ldr	pc, [ip, #2184]!	; 0x888

000107a4 <__libc_start_main@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #16, 20	; 0x10000
   107ac:	ldr	pc, [ip, #2176]!	; 0x880

000107b0 <__gmon_start__@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #16, 20	; 0x10000
   107b8:	ldr	pc, [ip, #2168]!	; 0x878

000107bc <strlen@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #16, 20	; 0x10000
   107c4:	ldr	pc, [ip, #2160]!	; 0x870

000107c8 <fprintf@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #16, 20	; 0x10000
   107d0:	ldr	pc, [ip, #2152]!	; 0x868

000107d4 <fclose@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #16, 20	; 0x10000
   107dc:	ldr	pc, [ip, #2144]!	; 0x860

000107e0 <abort@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #16, 20	; 0x10000
   107e8:	ldr	pc, [ip, #2136]!	; 0x858

Disassembly of section .text:

000107ec <_start@@Base>:
   107ec:	mov	fp, #0
   107f0:	mov	lr, #0
   107f4:	pop	{r1}		; (ldr r1, [sp], #4)
   107f8:	mov	r2, sp
   107fc:	push	{r2}		; (str r2, [sp, #-4]!)
   10800:	push	{r0}		; (str r0, [sp, #-4]!)
   10804:	ldr	ip, [pc, #16]	; 1081c <_start@@Base+0x30>
   10808:	push	{ip}		; (str ip, [sp, #-4]!)
   1080c:	ldr	r0, [pc, #12]	; 10820 <_start@@Base+0x34>
   10810:	ldr	r3, [pc, #12]	; 10824 <_start@@Base+0x38>
   10814:	bl	107a4 <__libc_start_main@plt>
   10818:	bl	107e0 <abort@plt>
   1081c:	andeq	r0, r1, ip, lsl #24
   10820:	andeq	r0, r1, ip, ror #21
   10824:	andeq	r0, r1, ip, lsr #23
   10828:	ldr	r3, [pc, #20]	; 10844 <_start@@Base+0x58>
   1082c:	ldr	r2, [pc, #20]	; 10848 <_start@@Base+0x5c>
   10830:	add	r3, pc, r3
   10834:	ldr	r2, [r3, r2]
   10838:	cmp	r2, #0
   1083c:	bxeq	lr
   10840:	b	107b0 <__gmon_start__@plt>
   10844:	andeq	r0, r1, r8, asr #15
   10848:	andeq	r0, r0, r4, asr #32
   1084c:	ldr	r3, [pc, #28]	; 10870 <_start@@Base+0x84>
   10850:	ldr	r0, [pc, #28]	; 10874 <_start@@Base+0x88>
   10854:	sub	r3, r3, r0
   10858:	cmp	r3, #6
   1085c:	bxls	lr
   10860:	ldr	r3, [pc, #16]	; 10878 <_start@@Base+0x8c>
   10864:	cmp	r3, #0
   10868:	bxeq	lr
   1086c:	bx	r3
   10870:	andeq	r1, r2, r3, asr r0
   10874:	andeq	r1, r2, r0, asr r0
   10878:	andeq	r0, r0, r0
   1087c:	ldr	r1, [pc, #36]	; 108a8 <_start@@Base+0xbc>
   10880:	ldr	r0, [pc, #36]	; 108ac <_start@@Base+0xc0>
   10884:	sub	r1, r1, r0
   10888:	asr	r1, r1, #2
   1088c:	add	r1, r1, r1, lsr #31
   10890:	asrs	r1, r1, #1
   10894:	bxeq	lr
   10898:	ldr	r3, [pc, #16]	; 108b0 <_start@@Base+0xc4>
   1089c:	cmp	r3, #0
   108a0:	bxeq	lr
   108a4:	bx	r3
   108a8:	andeq	r1, r2, r0, asr r0
   108ac:	andeq	r1, r2, r0, asr r0
   108b0:	andeq	r0, r0, r0
   108b4:	push	{r4, lr}
   108b8:	ldr	r4, [pc, #24]	; 108d8 <_start@@Base+0xec>
   108bc:	ldrb	r3, [r4]
   108c0:	cmp	r3, #0
   108c4:	popne	{r4, pc}
   108c8:	bl	1084c <_start@@Base+0x60>
   108cc:	mov	r3, #1
   108d0:	strb	r3, [r4]
   108d4:	pop	{r4, pc}
   108d8:	andeq	r1, r2, r4, asr r0
   108dc:	ldr	r0, [pc, #40]	; 1090c <_start@@Base+0x120>
   108e0:	ldr	r3, [r0]
   108e4:	cmp	r3, #0
   108e8:	bne	108f0 <_start@@Base+0x104>
   108ec:	b	1087c <_start@@Base+0x90>
   108f0:	ldr	r3, [pc, #24]	; 10910 <_start@@Base+0x124>
   108f4:	cmp	r3, #0
   108f8:	beq	108ec <_start@@Base+0x100>
   108fc:	push	{r4, lr}
   10900:	blx	r3
   10904:	pop	{r4, lr}
   10908:	b	1087c <_start@@Base+0x90>
   1090c:	andeq	r0, r2, r4, lsl pc
   10910:	andeq	r0, r0, r0

00010914 <conta_vitorias@@Base>:
   10914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10918:	sub	sp, sp, #52	; 0x34
   1091c:	str	r0, [sp, #4]
   10920:	mov	r8, r1
   10924:	mov	r0, #20
   10928:	bl	10798 <malloc@plt>
   1092c:	subs	r9, r0, #0
   10930:	beq	10adc <conta_vitorias@@Base+0x1c8>
   10934:	mov	r3, #0
   10938:	str	r3, [r8]
   1093c:	ldr	sl, [pc, #420]	; 10ae8 <conta_vitorias@@Base+0x1d4>
   10940:	mov	fp, r3
   10944:	b	10954 <conta_vitorias@@Base+0x40>
   10948:	ldr	r3, [r4, #16]
   1094c:	add	r3, r3, #1
   10950:	str	r3, [r4, #16]
   10954:	add	r2, sp, #32
   10958:	mov	r1, sl
   1095c:	ldr	r0, [sp, #4]
   10960:	bl	10750 <__isoc99_fscanf@plt>
   10964:	cmp	r0, #1
   10968:	bne	10a00 <conta_vitorias@@Base+0xec>
   1096c:	add	r0, sp, #32
   10970:	bl	107bc <strlen@plt>
   10974:	add	r3, sp, #48	; 0x30
   10978:	add	r0, r3, r0
   1097c:	strb	fp, [r0, #-16]
   10980:	ldr	r6, [r8]
   10984:	cmp	r6, #0
   10988:	ble	10ad4 <conta_vitorias@@Base+0x1c0>
   1098c:	mov	r4, r9
   10990:	mov	r5, #0
   10994:	mov	r1, r4
   10998:	add	r0, sp, #32
   1099c:	bl	10744 <strcmp@plt>
   109a0:	cmp	r0, #0
   109a4:	beq	10948 <conta_vitorias@@Base+0x34>
   109a8:	add	r5, r5, #1
   109ac:	add	r4, r4, #20
   109b0:	cmp	r5, r6
   109b4:	bne	10994 <conta_vitorias@@Base+0x80>
   109b8:	add	r6, r6, #1
   109bc:	add	r6, r6, r6, lsl #2
   109c0:	lsl	r1, r6, #2
   109c4:	mov	r0, r9
   109c8:	bl	10774 <realloc@plt>
   109cc:	subs	r9, r0, #0
   109d0:	beq	10adc <conta_vitorias@@Base+0x1c8>
   109d4:	add	r5, r5, r5, lsl #2
   109d8:	add	r5, r9, r5, lsl #2
   109dc:	add	r1, sp, #32
   109e0:	mov	r0, r5
   109e4:	bl	1078c <strcpy@plt>
   109e8:	mov	r3, #1
   109ec:	str	r3, [r5, #16]
   109f0:	ldr	r3, [r8]
   109f4:	add	r3, r3, #1
   109f8:	str	r3, [r8]
   109fc:	b	10954 <conta_vitorias@@Base+0x40>
   10a00:	ldr	r3, [r8]
   10a04:	str	r3, [sp, #4]
   10a08:	cmp	r3, #1
   10a0c:	ble	10adc <conta_vitorias@@Base+0x1c8>
   10a10:	mov	sl, r9
   10a14:	add	r6, r9, #20
   10a18:	mov	fp, #1
   10a1c:	b	10a58 <conta_vitorias@@Base+0x144>
   10a20:	mov	r5, fp
   10a24:	add	r5, r5, r5, lsl #2
   10a28:	add	r5, r9, r5, lsl #2
   10a2c:	add	ip, sp, #12
   10a30:	ldm	ip!, {r0, r1, r2, r3}
   10a34:	stmia	r5!, {r0, r1, r2, r3}
   10a38:	ldr	r3, [ip]
   10a3c:	str	r3, [r5]
   10a40:	add	fp, fp, #1
   10a44:	add	sl, sl, #20
   10a48:	add	r6, r6, #20
   10a4c:	ldr	r3, [sp, #4]
   10a50:	cmp	fp, r3
   10a54:	beq	10adc <conta_vitorias@@Base+0x1c8>
   10a58:	mov	r8, sl
   10a5c:	add	ip, sp, #12
   10a60:	add	lr, sl, #20
   10a64:	ldm	lr!, {r0, r1, r2, r3}
   10a68:	stmia	ip!, {r0, r1, r2, r3}
   10a6c:	ldr	r3, [lr]
   10a70:	str	r3, [ip]
   10a74:	ldr	r7, [sl, #36]	; 0x24
   10a78:	cmp	fp, #0
   10a7c:	ble	10a20 <conta_vitorias@@Base+0x10c>
   10a80:	ldr	r3, [sl, #16]
   10a84:	cmp	r7, r3
   10a88:	ble	10acc <conta_vitorias@@Base+0x1b8>
   10a8c:	mov	r5, fp
   10a90:	mov	r4, #0
   10a94:	add	ip, r6, r4
   10a98:	add	lr, r8, r4
   10a9c:	ldm	lr!, {r0, r1, r2, r3}
   10aa0:	stmia	ip!, {r0, r1, r2, r3}
   10aa4:	ldr	r3, [lr]
   10aa8:	str	r3, [ip]
   10aac:	subs	r5, r5, #1
   10ab0:	beq	10a24 <conta_vitorias@@Base+0x110>
   10ab4:	sub	r4, r4, #20
   10ab8:	add	r3, r6, r4
   10abc:	ldr	r3, [r3, #-4]
   10ac0:	cmp	r7, r3
   10ac4:	bgt	10a94 <conta_vitorias@@Base+0x180>
   10ac8:	b	10a24 <conta_vitorias@@Base+0x110>
   10acc:	mov	r5, fp
   10ad0:	b	10a24 <conta_vitorias@@Base+0x110>
   10ad4:	mov	r5, #0
   10ad8:	b	109b8 <conta_vitorias@@Base+0xa4>
   10adc:	mov	r0, r9
   10ae0:	add	sp, sp, #52	; 0x34
   10ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ae8:	andeq	r0, r1, ip, lsl ip

00010aec <main@@Base>:
   10aec:	push	{r4, r5, r6, r7, r8, r9, lr}
   10af0:	sub	sp, sp, #12
   10af4:	ldr	r1, [pc, #156]	; 10b98 <main@@Base+0xac>
   10af8:	ldr	r0, [pc, #156]	; 10b9c <main@@Base+0xb0>
   10afc:	bl	1075c <fopen@plt>
   10b00:	mov	r9, r0
   10b04:	add	r1, sp, #8
   10b08:	mov	r3, #0
   10b0c:	str	r3, [r1, #-4]!
   10b10:	bl	10914 <conta_vitorias@@Base>
   10b14:	mov	r8, r0
   10b18:	ldr	r3, [pc, #128]	; 10ba0 <main@@Base+0xb4>
   10b1c:	ldr	r3, [r3]
   10b20:	mov	r2, #12
   10b24:	mov	r1, #1
   10b28:	ldr	r0, [pc, #116]	; 10ba4 <main@@Base+0xb8>
   10b2c:	bl	10780 <fwrite@plt>
   10b30:	cmp	r8, #0
   10b34:	beq	10b7c <main@@Base+0x90>
   10b38:	ldr	r3, [sp, #4]
   10b3c:	cmp	r3, #0
   10b40:	ble	10b7c <main@@Base+0x90>
   10b44:	mov	r4, r8
   10b48:	mov	r5, #0
   10b4c:	ldr	r7, [pc, #84]	; 10ba8 <main@@Base+0xbc>
   10b50:	ldr	r6, [pc, #72]	; 10ba0 <main@@Base+0xb4>
   10b54:	ldr	r3, [r4, #16]
   10b58:	mov	r2, r4
   10b5c:	mov	r1, r7
   10b60:	ldr	r0, [r6]
   10b64:	bl	107c8 <fprintf@plt>
   10b68:	add	r5, r5, #1
   10b6c:	add	r4, r4, #20
   10b70:	ldr	r3, [sp, #4]
   10b74:	cmp	r3, r5
   10b78:	bgt	10b54 <main@@Base+0x68>
   10b7c:	mov	r0, r8
   10b80:	bl	10768 <free@plt>
   10b84:	mov	r0, r9
   10b88:	bl	107d4 <fclose@plt>
   10b8c:	mov	r0, #0
   10b90:	add	sp, sp, #12
   10b94:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10b98:	andeq	r0, r1, r0, lsr #24
   10b9c:	andeq	r0, r1, r4, lsr #24
   10ba0:	andeq	r1, r2, r0, asr r0
   10ba4:	andeq	r0, r1, ip, lsr #24
   10ba8:	andeq	r0, r1, ip, lsr ip

00010bac <__libc_csu_init@@Base>:
   10bac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10bb0:	mov	r7, r0
   10bb4:	ldr	r6, [pc, #72]	; 10c04 <__libc_csu_init@@Base+0x58>
   10bb8:	ldr	r5, [pc, #72]	; 10c08 <__libc_csu_init@@Base+0x5c>
   10bbc:	add	r6, pc, r6
   10bc0:	add	r5, pc, r5
   10bc4:	sub	r6, r6, r5
   10bc8:	mov	r8, r1
   10bcc:	mov	r9, r2
   10bd0:	bl	10724 <strcmp@plt-0x20>
   10bd4:	asrs	r6, r6, #2
   10bd8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bdc:	mov	r4, #0
   10be0:	add	r4, r4, #1
   10be4:	ldr	r3, [r5], #4
   10be8:	mov	r2, r9
   10bec:	mov	r1, r8
   10bf0:	mov	r0, r7
   10bf4:	blx	r3
   10bf8:	cmp	r6, r4
   10bfc:	bne	10be0 <__libc_csu_init@@Base+0x34>
   10c00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c04:	andeq	r0, r1, ip, asr #6
   10c08:	andeq	r0, r1, r4, asr #6

00010c0c <__libc_csu_fini@@Base>:
   10c0c:	bx	lr

Disassembly of section .fini:

00010c10 <.fini>:
   10c10:	push	{r3, lr}
   10c14:	pop	{r3, pc}
