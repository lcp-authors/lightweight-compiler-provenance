
../repos/inetutils/src/inetd:     file format elf32-littlearm


Disassembly of section .init:

00011704 <.init>:
   11704:	push	{r3, lr}
   11708:	bl	12420 <__assert_fail@plt+0x7f8>
   1170c:	pop	{r3, pc}

Disassembly of section .plt:

00011710 <calloc@plt-0x14>:
   11710:	push	{lr}		; (str lr, [sp, #-4]!)
   11714:	ldr	lr, [pc, #4]	; 11720 <calloc@plt-0x4>
   11718:	add	lr, pc, lr
   1171c:	ldr	pc, [lr, #8]!
   11720:	andeq	ip, r1, r0, ror #17

00011724 <calloc@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #28, 20	; 0x1c000
   1172c:	ldr	pc, [ip, #2272]!	; 0x8e0

00011730 <fputs_unlocked@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #28, 20	; 0x1c000
   11738:	ldr	pc, [ip, #2264]!	; 0x8d8

0001173c <__getdelim@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #28, 20	; 0x1c000
   11744:	ldr	pc, [ip, #2256]!	; 0x8d0

00011748 <getpwnam@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #28, 20	; 0x1c000
   11750:	ldr	pc, [ip, #2248]!	; 0x8c8

00011754 <strcmp@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #28, 20	; 0x1c000
   1175c:	ldr	pc, [ip, #2240]!	; 0x8c0

00011760 <strtol@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #28, 20	; 0x1c000
   11768:	ldr	pc, [ip, #2232]!	; 0x8b8

0001176c <setsockopt@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #28, 20	; 0x1c000
   11774:	ldr	pc, [ip, #2224]!	; 0x8b0

00011778 <strcspn@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #28, 20	; 0x1c000
   11780:	ldr	pc, [ip, #2216]!	; 0x8a8

00011784 <pause@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #28, 20	; 0x1c000
   1178c:	ldr	pc, [ip, #2208]!	; 0x8a0

00011790 <printf@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #28, 20	; 0x1c000
   11798:	ldr	pc, [ip, #2200]!	; 0x898

0001179c <read@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #28, 20	; 0x1c000
   117a4:	ldr	pc, [ip, #2192]!	; 0x890

000117a8 <getprotobyname@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #28, 20	; 0x1c000
   117b0:	ldr	pc, [ip, #2184]!	; 0x888

000117b4 <sigprocmask@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #28, 20	; 0x1c000
   117bc:	ldr	pc, [ip, #2176]!	; 0x880

000117c0 <memmove@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #28, 20	; 0x1c000
   117c8:	ldr	pc, [ip, #2168]!	; 0x878

000117cc <strchrnul@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #28, 20	; 0x1c000
   117d4:	ldr	pc, [ip, #2160]!	; 0x870

000117d8 <free@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #28, 20	; 0x1c000
   117e0:	ldr	pc, [ip, #2152]!	; 0x868

000117e4 <gai_strerror@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #28, 20	; 0x1c000
   117ec:	ldr	pc, [ip, #2144]!	; 0x860

000117f0 <strndup@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #28, 20	; 0x1c000
   117f8:	ldr	pc, [ip, #2136]!	; 0x858

000117fc <_exit@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #28, 20	; 0x1c000
   11804:	ldr	pc, [ip, #2128]!	; 0x850

00011808 <memcpy@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #28, 20	; 0x1c000
   11810:	ldr	pc, [ip, #2120]!	; 0x848

00011814 <signal@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #28, 20	; 0x1c000
   1181c:	ldr	pc, [ip, #2112]!	; 0x840

00011820 <time@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #28, 20	; 0x1c000
   11828:	ldr	pc, [ip, #2104]!	; 0x838

0001182c <fwrite_unlocked@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #28, 20	; 0x1c000
   11834:	ldr	pc, [ip, #2096]!	; 0x830

00011838 <memcmp@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #28, 20	; 0x1c000
   11840:	ldr	pc, [ip, #2088]!	; 0x828

00011844 <select@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #28, 20	; 0x1c000
   1184c:	ldr	pc, [ip, #2080]!	; 0x820

00011850 <sleep@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #28, 20	; 0x1c000
   11858:	ldr	pc, [ip, #2072]!	; 0x818

0001185c <ctime@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #28, 20	; 0x1c000
   11864:	ldr	pc, [ip, #2064]!	; 0x810

00011868 <recvfrom@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #28, 20	; 0x1c000
   11870:	ldr	pc, [ip, #2056]!	; 0x808

00011874 <strdup@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #28, 20	; 0x1c000
   1187c:	ldr	pc, [ip, #2048]!	; 0x800

00011880 <alarm@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #28, 20	; 0x1c000
   11888:	ldr	pc, [ip, #2040]!	; 0x7f8

0001188c <sysconf@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #28, 20	; 0x1c000
   11894:	ldr	pc, [ip, #2032]!	; 0x7f0

00011898 <dup2@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #28, 20	; 0x1c000
   118a0:	ldr	pc, [ip, #2024]!	; 0x7e8

000118a4 <realloc@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #28, 20	; 0x1c000
   118ac:	ldr	pc, [ip, #2016]!	; 0x7e0

000118b0 <initgroups@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #28, 20	; 0x1c000
   118b8:	ldr	pc, [ip, #2008]!	; 0x7d8

000118bc <chdir@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #28, 20	; 0x1c000
   118c4:	ldr	pc, [ip, #2000]!	; 0x7d0

000118c8 <strcasecmp@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #28, 20	; 0x1c000
   118d0:	ldr	pc, [ip, #1992]!	; 0x7c8

000118d4 <funlockfile@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #28, 20	; 0x1c000
   118dc:	ldr	pc, [ip, #1984]!	; 0x7c0

000118e0 <accept@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #28, 20	; 0x1c000
   118e8:	ldr	pc, [ip, #1976]!	; 0x7b8

000118ec <sigaction@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #28, 20	; 0x1c000
   118f4:	ldr	pc, [ip, #1968]!	; 0x7b0

000118f8 <fwrite@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #28, 20	; 0x1c000
   11900:	ldr	pc, [ip, #1960]!	; 0x7a8

00011904 <strcat@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #28, 20	; 0x1c000
   1190c:	ldr	pc, [ip, #1952]!	; 0x7a0

00011910 <gettimeofday@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #28, 20	; 0x1c000
   11918:	ldr	pc, [ip, #1944]!	; 0x798

0001191c <error@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #28, 20	; 0x1c000
   11924:	ldr	pc, [ip, #1936]!	; 0x790

00011928 <opendir@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #28, 20	; 0x1c000
   11930:	ldr	pc, [ip, #1928]!	; 0x788

00011934 <open64@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #28, 20	; 0x1c000
   1193c:	ldr	pc, [ip, #1920]!	; 0x780

00011940 <getenv@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #28, 20	; 0x1c000
   11948:	ldr	pc, [ip, #1912]!	; 0x778

0001194c <setgid@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #28, 20	; 0x1c000
   11954:	ldr	pc, [ip, #1904]!	; 0x770

00011958 <malloc@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #28, 20	; 0x1c000
   11960:	ldr	pc, [ip, #1896]!	; 0x768

00011964 <sigaddset@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #28, 20	; 0x1c000
   1196c:	ldr	pc, [ip, #1888]!	; 0x760

00011970 <__libc_start_main@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #28, 20	; 0x1c000
   11978:	ldr	pc, [ip, #1880]!	; 0x758

0001197c <strerror@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #28, 20	; 0x1c000
   11984:	ldr	pc, [ip, #1872]!	; 0x750

00011988 <__ctype_tolower_loc@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #28, 20	; 0x1c000
   11990:	ldr	pc, [ip, #1864]!	; 0x748

00011994 <__gmon_start__@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #28, 20	; 0x1c000
   1199c:	ldr	pc, [ip, #1856]!	; 0x740

000119a0 <mempcpy@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #28, 20	; 0x1c000
   119a8:	ldr	pc, [ip, #1848]!	; 0x738

000119ac <__ctype_b_loc@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #28, 20	; 0x1c000
   119b4:	ldr	pc, [ip, #1840]!	; 0x730

000119b8 <getpid@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #28, 20	; 0x1c000
   119c0:	ldr	pc, [ip, #1832]!	; 0x728

000119c4 <exit@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #28, 20	; 0x1c000
   119cc:	ldr	pc, [ip, #1824]!	; 0x720

000119d0 <strtoul@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #28, 20	; 0x1c000
   119d8:	ldr	pc, [ip, #1816]!	; 0x718

000119dc <strlen@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #28, 20	; 0x1c000
   119e4:	ldr	pc, [ip, #1808]!	; 0x710

000119e8 <setsid@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #28, 20	; 0x1c000
   119f0:	ldr	pc, [ip, #1800]!	; 0x708

000119f4 <strchr@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #28, 20	; 0x1c000
   119fc:	ldr	pc, [ip, #1792]!	; 0x700

00011a00 <setenv@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #28, 20	; 0x1c000
   11a08:	ldr	pc, [ip, #1784]!	; 0x6f8

00011a0c <fprintf@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #28, 20	; 0x1c000
   11a14:	ldr	pc, [ip, #1776]!	; 0x6f0

00011a18 <execv@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #28, 20	; 0x1c000
   11a20:	ldr	pc, [ip, #1768]!	; 0x6e8

00011a24 <__errno_location@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #28, 20	; 0x1c000
   11a2c:	ldr	pc, [ip, #1760]!	; 0x6e0

00011a30 <snprintf@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #28, 20	; 0x1c000
   11a38:	ldr	pc, [ip, #1752]!	; 0x6d8

00011a3c <strerror_r@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #28, 20	; 0x1c000
   11a44:	ldr	pc, [ip, #1744]!	; 0x6d0

00011a48 <bind@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #28, 20	; 0x1c000
   11a50:	ldr	pc, [ip, #1736]!	; 0x6c8

00011a54 <memset@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #28, 20	; 0x1c000
   11a5c:	ldr	pc, [ip, #1728]!	; 0x6c0

00011a60 <strncpy@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #28, 20	; 0x1c000
   11a68:	ldr	pc, [ip, #1720]!	; 0x6b8

00011a6c <sigsuspend@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #28, 20	; 0x1c000
   11a74:	ldr	pc, [ip, #1712]!	; 0x6b0

00011a78 <wait3@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #28, 20	; 0x1c000
   11a80:	ldr	pc, [ip, #1704]!	; 0x6a8

00011a84 <write@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #28, 20	; 0x1c000
   11a8c:	ldr	pc, [ip, #1696]!	; 0x6a0

00011a90 <memchr@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #28, 20	; 0x1c000
   11a98:	ldr	pc, [ip, #1688]!	; 0x698

00011a9c <fclose@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #28, 20	; 0x1c000
   11aa4:	ldr	pc, [ip, #1680]!	; 0x690

00011aa8 <sendto@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #28, 20	; 0x1c000
   11ab0:	ldr	pc, [ip, #1672]!	; 0x688

00011ab4 <__overflow@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #28, 20	; 0x1c000
   11abc:	ldr	pc, [ip, #1664]!	; 0x680

00011ac0 <sigemptyset@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #28, 20	; 0x1c000
   11ac8:	ldr	pc, [ip, #1656]!	; 0x678

00011acc <fork@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #28, 20	; 0x1c000
   11ad4:	ldr	pc, [ip, #1648]!	; 0x670

00011ad8 <getnameinfo@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #28, 20	; 0x1c000
   11ae0:	ldr	pc, [ip, #1640]!	; 0x668

00011ae4 <strrchr@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #28, 20	; 0x1c000
   11aec:	ldr	pc, [ip, #1632]!	; 0x660

00011af0 <listen@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #28, 20	; 0x1c000
   11af8:	ldr	pc, [ip, #1624]!	; 0x658

00011afc <vfprintf@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #28, 20	; 0x1c000
   11b04:	ldr	pc, [ip, #1616]!	; 0x650

00011b08 <fputc@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #28, 20	; 0x1c000
   11b10:	ldr	pc, [ip, #1608]!	; 0x648

00011b14 <syslog@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #28, 20	; 0x1c000
   11b1c:	ldr	pc, [ip, #1600]!	; 0x640

00011b20 <setuid@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #28, 20	; 0x1c000
   11b28:	ldr	pc, [ip, #1592]!	; 0x638

00011b2c <sprintf@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #28, 20	; 0x1c000
   11b34:	ldr	pc, [ip, #1584]!	; 0x630

00011b38 <readdir64@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #28, 20	; 0x1c000
   11b40:	ldr	pc, [ip, #1576]!	; 0x628

00011b44 <openlog@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #28, 20	; 0x1c000
   11b4c:	ldr	pc, [ip, #1568]!	; 0x620

00011b50 <getsockname@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #28, 20	; 0x1c000
   11b58:	ldr	pc, [ip, #1560]!	; 0x618

00011b5c <flockfile@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #28, 20	; 0x1c000
   11b64:	ldr	pc, [ip, #1552]!	; 0x610

00011b68 <vsnprintf@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #28, 20	; 0x1c000
   11b70:	ldr	pc, [ip, #1544]!	; 0x608

00011b74 <fopen64@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #28, 20	; 0x1c000
   11b7c:	ldr	pc, [ip, #1536]!	; 0x600

00011b80 <qsort@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #28, 20	; 0x1c000
   11b88:	ldr	pc, [ip, #1528]!	; 0x5f8

00011b8c <getpeername@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #28, 20	; 0x1c000
   11b94:	ldr	pc, [ip, #1520]!	; 0x5f0

00011b98 <freeaddrinfo@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #28, 20	; 0x1c000
   11ba0:	ldr	pc, [ip, #1512]!	; 0x5e8

00011ba4 <getaddrinfo@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #28, 20	; 0x1c000
   11bac:	ldr	pc, [ip, #1504]!	; 0x5e0

00011bb0 <socket@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #28, 20	; 0x1c000
   11bb8:	ldr	pc, [ip, #1496]!	; 0x5d8

00011bbc <__xstat64@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #28, 20	; 0x1c000
   11bc4:	ldr	pc, [ip, #1488]!	; 0x5d0

00011bc8 <unsetenv@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #28, 20	; 0x1c000
   11bd0:	ldr	pc, [ip, #1480]!	; 0x5c8

00011bd4 <strncmp@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #28, 20	; 0x1c000
   11bdc:	ldr	pc, [ip, #1472]!	; 0x5c0

00011be0 <abort@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #28, 20	; 0x1c000
   11be8:	ldr	pc, [ip, #1464]!	; 0x5b8

00011bec <recv@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #28, 20	; 0x1c000
   11bf4:	ldr	pc, [ip, #1456]!	; 0x5b0

00011bf8 <close@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #28, 20	; 0x1c000
   11c00:	ldr	pc, [ip, #1448]!	; 0x5a8

00011c04 <closedir@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #28, 20	; 0x1c000
   11c0c:	ldr	pc, [ip, #1440]!	; 0x5a0

00011c10 <getgrnam@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #28, 20	; 0x1c000
   11c18:	ldr	pc, [ip, #1432]!	; 0x598

00011c1c <strspn@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #28, 20	; 0x1c000
   11c24:	ldr	pc, [ip, #1424]!	; 0x590

00011c28 <__assert_fail@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #28, 20	; 0x1c000
   11c30:	ldr	pc, [ip, #1416]!	; 0x588

Disassembly of section .text:

00011c34 <daemon@@Base-0x3ea0>:
   11c34:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11c38:	mov	r4, r1
   11c3c:	mov	r5, r2
   11c40:	strd	r6, [sp, #8]
   11c44:	mov	r6, r0
   11c48:	strd	r8, [sp, #16]
   11c4c:	strd	sl, [sp, #24]
   11c50:	str	lr, [sp, #32]
   11c54:	sub	sp, sp, #308	; 0x134
   11c58:	ldr	r0, [r1]
   11c5c:	bl	171d8 <argp_parse@@Base+0x1110>
   11c60:	movw	r3, #58868	; 0xe5f4
   11c64:	movt	r3, #2
   11c68:	cmp	r5, #0
   11c6c:	str	r4, [r3]
   11c70:	beq	11d64 <__assert_fail@plt+0x13c>
   11c74:	ldr	r3, [r5]
   11c78:	cmp	r3, #0
   11c7c:	beq	11d64 <__assert_fail@plt+0x13c>
   11c80:	ldr	r3, [r5, #4]!
   11c84:	cmp	r3, #0
   11c88:	bne	11c80 <__assert_fail@plt+0x58>
   11c8c:	ldr	r5, [r5, #-4]
   11c90:	movw	r8, #58300	; 0xe3bc
   11c94:	movt	r8, #2
   11c98:	mov	r0, r5
   11c9c:	bl	119dc <strlen@plt>
   11ca0:	add	r0, r5, r0
   11ca4:	movw	r1, #58872	; 0xe5f8
   11ca8:	movt	r1, #2
   11cac:	movw	r3, #58900	; 0xe614
   11cb0:	movt	r3, #2
   11cb4:	movw	r2, #51840	; 0xca80
   11cb8:	movt	r2, #1
   11cbc:	str	r0, [r1]
   11cc0:	movw	r0, #51864	; 0xca98
   11cc4:	movt	r0, #1
   11cc8:	ldr	r1, [pc, #1804]	; 123dc <__assert_fail@plt+0x7b4>
   11ccc:	str	r2, [r3]
   11cd0:	bl	16fd0 <argp_parse@@Base+0xf08>
   11cd4:	mov	r1, #0
   11cd8:	add	r2, sp, #40	; 0x28
   11cdc:	ldr	r0, [pc, #1788]	; 123e0 <__assert_fail@plt+0x7b8>
   11ce0:	mov	r3, r1
   11ce4:	str	r2, [sp]
   11ce8:	mov	r2, r4
   11cec:	str	r1, [sp, #4]
   11cf0:	mov	r1, r6
   11cf4:	bl	160c8 <argp_parse@@Base>
   11cf8:	ldrb	r3, [r8, #2]
   11cfc:	cmp	r3, #0
   11d00:	movne	r3, #1
   11d04:	strbne	r3, [r8, #1]
   11d08:	ldr	r3, [sp, #40]	; 0x28
   11d0c:	cmp	r3, r6
   11d10:	bge	11d78 <__assert_fail@plt+0x150>
   11d14:	sub	r3, r6, r3
   11d18:	mov	r1, #4
   11d1c:	add	r0, r3, #1
   11d20:	bl	17720 <argp_parse@@Base+0x1658>
   11d24:	ldr	r3, [sp, #40]	; 0x28
   11d28:	movw	r2, #58888	; 0xe608
   11d2c:	movt	r2, #2
   11d30:	str	r0, [r2]
   11d34:	cmp	r6, r3
   11d38:	ble	11db8 <__assert_fail@plt+0x190>
   11d3c:	sub	r5, r0, #4
   11d40:	ldr	r0, [r4, r3, lsl #2]
   11d44:	bl	11874 <strdup@plt>
   11d48:	ldr	r3, [sp, #40]	; 0x28
   11d4c:	str	r0, [r5, #4]!
   11d50:	add	r3, r3, #1
   11d54:	cmp	r3, r6
   11d58:	str	r3, [sp, #40]	; 0x28
   11d5c:	blt	11d40 <__assert_fail@plt+0x118>
   11d60:	b	11db8 <__assert_fail@plt+0x190>
   11d64:	ldr	r3, [r4]
   11d68:	mov	r5, r4
   11d6c:	cmp	r3, #0
   11d70:	bne	11c80 <__assert_fail@plt+0x58>
   11d74:	b	11c8c <__assert_fail@plt+0x64>
   11d78:	mov	r1, #4
   11d7c:	mov	r0, #3
   11d80:	bl	17720 <argp_parse@@Base+0x1658>
   11d84:	mov	r6, r0
   11d88:	movw	r5, #58888	; 0xe608
   11d8c:	movt	r5, #2
   11d90:	movw	r0, #51872	; 0xcaa0
   11d94:	movt	r0, #1
   11d98:	str	r6, [r5]
   11d9c:	bl	12ef4 <__assert_fail@plt+0x12cc>
   11da0:	ldr	r5, [r5]
   11da4:	str	r0, [r6]
   11da8:	movw	r0, #51900	; 0xcabc
   11dac:	movt	r0, #1
   11db0:	bl	12ef4 <__assert_fail@plt+0x12cc>
   11db4:	str	r0, [r5, #4]
   11db8:	ldrb	r1, [r8]
   11dbc:	cmp	r1, #0
   11dc0:	bne	11dd4 <__assert_fail@plt+0x1ac>
   11dc4:	mov	r0, r1
   11dc8:	bl	15ad4 <daemon@@Base>
   11dcc:	cmp	r0, #0
   11dd0:	blt	12368 <__assert_fail@plt+0x740>
   11dd4:	movw	r3, #57800	; 0xe1c8
   11dd8:	movt	r3, #2
   11ddc:	mov	r4, r3
   11de0:	movw	r0, #51864	; 0xca98
   11de4:	movt	r0, #1
   11de8:	mov	r2, #24
   11dec:	str	r3, [sp, #24]
   11df0:	mov	r1, #17
   11df4:	bl	11b44 <openlog@plt>
   11df8:	ldrb	r3, [r4, #4]
   11dfc:	cmp	r3, #0
   11e00:	bne	12310 <__assert_fail@plt+0x6e8>
   11e04:	movw	r3, #58288	; 0xe3b0
   11e08:	movt	r3, #2
   11e0c:	str	r3, [sp, #12]
   11e10:	mov	r0, #14
   11e14:	movw	r1, #13412	; 0x3464
   11e18:	movt	r1, #1
   11e1c:	movw	r7, #58860	; 0xe5ec
   11e20:	movt	r7, #2
   11e24:	movw	r9, #58724	; 0xe564
   11e28:	movt	r9, #2
   11e2c:	bl	129ac <__assert_fail@plt+0xd84>
   11e30:	mov	r0, #0
   11e34:	mov	r4, r0
   11e38:	bl	1494c <__assert_fail@plt+0x2d24>
   11e3c:	movw	r3, #58728	; 0xe568
   11e40:	movt	r3, #2
   11e44:	mov	r0, #1
   11e48:	movw	r1, #18764	; 0x494c
   11e4c:	movt	r1, #1
   11e50:	mov	fp, r3
   11e54:	str	r3, [sp, #28]
   11e58:	bl	129ac <__assert_fail@plt+0xd84>
   11e5c:	mov	r0, #17
   11e60:	movw	r1, #9428	; 0x24d4
   11e64:	movt	r1, #1
   11e68:	bl	129ac <__assert_fail@plt+0xd84>
   11e6c:	mov	r1, #1
   11e70:	mov	r0, #13
   11e74:	bl	129ac <__assert_fail@plt+0xd84>
   11e78:	movw	r3, #58892	; 0xe60c
   11e7c:	movt	r3, #2
   11e80:	mov	r2, #99	; 0x63
   11e84:	mov	r1, #120	; 0x78
   11e88:	str	r3, [sp, #20]
   11e8c:	movw	r3, #58880	; 0xe600
   11e90:	movt	r3, #2
   11e94:	add	r0, sp, #176	; 0xb0
   11e98:	str	r3, [sp, #32]
   11e9c:	bl	11a54 <memset@plt>
   11ea0:	movw	r3, #52140	; 0xcbac
   11ea4:	movt	r3, #1
   11ea8:	movw	r0, #52012	; 0xcb2c
   11eac:	movt	r0, #1
   11eb0:	add	r1, sp, #176	; 0xb0
   11eb4:	mov	r2, #1
   11eb8:	str	r3, [sp, #36]	; 0x24
   11ebc:	strb	r4, [sp, #275]	; 0x113
   11ec0:	bl	11a00 <setenv@plt>
   11ec4:	ldr	r4, [r7]
   11ec8:	cmp	r4, #0
   11ecc:	beq	11f1c <__assert_fail@plt+0x2f4>
   11ed0:	mov	r2, #128	; 0x80
   11ed4:	mov	r1, fp
   11ed8:	add	r0, sp, #48	; 0x30
   11edc:	bl	11808 <memcpy@plt>
   11ee0:	ldr	r0, [r9]
   11ee4:	mov	r3, #0
   11ee8:	add	r1, sp, #48	; 0x30
   11eec:	mov	r2, r3
   11ef0:	str	r3, [sp]
   11ef4:	add	r0, r0, #1
   11ef8:	bl	11844 <select@plt>
   11efc:	subs	r6, r0, #0
   11f00:	bgt	11f54 <__assert_fail@plt+0x32c>
   11f04:	bne	12124 <__assert_fail@plt+0x4fc>
   11f08:	mov	r0, #1
   11f0c:	bl	11850 <sleep@plt>
   11f10:	ldr	r4, [r7]
   11f14:	cmp	r4, #0
   11f18:	bne	11ed0 <__assert_fail@plt+0x2a8>
   11f1c:	add	r0, sp, #176	; 0xb0
   11f20:	bl	11ac0 <sigemptyset@plt>
   11f24:	mov	r0, r4
   11f28:	bl	12a10 <__assert_fail@plt+0xde8>
   11f2c:	ldr	r3, [r7]
   11f30:	cmp	r3, #0
   11f34:	bne	11f4c <__assert_fail@plt+0x324>
   11f38:	add	r0, sp, #176	; 0xb0
   11f3c:	bl	11a6c <sigsuspend@plt>
   11f40:	ldr	r3, [r7]
   11f44:	cmp	r3, #0
   11f48:	beq	11f38 <__assert_fail@plt+0x310>
   11f4c:	bl	12910 <__assert_fail@plt+0xce8>
   11f50:	b	11ed0 <__assert_fail@plt+0x2a8>
   11f54:	ldr	r3, [sp, #20]
   11f58:	ldr	r4, [r3]
   11f5c:	cmp	r4, #0
   11f60:	beq	11ec4 <__assert_fail@plt+0x29c>
   11f64:	movw	r3, #52128	; 0xcba0
   11f68:	movt	r3, #1
   11f6c:	str	r3, [sp, #8]
   11f70:	movw	r3, #52076	; 0xcb6c
   11f74:	movt	r3, #1
   11f78:	str	r3, [sp, #16]
   11f7c:	b	11fb8 <__assert_fail@plt+0x390>
   11f80:	bl	12910 <__assert_fail@plt+0xce8>
   11f84:	mov	r1, r4
   11f88:	mov	r0, r5
   11f8c:	bl	12a84 <__assert_fail@plt+0xe5c>
   11f90:	ldr	r3, [r4, #24]
   11f94:	cmp	r3, #0
   11f98:	bne	11fa8 <__assert_fail@plt+0x380>
   11f9c:	ldr	r3, [r4, #16]
   11fa0:	cmp	r3, #1
   11fa4:	beq	12244 <__assert_fail@plt+0x61c>
   11fa8:	ldr	r4, [r4, #220]	; 0xdc
   11fac:	cmp	r6, #0
   11fb0:	cmpne	r4, #0
   11fb4:	beq	11ec4 <__assert_fail@plt+0x29c>
   11fb8:	ldr	r5, [r4, #60]	; 0x3c
   11fbc:	cmn	r5, #1
   11fc0:	beq	11fa8 <__assert_fail@plt+0x380>
   11fc4:	cmp	r5, #0
   11fc8:	add	r3, r5, #31
   11fcc:	movge	r3, r5
   11fd0:	rsbs	r1, r5, #0
   11fd4:	and	r1, r1, #31
   11fd8:	asr	r3, r3, #5
   11fdc:	and	r2, r5, #31
   11fe0:	rsbpl	r2, r1, #0
   11fe4:	add	r1, sp, #304	; 0x130
   11fe8:	add	r3, r1, r3, lsl #2
   11fec:	mov	r0, #1
   11ff0:	ldr	r3, [r3, #-256]	; 0xffffff00
   11ff4:	ands	r3, r3, r0, lsl r2
   11ff8:	beq	11fa8 <__assert_fail@plt+0x380>
   11ffc:	ldrb	r3, [r8]
   12000:	sub	r6, r6, #1
   12004:	cmp	r3, #0
   12008:	bne	12104 <__assert_fail@plt+0x4dc>
   1200c:	ldr	r3, [r4, #24]
   12010:	cmp	r3, #0
   12014:	bne	12024 <__assert_fail@plt+0x3fc>
   12018:	ldr	r3, [r4, #16]
   1201c:	cmp	r3, #1
   12020:	beq	12190 <__assert_fail@plt+0x568>
   12024:	mov	r0, #0
   12028:	bl	12a10 <__assert_fail@plt+0xde8>
   1202c:	ldr	r3, [r4, #44]	; 0x2c
   12030:	cmp	r3, #0
   12034:	beq	12044 <__assert_fail@plt+0x41c>
   12038:	ldrsh	r3, [r3, #8]
   1203c:	cmp	r3, #0
   12040:	beq	11f80 <__assert_fail@plt+0x358>
   12044:	ldr	r1, [r4, #208]	; 0xd0
   12048:	add	r3, r1, #1
   1204c:	cmp	r1, #0
   12050:	str	r3, [r4, #208]	; 0xd0
   12054:	beq	12148 <__assert_fail@plt+0x520>
   12058:	ldr	r2, [r4, #28]
   1205c:	cmp	r2, #0
   12060:	cmpne	r3, r2
   12064:	bhi	12078 <__assert_fail@plt+0x450>
   12068:	ldr	r2, [sp, #24]
   1206c:	ldr	r2, [r2, #8]
   12070:	cmp	r3, r2
   12074:	bcc	120a8 <__assert_fail@plt+0x480>
   12078:	mov	r1, #0
   1207c:	add	r0, sp, #176	; 0xb0
   12080:	bl	11910 <gettimeofday@plt>
   12084:	ldr	r3, [sp, #176]	; 0xb0
   12088:	ldr	r2, [r4, #212]	; 0xd4
   1208c:	sub	r3, r3, r2
   12090:	cmp	r3, #60	; 0x3c
   12094:	ble	12250 <__assert_fail@plt+0x628>
   12098:	ldrd	r2, [sp, #176]	; 0xb0
   1209c:	mov	r1, #1
   120a0:	str	r1, [r4, #208]	; 0xd0
   120a4:	strd	r2, [r4, #212]	; 0xd4
   120a8:	bl	11acc <fork@plt>
   120ac:	cmp	r0, #0
   120b0:	blt	1215c <__assert_fail@plt+0x534>
   120b4:	beq	121e0 <__assert_fail@plt+0x5b8>
   120b8:	ldr	r3, [r4, #24]
   120bc:	cmp	r3, #0
   120c0:	beq	120fc <__assert_fail@plt+0x4d4>
   120c4:	ldr	r3, [r4, #60]	; 0x3c
   120c8:	str	r0, [r4, #24]
   120cc:	cmp	r3, #0
   120d0:	blt	120fc <__assert_fail@plt+0x4d4>
   120d4:	ldr	lr, [sp, #28]
   120d8:	asr	r0, r3, #5
   120dc:	mov	ip, #1
   120e0:	and	r3, r3, #31
   120e4:	ldr	r1, [r7]
   120e8:	ldr	r2, [lr, r0, lsl #2]
   120ec:	sub	r1, r1, #1
   120f0:	str	r1, [r7]
   120f4:	bic	r3, r2, ip, lsl r3
   120f8:	str	r3, [lr, r0, lsl #2]
   120fc:	bl	12910 <__assert_fail@plt+0xce8>
   12100:	b	11f90 <__assert_fail@plt+0x368>
   12104:	ldr	r3, [sp, #12]
   12108:	movw	r1, #50088	; 0xc3a8
   1210c:	movt	r1, #1
   12110:	ldr	r2, [r4, #12]
   12114:	ldr	r0, [r3]
   12118:	bl	11a0c <fprintf@plt>
   1211c:	ldr	r5, [r4, #60]	; 0x3c
   12120:	b	1200c <__assert_fail@plt+0x3e4>
   12124:	bl	11a24 <__errno_location@plt>
   12128:	ldr	r3, [r0]
   1212c:	cmp	r3, #4
   12130:	beq	11f08 <__assert_fail@plt+0x2e0>
   12134:	movw	r1, #52024	; 0xcb38
   12138:	movt	r1, #1
   1213c:	mov	r0, #4
   12140:	bl	11b14 <syslog@plt>
   12144:	b	11f08 <__assert_fail@plt+0x2e0>
   12148:	add	r0, r4, #212	; 0xd4
   1214c:	bl	11910 <gettimeofday@plt>
   12150:	bl	11acc <fork@plt>
   12154:	cmp	r0, #0
   12158:	bge	120b4 <__assert_fail@plt+0x48c>
   1215c:	mov	r0, #3
   12160:	ldr	r1, [sp, #8]
   12164:	bl	11b14 <syslog@plt>
   12168:	ldr	r3, [r4, #24]
   1216c:	cmp	r3, #0
   12170:	bne	12180 <__assert_fail@plt+0x558>
   12174:	ldr	r3, [r4, #16]
   12178:	cmp	r3, #1
   1217c:	beq	122f8 <__assert_fail@plt+0x6d0>
   12180:	bl	12910 <__assert_fail@plt+0xce8>
   12184:	mov	r0, #1
   12188:	bl	11850 <sleep@plt>
   1218c:	b	11fa8 <__assert_fail@plt+0x380>
   12190:	mov	r3, #128	; 0x80
   12194:	mov	r0, r5
   12198:	add	r2, sp, #44	; 0x2c
   1219c:	add	r1, sp, #176	; 0xb0
   121a0:	str	r3, [sp, #44]	; 0x2c
   121a4:	bl	118e0 <accept@plt>
   121a8:	ldrb	r3, [r8]
   121ac:	mov	r5, r0
   121b0:	cmp	r3, #0
   121b4:	bne	122b0 <__assert_fail@plt+0x688>
   121b8:	cmp	r5, #0
   121bc:	blt	122d0 <__assert_fail@plt+0x6a8>
   121c0:	ldrb	r3, [r8, #1]
   121c4:	cmp	r3, #0
   121c8:	beq	12024 <__assert_fail@plt+0x3fc>
   121cc:	add	r1, sp, #176	; 0xb0
   121d0:	mov	r0, r5
   121d4:	ldr	r2, [sp, #44]	; 0x2c
   121d8:	bl	150c0 <__assert_fail@plt+0x3498>
   121dc:	b	12024 <__assert_fail@plt+0x3fc>
   121e0:	bl	12910 <__assert_fail@plt+0xce8>
   121e4:	ldrb	r3, [r8]
   121e8:	cmp	r3, #0
   121ec:	beq	12218 <__assert_fail@plt+0x5f0>
   121f0:	bl	119e8 <setsid@plt>
   121f4:	ldrb	r3, [r8]
   121f8:	ldr	sl, [r9]
   121fc:	cmp	r3, #0
   12200:	beq	1221c <__assert_fail@plt+0x5f4>
   12204:	ldr	r3, [sp, #12]
   12208:	mov	r2, sl
   1220c:	ldr	r1, [sp, #36]	; 0x24
   12210:	ldr	r0, [r3]
   12214:	bl	11a0c <fprintf@plt>
   12218:	ldr	sl, [r9]
   1221c:	cmp	sl, #2
   12220:	ble	11f84 <__assert_fail@plt+0x35c>
   12224:	cmp	r5, sl
   12228:	beq	12234 <__assert_fail@plt+0x60c>
   1222c:	mov	r0, sl
   12230:	bl	11bf8 <close@plt>
   12234:	sub	sl, sl, #1
   12238:	cmp	sl, #2
   1223c:	bne	12224 <__assert_fail@plt+0x5fc>
   12240:	b	11f84 <__assert_fail@plt+0x35c>
   12244:	mov	r0, r5
   12248:	bl	11bf8 <close@plt>
   1224c:	b	11fa8 <__assert_fail@plt+0x380>
   12250:	mov	r0, #3
   12254:	ldr	r2, [r4, #12]
   12258:	ldr	r1, [sp, #16]
   1225c:	ldr	r3, [r4, #20]
   12260:	bl	11b14 <syslog@plt>
   12264:	mov	r0, r4
   12268:	bl	135ec <__assert_fail@plt+0x19c4>
   1226c:	ldr	r3, [r4, #24]
   12270:	cmp	r3, #0
   12274:	bne	12284 <__assert_fail@plt+0x65c>
   12278:	ldr	r3, [r4, #16]
   1227c:	cmp	r3, #1
   12280:	beq	12304 <__assert_fail@plt+0x6dc>
   12284:	bl	12910 <__assert_fail@plt+0xce8>
   12288:	ldr	r3, [sp, #32]
   1228c:	ldr	r3, [r3]
   12290:	cmp	r3, #0
   12294:	bne	11fa8 <__assert_fail@plt+0x380>
   12298:	ldr	r2, [sp, #32]
   1229c:	mov	r3, #1
   122a0:	mov	r0, #600	; 0x258
   122a4:	str	r3, [r2]
   122a8:	bl	11880 <alarm@plt>
   122ac:	b	11fa8 <__assert_fail@plt+0x380>
   122b0:	ldr	r3, [sp, #12]
   122b4:	mov	r2, r0
   122b8:	movw	r1, #52036	; 0xcb44
   122bc:	movt	r1, #1
   122c0:	ldr	r0, [r3]
   122c4:	bl	11a0c <fprintf@plt>
   122c8:	cmp	r5, #0
   122cc:	bge	121c0 <__assert_fail@plt+0x598>
   122d0:	bl	11a24 <__errno_location@plt>
   122d4:	ldr	r3, [r0]
   122d8:	cmp	r3, #4
   122dc:	beq	11fa8 <__assert_fail@plt+0x380>
   122e0:	movw	r1, #52056	; 0xcb58
   122e4:	movt	r1, #1
   122e8:	ldr	r2, [r4, #12]
   122ec:	mov	r0, #4
   122f0:	bl	11b14 <syslog@plt>
   122f4:	b	11fa8 <__assert_fail@plt+0x380>
   122f8:	mov	r0, r5
   122fc:	bl	11bf8 <close@plt>
   12300:	b	12180 <__assert_fail@plt+0x558>
   12304:	mov	r0, r5
   12308:	bl	11bf8 <close@plt>
   1230c:	b	12284 <__assert_fail@plt+0x65c>
   12310:	ldr	r3, [sp, #24]
   12314:	movw	r1, #51960	; 0xcaf8
   12318:	movt	r1, #1
   1231c:	ldr	r0, [r3]
   12320:	bl	11b74 <fopen64@plt>
   12324:	subs	r4, r0, #0
   12328:	beq	123a0 <__assert_fail@plt+0x778>
   1232c:	ldrb	r3, [r8]
   12330:	cmp	r3, #0
   12334:	movw	r3, #58288	; 0xe3b0
   12338:	movt	r3, #2
   1233c:	str	r3, [sp, #12]
   12340:	bne	12384 <__assert_fail@plt+0x75c>
   12344:	bl	119b8 <getpid@plt>
   12348:	mov	r2, r0
   1234c:	movw	r1, #49872	; 0xc2d0
   12350:	movt	r1, #1
   12354:	mov	r0, r4
   12358:	bl	11a0c <fprintf@plt>
   1235c:	mov	r0, r4
   12360:	bl	11a9c <fclose@plt>
   12364:	b	11e10 <__assert_fail@plt+0x1e8>
   12368:	mov	r0, #27
   1236c:	movw	r1, #51924	; 0xcad4
   12370:	movt	r1, #1
   12374:	ldr	r2, [r4]
   12378:	bl	11b14 <syslog@plt>
   1237c:	mov	r0, #1
   12380:	bl	119c4 <exit@plt>
   12384:	ldr	r2, [sp, #24]
   12388:	movw	r1, #51964	; 0xcafc
   1238c:	movt	r1, #1
   12390:	ldr	r0, [r3]
   12394:	ldr	r2, [r2]
   12398:	bl	11a0c <fprintf@plt>
   1239c:	b	12344 <__assert_fail@plt+0x71c>
   123a0:	bl	11a24 <__errno_location@plt>
   123a4:	movw	r3, #58288	; 0xe3b0
   123a8:	movt	r3, #2
   123ac:	ldr	r0, [r0]
   123b0:	str	r3, [sp, #12]
   123b4:	ldr	r3, [sp, #24]
   123b8:	ldr	r4, [r3]
   123bc:	bl	1197c <strerror@plt>
   123c0:	mov	r3, r0
   123c4:	movw	r1, #51992	; 0xcb18
   123c8:	movt	r1, #1
   123cc:	mov	r0, #2
   123d0:	mov	r2, r4
   123d4:	bl	11b14 <syslog@plt>
   123d8:	b	11e10 <__assert_fail@plt+0x1e8>
   123dc:	muleq	r2, ip, r2
   123e0:	andeq	lr, r2, r4, asr #5
   123e4:	mov	fp, #0
   123e8:	mov	lr, #0
   123ec:	pop	{r1}		; (ldr r1, [sp], #4)
   123f0:	mov	r2, sp
   123f4:	push	{r2}		; (str r2, [sp, #-4]!)
   123f8:	push	{r0}		; (str r0, [sp, #-4]!)
   123fc:	ldr	ip, [pc, #16]	; 12414 <__assert_fail@plt+0x7ec>
   12400:	push	{ip}		; (str ip, [sp, #-4]!)
   12404:	ldr	r0, [pc, #12]	; 12418 <__assert_fail@plt+0x7f0>
   12408:	ldr	r3, [pc, #12]	; 1241c <__assert_fail@plt+0x7f4>
   1240c:	bl	11970 <__libc_start_main@plt>
   12410:	bl	11be0 <abort@plt>
   12414:	andeq	ip, r1, ip, asr #4
   12418:	andeq	r1, r1, r4, lsr ip
   1241c:	andeq	ip, r1, ip, ror #3
   12420:	ldr	r3, [pc, #20]	; 1243c <__assert_fail@plt+0x814>
   12424:	ldr	r2, [pc, #20]	; 12440 <__assert_fail@plt+0x818>
   12428:	add	r3, pc, r3
   1242c:	ldr	r2, [r3, r2]
   12430:	cmp	r2, #0
   12434:	bxeq	lr
   12438:	b	11994 <__gmon_start__@plt>
   1243c:	ldrdeq	fp, [r1], -r0
   12440:			; <UNDEFINED> instruction: 0x000001bc
   12444:	ldr	r0, [pc, #24]	; 12464 <__assert_fail@plt+0x83c>
   12448:	ldr	r3, [pc, #24]	; 12468 <__assert_fail@plt+0x840>
   1244c:	cmp	r3, r0
   12450:	bxeq	lr
   12454:	ldr	r3, [pc, #16]	; 1246c <__assert_fail@plt+0x844>
   12458:	cmp	r3, #0
   1245c:	bxeq	lr
   12460:	bx	r3
   12464:	andeq	lr, r2, r8, lsr #7
   12468:	andeq	lr, r2, r8, lsr #7
   1246c:	andeq	r0, r0, r0
   12470:	ldr	r0, [pc, #36]	; 1249c <__assert_fail@plt+0x874>
   12474:	ldr	r1, [pc, #36]	; 124a0 <__assert_fail@plt+0x878>
   12478:	sub	r1, r1, r0
   1247c:	asr	r1, r1, #2
   12480:	add	r1, r1, r1, lsr #31
   12484:	asrs	r1, r1, #1
   12488:	bxeq	lr
   1248c:	ldr	r3, [pc, #16]	; 124a4 <__assert_fail@plt+0x87c>
   12490:	cmp	r3, #0
   12494:	bxeq	lr
   12498:	bx	r3
   1249c:	andeq	lr, r2, r8, lsr #7
   124a0:	andeq	lr, r2, r8, lsr #7
   124a4:	andeq	r0, r0, r0
   124a8:	push	{r4, lr}
   124ac:	ldr	r4, [pc, #24]	; 124cc <__assert_fail@plt+0x8a4>
   124b0:	ldrb	r3, [r4]
   124b4:	cmp	r3, #0
   124b8:	popne	{r4, pc}
   124bc:	bl	12444 <__assert_fail@plt+0x81c>
   124c0:	mov	r3, #1
   124c4:	strb	r3, [r4]
   124c8:	pop	{r4, pc}
   124cc:			; <UNDEFINED> instruction: 0x0002e3b8
   124d0:	b	12470 <__assert_fail@plt+0x848>
   124d4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   124d8:	strd	r6, [sp, #8]
   124dc:	movw	r7, #58728	; 0xe568
   124e0:	movt	r7, #2
   124e4:	movw	r6, #58860	; 0xe5ec
   124e8:	movt	r6, #2
   124ec:	strd	r8, [sp, #16]
   124f0:	movw	r8, #58300	; 0xe3bc
   124f4:	movt	r8, #2
   124f8:	str	lr, [sp, #24]
   124fc:	movw	r9, #58288	; 0xe3b0
   12500:	movt	r9, #2
   12504:	sub	sp, sp, #12
   12508:	mov	r2, #0
   1250c:	mov	r1, #1
   12510:	add	r0, sp, #4
   12514:	bl	11a78 <wait3@plt>
   12518:	subs	r5, r0, #0
   1251c:	ble	12618 <__assert_fail@plt+0x9f0>
   12520:	ldrb	r3, [r8]
   12524:	cmp	r3, #0
   12528:	bne	125fc <__assert_fail@plt+0x9d4>
   1252c:	movw	r3, #58892	; 0xe60c
   12530:	movt	r3, #2
   12534:	ldr	r4, [r3]
   12538:	cmp	r4, #0
   1253c:	bne	12550 <__assert_fail@plt+0x928>
   12540:	b	12508 <__assert_fail@plt+0x8e0>
   12544:	ldr	r4, [r4, #220]	; 0xdc
   12548:	cmp	r4, #0
   1254c:	beq	12508 <__assert_fail@plt+0x8e0>
   12550:	ldr	r3, [r4, #24]
   12554:	cmp	r3, r5
   12558:	bne	12544 <__assert_fail@plt+0x91c>
   1255c:	ldr	r3, [sp, #4]
   12560:	cmp	r3, #0
   12564:	bne	125bc <__assert_fail@plt+0x994>
   12568:	ldrb	r2, [r8]
   1256c:	ldr	r3, [r4, #60]	; 0x3c
   12570:	cmp	r2, #0
   12574:	bne	125e0 <__assert_fail@plt+0x9b8>
   12578:	cmp	r3, #0
   1257c:	add	r2, r3, #31
   12580:	ldr	ip, [r6]
   12584:	movge	r2, r3
   12588:	and	r1, r3, #31
   1258c:	asr	r2, r2, #5
   12590:	rsbs	r3, r3, #0
   12594:	mov	r0, #1
   12598:	and	r3, r3, #31
   1259c:	rsbpl	r1, r3, #0
   125a0:	ldr	r3, [r7, r2, lsl #2]
   125a4:	add	ip, ip, r0
   125a8:	str	ip, [r6]
   125ac:	orr	r3, r3, r0, lsl r1
   125b0:	str	r3, [r7, r2, lsl #2]
   125b4:	str	r0, [r4, #24]
   125b8:	b	12544 <__assert_fail@plt+0x91c>
   125bc:	movw	r1, #49832	; 0xc2a8
   125c0:	movt	r1, #1
   125c4:	ldr	r2, [r4, #48]	; 0x30
   125c8:	mov	r0, #4
   125cc:	bl	11b14 <syslog@plt>
   125d0:	ldrb	r2, [r8]
   125d4:	ldr	r3, [r4, #60]	; 0x3c
   125d8:	cmp	r2, #0
   125dc:	beq	12578 <__assert_fail@plt+0x950>
   125e0:	movw	r1, #49856	; 0xc2c0
   125e4:	movt	r1, #1
   125e8:	ldr	r0, [r9]
   125ec:	ldr	r2, [r4, #12]
   125f0:	bl	11a0c <fprintf@plt>
   125f4:	ldr	r3, [r4, #60]	; 0x3c
   125f8:	b	12578 <__assert_fail@plt+0x950>
   125fc:	movw	r1, #49808	; 0xc290
   12600:	movt	r1, #1
   12604:	ldr	r0, [r9]
   12608:	mov	r2, r5
   1260c:	ldr	r3, [sp, #4]
   12610:	bl	11a0c <fprintf@plt>
   12614:	b	1252c <__assert_fail@plt+0x904>
   12618:	add	sp, sp, #12
   1261c:	ldrd	r4, [sp]
   12620:	ldrd	r6, [sp, #8]
   12624:	ldrd	r8, [sp, #16]
   12628:	add	sp, sp, #24
   1262c:	pop	{pc}		; (ldr pc, [sp], #4)
   12630:	push	{lr}		; (str lr, [sp, #-4]!)
   12634:	sub	sp, sp, #8192	; 0x2000
   12638:	mov	r2, #8192	; 0x2000
   1263c:	sub	sp, sp, #4
   12640:	mov	r1, sp
   12644:	bl	1179c <read@plt>
   12648:	add	sp, sp, #8192	; 0x2000
   1264c:	add	sp, sp, #4
   12650:	pop	{pc}		; (ldr pc, [sp], #4)
   12654:	strd	r4, [sp, #-16]!
   12658:	mov	r5, #128	; 0x80
   1265c:	mov	r2, #8192	; 0x2000
   12660:	str	r6, [sp, #8]
   12664:	mov	r3, #0
   12668:	mov	r6, r0
   1266c:	str	lr, [sp, #12]
   12670:	sub	sp, sp, #8320	; 0x2080
   12674:	sub	sp, sp, #16
   12678:	add	ip, sp, #12
   1267c:	add	r4, sp, #16
   12680:	add	r1, sp, #144	; 0x90
   12684:	stm	sp, {r4, ip}
   12688:	str	r5, [sp, #12]
   1268c:	bl	11868 <recvfrom@plt>
   12690:	subs	r2, r0, #0
   12694:	blt	126ac <__assert_fail@plt+0xa84>
   12698:	add	r1, sp, #144	; 0x90
   1269c:	mov	r0, r6
   126a0:	strd	r4, [sp]
   126a4:	mov	r3, #0
   126a8:	bl	11aa8 <sendto@plt>
   126ac:	add	sp, sp, #8320	; 0x2080
   126b0:	add	sp, sp, #16
   126b4:	ldrd	r4, [sp]
   126b8:	ldr	r6, [sp, #8]
   126bc:	add	sp, sp, #12
   126c0:	pop	{pc}		; (ldr pc, [sp], #4)
   126c4:	str	r4, [sp, #-8]!
   126c8:	mov	r4, r0
   126cc:	mov	r0, #0
   126d0:	str	lr, [sp, #4]
   126d4:	sub	sp, sp, #264	; 0x108
   126d8:	bl	11820 <time@plt>
   126dc:	str	r0, [sp, #4]
   126e0:	add	r0, sp, #4
   126e4:	bl	1185c <ctime@plt>
   126e8:	mov	r2, r0
   126ec:	movw	r1, #49876	; 0xc2d4
   126f0:	movt	r1, #1
   126f4:	add	r0, sp, #8
   126f8:	bl	11b2c <sprintf@plt>
   126fc:	add	r0, sp, #8
   12700:	bl	119dc <strlen@plt>
   12704:	mov	r2, r0
   12708:	add	r1, sp, #8
   1270c:	mov	r0, r4
   12710:	bl	11a84 <write@plt>
   12714:	add	sp, sp, #264	; 0x108
   12718:	ldr	r4, [sp]
   1271c:	add	sp, sp, #4
   12720:	pop	{pc}		; (ldr pc, [sp], #4)
   12724:	strd	r4, [sp, #-16]!
   12728:	mov	r5, r0
   1272c:	mov	r0, #0
   12730:	str	r6, [sp, #8]
   12734:	mov	r4, #128	; 0x80
   12738:	str	lr, [sp, #12]
   1273c:	sub	sp, sp, #400	; 0x190
   12740:	bl	11820 <time@plt>
   12744:	add	r6, sp, #16
   12748:	add	r2, sp, #12
   1274c:	add	r1, sp, #144	; 0x90
   12750:	mov	r3, #0
   12754:	str	r6, [sp]
   12758:	str	r2, [sp, #4]
   1275c:	mov	r2, #256	; 0x100
   12760:	str	r0, [sp, #8]
   12764:	mov	r0, r5
   12768:	str	r4, [sp, #12]
   1276c:	bl	11868 <recvfrom@plt>
   12770:	cmp	r0, #0
   12774:	blt	127b8 <__assert_fail@plt+0xb90>
   12778:	add	r0, sp, #8
   1277c:	bl	1185c <ctime@plt>
   12780:	mov	r2, r0
   12784:	movw	r1, #49876	; 0xc2d4
   12788:	movt	r1, #1
   1278c:	add	r0, sp, #144	; 0x90
   12790:	bl	11b2c <sprintf@plt>
   12794:	add	r0, sp, #144	; 0x90
   12798:	bl	119dc <strlen@plt>
   1279c:	mov	r2, r0
   127a0:	add	r1, sp, #144	; 0x90
   127a4:	str	r6, [sp]
   127a8:	mov	r0, r5
   127ac:	mov	r3, #0
   127b0:	str	r4, [sp, #4]
   127b4:	bl	11aa8 <sendto@plt>
   127b8:	add	sp, sp, #400	; 0x190
   127bc:	ldrd	r4, [sp]
   127c0:	ldr	r6, [sp, #8]
   127c4:	add	sp, sp, #12
   127c8:	pop	{pc}		; (ldr pc, [sp], #4)
   127cc:	cmp	r0, #112	; 0x70
   127d0:	beq	12848 <__assert_fail@plt+0xc20>
   127d4:	ble	12804 <__assert_fail@plt+0xbdc>
   127d8:	cmp	r0, #256	; 0x100
   127dc:	beq	12870 <__assert_fail@plt+0xc48>
   127e0:	movw	r3, #257	; 0x101
   127e4:	cmp	r0, r3
   127e8:	bne	12840 <__assert_fail@plt+0xc18>
   127ec:	mov	r2, #1
   127f0:	movw	r3, #58300	; 0xe3bc
   127f4:	movt	r3, #2
   127f8:	mov	r0, #0
   127fc:	strb	r2, [r3, #2]
   12800:	bx	lr
   12804:	cmp	r0, #82	; 0x52
   12808:	beq	12888 <__assert_fail@plt+0xc60>
   1280c:	cmp	r0, #100	; 0x64
   12810:	bne	12840 <__assert_fail@plt+0xc18>
   12814:	movw	r3, #58864	; 0xe5f0
   12818:	movt	r3, #2
   1281c:	ldr	r2, [r3]
   12820:	mov	ip, #1
   12824:	movw	r1, #58300	; 0xe3bc
   12828:	movt	r1, #2
   1282c:	mov	r0, #0
   12830:	strb	ip, [r1]
   12834:	orr	r2, r2, ip
   12838:	str	r2, [r3]
   1283c:	bx	lr
   12840:	mov	r0, #7
   12844:	bx	lr
   12848:	cmp	r1, #0
   1284c:	beq	128e0 <__assert_fail@plt+0xcb8>
   12850:	ldrb	r3, [r1]
   12854:	cmp	r3, #0
   12858:	beq	128e0 <__assert_fail@plt+0xcb8>
   1285c:	movw	r3, #57800	; 0xe1c8
   12860:	movt	r3, #2
   12864:	mov	r0, #0
   12868:	str	r1, [r3]
   1286c:	bx	lr
   12870:	mov	r2, #1
   12874:	movw	r3, #58300	; 0xe3bc
   12878:	movt	r3, #2
   1287c:	mov	r0, #0
   12880:	strb	r2, [r3, #1]
   12884:	bx	lr
   12888:	str	r4, [sp, #-8]!
   1288c:	mov	r0, r1
   12890:	mov	r4, r1
   12894:	str	lr, [sp, #4]
   12898:	sub	sp, sp, #8
   1289c:	mov	r2, #0
   128a0:	add	r1, sp, #4
   128a4:	bl	11760 <strtol@plt>
   128a8:	cmp	r0, #0
   128ac:	ble	128f8 <__assert_fail@plt+0xcd0>
   128b0:	ldr	r3, [sp, #4]
   128b4:	ldrb	r3, [r3]
   128b8:	cmp	r3, #0
   128bc:	bne	128f8 <__assert_fail@plt+0xcd0>
   128c0:	movw	r3, #57800	; 0xe1c8
   128c4:	movt	r3, #2
   128c8:	str	r0, [r3, #8]
   128cc:	mov	r0, #0
   128d0:	add	sp, sp, #8
   128d4:	ldr	r4, [sp]
   128d8:	add	sp, sp, #4
   128dc:	pop	{pc}		; (ldr pc, [sp], #4)
   128e0:	mov	r2, #0
   128e4:	movw	r3, #57800	; 0xe1c8
   128e8:	movt	r3, #2
   128ec:	mov	r0, r2
   128f0:	strb	r2, [r3, #4]
   128f4:	bx	lr
   128f8:	mov	r2, r4
   128fc:	movw	r1, #49884	; 0xc2dc
   12900:	movt	r1, #1
   12904:	mov	r0, #3
   12908:	bl	11b14 <syslog@plt>
   1290c:	b	128cc <__assert_fail@plt+0xca4>
   12910:	push	{lr}		; (str lr, [sp, #-4]!)
   12914:	sub	sp, sp, #132	; 0x84
   12918:	mov	r0, sp
   1291c:	bl	11ac0 <sigemptyset@plt>
   12920:	mov	r1, sp
   12924:	mov	r2, #0
   12928:	mov	r0, #2
   1292c:	bl	117b4 <sigprocmask@plt>
   12930:	add	sp, sp, #132	; 0x84
   12934:	pop	{pc}		; (ldr pc, [sp], #4)
   12938:	strd	r4, [sp, #-16]!
   1293c:	movw	r4, #57800	; 0xe1c8
   12940:	movt	r4, #2
   12944:	ldr	r3, [r4, #12]
   12948:	str	r6, [sp, #8]
   1294c:	str	lr, [sp, #12]
   12950:	cmp	r3, #0
   12954:	beq	12998 <__assert_fail@plt+0xd70>
   12958:	mov	r6, r0
   1295c:	add	r4, r4, #12
   12960:	ldr	r5, [r0, #16]
   12964:	b	12974 <__assert_fail@plt+0xd4c>
   12968:	ldr	r3, [r4, #16]!
   1296c:	cmp	r3, #0
   12970:	beq	12998 <__assert_fail@plt+0xd70>
   12974:	ldr	r2, [r4, #4]
   12978:	cmp	r2, r5
   1297c:	bne	12968 <__assert_fail@plt+0xd40>
   12980:	mov	r0, r3
   12984:	ldr	r1, [r6, #12]
   12988:	bl	11754 <strcmp@plt>
   1298c:	cmp	r0, #0
   12990:	bne	12968 <__assert_fail@plt+0xd40>
   12994:	mov	r3, r4
   12998:	ldrd	r4, [sp]
   1299c:	mov	r0, r3
   129a0:	ldr	r6, [sp, #8]
   129a4:	add	sp, sp, #12
   129a8:	pop	{pc}		; (ldr pc, [sp], #4)
   129ac:	strd	r4, [sp, #-12]!
   129b0:	mov	r2, #140	; 0x8c
   129b4:	mov	r4, r0
   129b8:	str	lr, [sp, #8]
   129bc:	sub	sp, sp, #148	; 0x94
   129c0:	mov	r5, r1
   129c4:	add	r0, sp, #4
   129c8:	mov	r1, #0
   129cc:	bl	11a54 <memset@plt>
   129d0:	add	r0, sp, #8
   129d4:	bl	11ac0 <sigemptyset@plt>
   129d8:	mov	r1, r4
   129dc:	add	r0, sp, #8
   129e0:	bl	11964 <sigaddset@plt>
   129e4:	mov	r3, #268435456	; 0x10000000
   129e8:	add	r1, sp, #4
   129ec:	str	r5, [sp, #4]
   129f0:	mov	r0, r4
   129f4:	mov	r2, #0
   129f8:	str	r3, [sp, #136]	; 0x88
   129fc:	bl	118ec <sigaction@plt>
   12a00:	add	sp, sp, #148	; 0x94
   12a04:	ldrd	r4, [sp]
   12a08:	add	sp, sp, #8
   12a0c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a10:	str	r4, [sp, #-8]!
   12a14:	mov	r4, r0
   12a18:	str	lr, [sp, #4]
   12a1c:	sub	sp, sp, #128	; 0x80
   12a20:	mov	r0, sp
   12a24:	bl	11ac0 <sigemptyset@plt>
   12a28:	mov	r0, sp
   12a2c:	mov	r1, #17
   12a30:	bl	11964 <sigaddset@plt>
   12a34:	mov	r0, sp
   12a38:	mov	r1, #1
   12a3c:	bl	11964 <sigaddset@plt>
   12a40:	mov	r0, sp
   12a44:	mov	r1, #14
   12a48:	bl	11964 <sigaddset@plt>
   12a4c:	mov	r2, r4
   12a50:	mov	r1, sp
   12a54:	mov	r0, #0
   12a58:	bl	117b4 <sigprocmask@plt>
   12a5c:	add	sp, sp, #128	; 0x80
   12a60:	ldr	r4, [sp]
   12a64:	add	sp, sp, #4
   12a68:	pop	{pc}		; (ldr pc, [sp], #4)
   12a6c:	subs	r1, r0, #0
   12a70:	beq	12a80 <__assert_fail@plt+0xe58>
   12a74:	mov	r2, #0
   12a78:	mov	r0, #2
   12a7c:	b	117b4 <sigprocmask@plt>
   12a80:	b	12910 <__assert_fail@plt+0xce8>
   12a84:	ldr	r3, [r1, #44]	; 0x2c
   12a88:	strd	r4, [sp, #-16]!
   12a8c:	str	r6, [sp, #8]
   12a90:	str	lr, [sp, #12]
   12a94:	sub	sp, sp, #64	; 0x40
   12a98:	cmp	r3, #0
   12a9c:	beq	12abc <__assert_fail@plt+0xe94>
   12aa0:	ldr	r3, [r3, #12]
   12aa4:	blx	r3
   12aa8:	add	sp, sp, #64	; 0x40
   12aac:	ldrd	r4, [sp]
   12ab0:	ldr	r6, [sp, #8]
   12ab4:	add	sp, sp, #12
   12ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   12abc:	movw	r3, #58300	; 0xe3bc
   12ac0:	movt	r3, #2
   12ac4:	ldrb	r3, [r3]
   12ac8:	mov	r4, r1
   12acc:	mov	r5, r0
   12ad0:	cmp	r3, #0
   12ad4:	bne	12c20 <__assert_fail@plt+0xff8>
   12ad8:	mov	r1, #0
   12adc:	mov	r0, r5
   12ae0:	bl	11898 <dup2@plt>
   12ae4:	mov	r0, r5
   12ae8:	bl	11bf8 <close@plt>
   12aec:	mov	r1, #1
   12af0:	mov	r0, #0
   12af4:	bl	11898 <dup2@plt>
   12af8:	mov	r1, #2
   12afc:	mov	r0, #0
   12b00:	bl	11898 <dup2@plt>
   12b04:	ldr	r0, [r4, #36]	; 0x24
   12b08:	bl	11748 <getpwnam@plt>
   12b0c:	subs	r5, r0, #0
   12b10:	beq	12c6c <__assert_fail@plt+0x1044>
   12b14:	ldr	r0, [r4, #40]	; 0x28
   12b18:	cmp	r0, #0
   12b1c:	beq	12b2c <__assert_fail@plt+0xf04>
   12b20:	ldrb	r3, [r0]
   12b24:	cmp	r3, #0
   12b28:	bne	12bdc <__assert_fail@plt+0xfb4>
   12b2c:	ldr	r3, [r5, #8]
   12b30:	cmp	r3, #0
   12b34:	beq	12b68 <__assert_fail@plt+0xf40>
   12b38:	ldr	r0, [r5, #12]
   12b3c:	bl	1194c <setgid@plt>
   12b40:	cmp	r0, #0
   12b44:	bge	12bb0 <__assert_fail@plt+0xf88>
   12b48:	ldr	r3, [r5, #12]
   12b4c:	movw	r1, #50000	; 0xc350
   12b50:	movt	r1, #1
   12b54:	mov	r0, #3
   12b58:	ldr	r2, [r4, #12]
   12b5c:	bl	11b14 <syslog@plt>
   12b60:	mov	r0, #1
   12b64:	bl	117fc <_exit@plt>
   12b68:	ldrd	r0, [r4, #48]	; 0x30
   12b6c:	bl	11a18 <execv@plt>
   12b70:	ldr	r3, [r4, #16]
   12b74:	cmp	r3, #1
   12b78:	bne	12b98 <__assert_fail@plt+0xf70>
   12b7c:	mov	r0, #3
   12b80:	movw	r1, #50056	; 0xc388
   12b84:	movt	r1, #1
   12b88:	ldr	r2, [r4, #48]	; 0x30
   12b8c:	bl	11b14 <syslog@plt>
   12b90:	mov	r0, #1
   12b94:	bl	117fc <_exit@plt>
   12b98:	mov	r3, #0
   12b9c:	mov	r2, #50	; 0x32
   12ba0:	mov	r0, r3
   12ba4:	add	r1, sp, #12
   12ba8:	bl	11bec <recv@plt>
   12bac:	b	12b7c <__assert_fail@plt+0xf54>
   12bb0:	ldr	r0, [r5]
   12bb4:	ldr	r1, [r5, #12]
   12bb8:	bl	118b0 <initgroups@plt>
   12bbc:	ldr	r0, [r5, #8]
   12bc0:	bl	11b20 <setuid@plt>
   12bc4:	cmp	r0, #0
   12bc8:	bge	12b68 <__assert_fail@plt+0xf40>
   12bcc:	movw	r1, #50028	; 0xc36c
   12bd0:	movt	r1, #1
   12bd4:	ldr	r3, [r5, #8]
   12bd8:	b	12b54 <__assert_fail@plt+0xf2c>
   12bdc:	bl	11c10 <getgrnam@plt>
   12be0:	subs	r6, r0, #0
   12be4:	movweq	r1, #49972	; 0xc334
   12be8:	ldreq	ip, [r4, #40]	; 0x28
   12bec:	movteq	r1, #1
   12bf0:	beq	12c78 <__assert_fail@plt+0x1050>
   12bf4:	ldr	r3, [r5, #8]
   12bf8:	cmp	r3, #0
   12bfc:	beq	12b68 <__assert_fail@plt+0xf40>
   12c00:	ldr	r0, [r6, #8]
   12c04:	cmp	r0, #0
   12c08:	bne	12c4c <__assert_fail@plt+0x1024>
   12c0c:	ldr	r0, [r5, #12]
   12c10:	bl	1194c <setgid@plt>
   12c14:	cmp	r0, #0
   12c18:	bge	12c58 <__assert_fail@plt+0x1030>
   12c1c:	b	12b48 <__assert_fail@plt+0xf20>
   12c20:	movw	r3, #58288	; 0xe3b0
   12c24:	movt	r3, #2
   12c28:	ldr	r6, [r3]
   12c2c:	bl	119b8 <getpid@plt>
   12c30:	mov	r2, r0
   12c34:	movw	r1, #49932	; 0xc30c
   12c38:	movt	r1, #1
   12c3c:	ldr	r3, [r4, #48]	; 0x30
   12c40:	mov	r0, r6
   12c44:	bl	11a0c <fprintf@plt>
   12c48:	b	12ad8 <__assert_fail@plt+0xeb0>
   12c4c:	bl	1194c <setgid@plt>
   12c50:	cmp	r0, #0
   12c54:	blt	12cb0 <__assert_fail@plt+0x1088>
   12c58:	ldr	r1, [r6, #8]
   12c5c:	ldr	r0, [r5]
   12c60:	cmp	r1, #0
   12c64:	bne	12bb8 <__assert_fail@plt+0xf90>
   12c68:	b	12bb4 <__assert_fail@plt+0xf8c>
   12c6c:	ldr	ip, [r4, #36]	; 0x24
   12c70:	movw	r1, #49948	; 0xc31c
   12c74:	movt	r1, #1
   12c78:	mov	r0, #3
   12c7c:	ldr	r2, [r4, #12]
   12c80:	ldr	r3, [r4, #20]
   12c84:	str	ip, [sp]
   12c88:	bl	11b14 <syslog@plt>
   12c8c:	ldr	r3, [r4, #16]
   12c90:	cmp	r3, #1
   12c94:	beq	12b60 <__assert_fail@plt+0xf38>
   12c98:	mov	r3, #0
   12c9c:	mov	r2, #50	; 0x32
   12ca0:	mov	r0, r3
   12ca4:	add	r1, sp, #12
   12ca8:	bl	11bec <recv@plt>
   12cac:	b	12b60 <__assert_fail@plt+0xf38>
   12cb0:	movw	r1, #50000	; 0xc350
   12cb4:	movt	r1, #1
   12cb8:	ldr	r3, [r6, #8]
   12cbc:	b	12b54 <__assert_fail@plt+0xf2c>
   12cc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12cc4:	movw	r5, #258	; 0x102
   12cc8:	strd	r6, [sp, #8]
   12ccc:	mov	r6, r0
   12cd0:	movw	r7, #257	; 0x101
   12cd4:	str	r8, [sp, #16]
   12cd8:	mov	r8, #0
   12cdc:	str	lr, [sp, #20]
   12ce0:	sub	sp, sp, #264	; 0x108
   12ce4:	add	r4, sp, #4
   12ce8:	sub	r2, r5, r8
   12cec:	mov	r1, r4
   12cf0:	mov	r0, r6
   12cf4:	bl	1179c <read@plt>
   12cf8:	cmp	r0, #0
   12cfc:	beq	12e58 <__assert_fail@plt+0x1230>
   12d00:	blt	12e7c <__assert_fail@plt+0x1254>
   12d04:	ldrb	r2, [r4]
   12d08:	cmp	r2, #10
   12d0c:	cmpne	r2, #13
   12d10:	moveq	r3, #1
   12d14:	movne	r3, #0
   12d18:	cmp	r2, #0
   12d1c:	moveq	r3, #1
   12d20:	cmp	r3, #0
   12d24:	bne	12e58 <__assert_fail@plt+0x1230>
   12d28:	add	ip, r4, r0
   12d2c:	sub	lr, r8, r4
   12d30:	add	r3, r4, #1
   12d34:	cmp	ip, r3
   12d38:	mov	r4, r3
   12d3c:	add	r0, lr, r3
   12d40:	beq	12e10 <__assert_fail@plt+0x11e8>
   12d44:	ldrb	r1, [r3], #1
   12d48:	cmp	r1, #10
   12d4c:	cmpne	r1, #13
   12d50:	moveq	r2, #1
   12d54:	movne	r2, #0
   12d58:	cmp	r1, #0
   12d5c:	moveq	r2, #1
   12d60:	cmp	r2, #0
   12d64:	beq	12d34 <__assert_fail@plt+0x110c>
   12d68:	movw	r3, #58300	; 0xe3bc
   12d6c:	movt	r3, #2
   12d70:	ldrb	r3, [r3]
   12d74:	add	r2, sp, #264	; 0x108
   12d78:	add	r0, r2, r0
   12d7c:	mov	r2, #0
   12d80:	strb	r2, [r0, #-260]	; 0xfffffefc
   12d84:	cmp	r3, r2
   12d88:	bne	12e20 <__assert_fail@plt+0x11f8>
   12d8c:	movw	r1, #50108	; 0xc3bc
   12d90:	movt	r1, #1
   12d94:	add	r0, sp, #4
   12d98:	bl	118c8 <strcasecmp@plt>
   12d9c:	cmp	r0, #0
   12da0:	movw	r3, #58892	; 0xe60c
   12da4:	movt	r3, #2
   12da8:	ldr	r4, [r3]
   12dac:	bne	12db8 <__assert_fail@plt+0x1190>
   12db0:	b	12e98 <__assert_fail@plt+0x1270>
   12db4:	ldr	r4, [r4, #220]	; 0xdc
   12db8:	cmp	r4, #0
   12dbc:	beq	12e60 <__assert_fail@plt+0x1238>
   12dc0:	ldr	r5, [r4, #64]	; 0x40
   12dc4:	sub	r3, r5, #1
   12dc8:	cmp	r3, #1
   12dcc:	bhi	12db4 <__assert_fail@plt+0x118c>
   12dd0:	add	r0, sp, #4
   12dd4:	ldr	r1, [r4, #12]
   12dd8:	bl	118c8 <strcasecmp@plt>
   12ddc:	cmp	r0, #0
   12de0:	bne	12db4 <__assert_fail@plt+0x118c>
   12de4:	cmp	r5, #2
   12de8:	beq	12e40 <__assert_fail@plt+0x1218>
   12dec:	mov	r1, r4
   12df0:	mov	r0, r6
   12df4:	bl	12a84 <__assert_fail@plt+0xe5c>
   12df8:	add	sp, sp, #264	; 0x108
   12dfc:	ldrd	r4, [sp]
   12e00:	ldrd	r6, [sp, #8]
   12e04:	ldr	r8, [sp, #16]
   12e08:	add	sp, sp, #20
   12e0c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e10:	cmp	r0, r7
   12e14:	mov	r8, r0
   12e18:	ble	12ce8 <__assert_fail@plt+0x10c0>
   12e1c:	b	12d68 <__assert_fail@plt+0x1140>
   12e20:	movw	r3, #58288	; 0xe3b0
   12e24:	movt	r3, #2
   12e28:	movw	r1, #50080	; 0xc3a0
   12e2c:	movt	r1, #1
   12e30:	ldr	r0, [r3]
   12e34:	add	r2, sp, #4
   12e38:	bl	11a0c <fprintf@plt>
   12e3c:	b	12d8c <__assert_fail@plt+0x1164>
   12e40:	movw	r1, #50120	; 0xc3c8
   12e44:	movt	r1, #1
   12e48:	mov	r2, #5
   12e4c:	mov	r0, r6
   12e50:	bl	11a84 <write@plt>
   12e54:	b	12dec <__assert_fail@plt+0x11c4>
   12e58:	mov	r0, r8
   12e5c:	b	12d68 <__assert_fail@plt+0x1140>
   12e60:	mov	r0, r6
   12e64:	movw	r1, #50128	; 0xc3d0
   12e68:	movt	r1, #1
   12e6c:	mov	r2, #24
   12e70:	bl	11a84 <write@plt>
   12e74:	mov	r0, #1
   12e78:	bl	119c4 <exit@plt>
   12e7c:	movw	r1, #50156	; 0xc3ec
   12e80:	movt	r1, #1
   12e84:	mov	r0, r6
   12e88:	mov	r2, #29
   12e8c:	bl	11a84 <write@plt>
   12e90:	mov	r0, #1
   12e94:	bl	117fc <_exit@plt>
   12e98:	cmp	r4, #0
   12e9c:	beq	12e90 <__assert_fail@plt+0x1268>
   12ea0:	movw	r5, #50116	; 0xc3c4
   12ea4:	movt	r5, #1
   12ea8:	ldr	r3, [r4, #64]	; 0x40
   12eac:	sub	r3, r3, #1
   12eb0:	cmp	r3, #1
   12eb4:	bhi	12ee4 <__assert_fail@plt+0x12bc>
   12eb8:	ldr	r7, [r4, #12]
   12ebc:	mov	r0, r7
   12ec0:	bl	119dc <strlen@plt>
   12ec4:	mov	r2, r0
   12ec8:	mov	r1, r7
   12ecc:	mov	r0, r6
   12ed0:	bl	11a84 <write@plt>
   12ed4:	mov	r2, #2
   12ed8:	mov	r1, r5
   12edc:	mov	r0, r6
   12ee0:	bl	11a84 <write@plt>
   12ee4:	ldr	r4, [r4, #220]	; 0xdc
   12ee8:	cmp	r4, #0
   12eec:	bne	12ea8 <__assert_fail@plt+0x1280>
   12ef0:	b	12e90 <__assert_fail@plt+0x1268>
   12ef4:	cmp	r0, #0
   12ef8:	movw	r3, #50152	; 0xc3e8
   12efc:	movt	r3, #1
   12f00:	str	r4, [sp, #-8]!
   12f04:	moveq	r0, r3
   12f08:	str	lr, [sp, #4]
   12f0c:	bl	11874 <strdup@plt>
   12f10:	cmp	r0, #0
   12f14:	beq	12f24 <__assert_fail@plt+0x12fc>
   12f18:	ldr	r4, [sp]
   12f1c:	add	sp, sp, #4
   12f20:	pop	{pc}		; (ldr pc, [sp], #4)
   12f24:	mov	r0, #3
   12f28:	movw	r1, #50188	; 0xc40c
   12f2c:	movt	r1, #1
   12f30:	bl	11b14 <syslog@plt>
   12f34:	mvn	r0, #0
   12f38:	bl	119c4 <exit@plt>
   12f3c:	strd	r4, [sp, #-16]!
   12f40:	mov	r5, r0
   12f44:	mov	r0, r1
   12f48:	mov	r4, r1
   12f4c:	str	r6, [sp, #8]
   12f50:	str	lr, [sp, #12]
   12f54:	bl	17794 <argp_parse@@Base+0x16cc>
   12f58:	subs	r6, r0, #0
   12f5c:	beq	12f80 <__assert_fail@plt+0x1358>
   12f60:	mov	r2, r4
   12f64:	ldr	r1, [r5]
   12f68:	bl	11808 <memcpy@plt>
   12f6c:	str	r6, [r5]
   12f70:	ldrd	r4, [sp]
   12f74:	ldr	r6, [sp, #8]
   12f78:	add	sp, sp, #12
   12f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f80:	mov	r0, #3
   12f84:	movw	r1, #50200	; 0xc418
   12f88:	movt	r1, #1
   12f8c:	bl	11b14 <syslog@plt>
   12f90:	mvn	r0, #0
   12f94:	bl	119c4 <exit@plt>
   12f98:	ldr	r3, [r0]
   12f9c:	cmp	r3, #0
   12fa0:	bxeq	lr
   12fa4:	str	r4, [sp, #-8]!
   12fa8:	mov	r4, r0
   12fac:	mov	r0, r3
   12fb0:	str	lr, [sp, #4]
   12fb4:	bl	119dc <strlen@plt>
   12fb8:	add	r1, r0, #1
   12fbc:	mov	r0, r4
   12fc0:	ldr	r4, [sp]
   12fc4:	ldr	lr, [sp, #4]
   12fc8:	add	sp, sp, #8
   12fcc:	b	12f3c <__assert_fail@plt+0x1314>
   12fd0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12fd4:	movw	r3, #58288	; 0xe3b0
   12fd8:	movt	r3, #2
   12fdc:	ldr	r2, [r1]
   12fe0:	strd	r6, [sp, #8]
   12fe4:	str	lr, [sp, #32]
   12fe8:	ldr	lr, [r1, #64]	; 0x40
   12fec:	strd	sl, [sp, #24]
   12ff0:	mov	sl, r0
   12ff4:	ldr	r0, [r3]
   12ff8:	strd	r8, [sp, #16]
   12ffc:	sub	sp, sp, #44	; 0x2c
   13000:	sub	r3, lr, #1
   13004:	cmp	r3, #1
   13008:	ldr	r3, [r1, #4]
   1300c:	bls	130a0 <__assert_fail@plt+0x1478>
   13010:	ldr	ip, [r1, #8]
   13014:	movw	lr, #50212	; 0xc424
   13018:	movt	lr, #1
   1301c:	cmp	ip, #0
   13020:	moveq	ip, lr
   13024:	ldr	r9, [r1, #12]
   13028:	ldr	lr, [r1, #44]	; 0x2c
   1302c:	ldr	r8, [r1, #20]
   13030:	ldr	r7, [r1, #24]
   13034:	cmp	lr, #0
   13038:	ldrne	lr, [lr]
   1303c:	movweq	lr, #50228	; 0xc434
   13040:	movteq	lr, #1
   13044:	ldr	r6, [r1, #28]
   13048:	ldr	r5, [r1, #36]	; 0x24
   1304c:	ldr	r4, [r1, #40]	; 0x28
   13050:	ldr	fp, [r1, #48]	; 0x30
   13054:	movw	r1, #50232	; 0xc438
   13058:	movt	r1, #1
   1305c:	stm	sp, {sl, ip}
   13060:	str	r9, [sp, #8]
   13064:	str	r8, [sp, #12]
   13068:	str	r7, [sp, #16]
   1306c:	str	r6, [sp, #20]
   13070:	str	r5, [sp, #24]
   13074:	str	r4, [sp, #28]
   13078:	str	lr, [sp, #32]
   1307c:	str	fp, [sp, #36]	; 0x24
   13080:	bl	11a0c <fprintf@plt>
   13084:	add	sp, sp, #44	; 0x2c
   13088:	ldrd	r4, [sp]
   1308c:	ldrd	r6, [sp, #8]
   13090:	ldrd	r8, [sp, #16]
   13094:	ldrd	sl, [sp, #24]
   13098:	add	sp, sp, #32
   1309c:	pop	{pc}		; (ldr pc, [sp], #4)
   130a0:	movw	r4, #50216	; 0xc428
   130a4:	movt	r4, #1
   130a8:	cmp	lr, #2
   130ac:	movw	ip, #51252	; 0xc834
   130b0:	movt	ip, #1
   130b4:	moveq	ip, r4
   130b8:	b	13024 <__assert_fail@plt+0x13fc>
   130bc:	mov	r3, #1
   130c0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   130c4:	mov	r4, r0
   130c8:	ldrh	r0, [r0, #68]	; 0x44
   130cc:	strd	r6, [sp, #8]
   130d0:	movw	r7, #50396	; 0xc4dc
   130d4:	movt	r7, #1
   130d8:	strd	r8, [sp, #16]
   130dc:	movw	r9, #50428	; 0xc4fc
   130e0:	movt	r9, #1
   130e4:	movw	r8, #58864	; 0xe5f0
   130e8:	movt	r8, #2
   130ec:	str	lr, [sp, #24]
   130f0:	sub	sp, sp, #20
   130f4:	str	r3, [sp, #8]
   130f8:	mov	r2, #0
   130fc:	ldr	r1, [r4, #16]
   13100:	bl	11bb0 <socket@plt>
   13104:	cmp	r0, #0
   13108:	mov	r5, r0
   1310c:	str	r0, [r4, #60]	; 0x3c
   13110:	blt	131c8 <__assert_fail@plt+0x15a0>
   13114:	ldrh	r3, [r4, #68]	; 0x44
   13118:	cmp	r3, #10
   1311c:	beq	13210 <__assert_fail@plt+0x15e8>
   13120:	mov	r2, #3
   13124:	mov	r1, r7
   13128:	ldr	r0, [r4, #20]
   1312c:	bl	11bd4 <strncmp@plt>
   13130:	cmp	r0, #0
   13134:	bne	13144 <__assert_fail@plt+0x151c>
   13138:	ldr	r3, [r8]
   1313c:	tst	r3, #1
   13140:	bne	13248 <__assert_fail@plt+0x1620>
   13144:	add	r6, sp, #8
   13148:	mov	ip, #4
   1314c:	mov	r3, r6
   13150:	mov	r0, r5
   13154:	mov	r2, #2
   13158:	mov	r1, #1
   1315c:	str	ip, [sp]
   13160:	bl	1176c <setsockopt@plt>
   13164:	cmp	r0, #0
   13168:	blt	13200 <__assert_fail@plt+0x15d8>
   1316c:	add	r1, r4, #72	; 0x48
   13170:	ldr	r0, [r4, #60]	; 0x3c
   13174:	ldr	r2, [r4, #200]	; 0xc8
   13178:	bl	11a48 <bind@plt>
   1317c:	cmp	r0, #0
   13180:	bge	13370 <__assert_fail@plt+0x1748>
   13184:	bl	11a24 <__errno_location@plt>
   13188:	ldr	r0, [r0]
   1318c:	bic	r3, r0, #2
   13190:	cmp	r3, #97	; 0x61
   13194:	bne	1329c <__assert_fail@plt+0x1674>
   13198:	ldrh	r3, [r4, #68]	; 0x44
   1319c:	cmp	r3, #10
   131a0:	bne	1329c <__assert_fail@plt+0x1674>
   131a4:	ldrb	r3, [r4, #70]	; 0x46
   131a8:	cmp	r3, #0
   131ac:	beq	1329c <__assert_fail@plt+0x1674>
   131b0:	mov	r3, #2
   131b4:	ldr	r0, [r4, #60]	; 0x3c
   131b8:	strh	r3, [r4, #68]	; 0x44
   131bc:	bl	11bf8 <close@plt>
   131c0:	ldrh	r0, [r4, #68]	; 0x44
   131c4:	b	130f8 <__assert_fail@plt+0x14d0>
   131c8:	bl	11a24 <__errno_location@plt>
   131cc:	ldr	r0, [r0]
   131d0:	cmp	r0, #97	; 0x61
   131d4:	bne	13334 <__assert_fail@plt+0x170c>
   131d8:	ldrh	r3, [r4, #68]	; 0x44
   131dc:	cmp	r3, #10
   131e0:	bne	13334 <__assert_fail@plt+0x170c>
   131e4:	ldrb	r3, [r4, #70]	; 0x46
   131e8:	cmp	r3, #0
   131ec:	beq	13334 <__assert_fail@plt+0x170c>
   131f0:	mov	r3, #2
   131f4:	mov	r0, r3
   131f8:	strh	r3, [r4, #68]	; 0x44
   131fc:	b	130f8 <__assert_fail@plt+0x14d0>
   13200:	mov	r1, r9
   13204:	mov	r0, #3
   13208:	bl	11b14 <syslog@plt>
   1320c:	b	1316c <__assert_fail@plt+0x1544>
   13210:	ldrb	ip, [r4, #70]	; 0x46
   13214:	mov	lr, #4
   13218:	add	r3, sp, #12
   1321c:	mov	r2, #26
   13220:	mov	r1, #41	; 0x29
   13224:	str	lr, [sp]
   13228:	clz	ip, ip
   1322c:	lsr	ip, ip, #5
   13230:	str	ip, [sp, #12]
   13234:	bl	1176c <setsockopt@plt>
   13238:	cmp	r0, #0
   1323c:	blt	13320 <__assert_fail@plt+0x16f8>
   13240:	ldr	r5, [r4, #60]	; 0x3c
   13244:	b	13120 <__assert_fail@plt+0x14f8>
   13248:	mov	r1, #4
   1324c:	mov	r2, #1
   13250:	add	r6, sp, #8
   13254:	mov	r0, r5
   13258:	mov	r3, r6
   1325c:	str	r1, [sp]
   13260:	mov	r1, r2
   13264:	bl	1176c <setsockopt@plt>
   13268:	cmp	r0, #0
   1326c:	blt	13278 <__assert_fail@plt+0x1650>
   13270:	ldr	r5, [r4, #60]	; 0x3c
   13274:	b	13148 <__assert_fail@plt+0x1520>
   13278:	bl	11a24 <__errno_location@plt>
   1327c:	ldr	r3, [r0]
   13280:	cmp	r3, #13
   13284:	beq	13270 <__assert_fail@plt+0x1648>
   13288:	movw	r1, #50400	; 0xc4e0
   1328c:	movt	r1, #1
   13290:	mov	r0, #3
   13294:	bl	11b14 <syslog@plt>
   13298:	b	13270 <__assert_fail@plt+0x1648>
   1329c:	ldr	r5, [r4, #8]
   132a0:	movw	r3, #58300	; 0xe3bc
   132a4:	movt	r3, #2
   132a8:	ldrb	r3, [r3]
   132ac:	ldr	r6, [r4, #12]
   132b0:	cmp	r5, #0
   132b4:	ldr	r7, [r4, #20]
   132b8:	beq	13390 <__assert_fail@plt+0x1768>
   132bc:	cmp	r3, #0
   132c0:	bne	133ec <__assert_fail@plt+0x17c4>
   132c4:	movw	r1, #50492	; 0xc53c
   132c8:	movt	r1, #1
   132cc:	str	r7, [sp]
   132d0:	mov	r3, r6
   132d4:	mov	r2, r5
   132d8:	mov	r0, #3
   132dc:	bl	11b14 <syslog@plt>
   132e0:	ldr	r0, [r4, #60]	; 0x3c
   132e4:	bl	11bf8 <close@plt>
   132e8:	movw	r3, #58880	; 0xe600
   132ec:	movt	r3, #2
   132f0:	ldr	r2, [r3]
   132f4:	mvn	r1, #0
   132f8:	str	r1, [r4, #60]	; 0x3c
   132fc:	cmp	r2, #0
   13300:	movne	r0, #1
   13304:	beq	13378 <__assert_fail@plt+0x1750>
   13308:	add	sp, sp, #20
   1330c:	ldrd	r4, [sp]
   13310:	ldrd	r6, [sp, #8]
   13314:	ldrd	r8, [sp, #16]
   13318:	add	sp, sp, #24
   1331c:	pop	{pc}		; (ldr pc, [sp], #4)
   13320:	movw	r1, #50364	; 0xc4bc
   13324:	movt	r1, #1
   13328:	mov	r0, #3
   1332c:	bl	11b14 <syslog@plt>
   13330:	b	13240 <__assert_fail@plt+0x1618>
   13334:	movw	r3, #58300	; 0xe3bc
   13338:	movt	r3, #2
   1333c:	ldr	r5, [r4, #12]
   13340:	ldrb	r3, [r3]
   13344:	ldr	r6, [r4, #20]
   13348:	cmp	r3, #0
   1334c:	bne	133b4 <__assert_fail@plt+0x178c>
   13350:	mov	r0, #3
   13354:	mov	r3, r6
   13358:	mov	r2, r5
   1335c:	movw	r1, #50344	; 0xc4a8
   13360:	movt	r1, #1
   13364:	bl	11b14 <syslog@plt>
   13368:	mov	r0, #1
   1336c:	b	13308 <__assert_fail@plt+0x16e0>
   13370:	mov	r0, #0
   13374:	b	13308 <__assert_fail@plt+0x16e0>
   13378:	mov	r4, #1
   1337c:	mov	r0, #600	; 0x258
   13380:	str	r4, [r3]
   13384:	bl	11880 <alarm@plt>
   13388:	mov	r0, r4
   1338c:	b	13308 <__assert_fail@plt+0x16e0>
   13390:	cmp	r3, #0
   13394:	bne	1342c <__assert_fail@plt+0x1804>
   13398:	mov	r3, r7
   1339c:	mov	r2, r6
   133a0:	movw	r1, #50540	; 0xc56c
   133a4:	movt	r1, #1
   133a8:	mov	r0, #3
   133ac:	bl	11b14 <syslog@plt>
   133b0:	b	132e0 <__assert_fail@plt+0x16b8>
   133b4:	movw	r3, #58288	; 0xe3b0
   133b8:	movt	r3, #2
   133bc:	ldr	r7, [r3]
   133c0:	bl	1197c <strerror@plt>
   133c4:	mov	r3, r6
   133c8:	mov	r2, r5
   133cc:	str	r0, [sp]
   133d0:	movw	r1, #50316	; 0xc48c
   133d4:	movt	r1, #1
   133d8:	mov	r0, r7
   133dc:	bl	11a0c <fprintf@plt>
   133e0:	ldr	r5, [r4, #12]
   133e4:	ldr	r6, [r4, #20]
   133e8:	b	13350 <__assert_fail@plt+0x1728>
   133ec:	movw	r3, #58288	; 0xe3b0
   133f0:	movt	r3, #2
   133f4:	ldr	r8, [r3]
   133f8:	bl	1197c <strerror@plt>
   133fc:	mov	r3, r6
   13400:	mov	r2, r5
   13404:	str	r7, [sp]
   13408:	movw	r1, #50460	; 0xc51c
   1340c:	movt	r1, #1
   13410:	str	r0, [sp, #4]
   13414:	mov	r0, r8
   13418:	bl	11a0c <fprintf@plt>
   1341c:	ldr	r5, [r4, #8]
   13420:	ldr	r6, [r4, #12]
   13424:	ldr	r7, [r4, #20]
   13428:	b	132c4 <__assert_fail@plt+0x169c>
   1342c:	movw	r3, #58288	; 0xe3b0
   13430:	movt	r3, #2
   13434:	ldr	r5, [r3]
   13438:	bl	1197c <strerror@plt>
   1343c:	mov	r3, r7
   13440:	mov	r2, r6
   13444:	str	r0, [sp]
   13448:	movw	r1, #50512	; 0xc550
   1344c:	movt	r1, #1
   13450:	mov	r0, r5
   13454:	bl	11a0c <fprintf@plt>
   13458:	ldr	r6, [r4, #12]
   1345c:	ldr	r7, [r4, #20]
   13460:	b	13398 <__assert_fail@plt+0x1770>
   13464:	movw	r3, #58892	; 0xe60c
   13468:	movt	r3, #2
   1346c:	str	r4, [sp, #-8]!
   13470:	ldr	r4, [r3]
   13474:	mov	r2, #0
   13478:	movw	r3, #58880	; 0xe600
   1347c:	movt	r3, #2
   13480:	str	lr, [sp, #4]
   13484:	str	r2, [r3]
   13488:	cmp	r4, r2
   1348c:	bne	134a0 <__assert_fail@plt+0x1878>
   13490:	b	134d0 <__assert_fail@plt+0x18a8>
   13494:	ldr	r4, [r4, #220]	; 0xdc
   13498:	cmp	r4, #0
   1349c:	beq	134d0 <__assert_fail@plt+0x18a8>
   134a0:	ldr	r3, [r4, #60]	; 0x3c
   134a4:	cmn	r3, #1
   134a8:	bne	13494 <__assert_fail@plt+0x186c>
   134ac:	ldr	r3, [r4, #64]	; 0x40
   134b0:	mov	r0, r4
   134b4:	sub	r3, r3, #1
   134b8:	cmp	r3, #1
   134bc:	bls	13494 <__assert_fail@plt+0x186c>
   134c0:	bl	130bc <__assert_fail@plt+0x1494>
   134c4:	ldr	r4, [r4, #220]	; 0xdc
   134c8:	cmp	r4, #0
   134cc:	bne	134a0 <__assert_fail@plt+0x1878>
   134d0:	ldr	r4, [sp]
   134d4:	add	sp, sp, #4
   134d8:	pop	{pc}		; (ldr pc, [sp], #4)
   134dc:	ldr	r2, [r0, #60]	; 0x3c
   134e0:	mov	r1, #1
   134e4:	strh	r1, [r0, #32]
   134e8:	cmn	r2, #1
   134ec:	bxne	lr
   134f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   134f4:	mov	r4, r0
   134f8:	strd	r6, [sp, #8]
   134fc:	str	r8, [sp, #16]
   13500:	str	lr, [sp, #20]
   13504:	bl	130bc <__assert_fail@plt+0x1494>
   13508:	cmp	r0, #0
   1350c:	bne	13594 <__assert_fail@plt+0x196c>
   13510:	ldr	r2, [r4, #16]
   13514:	ldr	r3, [r4, #60]	; 0x3c
   13518:	cmp	r2, #1
   1351c:	beq	135d8 <__assert_fail@plt+0x19b0>
   13520:	cmp	r3, #0
   13524:	add	r2, r3, #31
   13528:	movge	r2, r3
   1352c:	movw	r0, #58728	; 0xe568
   13530:	movt	r0, #2
   13534:	asr	r2, r2, #5
   13538:	rsbs	lr, r3, #0
   1353c:	and	lr, lr, #31
   13540:	and	r6, r3, #31
   13544:	ldr	r5, [r0, r2, lsl #2]
   13548:	rsbpl	r6, lr, #0
   1354c:	mov	r7, #1
   13550:	movw	ip, #58724	; 0xe564
   13554:	movt	ip, #2
   13558:	movw	r1, #58860	; 0xe5ec
   1355c:	movt	r1, #2
   13560:	ldr	lr, [r1]
   13564:	orr	r5, r5, r7, lsl r6
   13568:	ldr	r6, [ip]
   1356c:	str	r5, [r0, r2, lsl #2]
   13570:	movw	r2, #58300	; 0xe3bc
   13574:	movt	r2, #2
   13578:	ldrb	r2, [r2]
   1357c:	add	lr, lr, r7
   13580:	cmp	r6, r3
   13584:	str	lr, [r1]
   13588:	strlt	r3, [ip]
   1358c:	cmp	r2, #0
   13590:	bne	135a8 <__assert_fail@plt+0x1980>
   13594:	ldrd	r4, [sp]
   13598:	ldrd	r6, [sp, #8]
   1359c:	ldr	r8, [sp, #16]
   135a0:	add	sp, sp, #20
   135a4:	pop	{pc}		; (ldr pc, [sp], #4)
   135a8:	movw	r0, #58288	; 0xe3b0
   135ac:	movt	r0, #2
   135b0:	ldrd	r6, [sp, #8]
   135b4:	movw	r1, #50556	; 0xc57c
   135b8:	movt	r1, #1
   135bc:	ldr	r0, [r0]
   135c0:	ldr	r8, [sp, #16]
   135c4:	ldr	lr, [sp, #20]
   135c8:	ldr	r2, [r4, #48]	; 0x30
   135cc:	ldrd	r4, [sp]
   135d0:	add	sp, sp, #24
   135d4:	b	11a0c <fprintf@plt>
   135d8:	mov	r0, r3
   135dc:	mov	r1, #10
   135e0:	bl	11af0 <listen@plt>
   135e4:	ldr	r3, [r4, #60]	; 0x3c
   135e8:	b	13520 <__assert_fail@plt+0x18f8>
   135ec:	strd	r4, [sp, #-16]!
   135f0:	mov	r4, r0
   135f4:	ldr	r0, [r0, #60]	; 0x3c
   135f8:	str	r6, [sp, #8]
   135fc:	str	lr, [sp, #12]
   13600:	cmp	r0, #0
   13604:	blt	13648 <__assert_fail@plt+0x1a20>
   13608:	asr	lr, r0, #5
   1360c:	movw	r2, #58728	; 0xe568
   13610:	movt	r2, #2
   13614:	movw	r3, #58860	; 0xe5ec
   13618:	movt	r3, #2
   1361c:	ldr	ip, [r2, lr, lsl #2]
   13620:	and	r5, r0, #31
   13624:	mov	r6, #1
   13628:	ldr	r1, [r3]
   1362c:	bic	ip, ip, r6, lsl r5
   13630:	sub	r1, r1, #1
   13634:	str	ip, [r2, lr, lsl #2]
   13638:	str	r1, [r3]
   1363c:	bl	11bf8 <close@plt>
   13640:	mvn	r3, #0
   13644:	str	r3, [r4, #60]	; 0x3c
   13648:	ldr	r3, [r4, #24]
   1364c:	mov	r2, #0
   13650:	str	r2, [r4, #208]	; 0xd0
   13654:	ldr	r6, [sp, #8]
   13658:	cmp	r3, #1
   1365c:	movgt	r3, #1
   13660:	strgt	r3, [r4, #24]
   13664:	ldrd	r4, [sp]
   13668:	add	sp, sp, #12
   1366c:	pop	{pc}		; (ldr pc, [sp], #4)
   13670:	strd	r4, [sp, #-20]!	; 0xffffffec
   13674:	mov	r5, r0
   13678:	strd	r6, [sp, #8]
   1367c:	movw	r7, #58892	; 0xe60c
   13680:	movt	r7, #2
   13684:	ldr	r4, [r7]
   13688:	str	lr, [sp, #16]
   1368c:	sub	sp, sp, #132	; 0x84
   13690:	cmp	r4, #0
   13694:	beq	13718 <__assert_fail@plt+0x1af0>
   13698:	add	r6, r0, #72	; 0x48
   1369c:	mov	r2, #128	; 0x80
   136a0:	mov	r1, r6
   136a4:	add	r0, r4, #72	; 0x48
   136a8:	bl	11838 <memcmp@plt>
   136ac:	cmp	r0, #0
   136b0:	bne	1370c <__assert_fail@plt+0x1ae4>
   136b4:	ldr	r0, [r4, #12]
   136b8:	ldr	r1, [r5, #12]
   136bc:	bl	11754 <strcmp@plt>
   136c0:	cmp	r0, #0
   136c4:	bne	1370c <__assert_fail@plt+0x1ae4>
   136c8:	ldr	r0, [r4, #20]
   136cc:	ldr	r1, [r5, #20]
   136d0:	bl	11754 <strcmp@plt>
   136d4:	cmp	r0, #0
   136d8:	bne	1370c <__assert_fail@plt+0x1ae4>
   136dc:	ldr	r2, [r4, #64]	; 0x40
   136e0:	ldr	r3, [r5, #64]	; 0x40
   136e4:	sub	r2, r2, #1
   136e8:	cmp	r2, #1
   136ec:	sub	r3, r3, #1
   136f0:	movls	r2, #0
   136f4:	movhi	r2, #1
   136f8:	cmp	r3, #1
   136fc:	movhi	r3, #0
   13700:	movls	r3, #1
   13704:	cmp	r2, r3
   13708:	bne	1380c <__assert_fail@plt+0x1be4>
   1370c:	ldr	r4, [r4, #220]	; 0xdc
   13710:	cmp	r4, #0
   13714:	bne	1369c <__assert_fail@plt+0x1a74>
   13718:	movw	r3, #58300	; 0xe3bc
   1371c:	movt	r3, #2
   13720:	ldrb	r3, [r3]
   13724:	cmp	r3, #0
   13728:	bne	137f8 <__assert_fail@plt+0x1bd0>
   1372c:	mov	r0, #224	; 0xe0
   13730:	bl	17794 <argp_parse@@Base+0x16cc>
   13734:	subs	r4, r0, #0
   13738:	beq	138f0 <__assert_fail@plt+0x1cc8>
   1373c:	mov	r1, r5
   13740:	mov	r2, #224	; 0xe0
   13744:	bl	11808 <memcpy@plt>
   13748:	add	r0, r4, #8
   1374c:	bl	12f98 <__assert_fail@plt+0x1370>
   13750:	add	r0, r4, #12
   13754:	bl	12f98 <__assert_fail@plt+0x1370>
   13758:	add	r0, r4, #20
   1375c:	bl	12f98 <__assert_fail@plt+0x1370>
   13760:	add	r0, r4, #36	; 0x24
   13764:	bl	12f98 <__assert_fail@plt+0x1370>
   13768:	add	r0, r4, #40	; 0x28
   1376c:	bl	12f98 <__assert_fail@plt+0x1370>
   13770:	add	r0, r4, #48	; 0x30
   13774:	bl	12f98 <__assert_fail@plt+0x1370>
   13778:	ldr	r1, [r4, #56]	; 0x38
   1377c:	add	r0, r4, #52	; 0x34
   13780:	lsl	r1, r1, #2
   13784:	bl	12f3c <__assert_fail@plt+0x1314>
   13788:	ldr	r3, [r4, #56]	; 0x38
   1378c:	cmp	r3, #0
   13790:	movne	r5, #0
   13794:	beq	137b4 <__assert_fail@plt+0x1b8c>
   13798:	ldr	r0, [r4, #52]	; 0x34
   1379c:	add	r0, r0, r5, lsl #2
   137a0:	add	r5, r5, #1
   137a4:	bl	12f98 <__assert_fail@plt+0x1370>
   137a8:	ldr	r3, [r4, #56]	; 0x38
   137ac:	cmp	r3, r5
   137b0:	bhi	13798 <__assert_fail@plt+0x1b70>
   137b4:	mvn	r3, #0
   137b8:	mov	r0, sp
   137bc:	str	r3, [r4, #60]	; 0x3c
   137c0:	bl	12a10 <__assert_fail@plt+0xde8>
   137c4:	ldr	r3, [r7]
   137c8:	mov	r1, sp
   137cc:	mov	r2, #0
   137d0:	mov	r0, #2
   137d4:	str	r4, [r7]
   137d8:	str	r3, [r4, #220]	; 0xdc
   137dc:	bl	117b4 <sigprocmask@plt>
   137e0:	mov	r0, r4
   137e4:	add	sp, sp, #132	; 0x84
   137e8:	ldrd	r4, [sp]
   137ec:	ldrd	r6, [sp, #8]
   137f0:	add	sp, sp, #16
   137f4:	pop	{pc}		; (ldr pc, [sp], #4)
   137f8:	movw	r0, #50588	; 0xc59c
   137fc:	movt	r0, #1
   13800:	mov	r1, r5
   13804:	bl	12fd0 <__assert_fail@plt+0x13a8>
   13808:	b	1372c <__assert_fail@plt+0x1b04>
   1380c:	mov	r0, sp
   13810:	bl	12a10 <__assert_fail@plt+0xde8>
   13814:	ldr	r3, [r5, #44]	; 0x2c
   13818:	cmp	r3, #0
   1381c:	beq	138d0 <__assert_fail@plt+0x1ca8>
   13820:	ldr	r3, [r5, #36]	; 0x24
   13824:	cmp	r3, #0
   13828:	beq	13838 <__assert_fail@plt+0x1c10>
   1382c:	ldr	r2, [r4, #36]	; 0x24
   13830:	str	r3, [r4, #36]	; 0x24
   13834:	str	r2, [r5, #36]	; 0x24
   13838:	ldr	r3, [r5, #40]	; 0x28
   1383c:	cmp	r3, #0
   13840:	beq	13850 <__assert_fail@plt+0x1c28>
   13844:	ldr	r2, [r4, #40]	; 0x28
   13848:	str	r3, [r4, #40]	; 0x28
   1384c:	str	r2, [r5, #40]	; 0x28
   13850:	ldr	r3, [r5, #48]	; 0x30
   13854:	cmp	r3, #0
   13858:	beq	13868 <__assert_fail@plt+0x1c40>
   1385c:	ldr	r2, [r4, #48]	; 0x30
   13860:	str	r3, [r4, #48]	; 0x30
   13864:	str	r2, [r5, #48]	; 0x30
   13868:	ldr	r1, [r4, #52]	; 0x34
   1386c:	ldr	r0, [r4, #56]	; 0x38
   13870:	bl	157cc <__assert_fail@plt+0x3ba4>
   13874:	ldr	r0, [r5, #52]	; 0x34
   13878:	mov	r3, #0
   1387c:	mov	ip, #1
   13880:	mov	r2, r3
   13884:	mov	r1, sp
   13888:	ldr	lr, [r5, #56]	; 0x38
   1388c:	str	r0, [r4, #52]	; 0x34
   13890:	mov	r0, #2
   13894:	str	lr, [r4, #56]	; 0x38
   13898:	str	r3, [r5, #52]	; 0x34
   1389c:	str	r3, [r5, #56]	; 0x38
   138a0:	strh	ip, [r4, #32]
   138a4:	bl	117b4 <sigprocmask@plt>
   138a8:	movw	r3, #58300	; 0xe3bc
   138ac:	movt	r3, #2
   138b0:	ldrb	r3, [r3]
   138b4:	cmp	r3, #0
   138b8:	beq	137e0 <__assert_fail@plt+0x1bb8>
   138bc:	movw	r0, #50580	; 0xc594
   138c0:	movt	r0, #1
   138c4:	mov	r1, r4
   138c8:	bl	12fd0 <__assert_fail@plt+0x13a8>
   138cc:	b	137e0 <__assert_fail@plt+0x1bb8>
   138d0:	ldr	r2, [r4, #24]
   138d4:	ldr	r3, [r5, #24]
   138d8:	cmp	r2, #1
   138dc:	beq	138e8 <__assert_fail@plt+0x1cc0>
   138e0:	cmp	r3, #0
   138e4:	bne	13820 <__assert_fail@plt+0x1bf8>
   138e8:	str	r3, [r4, #24]
   138ec:	b	13820 <__assert_fail@plt+0x1bf8>
   138f0:	mov	r0, #3
   138f4:	movw	r1, #51128	; 0xc7b8
   138f8:	movt	r1, #1
   138fc:	bl	11b14 <syslog@plt>
   13900:	mvn	r0, #0
   13904:	bl	119c4 <exit@plt>
   13908:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1390c:	mov	r4, r0
   13910:	ldr	r5, [r0, #8]
   13914:	strd	r6, [sp, #8]
   13918:	mov	r6, r1
   1391c:	mov	r7, r2
   13920:	str	r8, [sp, #16]
   13924:	str	lr, [sp, #20]
   13928:	sub	sp, sp, #32
   1392c:	cmp	r5, #0
   13930:	beq	13a18 <__assert_fail@plt+0x1df0>
   13934:	movw	r1, #50596	; 0xc5a4
   13938:	movt	r1, #1
   1393c:	mov	r0, r5
   13940:	bl	11c1c <strspn@plt>
   13944:	mov	r8, r0
   13948:	mov	r0, r5
   1394c:	bl	119dc <strlen@plt>
   13950:	cmp	r8, r0
   13954:	beq	13984 <__assert_fail@plt+0x1d5c>
   13958:	mov	r1, #58	; 0x3a
   1395c:	mov	r0, r5
   13960:	bl	119f4 <strchr@plt>
   13964:	cmp	r0, #0
   13968:	beq	139e4 <__assert_fail@plt+0x1dbc>
   1396c:	movw	r1, #50608	; 0xc5b0
   13970:	movt	r1, #1
   13974:	mov	r0, r5
   13978:	bl	11c1c <strspn@plt>
   1397c:	cmp	r0, #0
   13980:	beq	139e4 <__assert_fail@plt+0x1dbc>
   13984:	ldrb	r1, [r4, #70]	; 0x46
   13988:	mov	r2, #0
   1398c:	mov	r3, #0
   13990:	strd	r2, [sp, #16]
   13994:	strd	r2, [sp, #24]
   13998:	ldrh	r2, [r4, #68]	; 0x44
   1399c:	cmp	r1, #0
   139a0:	moveq	r3, #5
   139a4:	bne	13a54 <__assert_fail@plt+0x1e2c>
   139a8:	str	r3, [sp]
   139ac:	ldr	r1, [r4, #12]
   139b0:	mov	r3, r7
   139b4:	mov	r0, r5
   139b8:	str	r6, [sp, #12]
   139bc:	ldr	ip, [r4, #16]
   139c0:	stmib	sp, {r2, ip}
   139c4:	mov	r2, sp
   139c8:	bl	11ba4 <getaddrinfo@plt>
   139cc:	add	sp, sp, #32
   139d0:	ldrd	r4, [sp]
   139d4:	ldrd	r6, [sp, #8]
   139d8:	ldr	r8, [sp, #16]
   139dc:	add	sp, sp, #20
   139e0:	pop	{pc}		; (ldr pc, [sp], #4)
   139e4:	movw	r3, #58300	; 0xe3bc
   139e8:	movt	r3, #2
   139ec:	ldrb	r3, [r3]
   139f0:	cmp	r3, #0
   139f4:	beq	13a18 <__assert_fail@plt+0x1df0>
   139f8:	movw	r3, #58288	; 0xe3b0
   139fc:	movt	r3, #2
   13a00:	mov	r2, r5
   13a04:	movw	r1, #50636	; 0xc5cc
   13a08:	movt	r1, #1
   13a0c:	ldr	r0, [r3]
   13a10:	bl	11a0c <fprintf@plt>
   13a14:	ldr	r5, [r4, #8]
   13a18:	mov	r3, #0
   13a1c:	mov	r1, #1
   13a20:	ldrb	r2, [r4, #70]	; 0x46
   13a24:	str	r1, [sp]
   13a28:	str	r3, [sp, #16]
   13a2c:	str	r3, [sp, #20]
   13a30:	str	r3, [sp, #24]
   13a34:	cmp	r2, r3
   13a38:	ldrh	r2, [r4, #68]	; 0x44
   13a3c:	str	r3, [sp, #28]
   13a40:	beq	139ac <__assert_fail@plt+0x1d84>
   13a44:	cmp	r2, #2
   13a48:	movne	r3, #9
   13a4c:	strne	r3, [sp]
   13a50:	b	139ac <__assert_fail@plt+0x1d84>
   13a54:	cmp	r2, #2
   13a58:	movne	r3, #13
   13a5c:	moveq	r3, #5
   13a60:	str	r3, [sp]
   13a64:	b	139ac <__assert_fail@plt+0x1d84>
   13a68:	strd	r4, [sp, #-20]!	; 0xffffffec
   13a6c:	movw	r1, #50396	; 0xc4dc
   13a70:	movt	r1, #1
   13a74:	ldr	r4, [r0, #20]
   13a78:	mov	r5, r0
   13a7c:	mov	r2, #3
   13a80:	strd	r6, [sp, #8]
   13a84:	str	lr, [sp, #16]
   13a88:	sub	sp, sp, #20
   13a8c:	mov	r0, r4
   13a90:	bl	11bd4 <strncmp@plt>
   13a94:	cmp	r0, #0
   13a98:	beq	13b68 <__assert_fail@plt+0x1f40>
   13a9c:	mov	r2, #3
   13aa0:	mov	r0, r4
   13aa4:	movw	r1, #50660	; 0xc5e4
   13aa8:	movt	r1, #1
   13aac:	bl	11bd4 <strncmp@plt>
   13ab0:	cmp	r0, #0
   13ab4:	movweq	r0, #50660	; 0xc5e4
   13ab8:	movne	r0, r4
   13abc:	movteq	r0, #1
   13ac0:	bl	117a8 <getprotobyname@plt>
   13ac4:	mov	r4, r0
   13ac8:	cmp	r4, #0
   13acc:	beq	13b80 <__assert_fail@plt+0x1f58>
   13ad0:	mov	r0, r5
   13ad4:	add	r2, sp, #12
   13ad8:	ldr	r1, [r4, #8]
   13adc:	bl	13908 <__assert_fail@plt+0x1ce0>
   13ae0:	cmn	r0, #9
   13ae4:	mov	r7, r0
   13ae8:	beq	13b9c <__assert_fail@plt+0x1f74>
   13aec:	cmp	r7, #0
   13af0:	bne	13c28 <__assert_fail@plt+0x2000>
   13af4:	ldr	r4, [sp, #12]
   13af8:	cmp	r4, #0
   13afc:	beq	13b48 <__assert_fail@plt+0x1f20>
   13b00:	add	r6, r5, #72	; 0x48
   13b04:	mov	r2, #128	; 0x80
   13b08:	mov	r1, #0
   13b0c:	mov	r0, r6
   13b10:	bl	11a54 <memset@plt>
   13b14:	mov	r0, r6
   13b18:	ldr	r2, [r4, #16]
   13b1c:	ldr	r1, [r4, #20]
   13b20:	bl	11808 <memcpy@plt>
   13b24:	ldr	r3, [r4, #16]
   13b28:	mov	r0, r5
   13b2c:	str	r3, [r5, #200]	; 0xc8
   13b30:	bl	13670 <__assert_fail@plt+0x1a48>
   13b34:	bl	134dc <__assert_fail@plt+0x18b4>
   13b38:	ldr	r4, [r4, #28]
   13b3c:	cmp	r4, #0
   13b40:	bne	13b04 <__assert_fail@plt+0x1edc>
   13b44:	ldr	r4, [sp, #12]
   13b48:	mov	r0, r4
   13b4c:	bl	11b98 <freeaddrinfo@plt>
   13b50:	mov	r0, r7
   13b54:	add	sp, sp, #20
   13b58:	ldrd	r4, [sp]
   13b5c:	ldrd	r6, [sp, #8]
   13b60:	add	sp, sp, #16
   13b64:	pop	{pc}		; (ldr pc, [sp], #4)
   13b68:	movw	r0, #50396	; 0xc4dc
   13b6c:	movt	r0, #1
   13b70:	bl	117a8 <getprotobyname@plt>
   13b74:	mov	r4, r0
   13b78:	cmp	r4, #0
   13b7c:	bne	13ad0 <__assert_fail@plt+0x1ea8>
   13b80:	movw	r1, #50664	; 0xc5e8
   13b84:	movt	r1, #1
   13b88:	ldr	r2, [r5, #20]
   13b8c:	mov	r0, #3
   13b90:	mov	r7, #1
   13b94:	bl	11b14 <syslog@plt>
   13b98:	b	13b50 <__assert_fail@plt+0x1f28>
   13b9c:	ldrh	r3, [r5, #68]	; 0x44
   13ba0:	cmp	r3, #10
   13ba4:	beq	13bfc <__assert_fail@plt+0x1fd4>
   13ba8:	mov	r0, r7
   13bac:	bl	117e4 <gai_strerror@plt>
   13bb0:	mov	r4, r0
   13bb4:	ldr	r2, [r5, #8]
   13bb8:	movw	r3, #58300	; 0xe3bc
   13bbc:	movt	r3, #2
   13bc0:	ldrb	r3, [r3]
   13bc4:	ldr	r1, [r5, #12]
   13bc8:	cmp	r2, #0
   13bcc:	ldr	r0, [r5, #20]
   13bd0:	beq	13c44 <__assert_fail@plt+0x201c>
   13bd4:	cmp	r3, #0
   13bd8:	bne	13c70 <__assert_fail@plt+0x2048>
   13bdc:	mov	r3, r1
   13be0:	movw	r1, #50724	; 0xc624
   13be4:	movt	r1, #1
   13be8:	stm	sp, {r0, r4}
   13bec:	mov	r0, #3
   13bf0:	mov	r7, #1
   13bf4:	bl	11b14 <syslog@plt>
   13bf8:	b	13b50 <__assert_fail@plt+0x1f28>
   13bfc:	ldrb	r3, [r5, #70]	; 0x46
   13c00:	cmp	r3, #0
   13c04:	beq	13ba8 <__assert_fail@plt+0x1f80>
   13c08:	mov	r3, #2
   13c0c:	add	r2, sp, #12
   13c10:	ldr	r1, [r4, #8]
   13c14:	mov	r0, r5
   13c18:	strh	r3, [r5, #68]	; 0x44
   13c1c:	bl	13908 <__assert_fail@plt+0x1ce0>
   13c20:	mov	r7, r0
   13c24:	b	13aec <__assert_fail@plt+0x1ec4>
   13c28:	cmn	r7, #11
   13c2c:	bne	13ba8 <__assert_fail@plt+0x1f80>
   13c30:	bl	11a24 <__errno_location@plt>
   13c34:	ldr	r0, [r0]
   13c38:	bl	1197c <strerror@plt>
   13c3c:	mov	r4, r0
   13c40:	b	13bb4 <__assert_fail@plt+0x1f8c>
   13c44:	cmp	r3, #0
   13c48:	bne	13ca0 <__assert_fail@plt+0x2078>
   13c4c:	mov	r3, r0
   13c50:	mov	r2, r1
   13c54:	str	r4, [sp]
   13c58:	movw	r1, #50784	; 0xc660
   13c5c:	movt	r1, #1
   13c60:	mov	r0, #3
   13c64:	mov	r7, #1
   13c68:	bl	11b14 <syslog@plt>
   13c6c:	b	13b50 <__assert_fail@plt+0x1f28>
   13c70:	movw	ip, #58288	; 0xe3b0
   13c74:	movt	ip, #2
   13c78:	stm	sp, {r0, r4}
   13c7c:	mov	r3, r1
   13c80:	movw	r1, #50688	; 0xc600
   13c84:	movt	r1, #1
   13c88:	ldr	r0, [ip]
   13c8c:	bl	11a0c <fprintf@plt>
   13c90:	ldr	r2, [r5, #8]
   13c94:	ldr	r1, [r5, #12]
   13c98:	ldr	r0, [r5, #20]
   13c9c:	b	13bdc <__assert_fail@plt+0x1fb4>
   13ca0:	movw	ip, #58288	; 0xe3b0
   13ca4:	movt	ip, #2
   13ca8:	str	r4, [sp]
   13cac:	mov	r3, r0
   13cb0:	mov	r2, r1
   13cb4:	ldr	r0, [ip]
   13cb8:	movw	r1, #50752	; 0xc640
   13cbc:	movt	r1, #1
   13cc0:	bl	11a0c <fprintf@plt>
   13cc4:	ldr	r1, [r5, #12]
   13cc8:	ldr	r0, [r5, #20]
   13ccc:	b	13c4c <__assert_fail@plt+0x2024>
   13cd0:	movw	r1, #54972	; 0xd6bc
   13cd4:	movt	r1, #1
   13cd8:	b	11b74 <fopen64@plt>
   13cdc:	cmp	r0, #0
   13ce0:	beq	13ce8 <__assert_fail@plt+0x20c0>
   13ce4:	b	11a9c <fclose@plt>
   13ce8:	bx	lr
   13cec:	str	r4, [sp, #-8]!
   13cf0:	mov	r4, r0
   13cf4:	ldr	r0, [r0, #8]
   13cf8:	str	lr, [sp, #4]
   13cfc:	bl	170ac <argp_parse@@Base+0xfe4>
   13d00:	ldr	r0, [r4, #12]
   13d04:	bl	170ac <argp_parse@@Base+0xfe4>
   13d08:	ldr	r0, [r4, #20]
   13d0c:	bl	170ac <argp_parse@@Base+0xfe4>
   13d10:	ldr	r0, [r4, #36]	; 0x24
   13d14:	bl	170ac <argp_parse@@Base+0xfe4>
   13d18:	ldr	r0, [r4, #40]	; 0x28
   13d1c:	bl	170ac <argp_parse@@Base+0xfe4>
   13d20:	ldr	r0, [r4, #48]	; 0x30
   13d24:	bl	170ac <argp_parse@@Base+0xfe4>
   13d28:	ldr	lr, [sp, #4]
   13d2c:	ldr	r1, [r4, #52]	; 0x34
   13d30:	ldr	r0, [r4, #56]	; 0x38
   13d34:	ldr	r4, [sp]
   13d38:	add	sp, sp, #8
   13d3c:	b	157cc <__assert_fail@plt+0x3ba4>
   13d40:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13d44:	movw	r4, #58884	; 0xe604
   13d48:	movt	r4, #2
   13d4c:	ldr	r3, [r4]
   13d50:	strd	r6, [sp, #8]
   13d54:	strd	r8, [sp, #16]
   13d58:	mov	r8, r0
   13d5c:	str	sl, [sp, #24]
   13d60:	str	lr, [sp, #28]
   13d64:	cmp	r3, #0
   13d68:	beq	13ddc <__assert_fail@plt+0x21b4>
   13d6c:	movw	r6, #58876	; 0xe5fc
   13d70:	movt	r6, #2
   13d74:	ldr	r0, [r6]
   13d78:	movw	r1, #50808	; 0xc678
   13d7c:	movt	r1, #1
   13d80:	add	r0, r3, r0
   13d84:	bl	11778 <strcspn@plt>
   13d88:	mov	r7, r0
   13d8c:	add	r0, r0, #1
   13d90:	bl	17794 <argp_parse@@Base+0x16cc>
   13d94:	cmp	r0, #0
   13d98:	mov	r9, r0
   13d9c:	str	r0, [r8, #8]
   13da0:	beq	13e08 <__assert_fail@plt+0x21e0>
   13da4:	ldr	r5, [r6]
   13da8:	mov	r2, r7
   13dac:	ldr	sl, [r4]
   13db0:	add	r1, sl, r5
   13db4:	bl	11808 <memcpy@plt>
   13db8:	add	r3, r5, r7
   13dbc:	mov	r2, #0
   13dc0:	str	r3, [r6]
   13dc4:	strb	r2, [r9, r7]
   13dc8:	ldrb	r5, [sl, r3]
   13dcc:	cmp	r5, r2
   13dd0:	beq	13df8 <__assert_fail@plt+0x21d0>
   13dd4:	add	r3, r3, #1
   13dd8:	str	r3, [r6]
   13ddc:	mov	r0, r8
   13de0:	ldrd	r4, [sp]
   13de4:	ldrd	r6, [sp, #8]
   13de8:	ldrd	r8, [sp, #16]
   13dec:	ldr	sl, [sp, #24]
   13df0:	add	sp, sp, #28
   13df4:	pop	{pc}		; (ldr pc, [sp], #4)
   13df8:	mov	r0, sl
   13dfc:	bl	170ac <argp_parse@@Base+0xfe4>
   13e00:	str	r5, [r4]
   13e04:	b	13ddc <__assert_fail@plt+0x21b4>
   13e08:	mov	r0, #3
   13e0c:	movw	r1, #50812	; 0xc67c
   13e10:	movt	r1, #1
   13e14:	bl	11b14 <syslog@plt>
   13e18:	mvn	r0, #0
   13e1c:	bl	119c4 <exit@plt>
   13e20:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13e24:	mov	r3, #0
   13e28:	strd	r6, [sp, #8]
   13e2c:	strd	r8, [sp, #16]
   13e30:	movw	r8, #58884	; 0xe604
   13e34:	movt	r8, #2
   13e38:	ldr	r7, [r8]
   13e3c:	strd	sl, [sp, #24]
   13e40:	str	lr, [sp, #32]
   13e44:	sub	sp, sp, #44	; 0x2c
   13e48:	str	r1, [sp, #8]
   13e4c:	cmp	r7, r3
   13e50:	str	r3, [sp, #28]
   13e54:	str	r3, [sp, #32]
   13e58:	beq	13e88 <__assert_fail@plt+0x2260>
   13e5c:	ldr	r0, [pc, #1712]	; 14514 <__assert_fail@plt+0x28ec>
   13e60:	bl	13d40 <__assert_fail@plt+0x2118>
   13e64:	mov	r7, r0
   13e68:	mov	r0, r7
   13e6c:	add	sp, sp, #44	; 0x2c
   13e70:	ldrd	r4, [sp]
   13e74:	ldrd	r6, [sp, #8]
   13e78:	ldrd	r8, [sp, #16]
   13e7c:	ldrd	sl, [sp, #24]
   13e80:	add	sp, sp, #32
   13e84:	pop	{pc}		; (ldr pc, [sp], #4)
   13e88:	mov	r6, r0
   13e8c:	mov	r5, r2
   13e90:	ldr	r0, [pc, #1660]	; 14514 <__assert_fail@plt+0x28ec>
   13e94:	mov	r2, #224	; 0xe0
   13e98:	mov	r1, r7
   13e9c:	movw	r4, #58300	; 0xe3bc
   13ea0:	movt	r4, #2
   13ea4:	bl	11a54 <memset@plt>
   13ea8:	add	fp, r4, #4
   13eac:	mov	sl, r7
   13eb0:	str	r8, [sp, #12]
   13eb4:	mov	r0, r7
   13eb8:	mov	r9, r7
   13ebc:	mov	r1, sl
   13ec0:	ldr	r8, [pc, #1616]	; 14518 <__assert_fail@plt+0x28f0>
   13ec4:	bl	157cc <__assert_fail@plt+0x3ba4>
   13ec8:	mov	r0, fp
   13ecc:	bl	13cec <__assert_fail@plt+0x20c4>
   13ed0:	mov	r2, #224	; 0xe0
   13ed4:	mov	r1, #0
   13ed8:	mov	r0, fp
   13edc:	bl	11a54 <memset@plt>
   13ee0:	mov	r3, r6
   13ee4:	mov	r2, #10
   13ee8:	ldr	r0, [pc, #1580]	; 1451c <__assert_fail@plt+0x28f4>
   13eec:	mov	r1, r8
   13ef0:	bl	1173c <__getdelim@plt>
   13ef4:	cmp	r0, #0
   13ef8:	blt	13e68 <__assert_fail@plt+0x2240>
   13efc:	ldr	r2, [r4, #232]	; 0xe8
   13f00:	beq	13f24 <__assert_fail@plt+0x22fc>
   13f04:	sub	r0, r0, #1
   13f08:	ldrb	r3, [r2, r0]
   13f0c:	cmp	r3, #10
   13f10:	strbeq	r9, [r2, r0]
   13f14:	ldr	r3, [r5]
   13f18:	ldreq	r2, [r4, #232]	; 0xe8
   13f1c:	add	r3, r3, #1
   13f20:	str	r3, [r5]
   13f24:	ldrb	r3, [r2]
   13f28:	cmp	r3, #0
   13f2c:	cmpne	r3, #35	; 0x23
   13f30:	beq	13ee0 <__assert_fail@plt+0x22b8>
   13f34:	mov	r0, r2
   13f38:	movw	r1, #50152	; 0xc3e8
   13f3c:	movt	r1, #1
   13f40:	add	r3, sp, #32
   13f44:	add	r2, sp, #28
   13f48:	bl	155d8 <__assert_fail@plt+0x39b0>
   13f4c:	subs	sl, r0, #0
   13f50:	bne	1439c <__assert_fail@plt+0x2774>
   13f54:	ldr	r3, [sp, #28]
   13f58:	cmp	r3, #5
   13f5c:	ble	142d4 <__assert_fail@plt+0x26ac>
   13f60:	ldr	r3, [sp, #8]
   13f64:	mov	r1, #58	; 0x3a
   13f68:	ldr	r2, [sp, #32]
   13f6c:	str	r3, [r4, #4]
   13f70:	ldr	r3, [r5]
   13f74:	ldr	r2, [r2]
   13f78:	str	r3, [r4, #8]
   13f7c:	mov	r0, r2
   13f80:	str	r2, [sp, #16]
   13f84:	bl	11ae4 <strrchr@plt>
   13f88:	subs	r8, r0, #0
   13f8c:	beq	143e4 <__assert_fail@plt+0x27bc>
   13f90:	movw	r1, #50212	; 0xc424
   13f94:	movt	r1, #1
   13f98:	strb	sl, [r8], #1
   13f9c:	ldr	r0, [sp, #16]
   13fa0:	bl	11754 <strcmp@plt>
   13fa4:	cmp	r0, #0
   13fa8:	bne	1441c <__assert_fail@plt+0x27f4>
   13fac:	mov	r2, #7
   13fb0:	ldr	r1, [pc, #1384]	; 14520 <__assert_fail@plt+0x28f8>
   13fb4:	mov	r0, r8
   13fb8:	bl	11bd4 <strncmp@plt>
   13fbc:	cmp	r0, #0
   13fc0:	bne	143d0 <__assert_fail@plt+0x27a8>
   13fc4:	ldrb	r2, [r8, #7]
   13fc8:	cmp	r2, #43	; 0x2b
   13fcc:	movne	r2, #1
   13fd0:	moveq	r2, #2
   13fd4:	addne	r0, r8, #7
   13fd8:	addeq	r0, r8, #8
   13fdc:	str	r2, [r4, #68]	; 0x44
   13fe0:	bl	12ef4 <__assert_fail@plt+0x12cc>
   13fe4:	str	r0, [r4, #16]
   13fe8:	ldr	r8, [sp, #32]
   13fec:	movw	r1, #50852	; 0xc6a4
   13ff0:	movt	r1, #1
   13ff4:	ldr	sl, [r8, #4]
   13ff8:	mov	r0, sl
   13ffc:	bl	11754 <strcmp@plt>
   14000:	cmp	r0, #0
   14004:	moveq	r3, #1
   14008:	streq	r3, [r4, #20]
   1400c:	beq	14090 <__assert_fail@plt+0x2468>
   14010:	movw	r1, #50860	; 0xc6ac
   14014:	movt	r1, #1
   14018:	mov	r0, sl
   1401c:	bl	11754 <strcmp@plt>
   14020:	cmp	r0, #0
   14024:	moveq	r3, #2
   14028:	streq	r3, [r4, #20]
   1402c:	beq	14090 <__assert_fail@plt+0x2468>
   14030:	movw	r1, #50868	; 0xc6b4
   14034:	movt	r1, #1
   14038:	mov	r0, sl
   1403c:	bl	11754 <strcmp@plt>
   14040:	cmp	r0, #0
   14044:	moveq	r3, #4
   14048:	streq	r3, [r4, #20]
   1404c:	beq	14090 <__assert_fail@plt+0x2468>
   14050:	movw	r1, #50872	; 0xc6b8
   14054:	movt	r1, #1
   14058:	mov	r0, sl
   1405c:	bl	11754 <strcmp@plt>
   14060:	cmp	r0, #0
   14064:	moveq	r3, #5
   14068:	streq	r3, [r4, #20]
   1406c:	beq	14090 <__assert_fail@plt+0x2468>
   14070:	mov	r0, sl
   14074:	movw	r1, #50884	; 0xc6c4
   14078:	movt	r1, #1
   1407c:	bl	11754 <strcmp@plt>
   14080:	cmp	r0, #0
   14084:	bne	144cc <__assert_fail@plt+0x28a4>
   14088:	mov	r3, #3
   1408c:	str	r3, [r4, #20]
   14090:	ldr	r0, [r8, #8]
   14094:	bl	12ef4 <__assert_fail@plt+0x12cc>
   14098:	mov	ip, #2
   1409c:	mov	r3, #1
   140a0:	str	r0, [r4, #24]
   140a4:	movw	r1, #50396	; 0xc4dc
   140a8:	movt	r1, #1
   140ac:	mov	r2, #3
   140b0:	mov	r8, r0
   140b4:	strh	ip, [r4, #72]	; 0x48
   140b8:	strb	r3, [r4, #74]	; 0x4a
   140bc:	bl	11bd4 <strncmp@plt>
   140c0:	cmp	r0, #0
   140c4:	beq	1435c <__assert_fail@plt+0x2734>
   140c8:	movw	r1, #50660	; 0xc5e4
   140cc:	movt	r1, #1
   140d0:	mov	r2, #3
   140d4:	mov	r0, r8
   140d8:	bl	11bd4 <strncmp@plt>
   140dc:	cmp	r0, #0
   140e0:	beq	1435c <__assert_fail@plt+0x2734>
   140e4:	ldr	r3, [sp, #32]
   140e8:	mov	r1, #46	; 0x2e
   140ec:	ldr	sl, [r3, #12]
   140f0:	mov	r0, sl
   140f4:	bl	119f4 <strchr@plt>
   140f8:	subs	r8, r0, #0
   140fc:	beq	1410c <__assert_fail@plt+0x24e4>
   14100:	strb	r9, [r8], #1
   14104:	ldr	r3, [sp, #32]
   14108:	ldr	sl, [r3, #12]
   1410c:	movw	r1, #50912	; 0xc6e0
   14110:	movt	r1, #1
   14114:	mov	r0, sl
   14118:	bl	11754 <strcmp@plt>
   1411c:	cmp	r0, #0
   14120:	moveq	r3, #1
   14124:	streq	r3, [r4, #28]
   14128:	beq	14148 <__assert_fail@plt+0x2520>
   1412c:	mov	r0, sl
   14130:	movw	r1, #50920	; 0xc6e8
   14134:	movt	r1, #1
   14138:	bl	11754 <strcmp@plt>
   1413c:	cmp	r0, #0
   14140:	streq	r0, [r4, #28]
   14144:	bne	1447c <__assert_fail@plt+0x2854>
   14148:	cmp	r8, #0
   1414c:	beq	14174 <__assert_fail@plt+0x254c>
   14150:	mov	r2, #10
   14154:	add	r1, sp, #36	; 0x24
   14158:	mov	r0, r8
   1415c:	bl	119d0 <strtoul@plt>
   14160:	ldr	r3, [sp, #36]	; 0x24
   14164:	str	r0, [r4, #32]
   14168:	ldrb	r3, [r3]
   1416c:	cmp	r3, #0
   14170:	bne	1445c <__assert_fail@plt+0x2834>
   14174:	ldr	r3, [r4, #68]	; 0x44
   14178:	sub	r3, r3, #1
   1417c:	cmp	r3, #1
   14180:	bhi	141b0 <__assert_fail@plt+0x2588>
   14184:	movw	r1, #50396	; 0xc4dc
   14188:	movt	r1, #1
   1418c:	ldr	r0, [r4, #24]
   14190:	mov	r2, #3
   14194:	str	r9, [r4, #28]
   14198:	bl	11bd4 <strncmp@plt>
   1419c:	cmp	r0, #0
   141a0:	bne	144a0 <__assert_fail@plt+0x2878>
   141a4:	ldr	r3, [r4, #20]
   141a8:	cmp	r3, #1
   141ac:	bne	143a8 <__assert_fail@plt+0x2780>
   141b0:	ldr	r3, [sp, #32]
   141b4:	ldr	r0, [r3, #16]
   141b8:	bl	12ef4 <__assert_fail@plt+0x12cc>
   141bc:	mov	r1, #58	; 0x3a
   141c0:	mov	r8, r0
   141c4:	str	r0, [r4, #40]	; 0x28
   141c8:	bl	119f4 <strchr@plt>
   141cc:	subs	r3, r0, #0
   141d0:	beq	1443c <__assert_fail@plt+0x2814>
   141d4:	mov	r0, r3
   141d8:	strb	r9, [r0], #1
   141dc:	bl	12ef4 <__assert_fail@plt+0x12cc>
   141e0:	str	r0, [r4, #44]	; 0x2c
   141e4:	ldr	r3, [sp, #32]
   141e8:	ldr	r0, [r3, #20]
   141ec:	bl	12ef4 <__assert_fail@plt+0x12cc>
   141f0:	movw	r1, #51072	; 0xc780
   141f4:	movt	r1, #1
   141f8:	str	r0, [r4, #52]	; 0x34
   141fc:	bl	11754 <strcmp@plt>
   14200:	cmp	r0, #0
   14204:	bne	144c0 <__assert_fail@plt+0x2898>
   14208:	mov	r0, fp
   1420c:	bl	12938 <__assert_fail@plt+0xd10>
   14210:	cmp	r0, #0
   14214:	str	r0, [r4, #48]	; 0x30
   14218:	beq	144b0 <__assert_fail@plt+0x2888>
   1421c:	ldrsh	r3, [r0, #10]
   14220:	str	r3, [r4, #28]
   14224:	ldr	r0, [sp, #28]
   14228:	mov	r1, #4
   1422c:	sub	r3, r0, #5
   14230:	sub	r0, r0, #4
   14234:	str	r3, [r4, #60]	; 0x3c
   14238:	bl	17720 <argp_parse@@Base+0x1658>
   1423c:	cmp	r0, #0
   14240:	mov	r6, r0
   14244:	str	r0, [r4, #56]	; 0x38
   14248:	beq	144f4 <__assert_fail@plt+0x28cc>
   1424c:	ldr	r5, [r4, #60]	; 0x3c
   14250:	ldr	r1, [sp, #32]
   14254:	cmp	r5, #0
   14258:	beq	142c0 <__assert_fail@plt+0x2698>
   1425c:	lsl	r7, r5, #2
   14260:	add	r2, r1, #20
   14264:	mov	r3, r0
   14268:	mov	lr, #0
   1426c:	add	ip, r7, r0
   14270:	ldr	r0, [r2, #4]!
   14274:	str	r0, [r3], #4
   14278:	cmp	ip, r3
   1427c:	str	lr, [r2]
   14280:	bne	14270 <__assert_fail@plt+0x2648>
   14284:	cmp	r5, #1
   14288:	movne	r6, ip
   1428c:	bne	142c0 <__assert_fail@plt+0x2698>
   14290:	ldr	r5, [r4, #52]	; 0x34
   14294:	mov	r1, #47	; 0x2f
   14298:	mov	r0, r5
   1429c:	bl	11ae4 <strrchr@plt>
   142a0:	cmp	r0, #0
   142a4:	addne	r5, r0, #1
   142a8:	mov	r0, r5
   142ac:	bl	12ef4 <__assert_fail@plt+0x12cc>
   142b0:	ldr	r3, [r4, #56]	; 0x38
   142b4:	str	r0, [r6]
   142b8:	ldr	r1, [sp, #32]
   142bc:	add	r6, r3, r7
   142c0:	mov	r3, #0
   142c4:	ldr	r0, [sp, #28]
   142c8:	str	r3, [r6]
   142cc:	bl	157cc <__assert_fail@plt+0x3ba4>
   142d0:	b	13e5c <__assert_fail@plt+0x2234>
   142d4:	cmp	r3, #1
   142d8:	bne	14378 <__assert_fail@plt+0x2750>
   142dc:	ldr	r3, [sp, #32]
   142e0:	ldr	r8, [r3]
   142e4:	mov	r0, r8
   142e8:	bl	119dc <strlen@plt>
   142ec:	sub	r0, r0, #1
   142f0:	ldrb	r2, [r8, r0]
   142f4:	cmp	r2, #58	; 0x3a
   142f8:	bne	14378 <__assert_fail@plt+0x2750>
   142fc:	movw	r2, #58896	; 0xe610
   14300:	movt	r2, #2
   14304:	strb	sl, [r8, r0]
   14308:	ldr	r0, [r2]
   1430c:	str	r2, [sp, #20]
   14310:	bl	170ac <argp_parse@@Base+0xfe4>
   14314:	ldr	sl, [sp, #32]
   14318:	movw	r1, #50212	; 0xc424
   1431c:	movt	r1, #1
   14320:	ldr	r3, [sl]
   14324:	mov	r0, r3
   14328:	str	r3, [sp, #16]
   1432c:	bl	11754 <strcmp@plt>
   14330:	cmp	r0, #0
   14334:	ldr	r3, [sp, #16]
   14338:	ldr	r2, [sp, #20]
   1433c:	beq	14394 <__assert_fail@plt+0x276c>
   14340:	mov	r0, r3
   14344:	str	r2, [sp, #16]
   14348:	bl	12ef4 <__assert_fail@plt+0x12cc>
   1434c:	ldr	r2, [sp, #16]
   14350:	ldr	sl, [sp, #32]
   14354:	str	r0, [r2]
   14358:	b	14394 <__assert_fail@plt+0x276c>
   1435c:	ldrb	r3, [r8, #3]
   14360:	cmp	r3, #54	; 0x36
   14364:	bne	140e4 <__assert_fail@plt+0x24bc>
   14368:	mov	r3, #10
   1436c:	strh	r3, [r4, #72]	; 0x48
   14370:	strb	r9, [r4, #74]	; 0x4a
   14374:	b	140e4 <__assert_fail@plt+0x24bc>
   14378:	movw	r1, #50824	; 0xc688
   1437c:	movt	r1, #1
   14380:	ldr	r3, [r5]
   14384:	mov	r0, #3
   14388:	ldr	r2, [sp, #8]
   1438c:	bl	11b14 <syslog@plt>
   14390:	ldr	sl, [sp, #32]
   14394:	ldr	r0, [sp, #28]
   14398:	b	13ebc <__assert_fail@plt+0x2294>
   1439c:	ldr	r0, [sp, #28]
   143a0:	ldr	sl, [sp, #32]
   143a4:	b	13ebc <__assert_fail@plt+0x2294>
   143a8:	ldr	ip, [r4, #16]
   143ac:	movw	r1, #51024	; 0xc750
   143b0:	movt	r1, #1
   143b4:	mov	r0, #3
   143b8:	ldr	r3, [r5]
   143bc:	str	ip, [sp]
   143c0:	ldr	r2, [sp, #8]
   143c4:	bl	11b14 <syslog@plt>
   143c8:	ldr	sl, [sp, #32]
   143cc:	b	14394 <__assert_fail@plt+0x276c>
   143d0:	mov	r0, r8
   143d4:	bl	12ef4 <__assert_fail@plt+0x12cc>
   143d8:	str	r0, [r4, #16]
   143dc:	str	r9, [r4, #68]	; 0x44
   143e0:	b	13fe8 <__assert_fail@plt+0x23c0>
   143e4:	movw	r2, #58896	; 0xe610
   143e8:	movt	r2, #2
   143ec:	ldr	r0, [r2]
   143f0:	cmp	r0, #0
   143f4:	beq	14498 <__assert_fail@plt+0x2870>
   143f8:	bl	12ef4 <__assert_fail@plt+0x12cc>
   143fc:	ldr	r3, [sp, #12]
   14400:	movw	r2, #58876	; 0xe5fc
   14404:	movt	r2, #2
   14408:	ldr	r1, [sp, #32]
   1440c:	str	r8, [r2]
   14410:	str	r0, [r3]
   14414:	ldr	r8, [r1]
   14418:	b	13fac <__assert_fail@plt+0x2384>
   1441c:	ldr	r0, [sp, #16]
   14420:	bl	12ef4 <__assert_fail@plt+0x12cc>
   14424:	ldr	r3, [sp, #12]
   14428:	movw	r2, #58876	; 0xe5fc
   1442c:	movt	r2, #2
   14430:	str	sl, [r2]
   14434:	str	r0, [r3]
   14438:	b	13fac <__assert_fail@plt+0x2384>
   1443c:	mov	r0, r8
   14440:	mov	r1, #46	; 0x2e
   14444:	bl	119f4 <strchr@plt>
   14448:	subs	r3, r0, #0
   1444c:	bne	141d4 <__assert_fail@plt+0x25ac>
   14450:	bl	12ef4 <__assert_fail@plt+0x12cc>
   14454:	str	r0, [r4, #44]	; 0x2c
   14458:	b	141e4 <__assert_fail@plt+0x25bc>
   1445c:	movw	r1, #50952	; 0xc708
   14460:	movt	r1, #1
   14464:	str	r8, [sp]
   14468:	mov	r0, #4
   1446c:	ldr	r3, [r5]
   14470:	ldr	r2, [sp, #8]
   14474:	bl	11b14 <syslog@plt>
   14478:	b	14174 <__assert_fail@plt+0x254c>
   1447c:	movw	r1, #50928	; 0xc6f0
   14480:	movt	r1, #1
   14484:	ldr	r3, [r5]
   14488:	mov	r0, #4
   1448c:	ldr	r2, [sp, #8]
   14490:	bl	11b14 <syslog@plt>
   14494:	b	14148 <__assert_fail@plt+0x2520>
   14498:	ldr	r8, [sp, #16]
   1449c:	b	13fac <__assert_fail@plt+0x2384>
   144a0:	movw	r1, #50980	; 0xc724
   144a4:	movt	r1, #1
   144a8:	ldr	ip, [r4, #16]
   144ac:	b	143b4 <__assert_fail@plt+0x278c>
   144b0:	movw	r1, #51084	; 0xc78c
   144b4:	movt	r1, #1
   144b8:	ldr	ip, [r4, #16]
   144bc:	b	143b4 <__assert_fail@plt+0x278c>
   144c0:	mov	r3, #0
   144c4:	str	r3, [r4, #48]	; 0x30
   144c8:	b	14224 <__assert_fail@plt+0x25fc>
   144cc:	movw	r1, #50888	; 0xc6c8
   144d0:	movt	r1, #1
   144d4:	ldr	r3, [r5]
   144d8:	mov	r0, #4
   144dc:	ldr	r2, [sp, #8]
   144e0:	bl	11b14 <syslog@plt>
   144e4:	mvn	r3, #0
   144e8:	ldr	r8, [sp, #32]
   144ec:	str	r3, [r4, #20]
   144f0:	b	14090 <__assert_fail@plt+0x2468>
   144f4:	mov	r0, #3
   144f8:	movw	r1, #51120	; 0xc7b0
   144fc:	movt	r1, #1
   14500:	ldr	r3, [r5]
   14504:	ldr	r2, [sp, #8]
   14508:	bl	11b14 <syslog@plt>
   1450c:	mvn	r0, #0
   14510:	bl	119c4 <exit@plt>
   14514:	andeq	lr, r2, r0, asr #7
   14518:	andeq	lr, r2, r0, lsr #9
   1451c:	andeq	lr, r2, r4, lsr #9
   14520:	muleq	r2, r4, r2
   14524:	mov	r3, #0
   14528:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1452c:	movw	r1, #54972	; 0xd6bc
   14530:	movt	r1, #1
   14534:	strd	r6, [sp, #8]
   14538:	mov	r6, r0
   1453c:	strd	r8, [sp, #16]
   14540:	str	lr, [sp, #24]
   14544:	sub	sp, sp, #148	; 0x94
   14548:	str	r3, [sp, #12]
   1454c:	bl	11b74 <fopen64@plt>
   14550:	subs	r5, r0, #0
   14554:	beq	14724 <__assert_fail@plt+0x2afc>
   14558:	movw	r7, #58884	; 0xe604
   1455c:	movt	r7, #2
   14560:	movw	r9, #51196	; 0xc7fc
   14564:	movt	r9, #1
   14568:	movw	r8, #51152	; 0xc7d0
   1456c:	movt	r8, #1
   14570:	add	r2, sp, #12
   14574:	mov	r1, r6
   14578:	mov	r0, r5
   1457c:	bl	13e20 <__assert_fail@plt+0x21f8>
   14580:	subs	r4, r0, #0
   14584:	beq	1463c <__assert_fail@plt+0x2a14>
   14588:	ldr	r0, [r4, #36]	; 0x24
   1458c:	bl	11748 <getpwnam@plt>
   14590:	cmp	r0, #0
   14594:	beq	14704 <__assert_fail@plt+0x2adc>
   14598:	ldr	r0, [r4, #40]	; 0x28
   1459c:	cmp	r0, #0
   145a0:	beq	145b0 <__assert_fail@plt+0x2988>
   145a4:	ldrb	r3, [r0]
   145a8:	cmp	r3, #0
   145ac:	bne	14610 <__assert_fail@plt+0x29e8>
   145b0:	ldr	r3, [r4, #64]	; 0x40
   145b4:	sub	r3, r3, #1
   145b8:	cmp	r3, #1
   145bc:	bls	145e0 <__assert_fail@plt+0x29b8>
   145c0:	mov	r0, r4
   145c4:	bl	13a68 <__assert_fail@plt+0x1e40>
   145c8:	ldr	r3, [r7]
   145cc:	cmp	r3, #0
   145d0:	beq	14604 <__assert_fail@plt+0x29dc>
   145d4:	ldr	r0, [r4, #8]
   145d8:	bl	170ac <argp_parse@@Base+0xfe4>
   145dc:	b	14570 <__assert_fail@plt+0x2948>
   145e0:	mvn	r3, #0
   145e4:	mov	r2, #1
   145e8:	mov	r0, r4
   145ec:	strh	r2, [r4, #32]
   145f0:	str	r3, [r4, #60]	; 0x3c
   145f4:	bl	13670 <__assert_fail@plt+0x1a48>
   145f8:	ldr	r3, [r7]
   145fc:	cmp	r3, #0
   14600:	bne	145d4 <__assert_fail@plt+0x29ac>
   14604:	mov	r0, r4
   14608:	bl	13cec <__assert_fail@plt+0x20c4>
   1460c:	b	14570 <__assert_fail@plt+0x2948>
   14610:	bl	11c10 <getgrnam@plt>
   14614:	cmp	r0, #0
   14618:	bne	145b0 <__assert_fail@plt+0x2988>
   1461c:	mov	r1, r9
   14620:	mov	r0, #3
   14624:	ldr	r2, [r4, #12]
   14628:	ldr	ip, [r4, #40]	; 0x28
   1462c:	ldr	r3, [r4, #20]
   14630:	str	ip, [sp]
   14634:	bl	11b14 <syslog@plt>
   14638:	b	14570 <__assert_fail@plt+0x2948>
   1463c:	mov	r0, r5
   14640:	movw	r6, #58300	; 0xe3bc
   14644:	movt	r6, #2
   14648:	movw	r7, #51240	; 0xc828
   1464c:	movt	r7, #1
   14650:	bl	11a9c <fclose@plt>
   14654:	add	r0, sp, #16
   14658:	bl	12a10 <__assert_fail@plt+0xde8>
   1465c:	movw	r3, #58892	; 0xe60c
   14660:	movt	r3, #2
   14664:	ldr	r4, [r3]
   14668:	mov	r5, r3
   1466c:	cmp	r4, #0
   14670:	beq	146cc <__assert_fail@plt+0x2aa4>
   14674:	ldrsh	r3, [r4, #32]
   14678:	ldr	r2, [r4, #220]	; 0xdc
   1467c:	cmp	r3, #0
   14680:	addne	r5, r4, #220	; 0xdc
   14684:	movne	r4, r2
   14688:	bne	1466c <__assert_fail@plt+0x2a44>
   1468c:	ldr	r3, [r4, #60]	; 0x3c
   14690:	mov	r0, r4
   14694:	str	r2, [r5]
   14698:	cmp	r3, #0
   1469c:	blt	146a4 <__assert_fail@plt+0x2a7c>
   146a0:	bl	135ec <__assert_fail@plt+0x19c4>
   146a4:	ldrb	r3, [r6]
   146a8:	cmp	r3, #0
   146ac:	bne	146f4 <__assert_fail@plt+0x2acc>
   146b0:	mov	r0, r4
   146b4:	bl	13cec <__assert_fail@plt+0x20c4>
   146b8:	mov	r0, r4
   146bc:	bl	170ac <argp_parse@@Base+0xfe4>
   146c0:	ldr	r4, [r5]
   146c4:	cmp	r4, #0
   146c8:	bne	14674 <__assert_fail@plt+0x2a4c>
   146cc:	mov	r2, r4
   146d0:	add	r1, sp, #16
   146d4:	mov	r0, #2
   146d8:	bl	117b4 <sigprocmask@plt>
   146dc:	add	sp, sp, #148	; 0x94
   146e0:	ldrd	r4, [sp]
   146e4:	ldrd	r6, [sp, #8]
   146e8:	ldrd	r8, [sp, #16]
   146ec:	add	sp, sp, #24
   146f0:	pop	{pc}		; (ldr pc, [sp], #4)
   146f4:	mov	r1, r4
   146f8:	mov	r0, r7
   146fc:	bl	12fd0 <__assert_fail@plt+0x13a8>
   14700:	b	146b0 <__assert_fail@plt+0x2a88>
   14704:	mov	r1, r8
   14708:	mov	r0, #3
   1470c:	ldr	r2, [r4, #12]
   14710:	ldr	ip, [r4, #36]	; 0x24
   14714:	ldr	r3, [r4, #20]
   14718:	str	ip, [sp]
   1471c:	bl	11b14 <syslog@plt>
   14720:	b	14570 <__assert_fail@plt+0x2948>
   14724:	mov	r2, r6
   14728:	movw	r1, #51144	; 0xc7c8
   1472c:	movt	r1, #1
   14730:	mov	r0, #3
   14734:	bl	11b14 <syslog@plt>
   14738:	b	146dc <__assert_fail@plt+0x2ab4>
   1473c:	movw	r3, #58892	; 0xe60c
   14740:	movt	r3, #2
   14744:	strd	r4, [sp, #-20]!	; 0xffffffec
   14748:	ldr	r4, [r3]
   1474c:	strd	r6, [sp, #8]
   14750:	str	lr, [sp, #16]
   14754:	sub	sp, sp, #228	; 0xe4
   14758:	cmp	r4, #0
   1475c:	beq	147c4 <__assert_fail@plt+0x2b9c>
   14760:	mov	r6, #0
   14764:	movw	r5, #51252	; 0xc834
   14768:	movt	r5, #1
   1476c:	mov	r7, r6
   14770:	b	1479c <__assert_fail@plt+0x2b74>
   14774:	ldr	r0, [r4, #12]
   14778:	bl	11754 <strcmp@plt>
   1477c:	cmp	r0, #0
   14780:	bne	14790 <__assert_fail@plt+0x2b68>
   14784:	cmp	r7, #0
   14788:	mov	r6, #1
   1478c:	bne	147c4 <__assert_fail@plt+0x2b9c>
   14790:	ldr	r4, [r4, #220]	; 0xdc
   14794:	cmp	r4, #0
   14798:	beq	147f0 <__assert_fail@plt+0x2bc8>
   1479c:	ldrsh	r3, [r4, #32]
   147a0:	cmp	r3, #0
   147a4:	beq	14790 <__assert_fail@plt+0x2b68>
   147a8:	ldr	r3, [r4, #64]	; 0x40
   147ac:	mov	r1, r5
   147b0:	sub	r3, r3, #1
   147b4:	cmp	r3, #1
   147b8:	bhi	14774 <__assert_fail@plt+0x2b4c>
   147bc:	cmp	r6, #0
   147c0:	beq	147d8 <__assert_fail@plt+0x2bb0>
   147c4:	add	sp, sp, #228	; 0xe4
   147c8:	ldrd	r4, [sp]
   147cc:	ldrd	r6, [sp, #8]
   147d0:	add	sp, sp, #16
   147d4:	pop	{pc}		; (ldr pc, [sp], #4)
   147d8:	ldr	r0, [r4, #12]
   147dc:	mov	r7, #1
   147e0:	bl	11754 <strcmp@plt>
   147e4:	cmp	r0, #0
   147e8:	beq	147c4 <__assert_fail@plt+0x2b9c>
   147ec:	b	14790 <__assert_fail@plt+0x2b68>
   147f0:	eor	r6, r6, #1
   147f4:	tst	r6, r7
   147f8:	beq	147c4 <__assert_fail@plt+0x2b9c>
   147fc:	mov	r2, #220	; 0xdc
   14800:	mov	r1, r4
   14804:	add	r0, sp, #4
   14808:	mov	r5, #1
   1480c:	bl	11a54 <memset@plt>
   14810:	movw	r3, #51248	; 0xc830
   14814:	movt	r3, #1
   14818:	movw	r0, #51252	; 0xc834
   1481c:	movt	r0, #1
   14820:	str	r3, [sp]
   14824:	bl	12ef4 <__assert_fail@plt+0x12cc>
   14828:	str	r0, [sp, #12]
   1482c:	movw	r0, #51260	; 0xc83c
   14830:	movt	r0, #1
   14834:	str	r5, [sp, #16]
   14838:	strh	r5, [sp, #32]
   1483c:	bl	12ef4 <__assert_fail@plt+0x12cc>
   14840:	str	r0, [sp, #36]	; 0x24
   14844:	mov	r0, r4
   14848:	bl	12ef4 <__assert_fail@plt+0x12cc>
   1484c:	str	r0, [sp, #40]	; 0x28
   14850:	mov	r0, sp
   14854:	bl	12938 <__assert_fail@plt+0xd10>
   14858:	cmp	r0, #0
   1485c:	str	r0, [sp, #44]	; 0x2c
   14860:	beq	148f8 <__assert_fail@plt+0x2cd0>
   14864:	ldrsh	r3, [r0, #10]
   14868:	movw	r0, #51072	; 0xc780
   1486c:	movt	r0, #1
   14870:	str	r3, [sp, #24]
   14874:	bl	12ef4 <__assert_fail@plt+0x12cc>
   14878:	mvn	r3, #0
   1487c:	str	r0, [sp, #48]	; 0x30
   14880:	movw	r0, #51316	; 0xc874
   14884:	movt	r0, #1
   14888:	str	r3, [sp, #60]	; 0x3c
   1488c:	str	r4, [sp, #64]	; 0x40
   14890:	bl	12ef4 <__assert_fail@plt+0x12cc>
   14894:	movw	r3, #58300	; 0xe3bc
   14898:	movt	r3, #2
   1489c:	str	r0, [sp, #20]
   148a0:	ldrb	r3, [r3]
   148a4:	mov	r2, #10
   148a8:	strh	r2, [sp, #68]	; 0x44
   148ac:	strb	r5, [sp, #70]	; 0x46
   148b0:	cmp	r3, #0
   148b4:	bne	148d4 <__assert_fail@plt+0x2cac>
   148b8:	mov	r0, #6
   148bc:	movw	r1, #51356	; 0xc89c
   148c0:	movt	r1, #1
   148c4:	bl	11b14 <syslog@plt>
   148c8:	mov	r0, sp
   148cc:	bl	13a68 <__assert_fail@plt+0x1e40>
   148d0:	b	147c4 <__assert_fail@plt+0x2b9c>
   148d4:	movw	r3, #58288	; 0xe3b0
   148d8:	movt	r3, #2
   148dc:	mov	r1, r5
   148e0:	movw	r0, #51324	; 0xc87c
   148e4:	movt	r0, #1
   148e8:	mov	r2, #31
   148ec:	ldr	r3, [r3]
   148f0:	bl	118f8 <fwrite@plt>
   148f4:	b	148b8 <__assert_fail@plt+0x2c90>
   148f8:	mov	r0, sp
   148fc:	bl	13cec <__assert_fail@plt+0x20c4>
   14900:	movw	r3, #58300	; 0xe3bc
   14904:	movt	r3, #2
   14908:	ldrb	r3, [r3]
   1490c:	cmp	r3, #0
   14910:	bne	14928 <__assert_fail@plt+0x2d00>
   14914:	movw	r1, #51268	; 0xc844
   14918:	movt	r1, #1
   1491c:	mov	r0, #3
   14920:	bl	11b14 <syslog@plt>
   14924:	b	147c4 <__assert_fail@plt+0x2b9c>
   14928:	movw	r3, #58288	; 0xe3b0
   1492c:	movt	r3, #2
   14930:	mov	r1, r5
   14934:	movw	r0, #51268	; 0xc844
   14938:	movt	r0, #1
   1493c:	mov	r2, #46	; 0x2e
   14940:	ldr	r3, [r3]
   14944:	bl	118f8 <fwrite@plt>
   14948:	b	14914 <__assert_fail@plt+0x2cec>
   1494c:	movw	r3, #58892	; 0xe60c
   14950:	movt	r3, #2
   14954:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14958:	ldr	r3, [r3]
   1495c:	strd	r6, [sp, #8]
   14960:	strd	r8, [sp, #16]
   14964:	mov	r9, r0
   14968:	strd	sl, [sp, #24]
   1496c:	str	lr, [sp, #32]
   14970:	sub	sp, sp, #220	; 0xdc
   14974:	cmp	r3, #0
   14978:	beq	14990 <__assert_fail@plt+0x2d68>
   1497c:	mov	r2, #0
   14980:	strh	r2, [r3, #32]
   14984:	ldr	r3, [r3, #220]	; 0xdc
   14988:	cmp	r3, #0
   1498c:	bne	14980 <__assert_fail@plt+0x2d58>
   14990:	movw	r6, #58888	; 0xe608
   14994:	movt	r6, #2
   14998:	ldr	r3, [r6]
   1499c:	ldr	r1, [r3]
   149a0:	cmp	r1, #0
   149a4:	beq	14a54 <__assert_fail@plt+0x2e2c>
   149a8:	movw	r3, #51396	; 0xc8c4
   149ac:	movt	r3, #1
   149b0:	movw	fp, #51144	; 0xc7c8
   149b4:	movt	fp, #1
   149b8:	movw	sl, #58288	; 0xe3b0
   149bc:	movt	sl, #2
   149c0:	str	r3, [sp]
   149c4:	mov	r4, #0
   149c8:	b	149f8 <__assert_fail@plt+0x2dd0>
   149cc:	ldr	r3, [sp, #128]	; 0x80
   149d0:	ldr	r2, [r6]
   149d4:	and	r3, r3, #61440	; 0xf000
   149d8:	cmp	r3, #16384	; 0x4000
   149dc:	beq	14aa8 <__assert_fail@plt+0x2e80>
   149e0:	cmp	r3, #32768	; 0x8000
   149e4:	beq	14b1c <__assert_fail@plt+0x2ef4>
   149e8:	add	r4, r4, #4
   149ec:	ldr	r1, [r2, r4]
   149f0:	cmp	r1, #0
   149f4:	beq	14a54 <__assert_fail@plt+0x2e2c>
   149f8:	add	r2, sp, #112	; 0x70
   149fc:	mov	r0, #3
   14a00:	bl	11bbc <__xstat64@plt>
   14a04:	cmp	r0, #0
   14a08:	beq	149cc <__assert_fail@plt+0x2da4>
   14a0c:	ldr	r3, [r6]
   14a10:	cmp	r9, #0
   14a14:	ldr	r5, [r3, r4]
   14a18:	bne	14a90 <__assert_fail@plt+0x2e68>
   14a1c:	bl	11a24 <__errno_location@plt>
   14a20:	ldr	r7, [sl]
   14a24:	add	r4, r4, #4
   14a28:	ldr	r0, [r0]
   14a2c:	bl	1197c <strerror@plt>
   14a30:	mov	r3, r0
   14a34:	mov	r2, r5
   14a38:	ldr	r1, [sp]
   14a3c:	mov	r0, r7
   14a40:	bl	11a0c <fprintf@plt>
   14a44:	ldr	r2, [r6]
   14a48:	ldr	r1, [r2, r4]
   14a4c:	cmp	r1, #0
   14a50:	bne	149f8 <__assert_fail@plt+0x2dd0>
   14a54:	movw	r4, #58300	; 0xe3bc
   14a58:	movt	r4, #2
   14a5c:	ldr	r0, [r4, #232]	; 0xe8
   14a60:	bl	170ac <argp_parse@@Base+0xfe4>
   14a64:	mov	r3, #0
   14a68:	str	r3, [r4, #228]	; 0xe4
   14a6c:	str	r3, [r4, #232]	; 0xe8
   14a70:	bl	1473c <__assert_fail@plt+0x2b14>
   14a74:	add	sp, sp, #220	; 0xdc
   14a78:	ldrd	r4, [sp]
   14a7c:	ldrd	r6, [sp, #8]
   14a80:	ldrd	r8, [sp, #16]
   14a84:	ldrd	sl, [sp, #24]
   14a88:	add	sp, sp, #32
   14a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a90:	mov	r2, r5
   14a94:	mov	r1, fp
   14a98:	mov	r0, #3
   14a9c:	bl	11b14 <syslog@plt>
   14aa0:	ldr	r2, [r6]
   14aa4:	b	149e8 <__assert_fail@plt+0x2dc0>
   14aa8:	ldr	r0, [r2, r4]
   14aac:	bl	11928 <opendir@plt>
   14ab0:	subs	r7, r0, #0
   14ab4:	beq	14aa0 <__assert_fail@plt+0x2e78>
   14ab8:	movw	r3, #51388	; 0xc8bc
   14abc:	movt	r3, #1
   14ac0:	str	r3, [sp, #4]
   14ac4:	b	14af8 <__assert_fail@plt+0x2ed0>
   14ac8:	ldr	r3, [r6]
   14acc:	ldr	r0, [r3, r4]
   14ad0:	bl	119dc <strlen@plt>
   14ad4:	mov	r8, r0
   14ad8:	mov	r0, r5
   14adc:	bl	119dc <strlen@plt>
   14ae0:	add	r0, r8, r0
   14ae4:	mov	r1, #1
   14ae8:	add	r0, r0, #2
   14aec:	bl	17720 <argp_parse@@Base+0x1658>
   14af0:	subs	r8, r0, #0
   14af4:	bne	14b2c <__assert_fail@plt+0x2f04>
   14af8:	mov	r0, r7
   14afc:	bl	11b38 <readdir64@plt>
   14b00:	cmp	r0, #0
   14b04:	add	r5, r0, #19
   14b08:	bne	14ac8 <__assert_fail@plt+0x2ea0>
   14b0c:	mov	r0, r7
   14b10:	bl	11c04 <closedir@plt>
   14b14:	ldr	r2, [r6]
   14b18:	b	149e8 <__assert_fail@plt+0x2dc0>
   14b1c:	ldr	r0, [r2, r4]
   14b20:	bl	14524 <__assert_fail@plt+0x28fc>
   14b24:	ldr	r2, [r6]
   14b28:	b	149e8 <__assert_fail@plt+0x2dc0>
   14b2c:	ldr	r2, [r6]
   14b30:	mov	r3, r5
   14b34:	ldr	r1, [sp, #4]
   14b38:	ldr	r2, [r2, r4]
   14b3c:	bl	11b2c <sprintf@plt>
   14b40:	add	r2, sp, #8
   14b44:	mov	r1, r8
   14b48:	mov	r0, #3
   14b4c:	bl	11bbc <__xstat64@plt>
   14b50:	cmp	r0, #0
   14b54:	bne	14b68 <__assert_fail@plt+0x2f40>
   14b58:	ldr	r3, [sp, #24]
   14b5c:	and	r3, r3, #61440	; 0xf000
   14b60:	cmp	r3, #32768	; 0x8000
   14b64:	beq	14b74 <__assert_fail@plt+0x2f4c>
   14b68:	mov	r0, r8
   14b6c:	bl	170ac <argp_parse@@Base+0xfe4>
   14b70:	b	14af8 <__assert_fail@plt+0x2ed0>
   14b74:	mov	r0, r8
   14b78:	bl	14524 <__assert_fail@plt+0x28fc>
   14b7c:	b	14b68 <__assert_fail@plt+0x2f40>
   14b80:	movw	r3, #58868	; 0xe5f4
   14b84:	movt	r3, #2
   14b88:	strd	r4, [sp, #-20]!	; 0xffffffec
   14b8c:	ldr	r3, [r3]
   14b90:	mov	r2, r1
   14b94:	mov	r5, #128	; 0x80
   14b98:	ldr	r4, [r3]
   14b9c:	strd	r6, [sp, #8]
   14ba0:	mov	r7, r0
   14ba4:	mov	r0, r2
   14ba8:	str	lr, [sp, #16]
   14bac:	sub	sp, sp, #316	; 0x13c
   14bb0:	add	r1, sp, #184	; 0xb8
   14bb4:	add	r2, sp, #20
   14bb8:	str	r5, [sp, #20]
   14bbc:	bl	11b8c <getpeername@plt>
   14bc0:	subs	r3, r0, #0
   14bc4:	bne	14c88 <__assert_fail@plt+0x3060>
   14bc8:	mov	ip, #1
   14bcc:	mov	r1, r5
   14bd0:	str	r3, [sp]
   14bd4:	add	r0, sp, #184	; 0xb8
   14bd8:	add	r2, sp, #104	; 0x68
   14bdc:	stmib	sp, {r3, ip}
   14be0:	mov	r3, #80	; 0x50
   14be4:	add	r6, sp, #24
   14be8:	bl	11ad8 <getnameinfo@plt>
   14bec:	cmp	r0, #0
   14bf0:	mov	r3, r7
   14bf4:	beq	14c68 <__assert_fail@plt+0x3040>
   14bf8:	movw	r2, #51424	; 0xc8e0
   14bfc:	movt	r2, #1
   14c00:	mov	r0, r6
   14c04:	mov	r1, #80	; 0x50
   14c08:	bl	11a30 <snprintf@plt>
   14c0c:	movw	r5, #58872	; 0xe5f8
   14c10:	movt	r5, #2
   14c14:	ldr	r2, [r5]
   14c18:	mov	r1, r6
   14c1c:	mov	r0, r4
   14c20:	sub	r2, r2, r4
   14c24:	bl	11a60 <strncpy@plt>
   14c28:	mov	r0, r4
   14c2c:	bl	119dc <strlen@plt>
   14c30:	ldr	r3, [r5]
   14c34:	add	r0, r4, r0
   14c38:	cmp	r0, r3
   14c3c:	bcs	14c54 <__assert_fail@plt+0x302c>
   14c40:	mov	r2, #32
   14c44:	strb	r2, [r0], #1
   14c48:	ldr	r3, [r5]
   14c4c:	cmp	r3, r0
   14c50:	bhi	14c44 <__assert_fail@plt+0x301c>
   14c54:	add	sp, sp, #316	; 0x13c
   14c58:	ldrd	r4, [sp]
   14c5c:	ldrd	r6, [sp, #8]
   14c60:	add	sp, sp, #16
   14c64:	pop	{pc}		; (ldr pc, [sp], #4)
   14c68:	add	r2, sp, #104	; 0x68
   14c6c:	mov	r0, r6
   14c70:	mov	r1, #80	; 0x50
   14c74:	str	r2, [sp]
   14c78:	movw	r2, #51412	; 0xc8d4
   14c7c:	movt	r2, #1
   14c80:	bl	11a30 <snprintf@plt>
   14c84:	b	14c0c <__assert_fail@plt+0x2fe4>
   14c88:	add	r6, sp, #24
   14c8c:	mov	r3, r7
   14c90:	b	14bf8 <__assert_fail@plt+0x2fd0>
   14c94:	ldr	r3, [r1, #12]
   14c98:	mov	r1, r0
   14c9c:	str	r4, [sp, #-8]!
   14ca0:	mov	r4, r0
   14ca4:	str	lr, [sp, #4]
   14ca8:	sub	sp, sp, #8192	; 0x2000
   14cac:	mov	r0, r3
   14cb0:	bl	14b80 <__assert_fail@plt+0x2f58>
   14cb4:	b	14ccc <__assert_fail@plt+0x30a4>
   14cb8:	mov	r1, sp
   14cbc:	mov	r0, r4
   14cc0:	bl	11a84 <write@plt>
   14cc4:	cmp	r0, #0
   14cc8:	ble	14ce4 <__assert_fail@plt+0x30bc>
   14ccc:	mov	r2, #8192	; 0x2000
   14cd0:	mov	r1, sp
   14cd4:	mov	r0, r4
   14cd8:	bl	1179c <read@plt>
   14cdc:	subs	r2, r0, #0
   14ce0:	bgt	14cb8 <__assert_fail@plt+0x3090>
   14ce4:	mov	r0, #0
   14ce8:	bl	119c4 <exit@plt>
   14cec:	ldr	r3, [r1, #12]
   14cf0:	mov	r1, r0
   14cf4:	str	r4, [sp, #-8]!
   14cf8:	mov	r4, r0
   14cfc:	str	lr, [sp, #4]
   14d00:	sub	sp, sp, #8192	; 0x2000
   14d04:	mov	r0, r3
   14d08:	bl	14b80 <__assert_fail@plt+0x2f58>
   14d0c:	mov	r2, #8192	; 0x2000
   14d10:	mov	r1, sp
   14d14:	mov	r0, r4
   14d18:	bl	1179c <read@plt>
   14d1c:	cmp	r0, #0
   14d20:	bgt	14d0c <__assert_fail@plt+0x30e4>
   14d24:	beq	14d38 <__assert_fail@plt+0x3110>
   14d28:	bl	11a24 <__errno_location@plt>
   14d2c:	ldr	r3, [r0]
   14d30:	cmp	r3, #4
   14d34:	beq	14d0c <__assert_fail@plt+0x30e4>
   14d38:	mov	r0, #0
   14d3c:	bl	119c4 <exit@plt>
   14d40:	movw	r3, #58596	; 0xe4e4
   14d44:	movt	r3, #2
   14d48:	str	r4, [sp, #-8]!
   14d4c:	movw	r4, #58856	; 0xe5e8
   14d50:	movt	r4, #2
   14d54:	str	lr, [sp, #4]
   14d58:	str	r3, [r4]
   14d5c:	bl	119ac <__ctype_b_loc@plt>
   14d60:	mov	r3, #0
   14d64:	ldr	r1, [r0]
   14d68:	lsl	r2, r3, #1
   14d6c:	ldrh	r2, [r1, r2]
   14d70:	tst	r2, #16384	; 0x4000
   14d74:	beq	14d88 <__assert_fail@plt+0x3160>
   14d78:	ldr	r2, [r4]
   14d7c:	add	r1, r2, #1
   14d80:	str	r1, [r4]
   14d84:	strb	r3, [r2]
   14d88:	add	r3, r3, #1
   14d8c:	cmp	r3, #129	; 0x81
   14d90:	bne	14d64 <__assert_fail@plt+0x313c>
   14d94:	ldr	r4, [sp]
   14d98:	add	sp, sp, #4
   14d9c:	pop	{pc}		; (ldr pc, [sp], #4)
   14da0:	ldr	r3, [r1, #12]
   14da4:	mov	r1, r0
   14da8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14dac:	strd	r6, [sp, #8]
   14db0:	strd	r8, [sp, #16]
   14db4:	mov	r9, r0
   14db8:	movw	r8, #58856	; 0xe5e8
   14dbc:	movt	r8, #2
   14dc0:	str	lr, [sp, #24]
   14dc4:	sub	sp, sp, #84	; 0x54
   14dc8:	mov	r0, r3
   14dcc:	bl	14b80 <__assert_fail@plt+0x2f58>
   14dd0:	ldr	r6, [r8]
   14dd4:	cmp	r6, #0
   14dd8:	beq	14e68 <__assert_fail@plt+0x3240>
   14ddc:	movw	r3, #2573	; 0xa0d
   14de0:	movw	r4, #58596	; 0xe4e4
   14de4:	movt	r4, #2
   14de8:	mov	r7, r4
   14dec:	strh	r3, [sp, #76]	; 0x4c
   14df0:	b	14e2c <__assert_fail@plt+0x3204>
   14df4:	mov	r2, #72	; 0x48
   14df8:	mov	r1, r4
   14dfc:	add	r0, sp, #4
   14e00:	bl	11808 <memcpy@plt>
   14e04:	add	r4, r4, #1
   14e08:	mov	r2, #74	; 0x4a
   14e0c:	add	r1, sp, #4
   14e10:	mov	r0, r9
   14e14:	bl	11a84 <write@plt>
   14e18:	cmp	r4, r6
   14e1c:	moveq	r4, r7
   14e20:	cmp	r0, #74	; 0x4a
   14e24:	bne	14e60 <__assert_fail@plt+0x3238>
   14e28:	ldr	r6, [r8]
   14e2c:	sub	r5, r6, r4
   14e30:	cmp	r5, #71	; 0x47
   14e34:	bgt	14df4 <__assert_fail@plt+0x31cc>
   14e38:	mov	r2, r5
   14e3c:	mov	r1, r4
   14e40:	add	r0, sp, #4
   14e44:	bl	11808 <memcpy@plt>
   14e48:	add	r3, sp, #4
   14e4c:	rsb	r2, r5, #72	; 0x48
   14e50:	add	r0, r3, r5
   14e54:	mov	r1, r7
   14e58:	bl	11808 <memcpy@plt>
   14e5c:	b	14e04 <__assert_fail@plt+0x31dc>
   14e60:	mov	r0, #0
   14e64:	bl	119c4 <exit@plt>
   14e68:	bl	14d40 <__assert_fail@plt+0x3118>
   14e6c:	ldr	r6, [r8]
   14e70:	b	14ddc <__assert_fail@plt+0x31b4>
   14e74:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14e78:	movw	r4, #58856	; 0xe5e8
   14e7c:	movt	r4, #2
   14e80:	ldr	r3, [r4]
   14e84:	strd	r6, [sp, #8]
   14e88:	mov	r6, r0
   14e8c:	strd	r8, [sp, #16]
   14e90:	str	lr, [sp, #24]
   14e94:	sub	sp, sp, #220	; 0xdc
   14e98:	cmp	r3, #0
   14e9c:	beq	14f80 <__assert_fail@plt+0x3358>
   14ea0:	add	r2, sp, #8
   14ea4:	mov	ip, #128	; 0x80
   14ea8:	add	r7, sp, #88	; 0x58
   14eac:	add	r1, sp, #12
   14eb0:	mov	r3, #0
   14eb4:	mov	r0, r6
   14eb8:	str	r7, [sp]
   14ebc:	stmib	sp, {r2, ip}
   14ec0:	mov	r2, #74	; 0x4a
   14ec4:	bl	11868 <recvfrom@plt>
   14ec8:	cmp	r0, #0
   14ecc:	blt	14f54 <__assert_fail@plt+0x332c>
   14ed0:	movw	r5, #58300	; 0xe3bc
   14ed4:	movt	r5, #2
   14ed8:	ldr	r9, [r4]
   14edc:	ldr	r4, [r5, #236]	; 0xec
   14ee0:	sub	r8, r9, r4
   14ee4:	cmp	r8, #71	; 0x47
   14ee8:	bgt	14f6c <__assert_fail@plt+0x3344>
   14eec:	mov	r2, r8
   14ef0:	mov	r1, r4
   14ef4:	add	r0, sp, #12
   14ef8:	bl	117c0 <memmove@plt>
   14efc:	add	r3, sp, #12
   14f00:	movw	r1, #58596	; 0xe4e4
   14f04:	movt	r1, #2
   14f08:	rsb	r2, r8, #72	; 0x48
   14f0c:	add	r0, r3, r8
   14f10:	bl	11808 <memcpy@plt>
   14f14:	add	r4, r4, #1
   14f18:	mov	r2, #128	; 0x80
   14f1c:	str	r7, [sp]
   14f20:	cmp	r9, r4
   14f24:	movw	ip, #2573	; 0xa0d
   14f28:	movweq	r3, #58596	; 0xe4e4
   14f2c:	add	r1, sp, #12
   14f30:	str	r2, [sp, #4]
   14f34:	movteq	r3, #2
   14f38:	mov	r0, r6
   14f3c:	strne	r4, [r5, #236]	; 0xec
   14f40:	mov	r2, #74	; 0x4a
   14f44:	strh	ip, [sp, #84]	; 0x54
   14f48:	streq	r3, [r5, #236]	; 0xec
   14f4c:	mov	r3, #0
   14f50:	bl	11aa8 <sendto@plt>
   14f54:	add	sp, sp, #220	; 0xdc
   14f58:	ldrd	r4, [sp]
   14f5c:	ldrd	r6, [sp, #8]
   14f60:	ldrd	r8, [sp, #16]
   14f64:	add	sp, sp, #24
   14f68:	pop	{pc}		; (ldr pc, [sp], #4)
   14f6c:	mov	r2, #72	; 0x48
   14f70:	mov	r1, r4
   14f74:	add	r0, sp, #12
   14f78:	bl	117c0 <memmove@plt>
   14f7c:	b	14f14 <__assert_fail@plt+0x32ec>
   14f80:	bl	14d40 <__assert_fail@plt+0x3118>
   14f84:	movw	r3, #58300	; 0xe3bc
   14f88:	movt	r3, #2
   14f8c:	movw	r2, #58596	; 0xe4e4
   14f90:	movt	r2, #2
   14f94:	str	r2, [r3, #236]	; 0xec
   14f98:	b	14ea0 <__assert_fail@plt+0x3278>
   14f9c:	push	{lr}		; (str lr, [sp, #-4]!)
   14fa0:	sub	sp, sp, #12
   14fa4:	mov	r1, #0
   14fa8:	mov	r0, sp
   14fac:	bl	11910 <gettimeofday@plt>
   14fb0:	cmp	r0, #0
   14fb4:	blt	14fd4 <__assert_fail@plt+0x33ac>
   14fb8:	ldr	r3, [sp]
   14fbc:	movw	r0, #32384	; 0x7e80
   14fc0:	movt	r0, #33706	; 0x83aa
   14fc4:	add	r0, r3, r0
   14fc8:	rev	r0, r0
   14fcc:	add	sp, sp, #12
   14fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   14fd4:	movw	r3, #58300	; 0xe3bc
   14fd8:	movt	r3, #2
   14fdc:	ldrb	r0, [r3]
   14fe0:	cmp	r0, #0
   14fe4:	beq	14fcc <__assert_fail@plt+0x33a4>
   14fe8:	movw	r3, #58288	; 0xe3b0
   14fec:	movt	r3, #2
   14ff0:	movw	r0, #51428	; 0xc8e4
   14ff4:	movt	r0, #1
   14ff8:	ldr	r3, [r3]
   14ffc:	mov	r2, #26
   15000:	mov	r1, #1
   15004:	bl	118f8 <fwrite@plt>
   15008:	mov	r0, #0
   1500c:	b	14fcc <__assert_fail@plt+0x33a4>
   15010:	str	r4, [sp, #-8]!
   15014:	mov	r4, r0
   15018:	str	lr, [sp, #4]
   1501c:	sub	sp, sp, #8
   15020:	bl	14f9c <__assert_fail@plt+0x3374>
   15024:	mov	r2, #4
   15028:	str	r0, [sp, #4]
   1502c:	mov	r0, r4
   15030:	add	r1, sp, r2
   15034:	bl	11a84 <write@plt>
   15038:	add	sp, sp, #8
   1503c:	ldr	r4, [sp]
   15040:	add	sp, sp, #4
   15044:	pop	{pc}		; (ldr pc, [sp], #4)
   15048:	strd	r4, [sp, #-16]!
   1504c:	mov	r4, #128	; 0x80
   15050:	mov	r3, #0
   15054:	str	r6, [sp, #8]
   15058:	mov	r2, #4
   1505c:	mov	r6, r0
   15060:	str	lr, [sp, #12]
   15064:	sub	sp, sp, #144	; 0x90
   15068:	add	ip, sp, #12
   1506c:	add	r5, sp, #16
   15070:	add	r1, sp, #8
   15074:	stm	sp, {r5, ip}
   15078:	str	r4, [sp, #12]
   1507c:	bl	11868 <recvfrom@plt>
   15080:	cmp	r0, #0
   15084:	blt	150ac <__assert_fail@plt+0x3484>
   15088:	bl	14f9c <__assert_fail@plt+0x3374>
   1508c:	add	r1, sp, #8
   15090:	mov	r3, #0
   15094:	str	r5, [sp]
   15098:	mov	r2, #4
   1509c:	str	r4, [sp, #4]
   150a0:	str	r0, [sp, #8]
   150a4:	mov	r0, r6
   150a8:	bl	11aa8 <sendto@plt>
   150ac:	add	sp, sp, #144	; 0x90
   150b0:	ldrd	r4, [sp]
   150b4:	ldr	r6, [sp, #8]
   150b8:	add	sp, sp, #12
   150bc:	pop	{pc}		; (ldr pc, [sp], #4)
   150c0:	mov	r3, #128	; 0x80
   150c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   150c8:	mov	r4, r0
   150cc:	strd	r6, [sp, #8]
   150d0:	movw	r0, #51460	; 0xc904
   150d4:	movt	r0, #1
   150d8:	str	r8, [sp, #16]
   150dc:	mov	r7, r1
   150e0:	mov	r8, r2
   150e4:	str	lr, [sp, #20]
   150e8:	sub	sp, sp, #352	; 0x160
   150ec:	mov	r2, #1
   150f0:	movw	r1, #51456	; 0xc900
   150f4:	movt	r1, #1
   150f8:	str	r3, [sp, #20]
   150fc:	bl	11a00 <setenv@plt>
   15100:	movw	r0, #51468	; 0xc90c
   15104:	movt	r0, #1
   15108:	bl	11bc8 <unsetenv@plt>
   1510c:	movw	r0, #51480	; 0xc918
   15110:	movt	r0, #1
   15114:	bl	11bc8 <unsetenv@plt>
   15118:	movw	r0, #51496	; 0xc928
   1511c:	movt	r0, #1
   15120:	bl	11bc8 <unsetenv@plt>
   15124:	movw	r0, #51512	; 0xc938
   15128:	movt	r0, #1
   1512c:	bl	11bc8 <unsetenv@plt>
   15130:	movw	r0, #51524	; 0xc944
   15134:	movt	r0, #1
   15138:	bl	11bc8 <unsetenv@plt>
   1513c:	movw	r0, #51540	; 0xc954
   15140:	movt	r0, #1
   15144:	bl	11bc8 <unsetenv@plt>
   15148:	mov	r0, r4
   1514c:	add	r1, sp, #40	; 0x28
   15150:	add	r2, sp, #20
   15154:	bl	11b50 <getsockname@plt>
   15158:	cmp	r0, #0
   1515c:	blt	152d8 <__assert_fail@plt+0x36b0>
   15160:	mov	ip, #3
   15164:	mov	r3, #16
   15168:	ldr	r1, [sp, #20]
   1516c:	add	r6, sp, #24
   15170:	add	r5, sp, #168	; 0xa8
   15174:	mov	r2, r5
   15178:	add	r0, sp, #40	; 0x28
   1517c:	str	r6, [sp]
   15180:	stmib	sp, {r3, ip}
   15184:	mov	r3, #184	; 0xb8
   15188:	bl	11ad8 <getnameinfo@plt>
   1518c:	cmp	r0, #0
   15190:	beq	1525c <__assert_fail@plt+0x3634>
   15194:	bl	117e4 <gai_strerror@plt>
   15198:	mov	r2, r0
   1519c:	movw	r1, #51656	; 0xc9c8
   151a0:	movt	r1, #1
   151a4:	mov	r0, #4
   151a8:	movw	r4, #58300	; 0xe3bc
   151ac:	movt	r4, #2
   151b0:	bl	11b14 <syslog@plt>
   151b4:	ldrb	r3, [r4, #2]
   151b8:	cmp	r3, #0
   151bc:	bne	15314 <__assert_fail@plt+0x36ec>
   151c0:	mov	ip, #3
   151c4:	mov	r1, #16
   151c8:	str	r6, [sp]
   151cc:	mov	r3, #184	; 0xb8
   151d0:	mov	r2, r5
   151d4:	mov	r0, r7
   151d8:	stmib	sp, {r1, ip}
   151dc:	mov	r1, r8
   151e0:	bl	11ad8 <getnameinfo@plt>
   151e4:	cmp	r0, #0
   151e8:	bne	152bc <__assert_fail@plt+0x3694>
   151ec:	movw	r0, #51512	; 0xc938
   151f0:	movt	r0, #1
   151f4:	mov	r2, #1
   151f8:	mov	r1, r5
   151fc:	bl	11a00 <setenv@plt>
   15200:	cmp	r0, #0
   15204:	blt	153d0 <__assert_fail@plt+0x37a8>
   15208:	movw	r4, #58300	; 0xe3bc
   1520c:	movt	r4, #2
   15210:	ldrb	r3, [r4]
   15214:	cmp	r3, #0
   15218:	bne	15400 <__assert_fail@plt+0x37d8>
   1521c:	mov	r1, r6
   15220:	movw	r0, #51524	; 0xc944
   15224:	movt	r0, #1
   15228:	mov	r2, #1
   1522c:	bl	11a00 <setenv@plt>
   15230:	cmp	r0, #0
   15234:	blt	153ec <__assert_fail@plt+0x37c4>
   15238:	ldrb	r3, [r4, #2]
   1523c:	cmp	r3, #0
   15240:	bne	1535c <__assert_fail@plt+0x3734>
   15244:	add	sp, sp, #352	; 0x160
   15248:	ldrd	r4, [sp]
   1524c:	ldrd	r6, [sp, #8]
   15250:	ldr	r8, [sp, #16]
   15254:	add	sp, sp, #20
   15258:	pop	{pc}		; (ldr pc, [sp], #4)
   1525c:	movw	r0, #51468	; 0xc90c
   15260:	movt	r0, #1
   15264:	mov	r2, #1
   15268:	mov	r1, r5
   1526c:	bl	11a00 <setenv@plt>
   15270:	cmp	r0, #0
   15274:	blt	15450 <__assert_fail@plt+0x3828>
   15278:	movw	r4, #58300	; 0xe3bc
   1527c:	movt	r4, #2
   15280:	ldrb	r3, [r4]
   15284:	cmp	r3, #0
   15288:	bne	152f4 <__assert_fail@plt+0x36cc>
   1528c:	movw	r0, #51496	; 0xc928
   15290:	movt	r0, #1
   15294:	mov	r2, #1
   15298:	mov	r1, r6
   1529c:	bl	11a00 <setenv@plt>
   152a0:	cmp	r0, #0
   152a4:	bge	151b4 <__assert_fail@plt+0x358c>
   152a8:	movw	r1, #51628	; 0xc9ac
   152ac:	movt	r1, #1
   152b0:	mov	r0, #4
   152b4:	bl	11b14 <syslog@plt>
   152b8:	b	151b4 <__assert_fail@plt+0x358c>
   152bc:	bl	117e4 <gai_strerror@plt>
   152c0:	mov	r2, r0
   152c4:	movw	r1, #51656	; 0xc9c8
   152c8:	movt	r1, #1
   152cc:	mov	r0, #4
   152d0:	bl	11b14 <syslog@plt>
   152d4:	b	15244 <__assert_fail@plt+0x361c>
   152d8:	movw	r1, #51556	; 0xc964
   152dc:	movt	r1, #1
   152e0:	mov	r0, #4
   152e4:	add	r5, sp, #168	; 0xa8
   152e8:	bl	11b14 <syslog@plt>
   152ec:	add	r6, sp, #24
   152f0:	b	151c0 <__assert_fail@plt+0x3598>
   152f4:	movw	r3, #58288	; 0xe3b0
   152f8:	movt	r3, #2
   152fc:	movw	r1, #51600	; 0xc990
   15300:	movt	r1, #1
   15304:	ldr	r0, [r3]
   15308:	mov	r2, r5
   1530c:	bl	11a0c <fprintf@plt>
   15310:	b	1528c <__assert_fail@plt+0x3664>
   15314:	mov	ip, #0
   15318:	add	r0, sp, #40	; 0x28
   1531c:	ldr	r1, [sp, #20]
   15320:	mov	r3, #184	; 0xb8
   15324:	mov	r2, r5
   15328:	str	ip, [sp]
   1532c:	str	ip, [sp, #4]
   15330:	str	ip, [sp, #8]
   15334:	bl	11ad8 <getnameinfo@plt>
   15338:	cmp	r0, #0
   1533c:	beq	15420 <__assert_fail@plt+0x37f8>
   15340:	bl	117e4 <gai_strerror@plt>
   15344:	mov	r2, r0
   15348:	movw	r1, #51656	; 0xc9c8
   1534c:	movt	r1, #1
   15350:	mov	r0, #4
   15354:	bl	11b14 <syslog@plt>
   15358:	b	151c0 <__assert_fail@plt+0x3598>
   1535c:	mov	ip, #0
   15360:	mov	r1, r8
   15364:	mov	r0, r7
   15368:	mov	r3, #184	; 0xb8
   1536c:	mov	r2, r5
   15370:	str	ip, [sp]
   15374:	str	ip, [sp, #4]
   15378:	str	ip, [sp, #8]
   1537c:	bl	11ad8 <getnameinfo@plt>
   15380:	cmp	r0, #0
   15384:	bne	152bc <__assert_fail@plt+0x3694>
   15388:	movw	r0, #51540	; 0xc954
   1538c:	movt	r0, #1
   15390:	mov	r2, #1
   15394:	mov	r1, r5
   15398:	bl	11a00 <setenv@plt>
   1539c:	cmp	r0, #0
   153a0:	blt	1546c <__assert_fail@plt+0x3844>
   153a4:	ldrb	r3, [r4]
   153a8:	cmp	r3, #0
   153ac:	beq	15244 <__assert_fail@plt+0x361c>
   153b0:	movw	r3, #58288	; 0xe3b0
   153b4:	movt	r3, #2
   153b8:	mov	r2, r5
   153bc:	movw	r1, #51808	; 0xca60
   153c0:	movt	r1, #1
   153c4:	ldr	r0, [r3]
   153c8:	bl	11a0c <fprintf@plt>
   153cc:	b	15244 <__assert_fail@plt+0x361c>
   153d0:	movw	r1, #51700	; 0xc9f4
   153d4:	movt	r1, #1
   153d8:	mov	r0, #4
   153dc:	movw	r4, #58300	; 0xe3bc
   153e0:	movt	r4, #2
   153e4:	bl	11b14 <syslog@plt>
   153e8:	b	1521c <__assert_fail@plt+0x35f4>
   153ec:	movw	r1, #51752	; 0xca28
   153f0:	movt	r1, #1
   153f4:	mov	r0, #4
   153f8:	bl	11b14 <syslog@plt>
   153fc:	b	15238 <__assert_fail@plt+0x3610>
   15400:	movw	r3, #58288	; 0xe3b0
   15404:	movt	r3, #2
   15408:	movw	r1, #51724	; 0xca0c
   1540c:	movt	r1, #1
   15410:	ldr	r0, [r3]
   15414:	mov	r2, r5
   15418:	bl	11a0c <fprintf@plt>
   1541c:	b	1521c <__assert_fail@plt+0x35f4>
   15420:	movw	r0, #51480	; 0xc918
   15424:	movt	r0, #1
   15428:	mov	r2, #1
   1542c:	mov	r1, r5
   15430:	bl	11a00 <setenv@plt>
   15434:	cmp	r0, #0
   15438:	bge	151c0 <__assert_fail@plt+0x3598>
   1543c:	movw	r1, #51672	; 0xc9d8
   15440:	movt	r1, #1
   15444:	mov	r0, #4
   15448:	bl	11b14 <syslog@plt>
   1544c:	b	151c0 <__assert_fail@plt+0x3598>
   15450:	movw	r1, #51576	; 0xc978
   15454:	movt	r1, #1
   15458:	mov	r0, #4
   1545c:	movw	r4, #58300	; 0xe3bc
   15460:	movt	r4, #2
   15464:	bl	11b14 <syslog@plt>
   15468:	b	1528c <__assert_fail@plt+0x3664>
   1546c:	movw	r1, #51780	; 0xca44
   15470:	movt	r1, #1
   15474:	mov	r0, #4
   15478:	bl	11b14 <syslog@plt>
   1547c:	b	15244 <__assert_fail@plt+0x361c>
   15480:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15484:	strd	r6, [sp, #8]
   15488:	strd	r8, [sp, #16]
   1548c:	strd	sl, [sp, #24]
   15490:	str	lr, [sp, #32]
   15494:	sub	sp, sp, #4
   15498:	ldr	r7, [sp, #40]	; 0x28
   1549c:	ldr	r6, [sp, #44]	; 0x2c
   154a0:	ldr	lr, [r6]
   154a4:	cmp	lr, r0
   154a8:	add	r8, r1, lr
   154ac:	bge	154f0 <__assert_fail@plt+0x38c8>
   154b0:	ldrb	ip, [r1, lr]
   154b4:	cmp	ip, #32
   154b8:	cmpne	ip, #9
   154bc:	bne	154f0 <__assert_fail@plt+0x38c8>
   154c0:	add	ip, lr, #1
   154c4:	add	r4, r1, ip
   154c8:	b	154e0 <__assert_fail@plt+0x38b8>
   154cc:	ldrb	r5, [r4], #1
   154d0:	add	ip, ip, #1
   154d4:	cmp	r5, #9
   154d8:	cmpne	r5, #32
   154dc:	bne	154f0 <__assert_fail@plt+0x38c8>
   154e0:	cmp	r0, ip
   154e4:	mov	lr, ip
   154e8:	mov	r8, r4
   154ec:	bne	154cc <__assert_fail@plt+0x38a4>
   154f0:	str	lr, [r3]
   154f4:	ldrb	r5, [r8]
   154f8:	cmp	r5, #34	; 0x22
   154fc:	beq	15598 <__assert_fail@plt+0x3970>
   15500:	cmp	r5, #39	; 0x27
   15504:	addne	r8, lr, #1
   15508:	movne	r4, lr
   1550c:	beq	15598 <__assert_fail@plt+0x3970>
   15510:	mov	sl, r1
   15514:	mov	fp, r0
   15518:	mov	r1, r5
   1551c:	mov	r0, r2
   15520:	mov	r9, r2
   15524:	bl	119f4 <strchr@plt>
   15528:	cmp	r0, #0
   1552c:	addeq	sl, sl, r4
   15530:	beq	1556c <__assert_fail@plt+0x3944>
   15534:	mov	r0, r8
   15538:	str	r4, [r7]
   1553c:	str	r8, [r6]
   15540:	add	sp, sp, #4
   15544:	ldrd	r4, [sp]
   15548:	ldrd	r6, [sp, #8]
   1554c:	ldrd	r8, [sp, #16]
   15550:	ldrd	sl, [sp, #24]
   15554:	add	sp, sp, #32
   15558:	pop	{pc}		; (ldr pc, [sp], #4)
   1555c:	bl	119f4 <strchr@plt>
   15560:	cmp	r0, #0
   15564:	bne	15534 <__assert_fail@plt+0x390c>
   15568:	mov	r4, r8
   1556c:	add	r8, r4, #1
   15570:	mov	r0, r9
   15574:	cmp	fp, r8
   15578:	ble	15534 <__assert_fail@plt+0x390c>
   1557c:	ldrb	r3, [sl, #1]!
   15580:	and	r2, r3, #253	; 0xfd
   15584:	mov	r1, r3
   15588:	cmp	r2, #32
   1558c:	cmpne	r3, #9
   15590:	bne	1555c <__assert_fail@plt+0x3934>
   15594:	b	15534 <__assert_fail@plt+0x390c>
   15598:	add	r3, r1, lr
   1559c:	b	155ac <__assert_fail@plt+0x3984>
   155a0:	cmp	r5, ip
   155a4:	beq	155d0 <__assert_fail@plt+0x39a8>
   155a8:	mov	lr, r4
   155ac:	add	r4, lr, #1
   155b0:	ldrb	ip, [r3, #1]!
   155b4:	cmp	r0, r4
   155b8:	bgt	155a0 <__assert_fail@plt+0x3978>
   155bc:	cmp	ip, #34	; 0x22
   155c0:	add	r8, lr, #2
   155c4:	movne	r5, ip
   155c8:	beq	15534 <__assert_fail@plt+0x390c>
   155cc:	b	15510 <__assert_fail@plt+0x38e8>
   155d0:	add	r8, lr, #2
   155d4:	b	15534 <__assert_fail@plt+0x390c>
   155d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   155dc:	strd	r6, [sp, #8]
   155e0:	mov	r7, r0
   155e4:	strd	r8, [sp, #16]
   155e8:	mov	r9, r3
   155ec:	mov	r8, r2
   155f0:	strd	sl, [sp, #24]
   155f4:	mov	sl, r1
   155f8:	str	lr, [sp, #32]
   155fc:	sub	sp, sp, #36	; 0x24
   15600:	bl	119dc <strlen@plt>
   15604:	mov	r3, #0
   15608:	subs	r5, r0, #0
   1560c:	str	r3, [r8]
   15610:	str	r3, [r9]
   15614:	beq	15794 <__assert_fail@plt+0x3b6c>
   15618:	bl	119ac <__ctype_b_loc@plt>
   1561c:	add	r2, r7, r5
   15620:	ldr	r1, [r0]
   15624:	b	15630 <__assert_fail@plt+0x3a08>
   15628:	subs	r5, r5, #1
   1562c:	beq	15794 <__assert_fail@plt+0x3b6c>
   15630:	ldrb	r3, [r2, #-1]!
   15634:	lsl	r3, r3, #1
   15638:	ldrh	r3, [r1, r3]
   1563c:	ands	r3, r3, #8192	; 0x2000
   15640:	bne	15628 <__assert_fail@plt+0x3a00>
   15644:	mov	r2, #1
   15648:	add	fp, sp, #28
   1564c:	str	r3, [sp, #28]
   15650:	str	r2, [r8]
   15654:	b	15664 <__assert_fail@plt+0x3a3c>
   15658:	ldr	r3, [r8]
   1565c:	add	r3, r3, #1
   15660:	str	r3, [r8]
   15664:	add	r1, sp, #24
   15668:	add	r3, sp, #20
   1566c:	mov	r2, sl
   15670:	mov	r0, r5
   15674:	stm	sp, {r1, fp}
   15678:	mov	r1, r7
   1567c:	bl	15480 <__assert_fail@plt+0x3858>
   15680:	cmp	r0, r5
   15684:	blt	15658 <__assert_fail@plt+0x3a30>
   15688:	ldr	r0, [r8]
   1568c:	mov	r1, #4
   15690:	mov	r6, #0
   15694:	add	r0, r0, #1
   15698:	bl	17720 <argp_parse@@Base+0x1658>
   1569c:	ldr	r2, [r8]
   156a0:	mov	r3, r0
   156a4:	str	r0, [r9]
   156a8:	str	r6, [sp, #28]
   156ac:	cmp	r2, r6
   156b0:	ble	157bc <__assert_fail@plt+0x3b94>
   156b4:	str	r5, [sp, #12]
   156b8:	b	15724 <__assert_fail@plt+0x3afc>
   156bc:	cmp	r3, #39	; 0x27
   156c0:	ldr	r4, [sp, #24]
   156c4:	beq	15774 <__assert_fail@plt+0x3b4c>
   156c8:	sub	r4, r4, r2
   156cc:	mov	r1, #1
   156d0:	ldr	r5, [r9]
   156d4:	add	r0, r4, #2
   156d8:	add	r4, r4, r1
   156dc:	bl	17720 <argp_parse@@Base+0x1658>
   156e0:	ldr	r1, [r9]
   156e4:	mov	r2, r4
   156e8:	str	r0, [r5, r6, lsl #2]
   156ec:	ldr	r3, [r1, r6, lsl #2]
   156f0:	subs	r0, r3, #0
   156f4:	beq	15794 <__assert_fail@plt+0x3b6c>
   156f8:	ldr	r1, [sp, #20]
   156fc:	add	r1, r7, r1
   15700:	bl	11808 <memcpy@plt>
   15704:	ldr	r3, [r9]
   15708:	mov	r2, #0
   1570c:	ldr	r3, [r3, r6, lsl #2]
   15710:	add	r6, r6, #1
   15714:	strb	r2, [r3, r4]
   15718:	ldr	r3, [r8]
   1571c:	cmp	r3, r6
   15720:	ble	157b4 <__assert_fail@plt+0x3b8c>
   15724:	add	r1, sp, #24
   15728:	add	r3, sp, #20
   1572c:	ldr	r0, [sp, #12]
   15730:	mov	r2, sl
   15734:	stm	sp, {r1, fp}
   15738:	mov	r1, r7
   1573c:	bl	15480 <__assert_fail@plt+0x3858>
   15740:	ldr	r2, [sp, #20]
   15744:	ldrb	r3, [r7, r2]
   15748:	cmp	r3, #34	; 0x22
   1574c:	bne	156bc <__assert_fail@plt+0x3a94>
   15750:	ldr	r4, [sp, #24]
   15754:	ldrb	r3, [r7, r4]
   15758:	cmp	r3, #34	; 0x22
   1575c:	bne	156c8 <__assert_fail@plt+0x3aa0>
   15760:	add	r2, r2, #1
   15764:	sub	r4, r4, #1
   15768:	str	r2, [sp, #20]
   1576c:	str	r4, [sp, #24]
   15770:	b	156c8 <__assert_fail@plt+0x3aa0>
   15774:	ldrb	r3, [r7, r4]
   15778:	cmp	r3, #39	; 0x27
   1577c:	bne	156c8 <__assert_fail@plt+0x3aa0>
   15780:	add	r2, r2, #1
   15784:	sub	r4, r4, #1
   15788:	str	r2, [sp, #20]
   1578c:	str	r4, [sp, #24]
   15790:	b	156c8 <__assert_fail@plt+0x3aa0>
   15794:	mov	r0, #1
   15798:	add	sp, sp, #36	; 0x24
   1579c:	ldrd	r4, [sp]
   157a0:	ldrd	r6, [sp, #8]
   157a4:	ldrd	r8, [sp, #16]
   157a8:	ldrd	sl, [sp, #24]
   157ac:	add	sp, sp, #32
   157b0:	pop	{pc}		; (ldr pc, [sp], #4)
   157b4:	ldr	r3, [r9]
   157b8:	add	r3, r3, r6, lsl #2
   157bc:	mov	r2, #0
   157c0:	mov	r0, r2
   157c4:	str	r2, [r3]
   157c8:	b	15798 <__assert_fail@plt+0x3b70>
   157cc:	cmp	r0, #0
   157d0:	strd	r4, [sp, #-16]!
   157d4:	mov	r5, r1
   157d8:	str	r6, [sp, #8]
   157dc:	str	lr, [sp, #12]
   157e0:	ble	157f8 <__assert_fail@plt+0x3bd0>
   157e4:	add	r4, r1, r0, lsl #2
   157e8:	ldr	r0, [r4, #-4]!
   157ec:	bl	170ac <argp_parse@@Base+0xfe4>
   157f0:	cmp	r4, r5
   157f4:	bne	157e8 <__assert_fail@plt+0x3bc0>
   157f8:	mov	r0, r5
   157fc:	bl	170ac <argp_parse@@Base+0xfe4>
   15800:	ldrd	r4, [sp]
   15804:	mov	r0, #1
   15808:	ldr	r6, [sp, #8]
   1580c:	add	sp, sp, #12
   15810:	pop	{pc}		; (ldr pc, [sp], #4)
   15814:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15818:	strd	r6, [sp, #8]
   1581c:	str	sl, [sp, #24]
   15820:	subs	sl, r2, #0
   15824:	strd	r8, [sp, #16]
   15828:	str	lr, [sp, #28]
   1582c:	beq	158bc <__assert_fail@plt+0x3c94>
   15830:	mov	r8, r0
   15834:	mov	r0, #1
   15838:	mov	r6, r1
   1583c:	bl	17794 <argp_parse@@Base+0x16cc>
   15840:	subs	r4, r0, #0
   15844:	beq	158bc <__assert_fail@plt+0x3c94>
   15848:	mov	r7, #0
   1584c:	cmp	r8, r7
   15850:	strb	r7, [r4]
   15854:	ble	158e8 <__assert_fail@plt+0x3cc0>
   15858:	movw	r9, #52724	; 0xcdf4
   1585c:	movt	r9, #1
   15860:	sub	r6, r6, #4
   15864:	mov	r5, r7
   15868:	b	15898 <__assert_fail@plt+0x3c70>
   1586c:	cmp	r5, #0
   15870:	add	r5, r5, #1
   15874:	beq	15884 <__assert_fail@plt+0x3c5c>
   15878:	bl	119dc <strlen@plt>
   1587c:	ldrh	r3, [r9]
   15880:	strh	r3, [r4, r0]
   15884:	mov	r0, r4
   15888:	ldr	r1, [r6]
   1588c:	bl	11904 <strcat@plt>
   15890:	cmp	r8, r5
   15894:	beq	158d8 <__assert_fail@plt+0x3cb0>
   15898:	ldr	r0, [r6, #4]!
   1589c:	bl	119dc <strlen@plt>
   158a0:	add	r3, r0, #2
   158a4:	mov	r0, r4
   158a8:	add	r7, r7, r3
   158ac:	mov	r1, r7
   158b0:	bl	177d0 <argp_parse@@Base+0x1708>
   158b4:	subs	r4, r0, #0
   158b8:	bne	1586c <__assert_fail@plt+0x3c44>
   158bc:	mov	r0, #1
   158c0:	ldrd	r4, [sp]
   158c4:	ldrd	r6, [sp, #8]
   158c8:	ldrd	r8, [sp, #16]
   158cc:	ldr	sl, [sp, #24]
   158d0:	add	sp, sp, #28
   158d4:	pop	{pc}		; (ldr pc, [sp], #4)
   158d8:	ldrb	r3, [r4]
   158dc:	cmp	r3, #0
   158e0:	movne	r5, #0
   158e4:	bne	158f8 <__assert_fail@plt+0x3cd0>
   158e8:	mov	r0, #0
   158ec:	str	r4, [sl]
   158f0:	b	158c0 <__assert_fail@plt+0x3c98>
   158f4:	strb	r5, [r4, r0]
   158f8:	mov	r0, r4
   158fc:	bl	119dc <strlen@plt>
   15900:	sub	r0, r0, #1
   15904:	ldrb	r3, [r4, r0]
   15908:	cmp	r3, #32
   1590c:	beq	158f4 <__assert_fail@plt+0x3ccc>
   15910:	mov	r0, #0
   15914:	str	r4, [sl]
   15918:	b	158c0 <__assert_fail@plt+0x3c98>
   1591c:	mov	r0, #0
   15920:	str	r4, [sp, #-8]!
   15924:	str	lr, [sp, #4]
   15928:	bl	11880 <alarm@plt>
   1592c:	mov	r4, r0
   15930:	mov	r1, #0
   15934:	mov	r0, #14
   15938:	bl	11814 <signal@plt>
   1593c:	cmp	r4, #0
   15940:	beq	15950 <__assert_fail@plt+0x3d28>
   15944:	ldr	r4, [sp]
   15948:	add	sp, sp, #4
   1594c:	pop	{pc}		; (ldr pc, [sp], #4)
   15950:	mov	r1, r4
   15954:	movw	r2, #52728	; 0xcdf8
   15958:	movt	r2, #1
   1595c:	mov	r0, #1
   15960:	ldr	r4, [sp]
   15964:	ldr	lr, [sp, #4]
   15968:	add	sp, sp, #8
   1596c:	b	1191c <error@plt>
   15970:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15974:	mov	r5, r1
   15978:	strd	r6, [sp, #8]
   1597c:	mov	r7, r2
   15980:	str	r8, [sp, #16]
   15984:	mov	r8, r0
   15988:	str	lr, [sp, #20]
   1598c:	bl	119b8 <getpid@plt>
   15990:	mov	r6, r0
   15994:	bl	11acc <fork@plt>
   15998:	cmn	r0, #1
   1599c:	beq	159cc <__assert_fail@plt+0x3da4>
   159a0:	cmp	r0, #0
   159a4:	beq	159e8 <__assert_fail@plt+0x3dc0>
   159a8:	cmp	r7, #0
   159ac:	bgt	15aa8 <__assert_fail@plt+0x3e80>
   159b0:	mov	r0, #0
   159b4:	bl	117fc <_exit@plt>
   159b8:	movw	r0, #52756	; 0xce14
   159bc:	movt	r0, #1
   159c0:	bl	118bc <chdir@plt>
   159c4:	cmp	r0, #0
   159c8:	bge	15a1c <__assert_fail@plt+0x3df4>
   159cc:	mvn	r6, #0
   159d0:	mov	r0, r6
   159d4:	ldrd	r4, [sp]
   159d8:	ldrd	r6, [sp, #8]
   159dc:	ldr	r8, [sp, #16]
   159e0:	add	sp, sp, #20
   159e4:	pop	{pc}		; (ldr pc, [sp], #4)
   159e8:	bl	119e8 <setsid@plt>
   159ec:	cmn	r0, #1
   159f0:	beq	159cc <__assert_fail@plt+0x3da4>
   159f4:	mov	r1, #1
   159f8:	mov	r0, r1
   159fc:	bl	11814 <signal@plt>
   15a00:	bl	11acc <fork@plt>
   15a04:	cmn	r0, #1
   15a08:	beq	159cc <__assert_fail@plt+0x3da4>
   15a0c:	cmp	r0, #0
   15a10:	bne	159b0 <__assert_fail@plt+0x3d88>
   15a14:	cmp	r8, #0
   15a18:	beq	159b8 <__assert_fail@plt+0x3d90>
   15a1c:	cmp	r5, #0
   15a20:	bne	159d0 <__assert_fail@plt+0x3da8>
   15a24:	mov	r0, #4
   15a28:	bl	1188c <sysconf@plt>
   15a2c:	cmn	r0, #1
   15a30:	mov	r4, r0
   15a34:	beq	15acc <__assert_fail@plt+0x3ea4>
   15a38:	cmp	r0, #0
   15a3c:	ble	15a54 <__assert_fail@plt+0x3e2c>
   15a40:	mov	r0, r5
   15a44:	add	r5, r5, #1
   15a48:	bl	11bf8 <close@plt>
   15a4c:	cmp	r4, r5
   15a50:	bgt	15a40 <__assert_fail@plt+0x3e18>
   15a54:	movw	r0, #52760	; 0xce18
   15a58:	movt	r0, #1
   15a5c:	mov	r2, #0
   15a60:	mov	r1, #2
   15a64:	bl	11934 <open64@plt>
   15a68:	cmn	r0, #1
   15a6c:	mov	r4, r0
   15a70:	beq	159d0 <__assert_fail@plt+0x3da8>
   15a74:	mov	r1, #0
   15a78:	bl	11898 <dup2@plt>
   15a7c:	mov	r1, #1
   15a80:	mov	r0, r4
   15a84:	bl	11898 <dup2@plt>
   15a88:	mov	r1, #2
   15a8c:	mov	r0, r4
   15a90:	bl	11898 <dup2@plt>
   15a94:	cmp	r4, #2
   15a98:	ble	159d0 <__assert_fail@plt+0x3da8>
   15a9c:	mov	r0, r4
   15aa0:	bl	11bf8 <close@plt>
   15aa4:	b	159d0 <__assert_fail@plt+0x3da8>
   15aa8:	movw	r1, #22812	; 0x591c
   15aac:	movt	r1, #1
   15ab0:	mov	r0, #14
   15ab4:	bl	11814 <signal@plt>
   15ab8:	mov	r0, r7
   15abc:	bl	11880 <alarm@plt>
   15ac0:	bl	11784 <pause@plt>
   15ac4:	mov	r0, #0
   15ac8:	bl	117fc <_exit@plt>
   15acc:	mov	r4, #64	; 0x40
   15ad0:	b	15a40 <__assert_fail@plt+0x3e18>

00015ad4 <daemon@@Base>:
   15ad4:	mov	r2, #0
   15ad8:	str	r4, [sp, #-8]!
   15adc:	str	lr, [sp, #4]
   15ae0:	bl	15970 <__assert_fail@plt+0x3d48>
   15ae4:	cmn	r0, #1
   15ae8:	ldr	r4, [sp]
   15aec:	add	sp, sp, #4
   15af0:	movne	r0, #0
   15af4:	moveq	r0, #1
   15af8:	rsb	r0, r0, #0
   15afc:	pop	{pc}		; (ldr pc, [sp], #4)
   15b00:	ldr	r3, [r0]
   15b04:	strd	r4, [sp, #-16]!
   15b08:	ldr	r5, [r0, #16]
   15b0c:	str	r6, [sp, #8]
   15b10:	str	lr, [sp, #12]
   15b14:	cmp	r3, #0
   15b18:	beq	15bc4 <daemon@@Base+0xf0>
   15b1c:	ldr	r0, [r1, #8]
   15b20:	mov	r2, #0
   15b24:	add	r0, r0, #1
   15b28:	str	r0, [r1, #8]
   15b2c:	b	15b34 <daemon@@Base+0x60>
   15b30:	add	r2, r2, #1
   15b34:	add	r3, r3, #24
   15b38:	ldr	r0, [r3, #-20]	; 0xffffffec
   15b3c:	cmp	r0, #0
   15b40:	bne	15b30 <daemon@@Base+0x5c>
   15b44:	ldr	r0, [r3, #-24]	; 0xffffffe8
   15b48:	cmp	r0, #0
   15b4c:	bne	15b30 <daemon@@Base+0x5c>
   15b50:	ldr	r0, [r3, #-8]
   15b54:	cmp	r0, #0
   15b58:	bne	15b30 <daemon@@Base+0x5c>
   15b5c:	ldr	r0, [r3, #-4]
   15b60:	cmp	r0, #0
   15b64:	bne	15b30 <daemon@@Base+0x5c>
   15b68:	ldm	r1, {r0, r3}
   15b6c:	add	ip, r2, r2, lsl #1
   15b70:	add	r2, r3, r2
   15b74:	add	r0, r0, ip
   15b78:	stm	r1, {r0, r2}
   15b7c:	cmp	r5, #0
   15b80:	beq	15bb4 <daemon@@Base+0xe0>
   15b84:	ldr	r0, [r5]
   15b88:	cmp	r0, #0
   15b8c:	beq	15bb4 <daemon@@Base+0xe0>
   15b90:	mov	r4, r1
   15b94:	mov	r1, r4
   15b98:	bl	15b00 <daemon@@Base+0x2c>
   15b9c:	ldr	r3, [r4, #12]
   15ba0:	ldr	r0, [r5, #16]!
   15ba4:	add	r3, r3, #1
   15ba8:	cmp	r0, #0
   15bac:	str	r3, [r4, #12]
   15bb0:	bne	15b94 <daemon@@Base+0xc0>
   15bb4:	ldrd	r4, [sp]
   15bb8:	ldr	r6, [sp, #8]
   15bbc:	add	sp, sp, #12
   15bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   15bc4:	ldr	r3, [r0, #4]
   15bc8:	cmp	r3, #0
   15bcc:	beq	15b7c <daemon@@Base+0xa8>
   15bd0:	ldr	r3, [r1, #8]
   15bd4:	add	r3, r3, #1
   15bd8:	str	r3, [r1, #8]
   15bdc:	b	15b7c <daemon@@Base+0xa8>
   15be0:	cmp	r0, #86	; 0x56
   15be4:	beq	15bf0 <daemon@@Base+0x11c>
   15be8:	mov	r0, #7
   15bec:	bx	lr
   15bf0:	movw	r3, #58544	; 0xe4b0
   15bf4:	movt	r3, #2
   15bf8:	str	r4, [sp, #-8]!
   15bfc:	ldr	r3, [r3]
   15c00:	mov	r4, r2
   15c04:	str	lr, [sp, #4]
   15c08:	cmp	r3, #0
   15c0c:	beq	15c3c <daemon@@Base+0x168>
   15c10:	mov	r1, r2
   15c14:	ldr	r0, [r2, #48]	; 0x30
   15c18:	blx	r3
   15c1c:	ldr	r0, [r4, #16]
   15c20:	ands	r0, r0, #32
   15c24:	beq	15c38 <daemon@@Base+0x164>
   15c28:	ldr	r4, [sp]
   15c2c:	add	sp, sp, #4
   15c30:	mov	r0, #0
   15c34:	pop	{pc}		; (ldr pc, [sp], #4)
   15c38:	bl	119c4 <exit@plt>
   15c3c:	movw	r3, #58904	; 0xe618
   15c40:	movt	r3, #2
   15c44:	ldr	r2, [r3]
   15c48:	cmp	r2, #0
   15c4c:	beq	15c64 <daemon@@Base+0x190>
   15c50:	movw	r1, #53456	; 0xd0d0
   15c54:	movt	r1, #1
   15c58:	ldr	r0, [r4, #48]	; 0x30
   15c5c:	bl	11a0c <fprintf@plt>
   15c60:	b	15c1c <daemon@@Base+0x148>
   15c64:	movw	r2, #53052	; 0xcf3c
   15c68:	movt	r2, #1
   15c6c:	movw	r1, #50804	; 0xc674
   15c70:	movt	r1, #1
   15c74:	mov	r0, r4
   15c78:	bl	1ac5c <argp_error@@Base>
   15c7c:	b	15c1c <daemon@@Base+0x148>
   15c80:	cmn	r0, #3
   15c84:	str	r4, [sp, #-8]!
   15c88:	mov	r4, r2
   15c8c:	str	lr, [sp, #4]
   15c90:	sub	sp, sp, #8
   15c94:	beq	15d94 <daemon@@Base+0x2c0>
   15c98:	ble	15cd0 <daemon@@Base+0x1fc>
   15c9c:	cmn	r0, #2
   15ca0:	beq	15d48 <daemon@@Base+0x274>
   15ca4:	cmp	r0, #63	; 0x3f
   15ca8:	bne	15d34 <daemon@@Base+0x260>
   15cac:	mov	r0, r4
   15cb0:	movw	r2, #634	; 0x27a
   15cb4:	ldr	r1, [r4, #48]	; 0x30
   15cb8:	bl	1ab9c <argp_state_help@@Base>
   15cbc:	mov	r0, #0
   15cc0:	add	sp, sp, #8
   15cc4:	ldr	r4, [sp]
   15cc8:	add	sp, sp, #4
   15ccc:	pop	{pc}		; (ldr pc, [sp], #4)
   15cd0:	cmn	r0, #4
   15cd4:	bne	15d34 <daemon@@Base+0x260>
   15cd8:	cmp	r1, #0
   15cdc:	movw	r0, #53088	; 0xcf60
   15ce0:	movt	r0, #1
   15ce4:	mov	r2, #10
   15ce8:	movne	r0, r1
   15cec:	movw	r4, #58540	; 0xe4ac
   15cf0:	movt	r4, #2
   15cf4:	mov	r1, #0
   15cf8:	bl	11760 <strtol@plt>
   15cfc:	str	r0, [r4]
   15d00:	b	15d0c <daemon@@Base+0x238>
   15d04:	mov	r0, #1
   15d08:	bl	11850 <sleep@plt>
   15d0c:	ldr	r3, [r4]
   15d10:	sub	r2, r3, #1
   15d14:	cmp	r3, #0
   15d18:	str	r2, [r4]
   15d1c:	bgt	15d04 <daemon@@Base+0x230>
   15d20:	mov	r0, #0
   15d24:	add	sp, sp, #8
   15d28:	ldr	r4, [sp]
   15d2c:	add	sp, sp, #4
   15d30:	pop	{pc}		; (ldr pc, [sp], #4)
   15d34:	mov	r0, #7
   15d38:	add	sp, sp, #8
   15d3c:	ldr	r4, [sp]
   15d40:	add	sp, sp, #4
   15d44:	pop	{pc}		; (ldr pc, [sp], #4)
   15d48:	movw	r3, #58284	; 0xe3ac
   15d4c:	movt	r3, #2
   15d50:	str	r1, [sp, #4]
   15d54:	mov	r0, r1
   15d58:	str	r1, [r3]
   15d5c:	bl	16ff4 <argp_parse@@Base+0xf2c>
   15d60:	ldr	r3, [r4, #16]
   15d64:	movw	r2, #58280	; 0xe3a8
   15d68:	movt	r2, #2
   15d6c:	str	r0, [r4, #40]	; 0x28
   15d70:	str	r0, [r2]
   15d74:	ldr	r1, [sp, #4]
   15d78:	and	r3, r3, #3
   15d7c:	cmp	r3, #1
   15d80:	bne	15d20 <daemon@@Base+0x24c>
   15d84:	ldr	r3, [r4, #8]
   15d88:	mov	r0, #0
   15d8c:	str	r1, [r3]
   15d90:	b	15cc0 <daemon@@Base+0x1ec>
   15d94:	ldr	r1, [r4, #48]	; 0x30
   15d98:	mov	r0, r4
   15d9c:	movw	r2, #513	; 0x201
   15da0:	bl	1ab9c <argp_state_help@@Base>
   15da4:	mov	r0, #0
   15da8:	add	sp, sp, #8
   15dac:	ldr	r4, [sp]
   15db0:	add	sp, sp, #4
   15db4:	pop	{pc}		; (ldr pc, [sp], #4)
   15db8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15dbc:	strd	r6, [sp, #8]
   15dc0:	strd	r8, [sp, #16]
   15dc4:	strd	sl, [sp, #24]
   15dc8:	str	lr, [sp, #32]
   15dcc:	sub	sp, sp, #44	; 0x2c
   15dd0:	ldr	fp, [r0]
   15dd4:	str	r3, [sp, #16]
   15dd8:	ldr	r3, [r0, #16]
   15ddc:	ldr	r7, [sp, #80]	; 0x50
   15de0:	cmp	fp, #0
   15de4:	str	r3, [sp, #24]
   15de8:	strd	r0, [sp, #28]
   15dec:	str	r2, [sp, #36]	; 0x24
   15df0:	beq	1609c <daemon@@Base+0x5c8>
   15df4:	ldr	r9, [r7, #4]
   15df8:	movw	r3, #36409	; 0x8e39
   15dfc:	movt	r3, #14563	; 0x38e3
   15e00:	mov	r4, fp
   15e04:	str	r3, [sp, #20]
   15e08:	ldr	r6, [r4, #4]
   15e0c:	cmp	r6, #0
   15e10:	bne	15e20 <daemon@@Base+0x34c>
   15e14:	ldr	r3, [r4]
   15e18:	cmp	r3, #0
   15e1c:	beq	15f94 <daemon@@Base+0x4c0>
   15e20:	ldr	r3, [r4, #12]
   15e24:	tst	r3, #4
   15e28:	moveq	r5, r3
   15e2c:	moveq	fp, r4
   15e30:	ldrne	r5, [fp, #12]
   15e34:	ands	r5, r5, #8
   15e38:	bne	15f7c <daemon@@Base+0x4a8>
   15e3c:	tst	r3, #8
   15e40:	bne	15ec0 <daemon@@Base+0x3ec>
   15e44:	sub	r3, r6, #1
   15e48:	cmp	r3, #254	; 0xfe
   15e4c:	bhi	15ec0 <daemon@@Base+0x3ec>
   15e50:	bl	119ac <__ctype_b_loc@plt>
   15e54:	ldr	r1, [r0]
   15e58:	lsl	r3, r6, #1
   15e5c:	ldrh	r3, [r1, r3]
   15e60:	tst	r3, #16384	; 0x4000
   15e64:	beq	15ec0 <daemon@@Base+0x3ec>
   15e68:	add	r3, r9, #1
   15e6c:	str	r3, [r7, #4]
   15e70:	strb	r6, [r9]
   15e74:	ldr	r3, [fp, #8]
   15e78:	cmp	r3, #0
   15e7c:	beq	15eb0 <daemon@@Base+0x3dc>
   15e80:	ldr	r3, [r7, #4]
   15e84:	mov	r2, #58	; 0x3a
   15e88:	add	r1, r3, #1
   15e8c:	str	r1, [r7, #4]
   15e90:	strb	r2, [r3]
   15e94:	ldr	r3, [fp, #12]
   15e98:	tst	r3, #1
   15e9c:	beq	15eb0 <daemon@@Base+0x3dc>
   15ea0:	ldr	r3, [r7, #4]
   15ea4:	add	r1, r3, #1
   15ea8:	str	r1, [r7, #4]
   15eac:	strb	r2, [r3]
   15eb0:	ldr	r3, [r7, #4]
   15eb4:	mov	r2, #0
   15eb8:	strb	r2, [r3]
   15ebc:	ldr	r9, [r7, #4]
   15ec0:	ldr	sl, [r4]
   15ec4:	cmp	sl, #0
   15ec8:	beq	15f7c <daemon@@Base+0x4a8>
   15ecc:	ldr	r3, [r7]
   15ed0:	ldr	r8, [r3, #8]
   15ed4:	str	r3, [sp, #12]
   15ed8:	ldr	r0, [r8]
   15edc:	cmp	r0, #0
   15ee0:	beq	15f04 <daemon@@Base+0x430>
   15ee4:	mov	r6, r8
   15ee8:	mov	r1, sl
   15eec:	bl	11754 <strcmp@plt>
   15ef0:	cmp	r0, #0
   15ef4:	beq	15f84 <daemon@@Base+0x4b0>
   15ef8:	ldr	r0, [r6, #16]!
   15efc:	cmp	r0, #0
   15f00:	bne	15ee8 <daemon@@Base+0x414>
   15f04:	ldr	r0, [fp, #8]
   15f08:	ldr	r1, [r7, #8]
   15f0c:	cmp	r0, #0
   15f10:	str	sl, [r1]
   15f14:	beq	15f28 <daemon@@Base+0x454>
   15f18:	ldr	r3, [fp, #12]
   15f1c:	tst	r3, #1
   15f20:	movne	r5, #2
   15f24:	moveq	r5, #1
   15f28:	str	r5, [r1, #4]
   15f2c:	mov	r3, #0
   15f30:	add	ip, r1, #16
   15f34:	ldr	r0, [r4, #4]
   15f38:	str	r3, [r1, #8]
   15f3c:	ldr	r2, [sp, #16]
   15f40:	cmp	r0, r3
   15f44:	ldr	r3, [sp, #12]
   15f48:	ldreq	r0, [fp, #4]
   15f4c:	ldr	r3, [r3, #48]	; 0x30
   15f50:	bic	r0, r0, #-16777216	; 0xff000000
   15f54:	sub	r3, r2, r3
   15f58:	ldr	r2, [sp, #20]
   15f5c:	asr	r3, r3, #2
   15f60:	mul	r3, r2, r3
   15f64:	add	r3, r3, #1
   15f68:	add	r3, r0, r3, lsl #24
   15f6c:	str	r3, [r1, #12]
   15f70:	mov	r3, #0
   15f74:	str	ip, [r7, #8]
   15f78:	str	r3, [r1, #16]
   15f7c:	add	r4, r4, #24
   15f80:	b	15e08 <daemon@@Base+0x334>
   15f84:	sub	r6, r6, r8
   15f88:	cmp	r6, #0
   15f8c:	bge	15f7c <daemon@@Base+0x4a8>
   15f90:	b	15f04 <daemon@@Base+0x430>
   15f94:	ldr	r3, [r4, #16]
   15f98:	cmp	r3, #0
   15f9c:	bne	15e20 <daemon@@Base+0x34c>
   15fa0:	ldr	r3, [r4, #20]
   15fa4:	cmp	r3, #0
   15fa8:	bne	15e20 <daemon@@Base+0x34c>
   15fac:	ldr	r3, [sp, #28]
   15fb0:	ldr	r2, [r3, #4]
   15fb4:	mov	r3, #0
   15fb8:	ldr	r1, [sp, #16]
   15fbc:	ldr	r0, [sp, #24]
   15fc0:	str	r2, [r1]
   15fc4:	mov	r2, r1
   15fc8:	ldr	r1, [sp, #28]
   15fcc:	cmp	r0, r3
   15fd0:	stmib	r2, {r1, r9}
   15fd4:	ldr	r1, [sp, #32]
   15fd8:	str	r3, [r2, #12]
   15fdc:	str	r1, [r2, #16]
   15fe0:	ldr	r1, [sp, #36]	; 0x24
   15fe4:	str	r3, [r2, #24]
   15fe8:	str	r3, [r2, #28]
   15fec:	str	r3, [r2, #32]
   15ff0:	str	r1, [r2, #20]
   15ff4:	beq	16030 <daemon@@Base+0x55c>
   15ff8:	ldr	r2, [r0]
   15ffc:	cmp	r2, r3
   16000:	beq	160c0 <daemon@@Base+0x5ec>
   16004:	mov	r1, r0
   16008:	add	r3, r3, #1
   1600c:	ldr	r2, [r1, r3, lsl #4]
   16010:	cmp	r2, #0
   16014:	bne	16008 <daemon@@Base+0x534>
   16018:	lsl	r3, r3, #2
   1601c:	ldr	r2, [r7, #12]
   16020:	ldr	r1, [sp, #16]
   16024:	add	r3, r2, r3
   16028:	str	r2, [r1, #28]
   1602c:	str	r3, [r7, #12]
   16030:	ldr	r3, [sp, #16]
   16034:	add	r0, r3, #36	; 0x24
   16038:	ldr	r5, [sp, #24]
   1603c:	cmp	r5, #0
   16040:	beq	16080 <daemon@@Base+0x5ac>
   16044:	ldr	r1, [r5]
   16048:	cmp	r1, #0
   1604c:	beq	16080 <daemon@@Base+0x5ac>
   16050:	ldr	r6, [sp, #16]
   16054:	mov	r2, #0
   16058:	add	r4, r2, #1
   1605c:	mov	r3, r0
   16060:	str	r7, [sp]
   16064:	mov	r0, r1
   16068:	mov	r1, r6
   1606c:	bl	15db8 <daemon@@Base+0x2e4>
   16070:	ldr	r1, [r5, r4, lsl #4]
   16074:	mov	r2, r4
   16078:	cmp	r1, #0
   1607c:	bne	16058 <daemon@@Base+0x584>
   16080:	add	sp, sp, #44	; 0x2c
   16084:	ldrd	r4, [sp]
   16088:	ldrd	r6, [sp, #8]
   1608c:	ldrd	r8, [sp, #16]
   16090:	ldrd	sl, [sp, #24]
   16094:	add	sp, sp, #32
   16098:	pop	{pc}		; (ldr pc, [sp], #4)
   1609c:	ldr	r3, [sp, #28]
   160a0:	ldr	r2, [r3, #4]
   160a4:	cmp	r2, #0
   160a8:	beq	160b4 <daemon@@Base+0x5e0>
   160ac:	ldr	r9, [r7, #4]
   160b0:	b	15fb4 <daemon@@Base+0x4e0>
   160b4:	ldr	r0, [sp, #16]
   160b8:	str	r2, [sp, #16]
   160bc:	b	16038 <daemon@@Base+0x564>
   160c0:	mov	r3, r2
   160c4:	b	1601c <daemon@@Base+0x548>

000160c8 <argp_parse@@Base>:
   160c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   160cc:	tst	r3, #1
   160d0:	mov	r5, r3
   160d4:	strd	r6, [sp, #8]
   160d8:	mov	r7, r0
   160dc:	strd	r8, [sp, #16]
   160e0:	strd	sl, [sp, #24]
   160e4:	add	fp, sp, #32
   160e8:	str	lr, [sp, #32]
   160ec:	sub	sp, sp, #236	; 0xec
   160f0:	str	r1, [fp, #-244]	; 0xffffff0c
   160f4:	str	r2, [fp, #-232]	; 0xffffff18
   160f8:	bne	16124 <argp_parse@@Base+0x5c>
   160fc:	movw	r3, #58284	; 0xe3ac
   16100:	movt	r3, #2
   16104:	ldr	r2, [r3]
   16108:	cmp	r2, #0
   1610c:	beq	16b48 <argp_parse@@Base+0xa80>
   16110:	movw	r4, #58280	; 0xe3a8
   16114:	movt	r4, #2
   16118:	ldr	r3, [r4]
   1611c:	cmp	r3, #0
   16120:	beq	16b58 <argp_parse@@Base+0xa90>
   16124:	ands	r3, r5, #4
   16128:	moveq	r6, #1
   1612c:	movne	r6, #0
   16130:	ands	ip, r5, #16
   16134:	str	r3, [fp, #-236]	; 0xffffff14
   16138:	beq	16190 <argp_parse@@Base+0xc8>
   1613c:	mov	r3, #0
   16140:	sub	r4, fp, #196	; 0xc4
   16144:	str	r6, [fp, #-228]	; 0xffffff1c
   16148:	cmp	r7, r3
   1614c:	str	r3, [fp, #-224]	; 0xffffff20
   16150:	str	r3, [fp, #-220]	; 0xffffff24
   16154:	str	r3, [fp, #-216]	; 0xffffff28
   16158:	str	r3, [r4, #8]
   1615c:	str	r3, [r4, #12]
   16160:	str	r3, [r4, #16]
   16164:	str	r3, [r4, #20]
   16168:	str	r3, [r4, #24]
   1616c:	str	r3, [r4, #28]
   16170:	str	r3, [r4, #32]
   16174:	bne	16240 <argp_parse@@Base+0x178>
   16178:	mov	r3, #52	; 0x34
   1617c:	mov	sl, #36	; 0x24
   16180:	mov	r9, r7
   16184:	str	r3, [fp, #-236]	; 0xffffff14
   16188:	mov	r3, sl
   1618c:	b	16278 <argp_parse@@Base+0x1b0>
   16190:	sub	sp, sp, #64	; 0x40
   16194:	mov	r1, ip
   16198:	add	r3, sp, #8
   1619c:	sub	sp, sp, #32
   161a0:	add	r4, sp, #8
   161a4:	mov	r0, r3
   161a8:	mov	r2, #64	; 0x40
   161ac:	str	ip, [r4]
   161b0:	str	ip, [r4, #4]
   161b4:	str	ip, [r4, #8]
   161b8:	str	ip, [r4, #12]
   161bc:	str	r3, [r4, #16]
   161c0:	str	ip, [r4, #20]
   161c4:	str	ip, [r4, #24]
   161c8:	bl	11a54 <memset@plt>
   161cc:	movw	r2, #58904	; 0xe618
   161d0:	movt	r2, #2
   161d4:	ldr	r1, [r2]
   161d8:	mov	r3, r0
   161dc:	cmp	r7, #0
   161e0:	movw	r2, #52772	; 0xce24
   161e4:	movt	r2, #1
   161e8:	strne	r7, [r3], #16
   161ec:	str	r2, [r3]
   161f0:	cmp	r1, #0
   161f4:	beq	16cc0 <argp_parse@@Base+0xbf8>
   161f8:	ldr	r1, [pc, #3392]	; 16f40 <argp_parse@@Base+0xe78>
   161fc:	add	r2, r3, #32
   16200:	str	r1, [r3, #16]
   16204:	mov	r3, #0
   16208:	mov	r7, r4
   1620c:	str	r6, [fp, #-228]	; 0xffffff1c
   16210:	sub	r4, fp, #196	; 0xc4
   16214:	str	r3, [fp, #-224]	; 0xffffff20
   16218:	str	r3, [fp, #-220]	; 0xffffff24
   1621c:	str	r3, [fp, #-216]	; 0xffffff28
   16220:	str	r3, [r2]
   16224:	str	r3, [r4, #8]
   16228:	str	r3, [r4, #12]
   1622c:	str	r3, [r4, #16]
   16230:	str	r3, [r4, #20]
   16234:	str	r3, [r4, #24]
   16238:	str	r3, [r4, #28]
   1623c:	str	r3, [r4, #32]
   16240:	sub	r1, fp, #228	; 0xe4
   16244:	mov	r0, r7
   16248:	bl	15b00 <daemon@@Base+0x2c>
   1624c:	ldr	r6, [fp, #-228]	; 0xffffff1c
   16250:	ldrd	r2, [fp, #-224]	; 0xffffff20
   16254:	ldr	r9, [fp, #-216]	; 0xffffff28
   16258:	add	r3, r3, #1
   1625c:	add	r2, r2, #1
   16260:	add	r3, r3, r3, lsl #3
   16264:	lsl	r9, r9, #2
   16268:	lsl	r3, r3, #2
   1626c:	add	sl, r9, r3
   16270:	add	r2, sl, r2, lsl #4
   16274:	str	r2, [fp, #-236]	; 0xffffff14
   16278:	str	r3, [fp, #-240]	; 0xffffff10
   1627c:	ldr	r3, [fp, #-236]	; 0xffffff14
   16280:	add	r0, r6, r3
   16284:	add	r0, r0, #1
   16288:	bl	17794 <argp_parse@@Base+0x16cc>
   1628c:	cmp	r0, #0
   16290:	mov	r6, r0
   16294:	str	r0, [fp, #-40]	; 0xffffffd8
   16298:	moveq	r5, #12
   1629c:	ldr	r3, [fp, #-240]	; 0xffffff10
   162a0:	beq	167c0 <argp_parse@@Base+0x6f8>
   162a4:	mov	r2, r9
   162a8:	mov	r1, #1
   162ac:	ldrd	r8, [r4, #8]
   162b0:	add	ip, r0, sl
   162b4:	add	r3, r0, r3
   162b8:	str	r0, [fp, #-112]	; 0xffffff90
   162bc:	ldr	lr, [fp, #-236]	; 0xffffff14
   162c0:	str	r1, [fp, #-196]	; 0xffffff3c
   162c4:	str	r1, [fp, #-192]	; 0xffffff40
   162c8:	str	ip, [fp, #-240]	; 0xffffff10
   162cc:	strd	r8, [fp, #-140]	; 0xffffff74
   162d0:	ldrd	r8, [r4, #16]
   162d4:	add	sl, r0, lr
   162d8:	str	r3, [fp, #-104]	; 0xffffff98
   162dc:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   162e0:	strd	r8, [fp, #-252]	; 0xffffff04
   162e4:	ldrd	r8, [r4, #24]
   162e8:	str	sl, [fp, #-156]	; 0xffffff64
   162ec:	strd	r0, [fp, #-148]	; 0xffffff6c
   162f0:	mov	r0, r3
   162f4:	sub	r3, fp, #260	; 0x104
   162f8:	str	ip, [fp, #-152]	; 0xffffff68
   162fc:	mov	r1, #0
   16300:	ldr	ip, [r4, #32]
   16304:	strd	r8, [r3]
   16308:	ldrd	r8, [fp, #-252]	; 0xffffff04
   1630c:	strd	r8, [fp, #-132]	; 0xffffff7c
   16310:	ldrd	r8, [r3]
   16314:	str	ip, [fp, #-116]	; 0xffffff8c
   16318:	strd	r8, [fp, #-124]	; 0xffffff84
   1631c:	bl	11a54 <memset@plt>
   16320:	ldr	ip, [fp, #-240]	; 0xffffff10
   16324:	sub	r2, fp, #160	; 0xa0
   16328:	tst	r5, #8
   1632c:	str	r2, [fp, #-212]	; 0xffffff2c
   16330:	str	sl, [fp, #-208]	; 0xffffff30
   16334:	str	r0, [fp, #-200]	; 0xffffff38
   16338:	str	ip, [fp, #-204]	; 0xffffff34
   1633c:	bne	167e0 <argp_parse@@Base+0x718>
   16340:	ands	r3, r5, #4
   16344:	cmp	r3, #0
   16348:	moveq	r3, sl
   1634c:	beq	16360 <argp_parse@@Base+0x298>
   16350:	add	r3, sl, #1
   16354:	mov	r2, #43	; 0x2b
   16358:	str	r3, [fp, #-208]	; 0xffffff30
   1635c:	strb	r2, [sl]
   16360:	ldr	r2, [fp, #-204]	; 0xffffff34
   16364:	mov	r4, #0
   16368:	cmp	r7, r4
   1636c:	strb	r4, [r3]
   16370:	str	r4, [r2]
   16374:	str	r7, [fp, #-160]	; 0xffffff60
   16378:	beq	169c8 <argp_parse@@Base+0x900>
   1637c:	sub	ip, fp, #212	; 0xd4
   16380:	mov	r2, r4
   16384:	ldr	r3, [fp, #-112]	; 0xffffff90
   16388:	mov	r1, r4
   1638c:	mov	r0, r7
   16390:	str	ip, [sp]
   16394:	bl	15db8 <daemon@@Base+0x2e4>
   16398:	movw	r1, #58288	; 0xe3b0
   1639c:	movt	r1, #2
   163a0:	ldr	r6, [fp, #-232]	; 0xffffff18
   163a4:	movw	r2, #58292	; 0xe3b4
   163a8:	movt	r2, #2
   163ac:	str	r0, [fp, #-108]	; 0xffffff94
   163b0:	mov	lr, #1
   163b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   163b8:	ldr	ip, [r1]
   163bc:	str	lr, [fp, #-100]	; 0xffffff9c
   163c0:	ldr	r1, [fp, #-244]	; 0xffffff0c
   163c4:	cmp	r0, r3
   163c8:	mov	r0, #0
   163cc:	ldr	r2, [r2]
   163d0:	movls	r3, r6
   163d4:	ldr	lr, [fp, #-160]	; 0xffffff60
   163d8:	str	ip, [fp, #-52]	; 0xffffffcc
   163dc:	str	r1, [fp, #-92]	; 0xffffffa4
   163e0:	mov	r1, #0
   163e4:	str	r2, [fp, #-48]	; 0xffffffd0
   163e8:	sub	r2, fp, #160	; 0xa0
   163ec:	str	lr, [fp, #-96]	; 0xffffffa0
   163f0:	str	r6, [fp, #-88]	; 0xffffffa8
   163f4:	strd	r4, [fp, #-84]	; 0xffffffac
   163f8:	strd	r0, [fp, #-76]	; 0xffffffb4
   163fc:	strd	r0, [fp, #-68]	; 0xffffffbc
   16400:	strd	r0, [fp, #-60]	; 0xffffffc4
   16404:	str	r2, [fp, #-44]	; 0xffffffd4
   16408:	bls	164f0 <argp_parse@@Base+0x428>
   1640c:	mov	r6, #3
   16410:	movt	r6, #256	; 0x100
   16414:	ldr	r8, [fp, #-232]	; 0xffffff18
   16418:	add	r4, r3, #36	; 0x24
   1641c:	ldr	r2, [fp, #8]
   16420:	str	r2, [r3, #24]
   16424:	b	16470 <argp_parse@@Base+0x3a8>
   16428:	ldr	lr, [r4, #-24]	; 0xffffffe8
   1642c:	ldr	ip, [r4, #-4]
   16430:	str	ip, [fp, #-60]	; 0xffffffc4
   16434:	ldr	ip, [r4, #-12]
   16438:	str	ip, [fp, #-68]	; 0xffffffbc
   1643c:	ldr	ip, [r4, #-8]
   16440:	str	lr, [fp, #-76]	; 0xffffffb4
   16444:	str	ip, [fp, #-64]	; 0xffffffc0
   16448:	blx	r3
   1644c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16450:	str	r3, [r4, #-4]
   16454:	ldr	r3, [fp, #-108]	; 0xffffff94
   16458:	cmp	r4, r3
   1645c:	bcs	16a7c <argp_parse@@Base+0x9b4>
   16460:	cmp	r0, #7
   16464:	cmpne	r0, #0
   16468:	bne	16a6c <argp_parse@@Base+0x9a4>
   1646c:	add	r4, r4, #36	; 0x24
   16470:	ldr	r3, [r4, #-20]	; 0xffffffec
   16474:	mov	r1, #0
   16478:	sub	r2, fp, #96	; 0x60
   1647c:	mov	r0, r6
   16480:	cmp	r3, r1
   16484:	beq	16498 <argp_parse@@Base+0x3d0>
   16488:	ldr	ip, [r4, #-16]
   1648c:	ldr	r3, [r3, #28]
   16490:	ldr	r3, [r3, ip, lsl #2]
   16494:	str	r3, [r4, #-12]
   16498:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1649c:	cmp	r3, #0
   164a0:	bne	16428 <argp_parse@@Base+0x360>
   164a4:	ldr	r3, [r4, #-32]	; 0xffffffe0
   164a8:	ldr	r3, [r3, #16]
   164ac:	cmp	r3, #0
   164b0:	beq	164d8 <argp_parse@@Base+0x410>
   164b4:	ldr	r3, [r3]
   164b8:	cmp	r3, #0
   164bc:	beq	164d8 <argp_parse@@Base+0x410>
   164c0:	ldr	ip, [r4, #-12]
   164c4:	ldr	r3, [r4, #-8]
   164c8:	str	ip, [r3]
   164cc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   164d0:	cmp	r3, #0
   164d4:	bne	16428 <argp_parse@@Base+0x360>
   164d8:	ldr	r3, [fp, #-108]	; 0xffffff94
   164dc:	cmp	r4, r3
   164e0:	bcc	1646c <argp_parse@@Base+0x3a4>
   164e4:	str	r8, [fp, #-232]	; 0xffffff18
   164e8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   164ec:	ldr	r5, [fp, #-80]	; 0xffffffb0
   164f0:	tst	r5, #2
   164f4:	beq	16a3c <argp_parse@@Base+0x974>
   164f8:	mov	r2, #0
   164fc:	ldr	r4, [fp, #-92]	; 0xffffffa4
   16500:	tst	r5, #1
   16504:	subne	r3, r3, #4
   16508:	str	r2, [fp, #-144]	; 0xffffff70
   1650c:	ldr	r2, [fp, #-232]	; 0xffffff18
   16510:	strne	r3, [fp, #-88]	; 0xffffffa8
   16514:	addne	r4, r4, #1
   16518:	strne	r4, [fp, #-92]	; 0xffffffa4
   1651c:	cmp	r2, r3
   16520:	beq	16a54 <argp_parse@@Base+0x98c>
   16524:	movw	r3, #58280	; 0xe3a8
   16528:	movt	r3, #2
   1652c:	ldr	r3, [r3]
   16530:	str	r3, [fp, #-56]	; 0xffffffc8
   16534:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16538:	movw	r3, #53100	; 0xcf6c
   1653c:	movt	r3, #1
   16540:	mov	r9, #6
   16544:	movt	r9, #256	; 0x100
   16548:	ldr	r7, [fp, #-84]	; 0xffffffac
   1654c:	mov	r0, r4
   16550:	str	r3, [fp, #-232]	; 0xffffff18
   16554:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16558:	cmp	r3, #0
   1655c:	beq	16644 <argp_parse@@Base+0x57c>
   16560:	cmp	r3, r7
   16564:	movgt	r3, #0
   16568:	strgt	r3, [fp, #-72]	; 0xffffffb8
   1656c:	bgt	16644 <argp_parse@@Base+0x57c>
   16570:	cmp	r0, r7
   16574:	ble	1688c <argp_parse@@Base+0x7c4>
   16578:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1657c:	tst	r3, #4
   16580:	bne	16aa0 <argp_parse@@Base+0x9d8>
   16584:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16588:	ldr	sl, [r3, r7, lsl #2]
   1658c:	str	sl, [fp, #-136]	; 0xffffff78
   16590:	ldr	r8, [fp, #-112]	; 0xffffff90
   16594:	str	r7, [fp, #-84]	; 0xffffffac
   16598:	ldr	ip, [fp, #-108]	; 0xffffff94
   1659c:	cmp	r8, ip
   165a0:	bcs	16884 <argp_parse@@Base+0x7bc>
   165a4:	mov	lr, r7
   165a8:	add	r4, r8, #36	; 0x24
   165ac:	ldr	r3, [r4, #-36]	; 0xffffffdc
   165b0:	mov	r0, #0
   165b4:	add	r6, lr, #1
   165b8:	sub	r2, fp, #96	; 0x60
   165bc:	mov	r1, sl
   165c0:	sub	r5, r4, #36	; 0x24
   165c4:	mov	r8, r4
   165c8:	str	r6, [fp, #-84]	; 0xffffffac
   165cc:	cmp	r3, r0
   165d0:	beq	16870 <argp_parse@@Base+0x7a8>
   165d4:	ldr	lr, [r4, #-24]	; 0xffffffe8
   165d8:	ldr	ip, [r4, #-4]
   165dc:	str	ip, [fp, #-60]	; 0xffffffc4
   165e0:	ldr	ip, [r4, #-12]
   165e4:	str	ip, [fp, #-68]	; 0xffffffbc
   165e8:	ldr	ip, [r4, #-8]
   165ec:	str	lr, [fp, #-76]	; 0xffffffb4
   165f0:	str	ip, [fp, #-64]	; 0xffffffc0
   165f4:	blx	r3
   165f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   165fc:	cmp	r0, #7
   16600:	str	r3, [r4, #-4]
   16604:	beq	167f8 <argp_parse@@Base+0x730>
   16608:	cmp	r0, #0
   1660c:	bne	16940 <argp_parse@@Base+0x878>
   16610:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16614:	ldr	r3, [fp, #-84]	; 0xffffffac
   16618:	cmp	r7, r3
   1661c:	bge	16958 <argp_parse@@Base+0x890>
   16620:	ldr	r1, [r4, #-24]	; 0xffffffe8
   16624:	sub	ip, r3, r7
   16628:	mov	r7, r3
   1662c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16630:	add	r3, r1, ip
   16634:	str	r3, [r4, #-24]	; 0xffffffe8
   16638:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1663c:	cmp	r3, #0
   16640:	bne	16560 <argp_parse@@Base+0x498>
   16644:	cmp	r2, #0
   16648:	beq	16570 <argp_parse@@Base+0x4a8>
   1664c:	mvn	r2, #0
   16650:	str	r7, [fp, #-148]	; 0xffffff6c
   16654:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16658:	str	r2, [fp, #-140]	; 0xffffff74
   1665c:	ldr	r2, [fp, #-156]	; 0xffffff64
   16660:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16664:	ands	ip, r3, #64	; 0x40
   16668:	ldr	r3, [fp, #-152]	; 0xffffff68
   1666c:	beq	1696c <argp_parse@@Base+0x8a4>
   16670:	mov	ip, #0
   16674:	sub	lr, fp, #148	; 0x94
   16678:	stm	sp, {ip, lr}
   1667c:	bl	1719c <argp_parse@@Base+0x10d4>
   16680:	ldr	r7, [fp, #-148]	; 0xffffff6c
   16684:	mov	r4, r0
   16688:	cmn	r4, #1
   1668c:	str	r7, [fp, #-84]	; 0xffffffac
   16690:	beq	16990 <argp_parse@@Base+0x8c8>
   16694:	cmp	r4, #63	; 0x3f
   16698:	beq	166b0 <argp_parse@@Base+0x5e8>
   1669c:	cmp	r4, #1
   166a0:	bne	16c34 <argp_parse@@Base+0xb6c>
   166a4:	sub	r7, r7, #1
   166a8:	ldr	sl, [fp, #-136]	; 0xffffff78
   166ac:	b	16590 <argp_parse@@Base+0x4c8>
   166b0:	ldr	r3, [fp, #-140]	; 0xffffff74
   166b4:	cmn	r3, #1
   166b8:	beq	16b6c <argp_parse@@Base+0xaa4>
   166bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   166c0:	sub	r7, fp, #96	; 0x60
   166c4:	mov	r0, r7
   166c8:	mov	r2, #260	; 0x104
   166cc:	mov	r5, #7
   166d0:	bl	1ab9c <argp_state_help@@Base>
   166d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   166d8:	ldr	ip, [fp, #-108]	; 0xffffff94
   166dc:	cmp	r3, ip
   166e0:	mov	r4, r3
   166e4:	bcs	16ed0 <argp_parse@@Base+0xe08>
   166e8:	mov	r6, #5
   166ec:	movt	r6, #256	; 0x100
   166f0:	ldr	r3, [r4]
   166f4:	mov	r1, #0
   166f8:	sub	r2, fp, #96	; 0x60
   166fc:	mov	r0, r6
   16700:	cmp	r3, r1
   16704:	beq	16738 <argp_parse@@Base+0x670>
   16708:	ldr	lr, [r4, #12]
   1670c:	ldr	ip, [r4, #32]
   16710:	str	ip, [fp, #-60]	; 0xffffffc4
   16714:	ldr	ip, [r4, #24]
   16718:	str	ip, [fp, #-68]	; 0xffffffbc
   1671c:	ldr	ip, [r4, #28]
   16720:	str	lr, [fp, #-76]	; 0xffffffb4
   16724:	str	ip, [fp, #-64]	; 0xffffffc0
   16728:	blx	r3
   1672c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16730:	str	r3, [r4, #32]
   16734:	ldr	ip, [fp, #-108]	; 0xffffff94
   16738:	add	r4, r4, #36	; 0x24
   1673c:	cmp	r4, ip
   16740:	bcc	166f0 <argp_parse@@Base+0x628>
   16744:	ldr	r3, [fp, #-112]	; 0xffffff90
   16748:	sub	r4, ip, #36	; 0x24
   1674c:	cmp	r4, r3
   16750:	bcc	167b0 <argp_parse@@Base+0x6e8>
   16754:	mov	r7, #7
   16758:	movt	r7, #256	; 0x100
   1675c:	ldr	r6, [r4]
   16760:	mov	r1, #0
   16764:	sub	r2, fp, #96	; 0x60
   16768:	mov	r0, r7
   1676c:	cmp	r6, r1
   16770:	beq	167a4 <argp_parse@@Base+0x6dc>
   16774:	ldr	ip, [r4, #12]
   16778:	ldr	r3, [r4, #32]
   1677c:	str	r3, [fp, #-60]	; 0xffffffc4
   16780:	ldr	r3, [r4, #24]
   16784:	str	r3, [fp, #-68]	; 0xffffffbc
   16788:	ldr	r3, [r4, #28]
   1678c:	str	ip, [fp, #-76]	; 0xffffffb4
   16790:	str	r3, [fp, #-64]	; 0xffffffc0
   16794:	blx	r6
   16798:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1679c:	str	r3, [r4, #32]
   167a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   167a4:	sub	r4, r4, #36	; 0x24
   167a8:	cmp	r4, r3
   167ac:	bcs	1675c <argp_parse@@Base+0x694>
   167b0:	cmp	r5, #7
   167b4:	moveq	r5, #22
   167b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   167bc:	bl	170ac <argp_parse@@Base+0xfe4>
   167c0:	mov	r0, r5
   167c4:	sub	sp, fp, #32
   167c8:	ldrd	r4, [sp]
   167cc:	ldrd	r6, [sp, #8]
   167d0:	ldrd	r8, [sp, #16]
   167d4:	ldrd	sl, [sp, #24]
   167d8:	add	sp, sp, #32
   167dc:	pop	{pc}		; (ldr pc, [sp], #4)
   167e0:	ldr	lr, [fp, #-236]	; 0xffffff14
   167e4:	add	r3, sl, #1
   167e8:	mov	r2, #45	; 0x2d
   167ec:	str	r3, [fp, #-208]	; 0xffffff30
   167f0:	strb	r2, [r6, lr]
   167f4:	b	16360 <argp_parse@@Base+0x298>
   167f8:	ldr	lr, [fp, #-84]	; 0xffffffac
   167fc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   16800:	sub	lr, lr, #1
   16804:	cmp	r3, #0
   16808:	str	lr, [fp, #-84]	; 0xffffffac
   1680c:	beq	16f0c <argp_parse@@Base+0xe44>
   16810:	ldr	r6, [r5, #12]
   16814:	sub	r2, fp, #96	; 0x60
   16818:	mov	r1, #0
   1681c:	mov	r0, r9
   16820:	ldr	ip, [r5, #24]
   16824:	ldr	lr, [r5, #32]
   16828:	str	ip, [fp, #-68]	; 0xffffffbc
   1682c:	ldr	ip, [r5, #28]
   16830:	str	r6, [fp, #-76]	; 0xffffffb4
   16834:	str	ip, [fp, #-64]	; 0xffffffc0
   16838:	str	lr, [fp, #-60]	; 0xffffffc4
   1683c:	blx	r3
   16840:	ldr	ip, [fp, #-108]	; 0xffffff94
   16844:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16848:	cmp	ip, r4
   1684c:	movls	r2, #0
   16850:	movhi	r2, #1
   16854:	cmp	r0, #7
   16858:	str	r3, [r5, #32]
   1685c:	movne	r2, #0
   16860:	cmp	r2, #0
   16864:	beq	16f14 <argp_parse@@Base+0xe4c>
   16868:	ldr	lr, [fp, #-84]	; 0xffffffac
   1686c:	b	165a8 <argp_parse@@Base+0x4e0>
   16870:	str	lr, [fp, #-84]	; 0xffffffac
   16874:	add	r3, r4, #36	; 0x24
   16878:	cmp	ip, r4
   1687c:	mov	r4, r3
   16880:	bhi	165ac <argp_parse@@Base+0x4e4>
   16884:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16888:	ldr	r7, [fp, #-84]	; 0xffffffac
   1688c:	cmp	r7, r0
   16890:	bne	16aa0 <argp_parse@@Base+0x9d8>
   16894:	ldr	r4, [fp, #-112]	; 0xffffff90
   16898:	ldr	ip, [fp, #-108]	; 0xffffff94
   1689c:	mov	r3, r4
   168a0:	cmp	r4, ip
   168a4:	bcs	16ee0 <argp_parse@@Base+0xe18>
   168a8:	mov	r6, #2
   168ac:	movt	r6, #256	; 0x100
   168b0:	mov	r5, #0
   168b4:	b	168fc <argp_parse@@Base+0x834>
   168b8:	ldr	ip, [r4, #-4]
   168bc:	str	ip, [fp, #-60]	; 0xffffffc4
   168c0:	ldr	ip, [r4, #-12]
   168c4:	str	ip, [fp, #-68]	; 0xffffffbc
   168c8:	ldr	ip, [r4, #-8]
   168cc:	str	r3, [fp, #-76]	; 0xffffffb4
   168d0:	str	ip, [fp, #-64]	; 0xffffffc0
   168d4:	blx	r5
   168d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   168dc:	mov	r5, r0
   168e0:	str	r3, [r4, #-4]
   168e4:	ldr	ip, [fp, #-108]	; 0xffffff94
   168e8:	cmp	ip, r4
   168ec:	bls	16db4 <argp_parse@@Base+0xcec>
   168f0:	cmp	r5, #7
   168f4:	cmpne	r5, #0
   168f8:	bne	16d7c <argp_parse@@Base+0xcb4>
   168fc:	ldr	r3, [r4, #12]
   16900:	sub	r2, fp, #96	; 0x60
   16904:	mov	r0, r6
   16908:	add	r4, r4, #36	; 0x24
   1690c:	subs	r1, r3, #0
   16910:	bne	168e8 <argp_parse@@Base+0x820>
   16914:	ldr	r5, [r4, #-36]	; 0xffffffdc
   16918:	cmp	r5, #0
   1691c:	bne	168b8 <argp_parse@@Base+0x7f0>
   16920:	cmp	r4, ip
   16924:	mov	r5, #7
   16928:	bcc	168fc <argp_parse@@Base+0x834>
   1692c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16930:	sub	r4, ip, #36	; 0x24
   16934:	cmp	r4, r3
   16938:	bcs	16dd0 <argp_parse@@Base+0xd08>
   1693c:	b	16e54 <argp_parse@@Base+0xd8c>
   16940:	mov	r5, r0
   16944:	cmp	r5, #7
   16948:	bne	166d4 <argp_parse@@Base+0x60c>
   1694c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16950:	sub	r7, fp, #96	; 0x60
   16954:	b	166c4 <argp_parse@@Base+0x5fc>
   16958:	mov	r1, #1
   1695c:	mov	r7, r3
   16960:	mov	r2, r1
   16964:	str	r1, [fp, #-100]	; 0xffffff9c
   16968:	b	16554 <argp_parse@@Base+0x48c>
   1696c:	str	ip, [sp]
   16970:	sub	ip, fp, #148	; 0x94
   16974:	str	ip, [sp, #4]
   16978:	bl	17134 <argp_parse@@Base+0x106c>
   1697c:	ldr	r7, [fp, #-148]	; 0xffffff6c
   16980:	mov	r4, r0
   16984:	cmn	r4, #1
   16988:	str	r7, [fp, #-84]	; 0xffffffac
   1698c:	bne	16694 <argp_parse@@Base+0x5cc>
   16990:	mov	r3, #0
   16994:	cmp	r7, #1
   16998:	str	r3, [fp, #-100]	; 0xffffff9c
   1699c:	ble	16a74 <argp_parse@@Base+0x9ac>
   169a0:	sub	r3, r7, #-1073741823	; 0xc0000001
   169a4:	ldr	r1, [fp, #-232]	; 0xffffff18
   169a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   169ac:	ldr	r0, [r2, r3, lsl #2]
   169b0:	bl	11754 <strcmp@plt>
   169b4:	cmp	r0, #0
   169b8:	bne	16a74 <argp_parse@@Base+0x9ac>
   169bc:	str	r7, [fp, #-72]	; 0xffffffb8
   169c0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   169c4:	b	16570 <argp_parse@@Base+0x4a8>
   169c8:	ldr	r2, [fp, #-244]	; 0xffffff0c
   169cc:	movw	r3, #58288	; 0xe3b0
   169d0:	movt	r3, #2
   169d4:	mov	r0, #1
   169d8:	tst	r5, #2
   169dc:	ldr	r1, [r3]
   169e0:	movw	r3, #58292	; 0xe3b4
   169e4:	movt	r3, #2
   169e8:	str	r0, [fp, #-100]	; 0xffffff9c
   169ec:	mov	r0, #0
   169f0:	ldr	ip, [fp, #-232]	; 0xffffff18
   169f4:	str	r7, [fp, #-96]	; 0xffffffa0
   169f8:	str	r2, [fp, #-92]	; 0xffffffa4
   169fc:	ldr	r2, [r3]
   16a00:	ldr	r3, [fp, #-112]	; 0xffffff90
   16a04:	str	r1, [fp, #-52]	; 0xffffffcc
   16a08:	mov	r1, #0
   16a0c:	str	r2, [fp, #-48]	; 0xffffffd0
   16a10:	str	r3, [fp, #-108]	; 0xffffff94
   16a14:	sub	r3, fp, #160	; 0xa0
   16a18:	str	ip, [fp, #-88]	; 0xffffffa8
   16a1c:	str	r7, [fp, #-84]	; 0xffffffac
   16a20:	str	r5, [fp, #-80]	; 0xffffffb0
   16a24:	strd	r0, [fp, #-76]	; 0xffffffb4
   16a28:	strd	r0, [fp, #-68]	; 0xffffffbc
   16a2c:	strd	r0, [fp, #-60]	; 0xffffffc4
   16a30:	str	r3, [fp, #-44]	; 0xffffffd4
   16a34:	mov	r3, ip
   16a38:	bne	164f8 <argp_parse@@Base+0x430>
   16a3c:	mov	r2, #1
   16a40:	ldr	r4, [fp, #-92]	; 0xffffffa4
   16a44:	str	r2, [fp, #-144]	; 0xffffff70
   16a48:	ldr	r2, [fp, #-232]	; 0xffffff18
   16a4c:	cmp	r2, r3
   16a50:	bne	16524 <argp_parse@@Base+0x45c>
   16a54:	ldr	r0, [r2]
   16a58:	cmp	r0, #0
   16a5c:	beq	16524 <argp_parse@@Base+0x45c>
   16a60:	bl	16ff4 <argp_parse@@Base+0xf2c>
   16a64:	str	r0, [fp, #-56]	; 0xffffffc8
   16a68:	b	16534 <argp_parse@@Base+0x46c>
   16a6c:	mov	r5, r0
   16a70:	b	167c0 <argp_parse@@Base+0x6f8>
   16a74:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16a78:	b	16570 <argp_parse@@Base+0x4a8>
   16a7c:	cmp	r0, #7
   16a80:	mov	r5, r0
   16a84:	str	r8, [fp, #-232]	; 0xffffff18
   16a88:	beq	164e8 <argp_parse@@Base+0x420>
   16a8c:	cmp	r0, #0
   16a90:	bne	167c0 <argp_parse@@Base+0x6f8>
   16a94:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16a98:	ldr	r5, [fp, #-80]	; 0xffffffb0
   16a9c:	b	164f0 <argp_parse@@Base+0x428>
   16aa0:	ldr	r3, [fp, #4]
   16aa4:	cmp	r3, #0
   16aa8:	beq	16be8 <argp_parse@@Base+0xb20>
   16aac:	str	r7, [r3]
   16ab0:	ldr	r3, [fp, #-112]	; 0xffffff90
   16ab4:	ldr	ip, [fp, #-108]	; 0xffffff94
   16ab8:	sub	r2, ip, #36	; 0x24
   16abc:	cmp	r3, r2
   16ac0:	movls	r6, #4
   16ac4:	subls	r4, ip, #72	; 0x48
   16ac8:	movtls	r6, #256	; 0x100
   16acc:	bhi	16cfc <argp_parse@@Base+0xc34>
   16ad0:	ldr	r5, [r4, #36]	; 0x24
   16ad4:	mov	r1, #0
   16ad8:	sub	r2, fp, #96	; 0x60
   16adc:	mov	r0, r6
   16ae0:	cmp	r5, r1
   16ae4:	beq	16c20 <argp_parse@@Base+0xb58>
   16ae8:	ldr	ip, [r4, #48]	; 0x30
   16aec:	ldr	r3, [r4, #68]	; 0x44
   16af0:	str	r3, [fp, #-60]	; 0xffffffc4
   16af4:	ldr	r3, [r4, #60]	; 0x3c
   16af8:	str	r3, [fp, #-68]	; 0xffffffbc
   16afc:	ldr	r3, [r4, #64]	; 0x40
   16b00:	str	ip, [fp, #-76]	; 0xffffffb4
   16b04:	str	r3, [fp, #-64]	; 0xffffffc0
   16b08:	blx	r5
   16b0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16b10:	str	r3, [r4, #68]	; 0x44
   16b14:	ldr	r3, [fp, #-112]	; 0xffffff90
   16b18:	cmp	r3, r4
   16b1c:	sub	r4, r4, #36	; 0x24
   16b20:	bhi	16cdc <argp_parse@@Base+0xc14>
   16b24:	cmp	r0, #7
   16b28:	cmpne	r0, #0
   16b2c:	beq	16ad0 <argp_parse@@Base+0xa08>
   16b30:	ldr	ip, [fp, #-108]	; 0xffffff94
   16b34:	mov	r5, r0
   16b38:	sub	r4, ip, #36	; 0x24
   16b3c:	cmp	r4, r3
   16b40:	bcs	16754 <argp_parse@@Base+0x68c>
   16b44:	b	167b8 <argp_parse@@Base+0x6f0>
   16b48:	ldr	r2, [fp, #-232]	; 0xffffff18
   16b4c:	ldr	r2, [r2]
   16b50:	str	r2, [r3]
   16b54:	b	16110 <argp_parse@@Base+0x48>
   16b58:	ldr	r3, [fp, #-232]	; 0xffffff18
   16b5c:	ldr	r0, [r3]
   16b60:	bl	16ff4 <argp_parse@@Base+0xf2c>
   16b64:	str	r0, [r4]
   16b68:	b	16124 <argp_parse@@Base+0x5c>
   16b6c:	mov	r1, r4
   16b70:	ldr	r0, [fp, #-156]	; 0xffffff64
   16b74:	bl	119f4 <strchr@plt>
   16b78:	cmp	r0, #0
   16b7c:	beq	16bb8 <argp_parse@@Base+0xaf0>
   16b80:	ldr	r5, [fp, #-112]	; 0xffffff90
   16b84:	ldr	r2, [fp, #-108]	; 0xffffff94
   16b88:	cmp	r5, r2
   16b8c:	bcs	16bb8 <argp_parse@@Base+0xaf0>
   16b90:	ldr	r3, [r5, #8]
   16b94:	cmp	r3, r0
   16b98:	bls	16bac <argp_parse@@Base+0xae4>
   16b9c:	b	16e70 <argp_parse@@Base+0xda8>
   16ba0:	ldr	r3, [r5, #8]
   16ba4:	cmp	r0, r3
   16ba8:	bcc	16e70 <argp_parse@@Base+0xda8>
   16bac:	add	r5, r5, #36	; 0x24
   16bb0:	cmp	r5, r2
   16bb4:	bcc	16ba0 <argp_parse@@Base+0xad8>
   16bb8:	sub	r7, fp, #96	; 0x60
   16bbc:	mov	r2, r4
   16bc0:	add	r4, r4, #1
   16bc4:	ldr	r3, [pc, #888]	; 16f44 <argp_parse@@Base+0xe7c>
   16bc8:	movw	r1, #53104	; 0xcf70
   16bcc:	movt	r1, #1
   16bd0:	mov	r0, r7
   16bd4:	bic	r4, r4, #2
   16bd8:	bl	1ac5c <argp_error@@Base>
   16bdc:	cmp	r4, #0
   16be0:	bne	16c18 <argp_parse@@Base+0xb50>
   16be4:	b	16884 <argp_parse@@Base+0x7bc>
   16be8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16bec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16bf0:	tst	r3, #2
   16bf4:	bne	16950 <argp_parse@@Base+0x888>
   16bf8:	cmp	r1, #0
   16bfc:	beq	16950 <argp_parse@@Base+0x888>
   16c00:	mov	r0, r1
   16c04:	movw	r1, #53124	; 0xcf84
   16c08:	movt	r1, #1
   16c0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16c10:	sub	r7, fp, #96	; 0x60
   16c14:	bl	11a0c <fprintf@plt>
   16c18:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16c1c:	b	166c4 <argp_parse@@Base+0x5fc>
   16c20:	cmp	r4, r3
   16c24:	sub	r4, r4, #36	; 0x24
   16c28:	bcs	16ad0 <argp_parse@@Base+0xa08>
   16c2c:	mov	r5, #7
   16c30:	b	16ce0 <argp_parse@@Base+0xc18>
   16c34:	asrs	r8, r4, #24
   16c38:	beq	16b6c <argp_parse@@Base+0xaa4>
   16c3c:	add	r3, r8, r8, lsl #3
   16c40:	ldr	r5, [fp, #-112]	; 0xffffff90
   16c44:	ands	r2, r4, #8388608	; 0x800000
   16c48:	movne	r2, #-16777216	; 0xff000000
   16c4c:	bic	r0, r4, #-16777216	; 0xff000000
   16c50:	lsl	r3, r3, #2
   16c54:	orr	r0, r0, r2
   16c58:	sub	r3, r3, #36	; 0x24
   16c5c:	ldr	r6, [r5, r3]
   16c60:	add	r5, r5, r3
   16c64:	cmp	r6, #0
   16c68:	beq	16ed8 <argp_parse@@Base+0xe10>
   16c6c:	add	r1, r5, #24
   16c70:	ldr	lr, [r5, #12]
   16c74:	sub	r7, fp, #96	; 0x60
   16c78:	ldm	r1, {r1, r3, ip}
   16c7c:	mov	r2, r7
   16c80:	str	lr, [fp, #-76]	; 0xffffffb4
   16c84:	str	r1, [fp, #-68]	; 0xffffffbc
   16c88:	str	r3, [fp, #-64]	; 0xffffffc0
   16c8c:	str	ip, [fp, #-60]	; 0xffffffc4
   16c90:	ldr	r1, [fp, #-136]	; 0xffffff78
   16c94:	blx	r6
   16c98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16c9c:	str	r3, [r5, #32]
   16ca0:	cmp	r0, #7
   16ca4:	beq	16d04 <argp_parse@@Base+0xc3c>
   16ca8:	cmp	r0, #0
   16cac:	bne	16940 <argp_parse@@Base+0x878>
   16cb0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16cb4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16cb8:	ldr	r7, [fp, #-84]	; 0xffffffac
   16cbc:	b	16554 <argp_parse@@Base+0x48c>
   16cc0:	movw	r2, #58544	; 0xe4b0
   16cc4:	movt	r2, #2
   16cc8:	ldr	r2, [r2]
   16ccc:	cmp	r2, #0
   16cd0:	addeq	r2, r3, #16
   16cd4:	bne	161f8 <argp_parse@@Base+0x130>
   16cd8:	b	16204 <argp_parse@@Base+0x13c>
   16cdc:	mov	r5, r0
   16ce0:	ldr	ip, [fp, #-108]	; 0xffffff94
   16ce4:	cmp	r5, #7
   16ce8:	sub	r4, ip, #36	; 0x24
   16cec:	bne	16b3c <argp_parse@@Base+0xa74>
   16cf0:	cmp	r4, r3
   16cf4:	movcs	r5, #0
   16cf8:	bcs	16754 <argp_parse@@Base+0x68c>
   16cfc:	mov	r5, #0
   16d00:	b	167b8 <argp_parse@@Base+0x6f0>
   16d04:	cmp	r8, #0
   16d08:	beq	16bbc <argp_parse@@Base+0xaf4>
   16d0c:	ldr	r3, [fp, #-152]	; 0xffffff68
   16d10:	ldr	r2, [r3]
   16d14:	ldr	r1, [r3, #12]
   16d18:	cmp	r4, r1
   16d1c:	bne	16d38 <argp_parse@@Base+0xc70>
   16d20:	b	16d68 <argp_parse@@Base+0xca0>
   16d24:	add	r3, r3, #16
   16d28:	ldr	r2, [r3]
   16d2c:	ldr	r1, [r3, #12]
   16d30:	cmp	r4, r1
   16d34:	beq	16d68 <argp_parse@@Base+0xca0>
   16d38:	cmp	r2, #0
   16d3c:	bne	16d24 <argp_parse@@Base+0xc5c>
   16d40:	movw	r2, #53096	; 0xcf68
   16d44:	movt	r2, #1
   16d48:	movw	r1, #53112	; 0xcf78
   16d4c:	movt	r1, #1
   16d50:	ldr	r3, [pc, #492]	; 16f44 <argp_parse@@Base+0xe7c>
   16d54:	mov	r0, r7
   16d58:	add	r4, r4, #1
   16d5c:	bl	1ac5c <argp_error@@Base>
   16d60:	bic	r4, r4, #2
   16d64:	b	16bdc <argp_parse@@Base+0xb14>
   16d68:	movw	r3, #53096	; 0xcf68
   16d6c:	movt	r3, #1
   16d70:	cmp	r2, #0
   16d74:	moveq	r2, r3
   16d78:	b	16d48 <argp_parse@@Base+0xc80>
   16d7c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16d80:	sub	r2, ip, #36	; 0x24
   16d84:	cmp	r3, r2
   16d88:	bhi	16efc <argp_parse@@Base+0xe34>
   16d8c:	ldr	r2, [fp, #4]
   16d90:	cmp	r2, #0
   16d94:	beq	16da4 <argp_parse@@Base+0xcdc>
   16d98:	ldr	r2, [fp, #-84]	; 0xffffffac
   16d9c:	ldr	r1, [fp, #4]
   16da0:	str	r2, [r1]
   16da4:	cmp	r5, #0
   16da8:	bne	16944 <argp_parse@@Base+0x87c>
   16dac:	ldr	ip, [fp, #-108]	; 0xffffff94
   16db0:	b	16ab8 <argp_parse@@Base+0x9f0>
   16db4:	ldr	r3, [fp, #-112]	; 0xffffff90
   16db8:	sub	r4, ip, #36	; 0x24
   16dbc:	cmp	r4, r3
   16dc0:	bcc	16ec4 <argp_parse@@Base+0xdfc>
   16dc4:	cmp	r5, #7
   16dc8:	cmpne	r5, #0
   16dcc:	bne	16d8c <argp_parse@@Base+0xcc4>
   16dd0:	mov	r6, #1
   16dd4:	movt	r6, #256	; 0x100
   16dd8:	sub	r4, r4, #36	; 0x24
   16ddc:	ldr	r5, [r4, #36]	; 0x24
   16de0:	mov	r1, #0
   16de4:	sub	r2, fp, #96	; 0x60
   16de8:	mov	r0, r6
   16dec:	cmp	r5, r1
   16df0:	beq	16e44 <argp_parse@@Base+0xd7c>
   16df4:	ldr	ip, [r4, #48]	; 0x30
   16df8:	ldr	r3, [r4, #68]	; 0x44
   16dfc:	str	r3, [fp, #-60]	; 0xffffffc4
   16e00:	ldr	r3, [r4, #60]	; 0x3c
   16e04:	str	r3, [fp, #-68]	; 0xffffffbc
   16e08:	ldr	r3, [r4, #64]	; 0x40
   16e0c:	str	ip, [fp, #-76]	; 0xffffffb4
   16e10:	str	r3, [fp, #-64]	; 0xffffffc0
   16e14:	blx	r5
   16e18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16e1c:	str	r3, [r4, #68]	; 0x44
   16e20:	ldr	r3, [fp, #-112]	; 0xffffff90
   16e24:	cmp	r3, r4
   16e28:	sub	r4, r4, #36	; 0x24
   16e2c:	bhi	16ec0 <argp_parse@@Base+0xdf8>
   16e30:	cmp	r0, #7
   16e34:	cmpne	r0, #0
   16e38:	beq	16ddc <argp_parse@@Base+0xd14>
   16e3c:	mov	r5, r0
   16e40:	b	16d8c <argp_parse@@Base+0xcc4>
   16e44:	cmp	r3, r4
   16e48:	sub	r4, r4, #36	; 0x24
   16e4c:	bls	16ddc <argp_parse@@Base+0xd14>
   16e50:	ldr	ip, [fp, #-108]	; 0xffffff94
   16e54:	ldr	r2, [fp, #4]
   16e58:	cmp	r2, #0
   16e5c:	beq	16ab8 <argp_parse@@Base+0x9f0>
   16e60:	ldr	r2, [fp, #-84]	; 0xffffffac
   16e64:	ldr	r1, [fp, #4]
   16e68:	str	r2, [r1]
   16e6c:	b	16ab8 <argp_parse@@Base+0x9f0>
   16e70:	ldr	r3, [r5]
   16e74:	cmp	r3, #0
   16e78:	beq	16bb8 <argp_parse@@Base+0xaf0>
   16e7c:	ldr	r6, [r5, #12]
   16e80:	sub	r7, fp, #96	; 0x60
   16e84:	mov	r0, r4
   16e88:	mov	r2, r7
   16e8c:	mov	r8, #0
   16e90:	ldr	ip, [r5, #24]
   16e94:	ldr	r1, [r5, #28]
   16e98:	ldr	lr, [r5, #32]
   16e9c:	str	r6, [fp, #-76]	; 0xffffffb4
   16ea0:	str	ip, [fp, #-68]	; 0xffffffbc
   16ea4:	str	r1, [fp, #-64]	; 0xffffffc0
   16ea8:	ldr	r1, [fp, #-136]	; 0xffffff78
   16eac:	str	lr, [fp, #-60]	; 0xffffffc4
   16eb0:	blx	r3
   16eb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16eb8:	str	r3, [r5, #32]
   16ebc:	b	16ca0 <argp_parse@@Base+0xbd8>
   16ec0:	mov	r5, r0
   16ec4:	cmp	r5, #7
   16ec8:	beq	16e50 <argp_parse@@Base+0xd88>
   16ecc:	b	16d8c <argp_parse@@Base+0xcc4>
   16ed0:	sub	r4, ip, #36	; 0x24
   16ed4:	b	1674c <argp_parse@@Base+0x684>
   16ed8:	sub	r7, fp, #96	; 0x60
   16edc:	b	16d0c <argp_parse@@Base+0xc44>
   16ee0:	sub	r4, ip, #36	; 0x24
   16ee4:	cmp	r3, r4
   16ee8:	bls	16dd0 <argp_parse@@Base+0xd08>
   16eec:	ldr	r2, [fp, #4]
   16ef0:	cmp	r2, #0
   16ef4:	bne	16e60 <argp_parse@@Base+0xd98>
   16ef8:	b	16cfc <argp_parse@@Base+0xc34>
   16efc:	ldr	r2, [fp, #4]
   16f00:	cmp	r2, #0
   16f04:	bne	16d98 <argp_parse@@Base+0xcd0>
   16f08:	b	166dc <argp_parse@@Base+0x614>
   16f0c:	ldr	ip, [fp, #-108]	; 0xffffff94
   16f10:	b	16874 <argp_parse@@Base+0x7ac>
   16f14:	cmp	r0, #0
   16f18:	beq	16f30 <argp_parse@@Base+0xe68>
   16f1c:	cmp	r0, #7
   16f20:	mov	r5, r0
   16f24:	ldrne	r3, [fp, #-112]	; 0xffffff90
   16f28:	beq	16884 <argp_parse@@Base+0x7bc>
   16f2c:	b	166dc <argp_parse@@Base+0x614>
   16f30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16f34:	mov	r0, r3
   16f38:	str	r3, [fp, #-84]	; 0xffffffac
   16f3c:	b	16618 <argp_parse@@Base+0x550>
   16f40:	andeq	ip, r1, r0, asr #28
   16f44:	andeq	ip, r1, ip, asr lr
   16f48:	cmp	r1, #0
   16f4c:	beq	16f8c <argp_parse@@Base+0xec4>
   16f50:	ldr	r2, [r1, #52]	; 0x34
   16f54:	ldr	r3, [r2, #48]	; 0x30
   16f58:	ldr	r1, [r2, #52]	; 0x34
   16f5c:	cmp	r3, r1
   16f60:	bcs	16f8c <argp_parse@@Base+0xec4>
   16f64:	ldr	r2, [r3, #4]
   16f68:	cmp	r0, r2
   16f6c:	bne	16f80 <argp_parse@@Base+0xeb8>
   16f70:	b	16f94 <argp_parse@@Base+0xecc>
   16f74:	ldr	r2, [r3, #4]
   16f78:	cmp	r2, r0
   16f7c:	beq	16f94 <argp_parse@@Base+0xecc>
   16f80:	add	r3, r3, #36	; 0x24
   16f84:	cmp	r3, r1
   16f88:	bcc	16f74 <argp_parse@@Base+0xeac>
   16f8c:	mov	r0, #0
   16f90:	bx	lr
   16f94:	ldr	r0, [r3, #24]
   16f98:	bx	lr
   16f9c:	movw	r1, #58548	; 0xe4b4
   16fa0:	movt	r1, #2
   16fa4:	push	{lr}		; (str lr, [sp, #-4]!)
   16fa8:	ldm	r1, {r1, ip}
   16fac:	sub	sp, sp, #12
   16fb0:	movw	r3, #53348	; 0xd064
   16fb4:	movt	r3, #1
   16fb8:	movw	r2, #53364	; 0xd074
   16fbc:	movt	r2, #1
   16fc0:	str	ip, [sp]
   16fc4:	bl	175a8 <argp_parse@@Base+0x14e0>
   16fc8:	add	sp, sp, #12
   16fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   16fd0:	movw	r2, #58544	; 0xe4b0
   16fd4:	movt	r2, #2
   16fd8:	movw	ip, #28572	; 0x6f9c
   16fdc:	movt	ip, #1
   16fe0:	movw	r3, #58548	; 0xe4b4
   16fe4:	movt	r3, #2
   16fe8:	str	ip, [r2]
   16fec:	strd	r0, [r3]
   16ff0:	bx	lr
   16ff4:	ldrb	r3, [r0]
   16ff8:	cmp	r3, #47	; 0x2f
   16ffc:	bne	1700c <argp_parse@@Base+0xf44>
   17000:	ldrb	r3, [r0, #1]!
   17004:	cmp	r3, #47	; 0x2f
   17008:	beq	17000 <argp_parse@@Base+0xf38>
   1700c:	cmp	r3, #0
   17010:	beq	17040 <argp_parse@@Base+0xf78>
   17014:	mov	r2, r0
   17018:	mov	r1, #0
   1701c:	cmp	r3, #47	; 0x2f
   17020:	moveq	r1, #1
   17024:	beq	17034 <argp_parse@@Base+0xf6c>
   17028:	cmp	r1, #0
   1702c:	movne	r0, r2
   17030:	movne	r1, #0
   17034:	ldrb	r3, [r2, #1]!
   17038:	cmp	r3, #0
   1703c:	bne	1701c <argp_parse@@Base+0xf54>
   17040:	bx	lr
   17044:	str	r4, [sp, #-8]!
   17048:	mov	r4, r0
   1704c:	str	lr, [sp, #4]
   17050:	bl	119dc <strlen@plt>
   17054:	cmp	r0, #1
   17058:	bls	1707c <argp_parse@@Base+0xfb4>
   1705c:	add	r2, r4, r0
   17060:	mov	r3, r0
   17064:	ldrb	r2, [r2, #-1]
   17068:	cmp	r2, #47	; 0x2f
   1706c:	subeq	r3, r0, #2
   17070:	rsbeq	r1, r4, #1
   17074:	addeq	r3, r4, r3
   17078:	beq	17088 <argp_parse@@Base+0xfc0>
   1707c:	ldr	r4, [sp]
   17080:	add	sp, sp, #4
   17084:	pop	{pc}		; (ldr pc, [sp], #4)
   17088:	cmp	r3, r4
   1708c:	add	r0, r1, r3
   17090:	beq	1707c <argp_parse@@Base+0xfb4>
   17094:	ldrb	r2, [r3], #-1
   17098:	cmp	r2, #47	; 0x2f
   1709c:	beq	17088 <argp_parse@@Base+0xfc0>
   170a0:	ldr	r4, [sp]
   170a4:	add	sp, sp, #4
   170a8:	pop	{pc}		; (ldr pc, [sp], #4)
   170ac:	strd	r4, [sp, #-12]!
   170b0:	mov	r5, r0
   170b4:	str	lr, [sp, #8]
   170b8:	sub	sp, sp, #12
   170bc:	bl	11a24 <__errno_location@plt>
   170c0:	mov	r4, r0
   170c4:	mov	r2, #0
   170c8:	ldr	r3, [r4]
   170cc:	mov	r0, r5
   170d0:	str	r2, [r4]
   170d4:	str	r3, [sp]
   170d8:	str	r3, [sp, #4]
   170dc:	bl	117d8 <free@plt>
   170e0:	ldr	r3, [r4]
   170e4:	add	r2, sp, #8
   170e8:	clz	r3, r3
   170ec:	lsr	r3, r3, #5
   170f0:	add	r3, r2, r3, lsl #2
   170f4:	ldr	r3, [r3, #-8]
   170f8:	str	r3, [r4]
   170fc:	add	sp, sp, #12
   17100:	ldrd	r4, [sp]
   17104:	add	sp, sp, #8
   17108:	pop	{pc}		; (ldr pc, [sp], #4)
   1710c:	push	{lr}		; (str lr, [sp, #-4]!)
   17110:	sub	sp, sp, #20
   17114:	mov	ip, #0
   17118:	ldr	lr, [sp, #24]
   1711c:	str	lr, [sp]
   17120:	str	ip, [sp, #4]
   17124:	str	ip, [sp, #8]
   17128:	bl	1b974 <argp_error@@Base+0xd18>
   1712c:	add	sp, sp, #20
   17130:	pop	{pc}		; (ldr pc, [sp], #4)
   17134:	str	r4, [sp, #-8]!
   17138:	mov	ip, #0
   1713c:	str	lr, [sp, #4]
   17140:	sub	sp, sp, #16
   17144:	ldr	r4, [sp, #24]
   17148:	str	ip, [sp, #12]
   1714c:	ldr	lr, [sp, #28]
   17150:	stm	sp, {r4, ip, lr}
   17154:	bl	1b3dc <argp_error@@Base+0x780>
   17158:	add	sp, sp, #16
   1715c:	ldr	r4, [sp]
   17160:	add	sp, sp, #4
   17164:	pop	{pc}		; (ldr pc, [sp], #4)
   17168:	str	r4, [sp, #-8]!
   1716c:	mov	r4, #1
   17170:	str	lr, [sp, #4]
   17174:	sub	sp, sp, #16
   17178:	mov	lr, #0
   1717c:	ldr	ip, [sp, #24]
   17180:	str	ip, [sp]
   17184:	stmib	sp, {r4, lr}
   17188:	bl	1b974 <argp_error@@Base+0xd18>
   1718c:	add	sp, sp, #16
   17190:	ldr	r4, [sp]
   17194:	add	sp, sp, #4
   17198:	pop	{pc}		; (ldr pc, [sp], #4)
   1719c:	strd	r4, [sp, #-12]!
   171a0:	mov	r4, #0
   171a4:	mov	r5, #1
   171a8:	str	lr, [sp, #8]
   171ac:	sub	sp, sp, #20
   171b0:	ldr	lr, [sp, #32]
   171b4:	ldr	ip, [sp, #36]	; 0x24
   171b8:	str	lr, [sp]
   171bc:	str	r4, [sp, #12]
   171c0:	stmib	sp, {r5, ip}
   171c4:	bl	1b3dc <argp_error@@Base+0x780>
   171c8:	add	sp, sp, #20
   171cc:	ldrd	r4, [sp]
   171d0:	add	sp, sp, #8
   171d4:	pop	{pc}		; (ldr pc, [sp], #4)
   171d8:	strd	r4, [sp, #-16]!
   171dc:	subs	r4, r0, #0
   171e0:	str	r6, [sp, #8]
   171e4:	str	lr, [sp, #12]
   171e8:	beq	17280 <argp_parse@@Base+0x11b8>
   171ec:	mov	r1, #47	; 0x2f
   171f0:	bl	11ae4 <strrchr@plt>
   171f4:	subs	r5, r0, #0
   171f8:	beq	17258 <argp_parse@@Base+0x1190>
   171fc:	add	r6, r5, #1
   17200:	sub	r3, r6, r4
   17204:	cmp	r3, #6
   17208:	ble	17258 <argp_parse@@Base+0x1190>
   1720c:	movw	r1, #53436	; 0xd0bc
   17210:	movt	r1, #1
   17214:	mov	r2, #7
   17218:	sub	r0, r5, #6
   1721c:	bl	11bd4 <strncmp@plt>
   17220:	cmp	r0, #0
   17224:	bne	17258 <argp_parse@@Base+0x1190>
   17228:	movw	r1, #53444	; 0xd0c4
   1722c:	movt	r1, #1
   17230:	mov	r2, #3
   17234:	mov	r0, r6
   17238:	bl	11bd4 <strncmp@plt>
   1723c:	cmp	r0, #0
   17240:	movne	r4, r6
   17244:	bne	17258 <argp_parse@@Base+0x1190>
   17248:	add	r4, r5, #4
   1724c:	movw	r3, #58280	; 0xe3a8
   17250:	movt	r3, #2
   17254:	str	r4, [r3]
   17258:	movw	r2, #58556	; 0xe4bc
   1725c:	movt	r2, #2
   17260:	ldr	r6, [sp, #8]
   17264:	movw	r3, #58284	; 0xe3ac
   17268:	movt	r3, #2
   1726c:	str	r4, [r2]
   17270:	str	r4, [r3]
   17274:	ldrd	r4, [sp]
   17278:	add	sp, sp, #12
   1727c:	pop	{pc}		; (ldr pc, [sp], #4)
   17280:	movw	r3, #58288	; 0xe3b0
   17284:	movt	r3, #2
   17288:	movw	r0, #53380	; 0xd084
   1728c:	movt	r0, #1
   17290:	ldr	r3, [r3]
   17294:	mov	r2, #55	; 0x37
   17298:	mov	r1, #1
   1729c:	bl	118f8 <fwrite@plt>
   172a0:	bl	11be0 <abort@plt>
   172a4:	cmp	r1, #0
   172a8:	strd	r4, [sp, #-16]!
   172ac:	mov	r4, r0
   172b0:	str	r6, [sp, #8]
   172b4:	str	lr, [sp, #12]
   172b8:	sub	sp, sp, #32
   172bc:	ldr	r5, [sp, #48]	; 0x30
   172c0:	ldr	r6, [sp, #52]	; 0x34
   172c4:	beq	173c8 <argp_parse@@Base+0x1300>
   172c8:	mov	ip, r3
   172cc:	mov	r3, r2
   172d0:	mov	r2, r1
   172d4:	movw	r1, #53448	; 0xd0c8
   172d8:	movt	r1, #1
   172dc:	str	ip, [sp]
   172e0:	bl	11a0c <fprintf@plt>
   172e4:	movw	r3, #2022	; 0x7e6
   172e8:	movw	r2, #53468	; 0xd0dc
   172ec:	movt	r2, #1
   172f0:	movw	r1, #54236	; 0xd3dc
   172f4:	movt	r1, #1
   172f8:	mov	r0, r4
   172fc:	bl	11a0c <fprintf@plt>
   17300:	mov	r1, r4
   17304:	mov	r0, #10
   17308:	bl	11b08 <fputc@plt>
   1730c:	movw	r2, #53472	; 0xd0e0
   17310:	movt	r2, #1
   17314:	movw	r1, #53508	; 0xd104
   17318:	movt	r1, #1
   1731c:	mov	r0, r4
   17320:	bl	11a0c <fprintf@plt>
   17324:	mov	r1, r4
   17328:	mov	r0, #10
   1732c:	bl	11b08 <fputc@plt>
   17330:	cmp	r6, #9
   17334:	ldrls	pc, [pc, r6, lsl #2]
   17338:	b	17594 <argp_parse@@Base+0x14cc>
   1733c:			; <UNDEFINED> instruction: 0x000173b4
   17340:	ldrdeq	r7, [r1], -r8
   17344:	andeq	r7, r1, r0, lsl #8
   17348:	andeq	r7, r1, r8, lsr #8
   1734c:	andeq	r7, r1, r8, asr r4
   17350:	muleq	r1, r4, r4
   17354:	andeq	r7, r1, r8, asr #9
   17358:	andeq	r7, r1, r4, lsl #10
   1735c:	andeq	r7, r1, r8, asr #10
   17360:	andeq	r7, r1, r4, ror #6
   17364:	ldr	ip, [r5, #8]
   17368:	movw	r1, #53948	; 0xd2bc
   1736c:	movt	r1, #1
   17370:	mov	r0, r4
   17374:	ldr	r3, [r5, #12]
   17378:	ldr	r2, [r5, #32]
   1737c:	str	ip, [sp]
   17380:	ldr	ip, [r5, #16]
   17384:	str	r2, [sp, #24]
   17388:	ldr	r2, [r5, #28]
   1738c:	str	r3, [sp, #4]
   17390:	ldr	r3, [r5, #20]
   17394:	str	ip, [sp, #8]
   17398:	ldr	ip, [r5, #24]
   1739c:	str	r2, [sp, #20]
   173a0:	ldr	r2, [r5]
   173a4:	str	r3, [sp, #12]
   173a8:	ldr	r3, [r5, #4]
   173ac:	str	ip, [sp, #16]
   173b0:	bl	11a0c <fprintf@plt>
   173b4:	add	sp, sp, #32
   173b8:	ldrd	r4, [sp]
   173bc:	ldr	r6, [sp, #8]
   173c0:	add	sp, sp, #12
   173c4:	pop	{pc}		; (ldr pc, [sp], #4)
   173c8:	movw	r1, #53460	; 0xd0d4
   173cc:	movt	r1, #1
   173d0:	bl	11a0c <fprintf@plt>
   173d4:	b	172e4 <argp_parse@@Base+0x121c>
   173d8:	ldr	r2, [r5]
   173dc:	mov	r0, r4
   173e0:	movw	r1, #53680	; 0xd1b0
   173e4:	movt	r1, #1
   173e8:	add	sp, sp, #32
   173ec:	ldrd	r4, [sp]
   173f0:	ldr	r6, [sp, #8]
   173f4:	ldr	lr, [sp, #12]
   173f8:	add	sp, sp, #16
   173fc:	b	11a0c <fprintf@plt>
   17400:	ldrd	r2, [r5]
   17404:	mov	r0, r4
   17408:	movw	r1, #53696	; 0xd1c0
   1740c:	movt	r1, #1
   17410:	add	sp, sp, #32
   17414:	ldrd	r4, [sp]
   17418:	ldr	r6, [sp, #8]
   1741c:	ldr	lr, [sp, #12]
   17420:	add	sp, sp, #16
   17424:	b	11a0c <fprintf@plt>
   17428:	ldrd	r2, [r5]
   1742c:	mov	r0, r4
   17430:	movw	r1, #53720	; 0xd1d8
   17434:	movt	r1, #1
   17438:	ldr	ip, [r5, #8]
   1743c:	str	ip, [sp, #48]	; 0x30
   17440:	add	sp, sp, #32
   17444:	ldrd	r4, [sp]
   17448:	ldr	r6, [sp, #8]
   1744c:	ldr	lr, [sp, #12]
   17450:	add	sp, sp, #16
   17454:	b	11a0c <fprintf@plt>
   17458:	ldr	r2, [r5]
   1745c:	mov	r0, r4
   17460:	movw	r1, #53748	; 0xd1f4
   17464:	movt	r1, #1
   17468:	ldr	r3, [r5, #8]
   1746c:	ldr	ip, [r5, #12]
   17470:	str	r3, [sp, #48]	; 0x30
   17474:	ldr	r3, [r5, #4]
   17478:	str	ip, [sp, #52]	; 0x34
   1747c:	add	sp, sp, #32
   17480:	ldrd	r4, [sp]
   17484:	ldr	r6, [sp, #8]
   17488:	ldr	lr, [sp, #12]
   1748c:	add	sp, sp, #16
   17490:	b	11a0c <fprintf@plt>
   17494:	ldr	r2, [r5, #8]
   17498:	mov	r0, r4
   1749c:	movw	r1, #53780	; 0xd214
   174a0:	movt	r1, #1
   174a4:	ldr	ip, [r5, #12]
   174a8:	ldr	r3, [r5, #16]
   174ac:	str	r2, [sp]
   174b0:	ldr	r2, [r5]
   174b4:	str	r3, [sp, #8]
   174b8:	ldr	r3, [r5, #4]
   174bc:	str	ip, [sp, #4]
   174c0:	bl	11a0c <fprintf@plt>
   174c4:	b	173b4 <argp_parse@@Base+0x12ec>
   174c8:	ldr	ip, [r5, #8]
   174cc:	mov	r0, r4
   174d0:	movw	r1, #53816	; 0xd238
   174d4:	movt	r1, #1
   174d8:	ldr	r3, [r5, #12]
   174dc:	ldr	r2, [r5, #20]
   174e0:	str	ip, [sp]
   174e4:	ldr	ip, [r5, #16]
   174e8:	str	r2, [sp, #12]
   174ec:	ldr	r2, [r5]
   174f0:	str	r3, [sp, #4]
   174f4:	ldr	r3, [r5, #4]
   174f8:	str	ip, [sp, #8]
   174fc:	bl	11a0c <fprintf@plt>
   17500:	b	173b4 <argp_parse@@Base+0x12ec>
   17504:	ldr	r3, [r5, #8]
   17508:	mov	r0, r4
   1750c:	movw	r1, #53856	; 0xd260
   17510:	movt	r1, #1
   17514:	ldr	r2, [r5, #12]
   17518:	ldr	ip, [r5, #24]
   1751c:	str	r3, [sp]
   17520:	ldr	r3, [r5, #16]
   17524:	str	ip, [sp, #16]
   17528:	ldr	ip, [r5, #20]
   1752c:	str	r2, [sp, #4]
   17530:	ldr	r2, [r5]
   17534:	str	r3, [sp, #8]
   17538:	ldr	r3, [r5, #4]
   1753c:	str	ip, [sp, #12]
   17540:	bl	11a0c <fprintf@plt>
   17544:	b	173b4 <argp_parse@@Base+0x12ec>
   17548:	ldr	r2, [r5, #8]
   1754c:	mov	r0, r4
   17550:	movw	r1, #53900	; 0xd28c
   17554:	movt	r1, #1
   17558:	ldr	ip, [r5, #12]
   1755c:	ldr	r3, [r5, #28]
   17560:	str	r2, [sp]
   17564:	ldr	r2, [r5, #16]
   17568:	str	r3, [sp, #20]
   1756c:	ldr	r3, [r5, #24]
   17570:	str	ip, [sp, #4]
   17574:	ldr	ip, [r5, #20]
   17578:	str	r2, [sp, #8]
   1757c:	ldr	r2, [r5]
   17580:	str	r3, [sp, #16]
   17584:	ldr	r3, [r5, #4]
   17588:	str	ip, [sp, #12]
   1758c:	bl	11a0c <fprintf@plt>
   17590:	b	173b4 <argp_parse@@Base+0x12ec>
   17594:	movw	r1, #54000	; 0xd2f0
   17598:	movt	r1, #1
   1759c:	ldr	ip, [r5, #8]
   175a0:	mov	r0, r4
   175a4:	b	17374 <argp_parse@@Base+0x12ac>
   175a8:	strd	r4, [sp, #-12]!
   175ac:	str	lr, [sp, #8]
   175b0:	sub	sp, sp, #12
   175b4:	ldr	r5, [sp, #24]
   175b8:	ldr	ip, [r5]
   175bc:	cmp	ip, #0
   175c0:	beq	175dc <argp_parse@@Base+0x1514>
   175c4:	mov	lr, r5
   175c8:	mov	ip, #0
   175cc:	ldr	r4, [lr, #4]!
   175d0:	add	ip, ip, #1
   175d4:	cmp	r4, #0
   175d8:	bne	175cc <argp_parse@@Base+0x1504>
   175dc:	stm	sp, {r5, ip}
   175e0:	bl	172a4 <argp_parse@@Base+0x11dc>
   175e4:	add	sp, sp, #12
   175e8:	ldrd	r4, [sp]
   175ec:	add	sp, sp, #8
   175f0:	pop	{pc}		; (ldr pc, [sp], #4)
   175f4:	strd	r4, [sp, #-16]!
   175f8:	mov	ip, #0
   175fc:	str	r6, [sp, #8]
   17600:	str	lr, [sp, #12]
   17604:	sub	sp, sp, #48	; 0x30
   17608:	ldr	r5, [sp, #64]	; 0x40
   1760c:	add	r6, sp, #8
   17610:	mov	r4, r6
   17614:	ldr	lr, [r5], #4
   17618:	cmp	lr, #0
   1761c:	str	lr, [r4], #4
   17620:	beq	17630 <argp_parse@@Base+0x1568>
   17624:	add	ip, ip, #1
   17628:	cmp	ip, #10
   1762c:	bne	17614 <argp_parse@@Base+0x154c>
   17630:	stm	sp, {r6, ip}
   17634:	bl	172a4 <argp_parse@@Base+0x11dc>
   17638:	add	sp, sp, #48	; 0x30
   1763c:	ldrd	r4, [sp]
   17640:	ldr	r6, [sp, #8]
   17644:	add	sp, sp, #12
   17648:	pop	{pc}		; (ldr pc, [sp], #4)
   1764c:	push	{r3}		; (str r3, [sp, #-4]!)
   17650:	mov	ip, #0
   17654:	strd	r4, [sp, #-12]!
   17658:	str	lr, [sp, #8]
   1765c:	sub	sp, sp, #56	; 0x38
   17660:	add	r3, sp, #72	; 0x48
   17664:	add	r5, sp, #16
   17668:	mov	r4, r3
   1766c:	mov	lr, r5
   17670:	str	r3, [sp, #12]
   17674:	ldr	r3, [r4], #4
   17678:	cmp	r3, #0
   1767c:	str	r3, [lr], #4
   17680:	beq	17690 <argp_parse@@Base+0x15c8>
   17684:	add	ip, ip, #1
   17688:	cmp	ip, #10
   1768c:	bne	17674 <argp_parse@@Base+0x15ac>
   17690:	ldr	r3, [sp, #68]	; 0x44
   17694:	stm	sp, {r5, ip}
   17698:	bl	172a4 <argp_parse@@Base+0x11dc>
   1769c:	add	sp, sp, #56	; 0x38
   176a0:	ldrd	r4, [sp]
   176a4:	ldr	lr, [sp, #8]
   176a8:	add	sp, sp, #12
   176ac:	add	sp, sp, #4
   176b0:	bx	lr
   176b4:	movw	r3, #58292	; 0xe3b4
   176b8:	movt	r3, #2
   176bc:	str	r4, [sp, #-8]!
   176c0:	mov	r0, #10
   176c4:	ldr	r1, [r3]
   176c8:	str	lr, [sp, #4]
   176cc:	bl	11b08 <fputc@plt>
   176d0:	movw	r1, #54060	; 0xd32c
   176d4:	movt	r1, #1
   176d8:	movw	r0, #54084	; 0xd344
   176dc:	movt	r0, #1
   176e0:	bl	11790 <printf@plt>
   176e4:	movw	r2, #54104	; 0xd358
   176e8:	movt	r2, #1
   176ec:	movw	r1, #53364	; 0xd074
   176f0:	movt	r1, #1
   176f4:	movw	r0, #54144	; 0xd380
   176f8:	movt	r0, #1
   176fc:	bl	11790 <printf@plt>
   17700:	movw	r1, #54164	; 0xd394
   17704:	movt	r1, #1
   17708:	ldr	r4, [sp]
   1770c:	movw	r0, #54196	; 0xd3b4
   17710:	movt	r0, #1
   17714:	ldr	lr, [sp, #4]
   17718:	add	sp, sp, #8
   1771c:	b	11790 <printf@plt>
   17720:	cmp	r1, #0
   17724:	cmpne	r0, #0
   17728:	beq	17774 <argp_parse@@Base+0x16ac>
   1772c:	strd	r4, [sp, #-16]!
   17730:	umull	r4, r5, r0, r1
   17734:	str	r6, [sp, #8]
   17738:	str	lr, [sp, #12]
   1773c:	adds	r3, r5, #0
   17740:	movne	r3, #1
   17744:	cmp	r4, #0
   17748:	blt	17754 <argp_parse@@Base+0x168c>
   1774c:	cmp	r3, #0
   17750:	beq	17780 <argp_parse@@Base+0x16b8>
   17754:	bl	11a24 <__errno_location@plt>
   17758:	mov	r3, #12
   1775c:	ldrd	r4, [sp]
   17760:	ldr	r6, [sp, #8]
   17764:	add	sp, sp, #12
   17768:	str	r3, [r0]
   1776c:	mov	r0, #0
   17770:	pop	{pc}		; (ldr pc, [sp], #4)
   17774:	mov	r1, #1
   17778:	mov	r0, r1
   1777c:	b	11724 <calloc@plt>
   17780:	ldrd	r4, [sp]
   17784:	ldr	r6, [sp, #8]
   17788:	ldr	lr, [sp, #12]
   1778c:	add	sp, sp, #16
   17790:	b	11724 <calloc@plt>
   17794:	cmp	r0, #0
   17798:	beq	177a4 <argp_parse@@Base+0x16dc>
   1779c:	blt	177ac <argp_parse@@Base+0x16e4>
   177a0:	b	11958 <malloc@plt>
   177a4:	mov	r0, #1
   177a8:	b	11958 <malloc@plt>
   177ac:	str	r4, [sp, #-8]!
   177b0:	str	lr, [sp, #4]
   177b4:	bl	11a24 <__errno_location@plt>
   177b8:	mov	r3, #12
   177bc:	ldr	r4, [sp]
   177c0:	add	sp, sp, #4
   177c4:	str	r3, [r0]
   177c8:	mov	r0, #0
   177cc:	pop	{pc}		; (ldr pc, [sp], #4)
   177d0:	cmp	r0, #0
   177d4:	beq	177fc <argp_parse@@Base+0x1734>
   177d8:	cmp	r1, #0
   177dc:	str	r4, [sp, #-8]!
   177e0:	str	lr, [sp, #4]
   177e4:	beq	17804 <argp_parse@@Base+0x173c>
   177e8:	blt	17818 <argp_parse@@Base+0x1750>
   177ec:	ldr	r4, [sp]
   177f0:	ldr	lr, [sp, #4]
   177f4:	add	sp, sp, #8
   177f8:	b	118a4 <realloc@plt>
   177fc:	mov	r0, r1
   17800:	b	17794 <argp_parse@@Base+0x16cc>
   17804:	bl	170ac <argp_parse@@Base+0xfe4>
   17808:	ldr	r4, [sp]
   1780c:	add	sp, sp, #4
   17810:	mov	r0, #0
   17814:	pop	{pc}		; (ldr pc, [sp], #4)
   17818:	bl	11a24 <__errno_location@plt>
   1781c:	mov	r3, #12
   17820:	str	r3, [r0]
   17824:	b	17808 <argp_parse@@Base+0x1740>
   17828:	strd	r4, [sp, #-16]!
   1782c:	mov	r5, r0
   17830:	ldr	r0, [r0, #12]
   17834:	str	r6, [sp, #8]
   17838:	str	lr, [sp, #12]
   1783c:	cmp	r0, #0
   17840:	beq	17854 <argp_parse@@Base+0x178c>
   17844:	ldr	r4, [r0, #24]
   17848:	bl	170ac <argp_parse@@Base+0xfe4>
   1784c:	subs	r0, r4, #0
   17850:	bne	17844 <argp_parse@@Base+0x177c>
   17854:	ldr	r3, [r5, #4]
   17858:	cmp	r3, #0
   1785c:	bne	17878 <argp_parse@@Base+0x17b0>
   17860:	mov	r0, r5
   17864:	ldrd	r4, [sp]
   17868:	ldr	r6, [sp, #8]
   1786c:	ldr	lr, [sp, #12]
   17870:	add	sp, sp, #16
   17874:	b	170ac <argp_parse@@Base+0xfe4>
   17878:	ldr	r0, [r5]
   1787c:	bl	170ac <argp_parse@@Base+0xfe4>
   17880:	ldr	r0, [r5, #8]
   17884:	bl	170ac <argp_parse@@Base+0xfe4>
   17888:	b	17860 <argp_parse@@Base+0x1798>
   1788c:	ldr	r3, [r0, #12]
   17890:	strd	r4, [sp, #-16]!
   17894:	ldr	r2, [r1, #12]
   17898:	str	r6, [sp, #8]
   1789c:	str	lr, [sp, #12]
   178a0:	cmp	r3, r2
   178a4:	beq	17904 <argp_parse@@Base+0x183c>
   178a8:	mov	r5, r1
   178ac:	mov	r4, r0
   178b0:	mov	r1, r2
   178b4:	mov	r0, r3
   178b8:	bl	1788c <argp_parse@@Base+0x17c4>
   178bc:	cmp	r0, #0
   178c0:	bne	178f4 <argp_parse@@Base+0x182c>
   178c4:	ldr	r3, [r5, #8]
   178c8:	ldr	r0, [r4, #8]
   178cc:	mvn	r2, r3
   178d0:	lsr	r2, r2, #31
   178d4:	cmp	r2, r0, lsr #31
   178d8:	subne	r0, r0, r3
   178dc:	subeq	r0, r3, r0
   178e0:	cmp	r0, #0
   178e4:	bne	178f4 <argp_parse@@Base+0x182c>
   178e8:	ldr	r0, [r4, #4]
   178ec:	ldr	r3, [r5, #4]
   178f0:	sub	r0, r3, r0
   178f4:	ldrd	r4, [sp]
   178f8:	ldr	r6, [sp, #8]
   178fc:	add	sp, sp, #12
   17900:	pop	{pc}		; (ldr pc, [sp], #4)
   17904:	ldr	lr, [r1, #4]
   17908:	ldr	r3, [r1, #8]
   1790c:	ldr	r2, [r0, #8]
   17910:	ldr	ip, [r0, #4]
   17914:	mvn	r1, r3
   17918:	lsr	r1, r1, #31
   1791c:	ldrd	r4, [sp]
   17920:	cmp	r1, r2, lsr #31
   17924:	ldr	r6, [sp, #8]
   17928:	add	sp, sp, #12
   1792c:	subne	r0, r2, r3
   17930:	subeq	r0, r3, r2
   17934:	cmp	r0, #0
   17938:	subeq	r0, lr, ip
   1793c:	pop	{pc}		; (ldr pc, [sp], #4)
   17940:	ldr	r2, [r0, #8]
   17944:	cmp	r2, #0
   17948:	beq	17954 <argp_parse@@Base+0x188c>
   1794c:	mov	r0, #0
   17950:	bx	lr
   17954:	ldr	r2, [r1, #8]
   17958:	cmp	r2, #0
   1795c:	bne	1794c <argp_parse@@Base+0x1884>
   17960:	ldr	r2, [r0, #12]
   17964:	ldr	r1, [r1, #12]
   17968:	orr	r2, r2, r1
   1796c:	tst	r2, #16
   17970:	bne	1794c <argp_parse@@Base+0x1884>
   17974:	ldr	r2, [r3]
   17978:	ldr	r1, [r0, #4]
   1797c:	add	r0, r2, #1
   17980:	str	r0, [r3]
   17984:	strb	r1, [r2]
   17988:	b	1794c <argp_parse@@Base+0x1884>
   1798c:	strd	r4, [sp, #-16]!
   17990:	ldr	r4, [r0, #12]
   17994:	str	r6, [sp, #8]
   17998:	str	lr, [sp, #12]
   1799c:	ands	r4, r4, #8
   179a0:	movne	r4, #0
   179a4:	bne	179d0 <argp_parse@@Base+0x1908>
   179a8:	ldr	r5, [r0, #4]
   179ac:	sub	r3, r5, #1
   179b0:	cmp	r3, #254	; 0xfe
   179b4:	bhi	179d0 <argp_parse@@Base+0x1908>
   179b8:	bl	119ac <__ctype_b_loc@plt>
   179bc:	ldr	r2, [r0]
   179c0:	lsl	r3, r5, #1
   179c4:	ldrh	r3, [r2, r3]
   179c8:	tst	r3, #16384	; 0x4000
   179cc:	movne	r4, r5
   179d0:	mov	r0, r4
   179d4:	ldrd	r4, [sp]
   179d8:	ldr	r6, [sp, #8]
   179dc:	add	sp, sp, #12
   179e0:	pop	{pc}		; (ldr pc, [sp], #4)
   179e4:	str	r4, [sp, #-8]!
   179e8:	mov	r4, r0
   179ec:	str	lr, [sp, #4]
   179f0:	bl	119ac <__ctype_b_loc@plt>
   179f4:	ldr	lr, [r0]
   179f8:	ldr	r2, [r4]
   179fc:	b	17a04 <argp_parse@@Base+0x193c>
   17a00:	str	r2, [r4]
   17a04:	ldrb	r1, [r2]
   17a08:	mov	r3, r2
   17a0c:	add	r2, r2, #1
   17a10:	lsl	r0, r1, #1
   17a14:	ldrh	ip, [lr, r0]
   17a18:	tst	ip, #8192	; 0x2000
   17a1c:	bne	17a00 <argp_parse@@Base+0x1938>
   17a20:	subs	r0, r1, #45	; 0x2d
   17a24:	movne	r0, #1
   17a28:	cmp	r1, #0
   17a2c:	beq	17a60 <argp_parse@@Base+0x1998>
   17a30:	tst	ip, #8
   17a34:	beq	17a48 <argp_parse@@Base+0x1980>
   17a38:	b	17a60 <argp_parse@@Base+0x1998>
   17a3c:	ldrh	r2, [lr, r1]
   17a40:	tst	r2, #8
   17a44:	bne	17a60 <argp_parse@@Base+0x1998>
   17a48:	add	r3, r3, #1
   17a4c:	str	r3, [r4]
   17a50:	ldrb	r2, [r3]
   17a54:	cmp	r2, #0
   17a58:	lsl	r1, r2, #1
   17a5c:	bne	17a3c <argp_parse@@Base+0x1974>
   17a60:	ldr	r4, [sp]
   17a64:	add	sp, sp, #4
   17a68:	pop	{pc}		; (ldr pc, [sp], #4)
   17a6c:	cmp	r1, #0
   17a70:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17a74:	strd	r6, [sp, #8]
   17a78:	str	r8, [sp, #16]
   17a7c:	str	lr, [sp, #20]
   17a80:	beq	17b08 <argp_parse@@Base+0x1a40>
   17a84:	mov	r6, r0
   17a88:	mov	r8, r2
   17a8c:	sub	r7, r1, #1
   17a90:	ldrd	r4, [r6]
   17a94:	cmp	r5, #0
   17a98:	sub	r5, r5, #1
   17a9c:	beq	17adc <argp_parse@@Base+0x1a14>
   17aa0:	add	r4, r4, #24
   17aa4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   17aa8:	sub	r5, r5, #1
   17aac:	cmp	r0, #0
   17ab0:	beq	17ad0 <argp_parse@@Base+0x1a08>
   17ab4:	ldr	r3, [r4, #-12]
   17ab8:	mov	r1, r8
   17abc:	tst	r3, #2
   17ac0:	bne	17ad0 <argp_parse@@Base+0x1a08>
   17ac4:	bl	11754 <strcmp@plt>
   17ac8:	cmp	r0, #0
   17acc:	beq	17af0 <argp_parse@@Base+0x1a28>
   17ad0:	cmn	r5, #1
   17ad4:	add	r4, r4, #24
   17ad8:	bne	17aa4 <argp_parse@@Base+0x19dc>
   17adc:	sub	r7, r7, #1
   17ae0:	add	r6, r6, #28
   17ae4:	cmn	r7, #1
   17ae8:	bne	17a90 <argp_parse@@Base+0x19c8>
   17aec:	mov	r6, #0
   17af0:	mov	r0, r6
   17af4:	ldrd	r4, [sp]
   17af8:	ldrd	r6, [sp, #8]
   17afc:	ldr	r8, [sp, #16]
   17b00:	add	sp, sp, #20
   17b04:	pop	{pc}		; (ldr pc, [sp], #4)
   17b08:	mov	r6, r1
   17b0c:	b	17af0 <argp_parse@@Base+0x1a28>
   17b10:	strd	r4, [sp, #-16]!
   17b14:	subs	r5, r0, #0
   17b18:	mov	r4, r1
   17b1c:	str	r6, [sp, #8]
   17b20:	str	lr, [sp, #12]
   17b24:	beq	17b38 <argp_parse@@Base+0x1a70>
   17b28:	mov	r1, #10
   17b2c:	bl	119f4 <strchr@plt>
   17b30:	adds	r5, r0, #0
   17b34:	movne	r5, #1
   17b38:	cmp	r4, #0
   17b3c:	beq	17b68 <argp_parse@@Base+0x1aa0>
   17b40:	ldr	r3, [r4]
   17b44:	cmp	r3, #0
   17b48:	beq	17b68 <argp_parse@@Base+0x1aa0>
   17b4c:	ldr	r0, [r3, #8]
   17b50:	ldr	r1, [r3, #16]
   17b54:	bl	17b10 <argp_parse@@Base+0x1a48>
   17b58:	ldr	r3, [r4, #16]!
   17b5c:	add	r5, r5, r0
   17b60:	cmp	r3, #0
   17b64:	bne	17b4c <argp_parse@@Base+0x1a84>
   17b68:	mov	r0, r5
   17b6c:	ldrd	r4, [sp]
   17b70:	ldr	r6, [sp, #8]
   17b74:	add	sp, sp, #12
   17b78:	pop	{pc}		; (ldr pc, [sp], #4)
   17b7c:	strd	r4, [sp, #-16]!
   17b80:	mov	r5, r1
   17b84:	mov	r1, r3
   17b88:	str	r6, [sp, #8]
   17b8c:	mov	r6, r0
   17b90:	mov	r0, r2
   17b94:	mov	r4, r2
   17b98:	str	lr, [sp, #12]
   17b9c:	bl	16f48 <argp_parse@@Base+0xe80>
   17ba0:	mov	r2, r0
   17ba4:	mov	r1, r6
   17ba8:	ldr	r6, [sp, #8]
   17bac:	mov	r0, r5
   17bb0:	ldr	lr, [sp, #12]
   17bb4:	ldr	r3, [r4, #20]
   17bb8:	ldrd	r4, [sp]
   17bbc:	add	sp, sp, #16
   17bc0:	bx	r3
   17bc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17bc8:	ldr	r4, [r0]
   17bcc:	strd	r6, [sp, #8]
   17bd0:	strd	r8, [sp, #16]
   17bd4:	strd	sl, [sp, #24]
   17bd8:	str	lr, [sp, #32]
   17bdc:	sub	sp, sp, #52	; 0x34
   17be0:	ldr	r7, [r0, #16]
   17be4:	str	r1, [sp]
   17be8:	str	r0, [sp, #4]
   17bec:	mov	r0, #16
   17bf0:	bl	17794 <argp_parse@@Base+0x16cc>
   17bf4:	subs	fp, r0, #0
   17bf8:	beq	1822c <argp_parse@@Base+0x2164>
   17bfc:	mov	r3, #0
   17c00:	cmp	r4, r3
   17c04:	str	r3, [fp, #4]
   17c08:	str	r3, [fp, #12]
   17c0c:	beq	17e70 <argp_parse@@Base+0x1da8>
   17c10:	ldr	r0, [r4, #12]
   17c14:	ands	r0, r0, #4
   17c18:	bne	18268 <argp_parse@@Base+0x21a0>
   17c1c:	mov	r9, r0
   17c20:	add	r5, r4, #24
   17c24:	mov	r8, r0
   17c28:	b	17c78 <argp_parse@@Base+0x1bb0>
   17c2c:	ldr	r3, [r5, #-12]
   17c30:	tst	r3, #4
   17c34:	bne	17c44 <argp_parse@@Base+0x1b7c>
   17c38:	add	r9, r9, #1
   17c3c:	str	r9, [fp, #4]
   17c40:	ldr	r3, [r5, #-12]
   17c44:	tst	r3, #8
   17c48:	bne	17c74 <argp_parse@@Base+0x1bac>
   17c4c:	ldr	r6, [r5, #-20]	; 0xffffffec
   17c50:	sub	r3, r6, #1
   17c54:	cmp	r3, #254	; 0xfe
   17c58:	bhi	17c74 <argp_parse@@Base+0x1bac>
   17c5c:	bl	119ac <__ctype_b_loc@plt>
   17c60:	ldr	r3, [r0]
   17c64:	lsl	r6, r6, #1
   17c68:	ldrh	r3, [r3, r6]
   17c6c:	tst	r3, #16384	; 0x4000
   17c70:	addne	r8, r8, #1
   17c74:	add	r5, r5, #24
   17c78:	ldr	r3, [r5, #-20]	; 0xffffffec
   17c7c:	cmp	r3, #0
   17c80:	bne	17c2c <argp_parse@@Base+0x1b64>
   17c84:	ldr	r3, [r5, #-24]	; 0xffffffe8
   17c88:	cmp	r3, #0
   17c8c:	bne	17c2c <argp_parse@@Base+0x1b64>
   17c90:	ldr	r3, [r5, #-8]
   17c94:	cmp	r3, #0
   17c98:	bne	17c2c <argp_parse@@Base+0x1b64>
   17c9c:	ldr	sl, [r5, #-4]
   17ca0:	cmp	sl, #0
   17ca4:	bne	17c2c <argp_parse@@Base+0x1b64>
   17ca8:	rsb	r9, r9, r9, lsl #3
   17cac:	lsl	r0, r9, #2
   17cb0:	bl	17794 <argp_parse@@Base+0x16cc>
   17cb4:	str	r0, [fp]
   17cb8:	add	r0, r8, #1
   17cbc:	bl	17794 <argp_parse@@Base+0x16cc>
   17cc0:	ldr	r5, [fp]
   17cc4:	mov	r8, r0
   17cc8:	str	r0, [fp, #8]
   17ccc:	cmp	r5, #0
   17cd0:	cmpne	r0, #0
   17cd4:	beq	181d0 <argp_parse@@Base+0x2108>
   17cd8:	ldr	r2, [fp, #4]
   17cdc:	movw	r3, #37449	; 0x9249
   17ce0:	movt	r3, #2340	; 0x924
   17ce4:	cmp	r2, r3
   17ce8:	bhi	181f0 <argp_parse@@Base+0x2128>
   17cec:	mov	r6, r0
   17cf0:	mov	r0, sl
   17cf4:	str	r7, [sp, #8]
   17cf8:	mov	r7, r8
   17cfc:	ldr	sl, [sp]
   17d00:	add	r5, r5, #28
   17d04:	str	fp, [sp, #12]
   17d08:	ldr	r3, [r4, #4]
   17d0c:	ldr	r8, [sp, #4]
   17d10:	cmp	r3, #0
   17d14:	ldr	fp, [r4, #20]
   17d18:	bne	17d28 <argp_parse@@Base+0x1c60>
   17d1c:	ldr	ip, [r4]
   17d20:	cmp	ip, #0
   17d24:	beq	17e08 <argp_parse@@Base+0x1d40>
   17d28:	mov	r2, #0
   17d2c:	cmp	fp, #0
   17d30:	str	r4, [r5, #-28]	; 0xffffffe4
   17d34:	str	r2, [r5, #-24]	; 0xffffffe8
   17d38:	str	r6, [r5, #-20]	; 0xffffffec
   17d3c:	bne	17d50 <argp_parse@@Base+0x1c88>
   17d40:	ldr	r2, [r4]
   17d44:	orrs	r3, r2, r3
   17d48:	movne	fp, r0
   17d4c:	beq	17e28 <argp_parse@@Base+0x1d60>
   17d50:	mov	r3, #0
   17d54:	str	fp, [r5, #-16]
   17d58:	str	sl, [r5, #-12]
   17d5c:	str	r8, [r5, #-8]
   17d60:	add	r3, r3, #1
   17d64:	str	r3, [r5, #-24]	; 0xffffffe8
   17d68:	ldr	r3, [r4, #12]
   17d6c:	tst	r3, #8
   17d70:	bne	17dd8 <argp_parse@@Base+0x1d10>
   17d74:	ldr	r9, [r4, #4]
   17d78:	sub	r3, r9, #1
   17d7c:	cmp	r3, #254	; 0xfe
   17d80:	bhi	17dd8 <argp_parse@@Base+0x1d10>
   17d84:	bl	119ac <__ctype_b_loc@plt>
   17d88:	ldr	r0, [r0]
   17d8c:	lsl	r3, r9, #1
   17d90:	ldrh	r3, [r0, r3]
   17d94:	tst	r3, #16384	; 0x4000
   17d98:	beq	17dd8 <argp_parse@@Base+0x1d10>
   17d9c:	cmp	r7, r6
   17da0:	uxtb	r9, r9
   17da4:	bcs	17dd4 <argp_parse@@Base+0x1d0c>
   17da8:	ldrb	r3, [r7]
   17dac:	cmp	r3, r9
   17db0:	beq	17dd8 <argp_parse@@Base+0x1d10>
   17db4:	mov	r3, r7
   17db8:	sub	r0, r6, #1
   17dbc:	b	17dcc <argp_parse@@Base+0x1d04>
   17dc0:	ldrb	ip, [r3, #1]!
   17dc4:	cmp	ip, r9
   17dc8:	beq	17dd8 <argp_parse@@Base+0x1d10>
   17dcc:	cmp	r0, r3
   17dd0:	bne	17dc0 <argp_parse@@Base+0x1cf8>
   17dd4:	strb	r9, [r6], #1
   17dd8:	add	r4, r4, #24
   17ddc:	ldr	r0, [r4, #4]
   17de0:	cmp	r0, #0
   17de4:	bne	17df4 <argp_parse@@Base+0x1d2c>
   17de8:	ldr	r3, [r4]
   17dec:	cmp	r3, #0
   17df0:	beq	17e30 <argp_parse@@Base+0x1d68>
   17df4:	ldr	r3, [r4, #12]
   17df8:	tst	r3, #4
   17dfc:	beq	17e54 <argp_parse@@Base+0x1d8c>
   17e00:	ldr	r3, [r5, #-24]	; 0xffffffe8
   17e04:	b	17d60 <argp_parse@@Base+0x1c98>
   17e08:	ldr	ip, [r4, #16]
   17e0c:	cmp	ip, #0
   17e10:	beq	17e5c <argp_parse@@Base+0x1d94>
   17e14:	cmp	fp, #0
   17e18:	str	r4, [r5, #-28]	; 0xffffffe4
   17e1c:	str	r3, [r5, #-24]	; 0xffffffe8
   17e20:	str	r6, [r5, #-20]	; 0xffffffec
   17e24:	bne	17d50 <argp_parse@@Base+0x1c88>
   17e28:	add	fp, r0, #1
   17e2c:	b	17d50 <argp_parse@@Base+0x1c88>
   17e30:	ldr	r3, [r4, #16]
   17e34:	cmp	r3, #0
   17e38:	bne	17df4 <argp_parse@@Base+0x1d2c>
   17e3c:	ldr	r3, [r4, #20]
   17e40:	cmp	r3, #0
   17e44:	bne	17df4 <argp_parse@@Base+0x1d2c>
   17e48:	add	r5, r5, #28
   17e4c:	mov	r0, fp
   17e50:	b	17d10 <argp_parse@@Base+0x1c48>
   17e54:	mov	r3, r0
   17e58:	b	17e48 <argp_parse@@Base+0x1d80>
   17e5c:	cmp	fp, #0
   17e60:	bne	17fac <argp_parse@@Base+0x1ee4>
   17e64:	ldr	r7, [sp, #8]
   17e68:	strb	r3, [r6]
   17e6c:	ldr	fp, [sp, #12]
   17e70:	cmp	r7, #0
   17e74:	beq	17f8c <argp_parse@@Base+0x1ec4>
   17e78:	ldr	r3, [r7]
   17e7c:	cmp	r3, #0
   17e80:	beq	17f8c <argp_parse@@Base+0x1ec4>
   17e84:	movw	r3, #37449	; 0x9249
   17e88:	movt	r3, #2340	; 0x924
   17e8c:	mov	sl, r7
   17e90:	str	r3, [sp, #28]
   17e94:	add	r3, fp, #12
   17e98:	str	r3, [sp, #44]	; 0x2c
   17e9c:	ldr	r6, [sl, #8]
   17ea0:	ldr	r5, [sl, #12]
   17ea4:	cmp	r5, #0
   17ea8:	bne	17eb4 <argp_parse@@Base+0x1dec>
   17eac:	cmp	r6, #0
   17eb0:	beq	181b0 <argp_parse@@Base+0x20e8>
   17eb4:	ldr	r7, [sp, #4]
   17eb8:	mov	r0, #28
   17ebc:	ldr	r4, [r7, #16]
   17ec0:	bl	17794 <argp_parse@@Base+0x16cc>
   17ec4:	subs	r1, r0, #0
   17ec8:	beq	17f08 <argp_parse@@Base+0x1e40>
   17ecc:	ldr	r3, [sp]
   17ed0:	sub	r4, sl, r4
   17ed4:	asr	r4, r4, #4
   17ed8:	str	r6, [r1]
   17edc:	ldr	r2, [fp, #12]
   17ee0:	str	r1, [fp, #12]
   17ee4:	strd	r4, [r1, #4]
   17ee8:	cmp	r3, #0
   17eec:	str	r3, [r1, #12]
   17ef0:	ldrne	r3, [r3, #20]
   17ef4:	str	r7, [r1, #16]
   17ef8:	ldreq	r3, [sp]
   17efc:	str	r2, [r1, #24]
   17f00:	addne	r3, r3, #1
   17f04:	str	r3, [r1, #20]
   17f08:	ldr	r0, [sl]
   17f0c:	bl	17bc4 <argp_parse@@Base+0x1afc>
   17f10:	ldr	r3, [fp, #12]
   17f14:	mov	r6, r0
   17f18:	cmp	r3, #0
   17f1c:	bne	17f28 <argp_parse@@Base+0x1e60>
   17f20:	b	181b8 <argp_parse@@Base+0x20f0>
   17f24:	mov	r3, r2
   17f28:	ldr	r2, [r3, #24]
   17f2c:	cmp	r2, #0
   17f30:	bne	17f24 <argp_parse@@Base+0x1e5c>
   17f34:	add	r3, r3, #24
   17f38:	ldr	r2, [r6, #4]
   17f3c:	ldr	r1, [r6, #12]
   17f40:	cmp	r2, #0
   17f44:	str	r1, [r3]
   17f48:	mov	r3, #0
   17f4c:	str	r3, [r6, #12]
   17f50:	beq	17f78 <argp_parse@@Base+0x1eb0>
   17f54:	ldr	r3, [fp, #4]
   17f58:	cmp	r3, #0
   17f5c:	bne	17fbc <argp_parse@@Base+0x1ef4>
   17f60:	ldr	r1, [r6]
   17f64:	str	r2, [fp, #4]
   17f68:	ldr	r2, [r6, #8]
   17f6c:	str	r1, [fp]
   17f70:	str	r2, [fp, #8]
   17f74:	str	r3, [r6, #4]
   17f78:	mov	r0, r6
   17f7c:	bl	17828 <argp_parse@@Base+0x1760>
   17f80:	ldr	r3, [sl, #16]!
   17f84:	cmp	r3, #0
   17f88:	bne	17e9c <argp_parse@@Base+0x1dd4>
   17f8c:	mov	r0, fp
   17f90:	add	sp, sp, #52	; 0x34
   17f94:	ldrd	r4, [sp]
   17f98:	ldrd	r6, [sp, #8]
   17f9c:	ldrd	r8, [sp, #16]
   17fa0:	ldrd	sl, [sp, #24]
   17fa4:	add	sp, sp, #32
   17fa8:	pop	{pc}		; (ldr pc, [sp], #4)
   17fac:	str	r4, [r5, #-28]	; 0xffffffe4
   17fb0:	str	r3, [r5, #-24]	; 0xffffffe8
   17fb4:	str	r6, [r5, #-20]	; 0xffffffec
   17fb8:	b	17d50 <argp_parse@@Base+0x1c88>
   17fbc:	add	r3, r2, r3
   17fc0:	rsb	r0, r3, r3, lsl #3
   17fc4:	str	r3, [sp, #12]
   17fc8:	lsl	r0, r0, #2
   17fcc:	bl	17794 <argp_parse@@Base+0x16cc>
   17fd0:	mov	r4, r0
   17fd4:	ldr	r0, [fp, #8]
   17fd8:	str	r4, [sp, #8]
   17fdc:	bl	119dc <strlen@plt>
   17fe0:	mov	r8, r0
   17fe4:	ldr	r0, [r6, #8]
   17fe8:	bl	119dc <strlen@plt>
   17fec:	add	r0, r8, r0
   17ff0:	add	r0, r0, #1
   17ff4:	bl	17794 <argp_parse@@Base+0x16cc>
   17ff8:	cmp	r4, #0
   17ffc:	cmpne	r0, #0
   18000:	mov	r9, r0
   18004:	beq	18210 <argp_parse@@Base+0x2148>
   18008:	ldr	r3, [sp, #12]
   1800c:	ldr	r2, [sp, #28]
   18010:	cmp	r3, r2
   18014:	bhi	1824c <argp_parse@@Base+0x2184>
   18018:	ldm	fp, {r1, r5}
   1801c:	ldr	r0, [sp, #8]
   18020:	rsb	r4, r5, r5, lsl #3
   18024:	str	r1, [sp, #24]
   18028:	lsl	r4, r4, #2
   1802c:	mov	r2, r4
   18030:	bl	119a0 <mempcpy@plt>
   18034:	ldm	r6, {r1, r3}
   18038:	rsb	r2, r3, r3, lsl #3
   1803c:	str	r3, [sp, #16]
   18040:	lsl	r2, r2, #2
   18044:	bl	11808 <memcpy@plt>
   18048:	ldr	r7, [fp, #8]
   1804c:	mov	r2, r8
   18050:	mov	r0, r9
   18054:	mov	r1, r7
   18058:	bl	11808 <memcpy@plt>
   1805c:	cmp	r5, #0
   18060:	ldr	r3, [sp, #16]
   18064:	beq	181c0 <argp_parse@@Base+0x20f8>
   18068:	ldr	r1, [sp, #8]
   1806c:	subs	r5, r5, #1
   18070:	add	r1, r1, #28
   18074:	ldr	r2, [r1, #-20]	; 0xffffffec
   18078:	sub	r2, r2, r7
   1807c:	add	r2, r9, r2
   18080:	str	r2, [r1, #-20]	; 0xffffffec
   18084:	bne	1806c <argp_parse@@Base+0x1fa4>
   18088:	ldr	r2, [sp, #8]
   1808c:	add	r4, r2, r4
   18090:	add	r2, r9, r8
   18094:	cmp	r3, #0
   18098:	ldr	r1, [r6, #8]
   1809c:	str	r2, [sp, #16]
   180a0:	beq	181c8 <argp_parse@@Base+0x2100>
   180a4:	mov	r8, r2
   180a8:	add	r4, r4, #28
   180ac:	str	r6, [sp, #32]
   180b0:	sub	r2, r2, #1
   180b4:	strd	sl, [sp, #36]	; 0x24
   180b8:	mov	sl, r1
   180bc:	mov	fp, r3
   180c0:	str	r2, [sp, #20]
   180c4:	str	r8, [r4, #-20]	; 0xffffffec
   180c8:	ldr	r6, [r4, #-24]	; 0xffffffe8
   180cc:	ldr	r7, [r4, #-28]	; 0xffffffe4
   180d0:	cmp	r6, #0
   180d4:	beq	18128 <argp_parse@@Base+0x2060>
   180d8:	ldr	r3, [r7, #12]
   180dc:	tst	r3, #8
   180e0:	bne	1811c <argp_parse@@Base+0x2054>
   180e4:	ldr	r5, [r7, #4]
   180e8:	sub	r3, r5, #1
   180ec:	cmp	r3, #254	; 0xfe
   180f0:	bhi	1811c <argp_parse@@Base+0x2054>
   180f4:	bl	119ac <__ctype_b_loc@plt>
   180f8:	ldr	r1, [r0]
   180fc:	lsl	r2, r5, #1
   18100:	ldrb	r3, [sl]
   18104:	ldrh	r2, [r1, r2]
   18108:	sub	r5, r3, r5
   1810c:	clz	r5, r5
   18110:	lsr	r5, r5, #5
   18114:	ands	r2, r5, r2, lsr #14
   18118:	bne	1816c <argp_parse@@Base+0x20a4>
   1811c:	subs	r6, r6, #1
   18120:	add	r7, r7, #24
   18124:	bne	180d8 <argp_parse@@Base+0x2010>
   18128:	subs	fp, fp, #1
   1812c:	add	r4, r4, #28
   18130:	bne	180c4 <argp_parse@@Base+0x1ffc>
   18134:	add	r6, sp, #32
   18138:	ldm	r6, {r6, sl, fp}
   1813c:	mov	r3, #0
   18140:	strb	r3, [r8]
   18144:	ldr	r0, [sp, #24]
   18148:	bl	170ac <argp_parse@@Base+0xfe4>
   1814c:	ldr	r0, [fp, #8]
   18150:	bl	170ac <argp_parse@@Base+0xfe4>
   18154:	ldr	r3, [sp, #8]
   18158:	str	r3, [fp]
   1815c:	ldr	r3, [sp, #12]
   18160:	str	r9, [fp, #8]
   18164:	str	r3, [fp, #4]
   18168:	b	17f78 <argp_parse@@Base+0x1eb0>
   1816c:	ldr	r2, [sp, #16]
   18170:	cmp	r9, r2
   18174:	bcs	181a4 <argp_parse@@Base+0x20dc>
   18178:	ldrb	r2, [r9]
   1817c:	cmp	r2, r3
   18180:	beq	181a8 <argp_parse@@Base+0x20e0>
   18184:	mov	r2, r9
   18188:	ldr	r0, [sp, #20]
   1818c:	b	1819c <argp_parse@@Base+0x20d4>
   18190:	ldrb	r1, [r2, #1]!
   18194:	cmp	r1, r3
   18198:	beq	181a8 <argp_parse@@Base+0x20e0>
   1819c:	cmp	r2, r0
   181a0:	bne	18190 <argp_parse@@Base+0x20c8>
   181a4:	strb	r3, [r8], #1
   181a8:	add	sl, sl, #1
   181ac:	b	1811c <argp_parse@@Base+0x2054>
   181b0:	ldr	r1, [sp]
   181b4:	b	17f08 <argp_parse@@Base+0x1e40>
   181b8:	ldr	r3, [sp, #44]	; 0x2c
   181bc:	b	17f38 <argp_parse@@Base+0x1e70>
   181c0:	ldr	r4, [sp, #8]
   181c4:	b	18090 <argp_parse@@Base+0x1fc8>
   181c8:	ldr	r8, [sp, #16]
   181cc:	b	1813c <argp_parse@@Base+0x2074>
   181d0:	movw	r3, #54284	; 0xd40c
   181d4:	movt	r3, #1
   181d8:	movw	r1, #54452	; 0xd4b4
   181dc:	movt	r1, #1
   181e0:	movw	r0, #54484	; 0xd4d4
   181e4:	movt	r0, #1
   181e8:	movw	r2, #474	; 0x1da
   181ec:	bl	11c28 <__assert_fail@plt>
   181f0:	movw	r3, #54284	; 0xd40c
   181f4:	movt	r3, #1
   181f8:	movw	r1, #54452	; 0xd4b4
   181fc:	movt	r1, #1
   18200:	movw	r0, #54520	; 0xd4f8
   18204:	movt	r0, #1
   18208:	mov	r2, #476	; 0x1dc
   1820c:	bl	11c28 <__assert_fail@plt>
   18210:	movw	r1, #54452	; 0xd4b4
   18214:	movt	r1, #1
   18218:	ldr	r3, [pc, #104]	; 18288 <argp_parse@@Base+0x21c0>
   1821c:	movw	r0, #54580	; 0xd534
   18220:	movt	r0, #1
   18224:	movw	r2, #970	; 0x3ca
   18228:	bl	11c28 <__assert_fail@plt>
   1822c:	movw	r3, #54284	; 0xd40c
   18230:	movt	r3, #1
   18234:	movw	r1, #54452	; 0xd4b4
   18238:	movt	r1, #1
   1823c:	movw	r0, #54464	; 0xd4c0
   18240:	movt	r0, #1
   18244:	movw	r2, #450	; 0x1c2
   18248:	bl	11c28 <__assert_fail@plt>
   1824c:	movw	r1, #54452	; 0xd4b4
   18250:	movt	r1, #1
   18254:	ldr	r3, [pc, #44]	; 18288 <argp_parse@@Base+0x21c0>
   18258:	movw	r0, #54608	; 0xd550
   1825c:	movt	r0, #1
   18260:	mov	r2, #972	; 0x3cc
   18264:	bl	11c28 <__assert_fail@plt>
   18268:	movw	r3, #54284	; 0xd40c
   1826c:	movt	r3, #1
   18270:	movw	r1, #54452	; 0xd4b4
   18274:	movt	r1, #1
   18278:	movw	r0, #54468	; 0xd4c4
   1827c:	movt	r0, #1
   18280:	mov	r2, #460	; 0x1cc
   18284:	bl	11c28 <__assert_fail@plt>
   18288:	andeq	sp, r1, r8, lsl r4
   1828c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18290:	ldr	r5, [r0, #4]
   18294:	strd	r6, [sp, #8]
   18298:	strd	r8, [sp, #16]
   1829c:	strd	sl, [sp, #24]
   182a0:	str	lr, [sp, #32]
   182a4:	sub	sp, sp, #12
   182a8:	cmp	r5, #0
   182ac:	ldr	r7, [r0]
   182b0:	ldr	r6, [r0, #8]
   182b4:	beq	18384 <argp_parse@@Base+0x22bc>
   182b8:	mov	sl, r3
   182bc:	mov	r4, r7
   182c0:	stm	sp, {r1, r2}
   182c4:	ldr	fp, [r4, #12]
   182c8:	ands	r8, fp, #8
   182cc:	movne	r0, #1
   182d0:	movne	r8, #0
   182d4:	bne	18310 <argp_parse@@Base+0x2248>
   182d8:	ldr	r9, [r4, #4]
   182dc:	sub	r1, r9, #1
   182e0:	cmp	r1, #254	; 0xfe
   182e4:	bhi	1830c <argp_parse@@Base+0x2244>
   182e8:	bl	119ac <__ctype_b_loc@plt>
   182ec:	ldr	r0, [r0]
   182f0:	lsl	r1, r9, #1
   182f4:	ldrh	r1, [r0, r1]
   182f8:	tst	r1, #16384	; 0x4000
   182fc:	beq	1830c <argp_parse@@Base+0x2244>
   18300:	ldrb	r1, [r6]
   18304:	cmp	r1, r9
   18308:	beq	18344 <argp_parse@@Base+0x227c>
   1830c:	mov	r0, #1
   18310:	subs	r5, r5, #1
   18314:	add	r4, r4, #24
   18318:	moveq	r0, #0
   1831c:	cmp	r0, #0
   18320:	bne	182c4 <argp_parse@@Base+0x21fc>
   18324:	mov	r0, r8
   18328:	add	sp, sp, #12
   1832c:	ldrd	r4, [sp]
   18330:	ldrd	r6, [sp, #8]
   18334:	ldrd	r8, [sp, #16]
   18338:	ldrd	sl, [sp, #24]
   1833c:	add	sp, sp, #32
   18340:	pop	{pc}		; (ldr pc, [sp], #4)
   18344:	tst	fp, #4
   18348:	moveq	r7, r4
   1834c:	tst	fp, #2
   18350:	movne	r0, #1
   18354:	bne	1837c <argp_parse@@Base+0x22b4>
   18358:	mov	r3, sl
   1835c:	mov	r1, r7
   18360:	ldr	ip, [sp]
   18364:	mov	r0, r4
   18368:	ldr	r2, [sp, #4]
   1836c:	blx	ip
   18370:	mov	r8, r0
   18374:	clz	r0, r0
   18378:	lsr	r0, r0, #5
   1837c:	add	r6, r6, #1
   18380:	b	18310 <argp_parse@@Base+0x2248>
   18384:	mov	r8, r5
   18388:	b	18324 <argp_parse@@Base+0x225c>
   1838c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18390:	strd	r6, [sp, #8]
   18394:	strd	r8, [sp, #16]
   18398:	strd	sl, [sp, #24]
   1839c:	add	fp, sp, #32
   183a0:	str	lr, [sp, #32]
   183a4:	sub	sp, sp, #20
   183a8:	ldr	r5, [r0, #4]
   183ac:	cmp	r5, #0
   183b0:	beq	18500 <argp_parse@@Base+0x2438>
   183b4:	mov	r6, r0
   183b8:	ldr	r0, [r0, #8]
   183bc:	mov	r9, r1
   183c0:	bl	119dc <strlen@plt>
   183c4:	add	r3, r0, #8
   183c8:	ldr	r4, [r6]
   183cc:	movw	r7, #31040	; 0x7940
   183d0:	movt	r7, #1
   183d4:	bic	r3, r3, #7
   183d8:	sub	sp, sp, r3
   183dc:	mov	r8, sp
   183e0:	str	r8, [fp, #-40]	; 0xffffffd8
   183e4:	ldr	r2, [r4, #20]
   183e8:	mov	r0, r4
   183ec:	sub	r3, fp, #40	; 0x28
   183f0:	mov	r1, r7
   183f4:	add	r4, r4, #28
   183f8:	ldr	r2, [r2, #24]
   183fc:	bl	1828c <argp_parse@@Base+0x21c4>
   18400:	subs	r5, r5, #1
   18404:	bne	183e4 <argp_parse@@Base+0x231c>
   18408:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1840c:	cmp	r3, r8
   18410:	bhi	18540 <argp_parse@@Base+0x2478>
   18414:	ldrd	r4, [r6]
   18418:	cmp	r5, #0
   1841c:	beq	18500 <argp_parse@@Base+0x2438>
   18420:	movw	r7, #35464	; 0x8a88
   18424:	movt	r7, #1
   18428:	ldr	r2, [r4, #20]
   1842c:	mov	r0, r4
   18430:	mov	r3, r9
   18434:	mov	r1, r7
   18438:	add	r4, r4, #28
   1843c:	ldr	r2, [r2, #24]
   18440:	bl	1828c <argp_parse@@Base+0x21c4>
   18444:	subs	r5, r5, #1
   18448:	bne	18428 <argp_parse@@Base+0x2360>
   1844c:	ldm	r6, {r7, r8}
   18450:	cmp	r8, #0
   18454:	beq	18500 <argp_parse@@Base+0x2438>
   18458:	movw	r3, #54668	; 0xd58c
   1845c:	movt	r3, #1
   18460:	movw	sl, #54684	; 0xd59c
   18464:	movt	sl, #1
   18468:	add	r7, r7, #28
   1846c:	str	r3, [fp, #-48]	; 0xffffffd0
   18470:	movw	r3, #54696	; 0xd5a8
   18474:	movt	r3, #1
   18478:	str	r3, [fp, #-52]	; 0xffffffcc
   1847c:	ldr	r6, [r7, #-28]	; 0xffffffe4
   18480:	ldr	r5, [r7, #-24]	; 0xffffffe8
   18484:	cmp	r5, #0
   18488:	movne	r4, r6
   1848c:	beq	184f4 <argp_parse@@Base+0x242c>
   18490:	ldr	r2, [r4]
   18494:	cmp	r2, #0
   18498:	beq	184e8 <argp_parse@@Base+0x2420>
   1849c:	ldr	r1, [r4, #12]
   184a0:	tst	r1, #4
   184a4:	moveq	r6, r4
   184a8:	tst	r1, #2
   184ac:	bne	184e8 <argp_parse@@Base+0x2420>
   184b0:	ldr	r3, [r4, #8]
   184b4:	ldr	r0, [r6, #12]
   184b8:	cmp	r3, #0
   184bc:	orr	r1, r1, r0
   184c0:	and	r0, r1, #16
   184c4:	beq	1851c <argp_parse@@Base+0x2454>
   184c8:	cmp	r0, #0
   184cc:	bne	184e8 <argp_parse@@Base+0x2420>
   184d0:	tst	r1, #1
   184d4:	movne	r0, r9
   184d8:	ldrne	r1, [fp, #-48]	; 0xffffffd0
   184dc:	moveq	r1, sl
   184e0:	moveq	r0, r9
   184e4:	bl	1c144 <argp_error@@Base+0x14e8>
   184e8:	subs	r5, r5, #1
   184ec:	add	r4, r4, #24
   184f0:	bne	18490 <argp_parse@@Base+0x23c8>
   184f4:	subs	r8, r8, #1
   184f8:	add	r7, r7, #28
   184fc:	bne	1847c <argp_parse@@Base+0x23b4>
   18500:	sub	sp, fp, #32
   18504:	ldrd	r4, [sp]
   18508:	ldrd	r6, [sp, #8]
   1850c:	ldrd	r8, [sp, #16]
   18510:	ldrd	sl, [sp, #24]
   18514:	add	sp, sp, #32
   18518:	pop	{pc}		; (ldr pc, [sp], #4)
   1851c:	cmp	r0, #0
   18520:	bne	184e8 <argp_parse@@Base+0x2420>
   18524:	ldr	r3, [r6, #8]
   18528:	cmp	r3, #0
   1852c:	bne	184d0 <argp_parse@@Base+0x2408>
   18530:	mov	r0, r9
   18534:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18538:	bl	1c144 <argp_error@@Base+0x14e8>
   1853c:	b	184e8 <argp_parse@@Base+0x2420>
   18540:	add	r0, r3, #1
   18544:	mov	r2, r8
   18548:	movw	r1, #54660	; 0xd584
   1854c:	movt	r1, #1
   18550:	str	r0, [fp, #-40]	; 0xffffffd8
   18554:	mov	r0, r9
   18558:	strb	r5, [r3]
   1855c:	bl	1c144 <argp_error@@Base+0x14e8>
   18560:	ldrd	r4, [r6]
   18564:	cmp	r5, #0
   18568:	bne	18420 <argp_parse@@Base+0x2358>
   1856c:	b	18500 <argp_parse@@Base+0x2438>
   18570:	ldr	r3, [r0, #16]
   18574:	strd	r4, [sp, #-28]!	; 0xffffffe4
   18578:	strd	r6, [sp, #8]
   1857c:	strd	r8, [sp, #16]
   18580:	str	lr, [sp, #24]
   18584:	sub	sp, sp, #12
   18588:	cmp	r3, #0
   1858c:	movne	r2, r3
   18590:	bne	1859c <argp_parse@@Base+0x24d4>
   18594:	b	1889c <argp_parse@@Base+0x27d4>
   18598:	mov	r2, ip
   1859c:	ldr	ip, [r2, #12]
   185a0:	cmp	ip, #0
   185a4:	bne	18598 <argp_parse@@Base+0x24d0>
   185a8:	ldr	lr, [r2, #8]
   185ac:	ldr	r2, [r1, #16]
   185b0:	cmp	r2, #0
   185b4:	movne	ip, r2
   185b8:	bne	185c4 <argp_parse@@Base+0x24fc>
   185bc:	b	18894 <argp_parse@@Base+0x27cc>
   185c0:	mov	ip, r4
   185c4:	ldr	r4, [ip, #12]
   185c8:	cmp	r4, #0
   185cc:	bne	185c0 <argp_parse@@Base+0x24f8>
   185d0:	ldr	r4, [ip, #8]
   185d4:	mvn	ip, r4
   185d8:	lsr	ip, ip, #31
   185dc:	cmp	ip, lr, lsr #31
   185e0:	subne	r4, lr, r4
   185e4:	subeq	r4, r4, lr
   185e8:	cmp	r4, #0
   185ec:	bne	18654 <argp_parse@@Base+0x258c>
   185f0:	adds	r4, r2, #0
   185f4:	movne	r4, #1
   185f8:	cmp	r3, #0
   185fc:	rsbeq	r4, r4, #0
   18600:	rsbne	r4, r4, #1
   18604:	cmp	r4, #0
   18608:	bne	18654 <argp_parse@@Base+0x258c>
   1860c:	cmp	r3, #0
   18610:	mov	r5, r1
   18614:	mov	r6, r0
   18618:	beq	186ac <argp_parse@@Base+0x25e4>
   1861c:	ldr	r0, [r2, #20]
   18620:	ldr	ip, [r3, #20]
   18624:	cmp	ip, r0
   18628:	bgt	18670 <argp_parse@@Base+0x25a8>
   1862c:	bge	18698 <argp_parse@@Base+0x25d0>
   18630:	ldr	r2, [r2, #12]
   18634:	ldr	r1, [r2, #20]
   18638:	cmp	ip, r1
   1863c:	blt	18630 <argp_parse@@Base+0x2568>
   18640:	mov	r1, r2
   18644:	mov	r0, r3
   18648:	bl	1788c <argp_parse@@Base+0x17c4>
   1864c:	subs	r4, r0, #0
   18650:	mvneq	r4, #0
   18654:	mov	r0, r4
   18658:	add	sp, sp, #12
   1865c:	ldrd	r4, [sp]
   18660:	ldrd	r6, [sp, #8]
   18664:	ldrd	r8, [sp, #16]
   18668:	add	sp, sp, #24
   1866c:	pop	{pc}		; (ldr pc, [sp], #4)
   18670:	ldr	r3, [r3, #12]
   18674:	ldr	r1, [r3, #20]
   18678:	cmp	r0, r1
   1867c:	blt	18670 <argp_parse@@Base+0x25a8>
   18680:	mov	r1, r2
   18684:	mov	r0, r3
   18688:	bl	1788c <argp_parse@@Base+0x17c4>
   1868c:	subs	r4, r0, #0
   18690:	moveq	r4, #1
   18694:	b	18654 <argp_parse@@Base+0x258c>
   18698:	mov	r1, r2
   1869c:	mov	r0, r3
   186a0:	bl	1788c <argp_parse@@Base+0x17c4>
   186a4:	subs	r4, r0, #0
   186a8:	bne	18654 <argp_parse@@Base+0x258c>
   186ac:	ldr	r4, [r5, #12]
   186b0:	ldr	r3, [r6, #12]
   186b4:	mvn	r2, r4
   186b8:	lsr	r2, r2, #31
   186bc:	cmp	r2, r3, lsr #31
   186c0:	subne	r4, r3, r4
   186c4:	subeq	r4, r4, r3
   186c8:	cmp	r4, #0
   186cc:	bne	18654 <argp_parse@@Base+0x258c>
   186d0:	ldr	r7, [r6]
   186d4:	ldr	r2, [r6, #4]
   186d8:	cmp	r2, #0
   186dc:	beq	18708 <argp_parse@@Base+0x2640>
   186e0:	add	r3, r7, #24
   186e4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   186e8:	cmp	r1, #0
   186ec:	beq	186fc <argp_parse@@Base+0x2634>
   186f0:	ldr	r0, [r3, #-12]
   186f4:	tst	r0, #2
   186f8:	beq	188a4 <argp_parse@@Base+0x27dc>
   186fc:	subs	r2, r2, #1
   18700:	add	r3, r3, #24
   18704:	bne	186e4 <argp_parse@@Base+0x261c>
   18708:	mov	lr, #0
   1870c:	ldr	ip, [r5]
   18710:	ldr	r2, [r5, #4]
   18714:	str	lr, [sp]
   18718:	cmp	r2, lr
   1871c:	beq	18900 <argp_parse@@Base+0x2838>
   18720:	add	r3, ip, #24
   18724:	ldr	r1, [r3, #-24]	; 0xffffffe8
   18728:	cmp	r1, #0
   1872c:	beq	1873c <argp_parse@@Base+0x2674>
   18730:	ldr	r0, [r3, #-12]
   18734:	tst	r0, #2
   18738:	beq	1874c <argp_parse@@Base+0x2684>
   1873c:	subs	r2, r2, #1
   18740:	add	r3, r3, #24
   18744:	bne	18724 <argp_parse@@Base+0x265c>
   18748:	mov	r1, r2
   1874c:	ldr	r3, [r7, #12]
   18750:	str	r1, [sp, #4]
   18754:	ands	r3, lr, r3, lsr #3
   18758:	bne	188c0 <argp_parse@@Base+0x27f8>
   1875c:	ldr	r3, [ip, #12]
   18760:	tst	r3, #8
   18764:	beq	1878c <argp_parse@@Base+0x26c4>
   18768:	ldr	r3, [sp, #4]
   1876c:	cmp	r3, #0
   18770:	beq	1878c <argp_parse@@Base+0x26c4>
   18774:	add	r0, sp, #4
   18778:	bl	179e4 <argp_parse@@Base+0x191c>
   1877c:	cmp	r0, #0
   18780:	subne	r4, r4, #1
   18784:	cmp	r4, #0
   18788:	bne	18654 <argp_parse@@Base+0x258c>
   1878c:	ldr	r2, [r6, #20]
   18790:	mov	r0, r6
   18794:	mov	r3, #0
   18798:	movw	r1, #31116	; 0x798c
   1879c:	movt	r1, #1
   187a0:	ldr	r2, [r2, #24]
   187a4:	bl	1828c <argp_parse@@Base+0x21c4>
   187a8:	ldr	r2, [r5, #20]
   187ac:	uxtb	r6, r0
   187b0:	movw	r1, #31116	; 0x798c
   187b4:	movt	r1, #1
   187b8:	mov	r0, r5
   187bc:	mov	r3, #0
   187c0:	ldr	r2, [r2, #24]
   187c4:	bl	1828c <argp_parse@@Base+0x21c4>
   187c8:	cmp	r6, #0
   187cc:	uxtb	r5, r0
   187d0:	movne	r7, r6
   187d4:	lslne	r4, r6, #2
   187d8:	bne	187f4 <argp_parse@@Base+0x272c>
   187dc:	ldr	r3, [sp]
   187e0:	cmp	r3, #0
   187e4:	ldrbne	r7, [r3]
   187e8:	moveq	r4, r6
   187ec:	moveq	r7, r6
   187f0:	lslne	r4, r7, #2
   187f4:	cmp	r5, #0
   187f8:	movne	r8, r5
   187fc:	lslne	r9, r5, #2
   18800:	bne	1881c <argp_parse@@Base+0x2754>
   18804:	ldr	r3, [sp, #4]
   18808:	cmp	r3, #0
   1880c:	ldrbne	r8, [r3]
   18810:	moveq	r9, r5
   18814:	moveq	r8, r5
   18818:	lslne	r9, r8, #2
   1881c:	bl	11988 <__ctype_tolower_loc@plt>
   18820:	ldr	r3, [r0]
   18824:	ldr	r4, [r3, r4]
   18828:	ldr	r3, [r3, r9]
   1882c:	subs	r4, r4, r3
   18830:	bne	18654 <argp_parse@@Base+0x258c>
   18834:	subs	r4, r8, r7
   18838:	bne	18654 <argp_parse@@Base+0x258c>
   1883c:	adds	r4, r5, #0
   18840:	movne	r4, #1
   18844:	cmp	r6, #0
   18848:	rsbeq	r4, r4, #0
   1884c:	rsbne	r4, r4, #1
   18850:	cmp	r4, #0
   18854:	bne	18654 <argp_parse@@Base+0x258c>
   18858:	cmp	r6, #0
   1885c:	bne	18654 <argp_parse@@Base+0x258c>
   18860:	ldrd	r0, [sp]
   18864:	adds	r4, r1, #0
   18868:	movne	r4, #1
   1886c:	cmp	r0, #0
   18870:	rsbeq	r4, r4, #0
   18874:	rsbne	r4, r4, #1
   18878:	cmp	r4, #0
   1887c:	bne	18654 <argp_parse@@Base+0x258c>
   18880:	cmp	r0, #0
   18884:	beq	18654 <argp_parse@@Base+0x258c>
   18888:	bl	118c8 <strcasecmp@plt>
   1888c:	mov	r4, r0
   18890:	b	18654 <argp_parse@@Base+0x258c>
   18894:	ldr	r4, [r1, #12]
   18898:	b	185d4 <argp_parse@@Base+0x250c>
   1889c:	ldr	lr, [r0, #12]
   188a0:	b	185ac <argp_parse@@Base+0x24e4>
   188a4:	str	r1, [sp]
   188a8:	ldr	r2, [r5, #4]
   188ac:	ldr	ip, [r5]
   188b0:	cmp	r2, #0
   188b4:	beq	18908 <argp_parse@@Base+0x2840>
   188b8:	mov	lr, #1
   188bc:	b	18720 <argp_parse@@Base+0x2658>
   188c0:	mov	r0, sp
   188c4:	bl	179e4 <argp_parse@@Base+0x191c>
   188c8:	cmp	r0, #0
   188cc:	beq	188f8 <argp_parse@@Base+0x2830>
   188d0:	ldr	r3, [r5]
   188d4:	ldr	r3, [r3, #12]
   188d8:	tst	r3, #8
   188dc:	moveq	r4, #1
   188e0:	beq	18654 <argp_parse@@Base+0x258c>
   188e4:	ldr	r3, [sp, #4]
   188e8:	mov	r4, #1
   188ec:	cmp	r3, #0
   188f0:	beq	18654 <argp_parse@@Base+0x258c>
   188f4:	b	18774 <argp_parse@@Base+0x26ac>
   188f8:	ldr	ip, [r5]
   188fc:	b	1875c <argp_parse@@Base+0x2694>
   18900:	str	r2, [sp, #4]
   18904:	b	1878c <argp_parse@@Base+0x26c4>
   18908:	mov	r1, r2
   1890c:	mov	lr, #1
   18910:	b	1874c <argp_parse@@Base+0x2684>
   18914:	strd	r4, [sp, #-16]!
   18918:	mov	r5, r1
   1891c:	mov	r4, r0
   18920:	ldr	r2, [r0, #16]
   18924:	ldr	r1, [r0, #24]
   18928:	ldr	r3, [r0, #28]
   1892c:	str	r6, [sp, #8]
   18930:	str	lr, [sp, #12]
   18934:	sub	r3, r3, r1
   18938:	cmp	r3, r2
   1893c:	bhi	189a4 <argp_parse@@Base+0x28dc>
   18940:	ldr	r1, [r4, #20]
   18944:	mov	r6, #32
   18948:	cmp	r1, #0
   1894c:	subge	r5, r5, r1
   18950:	b	18980 <argp_parse@@Base+0x28b8>
   18954:	ldr	r3, [r4, #28]
   18958:	ldr	r2, [r4, #32]
   1895c:	cmp	r3, r2
   18960:	bcc	18974 <argp_parse@@Base+0x28ac>
   18964:	bl	1c124 <argp_error@@Base+0x14c8>
   18968:	cmp	r0, #0
   1896c:	beq	18980 <argp_parse@@Base+0x28b8>
   18970:	ldr	r3, [r4, #28]
   18974:	add	r2, r3, #1
   18978:	str	r2, [r4, #28]
   1897c:	strb	r6, [r3]
   18980:	cmp	r5, #0
   18984:	mov	r1, #1
   18988:	mov	r0, r4
   1898c:	sub	r5, r5, #1
   18990:	bgt	18954 <argp_parse@@Base+0x288c>
   18994:	ldrd	r4, [sp]
   18998:	ldr	r6, [sp, #8]
   1899c:	add	sp, sp, #12
   189a0:	pop	{pc}		; (ldr pc, [sp], #4)
   189a4:	bl	1bab8 <argp_error@@Base+0xe5c>
   189a8:	b	18940 <argp_parse@@Base+0x2878>
   189ac:	ldrd	r2, [r0, #24]
   189b0:	strd	r4, [sp, #-16]!
   189b4:	mov	r5, r1
   189b8:	mov	r4, r0
   189bc:	ldr	r1, [r0, #16]
   189c0:	str	r6, [sp, #8]
   189c4:	str	lr, [sp, #12]
   189c8:	sub	r2, r3, r2
   189cc:	cmp	r2, r1
   189d0:	movls	ip, r3
   189d4:	bhi	18a78 <argp_parse@@Base+0x29b0>
   189d8:	ldr	r0, [r4, #8]
   189dc:	ldr	r1, [r4, #20]
   189e0:	ldr	r2, [r4, #32]
   189e4:	cmp	r1, #0
   189e8:	addge	r5, r5, r1
   189ec:	cmp	r5, r0
   189f0:	bcc	18a38 <argp_parse@@Base+0x2970>
   189f4:	cmp	r3, r2
   189f8:	bcs	18a1c <argp_parse@@Base+0x2954>
   189fc:	add	r1, r3, #1
   18a00:	mov	r2, #10
   18a04:	str	r1, [r4, #28]
   18a08:	strb	r2, [r3]
   18a0c:	ldrd	r4, [sp]
   18a10:	ldr	r6, [sp, #8]
   18a14:	add	sp, sp, #12
   18a18:	pop	{pc}		; (ldr pc, [sp], #4)
   18a1c:	mov	r1, #1
   18a20:	mov	r0, r4
   18a24:	bl	1c124 <argp_error@@Base+0x14c8>
   18a28:	cmp	r0, #0
   18a2c:	beq	18a0c <argp_parse@@Base+0x2944>
   18a30:	ldr	r3, [r4, #28]
   18a34:	b	189fc <argp_parse@@Base+0x2934>
   18a38:	cmp	r3, r2
   18a3c:	bcc	18a58 <argp_parse@@Base+0x2990>
   18a40:	mov	r1, #1
   18a44:	mov	r0, r4
   18a48:	bl	1c124 <argp_error@@Base+0x14c8>
   18a4c:	cmp	r0, #0
   18a50:	beq	18a0c <argp_parse@@Base+0x2944>
   18a54:	ldr	ip, [r4, #28]
   18a58:	add	r2, ip, #1
   18a5c:	mov	r3, #32
   18a60:	str	r2, [r4, #28]
   18a64:	strb	r3, [ip]
   18a68:	ldrd	r4, [sp]
   18a6c:	ldr	r6, [sp, #8]
   18a70:	add	sp, sp, #12
   18a74:	pop	{pc}		; (ldr pc, [sp], #4)
   18a78:	bl	1bab8 <argp_error@@Base+0xe5c>
   18a7c:	ldr	r3, [r4, #28]
   18a80:	mov	ip, r3
   18a84:	b	189d8 <argp_parse@@Base+0x2910>
   18a88:	strd	r4, [sp, #-16]!
   18a8c:	ldr	r5, [r0, #8]
   18a90:	str	r6, [sp, #8]
   18a94:	str	lr, [sp, #12]
   18a98:	cmp	r5, #0
   18a9c:	beq	18af0 <argp_parse@@Base+0x2a28>
   18aa0:	ldr	r2, [r0, #12]
   18aa4:	ldr	r1, [r1, #12]
   18aa8:	orr	r2, r2, r1
   18aac:	tst	r2, #16
   18ab0:	bne	18adc <argp_parse@@Base+0x2a14>
   18ab4:	tst	r2, #1
   18ab8:	mov	r6, r3
   18abc:	mov	r4, r0
   18ac0:	beq	18b00 <argp_parse@@Base+0x2a38>
   18ac4:	movw	r1, #54704	; 0xd5b0
   18ac8:	movt	r1, #1
   18acc:	ldr	r2, [r4, #4]
   18ad0:	mov	r3, r5
   18ad4:	mov	r0, r6
   18ad8:	bl	1c144 <argp_error@@Base+0x14e8>
   18adc:	ldrd	r4, [sp]
   18ae0:	mov	r0, #0
   18ae4:	ldr	r6, [sp, #8]
   18ae8:	add	sp, sp, #12
   18aec:	pop	{pc}		; (ldr pc, [sp], #4)
   18af0:	ldr	r5, [r1, #8]
   18af4:	cmp	r5, #0
   18af8:	beq	18adc <argp_parse@@Base+0x2a14>
   18afc:	b	18aa0 <argp_parse@@Base+0x29d8>
   18b00:	mov	r0, r5
   18b04:	bl	119dc <strlen@plt>
   18b08:	add	r1, r0, #6
   18b0c:	mov	r0, r6
   18b10:	bl	189ac <argp_parse@@Base+0x28e4>
   18b14:	mov	r3, r5
   18b18:	mov	r0, r6
   18b1c:	ldr	r2, [r4, #4]
   18b20:	movw	r1, #54716	; 0xd5bc
   18b24:	movt	r1, #1
   18b28:	bl	1c144 <argp_error@@Base+0x14e8>
   18b2c:	b	18adc <argp_parse@@Base+0x2a14>
   18b30:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18b34:	mov	r4, r3
   18b38:	ldr	ip, [r0, #8]
   18b3c:	ldr	r3, [r0, #20]
   18b40:	cmp	r3, #0
   18b44:	ldr	r3, [r0, #16]
   18b48:	strd	r6, [sp, #8]
   18b4c:	strd	r8, [sp, #16]
   18b50:	mov	r8, r2
   18b54:	ldr	r2, [r2]
   18b58:	strd	sl, [sp, #24]
   18b5c:	mov	sl, r1
   18b60:	str	lr, [sp, #32]
   18b64:	sub	sp, sp, #28
   18b68:	ldr	r7, [sp, #64]	; 0x40
   18b6c:	str	r3, [sp, #8]
   18b70:	str	ip, [sp, #12]
   18b74:	str	r2, [sp, #16]
   18b78:	beq	18d48 <argp_parse@@Base+0x2c80>
   18b7c:	mov	r2, r0
   18b80:	mov	r1, #6
   18b84:	movt	r1, #512	; 0x200
   18b88:	mov	r3, sl
   18b8c:	mov	r0, ip
   18b90:	bl	17b7c <argp_parse@@Base+0x1ab4>
   18b94:	mov	r9, r0
   18b98:	cmp	r9, #0
   18b9c:	beq	18d18 <argp_parse@@Base+0x2c50>
   18ba0:	mov	r1, #10
   18ba4:	mov	r0, r9
   18ba8:	bl	117cc <strchrnul@plt>
   18bac:	ldrb	r3, [r0]
   18bb0:	mov	r5, r0
   18bb4:	cmp	r3, #0
   18bb8:	moveq	r6, r9
   18bbc:	streq	r3, [sp, #20]
   18bc0:	beq	18c10 <argp_parse@@Base+0x2b48>
   18bc4:	ldr	r3, [sp, #16]
   18bc8:	ldrb	r3, [r3]
   18bcc:	cmp	r3, #0
   18bd0:	beq	18d68 <argp_parse@@Base+0x2ca0>
   18bd4:	mov	fp, #0
   18bd8:	mov	r5, r3
   18bdc:	add	r6, r0, #1
   18be0:	add	fp, fp, #1
   18be4:	mov	r0, r6
   18be8:	mov	r1, #10
   18bec:	bl	117cc <strchrnul@plt>
   18bf0:	cmp	fp, r5
   18bf4:	bne	18bdc <argp_parse@@Base+0x2b14>
   18bf8:	mov	r5, r0
   18bfc:	ldr	r3, [r8]
   18c00:	mov	r2, #1
   18c04:	str	r2, [sp, #20]
   18c08:	add	r3, r3, r2
   18c0c:	str	r3, [r8]
   18c10:	add	r1, r5, #1
   18c14:	mov	r0, r7
   18c18:	sub	r1, r1, r6
   18c1c:	sub	fp, r5, r6
   18c20:	bl	189ac <argp_parse@@Base+0x28e4>
   18c24:	ldr	r0, [r7, #28]
   18c28:	ldr	r2, [r7, #32]
   18c2c:	add	r3, r0, fp
   18c30:	cmp	r2, r3
   18c34:	bcs	18c50 <argp_parse@@Base+0x2b88>
   18c38:	mov	r1, fp
   18c3c:	mov	r0, r7
   18c40:	bl	1c124 <argp_error@@Base+0x14c8>
   18c44:	cmp	r0, #0
   18c48:	beq	18c68 <argp_parse@@Base+0x2ba0>
   18c4c:	ldr	r0, [r7, #28]
   18c50:	mov	r2, fp
   18c54:	mov	r1, r6
   18c58:	bl	11808 <memcpy@plt>
   18c5c:	ldr	r3, [r7, #28]
   18c60:	add	fp, r3, fp
   18c64:	str	fp, [r7, #28]
   18c68:	ldr	r3, [sp, #12]
   18c6c:	cmp	r3, r9
   18c70:	beq	18c7c <argp_parse@@Base+0x2bb4>
   18c74:	mov	r0, r9
   18c78:	bl	170ac <argp_parse@@Base+0xfe4>
   18c7c:	ldr	r3, [sp, #8]
   18c80:	cmp	r3, #0
   18c84:	beq	18cc8 <argp_parse@@Base+0x2c00>
   18c88:	ldr	r2, [r3]
   18c8c:	cmp	r2, #0
   18c90:	beq	18cc8 <argp_parse@@Base+0x2c00>
   18c94:	ldr	r6, [sp, #8]
   18c98:	mov	r3, r4
   18c9c:	mov	r0, r2
   18ca0:	mov	r1, sl
   18ca4:	str	r7, [sp]
   18ca8:	mov	r2, r8
   18cac:	bl	18b30 <argp_parse@@Base+0x2a68>
   18cb0:	ldr	r2, [r6, #16]!
   18cb4:	clz	r3, r0
   18cb8:	lsr	r3, r3, #5
   18cbc:	cmp	r2, #0
   18cc0:	bne	18c9c <argp_parse@@Base+0x2bd4>
   18cc4:	mov	r4, r3
   18cc8:	ldr	r3, [sp, #20]
   18ccc:	cmp	r4, #0
   18cd0:	moveq	r3, #0
   18cd4:	cmp	r3, #0
   18cd8:	beq	18d3c <argp_parse@@Base+0x2c74>
   18cdc:	ldrb	r3, [r5]
   18ce0:	ldr	r2, [sp, #16]
   18ce4:	cmp	r3, #0
   18ce8:	ldrb	r0, [r2]
   18cec:	beq	18d50 <argp_parse@@Base+0x2c88>
   18cf0:	add	r4, r0, #1
   18cf4:	mov	r0, #1
   18cf8:	strb	r4, [r2]
   18cfc:	add	sp, sp, #28
   18d00:	ldrd	r4, [sp]
   18d04:	ldrd	r6, [sp, #8]
   18d08:	ldrd	r8, [sp, #16]
   18d0c:	ldrd	sl, [sp, #24]
   18d10:	add	sp, sp, #32
   18d14:	pop	{pc}		; (ldr pc, [sp], #4)
   18d18:	ldr	r3, [sp, #8]
   18d1c:	cmp	r3, #0
   18d20:	beq	18d3c <argp_parse@@Base+0x2c74>
   18d24:	ldr	r3, [sp, #8]
   18d28:	ldr	r2, [r3]
   18d2c:	cmp	r2, #0
   18d30:	movne	r5, r9
   18d34:	strne	r5, [sp, #20]
   18d38:	bne	18c94 <argp_parse@@Base+0x2bcc>
   18d3c:	clz	r0, r4
   18d40:	lsr	r0, r0, #5
   18d44:	b	18cfc <argp_parse@@Base+0x2c34>
   18d48:	ldr	r9, [sp, #12]
   18d4c:	b	18b98 <argp_parse@@Base+0x2ad0>
   18d50:	cmp	r0, #0
   18d54:	beq	18cfc <argp_parse@@Base+0x2c34>
   18d58:	ldr	r2, [sp, #16]
   18d5c:	mov	r0, r3
   18d60:	strb	r3, [r2]
   18d64:	b	18cfc <argp_parse@@Base+0x2c34>
   18d68:	mov	r6, r9
   18d6c:	b	18bfc <argp_parse@@Base+0x2b34>
   18d70:	cmp	r1, #0
   18d74:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18d78:	strd	r6, [sp, #8]
   18d7c:	mov	r6, r2
   18d80:	strd	r8, [sp, #16]
   18d84:	mov	r8, r0
   18d88:	strd	sl, [sp, #24]
   18d8c:	str	lr, [sp, #32]
   18d90:	sub	sp, sp, #12
   18d94:	beq	18dc0 <argp_parse@@Base+0x2cf8>
   18d98:	ldr	r3, [r1, #20]
   18d9c:	cmp	r3, #0
   18da0:	beq	18dc0 <argp_parse@@Base+0x2cf8>
   18da4:	mov	r2, r1
   18da8:	mov	r1, #3
   18dac:	movt	r1, #512	; 0x200
   18db0:	ldr	r3, [r6, #16]
   18db4:	bl	17b7c <argp_parse@@Base+0x1ab4>
   18db8:	mov	r4, r0
   18dbc:	b	18dc4 <argp_parse@@Base+0x2cfc>
   18dc0:	mov	r4, r8
   18dc4:	cmp	r4, #0
   18dc8:	beq	18de4 <argp_parse@@Base+0x2d1c>
   18dcc:	ldrb	r2, [r4]
   18dd0:	ldr	r3, [r6, #8]
   18dd4:	cmp	r2, #0
   18dd8:	bne	18e10 <argp_parse@@Base+0x2d48>
   18ddc:	mov	r2, #1
   18de0:	str	r2, [r3, #4]
   18de4:	cmp	r8, r4
   18de8:	beq	18ef0 <argp_parse@@Base+0x2e28>
   18dec:	mov	r0, r4
   18df0:	add	sp, sp, #12
   18df4:	ldrd	r4, [sp]
   18df8:	ldrd	r6, [sp, #8]
   18dfc:	ldrd	r8, [sp, #16]
   18e00:	ldrd	sl, [sp, #24]
   18e04:	ldr	lr, [sp, #32]
   18e08:	add	sp, sp, #36	; 0x24
   18e0c:	b	170ac <argp_parse@@Base+0xfe4>
   18e10:	ldr	r3, [r3]
   18e14:	ldr	r5, [r6, #4]
   18e18:	cmp	r3, #0
   18e1c:	beq	18e5c <argp_parse@@Base+0x2d94>
   18e20:	ldr	r3, [r5, #28]
   18e24:	ldr	r2, [r5, #32]
   18e28:	cmp	r3, r2
   18e2c:	bcc	18e48 <argp_parse@@Base+0x2d80>
   18e30:	mov	r1, #1
   18e34:	mov	r0, r5
   18e38:	bl	1c124 <argp_error@@Base+0x14c8>
   18e3c:	cmp	r0, #0
   18e40:	ldrne	r3, [r5, #28]
   18e44:	beq	18e58 <argp_parse@@Base+0x2d90>
   18e48:	add	r1, r3, #1
   18e4c:	mov	r2, #10
   18e50:	str	r1, [r5, #28]
   18e54:	strb	r2, [r3]
   18e58:	ldr	r5, [r6, #4]
   18e5c:	movw	r9, #58224	; 0xe370
   18e60:	movt	r9, #2
   18e64:	mov	r0, r5
   18e68:	ldr	r1, [r9, #24]
   18e6c:	bl	18914 <argp_parse@@Base+0x284c>
   18e70:	ldr	r5, [r6, #4]
   18e74:	ldr	sl, [r9, #24]
   18e78:	ldr	r1, [r5, #16]
   18e7c:	ldr	r3, [r5, #24]
   18e80:	ldr	r7, [r5, #28]
   18e84:	sub	r3, r7, r3
   18e88:	cmp	r3, r1
   18e8c:	movls	fp, r5
   18e90:	strls	sl, [r5, #4]
   18e94:	bhi	18f8c <argp_parse@@Base+0x2ec4>
   18e98:	mov	r0, r4
   18e9c:	str	sl, [fp, #12]
   18ea0:	bl	119dc <strlen@plt>
   18ea4:	subs	r9, r0, #0
   18ea8:	bne	18f3c <argp_parse@@Base+0x2e74>
   18eac:	ldr	r2, [r5, #16]
   18eb0:	ldr	r3, [r5, #24]
   18eb4:	sub	r3, r7, r3
   18eb8:	cmp	r3, r2
   18ebc:	movls	r9, r5
   18ec0:	bhi	18f28 <argp_parse@@Base+0x2e60>
   18ec4:	ldr	r3, [r9, #32]
   18ec8:	mov	r2, #0
   18ecc:	str	r2, [r5, #4]
   18ed0:	cmp	r3, r7
   18ed4:	bls	18f0c <argp_parse@@Base+0x2e44>
   18ed8:	add	r2, r7, #1
   18edc:	mov	r3, #10
   18ee0:	str	r2, [r9, #28]
   18ee4:	strb	r3, [r7]
   18ee8:	ldr	r3, [r6, #8]
   18eec:	b	18ddc <argp_parse@@Base+0x2d14>
   18ef0:	add	sp, sp, #12
   18ef4:	ldrd	r4, [sp]
   18ef8:	ldrd	r6, [sp, #8]
   18efc:	ldrd	r8, [sp, #16]
   18f00:	ldrd	sl, [sp, #24]
   18f04:	add	sp, sp, #32
   18f08:	pop	{pc}		; (ldr pc, [sp], #4)
   18f0c:	mov	r1, #1
   18f10:	mov	r0, r9
   18f14:	bl	1c124 <argp_error@@Base+0x14c8>
   18f18:	cmp	r0, #0
   18f1c:	ldrne	r7, [r9, #28]
   18f20:	bne	18ed8 <argp_parse@@Base+0x2e10>
   18f24:	b	18ee8 <argp_parse@@Base+0x2e20>
   18f28:	mov	r0, r5
   18f2c:	bl	1bab8 <argp_error@@Base+0xe5c>
   18f30:	ldr	r9, [r6, #4]
   18f34:	ldr	r7, [r9, #28]
   18f38:	b	18ec4 <argp_parse@@Base+0x2dfc>
   18f3c:	ldr	r2, [r5, #32]
   18f40:	add	r3, r7, r9
   18f44:	cmp	r2, r3
   18f48:	bcs	18f64 <argp_parse@@Base+0x2e9c>
   18f4c:	mov	r1, r9
   18f50:	mov	r0, r5
   18f54:	bl	1c124 <argp_error@@Base+0x14c8>
   18f58:	cmp	r0, #0
   18f5c:	beq	18f80 <argp_parse@@Base+0x2eb8>
   18f60:	ldr	r7, [r5, #28]
   18f64:	mov	r2, r9
   18f68:	mov	r0, r7
   18f6c:	mov	r1, r4
   18f70:	bl	11808 <memcpy@plt>
   18f74:	ldr	r3, [r5, #28]
   18f78:	add	r9, r3, r9
   18f7c:	str	r9, [r5, #28]
   18f80:	ldr	r5, [r6, #4]
   18f84:	ldr	r7, [r5, #28]
   18f88:	b	18eac <argp_parse@@Base+0x2de4>
   18f8c:	mov	r0, r5
   18f90:	str	sl, [sp, #4]
   18f94:	bl	1bab8 <argp_error@@Base+0xe5c>
   18f98:	ldr	fp, [r6, #4]
   18f9c:	ldr	r2, [sp, #4]
   18fa0:	ldr	sl, [r9, #24]
   18fa4:	ldr	r1, [fp, #16]
   18fa8:	ldr	r3, [fp, #24]
   18fac:	ldr	r7, [fp, #28]
   18fb0:	str	r2, [r5, #4]
   18fb4:	sub	r3, r7, r3
   18fb8:	cmp	r3, r1
   18fbc:	bls	18fd4 <argp_parse@@Base+0x2f0c>
   18fc0:	mov	r0, fp
   18fc4:	bl	1bab8 <argp_error@@Base+0xe5c>
   18fc8:	ldr	r5, [r6, #4]
   18fcc:	ldr	r7, [r5, #28]
   18fd0:	b	18e98 <argp_parse@@Base+0x2dd0>
   18fd4:	mov	r5, fp
   18fd8:	b	18e98 <argp_parse@@Base+0x2dd0>
   18fdc:	ldr	r3, [r1, #12]
   18fe0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18fe4:	mov	r4, r1
   18fe8:	ldr	r5, [r1, #4]
   18fec:	strd	r6, [sp, #8]
   18ff0:	mov	r7, r0
   18ff4:	str	r8, [sp, #16]
   18ff8:	cmp	r3, #0
   18ffc:	str	lr, [sp, #20]
   19000:	beq	1912c <argp_parse@@Base+0x3064>
   19004:	ldr	r2, [r1]
   19008:	ldr	r3, [r1, #8]
   1900c:	ldr	r6, [r2, #16]
   19010:	ldr	r8, [r3]
   19014:	ldr	r3, [r3, #4]
   19018:	cmp	r3, #0
   1901c:	cmpne	r8, #0
   19020:	bne	190d4 <argp_parse@@Base+0x300c>
   19024:	cmp	r6, #0
   19028:	beq	190ac <argp_parse@@Base+0x2fe4>
   1902c:	ldr	r0, [r6]
   19030:	cmp	r0, #0
   19034:	beq	190ac <argp_parse@@Base+0x2fe4>
   19038:	ldrb	r3, [r0]
   1903c:	cmp	r3, #0
   19040:	beq	190ac <argp_parse@@Base+0x2fe4>
   19044:	cmp	r8, #0
   19048:	beq	19078 <argp_parse@@Base+0x2fb0>
   1904c:	ldr	r3, [r8, #16]
   19050:	cmp	r3, r6
   19054:	beq	190ac <argp_parse@@Base+0x2fe4>
   19058:	cmp	r3, #0
   1905c:	beq	19078 <argp_parse@@Base+0x2fb0>
   19060:	ldr	r3, [r3, #12]
   19064:	cmp	r3, #0
   19068:	cmpne	r6, r3
   1906c:	bne	19060 <argp_parse@@Base+0x2f98>
   19070:	cmp	r6, r3
   19074:	beq	190ac <argp_parse@@Base+0x2fe4>
   19078:	mov	r2, r4
   1907c:	ldr	r1, [r6, #16]
   19080:	ldr	r8, [r5, #12]
   19084:	bl	18d70 <argp_parse@@Base+0x2ca8>
   19088:	ldr	r6, [r4, #4]
   1908c:	ldr	r2, [r6, #16]
   19090:	ldr	r1, [r6, #24]
   19094:	ldr	r3, [r6, #28]
   19098:	sub	r3, r3, r1
   1909c:	cmp	r3, r2
   190a0:	movls	r5, r6
   190a4:	bhi	1917c <argp_parse@@Base+0x30b4>
   190a8:	str	r8, [r6, #12]
   190ac:	mov	r3, #0
   190b0:	str	r3, [r4, #12]
   190b4:	mov	r1, r7
   190b8:	mov	r0, r5
   190bc:	ldrd	r4, [sp]
   190c0:	ldrd	r6, [sp, #8]
   190c4:	ldr	r8, [sp, #16]
   190c8:	ldr	lr, [sp, #20]
   190cc:	add	sp, sp, #24
   190d0:	b	18914 <argp_parse@@Base+0x284c>
   190d4:	ldr	r2, [r2, #12]
   190d8:	ldr	r3, [r8, #12]
   190dc:	cmp	r2, r3
   190e0:	beq	19024 <argp_parse@@Base+0x2f5c>
   190e4:	ldr	r3, [r5, #28]
   190e8:	ldr	r2, [r5, #32]
   190ec:	cmp	r3, r2
   190f0:	bcc	1910c <argp_parse@@Base+0x3044>
   190f4:	mov	r1, #1
   190f8:	mov	r0, r5
   190fc:	bl	1c124 <argp_error@@Base+0x14c8>
   19100:	cmp	r0, #0
   19104:	ldrne	r3, [r5, #28]
   19108:	beq	1911c <argp_parse@@Base+0x3054>
   1910c:	add	r1, r3, #1
   19110:	mov	r2, #10
   19114:	str	r1, [r5, #28]
   19118:	strb	r2, [r3]
   1911c:	cmp	r6, #0
   19120:	ldr	r5, [r4, #4]
   19124:	bne	1902c <argp_parse@@Base+0x2f64>
   19128:	b	190ac <argp_parse@@Base+0x2fe4>
   1912c:	ldr	r3, [r5, #28]
   19130:	ldr	r1, [r5, #32]
   19134:	add	r2, r3, #2
   19138:	cmp	r1, r2
   1913c:	bcs	19158 <argp_parse@@Base+0x3090>
   19140:	mov	r1, #2
   19144:	mov	r0, r5
   19148:	bl	1c124 <argp_error@@Base+0x14c8>
   1914c:	cmp	r0, #0
   19150:	beq	19174 <argp_parse@@Base+0x30ac>
   19154:	ldr	r3, [r5, #28]
   19158:	movw	r2, #54728	; 0xd5c8
   1915c:	movt	r2, #1
   19160:	ldrh	r2, [r2]
   19164:	strh	r2, [r3]
   19168:	ldr	r3, [r5, #28]
   1916c:	add	r3, r3, #2
   19170:	str	r3, [r5, #28]
   19174:	ldr	r5, [r4, #4]
   19178:	b	190b4 <argp_parse@@Base+0x2fec>
   1917c:	mov	r0, r6
   19180:	bl	1bab8 <argp_error@@Base+0xe5c>
   19184:	ldr	r5, [r4, #4]
   19188:	b	190a8 <argp_parse@@Base+0x2fe0>
   1918c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19190:	strd	r6, [sp, #8]
   19194:	mov	r7, r0
   19198:	ldr	r6, [r0, #12]
   1919c:	strd	r8, [sp, #16]
   191a0:	mov	r8, r2
   191a4:	strd	sl, [sp, #24]
   191a8:	mov	sl, r3
   191ac:	mov	fp, r1
   191b0:	ldr	r3, [r0, #16]
   191b4:	str	lr, [sp, #32]
   191b8:	sub	sp, sp, #28
   191bc:	cmp	r6, #0
   191c0:	ldr	r5, [sp, #68]	; 0x44
   191c4:	str	r3, [sp, #8]
   191c8:	ldr	r3, [r0, #20]
   191cc:	beq	1953c <argp_parse@@Base+0x3474>
   191d0:	mov	r1, #11
   191d4:	mov	r0, r6
   191d8:	str	r3, [sp, #12]
   191dc:	bl	119f4 <strchr@plt>
   191e0:	cmp	r8, #0
   191e4:	mov	r9, r0
   191e8:	ldr	r3, [sp, #12]
   191ec:	bne	19438 <argp_parse@@Base+0x3370>
   191f0:	cmp	r0, #0
   191f4:	beq	19734 <argp_parse@@Base+0x366c>
   191f8:	subs	r1, r0, r6
   191fc:	movne	r4, #1
   19200:	moveq	r4, #0
   19204:	cmp	r3, #0
   19208:	str	r1, [sp, #20]
   1920c:	beq	196d8 <argp_parse@@Base+0x3610>
   19210:	cmp	r1, #0
   19214:	beq	19728 <argp_parse@@Base+0x3660>
   19218:	mov	r0, r6
   1921c:	mov	r4, #1
   19220:	bl	117f0 <strndup@plt>
   19224:	adds	r3, r0, #0
   19228:	mov	r6, r0
   1922c:	movne	r3, #1
   19230:	str	r3, [sp, #16]
   19234:	mov	r1, fp
   19238:	mov	r0, r7
   1923c:	bl	16f48 <argp_parse@@Base+0xe80>
   19240:	mov	r2, r0
   19244:	mov	r1, r6
   19248:	ldr	r3, [r7, #20]
   1924c:	mov	r0, #1
   19250:	movt	r0, #512	; 0x200
   19254:	str	r2, [sp, #12]
   19258:	blx	r3
   1925c:	subs	r9, r0, #0
   19260:	moveq	r4, r9
   19264:	beq	192f4 <argp_parse@@Base+0x322c>
   19268:	cmp	r6, r9
   1926c:	movne	r4, #0
   19270:	andeq	r4, r4, #1
   19274:	cmp	sl, #0
   19278:	ldr	r2, [r5, #28]
   1927c:	bne	19580 <argp_parse@@Base+0x34b8>
   19280:	cmp	r4, #0
   19284:	beq	194dc <argp_parse@@Base+0x3414>
   19288:	ldr	r3, [sp, #20]
   1928c:	ldr	r0, [r5, #32]
   19290:	add	r1, r2, r3
   19294:	cmp	r0, r1
   19298:	bcs	19494 <argp_parse@@Base+0x33cc>
   1929c:	mov	r1, r3
   192a0:	mov	r0, r5
   192a4:	bl	1c124 <argp_error@@Base+0x14c8>
   192a8:	cmp	r0, #0
   192ac:	ldr	r2, [r5, #28]
   192b0:	bne	19494 <argp_parse@@Base+0x33cc>
   192b4:	ldr	r0, [r5, #16]
   192b8:	ldr	r1, [r5, #24]
   192bc:	sub	r2, r2, r1
   192c0:	cmp	r2, r0
   192c4:	bhi	195c8 <argp_parse@@Base+0x3500>
   192c8:	ldr	r1, [r5, #4]
   192cc:	ldr	r2, [r5, #20]
   192d0:	bic	r2, r2, r2, asr #31
   192d4:	cmp	r1, r2
   192d8:	bcc	195a4 <argp_parse@@Base+0x34dc>
   192dc:	cmp	r9, r6
   192e0:	moveq	r4, #1
   192e4:	beq	192f4 <argp_parse@@Base+0x322c>
   192e8:	mov	r0, r9
   192ec:	mov	r4, #1
   192f0:	bl	170ac <argp_parse@@Base+0xfe4>
   192f4:	ldr	r3, [sp, #16]
   192f8:	cmp	r3, #0
   192fc:	beq	19314 <argp_parse@@Base+0x324c>
   19300:	ldr	r3, [r7, #20]
   19304:	cmp	r3, #0
   19308:	beq	19394 <argp_parse@@Base+0x32cc>
   1930c:	mov	r0, r6
   19310:	bl	170ac <argp_parse@@Base+0xfe4>
   19314:	cmp	r8, #0
   19318:	beq	19394 <argp_parse@@Base+0x32cc>
   1931c:	ldr	r3, [r7, #20]
   19320:	cmp	r3, #0
   19324:	beq	19394 <argp_parse@@Base+0x32cc>
   19328:	mov	r0, #4
   1932c:	movt	r0, #512	; 0x200
   19330:	ldr	r2, [sp, #12]
   19334:	mov	r1, #0
   19338:	blx	r3
   1933c:	subs	r6, r0, #0
   19340:	beq	19394 <argp_parse@@Base+0x32cc>
   19344:	orrs	r3, sl, r4
   19348:	bne	19664 <argp_parse@@Base+0x359c>
   1934c:	mov	r0, r6
   19350:	bl	119dc <strlen@plt>
   19354:	subs	r4, r0, #0
   19358:	bne	1961c <argp_parse@@Base+0x3554>
   1935c:	mov	r0, r6
   19360:	bl	170ac <argp_parse@@Base+0xfe4>
   19364:	ldr	r2, [r5, #16]
   19368:	ldr	r1, [r5, #24]
   1936c:	ldr	r3, [r5, #28]
   19370:	sub	r3, r3, r1
   19374:	cmp	r3, r2
   19378:	bhi	196b0 <argp_parse@@Base+0x35e8>
   1937c:	ldr	r2, [r5, #4]
   19380:	ldr	r3, [r5, #20]
   19384:	bic	r3, r3, r3, asr #31
   19388:	cmp	r2, r3
   1938c:	bcc	19688 <argp_parse@@Base+0x35c0>
   19390:	mov	r4, #1
   19394:	ldr	r7, [sp, #8]
   19398:	cmp	r7, #0
   1939c:	beq	19418 <argp_parse@@Base+0x3350>
   193a0:	ldr	r3, [r7]
   193a4:	cmp	r3, #0
   193a8:	beq	19418 <argp_parse@@Base+0x3350>
   193ac:	ldr	r2, [sp, #64]	; 0x40
   193b0:	eor	r6, r2, #1
   193b4:	eor	r2, r4, #1
   193b8:	orr	r2, r2, r6
   193bc:	and	r6, r6, #1
   193c0:	tst	r2, #1
   193c4:	beq	196e8 <argp_parse@@Base+0x3620>
   193c8:	ldr	r9, [sp, #64]	; 0x40
   193cc:	orrs	r2, r4, sl
   193d0:	mov	r0, r3
   193d4:	str	r9, [sp]
   193d8:	movne	r3, #1
   193dc:	moveq	r3, #0
   193e0:	str	r5, [sp, #4]
   193e4:	mov	r2, r8
   193e8:	mov	r1, fp
   193ec:	bl	1918c <argp_parse@@Base+0x30c4>
   193f0:	ldr	r3, [r7, #16]
   193f4:	orr	r4, r4, r0
   193f8:	add	r7, r7, #16
   193fc:	cmp	r3, #0
   19400:	beq	19418 <argp_parse@@Base+0x3350>
   19404:	cmp	r4, #0
   19408:	movne	r2, r6
   1940c:	moveq	r2, #1
   19410:	cmp	r2, #0
   19414:	bne	193cc <argp_parse@@Base+0x3304>
   19418:	mov	r0, r4
   1941c:	add	sp, sp, #28
   19420:	ldrd	r4, [sp]
   19424:	ldrd	r6, [sp, #8]
   19428:	ldrd	r8, [sp, #16]
   1942c:	ldrd	sl, [sp, #24]
   19430:	add	sp, sp, #32
   19434:	pop	{pc}		; (ldr pc, [sp], #4)
   19438:	cmp	r0, #0
   1943c:	beq	196bc <argp_parse@@Base+0x35f4>
   19440:	cmp	r3, #0
   19444:	add	r6, r0, #1
   19448:	movne	r1, fp
   1944c:	movne	r0, r7
   19450:	beq	194b8 <argp_parse@@Base+0x33f0>
   19454:	bl	16f48 <argp_parse@@Base+0xe80>
   19458:	ldr	r3, [r7, #20]
   1945c:	str	r0, [sp, #12]
   19460:	mov	r0, #2
   19464:	movt	r0, #512	; 0x200
   19468:	mov	r1, r6
   1946c:	ldr	r2, [sp, #12]
   19470:	blx	r3
   19474:	subs	r9, r0, #0
   19478:	moveq	r4, r9
   1947c:	beq	19314 <argp_parse@@Base+0x324c>
   19480:	mov	r3, #0
   19484:	mov	r4, r3
   19488:	str	r3, [sp, #16]
   1948c:	str	r3, [sp, #20]
   19490:	b	19268 <argp_parse@@Base+0x31a0>
   19494:	ldr	r4, [sp, #20]
   19498:	mov	r0, r2
   1949c:	mov	r1, r6
   194a0:	mov	r2, r4
   194a4:	bl	11808 <memcpy@plt>
   194a8:	ldr	r2, [r5, #28]
   194ac:	add	r2, r2, r4
   194b0:	str	r2, [r5, #28]
   194b4:	b	192b4 <argp_parse@@Base+0x31ec>
   194b8:	cmp	r6, #0
   194bc:	moveq	r4, r6
   194c0:	beq	19394 <argp_parse@@Base+0x32cc>
   194c4:	cmp	sl, #0
   194c8:	ldr	r2, [r5, #28]
   194cc:	bne	1956c <argp_parse@@Base+0x34a4>
   194d0:	mov	r9, r6
   194d4:	str	sl, [sp, #12]
   194d8:	str	sl, [sp, #16]
   194dc:	mov	r0, r9
   194e0:	str	r2, [sp, #20]
   194e4:	bl	119dc <strlen@plt>
   194e8:	subs	r4, r0, #0
   194ec:	ldr	r2, [sp, #20]
   194f0:	beq	192b4 <argp_parse@@Base+0x31ec>
   194f4:	ldr	r0, [r5, #32]
   194f8:	add	r1, r2, r4
   194fc:	cmp	r0, r1
   19500:	bcs	1951c <argp_parse@@Base+0x3454>
   19504:	mov	r1, r4
   19508:	mov	r0, r5
   1950c:	bl	1c124 <argp_error@@Base+0x14c8>
   19510:	cmp	r0, #0
   19514:	ldr	r2, [r5, #28]
   19518:	beq	192b4 <argp_parse@@Base+0x31ec>
   1951c:	mov	r0, r2
   19520:	mov	r1, r9
   19524:	mov	r2, r4
   19528:	bl	11808 <memcpy@plt>
   1952c:	ldr	r2, [r5, #28]
   19530:	add	r2, r2, r4
   19534:	str	r2, [r5, #28]
   19538:	b	192b4 <argp_parse@@Base+0x31ec>
   1953c:	cmp	r3, #0
   19540:	beq	196d0 <argp_parse@@Base+0x3608>
   19544:	bl	16f48 <argp_parse@@Base+0xe80>
   19548:	mov	r2, #1
   1954c:	movt	r2, #512	; 0x200
   19550:	str	r0, [sp, #12]
   19554:	cmp	r8, #0
   19558:	mov	r0, #2
   1955c:	movt	r0, #512	; 0x200
   19560:	moveq	r0, r2
   19564:	ldr	r3, [r7, #20]
   19568:	b	19468 <argp_parse@@Base+0x33a0>
   1956c:	mov	r4, #0
   19570:	mov	r9, r6
   19574:	str	r4, [sp, #12]
   19578:	str	r4, [sp, #16]
   1957c:	str	r4, [sp, #20]
   19580:	ldr	r1, [r5, #32]
   19584:	cmp	r1, r2
   19588:	bls	195d4 <argp_parse@@Base+0x350c>
   1958c:	add	r0, r2, #1
   19590:	mov	r1, #10
   19594:	str	r0, [r5, #28]
   19598:	strb	r1, [r2]
   1959c:	ldr	r2, [r5, #28]
   195a0:	b	19280 <argp_parse@@Base+0x31b8>
   195a4:	ldr	r2, [r5, #28]
   195a8:	ldr	r1, [r5, #32]
   195ac:	cmp	r2, r1
   195b0:	bcs	195f0 <argp_parse@@Base+0x3528>
   195b4:	add	r0, r2, #1
   195b8:	mov	r1, #10
   195bc:	str	r0, [r5, #28]
   195c0:	strb	r1, [r2]
   195c4:	b	192dc <argp_parse@@Base+0x3214>
   195c8:	mov	r0, r5
   195cc:	bl	1bab8 <argp_error@@Base+0xe5c>
   195d0:	b	192c8 <argp_parse@@Base+0x3200>
   195d4:	mov	r1, #1
   195d8:	mov	r0, r5
   195dc:	bl	1c124 <argp_error@@Base+0x14c8>
   195e0:	cmp	r0, #0
   195e4:	ldr	r2, [r5, #28]
   195e8:	bne	1958c <argp_parse@@Base+0x34c4>
   195ec:	b	19280 <argp_parse@@Base+0x31b8>
   195f0:	mov	r1, #1
   195f4:	mov	r0, r5
   195f8:	bl	1c124 <argp_error@@Base+0x14c8>
   195fc:	cmp	r0, #0
   19600:	beq	192dc <argp_parse@@Base+0x3214>
   19604:	ldr	r2, [r5, #28]
   19608:	mov	r1, #10
   1960c:	add	r0, r2, #1
   19610:	str	r0, [r5, #28]
   19614:	strb	r1, [r2]
   19618:	b	192dc <argp_parse@@Base+0x3214>
   1961c:	ldr	r0, [r5, #28]
   19620:	ldr	r2, [r5, #32]
   19624:	add	r3, r0, r4
   19628:	cmp	r2, r3
   1962c:	bcs	19648 <argp_parse@@Base+0x3580>
   19630:	mov	r1, r4
   19634:	mov	r0, r5
   19638:	bl	1c124 <argp_error@@Base+0x14c8>
   1963c:	cmp	r0, #0
   19640:	beq	1935c <argp_parse@@Base+0x3294>
   19644:	ldr	r0, [r5, #28]
   19648:	mov	r2, r4
   1964c:	mov	r1, r6
   19650:	bl	11808 <memcpy@plt>
   19654:	ldr	r3, [r5, #28]
   19658:	add	r4, r3, r4
   1965c:	str	r4, [r5, #28]
   19660:	b	1935c <argp_parse@@Base+0x3294>
   19664:	ldr	r3, [r5, #28]
   19668:	ldr	r2, [r5, #32]
   1966c:	cmp	r3, r2
   19670:	bcs	1970c <argp_parse@@Base+0x3644>
   19674:	add	r1, r3, #1
   19678:	mov	r2, #10
   1967c:	str	r1, [r5, #28]
   19680:	strb	r2, [r3]
   19684:	b	1934c <argp_parse@@Base+0x3284>
   19688:	ldr	r3, [r5, #28]
   1968c:	ldr	r2, [r5, #32]
   19690:	cmp	r3, r2
   19694:	bcs	196f0 <argp_parse@@Base+0x3628>
   19698:	add	r1, r3, #1
   1969c:	mov	r2, #10
   196a0:	mov	r4, #1
   196a4:	str	r1, [r5, #28]
   196a8:	strb	r2, [r3]
   196ac:	b	19394 <argp_parse@@Base+0x32cc>
   196b0:	mov	r0, r5
   196b4:	bl	1bab8 <argp_error@@Base+0xe5c>
   196b8:	b	1937c <argp_parse@@Base+0x32b4>
   196bc:	cmp	r3, #0
   196c0:	movne	r1, fp
   196c4:	movne	r0, r7
   196c8:	movne	r6, r9
   196cc:	bne	19454 <argp_parse@@Base+0x338c>
   196d0:	mov	r4, r3
   196d4:	b	19394 <argp_parse@@Base+0x32cc>
   196d8:	mov	r9, r6
   196dc:	str	r8, [sp, #12]
   196e0:	str	r4, [sp, #16]
   196e4:	b	19268 <argp_parse@@Base+0x31a0>
   196e8:	mov	r4, #1
   196ec:	b	19418 <argp_parse@@Base+0x3350>
   196f0:	mov	r1, #1
   196f4:	mov	r0, r5
   196f8:	bl	1c124 <argp_error@@Base+0x14c8>
   196fc:	cmp	r0, #0
   19700:	beq	19390 <argp_parse@@Base+0x32c8>
   19704:	ldr	r3, [r5, #28]
   19708:	b	19698 <argp_parse@@Base+0x35d0>
   1970c:	mov	r1, #1
   19710:	mov	r0, r5
   19714:	bl	1c124 <argp_error@@Base+0x14c8>
   19718:	cmp	r0, #0
   1971c:	beq	1934c <argp_parse@@Base+0x3284>
   19720:	ldr	r3, [r5, #28]
   19724:	b	19674 <argp_parse@@Base+0x35ac>
   19728:	ldr	r4, [sp, #20]
   1972c:	str	r4, [sp, #16]
   19730:	b	19234 <argp_parse@@Base+0x316c>
   19734:	cmp	r3, #0
   19738:	beq	194c4 <argp_parse@@Base+0x33fc>
   1973c:	mov	r1, fp
   19740:	mov	r0, r7
   19744:	bl	16f48 <argp_parse@@Base+0xe80>
   19748:	str	r0, [sp, #12]
   1974c:	mov	r0, #1
   19750:	movt	r0, #512	; 0x200
   19754:	ldr	r3, [r7, #20]
   19758:	b	19468 <argp_parse@@Base+0x33a0>

0001975c <argp_failure@@Base>:
   1975c:	push	{r3}		; (str r3, [sp, #-4]!)
   19760:	strd	r4, [sp, #-20]!	; 0xffffffec
   19764:	subs	r5, r0, #0
   19768:	strd	r6, [sp, #8]
   1976c:	mov	r7, r1
   19770:	mov	r6, r2
   19774:	str	lr, [sp, #16]
   19778:	sub	sp, sp, #200	; 0xc8
   1977c:	beq	198d8 <argp_failure@@Base+0x17c>
   19780:	ldr	r3, [r5, #16]
   19784:	tst	r3, #2
   19788:	bne	198bc <argp_failure@@Base+0x160>
   1978c:	ldr	r4, [r5, #44]	; 0x2c
   19790:	cmp	r4, #0
   19794:	beq	198bc <argp_failure@@Base+0x160>
   19798:	mov	r0, r4
   1979c:	bl	11b5c <flockfile@plt>
   197a0:	ldr	r0, [r5, #40]	; 0x28
   197a4:	mov	r1, r4
   197a8:	bl	11730 <fputs_unlocked@plt>
   197ac:	ldr	r3, [sp, #220]	; 0xdc
   197b0:	cmp	r3, #0
   197b4:	beq	19810 <argp_failure@@Base+0xb4>
   197b8:	ldr	r3, [r4, #20]
   197bc:	add	r1, sp, #224	; 0xe0
   197c0:	ldr	r2, [r4, #24]
   197c4:	str	r1, [sp]
   197c8:	cmp	r3, r2
   197cc:	addcc	r1, r3, #1
   197d0:	movcc	r2, #58	; 0x3a
   197d4:	strcc	r1, [r4, #20]
   197d8:	strbcc	r2, [r3]
   197dc:	bcs	19948 <argp_failure@@Base+0x1ec>
   197e0:	ldr	r3, [r4, #20]
   197e4:	ldr	r2, [r4, #24]
   197e8:	cmp	r3, r2
   197ec:	addcc	r1, r3, #1
   197f0:	movcc	r2, #32
   197f4:	strcc	r1, [r4, #20]
   197f8:	strbcc	r2, [r3]
   197fc:	bcs	19938 <argp_failure@@Base+0x1dc>
   19800:	mov	r0, r4
   19804:	ldr	r2, [sp]
   19808:	ldr	r1, [sp, #220]	; 0xdc
   1980c:	bl	11afc <vfprintf@plt>
   19810:	cmp	r6, #0
   19814:	ldr	r3, [r4, #20]
   19818:	ldr	r2, [r4, #24]
   1981c:	beq	19880 <argp_failure@@Base+0x124>
   19820:	cmp	r2, r3
   19824:	addhi	r1, r3, #1
   19828:	movhi	r2, #58	; 0x3a
   1982c:	strhi	r1, [r4, #20]
   19830:	strbhi	r2, [r3]
   19834:	bls	19968 <argp_failure@@Base+0x20c>
   19838:	ldr	r3, [r4, #20]
   1983c:	ldr	r2, [r4, #24]
   19840:	cmp	r3, r2
   19844:	addcc	r1, r3, #1
   19848:	movcc	r2, #32
   1984c:	strcc	r1, [r4, #20]
   19850:	strbcc	r2, [r3]
   19854:	bcs	19958 <argp_failure@@Base+0x1fc>
   19858:	mov	r2, #200	; 0xc8
   1985c:	mov	r1, sp
   19860:	mov	r0, r6
   19864:	bl	11a3c <strerror_r@plt>
   19868:	cmp	r0, #0
   1986c:	beq	1991c <argp_failure@@Base+0x1c0>
   19870:	mov	r1, r4
   19874:	bl	11730 <fputs_unlocked@plt>
   19878:	ldr	r3, [r4, #20]
   1987c:	ldr	r2, [r4, #24]
   19880:	cmp	r3, r2
   19884:	addcc	r1, r3, #1
   19888:	movcc	r2, #10
   1988c:	strcc	r1, [r4, #20]
   19890:	strbcc	r2, [r3]
   19894:	bcs	1990c <argp_failure@@Base+0x1b0>
   19898:	mov	r0, r4
   1989c:	bl	118d4 <funlockfile@plt>
   198a0:	cmp	r7, #0
   198a4:	beq	198bc <argp_failure@@Base+0x160>
   198a8:	cmp	r5, #0
   198ac:	beq	19904 <argp_failure@@Base+0x1a8>
   198b0:	ldr	r3, [r5, #16]
   198b4:	tst	r3, #32
   198b8:	beq	19904 <argp_failure@@Base+0x1a8>
   198bc:	add	sp, sp, #200	; 0xc8
   198c0:	ldrd	r4, [sp]
   198c4:	ldrd	r6, [sp, #8]
   198c8:	ldr	lr, [sp, #16]
   198cc:	add	sp, sp, #20
   198d0:	add	sp, sp, #4
   198d4:	bx	lr
   198d8:	movw	r3, #58288	; 0xe3b0
   198dc:	movt	r3, #2
   198e0:	ldr	r4, [r3]
   198e4:	cmp	r4, #0
   198e8:	beq	198bc <argp_failure@@Base+0x160>
   198ec:	mov	r0, r4
   198f0:	bl	11b5c <flockfile@plt>
   198f4:	movw	r3, #58280	; 0xe3a8
   198f8:	movt	r3, #2
   198fc:	ldr	r0, [r3]
   19900:	b	197a4 <argp_failure@@Base+0x48>
   19904:	mov	r0, r7
   19908:	bl	119c4 <exit@plt>
   1990c:	mov	r1, #10
   19910:	mov	r0, r4
   19914:	bl	11ab4 <__overflow@plt>
   19918:	b	19898 <argp_failure@@Base+0x13c>
   1991c:	mov	r0, r6
   19920:	bl	1197c <strerror@plt>
   19924:	cmp	r0, #0
   19928:	movw	r3, #54732	; 0xd5cc
   1992c:	movt	r3, #1
   19930:	moveq	r0, r3
   19934:	b	19870 <argp_failure@@Base+0x114>
   19938:	mov	r1, #32
   1993c:	mov	r0, r4
   19940:	bl	11ab4 <__overflow@plt>
   19944:	b	19800 <argp_failure@@Base+0xa4>
   19948:	mov	r1, #58	; 0x3a
   1994c:	mov	r0, r4
   19950:	bl	11ab4 <__overflow@plt>
   19954:	b	197e0 <argp_failure@@Base+0x84>
   19958:	mov	r1, #32
   1995c:	mov	r0, r4
   19960:	bl	11ab4 <__overflow@plt>
   19964:	b	19858 <argp_failure@@Base+0xfc>
   19968:	mov	r1, #58	; 0x3a
   1996c:	mov	r0, r4
   19970:	bl	11ab4 <__overflow@plt>
   19974:	b	19838 <argp_failure@@Base+0xdc>
   19978:	cmp	r2, #0
   1997c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19980:	strd	r6, [sp, #8]
   19984:	strd	r8, [sp, #16]
   19988:	strd	sl, [sp, #24]
   1998c:	add	fp, sp, #32
   19990:	str	lr, [sp, #32]
   19994:	sub	sp, sp, #124	; 0x7c
   19998:	str	r2, [fp, #-128]	; 0xffffff80
   1999c:	strd	r0, [fp, #-108]	; 0xffffff94
   199a0:	str	r3, [fp, #-100]	; 0xffffff9c
   199a4:	beq	19e18 <argp_failure@@Base+0x6bc>
   199a8:	mov	r0, r2
   199ac:	movw	r8, #58224	; 0xe370
   199b0:	movt	r8, #2
   199b4:	bl	11b5c <flockfile@plt>
   199b8:	ldr	r3, [r8, #36]	; 0x24
   199bc:	cmp	r3, #0
   199c0:	beq	19e34 <argp_failure@@Base+0x6d8>
   199c4:	mov	r3, #0
   199c8:	ldr	r0, [fp, #-128]	; 0xffffff80
   199cc:	mov	r1, r3
   199d0:	ldr	r2, [r8, #32]
   199d4:	bl	1ba20 <argp_error@@Base+0xdc4>
   199d8:	subs	r7, r0, #0
   199dc:	beq	1a954 <argp_failure@@Base+0x11f8>
   199e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   199e4:	ands	r3, r3, #11
   199e8:	streq	r3, [fp, #-136]	; 0xffffff78
   199ec:	bne	1a164 <argp_failure@@Base+0xa08>
   199f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   199f4:	ands	r4, r3, #3
   199f8:	bne	19ff4 <argp_failure@@Base+0x898>
   199fc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19a00:	tst	r3, #16
   19a04:	bne	19fc0 <argp_failure@@Base+0x864>
   19a08:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19a0c:	tst	r3, #4
   19a10:	and	r5, r3, #8
   19a14:	bne	19f3c <argp_failure@@Base+0x7e0>
   19a18:	cmp	r5, #0
   19a1c:	beq	19db0 <argp_failure@@Base+0x654>
   19a20:	ldr	r3, [fp, #-136]	; 0xffffff78
   19a24:	ldr	r3, [r3, #4]
   19a28:	cmp	r3, #0
   19a2c:	str	r3, [fp, #-112]	; 0xffffff90
   19a30:	beq	19db0 <argp_failure@@Base+0x654>
   19a34:	cmp	r4, #0
   19a38:	bne	19f6c <argp_failure@@Base+0x810>
   19a3c:	ldr	r3, [fp, #-136]	; 0xffffff78
   19a40:	ldr	r3, [r3]
   19a44:	str	r4, [fp, #-88]	; 0xffffffa8
   19a48:	str	r4, [fp, #-84]	; 0xffffffac
   19a4c:	str	r4, [fp, #-80]	; 0xffffffb0
   19a50:	mov	r2, r3
   19a54:	movw	r3, #53108	; 0xcf74
   19a58:	movt	r3, #1
   19a5c:	mov	r5, r2
   19a60:	str	r3, [fp, #-140]	; 0xffffff74
   19a64:	movw	r3, #51416	; 0xc8d8
   19a68:	movt	r3, #1
   19a6c:	str	r8, [fp, #-96]	; 0xffffffa0
   19a70:	str	r3, [fp, #-144]	; 0xffffff70
   19a74:	ldr	r0, [r7, #16]
   19a78:	ldr	r3, [r7, #24]
   19a7c:	ldr	r2, [r7, #28]
   19a80:	ldr	r4, [r5]
   19a84:	ldr	r9, [r5, #8]
   19a88:	sub	r2, r2, r3
   19a8c:	cmp	r2, r0
   19a90:	bhi	1a644 <argp_failure@@Base+0xee8>
   19a94:	ldr	r1, [r7, #4]
   19a98:	mov	r3, #1
   19a9c:	ldr	r8, [r4, #12]
   19aa0:	str	r1, [fp, #-120]	; 0xffffff88
   19aa4:	mov	r1, #0
   19aa8:	str	r1, [r7, #4]
   19aac:	ldr	r1, [r7, #12]
   19ab0:	str	r3, [fp, #-64]	; 0xffffffc0
   19ab4:	ldr	r3, [fp, #-104]	; 0xffffff98
   19ab8:	str	r1, [fp, #-116]	; 0xffffff8c
   19abc:	ands	r1, r8, #8
   19ac0:	str	r5, [fp, #-76]	; 0xffffffb4
   19ac4:	str	r1, [fp, #-124]	; 0xffffff84
   19ac8:	sub	r1, fp, #88	; 0x58
   19acc:	str	r7, [fp, #-72]	; 0xffffffb8
   19ad0:	str	r3, [fp, #-60]	; 0xffffffc4
   19ad4:	movne	r3, #0
   19ad8:	str	r1, [fp, #-68]	; 0xffffffbc
   19adc:	strne	r3, [fp, #-124]	; 0xffffff84
   19ae0:	bne	19b18 <argp_failure@@Base+0x3bc>
   19ae4:	ldr	r1, [r5, #4]
   19ae8:	cmp	r1, #0
   19aec:	beq	19b18 <argp_failure@@Base+0x3bc>
   19af0:	add	r3, r4, #24
   19af4:	ldr	ip, [r3, #-24]	; 0xffffffe8
   19af8:	cmp	ip, #0
   19afc:	beq	19b0c <argp_failure@@Base+0x3b0>
   19b00:	ldr	ip, [r3, #-12]
   19b04:	tst	ip, #2
   19b08:	beq	1a764 <argp_failure@@Base+0x1008>
   19b0c:	subs	r1, r1, #1
   19b10:	add	r3, r3, #24
   19b14:	bne	19af4 <argp_failure@@Base+0x398>
   19b18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b1c:	cmp	r2, r0
   19b20:	ldr	r6, [r3, #8]
   19b24:	bhi	1a6a0 <argp_failure@@Base+0xf44>
   19b28:	str	r6, [r7, #12]
   19b2c:	ldr	sl, [r5, #4]
   19b30:	cmp	sl, #0
   19b34:	movne	r6, r4
   19b38:	strne	r5, [fp, #-132]	; 0xffffff7c
   19b3c:	movne	r5, r4
   19b40:	movne	r4, r9
   19b44:	beq	19b9c <argp_failure@@Base+0x440>
   19b48:	ldr	r9, [r6, #12]
   19b4c:	tst	r9, #8
   19b50:	bne	19b88 <argp_failure@@Base+0x42c>
   19b54:	ldr	r8, [r6, #4]
   19b58:	sub	r2, r8, #1
   19b5c:	cmp	r2, #254	; 0xfe
   19b60:	bhi	19b88 <argp_failure@@Base+0x42c>
   19b64:	bl	119ac <__ctype_b_loc@plt>
   19b68:	ldr	r1, [r0]
   19b6c:	lsl	r2, r8, #1
   19b70:	ldrh	r2, [r1, r2]
   19b74:	tst	r2, #16384	; 0x4000
   19b78:	beq	19b88 <argp_failure@@Base+0x42c>
   19b7c:	ldrb	r2, [r4]
   19b80:	cmp	r8, r2
   19b84:	beq	1a2cc <argp_failure@@Base+0xb70>
   19b88:	subs	sl, sl, #1
   19b8c:	add	r6, r6, #24
   19b90:	bne	19b48 <argp_failure@@Base+0x3ec>
   19b94:	mov	r4, r5
   19b98:	ldr	r5, [fp, #-132]	; 0xffffff7c
   19b9c:	ldr	r2, [r4, #12]
   19ba0:	ldr	r1, [r7, #24]
   19ba4:	ldr	r3, [r7, #28]
   19ba8:	tst	r2, #8
   19bac:	ldr	r2, [r7, #16]
   19bb0:	sub	r3, r3, r1
   19bb4:	beq	1a3bc <argp_failure@@Base+0xc60>
   19bb8:	cmp	r3, r2
   19bbc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19bc0:	ldr	r6, [r3, #16]
   19bc4:	bhi	1a7a0 <argp_failure@@Base+0x1044>
   19bc8:	str	r6, [r7, #12]
   19bcc:	ldr	r8, [r5, #4]
   19bd0:	cmp	r8, #0
   19bd4:	addne	r6, r4, #24
   19bd8:	bne	19bec <argp_failure@@Base+0x490>
   19bdc:	b	19c7c <argp_failure@@Base+0x520>
   19be0:	subs	r8, r8, #1
   19be4:	add	r6, r6, #24
   19be8:	beq	19c7c <argp_failure@@Base+0x520>
   19bec:	ldr	r3, [r6, #-24]	; 0xffffffe8
   19bf0:	cmp	r3, #0
   19bf4:	beq	19be0 <argp_failure@@Base+0x484>
   19bf8:	ldr	r3, [r6, #-12]
   19bfc:	tst	r3, #2
   19c00:	bne	19be0 <argp_failure@@Base+0x484>
   19c04:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c08:	sub	r1, fp, #76	; 0x4c
   19c0c:	ldr	r0, [r3, #16]
   19c10:	bl	18fdc <argp_parse@@Base+0x2f14>
   19c14:	ldr	sl, [r6, #-24]	; 0xffffffe8
   19c18:	mov	r0, sl
   19c1c:	bl	119dc <strlen@plt>
   19c20:	subs	r9, r0, #0
   19c24:	beq	19be0 <argp_failure@@Base+0x484>
   19c28:	ldr	ip, [r7, #28]
   19c2c:	mov	r1, r9
   19c30:	mov	r0, r7
   19c34:	ldr	lr, [r7, #32]
   19c38:	add	r2, ip, r9
   19c3c:	cmp	lr, r2
   19c40:	bcs	19c54 <argp_failure@@Base+0x4f8>
   19c44:	bl	1c124 <argp_error@@Base+0x14c8>
   19c48:	cmp	r0, #0
   19c4c:	beq	19be0 <argp_failure@@Base+0x484>
   19c50:	ldr	ip, [r7, #28]
   19c54:	mov	r2, r9
   19c58:	mov	r1, sl
   19c5c:	mov	r0, ip
   19c60:	add	r6, r6, #24
   19c64:	bl	11808 <memcpy@plt>
   19c68:	ldr	r2, [r7, #28]
   19c6c:	subs	r8, r8, #1
   19c70:	add	r3, r2, r9
   19c74:	str	r3, [r7, #28]
   19c78:	bne	19bec <argp_failure@@Base+0x490>
   19c7c:	ldr	r2, [r7, #16]
   19c80:	ldr	r1, [r7, #24]
   19c84:	ldr	r3, [r7, #28]
   19c88:	sub	r3, r3, r1
   19c8c:	cmp	r3, r2
   19c90:	bhi	1a694 <argp_failure@@Base+0xf38>
   19c94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19c98:	mov	r2, #0
   19c9c:	str	r2, [r7, #4]
   19ca0:	cmp	r3, r2
   19ca4:	beq	1a2dc <argp_failure@@Base+0xb80>
   19ca8:	ldr	r3, [r4, #12]
   19cac:	tst	r3, #8
   19cb0:	bne	19cdc <argp_failure@@Base+0x580>
   19cb4:	ldr	r6, [r4, #4]
   19cb8:	sub	r3, r6, #1
   19cbc:	cmp	r3, #254	; 0xfe
   19cc0:	bhi	19cdc <argp_failure@@Base+0x580>
   19cc4:	bl	119ac <__ctype_b_loc@plt>
   19cc8:	ldr	r3, [r0]
   19ccc:	lsl	r6, r6, #1
   19cd0:	ldrh	r3, [r3, r6]
   19cd4:	tst	r3, #16384	; 0x4000
   19cd8:	bne	19ce8 <argp_failure@@Base+0x58c>
   19cdc:	ldr	r3, [r4]
   19ce0:	cmp	r3, #0
   19ce4:	beq	1a7d0 <argp_failure@@Base+0x1074>
   19ce8:	ldr	r2, [r7, #16]
   19cec:	ldr	r1, [r7, #24]
   19cf0:	ldr	r3, [r7, #28]
   19cf4:	sub	r3, r3, r1
   19cf8:	cmp	r3, r2
   19cfc:	bhi	1a660 <argp_failure@@Base+0xf04>
   19d00:	ldr	r3, [fp, #-120]	; 0xffffff88
   19d04:	str	r3, [r7, #4]
   19d08:	ldr	r3, [fp, #-112]	; 0xffffff90
   19d0c:	add	r5, r5, #28
   19d10:	subs	r3, r3, #1
   19d14:	str	r3, [fp, #-112]	; 0xffffff90
   19d18:	ldr	r3, [fp, #-116]	; 0xffffff8c
   19d1c:	str	r3, [r7, #12]
   19d20:	bne	19a74 <argp_failure@@Base+0x318>
   19d24:	ldr	r8, [fp, #-96]	; 0xffffffa0
   19d28:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19d2c:	cmp	r3, #0
   19d30:	beq	19dac <argp_failure@@Base+0x650>
   19d34:	ldr	r3, [r8, #4]
   19d38:	cmp	r3, #0
   19d3c:	beq	19dac <argp_failure@@Base+0x650>
   19d40:	ldr	ip, [fp, #-104]	; 0xffffff98
   19d44:	cmp	ip, #0
   19d48:	beq	1ab10 <argp_failure@@Base+0x13b4>
   19d4c:	ldr	r2, [ip]
   19d50:	cmp	r2, #0
   19d54:	beq	1aa80 <argp_failure@@Base+0x1324>
   19d58:	ldr	r3, [r2, #20]
   19d5c:	cmp	r3, #0
   19d60:	beq	1aa80 <argp_failure@@Base+0x1324>
   19d64:	movw	r5, #54756	; 0xd5e4
   19d68:	movt	r5, #1
   19d6c:	mov	r0, r5
   19d70:	mov	r1, #5
   19d74:	movt	r1, #512	; 0x200
   19d78:	mov	r3, ip
   19d7c:	bl	17b7c <argp_parse@@Base+0x1ab4>
   19d80:	subs	r4, r0, #0
   19d84:	beq	19dac <argp_failure@@Base+0x650>
   19d88:	ldrb	r3, [r4]
   19d8c:	subs	r5, r4, r5
   19d90:	movne	r5, #1
   19d94:	cmp	r3, #0
   19d98:	bne	1aa8c <argp_failure@@Base+0x1330>
   19d9c:	cmp	r5, #0
   19da0:	beq	19dac <argp_failure@@Base+0x650>
   19da4:	mov	r0, r4
   19da8:	bl	170ac <argp_parse@@Base+0xfe4>
   19dac:	mov	r4, #1
   19db0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19db4:	tst	r3, #32
   19db8:	bne	1a26c <argp_failure@@Base+0xb10>
   19dbc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19dc0:	tst	r3, #64	; 0x40
   19dc4:	beq	19df4 <argp_failure@@Base+0x698>
   19dc8:	movw	r5, #58900	; 0xe614
   19dcc:	movt	r5, #2
   19dd0:	ldr	r2, [r5]
   19dd4:	cmp	r2, #0
   19dd8:	beq	19df4 <argp_failure@@Base+0x698>
   19ddc:	cmp	r4, #0
   19de0:	bne	1a2a4 <argp_failure@@Base+0xb48>
   19de4:	movw	r1, #55188	; 0xd794
   19de8:	movt	r1, #1
   19dec:	mov	r0, r7
   19df0:	bl	1c144 <argp_error@@Base+0x14e8>
   19df4:	ldr	r0, [fp, #-128]	; 0xffffff80
   19df8:	bl	118d4 <funlockfile@plt>
   19dfc:	ldr	r3, [fp, #-136]	; 0xffffff78
   19e00:	cmp	r3, #0
   19e04:	beq	19e10 <argp_failure@@Base+0x6b4>
   19e08:	mov	r0, r3
   19e0c:	bl	17828 <argp_parse@@Base+0x1760>
   19e10:	mov	r0, r7
   19e14:	bl	1bff4 <argp_error@@Base+0x1398>
   19e18:	sub	sp, fp, #32
   19e1c:	ldrd	r4, [sp]
   19e20:	ldrd	r6, [sp, #8]
   19e24:	ldrd	r8, [sp, #16]
   19e28:	ldrd	sl, [sp, #24]
   19e2c:	add	sp, sp, #32
   19e30:	pop	{pc}		; (ldr pc, [sp], #4)
   19e34:	movw	r0, #54872	; 0xd658
   19e38:	movt	r0, #1
   19e3c:	bl	11940 <getenv@plt>
   19e40:	subs	r5, r0, #0
   19e44:	ldrd	r2, [r8]
   19e48:	sub	ip, fp, #76	; 0x4c
   19e4c:	ldrd	r0, [r8, #8]
   19e50:	str	ip, [fp, #-96]	; 0xffffffa0
   19e54:	ldrd	r6, [r8, #16]
   19e58:	strd	r2, [fp, #-76]	; 0xffffffb4
   19e5c:	ldrd	r2, [r8, #24]
   19e60:	strd	r0, [fp, #-68]	; 0xffffffbc
   19e64:	ldrd	r0, [r8, #32]
   19e68:	strd	r6, [fp, #-60]	; 0xffffffc4
   19e6c:	strd	r2, [fp, #-52]	; 0xffffffcc
   19e70:	strd	r0, [fp, #-44]	; 0xffffffd4
   19e74:	beq	199c4 <argp_failure@@Base+0x268>
   19e78:	ldrb	sl, [r5]
   19e7c:	movw	r3, #54936	; 0xd698
   19e80:	movt	r3, #1
   19e84:	ldr	r9, [pc, #3300]	; 1ab70 <argp_failure@@Base+0x1414>
   19e88:	str	r3, [fp, #-116]	; 0xffffff8c
   19e8c:	movw	r3, #54888	; 0xd668
   19e90:	movt	r3, #1
   19e94:	str	r3, [fp, #-120]	; 0xffffff88
   19e98:	cmp	sl, #0
   19e9c:	beq	19ed4 <argp_failure@@Base+0x778>
   19ea0:	bl	119ac <__ctype_b_loc@plt>
   19ea4:	mov	r7, r0
   19ea8:	ldr	r1, [r0]
   19eac:	b	19eb4 <argp_failure@@Base+0x758>
   19eb0:	ldrb	sl, [r5, #1]!
   19eb4:	lsl	r3, sl, #1
   19eb8:	ldrh	r6, [r1, r3]
   19ebc:	tst	r6, #8192	; 0x2000
   19ec0:	bne	19eb0 <argp_failure@@Base+0x754>
   19ec4:	ands	r2, r6, #1024	; 0x400
   19ec8:	bne	1a538 <argp_failure@@Base+0xddc>
   19ecc:	cmp	sl, #0
   19ed0:	bne	1a960 <argp_failure@@Base+0x1204>
   19ed4:	ldr	r1, [pc, #3224]	; 1ab74 <argp_failure@@Base+0x1418>
   19ed8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   19edc:	add	r3, r1, #16
   19ee0:	cmp	r3, r9
   19ee4:	mov	r1, r3
   19ee8:	beq	1a83c <argp_failure@@Base+0x10e0>
   19eec:	ldrb	r2, [r3, #14]
   19ef0:	cmp	r2, #0
   19ef4:	bne	19edc <argp_failure@@Base+0x780>
   19ef8:	ldrb	r0, [r3, #15]
   19efc:	sub	ip, fp, #36	; 0x24
   19f00:	cmp	r0, #32
   19f04:	add	ip, ip, r0
   19f08:	beq	19edc <argp_failure@@Base+0x780>
   19f0c:	ldr	r0, [ip, #-40]	; 0xffffffd8
   19f10:	cmp	r0, lr
   19f14:	blt	19edc <argp_failure@@Base+0x780>
   19f18:	movw	r0, #55060	; 0xd714
   19f1c:	movt	r0, #1
   19f20:	mov	r1, r2
   19f24:	stm	sp, {r0, r3}
   19f28:	movw	r3, #55008	; 0xd6e0
   19f2c:	movt	r3, #1
   19f30:	ldr	r0, [fp, #-104]	; 0xffffff98
   19f34:	bl	1975c <argp_failure@@Base>
   19f38:	b	199c4 <argp_failure@@Base+0x268>
   19f3c:	ldr	r3, [fp, #4]
   19f40:	movw	r1, #55108	; 0xd744
   19f44:	movt	r1, #1
   19f48:	mov	r0, r7
   19f4c:	mov	r2, r3
   19f50:	bl	1c144 <argp_error@@Base+0x14e8>
   19f54:	cmp	r5, #0
   19f58:	beq	19dac <argp_failure@@Base+0x650>
   19f5c:	ldr	r3, [fp, #-136]	; 0xffffff78
   19f60:	ldr	r3, [r3, #4]
   19f64:	cmp	r3, #0
   19f68:	beq	19dac <argp_failure@@Base+0x650>
   19f6c:	ldr	r3, [r7, #28]
   19f70:	ldr	r2, [r7, #32]
   19f74:	cmp	r3, r2
   19f78:	bcs	1a9c8 <argp_failure@@Base+0x126c>
   19f7c:	add	r1, r3, #1
   19f80:	mov	r2, #10
   19f84:	str	r1, [r7, #28]
   19f88:	strb	r2, [r3]
   19f8c:	ldr	r3, [fp, #-136]	; 0xffffff78
   19f90:	ldr	r3, [r3, #4]
   19f94:	str	r3, [fp, #-112]	; 0xffffff90
   19f98:	mov	r3, #0
   19f9c:	ldr	r2, [fp, #-112]	; 0xffffff90
   19fa0:	cmp	r2, r3
   19fa4:	ldr	r2, [fp, #-136]	; 0xffffff78
   19fa8:	ldr	r2, [r2]
   19fac:	str	r3, [fp, #-88]	; 0xffffffa8
   19fb0:	str	r3, [fp, #-84]	; 0xffffffac
   19fb4:	str	r3, [fp, #-80]	; 0xffffffb0
   19fb8:	bne	19a54 <argp_failure@@Base+0x2f8>
   19fbc:	b	19dac <argp_failure@@Base+0x650>
   19fc0:	mov	r0, #1
   19fc4:	mov	r3, #0
   19fc8:	ldr	r1, [fp, #-104]	; 0xffffff98
   19fcc:	mov	r2, r3
   19fd0:	stm	sp, {r0, r7}
   19fd4:	ldr	r0, [fp, #-108]	; 0xffffff94
   19fd8:	bl	1918c <argp_parse@@Base+0x30c4>
   19fdc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19fe0:	orr	r4, r4, r0
   19fe4:	tst	r3, #4
   19fe8:	and	r5, r3, #8
   19fec:	beq	19a18 <argp_failure@@Base+0x2bc>
   19ff0:	b	19f3c <argp_failure@@Base+0x7e0>
   19ff4:	ldr	r3, [fp, #-108]	; 0xffffff94
   19ff8:	movw	r2, #55084	; 0xd72c
   19ffc:	movt	r2, #1
   1a000:	movw	sl, #55076	; 0xd724
   1a004:	movt	sl, #1
   1a008:	str	r2, [fp, #-120]	; 0xffffff88
   1a00c:	mov	r4, #1
   1a010:	ldr	r0, [r3, #8]
   1a014:	ldr	r1, [r3, #16]
   1a018:	movw	r3, #55068	; 0xd71c
   1a01c:	movt	r3, #1
   1a020:	str	r3, [fp, #-124]	; 0xffffff84
   1a024:	bl	17b10 <argp_parse@@Base+0x1a48>
   1a028:	add	r3, r0, #7
   1a02c:	mov	r2, r0
   1a030:	bic	r3, r3, #7
   1a034:	mov	r1, #0
   1a038:	sub	sp, sp, r3
   1a03c:	add	r9, sp, #8
   1a040:	mov	r0, r9
   1a044:	bl	11a54 <memset@plt>
   1a048:	sub	r3, fp, #76	; 0x4c
   1a04c:	str	sl, [fp, #-116]	; 0xffffff8c
   1a050:	str	r9, [fp, #-112]	; 0xffffff90
   1a054:	str	r3, [fp, #-96]	; 0xffffffa0
   1a058:	ldr	r9, [fp, #-136]	; 0xffffff78
   1a05c:	ldr	sl, [fp, #-100]	; 0xffffff9c
   1a060:	b	1a13c <argp_failure@@Base+0x9e0>
   1a064:	cmp	r4, #0
   1a068:	mov	r0, r7
   1a06c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1a070:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a074:	ldrne	r2, [fp, #-124]	; 0xffffff84
   1a078:	ldreq	r2, [fp, #-120]	; 0xffffff88
   1a07c:	ldr	r4, [r7, #12]
   1a080:	str	r5, [r7, #12]
   1a084:	str	r3, [fp, #-76]	; 0xffffffb4
   1a088:	ldr	r3, [fp, #4]
   1a08c:	bl	1c144 <argp_error@@Base+0x14e8>
   1a090:	ldr	r2, [r7, #16]
   1a094:	ldr	r1, [r7, #24]
   1a098:	ldr	r3, [r7, #28]
   1a09c:	ldr	r5, [r8, #28]
   1a0a0:	sub	r3, r3, r1
   1a0a4:	cmp	r3, r2
   1a0a8:	bhi	1a260 <argp_failure@@Base+0xb04>
   1a0ac:	tst	sl, #2
   1a0b0:	ldr	r6, [r7, #4]
   1a0b4:	str	r5, [r7, #4]
   1a0b8:	beq	1a24c <argp_failure@@Base+0xaf0>
   1a0bc:	ldr	r3, [r9, #4]
   1a0c0:	cmp	r3, #0
   1a0c4:	bne	1a7e4 <argp_failure@@Base+0x1088>
   1a0c8:	mov	r3, #1
   1a0cc:	str	r7, [sp]
   1a0d0:	ldrd	r0, [fp, #-108]	; 0xffffff94
   1a0d4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a0d8:	bl	18b30 <argp_parse@@Base+0x2a68>
   1a0dc:	ldr	r1, [r7, #16]
   1a0e0:	mov	r5, r0
   1a0e4:	ldrd	r2, [r7, #24]
   1a0e8:	sub	r2, r3, r2
   1a0ec:	cmp	r2, r1
   1a0f0:	strls	r4, [r7, #12]
   1a0f4:	bhi	1a21c <argp_failure@@Base+0xac0>
   1a0f8:	ldr	r2, [r7, #32]
   1a0fc:	str	r6, [r7, #4]
   1a100:	cmp	r2, r3
   1a104:	bhi	1a120 <argp_failure@@Base+0x9c4>
   1a108:	mov	r1, #1
   1a10c:	mov	r0, r7
   1a110:	bl	1c124 <argp_error@@Base+0x14c8>
   1a114:	cmp	r0, #0
   1a118:	beq	1a130 <argp_failure@@Base+0x9d4>
   1a11c:	ldr	r3, [r7, #28]
   1a120:	add	r1, r3, #1
   1a124:	mov	r2, #10
   1a128:	str	r1, [r7, #28]
   1a12c:	strb	r2, [r3]
   1a130:	cmp	r5, #0
   1a134:	mov	r4, #0
   1a138:	beq	1a28c <argp_failure@@Base+0xb30>
   1a13c:	ldr	r2, [r7, #16]
   1a140:	ldr	r1, [r7, #24]
   1a144:	ldr	r3, [r7, #28]
   1a148:	ldr	r5, [r8, #28]
   1a14c:	sub	r3, r3, r1
   1a150:	cmp	r3, r2
   1a154:	bls	1a064 <argp_failure@@Base+0x908>
   1a158:	mov	r0, r7
   1a15c:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a160:	b	1a064 <argp_failure@@Base+0x908>
   1a164:	mov	r1, #0
   1a168:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a16c:	bl	17bc4 <argp_parse@@Base+0x1afc>
   1a170:	ldr	r5, [r0]
   1a174:	mov	r6, r0
   1a178:	movw	r2, #50108	; 0xc3bc
   1a17c:	movt	r2, #1
   1a180:	ldr	r4, [r0, #4]
   1a184:	str	r6, [fp, #-136]	; 0xffffff78
   1a188:	mov	r0, r5
   1a18c:	mov	r1, r4
   1a190:	bl	17a6c <argp_parse@@Base+0x19a4>
   1a194:	cmp	r0, #0
   1a198:	beq	1a1a8 <argp_failure@@Base+0xa4c>
   1a19c:	mvn	r3, #0
   1a1a0:	str	r3, [r0, #12]
   1a1a4:	ldr	r4, [r6, #4]
   1a1a8:	movw	r2, #53156	; 0xcfa4
   1a1ac:	movt	r2, #1
   1a1b0:	mov	r1, r4
   1a1b4:	mov	r0, r5
   1a1b8:	bl	17a6c <argp_parse@@Base+0x19a4>
   1a1bc:	cmp	r0, #0
   1a1c0:	beq	1a1d4 <argp_failure@@Base+0xa78>
   1a1c4:	mvn	r3, #0
   1a1c8:	str	r3, [r0, #12]
   1a1cc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1a1d0:	ldr	r4, [r3, #4]
   1a1d4:	cmp	r4, #0
   1a1d8:	beq	199f0 <argp_failure@@Base+0x294>
   1a1dc:	mov	r3, r5
   1a1e0:	mov	r1, #0
   1a1e4:	str	r1, [r3, #24]
   1a1e8:	add	r1, r1, #1
   1a1ec:	add	r3, r3, #28
   1a1f0:	cmp	r1, r4
   1a1f4:	bne	1a1e4 <argp_failure@@Base+0xa88>
   1a1f8:	mov	r0, r5
   1a1fc:	movw	r3, #34160	; 0x8570
   1a200:	movt	r3, #1
   1a204:	mov	r2, #28
   1a208:	bl	11b80 <qsort@plt>
   1a20c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a210:	ands	r4, r3, #3
   1a214:	beq	199fc <argp_failure@@Base+0x2a0>
   1a218:	b	19ff4 <argp_failure@@Base+0x898>
   1a21c:	mov	r0, r7
   1a220:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a224:	ldr	r1, [r7, #16]
   1a228:	str	r4, [r7, #12]
   1a22c:	ldrd	r2, [r7, #24]
   1a230:	sub	r2, r3, r2
   1a234:	cmp	r2, r1
   1a238:	bls	1a0f8 <argp_failure@@Base+0x99c>
   1a23c:	mov	r0, r7
   1a240:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a244:	ldr	r3, [r7, #28]
   1a248:	b	1a0f8 <argp_failure@@Base+0x99c>
   1a24c:	mov	r1, r7
   1a250:	mov	r0, r9
   1a254:	orr	sl, sl, #2
   1a258:	bl	1838c <argp_parse@@Base+0x22c4>
   1a25c:	b	1a0c8 <argp_failure@@Base+0x96c>
   1a260:	mov	r0, r7
   1a264:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a268:	b	1a0ac <argp_failure@@Base+0x950>
   1a26c:	mov	r2, #0
   1a270:	mov	r3, r4
   1a274:	ldrd	r0, [fp, #-108]	; 0xffffff94
   1a278:	stm	sp, {r2, r7}
   1a27c:	mov	r2, #1
   1a280:	bl	1918c <argp_parse@@Base+0x30c4>
   1a284:	orr	r4, r4, r0
   1a288:	b	19dbc <argp_failure@@Base+0x660>
   1a28c:	str	sl, [fp, #-100]	; 0xffffff9c
   1a290:	mov	r4, #1
   1a294:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a298:	tst	r3, #16
   1a29c:	beq	19a08 <argp_failure@@Base+0x2ac>
   1a2a0:	b	19fc0 <argp_failure@@Base+0x864>
   1a2a4:	ldr	r3, [r7, #28]
   1a2a8:	ldr	r2, [r7, #32]
   1a2ac:	cmp	r3, r2
   1a2b0:	bcs	1a998 <argp_failure@@Base+0x123c>
   1a2b4:	add	r1, r3, #1
   1a2b8:	mov	r2, #10
   1a2bc:	str	r1, [r7, #28]
   1a2c0:	strb	r2, [r3]
   1a2c4:	ldr	r2, [r5]
   1a2c8:	b	19de4 <argp_failure@@Base+0x688>
   1a2cc:	tst	r9, #2
   1a2d0:	beq	1a6b4 <argp_failure@@Base+0xf58>
   1a2d4:	add	r4, r4, #1
   1a2d8:	b	19b88 <argp_failure@@Base+0x42c>
   1a2dc:	ldr	r2, [r5, #20]
   1a2e0:	ldr	r6, [r4, #16]
   1a2e4:	cmp	r2, #0
   1a2e8:	beq	1a6ac <argp_failure@@Base+0xf50>
   1a2ec:	ldr	r3, [r2, #20]
   1a2f0:	cmp	r3, #0
   1a2f4:	beq	1a6ac <argp_failure@@Base+0xf50>
   1a2f8:	mov	r0, r6
   1a2fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a300:	ldr	r1, [r4, #4]
   1a304:	bl	17b7c <argp_parse@@Base+0x1ab4>
   1a308:	mov	r4, r0
   1a30c:	cmp	r4, #0
   1a310:	beq	1a4e0 <argp_failure@@Base+0xd84>
   1a314:	ldrb	r3, [r4]
   1a318:	cmp	r3, #0
   1a31c:	beq	1a4d0 <argp_failure@@Base+0xd74>
   1a320:	ldr	r2, [r7, #16]
   1a324:	ldr	r1, [r7, #24]
   1a328:	ldr	r3, [r7, #28]
   1a32c:	sub	r3, r3, r1
   1a330:	cmp	r3, r2
   1a334:	bhi	1a8e8 <argp_failure@@Base+0x118c>
   1a338:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a33c:	ldr	r9, [r7, #20]
   1a340:	ldr	r8, [r3, #20]
   1a344:	bic	r9, r9, r9, asr #31
   1a348:	mov	sl, r8
   1a34c:	str	r8, [r7, #4]
   1a350:	add	r3, r8, #3
   1a354:	str	sl, [r7, #12]
   1a358:	cmp	r3, r9
   1a35c:	bcc	1a8c4 <argp_failure@@Base+0x1168>
   1a360:	cmp	r8, r9
   1a364:	bhi	1a470 <argp_failure@@Base+0xd14>
   1a368:	ldr	r3, [r7, #28]
   1a36c:	ldr	r1, [r7, #32]
   1a370:	add	r2, r3, #3
   1a374:	cmp	r1, r2
   1a378:	bcs	1a394 <argp_failure@@Base+0xc38>
   1a37c:	mov	r1, #3
   1a380:	mov	r0, r7
   1a384:	bl	1c124 <argp_error@@Base+0x14c8>
   1a388:	cmp	r0, #0
   1a38c:	beq	1a47c <argp_failure@@Base+0xd20>
   1a390:	ldr	r3, [r7, #28]
   1a394:	movw	r2, #55184	; 0xd790
   1a398:	movt	r2, #1
   1a39c:	ldrh	r1, [r2]
   1a3a0:	ldrb	r2, [r2, #2]
   1a3a4:	strh	r1, [r3]
   1a3a8:	strb	r2, [r3, #2]
   1a3ac:	ldr	r3, [r7, #28]
   1a3b0:	add	r3, r3, #3
   1a3b4:	str	r3, [r7, #28]
   1a3b8:	b	1a47c <argp_failure@@Base+0xd20>
   1a3bc:	cmp	r3, r2
   1a3c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a3c4:	ldr	r6, [r3, #12]
   1a3c8:	bhi	1a784 <argp_failure@@Base+0x1028>
   1a3cc:	str	r6, [r7, #12]
   1a3d0:	ldr	sl, [r5, #4]
   1a3d4:	cmp	sl, #0
   1a3d8:	beq	19c7c <argp_failure@@Base+0x520>
   1a3dc:	movw	r3, #55172	; 0xd784
   1a3e0:	movt	r3, #1
   1a3e4:	movw	r8, #55164	; 0xd77c
   1a3e8:	movt	r8, #1
   1a3ec:	movw	r9, #55180	; 0xd78c
   1a3f0:	movt	r9, #1
   1a3f4:	str	r3, [fp, #-124]	; 0xffffff84
   1a3f8:	add	r6, r4, #24
   1a3fc:	b	1a40c <argp_failure@@Base+0xcb0>
   1a400:	subs	sl, sl, #1
   1a404:	add	r6, r6, #24
   1a408:	beq	19c7c <argp_failure@@Base+0x520>
   1a40c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1a410:	cmp	r3, #0
   1a414:	beq	1a400 <argp_failure@@Base+0xca4>
   1a418:	ldr	r3, [r6, #-12]
   1a41c:	tst	r3, #2
   1a420:	bne	1a400 <argp_failure@@Base+0xca4>
   1a424:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a428:	sub	r1, fp, #76	; 0x4c
   1a42c:	ldr	r0, [r3, #12]
   1a430:	bl	18fdc <argp_parse@@Base+0x2f14>
   1a434:	mov	r1, r8
   1a438:	mov	r0, r7
   1a43c:	ldr	r2, [r6, #-24]	; 0xffffffe8
   1a440:	bl	1c144 <argp_error@@Base+0x14e8>
   1a444:	ldr	r3, [r4, #8]
   1a448:	cmp	r3, #0
   1a44c:	beq	1a400 <argp_failure@@Base+0xca4>
   1a450:	ldr	ip, [r4, #12]
   1a454:	mov	r1, r9
   1a458:	mov	r2, r3
   1a45c:	mov	r0, r7
   1a460:	tst	ip, #1
   1a464:	ldrne	r1, [fp, #-124]	; 0xffffff84
   1a468:	bl	1c144 <argp_error@@Base+0x14e8>
   1a46c:	b	1a400 <argp_failure@@Base+0xca4>
   1a470:	mov	r1, r8
   1a474:	mov	r0, r7
   1a478:	bl	18914 <argp_parse@@Base+0x284c>
   1a47c:	mov	r0, r4
   1a480:	bl	119dc <strlen@plt>
   1a484:	subs	r8, r0, #0
   1a488:	beq	1a4d0 <argp_failure@@Base+0xd74>
   1a48c:	ldr	r0, [r7, #28]
   1a490:	ldr	r2, [r7, #32]
   1a494:	add	r3, r0, r8
   1a498:	cmp	r2, r3
   1a49c:	bcs	1a4b8 <argp_failure@@Base+0xd5c>
   1a4a0:	mov	r1, r8
   1a4a4:	mov	r0, r7
   1a4a8:	bl	1c124 <argp_error@@Base+0x14c8>
   1a4ac:	cmp	r0, #0
   1a4b0:	beq	1a4d0 <argp_failure@@Base+0xd74>
   1a4b4:	ldr	r0, [r7, #28]
   1a4b8:	mov	r2, r8
   1a4bc:	mov	r1, r4
   1a4c0:	bl	11808 <memcpy@plt>
   1a4c4:	ldr	r3, [r7, #28]
   1a4c8:	add	r8, r3, r8
   1a4cc:	str	r8, [r7, #28]
   1a4d0:	cmp	r6, r4
   1a4d4:	beq	1a4e0 <argp_failure@@Base+0xd84>
   1a4d8:	mov	r0, r4
   1a4dc:	bl	170ac <argp_parse@@Base+0xfe4>
   1a4e0:	ldr	r1, [r7, #16]
   1a4e4:	ldrd	r2, [r7, #24]
   1a4e8:	sub	r2, r3, r2
   1a4ec:	cmp	r2, r1
   1a4f0:	bhi	1a790 <argp_failure@@Base+0x1034>
   1a4f4:	mov	r2, #0
   1a4f8:	str	r2, [r7, #4]
   1a4fc:	ldr	r2, [r7, #32]
   1a500:	cmp	r2, r3
   1a504:	bhi	1a520 <argp_failure@@Base+0xdc4>
   1a508:	mov	r1, #1
   1a50c:	mov	r0, r7
   1a510:	bl	1c124 <argp_error@@Base+0x14c8>
   1a514:	cmp	r0, #0
   1a518:	beq	1a530 <argp_failure@@Base+0xdd4>
   1a51c:	ldr	r3, [r7, #28]
   1a520:	add	r1, r3, #1
   1a524:	mov	r2, #10
   1a528:	str	r1, [r7, #28]
   1a52c:	strb	r2, [r3]
   1a530:	str	r5, [fp, #-88]	; 0xffffffa8
   1a534:	b	19ce8 <argp_failure@@Base+0x58c>
   1a538:	cmp	sl, #95	; 0x5f
   1a53c:	cmpne	sl, #45	; 0x2d
   1a540:	ubfx	r6, r6, #3, #1
   1a544:	moveq	r3, #1
   1a548:	movne	r3, #0
   1a54c:	orrs	r6, r3, r6
   1a550:	beq	1aa74 <argp_failure@@Base+0x1318>
   1a554:	mov	r4, r5
   1a558:	ldrb	r3, [r4, #1]!
   1a55c:	lsl	r2, r3, #1
   1a560:	cmp	r3, #45	; 0x2d
   1a564:	cmpne	r3, #95	; 0x5f
   1a568:	moveq	ip, #1
   1a56c:	movne	ip, #0
   1a570:	ldrh	r2, [r1, r2]
   1a574:	ubfx	r0, r2, #3, #1
   1a578:	orrs	r0, ip, r0
   1a57c:	bne	1a558 <argp_failure@@Base+0xdfc>
   1a580:	tst	r2, #8192	; 0x2000
   1a584:	sub	r6, r4, r5
   1a588:	beq	1a5a0 <argp_failure@@Base+0xe44>
   1a58c:	ldrb	r3, [r4, #1]!
   1a590:	lsl	r2, r3, #1
   1a594:	ldrh	r2, [r1, r2]
   1a598:	tst	r2, #8192	; 0x2000
   1a59c:	bne	1a58c <argp_failure@@Base+0xe30>
   1a5a0:	cmp	r3, #44	; 0x2c
   1a5a4:	cmpne	r3, #0
   1a5a8:	beq	1a770 <argp_failure@@Base+0x1014>
   1a5ac:	cmp	r3, #61	; 0x3d
   1a5b0:	beq	1a9e4 <argp_failure@@Base+0x1288>
   1a5b4:	ldrb	r3, [r4]
   1a5b8:	lsl	r3, r3, #1
   1a5bc:	ldrh	r3, [r1, r3]
   1a5c0:	ands	r3, r3, #2048	; 0x800
   1a5c4:	moveq	r7, r3
   1a5c8:	streq	r7, [fp, #-112]	; 0xffffff90
   1a5cc:	bne	1aa14 <argp_failure@@Base+0x12b8>
   1a5d0:	ldr	sl, [pc, #1436]	; 1ab74 <argp_failure@@Base+0x1418>
   1a5d4:	b	1a5e4 <argp_failure@@Base+0xe88>
   1a5d8:	add	sl, sl, #16
   1a5dc:	cmp	sl, r9
   1a5e0:	beq	1a874 <argp_failure@@Base+0x1118>
   1a5e4:	mov	r0, sl
   1a5e8:	bl	119dc <strlen@plt>
   1a5ec:	cmp	r0, r6
   1a5f0:	bne	1a5d8 <argp_failure@@Base+0xe7c>
   1a5f4:	mov	r2, r6
   1a5f8:	mov	r1, sl
   1a5fc:	mov	r0, r5
   1a600:	bl	11bd4 <strncmp@plt>
   1a604:	cmp	r0, #0
   1a608:	bne	1a5d8 <argp_failure@@Base+0xe7c>
   1a60c:	cmp	r7, #0
   1a610:	bne	1a9b4 <argp_failure@@Base+0x1258>
   1a614:	ldrb	r3, [sl, #15]
   1a618:	sub	r2, fp, #36	; 0x24
   1a61c:	add	r3, r2, r3
   1a620:	ldr	r2, [fp, #-112]	; 0xffffff90
   1a624:	str	r2, [r3, #-40]	; 0xffffffd8
   1a628:	ldrb	sl, [r4]
   1a62c:	cmp	sl, #44	; 0x2c
   1a630:	movne	r5, r4
   1a634:	bne	19e98 <argp_failure@@Base+0x73c>
   1a638:	add	r5, r4, #1
   1a63c:	ldrb	sl, [r4, #1]
   1a640:	b	19e98 <argp_failure@@Base+0x73c>
   1a644:	mov	r0, r7
   1a648:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a64c:	ldr	r0, [r7, #16]
   1a650:	ldr	r3, [r7, #24]
   1a654:	ldr	r2, [r7, #28]
   1a658:	sub	r2, r2, r3
   1a65c:	b	19a94 <argp_failure@@Base+0x338>
   1a660:	mov	r0, r7
   1a664:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a668:	ldr	r3, [fp, #-120]	; 0xffffff88
   1a66c:	ldr	r2, [r7, #16]
   1a670:	ldr	r1, [r7, #24]
   1a674:	str	r3, [r7, #4]
   1a678:	ldr	r3, [r7, #28]
   1a67c:	sub	r3, r3, r1
   1a680:	cmp	r3, r2
   1a684:	bls	19d08 <argp_failure@@Base+0x5ac>
   1a688:	mov	r0, r7
   1a68c:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a690:	b	19d08 <argp_failure@@Base+0x5ac>
   1a694:	mov	r0, r7
   1a698:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a69c:	b	19c94 <argp_failure@@Base+0x538>
   1a6a0:	mov	r0, r7
   1a6a4:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a6a8:	b	19b28 <argp_failure@@Base+0x3cc>
   1a6ac:	mov	r4, r6
   1a6b0:	b	1a30c <argp_failure@@Base+0xbb0>
   1a6b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a6b8:	sub	r1, fp, #76	; 0x4c
   1a6bc:	ldr	r0, [r3, #8]
   1a6c0:	bl	18fdc <argp_parse@@Base+0x2f14>
   1a6c4:	ldr	r2, [r7, #28]
   1a6c8:	ldr	r1, [r7, #32]
   1a6cc:	cmp	r2, r1
   1a6d0:	bcc	1a6ec <argp_failure@@Base+0xf90>
   1a6d4:	mov	r1, #1
   1a6d8:	mov	r0, r7
   1a6dc:	bl	1c124 <argp_error@@Base+0x14c8>
   1a6e0:	cmp	r0, #0
   1a6e4:	beq	1a6fc <argp_failure@@Base+0xfa0>
   1a6e8:	ldr	r2, [r7, #28]
   1a6ec:	add	r0, r2, #1
   1a6f0:	mov	r1, #45	; 0x2d
   1a6f4:	str	r0, [r7, #28]
   1a6f8:	strb	r1, [r2]
   1a6fc:	ldr	r2, [r7, #28]
   1a700:	ldr	r1, [r7, #32]
   1a704:	ldrb	r8, [r4]
   1a708:	cmp	r2, r1
   1a70c:	bcc	1a728 <argp_failure@@Base+0xfcc>
   1a710:	mov	r1, #1
   1a714:	mov	r0, r7
   1a718:	bl	1c124 <argp_error@@Base+0x14c8>
   1a71c:	cmp	r0, #0
   1a720:	beq	1a734 <argp_failure@@Base+0xfd8>
   1a724:	ldr	r2, [r7, #28]
   1a728:	add	r1, r2, #1
   1a72c:	str	r1, [r7, #28]
   1a730:	strb	r8, [r2]
   1a734:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a738:	ldr	r2, [r5, #8]
   1a73c:	cmp	r3, #0
   1a740:	beq	1a7ac <argp_failure@@Base+0x1050>
   1a744:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a748:	ldr	r1, [r3]
   1a74c:	cmp	r1, #0
   1a750:	bne	1a7ac <argp_failure@@Base+0x1050>
   1a754:	cmp	r2, #0
   1a758:	movne	r2, #1
   1a75c:	strne	r2, [fp, #-80]	; 0xffffffb0
   1a760:	b	1a2d4 <argp_failure@@Base+0xb78>
   1a764:	mov	r3, #1
   1a768:	str	r3, [fp, #-124]	; 0xffffff84
   1a76c:	b	19b18 <argp_failure@@Base+0x3bc>
   1a770:	cmp	sl, #110	; 0x6e
   1a774:	beq	1a894 <argp_failure@@Base+0x1138>
   1a778:	mov	r7, #1
   1a77c:	str	r7, [fp, #-112]	; 0xffffff90
   1a780:	b	1a5d0 <argp_failure@@Base+0xe74>
   1a784:	mov	r0, r7
   1a788:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a78c:	b	1a3cc <argp_failure@@Base+0xc70>
   1a790:	mov	r0, r7
   1a794:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a798:	ldr	r3, [r7, #28]
   1a79c:	b	1a4f4 <argp_failure@@Base+0xd98>
   1a7a0:	mov	r0, r7
   1a7a4:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a7a8:	b	19bc8 <argp_failure@@Base+0x46c>
   1a7ac:	cmp	r2, #0
   1a7b0:	beq	1a2d4 <argp_failure@@Base+0xb78>
   1a7b4:	ldr	r1, [r5, #12]
   1a7b8:	mov	r0, r7
   1a7bc:	tst	r1, #1
   1a7c0:	ldrne	r1, [fp, #-144]	; 0xffffff70
   1a7c4:	ldreq	r1, [fp, #-140]	; 0xffffff74
   1a7c8:	bl	1c144 <argp_error@@Base+0x14e8>
   1a7cc:	b	1a2d4 <argp_failure@@Base+0xb78>
   1a7d0:	sub	r2, fp, #76	; 0x4c
   1a7d4:	ldr	r0, [r4, #16]
   1a7d8:	ldr	r1, [r5, #20]
   1a7dc:	bl	18d70 <argp_parse@@Base+0x2ca8>
   1a7e0:	b	1a530 <argp_failure@@Base+0xdd4>
   1a7e4:	ldr	r3, [r7, #28]
   1a7e8:	ldr	r1, [r7, #32]
   1a7ec:	add	r2, r3, #12
   1a7f0:	cmp	r1, r2
   1a7f4:	bcs	1a810 <argp_failure@@Base+0x10b4>
   1a7f8:	mov	r1, #12
   1a7fc:	mov	r0, r7
   1a800:	bl	1c124 <argp_error@@Base+0x14c8>
   1a804:	cmp	r0, #0
   1a808:	beq	1a0c8 <argp_failure@@Base+0x96c>
   1a80c:	ldr	r3, [r7, #28]
   1a810:	movw	r2, #55092	; 0xd734
   1a814:	movt	r2, #1
   1a818:	ldrd	r0, [r2]
   1a81c:	ldr	r2, [r2, #8]
   1a820:	str	r0, [r3]
   1a824:	str	r1, [r3, #4]
   1a828:	str	r2, [r3, #8]
   1a82c:	ldr	r3, [r7, #28]
   1a830:	add	r3, r3, #12
   1a834:	str	r3, [r7, #28]
   1a838:	b	1a0c8 <argp_failure@@Base+0x96c>
   1a83c:	ldr	lr, [fp, #-96]	; 0xffffffa0
   1a840:	mov	ip, #1
   1a844:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   1a848:	ldrd	r4, [lr, #8]
   1a84c:	ldrd	r2, [lr, #32]
   1a850:	strd	r0, [r8]
   1a854:	ldrd	r0, [lr, #24]
   1a858:	strd	r4, [r8, #8]
   1a85c:	strd	r2, [r8, #32]
   1a860:	ldrd	r2, [lr, #16]
   1a864:	strd	r2, [r8, #16]
   1a868:	strd	r0, [r8, #24]
   1a86c:	str	ip, [r8, #36]	; 0x24
   1a870:	b	199c4 <argp_failure@@Base+0x268>
   1a874:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1a878:	mov	r2, #0
   1a87c:	mov	r1, r2
   1a880:	str	r6, [sp]
   1a884:	str	r5, [sp, #4]
   1a888:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a88c:	bl	1975c <argp_failure@@Base>
   1a890:	b	1a628 <argp_failure@@Base+0xecc>
   1a894:	ldrb	r3, [r5, #1]
   1a898:	cmp	r3, #111	; 0x6f
   1a89c:	bne	1a778 <argp_failure@@Base+0x101c>
   1a8a0:	ldrb	r3, [r5, #2]
   1a8a4:	cmp	r3, #45	; 0x2d
   1a8a8:	bne	1a778 <argp_failure@@Base+0x101c>
   1a8ac:	mov	r3, #0
   1a8b0:	add	r5, r5, #3
   1a8b4:	sub	r6, r6, #3
   1a8b8:	mov	r7, #1
   1a8bc:	str	r3, [fp, #-112]	; 0xffffff90
   1a8c0:	b	1a5d0 <argp_failure@@Base+0xe74>
   1a8c4:	ldr	r3, [r7, #28]
   1a8c8:	ldr	r2, [r7, #32]
   1a8cc:	cmp	r3, r2
   1a8d0:	bcs	1a97c <argp_failure@@Base+0x1220>
   1a8d4:	add	r1, r3, #1
   1a8d8:	mov	r2, #10
   1a8dc:	str	r1, [r7, #28]
   1a8e0:	strb	r2, [r3]
   1a8e4:	b	1a47c <argp_failure@@Base+0xd20>
   1a8e8:	mov	r0, r7
   1a8ec:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a8f0:	ldr	r2, [r7, #16]
   1a8f4:	ldr	r1, [r7, #24]
   1a8f8:	ldr	r3, [r7, #28]
   1a8fc:	ldr	sl, [fp, #-96]	; 0xffffffa0
   1a900:	ldr	r9, [r7, #20]
   1a904:	sub	r3, r3, r1
   1a908:	cmp	r3, r2
   1a90c:	ldr	r8, [sl, #20]
   1a910:	bic	r9, r9, r9, asr #31
   1a914:	bls	1a348 <argp_failure@@Base+0xbec>
   1a918:	mov	r0, r7
   1a91c:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a920:	ldr	r2, [r7, #16]
   1a924:	str	r8, [r7, #4]
   1a928:	mov	r8, sl
   1a92c:	ldr	r1, [r7, #24]
   1a930:	ldr	r3, [r7, #28]
   1a934:	ldr	sl, [sl, #20]
   1a938:	sub	r3, r3, r1
   1a93c:	cmp	r3, r2
   1a940:	bls	1ab68 <argp_failure@@Base+0x140c>
   1a944:	mov	r0, r7
   1a948:	bl	1bab8 <argp_error@@Base+0xe5c>
   1a94c:	ldr	r8, [r8, #20]
   1a950:	b	1a350 <argp_failure@@Base+0xbf4>
   1a954:	ldr	r0, [fp, #-128]	; 0xffffff80
   1a958:	bl	118d4 <funlockfile@plt>
   1a95c:	b	19e18 <argp_failure@@Base+0x6bc>
   1a960:	movw	r3, #54976	; 0xd6c0
   1a964:	movt	r3, #1
   1a968:	str	r5, [sp]
   1a96c:	mov	r1, r2
   1a970:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a974:	bl	1975c <argp_failure@@Base>
   1a978:	b	19ed4 <argp_failure@@Base+0x778>
   1a97c:	mov	r1, #1
   1a980:	mov	r0, r7
   1a984:	bl	1c124 <argp_error@@Base+0x14c8>
   1a988:	cmp	r0, #0
   1a98c:	beq	1a47c <argp_failure@@Base+0xd20>
   1a990:	ldr	r3, [r7, #28]
   1a994:	b	1a8d4 <argp_failure@@Base+0x1178>
   1a998:	mov	r1, #1
   1a99c:	mov	r0, r7
   1a9a0:	bl	1c124 <argp_error@@Base+0x14c8>
   1a9a4:	cmp	r0, #0
   1a9a8:	ldrne	r3, [r7, #28]
   1a9ac:	bne	1a2b4 <argp_failure@@Base+0xb58>
   1a9b0:	b	1a2c4 <argp_failure@@Base+0xb68>
   1a9b4:	ldrb	r2, [sl, #14]
   1a9b8:	cmp	r2, #0
   1a9bc:	bne	1a614 <argp_failure@@Base+0xeb8>
   1a9c0:	ldr	r3, [fp, #-120]	; 0xffffff88
   1a9c4:	b	1a87c <argp_failure@@Base+0x1120>
   1a9c8:	mov	r1, #1
   1a9cc:	mov	r0, r7
   1a9d0:	bl	1c124 <argp_error@@Base+0x14c8>
   1a9d4:	cmp	r0, #0
   1a9d8:	ldrne	r3, [r7, #28]
   1a9dc:	bne	19f7c <argp_failure@@Base+0x820>
   1a9e0:	b	19f8c <argp_failure@@Base+0x830>
   1a9e4:	ldrb	r3, [r4, #1]
   1a9e8:	add	r4, r4, #1
   1a9ec:	lsl	r3, r3, #1
   1a9f0:	ldrh	r3, [r1, r3]
   1a9f4:	tst	r3, #8192	; 0x2000
   1a9f8:	beq	1a5c0 <argp_failure@@Base+0xe64>
   1a9fc:	ldrb	r3, [r4, #1]!
   1aa00:	lsl	r3, r3, #1
   1aa04:	ldrh	r3, [r1, r3]
   1aa08:	tst	r3, #8192	; 0x2000
   1aa0c:	bne	1a9fc <argp_failure@@Base+0x12a0>
   1aa10:	b	1a5c0 <argp_failure@@Base+0xe64>
   1aa14:	mov	r2, #10
   1aa18:	mov	r1, #0
   1aa1c:	mov	r0, r4
   1aa20:	bl	11760 <strtol@plt>
   1aa24:	ldrb	r3, [r4]
   1aa28:	ldr	r2, [r7]
   1aa2c:	lsl	r3, r3, #1
   1aa30:	ldrh	r7, [r2, r3]
   1aa34:	str	r0, [fp, #-112]	; 0xffffff90
   1aa38:	tst	r7, #2048	; 0x800
   1aa3c:	beq	1aa54 <argp_failure@@Base+0x12f8>
   1aa40:	ldrb	r3, [r4, #1]!
   1aa44:	lsl	r3, r3, #1
   1aa48:	ldrh	r7, [r2, r3]
   1aa4c:	tst	r7, #2048	; 0x800
   1aa50:	bne	1aa40 <argp_failure@@Base+0x12e4>
   1aa54:	ands	r7, r7, #8192	; 0x2000
   1aa58:	beq	1a5d0 <argp_failure@@Base+0xe74>
   1aa5c:	ldrb	r3, [r4, #1]!
   1aa60:	lsl	r3, r3, #1
   1aa64:	ldrh	r7, [r2, r3]
   1aa68:	ands	r7, r7, #8192	; 0x2000
   1aa6c:	bne	1aa5c <argp_failure@@Base+0x1300>
   1aa70:	b	1a5d0 <argp_failure@@Base+0xe74>
   1aa74:	mov	r3, sl
   1aa78:	mov	r4, r5
   1aa7c:	b	1a5a0 <argp_failure@@Base+0xe44>
   1aa80:	ldr	r5, [fp, #-112]	; 0xffffff90
   1aa84:	movw	r4, #54756	; 0xd5e4
   1aa88:	movt	r4, #1
   1aa8c:	ldr	r3, [r7, #28]
   1aa90:	ldr	r2, [r7, #32]
   1aa94:	cmp	r3, r2
   1aa98:	bcc	1aab4 <argp_failure@@Base+0x1358>
   1aa9c:	mov	r1, #1
   1aaa0:	mov	r0, r7
   1aaa4:	bl	1c124 <argp_error@@Base+0x14c8>
   1aaa8:	cmp	r0, #0
   1aaac:	beq	1aac4 <argp_failure@@Base+0x1368>
   1aab0:	ldr	r3, [r7, #28]
   1aab4:	add	r1, r3, #1
   1aab8:	mov	r2, #10
   1aabc:	str	r1, [r7, #28]
   1aac0:	strb	r2, [r3]
   1aac4:	mov	r0, r4
   1aac8:	bl	119dc <strlen@plt>
   1aacc:	subs	r6, r0, #0
   1aad0:	ldr	r0, [r7, #28]
   1aad4:	ldr	r3, [r7, #32]
   1aad8:	bne	1ab20 <argp_failure@@Base+0x13c4>
   1aadc:	cmp	r0, r3
   1aae0:	bcc	1aafc <argp_failure@@Base+0x13a0>
   1aae4:	mov	r1, #1
   1aae8:	mov	r0, r7
   1aaec:	bl	1c124 <argp_error@@Base+0x14c8>
   1aaf0:	cmp	r0, #0
   1aaf4:	beq	19d9c <argp_failure@@Base+0x640>
   1aaf8:	ldr	r0, [r7, #28]
   1aafc:	add	r2, r0, #1
   1ab00:	mov	r3, #10
   1ab04:	str	r2, [r7, #28]
   1ab08:	strb	r3, [r0]
   1ab0c:	b	19d9c <argp_failure@@Base+0x640>
   1ab10:	movw	r4, #54756	; 0xd5e4
   1ab14:	movt	r4, #1
   1ab18:	ldr	r5, [fp, #-104]	; 0xffffff98
   1ab1c:	b	1aa8c <argp_failure@@Base+0x1330>
   1ab20:	add	r2, r0, r6
   1ab24:	cmp	r3, r2
   1ab28:	bcs	1ab48 <argp_failure@@Base+0x13ec>
   1ab2c:	mov	r1, r6
   1ab30:	mov	r0, r7
   1ab34:	bl	1c124 <argp_error@@Base+0x14c8>
   1ab38:	cmp	r0, #0
   1ab3c:	ldr	r0, [r7, #28]
   1ab40:	ldreq	r3, [r7, #32]
   1ab44:	beq	1aadc <argp_failure@@Base+0x1380>
   1ab48:	mov	r2, r6
   1ab4c:	mov	r1, r4
   1ab50:	bl	11808 <memcpy@plt>
   1ab54:	ldr	r0, [r7, #28]
   1ab58:	ldr	r3, [r7, #32]
   1ab5c:	add	r0, r0, r6
   1ab60:	str	r0, [r7, #28]
   1ab64:	b	1aadc <argp_failure@@Base+0x1380>
   1ab68:	mov	r8, sl
   1ab6c:	b	1a350 <argp_failure@@Base+0xbf4>
   1ab70:			; <UNDEFINED> instruction: 0x0001d4b4
   1ab74:	andeq	sp, r1, r4, lsr #8

0001ab78 <argp_help@@Base>:
   1ab78:	push	{lr}		; (str lr, [sp, #-4]!)
   1ab7c:	sub	sp, sp, #12
   1ab80:	str	r3, [sp]
   1ab84:	mov	r3, r2
   1ab88:	mov	r2, r1
   1ab8c:	mov	r1, #0
   1ab90:	bl	19978 <argp_failure@@Base+0x21c>
   1ab94:	add	sp, sp, #12
   1ab98:	pop	{pc}		; (ldr pc, [sp], #4)

0001ab9c <argp_state_help@@Base>:
   1ab9c:	strd	r4, [sp, #-12]!
   1aba0:	subs	r4, r0, #0
   1aba4:	mov	r5, r2
   1aba8:	str	lr, [sp, #8]
   1abac:	sub	sp, sp, #12
   1abb0:	beq	1ac20 <argp_state_help@@Base+0x84>
   1abb4:	ldr	r3, [r4, #16]
   1abb8:	adds	r2, r1, #0
   1abbc:	movne	r2, #1
   1abc0:	eor	r0, r3, #2
   1abc4:	ands	r2, r2, r0, lsr #1
   1abc8:	bne	1abdc <argp_state_help@@Base+0x40>
   1abcc:	add	sp, sp, #12
   1abd0:	ldrd	r4, [sp]
   1abd4:	add	sp, sp, #8
   1abd8:	pop	{pc}		; (ldr pc, [sp], #4)
   1abdc:	ldr	r0, [r4, #40]	; 0x28
   1abe0:	tst	r3, #64	; 0x40
   1abe4:	mov	r2, r1
   1abe8:	orrne	r5, r5, #128	; 0x80
   1abec:	mov	r1, r4
   1abf0:	mov	r3, r5
   1abf4:	str	r0, [sp]
   1abf8:	ldr	r0, [r4]
   1abfc:	bl	19978 <argp_failure@@Base+0x21c>
   1ac00:	ldr	r3, [r4, #16]
   1ac04:	tst	r3, #32
   1ac08:	bne	1abcc <argp_state_help@@Base+0x30>
   1ac0c:	ands	r0, r5, #256	; 0x100
   1ac10:	bne	1ac4c <argp_state_help@@Base+0xb0>
   1ac14:	tst	r5, #512	; 0x200
   1ac18:	beq	1abcc <argp_state_help@@Base+0x30>
   1ac1c:	bl	119c4 <exit@plt>
   1ac20:	cmp	r1, #0
   1ac24:	beq	1abcc <argp_state_help@@Base+0x30>
   1ac28:	movw	r3, #58280	; 0xe3a8
   1ac2c:	movt	r3, #2
   1ac30:	ldr	ip, [r3]
   1ac34:	mov	r2, r1
   1ac38:	mov	r3, r5
   1ac3c:	mov	r1, r4
   1ac40:	str	ip, [sp]
   1ac44:	bl	19978 <argp_failure@@Base+0x21c>
   1ac48:	b	1ac0c <argp_state_help@@Base+0x70>
   1ac4c:	movw	r3, #58276	; 0xe3a4
   1ac50:	movt	r3, #2
   1ac54:	ldr	r0, [r3]
   1ac58:	bl	119c4 <exit@plt>

0001ac5c <argp_error@@Base>:
   1ac5c:	push	{r1, r2, r3}
   1ac60:	strd	r4, [sp, #-12]!
   1ac64:	subs	r5, r0, #0
   1ac68:	str	lr, [sp, #8]
   1ac6c:	sub	sp, sp, #8
   1ac70:	beq	1ad48 <argp_error@@Base+0xec>
   1ac74:	ldr	r3, [r5, #16]
   1ac78:	tst	r3, #2
   1ac7c:	bne	1ad30 <argp_error@@Base+0xd4>
   1ac80:	ldr	r4, [r5, #44]	; 0x2c
   1ac84:	cmp	r4, #0
   1ac88:	beq	1ad30 <argp_error@@Base+0xd4>
   1ac8c:	mov	r0, r4
   1ac90:	bl	11b5c <flockfile@plt>
   1ac94:	ldr	r0, [r5, #40]	; 0x28
   1ac98:	add	r3, sp, #24
   1ac9c:	str	r3, [sp, #4]
   1aca0:	mov	r1, r4
   1aca4:	bl	11730 <fputs_unlocked@plt>
   1aca8:	ldr	r3, [r4, #20]
   1acac:	ldr	r2, [r4, #24]
   1acb0:	cmp	r3, r2
   1acb4:	addcc	r1, r3, #1
   1acb8:	movcc	r2, #58	; 0x3a
   1acbc:	strcc	r1, [r4, #20]
   1acc0:	strbcc	r2, [r3]
   1acc4:	bcs	1ad8c <argp_error@@Base+0x130>
   1acc8:	ldr	r3, [r4, #20]
   1accc:	ldr	r2, [r4, #24]
   1acd0:	cmp	r3, r2
   1acd4:	addcc	r1, r3, #1
   1acd8:	movcc	r2, #32
   1acdc:	strcc	r1, [r4, #20]
   1ace0:	strbcc	r2, [r3]
   1ace4:	bcs	1ad9c <argp_error@@Base+0x140>
   1ace8:	mov	r0, r4
   1acec:	ldr	r2, [sp, #4]
   1acf0:	ldr	r1, [sp, #20]
   1acf4:	bl	11afc <vfprintf@plt>
   1acf8:	ldr	r3, [r4, #20]
   1acfc:	ldr	r2, [r4, #24]
   1ad00:	cmp	r3, r2
   1ad04:	addcc	r1, r3, #1
   1ad08:	movcc	r2, #10
   1ad0c:	strcc	r1, [r4, #20]
   1ad10:	strbcc	r2, [r3]
   1ad14:	bcs	1ad7c <argp_error@@Base+0x120>
   1ad18:	mov	r0, r5
   1ad1c:	mov	r2, #260	; 0x104
   1ad20:	mov	r1, r4
   1ad24:	bl	1ab9c <argp_state_help@@Base>
   1ad28:	mov	r0, r4
   1ad2c:	bl	118d4 <funlockfile@plt>
   1ad30:	add	sp, sp, #8
   1ad34:	ldrd	r4, [sp]
   1ad38:	ldr	lr, [sp, #8]
   1ad3c:	add	sp, sp, #12
   1ad40:	add	sp, sp, #12
   1ad44:	bx	lr
   1ad48:	movw	r3, #58288	; 0xe3b0
   1ad4c:	movt	r3, #2
   1ad50:	ldr	r4, [r3]
   1ad54:	cmp	r4, #0
   1ad58:	beq	1ad30 <argp_error@@Base+0xd4>
   1ad5c:	mov	r0, r4
   1ad60:	bl	11b5c <flockfile@plt>
   1ad64:	add	r2, sp, #24
   1ad68:	movw	r3, #58280	; 0xe3a8
   1ad6c:	movt	r3, #2
   1ad70:	str	r2, [sp, #4]
   1ad74:	ldr	r0, [r3]
   1ad78:	b	1aca0 <argp_error@@Base+0x44>
   1ad7c:	mov	r1, #10
   1ad80:	mov	r0, r4
   1ad84:	bl	11ab4 <__overflow@plt>
   1ad88:	b	1ad18 <argp_error@@Base+0xbc>
   1ad8c:	mov	r1, #58	; 0x3a
   1ad90:	mov	r0, r4
   1ad94:	bl	11ab4 <__overflow@plt>
   1ad98:	b	1acc8 <argp_error@@Base+0x6c>
   1ad9c:	mov	r1, #32
   1ada0:	mov	r0, r4
   1ada4:	bl	11ab4 <__overflow@plt>
   1ada8:	b	1ace8 <argp_error@@Base+0x8c>
   1adac:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1adb0:	ldr	r4, [r1, #32]
   1adb4:	strd	r6, [sp, #8]
   1adb8:	strd	r8, [sp, #16]
   1adbc:	ldr	r7, [r1]
   1adc0:	str	sl, [sp, #24]
   1adc4:	ldr	r8, [r1, #28]
   1adc8:	add	r6, r0, r4, lsl #2
   1adcc:	str	lr, [sp, #28]
   1add0:	mov	r5, r7
   1add4:	mov	r3, r8
   1add8:	cmp	r5, r4
   1addc:	movle	r2, #0
   1ade0:	movgt	r2, #1
   1ade4:	cmp	r3, r4
   1ade8:	movge	r2, #0
   1adec:	cmp	r2, #0
   1adf0:	beq	1ae64 <argp_error@@Base+0x208>
   1adf4:	sub	r2, r5, r4
   1adf8:	sub	lr, r4, r3
   1adfc:	cmp	r2, lr
   1ae00:	ble	1ae34 <argp_error@@Base+0x1d8>
   1ae04:	sub	r5, r5, lr
   1ae08:	add	lr, lr, r3
   1ae0c:	add	r2, r0, r3, lsl #2
   1ae10:	add	lr, r0, lr, lsl #2
   1ae14:	add	ip, r0, r5, lsl #2
   1ae18:	ldr	sl, [ip]
   1ae1c:	ldr	r9, [r2]
   1ae20:	str	sl, [r2], #4
   1ae24:	cmp	lr, r2
   1ae28:	str	r9, [ip], #4
   1ae2c:	bne	1ae18 <argp_error@@Base+0x1bc>
   1ae30:	b	1add8 <argp_error@@Base+0x17c>
   1ae34:	add	sl, r2, r3
   1ae38:	add	r3, r0, r3, lsl #2
   1ae3c:	mov	r2, r6
   1ae40:	add	r9, r0, sl, lsl #2
   1ae44:	ldr	lr, [r2]
   1ae48:	ldr	ip, [r3]
   1ae4c:	str	lr, [r3], #4
   1ae50:	cmp	r3, r9
   1ae54:	str	ip, [r2], #4
   1ae58:	bne	1ae44 <argp_error@@Base+0x1e8>
   1ae5c:	mov	r3, sl
   1ae60:	b	1add8 <argp_error@@Base+0x17c>
   1ae64:	sub	r4, r7, r4
   1ae68:	str	r7, [r1, #32]
   1ae6c:	add	r8, r4, r8
   1ae70:	ldrd	r4, [sp]
   1ae74:	str	r8, [r1, #28]
   1ae78:	ldrd	r6, [sp, #8]
   1ae7c:	ldrd	r8, [sp, #16]
   1ae80:	ldr	sl, [sp, #24]
   1ae84:	add	sp, sp, #28
   1ae88:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae8c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ae90:	strd	r6, [sp, #8]
   1ae94:	strd	r8, [sp, #16]
   1ae98:	strd	sl, [sp, #24]
   1ae9c:	str	lr, [sp, #32]
   1aea0:	sub	sp, sp, #52	; 0x34
   1aea4:	str	r3, [sp, #12]
   1aea8:	ldr	r3, [sp, #96]	; 0x60
   1aeac:	str	r1, [sp, #28]
   1aeb0:	str	r2, [sp, #32]
   1aeb4:	str	r0, [sp, #36]	; 0x24
   1aeb8:	ldr	r8, [r3, #20]
   1aebc:	ldrb	r5, [r8]
   1aec0:	mov	r9, r8
   1aec4:	cmp	r5, #61	; 0x3d
   1aec8:	cmpne	r5, #0
   1aecc:	movne	r5, #1
   1aed0:	moveq	r5, #0
   1aed4:	beq	1aeec <argp_error@@Base+0x290>
   1aed8:	ldrb	r3, [r9, #1]!
   1aedc:	cmp	r3, #0
   1aee0:	cmpne	r3, #61	; 0x3d
   1aee4:	bne	1aed8 <argp_error@@Base+0x27c>
   1aee8:	sub	r5, r9, r8
   1aeec:	ldr	r3, [sp, #12]
   1aef0:	ldr	r3, [r3]
   1aef4:	cmp	r3, #0
   1aef8:	str	r3, [sp, #16]
   1aefc:	beq	1b0c4 <argp_error@@Base+0x468>
   1af00:	ldr	fp, [sp, #12]
   1af04:	mov	r6, #0
   1af08:	ldr	r4, [sp, #16]
   1af0c:	str	fp, [sp, #24]
   1af10:	b	1af18 <argp_error@@Base+0x2bc>
   1af14:	mov	r6, r7
   1af18:	mov	r2, r5
   1af1c:	mov	r1, r8
   1af20:	mov	r0, r4
   1af24:	add	r7, r6, #1
   1af28:	bl	11bd4 <strncmp@plt>
   1af2c:	cmp	r0, #0
   1af30:	mov	sl, fp
   1af34:	mov	r0, r4
   1af38:	bne	1af48 <argp_error@@Base+0x2ec>
   1af3c:	bl	119dc <strlen@plt>
   1af40:	cmp	r0, r5
   1af44:	beq	1affc <argp_error@@Base+0x3a0>
   1af48:	ldr	r4, [fp, #16]!
   1af4c:	cmp	r4, #0
   1af50:	bne	1af14 <argp_error@@Base+0x2b8>
   1af54:	ldr	r0, [sp, #16]
   1af58:	mvn	r3, #0
   1af5c:	mov	r1, r8
   1af60:	str	r7, [sp, #16]
   1af64:	mov	sl, r4
   1af68:	mov	r8, r4
   1af6c:	ldr	fp, [sp, #24]
   1af70:	str	r4, [sp, #20]
   1af74:	ldr	r7, [sp, #96]	; 0x60
   1af78:	str	r3, [sp, #40]	; 0x28
   1af7c:	str	r4, [sp, #44]	; 0x2c
   1af80:	mov	r2, r5
   1af84:	bl	11bd4 <strncmp@plt>
   1af88:	cmp	r0, #0
   1af8c:	bne	1afcc <argp_error@@Base+0x370>
   1af90:	cmp	sl, #0
   1af94:	beq	1b0b8 <argp_error@@Base+0x45c>
   1af98:	ldr	r3, [sp, #92]	; 0x5c
   1af9c:	cmp	r3, #0
   1afa0:	beq	1b06c <argp_error@@Base+0x410>
   1afa4:	ldr	r3, [sp, #20]
   1afa8:	cmp	r3, #0
   1afac:	bne	1afcc <argp_error@@Base+0x370>
   1afb0:	ldr	r3, [sp, #100]	; 0x64
   1afb4:	cmp	r3, #0
   1afb8:	beq	1b13c <argp_error@@Base+0x4e0>
   1afbc:	cmp	r4, #0
   1afc0:	beq	1b264 <argp_error@@Base+0x608>
   1afc4:	mov	r3, #1
   1afc8:	strb	r3, [r4, r8]
   1afcc:	ldr	r0, [fp, #16]!
   1afd0:	add	r8, r8, #1
   1afd4:	cmp	r0, #0
   1afd8:	beq	1afe4 <argp_error@@Base+0x388>
   1afdc:	ldr	r1, [r7, #20]
   1afe0:	b	1af80 <argp_error@@Base+0x324>
   1afe4:	ldr	r3, [sp, #20]
   1afe8:	orrs	r3, r4, r3
   1afec:	bne	1b18c <argp_error@@Base+0x530>
   1aff0:	cmp	sl, #0
   1aff4:	ldrne	r6, [sp, #40]	; 0x28
   1aff8:	beq	1b0c4 <argp_error@@Base+0x468>
   1affc:	ldr	r3, [sp, #96]	; 0x60
   1b000:	mov	r2, #0
   1b004:	ldr	r1, [sp, #96]	; 0x60
   1b008:	ldr	r0, [sl, #4]
   1b00c:	ldr	r3, [r3]
   1b010:	str	r2, [r1, #20]
   1b014:	add	r2, r3, #1
   1b018:	str	r2, [r1]
   1b01c:	ldrb	r1, [r9]
   1b020:	cmp	r1, #0
   1b024:	bne	1b0a0 <argp_error@@Base+0x444>
   1b028:	cmp	r0, #1
   1b02c:	beq	1b21c <argp_error@@Base+0x5c0>
   1b030:	ldr	r3, [sp, #88]	; 0x58
   1b034:	cmp	r3, #0
   1b038:	strne	r6, [r3]
   1b03c:	ldr	r3, [sl, #8]
   1b040:	ldr	r0, [sl, #12]
   1b044:	cmp	r3, #0
   1b048:	strne	r0, [r3]
   1b04c:	movne	r0, #0
   1b050:	add	sp, sp, #52	; 0x34
   1b054:	ldrd	r4, [sp]
   1b058:	ldrd	r6, [sp, #8]
   1b05c:	ldrd	r8, [sp, #16]
   1b060:	ldrd	sl, [sp, #24]
   1b064:	add	sp, sp, #32
   1b068:	pop	{pc}		; (ldr pc, [sp], #4)
   1b06c:	ldr	r1, [sl, #4]
   1b070:	ldr	r2, [fp, #4]
   1b074:	cmp	r1, r2
   1b078:	bne	1afa4 <argp_error@@Base+0x348>
   1b07c:	ldr	r1, [sl, #8]
   1b080:	ldr	r2, [fp, #8]
   1b084:	cmp	r1, r2
   1b088:	bne	1afa4 <argp_error@@Base+0x348>
   1b08c:	ldr	r1, [sl, #12]
   1b090:	ldr	r2, [fp, #12]
   1b094:	cmp	r1, r2
   1b098:	bne	1afa4 <argp_error@@Base+0x348>
   1b09c:	b	1afcc <argp_error@@Base+0x370>
   1b0a0:	cmp	r0, #0
   1b0a4:	beq	1b244 <argp_error@@Base+0x5e8>
   1b0a8:	ldr	r3, [sp, #96]	; 0x60
   1b0ac:	add	r9, r9, #1
   1b0b0:	str	r9, [r3, #12]
   1b0b4:	b	1b030 <argp_error@@Base+0x3d4>
   1b0b8:	mov	sl, fp
   1b0bc:	str	r8, [sp, #40]	; 0x28
   1b0c0:	b	1afcc <argp_error@@Base+0x370>
   1b0c4:	ldr	r3, [sp, #92]	; 0x5c
   1b0c8:	cmp	r3, #0
   1b0cc:	beq	1b108 <argp_error@@Base+0x4ac>
   1b0d0:	ldr	r2, [sp, #28]
   1b0d4:	ldr	r3, [sp, #96]	; 0x60
   1b0d8:	ldr	r3, [r3]
   1b0dc:	ldr	r3, [r2, r3, lsl #2]
   1b0e0:	ldrb	r3, [r3, #1]
   1b0e4:	cmp	r3, #45	; 0x2d
   1b0e8:	beq	1b108 <argp_error@@Base+0x4ac>
   1b0ec:	ldr	r0, [sp, #32]
   1b0f0:	ldr	r3, [sp, #96]	; 0x60
   1b0f4:	ldr	r3, [r3, #20]
   1b0f8:	ldrb	r1, [r3]
   1b0fc:	bl	119f4 <strchr@plt>
   1b100:	cmp	r0, #0
   1b104:	bne	1b2d4 <argp_error@@Base+0x678>
   1b108:	ldr	r3, [sp, #100]	; 0x64
   1b10c:	cmp	r3, #0
   1b110:	bne	1b158 <argp_error@@Base+0x4fc>
   1b114:	ldr	r3, [sp, #96]	; 0x60
   1b118:	mov	r2, #0
   1b11c:	mov	r0, #63	; 0x3f
   1b120:	ldr	r1, [sp, #96]	; 0x60
   1b124:	ldr	r3, [r3]
   1b128:	str	r2, [r1, #8]
   1b12c:	str	r2, [r1, #20]
   1b130:	add	r3, r3, #1
   1b134:	str	r3, [r1]
   1b138:	b	1b050 <argp_error@@Base+0x3f4>
   1b13c:	mov	r3, #1
   1b140:	cmp	r4, #0
   1b144:	str	r3, [sp, #20]
   1b148:	beq	1afcc <argp_error@@Base+0x370>
   1b14c:	mov	r3, #1
   1b150:	strb	r3, [r4, r8]
   1b154:	b	1afcc <argp_error@@Base+0x370>
   1b158:	ldr	r3, [sp, #96]	; 0x60
   1b15c:	movw	r0, #58288	; 0xe3b0
   1b160:	movt	r0, #2
   1b164:	movw	r1, #55296	; 0xd800
   1b168:	movt	r1, #1
   1b16c:	ldr	r0, [r0]
   1b170:	ldr	ip, [r3, #20]
   1b174:	ldr	r3, [sp, #28]
   1b178:	ldr	r2, [r3]
   1b17c:	str	ip, [sp]
   1b180:	ldr	r3, [sp, #104]	; 0x68
   1b184:	bl	11a0c <fprintf@plt>
   1b188:	b	1b114 <argp_error@@Base+0x4b8>
   1b18c:	ldr	r3, [sp, #100]	; 0x64
   1b190:	cmp	r3, #0
   1b194:	beq	1b1d4 <argp_error@@Base+0x578>
   1b198:	ldr	r3, [sp, #20]
   1b19c:	movw	r5, #58288	; 0xe3b0
   1b1a0:	movt	r5, #2
   1b1a4:	ldr	r0, [r5]
   1b1a8:	cmp	r3, #0
   1b1ac:	beq	1b30c <argp_error@@Base+0x6b0>
   1b1b0:	ldr	r2, [sp, #28]
   1b1b4:	movw	r1, #55208	; 0xd7a8
   1b1b8:	movt	r1, #1
   1b1bc:	ldr	r3, [sp, #96]	; 0x60
   1b1c0:	ldr	r2, [r2]
   1b1c4:	ldr	ip, [r3, #20]
   1b1c8:	ldr	r3, [sp, #104]	; 0x68
   1b1cc:	str	ip, [sp]
   1b1d0:	bl	11a0c <fprintf@plt>
   1b1d4:	ldr	r3, [sp, #44]	; 0x2c
   1b1d8:	cmp	r3, #0
   1b1dc:	bne	1b2c8 <argp_error@@Base+0x66c>
   1b1e0:	ldr	r3, [sp, #96]	; 0x60
   1b1e4:	ldr	r4, [r3, #20]
   1b1e8:	mov	r0, r4
   1b1ec:	bl	119dc <strlen@plt>
   1b1f0:	ldr	r3, [sp, #96]	; 0x60
   1b1f4:	add	r4, r4, r0
   1b1f8:	mov	r2, #0
   1b1fc:	mov	r0, #63	; 0x3f
   1b200:	ldr	r1, [sp, #96]	; 0x60
   1b204:	ldr	r3, [r3]
   1b208:	str	r2, [r1, #8]
   1b20c:	str	r4, [r1, #20]
   1b210:	add	r3, r3, #1
   1b214:	str	r3, [r1]
   1b218:	b	1b050 <argp_error@@Base+0x3f4>
   1b21c:	ldr	r1, [sp, #36]	; 0x24
   1b220:	cmp	r2, r1
   1b224:	bge	1b2dc <argp_error@@Base+0x680>
   1b228:	ldr	r1, [sp, #28]
   1b22c:	add	r3, r3, #2
   1b230:	ldr	r2, [r1, r2, lsl #2]
   1b234:	ldr	r1, [sp, #96]	; 0x60
   1b238:	str	r3, [r1]
   1b23c:	str	r2, [r1, #12]
   1b240:	b	1b030 <argp_error@@Base+0x3d4>
   1b244:	ldr	r3, [sp, #100]	; 0x64
   1b248:	cmp	r3, #0
   1b24c:	bne	1b298 <argp_error@@Base+0x63c>
   1b250:	ldr	r3, [sl, #12]
   1b254:	mov	r0, #63	; 0x3f
   1b258:	ldr	r2, [sp, #96]	; 0x60
   1b25c:	str	r3, [r2, #8]
   1b260:	b	1b050 <argp_error@@Base+0x3f4>
   1b264:	ldr	r0, [sp, #16]
   1b268:	bl	17794 <argp_parse@@Base+0x16cc>
   1b26c:	subs	r4, r0, #0
   1b270:	beq	1b3d0 <argp_error@@Base+0x774>
   1b274:	ldr	r2, [sp, #16]
   1b278:	ldr	r1, [sp, #20]
   1b27c:	bl	11a54 <memset@plt>
   1b280:	mov	r3, #1
   1b284:	mov	r2, #1
   1b288:	str	r3, [sp, #44]	; 0x2c
   1b28c:	ldr	r3, [sp, #40]	; 0x28
   1b290:	strb	r2, [r4, r3]
   1b294:	b	1afc4 <argp_error@@Base+0x368>
   1b298:	ldr	ip, [sl]
   1b29c:	movw	r0, #58288	; 0xe3b0
   1b2a0:	movt	r0, #2
   1b2a4:	movw	r1, #55328	; 0xd820
   1b2a8:	movt	r1, #1
   1b2ac:	ldr	r3, [sp, #28]
   1b2b0:	ldr	r0, [r0]
   1b2b4:	ldr	r2, [r3]
   1b2b8:	str	ip, [sp]
   1b2bc:	ldr	r3, [sp, #104]	; 0x68
   1b2c0:	bl	11a0c <fprintf@plt>
   1b2c4:	b	1b250 <argp_error@@Base+0x5f4>
   1b2c8:	mov	r0, r4
   1b2cc:	bl	170ac <argp_parse@@Base+0xfe4>
   1b2d0:	b	1b1e0 <argp_error@@Base+0x584>
   1b2d4:	mvn	r0, #0
   1b2d8:	b	1b050 <argp_error@@Base+0x3f4>
   1b2dc:	ldr	r3, [sp, #100]	; 0x64
   1b2e0:	cmp	r3, #0
   1b2e4:	bne	1b3a0 <argp_error@@Base+0x744>
   1b2e8:	ldr	r3, [sl, #12]
   1b2ec:	ldr	r2, [sp, #96]	; 0x60
   1b2f0:	str	r3, [r2, #8]
   1b2f4:	ldr	r3, [sp, #32]
   1b2f8:	ldrb	r3, [r3]
   1b2fc:	cmp	r3, #58	; 0x3a
   1b300:	moveq	r0, #58	; 0x3a
   1b304:	movne	r0, #63	; 0x3f
   1b308:	b	1b050 <argp_error@@Base+0x3f4>
   1b30c:	bl	11b5c <flockfile@plt>
   1b310:	ldr	r2, [sp, #28]
   1b314:	movw	r1, #55240	; 0xd7c8
   1b318:	movt	r1, #1
   1b31c:	movw	r7, #55288	; 0xd7f8
   1b320:	movt	r7, #1
   1b324:	ldr	r3, [sp, #96]	; 0x60
   1b328:	add	r6, r4, r6
   1b32c:	sub	r8, r4, #1
   1b330:	ldr	r2, [r2]
   1b334:	ldr	r0, [r3, #20]
   1b338:	ldr	r3, [sp, #104]	; 0x68
   1b33c:	str	r0, [sp]
   1b340:	ldr	r0, [r5]
   1b344:	bl	11a0c <fprintf@plt>
   1b348:	ldr	r0, [r5]
   1b34c:	ldr	sl, [sp, #12]
   1b350:	ldr	r9, [sp, #20]
   1b354:	b	1b364 <argp_error@@Base+0x708>
   1b358:	cmp	r6, r8
   1b35c:	add	r9, r9, #1
   1b360:	beq	1b388 <argp_error@@Base+0x72c>
   1b364:	ldrb	r3, [r8, #1]!
   1b368:	cmp	r3, #0
   1b36c:	beq	1b358 <argp_error@@Base+0x6fc>
   1b370:	mov	r1, r7
   1b374:	ldr	r3, [sl, r9, lsl #4]
   1b378:	ldr	r2, [sp, #104]	; 0x68
   1b37c:	bl	11a0c <fprintf@plt>
   1b380:	ldr	r0, [r5]
   1b384:	b	1b358 <argp_error@@Base+0x6fc>
   1b388:	mov	r1, r0
   1b38c:	mov	r0, #10
   1b390:	bl	11b08 <fputc@plt>
   1b394:	ldr	r0, [r5]
   1b398:	bl	118d4 <funlockfile@plt>
   1b39c:	b	1b1d4 <argp_error@@Base+0x578>
   1b3a0:	ldr	ip, [sl]
   1b3a4:	movw	r0, #58288	; 0xe3b0
   1b3a8:	movt	r0, #2
   1b3ac:	movw	r1, #55376	; 0xd850
   1b3b0:	movt	r1, #1
   1b3b4:	ldr	r3, [sp, #28]
   1b3b8:	ldr	r0, [r0]
   1b3bc:	ldr	r2, [r3]
   1b3c0:	str	ip, [sp]
   1b3c4:	ldr	r3, [sp, #104]	; 0x68
   1b3c8:	bl	11a0c <fprintf@plt>
   1b3cc:	b	1b2e8 <argp_error@@Base+0x68c>
   1b3d0:	mov	r3, #1
   1b3d4:	str	r3, [sp, #20]
   1b3d8:	b	1afcc <argp_error@@Base+0x370>
   1b3dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b3e0:	subs	r5, r0, #0
   1b3e4:	strd	r6, [sp, #8]
   1b3e8:	strd	r8, [sp, #16]
   1b3ec:	strd	sl, [sp, #24]
   1b3f0:	str	lr, [sp, #32]
   1b3f4:	sub	sp, sp, #36	; 0x24
   1b3f8:	ldr	r4, [sp, #80]	; 0x50
   1b3fc:	ldr	r7, [r4, #4]
   1b400:	ble	1b5f0 <argp_error@@Base+0x994>
   1b404:	mov	r6, r2
   1b408:	mov	sl, r3
   1b40c:	ldr	r2, [r4]
   1b410:	mov	r3, #0
   1b414:	mov	r9, r1
   1b418:	str	r3, [r4, #12]
   1b41c:	cmp	r2, r3
   1b420:	beq	1b698 <argp_error@@Base+0xa3c>
   1b424:	ldr	r3, [r4, #16]
   1b428:	cmp	r3, #0
   1b42c:	bne	1b5bc <argp_error@@Base+0x960>
   1b430:	mov	r3, #0
   1b434:	str	r3, [r4, #20]
   1b438:	str	r2, [r4, #28]
   1b43c:	str	r2, [r4, #32]
   1b440:	ldrb	r2, [r6]
   1b444:	cmp	r2, #45	; 0x2d
   1b448:	moveq	r2, #2
   1b44c:	addeq	r6, r6, #1
   1b450:	streq	r2, [r4, #24]
   1b454:	beq	1b47c <argp_error@@Base+0x820>
   1b458:	cmp	r2, #43	; 0x2b
   1b45c:	addeq	r6, r6, #1
   1b460:	streq	r3, [r4, #24]
   1b464:	beq	1b47c <argp_error@@Base+0x820>
   1b468:	ldr	r2, [sp, #84]	; 0x54
   1b46c:	cmp	r2, #0
   1b470:	beq	1b7c8 <argp_error@@Base+0xb6c>
   1b474:	mov	r2, #0
   1b478:	str	r2, [r4, #24]
   1b47c:	mov	r2, #1
   1b480:	str	r2, [r4, #16]
   1b484:	ldrb	r2, [r6]
   1b488:	cmp	r2, #58	; 0x3a
   1b48c:	moveq	r7, #0
   1b490:	cmp	r3, #0
   1b494:	beq	1b528 <argp_error@@Base+0x8cc>
   1b498:	ldrb	r2, [r3]
   1b49c:	cmp	r2, #0
   1b4a0:	beq	1b528 <argp_error@@Base+0x8cc>
   1b4a4:	add	fp, r3, #1
   1b4a8:	mov	r0, r6
   1b4ac:	str	r3, [sp, #28]
   1b4b0:	str	fp, [r4, #20]
   1b4b4:	ldrb	r8, [r3]
   1b4b8:	mov	r1, r8
   1b4bc:	str	r8, [sp, #24]
   1b4c0:	bl	119f4 <strchr@plt>
   1b4c4:	ldrd	r2, [sp, #24]
   1b4c8:	ldrb	r1, [r3, #1]
   1b4cc:	cmp	r1, #0
   1b4d0:	bne	1b4e0 <argp_error@@Base+0x884>
   1b4d4:	ldr	r1, [r4]
   1b4d8:	add	r1, r1, #1
   1b4dc:	str	r1, [r4]
   1b4e0:	sub	r1, r8, #58	; 0x3a
   1b4e4:	cmp	r0, #0
   1b4e8:	cmpne	r1, #1
   1b4ec:	bls	1b844 <argp_error@@Base+0xbe8>
   1b4f0:	ldrb	ip, [r0]
   1b4f4:	ldrb	r1, [r0, #1]
   1b4f8:	cmp	ip, #87	; 0x57
   1b4fc:	beq	1b748 <argp_error@@Base+0xaec>
   1b500:	cmp	r1, #58	; 0x3a
   1b504:	beq	1b7ec <argp_error@@Base+0xb90>
   1b508:	mov	r0, r2
   1b50c:	add	sp, sp, #36	; 0x24
   1b510:	ldrd	r4, [sp]
   1b514:	ldrd	r6, [sp, #8]
   1b518:	ldrd	r8, [sp, #16]
   1b51c:	ldrd	sl, [sp, #24]
   1b520:	add	sp, sp, #32
   1b524:	pop	{pc}		; (ldr pc, [sp], #4)
   1b528:	ldr	r8, [r4]
   1b52c:	ldr	r3, [r4, #32]
   1b530:	cmp	r3, r8
   1b534:	ldr	r3, [r4, #28]
   1b538:	strgt	r8, [r4, #32]
   1b53c:	cmp	r8, r3
   1b540:	ldr	r3, [r4, #24]
   1b544:	strlt	r8, [r4, #28]
   1b548:	cmp	r3, #1
   1b54c:	beq	1b5f8 <argp_error@@Base+0x99c>
   1b550:	cmp	r5, r8
   1b554:	beq	1b5d8 <argp_error@@Base+0x97c>
   1b558:	ldr	r3, [r9, r8, lsl #2]
   1b55c:	movw	fp, #53100	; 0xcf6c
   1b560:	movt	fp, #1
   1b564:	mov	r1, fp
   1b568:	mov	r0, r3
   1b56c:	str	r3, [sp, #24]
   1b570:	bl	11754 <strcmp@plt>
   1b574:	cmp	r0, #0
   1b578:	ldr	r3, [sp, #24]
   1b57c:	bne	1b66c <argp_error@@Base+0xa10>
   1b580:	ldr	r3, [r4, #28]
   1b584:	add	r8, r8, #1
   1b588:	ldr	r2, [r4, #32]
   1b58c:	str	r8, [r4]
   1b590:	cmp	r3, r2
   1b594:	beq	1b858 <argp_error@@Base+0xbfc>
   1b598:	cmp	r8, r2
   1b59c:	beq	1b5b0 <argp_error@@Base+0x954>
   1b5a0:	mov	r0, r9
   1b5a4:	mov	r1, r4
   1b5a8:	bl	1adac <argp_error@@Base+0x150>
   1b5ac:	ldr	r3, [r4, #28]
   1b5b0:	str	r5, [r4]
   1b5b4:	str	r5, [r4, #32]
   1b5b8:	b	1b5e0 <argp_error@@Base+0x984>
   1b5bc:	ldrb	r2, [r6]
   1b5c0:	ldr	r3, [r4, #20]
   1b5c4:	sub	r1, r2, #43	; 0x2b
   1b5c8:	tst	r1, #253	; 0xfd
   1b5cc:	ldrbeq	r2, [r6, #1]
   1b5d0:	addeq	r6, r6, #1
   1b5d4:	b	1b488 <argp_error@@Base+0x82c>
   1b5d8:	ldr	r3, [r4, #28]
   1b5dc:	ldr	r5, [r4, #32]
   1b5e0:	cmp	r5, r3
   1b5e4:	mvnne	r2, #0
   1b5e8:	strne	r3, [r4]
   1b5ec:	bne	1b508 <argp_error@@Base+0x8ac>
   1b5f0:	mvn	r2, #0
   1b5f4:	b	1b508 <argp_error@@Base+0x8ac>
   1b5f8:	ldrd	r2, [r4, #28]
   1b5fc:	cmp	r2, r3
   1b600:	beq	1b82c <argp_error@@Base+0xbd0>
   1b604:	cmp	r8, r3
   1b608:	beq	1b61c <argp_error@@Base+0x9c0>
   1b60c:	mov	r1, r4
   1b610:	mov	r0, r9
   1b614:	bl	1adac <argp_error@@Base+0x150>
   1b618:	ldr	r3, [r4]
   1b61c:	cmp	r5, r3
   1b620:	ble	1b83c <argp_error@@Base+0xbe0>
   1b624:	add	r1, r9, r3, lsl #2
   1b628:	b	1b63c <argp_error@@Base+0x9e0>
   1b62c:	add	r3, r3, #1
   1b630:	cmp	r3, r5
   1b634:	str	r3, [r4]
   1b638:	beq	1b83c <argp_error@@Base+0xbe0>
   1b63c:	ldr	r2, [r1], #4
   1b640:	ldrb	r0, [r2]
   1b644:	cmp	r0, #45	; 0x2d
   1b648:	bne	1b62c <argp_error@@Base+0x9d0>
   1b64c:	ldrb	r2, [r2, #1]
   1b650:	cmp	r2, #0
   1b654:	beq	1b62c <argp_error@@Base+0x9d0>
   1b658:	ldr	r8, [r4]
   1b65c:	cmp	r5, r8
   1b660:	str	r3, [r4, #32]
   1b664:	bne	1b558 <argp_error@@Base+0x8fc>
   1b668:	b	1b5d8 <argp_error@@Base+0x97c>
   1b66c:	ldrb	r2, [r3]
   1b670:	cmp	r2, #45	; 0x2d
   1b674:	beq	1b6a8 <argp_error@@Base+0xa4c>
   1b678:	ldr	r2, [r4, #24]
   1b67c:	cmp	r2, #0
   1b680:	beq	1b5f0 <argp_error@@Base+0x994>
   1b684:	add	r8, r8, #1
   1b688:	mov	r2, #1
   1b68c:	str	r8, [r4]
   1b690:	str	r3, [r4, #12]
   1b694:	b	1b508 <argp_error@@Base+0x8ac>
   1b698:	mov	r3, #1
   1b69c:	mov	r2, r3
   1b6a0:	str	r3, [r4]
   1b6a4:	b	1b430 <argp_error@@Base+0x7d4>
   1b6a8:	ldrb	r1, [r3, #1]
   1b6ac:	cmp	r1, #0
   1b6b0:	beq	1b678 <argp_error@@Base+0xa1c>
   1b6b4:	cmp	sl, #0
   1b6b8:	beq	1b740 <argp_error@@Base+0xae4>
   1b6bc:	cmp	r1, #45	; 0x2d
   1b6c0:	beq	1b8d8 <argp_error@@Base+0xc7c>
   1b6c4:	ldr	r2, [sp, #76]	; 0x4c
   1b6c8:	cmp	r2, #0
   1b6cc:	beq	1b740 <argp_error@@Base+0xae4>
   1b6d0:	ldrb	r2, [r3, #2]
   1b6d4:	cmp	r2, #0
   1b6d8:	bne	1b6f4 <argp_error@@Base+0xa98>
   1b6dc:	mov	r0, r6
   1b6e0:	str	r3, [sp, #24]
   1b6e4:	bl	119f4 <strchr@plt>
   1b6e8:	cmp	r0, #0
   1b6ec:	ldr	r3, [sp, #24]
   1b6f0:	bne	1b740 <argp_error@@Base+0xae4>
   1b6f4:	ldr	r2, [sp, #72]	; 0x48
   1b6f8:	add	ip, r3, #1
   1b6fc:	movw	r0, #55432	; 0xd888
   1b700:	movt	r0, #1
   1b704:	mov	r3, sl
   1b708:	ldr	r1, [sp, #76]	; 0x4c
   1b70c:	str	r2, [sp]
   1b710:	mov	r2, r6
   1b714:	str	r0, [sp, #16]
   1b718:	mov	r0, r5
   1b71c:	stmib	sp, {r1, r4, r7}
   1b720:	mov	r1, r9
   1b724:	str	ip, [r4, #20]
   1b728:	bl	1ae8c <argp_error@@Base+0x230>
   1b72c:	cmn	r0, #1
   1b730:	mov	r2, r0
   1b734:	bne	1b508 <argp_error@@Base+0x8ac>
   1b738:	ldr	r3, [r4]
   1b73c:	ldr	r3, [r9, r3, lsl #2]
   1b740:	add	r3, r3, #1
   1b744:	b	1b4a4 <argp_error@@Base+0x848>
   1b748:	sub	ip, r1, #59	; 0x3b
   1b74c:	cmp	sl, #0
   1b750:	clz	ip, ip
   1b754:	lsr	ip, ip, #5
   1b758:	moveq	ip, #0
   1b75c:	cmp	ip, #0
   1b760:	beq	1b500 <argp_error@@Base+0x8a4>
   1b764:	ldrb	r3, [r3, #1]
   1b768:	cmp	r3, #0
   1b76c:	bne	1b780 <argp_error@@Base+0xb24>
   1b770:	ldr	r3, [r4]
   1b774:	cmp	r3, r5
   1b778:	beq	1b90c <argp_error@@Base+0xcb0>
   1b77c:	ldr	fp, [r9, r3, lsl #2]
   1b780:	mov	lr, #0
   1b784:	movw	ip, #55508	; 0xd8d4
   1b788:	movt	ip, #1
   1b78c:	ldr	r3, [sp, #72]	; 0x48
   1b790:	mov	r2, r6
   1b794:	mov	r1, r9
   1b798:	mov	r0, r5
   1b79c:	str	r3, [sp]
   1b7a0:	mov	r3, sl
   1b7a4:	str	r4, [sp, #8]
   1b7a8:	str	r7, [sp, #12]
   1b7ac:	str	ip, [sp, #16]
   1b7b0:	str	fp, [r4, #20]
   1b7b4:	str	lr, [sp, #4]
   1b7b8:	str	lr, [r4, #12]
   1b7bc:	bl	1ae8c <argp_error@@Base+0x230>
   1b7c0:	mov	r2, r0
   1b7c4:	b	1b508 <argp_error@@Base+0x8ac>
   1b7c8:	movw	r0, #55416	; 0xd878
   1b7cc:	movt	r0, #1
   1b7d0:	bl	11940 <getenv@plt>
   1b7d4:	cmp	r0, #0
   1b7d8:	ldr	r3, [r4, #20]
   1b7dc:	bne	1b474 <argp_error@@Base+0x818>
   1b7e0:	mov	r2, #1
   1b7e4:	str	r2, [r4, #24]
   1b7e8:	b	1b47c <argp_error@@Base+0x820>
   1b7ec:	ldrb	r1, [r0, #2]
   1b7f0:	ldrb	r3, [r3, #1]
   1b7f4:	cmp	r1, #58	; 0x3a
   1b7f8:	beq	1b898 <argp_error@@Base+0xc3c>
   1b7fc:	cmp	r3, #0
   1b800:	ldr	r3, [r4]
   1b804:	bne	1b864 <argp_error@@Base+0xc08>
   1b808:	cmp	r5, r3
   1b80c:	beq	1b8b8 <argp_error@@Base+0xc5c>
   1b810:	ldr	r1, [r9, r3, lsl #2]
   1b814:	add	r3, r3, #1
   1b818:	str	r3, [r4]
   1b81c:	str	r1, [r4, #12]
   1b820:	mov	r3, #0
   1b824:	str	r3, [r4, #20]
   1b828:	b	1b508 <argp_error@@Base+0x8ac>
   1b82c:	cmp	r8, r3
   1b830:	movne	r3, r8
   1b834:	strne	r8, [r4, #28]
   1b838:	b	1b61c <argp_error@@Base+0x9c0>
   1b83c:	mov	r8, r3
   1b840:	b	1b65c <argp_error@@Base+0xa00>
   1b844:	cmp	r7, #0
   1b848:	bne	1b874 <argp_error@@Base+0xc18>
   1b84c:	mov	r2, #63	; 0x3f
   1b850:	str	r8, [r4, #8]
   1b854:	b	1b508 <argp_error@@Base+0x8ac>
   1b858:	mov	r3, r8
   1b85c:	str	r8, [r4, #28]
   1b860:	b	1b5b0 <argp_error@@Base+0x954>
   1b864:	add	r3, r3, #1
   1b868:	str	r3, [r4]
   1b86c:	str	fp, [r4, #12]
   1b870:	b	1b820 <argp_error@@Base+0xbc4>
   1b874:	movw	r0, #58288	; 0xe3b0
   1b878:	movt	r0, #2
   1b87c:	ldr	r2, [r9]
   1b880:	movw	r1, #55436	; 0xd88c
   1b884:	movt	r1, #1
   1b888:	mov	r3, r8
   1b88c:	ldr	r0, [r0]
   1b890:	bl	11a0c <fprintf@plt>
   1b894:	b	1b84c <argp_error@@Base+0xbf0>
   1b898:	cmp	r3, #0
   1b89c:	streq	r3, [r4, #12]
   1b8a0:	beq	1b820 <argp_error@@Base+0xbc4>
   1b8a4:	ldr	r3, [r4]
   1b8a8:	str	fp, [r4, #12]
   1b8ac:	add	r3, r3, #1
   1b8b0:	str	r3, [r4]
   1b8b4:	b	1b820 <argp_error@@Base+0xbc4>
   1b8b8:	cmp	r7, #0
   1b8bc:	bne	1b92c <argp_error@@Base+0xcd0>
   1b8c0:	str	r8, [r4, #8]
   1b8c4:	ldrb	r3, [r6]
   1b8c8:	cmp	r3, #58	; 0x3a
   1b8cc:	moveq	r2, #58	; 0x3a
   1b8d0:	movne	r2, #63	; 0x3f
   1b8d4:	b	1b820 <argp_error@@Base+0xbc4>
   1b8d8:	ldr	r2, [sp, #72]	; 0x48
   1b8dc:	add	ip, r3, #2
   1b8e0:	mov	r1, r9
   1b8e4:	mov	r3, sl
   1b8e8:	ldr	r0, [sp, #76]	; 0x4c
   1b8ec:	str	r2, [sp]
   1b8f0:	mov	r2, r6
   1b8f4:	stmib	sp, {r0, r4, r7, fp}
   1b8f8:	mov	r0, r5
   1b8fc:	str	ip, [r4, #20]
   1b900:	bl	1ae8c <argp_error@@Base+0x230>
   1b904:	mov	r2, r0
   1b908:	b	1b508 <argp_error@@Base+0x8ac>
   1b90c:	cmp	r7, #0
   1b910:	bne	1b950 <argp_error@@Base+0xcf4>
   1b914:	str	r8, [r4, #8]
   1b918:	ldrb	r3, [r6]
   1b91c:	cmp	r3, #58	; 0x3a
   1b920:	moveq	r2, #58	; 0x3a
   1b924:	movne	r2, #63	; 0x3f
   1b928:	b	1b508 <argp_error@@Base+0x8ac>
   1b92c:	movw	r0, #58288	; 0xe3b0
   1b930:	movt	r0, #2
   1b934:	ldr	r2, [r9]
   1b938:	movw	r1, #55464	; 0xd8a8
   1b93c:	movt	r1, #1
   1b940:	mov	r3, r8
   1b944:	ldr	r0, [r0]
   1b948:	bl	11a0c <fprintf@plt>
   1b94c:	b	1b8c0 <argp_error@@Base+0xc64>
   1b950:	movw	r0, #58288	; 0xe3b0
   1b954:	movt	r0, #2
   1b958:	ldr	r2, [r9]
   1b95c:	movw	r1, #55464	; 0xd8a8
   1b960:	movt	r1, #1
   1b964:	mov	r3, r8
   1b968:	ldr	r0, [r0]
   1b96c:	bl	11a0c <fprintf@plt>
   1b970:	b	1b914 <argp_error@@Base+0xcb8>
   1b974:	strd	r4, [sp, #-16]!
   1b978:	movw	r5, #58264	; 0xe398
   1b97c:	movt	r5, #2
   1b980:	str	r6, [sp, #8]
   1b984:	movw	r4, #58560	; 0xe4c0
   1b988:	movt	r4, #2
   1b98c:	str	lr, [sp, #12]
   1b990:	sub	sp, sp, #16
   1b994:	ldr	lr, [sp, #32]
   1b998:	ldr	ip, [r5]
   1b99c:	ldr	r6, [sp, #36]	; 0x24
   1b9a0:	str	lr, [sp]
   1b9a4:	ldr	lr, [sp, #40]	; 0x28
   1b9a8:	str	ip, [r4]
   1b9ac:	ldr	ip, [r5, #4]
   1b9b0:	str	r6, [sp, #4]
   1b9b4:	str	r4, [sp, #8]
   1b9b8:	str	lr, [sp, #12]
   1b9bc:	str	ip, [r4, #4]
   1b9c0:	bl	1b3dc <argp_error@@Base+0x780>
   1b9c4:	ldr	ip, [r4]
   1b9c8:	movw	r3, #58908	; 0xe61c
   1b9cc:	movt	r3, #2
   1b9d0:	ldr	r1, [r4, #8]
   1b9d4:	ldr	r2, [r4, #12]
   1b9d8:	str	ip, [r5]
   1b9dc:	str	r1, [r5, #8]
   1b9e0:	str	r2, [r3]
   1b9e4:	add	sp, sp, #16
   1b9e8:	ldrd	r4, [sp]
   1b9ec:	ldr	r6, [sp, #8]
   1b9f0:	add	sp, sp, #12
   1b9f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9f8:	mov	ip, #0
   1b9fc:	push	{lr}		; (str lr, [sp, #-4]!)
   1ba00:	mov	lr, #1
   1ba04:	sub	sp, sp, #20
   1ba08:	mov	r3, ip
   1ba0c:	str	ip, [sp]
   1ba10:	stmib	sp, {ip, lr}
   1ba14:	bl	1b974 <argp_error@@Base+0xd18>
   1ba18:	add	sp, sp, #20
   1ba1c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba20:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ba24:	mov	r5, r3
   1ba28:	strd	r6, [sp, #8]
   1ba2c:	mov	r7, r1
   1ba30:	mov	r6, r2
   1ba34:	str	r8, [sp, #16]
   1ba38:	mov	r8, r0
   1ba3c:	mov	r0, #36	; 0x24
   1ba40:	str	lr, [sp, #20]
   1ba44:	bl	17794 <argp_parse@@Base+0x16cc>
   1ba48:	subs	r4, r0, #0
   1ba4c:	beq	1ba90 <argp_error@@Base+0xe34>
   1ba50:	mov	r3, #0
   1ba54:	mov	r0, #200	; 0xc8
   1ba58:	str	r8, [r4]
   1ba5c:	str	r7, [r4, #4]
   1ba60:	str	r6, [r4, #8]
   1ba64:	str	r5, [r4, #12]
   1ba68:	str	r3, [r4, #16]
   1ba6c:	str	r3, [r4, #20]
   1ba70:	bl	17794 <argp_parse@@Base+0x16cc>
   1ba74:	cmp	r0, #0
   1ba78:	mov	r3, r0
   1ba7c:	str	r0, [r4, #24]
   1ba80:	addne	r2, r0, #200	; 0xc8
   1ba84:	strne	r0, [r4, #28]
   1ba88:	strne	r2, [r4, #32]
   1ba8c:	beq	1baa8 <argp_error@@Base+0xe4c>
   1ba90:	mov	r0, r4
   1ba94:	ldrd	r4, [sp]
   1ba98:	ldrd	r6, [sp, #8]
   1ba9c:	ldr	r8, [sp, #16]
   1baa0:	add	sp, sp, #20
   1baa4:	pop	{pc}		; (ldr pc, [sp], #4)
   1baa8:	mov	r0, r4
   1baac:	mov	r4, r3
   1bab0:	bl	170ac <argp_parse@@Base+0xfe4>
   1bab4:	b	1ba90 <argp_error@@Base+0xe34>
   1bab8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1babc:	mov	r5, r0
   1bac0:	ldr	r3, [r0, #16]
   1bac4:	ldr	r4, [r0, #24]
   1bac8:	strd	r6, [sp, #8]
   1bacc:	strd	r8, [sp, #16]
   1bad0:	ldr	r8, [r0, #28]
   1bad4:	strd	sl, [sp, #24]
   1bad8:	add	r4, r4, r3
   1badc:	str	lr, [sp, #32]
   1bae0:	sub	sp, sp, #12
   1bae4:	cmp	r4, r8
   1bae8:	bcs	1bbfc <argp_error@@Base+0xfa0>
   1baec:	ldr	r6, [r5, #20]
   1baf0:	cmp	r6, #0
   1baf4:	bne	1bb54 <argp_error@@Base+0xef8>
   1baf8:	ldr	r7, [r5, #4]
   1bafc:	cmp	r7, #0
   1bb00:	beq	1bddc <argp_error@@Base+0x1180>
   1bb04:	ldr	r2, [r5, #32]
   1bb08:	add	r3, r8, r7
   1bb0c:	cmp	r2, r3
   1bb10:	bls	1bec8 <argp_error@@Base+0x126c>
   1bb14:	add	r6, r4, r7
   1bb18:	sub	r2, r8, r4
   1bb1c:	mov	r1, r4
   1bb20:	mov	r0, r6
   1bb24:	bl	117c0 <memmove@plt>
   1bb28:	ldr	r3, [r5, #28]
   1bb2c:	mov	r0, r4
   1bb30:	mov	r2, r7
   1bb34:	mov	r1, #32
   1bb38:	mov	r4, r6
   1bb3c:	add	r3, r3, r7
   1bb40:	str	r3, [r5, #28]
   1bb44:	bl	11a54 <memset@plt>
   1bb48:	ldr	r8, [r5, #28]
   1bb4c:	mov	r6, r7
   1bb50:	str	r7, [r5, #20]
   1bb54:	sub	r9, r8, r4
   1bb58:	mov	r1, #10
   1bb5c:	mov	r2, r9
   1bb60:	mov	r0, r4
   1bb64:	bl	11a90 <memchr@plt>
   1bb68:	cmp	r6, #0
   1bb6c:	mov	fp, r0
   1bb70:	bge	1bb7c <argp_error@@Base+0xf20>
   1bb74:	mov	r6, #0
   1bb78:	str	r6, [r5, #20]
   1bb7c:	cmp	fp, #0
   1bb80:	ldr	r3, [r5, #8]
   1bb84:	beq	1bc24 <argp_error@@Base+0xfc8>
   1bb88:	sub	r2, fp, r4
   1bb8c:	add	r2, r2, r6
   1bb90:	cmp	r2, r3
   1bb94:	blt	1bdf8 <argp_error@@Base+0x119c>
   1bb98:	ldr	sl, [r5, #12]
   1bb9c:	sub	r7, r3, #1
   1bba0:	str	r3, [sp, #4]
   1bba4:	cmp	sl, #0
   1bba8:	bge	1bc44 <argp_error@@Base+0xfe8>
   1bbac:	cmp	r8, fp
   1bbb0:	bls	1bf7c <argp_error@@Base+0x1320>
   1bbb4:	sub	r0, r7, r6
   1bbb8:	sub	r2, r8, fp
   1bbbc:	add	r0, r4, r0
   1bbc0:	mov	r1, fp
   1bbc4:	bl	117c0 <memmove@plt>
   1bbc8:	ldr	r2, [r5, #20]
   1bbcc:	mov	r3, #0
   1bbd0:	str	r3, [r5, #20]
   1bbd4:	ldr	r3, [sp, #4]
   1bbd8:	ldr	r8, [r5, #28]
   1bbdc:	sub	r7, r7, r2
   1bbe0:	add	r7, r4, r7
   1bbe4:	sub	fp, r7, fp
   1bbe8:	add	r4, r4, r3
   1bbec:	sub	r8, r8, fp
   1bbf0:	cmp	r4, r8
   1bbf4:	str	r8, [r5, #28]
   1bbf8:	bcc	1baec <argp_error@@Base+0xe90>
   1bbfc:	ldr	r3, [r5, #24]
   1bc00:	sub	r8, r8, r3
   1bc04:	str	r8, [r5, #16]
   1bc08:	add	sp, sp, #12
   1bc0c:	ldrd	r4, [sp]
   1bc10:	ldrd	r6, [sp, #8]
   1bc14:	ldrd	r8, [sp, #16]
   1bc18:	ldrd	sl, [sp, #24]
   1bc1c:	add	sp, sp, #32
   1bc20:	pop	{pc}		; (ldr pc, [sp], #4)
   1bc24:	add	r1, r6, r9
   1bc28:	cmp	r1, r3
   1bc2c:	bcc	1bfe8 <argp_error@@Base+0x138c>
   1bc30:	ldr	sl, [r5, #12]
   1bc34:	sub	r7, r3, #1
   1bc38:	cmp	sl, #0
   1bc3c:	blt	1bf80 <argp_error@@Base+0x1324>
   1bc40:	mov	fp, r8
   1bc44:	add	r7, r7, #1
   1bc48:	sub	r6, r7, r6
   1bc4c:	adds	r6, r4, r6
   1bc50:	bcs	1be3c <argp_error@@Base+0x11e0>
   1bc54:	bl	119ac <__ctype_b_loc@plt>
   1bc58:	mov	r3, r6
   1bc5c:	ldr	ip, [r0]
   1bc60:	b	1bc70 <argp_error@@Base+0x1014>
   1bc64:	cmp	r4, r0
   1bc68:	mov	r3, r0
   1bc6c:	bhi	1be40 <argp_error@@Base+0x11e4>
   1bc70:	ldrb	r1, [r3]
   1bc74:	mov	r7, r3
   1bc78:	sub	r0, r3, #1
   1bc7c:	lsl	r1, r1, #1
   1bc80:	ldrh	r1, [ip, r1]
   1bc84:	tst	r1, #1
   1bc88:	beq	1bc64 <argp_error@@Base+0x1008>
   1bc8c:	add	r0, r3, #1
   1bc90:	cmp	r4, r0
   1bc94:	bcs	1be50 <argp_error@@Base+0x11f4>
   1bc98:	cmp	r4, r3
   1bc9c:	movhi	r6, r0
   1bca0:	movhi	r7, r6
   1bca4:	bls	1bcc0 <argp_error@@Base+0x1064>
   1bca8:	b	1bcd4 <argp_error@@Base+0x1078>
   1bcac:	ldrb	r1, [r6, #-1]
   1bcb0:	lsl	r1, r1, #1
   1bcb4:	ldrh	r1, [ip, r1]
   1bcb8:	tst	r1, #1
   1bcbc:	beq	1bcd0 <argp_error@@Base+0x1074>
   1bcc0:	cmp	r4, r3
   1bcc4:	mov	r6, r3
   1bcc8:	sub	r3, r3, #1
   1bccc:	bne	1bcac <argp_error@@Base+0x1050>
   1bcd0:	mov	r7, r0
   1bcd4:	add	r3, r9, #1
   1bcd8:	add	r3, r4, r3
   1bcdc:	cmp	r7, r3
   1bce0:	beq	1be0c <argp_error@@Base+0x11b0>
   1bce4:	add	r1, r6, #1
   1bce8:	sub	r3, r7, r1
   1bcec:	cmp	r3, sl
   1bcf0:	bge	1be24 <argp_error@@Base+0x11c8>
   1bcf4:	cmp	r7, r8
   1bcf8:	bcs	1be1c <argp_error@@Base+0x11c0>
   1bcfc:	ldr	r3, [r5, #32]
   1bd00:	add	sl, sl, #1
   1bd04:	sub	r3, r3, r8
   1bd08:	cmp	r3, sl
   1bd0c:	bgt	1bf94 <argp_error@@Base+0x1338>
   1bd10:	ldr	r3, [r5]
   1bd14:	ldr	r0, [r5, #24]
   1bd18:	cmp	r0, r6
   1bd1c:	bcs	1bd30 <argp_error@@Base+0x10d4>
   1bd20:	sub	r2, r6, r0
   1bd24:	mov	r1, #1
   1bd28:	bl	1182c <fwrite_unlocked@plt>
   1bd2c:	ldr	r3, [r5]
   1bd30:	ldr	r2, [r3, #20]
   1bd34:	ldr	r1, [r3, #24]
   1bd38:	cmp	r2, r1
   1bd3c:	addcc	r1, r2, #1
   1bd40:	strcc	r1, [r3, #20]
   1bd44:	movcc	r3, #10
   1bd48:	strbcc	r3, [r2]
   1bd4c:	bcs	1bfd8 <argp_error@@Base+0x137c>
   1bd50:	ldr	fp, [r5, #24]
   1bd54:	sub	r4, r4, fp
   1bd58:	sub	r3, r7, fp
   1bd5c:	add	r9, r9, r4
   1bd60:	mov	r8, r3
   1bd64:	mov	r4, fp
   1bd68:	ldr	r2, [r5, #12]
   1bd6c:	cmp	r2, r3
   1bd70:	ble	1bd94 <argp_error@@Base+0x1138>
   1bd74:	add	r3, r9, #1
   1bd78:	add	r3, fp, r3
   1bd7c:	cmp	r7, r3
   1bd80:	bne	1be84 <argp_error@@Base+0x1228>
   1bd84:	ldr	r3, [r5, #32]
   1bd88:	sub	r3, r3, r7
   1bd8c:	cmp	r2, r3
   1bd90:	bgt	1be84 <argp_error@@Base+0x1228>
   1bd94:	cmp	r2, #0
   1bd98:	ble	1bdb8 <argp_error@@Base+0x115c>
   1bd9c:	mov	r3, #0
   1bda0:	mov	r1, #32
   1bda4:	strb	r1, [r4], #1
   1bda8:	add	r3, r3, #1
   1bdac:	ldr	r2, [r5, #12]
   1bdb0:	cmp	r2, r3
   1bdb4:	bgt	1bda4 <argp_error@@Base+0x1148>
   1bdb8:	cmp	r4, r7
   1bdbc:	bcc	1bf14 <argp_error@@Base+0x12b8>
   1bdc0:	sub	r8, r9, r8
   1bdc4:	cmp	r2, #0
   1bdc8:	add	r8, r4, r8
   1bdcc:	mvneq	r2, #0
   1bdd0:	str	r2, [r5, #20]
   1bdd4:	str	r8, [r5, #28]
   1bdd8:	b	1bae4 <argp_error@@Base+0xe88>
   1bddc:	sub	r9, r8, r4
   1bde0:	mov	r1, #10
   1bde4:	mov	r2, r9
   1bde8:	mov	r0, r4
   1bdec:	bl	11a90 <memchr@plt>
   1bdf0:	mov	fp, r0
   1bdf4:	b	1bb7c <argp_error@@Base+0xf20>
   1bdf8:	mov	r3, #0
   1bdfc:	add	r4, fp, #1
   1be00:	ldr	r8, [r5, #28]
   1be04:	str	r3, [r5, #20]
   1be08:	b	1bae4 <argp_error@@Base+0xe88>
   1be0c:	ldr	r3, [r5, #32]
   1be10:	sub	r3, r3, r6
   1be14:	cmp	r3, sl
   1be18:	ble	1bcf4 <argp_error@@Base+0x1098>
   1be1c:	add	r1, r6, #1
   1be20:	sub	r3, r7, r1
   1be24:	mov	r2, #10
   1be28:	sub	r8, r7, r4
   1be2c:	mov	fp, r4
   1be30:	mov	r4, r1
   1be34:	strb	r2, [r6]
   1be38:	b	1bd68 <argp_error@@Base+0x110c>
   1be3c:	add	r7, r6, #1
   1be40:	cmp	r4, r7
   1be44:	bcs	1be50 <argp_error@@Base+0x11f4>
   1be48:	mov	r6, r7
   1be4c:	b	1bcd4 <argp_error@@Base+0x1078>
   1be50:	cmp	r6, fp
   1be54:	bcc	1bf44 <argp_error@@Base+0x12e8>
   1be58:	cmp	r6, fp
   1be5c:	beq	1bf30 <argp_error@@Base+0x12d4>
   1be60:	bl	119ac <__ctype_b_loc@plt>
   1be64:	ldr	r1, [r0]
   1be68:	mov	r7, r6
   1be6c:	ldrb	r3, [r7, #1]!
   1be70:	lsl	r3, r3, #1
   1be74:	ldrh	r3, [r1, r3]
   1be78:	tst	r3, #1
   1be7c:	bne	1be6c <argp_error@@Base+0x1210>
   1be80:	b	1bcd4 <argp_error@@Base+0x1078>
   1be84:	cmp	r2, #0
   1be88:	movgt	r6, #0
   1be8c:	movgt	sl, #32
   1be90:	ble	1bdb8 <argp_error@@Base+0x115c>
   1be94:	ldr	r0, [r5]
   1be98:	ldr	r2, [r0, #20]
   1be9c:	ldr	r1, [r0, #24]
   1bea0:	add	ip, r2, #1
   1bea4:	cmp	r2, r1
   1bea8:	strcc	ip, [r0, #20]
   1beac:	strbcc	sl, [r2]
   1beb0:	bcs	1bf08 <argp_error@@Base+0x12ac>
   1beb4:	ldr	r2, [r5, #12]
   1beb8:	add	r6, r6, #1
   1bebc:	cmp	r2, r6
   1bec0:	bgt	1be94 <argp_error@@Base+0x1238>
   1bec4:	b	1bdb8 <argp_error@@Base+0x115c>
   1bec8:	mov	r8, #32
   1becc:	b	1bedc <argp_error@@Base+0x1280>
   1bed0:	add	r6, r6, #1
   1bed4:	cmp	r7, r6
   1bed8:	beq	1bb48 <argp_error@@Base+0xeec>
   1bedc:	ldr	r0, [r5]
   1bee0:	ldr	r3, [r0, #20]
   1bee4:	ldr	r2, [r0, #24]
   1bee8:	add	r1, r3, #1
   1beec:	cmp	r3, r2
   1bef0:	strcc	r1, [r0, #20]
   1bef4:	strbcc	r8, [r3]
   1bef8:	bcc	1bed0 <argp_error@@Base+0x1274>
   1befc:	mov	r1, #32
   1bf00:	bl	11ab4 <__overflow@plt>
   1bf04:	b	1bed0 <argp_error@@Base+0x1274>
   1bf08:	mov	r1, #32
   1bf0c:	bl	11ab4 <__overflow@plt>
   1bf10:	b	1beb4 <argp_error@@Base+0x1258>
   1bf14:	add	r2, fp, r9
   1bf18:	mov	r1, r7
   1bf1c:	sub	r2, r2, r7
   1bf20:	mov	r0, r4
   1bf24:	bl	117c0 <memmove@plt>
   1bf28:	ldr	r2, [r5, #12]
   1bf2c:	b	1bdc0 <argp_error@@Base+0x1164>
   1bf30:	mov	r3, #0
   1bf34:	add	r4, r6, #1
   1bf38:	ldr	r8, [r5, #28]
   1bf3c:	str	r3, [r5, #20]
   1bf40:	b	1bae4 <argp_error@@Base+0xe88>
   1bf44:	add	r7, r6, #1
   1bf48:	b	1bf6c <argp_error@@Base+0x1310>
   1bf4c:	bl	119ac <__ctype_b_loc@plt>
   1bf50:	ldrb	r3, [r7]
   1bf54:	add	r7, r7, #1
   1bf58:	ldr	r1, [r0]
   1bf5c:	lsl	r3, r3, #1
   1bf60:	ldrh	r3, [r1, r3]
   1bf64:	tst	r3, #1
   1bf68:	bne	1be68 <argp_error@@Base+0x120c>
   1bf6c:	cmp	fp, r7
   1bf70:	mov	r6, r7
   1bf74:	bne	1bf4c <argp_error@@Base+0x12f0>
   1bf78:	b	1be58 <argp_error@@Base+0x11fc>
   1bf7c:	add	r1, r9, r6
   1bf80:	sub	r7, r7, r1
   1bf84:	str	r1, [r5, #20]
   1bf88:	add	r8, r8, r7
   1bf8c:	str	r8, [r5, #28]
   1bf90:	b	1bbfc <argp_error@@Base+0xfa0>
   1bf94:	sub	r8, r8, r7
   1bf98:	mov	r1, r7
   1bf9c:	mov	r2, r8
   1bfa0:	add	r0, r6, sl
   1bfa4:	bl	117c0 <memmove@plt>
   1bfa8:	ldr	r3, [r5, #12]
   1bfac:	mov	r2, r6
   1bfb0:	mov	r1, #10
   1bfb4:	mov	fp, r4
   1bfb8:	strb	r1, [r2], #1
   1bfbc:	add	r7, r3, #1
   1bfc0:	add	r7, r6, r7
   1bfc4:	add	r9, r7, r8
   1bfc8:	sub	r8, r7, r4
   1bfcc:	sub	r9, r9, r4
   1bfd0:	mov	r4, r2
   1bfd4:	b	1bd68 <argp_error@@Base+0x110c>
   1bfd8:	mov	r0, r3
   1bfdc:	mov	r1, #10
   1bfe0:	bl	11ab4 <__overflow@plt>
   1bfe4:	b	1bd50 <argp_error@@Base+0x10f4>
   1bfe8:	str	r1, [r5, #20]
   1bfec:	ldr	r8, [r5, #28]
   1bff0:	b	1bbfc <argp_error@@Base+0xfa0>
   1bff4:	str	r4, [sp, #-8]!
   1bff8:	mov	r4, r0
   1bffc:	str	lr, [sp, #4]
   1c000:	bl	1bab8 <argp_error@@Base+0xe5c>
   1c004:	ldr	r0, [r4, #24]
   1c008:	ldr	r2, [r4, #28]
   1c00c:	cmp	r2, r0
   1c010:	bls	1c028 <argp_error@@Base+0x13cc>
   1c014:	sub	r2, r2, r0
   1c018:	mov	r1, #1
   1c01c:	ldr	r3, [r4]
   1c020:	bl	1182c <fwrite_unlocked@plt>
   1c024:	ldr	r0, [r4, #24]
   1c028:	bl	170ac <argp_parse@@Base+0xfe4>
   1c02c:	mov	r0, r4
   1c030:	ldr	r4, [sp]
   1c034:	ldr	lr, [sp, #4]
   1c038:	add	sp, sp, #8
   1c03c:	b	170ac <argp_parse@@Base+0xfe4>
   1c040:	strd	r4, [sp, #-16]!
   1c044:	mov	r4, r0
   1c048:	mov	r5, r1
   1c04c:	str	r6, [sp, #8]
   1c050:	str	lr, [sp, #12]
   1c054:	bl	1bab8 <argp_error@@Base+0xe5c>
   1c058:	mov	r1, #1
   1c05c:	ldr	r3, [r4]
   1c060:	ldr	r2, [r4, #24]
   1c064:	ldr	ip, [r4, #28]
   1c068:	mov	r0, r2
   1c06c:	sub	r2, ip, r2
   1c070:	bl	1182c <fwrite_unlocked@plt>
   1c074:	mov	ip, r0
   1c078:	ldr	r0, [r4, #24]
   1c07c:	ldr	r3, [r4, #28]
   1c080:	sub	r2, r3, r0
   1c084:	cmp	ip, r2
   1c088:	bne	1c0e8 <argp_error@@Base+0x148c>
   1c08c:	ldr	r1, [r4, #32]
   1c090:	mov	r3, #0
   1c094:	str	r3, [r4, #16]
   1c098:	str	r0, [r4, #28]
   1c09c:	sub	r1, r1, r0
   1c0a0:	cmp	r1, r5
   1c0a4:	movcs	r3, #1
   1c0a8:	bcs	1c0d4 <argp_error@@Base+0x1478>
   1c0ac:	adds	r5, r1, r5
   1c0b0:	bcs	1c110 <argp_error@@Base+0x14b4>
   1c0b4:	mov	r1, r5
   1c0b8:	bl	177d0 <argp_parse@@Base+0x1708>
   1c0bc:	cmp	r0, #0
   1c0c0:	beq	1c110 <argp_error@@Base+0x14b4>
   1c0c4:	add	r1, r0, r5
   1c0c8:	mov	r3, #1
   1c0cc:	str	r0, [r4, #24]
   1c0d0:	strd	r0, [r4, #28]
   1c0d4:	ldrd	r4, [sp]
   1c0d8:	mov	r0, r3
   1c0dc:	ldr	r6, [sp, #8]
   1c0e0:	add	sp, sp, #12
   1c0e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0e8:	ldr	lr, [r4, #16]
   1c0ec:	sub	r3, r3, ip
   1c0f0:	add	r1, r0, ip
   1c0f4:	sub	r2, r3, r0
   1c0f8:	str	r3, [r4, #28]
   1c0fc:	sub	ip, lr, ip
   1c100:	str	ip, [r4, #16]
   1c104:	bl	117c0 <memmove@plt>
   1c108:	mov	r3, #0
   1c10c:	b	1c0d4 <argp_error@@Base+0x1478>
   1c110:	bl	11a24 <__errno_location@plt>
   1c114:	mov	r2, #12
   1c118:	mov	r3, #0
   1c11c:	str	r2, [r0]
   1c120:	b	1c0d4 <argp_error@@Base+0x1478>
   1c124:	ldr	ip, [r0, #28]
   1c128:	ldr	r3, [r0, #32]
   1c12c:	sub	r3, r3, ip
   1c130:	cmp	r3, r1
   1c134:	bcc	1c140 <argp_error@@Base+0x14e4>
   1c138:	mov	r0, #1
   1c13c:	bx	lr
   1c140:	b	1c040 <argp_error@@Base+0x13e4>
   1c144:	push	{r1, r2, r3}
   1c148:	mov	r1, #150	; 0x96
   1c14c:	strd	r4, [sp, #-20]!	; 0xffffffec
   1c150:	mov	r5, r0
   1c154:	strd	r6, [sp, #8]
   1c158:	str	lr, [sp, #16]
   1c15c:	sub	sp, sp, #8
   1c160:	ldr	r7, [sp, #28]
   1c164:	add	r6, sp, #32
   1c168:	ldr	r0, [r5, #28]
   1c16c:	ldr	r3, [r5, #32]
   1c170:	sub	r2, r3, r0
   1c174:	cmp	r1, r2
   1c178:	bhi	1c1c8 <argp_error@@Base+0x156c>
   1c17c:	sub	r4, r3, r0
   1c180:	mov	r2, r7
   1c184:	str	r6, [sp, #4]
   1c188:	mov	r1, r4
   1c18c:	mov	r3, r6
   1c190:	bl	11b68 <vsnprintf@plt>
   1c194:	cmp	r0, r4
   1c198:	add	r1, r0, #1
   1c19c:	bcs	1c168 <argp_error@@Base+0x150c>
   1c1a0:	ldr	r3, [r5, #28]
   1c1a4:	add	r3, r3, r0
   1c1a8:	str	r3, [r5, #28]
   1c1ac:	add	sp, sp, #8
   1c1b0:	ldrd	r4, [sp]
   1c1b4:	ldrd	r6, [sp, #8]
   1c1b8:	ldr	lr, [sp, #16]
   1c1bc:	add	sp, sp, #20
   1c1c0:	add	sp, sp, #12
   1c1c4:	bx	lr
   1c1c8:	mov	r0, r5
   1c1cc:	bl	1c040 <argp_error@@Base+0x13e4>
   1c1d0:	cmp	r0, #0
   1c1d4:	beq	1c1e4 <argp_error@@Base+0x1588>
   1c1d8:	ldr	r0, [r5, #28]
   1c1dc:	ldr	r3, [r5, #32]
   1c1e0:	b	1c17c <argp_error@@Base+0x1520>
   1c1e4:	mvn	r0, #0
   1c1e8:	b	1c1ac <argp_error@@Base+0x1550>
   1c1ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c1f0:	mov	r7, r0
   1c1f4:	ldr	r6, [pc, #72]	; 1c244 <argp_error@@Base+0x15e8>
   1c1f8:	ldr	r5, [pc, #72]	; 1c248 <argp_error@@Base+0x15ec>
   1c1fc:	add	r6, pc, r6
   1c200:	add	r5, pc, r5
   1c204:	sub	r6, r6, r5
   1c208:	mov	r8, r1
   1c20c:	mov	r9, r2
   1c210:	bl	11704 <calloc@plt-0x20>
   1c214:	asrs	r6, r6, #2
   1c218:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c21c:	mov	r4, #0
   1c220:	add	r4, r4, #1
   1c224:	ldr	r3, [r5], #4
   1c228:	mov	r2, r9
   1c22c:	mov	r1, r8
   1c230:	mov	r0, r7
   1c234:	blx	r3
   1c238:	cmp	r6, r4
   1c23c:	bne	1c220 <argp_error@@Base+0x15c4>
   1c240:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c244:	andeq	r1, r1, r8, lsl #26
   1c248:	andeq	r1, r1, r0, lsl #26
   1c24c:	bx	lr

Disassembly of section .fini:

0001c250 <.fini>:
   1c250:	push	{r3, lr}
   1c254:	pop	{r3, pc}
