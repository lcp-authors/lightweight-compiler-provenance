
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

0001094c <.init>:
   1094c:	push	{r3, lr}
   10950:	bl	10b34 <getc@plt+0x48>
   10954:	pop	{r3, pc}

Disassembly of section .plt:

00010958 <calloc@plt-0x14>:
   10958:	push	{lr}		; (str lr, [sp, #-4]!)
   1095c:	ldr	lr, [pc, #4]	; 10968 <calloc@plt-0x4>
   10960:	add	lr, pc, lr
   10964:	ldr	pc, [lr, #8]!
   10968:	muleq	r1, r8, r6

0001096c <calloc@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #20, 20	; 0x14000
   10974:	ldr	pc, [ip, #1688]!	; 0x698

00010978 <strcmp@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #20, 20	; 0x14000
   10980:	ldr	pc, [ip, #1680]!	; 0x690

00010984 <printf@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #20, 20	; 0x14000
   1098c:	ldr	pc, [ip, #1672]!	; 0x688

00010990 <fopen@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #20, 20	; 0x14000
   10998:	ldr	pc, [ip, #1664]!	; 0x680

0001099c <free@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #20, 20	; 0x14000
   109a4:	ldr	pc, [ip, #1656]!	; 0x678

000109a8 <utf8proc_get_property@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #20, 20	; 0x14000
   109b0:	ldr	pc, [ip, #1648]!	; 0x670

000109b4 <fgets@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #20, 20	; 0x14000
   109bc:	ldr	pc, [ip, #1640]!	; 0x668

000109c0 <utf8proc_encode_char@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #20, 20	; 0x14000
   109c8:	ldr	pc, [ip, #1632]!	; 0x660

000109cc <strdup@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #20, 20	; 0x14000
   109d4:	ldr	pc, [ip, #1624]!	; 0x658

000109d8 <rewind@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #20, 20	; 0x14000
   109e0:	ldr	pc, [ip, #1616]!	; 0x650

000109e4 <unlink@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #20, 20	; 0x14000
   109ec:	ldr	pc, [ip, #1608]!	; 0x648

000109f0 <utf8proc_tolower@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #20, 20	; 0x14000
   109f8:	ldr	pc, [ip, #1600]!	; 0x640

000109fc <__xstat@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #20, 20	; 0x14000
   10a04:	ldr	pc, [ip, #1592]!	; 0x638

00010a08 <fwrite@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1584]!	; 0x630

00010a14 <fread@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1576]!	; 0x628

00010a20 <utf8proc_iterate@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #20, 20	; 0x14000
   10a28:	ldr	pc, [ip, #1568]!	; 0x620

00010a2c <__libc_start_main@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #20, 20	; 0x14000
   10a34:	ldr	pc, [ip, #1560]!	; 0x618

00010a38 <__sysv_signal@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #20, 20	; 0x14000
   10a40:	ldr	pc, [ip, #1552]!	; 0x610

00010a44 <__gmon_start__@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #20, 20	; 0x14000
   10a4c:	ldr	pc, [ip, #1544]!	; 0x608

00010a50 <getpid@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #20, 20	; 0x14000
   10a58:	ldr	pc, [ip, #1536]!	; 0x600

00010a5c <exit@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #20, 20	; 0x14000
   10a64:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a68 <utf8proc_category@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #20, 20	; 0x14000
   10a70:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a74 <strlen@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #20, 20	; 0x14000
   10a7c:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a80 <fprintf@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #20, 20	; 0x14000
   10a88:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a8c <sqrt@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #20, 20	; 0x14000
   10a94:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a98 <__isoc99_sscanf@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #20, 20	; 0x14000
   10aa0:	ldr	pc, [ip, #1488]!	; 0x5d0

00010aa4 <fclose@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #20, 20	; 0x14000
   10aac:	ldr	pc, [ip, #1480]!	; 0x5c8

00010ab0 <sprintf@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #20, 20	; 0x14000
   10ab8:	ldr	pc, [ip, #1472]!	; 0x5c0

00010abc <utf8proc_errmsg@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #20, 20	; 0x14000
   10ac4:	ldr	pc, [ip, #1464]!	; 0x5b8

00010ac8 <fputs@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #20, 20	; 0x14000
   10ad0:	ldr	pc, [ip, #1456]!	; 0x5b0

00010ad4 <strncmp@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #20, 20	; 0x14000
   10adc:	ldr	pc, [ip, #1448]!	; 0x5a8

00010ae0 <abort@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #20, 20	; 0x14000
   10ae8:	ldr	pc, [ip, #1440]!	; 0x5a0

00010aec <getc@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #20, 20	; 0x14000
   10af4:	ldr	pc, [ip, #1432]!	; 0x598

Disassembly of section .text:

00010af8 <error@@Base-0x1874>:
   10af8:	mov	fp, #0
   10afc:	mov	lr, #0
   10b00:	pop	{r1}		; (ldr r1, [sp], #4)
   10b04:	mov	r2, sp
   10b08:	push	{r2}		; (str r2, [sp, #-4]!)
   10b0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b10:	ldr	ip, [pc, #16]	; 10b28 <getc@plt+0x3c>
   10b14:	push	{ip}		; (str ip, [sp, #-4]!)
   10b18:	ldr	r0, [pc, #12]	; 10b2c <getc@plt+0x40>
   10b1c:	ldr	r3, [pc, #12]	; 10b30 <getc@plt+0x44>
   10b20:	bl	10a2c <__libc_start_main@plt>
   10b24:	bl	10ae0 <abort@plt>
   10b28:	andeq	r3, r1, r0, asr #1
   10b2c:	andeq	r0, r1, r0, lsl sp
   10b30:	andeq	r3, r1, r0, rrx
   10b34:	ldr	r3, [pc, #20]	; 10b50 <getc@plt+0x64>
   10b38:	ldr	r2, [pc, #20]	; 10b54 <getc@plt+0x68>
   10b3c:	add	r3, pc, r3
   10b40:	ldr	r2, [r3, r2]
   10b44:	cmp	r2, #0
   10b48:	bxeq	lr
   10b4c:	b	10a44 <__gmon_start__@plt>
   10b50:			; <UNDEFINED> instruction: 0x000144bc
   10b54:	muleq	r0, r0, r0
   10b58:	ldr	r0, [pc, #24]	; 10b78 <getc@plt+0x8c>
   10b5c:	ldr	r3, [pc, #24]	; 10b7c <getc@plt+0x90>
   10b60:	cmp	r3, r0
   10b64:	bxeq	lr
   10b68:	ldr	r3, [pc, #16]	; 10b80 <getc@plt+0x94>
   10b6c:	cmp	r3, #0
   10b70:	bxeq	lr
   10b74:	bx	r3
   10b78:	andeq	r5, r2, r4, lsr #1
   10b7c:	andeq	r5, r2, r4, lsr #1
   10b80:	andeq	r0, r0, r0
   10b84:	ldr	r0, [pc, #36]	; 10bb0 <getc@plt+0xc4>
   10b88:	ldr	r1, [pc, #36]	; 10bb4 <getc@plt+0xc8>
   10b8c:	sub	r1, r1, r0
   10b90:	asr	r1, r1, #2
   10b94:	add	r1, r1, r1, lsr #31
   10b98:	asrs	r1, r1, #1
   10b9c:	bxeq	lr
   10ba0:	ldr	r3, [pc, #16]	; 10bb8 <getc@plt+0xcc>
   10ba4:	cmp	r3, #0
   10ba8:	bxeq	lr
   10bac:	bx	r3
   10bb0:	andeq	r5, r2, r4, lsr #1
   10bb4:	andeq	r5, r2, r4, lsr #1
   10bb8:	andeq	r0, r0, r0
   10bbc:	push	{r4, lr}
   10bc0:	ldr	r4, [pc, #24]	; 10be0 <getc@plt+0xf4>
   10bc4:	ldrb	r3, [r4]
   10bc8:	cmp	r3, #0
   10bcc:	popne	{r4, pc}
   10bd0:	bl	10b58 <getc@plt+0x6c>
   10bd4:	mov	r3, #1
   10bd8:	strb	r3, [r4]
   10bdc:	pop	{r4, pc}
   10be0:	strheq	r5, [r2], -r8
   10be4:	b	10b84 <getc@plt+0x98>
   10be8:	strd	r4, [sp, #-16]!
   10bec:	str	r6, [sp, #8]
   10bf0:	str	lr, [sp, #12]
   10bf4:	movw	r4, #21808	; 0x5530
   10bf8:	movt	r4, #19
   10bfc:	ldr	r5, [r4]
   10c00:	ldr	r6, [r4, #4]
   10c04:	mov	r1, r0
   10c08:	mov	r0, r4
   10c0c:	bl	1117c <getc@plt+0x690>
   10c10:	ldr	r2, [r4, #4]
   10c14:	ldr	r1, [r4]
   10c18:	sub	r2, r2, r6
   10c1c:	sub	r1, r1, r5
   10c20:	movw	r0, #31984	; 0x7cf0
   10c24:	movt	r0, #155	; 0x9b
   10c28:	bl	11978 <getc@plt+0xe8c>
   10c2c:	ldrd	r4, [sp]
   10c30:	ldr	r6, [sp, #8]
   10c34:	add	sp, sp, #12
   10c38:	pop	{pc}		; (ldr pc, [sp], #4)
   10c3c:	str	r4, [sp, #-8]!
   10c40:	str	lr, [sp, #4]
   10c44:	sub	sp, sp, #32
   10c48:	movw	r4, #31984	; 0x7cf0
   10c4c:	movt	r4, #155	; 0x9b
   10c50:	add	r2, sp, #16
   10c54:	add	r1, sp, #24
   10c58:	mov	r0, r4
   10c5c:	bl	119d8 <getc@plt+0xeec>
   10c60:	ldr	r1, [r4, #12]
   10c64:	movw	r0, #12496	; 0x30d0
   10c68:	movt	r0, #1
   10c6c:	bl	10984 <printf@plt>
   10c70:	movw	r4, #21808	; 0x5530
   10c74:	movt	r4, #19
   10c78:	ldr	r1, [r4]
   10c7c:	movw	r0, #12520	; 0x30e8
   10c80:	movt	r0, #1
   10c84:	bl	10984 <printf@plt>
   10c88:	ldr	r1, [r4, #4]
   10c8c:	movw	r0, #12540	; 0x30fc
   10c90:	movt	r0, #1
   10c94:	bl	10984 <printf@plt>
   10c98:	ldr	r2, [r4]
   10c9c:	ldr	r3, [r4, #4]
   10ca0:	sub	r3, r2, r3
   10ca4:	vmov	s14, r3
   10ca8:	vcvt.f64.s32	d7, s14
   10cac:	vldr	d6, [pc, #84]	; 10d08 <getc@plt+0x21c>
   10cb0:	vmul.f64	d7, d7, d6
   10cb4:	vmov	s13, r2
   10cb8:	vcvt.f64.s32	d6, s13
   10cbc:	vdiv.f64	d7, d7, d6
   10cc0:	vmov	r2, r3, d7
   10cc4:	movw	r0, #12556	; 0x310c
   10cc8:	movt	r0, #1
   10ccc:	bl	10984 <printf@plt>
   10cd0:	movw	r3, #12600	; 0x3138
   10cd4:	movt	r3, #1
   10cd8:	str	r3, [sp, #8]
   10cdc:	ldrd	r2, [sp, #16]
   10ce0:	strd	r2, [sp]
   10ce4:	ldrd	r2, [sp, #24]
   10ce8:	movw	r0, #12576	; 0x3120
   10cec:	movt	r0, #1
   10cf0:	bl	10984 <printf@plt>
   10cf4:	add	sp, sp, #32
   10cf8:	ldr	r4, [sp]
   10cfc:	add	sp, sp, #4
   10d00:	pop	{pc}		; (ldr pc, [sp], #4)
   10d04:	nop	{0}
   10d08:	andeq	r0, r0, r0
   10d0c:	subsmi	r0, r9, r0
   10d10:	strd	r4, [sp, #-12]!
   10d14:	str	lr, [sp, #8]
   10d18:	sub	sp, sp, #12
   10d1c:	str	r0, [sp, #4]
   10d20:	mov	r5, r1
   10d24:	mov	r3, #0
   10d28:	movw	r2, #12652	; 0x316c
   10d2c:	movt	r2, #1
   10d30:	add	r0, sp, #4
   10d34:	bl	124d8 <error@@Base+0x16c>
   10d38:	ldr	r3, [sp, #4]
   10d3c:	cmp	r3, #1
   10d40:	subgt	r5, r5, #4
   10d44:	movgt	r4, #0
   10d48:	ble	10d6c <getc@plt+0x280>
   10d4c:	ldr	r0, [r5, #4]!
   10d50:	bl	10be8 <getc@plt+0xfc>
   10d54:	add	r4, r4, #1
   10d58:	ldr	r3, [sp, #4]
   10d5c:	cmp	r3, r4
   10d60:	bgt	10d4c <getc@plt+0x260>
   10d64:	bl	10c3c <getc@plt+0x150>
   10d68:	bl	1230c <getc@plt+0x1820>
   10d6c:	movw	r0, #12704	; 0x31a0
   10d70:	movt	r0, #1
   10d74:	bl	1236c <error@@Base>
   10d78:	str	r4, [sp, #-8]!
   10d7c:	str	lr, [sp, #4]
   10d80:	mov	r2, r0
   10d84:	mov	r1, #99	; 0x63
   10d88:	movw	r0, #20668	; 0x50bc
   10d8c:	movt	r0, #2
   10d90:	bl	109b4 <fgets@plt>
   10d94:	adds	r0, r0, #0
   10d98:	movne	r0, #1
   10d9c:	ldr	r4, [sp]
   10da0:	add	sp, sp, #4
   10da4:	pop	{pc}		; (ldr pc, [sp], #4)
   10da8:	strd	r4, [sp, #-16]!
   10dac:	str	r6, [sp, #8]
   10db0:	str	lr, [sp, #12]
   10db4:	mov	r4, r1
   10db8:	mov	r5, r2
   10dbc:	bl	10d78 <getc@plt+0x28c>
   10dc0:	cmp	r0, #0
   10dc4:	bne	10dd8 <getc@plt+0x2ec>
   10dc8:	ldrd	r4, [sp]
   10dcc:	ldr	r6, [sp, #8]
   10dd0:	add	sp, sp, #12
   10dd4:	pop	{pc}		; (ldr pc, [sp], #4)
   10dd8:	mov	r2, r4
   10ddc:	movw	r1, #12740	; 0x31c4
   10de0:	movt	r1, #1
   10de4:	movw	r0, #20668	; 0x50bc
   10de8:	movt	r0, #2
   10dec:	bl	10a98 <__isoc99_sscanf@plt>
   10df0:	cmp	r0, #1
   10df4:	movne	r0, #0
   10df8:	bne	10dc8 <getc@plt+0x2dc>
   10dfc:	ldr	r3, [r5]
   10e00:	ldr	r2, [r4]
   10e04:	add	r3, r3, r2
   10e08:	str	r3, [r5]
   10e0c:	b	10dc8 <getc@plt+0x2dc>
   10e10:	str	r4, [sp, #-8]!
   10e14:	str	lr, [sp, #4]
   10e18:	sub	sp, sp, #24
   10e1c:	mov	r4, r1
   10e20:	bl	10d78 <getc@plt+0x28c>
   10e24:	cmp	r0, #0
   10e28:	bne	10e3c <getc@plt+0x350>
   10e2c:	add	sp, sp, #24
   10e30:	ldr	r4, [sp]
   10e34:	add	sp, sp, #4
   10e38:	pop	{pc}		; (ldr pc, [sp], #4)
   10e3c:	add	r3, sp, #20
   10e40:	str	r3, [sp, #4]
   10e44:	add	r3, sp, #16
   10e48:	str	r3, [sp]
   10e4c:	add	r3, sp, #12
   10e50:	add	r2, sp, #8
   10e54:	movw	r1, #12728	; 0x31b8
   10e58:	movt	r1, #1
   10e5c:	movw	r0, #20668	; 0x50bc
   10e60:	movt	r0, #2
   10e64:	bl	10a98 <__isoc99_sscanf@plt>
   10e68:	cmp	r0, #4
   10e6c:	movne	r0, #0
   10e70:	bne	10e2c <getc@plt+0x340>
   10e74:	ldr	r3, [r4]
   10e78:	ldr	r2, [sp, #8]
   10e7c:	add	r3, r3, r2
   10e80:	str	r3, [r4]
   10e84:	ldr	r3, [r4, #4]
   10e88:	ldr	r2, [sp, #12]
   10e8c:	add	r3, r3, r2
   10e90:	str	r3, [r4, #4]
   10e94:	ldr	r3, [r4, #8]
   10e98:	ldr	r2, [sp, #16]
   10e9c:	add	r3, r3, r2
   10ea0:	str	r3, [r4, #8]
   10ea4:	ldr	r3, [r4, #12]
   10ea8:	ldr	r2, [sp, #20]
   10eac:	add	r3, r3, r2
   10eb0:	str	r3, [r4, #12]
   10eb4:	mov	r0, #1
   10eb8:	b	10e2c <getc@plt+0x340>
   10ebc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec0:	sub	sp, sp, #20
   10ec4:	str	r2, [sp, #8]
   10ec8:	ldr	r3, [r1, #12]
   10ecc:	str	r3, [sp, #4]
   10ed0:	ldr	r3, [r1, #8]
   10ed4:	str	r3, [sp]
   10ed8:	ldr	r3, [r1, #4]
   10edc:	ldr	r2, [r1]
   10ee0:	movw	r1, #12744	; 0x31c8
   10ee4:	movt	r1, #1
   10ee8:	bl	10a80 <fprintf@plt>
   10eec:	add	sp, sp, #20
   10ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   10ef4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ef8:	sub	sp, sp, #12
   10efc:	str	r1, [sp, #4]
   10f00:	cmp	r2, #0
   10f04:	bne	10f28 <getc@plt+0x43c>
   10f08:	mov	r3, r0
   10f0c:	mov	r2, #8
   10f10:	mov	r1, #1
   10f14:	movw	r0, #12772	; 0x31e4
   10f18:	movt	r0, #1
   10f1c:	bl	10a08 <fwrite@plt>
   10f20:	add	sp, sp, #12
   10f24:	pop	{pc}		; (ldr pc, [sp], #4)
   10f28:	vldr	s15, [sp, #4]
   10f2c:	vcvt.f64.s32	d7, s15
   10f30:	vldr	d6, [pc, #32]	; 10f58 <getc@plt+0x46c>
   10f34:	vmul.f64	d7, d7, d6
   10f38:	vmov	s13, r2
   10f3c:	vcvt.f64.s32	d6, s13
   10f40:	vdiv.f64	d7, d7, d6
   10f44:	vmov	r2, r3, d7
   10f48:	movw	r1, #12784	; 0x31f0
   10f4c:	movt	r1, #1
   10f50:	bl	10a80 <fprintf@plt>
   10f54:	b	10f20 <getc@plt+0x434>
   10f58:	andeq	r0, r0, r0
   10f5c:	subsmi	r0, r9, r0
   10f60:	ldr	r2, [r0, #12]
   10f64:	ldr	r3, [r1, #12]
   10f68:	cmp	r2, r3
   10f6c:	beq	10f78 <getc@plt+0x48c>
   10f70:	sub	r0, r3, r2
   10f74:	bx	lr
   10f78:	ldr	r2, [r0, #16]
   10f7c:	ldr	r3, [r1, #16]
   10f80:	cmp	r2, r3
   10f84:	beq	10f90 <getc@plt+0x4a4>
   10f88:	sub	r0, r3, r2
   10f8c:	bx	lr
   10f90:	str	r4, [sp, #-8]!
   10f94:	str	lr, [sp, #4]
   10f98:	ldr	r1, [r1, #8]
   10f9c:	ldr	r0, [r0, #8]
   10fa0:	bl	12170 <getc@plt+0x1684>
   10fa4:	ldr	r4, [sp]
   10fa8:	add	sp, sp, #4
   10fac:	pop	{pc}		; (ldr pc, [sp], #4)
   10fb0:	strd	r4, [sp, #-20]!	; 0xffffffec
   10fb4:	strd	r6, [sp, #8]
   10fb8:	str	lr, [sp, #16]
   10fbc:	sub	sp, sp, #20
   10fc0:	mov	r5, r0
   10fc4:	mov	r4, r1
   10fc8:	mov	r6, r2
   10fcc:	mov	r7, r3
   10fd0:	ldr	r3, [r1, #4]
   10fd4:	ldr	r2, [r1]
   10fd8:	movw	r1, #12792	; 0x31f8
   10fdc:	movt	r1, #1
   10fe0:	bl	10a80 <fprintf@plt>
   10fe4:	ldr	r3, [r4]
   10fe8:	ldr	r1, [r4, #4]
   10fec:	mov	r2, r3
   10ff0:	sub	r1, r3, r1
   10ff4:	mov	r0, r5
   10ff8:	bl	10ef4 <getc@plt+0x408>
   10ffc:	cmp	r6, #0
   11000:	beq	1102c <getc@plt+0x540>
   11004:	mov	r2, r6
   11008:	movw	r1, #12968	; 0x32a8
   1100c:	movt	r1, #1
   11010:	mov	r0, r5
   11014:	bl	10a80 <fprintf@plt>
   11018:	add	sp, sp, #20
   1101c:	ldrd	r4, [sp]
   11020:	ldrd	r6, [sp, #8]
   11024:	add	sp, sp, #16
   11028:	pop	{pc}		; (ldr pc, [sp], #4)
   1102c:	mov	r3, #1
   11030:	add	r2, sp, #4
   11034:	mov	r1, r7
   11038:	mov	r0, #0
   1103c:	bl	12ba4 <error@@Base+0x838>
   11040:	add	r2, sp, #4
   11044:	movw	r1, #12804	; 0x3204
   11048:	movt	r1, #1
   1104c:	mov	r0, r5
   11050:	bl	10a80 <fprintf@plt>
   11054:	b	11018 <getc@plt+0x52c>
   11058:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1105c:	strd	r6, [sp, #8]
   11060:	str	r8, [sp, #16]
   11064:	str	lr, [sp, #20]
   11068:	mov	r4, r0
   1106c:	mov	r7, r1
   11070:	mov	r6, r2
   11074:	mov	r5, r3
   11078:	mov	r0, r1
   1107c:	bl	12000 <getc@plt+0x1514>
   11080:	add	r0, r4, r0, lsl #3
   11084:	ldr	r3, [r0, #68]	; 0x44
   11088:	add	r3, r3, r6
   1108c:	str	r3, [r0, #68]	; 0x44
   11090:	ldr	r3, [r0, #72]	; 0x48
   11094:	add	r3, r3, r5
   11098:	str	r3, [r0, #72]	; 0x48
   1109c:	ldr	r3, [r4, #2116]	; 0x844
   110a0:	add	r3, r3, r6
   110a4:	str	r3, [r4, #2116]	; 0x844
   110a8:	ldr	r3, [r4, #2120]	; 0x848
   110ac:	add	r3, r3, r5
   110b0:	str	r3, [r4, #2120]	; 0x848
   110b4:	add	r4, r4, r7, lsl #3
   110b8:	add	r4, r4, #8192	; 0x2000
   110bc:	ldr	r2, [r4, #1988]	; 0x7c4
   110c0:	add	r2, r2, r6
   110c4:	str	r2, [r4, #1988]	; 0x7c4
   110c8:	ldr	r3, [r4, #1992]	; 0x7c8
   110cc:	add	r3, r3, r5
   110d0:	str	r3, [r4, #1992]	; 0x7c8
   110d4:	ldrd	r4, [sp]
   110d8:	ldrd	r6, [sp, #8]
   110dc:	ldr	r8, [sp, #16]
   110e0:	add	sp, sp, #20
   110e4:	pop	{pc}		; (ldr pc, [sp], #4)
   110e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   110ec:	strd	r6, [sp, #8]
   110f0:	str	r8, [sp, #16]
   110f4:	str	lr, [sp, #20]
   110f8:	mov	r7, r1
   110fc:	mov	r6, r2
   11100:	mov	r5, r3
   11104:	add	r4, r0, #2112	; 0x840
   11108:	add	r4, r4, #12
   1110c:	mov	r0, r4
   11110:	bl	11c98 <getc@plt+0x11ac>
   11114:	cmp	r0, #0
   11118:	beq	11148 <getc@plt+0x65c>
   1111c:	ldr	r2, [r0, #12]
   11120:	add	r2, r2, r6
   11124:	str	r2, [r0, #12]
   11128:	ldr	r3, [r0, #16]
   1112c:	add	r3, r3, r5
   11130:	str	r3, [r0, #16]
   11134:	ldrd	r4, [sp]
   11138:	ldrd	r6, [sp, #8]
   1113c:	ldr	r8, [sp, #16]
   11140:	add	sp, sp, #20
   11144:	pop	{pc}		; (ldr pc, [sp], #4)
   11148:	mov	r1, #20
   1114c:	mov	r0, #1
   11150:	bl	123ac <error@@Base+0x40>
   11154:	mov	r8, r0
   11158:	mov	r0, r7
   1115c:	bl	109cc <strdup@plt>
   11160:	str	r0, [r8, #8]
   11164:	str	r6, [r8, #12]
   11168:	str	r5, [r8, #16]
   1116c:	mov	r1, r8
   11170:	mov	r0, r4
   11174:	bl	11cf4 <getc@plt+0x1208>
   11178:	b	11134 <getc@plt+0x648>
   1117c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11180:	strd	r6, [sp, #8]
   11184:	str	r8, [sp, #16]
   11188:	str	lr, [sp, #20]
   1118c:	sub	sp, sp, #24
   11190:	mov	r5, r0
   11194:	mov	r6, r1
   11198:	movw	r1, #12824	; 0x3218
   1119c:	movt	r1, #1
   111a0:	mov	r0, r6
   111a4:	bl	12454 <error@@Base+0xe8>
   111a8:	mov	r4, r0
   111ac:	bl	10d78 <getc@plt+0x28c>
   111b0:	cmp	r0, #0
   111b4:	beq	11490 <getc@plt+0x9a4>
   111b8:	mov	r2, #40	; 0x28
   111bc:	movw	r1, #12828	; 0x321c
   111c0:	movt	r1, #1
   111c4:	movw	r0, #20668	; 0x50bc
   111c8:	movt	r0, #2
   111cc:	bl	10ad4 <strncmp@plt>
   111d0:	cmp	r0, #0
   111d4:	bne	11490 <getc@plt+0x9a4>
   111d8:	mov	r0, r4
   111dc:	bl	10d78 <getc@plt+0x28c>
   111e0:	cmp	r0, #0
   111e4:	beq	11490 <getc@plt+0x9a4>
   111e8:	movw	r1, #12872	; 0x3248
   111ec:	movt	r1, #1
   111f0:	movw	r0, #20668	; 0x50bc
   111f4:	movt	r0, #2
   111f8:	bl	10978 <strcmp@plt>
   111fc:	cmp	r0, #0
   11200:	bne	11490 <getc@plt+0x9a4>
   11204:	mov	r2, r5
   11208:	add	r1, sp, #20
   1120c:	mov	r0, r4
   11210:	bl	10da8 <getc@plt+0x2bc>
   11214:	cmp	r0, #0
   11218:	beq	11490 <getc@plt+0x9a4>
   1121c:	add	r2, r5, #4
   11220:	add	r1, sp, #16
   11224:	mov	r0, r4
   11228:	bl	10da8 <getc@plt+0x2bc>
   1122c:	cmp	r0, #0
   11230:	beq	11490 <getc@plt+0x9a4>
   11234:	mov	r0, r4
   11238:	bl	10d78 <getc@plt+0x28c>
   1123c:	cmp	r0, #0
   11240:	beq	11490 <getc@plt+0x9a4>
   11244:	mov	r0, r4
   11248:	bl	10d78 <getc@plt+0x28c>
   1124c:	cmp	r0, #0
   11250:	beq	11490 <getc@plt+0x9a4>
   11254:	add	r2, r5, #8
   11258:	add	r1, sp, #12
   1125c:	mov	r0, r4
   11260:	bl	10da8 <getc@plt+0x2bc>
   11264:	cmp	r0, #0
   11268:	beq	11490 <getc@plt+0x9a4>
   1126c:	add	r2, r5, #12
   11270:	add	r1, sp, #12
   11274:	mov	r0, r4
   11278:	bl	10da8 <getc@plt+0x2bc>
   1127c:	cmp	r0, #0
   11280:	beq	11490 <getc@plt+0x9a4>
   11284:	add	r2, r5, #16
   11288:	add	r1, sp, #12
   1128c:	mov	r0, r4
   11290:	bl	10da8 <getc@plt+0x2bc>
   11294:	cmp	r0, #0
   11298:	beq	11490 <getc@plt+0x9a4>
   1129c:	mov	r0, r4
   112a0:	bl	10d78 <getc@plt+0x28c>
   112a4:	cmp	r0, #0
   112a8:	beq	11490 <getc@plt+0x9a4>
   112ac:	mov	r0, r4
   112b0:	bl	10d78 <getc@plt+0x28c>
   112b4:	cmp	r0, #0
   112b8:	beq	11490 <getc@plt+0x9a4>
   112bc:	mov	r0, r4
   112c0:	bl	10d78 <getc@plt+0x28c>
   112c4:	cmp	r0, #0
   112c8:	beq	11490 <getc@plt+0x9a4>
   112cc:	mov	r0, r4
   112d0:	bl	10d78 <getc@plt+0x28c>
   112d4:	cmp	r0, #0
   112d8:	beq	11490 <getc@plt+0x9a4>
   112dc:	add	r1, r5, #20
   112e0:	mov	r0, r4
   112e4:	bl	10e10 <getc@plt+0x324>
   112e8:	cmp	r0, #0
   112ec:	beq	11490 <getc@plt+0x9a4>
   112f0:	add	r1, r5, #36	; 0x24
   112f4:	mov	r0, r4
   112f8:	bl	10e10 <getc@plt+0x324>
   112fc:	cmp	r0, #0
   11300:	beq	11490 <getc@plt+0x9a4>
   11304:	add	r1, r5, #52	; 0x34
   11308:	mov	r0, r4
   1130c:	bl	10e10 <getc@plt+0x324>
   11310:	cmp	r0, #0
   11314:	beq	11490 <getc@plt+0x9a4>
   11318:	mov	r0, r4
   1131c:	bl	10d78 <getc@plt+0x28c>
   11320:	cmp	r0, #0
   11324:	beq	11490 <getc@plt+0x9a4>
   11328:	movw	r6, #20668	; 0x50bc
   1132c:	movt	r6, #2
   11330:	mov	r0, r4
   11334:	bl	10d78 <getc@plt+0x28c>
   11338:	cmp	r0, #0
   1133c:	beq	1134c <getc@plt+0x860>
   11340:	ldrb	r3, [r6]
   11344:	cmp	r3, #10
   11348:	bne	11330 <getc@plt+0x844>
   1134c:	ldr	r3, [sp, #16]
   11350:	cmp	r3, #0
   11354:	ble	113c0 <getc@plt+0x8d4>
   11358:	mov	r0, r4
   1135c:	bl	10d78 <getc@plt+0x28c>
   11360:	cmp	r0, #0
   11364:	beq	113c0 <getc@plt+0x8d4>
   11368:	movw	r7, #12736	; 0x31c0
   1136c:	movt	r7, #1
   11370:	movw	r6, #20668	; 0x50bc
   11374:	movt	r6, #2
   11378:	add	r8, r6, #20
   1137c:	b	113b0 <getc@plt+0x8c4>
   11380:	add	r3, sp, #8
   11384:	add	r2, sp, #12
   11388:	mov	r1, r7
   1138c:	mov	r0, r6
   11390:	bl	10a98 <__isoc99_sscanf@plt>
   11394:	cmp	r0, #2
   11398:	bne	113c0 <getc@plt+0x8d4>
   1139c:	ldr	r3, [sp, #8]
   113a0:	ldr	r2, [sp, #12]
   113a4:	mov	r1, r8
   113a8:	mov	r0, r5
   113ac:	bl	110e8 <getc@plt+0x5fc>
   113b0:	mov	r0, r4
   113b4:	bl	10d78 <getc@plt+0x28c>
   113b8:	cmp	r0, #0
   113bc:	bne	11380 <getc@plt+0x894>
   113c0:	ldr	r3, [sp, #20]
   113c4:	cmp	r3, #0
   113c8:	ble	11420 <getc@plt+0x934>
   113cc:	mov	r0, r4
   113d0:	bl	10d78 <getc@plt+0x28c>
   113d4:	cmp	r0, #0
   113d8:	beq	11420 <getc@plt+0x934>
   113dc:	movw	r7, #12736	; 0x31c0
   113e0:	movt	r7, #1
   113e4:	movw	r6, #20668	; 0x50bc
   113e8:	movt	r6, #2
   113ec:	add	r8, r6, #31
   113f0:	b	11410 <getc@plt+0x924>
   113f4:	ldrb	r3, [r6, #30]
   113f8:	str	r3, [sp, #4]
   113fc:	ldr	r3, [sp, #8]
   11400:	ldr	r2, [sp, #12]
   11404:	ldr	r1, [sp, #4]
   11408:	mov	r0, r5
   1140c:	bl	11058 <getc@plt+0x56c>
   11410:	mov	r0, r4
   11414:	bl	10d78 <getc@plt+0x28c>
   11418:	cmp	r0, #0
   1141c:	bne	11440 <getc@plt+0x954>
   11420:	mov	r0, r4
   11424:	bl	121f8 <getc@plt+0x170c>
   11428:	add	sp, sp, #24
   1142c:	ldrd	r4, [sp]
   11430:	ldrd	r6, [sp, #8]
   11434:	ldr	r8, [sp, #16]
   11438:	add	sp, sp, #20
   1143c:	pop	{pc}		; (ldr pc, [sp], #4)
   11440:	add	r3, sp, #8
   11444:	add	r2, sp, #12
   11448:	mov	r1, r7
   1144c:	mov	r0, r6
   11450:	bl	10a98 <__isoc99_sscanf@plt>
   11454:	cmp	r0, #2
   11458:	bne	11420 <getc@plt+0x934>
   1145c:	ldrb	r3, [r6, #31]
   11460:	cmp	r3, #125	; 0x7d
   11464:	beq	113f4 <getc@plt+0x908>
   11468:	cmp	r3, #92	; 0x5c
   1146c:	moveq	r3, #10
   11470:	streq	r3, [sp, #4]
   11474:	beq	113fc <getc@plt+0x910>
   11478:	add	r2, sp, #4
   1147c:	movw	r1, #12916	; 0x3274
   11480:	movt	r1, #1
   11484:	mov	r0, r8
   11488:	bl	10a98 <__isoc99_sscanf@plt>
   1148c:	b	113fc <getc@plt+0x910>
   11490:	movw	r1, #12816	; 0x3210
   11494:	movt	r1, #1
   11498:	cmp	r6, #0
   1149c:	movne	r1, r6
   114a0:	movw	r0, #12920	; 0x3278
   114a4:	movt	r0, #1
   114a8:	bl	12410 <error@@Base+0xa4>
   114ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   114b0:	strd	r6, [sp, #8]
   114b4:	str	r8, [sp, #16]
   114b8:	str	lr, [sp, #20]
   114bc:	sub	sp, sp, #8
   114c0:	mov	r7, r0
   114c4:	mov	r0, r1
   114c8:	movw	r1, #12940	; 0x328c
   114cc:	movt	r1, #1
   114d0:	bl	12454 <error@@Base+0xe8>
   114d4:	mov	r6, r0
   114d8:	movw	r3, #12872	; 0x3248
   114dc:	movt	r3, #1
   114e0:	movw	r2, #12828	; 0x321c
   114e4:	movt	r2, #1
   114e8:	movw	r1, #12944	; 0x3290
   114ec:	movt	r1, #1
   114f0:	bl	10a80 <fprintf@plt>
   114f4:	movw	r4, #12964	; 0x32a4
   114f8:	movt	r4, #1
   114fc:	movw	r3, #12952	; 0x3298
   11500:	movt	r3, #1
   11504:	ldr	r2, [r7]
   11508:	mov	r1, r4
   1150c:	mov	r0, r6
   11510:	bl	10a80 <fprintf@plt>
   11514:	movw	r3, #12976	; 0x32b0
   11518:	movt	r3, #1
   1151c:	ldr	r2, [r7, #4]
   11520:	mov	r1, r4
   11524:	mov	r0, r6
   11528:	bl	10a80 <fprintf@plt>
   1152c:	ldr	r3, [r7]
   11530:	ldr	r1, [r7, #4]
   11534:	mov	r2, r3
   11538:	sub	r1, r3, r1
   1153c:	mov	r0, r6
   11540:	bl	10ef4 <getc@plt+0x408>
   11544:	movw	r1, #12984	; 0x32b8
   11548:	movt	r1, #1
   1154c:	mov	r0, r6
   11550:	bl	10a80 <fprintf@plt>
   11554:	movw	r3, #13000	; 0x32c8
   11558:	movt	r3, #1
   1155c:	ldr	r2, [r7, #8]
   11560:	mov	r1, r4
   11564:	mov	r0, r6
   11568:	bl	10a80 <fprintf@plt>
   1156c:	movw	r3, #13020	; 0x32dc
   11570:	movt	r3, #1
   11574:	ldr	r2, [r7, #12]
   11578:	mov	r1, r4
   1157c:	mov	r0, r6
   11580:	bl	10a80 <fprintf@plt>
   11584:	movw	r3, #13036	; 0x32ec
   11588:	movt	r3, #1
   1158c:	ldr	r2, [r7, #16]
   11590:	mov	r1, r4
   11594:	mov	r0, r6
   11598:	bl	10a80 <fprintf@plt>
   1159c:	ldr	r1, [r7, #8]
   115a0:	ldr	r3, [r7, #12]
   115a4:	ldr	r2, [r7]
   115a8:	add	r1, r1, r3
   115ac:	mov	r0, r6
   115b0:	bl	10ef4 <getc@plt+0x408>
   115b4:	movw	r1, #13048	; 0x32f8
   115b8:	movt	r1, #1
   115bc:	mov	r0, r6
   115c0:	bl	10a80 <fprintf@plt>
   115c4:	ldr	r3, [r7]
   115c8:	ldr	r1, [r7, #48]	; 0x30
   115cc:	mov	r2, r3
   115d0:	sub	r1, r3, r1
   115d4:	mov	r0, r6
   115d8:	bl	10ef4 <getc@plt+0x408>
   115dc:	movw	r1, #13072	; 0x3310
   115e0:	movt	r1, #1
   115e4:	mov	r0, r6
   115e8:	bl	10a80 <fprintf@plt>
   115ec:	mov	r3, r6
   115f0:	mov	r2, #37	; 0x25
   115f4:	mov	r1, #1
   115f8:	movw	r0, #13104	; 0x3330
   115fc:	movt	r0, #1
   11600:	bl	10a08 <fwrite@plt>
   11604:	movw	r2, #13144	; 0x3358
   11608:	movt	r2, #1
   1160c:	add	r1, r7, #20
   11610:	mov	r0, r6
   11614:	bl	10ebc <getc@plt+0x3d0>
   11618:	movw	r2, #13152	; 0x3360
   1161c:	movt	r2, #1
   11620:	add	r1, r7, #36	; 0x24
   11624:	mov	r0, r6
   11628:	bl	10ebc <getc@plt+0x3d0>
   1162c:	movw	r2, #13164	; 0x336c
   11630:	movt	r2, #1
   11634:	add	r1, r7, #52	; 0x34
   11638:	mov	r0, r6
   1163c:	bl	10ebc <getc@plt+0x3d0>
   11640:	movw	r1, #13172	; 0x3374
   11644:	movt	r1, #1
   11648:	mov	r0, r6
   1164c:	bl	10a80 <fprintf@plt>
   11650:	mov	r4, #0
   11654:	add	r5, r7, #68	; 0x44
   11658:	mov	r8, r4
   1165c:	b	1166c <getc@plt+0xb80>
   11660:	add	r4, r4, #1
   11664:	cmp	r4, #256	; 0x100
   11668:	beq	11698 <getc@plt+0xbac>
   1166c:	ldr	r3, [r5, r4, lsl #3]
   11670:	cmp	r3, #0
   11674:	ble	11660 <getc@plt+0xb74>
   11678:	mov	r0, r4
   1167c:	bl	12040 <getc@plt+0x1554>
   11680:	mov	r3, r8
   11684:	mov	r2, r0
   11688:	add	r1, r5, r4, lsl #3
   1168c:	mov	r0, r6
   11690:	bl	10fb0 <getc@plt+0x4c4>
   11694:	b	11660 <getc@plt+0xb74>
   11698:	mov	r3, #0
   1169c:	movw	r2, #13164	; 0x336c
   116a0:	movt	r2, #1
   116a4:	add	r1, r7, #2112	; 0x840
   116a8:	add	r1, r1, #4
   116ac:	mov	r0, r6
   116b0:	bl	10fb0 <getc@plt+0x4c4>
   116b4:	ldr	r3, [r7, #4]
   116b8:	cmp	r3, #0
   116bc:	bgt	116ec <getc@plt+0xc00>
   116c0:	ldr	r3, [r7]
   116c4:	cmp	r3, #0
   116c8:	bgt	1177c <getc@plt+0xc90>
   116cc:	mov	r0, r6
   116d0:	bl	121f8 <getc@plt+0x170c>
   116d4:	add	sp, sp, #8
   116d8:	ldrd	r4, [sp]
   116dc:	ldrd	r6, [sp, #8]
   116e0:	ldr	r8, [sp, #16]
   116e4:	add	sp, sp, #20
   116e8:	pop	{pc}		; (ldr pc, [sp], #4)
   116ec:	add	r0, r7, #2112	; 0x840
   116f0:	add	r0, r0, #12
   116f4:	bl	11dc4 <getc@plt+0x12d8>
   116f8:	add	r4, r7, #8192	; 0x2000
   116fc:	movw	r2, #3936	; 0xf60
   11700:	movt	r2, #1
   11704:	ldr	r1, [r4, #1980]	; 0x7bc
   11708:	ldr	r0, [r4, #1984]	; 0x7c0
   1170c:	bl	1193c <getc@plt+0xe50>
   11710:	mov	r3, r6
   11714:	mov	r2, #39	; 0x27
   11718:	mov	r1, #1
   1171c:	movw	r0, #13204	; 0x3394
   11720:	movt	r0, #1
   11724:	bl	10a08 <fwrite@plt>
   11728:	ldr	r3, [r4, #1984]	; 0x7c0
   1172c:	cmp	r3, #0
   11730:	ble	116c0 <getc@plt+0xbd4>
   11734:	mov	r4, #0
   11738:	add	r5, r7, #8192	; 0x2000
   1173c:	movw	r8, #13244	; 0x33bc
   11740:	movt	r8, #1
   11744:	ldr	r3, [r5, #1980]	; 0x7bc
   11748:	ldr	r1, [r3, r4, lsl #2]
   1174c:	ldr	r3, [r1, #16]
   11750:	ldr	r2, [r1, #12]
   11754:	ldr	r1, [r1, #8]
   11758:	str	r1, [sp]
   1175c:	mov	r1, r8
   11760:	mov	r0, r6
   11764:	bl	10a80 <fprintf@plt>
   11768:	add	r4, r4, #1
   1176c:	ldr	r3, [r5, #1984]	; 0x7c0
   11770:	cmp	r3, r4
   11774:	bgt	11744 <getc@plt+0xc58>
   11778:	b	116c0 <getc@plt+0xbd4>
   1177c:	movw	r1, #13172	; 0x3374
   11780:	movt	r1, #1
   11784:	mov	r0, r6
   11788:	bl	10a80 <fprintf@plt>
   1178c:	mov	r4, #0
   11790:	add	r5, r7, #10176	; 0x27c0
   11794:	add	r5, r5, #4
   11798:	mov	r8, r4
   1179c:	movw	r7, #65535	; 0xffff
   117a0:	movt	r7, #16
   117a4:	b	117b4 <getc@plt+0xcc8>
   117a8:	add	r4, r4, #1
   117ac:	cmp	r4, r7
   117b0:	beq	116cc <getc@plt+0xbe0>
   117b4:	ldr	r3, [r5, r4, lsl #3]
   117b8:	cmp	r3, #0
   117bc:	ble	117a8 <getc@plt+0xcbc>
   117c0:	mov	r3, r4
   117c4:	mov	r2, r8
   117c8:	add	r1, r5, r4, lsl #3
   117cc:	mov	r0, r6
   117d0:	bl	10fb0 <getc@plt+0x4c4>
   117d4:	b	117a8 <getc@plt+0xcbc>
   117d8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   117dc:	strd	r6, [sp, #8]
   117e0:	strd	r8, [sp, #16]
   117e4:	str	sl, [sp, #24]
   117e8:	str	lr, [sp, #28]
   117ec:	mov	r8, r0
   117f0:	mov	r9, r1
   117f4:	movw	r3, #20768	; 0x5120
   117f8:	movt	r3, #2
   117fc:	ldr	r3, [r3]
   11800:	ldr	r6, [r3, r0, lsl #2]
   11804:	cmp	r0, r1
   11808:	movge	r4, r1
   1180c:	movge	r7, r0
   11810:	bge	1187c <getc@plt+0xd90>
   11814:	mov	r4, r1
   11818:	mov	sl, r0
   1181c:	movw	r5, #20768	; 0x5120
   11820:	movt	r5, #2
   11824:	b	118e0 <getc@plt+0xdf4>
   11828:	mov	r7, r4
   1182c:	cmp	sl, r7
   11830:	beq	11878 <getc@plt+0xd8c>
   11834:	ldr	r3, [r5]
   11838:	add	r4, sl, #1
   1183c:	ldr	r2, [r3, r7, lsl #2]
   11840:	str	r2, [r3, sl, lsl #2]
   11844:	cmp	r4, r7
   11848:	movge	sl, r4
   1184c:	bge	118c0 <getc@plt+0xdd4>
   11850:	ldr	r2, [r5]
   11854:	ldr	r3, [r5, #4]
   11858:	ldr	r1, [r2, r4, lsl #2]
   1185c:	mov	r0, r6
   11860:	blx	r3
   11864:	cmp	r0, #0
   11868:	ble	118bc <getc@plt+0xdd0>
   1186c:	add	r4, r4, #1
   11870:	cmp	r4, r7
   11874:	bne	11850 <getc@plt+0xd64>
   11878:	mov	r4, r7
   1187c:	movw	r3, #20768	; 0x5120
   11880:	movt	r3, #2
   11884:	ldr	r3, [r3]
   11888:	str	r6, [r3, r4, lsl #2]
   1188c:	sub	r1, r4, #1
   11890:	cmp	r8, r1
   11894:	blt	11924 <getc@plt+0xe38>
   11898:	add	r0, r7, #1
   1189c:	cmp	r9, r0
   118a0:	bgt	11930 <getc@plt+0xe44>
   118a4:	ldrd	r4, [sp]
   118a8:	ldrd	r6, [sp, #8]
   118ac:	ldrd	r8, [sp, #16]
   118b0:	ldr	sl, [sp, #24]
   118b4:	add	sp, sp, #28
   118b8:	pop	{pc}		; (ldr pc, [sp], #4)
   118bc:	mov	sl, r4
   118c0:	cmp	sl, r7
   118c4:	beq	11878 <getc@plt+0xd8c>
   118c8:	ldr	r3, [r5]
   118cc:	sub	r4, r7, #1
   118d0:	ldr	r2, [r3, sl, lsl #2]
   118d4:	str	r2, [r3, r7, lsl #2]
   118d8:	cmp	r4, sl
   118dc:	ble	1191c <getc@plt+0xe30>
   118e0:	cmp	sl, r4
   118e4:	movge	r7, r4
   118e8:	bge	1182c <getc@plt+0xd40>
   118ec:	ldr	r2, [r5]
   118f0:	ldr	r3, [r5, #4]
   118f4:	ldr	r1, [r2, r4, lsl #2]
   118f8:	mov	r0, r6
   118fc:	blx	r3
   11900:	cmp	r0, #0
   11904:	bge	11828 <getc@plt+0xd3c>
   11908:	sub	r4, r4, #1
   1190c:	cmp	r4, sl
   11910:	bne	118ec <getc@plt+0xe00>
   11914:	mov	r7, sl
   11918:	b	11878 <getc@plt+0xd8c>
   1191c:	mov	r7, sl
   11920:	b	1187c <getc@plt+0xd90>
   11924:	mov	r0, r8
   11928:	bl	117d8 <getc@plt+0xcec>
   1192c:	b	11898 <getc@plt+0xdac>
   11930:	mov	r1, r9
   11934:	bl	117d8 <getc@plt+0xcec>
   11938:	b	118a4 <getc@plt+0xdb8>
   1193c:	cmp	r0, #1
   11940:	bxle	lr
   11944:	str	r4, [sp, #-8]!
   11948:	str	lr, [sp, #4]
   1194c:	movw	r3, #20768	; 0x5120
   11950:	movt	r3, #2
   11954:	str	r1, [r3]
   11958:	str	r2, [r3, #4]
   1195c:	sub	r1, r0, #1
   11960:	mov	r0, #0
   11964:	bl	117d8 <getc@plt+0xcec>
   11968:	ldr	r4, [sp]
   1196c:	add	sp, sp, #4
   11970:	pop	{pc}		; (ldr pc, [sp], #4)
   11974:	andeq	r0, r0, r0
   11978:	strd	r4, [sp, #-16]!
   1197c:	str	r6, [sp, #8]
   11980:	str	lr, [sp, #12]
   11984:	mov	r4, r0
   11988:	mov	r6, r1
   1198c:	mov	r5, r2
   11990:	mov	r1, #32
   11994:	mov	r0, #1
   11998:	bl	123ac <error@@Base+0x40>
   1199c:	str	r6, [r0, #8]
   119a0:	str	r5, [r0, #12]
   119a4:	ldr	r1, [r4, #24]
   119a8:	add	r1, r1, r6
   119ac:	str	r1, [r4, #24]
   119b0:	ldr	r2, [r4, #28]
   119b4:	add	r2, r2, r5
   119b8:	str	r2, [r4, #28]
   119bc:	mov	r1, r0
   119c0:	mov	r0, r4
   119c4:	bl	12ec8 <error@@Base+0xb5c>
   119c8:	ldrd	r4, [sp]
   119cc:	ldr	r6, [sp, #8]
   119d0:	add	sp, sp, #12
   119d4:	pop	{pc}		; (ldr pc, [sp], #4)
   119d8:	strd	r4, [sp, #-16]!
   119dc:	str	r6, [sp, #8]
   119e0:	str	lr, [sp, #12]
   119e4:	vpush	{d8}
   119e8:	mov	r6, r2
   119ec:	ldr	r2, [r0]
   119f0:	cmp	r2, #0
   119f4:	beq	11b58 <getc@plt+0x106c>
   119f8:	mov	r4, r0
   119fc:	mov	r5, r1
   11a00:	mov	r3, r2
   11a04:	mov	r0, #0
   11a08:	ldr	r1, [r3, #8]
   11a0c:	cmp	r1, #0
   11a10:	addgt	r0, r0, #1
   11a14:	ldr	r3, [r3, #4]
   11a18:	cmp	r3, #0
   11a1c:	bne	11a08 <getc@plt+0xf1c>
   11a20:	cmp	r0, #1
   11a24:	ble	11b58 <getc@plt+0x106c>
   11a28:	ldr	r3, [r4, #28]
   11a2c:	ldr	r1, [r4, #24]
   11a30:	sub	r3, r1, r3
   11a34:	vmov	s14, r3
   11a38:	vcvt.f64.s32	d7, s14
   11a3c:	vldr	d6, [pc, #412]	; 11be0 <getc@plt+0x10f4>
   11a40:	vmul.f64	d7, d7, d6
   11a44:	vmov	s13, r1
   11a48:	vcvt.f64.s32	d6, s13
   11a4c:	vdiv.f64	d1, d7, d6
   11a50:	vstr	d1, [r4, #32]
   11a54:	vldr	s15, [r4, #12]
   11a58:	vcvt.f64.s32	d2, s15
   11a5c:	vmul.f64	d1, d1, d2
   11a60:	vldr	d4, [pc, #384]	; 11be8 <getc@plt+0x10fc>
   11a64:	vldr	d0, [pc, #372]	; 11be0 <getc@plt+0x10f4>
   11a68:	vmov	r3, s15
   11a6c:	sub	r3, r3, #1
   11a70:	vmov	s6, r3
   11a74:	vcvt.f64.s32	d3, s6
   11a78:	ldr	r1, [r4, #24]
   11a7c:	ldr	r3, [r2, #8]
   11a80:	sub	r1, r1, r3
   11a84:	ldr	r3, [r4, #28]
   11a88:	ldr	r0, [r2, #12]
   11a8c:	sub	r3, r3, r0
   11a90:	sub	r3, r1, r3
   11a94:	vmov	s14, r3
   11a98:	vcvt.f64.s32	d7, s14
   11a9c:	vmul.f64	d7, d7, d0
   11aa0:	vmov	s13, r1
   11aa4:	vcvt.f64.s32	d6, s13
   11aa8:	vdiv.f64	d5, d7, d6
   11aac:	vstr	d5, [r2, #16]
   11ab0:	vmov.f64	d7, d1
   11ab4:	vmls.f64	d7, d3, d5
   11ab8:	vstr	d7, [r2, #24]
   11abc:	vadd.f64	d4, d4, d5
   11ac0:	ldr	r2, [r2, #4]
   11ac4:	cmp	r2, #0
   11ac8:	bne	11a78 <getc@plt+0xf8c>
   11acc:	vmul.f64	d4, d3, d4
   11ad0:	vdiv.f64	d7, d4, d2
   11ad4:	vsub.f64	d1, d1, d7
   11ad8:	vstr	d1, [r4, #40]	; 0x28
   11adc:	ldr	r3, [r4]
   11ae0:	cmp	r3, #0
   11ae4:	beq	11b64 <getc@plt+0x1078>
   11ae8:	vldr	d6, [pc, #248]	; 11be8 <getc@plt+0x10fc>
   11aec:	vldr	d7, [r3, #24]
   11af0:	vsub.f64	d7, d7, d1
   11af4:	vmla.f64	d6, d7, d7
   11af8:	ldr	r3, [r3, #4]
   11afc:	cmp	r3, #0
   11b00:	bne	11aec <getc@plt+0x1000>
   11b04:	vdiv.f64	d7, d6, d3
   11b08:	vdiv.f64	d0, d7, d2
   11b0c:	vsqrt.f64	d8, d0
   11b10:	vcmp.f64	d0, #0.0
   11b14:	vmrs	APSR_nzcv, fpscr
   11b18:	bmi	11b6c <getc@plt+0x1080>
   11b1c:	vldr	d7, [pc, #204]	; 11bf0 <getc@plt+0x1104>
   11b20:	vmul.f64	d7, d8, d7
   11b24:	vldr	d6, [r4, #40]	; 0x28
   11b28:	vsub.f64	d6, d6, d7
   11b2c:	vldr	d5, [pc, #172]	; 11be0 <getc@plt+0x10f4>
   11b30:	vcmpe.f64	d6, d5
   11b34:	vmrs	APSR_nzcv, fpscr
   11b38:	bgt	11b74 <getc@plt+0x1088>
   11b3c:	vcmpe.f64	d6, #0.0
   11b40:	vmrs	APSR_nzcv, fpscr
   11b44:	bmi	11bb0 <getc@plt+0x10c4>
   11b48:	vcmp.f64	d6, d5
   11b4c:	vmrs	APSR_nzcv, fpscr
   11b50:	vmovgt.f64	d6, d5
   11b54:	b	11b78 <getc@plt+0x108c>
   11b58:	movw	r0, #13260	; 0x33cc
   11b5c:	movt	r0, #1
   11b60:	bl	1236c <error@@Base>
   11b64:	vldr	d6, [pc, #124]	; 11be8 <getc@plt+0x10fc>
   11b68:	b	11b04 <getc@plt+0x1018>
   11b6c:	bl	10a8c <sqrt@plt>
   11b70:	b	11b1c <getc@plt+0x1030>
   11b74:	vldr	d6, [pc, #100]	; 11be0 <getc@plt+0x10f4>
   11b78:	vstr	d6, [r5]
   11b7c:	vldr	d6, [r4, #40]	; 0x28
   11b80:	vadd.f64	d7, d7, d6
   11b84:	vldr	d6, [pc, #84]	; 11be0 <getc@plt+0x10f4>
   11b88:	vcmpe.f64	d7, d6
   11b8c:	vmrs	APSR_nzcv, fpscr
   11b90:	bgt	11bb8 <getc@plt+0x10cc>
   11b94:	vcmpe.f64	d7, #0.0
   11b98:	vmrs	APSR_nzcv, fpscr
   11b9c:	bmi	11bd4 <getc@plt+0x10e8>
   11ba0:	vcmp.f64	d7, d6
   11ba4:	vmrs	APSR_nzcv, fpscr
   11ba8:	vmovgt.f64	d7, d6
   11bac:	b	11bbc <getc@plt+0x10d0>
   11bb0:	vldr	d6, [pc, #48]	; 11be8 <getc@plt+0x10fc>
   11bb4:	b	11b78 <getc@plt+0x108c>
   11bb8:	vldr	d7, [pc, #32]	; 11be0 <getc@plt+0x10f4>
   11bbc:	vstr	d7, [r6]
   11bc0:	vpop	{d8}
   11bc4:	ldrd	r4, [sp]
   11bc8:	ldr	r6, [sp, #8]
   11bcc:	add	sp, sp, #12
   11bd0:	pop	{pc}		; (ldr pc, [sp], #4)
   11bd4:	vldr	d7, [pc, #12]	; 11be8 <getc@plt+0x10fc>
   11bd8:	b	11bbc <getc@plt+0x10d0>
   11bdc:	nop	{0}
   11be0:	andeq	r0, r0, r0
   11be4:	subsmi	r0, r9, r0
	...
   11bf0:			; <UNDEFINED> instruction: 0xf5c28f5c
   11bf4:	svccc	0x00ff5c28
   11bf8:	ldrb	r3, [r0]
   11bfc:	cmp	r3, #0
   11c00:	beq	11c40 <getc@plt+0x1154>
   11c04:	mov	r2, #0
   11c08:	add	r2, r2, r3
   11c0c:	ldrb	r3, [r0, #1]!
   11c10:	cmp	r3, #0
   11c14:	bne	11c08 <getc@plt+0x111c>
   11c18:	movw	r3, #20065	; 0x4e61
   11c1c:	movt	r3, #33354	; 0x824a
   11c20:	smull	r1, r3, r3, r2
   11c24:	add	r3, r3, r2
   11c28:	asr	r0, r2, #31
   11c2c:	rsb	r3, r0, r3, asr #8
   11c30:	movw	r0, #503	; 0x1f7
   11c34:	mls	r0, r0, r3, r2
   11c38:	sxth	r0, r0
   11c3c:	bx	lr
   11c40:	mov	r2, #0
   11c44:	b	11c18 <getc@plt+0x112c>
   11c48:	strd	r4, [sp, #-16]!
   11c4c:	str	r6, [sp, #8]
   11c50:	str	lr, [sp, #12]
   11c54:	mov	r6, r0
   11c58:	mov	r4, r0
   11c5c:	add	r5, r0, #8000	; 0x1f40
   11c60:	add	r5, r5, #48	; 0x30
   11c64:	mov	r0, r4
   11c68:	bl	12e8c <error@@Base+0xb20>
   11c6c:	add	r4, r4, #16
   11c70:	cmp	r4, r5
   11c74:	bne	11c64 <getc@plt+0x1178>
   11c78:	add	r6, r6, #4096	; 0x1000
   11c7c:	mov	r3, #0
   11c80:	str	r3, [r6, #3952]	; 0xf70
   11c84:	str	r3, [r6, #3956]	; 0xf74
   11c88:	ldrd	r4, [sp]
   11c8c:	ldr	r6, [sp, #8]
   11c90:	add	sp, sp, #12
   11c94:	pop	{pc}		; (ldr pc, [sp], #4)
   11c98:	strd	r4, [sp, #-16]!
   11c9c:	str	r6, [sp, #8]
   11ca0:	str	lr, [sp, #12]
   11ca4:	mov	r4, r0
   11ca8:	mov	r5, r1
   11cac:	mov	r0, r1
   11cb0:	bl	11bf8 <getc@plt+0x110c>
   11cb4:	ldr	r4, [r4, r0, lsl #4]
   11cb8:	cmp	r4, #0
   11cbc:	beq	11ce0 <getc@plt+0x11f4>
   11cc0:	ldr	r1, [r4, #8]
   11cc4:	mov	r0, r5
   11cc8:	bl	10978 <strcmp@plt>
   11ccc:	cmp	r0, #0
   11cd0:	beq	11ce0 <getc@plt+0x11f4>
   11cd4:	ldr	r4, [r4, #4]
   11cd8:	cmp	r4, #0
   11cdc:	bne	11cc0 <getc@plt+0x11d4>
   11ce0:	mov	r0, r4
   11ce4:	ldrd	r4, [sp]
   11ce8:	ldr	r6, [sp, #8]
   11cec:	add	sp, sp, #12
   11cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   11cf4:	strd	r4, [sp, #-16]!
   11cf8:	str	r6, [sp, #8]
   11cfc:	str	lr, [sp, #12]
   11d00:	mov	r4, r0
   11d04:	mov	r5, r1
   11d08:	ldr	r0, [r1, #8]
   11d0c:	bl	11bf8 <getc@plt+0x110c>
   11d10:	mov	r1, r5
   11d14:	add	r0, r4, r0, lsl #4
   11d18:	bl	12ea4 <error@@Base+0xb38>
   11d1c:	add	r3, r4, #4096	; 0x1000
   11d20:	ldr	r0, [r3, #3952]	; 0xf70
   11d24:	cmp	r0, #0
   11d28:	beq	11d3c <getc@plt+0x1250>
   11d2c:	bl	1099c <free@plt>
   11d30:	add	r3, r4, #4096	; 0x1000
   11d34:	mov	r2, #0
   11d38:	str	r2, [r3, #3952]	; 0xf70
   11d3c:	add	r4, r4, #4096	; 0x1000
   11d40:	ldr	r3, [r4, #3956]	; 0xf74
   11d44:	add	r3, r3, #1
   11d48:	str	r3, [r4, #3956]	; 0xf74
   11d4c:	ldrd	r4, [sp]
   11d50:	ldr	r6, [sp, #8]
   11d54:	add	sp, sp, #12
   11d58:	pop	{pc}		; (ldr pc, [sp], #4)
   11d5c:	strd	r4, [sp, #-16]!
   11d60:	str	r6, [sp, #8]
   11d64:	str	lr, [sp, #12]
   11d68:	mov	r4, r0
   11d6c:	mov	r5, r1
   11d70:	ldr	r0, [r1, #8]
   11d74:	bl	11bf8 <getc@plt+0x110c>
   11d78:	mov	r1, r5
   11d7c:	add	r0, r4, r0, lsl #4
   11d80:	bl	12f30 <error@@Base+0xbc4>
   11d84:	add	r3, r4, #4096	; 0x1000
   11d88:	ldr	r0, [r3, #3952]	; 0xf70
   11d8c:	cmp	r0, #0
   11d90:	beq	11da4 <getc@plt+0x12b8>
   11d94:	bl	1099c <free@plt>
   11d98:	add	r3, r4, #4096	; 0x1000
   11d9c:	mov	r2, #0
   11da0:	str	r2, [r3, #3952]	; 0xf70
   11da4:	add	r4, r4, #4096	; 0x1000
   11da8:	ldr	r3, [r4, #3956]	; 0xf74
   11dac:	sub	r3, r3, #1
   11db0:	str	r3, [r4, #3956]	; 0xf74
   11db4:	ldrd	r4, [sp]
   11db8:	ldr	r6, [sp, #8]
   11dbc:	add	sp, sp, #12
   11dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   11dc4:	add	r3, r0, #4096	; 0x1000
   11dc8:	ldr	r3, [r3, #3952]	; 0xf70
   11dcc:	cmp	r3, #0
   11dd0:	bxne	lr
   11dd4:	add	r3, r0, #4096	; 0x1000
   11dd8:	ldr	r3, [r3, #3956]	; 0xf74
   11ddc:	cmp	r3, #0
   11de0:	bxeq	lr
   11de4:	strd	r4, [sp, #-16]!
   11de8:	str	r6, [sp, #8]
   11dec:	str	lr, [sp, #12]
   11df0:	mov	r4, r0
   11df4:	mov	r1, #4
   11df8:	mov	r0, r3
   11dfc:	bl	123ac <error@@Base+0x40>
   11e00:	add	r3, r4, #4096	; 0x1000
   11e04:	str	r0, [r3, #3952]	; 0xf70
   11e08:	mov	r1, #0
   11e0c:	mov	lr, r1
   11e10:	mov	ip, r3
   11e14:	movw	r5, #503	; 0x1f7
   11e18:	b	11e28 <getc@plt+0x133c>
   11e1c:	add	lr, lr, #1
   11e20:	cmp	lr, r5
   11e24:	beq	11e58 <getc@plt+0x136c>
   11e28:	ldr	r3, [r4, lr, lsl #4]
   11e2c:	cmp	r3, #0
   11e30:	beq	11e1c <getc@plt+0x1330>
   11e34:	lsl	r2, r1, #2
   11e38:	add	r1, r1, #1
   11e3c:	ldr	r0, [ip, #3952]	; 0xf70
   11e40:	str	r3, [r0, r2]
   11e44:	ldr	r3, [r3, #4]
   11e48:	add	r2, r2, #4
   11e4c:	cmp	r3, #0
   11e50:	bne	11e38 <getc@plt+0x134c>
   11e54:	b	11e1c <getc@plt+0x1330>
   11e58:	ldrd	r4, [sp]
   11e5c:	ldr	r6, [sp, #8]
   11e60:	add	sp, sp, #12
   11e64:	pop	{pc}		; (ldr pc, [sp], #4)
   11e68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11e6c:	strd	r6, [sp, #8]
   11e70:	str	r8, [sp, #16]
   11e74:	str	lr, [sp, #20]
   11e78:	mov	r7, r0
   11e7c:	mov	r6, r1
   11e80:	mov	r4, r0
   11e84:	add	r5, r0, #8000	; 0x1f40
   11e88:	add	r5, r5, #48	; 0x30
   11e8c:	mov	r1, r6
   11e90:	mov	r0, r4
   11e94:	bl	13010 <error@@Base+0xca4>
   11e98:	add	r4, r4, #16
   11e9c:	cmp	r4, r5
   11ea0:	bne	11e8c <getc@plt+0x13a0>
   11ea4:	add	r3, r7, #4096	; 0x1000
   11ea8:	ldr	r0, [r3, #3952]	; 0xf70
   11eac:	cmp	r0, #0
   11eb0:	beq	11ec4 <getc@plt+0x13d8>
   11eb4:	bl	1099c <free@plt>
   11eb8:	add	r3, r7, #4096	; 0x1000
   11ebc:	mov	r2, #0
   11ec0:	str	r2, [r3, #3952]	; 0xf70
   11ec4:	add	r7, r7, #4096	; 0x1000
   11ec8:	mov	r3, #0
   11ecc:	str	r3, [r7, #3956]	; 0xf74
   11ed0:	ldrd	r4, [sp]
   11ed4:	ldrd	r6, [sp, #8]
   11ed8:	ldr	r8, [sp, #16]
   11edc:	add	sp, sp, #20
   11ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ee4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11ee8:	strd	r6, [sp, #8]
   11eec:	strd	r8, [sp, #16]
   11ef0:	strd	sl, [sp, #24]
   11ef4:	str	lr, [sp, #32]
   11ef8:	sub	sp, sp, #12
   11efc:	movw	r9, #13284	; 0x33e4
   11f00:	movt	r9, #1
   11f04:	add	r3, r9, #1088	; 0x440
   11f08:	add	r3, r3, #4
   11f0c:	str	r3, [sp, #4]
   11f10:	movw	fp, #20776	; 0x5128
   11f14:	movt	fp, #2
   11f18:	movw	r8, #21804	; 0x552c
   11f1c:	movt	r8, #2
   11f20:	b	11f70 <getc@plt+0x1484>
   11f24:	mov	r4, #0
   11f28:	cmp	sl, r4
   11f2c:	beq	11fd0 <getc@plt+0x14e4>
   11f30:	ldr	r3, [r9]
   11f34:	ldr	r1, [r9, #4]
   11f38:	cmp	r3, r1
   11f3c:	bhi	11f60 <getc@plt+0x1474>
   11f40:	sub	r3, r3, #1
   11f44:	add	r3, r3, r8
   11f48:	strb	r4, [r3, #1]
   11f4c:	add	r2, r3, #2
   11f50:	sub	r2, r2, r8
   11f54:	add	r3, r3, #1
   11f58:	cmp	r2, r1
   11f5c:	bls	11f48 <getc@plt+0x145c>
   11f60:	add	r9, r9, #12
   11f64:	ldr	r3, [sp, #4]
   11f68:	cmp	r9, r3
   11f6c:	beq	11fe4 <getc@plt+0x14f8>
   11f70:	ldrsh	sl, [fp]
   11f74:	mov	r6, sl
   11f78:	cmp	sl, #0
   11f7c:	ble	11f24 <getc@plt+0x1438>
   11f80:	ldr	r7, [r9, #8]
   11f84:	add	r5, fp, #4
   11f88:	mov	r4, #0
   11f8c:	ldr	r1, [r5], #4
   11f90:	mov	r0, r7
   11f94:	bl	10978 <strcmp@plt>
   11f98:	cmp	r0, #0
   11f9c:	beq	11f28 <getc@plt+0x143c>
   11fa0:	add	r4, r4, #1
   11fa4:	cmp	r4, r6
   11fa8:	bne	11f8c <getc@plt+0x14a0>
   11fac:	cmp	sl, #256	; 0x100
   11fb0:	beq	11fd8 <getc@plt+0x14ec>
   11fb4:	add	sl, sl, #1
   11fb8:	strh	sl, [fp]
   11fbc:	add	r3, fp, r6, lsl #2
   11fc0:	ldr	r2, [r9, #8]
   11fc4:	str	r2, [r3, #4]
   11fc8:	mov	r4, r6
   11fcc:	b	11f30 <getc@plt+0x1444>
   11fd0:	mov	r6, r4
   11fd4:	b	11fac <getc@plt+0x14c0>
   11fd8:	movw	r0, #14376	; 0x3828
   11fdc:	movt	r0, #1
   11fe0:	bl	1236c <error@@Base>
   11fe4:	add	sp, sp, #12
   11fe8:	ldrd	r4, [sp]
   11fec:	ldrd	r6, [sp, #8]
   11ff0:	ldrd	r8, [sp, #16]
   11ff4:	ldrd	sl, [sp, #24]
   11ff8:	add	sp, sp, #32
   11ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   12000:	str	r4, [sp, #-8]!
   12004:	str	lr, [sp, #4]
   12008:	mov	r4, r0
   1200c:	movw	r3, #20776	; 0x5128
   12010:	movt	r3, #2
   12014:	ldrsh	r3, [r3]
   12018:	cmp	r3, #0
   1201c:	beq	12038 <getc@plt+0x154c>
   12020:	movw	r3, #21804	; 0x552c
   12024:	movt	r3, #2
   12028:	ldrb	r0, [r3, r4]
   1202c:	ldr	r4, [sp]
   12030:	add	sp, sp, #4
   12034:	pop	{pc}		; (ldr pc, [sp], #4)
   12038:	bl	11ee4 <getc@plt+0x13f8>
   1203c:	b	12020 <getc@plt+0x1534>
   12040:	str	r4, [sp, #-8]!
   12044:	str	lr, [sp, #4]
   12048:	uxtb	r4, r0
   1204c:	movw	r3, #20776	; 0x5128
   12050:	movt	r3, #2
   12054:	ldrsh	r3, [r3]
   12058:	cmp	r3, #0
   1205c:	beq	12090 <getc@plt+0x15a4>
   12060:	movw	r3, #20776	; 0x5128
   12064:	movt	r3, #2
   12068:	ldrsh	r3, [r3]
   1206c:	cmp	r4, r3
   12070:	bge	12098 <getc@plt+0x15ac>
   12074:	movw	r3, #20776	; 0x5128
   12078:	movt	r3, #2
   1207c:	add	r3, r3, r4, lsl #2
   12080:	ldr	r0, [r3, #4]
   12084:	ldr	r4, [sp]
   12088:	add	sp, sp, #4
   1208c:	pop	{pc}		; (ldr pc, [sp], #4)
   12090:	bl	11ee4 <getc@plt+0x13f8>
   12094:	b	12060 <getc@plt+0x1574>
   12098:	movw	r0, #14404	; 0x3844
   1209c:	movt	r0, #1
   120a0:	bl	1236c <error@@Base>
   120a4:	strd	r4, [sp, #-12]!
   120a8:	str	lr, [sp, #8]
   120ac:	sub	sp, sp, #116	; 0x74
   120b0:	mov	r5, r0
   120b4:	movw	r3, #32036	; 0x7d24
   120b8:	movt	r3, #155	; 0x9b
   120bc:	ldr	r4, [r3]
   120c0:	bl	10a50 <getpid@plt>
   120c4:	str	r5, [sp]
   120c8:	mov	r3, r0
   120cc:	mov	r2, r4
   120d0:	movw	r1, #16020	; 0x3e94
   120d4:	movt	r1, #1
   120d8:	add	r0, sp, #12
   120dc:	bl	10ab0 <sprintf@plt>
   120e0:	add	r0, sp, #12
   120e4:	bl	109cc <strdup@plt>
   120e8:	add	sp, sp, #116	; 0x74
   120ec:	ldrd	r4, [sp]
   120f0:	add	sp, sp, #8
   120f4:	pop	{pc}		; (ldr pc, [sp], #4)
   120f8:	str	r7, [sp, #-8]!
   120fc:	str	lr, [sp, #4]
   12100:	mov	r6, r0
   12104:	movw	r3, #32040	; 0x7d28
   12108:	movt	r3, #155	; 0x9b
   1210c:	ldr	r3, [r3]
   12110:	cmp	r3, #0
   12114:	beq	1211c <getc@plt+0x1630>
   12118:	blx	r3
   1211c:	movw	r3, #21804	; 0x552c
   12120:	movt	r3, #19
   12124:	ldrsh	r3, [r3]
   12128:	cmp	r3, #0
   1212c:	ble	12168 <getc@plt+0x167c>
   12130:	mov	r4, #1
   12134:	movw	r5, #21804	; 0x552c
   12138:	movt	r5, #19
   1213c:	mov	r0, r4
   12140:	bl	120a4 <getc@plt+0x15b8>
   12144:	mov	r7, r0
   12148:	bl	109e4 <unlink@plt>
   1214c:	mov	r0, r7
   12150:	bl	1099c <free@plt>
   12154:	add	r4, r4, #1
   12158:	sxth	r4, r4
   1215c:	ldrsh	r3, [r5]
   12160:	cmp	r3, r4
   12164:	bge	1213c <getc@plt+0x1650>
   12168:	mov	r0, r6
   1216c:	bl	10a5c <exit@plt>
   12170:	str	r4, [sp, #-8]!
   12174:	str	lr, [sp, #4]
   12178:	ldrb	r3, [r0]
   1217c:	cmp	r3, #0
   12180:	beq	121d4 <getc@plt+0x16e8>
   12184:	ldrb	r2, [r1]
   12188:	cmp	r2, r3
   1218c:	bne	121f0 <getc@plt+0x1704>
   12190:	mov	ip, r1
   12194:	mov	r2, r0
   12198:	rsb	r0, r0, #1
   1219c:	add	r4, r0, r2
   121a0:	ldrb	r3, [r2, #1]!
   121a4:	cmp	r3, #0
   121a8:	beq	121d8 <getc@plt+0x16ec>
   121ac:	ldrb	lr, [ip, #1]!
   121b0:	cmp	lr, r3
   121b4:	beq	1219c <getc@plt+0x16b0>
   121b8:	ldrb	r2, [r1, r4]
   121bc:	cmp	r2, r3
   121c0:	mvnhi	r0, #0
   121c4:	movls	r0, #1
   121c8:	ldr	r4, [sp]
   121cc:	add	sp, sp, #4
   121d0:	pop	{pc}		; (ldr pc, [sp], #4)
   121d4:	mov	r4, #0
   121d8:	ldrb	r3, [r1, r4]
   121dc:	cmp	r3, #0
   121e0:	moveq	r0, #0
   121e4:	beq	121c8 <getc@plt+0x16dc>
   121e8:	mov	r3, #0
   121ec:	b	121b8 <getc@plt+0x16cc>
   121f0:	mov	r4, #0
   121f4:	b	121b8 <getc@plt+0x16cc>
   121f8:	movw	r3, #20656	; 0x50b0
   121fc:	movt	r3, #2
   12200:	ldr	r3, [r3]
   12204:	cmp	r3, r0
   12208:	bxeq	lr
   1220c:	movw	r3, #20660	; 0x50b4
   12210:	movt	r3, #2
   12214:	ldr	r3, [r3]
   12218:	cmp	r3, r0
   1221c:	bxeq	lr
   12220:	str	r4, [sp, #-8]!
   12224:	str	lr, [sp, #4]
   12228:	bl	10aa4 <fclose@plt>
   1222c:	ldr	r4, [sp]
   12230:	add	sp, sp, #4
   12234:	pop	{pc}		; (ldr pc, [sp], #4)
   12238:	push	{lr}		; (str lr, [sp, #-4]!)
   1223c:	sub	sp, sp, #92	; 0x5c
   12240:	mov	r2, sp
   12244:	mov	r1, r0
   12248:	mov	r0, #3
   1224c:	bl	109fc <__xstat@plt>
   12250:	clz	r0, r0
   12254:	lsr	r0, r0, #5
   12258:	add	sp, sp, #92	; 0x5c
   1225c:	pop	{pc}		; (ldr pc, [sp], #4)
   12260:	str	r4, [sp, #-8]!
   12264:	str	lr, [sp, #4]
   12268:	movw	r3, #21804	; 0x552c
   1226c:	movt	r3, #19
   12270:	ldrh	r0, [r3]
   12274:	add	r0, r0, #1
   12278:	sxth	r0, r0
   1227c:	strh	r0, [r3]
   12280:	bl	120a4 <getc@plt+0x15b8>
   12284:	mov	r4, r0
   12288:	bl	109e4 <unlink@plt>
   1228c:	mov	r0, r4
   12290:	ldr	r4, [sp]
   12294:	add	sp, sp, #4
   12298:	pop	{pc}		; (ldr pc, [sp], #4)
   1229c:	str	r4, [sp, #-8]!
   122a0:	str	lr, [sp, #4]
   122a4:	mov	r4, r0
   122a8:	bl	10a74 <strlen@plt>
   122ac:	uxth	r0, r0
   122b0:	sub	r2, r0, #1
   122b4:	sxth	r2, r2
   122b8:	cmp	r2, #0
   122bc:	blt	122f8 <getc@plt+0x180c>
   122c0:	ldrb	r3, [r4, r2]
   122c4:	cmp	r3, #47	; 0x2f
   122c8:	beq	122f8 <getc@plt+0x180c>
   122cc:	sub	r0, r0, #2
   122d0:	sxth	r3, r0
   122d4:	add	r1, r3, #1
   122d8:	add	r1, r4, r1
   122dc:	sxth	r2, r3
   122e0:	cmp	r2, #0
   122e4:	blt	122f8 <getc@plt+0x180c>
   122e8:	sub	r3, r3, #1
   122ec:	ldrb	r0, [r1, #-1]!
   122f0:	cmp	r0, #47	; 0x2f
   122f4:	bne	122dc <getc@plt+0x17f0>
   122f8:	add	r0, r2, #1
   122fc:	add	r0, r4, r0
   12300:	ldr	r4, [sp]
   12304:	add	sp, sp, #4
   12308:	pop	{pc}		; (ldr pc, [sp], #4)
   1230c:	str	r4, [sp, #-8]!
   12310:	str	lr, [sp, #4]
   12314:	mov	r0, #0
   12318:	bl	120f8 <getc@plt+0x160c>
   1231c:	str	r4, [sp, #-8]!
   12320:	str	lr, [sp, #4]
   12324:	movw	r2, #32032	; 0x7d20
   12328:	movt	r2, #155	; 0x9b
   1232c:	ldr	r2, [r2]
   12330:	cmp	r2, #0
   12334:	beq	12340 <getc@plt+0x1854>
   12338:	blx	r2
   1233c:	bl	1230c <getc@plt+0x1820>
   12340:	movw	r2, #32036	; 0x7d24
   12344:	movt	r2, #155	; 0x9b
   12348:	movw	ip, #20648	; 0x50a8
   1234c:	movt	ip, #2
   12350:	mov	r3, r0
   12354:	ldr	r2, [r2]
   12358:	movw	r1, #16036	; 0x3ea4
   1235c:	movt	r1, #1
   12360:	ldr	r0, [ip]
   12364:	bl	10a80 <fprintf@plt>
   12368:	b	1233c <getc@plt+0x1850>

0001236c <error@@Base>:
   1236c:	str	r4, [sp, #-8]!
   12370:	str	lr, [sp, #4]
   12374:	movw	r2, #32036	; 0x7d24
   12378:	movt	r2, #155	; 0x9b
   1237c:	movw	ip, #20648	; 0x50a8
   12380:	movt	ip, #2
   12384:	mov	r3, r0
   12388:	ldr	r2, [r2]
   1238c:	movw	r1, #16052	; 0x3eb4
   12390:	movt	r1, #1
   12394:	ldr	r0, [ip]
   12398:	bl	10a80 <fprintf@plt>
   1239c:	movw	r3, #20636	; 0x509c
   123a0:	movt	r3, #2
   123a4:	ldr	r0, [r3]
   123a8:	bl	120f8 <getc@plt+0x160c>
   123ac:	str	r4, [sp, #-8]!
   123b0:	str	lr, [sp, #4]
   123b4:	bl	1096c <calloc@plt>
   123b8:	cmp	r0, #0
   123bc:	beq	123cc <error@@Base+0x60>
   123c0:	ldr	r4, [sp]
   123c4:	add	sp, sp, #4
   123c8:	pop	{pc}		; (ldr pc, [sp], #4)
   123cc:	movw	r0, #16060	; 0x3ebc
   123d0:	movt	r0, #1
   123d4:	bl	1236c <error@@Base>
   123d8:	movw	r3, #21804	; 0x552c
   123dc:	movt	r3, #19
   123e0:	ldrb	r3, [r3, #2]
   123e4:	cmp	r3, #0
   123e8:	bxne	lr
   123ec:	str	r4, [sp, #-8]!
   123f0:	str	lr, [sp, #4]
   123f4:	movw	r3, #21804	; 0x552c
   123f8:	movt	r3, #19
   123fc:	mov	r2, #1
   12400:	strb	r2, [r3, #2]
   12404:	movw	r0, #16088	; 0x3ed8
   12408:	movt	r0, #1
   1240c:	bl	1236c <error@@Base>
   12410:	push	{lr}		; (str lr, [sp, #-4]!)
   12414:	sub	sp, sp, #12
   12418:	movw	r2, #32036	; 0x7d24
   1241c:	movt	r2, #155	; 0x9b
   12420:	movw	ip, #20648	; 0x50a8
   12424:	movt	ip, #2
   12428:	str	r1, [sp]
   1242c:	mov	r3, r0
   12430:	ldr	r2, [r2]
   12434:	movw	r1, #16104	; 0x3ee8
   12438:	movt	r1, #1
   1243c:	ldr	r0, [ip]
   12440:	bl	10a80 <fprintf@plt>
   12444:	movw	r3, #20636	; 0x509c
   12448:	movt	r3, #2
   1244c:	ldr	r0, [r3]
   12450:	bl	120f8 <getc@plt+0x160c>
   12454:	strd	r4, [sp, #-16]!
   12458:	str	r6, [sp, #8]
   1245c:	str	lr, [sp, #12]
   12460:	subs	r5, r0, #0
   12464:	beq	1248c <error@@Base+0x120>
   12468:	mov	r4, r1
   1246c:	mov	r0, r5
   12470:	bl	10990 <fopen@plt>
   12474:	cmp	r0, #0
   12478:	beq	124ac <error@@Base+0x140>
   1247c:	ldrd	r4, [sp]
   12480:	ldr	r6, [sp, #8]
   12484:	add	sp, sp, #12
   12488:	pop	{pc}		; (ldr pc, [sp], #4)
   1248c:	ldrb	r3, [r1]
   12490:	cmp	r3, #114	; 0x72
   12494:	movweq	r3, #20656	; 0x50b0
   12498:	movteq	r3, #2
   1249c:	movwne	r3, #20660	; 0x50b4
   124a0:	movtne	r3, #2
   124a4:	ldr	r0, [r3]
   124a8:	b	1247c <error@@Base+0x110>
   124ac:	ldrb	r3, [r4]
   124b0:	cmp	r3, #119	; 0x77
   124b4:	beq	124c8 <error@@Base+0x15c>
   124b8:	mov	r1, r5
   124bc:	movw	r0, #16144	; 0x3f10
   124c0:	movt	r0, #1
   124c4:	bl	12410 <error@@Base+0xa4>
   124c8:	mov	r1, r5
   124cc:	movw	r0, #16120	; 0x3ef8
   124d0:	movt	r0, #1
   124d4:	bl	12410 <error@@Base+0xa4>
   124d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   124dc:	strd	r6, [sp, #8]
   124e0:	strd	r8, [sp, #16]
   124e4:	strd	sl, [sp, #24]
   124e8:	str	lr, [sp, #32]
   124ec:	sub	sp, sp, #28
   124f0:	mov	r5, r0
   124f4:	str	r0, [sp, #4]
   124f8:	mov	r9, r1
   124fc:	str	r2, [sp, #20]
   12500:	mov	r6, r3
   12504:	ldr	r0, [r1]
   12508:	bl	1229c <getc@plt+0x17b0>
   1250c:	movw	r3, #32036	; 0x7d24
   12510:	movt	r3, #155	; 0x9b
   12514:	str	r0, [r3]
   12518:	movw	r4, #9176	; 0x23d8
   1251c:	movt	r4, #1
   12520:	mov	r1, r4
   12524:	mov	r0, #2
   12528:	bl	10a38 <__sysv_signal@plt>
   1252c:	mov	r1, r4
   12530:	mov	r0, #15
   12534:	bl	10a38 <__sysv_signal@plt>
   12538:	ldr	r7, [r5]
   1253c:	cmp	r7, #1
   12540:	beq	1256c <error@@Base+0x200>
   12544:	movle	r8, #0
   12548:	ble	12584 <error@@Base+0x218>
   1254c:	mov	r8, #0
   12550:	mov	sl, #1
   12554:	mov	r4, sl
   12558:	movw	r3, #16164	; 0x3f24
   1255c:	movt	r3, #1
   12560:	str	r3, [sp, #12]
   12564:	str	r6, [sp, #16]
   12568:	b	12628 <error@@Base+0x2bc>
   1256c:	movw	r3, #20636	; 0x509c
   12570:	movt	r3, #2
   12574:	ldrb	r3, [r3, #4]
   12578:	cmp	r3, #0
   1257c:	moveq	r8, #0
   12580:	bne	125a8 <error@@Base+0x23c>
   12584:	ldr	r3, [sp, #4]
   12588:	str	r8, [r3]
   1258c:	add	sp, sp, #28
   12590:	ldrd	r4, [sp]
   12594:	ldrd	r6, [sp, #8]
   12598:	ldrd	r8, [sp, #16]
   1259c:	ldrd	sl, [sp, #24]
   125a0:	add	sp, sp, #32
   125a4:	pop	{pc}		; (ldr pc, [sp], #4)
   125a8:	ldr	r0, [sp, #20]
   125ac:	bl	1231c <getc@plt+0x1830>
   125b0:	ldr	r0, [sp, #20]
   125b4:	bl	1231c <getc@plt+0x1830>
   125b8:	ldr	r0, [sp, #16]
   125bc:	b	126c0 <error@@Base+0x354>
   125c0:	ldr	r3, [r0, #8]
   125c4:	cmp	r3, #0
   125c8:	beq	1271c <error@@Base+0x3b0>
   125cc:	ldrb	r2, [r5, #2]
   125d0:	cmp	r2, #0
   125d4:	bne	1271c <error@@Base+0x3b0>
   125d8:	ldrb	r2, [r3]
   125dc:	cmp	r2, #0
   125e0:	bne	125f0 <error@@Base+0x284>
   125e4:	mov	r2, #1
   125e8:	strb	r2, [r3]
   125ec:	b	1260c <error@@Base+0x2a0>
   125f0:	mov	r1, r5
   125f4:	movw	r0, #16188	; 0x3f3c
   125f8:	movt	r0, #1
   125fc:	bl	12410 <error@@Base+0xa4>
   12600:	add	r3, r8, #1
   12604:	str	r5, [r9, r8, lsl #2]
   12608:	sxth	r8, r3
   1260c:	add	r4, r4, #1
   12610:	sxth	r4, r4
   12614:	mov	sl, r4
   12618:	ldr	r3, [sp, #4]
   1261c:	ldr	r7, [r3]
   12620:	cmp	r4, r7
   12624:	bge	12584 <error@@Base+0x218>
   12628:	lsl	r3, r4, #2
   1262c:	str	r3, [sp, #8]
   12630:	ldr	r5, [r9, r4, lsl #2]
   12634:	ldrb	r3, [r5]
   12638:	cmp	r3, #45	; 0x2d
   1263c:	bne	12600 <error@@Base+0x294>
   12640:	ldrb	fp, [r5, #1]
   12644:	cmp	fp, #0
   12648:	beq	12600 <error@@Base+0x294>
   1264c:	mov	r0, r5
   12650:	bl	10a74 <strlen@plt>
   12654:	mov	r2, r0
   12658:	mov	r1, r5
   1265c:	ldr	r0, [sp, #12]
   12660:	bl	10ad4 <strncmp@plt>
   12664:	cmp	r0, #0
   12668:	beq	125b0 <error@@Base+0x244>
   1266c:	add	sl, sl, #1
   12670:	cmp	sl, r7
   12674:	ldrlt	r3, [sp, #8]
   12678:	addlt	r3, r9, r3
   1267c:	ldrlt	r1, [r3, #4]
   12680:	movge	r1, #0
   12684:	cmp	r6, #0
   12688:	beq	1271c <error@@Base+0x3b0>
   1268c:	ldrb	r3, [r6]
   12690:	cmp	fp, r3
   12694:	cmpne	r3, #0
   12698:	beq	125b8 <error@@Base+0x24c>
   1269c:	mov	r2, #0
   126a0:	add	r2, r2, #1
   126a4:	sxth	r2, r2
   126a8:	add	r3, r2, r2, lsl #1
   126ac:	add	r0, r6, r3, lsl #2
   126b0:	ldrb	r3, [r6, r3, lsl #2]
   126b4:	cmp	fp, r3
   126b8:	cmpne	r3, #0
   126bc:	bne	126a0 <error@@Base+0x334>
   126c0:	cmp	r3, #0
   126c4:	beq	1271c <error@@Base+0x3b0>
   126c8:	ldr	r3, [r0, #4]
   126cc:	cmp	r3, #0
   126d0:	beq	125c0 <error@@Base+0x254>
   126d4:	ldrb	r2, [r5, #2]
   126d8:	cmp	r1, #0
   126dc:	cmpeq	r2, #0
   126e0:	beq	12710 <error@@Base+0x3a4>
   126e4:	ldr	r0, [r3]
   126e8:	cmp	r0, #0
   126ec:	bne	125f0 <error@@Base+0x284>
   126f0:	cmp	r2, #0
   126f4:	addne	r1, r5, #2
   126f8:	str	r1, [r3]
   126fc:	ldrb	r3, [r5, #2]
   12700:	cmp	r3, #0
   12704:	addeq	r4, r4, #1
   12708:	sxtheq	r4, r4
   1270c:	b	1260c <error@@Base+0x2a0>
   12710:	ldr	r3, [r0, #8]
   12714:	cmp	r3, #0
   12718:	bne	125d8 <error@@Base+0x26c>
   1271c:	mov	r1, r5
   12720:	movw	r0, #16172	; 0x3f2c
   12724:	movt	r0, #1
   12728:	bl	12410 <error@@Base+0xa4>
   1272c:	push	{lr}		; (str lr, [sp, #-4]!)
   12730:	sub	sp, sp, #12
   12734:	movw	r2, #32036	; 0x7d24
   12738:	movt	r2, #155	; 0x9b
   1273c:	movw	ip, #20648	; 0x50a8
   12740:	movt	ip, #2
   12744:	str	r1, [sp]
   12748:	mov	r3, r0
   1274c:	ldr	r2, [r2]
   12750:	movw	r1, #16104	; 0x3ee8
   12754:	movt	r1, #1
   12758:	ldr	r0, [ip]
   1275c:	bl	10a80 <fprintf@plt>
   12760:	add	sp, sp, #12
   12764:	pop	{pc}		; (ldr pc, [sp], #4)
   12768:	strd	r4, [sp, #-16]!
   1276c:	str	r6, [sp, #8]
   12770:	str	lr, [sp, #12]
   12774:	mov	r4, r0
   12778:	mov	r5, r2
   1277c:	uxtb	r6, r1
   12780:	mov	r1, #16
   12784:	mov	r0, #1
   12788:	bl	123ac <error@@Base+0x40>
   1278c:	mov	r1, r0
   12790:	strb	r6, [r0, #8]
   12794:	str	r5, [r0, #12]
   12798:	mov	r0, r4
   1279c:	bl	12ec8 <error@@Base+0xb5c>
   127a0:	ldrd	r4, [sp]
   127a4:	ldr	r6, [sp, #8]
   127a8:	add	sp, sp, #12
   127ac:	pop	{pc}		; (ldr pc, [sp], #4)
   127b0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   127b4:	strd	r6, [sp, #8]
   127b8:	strd	r8, [sp, #16]
   127bc:	strd	sl, [sp, #24]
   127c0:	str	lr, [sp, #32]
   127c4:	sub	sp, sp, #116	; 0x74
   127c8:	mov	r8, r0
   127cc:	ldrb	r3, [r2]
   127d0:	mov	r0, r1
   127d4:	clz	r1, r1
   127d8:	lsr	r1, r1, #5
   127dc:	cmp	r3, #0
   127e0:	moveq	r1, #0
   127e4:	cmp	r1, #0
   127e8:	bne	12858 <error@@Base+0x4ec>
   127ec:	mov	r4, r2
   127f0:	ldr	sl, [r8, #4]
   127f4:	movw	r1, #12824	; 0x3218
   127f8:	movt	r1, #1
   127fc:	bl	12454 <error@@Base+0xe8>
   12800:	str	r0, [sp]
   12804:	ldrb	r3, [r4]
   12808:	cmp	r3, #0
   1280c:	bne	1286c <error@@Base+0x500>
   12810:	ldrb	fp, [r4, #1]
   12814:	ldr	r7, [r4, #4]
   12818:	cmp	r7, #0
   1281c:	moveq	r7, #94	; 0x5e
   12820:	ldr	r0, [sp]
   12824:	bl	10aec <getc@plt>
   12828:	cmn	r0, #1
   1282c:	beq	129c4 <error@@Base+0x658>
   12830:	movw	r3, #19976	; 0x4e08
   12834:	movt	r3, #2
   12838:	ldrsb	r5, [r3, r0]
   1283c:	cmp	r5, #0
   12840:	ble	1290c <error@@Base+0x5a0>
   12844:	mov	r3, #0
   12848:	str	r3, [sp, #4]
   1284c:	movw	r9, #19976	; 0x4e08
   12850:	movt	r9, #2
   12854:	b	12960 <error@@Base+0x5f4>
   12858:	movw	r1, #16208	; 0x3f50
   1285c:	movt	r1, #1
   12860:	movw	r0, #16220	; 0x3f5c
   12864:	movt	r0, #1
   12868:	bl	12410 <error@@Base+0xa4>
   1286c:	mov	r2, r0
   12870:	mov	r1, #99	; 0x63
   12874:	add	r0, sp, #12
   12878:	bl	109b4 <fgets@plt>
   1287c:	cmp	r0, #0
   12880:	beq	128a0 <error@@Base+0x534>
   12884:	mov	r2, #51	; 0x33
   12888:	movw	r1, #16236	; 0x3f6c
   1288c:	movt	r1, #1
   12890:	add	r0, sp, #12
   12894:	bl	10ad4 <strncmp@plt>
   12898:	cmp	r0, #0
   1289c:	beq	128b4 <error@@Base+0x548>
   128a0:	ldr	r0, [sp]
   128a4:	bl	109d8 <rewind@plt>
   128a8:	mov	r3, #0
   128ac:	strb	r3, [r4, #11]
   128b0:	b	12810 <error@@Base+0x4a4>
   128b4:	mov	r5, #0
   128b8:	mov	r7, #99	; 0x63
   128bc:	movw	r6, #16292	; 0x3fa4
   128c0:	movt	r6, #1
   128c4:	ldr	r2, [sp]
   128c8:	mov	r1, r7
   128cc:	add	r0, sp, #12
   128d0:	bl	109b4 <fgets@plt>
   128d4:	cmp	r0, #0
   128d8:	beq	12904 <error@@Base+0x598>
   128dc:	mov	r1, r6
   128e0:	add	r0, sp, #12
   128e4:	bl	10978 <strcmp@plt>
   128e8:	cmp	r0, #0
   128ec:	addeq	r5, r5, #1
   128f0:	sxtheq	r5, r5
   128f4:	cmp	r5, #1
   128f8:	ble	128c4 <error@@Base+0x558>
   128fc:	mov	r3, #1
   12900:	b	128ac <error@@Base+0x540>
   12904:	mov	r3, #1
   12908:	b	128ac <error@@Base+0x540>
   1290c:	movw	r0, #16348	; 0x3fdc
   12910:	movt	r0, #1
   12914:	bl	1236c <error@@Base>
   12918:	movw	r0, #16372	; 0x3ff4
   1291c:	movt	r0, #1
   12920:	bl	1236c <error@@Base>
   12924:	bl	10abc <utf8proc_errmsg@plt>
   12928:	bl	1236c <error@@Base>
   1292c:	ldr	r2, [sp, #12]
   12930:	ldr	r1, [sp, #4]
   12934:	mov	r0, r8
   12938:	bl	12768 <error@@Base+0x3fc>
   1293c:	mov	r3, #0
   12940:	str	r3, [sp, #4]
   12944:	ldr	r0, [sp]
   12948:	bl	10aec <getc@plt>
   1294c:	cmn	r0, #1
   12950:	beq	129c4 <error@@Base+0x658>
   12954:	ldrsb	r5, [r9, r0]
   12958:	cmp	r5, #0
   1295c:	ble	1290c <error@@Base+0x5a0>
   12960:	strb	r0, [sp, #8]
   12964:	cmp	r5, #1
   12968:	ble	1298c <error@@Base+0x620>
   1296c:	sub	r6, r5, #1
   12970:	ldr	r3, [sp]
   12974:	mov	r2, r6
   12978:	mov	r1, #1
   1297c:	add	r0, sp, #9
   12980:	bl	10a14 <fread@plt>
   12984:	cmp	r6, r0
   12988:	bne	12918 <error@@Base+0x5ac>
   1298c:	add	r2, sp, #12
   12990:	mov	r1, #4
   12994:	add	r0, sp, #8
   12998:	bl	10a20 <utf8proc_iterate@plt>
   1299c:	cmp	r0, r5
   129a0:	bne	12924 <error@@Base+0x5b8>
   129a4:	cmp	fp, #0
   129a8:	beq	1292c <error@@Base+0x5c0>
   129ac:	ldr	r3, [sp, #12]
   129b0:	cmp	r7, r3
   129b4:	bne	1292c <error@@Base+0x5c0>
   129b8:	mov	r3, #1
   129bc:	str	r3, [sp, #4]
   129c0:	b	12944 <error@@Base+0x5d8>
   129c4:	ldr	r0, [sp]
   129c8:	bl	121f8 <getc@plt+0x170c>
   129cc:	ldrb	r3, [r4, #9]
   129d0:	cmp	r3, #0
   129d4:	beq	12b20 <error@@Base+0x7b4>
   129d8:	cmp	sl, #0
   129dc:	ldrne	r5, [sl, #4]
   129e0:	ldreq	r5, [r8]
   129e4:	cmp	r5, #0
   129e8:	beq	12b20 <error@@Base+0x7b4>
   129ec:	mov	r6, r5
   129f0:	mov	r9, #32
   129f4:	mov	r7, #0
   129f8:	b	12a2c <error@@Base+0x6c0>
   129fc:	cmp	fp, #160	; 0xa0
   12a00:	beq	12a1c <error@@Base+0x6b0>
   12a04:	ldrsh	r3, [r0]
   12a08:	sub	r3, r3, #23
   12a0c:	cmp	r3, #2
   12a10:	movhi	r3, #0
   12a14:	movls	r3, #1
   12a18:	b	12a5c <error@@Base+0x6f0>
   12a1c:	str	r9, [r6, #12]
   12a20:	ldr	r6, [r6, #4]
   12a24:	cmp	r6, #0
   12a28:	beq	12a68 <error@@Base+0x6fc>
   12a2c:	ldr	fp, [r6, #12]
   12a30:	mov	r0, fp
   12a34:	bl	109a8 <utf8proc_get_property@plt>
   12a38:	cmp	fp, #13
   12a3c:	bhi	129fc <error@@Base+0x690>
   12a40:	cmp	fp, #11
   12a44:	bcs	12a1c <error@@Base+0x6b0>
   12a48:	cmp	fp, #9
   12a4c:	beq	12a1c <error@@Base+0x6b0>
   12a50:	cmp	fp, #10
   12a54:	moveq	r3, r7
   12a58:	bne	12a04 <error@@Base+0x698>
   12a5c:	cmp	r3, #0
   12a60:	beq	12a20 <error@@Base+0x6b4>
   12a64:	b	12a1c <error@@Base+0x6b0>
   12a68:	mov	r7, #0
   12a6c:	b	12aa8 <error@@Base+0x73c>
   12a70:	eor	r2, r7, #1
   12a74:	cmp	r6, #0
   12a78:	moveq	r2, #1
   12a7c:	cmp	r2, #0
   12a80:	bne	12ad4 <error@@Base+0x768>
   12a84:	ldr	r2, [r6, #12]
   12a88:	cmp	r2, #10
   12a8c:	cmpne	r2, #32
   12a90:	beq	12ae8 <error@@Base+0x77c>
   12a94:	subs	r7, r3, #10
   12a98:	movne	r7, #1
   12a9c:	mov	r5, r6
   12aa0:	cmp	r6, #0
   12aa4:	beq	12b20 <error@@Base+0x7b4>
   12aa8:	ldr	r6, [r5, #4]
   12aac:	ldr	r3, [r5, #12]
   12ab0:	cmp	r3, #32
   12ab4:	beq	12a70 <error@@Base+0x704>
   12ab8:	eor	r2, r7, #1
   12abc:	cmp	r3, #10
   12ac0:	movne	r2, #0
   12ac4:	andeq	r2, r2, #1
   12ac8:	cmp	r2, #0
   12acc:	beq	12a94 <error@@Base+0x728>
   12ad0:	b	12af4 <error@@Base+0x788>
   12ad4:	cmp	r6, #0
   12ad8:	movne	r3, r7
   12adc:	moveq	r3, #0
   12ae0:	cmp	r3, #0
   12ae4:	beq	12af4 <error@@Base+0x788>
   12ae8:	ldr	r3, [r6, #12]
   12aec:	cmp	r3, #32
   12af0:	beq	12b0c <error@@Base+0x7a0>
   12af4:	mov	r1, r5
   12af8:	mov	r0, r8
   12afc:	bl	12f30 <error@@Base+0xbc4>
   12b00:	mov	r0, r5
   12b04:	bl	1099c <free@plt>
   12b08:	b	12a9c <error@@Base+0x730>
   12b0c:	ldrb	r3, [r6, #8]
   12b10:	ldrb	r2, [r5, #8]
   12b14:	orr	r3, r3, r2
   12b18:	strb	r3, [r6, #8]
   12b1c:	b	12af4 <error@@Base+0x788>
   12b20:	ldrb	r3, [r4, #10]
   12b24:	cmp	r3, #0
   12b28:	beq	12b58 <error@@Base+0x7ec>
   12b2c:	cmp	sl, #0
   12b30:	ldrne	r4, [sl, #4]
   12b34:	ldreq	r4, [r8]
   12b38:	cmp	r4, #0
   12b3c:	beq	12b58 <error@@Base+0x7ec>
   12b40:	ldr	r0, [r4, #12]
   12b44:	bl	109f0 <utf8proc_tolower@plt>
   12b48:	str	r0, [r4, #12]
   12b4c:	ldr	r4, [r4, #4]
   12b50:	cmp	r4, #0
   12b54:	bne	12b40 <error@@Base+0x7d4>
   12b58:	add	sp, sp, #116	; 0x74
   12b5c:	ldrd	r4, [sp]
   12b60:	ldrd	r6, [sp, #8]
   12b64:	ldrd	r8, [sp, #16]
   12b68:	ldrd	sl, [sp, #24]
   12b6c:	add	sp, sp, #32
   12b70:	pop	{pc}		; (ldr pc, [sp], #4)
   12b74:	str	r4, [sp, #-8]!
   12b78:	str	lr, [sp, #4]
   12b7c:	bl	109c0 <utf8proc_encode_char@plt>
   12b80:	cmp	r0, #0
   12b84:	ble	12b98 <error@@Base+0x82c>
   12b88:	sxtb	r0, r0
   12b8c:	ldr	r4, [sp]
   12b90:	add	sp, sp, #4
   12b94:	pop	{pc}		; (ldr pc, [sp], #4)
   12b98:	movw	r0, #16396	; 0x400c
   12b9c:	movt	r0, #1
   12ba0:	bl	1236c <error@@Base>
   12ba4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12ba8:	strd	r6, [sp, #8]
   12bac:	str	r8, [sp, #16]
   12bb0:	str	lr, [sp, #20]
   12bb4:	mov	r4, r1
   12bb8:	mov	r6, r2
   12bbc:	uxtb	r0, r0
   12bc0:	uxtb	r7, r3
   12bc4:	cmp	r0, #0
   12bc8:	moveq	r5, #0
   12bcc:	bne	12c0c <error@@Base+0x8a0>
   12bd0:	cmp	r4, #10
   12bd4:	bne	12c20 <error@@Base+0x8b4>
   12bd8:	movw	r1, #16420	; 0x4024
   12bdc:	movt	r1, #1
   12be0:	movw	r3, #12768	; 0x31e0
   12be4:	movt	r3, #1
   12be8:	cmp	r7, #0
   12bec:	moveq	r1, r3
   12bf0:	add	r0, r6, r5
   12bf4:	bl	10ab0 <sprintf@plt>
   12bf8:	ldrd	r4, [sp]
   12bfc:	ldrd	r6, [sp, #8]
   12c00:	ldr	r8, [sp, #16]
   12c04:	add	sp, sp, #20
   12c08:	pop	{pc}		; (ldr pc, [sp], #4)
   12c0c:	mov	r1, r2
   12c10:	mov	r0, #94	; 0x5e
   12c14:	bl	12b74 <error@@Base+0x808>
   12c18:	sxth	r5, r0
   12c1c:	b	12bd0 <error@@Base+0x864>
   12c20:	mov	r0, r4
   12c24:	bl	109a8 <utf8proc_get_property@plt>
   12c28:	cmp	r4, #32
   12c2c:	beq	12c4c <error@@Base+0x8e0>
   12c30:	ldrsh	r3, [r0]
   12c34:	cmp	r3, #0
   12c38:	ble	12c98 <error@@Base+0x92c>
   12c3c:	cmp	r3, #22
   12c40:	ble	12c4c <error@@Base+0x8e0>
   12c44:	cmp	r3, #29
   12c48:	bne	12c98 <error@@Base+0x92c>
   12c4c:	mov	r0, r4
   12c50:	bl	10a68 <utf8proc_category@plt>
   12c54:	sub	r0, r0, #6
   12c58:	cmp	r0, #2
   12c5c:	bls	12c80 <error@@Base+0x914>
   12c60:	add	r1, r6, r5
   12c64:	mov	r0, r4
   12c68:	bl	12b74 <error@@Base+0x808>
   12c6c:	add	r0, r0, r5
   12c70:	sxth	r0, r0
   12c74:	mov	r3, #0
   12c78:	strb	r3, [r6, r0]
   12c7c:	b	12bf8 <error@@Base+0x88c>
   12c80:	add	r1, r6, r5
   12c84:	movw	r0, #9676	; 0x25cc
   12c88:	bl	12b74 <error@@Base+0x808>
   12c8c:	add	r5, r0, r5
   12c90:	sxth	r5, r5
   12c94:	b	12c60 <error@@Base+0x8f4>
   12c98:	cmp	r4, #255	; 0xff
   12c9c:	mov	r2, r4
   12ca0:	movwls	r1, #16428	; 0x402c
   12ca4:	movtls	r1, #1
   12ca8:	movwhi	r1, #16436	; 0x4034
   12cac:	movthi	r1, #1
   12cb0:	add	r0, r6, r5
   12cb4:	bl	10ab0 <sprintf@plt>
   12cb8:	b	12bf8 <error@@Base+0x88c>
   12cbc:	strd	r4, [sp, #-20]!	; 0xffffffec
   12cc0:	strd	r6, [sp, #8]
   12cc4:	str	lr, [sp, #16]
   12cc8:	sub	sp, sp, #20
   12ccc:	mov	r7, r0
   12cd0:	mov	r0, r1
   12cd4:	mov	r6, r2
   12cd8:	movw	r1, #12940	; 0x328c
   12cdc:	movt	r1, #1
   12ce0:	bl	12454 <error@@Base+0xe8>
   12ce4:	mov	r5, r0
   12ce8:	cmp	r6, #0
   12cec:	beq	12d40 <error@@Base+0x9d4>
   12cf0:	mov	r3, r0
   12cf4:	mov	r2, #55	; 0x37
   12cf8:	mov	r1, #1
   12cfc:	movw	r0, #16236	; 0x3f6c
   12d00:	movt	r0, #1
   12d04:	bl	10a08 <fwrite@plt>
   12d08:	movw	r4, #16292	; 0x3fa4
   12d0c:	movt	r4, #1
   12d10:	mov	r3, r5
   12d14:	mov	r2, #55	; 0x37
   12d18:	mov	r1, #1
   12d1c:	mov	r0, r4
   12d20:	bl	10a08 <fwrite@plt>
   12d24:	mov	r0, r5
   12d28:	blx	r6
   12d2c:	mov	r3, r5
   12d30:	mov	r2, #55	; 0x37
   12d34:	mov	r1, #1
   12d38:	mov	r0, r4
   12d3c:	bl	10a08 <fwrite@plt>
   12d40:	ldr	r4, [r7]
   12d44:	cmp	r4, #0
   12d48:	beq	12d7c <error@@Base+0xa10>
   12d4c:	mov	r6, #0
   12d50:	mov	r3, r6
   12d54:	add	r2, sp, #4
   12d58:	ldr	r1, [r4, #12]
   12d5c:	ldrb	r0, [r4, #8]
   12d60:	bl	12ba4 <error@@Base+0x838>
   12d64:	mov	r1, r5
   12d68:	add	r0, sp, #4
   12d6c:	bl	10ac8 <fputs@plt>
   12d70:	ldr	r4, [r4, #4]
   12d74:	cmp	r4, #0
   12d78:	bne	12d50 <error@@Base+0x9e4>
   12d7c:	mov	r0, r5
   12d80:	bl	121f8 <getc@plt+0x170c>
   12d84:	add	sp, sp, #20
   12d88:	ldrd	r4, [sp]
   12d8c:	ldrd	r6, [sp, #8]
   12d90:	add	sp, sp, #16
   12d94:	pop	{pc}		; (ldr pc, [sp], #4)
   12d98:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12d9c:	strd	r6, [sp, #8]
   12da0:	str	r8, [sp, #16]
   12da4:	str	lr, [sp, #20]
   12da8:	sub	sp, sp, #8
   12dac:	mov	r3, #0
   12db0:	str	r3, [sp, #4]
   12db4:	ldrb	r3, [r1]
   12db8:	cmp	r3, #0
   12dbc:	beq	12e0c <error@@Base+0xaa0>
   12dc0:	mov	r6, r0
   12dc4:	mov	r4, r1
   12dc8:	mvn	r5, #0
   12dcc:	mov	r7, #0
   12dd0:	add	r2, sp, #4
   12dd4:	mov	r1, r5
   12dd8:	mov	r0, r4
   12ddc:	bl	10a20 <utf8proc_iterate@plt>
   12de0:	subs	r8, r0, #0
   12de4:	ble	12e14 <error@@Base+0xaa8>
   12de8:	ldr	r2, [sp, #4]
   12dec:	mov	r1, r7
   12df0:	mov	r0, r6
   12df4:	bl	12768 <error@@Base+0x3fc>
   12df8:	ldrb	r3, [r4, r8]!
   12dfc:	cmp	r3, #0
   12e00:	bne	12dd0 <error@@Base+0xa64>
   12e04:	mov	r0, #1
   12e08:	b	12e18 <error@@Base+0xaac>
   12e0c:	mov	r0, #1
   12e10:	b	12e18 <error@@Base+0xaac>
   12e14:	mov	r0, #0
   12e18:	add	sp, sp, #8
   12e1c:	ldrd	r4, [sp]
   12e20:	ldrd	r6, [sp, #8]
   12e24:	ldr	r8, [sp, #16]
   12e28:	add	sp, sp, #20
   12e2c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e30:	str	r4, [sp, #-8]!
   12e34:	str	lr, [sp, #4]
   12e38:	mov	r4, r0
   12e3c:	str	r1, [r2]
   12e40:	str	r3, [r2, #4]
   12e44:	cmp	r1, #0
   12e48:	strne	r2, [r1, #4]
   12e4c:	streq	r2, [r0]
   12e50:	cmp	r3, #0
   12e54:	strne	r2, [r3]
   12e58:	streq	r2, [r0, #4]
   12e5c:	ldr	r0, [r0, #8]
   12e60:	cmp	r0, #0
   12e64:	beq	12e74 <error@@Base+0xb08>
   12e68:	bl	1099c <free@plt>
   12e6c:	mov	r3, #0
   12e70:	str	r3, [r4, #8]
   12e74:	ldr	r3, [r4, #12]
   12e78:	add	r3, r3, #1
   12e7c:	str	r3, [r4, #12]
   12e80:	ldr	r4, [sp]
   12e84:	add	sp, sp, #4
   12e88:	pop	{pc}		; (ldr pc, [sp], #4)
   12e8c:	mov	r3, #0
   12e90:	str	r3, [r0, #4]
   12e94:	str	r3, [r0]
   12e98:	str	r3, [r0, #8]
   12e9c:	str	r3, [r0, #12]
   12ea0:	bx	lr
   12ea4:	str	r4, [sp, #-8]!
   12ea8:	str	lr, [sp, #4]
   12eac:	ldr	r3, [r0]
   12eb0:	mov	r2, r1
   12eb4:	mov	r1, #0
   12eb8:	bl	12e30 <error@@Base+0xac4>
   12ebc:	ldr	r4, [sp]
   12ec0:	add	sp, sp, #4
   12ec4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ec8:	str	r4, [sp, #-8]!
   12ecc:	str	lr, [sp, #4]
   12ed0:	mov	r3, #0
   12ed4:	mov	r2, r1
   12ed8:	ldr	r1, [r0, #4]
   12edc:	bl	12e30 <error@@Base+0xac4>
   12ee0:	ldr	r4, [sp]
   12ee4:	add	sp, sp, #4
   12ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   12eec:	str	r4, [sp, #-8]!
   12ef0:	str	lr, [sp, #4]
   12ef4:	mov	ip, r2
   12ef8:	mov	r3, r2
   12efc:	mov	r2, r1
   12f00:	ldr	r1, [ip]
   12f04:	bl	12e30 <error@@Base+0xac4>
   12f08:	ldr	r4, [sp]
   12f0c:	add	sp, sp, #4
   12f10:	pop	{pc}		; (ldr pc, [sp], #4)
   12f14:	str	r4, [sp, #-8]!
   12f18:	str	lr, [sp, #4]
   12f1c:	ldr	r3, [r1, #4]
   12f20:	bl	12e30 <error@@Base+0xac4>
   12f24:	ldr	r4, [sp]
   12f28:	add	sp, sp, #4
   12f2c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f30:	str	r4, [sp, #-8]!
   12f34:	str	lr, [sp, #4]
   12f38:	mov	r4, r0
   12f3c:	ldr	r3, [r1]
   12f40:	cmp	r3, #0
   12f44:	ldrne	r2, [r1, #4]
   12f48:	strne	r2, [r3, #4]
   12f4c:	ldreq	r3, [r1, #4]
   12f50:	streq	r3, [r0]
   12f54:	ldr	r3, [r1, #4]
   12f58:	cmp	r3, #0
   12f5c:	ldrne	r2, [r1]
   12f60:	strne	r2, [r3]
   12f64:	ldreq	r3, [r1]
   12f68:	streq	r3, [r0, #4]
   12f6c:	mov	r3, #0
   12f70:	str	r3, [r1, #4]
   12f74:	str	r3, [r1]
   12f78:	ldr	r0, [r0, #8]
   12f7c:	cmp	r0, r3
   12f80:	beq	12f90 <error@@Base+0xc24>
   12f84:	bl	1099c <free@plt>
   12f88:	mov	r3, #0
   12f8c:	str	r3, [r4, #8]
   12f90:	ldr	r3, [r4, #12]
   12f94:	sub	r3, r3, #1
   12f98:	str	r3, [r4, #12]
   12f9c:	ldr	r4, [sp]
   12fa0:	add	sp, sp, #4
   12fa4:	pop	{pc}		; (ldr pc, [sp], #4)
   12fa8:	ldr	r3, [r0, #8]
   12fac:	cmp	r3, #0
   12fb0:	bxne	lr
   12fb4:	ldr	r3, [r0, #12]
   12fb8:	cmp	r3, #0
   12fbc:	bxeq	lr
   12fc0:	str	r4, [sp, #-8]!
   12fc4:	str	lr, [sp, #4]
   12fc8:	mov	r4, r0
   12fcc:	mov	r1, #4
   12fd0:	mov	r0, r3
   12fd4:	bl	123ac <error@@Base+0x40>
   12fd8:	str	r0, [r4, #8]
   12fdc:	ldr	r3, [r4]
   12fe0:	cmp	r3, #0
   12fe4:	beq	13004 <error@@Base+0xc98>
   12fe8:	mov	r2, #0
   12fec:	ldr	r1, [r4, #8]
   12ff0:	str	r3, [r1, r2]
   12ff4:	ldr	r3, [r3, #4]
   12ff8:	add	r2, r2, #4
   12ffc:	cmp	r3, #0
   13000:	bne	12fec <error@@Base+0xc80>
   13004:	ldr	r4, [sp]
   13008:	add	sp, sp, #4
   1300c:	pop	{pc}		; (ldr pc, [sp], #4)
   13010:	strd	r4, [sp, #-16]!
   13014:	str	r6, [sp, #8]
   13018:	str	lr, [sp, #12]
   1301c:	mov	r5, r0
   13020:	mov	r6, r1
   13024:	ldr	r4, [r0]
   13028:	cmp	r4, #0
   1302c:	beq	13050 <error@@Base+0xce4>
   13030:	mov	r1, r4
   13034:	mov	r0, r5
   13038:	bl	12f30 <error@@Base+0xbc4>
   1303c:	mov	r0, r4
   13040:	blx	r6
   13044:	ldr	r4, [r5]
   13048:	cmp	r4, #0
   1304c:	bne	13030 <error@@Base+0xcc4>
   13050:	ldrd	r4, [sp]
   13054:	ldr	r6, [sp, #8]
   13058:	add	sp, sp, #12
   1305c:	pop	{pc}		; (ldr pc, [sp], #4)
   13060:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13064:	mov	r7, r0
   13068:	ldr	r6, [pc, #72]	; 130b8 <error@@Base+0xd4c>
   1306c:	ldr	r5, [pc, #72]	; 130bc <error@@Base+0xd50>
   13070:	add	r6, pc, r6
   13074:	add	r5, pc, r5
   13078:	sub	r6, r6, r5
   1307c:	mov	r8, r1
   13080:	mov	r9, r2
   13084:	bl	1094c <calloc@plt-0x20>
   13088:	asrs	r6, r6, #2
   1308c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13090:	mov	r4, #0
   13094:	add	r4, r4, #1
   13098:	ldr	r3, [r5], #4
   1309c:	mov	r2, r9
   130a0:	mov	r1, r8
   130a4:	mov	r0, r7
   130a8:	blx	r3
   130ac:	cmp	r6, r4
   130b0:	bne	13094 <error@@Base+0xd28>
   130b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   130b8:	andeq	r1, r1, ip, lsl #27
   130bc:	andeq	r1, r1, r4, lsl #27
   130c0:	bx	lr

Disassembly of section .fini:

000130c4 <.fini>:
   130c4:	push	{r3, lr}
   130c8:	pop	{r3, pc}
