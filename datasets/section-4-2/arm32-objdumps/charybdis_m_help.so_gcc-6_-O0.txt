
../repos/charybdis/modules/.libs/m_help.so:     file format elf32-littlearm


Disassembly of section .init:

000004c4 <_init>:
 4c4:	push	{r3, lr}
 4c8:	bl	514 <call_weak_fn>
 4cc:	pop	{r3, pc}

Disassembly of section .plt:

000004d0 <.plt>:
 4d0:	push	{lr}		; (str lr, [sp, #-4]!)
 4d4:	ldr	lr, [pc, #4]	; 4e0 <.plt+0x10>
 4d8:	add	lr, pc, lr
 4dc:	ldr	pc, [lr, #8]!
 4e0:	.word	0x00010b20

000004e4 <__cxa_finalize@plt>:
 4e4:	add	ip, pc, #0, 12
 4e8:	add	ip, ip, #16, 20	; 0x10000
 4ec:	ldr	pc, [ip, #2848]!	; 0xb20

000004f0 <sendto_one@plt>:
 4f0:	add	ip, pc, #0, 12
 4f4:	add	ip, ip, #16, 20	; 0x10000
 4f8:	ldr	pc, [ip, #2840]!	; 0xb18

000004fc <__gmon_start__@plt>:
 4fc:	add	ip, pc, #0, 12
 500:	add	ip, ip, #16, 20	; 0x10000
 504:	ldr	pc, [ip, #2832]!	; 0xb10

00000508 <rb_dictionary_retrieve@plt>:
 508:	add	ip, pc, #0, 12
 50c:	add	ip, ip, #16, 20	; 0x10000
 510:	ldr	pc, [ip, #2824]!	; 0xb08

Disassembly of section .text:

00000514 <call_weak_fn>:
 514:	ldr	r3, [pc, #20]	; 530 <call_weak_fn+0x1c>
 518:	ldr	r2, [pc, #20]	; 534 <call_weak_fn+0x20>
 51c:	add	r3, pc, r3
 520:	ldr	r2, [r3, r2]
 524:	cmp	r2, #0
 528:	bxeq	lr
 52c:	b	4fc <__gmon_start__@plt>
 530:	.word	0x00010adc
 534:	.word	0x00000028

00000538 <deregister_tm_clones>:
 538:	ldr	r3, [pc, #52]	; 574 <deregister_tm_clones+0x3c>
 53c:	ldr	r0, [pc, #52]	; 578 <deregister_tm_clones+0x40>
 540:	add	r3, pc, r3
 544:	add	r0, pc, r0
 548:	add	r3, r3, #3
 54c:	sub	r3, r3, r0
 550:	cmp	r3, #6
 554:	ldr	r3, [pc, #32]	; 57c <deregister_tm_clones+0x44>
 558:	add	r3, pc, r3
 55c:	bxls	lr
 560:	ldr	r2, [pc, #24]	; 580 <deregister_tm_clones+0x48>
 564:	ldr	r3, [r3, r2]
 568:	cmp	r3, #0
 56c:	bxeq	lr
 570:	bx	r3
 574:	.word	0x00010bb4
 578:	.word	0x00010bb0
 57c:	.word	0x00010aa0
 580:	.word	0x00000024

00000584 <register_tm_clones>:
 584:	ldr	r1, [pc, #56]	; 5c4 <register_tm_clones+0x40>
 588:	ldr	r0, [pc, #56]	; 5c8 <register_tm_clones+0x44>
 58c:	add	r1, pc, r1
 590:	add	r0, pc, r0
 594:	sub	r1, r1, r0
 598:	ldr	r3, [pc, #44]	; 5cc <register_tm_clones+0x48>
 59c:	asr	r1, r1, #2
 5a0:	add	r3, pc, r3
 5a4:	add	r1, r1, r1, lsr #31
 5a8:	asrs	r1, r1, #1
 5ac:	bxeq	lr
 5b0:	ldr	r2, [pc, #24]	; 5d0 <register_tm_clones+0x4c>
 5b4:	ldr	r3, [r3, r2]
 5b8:	cmp	r3, #0
 5bc:	bxeq	lr
 5c0:	bx	r3
 5c4:	.word	0x00010b68
 5c8:	.word	0x00010b64
 5cc:	.word	0x00010a58
 5d0:	.word	0x00000030

000005d4 <__do_global_dtors_aux>:
 5d4:	ldr	r3, [pc, #76]	; 628 <__do_global_dtors_aux+0x54>
 5d8:	ldr	r2, [pc, #76]	; 62c <__do_global_dtors_aux+0x58>
 5dc:	add	r3, pc, r3
 5e0:	add	r2, pc, r2
 5e4:	ldrb	r3, [r3]
 5e8:	cmp	r3, #0
 5ec:	bxne	lr
 5f0:	ldr	r3, [pc, #56]	; 630 <__do_global_dtors_aux+0x5c>
 5f4:	push	{r4, lr}
 5f8:	ldr	r3, [r2, r3]
 5fc:	cmp	r3, #0
 600:	beq	610 <__do_global_dtors_aux+0x3c>
 604:	ldr	r3, [pc, #40]	; 634 <__do_global_dtors_aux+0x60>
 608:	ldr	r0, [pc, r3]
 60c:	bl	4e4 <__cxa_finalize@plt>
 610:	bl	538 <deregister_tm_clones>
 614:	ldr	r3, [pc, #28]	; 638 <__do_global_dtors_aux+0x64>
 618:	mov	r2, #1
 61c:	add	r3, pc, r3
 620:	strb	r2, [r3]
 624:	pop	{r4, pc}
 628:	.word	0x00010b18
 62c:	.word	0x00010a18
 630:	.word	0x00000020
 634:	.word	0x00010a2c
 638:	.word	0x00010ad8

0000063c <frame_dummy>:
 63c:	ldr	r0, [pc, #56]	; 67c <frame_dummy+0x40>
 640:	ldr	r3, [pc, #56]	; 680 <frame_dummy+0x44>
 644:	add	r0, pc, r0
 648:	ldr	r2, [r0]
 64c:	add	r3, pc, r3
 650:	cmp	r2, #0
 654:	bne	65c <frame_dummy+0x20>
 658:	b	584 <register_tm_clones>
 65c:	ldr	r2, [pc, #32]	; 684 <frame_dummy+0x48>
 660:	ldr	r3, [r3, r2]
 664:	cmp	r3, #0
 668:	beq	658 <frame_dummy+0x1c>
 66c:	push	{r4, lr}
 670:	blx	r3
 674:	pop	{r4, lr}
 678:	b	584 <register_tm_clones>
 67c:	.word	0x000108b0
 680:	.word	0x000109ac
 684:	.word	0x0000002c

00000688 <m_help>:
 688:	push	{fp, lr}
 68c:	add	fp, sp, #4
 690:	sub	sp, sp, #16
 694:	str	r0, [fp, #-8]
 698:	str	r1, [fp, #-12]
 69c:	str	r2, [fp, #-16]
 6a0:	str	r3, [fp, #-20]	; 0xffffffec
 6a4:	ldr	r3, [fp, #-20]	; 0xffffffec
 6a8:	cmp	r3, #1
 6ac:	ble	6bc <m_help+0x34>
 6b0:	ldr	r3, [fp, #4]
 6b4:	ldr	r3, [r3, #4]
 6b8:	b	6c0 <m_help+0x38>
 6bc:	mov	r3, #0
 6c0:	mov	r2, r3
 6c4:	mov	r1, #1
 6c8:	ldr	r0, [fp, #-16]
 6cc:	bl	784 <dohelp>
 6d0:	nop			; (mov r0, r0)
 6d4:	sub	sp, fp, #4
 6d8:	pop	{fp, pc}

000006dc <mo_help>:
 6dc:	push	{fp, lr}
 6e0:	add	fp, sp, #4
 6e4:	sub	sp, sp, #16
 6e8:	str	r0, [fp, #-8]
 6ec:	str	r1, [fp, #-12]
 6f0:	str	r2, [fp, #-16]
 6f4:	str	r3, [fp, #-20]	; 0xffffffec
 6f8:	ldr	r3, [fp, #-20]	; 0xffffffec
 6fc:	cmp	r3, #1
 700:	ble	710 <mo_help+0x34>
 704:	ldr	r3, [fp, #4]
 708:	ldr	r3, [r3, #4]
 70c:	b	714 <mo_help+0x38>
 710:	mov	r3, #0
 714:	mov	r2, r3
 718:	mov	r1, #2
 71c:	ldr	r0, [fp, #-16]
 720:	bl	784 <dohelp>
 724:	nop			; (mov r0, r0)
 728:	sub	sp, fp, #4
 72c:	pop	{fp, pc}

00000730 <mo_uhelp>:
 730:	push	{fp, lr}
 734:	add	fp, sp, #4
 738:	sub	sp, sp, #16
 73c:	str	r0, [fp, #-8]
 740:	str	r1, [fp, #-12]
 744:	str	r2, [fp, #-16]
 748:	str	r3, [fp, #-20]	; 0xffffffec
 74c:	ldr	r3, [fp, #-20]	; 0xffffffec
 750:	cmp	r3, #1
 754:	ble	764 <mo_uhelp+0x34>
 758:	ldr	r3, [fp, #4]
 75c:	ldr	r3, [r3, #4]
 760:	b	768 <mo_uhelp+0x38>
 764:	mov	r3, #0
 768:	mov	r2, r3
 76c:	mov	r1, #1
 770:	ldr	r0, [fp, #-16]
 774:	bl	784 <dohelp>
 778:	nop			; (mov r0, r0)
 77c:	sub	sp, fp, #4
 780:	pop	{fp, pc}

00000784 <dohelp>:
 784:	push	{r4, fp, lr}
 788:	add	fp, sp, #8
 78c:	sub	sp, sp, #44	; 0x2c
 790:	str	r0, [fp, #-32]	; 0xffffffe0
 794:	str	r1, [fp, #-36]	; 0xffffffdc
 798:	str	r2, [fp, #-40]	; 0xffffffd8
 79c:	ldr	r4, [pc, #440]	; 95c <dohelp+0x1d8>
 7a0:	add	r4, pc, r4
 7a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
 7a8:	cmp	r3, #0
 7ac:	beq	7c0 <dohelp+0x3c>
 7b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
 7b4:	ldrb	r3, [r3]
 7b8:	cmp	r3, #0
 7bc:	bne	7cc <dohelp+0x48>
 7c0:	ldr	r3, [pc, #408]	; 960 <dohelp+0x1dc>
 7c4:	add	r3, pc, r3
 7c8:	str	r3, [fp, #-40]	; 0xffffffd8
 7cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
 7d0:	and	r3, r3, #2
 7d4:	cmp	r3, #0
 7d8:	beq	7ec <dohelp+0x68>
 7dc:	ldr	r3, [pc, #384]	; 964 <dohelp+0x1e0>
 7e0:	ldr	r3, [r4, r3]
 7e4:	ldr	r3, [r3]
 7e8:	b	7f8 <dohelp+0x74>
 7ec:	ldr	r3, [pc, #372]	; 968 <dohelp+0x1e4>
 7f0:	ldr	r3, [r4, r3]
 7f4:	ldr	r3, [r3]
 7f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
 7fc:	mov	r0, r3
 800:	bl	508 <rb_dictionary_retrieve@plt>
 804:	str	r0, [fp, #-20]	; 0xffffffec
 808:	ldr	r3, [fp, #-20]	; 0xffffffec
 80c:	cmp	r3, #0
 810:	beq	82c <dohelp+0xa8>
 814:	ldr	r3, [fp, #-20]	; 0xffffffec
 818:	ldr	r2, [r3, #44]	; 0x2c
 81c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 820:	and	r3, r3, r2
 824:	cmp	r3, #0
 828:	bne	860 <dohelp+0xdc>
 82c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 830:	add	r2, r3, #88	; 0x58
 834:	ldr	r3, [fp, #-40]	; 0xffffffd8
 838:	str	r3, [sp]
 83c:	mov	r3, r2
 840:	ldr	r2, [pc, #292]	; 96c <dohelp+0x1e8>
 844:	ldr	r2, [r4, r2]
 848:	add	r2, r2, #88	; 0x58
 84c:	ldr	r1, [pc, #284]	; 970 <dohelp+0x1ec>
 850:	add	r1, pc, r1
 854:	ldr	r0, [fp, #-32]	; 0xffffffe0
 858:	bl	4f0 <sendto_one@plt>
 85c:	b	954 <dohelp+0x1d0>
 860:	ldr	r3, [fp, #-20]	; 0xffffffec
 864:	ldr	r3, [r3, #32]
 868:	str	r3, [fp, #-24]	; 0xffffffe8
 86c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 870:	ldr	r3, [r3]
 874:	str	r3, [fp, #-28]	; 0xffffffe4
 878:	ldr	r3, [fp, #-32]	; 0xffffffe0
 87c:	add	r2, r3, #88	; 0x58
 880:	ldr	r3, [fp, #-28]	; 0xffffffe4
 884:	ldr	r3, [r3]
 888:	str	r3, [sp, #4]
 88c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 890:	str	r3, [sp]
 894:	mov	r3, r2
 898:	ldr	r2, [pc, #204]	; 96c <dohelp+0x1e8>
 89c:	ldr	r2, [r4, r2]
 8a0:	add	r2, r2, #88	; 0x58
 8a4:	ldr	r1, [pc, #200]	; 974 <dohelp+0x1f0>
 8a8:	add	r1, pc, r1
 8ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
 8b0:	bl	4f0 <sendto_one@plt>
 8b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 8b8:	ldr	r3, [r3, #8]
 8bc:	str	r3, [fp, #-16]
 8c0:	b	918 <dohelp+0x194>
 8c4:	ldr	r3, [fp, #-16]
 8c8:	ldr	r3, [r3]
 8cc:	str	r3, [fp, #-28]	; 0xffffffe4
 8d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 8d4:	add	r2, r3, #88	; 0x58
 8d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 8dc:	ldr	r3, [r3]
 8e0:	str	r3, [sp, #4]
 8e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
 8e8:	str	r3, [sp]
 8ec:	mov	r3, r2
 8f0:	ldr	r2, [pc, #116]	; 96c <dohelp+0x1e8>
 8f4:	ldr	r2, [r4, r2]
 8f8:	add	r2, r2, #88	; 0x58
 8fc:	ldr	r1, [pc, #116]	; 978 <dohelp+0x1f4>
 900:	add	r1, pc, r1
 904:	ldr	r0, [fp, #-32]	; 0xffffffe0
 908:	bl	4f0 <sendto_one@plt>
 90c:	ldr	r3, [fp, #-16]
 910:	ldr	r3, [r3, #8]
 914:	str	r3, [fp, #-16]
 918:	ldr	r3, [fp, #-16]
 91c:	cmp	r3, #0
 920:	bne	8c4 <dohelp+0x140>
 924:	ldr	r3, [fp, #-32]	; 0xffffffe0
 928:	add	r2, r3, #88	; 0x58
 92c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 930:	str	r3, [sp]
 934:	mov	r3, r2
 938:	ldr	r2, [pc, #44]	; 96c <dohelp+0x1e8>
 93c:	ldr	r2, [r4, r2]
 940:	add	r2, r2, #88	; 0x58
 944:	ldr	r1, [pc, #48]	; 97c <dohelp+0x1f8>
 948:	add	r1, pc, r1
 94c:	ldr	r0, [fp, #-32]	; 0xffffffe0
 950:	bl	4f0 <sendto_one@plt>
 954:	sub	sp, fp, #8
 958:	pop	{r4, fp, pc}
 95c:	.word	0x00010858
 960:	.word	0x00000278
 964:	.word	0x00000034
 968:	.word	0x0000001c
 96c:	.word	0x00000038
 970:	.word	0x00000184
 974:	.word	0x0000014c
 978:	.word	0x00000108
 97c:	.word	0x000000d4

Disassembly of section .fini:

00000980 <_fini>:
 980:	push	{r3, lr}
 984:	pop	{r3, pc}
