
../repos/charybdis/extensions/.libs/override.so:     file format elf32-littlearm


Disassembly of section .init:

00000718 <_init>:
 718:	push	{r3, lr}
 71c:	bl	804 <call_weak_fn>
 720:	pop	{r3, pc}

Disassembly of section .plt:

00000724 <.plt>:
 724:	push	{lr}		; (str lr, [sp, #-4]!)
 728:	ldr	lr, [pc, #4]	; 734 <.plt+0x10>
 72c:	add	lr, pc, lr
 730:	ldr	pc, [lr, #8]!
 734:	.word	0x000118cc

00000738 <calloc@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2252]!	; 0x8cc

00000744 <rb_current_time@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2244]!	; 0x8c4

00000750 <rb_event_add@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2236]!	; 0x8bc

0000075c <__cxa_finalize@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2228]!	; 0x8b4

00000768 <rb_event_delete@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2220]!	; 0x8ac

00000774 <free@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2212]!	; 0x8a4

00000780 <rb_outofmemory@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2204]!	; 0x89c

0000078c <user_mode@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2196]!	; 0x894

00000798 <sendto_realops_snomask@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2188]!	; 0x88c

000007a4 <find_umode_slot@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2180]!	; 0x884

000007b0 <get_oper_name@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2172]!	; 0x87c

000007bc <__gmon_start__@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2164]!	; 0x874

000007c8 <get_channel_access@plt>:
 7c8:	add	ip, pc, #0, 12
 7cc:	add	ip, ip, #69632	; 0x11000
 7d0:	ldr	pc, [ip, #2156]!	; 0x86c

000007d4 <sendto_one_notice@plt>:
 7d4:	add	ip, pc, #0, 12
 7d8:	add	ip, ip, #69632	; 0x11000
 7dc:	ldr	pc, [ip, #2148]!	; 0x864

000007e0 <privilegeset_in_set@plt>:
 7e0:	add	ip, pc, #0, 12
 7e4:	add	ip, ip, #69632	; 0x11000
 7e8:	ldr	pc, [ip, #2140]!	; 0x85c

000007ec <__assert_fail@plt>:
 7ec:	add	ip, pc, #0, 12
 7f0:	add	ip, ip, #69632	; 0x11000
 7f4:	ldr	pc, [ip, #2132]!	; 0x854

000007f8 <construct_umodebuf@plt>:
 7f8:	add	ip, pc, #0, 12
 7fc:	add	ip, ip, #69632	; 0x11000
 800:	ldr	pc, [ip, #2124]!	; 0x84c

Disassembly of section .text:

00000804 <call_weak_fn>:
     804:	ldr	r3, [pc, #20]	; 820 <call_weak_fn+0x1c>
     808:	ldr	r2, [pc, #20]	; 824 <call_weak_fn+0x20>
     80c:	add	r3, pc, r3
     810:	ldr	r2, [r3, r2]
     814:	cmp	r2, #0
     818:	bxeq	lr
     81c:	b	7bc <__gmon_start__@plt>
     820:	.word	0x000117ec
     824:	.word	0x00000064

00000828 <deregister_tm_clones>:
     828:	ldr	r0, [pc, #44]	; 85c <deregister_tm_clones+0x34>
     82c:	ldr	r3, [pc, #44]	; 860 <deregister_tm_clones+0x38>
     830:	add	r0, pc, r0
     834:	add	r3, pc, r3
     838:	cmp	r3, r0
     83c:	ldr	r3, [pc, #32]	; 864 <deregister_tm_clones+0x3c>
     840:	add	r3, pc, r3
     844:	bxeq	lr
     848:	ldr	r2, [pc, #24]	; 868 <deregister_tm_clones+0x40>
     84c:	ldr	r3, [r3, r2]
     850:	cmp	r3, #0
     854:	bxeq	lr
     858:	bx	r3
     85c:	.word	0x000118b8
     860:	.word	0x000118b4
     864:	.word	0x000117b8
     868:	.word	0x00000058

0000086c <register_tm_clones>:
     86c:	ldr	r0, [pc, #56]	; 8ac <register_tm_clones+0x40>
     870:	ldr	r3, [pc, #56]	; 8b0 <register_tm_clones+0x44>
     874:	add	r0, pc, r0
     878:	add	r3, pc, r3
     87c:	sub	r1, r3, r0
     880:	ldr	r3, [pc, #44]	; 8b4 <register_tm_clones+0x48>
     884:	asr	r1, r1, #2
     888:	add	r3, pc, r3
     88c:	add	r1, r1, r1, lsr #31
     890:	asrs	r1, r1, #1
     894:	bxeq	lr
     898:	ldr	r2, [pc, #24]	; 8b8 <register_tm_clones+0x4c>
     89c:	ldr	r3, [r3, r2]
     8a0:	cmp	r3, #0
     8a4:	bxeq	lr
     8a8:	bx	r3
     8ac:	.word	0x00011874
     8b0:	.word	0x00011870
     8b4:	.word	0x00011770
     8b8:	.word	0x0000006c

000008bc <__do_global_dtors_aux>:
     8bc:	ldr	r3, [pc, #76]	; 910 <__do_global_dtors_aux+0x54>
     8c0:	ldr	r2, [pc, #76]	; 914 <__do_global_dtors_aux+0x58>
     8c4:	add	r3, pc, r3
     8c8:	add	r2, pc, r2
     8cc:	ldrb	r3, [r3]
     8d0:	cmp	r3, #0
     8d4:	bxne	lr
     8d8:	ldr	r3, [pc, #56]	; 918 <__do_global_dtors_aux+0x5c>
     8dc:	push	{r4, lr}
     8e0:	ldr	r3, [r2, r3]
     8e4:	cmp	r3, #0
     8e8:	beq	8f8 <__do_global_dtors_aux+0x3c>
     8ec:	ldr	r3, [pc, #40]	; 91c <__do_global_dtors_aux+0x60>
     8f0:	ldr	r0, [pc, r3]
     8f4:	bl	75c <__cxa_finalize@plt>
     8f8:	bl	828 <deregister_tm_clones>
     8fc:	ldr	r3, [pc, #28]	; 920 <__do_global_dtors_aux+0x64>
     900:	mov	r2, #1
     904:	add	r3, pc, r3
     908:	strb	r2, [r3]
     90c:	pop	{r4, pc}
     910:	.word	0x00011824
     914:	.word	0x00011730
     918:	.word	0x00000050
     91c:	.word	0x00011778
     920:	.word	0x000117e4

00000924 <frame_dummy>:
     924:	b	86c <register_tm_clones>

00000928 <check_umode_change>:
     928:	push	{r4, r5, r6, sl, fp, lr}
     92c:	add	fp, sp, #16
     930:	ldr	r4, [r0]
     934:	ldrb	r1, [r4, #65]	; 0x41
     938:	tst	r1, #32
     93c:	beq	a18 <check_umode_change+0xf0>
     940:	ldrh	r1, [r4, #80]	; 0x50
     944:	cmp	r1, #64	; 0x40
     948:	bne	a18 <check_umode_change+0xf0>
     94c:	ldr	r0, [r0, #4]
     950:	tst	r0, #4096	; 0x1000
     954:	beq	978 <check_umode_change+0x50>
     958:	ldr	r1, [r4, #56]	; 0x38
     95c:	tst	r1, #4096	; 0x1000
     960:	bne	978 <check_umode_change+0x50>
     964:	ldr	r2, [pc, #216]	; a44 <check_umode_change+0x11c>
     968:	ldr	r2, [pc, r2]
     96c:	ldr	r2, [r2, #448]	; 0x1c0
     970:	bic	r1, r1, r2
     974:	str	r1, [r4, #56]	; 0x38
     978:	ldr	r1, [r4, #56]	; 0x38
     97c:	eor	r0, r1, r0
     980:	ldr	r5, [pc, #192]	; a48 <check_umode_change+0x120>
     984:	ldr	r5, [pc, r5]
     988:	ldr	r2, [r5, #448]	; 0x1c0
     98c:	and	r6, r0, r2
     990:	tst	r2, r1
     994:	beq	9d0 <check_umode_change+0xa8>
     998:	ldr	r0, [r4, #24]
     99c:	cmp	r0, #0
     9a0:	ldrne	r0, [r0, #36]	; 0x24
     9a4:	cmpne	r0, #0
     9a8:	bne	a1c <check_umode_change+0xf4>
     9ac:	ldr	r1, [pc, #156]	; a50 <check_umode_change+0x128>
     9b0:	add	r1, pc, r1
     9b4:	mov	r0, r4
     9b8:	bl	7d4 <sendto_one_notice@plt>
     9bc:	ldr	r0, [r4, #56]	; 0x38
     9c0:	ldr	r1, [r5, #448]	; 0x1c0
     9c4:	bic	r0, r0, r1
     9c8:	str	r0, [r4, #56]	; 0x38
     9cc:	pop	{r4, r5, r6, sl, fp, pc}
     9d0:	cmp	r6, #0
     9d4:	beq	a18 <check_umode_change+0xf0>
     9d8:	ldr	r0, [pc, #116]	; a54 <check_umode_change+0x12c>
     9dc:	ldr	r0, [pc, r0]
     9e0:	ldr	r0, [r0]
     9e4:	cmp	r0, #0
     9e8:	popeq	{r4, r5, r6, sl, fp, pc}
     9ec:	ldr	r5, [r0]
     9f0:	ldr	r6, [r0, #8]
     9f4:	ldr	r1, [r5, #12]
     9f8:	cmp	r1, r4
     9fc:	bne	a0c <check_umode_change+0xe4>
     a00:	bl	eb0 <rb_dlinkDelete>
     a04:	mov	r0, r5
     a08:	bl	f3c <rb_free>
     a0c:	cmp	r6, #0
     a10:	mov	r0, r6
     a14:	bne	9ec <check_umode_change+0xc4>
     a18:	pop	{r4, r5, r6, sl, fp, pc}
     a1c:	ldr	r1, [pc, #40]	; a4c <check_umode_change+0x124>
     a20:	add	r1, pc, r1
     a24:	bl	7e0 <privilegeset_in_set@plt>
     a28:	cmp	r0, #0
     a2c:	beq	9ac <check_umode_change+0x84>
     a30:	cmp	r6, #0
     a34:	beq	a18 <check_umode_change+0xf0>
     a38:	mov	r0, r4
     a3c:	pop	{r4, r5, r6, sl, fp, lr}
     a40:	b	e30 <update_session_deadline>
     a44:	.word	0x000116f0
     a48:	.word	0x000116d4
     a4c:	.word	0x00000708
     a50:	.word	0x00000786
     a54:	.word	0x00011670

00000a58 <hack_channel_access>:
     a58:	push	{r4, sl, fp, lr}
     a5c:	add	fp, sp, #8
     a60:	sub	sp, sp, #8
     a64:	mov	r4, r0
     a68:	ldr	r0, [r0, #20]
     a6c:	cmp	r0, #0
     a70:	ldrne	r0, [r4, #16]
     a74:	cmpne	r0, #2
     a78:	bne	a84 <hack_channel_access+0x2c>
     a7c:	sub	sp, fp, #8
     a80:	pop	{r4, sl, fp, pc}
     a84:	ldr	r0, [pc, #100]	; af0 <hack_channel_access+0x98>
     a88:	ldr	r0, [pc, r0]
     a8c:	ldr	r1, [r0, #448]	; 0x1c0
     a90:	ldr	r0, [r4]
     a94:	ldr	r2, [r0, #56]	; 0x38
     a98:	tst	r1, r2
     a9c:	beq	a7c <hack_channel_access+0x24>
     aa0:	bl	e30 <update_session_deadline>
     aa4:	mov	r0, #4
     aa8:	str	r0, [r4, #16]
     aac:	ldr	r0, [r4, #24]
     ab0:	cmp	r0, #0
     ab4:	beq	a7c <hack_channel_access+0x24>
     ab8:	ldr	r0, [r4]
     abc:	bl	7b0 <get_oper_name@plt>
     ac0:	mov	r3, r0
     ac4:	ldr	r0, [r4, #4]
     ac8:	ldr	r1, [r4, #24]
     acc:	ldr	r0, [r0, #236]	; 0xec
     ad0:	stm	sp, {r0, r1}
     ad4:	ldr	r2, [pc, #24]	; af4 <hack_channel_access+0x9c>
     ad8:	add	r2, pc, r2
     adc:	mov	r0, #256	; 0x100
     ae0:	mov	r1, #256	; 0x100
     ae4:	bl	798 <sendto_realops_snomask@plt>
     ae8:	sub	sp, fp, #8
     aec:	pop	{r4, sl, fp, pc}
     af0:	.word	0x000115d0
     af4:	.word	0x0000072f

00000af8 <hack_can_join>:
     af8:	push	{r4, sl, fp, lr}
     afc:	add	fp, sp, #8
     b00:	sub	sp, sp, #8
     b04:	mov	r4, r0
     b08:	ldr	r0, [r0, #8]
     b0c:	cmp	r0, #0
     b10:	beq	b68 <hack_can_join+0x70>
     b14:	ldr	r0, [pc, #84]	; b70 <hack_can_join+0x78>
     b18:	ldr	r0, [pc, r0]
     b1c:	ldr	r1, [r0, #448]	; 0x1c0
     b20:	ldr	r0, [r4]
     b24:	ldr	r2, [r0, #56]	; 0x38
     b28:	tst	r1, r2
     b2c:	beq	b68 <hack_can_join+0x70>
     b30:	bl	e30 <update_session_deadline>
     b34:	mov	r0, #0
     b38:	str	r0, [r4, #8]
     b3c:	ldr	r0, [r4]
     b40:	bl	7b0 <get_oper_name@plt>
     b44:	mov	r3, r0
     b48:	ldr	r0, [r4, #4]
     b4c:	ldr	r0, [r0, #236]	; 0xec
     b50:	str	r0, [sp]
     b54:	ldr	r2, [pc, #24]	; b74 <hack_can_join+0x7c>
     b58:	add	r2, pc, r2
     b5c:	mov	r0, #256	; 0x100
     b60:	mov	r1, #256	; 0x100
     b64:	bl	798 <sendto_realops_snomask@plt>
     b68:	sub	sp, fp, #8
     b6c:	pop	{r4, sl, fp, pc}
     b70:	.word	0x00011540
     b74:	.word	0x000006e1

00000b78 <hack_can_kick>:
     b78:	push	{r4, r5, fp, lr}
     b7c:	add	fp, sp, #8
     b80:	sub	sp, sp, #8
     b84:	mov	r5, r0
     b88:	ldr	r0, [r0]
     b8c:	ldmib	r5, {r1, r2}
     b90:	ldr	r3, [r5, #20]
     b94:	mov	r4, #0
     b98:	str	r4, [sp]
     b9c:	bl	7c8 <get_channel_access@plt>
     ba0:	cmp	r0, #4
     ba4:	bne	bfc <hack_can_kick+0x84>
     ba8:	ldr	r0, [pc, #84]	; c04 <hack_can_kick+0x8c>
     bac:	ldr	r0, [pc, r0]
     bb0:	ldr	r1, [r0, #448]	; 0x1c0
     bb4:	ldr	r0, [r5]
     bb8:	ldr	r2, [r0, #56]	; 0x38
     bbc:	tst	r1, r2
     bc0:	beq	bfc <hack_can_kick+0x84>
     bc4:	bl	e30 <update_session_deadline>
     bc8:	ldr	r0, [r5]
     bcc:	bl	7b0 <get_oper_name@plt>
     bd0:	mov	r3, r0
     bd4:	ldr	r0, [r5, #4]
     bd8:	ldr	r1, [r5, #12]
     bdc:	ldr	r0, [r0, #236]	; 0xec
     be0:	add	r1, r1, #88	; 0x58
     be4:	stm	sp, {r0, r1}
     be8:	ldr	r2, [pc, #24]	; c08 <hack_can_kick+0x90>
     bec:	add	r2, pc, r2
     bf0:	mov	r0, #256	; 0x100
     bf4:	mov	r1, #256	; 0x100
     bf8:	bl	798 <sendto_realops_snomask@plt>
     bfc:	sub	sp, fp, #8
     c00:	pop	{r4, r5, fp, pc}
     c04:	.word	0x000114ac
     c08:	.word	0x0000067a

00000c0c <hack_can_send>:
     c0c:	push	{r4, sl, fp, lr}
     c10:	add	fp, sp, #8
     c14:	sub	sp, sp, #8
     c18:	mov	r4, r0
     c1c:	ldr	r0, [r0, #20]
     c20:	cmp	r0, #0
     c24:	beq	ca4 <hack_can_send+0x98>
     c28:	ldr	r0, [r4, #16]
     c2c:	sub	r0, r0, #1
     c30:	cmp	r0, #2
     c34:	bcc	ca4 <hack_can_send+0x98>
     c38:	ldr	r0, [pc, #108]	; cac <hack_can_send+0xa0>
     c3c:	ldr	r0, [pc, r0]
     c40:	ldr	r1, [r0, #448]	; 0x1c0
     c44:	ldr	r0, [r4]
     c48:	ldr	r2, [r0, #56]	; 0x38
     c4c:	tst	r1, r2
     c50:	beq	ca4 <hack_can_send+0x98>
     c54:	mov	r1, #1
     c58:	str	r1, [r4, #16]
     c5c:	ldrb	r1, [r0, #65]	; 0x41
     c60:	tst	r1, #32
     c64:	beq	ca4 <hack_can_send+0x98>
     c68:	ldrh	r1, [r0, #80]	; 0x50
     c6c:	cmp	r1, #64	; 0x40
     c70:	bne	ca4 <hack_can_send+0x98>
     c74:	bl	e30 <update_session_deadline>
     c78:	ldr	r0, [r4]
     c7c:	bl	7b0 <get_oper_name@plt>
     c80:	mov	r3, r0
     c84:	ldr	r0, [r4, #4]
     c88:	ldr	r0, [r0, #236]	; 0xec
     c8c:	str	r0, [sp]
     c90:	ldr	r2, [pc, #24]	; cb0 <hack_can_send+0xa4>
     c94:	add	r2, pc, r2
     c98:	mov	r0, #256	; 0x100
     c9c:	mov	r1, #256	; 0x100
     ca0:	bl	798 <sendto_realops_snomask@plt>
     ca4:	sub	sp, fp, #8
     ca8:	pop	{r4, sl, fp, pc}
     cac:	.word	0x0001141c
     cb0:	.word	0x000005fc

00000cb4 <handle_client_exit>:
     cb4:	push	{r4, r5, r6, sl, fp, lr}
     cb8:	add	fp, sp, #16
     cbc:	mov	r1, r0
     cc0:	ldr	r0, [pc, #64]	; d08 <handle_client_exit+0x54>
     cc4:	ldr	r0, [pc, r0]
     cc8:	ldr	r0, [r0]
     ccc:	cmp	r0, #0
     cd0:	popeq	{r4, r5, r6, sl, fp, pc}
     cd4:	ldr	r5, [r1, #4]
     cd8:	ldr	r4, [r0]
     cdc:	ldr	r6, [r0, #8]
     ce0:	ldr	r1, [r4, #12]
     ce4:	cmp	r1, r5
     ce8:	bne	cf8 <handle_client_exit+0x44>
     cec:	bl	eb0 <rb_dlinkDelete>
     cf0:	mov	r0, r4
     cf4:	bl	f3c <rb_free>
     cf8:	cmp	r6, #0
     cfc:	mov	r0, r6
     d00:	bne	cd8 <handle_client_exit+0x24>
     d04:	pop	{r4, r5, r6, sl, fp, pc}
     d08:	.word	0x00011388

00000d0c <_modinit>:
     d0c:	push	{r4, r5, fp, lr}
     d10:	add	fp, sp, #8
     d14:	bl	7a4 <find_umode_slot@plt>
     d18:	ldr	r4, [pc, #140]	; dac <_modinit+0xa0>
     d1c:	ldr	r4, [pc, r4]
     d20:	str	r0, [r4, #448]	; 0x1c0
     d24:	bl	7f8 <construct_umodebuf@plt>
     d28:	ldr	r0, [pc, #128]	; db0 <_modinit+0xa4>
     d2c:	ldr	r0, [pc, r0]
     d30:	ldr	r5, [r0]
     d34:	cmp	r5, #0
     d38:	bne	d4c <_modinit+0x40>
     d3c:	b	d7c <_modinit+0x70>
     d40:	ldr	r5, [r5, #8]
     d44:	cmp	r5, #0
     d48:	beq	d7c <_modinit+0x70>
     d4c:	ldr	r0, [r5]
     d50:	ldrh	r1, [r0, #80]	; 0x50
     d54:	cmp	r1, #64	; 0x40
     d58:	bne	d40 <_modinit+0x34>
     d5c:	ldr	r1, [r0, #24]
     d60:	cmp	r1, #0
     d64:	beq	d40 <_modinit+0x34>
     d68:	ldr	r1, [r0, #56]	; 0x38
     d6c:	ldr	r2, [r4, #448]	; 0x1c0
     d70:	tst	r2, r1
     d74:	blne	e30 <update_session_deadline>
     d78:	b	d40 <_modinit+0x34>
     d7c:	ldr	r0, [pc, #48]	; db4 <_modinit+0xa8>
     d80:	add	r0, pc, r0
     d84:	ldr	r1, [pc, #44]	; db8 <_modinit+0xac>
     d88:	add	r1, pc, r1
     d8c:	mov	r2, #0
     d90:	mov	r3, #60	; 0x3c
     d94:	bl	750 <rb_event_add@plt>
     d98:	ldr	r1, [pc, #28]	; dbc <_modinit+0xb0>
     d9c:	ldr	r1, [pc, r1]
     da0:	str	r0, [r1]
     da4:	mov	r0, #0
     da8:	pop	{r4, r5, fp, pc}
     dac:	.word	0x0001133c
     db0:	.word	0x00011334
     db4:	.word	0x00000542
     db8:	.word	0x0000029c
     dbc:	.word	0x000112b8

00000dc0 <_moddeinit>:
     dc0:	push	{r4, r5, fp, lr}
     dc4:	add	fp, sp, #8
     dc8:	ldr	r0, [pc, #84]	; e24 <_moddeinit+0x64>
     dcc:	ldr	r0, [pc, r0]
     dd0:	mov	r1, #0
     dd4:	str	r1, [r0, #448]	; 0x1c0
     dd8:	bl	7f8 <construct_umodebuf@plt>
     ddc:	ldr	r0, [pc, #68]	; e28 <_moddeinit+0x68>
     de0:	ldr	r0, [pc, r0]
     de4:	ldr	r4, [r0]
     de8:	cmp	r4, #0
     dec:	beq	e10 <_moddeinit+0x50>
     df0:	ldr	r5, [r4, #8]
     df4:	mov	r0, r4
     df8:	bl	eb0 <rb_dlinkDelete>
     dfc:	ldr	r0, [r4]
     e00:	bl	f3c <rb_free>
     e04:	cmp	r5, #0
     e08:	mov	r4, r5
     e0c:	bne	df0 <_moddeinit+0x30>
     e10:	ldr	r0, [pc, #20]	; e2c <_moddeinit+0x6c>
     e14:	ldr	r0, [pc, r0]
     e18:	ldr	r0, [r0]
     e1c:	pop	{r4, r5, fp, lr}
     e20:	b	768 <rb_event_delete@plt>
     e24:	.word	0x0001128c
     e28:	.word	0x0001126c
     e2c:	.word	0x00011240

00000e30 <update_session_deadline>:
     e30:	push	{r4, r5, fp, lr}
     e34:	add	fp, sp, #8
     e38:	mov	r4, r0
     e3c:	ldr	r0, [pc, #104]	; eac <update_session_deadline+0x7c>
     e40:	ldr	r0, [pc, r0]
     e44:	ldr	r0, [r0]
     e48:	cmp	r0, #0
     e4c:	beq	e78 <update_session_deadline+0x48>
     e50:	ldr	r5, [r0]
     e54:	ldr	r1, [r5, #12]
     e58:	cmp	r1, r4
     e5c:	beq	e70 <update_session_deadline+0x40>
     e60:	ldr	r0, [r0, #8]
     e64:	cmp	r0, #0
     e68:	bne	e50 <update_session_deadline+0x20>
     e6c:	mov	r5, #0
     e70:	cmp	r5, #0
     e74:	bne	e84 <update_session_deadline+0x54>
     e78:	bl	f48 <rb_malloc>
     e7c:	mov	r5, r0
     e80:	str	r4, [r0, #12]
     e84:	bl	744 <rb_current_time@plt>
     e88:	movw	r1, #1800	; 0x708
     e8c:	add	r0, r0, r1
     e90:	str	r0, [r5, #16]
     e94:	mov	r0, r5
     e98:	bl	eb0 <rb_dlinkDelete>
     e9c:	mov	r0, r5
     ea0:	mov	r1, r5
     ea4:	pop	{r4, r5, fp, lr}
     ea8:	b	f68 <rb_dlinkAdd>
     eac:	.word	0x0001120c

00000eb0 <rb_dlinkDelete>:
     eb0:	cmp	r0, #0
     eb4:	beq	f04 <rb_dlinkDelete+0x54>
     eb8:	ldr	ip, [pc, #108]	; f2c <rb_dlinkDelete+0x7c>
     ebc:	ldr	ip, [pc, ip]
     ec0:	ldmib	r0, {r2, r3}
     ec4:	add	r1, r3, #4
     ec8:	cmp	r3, #0
     ecc:	addeq	r1, ip, #4
     ed0:	str	r2, [r1]
     ed4:	ldmib	r0, {r1, r2}
     ed8:	cmp	r1, #0
     edc:	mov	r3, ip
     ee0:	addne	r3, r1, #8
     ee4:	str	r2, [r3]
     ee8:	mov	r1, #0
     eec:	str	r1, [r0, #4]
     ef0:	str	r1, [r0, #8]
     ef4:	ldr	r0, [ip, #8]
     ef8:	sub	r0, r0, #1
     efc:	str	r0, [ip, #8]
     f00:	bx	lr
     f04:	push	{fp, lr}
     f08:	mov	fp, sp
     f0c:	ldr	r0, [pc, #28]	; f30 <rb_dlinkDelete+0x80>
     f10:	add	r0, pc, r0
     f14:	ldr	r1, [pc, #24]	; f34 <rb_dlinkDelete+0x84>
     f18:	add	r1, pc, r1
     f1c:	ldr	r3, [pc, #20]	; f38 <rb_dlinkDelete+0x88>
     f20:	add	r3, pc, r3
     f24:	mov	r2, #235	; 0xeb
     f28:	bl	7ec <__assert_fail@plt>
     f2c:	.word	0x00011190
     f30:	.word	0x000002b7
     f34:	.word	0x00000258
     f38:	.word	0x000002b1

00000f3c <rb_free>:
     f3c:	cmp	r0, #0
     f40:	bxeq	lr
     f44:	b	774 <free@plt>

00000f48 <rb_malloc>:
     f48:	push	{fp, lr}
     f4c:	mov	fp, sp
     f50:	mov	r0, #1
     f54:	mov	r1, #20
     f58:	bl	738 <calloc@plt>
     f5c:	cmp	r0, #0
     f60:	popne	{fp, pc}
     f64:	bl	780 <rb_outofmemory@plt>

00000f68 <rb_dlinkAdd>:
     f68:	push	{fp, lr}
     f6c:	mov	fp, sp
     f70:	cmp	r0, #0
     f74:	beq	fd0 <rb_dlinkAdd+0x68>
     f78:	cmp	r1, #0
     f7c:	beq	ff0 <rb_dlinkAdd+0x88>
     f80:	mov	r2, #0
     f84:	stm	r1, {r0, r2}
     f88:	ldr	r0, [pc, #128]	; 1010 <rb_dlinkAdd+0xa8>
     f8c:	ldr	r0, [pc, r0]
     f90:	ldr	r2, [r0]
     f94:	str	r2, [r1, #8]
     f98:	cmp	r2, #0
     f9c:	beq	fac <rb_dlinkAdd+0x44>
     fa0:	add	r2, r2, #4
     fa4:	str	r1, [r2]
     fa8:	b	fbc <rb_dlinkAdd+0x54>
     fac:	mov	r2, r0
     fb0:	ldr	r3, [r2, #4]!
     fb4:	cmp	r3, #0
     fb8:	streq	r1, [r2]
     fbc:	str	r1, [r0]
     fc0:	ldr	r1, [r0, #8]
     fc4:	add	r1, r1, #1
     fc8:	str	r1, [r0, #8]
     fcc:	pop	{fp, pc}
     fd0:	ldr	r0, [pc, #60]	; 1014 <rb_dlinkAdd+0xac>
     fd4:	add	r0, pc, r0
     fd8:	ldr	r1, [pc, #56]	; 1018 <rb_dlinkAdd+0xb0>
     fdc:	add	r1, pc, r1
     fe0:	ldr	r3, [pc, #52]	; 101c <rb_dlinkAdd+0xb4>
     fe4:	add	r3, pc, r3
     fe8:	mov	r2, #143	; 0x8f
     fec:	bl	7ec <__assert_fail@plt>
     ff0:	ldr	r0, [pc, #40]	; 1020 <rb_dlinkAdd+0xb8>
     ff4:	add	r0, pc, r0
     ff8:	ldr	r1, [pc, #36]	; 1024 <rb_dlinkAdd+0xbc>
     ffc:	add	r1, pc, r1
    1000:	ldr	r3, [pc, #32]	; 1028 <rb_dlinkAdd+0xc0>
    1004:	add	r3, pc, r3
    1008:	mov	r2, #144	; 0x90
    100c:	bl	7ec <__assert_fail@plt>
    1010:	.word	0x000110c0
    1014:	.word	0x0000018f
    1018:	.word	0x00000194
    101c:	.word	0x000001a8
    1020:	.word	0x000001d3
    1024:	.word	0x00000174
    1028:	.word	0x00000188

0000102c <expire_override_deadlines>:
    102c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1030:	add	fp, sp, #24
    1034:	sub	sp, sp, #16
    1038:	ldr	r0, [pc, #152]	; 10d8 <expire_override_deadlines+0xac>
    103c:	ldr	r0, [pc, r0]
    1040:	ldr	r0, [r0]
    1044:	cmp	r0, #0
    1048:	beq	10d0 <expire_override_deadlines+0xa4>
    104c:	ldr	r6, [r0]
    1050:	ldr	r5, [r0, #8]
    1054:	ldr	r4, [r6, #16]
    1058:	bl	744 <rb_current_time@plt>
    105c:	cmp	r4, r0
    1060:	bgt	10d0 <expire_override_deadlines+0xa4>
    1064:	ldr	r8, [pc, #112]	; 10dc <expire_override_deadlines+0xb0>
    1068:	add	r8, pc, r8
    106c:	mov	r9, #0
    1070:	mov	r4, sp
    1074:	ldr	r7, [r6, #16]
    1078:	bl	744 <rb_current_time@plt>
    107c:	cmp	r7, r0
    1080:	bge	10b0 <expire_override_deadlines+0x84>
    1084:	ldr	r0, [r6, #12]
    1088:	str	r8, [sp, #8]
    108c:	str	r9, [sp, #12]
    1090:	add	r0, r0, #88	; 0x58
    1094:	str	r0, [sp, #4]
    1098:	str	r0, [sp]
    109c:	ldr	r0, [r6, #12]
    10a0:	mov	r1, r0
    10a4:	mov	r2, #3
    10a8:	mov	r3, r4
    10ac:	bl	78c <user_mode@plt>
    10b0:	cmp	r5, #0
    10b4:	beq	10d0 <expire_override_deadlines+0xa4>
    10b8:	ldr	r6, [r5]
    10bc:	ldr	r5, [r5, #8]
    10c0:	ldr	r7, [r6, #16]
    10c4:	bl	744 <rb_current_time@plt>
    10c8:	cmp	r7, r0
    10cc:	ble	1074 <expire_override_deadlines+0x48>
    10d0:	sub	sp, fp, #24
    10d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    10d8:	.word	0x00011010
    10dc:	.word	0x00000274

Disassembly of section .fini:

000010e0 <_fini>:
    10e0:	push	{r3, lr}
    10e4:	pop	{r3, pc}
