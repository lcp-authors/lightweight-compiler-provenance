
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

0001098c <.init>:
   1098c:	push	{r3, lr}
   10990:	bl	10ac0 <_start@@Base+0x3c>
   10994:	pop	{r3, pc}

Disassembly of section .plt:

00010998 <printf@plt-0x14>:
   10998:	push	{lr}		; (str lr, [sp, #-4]!)
   1099c:	ldr	lr, [pc, #4]	; 109a8 <printf@plt-0x4>
   109a0:	add	lr, pc, lr
   109a4:	ldr	pc, [lr, #8]!
   109a8:	andeq	r2, r1, r8, asr r6

000109ac <printf@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #73728	; 0x12000
   109b4:	ldr	pc, [ip, #1624]!	; 0x658

000109b8 <fopen@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #73728	; 0x12000
   109c0:	ldr	pc, [ip, #1616]!	; 0x650

000109c4 <free@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #73728	; 0x12000
   109cc:	ldr	pc, [ip, #1608]!	; 0x648

000109d0 <ftell@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #73728	; 0x12000
   109d8:	ldr	pc, [ip, #1600]!	; 0x640

000109dc <rewind@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #73728	; 0x12000
   109e4:	ldr	pc, [ip, #1592]!	; 0x638

000109e8 <fwrite@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #73728	; 0x12000
   109f0:	ldr	pc, [ip, #1584]!	; 0x630

000109f4 <puts@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #73728	; 0x12000
   109fc:	ldr	pc, [ip, #1576]!	; 0x628

00010a00 <malloc@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #73728	; 0x12000
   10a08:	ldr	pc, [ip, #1568]!	; 0x620

00010a0c <__libc_start_main@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #73728	; 0x12000
   10a14:	ldr	pc, [ip, #1560]!	; 0x618

00010a18 <__gmon_start__@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #73728	; 0x12000
   10a20:	ldr	pc, [ip, #1552]!	; 0x610

00010a24 <exit@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #73728	; 0x12000
   10a2c:	ldr	pc, [ip, #1544]!	; 0x608

00010a30 <fprintf@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #73728	; 0x12000
   10a38:	ldr	pc, [ip, #1536]!	; 0x600

00010a3c <putchar@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #73728	; 0x12000
   10a44:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a48 <fclose@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #73728	; 0x12000
   10a50:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a54 <fread_unlocked@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #73728	; 0x12000
   10a5c:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a60 <fseek@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #73728	; 0x12000
   10a68:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a6c <abort@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #73728	; 0x12000
   10a74:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a78 <__assert_fail@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #73728	; 0x12000
   10a80:	ldr	pc, [ip, #1488]!	; 0x5d0

Disassembly of section .text:

00010a84 <_start@@Base>:
   10a84:	mov	fp, #0
   10a88:	mov	lr, #0
   10a8c:	pop	{r1}		; (ldr r1, [sp], #4)
   10a90:	mov	r2, sp
   10a94:	push	{r2}		; (str r2, [sp, #-4]!)
   10a98:	push	{r0}		; (str r0, [sp, #-4]!)
   10a9c:	ldr	ip, [pc, #16]	; 10ab4 <_start@@Base+0x30>
   10aa0:	push	{ip}		; (str ip, [sp, #-4]!)
   10aa4:	ldr	r0, [pc, #12]	; 10ab8 <_start@@Base+0x34>
   10aa8:	ldr	r3, [pc, #12]	; 10abc <_start@@Base+0x38>
   10aac:	bl	10a0c <__libc_start_main@plt>
   10ab0:	bl	10a6c <abort@plt>
   10ab4:			; <UNDEFINED> instruction: 0x000119b4
   10ab8:	andeq	r1, r1, r0, ror #17
   10abc:	andeq	r1, r1, r4, asr r9
   10ac0:	ldr	r3, [pc, #20]	; 10adc <_start@@Base+0x58>
   10ac4:	ldr	r2, [pc, #20]	; 10ae0 <_start@@Base+0x5c>
   10ac8:	add	r3, pc, r3
   10acc:	ldr	r2, [r3, r2]
   10ad0:	cmp	r2, #0
   10ad4:	bxeq	lr
   10ad8:	b	10a18 <__gmon_start__@plt>
   10adc:	andeq	r2, r1, r0, lsr r5
   10ae0:	andeq	r0, r0, r4, asr r0
   10ae4:	ldr	r0, [pc, #24]	; 10b04 <_start@@Base+0x80>
   10ae8:	ldr	r3, [pc, #24]	; 10b08 <_start@@Base+0x84>
   10aec:	cmp	r3, r0
   10af0:	bxeq	lr
   10af4:	ldr	r3, [pc, #16]	; 10b0c <_start@@Base+0x88>
   10af8:	cmp	r3, #0
   10afc:	bxeq	lr
   10b00:	bx	r3
   10b04:	andeq	r3, r2, r0, rrx
   10b08:	andeq	r3, r2, r0, rrx
   10b0c:	andeq	r0, r0, r0
   10b10:	ldr	r0, [pc, #36]	; 10b3c <_start@@Base+0xb8>
   10b14:	ldr	r1, [pc, #36]	; 10b40 <_start@@Base+0xbc>
   10b18:	sub	r1, r1, r0
   10b1c:	asr	r1, r1, #2
   10b20:	add	r1, r1, r1, lsr #31
   10b24:	asrs	r1, r1, #1
   10b28:	bxeq	lr
   10b2c:	ldr	r3, [pc, #16]	; 10b44 <_start@@Base+0xc0>
   10b30:	cmp	r3, #0
   10b34:	bxeq	lr
   10b38:	bx	r3
   10b3c:	andeq	r3, r2, r0, rrx
   10b40:	andeq	r3, r2, r0, rrx
   10b44:	andeq	r0, r0, r0
   10b48:	push	{r4, lr}
   10b4c:	ldr	r4, [pc, #24]	; 10b6c <_start@@Base+0xe8>
   10b50:	ldrb	r3, [r4]
   10b54:	cmp	r3, #0
   10b58:	popne	{r4, pc}
   10b5c:	bl	10ae4 <_start@@Base+0x60>
   10b60:	mov	r3, #1
   10b64:	strb	r3, [r4]
   10b68:	pop	{r4, pc}
   10b6c:	andeq	r3, r2, r4, rrx
   10b70:	b	10b10 <_start@@Base+0x8c>

00010b74 <print_type@@Base>:
   10b74:	push	{r4, sl, fp, lr}
   10b78:	add	fp, sp, #8
   10b7c:	mov	r4, r0
   10b80:	mov	r0, #123	; 0x7b
   10b84:	bl	10a3c <putchar@plt>
   10b88:	cmp	r4, #0
   10b8c:	beq	10cfc <print_type@@Base+0x188>
   10b90:	ldr	r0, [r4]
   10b94:	mov	r2, r4
   10b98:	mov	r1, #1
   10b9c:	ldrh	r3, [r2, -r0]!
   10ba0:	rsb	r0, r0, #0
   10ba4:	cmp	r3, #6
   10ba8:	bcc	10bf8 <print_type@@Base+0x84>
   10bac:	ldrh	r2, [r2, #4]
   10bb0:	cmp	r2, #0
   10bb4:	beq	10bf8 <print_type@@Base+0x84>
   10bb8:	add	r0, r4, r2
   10bbc:	ldrsb	r0, [r0]
   10bc0:	cmp	r0, #16
   10bc4:	bhi	10bd8 <print_type@@Base+0x64>
   10bc8:	movw	r1, #8740	; 0x2224
   10bcc:	movt	r1, #1
   10bd0:	ldr	r1, [r1, r0, lsl #2]
   10bd4:	b	10be0 <print_type@@Base+0x6c>
   10bd8:	movw	r1, #7215	; 0x1c2f
   10bdc:	movt	r1, #1
   10be0:	movw	r0, #6596	; 0x19c4
   10be4:	movt	r0, #1
   10be8:	bl	109ac <printf@plt>
   10bec:	ldr	r0, [r4]
   10bf0:	mov	r1, #0
   10bf4:	rsb	r0, r0, #0
   10bf8:	mov	r2, r4
   10bfc:	ldrh	r3, [r2, r0]!
   10c00:	cmp	r3, #8
   10c04:	bcc	10c90 <print_type@@Base+0x11c>
   10c08:	ldrh	r2, [r2, #6]
   10c0c:	cmp	r2, #0
   10c10:	beq	10c90 <print_type@@Base+0x11c>
   10c14:	cmp	r1, #0
   10c18:	bne	10c2c <print_type@@Base+0xb8>
   10c1c:	mov	r0, #44	; 0x2c
   10c20:	bl	10a3c <putchar@plt>
   10c24:	ldr	r0, [r4]
   10c28:	rsb	r0, r0, #0
   10c2c:	mov	r2, r4
   10c30:	movw	r1, #7595	; 0x1dab
   10c34:	ldrh	r0, [r2, r0]!	; <UNPREDICTABLE>
   10c38:	movt	r1, #1
   10c3c:	cmp	r0, #6
   10c40:	bcc	10c78 <print_type@@Base+0x104>
   10c44:	ldrh	r0, [r2, #4]
   10c48:	cmp	r0, #0
   10c4c:	beq	10c78 <print_type@@Base+0x104>
   10c50:	add	r0, r4, r0
   10c54:	ldrsb	r0, [r0]
   10c58:	cmp	r0, #16
   10c5c:	bhi	10c70 <print_type@@Base+0xfc>
   10c60:	movw	r1, #8740	; 0x2224
   10c64:	movt	r1, #1
   10c68:	ldr	r1, [r1, r0, lsl #2]
   10c6c:	b	10c78 <print_type@@Base+0x104>
   10c70:	movw	r1, #7215	; 0x1c2f
   10c74:	movt	r1, #1
   10c78:	movw	r0, #6613	; 0x19d5
   10c7c:	movt	r0, #1
   10c80:	bl	109ac <printf@plt>
   10c84:	ldr	r0, [r4]
   10c88:	mov	r1, #0
   10c8c:	rsb	r0, r0, #0
   10c90:	mov	r2, r4
   10c94:	ldrh	r3, [r2, r0]!
   10c98:	cmp	r3, #10
   10c9c:	bcc	10cf0 <print_type@@Base+0x17c>
   10ca0:	ldrh	r2, [r2, #8]
   10ca4:	cmp	r2, #0
   10ca8:	beq	10cf0 <print_type@@Base+0x17c>
   10cac:	cmp	r1, #0
   10cb0:	bne	10cc4 <print_type@@Base+0x150>
   10cb4:	mov	r0, #44	; 0x2c
   10cb8:	bl	10a3c <putchar@plt>
   10cbc:	ldr	r0, [r4]
   10cc0:	rsb	r0, r0, #0
   10cc4:	mov	r2, r4
   10cc8:	mvn	r1, #0
   10ccc:	ldrh	r0, [r2, r0]!	; <UNPREDICTABLE>
   10cd0:	cmp	r0, #10
   10cd4:	bcc	10ce4 <print_type@@Base+0x170>
   10cd8:	ldrh	r0, [r2, #8]
   10cdc:	cmp	r0, #0
   10ce0:	ldrne	r1, [r4, r0]
   10ce4:	movw	r0, #6628	; 0x19e4
   10ce8:	movt	r0, #1
   10cec:	bl	109ac <printf@plt>
   10cf0:	mov	r0, #125	; 0x7d
   10cf4:	pop	{r4, sl, fp, lr}
   10cf8:	b	10a3c <putchar@plt>
   10cfc:	movw	r0, #7397	; 0x1ce5
   10d00:	movw	r1, #7435	; 0x1d0b
   10d04:	movw	r3, #7529	; 0x1d69
   10d08:	mov	r2, #147	; 0x93
   10d0c:	movt	r0, #1
   10d10:	movt	r1, #1
   10d14:	movt	r3, #1
   10d18:	bl	10a78 <__assert_fail@plt>

00010d1c <print_object@@Base>:
   10d1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d20:	add	fp, sp, #28
   10d24:	sub	sp, sp, #4
   10d28:	cmp	r0, #0
   10d2c:	beq	11134 <print_object@@Base+0x418>
   10d30:	ldr	r1, [r0]
   10d34:	mov	r2, r0
   10d38:	ldrh	r1, [r2, -r1]!	; <UNPREDICTABLE>
   10d3c:	cmp	r1, #8
   10d40:	bcc	11128 <print_object@@Base+0x40c>
   10d44:	ldrh	r5, [r2, #6]
   10d48:	cmp	r5, #0
   10d4c:	beq	11128 <print_object@@Base+0x40c>
   10d50:	ldrh	r2, [r2, #4]
   10d54:	cmp	r2, #0
   10d58:	beq	11154 <print_object@@Base+0x438>
   10d5c:	mov	r1, r0
   10d60:	mov	r4, r0
   10d64:	str	r0, [sp]
   10d68:	ldr	r0, [r1, r2]!
   10d6c:	ldr	r9, [r4, r5]!
   10d70:	add	r0, r1, r0
   10d74:	add	r1, r0, #4
   10d78:	movw	r0, #6639	; 0x19ef
   10d7c:	movt	r0, #1
   10d80:	bl	109ac <printf@plt>
   10d84:	movw	r0, #6652	; 0x19fc
   10d88:	movt	r0, #1
   10d8c:	bl	109ac <printf@plt>
   10d90:	ldr	r0, [r4, r9]
   10d94:	cmp	r0, #0
   10d98:	beq	10ff8 <print_object@@Base+0x2dc>
   10d9c:	ldr	r2, [sp]
   10da0:	add	r1, r9, r5
   10da4:	movw	r5, #6664	; 0x1a08
   10da8:	mov	r7, #0
   10dac:	movt	r5, #1
   10db0:	add	r1, r1, r2
   10db4:	add	sl, r1, #24
   10db8:	cmp	r7, #0
   10dbc:	beq	10dcc <print_object@@Base+0xb0>
   10dc0:	mov	r0, #44	; 0x2c
   10dc4:	bl	10a3c <putchar@plt>
   10dc8:	ldr	r0, [r4, r9]
   10dcc:	cmp	r0, r7
   10dd0:	bls	11108 <print_object@@Base+0x3ec>
   10dd4:	ldr	r6, [sl, #-20]	; 0xffffffec
   10dd8:	add	r8, sl, r6
   10ddc:	ldr	r0, [r8, #-20]	; 0xffffffec
   10de0:	sub	r0, r6, r0
   10de4:	add	r0, sl, r0
   10de8:	ldrh	r1, [r0, #-20]	; 0xffffffec
   10dec:	cmp	r1, #6
   10df0:	bcc	110c8 <print_object@@Base+0x3ac>
   10df4:	ldrh	r0, [r0, #-16]
   10df8:	cmp	r0, #0
   10dfc:	beq	110c8 <print_object@@Base+0x3ac>
   10e00:	add	r1, r6, r0
   10e04:	add	r1, sl, r1
   10e08:	ldr	r1, [r1, #-20]	; 0xffffffec
   10e0c:	add	r1, r1, r6
   10e10:	add	r0, r1, r0
   10e14:	add	r0, sl, r0
   10e18:	sub	r1, r0, #16
   10e1c:	mov	r0, r5
   10e20:	bl	109ac <printf@plt>
   10e24:	ldr	r0, [r8, #-20]	; 0xffffffec
   10e28:	sub	r0, r6, r0
   10e2c:	add	r0, sl, r0
   10e30:	ldrh	r1, [r0, #-20]	; 0xffffffec
   10e34:	cmp	r1, #8
   10e38:	bcc	110e8 <print_object@@Base+0x3cc>
   10e3c:	ldrh	r0, [r0, #-14]
   10e40:	cmp	r0, #0
   10e44:	beq	110e8 <print_object@@Base+0x3cc>
   10e48:	add	r1, r6, r0
   10e4c:	add	r1, sl, r1
   10e50:	ldr	r1, [r1, #-20]	; 0xffffffec
   10e54:	add	r1, r1, r6
   10e58:	add	r0, r1, r0
   10e5c:	add	r0, sl, r0
   10e60:	sub	r0, r0, #20
   10e64:	bl	10b74 <print_type@@Base>
   10e68:	ldr	r0, [r8, #-20]	; 0xffffffec
   10e6c:	sub	r1, r6, r0
   10e70:	rsb	r0, r0, #0
   10e74:	add	r1, sl, r1
   10e78:	ldrh	r2, [r1, #-20]	; 0xffffffec
   10e7c:	cmp	r2, #10
   10e80:	bcc	10eb0 <print_object@@Base+0x194>
   10e84:	ldrh	r1, [r1, #-12]
   10e88:	cmp	r1, #0
   10e8c:	beq	10eb0 <print_object@@Base+0x194>
   10e90:	add	r0, r6, r1
   10e94:	add	r0, sl, r0
   10e98:	ldrh	r1, [r0, #-20]	; 0xffffffec
   10e9c:	movw	r0, #6685	; 0x1a1d
   10ea0:	movt	r0, #1
   10ea4:	bl	109ac <printf@plt>
   10ea8:	ldr	r0, [r8, #-20]	; 0xffffffec
   10eac:	rsb	r0, r0, #0
   10eb0:	add	r1, r0, r6
   10eb4:	add	r1, sl, r1
   10eb8:	ldrh	r2, [r1, #-20]	; 0xffffffec
   10ebc:	cmp	r2, #14
   10ec0:	bcc	10ef0 <print_object@@Base+0x1d4>
   10ec4:	ldrh	r1, [r1, #-8]
   10ec8:	cmp	r1, #0
   10ecc:	beq	10ef0 <print_object@@Base+0x1d4>
   10ed0:	add	r0, r6, r1
   10ed4:	add	r0, sl, r0
   10ed8:	ldrd	r2, [r0, #-20]	; 0xffffffec
   10edc:	movw	r0, #6695	; 0x1a27
   10ee0:	movt	r0, #1
   10ee4:	bl	109ac <printf@plt>
   10ee8:	ldr	r0, [r8, #-20]	; 0xffffffec
   10eec:	rsb	r0, r0, #0
   10ef0:	add	r1, r0, r6
   10ef4:	add	r1, sl, r1
   10ef8:	ldrh	r2, [r1, #-20]	; 0xffffffec
   10efc:	cmp	r2, #16
   10f00:	bcc	10f34 <print_object@@Base+0x218>
   10f04:	ldrh	r1, [r1, #-6]
   10f08:	cmp	r1, #0
   10f0c:	beq	10f34 <print_object@@Base+0x218>
   10f10:	add	r0, r6, r1
   10f14:	add	r0, sl, r0
   10f18:	vldr	d16, [r0, #-20]	; 0xffffffec
   10f1c:	movw	r0, #6719	; 0x1a3f
   10f20:	movt	r0, #1
   10f24:	vmov	r2, r3, d16
   10f28:	bl	109ac <printf@plt>
   10f2c:	ldr	r0, [r8, #-20]	; 0xffffffec
   10f30:	rsb	r0, r0, #0
   10f34:	add	r1, r0, r6
   10f38:	add	r1, sl, r1
   10f3c:	ldrh	r2, [r1, #-20]	; 0xffffffec
   10f40:	cmp	r2, #20
   10f44:	bcc	10f8c <print_object@@Base+0x270>
   10f48:	ldrh	r1, [r1, #-2]
   10f4c:	cmp	r1, #0
   10f50:	beq	10f8c <print_object@@Base+0x270>
   10f54:	add	r0, r6, r1
   10f58:	movw	r1, #6757	; 0x1a65
   10f5c:	add	r0, sl, r0
   10f60:	movt	r1, #1
   10f64:	ldrb	r0, [r0, #-20]	; 0xffffffec
   10f68:	cmp	r0, #0
   10f6c:	movw	r0, #6762	; 0x1a6a
   10f70:	movt	r0, #1
   10f74:	moveq	r1, r0
   10f78:	movw	r0, #6742	; 0x1a56
   10f7c:	movt	r0, #1
   10f80:	bl	109ac <printf@plt>
   10f84:	ldr	r0, [r8, #-20]	; 0xffffffec
   10f88:	rsb	r0, r0, #0
   10f8c:	add	r0, r0, r6
   10f90:	add	r0, sl, r0
   10f94:	ldrh	r1, [r0, #-20]	; 0xffffffec
   10f98:	cmp	r1, #22
   10f9c:	bcc	10fdc <print_object@@Base+0x2c0>
   10fa0:	ldrh	r0, [r0]
   10fa4:	cmp	r0, #0
   10fa8:	beq	10fdc <print_object@@Base+0x2c0>
   10fac:	add	r0, r6, r0
   10fb0:	movw	r1, #6757	; 0x1a65
   10fb4:	add	r0, sl, r0
   10fb8:	movt	r1, #1
   10fbc:	ldrb	r0, [r0, #-20]	; 0xffffffec
   10fc0:	cmp	r0, #0
   10fc4:	movw	r0, #6762	; 0x1a6a
   10fc8:	movt	r0, #1
   10fcc:	moveq	r1, r0
   10fd0:	movw	r0, #6768	; 0x1a70
   10fd4:	movt	r0, #1
   10fd8:	bl	109ac <printf@plt>
   10fdc:	mov	r0, #125	; 0x7d
   10fe0:	bl	10a3c <putchar@plt>
   10fe4:	ldr	r0, [r4, r9]
   10fe8:	add	r7, r7, #1
   10fec:	add	sl, sl, #4
   10ff0:	cmp	r7, r0
   10ff4:	bcc	10db8 <print_object@@Base+0x9c>
   10ff8:	mov	r0, #93	; 0x5d
   10ffc:	bl	10a3c <putchar@plt>
   11000:	ldr	r4, [sp]
   11004:	ldr	r0, [r4]
   11008:	mov	r1, r4
   1100c:	ldrh	r2, [r1, -r0]!
   11010:	rsb	r0, r0, #0
   11014:	cmp	r2, #10
   11018:	bcc	11058 <print_object@@Base+0x33c>
   1101c:	ldrh	r1, [r1, #8]
   11020:	cmp	r1, #0
   11024:	beq	11058 <print_object@@Base+0x33c>
   11028:	ldrb	r0, [r4, r1]
   1102c:	movw	r2, #6762	; 0x1a6a
   11030:	movw	r1, #6757	; 0x1a65
   11034:	movt	r2, #1
   11038:	movt	r1, #1
   1103c:	cmp	r0, #0
   11040:	movw	r0, #6778	; 0x1a7a
   11044:	movt	r0, #1
   11048:	moveq	r1, r2
   1104c:	bl	109ac <printf@plt>
   11050:	ldr	r0, [r4]
   11054:	rsb	r0, r0, #0
   11058:	mov	r1, r4
   1105c:	ldrh	r2, [r1, r0]!
   11060:	cmp	r2, #12
   11064:	bcc	1108c <print_object@@Base+0x370>
   11068:	ldrh	r1, [r1, #10]
   1106c:	cmp	r1, #0
   11070:	beq	1108c <print_object@@Base+0x370>
   11074:	ldr	r1, [r4, r1]
   11078:	movw	r0, #6794	; 0x1a8a
   1107c:	movt	r0, #1
   11080:	bl	109ac <printf@plt>
   11084:	ldr	r0, [r4]
   11088:	rsb	r0, r0, #0
   1108c:	mov	r1, r4
   11090:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   11094:	cmp	r0, #14
   11098:	bcc	110b8 <print_object@@Base+0x39c>
   1109c:	ldrh	r0, [r1, #12]
   110a0:	cmp	r0, #0
   110a4:	beq	110b8 <print_object@@Base+0x39c>
   110a8:	ldr	r1, [r4, r0]
   110ac:	movw	r0, #6809	; 0x1a99
   110b0:	movt	r0, #1
   110b4:	bl	109ac <printf@plt>
   110b8:	mov	r0, #125	; 0x7d
   110bc:	sub	sp, fp, #28
   110c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110c4:	b	10a3c <putchar@plt>
   110c8:	movw	r0, #7747	; 0x1e43
   110cc:	movw	r1, #7435	; 0x1d0b
   110d0:	movw	r3, #7987	; 0x1f33
   110d4:	mov	r2, #195	; 0xc3
   110d8:	movt	r0, #1
   110dc:	movt	r1, #1
   110e0:	movt	r3, #1
   110e4:	bl	10a78 <__assert_fail@plt>
   110e8:	movw	r0, #7747	; 0x1e43
   110ec:	movw	r1, #7435	; 0x1d0b
   110f0:	movw	r3, #8056	; 0x1f78
   110f4:	mov	r2, #201	; 0xc9
   110f8:	movt	r0, #1
   110fc:	movt	r1, #1
   11100:	movt	r3, #1
   11104:	bl	10a78 <__assert_fail@plt>
   11108:	movw	r0, #7851	; 0x1eab
   1110c:	movw	r1, #7435	; 0x1d0b
   11110:	movw	r3, #7906	; 0x1ee2
   11114:	mov	r2, #192	; 0xc0
   11118:	movt	r0, #1
   1111c:	movt	r1, #1
   11120:	movt	r3, #1
   11124:	bl	10a78 <__assert_fail@plt>
   11128:	movw	r0, #7747	; 0x1e43
   1112c:	movt	r0, #1
   11130:	b	1113c <print_object@@Base+0x420>
   11134:	movw	r0, #7397	; 0x1ce5
   11138:	movt	r0, #1
   1113c:	movw	r1, #7435	; 0x1d0b
   11140:	movw	r3, #7672	; 0x1df8
   11144:	mov	r2, #224	; 0xe0
   11148:	movt	r1, #1
   1114c:	movt	r3, #1
   11150:	bl	10a78 <__assert_fail@plt>
   11154:	movw	r0, #7747	; 0x1e43
   11158:	movw	r1, #7435	; 0x1d0b
   1115c:	movw	r3, #7780	; 0x1e64
   11160:	mov	r2, #218	; 0xda
   11164:	movt	r0, #1
   11168:	movt	r1, #1
   1116c:	movt	r3, #1
   11170:	bl	10a78 <__assert_fail@plt>

00011174 <print_enum@@Base>:
   11174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11178:	add	fp, sp, #28
   1117c:	sub	sp, sp, #4
   11180:	cmp	r0, #0
   11184:	beq	11460 <print_enum@@Base+0x2ec>
   11188:	ldr	r1, [r0]
   1118c:	mov	r4, r0
   11190:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   11194:	cmp	r1, #6
   11198:	bcc	11414 <print_enum@@Base+0x2a0>
   1119c:	ldrh	r0, [r0, #4]
   111a0:	cmp	r0, #0
   111a4:	beq	11414 <print_enum@@Base+0x2a0>
   111a8:	mov	r1, r4
   111ac:	ldr	r0, [r1, r0]!
   111b0:	add	r0, r1, r0
   111b4:	add	r1, r0, #4
   111b8:	movw	r0, #6639	; 0x19ef
   111bc:	movt	r0, #1
   111c0:	bl	109ac <printf@plt>
   111c4:	ldr	r1, [r4]
   111c8:	mov	r0, r4
   111cc:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   111d0:	cmp	r1, #8
   111d4:	bcc	11420 <print_enum@@Base+0x2ac>
   111d8:	ldrh	r5, [r0, #6]
   111dc:	cmp	r5, #0
   111e0:	beq	11420 <print_enum@@Base+0x2ac>
   111e4:	movw	r0, #6824	; 0x1aa8
   111e8:	str	r4, [sp]
   111ec:	ldr	r7, [r4, r5]!
   111f0:	movt	r0, #1
   111f4:	bl	109ac <printf@plt>
   111f8:	ldr	r0, [r4, r7]
   111fc:	cmp	r0, #0
   11200:	beq	11358 <print_enum@@Base+0x1e4>
   11204:	ldr	r1, [sp]
   11208:	add	r0, r7, r5
   1120c:	movw	r5, #6639	; 0x19ef
   11210:	mov	r8, #0
   11214:	movt	r5, #1
   11218:	add	r0, r0, r1
   1121c:	add	r6, r0, #12
   11220:	ldr	r9, [r6, #-8]
   11224:	cmp	r8, #0
   11228:	beq	11234 <print_enum@@Base+0xc0>
   1122c:	mov	r0, #44	; 0x2c
   11230:	bl	10a3c <putchar@plt>
   11234:	add	sl, r6, r9
   11238:	ldr	r0, [sl, #-8]
   1123c:	sub	r0, r9, r0
   11240:	add	r0, r6, r0
   11244:	ldrh	r1, [r0, #-8]
   11248:	cmp	r1, #6
   1124c:	bcc	113f4 <print_enum@@Base+0x280>
   11250:	ldrh	r0, [r0, #-4]
   11254:	cmp	r0, #0
   11258:	beq	113f4 <print_enum@@Base+0x280>
   1125c:	add	r1, r9, r0
   11260:	add	r1, r6, r1
   11264:	ldr	r1, [r1, #-8]
   11268:	add	r1, r1, r9
   1126c:	add	r0, r1, r0
   11270:	add	r0, r6, r0
   11274:	sub	r1, r0, #4
   11278:	mov	r0, r5
   1127c:	bl	109ac <printf@plt>
   11280:	ldr	r0, [sl, #-8]
   11284:	sub	r1, r9, r0
   11288:	rsb	r0, r0, #0
   1128c:	add	r1, r6, r1
   11290:	ldrh	r2, [r1, #-8]
   11294:	cmp	r2, #8
   11298:	bcc	112c8 <print_enum@@Base+0x154>
   1129c:	ldrh	r1, [r1, #-2]
   112a0:	cmp	r1, #0
   112a4:	beq	112c8 <print_enum@@Base+0x154>
   112a8:	add	r0, r9, r1
   112ac:	add	r0, r6, r0
   112b0:	ldrd	r2, [r0, #-8]
   112b4:	movw	r0, #6836	; 0x1ab4
   112b8:	movt	r0, #1
   112bc:	bl	109ac <printf@plt>
   112c0:	ldr	r0, [sl, #-8]
   112c4:	rsb	r0, r0, #0
   112c8:	add	r0, r0, r9
   112cc:	add	r0, r6, r0
   112d0:	ldrh	r1, [r0, #-8]
   112d4:	cmp	r1, #10
   112d8:	bcc	1133c <print_enum@@Base+0x1c8>
   112dc:	ldrh	r0, [r0]
   112e0:	cmp	r0, #0
   112e4:	beq	1133c <print_enum@@Base+0x1c8>
   112e8:	movw	r0, #6850	; 0x1ac2
   112ec:	movt	r0, #1
   112f0:	bl	109ac <printf@plt>
   112f4:	ldr	r0, [sl, #-8]
   112f8:	sub	r0, r9, r0
   112fc:	add	r1, r6, r0
   11300:	mov	r0, #0
   11304:	ldrh	r2, [r1, #-8]
   11308:	cmp	r2, #10
   1130c:	bcc	11338 <print_enum@@Base+0x1c4>
   11310:	ldrh	r1, [r1]
   11314:	cmp	r1, #0
   11318:	beq	11338 <print_enum@@Base+0x1c4>
   1131c:	add	r0, r9, r1
   11320:	add	r0, r6, r0
   11324:	ldr	r0, [r0, #-8]
   11328:	add	r0, r0, r9
   1132c:	add	r0, r0, r1
   11330:	add	r0, r6, r0
   11334:	sub	r0, r0, #8
   11338:	bl	10d1c <print_object@@Base>
   1133c:	mov	r0, #125	; 0x7d
   11340:	bl	10a3c <putchar@plt>
   11344:	ldr	r0, [r4, r7]
   11348:	add	r8, r8, #1
   1134c:	add	r6, r6, #4
   11350:	cmp	r8, r0
   11354:	bcc	11220 <print_enum@@Base+0xac>
   11358:	mov	r0, #93	; 0x5d
   1135c:	bl	10a3c <putchar@plt>
   11360:	ldr	r4, [sp]
   11364:	ldr	r1, [r4]
   11368:	mov	r0, r4
   1136c:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   11370:	cmp	r1, #10
   11374:	bcc	113ac <print_enum@@Base+0x238>
   11378:	ldrh	r0, [r0, #8]
   1137c:	cmp	r0, #0
   11380:	beq	113ac <print_enum@@Base+0x238>
   11384:	ldrb	r0, [r4, r0]
   11388:	movw	r2, #6762	; 0x1a6a
   1138c:	movw	r1, #6757	; 0x1a65
   11390:	movt	r2, #1
   11394:	movt	r1, #1
   11398:	cmp	r0, #0
   1139c:	movw	r0, #6861	; 0x1acd
   113a0:	movt	r0, #1
   113a4:	moveq	r1, r2
   113a8:	bl	109ac <printf@plt>
   113ac:	movw	r0, #6876	; 0x1adc
   113b0:	movt	r0, #1
   113b4:	bl	109ac <printf@plt>
   113b8:	ldr	r1, [r4]
   113bc:	mov	r0, r4
   113c0:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   113c4:	cmp	r1, #12
   113c8:	bcc	11440 <print_enum@@Base+0x2cc>
   113cc:	ldrh	r0, [r0, #10]
   113d0:	cmp	r0, #0
   113d4:	beq	11440 <print_enum@@Base+0x2cc>
   113d8:	ldr	r0, [r4, r0]!
   113dc:	add	r0, r4, r0
   113e0:	bl	10b74 <print_type@@Base>
   113e4:	mov	r0, #125	; 0x7d
   113e8:	sub	sp, fp, #28
   113ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113f0:	b	10a3c <putchar@plt>
   113f4:	movw	r0, #7747	; 0x1e43
   113f8:	movw	r1, #7435	; 0x1d0b
   113fc:	movw	r3, #8268	; 0x204c
   11400:	mov	r2, #159	; 0x9f
   11404:	movt	r0, #1
   11408:	movt	r1, #1
   1140c:	movt	r3, #1
   11410:	bl	10a78 <__assert_fail@plt>
   11414:	movw	r0, #7747	; 0x1e43
   11418:	movt	r0, #1
   1141c:	b	11468 <print_enum@@Base+0x2f4>
   11420:	movw	r0, #7747	; 0x1e43
   11424:	movw	r1, #7435	; 0x1d0b
   11428:	movw	r3, #8195	; 0x2003
   1142c:	mov	r2, #183	; 0xb7
   11430:	movt	r0, #1
   11434:	movt	r1, #1
   11438:	movt	r3, #1
   1143c:	bl	10a78 <__assert_fail@plt>
   11440:	movw	r0, #7747	; 0x1e43
   11444:	movw	r1, #7435	; 0x1d0b
   11448:	movw	r3, #8341	; 0x2095
   1144c:	mov	r2, #185	; 0xb9
   11450:	movt	r0, #1
   11454:	movt	r1, #1
   11458:	movt	r3, #1
   1145c:	bl	10a78 <__assert_fail@plt>
   11460:	movw	r0, #7397	; 0x1ce5
   11464:	movt	r0, #1
   11468:	movw	r1, #7435	; 0x1d0b
   1146c:	movw	r3, #8128	; 0x1fc0
   11470:	mov	r2, #177	; 0xb1
   11474:	movt	r1, #1
   11478:	movt	r3, #1
   1147c:	bl	10a78 <__assert_fail@plt>

00011480 <print_schema@@Base>:
   11480:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11484:	add	fp, sp, #24
   11488:	cmp	r0, #0
   1148c:	beq	11728 <print_schema@@Base+0x2a8>
   11490:	ldr	r1, [r0]
   11494:	mov	r8, r0
   11498:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   1149c:	cmp	r1, #6
   114a0:	bcc	116fc <print_schema@@Base+0x27c>
   114a4:	ldrh	r4, [r0, #4]
   114a8:	cmp	r4, #0
   114ac:	beq	116fc <print_schema@@Base+0x27c>
   114b0:	mov	r5, r8
   114b4:	mov	r0, #123	; 0x7b
   114b8:	ldr	r9, [r5, r4]!
   114bc:	bl	10a3c <putchar@plt>
   114c0:	movw	r0, #6896	; 0x1af0
   114c4:	movt	r0, #1
   114c8:	bl	109ac <printf@plt>
   114cc:	ldr	r0, [r5, r9]
   114d0:	cmp	r0, #0
   114d4:	beq	1152c <print_schema@@Base+0xac>
   114d8:	add	r1, r9, r4
   114dc:	mov	r4, #0
   114e0:	mov	r6, #0
   114e4:	add	r1, r1, r8
   114e8:	add	r7, r1, #4
   114ec:	cmp	r6, #0
   114f0:	beq	11500 <print_schema@@Base+0x80>
   114f4:	mov	r0, #44	; 0x2c
   114f8:	bl	10a3c <putchar@plt>
   114fc:	ldr	r0, [r5, r9]
   11500:	cmp	r0, r6
   11504:	bls	116bc <print_schema@@Base+0x23c>
   11508:	ldr	r0, [r7, r6, lsl #2]
   1150c:	add	r0, r4, r0
   11510:	add	r0, r7, r0
   11514:	bl	10d1c <print_object@@Base>
   11518:	ldr	r0, [r5, r9]
   1151c:	add	r6, r6, #1
   11520:	add	r4, r4, #4
   11524:	cmp	r6, r0
   11528:	bcc	114ec <print_schema@@Base+0x6c>
   1152c:	mov	r0, #93	; 0x5d
   11530:	bl	10a3c <putchar@plt>
   11534:	ldr	r1, [r8]
   11538:	mov	r0, r8
   1153c:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   11540:	cmp	r1, #8
   11544:	bcc	11708 <print_schema@@Base+0x288>
   11548:	ldrh	r4, [r0, #6]
   1154c:	cmp	r4, #0
   11550:	beq	11708 <print_schema@@Base+0x288>
   11554:	mov	r5, r8
   11558:	movw	r0, #6908	; 0x1afc
   1155c:	ldr	r9, [r5, r4]!
   11560:	movt	r0, #1
   11564:	bl	109ac <printf@plt>
   11568:	ldr	r0, [r5, r9]
   1156c:	cmp	r0, #0
   11570:	beq	115c8 <print_schema@@Base+0x148>
   11574:	add	r1, r9, r4
   11578:	mov	r4, #0
   1157c:	mov	r6, #0
   11580:	add	r1, r1, r8
   11584:	add	r7, r1, #4
   11588:	cmp	r6, #0
   1158c:	beq	1159c <print_schema@@Base+0x11c>
   11590:	mov	r0, #44	; 0x2c
   11594:	bl	10a3c <putchar@plt>
   11598:	ldr	r0, [r5, r9]
   1159c:	cmp	r0, r6
   115a0:	bls	116dc <print_schema@@Base+0x25c>
   115a4:	ldr	r0, [r7, r6, lsl #2]
   115a8:	add	r0, r4, r0
   115ac:	add	r0, r7, r0
   115b0:	bl	11174 <print_enum@@Base>
   115b4:	ldr	r0, [r5, r9]
   115b8:	add	r6, r6, #1
   115bc:	add	r4, r4, #4
   115c0:	cmp	r6, r0
   115c4:	bcc	11588 <print_schema@@Base+0x108>
   115c8:	mov	r0, #93	; 0x5d
   115cc:	bl	10a3c <putchar@plt>
   115d0:	ldr	r0, [r8]
   115d4:	mov	r1, r8
   115d8:	ldrh	r2, [r1, -r0]!
   115dc:	rsb	r0, r0, #0
   115e0:	cmp	r2, #10
   115e4:	bcc	11618 <print_schema@@Base+0x198>
   115e8:	ldrh	r1, [r1, #8]
   115ec:	cmp	r1, #0
   115f0:	beq	11618 <print_schema@@Base+0x198>
   115f4:	mov	r0, r8
   115f8:	ldr	r1, [r0, r1]!
   115fc:	add	r0, r0, r1
   11600:	add	r1, r0, #4
   11604:	movw	r0, #6919	; 0x1b07
   11608:	movt	r0, #1
   1160c:	bl	109ac <printf@plt>
   11610:	ldr	r0, [r8]
   11614:	rsb	r0, r0, #0
   11618:	mov	r1, r8
   1161c:	ldrh	r2, [r1, r0]!
   11620:	cmp	r2, #12
   11624:	bcc	11658 <print_schema@@Base+0x1d8>
   11628:	ldrh	r1, [r1, #10]
   1162c:	cmp	r1, #0
   11630:	beq	11658 <print_schema@@Base+0x1d8>
   11634:	mov	r0, r8
   11638:	ldr	r1, [r0, r1]!
   1163c:	add	r0, r0, r1
   11640:	add	r1, r0, #4
   11644:	movw	r0, #6938	; 0x1b1a
   11648:	movt	r0, #1
   1164c:	bl	109ac <printf@plt>
   11650:	ldr	r0, [r8]
   11654:	rsb	r0, r0, #0
   11658:	mov	r1, r8
   1165c:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   11660:	cmp	r0, #14
   11664:	bcc	116ac <print_schema@@Base+0x22c>
   11668:	ldrh	r0, [r1, #12]
   1166c:	cmp	r0, #0
   11670:	beq	116ac <print_schema@@Base+0x22c>
   11674:	movw	r0, #6955	; 0x1b2b
   11678:	movt	r0, #1
   1167c:	bl	109ac <printf@plt>
   11680:	ldr	r0, [r8]
   11684:	mov	r1, r8
   11688:	ldrh	r2, [r1, -r0]!
   1168c:	mov	r0, #0
   11690:	cmp	r2, #14
   11694:	bcc	116a8 <print_schema@@Base+0x228>
   11698:	ldrh	r1, [r1, #12]
   1169c:	cmp	r1, #0
   116a0:	ldrne	r0, [r8, r1]!
   116a4:	addne	r0, r8, r0
   116a8:	bl	10d1c <print_object@@Base>
   116ac:	movw	r0, #8737	; 0x2221
   116b0:	movt	r0, #1
   116b4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   116b8:	b	109f4 <puts@plt>
   116bc:	movw	r0, #7851	; 0x1eab
   116c0:	movw	r1, #7435	; 0x1d0b
   116c4:	movw	r3, #8499	; 0x2133
   116c8:	mov	r2, #215	; 0xd7
   116cc:	movt	r0, #1
   116d0:	movt	r1, #1
   116d4:	movt	r3, #1
   116d8:	bl	10a78 <__assert_fail@plt>
   116dc:	movw	r0, #7851	; 0x1eab
   116e0:	movw	r1, #7435	; 0x1d0b
   116e4:	movw	r3, #8656	; 0x21d0
   116e8:	mov	r2, #174	; 0xae
   116ec:	movt	r0, #1
   116f0:	movt	r1, #1
   116f4:	movt	r3, #1
   116f8:	bl	10a78 <__assert_fail@plt>
   116fc:	movw	r0, #7747	; 0x1e43
   11700:	movt	r0, #1
   11704:	b	11730 <print_schema@@Base+0x2b0>
   11708:	movw	r0, #7747	; 0x1e43
   1170c:	movw	r1, #7435	; 0x1d0b
   11710:	movw	r3, #8583	; 0x2187
   11714:	mov	r2, #238	; 0xee
   11718:	movt	r0, #1
   1171c:	movt	r1, #1
   11720:	movt	r3, #1
   11724:	bl	10a78 <__assert_fail@plt>
   11728:	movw	r0, #7397	; 0x1ce5
   1172c:	movt	r0, #1
   11730:	movw	r1, #7435	; 0x1d0b
   11734:	movw	r3, #8422	; 0x20e6
   11738:	mov	r2, #237	; 0xed
   1173c:	movt	r1, #1
   11740:	movt	r3, #1
   11744:	bl	10a78 <__assert_fail@plt>

00011748 <load_and_dump_schema@@Base>:
   11748:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1174c:	add	fp, sp, #24
   11750:	movw	r1, #8734	; 0x221e
   11754:	mov	r8, r0
   11758:	movt	r1, #1
   1175c:	bl	109b8 <fopen@plt>
   11760:	cmp	r0, #0
   11764:	beq	1183c <load_and_dump_schema@@Base+0xf4>
   11768:	mov	r1, #0
   1176c:	mov	r2, #2
   11770:	mov	r6, r0
   11774:	bl	10a60 <fseek@plt>
   11778:	mov	r0, r6
   1177c:	bl	109d0 <ftell@plt>
   11780:	mov	r7, r0
   11784:	movw	r0, #10000	; 0x2710
   11788:	cmp	r7, r0
   1178c:	bhi	11828 <load_and_dump_schema@@Base+0xe0>
   11790:	mov	r0, r6
   11794:	bl	109dc <rewind@plt>
   11798:	cmp	r7, #0
   1179c:	mov	r0, r7
   117a0:	movweq	r0, #1
   117a4:	bl	10a00 <malloc@plt>
   117a8:	cmp	r0, #0
   117ac:	beq	11828 <load_and_dump_schema@@Base+0xe0>
   117b0:	mov	r4, r0
   117b4:	mov	r1, #0
   117b8:	mov	r5, r1
   117bc:	add	r0, r4, r1
   117c0:	sub	r2, r7, r1
   117c4:	mov	r1, #1
   117c8:	mov	r3, r6
   117cc:	bl	10a54 <fread_unlocked@plt>
   117d0:	add	r1, r0, r5
   117d4:	cmp	r0, #0
   117d8:	bne	117b8 <load_and_dump_schema@@Base+0x70>
   117dc:	mov	r0, r6
   117e0:	bl	10a48 <fclose@plt>
   117e4:	cmp	r7, r5
   117e8:	bne	11834 <load_and_dump_schema@@Base+0xec>
   117ec:	cmp	r7, #11
   117f0:	bls	11864 <load_and_dump_schema@@Base+0x11c>
   117f4:	mov	r5, r4
   117f8:	movw	r0, #17986	; 0x4642
   117fc:	ldr	r6, [r5, #4]!
   11800:	movt	r0, #21314	; 0x5342
   11804:	cmp	r6, r0
   11808:	bne	11884 <load_and_dump_schema@@Base+0x13c>
   1180c:	ldr	r0, [r4]
   11810:	add	r0, r4, r0
   11814:	bl	11480 <print_schema@@Base>
   11818:	mov	r5, #0
   1181c:	mov	r0, r4
   11820:	bl	109c4 <free@plt>
   11824:	b	1185c <load_and_dump_schema@@Base+0x114>
   11828:	mov	r0, r6
   1182c:	bl	10a48 <fclose@plt>
   11830:	b	1183c <load_and_dump_schema@@Base+0xf4>
   11834:	mov	r0, r4
   11838:	bl	109c4 <free@plt>
   1183c:	movw	r0, #12384	; 0x3060
   11840:	movw	r1, #6970	; 0x1b3a
   11844:	mov	r2, r8
   11848:	movt	r0, #2
   1184c:	movt	r1, #1
   11850:	ldr	r0, [r0]
   11854:	bl	10a30 <fprintf@plt>
   11858:	mvn	r5, #0
   1185c:	mov	r0, r5
   11860:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11864:	movw	r0, #12384	; 0x3060
   11868:	movw	r1, #7011	; 0x1b63
   1186c:	mov	r2, r8
   11870:	movt	r0, #2
   11874:	movt	r1, #1
   11878:	ldr	r0, [r0]
   1187c:	bl	10a30 <fprintf@plt>
   11880:	b	118d8 <load_and_dump_schema@@Base+0x190>
   11884:	ldr	r1, [r4, #8]
   11888:	cmp	r1, r0
   1188c:	bne	118b8 <load_and_dump_schema@@Base+0x170>
   11890:	movw	r0, #12384	; 0x3060
   11894:	mov	r1, #40	; 0x28
   11898:	mov	r2, #1
   1189c:	movt	r0, #2
   118a0:	ldr	r3, [r0]
   118a4:	movw	r0, #7043	; 0x1b83
   118a8:	movt	r0, #1
   118ac:	bl	109e8 <fwrite@plt>
   118b0:	add	r0, r5, r6
   118b4:	b	11814 <load_and_dump_schema@@Base+0xcc>
   118b8:	movw	r0, #12384	; 0x3060
   118bc:	mov	r1, #27
   118c0:	mov	r2, #1
   118c4:	movt	r0, #2
   118c8:	ldr	r3, [r0]
   118cc:	movw	r0, #7084	; 0x1bac
   118d0:	movt	r0, #1
   118d4:	bl	109e8 <fwrite@plt>
   118d8:	mvn	r5, #0
   118dc:	b	1181c <load_and_dump_schema@@Base+0xd4>

000118e0 <main@@Base>:
   118e0:	push	{r4, sl, fp, lr}
   118e4:	add	fp, sp, #8
   118e8:	cmp	r0, #2
   118ec:	bne	118fc <main@@Base+0x1c>
   118f0:	ldr	r0, [r1, #4]
   118f4:	pop	{r4, sl, fp, lr}
   118f8:	b	11748 <load_and_dump_schema@@Base>
   118fc:	movw	r4, #12384	; 0x3060
   11900:	movw	r0, #7112	; 0x1bc8
   11904:	mov	r1, #28
   11908:	mov	r2, #1
   1190c:	movt	r4, #2
   11910:	movt	r0, #1
   11914:	ldr	r3, [r4]
   11918:	bl	109e8 <fwrite@plt>
   1191c:	ldr	r3, [r4]
   11920:	movw	r0, #7141	; 0x1be5
   11924:	mov	r1, #74	; 0x4a
   11928:	mov	r2, #1
   1192c:	movt	r0, #1
   11930:	bl	109e8 <fwrite@plt>
   11934:	ldr	r3, [r4]
   11938:	movw	r0, #7216	; 0x1c30
   1193c:	mov	r1, #180	; 0xb4
   11940:	mov	r2, #1
   11944:	movt	r0, #1
   11948:	bl	109e8 <fwrite@plt>
   1194c:	mvn	r0, #0
   11950:	bl	10a24 <exit@plt>

00011954 <__libc_csu_init@@Base>:
   11954:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11958:	mov	r7, r0
   1195c:	ldr	r6, [pc, #72]	; 119ac <__libc_csu_init@@Base+0x58>
   11960:	ldr	r5, [pc, #72]	; 119b0 <__libc_csu_init@@Base+0x5c>
   11964:	add	r6, pc, r6
   11968:	add	r5, pc, r5
   1196c:	sub	r6, r6, r5
   11970:	mov	r8, r1
   11974:	mov	r9, r2
   11978:	bl	1098c <printf@plt-0x20>
   1197c:	asrs	r6, r6, #2
   11980:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11984:	mov	r4, #0
   11988:	add	r4, r4, #1
   1198c:	ldr	r3, [r5], #4
   11990:	mov	r2, r9
   11994:	mov	r1, r8
   11998:	mov	r0, r7
   1199c:	blx	r3
   119a0:	cmp	r6, r4
   119a4:	bne	11988 <__libc_csu_init@@Base+0x34>
   119a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119ac:	andeq	r1, r1, r0, lsr #11
   119b0:	muleq	r1, r8, r5

000119b4 <__libc_csu_fini@@Base>:
   119b4:	bx	lr

Disassembly of section .fini:

000119b8 <.fini>:
   119b8:	push	{r3, lr}
   119bc:	pop	{r3, pc}
