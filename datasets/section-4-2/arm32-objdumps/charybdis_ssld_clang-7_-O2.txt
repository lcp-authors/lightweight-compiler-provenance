
../repos/charybdis/ssld/.libs/ssld:     file format elf32-littlearm


Disassembly of section .init:

0001108c <.init>:
   1108c:	push	{r3, lr}
   11090:	bl	11400 <__errno_location@plt+0x48>
   11094:	pop	{r3, pc}

Disassembly of section .plt:

00011098 <open@plt-0x14>:
   11098:	push	{lr}		; (str lr, [sp, #-4]!)
   1109c:	ldr	lr, [pc, #4]	; 110a8 <open@plt-0x4>
   110a0:	add	lr, pc, lr
   110a4:	ldr	pc, [lr, #8]!
   110a8:	andeq	r2, r1, r8, asr pc

000110ac <open@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #73728	; 0x12000
   110b4:	ldr	pc, [ip, #3928]!	; 0xf58

000110b8 <sigemptyset@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #73728	; 0x12000
   110c0:	ldr	pc, [ip, #3920]!	; 0xf50

000110c4 <strerror@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #73728	; 0x12000
   110cc:	ldr	pc, [ip, #3912]!	; 0xf48

000110d0 <rb_get_type@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #73728	; 0x12000
   110d8:	ldr	pc, [ip, #3904]!	; 0xf40

000110dc <zError@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #73728	; 0x12000
   110e4:	ldr	pc, [ip, #3896]!	; 0xf38

000110e8 <abort@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #73728	; 0x12000
   110f0:	ldr	pc, [ip, #3888]!	; 0xf30

000110f4 <rb_event_addish@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #73728	; 0x12000
   110fc:	ldr	pc, [ip, #3880]!	; 0xf28

00011100 <rb_ignore_errno@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #73728	; 0x12000
   11108:	ldr	pc, [ip, #3872]!	; 0xf20

0001110c <rb_lib_version@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #73728	; 0x12000
   11114:	ldr	pc, [ip, #3864]!	; 0xf18

00011118 <inflateEnd@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #73728	; 0x12000
   11120:	ldr	pc, [ip, #3856]!	; 0xf10

00011124 <__libc_start_main@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #73728	; 0x12000
   1112c:	ldr	pc, [ip, #3848]!	; 0xf08

00011130 <rb_setselect@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #73728	; 0x12000
   11138:	ldr	pc, [ip, #3840]!	; 0xf00

0001113c <__gmon_start__@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #73728	; 0x12000
   11144:	ldr	pc, [ip, #3832]!	; 0xef8

00011148 <rb_ssl_handshake_count@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #73728	; 0x12000
   11150:	ldr	pc, [ip, #3824]!	; 0xef0

00011154 <rb_send_fd_buf@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #73728	; 0x12000
   1115c:	ldr	pc, [ip, #3816]!	; 0xee8

00011160 <vsnprintf@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #73728	; 0x12000
   11168:	ldr	pc, [ip, #3808]!	; 0xee0

0001116c <strncpy@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #73728	; 0x12000
   11174:	ldr	pc, [ip, #3800]!	; 0xed8

00011178 <getenv@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #73728	; 0x12000
   11180:	ldr	pc, [ip, #3792]!	; 0xed0

00011184 <deflate@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #73728	; 0x12000
   1118c:	ldr	pc, [ip, #3784]!	; 0xec8

00011190 <deflateInit_@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #73728	; 0x12000
   11198:	ldr	pc, [ip, #3776]!	; 0xec0

0001119c <calloc@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #73728	; 0x12000
   111a4:	ldr	pc, [ip, #3768]!	; 0xeb8

000111a8 <rb_set_nb@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #73728	; 0x12000
   111b0:	ldr	pc, [ip, #3760]!	; 0xeb0

000111b4 <memset@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #73728	; 0x12000
   111bc:	ldr	pc, [ip, #3752]!	; 0xea8

000111c0 <rb_strlcpy@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #73728	; 0x12000
   111c8:	ldr	pc, [ip, #3744]!	; 0xea0

000111cc <rb_get_ssl_certfp@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #73728	; 0x12000
   111d4:	ldr	pc, [ip, #3736]!	; 0xe98

000111d8 <inflate@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #73728	; 0x12000
   111e0:	ldr	pc, [ip, #3728]!	; 0xe90

000111e4 <rb_init_rawbuffers@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #73728	; 0x12000
   111ec:	ldr	pc, [ip, #3720]!	; 0xe88

000111f0 <free@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #73728	; 0x12000
   111f8:	ldr	pc, [ip, #3712]!	; 0xe80

000111fc <rb_lib_loop@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #73728	; 0x12000
   11204:	ldr	pc, [ip, #3704]!	; 0xe78

00011208 <deflateEnd@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #73728	; 0x12000
   11210:	ldr	pc, [ip, #3696]!	; 0xe70

00011214 <rb_read@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #73728	; 0x12000
   1121c:	ldr	pc, [ip, #3688]!	; 0xe68

00011220 <rb_set_type@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #73728	; 0x12000
   11228:	ldr	pc, [ip, #3680]!	; 0xe60

0001122c <strlen@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #73728	; 0x12000
   11234:	ldr	pc, [ip, #3672]!	; 0xe58

00011238 <rb_ssl_get_cipher@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #73728	; 0x12000
   11240:	ldr	pc, [ip, #3664]!	; 0xe50

00011244 <memcpy@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #73728	; 0x12000
   1124c:	ldr	pc, [ip, #3656]!	; 0xe48

00011250 <rb_close@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #73728	; 0x12000
   11258:	ldr	pc, [ip, #3648]!	; 0xe40

0001125c <strtol@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #73728	; 0x12000
   11264:	ldr	pc, [ip, #3640]!	; 0xe38

00011268 <sigaddset@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #73728	; 0x12000
   11270:	ldr	pc, [ip, #3632]!	; 0xe30

00011274 <strcpy@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #73728	; 0x12000
   1127c:	ldr	pc, [ip, #3624]!	; 0xe28

00011280 <rb_ssl_clear_handshake_count@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #73728	; 0x12000
   11288:	ldr	pc, [ip, #3616]!	; 0xe20

0001128c <rb_rawbuf_length@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #73728	; 0x12000
   11294:	ldr	pc, [ip, #3608]!	; 0xe18

00011298 <rb_free_rawbuffer@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #73728	; 0x12000
   112a0:	ldr	pc, [ip, #3600]!	; 0xe10

000112a4 <rb_get_ssl_strerror@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #73728	; 0x12000
   112ac:	ldr	pc, [ip, #3592]!	; 0xe08

000112b0 <close@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #73728	; 0x12000
   112b8:	ldr	pc, [ip, #3584]!	; 0xe00

000112bc <fwrite@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #73728	; 0x12000
   112c4:	ldr	pc, [ip, #3576]!	; 0xdf8

000112c8 <rb_init_prng@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #73728	; 0x12000
   112d0:	ldr	pc, [ip, #3568]!	; 0xdf0

000112d4 <rb_outofmemory@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #73728	; 0x12000
   112dc:	ldr	pc, [ip, #3560]!	; 0xde8

000112e0 <rb_supports_ssl@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #73728	; 0x12000
   112e8:	ldr	pc, [ip, #3552]!	; 0xde0

000112ec <sigaction@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #73728	; 0x12000
   112f4:	ldr	pc, [ip, #3544]!	; 0xdd8

000112f8 <rb_ssl_start_connected@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #73728	; 0x12000
   11300:	ldr	pc, [ip, #3536]!	; 0xdd0

00011304 <rb_lib_init@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #73728	; 0x12000
   1130c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011310 <rb_new_rawbuffer@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #73728	; 0x12000
   11318:	ldr	pc, [ip, #3520]!	; 0xdc0

0001131c <rb_open@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #73728	; 0x12000
   11324:	ldr	pc, [ip, #3512]!	; 0xdb8

00011328 <inflateInit_@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #73728	; 0x12000
   11330:	ldr	pc, [ip, #3504]!	; 0xdb0

00011334 <rb_recv_fd_buf@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #73728	; 0x12000
   1133c:	ldr	pc, [ip, #3496]!	; 0xda8

00011340 <rb_ssl_start_accepted@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #73728	; 0x12000
   11348:	ldr	pc, [ip, #3488]!	; 0xda0

0001134c <dup2@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #73728	; 0x12000
   11354:	ldr	pc, [ip, #3480]!	; 0xd98

00011358 <rb_event_add@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #73728	; 0x12000
   11360:	ldr	pc, [ip, #3472]!	; 0xd90

00011364 <snprintf@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #73728	; 0x12000
   1136c:	ldr	pc, [ip, #3464]!	; 0xd88

00011370 <strncmp@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #73728	; 0x12000
   11378:	ldr	pc, [ip, #3456]!	; 0xd80

0001137c <getrlimit@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #73728	; 0x12000
   11384:	ldr	pc, [ip, #3448]!	; 0xd78

00011388 <rb_rawbuf_append@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #73728	; 0x12000
   11390:	ldr	pc, [ip, #3440]!	; 0xd70

00011394 <rb_rawbuf_flush@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #73728	; 0x12000
   1139c:	ldr	pc, [ip, #3432]!	; 0xd68

000113a0 <rb_setup_ssl_server@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #73728	; 0x12000
   113a8:	ldr	pc, [ip, #3424]!	; 0xd60

000113ac <exit@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #73728	; 0x12000
   113b4:	ldr	pc, [ip, #3416]!	; 0xd58

000113b8 <__errno_location@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #73728	; 0x12000
   113c0:	ldr	pc, [ip, #3408]!	; 0xd50

Disassembly of section .text:

000113c4 <.text>:
   113c4:	mov	fp, #0
   113c8:	mov	lr, #0
   113cc:	pop	{r1}		; (ldr r1, [sp], #4)
   113d0:	mov	r2, sp
   113d4:	push	{r2}		; (str r2, [sp, #-4]!)
   113d8:	push	{r0}		; (str r0, [sp, #-4]!)
   113dc:	ldr	ip, [pc, #16]	; 113f4 <__errno_location@plt+0x3c>
   113e0:	push	{ip}		; (str ip, [sp, #-4]!)
   113e4:	ldr	r0, [pc, #12]	; 113f8 <__errno_location@plt+0x40>
   113e8:	ldr	r3, [pc, #12]	; 113fc <__errno_location@plt+0x44>
   113ec:	bl	11124 <__libc_start_main@plt>
   113f0:	bl	110e8 <abort@plt>
   113f4:	andeq	r3, r1, r0, lsl #15
   113f8:			; <UNDEFINED> instruction: 0x000114b4
   113fc:	andeq	r3, r1, r0, lsr #14
   11400:	ldr	r3, [pc, #20]	; 1141c <__errno_location@plt+0x64>
   11404:	ldr	r2, [pc, #20]	; 11420 <__errno_location@plt+0x68>
   11408:	add	r3, pc, r3
   1140c:	ldr	r2, [r3, r2]
   11410:	cmp	r2, #0
   11414:	bxeq	lr
   11418:	b	1113c <__gmon_start__@plt>
   1141c:	strdeq	r2, [r1], -r0
   11420:	andeq	r0, r0, r4, lsl r1
   11424:	ldr	r0, [pc, #24]	; 11444 <__errno_location@plt+0x8c>
   11428:	ldr	r3, [pc, #24]	; 11448 <__errno_location@plt+0x90>
   1142c:	cmp	r3, r0
   11430:	bxeq	lr
   11434:	ldr	r3, [pc, #16]	; 1144c <__errno_location@plt+0x94>
   11438:	cmp	r3, #0
   1143c:	bxeq	lr
   11440:	bx	r3
   11444:	andeq	r4, r2, r4, lsr #2
   11448:	andeq	r4, r2, r4, lsr #2
   1144c:	andeq	r0, r0, r0
   11450:	ldr	r0, [pc, #36]	; 1147c <__errno_location@plt+0xc4>
   11454:	ldr	r1, [pc, #36]	; 11480 <__errno_location@plt+0xc8>
   11458:	sub	r1, r1, r0
   1145c:	asr	r1, r1, #2
   11460:	add	r1, r1, r1, lsr #31
   11464:	asrs	r1, r1, #1
   11468:	bxeq	lr
   1146c:	ldr	r3, [pc, #16]	; 11484 <__errno_location@plt+0xcc>
   11470:	cmp	r3, #0
   11474:	bxeq	lr
   11478:	bx	r3
   1147c:	andeq	r4, r2, r4, lsr #2
   11480:	andeq	r4, r2, r4, lsr #2
   11484:	andeq	r0, r0, r0
   11488:	push	{r4, lr}
   1148c:	ldr	r4, [pc, #24]	; 114ac <__errno_location@plt+0xf4>
   11490:	ldrb	r3, [r4]
   11494:	cmp	r3, #0
   11498:	popne	{r4, pc}
   1149c:	bl	11424 <__errno_location@plt+0x6c>
   114a0:	mov	r3, #1
   114a4:	strb	r3, [r4]
   114a8:	pop	{r4, pc}
   114ac:	andeq	r4, r2, r4, lsr #2
   114b0:	b	11450 <__errno_location@plt+0x98>
   114b4:	push	{r4, r5, fp, lr}
   114b8:	add	fp, sp, #8
   114bc:	sub	sp, sp, #16
   114c0:	sub	sp, sp, #16384	; 0x4000
   114c4:	add	r8, sp, #12
   114c8:	mov	r0, #7
   114cc:	mov	r1, r8
   114d0:	bl	1137c <getrlimit@plt>
   114d4:	ldr	r6, [sp, #12]
   114d8:	cmp	r0, #0
   114dc:	ldr	r0, [pc, #1020]	; 118e0 <__errno_location@plt+0x528>
   114e0:	add	r0, pc, r0
   114e4:	movwne	r6, #65535	; 0xffff
   114e8:	bl	11178 <getenv@plt>
   114ec:	mov	r5, r0
   114f0:	ldr	r0, [pc, #1004]	; 118e4 <__errno_location@plt+0x52c>
   114f4:	add	r0, pc, r0
   114f8:	bl	11178 <getenv@plt>
   114fc:	mov	r4, r0
   11500:	ldr	r0, [pc, #992]	; 118e8 <__errno_location@plt+0x530>
   11504:	add	r0, pc, r0
   11508:	bl	11178 <getenv@plt>
   1150c:	cmp	r5, #0
   11510:	beq	11524 <__errno_location@plt+0x16c>
   11514:	cmp	r4, #0
   11518:	movne	r7, r0
   1151c:	cmpne	r0, #0
   11520:	bne	11564 <__errno_location@plt+0x1ac>
   11524:	ldr	r4, [pc, #1040]	; 1193c <__errno_location@plt+0x584>
   11528:	mov	r1, #50	; 0x32
   1152c:	mov	r2, #1
   11530:	ldr	r4, [pc, r4]
   11534:	ldr	r3, [r4]
   11538:	ldr	r0, [pc, #1024]	; 11940 <__errno_location@plt+0x588>
   1153c:	add	r0, pc, r0
   11540:	bl	112bc <fwrite@plt>
   11544:	ldr	r3, [r4]
   11548:	ldr	r0, [pc, #1012]	; 11944 <__errno_location@plt+0x58c>
   1154c:	mov	r1, #49	; 0x31
   11550:	mov	r2, #1
   11554:	add	r0, pc, r0
   11558:	bl	112bc <fwrite@plt>
   1155c:	mov	r0, #1
   11560:	bl	113ac <exit@plt>
   11564:	mov	r0, r5
   11568:	mov	r1, #0
   1156c:	mov	r2, #10
   11570:	bl	1125c <strtol@plt>
   11574:	mov	r5, r0
   11578:	mov	r0, r4
   1157c:	mov	r1, #0
   11580:	mov	r2, #10
   11584:	bl	1125c <strtol@plt>
   11588:	mov	r4, r0
   1158c:	mov	r0, r7
   11590:	mov	r1, #0
   11594:	mov	r2, #10
   11598:	bl	1125c <strtol@plt>
   1159c:	ldr	r1, [pc, #840]	; 118ec <__errno_location@plt+0x534>
   115a0:	cmp	r6, #4
   115a4:	add	r1, pc, r1
   115a8:	str	r0, [r1]
   115ac:	blt	115d4 <__errno_location@plt+0x21c>
   115b0:	mov	r7, #3
   115b4:	cmp	r5, r7
   115b8:	cmpne	r4, r7
   115bc:	beq	115c8 <__errno_location@plt+0x210>
   115c0:	mov	r0, r7
   115c4:	bl	112b0 <close@plt>
   115c8:	add	r7, r7, #1
   115cc:	cmp	r6, r7
   115d0:	bne	115b4 <__errno_location@plt+0x1fc>
   115d4:	ldr	r0, [pc, #788]	; 118f0 <__errno_location@plt+0x538>
   115d8:	mov	r1, #2
   115dc:	add	r0, pc, r0
   115e0:	bl	110ac <open@plt>
   115e4:	cmp	r0, #0
   115e8:	blt	1163c <__errno_location@plt+0x284>
   115ec:	cmp	r5, #0
   115f0:	mov	r7, r0
   115f4:	cmpne	r4, #0
   115f8:	beq	11608 <__errno_location@plt+0x250>
   115fc:	mov	r0, r7
   11600:	mov	r1, #0
   11604:	bl	1134c <dup2@plt>
   11608:	cmp	r5, #1
   1160c:	cmpne	r4, #1
   11610:	beq	11620 <__errno_location@plt+0x268>
   11614:	mov	r0, r7
   11618:	mov	r1, #1
   1161c:	bl	1134c <dup2@plt>
   11620:	cmp	r5, #2
   11624:	cmpne	r4, #2
   11628:	bne	118c4 <__errno_location@plt+0x50c>
   1162c:	cmp	r7, #3
   11630:	blt	1163c <__errno_location@plt+0x284>
   11634:	mov	r0, r7
   11638:	bl	112b0 <close@plt>
   1163c:	mov	r0, #1
   11640:	add	r7, r8, #4
   11644:	str	r0, [sp, #12]
   11648:	mov	r0, #0
   1164c:	str	r0, [sp, #144]	; 0x90
   11650:	mov	r0, r7
   11654:	bl	110b8 <sigemptyset@plt>
   11658:	mov	r0, r7
   1165c:	mov	r1, #13
   11660:	bl	11268 <sigaddset@plt>
   11664:	mov	r0, r7
   11668:	mov	r1, #14
   1166c:	bl	11268 <sigaddset@plt>
   11670:	mov	r0, r7
   11674:	mov	r1, #5
   11678:	bl	11268 <sigaddset@plt>
   1167c:	mov	r0, r7
   11680:	mov	r1, #28
   11684:	bl	11268 <sigaddset@plt>
   11688:	mov	r0, #28
   1168c:	mov	r1, r8
   11690:	mov	r2, #0
   11694:	bl	112ec <sigaction@plt>
   11698:	mov	r0, #13
   1169c:	mov	r1, r8
   116a0:	mov	r2, #0
   116a4:	bl	112ec <sigaction@plt>
   116a8:	mov	r0, #5
   116ac:	mov	r1, r8
   116b0:	mov	r2, #0
   116b4:	bl	112ec <sigaction@plt>
   116b8:	ldr	r0, [pc, #564]	; 118f4 <__errno_location@plt+0x53c>
   116bc:	mov	r1, r8
   116c0:	mov	r2, #0
   116c4:	add	r0, pc, r0
   116c8:	str	r0, [sp, #12]
   116cc:	mov	r0, #14
   116d0:	bl	112ec <sigaction@plt>
   116d4:	mov	r0, #4096	; 0x1000
   116d8:	mov	r1, #1024	; 0x400
   116dc:	mov	r2, #0
   116e0:	mov	r3, #0
   116e4:	str	r6, [sp]
   116e8:	str	r1, [sp, #4]
   116ec:	str	r0, [sp, #8]
   116f0:	mov	r0, #0
   116f4:	mov	r1, #0
   116f8:	bl	11304 <rb_lib_init@plt>
   116fc:	mov	r0, #1024	; 0x400
   11700:	bl	111e4 <rb_init_rawbuffers@plt>
   11704:	mov	r0, #0
   11708:	mov	r1, #1
   1170c:	bl	112c8 <rb_init_prng@plt>
   11710:	bl	112e0 <rb_supports_ssl@plt>
   11714:	ldr	r7, [pc, #476]	; 118f8 <__errno_location@plt+0x540>
   11718:	cmp	r0, #0
   1171c:	mov	r1, #48	; 0x30
   11720:	movwne	r0, #1
   11724:	add	r7, pc, r7
   11728:	strb	r0, [r7]
   1172c:	mov	r0, #1
   11730:	bl	1119c <calloc@plt>
   11734:	cmp	r0, #0
   11738:	beq	118dc <__errno_location@plt+0x524>
   1173c:	ldr	r1, [pc, #440]	; 118fc <__errno_location@plt+0x544>
   11740:	add	r1, pc, r1
   11744:	str	r0, [r1]
   11748:	mov	r0, r5
   1174c:	mov	r1, #4
   11750:	ldr	r2, [pc, #424]	; 11900 <__errno_location@plt+0x548>
   11754:	add	r2, pc, r2
   11758:	bl	1131c <rb_open@plt>
   1175c:	ldr	r1, [pc, #416]	; 11904 <__errno_location@plt+0x54c>
   11760:	ldr	r1, [pc, r1]
   11764:	str	r0, [r1, #16]
   11768:	mov	r0, r4
   1176c:	mov	r1, #8
   11770:	ldr	r2, [pc, #400]	; 11908 <__errno_location@plt+0x550>
   11774:	add	r2, pc, r2
   11778:	bl	1131c <rb_open@plt>
   1177c:	ldr	r1, [pc, #392]	; 1190c <__errno_location@plt+0x554>
   11780:	ldr	r1, [pc, r1]
   11784:	str	r0, [r1, #20]
   11788:	ldr	r0, [r1, #16]
   1178c:	bl	111a8 <rb_set_nb@plt>
   11790:	ldr	r0, [pc, #376]	; 11910 <__errno_location@plt+0x558>
   11794:	ldr	r0, [pc, r0]
   11798:	ldr	r0, [r0, #20]
   1179c:	bl	111a8 <rb_set_nb@plt>
   117a0:	ldr	r0, [pc, #364]	; 11914 <__errno_location@plt+0x55c>
   117a4:	ldr	r1, [pc, #364]	; 11918 <__errno_location@plt+0x560>
   117a8:	mov	r2, #0
   117ac:	mov	r3, #10
   117b0:	add	r0, pc, r0
   117b4:	add	r1, pc, r1
   117b8:	bl	110f4 <rb_event_addish@plt>
   117bc:	ldr	r0, [pc, #344]	; 1191c <__errno_location@plt+0x564>
   117c0:	ldr	r1, [pc, #344]	; 11920 <__errno_location@plt+0x568>
   117c4:	mov	r2, #0
   117c8:	mov	r3, #10
   117cc:	add	r0, pc, r0
   117d0:	add	r1, pc, r1
   117d4:	bl	11358 <rb_event_add@plt>
   117d8:	ldr	r0, [pc, #324]	; 11924 <__errno_location@plt+0x56c>
   117dc:	add	r4, sp, #12
   117e0:	ldr	r0, [pc, r0]
   117e4:	ldr	r5, [r0, #20]
   117e8:	mov	r0, r5
   117ec:	mov	r1, r4
   117f0:	mov	r2, #16384	; 0x4000
   117f4:	bl	11214 <rb_read@plt>
   117f8:	cmp	r0, #0
   117fc:	bgt	117e8 <__errno_location@plt+0x430>
   11800:	beq	11818 <__errno_location@plt+0x460>
   11804:	bl	113b8 <__errno_location@plt>
   11808:	ldr	r0, [r0]
   1180c:	bl	11100 <rb_ignore_errno@plt>
   11810:	cmp	r0, #0
   11814:	bne	11820 <__errno_location@plt+0x468>
   11818:	mov	r0, #0
   1181c:	bl	113ac <exit@plt>
   11820:	ldr	r2, [pc, #256]	; 11928 <__errno_location@plt+0x570>
   11824:	mov	r0, r5
   11828:	mov	r1, #1
   1182c:	mov	r3, #0
   11830:	add	r2, pc, r2
   11834:	bl	11130 <rb_setselect@plt>
   11838:	ldr	r1, [pc, #236]	; 1192c <__errno_location@plt+0x574>
   1183c:	ldr	r1, [pc, r1]
   11840:	ldr	r0, [r1, #16]
   11844:	bl	11ad8 <__errno_location@plt+0x720>
   11848:	ldr	r5, [pc, #224]	; 11930 <__errno_location@plt+0x578>
   1184c:	add	r6, r4, #1
   11850:	mov	r1, #0
   11854:	mov	r2, #255	; 0xff
   11858:	mov	r0, r6
   1185c:	ldr	r5, [pc, r5]
   11860:	bl	111b4 <memset@plt>
   11864:	mov	r0, #86	; 0x56
   11868:	strb	r0, [sp, #12]
   1186c:	bl	1110c <rb_lib_version@plt>
   11870:	mov	r1, r0
   11874:	mov	r0, r6
   11878:	mov	r2, #254	; 0xfe
   1187c:	bl	1116c <strncpy@plt>
   11880:	mov	r0, r4
   11884:	bl	1122c <strlen@plt>
   11888:	mov	r2, r0
   1188c:	mov	r0, r5
   11890:	mov	r1, r4
   11894:	bl	12ab4 <__errno_location@plt+0x16fc>
   11898:	ldrb	r0, [r7]
   1189c:	cmp	r0, #0
   118a0:	bne	118bc <__errno_location@plt+0x504>
   118a4:	ldr	r0, [pc, #136]	; 11934 <__errno_location@plt+0x57c>
   118a8:	mov	r2, #1
   118ac:	ldr	r0, [pc, r0]
   118b0:	ldr	r1, [pc, #128]	; 11938 <__errno_location@plt+0x580>
   118b4:	add	r1, pc, r1
   118b8:	bl	12ab4 <__errno_location@plt+0x16fc>
   118bc:	mov	r0, #0
   118c0:	bl	111fc <rb_lib_loop@plt>
   118c4:	mov	r0, r7
   118c8:	mov	r1, #2
   118cc:	bl	1134c <dup2@plt>
   118d0:	cmp	r7, #3
   118d4:	bge	11634 <__errno_location@plt+0x27c>
   118d8:	b	1163c <__errno_location@plt+0x284>
   118dc:	bl	112d4 <rb_outofmemory@plt>
   118e0:	andeq	r2, r0, r8, lsr #5
   118e4:	muleq	r0, fp, r2
   118e8:	muleq	r0, r4, r2
   118ec:	andeq	r2, r1, ip, ror fp
   118f0:	andeq	r2, r0, sl, lsr #4
   118f4:	andeq	r2, r0, r0, asr r0
   118f8:	andeq	r2, r1, r0, lsl #20
   118fc:	andeq	r2, r1, r8, ror #19
   11900:	strheq	r2, [r0], -ip
   11904:	andeq	r2, r1, r8, asr #19
   11908:	strheq	r2, [r0], -r0
   1190c:	andeq	r2, r1, r8, lsr #19
   11910:	muleq	r1, r4, r9
   11914:	andeq	r2, r0, lr, ror r0
   11918:	andeq	r0, r0, ip, lsl #3
   1191c:	andeq	r2, r0, r3, ror r0
   11920:	andeq	r0, r0, r8, lsl #4
   11924:	andeq	r2, r1, r8, asr #18
   11928:	andeq	r0, r0, r0, lsr r2
   1192c:	andeq	r2, r1, ip, ror #17
   11930:	andeq	r2, r1, ip, asr #17
   11934:	andeq	r2, r1, ip, ror r8
   11938:	ldrdeq	r2, [r0], -sl
   1193c:	andeq	r2, r1, r0, ror #23
   11940:	andeq	r2, r0, r5, ror #4
   11944:	andeq	r2, r0, r0, lsl #5
   11948:	push	{r4, r5, r6, sl, fp, lr}
   1194c:	add	fp, sp, #16
   11950:	ldr	r6, [pc, #128]	; 119d8 <__errno_location@plt+0x620>
   11954:	ldr	r6, [pc, r6]
   11958:	cmp	r6, #0
   1195c:	bne	11974 <__errno_location@plt+0x5bc>
   11960:	b	119c0 <__errno_location@plt+0x608>
   11964:	mov	r0, r4
   11968:	bl	111f0 <free@plt>
   1196c:	cmp	r6, #0
   11970:	beq	119c0 <__errno_location@plt+0x608>
   11974:	ldr	r4, [r6]
   11978:	ldr	r6, [r6, #8]
   1197c:	ldr	r0, [r4, #16]
   11980:	bl	11298 <rb_free_rawbuffer@plt>
   11984:	ldr	r0, [r4, #20]
   11988:	bl	11298 <rb_free_rawbuffer@plt>
   1198c:	ldrb	r0, [r4, #72]	; 0x48
   11990:	tst	r0, #2
   11994:	beq	11964 <__errno_location@plt+0x5ac>
   11998:	ldr	r5, [r4, #76]	; 0x4c
   1199c:	mov	r0, r5
   119a0:	bl	11118 <inflateEnd@plt>
   119a4:	add	r0, r5, #56	; 0x38
   119a8:	bl	11208 <deflateEnd@plt>
   119ac:	cmp	r5, #0
   119b0:	beq	11964 <__errno_location@plt+0x5ac>
   119b4:	mov	r0, r5
   119b8:	bl	111f0 <free@plt>
   119bc:	b	11964 <__errno_location@plt+0x5ac>
   119c0:	ldr	r0, [pc, #20]	; 119dc <__errno_location@plt+0x624>
   119c4:	mov	r1, #0
   119c8:	add	r0, pc, r0
   119cc:	str	r1, [r0]
   119d0:	str	r1, [r0, #4]
   119d4:	pop	{r4, r5, r6, sl, fp, pc}
   119d8:	ldrdeq	r2, [r1], -r8
   119dc:	andeq	r2, r1, r4, ror #14
   119e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   119e4:	add	fp, sp, #24
   119e8:	ldr	r8, [pc, #112]	; 11a60 <__errno_location@plt+0x6a8>
   119ec:	ldr	r4, [pc, #112]	; 11a64 <__errno_location@plt+0x6ac>
   119f0:	mov	r6, #0
   119f4:	add	r8, pc, r8
   119f8:	add	r4, pc, r4
   119fc:	b	11a0c <__errno_location@plt+0x654>
   11a00:	add	r6, r6, #1
   11a04:	cmp	r6, #2000	; 0x7d0
   11a08:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   11a0c:	add	r0, r6, r6, lsl #1
   11a10:	ldr	r7, [r8, r0, lsl #2]
   11a14:	b	11a20 <__errno_location@plt+0x668>
   11a18:	ldr	r0, [r5, #28]
   11a1c:	bl	11280 <rb_ssl_clear_handshake_count@plt>
   11a20:	cmp	r7, #0
   11a24:	beq	11a00 <__errno_location@plt+0x648>
   11a28:	ldr	r5, [r7]
   11a2c:	ldr	r7, [r7, #8]
   11a30:	ldrb	r0, [r5, #72]	; 0x48
   11a34:	tst	r0, #1
   11a38:	beq	11a20 <__errno_location@plt+0x668>
   11a3c:	ldr	r0, [r5, #28]
   11a40:	bl	11148 <rb_ssl_handshake_count@plt>
   11a44:	cmp	r0, #3
   11a48:	bcc	11a18 <__errno_location@plt+0x660>
   11a4c:	mov	r0, r5
   11a50:	mov	r1, #1
   11a54:	mov	r2, r4
   11a58:	bl	127e8 <__errno_location@plt+0x1430>
   11a5c:	b	11a20 <__errno_location@plt+0x668>
   11a60:	andeq	r2, r1, r4, asr #14
   11a64:	andeq	r1, r0, sp, asr lr
   11a68:	push	{r4, r5, r6, r7, fp, lr}
   11a6c:	add	fp, sp, #16
   11a70:	sub	sp, sp, #16384	; 0x4000
   11a74:	mov	r4, r0
   11a78:	mov	r5, sp
   11a7c:	mov	r0, r4
   11a80:	mov	r1, r5
   11a84:	mov	r2, #16384	; 0x4000
   11a88:	bl	11214 <rb_read@plt>
   11a8c:	cmp	r0, #0
   11a90:	bgt	11a7c <__errno_location@plt+0x6c4>
   11a94:	beq	11acc <__errno_location@plt+0x714>
   11a98:	bl	113b8 <__errno_location@plt>
   11a9c:	ldr	r0, [r0]
   11aa0:	bl	11100 <rb_ignore_errno@plt>
   11aa4:	cmp	r0, #0
   11aa8:	beq	11acc <__errno_location@plt+0x714>
   11aac:	ldr	r2, [pc, #32]	; 11ad4 <__errno_location@plt+0x71c>
   11ab0:	mov	r0, r4
   11ab4:	mov	r1, #1
   11ab8:	mov	r3, #0
   11abc:	add	r2, pc, r2
   11ac0:	bl	11130 <rb_setselect@plt>
   11ac4:	sub	sp, fp, #16
   11ac8:	pop	{r4, r5, r6, r7, fp, pc}
   11acc:	mov	r0, #0
   11ad0:	bl	113ac <exit@plt>
   11ad4:			; <UNDEFINED> instruction: 0xffffffa4
   11ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11adc:	add	fp, sp, #28
   11ae0:	sub	sp, sp, #4
   11ae4:	vpush	{d8-d9}
   11ae8:	sub	sp, sp, #568	; 0x238
   11aec:	mov	r4, r1
   11af0:	mov	r0, #1
   11af4:	mov	r1, #40	; 0x28
   11af8:	bl	1119c <calloc@plt>
   11afc:	cmp	r0, #0
   11b00:	beq	12774 <__errno_location@plt+0x13bc>
   11b04:	mov	r5, r0
   11b08:	add	sl, r4, #24
   11b0c:	mov	r8, #16384	; 0x4000
   11b10:	mov	r7, #4
   11b14:	mov	r9, #0
   11b18:	mov	r0, #1
   11b1c:	mov	r1, #16384	; 0x4000
   11b20:	bl	1119c <calloc@plt>
   11b24:	cmp	r0, #0
   11b28:	beq	12774 <__errno_location@plt+0x13bc>
   11b2c:	str	r0, [r5, #12]
   11b30:	str	r8, [r5, #16]
   11b34:	mov	r1, r0
   11b38:	add	r3, r5, #20
   11b3c:	mov	r2, #16384	; 0x4000
   11b40:	ldr	r0, [r4, #16]
   11b44:	str	r7, [sp]
   11b48:	bl	11334 <rb_recv_fd_buf@plt>
   11b4c:	mov	r6, r0
   11b50:	cmp	r0, #0
   11b54:	ble	11c0c <__errno_location@plt+0x854>
   11b58:	str	r6, [r5, #16]
   11b5c:	ldr	r0, [r4, #28]
   11b60:	str	r5, [r5]
   11b64:	cmp	r0, #0
   11b68:	stmib	r5, {r0, r9}
   11b6c:	beq	11b7c <__errno_location@plt+0x7c4>
   11b70:	add	r0, r0, #8
   11b74:	str	r5, [r0]
   11b78:	b	11b88 <__errno_location@plt+0x7d0>
   11b7c:	ldr	r0, [sl]
   11b80:	cmp	r0, #0
   11b84:	beq	11c04 <__errno_location@plt+0x84c>
   11b88:	str	r5, [r4, #28]
   11b8c:	ldr	r0, [r4, #32]
   11b90:	add	r0, r0, #1
   11b94:	str	r0, [r4, #32]
   11b98:	ldr	r0, [r5, #20]
   11b9c:	cmp	r0, #0
   11ba0:	beq	11bd0 <__errno_location@plt+0x818>
   11ba4:	ldr	r0, [r5, #24]
   11ba8:	cmp	r0, #0
   11bac:	beq	11bd8 <__errno_location@plt+0x820>
   11bb0:	ldr	r0, [r5, #28]
   11bb4:	cmp	r0, #0
   11bb8:	beq	11be0 <__errno_location@plt+0x828>
   11bbc:	ldr	r0, [r5, #32]
   11bc0:	cmp	r0, #0
   11bc4:	mov	r0, #4
   11bc8:	movweq	r0, #3
   11bcc:	b	11be4 <__errno_location@plt+0x82c>
   11bd0:	mov	r0, #0
   11bd4:	b	11be4 <__errno_location@plt+0x82c>
   11bd8:	mov	r0, #1
   11bdc:	b	11be4 <__errno_location@plt+0x82c>
   11be0:	mov	r0, #2
   11be4:	str	r0, [r5, #36]	; 0x24
   11be8:	mov	r0, #1
   11bec:	mov	r1, #40	; 0x28
   11bf0:	bl	1119c <calloc@plt>
   11bf4:	mov	r5, r0
   11bf8:	cmp	r0, #0
   11bfc:	bne	11b18 <__errno_location@plt+0x760>
   11c00:	b	12774 <__errno_location@plt+0x13bc>
   11c04:	mov	r0, sl
   11c08:	b	11b74 <__errno_location@plt+0x7bc>
   11c0c:	ldr	r0, [r5, #12]
   11c10:	cmp	r0, #0
   11c14:	beq	11c1c <__errno_location@plt+0x864>
   11c18:	bl	111f0 <free@plt>
   11c1c:	mov	r0, r5
   11c20:	bl	111f0 <free@plt>
   11c24:	cmp	r6, #0
   11c28:	beq	12778 <__errno_location@plt+0x13c0>
   11c2c:	bl	113b8 <__errno_location@plt>
   11c30:	ldr	r0, [r0]
   11c34:	bl	11100 <rb_ignore_errno@plt>
   11c38:	cmp	r0, #0
   11c3c:	beq	12778 <__errno_location@plt+0x13c0>
   11c40:	ldr	r5, [sl]
   11c44:	cmp	r5, #0
   11c48:	beq	1274c <__errno_location@plt+0x1394>
   11c4c:	mov	r8, #0
   11c50:	vmov.i32	q4, #0	; 0x00000000
   11c54:	str	sl, [sp, #44]	; 0x2c
   11c58:	b	11d38 <__errno_location@plt+0x980>
   11c5c:	add	r2, r7, r0, lsl #2
   11c60:	ldr	r3, [r2, #4]!
   11c64:	cmp	r3, #0
   11c68:	streq	sl, [r2]
   11c6c:	str	sl, [r1]
   11c70:	add	r0, r7, r0, lsl #2
   11c74:	ldr	r1, [r0, #8]
   11c78:	add	r1, r1, #1
   11c7c:	str	r1, [r0, #8]
   11c80:	mov	r0, #1
   11c84:	strb	r0, [sl, #72]	; 0x48
   11c88:	mov	r0, r8
   11c8c:	bl	110d0 <rb_get_type@plt>
   11c90:	tst	r0, #64	; 0x40
   11c94:	beq	11ca4 <__errno_location@plt+0x8ec>
   11c98:	ldr	r0, [sl, #28]
   11c9c:	mov	r1, #4
   11ca0:	bl	11220 <rb_set_type@plt>
   11ca4:	ldr	r0, [sl, #32]
   11ca8:	bl	110d0 <rb_get_type@plt>
   11cac:	cmp	r0, #64	; 0x40
   11cb0:	mov	r8, #0
   11cb4:	bne	11cc4 <__errno_location@plt+0x90c>
   11cb8:	ldr	r0, [sl, #32]
   11cbc:	mov	r1, #4
   11cc0:	bl	11220 <rb_set_type@plt>
   11cc4:	ldr	r0, [r9, #20]
   11cc8:	ldr	r1, [pc, #2756]	; 12794 <__errno_location@plt+0x13dc>
   11ccc:	mov	r2, sl
   11cd0:	mov	r3, #10
   11cd4:	add	r1, pc, r1
   11cd8:	bl	11340 <rb_ssl_start_accepted@plt>
   11cdc:	ldr	sl, [sp, #44]	; 0x2c
   11ce0:	b	126ec <__errno_location@plt+0x1334>
   11ce4:	add	r2, r7, r0, lsl #2
   11ce8:	ldr	r3, [r2, #4]!
   11cec:	cmp	r3, #0
   11cf0:	streq	sl, [r2]
   11cf4:	str	sl, [r1]
   11cf8:	add	r0, r7, r0, lsl #2
   11cfc:	ldr	r1, [r0, #8]
   11d00:	add	r1, r1, #1
   11d04:	str	r1, [r0, #8]
   11d08:	mov	r0, sl
   11d0c:	mov	r1, #1
   11d10:	ldr	r2, [pc, #2672]	; 12788 <__errno_location@plt+0x13d0>
   11d14:	add	r2, pc, r2
   11d18:	bl	127e8 <__errno_location@plt+0x1430>
   11d1c:	ldr	r1, [pc, #2664]	; 1278c <__errno_location@plt+0x13d4>
   11d20:	mov	r0, r4
   11d24:	mov	r2, #1
   11d28:	add	r1, pc, r1
   11d2c:	bl	12ab4 <__errno_location@plt+0x16fc>
   11d30:	ldr	sl, [sp, #44]	; 0x2c
   11d34:	b	126ec <__errno_location@plt+0x1334>
   11d38:	ldr	r0, [r5, #8]
   11d3c:	ldr	r9, [r5]
   11d40:	str	r0, [sp, #48]	; 0x30
   11d44:	ldr	r0, [r9, #12]
   11d48:	ldrb	r1, [r0]
   11d4c:	sub	r1, r1, #65	; 0x41
   11d50:	cmp	r1, #25
   11d54:	bhi	126ec <__errno_location@plt+0x1334>
   11d58:	add	r2, pc, #4
   11d5c:	ldr	r1, [r2, r1, lsl #2]
   11d60:	add	pc, r2, r1
   11d64:	andeq	r0, r0, r8, rrx
   11d68:	andeq	r0, r0, r8, lsl #19
   11d6c:	andeq	r0, r0, r4, ror #4
   11d70:	andeq	r0, r0, r8, lsl #19
   11d74:	andeq	r0, r0, r8, lsl #19
   11d78:	andeq	r0, r0, r4, asr #2
   11d7c:	andeq	r0, r0, r8, lsl #19
   11d80:	andeq	r0, r0, r8, lsl #19
   11d84:	andeq	r0, r0, r8, lsl #19
   11d88:	andeq	r0, r0, r8, lsl #19
   11d8c:	andeq	r0, r0, r4, lsr r3
   11d90:	andeq	r0, r0, r8, lsl #19
   11d94:	andeq	r0, r0, r8, lsl #19
   11d98:	andeq	r0, r0, r8, lsl #19
   11d9c:	andeq	r0, r0, r8, lsl #19
   11da0:	andeq	r0, r0, r8, lsl #19
   11da4:	andeq	r0, r0, r8, lsl #19
   11da8:	andeq	r0, r0, r8, lsl #19
   11dac:	andeq	r0, r0, r0, ror #7
   11db0:	andeq	r0, r0, r8, lsl #19
   11db4:	andeq	r0, r0, r8, lsl #19
   11db8:	andeq	r0, r0, r8, lsl #19
   11dbc:	andeq	r0, r0, r8, lsl #19
   11dc0:	andeq	r0, r0, r8, lsl #19
   11dc4:	andeq	r0, r0, r8, lsl #19
   11dc8:	andeq	r0, r0, r4, ror #2
   11dcc:	ldr	r0, [r9, #36]	; 0x24
   11dd0:	cmp	r0, #2
   11dd4:	bne	121fc <__errno_location@plt+0xe44>
   11dd8:	ldr	r0, [r9, #16]
   11ddc:	cmp	r0, #5
   11de0:	bne	12204 <__errno_location@plt+0xe4c>
   11de4:	ldr	r8, [r9, #20]
   11de8:	ldr	r7, [r9, #24]
   11dec:	ldr	r0, [pc, #2444]	; 12780 <__errno_location@plt+0x13c8>
   11df0:	mov	r1, #80	; 0x50
   11df4:	add	r0, pc, r0
   11df8:	ldrb	r6, [r0]
   11dfc:	mov	r0, #1
   11e00:	bl	1119c <calloc@plt>
   11e04:	mov	sl, r0
   11e08:	cmp	r6, #0
   11e0c:	beq	125d8 <__errno_location@plt+0x1220>
   11e10:	cmp	sl, #0
   11e14:	beq	12774 <__errno_location@plt+0x13bc>
   11e18:	str	r4, [sl, #12]
   11e1c:	bl	11310 <rb_new_rawbuffer@plt>
   11e20:	str	r0, [sl, #16]
   11e24:	bl	11310 <rb_new_rawbuffer@plt>
   11e28:	str	r0, [sl, #20]
   11e2c:	mvn	r0, #0
   11e30:	str	r0, [sl, #24]
   11e34:	mov	r0, r8
   11e38:	str	r8, [sl, #28]
   11e3c:	str	r7, [sl, #32]
   11e40:	bl	111a8 <rb_set_nb@plt>
   11e44:	mov	r0, r7
   11e48:	bl	111a8 <rb_set_nb@plt>
   11e4c:	ldr	r0, [r9, #12]
   11e50:	movw	r1, #19923	; 0x4dd3
   11e54:	mov	r3, #0
   11e58:	movt	r1, #4194	; 0x1062
   11e5c:	ldr	r0, [r0, #1]
   11e60:	str	r0, [sl, #24]
   11e64:	umull	r1, r2, r0, r1
   11e68:	ldr	r7, [pc, #2336]	; 12790 <__errno_location@plt+0x13d8>
   11e6c:	lsr	r1, r2, #7
   11e70:	mov	r2, #2000	; 0x7d0
   11e74:	str	sl, [sl]
   11e78:	str	r3, [sl, #4]
   11e7c:	mls	r0, r1, r2, r0
   11e80:	add	r0, r0, r0, lsl #1
   11e84:	add	r7, pc, r7
   11e88:	mov	r1, r7
   11e8c:	ldr	r2, [r1, r0, lsl #2]!
   11e90:	cmp	r2, #0
   11e94:	str	r2, [sl, #8]
   11e98:	beq	11c5c <__errno_location@plt+0x8a4>
   11e9c:	add	r2, r2, #4
   11ea0:	str	sl, [r2]
   11ea4:	b	11c6c <__errno_location@plt+0x8b4>
   11ea8:	ldr	r1, [r9, #16]
   11eac:	cmp	r1, #5
   11eb0:	bne	121a0 <__errno_location@plt+0xde8>
   11eb4:	ldr	r0, [r0, #1]
   11eb8:	ldr	r1, [pc, #2280]	; 127a8 <__errno_location@plt+0x13f0>
   11ebc:	add	r1, pc, r1
   11ec0:	str	r0, [r1]
   11ec4:	b	126ec <__errno_location@plt+0x1334>
   11ec8:	ldr	r0, [r9, #36]	; 0x24
   11ecc:	cmp	r0, #2
   11ed0:	bne	121d0 <__errno_location@plt+0xe18>
   11ed4:	ldr	r0, [r9, #16]
   11ed8:	cmp	r0, #6
   11edc:	bcc	121d8 <__errno_location@plt+0xe20>
   11ee0:	ldr	r7, [r9, #20]
   11ee4:	ldr	r8, [r9, #24]
   11ee8:	mov	r0, #1
   11eec:	mov	r1, #80	; 0x50
   11ef0:	bl	1119c <calloc@plt>
   11ef4:	cmp	r0, #0
   11ef8:	beq	12774 <__errno_location@plt+0x13bc>
   11efc:	mov	r6, r0
   11f00:	str	r4, [r0, #12]
   11f04:	bl	11310 <rb_new_rawbuffer@plt>
   11f08:	str	r0, [r6, #16]
   11f0c:	bl	11310 <rb_new_rawbuffer@plt>
   11f10:	str	r0, [r6, #20]
   11f14:	mvn	r0, #0
   11f18:	add	r1, r6, #24
   11f1c:	stm	r1, {r0, r7, r8}
   11f20:	mov	r0, r7
   11f24:	bl	111a8 <rb_set_nb@plt>
   11f28:	mov	r0, r8
   11f2c:	bl	111a8 <rb_set_nb@plt>
   11f30:	ldr	r0, [r6, #28]
   11f34:	bl	110d0 <rb_get_type@plt>
   11f38:	cmp	r0, #64	; 0x40
   11f3c:	bne	11f50 <__errno_location@plt+0xb98>
   11f40:	ldr	r0, [r6, #28]
   11f44:	mov	r1, #4
   11f48:	bl	11220 <rb_set_type@plt>
   11f4c:	ldr	r8, [r6, #32]
   11f50:	mov	r0, r8
   11f54:	bl	110d0 <rb_get_type@plt>
   11f58:	cmp	r0, #64	; 0x40
   11f5c:	bne	11f6c <__errno_location@plt+0xbb4>
   11f60:	mov	r0, r8
   11f64:	mov	r1, #4
   11f68:	bl	11220 <rb_set_type@plt>
   11f6c:	ldr	ip, [r9, #12]
   11f70:	movw	r1, #19923	; 0x4dd3
   11f74:	mov	r3, #0
   11f78:	movt	r1, #4194	; 0x1062
   11f7c:	ldr	r0, [ip, #1]
   11f80:	str	r0, [r6, #24]
   11f84:	umull	r1, r2, r0, r1
   11f88:	ldr	r7, [pc, #2104]	; 127c8 <__errno_location@plt+0x1410>
   11f8c:	lsr	r1, r2, #7
   11f90:	mov	r2, #2000	; 0x7d0
   11f94:	str	r6, [r6]
   11f98:	str	r3, [r6, #4]
   11f9c:	mls	r0, r1, r2, r0
   11fa0:	add	r0, r0, r0, lsl #1
   11fa4:	add	r7, pc, r7
   11fa8:	mov	r1, r7
   11fac:	ldr	r2, [r1, r0, lsl #2]!
   11fb0:	cmp	r2, #0
   11fb4:	str	r2, [r6, #8]
   11fb8:	beq	124b8 <__errno_location@plt+0x1100>
   11fbc:	add	r2, r2, #4
   11fc0:	str	r6, [r2]
   11fc4:	b	124c8 <__errno_location@plt+0x1110>
   11fc8:	ldr	r0, [r9, #16]
   11fcc:	cmp	r0, #5
   11fd0:	bne	12228 <__errno_location@plt+0xe70>
   11fd4:	ldr	r8, [r9, #20]
   11fd8:	ldr	sl, [r9, #24]
   11fdc:	ldr	r0, [pc, #1972]	; 12798 <__errno_location@plt+0x13e0>
   11fe0:	mov	r1, #80	; 0x50
   11fe4:	add	r0, pc, r0
   11fe8:	ldrb	r6, [r0]
   11fec:	mov	r0, #1
   11ff0:	bl	1119c <calloc@plt>
   11ff4:	mov	r7, r0
   11ff8:	cmp	r6, #0
   11ffc:	beq	12398 <__errno_location@plt+0xfe0>
   12000:	cmp	r7, #0
   12004:	beq	12774 <__errno_location@plt+0x13bc>
   12008:	str	r4, [r7, #12]
   1200c:	bl	11310 <rb_new_rawbuffer@plt>
   12010:	str	r0, [r7, #16]
   12014:	bl	11310 <rb_new_rawbuffer@plt>
   12018:	str	r0, [r7, #20]
   1201c:	mvn	r0, #0
   12020:	add	r1, r7, #24
   12024:	stm	r1, {r0, r8, sl}
   12028:	mov	r0, r8
   1202c:	bl	111a8 <rb_set_nb@plt>
   12030:	mov	r0, sl
   12034:	bl	111a8 <rb_set_nb@plt>
   12038:	ldr	r0, [r9, #12]
   1203c:	movw	r1, #19923	; 0x4dd3
   12040:	mov	r3, #0
   12044:	movt	r1, #4194	; 0x1062
   12048:	ldr	r0, [r0, #1]
   1204c:	str	r0, [r7, #24]
   12050:	umull	r1, r2, r0, r1
   12054:	ldr	r6, [pc, #1860]	; 127a0 <__errno_location@plt+0x13e8>
   12058:	lsr	r1, r2, #7
   1205c:	mov	r2, #2000	; 0x7d0
   12060:	str	r7, [r7]
   12064:	str	r3, [r7, #4]
   12068:	mls	r0, r1, r2, r0
   1206c:	add	r0, r0, r0, lsl #1
   12070:	add	r6, pc, r6
   12074:	mov	r1, r6
   12078:	ldr	r2, [r1, r0, lsl #2]!
   1207c:	cmp	r2, #0
   12080:	str	r2, [r7, #8]
   12084:	beq	12430 <__errno_location@plt+0x1078>
   12088:	ldr	sl, [sp, #44]	; 0x2c
   1208c:	add	r2, r2, #4
   12090:	str	r7, [r2]
   12094:	b	12444 <__errno_location@plt+0x108c>
   12098:	ldr	r1, [pc, #1804]	; 127ac <__errno_location@plt+0x13f4>
   1209c:	add	r1, pc, r1
   120a0:	ldrb	r1, [r1]
   120a4:	cmp	r1, #0
   120a8:	beq	12258 <__errno_location@plt+0xea0>
   120ac:	add	r6, r0, #2
   120b0:	mov	r0, r6
   120b4:	str	r6, [sp, #40]	; 0x28
   120b8:	bl	1122c <strlen@plt>
   120bc:	add	r0, r6, r0
   120c0:	add	r6, r0, #1
   120c4:	mov	r0, r6
   120c8:	bl	1122c <strlen@plt>
   120cc:	add	r1, r6, r0
   120d0:	str	r0, [sp, #36]	; 0x24
   120d4:	add	r7, r1, #1
   120d8:	mov	r0, r7
   120dc:	bl	1122c <strlen@plt>
   120e0:	mov	r8, r0
   120e4:	add	r0, r7, r0
   120e8:	add	sl, r0, #1
   120ec:	mov	r0, sl
   120f0:	bl	1122c <strlen@plt>
   120f4:	cmp	r0, #0
   120f8:	moveq	sl, r0
   120fc:	ldr	r0, [sp, #36]	; 0x24
   12100:	cmp	r8, #0
   12104:	moveq	r7, r8
   12108:	mov	r3, sl
   1210c:	ldr	sl, [sp, #44]	; 0x2c
   12110:	mov	r8, #0
   12114:	mov	r2, r7
   12118:	cmp	r0, #0
   1211c:	ldr	r0, [sp, #40]	; 0x28
   12120:	moveq	r6, r0
   12124:	mov	r1, r6
   12128:	bl	113a0 <rb_setup_ssl_server@plt>
   1212c:	cmp	r0, #0
   12130:	bne	126ec <__errno_location@plt+0x1334>
   12134:	ldr	r1, [pc, #1664]	; 127bc <__errno_location@plt+0x1404>
   12138:	mov	r0, r4
   1213c:	add	r1, pc, r1
   12140:	b	126e4 <__errno_location@plt+0x132c>
   12144:	ldr	r1, [r0, #1]
   12148:	movw	r2, #19923	; 0x4dd3
   1214c:	movt	r2, #4194	; 0x1062
   12150:	umull	r2, r3, r1, r2
   12154:	lsr	r2, r3, #7
   12158:	mov	r3, #2000	; 0x7d0
   1215c:	mls	r2, r2, r3, r1
   12160:	ldr	r3, [pc, #1624]	; 127c0 <__errno_location@plt+0x1408>
   12164:	add	r2, r2, r2, lsl #1
   12168:	add	r3, pc, r3
   1216c:	ldr	r2, [r3, r2, lsl #2]
   12170:	cmp	r2, #0
   12174:	beq	126ec <__errno_location@plt+0x1334>
   12178:	ldr	r6, [r2]
   1217c:	ldr	r3, [r6, #24]
   12180:	cmp	r3, r1
   12184:	ldrbeq	r3, [r6, #72]	; 0x48
   12188:	tsteq	r3, #8
   1218c:	beq	1230c <__errno_location@plt+0xf54>
   12190:	ldr	r2, [r2, #8]
   12194:	cmp	r2, #0
   12198:	bne	12178 <__errno_location@plt+0xdc0>
   1219c:	b	126ec <__errno_location@plt+0x1334>
   121a0:	ldr	r0, [r9, #36]	; 0x24
   121a4:	cmp	r0, #1
   121a8:	blt	126ec <__errno_location@plt+0x1334>
   121ac:	add	r6, r9, #20
   121b0:	mov	r7, #0
   121b4:	ldr	r0, [r6, r7, lsl #2]
   121b8:	bl	11250 <rb_close@plt>
   121bc:	ldr	r0, [r9, #36]	; 0x24
   121c0:	add	r7, r7, #1
   121c4:	cmp	r7, r0
   121c8:	blt	121b4 <__errno_location@plt+0xdfc>
   121cc:	b	126ec <__errno_location@plt+0x1334>
   121d0:	cmp	r0, #1
   121d4:	blt	126ec <__errno_location@plt+0x1334>
   121d8:	add	r6, r9, #20
   121dc:	mov	r7, #0
   121e0:	ldr	r0, [r6, r7, lsl #2]
   121e4:	bl	11250 <rb_close@plt>
   121e8:	ldr	r0, [r9, #36]	; 0x24
   121ec:	add	r7, r7, #1
   121f0:	cmp	r7, r0
   121f4:	blt	121e0 <__errno_location@plt+0xe28>
   121f8:	b	126ec <__errno_location@plt+0x1334>
   121fc:	cmp	r0, #1
   12200:	blt	126ec <__errno_location@plt+0x1334>
   12204:	add	r6, r9, #20
   12208:	mov	r7, #0
   1220c:	ldr	r0, [r6, r7, lsl #2]
   12210:	bl	11250 <rb_close@plt>
   12214:	ldr	r0, [r9, #36]	; 0x24
   12218:	add	r7, r7, #1
   1221c:	cmp	r7, r0
   12220:	blt	1220c <__errno_location@plt+0xe54>
   12224:	b	126ec <__errno_location@plt+0x1334>
   12228:	ldr	r0, [r9, #36]	; 0x24
   1222c:	cmp	r0, #1
   12230:	blt	126ec <__errno_location@plt+0x1334>
   12234:	add	r6, r9, #20
   12238:	mov	r7, #0
   1223c:	ldr	r0, [r6, r7, lsl #2]
   12240:	bl	11250 <rb_close@plt>
   12244:	ldr	r0, [r9, #36]	; 0x24
   12248:	add	r7, r7, #1
   1224c:	cmp	r7, r0
   12250:	blt	1223c <__errno_location@plt+0xe84>
   12254:	b	126ec <__errno_location@plt+0x1334>
   12258:	cmp	r9, #0
   1225c:	beq	126d8 <__errno_location@plt+0x1320>
   12260:	ldr	r7, [r9, #20]
   12264:	ldr	r8, [r9, #24]
   12268:	mov	r0, #1
   1226c:	mov	r1, #80	; 0x50
   12270:	bl	1119c <calloc@plt>
   12274:	cmp	r0, #0
   12278:	beq	12774 <__errno_location@plt+0x13bc>
   1227c:	mov	r6, r0
   12280:	str	r4, [r0, #12]
   12284:	bl	11310 <rb_new_rawbuffer@plt>
   12288:	str	r0, [r6, #16]
   1228c:	bl	11310 <rb_new_rawbuffer@plt>
   12290:	str	r0, [r6, #20]
   12294:	mvn	r0, #0
   12298:	add	r1, r6, #24
   1229c:	stm	r1, {r0, r7, r8}
   122a0:	mov	r0, r7
   122a4:	bl	111a8 <rb_set_nb@plt>
   122a8:	mov	r0, r8
   122ac:	bl	111a8 <rb_set_nb@plt>
   122b0:	ldr	r0, [r9, #12]
   122b4:	movw	r1, #19923	; 0x4dd3
   122b8:	mov	r8, #0
   122bc:	movt	r1, #4194	; 0x1062
   122c0:	ldr	r0, [r0, #1]
   122c4:	str	r0, [r6, #24]
   122c8:	umull	r1, r2, r0, r1
   122cc:	ldr	r7, [pc, #1244]	; 127b0 <__errno_location@plt+0x13f8>
   122d0:	lsr	r1, r2, #7
   122d4:	mov	r2, #2000	; 0x7d0
   122d8:	str	r6, [r6]
   122dc:	str	r8, [r6, #4]
   122e0:	mls	r0, r1, r2, r0
   122e4:	add	r0, r0, r0, lsl #1
   122e8:	add	r7, pc, r7
   122ec:	mov	r1, r7
   122f0:	ldr	r2, [r1, r0, lsl #2]!
   122f4:	cmp	r2, #0
   122f8:	str	r2, [r6, #8]
   122fc:	beq	12670 <__errno_location@plt+0x12b8>
   12300:	add	r2, r2, #4
   12304:	str	r6, [r2]
   12308:	b	12680 <__errno_location@plt+0x12c8>
   1230c:	ldr	r1, [r6, #56]!	; 0x38
   12310:	str	r1, [sp, #40]	; 0x28
   12314:	ldr	r3, [r6, #8]
   12318:	ldr	ip, [r6, #12]
   1231c:	ldr	r2, [r6, #-8]
   12320:	ldr	r1, [r6, #-4]
   12324:	mov	r7, r6
   12328:	ldr	lr, [r6, #4]
   1232c:	ldr	r8, [r6, #-12]
   12330:	ldr	sl, [r7, #-16]!
   12334:	stm	sp, {r3, ip}
   12338:	str	r2, [sp, #8]
   1233c:	str	r1, [sp, #12]
   12340:	add	r3, r0, #5
   12344:	add	r0, sp, #52	; 0x34
   12348:	ldr	r1, [sp, #40]	; 0x28
   1234c:	str	lr, [sp, #20]
   12350:	str	sl, [sp, #24]
   12354:	str	r1, [sp, #16]
   12358:	mov	r1, #512	; 0x200
   1235c:	ldr	sl, [sp, #44]	; 0x2c
   12360:	str	r8, [sp, #28]
   12364:	mov	r8, #0
   12368:	ldr	r2, [pc, #1108]	; 127c4 <__errno_location@plt+0x140c>
   1236c:	add	r2, pc, r2
   12370:	bl	11364 <snprintf@plt>
   12374:	vst1.64	{d8-d9}, [r6]
   12378:	add	r6, sp, #52	; 0x34
   1237c:	vst1.64	{d8-d9}, [r7]
   12380:	mov	r0, r6
   12384:	bl	1122c <strlen@plt>
   12388:	add	r2, r0, #1
   1238c:	mov	r0, r4
   12390:	mov	r1, r6
   12394:	b	126e8 <__errno_location@plt+0x1330>
   12398:	cmp	r7, #0
   1239c:	beq	12774 <__errno_location@plt+0x13bc>
   123a0:	str	r4, [r7, #12]
   123a4:	bl	11310 <rb_new_rawbuffer@plt>
   123a8:	str	r0, [r7, #16]
   123ac:	bl	11310 <rb_new_rawbuffer@plt>
   123b0:	str	r0, [r7, #20]
   123b4:	mvn	r0, #0
   123b8:	add	r1, r7, #24
   123bc:	stm	r1, {r0, r8, sl}
   123c0:	mov	r0, r8
   123c4:	bl	111a8 <rb_set_nb@plt>
   123c8:	mov	r0, sl
   123cc:	bl	111a8 <rb_set_nb@plt>
   123d0:	ldr	r0, [r9, #12]
   123d4:	movw	r1, #19923	; 0x4dd3
   123d8:	mov	r8, #0
   123dc:	movt	r1, #4194	; 0x1062
   123e0:	ldr	r0, [r0, #1]
   123e4:	str	r0, [r7, #24]
   123e8:	umull	r1, r2, r0, r1
   123ec:	ldr	r6, [pc, #936]	; 1279c <__errno_location@plt+0x13e4>
   123f0:	lsr	r1, r2, #7
   123f4:	mov	r2, #2000	; 0x7d0
   123f8:	str	r7, [r7]
   123fc:	str	r8, [r7, #4]
   12400:	mls	r0, r1, r2, r0
   12404:	add	r0, r0, r0, lsl #1
   12408:	add	r6, pc, r6
   1240c:	mov	r1, r6
   12410:	ldr	r2, [r1, r0, lsl #2]!
   12414:	cmp	r2, #0
   12418:	str	r2, [r7, #8]
   1241c:	beq	1269c <__errno_location@plt+0x12e4>
   12420:	ldr	sl, [sp, #44]	; 0x2c
   12424:	add	r2, r2, #4
   12428:	str	r7, [r2]
   1242c:	b	126b0 <__errno_location@plt+0x12f8>
   12430:	add	r2, r6, r0, lsl #2
   12434:	ldr	sl, [sp, #44]	; 0x2c
   12438:	ldr	r3, [r2, #4]!
   1243c:	cmp	r3, #0
   12440:	streq	r7, [r2]
   12444:	str	r7, [r1]
   12448:	add	r0, r6, r0, lsl #2
   1244c:	ldr	r1, [r0, #8]
   12450:	add	r1, r1, #1
   12454:	str	r1, [r0, #8]
   12458:	mov	r0, #1
   1245c:	strb	r0, [r7, #72]	; 0x48
   12460:	mov	r0, r8
   12464:	bl	110d0 <rb_get_type@plt>
   12468:	cmp	r0, #64	; 0x40
   1246c:	bne	1247c <__errno_location@plt+0x10c4>
   12470:	ldr	r0, [r7, #28]
   12474:	mov	r1, #4
   12478:	bl	11220 <rb_set_type@plt>
   1247c:	ldr	r0, [r7, #32]
   12480:	bl	110d0 <rb_get_type@plt>
   12484:	cmp	r0, #64	; 0x40
   12488:	mov	r8, #0
   1248c:	bne	1249c <__errno_location@plt+0x10e4>
   12490:	ldr	r0, [r7, #32]
   12494:	mov	r1, #4
   12498:	bl	11220 <rb_set_type@plt>
   1249c:	ldr	r0, [r9, #20]
   124a0:	ldr	r1, [pc, #764]	; 127a4 <__errno_location@plt+0x13ec>
   124a4:	mov	r2, r7
   124a8:	mov	r3, #10
   124ac:	add	r1, pc, r1
   124b0:	bl	112f8 <rb_ssl_start_connected@plt>
   124b4:	b	126ec <__errno_location@plt+0x1334>
   124b8:	add	r2, r7, r0, lsl #2
   124bc:	ldr	r3, [r2, #4]!
   124c0:	cmp	r3, #0
   124c4:	streq	r6, [r2]
   124c8:	str	r6, [r1]
   124cc:	add	r0, r7, r0, lsl #2
   124d0:	str	ip, [sp, #40]	; 0x28
   124d4:	ldr	r1, [r0, #8]
   124d8:	add	r1, r1, #1
   124dc:	str	r1, [r0, #8]
   124e0:	ldrb	r0, [r6, #72]	; 0x48
   124e4:	mov	r1, #112	; 0x70
   124e8:	ldrb	r8, [ip, #5]
   124ec:	ldr	sl, [r9, #16]
   124f0:	orr	r0, r0, #2
   124f4:	strb	r0, [r6, #72]	; 0x48
   124f8:	mov	r0, #1
   124fc:	bl	1119c <calloc@plt>
   12500:	cmp	r0, #0
   12504:	beq	12774 <__errno_location@plt+0x13bc>
   12508:	str	r0, [r6, #76]	; 0x4c
   1250c:	mov	r7, r0
   12510:	mov	r2, #56	; 0x38
   12514:	sub	sl, sl, #6
   12518:	ldr	r0, [pc, #684]	; 127cc <__errno_location@plt+0x1414>
   1251c:	add	r0, pc, r0
   12520:	str	r0, [r7, #32]
   12524:	ldr	r0, [pc, #676]	; 127d0 <__errno_location@plt+0x1418>
   12528:	add	r0, pc, r0
   1252c:	str	r0, [r7, #36]	; 0x24
   12530:	mov	r0, #1
   12534:	str	r0, [r7, #44]	; 0x2c
   12538:	mov	r0, r7
   1253c:	ldr	r1, [pc, #656]	; 127d4 <__errno_location@plt+0x141c>
   12540:	add	r1, pc, r1
   12544:	bl	11328 <inflateInit_@plt>
   12548:	mov	r0, #0
   1254c:	cmp	r8, #9
   12550:	mov	r3, #56	; 0x38
   12554:	str	r0, [r7, #64]	; 0x40
   12558:	str	r0, [r7, #76]	; 0x4c
   1255c:	movwhi	r8, #255	; 0xff
   12560:	ldr	r0, [pc, #624]	; 127d8 <__errno_location@plt+0x1420>
   12564:	mov	r1, r8
   12568:	add	r0, pc, r0
   1256c:	str	r0, [r7, #88]	; 0x58
   12570:	ldr	r0, [pc, #612]	; 127dc <__errno_location@plt+0x1424>
   12574:	add	r0, pc, r0
   12578:	str	r0, [r7, #92]	; 0x5c
   1257c:	mov	r0, #1
   12580:	str	r0, [r7, #100]	; 0x64
   12584:	ldr	r0, [r6, #76]	; 0x4c
   12588:	ldr	r2, [pc, #592]	; 127e0 <__errno_location@plt+0x1428>
   1258c:	add	r0, r0, #56	; 0x38
   12590:	add	r2, pc, r2
   12594:	bl	11190 <deflateInit_@plt>
   12598:	cmp	sl, #0
   1259c:	beq	125b4 <__errno_location@plt+0x11fc>
   125a0:	ldr	r0, [sp, #40]	; 0x28
   125a4:	mov	r2, sl
   125a8:	add	r1, r0, #6
   125ac:	mov	r0, r6
   125b0:	bl	133c8 <__errno_location@plt+0x2010>
   125b4:	ldr	r0, [r6, #28]
   125b8:	mov	r1, r6
   125bc:	bl	12e10 <__errno_location@plt+0x1a58>
   125c0:	ldr	r0, [r6, #32]
   125c4:	mov	r1, r6
   125c8:	bl	12fe0 <__errno_location@plt+0x1c28>
   125cc:	ldr	sl, [sp, #44]	; 0x2c
   125d0:	mov	r8, #0
   125d4:	b	126ec <__errno_location@plt+0x1334>
   125d8:	cmp	sl, #0
   125dc:	beq	12774 <__errno_location@plt+0x13bc>
   125e0:	str	r4, [sl, #12]
   125e4:	bl	11310 <rb_new_rawbuffer@plt>
   125e8:	str	r0, [sl, #16]
   125ec:	bl	11310 <rb_new_rawbuffer@plt>
   125f0:	str	r0, [sl, #20]
   125f4:	mvn	r0, #0
   125f8:	str	r0, [sl, #24]
   125fc:	mov	r0, r8
   12600:	str	r8, [sl, #28]
   12604:	str	r7, [sl, #32]
   12608:	bl	111a8 <rb_set_nb@plt>
   1260c:	mov	r0, r7
   12610:	bl	111a8 <rb_set_nb@plt>
   12614:	ldr	r0, [r9, #12]
   12618:	movw	r1, #19923	; 0x4dd3
   1261c:	mov	r8, #0
   12620:	movt	r1, #4194	; 0x1062
   12624:	ldr	r0, [r0, #1]
   12628:	str	r0, [sl, #24]
   1262c:	umull	r1, r2, r0, r1
   12630:	ldr	r7, [pc, #332]	; 12784 <__errno_location@plt+0x13cc>
   12634:	lsr	r1, r2, #7
   12638:	mov	r2, #2000	; 0x7d0
   1263c:	str	sl, [sl]
   12640:	str	r8, [sl, #4]
   12644:	mls	r0, r1, r2, r0
   12648:	add	r0, r0, r0, lsl #1
   1264c:	add	r7, pc, r7
   12650:	mov	r1, r7
   12654:	ldr	r2, [r1, r0, lsl #2]!
   12658:	cmp	r2, #0
   1265c:	str	r2, [sl, #8]
   12660:	beq	11ce4 <__errno_location@plt+0x92c>
   12664:	add	r2, r2, #4
   12668:	str	sl, [r2]
   1266c:	b	11cf4 <__errno_location@plt+0x93c>
   12670:	add	r2, r7, r0, lsl #2
   12674:	ldr	r3, [r2, #4]!
   12678:	cmp	r3, #0
   1267c:	streq	r6, [r2]
   12680:	str	r6, [r1]
   12684:	add	r0, r7, r0, lsl #2
   12688:	ldr	r1, [r0, #8]
   1268c:	add	r1, r1, #1
   12690:	str	r1, [r0, #8]
   12694:	mov	r0, r6
   12698:	b	126c8 <__errno_location@plt+0x1310>
   1269c:	add	r2, r6, r0, lsl #2
   126a0:	ldr	sl, [sp, #44]	; 0x2c
   126a4:	ldr	r3, [r2, #4]!
   126a8:	cmp	r3, #0
   126ac:	streq	r7, [r2]
   126b0:	str	r7, [r1]
   126b4:	add	r0, r6, r0, lsl #2
   126b8:	ldr	r1, [r0, #8]
   126bc:	add	r1, r1, #1
   126c0:	str	r1, [r0, #8]
   126c4:	mov	r0, r7
   126c8:	ldr	r2, [pc, #228]	; 127b4 <__errno_location@plt+0x13fc>
   126cc:	mov	r1, #1
   126d0:	add	r2, pc, r2
   126d4:	bl	127e8 <__errno_location@plt+0x1430>
   126d8:	ldr	r1, [pc, #216]	; 127b8 <__errno_location@plt+0x1400>
   126dc:	mov	r0, r4
   126e0:	add	r1, pc, r1
   126e4:	mov	r2, #1
   126e8:	bl	12ab4 <__errno_location@plt+0x16fc>
   126ec:	ldr	r0, [r5, #8]
   126f0:	ldr	r1, [r5, #4]
   126f4:	mov	r2, sl
   126f8:	cmp	r0, #0
   126fc:	streq	r1, [r4, #28]
   12700:	strne	r1, [r0, #4]
   12704:	ldrne	r1, [r5, #4]
   12708:	cmp	r1, #0
   1270c:	addne	r2, r1, #8
   12710:	str	r0, [r2]
   12714:	str	r8, [r5, #4]
   12718:	str	r8, [r5, #8]
   1271c:	ldr	r0, [r4, #32]
   12720:	sub	r0, r0, #1
   12724:	str	r0, [r4, #32]
   12728:	ldr	r0, [r9, #12]
   1272c:	cmp	r0, #0
   12730:	beq	12738 <__errno_location@plt+0x1380>
   12734:	bl	111f0 <free@plt>
   12738:	mov	r0, r9
   1273c:	bl	111f0 <free@plt>
   12740:	ldr	r5, [sp, #48]	; 0x30
   12744:	cmp	r5, #0
   12748:	bne	11d38 <__errno_location@plt+0x980>
   1274c:	ldr	r0, [r4, #16]
   12750:	ldr	r2, [pc, #140]	; 127e4 <__errno_location@plt+0x142c>
   12754:	mov	r1, #1
   12758:	mov	r3, r4
   1275c:	add	r2, pc, r2
   12760:	sub	sp, fp, #48	; 0x30
   12764:	vpop	{d8-d9}
   12768:	add	sp, sp, #4
   1276c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12770:	b	11130 <rb_setselect@plt>
   12774:	bl	112d4 <rb_outofmemory@plt>
   12778:	mov	r0, #0
   1277c:	bl	113ac <exit@plt>
   12780:	andeq	r2, r1, r0, lsr r3
   12784:	andeq	r1, r1, ip, ror #21
   12788:	andeq	r1, r0, ip, ror ip
   1278c:	andeq	r1, r0, r6, ror #24
   12790:			; <UNDEFINED> instruction: 0x000122b4
   12794:	ldrdeq	r0, [r0], -ip
   12798:	andeq	r2, r1, r0, asr #2
   1279c:	andeq	r1, r1, r0, lsr sp
   127a0:	andeq	r2, r1, r8, asr #1
   127a4:	andeq	r1, r0, r0, lsl r1
   127a8:	andeq	r8, r1, ip, lsr r0
   127ac:	andeq	r2, r1, r8, lsl #1
   127b0:	andeq	r1, r1, r0, asr lr
   127b4:	andeq	r1, r0, r0, asr #5
   127b8:	andeq	r1, r0, lr, lsr #5
   127bc:	andeq	r1, r0, r0, lsr r8
   127c0:	ldrdeq	r1, [r1], -r0
   127c4:	andeq	r1, r0, r2, lsl #12
   127c8:	muleq	r1, r4, r1
   127cc:	andeq	r1, r0, r8, asr #3
   127d0:	ldrdeq	r1, [r0], -ip
   127d4:	andeq	r1, r0, r7, asr #8
   127d8:	andeq	r1, r0, ip, ror r1
   127dc:	muleq	r0, r0, r1
   127e0:	strdeq	r1, [r0], -r7
   127e4:			; <UNDEFINED> instruction: 0xfffff374
   127e8:	sub	sp, sp, #4
   127ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   127f0:	add	fp, sp, #24
   127f4:	sub	sp, sp, #388	; 0x184
   127f8:	str	r3, [fp, #8]
   127fc:	mov	r4, r0
   12800:	ldrb	r0, [r0, #72]	; 0x48
   12804:	tst	r0, #8
   12808:	bne	129a8 <__errno_location@plt+0x15f0>
   1280c:	mov	r6, r1
   12810:	ldr	r0, [r4, #16]
   12814:	ldr	r1, [r4, #28]
   12818:	mov	r7, r2
   1281c:	bl	11394 <rb_rawbuf_flush@plt>
   12820:	ldr	r0, [r4, #20]
   12824:	ldr	r1, [r4, #32]
   12828:	bl	11394 <rb_rawbuf_flush@plt>
   1282c:	ldr	r0, [r4, #28]
   12830:	bl	11250 <rb_close@plt>
   12834:	ldrb	r0, [r4, #72]	; 0x48
   12838:	orr	r1, r0, #8
   1283c:	tst	r0, #64	; 0x40
   12840:	strb	r1, [r4, #72]	; 0x48
   12844:	bne	128b4 <__errno_location@plt+0x14fc>
   12848:	ldr	r2, [r4, #24]
   1284c:	movw	r3, #19923	; 0x4dd3
   12850:	ldr	r0, [r4, #8]
   12854:	ldr	r1, [r4, #4]
   12858:	movt	r3, #4194	; 0x1062
   1285c:	umull	r3, r5, r2, r3
   12860:	cmp	r0, #0
   12864:	lsr	r3, r5, #7
   12868:	mov	r5, #2000	; 0x7d0
   1286c:	mls	r2, r3, r5, r2
   12870:	ldr	r3, [pc, #320]	; 129b8 <__errno_location@plt+0x1600>
   12874:	add	r2, r2, r2, lsl #1
   12878:	add	r3, pc, r3
   1287c:	add	r2, r3, r2, lsl #2
   12880:	streq	r1, [r2, #4]
   12884:	strne	r1, [r0, #4]
   12888:	mov	r3, r2
   1288c:	ldrne	r1, [r4, #4]
   12890:	cmp	r1, #0
   12894:	addne	r3, r1, #8
   12898:	str	r0, [r3]
   1289c:	mov	r0, #0
   128a0:	str	r0, [r4, #4]
   128a4:	str	r0, [r4, #8]
   128a8:	ldr	r0, [r2, #8]
   128ac:	sub	r0, r0, #1
   128b0:	str	r0, [r2, #8]
   128b4:	ldr	r0, [r4, #32]
   128b8:	cmp	r6, #0
   128bc:	cmpne	r7, #0
   128c0:	bne	128f4 <__errno_location@plt+0x153c>
   128c4:	bl	11250 <rb_close@plt>
   128c8:	mov	r0, #0
   128cc:	str	r0, [r4, #4]
   128d0:	str	r4, [r4]
   128d4:	ldr	r0, [pc, #224]	; 129bc <__errno_location@plt+0x1604>
   128d8:	ldr	r0, [pc, r0]
   128dc:	cmp	r0, #0
   128e0:	str	r0, [r4, #8]
   128e4:	beq	1297c <__errno_location@plt+0x15c4>
   128e8:	add	r0, r0, #4
   128ec:	str	r4, [r0]
   128f0:	b	12990 <__errno_location@plt+0x15d8>
   128f4:	ldr	r2, [pc, #204]	; 129c8 <__errno_location@plt+0x1610>
   128f8:	mov	r1, #1
   128fc:	mov	r3, r4
   12900:	add	r2, pc, r2
   12904:	bl	11130 <rb_setselect@plt>
   12908:	ldr	r0, [r4, #32]
   1290c:	mov	r1, #2
   12910:	mov	r2, #0
   12914:	mov	r3, #0
   12918:	bl	11130 <rb_setselect@plt>
   1291c:	sub	r6, fp, #156	; 0x9c
   12920:	add	r3, fp, #8
   12924:	mov	r1, #128	; 0x80
   12928:	mov	r2, r7
   1292c:	mov	r0, r6
   12930:	str	r3, [fp, #-28]	; 0xffffffe4
   12934:	bl	11160 <vsnprintf@plt>
   12938:	mov	r0, #68	; 0x44
   1293c:	mov	r5, sp
   12940:	mov	r1, r6
   12944:	mov	r2, #251	; 0xfb
   12948:	strb	r0, [sp]
   1294c:	ldr	r0, [r4, #24]
   12950:	str	r0, [sp, #1]
   12954:	add	r0, r5, #5
   12958:	bl	111c0 <rb_strlcpy@plt>
   1295c:	mov	r0, r6
   12960:	bl	1122c <strlen@plt>
   12964:	ldr	r1, [r4, #12]
   12968:	add	r2, r0, #6
   1296c:	mov	r0, r1
   12970:	mov	r1, r5
   12974:	bl	12ab4 <__errno_location@plt+0x16fc>
   12978:	b	129a8 <__errno_location@plt+0x15f0>
   1297c:	ldr	r0, [pc, #60]	; 129c0 <__errno_location@plt+0x1608>
   12980:	add	r0, pc, r0
   12984:	ldr	r1, [r0, #4]!
   12988:	cmp	r1, #0
   1298c:	streq	r4, [r0]
   12990:	ldr	r0, [pc, #44]	; 129c4 <__errno_location@plt+0x160c>
   12994:	add	r0, pc, r0
   12998:	str	r4, [r0]
   1299c:	ldr	r1, [r0, #8]
   129a0:	add	r1, r1, #1
   129a4:	str	r1, [r0, #8]
   129a8:	sub	sp, fp, #24
   129ac:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   129b0:	add	sp, sp, #4
   129b4:	bx	lr
   129b8:	andeq	r1, r1, r0, asr #17
   129bc:	andeq	r1, r1, r4, asr r8
   129c0:	andeq	r1, r1, ip, lsr #15
   129c4:	muleq	r1, r8, r7
   129c8:	andeq	r0, r0, r4, asr #1
   129cc:	push	{r4, r5, r6, r7, fp, lr}
   129d0:	add	fp, sp, #16
   129d4:	sub	sp, sp, #16384	; 0x4000
   129d8:	cmp	r1, #0
   129dc:	beq	12a34 <__errno_location@plt+0x167c>
   129e0:	mov	r4, r1
   129e4:	mov	r5, sp
   129e8:	ldr	r0, [r4, #32]
   129ec:	mov	r1, r5
   129f0:	mov	r2, #16384	; 0x4000
   129f4:	bl	11214 <rb_read@plt>
   129f8:	cmp	r0, #0
   129fc:	beq	12a3c <__errno_location@plt+0x1684>
   12a00:	cmn	r0, #1
   12a04:	bgt	129e8 <__errno_location@plt+0x1630>
   12a08:	bl	113b8 <__errno_location@plt>
   12a0c:	ldr	r0, [r0]
   12a10:	bl	11100 <rb_ignore_errno@plt>
   12a14:	cmp	r0, #0
   12a18:	beq	12a3c <__errno_location@plt+0x1684>
   12a1c:	ldr	r0, [r4, #32]
   12a20:	ldr	r2, [pc, #136]	; 12ab0 <__errno_location@plt+0x16f8>
   12a24:	mov	r1, #1
   12a28:	mov	r3, r4
   12a2c:	add	r2, pc, r2
   12a30:	bl	11130 <rb_setselect@plt>
   12a34:	sub	sp, fp, #16
   12a38:	pop	{r4, r5, r6, r7, fp, pc}
   12a3c:	ldr	r0, [r4, #32]
   12a40:	bl	11250 <rb_close@plt>
   12a44:	mov	r0, #0
   12a48:	str	r0, [r4, #4]
   12a4c:	str	r4, [r4]
   12a50:	ldr	r0, [pc, #76]	; 12aa4 <__errno_location@plt+0x16ec>
   12a54:	ldr	r0, [pc, r0]
   12a58:	cmp	r0, #0
   12a5c:	str	r0, [r4, #8]
   12a60:	beq	12a70 <__errno_location@plt+0x16b8>
   12a64:	add	r0, r0, #4
   12a68:	str	r4, [r0]
   12a6c:	b	12a84 <__errno_location@plt+0x16cc>
   12a70:	ldr	r0, [pc, #48]	; 12aa8 <__errno_location@plt+0x16f0>
   12a74:	add	r0, pc, r0
   12a78:	ldr	r1, [r0, #4]!
   12a7c:	cmp	r1, #0
   12a80:	streq	r4, [r0]
   12a84:	ldr	r0, [pc, #32]	; 12aac <__errno_location@plt+0x16f4>
   12a88:	add	r0, pc, r0
   12a8c:	str	r4, [r0]
   12a90:	ldr	r1, [r0, #8]
   12a94:	add	r1, r1, #1
   12a98:	str	r1, [r0, #8]
   12a9c:	sub	sp, fp, #16
   12aa0:	pop	{r4, r5, r6, r7, fp, pc}
   12aa4:	ldrdeq	r1, [r1], -r8
   12aa8:			; <UNDEFINED> instruction: 0x000116b8
   12aac:	andeq	r1, r1, r4, lsr #13
   12ab0:			; <UNDEFINED> instruction: 0xffffff98
   12ab4:	push	{r4, r5, r6, r7, fp, lr}
   12ab8:	add	fp, sp, #16
   12abc:	mov	r7, r1
   12ac0:	mov	r4, r0
   12ac4:	mov	r0, #1
   12ac8:	mov	r1, #40	; 0x28
   12acc:	mov	r6, r2
   12ad0:	bl	1119c <calloc@plt>
   12ad4:	cmp	r0, #0
   12ad8:	beq	12b58 <__errno_location@plt+0x17a0>
   12adc:	mov	r5, r0
   12ae0:	mov	r0, #1
   12ae4:	mov	r1, r6
   12ae8:	bl	1119c <calloc@plt>
   12aec:	cmp	r0, #0
   12af0:	beq	12b58 <__errno_location@plt+0x17a0>
   12af4:	mov	r1, r7
   12af8:	mov	r2, r6
   12afc:	str	r0, [r5, #12]
   12b00:	str	r6, [r5, #16]
   12b04:	bl	11244 <memcpy@plt>
   12b08:	ldr	r0, [r4, #40]	; 0x28
   12b0c:	str	r5, [r5]
   12b10:	cmp	r0, #0
   12b14:	str	r0, [r5, #4]
   12b18:	beq	12b28 <__errno_location@plt+0x1770>
   12b1c:	add	r0, r0, #8
   12b20:	str	r5, [r0]
   12b24:	b	12b38 <__errno_location@plt+0x1780>
   12b28:	mov	r0, r4
   12b2c:	ldr	r1, [r0, #36]!	; 0x24
   12b30:	cmp	r1, #0
   12b34:	streq	r5, [r0]
   12b38:	str	r5, [r4, #40]	; 0x28
   12b3c:	ldr	r1, [r4, #44]	; 0x2c
   12b40:	ldr	r0, [r4, #16]
   12b44:	add	r1, r1, #1
   12b48:	str	r1, [r4, #44]	; 0x2c
   12b4c:	mov	r1, r4
   12b50:	pop	{r4, r5, r6, r7, fp, lr}
   12b54:	b	12b5c <__errno_location@plt+0x17a4>
   12b58:	bl	112d4 <rb_outofmemory@plt>
   12b5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b60:	add	fp, sp, #28
   12b64:	sub	sp, sp, #20
   12b68:	mov	r0, r1
   12b6c:	mov	r4, r1
   12b70:	add	r8, r1, #44	; 0x2c
   12b74:	ldr	sl, [r0, #36]!	; 0x24
   12b78:	cmp	sl, #0
   12b7c:	str	r0, [sp, #16]
   12b80:	beq	12c78 <__errno_location@plt+0x18c0>
   12b84:	str	r4, [sp, #12]
   12b88:	ldr	r5, [sl]
   12b8c:	ldr	r0, [r4, #16]
   12b90:	ldr	r9, [sl, #8]
   12b94:	ldr	r3, [r5, #12]
   12b98:	ldr	r1, [r5, #16]
   12b9c:	ldr	r2, [r5, #36]	; 0x24
   12ba0:	ldr	r7, [pc, #264]	; 12cb0 <__errno_location@plt+0x18f8>
   12ba4:	ldr	r7, [pc, r7]
   12ba8:	stm	sp, {r1, r7}
   12bac:	add	r7, r5, #20
   12bb0:	mov	r1, r7
   12bb4:	bl	11154 <rb_send_fd_buf@plt>
   12bb8:	mov	r6, r0
   12bbc:	cmp	r0, #1
   12bc0:	blt	12c48 <__errno_location@plt+0x1890>
   12bc4:	ldr	r0, [sl, #8]
   12bc8:	ldr	r1, [sl, #4]
   12bcc:	ldr	r2, [sp, #16]
   12bd0:	cmp	r0, #0
   12bd4:	streq	r1, [r4, #40]	; 0x28
   12bd8:	strne	r1, [r0, #4]
   12bdc:	ldrne	r1, [sl, #4]
   12be0:	cmp	r1, #0
   12be4:	addne	r2, r1, #8
   12be8:	str	r0, [r2]
   12bec:	mov	r0, #0
   12bf0:	str	r0, [sl, #4]
   12bf4:	str	r0, [sl, #8]
   12bf8:	ldr	r0, [r8]
   12bfc:	sub	r0, r0, #1
   12c00:	str	r0, [r8]
   12c04:	ldr	r0, [r5, #36]	; 0x24
   12c08:	cmp	r0, #1
   12c0c:	blt	12c2c <__errno_location@plt+0x1874>
   12c10:	mov	r4, #0
   12c14:	ldr	r0, [r7, r4, lsl #2]
   12c18:	bl	11250 <rb_close@plt>
   12c1c:	ldr	r0, [r5, #36]	; 0x24
   12c20:	add	r4, r4, #1
   12c24:	cmp	r4, r0
   12c28:	blt	12c14 <__errno_location@plt+0x185c>
   12c2c:	ldr	r0, [r5, #12]
   12c30:	cmp	r0, #0
   12c34:	beq	12c3c <__errno_location@plt+0x1884>
   12c38:	bl	111f0 <free@plt>
   12c3c:	mov	r0, r5
   12c40:	bl	111f0 <free@plt>
   12c44:	ldr	r4, [sp, #12]
   12c48:	cmp	r6, #0
   12c4c:	beq	12ca8 <__errno_location@plt+0x18f0>
   12c50:	cmn	r6, #1
   12c54:	bgt	12c6c <__errno_location@plt+0x18b4>
   12c58:	bl	113b8 <__errno_location@plt>
   12c5c:	ldr	r0, [r0]
   12c60:	bl	11100 <rb_ignore_errno@plt>
   12c64:	cmp	r0, #0
   12c68:	beq	12ca8 <__errno_location@plt+0x18f0>
   12c6c:	cmp	r9, #0
   12c70:	mov	sl, r9
   12c74:	bne	12b88 <__errno_location@plt+0x17d0>
   12c78:	ldr	r0, [r8]
   12c7c:	cmp	r0, #0
   12c80:	subeq	sp, fp, #28
   12c84:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c88:	ldr	r0, [r4, #16]
   12c8c:	ldr	r2, [pc, #32]	; 12cb4 <__errno_location@plt+0x18fc>
   12c90:	mov	r1, #2
   12c94:	mov	r3, r4
   12c98:	add	r2, pc, r2
   12c9c:	sub	sp, fp, #28
   12ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ca4:	b	11130 <rb_setselect@plt>
   12ca8:	mov	r0, #0
   12cac:	bl	113ac <exit@plt>
   12cb0:	andeq	r1, r1, ip, ror r5
   12cb4:			; <UNDEFINED> instruction: 0xfffffebc
   12cb8:	push	{r4, sl, fp, lr}
   12cbc:	add	fp, sp, #8
   12cc0:	sub	sp, sp, #80	; 0x50
   12cc4:	ldr	r4, [fp, #8]
   12cc8:	cmp	r1, #0
   12ccc:	beq	12ce8 <__errno_location@plt+0x1930>
   12cd0:	mov	r0, r4
   12cd4:	mov	r1, #0
   12cd8:	mov	r2, #0
   12cdc:	sub	sp, fp, #8
   12ce0:	pop	{r4, sl, fp, lr}
   12ce4:	b	127e8 <__errno_location@plt+0x1430>
   12ce8:	mov	r0, r4
   12cec:	bl	12d8c <__errno_location@plt+0x19d4>
   12cf0:	ldr	r0, [r4, #28]
   12cf4:	ldr	r2, [pc, #136]	; 12d84 <__errno_location@plt+0x19cc>
   12cf8:	add	r1, sp, #3
   12cfc:	add	r1, r1, #13
   12d00:	ldr	r2, [pc, r2]
   12d04:	bl	111cc <rb_get_ssl_certfp@plt>
   12d08:	cmp	r0, #0
   12d0c:	beq	12d44 <__errno_location@plt+0x198c>
   12d10:	mov	r1, #70	; 0x46
   12d14:	strb	r1, [sp, #3]
   12d18:	ldr	r1, [r4, #24]
   12d1c:	ldr	r2, [pc, #100]	; 12d88 <__errno_location@plt+0x19d0>
   12d20:	ldr	r2, [pc, r2]
   12d24:	str	r2, [sp, #8]
   12d28:	str	r0, [sp, #12]
   12d2c:	str	r1, [sp, #4]
   12d30:	add	r2, r0, #13
   12d34:	add	r1, sp, #3
   12d38:	ldr	r3, [r4, #12]
   12d3c:	mov	r0, r3
   12d40:	bl	12ab4 <__errno_location@plt+0x16fc>
   12d44:	mov	r0, #79	; 0x4f
   12d48:	add	r1, sp, #3
   12d4c:	mov	r2, #5
   12d50:	strb	r0, [sp, #3]
   12d54:	ldr	r0, [r4, #24]
   12d58:	str	r0, [sp, #4]
   12d5c:	ldr	r0, [r4, #12]
   12d60:	bl	12ab4 <__errno_location@plt+0x16fc>
   12d64:	ldr	r0, [r4, #28]
   12d68:	mov	r1, r4
   12d6c:	bl	12e10 <__errno_location@plt+0x1a58>
   12d70:	ldr	r0, [r4, #32]
   12d74:	mov	r1, r4
   12d78:	bl	12fe0 <__errno_location@plt+0x1c28>
   12d7c:	sub	sp, fp, #8
   12d80:	pop	{r4, sl, fp, pc}
   12d84:	strdeq	r7, [r1], -r8
   12d88:	ldrdeq	r7, [r1], -r8
   12d8c:	push	{r4, r5, r6, sl, fp, lr}
   12d90:	add	fp, sp, #16
   12d94:	sub	sp, sp, #768	; 0x300
   12d98:	mov	r4, r0
   12d9c:	ldrb	r0, [r0, #72]	; 0x48
   12da0:	tst	r0, #1
   12da4:	beq	12e08 <__errno_location@plt+0x1a50>
   12da8:	ldr	r0, [r4, #28]
   12dac:	bl	11238 <rb_ssl_get_cipher@plt>
   12db0:	cmp	r0, #0
   12db4:	beq	12e08 <__errno_location@plt+0x1a50>
   12db8:	mov	r5, sp
   12dbc:	mov	r1, r0
   12dc0:	mov	r2, #256	; 0x100
   12dc4:	mov	r0, r5
   12dc8:	bl	111c0 <rb_strlcpy@plt>
   12dcc:	mov	r0, #67	; 0x43
   12dd0:	add	r6, sp, #256	; 0x100
   12dd4:	mov	r1, r5
   12dd8:	strb	r0, [sp, #256]	; 0x100
   12ddc:	ldr	r0, [r4, #24]
   12de0:	str	r0, [sp, #257]	; 0x101
   12de4:	add	r0, r6, #5
   12de8:	bl	11274 <strcpy@plt>
   12dec:	mov	r0, r5
   12df0:	bl	1122c <strlen@plt>
   12df4:	ldr	r1, [r4, #12]
   12df8:	add	r2, r0, #6
   12dfc:	mov	r0, r1
   12e00:	mov	r1, r6
   12e04:	bl	12ab4 <__errno_location@plt+0x16fc>
   12e08:	sub	sp, fp, #16
   12e0c:	pop	{r4, r5, r6, sl, fp, pc}
   12e10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12e14:	add	fp, sp, #24
   12e18:	sub	sp, sp, #16384	; 0x4000
   12e1c:	cmp	r1, #0
   12e20:	beq	12ee4 <__errno_location@plt+0x1b2c>
   12e24:	ldrb	r0, [r1, #72]	; 0x48
   12e28:	mov	r4, r1
   12e2c:	tst	r0, #8
   12e30:	bne	12ee4 <__errno_location@plt+0x1b2c>
   12e34:	tst	r0, #32
   12e38:	beq	12e5c <__errno_location@plt+0x1aa4>
   12e3c:	and	r0, r0, #223	; 0xdf
   12e40:	mov	r1, r4
   12e44:	strb	r0, [r4, #72]	; 0x48
   12e48:	ldr	r0, [r4, #28]
   12e4c:	bl	13128 <__errno_location@plt+0x1d70>
   12e50:	ldrb	r0, [r4, #72]	; 0x48
   12e54:	tst	r0, #8
   12e58:	bne	12ee4 <__errno_location@plt+0x1b2c>
   12e5c:	tst	r0, #8
   12e60:	bne	12ee4 <__errno_location@plt+0x1b2c>
   12e64:	add	r7, r4, #48	; 0x30
   12e68:	mov	r5, sp
   12e6c:	ldr	r0, [r4, #28]
   12e70:	mov	r1, r5
   12e74:	mov	r2, #16384	; 0x4000
   12e78:	bl	11214 <rb_read@plt>
   12e7c:	cmp	r0, #0
   12e80:	beq	12eec <__errno_location@plt+0x1b34>
   12e84:	mov	r6, r0
   12e88:	cmn	r0, #1
   12e8c:	ble	12f00 <__errno_location@plt+0x1b48>
   12e90:	ldrd	r0, [r7]
   12e94:	adds	r0, r0, r6
   12e98:	adc	r1, r1, r6, asr #31
   12e9c:	strd	r0, [r7]
   12ea0:	ldrb	r0, [r4, #72]	; 0x48
   12ea4:	tst	r0, #2
   12ea8:	bne	12ec8 <__errno_location@plt+0x1b10>
   12eac:	tst	r0, #8
   12eb0:	bne	12ed8 <__errno_location@plt+0x1b20>
   12eb4:	ldr	r0, [r4, #20]
   12eb8:	mov	r1, r5
   12ebc:	mov	r2, r6
   12ec0:	bl	11388 <rb_rawbuf_append@plt>
   12ec4:	b	12ed8 <__errno_location@plt+0x1b20>
   12ec8:	mov	r0, r4
   12ecc:	mov	r1, r5
   12ed0:	mov	r2, r6
   12ed4:	bl	133c8 <__errno_location@plt+0x2010>
   12ed8:	ldrb	r0, [r4, #72]	; 0x48
   12edc:	tst	r0, #8
   12ee0:	beq	12e6c <__errno_location@plt+0x1ab4>
   12ee4:	sub	sp, fp, #24
   12ee8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12eec:	ldr	r2, [pc, #228]	; 12fd8 <__errno_location@plt+0x1c20>
   12ef0:	ldr	r3, [pc, #228]	; 12fdc <__errno_location@plt+0x1c24>
   12ef4:	add	r2, pc, r2
   12ef8:	add	r3, pc, r3
   12efc:	b	12fb8 <__errno_location@plt+0x1c00>
   12f00:	bl	113b8 <__errno_location@plt>
   12f04:	mov	r5, r0
   12f08:	ldr	r0, [r0]
   12f0c:	bl	11100 <rb_ignore_errno@plt>
   12f10:	cmp	r0, #0
   12f14:	beq	12f5c <__errno_location@plt+0x1ba4>
   12f18:	ldr	r0, [r4, #28]
   12f1c:	cmn	r6, #4
   12f20:	bne	12f7c <__errno_location@plt+0x1bc4>
   12f24:	mov	r1, #1
   12f28:	mov	r2, #0
   12f2c:	mov	r3, #0
   12f30:	bl	11130 <rb_setselect@plt>
   12f34:	ldr	r0, [r4, #28]
   12f38:	ldr	r2, [pc, #148]	; 12fd4 <__errno_location@plt+0x1c1c>
   12f3c:	mov	r1, #2
   12f40:	mov	r3, r4
   12f44:	add	r2, pc, r2
   12f48:	bl	11130 <rb_setselect@plt>
   12f4c:	ldrb	r0, [r4, #72]	; 0x48
   12f50:	orr	r0, r0, #32
   12f54:	strb	r0, [r4, #72]	; 0x48
   12f58:	b	12f90 <__errno_location@plt+0x1bd8>
   12f5c:	cmn	r6, #2
   12f60:	bne	12fa4 <__errno_location@plt+0x1bec>
   12f64:	ldrb	r0, [r4, #72]	; 0x48
   12f68:	ands	r0, r0, #1
   12f6c:	beq	12fa4 <__errno_location@plt+0x1bec>
   12f70:	ldr	r0, [r4, #28]
   12f74:	bl	112a4 <rb_get_ssl_strerror@plt>
   12f78:	b	12fac <__errno_location@plt+0x1bf4>
   12f7c:	ldr	r2, [pc, #76]	; 12fd0 <__errno_location@plt+0x1c18>
   12f80:	mov	r1, #1
   12f84:	mov	r3, r4
   12f88:	add	r2, pc, r2
   12f8c:	bl	11130 <rb_setselect@plt>
   12f90:	ldr	r0, [r4, #32]
   12f94:	mov	r1, r4
   12f98:	bl	132f8 <__errno_location@plt+0x1f40>
   12f9c:	sub	sp, fp, #24
   12fa0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12fa4:	ldr	r0, [r5]
   12fa8:	bl	110c4 <strerror@plt>
   12fac:	ldr	r2, [pc, #24]	; 12fcc <__errno_location@plt+0x1c14>
   12fb0:	mov	r3, r0
   12fb4:	add	r2, pc, r2
   12fb8:	mov	r0, r4
   12fbc:	mov	r1, #1
   12fc0:	bl	127e8 <__errno_location@plt+0x1430>
   12fc4:	sub	sp, fp, #24
   12fc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12fcc:			; <UNDEFINED> instruction: 0x000008b4
   12fd0:			; <UNDEFINED> instruction: 0xfffffe80
   12fd4:			; <UNDEFINED> instruction: 0xfffffec4
   12fd8:	strdeq	r0, [r0], -fp
   12fdc:	andeq	r0, r0, pc, lsl #19
   12fe0:	push	{r4, r5, r6, sl, fp, lr}
   12fe4:	add	fp, sp, #16
   12fe8:	sub	sp, sp, #16384	; 0x4000
   12fec:	cmp	r1, #0
   12ff0:	beq	13040 <__errno_location@plt+0x1c88>
   12ff4:	ldrb	r0, [r1, #72]	; 0x48
   12ff8:	mov	r4, r1
   12ffc:	tst	r0, #8
   13000:	bne	13040 <__errno_location@plt+0x1c88>
   13004:	ldr	r0, [r4, #16]
   13008:	bl	1128c <rb_rawbuf_length@plt>
   1300c:	cmp	r0, #4096	; 0x1000
   13010:	blt	13048 <__errno_location@plt+0x1c90>
   13014:	ldrb	r0, [r4, #72]	; 0x48
   13018:	mov	r1, #1
   1301c:	mov	r2, #0
   13020:	mov	r3, #0
   13024:	orr	r0, r0, #4
   13028:	strb	r0, [r4, #72]	; 0x48
   1302c:	ldr	r0, [r4, #32]
   13030:	bl	11130 <rb_setselect@plt>
   13034:	ldr	r0, [r4, #28]
   13038:	mov	r1, r4
   1303c:	bl	13128 <__errno_location@plt+0x1d70>
   13040:	sub	sp, fp, #16
   13044:	pop	{r4, r5, r6, sl, fp, pc}
   13048:	add	r6, r4, #56	; 0x38
   1304c:	mov	r5, sp
   13050:	ldrb	r0, [r4, #72]	; 0x48
   13054:	tst	r0, #8
   13058:	bne	13040 <__errno_location@plt+0x1c88>
   1305c:	ldr	r0, [r4, #32]
   13060:	mov	r1, r5
   13064:	mov	r2, #16384	; 0x4000
   13068:	bl	11214 <rb_read@plt>
   1306c:	cmp	r0, #0
   13070:	beq	1310c <__errno_location@plt+0x1d54>
   13074:	mov	r2, r0
   13078:	cmn	r0, #1
   1307c:	ble	130e0 <__errno_location@plt+0x1d28>
   13080:	ldrd	r0, [r6]
   13084:	adds	r0, r0, r2
   13088:	adc	r1, r1, r2, asr #31
   1308c:	strd	r0, [r6]
   13090:	ldrb	r0, [r4, #72]	; 0x48
   13094:	tst	r0, #2
   13098:	bne	130b4 <__errno_location@plt+0x1cfc>
   1309c:	tst	r0, #8
   130a0:	bne	130c0 <__errno_location@plt+0x1d08>
   130a4:	ldr	r0, [r4, #16]
   130a8:	mov	r1, r5
   130ac:	bl	11388 <rb_rawbuf_append@plt>
   130b0:	b	130c0 <__errno_location@plt+0x1d08>
   130b4:	mov	r0, r4
   130b8:	mov	r1, r5
   130bc:	bl	134f0 <__errno_location@plt+0x2138>
   130c0:	ldrb	r0, [r4, #72]	; 0x48
   130c4:	tst	r0, #8
   130c8:	bne	13040 <__errno_location@plt+0x1c88>
   130cc:	ldr	r0, [r4, #16]
   130d0:	bl	1128c <rb_rawbuf_length@plt>
   130d4:	cmp	r0, #4096	; 0x1000
   130d8:	blt	13050 <__errno_location@plt+0x1c98>
   130dc:	b	13014 <__errno_location@plt+0x1c5c>
   130e0:	bl	113b8 <__errno_location@plt>
   130e4:	ldr	r0, [r0]
   130e8:	bl	11100 <rb_ignore_errno@plt>
   130ec:	cmp	r0, #0
   130f0:	beq	1310c <__errno_location@plt+0x1d54>
   130f4:	ldr	r0, [r4, #32]
   130f8:	ldr	r2, [pc, #36]	; 13124 <__errno_location@plt+0x1d6c>
   130fc:	mov	r1, #1
   13100:	mov	r3, r4
   13104:	add	r2, pc, r2
   13108:	b	13030 <__errno_location@plt+0x1c78>
   1310c:	mov	r0, r4
   13110:	mov	r1, #0
   13114:	mov	r2, #0
   13118:	bl	127e8 <__errno_location@plt+0x1430>
   1311c:	sub	sp, fp, #16
   13120:	pop	{r4, r5, r6, sl, fp, pc}
   13124:			; <UNDEFINED> instruction: 0xfffffed4
   13128:	push	{r4, r5, r6, r7, fp, lr}
   1312c:	add	fp, sp, #16
   13130:	mov	r5, r0
   13134:	ldrb	r0, [r1, #72]	; 0x48
   13138:	tst	r0, #8
   1313c:	bne	132c8 <__errno_location@plt+0x1f10>
   13140:	mov	r4, r1
   13144:	tst	r0, #16
   13148:	beq	1316c <__errno_location@plt+0x1db4>
   1314c:	and	r0, r0, #239	; 0xef
   13150:	mov	r1, r4
   13154:	strb	r0, [r4, #72]	; 0x48
   13158:	ldr	r0, [r4, #28]
   1315c:	bl	12e10 <__errno_location@plt+0x1a58>
   13160:	ldrb	r0, [r4, #72]	; 0x48
   13164:	tst	r0, #8
   13168:	bne	132c8 <__errno_location@plt+0x1f10>
   1316c:	ldr	r0, [r4, #16]
   13170:	mov	r1, r5
   13174:	bl	11394 <rb_rawbuf_flush@plt>
   13178:	mov	r6, r0
   1317c:	cmp	r0, #1
   13180:	blt	131b0 <__errno_location@plt+0x1df8>
   13184:	add	r7, r4, #40	; 0x28
   13188:	ldrd	r0, [r7]
   1318c:	adds	r0, r0, r6
   13190:	adc	r1, r1, r6, asr #31
   13194:	strd	r0, [r7]
   13198:	mov	r1, r5
   1319c:	ldr	r0, [r4, #16]
   131a0:	bl	11394 <rb_rawbuf_flush@plt>
   131a4:	mov	r6, r0
   131a8:	cmp	r0, #0
   131ac:	bgt	13188 <__errno_location@plt+0x1dd0>
   131b0:	cmp	r6, #0
   131b4:	beq	13224 <__errno_location@plt+0x1e6c>
   131b8:	bl	113b8 <__errno_location@plt>
   131bc:	mov	r5, r0
   131c0:	ldr	r0, [r0]
   131c4:	bl	11100 <rb_ignore_errno@plt>
   131c8:	cmp	r0, #0
   131cc:	beq	13254 <__errno_location@plt+0x1e9c>
   131d0:	ldr	r0, [r4, #16]
   131d4:	bl	1128c <rb_rawbuf_length@plt>
   131d8:	cmp	r0, #1
   131dc:	blt	1328c <__errno_location@plt+0x1ed4>
   131e0:	ldr	r0, [r4, #28]
   131e4:	ldr	r2, [pc, #264]	; 132f4 <__errno_location@plt+0x1f3c>
   131e8:	cmn	r6, #3
   131ec:	add	r2, pc, r2
   131f0:	bne	132a0 <__errno_location@plt+0x1ee8>
   131f4:	mov	r1, #1
   131f8:	mov	r3, r4
   131fc:	bl	11130 <rb_setselect@plt>
   13200:	ldr	r0, [r4, #28]
   13204:	mov	r1, #2
   13208:	mov	r2, #0
   1320c:	mov	r3, #0
   13210:	bl	11130 <rb_setselect@plt>
   13214:	ldrb	r0, [r4, #72]	; 0x48
   13218:	orr	r0, r0, #16
   1321c:	strb	r0, [r4, #72]	; 0x48
   13220:	b	132ac <__errno_location@plt+0x1ef4>
   13224:	ldr	r2, [pc, #188]	; 132e8 <__errno_location@plt+0x1f30>
   13228:	ldr	r3, [pc, #188]	; 132ec <__errno_location@plt+0x1f34>
   1322c:	mov	r0, r4
   13230:	mov	r1, #1
   13234:	add	r2, pc, r2
   13238:	add	r3, pc, r3
   1323c:	bl	127e8 <__errno_location@plt+0x1430>
   13240:	bl	113b8 <__errno_location@plt>
   13244:	mov	r5, r0
   13248:	ldr	r0, [r5]
   1324c:	bl	110c4 <strerror@plt>
   13250:	b	13270 <__errno_location@plt+0x1eb8>
   13254:	cmn	r6, #2
   13258:	bne	13248 <__errno_location@plt+0x1e90>
   1325c:	ldrb	r0, [r4, #72]	; 0x48
   13260:	ands	r0, r0, #1
   13264:	beq	13248 <__errno_location@plt+0x1e90>
   13268:	ldr	r0, [r4, #28]
   1326c:	bl	112a4 <rb_get_ssl_strerror@plt>
   13270:	ldr	r2, [pc, #120]	; 132f0 <__errno_location@plt+0x1f38>
   13274:	mov	r3, r0
   13278:	mov	r0, r4
   1327c:	mov	r1, #1
   13280:	add	r2, pc, r2
   13284:	pop	{r4, r5, r6, r7, fp, lr}
   13288:	b	127e8 <__errno_location@plt+0x1430>
   1328c:	ldr	r0, [r4, #28]
   13290:	mov	r1, #2
   13294:	mov	r2, #0
   13298:	mov	r3, #0
   1329c:	b	132a8 <__errno_location@plt+0x1ef0>
   132a0:	mov	r1, #2
   132a4:	mov	r3, r4
   132a8:	bl	11130 <rb_setselect@plt>
   132ac:	ldrb	r0, [r4, #72]	; 0x48
   132b0:	tst	r0, #4
   132b4:	popeq	{r4, r5, r6, r7, fp, pc}
   132b8:	ldr	r0, [r4, #16]
   132bc:	bl	1128c <rb_rawbuf_length@plt>
   132c0:	cmp	r0, #0
   132c4:	beq	132cc <__errno_location@plt+0x1f14>
   132c8:	pop	{r4, r5, r6, r7, fp, pc}
   132cc:	ldrb	r0, [r4, #72]	; 0x48
   132d0:	mov	r1, r4
   132d4:	and	r0, r0, #251	; 0xfb
   132d8:	strb	r0, [r4, #72]	; 0x48
   132dc:	ldr	r0, [r4, #32]
   132e0:	pop	{r4, r5, r6, r7, fp, lr}
   132e4:	b	12fe0 <__errno_location@plt+0x1c28>
   132e8:			; <UNDEFINED> instruction: 0x000006bb
   132ec:	andeq	r0, r0, pc, asr #12
   132f0:	strdeq	r0, [r0], -r7
   132f4:			; <UNDEFINED> instruction: 0xffffff34
   132f8:	push	{r4, r5, r6, sl, fp, lr}
   132fc:	add	fp, sp, #16
   13300:	mov	r5, r0
   13304:	ldrb	r0, [r1, #72]	; 0x48
   13308:	tst	r0, #8
   1330c:	popne	{r4, r5, r6, sl, fp, pc}
   13310:	ldr	r0, [r1, #20]
   13314:	mov	r4, r1
   13318:	mov	r1, r5
   1331c:	bl	11394 <rb_rawbuf_flush@plt>
   13320:	cmp	r0, #1
   13324:	blt	13350 <__errno_location@plt+0x1f98>
   13328:	add	r6, r4, #64	; 0x40
   1332c:	ldrd	r2, [r6]
   13330:	mov	r1, r5
   13334:	adds	r2, r2, r0
   13338:	adc	r3, r3, r0, asr #31
   1333c:	strd	r2, [r6]
   13340:	ldr	r0, [r4, #20]
   13344:	bl	11394 <rb_rawbuf_flush@plt>
   13348:	cmp	r0, #0
   1334c:	bgt	1332c <__errno_location@plt+0x1f74>
   13350:	cmp	r0, #0
   13354:	beq	1339c <__errno_location@plt+0x1fe4>
   13358:	bl	113b8 <__errno_location@plt>
   1335c:	ldr	r0, [r0]
   13360:	bl	11100 <rb_ignore_errno@plt>
   13364:	cmp	r0, #0
   13368:	beq	1339c <__errno_location@plt+0x1fe4>
   1336c:	ldr	r0, [r4, #20]
   13370:	bl	1128c <rb_rawbuf_length@plt>
   13374:	mov	r1, r0
   13378:	ldr	r0, [r4, #32]
   1337c:	cmp	r1, #1
   13380:	blt	133b0 <__errno_location@plt+0x1ff8>
   13384:	ldr	r2, [pc, #56]	; 133c4 <__errno_location@plt+0x200c>
   13388:	mov	r1, #2
   1338c:	mov	r3, r4
   13390:	add	r2, pc, r2
   13394:	pop	{r4, r5, r6, sl, fp, lr}
   13398:	b	11130 <rb_setselect@plt>
   1339c:	mov	r0, r4
   133a0:	mov	r1, #0
   133a4:	mov	r2, #0
   133a8:	pop	{r4, r5, r6, sl, fp, lr}
   133ac:	b	127e8 <__errno_location@plt+0x1430>
   133b0:	mov	r1, #2
   133b4:	mov	r2, #0
   133b8:	mov	r3, #0
   133bc:	pop	{r4, r5, r6, sl, fp, lr}
   133c0:	b	11130 <rb_setselect@plt>
   133c4:			; <UNDEFINED> instruction: 0xffffff60
   133c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   133cc:	add	fp, sp, #24
   133d0:	sub	sp, sp, #16384	; 0x4000
   133d4:	mov	r4, r0
   133d8:	ldr	r0, [r0, #76]	; 0x4c
   133dc:	mov	r6, sp
   133e0:	mov	r5, #16384	; 0x4000
   133e4:	cmp	r2, #0
   133e8:	stm	r0, {r1, r2}
   133ec:	str	r6, [r0, #12]
   133f0:	str	r5, [r0, #16]
   133f4:	beq	134c0 <__errno_location@plt+0x2108>
   133f8:	mov	r8, r1
   133fc:	mov	r1, #0
   13400:	bl	111d8 <inflate@plt>
   13404:	cmp	r0, #0
   13408:	bne	13458 <__errno_location@plt+0x20a0>
   1340c:	ldr	r0, [r4, #76]	; 0x4c
   13410:	ldr	r2, [r0, #16]
   13414:	ldr	r1, [r0, #4]
   13418:	rsb	r2, r2, #16384	; 0x4000
   1341c:	cmp	r1, #0
   13420:	beq	134a0 <__errno_location@plt+0x20e8>
   13424:	ldrb	r3, [r4, #72]	; 0x48
   13428:	tst	r3, #8
   1342c:	bne	13444 <__errno_location@plt+0x208c>
   13430:	ldr	r0, [r4, #20]
   13434:	mov	r1, r6
   13438:	bl	11388 <rb_rawbuf_append@plt>
   1343c:	ldr	r0, [r4, #76]	; 0x4c
   13440:	ldr	r1, [r0, #4]
   13444:	cmp	r1, #0
   13448:	str	r6, [r0, #12]
   1344c:	str	r5, [r0, #16]
   13450:	bne	133fc <__errno_location@plt+0x2044>
   13454:	b	134c0 <__errno_location@plt+0x2108>
   13458:	mov	r7, r0
   1345c:	ldr	r0, [pc, #128]	; 134e4 <__errno_location@plt+0x212c>
   13460:	mov	r1, r8
   13464:	mov	r2, #6
   13468:	add	r0, pc, r0
   1346c:	bl	11370 <strncmp@plt>
   13470:	cmp	r0, #0
   13474:	beq	134c8 <__errno_location@plt+0x2110>
   13478:	mov	r0, r7
   1347c:	bl	110dc <zError@plt>
   13480:	ldr	r2, [pc, #100]	; 134ec <__errno_location@plt+0x2134>
   13484:	mov	r3, r0
   13488:	mov	r0, r4
   1348c:	mov	r1, #1
   13490:	add	r2, pc, r2
   13494:	bl	127e8 <__errno_location@plt+0x1430>
   13498:	sub	sp, fp, #24
   1349c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   134a0:	cmp	r2, #0
   134a4:	beq	134c0 <__errno_location@plt+0x2108>
   134a8:	ldrb	r0, [r4, #72]	; 0x48
   134ac:	tst	r0, #8
   134b0:	bne	134c0 <__errno_location@plt+0x2108>
   134b4:	ldr	r0, [r4, #20]
   134b8:	mov	r1, sp
   134bc:	bl	11388 <rb_rawbuf_append@plt>
   134c0:	sub	sp, fp, #24
   134c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   134c8:	ldr	r2, [pc, #24]	; 134e8 <__errno_location@plt+0x2130>
   134cc:	mov	r0, r4
   134d0:	mov	r1, #1
   134d4:	add	r2, pc, r2
   134d8:	bl	127e8 <__errno_location@plt+0x1430>
   134dc:	sub	sp, fp, #24
   134e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   134e4:	andeq	r0, r0, r1, asr #8
   134e8:	ldrdeq	r0, [r0], -ip
   134ec:	andeq	r0, r0, ip, lsr r4
   134f0:	push	{r4, r5, r6, r7, fp, lr}
   134f4:	add	fp, sp, #16
   134f8:	sub	sp, sp, #16384	; 0x4000
   134fc:	ldr	r5, [r0, #76]	; 0x4c
   13500:	mov	r4, r0
   13504:	mov	r0, sp
   13508:	str	r2, [r5, #60]	; 0x3c
   1350c:	str	r0, [r5, #68]	; 0x44
   13510:	mov	r2, #16384	; 0x4000
   13514:	mov	r0, r5
   13518:	str	r2, [r5, #72]	; 0x48
   1351c:	str	r1, [r0, #56]!	; 0x38
   13520:	mov	r1, #2
   13524:	bl	11184 <deflate@plt>
   13528:	cmp	r0, #0
   1352c:	beq	13554 <__errno_location@plt+0x219c>
   13530:	bl	110dc <zError@plt>
   13534:	ldr	r2, [pc, #124]	; 135b8 <__errno_location@plt+0x2200>
   13538:	mov	r3, r0
   1353c:	mov	r0, r4
   13540:	mov	r1, #1
   13544:	add	r2, pc, r2
   13548:	bl	127e8 <__errno_location@plt+0x1430>
   1354c:	sub	sp, fp, #16
   13550:	pop	{r4, r5, r6, r7, fp, pc}
   13554:	ldr	r1, [r5, #72]	; 0x48
   13558:	cmp	r1, #0
   1355c:	beq	13578 <__errno_location@plt+0x21c0>
   13560:	ldr	r0, [r5, #60]	; 0x3c
   13564:	cmp	r0, #0
   13568:	beq	13594 <__errno_location@plt+0x21dc>
   1356c:	ldr	r2, [pc, #76]	; 135c0 <__errno_location@plt+0x2208>
   13570:	add	r2, pc, r2
   13574:	b	13580 <__errno_location@plt+0x21c8>
   13578:	ldr	r2, [pc, #60]	; 135bc <__errno_location@plt+0x2204>
   1357c:	add	r2, pc, r2
   13580:	mov	r0, r4
   13584:	mov	r1, #1
   13588:	bl	127e8 <__errno_location@plt+0x1430>
   1358c:	sub	sp, fp, #16
   13590:	pop	{r4, r5, r6, r7, fp, pc}
   13594:	ldrb	r0, [r4, #72]	; 0x48
   13598:	tst	r0, #8
   1359c:	bne	135b0 <__errno_location@plt+0x21f8>
   135a0:	ldr	r0, [r4, #16]
   135a4:	rsb	r2, r1, #16384	; 0x4000
   135a8:	mov	r1, sp
   135ac:	bl	11388 <rb_rawbuf_append@plt>
   135b0:	sub	sp, fp, #16
   135b4:	pop	{r4, r5, r6, r7, fp, pc}
   135b8:	muleq	r0, fp, r3
   135bc:	andeq	r0, r0, r6, ror r3
   135c0:	andeq	r0, r0, r9, lsr #7
   135c4:	push	{r4, sl, fp, lr}
   135c8:	add	fp, sp, #8
   135cc:	sub	sp, sp, #80	; 0x50
   135d0:	mov	r4, r2
   135d4:	cmp	r1, #6
   135d8:	beq	13688 <__errno_location@plt+0x22d0>
   135dc:	cmp	r1, #3
   135e0:	beq	136b0 <__errno_location@plt+0x22f8>
   135e4:	cmp	r1, #0
   135e8:	bne	136bc <__errno_location@plt+0x2304>
   135ec:	mov	r0, r4
   135f0:	bl	12d8c <__errno_location@plt+0x19d4>
   135f4:	ldr	r0, [r4, #28]
   135f8:	ldr	r2, [pc, #216]	; 136d8 <__errno_location@plt+0x2320>
   135fc:	add	r1, sp, #3
   13600:	add	r1, r1, #13
   13604:	ldr	r2, [pc, r2]
   13608:	bl	111cc <rb_get_ssl_certfp@plt>
   1360c:	cmp	r0, #0
   13610:	beq	13648 <__errno_location@plt+0x2290>
   13614:	mov	r1, #70	; 0x46
   13618:	strb	r1, [sp, #3]
   1361c:	ldr	r1, [r4, #24]
   13620:	ldr	r2, [pc, #180]	; 136dc <__errno_location@plt+0x2324>
   13624:	ldr	r2, [pc, r2]
   13628:	str	r2, [sp, #8]
   1362c:	str	r0, [sp, #12]
   13630:	str	r1, [sp, #4]
   13634:	add	r2, r0, #13
   13638:	add	r1, sp, #3
   1363c:	ldr	r3, [r4, #12]
   13640:	mov	r0, r3
   13644:	bl	12ab4 <__errno_location@plt+0x16fc>
   13648:	mov	r0, #79	; 0x4f
   1364c:	add	r1, sp, #3
   13650:	mov	r2, #5
   13654:	strb	r0, [sp, #3]
   13658:	ldr	r0, [r4, #24]
   1365c:	str	r0, [sp, #4]
   13660:	ldr	r0, [r4, #12]
   13664:	bl	12ab4 <__errno_location@plt+0x16fc>
   13668:	ldr	r0, [r4, #28]
   1366c:	mov	r1, r4
   13670:	bl	12e10 <__errno_location@plt+0x1a58>
   13674:	ldr	r0, [r4, #32]
   13678:	mov	r1, r4
   1367c:	bl	12fe0 <__errno_location@plt+0x1c28>
   13680:	sub	sp, fp, #8
   13684:	pop	{r4, sl, fp, pc}
   13688:	ldr	r0, [r4, #28]
   1368c:	bl	112a4 <rb_get_ssl_strerror@plt>
   13690:	ldr	r2, [pc, #76]	; 136e4 <__errno_location@plt+0x232c>
   13694:	mov	r3, r0
   13698:	mov	r0, r4
   1369c:	mov	r1, #1
   136a0:	add	r2, pc, r2
   136a4:	sub	sp, fp, #8
   136a8:	pop	{r4, sl, fp, lr}
   136ac:	b	127e8 <__errno_location@plt+0x1430>
   136b0:	ldr	r2, [pc, #40]	; 136e0 <__errno_location@plt+0x2328>
   136b4:	add	r2, pc, r2
   136b8:	b	136c4 <__errno_location@plt+0x230c>
   136bc:	ldr	r2, [pc, #36]	; 136e8 <__errno_location@plt+0x2330>
   136c0:	add	r2, pc, r2
   136c4:	mov	r0, r4
   136c8:	mov	r1, #1
   136cc:	sub	sp, fp, #8
   136d0:	pop	{r4, sl, fp, lr}
   136d4:	b	127e8 <__errno_location@plt+0x1430>
   136d8:	strdeq	r6, [r1], -r4
   136dc:	ldrdeq	r6, [r1], -r4
   136e0:	andeq	r0, r0, fp, lsl #5
   136e4:	andeq	r0, r0, pc, asr #4
   136e8:	muleq	r0, r7, r2
   136ec:	push	{fp, lr}
   136f0:	mov	fp, sp
   136f4:	mul	r1, r2, r1
   136f8:	mov	r0, #1
   136fc:	bl	1119c <calloc@plt>
   13700:	cmp	r0, #0
   13704:	popne	{fp, pc}
   13708:	bl	112d4 <rb_outofmemory@plt>
   1370c:	cmp	r1, #0
   13710:	bxeq	lr
   13714:	mov	r0, r1
   13718:	b	111f0 <free@plt>
   1371c:	bx	lr
   13720:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13724:	mov	r7, r0
   13728:	ldr	r6, [pc, #72]	; 13778 <__errno_location@plt+0x23c0>
   1372c:	ldr	r5, [pc, #72]	; 1377c <__errno_location@plt+0x23c4>
   13730:	add	r6, pc, r6
   13734:	add	r5, pc, r5
   13738:	sub	r6, r6, r5
   1373c:	mov	r8, r1
   13740:	mov	r9, r2
   13744:	bl	1108c <open@plt-0x20>
   13748:	asrs	r6, r6, #2
   1374c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13750:	mov	r4, #0
   13754:	add	r4, r4, #1
   13758:	ldr	r3, [r5], #4
   1375c:	mov	r2, r9
   13760:	mov	r1, r8
   13764:	mov	r0, r7
   13768:	blx	r3
   1376c:	cmp	r6, r4
   13770:	bne	13754 <__errno_location@plt+0x239c>
   13774:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13778:			; <UNDEFINED> instruction: 0x000107b4
   1377c:	andeq	r0, r1, ip, lsr #15
   13780:	bx	lr

Disassembly of section .fini:

00013784 <.fini>:
   13784:	push	{r3, lr}
   13788:	pop	{r3, pc}
