
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf32-littlearm


Disassembly of section .init:

00011afc <.init>:
   11afc:	push	{r3, lr}
   11b00:	bl	11f98 <_start@@Base+0x3c>
   11b04:	pop	{r3, pc}

Disassembly of section .plt:

00011b08 <calloc@plt-0x14>:
   11b08:	push	{lr}		; (str lr, [sp, #-4]!)
   11b0c:	ldr	lr, [pc, #4]	; 11b18 <calloc@plt-0x4>
   11b10:	add	lr, pc, lr
   11b14:	ldr	pc, [lr, #8]!
   11b18:	andeq	r3, r1, r8, ror #9

00011b1c <calloc@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #77824	; 0x13000
   11b24:	ldr	pc, [ip, #1256]!	; 0x4e8

00011b28 <strcmp@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #77824	; 0x13000
   11b30:	ldr	pc, [ip, #1248]!	; 0x4e0

00011b34 <printf@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #77824	; 0x13000
   11b3c:	ldr	pc, [ip, #1240]!	; 0x4d8

00011b40 <free@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #77824	; 0x13000
   11b48:	ldr	pc, [ip, #1232]!	; 0x4d0

00011b4c <time@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #77824	; 0x13000
   11b54:	ldr	pc, [ip, #1224]!	; 0x4c8

00011b58 <realloc@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #77824	; 0x13000
   11b60:	ldr	pc, [ip, #1216]!	; 0x4c0

00011b64 <strcpy@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #77824	; 0x13000
   11b6c:	ldr	pc, [ip, #1208]!	; 0x4b8

00011b70 <puts@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #77824	; 0x13000
   11b78:	ldr	pc, [ip, #1200]!	; 0x4b0

00011b7c <malloc@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #77824	; 0x13000
   11b84:	ldr	pc, [ip, #1192]!	; 0x4a8

00011b88 <__libc_start_main@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #77824	; 0x13000
   11b90:	ldr	pc, [ip, #1184]!	; 0x4a0

00011b94 <__gmon_start__@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #77824	; 0x13000
   11b9c:	ldr	pc, [ip, #1176]!	; 0x498

00011ba0 <strlen@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #77824	; 0x13000
   11ba8:	ldr	pc, [ip, #1168]!	; 0x490

00011bac <srand@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #77824	; 0x13000
   11bb4:	ldr	pc, [ip, #1160]!	; 0x488

00011bb8 <snprintf@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #77824	; 0x13000
   11bc0:	ldr	pc, [ip, #1152]!	; 0x480

00011bc4 <__isoc99_sscanf@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #77824	; 0x13000
   11bcc:	ldr	pc, [ip, #1144]!	; 0x478

00011bd0 <rand@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #77824	; 0x13000
   11bd8:	ldr	pc, [ip, #1136]!	; 0x470

00011bdc <abort@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #77824	; 0x13000
   11be4:	ldr	pc, [ip, #1128]!	; 0x468

Disassembly of section .text:

00011be8 <main@@Base>:
   11be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bec:	sub	sp, sp, #356	; 0x164
   11bf0:	mov	r6, #0
   11bf4:	add	r0, sp, #36	; 0x24
   11bf8:	add	r4, sp, #40	; 0x28
   11bfc:	bl	11b4c <time@plt>
   11c00:	bl	11bac <srand@plt>
   11c04:	bl	11bd0 <rand@plt>
   11c08:	mov	r3, #100	; 0x64
   11c0c:	udiv	r5, r0, r3
   11c10:	mls	r5, r5, r3, r0
   11c14:	mov	r0, r4
   11c18:	add	r5, r5, r3
   11c1c:	bl	1204c <table_init@@Base>
   11c20:	mov	r0, r4
   11c24:	add	r6, r6, #1
   11c28:	bl	13d90 <table_add_row@@Base>
   11c2c:	cmp	r5, r6
   11c30:	bgt	11c20 <main@@Base+0x38>
   11c34:	mov	r0, r4
   11c38:	mov	r5, #5
   11c3c:	ldr	r7, [pc, #764]	; 11f40 <main@@Base+0x358>
   11c40:	bl	13d88 <table_get_row_length@@Base>
   11c44:	str	r0, [sp, #24]
   11c48:	mov	r6, #0
   11c4c:	bl	11bd0 <rand@plt>
   11c50:	udiv	r5, r0, r5
   11c54:	add	r5, r5, r5, lsl #2
   11c58:	sub	r0, r0, r5
   11c5c:	add	r5, r0, #2
   11c60:	mov	r3, r6
   11c64:	mov	r2, r7
   11c68:	mov	r1, #255	; 0xff
   11c6c:	add	r0, sp, #96	; 0x60
   11c70:	bl	11bb8 <snprintf@plt>
   11c74:	add	r6, r6, #1
   11c78:	mov	r2, #0
   11c7c:	add	r1, sp, #96	; 0x60
   11c80:	mov	r0, r4
   11c84:	bl	132d8 <table_add_column@@Base>
   11c88:	cmp	r5, r6
   11c8c:	bgt	11c60 <main@@Base+0x78>
   11c90:	mov	r0, r4
   11c94:	mov	r5, #0
   11c98:	bl	1326c <table_get_column_length@@Base>
   11c9c:	mov	r8, r0
   11ca0:	mov	r7, #20
   11ca4:	cmp	r5, r8
   11ca8:	blt	11da4 <main@@Base+0x1bc>
   11cac:	mov	r1, #4
   11cb0:	mov	r0, r8
   11cb4:	bl	11b1c <calloc@plt>
   11cb8:	mov	r1, #4
   11cbc:	str	r0, [sp, #16]
   11cc0:	mov	r0, r8
   11cc4:	bl	11b1c <calloc@plt>
   11cc8:	mov	r5, #0
   11ccc:	mov	sl, r0
   11cd0:	cmp	r5, r8
   11cd4:	blt	11dac <main@@Base+0x1c4>
   11cd8:	mov	r3, r8
   11cdc:	mvn	r7, #0
   11ce0:	ldr	r1, [sp, #16]
   11ce4:	mov	r2, sl
   11ce8:	mov	r0, r4
   11cec:	bl	146c8 <table_column_sort@@Base>
   11cf0:	mov	r9, r7
   11cf4:	mov	r3, #0
   11cf8:	str	r7, [sp, #12]
   11cfc:	str	r3, [sp, #20]
   11d00:	ldr	r3, [sp, #24]
   11d04:	add	r6, r7, #1
   11d08:	cmp	r6, r3
   11d0c:	blt	11dd0 <main@@Base+0x1e8>
   11d10:	cmn	r9, #1
   11d14:	beq	11d4c <main@@Base+0x164>
   11d18:	add	r0, sp, #40	; 0x28
   11d1c:	ldr	r7, [pc, #544]	; 11f44 <main@@Base+0x35c>
   11d20:	mov	r4, #0
   11d24:	bl	13d88 <table_get_row_length@@Base>
   11d28:	ldr	r8, [pc, #536]	; 11f48 <main@@Base+0x360>
   11d2c:	add	r0, sp, #40	; 0x28
   11d30:	bl	13d88 <table_get_row_length@@Base>
   11d34:	ldr	fp, [pc, #528]	; 11f4c <main@@Base+0x364>
   11d38:	mov	r6, r0
   11d3c:	ldr	r0, [pc, #520]	; 11f4c <main@@Base+0x364>
   11d40:	bl	11b70 <puts@plt>
   11d44:	cmp	r4, r6
   11d48:	blt	11f38 <main@@Base+0x350>
   11d4c:	add	r0, sp, #40	; 0x28
   11d50:	bl	120a4 <table_destroy@@Base>
   11d54:	ldr	r0, [sp, #16]
   11d58:	bl	11b40 <free@plt>
   11d5c:	mov	r0, sl
   11d60:	bl	11b40 <free@plt>
   11d64:	ldr	r0, [sp, #20]
   11d68:	add	sp, sp, #356	; 0x164
   11d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d70:	bl	11bd0 <rand@plt>
   11d74:	sdiv	r3, r0, r7
   11d78:	mov	r1, r6
   11d7c:	mov	r2, r5
   11d80:	add	r6, r6, #1
   11d84:	mls	r3, r3, r7, r0
   11d88:	mov	r0, r4
   11d8c:	bl	14240 <table_set_int@@Base>
   11d90:	ldr	r3, [sp, #24]
   11d94:	cmp	r6, r3
   11d98:	blt	11d70 <main@@Base+0x188>
   11d9c:	add	r5, r5, #1
   11da0:	b	11ca4 <main@@Base+0xbc>
   11da4:	mov	r6, #0
   11da8:	b	11d90 <main@@Base+0x1a8>
   11dac:	ldr	r3, [sp, #16]
   11db0:	str	r5, [r3, r5, lsl #2]
   11db4:	bl	11bd0 <rand@plt>
   11db8:	cmp	r0, #0
   11dbc:	and	r0, r0, #1
   11dc0:	rsblt	r0, r0, #0
   11dc4:	str	r0, [sl, r5, lsl #2]
   11dc8:	add	r5, r5, #1
   11dcc:	b	11cd0 <main@@Base+0xe8>
   11dd0:	cmp	r6, #0
   11dd4:	ble	11ecc <main@@Base+0x2e4>
   11dd8:	mov	r5, #0
   11ddc:	b	11ec4 <main@@Base+0x2dc>
   11de0:	cmp	r5, #0
   11de4:	bne	11e30 <main@@Base+0x248>
   11de8:	ldr	r3, [sl, r5, lsl #2]
   11dec:	cmp	r3, #0
   11df0:	beq	11e74 <main@@Base+0x28c>
   11df4:	mov	r2, r5
   11df8:	mov	r1, r7
   11dfc:	mov	r0, r4
   11e00:	bl	13c20 <table_get_int@@Base>
   11e04:	mov	fp, r0
   11e08:	mov	r2, r5
   11e0c:	mov	r1, r6
   11e10:	mov	r0, r4
   11e14:	bl	13c20 <table_get_int@@Base>
   11e18:	cmp	fp, r0
   11e1c:	bge	11ec0 <main@@Base+0x2d8>
   11e20:	mov	r2, r5
   11e24:	mov	r1, r6
   11e28:	ldr	r0, [pc, #288]	; 11f50 <main@@Base+0x368>
   11e2c:	b	11eac <main@@Base+0x2c4>
   11e30:	sub	fp, r5, #1
   11e34:	mov	r2, fp
   11e38:	mov	r1, r6
   11e3c:	mov	r0, r4
   11e40:	bl	13c20 <table_get_int@@Base>
   11e44:	mov	r3, r0
   11e48:	mov	r2, fp
   11e4c:	mov	r1, r7
   11e50:	mov	r0, r4
   11e54:	str	r3, [sp, #28]
   11e58:	bl	13c20 <table_get_int@@Base>
   11e5c:	ldr	r3, [sp, #28]
   11e60:	cmp	r3, r0
   11e64:	bne	11ecc <main@@Base+0x2e4>
   11e68:	subs	fp, fp, #1
   11e6c:	bcs	11e34 <main@@Base+0x24c>
   11e70:	b	11de8 <main@@Base+0x200>
   11e74:	mov	r2, r5
   11e78:	mov	r1, r7
   11e7c:	mov	r0, r4
   11e80:	bl	13c20 <table_get_int@@Base>
   11e84:	mov	fp, r0
   11e88:	mov	r2, r5
   11e8c:	mov	r1, r6
   11e90:	mov	r0, r4
   11e94:	bl	13c20 <table_get_int@@Base>
   11e98:	cmp	fp, r0
   11e9c:	ble	11ec0 <main@@Base+0x2d8>
   11ea0:	ldr	r0, [pc, #172]	; 11f54 <main@@Base+0x36c>
   11ea4:	mov	r2, r5
   11ea8:	mov	r1, r6
   11eac:	bl	11b34 <printf@plt>
   11eb0:	mov	r9, r6
   11eb4:	mvn	r3, #0
   11eb8:	str	r5, [sp, #12]
   11ebc:	str	r3, [sp, #20]
   11ec0:	add	r5, r5, #1
   11ec4:	cmp	r5, r8
   11ec8:	blt	11de0 <main@@Base+0x1f8>
   11ecc:	mov	r7, r6
   11ed0:	b	11d00 <main@@Base+0x118>
   11ed4:	mov	r3, #255	; 0xff
   11ed8:	mov	r2, r5
   11edc:	mov	r1, r4
   11ee0:	add	r0, sp, #40	; 0x28
   11ee4:	str	r3, [sp]
   11ee8:	add	r3, sp, #96	; 0x60
   11eec:	bl	128e4 <table_cell_to_buffer@@Base>
   11ef0:	ldr	r3, [sp, #12]
   11ef4:	add	r1, sp, #96	; 0x60
   11ef8:	cmp	r9, r4
   11efc:	cmpeq	r3, r5
   11f00:	add	r5, r5, #1
   11f04:	moveq	r0, r8
   11f08:	movne	r0, r7
   11f0c:	bl	11b34 <printf@plt>
   11f10:	add	r0, sp, #40	; 0x28
   11f14:	bl	1326c <table_get_column_length@@Base>
   11f18:	cmp	r0, r5
   11f1c:	bgt	11ed4 <main@@Base+0x2ec>
   11f20:	cmp	r9, r4
   11f24:	add	r4, r4, #1
   11f28:	ldreq	r0, [pc, #40]	; 11f58 <main@@Base+0x370>
   11f2c:	movne	r0, fp
   11f30:	bl	11b70 <puts@plt>
   11f34:	b	11d44 <main@@Base+0x15c>
   11f38:	mov	r5, #0
   11f3c:	b	11f10 <main@@Base+0x328>
   11f40:	strdeq	r4, [r1], -ip
   11f44:	muleq	r1, r9, r9
   11f48:	muleq	r1, r4, r9
   11f4c:	muleq	r1, lr, r9
   11f50:	andeq	r4, r1, fp, asr #18
   11f54:	andeq	r4, r1, r3, lsl #18
   11f58:	muleq	r1, sp, r9

00011f5c <_start@@Base>:
   11f5c:	mov	fp, #0
   11f60:	mov	lr, #0
   11f64:	pop	{r1}		; (ldr r1, [sp], #4)
   11f68:	mov	r2, sp
   11f6c:	push	{r2}		; (str r2, [sp, #-4]!)
   11f70:	push	{r0}		; (str r0, [sp, #-4]!)
   11f74:	ldr	ip, [pc, #16]	; 11f8c <_start@@Base+0x30>
   11f78:	push	{ip}		; (str ip, [sp, #-4]!)
   11f7c:	ldr	r0, [pc, #12]	; 11f90 <_start@@Base+0x34>
   11f80:	ldr	r3, [pc, #12]	; 11f94 <_start@@Base+0x38>
   11f84:	bl	11b88 <__libc_start_main@plt>
   11f88:	bl	11bdc <abort@plt>
   11f8c:	andeq	r4, r1, ip, ror #17
   11f90:	andeq	r1, r1, r8, ror #23
   11f94:	andeq	r4, r1, ip, lsl #17
   11f98:	ldr	r3, [pc, #20]	; 11fb4 <_start@@Base+0x58>
   11f9c:	ldr	r2, [pc, #20]	; 11fb8 <_start@@Base+0x5c>
   11fa0:	add	r3, pc, r3
   11fa4:	ldr	r2, [r3, r2]
   11fa8:	cmp	r2, #0
   11fac:	bxeq	lr
   11fb0:	b	11b94 <__gmon_start__@plt>
   11fb4:	andeq	r3, r1, r8, asr r0
   11fb8:	andeq	r0, r0, r0, asr r0
   11fbc:	ldr	r0, [pc, #24]	; 11fdc <_start@@Base+0x80>
   11fc0:	ldr	r3, [pc, #24]	; 11fe0 <_start@@Base+0x84>
   11fc4:	cmp	r3, r0
   11fc8:	bxeq	lr
   11fcc:	ldr	r3, [pc, #16]	; 11fe4 <_start@@Base+0x88>
   11fd0:	cmp	r3, #0
   11fd4:	bxeq	lr
   11fd8:	bx	r3
   11fdc:	andeq	r5, r2, ip, asr r0
   11fe0:	andeq	r5, r2, ip, asr r0
   11fe4:	andeq	r0, r0, r0
   11fe8:	ldr	r0, [pc, #36]	; 12014 <_start@@Base+0xb8>
   11fec:	ldr	r1, [pc, #36]	; 12018 <_start@@Base+0xbc>
   11ff0:	sub	r1, r1, r0
   11ff4:	asr	r1, r1, #2
   11ff8:	add	r1, r1, r1, lsr #31
   11ffc:	asrs	r1, r1, #1
   12000:	bxeq	lr
   12004:	ldr	r3, [pc, #16]	; 1201c <_start@@Base+0xc0>
   12008:	cmp	r3, #0
   1200c:	bxeq	lr
   12010:	bx	r3
   12014:	andeq	r5, r2, ip, asr r0
   12018:	andeq	r5, r2, ip, asr r0
   1201c:	andeq	r0, r0, r0
   12020:	push	{r4, lr}
   12024:	ldr	r4, [pc, #24]	; 12044 <_start@@Base+0xe8>
   12028:	ldrb	r3, [r4]
   1202c:	cmp	r3, #0
   12030:	popne	{r4, pc}
   12034:	bl	11fbc <_start@@Base+0x60>
   12038:	mov	r3, #1
   1203c:	strb	r3, [r4]
   12040:	pop	{r4, pc}
   12044:	andeq	r5, r2, ip, asr r0
   12048:	b	11fe8 <_start@@Base+0x8c>

0001204c <table_init@@Base>:
   1204c:	mov	r3, #0
   12050:	mov	r2, #10
   12054:	mov	r1, #20
   12058:	str	r3, [r0]
   1205c:	str	r3, [r0, #4]
   12060:	strd	r2, [r0, #8]
   12064:	str	r3, [r0, #16]
   12068:	str	r3, [r0, #20]
   1206c:	str	r1, [r0, #24]
   12070:	str	r3, [r0, #28]
   12074:	str	r3, [r0, #32]
   12078:	str	r3, [r0, #36]	; 0x24
   1207c:	str	r3, [r0, #40]	; 0x28
   12080:	str	r3, [r0, #44]	; 0x2c
   12084:	strd	r2, [r0, #48]	; 0x30
   12088:	bx	lr

0001208c <table_new@@Base>:
   1208c:	push	{r4, lr}
   12090:	mov	r0, #56	; 0x38
   12094:	bl	11b7c <malloc@plt>
   12098:	mov	r4, r0
   1209c:	bl	1204c <table_init@@Base>
   120a0:	pop	{r4, pc}

000120a4 <table_destroy@@Base>:
   120a4:	push	{r4, r5, r6, lr}
   120a8:	subs	r4, r0, #0
   120ac:	popeq	{r4, r5, r6, pc}
   120b0:	mvn	r2, #0
   120b4:	mov	r3, #64	; 0x40
   120b8:	mov	r1, r2
   120bc:	mov	r5, #0
   120c0:	bl	12878 <table_notify@@Base>
   120c4:	mov	r0, r4
   120c8:	bl	13d88 <table_get_row_length@@Base>
   120cc:	mov	r6, r0
   120d0:	cmp	r6, r5
   120d4:	bgt	12144 <table_destroy@@Base+0xa0>
   120d8:	ldr	r0, [r4, #16]
   120dc:	cmp	r0, #0
   120e0:	beq	120e8 <table_destroy@@Base+0x44>
   120e4:	bl	11b40 <free@plt>
   120e8:	mov	r0, r4
   120ec:	mov	r5, #0
   120f0:	bl	1326c <table_get_column_length@@Base>
   120f4:	mov	r6, r0
   120f8:	cmp	r6, r5
   120fc:	bgt	12158 <table_destroy@@Base+0xb4>
   12100:	ldr	r0, [r4]
   12104:	cmp	r0, #0
   12108:	beq	12110 <table_destroy@@Base+0x6c>
   1210c:	bl	11b40 <free@plt>
   12110:	ldr	r0, [r4, #36]	; 0x24
   12114:	cmp	r0, #0
   12118:	beq	12120 <table_destroy@@Base+0x7c>
   1211c:	bl	11b40 <free@plt>
   12120:	ldr	r0, [r4, #40]	; 0x28
   12124:	cmp	r0, #0
   12128:	beq	12130 <table_destroy@@Base+0x8c>
   1212c:	bl	11b40 <free@plt>
   12130:	ldr	r0, [r4, #44]	; 0x2c
   12134:	cmp	r0, #0
   12138:	popeq	{r4, r5, r6, pc}
   1213c:	pop	{r4, r5, r6, lr}
   12140:	b	11b40 <free@plt>
   12144:	mov	r1, r5
   12148:	mov	r0, r4
   1214c:	bl	13d38 <table_row_destroy@@Base>
   12150:	add	r5, r5, #1
   12154:	b	120d0 <table_destroy@@Base+0x2c>
   12158:	mov	r1, r5
   1215c:	mov	r0, r4
   12160:	bl	13250 <table_column_destroy@@Base>
   12164:	add	r5, r5, #1
   12168:	b	120f8 <table_destroy@@Base+0x54>

0001216c <table_delete@@Base>:
   1216c:	push	{r4, lr}
   12170:	mov	r4, r0
   12174:	bl	120a4 <table_destroy@@Base>
   12178:	mov	r0, r4
   1217c:	pop	{r4, lr}
   12180:	b	11b40 <free@plt>

00012184 <table_dupe@@Base>:
   12184:	push	{r4, r5, r6, r7, r8, r9, lr}
   12188:	sub	sp, sp, #20
   1218c:	mov	r6, r0
   12190:	mov	r4, #0
   12194:	bl	13d88 <table_get_row_length@@Base>
   12198:	mov	r9, r0
   1219c:	mov	r0, r6
   121a0:	bl	1326c <table_get_column_length@@Base>
   121a4:	mov	r8, r0
   121a8:	bl	1208c <table_new@@Base>
   121ac:	mov	r7, r0
   121b0:	cmp	r4, r8
   121b4:	blt	121d0 <table_dupe@@Base+0x4c>
   121b8:	mov	r5, #0
   121bc:	cmp	r5, r9
   121c0:	mov	r0, r7
   121c4:	blt	12204 <table_dupe@@Base+0x80>
   121c8:	add	sp, sp, #20
   121cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   121d0:	mov	r1, r4
   121d4:	mov	r0, r6
   121d8:	bl	13530 <table_get_column_name@@Base>
   121dc:	mov	r5, r0
   121e0:	mov	r1, r4
   121e4:	mov	r0, r6
   121e8:	add	r4, r4, #1
   121ec:	bl	132c4 <table_get_column_data_type@@Base>
   121f0:	mov	r2, r0
   121f4:	mov	r1, r5
   121f8:	mov	r0, r7
   121fc:	bl	132d8 <table_add_column@@Base>
   12200:	b	121b0 <table_dupe@@Base+0x2c>
   12204:	mov	r4, #0
   12208:	bl	13d90 <table_add_row@@Base>
   1220c:	cmp	r4, r8
   12210:	addge	r5, r5, #1
   12214:	bge	121bc <table_dupe@@Base+0x38>
   12218:	mov	r1, r4
   1221c:	mov	r0, r6
   12220:	bl	132c4 <table_get_column_data_type@@Base>
   12224:	cmp	r0, #23
   12228:	ldrls	pc, [pc, r0, lsl #2]
   1222c:	b	122b4 <table_dupe@@Base+0x130>
   12230:	muleq	r1, r0, r2
   12234:			; <UNDEFINED> instruction: 0x000122bc
   12238:	andeq	r2, r1, r4, ror #5
   1223c:	andeq	r2, r1, ip, lsl #6
   12240:	andeq	r2, r1, r4, lsr r3
   12244:	andeq	r2, r1, ip, asr r3
   12248:	andeq	r2, r1, r4, lsl #7
   1224c:	andeq	r2, r1, ip, lsr #7
   12250:	ldrdeq	r2, [r1], -r4
   12254:	strdeq	r2, [r1], -ip
   12258:	andeq	r2, r1, r4, lsr #8
   1225c:	andeq	r2, r1, ip, asr #8
   12260:	andeq	r2, r1, r4, ror r4
   12264:	muleq	r1, ip, r4
   12268:	andeq	r2, r1, r4, asr #9
   1226c:	andeq	r2, r1, ip, ror #9
   12270:	andeq	r2, r1, ip, lsr r5
   12274:	andeq	r2, r1, r0, ror #10
   12278:	andeq	r2, r1, r4, lsl #11
   1227c:	ldrdeq	r2, [r1], -r0
   12280:	strdeq	r2, [r1], -r8
   12284:	andeq	r2, r1, r4, lsl r5
   12288:	andeq	r2, r1, r8, lsr #11
   1228c:	andeq	r2, r1, r0, lsr #12
   12290:	mov	r2, r4
   12294:	mov	r1, r5
   12298:	mov	r0, r6
   1229c:	bl	13c20 <table_get_int@@Base>
   122a0:	mov	r3, r0
   122a4:	mov	r2, r4
   122a8:	mov	r1, r5
   122ac:	mov	r0, r7
   122b0:	bl	14240 <table_set_int@@Base>
   122b4:	add	r4, r4, #1
   122b8:	b	1220c <table_dupe@@Base+0x88>
   122bc:	mov	r2, r4
   122c0:	mov	r1, r5
   122c4:	mov	r0, r6
   122c8:	bl	13c30 <table_get_uint@@Base>
   122cc:	mov	r3, r0
   122d0:	mov	r2, r4
   122d4:	mov	r1, r5
   122d8:	mov	r0, r7
   122dc:	bl	14260 <table_set_uint@@Base>
   122e0:	b	122b4 <table_dupe@@Base+0x130>
   122e4:	mov	r2, r4
   122e8:	mov	r1, r5
   122ec:	mov	r0, r6
   122f0:	bl	13c40 <table_get_int8@@Base>
   122f4:	mov	r3, r0
   122f8:	mov	r2, r4
   122fc:	mov	r1, r5
   12300:	mov	r0, r7
   12304:	bl	14280 <table_set_int8@@Base>
   12308:	b	122b4 <table_dupe@@Base+0x130>
   1230c:	mov	r2, r4
   12310:	mov	r1, r5
   12314:	mov	r0, r6
   12318:	bl	13c50 <table_get_uint8@@Base>
   1231c:	mov	r3, r0
   12320:	mov	r2, r4
   12324:	mov	r1, r5
   12328:	mov	r0, r7
   1232c:	bl	142a0 <table_set_uint8@@Base>
   12330:	b	122b4 <table_dupe@@Base+0x130>
   12334:	mov	r2, r4
   12338:	mov	r1, r5
   1233c:	mov	r0, r6
   12340:	bl	13c60 <table_get_int16@@Base>
   12344:	mov	r3, r0
   12348:	mov	r2, r4
   1234c:	mov	r1, r5
   12350:	mov	r0, r7
   12354:	bl	142c0 <table_set_int16@@Base>
   12358:	b	122b4 <table_dupe@@Base+0x130>
   1235c:	mov	r2, r4
   12360:	mov	r1, r5
   12364:	mov	r0, r6
   12368:	bl	13c70 <table_get_uint16@@Base>
   1236c:	mov	r3, r0
   12370:	mov	r2, r4
   12374:	mov	r1, r5
   12378:	mov	r0, r7
   1237c:	bl	142e0 <table_set_uint16@@Base>
   12380:	b	122b4 <table_dupe@@Base+0x130>
   12384:	mov	r2, r4
   12388:	mov	r1, r5
   1238c:	mov	r0, r6
   12390:	bl	13c80 <table_get_int32@@Base>
   12394:	mov	r3, r0
   12398:	mov	r2, r4
   1239c:	mov	r1, r5
   123a0:	mov	r0, r7
   123a4:	bl	14300 <table_set_int32@@Base>
   123a8:	b	122b4 <table_dupe@@Base+0x130>
   123ac:	mov	r2, r4
   123b0:	mov	r1, r5
   123b4:	mov	r0, r6
   123b8:	bl	13c84 <table_get_uint32@@Base>
   123bc:	mov	r3, r0
   123c0:	mov	r2, r4
   123c4:	mov	r1, r5
   123c8:	mov	r0, r7
   123cc:	bl	14320 <table_set_uint32@@Base>
   123d0:	b	122b4 <table_dupe@@Base+0x130>
   123d4:	mov	r2, r4
   123d8:	mov	r1, r5
   123dc:	mov	r0, r6
   123e0:	bl	13c88 <table_get_int64@@Base>
   123e4:	mov	r2, r4
   123e8:	strd	r0, [sp]
   123ec:	mov	r1, r5
   123f0:	mov	r0, r7
   123f4:	bl	14340 <table_set_int64@@Base>
   123f8:	b	122b4 <table_dupe@@Base+0x130>
   123fc:	mov	r2, r4
   12400:	mov	r1, r5
   12404:	mov	r0, r6
   12408:	bl	13c98 <table_get_uint64@@Base>
   1240c:	mov	r2, r4
   12410:	strd	r0, [sp]
   12414:	mov	r1, r5
   12418:	mov	r0, r7
   1241c:	bl	1435c <table_set_uint64@@Base>
   12420:	b	122b4 <table_dupe@@Base+0x130>
   12424:	mov	r2, r4
   12428:	mov	r1, r5
   1242c:	mov	r0, r6
   12430:	bl	13ca8 <table_get_short@@Base>
   12434:	mov	r3, r0
   12438:	mov	r2, r4
   1243c:	mov	r1, r5
   12440:	mov	r0, r7
   12444:	bl	14378 <table_set_short@@Base>
   12448:	b	122b4 <table_dupe@@Base+0x130>
   1244c:	mov	r2, r4
   12450:	mov	r1, r5
   12454:	mov	r0, r6
   12458:	bl	13cac <table_get_ushort@@Base>
   1245c:	mov	r3, r0
   12460:	mov	r2, r4
   12464:	mov	r1, r5
   12468:	mov	r0, r7
   1246c:	bl	14398 <table_set_ushort@@Base>
   12470:	b	122b4 <table_dupe@@Base+0x130>
   12474:	mov	r2, r4
   12478:	mov	r1, r5
   1247c:	mov	r0, r6
   12480:	bl	13cb0 <table_get_long@@Base>
   12484:	mov	r3, r0
   12488:	mov	r2, r4
   1248c:	mov	r1, r5
   12490:	mov	r0, r7
   12494:	bl	143b8 <table_set_long@@Base>
   12498:	b	122b4 <table_dupe@@Base+0x130>
   1249c:	mov	r2, r4
   124a0:	mov	r1, r5
   124a4:	mov	r0, r6
   124a8:	bl	13cc0 <table_get_ulong@@Base>
   124ac:	mov	r3, r0
   124b0:	mov	r2, r4
   124b4:	mov	r1, r5
   124b8:	mov	r0, r7
   124bc:	bl	143d8 <table_set_ulong@@Base>
   124c0:	b	122b4 <table_dupe@@Base+0x130>
   124c4:	mov	r2, r4
   124c8:	mov	r1, r5
   124cc:	mov	r0, r6
   124d0:	bl	13cd0 <table_get_llong@@Base>
   124d4:	mov	r2, r4
   124d8:	strd	r0, [sp]
   124dc:	mov	r1, r5
   124e0:	mov	r0, r7
   124e4:	bl	143f8 <table_set_llong@@Base>
   124e8:	b	122b4 <table_dupe@@Base+0x130>
   124ec:	mov	r2, r4
   124f0:	mov	r1, r5
   124f4:	mov	r0, r6
   124f8:	bl	13cd4 <table_get_ullong@@Base>
   124fc:	mov	r2, r4
   12500:	strd	r0, [sp]
   12504:	mov	r1, r5
   12508:	mov	r0, r7
   1250c:	bl	14414 <table_set_ullong@@Base>
   12510:	b	122b4 <table_dupe@@Base+0x130>
   12514:	mov	r2, r4
   12518:	mov	r1, r5
   1251c:	mov	r0, r6
   12520:	bl	13d10 <table_get_string@@Base>
   12524:	mov	r3, r0
   12528:	mov	r2, r4
   1252c:	mov	r1, r5
   12530:	mov	r0, r7
   12534:	bl	14490 <table_set_string@@Base>
   12538:	b	122b4 <table_dupe@@Base+0x130>
   1253c:	mov	r2, r4
   12540:	mov	r1, r5
   12544:	mov	r0, r6
   12548:	bl	13cd8 <table_get_float@@Base>
   1254c:	mov	r2, r4
   12550:	mov	r1, r5
   12554:	mov	r0, r7
   12558:	bl	14430 <table_set_float@@Base>
   1255c:	b	122b4 <table_dupe@@Base+0x130>
   12560:	mov	r2, r4
   12564:	mov	r1, r5
   12568:	mov	r0, r6
   1256c:	bl	13ce8 <table_get_double@@Base>
   12570:	mov	r2, r4
   12574:	mov	r1, r5
   12578:	mov	r0, r7
   1257c:	bl	14450 <table_set_double@@Base>
   12580:	b	122b4 <table_dupe@@Base+0x130>
   12584:	mov	r2, r4
   12588:	mov	r1, r5
   1258c:	mov	r0, r6
   12590:	bl	13cf8 <table_get_ldouble@@Base>
   12594:	mov	r2, r4
   12598:	mov	r1, r5
   1259c:	mov	r0, r7
   125a0:	bl	14470 <table_set_ldouble@@Base>
   125a4:	b	122b4 <table_dupe@@Base+0x130>
   125a8:	mov	r2, r4
   125ac:	mov	r1, r5
   125b0:	mov	r0, r6
   125b4:	bl	13c10 <table_get_bool@@Base>
   125b8:	mov	r3, r0
   125bc:	mov	r2, r4
   125c0:	mov	r1, r5
   125c4:	mov	r0, r7
   125c8:	bl	14220 <table_set_bool@@Base>
   125cc:	b	122b4 <table_dupe@@Base+0x130>
   125d0:	mov	r2, r4
   125d4:	mov	r1, r5
   125d8:	mov	r0, r6
   125dc:	bl	13d08 <table_get_char@@Base>
   125e0:	mov	r3, r0
   125e4:	mov	r2, r4
   125e8:	mov	r1, r5
   125ec:	mov	r0, r7
   125f0:	bl	144a8 <table_set_char@@Base>
   125f4:	b	122b4 <table_dupe@@Base+0x130>
   125f8:	mov	r2, r4
   125fc:	mov	r1, r5
   12600:	mov	r0, r6
   12604:	bl	13d0c <table_get_uchar@@Base>
   12608:	mov	r3, r0
   1260c:	mov	r2, r4
   12610:	mov	r1, r5
   12614:	mov	r0, r7
   12618:	bl	144c8 <table_set_uchar@@Base>
   1261c:	b	122b4 <table_dupe@@Base+0x130>
   12620:	mov	r2, r4
   12624:	mov	r1, r5
   12628:	mov	r0, r6
   1262c:	bl	13d14 <table_get_ptr@@Base>
   12630:	add	r3, sp, #12
   12634:	mov	r2, r4
   12638:	str	r0, [sp, #12]
   1263c:	mov	r1, r5
   12640:	mov	r0, r7
   12644:	bl	144e8 <table_set_ptr@@Base>
   12648:	b	122b4 <table_dupe@@Base+0x130>

0001264c <table_get_major_version@@Base>:
   1264c:	mov	r0, #0
   12650:	bx	lr

00012654 <table_get_minor_version@@Base>:
   12654:	mov	r0, #0
   12658:	bx	lr

0001265c <table_get_patch_version@@Base>:
   1265c:	mov	r0, #0
   12660:	bx	lr

00012664 <table_get_version@@Base>:
   12664:	ldr	r0, [pc]	; 1266c <table_get_version@@Base+0x8>
   12668:	bx	lr
   1266c:	muleq	r1, r8, r9

00012670 <table_get_callback_length@@Base>:
   12670:	ldr	r0, [r0, #32]
   12674:	bx	lr

00012678 <table_register_callback@@Base>:
   12678:	push	{r4, r5, r6, r7, r8, lr}
   1267c:	mov	r4, r0
   12680:	mov	ip, #0
   12684:	ldr	lr, [r0, #32]
   12688:	ldr	r0, [r0, #36]	; 0x24
   1268c:	cmp	ip, lr
   12690:	blt	12720 <table_register_callback@@Base+0xa8>
   12694:	ldr	ip, [r4, #48]	; 0x30
   12698:	mov	r5, r3
   1269c:	mov	r6, r2
   126a0:	mov	r7, r1
   126a4:	udiv	r3, lr, ip
   126a8:	mls	r3, ip, r3, lr
   126ac:	cmp	r3, #0
   126b0:	bne	126f4 <table_register_callback@@Base+0x7c>
   126b4:	ldr	r1, [r4, #52]	; 0x34
   126b8:	add	r1, ip, r1
   126bc:	str	r1, [r4, #52]	; 0x34
   126c0:	lsl	r1, r1, #2
   126c4:	bl	11b58 <realloc@plt>
   126c8:	ldr	r1, [r4, #52]	; 0x34
   126cc:	str	r0, [r4, #36]	; 0x24
   126d0:	ldr	r0, [r4, #40]	; 0x28
   126d4:	lsl	r1, r1, #2
   126d8:	bl	11b58 <realloc@plt>
   126dc:	ldr	r1, [r4, #52]	; 0x34
   126e0:	str	r0, [r4, #40]	; 0x28
   126e4:	ldr	r0, [r4, #44]	; 0x2c
   126e8:	lsl	r1, r1, #2
   126ec:	bl	11b58 <realloc@plt>
   126f0:	str	r0, [r4, #44]	; 0x2c
   126f4:	ldr	r3, [r4, #32]
   126f8:	ldr	r2, [r4, #36]	; 0x24
   126fc:	str	r7, [r2, r3, lsl #2]
   12700:	ldr	r2, [r4, #40]	; 0x28
   12704:	str	r6, [r2, r3, lsl #2]
   12708:	ldr	r2, [r4, #44]	; 0x2c
   1270c:	str	r5, [r2, r3, lsl #2]
   12710:	ldr	r3, [r4, #32]
   12714:	add	r3, r3, #1
   12718:	str	r3, [r4, #32]
   1271c:	pop	{r4, r5, r6, r7, r8, pc}
   12720:	ldr	r6, [r0, ip, lsl #2]
   12724:	lsl	r5, ip, #2
   12728:	cmp	r1, r6
   1272c:	bne	12740 <table_register_callback@@Base+0xc8>
   12730:	ldr	r6, [r4, #40]	; 0x28
   12734:	ldr	r6, [r6, ip, lsl #2]
   12738:	cmp	r2, r6
   1273c:	beq	12748 <table_register_callback@@Base+0xd0>
   12740:	add	ip, ip, #1
   12744:	b	1268c <table_register_callback@@Base+0x14>
   12748:	cmp	ip, #0
   1274c:	ble	12694 <table_register_callback@@Base+0x1c>
   12750:	ldr	r1, [r4, #44]	; 0x2c
   12754:	ldr	r2, [r1, r5]
   12758:	orr	r2, r2, r3
   1275c:	str	r2, [r1, r5]
   12760:	pop	{r4, r5, r6, r7, r8, pc}

00012764 <table_unregister_callback@@Base>:
   12764:	ldr	ip, [r0, #32]
   12768:	mov	r3, #0
   1276c:	cmp	r3, ip
   12770:	bxge	lr
   12774:	push	{r4, r5, r6, lr}
   12778:	ldr	lr, [r0, #36]	; 0x24
   1277c:	ldr	lr, [lr, r3, lsl #2]
   12780:	cmp	r1, lr
   12784:	bne	12798 <table_unregister_callback@@Base+0x34>
   12788:	ldr	lr, [r0, #40]	; 0x28
   1278c:	ldr	lr, [lr, r3, lsl #2]
   12790:	cmp	r2, lr
   12794:	beq	127d8 <table_unregister_callback@@Base+0x74>
   12798:	add	r3, r3, #1
   1279c:	cmp	r3, ip
   127a0:	blt	12778 <table_unregister_callback@@Base+0x14>
   127a4:	pop	{r4, r5, r6, pc}
   127a8:	ldr	r1, [r0, #36]	; 0x24
   127ac:	add	r2, r3, #1
   127b0:	lsl	r3, r3, #2
   127b4:	ldr	ip, [r1, r2, lsl #2]
   127b8:	str	ip, [r1, r3]
   127bc:	ldr	r1, [r0, #40]	; 0x28
   127c0:	ldr	ip, [r1, r2, lsl #2]
   127c4:	str	ip, [r1, r3]
   127c8:	ldr	r1, [r0, #44]	; 0x2c
   127cc:	ldr	ip, [r1, r2, lsl #2]
   127d0:	str	ip, [r1, r3]
   127d4:	mov	r3, r2
   127d8:	ldr	r2, [r0, #32]
   127dc:	sub	r2, r2, #1
   127e0:	cmp	r2, r3
   127e4:	bgt	127a8 <table_unregister_callback@@Base+0x44>
   127e8:	ldr	r1, [r0, #48]	; 0x30
   127ec:	str	r2, [r0, #32]
   127f0:	udiv	r3, r2, r1
   127f4:	mls	r2, r1, r3, r2
   127f8:	cmp	r2, #0
   127fc:	popne	{r4, r5, r6, pc}
   12800:	mov	r4, r0
   12804:	ldr	r5, [r4, #52]	; 0x34
   12808:	ldr	r0, [r0, #36]	; 0x24
   1280c:	sub	r5, r5, r1
   12810:	cmp	r5, #0
   12814:	str	r5, [r4, #52]	; 0x34
   12818:	beq	12854 <table_unregister_callback@@Base+0xf0>
   1281c:	lsl	r1, r5, #2
   12820:	bl	11b58 <realloc@plt>
   12824:	ldr	r1, [r4, #52]	; 0x34
   12828:	str	r0, [r4, #36]	; 0x24
   1282c:	ldr	r0, [r4, #40]	; 0x28
   12830:	lsl	r1, r1, #2
   12834:	bl	11b58 <realloc@plt>
   12838:	ldr	r1, [r4, #52]	; 0x34
   1283c:	str	r0, [r4, #40]	; 0x28
   12840:	ldr	r0, [r4, #44]	; 0x2c
   12844:	lsl	r1, r1, #2
   12848:	bl	11b58 <realloc@plt>
   1284c:	str	r0, [r4, #44]	; 0x2c
   12850:	pop	{r4, r5, r6, pc}
   12854:	bl	11b40 <free@plt>
   12858:	ldr	r0, [r4, #40]	; 0x28
   1285c:	bl	11b40 <free@plt>
   12860:	ldr	r0, [r4, #44]	; 0x2c
   12864:	bl	11b40 <free@plt>
   12868:	str	r5, [r4, #36]	; 0x24
   1286c:	str	r5, [r4, #40]	; 0x28
   12870:	str	r5, [r4, #44]	; 0x2c
   12874:	pop	{r4, r5, r6, pc}

00012878 <table_notify@@Base>:
   12878:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1287c:	mov	r5, r0
   12880:	mov	r7, r1
   12884:	mov	r8, r2
   12888:	mov	r6, r3
   1288c:	mov	r4, #0
   12890:	ldr	r3, [r5, #32]
   12894:	cmp	r3, r4
   12898:	bgt	128a4 <table_notify@@Base+0x2c>
   1289c:	add	sp, sp, #12
   128a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   128a4:	ldr	r3, [r5, #44]	; 0x2c
   128a8:	ldr	r3, [r3, r4, lsl #2]
   128ac:	tst	r6, r3
   128b0:	beq	128dc <table_notify@@Base+0x64>
   128b4:	ldr	r3, [r5, #36]	; 0x24
   128b8:	mov	r1, r7
   128bc:	mov	r0, r5
   128c0:	ldr	r2, [r5, #40]	; 0x28
   128c4:	ldr	r2, [r2, r4, lsl #2]
   128c8:	str	r2, [sp]
   128cc:	mov	r2, r8
   128d0:	ldr	r9, [r3, r4, lsl #2]
   128d4:	mov	r3, r6
   128d8:	blx	r9
   128dc:	add	r4, r4, #1
   128e0:	b	12890 <table_notify@@Base+0x18>

000128e4 <table_cell_to_buffer@@Base>:
   128e4:	push	{r4, r5, r6, r7, lr}
   128e8:	sub	sp, sp, #20
   128ec:	mov	r7, r1
   128f0:	mov	r1, r2
   128f4:	mov	r6, r0
   128f8:	mov	r4, r3
   128fc:	str	r2, [sp, #12]
   12900:	ldr	r5, [sp, #40]	; 0x28
   12904:	bl	132c4 <table_get_column_data_type@@Base>
   12908:	ldr	r2, [sp, #12]
   1290c:	cmp	r0, #23
   12910:	ldrls	pc, [pc, r0, lsl #2]
   12914:	b	12a34 <table_cell_to_buffer@@Base+0x150>
   12918:	andeq	r2, r1, r8, ror r9
   1291c:	muleq	r1, r0, r9
   12920:			; <UNDEFINED> instruction: 0x000129b4
   12924:	andeq	r2, r1, r4, asr #19
   12928:	ldrdeq	r2, [r1], -r4
   1292c:	andeq	r2, r1, r4, ror #19
   12930:	strdeq	r2, [r1], -r4
   12934:	andeq	r2, r1, r4, lsl #20
   12938:	andeq	r2, r1, r4, lsl sl
   1293c:	andeq	r2, r1, r0, asr #20
   12940:	andeq	r2, r1, r8, asr sl
   12944:	andeq	r2, r1, r0, ror sl
   12948:	andeq	r2, r1, r8, lsl #21
   1294c:	andeq	r2, r1, r0, lsr #21
   12950:			; <UNDEFINED> instruction: 0x00012ab8
   12954:	andeq	r2, r1, r8, asr #21
   12958:	strdeq	r2, [r1], -r0
   1295c:	andeq	r2, r1, r8, lsl fp
   12960:	andeq	r2, r1, r0, lsr fp
   12964:	andeq	r2, r1, r8, asr fp
   12968:	andeq	r2, r1, r0, ror fp
   1296c:	ldrdeq	r2, [r1], -r8
   12970:	andeq	r2, r1, r8, asr #22
   12974:	andeq	r2, r1, r0, lsl #23
   12978:	mov	r1, r7
   1297c:	mov	r0, r6
   12980:	bl	13c20 <table_get_int@@Base>
   12984:	mov	r3, r0
   12988:	ldr	r2, [pc, #520]	; 12b98 <table_cell_to_buffer@@Base+0x2b4>
   1298c:	b	129a4 <table_cell_to_buffer@@Base+0xc0>
   12990:	mov	r1, r7
   12994:	mov	r0, r6
   12998:	bl	13c30 <table_get_uint@@Base>
   1299c:	ldr	r2, [pc, #504]	; 12b9c <table_cell_to_buffer@@Base+0x2b8>
   129a0:	mov	r3, r0
   129a4:	mov	r1, r5
   129a8:	mov	r0, r4
   129ac:	bl	11bb8 <snprintf@plt>
   129b0:	b	12a34 <table_cell_to_buffer@@Base+0x150>
   129b4:	mov	r1, r7
   129b8:	mov	r0, r6
   129bc:	bl	13c40 <table_get_int8@@Base>
   129c0:	b	12984 <table_cell_to_buffer@@Base+0xa0>
   129c4:	mov	r1, r7
   129c8:	mov	r0, r6
   129cc:	bl	13c50 <table_get_uint8@@Base>
   129d0:	b	1299c <table_cell_to_buffer@@Base+0xb8>
   129d4:	mov	r1, r7
   129d8:	mov	r0, r6
   129dc:	bl	13c60 <table_get_int16@@Base>
   129e0:	b	12984 <table_cell_to_buffer@@Base+0xa0>
   129e4:	mov	r1, r7
   129e8:	mov	r0, r6
   129ec:	bl	13c70 <table_get_uint16@@Base>
   129f0:	b	1299c <table_cell_to_buffer@@Base+0xb8>
   129f4:	mov	r1, r7
   129f8:	mov	r0, r6
   129fc:	bl	13c80 <table_get_int32@@Base>
   12a00:	b	12984 <table_cell_to_buffer@@Base+0xa0>
   12a04:	mov	r1, r7
   12a08:	mov	r0, r6
   12a0c:	bl	13c84 <table_get_uint32@@Base>
   12a10:	b	1299c <table_cell_to_buffer@@Base+0xb8>
   12a14:	mov	r1, r7
   12a18:	mov	r0, r6
   12a1c:	bl	13c88 <table_get_int64@@Base>
   12a20:	ldr	r2, [pc, #376]	; 12ba0 <table_cell_to_buffer@@Base+0x2bc>
   12a24:	strd	r0, [sp]
   12a28:	mov	r1, r5
   12a2c:	mov	r0, r4
   12a30:	bl	11bb8 <snprintf@plt>
   12a34:	mov	r0, #0
   12a38:	add	sp, sp, #20
   12a3c:	pop	{r4, r5, r6, r7, pc}
   12a40:	mov	r1, r7
   12a44:	mov	r0, r6
   12a48:	bl	13c98 <table_get_uint64@@Base>
   12a4c:	ldr	r2, [pc, #336]	; 12ba4 <table_cell_to_buffer@@Base+0x2c0>
   12a50:	strd	r0, [sp]
   12a54:	b	12a28 <table_cell_to_buffer@@Base+0x144>
   12a58:	mov	r1, r7
   12a5c:	mov	r0, r6
   12a60:	bl	13ca8 <table_get_short@@Base>
   12a64:	mov	r3, r0
   12a68:	ldr	r2, [pc, #312]	; 12ba8 <table_cell_to_buffer@@Base+0x2c4>
   12a6c:	b	129a4 <table_cell_to_buffer@@Base+0xc0>
   12a70:	mov	r1, r7
   12a74:	mov	r0, r6
   12a78:	bl	13cac <table_get_ushort@@Base>
   12a7c:	mov	r3, r0
   12a80:	ldr	r2, [pc, #292]	; 12bac <table_cell_to_buffer@@Base+0x2c8>
   12a84:	b	129a4 <table_cell_to_buffer@@Base+0xc0>
   12a88:	mov	r1, r7
   12a8c:	mov	r0, r6
   12a90:	bl	13cb0 <table_get_long@@Base>
   12a94:	mov	r3, r0
   12a98:	ldr	r2, [pc, #272]	; 12bb0 <table_cell_to_buffer@@Base+0x2cc>
   12a9c:	b	129a4 <table_cell_to_buffer@@Base+0xc0>
   12aa0:	mov	r1, r7
   12aa4:	mov	r0, r6
   12aa8:	bl	13cc0 <table_get_ulong@@Base>
   12aac:	mov	r3, r0
   12ab0:	ldr	r2, [pc, #252]	; 12bb4 <table_cell_to_buffer@@Base+0x2d0>
   12ab4:	b	129a4 <table_cell_to_buffer@@Base+0xc0>
   12ab8:	mov	r1, r7
   12abc:	mov	r0, r6
   12ac0:	bl	13cd0 <table_get_llong@@Base>
   12ac4:	b	12a20 <table_cell_to_buffer@@Base+0x13c>
   12ac8:	mov	r1, r7
   12acc:	mov	r0, r6
   12ad0:	bl	13cd4 <table_get_ullong@@Base>
   12ad4:	b	12a4c <table_cell_to_buffer@@Base+0x168>
   12ad8:	mov	r1, r7
   12adc:	mov	r0, r6
   12ae0:	bl	13d10 <table_get_string@@Base>
   12ae4:	mov	r3, r0
   12ae8:	ldr	r2, [pc, #200]	; 12bb8 <table_cell_to_buffer@@Base+0x2d4>
   12aec:	b	129a4 <table_cell_to_buffer@@Base+0xc0>
   12af0:	mov	r1, r7
   12af4:	mov	r0, r6
   12af8:	bl	13cd8 <table_get_float@@Base>
   12afc:	vcvt.f64.f32	d0, s0
   12b00:	ldr	r2, [pc, #180]	; 12bbc <table_cell_to_buffer@@Base+0x2d8>
   12b04:	vstr	d0, [sp]
   12b08:	mov	r1, r5
   12b0c:	mov	r0, r4
   12b10:	bl	11bb8 <snprintf@plt>
   12b14:	b	12a34 <table_cell_to_buffer@@Base+0x150>
   12b18:	mov	r1, r7
   12b1c:	mov	r0, r6
   12b20:	bl	13ce8 <table_get_double@@Base>
   12b24:	ldr	r2, [pc, #148]	; 12bc0 <table_cell_to_buffer@@Base+0x2dc>
   12b28:	vstr	d0, [sp]
   12b2c:	b	12b08 <table_cell_to_buffer@@Base+0x224>
   12b30:	mov	r1, r7
   12b34:	mov	r0, r6
   12b38:	bl	13cf8 <table_get_ldouble@@Base>
   12b3c:	ldr	r2, [pc, #128]	; 12bc4 <table_cell_to_buffer@@Base+0x2e0>
   12b40:	vstr	d0, [sp]
   12b44:	b	12b08 <table_cell_to_buffer@@Base+0x224>
   12b48:	mov	r1, r7
   12b4c:	mov	r0, r6
   12b50:	bl	13c10 <table_get_bool@@Base>
   12b54:	b	12984 <table_cell_to_buffer@@Base+0xa0>
   12b58:	mov	r1, r7
   12b5c:	mov	r0, r6
   12b60:	bl	13d08 <table_get_char@@Base>
   12b64:	mov	r3, r0
   12b68:	ldr	r2, [pc, #88]	; 12bc8 <table_cell_to_buffer@@Base+0x2e4>
   12b6c:	b	129a4 <table_cell_to_buffer@@Base+0xc0>
   12b70:	mov	r1, r7
   12b74:	mov	r0, r6
   12b78:	bl	13d0c <table_get_uchar@@Base>
   12b7c:	b	12b64 <table_cell_to_buffer@@Base+0x280>
   12b80:	mov	r1, r7
   12b84:	mov	r0, r6
   12b88:	bl	13d14 <table_get_ptr@@Base>
   12b8c:	mov	r3, r0
   12b90:	ldr	r2, [pc, #52]	; 12bcc <table_cell_to_buffer@@Base+0x2e8>
   12b94:	b	129a4 <table_cell_to_buffer@@Base+0xc0>
   12b98:	andeq	r4, r1, r0, lsl #18
   12b9c:	andeq	r4, r1, r0, lsr #19
   12ba0:	andeq	r4, r1, r3, lsr #19
   12ba4:	andeq	r4, r1, r8, lsr #19
   12ba8:	andeq	r4, r1, sp, lsr #19
   12bac:			; <UNDEFINED> instruction: 0x000149b1
   12bb0:			; <UNDEFINED> instruction: 0x000149b5
   12bb4:			; <UNDEFINED> instruction: 0x000149b9
   12bb8:			; <UNDEFINED> instruction: 0x000149bd
   12bbc:	andeq	r4, r1, r0, asr #19
   12bc0:	andeq	r4, r1, r3, asr #19
   12bc4:	andeq	r4, r1, r7, asr #19
   12bc8:	andeq	r4, r1, fp, asr #19
   12bcc:	andeq	r4, r1, lr, asr #19

00012bd0 <table_cell_from_buffer@@Base>:
   12bd0:	push	{r4, r5, r6, r7, lr}
   12bd4:	mov	r7, r1
   12bd8:	sub	sp, sp, #268	; 0x10c
   12bdc:	mov	r1, r2
   12be0:	mov	r6, r0
   12be4:	mov	r5, r2
   12be8:	mov	r4, r3
   12bec:	bl	132c4 <table_get_column_data_type@@Base>
   12bf0:	cmp	r0, #23
   12bf4:	ldrls	pc, [pc, r0, lsl #2]
   12bf8:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12bfc:	andeq	r2, r1, ip, asr ip
   12c00:	muleq	r1, r0, ip
   12c04:	andeq	r2, r1, r0, asr #25
   12c08:	strdeq	r2, [r1], -r0
   12c0c:	andeq	r2, r1, r0, lsr #26
   12c10:	andeq	r2, r1, r0, asr sp
   12c14:	andeq	r2, r1, r0, lsl #27
   12c18:			; <UNDEFINED> instruction: 0x00012db0
   12c1c:	andeq	r2, r1, r0, ror #27
   12c20:	andeq	r2, r1, r4, lsl lr
   12c24:	andeq	r2, r1, r8, asr #28
   12c28:	andeq	r2, r1, r8, ror lr
   12c2c:	andeq	r2, r1, r8, lsr #29
   12c30:	ldrdeq	r2, [r1], -r8
   12c34:	andeq	r2, r1, r8, lsl #30
   12c38:	andeq	r2, r1, ip, lsr pc
   12c3c:	andeq	r2, r1, r0, lsr #31
   12c40:	ldrdeq	r2, [r1], -r0
   12c44:	andeq	r3, r1, r0
   12c48:	andeq	r3, r1, ip, lsl #1
   12c4c:	strheq	r3, [r1], -ip
   12c50:	andeq	r2, r1, r0, ror pc
   12c54:	andeq	r3, r1, r0, lsr r0
   12c58:	andeq	r3, r1, ip, ror #1
   12c5c:	add	r2, sp, #8
   12c60:	ldr	r1, [pc, #1212]	; 13124 <table_cell_from_buffer@@Base+0x554>
   12c64:	mov	r0, r4
   12c68:	bl	11bc4 <__isoc99_sscanf@plt>
   12c6c:	cmp	r0, #1
   12c70:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12c74:	mov	r2, r5
   12c78:	mov	r1, r7
   12c7c:	ldr	r3, [sp, #8]
   12c80:	mov	r0, r6
   12c84:	bl	14240 <table_set_int@@Base>
   12c88:	mov	r4, #0
   12c8c:	b	13080 <table_cell_from_buffer@@Base+0x4b0>
   12c90:	add	r2, sp, #8
   12c94:	ldr	r1, [pc, #1164]	; 13128 <table_cell_from_buffer@@Base+0x558>
   12c98:	mov	r0, r4
   12c9c:	bl	11bc4 <__isoc99_sscanf@plt>
   12ca0:	cmp	r0, #1
   12ca4:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12ca8:	mov	r2, r5
   12cac:	mov	r1, r7
   12cb0:	ldr	r3, [sp, #8]
   12cb4:	mov	r0, r6
   12cb8:	bl	14260 <table_set_uint@@Base>
   12cbc:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12cc0:	add	r2, sp, #8
   12cc4:	ldr	r1, [pc, #1120]	; 1312c <table_cell_from_buffer@@Base+0x55c>
   12cc8:	mov	r0, r4
   12ccc:	bl	11bc4 <__isoc99_sscanf@plt>
   12cd0:	cmp	r0, #1
   12cd4:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12cd8:	ldrsb	r3, [sp, #8]
   12cdc:	mov	r2, r5
   12ce0:	mov	r1, r7
   12ce4:	mov	r0, r6
   12ce8:	bl	14280 <table_set_int8@@Base>
   12cec:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12cf0:	add	r2, sp, #8
   12cf4:	ldr	r1, [pc, #1076]	; 13130 <table_cell_from_buffer@@Base+0x560>
   12cf8:	mov	r0, r4
   12cfc:	bl	11bc4 <__isoc99_sscanf@plt>
   12d00:	cmp	r0, #1
   12d04:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12d08:	ldrb	r3, [sp, #8]
   12d0c:	mov	r2, r5
   12d10:	mov	r1, r7
   12d14:	mov	r0, r6
   12d18:	bl	142a0 <table_set_uint8@@Base>
   12d1c:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12d20:	add	r2, sp, #8
   12d24:	ldr	r1, [pc, #1032]	; 13134 <table_cell_from_buffer@@Base+0x564>
   12d28:	mov	r0, r4
   12d2c:	bl	11bc4 <__isoc99_sscanf@plt>
   12d30:	cmp	r0, #1
   12d34:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12d38:	ldrsh	r3, [sp, #8]
   12d3c:	mov	r2, r5
   12d40:	mov	r1, r7
   12d44:	mov	r0, r6
   12d48:	bl	142c0 <table_set_int16@@Base>
   12d4c:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12d50:	add	r2, sp, #8
   12d54:	ldr	r1, [pc, #988]	; 13138 <table_cell_from_buffer@@Base+0x568>
   12d58:	mov	r0, r4
   12d5c:	bl	11bc4 <__isoc99_sscanf@plt>
   12d60:	cmp	r0, #1
   12d64:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12d68:	ldrh	r3, [sp, #8]
   12d6c:	mov	r2, r5
   12d70:	mov	r1, r7
   12d74:	mov	r0, r6
   12d78:	bl	142e0 <table_set_uint16@@Base>
   12d7c:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12d80:	add	r2, sp, #8
   12d84:	ldr	r1, [pc, #920]	; 13124 <table_cell_from_buffer@@Base+0x554>
   12d88:	mov	r0, r4
   12d8c:	bl	11bc4 <__isoc99_sscanf@plt>
   12d90:	cmp	r0, #1
   12d94:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12d98:	mov	r2, r5
   12d9c:	mov	r1, r7
   12da0:	ldr	r3, [sp, #8]
   12da4:	mov	r0, r6
   12da8:	bl	14300 <table_set_int32@@Base>
   12dac:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12db0:	add	r2, sp, #8
   12db4:	ldr	r1, [pc, #876]	; 13128 <table_cell_from_buffer@@Base+0x558>
   12db8:	mov	r0, r4
   12dbc:	bl	11bc4 <__isoc99_sscanf@plt>
   12dc0:	cmp	r0, #1
   12dc4:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12dc8:	mov	r2, r5
   12dcc:	mov	r1, r7
   12dd0:	ldr	r3, [sp, #8]
   12dd4:	mov	r0, r6
   12dd8:	bl	14320 <table_set_uint32@@Base>
   12ddc:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12de0:	add	r2, sp, #8
   12de4:	ldr	r1, [pc, #848]	; 1313c <table_cell_from_buffer@@Base+0x56c>
   12de8:	mov	r0, r4
   12dec:	bl	11bc4 <__isoc99_sscanf@plt>
   12df0:	cmp	r0, #1
   12df4:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12df8:	ldrd	r2, [sp, #8]
   12dfc:	mov	r1, r7
   12e00:	mov	r0, r6
   12e04:	strd	r2, [sp]
   12e08:	mov	r2, r5
   12e0c:	bl	14340 <table_set_int64@@Base>
   12e10:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12e14:	add	r2, sp, #8
   12e18:	ldr	r1, [pc, #800]	; 13140 <table_cell_from_buffer@@Base+0x570>
   12e1c:	mov	r0, r4
   12e20:	bl	11bc4 <__isoc99_sscanf@plt>
   12e24:	cmp	r0, #1
   12e28:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12e2c:	ldrd	r2, [sp, #8]
   12e30:	mov	r1, r7
   12e34:	mov	r0, r6
   12e38:	strd	r2, [sp]
   12e3c:	mov	r2, r5
   12e40:	bl	1435c <table_set_uint64@@Base>
   12e44:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12e48:	add	r2, sp, #8
   12e4c:	ldr	r1, [pc, #736]	; 13134 <table_cell_from_buffer@@Base+0x564>
   12e50:	mov	r0, r4
   12e54:	bl	11bc4 <__isoc99_sscanf@plt>
   12e58:	cmp	r0, #1
   12e5c:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12e60:	ldrsh	r3, [sp, #8]
   12e64:	mov	r2, r5
   12e68:	mov	r1, r7
   12e6c:	mov	r0, r6
   12e70:	bl	14378 <table_set_short@@Base>
   12e74:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12e78:	add	r2, sp, #8
   12e7c:	ldr	r1, [pc, #692]	; 13138 <table_cell_from_buffer@@Base+0x568>
   12e80:	mov	r0, r4
   12e84:	bl	11bc4 <__isoc99_sscanf@plt>
   12e88:	cmp	r0, #1
   12e8c:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12e90:	ldrh	r3, [sp, #8]
   12e94:	mov	r2, r5
   12e98:	mov	r1, r7
   12e9c:	mov	r0, r6
   12ea0:	bl	14398 <table_set_ushort@@Base>
   12ea4:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12ea8:	add	r2, sp, #8
   12eac:	ldr	r1, [pc, #656]	; 13144 <table_cell_from_buffer@@Base+0x574>
   12eb0:	mov	r0, r4
   12eb4:	bl	11bc4 <__isoc99_sscanf@plt>
   12eb8:	cmp	r0, #1
   12ebc:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12ec0:	mov	r2, r5
   12ec4:	mov	r1, r7
   12ec8:	ldr	r3, [sp, #8]
   12ecc:	mov	r0, r6
   12ed0:	bl	143b8 <table_set_long@@Base>
   12ed4:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12ed8:	add	r2, sp, #8
   12edc:	ldr	r1, [pc, #612]	; 13148 <table_cell_from_buffer@@Base+0x578>
   12ee0:	mov	r0, r4
   12ee4:	bl	11bc4 <__isoc99_sscanf@plt>
   12ee8:	cmp	r0, #1
   12eec:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12ef0:	mov	r2, r5
   12ef4:	mov	r1, r7
   12ef8:	ldr	r3, [sp, #8]
   12efc:	mov	r0, r6
   12f00:	bl	143d8 <table_set_ulong@@Base>
   12f04:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12f08:	add	r2, sp, #8
   12f0c:	ldr	r1, [pc, #552]	; 1313c <table_cell_from_buffer@@Base+0x56c>
   12f10:	mov	r0, r4
   12f14:	bl	11bc4 <__isoc99_sscanf@plt>
   12f18:	cmp	r0, #1
   12f1c:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12f20:	ldrd	r2, [sp, #8]
   12f24:	mov	r1, r7
   12f28:	mov	r0, r6
   12f2c:	strd	r2, [sp]
   12f30:	mov	r2, r5
   12f34:	bl	143f8 <table_set_llong@@Base>
   12f38:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12f3c:	add	r2, sp, #8
   12f40:	ldr	r1, [pc, #504]	; 13140 <table_cell_from_buffer@@Base+0x570>
   12f44:	mov	r0, r4
   12f48:	bl	11bc4 <__isoc99_sscanf@plt>
   12f4c:	cmp	r0, #1
   12f50:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12f54:	ldrd	r2, [sp, #8]
   12f58:	mov	r1, r7
   12f5c:	mov	r0, r6
   12f60:	strd	r2, [sp]
   12f64:	mov	r2, r5
   12f68:	bl	14414 <table_set_ullong@@Base>
   12f6c:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12f70:	add	r2, sp, #8
   12f74:	ldr	r1, [pc, #464]	; 1314c <table_cell_from_buffer@@Base+0x57c>
   12f78:	mov	r0, r4
   12f7c:	bl	11bc4 <__isoc99_sscanf@plt>
   12f80:	cmp	r0, #1
   12f84:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12f88:	add	r3, sp, #8
   12f8c:	mov	r2, r5
   12f90:	mov	r1, r7
   12f94:	mov	r0, r6
   12f98:	bl	14490 <table_set_string@@Base>
   12f9c:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12fa0:	add	r2, sp, #8
   12fa4:	ldr	r1, [pc, #420]	; 13150 <table_cell_from_buffer@@Base+0x580>
   12fa8:	mov	r0, r4
   12fac:	bl	11bc4 <__isoc99_sscanf@plt>
   12fb0:	cmp	r0, #1
   12fb4:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12fb8:	mov	r2, r5
   12fbc:	mov	r1, r7
   12fc0:	vldr	s0, [sp, #8]
   12fc4:	mov	r0, r6
   12fc8:	bl	14430 <table_set_float@@Base>
   12fcc:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   12fd0:	add	r2, sp, #8
   12fd4:	ldr	r1, [pc, #376]	; 13154 <table_cell_from_buffer@@Base+0x584>
   12fd8:	mov	r0, r4
   12fdc:	bl	11bc4 <__isoc99_sscanf@plt>
   12fe0:	cmp	r0, #1
   12fe4:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   12fe8:	mov	r2, r5
   12fec:	mov	r1, r7
   12ff0:	vldr	d0, [sp, #8]
   12ff4:	mov	r0, r6
   12ff8:	bl	14450 <table_set_double@@Base>
   12ffc:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   13000:	add	r2, sp, #8
   13004:	ldr	r1, [pc, #332]	; 13158 <table_cell_from_buffer@@Base+0x588>
   13008:	mov	r0, r4
   1300c:	bl	11bc4 <__isoc99_sscanf@plt>
   13010:	cmp	r0, #1
   13014:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   13018:	mov	r2, r5
   1301c:	mov	r1, r7
   13020:	vldr	d0, [sp, #8]
   13024:	mov	r0, r6
   13028:	bl	14470 <table_set_ldouble@@Base>
   1302c:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   13030:	add	r2, sp, #8
   13034:	ldr	r1, [pc, #232]	; 13124 <table_cell_from_buffer@@Base+0x554>
   13038:	mov	r0, r4
   1303c:	bl	11bc4 <__isoc99_sscanf@plt>
   13040:	cmp	r0, #1
   13044:	mov	r3, r0
   13048:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   1304c:	ldr	r4, [sp, #8]
   13050:	cmp	r4, #0
   13054:	beq	1306c <table_cell_from_buffer@@Base+0x49c>
   13058:	mov	r2, r5
   1305c:	mov	r1, r7
   13060:	mov	r0, r6
   13064:	bl	14220 <table_set_bool@@Base>
   13068:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   1306c:	mov	r3, r4
   13070:	mov	r2, r5
   13074:	mov	r1, r7
   13078:	mov	r0, r6
   1307c:	bl	14220 <table_set_bool@@Base>
   13080:	mov	r0, r4
   13084:	add	sp, sp, #268	; 0x10c
   13088:	pop	{r4, r5, r6, r7, pc}
   1308c:	add	r2, sp, #8
   13090:	ldr	r1, [pc, #196]	; 1315c <table_cell_from_buffer@@Base+0x58c>
   13094:	mov	r0, r4
   13098:	bl	11bc4 <__isoc99_sscanf@plt>
   1309c:	cmp	r0, #1
   130a0:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   130a4:	ldrb	r3, [sp, #8]
   130a8:	mov	r2, r5
   130ac:	mov	r1, r7
   130b0:	mov	r0, r6
   130b4:	bl	144a8 <table_set_char@@Base>
   130b8:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   130bc:	add	r2, sp, #8
   130c0:	ldr	r1, [pc, #148]	; 1315c <table_cell_from_buffer@@Base+0x58c>
   130c4:	mov	r0, r4
   130c8:	bl	11bc4 <__isoc99_sscanf@plt>
   130cc:	cmp	r0, #1
   130d0:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   130d4:	ldrb	r3, [sp, #8]
   130d8:	mov	r2, r5
   130dc:	mov	r1, r7
   130e0:	mov	r0, r6
   130e4:	bl	144c8 <table_set_uchar@@Base>
   130e8:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   130ec:	add	r2, sp, #8
   130f0:	ldr	r1, [pc, #104]	; 13160 <table_cell_from_buffer@@Base+0x590>
   130f4:	mov	r0, r4
   130f8:	bl	11bc4 <__isoc99_sscanf@plt>
   130fc:	cmp	r0, #1
   13100:	bne	1311c <table_cell_from_buffer@@Base+0x54c>
   13104:	mov	r2, r5
   13108:	mov	r1, r7
   1310c:	ldr	r3, [sp, #8]
   13110:	mov	r0, r6
   13114:	bl	144e8 <table_set_ptr@@Base>
   13118:	b	12c88 <table_cell_from_buffer@@Base+0xb8>
   1311c:	mvn	r4, #0
   13120:	b	13080 <table_cell_from_buffer@@Base+0x4b0>
   13124:	andeq	r4, r1, r0, lsl #18
   13128:	andeq	r4, r1, r0, lsr #19
   1312c:	ldrdeq	r4, [r1], -r1
   13130:	ldrdeq	r4, [r1], -r6
   13134:	andeq	r4, r1, sp, lsr #19
   13138:			; <UNDEFINED> instruction: 0x000149b1
   1313c:	andeq	r4, r1, r3, lsr #19
   13140:	andeq	r4, r1, r8, lsr #19
   13144:			; <UNDEFINED> instruction: 0x000149b5
   13148:			; <UNDEFINED> instruction: 0x000149b9
   1314c:			; <UNDEFINED> instruction: 0x000149bd
   13150:	andeq	r4, r1, r0, asr #19
   13154:	andeq	r4, r1, r3, asr #19
   13158:	andeq	r4, r1, r7, asr #19
   1315c:	andeq	r4, r1, fp, asr #19
   13160:	andeq	r4, r1, lr, asr #19

00013164 <table_get_cell_ptr@@Base>:
   13164:	push	{r4, lr}
   13168:	mov	r4, r2
   1316c:	bl	13f24 <table_get_row_ptr@@Base>
   13170:	ldr	r0, [r0]
   13174:	add	r0, r0, r4, lsl #2
   13178:	pop	{r4, pc}

0001317c <table_cell_init@@Base>:
   1317c:	push	{r4, lr}
   13180:	bl	13164 <table_get_cell_ptr@@Base>
   13184:	mov	r3, #0
   13188:	str	r3, [r0]
   1318c:	pop	{r4, pc}

00013190 <table_cell_destroy@@Base>:
   13190:	push	{r4, r5, r6, lr}
   13194:	mov	r6, r1
   13198:	mov	r1, r2
   1319c:	mov	r5, r0
   131a0:	mov	r4, r2
   131a4:	bl	132c4 <table_get_column_data_type@@Base>
   131a8:	cmp	r0, #23
   131ac:	popeq	{r4, r5, r6, pc}
   131b0:	mov	r2, r4
   131b4:	mov	r1, r6
   131b8:	mov	r0, r5
   131bc:	bl	13164 <table_get_cell_ptr@@Base>
   131c0:	ldr	r0, [r0]
   131c4:	cmp	r0, #0
   131c8:	popeq	{r4, r5, r6, pc}
   131cc:	pop	{r4, r5, r6, lr}
   131d0:	b	11b40 <free@plt>

000131d4 <table_cell_nullify@@Base>:
   131d4:	push	{r4, lr}
   131d8:	bl	13164 <table_get_cell_ptr@@Base>
   131dc:	mov	r4, r0
   131e0:	ldr	r0, [r0]
   131e4:	cmp	r0, #0
   131e8:	beq	131f8 <table_cell_nullify@@Base+0x24>
   131ec:	bl	11b40 <free@plt>
   131f0:	mov	r3, #0
   131f4:	str	r3, [r4]
   131f8:	mov	r0, #0
   131fc:	pop	{r4, pc}

00013200 <table_column_init@@Base>:
   13200:	push	{r4, r5, r6, r7, r8, lr}
   13204:	mov	r4, #12
   13208:	mov	r6, r2
   1320c:	mov	r8, r3
   13210:	mul	r4, r4, r1
   13214:	ldr	r7, [r0]
   13218:	mov	r0, r2
   1321c:	bl	11ba0 <strlen@plt>
   13220:	add	r0, r0, #1
   13224:	bl	11b7c <malloc@plt>
   13228:	cmp	r0, #0
   1322c:	add	r5, r7, r4
   13230:	str	r0, [r7, r4]
   13234:	beq	13240 <table_column_init@@Base+0x40>
   13238:	mov	r1, r6
   1323c:	bl	11b64 <strcpy@plt>
   13240:	ldr	r3, [sp, #24]
   13244:	str	r8, [r5, #4]
   13248:	str	r3, [r5, #8]
   1324c:	pop	{r4, r5, r6, r7, r8, pc}

00013250 <table_column_destroy@@Base>:
   13250:	mov	r3, #12
   13254:	ldr	r2, [r0]
   13258:	mul	r1, r3, r1
   1325c:	ldr	r0, [r2, r1]
   13260:	cmp	r0, #0
   13264:	bxeq	lr
   13268:	b	11b40 <free@plt>

0001326c <table_get_column_length@@Base>:
   1326c:	ldr	r0, [r0, #4]
   13270:	bx	lr

00013274 <table_get_column@@Base>:
   13274:	push	{r4, r5, r6, r7, r8, lr}
   13278:	mov	r5, r0
   1327c:	mov	r7, r1
   13280:	mov	r4, #0
   13284:	mov	r8, #12
   13288:	ldr	r6, [r0, #4]
   1328c:	cmp	r4, r6
   13290:	blt	132a0 <table_get_column@@Base+0x2c>
   13294:	mvneq	r4, #0
   13298:	mov	r0, r4
   1329c:	pop	{r4, r5, r6, r7, r8, pc}
   132a0:	ldr	r2, [r5]
   132a4:	mul	r3, r8, r4
   132a8:	mov	r1, r7
   132ac:	ldr	r0, [r2, r3]
   132b0:	bl	11b28 <strcmp@plt>
   132b4:	cmp	r0, #0
   132b8:	beq	13298 <table_get_column@@Base+0x24>
   132bc:	add	r4, r4, #1
   132c0:	b	1328c <table_get_column@@Base+0x18>

000132c4 <table_get_column_data_type@@Base>:
   132c4:	ldr	r2, [r0]
   132c8:	mov	r3, #12
   132cc:	mla	r1, r3, r1, r2
   132d0:	ldr	r0, [r1, #4]
   132d4:	bx	lr

000132d8 <table_add_column@@Base>:
   132d8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   132dc:	mov	r7, r1
   132e0:	mov	r4, r0
   132e4:	mov	r6, r2
   132e8:	ldr	r3, [r0, #4]
   132ec:	ldr	r1, [r0, #8]
   132f0:	udiv	r5, r3, r1
   132f4:	mls	r5, r1, r5, r3
   132f8:	cmp	r5, #0
   132fc:	beq	13364 <table_add_column@@Base+0x8c>
   13300:	mov	r0, r4
   13304:	mov	r5, #0
   13308:	bl	13d88 <table_get_row_length@@Base>
   1330c:	ldr	r8, [r4, #4]
   13310:	mov	r9, r0
   13314:	mov	r0, r6
   13318:	bl	13be8 <table_get_default_compare_function_for_data_type@@Base>
   1331c:	mov	r3, r6
   13320:	mov	r2, r7
   13324:	str	r0, [sp]
   13328:	mov	r0, r4
   1332c:	mov	r1, r8
   13330:	bl	13200 <table_column_init@@Base>
   13334:	cmp	r9, r5
   13338:	bgt	133c4 <table_add_column@@Base+0xec>
   1333c:	mov	r0, r4
   13340:	mov	r3, #8
   13344:	ldr	r2, [r4, #4]
   13348:	mvn	r1, #0
   1334c:	bl	12878 <table_notify@@Base>
   13350:	ldr	r0, [r4, #4]
   13354:	add	r3, r0, #1
   13358:	str	r3, [r4, #4]
   1335c:	add	sp, sp, #12
   13360:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13364:	ldr	r3, [r4, #12]
   13368:	ldr	r0, [r0]
   1336c:	add	r1, r1, r3
   13370:	mov	r3, #12
   13374:	str	r1, [r4, #12]
   13378:	mul	r1, r3, r1
   1337c:	bl	11b58 <realloc@plt>
   13380:	str	r0, [r4]
   13384:	mov	r0, r4
   13388:	bl	13d88 <table_get_row_length@@Base>
   1338c:	mov	r9, r0
   13390:	cmp	r9, r5
   13394:	ble	13300 <table_add_column@@Base+0x28>
   13398:	mov	r1, r5
   1339c:	mov	r0, r4
   133a0:	bl	13f24 <table_get_row_ptr@@Base>
   133a4:	ldr	r1, [r4, #12]
   133a8:	mov	r8, r0
   133ac:	add	r5, r5, #1
   133b0:	ldr	r0, [r0]
   133b4:	lsl	r1, r1, #2
   133b8:	bl	11b58 <realloc@plt>
   133bc:	str	r0, [r8]
   133c0:	b	13390 <table_add_column@@Base+0xb8>
   133c4:	mov	r1, r5
   133c8:	mov	r2, r8
   133cc:	mov	r0, r4
   133d0:	add	r5, r5, #1
   133d4:	bl	1317c <table_cell_init@@Base>
   133d8:	b	13334 <table_add_column@@Base+0x5c>

000133dc <table_remove_column@@Base>:
   133dc:	push	{r4, r5, r6, r7, r8, lr}
   133e0:	mov	r4, r0
   133e4:	mov	r6, r1
   133e8:	mov	r5, #12
   133ec:	bl	13250 <table_column_destroy@@Base>
   133f0:	ldr	r7, [r4, #4]
   133f4:	mov	r1, r6
   133f8:	sub	r7, r7, #1
   133fc:	cmp	r1, r7
   13400:	blt	1348c <table_remove_column@@Base+0xb0>
   13404:	mov	r0, r4
   13408:	mov	r5, #0
   1340c:	bl	13d88 <table_get_row_length@@Base>
   13410:	mov	r8, r0
   13414:	cmp	r8, r5
   13418:	bgt	134c0 <table_remove_column@@Base+0xe4>
   1341c:	ldr	r5, [r4, #4]
   13420:	ldr	r1, [r4, #8]
   13424:	sub	r3, r5, #1
   13428:	udiv	r5, r3, r1
   1342c:	str	r3, [r4, #4]
   13430:	mls	r5, r1, r5, r3
   13434:	cmp	r5, #0
   13438:	bne	13470 <table_remove_column@@Base+0x94>
   1343c:	ldr	r0, [r4]
   13440:	ldr	r3, [r4, #12]
   13444:	sub	r3, r3, r1
   13448:	mov	r1, #12
   1344c:	mul	r1, r1, r3
   13450:	str	r3, [r4, #12]
   13454:	bl	11b58 <realloc@plt>
   13458:	str	r0, [r4]
   1345c:	mov	r0, r4
   13460:	bl	13d88 <table_get_row_length@@Base>
   13464:	mov	r8, r0
   13468:	cmp	r8, r5
   1346c:	bgt	13504 <table_remove_column@@Base+0x128>
   13470:	mov	r0, r4
   13474:	mov	r3, #16
   13478:	mov	r2, r6
   1347c:	mvn	r1, #0
   13480:	bl	12878 <table_notify@@Base>
   13484:	mov	r0, #0
   13488:	pop	{r4, r5, r6, r7, r8, pc}
   1348c:	ldr	ip, [r4]
   13490:	mul	r0, r5, r1
   13494:	add	r1, r1, #1
   13498:	add	r2, r0, #12
   1349c:	add	r2, ip, r2
   134a0:	add	lr, ip, r0
   134a4:	ldr	r3, [r2]
   134a8:	str	r3, [ip, r0]
   134ac:	ldr	r3, [r2, #4]
   134b0:	str	r3, [lr, #4]
   134b4:	ldr	r3, [r2, #8]
   134b8:	str	r3, [lr, #8]
   134bc:	b	133fc <table_remove_column@@Base+0x20>
   134c0:	mov	r2, r6
   134c4:	mov	r1, r5
   134c8:	mov	r0, r4
   134cc:	bl	13190 <table_cell_destroy@@Base>
   134d0:	mov	r1, r5
   134d4:	mov	r0, r4
   134d8:	bl	13f24 <table_get_row_ptr@@Base>
   134dc:	mov	r3, r6
   134e0:	cmp	r7, r3
   134e4:	addle	r5, r5, #1
   134e8:	ble	13414 <table_remove_column@@Base+0x38>
   134ec:	ldr	r2, [r0]
   134f0:	add	r1, r2, r3, lsl #2
   134f4:	ldr	r1, [r1, #4]
   134f8:	str	r1, [r2, r3, lsl #2]
   134fc:	add	r3, r3, #1
   13500:	b	134e0 <table_remove_column@@Base+0x104>
   13504:	mov	r1, r5
   13508:	mov	r0, r4
   1350c:	bl	13f24 <table_get_row_ptr@@Base>
   13510:	ldr	r1, [r4, #12]
   13514:	mov	r7, r0
   13518:	add	r5, r5, #1
   1351c:	ldr	r0, [r0]
   13520:	lsl	r1, r1, #2
   13524:	bl	11b58 <realloc@plt>
   13528:	str	r0, [r7]
   1352c:	b	13468 <table_remove_column@@Base+0x8c>

00013530 <table_get_column_name@@Base>:
   13530:	mov	r3, #12
   13534:	ldr	r2, [r0]
   13538:	mul	r1, r3, r1
   1353c:	ldr	r0, [r2, r1]
   13540:	bx	lr

00013544 <table_get_col_ptr@@Base>:
   13544:	ldr	r3, [r0]
   13548:	mov	r0, #12
   1354c:	mla	r0, r0, r1, r3
   13550:	bx	lr

00013554 <table_get_column_compare_function@@Base>:
   13554:	ldr	r2, [r0]
   13558:	mov	r3, #12
   1355c:	mla	r1, r3, r1, r2
   13560:	ldr	r0, [r1, #8]
   13564:	bx	lr

00013568 <table_set_column_compare_function@@Base>:
   13568:	ldr	r0, [r0]
   1356c:	mov	r3, #12
   13570:	mla	r1, r3, r1, r0
   13574:	str	r2, [r1, #8]
   13578:	bx	lr

0001357c <table_compare_ptr@@Base>:
   1357c:	cmp	r0, r1
   13580:	bhi	13590 <table_compare_ptr@@Base+0x14>
   13584:	mvncc	r0, #0
   13588:	movcs	r0, #0
   1358c:	bx	lr
   13590:	mov	r0, #1
   13594:	bx	lr

00013598 <table_compare_string@@Base>:
   13598:	cmp	r0, #0
   1359c:	bne	135b0 <table_compare_string@@Base+0x18>
   135a0:	adds	r0, r1, #0
   135a4:	movne	r0, #1
   135a8:	rsb	r0, r0, #0
   135ac:	bx	lr
   135b0:	cmp	r1, #0
   135b4:	beq	135bc <table_compare_string@@Base+0x24>
   135b8:	b	11b28 <strcmp@plt>
   135bc:	mov	r0, #1
   135c0:	bx	lr

000135c4 <table_compare_bool@@Base>:
   135c4:	cmp	r0, #0
   135c8:	bne	135dc <table_compare_bool@@Base+0x18>
   135cc:	adds	r0, r1, #0
   135d0:	movne	r0, #1
   135d4:	rsb	r0, r0, #0
   135d8:	bx	lr
   135dc:	cmp	r1, #0
   135e0:	beq	13600 <table_compare_bool@@Base+0x3c>
   135e4:	ldrb	r2, [r0]
   135e8:	ldrb	r3, [r1]
   135ec:	cmp	r2, r3
   135f0:	bhi	13600 <table_compare_bool@@Base+0x3c>
   135f4:	mvncc	r0, #0
   135f8:	movcs	r0, #0
   135fc:	bx	lr
   13600:	mov	r0, #1
   13604:	bx	lr

00013608 <table_compare_int32@@Base>:
   13608:	cmp	r0, #0
   1360c:	bne	13620 <table_compare_int32@@Base+0x18>
   13610:	adds	r0, r1, #0
   13614:	movne	r0, #1
   13618:	rsb	r0, r0, #0
   1361c:	bx	lr
   13620:	cmp	r1, #0
   13624:	beq	13644 <table_compare_int32@@Base+0x3c>
   13628:	ldr	r2, [r0]
   1362c:	ldr	r3, [r1]
   13630:	cmp	r2, r3
   13634:	bgt	13644 <table_compare_int32@@Base+0x3c>
   13638:	mvnlt	r0, #0
   1363c:	movge	r0, #0
   13640:	bx	lr
   13644:	mov	r0, #1
   13648:	bx	lr

0001364c <table_compare_uint32@@Base>:
   1364c:	cmp	r0, #0
   13650:	bne	13664 <table_compare_uint32@@Base+0x18>
   13654:	adds	r0, r1, #0
   13658:	movne	r0, #1
   1365c:	rsb	r0, r0, #0
   13660:	bx	lr
   13664:	cmp	r1, #0
   13668:	beq	13688 <table_compare_uint32@@Base+0x3c>
   1366c:	ldr	r2, [r0]
   13670:	ldr	r3, [r1]
   13674:	cmp	r2, r3
   13678:	bhi	13688 <table_compare_uint32@@Base+0x3c>
   1367c:	mvncc	r0, #0
   13680:	movcs	r0, #0
   13684:	bx	lr
   13688:	mov	r0, #1
   1368c:	bx	lr

00013690 <table_compare_int8@@Base>:
   13690:	cmp	r0, #0
   13694:	bne	136a8 <table_compare_int8@@Base+0x18>
   13698:	adds	r0, r1, #0
   1369c:	movne	r0, #1
   136a0:	rsb	r0, r0, #0
   136a4:	bx	lr
   136a8:	cmp	r1, #0
   136ac:	beq	136cc <table_compare_int8@@Base+0x3c>
   136b0:	ldrsb	r2, [r0]
   136b4:	ldrsb	r3, [r1]
   136b8:	cmp	r2, r3
   136bc:	bgt	136cc <table_compare_int8@@Base+0x3c>
   136c0:	mvnlt	r0, #0
   136c4:	movge	r0, #0
   136c8:	bx	lr
   136cc:	mov	r0, #1
   136d0:	bx	lr

000136d4 <table_compare_char@@Base>:
   136d4:	cmp	r0, #0
   136d8:	bne	136ec <table_compare_char@@Base+0x18>
   136dc:	adds	r0, r1, #0
   136e0:	movne	r0, #1
   136e4:	rsb	r0, r0, #0
   136e8:	bx	lr
   136ec:	cmp	r1, #0
   136f0:	beq	13710 <table_compare_char@@Base+0x3c>
   136f4:	ldrb	r2, [r0]
   136f8:	ldrb	r3, [r1]
   136fc:	cmp	r2, r3
   13700:	bhi	13710 <table_compare_char@@Base+0x3c>
   13704:	mvncc	r0, #0
   13708:	movcs	r0, #0
   1370c:	bx	lr
   13710:	mov	r0, #1
   13714:	bx	lr

00013718 <table_compare_short@@Base>:
   13718:	cmp	r0, #0
   1371c:	bne	13730 <table_compare_short@@Base+0x18>
   13720:	adds	r0, r1, #0
   13724:	movne	r0, #1
   13728:	rsb	r0, r0, #0
   1372c:	bx	lr
   13730:	cmp	r1, #0
   13734:	beq	13754 <table_compare_short@@Base+0x3c>
   13738:	ldrsh	r2, [r0]
   1373c:	ldrsh	r3, [r1]
   13740:	cmp	r2, r3
   13744:	bgt	13754 <table_compare_short@@Base+0x3c>
   13748:	mvnlt	r0, #0
   1374c:	movge	r0, #0
   13750:	bx	lr
   13754:	mov	r0, #1
   13758:	bx	lr

0001375c <table_compare_ushort@@Base>:
   1375c:	cmp	r0, #0
   13760:	bne	13774 <table_compare_ushort@@Base+0x18>
   13764:	adds	r0, r1, #0
   13768:	movne	r0, #1
   1376c:	rsb	r0, r0, #0
   13770:	bx	lr
   13774:	cmp	r1, #0
   13778:	beq	13798 <table_compare_ushort@@Base+0x3c>
   1377c:	ldrh	r2, [r0]
   13780:	ldrh	r3, [r1]
   13784:	cmp	r2, r3
   13788:	bhi	13798 <table_compare_ushort@@Base+0x3c>
   1378c:	mvncc	r0, #0
   13790:	movcs	r0, #0
   13794:	bx	lr
   13798:	mov	r0, #1
   1379c:	bx	lr

000137a0 <table_compare_llong@@Base>:
   137a0:	cmp	r0, #0
   137a4:	bne	137b8 <table_compare_llong@@Base+0x18>
   137a8:	adds	r0, r1, #0
   137ac:	movne	r0, #1
   137b0:	rsb	r0, r0, #0
   137b4:	bx	lr
   137b8:	cmp	r1, #0
   137bc:	beq	137ec <table_compare_llong@@Base+0x4c>
   137c0:	push	{r4, r5, lr}
   137c4:	ldrd	r2, [r1]
   137c8:	ldrd	r4, [r0]
   137cc:	cmp	r2, r4
   137d0:	sbcs	r1, r3, r5
   137d4:	blt	137f4 <table_compare_llong@@Base+0x54>
   137d8:	cmp	r4, r2
   137dc:	sbcs	r3, r5, r3
   137e0:	mvnlt	r0, #0
   137e4:	movge	r0, #0
   137e8:	pop	{r4, r5, pc}
   137ec:	mov	r0, #1
   137f0:	bx	lr
   137f4:	mov	r0, #1
   137f8:	pop	{r4, r5, pc}

000137fc <table_compare_uint64@@Base>:
   137fc:	cmp	r0, #0
   13800:	bne	13814 <table_compare_uint64@@Base+0x18>
   13804:	adds	r0, r1, #0
   13808:	movne	r0, #1
   1380c:	rsb	r0, r0, #0
   13810:	bx	lr
   13814:	cmp	r1, #0
   13818:	beq	13840 <table_compare_uint64@@Base+0x44>
   1381c:	push	{r4, r5, lr}
   13820:	ldrd	r2, [r1]
   13824:	ldrd	r4, [r0]
   13828:	cmp	r5, r3
   1382c:	cmpeq	r4, r2
   13830:	bhi	13848 <table_compare_uint64@@Base+0x4c>
   13834:	mvncc	r0, #0
   13838:	movcs	r0, #0
   1383c:	pop	{r4, r5, pc}
   13840:	mov	r0, #1
   13844:	bx	lr
   13848:	mov	r0, #1
   1384c:	pop	{r4, r5, pc}

00013850 <table_compare_long@@Base>:
   13850:	cmp	r0, #0
   13854:	bne	13868 <table_compare_long@@Base+0x18>
   13858:	adds	r0, r1, #0
   1385c:	movne	r0, #1
   13860:	rsb	r0, r0, #0
   13864:	bx	lr
   13868:	cmp	r1, #0
   1386c:	beq	1388c <table_compare_long@@Base+0x3c>
   13870:	ldr	r2, [r0]
   13874:	ldr	r3, [r1]
   13878:	cmp	r2, r3
   1387c:	bgt	1388c <table_compare_long@@Base+0x3c>
   13880:	mvnlt	r0, #0
   13884:	movge	r0, #0
   13888:	bx	lr
   1388c:	mov	r0, #1
   13890:	bx	lr

00013894 <table_compare_ullong@@Base>:
   13894:	cmp	r0, #0
   13898:	bne	138ac <table_compare_ullong@@Base+0x18>
   1389c:	adds	r0, r1, #0
   138a0:	movne	r0, #1
   138a4:	rsb	r0, r0, #0
   138a8:	bx	lr
   138ac:	cmp	r1, #0
   138b0:	beq	138d0 <table_compare_ullong@@Base+0x3c>
   138b4:	ldr	r2, [r0]
   138b8:	ldr	r3, [r1]
   138bc:	cmp	r2, r3
   138c0:	bhi	138d0 <table_compare_ullong@@Base+0x3c>
   138c4:	mvncc	r0, #0
   138c8:	movcs	r0, #0
   138cc:	bx	lr
   138d0:	mov	r0, #1
   138d4:	bx	lr

000138d8 <table_compare_float@@Base>:
   138d8:	cmp	r0, #0
   138dc:	bne	138f0 <table_compare_float@@Base+0x18>
   138e0:	adds	r0, r1, #0
   138e4:	movne	r0, #1
   138e8:	rsb	r0, r0, #0
   138ec:	bx	lr
   138f0:	cmp	r1, #0
   138f4:	beq	13918 <table_compare_float@@Base+0x40>
   138f8:	vldr	s14, [r0]
   138fc:	vldr	s15, [r1]
   13900:	vcmpe.f32	s14, s15
   13904:	vmrs	APSR_nzcv, fpscr
   13908:	bgt	13918 <table_compare_float@@Base+0x40>
   1390c:	mvnmi	r0, #0
   13910:	movpl	r0, #0
   13914:	bx	lr
   13918:	mov	r0, #1
   1391c:	bx	lr

00013920 <table_compare_double@@Base>:
   13920:	cmp	r0, #0
   13924:	bne	13938 <table_compare_double@@Base+0x18>
   13928:	adds	r0, r1, #0
   1392c:	movne	r0, #1
   13930:	rsb	r0, r0, #0
   13934:	bx	lr
   13938:	cmp	r1, #0
   1393c:	beq	13960 <table_compare_double@@Base+0x40>
   13940:	vldr	d6, [r0]
   13944:	vldr	d7, [r1]
   13948:	vcmpe.f64	d6, d7
   1394c:	vmrs	APSR_nzcv, fpscr
   13950:	bgt	13960 <table_compare_double@@Base+0x40>
   13954:	mvnmi	r0, #0
   13958:	movpl	r0, #0
   1395c:	bx	lr
   13960:	mov	r0, #1
   13964:	bx	lr

00013968 <table_compare_ldouble@@Base>:
   13968:	cmp	r0, #0
   1396c:	bne	13980 <table_compare_ldouble@@Base+0x18>
   13970:	adds	r0, r1, #0
   13974:	movne	r0, #1
   13978:	rsb	r0, r0, #0
   1397c:	bx	lr
   13980:	cmp	r1, #0
   13984:	beq	139a8 <table_compare_ldouble@@Base+0x40>
   13988:	vldr	d6, [r0]
   1398c:	vldr	d7, [r1]
   13990:	vcmpe.f64	d6, d7
   13994:	vmrs	APSR_nzcv, fpscr
   13998:	bgt	139a8 <table_compare_ldouble@@Base+0x40>
   1399c:	mvnmi	r0, #0
   139a0:	movpl	r0, #0
   139a4:	bx	lr
   139a8:	mov	r0, #1
   139ac:	bx	lr

000139b0 <table_compare_uchar@@Base>:
   139b0:	cmp	r0, #0
   139b4:	bne	139c8 <table_compare_uchar@@Base+0x18>
   139b8:	adds	r0, r1, #0
   139bc:	movne	r0, #1
   139c0:	rsb	r0, r0, #0
   139c4:	bx	lr
   139c8:	cmp	r1, #0
   139cc:	beq	139ec <table_compare_uchar@@Base+0x3c>
   139d0:	ldrb	r2, [r0]
   139d4:	ldrb	r3, [r1]
   139d8:	cmp	r2, r3
   139dc:	bhi	139ec <table_compare_uchar@@Base+0x3c>
   139e0:	mvncc	r0, #0
   139e4:	movcs	r0, #0
   139e8:	bx	lr
   139ec:	mov	r0, #1
   139f0:	bx	lr

000139f4 <table_compare_int@@Base>:
   139f4:	cmp	r0, #0
   139f8:	bne	13a0c <table_compare_int@@Base+0x18>
   139fc:	adds	r0, r1, #0
   13a00:	movne	r0, #1
   13a04:	rsb	r0, r0, #0
   13a08:	bx	lr
   13a0c:	cmp	r1, #0
   13a10:	beq	13a30 <table_compare_int@@Base+0x3c>
   13a14:	ldr	r2, [r0]
   13a18:	ldr	r3, [r1]
   13a1c:	cmp	r2, r3
   13a20:	bgt	13a30 <table_compare_int@@Base+0x3c>
   13a24:	mvnlt	r0, #0
   13a28:	movge	r0, #0
   13a2c:	bx	lr
   13a30:	mov	r0, #1
   13a34:	bx	lr

00013a38 <table_compare_uint@@Base>:
   13a38:	cmp	r0, #0
   13a3c:	bne	13a50 <table_compare_uint@@Base+0x18>
   13a40:	adds	r0, r1, #0
   13a44:	movne	r0, #1
   13a48:	rsb	r0, r0, #0
   13a4c:	bx	lr
   13a50:	cmp	r1, #0
   13a54:	beq	13a74 <table_compare_uint@@Base+0x3c>
   13a58:	ldr	r2, [r0]
   13a5c:	ldr	r3, [r1]
   13a60:	cmp	r2, r3
   13a64:	bhi	13a74 <table_compare_uint@@Base+0x3c>
   13a68:	mvncc	r0, #0
   13a6c:	movcs	r0, #0
   13a70:	bx	lr
   13a74:	mov	r0, #1
   13a78:	bx	lr

00013a7c <table_compare_uint8@@Base>:
   13a7c:	cmp	r0, #0
   13a80:	bne	13a94 <table_compare_uint8@@Base+0x18>
   13a84:	adds	r0, r1, #0
   13a88:	movne	r0, #1
   13a8c:	rsb	r0, r0, #0
   13a90:	bx	lr
   13a94:	cmp	r1, #0
   13a98:	beq	13ab8 <table_compare_uint8@@Base+0x3c>
   13a9c:	ldrb	r2, [r0]
   13aa0:	ldrb	r3, [r1]
   13aa4:	cmp	r2, r3
   13aa8:	bhi	13ab8 <table_compare_uint8@@Base+0x3c>
   13aac:	mvncc	r0, #0
   13ab0:	movcs	r0, #0
   13ab4:	bx	lr
   13ab8:	mov	r0, #1
   13abc:	bx	lr

00013ac0 <table_compare_int16@@Base>:
   13ac0:	cmp	r0, #0
   13ac4:	bne	13ad8 <table_compare_int16@@Base+0x18>
   13ac8:	adds	r0, r1, #0
   13acc:	movne	r0, #1
   13ad0:	rsb	r0, r0, #0
   13ad4:	bx	lr
   13ad8:	cmp	r1, #0
   13adc:	beq	13afc <table_compare_int16@@Base+0x3c>
   13ae0:	ldrsh	r2, [r0]
   13ae4:	ldrsh	r3, [r1]
   13ae8:	cmp	r2, r3
   13aec:	bgt	13afc <table_compare_int16@@Base+0x3c>
   13af0:	mvnlt	r0, #0
   13af4:	movge	r0, #0
   13af8:	bx	lr
   13afc:	mov	r0, #1
   13b00:	bx	lr

00013b04 <table_compare_uint16@@Base>:
   13b04:	cmp	r0, #0
   13b08:	bne	13b1c <table_compare_uint16@@Base+0x18>
   13b0c:	adds	r0, r1, #0
   13b10:	movne	r0, #1
   13b14:	rsb	r0, r0, #0
   13b18:	bx	lr
   13b1c:	cmp	r1, #0
   13b20:	beq	13b40 <table_compare_uint16@@Base+0x3c>
   13b24:	ldrh	r2, [r0]
   13b28:	ldrh	r3, [r1]
   13b2c:	cmp	r2, r3
   13b30:	bhi	13b40 <table_compare_uint16@@Base+0x3c>
   13b34:	mvncc	r0, #0
   13b38:	movcs	r0, #0
   13b3c:	bx	lr
   13b40:	mov	r0, #1
   13b44:	bx	lr

00013b48 <table_compare_ulong@@Base>:
   13b48:	cmp	r0, #0
   13b4c:	bne	13b60 <table_compare_ulong@@Base+0x18>
   13b50:	adds	r0, r1, #0
   13b54:	movne	r0, #1
   13b58:	rsb	r0, r0, #0
   13b5c:	bx	lr
   13b60:	cmp	r1, #0
   13b64:	beq	13b84 <table_compare_ulong@@Base+0x3c>
   13b68:	ldr	r2, [r0]
   13b6c:	ldr	r3, [r1]
   13b70:	cmp	r2, r3
   13b74:	bhi	13b84 <table_compare_ulong@@Base+0x3c>
   13b78:	mvncc	r0, #0
   13b7c:	movcs	r0, #0
   13b80:	bx	lr
   13b84:	mov	r0, #1
   13b88:	bx	lr

00013b8c <table_compare_int64@@Base>:
   13b8c:	cmp	r0, #0
   13b90:	bne	13ba4 <table_compare_int64@@Base+0x18>
   13b94:	adds	r0, r1, #0
   13b98:	movne	r0, #1
   13b9c:	rsb	r0, r0, #0
   13ba0:	bx	lr
   13ba4:	cmp	r1, #0
   13ba8:	beq	13bd8 <table_compare_int64@@Base+0x4c>
   13bac:	push	{r4, r5, lr}
   13bb0:	ldrd	r2, [r1]
   13bb4:	ldrd	r4, [r0]
   13bb8:	cmp	r2, r4
   13bbc:	sbcs	r1, r3, r5
   13bc0:	blt	13be0 <table_compare_int64@@Base+0x54>
   13bc4:	cmp	r4, r2
   13bc8:	sbcs	r3, r5, r3
   13bcc:	mvnlt	r0, #0
   13bd0:	movge	r0, #0
   13bd4:	pop	{r4, r5, pc}
   13bd8:	mov	r0, #1
   13bdc:	bx	lr
   13be0:	mov	r0, #1
   13be4:	pop	{r4, r5, pc}

00013be8 <table_get_default_compare_function_for_data_type@@Base>:
   13be8:	cmp	r0, #23
   13bec:	ldrls	r3, [pc, #8]	; 13bfc <table_get_default_compare_function_for_data_type@@Base+0x14>
   13bf0:	ldrls	r0, [r3, r0, lsl #2]
   13bf4:	movhi	r0, #0
   13bf8:	bx	lr
   13bfc:	ldrdeq	r4, [r1], -ip

00013c00 <table_get@@Base>:
   13c00:	push	{r4, lr}
   13c04:	bl	13164 <table_get_cell_ptr@@Base>
   13c08:	ldr	r0, [r0]
   13c0c:	pop	{r4, pc}

00013c10 <table_get_bool@@Base>:
   13c10:	push	{r4, lr}
   13c14:	bl	13c00 <table_get@@Base>
   13c18:	ldrb	r0, [r0]
   13c1c:	pop	{r4, pc}

00013c20 <table_get_int@@Base>:
   13c20:	push	{r4, lr}
   13c24:	bl	13c00 <table_get@@Base>
   13c28:	ldr	r0, [r0]
   13c2c:	pop	{r4, pc}

00013c30 <table_get_uint@@Base>:
   13c30:	push	{r4, lr}
   13c34:	bl	13c00 <table_get@@Base>
   13c38:	ldr	r0, [r0]
   13c3c:	pop	{r4, pc}

00013c40 <table_get_int8@@Base>:
   13c40:	push	{r4, lr}
   13c44:	bl	13c00 <table_get@@Base>
   13c48:	ldrsb	r0, [r0]
   13c4c:	pop	{r4, pc}

00013c50 <table_get_uint8@@Base>:
   13c50:	push	{r4, lr}
   13c54:	bl	13c00 <table_get@@Base>
   13c58:	ldrb	r0, [r0]
   13c5c:	pop	{r4, pc}

00013c60 <table_get_int16@@Base>:
   13c60:	push	{r4, lr}
   13c64:	bl	13c00 <table_get@@Base>
   13c68:	ldrsh	r0, [r0]
   13c6c:	pop	{r4, pc}

00013c70 <table_get_uint16@@Base>:
   13c70:	push	{r4, lr}
   13c74:	bl	13c00 <table_get@@Base>
   13c78:	ldrh	r0, [r0]
   13c7c:	pop	{r4, pc}

00013c80 <table_get_int32@@Base>:
   13c80:	b	13c20 <table_get_int@@Base>

00013c84 <table_get_uint32@@Base>:
   13c84:	b	13c30 <table_get_uint@@Base>

00013c88 <table_get_int64@@Base>:
   13c88:	push	{r4, lr}
   13c8c:	bl	13c00 <table_get@@Base>
   13c90:	ldrd	r0, [r0]
   13c94:	pop	{r4, pc}

00013c98 <table_get_uint64@@Base>:
   13c98:	push	{r4, lr}
   13c9c:	bl	13c00 <table_get@@Base>
   13ca0:	ldrd	r0, [r0]
   13ca4:	pop	{r4, pc}

00013ca8 <table_get_short@@Base>:
   13ca8:	b	13c60 <table_get_int16@@Base>

00013cac <table_get_ushort@@Base>:
   13cac:	b	13c70 <table_get_uint16@@Base>

00013cb0 <table_get_long@@Base>:
   13cb0:	push	{r4, lr}
   13cb4:	bl	13c00 <table_get@@Base>
   13cb8:	ldr	r0, [r0]
   13cbc:	pop	{r4, pc}

00013cc0 <table_get_ulong@@Base>:
   13cc0:	push	{r4, lr}
   13cc4:	bl	13c00 <table_get@@Base>
   13cc8:	ldr	r0, [r0]
   13ccc:	pop	{r4, pc}

00013cd0 <table_get_llong@@Base>:
   13cd0:	b	13c88 <table_get_int64@@Base>

00013cd4 <table_get_ullong@@Base>:
   13cd4:	b	13c98 <table_get_uint64@@Base>

00013cd8 <table_get_float@@Base>:
   13cd8:	push	{r4, lr}
   13cdc:	bl	13c00 <table_get@@Base>
   13ce0:	vldr	s0, [r0]
   13ce4:	pop	{r4, pc}

00013ce8 <table_get_double@@Base>:
   13ce8:	push	{r4, lr}
   13cec:	bl	13c00 <table_get@@Base>
   13cf0:	vldr	d0, [r0]
   13cf4:	pop	{r4, pc}

00013cf8 <table_get_ldouble@@Base>:
   13cf8:	push	{r4, lr}
   13cfc:	bl	13c00 <table_get@@Base>
   13d00:	vldr	d0, [r0]
   13d04:	pop	{r4, pc}

00013d08 <table_get_char@@Base>:
   13d08:	b	13c50 <table_get_uint8@@Base>

00013d0c <table_get_uchar@@Base>:
   13d0c:	b	13c50 <table_get_uint8@@Base>

00013d10 <table_get_string@@Base>:
   13d10:	b	13c00 <table_get@@Base>

00013d14 <table_get_ptr@@Base>:
   13d14:	b	13c00 <table_get@@Base>

00013d18 <table_row_init@@Base>:
   13d18:	push	{r4, r5, r6, lr}
   13d1c:	mov	r5, r1
   13d20:	ldr	r4, [r0, #16]
   13d24:	ldr	r0, [r0, #12]
   13d28:	lsl	r0, r0, #2
   13d2c:	bl	11b7c <malloc@plt>
   13d30:	str	r0, [r4, r5, lsl #2]
   13d34:	pop	{r4, r5, r6, pc}

00013d38 <table_row_destroy@@Base>:
   13d38:	push	{r4, r5, r6, r7, r8, lr}
   13d3c:	mov	r6, r0
   13d40:	mov	r5, r1
   13d44:	mov	r4, #0
   13d48:	bl	1326c <table_get_column_length@@Base>
   13d4c:	ldr	r7, [r6, #16]
   13d50:	mov	r8, r0
   13d54:	cmp	r4, r8
   13d58:	blt	13d70 <table_row_destroy@@Base+0x38>
   13d5c:	ldr	r0, [r7, r5, lsl #2]
   13d60:	cmp	r0, #0
   13d64:	popeq	{r4, r5, r6, r7, r8, pc}
   13d68:	pop	{r4, r5, r6, r7, r8, lr}
   13d6c:	b	11b40 <free@plt>
   13d70:	mov	r2, r4
   13d74:	mov	r1, r5
   13d78:	mov	r0, r6
   13d7c:	add	r4, r4, #1
   13d80:	bl	13190 <table_cell_destroy@@Base>
   13d84:	b	13d54 <table_row_destroy@@Base+0x1c>

00013d88 <table_get_row_length@@Base>:
   13d88:	ldr	r0, [r0, #20]
   13d8c:	bx	lr

00013d90 <table_add_row@@Base>:
   13d90:	ldr	r2, [r0, #20]
   13d94:	push	{r4, r5, r6, r7, r8, lr}
   13d98:	mov	r4, r0
   13d9c:	ldr	r1, [r0, #24]
   13da0:	udiv	r3, r2, r1
   13da4:	mls	r3, r1, r3, r2
   13da8:	cmp	r3, #0
   13dac:	bne	13dcc <table_add_row@@Base+0x3c>
   13db0:	ldr	r3, [r4, #28]
   13db4:	ldr	r0, [r0, #16]
   13db8:	add	r1, r1, r3
   13dbc:	str	r1, [r4, #28]
   13dc0:	lsl	r1, r1, #2
   13dc4:	bl	11b58 <realloc@plt>
   13dc8:	str	r0, [r4, #16]
   13dcc:	ldr	r6, [r4, #20]
   13dd0:	mov	r0, r4
   13dd4:	mov	r5, #0
   13dd8:	bl	1326c <table_get_column_length@@Base>
   13ddc:	mov	r7, r0
   13de0:	mov	r0, r4
   13de4:	mov	r1, r6
   13de8:	bl	13d18 <table_row_init@@Base>
   13dec:	cmp	r7, r5
   13df0:	bgt	13e18 <table_add_row@@Base+0x88>
   13df4:	mov	r0, r4
   13df8:	mov	r3, #2
   13dfc:	ldr	r1, [r4, #20]
   13e00:	mvn	r2, #0
   13e04:	bl	12878 <table_notify@@Base>
   13e08:	ldr	r0, [r4, #20]
   13e0c:	add	r3, r0, #1
   13e10:	str	r3, [r4, #20]
   13e14:	pop	{r4, r5, r6, r7, r8, pc}
   13e18:	mov	r2, r5
   13e1c:	mov	r1, r6
   13e20:	mov	r0, r4
   13e24:	add	r5, r5, #1
   13e28:	bl	1317c <table_cell_init@@Base>
   13e2c:	b	13dec <table_add_row@@Base+0x5c>

00013e30 <table_remove_row@@Base>:
   13e30:	push	{r4, r5, r6, r7, r8, lr}
   13e34:	mov	r4, r0
   13e38:	mov	r6, r1
   13e3c:	mov	r5, #0
   13e40:	ldr	r7, [r0, #20]
   13e44:	bl	1326c <table_get_column_length@@Base>
   13e48:	mov	r8, r0
   13e4c:	cmp	r8, r5
   13e50:	bgt	13ed0 <table_remove_row@@Base+0xa0>
   13e54:	ldr	r3, [r4, #16]
   13e58:	ldr	r0, [r3, r6, lsl #2]
   13e5c:	cmp	r0, #0
   13e60:	beq	13e68 <table_remove_row@@Base+0x38>
   13e64:	bl	11b40 <free@plt>
   13e68:	mov	r3, r6
   13e6c:	sub	r7, r7, #1
   13e70:	cmp	r3, r7
   13e74:	blt	13f0c <table_remove_row@@Base+0xdc>
   13e78:	ldr	r3, [r4, #20]
   13e7c:	ldr	r2, [r4, #24]
   13e80:	sub	r3, r3, #1
   13e84:	udiv	r1, r3, r2
   13e88:	str	r3, [r4, #20]
   13e8c:	mls	r3, r2, r1, r3
   13e90:	cmp	r3, #0
   13e94:	bne	13eb4 <table_remove_row@@Base+0x84>
   13e98:	ldr	r0, [r4, #16]
   13e9c:	ldr	r1, [r4, #28]
   13ea0:	sub	r1, r1, r2
   13ea4:	str	r1, [r4, #28]
   13ea8:	lsl	r1, r1, #2
   13eac:	bl	11b58 <realloc@plt>
   13eb0:	str	r0, [r4, #16]
   13eb4:	mov	r0, r4
   13eb8:	mov	r3, #4
   13ebc:	mvn	r2, #0
   13ec0:	mov	r1, r6
   13ec4:	bl	12878 <table_notify@@Base>
   13ec8:	mov	r0, #0
   13ecc:	pop	{r4, r5, r6, r7, r8, pc}
   13ed0:	mov	r1, r5
   13ed4:	mov	r0, r4
   13ed8:	bl	132c4 <table_get_column_data_type@@Base>
   13edc:	cmp	r0, #23
   13ee0:	beq	13f04 <table_remove_row@@Base+0xd4>
   13ee4:	mov	r2, r5
   13ee8:	mov	r1, r6
   13eec:	mov	r0, r4
   13ef0:	bl	13164 <table_get_cell_ptr@@Base>
   13ef4:	ldr	r0, [r0]
   13ef8:	cmp	r0, #0
   13efc:	beq	13f04 <table_remove_row@@Base+0xd4>
   13f00:	bl	11b40 <free@plt>
   13f04:	add	r5, r5, #1
   13f08:	b	13e4c <table_remove_row@@Base+0x1c>
   13f0c:	ldr	r2, [r4, #16]
   13f10:	add	r1, r2, r3, lsl #2
   13f14:	ldr	r1, [r1, #4]
   13f18:	str	r1, [r2, r3, lsl #2]
   13f1c:	add	r3, r3, #1
   13f20:	b	13e70 <table_remove_row@@Base+0x40>

00013f24 <table_get_row_ptr@@Base>:
   13f24:	ldr	r0, [r0, #16]
   13f28:	add	r0, r0, r1, lsl #2
   13f2c:	bx	lr

00013f30 <table_set_row_ptr@@Base>:
   13f30:	ldr	r2, [r2]
   13f34:	ldr	r3, [r0, #16]
   13f38:	str	r2, [r3, r1, lsl #2]
   13f3c:	bx	lr

00013f40 <table_set@@Base>:
   13f40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f44:	mov	r6, r0
   13f48:	mov	r8, r1
   13f4c:	mov	r7, r2
   13f50:	mov	r5, r3
   13f54:	ldr	r9, [sp, #32]
   13f58:	bl	13164 <table_get_cell_ptr@@Base>
   13f5c:	mov	r4, r0
   13f60:	mov	r1, r7
   13f64:	mov	r0, r6
   13f68:	bl	13544 <table_get_col_ptr@@Base>
   13f6c:	cmp	r9, #23
   13f70:	ldrls	pc, [pc, r9, lsl #2]
   13f74:	b	140c4 <table_set@@Base+0x184>
   13f78:	andeq	r4, r1, r4, lsl r0
   13f7c:	andeq	r4, r1, r8, rrx
   13f80:	andeq	r4, r1, r4, ror r0
   13f84:	andeq	r4, r1, r0, lsl #1
   13f88:	andeq	r4, r1, ip, lsl #1
   13f8c:	andeq	r4, r1, ip, asr #1
   13f90:	ldrdeq	r4, [r1], -r8
   13f94:	andeq	r4, r1, r4, ror #1
   13f98:	strdeq	r4, [r1], -r0
   13f9c:	andeq	r4, r1, r0, lsr r1
   13fa0:	andeq	r4, r1, r0, asr r1
   13fa4:	andeq	r4, r1, ip, asr r1
   13fa8:	andeq	r4, r1, r8, ror #2
   13fac:	andeq	r4, r1, r4, ror r1
   13fb0:	andeq	r4, r1, r0, lsl #3
   13fb4:	andeq	r4, r1, ip, lsl #3
   13fb8:	muleq	r1, r8, r1
   13fbc:	andeq	r4, r1, r4, lsr #3
   13fc0:			; <UNDEFINED> instruction: 0x000141b0
   13fc4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fc8:	andeq	r4, r1, r0, lsl #4
   13fcc:			; <UNDEFINED> instruction: 0x000141bc
   13fd0:	ldrdeq	r3, [r1], -r8
   13fd4:	andeq	r4, r1, ip, lsl #4
   13fd8:	ldr	r3, [r0, #4]
   13fdc:	cmp	r3, #22
   13fe0:	bne	140c4 <table_set@@Base+0x184>
   13fe4:	ldr	r3, [r4]
   13fe8:	cmp	r3, #0
   13fec:	bne	13ffc <table_set@@Base+0xbc>
   13ff0:	mov	r0, #1
   13ff4:	bl	11b7c <malloc@plt>
   13ff8:	str	r0, [r4]
   13ffc:	ldr	r3, [r4]
   14000:	cmp	r3, #0
   14004:	ldrbne	r2, [r5]
   14008:	strbne	r2, [r3]
   1400c:	bne	1404c <table_set@@Base+0x10c>
   14010:	b	140c4 <table_set@@Base+0x184>
   14014:	ldr	r3, [r0, #4]
   14018:	cmp	r3, #0
   1401c:	bne	140c4 <table_set@@Base+0x184>
   14020:	ldr	r3, [r4]
   14024:	cmp	r3, #0
   14028:	bne	14038 <table_set@@Base+0xf8>
   1402c:	mov	r0, #4
   14030:	bl	11b7c <malloc@plt>
   14034:	str	r0, [r4]
   14038:	ldr	r3, [r4]
   1403c:	cmp	r3, #0
   14040:	ldrne	r2, [r5]
   14044:	strne	r2, [r3]
   14048:	beq	140c4 <table_set@@Base+0x184>
   1404c:	mov	r0, r6
   14050:	mov	r3, #1
   14054:	mov	r2, r7
   14058:	mov	r1, r8
   1405c:	bl	12878 <table_notify@@Base>
   14060:	mov	r0, #0
   14064:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14068:	ldr	r3, [r0, #4]
   1406c:	cmp	r3, #1
   14070:	b	1401c <table_set@@Base+0xdc>
   14074:	ldr	r3, [r0, #4]
   14078:	cmp	r3, #2
   1407c:	b	13fe0 <table_set@@Base+0xa0>
   14080:	ldr	r3, [r0, #4]
   14084:	cmp	r3, #3
   14088:	b	13fe0 <table_set@@Base+0xa0>
   1408c:	ldr	r3, [r0, #4]
   14090:	cmp	r3, #4
   14094:	bne	140c4 <table_set@@Base+0x184>
   14098:	ldr	r3, [r4]
   1409c:	cmp	r3, #0
   140a0:	bne	140b0 <table_set@@Base+0x170>
   140a4:	mov	r0, #2
   140a8:	bl	11b7c <malloc@plt>
   140ac:	str	r0, [r4]
   140b0:	ldr	r3, [r4]
   140b4:	cmp	r3, #0
   140b8:	ldrhne	r2, [r5]
   140bc:	strhne	r2, [r3]
   140c0:	bne	1404c <table_set@@Base+0x10c>
   140c4:	mvn	r0, #0
   140c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   140cc:	ldr	r3, [r0, #4]
   140d0:	cmp	r3, #5
   140d4:	b	14094 <table_set@@Base+0x154>
   140d8:	ldr	r3, [r0, #4]
   140dc:	cmp	r3, #6
   140e0:	b	1401c <table_set@@Base+0xdc>
   140e4:	ldr	r3, [r0, #4]
   140e8:	cmp	r3, #7
   140ec:	b	1401c <table_set@@Base+0xdc>
   140f0:	ldr	r0, [r0, #4]
   140f4:	cmp	r0, #8
   140f8:	bne	140c4 <table_set@@Base+0x184>
   140fc:	ldr	r3, [r4]
   14100:	cmp	r3, #0
   14104:	bne	14110 <table_set@@Base+0x1d0>
   14108:	bl	11b7c <malloc@plt>
   1410c:	str	r0, [r4]
   14110:	ldr	r3, [r4]
   14114:	cmp	r3, #0
   14118:	beq	140c4 <table_set@@Base+0x184>
   1411c:	ldr	r2, [r5]
   14120:	str	r2, [r3]
   14124:	ldr	r2, [r5, #4]
   14128:	str	r2, [r3, #4]
   1412c:	b	1404c <table_set@@Base+0x10c>
   14130:	ldr	r3, [r0, #4]
   14134:	cmp	r3, #9
   14138:	bne	140c4 <table_set@@Base+0x184>
   1413c:	ldr	r3, [r4]
   14140:	cmp	r3, #0
   14144:	bne	14110 <table_set@@Base+0x1d0>
   14148:	mov	r0, #8
   1414c:	b	14108 <table_set@@Base+0x1c8>
   14150:	ldr	r3, [r0, #4]
   14154:	cmp	r3, #10
   14158:	b	14094 <table_set@@Base+0x154>
   1415c:	ldr	r3, [r0, #4]
   14160:	cmp	r3, #11
   14164:	b	14094 <table_set@@Base+0x154>
   14168:	ldr	r3, [r0, #4]
   1416c:	cmp	r3, #12
   14170:	b	1401c <table_set@@Base+0xdc>
   14174:	ldr	r3, [r0, #4]
   14178:	cmp	r3, #13
   1417c:	b	1401c <table_set@@Base+0xdc>
   14180:	ldr	r3, [r0, #4]
   14184:	cmp	r3, #14
   14188:	b	14138 <table_set@@Base+0x1f8>
   1418c:	ldr	r3, [r0, #4]
   14190:	cmp	r3, #15
   14194:	b	14138 <table_set@@Base+0x1f8>
   14198:	ldr	r3, [r0, #4]
   1419c:	cmp	r3, #16
   141a0:	b	1401c <table_set@@Base+0xdc>
   141a4:	ldr	r3, [r0, #4]
   141a8:	cmp	r3, #17
   141ac:	b	14138 <table_set@@Base+0x1f8>
   141b0:	ldr	r3, [r0, #4]
   141b4:	cmp	r3, #18
   141b8:	b	14138 <table_set@@Base+0x1f8>
   141bc:	ldr	r3, [r0, #4]
   141c0:	cmp	r3, #21
   141c4:	bne	140c4 <table_set@@Base+0x184>
   141c8:	mov	r0, r5
   141cc:	bl	11ba0 <strlen@plt>
   141d0:	add	r1, r0, #1
   141d4:	ldr	r0, [r4]
   141d8:	bl	11b58 <realloc@plt>
   141dc:	cmp	r0, #0
   141e0:	str	r0, [r4]
   141e4:	beq	140c4 <table_set@@Base+0x184>
   141e8:	mov	r1, r5
   141ec:	bl	11b64 <strcpy@plt>
   141f0:	b	1404c <table_set@@Base+0x10c>
   141f4:	ldr	r3, [r0, #4]
   141f8:	cmp	r3, #19
   141fc:	b	13fe0 <table_set@@Base+0xa0>
   14200:	ldr	r3, [r0, #4]
   14204:	cmp	r3, #20
   14208:	b	13fe0 <table_set@@Base+0xa0>
   1420c:	ldr	r3, [r0, #4]
   14210:	cmp	r3, #23
   14214:	bne	140c4 <table_set@@Base+0x184>
   14218:	str	r5, [r4]
   1421c:	b	1404c <table_set@@Base+0x10c>

00014220 <table_set_bool@@Base>:
   14220:	push	{r0, r1, r2, r3, r4, lr}
   14224:	strb	r3, [sp, #15]
   14228:	mov	r3, #22
   1422c:	str	r3, [sp]
   14230:	add	r3, sp, #15
   14234:	bl	13f40 <table_set@@Base>
   14238:	add	sp, sp, #20
   1423c:	pop	{pc}		; (ldr pc, [sp], #4)

00014240 <table_set_int@@Base>:
   14240:	push	{r0, r1, r2, r3, r4, lr}
   14244:	str	r3, [sp, #12]
   14248:	mov	r3, #0
   1424c:	str	r3, [sp]
   14250:	add	r3, sp, #12
   14254:	bl	13f40 <table_set@@Base>
   14258:	add	sp, sp, #20
   1425c:	pop	{pc}		; (ldr pc, [sp], #4)

00014260 <table_set_uint@@Base>:
   14260:	push	{r0, r1, r2, r3, r4, lr}
   14264:	str	r3, [sp, #12]
   14268:	mov	r3, #1
   1426c:	str	r3, [sp]
   14270:	add	r3, sp, #12
   14274:	bl	13f40 <table_set@@Base>
   14278:	add	sp, sp, #20
   1427c:	pop	{pc}		; (ldr pc, [sp], #4)

00014280 <table_set_int8@@Base>:
   14280:	push	{r0, r1, r2, r3, r4, lr}
   14284:	strb	r3, [sp, #15]
   14288:	mov	r3, #2
   1428c:	str	r3, [sp]
   14290:	add	r3, sp, #15
   14294:	bl	13f40 <table_set@@Base>
   14298:	add	sp, sp, #20
   1429c:	pop	{pc}		; (ldr pc, [sp], #4)

000142a0 <table_set_uint8@@Base>:
   142a0:	push	{r0, r1, r2, r3, r4, lr}
   142a4:	strb	r3, [sp, #15]
   142a8:	mov	r3, #3
   142ac:	str	r3, [sp]
   142b0:	add	r3, sp, #15
   142b4:	bl	13f40 <table_set@@Base>
   142b8:	add	sp, sp, #20
   142bc:	pop	{pc}		; (ldr pc, [sp], #4)

000142c0 <table_set_int16@@Base>:
   142c0:	push	{r0, r1, r2, r3, r4, lr}
   142c4:	strh	r3, [sp, #14]
   142c8:	mov	r3, #4
   142cc:	str	r3, [sp]
   142d0:	add	r3, sp, #14
   142d4:	bl	13f40 <table_set@@Base>
   142d8:	add	sp, sp, #20
   142dc:	pop	{pc}		; (ldr pc, [sp], #4)

000142e0 <table_set_uint16@@Base>:
   142e0:	push	{r0, r1, r2, r3, r4, lr}
   142e4:	strh	r3, [sp, #14]
   142e8:	mov	r3, #5
   142ec:	str	r3, [sp]
   142f0:	add	r3, sp, #14
   142f4:	bl	13f40 <table_set@@Base>
   142f8:	add	sp, sp, #20
   142fc:	pop	{pc}		; (ldr pc, [sp], #4)

00014300 <table_set_int32@@Base>:
   14300:	push	{r0, r1, r2, r3, r4, lr}
   14304:	str	r3, [sp, #12]
   14308:	mov	r3, #6
   1430c:	str	r3, [sp]
   14310:	add	r3, sp, #12
   14314:	bl	13f40 <table_set@@Base>
   14318:	add	sp, sp, #20
   1431c:	pop	{pc}		; (ldr pc, [sp], #4)

00014320 <table_set_uint32@@Base>:
   14320:	push	{r0, r1, r2, r3, r4, lr}
   14324:	str	r3, [sp, #12]
   14328:	mov	r3, #7
   1432c:	str	r3, [sp]
   14330:	add	r3, sp, #12
   14334:	bl	13f40 <table_set@@Base>
   14338:	add	sp, sp, #20
   1433c:	pop	{pc}		; (ldr pc, [sp], #4)

00014340 <table_set_int64@@Base>:
   14340:	mov	r3, #8
   14344:	push	{r0, r1, r2, lr}
   14348:	str	r3, [sp]
   1434c:	add	r3, sp, #16
   14350:	bl	13f40 <table_set@@Base>
   14354:	add	sp, sp, #12
   14358:	pop	{pc}		; (ldr pc, [sp], #4)

0001435c <table_set_uint64@@Base>:
   1435c:	mov	r3, #9
   14360:	push	{r0, r1, r2, lr}
   14364:	str	r3, [sp]
   14368:	add	r3, sp, #16
   1436c:	bl	13f40 <table_set@@Base>
   14370:	add	sp, sp, #12
   14374:	pop	{pc}		; (ldr pc, [sp], #4)

00014378 <table_set_short@@Base>:
   14378:	push	{r0, r1, r2, r3, r4, lr}
   1437c:	strh	r3, [sp, #14]
   14380:	mov	r3, #10
   14384:	str	r3, [sp]
   14388:	add	r3, sp, #14
   1438c:	bl	13f40 <table_set@@Base>
   14390:	add	sp, sp, #20
   14394:	pop	{pc}		; (ldr pc, [sp], #4)

00014398 <table_set_ushort@@Base>:
   14398:	push	{r0, r1, r2, r3, r4, lr}
   1439c:	strh	r3, [sp, #14]
   143a0:	mov	r3, #11
   143a4:	str	r3, [sp]
   143a8:	add	r3, sp, #14
   143ac:	bl	13f40 <table_set@@Base>
   143b0:	add	sp, sp, #20
   143b4:	pop	{pc}		; (ldr pc, [sp], #4)

000143b8 <table_set_long@@Base>:
   143b8:	push	{r0, r1, r2, r3, r4, lr}
   143bc:	str	r3, [sp, #12]
   143c0:	mov	r3, #12
   143c4:	str	r3, [sp]
   143c8:	add	r3, sp, r3
   143cc:	bl	13f40 <table_set@@Base>
   143d0:	add	sp, sp, #20
   143d4:	pop	{pc}		; (ldr pc, [sp], #4)

000143d8 <table_set_ulong@@Base>:
   143d8:	push	{r0, r1, r2, r3, r4, lr}
   143dc:	str	r3, [sp, #12]
   143e0:	mov	r3, #13
   143e4:	str	r3, [sp]
   143e8:	add	r3, sp, #12
   143ec:	bl	13f40 <table_set@@Base>
   143f0:	add	sp, sp, #20
   143f4:	pop	{pc}		; (ldr pc, [sp], #4)

000143f8 <table_set_llong@@Base>:
   143f8:	mov	r3, #14
   143fc:	push	{r0, r1, r2, lr}
   14400:	str	r3, [sp]
   14404:	add	r3, sp, #16
   14408:	bl	13f40 <table_set@@Base>
   1440c:	add	sp, sp, #12
   14410:	pop	{pc}		; (ldr pc, [sp], #4)

00014414 <table_set_ullong@@Base>:
   14414:	mov	r3, #15
   14418:	push	{r0, r1, r2, lr}
   1441c:	str	r3, [sp]
   14420:	add	r3, sp, #16
   14424:	bl	13f40 <table_set@@Base>
   14428:	add	sp, sp, #12
   1442c:	pop	{pc}		; (ldr pc, [sp], #4)

00014430 <table_set_float@@Base>:
   14430:	push	{r0, r1, r2, r3, r4, lr}
   14434:	mov	r3, #16
   14438:	str	r3, [sp]
   1443c:	add	r3, sp, #12
   14440:	vstr	s0, [sp, #12]
   14444:	bl	13f40 <table_set@@Base>
   14448:	add	sp, sp, #20
   1444c:	pop	{pc}		; (ldr pc, [sp], #4)

00014450 <table_set_double@@Base>:
   14450:	push	{r0, r1, r2, r3, r4, lr}
   14454:	mov	r3, #17
   14458:	str	r3, [sp]
   1445c:	add	r3, sp, #8
   14460:	vstr	d0, [sp, #8]
   14464:	bl	13f40 <table_set@@Base>
   14468:	add	sp, sp, #20
   1446c:	pop	{pc}		; (ldr pc, [sp], #4)

00014470 <table_set_ldouble@@Base>:
   14470:	push	{r0, r1, r2, r3, r4, lr}
   14474:	mov	r3, #18
   14478:	str	r3, [sp]
   1447c:	add	r3, sp, #8
   14480:	vstr	d0, [sp, #8]
   14484:	bl	13f40 <table_set@@Base>
   14488:	add	sp, sp, #20
   1448c:	pop	{pc}		; (ldr pc, [sp], #4)

00014490 <table_set_string@@Base>:
   14490:	mov	ip, #21
   14494:	push	{r0, r1, r2, lr}
   14498:	str	ip, [sp]
   1449c:	bl	13f40 <table_set@@Base>
   144a0:	add	sp, sp, #12
   144a4:	pop	{pc}		; (ldr pc, [sp], #4)

000144a8 <table_set_char@@Base>:
   144a8:	push	{r0, r1, r2, r3, r4, lr}
   144ac:	strb	r3, [sp, #15]
   144b0:	mov	r3, #19
   144b4:	str	r3, [sp]
   144b8:	add	r3, sp, #15
   144bc:	bl	13f40 <table_set@@Base>
   144c0:	add	sp, sp, #20
   144c4:	pop	{pc}		; (ldr pc, [sp], #4)

000144c8 <table_set_uchar@@Base>:
   144c8:	push	{r0, r1, r2, r3, r4, lr}
   144cc:	strb	r3, [sp, #15]
   144d0:	mov	r3, #20
   144d4:	str	r3, [sp]
   144d8:	add	r3, sp, #15
   144dc:	bl	13f40 <table_set@@Base>
   144e0:	add	sp, sp, #20
   144e4:	pop	{pc}		; (ldr pc, [sp], #4)

000144e8 <table_set_ptr@@Base>:
   144e8:	mov	ip, #23
   144ec:	push	{r0, r1, r2, lr}
   144f0:	str	ip, [sp]
   144f4:	bl	13f40 <table_set@@Base>
   144f8:	add	sp, sp, #12
   144fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14504:	sub	sp, sp, #28
   14508:	ldr	lr, [sp, #64]	; 0x40
   1450c:	sub	lr, lr, r3
   14510:	cmp	lr, #0
   14514:	str	lr, [sp, #8]
   14518:	ble	14604 <table_set_ptr@@Base+0x11c>
   1451c:	ldr	ip, [sp, #64]	; 0x40
   14520:	mov	r4, r0
   14524:	mov	r9, r2
   14528:	mov	r7, r1
   1452c:	mov	sl, r1
   14530:	str	r3, [sp, #12]
   14534:	mov	fp, #0
   14538:	add	r8, ip, r3
   1453c:	ldr	ip, [sp, #68]	; 0x44
   14540:	add	r8, r8, r8, lsr #31
   14544:	asr	r8, r8, #1
   14548:	add	r5, r8, #1
   1454c:	stm	sp, {r8, ip}
   14550:	bl	14500 <table_set_ptr@@Base+0x18>
   14554:	ldr	r3, [sp, #68]	; 0x44
   14558:	mov	r2, r9
   1455c:	mov	r1, r7
   14560:	mov	r0, r4
   14564:	str	r3, [sp, #4]
   14568:	ldr	r3, [sp, #64]	; 0x40
   1456c:	str	r3, [sp]
   14570:	mov	r3, r5
   14574:	bl	14500 <table_set_ptr@@Base+0x18>
   14578:	mov	r1, r9
   1457c:	mov	r0, r4
   14580:	bl	13554 <table_get_column_compare_function@@Base>
   14584:	ldr	r6, [sp, #12]
   14588:	str	r0, [sp, #16]
   1458c:	ldr	r3, [sp, #68]	; 0x44
   14590:	cmp	r3, #0
   14594:	bne	1466c <table_set_ptr@@Base+0x184>
   14598:	cmp	r8, r6
   1459c:	blt	14650 <table_set_ptr@@Base+0x168>
   145a0:	ldr	r3, [sp, #64]	; 0x40
   145a4:	cmp	r3, r5
   145a8:	bge	1460c <table_set_ptr@@Base+0x124>
   145ac:	mov	r1, r6
   145b0:	mov	r0, r4
   145b4:	bl	13f24 <table_get_row_ptr@@Base>
   145b8:	ldr	r3, [r0]
   145bc:	add	r6, r6, #1
   145c0:	str	r3, [sl]
   145c4:	ldr	r3, [sp, #8]
   145c8:	add	fp, fp, #1
   145cc:	add	sl, sl, #4
   145d0:	cmp	r3, fp
   145d4:	bge	1458c <table_set_ptr@@Base+0xa4>
   145d8:	ldr	r5, [sp, #12]
   145dc:	add	r6, r5, #1
   145e0:	add	r6, r6, r3
   145e4:	mov	r2, r7
   145e8:	mov	r1, r5
   145ec:	mov	r0, r4
   145f0:	add	r5, r5, #1
   145f4:	bl	13f30 <table_set_row_ptr@@Base>
   145f8:	cmp	r5, r6
   145fc:	add	r7, r7, #4
   14600:	bne	145e4 <table_set_ptr@@Base+0xfc>
   14604:	add	sp, sp, #28
   14608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1460c:	mov	r2, r9
   14610:	mov	r1, r6
   14614:	mov	r0, r4
   14618:	bl	13c00 <table_get@@Base>
   1461c:	mov	r3, r0
   14620:	mov	r2, r9
   14624:	mov	r1, r5
   14628:	mov	r0, r4
   1462c:	str	r3, [sp, #20]
   14630:	bl	13c00 <table_get@@Base>
   14634:	ldr	r3, [sp, #20]
   14638:	mov	r1, r0
   1463c:	mov	r0, r3
   14640:	ldr	r3, [sp, #16]
   14644:	blx	r3
   14648:	cmp	r0, #0
   1464c:	blt	145ac <table_set_ptr@@Base+0xc4>
   14650:	mov	r1, r5
   14654:	mov	r0, r4
   14658:	bl	13f24 <table_get_row_ptr@@Base>
   1465c:	ldr	r3, [r0]
   14660:	add	r5, r5, #1
   14664:	str	r3, [sl]
   14668:	b	145c4 <table_set_ptr@@Base+0xdc>
   1466c:	cmp	r8, r6
   14670:	blt	14650 <table_set_ptr@@Base+0x168>
   14674:	ldr	r3, [sp, #64]	; 0x40
   14678:	cmp	r3, r5
   1467c:	blt	145ac <table_set_ptr@@Base+0xc4>
   14680:	mov	r2, r9
   14684:	mov	r1, r6
   14688:	mov	r0, r4
   1468c:	bl	13c00 <table_get@@Base>
   14690:	mov	r3, r0
   14694:	mov	r2, r9
   14698:	mov	r1, r5
   1469c:	mov	r0, r4
   146a0:	str	r3, [sp, #20]
   146a4:	bl	13c00 <table_get@@Base>
   146a8:	ldr	r3, [sp, #20]
   146ac:	mov	r1, r0
   146b0:	mov	r0, r3
   146b4:	ldr	r3, [sp, #16]
   146b8:	blx	r3
   146bc:	cmp	r0, #0
   146c0:	bgt	145ac <table_set_ptr@@Base+0xc4>
   146c4:	b	14650 <table_set_ptr@@Base+0x168>

000146c8 <table_column_sort@@Base>:
   146c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146cc:	mov	r6, r0
   146d0:	sub	sp, sp, #44	; 0x2c
   146d4:	mov	fp, r1
   146d8:	mov	r7, #0
   146dc:	str	r1, [sp, #16]
   146e0:	str	r2, [sp, #20]
   146e4:	str	r3, [sp, #32]
   146e8:	ldr	r3, [sp, #32]
   146ec:	cmp	r7, r3
   146f0:	blt	14710 <table_column_sort@@Base+0x48>
   146f4:	mvn	r2, #0
   146f8:	mov	r3, #32
   146fc:	mov	r1, r2
   14700:	mov	r0, r6
   14704:	add	sp, sp, #44	; 0x2c
   14708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1470c:	b	12878 <table_notify@@Base>
   14710:	mov	r0, r6
   14714:	bl	13d88 <table_get_row_length@@Base>
   14718:	cmp	r7, #0
   1471c:	str	r0, [sp, #12]
   14720:	bne	14774 <table_column_sort@@Base+0xac>
   14724:	ldr	r3, [sp, #16]
   14728:	mov	r1, #4
   1472c:	ldr	r5, [r3]
   14730:	ldr	r3, [sp, #20]
   14734:	ldr	r8, [r3]
   14738:	bl	11b1c <calloc@plt>
   1473c:	ldr	r3, [sp, #12]
   14740:	mov	r4, r0
   14744:	mov	r1, r0
   14748:	mov	r2, r5
   1474c:	mov	r0, r6
   14750:	sub	r3, r3, #1
   14754:	stm	sp, {r3, r8}
   14758:	mov	r3, r7
   1475c:	bl	14500 <table_set_ptr@@Base+0x18>
   14760:	mov	r0, r4
   14764:	bl	11b40 <free@plt>
   14768:	add	r7, r7, #1
   1476c:	add	fp, fp, #4
   14770:	b	146e8 <table_column_sort@@Base+0x20>
   14774:	mvn	r5, #0
   14778:	mov	r0, r6
   1477c:	ldr	r1, [fp, #-4]
   14780:	mov	r8, r5
   14784:	mov	r4, #0
   14788:	bl	13554 <table_get_column_compare_function@@Base>
   1478c:	str	r0, [sp, #28]
   14790:	ldr	r3, [sp, #12]
   14794:	cmp	r4, r3
   14798:	bge	14768 <table_column_sort@@Base+0xa0>
   1479c:	cmp	r4, #0
   147a0:	beq	14824 <table_column_sort@@Base+0x15c>
   147a4:	sub	r9, r7, #1
   147a8:	mov	sl, fp
   147ac:	ldr	r2, [sl, #-4]!
   147b0:	mov	r1, r4
   147b4:	mov	r0, r6
   147b8:	bl	13c00 <table_get@@Base>
   147bc:	sub	r3, r4, #1
   147c0:	str	r0, [sp, #24]
   147c4:	mov	r0, r6
   147c8:	mov	r1, r3
   147cc:	str	r3, [sp, #36]	; 0x24
   147d0:	ldr	r2, [sl]
   147d4:	bl	13c00 <table_get@@Base>
   147d8:	mov	r1, r0
   147dc:	ldr	r0, [sp, #24]
   147e0:	ldr	r3, [sp, #28]
   147e4:	blx	r3
   147e8:	cmp	r0, #0
   147ec:	bne	14824 <table_column_sort@@Base+0x15c>
   147f0:	sub	r9, r9, #1
   147f4:	ldr	r3, [sp, #36]	; 0x24
   147f8:	cmn	r9, #1
   147fc:	bne	147ac <table_column_sort@@Base+0xe4>
   14800:	cmn	r8, #1
   14804:	mov	r5, r4
   14808:	moveq	r8, r3
   1480c:	ldr	r3, [sp, #12]
   14810:	sub	r3, r3, #1
   14814:	cmp	r3, r5
   14818:	beq	14834 <table_column_sort@@Base+0x16c>
   1481c:	add	r4, r4, #1
   14820:	b	14790 <table_column_sort@@Base+0xc8>
   14824:	cmn	r8, #1
   14828:	beq	1481c <table_column_sort@@Base+0x154>
   1482c:	cmp	r4, r5
   14830:	beq	1480c <table_column_sort@@Base+0x144>
   14834:	ldr	r3, [sp, #20]
   14838:	sub	r0, r5, r8
   1483c:	mov	r1, #4
   14840:	add	r0, r0, #1
   14844:	ldr	sl, [fp]
   14848:	ldr	r3, [r3, r7, lsl #2]
   1484c:	str	r3, [sp, #24]
   14850:	bl	11b1c <calloc@plt>
   14854:	ldr	r3, [sp, #24]
   14858:	mov	r1, r0
   1485c:	mov	r9, r0
   14860:	mov	r2, sl
   14864:	mov	r0, r6
   14868:	str	r5, [sp]
   1486c:	mvn	r5, #0
   14870:	str	r3, [sp, #4]
   14874:	mov	r3, r8
   14878:	mov	r8, r5
   1487c:	bl	14500 <table_set_ptr@@Base+0x18>
   14880:	mov	r0, r9
   14884:	bl	11b40 <free@plt>
   14888:	b	1481c <table_column_sort@@Base+0x154>

0001488c <__libc_csu_init@@Base>:
   1488c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14890:	mov	r7, r0
   14894:	ldr	r6, [pc, #72]	; 148e4 <__libc_csu_init@@Base+0x58>
   14898:	ldr	r5, [pc, #72]	; 148e8 <__libc_csu_init@@Base+0x5c>
   1489c:	add	r6, pc, r6
   148a0:	add	r5, pc, r5
   148a4:	sub	r6, r6, r5
   148a8:	mov	r8, r1
   148ac:	mov	r9, r2
   148b0:	bl	11afc <calloc@plt-0x20>
   148b4:	asrs	r6, r6, #2
   148b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   148bc:	mov	r4, #0
   148c0:	add	r4, r4, #1
   148c4:	ldr	r3, [r5], #4
   148c8:	mov	r2, r9
   148cc:	mov	r1, r8
   148d0:	mov	r0, r7
   148d4:	blx	r3
   148d8:	cmp	r6, r4
   148dc:	bne	148c0 <__libc_csu_init@@Base+0x34>
   148e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148e4:	andeq	r0, r1, r0, ror r6
   148e8:	andeq	r0, r1, r8, ror #12

000148ec <__libc_csu_fini@@Base>:
   148ec:	bx	lr

Disassembly of section .fini:

000148f0 <.fini>:
   148f0:	push	{r3, lr}
   148f4:	pop	{r3, pc}
