
../repos/coreutils/src/sleep:     file format elf32-littlearm


Disassembly of section .init:

00010cec <.init>:
   10cec:	push	{r3, lr}
   10cf0:	bl	10f7c <abort@plt+0x48>
   10cf4:	pop	{r3, pc}

Disassembly of section .plt:

00010cf8 <calloc@plt-0x14>:
   10cf8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cfc:	ldr	lr, [pc, #4]	; 10d08 <calloc@plt-0x4>
   10d00:	add	lr, pc, lr
   10d04:	ldr	pc, [lr, #8]!
   10d08:	strdeq	r5, [r1], -r8

00010d0c <calloc@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #86016	; 0x15000
   10d14:	ldr	pc, [ip, #760]!	; 0x2f8

00010d18 <fputs_unlocked@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #86016	; 0x15000
   10d20:	ldr	pc, [ip, #752]!	; 0x2f0

00010d24 <strcmp@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #86016	; 0x15000
   10d2c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d30 <pause@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #86016	; 0x15000
   10d38:	ldr	pc, [ip, #736]!	; 0x2e0

00010d3c <fflush@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #86016	; 0x15000
   10d44:	ldr	pc, [ip, #728]!	; 0x2d8

00010d48 <free@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #86016	; 0x15000
   10d50:	ldr	pc, [ip, #720]!	; 0x2d0

00010d54 <nanosleep@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #86016	; 0x15000
   10d5c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d60 <_exit@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #86016	; 0x15000
   10d68:	ldr	pc, [ip, #704]!	; 0x2c0

00010d6c <memcpy@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #86016	; 0x15000
   10d74:	ldr	pc, [ip, #696]!	; 0x2b8

00010d78 <mbsinit@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #86016	; 0x15000
   10d80:	ldr	pc, [ip, #688]!	; 0x2b0

00010d84 <dcgettext@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #86016	; 0x15000
   10d8c:	ldr	pc, [ip, #680]!	; 0x2a8

00010d90 <realloc@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #86016	; 0x15000
   10d98:	ldr	pc, [ip, #672]!	; 0x2a0

00010d9c <textdomain@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #86016	; 0x15000
   10da4:	ldr	pc, [ip, #664]!	; 0x298

00010da8 <iswprint@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #86016	; 0x15000
   10db0:	ldr	pc, [ip, #656]!	; 0x290

00010db4 <fwrite@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #86016	; 0x15000
   10dbc:	ldr	pc, [ip, #648]!	; 0x288

00010dc0 <lseek64@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #640]!	; 0x280

00010dcc <__ctype_get_mb_cur_max@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #632]!	; 0x278

00010dd8 <__fpending@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #624]!	; 0x270

00010de4 <ferror_unlocked@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #616]!	; 0x268

00010df0 <mbrtowc@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #608]!	; 0x260

00010dfc <error@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #86016	; 0x15000
   10e04:	ldr	pc, [ip, #600]!	; 0x258

00010e08 <malloc@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #86016	; 0x15000
   10e10:	ldr	pc, [ip, #592]!	; 0x250

00010e14 <__libc_start_main@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #86016	; 0x15000
   10e1c:	ldr	pc, [ip, #584]!	; 0x248

00010e20 <__freading@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #86016	; 0x15000
   10e28:	ldr	pc, [ip, #576]!	; 0x240

00010e2c <__gmon_start__@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #568]!	; 0x238

00010e38 <getopt_long@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #560]!	; 0x230

00010e44 <__ctype_b_loc@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #552]!	; 0x228

00010e50 <exit@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #544]!	; 0x220

00010e5c <bcmp@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #536]!	; 0x218

00010e68 <strlen@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #528]!	; 0x210

00010e74 <__errno_location@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #520]!	; 0x208

00010e80 <__cxa_atexit@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #512]!	; 0x200

00010e8c <memset@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #504]!	; 0x1f8

00010e98 <__printf_chk@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #496]!	; 0x1f0

00010ea4 <strtod@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #488]!	; 0x1e8

00010eb0 <fileno@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #480]!	; 0x1e0

00010ebc <__fprintf_chk@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #472]!	; 0x1d8

00010ec8 <fclose@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #464]!	; 0x1d0

00010ed4 <fseeko64@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #456]!	; 0x1c8

00010ee0 <strtod_l@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #448]!	; 0x1c0

00010eec <setlocale@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #440]!	; 0x1b8

00010ef8 <strrchr@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #86016	; 0x15000
   10f00:	ldr	pc, [ip, #432]!	; 0x1b0

00010f04 <nl_langinfo@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #86016	; 0x15000
   10f0c:	ldr	pc, [ip, #424]!	; 0x1a8

00010f10 <newlocale@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #86016	; 0x15000
   10f18:	ldr	pc, [ip, #416]!	; 0x1a0

00010f1c <bindtextdomain@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #86016	; 0x15000
   10f24:	ldr	pc, [ip, #408]!	; 0x198

00010f28 <strncmp@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #86016	; 0x15000
   10f30:	ldr	pc, [ip, #400]!	; 0x190

00010f34 <abort@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #86016	; 0x15000
   10f3c:	ldr	pc, [ip, #392]!	; 0x188

Disassembly of section .text:

00010f40 <.text>:
   10f40:	mov	fp, #0
   10f44:	mov	lr, #0
   10f48:	pop	{r1}		; (ldr r1, [sp], #4)
   10f4c:	mov	r2, sp
   10f50:	push	{r2}		; (str r2, [sp, #-4]!)
   10f54:	push	{r0}		; (str r0, [sp, #-4]!)
   10f58:	ldr	ip, [pc, #16]	; 10f70 <abort@plt+0x3c>
   10f5c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f60:	ldr	r0, [pc, #12]	; 10f74 <abort@plt+0x40>
   10f64:	ldr	r3, [pc, #12]	; 10f78 <abort@plt+0x44>
   10f68:	bl	10e14 <__libc_start_main@plt>
   10f6c:	bl	10f34 <abort@plt>
   10f70:	andeq	r4, r1, r0, lsr r9
   10f74:	andeq	r1, r1, ip, lsl #5
   10f78:	ldrdeq	r4, [r1], -r0
   10f7c:	ldr	r3, [pc, #20]	; 10f98 <abort@plt+0x64>
   10f80:	ldr	r2, [pc, #20]	; 10f9c <abort@plt+0x68>
   10f84:	add	r3, pc, r3
   10f88:	ldr	r2, [r3, r2]
   10f8c:	cmp	r2, #0
   10f90:	bxeq	lr
   10f94:	b	10e2c <__gmon_start__@plt>
   10f98:	andeq	r5, r1, r4, ror r0
   10f9c:	andeq	r0, r0, r8, asr #1
   10fa0:	ldr	r0, [pc, #24]	; 10fc0 <abort@plt+0x8c>
   10fa4:	ldr	r3, [pc, #24]	; 10fc4 <abort@plt+0x90>
   10fa8:	cmp	r3, r0
   10fac:	bxeq	lr
   10fb0:	ldr	r3, [pc, #16]	; 10fc8 <abort@plt+0x94>
   10fb4:	cmp	r3, #0
   10fb8:	bxeq	lr
   10fbc:	bx	r3
   10fc0:	andeq	r6, r2, r0, lsr #2
   10fc4:	andeq	r6, r2, r0, lsr #2
   10fc8:	andeq	r0, r0, r0
   10fcc:	ldr	r0, [pc, #36]	; 10ff8 <abort@plt+0xc4>
   10fd0:	ldr	r1, [pc, #36]	; 10ffc <abort@plt+0xc8>
   10fd4:	sub	r1, r1, r0
   10fd8:	asr	r1, r1, #2
   10fdc:	add	r1, r1, r1, lsr #31
   10fe0:	asrs	r1, r1, #1
   10fe4:	bxeq	lr
   10fe8:	ldr	r3, [pc, #16]	; 11000 <abort@plt+0xcc>
   10fec:	cmp	r3, #0
   10ff0:	bxeq	lr
   10ff4:	bx	r3
   10ff8:	andeq	r6, r2, r0, lsr #2
   10ffc:	andeq	r6, r2, r0, lsr #2
   11000:	andeq	r0, r0, r0
   11004:	push	{r4, lr}
   11008:	ldr	r4, [pc, #24]	; 11028 <abort@plt+0xf4>
   1100c:	ldrb	r3, [r4]
   11010:	cmp	r3, #0
   11014:	popne	{r4, pc}
   11018:	bl	10fa0 <abort@plt+0x6c>
   1101c:	mov	r3, #1
   11020:	strb	r3, [r4]
   11024:	pop	{r4, pc}
   11028:	andeq	r6, r2, ip, lsr r1
   1102c:	b	10fcc <abort@plt+0x98>
   11030:	push	{fp, lr}
   11034:	mov	fp, sp
   11038:	mov	r4, r0
   1103c:	cmp	r0, #0
   11040:	bne	110c0 <abort@plt+0x18c>
   11044:	movw	r1, #18819	; 0x4983
   11048:	movt	r1, #1
   1104c:	mov	r0, #0
   11050:	mov	r2, #5
   11054:	bl	10d84 <dcgettext@plt>
   11058:	mov	r1, r0
   1105c:	movw	r0, #24904	; 0x6148
   11060:	movt	r0, #2
   11064:	ldr	r2, [r0]
   11068:	mov	r0, #1
   1106c:	mov	r3, r2
   11070:	bl	10e98 <__printf_chk@plt>
   11074:	movw	r1, #19115	; 0x4aab
   11078:	movt	r1, #1
   1107c:	mov	r0, #0
   11080:	mov	r2, #5
   11084:	bl	10d84 <dcgettext@plt>
   11088:	movw	r5, #24884	; 0x6134
   1108c:	movt	r5, #2
   11090:	ldr	r1, [r5]
   11094:	bl	10d18 <fputs_unlocked@plt>
   11098:	movw	r1, #19160	; 0x4ad8
   1109c:	movt	r1, #1
   110a0:	mov	r0, #0
   110a4:	mov	r2, #5
   110a8:	bl	10d84 <dcgettext@plt>
   110ac:	ldr	r1, [r5]
   110b0:	bl	10d18 <fputs_unlocked@plt>
   110b4:	bl	11104 <abort@plt+0x1d0>
   110b8:	mov	r0, r4
   110bc:	bl	10e50 <exit@plt>
   110c0:	movw	r0, #24880	; 0x6130
   110c4:	movt	r0, #2
   110c8:	ldr	r5, [r0]
   110cc:	movw	r1, #18780	; 0x495c
   110d0:	movt	r1, #1
   110d4:	mov	r0, #0
   110d8:	mov	r2, #5
   110dc:	bl	10d84 <dcgettext@plt>
   110e0:	mov	r2, r0
   110e4:	movw	r0, #24904	; 0x6148
   110e8:	movt	r0, #2
   110ec:	ldr	r3, [r0]
   110f0:	mov	r0, r5
   110f4:	mov	r1, #1
   110f8:	bl	10ebc <__fprintf_chk@plt>
   110fc:	mov	r0, r4
   11100:	bl	10e50 <exit@plt>
   11104:	push	{r4, r5, r6, sl, fp, lr}
   11108:	add	fp, sp, #16
   1110c:	sub	sp, sp, #56	; 0x38
   11110:	movw	r0, #19664	; 0x4cd0
   11114:	movt	r0, #1
   11118:	add	r1, r0, #32
   1111c:	mov	r2, #48	; 0x30
   11120:	vld1.64	{d16-d17}, [r1]
   11124:	mov	r6, sp
   11128:	add	r1, r6, #32
   1112c:	add	r3, r0, #16
   11130:	vld1.64	{d18-d19}, [r0], r2
   11134:	vld1.64	{d20-d21}, [r3]
   11138:	vldr	d22, [r0]
   1113c:	vst1.64	{d16-d17}, [r1]
   11140:	add	r0, r6, #16
   11144:	vst1.64	{d20-d21}, [r0]
   11148:	mov	r0, r6
   1114c:	vst1.64	{d18-d19}, [r0], r2
   11150:	vstr	d22, [r0]
   11154:	ldr	r1, [sp]
   11158:	cmp	r1, #0
   1115c:	movw	r4, #19214	; 0x4b0e
   11160:	movt	r4, #1
   11164:	beq	1118c <abort@plt+0x258>
   11168:	mov	r6, sp
   1116c:	movw	r5, #19214	; 0x4b0e
   11170:	movt	r5, #1
   11174:	mov	r0, r5
   11178:	bl	10d24 <strcmp@plt>
   1117c:	cmp	r0, #0
   11180:	ldrne	r1, [r6, #8]!
   11184:	cmpne	r1, #0
   11188:	bne	11174 <abort@plt+0x240>
   1118c:	ldr	r5, [r6, #4]
   11190:	movw	r1, #19446	; 0x4bf6
   11194:	movt	r1, #1
   11198:	mov	r0, #0
   1119c:	mov	r2, #5
   111a0:	bl	10d84 <dcgettext@plt>
   111a4:	mov	r1, r0
   111a8:	movw	r2, #19244	; 0x4b2c
   111ac:	movt	r2, #1
   111b0:	movw	r3, #19469	; 0x4c0d
   111b4:	movt	r3, #1
   111b8:	mov	r0, #1
   111bc:	bl	10e98 <__printf_chk@plt>
   111c0:	cmp	r5, #0
   111c4:	moveq	r5, r4
   111c8:	mov	r0, #5
   111cc:	mov	r1, #0
   111d0:	bl	10eec <setlocale@plt>
   111d4:	cmp	r0, #0
   111d8:	beq	11218 <abort@plt+0x2e4>
   111dc:	movw	r1, #19509	; 0x4c35
   111e0:	movt	r1, #1
   111e4:	mov	r2, #3
   111e8:	bl	10f28 <strncmp@plt>
   111ec:	cmp	r0, #0
   111f0:	beq	11218 <abort@plt+0x2e4>
   111f4:	movw	r1, #19513	; 0x4c39
   111f8:	movt	r1, #1
   111fc:	mov	r0, #0
   11200:	mov	r2, #5
   11204:	bl	10d84 <dcgettext@plt>
   11208:	movw	r1, #24884	; 0x6134
   1120c:	movt	r1, #2
   11210:	ldr	r1, [r1]
   11214:	bl	10d18 <fputs_unlocked@plt>
   11218:	movw	r1, #19584	; 0x4c80
   1121c:	movt	r1, #1
   11220:	mov	r0, #0
   11224:	mov	r2, #5
   11228:	bl	10d84 <dcgettext@plt>
   1122c:	mov	r1, r0
   11230:	movw	r2, #19469	; 0x4c0d
   11234:	movt	r2, #1
   11238:	mov	r0, #1
   1123c:	mov	r3, r4
   11240:	bl	10e98 <__printf_chk@plt>
   11244:	movw	r0, #19379	; 0x4bb3
   11248:	movt	r0, #1
   1124c:	movw	r6, #19114	; 0x4aaa
   11250:	movt	r6, #1
   11254:	cmp	r5, r4
   11258:	moveq	r6, r0
   1125c:	movw	r1, #19611	; 0x4c9b
   11260:	movt	r1, #1
   11264:	mov	r0, #0
   11268:	mov	r2, #5
   1126c:	bl	10d84 <dcgettext@plt>
   11270:	mov	r1, r0
   11274:	mov	r0, #1
   11278:	mov	r2, r5
   1127c:	mov	r3, r6
   11280:	sub	sp, fp, #16
   11284:	pop	{r4, r5, r6, sl, fp, lr}
   11288:	b	10e98 <__printf_chk@plt>
   1128c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11290:	add	fp, sp, #28
   11294:	sub	sp, sp, #4
   11298:	vpush	{d8}
   1129c:	sub	sp, sp, #40	; 0x28
   112a0:	mov	r5, r1
   112a4:	mov	r7, r0
   112a8:	ldr	r0, [r1]
   112ac:	bl	1186c <abort@plt+0x938>
   112b0:	movw	r1, #19114	; 0x4aaa
   112b4:	movt	r1, #1
   112b8:	mov	r0, #6
   112bc:	bl	10eec <setlocale@plt>
   112c0:	movw	r6, #19248	; 0x4b30
   112c4:	movt	r6, #1
   112c8:	movw	r1, #19220	; 0x4b14
   112cc:	movt	r1, #1
   112d0:	mov	r0, r6
   112d4:	bl	10f1c <bindtextdomain@plt>
   112d8:	mov	r0, r6
   112dc:	bl	10d9c <textdomain@plt>
   112e0:	movw	r0, #5648	; 0x1610
   112e4:	movt	r0, #1
   112e8:	bl	14934 <abort@plt+0x3a00>
   112ec:	movw	r0, #24792	; 0x60d8
   112f0:	movt	r0, #2
   112f4:	ldr	r0, [r0]
   112f8:	mov	r1, #0
   112fc:	movw	r2, #19271	; 0x4b47
   11300:	movt	r2, #1
   11304:	movw	r3, #19258	; 0x4b3a
   11308:	movt	r3, #1
   1130c:	movw	r6, #4144	; 0x1030
   11310:	movt	r6, #1
   11314:	mov	r4, #1
   11318:	stm	sp, {r0, r4, r6}
   1131c:	str	r3, [sp, #12]
   11320:	str	r2, [sp, #16]
   11324:	str	r1, [sp, #20]
   11328:	movw	r2, #19214	; 0x4b0e
   1132c:	movt	r2, #1
   11330:	movw	r3, #19244	; 0x4b2c
   11334:	movt	r3, #1
   11338:	mov	r0, r7
   1133c:	mov	r1, r5
   11340:	bl	117a8 <abort@plt+0x874>
   11344:	cmp	r7, #1
   11348:	beq	11494 <abort@plt+0x560>
   1134c:	movw	r0, #24872	; 0x6128
   11350:	movt	r0, #2
   11354:	vmov.i32	d8, #0	; 0x00000000
   11358:	ldr	r0, [r0]
   1135c:	cmp	r0, r7
   11360:	bge	11448 <abort@plt+0x514>
   11364:	vmov.i32	d8, #0	; 0x00000000
   11368:	add	r4, r5, r0, lsl #2
   1136c:	sub	r6, r7, r0
   11370:	mov	r8, #1
   11374:	add	r9, sp, #28
   11378:	add	r5, sp, #32
   1137c:	movw	sl, #5488	; 0x1570
   11380:	movt	sl, #1
   11384:	b	113d4 <abort@plt+0x4a0>
   11388:	mov	r8, #0
   1138c:	mov	r0, #0
   11390:	movw	r1, #19299	; 0x4b63
   11394:	movt	r1, #1
   11398:	mov	r2, #5
   1139c:	bl	10d84 <dcgettext@plt>
   113a0:	mov	r7, r0
   113a4:	ldr	r0, [r4]
   113a8:	bl	13060 <abort@plt+0x212c>
   113ac:	mov	r3, r0
   113b0:	mov	r0, #0
   113b4:	mov	r1, #0
   113b8:	mov	r2, r7
   113bc:	bl	10dfc <error@plt>
   113c0:	vldr	d16, [sp, #32]
   113c4:	vadd.f64	d8, d8, d16
   113c8:	add	r4, r4, #4
   113cc:	subs	r6, r6, #1
   113d0:	beq	11440 <abort@plt+0x50c>
   113d4:	ldr	r0, [r4]
   113d8:	mov	r1, r9
   113dc:	mov	r2, r5
   113e0:	mov	r3, sl
   113e4:	bl	13dd0 <abort@plt+0x2e9c>
   113e8:	cmp	r0, #0
   113ec:	bne	11400 <abort@plt+0x4cc>
   113f0:	bl	10e74 <__errno_location@plt>
   113f4:	ldr	r0, [r0]
   113f8:	cmp	r0, #34	; 0x22
   113fc:	bne	11388 <abort@plt+0x454>
   11400:	vldr	d16, [sp, #32]
   11404:	vcmpe.f64	d16, #0.0
   11408:	vmrs	APSR_nzcv, fpscr
   1140c:	blt	11388 <abort@plt+0x454>
   11410:	ldr	r0, [sp, #28]
   11414:	ldrb	r1, [r0]
   11418:	cmp	r1, #0
   1141c:	beq	1142c <abort@plt+0x4f8>
   11420:	ldrb	r0, [r0, #1]
   11424:	cmp	r0, #0
   11428:	bne	11388 <abort@plt+0x454>
   1142c:	mov	r0, r5
   11430:	bl	114c0 <abort@plt+0x58c>
   11434:	cmp	r0, #0
   11438:	beq	11388 <abort@plt+0x454>
   1143c:	b	113c0 <abort@plt+0x48c>
   11440:	tst	r8, #1
   11444:	beq	114b8 <abort@plt+0x584>
   11448:	vorr	d0, d8, d8
   1144c:	bl	13d10 <abort@plt+0x2ddc>
   11450:	cmp	r0, #0
   11454:	moveq	r0, #0
   11458:	subeq	sp, fp, #40	; 0x28
   1145c:	vpopeq	{d8}
   11460:	addeq	sp, sp, #4
   11464:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11468:	bl	10e74 <__errno_location@plt>
   1146c:	ldr	r4, [r0]
   11470:	movw	r1, #19324	; 0x4b7c
   11474:	movt	r1, #1
   11478:	mov	r0, #0
   1147c:	mov	r2, #5
   11480:	bl	10d84 <dcgettext@plt>
   11484:	mov	r2, r0
   11488:	mov	r0, #1
   1148c:	mov	r1, r4
   11490:	bl	10dfc <error@plt>
   11494:	movw	r1, #19283	; 0x4b53
   11498:	movt	r1, #1
   1149c:	mov	r0, #0
   114a0:	mov	r2, #5
   114a4:	bl	10d84 <dcgettext@plt>
   114a8:	mov	r2, r0
   114ac:	mov	r0, #0
   114b0:	mov	r1, #0
   114b4:	bl	10dfc <error@plt>
   114b8:	mov	r0, #1
   114bc:	bl	11030 <abort@plt+0xfc>
   114c0:	vmov.f64	d16, #112	; 0x3f800000  1.0
   114c4:	sub	r3, r1, #100	; 0x64
   114c8:	mov	r2, #0
   114cc:	cmp	r3, #15
   114d0:	bhi	11524 <abort@plt+0x5f0>
   114d4:	add	r1, pc, #0
   114d8:	ldr	pc, [r1, r3, lsl #2]
   114dc:	andeq	r1, r1, ip, lsl r5
   114e0:	andeq	r1, r1, ip, lsr #10
   114e4:	andeq	r1, r1, ip, lsr #10
   114e8:	andeq	r1, r1, ip, lsr #10
   114ec:	andeq	r1, r1, r4, lsr r5
   114f0:	andeq	r1, r1, ip, lsr #10
   114f4:	andeq	r1, r1, ip, lsr #10
   114f8:	andeq	r1, r1, ip, lsr #10
   114fc:	andeq	r1, r1, ip, lsr #10
   11500:	andeq	r1, r1, ip, lsr r5
   11504:	andeq	r1, r1, ip, lsr #10
   11508:	andeq	r1, r1, ip, lsr #10
   1150c:	andeq	r1, r1, ip, lsr #10
   11510:	andeq	r1, r1, ip, lsr #10
   11514:	andeq	r1, r1, ip, lsr #10
   11518:	andeq	r1, r1, r0, asr #10
   1151c:	vldr	d16, [pc, #52]	; 11558 <abort@plt+0x624>
   11520:	b	11540 <abort@plt+0x60c>
   11524:	cmp	r1, #0
   11528:	beq	11540 <abort@plt+0x60c>
   1152c:	mov	r0, r2
   11530:	bx	lr
   11534:	vldr	d16, [pc, #36]	; 11560 <abort@plt+0x62c>
   11538:	b	11540 <abort@plt+0x60c>
   1153c:	vldr	d16, [pc, #36]	; 11568 <abort@plt+0x634>
   11540:	vldr	d17, [r0]
   11544:	vmul.f64	d16, d16, d17
   11548:	vstr	d16, [r0]
   1154c:	mov	r2, #1
   11550:	mov	r0, r2
   11554:	bx	lr
   11558:	andeq	r0, r0, r0
   1155c:	rscsmi	r1, r5, r0, lsl #16
   11560:	andeq	r0, r0, r0
   11564:	adcmi	r2, ip, r0
   11568:	andeq	r0, r0, r0
   1156c:	submi	r0, lr, r0
   11570:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11574:	add	fp, sp, #24
   11578:	vpush	{d8}
   1157c:	sub	sp, sp, #8
   11580:	mov	r4, r1
   11584:	mov	r5, r0
   11588:	add	r1, sp, #4
   1158c:	bl	10ea4 <strtod@plt>
   11590:	vmov.f64	d8, d0
   11594:	ldr	r7, [sp, #4]
   11598:	ldrb	r0, [r7]
   1159c:	cmp	r0, #0
   115a0:	beq	115d4 <abort@plt+0x6a0>
   115a4:	bl	10e74 <__errno_location@plt>
   115a8:	mov	r6, r0
   115ac:	ldr	r8, [r0]
   115b0:	mov	r1, sp
   115b4:	mov	r0, r5
   115b8:	bl	14268 <abort@plt+0x3334>
   115bc:	ldr	r0, [sp]
   115c0:	cmp	r7, r0
   115c4:	bcs	115d0 <abort@plt+0x69c>
   115c8:	str	r0, [sp, #4]
   115cc:	b	115d8 <abort@plt+0x6a4>
   115d0:	str	r8, [r6]
   115d4:	vmov.f64	d0, d8
   115d8:	cmp	r4, #0
   115dc:	ldrne	r0, [sp, #4]
   115e0:	strne	r0, [r4]
   115e4:	sub	sp, fp, #32
   115e8:	vpop	{d8}
   115ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   115f0:	movw	r1, #24896	; 0x6140
   115f4:	movt	r1, #2
   115f8:	str	r0, [r1]
   115fc:	bx	lr
   11600:	movw	r1, #24900	; 0x6144
   11604:	movt	r1, #2
   11608:	strb	r0, [r1]
   1160c:	bx	lr
   11610:	push	{r4, r5, r6, sl, fp, lr}
   11614:	add	fp, sp, #16
   11618:	sub	sp, sp, #8
   1161c:	movw	r0, #24884	; 0x6134
   11620:	movt	r0, #2
   11624:	ldr	r0, [r0]
   11628:	bl	142ec <abort@plt+0x33b8>
   1162c:	cmp	r0, #0
   11630:	beq	11658 <abort@plt+0x724>
   11634:	movw	r0, #24900	; 0x6144
   11638:	movt	r0, #2
   1163c:	ldrb	r0, [r0]
   11640:	cmp	r0, #0
   11644:	beq	11678 <abort@plt+0x744>
   11648:	bl	10e74 <__errno_location@plt>
   1164c:	ldr	r0, [r0]
   11650:	cmp	r0, #32
   11654:	bne	11678 <abort@plt+0x744>
   11658:	movw	r0, #24880	; 0x6130
   1165c:	movt	r0, #2
   11660:	ldr	r0, [r0]
   11664:	bl	142ec <abort@plt+0x33b8>
   11668:	cmp	r0, #0
   1166c:	subeq	sp, fp, #16
   11670:	popeq	{r4, r5, r6, sl, fp, pc}
   11674:	b	116e8 <abort@plt+0x7b4>
   11678:	movw	r1, #19735	; 0x4d17
   1167c:	movt	r1, #1
   11680:	mov	r0, #0
   11684:	mov	r2, #5
   11688:	bl	10d84 <dcgettext@plt>
   1168c:	mov	r4, r0
   11690:	movw	r0, #24896	; 0x6140
   11694:	movt	r0, #2
   11698:	ldr	r6, [r0]
   1169c:	bl	10e74 <__errno_location@plt>
   116a0:	ldr	r5, [r0]
   116a4:	cmp	r6, #0
   116a8:	bne	116c4 <abort@plt+0x790>
   116ac:	movw	r2, #19751	; 0x4d27
   116b0:	movt	r2, #1
   116b4:	mov	r0, #0
   116b8:	mov	r1, r5
   116bc:	mov	r3, r4
   116c0:	b	116e4 <abort@plt+0x7b0>
   116c4:	mov	r0, r6
   116c8:	bl	12f10 <abort@plt+0x1fdc>
   116cc:	mov	r3, r0
   116d0:	str	r4, [sp]
   116d4:	movw	r2, #19747	; 0x4d23
   116d8:	movt	r2, #1
   116dc:	mov	r0, #0
   116e0:	mov	r1, r5
   116e4:	bl	10dfc <error@plt>
   116e8:	movw	r0, #24796	; 0x60dc
   116ec:	movt	r0, #2
   116f0:	ldr	r0, [r0]
   116f4:	bl	10d60 <_exit@plt>
   116f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   116fc:	add	fp, sp, #24
   11700:	sub	sp, sp, #8
   11704:	movw	r6, #24888	; 0x6138
   11708:	movt	r6, #2
   1170c:	ldr	r7, [r6]
   11710:	mov	r4, #0
   11714:	str	r4, [r6]
   11718:	cmp	r0, #2
   1171c:	bne	11790 <abort@plt+0x85c>
   11720:	mov	r8, r3
   11724:	mov	r5, r2
   11728:	str	r4, [sp]
   1172c:	movw	r2, #19754	; 0x4d2a
   11730:	movt	r2, #1
   11734:	movw	r3, #19772	; 0x4d3c
   11738:	movt	r3, #1
   1173c:	mov	r0, #2
   11740:	bl	10e38 <getopt_long@plt>
   11744:	cmp	r0, #104	; 0x68
   11748:	beq	11784 <abort@plt+0x850>
   1174c:	cmp	r0, #118	; 0x76
   11750:	bne	11790 <abort@plt+0x85c>
   11754:	ldr	r3, [fp, #8]
   11758:	add	r1, fp, #16
   1175c:	str	r1, [sp, #4]
   11760:	movw	r0, #24884	; 0x6134
   11764:	movt	r0, #2
   11768:	ldr	r0, [r0]
   1176c:	str	r1, [sp]
   11770:	mov	r1, r5
   11774:	mov	r2, r8
   11778:	bl	137e8 <abort@plt+0x28b4>
   1177c:	mov	r0, #0
   11780:	bl	10e50 <exit@plt>
   11784:	ldr	r1, [fp, #12]
   11788:	mov	r0, #0
   1178c:	blx	r1
   11790:	movw	r0, #24872	; 0x6128
   11794:	movt	r0, #2
   11798:	str	r4, [r0]
   1179c:	str	r7, [r6]
   117a0:	sub	sp, fp, #24
   117a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   117a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   117ac:	add	fp, sp, #24
   117b0:	sub	sp, sp, #8
   117b4:	mov	r8, r3
   117b8:	mov	r9, r2
   117bc:	movw	r7, #24888	; 0x6138
   117c0:	movt	r7, #2
   117c4:	ldr	r4, [r7]
   117c8:	mov	r2, #1
   117cc:	str	r2, [r7]
   117d0:	mov	r6, #0
   117d4:	str	r6, [sp]
   117d8:	ldr	r3, [fp, #12]
   117dc:	movw	r5, #19114	; 0x4aaa
   117e0:	movt	r5, #1
   117e4:	movw	r2, #19754	; 0x4d2a
   117e8:	movt	r2, #1
   117ec:	cmp	r3, #0
   117f0:	movne	r2, r5
   117f4:	movw	r3, #19772	; 0x4d3c
   117f8:	movt	r3, #1
   117fc:	bl	10e38 <getopt_long@plt>
   11800:	cmn	r0, #1
   11804:	beq	11830 <abort@plt+0x8fc>
   11808:	cmp	r0, #104	; 0x68
   1180c:	beq	11824 <abort@plt+0x8f0>
   11810:	cmp	r0, #118	; 0x76
   11814:	beq	1183c <abort@plt+0x908>
   11818:	movw	r0, #24796	; 0x60dc
   1181c:	movt	r0, #2
   11820:	ldr	r6, [r0]
   11824:	ldr	r1, [fp, #16]
   11828:	mov	r0, r6
   1182c:	blx	r1
   11830:	str	r4, [r7]
   11834:	sub	sp, fp, #24
   11838:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1183c:	ldr	r3, [fp, #8]
   11840:	add	r1, fp, #20
   11844:	str	r1, [sp, #4]
   11848:	movw	r0, #24884	; 0x6134
   1184c:	movt	r0, #2
   11850:	ldr	r0, [r0]
   11854:	str	r1, [sp]
   11858:	mov	r1, r9
   1185c:	mov	r2, r8
   11860:	bl	137e8 <abort@plt+0x28b4>
   11864:	mov	r0, #0
   11868:	bl	10e50 <exit@plt>
   1186c:	push	{r4, r5, fp, lr}
   11870:	add	fp, sp, #8
   11874:	cmp	r0, #0
   11878:	beq	1190c <abort@plt+0x9d8>
   1187c:	mov	r4, r0
   11880:	mov	r1, #47	; 0x2f
   11884:	bl	10ef8 <strrchr@plt>
   11888:	cmp	r0, #0
   1188c:	mov	r5, r4
   11890:	addne	r5, r0, #1
   11894:	sub	r0, r5, r4
   11898:	cmp	r0, #7
   1189c:	blt	118f0 <abort@plt+0x9bc>
   118a0:	sub	r0, r5, #7
   118a4:	movw	r1, #19876	; 0x4da4
   118a8:	movt	r1, #1
   118ac:	mov	r2, #7
   118b0:	bl	10f28 <strncmp@plt>
   118b4:	cmp	r0, #0
   118b8:	bne	118f0 <abort@plt+0x9bc>
   118bc:	movw	r1, #19884	; 0x4dac
   118c0:	movt	r1, #1
   118c4:	mov	r0, r5
   118c8:	mov	r2, #3
   118cc:	bl	10f28 <strncmp@plt>
   118d0:	cmp	r0, #0
   118d4:	beq	118e0 <abort@plt+0x9ac>
   118d8:	mov	r4, r5
   118dc:	b	118f0 <abort@plt+0x9bc>
   118e0:	add	r4, r5, #3
   118e4:	movw	r0, #24864	; 0x6120
   118e8:	movt	r0, #2
   118ec:	str	r4, [r0]
   118f0:	movw	r0, #24868	; 0x6124
   118f4:	movt	r0, #2
   118f8:	str	r4, [r0]
   118fc:	movw	r0, #24904	; 0x6148
   11900:	movt	r0, #2
   11904:	str	r4, [r0]
   11908:	pop	{r4, r5, fp, pc}
   1190c:	movw	r0, #24880	; 0x6130
   11910:	movt	r0, #2
   11914:	ldr	r3, [r0]
   11918:	movw	r0, #19820	; 0x4d6c
   1191c:	movt	r0, #1
   11920:	mov	r1, #55	; 0x37
   11924:	mov	r2, #1
   11928:	bl	10db4 <fwrite@plt>
   1192c:	bl	10f34 <abort@plt>
   11930:	push	{r4, r5, r6, sl, fp, lr}
   11934:	add	fp, sp, #16
   11938:	mov	r4, r0
   1193c:	movw	r0, #24912	; 0x6150
   11940:	movt	r0, #2
   11944:	cmp	r4, #0
   11948:	moveq	r4, r0
   1194c:	bl	10e74 <__errno_location@plt>
   11950:	mov	r5, r0
   11954:	ldr	r6, [r0]
   11958:	mov	r0, r4
   1195c:	mov	r1, #48	; 0x30
   11960:	bl	13c28 <abort@plt+0x2cf4>
   11964:	str	r6, [r5]
   11968:	pop	{r4, r5, r6, sl, fp, pc}
   1196c:	movw	r1, #24912	; 0x6150
   11970:	movt	r1, #2
   11974:	cmp	r0, #0
   11978:	movne	r1, r0
   1197c:	ldr	r0, [r1]
   11980:	bx	lr
   11984:	movw	r2, #24912	; 0x6150
   11988:	movt	r2, #2
   1198c:	cmp	r0, #0
   11990:	movne	r2, r0
   11994:	str	r1, [r2]
   11998:	bx	lr
   1199c:	movw	r3, #24912	; 0x6150
   119a0:	movt	r3, #2
   119a4:	cmp	r0, #0
   119a8:	movne	r3, r0
   119ac:	ubfx	r0, r1, #5, #3
   119b0:	add	ip, r3, r0, lsl #2
   119b4:	ldr	r3, [ip, #8]
   119b8:	and	r1, r1, #31
   119bc:	mov	r0, #1
   119c0:	and	r0, r0, r3, lsr r1
   119c4:	and	r2, r2, #1
   119c8:	eor	r2, r0, r2
   119cc:	eor	r1, r3, r2, lsl r1
   119d0:	str	r1, [ip, #8]
   119d4:	bx	lr
   119d8:	movw	r2, #24912	; 0x6150
   119dc:	movt	r2, #2
   119e0:	cmp	r0, #0
   119e4:	movne	r2, r0
   119e8:	ldr	r0, [r2, #4]
   119ec:	str	r1, [r2, #4]
   119f0:	bx	lr
   119f4:	push	{fp, lr}
   119f8:	mov	fp, sp
   119fc:	movw	r3, #24912	; 0x6150
   11a00:	movt	r3, #2
   11a04:	cmp	r0, #0
   11a08:	movne	r3, r0
   11a0c:	mov	r0, #10
   11a10:	str	r0, [r3]
   11a14:	cmp	r1, #0
   11a18:	cmpne	r2, #0
   11a1c:	bne	11a24 <abort@plt+0xaf0>
   11a20:	bl	10f34 <abort@plt>
   11a24:	str	r1, [r3, #40]	; 0x28
   11a28:	str	r2, [r3, #44]	; 0x2c
   11a2c:	pop	{fp, pc}
   11a30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a34:	add	fp, sp, #28
   11a38:	sub	sp, sp, #20
   11a3c:	mov	r8, r3
   11a40:	mov	r9, r2
   11a44:	mov	sl, r1
   11a48:	mov	r7, r0
   11a4c:	ldr	r0, [fp, #8]
   11a50:	movw	r5, #24912	; 0x6150
   11a54:	movt	r5, #2
   11a58:	cmp	r0, #0
   11a5c:	movne	r5, r0
   11a60:	bl	10e74 <__errno_location@plt>
   11a64:	mov	r4, r0
   11a68:	ldm	r5, {r0, r1}
   11a6c:	ldr	r2, [r5, #40]	; 0x28
   11a70:	ldr	r3, [r5, #44]	; 0x2c
   11a74:	ldr	r6, [r4]
   11a78:	add	r5, r5, #8
   11a7c:	stm	sp, {r0, r1, r5}
   11a80:	str	r2, [sp, #12]
   11a84:	str	r3, [sp, #16]
   11a88:	mov	r0, r7
   11a8c:	mov	r1, sl
   11a90:	mov	r2, r9
   11a94:	mov	r3, r8
   11a98:	bl	11aa8 <abort@plt+0xb74>
   11a9c:	str	r6, [r4]
   11aa0:	sub	sp, fp, #28
   11aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11aa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11aac:	add	fp, sp, #28
   11ab0:	sub	sp, sp, #156	; 0x9c
   11ab4:	mov	r9, r3
   11ab8:	mov	r7, r1
   11abc:	mov	r6, r0
   11ac0:	str	r2, [fp, #-80]	; 0xffffffb0
   11ac4:	add	r0, r2, #1
   11ac8:	str	r0, [sp, #76]	; 0x4c
   11acc:	ldr	r0, [fp, #12]
   11ad0:	and	r1, r0, #1
   11ad4:	str	r1, [sp, #40]	; 0x28
   11ad8:	and	r1, r0, #4
   11adc:	str	r1, [sp, #36]	; 0x24
   11ae0:	ubfx	r4, r0, #1, #1
   11ae4:	bl	10dcc <__ctype_get_mb_cur_max@plt>
   11ae8:	str	r0, [sp, #44]	; 0x2c
   11aec:	ldr	r0, [fp, #24]
   11af0:	str	r0, [sp, #88]	; 0x58
   11af4:	ldr	r0, [fp, #20]
   11af8:	str	r0, [sp, #80]	; 0x50
   11afc:	ldr	r1, [fp, #8]
   11b00:	mov	r0, #0
   11b04:	str	r0, [sp, #84]	; 0x54
   11b08:	mov	r0, #0
   11b0c:	str	r0, [fp, #-84]	; 0xffffffac
   11b10:	mov	r0, #0
   11b14:	str	r0, [fp, #-72]	; 0xffffffb8
   11b18:	mov	r0, #0
   11b1c:	mov	r2, #0
   11b20:	str	r2, [fp, #-56]	; 0xffffffc8
   11b24:	mov	r2, #0
   11b28:	str	r2, [sp, #64]	; 0x40
   11b2c:	mov	r2, #1
   11b30:	str	r2, [fp, #-48]	; 0xffffffd0
   11b34:	cmp	r1, #10
   11b38:	bhi	12a64 <abort@plt+0x1b30>
   11b3c:	mov	sl, r7
   11b40:	mov	r7, r1
   11b44:	add	r1, pc, #24
   11b48:	mov	r8, #0
   11b4c:	mov	r2, #1
   11b50:	mov	r3, #0
   11b54:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11b58:	mov	lr, r9
   11b5c:	mov	r5, r6
   11b60:	ldr	pc, [r1, r7, lsl #2]
   11b64:	andeq	r1, r1, r8, lsr ip
   11b68:	andeq	r1, r1, r8, ror ip
   11b6c:	andeq	r1, r1, r8, asr #24
   11b70:	andeq	r1, r1, r0, lsr ip
   11b74:	andeq	r1, r1, ip, ror #24
   11b78:	andeq	r1, r1, ip, asr #25
   11b7c:	andeq	r1, r1, r8, asr ip
   11b80:	andeq	r1, r1, r8, lsr #26
   11b84:	muleq	r1, r0, fp
   11b88:	muleq	r1, r0, fp
   11b8c:			; <UNDEFINED> instruction: 0x00011bbc
   11b90:	movw	r0, #19968	; 0x4e00
   11b94:	movt	r0, #1
   11b98:	mov	r1, r7
   11b9c:	bl	1306c <abort@plt+0x2138>
   11ba0:	str	r0, [sp, #80]	; 0x50
   11ba4:	movw	r0, #19970	; 0x4e02
   11ba8:	movt	r0, #1
   11bac:	mov	r1, r7
   11bb0:	bl	1306c <abort@plt+0x2138>
   11bb4:	mov	r5, r6
   11bb8:	str	r0, [sp, #88]	; 0x58
   11bbc:	mov	r8, #0
   11bc0:	tst	r4, #1
   11bc4:	str	r7, [fp, #-64]	; 0xffffffc0
   11bc8:	bne	11c00 <abort@plt+0xccc>
   11bcc:	ldr	r0, [sp, #80]	; 0x50
   11bd0:	ldrb	r0, [r0]
   11bd4:	cmp	r0, #0
   11bd8:	beq	11c00 <abort@plt+0xccc>
   11bdc:	ldr	r1, [sp, #80]	; 0x50
   11be0:	add	r1, r1, #1
   11be4:	mov	r8, #0
   11be8:	cmp	r8, sl
   11bec:	strbcc	r0, [r5, r8]
   11bf0:	ldrb	r0, [r1, r8]
   11bf4:	add	r8, r8, #1
   11bf8:	cmp	r0, #0
   11bfc:	bne	11be8 <abort@plt+0xcb4>
   11c00:	ldr	r7, [sp, #88]	; 0x58
   11c04:	mov	r0, r7
   11c08:	bl	10e68 <strlen@plt>
   11c0c:	mov	r5, r6
   11c10:	str	r0, [fp, #-72]	; 0xffffffb8
   11c14:	str	r7, [fp, #-84]	; 0xffffffac
   11c18:	mov	r2, #1
   11c1c:	mov	r3, r4
   11c20:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11c24:	mov	lr, r9
   11c28:	ldr	r7, [fp, #-64]	; 0xffffffc0
   11c2c:	b	11d28 <abort@plt+0xdf4>
   11c30:	mov	r0, #1
   11c34:	b	11c78 <abort@plt+0xd44>
   11c38:	mov	r7, #0
   11c3c:	mov	r8, #0
   11c40:	mov	r2, r0
   11c44:	b	11d24 <abort@plt+0xdf0>
   11c48:	tst	r4, #1
   11c4c:	bne	11c78 <abort@plt+0xd44>
   11c50:	mov	r2, r0
   11c54:	b	11ca0 <abort@plt+0xd6c>
   11c58:	mov	r0, #1
   11c5c:	str	r0, [fp, #-72]	; 0xffffffb8
   11c60:	mov	r8, #0
   11c64:	mov	r7, #5
   11c68:	b	11ce4 <abort@plt+0xdb0>
   11c6c:	mov	r2, #1
   11c70:	tst	r4, #1
   11c74:	beq	11ca0 <abort@plt+0xd6c>
   11c78:	mov	r1, #1
   11c7c:	str	r1, [fp, #-72]	; 0xffffffb8
   11c80:	mov	r8, #0
   11c84:	mov	r7, #2
   11c88:	movw	r1, #19970	; 0x4e02
   11c8c:	movt	r1, #1
   11c90:	str	r1, [fp, #-84]	; 0xffffffac
   11c94:	mov	r2, r0
   11c98:	mov	r3, #1
   11c9c:	b	11d28 <abort@plt+0xdf4>
   11ca0:	mov	r8, #1
   11ca4:	mov	r7, #2
   11ca8:	cmp	sl, #0
   11cac:	movne	r0, #39	; 0x27
   11cb0:	strbne	r0, [r5]
   11cb4:	movw	r0, #19970	; 0x4e02
   11cb8:	movt	r0, #1
   11cbc:	str	r0, [fp, #-84]	; 0xffffffac
   11cc0:	mov	r0, #1
   11cc4:	str	r0, [fp, #-72]	; 0xffffffb8
   11cc8:	b	11d24 <abort@plt+0xdf0>
   11ccc:	mov	r7, #5
   11cd0:	tst	r4, #1
   11cd4:	beq	11cfc <abort@plt+0xdc8>
   11cd8:	mov	r0, #1
   11cdc:	str	r0, [fp, #-72]	; 0xffffffb8
   11ce0:	mov	r8, #0
   11ce4:	movw	r0, #19966	; 0x4dfe
   11ce8:	movt	r0, #1
   11cec:	str	r0, [fp, #-84]	; 0xffffffac
   11cf0:	mov	r2, #1
   11cf4:	mov	r3, #1
   11cf8:	b	11d28 <abort@plt+0xdf4>
   11cfc:	cmp	sl, #0
   11d00:	movne	r0, #34	; 0x22
   11d04:	strbne	r0, [r5]
   11d08:	mov	r8, #1
   11d0c:	movw	r0, #19966	; 0x4dfe
   11d10:	movt	r0, #1
   11d14:	str	r0, [fp, #-84]	; 0xffffffac
   11d18:	mov	r0, #1
   11d1c:	str	r0, [fp, #-72]	; 0xffffffb8
   11d20:	mov	r2, #1
   11d24:	mov	r3, #0
   11d28:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11d2c:	cmp	r0, #0
   11d30:	movwne	r0, #1
   11d34:	and	r1, r0, r3
   11d38:	and	r1, r2, r1
   11d3c:	str	r1, [sp, #56]	; 0x38
   11d40:	sub	r1, r7, #2
   11d44:	clz	r1, r1
   11d48:	lsr	r1, r1, #5
   11d4c:	and	r1, r1, r3
   11d50:	str	r1, [sp, #68]	; 0x44
   11d54:	str	r7, [fp, #-64]	; 0xffffffc0
   11d58:	subs	r1, r7, #2
   11d5c:	movwne	r1, #1
   11d60:	eor	r4, r3, #1
   11d64:	str	r4, [fp, #-88]	; 0xffffffa8
   11d68:	orr	r4, r1, r4
   11d6c:	str	r4, [sp, #72]	; 0x48
   11d70:	and	r1, r1, r2
   11d74:	and	r0, r0, r1
   11d78:	str	r0, [fp, #-60]	; 0xffffffc4
   11d7c:	str	r3, [fp, #-76]	; 0xffffffb4
   11d80:	orr	r0, r1, r3
   11d84:	eor	r0, r0, #1
   11d88:	ldr	r1, [fp, #16]
   11d8c:	clz	r1, r1
   11d90:	lsr	r1, r1, #5
   11d94:	orr	r0, r1, r0
   11d98:	str	r0, [fp, #-68]	; 0xffffffbc
   11d9c:	str	r2, [sp, #92]	; 0x5c
   11da0:	eor	r0, r2, #1
   11da4:	str	r0, [sp, #60]	; 0x3c
   11da8:	mov	r7, #0
   11dac:	cmn	lr, #1
   11db0:	beq	11dc0 <abort@plt+0xe8c>
   11db4:	cmp	r7, lr
   11db8:	bne	11dcc <abort@plt+0xe98>
   11dbc:	b	128d8 <abort@plt+0x19a4>
   11dc0:	ldrb	r0, [ip, r7]
   11dc4:	cmp	r0, #0
   11dc8:	beq	128d8 <abort@plt+0x19a4>
   11dcc:	mov	r9, #0
   11dd0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11dd4:	cmp	r0, #0
   11dd8:	beq	11e0c <abort@plt+0xed8>
   11ddc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11de0:	add	r4, r7, r0
   11de4:	cmp	r0, #2
   11de8:	bcc	11e04 <abort@plt+0xed0>
   11dec:	cmn	lr, #1
   11df0:	bne	11e04 <abort@plt+0xed0>
   11df4:	mov	r0, ip
   11df8:	bl	10e68 <strlen@plt>
   11dfc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11e00:	mov	lr, r0
   11e04:	cmp	r4, lr
   11e08:	bls	11e18 <abort@plt+0xee4>
   11e0c:	mov	r0, #0
   11e10:	str	r0, [fp, #-52]	; 0xffffffcc
   11e14:	b	11e5c <abort@plt+0xf28>
   11e18:	mov	r4, lr
   11e1c:	add	r0, ip, r7
   11e20:	ldr	r1, [fp, #-84]	; 0xffffffac
   11e24:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11e28:	bl	10e5c <bcmp@plt>
   11e2c:	cmp	r0, #0
   11e30:	mov	r1, r0
   11e34:	movwne	r1, #1
   11e38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11e3c:	orr	r1, r1, r2
   11e40:	tst	r1, #1
   11e44:	beq	129ac <abort@plt+0x1a78>
   11e48:	clz	r0, r0
   11e4c:	lsr	r0, r0, #5
   11e50:	str	r0, [fp, #-52]	; 0xffffffcc
   11e54:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11e58:	mov	lr, r4
   11e5c:	ldrb	r4, [ip, r7]
   11e60:	cmp	r4, #126	; 0x7e
   11e64:	bhi	12394 <abort@plt+0x1460>
   11e68:	mov	r6, #1
   11e6c:	mov	r2, #110	; 0x6e
   11e70:	mov	r0, #97	; 0x61
   11e74:	add	r3, pc, #4
   11e78:	mov	r1, #0
   11e7c:	ldr	pc, [r3, r4, lsl #2]
   11e80:	strdeq	r2, [r1], -r4
   11e84:	muleq	r1, r4, r3
   11e88:	muleq	r1, r4, r3
   11e8c:	muleq	r1, r4, r3
   11e90:	muleq	r1, r4, r3
   11e94:	muleq	r1, r4, r3
   11e98:	muleq	r1, r4, r3
   11e9c:	andeq	r2, r1, r8, ror #8
   11ea0:	ldrdeq	r2, [r1], -r4
   11ea4:	andeq	r2, r1, ip, asr #3
   11ea8:	andeq	r2, r1, r0, ror #3
   11eac:	strdeq	r2, [r1], -ip
   11eb0:	andeq	r2, r1, r4, asr #3
   11eb4:	ldrdeq	r2, [r1], -ip
   11eb8:	muleq	r1, r4, r3
   11ebc:	muleq	r1, r4, r3
   11ec0:	muleq	r1, r4, r3
   11ec4:	muleq	r1, r4, r3
   11ec8:	muleq	r1, r4, r3
   11ecc:	muleq	r1, r4, r3
   11ed0:	muleq	r1, r4, r3
   11ed4:	muleq	r1, r4, r3
   11ed8:	muleq	r1, r4, r3
   11edc:	muleq	r1, r4, r3
   11ee0:	muleq	r1, r4, r3
   11ee4:	muleq	r1, r4, r3
   11ee8:	muleq	r1, r4, r3
   11eec:	muleq	r1, r4, r3
   11ef0:	muleq	r1, r4, r3
   11ef4:	muleq	r1, r4, r3
   11ef8:	muleq	r1, r4, r3
   11efc:	muleq	r1, r4, r3
   11f00:	andeq	r2, r1, r8, ror r1
   11f04:	andeq	r2, r1, ip, ror r1
   11f08:	andeq	r2, r1, ip, ror r1
   11f0c:	andeq	r2, r1, r4, ror #2
   11f10:	andeq	r2, r1, ip, ror r1
   11f14:	andeq	r2, r1, ip, ror r0
   11f18:	andeq	r2, r1, ip, ror r1
   11f1c:	andeq	r2, r1, r4, lsl #6
   11f20:	andeq	r2, r1, ip, ror r1
   11f24:	andeq	r2, r1, ip, ror r1
   11f28:	andeq	r2, r1, ip, ror r1
   11f2c:	andeq	r2, r1, ip, ror r0
   11f30:	andeq	r2, r1, ip, ror r0
   11f34:	andeq	r2, r1, ip, ror r0
   11f38:	andeq	r2, r1, ip, ror r0
   11f3c:	andeq	r2, r1, ip, ror r0
   11f40:	andeq	r2, r1, ip, ror r0
   11f44:	andeq	r2, r1, ip, ror r0
   11f48:	andeq	r2, r1, ip, ror r0
   11f4c:	andeq	r2, r1, ip, ror r0
   11f50:	andeq	r2, r1, ip, ror r0
   11f54:	andeq	r2, r1, ip, ror r0
   11f58:	andeq	r2, r1, ip, ror r0
   11f5c:	andeq	r2, r1, ip, ror r0
   11f60:	andeq	r2, r1, ip, ror r0
   11f64:	andeq	r2, r1, ip, ror r0
   11f68:	andeq	r2, r1, ip, ror r0
   11f6c:	andeq	r2, r1, ip, ror r1
   11f70:	andeq	r2, r1, ip, ror r1
   11f74:	andeq	r2, r1, ip, ror r1
   11f78:	andeq	r2, r1, ip, ror r1
   11f7c:	andeq	r2, r1, ip, asr #5
   11f80:	muleq	r1, r4, r3
   11f84:	andeq	r2, r1, ip, ror r0
   11f88:	andeq	r2, r1, ip, ror r0
   11f8c:	andeq	r2, r1, ip, ror r0
   11f90:	andeq	r2, r1, ip, ror r0
   11f94:	andeq	r2, r1, ip, ror r0
   11f98:	andeq	r2, r1, ip, ror r0
   11f9c:	andeq	r2, r1, ip, ror r0
   11fa0:	andeq	r2, r1, ip, ror r0
   11fa4:	andeq	r2, r1, ip, ror r0
   11fa8:	andeq	r2, r1, ip, ror r0
   11fac:	andeq	r2, r1, ip, ror r0
   11fb0:	andeq	r2, r1, ip, ror r0
   11fb4:	andeq	r2, r1, ip, ror r0
   11fb8:	andeq	r2, r1, ip, ror r0
   11fbc:	andeq	r2, r1, ip, ror r0
   11fc0:	andeq	r2, r1, ip, ror r0
   11fc4:	andeq	r2, r1, ip, ror r0
   11fc8:	andeq	r2, r1, ip, ror r0
   11fcc:	andeq	r2, r1, ip, ror r0
   11fd0:	andeq	r2, r1, ip, ror r0
   11fd4:	andeq	r2, r1, ip, ror r0
   11fd8:	andeq	r2, r1, ip, ror r0
   11fdc:	andeq	r2, r1, ip, ror r0
   11fe0:	andeq	r2, r1, ip, ror r0
   11fe4:	andeq	r2, r1, ip, ror r0
   11fe8:	andeq	r2, r1, ip, ror r0
   11fec:	andeq	r2, r1, ip, ror r1
   11ff0:	andeq	r2, r1, r4, lsr #3
   11ff4:	andeq	r2, r1, ip, ror r0
   11ff8:	andeq	r2, r1, ip, ror r1
   11ffc:	andeq	r2, r1, ip, ror r0
   12000:	andeq	r2, r1, ip, ror r1
   12004:	andeq	r2, r1, ip, ror r0
   12008:	andeq	r2, r1, ip, ror r0
   1200c:	andeq	r2, r1, ip, ror r0
   12010:	andeq	r2, r1, ip, ror r0
   12014:	andeq	r2, r1, ip, ror r0
   12018:	andeq	r2, r1, ip, ror r0
   1201c:	andeq	r2, r1, ip, ror r0
   12020:	andeq	r2, r1, ip, ror r0
   12024:	andeq	r2, r1, ip, ror r0
   12028:	andeq	r2, r1, ip, ror r0
   1202c:	andeq	r2, r1, ip, ror r0
   12030:	andeq	r2, r1, ip, ror r0
   12034:	andeq	r2, r1, ip, ror r0
   12038:	andeq	r2, r1, ip, ror r0
   1203c:	andeq	r2, r1, ip, ror r0
   12040:	andeq	r2, r1, ip, ror r0
   12044:	andeq	r2, r1, ip, ror r0
   12048:	andeq	r2, r1, ip, ror r0
   1204c:	andeq	r2, r1, ip, ror r0
   12050:	andeq	r2, r1, ip, ror r0
   12054:	andeq	r2, r1, ip, ror r0
   12058:	andeq	r2, r1, ip, ror r0
   1205c:	andeq	r2, r1, ip, ror r0
   12060:	andeq	r2, r1, ip, ror r0
   12064:	andeq	r2, r1, ip, ror r0
   12068:	andeq	r2, r1, ip, ror r0
   1206c:	andeq	r2, r1, r8, lsr r1
   12070:	andeq	r2, r1, ip, ror r1
   12074:	andeq	r2, r1, r8, lsr r1
   12078:	andeq	r2, r1, r4, ror #2
   1207c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12080:	tst	r0, #1
   12084:	bne	120b0 <abort@plt+0x117c>
   12088:	ubfx	r0, r4, #5, #3
   1208c:	ldr	r1, [fp, #16]
   12090:	ldr	r0, [r1, r0, lsl #2]
   12094:	and	r1, r4, #31
   12098:	mov	r2, #1
   1209c:	tst	r0, r2, lsl r1
   120a0:	beq	120b0 <abort@plt+0x117c>
   120a4:	mov	r0, r4
   120a8:	mov	r1, r6
   120ac:	b	120c4 <abort@plt+0x1190>
   120b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   120b4:	cmp	r0, #0
   120b8:	mov	r0, r4
   120bc:	mov	r1, r6
   120c0:	beq	123fc <abort@plt+0x14c8>
   120c4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   120c8:	tst	r2, #1
   120cc:	bne	129c0 <abort@plt+0x1a8c>
   120d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   120d4:	subs	r2, r2, #2
   120d8:	movwne	r2, #1
   120dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   120e0:	orr	r2, r2, r3
   120e4:	tst	r2, #1
   120e8:	bne	12124 <abort@plt+0x11f0>
   120ec:	cmp	r8, sl
   120f0:	movcc	r2, #39	; 0x27
   120f4:	strbcc	r2, [r5, r8]
   120f8:	add	r2, r8, #1
   120fc:	cmp	r2, sl
   12100:	movcc	r3, #36	; 0x24
   12104:	strbcc	r3, [r5, r2]
   12108:	add	r2, r8, #2
   1210c:	cmp	r2, sl
   12110:	movcc	r3, #39	; 0x27
   12114:	strbcc	r3, [r5, r2]
   12118:	add	r8, r8, #3
   1211c:	mov	r2, #1
   12120:	str	r2, [fp, #-56]	; 0xffffffc8
   12124:	cmp	r8, sl
   12128:	movcc	r2, #92	; 0x5c
   1212c:	strbcc	r2, [r5, r8]
   12130:	add	r8, r8, #1
   12134:	b	12440 <abort@plt+0x150c>
   12138:	cmp	lr, #1
   1213c:	beq	12164 <abort@plt+0x1230>
   12140:	mov	r6, #0
   12144:	cmn	lr, #1
   12148:	bne	12170 <abort@plt+0x123c>
   1214c:	ldrb	r0, [ip, #1]
   12150:	cmp	r0, #0
   12154:	beq	12164 <abort@plt+0x1230>
   12158:	mvn	lr, #0
   1215c:	mov	r9, #0
   12160:	b	1207c <abort@plt+0x1148>
   12164:	mov	r6, #0
   12168:	cmp	r7, #0
   1216c:	beq	12178 <abort@plt+0x1244>
   12170:	mov	r9, #0
   12174:	b	1207c <abort@plt+0x1148>
   12178:	mov	r1, #1
   1217c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12180:	cmp	r0, #2
   12184:	bne	1219c <abort@plt+0x1268>
   12188:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1218c:	tst	r0, #1
   12190:	mov	r6, r1
   12194:	beq	1207c <abort@plt+0x1148>
   12198:	b	129c0 <abort@plt+0x1a8c>
   1219c:	mov	r6, r1
   121a0:	b	1207c <abort@plt+0x1148>
   121a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   121a8:	cmp	r0, #2
   121ac:	bne	123e0 <abort@plt+0x14ac>
   121b0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   121b4:	tst	r0, #1
   121b8:	bne	129c0 <abort@plt+0x1a8c>
   121bc:	mov	r9, #0
   121c0:	b	123f4 <abort@plt+0x14c0>
   121c4:	mov	r0, #102	; 0x66
   121c8:	b	12468 <abort@plt+0x1534>
   121cc:	mov	r2, #116	; 0x74
   121d0:	b	121e0 <abort@plt+0x12ac>
   121d4:	mov	r0, #98	; 0x62
   121d8:	b	12468 <abort@plt+0x1534>
   121dc:	mov	r2, #114	; 0x72
   121e0:	ldr	r0, [sp, #72]	; 0x48
   121e4:	tst	r0, #1
   121e8:	mov	r0, r2
   121ec:	bne	12468 <abort@plt+0x1534>
   121f0:	b	129c0 <abort@plt+0x1a8c>
   121f4:	ldr	r0, [sp, #92]	; 0x5c
   121f8:	tst	r0, #1
   121fc:	beq	12484 <abort@plt+0x1550>
   12200:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12204:	tst	r0, #1
   12208:	bne	129c0 <abort@plt+0x1a8c>
   1220c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12210:	subs	r0, r0, #2
   12214:	movwne	r0, #1
   12218:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1221c:	orr	r0, r0, r1
   12220:	tst	r0, #1
   12224:	bne	12260 <abort@plt+0x132c>
   12228:	cmp	r8, sl
   1222c:	movcc	r0, #39	; 0x27
   12230:	strbcc	r0, [r5, r8]
   12234:	add	r0, r8, #1
   12238:	cmp	r0, sl
   1223c:	movcc	r1, #36	; 0x24
   12240:	strbcc	r1, [r5, r0]
   12244:	add	r0, r8, #2
   12248:	cmp	r0, sl
   1224c:	movcc	r1, #39	; 0x27
   12250:	strbcc	r1, [r5, r0]
   12254:	add	r8, r8, #3
   12258:	mov	r0, #1
   1225c:	str	r0, [fp, #-56]	; 0xffffffc8
   12260:	cmp	r8, sl
   12264:	movcc	r0, #92	; 0x5c
   12268:	strbcc	r0, [r5, r8]
   1226c:	add	r0, r8, #1
   12270:	mov	r6, #0
   12274:	mov	r9, #1
   12278:	mov	r4, #48	; 0x30
   1227c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12280:	cmp	r1, #2
   12284:	beq	12648 <abort@plt+0x1714>
   12288:	add	r1, r7, #1
   1228c:	cmp	r1, lr
   12290:	bcs	12648 <abort@plt+0x1714>
   12294:	ldrb	r1, [ip, r1]
   12298:	sub	r1, r1, #48	; 0x30
   1229c:	uxtb	r1, r1
   122a0:	cmp	r1, #9
   122a4:	bhi	12648 <abort@plt+0x1714>
   122a8:	cmp	r0, sl
   122ac:	movcc	r1, #48	; 0x30
   122b0:	strbcc	r1, [r5, r0]
   122b4:	add	r0, r8, #2
   122b8:	cmp	r0, sl
   122bc:	movcc	r1, #48	; 0x30
   122c0:	strbcc	r1, [r5, r0]
   122c4:	add	r8, r8, #3
   122c8:	b	1207c <abort@plt+0x1148>
   122cc:	mov	r9, #0
   122d0:	mov	r4, #63	; 0x3f
   122d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   122d8:	cmp	r0, #5
   122dc:	beq	12650 <abort@plt+0x171c>
   122e0:	cmp	r0, #2
   122e4:	bne	126f8 <abort@plt+0x17c4>
   122e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   122ec:	tst	r0, #1
   122f0:	mov	r6, #0
   122f4:	beq	1207c <abort@plt+0x1148>
   122f8:	b	129c0 <abort@plt+0x1a8c>
   122fc:	mov	r0, #118	; 0x76
   12300:	b	12468 <abort@plt+0x1534>
   12304:	mov	r4, #39	; 0x27
   12308:	mov	r0, #1
   1230c:	str	r0, [sp, #64]	; 0x40
   12310:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12314:	cmp	r0, #2
   12318:	bne	124a0 <abort@plt+0x156c>
   1231c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12320:	tst	r0, #1
   12324:	bne	129c0 <abort@plt+0x1a8c>
   12328:	ldr	r2, [sp, #84]	; 0x54
   1232c:	cmp	r2, #0
   12330:	mov	r0, r2
   12334:	movwne	r0, #1
   12338:	clz	r1, sl
   1233c:	lsr	r1, r1, #5
   12340:	orrs	r0, r0, r1
   12344:	moveq	r2, sl
   12348:	str	r2, [sp, #84]	; 0x54
   1234c:	moveq	sl, r0
   12350:	cmp	r8, sl
   12354:	movcc	r0, #39	; 0x27
   12358:	strbcc	r0, [r5, r8]
   1235c:	add	r0, r8, #1
   12360:	cmp	r0, sl
   12364:	movcc	r1, #92	; 0x5c
   12368:	strbcc	r1, [r5, r0]
   1236c:	add	r0, r8, #2
   12370:	cmp	r0, sl
   12374:	movcc	r1, #39	; 0x27
   12378:	strbcc	r1, [r5, r0]
   1237c:	add	r8, r8, #3
   12380:	mov	r0, #0
   12384:	str	r0, [fp, #-56]	; 0xffffffc8
   12388:	mov	r9, #0
   1238c:	mov	r6, #1
   12390:	b	1207c <abort@plt+0x1148>
   12394:	ldr	r0, [sp, #44]	; 0x2c
   12398:	cmp	r0, #1
   1239c:	bne	124a8 <abort@plt+0x1574>
   123a0:	str	lr, [sp, #32]
   123a4:	bl	10e44 <__ctype_b_loc@plt>
   123a8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   123ac:	ldr	r0, [r0]
   123b0:	add	r0, r0, r4, lsl #1
   123b4:	ldrb	r0, [r0, #1]
   123b8:	ubfx	r6, r0, #6, #1
   123bc:	mov	r2, #1
   123c0:	ldr	r0, [sp, #60]	; 0x3c
   123c4:	orr	r1, r6, r0
   123c8:	cmp	r2, #1
   123cc:	bhi	12700 <abort@plt+0x17cc>
   123d0:	tst	r1, #1
   123d4:	beq	12700 <abort@plt+0x17cc>
   123d8:	ldr	lr, [sp, #32]
   123dc:	b	1207c <abort@plt+0x1148>
   123e0:	mov	r9, #0
   123e4:	mov	r0, #92	; 0x5c
   123e8:	ldr	r1, [sp, #56]	; 0x38
   123ec:	cmp	r1, #0
   123f0:	beq	12468 <abort@plt+0x1534>
   123f4:	mov	r4, #92	; 0x5c
   123f8:	mov	r6, #0
   123fc:	cmp	r9, #0
   12400:	bne	12438 <abort@plt+0x1504>
   12404:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12408:	tst	r0, #1
   1240c:	beq	12438 <abort@plt+0x1504>
   12410:	cmp	r8, sl
   12414:	movcc	r0, #39	; 0x27
   12418:	strbcc	r0, [r5, r8]
   1241c:	add	r0, r8, #1
   12420:	cmp	r0, sl
   12424:	movcc	r1, #39	; 0x27
   12428:	strbcc	r1, [r5, r0]
   1242c:	add	r8, r8, #2
   12430:	mov	r0, #0
   12434:	str	r0, [fp, #-56]	; 0xffffffc8
   12438:	mov	r1, r6
   1243c:	mov	r0, r4
   12440:	cmp	r8, sl
   12444:	strbcc	r0, [r5, r8]
   12448:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1244c:	and	r0, r0, r1
   12450:	str	r0, [fp, #-48]	; 0xffffffd0
   12454:	add	r8, r8, #1
   12458:	add	r7, r7, #1
   1245c:	cmn	lr, #1
   12460:	bne	11db4 <abort@plt+0xe80>
   12464:	b	11dc0 <abort@plt+0xe8c>
   12468:	mov	r9, #0
   1246c:	ldr	r1, [sp, #92]	; 0x5c
   12470:	tst	r1, #1
   12474:	mov	r6, #0
   12478:	mov	r1, #0
   1247c:	beq	1207c <abort@plt+0x1148>
   12480:	b	120c4 <abort@plt+0x1190>
   12484:	mov	r4, #0
   12488:	ldr	r0, [sp, #40]	; 0x28
   1248c:	cmp	r0, #0
   12490:	mov	r9, #0
   12494:	mov	r6, #0
   12498:	beq	1207c <abort@plt+0x1148>
   1249c:	b	12458 <abort@plt+0x1524>
   124a0:	mov	r6, #1
   124a4:	b	1207c <abort@plt+0x1148>
   124a8:	mov	r0, #0
   124ac:	str	r0, [fp, #-36]	; 0xffffffdc
   124b0:	str	r0, [fp, #-40]	; 0xffffffd8
   124b4:	cmn	lr, #1
   124b8:	bne	124cc <abort@plt+0x1598>
   124bc:	mov	r0, ip
   124c0:	bl	10e68 <strlen@plt>
   124c4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   124c8:	mov	lr, r0
   124cc:	ldr	r0, [sp, #76]	; 0x4c
   124d0:	add	r0, r0, r7
   124d4:	str	r0, [sp, #24]
   124d8:	mov	r6, #1
   124dc:	mov	r2, #0
   124e0:	sub	r0, fp, #40	; 0x28
   124e4:	mov	r3, r0
   124e8:	str	r5, [sp, #28]
   124ec:	str	lr, [sp, #32]
   124f0:	b	12534 <abort@plt+0x1600>
   124f4:	ldr	r5, [sp, #52]	; 0x34
   124f8:	add	r5, r0, r5
   124fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12500:	bl	10da8 <iswprint@plt>
   12504:	cmp	r0, #0
   12508:	movwne	r0, #1
   1250c:	and	r6, r6, r0
   12510:	sub	r0, fp, #40	; 0x28
   12514:	bl	10d78 <mbsinit@plt>
   12518:	sub	r3, fp, #40	; 0x28
   1251c:	mov	r2, r5
   12520:	ldr	lr, [sp, #32]
   12524:	cmp	r0, #0
   12528:	ldr	r5, [sp, #28]
   1252c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12530:	bne	123c0 <abort@plt+0x148c>
   12534:	str	r2, [sp, #52]	; 0x34
   12538:	add	r0, r2, r7
   1253c:	add	r1, ip, r0
   12540:	str	r0, [sp, #48]	; 0x30
   12544:	sub	r2, lr, r0
   12548:	sub	r0, fp, #44	; 0x2c
   1254c:	bl	14698 <abort@plt+0x3764>
   12550:	cmp	r0, #0
   12554:	beq	128cc <abort@plt+0x1998>
   12558:	cmn	r0, #1
   1255c:	beq	12888 <abort@plt+0x1954>
   12560:	cmn	r0, #2
   12564:	ldr	lr, [sp, #32]
   12568:	beq	12890 <abort@plt+0x195c>
   1256c:	cmp	r0, #2
   12570:	mov	r1, #0
   12574:	movwcc	r1, #1
   12578:	ldr	r2, [sp, #68]	; 0x44
   1257c:	eor	r2, r2, #1
   12580:	orrs	r1, r2, r1
   12584:	bne	124f4 <abort@plt+0x15c0>
   12588:	ldr	r1, [sp, #52]	; 0x34
   1258c:	ldr	r2, [sp, #24]
   12590:	add	r1, r2, r1
   12594:	sub	r2, r0, #1
   12598:	b	125a8 <abort@plt+0x1674>
   1259c:	add	r1, r1, #1
   125a0:	subs	r2, r2, #1
   125a4:	beq	124f4 <abort@plt+0x15c0>
   125a8:	ldrb	r3, [r1]
   125ac:	sub	r3, r3, #91	; 0x5b
   125b0:	cmp	r3, #33	; 0x21
   125b4:	bhi	1259c <abort@plt+0x1668>
   125b8:	add	r5, pc, #0
   125bc:	ldr	pc, [r5, r3, lsl #2]
   125c0:			; <UNDEFINED> instruction: 0x000129b8
   125c4:			; <UNDEFINED> instruction: 0x000129b8
   125c8:	muleq	r1, ip, r5
   125cc:			; <UNDEFINED> instruction: 0x000129b8
   125d0:	muleq	r1, ip, r5
   125d4:			; <UNDEFINED> instruction: 0x000129b8
   125d8:	muleq	r1, ip, r5
   125dc:	muleq	r1, ip, r5
   125e0:	muleq	r1, ip, r5
   125e4:	muleq	r1, ip, r5
   125e8:	muleq	r1, ip, r5
   125ec:	muleq	r1, ip, r5
   125f0:	muleq	r1, ip, r5
   125f4:	muleq	r1, ip, r5
   125f8:	muleq	r1, ip, r5
   125fc:	muleq	r1, ip, r5
   12600:	muleq	r1, ip, r5
   12604:	muleq	r1, ip, r5
   12608:	muleq	r1, ip, r5
   1260c:	muleq	r1, ip, r5
   12610:	muleq	r1, ip, r5
   12614:	muleq	r1, ip, r5
   12618:	muleq	r1, ip, r5
   1261c:	muleq	r1, ip, r5
   12620:	muleq	r1, ip, r5
   12624:	muleq	r1, ip, r5
   12628:	muleq	r1, ip, r5
   1262c:	muleq	r1, ip, r5
   12630:	muleq	r1, ip, r5
   12634:	muleq	r1, ip, r5
   12638:	muleq	r1, ip, r5
   1263c:	muleq	r1, ip, r5
   12640:	muleq	r1, ip, r5
   12644:			; <UNDEFINED> instruction: 0x000129b8
   12648:	mov	r8, r0
   1264c:	b	1207c <abort@plt+0x1148>
   12650:	ldr	r0, [sp, #36]	; 0x24
   12654:	cmp	r0, #0
   12658:	beq	126f8 <abort@plt+0x17c4>
   1265c:	add	r0, r7, #2
   12660:	cmp	r0, lr
   12664:	bcs	126f8 <abort@plt+0x17c4>
   12668:	add	r1, r7, ip
   1266c:	ldrb	r1, [r1, #1]
   12670:	cmp	r1, #63	; 0x3f
   12674:	bne	126f8 <abort@plt+0x17c4>
   12678:	ldrb	r1, [ip, r0]
   1267c:	sub	r2, r1, #33	; 0x21
   12680:	cmp	r2, #29
   12684:	bhi	126f8 <abort@plt+0x17c4>
   12688:	mov	r3, #1
   1268c:	movw	r6, #20929	; 0x51c1
   12690:	movt	r6, #14336	; 0x3800
   12694:	tst	r6, r3, lsl r2
   12698:	beq	126f8 <abort@plt+0x17c4>
   1269c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   126a0:	tst	r2, #1
   126a4:	bne	129c0 <abort@plt+0x1a8c>
   126a8:	cmp	r8, sl
   126ac:	movcc	r2, #63	; 0x3f
   126b0:	strbcc	r2, [r5, r8]
   126b4:	add	r2, r8, #1
   126b8:	cmp	r2, sl
   126bc:	movcc	r3, #34	; 0x22
   126c0:	strbcc	r3, [r5, r2]
   126c4:	add	r2, r8, #2
   126c8:	cmp	r2, sl
   126cc:	movcc	r3, #34	; 0x22
   126d0:	strbcc	r3, [r5, r2]
   126d4:	add	r2, r8, #3
   126d8:	cmp	r2, sl
   126dc:	movcc	r3, #63	; 0x3f
   126e0:	strbcc	r3, [r5, r2]
   126e4:	add	r8, r8, #4
   126e8:	mov	r7, r0
   126ec:	mov	r4, r1
   126f0:	mov	r6, #0
   126f4:	b	1207c <abort@plt+0x1148>
   126f8:	mov	r6, #0
   126fc:	b	1207c <abort@plt+0x1148>
   12700:	add	r0, r2, r7
   12704:	str	r0, [sp, #52]	; 0x34
   12708:	mov	r2, #0
   1270c:	ldr	lr, [sp, #32]
   12710:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12714:	str	r1, [sp, #48]	; 0x30
   12718:	tst	r1, #1
   1271c:	bne	127f8 <abort@plt+0x18c4>
   12720:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12724:	tst	r1, #1
   12728:	bne	129c0 <abort@plt+0x1a8c>
   1272c:	mov	r3, r0
   12730:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12734:	subs	r1, r0, #2
   12738:	movwne	r1, #1
   1273c:	orr	r1, r1, r3
   12740:	tst	r1, #1
   12744:	bne	1277c <abort@plt+0x1848>
   12748:	cmp	r8, sl
   1274c:	movcc	r0, #39	; 0x27
   12750:	strbcc	r0, [r5, r8]
   12754:	add	r2, r8, #1
   12758:	cmp	r2, sl
   1275c:	movcc	r0, #36	; 0x24
   12760:	strbcc	r0, [r5, r2]
   12764:	add	r2, r8, #2
   12768:	cmp	r2, sl
   1276c:	movcc	r0, #39	; 0x27
   12770:	strbcc	r0, [r5, r2]
   12774:	add	r8, r8, #3
   12778:	mov	r3, #1
   1277c:	cmp	r8, sl
   12780:	movcc	r1, #92	; 0x5c
   12784:	strbcc	r1, [r5, r8]
   12788:	add	r2, r8, #1
   1278c:	cmp	r2, sl
   12790:	bcs	127a4 <abort@plt+0x1870>
   12794:	uxtb	r1, r4
   12798:	mov	r0, #48	; 0x30
   1279c:	orr	r1, r0, r1, lsr #6
   127a0:	strb	r1, [r5, r2]
   127a4:	add	r2, r8, #2
   127a8:	cmp	r2, sl
   127ac:	lsrcc	r1, r4, #3
   127b0:	movcc	r0, #6
   127b4:	bficc	r1, r0, #3, #29
   127b8:	strbcc	r1, [r5, r2]
   127bc:	mov	r0, #6
   127c0:	bfi	r4, r0, #3, #29
   127c4:	add	r8, r8, #3
   127c8:	mov	r2, #1
   127cc:	mov	r0, r3
   127d0:	b	1281c <abort@plt+0x18e8>
   127d4:	cmp	r8, sl
   127d8:	strbcc	r4, [r5, r8]
   127dc:	ldr	r1, [sp, #76]	; 0x4c
   127e0:	ldrb	r4, [r1, r7]
   127e4:	add	r8, r8, #1
   127e8:	mov	r7, r3
   127ec:	ldr	r1, [sp, #48]	; 0x30
   127f0:	tst	r1, #1
   127f4:	beq	12720 <abort@plt+0x17ec>
   127f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   127fc:	tst	r1, #1
   12800:	beq	12814 <abort@plt+0x18e0>
   12804:	cmp	r8, sl
   12808:	movcc	r1, #92	; 0x5c
   1280c:	strbcc	r1, [r5, r8]
   12810:	add	r8, r8, #1
   12814:	mov	r1, #0
   12818:	str	r1, [fp, #-52]	; 0xffffffcc
   1281c:	and	r9, r2, #1
   12820:	add	r3, r7, #1
   12824:	ldr	r1, [sp, #52]	; 0x34
   12828:	cmp	r1, r3
   1282c:	bls	12870 <abort@plt+0x193c>
   12830:	cmp	r9, #0
   12834:	movwne	r9, #1
   12838:	mvn	r1, r0
   1283c:	orr	r1, r1, r9
   12840:	tst	r1, #1
   12844:	bne	127d4 <abort@plt+0x18a0>
   12848:	cmp	r8, sl
   1284c:	movcc	r1, #39	; 0x27
   12850:	strbcc	r1, [r5, r8]
   12854:	add	r1, r8, #1
   12858:	cmp	r1, sl
   1285c:	movcc	r0, #39	; 0x27
   12860:	strbcc	r0, [r5, r1]
   12864:	add	r8, r8, #2
   12868:	mov	r0, #0
   1286c:	b	127d4 <abort@plt+0x18a0>
   12870:	str	r0, [fp, #-56]	; 0xffffffc8
   12874:	cmp	r9, #0
   12878:	movwne	r9, #1
   1287c:	cmp	r9, #0
   12880:	beq	12404 <abort@plt+0x14d0>
   12884:	b	12438 <abort@plt+0x1504>
   12888:	mov	r6, #0
   1288c:	b	128cc <abort@plt+0x1998>
   12890:	mov	r6, #0
   12894:	ldr	r0, [sp, #48]	; 0x30
   12898:	cmp	r0, lr
   1289c:	bcs	128cc <abort@plt+0x1998>
   128a0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   128a4:	add	r0, ip, r7
   128a8:	ldr	r2, [sp, #52]	; 0x34
   128ac:	ldrb	r1, [r0, r2]
   128b0:	cmp	r1, #0
   128b4:	beq	123c0 <abort@plt+0x148c>
   128b8:	add	r2, r2, #1
   128bc:	add	r1, r7, r2
   128c0:	cmp	r1, lr
   128c4:	bcc	128ac <abort@plt+0x1978>
   128c8:	b	123c0 <abort@plt+0x148c>
   128cc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   128d0:	ldr	r2, [sp, #52]	; 0x34
   128d4:	b	123c0 <abort@plt+0x148c>
   128d8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   128dc:	eor	r0, r1, #2
   128e0:	orr	r0, r0, r8
   128e4:	clz	r0, r0
   128e8:	lsr	r0, r0, #5
   128ec:	ldr	r3, [fp, #-76]	; 0xffffffb4
   128f0:	tst	r3, r0
   128f4:	bne	129c0 <abort@plt+0x1a8c>
   128f8:	mov	r6, r5
   128fc:	subs	r0, r1, #2
   12900:	movwne	r0, #1
   12904:	orr	r0, r3, r0
   12908:	tst	r0, #1
   1290c:	ldr	r2, [sp, #92]	; 0x5c
   12910:	ldreq	r0, [sp, #64]	; 0x40
   12914:	eoreq	r0, r0, #1
   12918:	tsteq	r0, #1
   1291c:	bne	1295c <abort@plt+0x1a28>
   12920:	mov	r9, lr
   12924:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12928:	tst	r0, #1
   1292c:	bne	12a28 <abort@plt+0x1af4>
   12930:	ldr	r0, [sp, #84]	; 0x54
   12934:	cmp	r0, #0
   12938:	beq	1295c <abort@plt+0x1a28>
   1293c:	mov	r0, #0
   12940:	str	r0, [fp, #-48]	; 0xffffffd0
   12944:	mov	r1, #2
   12948:	cmp	sl, #0
   1294c:	mov	r0, r2
   12950:	mov	r4, r3
   12954:	ldr	r7, [sp, #84]	; 0x54
   12958:	beq	11b34 <abort@plt+0xc00>
   1295c:	ldr	r1, [fp, #-84]	; 0xffffffac
   12960:	clz	r0, r1
   12964:	lsr	r0, r0, #5
   12968:	orr	r0, r0, r3
   1296c:	tst	r0, #1
   12970:	bne	1299c <abort@plt+0x1a68>
   12974:	ldrb	r0, [r1]
   12978:	cmp	r0, #0
   1297c:	beq	1299c <abort@plt+0x1a68>
   12980:	add	r1, r1, #1
   12984:	cmp	r8, sl
   12988:	strbcc	r0, [r6, r8]
   1298c:	add	r8, r8, #1
   12990:	ldrb	r0, [r1], #1
   12994:	cmp	r0, #0
   12998:	bne	12984 <abort@plt+0x1a50>
   1299c:	cmp	r8, sl
   129a0:	movcc	r0, #0
   129a4:	strbcc	r0, [r6, r8]
   129a8:	b	12a1c <abort@plt+0x1ae8>
   129ac:	ldr	ip, [fp, #-80]	; 0xffffffb0
   129b0:	mov	lr, r4
   129b4:	b	129c0 <abort@plt+0x1a8c>
   129b8:	ldr	r5, [sp, #28]
   129bc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   129c0:	mov	r0, #0
   129c4:	ldr	r1, [fp, #12]
   129c8:	bic	r1, r1, #2
   129cc:	mov	r2, #2
   129d0:	ldr	r3, [sp, #92]	; 0x5c
   129d4:	tst	r3, #1
   129d8:	movwne	r2, #4
   129dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   129e0:	cmp	r3, #2
   129e4:	movne	r2, r3
   129e8:	str	r2, [sp]
   129ec:	str	r1, [sp, #4]
   129f0:	str	r0, [sp, #8]
   129f4:	ldr	r0, [sp, #80]	; 0x50
   129f8:	str	r0, [sp, #12]
   129fc:	ldr	r0, [sp, #88]	; 0x58
   12a00:	str	r0, [sp, #16]
   12a04:	mov	r0, r5
   12a08:	mov	r1, sl
   12a0c:	mov	r2, ip
   12a10:	mov	r3, lr
   12a14:	bl	11aa8 <abort@plt+0xb74>
   12a18:	mov	r8, r0
   12a1c:	mov	r0, r8
   12a20:	sub	sp, fp, #28
   12a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a28:	mov	r0, #5
   12a2c:	str	r0, [sp]
   12a30:	ldr	r0, [fp, #12]
   12a34:	str	r0, [sp, #4]
   12a38:	ldr	r0, [fp, #16]
   12a3c:	str	r0, [sp, #8]
   12a40:	ldr	r0, [sp, #80]	; 0x50
   12a44:	str	r0, [sp, #12]
   12a48:	ldr	r0, [sp, #88]	; 0x58
   12a4c:	str	r0, [sp, #16]
   12a50:	mov	r0, r6
   12a54:	ldr	r1, [sp, #84]	; 0x54
   12a58:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12a5c:	mov	r3, r9
   12a60:	b	12a14 <abort@plt+0x1ae0>
   12a64:	bl	10f34 <abort@plt>
   12a68:	mov	r3, r2
   12a6c:	mov	r2, #0
   12a70:	b	12a74 <abort@plt+0x1b40>
   12a74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a78:	add	fp, sp, #28
   12a7c:	sub	sp, sp, #36	; 0x24
   12a80:	mov	r4, r2
   12a84:	str	r2, [sp, #24]
   12a88:	mov	r5, r1
   12a8c:	mov	r6, r0
   12a90:	str	r0, [sp, #20]
   12a94:	movw	r8, #24912	; 0x6150
   12a98:	movt	r8, #2
   12a9c:	cmp	r3, #0
   12aa0:	movne	r8, r3
   12aa4:	bl	10e74 <__errno_location@plt>
   12aa8:	str	r0, [sp, #28]
   12aac:	ldm	r8, {r3, r9}
   12ab0:	ldr	r1, [r8, #40]	; 0x28
   12ab4:	ldr	r2, [r8, #44]	; 0x2c
   12ab8:	ldr	r7, [r0]
   12abc:	str	r7, [sp, #32]
   12ac0:	add	sl, r8, #8
   12ac4:	cmp	r4, #0
   12ac8:	orreq	r9, r9, #1
   12acc:	stm	sp, {r3, r9, sl}
   12ad0:	str	r1, [sp, #12]
   12ad4:	str	r2, [sp, #16]
   12ad8:	mov	r0, #0
   12adc:	mov	r1, #0
   12ae0:	mov	r2, r6
   12ae4:	mov	r3, r5
   12ae8:	mov	r7, r5
   12aec:	bl	11aa8 <abort@plt+0xb74>
   12af0:	mov	r5, r0
   12af4:	add	r4, r0, #1
   12af8:	mov	r0, r4
   12afc:	bl	1397c <abort@plt+0x2a48>
   12b00:	mov	r6, r0
   12b04:	ldr	r0, [r8]
   12b08:	ldr	r1, [r8, #40]	; 0x28
   12b0c:	ldr	r2, [r8, #44]	; 0x2c
   12b10:	stm	sp, {r0, r9, sl}
   12b14:	str	r1, [sp, #12]
   12b18:	str	r2, [sp, #16]
   12b1c:	mov	r0, r6
   12b20:	mov	r1, r4
   12b24:	ldr	r2, [sp, #20]
   12b28:	mov	r3, r7
   12b2c:	bl	11aa8 <abort@plt+0xb74>
   12b30:	ldr	r0, [sp, #24]
   12b34:	ldr	r1, [sp, #32]
   12b38:	ldr	r2, [sp, #28]
   12b3c:	str	r1, [r2]
   12b40:	cmp	r0, #0
   12b44:	strne	r5, [r0]
   12b48:	mov	r0, r6
   12b4c:	sub	sp, fp, #28
   12b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b58:	add	fp, sp, #24
   12b5c:	movw	r8, #24800	; 0x60e0
   12b60:	movt	r8, #2
   12b64:	ldr	r4, [r8]
   12b68:	movw	r5, #24804	; 0x60e4
   12b6c:	movt	r5, #2
   12b70:	ldr	r0, [r5]
   12b74:	cmp	r0, #2
   12b78:	blt	12ba4 <abort@plt+0x1c70>
   12b7c:	add	r7, r4, #12
   12b80:	mov	r6, #0
   12b84:	ldr	r0, [r7, r6, lsl #3]
   12b88:	bl	14540 <abort@plt+0x360c>
   12b8c:	add	r0, r6, #1
   12b90:	ldr	r1, [r5]
   12b94:	add	r2, r6, #2
   12b98:	cmp	r2, r1
   12b9c:	mov	r6, r0
   12ba0:	blt	12b84 <abort@plt+0x1c50>
   12ba4:	ldr	r0, [r4, #4]
   12ba8:	movw	r9, #24960	; 0x6180
   12bac:	movt	r9, #2
   12bb0:	cmp	r0, r9
   12bb4:	movw	r7, #24808	; 0x60e8
   12bb8:	movt	r7, #2
   12bbc:	beq	12bcc <abort@plt+0x1c98>
   12bc0:	bl	14540 <abort@plt+0x360c>
   12bc4:	mov	r0, #256	; 0x100
   12bc8:	stm	r7, {r0, r9}
   12bcc:	cmp	r4, r7
   12bd0:	beq	12be0 <abort@plt+0x1cac>
   12bd4:	mov	r0, r4
   12bd8:	bl	14540 <abort@plt+0x360c>
   12bdc:	str	r7, [r8]
   12be0:	mov	r0, #1
   12be4:	str	r0, [r5]
   12be8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12bec:	movw	r3, #24912	; 0x6150
   12bf0:	movt	r3, #2
   12bf4:	mvn	r2, #0
   12bf8:	b	12bfc <abort@plt+0x1cc8>
   12bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c00:	add	fp, sp, #28
   12c04:	sub	sp, sp, #44	; 0x2c
   12c08:	mov	r7, r3
   12c0c:	str	r2, [sp, #36]	; 0x24
   12c10:	str	r1, [sp, #32]
   12c14:	mov	r5, r0
   12c18:	bl	10e74 <__errno_location@plt>
   12c1c:	cmp	r5, #0
   12c20:	bmi	12d90 <abort@plt+0x1e5c>
   12c24:	cmn	r5, #-2147483647	; 0x80000001
   12c28:	beq	12d90 <abort@plt+0x1e5c>
   12c2c:	movw	r4, #24800	; 0x60e0
   12c30:	movt	r4, #2
   12c34:	ldr	r6, [r4]
   12c38:	str	r0, [sp, #28]
   12c3c:	ldr	r0, [r0]
   12c40:	str	r0, [sp, #24]
   12c44:	movw	r8, #24804	; 0x60e4
   12c48:	movt	r8, #2
   12c4c:	ldr	r1, [r8]
   12c50:	cmp	r1, r5
   12c54:	ble	12c60 <abort@plt+0x1d2c>
   12c58:	mov	sl, r6
   12c5c:	b	12ccc <abort@plt+0x1d98>
   12c60:	str	r1, [fp, #-32]	; 0xffffffe0
   12c64:	mov	r0, #8
   12c68:	str	r0, [sp]
   12c6c:	movw	r9, #24808	; 0x60e8
   12c70:	movt	r9, #2
   12c74:	subs	r0, r6, r9
   12c78:	movne	r0, r6
   12c7c:	sub	r1, r5, r1
   12c80:	add	r2, r1, #1
   12c84:	sub	r1, fp, #32
   12c88:	mvn	r3, #-2147483648	; 0x80000000
   12c8c:	bl	13a58 <abort@plt+0x2b24>
   12c90:	mov	sl, r0
   12c94:	str	r0, [r4]
   12c98:	cmp	r6, r9
   12c9c:	bne	12ca8 <abort@plt+0x1d74>
   12ca0:	ldrd	r0, [r9]
   12ca4:	stm	sl, {r0, r1}
   12ca8:	ldr	r1, [r8]
   12cac:	add	r0, sl, r1, lsl #3
   12cb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12cb4:	sub	r1, r2, r1
   12cb8:	lsl	r2, r1, #3
   12cbc:	mov	r1, #0
   12cc0:	bl	10e8c <memset@plt>
   12cc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12cc8:	str	r0, [r8]
   12ccc:	mov	r9, sl
   12cd0:	ldr	r6, [r9, r5, lsl #3]!
   12cd4:	ldr	r4, [r9, #4]!
   12cd8:	ldm	r7, {r0, r1}
   12cdc:	ldr	r2, [r7, #40]	; 0x28
   12ce0:	ldr	r3, [r7, #44]	; 0x2c
   12ce4:	orr	r8, r1, #1
   12ce8:	add	r1, r7, #8
   12cec:	stm	sp, {r0, r8}
   12cf0:	str	r1, [sp, #20]
   12cf4:	add	r0, sp, #8
   12cf8:	stm	r0, {r1, r2, r3}
   12cfc:	mov	r0, r4
   12d00:	mov	r1, r6
   12d04:	ldr	r2, [sp, #32]
   12d08:	ldr	r3, [sp, #36]	; 0x24
   12d0c:	bl	11aa8 <abort@plt+0xb74>
   12d10:	cmp	r6, r0
   12d14:	bhi	12d78 <abort@plt+0x1e44>
   12d18:	add	r6, r0, #1
   12d1c:	str	r6, [sl, r5, lsl #3]
   12d20:	movw	r0, #24960	; 0x6180
   12d24:	movt	r0, #2
   12d28:	cmp	r4, r0
   12d2c:	beq	12d38 <abort@plt+0x1e04>
   12d30:	mov	r0, r4
   12d34:	bl	14540 <abort@plt+0x360c>
   12d38:	mov	r0, r6
   12d3c:	bl	1397c <abort@plt+0x2a48>
   12d40:	mov	r4, r0
   12d44:	str	r0, [r9]
   12d48:	ldr	r0, [r7]
   12d4c:	ldr	r1, [r7, #40]	; 0x28
   12d50:	ldr	r2, [r7, #44]	; 0x2c
   12d54:	stm	sp, {r0, r8}
   12d58:	ldr	r0, [sp, #20]
   12d5c:	add	r3, sp, #8
   12d60:	stm	r3, {r0, r1, r2}
   12d64:	mov	r0, r4
   12d68:	mov	r1, r6
   12d6c:	ldr	r2, [sp, #32]
   12d70:	ldr	r3, [sp, #36]	; 0x24
   12d74:	bl	11aa8 <abort@plt+0xb74>
   12d78:	ldr	r0, [sp, #28]
   12d7c:	ldr	r1, [sp, #24]
   12d80:	str	r1, [r0]
   12d84:	mov	r0, r4
   12d88:	sub	sp, fp, #28
   12d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d90:	bl	10f34 <abort@plt>
   12d94:	movw	r3, #24912	; 0x6150
   12d98:	movt	r3, #2
   12d9c:	b	12bfc <abort@plt+0x1cc8>
   12da0:	mov	r1, r0
   12da4:	mov	r0, #0
   12da8:	b	12bec <abort@plt+0x1cb8>
   12dac:	mov	r2, r1
   12db0:	mov	r1, r0
   12db4:	mov	r0, #0
   12db8:	b	12d94 <abort@plt+0x1e60>
   12dbc:	push	{r4, r5, r6, sl, fp, lr}
   12dc0:	add	fp, sp, #16
   12dc4:	sub	sp, sp, #48	; 0x30
   12dc8:	mov	r4, r2
   12dcc:	mov	r5, r0
   12dd0:	mov	r6, sp
   12dd4:	mov	r0, r6
   12dd8:	bl	12df8 <abort@plt+0x1ec4>
   12ddc:	mov	r0, r5
   12de0:	mov	r1, r4
   12de4:	mvn	r2, #0
   12de8:	mov	r3, r6
   12dec:	bl	12bfc <abort@plt+0x1cc8>
   12df0:	sub	sp, fp, #16
   12df4:	pop	{r4, r5, r6, sl, fp, pc}
   12df8:	push	{fp, lr}
   12dfc:	mov	fp, sp
   12e00:	vmov.i32	q8, #0	; 0x00000000
   12e04:	mov	r2, #32
   12e08:	mov	r3, r0
   12e0c:	vst1.32	{d16-d17}, [r3], r2
   12e10:	vst1.32	{d16-d17}, [r3]
   12e14:	add	r2, r0, #16
   12e18:	vst1.32	{d16-d17}, [r2]
   12e1c:	cmp	r1, #10
   12e20:	strne	r1, [r0]
   12e24:	popne	{fp, pc}
   12e28:	bl	10f34 <abort@plt>
   12e2c:	push	{r4, r5, r6, r7, fp, lr}
   12e30:	add	fp, sp, #16
   12e34:	sub	sp, sp, #48	; 0x30
   12e38:	mov	r4, r3
   12e3c:	mov	r5, r2
   12e40:	mov	r6, r0
   12e44:	mov	r7, sp
   12e48:	mov	r0, r7
   12e4c:	bl	12df8 <abort@plt+0x1ec4>
   12e50:	mov	r0, r6
   12e54:	mov	r1, r5
   12e58:	mov	r2, r4
   12e5c:	mov	r3, r7
   12e60:	bl	12bfc <abort@plt+0x1cc8>
   12e64:	sub	sp, fp, #16
   12e68:	pop	{r4, r5, r6, r7, fp, pc}
   12e6c:	mov	r2, r1
   12e70:	mov	r1, r0
   12e74:	mov	r0, #0
   12e78:	b	12dbc <abort@plt+0x1e88>
   12e7c:	mov	r3, r2
   12e80:	mov	r2, r1
   12e84:	mov	r1, r0
   12e88:	mov	r0, #0
   12e8c:	b	12e2c <abort@plt+0x1ef8>
   12e90:	push	{r4, r5, r6, sl, fp, lr}
   12e94:	add	fp, sp, #16
   12e98:	sub	sp, sp, #48	; 0x30
   12e9c:	mov	r4, r1
   12ea0:	mov	r5, r0
   12ea4:	movw	r0, #24912	; 0x6150
   12ea8:	movt	r0, #2
   12eac:	add	r1, r0, #16
   12eb0:	mov	r3, #32
   12eb4:	vld1.64	{d16-d17}, [r0], r3
   12eb8:	vld1.64	{d18-d19}, [r1]
   12ebc:	mov	r6, sp
   12ec0:	add	r1, r6, #16
   12ec4:	vld1.64	{d20-d21}, [r0]
   12ec8:	vst1.64	{d18-d19}, [r1]
   12ecc:	mov	r0, r6
   12ed0:	vst1.64	{d16-d17}, [r0], r3
   12ed4:	vst1.64	{d20-d21}, [r0]
   12ed8:	mov	r0, r6
   12edc:	mov	r1, r2
   12ee0:	mov	r2, #1
   12ee4:	bl	1199c <abort@plt+0xa68>
   12ee8:	mov	r0, #0
   12eec:	mov	r1, r5
   12ef0:	mov	r2, r4
   12ef4:	mov	r3, r6
   12ef8:	bl	12bfc <abort@plt+0x1cc8>
   12efc:	sub	sp, fp, #16
   12f00:	pop	{r4, r5, r6, sl, fp, pc}
   12f04:	mov	r2, r1
   12f08:	mvn	r1, #0
   12f0c:	b	12e90 <abort@plt+0x1f5c>
   12f10:	mov	r1, #58	; 0x3a
   12f14:	b	12f04 <abort@plt+0x1fd0>
   12f18:	mov	r2, #58	; 0x3a
   12f1c:	b	12e90 <abort@plt+0x1f5c>
   12f20:	push	{r4, r5, r6, sl, fp, lr}
   12f24:	add	fp, sp, #16
   12f28:	sub	sp, sp, #48	; 0x30
   12f2c:	mov	r4, r2
   12f30:	mov	r5, r0
   12f34:	mov	r6, sp
   12f38:	mov	r0, r6
   12f3c:	bl	12df8 <abort@plt+0x1ec4>
   12f40:	mov	r0, r6
   12f44:	mov	r1, #58	; 0x3a
   12f48:	mov	r2, #1
   12f4c:	bl	1199c <abort@plt+0xa68>
   12f50:	mov	r0, r5
   12f54:	mov	r1, r4
   12f58:	mvn	r2, #0
   12f5c:	mov	r3, r6
   12f60:	bl	12bfc <abort@plt+0x1cc8>
   12f64:	sub	sp, fp, #16
   12f68:	pop	{r4, r5, r6, sl, fp, pc}
   12f6c:	push	{fp, lr}
   12f70:	mov	fp, sp
   12f74:	sub	sp, sp, #8
   12f78:	mvn	ip, #0
   12f7c:	str	ip, [sp]
   12f80:	bl	12f8c <abort@plt+0x2058>
   12f84:	mov	sp, fp
   12f88:	pop	{fp, pc}
   12f8c:	push	{r4, r5, r6, r7, fp, lr}
   12f90:	add	fp, sp, #16
   12f94:	sub	sp, sp, #48	; 0x30
   12f98:	mov	r7, r3
   12f9c:	mov	r5, r0
   12fa0:	movw	r0, #24912	; 0x6150
   12fa4:	movt	r0, #2
   12fa8:	add	r3, r0, #16
   12fac:	mov	r4, #32
   12fb0:	vld1.64	{d16-d17}, [r0], r4
   12fb4:	vld1.64	{d18-d19}, [r3]
   12fb8:	mov	r6, sp
   12fbc:	add	r3, r6, #16
   12fc0:	vld1.64	{d20-d21}, [r0]
   12fc4:	vst1.64	{d18-d19}, [r3]
   12fc8:	mov	r0, r6
   12fcc:	vst1.64	{d16-d17}, [r0], r4
   12fd0:	vst1.64	{d20-d21}, [r0]
   12fd4:	mov	r0, r6
   12fd8:	bl	119f4 <abort@plt+0xac0>
   12fdc:	ldr	r2, [fp, #8]
   12fe0:	mov	r0, r5
   12fe4:	mov	r1, r7
   12fe8:	mov	r3, r6
   12fec:	bl	12bfc <abort@plt+0x1cc8>
   12ff0:	sub	sp, fp, #16
   12ff4:	pop	{r4, r5, r6, r7, fp, pc}
   12ff8:	mov	r3, r2
   12ffc:	mov	r2, r1
   13000:	mov	r1, r0
   13004:	mov	r0, #0
   13008:	b	12f6c <abort@plt+0x2038>
   1300c:	push	{fp, lr}
   13010:	mov	fp, sp
   13014:	sub	sp, sp, #8
   13018:	mov	ip, r2
   1301c:	mov	r2, r1
   13020:	mov	r1, r0
   13024:	str	r3, [sp]
   13028:	mov	r0, #0
   1302c:	mov	r3, ip
   13030:	bl	12f8c <abort@plt+0x2058>
   13034:	mov	sp, fp
   13038:	pop	{fp, pc}
   1303c:	movw	r3, #24816	; 0x60f0
   13040:	movt	r3, #2
   13044:	b	12bfc <abort@plt+0x1cc8>
   13048:	mov	r2, r1
   1304c:	mov	r1, r0
   13050:	mov	r0, #0
   13054:	b	1303c <abort@plt+0x2108>
   13058:	mvn	r2, #0
   1305c:	b	1303c <abort@plt+0x2108>
   13060:	mov	r1, r0
   13064:	mov	r0, #0
   13068:	b	13058 <abort@plt+0x2124>
   1306c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13070:	add	fp, sp, #24
   13074:	sub	sp, sp, #16
   13078:	mov	r4, r1
   1307c:	mov	r5, r0
   13080:	mov	r7, #0
   13084:	mov	r0, #0
   13088:	mov	r1, r5
   1308c:	mov	r2, #5
   13090:	bl	10d84 <dcgettext@plt>
   13094:	cmp	r0, r5
   13098:	beq	130a4 <abort@plt+0x2170>
   1309c:	sub	sp, fp, #24
   130a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   130a4:	bl	14660 <abort@plt+0x372c>
   130a8:	mov	r6, r0
   130ac:	mov	r8, #56	; 0x38
   130b0:	mov	r0, #45	; 0x2d
   130b4:	stm	sp, {r0, r8}
   130b8:	str	r7, [sp, #8]
   130bc:	str	r7, [sp, #12]
   130c0:	mov	r0, r6
   130c4:	mov	r1, #85	; 0x55
   130c8:	mov	r2, #84	; 0x54
   130cc:	mov	r3, #70	; 0x46
   130d0:	bl	13168 <abort@plt+0x2234>
   130d4:	cmp	r0, #0
   130d8:	beq	130f4 <abort@plt+0x21c0>
   130dc:	ldrb	r1, [r5]
   130e0:	movw	r2, #19972	; 0x4e04
   130e4:	movt	r2, #1
   130e8:	movw	r0, #19976	; 0x4e08
   130ec:	movt	r0, #1
   130f0:	b	13138 <abort@plt+0x2204>
   130f4:	mov	r0, #48	; 0x30
   130f8:	mov	r1, #51	; 0x33
   130fc:	str	r8, [sp]
   13100:	stmib	sp, {r0, r1}
   13104:	str	r0, [sp, #12]
   13108:	mov	r0, r6
   1310c:	mov	r1, #71	; 0x47
   13110:	mov	r2, #66	; 0x42
   13114:	mov	r3, #49	; 0x31
   13118:	bl	13168 <abort@plt+0x2234>
   1311c:	cmp	r0, #0
   13120:	beq	13148 <abort@plt+0x2214>
   13124:	ldrb	r1, [r5]
   13128:	movw	r2, #19980	; 0x4e0c
   1312c:	movt	r2, #1
   13130:	movw	r0, #19984	; 0x4e10
   13134:	movt	r0, #1
   13138:	cmp	r1, #96	; 0x60
   1313c:	moveq	r0, r2
   13140:	sub	sp, fp, #24
   13144:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13148:	movw	r1, #19966	; 0x4dfe
   1314c:	movt	r1, #1
   13150:	movw	r0, #19970	; 0x4e02
   13154:	movt	r0, #1
   13158:	cmp	r4, #9
   1315c:	moveq	r0, r1
   13160:	sub	sp, fp, #24
   13164:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13168:	push	{r4, r5, r6, r7, fp, lr}
   1316c:	add	fp, sp, #16
   13170:	sub	sp, sp, #16
   13174:	mov	r4, r3
   13178:	mov	r5, r2
   1317c:	mov	r7, r1
   13180:	mov	r6, r0
   13184:	mov	r0, r1
   13188:	bl	141f8 <abort@plt+0x32c4>
   1318c:	ldrb	r1, [r6]
   13190:	cmp	r0, #0
   13194:	andne	r1, r1, #223	; 0xdf
   13198:	mov	r0, #0
   1319c:	cmp	r1, r7
   131a0:	bne	131d8 <abort@plt+0x22a4>
   131a4:	cmp	r7, #0
   131a8:	beq	131e0 <abort@plt+0x22ac>
   131ac:	ldr	r0, [fp, #20]
   131b0:	ldr	r1, [fp, #16]
   131b4:	ldr	r2, [fp, #12]
   131b8:	ldr	r3, [fp, #8]
   131bc:	str	r2, [sp]
   131c0:	str	r1, [sp, #4]
   131c4:	str	r0, [sp, #8]
   131c8:	mov	r0, r6
   131cc:	mov	r1, r5
   131d0:	mov	r2, r4
   131d4:	bl	131ec <abort@plt+0x22b8>
   131d8:	sub	sp, fp, #16
   131dc:	pop	{r4, r5, r6, r7, fp, pc}
   131e0:	mov	r0, #1
   131e4:	sub	sp, fp, #16
   131e8:	pop	{r4, r5, r6, r7, fp, pc}
   131ec:	push	{r4, r5, r6, r7, fp, lr}
   131f0:	add	fp, sp, #16
   131f4:	sub	sp, sp, #8
   131f8:	mov	r4, r3
   131fc:	mov	r5, r2
   13200:	mov	r7, r1
   13204:	mov	r6, r0
   13208:	mov	r0, r1
   1320c:	bl	141f8 <abort@plt+0x32c4>
   13210:	ldrb	r1, [r6, #1]
   13214:	cmp	r0, #0
   13218:	andne	r1, r1, #223	; 0xdf
   1321c:	mov	r0, #0
   13220:	cmp	r1, r7
   13224:	bne	13254 <abort@plt+0x2320>
   13228:	cmp	r7, #0
   1322c:	beq	1325c <abort@plt+0x2328>
   13230:	ldr	r0, [fp, #16]
   13234:	ldr	r1, [fp, #12]
   13238:	ldr	r3, [fp, #8]
   1323c:	str	r1, [sp]
   13240:	str	r0, [sp, #4]
   13244:	mov	r0, r6
   13248:	mov	r1, r5
   1324c:	mov	r2, r4
   13250:	bl	13268 <abort@plt+0x2334>
   13254:	sub	sp, fp, #16
   13258:	pop	{r4, r5, r6, r7, fp, pc}
   1325c:	mov	r0, #1
   13260:	sub	sp, fp, #16
   13264:	pop	{r4, r5, r6, r7, fp, pc}
   13268:	push	{r4, r5, r6, r7, fp, lr}
   1326c:	add	fp, sp, #16
   13270:	sub	sp, sp, #8
   13274:	mov	r4, r3
   13278:	mov	r5, r2
   1327c:	mov	r7, r1
   13280:	mov	r6, r0
   13284:	mov	r0, r1
   13288:	bl	141f8 <abort@plt+0x32c4>
   1328c:	ldrb	r1, [r6, #2]
   13290:	cmp	r0, #0
   13294:	andne	r1, r1, #223	; 0xdf
   13298:	mov	r0, #0
   1329c:	cmp	r1, r7
   132a0:	bne	132c8 <abort@plt+0x2394>
   132a4:	cmp	r7, #0
   132a8:	beq	132d0 <abort@plt+0x239c>
   132ac:	ldr	r0, [fp, #12]
   132b0:	ldr	r3, [fp, #8]
   132b4:	str	r0, [sp]
   132b8:	mov	r0, r6
   132bc:	mov	r1, r5
   132c0:	mov	r2, r4
   132c4:	bl	132dc <abort@plt+0x23a8>
   132c8:	sub	sp, fp, #16
   132cc:	pop	{r4, r5, r6, r7, fp, pc}
   132d0:	mov	r0, #1
   132d4:	sub	sp, fp, #16
   132d8:	pop	{r4, r5, r6, r7, fp, pc}
   132dc:	push	{r4, r5, r6, r7, fp, lr}
   132e0:	add	fp, sp, #16
   132e4:	mov	r4, r3
   132e8:	mov	r5, r2
   132ec:	mov	r7, r1
   132f0:	mov	r6, r0
   132f4:	mov	r0, r1
   132f8:	bl	141f8 <abort@plt+0x32c4>
   132fc:	ldrb	r1, [r6, #3]
   13300:	ldr	r3, [fp, #8]
   13304:	cmp	r0, #0
   13308:	andne	r1, r1, #223	; 0xdf
   1330c:	mov	r0, #0
   13310:	cmp	r1, r7
   13314:	bne	13338 <abort@plt+0x2404>
   13318:	cmp	r7, #0
   1331c:	beq	13334 <abort@plt+0x2400>
   13320:	mov	r0, r6
   13324:	mov	r1, r5
   13328:	mov	r2, r4
   1332c:	pop	{r4, r5, r6, r7, fp, lr}
   13330:	b	1333c <abort@plt+0x2408>
   13334:	mov	r0, #1
   13338:	pop	{r4, r5, r6, r7, fp, pc}
   1333c:	push	{r4, r5, r6, r7, fp, lr}
   13340:	add	fp, sp, #16
   13344:	mov	r4, r3
   13348:	mov	r5, r2
   1334c:	mov	r7, r1
   13350:	mov	r6, r0
   13354:	mov	r0, r1
   13358:	bl	141f8 <abort@plt+0x32c4>
   1335c:	ldrb	r1, [r6, #4]
   13360:	cmp	r0, #0
   13364:	andne	r1, r1, #223	; 0xdf
   13368:	mov	r0, #0
   1336c:	cmp	r1, r7
   13370:	bne	13394 <abort@plt+0x2460>
   13374:	cmp	r7, #0
   13378:	beq	13390 <abort@plt+0x245c>
   1337c:	mov	r0, r6
   13380:	mov	r1, r5
   13384:	mov	r2, r4
   13388:	pop	{r4, r5, r6, r7, fp, lr}
   1338c:	b	13398 <abort@plt+0x2464>
   13390:	mov	r0, #1
   13394:	pop	{r4, r5, r6, r7, fp, pc}
   13398:	push	{r4, r5, r6, sl, fp, lr}
   1339c:	add	fp, sp, #16
   133a0:	mov	r4, r2
   133a4:	mov	r6, r1
   133a8:	mov	r5, r0
   133ac:	mov	r0, r1
   133b0:	bl	141f8 <abort@plt+0x32c4>
   133b4:	ldrb	r1, [r5, #5]
   133b8:	cmp	r0, #0
   133bc:	andne	r1, r1, #223	; 0xdf
   133c0:	mov	r0, #0
   133c4:	cmp	r1, r6
   133c8:	bne	133e8 <abort@plt+0x24b4>
   133cc:	cmp	r6, #0
   133d0:	beq	133e4 <abort@plt+0x24b0>
   133d4:	mov	r0, r5
   133d8:	mov	r1, r4
   133dc:	pop	{r4, r5, r6, sl, fp, lr}
   133e0:	b	133ec <abort@plt+0x24b8>
   133e4:	mov	r0, #1
   133e8:	pop	{r4, r5, r6, sl, fp, pc}
   133ec:	push	{r4, r5, fp, lr}
   133f0:	add	fp, sp, #8
   133f4:	mov	r5, r1
   133f8:	mov	r4, r0
   133fc:	mov	r0, r1
   13400:	bl	141f8 <abort@plt+0x32c4>
   13404:	ldrb	r1, [r4, #6]
   13408:	cmp	r0, #0
   1340c:	andne	r1, r1, #223	; 0xdf
   13410:	mov	r0, #0
   13414:	cmp	r1, r5
   13418:	popne	{r4, r5, fp, pc}
   1341c:	cmp	r5, #0
   13420:	beq	13430 <abort@plt+0x24fc>
   13424:	mov	r0, r4
   13428:	pop	{r4, r5, fp, lr}
   1342c:	b	13438 <abort@plt+0x2504>
   13430:	mov	r0, #1
   13434:	pop	{r4, r5, fp, pc}
   13438:	push	{r4, sl, fp, lr}
   1343c:	add	fp, sp, #8
   13440:	mov	r4, r0
   13444:	mov	r0, #0
   13448:	bl	141f8 <abort@plt+0x32c4>
   1344c:	ldrb	r1, [r4, #7]
   13450:	cmp	r0, #0
   13454:	beq	13468 <abort@plt+0x2534>
   13458:	tst	r1, #223	; 0xdf
   1345c:	bne	13470 <abort@plt+0x253c>
   13460:	mov	r0, #1
   13464:	pop	{r4, sl, fp, pc}
   13468:	cmp	r1, #0
   1346c:	beq	13460 <abort@plt+0x252c>
   13470:	mov	r0, #0
   13474:	pop	{r4, sl, fp, pc}
   13478:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1347c:	add	fp, sp, #24
   13480:	sub	sp, sp, #32
   13484:	mov	r4, r2
   13488:	mov	r8, r0
   1348c:	ldr	r6, [fp, #12]
   13490:	ldr	r7, [fp, #8]
   13494:	cmp	r1, #0
   13498:	beq	134c0 <abort@plt+0x258c>
   1349c:	mov	r5, r1
   134a0:	str	r4, [sp]
   134a4:	str	r3, [sp, #4]
   134a8:	movw	r2, #20072	; 0x4e68
   134ac:	movt	r2, #1
   134b0:	mov	r0, r8
   134b4:	mov	r1, #1
   134b8:	mov	r3, r5
   134bc:	b	134d8 <abort@plt+0x25a4>
   134c0:	str	r3, [sp]
   134c4:	movw	r2, #20084	; 0x4e74
   134c8:	movt	r2, #1
   134cc:	mov	r0, r8
   134d0:	mov	r1, #1
   134d4:	mov	r3, r4
   134d8:	bl	10ebc <__fprintf_chk@plt>
   134dc:	movw	r1, #20091	; 0x4e7b
   134e0:	movt	r1, #1
   134e4:	mov	r0, #0
   134e8:	mov	r2, #5
   134ec:	bl	10d84 <dcgettext@plt>
   134f0:	mov	r3, r0
   134f4:	movw	r0, #2022	; 0x7e6
   134f8:	str	r0, [sp]
   134fc:	movw	r2, #20809	; 0x5149
   13500:	movt	r2, #1
   13504:	mov	r0, r8
   13508:	mov	r1, #1
   1350c:	bl	10ebc <__fprintf_chk@plt>
   13510:	movw	r4, #19113	; 0x4aa9
   13514:	movt	r4, #1
   13518:	mov	r0, r4
   1351c:	mov	r1, r8
   13520:	bl	10d18 <fputs_unlocked@plt>
   13524:	movw	r1, #20095	; 0x4e7f
   13528:	movt	r1, #1
   1352c:	mov	r0, #0
   13530:	mov	r2, #5
   13534:	bl	10d84 <dcgettext@plt>
   13538:	mov	r2, r0
   1353c:	movw	r3, #20266	; 0x4f2a
   13540:	movt	r3, #1
   13544:	mov	r0, r8
   13548:	mov	r1, #1
   1354c:	bl	10ebc <__fprintf_chk@plt>
   13550:	mov	r0, r4
   13554:	mov	r1, r8
   13558:	bl	10d18 <fputs_unlocked@plt>
   1355c:	cmp	r6, #9
   13560:	bhi	1359c <abort@plt+0x2668>
   13564:	add	r0, pc, #0
   13568:	ldr	pc, [r0, r6, lsl #2]
   1356c:	muleq	r1, r4, r5
   13570:	andeq	r3, r1, r8, lsr #11
   13574:	ldrdeq	r3, [r1], -r8
   13578:	andeq	r3, r1, r0, lsl #12
   1357c:	andeq	r3, r1, r8, lsr #12
   13580:	andeq	r3, r1, r0, asr r6
   13584:	andeq	r3, r1, r8, ror r6
   13588:			; <UNDEFINED> instruction: 0x000136b0
   1358c:	andeq	r3, r1, r0, asr r7
   13590:	strdeq	r3, [r1], -r8
   13594:	sub	sp, fp, #24
   13598:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1359c:	movw	r1, #20619	; 0x508b
   135a0:	movt	r1, #1
   135a4:	b	13700 <abort@plt+0x27cc>
   135a8:	movw	r1, #20300	; 0x4f4c
   135ac:	movt	r1, #1
   135b0:	mov	r0, #0
   135b4:	mov	r2, #5
   135b8:	bl	10d84 <dcgettext@plt>
   135bc:	mov	r2, r0
   135c0:	ldr	r3, [r7]
   135c4:	mov	r0, r8
   135c8:	mov	r1, #1
   135cc:	sub	sp, fp, #24
   135d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   135d4:	b	10ebc <__fprintf_chk@plt>
   135d8:	movw	r1, #20316	; 0x4f5c
   135dc:	movt	r1, #1
   135e0:	mov	r0, #0
   135e4:	mov	r2, #5
   135e8:	bl	10d84 <dcgettext@plt>
   135ec:	mov	r2, r0
   135f0:	ldr	r3, [r7]
   135f4:	ldr	r0, [r7, #4]
   135f8:	str	r0, [sp]
   135fc:	b	136ec <abort@plt+0x27b8>
   13600:	movw	r1, #20339	; 0x4f73
   13604:	movt	r1, #1
   13608:	mov	r0, #0
   1360c:	mov	r2, #5
   13610:	bl	10d84 <dcgettext@plt>
   13614:	mov	r2, r0
   13618:	ldr	r3, [r7]
   1361c:	ldmib	r7, {r0, r1}
   13620:	stm	sp, {r0, r1}
   13624:	b	136ec <abort@plt+0x27b8>
   13628:	movw	r1, #20367	; 0x4f8f
   1362c:	movt	r1, #1
   13630:	mov	r0, #0
   13634:	mov	r2, #5
   13638:	bl	10d84 <dcgettext@plt>
   1363c:	mov	r2, r0
   13640:	ldr	r3, [r7]
   13644:	ldmib	r7, {r0, r1, r7}
   13648:	stm	sp, {r0, r1, r7}
   1364c:	b	136ec <abort@plt+0x27b8>
   13650:	movw	r1, #20399	; 0x4faf
   13654:	movt	r1, #1
   13658:	mov	r0, #0
   1365c:	mov	r2, #5
   13660:	bl	10d84 <dcgettext@plt>
   13664:	mov	r2, r0
   13668:	ldr	r3, [r7]
   1366c:	ldmib	r7, {r0, r1, r6, r7}
   13670:	stm	sp, {r0, r1, r6, r7}
   13674:	b	136ec <abort@plt+0x27b8>
   13678:	movw	r1, #20435	; 0x4fd3
   1367c:	movt	r1, #1
   13680:	mov	r0, #0
   13684:	mov	r2, #5
   13688:	bl	10d84 <dcgettext@plt>
   1368c:	mov	r2, r0
   13690:	ldr	r3, [r7]
   13694:	ldmib	r7, {r0, r1, r6}
   13698:	ldr	r5, [r7, #16]
   1369c:	ldr	r7, [r7, #20]
   136a0:	stm	sp, {r0, r1, r6}
   136a4:	str	r5, [sp, #12]
   136a8:	str	r7, [sp, #16]
   136ac:	b	136ec <abort@plt+0x27b8>
   136b0:	movw	r1, #20475	; 0x4ffb
   136b4:	movt	r1, #1
   136b8:	mov	r0, #0
   136bc:	mov	r2, #5
   136c0:	bl	10d84 <dcgettext@plt>
   136c4:	mov	r2, r0
   136c8:	ldr	r3, [r7]
   136cc:	ldmib	r7, {r0, r1, r6}
   136d0:	ldr	r5, [r7, #16]
   136d4:	ldr	r4, [r7, #20]
   136d8:	ldr	r7, [r7, #24]
   136dc:	stm	sp, {r0, r1, r6}
   136e0:	str	r5, [sp, #12]
   136e4:	str	r4, [sp, #16]
   136e8:	str	r7, [sp, #20]
   136ec:	mov	r0, r8
   136f0:	mov	r1, #1
   136f4:	b	137a0 <abort@plt+0x286c>
   136f8:	movw	r1, #20567	; 0x5057
   136fc:	movt	r1, #1
   13700:	mov	r0, #0
   13704:	mov	r2, #5
   13708:	bl	10d84 <dcgettext@plt>
   1370c:	mov	ip, r0
   13710:	ldr	r3, [r7]
   13714:	ldr	r0, [r7, #4]
   13718:	ldr	r1, [r7, #8]
   1371c:	ldr	r6, [r7, #12]
   13720:	ldr	r5, [r7, #16]
   13724:	ldr	r4, [r7, #20]
   13728:	ldr	r2, [r7, #24]
   1372c:	ldr	lr, [r7, #28]
   13730:	ldr	r7, [r7, #32]
   13734:	stm	sp, {r0, r1, r6}
   13738:	str	r5, [sp, #12]
   1373c:	str	r4, [sp, #16]
   13740:	str	r2, [sp, #20]
   13744:	str	lr, [sp, #24]
   13748:	str	r7, [sp, #28]
   1374c:	b	13794 <abort@plt+0x2860>
   13750:	movw	r1, #20519	; 0x5027
   13754:	movt	r1, #1
   13758:	mov	r0, #0
   1375c:	mov	r2, #5
   13760:	bl	10d84 <dcgettext@plt>
   13764:	mov	ip, r0
   13768:	ldr	r3, [r7]
   1376c:	ldmib	r7, {r0, r1, r6}
   13770:	ldr	r5, [r7, #16]
   13774:	ldr	r4, [r7, #20]
   13778:	ldr	r2, [r7, #24]
   1377c:	ldr	r7, [r7, #28]
   13780:	stm	sp, {r0, r1, r6}
   13784:	str	r5, [sp, #12]
   13788:	str	r4, [sp, #16]
   1378c:	str	r2, [sp, #20]
   13790:	str	r7, [sp, #24]
   13794:	mov	r0, r8
   13798:	mov	r1, #1
   1379c:	mov	r2, ip
   137a0:	bl	10ebc <__fprintf_chk@plt>
   137a4:	sub	sp, fp, #24
   137a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   137ac:	push	{r4, sl, fp, lr}
   137b0:	add	fp, sp, #8
   137b4:	sub	sp, sp, #8
   137b8:	mov	lr, #0
   137bc:	ldr	ip, [fp, #8]
   137c0:	ldr	r4, [ip, lr, lsl #2]
   137c4:	add	lr, lr, #1
   137c8:	cmp	r4, #0
   137cc:	bne	137c0 <abort@plt+0x288c>
   137d0:	sub	r4, lr, #1
   137d4:	str	ip, [sp]
   137d8:	str	r4, [sp, #4]
   137dc:	bl	13478 <abort@plt+0x2544>
   137e0:	sub	sp, fp, #8
   137e4:	pop	{r4, sl, fp, pc}
   137e8:	push	{r4, r5, fp, lr}
   137ec:	add	fp, sp, #8
   137f0:	sub	sp, sp, #48	; 0x30
   137f4:	mov	ip, #0
   137f8:	ldr	r4, [fp, #8]
   137fc:	add	lr, sp, #8
   13800:	ldr	r5, [r4]
   13804:	str	r5, [lr, ip, lsl #2]
   13808:	cmp	r5, #0
   1380c:	beq	13824 <abort@plt+0x28f0>
   13810:	add	ip, ip, #1
   13814:	add	r4, r4, #4
   13818:	cmp	ip, #10
   1381c:	bne	13800 <abort@plt+0x28cc>
   13820:	mov	ip, #10
   13824:	str	lr, [sp]
   13828:	str	ip, [sp, #4]
   1382c:	bl	13478 <abort@plt+0x2544>
   13830:	sub	sp, fp, #8
   13834:	pop	{r4, r5, fp, pc}
   13838:	push	{fp, lr}
   1383c:	mov	fp, sp
   13840:	sub	sp, sp, #8
   13844:	add	ip, fp, #8
   13848:	str	ip, [sp, #4]
   1384c:	str	ip, [sp]
   13850:	bl	137e8 <abort@plt+0x28b4>
   13854:	mov	sp, fp
   13858:	pop	{fp, pc}
   1385c:	push	{fp, lr}
   13860:	mov	fp, sp
   13864:	movw	r0, #24884	; 0x6134
   13868:	movt	r0, #2
   1386c:	ldr	r1, [r0]
   13870:	movw	r0, #19113	; 0x4aa9
   13874:	movt	r0, #1
   13878:	bl	10d18 <fputs_unlocked@plt>
   1387c:	movw	r1, #20679	; 0x50c7
   13880:	movt	r1, #1
   13884:	mov	r0, #0
   13888:	mov	r2, #5
   1388c:	bl	10d84 <dcgettext@plt>
   13890:	mov	r1, r0
   13894:	movw	r2, #20699	; 0x50db
   13898:	movt	r2, #1
   1389c:	mov	r0, #1
   138a0:	bl	10e98 <__printf_chk@plt>
   138a4:	movw	r1, #20721	; 0x50f1
   138a8:	movt	r1, #1
   138ac:	mov	r0, #0
   138b0:	mov	r2, #5
   138b4:	bl	10d84 <dcgettext@plt>
   138b8:	mov	r1, r0
   138bc:	movw	r2, #19244	; 0x4b2c
   138c0:	movt	r2, #1
   138c4:	movw	r3, #19469	; 0x4c0d
   138c8:	movt	r3, #1
   138cc:	mov	r0, #1
   138d0:	bl	10e98 <__printf_chk@plt>
   138d4:	movw	r1, #20741	; 0x5105
   138d8:	movt	r1, #1
   138dc:	mov	r0, #0
   138e0:	mov	r2, #5
   138e4:	bl	10d84 <dcgettext@plt>
   138e8:	mov	r1, r0
   138ec:	movw	r2, #20780	; 0x512c
   138f0:	movt	r2, #1
   138f4:	mov	r0, #1
   138f8:	pop	{fp, lr}
   138fc:	b	10e98 <__printf_chk@plt>
   13900:	b	13904 <abort@plt+0x29d0>
   13904:	push	{r4, r5, r6, sl, fp, lr}
   13908:	add	fp, sp, #16
   1390c:	mov	r4, r2
   13910:	mov	r5, r1
   13914:	mov	r6, r0
   13918:	bl	146fc <abort@plt+0x37c8>
   1391c:	cmp	r0, #0
   13920:	popne	{r4, r5, r6, sl, fp, pc}
   13924:	cmp	r6, #0
   13928:	beq	1393c <abort@plt+0x2a08>
   1392c:	cmp	r5, #0
   13930:	cmpne	r4, #0
   13934:	bne	1393c <abort@plt+0x2a08>
   13938:	pop	{r4, r5, r6, sl, fp, pc}
   1393c:	bl	13cc8 <abort@plt+0x2d94>
   13940:	push	{fp, lr}
   13944:	mov	fp, sp
   13948:	bl	13ec0 <abort@plt+0x2f8c>
   1394c:	pop	{fp, lr}
   13950:	b	13954 <abort@plt+0x2a20>
   13954:	cmp	r0, #0
   13958:	bxne	lr
   1395c:	push	{fp, lr}
   13960:	mov	fp, sp
   13964:	bl	13cc8 <abort@plt+0x2d94>
   13968:	push	{fp, lr}
   1396c:	mov	fp, sp
   13970:	bl	1462c <abort@plt+0x36f8>
   13974:	pop	{fp, lr}
   13978:	b	13954 <abort@plt+0x2a20>
   1397c:	b	13940 <abort@plt+0x2a0c>
   13980:	push	{r4, r5, fp, lr}
   13984:	add	fp, sp, #8
   13988:	mov	r4, r1
   1398c:	mov	r5, r0
   13990:	bl	13ef0 <abort@plt+0x2fbc>
   13994:	cmp	r0, #0
   13998:	popne	{r4, r5, fp, pc}
   1399c:	cmp	r5, #0
   139a0:	beq	139b0 <abort@plt+0x2a7c>
   139a4:	cmp	r4, #0
   139a8:	bne	139b0 <abort@plt+0x2a7c>
   139ac:	pop	{r4, r5, fp, pc}
   139b0:	bl	13cc8 <abort@plt+0x2d94>
   139b4:	push	{fp, lr}
   139b8:	mov	fp, sp
   139bc:	bl	14630 <abort@plt+0x36fc>
   139c0:	pop	{fp, lr}
   139c4:	b	13954 <abort@plt+0x2a20>
   139c8:	push	{fp, lr}
   139cc:	mov	fp, sp
   139d0:	bl	14640 <abort@plt+0x370c>
   139d4:	pop	{fp, lr}
   139d8:	b	13954 <abort@plt+0x2a20>
   139dc:	mov	r2, r1
   139e0:	mov	r1, r0
   139e4:	mov	r0, #0
   139e8:	b	13904 <abort@plt+0x29d0>
   139ec:	mov	r2, r1
   139f0:	mov	r1, r0
   139f4:	mov	r0, #0
   139f8:	b	139c8 <abort@plt+0x2a94>
   139fc:	mov	r2, #1
   13a00:	b	13a04 <abort@plt+0x2ad0>
   13a04:	push	{r4, r5, fp, lr}
   13a08:	add	fp, sp, #8
   13a0c:	mov	r4, r1
   13a10:	ldr	r5, [r1]
   13a14:	cmp	r0, #0
   13a18:	beq	13a30 <abort@plt+0x2afc>
   13a1c:	mov	r1, #1
   13a20:	add	r1, r1, r5, lsr #1
   13a24:	adds	r5, r5, r1
   13a28:	bcc	13a48 <abort@plt+0x2b14>
   13a2c:	bl	13cc8 <abort@plt+0x2d94>
   13a30:	cmp	r5, #0
   13a34:	bne	13a48 <abort@plt+0x2b14>
   13a38:	mov	r1, #64	; 0x40
   13a3c:	udiv	r5, r1, r2
   13a40:	cmp	r2, #64	; 0x40
   13a44:	addhi	r5, r5, #1
   13a48:	mov	r1, r5
   13a4c:	bl	13904 <abort@plt+0x29d0>
   13a50:	str	r5, [r4]
   13a54:	pop	{r4, r5, fp, pc}
   13a58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a5c:	add	fp, sp, #24
   13a60:	mov	r8, r1
   13a64:	ldr	r6, [r1]
   13a68:	add	r1, r6, r6, asr #1
   13a6c:	cmp	r1, r6
   13a70:	mvnvs	r1, #-2147483648	; 0x80000000
   13a74:	cmp	r1, r3
   13a78:	mov	r5, r1
   13a7c:	movgt	r5, r3
   13a80:	cmn	r3, #1
   13a84:	movle	r5, r1
   13a88:	ldr	r4, [fp, #8]
   13a8c:	cmn	r4, #1
   13a90:	ble	13ab8 <abort@plt+0x2b84>
   13a94:	cmp	r4, #0
   13a98:	beq	13b0c <abort@plt+0x2bd8>
   13a9c:	cmn	r5, #1
   13aa0:	ble	13ae0 <abort@plt+0x2bac>
   13aa4:	mvn	r7, #-2147483648	; 0x80000000
   13aa8:	udiv	r1, r7, r4
   13aac:	cmp	r1, r5
   13ab0:	bge	13b0c <abort@plt+0x2bd8>
   13ab4:	b	13b1c <abort@plt+0x2be8>
   13ab8:	cmn	r5, #1
   13abc:	ble	13afc <abort@plt+0x2bc8>
   13ac0:	cmn	r4, #1
   13ac4:	beq	13b0c <abort@plt+0x2bd8>
   13ac8:	mov	r1, #-2147483648	; 0x80000000
   13acc:	sdiv	r1, r1, r4
   13ad0:	mvn	r7, #-2147483648	; 0x80000000
   13ad4:	cmp	r1, r5
   13ad8:	bge	13b0c <abort@plt+0x2bd8>
   13adc:	b	13b1c <abort@plt+0x2be8>
   13ae0:	beq	13b0c <abort@plt+0x2bd8>
   13ae4:	mov	r1, #-2147483648	; 0x80000000
   13ae8:	sdiv	r1, r1, r5
   13aec:	mvn	r7, #-2147483648	; 0x80000000
   13af0:	cmp	r1, r4
   13af4:	bge	13b0c <abort@plt+0x2bd8>
   13af8:	b	13b1c <abort@plt+0x2be8>
   13afc:	mvn	r7, #-2147483648	; 0x80000000
   13b00:	sdiv	r1, r7, r4
   13b04:	cmp	r5, r1
   13b08:	blt	13b1c <abort@plt+0x2be8>
   13b0c:	mul	r1, r5, r4
   13b10:	mov	r7, #64	; 0x40
   13b14:	cmp	r1, #63	; 0x3f
   13b18:	bgt	13b24 <abort@plt+0x2bf0>
   13b1c:	sdiv	r5, r7, r4
   13b20:	mul	r1, r5, r4
   13b24:	cmp	r0, #0
   13b28:	moveq	r7, #0
   13b2c:	streq	r7, [r8]
   13b30:	sub	r7, r5, r6
   13b34:	cmp	r7, r2
   13b38:	bge	13be4 <abort@plt+0x2cb0>
   13b3c:	add	r5, r6, r2
   13b40:	mov	r1, #0
   13b44:	cmp	r5, r3
   13b48:	mov	r2, #0
   13b4c:	movwgt	r2, #1
   13b50:	cmn	r3, #1
   13b54:	movwgt	r1, #1
   13b58:	cmp	r5, r6
   13b5c:	bvs	13bcc <abort@plt+0x2c98>
   13b60:	ands	r1, r1, r2
   13b64:	bne	13bcc <abort@plt+0x2c98>
   13b68:	cmn	r4, #1
   13b6c:	ble	13b94 <abort@plt+0x2c60>
   13b70:	cmp	r4, #0
   13b74:	beq	13be0 <abort@plt+0x2cac>
   13b78:	cmn	r5, #1
   13b7c:	ble	13bb8 <abort@plt+0x2c84>
   13b80:	mvn	r1, #-2147483648	; 0x80000000
   13b84:	udiv	r1, r1, r4
   13b88:	cmp	r1, r5
   13b8c:	bge	13be0 <abort@plt+0x2cac>
   13b90:	b	13bcc <abort@plt+0x2c98>
   13b94:	cmn	r5, #1
   13b98:	ble	13bd0 <abort@plt+0x2c9c>
   13b9c:	cmn	r4, #1
   13ba0:	beq	13be0 <abort@plt+0x2cac>
   13ba4:	mov	r1, #-2147483648	; 0x80000000
   13ba8:	sdiv	r1, r1, r4
   13bac:	cmp	r1, r5
   13bb0:	bge	13be0 <abort@plt+0x2cac>
   13bb4:	b	13bcc <abort@plt+0x2c98>
   13bb8:	beq	13be0 <abort@plt+0x2cac>
   13bbc:	mov	r1, #-2147483648	; 0x80000000
   13bc0:	sdiv	r1, r1, r5
   13bc4:	cmp	r1, r4
   13bc8:	bge	13be0 <abort@plt+0x2cac>
   13bcc:	bl	13cc8 <abort@plt+0x2d94>
   13bd0:	mvn	r1, #-2147483648	; 0x80000000
   13bd4:	sdiv	r1, r1, r4
   13bd8:	cmp	r5, r1
   13bdc:	blt	13bcc <abort@plt+0x2c98>
   13be0:	mul	r1, r5, r4
   13be4:	bl	13980 <abort@plt+0x2a4c>
   13be8:	str	r5, [r8]
   13bec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13bf0:	mov	r1, #1
   13bf4:	b	13bf8 <abort@plt+0x2cc4>
   13bf8:	push	{fp, lr}
   13bfc:	mov	fp, sp
   13c00:	bl	13e6c <abort@plt+0x2f38>
   13c04:	pop	{fp, lr}
   13c08:	b	13954 <abort@plt+0x2a20>
   13c0c:	mov	r1, #1
   13c10:	b	13c14 <abort@plt+0x2ce0>
   13c14:	push	{fp, lr}
   13c18:	mov	fp, sp
   13c1c:	bl	1463c <abort@plt+0x3708>
   13c20:	pop	{fp, lr}
   13c24:	b	13954 <abort@plt+0x2a20>
   13c28:	push	{r4, r5, fp, lr}
   13c2c:	add	fp, sp, #8
   13c30:	mov	r4, r1
   13c34:	mov	r5, r0
   13c38:	mov	r0, r1
   13c3c:	bl	13940 <abort@plt+0x2a0c>
   13c40:	mov	r1, r5
   13c44:	mov	r2, r4
   13c48:	pop	{r4, r5, fp, lr}
   13c4c:	b	10d6c <memcpy@plt>
   13c50:	push	{r4, r5, fp, lr}
   13c54:	add	fp, sp, #8
   13c58:	mov	r4, r1
   13c5c:	mov	r5, r0
   13c60:	mov	r0, r1
   13c64:	bl	13968 <abort@plt+0x2a34>
   13c68:	mov	r1, r5
   13c6c:	mov	r2, r4
   13c70:	pop	{r4, r5, fp, lr}
   13c74:	b	10d6c <memcpy@plt>
   13c78:	push	{r4, r5, fp, lr}
   13c7c:	add	fp, sp, #8
   13c80:	mov	r4, r1
   13c84:	mov	r5, r0
   13c88:	add	r0, r1, #1
   13c8c:	bl	13968 <abort@plt+0x2a34>
   13c90:	mov	r1, #0
   13c94:	strb	r1, [r0, r4]
   13c98:	mov	r1, r5
   13c9c:	mov	r2, r4
   13ca0:	pop	{r4, r5, fp, lr}
   13ca4:	b	10d6c <memcpy@plt>
   13ca8:	push	{r4, sl, fp, lr}
   13cac:	add	fp, sp, #8
   13cb0:	mov	r4, r0
   13cb4:	bl	10e68 <strlen@plt>
   13cb8:	add	r1, r0, #1
   13cbc:	mov	r0, r4
   13cc0:	pop	{r4, sl, fp, lr}
   13cc4:	b	13c28 <abort@plt+0x2cf4>
   13cc8:	push	{fp, lr}
   13ccc:	mov	fp, sp
   13cd0:	movw	r0, #24796	; 0x60dc
   13cd4:	movt	r0, #2
   13cd8:	ldr	r4, [r0]
   13cdc:	movw	r1, #20856	; 0x5178
   13ce0:	movt	r1, #1
   13ce4:	mov	r0, #0
   13ce8:	mov	r2, #5
   13cec:	bl	10d84 <dcgettext@plt>
   13cf0:	mov	r3, r0
   13cf4:	movw	r2, #19751	; 0x4d27
   13cf8:	movt	r2, #1
   13cfc:	mov	r0, r4
   13d00:	mov	r1, #0
   13d04:	bl	10dfc <error@plt>
   13d08:	bl	10f34 <abort@plt>
   13d0c:	andeq	r0, r0, r0
   13d10:	push	{r4, r5, r6, sl, fp, lr}
   13d14:	add	fp, sp, #16
   13d18:	vpush	{d8}
   13d1c:	sub	sp, sp, #8
   13d20:	vmov.f64	d8, d0
   13d24:	vldr	d16, [pc, #156]	; 13dc8 <abort@plt+0x2e94>
   13d28:	vcmpe.f64	d0, d16
   13d2c:	vmrs	APSR_nzcv, fpscr
   13d30:	blt	13d48 <abort@plt+0x2e14>
   13d34:	bl	10d30 <pause@plt>
   13d38:	bl	10e74 <__errno_location@plt>
   13d3c:	ldr	r0, [r0]
   13d40:	cmp	r0, #4
   13d44:	beq	13d34 <abort@plt+0x2e00>
   13d48:	mov	r6, sp
   13d4c:	mov	r0, r6
   13d50:	vmov.f64	d0, d8
   13d54:	bl	14370 <abort@plt+0x343c>
   13d58:	bl	10e74 <__errno_location@plt>
   13d5c:	mov	r4, r0
   13d60:	mov	r5, #0
   13d64:	str	r5, [r0]
   13d68:	mov	r0, r6
   13d6c:	mov	r1, r6
   13d70:	bl	10d54 <nanosleep@plt>
   13d74:	cmp	r0, #0
   13d78:	beq	13db4 <abort@plt+0x2e80>
   13d7c:	mov	r6, sp
   13d80:	mov	r5, #0
   13d84:	ldr	r0, [r4]
   13d88:	orr	r0, r0, #4
   13d8c:	cmp	r0, #4
   13d90:	bne	13db0 <abort@plt+0x2e7c>
   13d94:	str	r5, [r4]
   13d98:	mov	r0, r6
   13d9c:	mov	r1, r6
   13da0:	bl	10d54 <nanosleep@plt>
   13da4:	cmp	r0, #0
   13da8:	bne	13d84 <abort@plt+0x2e50>
   13dac:	b	13db4 <abort@plt+0x2e80>
   13db0:	mvn	r5, #0
   13db4:	mov	r0, r5
   13db8:	sub	sp, fp, #24
   13dbc:	vpop	{d8}
   13dc0:	pop	{r4, r5, r6, sl, fp, pc}
   13dc4:	nop	{0}
   13dc8:	andeq	r0, r0, r0
   13dcc:	mvnmi	r0, r0
   13dd0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13dd4:	add	fp, sp, #24
   13dd8:	sub	sp, sp, #8
   13ddc:	mov	r4, r3
   13de0:	mov	r8, r2
   13de4:	mov	r9, r1
   13de8:	mov	r5, r0
   13dec:	bl	10e74 <__errno_location@plt>
   13df0:	mov	r7, r0
   13df4:	mov	r6, #0
   13df8:	str	r6, [r0]
   13dfc:	add	r1, sp, #4
   13e00:	mov	r0, r5
   13e04:	blx	r4
   13e08:	ldr	r0, [sp, #4]
   13e0c:	cmp	r0, r5
   13e10:	beq	13e50 <abort@plt+0x2f1c>
   13e14:	cmp	r9, #0
   13e18:	beq	13e38 <abort@plt+0x2f04>
   13e1c:	vcmp.f64	d0, #0.0
   13e20:	vmrs	APSR_nzcv, fpscr
   13e24:	beq	13e4c <abort@plt+0x2f18>
   13e28:	ldr	r0, [r7]
   13e2c:	subs	r6, r0, #34	; 0x22
   13e30:	movwne	r6, #1
   13e34:	b	13e50 <abort@plt+0x2f1c>
   13e38:	ldrb	r0, [r0]
   13e3c:	mov	r6, #0
   13e40:	cmp	r0, #0
   13e44:	bne	13e5c <abort@plt+0x2f28>
   13e48:	b	13e1c <abort@plt+0x2ee8>
   13e4c:	mov	r6, #1
   13e50:	cmp	r9, #0
   13e54:	ldrne	r0, [sp, #4]
   13e58:	strne	r0, [r9]
   13e5c:	vstr	d0, [r8]
   13e60:	mov	r0, r6
   13e64:	sub	sp, fp, #24
   13e68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13e6c:	clz	r2, r1
   13e70:	lsr	r2, r2, #5
   13e74:	clz	r3, r0
   13e78:	lsr	r3, r3, #5
   13e7c:	orrs	r2, r3, r2
   13e80:	movwne	r1, #1
   13e84:	movwne	r0, #1
   13e88:	cmp	r1, #0
   13e8c:	beq	13ebc <abort@plt+0x2f88>
   13e90:	mvn	r2, #-2147483648	; 0x80000000
   13e94:	udiv	r2, r2, r1
   13e98:	cmp	r2, r0
   13e9c:	bcs	13ebc <abort@plt+0x2f88>
   13ea0:	push	{fp, lr}
   13ea4:	mov	fp, sp
   13ea8:	bl	10e74 <__errno_location@plt>
   13eac:	mov	r1, #12
   13eb0:	str	r1, [r0]
   13eb4:	mov	r0, #0
   13eb8:	pop	{fp, pc}
   13ebc:	b	10d0c <calloc@plt>
   13ec0:	cmp	r0, #0
   13ec4:	movweq	r0, #1
   13ec8:	cmn	r0, #1
   13ecc:	ble	13ed4 <abort@plt+0x2fa0>
   13ed0:	b	10e08 <malloc@plt>
   13ed4:	push	{fp, lr}
   13ed8:	mov	fp, sp
   13edc:	bl	10e74 <__errno_location@plt>
   13ee0:	mov	r1, #12
   13ee4:	str	r1, [r0]
   13ee8:	mov	r0, #0
   13eec:	pop	{fp, pc}
   13ef0:	push	{fp, lr}
   13ef4:	mov	fp, sp
   13ef8:	cmp	r0, #0
   13efc:	beq	13f18 <abort@plt+0x2fe4>
   13f00:	cmp	r1, #0
   13f04:	beq	13f24 <abort@plt+0x2ff0>
   13f08:	cmn	r1, #1
   13f0c:	ble	13f30 <abort@plt+0x2ffc>
   13f10:	pop	{fp, lr}
   13f14:	b	10d90 <realloc@plt>
   13f18:	mov	r0, r1
   13f1c:	pop	{fp, lr}
   13f20:	b	13ec0 <abort@plt+0x2f8c>
   13f24:	bl	14540 <abort@plt+0x360c>
   13f28:	mov	r0, #0
   13f2c:	pop	{fp, pc}
   13f30:	bl	10e74 <__errno_location@plt>
   13f34:	mov	r1, #12
   13f38:	str	r1, [r0]
   13f3c:	mov	r0, #0
   13f40:	pop	{fp, pc}
   13f44:	mov	r1, r0
   13f48:	sub	r2, r0, #65	; 0x41
   13f4c:	mov	r0, #1
   13f50:	cmp	r2, #26
   13f54:	subcs	r2, r1, #97	; 0x61
   13f58:	cmpcs	r2, #26
   13f5c:	bcs	13f64 <abort@plt+0x3030>
   13f60:	bx	lr
   13f64:	sub	r1, r1, #48	; 0x30
   13f68:	cmp	r1, #10
   13f6c:	movcs	r0, #0
   13f70:	bx	lr
   13f74:	mov	r1, r0
   13f78:	sub	r2, r0, #65	; 0x41
   13f7c:	mov	r0, #1
   13f80:	cmp	r2, #26
   13f84:	subcs	r1, r1, #97	; 0x61
   13f88:	cmpcs	r1, #26
   13f8c:	movcs	r0, #0
   13f90:	bx	lr
   13f94:	mov	r1, #0
   13f98:	cmp	r0, #128	; 0x80
   13f9c:	movwcc	r1, #1
   13fa0:	mov	r0, r1
   13fa4:	bx	lr
   13fa8:	sub	r1, r0, #9
   13fac:	clz	r1, r1
   13fb0:	lsr	r1, r1, #5
   13fb4:	sub	r0, r0, #32
   13fb8:	clz	r0, r0
   13fbc:	lsr	r0, r0, #5
   13fc0:	orr	r0, r0, r1
   13fc4:	bx	lr
   13fc8:	mov	r1, r0
   13fcc:	mov	r0, #1
   13fd0:	cmp	r1, #32
   13fd4:	bxcc	lr
   13fd8:	cmp	r1, #127	; 0x7f
   13fdc:	movne	r0, #0
   13fe0:	bx	lr
   13fe4:	sub	r1, r0, #48	; 0x30
   13fe8:	mov	r0, #0
   13fec:	cmp	r1, #10
   13ff0:	movwcc	r0, #1
   13ff4:	bx	lr
   13ff8:	sub	r1, r0, #33	; 0x21
   13ffc:	mov	r0, #0
   14000:	cmp	r1, #94	; 0x5e
   14004:	movwcc	r0, #1
   14008:	bx	lr
   1400c:	sub	r1, r0, #97	; 0x61
   14010:	mov	r0, #0
   14014:	cmp	r1, #26
   14018:	movwcc	r0, #1
   1401c:	bx	lr
   14020:	sub	r1, r0, #32
   14024:	mov	r0, #0
   14028:	cmp	r1, #95	; 0x5f
   1402c:	movwcc	r0, #1
   14030:	bx	lr
   14034:	sub	r1, r0, #33	; 0x21
   14038:	cmp	r1, #93	; 0x5d
   1403c:	bhi	141c8 <abort@plt+0x3294>
   14040:	mov	r0, #1
   14044:	add	r2, pc, #0
   14048:	ldr	pc, [r2, r1, lsl #2]
   1404c:	andeq	r4, r1, r4, asr #3
   14050:	andeq	r4, r1, r4, asr #3
   14054:	andeq	r4, r1, r4, asr #3
   14058:	andeq	r4, r1, r4, asr #3
   1405c:	andeq	r4, r1, r4, asr #3
   14060:	andeq	r4, r1, r4, asr #3
   14064:	andeq	r4, r1, r4, asr #3
   14068:	andeq	r4, r1, r4, asr #3
   1406c:	andeq	r4, r1, r4, asr #3
   14070:	andeq	r4, r1, r4, asr #3
   14074:	andeq	r4, r1, r4, asr #3
   14078:	andeq	r4, r1, r4, asr #3
   1407c:	andeq	r4, r1, r4, asr #3
   14080:	andeq	r4, r1, r4, asr #3
   14084:	andeq	r4, r1, r4, asr #3
   14088:	andeq	r4, r1, r8, asr #3
   1408c:	andeq	r4, r1, r8, asr #3
   14090:	andeq	r4, r1, r8, asr #3
   14094:	andeq	r4, r1, r8, asr #3
   14098:	andeq	r4, r1, r8, asr #3
   1409c:	andeq	r4, r1, r8, asr #3
   140a0:	andeq	r4, r1, r8, asr #3
   140a4:	andeq	r4, r1, r8, asr #3
   140a8:	andeq	r4, r1, r8, asr #3
   140ac:	andeq	r4, r1, r8, asr #3
   140b0:	andeq	r4, r1, r4, asr #3
   140b4:	andeq	r4, r1, r4, asr #3
   140b8:	andeq	r4, r1, r4, asr #3
   140bc:	andeq	r4, r1, r4, asr #3
   140c0:	andeq	r4, r1, r4, asr #3
   140c4:	andeq	r4, r1, r4, asr #3
   140c8:	andeq	r4, r1, r4, asr #3
   140cc:	andeq	r4, r1, r8, asr #3
   140d0:	andeq	r4, r1, r8, asr #3
   140d4:	andeq	r4, r1, r8, asr #3
   140d8:	andeq	r4, r1, r8, asr #3
   140dc:	andeq	r4, r1, r8, asr #3
   140e0:	andeq	r4, r1, r8, asr #3
   140e4:	andeq	r4, r1, r8, asr #3
   140e8:	andeq	r4, r1, r8, asr #3
   140ec:	andeq	r4, r1, r8, asr #3
   140f0:	andeq	r4, r1, r8, asr #3
   140f4:	andeq	r4, r1, r8, asr #3
   140f8:	andeq	r4, r1, r8, asr #3
   140fc:	andeq	r4, r1, r8, asr #3
   14100:	andeq	r4, r1, r8, asr #3
   14104:	andeq	r4, r1, r8, asr #3
   14108:	andeq	r4, r1, r8, asr #3
   1410c:	andeq	r4, r1, r8, asr #3
   14110:	andeq	r4, r1, r8, asr #3
   14114:	andeq	r4, r1, r8, asr #3
   14118:	andeq	r4, r1, r8, asr #3
   1411c:	andeq	r4, r1, r8, asr #3
   14120:	andeq	r4, r1, r8, asr #3
   14124:	andeq	r4, r1, r8, asr #3
   14128:	andeq	r4, r1, r8, asr #3
   1412c:	andeq	r4, r1, r8, asr #3
   14130:	andeq	r4, r1, r8, asr #3
   14134:	andeq	r4, r1, r4, asr #3
   14138:	andeq	r4, r1, r4, asr #3
   1413c:	andeq	r4, r1, r4, asr #3
   14140:	andeq	r4, r1, r4, asr #3
   14144:	andeq	r4, r1, r4, asr #3
   14148:	andeq	r4, r1, r4, asr #3
   1414c:	andeq	r4, r1, r8, asr #3
   14150:	andeq	r4, r1, r8, asr #3
   14154:	andeq	r4, r1, r8, asr #3
   14158:	andeq	r4, r1, r8, asr #3
   1415c:	andeq	r4, r1, r8, asr #3
   14160:	andeq	r4, r1, r8, asr #3
   14164:	andeq	r4, r1, r8, asr #3
   14168:	andeq	r4, r1, r8, asr #3
   1416c:	andeq	r4, r1, r8, asr #3
   14170:	andeq	r4, r1, r8, asr #3
   14174:	andeq	r4, r1, r8, asr #3
   14178:	andeq	r4, r1, r8, asr #3
   1417c:	andeq	r4, r1, r8, asr #3
   14180:	andeq	r4, r1, r8, asr #3
   14184:	andeq	r4, r1, r8, asr #3
   14188:	andeq	r4, r1, r8, asr #3
   1418c:	andeq	r4, r1, r8, asr #3
   14190:	andeq	r4, r1, r8, asr #3
   14194:	andeq	r4, r1, r8, asr #3
   14198:	andeq	r4, r1, r8, asr #3
   1419c:	andeq	r4, r1, r8, asr #3
   141a0:	andeq	r4, r1, r8, asr #3
   141a4:	andeq	r4, r1, r8, asr #3
   141a8:	andeq	r4, r1, r8, asr #3
   141ac:	andeq	r4, r1, r8, asr #3
   141b0:	andeq	r4, r1, r8, asr #3
   141b4:	andeq	r4, r1, r4, asr #3
   141b8:	andeq	r4, r1, r4, asr #3
   141bc:	andeq	r4, r1, r4, asr #3
   141c0:	andeq	r4, r1, r4, asr #3
   141c4:	bx	lr
   141c8:	mov	r0, #0
   141cc:	bx	lr
   141d0:	sub	r0, r0, #9
   141d4:	cmp	r0, #23
   141d8:	movhi	r0, #0
   141dc:	bxhi	lr
   141e0:	bic	r0, r0, #-16777216	; 0xff000000
   141e4:	movw	r1, #31
   141e8:	movt	r1, #128	; 0x80
   141ec:	mov	r2, #1
   141f0:	and	r0, r2, r1, lsr r0
   141f4:	bx	lr
   141f8:	sub	r1, r0, #65	; 0x41
   141fc:	mov	r0, #0
   14200:	cmp	r1, #26
   14204:	movwcc	r0, #1
   14208:	bx	lr
   1420c:	mov	r1, r0
   14210:	sub	r2, r0, #48	; 0x30
   14214:	mov	r0, #1
   14218:	cmp	r2, #22
   1421c:	bhi	14234 <abort@plt+0x3300>
   14220:	mov	ip, #1
   14224:	movw	r3, #1023	; 0x3ff
   14228:	movt	r3, #126	; 0x7e
   1422c:	tst	r3, ip, lsl r2
   14230:	bxne	lr
   14234:	sub	r1, r1, #97	; 0x61
   14238:	cmp	r1, #6
   1423c:	movcs	r0, #0
   14240:	bxcs	lr
   14244:	bx	lr
   14248:	sub	r1, r0, #65	; 0x41
   1424c:	cmp	r1, #26
   14250:	addcc	r0, r0, #32
   14254:	bx	lr
   14258:	sub	r1, r0, #97	; 0x61
   1425c:	cmp	r1, #26
   14260:	subcc	r0, r0, #32
   14264:	bx	lr
   14268:	push	{r4, r5, fp, lr}
   1426c:	add	fp, sp, #8
   14270:	mov	r4, r1
   14274:	mov	r5, r0
   14278:	bl	142a8 <abort@plt+0x3374>
   1427c:	cmp	r0, #0
   14280:	beq	14298 <abort@plt+0x3364>
   14284:	mov	r2, r0
   14288:	mov	r0, r5
   1428c:	mov	r1, r4
   14290:	pop	{r4, r5, fp, lr}
   14294:	b	10ee0 <strtod_l@plt>
   14298:	cmp	r4, #0
   1429c:	strne	r5, [r4]
   142a0:	vmov.i32	d0, #0	; 0x00000000
   142a4:	pop	{r4, r5, fp, pc}
   142a8:	push	{r4, sl, fp, lr}
   142ac:	add	fp, sp, #8
   142b0:	movw	r4, #25216	; 0x6280
   142b4:	movt	r4, #2
   142b8:	ldr	r0, [r4]
   142bc:	cmp	r0, #0
   142c0:	beq	142cc <abort@plt+0x3398>
   142c4:	ldr	r0, [r4]
   142c8:	pop	{r4, sl, fp, pc}
   142cc:	movw	r1, #20873	; 0x5189
   142d0:	movt	r1, #1
   142d4:	movw	r0, #8127	; 0x1fbf
   142d8:	mov	r2, #0
   142dc:	bl	10f10 <newlocale@plt>
   142e0:	str	r0, [r4]
   142e4:	ldr	r0, [r4]
   142e8:	pop	{r4, sl, fp, pc}
   142ec:	push	{r4, r5, r6, sl, fp, lr}
   142f0:	add	fp, sp, #16
   142f4:	mov	r4, r0
   142f8:	bl	10dd8 <__fpending@plt>
   142fc:	mov	r5, r0
   14300:	mov	r0, r4
   14304:	bl	10de4 <ferror_unlocked@plt>
   14308:	mov	r6, r0
   1430c:	mov	r0, r4
   14310:	bl	14438 <abort@plt+0x3504>
   14314:	cmp	r6, #0
   14318:	beq	1433c <abort@plt+0x3408>
   1431c:	mvn	r4, #0
   14320:	cmp	r0, #0
   14324:	bne	14368 <abort@plt+0x3434>
   14328:	bl	10e74 <__errno_location@plt>
   1432c:	mov	r1, #0
   14330:	str	r1, [r0]
   14334:	mov	r0, r4
   14338:	pop	{r4, r5, r6, sl, fp, pc}
   1433c:	cmp	r0, #0
   14340:	mov	r4, r0
   14344:	mvnne	r4, #0
   14348:	cmp	r5, #0
   1434c:	bne	14368 <abort@plt+0x3434>
   14350:	cmp	r0, #0
   14354:	beq	14368 <abort@plt+0x3434>
   14358:	bl	10e74 <__errno_location@plt>
   1435c:	ldr	r0, [r0]
   14360:	subs	r4, r0, #9
   14364:	mvnne	r4, #0
   14368:	mov	r0, r4
   1436c:	pop	{r4, r5, r6, sl, fp, pc}
   14370:	push	{fp, lr}
   14374:	mov	fp, sp
   14378:	vldr	d16, [pc, #160]	; 14420 <abort@plt+0x34ec>
   1437c:	vcmpe.f64	d0, d16
   14380:	vmrs	APSR_nzcv, fpscr
   14384:	ble	14400 <abort@plt+0x34cc>
   14388:	vldr	d16, [pc, #152]	; 14428 <abort@plt+0x34f4>
   1438c:	movw	ip, #51712	; 0xca00
   14390:	movt	ip, #15258	; 0x3b9a
   14394:	vcmpe.f64	d0, d16
   14398:	vmrs	APSR_nzcv, fpscr
   1439c:	bpl	14410 <abort@plt+0x34dc>
   143a0:	vcvt.s32.f64	s2, d0
   143a4:	vldr	d16, [pc, #132]	; 14430 <abort@plt+0x34fc>
   143a8:	vmov	lr, s2
   143ac:	vcvt.f64.s32	d17, s2
   143b0:	vsub.f64	d17, d0, d17
   143b4:	vmul.f64	d16, d17, d16
   143b8:	vcvt.s32.f64	s0, d16
   143bc:	vmov	r2, s0
   143c0:	vcvt.f64.s32	d17, s0
   143c4:	vcmpe.f64	d16, d17
   143c8:	vmrs	APSR_nzcv, fpscr
   143cc:	addgt	r2, r2, #1
   143d0:	movw	r3, #12193	; 0x2fa1
   143d4:	movt	r3, #17592	; 0x44b8
   143d8:	smmul	r3, r2, r3
   143dc:	asr	r1, r3, #28
   143e0:	add	r1, r1, r3, lsr #31
   143e4:	mls	r2, r1, ip, r2
   143e8:	add	r1, r1, lr
   143ec:	add	r1, r1, r2, asr #31
   143f0:	cmp	r2, #0
   143f4:	addmi	r2, r2, ip
   143f8:	bl	14738 <abort@plt+0x3804>
   143fc:	pop	{fp, pc}
   14400:	mov	r1, #-2147483648	; 0x80000000
   14404:	mov	r2, #0
   14408:	bl	14738 <abort@plt+0x3804>
   1440c:	pop	{fp, pc}
   14410:	sub	r2, ip, #1
   14414:	mvn	r1, #-2147483648	; 0x80000000
   14418:	bl	14738 <abort@plt+0x3804>
   1441c:	pop	{fp, pc}
   14420:	andeq	r0, r0, r0
   14424:	mvngt	r0, r0
   14428:	andeq	r0, r0, r0
   1442c:	mvnmi	r0, r0
   14430:	andeq	r0, r0, r0
   14434:	bicmi	ip, sp, r5, ror #26
   14438:	push	{r4, r5, fp, lr}
   1443c:	add	fp, sp, #8
   14440:	sub	sp, sp, #8
   14444:	mov	r4, r0
   14448:	bl	10eb0 <fileno@plt>
   1444c:	cmn	r0, #1
   14450:	ble	144c8 <abort@plt+0x3594>
   14454:	mov	r0, r4
   14458:	bl	10e20 <__freading@plt>
   1445c:	cmp	r0, #0
   14460:	beq	1448c <abort@plt+0x3558>
   14464:	mov	r0, r4
   14468:	bl	10eb0 <fileno@plt>
   1446c:	mov	r1, #1
   14470:	str	r1, [sp]
   14474:	mov	r2, #0
   14478:	mov	r3, #0
   1447c:	bl	10dc0 <lseek64@plt>
   14480:	and	r0, r0, r1
   14484:	cmn	r0, #1
   14488:	beq	144c8 <abort@plt+0x3594>
   1448c:	mov	r0, r4
   14490:	bl	144d8 <abort@plt+0x35a4>
   14494:	cmp	r0, #0
   14498:	beq	144c8 <abort@plt+0x3594>
   1449c:	bl	10e74 <__errno_location@plt>
   144a0:	ldr	r5, [r0]
   144a4:	mov	r0, r4
   144a8:	bl	10ec8 <fclose@plt>
   144ac:	cmp	r5, #0
   144b0:	beq	144c0 <abort@plt+0x358c>
   144b4:	bl	10e74 <__errno_location@plt>
   144b8:	str	r5, [r0]
   144bc:	mvn	r0, #0
   144c0:	sub	sp, fp, #8
   144c4:	pop	{r4, r5, fp, pc}
   144c8:	mov	r0, r4
   144cc:	sub	sp, fp, #8
   144d0:	pop	{r4, r5, fp, lr}
   144d4:	b	10ec8 <fclose@plt>
   144d8:	push	{r4, sl, fp, lr}
   144dc:	add	fp, sp, #8
   144e0:	mov	r4, r0
   144e4:	cmp	r0, #0
   144e8:	beq	14500 <abort@plt+0x35cc>
   144ec:	mov	r0, r4
   144f0:	bl	10e20 <__freading@plt>
   144f4:	cmp	r0, #0
   144f8:	movne	r0, r4
   144fc:	blne	1450c <abort@plt+0x35d8>
   14500:	mov	r0, r4
   14504:	pop	{r4, sl, fp, lr}
   14508:	b	10d3c <fflush@plt>
   1450c:	push	{fp, lr}
   14510:	mov	fp, sp
   14514:	sub	sp, sp, #8
   14518:	ldrb	r1, [r0, #1]
   1451c:	tst	r1, #1
   14520:	beq	14538 <abort@plt+0x3604>
   14524:	mov	r1, #1
   14528:	str	r1, [sp]
   1452c:	mov	r2, #0
   14530:	mov	r3, #0
   14534:	bl	14568 <abort@plt+0x3634>
   14538:	mov	sp, fp
   1453c:	pop	{fp, pc}
   14540:	push	{r4, r5, r6, sl, fp, lr}
   14544:	add	fp, sp, #16
   14548:	mov	r4, r0
   1454c:	bl	10e74 <__errno_location@plt>
   14550:	mov	r5, r0
   14554:	ldr	r6, [r0]
   14558:	mov	r0, r4
   1455c:	bl	10d48 <free@plt>
   14560:	str	r6, [r5]
   14564:	pop	{r4, r5, r6, sl, fp, pc}
   14568:	push	{r4, r5, r6, r7, fp, lr}
   1456c:	add	fp, sp, #16
   14570:	sub	sp, sp, #8
   14574:	mov	r5, r3
   14578:	mov	r6, r2
   1457c:	mov	r4, r0
   14580:	ldr	r0, [r0, #4]
   14584:	ldr	r1, [r4, #8]
   14588:	cmp	r1, r0
   1458c:	bne	145a8 <abort@plt+0x3674>
   14590:	ldrd	r0, [r4, #16]
   14594:	cmp	r1, r0
   14598:	bne	145a8 <abort@plt+0x3674>
   1459c:	ldr	r0, [r4, #36]	; 0x24
   145a0:	cmp	r0, #0
   145a4:	beq	145c0 <abort@plt+0x368c>
   145a8:	mov	r0, r4
   145ac:	mov	r2, r6
   145b0:	mov	r3, r5
   145b4:	sub	sp, fp, #16
   145b8:	pop	{r4, r5, r6, r7, fp, lr}
   145bc:	b	10ed4 <fseeko64@plt>
   145c0:	ldr	r7, [fp, #8]
   145c4:	mov	r0, r4
   145c8:	bl	10eb0 <fileno@plt>
   145cc:	str	r7, [sp]
   145d0:	mov	r2, r6
   145d4:	mov	r3, r5
   145d8:	bl	10dc0 <lseek64@plt>
   145dc:	and	r2, r0, r1
   145e0:	cmn	r2, #1
   145e4:	beq	14604 <abort@plt+0x36d0>
   145e8:	strd	r0, [r4, #80]	; 0x50
   145ec:	ldr	r0, [r4]
   145f0:	bic	r0, r0, #16
   145f4:	str	r0, [r4]
   145f8:	mov	r0, #0
   145fc:	sub	sp, fp, #16
   14600:	pop	{r4, r5, r6, r7, fp, pc}
   14604:	mvn	r0, #0
   14608:	sub	sp, fp, #16
   1460c:	pop	{r4, r5, r6, r7, fp, pc}
   14610:	push	{fp, lr}
   14614:	mov	fp, sp
   14618:	bl	10e74 <__errno_location@plt>
   1461c:	mov	r1, #12
   14620:	str	r1, [r0]
   14624:	mov	r0, #0
   14628:	pop	{fp, pc}
   1462c:	b	13ec0 <abort@plt+0x2f8c>
   14630:	cmp	r1, #0
   14634:	orreq	r1, r1, #1
   14638:	b	13ef0 <abort@plt+0x2fbc>
   1463c:	b	13e6c <abort@plt+0x2f38>
   14640:	clz	r3, r2
   14644:	lsr	ip, r3, #5
   14648:	clz	r3, r1
   1464c:	lsr	r3, r3, #5
   14650:	orrs	r3, r3, ip
   14654:	movwne	r1, #1
   14658:	movwne	r2, #1
   1465c:	b	146fc <abort@plt+0x37c8>
   14660:	push	{fp, lr}
   14664:	mov	fp, sp
   14668:	mov	r0, #14
   1466c:	bl	10f04 <nl_langinfo@plt>
   14670:	movw	r1, #19114	; 0x4aaa
   14674:	movt	r1, #1
   14678:	cmp	r0, #0
   1467c:	movne	r1, r0
   14680:	ldrb	r2, [r1]
   14684:	movw	r0, #20875	; 0x518b
   14688:	movt	r0, #1
   1468c:	cmp	r2, #0
   14690:	movne	r0, r1
   14694:	pop	{fp, pc}
   14698:	push	{r4, r5, r6, r7, fp, lr}
   1469c:	add	fp, sp, #16
   146a0:	sub	sp, sp, #8
   146a4:	mov	r7, r2
   146a8:	mov	r4, r1
   146ac:	add	r5, sp, #4
   146b0:	cmp	r0, #0
   146b4:	movne	r5, r0
   146b8:	mov	r0, r5
   146bc:	bl	10df0 <mbrtowc@plt>
   146c0:	mov	r6, r0
   146c4:	cmp	r7, #0
   146c8:	beq	146f0 <abort@plt+0x37bc>
   146cc:	cmn	r6, #2
   146d0:	bcc	146f0 <abort@plt+0x37bc>
   146d4:	mov	r0, #0
   146d8:	bl	147c0 <abort@plt+0x388c>
   146dc:	cmp	r0, #0
   146e0:	bne	146f0 <abort@plt+0x37bc>
   146e4:	ldrb	r0, [r4]
   146e8:	str	r0, [r5]
   146ec:	mov	r6, #1
   146f0:	mov	r0, r6
   146f4:	sub	sp, fp, #16
   146f8:	pop	{r4, r5, r6, r7, fp, pc}
   146fc:	cmp	r2, #0
   14700:	beq	14730 <abort@plt+0x37fc>
   14704:	mvn	r3, #0
   14708:	udiv	r3, r3, r2
   1470c:	cmp	r3, r1
   14710:	bcs	14730 <abort@plt+0x37fc>
   14714:	push	{fp, lr}
   14718:	mov	fp, sp
   1471c:	bl	10e74 <__errno_location@plt>
   14720:	mov	r1, #12
   14724:	str	r1, [r0]
   14728:	mov	r0, #0
   1472c:	pop	{fp, pc}
   14730:	mul	r1, r2, r1
   14734:	b	13ef0 <abort@plt+0x2fbc>
   14738:	stm	r0, {r1, r2}
   1473c:	bx	lr
   14740:	mov	ip, #0
   14744:	cmp	r0, r2
   14748:	mov	r0, #0
   1474c:	movwgt	r0, #1
   14750:	sublt	r0, r0, #1
   14754:	cmp	r1, r3
   14758:	movwgt	ip, #1
   1475c:	sublt	ip, ip, #1
   14760:	add	r0, ip, r0, lsl #1
   14764:	bx	lr
   14768:	mov	r2, #1
   1476c:	asr	r3, r0, #31
   14770:	cmp	r0, #0
   14774:	addgt	r3, r2, r0, asr #31
   14778:	cmp	r1, #0
   1477c:	movwne	r1, #1
   14780:	clz	r0, r0
   14784:	lsr	r0, r0, #5
   14788:	and	r0, r0, r1
   1478c:	add	r0, r3, r0
   14790:	bx	lr
   14794:	nop	{0}
   14798:	vldr	d16, [pc, #24]	; 147b8 <abort@plt+0x3884>
   1479c:	vmov	s0, r1
   147a0:	vcvt.f64.s32	d17, s0
   147a4:	vmov	s0, r0
   147a8:	vcvt.f64.s32	d18, s0
   147ac:	vdiv.f64	d16, d17, d16
   147b0:	vadd.f64	d0, d16, d18
   147b4:	bx	lr
   147b8:	andeq	r0, r0, r0
   147bc:	bicmi	ip, sp, r5, ror #26
   147c0:	push	{r4, sl, fp, lr}
   147c4:	add	fp, sp, #8
   147c8:	sub	sp, sp, #264	; 0x108
   147cc:	add	r1, sp, #7
   147d0:	movw	r2, #257	; 0x101
   147d4:	bl	1482c <abort@plt+0x38f8>
   147d8:	mov	r4, #0
   147dc:	cmp	r0, #0
   147e0:	bne	14820 <abort@plt+0x38ec>
   147e4:	add	r0, sp, #7
   147e8:	movw	r1, #20873	; 0x5189
   147ec:	movt	r1, #1
   147f0:	mov	r2, #2
   147f4:	bl	10e5c <bcmp@plt>
   147f8:	cmp	r0, #0
   147fc:	beq	14820 <abort@plt+0x38ec>
   14800:	add	r0, sp, #7
   14804:	movw	r1, #20881	; 0x5191
   14808:	movt	r1, #1
   1480c:	mov	r2, #6
   14810:	bl	10e5c <bcmp@plt>
   14814:	mov	r4, r0
   14818:	cmp	r0, #0
   1481c:	movwne	r4, #1
   14820:	mov	r0, r4
   14824:	sub	sp, fp, #8
   14828:	pop	{r4, sl, fp, pc}
   1482c:	b	14830 <abort@plt+0x38fc>
   14830:	push	{r4, r5, r6, r7, fp, lr}
   14834:	add	fp, sp, #16
   14838:	mov	r6, r2
   1483c:	mov	r4, r1
   14840:	bl	148c8 <abort@plt+0x3994>
   14844:	cmp	r0, #0
   14848:	beq	14878 <abort@plt+0x3944>
   1484c:	mov	r7, r0
   14850:	bl	10e68 <strlen@plt>
   14854:	cmp	r0, r6
   14858:	bcs	14894 <abort@plt+0x3960>
   1485c:	add	r2, r0, #1
   14860:	mov	r0, r4
   14864:	mov	r1, r7
   14868:	bl	10d6c <memcpy@plt>
   1486c:	mov	r5, #0
   14870:	mov	r0, r5
   14874:	pop	{r4, r5, r6, r7, fp, pc}
   14878:	mov	r5, #22
   1487c:	cmp	r6, #0
   14880:	beq	148bc <abort@plt+0x3988>
   14884:	mov	r0, #0
   14888:	strb	r0, [r4]
   1488c:	mov	r0, r5
   14890:	pop	{r4, r5, r6, r7, fp, pc}
   14894:	mov	r5, #34	; 0x22
   14898:	cmp	r6, #0
   1489c:	beq	148bc <abort@plt+0x3988>
   148a0:	sub	r6, r6, #1
   148a4:	mov	r0, r4
   148a8:	mov	r1, r7
   148ac:	mov	r2, r6
   148b0:	bl	10d6c <memcpy@plt>
   148b4:	mov	r0, #0
   148b8:	strb	r0, [r4, r6]
   148bc:	mov	r0, r5
   148c0:	pop	{r4, r5, r6, r7, fp, pc}
   148c4:	b	148c8 <abort@plt+0x3994>
   148c8:	mov	r1, #0
   148cc:	b	10eec <setlocale@plt>
   148d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   148d4:	mov	r7, r0
   148d8:	ldr	r6, [pc, #72]	; 14928 <abort@plt+0x39f4>
   148dc:	ldr	r5, [pc, #72]	; 1492c <abort@plt+0x39f8>
   148e0:	add	r6, pc, r6
   148e4:	add	r5, pc, r5
   148e8:	sub	r6, r6, r5
   148ec:	mov	r8, r1
   148f0:	mov	r9, r2
   148f4:	bl	10cec <calloc@plt-0x20>
   148f8:	asrs	r6, r6, #2
   148fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14900:	mov	r4, #0
   14904:	add	r4, r4, #1
   14908:	ldr	r3, [r5], #4
   1490c:	mov	r2, r9
   14910:	mov	r1, r8
   14914:	mov	r0, r7
   14918:	blx	r3
   1491c:	cmp	r6, r4
   14920:	bne	14904 <abort@plt+0x39d0>
   14924:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14928:	andeq	r1, r1, r4, lsr #12
   1492c:	andeq	r1, r1, ip, lsl r6
   14930:	bx	lr
   14934:	ldr	r3, [pc, #12]	; 14948 <abort@plt+0x3a14>
   14938:	mov	r1, #0
   1493c:	add	r3, pc, r3
   14940:	ldr	r2, [r3]
   14944:	b	10e80 <__cxa_atexit@plt>
   14948:	muleq	r1, r0, r7

Disassembly of section .fini:

0001494c <.fini>:
   1494c:	push	{r3, lr}
   14950:	pop	{r3, pc}
