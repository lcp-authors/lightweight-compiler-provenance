
../repos/sgerbino-table-2fdd8d0/bin/table_column_test:     file format elf32-littlearm


Disassembly of section .init:

00011a74 <.init>:
   11a74:	push	{r3, lr}
   11a78:	bl	11c40 <_start@@Base+0x3c>
   11a7c:	pop	{r3, pc}

Disassembly of section .plt:

00011a80 <raise@plt-0x14>:
   11a80:	push	{lr}		; (str lr, [sp, #-4]!)
   11a84:	ldr	lr, [pc, #4]	; 11a90 <raise@plt-0x4>
   11a88:	add	lr, pc, lr
   11a8c:	ldr	pc, [lr, #8]!
   11a90:	andeq	r4, r1, r0, ror r5

00011a94 <raise@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #20, 20	; 0x14000
   11a9c:	ldr	pc, [ip, #1392]!	; 0x570

00011aa0 <strcmp@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #20, 20	; 0x14000
   11aa8:	ldr	pc, [ip, #1384]!	; 0x568

00011aac <printf@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #20, 20	; 0x14000
   11ab4:	ldr	pc, [ip, #1376]!	; 0x560

00011ab8 <free@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #20, 20	; 0x14000
   11ac0:	ldr	pc, [ip, #1368]!	; 0x558

00011ac4 <realloc@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #20, 20	; 0x14000
   11acc:	ldr	pc, [ip, #1360]!	; 0x550

00011ad0 <strcpy@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #20, 20	; 0x14000
   11ad8:	ldr	pc, [ip, #1352]!	; 0x548

00011adc <malloc@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #20, 20	; 0x14000
   11ae4:	ldr	pc, [ip, #1344]!	; 0x540

00011ae8 <__libc_start_main@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #20, 20	; 0x14000
   11af0:	ldr	pc, [ip, #1336]!	; 0x538

00011af4 <__gmon_start__@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #20, 20	; 0x14000
   11afc:	ldr	pc, [ip, #1328]!	; 0x530

00011b00 <strlen@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #20, 20	; 0x14000
   11b08:	ldr	pc, [ip, #1320]!	; 0x528

00011b0c <snprintf@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #20, 20	; 0x14000
   11b14:	ldr	pc, [ip, #1312]!	; 0x520

00011b18 <__isoc99_sscanf@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #20, 20	; 0x14000
   11b20:	ldr	pc, [ip, #1304]!	; 0x518

00011b24 <abort@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #20, 20	; 0x14000
   11b2c:	ldr	pc, [ip, #1296]!	; 0x510

Disassembly of section .text:

00011b30 <main@@Base>:
   11b30:	push	{r4, r5, r6, lr}
   11b34:	sub	sp, sp, #56	; 0x38
   11b38:	mov	r0, sp
   11b3c:	bl	11d80 <table_init@@Base>
   11b40:	mov	r2, #0
   11b44:	ldr	r1, [pc, #168]	; 11bf4 <main@@Base+0xc4>
   11b48:	mov	r0, sp
   11b4c:	bl	127a4 <table_add_column@@Base>
   11b50:	mov	r2, #21
   11b54:	ldr	r1, [pc, #156]	; 11bf8 <main@@Base+0xc8>
   11b58:	mov	r6, r0
   11b5c:	mov	r0, sp
   11b60:	bl	127a4 <table_add_column@@Base>
   11b64:	mov	r5, r0
   11b68:	mov	r0, sp
   11b6c:	bl	12720 <table_get_column_length@@Base>
   11b70:	cmp	r0, #2
   11b74:	moveq	r4, #0
   11b78:	beq	11b88 <main@@Base+0x58>
   11b7c:	ldr	r0, [pc, #120]	; 11bfc <main@@Base+0xcc>
   11b80:	bl	11aac <printf@plt>
   11b84:	mvn	r4, #0
   11b88:	mov	r1, r6
   11b8c:	mov	r0, sp
   11b90:	bl	12a5c <table_get_column_name@@Base>
   11b94:	ldr	r1, [pc, #88]	; 11bf4 <main@@Base+0xc4>
   11b98:	bl	11aa0 <strcmp@plt>
   11b9c:	cmp	r0, #0
   11ba0:	bne	11bd4 <main@@Base+0xa4>
   11ba4:	mov	r1, r5
   11ba8:	mov	r0, sp
   11bac:	bl	12a5c <table_get_column_name@@Base>
   11bb0:	ldr	r1, [pc, #64]	; 11bf8 <main@@Base+0xc8>
   11bb4:	bl	11aa0 <strcmp@plt>
   11bb8:	cmp	r0, #0
   11bbc:	bne	11be4 <main@@Base+0xb4>
   11bc0:	mov	r0, sp
   11bc4:	bl	11dc8 <table_destroy@@Base>
   11bc8:	mov	r0, r4
   11bcc:	add	sp, sp, #56	; 0x38
   11bd0:	pop	{r4, r5, r6, pc}
   11bd4:	ldr	r0, [pc, #36]	; 11c00 <main@@Base+0xd0>
   11bd8:	bl	11aac <printf@plt>
   11bdc:	mvn	r4, #0
   11be0:	b	11ba4 <main@@Base+0x74>
   11be4:	ldr	r0, [pc, #20]	; 11c00 <main@@Base+0xd0>
   11be8:	bl	11aac <printf@plt>
   11bec:	mvn	r4, #0
   11bf0:	b	11bc0 <main@@Base+0x90>
   11bf4:	andeq	r5, r1, ip, lsr #2
   11bf8:	andeq	r5, r1, r0, lsr r1
   11bfc:	andeq	r5, r1, r8, lsr r1
   11c00:	andeq	r5, r1, r0, ror #2

00011c04 <_start@@Base>:
   11c04:	mov	fp, #0
   11c08:	mov	lr, #0
   11c0c:	pop	{r1}		; (ldr r1, [sp], #4)
   11c10:	mov	r2, sp
   11c14:	push	{r2}		; (str r2, [sp, #-4]!)
   11c18:	push	{r0}		; (str r0, [sp, #-4]!)
   11c1c:	ldr	ip, [pc, #16]	; 11c34 <_start@@Base+0x30>
   11c20:	push	{ip}		; (str ip, [sp, #-4]!)
   11c24:	ldr	r0, [pc, #12]	; 11c38 <_start@@Base+0x34>
   11c28:	ldr	r3, [pc, #12]	; 11c3c <_start@@Base+0x38>
   11c2c:	bl	11ae8 <__libc_start_main@plt>
   11c30:	bl	11b24 <abort@plt>
   11c34:	andeq	r5, r1, ip, lsl r1
   11c38:	andeq	r1, r1, r0, lsr fp
   11c3c:	strheq	r5, [r1], -ip
   11c40:	ldr	r3, [pc, #20]	; 11c5c <_start@@Base+0x58>
   11c44:	ldr	r2, [pc, #20]	; 11c60 <_start@@Base+0x5c>
   11c48:	add	r3, pc, r3
   11c4c:	ldr	r2, [r3, r2]
   11c50:	cmp	r2, #0
   11c54:	bxeq	lr
   11c58:	b	11af4 <__gmon_start__@plt>
   11c5c:			; <UNDEFINED> instruction: 0x000143b0
   11c60:	andeq	r0, r0, r0, asr #32
   11c64:	ldr	r3, [pc, #28]	; 11c88 <_start@@Base+0x84>
   11c68:	ldr	r0, [pc, #28]	; 11c8c <_start@@Base+0x88>
   11c6c:	sub	r3, r3, r0
   11c70:	cmp	r3, #6
   11c74:	bxls	lr
   11c78:	ldr	r3, [pc, #16]	; 11c90 <_start@@Base+0x8c>
   11c7c:	cmp	r3, #0
   11c80:	bxeq	lr
   11c84:	bx	r3
   11c88:	andeq	r6, r2, pc, asr #32
   11c8c:	andeq	r6, r2, ip, asr #32
   11c90:	andeq	r0, r0, r0
   11c94:	ldr	r1, [pc, #36]	; 11cc0 <_start@@Base+0xbc>
   11c98:	ldr	r0, [pc, #36]	; 11cc4 <_start@@Base+0xc0>
   11c9c:	sub	r1, r1, r0
   11ca0:	asr	r1, r1, #2
   11ca4:	add	r1, r1, r1, lsr #31
   11ca8:	asrs	r1, r1, #1
   11cac:	bxeq	lr
   11cb0:	ldr	r3, [pc, #16]	; 11cc8 <_start@@Base+0xc4>
   11cb4:	cmp	r3, #0
   11cb8:	bxeq	lr
   11cbc:	bx	r3
   11cc0:	andeq	r6, r2, ip, asr #32
   11cc4:	andeq	r6, r2, ip, asr #32
   11cc8:	andeq	r0, r0, r0
   11ccc:	push	{r4, lr}
   11cd0:	ldr	r4, [pc, #24]	; 11cf0 <_start@@Base+0xec>
   11cd4:	ldrb	r3, [r4]
   11cd8:	cmp	r3, #0
   11cdc:	popne	{r4, pc}
   11ce0:	bl	11c64 <_start@@Base+0x60>
   11ce4:	mov	r3, #1
   11ce8:	strb	r3, [r4]
   11cec:	pop	{r4, pc}
   11cf0:	andeq	r6, r2, ip, asr #32
   11cf4:	ldr	r0, [pc, #40]	; 11d24 <_start@@Base+0x120>
   11cf8:	ldr	r3, [r0]
   11cfc:	cmp	r3, #0
   11d00:	bne	11d08 <_start@@Base+0x104>
   11d04:	b	11c94 <_start@@Base+0x90>
   11d08:	ldr	r3, [pc, #24]	; 11d28 <_start@@Base+0x124>
   11d0c:	cmp	r3, #0
   11d10:	beq	11d04 <_start@@Base+0x100>
   11d14:	push	{r4, lr}
   11d18:	blx	r3
   11d1c:	pop	{r4, lr}
   11d20:	b	11c94 <_start@@Base+0x90>
   11d24:	andeq	r5, r2, r4, lsl pc
   11d28:	andeq	r0, r0, r0

00011d2c <table_new@@Base>:
   11d2c:	push	{r4, lr}
   11d30:	mov	r0, #56	; 0x38
   11d34:	bl	11adc <malloc@plt>
   11d38:	mov	r2, #0
   11d3c:	mov	r1, #10
   11d40:	mov	ip, #20
   11d44:	str	ip, [r0, #24]
   11d48:	str	r2, [r0]
   11d4c:	str	r2, [r0, #4]
   11d50:	str	r2, [r0, #12]
   11d54:	str	r2, [r0, #16]
   11d58:	str	r2, [r0, #20]
   11d5c:	str	r2, [r0, #28]
   11d60:	str	r2, [r0, #36]	; 0x24
   11d64:	str	r2, [r0, #40]	; 0x28
   11d68:	str	r2, [r0, #44]	; 0x2c
   11d6c:	str	r2, [r0, #32]
   11d70:	str	r2, [r0, #52]	; 0x34
   11d74:	str	r1, [r0, #8]
   11d78:	str	r1, [r0, #48]	; 0x30
   11d7c:	pop	{r4, pc}

00011d80 <table_init@@Base>:
   11d80:	mov	r3, #0
   11d84:	mov	r2, #10
   11d88:	mov	r1, #20
   11d8c:	str	r1, [r0, #24]
   11d90:	str	r3, [r0]
   11d94:	str	r3, [r0, #4]
   11d98:	str	r3, [r0, #12]
   11d9c:	str	r3, [r0, #16]
   11da0:	str	r3, [r0, #20]
   11da4:	str	r3, [r0, #28]
   11da8:	str	r3, [r0, #36]	; 0x24
   11dac:	str	r3, [r0, #40]	; 0x28
   11db0:	str	r3, [r0, #44]	; 0x2c
   11db4:	str	r3, [r0, #32]
   11db8:	str	r3, [r0, #52]	; 0x34
   11dbc:	str	r2, [r0, #8]
   11dc0:	str	r2, [r0, #48]	; 0x30
   11dc4:	bx	lr

00011dc8 <table_destroy@@Base>:
   11dc8:	push	{r4, r5, r6, lr}
   11dcc:	subs	r5, r0, #0
   11dd0:	popeq	{r4, r5, r6, pc}
   11dd4:	mvn	r2, #0
   11dd8:	mov	r1, r2
   11ddc:	mov	r3, #64	; 0x40
   11de0:	bl	12630 <table_notify@@Base>
   11de4:	mov	r0, r5
   11de8:	bl	13328 <table_get_row_length@@Base>
   11dec:	subs	r6, r0, #0
   11df0:	movgt	r4, #0
   11df4:	ble	11e10 <table_destroy@@Base+0x48>
   11df8:	mov	r1, r4
   11dfc:	mov	r0, r5
   11e00:	add	r4, r4, #1
   11e04:	bl	132d4 <table_row_destroy@@Base>
   11e08:	cmp	r6, r4
   11e0c:	bne	11df8 <table_destroy@@Base+0x30>
   11e10:	ldr	r0, [r5, #16]
   11e14:	cmp	r0, #0
   11e18:	beq	11e20 <table_destroy@@Base+0x58>
   11e1c:	bl	11ab8 <free@plt>
   11e20:	mov	r0, r5
   11e24:	bl	12720 <table_get_column_length@@Base>
   11e28:	subs	r6, r0, #0
   11e2c:	movgt	r4, #0
   11e30:	ble	11e4c <table_destroy@@Base+0x84>
   11e34:	mov	r1, r4
   11e38:	mov	r0, r5
   11e3c:	add	r4, r4, #1
   11e40:	bl	12708 <table_column_destroy@@Base>
   11e44:	cmp	r6, r4
   11e48:	bne	11e34 <table_destroy@@Base+0x6c>
   11e4c:	ldr	r0, [r5]
   11e50:	cmp	r0, #0
   11e54:	beq	11e5c <table_destroy@@Base+0x94>
   11e58:	bl	11ab8 <free@plt>
   11e5c:	ldr	r0, [r5, #36]	; 0x24
   11e60:	cmp	r0, #0
   11e64:	beq	11e6c <table_destroy@@Base+0xa4>
   11e68:	bl	11ab8 <free@plt>
   11e6c:	ldr	r0, [r5, #40]	; 0x28
   11e70:	cmp	r0, #0
   11e74:	beq	11e7c <table_destroy@@Base+0xb4>
   11e78:	bl	11ab8 <free@plt>
   11e7c:	ldr	r0, [r5, #44]	; 0x2c
   11e80:	cmp	r0, #0
   11e84:	popeq	{r4, r5, r6, pc}
   11e88:	pop	{r4, r5, r6, lr}
   11e8c:	b	11ab8 <free@plt>

00011e90 <table_delete@@Base>:
   11e90:	push	{r4, lr}
   11e94:	mov	r4, r0
   11e98:	bl	11dc8 <table_destroy@@Base>
   11e9c:	mov	r0, r4
   11ea0:	pop	{r4, lr}
   11ea4:	b	11ab8 <free@plt>

00011ea8 <table_dupe@@Base>:
   11ea8:	push	{r4, r5, r6, r7, r8, r9, lr}
   11eac:	sub	sp, sp, #20
   11eb0:	mov	r6, r0
   11eb4:	bl	13328 <table_get_row_length@@Base>
   11eb8:	mov	r4, #0
   11ebc:	mov	r9, r0
   11ec0:	mov	r0, r6
   11ec4:	bl	12720 <table_get_column_length@@Base>
   11ec8:	mov	r8, r0
   11ecc:	mov	r0, #56	; 0x38
   11ed0:	bl	11adc <malloc@plt>
   11ed4:	mov	r3, #10
   11ed8:	mov	r2, #20
   11edc:	cmp	r8, #0
   11ee0:	mov	r7, r0
   11ee4:	str	r2, [r0, #24]
   11ee8:	str	r4, [r0]
   11eec:	str	r4, [r0, #4]
   11ef0:	str	r4, [r0, #12]
   11ef4:	str	r4, [r0, #16]
   11ef8:	str	r4, [r0, #20]
   11efc:	str	r4, [r0, #28]
   11f00:	str	r4, [r0, #36]	; 0x24
   11f04:	str	r4, [r0, #40]	; 0x28
   11f08:	str	r4, [r0, #44]	; 0x2c
   11f0c:	str	r4, [r0, #32]
   11f10:	str	r4, [r0, #52]	; 0x34
   11f14:	str	r3, [r0, #8]
   11f18:	str	r3, [r0, #48]	; 0x30
   11f1c:	ble	11f58 <table_dupe@@Base+0xb0>
   11f20:	mov	r1, r4
   11f24:	mov	r0, r6
   11f28:	bl	12a5c <table_get_column_name@@Base>
   11f2c:	mov	r1, r4
   11f30:	add	r4, r4, #1
   11f34:	mov	r5, r0
   11f38:	mov	r0, r6
   11f3c:	bl	12790 <table_get_column_data_type@@Base>
   11f40:	mov	r1, r5
   11f44:	mov	r2, r0
   11f48:	mov	r0, r7
   11f4c:	bl	127a4 <table_add_column@@Base>
   11f50:	cmp	r8, r4
   11f54:	bne	11f20 <table_dupe@@Base+0x78>
   11f58:	cmp	r9, #0
   11f5c:	movgt	r5, #0
   11f60:	ble	12030 <table_dupe@@Base+0x188>
   11f64:	mov	r0, r7
   11f68:	bl	13330 <table_add_row@@Base>
   11f6c:	cmp	r8, #0
   11f70:	movgt	r4, #0
   11f74:	ble	12024 <table_dupe@@Base+0x17c>
   11f78:	mov	r1, r4
   11f7c:	mov	r0, r6
   11f80:	bl	12790 <table_get_column_data_type@@Base>
   11f84:	cmp	r0, #23
   11f88:	ldrls	pc, [pc, r0, lsl #2]
   11f8c:	b	12018 <table_dupe@@Base+0x170>
   11f90:	andeq	r2, r1, ip, lsl #1
   11f94:	andeq	r2, r1, r0, lsl #6
   11f98:	ldrdeq	r2, [r1], -r8
   11f9c:			; <UNDEFINED> instruction: 0x000122b0
   11fa0:	andeq	r2, r1, r8, lsl #5
   11fa4:	andeq	r2, r1, r0, lsr #7
   11fa8:	andeq	r2, r1, r8, ror r3
   11fac:	andeq	r2, r1, r0, asr r3
   11fb0:	andeq	r2, r1, r8, lsr #6
   11fb4:	andeq	r2, r1, r0, ror #4
   11fb8:	andeq	r2, r1, r8, lsr r2
   11fbc:	andeq	r2, r1, r0, lsl r2
   11fc0:	andeq	r2, r1, r8, ror #3
   11fc4:	andeq	r2, r1, r0, asr #3
   11fc8:	muleq	r1, r8, r1
   11fcc:	andeq	r2, r1, r0, ror r1
   11fd0:	andeq	r2, r1, ip, asr #2
   11fd4:	andeq	r2, r1, r8, lsr #2
   11fd8:	andeq	r2, r1, r4, lsl #2
   11fdc:	ldrdeq	r2, [r1], -ip
   11fe0:	strheq	r2, [r1], -r4
   11fe4:	andeq	r2, r1, r4, rrx
   11fe8:	andeq	r2, r1, ip, lsr r0
   11fec:	strdeq	r1, [r1], -r0
   11ff0:	mov	r2, r4
   11ff4:	mov	r1, r5
   11ff8:	mov	r0, r6
   11ffc:	bl	132a4 <table_get_ptr@@Base>
   12000:	add	r3, sp, #12
   12004:	mov	r2, r4
   12008:	mov	r1, r5
   1200c:	str	r0, [sp, #12]
   12010:	mov	r0, r7
   12014:	bl	143d4 <table_set_ptr@@Base>
   12018:	add	r4, r4, #1
   1201c:	cmp	r8, r4
   12020:	bne	11f78 <table_dupe@@Base+0xd0>
   12024:	add	r5, r5, #1
   12028:	cmp	r9, r5
   1202c:	bne	11f64 <table_dupe@@Base+0xbc>
   12030:	mov	r0, r7
   12034:	add	sp, sp, #20
   12038:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1203c:	mov	r2, r4
   12040:	mov	r1, r5
   12044:	mov	r0, r6
   12048:	bl	130dc <table_get_bool@@Base>
   1204c:	mov	r2, r4
   12050:	mov	r1, r5
   12054:	mov	r3, r0
   12058:	mov	r0, r7
   1205c:	bl	13848 <table_set_bool@@Base>
   12060:	b	12018 <table_dupe@@Base+0x170>
   12064:	mov	r2, r4
   12068:	mov	r1, r5
   1206c:	mov	r0, r6
   12070:	bl	13294 <table_get_string@@Base>
   12074:	mov	r2, r4
   12078:	mov	r1, r5
   1207c:	mov	r3, r0
   12080:	mov	r0, r7
   12084:	bl	1425c <table_set_string@@Base>
   12088:	b	12018 <table_dupe@@Base+0x170>
   1208c:	mov	r2, r4
   12090:	mov	r1, r5
   12094:	mov	r0, r6
   12098:	bl	130f0 <table_get_int@@Base>
   1209c:	mov	r2, r4
   120a0:	mov	r1, r5
   120a4:	mov	r3, r0
   120a8:	mov	r0, r7
   120ac:	bl	138c4 <table_set_int@@Base>
   120b0:	b	12018 <table_dupe@@Base+0x170>
   120b4:	mov	r2, r4
   120b8:	mov	r1, r5
   120bc:	mov	r0, r6
   120c0:	bl	13280 <table_get_uchar@@Base>
   120c4:	mov	r2, r4
   120c8:	mov	r1, r5
   120cc:	mov	r3, r0
   120d0:	mov	r0, r7
   120d4:	bl	14358 <table_set_uchar@@Base>
   120d8:	b	12018 <table_dupe@@Base+0x170>
   120dc:	mov	r2, r4
   120e0:	mov	r1, r5
   120e4:	mov	r0, r6
   120e8:	bl	1326c <table_get_char@@Base>
   120ec:	mov	r2, r4
   120f0:	mov	r1, r5
   120f4:	mov	r3, r0
   120f8:	mov	r0, r7
   120fc:	bl	142dc <table_set_char@@Base>
   12100:	b	12018 <table_dupe@@Base+0x170>
   12104:	mov	r2, r4
   12108:	mov	r1, r5
   1210c:	mov	r0, r6
   12110:	bl	13258 <table_get_ldouble@@Base>
   12114:	mov	r2, r4
   12118:	mov	r1, r5
   1211c:	mov	r0, r7
   12120:	bl	141c4 <table_set_ldouble@@Base>
   12124:	b	12018 <table_dupe@@Base+0x170>
   12128:	mov	r2, r4
   1212c:	mov	r1, r5
   12130:	mov	r0, r6
   12134:	bl	13244 <table_get_double@@Base>
   12138:	mov	r2, r4
   1213c:	mov	r1, r5
   12140:	mov	r0, r7
   12144:	bl	1412c <table_set_double@@Base>
   12148:	b	12018 <table_dupe@@Base+0x170>
   1214c:	mov	r2, r4
   12150:	mov	r1, r5
   12154:	mov	r0, r6
   12158:	bl	13230 <table_get_float@@Base>
   1215c:	mov	r2, r4
   12160:	mov	r1, r5
   12164:	mov	r0, r7
   12168:	bl	140b0 <table_set_float@@Base>
   1216c:	b	12018 <table_dupe@@Base+0x170>
   12170:	mov	r2, r4
   12174:	mov	r1, r5
   12178:	mov	r0, r6
   1217c:	bl	1321c <table_get_ullong@@Base>
   12180:	mov	r2, r4
   12184:	strd	r0, [sp]
   12188:	mov	r1, r5
   1218c:	mov	r0, r7
   12190:	bl	14028 <table_set_ullong@@Base>
   12194:	b	12018 <table_dupe@@Base+0x170>
   12198:	mov	r2, r4
   1219c:	mov	r1, r5
   121a0:	mov	r0, r6
   121a4:	bl	13208 <table_get_llong@@Base>
   121a8:	mov	r2, r4
   121ac:	strd	r0, [sp]
   121b0:	mov	r1, r5
   121b4:	mov	r0, r7
   121b8:	bl	13fa0 <table_set_llong@@Base>
   121bc:	b	12018 <table_dupe@@Base+0x170>
   121c0:	mov	r2, r4
   121c4:	mov	r1, r5
   121c8:	mov	r0, r6
   121cc:	bl	131f4 <table_get_ulong@@Base>
   121d0:	mov	r2, r4
   121d4:	mov	r1, r5
   121d8:	mov	r3, r0
   121dc:	mov	r0, r7
   121e0:	bl	13f24 <table_set_ulong@@Base>
   121e4:	b	12018 <table_dupe@@Base+0x170>
   121e8:	mov	r2, r4
   121ec:	mov	r1, r5
   121f0:	mov	r0, r6
   121f4:	bl	131e0 <table_get_long@@Base>
   121f8:	mov	r2, r4
   121fc:	mov	r1, r5
   12200:	mov	r3, r0
   12204:	mov	r0, r7
   12208:	bl	13ea8 <table_set_long@@Base>
   1220c:	b	12018 <table_dupe@@Base+0x170>
   12210:	mov	r2, r4
   12214:	mov	r1, r5
   12218:	mov	r0, r6
   1221c:	bl	131cc <table_get_ushort@@Base>
   12220:	mov	r2, r4
   12224:	mov	r1, r5
   12228:	mov	r3, r0
   1222c:	mov	r0, r7
   12230:	bl	13e2c <table_set_ushort@@Base>
   12234:	b	12018 <table_dupe@@Base+0x170>
   12238:	mov	r2, r4
   1223c:	mov	r1, r5
   12240:	mov	r0, r6
   12244:	bl	131b8 <table_get_short@@Base>
   12248:	mov	r2, r4
   1224c:	mov	r1, r5
   12250:	mov	r3, r0
   12254:	mov	r0, r7
   12258:	bl	13db0 <table_set_short@@Base>
   1225c:	b	12018 <table_dupe@@Base+0x170>
   12260:	mov	r2, r4
   12264:	mov	r1, r5
   12268:	mov	r0, r6
   1226c:	bl	131a4 <table_get_uint64@@Base>
   12270:	mov	r2, r4
   12274:	strd	r0, [sp]
   12278:	mov	r1, r5
   1227c:	mov	r0, r7
   12280:	bl	13d28 <table_set_uint64@@Base>
   12284:	b	12018 <table_dupe@@Base+0x170>
   12288:	mov	r2, r4
   1228c:	mov	r1, r5
   12290:	mov	r0, r6
   12294:	bl	13140 <table_get_int16@@Base>
   12298:	mov	r2, r4
   1229c:	mov	r1, r5
   122a0:	mov	r3, r0
   122a4:	mov	r0, r7
   122a8:	bl	13ab4 <table_set_int16@@Base>
   122ac:	b	12018 <table_dupe@@Base+0x170>
   122b0:	mov	r2, r4
   122b4:	mov	r1, r5
   122b8:	mov	r0, r6
   122bc:	bl	1312c <table_get_uint8@@Base>
   122c0:	mov	r2, r4
   122c4:	mov	r1, r5
   122c8:	mov	r3, r0
   122cc:	mov	r0, r7
   122d0:	bl	13a38 <table_set_uint8@@Base>
   122d4:	b	12018 <table_dupe@@Base+0x170>
   122d8:	mov	r2, r4
   122dc:	mov	r1, r5
   122e0:	mov	r0, r6
   122e4:	bl	13118 <table_get_int8@@Base>
   122e8:	mov	r2, r4
   122ec:	mov	r1, r5
   122f0:	mov	r3, r0
   122f4:	mov	r0, r7
   122f8:	bl	139bc <table_set_int8@@Base>
   122fc:	b	12018 <table_dupe@@Base+0x170>
   12300:	mov	r2, r4
   12304:	mov	r1, r5
   12308:	mov	r0, r6
   1230c:	bl	13104 <table_get_uint@@Base>
   12310:	mov	r2, r4
   12314:	mov	r1, r5
   12318:	mov	r3, r0
   1231c:	mov	r0, r7
   12320:	bl	13940 <table_set_uint@@Base>
   12324:	b	12018 <table_dupe@@Base+0x170>
   12328:	mov	r2, r4
   1232c:	mov	r1, r5
   12330:	mov	r0, r6
   12334:	bl	13190 <table_get_int64@@Base>
   12338:	mov	r2, r4
   1233c:	strd	r0, [sp]
   12340:	mov	r1, r5
   12344:	mov	r0, r7
   12348:	bl	13ca4 <table_set_int64@@Base>
   1234c:	b	12018 <table_dupe@@Base+0x170>
   12350:	mov	r2, r4
   12354:	mov	r1, r5
   12358:	mov	r0, r6
   1235c:	bl	1317c <table_get_uint32@@Base>
   12360:	mov	r2, r4
   12364:	mov	r1, r5
   12368:	mov	r3, r0
   1236c:	mov	r0, r7
   12370:	bl	13c28 <table_set_uint32@@Base>
   12374:	b	12018 <table_dupe@@Base+0x170>
   12378:	mov	r2, r4
   1237c:	mov	r1, r5
   12380:	mov	r0, r6
   12384:	bl	13168 <table_get_int32@@Base>
   12388:	mov	r2, r4
   1238c:	mov	r1, r5
   12390:	mov	r3, r0
   12394:	mov	r0, r7
   12398:	bl	13bac <table_set_int32@@Base>
   1239c:	b	12018 <table_dupe@@Base+0x170>
   123a0:	mov	r2, r4
   123a4:	mov	r1, r5
   123a8:	mov	r0, r6
   123ac:	bl	13154 <table_get_uint16@@Base>
   123b0:	mov	r2, r4
   123b4:	mov	r1, r5
   123b8:	mov	r3, r0
   123bc:	mov	r0, r7
   123c0:	bl	13b30 <table_set_uint16@@Base>
   123c4:	b	12018 <table_dupe@@Base+0x170>

000123c8 <table_get_major_version@@Base>:
   123c8:	mov	r0, #0
   123cc:	bx	lr

000123d0 <table_get_minor_version@@Base>:
   123d0:	mov	r0, #0
   123d4:	bx	lr

000123d8 <table_get_patch_version@@Base>:
   123d8:	mov	r0, #0
   123dc:	bx	lr

000123e0 <table_get_version@@Base>:
   123e0:	ldr	r0, [pc]	; 123e8 <table_get_version@@Base+0x8>
   123e4:	bx	lr
   123e8:	andeq	r5, r1, r4, lsr #4

000123ec <table_get_callback_length@@Base>:
   123ec:	ldr	r0, [r0, #32]
   123f0:	bx	lr

000123f4 <table_register_callback@@Base>:
   123f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   123f8:	ldr	r5, [r0, #32]
   123fc:	ldr	r7, [r0, #36]	; 0x24
   12400:	cmp	r5, #0
   12404:	ble	1245c <table_register_callback@@Base+0x68>
   12408:	mov	ip, #0
   1240c:	sub	lr, r7, #4
   12410:	b	12420 <table_register_callback@@Base+0x2c>
   12414:	add	ip, ip, #1
   12418:	cmp	ip, r5
   1241c:	beq	1245c <table_register_callback@@Base+0x68>
   12420:	ldr	r4, [lr, #4]!
   12424:	lsl	r6, ip, #2
   12428:	cmp	r1, r4
   1242c:	bne	12414 <table_register_callback@@Base+0x20>
   12430:	ldr	r4, [r0, #40]	; 0x28
   12434:	ldr	r4, [r4, ip, lsl #2]
   12438:	cmp	r2, r4
   1243c:	bne	12414 <table_register_callback@@Base+0x20>
   12440:	cmp	ip, #0
   12444:	beq	1245c <table_register_callback@@Base+0x68>
   12448:	ldr	r1, [r0, #44]	; 0x2c
   1244c:	ldr	r2, [r1, r6]
   12450:	orr	r3, r2, r3
   12454:	str	r3, [r1, r6]
   12458:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1245c:	ldr	sl, [r0, #48]	; 0x30
   12460:	mov	r9, r1
   12464:	mov	r8, r0
   12468:	mov	r1, sl
   1246c:	mov	r0, r5
   12470:	mov	r6, r3
   12474:	mov	r4, r2
   12478:	bl	1508c <table_get_cell_ptr@@Base+0x204>
   1247c:	cmp	r1, #0
   12480:	beq	124a8 <table_register_callback@@Base+0xb4>
   12484:	str	r9, [r7, r5, lsl #2]
   12488:	ldr	r3, [r8, #40]	; 0x28
   1248c:	str	r4, [r3, r5, lsl #2]
   12490:	ldr	r3, [r8, #44]	; 0x2c
   12494:	str	r6, [r3, r5, lsl #2]
   12498:	ldr	r3, [r8, #32]
   1249c:	add	r3, r3, #1
   124a0:	str	r3, [r8, #32]
   124a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124a8:	ldr	r1, [r8, #52]	; 0x34
   124ac:	mov	r0, r7
   124b0:	add	r1, sl, r1
   124b4:	str	r1, [r8, #52]	; 0x34
   124b8:	lsl	r1, r1, #2
   124bc:	bl	11ac4 <realloc@plt>
   124c0:	ldr	r1, [r8, #52]	; 0x34
   124c4:	lsl	r1, r1, #2
   124c8:	str	r0, [r8, #36]	; 0x24
   124cc:	ldr	r0, [r8, #40]	; 0x28
   124d0:	bl	11ac4 <realloc@plt>
   124d4:	ldr	r1, [r8, #52]	; 0x34
   124d8:	lsl	r1, r1, #2
   124dc:	str	r0, [r8, #40]	; 0x28
   124e0:	ldr	r0, [r8, #44]	; 0x2c
   124e4:	bl	11ac4 <realloc@plt>
   124e8:	ldr	r7, [r8, #36]	; 0x24
   124ec:	ldr	r5, [r8, #32]
   124f0:	str	r0, [r8, #44]	; 0x2c
   124f4:	b	12484 <table_register_callback@@Base+0x90>

000124f8 <table_unregister_callback@@Base>:
   124f8:	push	{r4, r5, r6, lr}
   124fc:	ldr	lr, [r0, #32]
   12500:	cmp	lr, #0
   12504:	pople	{r4, r5, r6, pc}
   12508:	ldr	r6, [r0, #36]	; 0x24
   1250c:	mov	r3, #0
   12510:	sub	r4, r6, #4
   12514:	b	12524 <table_unregister_callback@@Base+0x2c>
   12518:	add	r3, r3, #1
   1251c:	cmp	r3, lr
   12520:	beq	125f0 <table_unregister_callback@@Base+0xf8>
   12524:	ldr	r5, [r4, #4]!
   12528:	lsl	ip, r3, #2
   1252c:	cmp	r1, r5
   12530:	bne	12518 <table_unregister_callback@@Base+0x20>
   12534:	ldr	r5, [r0, #40]	; 0x28
   12538:	ldr	r5, [r5, r3, lsl #2]
   1253c:	cmp	r2, r5
   12540:	bne	12518 <table_unregister_callback@@Base+0x20>
   12544:	sub	lr, lr, #1
   12548:	cmp	lr, r3
   1254c:	bgt	12558 <table_unregister_callback@@Base+0x60>
   12550:	b	12594 <table_unregister_callback@@Base+0x9c>
   12554:	ldr	r6, [r0, #36]	; 0x24
   12558:	add	r2, ip, #4
   1255c:	add	r3, r3, #1
   12560:	ldr	r1, [r6, r2]
   12564:	str	r1, [r6, ip]
   12568:	ldr	r1, [r0, #40]	; 0x28
   1256c:	ldr	lr, [r1, r2]
   12570:	str	lr, [r1, ip]
   12574:	ldr	r1, [r0, #44]	; 0x2c
   12578:	ldr	lr, [r1, r2]
   1257c:	str	lr, [r1, ip]
   12580:	ldr	lr, [r0, #32]
   12584:	mov	ip, r2
   12588:	sub	lr, lr, #1
   1258c:	cmp	lr, r3
   12590:	bgt	12554 <table_unregister_callback@@Base+0x5c>
   12594:	ldr	r6, [r0, #48]	; 0x30
   12598:	str	lr, [r0, #32]
   1259c:	mov	r4, r0
   125a0:	mov	r1, r6
   125a4:	mov	r0, lr
   125a8:	bl	1508c <table_get_cell_ptr@@Base+0x204>
   125ac:	cmp	r1, #0
   125b0:	popne	{r4, r5, r6, pc}
   125b4:	ldr	r5, [r4, #52]	; 0x34
   125b8:	sub	r5, r5, r6
   125bc:	cmp	r5, #0
   125c0:	str	r5, [r4, #52]	; 0x34
   125c4:	bne	125f4 <table_unregister_callback@@Base+0xfc>
   125c8:	ldr	r0, [r4, #36]	; 0x24
   125cc:	bl	11ab8 <free@plt>
   125d0:	ldr	r0, [r4, #40]	; 0x28
   125d4:	bl	11ab8 <free@plt>
   125d8:	ldr	r0, [r4, #44]	; 0x2c
   125dc:	bl	11ab8 <free@plt>
   125e0:	str	r5, [r4, #36]	; 0x24
   125e4:	str	r5, [r4, #40]	; 0x28
   125e8:	str	r5, [r4, #44]	; 0x2c
   125ec:	pop	{r4, r5, r6, pc}
   125f0:	pop	{r4, r5, r6, pc}
   125f4:	lsl	r1, r5, #2
   125f8:	ldr	r0, [r4, #36]	; 0x24
   125fc:	bl	11ac4 <realloc@plt>
   12600:	ldr	r1, [r4, #52]	; 0x34
   12604:	lsl	r1, r1, #2
   12608:	str	r0, [r4, #36]	; 0x24
   1260c:	ldr	r0, [r4, #40]	; 0x28
   12610:	bl	11ac4 <realloc@plt>
   12614:	ldr	r1, [r4, #52]	; 0x34
   12618:	lsl	r1, r1, #2
   1261c:	str	r0, [r4, #40]	; 0x28
   12620:	ldr	r0, [r4, #44]	; 0x2c
   12624:	bl	11ac4 <realloc@plt>
   12628:	str	r0, [r4, #44]	; 0x2c
   1262c:	pop	{r4, r5, r6, pc}

00012630 <table_notify@@Base>:
   12630:	ldr	ip, [r0, #32]
   12634:	cmp	ip, #0
   12638:	bxle	lr
   1263c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12640:	mov	r6, r3
   12644:	sub	sp, sp, #12
   12648:	mov	r8, r2
   1264c:	mov	r7, r1
   12650:	mov	r5, r0
   12654:	mov	r4, #0
   12658:	b	12668 <table_notify@@Base+0x38>
   1265c:	add	r4, r4, #1
   12660:	cmp	r4, ip
   12664:	bge	126b0 <table_notify@@Base+0x80>
   12668:	ldr	r0, [r5, #44]	; 0x2c
   1266c:	ldr	r0, [r0, r4, lsl #2]
   12670:	tst	r6, r0
   12674:	beq	1265c <table_notify@@Base+0x2c>
   12678:	ldr	r2, [r5, #40]	; 0x28
   1267c:	ldr	r0, [r5, #36]	; 0x24
   12680:	mov	r3, r6
   12684:	ldr	r1, [r2, r4, lsl #2]
   12688:	mov	r2, r8
   1268c:	str	r1, [sp]
   12690:	mov	r1, r7
   12694:	ldr	r9, [r0, r4, lsl #2]
   12698:	mov	r0, r5
   1269c:	blx	r9
   126a0:	ldr	ip, [r5, #32]
   126a4:	add	r4, r4, #1
   126a8:	cmp	r4, ip
   126ac:	blt	12668 <table_notify@@Base+0x38>
   126b0:	add	sp, sp, #12
   126b4:	pop	{r4, r5, r6, r7, r8, r9, pc}

000126b8 <table_column_init@@Base>:
   126b8:	add	r1, r1, r1, lsl #1
   126bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126c0:	lsl	r4, r1, #2
   126c4:	ldr	r6, [r0]
   126c8:	mov	r0, r2
   126cc:	mov	r9, r3
   126d0:	mov	r7, r2
   126d4:	bl	11b00 <strlen@plt>
   126d8:	ldr	r8, [sp, #32]
   126dc:	add	r5, r6, r4
   126e0:	add	r0, r0, #1
   126e4:	bl	11adc <malloc@plt>
   126e8:	subs	r3, r0, #0
   126ec:	str	r0, [r6, r4]
   126f0:	beq	126fc <table_column_init@@Base+0x44>
   126f4:	mov	r1, r7
   126f8:	bl	11ad0 <strcpy@plt>
   126fc:	str	r9, [r5, #4]
   12700:	str	r8, [r5, #8]
   12704:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00012708 <table_column_destroy@@Base>:
   12708:	ldr	r3, [r0]
   1270c:	add	r1, r1, r1, lsl #1
   12710:	ldr	r0, [r3, r1, lsl #2]
   12714:	cmp	r0, #0
   12718:	bxeq	lr
   1271c:	b	11ab8 <free@plt>

00012720 <table_get_column_length@@Base>:
   12720:	ldr	r0, [r0, #4]
   12724:	bx	lr

00012728 <table_get_column@@Base>:
   12728:	push	{r4, r5, r6, r7, r8, lr}
   1272c:	ldr	r7, [r0, #4]
   12730:	cmp	r7, #0
   12734:	ble	12784 <table_get_column@@Base+0x5c>
   12738:	mov	r4, #0
   1273c:	mov	r6, r1
   12740:	ldr	r8, [r0]
   12744:	mov	r5, r4
   12748:	b	12758 <table_get_column@@Base+0x30>
   1274c:	add	r5, r5, #1
   12750:	cmp	r7, r5
   12754:	beq	12778 <table_get_column@@Base+0x50>
   12758:	ldr	r0, [r8, r4]
   1275c:	mov	r1, r6
   12760:	bl	11aa0 <strcmp@plt>
   12764:	add	r4, r4, #12
   12768:	cmp	r0, #0
   1276c:	bne	1274c <table_get_column@@Base+0x24>
   12770:	mov	r0, r5
   12774:	pop	{r4, r5, r6, r7, r8, pc}
   12778:	mvn	r5, #0
   1277c:	mov	r0, r5
   12780:	pop	{r4, r5, r6, r7, r8, pc}
   12784:	mvneq	r5, #0
   12788:	movne	r5, #0
   1278c:	b	12770 <table_get_column@@Base+0x48>

00012790 <table_get_column_data_type@@Base>:
   12790:	ldr	r3, [r0]
   12794:	add	r1, r1, r1, lsl #1
   12798:	add	r3, r3, r1, lsl #2
   1279c:	ldr	r0, [r3, #4]
   127a0:	bx	lr

000127a4 <table_add_column@@Base>:
   127a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127a8:	mov	r5, r0
   127ac:	ldmib	r0, {r0, r6}
   127b0:	sub	sp, sp, #12
   127b4:	mov	r9, r1
   127b8:	mov	r1, r6
   127bc:	mov	r8, r2
   127c0:	bl	1508c <table_get_cell_ptr@@Base+0x204>
   127c4:	subs	r4, r1, #0
   127c8:	beq	12878 <table_add_column@@Base+0xd4>
   127cc:	mov	r0, r5
   127d0:	bl	13328 <table_get_row_length@@Base>
   127d4:	ldr	r6, [r5, #4]
   127d8:	add	r4, r6, r6, lsl #1
   127dc:	lsl	r4, r4, #2
   127e0:	mov	r7, r0
   127e4:	mov	r0, r8
   127e8:	bl	130b4 <table_get_default_compare_function_for_data_type@@Base>
   127ec:	mov	fp, r0
   127f0:	mov	r0, r9
   127f4:	bl	11b00 <strlen@plt>
   127f8:	ldr	r3, [r5]
   127fc:	add	sl, r3, r4
   12800:	str	r3, [sp, #4]
   12804:	add	r0, r0, #1
   12808:	bl	11adc <malloc@plt>
   1280c:	ldr	r3, [sp, #4]
   12810:	cmp	r0, #0
   12814:	str	r0, [r3, r4]
   12818:	beq	12824 <table_add_column@@Base+0x80>
   1281c:	mov	r1, r9
   12820:	bl	11ad0 <strcpy@plt>
   12824:	cmp	r7, #0
   12828:	stmib	sl, {r8, fp}
   1282c:	ble	12850 <table_add_column@@Base+0xac>
   12830:	mov	r4, #0
   12834:	mov	r1, r4
   12838:	mov	r2, r6
   1283c:	mov	r0, r5
   12840:	add	r4, r4, #1
   12844:	bl	14430 <table_cell_init@@Base>
   12848:	cmp	r7, r4
   1284c:	bne	12834 <table_add_column@@Base+0x90>
   12850:	mov	r0, r5
   12854:	mov	r3, #8
   12858:	ldr	r2, [r5, #4]
   1285c:	mvn	r1, #0
   12860:	bl	12630 <table_notify@@Base>
   12864:	ldr	r0, [r5, #4]
   12868:	add	r3, r0, #1
   1286c:	str	r3, [r5, #4]
   12870:	add	sp, sp, #12
   12874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12878:	ldr	r1, [r5, #12]
   1287c:	ldr	r0, [r5]
   12880:	add	r6, r6, r1
   12884:	str	r6, [r5, #12]
   12888:	add	r6, r6, r6, lsl #1
   1288c:	lsl	r1, r6, #2
   12890:	bl	11ac4 <realloc@plt>
   12894:	str	r0, [r5]
   12898:	mov	r0, r5
   1289c:	bl	13328 <table_get_row_length@@Base>
   128a0:	subs	r7, r0, #0
   128a4:	ble	127cc <table_add_column@@Base+0x28>
   128a8:	mov	r1, r4
   128ac:	mov	r0, r5
   128b0:	bl	134e0 <table_get_row_ptr@@Base>
   128b4:	ldr	r1, [r5, #12]
   128b8:	add	r4, r4, #1
   128bc:	lsl	r1, r1, #2
   128c0:	mov	r6, r0
   128c4:	ldr	r0, [r0]
   128c8:	bl	11ac4 <realloc@plt>
   128cc:	cmp	r7, r4
   128d0:	str	r0, [r6]
   128d4:	bne	128a8 <table_add_column@@Base+0x104>
   128d8:	b	127cc <table_add_column@@Base+0x28>

000128dc <table_remove_column@@Base>:
   128dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   128e0:	add	r5, r1, r1, lsl #1
   128e4:	ldr	r3, [r0]
   128e8:	lsl	r5, r5, #2
   128ec:	mov	r6, r0
   128f0:	ldr	r0, [r3, r5]
   128f4:	mov	r9, r1
   128f8:	cmp	r0, #0
   128fc:	beq	12904 <table_remove_column@@Base+0x28>
   12900:	bl	11ab8 <free@plt>
   12904:	ldr	r4, [r6, #4]
   12908:	sub	r4, r4, #1
   1290c:	cmp	r9, r4
   12910:	movlt	r1, r9
   12914:	bge	12950 <table_remove_column@@Base+0x74>
   12918:	ldr	r3, [r6]
   1291c:	add	r0, r5, #12
   12920:	add	r2, r3, r0
   12924:	add	r1, r1, #1
   12928:	ldr	lr, [r2, #4]
   1292c:	ldr	ip, [r2, #8]
   12930:	ldr	r7, [r2]
   12934:	add	r2, r3, r5
   12938:	cmp	r1, r4
   1293c:	str	r7, [r3, r5]
   12940:	str	lr, [r2, #4]
   12944:	str	ip, [r2, #8]
   12948:	mov	r5, r0
   1294c:	bne	12918 <table_remove_column@@Base+0x3c>
   12950:	mov	r0, r6
   12954:	bl	13328 <table_get_row_length@@Base>
   12958:	subs	r7, r0, #0
   1295c:	lslgt	r8, r9, #2
   12960:	movgt	r5, #0
   12964:	ble	129c0 <table_remove_column@@Base+0xe4>
   12968:	mov	r2, r9
   1296c:	mov	r1, r5
   12970:	mov	r0, r6
   12974:	bl	1444c <table_cell_destroy@@Base>
   12978:	mov	r1, r5
   1297c:	mov	r0, r6
   12980:	bl	134e0 <table_get_row_ptr@@Base>
   12984:	cmp	r9, r4
   12988:	movlt	r2, r8
   1298c:	movlt	r3, r9
   12990:	bge	129b4 <table_remove_column@@Base+0xd8>
   12994:	ldr	ip, [r0]
   12998:	add	r1, r2, #4
   1299c:	add	r3, r3, #1
   129a0:	ldr	lr, [ip, r1]
   129a4:	cmp	r3, r4
   129a8:	str	lr, [ip, r2]
   129ac:	mov	r2, r1
   129b0:	bne	12994 <table_remove_column@@Base+0xb8>
   129b4:	add	r5, r5, #1
   129b8:	cmp	r7, r5
   129bc:	bne	12968 <table_remove_column@@Base+0x8c>
   129c0:	ldmib	r6, {r0, r5}
   129c4:	sub	r0, r0, #1
   129c8:	str	r0, [r6, #4]
   129cc:	mov	r1, r5
   129d0:	bl	1508c <table_get_cell_ptr@@Base+0x204>
   129d4:	subs	r4, r1, #0
   129d8:	beq	129f8 <table_remove_column@@Base+0x11c>
   129dc:	mov	r0, r6
   129e0:	mov	r2, r9
   129e4:	mov	r3, #16
   129e8:	mvn	r1, #0
   129ec:	bl	12630 <table_notify@@Base>
   129f0:	mov	r0, #0
   129f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   129f8:	ldr	r1, [r6, #12]
   129fc:	ldr	r0, [r6]
   12a00:	sub	r1, r1, r5
   12a04:	str	r1, [r6, #12]
   12a08:	add	r1, r1, r1, lsl #1
   12a0c:	lsl	r1, r1, #2
   12a10:	bl	11ac4 <realloc@plt>
   12a14:	str	r0, [r6]
   12a18:	mov	r0, r6
   12a1c:	bl	13328 <table_get_row_length@@Base>
   12a20:	subs	r7, r0, #0
   12a24:	ble	129dc <table_remove_column@@Base+0x100>
   12a28:	mov	r1, r4
   12a2c:	mov	r0, r6
   12a30:	bl	134e0 <table_get_row_ptr@@Base>
   12a34:	ldr	r1, [r6, #12]
   12a38:	add	r4, r4, #1
   12a3c:	lsl	r1, r1, #2
   12a40:	mov	r5, r0
   12a44:	ldr	r0, [r0]
   12a48:	bl	11ac4 <realloc@plt>
   12a4c:	cmp	r7, r4
   12a50:	str	r0, [r5]
   12a54:	bne	12a28 <table_remove_column@@Base+0x14c>
   12a58:	b	129dc <table_remove_column@@Base+0x100>

00012a5c <table_get_column_name@@Base>:
   12a5c:	ldr	r3, [r0]
   12a60:	add	r1, r1, r1, lsl #1
   12a64:	ldr	r0, [r3, r1, lsl #2]
   12a68:	bx	lr

00012a6c <table_get_col_ptr@@Base>:
   12a6c:	add	r1, r1, r1, lsl #1
   12a70:	ldr	r0, [r0]
   12a74:	add	r0, r0, r1, lsl #2
   12a78:	bx	lr

00012a7c <table_get_column_compare_function@@Base>:
   12a7c:	ldr	r3, [r0]
   12a80:	add	r1, r1, r1, lsl #1
   12a84:	add	r3, r3, r1, lsl #2
   12a88:	ldr	r0, [r3, #8]
   12a8c:	bx	lr

00012a90 <table_set_column_compare_function@@Base>:
   12a90:	ldr	r3, [r0]
   12a94:	add	r1, r1, r1, lsl #1
   12a98:	add	r3, r3, r1, lsl #2
   12a9c:	str	r2, [r3, #8]
   12aa0:	bx	lr

00012aa4 <table_compare_bool@@Base>:
   12aa4:	cmp	r0, #0
   12aa8:	beq	12ad8 <table_compare_bool@@Base+0x34>
   12aac:	cmp	r1, #0
   12ab0:	beq	12ad0 <table_compare_bool@@Base+0x2c>
   12ab4:	ldrb	r2, [r0]
   12ab8:	ldrb	r3, [r1]
   12abc:	cmp	r2, r3
   12ac0:	bgt	12ad0 <table_compare_bool@@Base+0x2c>
   12ac4:	mvnlt	r0, #0
   12ac8:	movge	r0, #0
   12acc:	bx	lr
   12ad0:	mov	r0, #1
   12ad4:	bx	lr
   12ad8:	adds	r0, r1, #0
   12adc:	mvnne	r0, #0
   12ae0:	bx	lr

00012ae4 <table_compare_int8@@Base>:
   12ae4:	cmp	r0, #0
   12ae8:	beq	12b18 <table_compare_int8@@Base+0x34>
   12aec:	cmp	r1, #0
   12af0:	beq	12b10 <table_compare_int8@@Base+0x2c>
   12af4:	ldrsb	r2, [r0]
   12af8:	ldrsb	r3, [r1]
   12afc:	cmp	r2, r3
   12b00:	bgt	12b10 <table_compare_int8@@Base+0x2c>
   12b04:	mvnlt	r0, #0
   12b08:	movge	r0, #0
   12b0c:	bx	lr
   12b10:	mov	r0, #1
   12b14:	bx	lr
   12b18:	adds	r0, r1, #0
   12b1c:	mvnne	r0, #0
   12b20:	bx	lr

00012b24 <table_compare_int32@@Base>:
   12b24:	cmp	r0, #0
   12b28:	beq	12b58 <table_compare_int32@@Base+0x34>
   12b2c:	cmp	r1, #0
   12b30:	beq	12b50 <table_compare_int32@@Base+0x2c>
   12b34:	ldr	r2, [r0]
   12b38:	ldr	r3, [r1]
   12b3c:	cmp	r2, r3
   12b40:	bgt	12b50 <table_compare_int32@@Base+0x2c>
   12b44:	mvnlt	r0, #0
   12b48:	movge	r0, #0
   12b4c:	bx	lr
   12b50:	mov	r0, #1
   12b54:	bx	lr
   12b58:	adds	r0, r1, #0
   12b5c:	mvnne	r0, #0
   12b60:	bx	lr

00012b64 <table_compare_uint32@@Base>:
   12b64:	cmp	r0, #0
   12b68:	beq	12b98 <table_compare_uint32@@Base+0x34>
   12b6c:	cmp	r1, #0
   12b70:	beq	12b90 <table_compare_uint32@@Base+0x2c>
   12b74:	ldr	r2, [r0]
   12b78:	ldr	r3, [r1]
   12b7c:	cmp	r2, r3
   12b80:	bhi	12b90 <table_compare_uint32@@Base+0x2c>
   12b84:	mvncc	r0, #0
   12b88:	movcs	r0, #0
   12b8c:	bx	lr
   12b90:	mov	r0, #1
   12b94:	bx	lr
   12b98:	adds	r0, r1, #0
   12b9c:	mvnne	r0, #0
   12ba0:	bx	lr

00012ba4 <table_compare_uint64@@Base>:
   12ba4:	cmp	r0, #0
   12ba8:	beq	12be0 <table_compare_uint64@@Base+0x3c>
   12bac:	cmp	r1, #0
   12bb0:	beq	12bec <table_compare_uint64@@Base+0x48>
   12bb4:	ldrd	r2, [r1]
   12bb8:	push	{r4, r5}
   12bbc:	ldrd	r4, [r0]
   12bc0:	cmp	r5, r3
   12bc4:	cmpeq	r4, r2
   12bc8:	movhi	r0, #1
   12bcc:	bhi	12bd8 <table_compare_uint64@@Base+0x34>
   12bd0:	mvncc	r0, #0
   12bd4:	movcs	r0, #0
   12bd8:	pop	{r4, r5}
   12bdc:	bx	lr
   12be0:	adds	r0, r1, #0
   12be4:	mvnne	r0, #0
   12be8:	bx	lr
   12bec:	mov	r0, #1
   12bf0:	bx	lr

00012bf4 <table_compare_short@@Base>:
   12bf4:	cmp	r0, #0
   12bf8:	beq	12c28 <table_compare_short@@Base+0x34>
   12bfc:	cmp	r1, #0
   12c00:	beq	12c20 <table_compare_short@@Base+0x2c>
   12c04:	ldrsh	r2, [r0]
   12c08:	ldrsh	r3, [r1]
   12c0c:	cmp	r2, r3
   12c10:	bgt	12c20 <table_compare_short@@Base+0x2c>
   12c14:	mvnlt	r0, #0
   12c18:	movge	r0, #0
   12c1c:	bx	lr
   12c20:	mov	r0, #1
   12c24:	bx	lr
   12c28:	adds	r0, r1, #0
   12c2c:	mvnne	r0, #0
   12c30:	bx	lr

00012c34 <table_compare_ushort@@Base>:
   12c34:	cmp	r0, #0
   12c38:	beq	12c68 <table_compare_ushort@@Base+0x34>
   12c3c:	cmp	r1, #0
   12c40:	beq	12c60 <table_compare_ushort@@Base+0x2c>
   12c44:	ldrh	r2, [r0]
   12c48:	ldrh	r3, [r1]
   12c4c:	cmp	r2, r3
   12c50:	bhi	12c60 <table_compare_ushort@@Base+0x2c>
   12c54:	mvncc	r0, #0
   12c58:	movcs	r0, #0
   12c5c:	bx	lr
   12c60:	mov	r0, #1
   12c64:	bx	lr
   12c68:	adds	r0, r1, #0
   12c6c:	mvnne	r0, #0
   12c70:	bx	lr

00012c74 <table_compare_long@@Base>:
   12c74:	cmp	r0, #0
   12c78:	beq	12ca8 <table_compare_long@@Base+0x34>
   12c7c:	cmp	r1, #0
   12c80:	beq	12ca0 <table_compare_long@@Base+0x2c>
   12c84:	ldr	r2, [r0]
   12c88:	ldr	r3, [r1]
   12c8c:	cmp	r2, r3
   12c90:	bgt	12ca0 <table_compare_long@@Base+0x2c>
   12c94:	mvnlt	r0, #0
   12c98:	movge	r0, #0
   12c9c:	bx	lr
   12ca0:	mov	r0, #1
   12ca4:	bx	lr
   12ca8:	adds	r0, r1, #0
   12cac:	mvnne	r0, #0
   12cb0:	bx	lr

00012cb4 <table_compare_llong@@Base>:
   12cb4:	cmp	r0, #0
   12cb8:	beq	12cf8 <table_compare_llong@@Base+0x44>
   12cbc:	cmp	r1, #0
   12cc0:	beq	12d04 <table_compare_llong@@Base+0x50>
   12cc4:	ldrd	r2, [r1]
   12cc8:	push	{r4, r5}
   12ccc:	ldrd	r4, [r0]
   12cd0:	cmp	r2, r4
   12cd4:	sbcs	r1, r3, r5
   12cd8:	movlt	r0, #1
   12cdc:	blt	12cf0 <table_compare_llong@@Base+0x3c>
   12ce0:	cmp	r4, r2
   12ce4:	sbcs	r3, r5, r3
   12ce8:	mvnlt	r0, #0
   12cec:	movge	r0, #0
   12cf0:	pop	{r4, r5}
   12cf4:	bx	lr
   12cf8:	adds	r0, r1, #0
   12cfc:	mvnne	r0, #0
   12d00:	bx	lr
   12d04:	mov	r0, #1
   12d08:	bx	lr

00012d0c <table_compare_ullong@@Base>:
   12d0c:	cmp	r0, #0
   12d10:	beq	12d40 <table_compare_ullong@@Base+0x34>
   12d14:	cmp	r1, #0
   12d18:	beq	12d38 <table_compare_ullong@@Base+0x2c>
   12d1c:	ldr	r2, [r0]
   12d20:	ldr	r3, [r1]
   12d24:	cmp	r2, r3
   12d28:	bhi	12d38 <table_compare_ullong@@Base+0x2c>
   12d2c:	mvncc	r0, #0
   12d30:	movcs	r0, #0
   12d34:	bx	lr
   12d38:	mov	r0, #1
   12d3c:	bx	lr
   12d40:	adds	r0, r1, #0
   12d44:	mvnne	r0, #0
   12d48:	bx	lr

00012d4c <table_compare_float@@Base>:
   12d4c:	cmp	r0, #0
   12d50:	beq	12d84 <table_compare_float@@Base+0x38>
   12d54:	cmp	r1, #0
   12d58:	beq	12d7c <table_compare_float@@Base+0x30>
   12d5c:	vldr	s14, [r0]
   12d60:	vldr	s15, [r1]
   12d64:	vcmpe.f32	s14, s15
   12d68:	vmrs	APSR_nzcv, fpscr
   12d6c:	bgt	12d7c <table_compare_float@@Base+0x30>
   12d70:	mvnmi	r0, #0
   12d74:	movpl	r0, #0
   12d78:	bx	lr
   12d7c:	mov	r0, #1
   12d80:	bx	lr
   12d84:	adds	r0, r1, #0
   12d88:	mvnne	r0, #0
   12d8c:	bx	lr

00012d90 <table_compare_double@@Base>:
   12d90:	cmp	r0, #0
   12d94:	beq	12dc8 <table_compare_double@@Base+0x38>
   12d98:	cmp	r1, #0
   12d9c:	beq	12dc0 <table_compare_double@@Base+0x30>
   12da0:	vldr	d6, [r0]
   12da4:	vldr	d7, [r1]
   12da8:	vcmpe.f64	d6, d7
   12dac:	vmrs	APSR_nzcv, fpscr
   12db0:	bgt	12dc0 <table_compare_double@@Base+0x30>
   12db4:	mvnmi	r0, #0
   12db8:	movpl	r0, #0
   12dbc:	bx	lr
   12dc0:	mov	r0, #1
   12dc4:	bx	lr
   12dc8:	adds	r0, r1, #0
   12dcc:	mvnne	r0, #0
   12dd0:	bx	lr

00012dd4 <table_compare_ldouble@@Base>:
   12dd4:	cmp	r0, #0
   12dd8:	beq	12e0c <table_compare_ldouble@@Base+0x38>
   12ddc:	cmp	r1, #0
   12de0:	beq	12e04 <table_compare_ldouble@@Base+0x30>
   12de4:	vldr	d6, [r0]
   12de8:	vldr	d7, [r1]
   12dec:	vcmpe.f64	d6, d7
   12df0:	vmrs	APSR_nzcv, fpscr
   12df4:	bgt	12e04 <table_compare_ldouble@@Base+0x30>
   12df8:	mvnmi	r0, #0
   12dfc:	movpl	r0, #0
   12e00:	bx	lr
   12e04:	mov	r0, #1
   12e08:	bx	lr
   12e0c:	adds	r0, r1, #0
   12e10:	mvnne	r0, #0
   12e14:	bx	lr

00012e18 <table_compare_uchar@@Base>:
   12e18:	cmp	r0, #0
   12e1c:	beq	12e4c <table_compare_uchar@@Base+0x34>
   12e20:	cmp	r1, #0
   12e24:	beq	12e44 <table_compare_uchar@@Base+0x2c>
   12e28:	ldrb	r2, [r0]
   12e2c:	ldrb	r3, [r1]
   12e30:	cmp	r2, r3
   12e34:	bhi	12e44 <table_compare_uchar@@Base+0x2c>
   12e38:	mvncc	r0, #0
   12e3c:	movcs	r0, #0
   12e40:	bx	lr
   12e44:	mov	r0, #1
   12e48:	bx	lr
   12e4c:	adds	r0, r1, #0
   12e50:	mvnne	r0, #0
   12e54:	bx	lr

00012e58 <table_compare_ptr@@Base>:
   12e58:	cmp	r0, r1
   12e5c:	bhi	12e6c <table_compare_ptr@@Base+0x14>
   12e60:	mvncc	r0, #0
   12e64:	movcs	r0, #0
   12e68:	bx	lr
   12e6c:	mov	r0, #1
   12e70:	bx	lr

00012e74 <table_compare_string@@Base>:
   12e74:	cmp	r0, #0
   12e78:	beq	12e88 <table_compare_string@@Base+0x14>
   12e7c:	cmp	r1, #0
   12e80:	beq	12e94 <table_compare_string@@Base+0x20>
   12e84:	b	11aa0 <strcmp@plt>
   12e88:	adds	r0, r1, #0
   12e8c:	mvnne	r0, #0
   12e90:	bx	lr
   12e94:	mov	r0, #1
   12e98:	bx	lr

00012e9c <table_compare_ulong@@Base>:
   12e9c:	cmp	r0, #0
   12ea0:	beq	12ed0 <table_compare_ulong@@Base+0x34>
   12ea4:	cmp	r1, #0
   12ea8:	beq	12ec8 <table_compare_ulong@@Base+0x2c>
   12eac:	ldr	r2, [r0]
   12eb0:	ldr	r3, [r1]
   12eb4:	cmp	r2, r3
   12eb8:	bhi	12ec8 <table_compare_ulong@@Base+0x2c>
   12ebc:	mvncc	r0, #0
   12ec0:	movcs	r0, #0
   12ec4:	bx	lr
   12ec8:	mov	r0, #1
   12ecc:	bx	lr
   12ed0:	adds	r0, r1, #0
   12ed4:	mvnne	r0, #0
   12ed8:	bx	lr

00012edc <table_compare_int@@Base>:
   12edc:	cmp	r0, #0
   12ee0:	beq	12f10 <table_compare_int@@Base+0x34>
   12ee4:	cmp	r1, #0
   12ee8:	beq	12f08 <table_compare_int@@Base+0x2c>
   12eec:	ldr	r2, [r0]
   12ef0:	ldr	r3, [r1]
   12ef4:	cmp	r2, r3
   12ef8:	bgt	12f08 <table_compare_int@@Base+0x2c>
   12efc:	mvnlt	r0, #0
   12f00:	movge	r0, #0
   12f04:	bx	lr
   12f08:	mov	r0, #1
   12f0c:	bx	lr
   12f10:	adds	r0, r1, #0
   12f14:	mvnne	r0, #0
   12f18:	bx	lr

00012f1c <table_compare_uint@@Base>:
   12f1c:	cmp	r0, #0
   12f20:	beq	12f50 <table_compare_uint@@Base+0x34>
   12f24:	cmp	r1, #0
   12f28:	beq	12f48 <table_compare_uint@@Base+0x2c>
   12f2c:	ldr	r2, [r0]
   12f30:	ldr	r3, [r1]
   12f34:	cmp	r2, r3
   12f38:	bhi	12f48 <table_compare_uint@@Base+0x2c>
   12f3c:	mvncc	r0, #0
   12f40:	movcs	r0, #0
   12f44:	bx	lr
   12f48:	mov	r0, #1
   12f4c:	bx	lr
   12f50:	adds	r0, r1, #0
   12f54:	mvnne	r0, #0
   12f58:	bx	lr

00012f5c <table_compare_int16@@Base>:
   12f5c:	cmp	r0, #0
   12f60:	beq	12f90 <table_compare_int16@@Base+0x34>
   12f64:	cmp	r1, #0
   12f68:	beq	12f88 <table_compare_int16@@Base+0x2c>
   12f6c:	ldrsh	r2, [r0]
   12f70:	ldrsh	r3, [r1]
   12f74:	cmp	r2, r3
   12f78:	bgt	12f88 <table_compare_int16@@Base+0x2c>
   12f7c:	mvnlt	r0, #0
   12f80:	movge	r0, #0
   12f84:	bx	lr
   12f88:	mov	r0, #1
   12f8c:	bx	lr
   12f90:	adds	r0, r1, #0
   12f94:	mvnne	r0, #0
   12f98:	bx	lr

00012f9c <table_compare_uint16@@Base>:
   12f9c:	cmp	r0, #0
   12fa0:	beq	12fd0 <table_compare_uint16@@Base+0x34>
   12fa4:	cmp	r1, #0
   12fa8:	beq	12fc8 <table_compare_uint16@@Base+0x2c>
   12fac:	ldrh	r2, [r0]
   12fb0:	ldrh	r3, [r1]
   12fb4:	cmp	r2, r3
   12fb8:	bhi	12fc8 <table_compare_uint16@@Base+0x2c>
   12fbc:	mvncc	r0, #0
   12fc0:	movcs	r0, #0
   12fc4:	bx	lr
   12fc8:	mov	r0, #1
   12fcc:	bx	lr
   12fd0:	adds	r0, r1, #0
   12fd4:	mvnne	r0, #0
   12fd8:	bx	lr

00012fdc <table_compare_int64@@Base>:
   12fdc:	cmp	r0, #0
   12fe0:	beq	13020 <table_compare_int64@@Base+0x44>
   12fe4:	cmp	r1, #0
   12fe8:	beq	1302c <table_compare_int64@@Base+0x50>
   12fec:	ldrd	r2, [r1]
   12ff0:	push	{r4, r5}
   12ff4:	ldrd	r4, [r0]
   12ff8:	cmp	r2, r4
   12ffc:	sbcs	r1, r3, r5
   13000:	movlt	r0, #1
   13004:	blt	13018 <table_compare_int64@@Base+0x3c>
   13008:	cmp	r4, r2
   1300c:	sbcs	r3, r5, r3
   13010:	mvnlt	r0, #0
   13014:	movge	r0, #0
   13018:	pop	{r4, r5}
   1301c:	bx	lr
   13020:	adds	r0, r1, #0
   13024:	mvnne	r0, #0
   13028:	bx	lr
   1302c:	mov	r0, #1
   13030:	bx	lr

00013034 <table_compare_char@@Base>:
   13034:	cmp	r0, #0
   13038:	beq	13068 <table_compare_char@@Base+0x34>
   1303c:	cmp	r1, #0
   13040:	beq	13060 <table_compare_char@@Base+0x2c>
   13044:	ldrb	r2, [r0]
   13048:	ldrb	r3, [r1]
   1304c:	cmp	r2, r3
   13050:	bhi	13060 <table_compare_char@@Base+0x2c>
   13054:	mvncc	r0, #0
   13058:	movcs	r0, #0
   1305c:	bx	lr
   13060:	mov	r0, #1
   13064:	bx	lr
   13068:	adds	r0, r1, #0
   1306c:	mvnne	r0, #0
   13070:	bx	lr

00013074 <table_compare_uint8@@Base>:
   13074:	cmp	r0, #0
   13078:	beq	130a8 <table_compare_uint8@@Base+0x34>
   1307c:	cmp	r1, #0
   13080:	beq	130a0 <table_compare_uint8@@Base+0x2c>
   13084:	ldrb	r2, [r0]
   13088:	ldrb	r3, [r1]
   1308c:	cmp	r2, r3
   13090:	bhi	130a0 <table_compare_uint8@@Base+0x2c>
   13094:	mvncc	r0, #0
   13098:	movcs	r0, #0
   1309c:	bx	lr
   130a0:	mov	r0, #1
   130a4:	bx	lr
   130a8:	adds	r0, r1, #0
   130ac:	mvnne	r0, #0
   130b0:	bx	lr

000130b4 <table_get_default_compare_function_for_data_type@@Base>:
   130b4:	cmp	r0, #23
   130b8:	ldrls	r3, [pc, #8]	; 130c8 <table_get_default_compare_function_for_data_type@@Base+0x14>
   130bc:	ldrls	r0, [r3, r0, lsl #2]
   130c0:	movhi	r0, #0
   130c4:	bx	lr
   130c8:	andeq	r5, r1, r0, lsl #3

000130cc <table_get@@Base>:
   130cc:	push	{r4, lr}
   130d0:	bl	14e88 <table_get_cell_ptr@@Base>
   130d4:	ldr	r0, [r0]
   130d8:	pop	{r4, pc}

000130dc <table_get_bool@@Base>:
   130dc:	push	{r4, lr}
   130e0:	bl	14e88 <table_get_cell_ptr@@Base>
   130e4:	ldr	r3, [r0]
   130e8:	ldrb	r0, [r3]
   130ec:	pop	{r4, pc}

000130f0 <table_get_int@@Base>:
   130f0:	push	{r4, lr}
   130f4:	bl	14e88 <table_get_cell_ptr@@Base>
   130f8:	ldr	r3, [r0]
   130fc:	ldr	r0, [r3]
   13100:	pop	{r4, pc}

00013104 <table_get_uint@@Base>:
   13104:	push	{r4, lr}
   13108:	bl	14e88 <table_get_cell_ptr@@Base>
   1310c:	ldr	r3, [r0]
   13110:	ldr	r0, [r3]
   13114:	pop	{r4, pc}

00013118 <table_get_int8@@Base>:
   13118:	push	{r4, lr}
   1311c:	bl	14e88 <table_get_cell_ptr@@Base>
   13120:	ldr	r3, [r0]
   13124:	ldrsb	r0, [r3]
   13128:	pop	{r4, pc}

0001312c <table_get_uint8@@Base>:
   1312c:	push	{r4, lr}
   13130:	bl	14e88 <table_get_cell_ptr@@Base>
   13134:	ldr	r3, [r0]
   13138:	ldrb	r0, [r3]
   1313c:	pop	{r4, pc}

00013140 <table_get_int16@@Base>:
   13140:	push	{r4, lr}
   13144:	bl	14e88 <table_get_cell_ptr@@Base>
   13148:	ldr	r3, [r0]
   1314c:	ldrsh	r0, [r3]
   13150:	pop	{r4, pc}

00013154 <table_get_uint16@@Base>:
   13154:	push	{r4, lr}
   13158:	bl	14e88 <table_get_cell_ptr@@Base>
   1315c:	ldr	r3, [r0]
   13160:	ldrh	r0, [r3]
   13164:	pop	{r4, pc}

00013168 <table_get_int32@@Base>:
   13168:	push	{r4, lr}
   1316c:	bl	14e88 <table_get_cell_ptr@@Base>
   13170:	ldr	r3, [r0]
   13174:	ldr	r0, [r3]
   13178:	pop	{r4, pc}

0001317c <table_get_uint32@@Base>:
   1317c:	push	{r4, lr}
   13180:	bl	14e88 <table_get_cell_ptr@@Base>
   13184:	ldr	r3, [r0]
   13188:	ldr	r0, [r3]
   1318c:	pop	{r4, pc}

00013190 <table_get_int64@@Base>:
   13190:	push	{r4, lr}
   13194:	bl	14e88 <table_get_cell_ptr@@Base>
   13198:	ldr	r3, [r0]
   1319c:	ldrd	r0, [r3]
   131a0:	pop	{r4, pc}

000131a4 <table_get_uint64@@Base>:
   131a4:	push	{r4, lr}
   131a8:	bl	14e88 <table_get_cell_ptr@@Base>
   131ac:	ldr	r3, [r0]
   131b0:	ldrd	r0, [r3]
   131b4:	pop	{r4, pc}

000131b8 <table_get_short@@Base>:
   131b8:	push	{r4, lr}
   131bc:	bl	14e88 <table_get_cell_ptr@@Base>
   131c0:	ldr	r3, [r0]
   131c4:	ldrsh	r0, [r3]
   131c8:	pop	{r4, pc}

000131cc <table_get_ushort@@Base>:
   131cc:	push	{r4, lr}
   131d0:	bl	14e88 <table_get_cell_ptr@@Base>
   131d4:	ldr	r3, [r0]
   131d8:	ldrh	r0, [r3]
   131dc:	pop	{r4, pc}

000131e0 <table_get_long@@Base>:
   131e0:	push	{r4, lr}
   131e4:	bl	14e88 <table_get_cell_ptr@@Base>
   131e8:	ldr	r3, [r0]
   131ec:	ldr	r0, [r3]
   131f0:	pop	{r4, pc}

000131f4 <table_get_ulong@@Base>:
   131f4:	push	{r4, lr}
   131f8:	bl	14e88 <table_get_cell_ptr@@Base>
   131fc:	ldr	r3, [r0]
   13200:	ldr	r0, [r3]
   13204:	pop	{r4, pc}

00013208 <table_get_llong@@Base>:
   13208:	push	{r4, lr}
   1320c:	bl	14e88 <table_get_cell_ptr@@Base>
   13210:	ldr	r3, [r0]
   13214:	ldrd	r0, [r3]
   13218:	pop	{r4, pc}

0001321c <table_get_ullong@@Base>:
   1321c:	push	{r4, lr}
   13220:	bl	14e88 <table_get_cell_ptr@@Base>
   13224:	ldr	r3, [r0]
   13228:	ldrd	r0, [r3]
   1322c:	pop	{r4, pc}

00013230 <table_get_float@@Base>:
   13230:	push	{r4, lr}
   13234:	bl	14e88 <table_get_cell_ptr@@Base>
   13238:	ldr	r3, [r0]
   1323c:	vldr	s0, [r3]
   13240:	pop	{r4, pc}

00013244 <table_get_double@@Base>:
   13244:	push	{r4, lr}
   13248:	bl	14e88 <table_get_cell_ptr@@Base>
   1324c:	ldr	r3, [r0]
   13250:	vldr	d0, [r3]
   13254:	pop	{r4, pc}

00013258 <table_get_ldouble@@Base>:
   13258:	push	{r4, lr}
   1325c:	bl	14e88 <table_get_cell_ptr@@Base>
   13260:	ldr	r3, [r0]
   13264:	vldr	d0, [r3]
   13268:	pop	{r4, pc}

0001326c <table_get_char@@Base>:
   1326c:	push	{r4, lr}
   13270:	bl	14e88 <table_get_cell_ptr@@Base>
   13274:	ldr	r3, [r0]
   13278:	ldrb	r0, [r3]
   1327c:	pop	{r4, pc}

00013280 <table_get_uchar@@Base>:
   13280:	push	{r4, lr}
   13284:	bl	14e88 <table_get_cell_ptr@@Base>
   13288:	ldr	r3, [r0]
   1328c:	ldrb	r0, [r3]
   13290:	pop	{r4, pc}

00013294 <table_get_string@@Base>:
   13294:	push	{r4, lr}
   13298:	bl	14e88 <table_get_cell_ptr@@Base>
   1329c:	ldr	r0, [r0]
   132a0:	pop	{r4, pc}

000132a4 <table_get_ptr@@Base>:
   132a4:	push	{r4, lr}
   132a8:	bl	14e88 <table_get_cell_ptr@@Base>
   132ac:	ldr	r0, [r0]
   132b0:	pop	{r4, pc}

000132b4 <table_row_init@@Base>:
   132b4:	ldr	r3, [r0, #12]
   132b8:	push	{r4, r5, r6, lr}
   132bc:	mov	r5, r1
   132c0:	ldr	r4, [r0, #16]
   132c4:	lsl	r0, r3, #2
   132c8:	bl	11adc <malloc@plt>
   132cc:	str	r0, [r4, r5, lsl #2]
   132d0:	pop	{r4, r5, r6, pc}

000132d4 <table_row_destroy@@Base>:
   132d4:	push	{r4, r5, r6, r7, r8, lr}
   132d8:	mov	r6, r0
   132dc:	mov	r5, r1
   132e0:	bl	12720 <table_get_column_length@@Base>
   132e4:	ldr	r8, [r6, #16]
   132e8:	subs	r7, r0, #0
   132ec:	movgt	r4, #0
   132f0:	ble	13310 <table_row_destroy@@Base+0x3c>
   132f4:	mov	r2, r4
   132f8:	mov	r1, r5
   132fc:	add	r4, r4, #1
   13300:	mov	r0, r6
   13304:	bl	1444c <table_cell_destroy@@Base>
   13308:	cmp	r7, r4
   1330c:	bne	132f4 <table_row_destroy@@Base+0x20>
   13310:	ldr	r0, [r8, r5, lsl #2]
   13314:	cmp	r0, #0
   13318:	beq	13324 <table_row_destroy@@Base+0x50>
   1331c:	pop	{r4, r5, r6, r7, r8, lr}
   13320:	b	11ab8 <free@plt>
   13324:	pop	{r4, r5, r6, r7, r8, pc}

00013328 <table_get_row_length@@Base>:
   13328:	ldr	r0, [r0, #20]
   1332c:	bx	lr

00013330 <table_add_row@@Base>:
   13330:	push	{r4, r5, r6, r7, r8, lr}
   13334:	mov	r5, r0
   13338:	ldr	r4, [r0, #24]
   1333c:	ldr	r6, [r0, #20]
   13340:	mov	r1, r4
   13344:	mov	r0, r6
   13348:	bl	1508c <table_get_cell_ptr@@Base+0x204>
   1334c:	cmp	r1, #0
   13350:	bne	13374 <table_add_row@@Base+0x44>
   13354:	ldr	r1, [r5, #28]
   13358:	ldr	r0, [r5, #16]
   1335c:	add	r1, r4, r1
   13360:	str	r1, [r5, #28]
   13364:	lsl	r1, r1, #2
   13368:	bl	11ac4 <realloc@plt>
   1336c:	ldr	r6, [r5, #20]
   13370:	str	r0, [r5, #16]
   13374:	mov	r0, r5
   13378:	bl	12720 <table_get_column_length@@Base>
   1337c:	ldr	r4, [r5, #16]
   13380:	mov	r7, r0
   13384:	ldr	r0, [r5, #12]
   13388:	lsl	r0, r0, #2
   1338c:	bl	11adc <malloc@plt>
   13390:	cmp	r7, #0
   13394:	str	r0, [r4, r6, lsl #2]
   13398:	ble	133bc <table_add_row@@Base+0x8c>
   1339c:	mov	r4, #0
   133a0:	mov	r2, r4
   133a4:	mov	r1, r6
   133a8:	add	r4, r4, #1
   133ac:	mov	r0, r5
   133b0:	bl	14430 <table_cell_init@@Base>
   133b4:	cmp	r7, r4
   133b8:	bne	133a0 <table_add_row@@Base+0x70>
   133bc:	mov	r0, r5
   133c0:	mov	r3, #2
   133c4:	mvn	r2, #0
   133c8:	ldr	r1, [r5, #20]
   133cc:	bl	12630 <table_notify@@Base>
   133d0:	ldr	r0, [r5, #20]
   133d4:	add	r3, r0, #1
   133d8:	str	r3, [r5, #20]
   133dc:	pop	{r4, r5, r6, r7, r8, pc}

000133e0 <table_remove_row@@Base>:
   133e0:	push	{r4, r5, r6, r7, r8, lr}
   133e4:	mov	r5, r0
   133e8:	mov	r6, r1
   133ec:	ldr	r7, [r0, #20]
   133f0:	bl	12720 <table_get_column_length@@Base>
   133f4:	subs	r8, r0, #0
   133f8:	movgt	r4, #0
   133fc:	ble	13440 <table_remove_row@@Base+0x60>
   13400:	mov	r1, r4
   13404:	mov	r0, r5
   13408:	bl	12790 <table_get_column_data_type@@Base>
   1340c:	mov	r2, r4
   13410:	mov	r1, r6
   13414:	add	r4, r4, #1
   13418:	cmp	r0, #23
   1341c:	mov	r0, r5
   13420:	beq	13438 <table_remove_row@@Base+0x58>
   13424:	bl	14e88 <table_get_cell_ptr@@Base>
   13428:	ldr	r3, [r0]
   1342c:	subs	r0, r3, #0
   13430:	beq	13438 <table_remove_row@@Base+0x58>
   13434:	bl	11ab8 <free@plt>
   13438:	cmp	r8, r4
   1343c:	bne	13400 <table_remove_row@@Base+0x20>
   13440:	ldr	r3, [r5, #16]
   13444:	lsl	r4, r6, #2
   13448:	ldr	r0, [r3, r6, lsl #2]
   1344c:	cmp	r0, #0
   13450:	beq	13458 <table_remove_row@@Base+0x78>
   13454:	bl	11ab8 <free@plt>
   13458:	sub	ip, r7, #1
   1345c:	cmp	r6, ip
   13460:	movlt	r3, r6
   13464:	bge	13488 <table_remove_row@@Base+0xa8>
   13468:	ldr	r1, [r5, #16]
   1346c:	add	r2, r4, #4
   13470:	add	r3, r3, #1
   13474:	ldr	r0, [r1, r2]
   13478:	cmp	r3, ip
   1347c:	str	r0, [r1, r4]
   13480:	mov	r4, r2
   13484:	bne	13468 <table_remove_row@@Base+0x88>
   13488:	ldr	r0, [r5, #20]
   1348c:	ldr	r4, [r5, #24]
   13490:	sub	r0, r0, #1
   13494:	str	r0, [r5, #20]
   13498:	mov	r1, r4
   1349c:	bl	1508c <table_get_cell_ptr@@Base+0x204>
   134a0:	cmp	r1, #0
   134a4:	bne	134c4 <table_remove_row@@Base+0xe4>
   134a8:	ldr	r1, [r5, #28]
   134ac:	ldr	r0, [r5, #16]
   134b0:	sub	r1, r1, r4
   134b4:	str	r1, [r5, #28]
   134b8:	lsl	r1, r1, #2
   134bc:	bl	11ac4 <realloc@plt>
   134c0:	str	r0, [r5, #16]
   134c4:	mov	r0, r5
   134c8:	mov	r1, r6
   134cc:	mov	r3, #4
   134d0:	mvn	r2, #0
   134d4:	bl	12630 <table_notify@@Base>
   134d8:	mov	r0, #0
   134dc:	pop	{r4, r5, r6, r7, r8, pc}

000134e0 <table_get_row_ptr@@Base>:
   134e0:	ldr	r0, [r0, #16]
   134e4:	add	r0, r0, r1, lsl #2
   134e8:	bx	lr

000134ec <table_set_row_ptr@@Base>:
   134ec:	ldr	r3, [r0, #16]
   134f0:	ldr	r2, [r2]
   134f4:	str	r2, [r3, r1, lsl #2]
   134f8:	bx	lr

000134fc <table_set@@Base>:
   134fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13500:	mov	r5, r0
   13504:	mov	r6, r2
   13508:	ldr	r4, [sp, #32]
   1350c:	mov	r9, r1
   13510:	mov	r7, r3
   13514:	bl	14e88 <table_get_cell_ptr@@Base>
   13518:	mov	r1, r6
   1351c:	mov	r8, r0
   13520:	mov	r0, r5
   13524:	bl	12a6c <table_get_col_ptr@@Base>
   13528:	cmp	r4, #23
   1352c:	ldrls	pc, [pc, r4, lsl #2]
   13530:	b	135a8 <table_set@@Base+0xac>
   13534:	andeq	r3, r1, ip, asr #14
   13538:	andeq	r3, r1, ip, lsr r7
   1353c:	andeq	r3, r1, ip, lsr #14
   13540:	andeq	r3, r1, ip, lsl r7
   13544:	andeq	r3, r1, ip, lsl #14
   13548:	andeq	r3, r1, r8, ror #13
   1354c:	ldrdeq	r3, [r1], -r8
   13550:	andeq	r3, r1, r8, asr #13
   13554:	andeq	r3, r1, ip, lsl #15
   13558:	andeq	r3, r1, ip, ror r7
   1355c:	andeq	r3, r1, ip, ror #14
   13560:	andeq	r3, r1, ip, asr r7
   13564:	ldrdeq	r3, [r1], -r8
   13568:			; <UNDEFINED> instruction: 0x000137b8
   1356c:	andeq	r3, r1, r8, asr #15
   13570:			; <UNDEFINED> instruction: 0x000136b8
   13574:	muleq	r1, r4, r6
   13578:	andeq	r3, r1, r4, lsl #13
   1357c:	andeq	r3, r1, r8, asr r6
   13580:	andeq	r3, r1, r8, asr #12
   13584:	andeq	r3, r1, r8, lsr r6
   13588:	andeq	r3, r1, r0, lsl #12
   1358c:	ldrdeq	r3, [r1], -ip
   13590:			; <UNDEFINED> instruction: 0x000135b0
   13594:	bl	11adc <malloc@plt>
   13598:	cmp	r0, #0
   1359c:	mov	r3, r0
   135a0:	str	r0, [r8]
   135a4:	bne	137a4 <table_set@@Base+0x2a8>
   135a8:	mvn	r0, #0
   135ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   135b0:	ldr	r3, [r0, #4]
   135b4:	cmp	r3, #23
   135b8:	bne	135a8 <table_set@@Base+0xac>
   135bc:	str	r7, [r8]
   135c0:	mov	r0, r5
   135c4:	mov	r2, r6
   135c8:	mov	r1, r9
   135cc:	mov	r3, #1
   135d0:	bl	12630 <table_notify@@Base>
   135d4:	mov	r0, #0
   135d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   135dc:	ldr	r3, [r0, #4]
   135e0:	cmp	r3, #22
   135e4:	bne	135a8 <table_set@@Base+0xac>
   135e8:	ldr	r0, [r8]
   135ec:	cmp	r0, #0
   135f0:	beq	13800 <table_set@@Base+0x304>
   135f4:	ldrb	r3, [r7]
   135f8:	strb	r3, [r0]
   135fc:	b	135c0 <table_set@@Base+0xc4>
   13600:	ldr	r3, [r0, #4]
   13604:	cmp	r3, #21
   13608:	bne	135a8 <table_set@@Base+0xac>
   1360c:	mov	r0, r7
   13610:	bl	11b00 <strlen@plt>
   13614:	add	r1, r0, #1
   13618:	ldr	r0, [r8]
   1361c:	bl	11ac4 <realloc@plt>
   13620:	cmp	r0, #0
   13624:	str	r0, [r8]
   13628:	beq	135a8 <table_set@@Base+0xac>
   1362c:	mov	r1, r7
   13630:	bl	11ad0 <strcpy@plt>
   13634:	b	135c0 <table_set@@Base+0xc4>
   13638:	ldr	r3, [r0, #4]
   1363c:	cmp	r3, #20
   13640:	beq	135e8 <table_set@@Base+0xec>
   13644:	b	135a8 <table_set@@Base+0xac>
   13648:	ldr	r3, [r0, #4]
   1364c:	cmp	r3, #19
   13650:	beq	135e8 <table_set@@Base+0xec>
   13654:	b	135a8 <table_set@@Base+0xac>
   13658:	ldr	r3, [r0, #4]
   1365c:	cmp	r3, #18
   13660:	bne	135a8 <table_set@@Base+0xac>
   13664:	ldr	r0, [r8]
   13668:	cmp	r0, #0
   1366c:	beq	13818 <table_set@@Base+0x31c>
   13670:	ldr	r2, [r7]
   13674:	ldr	r3, [r7, #4]
   13678:	str	r2, [r0]
   1367c:	str	r3, [r0, #4]
   13680:	b	135c0 <table_set@@Base+0xc4>
   13684:	ldr	r3, [r0, #4]
   13688:	cmp	r3, #17
   1368c:	beq	13664 <table_set@@Base+0x168>
   13690:	b	135a8 <table_set@@Base+0xac>
   13694:	ldr	r3, [r0, #4]
   13698:	cmp	r3, #16
   1369c:	bne	135a8 <table_set@@Base+0xac>
   136a0:	ldr	r0, [r8]
   136a4:	cmp	r0, #0
   136a8:	beq	137e8 <table_set@@Base+0x2ec>
   136ac:	ldr	r3, [r7]
   136b0:	str	r3, [r0]
   136b4:	b	135c0 <table_set@@Base+0xc4>
   136b8:	ldr	r3, [r0, #4]
   136bc:	cmp	r3, #15
   136c0:	beq	13664 <table_set@@Base+0x168>
   136c4:	b	135a8 <table_set@@Base+0xac>
   136c8:	ldr	r3, [r0, #4]
   136cc:	cmp	r3, #7
   136d0:	beq	136a0 <table_set@@Base+0x1a4>
   136d4:	b	135a8 <table_set@@Base+0xac>
   136d8:	ldr	r3, [r0, #4]
   136dc:	cmp	r3, #6
   136e0:	beq	136a0 <table_set@@Base+0x1a4>
   136e4:	b	135a8 <table_set@@Base+0xac>
   136e8:	ldr	r3, [r0, #4]
   136ec:	cmp	r3, #5
   136f0:	bne	135a8 <table_set@@Base+0xac>
   136f4:	ldr	r0, [r8]
   136f8:	cmp	r0, #0
   136fc:	beq	13830 <table_set@@Base+0x334>
   13700:	ldrh	r3, [r7]
   13704:	strh	r3, [r0]
   13708:	b	135c0 <table_set@@Base+0xc4>
   1370c:	ldr	r3, [r0, #4]
   13710:	cmp	r3, #4
   13714:	beq	136f4 <table_set@@Base+0x1f8>
   13718:	b	135a8 <table_set@@Base+0xac>
   1371c:	ldr	r3, [r0, #4]
   13720:	cmp	r3, #3
   13724:	beq	135e8 <table_set@@Base+0xec>
   13728:	b	135a8 <table_set@@Base+0xac>
   1372c:	ldr	r3, [r0, #4]
   13730:	cmp	r3, #2
   13734:	beq	135e8 <table_set@@Base+0xec>
   13738:	b	135a8 <table_set@@Base+0xac>
   1373c:	ldr	r3, [r0, #4]
   13740:	cmp	r3, #1
   13744:	beq	136a0 <table_set@@Base+0x1a4>
   13748:	b	135a8 <table_set@@Base+0xac>
   1374c:	ldr	r3, [r0, #4]
   13750:	cmp	r3, #0
   13754:	beq	136a0 <table_set@@Base+0x1a4>
   13758:	b	135a8 <table_set@@Base+0xac>
   1375c:	ldr	r3, [r0, #4]
   13760:	cmp	r3, #11
   13764:	beq	136f4 <table_set@@Base+0x1f8>
   13768:	b	135a8 <table_set@@Base+0xac>
   1376c:	ldr	r3, [r0, #4]
   13770:	cmp	r3, #10
   13774:	beq	136f4 <table_set@@Base+0x1f8>
   13778:	b	135a8 <table_set@@Base+0xac>
   1377c:	ldr	r3, [r0, #4]
   13780:	cmp	r3, #9
   13784:	beq	13664 <table_set@@Base+0x168>
   13788:	b	135a8 <table_set@@Base+0xac>
   1378c:	ldr	r0, [r0, #4]
   13790:	cmp	r0, #8
   13794:	bne	135a8 <table_set@@Base+0xac>
   13798:	ldr	r3, [r8]
   1379c:	cmp	r3, #0
   137a0:	beq	13594 <table_set@@Base+0x98>
   137a4:	ldr	r1, [r7]
   137a8:	ldr	r2, [r7, #4]
   137ac:	str	r1, [r3]
   137b0:	str	r2, [r3, #4]
   137b4:	b	135c0 <table_set@@Base+0xc4>
   137b8:	ldr	r3, [r0, #4]
   137bc:	cmp	r3, #13
   137c0:	beq	136a0 <table_set@@Base+0x1a4>
   137c4:	b	135a8 <table_set@@Base+0xac>
   137c8:	ldr	r3, [r0, #4]
   137cc:	cmp	r3, #14
   137d0:	beq	13664 <table_set@@Base+0x168>
   137d4:	b	135a8 <table_set@@Base+0xac>
   137d8:	ldr	r3, [r0, #4]
   137dc:	cmp	r3, #12
   137e0:	beq	136a0 <table_set@@Base+0x1a4>
   137e4:	b	135a8 <table_set@@Base+0xac>
   137e8:	mov	r0, #4
   137ec:	bl	11adc <malloc@plt>
   137f0:	cmp	r0, #0
   137f4:	str	r0, [r8]
   137f8:	bne	136ac <table_set@@Base+0x1b0>
   137fc:	b	135a8 <table_set@@Base+0xac>
   13800:	mov	r0, #1
   13804:	bl	11adc <malloc@plt>
   13808:	cmp	r0, #0
   1380c:	str	r0, [r8]
   13810:	bne	135f4 <table_set@@Base+0xf8>
   13814:	b	135a8 <table_set@@Base+0xac>
   13818:	mov	r0, #8
   1381c:	bl	11adc <malloc@plt>
   13820:	cmp	r0, #0
   13824:	str	r0, [r8]
   13828:	bne	13670 <table_set@@Base+0x174>
   1382c:	b	135a8 <table_set@@Base+0xac>
   13830:	mov	r0, #2
   13834:	bl	11adc <malloc@plt>
   13838:	cmp	r0, #0
   1383c:	str	r0, [r8]
   13840:	bne	13700 <table_set@@Base+0x204>
   13844:	b	135a8 <table_set@@Base+0xac>

00013848 <table_set_bool@@Base>:
   13848:	push	{r4, r5, r6, r7, r8, lr}
   1384c:	mov	r5, r2
   13850:	mov	r4, r0
   13854:	mov	r8, r3
   13858:	mov	r7, r1
   1385c:	bl	14e88 <table_get_cell_ptr@@Base>
   13860:	mov	r1, r5
   13864:	mov	r6, r0
   13868:	mov	r0, r4
   1386c:	bl	12a6c <table_get_col_ptr@@Base>
   13870:	ldr	r2, [r0, #4]
   13874:	cmp	r2, #22
   13878:	bne	138bc <table_set_bool@@Base+0x74>
   1387c:	ldr	r0, [r6]
   13880:	cmp	r0, #0
   13884:	beq	138a8 <table_set_bool@@Base+0x60>
   13888:	strb	r8, [r0]
   1388c:	mov	r2, r5
   13890:	mov	r0, r4
   13894:	mov	r1, r7
   13898:	mov	r3, #1
   1389c:	bl	12630 <table_notify@@Base>
   138a0:	mov	r0, #0
   138a4:	pop	{r4, r5, r6, r7, r8, pc}
   138a8:	mov	r0, #1
   138ac:	bl	11adc <malloc@plt>
   138b0:	cmp	r0, #0
   138b4:	str	r0, [r6]
   138b8:	bne	13888 <table_set_bool@@Base+0x40>
   138bc:	mvn	r0, #0
   138c0:	pop	{r4, r5, r6, r7, r8, pc}

000138c4 <table_set_int@@Base>:
   138c4:	push	{r4, r5, r6, r7, r8, lr}
   138c8:	mov	r5, r2
   138cc:	mov	r4, r0
   138d0:	mov	r8, r3
   138d4:	mov	r7, r1
   138d8:	bl	14e88 <table_get_cell_ptr@@Base>
   138dc:	mov	r1, r5
   138e0:	mov	r6, r0
   138e4:	mov	r0, r4
   138e8:	bl	12a6c <table_get_col_ptr@@Base>
   138ec:	ldr	r2, [r0, #4]
   138f0:	cmp	r2, #0
   138f4:	bne	13938 <table_set_int@@Base+0x74>
   138f8:	ldr	r0, [r6]
   138fc:	cmp	r0, #0
   13900:	beq	13924 <table_set_int@@Base+0x60>
   13904:	str	r8, [r0]
   13908:	mov	r2, r5
   1390c:	mov	r0, r4
   13910:	mov	r1, r7
   13914:	mov	r3, #1
   13918:	bl	12630 <table_notify@@Base>
   1391c:	mov	r0, #0
   13920:	pop	{r4, r5, r6, r7, r8, pc}
   13924:	mov	r0, #4
   13928:	bl	11adc <malloc@plt>
   1392c:	cmp	r0, #0
   13930:	str	r0, [r6]
   13934:	bne	13904 <table_set_int@@Base+0x40>
   13938:	mvn	r0, #0
   1393c:	pop	{r4, r5, r6, r7, r8, pc}

00013940 <table_set_uint@@Base>:
   13940:	push	{r4, r5, r6, r7, r8, lr}
   13944:	mov	r5, r2
   13948:	mov	r4, r0
   1394c:	mov	r8, r3
   13950:	mov	r7, r1
   13954:	bl	14e88 <table_get_cell_ptr@@Base>
   13958:	mov	r1, r5
   1395c:	mov	r6, r0
   13960:	mov	r0, r4
   13964:	bl	12a6c <table_get_col_ptr@@Base>
   13968:	ldr	r2, [r0, #4]
   1396c:	cmp	r2, #1
   13970:	bne	139b4 <table_set_uint@@Base+0x74>
   13974:	ldr	r0, [r6]
   13978:	cmp	r0, #0
   1397c:	beq	139a0 <table_set_uint@@Base+0x60>
   13980:	str	r8, [r0]
   13984:	mov	r2, r5
   13988:	mov	r0, r4
   1398c:	mov	r1, r7
   13990:	mov	r3, #1
   13994:	bl	12630 <table_notify@@Base>
   13998:	mov	r0, #0
   1399c:	pop	{r4, r5, r6, r7, r8, pc}
   139a0:	mov	r0, #4
   139a4:	bl	11adc <malloc@plt>
   139a8:	cmp	r0, #0
   139ac:	str	r0, [r6]
   139b0:	bne	13980 <table_set_uint@@Base+0x40>
   139b4:	mvn	r0, #0
   139b8:	pop	{r4, r5, r6, r7, r8, pc}

000139bc <table_set_int8@@Base>:
   139bc:	push	{r4, r5, r6, r7, r8, lr}
   139c0:	mov	r5, r2
   139c4:	mov	r4, r0
   139c8:	mov	r8, r3
   139cc:	mov	r7, r1
   139d0:	bl	14e88 <table_get_cell_ptr@@Base>
   139d4:	mov	r1, r5
   139d8:	mov	r6, r0
   139dc:	mov	r0, r4
   139e0:	bl	12a6c <table_get_col_ptr@@Base>
   139e4:	ldr	r2, [r0, #4]
   139e8:	cmp	r2, #2
   139ec:	bne	13a30 <table_set_int8@@Base+0x74>
   139f0:	ldr	r0, [r6]
   139f4:	cmp	r0, #0
   139f8:	beq	13a1c <table_set_int8@@Base+0x60>
   139fc:	strb	r8, [r0]
   13a00:	mov	r2, r5
   13a04:	mov	r0, r4
   13a08:	mov	r1, r7
   13a0c:	mov	r3, #1
   13a10:	bl	12630 <table_notify@@Base>
   13a14:	mov	r0, #0
   13a18:	pop	{r4, r5, r6, r7, r8, pc}
   13a1c:	mov	r0, #1
   13a20:	bl	11adc <malloc@plt>
   13a24:	cmp	r0, #0
   13a28:	str	r0, [r6]
   13a2c:	bne	139fc <table_set_int8@@Base+0x40>
   13a30:	mvn	r0, #0
   13a34:	pop	{r4, r5, r6, r7, r8, pc}

00013a38 <table_set_uint8@@Base>:
   13a38:	push	{r4, r5, r6, r7, r8, lr}
   13a3c:	mov	r5, r2
   13a40:	mov	r4, r0
   13a44:	mov	r8, r3
   13a48:	mov	r7, r1
   13a4c:	bl	14e88 <table_get_cell_ptr@@Base>
   13a50:	mov	r1, r5
   13a54:	mov	r6, r0
   13a58:	mov	r0, r4
   13a5c:	bl	12a6c <table_get_col_ptr@@Base>
   13a60:	ldr	r2, [r0, #4]
   13a64:	cmp	r2, #3
   13a68:	bne	13aac <table_set_uint8@@Base+0x74>
   13a6c:	ldr	r0, [r6]
   13a70:	cmp	r0, #0
   13a74:	beq	13a98 <table_set_uint8@@Base+0x60>
   13a78:	strb	r8, [r0]
   13a7c:	mov	r2, r5
   13a80:	mov	r0, r4
   13a84:	mov	r1, r7
   13a88:	mov	r3, #1
   13a8c:	bl	12630 <table_notify@@Base>
   13a90:	mov	r0, #0
   13a94:	pop	{r4, r5, r6, r7, r8, pc}
   13a98:	mov	r0, #1
   13a9c:	bl	11adc <malloc@plt>
   13aa0:	cmp	r0, #0
   13aa4:	str	r0, [r6]
   13aa8:	bne	13a78 <table_set_uint8@@Base+0x40>
   13aac:	mvn	r0, #0
   13ab0:	pop	{r4, r5, r6, r7, r8, pc}

00013ab4 <table_set_int16@@Base>:
   13ab4:	push	{r4, r5, r6, r7, r8, lr}
   13ab8:	mov	r5, r2
   13abc:	mov	r4, r0
   13ac0:	mov	r8, r3
   13ac4:	mov	r7, r1
   13ac8:	bl	14e88 <table_get_cell_ptr@@Base>
   13acc:	mov	r1, r5
   13ad0:	mov	r6, r0
   13ad4:	mov	r0, r4
   13ad8:	bl	12a6c <table_get_col_ptr@@Base>
   13adc:	ldr	r2, [r0, #4]
   13ae0:	cmp	r2, #4
   13ae4:	bne	13b28 <table_set_int16@@Base+0x74>
   13ae8:	ldr	r0, [r6]
   13aec:	cmp	r0, #0
   13af0:	beq	13b14 <table_set_int16@@Base+0x60>
   13af4:	strh	r8, [r0]
   13af8:	mov	r2, r5
   13afc:	mov	r0, r4
   13b00:	mov	r1, r7
   13b04:	mov	r3, #1
   13b08:	bl	12630 <table_notify@@Base>
   13b0c:	mov	r0, #0
   13b10:	pop	{r4, r5, r6, r7, r8, pc}
   13b14:	mov	r0, #2
   13b18:	bl	11adc <malloc@plt>
   13b1c:	cmp	r0, #0
   13b20:	str	r0, [r6]
   13b24:	bne	13af4 <table_set_int16@@Base+0x40>
   13b28:	mvn	r0, #0
   13b2c:	pop	{r4, r5, r6, r7, r8, pc}

00013b30 <table_set_uint16@@Base>:
   13b30:	push	{r4, r5, r6, r7, r8, lr}
   13b34:	mov	r5, r2
   13b38:	mov	r4, r0
   13b3c:	mov	r8, r3
   13b40:	mov	r7, r1
   13b44:	bl	14e88 <table_get_cell_ptr@@Base>
   13b48:	mov	r1, r5
   13b4c:	mov	r6, r0
   13b50:	mov	r0, r4
   13b54:	bl	12a6c <table_get_col_ptr@@Base>
   13b58:	ldr	r2, [r0, #4]
   13b5c:	cmp	r2, #5
   13b60:	bne	13ba4 <table_set_uint16@@Base+0x74>
   13b64:	ldr	r0, [r6]
   13b68:	cmp	r0, #0
   13b6c:	beq	13b90 <table_set_uint16@@Base+0x60>
   13b70:	strh	r8, [r0]
   13b74:	mov	r2, r5
   13b78:	mov	r0, r4
   13b7c:	mov	r1, r7
   13b80:	mov	r3, #1
   13b84:	bl	12630 <table_notify@@Base>
   13b88:	mov	r0, #0
   13b8c:	pop	{r4, r5, r6, r7, r8, pc}
   13b90:	mov	r0, #2
   13b94:	bl	11adc <malloc@plt>
   13b98:	cmp	r0, #0
   13b9c:	str	r0, [r6]
   13ba0:	bne	13b70 <table_set_uint16@@Base+0x40>
   13ba4:	mvn	r0, #0
   13ba8:	pop	{r4, r5, r6, r7, r8, pc}

00013bac <table_set_int32@@Base>:
   13bac:	push	{r4, r5, r6, r7, r8, lr}
   13bb0:	mov	r5, r2
   13bb4:	mov	r4, r0
   13bb8:	mov	r8, r3
   13bbc:	mov	r7, r1
   13bc0:	bl	14e88 <table_get_cell_ptr@@Base>
   13bc4:	mov	r1, r5
   13bc8:	mov	r6, r0
   13bcc:	mov	r0, r4
   13bd0:	bl	12a6c <table_get_col_ptr@@Base>
   13bd4:	ldr	r2, [r0, #4]
   13bd8:	cmp	r2, #6
   13bdc:	bne	13c20 <table_set_int32@@Base+0x74>
   13be0:	ldr	r0, [r6]
   13be4:	cmp	r0, #0
   13be8:	beq	13c0c <table_set_int32@@Base+0x60>
   13bec:	str	r8, [r0]
   13bf0:	mov	r2, r5
   13bf4:	mov	r0, r4
   13bf8:	mov	r1, r7
   13bfc:	mov	r3, #1
   13c00:	bl	12630 <table_notify@@Base>
   13c04:	mov	r0, #0
   13c08:	pop	{r4, r5, r6, r7, r8, pc}
   13c0c:	mov	r0, #4
   13c10:	bl	11adc <malloc@plt>
   13c14:	cmp	r0, #0
   13c18:	str	r0, [r6]
   13c1c:	bne	13bec <table_set_int32@@Base+0x40>
   13c20:	mvn	r0, #0
   13c24:	pop	{r4, r5, r6, r7, r8, pc}

00013c28 <table_set_uint32@@Base>:
   13c28:	push	{r4, r5, r6, r7, r8, lr}
   13c2c:	mov	r5, r2
   13c30:	mov	r4, r0
   13c34:	mov	r8, r3
   13c38:	mov	r7, r1
   13c3c:	bl	14e88 <table_get_cell_ptr@@Base>
   13c40:	mov	r1, r5
   13c44:	mov	r6, r0
   13c48:	mov	r0, r4
   13c4c:	bl	12a6c <table_get_col_ptr@@Base>
   13c50:	ldr	r2, [r0, #4]
   13c54:	cmp	r2, #7
   13c58:	bne	13c9c <table_set_uint32@@Base+0x74>
   13c5c:	ldr	r0, [r6]
   13c60:	cmp	r0, #0
   13c64:	beq	13c88 <table_set_uint32@@Base+0x60>
   13c68:	str	r8, [r0]
   13c6c:	mov	r2, r5
   13c70:	mov	r0, r4
   13c74:	mov	r1, r7
   13c78:	mov	r3, #1
   13c7c:	bl	12630 <table_notify@@Base>
   13c80:	mov	r0, #0
   13c84:	pop	{r4, r5, r6, r7, r8, pc}
   13c88:	mov	r0, #4
   13c8c:	bl	11adc <malloc@plt>
   13c90:	cmp	r0, #0
   13c94:	str	r0, [r6]
   13c98:	bne	13c68 <table_set_uint32@@Base+0x40>
   13c9c:	mvn	r0, #0
   13ca0:	pop	{r4, r5, r6, r7, r8, pc}

00013ca4 <table_set_int64@@Base>:
   13ca4:	push	{r4, r5, r6, r7, r8, lr}
   13ca8:	mov	r5, r2
   13cac:	mov	r4, r0
   13cb0:	mov	r7, r1
   13cb4:	bl	14e88 <table_get_cell_ptr@@Base>
   13cb8:	mov	r1, r5
   13cbc:	mov	r6, r0
   13cc0:	mov	r0, r4
   13cc4:	bl	12a6c <table_get_col_ptr@@Base>
   13cc8:	ldr	r0, [r0, #4]
   13ccc:	cmp	r0, #8
   13cd0:	bne	13d20 <table_set_int64@@Base+0x7c>
   13cd4:	ldr	ip, [r6]
   13cd8:	cmp	ip, #0
   13cdc:	beq	13d0c <table_set_int64@@Base+0x68>
   13ce0:	add	r3, sp, #24
   13ce4:	mov	r2, r5
   13ce8:	ldm	r3!, {r0, r1}
   13cec:	mov	r3, #1
   13cf0:	str	r0, [ip]
   13cf4:	str	r1, [ip, #4]
   13cf8:	mov	r0, r4
   13cfc:	mov	r1, r7
   13d00:	bl	12630 <table_notify@@Base>
   13d04:	mov	r0, #0
   13d08:	pop	{r4, r5, r6, r7, r8, pc}
   13d0c:	bl	11adc <malloc@plt>
   13d10:	cmp	r0, #0
   13d14:	mov	ip, r0
   13d18:	str	r0, [r6]
   13d1c:	bne	13ce0 <table_set_int64@@Base+0x3c>
   13d20:	mvn	r0, #0
   13d24:	pop	{r4, r5, r6, r7, r8, pc}

00013d28 <table_set_uint64@@Base>:
   13d28:	push	{r4, r5, r6, r7, r8, lr}
   13d2c:	mov	r5, r2
   13d30:	mov	r4, r0
   13d34:	mov	r7, r1
   13d38:	bl	14e88 <table_get_cell_ptr@@Base>
   13d3c:	mov	r1, r5
   13d40:	mov	r6, r0
   13d44:	mov	r0, r4
   13d48:	bl	12a6c <table_get_col_ptr@@Base>
   13d4c:	ldr	r3, [r0, #4]
   13d50:	cmp	r3, #9
   13d54:	bne	13da8 <table_set_uint64@@Base+0x80>
   13d58:	ldr	ip, [r6]
   13d5c:	cmp	ip, #0
   13d60:	beq	13d90 <table_set_uint64@@Base+0x68>
   13d64:	add	r3, sp, #24
   13d68:	mov	r2, r5
   13d6c:	ldm	r3!, {r0, r1}
   13d70:	mov	r3, #1
   13d74:	str	r0, [ip]
   13d78:	str	r1, [ip, #4]
   13d7c:	mov	r0, r4
   13d80:	mov	r1, r7
   13d84:	bl	12630 <table_notify@@Base>
   13d88:	mov	r0, #0
   13d8c:	pop	{r4, r5, r6, r7, r8, pc}
   13d90:	mov	r0, #8
   13d94:	bl	11adc <malloc@plt>
   13d98:	cmp	r0, #0
   13d9c:	mov	ip, r0
   13da0:	str	r0, [r6]
   13da4:	bne	13d64 <table_set_uint64@@Base+0x3c>
   13da8:	mvn	r0, #0
   13dac:	pop	{r4, r5, r6, r7, r8, pc}

00013db0 <table_set_short@@Base>:
   13db0:	push	{r4, r5, r6, r7, r8, lr}
   13db4:	mov	r5, r2
   13db8:	mov	r4, r0
   13dbc:	mov	r8, r3
   13dc0:	mov	r7, r1
   13dc4:	bl	14e88 <table_get_cell_ptr@@Base>
   13dc8:	mov	r1, r5
   13dcc:	mov	r6, r0
   13dd0:	mov	r0, r4
   13dd4:	bl	12a6c <table_get_col_ptr@@Base>
   13dd8:	ldr	r2, [r0, #4]
   13ddc:	cmp	r2, #10
   13de0:	bne	13e24 <table_set_short@@Base+0x74>
   13de4:	ldr	r0, [r6]
   13de8:	cmp	r0, #0
   13dec:	beq	13e10 <table_set_short@@Base+0x60>
   13df0:	strh	r8, [r0]
   13df4:	mov	r2, r5
   13df8:	mov	r0, r4
   13dfc:	mov	r1, r7
   13e00:	mov	r3, #1
   13e04:	bl	12630 <table_notify@@Base>
   13e08:	mov	r0, #0
   13e0c:	pop	{r4, r5, r6, r7, r8, pc}
   13e10:	mov	r0, #2
   13e14:	bl	11adc <malloc@plt>
   13e18:	cmp	r0, #0
   13e1c:	str	r0, [r6]
   13e20:	bne	13df0 <table_set_short@@Base+0x40>
   13e24:	mvn	r0, #0
   13e28:	pop	{r4, r5, r6, r7, r8, pc}

00013e2c <table_set_ushort@@Base>:
   13e2c:	push	{r4, r5, r6, r7, r8, lr}
   13e30:	mov	r5, r2
   13e34:	mov	r4, r0
   13e38:	mov	r8, r3
   13e3c:	mov	r7, r1
   13e40:	bl	14e88 <table_get_cell_ptr@@Base>
   13e44:	mov	r1, r5
   13e48:	mov	r6, r0
   13e4c:	mov	r0, r4
   13e50:	bl	12a6c <table_get_col_ptr@@Base>
   13e54:	ldr	r2, [r0, #4]
   13e58:	cmp	r2, #11
   13e5c:	bne	13ea0 <table_set_ushort@@Base+0x74>
   13e60:	ldr	r0, [r6]
   13e64:	cmp	r0, #0
   13e68:	beq	13e8c <table_set_ushort@@Base+0x60>
   13e6c:	strh	r8, [r0]
   13e70:	mov	r2, r5
   13e74:	mov	r0, r4
   13e78:	mov	r1, r7
   13e7c:	mov	r3, #1
   13e80:	bl	12630 <table_notify@@Base>
   13e84:	mov	r0, #0
   13e88:	pop	{r4, r5, r6, r7, r8, pc}
   13e8c:	mov	r0, #2
   13e90:	bl	11adc <malloc@plt>
   13e94:	cmp	r0, #0
   13e98:	str	r0, [r6]
   13e9c:	bne	13e6c <table_set_ushort@@Base+0x40>
   13ea0:	mvn	r0, #0
   13ea4:	pop	{r4, r5, r6, r7, r8, pc}

00013ea8 <table_set_long@@Base>:
   13ea8:	push	{r4, r5, r6, r7, r8, lr}
   13eac:	mov	r5, r2
   13eb0:	mov	r4, r0
   13eb4:	mov	r8, r3
   13eb8:	mov	r7, r1
   13ebc:	bl	14e88 <table_get_cell_ptr@@Base>
   13ec0:	mov	r1, r5
   13ec4:	mov	r6, r0
   13ec8:	mov	r0, r4
   13ecc:	bl	12a6c <table_get_col_ptr@@Base>
   13ed0:	ldr	r2, [r0, #4]
   13ed4:	cmp	r2, #12
   13ed8:	bne	13f1c <table_set_long@@Base+0x74>
   13edc:	ldr	r0, [r6]
   13ee0:	cmp	r0, #0
   13ee4:	beq	13f08 <table_set_long@@Base+0x60>
   13ee8:	str	r8, [r0]
   13eec:	mov	r2, r5
   13ef0:	mov	r0, r4
   13ef4:	mov	r1, r7
   13ef8:	mov	r3, #1
   13efc:	bl	12630 <table_notify@@Base>
   13f00:	mov	r0, #0
   13f04:	pop	{r4, r5, r6, r7, r8, pc}
   13f08:	mov	r0, #4
   13f0c:	bl	11adc <malloc@plt>
   13f10:	cmp	r0, #0
   13f14:	str	r0, [r6]
   13f18:	bne	13ee8 <table_set_long@@Base+0x40>
   13f1c:	mvn	r0, #0
   13f20:	pop	{r4, r5, r6, r7, r8, pc}

00013f24 <table_set_ulong@@Base>:
   13f24:	push	{r4, r5, r6, r7, r8, lr}
   13f28:	mov	r5, r2
   13f2c:	mov	r4, r0
   13f30:	mov	r8, r3
   13f34:	mov	r7, r1
   13f38:	bl	14e88 <table_get_cell_ptr@@Base>
   13f3c:	mov	r1, r5
   13f40:	mov	r6, r0
   13f44:	mov	r0, r4
   13f48:	bl	12a6c <table_get_col_ptr@@Base>
   13f4c:	ldr	r2, [r0, #4]
   13f50:	cmp	r2, #13
   13f54:	bne	13f98 <table_set_ulong@@Base+0x74>
   13f58:	ldr	r0, [r6]
   13f5c:	cmp	r0, #0
   13f60:	beq	13f84 <table_set_ulong@@Base+0x60>
   13f64:	str	r8, [r0]
   13f68:	mov	r2, r5
   13f6c:	mov	r0, r4
   13f70:	mov	r1, r7
   13f74:	mov	r3, #1
   13f78:	bl	12630 <table_notify@@Base>
   13f7c:	mov	r0, #0
   13f80:	pop	{r4, r5, r6, r7, r8, pc}
   13f84:	mov	r0, #4
   13f88:	bl	11adc <malloc@plt>
   13f8c:	cmp	r0, #0
   13f90:	str	r0, [r6]
   13f94:	bne	13f64 <table_set_ulong@@Base+0x40>
   13f98:	mvn	r0, #0
   13f9c:	pop	{r4, r5, r6, r7, r8, pc}

00013fa0 <table_set_llong@@Base>:
   13fa0:	push	{r4, r5, r6, r7, r8, lr}
   13fa4:	mov	r5, r2
   13fa8:	mov	r4, r0
   13fac:	mov	r7, r1
   13fb0:	bl	14e88 <table_get_cell_ptr@@Base>
   13fb4:	mov	r1, r5
   13fb8:	mov	r6, r0
   13fbc:	mov	r0, r4
   13fc0:	bl	12a6c <table_get_col_ptr@@Base>
   13fc4:	ldr	r3, [r0, #4]
   13fc8:	cmp	r3, #14
   13fcc:	bne	14020 <table_set_llong@@Base+0x80>
   13fd0:	ldr	ip, [r6]
   13fd4:	cmp	ip, #0
   13fd8:	beq	14008 <table_set_llong@@Base+0x68>
   13fdc:	add	r3, sp, #24
   13fe0:	mov	r2, r5
   13fe4:	ldm	r3!, {r0, r1}
   13fe8:	mov	r3, #1
   13fec:	str	r0, [ip]
   13ff0:	str	r1, [ip, #4]
   13ff4:	mov	r0, r4
   13ff8:	mov	r1, r7
   13ffc:	bl	12630 <table_notify@@Base>
   14000:	mov	r0, #0
   14004:	pop	{r4, r5, r6, r7, r8, pc}
   14008:	mov	r0, #8
   1400c:	bl	11adc <malloc@plt>
   14010:	cmp	r0, #0
   14014:	mov	ip, r0
   14018:	str	r0, [r6]
   1401c:	bne	13fdc <table_set_llong@@Base+0x3c>
   14020:	mvn	r0, #0
   14024:	pop	{r4, r5, r6, r7, r8, pc}

00014028 <table_set_ullong@@Base>:
   14028:	push	{r4, r5, r6, r7, r8, lr}
   1402c:	mov	r5, r2
   14030:	mov	r4, r0
   14034:	mov	r7, r1
   14038:	bl	14e88 <table_get_cell_ptr@@Base>
   1403c:	mov	r1, r5
   14040:	mov	r6, r0
   14044:	mov	r0, r4
   14048:	bl	12a6c <table_get_col_ptr@@Base>
   1404c:	ldr	r3, [r0, #4]
   14050:	cmp	r3, #15
   14054:	bne	140a8 <table_set_ullong@@Base+0x80>
   14058:	ldr	ip, [r6]
   1405c:	cmp	ip, #0
   14060:	beq	14090 <table_set_ullong@@Base+0x68>
   14064:	add	r3, sp, #24
   14068:	mov	r2, r5
   1406c:	ldm	r3!, {r0, r1}
   14070:	mov	r3, #1
   14074:	str	r0, [ip]
   14078:	str	r1, [ip, #4]
   1407c:	mov	r0, r4
   14080:	mov	r1, r7
   14084:	bl	12630 <table_notify@@Base>
   14088:	mov	r0, #0
   1408c:	pop	{r4, r5, r6, r7, r8, pc}
   14090:	mov	r0, #8
   14094:	bl	11adc <malloc@plt>
   14098:	cmp	r0, #0
   1409c:	mov	ip, r0
   140a0:	str	r0, [r6]
   140a4:	bne	14064 <table_set_ullong@@Base+0x3c>
   140a8:	mvn	r0, #0
   140ac:	pop	{r4, r5, r6, r7, r8, pc}

000140b0 <table_set_float@@Base>:
   140b0:	push	{r4, r5, r6, r7, r8, lr}
   140b4:	mov	r5, r2
   140b8:	mov	r4, r0
   140bc:	mov	r7, r1
   140c0:	vmov	r8, s0
   140c4:	bl	14e88 <table_get_cell_ptr@@Base>
   140c8:	mov	r1, r5
   140cc:	mov	r6, r0
   140d0:	mov	r0, r4
   140d4:	bl	12a6c <table_get_col_ptr@@Base>
   140d8:	ldr	r3, [r0, #4]
   140dc:	cmp	r3, #16
   140e0:	bne	14124 <table_set_float@@Base+0x74>
   140e4:	ldr	r0, [r6]
   140e8:	cmp	r0, #0
   140ec:	beq	14110 <table_set_float@@Base+0x60>
   140f0:	str	r8, [r0]
   140f4:	mov	r2, r5
   140f8:	mov	r0, r4
   140fc:	mov	r1, r7
   14100:	mov	r3, #1
   14104:	bl	12630 <table_notify@@Base>
   14108:	mov	r0, #0
   1410c:	pop	{r4, r5, r6, r7, r8, pc}
   14110:	mov	r0, #4
   14114:	bl	11adc <malloc@plt>
   14118:	cmp	r0, #0
   1411c:	str	r0, [r6]
   14120:	bne	140f0 <table_set_float@@Base+0x40>
   14124:	mvn	r0, #0
   14128:	pop	{r4, r5, r6, r7, r8, pc}

0001412c <table_set_double@@Base>:
   1412c:	push	{r4, r5, r6, r7, lr}
   14130:	sub	sp, sp, #12
   14134:	mov	r5, r2
   14138:	mov	r4, r0
   1413c:	vstr	d0, [sp]
   14140:	mov	r7, r1
   14144:	bl	14e88 <table_get_cell_ptr@@Base>
   14148:	mov	r1, r5
   1414c:	mov	r6, r0
   14150:	mov	r0, r4
   14154:	bl	12a6c <table_get_col_ptr@@Base>
   14158:	ldr	r3, [r0, #4]
   1415c:	cmp	r3, #17
   14160:	bne	141b8 <table_set_double@@Base+0x8c>
   14164:	ldr	ip, [r6]
   14168:	cmp	ip, #0
   1416c:	beq	141a0 <table_set_double@@Base+0x74>
   14170:	mov	r3, sp
   14174:	mov	r2, r5
   14178:	ldm	r3!, {r0, r1}
   1417c:	mov	r3, #1
   14180:	str	r0, [ip]
   14184:	str	r1, [ip, #4]
   14188:	mov	r0, r4
   1418c:	mov	r1, r7
   14190:	bl	12630 <table_notify@@Base>
   14194:	mov	r0, #0
   14198:	add	sp, sp, #12
   1419c:	pop	{r4, r5, r6, r7, pc}
   141a0:	mov	r0, #8
   141a4:	bl	11adc <malloc@plt>
   141a8:	cmp	r0, #0
   141ac:	mov	ip, r0
   141b0:	str	r0, [r6]
   141b4:	bne	14170 <table_set_double@@Base+0x44>
   141b8:	mvn	r0, #0
   141bc:	add	sp, sp, #12
   141c0:	pop	{r4, r5, r6, r7, pc}

000141c4 <table_set_ldouble@@Base>:
   141c4:	push	{r4, r5, r6, r7, lr}
   141c8:	sub	sp, sp, #12
   141cc:	mov	r5, r2
   141d0:	mov	r4, r0
   141d4:	vstr	d0, [sp]
   141d8:	mov	r7, r1
   141dc:	bl	14e88 <table_get_cell_ptr@@Base>
   141e0:	mov	r1, r5
   141e4:	mov	r6, r0
   141e8:	mov	r0, r4
   141ec:	bl	12a6c <table_get_col_ptr@@Base>
   141f0:	ldr	r3, [r0, #4]
   141f4:	cmp	r3, #18
   141f8:	bne	14250 <table_set_ldouble@@Base+0x8c>
   141fc:	ldr	ip, [r6]
   14200:	cmp	ip, #0
   14204:	beq	14238 <table_set_ldouble@@Base+0x74>
   14208:	mov	r3, sp
   1420c:	mov	r2, r5
   14210:	ldm	r3!, {r0, r1}
   14214:	mov	r3, #1
   14218:	str	r0, [ip]
   1421c:	str	r1, [ip, #4]
   14220:	mov	r0, r4
   14224:	mov	r1, r7
   14228:	bl	12630 <table_notify@@Base>
   1422c:	mov	r0, #0
   14230:	add	sp, sp, #12
   14234:	pop	{r4, r5, r6, r7, pc}
   14238:	mov	r0, #8
   1423c:	bl	11adc <malloc@plt>
   14240:	cmp	r0, #0
   14244:	mov	ip, r0
   14248:	str	r0, [r6]
   1424c:	bne	14208 <table_set_ldouble@@Base+0x44>
   14250:	mvn	r0, #0
   14254:	add	sp, sp, #12
   14258:	pop	{r4, r5, r6, r7, pc}

0001425c <table_set_string@@Base>:
   1425c:	push	{r4, r5, r6, r7, r8, lr}
   14260:	mov	r5, r2
   14264:	mov	r7, r3
   14268:	mov	r4, r0
   1426c:	mov	r8, r1
   14270:	bl	14e88 <table_get_cell_ptr@@Base>
   14274:	mov	r1, r5
   14278:	mov	r6, r0
   1427c:	mov	r0, r4
   14280:	bl	12a6c <table_get_col_ptr@@Base>
   14284:	ldr	r3, [r0, #4]
   14288:	cmp	r3, #21
   1428c:	bne	142d4 <table_set_string@@Base+0x78>
   14290:	mov	r0, r7
   14294:	bl	11b00 <strlen@plt>
   14298:	add	r1, r0, #1
   1429c:	ldr	r0, [r6]
   142a0:	bl	11ac4 <realloc@plt>
   142a4:	cmp	r0, #0
   142a8:	str	r0, [r6]
   142ac:	beq	142d4 <table_set_string@@Base+0x78>
   142b0:	mov	r1, r7
   142b4:	bl	11ad0 <strcpy@plt>
   142b8:	mov	r0, r4
   142bc:	mov	r2, r5
   142c0:	mov	r1, r8
   142c4:	mov	r3, #1
   142c8:	bl	12630 <table_notify@@Base>
   142cc:	mov	r0, #0
   142d0:	pop	{r4, r5, r6, r7, r8, pc}
   142d4:	mvn	r0, #0
   142d8:	pop	{r4, r5, r6, r7, r8, pc}

000142dc <table_set_char@@Base>:
   142dc:	push	{r4, r5, r6, r7, r8, lr}
   142e0:	mov	r5, r2
   142e4:	mov	r4, r0
   142e8:	mov	r8, r3
   142ec:	mov	r7, r1
   142f0:	bl	14e88 <table_get_cell_ptr@@Base>
   142f4:	mov	r1, r5
   142f8:	mov	r6, r0
   142fc:	mov	r0, r4
   14300:	bl	12a6c <table_get_col_ptr@@Base>
   14304:	ldr	r2, [r0, #4]
   14308:	cmp	r2, #19
   1430c:	bne	14350 <table_set_char@@Base+0x74>
   14310:	ldr	r0, [r6]
   14314:	cmp	r0, #0
   14318:	beq	1433c <table_set_char@@Base+0x60>
   1431c:	strb	r8, [r0]
   14320:	mov	r2, r5
   14324:	mov	r0, r4
   14328:	mov	r1, r7
   1432c:	mov	r3, #1
   14330:	bl	12630 <table_notify@@Base>
   14334:	mov	r0, #0
   14338:	pop	{r4, r5, r6, r7, r8, pc}
   1433c:	mov	r0, #1
   14340:	bl	11adc <malloc@plt>
   14344:	cmp	r0, #0
   14348:	str	r0, [r6]
   1434c:	bne	1431c <table_set_char@@Base+0x40>
   14350:	mvn	r0, #0
   14354:	pop	{r4, r5, r6, r7, r8, pc}

00014358 <table_set_uchar@@Base>:
   14358:	push	{r4, r5, r6, r7, r8, lr}
   1435c:	mov	r5, r2
   14360:	mov	r4, r0
   14364:	mov	r8, r3
   14368:	mov	r7, r1
   1436c:	bl	14e88 <table_get_cell_ptr@@Base>
   14370:	mov	r1, r5
   14374:	mov	r6, r0
   14378:	mov	r0, r4
   1437c:	bl	12a6c <table_get_col_ptr@@Base>
   14380:	ldr	r2, [r0, #4]
   14384:	cmp	r2, #20
   14388:	bne	143cc <table_set_uchar@@Base+0x74>
   1438c:	ldr	r0, [r6]
   14390:	cmp	r0, #0
   14394:	beq	143b8 <table_set_uchar@@Base+0x60>
   14398:	strb	r8, [r0]
   1439c:	mov	r2, r5
   143a0:	mov	r0, r4
   143a4:	mov	r1, r7
   143a8:	mov	r3, #1
   143ac:	bl	12630 <table_notify@@Base>
   143b0:	mov	r0, #0
   143b4:	pop	{r4, r5, r6, r7, r8, pc}
   143b8:	mov	r0, #1
   143bc:	bl	11adc <malloc@plt>
   143c0:	cmp	r0, #0
   143c4:	str	r0, [r6]
   143c8:	bne	14398 <table_set_uchar@@Base+0x40>
   143cc:	mvn	r0, #0
   143d0:	pop	{r4, r5, r6, r7, r8, pc}

000143d4 <table_set_ptr@@Base>:
   143d4:	push	{r4, r5, r6, r7, r8, lr}
   143d8:	mov	r5, r2
   143dc:	mov	r4, r0
   143e0:	mov	r8, r3
   143e4:	mov	r6, r1
   143e8:	bl	14e88 <table_get_cell_ptr@@Base>
   143ec:	mov	r1, r5
   143f0:	mov	r7, r0
   143f4:	mov	r0, r4
   143f8:	bl	12a6c <table_get_col_ptr@@Base>
   143fc:	ldr	r2, [r0, #4]
   14400:	cmp	r2, #23
   14404:	bne	14428 <table_set_ptr@@Base+0x54>
   14408:	mov	r0, r4
   1440c:	str	r8, [r7]
   14410:	mov	r2, r5
   14414:	mov	r1, r6
   14418:	mov	r3, #1
   1441c:	bl	12630 <table_notify@@Base>
   14420:	mov	r0, #0
   14424:	pop	{r4, r5, r6, r7, r8, pc}
   14428:	mvn	r0, #0
   1442c:	pop	{r4, r5, r6, r7, r8, pc}

00014430 <table_cell_init@@Base>:
   14430:	push	{r4, lr}
   14434:	mov	r4, r2
   14438:	bl	134e0 <table_get_row_ptr@@Base>
   1443c:	mov	r2, #0
   14440:	ldr	r3, [r0]
   14444:	str	r2, [r3, r4, lsl #2]
   14448:	pop	{r4, pc}

0001444c <table_cell_destroy@@Base>:
   1444c:	push	{r4, r5, r6, lr}
   14450:	mov	r6, r1
   14454:	mov	r1, r2
   14458:	mov	r4, r2
   1445c:	mov	r5, r0
   14460:	bl	12790 <table_get_column_data_type@@Base>
   14464:	cmp	r0, #23
   14468:	popeq	{r4, r5, r6, pc}
   1446c:	mov	r1, r6
   14470:	mov	r0, r5
   14474:	bl	134e0 <table_get_row_ptr@@Base>
   14478:	ldr	r3, [r0]
   1447c:	ldr	r0, [r3, r4, lsl #2]
   14480:	cmp	r0, #0
   14484:	popeq	{r4, r5, r6, pc}
   14488:	pop	{r4, r5, r6, lr}
   1448c:	b	11ab8 <free@plt>

00014490 <table_cell_to_buffer@@Base>:
   14490:	push	{r4, r5, r6, r7, lr}
   14494:	mov	r7, r1
   14498:	sub	sp, sp, #12
   1449c:	mov	r1, r2
   144a0:	mov	r4, r2
   144a4:	mov	r5, r3
   144a8:	mov	r6, r0
   144ac:	bl	12790 <table_get_column_data_type@@Base>
   144b0:	cmp	r0, #23
   144b4:	ldrls	pc, [pc, r0, lsl #2]
   144b8:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   144bc:	andeq	r4, r1, r4, lsl r8
   144c0:	andeq	r4, r1, r0, lsl #16
   144c4:	andeq	r4, r1, ip, ror #15
   144c8:	ldrdeq	r4, [r1], -r8
   144cc:	andeq	r4, r1, r4, asr #15
   144d0:			; <UNDEFINED> instruction: 0x000147b0
   144d4:	muleq	r1, ip, r7
   144d8:	andeq	r4, r1, ip, ror #14
   144dc:	andeq	r4, r1, r8, asr r7
   144e0:	andeq	r4, r1, r4, asr #14
   144e4:	andeq	r4, r1, ip, lsl r7
   144e8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   144ec:	andeq	r4, r1, ip, asr #13
   144f0:	andeq	r4, r1, r4, lsr #13
   144f4:	andeq	r4, r1, ip, ror r6
   144f8:	andeq	r4, r1, r4, asr r6
   144fc:	andeq	r4, r1, r8, lsr #12
   14500:	andeq	r4, r1, r0, lsl #12
   14504:	ldrdeq	r4, [r1], -r8
   14508:	andeq	r4, r1, r4, asr #11
   1450c:	muleq	r1, ip, r5
   14510:	andeq	r4, r1, r4, ror r5
   14514:	andeq	r4, r1, ip, lsl r5
   14518:	andeq	r4, r1, ip, asr #10
   1451c:	mov	r2, r4
   14520:	mov	r1, r7
   14524:	mov	r0, r6
   14528:	bl	130dc <table_get_bool@@Base>
   1452c:	mov	r3, r0
   14530:	ldr	r2, [pc, #752]	; 14828 <table_cell_to_buffer@@Base+0x398>
   14534:	mov	r0, r5
   14538:	ldr	r1, [sp, #32]
   1453c:	bl	11b0c <snprintf@plt>
   14540:	mov	r0, #0
   14544:	add	sp, sp, #12
   14548:	pop	{r4, r5, r6, r7, pc}
   1454c:	mov	r2, r4
   14550:	mov	r1, r7
   14554:	mov	r0, r6
   14558:	bl	132a4 <table_get_ptr@@Base>
   1455c:	ldr	r2, [pc, #712]	; 1482c <table_cell_to_buffer@@Base+0x39c>
   14560:	ldr	r1, [sp, #32]
   14564:	mov	r3, r0
   14568:	mov	r0, r5
   1456c:	bl	11b0c <snprintf@plt>
   14570:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   14574:	mov	r2, r4
   14578:	mov	r1, r7
   1457c:	mov	r0, r6
   14580:	bl	13294 <table_get_string@@Base>
   14584:	ldr	r2, [pc, #676]	; 14830 <table_cell_to_buffer@@Base+0x3a0>
   14588:	ldr	r1, [sp, #32]
   1458c:	mov	r3, r0
   14590:	mov	r0, r5
   14594:	bl	11b0c <snprintf@plt>
   14598:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   1459c:	mov	r2, r4
   145a0:	mov	r1, r7
   145a4:	mov	r0, r6
   145a8:	bl	13280 <table_get_uchar@@Base>
   145ac:	mov	r3, r0
   145b0:	ldr	r2, [pc, #636]	; 14834 <table_cell_to_buffer@@Base+0x3a4>
   145b4:	mov	r0, r5
   145b8:	ldr	r1, [sp, #32]
   145bc:	bl	11b0c <snprintf@plt>
   145c0:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   145c4:	mov	r2, r4
   145c8:	mov	r1, r7
   145cc:	mov	r0, r6
   145d0:	bl	1326c <table_get_char@@Base>
   145d4:	b	145ac <table_cell_to_buffer@@Base+0x11c>
   145d8:	mov	r2, r4
   145dc:	mov	r1, r7
   145e0:	mov	r0, r6
   145e4:	bl	13258 <table_get_ldouble@@Base>
   145e8:	mov	r0, r5
   145ec:	ldr	r2, [pc, #580]	; 14838 <table_cell_to_buffer@@Base+0x3a8>
   145f0:	ldr	r1, [sp, #32]
   145f4:	vstr	d0, [sp]
   145f8:	bl	11b0c <snprintf@plt>
   145fc:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   14600:	mov	r2, r4
   14604:	mov	r1, r7
   14608:	mov	r0, r6
   1460c:	bl	13244 <table_get_double@@Base>
   14610:	mov	r0, r5
   14614:	ldr	r2, [pc, #544]	; 1483c <table_cell_to_buffer@@Base+0x3ac>
   14618:	ldr	r1, [sp, #32]
   1461c:	vstr	d0, [sp]
   14620:	bl	11b0c <snprintf@plt>
   14624:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   14628:	mov	r2, r4
   1462c:	mov	r1, r7
   14630:	mov	r0, r6
   14634:	bl	13230 <table_get_float@@Base>
   14638:	mov	r0, r5
   1463c:	ldr	r2, [pc, #508]	; 14840 <table_cell_to_buffer@@Base+0x3b0>
   14640:	ldr	r1, [sp, #32]
   14644:	vcvt.f64.f32	d0, s0
   14648:	vstr	d0, [sp]
   1464c:	bl	11b0c <snprintf@plt>
   14650:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   14654:	mov	r2, r4
   14658:	mov	r1, r7
   1465c:	mov	r0, r6
   14660:	bl	1321c <table_get_ullong@@Base>
   14664:	strd	r0, [sp]
   14668:	ldr	r2, [pc, #468]	; 14844 <table_cell_to_buffer@@Base+0x3b4>
   1466c:	mov	r0, r5
   14670:	ldr	r1, [sp, #32]
   14674:	bl	11b0c <snprintf@plt>
   14678:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   1467c:	mov	r2, r4
   14680:	mov	r1, r7
   14684:	mov	r0, r6
   14688:	bl	13208 <table_get_llong@@Base>
   1468c:	strd	r0, [sp]
   14690:	ldr	r2, [pc, #432]	; 14848 <table_cell_to_buffer@@Base+0x3b8>
   14694:	mov	r0, r5
   14698:	ldr	r1, [sp, #32]
   1469c:	bl	11b0c <snprintf@plt>
   146a0:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   146a4:	mov	r2, r4
   146a8:	mov	r1, r7
   146ac:	mov	r0, r6
   146b0:	bl	131f4 <table_get_ulong@@Base>
   146b4:	ldr	r2, [pc, #400]	; 1484c <table_cell_to_buffer@@Base+0x3bc>
   146b8:	ldr	r1, [sp, #32]
   146bc:	mov	r3, r0
   146c0:	mov	r0, r5
   146c4:	bl	11b0c <snprintf@plt>
   146c8:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   146cc:	mov	r2, r4
   146d0:	mov	r1, r7
   146d4:	mov	r0, r6
   146d8:	bl	131e0 <table_get_long@@Base>
   146dc:	ldr	r2, [pc, #364]	; 14850 <table_cell_to_buffer@@Base+0x3c0>
   146e0:	ldr	r1, [sp, #32]
   146e4:	mov	r3, r0
   146e8:	mov	r0, r5
   146ec:	bl	11b0c <snprintf@plt>
   146f0:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   146f4:	mov	r2, r4
   146f8:	mov	r1, r7
   146fc:	mov	r0, r6
   14700:	bl	131cc <table_get_ushort@@Base>
   14704:	ldr	r2, [pc, #328]	; 14854 <table_cell_to_buffer@@Base+0x3c4>
   14708:	ldr	r1, [sp, #32]
   1470c:	mov	r3, r0
   14710:	mov	r0, r5
   14714:	bl	11b0c <snprintf@plt>
   14718:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   1471c:	mov	r2, r4
   14720:	mov	r1, r7
   14724:	mov	r0, r6
   14728:	bl	131b8 <table_get_short@@Base>
   1472c:	ldr	r2, [pc, #292]	; 14858 <table_cell_to_buffer@@Base+0x3c8>
   14730:	ldr	r1, [sp, #32]
   14734:	mov	r3, r0
   14738:	mov	r0, r5
   1473c:	bl	11b0c <snprintf@plt>
   14740:	b	14540 <table_cell_to_buffer@@Base+0xb0>
   14744:	mov	r2, r4
   14748:	mov	r1, r7
   1474c:	mov	r0, r6
   14750:	bl	131a4 <table_get_uint64@@Base>
   14754:	b	14664 <table_cell_to_buffer@@Base+0x1d4>
   14758:	mov	r2, r4
   1475c:	mov	r1, r7
   14760:	mov	r0, r6
   14764:	bl	13190 <table_get_int64@@Base>
   14768:	b	1468c <table_cell_to_buffer@@Base+0x1fc>
   1476c:	mov	r2, r4
   14770:	mov	r1, r7
   14774:	mov	r0, r6
   14778:	bl	1317c <table_get_uint32@@Base>
   1477c:	mov	r3, r0
   14780:	ldr	r2, [pc, #212]	; 1485c <table_cell_to_buffer@@Base+0x3cc>
   14784:	mov	r0, r5
   14788:	ldr	r1, [sp, #32]
   1478c:	bl	11b0c <snprintf@plt>
   14790:	mov	r0, #0
   14794:	add	sp, sp, #12
   14798:	pop	{r4, r5, r6, r7, pc}
   1479c:	mov	r2, r4
   147a0:	mov	r1, r7
   147a4:	mov	r0, r6
   147a8:	bl	13168 <table_get_int32@@Base>
   147ac:	b	1452c <table_cell_to_buffer@@Base+0x9c>
   147b0:	mov	r2, r4
   147b4:	mov	r1, r7
   147b8:	mov	r0, r6
   147bc:	bl	13154 <table_get_uint16@@Base>
   147c0:	b	1477c <table_cell_to_buffer@@Base+0x2ec>
   147c4:	mov	r2, r4
   147c8:	mov	r1, r7
   147cc:	mov	r0, r6
   147d0:	bl	13140 <table_get_int16@@Base>
   147d4:	b	1452c <table_cell_to_buffer@@Base+0x9c>
   147d8:	mov	r2, r4
   147dc:	mov	r1, r7
   147e0:	mov	r0, r6
   147e4:	bl	1312c <table_get_uint8@@Base>
   147e8:	b	1477c <table_cell_to_buffer@@Base+0x2ec>
   147ec:	mov	r2, r4
   147f0:	mov	r1, r7
   147f4:	mov	r0, r6
   147f8:	bl	13118 <table_get_int8@@Base>
   147fc:	b	1452c <table_cell_to_buffer@@Base+0x9c>
   14800:	mov	r2, r4
   14804:	mov	r1, r7
   14808:	mov	r0, r6
   1480c:	bl	13104 <table_get_uint@@Base>
   14810:	b	1477c <table_cell_to_buffer@@Base+0x2ec>
   14814:	mov	r2, r4
   14818:	mov	r1, r7
   1481c:	mov	r0, r6
   14820:	bl	130f0 <table_get_int@@Base>
   14824:	b	1452c <table_cell_to_buffer@@Base+0x9c>
   14828:	andeq	r5, r1, r0, ror #3
   1482c:	andeq	r5, r1, ip, lsl r2
   14830:	andeq	r5, r1, r8, lsl #4
   14834:	andeq	r5, r1, r8, lsl r2
   14838:	andeq	r5, r1, r4, lsl r2
   1483c:	andeq	r5, r1, r0, lsl r2
   14840:	andeq	r5, r1, ip, lsl #4
   14844:	strdeq	r5, [r1], -r0
   14848:	andeq	r5, r1, r8, ror #3
   1484c:	andeq	r5, r1, r4, lsl #4
   14850:	andeq	r5, r1, r0, lsl #4
   14854:	strdeq	r5, [r1], -ip
   14858:	strdeq	r5, [r1], -r8
   1485c:	andeq	r5, r1, r4, ror #3

00014860 <table_cell_from_buffer@@Base>:
   14860:	push	{r4, r5, r6, r7, r8, lr}
   14864:	mov	r8, r1
   14868:	sub	sp, sp, #264	; 0x108
   1486c:	mov	r1, r2
   14870:	mov	r4, r2
   14874:	mov	r6, r3
   14878:	mov	r5, r0
   1487c:	bl	12790 <table_get_column_data_type@@Base>
   14880:	cmp	r0, #23
   14884:	ldrls	pc, [pc, r0, lsl #2]
   14888:	b	14e10 <table_cell_from_buffer@@Base+0x5b0>
   1488c:	andeq	r4, r1, r8, lsr #27
   14890:	andeq	r4, r1, r4, ror sp
   14894:	andeq	r4, r1, r0, asr #26
   14898:	andeq	r4, r1, ip, lsl #26
   1489c:	ldrdeq	r4, [r1], -r8
   148a0:	andeq	r4, r1, r4, lsr #25
   148a4:	andeq	r4, r1, r0, ror ip
   148a8:	andeq	r4, r1, ip, lsr ip
   148ac:	andeq	r4, r1, r4, lsl #24
   148b0:	andeq	r4, r1, ip, asr #23
   148b4:	muleq	r1, r8, fp
   148b8:	andeq	r4, r1, r4, ror #22
   148bc:	andeq	r4, r1, r0, lsr fp
   148c0:	strdeq	r4, [r1], -ip
   148c4:	andeq	r4, r1, r4, asr #21
   148c8:	andeq	r4, r1, ip, lsl #21
   148cc:	andeq	r4, r1, r4, lsr #20
   148d0:	strdeq	r4, [r1], -r0
   148d4:	andeq	r4, r1, r8, asr sl
   148d8:	andeq	r4, r1, r4, asr r9
   148dc:			; <UNDEFINED> instruction: 0x000149bc
   148e0:	andeq	r4, r1, r8, lsl #19
   148e4:	andeq	r4, r1, r4, lsl r9
   148e8:	andeq	r4, r1, ip, ror #17
   148ec:	mov	r0, r6
   148f0:	add	r2, sp, #8
   148f4:	ldr	r1, [pc, #1308]	; 14e18 <table_cell_from_buffer@@Base+0x5b8>
   148f8:	bl	11b18 <__isoc99_sscanf@plt>
   148fc:	cmp	r0, #1
   14900:	beq	14df4 <table_cell_from_buffer@@Base+0x594>
   14904:	mvn	r6, #0
   14908:	mov	r0, r6
   1490c:	add	sp, sp, #264	; 0x108
   14910:	pop	{r4, r5, r6, r7, r8, pc}
   14914:	mov	r0, r6
   14918:	add	r2, sp, #8
   1491c:	ldr	r1, [pc, #1272]	; 14e1c <table_cell_from_buffer@@Base+0x5bc>
   14920:	bl	11b18 <__isoc99_sscanf@plt>
   14924:	cmp	r0, #1
   14928:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   1492c:	ldr	r6, [sp, #8]
   14930:	cmp	r6, #0
   14934:	beq	14ddc <table_cell_from_buffer@@Base+0x57c>
   14938:	mov	r3, r0
   1493c:	mov	r2, r4
   14940:	mov	r1, r8
   14944:	mov	r0, r5
   14948:	bl	13848 <table_set_bool@@Base>
   1494c:	mov	r6, #0
   14950:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14954:	mov	r0, r6
   14958:	add	r2, sp, #8
   1495c:	ldr	r1, [pc, #1212]	; 14e20 <table_cell_from_buffer@@Base+0x5c0>
   14960:	bl	11b18 <__isoc99_sscanf@plt>
   14964:	cmp	r0, #1
   14968:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   1496c:	mov	r2, r4
   14970:	mov	r1, r8
   14974:	mov	r0, r5
   14978:	ldrb	r3, [sp, #8]
   1497c:	bl	142dc <table_set_char@@Base>
   14980:	mov	r6, #0
   14984:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14988:	mov	r0, r6
   1498c:	add	r2, sp, #8
   14990:	ldr	r1, [pc, #1164]	; 14e24 <table_cell_from_buffer@@Base+0x5c4>
   14994:	bl	11b18 <__isoc99_sscanf@plt>
   14998:	cmp	r0, #1
   1499c:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   149a0:	add	r3, sp, #8
   149a4:	mov	r2, r4
   149a8:	mov	r1, r8
   149ac:	mov	r0, r5
   149b0:	bl	1425c <table_set_string@@Base>
   149b4:	mov	r6, #0
   149b8:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   149bc:	mov	r0, r6
   149c0:	add	r2, sp, #8
   149c4:	ldr	r1, [pc, #1108]	; 14e20 <table_cell_from_buffer@@Base+0x5c0>
   149c8:	bl	11b18 <__isoc99_sscanf@plt>
   149cc:	cmp	r0, #1
   149d0:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   149d4:	mov	r2, r4
   149d8:	mov	r1, r8
   149dc:	mov	r0, r5
   149e0:	ldrb	r3, [sp, #8]
   149e4:	bl	14358 <table_set_uchar@@Base>
   149e8:	mov	r6, #0
   149ec:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   149f0:	mov	r0, r6
   149f4:	add	r2, sp, #8
   149f8:	ldr	r1, [pc, #1064]	; 14e28 <table_cell_from_buffer@@Base+0x5c8>
   149fc:	bl	11b18 <__isoc99_sscanf@plt>
   14a00:	cmp	r0, #1
   14a04:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14a08:	mov	r2, r4
   14a0c:	mov	r1, r8
   14a10:	mov	r0, r5
   14a14:	vldr	d0, [sp, #8]
   14a18:	bl	1412c <table_set_double@@Base>
   14a1c:	mov	r6, #0
   14a20:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14a24:	mov	r0, r6
   14a28:	add	r2, sp, #8
   14a2c:	ldr	r1, [pc, #1016]	; 14e2c <table_cell_from_buffer@@Base+0x5cc>
   14a30:	bl	11b18 <__isoc99_sscanf@plt>
   14a34:	cmp	r0, #1
   14a38:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14a3c:	mov	r2, r4
   14a40:	mov	r1, r8
   14a44:	mov	r0, r5
   14a48:	vldr	s0, [sp, #8]
   14a4c:	bl	140b0 <table_set_float@@Base>
   14a50:	mov	r6, #0
   14a54:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14a58:	mov	r0, r6
   14a5c:	add	r2, sp, #8
   14a60:	ldr	r1, [pc, #968]	; 14e30 <table_cell_from_buffer@@Base+0x5d0>
   14a64:	bl	11b18 <__isoc99_sscanf@plt>
   14a68:	cmp	r0, #1
   14a6c:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14a70:	mov	r2, r4
   14a74:	mov	r1, r8
   14a78:	mov	r0, r5
   14a7c:	vldr	d0, [sp, #8]
   14a80:	bl	141c4 <table_set_ldouble@@Base>
   14a84:	mov	r6, #0
   14a88:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14a8c:	mov	r0, r6
   14a90:	add	r2, sp, #8
   14a94:	ldr	r1, [pc, #920]	; 14e34 <table_cell_from_buffer@@Base+0x5d4>
   14a98:	bl	11b18 <__isoc99_sscanf@plt>
   14a9c:	cmp	r0, #1
   14aa0:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14aa4:	ldrd	r6, [sp, #8]
   14aa8:	mov	r2, r4
   14aac:	mov	r1, r8
   14ab0:	strd	r6, [sp]
   14ab4:	mov	r0, r5
   14ab8:	bl	14028 <table_set_ullong@@Base>
   14abc:	mov	r6, #0
   14ac0:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14ac4:	mov	r0, r6
   14ac8:	add	r2, sp, #8
   14acc:	ldr	r1, [pc, #868]	; 14e38 <table_cell_from_buffer@@Base+0x5d8>
   14ad0:	bl	11b18 <__isoc99_sscanf@plt>
   14ad4:	cmp	r0, #1
   14ad8:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14adc:	ldrd	r6, [sp, #8]
   14ae0:	mov	r2, r4
   14ae4:	mov	r1, r8
   14ae8:	strd	r6, [sp]
   14aec:	mov	r0, r5
   14af0:	bl	13fa0 <table_set_llong@@Base>
   14af4:	mov	r6, #0
   14af8:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14afc:	mov	r0, r6
   14b00:	add	r2, sp, #8
   14b04:	ldr	r1, [pc, #816]	; 14e3c <table_cell_from_buffer@@Base+0x5dc>
   14b08:	bl	11b18 <__isoc99_sscanf@plt>
   14b0c:	cmp	r0, #1
   14b10:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14b14:	mov	r2, r4
   14b18:	mov	r1, r8
   14b1c:	mov	r0, r5
   14b20:	ldr	r3, [sp, #8]
   14b24:	bl	13f24 <table_set_ulong@@Base>
   14b28:	mov	r6, #0
   14b2c:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14b30:	mov	r0, r6
   14b34:	add	r2, sp, #8
   14b38:	ldr	r1, [pc, #768]	; 14e40 <table_cell_from_buffer@@Base+0x5e0>
   14b3c:	bl	11b18 <__isoc99_sscanf@plt>
   14b40:	cmp	r0, #1
   14b44:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14b48:	mov	r2, r4
   14b4c:	mov	r1, r8
   14b50:	mov	r0, r5
   14b54:	ldr	r3, [sp, #8]
   14b58:	bl	13ea8 <table_set_long@@Base>
   14b5c:	mov	r6, #0
   14b60:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14b64:	mov	r0, r6
   14b68:	add	r2, sp, #8
   14b6c:	ldr	r1, [pc, #720]	; 14e44 <table_cell_from_buffer@@Base+0x5e4>
   14b70:	bl	11b18 <__isoc99_sscanf@plt>
   14b74:	cmp	r0, #1
   14b78:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14b7c:	ldrh	r3, [sp, #8]
   14b80:	mov	r2, r4
   14b84:	mov	r1, r8
   14b88:	mov	r0, r5
   14b8c:	bl	13e2c <table_set_ushort@@Base>
   14b90:	mov	r6, #0
   14b94:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14b98:	mov	r0, r6
   14b9c:	add	r2, sp, #8
   14ba0:	ldr	r1, [pc, #672]	; 14e48 <table_cell_from_buffer@@Base+0x5e8>
   14ba4:	bl	11b18 <__isoc99_sscanf@plt>
   14ba8:	cmp	r0, #1
   14bac:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14bb0:	ldrsh	r3, [sp, #8]
   14bb4:	mov	r2, r4
   14bb8:	mov	r1, r8
   14bbc:	mov	r0, r5
   14bc0:	bl	13db0 <table_set_short@@Base>
   14bc4:	mov	r6, #0
   14bc8:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14bcc:	mov	r0, r6
   14bd0:	add	r2, sp, #8
   14bd4:	ldr	r1, [pc, #600]	; 14e34 <table_cell_from_buffer@@Base+0x5d4>
   14bd8:	bl	11b18 <__isoc99_sscanf@plt>
   14bdc:	cmp	r0, #1
   14be0:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14be4:	ldrd	r6, [sp, #8]
   14be8:	mov	r2, r4
   14bec:	mov	r1, r8
   14bf0:	strd	r6, [sp]
   14bf4:	mov	r0, r5
   14bf8:	bl	13d28 <table_set_uint64@@Base>
   14bfc:	mov	r6, #0
   14c00:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14c04:	mov	r0, r6
   14c08:	add	r2, sp, #8
   14c0c:	ldr	r1, [pc, #548]	; 14e38 <table_cell_from_buffer@@Base+0x5d8>
   14c10:	bl	11b18 <__isoc99_sscanf@plt>
   14c14:	cmp	r0, #1
   14c18:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14c1c:	ldrd	r6, [sp, #8]
   14c20:	mov	r2, r4
   14c24:	mov	r1, r8
   14c28:	strd	r6, [sp]
   14c2c:	mov	r0, r5
   14c30:	bl	13ca4 <table_set_int64@@Base>
   14c34:	mov	r6, #0
   14c38:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14c3c:	mov	r0, r6
   14c40:	add	r2, sp, #8
   14c44:	ldr	r1, [pc, #512]	; 14e4c <table_cell_from_buffer@@Base+0x5ec>
   14c48:	bl	11b18 <__isoc99_sscanf@plt>
   14c4c:	cmp	r0, #1
   14c50:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14c54:	mov	r2, r4
   14c58:	mov	r1, r8
   14c5c:	mov	r0, r5
   14c60:	ldr	r3, [sp, #8]
   14c64:	bl	13c28 <table_set_uint32@@Base>
   14c68:	mov	r6, #0
   14c6c:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14c70:	mov	r0, r6
   14c74:	add	r2, sp, #8
   14c78:	ldr	r1, [pc, #412]	; 14e1c <table_cell_from_buffer@@Base+0x5bc>
   14c7c:	bl	11b18 <__isoc99_sscanf@plt>
   14c80:	cmp	r0, #1
   14c84:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14c88:	mov	r2, r4
   14c8c:	mov	r1, r8
   14c90:	mov	r0, r5
   14c94:	ldr	r3, [sp, #8]
   14c98:	bl	13bac <table_set_int32@@Base>
   14c9c:	mov	r6, #0
   14ca0:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14ca4:	mov	r0, r6
   14ca8:	add	r2, sp, #8
   14cac:	ldr	r1, [pc, #400]	; 14e44 <table_cell_from_buffer@@Base+0x5e4>
   14cb0:	bl	11b18 <__isoc99_sscanf@plt>
   14cb4:	cmp	r0, #1
   14cb8:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14cbc:	ldrh	r3, [sp, #8]
   14cc0:	mov	r2, r4
   14cc4:	mov	r1, r8
   14cc8:	mov	r0, r5
   14ccc:	bl	13b30 <table_set_uint16@@Base>
   14cd0:	mov	r6, #0
   14cd4:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14cd8:	mov	r0, r6
   14cdc:	add	r2, sp, #8
   14ce0:	ldr	r1, [pc, #352]	; 14e48 <table_cell_from_buffer@@Base+0x5e8>
   14ce4:	bl	11b18 <__isoc99_sscanf@plt>
   14ce8:	cmp	r0, #1
   14cec:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14cf0:	ldrsh	r3, [sp, #8]
   14cf4:	mov	r2, r4
   14cf8:	mov	r1, r8
   14cfc:	mov	r0, r5
   14d00:	bl	13ab4 <table_set_int16@@Base>
   14d04:	mov	r6, #0
   14d08:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14d0c:	mov	r0, r6
   14d10:	add	r2, sp, #8
   14d14:	ldr	r1, [pc, #308]	; 14e50 <table_cell_from_buffer@@Base+0x5f0>
   14d18:	bl	11b18 <__isoc99_sscanf@plt>
   14d1c:	cmp	r0, #1
   14d20:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14d24:	mov	r2, r4
   14d28:	mov	r1, r8
   14d2c:	mov	r0, r5
   14d30:	ldrb	r3, [sp, #8]
   14d34:	bl	13a38 <table_set_uint8@@Base>
   14d38:	mov	r6, #0
   14d3c:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14d40:	mov	r0, r6
   14d44:	add	r2, sp, #8
   14d48:	ldr	r1, [pc, #260]	; 14e54 <table_cell_from_buffer@@Base+0x5f4>
   14d4c:	bl	11b18 <__isoc99_sscanf@plt>
   14d50:	cmp	r0, #1
   14d54:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14d58:	ldrsb	r3, [sp, #8]
   14d5c:	mov	r2, r4
   14d60:	mov	r1, r8
   14d64:	mov	r0, r5
   14d68:	bl	139bc <table_set_int8@@Base>
   14d6c:	mov	r6, #0
   14d70:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14d74:	mov	r0, r6
   14d78:	add	r2, sp, #8
   14d7c:	ldr	r1, [pc, #200]	; 14e4c <table_cell_from_buffer@@Base+0x5ec>
   14d80:	bl	11b18 <__isoc99_sscanf@plt>
   14d84:	cmp	r0, #1
   14d88:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14d8c:	mov	r2, r4
   14d90:	mov	r1, r8
   14d94:	mov	r0, r5
   14d98:	ldr	r3, [sp, #8]
   14d9c:	bl	13940 <table_set_uint@@Base>
   14da0:	mov	r6, #0
   14da4:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14da8:	mov	r0, r6
   14dac:	add	r2, sp, #8
   14db0:	ldr	r1, [pc, #100]	; 14e1c <table_cell_from_buffer@@Base+0x5bc>
   14db4:	bl	11b18 <__isoc99_sscanf@plt>
   14db8:	cmp	r0, #1
   14dbc:	bne	14904 <table_cell_from_buffer@@Base+0xa4>
   14dc0:	mov	r2, r4
   14dc4:	mov	r1, r8
   14dc8:	mov	r0, r5
   14dcc:	ldr	r3, [sp, #8]
   14dd0:	bl	138c4 <table_set_int@@Base>
   14dd4:	mov	r6, #0
   14dd8:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14ddc:	mov	r2, r4
   14de0:	mov	r1, r8
   14de4:	mov	r0, r5
   14de8:	mov	r3, r6
   14dec:	bl	13848 <table_set_bool@@Base>
   14df0:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14df4:	mov	r2, r4
   14df8:	mov	r1, r8
   14dfc:	mov	r0, r5
   14e00:	ldr	r3, [sp, #8]
   14e04:	bl	143d4 <table_set_ptr@@Base>
   14e08:	mov	r6, #0
   14e0c:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14e10:	mov	r6, #0
   14e14:	b	14908 <table_cell_from_buffer@@Base+0xa8>
   14e18:	andeq	r5, r1, ip, lsl r2
   14e1c:	andeq	r5, r1, r0, ror #3
   14e20:	andeq	r5, r1, r8, lsl r2
   14e24:	andeq	r5, r1, r8, lsl #4
   14e28:	andeq	r5, r1, r0, lsl r2
   14e2c:	andeq	r5, r1, ip, lsl #4
   14e30:	andeq	r5, r1, r4, lsl r2
   14e34:	strdeq	r5, [r1], -r0
   14e38:	andeq	r5, r1, r8, ror #3
   14e3c:	andeq	r5, r1, r4, lsl #4
   14e40:	andeq	r5, r1, r0, lsl #4
   14e44:	strdeq	r5, [r1], -ip
   14e48:	strdeq	r5, [r1], -r8
   14e4c:	andeq	r5, r1, r4, ror #3
   14e50:	andeq	r5, r1, r8, lsr #4
   14e54:	andeq	r5, r1, r0, lsr #4

00014e58 <table_cell_nullify@@Base>:
   14e58:	push	{r4, r5, r6, lr}
   14e5c:	mov	r5, r2
   14e60:	bl	134e0 <table_get_row_ptr@@Base>
   14e64:	ldr	r4, [r0]
   14e68:	ldr	r0, [r4, r5, lsl #2]
   14e6c:	cmp	r0, #0
   14e70:	beq	14e80 <table_cell_nullify@@Base+0x28>
   14e74:	bl	11ab8 <free@plt>
   14e78:	mov	r3, #0
   14e7c:	str	r3, [r4, r5, lsl #2]
   14e80:	mov	r0, #0
   14e84:	pop	{r4, r5, r6, pc}

00014e88 <table_get_cell_ptr@@Base>:
   14e88:	push	{r4, lr}
   14e8c:	mov	r4, r2
   14e90:	bl	134e0 <table_get_row_ptr@@Base>
   14e94:	ldr	r0, [r0]
   14e98:	add	r0, r0, r4, lsl #2
   14e9c:	pop	{r4, pc}
   14ea0:	subs	r2, r1, #1
   14ea4:	bxeq	lr
   14ea8:	bcc	15080 <table_get_cell_ptr@@Base+0x1f8>
   14eac:	cmp	r0, r1
   14eb0:	bls	15064 <table_get_cell_ptr@@Base+0x1dc>
   14eb4:	tst	r1, r2
   14eb8:	beq	15070 <table_get_cell_ptr@@Base+0x1e8>
   14ebc:	clz	r3, r0
   14ec0:	clz	r2, r1
   14ec4:	sub	r3, r2, r3
   14ec8:	rsbs	r3, r3, #31
   14ecc:	addne	r3, r3, r3, lsl #1
   14ed0:	mov	r2, #0
   14ed4:	addne	pc, pc, r3, lsl #2
   14ed8:	nop			; (mov r0, r0)
   14edc:	cmp	r0, r1, lsl #31
   14ee0:	adc	r2, r2, r2
   14ee4:	subcs	r0, r0, r1, lsl #31
   14ee8:	cmp	r0, r1, lsl #30
   14eec:	adc	r2, r2, r2
   14ef0:	subcs	r0, r0, r1, lsl #30
   14ef4:	cmp	r0, r1, lsl #29
   14ef8:	adc	r2, r2, r2
   14efc:	subcs	r0, r0, r1, lsl #29
   14f00:	cmp	r0, r1, lsl #28
   14f04:	adc	r2, r2, r2
   14f08:	subcs	r0, r0, r1, lsl #28
   14f0c:	cmp	r0, r1, lsl #27
   14f10:	adc	r2, r2, r2
   14f14:	subcs	r0, r0, r1, lsl #27
   14f18:	cmp	r0, r1, lsl #26
   14f1c:	adc	r2, r2, r2
   14f20:	subcs	r0, r0, r1, lsl #26
   14f24:	cmp	r0, r1, lsl #25
   14f28:	adc	r2, r2, r2
   14f2c:	subcs	r0, r0, r1, lsl #25
   14f30:	cmp	r0, r1, lsl #24
   14f34:	adc	r2, r2, r2
   14f38:	subcs	r0, r0, r1, lsl #24
   14f3c:	cmp	r0, r1, lsl #23
   14f40:	adc	r2, r2, r2
   14f44:	subcs	r0, r0, r1, lsl #23
   14f48:	cmp	r0, r1, lsl #22
   14f4c:	adc	r2, r2, r2
   14f50:	subcs	r0, r0, r1, lsl #22
   14f54:	cmp	r0, r1, lsl #21
   14f58:	adc	r2, r2, r2
   14f5c:	subcs	r0, r0, r1, lsl #21
   14f60:	cmp	r0, r1, lsl #20
   14f64:	adc	r2, r2, r2
   14f68:	subcs	r0, r0, r1, lsl #20
   14f6c:	cmp	r0, r1, lsl #19
   14f70:	adc	r2, r2, r2
   14f74:	subcs	r0, r0, r1, lsl #19
   14f78:	cmp	r0, r1, lsl #18
   14f7c:	adc	r2, r2, r2
   14f80:	subcs	r0, r0, r1, lsl #18
   14f84:	cmp	r0, r1, lsl #17
   14f88:	adc	r2, r2, r2
   14f8c:	subcs	r0, r0, r1, lsl #17
   14f90:	cmp	r0, r1, lsl #16
   14f94:	adc	r2, r2, r2
   14f98:	subcs	r0, r0, r1, lsl #16
   14f9c:	cmp	r0, r1, lsl #15
   14fa0:	adc	r2, r2, r2
   14fa4:	subcs	r0, r0, r1, lsl #15
   14fa8:	cmp	r0, r1, lsl #14
   14fac:	adc	r2, r2, r2
   14fb0:	subcs	r0, r0, r1, lsl #14
   14fb4:	cmp	r0, r1, lsl #13
   14fb8:	adc	r2, r2, r2
   14fbc:	subcs	r0, r0, r1, lsl #13
   14fc0:	cmp	r0, r1, lsl #12
   14fc4:	adc	r2, r2, r2
   14fc8:	subcs	r0, r0, r1, lsl #12
   14fcc:	cmp	r0, r1, lsl #11
   14fd0:	adc	r2, r2, r2
   14fd4:	subcs	r0, r0, r1, lsl #11
   14fd8:	cmp	r0, r1, lsl #10
   14fdc:	adc	r2, r2, r2
   14fe0:	subcs	r0, r0, r1, lsl #10
   14fe4:	cmp	r0, r1, lsl #9
   14fe8:	adc	r2, r2, r2
   14fec:	subcs	r0, r0, r1, lsl #9
   14ff0:	cmp	r0, r1, lsl #8
   14ff4:	adc	r2, r2, r2
   14ff8:	subcs	r0, r0, r1, lsl #8
   14ffc:	cmp	r0, r1, lsl #7
   15000:	adc	r2, r2, r2
   15004:	subcs	r0, r0, r1, lsl #7
   15008:	cmp	r0, r1, lsl #6
   1500c:	adc	r2, r2, r2
   15010:	subcs	r0, r0, r1, lsl #6
   15014:	cmp	r0, r1, lsl #5
   15018:	adc	r2, r2, r2
   1501c:	subcs	r0, r0, r1, lsl #5
   15020:	cmp	r0, r1, lsl #4
   15024:	adc	r2, r2, r2
   15028:	subcs	r0, r0, r1, lsl #4
   1502c:	cmp	r0, r1, lsl #3
   15030:	adc	r2, r2, r2
   15034:	subcs	r0, r0, r1, lsl #3
   15038:	cmp	r0, r1, lsl #2
   1503c:	adc	r2, r2, r2
   15040:	subcs	r0, r0, r1, lsl #2
   15044:	cmp	r0, r1, lsl #1
   15048:	adc	r2, r2, r2
   1504c:	subcs	r0, r0, r1, lsl #1
   15050:	cmp	r0, r1
   15054:	adc	r2, r2, r2
   15058:	subcs	r0, r0, r1
   1505c:	mov	r0, r2
   15060:	bx	lr
   15064:	moveq	r0, #1
   15068:	movne	r0, #0
   1506c:	bx	lr
   15070:	clz	r2, r1
   15074:	rsb	r2, r2, #31
   15078:	lsr	r0, r0, r2
   1507c:	bx	lr
   15080:	cmp	r0, #0
   15084:	mvnne	r0, #0
   15088:	b	150ac <table_get_cell_ptr@@Base+0x224>
   1508c:	cmp	r1, #0
   15090:	beq	15080 <table_get_cell_ptr@@Base+0x1f8>
   15094:	push	{r0, r1, lr}
   15098:	bl	14ea0 <table_get_cell_ptr@@Base+0x18>
   1509c:	pop	{r1, r2, lr}
   150a0:	mul	r3, r2, r0
   150a4:	sub	r1, r1, r3
   150a8:	bx	lr
   150ac:	push	{r1, lr}
   150b0:	mov	r0, #8
   150b4:	bl	11a94 <raise@plt>
   150b8:	pop	{r1, pc}

000150bc <__libc_csu_init@@Base>:
   150bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   150c0:	mov	r7, r0
   150c4:	ldr	r6, [pc, #72]	; 15114 <__libc_csu_init@@Base+0x58>
   150c8:	ldr	r5, [pc, #72]	; 15118 <__libc_csu_init@@Base+0x5c>
   150cc:	add	r6, pc, r6
   150d0:	add	r5, pc, r5
   150d4:	sub	r6, r6, r5
   150d8:	mov	r8, r1
   150dc:	mov	r9, r2
   150e0:	bl	11a74 <raise@plt-0x20>
   150e4:	asrs	r6, r6, #2
   150e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   150ec:	mov	r4, #0
   150f0:	add	r4, r4, #1
   150f4:	ldr	r3, [r5], #4
   150f8:	mov	r2, r9
   150fc:	mov	r1, r8
   15100:	mov	r0, r7
   15104:	blx	r3
   15108:	cmp	r6, r4
   1510c:	bne	150f0 <__libc_csu_init@@Base+0x34>
   15110:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15114:	andeq	r0, r1, ip, lsr lr
   15118:	andeq	r0, r1, r4, lsr lr

0001511c <__libc_csu_fini@@Base>:
   1511c:	bx	lr

Disassembly of section .fini:

00015120 <.fini>:
   15120:	push	{r3, lr}
   15124:	pop	{r3, pc}
