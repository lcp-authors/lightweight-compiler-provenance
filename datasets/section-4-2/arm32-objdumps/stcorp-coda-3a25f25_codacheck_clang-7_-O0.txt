
../repos/stcorp-coda-3a25f25/codacheck:     file format elf32-littlearm


Disassembly of section .init:

00010c88 <.init>:
   10c88:	push	{r3, lr}
   10c8c:	bl	10e34 <_start@@Base+0x3c>
   10c90:	pop	{r3, pc}

Disassembly of section .plt:

00010c94 <coda_set_option_perform_boundary_checks@plt-0x14>:
   10c94:	push	{lr}		; (str lr, [sp, #-4]!)
   10c98:	ldr	lr, [pc, #4]	; 10ca4 <coda_set_option_perform_boundary_checks@plt-0x4>
   10c9c:	add	lr, pc, lr
   10ca0:	ldr	pc, [lr, #8]!
   10ca4:	andeq	r2, r1, ip, asr r3

00010ca8 <coda_set_option_perform_boundary_checks@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #860]!	; 0x35c

00010cb4 <strcmp@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #852]!	; 0x354

00010cc0 <printf@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #844]!	; 0x34c

00010ccc <coda_set_error@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #836]!	; 0x344

00010cd8 <coda_open@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #828]!	; 0x33c

00010ce4 <fflush@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #820]!	; 0x334

00010cf0 <coda_set_option_use_mmap@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #812]!	; 0x32c

00010cfc <coda_cursor_print_path@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #804]!	; 0x324

00010d08 <coda_set_definition_path_conditional@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #796]!	; 0x31c

00010d14 <getchar@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #788]!	; 0x314

00010d20 <coda_set_definition_path@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #780]!	; 0x30c

00010d2c <coda_recognize_file@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #772]!	; 0x304

00010d38 <coda_type_get_format_name@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #73728	; 0x12000
   10d40:	ldr	pc, [ip, #764]!	; 0x2fc

00010d44 <coda_done@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #73728	; 0x12000
   10d4c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d50 <coda_product_check@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #73728	; 0x12000
   10d58:	ldr	pc, [ip, #748]!	; 0x2ec

00010d5c <__libc_start_main@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #73728	; 0x12000
   10d64:	ldr	pc, [ip, #740]!	; 0x2e4

00010d68 <__gmon_start__@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #732]!	; 0x2dc

00010d74 <exit@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d80 <fprintf@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #73728	; 0x12000
   10d88:	ldr	pc, [ip, #716]!	; 0x2cc

00010d8c <coda_init@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #73728	; 0x12000
   10d94:	ldr	pc, [ip, #708]!	; 0x2c4

00010d98 <ungetc@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #73728	; 0x12000
   10da0:	ldr	pc, [ip, #700]!	; 0x2bc

00010da4 <coda_set_option_perform_conversions@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #73728	; 0x12000
   10dac:	ldr	pc, [ip, #692]!	; 0x2b4

00010db0 <coda_close@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #73728	; 0x12000
   10db8:	ldr	pc, [ip, #684]!	; 0x2ac

00010dbc <coda_errno_to_string@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #73728	; 0x12000
   10dc4:	ldr	pc, [ip, #676]!	; 0x2a4

00010dc8 <coda_get_libcoda_version@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #73728	; 0x12000
   10dd0:	ldr	pc, [ip, #668]!	; 0x29c

00010dd4 <coda_get_errno@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #73728	; 0x12000
   10ddc:	ldr	pc, [ip, #660]!	; 0x294

00010de0 <abort@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #73728	; 0x12000
   10de8:	ldr	pc, [ip, #652]!	; 0x28c

00010dec <__assert_fail@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #73728	; 0x12000
   10df4:	ldr	pc, [ip, #644]!	; 0x284

Disassembly of section .text:

00010df8 <_start@@Base>:
   10df8:	mov	fp, #0
   10dfc:	mov	lr, #0
   10e00:	pop	{r1}		; (ldr r1, [sp], #4)
   10e04:	mov	r2, sp
   10e08:	push	{r2}		; (str r2, [sp, #-4]!)
   10e0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10e10:	ldr	ip, [pc, #16]	; 10e28 <_start@@Base+0x30>
   10e14:	push	{ip}		; (str ip, [sp, #-4]!)
   10e18:	ldr	r0, [pc, #12]	; 10e2c <_start@@Base+0x34>
   10e1c:	ldr	r3, [pc, #12]	; 10e30 <_start@@Base+0x38>
   10e20:	bl	10d5c <__libc_start_main@plt>
   10e24:	bl	10de0 <abort@plt>
   10e28:	andeq	r1, r1, r4, asr #26
   10e2c:	andeq	r0, r1, r8, ror #29
   10e30:	andeq	r1, r1, r4, ror #25
   10e34:	ldr	r3, [pc, #20]	; 10e50 <_start@@Base+0x58>
   10e38:	ldr	r2, [pc, #20]	; 10e54 <_start@@Base+0x5c>
   10e3c:	add	r3, pc, r3
   10e40:	ldr	r2, [r3, r2]
   10e44:	cmp	r2, #0
   10e48:	bxeq	lr
   10e4c:	b	10d68 <__gmon_start__@plt>
   10e50:			; <UNDEFINED> instruction: 0x000121bc
   10e54:	muleq	r0, r0, r0
   10e58:	ldr	r0, [pc, #24]	; 10e78 <_start@@Base+0x80>
   10e5c:	ldr	r3, [pc, #24]	; 10e7c <_start@@Base+0x84>
   10e60:	cmp	r3, r0
   10e64:	bxeq	lr
   10e68:	ldr	r3, [pc, #16]	; 10e80 <_start@@Base+0x88>
   10e6c:	cmp	r3, #0
   10e70:	bxeq	lr
   10e74:	bx	r3
   10e78:	andeq	r3, r2, r4, lsr #1
   10e7c:	andeq	r3, r2, r4, lsr #1
   10e80:	andeq	r0, r0, r0
   10e84:	ldr	r0, [pc, #36]	; 10eb0 <_start@@Base+0xb8>
   10e88:	ldr	r1, [pc, #36]	; 10eb4 <_start@@Base+0xbc>
   10e8c:	sub	r1, r1, r0
   10e90:	asr	r1, r1, #2
   10e94:	add	r1, r1, r1, lsr #31
   10e98:	asrs	r1, r1, #1
   10e9c:	bxeq	lr
   10ea0:	ldr	r3, [pc, #16]	; 10eb8 <_start@@Base+0xc0>
   10ea4:	cmp	r3, #0
   10ea8:	bxeq	lr
   10eac:	bx	r3
   10eb0:	andeq	r3, r2, r4, lsr #1
   10eb4:	andeq	r3, r2, r4, lsr #1
   10eb8:	andeq	r0, r0, r0
   10ebc:	push	{r4, lr}
   10ec0:	ldr	r4, [pc, #24]	; 10ee0 <_start@@Base+0xe8>
   10ec4:	ldrb	r3, [r4]
   10ec8:	cmp	r3, #0
   10ecc:	popne	{r4, pc}
   10ed0:	bl	10e58 <_start@@Base+0x60>
   10ed4:	mov	r3, #1
   10ed8:	strb	r3, [r4]
   10edc:	pop	{r4, pc}
   10ee0:	andeq	r3, r2, r4, lsr #1
   10ee4:	b	10e84 <_start@@Base+0x8c>

00010ee8 <main@@Base>:
   10ee8:	push	{r4, r5, fp, lr}
   10eec:	add	fp, sp, #8
   10ef0:	sub	sp, sp, #1104	; 0x450
   10ef4:	ldr	r2, [pc, #1484]	; 114c8 <main@@Base+0x5e0>
   10ef8:	ldr	r2, [pc, r2]
   10efc:	ldr	r3, [pc, #1480]	; 114cc <main@@Base+0x5e4>
   10f00:	ldr	r3, [pc, r3]
   10f04:	ldr	ip, [pc, #1476]	; 114d0 <main@@Base+0x5e8>
   10f08:	ldr	ip, [pc, ip]
   10f0c:	movw	lr, #0
   10f10:	str	lr, [fp, #-12]
   10f14:	str	r0, [fp, #-16]
   10f18:	str	r1, [fp, #-20]	; 0xffffffec
   10f1c:	str	lr, [fp, #-24]	; 0xffffffe8
   10f20:	str	lr, [ip]
   10f24:	str	lr, [r3]
   10f28:	movw	r0, #1
   10f2c:	str	r0, [fp, #-28]	; 0xffffffe4
   10f30:	str	lr, [r2]
   10f34:	ldr	r0, [fp, #-16]
   10f38:	cmp	r0, #1
   10f3c:	beq	10f78 <main@@Base+0x90>
   10f40:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f44:	ldr	r0, [r0, #4]
   10f48:	ldr	r1, [pc, #1472]	; 11510 <main@@Base+0x628>
   10f4c:	add	r1, pc, r1
   10f50:	bl	10cb4 <strcmp@plt>
   10f54:	cmp	r0, #0
   10f58:	beq	10f78 <main@@Base+0x90>
   10f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f60:	ldr	r0, [r0, #4]
   10f64:	ldr	r1, [pc, #1448]	; 11514 <main@@Base+0x62c>
   10f68:	add	r1, pc, r1
   10f6c:	bl	10cb4 <strcmp@plt>
   10f70:	cmp	r0, #0
   10f74:	bne	10f84 <main@@Base+0x9c>
   10f78:	bl	118b0 <main@@Base+0x9c8>
   10f7c:	movw	r0, #0
   10f80:	bl	10d74 <exit@plt>
   10f84:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f88:	ldr	r0, [r0, #4]
   10f8c:	ldr	r1, [pc, #1412]	; 11518 <main@@Base+0x630>
   10f90:	add	r1, pc, r1
   10f94:	bl	10cb4 <strcmp@plt>
   10f98:	cmp	r0, #0
   10f9c:	beq	10fbc <main@@Base+0xd4>
   10fa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   10fa4:	ldr	r0, [r0, #4]
   10fa8:	ldr	r1, [pc, #1388]	; 1151c <main@@Base+0x634>
   10fac:	add	r1, pc, r1
   10fb0:	bl	10cb4 <strcmp@plt>
   10fb4:	cmp	r0, #0
   10fb8:	bne	10fc8 <main@@Base+0xe0>
   10fbc:	bl	11bd8 <main@@Base+0xcf0>
   10fc0:	movw	r0, #0
   10fc4:	bl	10d74 <exit@plt>
   10fc8:	movw	r0, #1
   10fcc:	str	r0, [fp, #-32]	; 0xffffffe0
   10fd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10fd4:	add	r0, r0, #1
   10fd8:	ldr	r1, [fp, #-16]
   10fdc:	cmp	r0, r1
   10fe0:	bge	11034 <main@@Base+0x14c>
   10fe4:	ldr	r0, [fp, #-20]	; 0xffffffec
   10fe8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10fec:	add	r0, r0, r1, lsl #2
   10ff0:	ldr	r0, [r0]
   10ff4:	ldr	r1, [pc, #1316]	; 11520 <main@@Base+0x638>
   10ff8:	add	r1, pc, r1
   10ffc:	bl	10cb4 <strcmp@plt>
   11000:	cmp	r0, #0
   11004:	bne	11034 <main@@Base+0x14c>
   11008:	ldr	r0, [fp, #-20]	; 0xffffffec
   1100c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11010:	add	r1, r1, #1
   11014:	add	r0, r0, r1, lsl #2
   11018:	ldr	r0, [r0]
   1101c:	bl	10d20 <coda_set_definition_path@plt>
   11020:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11024:	add	r1, r1, #2
   11028:	str	r1, [fp, #-32]	; 0xffffffe0
   1102c:	str	r0, [sp, #60]	; 0x3c
   11030:	b	110a8 <main@@Base+0x1c0>
   11034:	ldr	r0, [pc, #1176]	; 114d4 <main@@Base+0x5ec>
   11038:	add	r0, pc, r0
   1103c:	str	r0, [fp, #-36]	; 0xffffffdc
   11040:	ldr	r0, [fp, #-20]	; 0xffffffec
   11044:	ldr	r0, [r0]
   11048:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1104c:	movw	r1, #0
   11050:	bl	10d08 <coda_set_definition_path_conditional@plt>
   11054:	cmp	r0, #0
   11058:	beq	110a4 <main@@Base+0x1bc>
   1105c:	ldr	r0, [pc, #1144]	; 114dc <main@@Base+0x5f4>
   11060:	ldr	r0, [pc, r0]
   11064:	ldr	r0, [r0]
   11068:	str	r0, [sp, #56]	; 0x38
   1106c:	bl	10dd4 <coda_get_errno@plt>
   11070:	ldr	r0, [r0]
   11074:	bl	10dbc <coda_errno_to_string@plt>
   11078:	ldr	lr, [pc, #1112]	; 114d8 <main@@Base+0x5f0>
   1107c:	add	r1, pc, lr
   11080:	ldr	lr, [sp, #56]	; 0x38
   11084:	str	r0, [sp, #52]	; 0x34
   11088:	mov	r0, lr
   1108c:	ldr	r2, [sp, #52]	; 0x34
   11090:	bl	10d80 <fprintf@plt>
   11094:	movw	r1, #1
   11098:	str	r0, [sp, #48]	; 0x30
   1109c:	mov	r0, r1
   110a0:	bl	10d74 <exit@plt>
   110a4:	b	110a8 <main@@Base+0x1c0>
   110a8:	b	110ac <main@@Base+0x1c4>
   110ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   110b0:	ldr	r1, [fp, #-16]
   110b4:	cmp	r0, r1
   110b8:	bge	112a8 <main@@Base+0x3c0>
   110bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   110c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   110c4:	add	r0, r0, r1, lsl #2
   110c8:	ldr	r0, [r0]
   110cc:	ldr	r1, [pc, #1104]	; 11524 <main@@Base+0x63c>
   110d0:	add	r1, pc, r1
   110d4:	bl	10cb4 <strcmp@plt>
   110d8:	cmp	r0, #0
   110dc:	beq	11104 <main@@Base+0x21c>
   110e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   110e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   110e8:	add	r0, r0, r1, lsl #2
   110ec:	ldr	r0, [r0]
   110f0:	ldr	r1, [pc, #1072]	; 11528 <main@@Base+0x640>
   110f4:	add	r1, pc, r1
   110f8:	bl	10cb4 <strcmp@plt>
   110fc:	cmp	r0, #0
   11100:	bne	11118 <main@@Base+0x230>
   11104:	ldr	r0, [pc, #1024]	; 1150c <main@@Base+0x624>
   11108:	ldr	r0, [pc, r0]
   1110c:	movw	r1, #1
   11110:	str	r1, [r0]
   11114:	b	11298 <main@@Base+0x3b0>
   11118:	ldr	r0, [fp, #-20]	; 0xffffffec
   1111c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11120:	add	r0, r0, r1, lsl #2
   11124:	ldr	r0, [r0]
   11128:	ldr	r1, [pc, #1020]	; 1152c <main@@Base+0x644>
   1112c:	add	r1, pc, r1
   11130:	bl	10cb4 <strcmp@plt>
   11134:	cmp	r0, #0
   11138:	beq	11160 <main@@Base+0x278>
   1113c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11140:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11144:	add	r0, r0, r1, lsl #2
   11148:	ldr	r0, [r0]
   1114c:	ldr	r1, [pc, #988]	; 11530 <main@@Base+0x648>
   11150:	add	r1, pc, r1
   11154:	bl	10cb4 <strcmp@plt>
   11158:	cmp	r0, #0
   1115c:	bne	11174 <main@@Base+0x28c>
   11160:	ldr	r0, [pc, #928]	; 11508 <main@@Base+0x620>
   11164:	ldr	r0, [pc, r0]
   11168:	movw	r1, #1
   1116c:	str	r1, [r0]
   11170:	b	11294 <main@@Base+0x3ac>
   11174:	ldr	r0, [fp, #-20]	; 0xffffffec
   11178:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1117c:	add	r0, r0, r1, lsl #2
   11180:	ldr	r0, [r0]
   11184:	ldr	r1, [pc, #936]	; 11534 <main@@Base+0x64c>
   11188:	add	r1, pc, r1
   1118c:	bl	10cb4 <strcmp@plt>
   11190:	cmp	r0, #0
   11194:	beq	111bc <main@@Base+0x2d4>
   11198:	ldr	r0, [fp, #-20]	; 0xffffffec
   1119c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   111a0:	add	r0, r0, r1, lsl #2
   111a4:	ldr	r0, [r0]
   111a8:	ldr	r1, [pc, #904]	; 11538 <main@@Base+0x650>
   111ac:	add	r1, pc, r1
   111b0:	bl	10cb4 <strcmp@plt>
   111b4:	cmp	r0, #0
   111b8:	bne	111d0 <main@@Base+0x2e8>
   111bc:	ldr	r0, [pc, #832]	; 11504 <main@@Base+0x61c>
   111c0:	ldr	r0, [pc, r0]
   111c4:	movw	r1, #1
   111c8:	str	r1, [r0]
   111cc:	b	11290 <main@@Base+0x3a8>
   111d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   111d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   111d8:	add	r0, r0, r1, lsl #2
   111dc:	ldr	r0, [r0]
   111e0:	ldr	r1, [pc, #852]	; 1153c <main@@Base+0x654>
   111e4:	add	r1, pc, r1
   111e8:	bl	10cb4 <strcmp@plt>
   111ec:	cmp	r0, #0
   111f0:	bne	11200 <main@@Base+0x318>
   111f4:	movw	r0, #0
   111f8:	str	r0, [fp, #-28]	; 0xffffffe4
   111fc:	b	1128c <main@@Base+0x3a4>
   11200:	ldr	r0, [fp, #-20]	; 0xffffffec
   11204:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11208:	add	r0, r0, r1, lsl #2
   1120c:	ldr	r0, [r0]
   11210:	ldr	r1, [pc, #808]	; 11540 <main@@Base+0x658>
   11214:	add	r1, pc, r1
   11218:	bl	10cb4 <strcmp@plt>
   1121c:	cmp	r0, #0
   11220:	bne	11244 <main@@Base+0x35c>
   11224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11228:	ldr	r1, [fp, #-16]
   1122c:	sub	r1, r1, #1
   11230:	cmp	r0, r1
   11234:	bne	11244 <main@@Base+0x35c>
   11238:	movw	r0, #1
   1123c:	str	r0, [fp, #-24]	; 0xffffffe8
   11240:	b	112a8 <main@@Base+0x3c0>
   11244:	ldr	r0, [fp, #-20]	; 0xffffffec
   11248:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1124c:	add	r0, r0, r1, lsl #2
   11250:	ldr	r0, [r0]
   11254:	ldrb	r0, [r0]
   11258:	cmp	r0, #45	; 0x2d
   1125c:	beq	11264 <main@@Base+0x37c>
   11260:	b	112a8 <main@@Base+0x3c0>
   11264:	ldr	r0, [pc, #628]	; 114e0 <main@@Base+0x5f8>
   11268:	add	r1, pc, r0
   1126c:	ldr	r0, [pc, #624]	; 114e4 <main@@Base+0x5fc>
   11270:	ldr	r0, [pc, r0]
   11274:	ldr	r0, [r0]
   11278:	bl	10d80 <fprintf@plt>
   1127c:	str	r0, [sp, #44]	; 0x2c
   11280:	bl	118b0 <main@@Base+0x9c8>
   11284:	movw	r0, #1
   11288:	bl	10d74 <exit@plt>
   1128c:	b	11290 <main@@Base+0x3a8>
   11290:	b	11294 <main@@Base+0x3ac>
   11294:	b	11298 <main@@Base+0x3b0>
   11298:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1129c:	add	r0, r0, #1
   112a0:	str	r0, [fp, #-32]	; 0xffffffe0
   112a4:	b	110ac <main@@Base+0x1c4>
   112a8:	bl	10d8c <coda_init@plt>
   112ac:	cmp	r0, #0
   112b0:	beq	112fc <main@@Base+0x414>
   112b4:	ldr	r0, [pc, #580]	; 11500 <main@@Base+0x618>
   112b8:	ldr	r0, [pc, r0]
   112bc:	ldr	r0, [r0]
   112c0:	str	r0, [sp, #40]	; 0x28
   112c4:	bl	10dd4 <coda_get_errno@plt>
   112c8:	ldr	r0, [r0]
   112cc:	bl	10dbc <coda_errno_to_string@plt>
   112d0:	ldr	lr, [pc, #548]	; 114fc <main@@Base+0x614>
   112d4:	add	r1, pc, lr
   112d8:	ldr	lr, [sp, #40]	; 0x28
   112dc:	str	r0, [sp, #36]	; 0x24
   112e0:	mov	r0, lr
   112e4:	ldr	r2, [sp, #36]	; 0x24
   112e8:	bl	10d80 <fprintf@plt>
   112ec:	movw	r1, #1
   112f0:	str	r0, [sp, #32]
   112f4:	mov	r0, r1
   112f8:	bl	10d74 <exit@plt>
   112fc:	movw	r0, #0
   11300:	bl	10ca8 <coda_set_option_perform_boundary_checks@plt>
   11304:	movw	lr, #0
   11308:	str	r0, [sp, #28]
   1130c:	mov	r0, lr
   11310:	bl	10da4 <coda_set_option_perform_conversions@plt>
   11314:	ldr	lr, [fp, #-28]	; 0xffffffe4
   11318:	str	r0, [sp, #24]
   1131c:	mov	r0, lr
   11320:	bl	10cf0 <coda_set_option_use_mmap@plt>
   11324:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11328:	cmp	lr, #0
   1132c:	str	r0, [sp, #20]
   11330:	beq	11454 <main@@Base+0x56c>
   11334:	b	11338 <main@@Base+0x450>
   11338:	movw	r0, #0
   1133c:	str	r0, [sp, #68]	; 0x44
   11340:	bl	10d14 <getchar@plt>
   11344:	strb	r0, [sp, #75]	; 0x4b
   11348:	ldrb	r0, [sp, #75]	; 0x4b
   1134c:	cmp	r0, #13
   11350:	bne	11390 <main@@Base+0x4a8>
   11354:	bl	10d14 <getchar@plt>
   11358:	strb	r0, [sp, #67]	; 0x43
   1135c:	ldrb	r0, [sp, #67]	; 0x43
   11360:	cmp	r0, #10
   11364:	beq	1138c <main@@Base+0x4a4>
   11368:	ldr	r0, [pc, #376]	; 114e8 <main@@Base+0x600>
   1136c:	ldr	r0, [pc, r0]
   11370:	ldrb	r1, [sp, #67]	; 0x43
   11374:	ldr	r0, [r0]
   11378:	str	r0, [sp, #16]
   1137c:	mov	r0, r1
   11380:	ldr	r1, [sp, #16]
   11384:	bl	10d98 <ungetc@plt>
   11388:	str	r0, [sp, #12]
   1138c:	b	11390 <main@@Base+0x4a8>
   11390:	ldrb	r0, [sp, #75]	; 0x4b
   11394:	cmn	r0, #1
   11398:	beq	113b4 <main@@Base+0x4cc>
   1139c:	ldrb	r0, [sp, #75]	; 0x4b
   113a0:	cmp	r0, #10
   113a4:	beq	113b4 <main@@Base+0x4cc>
   113a8:	ldrb	r0, [sp, #75]	; 0x4b
   113ac:	cmp	r0, #13
   113b0:	bne	113cc <main@@Base+0x4e4>
   113b4:	ldr	r0, [sp, #68]	; 0x44
   113b8:	add	r1, sp, #76	; 0x4c
   113bc:	add	r0, r1, r0
   113c0:	movw	r1, #0
   113c4:	strb	r1, [r0]
   113c8:	b	11420 <main@@Base+0x538>
   113cc:	ldrb	r0, [sp, #75]	; 0x4b
   113d0:	ldr	r1, [sp, #68]	; 0x44
   113d4:	add	r2, sp, #76	; 0x4c
   113d8:	add	r1, r2, r1
   113dc:	strb	r0, [r1]
   113e0:	ldr	r0, [sp, #68]	; 0x44
   113e4:	add	r0, r0, #1
   113e8:	str	r0, [sp, #68]	; 0x44
   113ec:	ldr	r0, [sp, #68]	; 0x44
   113f0:	cmp	r0, #1000	; 0x3e8
   113f4:	bge	113fc <main@@Base+0x514>
   113f8:	b	1141c <main@@Base+0x534>
   113fc:	ldr	r0, [pc, #232]	; 114ec <main@@Base+0x604>
   11400:	add	r0, pc, r0
   11404:	ldr	r1, [pc, #228]	; 114f0 <main@@Base+0x608>
   11408:	add	r1, pc, r1
   1140c:	ldr	r2, [pc, #224]	; 114f4 <main@@Base+0x60c>
   11410:	add	r3, pc, r2
   11414:	movw	r2, #316	; 0x13c
   11418:	bl	10dec <__assert_fail@plt>
   1141c:	b	11340 <main@@Base+0x458>
   11420:	ldr	r0, [sp, #68]	; 0x44
   11424:	cmp	r0, #0
   11428:	ble	11440 <main@@Base+0x558>
   1142c:	add	r0, sp, #76	; 0x4c
   11430:	bl	11544 <main@@Base+0x65c>
   11434:	movw	r0, #0
   11438:	bl	10ce4 <fflush@plt>
   1143c:	str	r0, [sp, #8]
   11440:	b	11444 <main@@Base+0x55c>
   11444:	ldrb	r0, [sp, #75]	; 0x4b
   11448:	cmn	r0, #1
   1144c:	bne	11338 <main@@Base+0x450>
   11450:	b	1149c <main@@Base+0x5b4>
   11454:	b	11458 <main@@Base+0x570>
   11458:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1145c:	ldr	r1, [fp, #-16]
   11460:	cmp	r0, r1
   11464:	bge	11498 <main@@Base+0x5b0>
   11468:	ldr	r0, [fp, #-20]	; 0xffffffec
   1146c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11470:	add	r0, r0, r1, lsl #2
   11474:	ldr	r0, [r0]
   11478:	bl	11544 <main@@Base+0x65c>
   1147c:	movw	r0, #0
   11480:	bl	10ce4 <fflush@plt>
   11484:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11488:	add	r1, r1, #1
   1148c:	str	r1, [fp, #-32]	; 0xffffffe0
   11490:	str	r0, [sp, #4]
   11494:	b	11458 <main@@Base+0x570>
   11498:	b	1149c <main@@Base+0x5b4>
   1149c:	bl	10d44 <coda_done@plt>
   114a0:	ldr	lr, [pc, #80]	; 114f8 <main@@Base+0x610>
   114a4:	ldr	lr, [pc, lr]
   114a8:	ldr	lr, [lr]
   114ac:	cmp	lr, #0
   114b0:	beq	114bc <main@@Base+0x5d4>
   114b4:	movw	r0, #1
   114b8:	bl	10d74 <exit@plt>
   114bc:	movw	r0, #0
   114c0:	sub	sp, fp, #8
   114c4:	pop	{r4, r5, fp, pc}
   114c8:	andeq	r2, r1, r0, lsl #3
   114cc:	muleq	r1, r0, r1
   114d0:	andeq	r2, r1, r8, ror r1
   114d4:	andeq	r0, r0, lr, lsr #26
   114d8:	andeq	r1, r0, r3, lsr #8
   114dc:	andeq	r2, r1, r4, lsr #32
   114e0:	andeq	r0, r0, ip, asr #22
   114e4:	andeq	r1, r1, r4, lsl lr
   114e8:	andeq	r1, r1, r0, lsr #26
   114ec:	andeq	r0, r0, lr, asr #19
   114f0:	andeq	r0, r0, pc, asr #19
   114f4:	andeq	r0, r0, r5, lsr #20
   114f8:	ldrdeq	r1, [r1], -r8
   114fc:	andeq	r1, r0, fp, asr #3
   11500:	andeq	r1, r1, ip, asr #27
   11504:			; <UNDEFINED> instruction: 0x00011eb8
   11508:	andeq	r1, r1, ip, lsr #30
   1150c:	andeq	r1, r1, r8, ror pc
   11510:	andeq	r0, r0, r0, lsl #28
   11514:	andeq	r0, r0, r7, ror #27
   11518:	andeq	r0, r0, r6, asr #27
   1151c:	andeq	r0, r0, sp, lsr #27
   11520:	andeq	r0, r0, fp, ror #26
   11524:			; <UNDEFINED> instruction: 0x00000cb0
   11528:	andeq	r0, r0, pc, lsl #25
   1152c:	andeq	r0, r0, r1, ror #24
   11530:	andeq	r0, r0, r0, asr #24
   11534:	andeq	r0, r0, r0, lsl ip
   11538:	andeq	r0, r0, pc, ror #23
   1153c:	andeq	r0, r0, r4, asr #23
   11540:	muleq	r0, lr, fp
   11544:	push	{fp, lr}
   11548:	mov	fp, sp
   1154c:	sub	sp, sp, #128	; 0x80
   11550:	ldr	r1, [pc, #780]	; 11864 <main@@Base+0x97c>
   11554:	add	r1, pc, r1
   11558:	str	r0, [fp, #-4]
   1155c:	ldr	r0, [fp, #-4]
   11560:	str	r0, [fp, #-44]	; 0xffffffd4
   11564:	mov	r0, r1
   11568:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1156c:	bl	10cc0 <printf@plt>
   11570:	ldr	r1, [fp, #-4]
   11574:	str	r0, [fp, #-48]	; 0xffffffd0
   11578:	mov	r0, r1
   1157c:	sub	r1, fp, #24
   11580:	sub	r2, fp, #12
   11584:	sub	r3, fp, #28
   11588:	sub	lr, fp, #32
   1158c:	str	lr, [sp]
   11590:	sub	lr, fp, #36	; 0x24
   11594:	str	lr, [sp, #4]
   11598:	bl	10d2c <coda_recognize_file@plt>
   1159c:	cmp	r0, #0
   115a0:	beq	115ec <main@@Base+0x704>
   115a4:	bl	10dd4 <coda_get_errno@plt>
   115a8:	ldr	r0, [r0]
   115ac:	bl	10dbc <coda_errno_to_string@plt>
   115b0:	ldr	lr, [pc, #756]	; 118ac <main@@Base+0x9c4>
   115b4:	add	lr, pc, lr
   115b8:	str	r0, [fp, #-52]	; 0xffffffcc
   115bc:	mov	r0, lr
   115c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   115c4:	bl	10cc0 <printf@plt>
   115c8:	movw	r1, #0
   115cc:	str	r0, [fp, #-56]	; 0xffffffc8
   115d0:	mov	r0, r1
   115d4:	bl	10ccc <coda_set_error@plt>
   115d8:	ldr	r0, [pc, #712]	; 118a8 <main@@Base+0x9c0>
   115dc:	ldr	r0, [pc, r0]
   115e0:	movw	r1, #1
   115e4:	str	r1, [r0]
   115e8:	b	1185c <main@@Base+0x974>
   115ec:	ldr	r0, [pc, #628]	; 11868 <main@@Base+0x980>
   115f0:	ldr	r0, [pc, r0]
   115f4:	ldr	r0, [r0]
   115f8:	cmp	r0, #0
   115fc:	beq	11644 <main@@Base+0x75c>
   11600:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11604:	movw	r1, #0
   11608:	cmp	r0, r1
   1160c:	beq	11620 <main@@Base+0x738>
   11610:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11614:	movw	r1, #0
   11618:	cmp	r0, r1
   1161c:	bne	11644 <main@@Base+0x75c>
   11620:	ldr	r0, [pc, #636]	; 118a4 <main@@Base+0x9bc>
   11624:	add	r0, pc, r0
   11628:	bl	10cc0 <printf@plt>
   1162c:	ldr	lr, [pc, #620]	; 118a0 <main@@Base+0x9b8>
   11630:	ldr	lr, [pc, lr]
   11634:	movw	r1, #1
   11638:	str	r1, [lr]
   1163c:	str	r0, [fp, #-60]	; 0xffffffc4
   11640:	b	1185c <main@@Base+0x974>
   11644:	ldr	r0, [pc, #544]	; 1186c <main@@Base+0x984>
   11648:	ldr	r0, [pc, r0]
   1164c:	ldr	r0, [r0]
   11650:	cmp	r0, #0
   11654:	beq	116c8 <main@@Base+0x7e0>
   11658:	ldr	r0, [fp, #-12]
   1165c:	bl	10d38 <coda_type_get_format_name@plt>
   11660:	ldr	lr, [pc, #520]	; 11870 <main@@Base+0x988>
   11664:	add	lr, pc, lr
   11668:	str	r0, [sp, #64]	; 0x40
   1166c:	mov	r0, lr
   11670:	ldr	r1, [sp, #64]	; 0x40
   11674:	bl	10cc0 <printf@plt>
   11678:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1167c:	movw	lr, #0
   11680:	cmp	r1, lr
   11684:	str	r0, [sp, #60]	; 0x3c
   11688:	beq	116b8 <main@@Base+0x7d0>
   1168c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11690:	movw	r1, #0
   11694:	cmp	r0, r1
   11698:	beq	116b8 <main@@Base+0x7d0>
   1169c:	ldr	r0, [pc, #464]	; 11874 <main@@Base+0x98c>
   116a0:	add	r0, pc, r0
   116a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   116a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   116ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   116b0:	bl	10cc0 <printf@plt>
   116b4:	str	r0, [sp, #56]	; 0x38
   116b8:	ldr	r0, [pc, #440]	; 11878 <main@@Base+0x990>
   116bc:	add	r0, pc, r0
   116c0:	bl	10cc0 <printf@plt>
   116c4:	str	r0, [sp, #52]	; 0x34
   116c8:	ldr	r0, [fp, #-4]
   116cc:	sub	r1, fp, #8
   116d0:	bl	10cd8 <coda_open@plt>
   116d4:	str	r0, [fp, #-40]	; 0xffffffd8
   116d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   116dc:	cmp	r0, #0
   116e0:	beq	11720 <main@@Base+0x838>
   116e4:	bl	10dd4 <coda_get_errno@plt>
   116e8:	ldr	r0, [r0]
   116ec:	cmn	r0, #21
   116f0:	bne	11720 <main@@Base+0x838>
   116f4:	movw	r0, #0
   116f8:	bl	10cf0 <coda_set_option_use_mmap@plt>
   116fc:	ldr	lr, [fp, #-4]
   11700:	str	r0, [sp, #48]	; 0x30
   11704:	mov	r0, lr
   11708:	sub	r1, fp, #8
   1170c:	bl	10cd8 <coda_open@plt>
   11710:	str	r0, [fp, #-40]	; 0xffffffd8
   11714:	movw	r0, #1
   11718:	bl	10cf0 <coda_set_option_use_mmap@plt>
   1171c:	str	r0, [sp, #44]	; 0x2c
   11720:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11724:	cmp	r0, #0
   11728:	beq	11768 <main@@Base+0x880>
   1172c:	bl	10dd4 <coda_get_errno@plt>
   11730:	ldr	r0, [r0]
   11734:	bl	10dbc <coda_errno_to_string@plt>
   11738:	ldr	lr, [pc, #348]	; 1189c <main@@Base+0x9b4>
   1173c:	add	lr, pc, lr
   11740:	str	r0, [sp, #40]	; 0x28
   11744:	mov	r0, lr
   11748:	ldr	r1, [sp, #40]	; 0x28
   1174c:	bl	10cc0 <printf@plt>
   11750:	ldr	r1, [pc, #320]	; 11898 <main@@Base+0x9b0>
   11754:	ldr	r1, [pc, r1]
   11758:	movw	lr, #1
   1175c:	str	lr, [r1]
   11760:	str	r0, [sp, #36]	; 0x24
   11764:	b	1185c <main@@Base+0x974>
   11768:	ldr	r0, [pc, #268]	; 1187c <main@@Base+0x994>
   1176c:	add	r2, pc, r0
   11770:	ldr	r0, [pc, #264]	; 11880 <main@@Base+0x998>
   11774:	ldr	r0, [pc, r0]
   11778:	ldr	r1, [fp, #-8]
   1177c:	ldr	r0, [r0]
   11780:	cmp	r0, #0
   11784:	movw	r0, #0
   11788:	movne	r0, #1
   1178c:	mvn	r3, #0
   11790:	eor	r0, r0, r3
   11794:	and	r0, r0, #1
   11798:	str	r0, [sp, #32]
   1179c:	mov	r0, r1
   117a0:	ldr	r1, [sp, #32]
   117a4:	movw	r3, #0
   117a8:	bl	10d50 <coda_product_check@plt>
   117ac:	cmp	r0, #0
   117b0:	beq	11800 <main@@Base+0x918>
   117b4:	bl	10dd4 <coda_get_errno@plt>
   117b8:	ldr	r0, [r0]
   117bc:	bl	10dbc <coda_errno_to_string@plt>
   117c0:	ldr	lr, [pc, #204]	; 11894 <main@@Base+0x9ac>
   117c4:	add	lr, pc, lr
   117c8:	str	r0, [sp, #28]
   117cc:	mov	r0, lr
   117d0:	ldr	r1, [sp, #28]
   117d4:	bl	10cc0 <printf@plt>
   117d8:	ldr	r1, [pc, #176]	; 11890 <main@@Base+0x9a8>
   117dc:	ldr	r1, [pc, r1]
   117e0:	movw	lr, #1
   117e4:	str	lr, [r1]
   117e8:	ldr	r1, [fp, #-8]
   117ec:	str	r0, [sp, #24]
   117f0:	mov	r0, r1
   117f4:	bl	10db0 <coda_close@plt>
   117f8:	str	r0, [sp, #20]
   117fc:	b	1185c <main@@Base+0x974>
   11800:	ldr	r0, [fp, #-8]
   11804:	bl	10db0 <coda_close@plt>
   11808:	cmp	r0, #0
   1180c:	beq	1184c <main@@Base+0x964>
   11810:	bl	10dd4 <coda_get_errno@plt>
   11814:	ldr	r0, [r0]
   11818:	bl	10dbc <coda_errno_to_string@plt>
   1181c:	ldr	lr, [pc, #104]	; 1188c <main@@Base+0x9a4>
   11820:	add	lr, pc, lr
   11824:	str	r0, [sp, #16]
   11828:	mov	r0, lr
   1182c:	ldr	r1, [sp, #16]
   11830:	bl	10cc0 <printf@plt>
   11834:	ldr	r1, [pc, #76]	; 11888 <main@@Base+0x9a0>
   11838:	ldr	r1, [pc, r1]
   1183c:	movw	lr, #1
   11840:	str	lr, [r1]
   11844:	str	r0, [sp, #12]
   11848:	b	1185c <main@@Base+0x974>
   1184c:	ldr	r0, [pc, #48]	; 11884 <main@@Base+0x99c>
   11850:	add	r0, pc, r0
   11854:	bl	10cc0 <printf@plt>
   11858:	str	r0, [sp, #8]
   1185c:	mov	sp, fp
   11860:	pop	{fp, pc}
   11864:	andeq	r0, r0, r2, asr pc
   11868:	andeq	r1, r1, r8, lsl #21
   1186c:	andeq	r1, r1, r8, lsr sl
   11870:	andeq	r0, r0, r9, lsl lr
   11874:	strdeq	r0, [r0], -r2
   11878:			; <UNDEFINED> instruction: 0x00000dbf
   1187c:	andeq	r0, r0, ip, asr #9
   11880:	andeq	r1, r1, ip, lsl r9
   11884:	andeq	r0, r0, fp, lsr #24
   11888:	andeq	r1, r1, r4, asr #16
   1188c:	andeq	r0, r0, sp, ror ip
   11890:	andeq	r1, r1, r0, lsr #17
   11894:	andeq	r0, r0, pc, ror ip
   11898:	andeq	r1, r1, r8, lsr #18
   1189c:	andeq	r0, r0, r7, lsl #26
   118a0:	andeq	r1, r1, ip, asr #20
   118a4:	andeq	r0, r0, sp, lsr #28
   118a8:	andeq	r1, r1, r0, lsr #21
   118ac:	andeq	r0, r0, pc, lsl #29
   118b0:	push	{fp, lr}
   118b4:	mov	fp, sp
   118b8:	sub	sp, sp, #136	; 0x88
   118bc:	ldr	r0, [pc, #784]	; 11bd4 <main@@Base+0xcec>
   118c0:	add	r0, pc, r0
   118c4:	bl	10cc0 <printf@plt>
   118c8:	ldr	lr, [pc, #768]	; 11bd0 <main@@Base+0xce8>
   118cc:	add	lr, pc, lr
   118d0:	str	r0, [fp, #-4]
   118d4:	mov	r0, lr
   118d8:	bl	10cc0 <printf@plt>
   118dc:	ldr	lr, [pc, #744]	; 11bcc <main@@Base+0xce4>
   118e0:	add	lr, pc, lr
   118e4:	str	r0, [fp, #-8]
   118e8:	mov	r0, lr
   118ec:	bl	10cc0 <printf@plt>
   118f0:	ldr	lr, [pc, #720]	; 11bc8 <main@@Base+0xce0>
   118f4:	add	lr, pc, lr
   118f8:	str	r0, [fp, #-12]
   118fc:	mov	r0, lr
   11900:	bl	10cc0 <printf@plt>
   11904:	ldr	lr, [pc, #696]	; 11bc4 <main@@Base+0xcdc>
   11908:	add	lr, pc, lr
   1190c:	str	r0, [fp, #-16]
   11910:	mov	r0, lr
   11914:	bl	10cc0 <printf@plt>
   11918:	ldr	lr, [pc, #672]	; 11bc0 <main@@Base+0xcd8>
   1191c:	add	lr, pc, lr
   11920:	str	r0, [fp, #-20]	; 0xffffffec
   11924:	mov	r0, lr
   11928:	bl	10cc0 <printf@plt>
   1192c:	ldr	lr, [pc, #648]	; 11bbc <main@@Base+0xcd4>
   11930:	add	lr, pc, lr
   11934:	str	r0, [fp, #-24]	; 0xffffffe8
   11938:	mov	r0, lr
   1193c:	bl	10cc0 <printf@plt>
   11940:	ldr	lr, [pc, #624]	; 11bb8 <main@@Base+0xcd0>
   11944:	add	lr, pc, lr
   11948:	str	r0, [fp, #-28]	; 0xffffffe4
   1194c:	mov	r0, lr
   11950:	bl	10cc0 <printf@plt>
   11954:	ldr	lr, [pc, #600]	; 11bb4 <main@@Base+0xccc>
   11958:	add	lr, pc, lr
   1195c:	str	r0, [fp, #-32]	; 0xffffffe0
   11960:	mov	r0, lr
   11964:	bl	10cc0 <printf@plt>
   11968:	ldr	lr, [pc, #576]	; 11bb0 <main@@Base+0xcc8>
   1196c:	add	lr, pc, lr
   11970:	str	r0, [fp, #-36]	; 0xffffffdc
   11974:	mov	r0, lr
   11978:	bl	10cc0 <printf@plt>
   1197c:	ldr	lr, [pc, #552]	; 11bac <main@@Base+0xcc4>
   11980:	add	lr, pc, lr
   11984:	str	r0, [fp, #-40]	; 0xffffffd8
   11988:	mov	r0, lr
   1198c:	bl	10cc0 <printf@plt>
   11990:	ldr	lr, [pc, #528]	; 11ba8 <main@@Base+0xcc0>
   11994:	add	lr, pc, lr
   11998:	str	r0, [fp, #-44]	; 0xffffffd4
   1199c:	mov	r0, lr
   119a0:	bl	10cc0 <printf@plt>
   119a4:	ldr	lr, [pc, #504]	; 11ba4 <main@@Base+0xcbc>
   119a8:	add	lr, pc, lr
   119ac:	str	r0, [fp, #-48]	; 0xffffffd0
   119b0:	mov	r0, lr
   119b4:	bl	10cc0 <printf@plt>
   119b8:	ldr	lr, [pc, #480]	; 11ba0 <main@@Base+0xcb8>
   119bc:	add	lr, pc, lr
   119c0:	str	r0, [fp, #-52]	; 0xffffffcc
   119c4:	mov	r0, lr
   119c8:	bl	10cc0 <printf@plt>
   119cc:	ldr	lr, [pc, #456]	; 11b9c <main@@Base+0xcb4>
   119d0:	add	lr, pc, lr
   119d4:	str	r0, [fp, #-56]	; 0xffffffc8
   119d8:	mov	r0, lr
   119dc:	bl	10cc0 <printf@plt>
   119e0:	ldr	lr, [pc, #432]	; 11b98 <main@@Base+0xcb0>
   119e4:	add	lr, pc, lr
   119e8:	str	r0, [fp, #-60]	; 0xffffffc4
   119ec:	mov	r0, lr
   119f0:	bl	10cc0 <printf@plt>
   119f4:	ldr	lr, [pc, #408]	; 11b94 <main@@Base+0xcac>
   119f8:	add	lr, pc, lr
   119fc:	str	r0, [fp, #-64]	; 0xffffffc0
   11a00:	mov	r0, lr
   11a04:	bl	10cc0 <printf@plt>
   11a08:	ldr	lr, [pc, #384]	; 11b90 <main@@Base+0xca8>
   11a0c:	add	lr, pc, lr
   11a10:	str	r0, [sp, #68]	; 0x44
   11a14:	mov	r0, lr
   11a18:	bl	10cc0 <printf@plt>
   11a1c:	ldr	lr, [pc, #360]	; 11b8c <main@@Base+0xca4>
   11a20:	add	lr, pc, lr
   11a24:	str	r0, [sp, #64]	; 0x40
   11a28:	mov	r0, lr
   11a2c:	bl	10cc0 <printf@plt>
   11a30:	ldr	lr, [pc, #336]	; 11b88 <main@@Base+0xca0>
   11a34:	add	lr, pc, lr
   11a38:	str	r0, [sp, #60]	; 0x3c
   11a3c:	mov	r0, lr
   11a40:	bl	10cc0 <printf@plt>
   11a44:	ldr	lr, [pc, #312]	; 11b84 <main@@Base+0xc9c>
   11a48:	add	lr, pc, lr
   11a4c:	str	r0, [sp, #56]	; 0x38
   11a50:	mov	r0, lr
   11a54:	bl	10cc0 <printf@plt>
   11a58:	ldr	lr, [pc, #288]	; 11b80 <main@@Base+0xc98>
   11a5c:	add	lr, pc, lr
   11a60:	str	r0, [sp, #52]	; 0x34
   11a64:	mov	r0, lr
   11a68:	bl	10cc0 <printf@plt>
   11a6c:	ldr	lr, [pc, #264]	; 11b7c <main@@Base+0xc94>
   11a70:	add	lr, pc, lr
   11a74:	str	r0, [sp, #48]	; 0x30
   11a78:	mov	r0, lr
   11a7c:	bl	10cc0 <printf@plt>
   11a80:	ldr	lr, [pc, #240]	; 11b78 <main@@Base+0xc90>
   11a84:	add	lr, pc, lr
   11a88:	str	r0, [sp, #44]	; 0x2c
   11a8c:	mov	r0, lr
   11a90:	bl	10cc0 <printf@plt>
   11a94:	ldr	lr, [pc, #216]	; 11b74 <main@@Base+0xc8c>
   11a98:	add	lr, pc, lr
   11a9c:	str	r0, [sp, #40]	; 0x28
   11aa0:	mov	r0, lr
   11aa4:	bl	10cc0 <printf@plt>
   11aa8:	ldr	lr, [pc, #192]	; 11b70 <main@@Base+0xc88>
   11aac:	add	lr, pc, lr
   11ab0:	str	r0, [sp, #36]	; 0x24
   11ab4:	mov	r0, lr
   11ab8:	bl	10cc0 <printf@plt>
   11abc:	ldr	lr, [pc, #168]	; 11b6c <main@@Base+0xc84>
   11ac0:	add	lr, pc, lr
   11ac4:	str	r0, [sp, #32]
   11ac8:	mov	r0, lr
   11acc:	bl	10cc0 <printf@plt>
   11ad0:	ldr	lr, [pc, #144]	; 11b68 <main@@Base+0xc80>
   11ad4:	add	lr, pc, lr
   11ad8:	str	r0, [sp, #28]
   11adc:	mov	r0, lr
   11ae0:	bl	10cc0 <printf@plt>
   11ae4:	ldr	lr, [pc, #120]	; 11b64 <main@@Base+0xc7c>
   11ae8:	add	lr, pc, lr
   11aec:	str	r0, [sp, #24]
   11af0:	mov	r0, lr
   11af4:	bl	10cc0 <printf@plt>
   11af8:	ldr	lr, [pc, #96]	; 11b60 <main@@Base+0xc78>
   11afc:	add	lr, pc, lr
   11b00:	str	r0, [sp, #20]
   11b04:	mov	r0, lr
   11b08:	bl	10cc0 <printf@plt>
   11b0c:	ldr	lr, [pc, #72]	; 11b5c <main@@Base+0xc74>
   11b10:	add	lr, pc, lr
   11b14:	str	r0, [sp, #16]
   11b18:	mov	r0, lr
   11b1c:	bl	10cc0 <printf@plt>
   11b20:	ldr	lr, [pc, #48]	; 11b58 <main@@Base+0xc70>
   11b24:	add	lr, pc, lr
   11b28:	str	r0, [sp, #12]
   11b2c:	mov	r0, lr
   11b30:	bl	10cc0 <printf@plt>
   11b34:	ldr	lr, [pc, #24]	; 11b54 <main@@Base+0xc6c>
   11b38:	add	lr, pc, lr
   11b3c:	str	r0, [sp, #8]
   11b40:	mov	r0, lr
   11b44:	bl	10cc0 <printf@plt>
   11b48:	str	r0, [sp, #4]
   11b4c:	mov	sp, fp
   11b50:	pop	{fp, pc}
   11b54:	andeq	r0, r0, r3, asr #18
   11b58:	muleq	r0, r7, r8
   11b5c:	andeq	r0, r0, fp, ror #16
   11b60:	andeq	r0, r0, r8, lsr r8
   11b64:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11b68:	andeq	r0, r0, r7, ror #15
   11b6c:			; <UNDEFINED> instruction: 0x000007b1
   11b70:	andeq	r0, r0, r6, ror r7
   11b74:	andeq	r0, r0, r3, ror #19
   11b78:	andeq	r0, r0, fp, ror #14
   11b7c:	andeq	r0, r0, r2, ror #14
   11b80:	andeq	r0, r0, pc, lsl sl
   11b84:	andeq	r0, r0, fp, ror #14
   11b88:	andeq	r0, r0, r5, ror #14
   11b8c:	andeq	r0, r0, fp, asr sl
   11b90:	andeq	r0, r0, r0, ror r7
   11b94:	andeq	r0, r0, r5, lsr r7
   11b98:	muleq	r0, r7, sl
   11b9c:	andeq	r0, r0, sp, lsl r7
   11ba0:	andeq	r0, r0, sl, lsl r7
   11ba4:	andeq	r0, r0, r8, ror #13
   11ba8:	andeq	r0, r0, r1, ror #13
   11bac:			; <UNDEFINED> instruction: 0x000006bd
   11bb0:	muleq	r0, r2, r6
   11bb4:	andeq	r0, r0, sp, lsl #13
   11bb8:	andeq	r0, r0, r4, asr r6
   11bbc:	andeq	r0, r0, r2, lsr #12
   11bc0:	andeq	r0, r0, r8, ror #11
   11bc4:	ldrdeq	r0, [r0], -lr
   11bc8:	andeq	r0, r0, r0, ror #11
   11bcc:	andeq	r0, r0, fp, lsr #11
   11bd0:	andeq	r0, r0, r8, lsl #11
   11bd4:	andeq	r0, r0, ip, lsl #11
   11bd8:	push	{fp, lr}
   11bdc:	mov	fp, sp
   11be0:	sub	sp, sp, #16
   11be4:	bl	10dc8 <coda_get_libcoda_version@plt>
   11be8:	ldr	lr, [pc, #76]	; 11c3c <main@@Base+0xd54>
   11bec:	add	lr, pc, lr
   11bf0:	str	r0, [fp, #-4]
   11bf4:	mov	r0, lr
   11bf8:	ldr	r1, [fp, #-4]
   11bfc:	bl	10cc0 <printf@plt>
   11c00:	ldr	r1, [pc, #48]	; 11c38 <main@@Base+0xd50>
   11c04:	add	r1, pc, r1
   11c08:	str	r0, [sp, #8]
   11c0c:	mov	r0, r1
   11c10:	bl	10cc0 <printf@plt>
   11c14:	ldr	r1, [pc, #24]	; 11c34 <main@@Base+0xd4c>
   11c18:	add	r1, pc, r1
   11c1c:	str	r0, [sp, #4]
   11c20:	mov	r0, r1
   11c24:	bl	10cc0 <printf@plt>
   11c28:	str	r0, [sp]
   11c2c:	mov	sp, fp
   11c30:	pop	{fp, pc}
   11c34:	andeq	r0, r0, r3, ror #16
   11c38:	andeq	r0, r0, lr, lsl #16
   11c3c:	andeq	r0, r0, r0, lsl r8
   11c40:	push	{fp, lr}
   11c44:	mov	fp, sp
   11c48:	sub	sp, sp, #32
   11c4c:	ldr	r3, [pc, #124]	; 11cd0 <main@@Base+0xde8>
   11c50:	add	r3, pc, r3
   11c54:	str	r0, [fp, #-4]
   11c58:	str	r1, [fp, #-8]
   11c5c:	str	r2, [fp, #-12]
   11c60:	ldr	r1, [fp, #-8]
   11c64:	mov	r0, r3
   11c68:	bl	10cc0 <printf@plt>
   11c6c:	ldr	r1, [fp, #-4]
   11c70:	movw	r2, #0
   11c74:	cmp	r1, r2
   11c78:	str	r0, [sp, #16]
   11c7c:	beq	11ca8 <main@@Base+0xdc0>
   11c80:	ldr	r0, [pc, #80]	; 11cd8 <main@@Base+0xdf0>
   11c84:	add	r0, pc, r0
   11c88:	bl	10cc0 <printf@plt>
   11c8c:	ldr	lr, [pc, #64]	; 11cd4 <main@@Base+0xdec>
   11c90:	ldr	r1, [pc, lr]
   11c94:	ldr	lr, [fp, #-4]
   11c98:	str	r0, [sp, #12]
   11c9c:	mov	r0, lr
   11ca0:	bl	10cfc <coda_cursor_print_path@plt>
   11ca4:	str	r0, [sp, #8]
   11ca8:	ldr	r0, [pc, #48]	; 11ce0 <main@@Base+0xdf8>
   11cac:	add	r0, pc, r0
   11cb0:	bl	10cc0 <printf@plt>
   11cb4:	ldr	lr, [pc, #32]	; 11cdc <main@@Base+0xdf4>
   11cb8:	ldr	lr, [pc, lr]
   11cbc:	movw	r1, #1
   11cc0:	str	r1, [lr]
   11cc4:	str	r0, [sp, #4]
   11cc8:	mov	sp, fp
   11ccc:	pop	{fp, pc}
   11cd0:	andeq	r0, r0, sl, asr r8
   11cd4:	andeq	r1, r1, r4, ror #7
   11cd8:	andeq	r0, r0, r2, lsr r8
   11cdc:	andeq	r1, r1, r4, asr #7
   11ce0:	andeq	r0, r0, pc, asr #15

00011ce4 <__libc_csu_init@@Base>:
   11ce4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ce8:	mov	r7, r0
   11cec:	ldr	r6, [pc, #72]	; 11d3c <__libc_csu_init@@Base+0x58>
   11cf0:	ldr	r5, [pc, #72]	; 11d40 <__libc_csu_init@@Base+0x5c>
   11cf4:	add	r6, pc, r6
   11cf8:	add	r5, pc, r5
   11cfc:	sub	r6, r6, r5
   11d00:	mov	r8, r1
   11d04:	mov	r9, r2
   11d08:	bl	10c88 <coda_set_option_perform_boundary_checks@plt-0x20>
   11d0c:	asrs	r6, r6, #2
   11d10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d14:	mov	r4, #0
   11d18:	add	r4, r4, #1
   11d1c:	ldr	r3, [r5], #4
   11d20:	mov	r2, r9
   11d24:	mov	r1, r8
   11d28:	mov	r0, r7
   11d2c:	blx	r3
   11d30:	cmp	r6, r4
   11d34:	bne	11d18 <__libc_csu_init@@Base+0x34>
   11d38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d3c:	strdeq	r1, [r1], -r8
   11d40:	strdeq	r1, [r1], -r0

00011d44 <__libc_csu_fini@@Base>:
   11d44:	bx	lr

Disassembly of section .fini:

00011d48 <.fini>:
   11d48:	push	{r3, lr}
   11d4c:	pop	{r3, pc}
