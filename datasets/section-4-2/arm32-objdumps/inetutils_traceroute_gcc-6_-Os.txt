
../repos/inetutils/src/traceroute:     file format elf32-littlearm


Disassembly of section .init:

00010fe4 <.init>:
   10fe4:	push	{r3, lr}
   10fe8:	bl	11558 <putc_unlocked@plt+0x260>
   10fec:	pop	{r3, pc}

Disassembly of section .plt:

00010ff0 <calloc@plt-0x14>:
   10ff0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ff4:	ldr	lr, [pc, #4]	; 11000 <calloc@plt-0x4>
   10ff8:	add	lr, pc, lr
   10ffc:	ldr	pc, [lr, #8]!
   11000:	andeq	r9, r1, r0

00011004 <calloc@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #102400	; 0x19000
   1100c:	ldr	pc, [ip, #0]!

00011010 <fputs_unlocked@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #24, 20	; 0x18000
   11018:	ldr	pc, [ip, #4088]!	; 0xff8

0001101c <raise@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #24, 20	; 0x18000
   11024:	ldr	pc, [ip, #4080]!	; 0xff0

00011028 <strcmp@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #24, 20	; 0x18000
   11030:	ldr	pc, [ip, #4072]!	; 0xfe8

00011034 <strtol@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #24, 20	; 0x18000
   1103c:	ldr	pc, [ip, #4064]!	; 0xfe0

00011040 <setsockopt@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #24, 20	; 0x18000
   11048:	ldr	pc, [ip, #4056]!	; 0xfd8

0001104c <printf@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #24, 20	; 0x18000
   11054:	ldr	pc, [ip, #4048]!	; 0xfd0

00011058 <getprotobyname@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #24, 20	; 0x18000
   11060:	ldr	pc, [ip, #4040]!	; 0xfc8

00011064 <fflush@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #24, 20	; 0x18000
   1106c:	ldr	pc, [ip, #4032]!	; 0xfc0

00011070 <memmove@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #24, 20	; 0x18000
   11078:	ldr	pc, [ip, #4024]!	; 0xfb8

0001107c <strchrnul@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #24, 20	; 0x18000
   11084:	ldr	pc, [ip, #4016]!	; 0xfb0

00011088 <free@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #24, 20	; 0x18000
   11090:	ldr	pc, [ip, #4008]!	; 0xfa8

00011094 <gai_strerror@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #24, 20	; 0x18000
   1109c:	ldr	pc, [ip, #4000]!	; 0xfa0

000110a0 <strndup@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #24, 20	; 0x18000
   110a8:	ldr	pc, [ip, #3992]!	; 0xf98

000110ac <memcpy@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #24, 20	; 0x18000
   110b4:	ldr	pc, [ip, #3984]!	; 0xf90

000110b8 <fwrite_unlocked@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #24, 20	; 0x18000
   110c0:	ldr	pc, [ip, #3976]!	; 0xf88

000110c4 <inet_ntoa@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #24, 20	; 0x18000
   110cc:	ldr	pc, [ip, #3968]!	; 0xf80

000110d0 <select@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #24, 20	; 0x18000
   110d8:	ldr	pc, [ip, #3960]!	; 0xf78

000110dc <sleep@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #24, 20	; 0x18000
   110e4:	ldr	pc, [ip, #3952]!	; 0xf70

000110e8 <gethostbyaddr@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #24, 20	; 0x18000
   110f0:	ldr	pc, [ip, #3944]!	; 0xf68

000110f4 <recvfrom@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #24, 20	; 0x18000
   110fc:	ldr	pc, [ip, #3936]!	; 0xf60

00011100 <realloc@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #24, 20	; 0x18000
   11108:	ldr	pc, [ip, #3928]!	; 0xf58

0001110c <strcasecmp@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #24, 20	; 0x18000
   11114:	ldr	pc, [ip, #3920]!	; 0xf50

00011118 <funlockfile@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #24, 20	; 0x18000
   11120:	ldr	pc, [ip, #3912]!	; 0xf48

00011124 <strcat@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #24, 20	; 0x18000
   1112c:	ldr	pc, [ip, #3904]!	; 0xf40

00011130 <gettimeofday@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #24, 20	; 0x18000
   11138:	ldr	pc, [ip, #3896]!	; 0xf38

0001113c <error@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #24, 20	; 0x18000
   11144:	ldr	pc, [ip, #3888]!	; 0xf30

00011148 <getenv@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #24, 20	; 0x18000
   11150:	ldr	pc, [ip, #3880]!	; 0xf28

00011154 <malloc@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #24, 20	; 0x18000
   1115c:	ldr	pc, [ip, #3872]!	; 0xf20

00011160 <__libc_start_main@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #24, 20	; 0x18000
   11168:	ldr	pc, [ip, #3864]!	; 0xf18

0001116c <strerror@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #24, 20	; 0x18000
   11174:	ldr	pc, [ip, #3856]!	; 0xf10

00011178 <__ctype_tolower_loc@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #24, 20	; 0x18000
   11180:	ldr	pc, [ip, #3848]!	; 0xf08

00011184 <__gmon_start__@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #24, 20	; 0x18000
   1118c:	ldr	pc, [ip, #3840]!	; 0xf00

00011190 <mempcpy@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #24, 20	; 0x18000
   11198:	ldr	pc, [ip, #3832]!	; 0xef8

0001119c <__ctype_b_loc@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #24, 20	; 0x18000
   111a4:	ldr	pc, [ip, #3824]!	; 0xef0

000111a8 <getpid@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #24, 20	; 0x18000
   111b0:	ldr	pc, [ip, #3816]!	; 0xee8

000111b4 <exit@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #24, 20	; 0x18000
   111bc:	ldr	pc, [ip, #3808]!	; 0xee0

000111c0 <strlen@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #24, 20	; 0x18000
   111c8:	ldr	pc, [ip, #3800]!	; 0xed8

000111cc <strchr@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #24, 20	; 0x18000
   111d4:	ldr	pc, [ip, #3792]!	; 0xed0

000111d8 <fprintf@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #24, 20	; 0x18000
   111e0:	ldr	pc, [ip, #3784]!	; 0xec8

000111e4 <__errno_location@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #24, 20	; 0x18000
   111ec:	ldr	pc, [ip, #3776]!	; 0xec0

000111f0 <strerror_r@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #24, 20	; 0x18000
   111f8:	ldr	pc, [ip, #3768]!	; 0xeb8

000111fc <memset@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #24, 20	; 0x18000
   11204:	ldr	pc, [ip, #3760]!	; 0xeb0

00011208 <putchar@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #24, 20	; 0x18000
   11210:	ldr	pc, [ip, #3752]!	; 0xea8

00011214 <memchr@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #24, 20	; 0x18000
   1121c:	ldr	pc, [ip, #3744]!	; 0xea0

00011220 <sendto@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #24, 20	; 0x18000
   11228:	ldr	pc, [ip, #3736]!	; 0xe98

0001122c <setlocale@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #24, 20	; 0x18000
   11234:	ldr	pc, [ip, #3728]!	; 0xe90

00011238 <getnameinfo@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #24, 20	; 0x18000
   11240:	ldr	pc, [ip, #3720]!	; 0xe88

00011244 <strrchr@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #24, 20	; 0x18000
   1124c:	ldr	pc, [ip, #3712]!	; 0xe80

00011250 <vfprintf@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #24, 20	; 0x18000
   11258:	ldr	pc, [ip, #3704]!	; 0xe78

0001125c <fputc@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #24, 20	; 0x18000
   11264:	ldr	pc, [ip, #3696]!	; 0xe70

00011268 <flockfile@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #24, 20	; 0x18000
   11270:	ldr	pc, [ip, #3688]!	; 0xe68

00011274 <vsnprintf@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #24, 20	; 0x18000
   1127c:	ldr	pc, [ip, #3680]!	; 0xe60

00011280 <atoi@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #24, 20	; 0x18000
   11288:	ldr	pc, [ip, #3672]!	; 0xe58

0001128c <qsort@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #24, 20	; 0x18000
   11294:	ldr	pc, [ip, #3664]!	; 0xe50

00011298 <strpbrk@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #24, 20	; 0x18000
   112a0:	ldr	pc, [ip, #3656]!	; 0xe48

000112a4 <freeaddrinfo@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #24, 20	; 0x18000
   112ac:	ldr	pc, [ip, #3648]!	; 0xe40

000112b0 <getaddrinfo@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #24, 20	; 0x18000
   112b8:	ldr	pc, [ip, #3640]!	; 0xe38

000112bc <socket@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #24, 20	; 0x18000
   112c4:	ldr	pc, [ip, #3632]!	; 0xe30

000112c8 <fputs@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #24, 20	; 0x18000
   112d0:	ldr	pc, [ip, #3624]!	; 0xe28

000112d4 <strncmp@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #24, 20	; 0x18000
   112dc:	ldr	pc, [ip, #3616]!	; 0xe20

000112e0 <abort@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #24, 20	; 0x18000
   112e8:	ldr	pc, [ip, #3608]!	; 0xe18

000112ec <__assert_fail@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #24, 20	; 0x18000
   112f4:	ldr	pc, [ip, #3600]!	; 0xe10

000112f8 <putc_unlocked@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #24, 20	; 0x18000
   11300:	ldr	pc, [ip, #3592]!	; 0xe08

Disassembly of section .text:

00011308 <argp_failure@@Base-0x2d94>:
   11308:	push	{r4, r5, r6, r7, r8, r9, lr}
   1130c:	mov	r5, r0
   11310:	sub	sp, sp, #116	; 0x74
   11314:	ldr	r0, [r1]
   11318:	mov	r4, r1
   1131c:	bl	16480 <argp_parse@@Base+0xb90>
   11320:	ldr	r1, [pc, #444]	; 114e4 <putc_unlocked@plt+0x1ec>
   11324:	mov	r0, #6
   11328:	bl	1122c <setlocale@plt>
   1132c:	bl	111a8 <getpid@plt>
   11330:	ldr	r3, [pc, #432]	; 114e8 <putc_unlocked@plt+0x1f0>
   11334:	ldr	r2, [pc, #432]	; 114ec <putc_unlocked@plt+0x1f4>
   11338:	ldr	r1, [pc, #432]	; 114f0 <putc_unlocked@plt+0x1f8>
   1133c:	ldr	r6, [pc, #432]	; 114f4 <putc_unlocked@plt+0x1fc>
   11340:	uxth	r0, r0
   11344:	str	r0, [r3]
   11348:	ldr	r3, [pc, #424]	; 114f8 <putc_unlocked@plt+0x200>
   1134c:	ldr	r0, [pc, #424]	; 114fc <putc_unlocked@plt+0x204>
   11350:	str	r2, [r3]
   11354:	bl	162d8 <argp_parse@@Base+0x9e8>
   11358:	mov	r3, #0
   1135c:	str	r3, [sp, #4]
   11360:	str	r3, [sp]
   11364:	mov	r2, r4
   11368:	mov	r1, r5
   1136c:	ldr	r0, [pc, #396]	; 11500 <putc_unlocked@plt+0x208>
   11370:	bl	158f0 <argp_parse@@Base>
   11374:	ldr	r3, [r6, #16]
   11378:	cmp	r3, #0
   1137c:	beq	1138c <putc_unlocked@plt+0x94>
   11380:	ldrb	r3, [r3]
   11384:	cmp	r3, #0
   11388:	bne	1139c <putc_unlocked@plt+0xa4>
   1138c:	ldr	r2, [pc, #368]	; 11504 <putc_unlocked@plt+0x20c>
   11390:	mov	r1, #0
   11394:	mov	r0, #1
   11398:	bl	1113c <error@plt>
   1139c:	mov	r2, #32
   113a0:	mov	r1, #0
   113a4:	add	r0, sp, #20
   113a8:	bl	111fc <memset@plt>
   113ac:	mov	r3, #2
   113b0:	ldr	r9, [r6, #16]
   113b4:	str	r3, [sp, #24]
   113b8:	mov	r3, #194	; 0xc2
   113bc:	str	r3, [sp, #20]
   113c0:	add	r2, sp, #20
   113c4:	add	r3, sp, #16
   113c8:	mov	r1, #0
   113cc:	mov	r0, r9
   113d0:	bl	112b0 <getaddrinfo@plt>
   113d4:	cmp	r0, #0
   113d8:	beq	113ec <putc_unlocked@plt+0xf4>
   113dc:	ldr	r2, [pc, #288]	; 11504 <putc_unlocked@plt+0x20c>
   113e0:	mov	r1, #0
   113e4:	mov	r0, #1
   113e8:	bl	1113c <error@plt>
   113ec:	ldr	r7, [sp, #16]
   113f0:	ldr	r5, [pc, #272]	; 11508 <putc_unlocked@plt+0x210>
   113f4:	ldr	r8, [pc, #272]	; 1150c <putc_unlocked@plt+0x214>
   113f8:	ldr	r2, [r7, #16]
   113fc:	ldr	r1, [r7, #20]
   11400:	mov	r0, r5
   11404:	bl	110ac <memcpy@plt>
   11408:	ldr	r3, [r8, #8]
   1140c:	mov	r4, #1
   11410:	rev16	r3, r3
   11414:	strh	r3, [r5, #2]
   11418:	mov	r3, #0
   1141c:	str	r3, [sp]
   11420:	stmib	sp, {r3, r4}
   11424:	ldr	r2, [pc, #228]	; 11510 <putc_unlocked@plt+0x218>
   11428:	mov	r3, #46	; 0x2e
   1142c:	ldr	r1, [r7, #16]
   11430:	ldr	r0, [r7, #20]
   11434:	bl	11238 <getnameinfo@plt>
   11438:	ldr	r3, [sp, #16]
   1143c:	ldr	r2, [pc, #204]	; 11510 <putc_unlocked@plt+0x218>
   11440:	ldr	r0, [pc, #204]	; 11514 <putc_unlocked@plt+0x21c>
   11444:	ldr	r1, [r3, #24]
   11448:	ldr	r3, [r8, #4]
   1144c:	cmp	r1, #0
   11450:	moveq	r1, r9
   11454:	bl	1104c <printf@plt>
   11458:	mov	r0, r9
   1145c:	bl	1638c <argp_parse@@Base+0xa9c>
   11460:	ldr	r0, [sp, #16]
   11464:	bl	112a4 <freeaddrinfo@plt>
   11468:	mov	r0, r5
   1146c:	bl	12498 <putc_unlocked@plt+0x11a0>
   11470:	ldr	r3, [r6, #4]
   11474:	add	r0, sp, #52	; 0x34
   11478:	str	r3, [sp, #4]
   1147c:	ldr	r3, [r5, #12]
   11480:	str	r3, [sp]
   11484:	ldm	r5, {r1, r2, r3}
   11488:	bl	119f4 <putc_unlocked@plt+0x6fc>
   1148c:	ldr	r3, [pc, #132]	; 11518 <putc_unlocked@plt+0x220>
   11490:	mvn	r2, #0
   11494:	str	r2, [r3]
   11498:	ldr	r3, [r6, #24]
   1149c:	cmp	r3, #0
   114a0:	movne	r0, #0
   114a4:	bne	114b8 <putc_unlocked@plt+0x1c0>
   114a8:	ldr	r2, [r8, #4]
   114ac:	cmp	r4, r2
   114b0:	ble	114bc <putc_unlocked@plt+0x1c4>
   114b4:	mov	r0, #1
   114b8:	bl	111b4 <exit@plt>
   114bc:	mov	r1, r4
   114c0:	ldr	r3, [r8, #12]
   114c4:	add	r0, sp, #52	; 0x34
   114c8:	bl	120d8 <putc_unlocked@plt+0xde0>
   114cc:	add	r0, sp, #52	; 0x34
   114d0:	bl	123b4 <putc_unlocked@plt+0x10bc>
   114d4:	add	r0, sp, #52	; 0x34
   114d8:	bl	12444 <putc_unlocked@plt+0x114c>
   114dc:	add	r4, r4, #1
   114e0:	b	11498 <putc_unlocked@plt+0x1a0>
   114e4:	andeq	r9, r1, r8, asr #6
   114e8:	andeq	sl, r2, r8, lsr r3
   114ec:	andeq	r8, r1, r2, lsl #14
   114f0:	andeq	sl, r2, r0, lsr r1
   114f4:	andeq	sl, r2, ip, lsr #5
   114f8:	andeq	sl, r2, r0, ror r3
   114fc:	andeq	r8, r1, sl, lsl r7
   11500:	andeq	sl, r2, r8, lsr r1
   11504:	andeq	r8, r1, r5, lsr #14
   11508:	andeq	sl, r2, r0, lsl #6
   1150c:	andeq	sl, r2, r8, lsl r1
   11510:	andeq	sl, r2, r0, asr #6
   11514:	andeq	r8, r1, r2, lsr r7
   11518:	andeq	sl, r2, ip, lsr r3
   1151c:	mov	fp, #0
   11520:	mov	lr, #0
   11524:	pop	{r1}		; (ldr r1, [sp], #4)
   11528:	mov	r2, sp
   1152c:	push	{r2}		; (str r2, [sp, #-4]!)
   11530:	push	{r0}		; (str r0, [sp, #-4]!)
   11534:	ldr	ip, [pc, #16]	; 1154c <putc_unlocked@plt+0x254>
   11538:	push	{ip}		; (str ip, [sp, #-4]!)
   1153c:	ldr	r0, [pc, #12]	; 11550 <putc_unlocked@plt+0x258>
   11540:	ldr	r3, [pc, #12]	; 11554 <putc_unlocked@plt+0x25c>
   11544:	bl	11160 <__libc_start_main@plt>
   11548:	bl	112e0 <abort@plt>
   1154c:	andeq	r8, r1, r8, ror r4
   11550:	andeq	r1, r1, r8, lsl #6
   11554:	andeq	r8, r1, r8, lsl r4
   11558:	ldr	r3, [pc, #20]	; 11574 <putc_unlocked@plt+0x27c>
   1155c:	ldr	r2, [pc, #20]	; 11578 <putc_unlocked@plt+0x280>
   11560:	add	r3, pc, r3
   11564:	ldr	r2, [r3, r2]
   11568:	cmp	r2, #0
   1156c:	bxeq	lr
   11570:	b	11184 <__gmon_start__@plt>
   11574:	muleq	r1, r8, sl
   11578:	andeq	r0, r0, ip, lsl #2
   1157c:	ldr	r3, [pc, #28]	; 115a0 <putc_unlocked@plt+0x2a8>
   11580:	ldr	r0, [pc, #28]	; 115a4 <putc_unlocked@plt+0x2ac>
   11584:	sub	r3, r3, r0
   11588:	cmp	r3, #6
   1158c:	bxls	lr
   11590:	ldr	r3, [pc, #16]	; 115a8 <putc_unlocked@plt+0x2b0>
   11594:	cmp	r3, #0
   11598:	bxeq	lr
   1159c:	bx	r3
   115a0:	muleq	r2, fp, r2
   115a4:	muleq	r2, r8, r2
   115a8:	andeq	r0, r0, r0
   115ac:	ldr	r1, [pc, #36]	; 115d8 <putc_unlocked@plt+0x2e0>
   115b0:	ldr	r0, [pc, #36]	; 115dc <putc_unlocked@plt+0x2e4>
   115b4:	sub	r1, r1, r0
   115b8:	asr	r1, r1, #2
   115bc:	add	r1, r1, r1, lsr #31
   115c0:	asrs	r1, r1, #1
   115c4:	bxeq	lr
   115c8:	ldr	r3, [pc, #16]	; 115e0 <putc_unlocked@plt+0x2e8>
   115cc:	cmp	r3, #0
   115d0:	bxeq	lr
   115d4:	bx	r3
   115d8:	muleq	r2, r8, r2
   115dc:	muleq	r2, r8, r2
   115e0:	andeq	r0, r0, r0
   115e4:	push	{r4, lr}
   115e8:	ldr	r4, [pc, #24]	; 11608 <putc_unlocked@plt+0x310>
   115ec:	ldrb	r3, [r4]
   115f0:	cmp	r3, #0
   115f4:	popne	{r4, pc}
   115f8:	bl	1157c <putc_unlocked@plt+0x284>
   115fc:	mov	r3, #1
   11600:	strb	r3, [r4]
   11604:	pop	{r4, pc}
   11608:	andeq	sl, r2, r8, lsr #5
   1160c:	ldr	r0, [pc, #40]	; 1163c <putc_unlocked@plt+0x344>
   11610:	ldr	r3, [r0]
   11614:	cmp	r3, #0
   11618:	bne	11620 <putc_unlocked@plt+0x328>
   1161c:	b	115ac <putc_unlocked@plt+0x2b4>
   11620:	ldr	r3, [pc, #24]	; 11640 <putc_unlocked@plt+0x348>
   11624:	cmp	r3, #0
   11628:	beq	1161c <putc_unlocked@plt+0x324>
   1162c:	push	{r4, lr}
   11630:	blx	r3
   11634:	pop	{r4, lr}
   11638:	b	115ac <putc_unlocked@plt+0x2b4>
   1163c:	andeq	r9, r2, ip, lsl #30
	...
   11648:	cmp	r0, #109	; 0x6d
   1164c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11650:	mov	r5, r1
   11654:	beq	11834 <putc_unlocked@plt+0x53c>
   11658:	mov	r6, r2
   1165c:	bgt	116f4 <putc_unlocked@plt+0x3fc>
   11660:	cmp	r0, #77	; 0x4d
   11664:	beq	118f4 <putc_unlocked@plt+0x5fc>
   11668:	bgt	11684 <putc_unlocked@plt+0x38c>
   1166c:	cmp	r0, #0
   11670:	beq	11958 <putc_unlocked@plt+0x660>
   11674:	cmp	r0, #73	; 0x49
   11678:	beq	11824 <putc_unlocked@plt+0x52c>
   1167c:	mov	r0, #7
   11680:	b	11914 <putc_unlocked@plt+0x61c>
   11684:	cmp	r0, #102	; 0x66
   11688:	beq	117c4 <putc_unlocked@plt+0x4cc>
   1168c:	cmp	r0, #103	; 0x67
   11690:	bne	1167c <putc_unlocked@plt+0x384>
   11694:	ldr	r6, [pc, #752]	; 1198c <putc_unlocked@plt+0x694>
   11698:	ldr	r4, [r6]
   1169c:	cmp	r4, #0
   116a0:	beq	11814 <putc_unlocked@plt+0x51c>
   116a4:	mov	r0, r4
   116a8:	bl	111c0 <strlen@plt>
   116ac:	mov	r7, r0
   116b0:	mov	r0, r5
   116b4:	bl	111c0 <strlen@plt>
   116b8:	add	r1, r7, r0
   116bc:	add	r1, r1, #3
   116c0:	mov	r0, r4
   116c4:	bl	16938 <argp_parse@@Base+0x1048>
   116c8:	mov	r3, #44	; 0x2c
   116cc:	mov	r4, #0
   116d0:	mov	r1, r5
   116d4:	str	r0, [r6]
   116d8:	strb	r3, [r0, r7]
   116dc:	ldr	r0, [r6]
   116e0:	add	r0, r0, r7
   116e4:	strb	r4, [r0, #1]
   116e8:	ldr	r0, [r6]
   116ec:	bl	11124 <strcat@plt>
   116f0:	b	117f4 <putc_unlocked@plt+0x4fc>
   116f4:	cmp	r0, #116	; 0x74
   116f8:	beq	118bc <putc_unlocked@plt+0x5c4>
   116fc:	bgt	11770 <putc_unlocked@plt+0x478>
   11700:	cmp	r0, #112	; 0x70
   11704:	beq	11870 <putc_unlocked@plt+0x578>
   11708:	cmp	r0, #113	; 0x71
   1170c:	bne	1167c <putc_unlocked@plt+0x384>
   11710:	mov	r2, #10
   11714:	add	r1, sp, #4
   11718:	mov	r0, r5
   1171c:	bl	11034 <strtol@plt>
   11720:	ldr	r3, [sp, #4]
   11724:	ldr	r2, [pc, #612]	; 11990 <putc_unlocked@plt+0x698>
   11728:	ldrb	r1, [r3]
   1172c:	mov	r4, r2
   11730:	cmp	r1, #0
   11734:	str	r0, [r2, #12]
   11738:	beq	1174c <putc_unlocked@plt+0x454>
   1173c:	mov	r2, r5
   11740:	ldr	r1, [pc, #588]	; 11994 <putc_unlocked@plt+0x69c>
   11744:	mov	r0, r6
   11748:	bl	152e0 <argp_error@@Base>
   1174c:	ldr	r3, [r4, #12]
   11750:	sub	r3, r3, #1
   11754:	cmp	r3, #9
   11758:	bls	117f4 <putc_unlocked@plt+0x4fc>
   1175c:	ldr	r2, [pc, #564]	; 11998 <putc_unlocked@plt+0x6a0>
   11760:	mov	r1, #0
   11764:	mov	r0, #1
   11768:	bl	1113c <error@plt>
   1176c:	b	117f4 <putc_unlocked@plt+0x4fc>
   11770:	cmp	r0, #256	; 0x100
   11774:	beq	11948 <putc_unlocked@plt+0x650>
   11778:	ldr	r3, [pc, #540]	; 1199c <putc_unlocked@plt+0x6a4>
   1177c:	cmp	r0, r3
   11780:	beq	11974 <putc_unlocked@plt+0x67c>
   11784:	cmp	r0, #119	; 0x77
   11788:	bne	1167c <putc_unlocked@plt+0x384>
   1178c:	mov	r2, #0
   11790:	add	r1, sp, #4
   11794:	mov	r0, r5
   11798:	bl	11034 <strtol@plt>
   1179c:	ldr	r3, [pc, #492]	; 11990 <putc_unlocked@plt+0x698>
   117a0:	str	r0, [r3, #20]
   117a4:	ldr	r3, [sp, #4]
   117a8:	ldrb	r3, [r3]
   117ac:	cmp	r0, #60	; 0x3c
   117b0:	cmpls	r3, #0
   117b4:	beq	117f4 <putc_unlocked@plt+0x4fc>
   117b8:	mov	r3, r5
   117bc:	ldr	r2, [pc, #476]	; 119a0 <putc_unlocked@plt+0x6a8>
   117c0:	b	11804 <putc_unlocked@plt+0x50c>
   117c4:	mov	r2, #0
   117c8:	add	r1, sp, #4
   117cc:	mov	r0, r5
   117d0:	bl	11034 <strtol@plt>
   117d4:	ldr	r3, [pc, #436]	; 11990 <putc_unlocked@plt+0x698>
   117d8:	str	r0, [r3]
   117dc:	ldr	r3, [sp, #4]
   117e0:	sub	r0, r0, #1
   117e4:	ldrb	r3, [r3]
   117e8:	cmp	r0, #254	; 0xfe
   117ec:	cmpls	r3, #0
   117f0:	bne	117fc <putc_unlocked@plt+0x504>
   117f4:	mov	r0, #0
   117f8:	b	11914 <putc_unlocked@plt+0x61c>
   117fc:	ldr	r2, [pc, #416]	; 119a4 <putc_unlocked@plt+0x6ac>
   11800:	mov	r3, r5
   11804:	mov	r1, #0
   11808:	mov	r0, #1
   1180c:	bl	1113c <error@plt>
   11810:	b	117f4 <putc_unlocked@plt+0x4fc>
   11814:	mov	r0, r1
   11818:	bl	16d84 <argp_parse@@Base+0x1494>
   1181c:	str	r0, [r6]
   11820:	b	117f4 <putc_unlocked@plt+0x4fc>
   11824:	ldr	r3, [pc, #352]	; 1198c <putc_unlocked@plt+0x694>
   11828:	mov	r2, #1
   1182c:	str	r2, [r3, #4]
   11830:	b	117f4 <putc_unlocked@plt+0x4fc>
   11834:	mov	r2, #0
   11838:	add	r1, sp, #4
   1183c:	mov	r0, r5
   11840:	bl	11034 <strtol@plt>
   11844:	ldr	r3, [pc, #324]	; 11990 <putc_unlocked@plt+0x698>
   11848:	str	r0, [r3, #4]
   1184c:	ldr	r3, [sp, #4]
   11850:	sub	r0, r0, #1
   11854:	ldrb	r3, [r3]
   11858:	cmp	r0, #254	; 0xfe
   1185c:	cmpls	r3, #0
   11860:	movne	r3, r5
   11864:	ldrne	r2, [pc, #316]	; 119a8 <putc_unlocked@plt+0x6b0>
   11868:	bne	11804 <putc_unlocked@plt+0x50c>
   1186c:	b	117f4 <putc_unlocked@plt+0x4fc>
   11870:	mov	r2, #0
   11874:	add	r1, sp, #4
   11878:	mov	r0, r5
   1187c:	bl	11034 <strtol@plt>
   11880:	ldr	r3, [pc, #264]	; 11990 <putc_unlocked@plt+0x698>
   11884:	str	r0, [r3, #8]
   11888:	ldr	r3, [sp, #4]
   1188c:	sub	r0, r0, #1
   11890:	cmp	r0, #65536	; 0x10000
   11894:	ldrb	r3, [r3]
   11898:	movcc	r0, #0
   1189c:	movcs	r0, #1
   118a0:	cmp	r3, #0
   118a4:	orrne	r0, r0, #1
   118a8:	cmp	r0, #0
   118ac:	movne	r3, r5
   118b0:	ldrne	r2, [pc, #244]	; 119ac <putc_unlocked@plt+0x6b4>
   118b4:	bne	11804 <putc_unlocked@plt+0x50c>
   118b8:	b	117f4 <putc_unlocked@plt+0x4fc>
   118bc:	mov	r2, #0
   118c0:	add	r1, sp, #4
   118c4:	mov	r0, r5
   118c8:	bl	11034 <strtol@plt>
   118cc:	ldr	r3, [pc, #188]	; 11990 <putc_unlocked@plt+0x698>
   118d0:	str	r0, [r3, #16]
   118d4:	ldr	r3, [sp, #4]
   118d8:	ldrb	r3, [r3]
   118dc:	cmp	r0, #255	; 0xff
   118e0:	cmpls	r3, #0
   118e4:	movne	r3, r5
   118e8:	ldrne	r2, [pc, #192]	; 119b0 <putc_unlocked@plt+0x6b8>
   118ec:	bne	11804 <putc_unlocked@plt+0x50c>
   118f0:	b	117f4 <putc_unlocked@plt+0x4fc>
   118f4:	ldr	r1, [pc, #184]	; 119b4 <putc_unlocked@plt+0x6bc>
   118f8:	mov	r0, r5
   118fc:	bl	11028 <strcmp@plt>
   11900:	cmp	r0, #0
   11904:	bne	1191c <putc_unlocked@plt+0x624>
   11908:	ldr	r3, [pc, #124]	; 1198c <putc_unlocked@plt+0x694>
   1190c:	mov	r2, #1
   11910:	str	r2, [r3, #4]
   11914:	add	sp, sp, #12
   11918:	pop	{r4, r5, r6, r7, pc}
   1191c:	ldr	r1, [pc, #148]	; 119b8 <putc_unlocked@plt+0x6c0>
   11920:	mov	r0, r5
   11924:	bl	11028 <strcmp@plt>
   11928:	cmp	r0, #0
   1192c:	ldreq	r3, [pc, #88]	; 1198c <putc_unlocked@plt+0x694>
   11930:	ldrne	r1, [pc, #132]	; 119bc <putc_unlocked@plt+0x6c4>
   11934:	streq	r0, [r3, #4]
   11938:	beq	11914 <putc_unlocked@plt+0x61c>
   1193c:	mov	r0, r6
   11940:	bl	152e0 <argp_error@@Base>
   11944:	b	117f4 <putc_unlocked@plt+0x4fc>
   11948:	ldr	r3, [pc, #60]	; 1198c <putc_unlocked@plt+0x694>
   1194c:	mov	r2, #1
   11950:	str	r2, [r3, #8]
   11954:	b	117f4 <putc_unlocked@plt+0x4fc>
   11958:	ldr	r6, [pc, #44]	; 1198c <putc_unlocked@plt+0x694>
   1195c:	mov	r3, #1
   11960:	mov	r0, r1
   11964:	strb	r3, [r6, #12]
   11968:	bl	16d84 <argp_parse@@Base+0x1494>
   1196c:	str	r0, [r6, #16]
   11970:	b	117f4 <putc_unlocked@plt+0x4fc>
   11974:	ldr	r3, [pc, #16]	; 1198c <putc_unlocked@plt+0x694>
   11978:	ldrb	r4, [r3, #12]
   1197c:	cmp	r4, #0
   11980:	bne	117f4 <putc_unlocked@plt+0x4fc>
   11984:	ldr	r1, [pc, #52]	; 119c0 <putc_unlocked@plt+0x6c8>
   11988:	b	1193c <putc_unlocked@plt+0x644>
   1198c:	andeq	sl, r2, ip, lsr #5
   11990:	andeq	sl, r2, r8, lsl r1
   11994:	andeq	r8, r1, r1, ror #10
   11998:	andeq	r8, r1, r0, lsl #11
   1199c:	tsteq	r0, r4
   119a0:	ldrdeq	r8, [r1], -sl
   119a4:	andeq	r8, r1, r7, lsl r5
   119a8:	andeq	r8, r1, r0, lsr r5
   119ac:	andeq	r8, r1, r8, asr #10
   119b0:	andeq	r8, r1, fp, lsr #11
   119b4:	andeq	r8, r1, r2, asr #11
   119b8:	andeq	r8, r1, r7, asr #11
   119bc:	andeq	r8, r1, fp, asr #11
   119c0:	strdeq	r8, [r1], -r7
   119c4:	push	{r4, lr}
   119c8:	mov	r2, #2
   119cc:	mov	r1, #4
   119d0:	mov	r4, r0
   119d4:	bl	110e8 <gethostbyaddr@plt>
   119d8:	cmp	r0, #0
   119dc:	bne	119ec <putc_unlocked@plt+0x6f4>
   119e0:	ldr	r0, [r4]
   119e4:	pop	{r4, lr}
   119e8:	b	110c4 <inet_ntoa@plt>
   119ec:	ldr	r0, [r0]
   119f0:	pop	{r4, pc}
   119f4:	sub	sp, sp, #16
   119f8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   119fc:	add	ip, sp, #36	; 0x24
   11a00:	subs	r4, r0, #0
   11a04:	stm	ip, {r1, r2, r3}
   11a08:	ldr	r5, [sp, #52]	; 0x34
   11a0c:	bne	11a24 <putc_unlocked@plt+0x72c>
   11a10:	ldr	r3, [pc, #580]	; 11c5c <putc_unlocked@plt+0x964>
   11a14:	ldr	r2, [pc, #580]	; 11c60 <putc_unlocked@plt+0x968>
   11a18:	ldr	r1, [pc, #580]	; 11c64 <putc_unlocked@plt+0x96c>
   11a1c:	ldr	r0, [pc, #580]	; 11c68 <putc_unlocked@plt+0x970>
   11a20:	bl	112ec <__assert_fail@plt>
   11a24:	ldm	ip, {r0, r1, r2, r3}
   11a28:	add	lr, r4, #16
   11a2c:	ldr	r6, [pc, #568]	; 11c6c <putc_unlocked@plt+0x974>
   11a30:	str	r5, [r4, #8]
   11a34:	stm	lr, {r0, r1, r2, r3}
   11a38:	add	r8, r4, #48	; 0x30
   11a3c:	ldr	r3, [r6]
   11a40:	str	r3, [r4, #48]	; 0x30
   11a44:	mov	r3, #0
   11a48:	cmp	r5, r3
   11a4c:	str	r3, [r4, #12]
   11a50:	bne	11abc <putc_unlocked@plt+0x7c4>
   11a54:	mov	r1, #2
   11a58:	mov	r2, r5
   11a5c:	mov	r0, r1
   11a60:	bl	112bc <socket@plt>
   11a64:	cmp	r0, #0
   11a68:	str	r0, [r4, #4]
   11a6c:	bge	11a84 <putc_unlocked@plt+0x78c>
   11a70:	bl	111e4 <__errno_location@plt>
   11a74:	ldr	r2, [pc, #500]	; 11c70 <putc_unlocked@plt+0x978>
   11a78:	ldr	r1, [r0]
   11a7c:	mov	r0, #1
   11a80:	bl	1113c <error@plt>
   11a84:	mov	r3, #4
   11a88:	str	r3, [sp]
   11a8c:	mov	r2, #2
   11a90:	mov	r3, r8
   11a94:	mov	r1, #0
   11a98:	ldr	r0, [r4, #4]
   11a9c:	bl	11040 <setsockopt@plt>
   11aa0:	cmp	r0, #0
   11aa4:	bge	11abc <putc_unlocked@plt+0x7c4>
   11aa8:	bl	111e4 <__errno_location@plt>
   11aac:	ldr	r2, [pc, #448]	; 11c74 <putc_unlocked@plt+0x97c>
   11ab0:	ldr	r1, [r0]
   11ab4:	mov	r0, #1
   11ab8:	bl	1113c <error@plt>
   11abc:	ldr	r3, [r4, #8]
   11ac0:	cmp	r3, #1
   11ac4:	bhi	11b9c <putc_unlocked@plt+0x8a4>
   11ac8:	ldr	r0, [pc, #424]	; 11c78 <putc_unlocked@plt+0x980>
   11acc:	bl	11058 <getprotobyname@plt>
   11ad0:	subs	r7, r0, #0
   11ad4:	beq	11c40 <putc_unlocked@plt+0x948>
   11ad8:	ldr	r2, [r7, #8]
   11adc:	mov	r1, #3
   11ae0:	mov	r0, #2
   11ae4:	bl	112bc <socket@plt>
   11ae8:	cmp	r0, #0
   11aec:	str	r0, [r4]
   11af0:	bge	11b64 <putc_unlocked@plt+0x86c>
   11af4:	bl	111e4 <__errno_location@plt>
   11af8:	ldr	r3, [r0]
   11afc:	mov	r5, r0
   11b00:	cmp	r3, #13
   11b04:	cmpne	r3, #1
   11b08:	bne	11b50 <putc_unlocked@plt+0x858>
   11b0c:	mov	r3, #0
   11b10:	mov	r1, #2
   11b14:	str	r3, [r0]
   11b18:	mov	r0, r1
   11b1c:	ldr	r2, [r7, #8]
   11b20:	bl	112bc <socket@plt>
   11b24:	ldr	r3, [r4, #12]
   11b28:	add	r3, r3, #1
   11b2c:	str	r3, [r4, #12]
   11b30:	str	r0, [r4]
   11b34:	ldr	r3, [r5]
   11b38:	cmp	r3, #93	; 0x5d
   11b3c:	moveq	r3, #1
   11b40:	streq	r3, [r5]
   11b44:	ldr	r3, [r4]
   11b48:	cmp	r3, #0
   11b4c:	bge	11b64 <putc_unlocked@plt+0x86c>
   11b50:	bl	111e4 <__errno_location@plt>
   11b54:	ldr	r2, [pc, #276]	; 11c70 <putc_unlocked@plt+0x978>
   11b58:	ldr	r1, [r0]
   11b5c:	mov	r0, #1
   11b60:	bl	1113c <error@plt>
   11b64:	mov	r3, #4
   11b68:	str	r3, [sp]
   11b6c:	mov	r2, #2
   11b70:	mov	r3, r8
   11b74:	mov	r1, #0
   11b78:	ldr	r0, [r4]
   11b7c:	bl	11040 <setsockopt@plt>
   11b80:	cmp	r0, #0
   11b84:	bge	11b9c <putc_unlocked@plt+0x8a4>
   11b88:	bl	111e4 <__errno_location@plt>
   11b8c:	ldr	r2, [pc, #224]	; 11c74 <putc_unlocked@plt+0x97c>
   11b90:	ldr	r1, [r0]
   11b94:	mov	r0, #1
   11b98:	bl	1113c <error@plt>
   11b9c:	ldm	r4, {r3, r5}
   11ba0:	ldr	r2, [r4, #8]
   11ba4:	cmp	r2, #0
   11ba8:	movne	r5, r3
   11bac:	ldr	r3, [r6, #16]
   11bb0:	cmp	r3, #0
   11bb4:	blt	11bf0 <putc_unlocked@plt+0x8f8>
   11bb8:	mov	r3, #4
   11bbc:	str	r3, [sp]
   11bc0:	mov	r2, #1
   11bc4:	ldr	r3, [pc, #176]	; 11c7c <putc_unlocked@plt+0x984>
   11bc8:	mov	r1, #0
   11bcc:	mov	r0, r5
   11bd0:	bl	11040 <setsockopt@plt>
   11bd4:	cmp	r0, #0
   11bd8:	bge	11bf0 <putc_unlocked@plt+0x8f8>
   11bdc:	bl	111e4 <__errno_location@plt>
   11be0:	ldr	r2, [pc, #152]	; 11c80 <putc_unlocked@plt+0x988>
   11be4:	ldr	r1, [r0]
   11be8:	mov	r0, #0
   11bec:	bl	1113c <error@plt>
   11bf0:	ldr	r3, [pc, #140]	; 11c84 <putc_unlocked@plt+0x98c>
   11bf4:	ldr	r3, [r3, #20]
   11bf8:	cmp	r3, #0
   11bfc:	beq	11c4c <putc_unlocked@plt+0x954>
   11c00:	str	r3, [sp]
   11c04:	mov	r2, #4
   11c08:	ldr	r3, [pc, #120]	; 11c88 <putc_unlocked@plt+0x990>
   11c0c:	mov	r1, #0
   11c10:	mov	r0, r5
   11c14:	bl	11040 <setsockopt@plt>
   11c18:	cmp	r0, #0
   11c1c:	bge	11c4c <putc_unlocked@plt+0x954>
   11c20:	bl	111e4 <__errno_location@plt>
   11c24:	ldr	r2, [pc, #96]	; 11c8c <putc_unlocked@plt+0x994>
   11c28:	ldr	r1, [r0]
   11c2c:	mov	r0, #0
   11c30:	add	sp, sp, #8
   11c34:	pop	{r4, r5, r6, r7, r8, lr}
   11c38:	add	sp, sp, #16
   11c3c:	b	1113c <error@plt>
   11c40:	ldr	r2, [pc, #72]	; 11c90 <putc_unlocked@plt+0x998>
   11c44:	mov	r1, r7
   11c48:	b	11b94 <putc_unlocked@plt+0x89c>
   11c4c:	add	sp, sp, #8
   11c50:	pop	{r4, r5, r6, r7, r8, lr}
   11c54:	add	sp, sp, #16
   11c58:	bx	lr
   11c5c:	andeq	r8, r1, r8, lsl #9
   11c60:	ldrdeq	r0, [r0], -fp
   11c64:	andeq	r8, r1, ip, lsl #12
   11c68:	andeq	r8, r1, lr, lsl r6
   11c6c:	andeq	sl, r2, r8, lsl r1
   11c70:	andeq	r8, r1, r9, lsl r6
   11c74:	andeq	r8, r1, r0, lsr #12
   11c78:	andeq	r8, r1, r2, asr #11
   11c7c:	andeq	sl, r2, r8, lsr #2
   11c80:	andeq	r8, r1, pc, asr #12
   11c84:	andeq	sl, r2, ip, lsr #5
   11c88:	andeq	sl, r2, r0, lsl r3
   11c8c:	andeq	r8, r1, r2, ror #12
   11c90:	andeq	r8, r1, fp, lsr #12
   11c94:	cmp	r0, #0
   11c98:	bne	11cb4 <putc_unlocked@plt+0x9bc>
   11c9c:	push	{r4, lr}
   11ca0:	ldr	r3, [pc, #32]	; 11cc8 <putc_unlocked@plt+0x9d0>
   11ca4:	ldr	r2, [pc, #32]	; 11ccc <putc_unlocked@plt+0x9d4>
   11ca8:	ldr	r1, [pc, #32]	; 11cd0 <putc_unlocked@plt+0x9d8>
   11cac:	ldr	r0, [pc, #32]	; 11cd4 <putc_unlocked@plt+0x9dc>
   11cb0:	bl	112ec <__assert_fail@plt>
   11cb4:	cmp	r1, #1024	; 0x400
   11cb8:	strhcs	r1, [r0, #18]
   11cbc:	ldrcc	r3, [pc, #20]	; 11cd8 <putc_unlocked@plt+0x9e0>
   11cc0:	strhcc	r3, [r0, #18]
   11cc4:	bx	lr
   11cc8:	muleq	r1, r3, r4
   11ccc:	andeq	r0, r0, sl, lsr #4
   11cd0:	andeq	r8, r1, ip, lsl #12
   11cd4:	andeq	r8, r1, lr, lsl r6
   11cd8:			; <UNDEFINED> instruction: 0xffff829a
   11cdc:	push	{r4, r5, r6, lr}
   11ce0:	subs	r4, r0, #0
   11ce4:	sub	sp, sp, #160	; 0xa0
   11ce8:	bne	11d00 <putc_unlocked@plt+0xa08>
   11cec:	ldr	r3, [pc, #500]	; 11ee8 <putc_unlocked@plt+0xbf0>
   11cf0:	ldr	r2, [pc, #500]	; 11eec <putc_unlocked@plt+0xbf4>
   11cf4:	ldr	r1, [pc, #500]	; 11ef0 <putc_unlocked@plt+0xbf8>
   11cf8:	ldr	r0, [pc, #500]	; 11ef4 <putc_unlocked@plt+0xbfc>
   11cfc:	bl	112ec <__assert_fail@plt>
   11d00:	mov	r3, #16
   11d04:	str	r3, [sp, #20]
   11d08:	mov	r3, r4
   11d0c:	mov	r5, r2
   11d10:	ldr	r0, [r3], #32
   11d14:	add	r2, sp, #20
   11d18:	str	r2, [sp, #4]
   11d1c:	str	r3, [sp]
   11d20:	mov	r6, r1
   11d24:	mov	r3, #0
   11d28:	mov	r2, #136	; 0x88
   11d2c:	add	r1, sp, #24
   11d30:	bl	110f4 <recvfrom@plt>
   11d34:	cmp	r0, #0
   11d38:	bge	11d50 <putc_unlocked@plt+0xa58>
   11d3c:	bl	111e4 <__errno_location@plt>
   11d40:	ldr	r2, [pc, #432]	; 11ef8 <putc_unlocked@plt+0xc00>
   11d44:	ldr	r1, [r0]
   11d48:	mov	r0, #1
   11d4c:	bl	1113c <error@plt>
   11d50:	add	r3, sp, #16
   11d54:	add	r2, sp, #12
   11d58:	mov	r1, #136	; 0x88
   11d5c:	add	r0, sp, #24
   11d60:	bl	12658 <putc_unlocked@plt+0x1360>
   11d64:	ldr	r3, [sp, #16]
   11d68:	ldr	r0, [r4, #8]
   11d6c:	ldrb	r2, [r3]
   11d70:	cmp	r0, #0
   11d74:	str	r2, [r6]
   11d78:	ldrb	r2, [r3, #1]
   11d7c:	str	r2, [r5]
   11d80:	beq	11d94 <putc_unlocked@plt+0xa9c>
   11d84:	cmp	r0, #1
   11d88:	beq	11de8 <putc_unlocked@plt+0xaf0>
   11d8c:	mov	r0, #0
   11d90:	b	11de0 <putc_unlocked@plt+0xae8>
   11d94:	ldrb	r1, [r3]
   11d98:	and	r2, r1, #247	; 0xf7
   11d9c:	cmp	r2, #3
   11da0:	bne	11ee0 <putc_unlocked@plt+0xbe8>
   11da4:	ldrb	r2, [r3, #8]
   11da8:	and	r2, r2, #15
   11dac:	add	r2, r3, r2, lsl #2
   11db0:	ldrh	ip, [r2, #10]
   11db4:	ldrh	r2, [r4, #18]
   11db8:	cmp	ip, r2
   11dbc:	bne	11ee0 <putc_unlocked@plt+0xbe8>
   11dc0:	cmp	r1, #3
   11dc4:	bne	11de0 <putc_unlocked@plt+0xae8>
   11dc8:	ldr	r2, [pc, #300]	; 11efc <putc_unlocked@plt+0xc04>
   11dcc:	mov	r1, #1
   11dd0:	str	r1, [r2, #24]
   11dd4:	ldrb	r0, [r3, #1]
   11dd8:	subs	r0, r0, #3
   11ddc:	movne	r0, #1
   11de0:	add	sp, sp, #160	; 0xa0
   11de4:	pop	{r4, r5, r6, pc}
   11de8:	ldrb	r2, [r3]
   11dec:	and	r0, r2, #247	; 0xf7
   11df0:	cmp	r2, #0
   11df4:	cmpne	r0, #3
   11df8:	bne	11ee0 <putc_unlocked@plt+0xbe8>
   11dfc:	cmp	r2, #0
   11e00:	bne	11e48 <putc_unlocked@plt+0xb50>
   11e04:	ldrh	r1, [r3, #6]
   11e08:	ldr	ip, [pc, #240]	; 11f00 <putc_unlocked@plt+0xc08>
   11e0c:	rev16	r1, r1
   11e10:	ldr	ip, [ip]
   11e14:	uxth	r1, r1
   11e18:	cmp	r1, ip
   11e1c:	bne	11ee0 <putc_unlocked@plt+0xbe8>
   11e20:	ldrh	r1, [r3, #4]
   11e24:	ldr	ip, [pc, #216]	; 11f04 <putc_unlocked@plt+0xc0c>
   11e28:	rev16	r1, r1
   11e2c:	ldr	ip, [ip]
   11e30:	uxth	r1, r1
   11e34:	cmp	r1, ip
   11e38:	beq	11e48 <putc_unlocked@plt+0xb50>
   11e3c:	ldr	r1, [r4, #12]
   11e40:	cmp	r1, #0
   11e44:	beq	11ee0 <putc_unlocked@plt+0xbe8>
   11e48:	cmp	r0, #3
   11e4c:	sub	ip, r2, #3
   11e50:	clz	ip, ip
   11e54:	lsr	ip, ip, #5
   11e58:	bne	11eac <putc_unlocked@plt+0xbb4>
   11e5c:	add	r1, r3, #8
   11e60:	ldrb	r3, [r3, #8]
   11e64:	ldr	r0, [pc, #152]	; 11f04 <putc_unlocked@plt+0xc0c>
   11e68:	and	r3, r3, #15
   11e6c:	ldr	r0, [r0]
   11e70:	add	r1, r1, r3, lsl #2
   11e74:	ldrh	r3, [r1, #6]
   11e78:	ldrh	r1, [r1, #4]
   11e7c:	rev16	r3, r3
   11e80:	rev16	r1, r1
   11e84:	uxth	r3, r3
   11e88:	uxth	r1, r1
   11e8c:	cmp	r1, r0
   11e90:	bne	11ee0 <putc_unlocked@plt+0xbe8>
   11e94:	cmp	r2, #11
   11e98:	bne	11eac <putc_unlocked@plt+0xbb4>
   11e9c:	ldr	r2, [pc, #92]	; 11f00 <putc_unlocked@plt+0xc08>
   11ea0:	ldr	r2, [r2]
   11ea4:	cmp	r3, r2
   11ea8:	bne	11ee0 <putc_unlocked@plt+0xbe8>
   11eac:	ldr	r3, [sp, #12]
   11eb0:	ldr	r2, [pc, #80]	; 11f08 <putc_unlocked@plt+0xc10>
   11eb4:	ldr	r3, [r3, #12]
   11eb8:	ldr	r0, [r2, #4]
   11ebc:	cmp	r3, r0
   11ec0:	movne	r0, ip
   11ec4:	orreq	r0, ip, #1
   11ec8:	cmp	r0, #0
   11ecc:	ldrne	r3, [pc, #40]	; 11efc <putc_unlocked@plt+0xc04>
   11ed0:	movne	r2, #1
   11ed4:	movne	r0, ip
   11ed8:	strne	r2, [r3, #24]
   11edc:	b	11de0 <putc_unlocked@plt+0xae8>
   11ee0:	mvn	r0, #0
   11ee4:	b	11de0 <putc_unlocked@plt+0xae8>
   11ee8:	muleq	r1, lr, r4
   11eec:	andeq	r0, r0, r3, asr #4
   11ef0:	andeq	r8, r1, ip, lsl #12
   11ef4:	andeq	r8, r1, lr, lsl r6
   11ef8:	andeq	r8, r1, r9, ror r6
   11efc:	andeq	sl, r2, ip, lsr #5
   11f00:	andeq	sl, r2, ip, lsr r3
   11f04:	andeq	sl, r2, r8, lsr r3
   11f08:	andeq	sl, r2, r0, lsl #6
   11f0c:	push	{r4, r5, r6, lr}
   11f10:	subs	r4, r0, #0
   11f14:	sub	sp, sp, #40	; 0x28
   11f18:	bne	11f30 <putc_unlocked@plt+0xc38>
   11f1c:	ldr	r3, [pc, #396]	; 120b0 <putc_unlocked@plt+0xdb8>
   11f20:	ldr	r2, [pc, #396]	; 120b4 <putc_unlocked@plt+0xdbc>
   11f24:	ldr	r1, [pc, #396]	; 120b8 <putc_unlocked@plt+0xdc0>
   11f28:	ldr	r0, [pc, #396]	; 120bc <putc_unlocked@plt+0xdc4>
   11f2c:	bl	112ec <__assert_fail@plt>
   11f30:	ldr	r3, [r4, #8]
   11f34:	cmp	r3, #0
   11f38:	beq	11f4c <putc_unlocked@plt+0xc54>
   11f3c:	cmp	r3, #1
   11f40:	beq	11fd8 <putc_unlocked@plt+0xce0>
   11f44:	mov	r5, #0
   11f48:	b	120a4 <putc_unlocked@plt+0xdac>
   11f4c:	ldr	ip, [pc, #364]	; 120c0 <putc_unlocked@plt+0xdc8>
   11f50:	add	r2, sp, #12
   11f54:	ldr	r0, [ip]
   11f58:	ldr	r1, [ip, #4]
   11f5c:	stmia	r2!, {r0, r1}
   11f60:	ldrb	r1, [ip, #8]
   11f64:	ldr	r0, [r4, #4]
   11f68:	strb	r1, [r2]
   11f6c:	add	r2, r4, #16
   11f70:	mov	r1, #16
   11f74:	str	r1, [sp, #4]
   11f78:	str	r2, [sp]
   11f7c:	add	r1, sp, #12
   11f80:	mov	r2, #9
   11f84:	bl	11220 <sendto@plt>
   11f88:	cmp	r0, #0
   11f8c:	bge	11fac <putc_unlocked@plt+0xcb4>
   11f90:	bl	111e4 <__errno_location@plt>
   11f94:	ldr	r1, [r0]
   11f98:	cmp	r1, #104	; 0x68
   11f9c:	beq	11fac <putc_unlocked@plt+0xcb4>
   11fa0:	ldr	r2, [pc, #284]	; 120c4 <putc_unlocked@plt+0xdcc>
   11fa4:	mov	r0, #1
   11fa8:	bl	1113c <error@plt>
   11fac:	mov	r1, #0
   11fb0:	add	r0, r4, #52	; 0x34
   11fb4:	bl	11130 <gettimeofday@plt>
   11fb8:	cmp	r0, #0
   11fbc:	bge	11f44 <putc_unlocked@plt+0xc4c>
   11fc0:	bl	111e4 <__errno_location@plt>
   11fc4:	ldr	r2, [pc, #252]	; 120c8 <putc_unlocked@plt+0xdd0>
   11fc8:	ldr	r1, [r0]
   11fcc:	mov	r0, #1
   11fd0:	bl	1113c <error@plt>
   11fd4:	b	11f44 <putc_unlocked@plt+0xc4c>
   11fd8:	mov	r3, #0
   11fdc:	add	r6, sp, #12
   11fe0:	strb	r3, [r3, r6]
   11fe4:	add	r3, r3, #1
   11fe8:	cmp	r3, #28
   11fec:	bne	11fe0 <putc_unlocked@plt+0xce8>
   11ff0:	ldr	r3, [r4, #12]
   11ff4:	ldr	r1, [pc, #208]	; 120cc <putc_unlocked@plt+0xdd4>
   11ff8:	cmp	r3, #0
   11ffc:	mov	r0, r6
   12000:	ldrne	r3, [pc, #200]	; 120d0 <putc_unlocked@plt+0xdd8>
   12004:	ldrne	r3, [r3, #4]
   12008:	strne	r3, [sp, #24]
   1200c:	ldr	r3, [pc, #192]	; 120d4 <putc_unlocked@plt+0xddc>
   12010:	ldr	r2, [r3]
   12014:	ldr	r3, [r1]
   12018:	add	r3, r3, #1
   1201c:	str	r3, [r1]
   12020:	mov	r1, #28
   12024:	bl	126b0 <putc_unlocked@plt+0x13b8>
   12028:	subs	r5, r0, #0
   1202c:	mvnne	r5, #0
   12030:	bne	120a4 <putc_unlocked@plt+0xdac>
   12034:	mov	r3, r4
   12038:	mov	r2, #16
   1203c:	ldr	r0, [r3], #16
   12040:	mov	r1, r6
   12044:	str	r2, [sp, #4]
   12048:	str	r3, [sp]
   1204c:	mov	r2, #28
   12050:	mov	r3, r5
   12054:	bl	11220 <sendto@plt>
   12058:	cmp	r0, #0
   1205c:	bge	1207c <putc_unlocked@plt+0xd84>
   12060:	bl	111e4 <__errno_location@plt>
   12064:	ldr	r1, [r0]
   12068:	cmp	r1, #104	; 0x68
   1206c:	beq	1207c <putc_unlocked@plt+0xd84>
   12070:	ldr	r2, [pc, #76]	; 120c4 <putc_unlocked@plt+0xdcc>
   12074:	mov	r0, #1
   12078:	bl	1113c <error@plt>
   1207c:	mov	r1, #0
   12080:	add	r0, r4, #52	; 0x34
   12084:	bl	11130 <gettimeofday@plt>
   12088:	cmp	r0, #0
   1208c:	bge	120a4 <putc_unlocked@plt+0xdac>
   12090:	bl	111e4 <__errno_location@plt>
   12094:	ldr	r2, [pc, #44]	; 120c8 <putc_unlocked@plt+0xdd0>
   12098:	ldr	r1, [r0]
   1209c:	mov	r0, #1
   120a0:	bl	1113c <error@plt>
   120a4:	mov	r0, r5
   120a8:	add	sp, sp, #40	; 0x28
   120ac:	pop	{r4, r5, r6, pc}
   120b0:	andeq	r8, r1, r9, lsr #9
   120b4:	andeq	r0, r0, r5, lsr #5
   120b8:	andeq	r8, r1, ip, lsl #12
   120bc:	andeq	r8, r1, lr, lsl r6
   120c0:	muleq	r1, r6, r6
   120c4:	andeq	r8, r1, r2, lsl #13
   120c8:	andeq	r8, r1, r9, lsl #13
   120cc:	andeq	sl, r2, ip, lsr r3
   120d0:	andeq	sl, r2, r0, lsl #6
   120d4:	andeq	sl, r2, r8, lsr r3
   120d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120dc:	vpush	{d8}
   120e0:	vldr	d8, [pc, #632]	; 12360 <putc_unlocked@plt+0x1068>
   120e4:	mov	r8, #0
   120e8:	mov	r4, r0
   120ec:	sub	sp, sp, #172	; 0xac
   120f0:	ldr	r0, [pc, #624]	; 12368 <putc_unlocked@plt+0x1070>
   120f4:	str	r3, [sp, #8]
   120f8:	mov	r7, r8
   120fc:	bl	1104c <printf@plt>
   12100:	mov	r2, r8
   12104:	ldr	r3, [sp, #8]
   12108:	cmp	r7, r3
   1210c:	blt	12124 <putc_unlocked@plt+0xe2c>
   12110:	mov	r0, #10
   12114:	bl	11208 <putchar@plt>
   12118:	add	sp, sp, #172	; 0xac
   1211c:	vpop	{d8}
   12120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12124:	cmp	r4, #0
   12128:	mov	r3, #0
   1212c:	ldrne	r6, [r4]
   12130:	mvneq	r6, #0
   12134:	mov	r1, r3
   12138:	add	r0, sp, #40	; 0x28
   1213c:	str	r1, [r0, r3, lsl #2]
   12140:	add	r3, r3, #1
   12144:	cmp	r3, #32
   12148:	bne	12138 <putc_unlocked@plt+0xe40>
   1214c:	cmp	r6, #0
   12150:	add	r5, r6, #31
   12154:	movge	r5, r6
   12158:	rsbs	r0, r6, #0
   1215c:	and	r0, r0, #31
   12160:	and	r3, r6, #31
   12164:	asr	r5, r5, #5
   12168:	rsbpl	r3, r0, #0
   1216c:	mov	r9, #1
   12170:	lsl	r5, r5, #2
   12174:	lsl	r9, r9, r3
   12178:	add	r3, sp, #168	; 0xa8
   1217c:	add	r0, r3, r5
   12180:	cmp	r2, #0
   12184:	ldr	r3, [r0, #-128]	; 0xffffff80
   12188:	str	r1, [sp, #36]	; 0x24
   1218c:	orr	r3, r3, r9
   12190:	str	r3, [r0, #-128]	; 0xffffff80
   12194:	ldr	r3, [pc, #464]	; 1236c <putc_unlocked@plt+0x1074>
   12198:	ldr	r3, [r3, #20]
   1219c:	str	r3, [sp, #32]
   121a0:	bne	121ac <putc_unlocked@plt+0xeb4>
   121a4:	mov	r0, r4
   121a8:	bl	11f0c <putc_unlocked@plt+0xc14>
   121ac:	bl	111e4 <__errno_location@plt>
   121b0:	mov	sl, #0
   121b4:	add	r3, sp, #32
   121b8:	mov	r2, sl
   121bc:	add	r1, sp, #40	; 0x28
   121c0:	str	sl, [r0]
   121c4:	mov	fp, r0
   121c8:	str	r3, [sp]
   121cc:	add	r0, r6, #1
   121d0:	mov	r3, sl
   121d4:	bl	110d0 <select@plt>
   121d8:	mov	r1, sl
   121dc:	ldr	r6, [fp]
   121e0:	str	r0, [sp, #12]
   121e4:	add	r0, sp, #24
   121e8:	bl	11130 <gettimeofday@plt>
   121ec:	ldr	r1, [sp, #28]
   121f0:	ldr	r2, [r4, #56]	; 0x38
   121f4:	ldr	r0, [r4, #52]	; 0x34
   121f8:	sub	r2, r1, r2
   121fc:	ldr	r1, [sp, #24]
   12200:	cmp	r2, sl
   12204:	str	r2, [sp, #28]
   12208:	sub	r1, r1, r0
   1220c:	addlt	r2, r2, #999424	; 0xf4000
   12210:	ldr	r3, [sp, #12]
   12214:	sublt	r1, r1, #1
   12218:	addlt	r2, r2, #576	; 0x240
   1221c:	strge	r1, [sp, #24]
   12220:	strlt	r1, [sp, #24]
   12224:	strlt	r2, [sp, #28]
   12228:	cmp	r3, #0
   1222c:	bge	12260 <putc_unlocked@plt+0xf68>
   12230:	cmp	r6, #4
   12234:	beq	12248 <putc_unlocked@plt+0xf50>
   12238:	ldr	r2, [pc, #304]	; 12370 <putc_unlocked@plt+0x1078>
   1223c:	ldr	r1, [fp]
   12240:	mov	r0, #1
   12244:	bl	1113c <error@plt>
   12248:	ldr	r3, [pc, #292]	; 12374 <putc_unlocked@plt+0x107c>
   1224c:	ldr	r0, [r3]
   12250:	bl	11064 <fflush@plt>
   12254:	mov	r2, #0
   12258:	add	r7, r7, #1
   1225c:	b	12104 <putc_unlocked@plt+0xe0c>
   12260:	bne	1227c <putc_unlocked@plt+0xf84>
   12264:	ldr	r0, [pc, #268]	; 12378 <putc_unlocked@plt+0x1080>
   12268:	bl	1104c <printf@plt>
   1226c:	ldr	r3, [pc, #256]	; 12374 <putc_unlocked@plt+0x107c>
   12270:	ldr	r0, [r3]
   12274:	bl	11064 <fflush@plt>
   12278:	b	12248 <putc_unlocked@plt+0xf50>
   1227c:	add	r3, sp, #168	; 0xa8
   12280:	add	r5, r3, r5
   12284:	ldr	r3, [r5, #-128]	; 0xffffff80
   12288:	tst	r9, r3
   1228c:	beq	12248 <putc_unlocked@plt+0xf50>
   12290:	add	r2, sp, #20
   12294:	add	r1, sp, #16
   12298:	mov	r0, r4
   1229c:	ldr	r5, [sp, #24]
   122a0:	ldr	r6, [sp, #28]
   122a4:	bl	11cdc <putc_unlocked@plt+0x9e4>
   122a8:	subs	r9, r0, #0
   122ac:	sublt	r7, r7, #1
   122b0:	movlt	r2, #1
   122b4:	blt	12258 <putc_unlocked@plt+0xf60>
   122b8:	cmp	r7, #0
   122bc:	beq	122cc <putc_unlocked@plt+0xfd4>
   122c0:	ldr	r3, [r4, #36]	; 0x24
   122c4:	cmp	r8, r3
   122c8:	beq	12304 <putc_unlocked@plt+0x100c>
   122cc:	ldr	r0, [r4, #36]	; 0x24
   122d0:	bl	110c4 <inet_ntoa@plt>
   122d4:	mov	r1, r0
   122d8:	ldr	r0, [pc, #156]	; 1237c <putc_unlocked@plt+0x1084>
   122dc:	bl	1104c <printf@plt>
   122e0:	ldr	r3, [pc, #152]	; 12380 <putc_unlocked@plt+0x1088>
   122e4:	ldr	r3, [r3, #8]
   122e8:	cmp	r3, #0
   122ec:	beq	12304 <putc_unlocked@plt+0x100c>
   122f0:	add	r0, r4, #36	; 0x24
   122f4:	bl	119c4 <putc_unlocked@plt+0x6cc>
   122f8:	mov	r1, r0
   122fc:	ldr	r0, [pc, #128]	; 12384 <putc_unlocked@plt+0x108c>
   12300:	bl	1104c <printf@plt>
   12304:	vmov	s13, r6
   12308:	vmov	s15, r5
   1230c:	ldr	r0, [pc, #116]	; 12388 <putc_unlocked@plt+0x1090>
   12310:	vcvt.f64.s32	d6, s13
   12314:	vcvt.f64.s32	d7, s15
   12318:	vdiv.f64	d5, d6, d8
   1231c:	vmla.f64	d5, d7, d8
   12320:	vmov	r2, r3, d5
   12324:	bl	1104c <printf@plt>
   12328:	cmp	r9, #0
   1232c:	beq	12358 <putc_unlocked@plt+0x1060>
   12330:	ldr	r3, [sp, #16]
   12334:	cmp	r3, #3
   12338:	bne	12358 <putc_unlocked@plt+0x1060>
   1233c:	ldr	r3, [sp, #20]
   12340:	ldr	r0, [pc, #68]	; 1238c <putc_unlocked@plt+0x1094>
   12344:	and	r2, r3, #15
   12348:	ldr	r3, [pc, #64]	; 12390 <putc_unlocked@plt+0x1098>
   1234c:	add	r3, r3, r2
   12350:	ldrb	r1, [r3, #45]	; 0x2d
   12354:	bl	1104c <printf@plt>
   12358:	ldr	r8, [r4, #36]	; 0x24
   1235c:	b	12248 <putc_unlocked@plt+0xf50>
   12360:	andeq	r0, r0, r0
   12364:	addmi	r4, pc, r0
   12368:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   1236c:	andeq	sl, r2, r8, lsl r1
   12370:	andeq	r8, r1, r6, lsr #13
   12374:	andeq	sl, r2, r4, lsr #5
   12378:			; <UNDEFINED> instruction: 0x000186b4
   1237c:			; <UNDEFINED> instruction: 0x000186b8
   12380:	andeq	sl, r2, ip, lsr #5
   12384:			; <UNDEFINED> instruction: 0x000186bd
   12388:	andeq	r8, r1, r3, asr #13
   1238c:	andeq	r8, r1, ip, asr #13
   12390:	andeq	r8, r1, r8, lsl #9
   12394:	cmp	r0, #0
   12398:	ldrne	r0, [r0, #4]
   1239c:	mvneq	r0, #0
   123a0:	bx	lr
   123a4:	cmp	r0, #0
   123a8:	ldrne	r0, [r0]
   123ac:	mvneq	r0, #0
   123b0:	bx	lr
   123b4:	subs	r3, r0, #0
   123b8:	push	{r0, r1, r2, lr}
   123bc:	bne	123d4 <putc_unlocked@plt+0x10dc>
   123c0:	ldr	r3, [pc, #108]	; 12434 <putc_unlocked@plt+0x113c>
   123c4:	mov	r2, #768	; 0x300
   123c8:	ldr	r1, [pc, #104]	; 12438 <putc_unlocked@plt+0x1140>
   123cc:	ldr	r0, [pc, #104]	; 1243c <putc_unlocked@plt+0x1144>
   123d0:	bl	112ec <__assert_fail@plt>
   123d4:	ldr	r2, [r3, #48]	; 0x30
   123d8:	ldmib	r3, {r0, lr}
   123dc:	ldr	ip, [r3]
   123e0:	add	r2, r2, #1
   123e4:	mov	r1, #0
   123e8:	str	r2, [r3, #48]	; 0x30
   123ec:	cmp	lr, r1
   123f0:	mov	r2, #4
   123f4:	str	r2, [sp]
   123f8:	movne	r0, ip
   123fc:	add	r3, r3, #48	; 0x30
   12400:	mov	r2, #2
   12404:	bl	11040 <setsockopt@plt>
   12408:	cmp	r0, #0
   1240c:	bge	1242c <putc_unlocked@plt+0x1134>
   12410:	bl	111e4 <__errno_location@plt>
   12414:	ldr	r2, [pc, #36]	; 12440 <putc_unlocked@plt+0x1148>
   12418:	ldr	r1, [r0]
   1241c:	mov	r0, #1
   12420:	add	sp, sp, #12
   12424:	pop	{lr}		; (ldr lr, [sp], #4)
   12428:	b	1113c <error@plt>
   1242c:	add	sp, sp, #12
   12430:	pop	{pc}		; (ldr pc, [sp], #4)
   12434:	andeq	r8, r1, r6, asr #9
   12438:	andeq	r8, r1, ip, lsl #12
   1243c:	andeq	r8, r1, lr, lsl r6
   12440:	andeq	r8, r1, r0, lsr #12
   12444:	cmp	r0, #0
   12448:	bne	12464 <putc_unlocked@plt+0x116c>
   1244c:	push	{r4, lr}
   12450:	mov	r2, #780	; 0x30c
   12454:	ldr	r3, [pc, #48]	; 1248c <putc_unlocked@plt+0x1194>
   12458:	ldr	r1, [pc, #48]	; 12490 <putc_unlocked@plt+0x1198>
   1245c:	ldr	r0, [pc, #48]	; 12494 <putc_unlocked@plt+0x119c>
   12460:	bl	112ec <__assert_fail@plt>
   12464:	ldr	r3, [r0, #8]
   12468:	cmp	r3, #0
   1246c:	bne	12488 <putc_unlocked@plt+0x1190>
   12470:	ldrh	r3, [r0, #18]
   12474:	rev16	r3, r3
   12478:	uxth	r3, r3
   1247c:	add	r3, r3, #1
   12480:	rev16	r3, r3
   12484:	strh	r3, [r0, #18]
   12488:	bx	lr
   1248c:	ldrdeq	r8, [r1], -r4
   12490:	andeq	r8, r1, ip, lsl #12
   12494:	andeq	r8, r1, lr, lsl r6
   12498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1249c:	sub	sp, sp, #60	; 0x3c
   124a0:	ldr	r7, [pc, #336]	; 125f8 <putc_unlocked@plt+0x1300>
   124a4:	ldr	r5, [r7]
   124a8:	cmp	r5, #0
   124ac:	beq	125f0 <putc_unlocked@plt+0x12f8>
   124b0:	ldrb	r3, [r5]
   124b4:	cmp	r3, #0
   124b8:	beq	125f0 <putc_unlocked@plt+0x12f8>
   124bc:	ldr	r4, [pc, #312]	; 125fc <putc_unlocked@plt+0x1304>
   124c0:	mov	r2, #32
   124c4:	mov	r1, #0
   124c8:	mov	r8, r0
   124cc:	add	r0, sp, #24
   124d0:	bl	111fc <memset@plt>
   124d4:	mov	r3, #2
   124d8:	mov	r2, #40	; 0x28
   124dc:	mov	r1, #0
   124e0:	mov	r0, r4
   124e4:	str	r3, [sp, #28]
   124e8:	str	r3, [sp, #32]
   124ec:	ldr	sl, [pc, #268]	; 12600 <putc_unlocked@plt+0x1308>
   124f0:	bl	111fc <memset@plt>
   124f4:	mvn	r3, #124	; 0x7c
   124f8:	strb	r3, [r4]
   124fc:	mov	r9, #0
   12500:	mov	r3, #3
   12504:	strb	r3, [r4, #1]
   12508:	mov	r3, #4
   1250c:	strb	r3, [r4, #2]
   12510:	ldrb	r3, [r5]
   12514:	cmp	r3, #0
   12518:	beq	125cc <putc_unlocked@plt+0x12d4>
   1251c:	ldrb	r3, [r4, #2]
   12520:	cmp	r3, #35	; 0x23
   12524:	bls	1253c <putc_unlocked@plt+0x1244>
   12528:	ldr	r2, [pc, #212]	; 12604 <putc_unlocked@plt+0x130c>
   1252c:	mov	r1, #0
   12530:	mov	r0, #1
   12534:	bl	1113c <error@plt>
   12538:	b	125cc <putc_unlocked@plt+0x12d4>
   1253c:	mov	r1, sl
   12540:	mov	r0, r5
   12544:	bl	11298 <strpbrk@plt>
   12548:	add	r3, sp, #20
   1254c:	add	r2, sp, #24
   12550:	mov	r1, r9
   12554:	subs	r6, r0, #0
   12558:	mov	r0, r5
   1255c:	strbne	r9, [r6]
   12560:	addne	r6, r6, #1
   12564:	bl	112b0 <getaddrinfo@plt>
   12568:	subs	r3, r0, #0
   1256c:	beq	125a0 <putc_unlocked@plt+0x12a8>
   12570:	str	r3, [sp, #12]
   12574:	bl	111e4 <__errno_location@plt>
   12578:	ldr	r3, [sp, #12]
   1257c:	ldr	fp, [r0]
   12580:	mov	r0, r3
   12584:	bl	11094 <gai_strerror@plt>
   12588:	mov	r3, r5
   1258c:	ldr	r2, [pc, #116]	; 12608 <putc_unlocked@plt+0x1310>
   12590:	mov	r1, fp
   12594:	str	r0, [sp]
   12598:	mov	r0, #1
   1259c:	bl	1113c <error@plt>
   125a0:	ldr	r0, [sp, #20]
   125a4:	ldr	r3, [r0, #20]
   125a8:	ldr	r2, [r3, #4]
   125ac:	ldrb	r3, [r4, #1]
   125b0:	str	r2, [r4, r3]
   125b4:	bl	112a4 <freeaddrinfo@plt>
   125b8:	ldrb	r3, [r4, #1]
   125bc:	subs	r5, r6, #0
   125c0:	add	r3, r3, #4
   125c4:	strb	r3, [r4, #1]
   125c8:	bne	12510 <putc_unlocked@plt+0x1218>
   125cc:	ldrb	r3, [r4, #1]
   125d0:	ldr	r2, [r8, #4]
   125d4:	str	r2, [r4, r3]
   125d8:	ldrb	r3, [r4, #1]
   125dc:	add	r3, r3, #4
   125e0:	uxtb	r3, r3
   125e4:	strb	r3, [r4, #1]
   125e8:	add	r3, r3, #1
   125ec:	str	r3, [r7, #20]
   125f0:	add	sp, sp, #60	; 0x3c
   125f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125f8:	andeq	sl, r2, ip, lsr #5
   125fc:	andeq	sl, r2, r0, lsl r3
   12600:	ldrdeq	r8, [r1], -r1
   12604:	andeq	r8, r1, r6, ror #13
   12608:	ldrdeq	r8, [r1], -r6
   1260c:	cmp	r1, #7
   12610:	bls	12650 <putc_unlocked@plt+0x1358>
   12614:	push	{r4, r5, r6, lr}
   12618:	rev16	r3, r3
   1261c:	strb	r2, [r0]
   12620:	ldr	r2, [sp, #16]
   12624:	mov	r5, #0
   12628:	rev16	r2, r2
   1262c:	strb	r5, [r0, #1]
   12630:	strh	r5, [r0, #2]
   12634:	strh	r2, [r0, #6]
   12638:	strh	r3, [r0, #4]
   1263c:	mov	r4, r0
   12640:	bl	126d0 <putc_unlocked@plt+0x13d8>
   12644:	strh	r0, [r4, #2]
   12648:	mov	r0, r5
   1264c:	pop	{r4, r5, r6, pc}
   12650:	mvn	r0, #0
   12654:	bx	lr
   12658:	ldrb	ip, [r0]
   1265c:	push	{r4, r5, r6, lr}
   12660:	and	ip, ip, #15
   12664:	lsl	ip, ip, #2
   12668:	add	lr, ip, #8
   1266c:	cmp	lr, r1
   12670:	bhi	126a8 <putc_unlocked@plt+0x13b0>
   12674:	add	r4, r0, ip
   12678:	str	r0, [r2]
   1267c:	str	r4, [r3]
   12680:	mov	r3, #0
   12684:	ldrh	r5, [r4, #2]
   12688:	sub	r1, r1, ip
   1268c:	strh	r3, [r4, #2]
   12690:	mov	r0, r4
   12694:	bl	126d0 <putc_unlocked@plt+0x13d8>
   12698:	strh	r0, [r4, #2]
   1269c:	subs	r0, r5, r0
   126a0:	movne	r0, #1
   126a4:	pop	{r4, r5, r6, pc}
   126a8:	mvn	r0, #0
   126ac:	pop	{r4, r5, r6, pc}
   126b0:	push	{r0, r1, r2, lr}
   126b4:	str	r3, [sp]
   126b8:	mov	r3, r2
   126bc:	mov	r2, #8
   126c0:	bl	1260c <putc_unlocked@plt+0x1314>
   126c4:	add	sp, sp, #12
   126c8:	pop	{pc}		; (ldr pc, [sp], #4)
   126cc:	b	12658 <putc_unlocked@plt+0x1360>
   126d0:	sub	sp, sp, #8
   126d4:	mov	r3, #0
   126d8:	strh	r3, [sp, #6]
   126dc:	cmp	r1, #1
   126e0:	bgt	12710 <putc_unlocked@plt+0x1418>
   126e4:	ldrbeq	r2, [r0]
   126e8:	strbeq	r2, [sp, #6]
   126ec:	ldrheq	r2, [sp, #6]
   126f0:	addeq	r3, r3, r2
   126f4:	uxth	r0, r3
   126f8:	add	r3, r0, r3, asr #16
   126fc:	add	r3, r3, r3, asr #16
   12700:	mvn	r0, r3
   12704:	uxth	r0, r0
   12708:	add	sp, sp, #8
   1270c:	bx	lr
   12710:	ldrh	r2, [r0], #2
   12714:	sub	r1, r1, #2
   12718:	add	r3, r3, r2
   1271c:	b	126dc <putc_unlocked@plt+0x13e4>
   12720:	ldr	r2, [r0, #4]
   12724:	ldr	r3, [r0]
   12728:	cmp	r2, #0
   1272c:	add	r3, r3, #24
   12730:	bne	1273c <putc_unlocked@plt+0x1444>
   12734:	mov	r0, r2
   12738:	bx	lr
   1273c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12740:	cmp	r0, #0
   12744:	beq	12754 <putc_unlocked@plt+0x145c>
   12748:	ldr	r1, [r3, #-12]
   1274c:	tst	r1, #2
   12750:	bxeq	lr
   12754:	sub	r2, r2, #1
   12758:	b	12728 <putc_unlocked@plt+0x1430>
   1275c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12760:	mov	sl, r3
   12764:	ldm	r0, {r5, r6, r7}
   12768:	mov	r3, #0
   1276c:	sub	sp, sp, #20
   12770:	mov	r8, r1
   12774:	mov	r9, r2
   12778:	mov	r4, r5
   1277c:	mov	fp, r3
   12780:	adds	r2, r6, #0
   12784:	movne	r2, #1
   12788:	cmp	r3, #0
   1278c:	movne	r2, #0
   12790:	cmp	r2, #0
   12794:	bne	127a4 <putc_unlocked@plt+0x14ac>
   12798:	mov	r0, r3
   1279c:	add	sp, sp, #20
   127a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127a4:	ldr	r2, [r4, #12]
   127a8:	ands	r3, r2, #8
   127ac:	str	r2, [sp, #12]
   127b0:	movne	r3, fp
   127b4:	bne	127f4 <putc_unlocked@plt+0x14fc>
   127b8:	ldr	r1, [r4, #4]
   127bc:	sub	r0, r1, #1
   127c0:	cmp	r0, #254	; 0xfe
   127c4:	str	r1, [sp, #8]
   127c8:	bhi	127f4 <putc_unlocked@plt+0x14fc>
   127cc:	str	r3, [sp, #4]
   127d0:	bl	1119c <__ctype_b_loc@plt>
   127d4:	ldr	r1, [sp, #8]
   127d8:	ldr	r3, [sp, #4]
   127dc:	ldr	r2, [sp, #12]
   127e0:	ldr	ip, [r0]
   127e4:	lsl	r0, r1, #1
   127e8:	ldrh	r0, [ip, r0]
   127ec:	tst	r0, #16384	; 0x4000
   127f0:	bne	12800 <putc_unlocked@plt+0x1508>
   127f4:	add	r4, r4, #24
   127f8:	sub	r6, r6, #1
   127fc:	b	12780 <putc_unlocked@plt+0x1488>
   12800:	ldrb	r0, [r7]
   12804:	cmp	r0, r1
   12808:	bne	127f4 <putc_unlocked@plt+0x14fc>
   1280c:	tst	r2, #4
   12810:	moveq	r5, r4
   12814:	tst	r2, #2
   12818:	bne	12834 <putc_unlocked@plt+0x153c>
   1281c:	mov	r3, sl
   12820:	mov	r2, r9
   12824:	mov	r1, r5
   12828:	mov	r0, r4
   1282c:	blx	r8
   12830:	mov	r3, r0
   12834:	add	r7, r7, #1
   12838:	b	127f4 <putc_unlocked@plt+0x14fc>
   1283c:	ldr	r3, [r0, #12]
   12840:	ands	r3, r3, #8
   12844:	bne	1287c <putc_unlocked@plt+0x1584>
   12848:	push	{r4, lr}
   1284c:	ldr	r4, [r0, #4]
   12850:	sub	r2, r4, #1
   12854:	cmp	r2, #254	; 0xfe
   12858:	bhi	12874 <putc_unlocked@plt+0x157c>
   1285c:	bl	1119c <__ctype_b_loc@plt>
   12860:	lsl	r3, r4, #1
   12864:	ldr	r2, [r0]
   12868:	ldrh	r3, [r2, r3]
   1286c:	ands	r3, r3, #16384	; 0x4000
   12870:	movne	r3, r4
   12874:	mov	r0, r3
   12878:	pop	{r4, pc}
   1287c:	mov	r3, #0
   12880:	mov	r0, r3
   12884:	bx	lr
   12888:	push	{r4, lr}
   1288c:	mov	r4, r0
   12890:	bl	1119c <__ctype_b_loc@plt>
   12894:	ldr	r1, [r0]
   12898:	ldr	r3, [r4]
   1289c:	ldrb	r0, [r3]
   128a0:	lsl	r2, r0, #1
   128a4:	ldrh	r2, [r1, r2]
   128a8:	tst	r2, #8192	; 0x2000
   128ac:	bne	128dc <putc_unlocked@plt+0x15e4>
   128b0:	subs	r0, r0, #45	; 0x2d
   128b4:	movne	r0, #1
   128b8:	ldr	r2, [r4]
   128bc:	ldrb	r3, [r2]
   128c0:	cmp	r3, #0
   128c4:	popeq	{r4, pc}
   128c8:	lsl	r3, r3, #1
   128cc:	ldrh	r3, [r1, r3]
   128d0:	tst	r3, #8
   128d4:	beq	128e8 <putc_unlocked@plt+0x15f0>
   128d8:	pop	{r4, pc}
   128dc:	add	r3, r3, #1
   128e0:	str	r3, [r4]
   128e4:	b	12898 <putc_unlocked@plt+0x15a0>
   128e8:	add	r2, r2, #1
   128ec:	str	r2, [r4]
   128f0:	b	128b8 <putc_unlocked@plt+0x15c0>
   128f4:	push	{r4, r5, r6, lr}
   128f8:	mov	r4, r0
   128fc:	ldr	r0, [r0, #12]
   12900:	cmp	r0, #0
   12904:	bne	12930 <putc_unlocked@plt+0x1638>
   12908:	ldr	r3, [r4, #4]
   1290c:	cmp	r3, #0
   12910:	beq	12924 <putc_unlocked@plt+0x162c>
   12914:	ldr	r0, [r4]
   12918:	bl	1638c <argp_parse@@Base+0xa9c>
   1291c:	ldr	r0, [r4, #8]
   12920:	bl	1638c <argp_parse@@Base+0xa9c>
   12924:	mov	r0, r4
   12928:	pop	{r4, r5, r6, lr}
   1292c:	b	1638c <argp_parse@@Base+0xa9c>
   12930:	ldr	r5, [r0, #24]
   12934:	bl	1638c <argp_parse@@Base+0xa9c>
   12938:	mov	r0, r5
   1293c:	b	12900 <putc_unlocked@plt+0x1608>
   12940:	push	{r4, r5, r6, lr}
   12944:	ldr	r5, [r0, #16]
   12948:	ldr	r0, [r0, #8]
   1294c:	cmp	r0, #0
   12950:	beq	12964 <putc_unlocked@plt+0x166c>
   12954:	mov	r1, #10
   12958:	bl	111cc <strchr@plt>
   1295c:	adds	r0, r0, #0
   12960:	movne	r0, #1
   12964:	cmp	r5, #0
   12968:	mov	r4, r0
   1296c:	addne	r5, r5, #16
   12970:	bne	12984 <putc_unlocked@plt+0x168c>
   12974:	mov	r0, r4
   12978:	pop	{r4, r5, r6, pc}
   1297c:	bl	12940 <putc_unlocked@plt+0x1648>
   12980:	add	r4, r4, r0
   12984:	add	r5, r5, #16
   12988:	ldr	r0, [r5, #-32]	; 0xffffffe0
   1298c:	cmp	r0, #0
   12990:	bne	1297c <putc_unlocked@plt+0x1684>
   12994:	b	12974 <putc_unlocked@plt+0x167c>
   12998:	ldr	r2, [r0, #24]
   1299c:	ldr	r3, [r0, #28]
   129a0:	push	{r4, r5, r6, r7, r8, lr}
   129a4:	sub	r3, r3, r2
   129a8:	ldr	r2, [r0, #16]
   129ac:	mov	r4, r0
   129b0:	cmp	r3, r2
   129b4:	mov	r5, r1
   129b8:	bls	129c0 <putc_unlocked@plt+0x16c8>
   129bc:	bl	16f28 <argp_parse@@Base+0x1638>
   129c0:	ldr	r1, [r4, #20]
   129c4:	mov	r6, #1
   129c8:	cmp	r1, #0
   129cc:	subge	r5, r5, r1
   129d0:	mov	r7, #32
   129d4:	cmp	r5, #0
   129d8:	bgt	129e0 <putc_unlocked@plt+0x16e8>
   129dc:	pop	{r4, r5, r6, r7, r8, pc}
   129e0:	ldr	r2, [r4, #28]
   129e4:	ldr	r3, [r4, #32]
   129e8:	cmp	r2, r3
   129ec:	bcs	12a08 <putc_unlocked@plt+0x1710>
   129f0:	ldr	r3, [r4, #28]
   129f4:	add	r2, r3, #1
   129f8:	str	r2, [r4, #28]
   129fc:	strb	r7, [r3]
   12a00:	sub	r5, r5, #1
   12a04:	b	129d4 <putc_unlocked@plt+0x16dc>
   12a08:	mov	r1, r6
   12a0c:	mov	r0, r4
   12a10:	bl	17378 <argp_parse@@Base+0x1a88>
   12a14:	cmp	r0, #0
   12a18:	bne	129f0 <putc_unlocked@plt+0x16f8>
   12a1c:	b	12a00 <putc_unlocked@plt+0x1708>
   12a20:	push	{r4, r5, r6, lr}
   12a24:	subs	r4, r2, #0
   12a28:	popeq	{r4, r5, r6, pc}
   12a2c:	ldr	r2, [r4, #20]
   12a30:	cmp	r2, #0
   12a34:	popeq	{r4, r5, r6, pc}
   12a38:	mov	r6, r1
   12a3c:	mov	r5, r0
   12a40:	mov	r1, r3
   12a44:	mov	r0, r4
   12a48:	bl	16268 <argp_parse@@Base+0x978>
   12a4c:	ldr	r3, [r4, #20]
   12a50:	mov	r1, r5
   12a54:	mov	r2, r0
   12a58:	mov	r0, r6
   12a5c:	pop	{r4, r5, r6, lr}
   12a60:	bx	r3
   12a64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12a68:	mov	r4, r2
   12a6c:	ldr	r3, [r2, #16]
   12a70:	mov	r2, r1
   12a74:	ldr	r1, [pc, #440]	; 12c34 <putc_unlocked@plt+0x193c>
   12a78:	mov	r7, r0
   12a7c:	bl	12a20 <putc_unlocked@plt+0x1728>
   12a80:	subs	r6, r0, #0
   12a84:	beq	12bd8 <putc_unlocked@plt+0x18e0>
   12a88:	ldrb	r3, [r6]
   12a8c:	cmp	r3, #0
   12a90:	beq	12bcc <putc_unlocked@plt+0x18d4>
   12a94:	ldr	r3, [r4, #8]
   12a98:	ldr	r3, [r3]
   12a9c:	cmp	r3, #0
   12aa0:	beq	12acc <putc_unlocked@plt+0x17d4>
   12aa4:	ldr	r5, [r4, #4]
   12aa8:	ldr	r2, [r5, #28]
   12aac:	ldr	r3, [r5, #32]
   12ab0:	cmp	r2, r3
   12ab4:	bcs	12bec <putc_unlocked@plt+0x18f4>
   12ab8:	ldr	r3, [r5, #28]
   12abc:	add	r2, r3, #1
   12ac0:	str	r2, [r5, #28]
   12ac4:	mov	r2, #10
   12ac8:	strb	r2, [r3]
   12acc:	ldr	r8, [pc, #356]	; 12c38 <putc_unlocked@plt+0x1940>
   12ad0:	ldr	r0, [r4, #4]
   12ad4:	ldr	r1, [r8, #24]
   12ad8:	bl	12998 <putc_unlocked@plt+0x16a0>
   12adc:	ldr	r9, [r4, #4]
   12ae0:	ldr	sl, [r8, #24]
   12ae4:	ldr	r2, [r9, #24]
   12ae8:	ldr	r3, [r9, #28]
   12aec:	sub	r3, r3, r2
   12af0:	ldr	r2, [r9, #16]
   12af4:	cmp	r3, r2
   12af8:	bls	12b04 <putc_unlocked@plt+0x180c>
   12afc:	mov	r0, r9
   12b00:	bl	16f28 <argp_parse@@Base+0x1638>
   12b04:	ldr	r5, [r4, #4]
   12b08:	str	sl, [r9, #4]
   12b0c:	ldr	r8, [r8, #24]
   12b10:	ldr	r2, [r5, #24]
   12b14:	ldr	r3, [r5, #28]
   12b18:	sub	r3, r3, r2
   12b1c:	ldr	r2, [r5, #16]
   12b20:	cmp	r3, r2
   12b24:	bls	12b30 <putc_unlocked@plt+0x1838>
   12b28:	mov	r0, r5
   12b2c:	bl	16f28 <argp_parse@@Base+0x1638>
   12b30:	str	r8, [r5, #12]
   12b34:	mov	r0, r6
   12b38:	bl	111c0 <strlen@plt>
   12b3c:	subs	r8, r0, #0
   12b40:	beq	12b78 <putc_unlocked@plt+0x1880>
   12b44:	ldr	r5, [r4, #4]
   12b48:	ldr	r3, [r5, #28]
   12b4c:	ldr	r2, [r5, #32]
   12b50:	add	r3, r3, r8
   12b54:	cmp	r2, r3
   12b58:	bcc	12c04 <putc_unlocked@plt+0x190c>
   12b5c:	mov	r2, r8
   12b60:	mov	r1, r6
   12b64:	ldr	r0, [r5, #28]
   12b68:	bl	110ac <memcpy@plt>
   12b6c:	ldr	r3, [r5, #28]
   12b70:	add	r8, r3, r8
   12b74:	str	r8, [r5, #28]
   12b78:	ldr	r5, [r4, #4]
   12b7c:	ldr	r2, [r5, #24]
   12b80:	ldr	r3, [r5, #28]
   12b84:	sub	r3, r3, r2
   12b88:	ldr	r2, [r5, #16]
   12b8c:	cmp	r3, r2
   12b90:	bls	12b9c <putc_unlocked@plt+0x18a4>
   12b94:	mov	r0, r5
   12b98:	bl	16f28 <argp_parse@@Base+0x1638>
   12b9c:	mov	r3, #0
   12ba0:	str	r3, [r5, #4]
   12ba4:	ldr	r5, [r4, #4]
   12ba8:	ldr	r2, [r5, #28]
   12bac:	ldr	r3, [r5, #32]
   12bb0:	cmp	r2, r3
   12bb4:	bcs	12c1c <putc_unlocked@plt+0x1924>
   12bb8:	ldr	r3, [r5, #28]
   12bbc:	add	r2, r3, #1
   12bc0:	str	r2, [r5, #28]
   12bc4:	mov	r2, #10
   12bc8:	strb	r2, [r3]
   12bcc:	ldr	r3, [r4, #8]
   12bd0:	mov	r2, #1
   12bd4:	str	r2, [r3, #4]
   12bd8:	cmp	r7, r6
   12bdc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12be0:	mov	r0, r6
   12be4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12be8:	b	1638c <argp_parse@@Base+0xa9c>
   12bec:	mov	r1, #1
   12bf0:	mov	r0, r5
   12bf4:	bl	17378 <argp_parse@@Base+0x1a88>
   12bf8:	cmp	r0, #0
   12bfc:	bne	12ab8 <putc_unlocked@plt+0x17c0>
   12c00:	b	12acc <putc_unlocked@plt+0x17d4>
   12c04:	mov	r1, r8
   12c08:	mov	r0, r5
   12c0c:	bl	17378 <argp_parse@@Base+0x1a88>
   12c10:	cmp	r0, #0
   12c14:	bne	12b5c <putc_unlocked@plt+0x1864>
   12c18:	b	12b78 <putc_unlocked@plt+0x1880>
   12c1c:	mov	r1, #1
   12c20:	mov	r0, r5
   12c24:	bl	17378 <argp_parse@@Base+0x1a88>
   12c28:	cmp	r0, #0
   12c2c:	bne	12bb8 <putc_unlocked@plt+0x18c0>
   12c30:	b	12bcc <putc_unlocked@plt+0x18d4>
   12c34:	andeq	r0, r0, #3
   12c38:	andeq	sl, r2, ip, asr r2
   12c3c:	ldr	r3, [r1, #12]
   12c40:	push	{r4, r5, r6, r7, r8, lr}
   12c44:	cmp	r3, #0
   12c48:	mov	r7, r0
   12c4c:	mov	r4, r1
   12c50:	beq	12d68 <putc_unlocked@plt+0x1a70>
   12c54:	ldr	r2, [r1, #8]
   12c58:	ldr	r3, [r1]
   12c5c:	ldr	r8, [r2]
   12c60:	ldr	r2, [r2, #4]
   12c64:	ldr	r5, [r3, #16]
   12c68:	cmp	r2, #0
   12c6c:	cmpne	r8, #0
   12c70:	beq	12cac <putc_unlocked@plt+0x19b4>
   12c74:	ldr	r2, [r3, #12]
   12c78:	ldr	r3, [r8, #12]
   12c7c:	cmp	r2, r3
   12c80:	beq	12cac <putc_unlocked@plt+0x19b4>
   12c84:	ldr	r6, [r1, #4]
   12c88:	ldr	r2, [r6, #28]
   12c8c:	ldr	r3, [r6, #32]
   12c90:	cmp	r2, r3
   12c94:	bcs	12d48 <putc_unlocked@plt+0x1a50>
   12c98:	ldr	r3, [r6, #28]
   12c9c:	add	r2, r3, #1
   12ca0:	str	r2, [r6, #28]
   12ca4:	mov	r2, #10
   12ca8:	strb	r2, [r3]
   12cac:	cmp	r5, #0
   12cb0:	beq	12d30 <putc_unlocked@plt+0x1a38>
   12cb4:	ldr	r0, [r5]
   12cb8:	cmp	r0, #0
   12cbc:	beq	12d30 <putc_unlocked@plt+0x1a38>
   12cc0:	ldrb	r3, [r0]
   12cc4:	cmp	r3, #0
   12cc8:	beq	12d30 <putc_unlocked@plt+0x1a38>
   12ccc:	cmp	r8, #0
   12cd0:	beq	12cf4 <putc_unlocked@plt+0x19fc>
   12cd4:	ldr	r3, [r8, #16]
   12cd8:	cmp	r5, r3
   12cdc:	beq	12d30 <putc_unlocked@plt+0x1a38>
   12ce0:	cmp	r3, #0
   12ce4:	cmpne	r5, r3
   12ce8:	bne	12d60 <putc_unlocked@plt+0x1a68>
   12cec:	cmp	r5, r3
   12cf0:	beq	12d30 <putc_unlocked@plt+0x1a38>
   12cf4:	ldr	r3, [r4, #4]
   12cf8:	mov	r2, r4
   12cfc:	ldr	r1, [r5, #16]
   12d00:	ldr	r6, [r3, #12]
   12d04:	bl	12a64 <putc_unlocked@plt+0x176c>
   12d08:	ldr	r5, [r4, #4]
   12d0c:	ldr	r2, [r5, #24]
   12d10:	ldr	r3, [r5, #28]
   12d14:	sub	r3, r3, r2
   12d18:	ldr	r2, [r5, #16]
   12d1c:	cmp	r3, r2
   12d20:	bls	12d2c <putc_unlocked@plt+0x1a34>
   12d24:	mov	r0, r5
   12d28:	bl	16f28 <argp_parse@@Base+0x1638>
   12d2c:	str	r6, [r5, #12]
   12d30:	mov	r3, #0
   12d34:	str	r3, [r4, #12]
   12d38:	mov	r1, r7
   12d3c:	ldr	r0, [r4, #4]
   12d40:	pop	{r4, r5, r6, r7, r8, lr}
   12d44:	b	12998 <putc_unlocked@plt+0x16a0>
   12d48:	mov	r1, #1
   12d4c:	mov	r0, r6
   12d50:	bl	17378 <argp_parse@@Base+0x1a88>
   12d54:	cmp	r0, #0
   12d58:	bne	12c98 <putc_unlocked@plt+0x19a0>
   12d5c:	b	12cac <putc_unlocked@plt+0x19b4>
   12d60:	ldr	r3, [r3, #12]
   12d64:	b	12ce0 <putc_unlocked@plt+0x19e8>
   12d68:	ldr	r5, [r1, #4]
   12d6c:	ldr	r3, [r5, #28]
   12d70:	ldr	r2, [r5, #32]
   12d74:	add	r3, r3, #2
   12d78:	cmp	r2, r3
   12d7c:	bcc	12da0 <putc_unlocked@plt+0x1aa8>
   12d80:	ldr	r2, [pc, #48]	; 12db8 <putc_unlocked@plt+0x1ac0>
   12d84:	ldr	r3, [r5, #28]
   12d88:	ldrh	r2, [r2]
   12d8c:	strh	r2, [r3]
   12d90:	ldr	r3, [r5, #28]
   12d94:	add	r3, r3, #2
   12d98:	str	r3, [r5, #28]
   12d9c:	b	12d38 <putc_unlocked@plt+0x1a40>
   12da0:	mov	r1, #2
   12da4:	mov	r0, r5
   12da8:	bl	17378 <argp_parse@@Base+0x1a88>
   12dac:	cmp	r0, #0
   12db0:	bne	12d80 <putc_unlocked@plt+0x1a88>
   12db4:	b	12d38 <putc_unlocked@plt+0x1a40>
   12db8:	strdeq	r8, [r1], -r2
   12dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dc0:	sub	sp, sp, #28
   12dc4:	ldr	r7, [r0, #12]
   12dc8:	str	r3, [sp, #8]
   12dcc:	cmp	r7, #0
   12dd0:	ldr	r3, [r0, #16]
   12dd4:	moveq	r5, r7
   12dd8:	mov	r8, r0
   12ddc:	str	r1, [sp, #16]
   12de0:	mov	fp, r2
   12de4:	ldr	r4, [sp, #68]	; 0x44
   12de8:	str	r3, [sp, #12]
   12dec:	moveq	r6, r5
   12df0:	beq	12e30 <putc_unlocked@plt+0x1b38>
   12df4:	mov	r1, #11
   12df8:	mov	r0, r7
   12dfc:	bl	111cc <strchr@plt>
   12e00:	cmp	fp, #0
   12e04:	moveq	r5, r7
   12e08:	beq	12e18 <putc_unlocked@plt+0x1b20>
   12e0c:	cmp	r0, #0
   12e10:	addne	r5, r0, #1
   12e14:	moveq	r5, r0
   12e18:	cmp	r0, #0
   12e1c:	clz	r6, fp
   12e20:	lsr	r6, r6, #5
   12e24:	moveq	r6, #0
   12e28:	cmp	r6, #0
   12e2c:	subne	r6, r0, r7
   12e30:	ldr	r9, [r8, #20]
   12e34:	cmp	r9, #0
   12e38:	moveq	sl, r5
   12e3c:	beq	12e90 <putc_unlocked@plt+0x1b98>
   12e40:	cmp	r6, #0
   12e44:	beq	12e58 <putc_unlocked@plt+0x1b60>
   12e48:	mov	r0, r5
   12e4c:	mov	r1, r6
   12e50:	bl	110a0 <strndup@plt>
   12e54:	mov	r5, r0
   12e58:	ldr	r1, [sp, #16]
   12e5c:	mov	r0, r8
   12e60:	bl	16268 <argp_parse@@Base+0x978>
   12e64:	ldr	ip, [pc, #928]	; 1320c <putc_unlocked@plt+0x1f14>
   12e68:	cmp	fp, #0
   12e6c:	mov	r1, r5
   12e70:	ldr	r3, [r8, #20]
   12e74:	mov	sl, r5
   12e78:	mov	r2, r0
   12e7c:	mov	r9, r0
   12e80:	ldr	r0, [pc, #904]	; 13210 <putc_unlocked@plt+0x1f18>
   12e84:	movne	r0, ip
   12e88:	blx	r3
   12e8c:	mov	r5, r0
   12e90:	cmp	r5, #0
   12e94:	moveq	r7, r5
   12e98:	beq	12f50 <putc_unlocked@plt+0x1c58>
   12e9c:	ldr	r3, [sp, #8]
   12ea0:	cmp	r3, #0
   12ea4:	beq	12ecc <putc_unlocked@plt+0x1bd4>
   12ea8:	ldr	r2, [r4, #28]
   12eac:	ldr	r3, [r4, #32]
   12eb0:	cmp	r2, r3
   12eb4:	bcs	1307c <putc_unlocked@plt+0x1d84>
   12eb8:	ldr	r3, [r4, #28]
   12ebc:	add	r2, r3, #1
   12ec0:	str	r2, [r4, #28]
   12ec4:	mov	r2, #10
   12ec8:	strb	r2, [r3]
   12ecc:	cmp	r6, #0
   12ed0:	sub	r3, r5, sl
   12ed4:	clz	r3, r3
   12ed8:	lsr	r3, r3, #5
   12edc:	moveq	r3, #0
   12ee0:	cmp	r3, #0
   12ee4:	ldr	r3, [r4, #28]
   12ee8:	beq	130ac <putc_unlocked@plt+0x1db4>
   12eec:	ldr	r2, [r4, #32]
   12ef0:	add	r3, r3, r6
   12ef4:	cmp	r2, r3
   12ef8:	bcc	13094 <putc_unlocked@plt+0x1d9c>
   12efc:	mov	r2, r6
   12f00:	mov	r1, sl
   12f04:	ldr	r0, [r4, #28]
   12f08:	bl	110ac <memcpy@plt>
   12f0c:	ldr	r3, [r4, #28]
   12f10:	add	r3, r3, r6
   12f14:	str	r3, [r4, #28]
   12f18:	ldr	r2, [r4, #24]
   12f1c:	ldr	r3, [r4, #28]
   12f20:	sub	r3, r3, r2
   12f24:	ldr	r2, [r4, #16]
   12f28:	cmp	r3, r2
   12f2c:	bls	12f38 <putc_unlocked@plt+0x1c40>
   12f30:	mov	r0, r4
   12f34:	bl	16f28 <argp_parse@@Base+0x1638>
   12f38:	ldr	r3, [r4, #20]
   12f3c:	ldr	r2, [r4, #4]
   12f40:	bic	r3, r3, r3, asr #31
   12f44:	cmp	r2, r3
   12f48:	bcc	1310c <putc_unlocked@plt+0x1e14>
   12f4c:	mov	r7, #1
   12f50:	cmp	r5, #0
   12f54:	cmpne	r5, sl
   12f58:	beq	12f64 <putc_unlocked@plt+0x1c6c>
   12f5c:	mov	r0, r5
   12f60:	bl	1638c <argp_parse@@Base+0xa9c>
   12f64:	cmp	sl, #0
   12f68:	cmpne	r6, #0
   12f6c:	beq	12f84 <putc_unlocked@plt+0x1c8c>
   12f70:	ldr	r3, [r8, #20]
   12f74:	cmp	r3, #0
   12f78:	beq	13060 <putc_unlocked@plt+0x1d68>
   12f7c:	mov	r0, sl
   12f80:	bl	1638c <argp_parse@@Base+0xa9c>
   12f84:	cmp	fp, #0
   12f88:	beq	13060 <putc_unlocked@plt+0x1d68>
   12f8c:	ldr	r3, [r8, #20]
   12f90:	cmp	r3, #0
   12f94:	beq	13060 <putc_unlocked@plt+0x1d68>
   12f98:	mov	r2, r9
   12f9c:	mov	r1, #0
   12fa0:	ldr	r0, [pc, #620]	; 13214 <putc_unlocked@plt+0x1f1c>
   12fa4:	blx	r3
   12fa8:	subs	r5, r0, #0
   12fac:	beq	13060 <putc_unlocked@plt+0x1d68>
   12fb0:	ldr	r3, [sp, #8]
   12fb4:	orrs	r3, r7, r3
   12fb8:	beq	12fe0 <putc_unlocked@plt+0x1ce8>
   12fbc:	ldr	r2, [r4, #28]
   12fc0:	ldr	r3, [r4, #32]
   12fc4:	cmp	r2, r3
   12fc8:	bcs	1314c <putc_unlocked@plt+0x1e54>
   12fcc:	ldr	r3, [r4, #28]
   12fd0:	add	r2, r3, #1
   12fd4:	str	r2, [r4, #28]
   12fd8:	mov	r2, #10
   12fdc:	strb	r2, [r3]
   12fe0:	mov	r0, r5
   12fe4:	bl	111c0 <strlen@plt>
   12fe8:	subs	r6, r0, #0
   12fec:	beq	13020 <putc_unlocked@plt+0x1d28>
   12ff0:	ldr	r3, [r4, #28]
   12ff4:	ldr	r2, [r4, #32]
   12ff8:	add	r3, r3, r6
   12ffc:	cmp	r2, r3
   13000:	bcc	13164 <putc_unlocked@plt+0x1e6c>
   13004:	mov	r2, r6
   13008:	mov	r1, r5
   1300c:	ldr	r0, [r4, #28]
   13010:	bl	110ac <memcpy@plt>
   13014:	ldr	r3, [r4, #28]
   13018:	add	r6, r3, r6
   1301c:	str	r6, [r4, #28]
   13020:	mov	r0, r5
   13024:	bl	1638c <argp_parse@@Base+0xa9c>
   13028:	ldr	r2, [r4, #24]
   1302c:	ldr	r3, [r4, #28]
   13030:	sub	r3, r3, r2
   13034:	ldr	r2, [r4, #16]
   13038:	cmp	r3, r2
   1303c:	bls	13048 <putc_unlocked@plt+0x1d50>
   13040:	mov	r0, r4
   13044:	bl	16f28 <argp_parse@@Base+0x1638>
   13048:	ldr	r3, [r4, #20]
   1304c:	ldr	r2, [r4, #4]
   13050:	bic	r3, r3, r3, asr #31
   13054:	cmp	r2, r3
   13058:	bcc	1317c <putc_unlocked@plt+0x1e84>
   1305c:	mov	r7, #1
   13060:	ldr	r3, [sp, #12]
   13064:	cmp	r3, #0
   13068:	addne	r5, r3, #16
   1306c:	bne	131e8 <putc_unlocked@plt+0x1ef0>
   13070:	mov	r0, r7
   13074:	add	sp, sp, #28
   13078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1307c:	mov	r1, #1
   13080:	mov	r0, r4
   13084:	bl	17378 <argp_parse@@Base+0x1a88>
   13088:	cmp	r0, #0
   1308c:	bne	12eb8 <putc_unlocked@plt+0x1bc0>
   13090:	b	12ecc <putc_unlocked@plt+0x1bd4>
   13094:	mov	r1, r6
   13098:	mov	r0, r4
   1309c:	bl	17378 <argp_parse@@Base+0x1a88>
   130a0:	cmp	r0, #0
   130a4:	bne	12efc <putc_unlocked@plt+0x1c04>
   130a8:	b	12f18 <putc_unlocked@plt+0x1c20>
   130ac:	mov	r0, r5
   130b0:	str	r3, [sp, #20]
   130b4:	bl	111c0 <strlen@plt>
   130b8:	subs	r7, r0, #0
   130bc:	beq	12f18 <putc_unlocked@plt+0x1c20>
   130c0:	ldr	r3, [sp, #20]
   130c4:	ldr	r2, [r4, #32]
   130c8:	add	r3, r3, r7
   130cc:	cmp	r2, r3
   130d0:	bcc	130f4 <putc_unlocked@plt+0x1dfc>
   130d4:	mov	r2, r7
   130d8:	mov	r1, r5
   130dc:	ldr	r0, [r4, #28]
   130e0:	bl	110ac <memcpy@plt>
   130e4:	ldr	r3, [r4, #28]
   130e8:	add	r7, r3, r7
   130ec:	str	r7, [r4, #28]
   130f0:	b	12f18 <putc_unlocked@plt+0x1c20>
   130f4:	mov	r1, r7
   130f8:	mov	r0, r4
   130fc:	bl	17378 <argp_parse@@Base+0x1a88>
   13100:	cmp	r0, #0
   13104:	bne	130d4 <putc_unlocked@plt+0x1ddc>
   13108:	b	12f18 <putc_unlocked@plt+0x1c20>
   1310c:	ldr	r2, [r4, #28]
   13110:	ldr	r3, [r4, #32]
   13114:	cmp	r2, r3
   13118:	bcs	13134 <putc_unlocked@plt+0x1e3c>
   1311c:	ldr	r3, [r4, #28]
   13120:	add	r2, r3, #1
   13124:	str	r2, [r4, #28]
   13128:	mov	r2, #10
   1312c:	strb	r2, [r3]
   13130:	b	12f4c <putc_unlocked@plt+0x1c54>
   13134:	mov	r1, #1
   13138:	mov	r0, r4
   1313c:	bl	17378 <argp_parse@@Base+0x1a88>
   13140:	cmp	r0, #0
   13144:	bne	1311c <putc_unlocked@plt+0x1e24>
   13148:	b	12f4c <putc_unlocked@plt+0x1c54>
   1314c:	mov	r1, #1
   13150:	mov	r0, r4
   13154:	bl	17378 <argp_parse@@Base+0x1a88>
   13158:	cmp	r0, #0
   1315c:	bne	12fcc <putc_unlocked@plt+0x1cd4>
   13160:	b	12fe0 <putc_unlocked@plt+0x1ce8>
   13164:	mov	r1, r6
   13168:	mov	r0, r4
   1316c:	bl	17378 <argp_parse@@Base+0x1a88>
   13170:	cmp	r0, #0
   13174:	bne	13004 <putc_unlocked@plt+0x1d0c>
   13178:	b	13020 <putc_unlocked@plt+0x1d28>
   1317c:	ldr	r2, [r4, #28]
   13180:	ldr	r3, [r4, #32]
   13184:	cmp	r2, r3
   13188:	bcs	131a4 <putc_unlocked@plt+0x1eac>
   1318c:	ldr	r3, [r4, #28]
   13190:	add	r2, r3, #1
   13194:	str	r2, [r4, #28]
   13198:	mov	r2, #10
   1319c:	strb	r2, [r3]
   131a0:	b	1305c <putc_unlocked@plt+0x1d64>
   131a4:	mov	r1, #1
   131a8:	mov	r0, r4
   131ac:	bl	17378 <argp_parse@@Base+0x1a88>
   131b0:	cmp	r0, #0
   131b4:	bne	1318c <putc_unlocked@plt+0x1e94>
   131b8:	b	1305c <putc_unlocked@plt+0x1d64>
   131bc:	ldr	r3, [sp, #8]
   131c0:	str	r4, [sp, #4]
   131c4:	orrs	r3, r7, r3
   131c8:	ldr	r3, [sp, #64]	; 0x40
   131cc:	mov	r2, fp
   131d0:	str	r3, [sp]
   131d4:	ldr	r1, [sp, #16]
   131d8:	movne	r3, #1
   131dc:	moveq	r3, #0
   131e0:	bl	12dbc <putc_unlocked@plt+0x1ac4>
   131e4:	orr	r7, r7, r0
   131e8:	ldr	r0, [r5, #-16]
   131ec:	cmp	r0, #0
   131f0:	beq	13070 <putc_unlocked@plt+0x1d78>
   131f4:	ldr	r3, [sp, #64]	; 0x40
   131f8:	add	r5, r5, #16
   131fc:	cmp	r7, #0
   13200:	cmpne	r3, #0
   13204:	beq	131bc <putc_unlocked@plt+0x1ec4>
   13208:	b	13070 <putc_unlocked@plt+0x1d78>
   1320c:	andeq	r0, r0, #2
   13210:	andeq	r0, r0, #1
   13214:	andeq	r0, r0, #4
   13218:	ldr	r2, [r0, #24]
   1321c:	ldr	r3, [r0, #28]
   13220:	push	{r4, r5, r6, lr}
   13224:	sub	r3, r3, r2
   13228:	ldr	r2, [r0, #16]
   1322c:	mov	r4, r0
   13230:	cmp	r3, r2
   13234:	mov	r5, r1
   13238:	bls	13240 <putc_unlocked@plt+0x1f48>
   1323c:	bl	16f28 <argp_parse@@Base+0x1638>
   13240:	ldr	r1, [r4, #20]
   13244:	ldr	r3, [r4, #8]
   13248:	cmp	r1, #0
   1324c:	addge	r5, r5, r1
   13250:	cmp	r5, r3
   13254:	ldr	r2, [r4, #28]
   13258:	ldr	r3, [r4, #32]
   1325c:	bcc	13298 <putc_unlocked@plt+0x1fa0>
   13260:	cmp	r2, r3
   13264:	bcs	13280 <putc_unlocked@plt+0x1f88>
   13268:	ldr	r3, [r4, #28]
   1326c:	add	r2, r3, #1
   13270:	str	r2, [r4, #28]
   13274:	mov	r2, #10
   13278:	strb	r2, [r3]
   1327c:	pop	{r4, r5, r6, pc}
   13280:	mov	r1, #1
   13284:	mov	r0, r4
   13288:	bl	17378 <argp_parse@@Base+0x1a88>
   1328c:	cmp	r0, #0
   13290:	bne	13268 <putc_unlocked@plt+0x1f70>
   13294:	pop	{r4, r5, r6, pc}
   13298:	cmp	r2, r3
   1329c:	bcs	132b4 <putc_unlocked@plt+0x1fbc>
   132a0:	ldr	r3, [r4, #28]
   132a4:	add	r2, r3, #1
   132a8:	str	r2, [r4, #28]
   132ac:	mov	r2, #32
   132b0:	b	13278 <putc_unlocked@plt+0x1f80>
   132b4:	mov	r1, #1
   132b8:	mov	r0, r4
   132bc:	bl	17378 <argp_parse@@Base+0x1a88>
   132c0:	cmp	r0, #0
   132c4:	bne	132a0 <putc_unlocked@plt+0x1fa8>
   132c8:	pop	{r4, r5, r6, pc}
   132cc:	push	{r4, r5, r6, lr}
   132d0:	ldr	r5, [r0, #8]
   132d4:	ldr	r2, [r0, #12]
   132d8:	ldr	ip, [r1, #12]
   132dc:	cmp	r5, #0
   132e0:	orr	r2, r2, ip
   132e4:	bne	132f4 <putc_unlocked@plt+0x1ffc>
   132e8:	ldr	r5, [r1, #8]
   132ec:	cmp	r5, #0
   132f0:	beq	13320 <putc_unlocked@plt+0x2028>
   132f4:	tst	r2, #16
   132f8:	bne	13320 <putc_unlocked@plt+0x2028>
   132fc:	tst	r2, #1
   13300:	mov	r6, r3
   13304:	mov	r4, r0
   13308:	beq	13328 <putc_unlocked@plt+0x2030>
   1330c:	ldr	r2, [r0, #4]
   13310:	ldr	r1, [pc, #52]	; 1334c <putc_unlocked@plt+0x2054>
   13314:	mov	r3, r5
   13318:	mov	r0, r6
   1331c:	bl	1745c <argp_parse@@Base+0x1b6c>
   13320:	mov	r0, #0
   13324:	pop	{r4, r5, r6, pc}
   13328:	mov	r0, r5
   1332c:	bl	111c0 <strlen@plt>
   13330:	add	r1, r0, #6
   13334:	mov	r0, r6
   13338:	bl	13218 <putc_unlocked@plt+0x1f20>
   1333c:	mov	r3, r5
   13340:	ldr	r2, [r4, #4]
   13344:	ldr	r1, [pc, #4]	; 13350 <putc_unlocked@plt+0x2058>
   13348:	b	13318 <putc_unlocked@plt+0x2020>
   1334c:	strdeq	r8, [r1], -r5
   13350:	andeq	r8, r1, r0, lsl #20
   13354:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13358:	mov	r6, r3
   1335c:	sub	sp, sp, #36	; 0x24
   13360:	ldr	r3, [r0, #16]
   13364:	str	r1, [sp, #20]
   13368:	str	r3, [sp, #12]
   1336c:	ldr	r3, [r0, #8]
   13370:	ldr	sl, [r2]
   13374:	str	r3, [sp, #16]
   13378:	mov	fp, r2
   1337c:	mov	r3, r1
   13380:	mov	r2, r0
   13384:	ldr	r1, [pc, #404]	; 13520 <putc_unlocked@plt+0x2228>
   13388:	ldr	r0, [sp, #16]
   1338c:	ldr	r5, [sp, #72]	; 0x48
   13390:	bl	12a20 <putc_unlocked@plt+0x1728>
   13394:	subs	r8, r0, #0
   13398:	moveq	r7, r8
   1339c:	moveq	r4, r8
   133a0:	beq	13434 <putc_unlocked@plt+0x213c>
   133a4:	mov	r1, #10
   133a8:	bl	1107c <strchrnul@plt>
   133ac:	ldrb	r4, [r0]
   133b0:	mov	r7, r0
   133b4:	cmp	r4, #0
   133b8:	moveq	r9, r8
   133bc:	beq	133e8 <putc_unlocked@plt+0x20f0>
   133c0:	ldrb	r3, [sl]
   133c4:	mov	r9, r8
   133c8:	mov	r4, #0
   133cc:	mov	r2, #10
   133d0:	cmp	r4, r3
   133d4:	blt	134a4 <putc_unlocked@plt+0x21ac>
   133d8:	ldr	r3, [fp]
   133dc:	mov	r4, #1
   133e0:	add	r3, r3, #1
   133e4:	str	r3, [fp]
   133e8:	add	r1, r7, #1
   133ec:	sub	r1, r1, r9
   133f0:	mov	r0, r5
   133f4:	bl	13218 <putc_unlocked@plt+0x1f20>
   133f8:	ldr	r2, [r5, #28]
   133fc:	sub	r3, r7, r9
   13400:	ldr	r1, [r5, #32]
   13404:	add	r2, r2, r3
   13408:	cmp	r1, r2
   1340c:	bcc	134d0 <putc_unlocked@plt+0x21d8>
   13410:	mov	r2, r3
   13414:	mov	r1, r9
   13418:	ldr	r0, [r5, #28]
   1341c:	str	r3, [sp, #24]
   13420:	bl	110ac <memcpy@plt>
   13424:	ldr	r2, [r5, #28]
   13428:	ldr	r3, [sp, #24]
   1342c:	add	r3, r2, r3
   13430:	str	r3, [r5, #28]
   13434:	ldr	r3, [sp, #16]
   13438:	cmp	r8, #0
   1343c:	cmpne	r3, r8
   13440:	beq	1344c <putc_unlocked@plt+0x2154>
   13444:	mov	r0, r8
   13448:	bl	1638c <argp_parse@@Base+0xa9c>
   1344c:	ldr	r3, [sp, #12]
   13450:	cmp	r3, #0
   13454:	addne	r8, r3, #16
   13458:	bne	1350c <putc_unlocked@plt+0x2214>
   1345c:	cmp	r6, #0
   13460:	moveq	r4, #0
   13464:	andne	r4, r4, #1
   13468:	cmp	r4, #0
   1346c:	beq	13494 <putc_unlocked@plt+0x219c>
   13470:	ldrb	r2, [r7]
   13474:	ldrb	r3, [sl]
   13478:	cmp	r2, #0
   1347c:	addne	r3, r3, #1
   13480:	strbne	r3, [sl]
   13484:	movne	r6, #0
   13488:	bne	13494 <putc_unlocked@plt+0x219c>
   1348c:	cmp	r3, #0
   13490:	strbne	r2, [sl]
   13494:	clz	r0, r6
   13498:	lsr	r0, r0, #5
   1349c:	add	sp, sp, #36	; 0x24
   134a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134a4:	add	r9, r7, #1
   134a8:	mov	r1, r2
   134ac:	mov	r0, r9
   134b0:	str	r3, [sp, #28]
   134b4:	str	r2, [sp, #24]
   134b8:	bl	1107c <strchrnul@plt>
   134bc:	add	r4, r4, #1
   134c0:	ldr	r3, [sp, #28]
   134c4:	ldr	r2, [sp, #24]
   134c8:	mov	r7, r0
   134cc:	b	133d0 <putc_unlocked@plt+0x20d8>
   134d0:	mov	r1, r3
   134d4:	mov	r0, r5
   134d8:	str	r3, [sp, #24]
   134dc:	bl	17378 <argp_parse@@Base+0x1a88>
   134e0:	ldr	r3, [sp, #24]
   134e4:	cmp	r0, #0
   134e8:	bne	13410 <putc_unlocked@plt+0x2118>
   134ec:	b	13434 <putc_unlocked@plt+0x213c>
   134f0:	mov	r3, r6
   134f4:	str	r5, [sp]
   134f8:	mov	r2, fp
   134fc:	ldr	r1, [sp, #20]
   13500:	bl	13354 <putc_unlocked@plt+0x205c>
   13504:	clz	r6, r0
   13508:	lsr	r6, r6, #5
   1350c:	add	r8, r8, #16
   13510:	ldr	r0, [r8, #-32]	; 0xffffffe0
   13514:	cmp	r0, #0
   13518:	bne	134f0 <putc_unlocked@plt+0x21f8>
   1351c:	b	1345c <putc_unlocked@plt+0x2164>
   13520:	andeq	r0, r0, #6
   13524:	ldr	r2, [r0, #8]
   13528:	cmp	r2, #0
   1352c:	bne	13560 <putc_unlocked@plt+0x2268>
   13530:	ldr	r2, [r1, #8]
   13534:	cmp	r2, #0
   13538:	bne	13560 <putc_unlocked@plt+0x2268>
   1353c:	ldr	r1, [r1, #12]
   13540:	ldr	r2, [r0, #12]
   13544:	orr	r2, r2, r1
   13548:	tst	r2, #16
   1354c:	ldreq	r2, [r3]
   13550:	addeq	r1, r2, #1
   13554:	streq	r1, [r3]
   13558:	ldreq	r3, [r0, #4]
   1355c:	strbeq	r3, [r2]
   13560:	mov	r0, #0
   13564:	bx	lr
   13568:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1356c:	add	fp, sp, #32
   13570:	sub	sp, sp, #12
   13574:	ldr	r6, [r0, #4]
   13578:	cmp	r6, #0
   1357c:	beq	13620 <putc_unlocked@plt+0x2328>
   13580:	mov	r5, r0
   13584:	ldr	r0, [r0, #8]
   13588:	mov	r4, r1
   1358c:	bl	111c0 <strlen@plt>
   13590:	ldr	sl, [pc, #324]	; 136dc <putc_unlocked@plt+0x23e4>
   13594:	ldr	r7, [r5]
   13598:	sub	r9, fp, #36	; 0x24
   1359c:	add	r0, r0, #15
   135a0:	bic	r0, r0, #7
   135a4:	sub	sp, sp, r0
   135a8:	mov	r8, sp
   135ac:	str	sp, [r9, #-4]!
   135b0:	ldr	r2, [r7, #20]
   135b4:	mov	r0, r7
   135b8:	mov	r3, r9
   135bc:	ldr	r2, [r2, #24]
   135c0:	mov	r1, sl
   135c4:	bl	1275c <putc_unlocked@plt+0x1464>
   135c8:	subs	r6, r6, #1
   135cc:	add	r7, r7, #28
   135d0:	bne	135b0 <putc_unlocked@plt+0x22b8>
   135d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   135d8:	cmp	r8, r3
   135dc:	bcs	135fc <putc_unlocked@plt+0x2304>
   135e0:	add	r2, r3, #1
   135e4:	str	r2, [fp, #-40]	; 0xffffffd8
   135e8:	ldr	r1, [pc, #240]	; 136e0 <putc_unlocked@plt+0x23e8>
   135ec:	strb	r6, [r3]
   135f0:	mov	r2, r8
   135f4:	mov	r0, r4
   135f8:	bl	1745c <argp_parse@@Base+0x1b6c>
   135fc:	ldm	r5, {r6, r7}
   13600:	ldr	r8, [pc, #220]	; 136e4 <putc_unlocked@plt+0x23ec>
   13604:	cmp	r7, #0
   13608:	bne	13628 <putc_unlocked@plt+0x2330>
   1360c:	ldm	r5, {r5, r8}
   13610:	ldr	sl, [pc, #208]	; 136e8 <putc_unlocked@plt+0x23f0>
   13614:	add	r5, r5, #28
   13618:	cmp	r8, #0
   1361c:	bne	1364c <putc_unlocked@plt+0x2354>
   13620:	sub	sp, fp, #32
   13624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13628:	ldr	r2, [r6, #20]
   1362c:	mov	r0, r6
   13630:	mov	r3, r4
   13634:	ldr	r2, [r2, #24]
   13638:	mov	r1, r8
   1363c:	bl	1275c <putc_unlocked@plt+0x1464>
   13640:	add	r6, r6, #28
   13644:	sub	r7, r7, #1
   13648:	b	13604 <putc_unlocked@plt+0x230c>
   1364c:	ldr	r7, [r5, #-28]	; 0xffffffe4
   13650:	ldr	r9, [r5, #-24]	; 0xffffffe8
   13654:	mov	r6, r7
   13658:	cmp	r9, #0
   1365c:	subeq	r8, r8, #1
   13660:	addeq	r5, r5, #28
   13664:	beq	13618 <putc_unlocked@plt+0x2320>
   13668:	ldr	r2, [r6]
   1366c:	cmp	r2, #0
   13670:	beq	136c0 <putc_unlocked@plt+0x23c8>
   13674:	ldr	r1, [r6, #12]
   13678:	tst	r1, #4
   1367c:	moveq	r7, r6
   13680:	tst	r1, #2
   13684:	bne	136c0 <putc_unlocked@plt+0x23c8>
   13688:	ldr	r3, [r6, #8]
   1368c:	ldr	r0, [r7, #12]
   13690:	cmp	r3, #0
   13694:	orr	r1, r1, r0
   13698:	ldreq	r3, [r7, #8]
   1369c:	tst	r1, #16
   136a0:	bne	136c0 <putc_unlocked@plt+0x23c8>
   136a4:	cmp	r3, #0
   136a8:	beq	136cc <putc_unlocked@plt+0x23d4>
   136ac:	tst	r1, #1
   136b0:	movne	r1, sl
   136b4:	ldreq	r1, [pc, #48]	; 136ec <putc_unlocked@plt+0x23f4>
   136b8:	mov	r0, r4
   136bc:	bl	1745c <argp_parse@@Base+0x1b6c>
   136c0:	add	r6, r6, #24
   136c4:	sub	r9, r9, #1
   136c8:	b	13658 <putc_unlocked@plt+0x2360>
   136cc:	ldr	r1, [pc, #28]	; 136f0 <putc_unlocked@plt+0x23f8>
   136d0:	mov	r0, r4
   136d4:	bl	1745c <argp_parse@@Base+0x1b6c>
   136d8:	b	136c0 <putc_unlocked@plt+0x23c8>
   136dc:	andeq	r3, r1, r4, lsr #10
   136e0:	andeq	r8, r1, r9, lsl #20
   136e4:	andeq	r3, r1, ip, asr #5
   136e8:	andeq	r8, r1, r0, lsl sl
   136ec:	andeq	r8, r1, sp, lsl sl
   136f0:	andeq	r8, r1, r8, lsr #20
   136f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136f8:	mov	r8, r1
   136fc:	ldm	r0, {r5, r6}
   13700:	cmp	r6, #0
   13704:	bne	1370c <putc_unlocked@plt+0x2414>
   13708:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1370c:	ldm	r5, {r4, r9}
   13710:	mov	r7, #0
   13714:	add	r4, r4, #24
   13718:	cmp	r9, r7
   1371c:	subeq	r6, r6, #1
   13720:	addeq	r5, r5, #28
   13724:	beq	13700 <putc_unlocked@plt+0x2408>
   13728:	ldr	r0, [r4, #-24]	; 0xffffffe8
   1372c:	cmp	r0, #0
   13730:	beq	13750 <putc_unlocked@plt+0x2458>
   13734:	ldr	r3, [r4, #-12]
   13738:	tst	r3, #2
   1373c:	bne	13750 <putc_unlocked@plt+0x2458>
   13740:	mov	r1, r8
   13744:	bl	11028 <strcmp@plt>
   13748:	cmp	r0, #0
   1374c:	beq	1375c <putc_unlocked@plt+0x2464>
   13750:	add	r7, r7, #1
   13754:	add	r4, r4, #24
   13758:	b	13718 <putc_unlocked@plt+0x2420>
   1375c:	mvn	r3, #0
   13760:	str	r3, [r5, #12]
   13764:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13768:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1376c:	sub	sp, sp, #44	; 0x2c
   13770:	ldr	r6, [r0, #16]
   13774:	str	r0, [sp, #8]
   13778:	ldr	r5, [r0]
   1377c:	mov	r0, #16
   13780:	mov	r9, r1
   13784:	bl	16e14 <argp_parse@@Base+0x1524>
   13788:	subs	r4, r0, #0
   1378c:	bne	137a4 <putc_unlocked@plt+0x24ac>
   13790:	ldr	r3, [pc, #1444]	; 13d3c <putc_unlocked@plt+0x2a44>
   13794:	ldr	r2, [pc, #1444]	; 13d40 <putc_unlocked@plt+0x2a48>
   13798:	ldr	r1, [pc, #1444]	; 13d44 <putc_unlocked@plt+0x2a4c>
   1379c:	ldr	r0, [pc, #1444]	; 13d48 <putc_unlocked@plt+0x2a50>
   137a0:	bl	112ec <__assert_fail@plt>
   137a4:	mov	r3, #0
   137a8:	cmp	r5, r3
   137ac:	str	r3, [r4, #4]
   137b0:	str	r3, [r4, #12]
   137b4:	beq	13d08 <putc_unlocked@plt+0x2a10>
   137b8:	ldr	r8, [r5, #12]
   137bc:	ands	r8, r8, #4
   137c0:	addeq	r7, r5, #24
   137c4:	moveq	fp, r8
   137c8:	beq	13b70 <putc_unlocked@plt+0x2878>
   137cc:	ldr	r3, [pc, #1384]	; 13d3c <putc_unlocked@plt+0x2a44>
   137d0:	mov	r2, #460	; 0x1cc
   137d4:	ldr	r1, [pc, #1384]	; 13d44 <putc_unlocked@plt+0x2a4c>
   137d8:	ldr	r0, [pc, #1388]	; 13d4c <putc_unlocked@plt+0x2a54>
   137dc:	b	137a0 <putc_unlocked@plt+0x24a8>
   137e0:	ldr	r2, [pc, #1384]	; 13d50 <putc_unlocked@plt+0x2a58>
   137e4:	ldr	r0, [r4, #4]
   137e8:	cmp	r0, r2
   137ec:	addls	r7, r7, #28
   137f0:	movls	sl, r3
   137f4:	movls	r2, r1
   137f8:	bls	13cd4 <putc_unlocked@plt+0x29dc>
   137fc:	ldr	r3, [pc, #1336]	; 13d3c <putc_unlocked@plt+0x2a44>
   13800:	mov	r2, #476	; 0x1dc
   13804:	ldr	r1, [pc, #1336]	; 13d44 <putc_unlocked@plt+0x2a4c>
   13808:	ldr	r0, [pc, #1348]	; 13d54 <putc_unlocked@plt+0x2a5c>
   1380c:	b	137a0 <putc_unlocked@plt+0x24a8>
   13810:	ldrb	r0, [r0]
   13814:	add	r1, r1, #1
   13818:	cmp	r0, r8
   1381c:	beq	13c98 <putc_unlocked@plt+0x29a0>
   13820:	cmp	sl, r1
   13824:	mov	r0, r1
   13828:	bhi	13810 <putc_unlocked@plt+0x2518>
   1382c:	strb	r8, [sl]
   13830:	add	sl, sl, #1
   13834:	b	13c98 <putc_unlocked@plt+0x29a0>
   13838:	ldr	r8, [r6, #-4]
   1383c:	ldr	r7, [r6, #-8]
   13840:	cmp	r8, #0
   13844:	bne	13854 <putc_unlocked@plt+0x255c>
   13848:	cmp	r7, #0
   1384c:	moveq	r1, r9
   13850:	beq	138b0 <putc_unlocked@plt+0x25b8>
   13854:	ldr	r3, [sp, #8]
   13858:	sub	r5, r6, #16
   1385c:	mov	r0, #28
   13860:	ldr	r3, [r3, #16]
   13864:	sub	r5, r5, r3
   13868:	bl	16e14 <argp_parse@@Base+0x1524>
   1386c:	asr	r5, r5, #4
   13870:	subs	r1, r0, #0
   13874:	beq	138b0 <putc_unlocked@plt+0x25b8>
   13878:	ldr	r3, [sp, #8]
   1387c:	cmp	r9, #0
   13880:	str	r3, [r1, #16]
   13884:	ldrne	r3, [r9, #20]
   13888:	moveq	r3, #0
   1388c:	addne	r3, r3, #1
   13890:	str	r3, [r1, #20]
   13894:	ldr	r3, [r4, #12]
   13898:	str	r8, [r1, #8]
   1389c:	str	r7, [r1]
   138a0:	str	r5, [r1, #4]
   138a4:	str	r9, [r1, #12]
   138a8:	str	r3, [r1, #24]
   138ac:	str	r1, [r4, #12]
   138b0:	ldr	r0, [r6, #-16]
   138b4:	bl	13768 <putc_unlocked@plt+0x2470>
   138b8:	ldr	r2, [sp, #28]
   138bc:	ldr	r3, [r4, #12]
   138c0:	mov	r5, r0
   138c4:	cmp	r3, #0
   138c8:	bne	13924 <putc_unlocked@plt+0x262c>
   138cc:	ldr	r1, [r5, #12]
   138d0:	str	r1, [r2]
   138d4:	ldr	r2, [r5, #4]
   138d8:	str	r3, [r5, #12]
   138dc:	cmp	r2, #0
   138e0:	beq	13908 <putc_unlocked@plt+0x2610>
   138e4:	ldr	r1, [r4, #4]
   138e8:	cmp	r1, #0
   138ec:	bne	13930 <putc_unlocked@plt+0x2638>
   138f0:	str	r2, [r4, #4]
   138f4:	ldr	r2, [r5]
   138f8:	str	r2, [r4]
   138fc:	ldr	r2, [r5, #8]
   13900:	str	r2, [r4, #8]
   13904:	str	r3, [r5, #4]
   13908:	mov	r0, r5
   1390c:	bl	128f4 <putc_unlocked@plt+0x15fc>
   13910:	add	r6, r6, #16
   13914:	ldr	r3, [r6, #-16]
   13918:	cmp	r3, #0
   1391c:	bne	13838 <putc_unlocked@plt+0x2540>
   13920:	b	13d1c <putc_unlocked@plt+0x2a24>
   13924:	add	r2, r3, #24
   13928:	ldr	r3, [r3, #24]
   1392c:	b	138c4 <putc_unlocked@plt+0x25cc>
   13930:	add	r3, r2, r1
   13934:	mov	r7, #28
   13938:	str	r3, [sp, #12]
   1393c:	mul	r0, r7, r3
   13940:	bl	16e14 <argp_parse@@Base+0x1524>
   13944:	str	r0, [sp]
   13948:	ldr	r0, [r4, #8]
   1394c:	bl	111c0 <strlen@plt>
   13950:	mov	fp, r0
   13954:	ldr	r0, [r5, #8]
   13958:	bl	111c0 <strlen@plt>
   1395c:	add	r0, fp, r0
   13960:	add	r0, r0, #1
   13964:	bl	16e14 <argp_parse@@Base+0x1524>
   13968:	ldr	r3, [sp]
   1396c:	cmp	r3, #0
   13970:	cmpne	r0, #0
   13974:	mov	r8, r0
   13978:	ldreq	r3, [pc, #984]	; 13d58 <putc_unlocked@plt+0x2a60>
   1397c:	ldreq	r2, [pc, #984]	; 13d5c <putc_unlocked@plt+0x2a64>
   13980:	ldreq	r1, [pc, #956]	; 13d44 <putc_unlocked@plt+0x2a4c>
   13984:	ldreq	r0, [pc, #980]	; 13d60 <putc_unlocked@plt+0x2a68>
   13988:	beq	137a0 <putc_unlocked@plt+0x24a8>
   1398c:	ldr	r3, [sp, #12]
   13990:	ldr	r2, [pc, #952]	; 13d50 <putc_unlocked@plt+0x2a58>
   13994:	cmp	r3, r2
   13998:	ldrhi	r3, [pc, #952]	; 13d58 <putc_unlocked@plt+0x2a60>
   1399c:	movhi	r2, #972	; 0x3cc
   139a0:	ldrhi	r1, [pc, #924]	; 13d44 <putc_unlocked@plt+0x2a4c>
   139a4:	ldrhi	r0, [pc, #952]	; 13d64 <putc_unlocked@plt+0x2a6c>
   139a8:	bhi	137a0 <putc_unlocked@plt+0x24a8>
   139ac:	ldr	sl, [r4, #4]
   139b0:	ldr	r3, [r4]
   139b4:	ldr	r0, [sp]
   139b8:	str	r3, [sp, #16]
   139bc:	mul	r3, r7, sl
   139c0:	ldr	r1, [sp, #16]
   139c4:	mov	r2, r3
   139c8:	str	r3, [sp, #24]
   139cc:	bl	11190 <mempcpy@plt>
   139d0:	ldr	r3, [r5, #4]
   139d4:	ldr	r1, [r5]
   139d8:	str	r3, [sp, #4]
   139dc:	mul	r2, r7, r3
   139e0:	bl	110ac <memcpy@plt>
   139e4:	ldr	r3, [r4, #8]
   139e8:	mov	r2, fp
   139ec:	mov	r1, r3
   139f0:	mov	r0, r8
   139f4:	str	r3, [sp, #20]
   139f8:	bl	110ac <memcpy@plt>
   139fc:	ldr	r1, [sp]
   13a00:	ldr	r3, [sp, #20]
   13a04:	cmp	sl, #0
   13a08:	bne	13a64 <putc_unlocked@plt+0x276c>
   13a0c:	add	r3, r8, fp
   13a10:	str	r3, [sp, #20]
   13a14:	ldr	r3, [sp, #24]
   13a18:	ldr	r1, [r5, #8]
   13a1c:	add	r7, r3, #28
   13a20:	ldr	r3, [sp]
   13a24:	ldr	sl, [sp, #20]
   13a28:	add	r7, r3, r7
   13a2c:	ldr	r3, [sp, #4]
   13a30:	cmp	r3, #0
   13a34:	bne	13a80 <putc_unlocked@plt+0x2788>
   13a38:	ldrb	r3, [sp, #4]
   13a3c:	ldr	r0, [sp, #16]
   13a40:	strb	r3, [sl]
   13a44:	bl	1638c <argp_parse@@Base+0xa9c>
   13a48:	ldr	r0, [r4, #8]
   13a4c:	bl	1638c <argp_parse@@Base+0xa9c>
   13a50:	ldr	r3, [sp]
   13a54:	str	r3, [r4]
   13a58:	ldr	r3, [sp, #12]
   13a5c:	stmib	r4, {r3, r8}
   13a60:	b	13908 <putc_unlocked@plt+0x2610>
   13a64:	ldr	r2, [r1, #8]
   13a68:	sub	sl, sl, #1
   13a6c:	sub	r2, r2, r3
   13a70:	add	r2, r8, r2
   13a74:	str	r2, [r1, #8]
   13a78:	add	r1, r1, #28
   13a7c:	b	13a04 <putc_unlocked@plt+0x270c>
   13a80:	ldr	r3, [r7, #-24]	; 0xffffffe8
   13a84:	ldr	fp, [r7, #-28]	; 0xffffffe4
   13a88:	str	sl, [r7, #-20]	; 0xffffffec
   13a8c:	cmp	r3, #0
   13a90:	ldreq	r3, [sp, #4]
   13a94:	addeq	r7, r7, #28
   13a98:	subeq	r3, r3, #1
   13a9c:	streq	r3, [sp, #4]
   13aa0:	beq	13a2c <putc_unlocked@plt+0x2734>
   13aa4:	ldr	r2, [fp, #12]
   13aa8:	tst	r2, #8
   13aac:	bne	13af0 <putc_unlocked@plt+0x27f8>
   13ab0:	ldr	r2, [fp, #4]
   13ab4:	sub	r0, r2, #1
   13ab8:	cmp	r0, #254	; 0xfe
   13abc:	str	r2, [sp, #36]	; 0x24
   13ac0:	bhi	13af0 <putc_unlocked@plt+0x27f8>
   13ac4:	str	r3, [sp, #32]
   13ac8:	str	r1, [sp, #24]
   13acc:	bl	1119c <__ctype_b_loc@plt>
   13ad0:	ldr	r2, [sp, #36]	; 0x24
   13ad4:	ldr	r1, [sp, #24]
   13ad8:	ldr	r3, [sp, #32]
   13adc:	ldr	ip, [r0]
   13ae0:	lsl	r0, r2, #1
   13ae4:	ldrh	r0, [ip, r0]
   13ae8:	tst	r0, #16384	; 0x4000
   13aec:	bne	13d28 <putc_unlocked@plt+0x2a30>
   13af0:	add	fp, fp, #24
   13af4:	sub	r3, r3, #1
   13af8:	b	13a8c <putc_unlocked@plt+0x2794>
   13afc:	ldrb	ip, [ip]
   13b00:	add	r2, r2, #1
   13b04:	cmp	ip, r0
   13b08:	beq	13b24 <putc_unlocked@plt+0x282c>
   13b0c:	ldr	lr, [sp, #20]
   13b10:	mov	ip, r2
   13b14:	cmp	lr, r2
   13b18:	bhi	13afc <putc_unlocked@plt+0x2804>
   13b1c:	strb	r0, [sl]
   13b20:	add	sl, sl, #1
   13b24:	add	r1, r1, #1
   13b28:	b	13af0 <putc_unlocked@plt+0x27f8>
   13b2c:	ldr	r1, [r7, #-12]
   13b30:	tst	r1, #4
   13b34:	ldreq	r2, [r4, #4]
   13b38:	addeq	r2, r2, #1
   13b3c:	streq	r2, [r4, #4]
   13b40:	tst	r1, #8
   13b44:	bne	13b6c <putc_unlocked@plt+0x2874>
   13b48:	sub	r2, sl, #1
   13b4c:	cmp	r2, #254	; 0xfe
   13b50:	bhi	13b6c <putc_unlocked@plt+0x2874>
   13b54:	bl	1119c <__ctype_b_loc@plt>
   13b58:	lsl	sl, sl, #1
   13b5c:	ldr	r2, [r0]
   13b60:	ldrh	r2, [r2, sl]
   13b64:	tst	r2, #16384	; 0x4000
   13b68:	addne	fp, fp, #1
   13b6c:	add	r7, r7, #24
   13b70:	ldr	sl, [r7, #-20]	; 0xffffffec
   13b74:	cmp	sl, #0
   13b78:	bne	13b2c <putc_unlocked@plt+0x2834>
   13b7c:	ldr	r2, [r7, #-24]	; 0xffffffe8
   13b80:	cmp	r2, #0
   13b84:	bne	13b2c <putc_unlocked@plt+0x2834>
   13b88:	ldr	r2, [r7, #-8]
   13b8c:	cmp	r2, #0
   13b90:	bne	13b2c <putc_unlocked@plt+0x2834>
   13b94:	ldr	r1, [r7, #-4]
   13b98:	cmp	r1, #0
   13b9c:	bne	13b2c <putc_unlocked@plt+0x2834>
   13ba0:	ldr	r2, [r4, #4]
   13ba4:	mov	r0, #28
   13ba8:	str	r1, [sp]
   13bac:	mul	r0, r0, r2
   13bb0:	bl	16e14 <argp_parse@@Base+0x1524>
   13bb4:	str	r0, [r4]
   13bb8:	add	r0, fp, #1
   13bbc:	bl	16e14 <argp_parse@@Base+0x1524>
   13bc0:	ldr	r7, [r4]
   13bc4:	ldr	r1, [sp]
   13bc8:	cmp	r0, #0
   13bcc:	cmpne	r7, #0
   13bd0:	mov	r3, r0
   13bd4:	str	r0, [r4, #8]
   13bd8:	bne	137e0 <putc_unlocked@plt+0x24e8>
   13bdc:	ldr	r3, [pc, #344]	; 13d3c <putc_unlocked@plt+0x2a44>
   13be0:	ldr	r2, [pc, #384]	; 13d68 <putc_unlocked@plt+0x2a70>
   13be4:	ldr	r1, [pc, #344]	; 13d44 <putc_unlocked@plt+0x2a4c>
   13be8:	ldr	r0, [pc, #380]	; 13d6c <putc_unlocked@plt+0x2a74>
   13bec:	b	137a0 <putc_unlocked@plt+0x24a8>
   13bf0:	uxtb	r8, r8
   13bf4:	mov	r1, r3
   13bf8:	b	13820 <putc_unlocked@plt+0x2528>
   13bfc:	ldr	r1, [r5, #12]
   13c00:	tst	r1, #4
   13c04:	bne	13c48 <putc_unlocked@plt+0x2950>
   13c08:	b	13ccc <putc_unlocked@plt+0x29d4>
   13c0c:	str	r2, [r7, #-24]	; 0xffffffe8
   13c10:	ldr	fp, [r5, #20]
   13c14:	str	r5, [r7, #-28]	; 0xffffffe4
   13c18:	cmp	fp, #0
   13c1c:	str	sl, [r7, #-20]	; 0xffffffec
   13c20:	bne	13c38 <putc_unlocked@plt+0x2940>
   13c24:	ldr	r1, [r5]
   13c28:	cmp	r1, #0
   13c2c:	cmpeq	r0, #0
   13c30:	addeq	fp, r8, #1
   13c34:	movne	fp, r8
   13c38:	ldr	r1, [sp, #8]
   13c3c:	str	fp, [r7, #-16]
   13c40:	str	r9, [r7, #-12]
   13c44:	str	r1, [r7, #-8]
   13c48:	ldr	r1, [r7, #-24]	; 0xffffffe8
   13c4c:	add	r1, r1, #1
   13c50:	str	r1, [r7, #-24]	; 0xffffffe8
   13c54:	ldr	r1, [r5, #12]
   13c58:	tst	r1, #8
   13c5c:	bne	13c98 <putc_unlocked@plt+0x29a0>
   13c60:	ldr	r8, [r5, #4]
   13c64:	sub	r1, r8, #1
   13c68:	cmp	r1, #254	; 0xfe
   13c6c:	bhi	13c98 <putc_unlocked@plt+0x29a0>
   13c70:	str	r2, [sp, #4]
   13c74:	str	r3, [sp]
   13c78:	bl	1119c <__ctype_b_loc@plt>
   13c7c:	lsl	r1, r8, #1
   13c80:	ldr	r3, [sp]
   13c84:	ldr	r2, [sp, #4]
   13c88:	ldr	r0, [r0]
   13c8c:	ldrh	r1, [r0, r1]
   13c90:	tst	r1, #16384	; 0x4000
   13c94:	bne	13bf0 <putc_unlocked@plt+0x28f8>
   13c98:	add	r5, r5, #24
   13c9c:	ldr	r1, [r5, #4]
   13ca0:	cmp	r1, #0
   13ca4:	bne	13bfc <putc_unlocked@plt+0x2904>
   13ca8:	ldr	r1, [r5]
   13cac:	cmp	r1, #0
   13cb0:	bne	13bfc <putc_unlocked@plt+0x2904>
   13cb4:	ldr	r1, [r5, #16]
   13cb8:	cmp	r1, #0
   13cbc:	bne	13bfc <putc_unlocked@plt+0x2904>
   13cc0:	ldr	r1, [r5, #20]
   13cc4:	cmp	r1, #0
   13cc8:	bne	13bfc <putc_unlocked@plt+0x2904>
   13ccc:	add	r7, r7, #28
   13cd0:	mov	r8, fp
   13cd4:	ldr	r0, [r5, #4]
   13cd8:	cmp	r0, #0
   13cdc:	bne	13c0c <putc_unlocked@plt+0x2914>
   13ce0:	ldr	r1, [r5]
   13ce4:	cmp	r1, #0
   13ce8:	bne	13c0c <putc_unlocked@plt+0x2914>
   13cec:	ldr	r1, [r5, #16]
   13cf0:	cmp	r1, #0
   13cf4:	bne	13c0c <putc_unlocked@plt+0x2914>
   13cf8:	ldr	r1, [r5, #20]
   13cfc:	cmp	r1, #0
   13d00:	bne	13c0c <putc_unlocked@plt+0x2914>
   13d04:	strb	r1, [sl]
   13d08:	cmp	r6, #0
   13d0c:	addne	r3, r4, #12
   13d10:	addne	r6, r6, #16
   13d14:	strne	r3, [sp, #28]
   13d18:	bne	13914 <putc_unlocked@plt+0x261c>
   13d1c:	mov	r0, r4
   13d20:	add	sp, sp, #44	; 0x2c
   13d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d28:	ldrb	r0, [r1]
   13d2c:	cmp	r0, r2
   13d30:	moveq	r2, r8
   13d34:	bne	13af0 <putc_unlocked@plt+0x27f8>
   13d38:	b	13b0c <putc_unlocked@plt+0x2814>
   13d3c:	andeq	r8, r1, lr, asr #18
   13d40:	andeq	r0, r0, r2, asr #3
   13d44:	andeq	r8, r1, r0, lsr sl
   13d48:	andeq	r8, r1, ip, lsr sl
   13d4c:	andeq	r8, r1, r0, asr #20
   13d50:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   13d54:	andeq	r8, r1, r3, ror sl
   13d58:	andeq	r8, r1, r7, asr r9
   13d5c:	andeq	r0, r0, sl, asr #7
   13d60:	andeq	r8, r1, ip, lsr #21
   13d64:	andeq	r8, r1, r8, ror sl
   13d68:	ldrdeq	r0, [r0], -sl
   13d6c:	andeq	r8, r1, r0, asr sl
   13d70:	push	{r4, r5, r6, lr}
   13d74:	mov	r4, r0
   13d78:	mov	r5, r1
   13d7c:	ldr	r0, [r0, #12]
   13d80:	ldr	r1, [r1, #12]
   13d84:	cmp	r0, r1
   13d88:	bne	13dc0 <putc_unlocked@plt+0x2ac8>
   13d8c:	ldr	r0, [r5, #8]
   13d90:	ldr	r3, [r4, #8]
   13d94:	mvn	r2, r0
   13d98:	lsr	r2, r2, #31
   13d9c:	cmp	r2, r3, lsr #31
   13da0:	subne	r0, r3, r0
   13da4:	subeq	r0, r0, r3
   13da8:	cmp	r0, #0
   13dac:	popne	{r4, r5, r6, pc}
   13db0:	ldr	r0, [r5, #4]
   13db4:	ldr	r3, [r4, #4]
   13db8:	sub	r0, r0, r3
   13dbc:	pop	{r4, r5, r6, pc}
   13dc0:	bl	13d70 <putc_unlocked@plt+0x2a78>
   13dc4:	cmp	r0, #0
   13dc8:	popne	{r4, r5, r6, pc}
   13dcc:	ldr	r0, [r5, #8]
   13dd0:	ldr	r3, [r4, #8]
   13dd4:	mvn	r2, r0
   13dd8:	lsr	r2, r2, #31
   13ddc:	cmp	r2, r3, lsr #31
   13de0:	subne	r0, r3, r0
   13de4:	subeq	r0, r0, r3
   13de8:	cmp	r0, #0
   13dec:	beq	13db0 <putc_unlocked@plt+0x2ab8>
   13df0:	pop	{r4, r5, r6, pc}
   13df4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13df8:	mov	r6, r0
   13dfc:	ldr	r0, [r0, #16]
   13e00:	mov	r5, r1
   13e04:	cmp	r0, #0
   13e08:	movne	r3, r0
   13e0c:	bne	13e1c <putc_unlocked@plt+0x2b24>
   13e10:	ldr	r3, [r6, #12]
   13e14:	b	13e2c <putc_unlocked@plt+0x2b34>
   13e18:	mov	r3, r2
   13e1c:	ldr	r2, [r3, #12]
   13e20:	cmp	r2, #0
   13e24:	bne	13e18 <putc_unlocked@plt+0x2b20>
   13e28:	ldr	r3, [r3, #8]
   13e2c:	ldr	r1, [r5, #16]
   13e30:	cmp	r1, #0
   13e34:	movne	r2, r1
   13e38:	bne	13e48 <putc_unlocked@plt+0x2b50>
   13e3c:	ldr	r4, [r5, #12]
   13e40:	b	13e58 <putc_unlocked@plt+0x2b60>
   13e44:	mov	r2, ip
   13e48:	ldr	ip, [r2, #12]
   13e4c:	cmp	ip, #0
   13e50:	bne	13e44 <putc_unlocked@plt+0x2b4c>
   13e54:	ldr	r4, [r2, #8]
   13e58:	mvn	r2, r4
   13e5c:	lsr	r2, r2, #31
   13e60:	cmp	r2, r3, lsr #31
   13e64:	subne	r4, r3, r4
   13e68:	subeq	r4, r4, r3
   13e6c:	cmp	r4, #0
   13e70:	bne	13ec8 <putc_unlocked@plt+0x2bd0>
   13e74:	adds	r4, r1, #0
   13e78:	movne	r4, #1
   13e7c:	cmp	r0, #0
   13e80:	rsbeq	r4, r4, #0
   13e84:	rsbne	r4, r4, #1
   13e88:	cmp	r4, #0
   13e8c:	bne	13ec8 <putc_unlocked@plt+0x2bd0>
   13e90:	cmp	r0, #0
   13e94:	beq	13f04 <putc_unlocked@plt+0x2c0c>
   13e98:	ldr	r3, [r0, #20]
   13e9c:	ldr	r2, [r1, #20]
   13ea0:	cmp	r3, r2
   13ea4:	ble	13ed4 <putc_unlocked@plt+0x2bdc>
   13ea8:	ldr	r0, [r0, #12]
   13eac:	ldr	r3, [r0, #20]
   13eb0:	cmp	r2, r3
   13eb4:	blt	13ea8 <putc_unlocked@plt+0x2bb0>
   13eb8:	bl	13d70 <putc_unlocked@plt+0x2a78>
   13ebc:	cmp	r0, #0
   13ec0:	movne	r4, r0
   13ec4:	moveq	r4, #1
   13ec8:	mov	r0, r4
   13ecc:	add	sp, sp, #8
   13ed0:	pop	{r4, r5, r6, r7, r8, pc}
   13ed4:	bge	13ef8 <putc_unlocked@plt+0x2c00>
   13ed8:	ldr	r1, [r1, #12]
   13edc:	ldr	r2, [r1, #20]
   13ee0:	cmp	r3, r2
   13ee4:	blt	13ed8 <putc_unlocked@plt+0x2be0>
   13ee8:	bl	13d70 <putc_unlocked@plt+0x2a78>
   13eec:	subs	r4, r0, #0
   13ef0:	mvneq	r4, #0
   13ef4:	b	13ec8 <putc_unlocked@plt+0x2bd0>
   13ef8:	bl	13d70 <putc_unlocked@plt+0x2a78>
   13efc:	subs	r4, r0, #0
   13f00:	bne	13ec8 <putc_unlocked@plt+0x2bd0>
   13f04:	ldr	r4, [r5, #12]
   13f08:	ldr	r3, [r6, #12]
   13f0c:	mvn	r2, r4
   13f10:	lsr	r2, r2, #31
   13f14:	cmp	r2, r3, lsr #31
   13f18:	subne	r4, r3, r4
   13f1c:	subeq	r4, r4, r3
   13f20:	cmp	r4, #0
   13f24:	bne	13ec8 <putc_unlocked@plt+0x2bd0>
   13f28:	mov	r0, r6
   13f2c:	bl	12720 <putc_unlocked@plt+0x1428>
   13f30:	mov	r7, r0
   13f34:	str	r0, [sp]
   13f38:	mov	r0, r5
   13f3c:	bl	12720 <putc_unlocked@plt+0x1428>
   13f40:	ldr	r3, [r6]
   13f44:	adds	r7, r7, #0
   13f48:	movne	r7, #1
   13f4c:	ldr	r3, [r3, #12]
   13f50:	ands	r3, r7, r3, lsr #3
   13f54:	moveq	r7, r4
   13f58:	str	r0, [sp, #4]
   13f5c:	beq	13f70 <putc_unlocked@plt+0x2c78>
   13f60:	mov	r0, sp
   13f64:	bl	12888 <putc_unlocked@plt+0x1590>
   13f68:	adds	r7, r0, #0
   13f6c:	movne	r7, #1
   13f70:	ldr	r3, [r5]
   13f74:	ldr	r0, [r3, #12]
   13f78:	ands	r0, r0, #8
   13f7c:	beq	13fa0 <putc_unlocked@plt+0x2ca8>
   13f80:	ldr	r3, [sp, #4]
   13f84:	cmp	r3, #0
   13f88:	moveq	r0, r4
   13f8c:	beq	13fa0 <putc_unlocked@plt+0x2ca8>
   13f90:	add	r0, sp, #4
   13f94:	bl	12888 <putc_unlocked@plt+0x1590>
   13f98:	adds	r0, r0, #0
   13f9c:	movne	r0, #1
   13fa0:	subs	r4, r7, r0
   13fa4:	bne	13ec8 <putc_unlocked@plt+0x2bd0>
   13fa8:	ldr	r2, [r6, #20]
   13fac:	mov	r3, r4
   13fb0:	ldr	r1, [pc, #224]	; 14098 <putc_unlocked@plt+0x2da0>
   13fb4:	ldr	r2, [r2, #24]
   13fb8:	mov	r0, r6
   13fbc:	bl	1275c <putc_unlocked@plt+0x1464>
   13fc0:	ldr	r2, [r5, #20]
   13fc4:	mov	r3, r4
   13fc8:	ldr	r1, [pc, #200]	; 14098 <putc_unlocked@plt+0x2da0>
   13fcc:	ldr	r2, [r2, #24]
   13fd0:	uxtb	r8, r0
   13fd4:	mov	r0, r5
   13fd8:	bl	1275c <putc_unlocked@plt+0x1464>
   13fdc:	cmp	r8, #0
   13fe0:	uxtb	r5, r0
   13fe4:	beq	13ff0 <putc_unlocked@plt+0x2cf8>
   13fe8:	mov	r6, r8
   13fec:	b	14000 <putc_unlocked@plt+0x2d08>
   13ff0:	ldr	r3, [sp]
   13ff4:	cmp	r3, #0
   13ff8:	ldrbne	r6, [r3]
   13ffc:	beq	13fe8 <putc_unlocked@plt+0x2cf0>
   14000:	cmp	r5, #0
   14004:	beq	14010 <putc_unlocked@plt+0x2d18>
   14008:	mov	r7, r5
   1400c:	b	14020 <putc_unlocked@plt+0x2d28>
   14010:	ldr	r3, [sp, #4]
   14014:	cmp	r3, #0
   14018:	ldrbne	r7, [r3]
   1401c:	beq	14008 <putc_unlocked@plt+0x2d10>
   14020:	bl	11178 <__ctype_tolower_loc@plt>
   14024:	ldr	r3, [r0]
   14028:	ldr	r4, [r3, r6, lsl #2]
   1402c:	ldr	r3, [r3, r7, lsl #2]
   14030:	subs	r4, r4, r3
   14034:	bne	13ec8 <putc_unlocked@plt+0x2bd0>
   14038:	subs	r4, r7, r6
   1403c:	bne	13ec8 <putc_unlocked@plt+0x2bd0>
   14040:	adds	r4, r5, #0
   14044:	movne	r4, #1
   14048:	cmp	r8, #0
   1404c:	rsbeq	r4, r4, #0
   14050:	rsbne	r4, r4, #1
   14054:	cmp	r4, #0
   14058:	bne	13ec8 <putc_unlocked@plt+0x2bd0>
   1405c:	cmp	r8, #0
   14060:	bne	13ec8 <putc_unlocked@plt+0x2bd0>
   14064:	ldm	sp, {r0, r1}
   14068:	adds	r4, r1, #0
   1406c:	movne	r4, #1
   14070:	cmp	r0, #0
   14074:	rsbeq	r4, r4, #0
   14078:	rsbne	r4, r4, #1
   1407c:	cmp	r4, #0
   14080:	bne	13ec8 <putc_unlocked@plt+0x2bd0>
   14084:	cmp	r0, #0
   14088:	beq	13ec8 <putc_unlocked@plt+0x2bd0>
   1408c:	bl	1110c <strcasecmp@plt>
   14090:	mov	r4, r0
   14094:	b	13ec8 <putc_unlocked@plt+0x2bd0>
   14098:	andeq	r2, r1, ip, lsr r8

0001409c <argp_failure@@Base>:
   1409c:	push	{r3}		; (str r3, [sp, #-4]!)
   140a0:	push	{r4, r5, r6, r7, r8, lr}
   140a4:	sub	sp, sp, #204	; 0xcc
   140a8:	subs	r5, r0, #0
   140ac:	mov	r7, r1
   140b0:	mov	r6, r2
   140b4:	ldr	r8, [sp, #228]	; 0xe4
   140b8:	beq	140e4 <argp_failure@@Base+0x48>
   140bc:	ldr	r3, [r5, #16]
   140c0:	tst	r3, #2
   140c4:	bne	140d4 <argp_failure@@Base+0x38>
   140c8:	ldr	r4, [r5, #44]	; 0x2c
   140cc:	cmp	r4, #0
   140d0:	bne	14108 <argp_failure@@Base+0x6c>
   140d4:	add	sp, sp, #204	; 0xcc
   140d8:	pop	{r4, r5, r6, r7, r8, lr}
   140dc:	add	sp, sp, #4
   140e0:	bx	lr
   140e4:	ldr	r3, [pc, #244]	; 141e0 <argp_failure@@Base+0x144>
   140e8:	ldr	r4, [r3]
   140ec:	cmp	r4, #0
   140f0:	beq	140d4 <argp_failure@@Base+0x38>
   140f4:	mov	r0, r4
   140f8:	bl	11268 <flockfile@plt>
   140fc:	ldr	r3, [pc, #224]	; 141e4 <argp_failure@@Base+0x148>
   14100:	ldr	r0, [r3]
   14104:	b	14114 <argp_failure@@Base+0x78>
   14108:	mov	r0, r4
   1410c:	bl	11268 <flockfile@plt>
   14110:	ldr	r0, [r5, #40]	; 0x28
   14114:	mov	r1, r4
   14118:	bl	11010 <fputs_unlocked@plt>
   1411c:	cmp	r8, #0
   14120:	beq	14154 <argp_failure@@Base+0xb8>
   14124:	add	r3, sp, #232	; 0xe8
   14128:	mov	r1, r4
   1412c:	mov	r0, #58	; 0x3a
   14130:	str	r3, [sp]
   14134:	bl	112f8 <putc_unlocked@plt>
   14138:	mov	r1, r4
   1413c:	mov	r0, #32
   14140:	bl	112f8 <putc_unlocked@plt>
   14144:	ldr	r2, [sp]
   14148:	mov	r1, r8
   1414c:	mov	r0, r4
   14150:	bl	11250 <vfprintf@plt>
   14154:	cmp	r6, #0
   14158:	beq	141a8 <argp_failure@@Base+0x10c>
   1415c:	mov	r1, r4
   14160:	mov	r0, #58	; 0x3a
   14164:	bl	112f8 <putc_unlocked@plt>
   14168:	mov	r1, r4
   1416c:	mov	r0, #32
   14170:	bl	112f8 <putc_unlocked@plt>
   14174:	mov	r2, #200	; 0xc8
   14178:	mov	r1, sp
   1417c:	mov	r0, r6
   14180:	bl	111f0 <strerror_r@plt>
   14184:	cmp	r0, #0
   14188:	bne	141a0 <argp_failure@@Base+0x104>
   1418c:	mov	r0, r6
   14190:	bl	1116c <strerror@plt>
   14194:	ldr	r3, [pc, #76]	; 141e8 <argp_failure@@Base+0x14c>
   14198:	cmp	r0, #0
   1419c:	moveq	r0, r3
   141a0:	mov	r1, r4
   141a4:	bl	11010 <fputs_unlocked@plt>
   141a8:	mov	r1, r4
   141ac:	mov	r0, #10
   141b0:	bl	112f8 <putc_unlocked@plt>
   141b4:	mov	r0, r4
   141b8:	bl	11118 <funlockfile@plt>
   141bc:	cmp	r7, #0
   141c0:	beq	140d4 <argp_failure@@Base+0x38>
   141c4:	cmp	r5, #0
   141c8:	beq	141d8 <argp_failure@@Base+0x13c>
   141cc:	ldr	r3, [r5, #16]
   141d0:	tst	r3, #32
   141d4:	bne	140d4 <argp_failure@@Base+0x38>
   141d8:	mov	r0, r7
   141dc:	bl	111b4 <exit@plt>
   141e0:	andeq	sl, r2, r0, lsr #5
   141e4:	muleq	r2, r8, r2
   141e8:	andeq	r8, r1, r5, asr #21
   141ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141f0:	add	fp, sp, #32
   141f4:	sub	sp, sp, #116	; 0x74
   141f8:	str	r3, [fp, #-104]	; 0xffffff98
   141fc:	subs	r3, r2, #0
   14200:	str	r0, [fp, #-108]	; 0xffffff94
   14204:	str	r1, [fp, #-96]	; 0xffffffa0
   14208:	str	r3, [fp, #-112]	; 0xffffff90
   1420c:	beq	14288 <argp_failure@@Base+0x1ec>
   14210:	ldr	r5, [pc, #3996]	; 151b4 <argp_failure@@Base+0x1118>
   14214:	mov	r0, r3
   14218:	bl	11268 <flockfile@plt>
   1421c:	ldr	r9, [r5, #36]	; 0x24
   14220:	cmp	r9, #0
   14224:	bne	14260 <argp_failure@@Base+0x1c4>
   14228:	ldr	r0, [pc, #3976]	; 151b8 <argp_failure@@Base+0x111c>
   1422c:	bl	11148 <getenv@plt>
   14230:	mov	ip, r5
   14234:	sub	lr, fp, #76	; 0x4c
   14238:	mov	r4, r0
   1423c:	ldm	ip!, {r0, r1, r2, r3}
   14240:	cmp	r4, #0
   14244:	movne	r5, #1
   14248:	stmia	lr!, {r0, r1, r2, r3}
   1424c:	ldm	ip!, {r0, r1, r2, r3}
   14250:	stmia	lr!, {r0, r1, r2, r3}
   14254:	ldm	ip, {r0, r1}
   14258:	stm	lr, {r0, r1}
   1425c:	bne	144dc <argp_failure@@Base+0x440>
   14260:	ldr	r5, [pc, #3916]	; 151b4 <argp_failure@@Base+0x1118>
   14264:	mov	r3, #0
   14268:	mov	r1, r3
   1426c:	ldr	r2, [r5, #32]
   14270:	ldr	r0, [fp, #-112]	; 0xffffff90
   14274:	bl	16eb0 <argp_parse@@Base+0x15c0>
   14278:	subs	r4, r0, #0
   1427c:	bne	14570 <argp_failure@@Base+0x4d4>
   14280:	ldr	r0, [fp, #-112]	; 0xffffff90
   14284:	bl	11118 <funlockfile@plt>
   14288:	sub	sp, fp, #32
   1428c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14290:	mov	r3, r1
   14294:	mov	r1, r3
   14298:	str	r3, [fp, #-100]	; 0xffffff9c
   1429c:	ldrb	r0, [r1], #1
   142a0:	lsl	r2, r0, #1
   142a4:	ldrh	r2, [r6, r2]
   142a8:	tst	r2, #8192	; 0x2000
   142ac:	bne	14290 <argp_failure@@Base+0x1f4>
   142b0:	ands	r2, r2, #1024	; 0x400
   142b4:	movne	r2, r3
   142b8:	bne	14334 <argp_failure@@Base+0x298>
   142bc:	cmp	r0, #0
   142c0:	beq	1452c <argp_failure@@Base+0x490>
   142c4:	str	r3, [sp]
   142c8:	mov	r1, r2
   142cc:	ldr	r3, [pc, #3816]	; 151bc <argp_failure@@Base+0x1120>
   142d0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   142d4:	bl	1409c <argp_failure@@Base>
   142d8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   142dc:	ldr	r3, [pc, #3804]	; 151c0 <argp_failure@@Base+0x1124>
   142e0:	mov	r0, #9
   142e4:	ldrb	r2, [r3, #14]
   142e8:	cmp	r2, #0
   142ec:	bne	14534 <argp_failure@@Base+0x498>
   142f0:	ldrb	r1, [r3, #15]
   142f4:	cmp	r1, #32
   142f8:	beq	14534 <argp_failure@@Base+0x498>
   142fc:	sub	lr, fp, #36	; 0x24
   14300:	add	r1, lr, r1
   14304:	ldr	r1, [r1, #-40]	; 0xffffffd8
   14308:	cmp	r1, ip
   1430c:	blt	14534 <argp_failure@@Base+0x498>
   14310:	str	r3, [sp, #4]
   14314:	ldr	r3, [pc, #3752]	; 151c4 <argp_failure@@Base+0x1128>
   14318:	mov	r1, r2
   1431c:	str	r3, [sp]
   14320:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14324:	ldr	r3, [pc, #3740]	; 151c8 <argp_failure@@Base+0x112c>
   14328:	bl	1409c <argp_failure@@Base>
   1432c:	b	14260 <argp_failure@@Base+0x1c4>
   14330:	mov	r2, lr
   14334:	mov	lr, r2
   14338:	ldrb	r1, [lr], #1
   1433c:	cmp	r1, #95	; 0x5f
   14340:	cmpne	r1, #45	; 0x2d
   14344:	lsl	ip, r1, #1
   14348:	moveq	r1, #1
   1434c:	ldrh	ip, [r6, ip]
   14350:	movne	r1, #0
   14354:	lsl	ip, ip, #28
   14358:	orrs	r1, r1, ip, lsr #31
   1435c:	bne	14330 <argp_failure@@Base+0x294>
   14360:	sub	r8, r2, r3
   14364:	mov	r4, r2
   14368:	ldrb	r1, [r2], #1
   1436c:	lsl	ip, r1, #1
   14370:	ldrh	ip, [r6, ip]
   14374:	tst	ip, #8192	; 0x2000
   14378:	bne	14364 <argp_failure@@Base+0x2c8>
   1437c:	cmp	r1, #44	; 0x2c
   14380:	cmpne	r1, #0
   14384:	beq	150f4 <argp_failure@@Base+0x1058>
   14388:	cmp	r1, #61	; 0x3d
   1438c:	bne	143ac <argp_failure@@Base+0x310>
   14390:	mov	r4, r2
   14394:	add	r2, r2, #1
   14398:	ldrb	r3, [r4]
   1439c:	lsl	r3, r3, #1
   143a0:	ldrh	r3, [r6, r3]
   143a4:	tst	r3, #8192	; 0x2000
   143a8:	bne	14390 <argp_failure@@Base+0x2f4>
   143ac:	ldrb	r3, [r4]
   143b0:	lsl	r3, r3, #1
   143b4:	ldrh	r3, [r6, r3]
   143b8:	tst	r3, #2048	; 0x800
   143bc:	moveq	sl, r9
   143c0:	moveq	r7, r9
   143c4:	beq	14440 <argp_failure@@Base+0x3a4>
   143c8:	mov	r0, r4
   143cc:	bl	11280 <atoi@plt>
   143d0:	mov	r3, r4
   143d4:	mov	r7, r0
   143d8:	ldrb	r2, [r3]
   143dc:	add	r1, r3, #1
   143e0:	lsl	r2, r2, #1
   143e4:	ldrh	r2, [r6, r2]
   143e8:	tst	r2, #2048	; 0x800
   143ec:	bne	144f8 <argp_failure@@Base+0x45c>
   143f0:	mov	r4, r3
   143f4:	add	r3, r3, #1
   143f8:	ldrb	r2, [r4]
   143fc:	lsl	r2, r2, #1
   14400:	ldrh	r2, [r6, r2]
   14404:	tst	r2, #8192	; 0x2000
   14408:	bne	143f0 <argp_failure@@Base+0x354>
   1440c:	mov	sl, r9
   14410:	b	14440 <argp_failure@@Base+0x3a4>
   14414:	ldrb	r2, [r3, #1]
   14418:	cmp	r2, #111	; 0x6f
   1441c:	bne	150fc <argp_failure@@Base+0x1060>
   14420:	ldrb	r2, [r3, #2]
   14424:	cmp	r2, #45	; 0x2d
   14428:	bne	150fc <argp_failure@@Base+0x1060>
   1442c:	sub	r8, r8, #3
   14430:	mov	r7, r9
   14434:	mov	sl, r5
   14438:	add	r3, r3, #3
   1443c:	str	r3, [fp, #-100]	; 0xffffff9c
   14440:	ldr	r6, [pc, #3448]	; 151c0 <argp_failure@@Base+0x1124>
   14444:	mov	r3, #9
   14448:	str	r3, [fp, #-116]	; 0xffffff8c
   1444c:	mov	r0, r6
   14450:	bl	111c0 <strlen@plt>
   14454:	cmp	r0, r8
   14458:	bne	14514 <argp_failure@@Base+0x478>
   1445c:	mov	r2, r8
   14460:	mov	r1, r6
   14464:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14468:	bl	112d4 <strncmp@plt>
   1446c:	cmp	r0, #0
   14470:	bne	14514 <argp_failure@@Base+0x478>
   14474:	cmp	sl, #0
   14478:	beq	14500 <argp_failure@@Base+0x464>
   1447c:	ldrb	r2, [r6, #14]
   14480:	cmp	r2, #0
   14484:	bne	14500 <argp_failure@@Base+0x464>
   14488:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1448c:	str	r8, [sp]
   14490:	str	r3, [sp, #4]
   14494:	mov	r1, r2
   14498:	ldr	r3, [pc, #3372]	; 151cc <argp_failure@@Base+0x1130>
   1449c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   144a0:	bl	1409c <argp_failure@@Base>
   144a4:	ldr	r3, [pc, #3364]	; 151d0 <argp_failure@@Base+0x1134>
   144a8:	cmp	r6, r3
   144ac:	bne	144d0 <argp_failure@@Base+0x434>
   144b0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   144b4:	mov	r2, #0
   144b8:	str	r3, [sp, #4]
   144bc:	str	r8, [sp]
   144c0:	ldr	r3, [pc, #3340]	; 151d4 <argp_failure@@Base+0x1138>
   144c4:	mov	r1, r2
   144c8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   144cc:	bl	1409c <argp_failure@@Base>
   144d0:	ldrb	r3, [r4]
   144d4:	cmp	r3, #44	; 0x2c
   144d8:	addeq	r4, r4, #1
   144dc:	ldrb	r3, [r4]
   144e0:	cmp	r3, #0
   144e4:	beq	142d8 <argp_failure@@Base+0x23c>
   144e8:	bl	1119c <__ctype_b_loc@plt>
   144ec:	mov	r3, r4
   144f0:	ldr	r6, [r0]
   144f4:	b	14294 <argp_failure@@Base+0x1f8>
   144f8:	mov	r3, r1
   144fc:	b	143d8 <argp_failure@@Base+0x33c>
   14500:	ldrb	r3, [r6, #15]
   14504:	sub	r2, fp, #36	; 0x24
   14508:	add	r3, r2, r3
   1450c:	str	r7, [r3, #-40]	; 0xffffffd8
   14510:	b	144a4 <argp_failure@@Base+0x408>
   14514:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14518:	add	r6, r6, #16
   1451c:	subs	r3, r3, #1
   14520:	str	r3, [fp, #-116]	; 0xffffff8c
   14524:	bne	1444c <argp_failure@@Base+0x3b0>
   14528:	b	144a4 <argp_failure@@Base+0x408>
   1452c:	mov	r4, r3
   14530:	b	144dc <argp_failure@@Base+0x440>
   14534:	subs	r0, r0, #1
   14538:	add	r3, r3, #16
   1453c:	bne	142e4 <argp_failure@@Base+0x248>
   14540:	sub	lr, fp, #76	; 0x4c
   14544:	ldr	r4, [pc, #3176]	; 151b4 <argp_failure@@Base+0x1118>
   14548:	ldm	lr!, {r0, r1, r2, r3}
   1454c:	mov	ip, r4
   14550:	stmia	ip!, {r0, r1, r2, r3}
   14554:	ldm	lr!, {r0, r1, r2, r3}
   14558:	stmia	ip!, {r0, r1, r2, r3}
   1455c:	mov	r3, #1
   14560:	ldm	lr, {r0, r1}
   14564:	stm	ip, {r0, r1}
   14568:	str	r3, [r4, #36]	; 0x24
   1456c:	b	14260 <argp_failure@@Base+0x1c4>
   14570:	ldr	r3, [fp, #-104]	; 0xffffff98
   14574:	ands	r3, r3, #11
   14578:	moveq	sl, r3
   1457c:	beq	145dc <argp_failure@@Base+0x540>
   14580:	mov	r1, #0
   14584:	ldr	r0, [fp, #-108]	; 0xffffff94
   14588:	bl	13768 <putc_unlocked@plt+0x2470>
   1458c:	ldr	r1, [pc, #3140]	; 151d8 <argp_failure@@Base+0x113c>
   14590:	mov	sl, r0
   14594:	bl	136f4 <putc_unlocked@plt+0x23fc>
   14598:	ldr	r1, [pc, #3132]	; 151dc <argp_failure@@Base+0x1140>
   1459c:	mov	r0, sl
   145a0:	bl	136f4 <putc_unlocked@plt+0x23fc>
   145a4:	ldr	r1, [sl, #4]
   145a8:	cmp	r1, #0
   145ac:	beq	145dc <argp_failure@@Base+0x540>
   145b0:	ldr	r0, [sl]
   145b4:	mov	r3, #0
   145b8:	mov	r2, r0
   145bc:	str	r3, [r2, #24]
   145c0:	add	r3, r3, #1
   145c4:	cmp	r1, r3
   145c8:	add	r2, r2, #28
   145cc:	bne	145bc <argp_failure@@Base+0x520>
   145d0:	ldr	r3, [pc, #3080]	; 151e0 <argp_failure@@Base+0x1144>
   145d4:	mov	r2, #28
   145d8:	bl	1128c <qsort@plt>
   145dc:	ldr	r3, [fp, #-104]	; 0xffffff98
   145e0:	ands	r3, r3, #3
   145e4:	moveq	r5, r3
   145e8:	beq	14788 <argp_failure@@Base+0x6ec>
   145ec:	ldr	r0, [fp, #-108]	; 0xffffff94
   145f0:	bl	12940 <putc_unlocked@plt+0x1648>
   145f4:	mov	r1, #0
   145f8:	ldr	r6, [pc, #3044]	; 151e4 <argp_failure@@Base+0x1148>
   145fc:	mov	r9, #1
   14600:	add	r3, r0, #14
   14604:	bic	r3, r3, #7
   14608:	sub	sp, sp, r3
   1460c:	add	r7, sp, #8
   14610:	mov	r2, r0
   14614:	mov	r0, r7
   14618:	bl	111fc <memset@plt>
   1461c:	ldr	r2, [r4, #24]
   14620:	ldr	r3, [r4, #28]
   14624:	ldr	r8, [r5, #28]
   14628:	sub	r3, r3, r2
   1462c:	ldr	r2, [r4, #16]
   14630:	cmp	r3, r2
   14634:	bls	14640 <argp_failure@@Base+0x5a4>
   14638:	mov	r0, r4
   1463c:	bl	16f28 <argp_parse@@Base+0x1638>
   14640:	ldr	r3, [r4, #12]
   14644:	cmp	r9, #0
   14648:	str	r8, [r4, #12]
   1464c:	ldrne	r2, [pc, #2964]	; 151e8 <argp_failure@@Base+0x114c>
   14650:	ldreq	r2, [pc, #2964]	; 151ec <argp_failure@@Base+0x1150>
   14654:	str	r3, [fp, #-100]	; 0xffffff9c
   14658:	ldr	r1, [pc, #2960]	; 151f0 <argp_failure@@Base+0x1154>
   1465c:	ldr	r3, [fp, #4]
   14660:	mov	r0, r4
   14664:	str	r7, [fp, #-76]	; 0xffffffb4
   14668:	bl	1745c <argp_parse@@Base+0x1b6c>
   1466c:	ldr	r2, [r4, #24]
   14670:	ldr	r3, [r4, #28]
   14674:	ldr	r8, [r5, #28]
   14678:	sub	r3, r3, r2
   1467c:	ldr	r2, [r4, #16]
   14680:	cmp	r3, r2
   14684:	bls	14690 <argp_failure@@Base+0x5f4>
   14688:	mov	r0, r4
   1468c:	bl	16f28 <argp_parse@@Base+0x1638>
   14690:	ldr	r3, [fp, #-104]	; 0xffffff98
   14694:	ldr	r9, [r4, #4]
   14698:	tst	r3, #2
   1469c:	str	r8, [r4, #4]
   146a0:	beq	14a04 <argp_failure@@Base+0x968>
   146a4:	ldr	r3, [sl, #4]
   146a8:	cmp	r3, #0
   146ac:	beq	146ec <argp_failure@@Base+0x650>
   146b0:	ldr	r3, [r4, #28]
   146b4:	ldr	r2, [r4, #32]
   146b8:	add	r3, r3, #12
   146bc:	cmp	r2, r3
   146c0:	bcc	149ec <argp_failure@@Base+0x950>
   146c4:	ldr	r2, [r4, #28]
   146c8:	ldr	r3, [r6]
   146cc:	str	r3, [r2]
   146d0:	ldr	r3, [r6, #4]
   146d4:	str	r3, [r2, #4]
   146d8:	ldr	r3, [r6, #8]
   146dc:	str	r3, [r2, #8]
   146e0:	ldr	r3, [r4, #28]
   146e4:	add	r3, r3, #12
   146e8:	str	r3, [r4, #28]
   146ec:	mov	r3, #1
   146f0:	sub	r2, fp, #76	; 0x4c
   146f4:	str	r4, [sp]
   146f8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   146fc:	ldr	r0, [fp, #-108]	; 0xffffff94
   14700:	bl	13354 <putc_unlocked@plt+0x205c>
   14704:	ldr	r2, [r4, #24]
   14708:	ldr	r3, [r4, #28]
   1470c:	sub	r3, r3, r2
   14710:	ldr	r2, [r4, #16]
   14714:	cmp	r3, r2
   14718:	mov	r8, r0
   1471c:	bls	14728 <argp_failure@@Base+0x68c>
   14720:	mov	r0, r4
   14724:	bl	16f28 <argp_parse@@Base+0x1638>
   14728:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1472c:	ldr	r2, [r4, #24]
   14730:	str	r3, [r4, #12]
   14734:	ldr	r3, [r4, #28]
   14738:	sub	r3, r3, r2
   1473c:	ldr	r2, [r4, #16]
   14740:	cmp	r3, r2
   14744:	bls	14750 <argp_failure@@Base+0x6b4>
   14748:	mov	r0, r4
   1474c:	bl	16f28 <argp_parse@@Base+0x1638>
   14750:	ldr	r2, [r4, #28]
   14754:	ldr	r3, [r4, #32]
   14758:	str	r9, [r4, #4]
   1475c:	cmp	r2, r3
   14760:	bcs	14a20 <argp_failure@@Base+0x984>
   14764:	ldr	r3, [r4, #28]
   14768:	add	r2, r3, #1
   1476c:	str	r2, [r4, #28]
   14770:	mov	r2, #10
   14774:	strb	r2, [r3]
   14778:	mov	r9, #0
   1477c:	cmp	r8, r9
   14780:	bne	1461c <argp_failure@@Base+0x580>
   14784:	mov	r5, #1
   14788:	ldr	r3, [fp, #-104]	; 0xffffff98
   1478c:	tst	r3, #16
   14790:	beq	147b8 <argp_failure@@Base+0x71c>
   14794:	mov	r3, #1
   14798:	str	r3, [sp]
   1479c:	mov	r3, #0
   147a0:	str	r4, [sp, #4]
   147a4:	mov	r2, r3
   147a8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   147ac:	ldr	r0, [fp, #-108]	; 0xffffff94
   147b0:	bl	12dbc <putc_unlocked@plt+0x1ac4>
   147b4:	orr	r5, r5, r0
   147b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   147bc:	tst	r3, #4
   147c0:	beq	147dc <argp_failure@@Base+0x740>
   147c4:	ldr	r3, [fp, #4]
   147c8:	ldr	r1, [pc, #2596]	; 151f4 <argp_failure@@Base+0x1158>
   147cc:	mov	r2, r3
   147d0:	mov	r0, r4
   147d4:	bl	1745c <argp_parse@@Base+0x1b6c>
   147d8:	mov	r5, #1
   147dc:	ldr	r3, [fp, #-104]	; 0xffffff98
   147e0:	tst	r3, #8
   147e4:	beq	1493c <argp_failure@@Base+0x8a0>
   147e8:	ldr	r3, [sl, #4]
   147ec:	cmp	r3, #0
   147f0:	beq	1493c <argp_failure@@Base+0x8a0>
   147f4:	cmp	r5, #0
   147f8:	beq	14820 <argp_failure@@Base+0x784>
   147fc:	ldr	r2, [r4, #28]
   14800:	ldr	r3, [r4, #32]
   14804:	cmp	r2, r3
   14808:	bcs	14a38 <argp_failure@@Base+0x99c>
   1480c:	ldr	r3, [r4, #28]
   14810:	add	r2, r3, #1
   14814:	str	r2, [r4, #28]
   14818:	mov	r2, #10
   1481c:	strb	r2, [r3]
   14820:	mov	r3, #0
   14824:	str	r3, [fp, #-88]	; 0xffffffa8
   14828:	str	r3, [fp, #-84]	; 0xffffffac
   1482c:	str	r3, [fp, #-80]	; 0xffffffb0
   14830:	ldr	r3, [sl]
   14834:	str	r3, [fp, #-100]	; 0xffffff9c
   14838:	ldr	r3, [sl, #4]
   1483c:	str	r3, [fp, #-116]	; 0xffffff8c
   14840:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14844:	cmp	r3, #0
   14848:	bne	14a50 <argp_failure@@Base+0x9b4>
   1484c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14850:	cmp	r3, #0
   14854:	beq	14938 <argp_failure@@Base+0x89c>
   14858:	ldr	r3, [pc, #2388]	; 151b4 <argp_failure@@Base+0x1118>
   1485c:	ldr	r3, [r3, #4]
   14860:	cmp	r3, #0
   14864:	beq	14938 <argp_failure@@Base+0x89c>
   14868:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1486c:	ldr	r1, [pc, #2436]	; 151f8 <argp_failure@@Base+0x115c>
   14870:	cmp	r3, #0
   14874:	ldr	r0, [pc, #2432]	; 151fc <argp_failure@@Base+0x1160>
   14878:	ldrne	r2, [r3]
   1487c:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   14880:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14884:	bl	12a20 <putc_unlocked@plt+0x1728>
   14888:	subs	r5, r0, #0
   1488c:	beq	14938 <argp_failure@@Base+0x89c>
   14890:	ldrb	r3, [r5]
   14894:	cmp	r3, #0
   14898:	beq	14924 <argp_failure@@Base+0x888>
   1489c:	ldr	r2, [r4, #28]
   148a0:	ldr	r3, [r4, #32]
   148a4:	cmp	r2, r3
   148a8:	bcs	15094 <argp_failure@@Base+0xff8>
   148ac:	ldr	r3, [r4, #28]
   148b0:	add	r2, r3, #1
   148b4:	str	r2, [r4, #28]
   148b8:	mov	r2, #10
   148bc:	strb	r2, [r3]
   148c0:	mov	r0, r5
   148c4:	bl	111c0 <strlen@plt>
   148c8:	subs	r6, r0, #0
   148cc:	beq	14900 <argp_failure@@Base+0x864>
   148d0:	ldr	r3, [r4, #28]
   148d4:	ldr	r2, [r4, #32]
   148d8:	add	r3, r3, r6
   148dc:	cmp	r2, r3
   148e0:	bcc	150ac <argp_failure@@Base+0x1010>
   148e4:	mov	r2, r6
   148e8:	mov	r1, r5
   148ec:	ldr	r0, [r4, #28]
   148f0:	bl	110ac <memcpy@plt>
   148f4:	ldr	r3, [r4, #28]
   148f8:	add	r6, r3, r6
   148fc:	str	r6, [r4, #28]
   14900:	ldr	r2, [r4, #28]
   14904:	ldr	r3, [r4, #32]
   14908:	cmp	r2, r3
   1490c:	bcs	150c4 <argp_failure@@Base+0x1028>
   14910:	ldr	r3, [r4, #28]
   14914:	add	r2, r3, #1
   14918:	str	r2, [r4, #28]
   1491c:	mov	r2, #10
   14920:	strb	r2, [r3]
   14924:	ldr	r3, [pc, #2256]	; 151fc <argp_failure@@Base+0x1160>
   14928:	cmp	r5, r3
   1492c:	beq	14938 <argp_failure@@Base+0x89c>
   14930:	mov	r0, r5
   14934:	bl	1638c <argp_parse@@Base+0xa9c>
   14938:	mov	r5, #1
   1493c:	ldr	r3, [fp, #-104]	; 0xffffff98
   14940:	tst	r3, #32
   14944:	beq	1496c <argp_failure@@Base+0x8d0>
   14948:	mov	r3, #0
   1494c:	str	r3, [sp]
   14950:	str	r4, [sp, #4]
   14954:	mov	r3, r5
   14958:	mov	r2, #1
   1495c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14960:	ldr	r0, [fp, #-108]	; 0xffffff94
   14964:	bl	12dbc <putc_unlocked@plt+0x1ac4>
   14968:	orr	r5, r5, r0
   1496c:	ldr	r3, [fp, #-104]	; 0xffffff98
   14970:	tst	r3, #64	; 0x40
   14974:	beq	149c8 <argp_failure@@Base+0x92c>
   14978:	ldr	r3, [pc, #2176]	; 15200 <argp_failure@@Base+0x1164>
   1497c:	mov	r6, r3
   14980:	ldr	r2, [r3]
   14984:	cmp	r2, #0
   14988:	beq	149c8 <argp_failure@@Base+0x92c>
   1498c:	cmp	r5, #0
   14990:	beq	149b8 <argp_failure@@Base+0x91c>
   14994:	ldr	r2, [r4, #28]
   14998:	ldr	r3, [r4, #32]
   1499c:	cmp	r2, r3
   149a0:	bcs	150dc <argp_failure@@Base+0x1040>
   149a4:	ldr	r3, [r4, #28]
   149a8:	add	r2, r3, #1
   149ac:	str	r2, [r4, #28]
   149b0:	mov	r2, #10
   149b4:	strb	r2, [r3]
   149b8:	ldr	r2, [r6]
   149bc:	ldr	r1, [pc, #2112]	; 15204 <argp_failure@@Base+0x1168>
   149c0:	mov	r0, r4
   149c4:	bl	1745c <argp_parse@@Base+0x1b6c>
   149c8:	ldr	r0, [fp, #-112]	; 0xffffff90
   149cc:	bl	11118 <funlockfile@plt>
   149d0:	cmp	sl, #0
   149d4:	beq	149e0 <argp_failure@@Base+0x944>
   149d8:	mov	r0, sl
   149dc:	bl	128f4 <putc_unlocked@plt+0x15fc>
   149e0:	mov	r0, r4
   149e4:	bl	17338 <argp_parse@@Base+0x1a48>
   149e8:	b	14288 <argp_failure@@Base+0x1ec>
   149ec:	mov	r1, #12
   149f0:	mov	r0, r4
   149f4:	bl	17378 <argp_parse@@Base+0x1a88>
   149f8:	cmp	r0, #0
   149fc:	bne	146c4 <argp_failure@@Base+0x628>
   14a00:	b	146ec <argp_failure@@Base+0x650>
   14a04:	mov	r1, r4
   14a08:	mov	r0, sl
   14a0c:	bl	13568 <putc_unlocked@plt+0x2270>
   14a10:	ldr	r3, [fp, #-104]	; 0xffffff98
   14a14:	orr	r3, r3, #2
   14a18:	str	r3, [fp, #-104]	; 0xffffff98
   14a1c:	b	146ec <argp_failure@@Base+0x650>
   14a20:	mov	r1, #1
   14a24:	mov	r0, r4
   14a28:	bl	17378 <argp_parse@@Base+0x1a88>
   14a2c:	cmp	r0, #0
   14a30:	bne	14764 <argp_failure@@Base+0x6c8>
   14a34:	b	14778 <argp_failure@@Base+0x6dc>
   14a38:	mov	r1, #1
   14a3c:	mov	r0, r4
   14a40:	bl	17378 <argp_parse@@Base+0x1a88>
   14a44:	cmp	r0, #0
   14a48:	bne	1480c <argp_failure@@Base+0x770>
   14a4c:	b	14820 <argp_failure@@Base+0x784>
   14a50:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14a54:	ldr	r2, [r4, #24]
   14a58:	ldr	r5, [r3]
   14a5c:	ldr	r9, [r3, #8]
   14a60:	ldr	r3, [r4, #28]
   14a64:	sub	r3, r3, r2
   14a68:	ldr	r2, [r4, #16]
   14a6c:	cmp	r3, r2
   14a70:	bls	14a7c <argp_failure@@Base+0x9e0>
   14a74:	mov	r0, r4
   14a78:	bl	16f28 <argp_parse@@Base+0x1638>
   14a7c:	ldr	r2, [r4, #12]
   14a80:	ldr	r3, [r4, #4]
   14a84:	str	r2, [fp, #-128]	; 0xffffff80
   14a88:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14a8c:	str	r3, [fp, #-124]	; 0xffffff84
   14a90:	mov	r3, #0
   14a94:	str	r3, [r4, #4]
   14a98:	str	r2, [fp, #-76]	; 0xffffffb4
   14a9c:	sub	r2, fp, #88	; 0x58
   14aa0:	str	r2, [fp, #-68]	; 0xffffffbc
   14aa4:	mov	r2, #1
   14aa8:	str	r2, [fp, #-64]	; 0xffffffc0
   14aac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14ab0:	str	r4, [fp, #-72]	; 0xffffffb8
   14ab4:	str	r2, [fp, #-60]	; 0xffffffc4
   14ab8:	ldr	r2, [r5, #12]
   14abc:	ands	r2, r2, #8
   14ac0:	str	r2, [fp, #-120]	; 0xffffff88
   14ac4:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   14ac8:	ldreq	r2, [r3, #4]
   14acc:	addeq	r3, r5, #24
   14ad0:	beq	14afc <argp_failure@@Base+0xa60>
   14ad4:	str	r3, [fp, #-120]	; 0xffffff88
   14ad8:	b	14b04 <argp_failure@@Base+0xa68>
   14adc:	ldr	r1, [r3, #-24]	; 0xffffffe8
   14ae0:	cmp	r1, #0
   14ae4:	beq	14af4 <argp_failure@@Base+0xa58>
   14ae8:	ldr	r1, [r3, #-12]
   14aec:	tst	r1, #2
   14af0:	beq	14c8c <argp_failure@@Base+0xbf0>
   14af4:	sub	r2, r2, #1
   14af8:	add	r3, r3, #24
   14afc:	cmp	r2, #0
   14b00:	bne	14adc <argp_failure@@Base+0xa40>
   14b04:	ldr	r3, [pc, #1704]	; 151b4 <argp_failure@@Base+0x1118>
   14b08:	ldr	r2, [r4, #24]
   14b0c:	ldr	r6, [r3, #8]
   14b10:	ldr	r3, [r4, #28]
   14b14:	sub	r3, r3, r2
   14b18:	ldr	r2, [r4, #16]
   14b1c:	cmp	r3, r2
   14b20:	bls	14b2c <argp_failure@@Base+0xa90>
   14b24:	mov	r0, r4
   14b28:	bl	16f28 <argp_parse@@Base+0x1638>
   14b2c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14b30:	str	r6, [r4, #12]
   14b34:	ldr	r7, [pc, #1656]	; 151b4 <argp_failure@@Base+0x1118>
   14b38:	ldr	r8, [r3, #4]
   14b3c:	mov	r6, r5
   14b40:	cmp	r8, #0
   14b44:	bne	14c94 <argp_failure@@Base+0xbf8>
   14b48:	ldr	r3, [r5, #12]
   14b4c:	ldr	r1, [pc, #1632]	; 151b4 <argp_failure@@Base+0x1118>
   14b50:	tst	r3, #8
   14b54:	ldr	r2, [r4, #24]
   14b58:	ldr	r3, [r4, #28]
   14b5c:	beq	14dc0 <argp_failure@@Base+0xd24>
   14b60:	sub	r3, r3, r2
   14b64:	ldr	r2, [r4, #16]
   14b68:	ldr	r6, [r1, #16]
   14b6c:	cmp	r3, r2
   14b70:	bls	14b7c <argp_failure@@Base+0xae0>
   14b74:	mov	r0, r4
   14b78:	bl	16f28 <argp_parse@@Base+0x1638>
   14b7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14b80:	str	r6, [r4, #12]
   14b84:	add	r6, r5, #24
   14b88:	ldr	r7, [r3, #4]
   14b8c:	cmp	r7, #0
   14b90:	bne	14d30 <argp_failure@@Base+0xc94>
   14b94:	ldr	r2, [r4, #24]
   14b98:	ldr	r3, [r4, #28]
   14b9c:	sub	r3, r3, r2
   14ba0:	ldr	r2, [r4, #16]
   14ba4:	cmp	r3, r2
   14ba8:	bls	14bb4 <argp_failure@@Base+0xb18>
   14bac:	mov	r0, r4
   14bb0:	bl	16f28 <argp_parse@@Base+0x1638>
   14bb4:	mov	r3, #0
   14bb8:	str	r3, [r4, #4]
   14bbc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14bc0:	cmp	r3, #0
   14bc4:	beq	14e60 <argp_failure@@Base+0xdc4>
   14bc8:	ldr	r3, [r5, #12]
   14bcc:	tst	r3, #8
   14bd0:	bne	14bfc <argp_failure@@Base+0xb60>
   14bd4:	ldr	r6, [r5, #4]
   14bd8:	sub	r3, r6, #1
   14bdc:	cmp	r3, #254	; 0xfe
   14be0:	bhi	14bfc <argp_failure@@Base+0xb60>
   14be4:	bl	1119c <__ctype_b_loc@plt>
   14be8:	lsl	r6, r6, #1
   14bec:	ldr	r3, [r0]
   14bf0:	ldrh	r3, [r3, r6]
   14bf4:	tst	r3, #16384	; 0x4000
   14bf8:	bne	14c24 <argp_failure@@Base+0xb88>
   14bfc:	ldr	r3, [r5]
   14c00:	cmp	r3, #0
   14c04:	bne	14c24 <argp_failure@@Base+0xb88>
   14c08:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14c0c:	sub	r2, fp, #76	; 0x4c
   14c10:	ldr	r0, [r5, #16]
   14c14:	ldr	r1, [r3, #20]
   14c18:	bl	12a64 <putc_unlocked@plt+0x176c>
   14c1c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14c20:	str	r3, [fp, #-88]	; 0xffffffa8
   14c24:	ldr	r2, [r4, #24]
   14c28:	ldr	r3, [r4, #28]
   14c2c:	sub	r3, r3, r2
   14c30:	ldr	r2, [r4, #16]
   14c34:	cmp	r3, r2
   14c38:	bls	14c44 <argp_failure@@Base+0xba8>
   14c3c:	mov	r0, r4
   14c40:	bl	16f28 <argp_parse@@Base+0x1638>
   14c44:	ldr	r3, [fp, #-124]	; 0xffffff84
   14c48:	ldr	r2, [r4, #24]
   14c4c:	str	r3, [r4, #4]
   14c50:	ldr	r3, [r4, #28]
   14c54:	sub	r3, r3, r2
   14c58:	ldr	r2, [r4, #16]
   14c5c:	cmp	r3, r2
   14c60:	bls	14c6c <argp_failure@@Base+0xbd0>
   14c64:	mov	r0, r4
   14c68:	bl	16f28 <argp_parse@@Base+0x1638>
   14c6c:	ldr	r3, [fp, #-128]	; 0xffffff80
   14c70:	str	r3, [r4, #12]
   14c74:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14c78:	add	r3, r3, #28
   14c7c:	str	r3, [fp, #-100]	; 0xffffff9c
   14c80:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14c84:	sub	r3, r3, #1
   14c88:	b	1483c <argp_failure@@Base+0x7a0>
   14c8c:	mov	r3, #1
   14c90:	b	14ad4 <argp_failure@@Base+0xa38>
   14c94:	ldr	r2, [r6, #12]
   14c98:	tst	r2, #8
   14c9c:	str	r2, [fp, #-136]	; 0xffffff78
   14ca0:	bne	14cd8 <argp_failure@@Base+0xc3c>
   14ca4:	ldr	r3, [r6, #4]
   14ca8:	sub	r1, r3, #1
   14cac:	cmp	r1, #254	; 0xfe
   14cb0:	str	r3, [fp, #-132]	; 0xffffff7c
   14cb4:	bhi	14cd8 <argp_failure@@Base+0xc3c>
   14cb8:	bl	1119c <__ctype_b_loc@plt>
   14cbc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   14cc0:	ldr	r2, [fp, #-136]	; 0xffffff78
   14cc4:	lsl	r1, r3, #1
   14cc8:	ldr	r0, [r0]
   14ccc:	ldrh	r1, [r0, r1]
   14cd0:	tst	r1, #16384	; 0x4000
   14cd4:	bne	15108 <argp_failure@@Base+0x106c>
   14cd8:	add	r6, r6, #24
   14cdc:	sub	r8, r8, #1
   14ce0:	b	14b40 <argp_failure@@Base+0xaa4>
   14ce4:	mov	r1, #1
   14ce8:	mov	r0, r4
   14cec:	bl	17378 <argp_parse@@Base+0x1a88>
   14cf0:	cmp	r0, #0
   14cf4:	bne	15138 <argp_failure@@Base+0x109c>
   14cf8:	b	1514c <argp_failure@@Base+0x10b0>
   14cfc:	mov	r1, #1
   14d00:	mov	r0, r4
   14d04:	str	r2, [fp, #-132]	; 0xffffff7c
   14d08:	bl	17378 <argp_parse@@Base+0x1a88>
   14d0c:	ldr	r2, [fp, #-132]	; 0xffffff7c
   14d10:	cmp	r0, #0
   14d14:	bne	15160 <argp_failure@@Base+0x10c4>
   14d18:	b	15170 <argp_failure@@Base+0x10d4>
   14d1c:	ldr	r3, [r5, #8]
   14d20:	cmp	r3, #0
   14d24:	movne	r3, #1
   14d28:	strne	r3, [fp, #-80]	; 0xffffffb0
   14d2c:	b	151ac <argp_failure@@Base+0x1110>
   14d30:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14d34:	cmp	r3, #0
   14d38:	beq	14d9c <argp_failure@@Base+0xd00>
   14d3c:	ldr	r3, [r6, #-12]
   14d40:	tst	r3, #2
   14d44:	bne	14d9c <argp_failure@@Base+0xd00>
   14d48:	ldr	r3, [pc, #1124]	; 151b4 <argp_failure@@Base+0x1118>
   14d4c:	sub	r1, fp, #76	; 0x4c
   14d50:	ldr	r0, [r3, #16]
   14d54:	bl	12c3c <putc_unlocked@plt+0x1944>
   14d58:	ldr	r8, [r6, #-24]	; 0xffffffe8
   14d5c:	mov	r0, r8
   14d60:	bl	111c0 <strlen@plt>
   14d64:	subs	r9, r0, #0
   14d68:	beq	14d9c <argp_failure@@Base+0xd00>
   14d6c:	ldr	r3, [r4, #28]
   14d70:	ldr	r2, [r4, #32]
   14d74:	add	r3, r3, r9
   14d78:	cmp	r2, r3
   14d7c:	bcc	14da8 <argp_failure@@Base+0xd0c>
   14d80:	mov	r2, r9
   14d84:	mov	r1, r8
   14d88:	ldr	r0, [r4, #28]
   14d8c:	bl	110ac <memcpy@plt>
   14d90:	ldr	r3, [r4, #28]
   14d94:	add	r9, r3, r9
   14d98:	str	r9, [r4, #28]
   14d9c:	sub	r7, r7, #1
   14da0:	add	r6, r6, #24
   14da4:	b	14b8c <argp_failure@@Base+0xaf0>
   14da8:	mov	r1, r9
   14dac:	mov	r0, r4
   14db0:	bl	17378 <argp_parse@@Base+0x1a88>
   14db4:	cmp	r0, #0
   14db8:	bne	14d80 <argp_failure@@Base+0xce4>
   14dbc:	b	14d9c <argp_failure@@Base+0xd00>
   14dc0:	sub	r3, r3, r2
   14dc4:	ldr	r2, [r4, #16]
   14dc8:	ldr	r6, [r1, #12]
   14dcc:	cmp	r3, r2
   14dd0:	bls	14ddc <argp_failure@@Base+0xd40>
   14dd4:	mov	r0, r4
   14dd8:	bl	16f28 <argp_parse@@Base+0x1638>
   14ddc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14de0:	str	r6, [r4, #12]
   14de4:	ldr	r7, [pc, #968]	; 151b4 <argp_failure@@Base+0x1118>
   14de8:	ldr	r6, [r3, #4]
   14dec:	ldr	r8, [pc, #1044]	; 15208 <argp_failure@@Base+0x116c>
   14df0:	add	r9, r5, #24
   14df4:	cmp	r6, #0
   14df8:	beq	14b94 <argp_failure@@Base+0xaf8>
   14dfc:	ldr	r3, [r9, #-24]	; 0xffffffe8
   14e00:	cmp	r3, #0
   14e04:	beq	14e54 <argp_failure@@Base+0xdb8>
   14e08:	ldr	r3, [r9, #-12]
   14e0c:	tst	r3, #2
   14e10:	bne	14e54 <argp_failure@@Base+0xdb8>
   14e14:	sub	r1, fp, #76	; 0x4c
   14e18:	ldr	r0, [r7, #12]
   14e1c:	bl	12c3c <putc_unlocked@plt+0x1944>
   14e20:	ldr	r2, [r9, #-24]	; 0xffffffe8
   14e24:	mov	r1, r8
   14e28:	mov	r0, r4
   14e2c:	bl	1745c <argp_parse@@Base+0x1b6c>
   14e30:	ldr	r2, [r5, #8]
   14e34:	cmp	r2, #0
   14e38:	beq	14e54 <argp_failure@@Base+0xdb8>
   14e3c:	ldr	r3, [r5, #12]
   14e40:	mov	r0, r4
   14e44:	tst	r3, #1
   14e48:	ldrne	r1, [pc, #956]	; 1520c <argp_failure@@Base+0x1170>
   14e4c:	ldreq	r1, [pc, #956]	; 15210 <argp_failure@@Base+0x1174>
   14e50:	bl	1745c <argp_parse@@Base+0x1b6c>
   14e54:	sub	r6, r6, #1
   14e58:	add	r9, r9, #24
   14e5c:	b	14df4 <argp_failure@@Base+0xd58>
   14e60:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14e64:	ldr	r6, [r5, #16]
   14e68:	ldr	r1, [r5, #4]
   14e6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14e70:	ldr	r2, [r2, #20]
   14e74:	mov	r0, r6
   14e78:	bl	12a20 <putc_unlocked@plt+0x1728>
   14e7c:	subs	r5, r0, #0
   14e80:	beq	14f94 <argp_failure@@Base+0xef8>
   14e84:	ldrb	r3, [r5]
   14e88:	cmp	r3, #0
   14e8c:	beq	14f84 <argp_failure@@Base+0xee8>
   14e90:	ldr	r2, [r4, #24]
   14e94:	ldr	r3, [r4, #28]
   14e98:	sub	r3, r3, r2
   14e9c:	ldr	r2, [r4, #16]
   14ea0:	cmp	r3, r2
   14ea4:	bls	14eb0 <argp_failure@@Base+0xe14>
   14ea8:	mov	r0, r4
   14eac:	bl	16f28 <argp_parse@@Base+0x1638>
   14eb0:	ldr	r2, [r4, #24]
   14eb4:	ldr	r3, [r4, #28]
   14eb8:	ldr	r7, [r4, #20]
   14ebc:	sub	r3, r3, r2
   14ec0:	ldr	r8, [pc, #748]	; 151b4 <argp_failure@@Base+0x1118>
   14ec4:	ldr	r2, [r4, #16]
   14ec8:	bic	r7, r7, r7, asr #31
   14ecc:	cmp	r3, r2
   14ed0:	ldr	r9, [r8, #20]
   14ed4:	bls	14ee0 <argp_failure@@Base+0xe44>
   14ed8:	mov	r0, r4
   14edc:	bl	16f28 <argp_parse@@Base+0x1638>
   14ee0:	ldr	r2, [r4, #24]
   14ee4:	ldr	r3, [r4, #28]
   14ee8:	str	r9, [r4, #4]
   14eec:	sub	r3, r3, r2
   14ef0:	ldr	r2, [r4, #16]
   14ef4:	ldr	r8, [r8, #20]
   14ef8:	cmp	r3, r2
   14efc:	bls	14f08 <argp_failure@@Base+0xe6c>
   14f00:	mov	r0, r4
   14f04:	bl	16f28 <argp_parse@@Base+0x1638>
   14f08:	ldr	r3, [pc, #676]	; 151b4 <argp_failure@@Base+0x1118>
   14f0c:	str	r8, [r4, #12]
   14f10:	ldr	r1, [r3, #20]
   14f14:	add	r3, r1, #3
   14f18:	cmp	r7, r3
   14f1c:	bls	14ffc <argp_failure@@Base+0xf60>
   14f20:	ldr	r2, [r4, #28]
   14f24:	ldr	r3, [r4, #32]
   14f28:	cmp	r2, r3
   14f2c:	bcs	14fe4 <argp_failure@@Base+0xf48>
   14f30:	ldr	r3, [r4, #28]
   14f34:	add	r2, r3, #1
   14f38:	str	r2, [r4, #28]
   14f3c:	mov	r2, #10
   14f40:	strb	r2, [r3]
   14f44:	mov	r0, r5
   14f48:	bl	111c0 <strlen@plt>
   14f4c:	subs	r7, r0, #0
   14f50:	beq	14f84 <argp_failure@@Base+0xee8>
   14f54:	ldr	r3, [r4, #28]
   14f58:	ldr	r2, [r4, #32]
   14f5c:	add	r3, r3, r7
   14f60:	cmp	r2, r3
   14f64:	bcc	15064 <argp_failure@@Base+0xfc8>
   14f68:	mov	r2, r7
   14f6c:	mov	r1, r5
   14f70:	ldr	r0, [r4, #28]
   14f74:	bl	110ac <memcpy@plt>
   14f78:	ldr	r3, [r4, #28]
   14f7c:	add	r7, r3, r7
   14f80:	str	r7, [r4, #28]
   14f84:	cmp	r6, r5
   14f88:	beq	14f94 <argp_failure@@Base+0xef8>
   14f8c:	mov	r0, r5
   14f90:	bl	1638c <argp_parse@@Base+0xa9c>
   14f94:	ldr	r2, [r4, #24]
   14f98:	ldr	r3, [r4, #28]
   14f9c:	sub	r3, r3, r2
   14fa0:	ldr	r2, [r4, #16]
   14fa4:	cmp	r3, r2
   14fa8:	bls	14fb4 <argp_failure@@Base+0xf18>
   14fac:	mov	r0, r4
   14fb0:	bl	16f28 <argp_parse@@Base+0x1638>
   14fb4:	mov	r3, #0
   14fb8:	str	r3, [r4, #4]
   14fbc:	ldr	r2, [r4, #28]
   14fc0:	ldr	r3, [r4, #32]
   14fc4:	cmp	r2, r3
   14fc8:	bcs	1507c <argp_failure@@Base+0xfe0>
   14fcc:	ldr	r3, [r4, #28]
   14fd0:	add	r2, r3, #1
   14fd4:	str	r2, [r4, #28]
   14fd8:	mov	r2, #10
   14fdc:	strb	r2, [r3]
   14fe0:	b	14c1c <argp_failure@@Base+0xb80>
   14fe4:	mov	r1, #1
   14fe8:	mov	r0, r4
   14fec:	bl	17378 <argp_parse@@Base+0x1a88>
   14ff0:	cmp	r0, #0
   14ff4:	bne	14f30 <argp_failure@@Base+0xe94>
   14ff8:	b	14f44 <argp_failure@@Base+0xea8>
   14ffc:	cmp	r7, r1
   15000:	bcc	15058 <argp_failure@@Base+0xfbc>
   15004:	ldr	r3, [r4, #28]
   15008:	ldr	r2, [r4, #32]
   1500c:	add	r3, r3, #3
   15010:	cmp	r2, r3
   15014:	bcc	15040 <argp_failure@@Base+0xfa4>
   15018:	ldr	r2, [pc, #500]	; 15214 <argp_failure@@Base+0x1178>
   1501c:	ldr	r3, [r4, #28]
   15020:	ldrh	r1, [r2]
   15024:	ldrb	r2, [r2, #2]
   15028:	strh	r1, [r3]
   1502c:	strb	r2, [r3, #2]
   15030:	ldr	r3, [r4, #28]
   15034:	add	r3, r3, #3
   15038:	str	r3, [r4, #28]
   1503c:	b	14f44 <argp_failure@@Base+0xea8>
   15040:	mov	r1, #3
   15044:	mov	r0, r4
   15048:	bl	17378 <argp_parse@@Base+0x1a88>
   1504c:	cmp	r0, #0
   15050:	bne	15018 <argp_failure@@Base+0xf7c>
   15054:	b	14f44 <argp_failure@@Base+0xea8>
   15058:	mov	r0, r4
   1505c:	bl	12998 <putc_unlocked@plt+0x16a0>
   15060:	b	14f44 <argp_failure@@Base+0xea8>
   15064:	mov	r1, r7
   15068:	mov	r0, r4
   1506c:	bl	17378 <argp_parse@@Base+0x1a88>
   15070:	cmp	r0, #0
   15074:	bne	14f68 <argp_failure@@Base+0xecc>
   15078:	b	14f84 <argp_failure@@Base+0xee8>
   1507c:	mov	r1, #1
   15080:	mov	r0, r4
   15084:	bl	17378 <argp_parse@@Base+0x1a88>
   15088:	cmp	r0, #0
   1508c:	bne	14fcc <argp_failure@@Base+0xf30>
   15090:	b	14c1c <argp_failure@@Base+0xb80>
   15094:	mov	r1, #1
   15098:	mov	r0, r4
   1509c:	bl	17378 <argp_parse@@Base+0x1a88>
   150a0:	cmp	r0, #0
   150a4:	bne	148ac <argp_failure@@Base+0x810>
   150a8:	b	148c0 <argp_failure@@Base+0x824>
   150ac:	mov	r1, r6
   150b0:	mov	r0, r4
   150b4:	bl	17378 <argp_parse@@Base+0x1a88>
   150b8:	cmp	r0, #0
   150bc:	bne	148e4 <argp_failure@@Base+0x848>
   150c0:	b	14900 <argp_failure@@Base+0x864>
   150c4:	mov	r1, #1
   150c8:	mov	r0, r4
   150cc:	bl	17378 <argp_parse@@Base+0x1a88>
   150d0:	cmp	r0, #0
   150d4:	bne	14910 <argp_failure@@Base+0x874>
   150d8:	b	14924 <argp_failure@@Base+0x888>
   150dc:	mov	r1, #1
   150e0:	mov	r0, r4
   150e4:	bl	17378 <argp_parse@@Base+0x1a88>
   150e8:	cmp	r0, #0
   150ec:	bne	149a4 <argp_failure@@Base+0x908>
   150f0:	b	149b8 <argp_failure@@Base+0x91c>
   150f4:	cmp	r0, #110	; 0x6e
   150f8:	beq	14414 <argp_failure@@Base+0x378>
   150fc:	mov	sl, r5
   15100:	mov	r7, r5
   15104:	b	14440 <argp_failure@@Base+0x3a4>
   15108:	ldrb	r1, [r9]
   1510c:	cmp	r3, r1
   15110:	bne	14cd8 <argp_failure@@Base+0xc3c>
   15114:	tst	r2, #2
   15118:	bne	151ac <argp_failure@@Base+0x1110>
   1511c:	sub	r1, fp, #76	; 0x4c
   15120:	ldr	r0, [r7, #8]
   15124:	bl	12c3c <putc_unlocked@plt+0x1944>
   15128:	ldr	r2, [r4, #28]
   1512c:	ldr	r3, [r4, #32]
   15130:	cmp	r2, r3
   15134:	bcs	14ce4 <argp_failure@@Base+0xc48>
   15138:	ldr	r3, [r4, #28]
   1513c:	add	r2, r3, #1
   15140:	str	r2, [r4, #28]
   15144:	mov	r2, #45	; 0x2d
   15148:	strb	r2, [r3]
   1514c:	ldr	r1, [r4, #28]
   15150:	ldr	r3, [r4, #32]
   15154:	ldrb	r2, [r9]
   15158:	cmp	r1, r3
   1515c:	bcs	14cfc <argp_failure@@Base+0xc60>
   15160:	ldr	r3, [r4, #28]
   15164:	add	r1, r3, #1
   15168:	str	r1, [r4, #28]
   1516c:	strb	r2, [r3]
   15170:	ldr	r3, [fp, #-120]	; 0xffffff88
   15174:	cmp	r3, #0
   15178:	beq	15188 <argp_failure@@Base+0x10ec>
   1517c:	ldr	r3, [r7]
   15180:	cmp	r3, #0
   15184:	beq	14d1c <argp_failure@@Base+0xc80>
   15188:	ldr	r2, [r5, #8]
   1518c:	cmp	r2, #0
   15190:	beq	151ac <argp_failure@@Base+0x1110>
   15194:	ldr	r3, [r5, #12]
   15198:	mov	r0, r4
   1519c:	tst	r3, #1
   151a0:	ldrne	r1, [pc, #112]	; 15218 <argp_failure@@Base+0x117c>
   151a4:	ldreq	r1, [pc, #112]	; 1521c <argp_failure@@Base+0x1180>
   151a8:	bl	1745c <argp_parse@@Base+0x1b6c>
   151ac:	add	r9, r9, #1
   151b0:	b	14cd8 <argp_failure@@Base+0xc3c>
   151b4:	andeq	sl, r2, ip, asr r2
   151b8:	ldrdeq	r8, [r1], -sl
   151bc:	andeq	r8, r1, sp, lsr fp
   151c0:	andeq	r8, r1, r2, ror #18
   151c4:	andeq	r8, r1, lr, lsl #23
   151c8:	andeq	r8, r1, sl, asr fp
   151cc:	andeq	r8, r1, r8, ror #21
   151d0:	strdeq	r8, [r1], -r2
   151d4:	andeq	r8, r1, r7, lsl fp
   151d8:	muleq	r1, r6, fp
   151dc:	andeq	r8, r1, r7, lsl lr
   151e0:	strdeq	r3, [r1], -r4
   151e4:	andeq	r8, r1, pc, lsr #23
   151e8:	muleq	r1, fp, fp
   151ec:	andeq	r8, r1, r8, lsr #23
   151f0:	andeq	r8, r1, r2, lsr #23
   151f4:			; <UNDEFINED> instruction: 0x00018bbc
   151f8:	andeq	r0, r0, #5
   151fc:	andeq	r8, r1, fp, lsl #24
   15200:	andeq	sl, r2, r0, ror r3
   15204:	andeq	r8, r1, pc, ror ip
   15208:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1520c:	strdeq	r8, [r1], -sp
   15210:	andeq	r8, r1, r3, lsl #24
   15214:	andeq	r8, r1, r7, lsl #24
   15218:	strdeq	r8, [r1], -r3
   1521c:	andeq	r8, r1, r2, ror #13

00015220 <argp_help@@Base>:
   15220:	push	{r0, r1, r2, lr}
   15224:	str	r3, [sp]
   15228:	mov	r3, r2
   1522c:	mov	r2, r1
   15230:	mov	r1, #0
   15234:	bl	141ec <argp_failure@@Base+0x150>
   15238:	add	sp, sp, #12
   1523c:	pop	{pc}		; (ldr pc, [sp], #4)

00015240 <argp_state_help@@Base>:
   15240:	push	{r0, r1, r2, r4, r5, lr}
   15244:	subs	r4, r0, #0
   15248:	mov	r5, r2
   1524c:	beq	15264 <argp_state_help@@Base+0x24>
   15250:	ldr	r3, [r4, #16]
   15254:	tst	r3, #2
   15258:	beq	1527c <argp_state_help@@Base+0x3c>
   1525c:	add	sp, sp, #12
   15260:	pop	{r4, r5, pc}
   15264:	cmp	r1, #0
   15268:	beq	1525c <argp_state_help@@Base+0x1c>
   1526c:	ldr	r3, [pc, #100]	; 152d8 <argp_state_help@@Base+0x98>
   15270:	mov	r0, r4
   15274:	ldr	r3, [r3]
   15278:	b	15294 <argp_state_help@@Base+0x54>
   1527c:	cmp	r1, #0
   15280:	beq	1525c <argp_state_help@@Base+0x1c>
   15284:	tst	r3, #64	; 0x40
   15288:	ldr	r0, [r4]
   1528c:	ldr	r3, [r4, #40]	; 0x28
   15290:	orrne	r5, r5, #128	; 0x80
   15294:	str	r3, [sp]
   15298:	mov	r2, r1
   1529c:	mov	r3, r5
   152a0:	mov	r1, r4
   152a4:	bl	141ec <argp_failure@@Base+0x150>
   152a8:	cmp	r4, #0
   152ac:	beq	152bc <argp_state_help@@Base+0x7c>
   152b0:	ldr	r3, [r4, #16]
   152b4:	tst	r3, #32
   152b8:	bne	1525c <argp_state_help@@Base+0x1c>
   152bc:	ands	r0, r5, #256	; 0x100
   152c0:	ldrne	r3, [pc, #20]	; 152dc <argp_state_help@@Base+0x9c>
   152c4:	ldrne	r0, [r3]
   152c8:	bne	152d4 <argp_state_help@@Base+0x94>
   152cc:	tst	r5, #512	; 0x200
   152d0:	beq	1525c <argp_state_help@@Base+0x1c>
   152d4:	bl	111b4 <exit@plt>
   152d8:	muleq	r2, r8, r2
   152dc:	andeq	sl, r2, r4, lsl #5

000152e0 <argp_error@@Base>:
   152e0:	push	{r1, r2, r3}
   152e4:	push	{r0, r1, r4, r5, lr}
   152e8:	subs	r5, r0, #0
   152ec:	beq	15318 <argp_error@@Base+0x38>
   152f0:	ldr	r3, [r5, #16]
   152f4:	tst	r3, #2
   152f8:	bne	15308 <argp_error@@Base+0x28>
   152fc:	ldr	r4, [r5, #44]	; 0x2c
   15300:	cmp	r4, #0
   15304:	bne	15344 <argp_error@@Base+0x64>
   15308:	add	sp, sp, #8
   1530c:	pop	{r4, r5, lr}
   15310:	add	sp, sp, #12
   15314:	bx	lr
   15318:	ldr	r3, [pc, #144]	; 153b0 <argp_error@@Base+0xd0>
   1531c:	ldr	r4, [r3]
   15320:	cmp	r4, #0
   15324:	beq	15308 <argp_error@@Base+0x28>
   15328:	mov	r0, r4
   1532c:	bl	11268 <flockfile@plt>
   15330:	add	r3, sp, #24
   15334:	str	r3, [sp, #4]
   15338:	ldr	r3, [pc, #116]	; 153b4 <argp_error@@Base+0xd4>
   1533c:	ldr	r0, [r3]
   15340:	b	15358 <argp_error@@Base+0x78>
   15344:	mov	r0, r4
   15348:	bl	11268 <flockfile@plt>
   1534c:	ldr	r0, [r5, #40]	; 0x28
   15350:	add	r3, sp, #24
   15354:	str	r3, [sp, #4]
   15358:	mov	r1, r4
   1535c:	bl	11010 <fputs_unlocked@plt>
   15360:	mov	r1, r4
   15364:	mov	r0, #58	; 0x3a
   15368:	bl	112f8 <putc_unlocked@plt>
   1536c:	mov	r1, r4
   15370:	mov	r0, #32
   15374:	bl	112f8 <putc_unlocked@plt>
   15378:	ldr	r2, [sp, #4]
   1537c:	ldr	r1, [sp, #20]
   15380:	mov	r0, r4
   15384:	bl	11250 <vfprintf@plt>
   15388:	mov	r1, r4
   1538c:	mov	r0, #10
   15390:	bl	112f8 <putc_unlocked@plt>
   15394:	mov	r0, r5
   15398:	mov	r2, #260	; 0x104
   1539c:	mov	r1, r4
   153a0:	bl	15240 <argp_state_help@@Base>
   153a4:	mov	r0, r4
   153a8:	bl	11118 <funlockfile@plt>
   153ac:	b	15308 <argp_error@@Base+0x28>
   153b0:	andeq	sl, r2, r0, lsr #5
   153b4:	muleq	r2, r8, r2
   153b8:	push	{r4, r5, r6, lr}
   153bc:	ldr	r6, [r0]
   153c0:	cmp	r6, #0
   153c4:	beq	15410 <argp_error@@Base+0x130>
   153c8:	mov	ip, r2
   153cc:	ldr	r2, [r0, #32]
   153d0:	mov	r5, r1
   153d4:	str	r2, [r1, #36]	; 0x24
   153d8:	ldr	r2, [r0, #24]
   153dc:	mov	r4, r0
   153e0:	str	r2, [r1, #28]
   153e4:	ldr	r2, [r0, #28]
   153e8:	str	r2, [r1, #32]
   153ec:	ldr	r2, [r0, #12]
   153f0:	mov	r0, ip
   153f4:	str	r2, [r1, #20]
   153f8:	mov	r2, r1
   153fc:	mov	r1, r3
   15400:	blx	r6
   15404:	ldr	r3, [r5, #36]	; 0x24
   15408:	str	r3, [r4, #32]
   1540c:	pop	{r4, r5, r6, pc}
   15410:	mov	r0, #7
   15414:	pop	{r4, r5, r6, pc}
   15418:	ldr	r3, [r0]
   1541c:	push	{r4, r5, r6, lr}
   15420:	cmp	r3, #0
   15424:	ldr	r4, [r0, #16]
   15428:	bne	15438 <argp_error@@Base+0x158>
   1542c:	ldr	r2, [r0, #4]
   15430:	cmp	r2, #0
   15434:	beq	154a0 <argp_error@@Base+0x1c0>
   15438:	ldr	r2, [r1, #8]
   1543c:	cmp	r3, #0
   15440:	add	r2, r2, #1
   15444:	str	r2, [r1, #8]
   15448:	beq	154a0 <argp_error@@Base+0x1c0>
   1544c:	mov	r2, #0
   15450:	add	r3, r3, #24
   15454:	ldr	r0, [r3, #-20]	; 0xffffffec
   15458:	cmp	r0, #0
   1545c:	bne	154dc <argp_error@@Base+0x1fc>
   15460:	ldr	r0, [r3, #-24]	; 0xffffffe8
   15464:	cmp	r0, #0
   15468:	bne	154dc <argp_error@@Base+0x1fc>
   1546c:	ldr	r0, [r3, #-8]
   15470:	cmp	r0, #0
   15474:	bne	154dc <argp_error@@Base+0x1fc>
   15478:	ldr	r0, [r3, #-4]
   1547c:	cmp	r0, #0
   15480:	bne	154dc <argp_error@@Base+0x1fc>
   15484:	ldr	r3, [r1]
   15488:	add	r0, r2, r2, lsl #1
   1548c:	add	r3, r3, r0
   15490:	str	r3, [r1]
   15494:	ldr	r3, [r1, #4]
   15498:	add	r2, r3, r2
   1549c:	str	r2, [r1, #4]
   154a0:	cmp	r4, #0
   154a4:	movne	r5, r1
   154a8:	addne	r4, r4, #16
   154ac:	bne	154c8 <argp_error@@Base+0x1e8>
   154b0:	pop	{r4, r5, r6, pc}
   154b4:	mov	r1, r5
   154b8:	bl	15418 <argp_error@@Base+0x138>
   154bc:	ldr	r3, [r5, #12]
   154c0:	add	r3, r3, #1
   154c4:	str	r3, [r5, #12]
   154c8:	add	r4, r4, #16
   154cc:	ldr	r0, [r4, #-32]	; 0xffffffe0
   154d0:	cmp	r0, #0
   154d4:	bne	154b4 <argp_error@@Base+0x1d4>
   154d8:	pop	{r4, r5, r6, pc}
   154dc:	add	r2, r2, #1
   154e0:	b	15450 <argp_error@@Base+0x170>
   154e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154e8:	sub	sp, sp, #36	; 0x24
   154ec:	ldr	r6, [r0]
   154f0:	mov	r9, r0
   154f4:	cmp	r6, #0
   154f8:	str	r1, [sp, #16]
   154fc:	str	r2, [sp, #20]
   15500:	mov	r4, r3
   15504:	ldr	r5, [sp, #72]	; 0x48
   15508:	ldr	sl, [r0, #16]
   1550c:	addne	r7, r6, #24
   15510:	movne	fp, #0
   15514:	bne	15690 <argp_error@@Base+0x3b0>
   15518:	ldr	r6, [r0, #4]
   1551c:	cmp	r6, #0
   15520:	beq	15584 <argp_error@@Base+0x2a4>
   15524:	ldr	r3, [r9, #4]
   15528:	ldr	r2, [sp, #16]
   1552c:	stm	r4, {r3, r9}
   15530:	ldr	r3, [r5, #4]
   15534:	str	r2, [r4, #16]
   15538:	str	r3, [r4, #8]
   1553c:	ldr	r2, [sp, #20]
   15540:	mov	r3, #0
   15544:	cmp	sl, r3
   15548:	str	r3, [r4, #12]
   1554c:	str	r2, [r4, #20]
   15550:	str	r3, [r4, #24]
   15554:	str	r3, [r4, #32]
   15558:	str	r3, [r4, #28]
   1555c:	beq	1557c <argp_error@@Base+0x29c>
   15560:	ldr	r2, [sl, r3, lsl #4]
   15564:	cmp	r2, #0
   15568:	bne	156ec <argp_error@@Base+0x40c>
   1556c:	ldr	r2, [r5, #12]
   15570:	add	r3, r2, r3, lsl #2
   15574:	str	r2, [r4, #28]
   15578:	str	r3, [r5, #12]
   1557c:	mov	r6, r4
   15580:	add	r4, r4, #36	; 0x24
   15584:	cmp	sl, #0
   15588:	movne	r2, #0
   1558c:	bne	15710 <argp_error@@Base+0x430>
   15590:	mov	r0, r4
   15594:	add	sp, sp, #36	; 0x24
   15598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1559c:	tst	r2, #8
   155a0:	bne	155c8 <argp_error@@Base+0x2e8>
   155a4:	sub	r3, r8, #1
   155a8:	cmp	r3, #254	; 0xfe
   155ac:	bhi	155c8 <argp_error@@Base+0x2e8>
   155b0:	bl	1119c <__ctype_b_loc@plt>
   155b4:	lsl	r3, r8, #1
   155b8:	ldr	r2, [r0]
   155bc:	ldrh	r3, [r2, r3]
   155c0:	tst	r3, #16384	; 0x4000
   155c4:	bne	15720 <argp_error@@Base+0x440>
   155c8:	ldr	r3, [r7, #-24]	; 0xffffffe8
   155cc:	cmp	r3, #0
   155d0:	beq	1568c <argp_error@@Base+0x3ac>
   155d4:	ldr	r2, [r5]
   155d8:	str	r2, [sp, #12]
   155dc:	ldr	r2, [r2, #8]
   155e0:	mov	r8, r2
   155e4:	ldr	r0, [r8]
   155e8:	cmp	r0, #0
   155ec:	beq	1561c <argp_error@@Base+0x33c>
   155f0:	mov	r1, r3
   155f4:	str	r2, [sp, #28]
   155f8:	str	r3, [sp, #24]
   155fc:	bl	11028 <strcmp@plt>
   15600:	ldr	r3, [sp, #24]
   15604:	ldr	r2, [sp, #28]
   15608:	cmp	r0, #0
   1560c:	bne	156e4 <argp_error@@Base+0x404>
   15610:	sub	r8, r8, r2
   15614:	cmn	r8, #15
   15618:	bge	1568c <argp_error@@Base+0x3ac>
   1561c:	ldr	r1, [r5, #8]
   15620:	str	r3, [r1]
   15624:	ldr	r3, [r6, #8]
   15628:	cmp	r3, #0
   1562c:	beq	15644 <argp_error@@Base+0x364>
   15630:	ldr	r3, [r6, #12]
   15634:	tst	r3, #1
   15638:	movne	r3, #2
   1563c:	moveq	r3, #1
   15640:	str	r3, [sp, #8]
   15644:	ldr	r2, [sp, #12]
   15648:	ldr	r3, [sp, #8]
   1564c:	ldr	r0, [pc, #292]	; 15778 <argp_error@@Base+0x498>
   15650:	ldr	r2, [r2, #48]	; 0x30
   15654:	stmib	r1, {r3, fp}
   15658:	sub	r2, r4, r2
   1565c:	ldr	r3, [r7, #-20]	; 0xffffffec
   15660:	asr	r2, r2, #2
   15664:	cmp	r3, #0
   15668:	mul	r2, r0, r2
   1566c:	ldreq	r3, [r6, #4]
   15670:	add	r2, r2, #1
   15674:	bic	r3, r3, #-16777216	; 0xff000000
   15678:	add	r3, r3, r2, lsl #24
   1567c:	str	r3, [r1, #12]
   15680:	add	r3, r1, #16
   15684:	str	r3, [r5, #8]
   15688:	str	fp, [r1, #16]
   1568c:	add	r7, r7, #24
   15690:	ldr	r8, [r7, #-20]	; 0xffffffec
   15694:	sub	r3, r7, #24
   15698:	cmp	r8, #0
   1569c:	bne	156c4 <argp_error@@Base+0x3e4>
   156a0:	ldr	r2, [r7, #-24]	; 0xffffffe8
   156a4:	cmp	r2, #0
   156a8:	bne	156c4 <argp_error@@Base+0x3e4>
   156ac:	ldr	r2, [r7, #-8]
   156b0:	cmp	r2, #0
   156b4:	bne	156c4 <argp_error@@Base+0x3e4>
   156b8:	ldr	r2, [r7, #-4]
   156bc:	cmp	r2, #0
   156c0:	beq	15524 <argp_error@@Base+0x244>
   156c4:	ldr	r2, [r7, #-12]
   156c8:	tst	r2, #4
   156cc:	moveq	r6, r3
   156d0:	ldr	r3, [r6, #12]
   156d4:	ands	r3, r3, #8
   156d8:	str	r3, [sp, #8]
   156dc:	beq	1559c <argp_error@@Base+0x2bc>
   156e0:	b	1568c <argp_error@@Base+0x3ac>
   156e4:	add	r8, r8, #16
   156e8:	b	155e4 <argp_error@@Base+0x304>
   156ec:	add	r3, r3, #1
   156f0:	b	15560 <argp_error@@Base+0x280>
   156f4:	mov	r3, r4
   156f8:	str	r5, [sp]
   156fc:	mov	r1, r6
   15700:	add	r7, r2, #1
   15704:	bl	154e4 <argp_error@@Base+0x204>
   15708:	mov	r2, r7
   1570c:	mov	r4, r0
   15710:	ldr	r0, [sl, r2, lsl #4]
   15714:	cmp	r0, #0
   15718:	bne	156f4 <argp_error@@Base+0x414>
   1571c:	b	15590 <argp_error@@Base+0x2b0>
   15720:	ldr	r3, [r5, #4]
   15724:	add	r2, r3, #1
   15728:	str	r2, [r5, #4]
   1572c:	strb	r8, [r3]
   15730:	ldr	r3, [r6, #8]
   15734:	cmp	r3, #0
   15738:	beq	1576c <argp_error@@Base+0x48c>
   1573c:	ldr	r3, [r5, #4]
   15740:	add	r2, r3, #1
   15744:	str	r2, [r5, #4]
   15748:	mov	r2, #58	; 0x3a
   1574c:	strb	r2, [r3]
   15750:	ldr	r3, [r6, #12]
   15754:	tst	r3, #1
   15758:	ldrne	r3, [r5, #4]
   1575c:	addne	r2, r3, #1
   15760:	strne	r2, [r5, #4]
   15764:	movne	r2, #58	; 0x3a
   15768:	strbne	r2, [r3]
   1576c:	ldr	r3, [r5, #4]
   15770:	strb	fp, [r3]
   15774:	b	155c8 <argp_error@@Base+0x2e8>
   15778:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   1577c:	cmp	r0, #86	; 0x56
   15780:	bne	157ec <argp_error@@Base+0x50c>
   15784:	ldr	r3, [pc, #112]	; 157fc <argp_error@@Base+0x51c>
   15788:	push	{r4, lr}
   1578c:	mov	r4, r2
   15790:	ldr	r3, [r3]
   15794:	cmp	r3, #0
   15798:	beq	157b8 <argp_error@@Base+0x4d8>
   1579c:	mov	r1, r2
   157a0:	ldr	r0, [r2, #48]	; 0x30
   157a4:	blx	r3
   157a8:	ldr	r0, [r4, #16]
   157ac:	ands	r0, r0, #32
   157b0:	bne	157f4 <argp_error@@Base+0x514>
   157b4:	bl	111b4 <exit@plt>
   157b8:	ldr	r3, [pc, #64]	; 15800 <argp_error@@Base+0x520>
   157bc:	ldr	r2, [r3]
   157c0:	cmp	r2, #0
   157c4:	beq	157d8 <argp_error@@Base+0x4f8>
   157c8:	ldr	r1, [pc, #52]	; 15804 <argp_error@@Base+0x524>
   157cc:	ldr	r0, [r4, #48]	; 0x30
   157d0:	bl	111d8 <fprintf@plt>
   157d4:	b	157a8 <argp_error@@Base+0x4c8>
   157d8:	ldr	r2, [pc, #40]	; 15808 <argp_error@@Base+0x528>
   157dc:	ldr	r1, [pc, #40]	; 1580c <argp_error@@Base+0x52c>
   157e0:	mov	r0, r4
   157e4:	bl	152e0 <argp_error@@Base>
   157e8:	b	157a8 <argp_error@@Base+0x4c8>
   157ec:	mov	r0, #7
   157f0:	bx	lr
   157f4:	mov	r0, #0
   157f8:	pop	{r4, pc}
   157fc:	andeq	sl, r2, ip, asr #5
   15800:	andeq	sl, r2, r4, ror r3
   15804:	andeq	r8, r1, r1, lsl pc
   15808:	andeq	r8, r1, ip, lsr #27
   1580c:	andeq	r8, r1, r3, ror #13
   15810:	cmn	r0, #3
   15814:	push	{r4, r5, r6, lr}
   15818:	mov	r4, r2
   1581c:	beq	15860 <argp_error@@Base+0x580>
   15820:	mov	r5, r1
   15824:	bgt	15838 <argp_error@@Base+0x558>
   15828:	cmn	r0, #4
   1582c:	beq	1589c <argp_error@@Base+0x5bc>
   15830:	mov	r0, #7
   15834:	pop	{r4, r5, r6, pc}
   15838:	cmn	r0, #2
   1583c:	beq	15868 <argp_error@@Base+0x588>
   15840:	cmp	r0, #63	; 0x3f
   15844:	ldreq	r2, [pc, #140]	; 158d8 <argp_error@@Base+0x5f8>
   15848:	bne	15830 <argp_error@@Base+0x550>
   1584c:	ldr	r1, [r4, #48]	; 0x30
   15850:	mov	r0, r4
   15854:	bl	15240 <argp_state_help@@Base>
   15858:	mov	r0, #0
   1585c:	pop	{r4, r5, r6, pc}
   15860:	ldr	r2, [pc, #116]	; 158dc <argp_error@@Base+0x5fc>
   15864:	b	1584c <argp_error@@Base+0x56c>
   15868:	ldr	r3, [pc, #112]	; 158e0 <argp_error@@Base+0x600>
   1586c:	mov	r0, r1
   15870:	str	r1, [r3]
   15874:	bl	162fc <argp_parse@@Base+0xa0c>
   15878:	ldr	r3, [pc, #100]	; 158e4 <argp_error@@Base+0x604>
   1587c:	str	r0, [r3]
   15880:	ldr	r3, [r4, #16]
   15884:	str	r0, [r4, #40]	; 0x28
   15888:	and	r3, r3, #3
   1588c:	cmp	r3, #1
   15890:	ldreq	r3, [r4, #8]
   15894:	streq	r5, [r3]
   15898:	b	15858 <argp_error@@Base+0x578>
   1589c:	cmp	r1, #0
   158a0:	ldr	r0, [pc, #64]	; 158e8 <argp_error@@Base+0x608>
   158a4:	movne	r0, r1
   158a8:	bl	11280 <atoi@plt>
   158ac:	ldr	r4, [pc, #56]	; 158ec <argp_error@@Base+0x60c>
   158b0:	mov	r5, #1
   158b4:	str	r0, [r4]
   158b8:	ldr	r3, [r4]
   158bc:	sub	r2, r3, #1
   158c0:	cmp	r3, #0
   158c4:	str	r2, [r4]
   158c8:	ble	15858 <argp_error@@Base+0x578>
   158cc:	mov	r0, r5
   158d0:	bl	110dc <sleep@plt>
   158d4:	b	158b8 <argp_error@@Base+0x5d8>
   158d8:	andeq	r0, r0, sl, ror r2
   158dc:	andeq	r0, r0, r1, lsl #4
   158e0:	muleq	r2, ip, r2
   158e4:	muleq	r2, r8, r2
   158e8:	andeq	r8, r1, pc, asr #27
   158ec:	andeq	sl, r2, r8, asr #5

000158f0 <argp_parse@@Base>:
   158f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158f4:	add	fp, sp, #32
   158f8:	tst	r3, #1
   158fc:	sub	sp, sp, #220	; 0xdc
   15900:	mov	r4, r0
   15904:	mov	r8, r2
   15908:	str	r1, [fp, #-240]	; 0xffffff10
   1590c:	mov	sl, r3
   15910:	bne	15944 <argp_parse@@Base+0x54>
   15914:	ldr	r3, [pc, #2296]	; 16214 <argp_parse@@Base+0x924>
   15918:	ldr	r5, [pc, #2296]	; 16218 <argp_parse@@Base+0x928>
   1591c:	ldr	r2, [r3]
   15920:	cmp	r2, #0
   15924:	ldreq	r2, [r8]
   15928:	streq	r2, [r3]
   1592c:	ldr	r3, [r5]
   15930:	cmp	r3, #0
   15934:	bne	15944 <argp_parse@@Base+0x54>
   15938:	ldr	r0, [r8]
   1593c:	bl	162fc <argp_parse@@Base+0xa0c>
   15940:	str	r0, [r5]
   15944:	ands	r7, sl, #16
   15948:	bne	159d0 <argp_parse@@Base+0xe0>
   1594c:	sub	sp, sp, #72	; 0x48
   15950:	add	r5, sp, #8
   15954:	sub	sp, sp, #40	; 0x28
   15958:	add	r6, sp, #8
   1595c:	mov	r2, #28
   15960:	mov	r1, r7
   15964:	mov	r0, r6
   15968:	bl	111fc <memset@plt>
   1596c:	str	r5, [r6, #16]
   15970:	mov	r0, r5
   15974:	mov	r2, #64	; 0x40
   15978:	mov	r1, r7
   1597c:	bl	111fc <memset@plt>
   15980:	cmp	r4, #0
   15984:	strne	r4, [r5]
   15988:	ldr	r3, [pc, #2188]	; 1621c <argp_parse@@Base+0x92c>
   1598c:	addne	r5, r5, #16
   15990:	str	r3, [r5]
   15994:	ldr	r3, [pc, #2180]	; 16220 <argp_parse@@Base+0x930>
   15998:	ldr	r3, [r3]
   1599c:	cmp	r3, #0
   159a0:	bne	159b8 <argp_parse@@Base+0xc8>
   159a4:	ldr	r3, [pc, #2168]	; 16224 <argp_parse@@Base+0x934>
   159a8:	ldr	r3, [r3]
   159ac:	cmp	r3, #0
   159b0:	addeq	r3, r5, #16
   159b4:	beq	159c4 <argp_parse@@Base+0xd4>
   159b8:	ldr	r2, [pc, #2152]	; 16228 <argp_parse@@Base+0x938>
   159bc:	add	r3, r5, #32
   159c0:	str	r2, [r5, #16]
   159c4:	mov	r4, r6
   159c8:	mov	r2, #0
   159cc:	str	r2, [r3]
   159d0:	mov	r2, #36	; 0x24
   159d4:	mov	r1, #0
   159d8:	sub	r0, fp, #196	; 0xc4
   159dc:	bl	111fc <memset@plt>
   159e0:	ands	r3, sl, #4
   159e4:	moveq	r3, #1
   159e8:	movne	r3, #0
   159ec:	str	r3, [fp, #-228]	; 0xffffff1c
   159f0:	mov	r3, #0
   159f4:	cmp	r4, r3
   159f8:	str	r3, [fp, #-224]	; 0xffffff20
   159fc:	str	r3, [fp, #-220]	; 0xffffff24
   15a00:	str	r3, [fp, #-216]	; 0xffffff28
   15a04:	beq	15a14 <argp_parse@@Base+0x124>
   15a08:	sub	r1, fp, #228	; 0xe4
   15a0c:	mov	r0, r4
   15a10:	bl	15418 <argp_error@@Base+0x138>
   15a14:	ldr	r9, [fp, #-220]	; 0xffffff24
   15a18:	ldr	r5, [fp, #-216]	; 0xffffff28
   15a1c:	add	r3, r9, #1
   15a20:	mov	r9, #36	; 0x24
   15a24:	ldr	r6, [fp, #-224]	; 0xffffff20
   15a28:	mul	r9, r9, r3
   15a2c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   15a30:	lsl	r5, r5, #2
   15a34:	add	r6, r6, #1
   15a38:	add	r3, r9, r5
   15a3c:	add	r6, r3, r6, lsl #4
   15a40:	add	r0, r0, #1
   15a44:	add	r0, r0, r6
   15a48:	str	r3, [fp, #-236]	; 0xffffff14
   15a4c:	bl	16e14 <argp_parse@@Base+0x1524>
   15a50:	cmp	r0, #0
   15a54:	mov	r7, r0
   15a58:	str	r0, [fp, #-40]	; 0xffffffd8
   15a5c:	moveq	r4, #12
   15a60:	beq	15be0 <argp_parse@@Base+0x2f0>
   15a64:	add	r3, r0, r9
   15a68:	str	r3, [fp, #-232]	; 0xffffff18
   15a6c:	str	r3, [fp, #-104]	; 0xffffff98
   15a70:	ldr	r3, [fp, #-236]	; 0xffffff14
   15a74:	sub	lr, fp, #196	; 0xc4
   15a78:	add	r3, r0, r3
   15a7c:	str	r3, [fp, #-236]	; 0xffffff14
   15a80:	str	r3, [fp, #-152]	; 0xffffff68
   15a84:	mov	r3, #1
   15a88:	add	r9, r0, r6
   15a8c:	str	r0, [fp, #-112]	; 0xffffff90
   15a90:	str	r3, [fp, #-196]	; 0xffffff3c
   15a94:	str	r3, [fp, #-192]	; 0xffffff40
   15a98:	ldm	lr!, {r0, r1, r2, r3}
   15a9c:	sub	ip, fp, #148	; 0x94
   15aa0:	str	r9, [fp, #-156]	; 0xffffff64
   15aa4:	stmia	ip!, {r0, r1, r2, r3}
   15aa8:	ldm	lr!, {r0, r1, r2, r3}
   15aac:	stmia	ip!, {r0, r1, r2, r3}
   15ab0:	mov	r2, r5
   15ab4:	ldr	r3, [lr]
   15ab8:	mov	r1, #0
   15abc:	ldr	r0, [fp, #-232]	; 0xffffff18
   15ac0:	str	r3, [ip]
   15ac4:	bl	111fc <memset@plt>
   15ac8:	ldr	r3, [fp, #-236]	; 0xffffff14
   15acc:	tst	sl, #8
   15ad0:	str	r3, [fp, #-204]	; 0xffffff34
   15ad4:	ldr	r3, [fp, #-232]	; 0xffffff18
   15ad8:	str	r9, [fp, #-208]	; 0xffffff30
   15adc:	sub	r5, fp, #160	; 0xa0
   15ae0:	addne	r9, r9, #1
   15ae4:	str	r3, [fp, #-200]	; 0xffffff38
   15ae8:	str	r5, [fp, #-212]	; 0xffffff2c
   15aec:	strne	r9, [fp, #-208]	; 0xffffff30
   15af0:	movne	r3, #45	; 0x2d
   15af4:	bne	15b10 <argp_parse@@Base+0x220>
   15af8:	ands	r3, sl, #4
   15afc:	cmp	r3, #0
   15b00:	beq	15b14 <argp_parse@@Base+0x224>
   15b04:	mov	r3, #43	; 0x2b
   15b08:	add	r9, r9, #1
   15b0c:	str	r9, [fp, #-208]	; 0xffffff30
   15b10:	strb	r3, [r7, r6]
   15b14:	ldr	r3, [fp, #-208]	; 0xffffff30
   15b18:	mov	r2, #0
   15b1c:	cmp	r4, r2
   15b20:	strb	r2, [r3]
   15b24:	ldr	r3, [fp, #-204]	; 0xffffff34
   15b28:	str	r2, [r3]
   15b2c:	ldreq	r3, [fp, #-112]	; 0xffffff90
   15b30:	str	r4, [fp, #-160]	; 0xffffff60
   15b34:	streq	r3, [fp, #-108]	; 0xffffff94
   15b38:	beq	15b58 <argp_parse@@Base+0x268>
   15b3c:	sub	r3, fp, #212	; 0xd4
   15b40:	str	r3, [sp]
   15b44:	mov	r1, r2
   15b48:	ldr	r3, [fp, #-112]	; 0xffffff90
   15b4c:	mov	r0, r4
   15b50:	bl	154e4 <argp_error@@Base+0x204>
   15b54:	str	r0, [fp, #-108]	; 0xffffff94
   15b58:	mov	r2, #56	; 0x38
   15b5c:	mov	r1, #0
   15b60:	add	r0, r5, #64	; 0x40
   15b64:	bl	111fc <memset@plt>
   15b68:	ldr	r3, [fp, #-160]	; 0xffffff60
   15b6c:	ldr	r6, [fp, #-112]	; 0xffffff90
   15b70:	str	r3, [fp, #-96]	; 0xffffffa0
   15b74:	ldr	r3, [fp, #-240]	; 0xffffff10
   15b78:	str	sl, [fp, #-80]	; 0xffffffb0
   15b7c:	str	r3, [fp, #-92]	; 0xffffffa4
   15b80:	ldr	r3, [pc, #1700]	; 1622c <argp_parse@@Base+0x93c>
   15b84:	mov	r4, #0
   15b88:	ldr	sl, [pc, #1696]	; 16230 <argp_parse@@Base+0x940>
   15b8c:	ldr	r3, [r3]
   15b90:	add	r7, r5, #64	; 0x40
   15b94:	str	r3, [fp, #-52]	; 0xffffffcc
   15b98:	ldr	r3, [pc, #1684]	; 16234 <argp_parse@@Base+0x944>
   15b9c:	mov	r9, r4
   15ba0:	str	r8, [fp, #-88]	; 0xffffffa8
   15ba4:	ldr	r3, [r3]
   15ba8:	str	r5, [fp, #-44]	; 0xffffffd4
   15bac:	str	r3, [fp, #-48]	; 0xffffffd0
   15bb0:	mov	r3, #1
   15bb4:	str	r3, [fp, #-100]	; 0xffffff9c
   15bb8:	ldr	r3, [fp, #-108]	; 0xffffff94
   15bbc:	cmp	r6, r3
   15bc0:	ldrcc	r3, [fp, #8]
   15bc4:	strcc	r3, [r6, #24]
   15bc8:	ldr	r3, [fp, #-108]	; 0xffffff94
   15bcc:	cmp	r6, r3
   15bd0:	bcs	15c54 <argp_parse@@Base+0x364>
   15bd4:	cmp	r4, #7
   15bd8:	cmpne	r4, #0
   15bdc:	beq	15bec <argp_parse@@Base+0x2fc>
   15be0:	mov	r0, r4
   15be4:	sub	sp, fp, #32
   15be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bec:	ldr	r3, [r6, #16]
   15bf0:	cmp	r3, #0
   15bf4:	ldrne	r3, [r3, #28]
   15bf8:	ldrne	r2, [r6, #20]
   15bfc:	ldrne	r3, [r3, r2, lsl #2]
   15c00:	strne	r3, [r6, #24]
   15c04:	ldr	r3, [r6]
   15c08:	cmp	r3, #0
   15c0c:	bne	15c34 <argp_parse@@Base+0x344>
   15c10:	ldr	r3, [r6, #4]
   15c14:	ldr	r3, [r3, #16]
   15c18:	cmp	r3, #0
   15c1c:	beq	15c34 <argp_parse@@Base+0x344>
   15c20:	ldr	r3, [r3]
   15c24:	cmp	r3, #0
   15c28:	ldrne	r3, [r6, #28]
   15c2c:	ldrne	r2, [r6, #24]
   15c30:	strne	r2, [r3]
   15c34:	mov	r0, r6
   15c38:	mov	r3, r9
   15c3c:	mov	r2, sl
   15c40:	mov	r1, r7
   15c44:	bl	153b8 <argp_error@@Base+0xd8>
   15c48:	add	r6, r6, #36	; 0x24
   15c4c:	mov	r4, r0
   15c50:	b	15bc8 <argp_parse@@Base+0x2d8>
   15c54:	cmp	r4, #7
   15c58:	beq	15c64 <argp_parse@@Base+0x374>
   15c5c:	cmp	r4, #0
   15c60:	bne	15be0 <argp_parse@@Base+0x2f0>
   15c64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15c68:	tst	r3, #2
   15c6c:	moveq	r3, #1
   15c70:	streq	r3, [fp, #-144]	; 0xffffff70
   15c74:	beq	15c9c <argp_parse@@Base+0x3ac>
   15c78:	tst	r3, #1
   15c7c:	mov	r2, #0
   15c80:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   15c84:	str	r2, [fp, #-144]	; 0xffffff70
   15c88:	subne	r3, r3, #4
   15c8c:	strne	r3, [fp, #-88]	; 0xffffffa8
   15c90:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   15c94:	addne	r3, r3, #1
   15c98:	strne	r3, [fp, #-92]	; 0xffffffa4
   15c9c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15ca0:	cmp	r8, r3
   15ca4:	bne	15cc8 <argp_parse@@Base+0x3d8>
   15ca8:	ldr	r0, [r8]
   15cac:	cmp	r0, #0
   15cb0:	beq	15cc8 <argp_parse@@Base+0x3d8>
   15cb4:	bl	162fc <argp_parse@@Base+0xa0c>
   15cb8:	str	r0, [fp, #-56]	; 0xffffffc8
   15cbc:	add	r8, r5, #64	; 0x40
   15cc0:	ldr	r9, [pc, #1392]	; 16238 <argp_parse@@Base+0x948>
   15cc4:	b	15e8c <argp_parse@@Base+0x59c>
   15cc8:	ldr	r3, [pc, #1352]	; 16218 <argp_parse@@Base+0x928>
   15ccc:	ldr	r3, [r3]
   15cd0:	str	r3, [fp, #-56]	; 0xffffffc8
   15cd4:	b	15cbc <argp_parse@@Base+0x3cc>
   15cd8:	bl	16404 <argp_parse@@Base+0xb14>
   15cdc:	b	15ef8 <argp_parse@@Base+0x608>
   15ce0:	cmp	r0, #63	; 0x3f
   15ce4:	bne	161a8 <argp_parse@@Base+0x8b8>
   15ce8:	ldr	r3, [fp, #-140]	; 0xffffff74
   15cec:	cmn	r3, #1
   15cf0:	bne	1614c <argp_parse@@Base+0x85c>
   15cf4:	asrs	r3, r6, #24
   15cf8:	bne	15fb4 <argp_parse@@Base+0x6c4>
   15cfc:	mov	r1, r6
   15d00:	ldr	r0, [fp, #-156]	; 0xffffff64
   15d04:	bl	111cc <strchr@plt>
   15d08:	subs	r2, r0, #0
   15d0c:	beq	15d48 <argp_parse@@Base+0x458>
   15d10:	ldr	r0, [fp, #-112]	; 0xffffff90
   15d14:	ldr	r3, [fp, #-108]	; 0xffffff94
   15d18:	cmp	r0, r3
   15d1c:	bcs	15d48 <argp_parse@@Base+0x458>
   15d20:	ldr	r1, [r0, #8]
   15d24:	cmp	r2, r1
   15d28:	bcs	15fac <argp_parse@@Base+0x6bc>
   15d2c:	ldr	r3, [fp, #-136]	; 0xffffff78
   15d30:	mov	r2, r6
   15d34:	mov	r1, r8
   15d38:	bl	153b8 <argp_error@@Base+0xd8>
   15d3c:	cmp	r0, #7
   15d40:	mov	r4, r0
   15d44:	bne	16040 <argp_parse@@Base+0x750>
   15d48:	ldr	r3, [pc, #1260]	; 1623c <argp_parse@@Base+0x94c>
   15d4c:	ldr	r1, [pc, #1260]	; 16240 <argp_parse@@Base+0x950>
   15d50:	mov	r2, r6
   15d54:	add	r0, r5, #64	; 0x40
   15d58:	bl	152e0 <argp_error@@Base>
   15d5c:	sub	r7, r6, #1
   15d60:	mov	r4, #7
   15d64:	clz	r7, r7
   15d68:	lsr	r7, r7, #5
   15d6c:	cmp	r4, #7
   15d70:	movne	r7, #0
   15d74:	andeq	r7, r7, #1
   15d78:	cmp	r7, #0
   15d7c:	beq	160c0 <argp_parse@@Base+0x7d0>
   15d80:	ldr	r3, [fp, #-84]	; 0xffffffac
   15d84:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15d88:	cmp	r3, r2
   15d8c:	bne	16118 <argp_parse@@Base+0x828>
   15d90:	mov	r4, #0
   15d94:	ldr	r7, [fp, #-112]	; 0xffffff90
   15d98:	ldr	sl, [pc, #1188]	; 16244 <argp_parse@@Base+0x954>
   15d9c:	add	r8, r5, #64	; 0x40
   15da0:	mov	r9, r4
   15da4:	ldr	r6, [fp, #-108]	; 0xffffff94
   15da8:	cmp	r7, r6
   15dac:	bcc	1604c <argp_parse@@Base+0x75c>
   15db0:	ldr	r9, [pc, #1168]	; 16248 <argp_parse@@Base+0x958>
   15db4:	sub	r6, r6, #36	; 0x24
   15db8:	add	r7, r5, #64	; 0x40
   15dbc:	mov	r8, #0
   15dc0:	ldr	r3, [fp, #-112]	; 0xffffff90
   15dc4:	cmp	r6, r3
   15dc8:	bcc	160a4 <argp_parse@@Base+0x7b4>
   15dcc:	cmp	r4, #7
   15dd0:	cmpne	r4, #0
   15dd4:	beq	16084 <argp_parse@@Base+0x794>
   15dd8:	ldr	r3, [fp, #4]
   15ddc:	cmp	r3, #0
   15de0:	beq	160c0 <argp_parse@@Base+0x7d0>
   15de4:	ldr	r2, [fp, #4]
   15de8:	ldr	r3, [fp, #-84]	; 0xffffffac
   15dec:	str	r3, [r2]
   15df0:	b	160b8 <argp_parse@@Base+0x7c8>
   15df4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15df8:	tst	r2, #4
   15dfc:	bne	15d80 <argp_parse@@Base+0x490>
   15e00:	add	r2, r3, #1
   15e04:	str	r2, [fp, #-84]	; 0xffffffac
   15e08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15e0c:	ldr	r3, [r2, r3, lsl #2]
   15e10:	str	r3, [fp, #-136]	; 0xffffff78
   15e14:	ldr	r3, [fp, #-136]	; 0xffffff78
   15e18:	ldr	r7, [fp, #-84]	; 0xffffffac
   15e1c:	str	r3, [fp, #-232]	; 0xffffff18
   15e20:	ldr	r6, [fp, #-112]	; 0xffffff90
   15e24:	mov	r3, #0
   15e28:	mov	r4, #7
   15e2c:	mov	sl, r3
   15e30:	sub	r7, r7, #1
   15e34:	str	r7, [fp, #-84]	; 0xffffffac
   15e38:	ldr	r2, [fp, #-108]	; 0xffffff94
   15e3c:	cmp	r6, r2
   15e40:	movcs	r2, #0
   15e44:	movcc	r2, #1
   15e48:	cmp	r4, #7
   15e4c:	movne	r2, #0
   15e50:	cmp	r2, #0
   15e54:	bne	15f4c <argp_parse@@Base+0x65c>
   15e58:	cmp	r4, #0
   15e5c:	bne	16030 <argp_parse@@Base+0x740>
   15e60:	cmp	r3, r9
   15e64:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   15e68:	streq	r3, [fp, #-84]	; 0xffffffac
   15e6c:	ldr	r3, [fp, #-84]	; 0xffffffac
   15e70:	cmp	r7, r3
   15e74:	sublt	r7, r3, r7
   15e78:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   15e7c:	movge	r3, #1
   15e80:	addlt	r7, r3, r7
   15e84:	strlt	r7, [r6, #-24]	; 0xffffffe8
   15e88:	strge	r3, [fp, #-100]	; 0xffffff9c
   15e8c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15e90:	ldr	r3, [fp, #-84]	; 0xffffffac
   15e94:	cmp	r2, #0
   15e98:	beq	15ea8 <argp_parse@@Base+0x5b8>
   15e9c:	cmp	r2, r3
   15ea0:	movgt	r2, #0
   15ea4:	strgt	r2, [fp, #-72]	; 0xffffffb8
   15ea8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15eac:	cmp	r2, #0
   15eb0:	beq	15f38 <argp_parse@@Base+0x648>
   15eb4:	ldr	r7, [fp, #-72]	; 0xffffffb8
   15eb8:	cmp	r7, #0
   15ebc:	bne	15f38 <argp_parse@@Base+0x648>
   15ec0:	str	r3, [fp, #-148]	; 0xffffff6c
   15ec4:	mvn	r3, #0
   15ec8:	str	r3, [fp, #-140]	; 0xffffff74
   15ecc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15ed0:	str	r7, [sp]
   15ed4:	tst	r3, #64	; 0x40
   15ed8:	add	r3, r5, #12
   15edc:	str	r3, [sp, #4]
   15ee0:	ldr	r2, [fp, #-156]	; 0xffffff64
   15ee4:	ldr	r3, [fp, #-152]	; 0xffffff68
   15ee8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15eec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15ef0:	beq	15cd8 <argp_parse@@Base+0x3e8>
   15ef4:	bl	16450 <argp_parse@@Base+0xb60>
   15ef8:	ldr	r4, [fp, #-148]	; 0xffffff6c
   15efc:	cmn	r0, #1
   15f00:	mov	r6, r0
   15f04:	str	r4, [fp, #-84]	; 0xffffffac
   15f08:	bne	15ce0 <argp_parse@@Base+0x3f0>
   15f0c:	mov	r3, #0
   15f10:	cmp	r4, #1
   15f14:	str	r3, [fp, #-100]	; 0xffffff9c
   15f18:	ble	15f38 <argp_parse@@Base+0x648>
   15f1c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15f20:	sub	r3, r4, #-1073741823	; 0xc0000001
   15f24:	ldr	r1, [pc, #800]	; 1624c <argp_parse@@Base+0x95c>
   15f28:	ldr	r0, [r2, r3, lsl #2]
   15f2c:	bl	11028 <strcmp@plt>
   15f30:	cmp	r0, #0
   15f34:	streq	r4, [fp, #-72]	; 0xffffffb8
   15f38:	ldr	r3, [fp, #-84]	; 0xffffffac
   15f3c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15f40:	cmp	r3, r2
   15f44:	bge	15d80 <argp_parse@@Base+0x490>
   15f48:	b	15df4 <argp_parse@@Base+0x504>
   15f4c:	ldr	r3, [fp, #-84]	; 0xffffffac
   15f50:	mov	r2, sl
   15f54:	add	r3, r3, #1
   15f58:	str	r3, [fp, #-84]	; 0xffffffac
   15f5c:	mov	r1, r8
   15f60:	ldr	r3, [fp, #-232]	; 0xffffff18
   15f64:	mov	r0, r6
   15f68:	bl	153b8 <argp_error@@Base+0xd8>
   15f6c:	cmp	r0, #7
   15f70:	mov	r4, r0
   15f74:	movne	r3, sl
   15f78:	bne	15fa4 <argp_parse@@Base+0x6b4>
   15f7c:	ldr	r3, [fp, #-84]	; 0xffffffac
   15f80:	mov	r2, r9
   15f84:	sub	r3, r3, #1
   15f88:	str	r3, [fp, #-84]	; 0xffffffac
   15f8c:	mov	r1, r8
   15f90:	mov	r3, sl
   15f94:	mov	r0, r6
   15f98:	bl	153b8 <argp_error@@Base+0xd8>
   15f9c:	mov	r3, r9
   15fa0:	mov	r4, r0
   15fa4:	add	r6, r6, #36	; 0x24
   15fa8:	b	15e38 <argp_parse@@Base+0x548>
   15fac:	add	r0, r0, #36	; 0x24
   15fb0:	b	15d18 <argp_parse@@Base+0x428>
   15fb4:	mov	r0, #36	; 0x24
   15fb8:	ands	r1, r6, #8388608	; 0x800000
   15fbc:	mul	r0, r0, r3
   15fc0:	ldr	ip, [fp, #-112]	; 0xffffff90
   15fc4:	movne	r1, #-16777216	; 0xff000000
   15fc8:	bic	r2, r6, #-16777216	; 0xff000000
   15fcc:	sub	r0, r0, #36	; 0x24
   15fd0:	orr	r2, r2, r1
   15fd4:	ldr	r3, [fp, #-136]	; 0xffffff78
   15fd8:	mov	r1, r8
   15fdc:	add	r0, ip, r0
   15fe0:	bl	153b8 <argp_error@@Base+0xd8>
   15fe4:	cmp	r0, #7
   15fe8:	mov	r4, r0
   15fec:	bne	16040 <argp_parse@@Base+0x750>
   15ff0:	ldr	r3, [fp, #-152]	; 0xffffff68
   15ff4:	b	16008 <argp_parse@@Base+0x718>
   15ff8:	ldr	r2, [r3]
   15ffc:	cmp	r2, #0
   16000:	beq	16014 <argp_parse@@Base+0x724>
   16004:	add	r3, r3, #16
   16008:	ldr	r2, [r3, #12]
   1600c:	cmp	r2, r6
   16010:	bne	15ff8 <argp_parse@@Base+0x708>
   16014:	ldr	r2, [r3]
   16018:	ldr	r1, [pc, #560]	; 16250 <argp_parse@@Base+0x960>
   1601c:	cmp	r2, #0
   16020:	moveq	r2, r1
   16024:	ldr	r3, [pc, #528]	; 1623c <argp_parse@@Base+0x94c>
   16028:	ldr	r1, [pc, #548]	; 16254 <argp_parse@@Base+0x964>
   1602c:	b	15d54 <argp_parse@@Base+0x464>
   16030:	cmp	r4, #7
   16034:	bne	160c8 <argp_parse@@Base+0x7d8>
   16038:	mov	r6, #1
   1603c:	b	15d5c <argp_parse@@Base+0x46c>
   16040:	cmp	r4, #0
   16044:	beq	15e8c <argp_parse@@Base+0x59c>
   16048:	b	15d6c <argp_parse@@Base+0x47c>
   1604c:	cmp	r4, #7
   16050:	cmpne	r4, #0
   16054:	bne	15db0 <argp_parse@@Base+0x4c0>
   16058:	ldr	r3, [r7, #12]
   1605c:	cmp	r3, #0
   16060:	bne	1607c <argp_parse@@Base+0x78c>
   16064:	mov	r3, r9
   16068:	mov	r2, sl
   1606c:	mov	r1, r8
   16070:	mov	r0, r7
   16074:	bl	153b8 <argp_error@@Base+0xd8>
   16078:	mov	r4, r0
   1607c:	add	r7, r7, #36	; 0x24
   16080:	b	15da4 <argp_parse@@Base+0x4b4>
   16084:	mov	r0, r6
   16088:	mov	r3, r8
   1608c:	mov	r2, r9
   16090:	mov	r1, r7
   16094:	bl	153b8 <argp_error@@Base+0xd8>
   16098:	sub	r6, r6, #36	; 0x24
   1609c:	mov	r4, r0
   160a0:	b	15dc0 <argp_parse@@Base+0x4d0>
   160a4:	cmp	r4, #7
   160a8:	beq	161b4 <argp_parse@@Base+0x8c4>
   160ac:	ldr	r3, [fp, #4]
   160b0:	cmp	r3, #0
   160b4:	bne	15de4 <argp_parse@@Base+0x4f4>
   160b8:	cmp	r4, #0
   160bc:	beq	161c4 <argp_parse@@Base+0x8d4>
   160c0:	cmp	r4, #7
   160c4:	beq	1614c <argp_parse@@Base+0x85c>
   160c8:	ldr	r6, [fp, #-112]	; 0xffffff90
   160cc:	ldr	r9, [pc, #388]	; 16258 <argp_parse@@Base+0x968>
   160d0:	add	r7, r5, #64	; 0x40
   160d4:	mov	r8, #0
   160d8:	ldr	r3, [fp, #-108]	; 0xffffff94
   160dc:	cmp	r6, r3
   160e0:	bcc	16164 <argp_parse@@Base+0x874>
   160e4:	ldr	r6, [fp, #-108]	; 0xffffff94
   160e8:	ldr	r8, [pc, #364]	; 1625c <argp_parse@@Base+0x96c>
   160ec:	sub	r6, r6, #36	; 0x24
   160f0:	add	r5, r5, #64	; 0x40
   160f4:	mov	r7, #0
   160f8:	ldr	r3, [fp, #-112]	; 0xffffff90
   160fc:	cmp	r6, r3
   16100:	bcs	1618c <argp_parse@@Base+0x89c>
   16104:	cmp	r4, #7
   16108:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1610c:	moveq	r4, #22
   16110:	bl	1638c <argp_parse@@Base+0xa9c>
   16114:	b	15be0 <argp_parse@@Base+0x2f0>
   16118:	ldr	r2, [fp, #4]
   1611c:	cmp	r2, #0
   16120:	strne	r3, [r2]
   16124:	bne	161c4 <argp_parse@@Base+0x8d4>
   16128:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1612c:	tst	r3, #2
   16130:	bne	1614c <argp_parse@@Base+0x85c>
   16134:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16138:	cmp	r0, #0
   1613c:	beq	1614c <argp_parse@@Base+0x85c>
   16140:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16144:	ldr	r1, [pc, #276]	; 16260 <argp_parse@@Base+0x970>
   16148:	bl	111d8 <fprintf@plt>
   1614c:	mov	r2, #260	; 0x104
   16150:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16154:	add	r0, r5, #64	; 0x40
   16158:	bl	15240 <argp_state_help@@Base>
   1615c:	mov	r4, #7
   16160:	b	160c8 <argp_parse@@Base+0x7d8>
   16164:	mov	r0, r6
   16168:	mov	r3, r8
   1616c:	mov	r2, r9
   16170:	mov	r1, r7
   16174:	bl	153b8 <argp_error@@Base+0xd8>
   16178:	add	r6, r6, #36	; 0x24
   1617c:	b	160d8 <argp_parse@@Base+0x7e8>
   16180:	cmp	r4, #7
   16184:	moveq	r4, #0
   16188:	b	160e4 <argp_parse@@Base+0x7f4>
   1618c:	mov	r0, r6
   16190:	mov	r3, r7
   16194:	mov	r2, r8
   16198:	mov	r1, r5
   1619c:	bl	153b8 <argp_error@@Base+0xd8>
   161a0:	sub	r6, r6, #36	; 0x24
   161a4:	b	160f8 <argp_parse@@Base+0x808>
   161a8:	cmp	r0, #1
   161ac:	bne	15cf4 <argp_parse@@Base+0x404>
   161b0:	b	15e14 <argp_parse@@Base+0x524>
   161b4:	ldr	r3, [fp, #4]
   161b8:	cmp	r3, #0
   161bc:	movne	r4, #0
   161c0:	bne	15de4 <argp_parse@@Base+0x4f4>
   161c4:	ldr	r6, [fp, #-108]	; 0xffffff94
   161c8:	mov	r4, #0
   161cc:	ldr	r9, [pc, #144]	; 16264 <argp_parse@@Base+0x974>
   161d0:	sub	r6, r6, #36	; 0x24
   161d4:	add	r7, r5, #64	; 0x40
   161d8:	mov	r8, r4
   161dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   161e0:	cmp	r6, r3
   161e4:	bcc	16180 <argp_parse@@Base+0x890>
   161e8:	cmp	r4, #7
   161ec:	cmpne	r4, #0
   161f0:	bne	160e4 <argp_parse@@Base+0x7f4>
   161f4:	mov	r0, r6
   161f8:	mov	r3, r8
   161fc:	mov	r2, r9
   16200:	mov	r1, r7
   16204:	bl	153b8 <argp_error@@Base+0xd8>
   16208:	sub	r6, r6, #36	; 0x24
   1620c:	mov	r4, r0
   16210:	b	161dc <argp_parse@@Base+0x8ec>
   16214:	muleq	r2, ip, r2
   16218:	muleq	r2, r8, r2
   1621c:	muleq	r1, r4, ip
   16220:	andeq	sl, r2, r4, ror r3
   16224:	andeq	sl, r2, ip, asr #5
   16228:			; <UNDEFINED> instruction: 0x00018cb0
   1622c:	andeq	sl, r2, r0, lsr #5
   16230:	tsteq	r0, r3
   16234:	andeq	sl, r2, r4, lsr #5
   16238:	tsteq	r0, r6
   1623c:	andeq	r8, r1, ip, asr #25
   16240:	ldrdeq	r8, [r1], -fp
   16244:	tsteq	r0, r2
   16248:	tsteq	r0, r1
   1624c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   16250:	ldrdeq	r8, [r1], -r4
   16254:	andeq	r8, r1, r3, ror #27
   16258:	tsteq	r0, r5
   1625c:	tsteq	r0, r7
   16260:	andeq	r8, r1, ip, ror #27
   16264:	tsteq	r0, r4
   16268:	cmp	r1, #0
   1626c:	ldrne	r2, [r1, #52]	; 0x34
   16270:	ldrne	r3, [r2, #48]	; 0x30
   16274:	ldrne	r2, [r2, #52]	; 0x34
   16278:	bne	16288 <argp_parse@@Base+0x998>
   1627c:	mov	r0, #0
   16280:	bx	lr
   16284:	add	r3, r3, #36	; 0x24
   16288:	cmp	r3, r2
   1628c:	bcs	1627c <argp_parse@@Base+0x98c>
   16290:	ldr	r1, [r3, #4]
   16294:	cmp	r1, r0
   16298:	bne	16284 <argp_parse@@Base+0x994>
   1629c:	ldr	r0, [r3, #24]
   162a0:	bx	lr
   162a4:	push	{r0, r1, r2, lr}
   162a8:	ldr	r1, [pc, #28]	; 162cc <argp_parse@@Base+0x9dc>
   162ac:	ldr	r2, [pc, #28]	; 162d0 <argp_parse@@Base+0x9e0>
   162b0:	ldr	r3, [r1, #4]
   162b4:	str	r3, [sp]
   162b8:	ldr	r3, [pc, #20]	; 162d4 <argp_parse@@Base+0x9e4>
   162bc:	ldr	r1, [r1]
   162c0:	bl	16808 <argp_parse@@Base+0xf18>
   162c4:	add	sp, sp, #12
   162c8:	pop	{pc}		; (ldr pc, [sp], #4)
   162cc:	ldrdeq	sl, [r2], -r0
   162d0:			; <UNDEFINED> instruction: 0x00018eb7
   162d4:	andeq	r8, r1, sl, lsr #29
   162d8:	ldr	r3, [pc, #16]	; 162f0 <argp_parse@@Base+0xa00>
   162dc:	ldr	r2, [pc, #16]	; 162f4 <argp_parse@@Base+0xa04>
   162e0:	str	r2, [r3]
   162e4:	ldr	r3, [pc, #12]	; 162f8 <argp_parse@@Base+0xa08>
   162e8:	stm	r3, {r0, r1}
   162ec:	bx	lr
   162f0:	andeq	sl, r2, ip, asr #5
   162f4:	andeq	r6, r1, r4, lsr #5
   162f8:	ldrdeq	sl, [r2], -r0
   162fc:	mov	r2, r0
   16300:	push	{r4, lr}
   16304:	mov	r0, r2
   16308:	ldrb	r3, [r2]
   1630c:	add	r1, r2, #1
   16310:	cmp	r3, #47	; 0x2f
   16314:	beq	16338 <argp_parse@@Base+0xa48>
   16318:	mov	r3, #0
   1631c:	mov	lr, #1
   16320:	mov	r4, r3
   16324:	mov	ip, r2
   16328:	ldrb	r1, [r2], #1
   1632c:	cmp	r1, #0
   16330:	bne	16340 <argp_parse@@Base+0xa50>
   16334:	pop	{r4, pc}
   16338:	mov	r2, r1
   1633c:	b	16304 <argp_parse@@Base+0xa14>
   16340:	cmp	r1, #47	; 0x2f
   16344:	moveq	r3, lr
   16348:	beq	16324 <argp_parse@@Base+0xa34>
   1634c:	cmp	r3, #0
   16350:	movne	r0, ip
   16354:	movne	r3, r4
   16358:	b	16324 <argp_parse@@Base+0xa34>
   1635c:	push	{r4, lr}
   16360:	mov	r4, r0
   16364:	bl	111c0 <strlen@plt>
   16368:	cmp	r0, #1
   1636c:	popls	{r4, pc}
   16370:	sub	r3, r0, #1
   16374:	ldrb	r2, [r4, r3]
   16378:	cmp	r2, #47	; 0x2f
   1637c:	beq	16384 <argp_parse@@Base+0xa94>
   16380:	pop	{r4, pc}
   16384:	mov	r0, r3
   16388:	b	16368 <argp_parse@@Base+0xa78>
   1638c:	push	{r0, r1, r2, r4, r5, lr}
   16390:	mov	r5, r0
   16394:	bl	111e4 <__errno_location@plt>
   16398:	ldr	r3, [r0]
   1639c:	mov	r4, r0
   163a0:	str	r3, [sp]
   163a4:	str	r3, [sp, #4]
   163a8:	mov	r3, #0
   163ac:	str	r3, [r0]
   163b0:	mov	r0, r5
   163b4:	bl	11088 <free@plt>
   163b8:	ldr	r3, [r4]
   163bc:	add	r2, sp, #8
   163c0:	cmp	r3, #0
   163c4:	moveq	r3, #4
   163c8:	movne	r3, #0
   163cc:	add	r3, r2, r3
   163d0:	ldr	r3, [r3, #-8]
   163d4:	str	r3, [r4]
   163d8:	add	sp, sp, #12
   163dc:	pop	{r4, r5, pc}
   163e0:	push	{r0, r1, r2, r3, r4, lr}
   163e4:	mov	ip, #0
   163e8:	str	ip, [sp, #8]
   163ec:	str	ip, [sp, #4]
   163f0:	ldr	ip, [sp, #24]
   163f4:	str	ip, [sp]
   163f8:	bl	17edc <argp_parse@@Base+0x25ec>
   163fc:	add	sp, sp, #20
   16400:	pop	{pc}		; (ldr pc, [sp], #4)
   16404:	push	{r0, r1, r2, r3, r4, lr}
   16408:	mov	ip, #0
   1640c:	ldr	lr, [sp, #28]
   16410:	str	ip, [sp, #12]
   16414:	stmib	sp, {ip, lr}
   16418:	ldr	ip, [sp, #24]
   1641c:	str	ip, [sp]
   16420:	bl	179e4 <argp_parse@@Base+0x20f4>
   16424:	add	sp, sp, #20
   16428:	pop	{pc}		; (ldr pc, [sp], #4)
   1642c:	push	{r0, r1, r2, r3, r4, lr}
   16430:	mov	ip, #1
   16434:	mov	lr, #0
   16438:	stmib	sp, {ip, lr}
   1643c:	ldr	ip, [sp, #24]
   16440:	str	ip, [sp]
   16444:	bl	17edc <argp_parse@@Base+0x25ec>
   16448:	add	sp, sp, #20
   1644c:	pop	{pc}		; (ldr pc, [sp], #4)
   16450:	push	{r0, r1, r2, r3, r4, lr}
   16454:	mov	ip, #0
   16458:	str	ip, [sp, #12]
   1645c:	ldr	ip, [sp, #28]
   16460:	str	ip, [sp, #8]
   16464:	mov	ip, #1
   16468:	str	ip, [sp, #4]
   1646c:	ldr	ip, [sp, #24]
   16470:	str	ip, [sp]
   16474:	bl	179e4 <argp_parse@@Base+0x20f4>
   16478:	add	sp, sp, #20
   1647c:	pop	{pc}		; (ldr pc, [sp], #4)
   16480:	push	{r4, r5, r6, lr}
   16484:	subs	r5, r0, #0
   16488:	bne	164a0 <argp_parse@@Base+0xbb0>
   1648c:	ldr	r3, [pc, #124]	; 16510 <argp_parse@@Base+0xc20>
   16490:	ldr	r0, [pc, #124]	; 16514 <argp_parse@@Base+0xc24>
   16494:	ldr	r1, [r3]
   16498:	bl	112c8 <fputs@plt>
   1649c:	bl	112e0 <abort@plt>
   164a0:	mov	r1, #47	; 0x2f
   164a4:	bl	11244 <strrchr@plt>
   164a8:	cmp	r0, #0
   164ac:	addne	r4, r0, #1
   164b0:	moveq	r4, r5
   164b4:	sub	r3, r4, r5
   164b8:	cmp	r3, #6
   164bc:	ble	164fc <argp_parse@@Base+0xc0c>
   164c0:	mov	r2, #7
   164c4:	ldr	r1, [pc, #76]	; 16518 <argp_parse@@Base+0xc28>
   164c8:	sub	r0, r4, #7
   164cc:	bl	112d4 <strncmp@plt>
   164d0:	cmp	r0, #0
   164d4:	bne	164fc <argp_parse@@Base+0xc0c>
   164d8:	mov	r2, #3
   164dc:	ldr	r1, [pc, #56]	; 1651c <argp_parse@@Base+0xc2c>
   164e0:	mov	r0, r4
   164e4:	bl	112d4 <strncmp@plt>
   164e8:	cmp	r0, #0
   164ec:	movne	r5, r4
   164f0:	ldreq	r3, [pc, #40]	; 16520 <argp_parse@@Base+0xc30>
   164f4:	addeq	r5, r4, #3
   164f8:	streq	r5, [r3]
   164fc:	ldr	r3, [pc, #32]	; 16524 <argp_parse@@Base+0xc34>
   16500:	str	r5, [r3]
   16504:	ldr	r3, [pc, #28]	; 16528 <argp_parse@@Base+0xc38>
   16508:	str	r5, [r3]
   1650c:	pop	{r4, r5, r6, pc}
   16510:	andeq	sl, r2, r0, lsr #5
   16514:	andeq	r8, r1, r5, asr #29
   16518:	strdeq	r8, [r1], -sp
   1651c:	andeq	r8, r1, r5, lsl #30
   16520:	muleq	r2, r8, r2
   16524:	ldrdeq	sl, [r2], -r8
   16528:	muleq	r2, ip, r2
   1652c:	push	{r4, r5, r6, lr}
   16530:	sub	sp, sp, #32
   16534:	cmp	r1, #0
   16538:	mov	r5, r0
   1653c:	ldr	r4, [sp, #48]	; 0x30
   16540:	ldr	r6, [sp, #52]	; 0x34
   16544:	beq	165cc <argp_parse@@Base+0xcdc>
   16548:	str	r3, [sp]
   1654c:	mov	r3, r2
   16550:	mov	r2, r1
   16554:	ldr	r1, [pc, #616]	; 167c4 <argp_parse@@Base+0xed4>
   16558:	bl	111d8 <fprintf@plt>
   1655c:	ldr	r3, [pc, #612]	; 167c8 <argp_parse@@Base+0xed8>
   16560:	ldr	r2, [pc, #612]	; 167cc <argp_parse@@Base+0xedc>
   16564:	ldr	r1, [pc, #612]	; 167d0 <argp_parse@@Base+0xee0>
   16568:	mov	r0, r5
   1656c:	bl	111d8 <fprintf@plt>
   16570:	mov	r1, r5
   16574:	mov	r0, #10
   16578:	bl	1125c <fputc@plt>
   1657c:	ldr	r1, [pc, #592]	; 167d4 <argp_parse@@Base+0xee4>
   16580:	ldr	r2, [pc, #592]	; 167d8 <argp_parse@@Base+0xee8>
   16584:	mov	r0, r5
   16588:	bl	111d8 <fprintf@plt>
   1658c:	mov	r1, r5
   16590:	mov	r0, #10
   16594:	bl	1125c <fputc@plt>
   16598:	cmp	r6, #9
   1659c:	ldrls	pc, [pc, r6, lsl #2]
   165a0:	b	16780 <argp_parse@@Base+0xe90>
   165a4:	andeq	r6, r1, r8, ror r6
   165a8:	ldrdeq	r6, [r1], -r8
   165ac:	strdeq	r6, [r1], -r0
   165b0:	andeq	r6, r1, r8, lsl #12
   165b4:	andeq	r6, r1, r8, lsr #12
   165b8:	andeq	r6, r1, r0, asr r6
   165bc:	andeq	r6, r1, r0, lsl #13
   165c0:			; <UNDEFINED> instruction: 0x000166b4
   165c4:	strdeq	r6, [r1], -r0
   165c8:	andeq	r6, r1, r4, lsr r7
   165cc:	ldr	r1, [pc, #520]	; 167dc <argp_parse@@Base+0xeec>
   165d0:	bl	111d8 <fprintf@plt>
   165d4:	b	1655c <argp_parse@@Base+0xc6c>
   165d8:	ldr	r2, [r4]
   165dc:	ldr	r1, [pc, #508]	; 167e0 <argp_parse@@Base+0xef0>
   165e0:	mov	r0, r5
   165e4:	add	sp, sp, #32
   165e8:	pop	{r4, r5, r6, lr}
   165ec:	b	111d8 <fprintf@plt>
   165f0:	ldm	r4, {r2, r3}
   165f4:	ldr	r1, [pc, #488]	; 167e4 <argp_parse@@Base+0xef4>
   165f8:	mov	r0, r5
   165fc:	add	sp, sp, #32
   16600:	pop	{r4, r5, r6, lr}
   16604:	b	111d8 <fprintf@plt>
   16608:	ldr	r3, [r4, #8]
   1660c:	ldr	r1, [pc, #468]	; 167e8 <argp_parse@@Base+0xef8>
   16610:	str	r3, [sp, #48]	; 0x30
   16614:	mov	r0, r5
   16618:	ldm	r4, {r2, r3}
   1661c:	add	sp, sp, #32
   16620:	pop	{r4, r5, r6, lr}
   16624:	b	111d8 <fprintf@plt>
   16628:	ldr	r3, [r4, #12]
   1662c:	ldr	r1, [pc, #440]	; 167ec <argp_parse@@Base+0xefc>
   16630:	str	r3, [sp, #52]	; 0x34
   16634:	ldr	r3, [r4, #8]
   16638:	mov	r0, r5
   1663c:	str	r3, [sp, #48]	; 0x30
   16640:	ldm	r4, {r2, r3}
   16644:	add	sp, sp, #32
   16648:	pop	{r4, r5, r6, lr}
   1664c:	b	111d8 <fprintf@plt>
   16650:	ldr	r3, [r4, #16]
   16654:	ldr	r1, [pc, #404]	; 167f0 <argp_parse@@Base+0xf00>
   16658:	str	r3, [sp, #8]
   1665c:	ldr	r3, [r4, #12]
   16660:	mov	r0, r5
   16664:	str	r3, [sp, #4]
   16668:	ldr	r3, [r4, #8]
   1666c:	str	r3, [sp]
   16670:	ldm	r4, {r2, r3}
   16674:	bl	111d8 <fprintf@plt>
   16678:	add	sp, sp, #32
   1667c:	pop	{r4, r5, r6, pc}
   16680:	ldr	r3, [r4, #20]
   16684:	ldr	r1, [pc, #360]	; 167f4 <argp_parse@@Base+0xf04>
   16688:	str	r3, [sp, #12]
   1668c:	ldr	r3, [r4, #16]
   16690:	mov	r0, r5
   16694:	str	r3, [sp, #8]
   16698:	ldr	r3, [r4, #12]
   1669c:	str	r3, [sp, #4]
   166a0:	ldr	r3, [r4, #8]
   166a4:	str	r3, [sp]
   166a8:	ldm	r4, {r2, r3}
   166ac:	bl	111d8 <fprintf@plt>
   166b0:	b	16678 <argp_parse@@Base+0xd88>
   166b4:	ldr	r3, [r4, #24]
   166b8:	ldr	r1, [pc, #312]	; 167f8 <argp_parse@@Base+0xf08>
   166bc:	str	r3, [sp, #16]
   166c0:	ldr	r3, [r4, #20]
   166c4:	mov	r0, r5
   166c8:	str	r3, [sp, #12]
   166cc:	ldr	r3, [r4, #16]
   166d0:	str	r3, [sp, #8]
   166d4:	ldr	r3, [r4, #12]
   166d8:	str	r3, [sp, #4]
   166dc:	ldr	r3, [r4, #8]
   166e0:	str	r3, [sp]
   166e4:	ldm	r4, {r2, r3}
   166e8:	bl	111d8 <fprintf@plt>
   166ec:	b	16678 <argp_parse@@Base+0xd88>
   166f0:	ldr	r3, [r4, #28]
   166f4:	ldr	r1, [pc, #256]	; 167fc <argp_parse@@Base+0xf0c>
   166f8:	str	r3, [sp, #20]
   166fc:	ldr	r3, [r4, #24]
   16700:	mov	r0, r5
   16704:	str	r3, [sp, #16]
   16708:	ldr	r3, [r4, #20]
   1670c:	str	r3, [sp, #12]
   16710:	ldr	r3, [r4, #16]
   16714:	str	r3, [sp, #8]
   16718:	ldr	r3, [r4, #12]
   1671c:	str	r3, [sp, #4]
   16720:	ldr	r3, [r4, #8]
   16724:	str	r3, [sp]
   16728:	ldm	r4, {r2, r3}
   1672c:	bl	111d8 <fprintf@plt>
   16730:	b	16678 <argp_parse@@Base+0xd88>
   16734:	ldr	r3, [r4, #32]
   16738:	ldr	r1, [pc, #192]	; 16800 <argp_parse@@Base+0xf10>
   1673c:	str	r3, [sp, #24]
   16740:	ldr	r3, [r4, #28]
   16744:	str	r3, [sp, #20]
   16748:	ldr	r3, [r4, #24]
   1674c:	str	r3, [sp, #16]
   16750:	ldr	r3, [r4, #20]
   16754:	str	r3, [sp, #12]
   16758:	ldr	r3, [r4, #16]
   1675c:	str	r3, [sp, #8]
   16760:	ldr	r3, [r4, #12]
   16764:	str	r3, [sp, #4]
   16768:	ldr	r3, [r4, #8]
   1676c:	str	r3, [sp]
   16770:	ldm	r4, {r2, r3}
   16774:	mov	r0, r5
   16778:	bl	111d8 <fprintf@plt>
   1677c:	b	16678 <argp_parse@@Base+0xd88>
   16780:	ldr	r3, [r4, #32]
   16784:	ldr	r1, [pc, #120]	; 16804 <argp_parse@@Base+0xf14>
   16788:	str	r3, [sp, #24]
   1678c:	ldr	r3, [r4, #28]
   16790:	str	r3, [sp, #20]
   16794:	ldr	r3, [r4, #24]
   16798:	str	r3, [sp, #16]
   1679c:	ldr	r3, [r4, #20]
   167a0:	str	r3, [sp, #12]
   167a4:	ldr	r3, [r4, #16]
   167a8:	str	r3, [sp, #8]
   167ac:	ldr	r3, [r4, #12]
   167b0:	str	r3, [sp, #4]
   167b4:	ldr	r3, [r4, #8]
   167b8:	str	r3, [sp]
   167bc:	ldm	r4, {r2, r3}
   167c0:	b	16774 <argp_parse@@Base+0xe84>
   167c4:	andeq	r8, r1, r9, lsl #30
   167c8:	andeq	r0, r0, r6, ror #15
   167cc:	andeq	r8, r1, ip, lsl pc
   167d0:	andeq	r9, r1, r1, lsl r2
   167d4:	andeq	r8, r1, r2, asr #30
   167d8:	andeq	r8, r1, r0, lsr #30
   167dc:	andeq	r8, r1, r5, lsl pc
   167e0:	andeq	r8, r1, sp, ror #31
   167e4:	strdeq	r8, [r1], -sp
   167e8:	andeq	r9, r1, r4, lsl r0
   167ec:	andeq	r9, r1, r0, lsr r0
   167f0:	andeq	r9, r1, r0, asr r0
   167f4:	andeq	r9, r1, r4, ror r0
   167f8:	muleq	r1, ip, r0
   167fc:	andeq	r9, r1, r8, asr #1
   16800:	strdeq	r9, [r1], -r8
   16804:	andeq	r9, r1, ip, lsr #2
   16808:	push	{r0, r1, r4, lr}
   1680c:	mov	ip, #0
   16810:	ldr	lr, [sp, #16]
   16814:	ldr	r4, [lr, ip, lsl #2]
   16818:	cmp	r4, #0
   1681c:	bne	16834 <argp_parse@@Base+0xf44>
   16820:	str	ip, [sp, #4]
   16824:	str	lr, [sp]
   16828:	bl	1652c <argp_parse@@Base+0xc3c>
   1682c:	add	sp, sp, #8
   16830:	pop	{r4, pc}
   16834:	add	ip, ip, #1
   16838:	b	16814 <argp_parse@@Base+0xf24>
   1683c:	push	{r4, r5, lr}
   16840:	sub	sp, sp, #52	; 0x34
   16844:	mov	ip, #0
   16848:	ldr	r5, [sp, #64]	; 0x40
   1684c:	add	lr, sp, #8
   16850:	ldr	r4, [r5, ip, lsl #2]
   16854:	cmp	r4, #0
   16858:	str	r4, [lr, ip, lsl #2]
   1685c:	beq	1686c <argp_parse@@Base+0xf7c>
   16860:	add	ip, ip, #1
   16864:	cmp	ip, #10
   16868:	bne	16850 <argp_parse@@Base+0xf60>
   1686c:	str	ip, [sp, #4]
   16870:	str	lr, [sp]
   16874:	bl	1652c <argp_parse@@Base+0xc3c>
   16878:	add	sp, sp, #52	; 0x34
   1687c:	pop	{r4, r5, pc}
   16880:	push	{r3}		; (str r3, [sp, #-4]!)
   16884:	push	{r0, r1, r2, r3, lr}
   16888:	add	r3, sp, #24
   1688c:	str	r3, [sp, #12]
   16890:	str	r3, [sp]
   16894:	ldr	r3, [sp, #20]
   16898:	bl	1683c <argp_parse@@Base+0xf4c>
   1689c:	add	sp, sp, #16
   168a0:	pop	{lr}		; (ldr lr, [sp], #4)
   168a4:	add	sp, sp, #4
   168a8:	bx	lr
   168ac:	ldr	r3, [pc, #56]	; 168ec <argp_parse@@Base+0xffc>
   168b0:	push	{r4, lr}
   168b4:	mov	r0, #10
   168b8:	ldr	r1, [r3]
   168bc:	bl	1125c <fputc@plt>
   168c0:	ldr	r1, [pc, #40]	; 168f0 <argp_parse@@Base+0x1000>
   168c4:	ldr	r0, [pc, #40]	; 168f4 <argp_parse@@Base+0x1004>
   168c8:	bl	1104c <printf@plt>
   168cc:	ldr	r1, [pc, #36]	; 168f8 <argp_parse@@Base+0x1008>
   168d0:	ldr	r2, [pc, #36]	; 168fc <argp_parse@@Base+0x100c>
   168d4:	ldr	r0, [pc, #36]	; 16900 <argp_parse@@Base+0x1010>
   168d8:	bl	1104c <printf@plt>
   168dc:	ldr	r1, [pc, #32]	; 16904 <argp_parse@@Base+0x1014>
   168e0:	ldr	r0, [pc, #32]	; 16908 <argp_parse@@Base+0x1018>
   168e4:	pop	{r4, lr}
   168e8:	b	1104c <printf@plt>
   168ec:	andeq	sl, r2, r4, lsr #5
   168f0:	andeq	r9, r1, r8, ror #2
   168f4:	andeq	r9, r1, lr, ror r1
   168f8:			; <UNDEFINED> instruction: 0x00018eb7
   168fc:	muleq	r1, r2, r1
   16900:			; <UNDEFINED> instruction: 0x000191b9
   16904:	andeq	r9, r1, sp, asr #3
   16908:	andeq	r9, r1, sl, ror #3
   1690c:	push	{r4, lr}
   16910:	bl	16e14 <argp_parse@@Base+0x1524>
   16914:	cmp	r0, #0
   16918:	popne	{r4, pc}
   1691c:	bl	16da0 <argp_parse@@Base+0x14b0>
   16920:	push	{r4, lr}
   16924:	bl	16e14 <argp_parse@@Base+0x1524>
   16928:	cmp	r0, #0
   1692c:	popne	{r4, pc}
   16930:	bl	16da0 <argp_parse@@Base+0x14b0>
   16934:	b	1690c <argp_parse@@Base+0x101c>
   16938:	push	{r4, r5, r6, lr}
   1693c:	mov	r5, r0
   16940:	mov	r4, r1
   16944:	bl	16e54 <argp_parse@@Base+0x1564>
   16948:	cmp	r0, #0
   1694c:	popne	{r4, r5, r6, pc}
   16950:	adds	r4, r4, #0
   16954:	movne	r4, #1
   16958:	cmp	r5, #0
   1695c:	orreq	r4, r4, #1
   16960:	cmp	r4, #0
   16964:	popeq	{r4, r5, r6, pc}
   16968:	bl	16da0 <argp_parse@@Base+0x14b0>
   1696c:	push	{r4, lr}
   16970:	cmp	r1, #0
   16974:	orreq	r1, r1, #1
   16978:	bl	16e54 <argp_parse@@Base+0x1564>
   1697c:	cmp	r0, #0
   16980:	popne	{r4, pc}
   16984:	bl	16da0 <argp_parse@@Base+0x14b0>
   16988:	push	{r4, r5, r6, lr}
   1698c:	mov	r6, r0
   16990:	mov	r5, r1
   16994:	mov	r4, r2
   16998:	bl	17f70 <argp_parse@@Base+0x2680>
   1699c:	cmp	r0, #0
   169a0:	popne	{r4, r5, r6, pc}
   169a4:	cmp	r6, #0
   169a8:	beq	169b8 <argp_parse@@Base+0x10c8>
   169ac:	cmp	r5, #0
   169b0:	cmpne	r4, #0
   169b4:	popeq	{r4, r5, r6, pc}
   169b8:	bl	16da0 <argp_parse@@Base+0x14b0>
   169bc:	b	16988 <argp_parse@@Base+0x1098>
   169c0:	cmp	r2, #0
   169c4:	cmpne	r1, #0
   169c8:	moveq	r2, #1
   169cc:	moveq	r1, r2
   169d0:	push	{r4, lr}
   169d4:	bl	17f70 <argp_parse@@Base+0x2680>
   169d8:	cmp	r0, #0
   169dc:	popne	{r4, pc}
   169e0:	bl	16da0 <argp_parse@@Base+0x14b0>
   169e4:	mov	r2, r1
   169e8:	mov	r1, r0
   169ec:	mov	r0, #0
   169f0:	b	16988 <argp_parse@@Base+0x1098>
   169f4:	mov	r2, r1
   169f8:	mov	r1, r0
   169fc:	mov	r0, #0
   16a00:	b	169c0 <argp_parse@@Base+0x10d0>
   16a04:	push	{r4, r5, r6, r7, r8, lr}
   16a08:	subs	r7, r0, #0
   16a0c:	mov	r5, r1
   16a10:	mov	r6, r2
   16a14:	ldr	r4, [r1]
   16a18:	bne	16a54 <argp_parse@@Base+0x1164>
   16a1c:	cmp	r4, #0
   16a20:	bne	16a3c <argp_parse@@Base+0x114c>
   16a24:	mov	r1, r2
   16a28:	mov	r0, #64	; 0x40
   16a2c:	bl	17fbc <argp_parse@@Base+0x26cc>
   16a30:	cmp	r0, #0
   16a34:	movne	r4, r0
   16a38:	addeq	r4, r0, #1
   16a3c:	mov	r2, r6
   16a40:	mov	r1, r4
   16a44:	mov	r0, r7
   16a48:	bl	16988 <argp_parse@@Base+0x1098>
   16a4c:	str	r4, [r5]
   16a50:	pop	{r4, r5, r6, r7, r8, pc}
   16a54:	lsr	r2, r4, #1
   16a58:	add	r3, r2, #1
   16a5c:	mvn	r3, r3
   16a60:	cmp	r4, r3
   16a64:	addls	r4, r4, #1
   16a68:	addls	r4, r4, r2
   16a6c:	bls	16a3c <argp_parse@@Base+0x114c>
   16a70:	bl	16da0 <argp_parse@@Base+0x14b0>
   16a74:	mov	r2, #1
   16a78:	b	16a04 <argp_parse@@Base+0x1114>
   16a7c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a80:	mov	sl, r0
   16a84:	ldr	r8, [r1]
   16a88:	mov	fp, r1
   16a8c:	mov	r5, r2
   16a90:	asrs	r4, r8, #1
   16a94:	mov	r9, r3
   16a98:	ldr	r7, [sp, #48]	; 0x30
   16a9c:	bpl	16b38 <argp_parse@@Base+0x1248>
   16aa0:	rsb	r2, r4, #-2147483648	; 0x80000000
   16aa4:	cmp	r8, r2
   16aa8:	movge	r2, #0
   16aac:	movlt	r2, #1
   16ab0:	mvn	r3, r9
   16ab4:	cmp	r2, #0
   16ab8:	lsr	r3, r3, #31
   16abc:	addeq	r4, r4, r8
   16ac0:	mvnne	r4, #-2147483648	; 0x80000000
   16ac4:	mov	r0, r3
   16ac8:	cmp	r9, r4
   16acc:	movge	r0, #0
   16ad0:	andlt	r0, r0, #1
   16ad4:	cmp	r0, #0
   16ad8:	str	r3, [sp, #4]
   16adc:	bne	16cac <argp_parse@@Base+0x13bc>
   16ae0:	cmp	r7, #0
   16ae4:	bge	16bf8 <argp_parse@@Base+0x1308>
   16ae8:	cmp	r4, #0
   16aec:	bge	16b50 <argp_parse@@Base+0x1260>
   16af0:	mov	r1, r7
   16af4:	mvn	r0, #-2147483648	; 0x80000000
   16af8:	bl	181c8 <argp_parse@@Base+0x28d8>
   16afc:	cmp	r0, r4
   16b00:	movle	r0, #0
   16b04:	movgt	r0, #1
   16b08:	cmp	r0, #0
   16b0c:	mvnne	r6, #-2147483648	; 0x80000000
   16b10:	beq	16b60 <argp_parse@@Base+0x1270>
   16b14:	mov	r1, r7
   16b18:	mov	r0, r6
   16b1c:	bl	181c8 <argp_parse@@Base+0x28d8>
   16b20:	mov	r1, r7
   16b24:	mov	r4, r0
   16b28:	mov	r0, r6
   16b2c:	bl	183e8 <argp_parse@@Base+0x2af8>
   16b30:	sub	r1, r6, r1
   16b34:	b	16b70 <argp_parse@@Base+0x1280>
   16b38:	mvn	r2, #-2147483648	; 0x80000000
   16b3c:	sub	r2, r2, r4
   16b40:	cmp	r8, r2
   16b44:	movle	r2, #0
   16b48:	movgt	r2, #1
   16b4c:	b	16ab0 <argp_parse@@Base+0x11c0>
   16b50:	cmn	r7, #1
   16b54:	movne	r1, r7
   16b58:	movne	r0, #-2147483648	; 0x80000000
   16b5c:	bne	16cc4 <argp_parse@@Base+0x13d4>
   16b60:	mul	r1, r7, r4
   16b64:	cmp	r1, #63	; 0x3f
   16b68:	movle	r6, #64	; 0x40
   16b6c:	ble	16b14 <argp_parse@@Base+0x1224>
   16b70:	cmp	sl, #0
   16b74:	sub	r2, r4, r8
   16b78:	streq	sl, [fp]
   16b7c:	cmp	r2, r5
   16b80:	bge	16c54 <argp_parse@@Base+0x1364>
   16b84:	cmp	r5, #0
   16b88:	bge	16c20 <argp_parse@@Base+0x1330>
   16b8c:	rsb	r2, r5, #-2147483648	; 0x80000000
   16b90:	cmp	r8, r2
   16b94:	movge	r2, #0
   16b98:	movlt	r2, #1
   16b9c:	cmp	r2, #0
   16ba0:	bne	16bf4 <argp_parse@@Base+0x1304>
   16ba4:	ldr	r0, [sp, #4]
   16ba8:	add	r5, r8, r5
   16bac:	cmp	r9, r5
   16bb0:	movge	r0, #0
   16bb4:	andlt	r0, r0, #1
   16bb8:	cmp	r0, #0
   16bbc:	mov	r4, r5
   16bc0:	bne	16bf4 <argp_parse@@Base+0x1304>
   16bc4:	cmp	r7, #0
   16bc8:	bge	16c68 <argp_parse@@Base+0x1378>
   16bcc:	cmp	r5, #0
   16bd0:	bge	16c40 <argp_parse@@Base+0x1350>
   16bd4:	mov	r1, r7
   16bd8:	mvn	r0, #-2147483648	; 0x80000000
   16bdc:	bl	181c8 <argp_parse@@Base+0x28d8>
   16be0:	cmp	r5, r0
   16be4:	movge	r0, #0
   16be8:	movlt	r0, #1
   16bec:	cmp	r0, #0
   16bf0:	beq	16c50 <argp_parse@@Base+0x1360>
   16bf4:	bl	16da0 <argp_parse@@Base+0x14b0>
   16bf8:	beq	16b60 <argp_parse@@Base+0x1270>
   16bfc:	cmp	r4, #0
   16c00:	bge	16cbc <argp_parse@@Base+0x13cc>
   16c04:	cmn	r4, #1
   16c08:	beq	16b60 <argp_parse@@Base+0x1270>
   16c0c:	mov	r1, r4
   16c10:	mov	r0, #-2147483648	; 0x80000000
   16c14:	bl	181c8 <argp_parse@@Base+0x28d8>
   16c18:	cmp	r7, r0
   16c1c:	b	16b00 <argp_parse@@Base+0x1210>
   16c20:	cmp	r8, #0
   16c24:	blt	16ba4 <argp_parse@@Base+0x12b4>
   16c28:	mvn	r2, #-2147483648	; 0x80000000
   16c2c:	sub	r2, r2, r5
   16c30:	cmp	r8, r2
   16c34:	movle	r2, #0
   16c38:	movgt	r2, #1
   16c3c:	b	16b9c <argp_parse@@Base+0x12ac>
   16c40:	cmn	r7, #1
   16c44:	movne	r1, r7
   16c48:	movne	r0, #-2147483648	; 0x80000000
   16c4c:	bne	16ca0 <argp_parse@@Base+0x13b0>
   16c50:	mul	r1, r5, r7
   16c54:	mov	r0, sl
   16c58:	bl	16938 <argp_parse@@Base+0x1048>
   16c5c:	str	r4, [fp]
   16c60:	add	sp, sp, #12
   16c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c68:	beq	16c50 <argp_parse@@Base+0x1360>
   16c6c:	cmp	r5, #0
   16c70:	movge	r1, r7
   16c74:	mvnge	r0, #-2147483648	; 0x80000000
   16c78:	bge	16ca0 <argp_parse@@Base+0x13b0>
   16c7c:	cmn	r5, #1
   16c80:	beq	16c50 <argp_parse@@Base+0x1360>
   16c84:	mov	r1, r5
   16c88:	mov	r0, #-2147483648	; 0x80000000
   16c8c:	bl	181c8 <argp_parse@@Base+0x28d8>
   16c90:	cmp	r7, r0
   16c94:	movle	r0, #0
   16c98:	movgt	r0, #1
   16c9c:	b	16bec <argp_parse@@Base+0x12fc>
   16ca0:	bl	181c8 <argp_parse@@Base+0x28d8>
   16ca4:	cmp	r5, r0
   16ca8:	b	16c94 <argp_parse@@Base+0x13a4>
   16cac:	cmp	r7, #0
   16cb0:	mov	r4, r9
   16cb4:	blt	16b50 <argp_parse@@Base+0x1260>
   16cb8:	beq	16b60 <argp_parse@@Base+0x1270>
   16cbc:	mov	r1, r7
   16cc0:	mvn	r0, #-2147483648	; 0x80000000
   16cc4:	bl	181c8 <argp_parse@@Base+0x28d8>
   16cc8:	cmp	r0, r4
   16ccc:	movge	r0, #0
   16cd0:	movlt	r0, #1
   16cd4:	b	16b08 <argp_parse@@Base+0x1218>
   16cd8:	push	{r4, lr}
   16cdc:	bl	16dcc <argp_parse@@Base+0x14dc>
   16ce0:	cmp	r0, #0
   16ce4:	popne	{r4, pc}
   16ce8:	bl	16da0 <argp_parse@@Base+0x14b0>
   16cec:	mov	r1, #1
   16cf0:	b	16cd8 <argp_parse@@Base+0x13e8>
   16cf4:	push	{r4, lr}
   16cf8:	bl	16dcc <argp_parse@@Base+0x14dc>
   16cfc:	cmp	r0, #0
   16d00:	popne	{r4, pc}
   16d04:	bl	16da0 <argp_parse@@Base+0x14b0>
   16d08:	mov	r1, #1
   16d0c:	b	16cf4 <argp_parse@@Base+0x1404>
   16d10:	push	{r4, r5, r6, lr}
   16d14:	mov	r4, r1
   16d18:	mov	r5, r0
   16d1c:	mov	r0, r1
   16d20:	bl	1690c <argp_parse@@Base+0x101c>
   16d24:	mov	r2, r4
   16d28:	mov	r1, r5
   16d2c:	pop	{r4, r5, r6, lr}
   16d30:	b	110ac <memcpy@plt>
   16d34:	push	{r4, r5, r6, lr}
   16d38:	mov	r4, r1
   16d3c:	mov	r5, r0
   16d40:	mov	r0, r1
   16d44:	bl	16920 <argp_parse@@Base+0x1030>
   16d48:	mov	r2, r4
   16d4c:	mov	r1, r5
   16d50:	pop	{r4, r5, r6, lr}
   16d54:	b	110ac <memcpy@plt>
   16d58:	push	{r4, r5, r6, lr}
   16d5c:	mov	r5, r0
   16d60:	add	r0, r1, #1
   16d64:	mov	r4, r1
   16d68:	bl	16920 <argp_parse@@Base+0x1030>
   16d6c:	mov	r2, #0
   16d70:	mov	r1, r5
   16d74:	strb	r2, [r0, r4]
   16d78:	mov	r2, r4
   16d7c:	pop	{r4, r5, r6, lr}
   16d80:	b	110ac <memcpy@plt>
   16d84:	push	{r4, lr}
   16d88:	mov	r4, r0
   16d8c:	bl	111c0 <strlen@plt>
   16d90:	add	r1, r0, #1
   16d94:	mov	r0, r4
   16d98:	pop	{r4, lr}
   16d9c:	b	16d10 <argp_parse@@Base+0x1420>
   16da0:	ldr	r3, [pc, #24]	; 16dc0 <argp_parse@@Base+0x14d0>
   16da4:	push	{r4, lr}
   16da8:	mov	r1, #0
   16dac:	ldr	r0, [r3]
   16db0:	ldr	r2, [pc, #12]	; 16dc4 <argp_parse@@Base+0x14d4>
   16db4:	ldr	r3, [pc, #12]	; 16dc8 <argp_parse@@Base+0x14d8>
   16db8:	bl	1113c <error@plt>
   16dbc:	bl	112e0 <abort@plt>
   16dc0:	andeq	sl, r2, r8, lsl #5
   16dc4:	andeq	r8, r1, r3, ror #13
   16dc8:	andeq	r9, r1, r0, asr #4
   16dcc:	cmp	r1, #0
   16dd0:	cmpne	r0, #0
   16dd4:	moveq	r1, #1
   16dd8:	moveq	r0, r1
   16ddc:	umull	r2, r3, r0, r1
   16de0:	adds	r3, r3, #0
   16de4:	movne	r3, #1
   16de8:	cmp	r2, #0
   16dec:	blt	16dfc <argp_parse@@Base+0x150c>
   16df0:	cmp	r3, #0
   16df4:	bne	16dfc <argp_parse@@Base+0x150c>
   16df8:	b	11004 <calloc@plt>
   16dfc:	push	{r4, lr}
   16e00:	bl	111e4 <__errno_location@plt>
   16e04:	mov	r3, #12
   16e08:	str	r3, [r0]
   16e0c:	mov	r0, #0
   16e10:	pop	{r4, pc}
   16e14:	cmp	r0, #0
   16e18:	mov	r3, #0
   16e1c:	moveq	r0, #1
   16e20:	adds	r3, r3, #0
   16e24:	movne	r3, #1
   16e28:	cmp	r0, #0
   16e2c:	blt	16e3c <argp_parse@@Base+0x154c>
   16e30:	cmp	r3, #0
   16e34:	bne	16e3c <argp_parse@@Base+0x154c>
   16e38:	b	11154 <malloc@plt>
   16e3c:	push	{r4, lr}
   16e40:	bl	111e4 <__errno_location@plt>
   16e44:	mov	r3, #12
   16e48:	str	r3, [r0]
   16e4c:	mov	r0, #0
   16e50:	pop	{r4, pc}
   16e54:	cmp	r0, #0
   16e58:	push	{r4, lr}
   16e5c:	mov	r4, r1
   16e60:	bne	16e70 <argp_parse@@Base+0x1580>
   16e64:	mov	r0, r1
   16e68:	pop	{r4, lr}
   16e6c:	b	16e14 <argp_parse@@Base+0x1524>
   16e70:	cmp	r1, #0
   16e74:	bne	16e84 <argp_parse@@Base+0x1594>
   16e78:	bl	1638c <argp_parse@@Base+0xa9c>
   16e7c:	mov	r0, #0
   16e80:	pop	{r4, pc}
   16e84:	cmp	r1, #0
   16e88:	blt	16e98 <argp_parse@@Base+0x15a8>
   16e8c:	mov	r3, #0
   16e90:	cmp	r3, r3
   16e94:	beq	16ea8 <argp_parse@@Base+0x15b8>
   16e98:	bl	111e4 <__errno_location@plt>
   16e9c:	mov	r3, #12
   16ea0:	str	r3, [r0]
   16ea4:	b	16e7c <argp_parse@@Base+0x158c>
   16ea8:	pop	{r4, lr}
   16eac:	b	11100 <realloc@plt>
   16eb0:	push	{r4, r5, r6, r7, r8, lr}
   16eb4:	mov	r8, r0
   16eb8:	mov	r0, #36	; 0x24
   16ebc:	mov	r7, r1
   16ec0:	mov	r6, r2
   16ec4:	mov	r5, r3
   16ec8:	bl	16e14 <argp_parse@@Base+0x1524>
   16ecc:	subs	r4, r0, #0
   16ed0:	beq	16f20 <argp_parse@@Base+0x1630>
   16ed4:	mov	r3, #0
   16ed8:	str	r5, [r4, #12]
   16edc:	str	r8, [r4]
   16ee0:	str	r7, [r4, #4]
   16ee4:	str	r6, [r4, #8]
   16ee8:	str	r3, [r4, #20]
   16eec:	str	r3, [r4, #16]
   16ef0:	mov	r0, #200	; 0xc8
   16ef4:	bl	16e14 <argp_parse@@Base+0x1524>
   16ef8:	cmp	r0, #0
   16efc:	mov	r5, r0
   16f00:	addne	r5, r0, #200	; 0xc8
   16f04:	str	r0, [r4, #24]
   16f08:	strne	r0, [r4, #28]
   16f0c:	strne	r5, [r4, #32]
   16f10:	bne	16f20 <argp_parse@@Base+0x1630>
   16f14:	mov	r0, r4
   16f18:	bl	1638c <argp_parse@@Base+0xa9c>
   16f1c:	mov	r4, r5
   16f20:	mov	r0, r4
   16f24:	pop	{r4, r5, r6, r7, r8, pc}
   16f28:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f2c:	mov	r4, r0
   16f30:	ldr	r6, [r0, #24]
   16f34:	ldr	r3, [r0, #16]
   16f38:	add	r6, r6, r3
   16f3c:	ldr	r2, [r4, #28]
   16f40:	cmp	r6, r2
   16f44:	bcs	16ff4 <argp_parse@@Base+0x1704>
   16f48:	ldr	r7, [r4, #20]
   16f4c:	cmp	r7, #0
   16f50:	bne	16fa8 <argp_parse@@Base+0x16b8>
   16f54:	ldr	r5, [r4, #4]
   16f58:	cmp	r5, #0
   16f5c:	beq	16fa8 <argp_parse@@Base+0x16b8>
   16f60:	ldr	r1, [r4, #32]
   16f64:	add	r3, r2, r5
   16f68:	cmp	r1, r3
   16f6c:	bls	1700c <argp_parse@@Base+0x171c>
   16f70:	add	r7, r6, r5
   16f74:	sub	r2, r2, r6
   16f78:	mov	r1, r6
   16f7c:	mov	r0, r7
   16f80:	bl	11070 <memmove@plt>
   16f84:	ldr	r3, [r4, #28]
   16f88:	mov	r0, r6
   16f8c:	add	r3, r3, r5
   16f90:	str	r3, [r4, #28]
   16f94:	mov	r2, r5
   16f98:	mov	r1, #32
   16f9c:	bl	111fc <memset@plt>
   16fa0:	mov	r6, r7
   16fa4:	str	r5, [r4, #20]
   16fa8:	ldr	r9, [r4, #28]
   16fac:	mov	r1, #10
   16fb0:	sub	r8, r9, r6
   16fb4:	mov	r2, r8
   16fb8:	mov	r0, r6
   16fbc:	bl	11214 <memchr@plt>
   16fc0:	ldr	r2, [r4, #20]
   16fc4:	ldr	r5, [r4, #8]
   16fc8:	cmp	r2, #0
   16fcc:	movlt	r3, #0
   16fd0:	strlt	r3, [r4, #20]
   16fd4:	cmp	r0, #0
   16fd8:	mov	fp, r0
   16fdc:	ldr	r0, [r4, #20]
   16fe0:	bne	17028 <argp_parse@@Base+0x1738>
   16fe4:	add	r3, r8, r0
   16fe8:	cmp	r3, r5
   16fec:	bcs	17048 <argp_parse@@Base+0x1758>
   16ff0:	str	r3, [r4, #20]
   16ff4:	ldr	r3, [r4, #28]
   16ff8:	ldr	r2, [r4, #24]
   16ffc:	sub	r3, r3, r2
   17000:	str	r3, [r4, #16]
   17004:	add	sp, sp, #12
   17008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1700c:	ldr	r1, [r4]
   17010:	mov	r0, #32
   17014:	add	r7, r7, #1
   17018:	bl	112f8 <putc_unlocked@plt>
   1701c:	cmp	r5, r7
   17020:	bne	1700c <argp_parse@@Base+0x171c>
   17024:	b	16fa4 <argp_parse@@Base+0x16b4>
   17028:	sub	r2, fp, r6
   1702c:	add	r2, r2, r0
   17030:	cmp	r2, r5
   17034:	bge	1704c <argp_parse@@Base+0x175c>
   17038:	mov	r3, #0
   1703c:	str	r3, [r4, #20]
   17040:	add	r3, fp, #1
   17044:	b	170ac <argp_parse@@Base+0x17bc>
   17048:	mov	fp, r9
   1704c:	ldr	sl, [r4, #12]
   17050:	cmp	sl, #0
   17054:	subge	r5, r5, r0
   17058:	addge	r5, r6, r5
   1705c:	movge	r7, r5
   17060:	bge	170cc <argp_parse@@Base+0x17dc>
   17064:	cmp	fp, r9
   17068:	sub	sl, r5, #1
   1706c:	bcs	170b4 <argp_parse@@Base+0x17c4>
   17070:	sub	r0, sl, r0
   17074:	sub	r2, r9, fp
   17078:	mov	r1, fp
   1707c:	add	r0, r6, r0
   17080:	bl	11070 <memmove@plt>
   17084:	ldr	r8, [r4, #20]
   17088:	sub	sl, sl, r8
   1708c:	add	sl, r6, sl
   17090:	sub	r3, sl, fp
   17094:	ldr	sl, [r4, #28]
   17098:	sub	r3, sl, r3
   1709c:	str	r3, [r4, #28]
   170a0:	mov	r3, #0
   170a4:	str	r3, [r4, #20]
   170a8:	add	r3, r6, r5
   170ac:	mov	r6, r3
   170b0:	b	16f3c <argp_parse@@Base+0x164c>
   170b4:	add	r0, r8, r0
   170b8:	str	r0, [r4, #20]
   170bc:	sub	r0, sl, r0
   170c0:	add	r9, r9, r0
   170c4:	str	r9, [r4, #28]
   170c8:	b	16ff4 <argp_parse@@Base+0x1704>
   170cc:	cmp	r6, r7
   170d0:	mov	r2, r7
   170d4:	bhi	17100 <argp_parse@@Base+0x1810>
   170d8:	str	r7, [sp, #4]
   170dc:	bl	1119c <__ctype_b_loc@plt>
   170e0:	ldr	r2, [sp, #4]
   170e4:	sub	r7, r7, #1
   170e8:	ldrb	r1, [r2]
   170ec:	lsl	r1, r1, #1
   170f0:	ldr	r0, [r0]
   170f4:	ldrh	r1, [r0, r1]
   170f8:	tst	r1, #1
   170fc:	beq	170cc <argp_parse@@Base+0x17dc>
   17100:	add	r7, r2, #1
   17104:	cmp	r6, r7
   17108:	bcs	17180 <argp_parse@@Base+0x1890>
   1710c:	cmp	r6, r2
   17110:	bhi	1714c <argp_parse@@Base+0x185c>
   17114:	sub	r5, r2, #1
   17118:	cmp	r6, r5
   1711c:	mov	r2, r5
   17120:	bhi	1714c <argp_parse@@Base+0x185c>
   17124:	str	r5, [sp, #4]
   17128:	bl	1119c <__ctype_b_loc@plt>
   1712c:	ldr	r2, [sp, #4]
   17130:	sub	r5, r5, #1
   17134:	ldrb	r3, [r2]
   17138:	lsl	r3, r3, #1
   1713c:	ldr	r1, [r0]
   17140:	ldrh	r3, [r1, r3]
   17144:	tst	r3, #1
   17148:	bne	17118 <argp_parse@@Base+0x1828>
   1714c:	add	r5, r2, #1
   17150:	add	r3, r8, #1
   17154:	add	r3, r6, r3
   17158:	cmp	r7, r3
   1715c:	bne	171e8 <argp_parse@@Base+0x18f8>
   17160:	ldr	r3, [r4, #32]
   17164:	sub	r3, r3, r5
   17168:	cmp	sl, r3
   1716c:	bge	171f8 <argp_parse@@Base+0x1908>
   17170:	mov	r3, #10
   17174:	add	r9, r5, #1
   17178:	strb	r3, [r5]
   1717c:	b	17278 <argp_parse@@Base+0x1988>
   17180:	cmp	fp, r5
   17184:	bls	171dc <argp_parse@@Base+0x18ec>
   17188:	add	r7, r5, #1
   1718c:	cmp	fp, r7
   17190:	mov	r5, r7
   17194:	beq	171dc <argp_parse@@Base+0x18ec>
   17198:	bl	1119c <__ctype_b_loc@plt>
   1719c:	ldrb	r2, [r5]
   171a0:	add	r7, r7, #1
   171a4:	lsl	r2, r2, #1
   171a8:	ldr	r1, [r0]
   171ac:	ldrh	r2, [r1, r2]
   171b0:	tst	r2, #1
   171b4:	beq	1718c <argp_parse@@Base+0x189c>
   171b8:	bl	1119c <__ctype_b_loc@plt>
   171bc:	mov	r7, r5
   171c0:	ldr	r2, [r0]
   171c4:	ldrb	r3, [r7, #1]!
   171c8:	lsl	r3, r3, #1
   171cc:	ldrh	r3, [r2, r3]
   171d0:	tst	r3, #1
   171d4:	bne	171c4 <argp_parse@@Base+0x18d4>
   171d8:	b	17150 <argp_parse@@Base+0x1860>
   171dc:	cmp	fp, r5
   171e0:	bne	171b8 <argp_parse@@Base+0x18c8>
   171e4:	b	17038 <argp_parse@@Base+0x1748>
   171e8:	add	r3, r5, #1
   171ec:	sub	r3, r7, r3
   171f0:	cmp	sl, r3
   171f4:	ble	17170 <argp_parse@@Base+0x1880>
   171f8:	cmp	r7, r9
   171fc:	bcs	17170 <argp_parse@@Base+0x1880>
   17200:	ldr	r3, [r4, #32]
   17204:	add	r0, sl, #1
   17208:	sub	r3, r3, r9
   1720c:	cmp	r3, r0
   17210:	ble	17240 <argp_parse@@Base+0x1950>
   17214:	sub	r9, r9, r7
   17218:	mov	r2, r9
   1721c:	mov	r1, r7
   17220:	add	r0, r5, r0
   17224:	bl	11070 <memmove@plt>
   17228:	ldr	r7, [r4, #12]
   1722c:	add	r7, r7, #1
   17230:	add	r7, r5, r7
   17234:	add	r9, r7, r9
   17238:	sub	r8, r9, r6
   1723c:	b	17170 <argp_parse@@Base+0x1880>
   17240:	ldr	r0, [r4, #24]
   17244:	cmp	r5, r0
   17248:	bls	1725c <argp_parse@@Base+0x196c>
   1724c:	ldr	r3, [r4]
   17250:	sub	r2, r5, r0
   17254:	mov	r1, #1
   17258:	bl	110b8 <fwrite_unlocked@plt>
   1725c:	ldr	r1, [r4]
   17260:	mov	r0, #10
   17264:	bl	112f8 <putc_unlocked@plt>
   17268:	ldr	r9, [r4, #24]
   1726c:	sub	r6, r6, r9
   17270:	add	r8, r8, r6
   17274:	mov	r6, r9
   17278:	ldr	r2, [r4, #12]
   1727c:	sub	r3, r7, r9
   17280:	cmp	r3, r2
   17284:	bge	172c0 <argp_parse@@Base+0x19d0>
   17288:	add	r3, r8, #1
   1728c:	add	r3, r6, r3
   17290:	cmp	r7, r3
   17294:	bne	172a8 <argp_parse@@Base+0x19b8>
   17298:	ldr	r3, [r4, #32]
   1729c:	sub	r3, r3, r7
   172a0:	cmp	r2, r3
   172a4:	ble	172c0 <argp_parse@@Base+0x19d0>
   172a8:	mov	r5, #0
   172ac:	ldr	r3, [r4, #12]
   172b0:	cmp	r5, r3
   172b4:	blt	17324 <argp_parse@@Base+0x1a34>
   172b8:	mov	r3, r9
   172bc:	b	172d4 <argp_parse@@Base+0x19e4>
   172c0:	mov	r3, r9
   172c4:	ldr	r1, [r4, #12]
   172c8:	sub	r2, r3, r9
   172cc:	cmp	r1, r2
   172d0:	bgt	17318 <argp_parse@@Base+0x1a28>
   172d4:	cmp	r3, r7
   172d8:	bcs	172f4 <argp_parse@@Base+0x1a04>
   172dc:	add	r2, r6, r8
   172e0:	mov	r0, r3
   172e4:	sub	r2, r2, r7
   172e8:	mov	r1, r7
   172ec:	bl	11070 <memmove@plt>
   172f0:	mov	r3, r0
   172f4:	ldr	r2, [r4, #12]
   172f8:	sub	r6, r7, r6
   172fc:	sub	r6, r8, r6
   17300:	cmp	r2, #0
   17304:	add	r6, r3, r6
   17308:	mvneq	r2, #0
   1730c:	str	r6, [r4, #28]
   17310:	str	r2, [r4, #20]
   17314:	b	170ac <argp_parse@@Base+0x17bc>
   17318:	mov	r2, #32
   1731c:	strb	r2, [r3], #1
   17320:	b	172c4 <argp_parse@@Base+0x19d4>
   17324:	ldr	r1, [r4]
   17328:	mov	r0, #32
   1732c:	bl	112f8 <putc_unlocked@plt>
   17330:	add	r5, r5, #1
   17334:	b	172ac <argp_parse@@Base+0x19bc>
   17338:	push	{r4, lr}
   1733c:	mov	r4, r0
   17340:	bl	16f28 <argp_parse@@Base+0x1638>
   17344:	ldr	r2, [r4, #28]
   17348:	ldr	r0, [r4, #24]
   1734c:	cmp	r2, r0
   17350:	bls	17364 <argp_parse@@Base+0x1a74>
   17354:	ldr	r3, [r4]
   17358:	sub	r2, r2, r0
   1735c:	mov	r1, #1
   17360:	bl	110b8 <fwrite_unlocked@plt>
   17364:	ldr	r0, [r4, #24]
   17368:	bl	1638c <argp_parse@@Base+0xa9c>
   1736c:	mov	r0, r4
   17370:	pop	{r4, lr}
   17374:	b	1638c <argp_parse@@Base+0xa9c>
   17378:	ldr	r3, [r0, #32]
   1737c:	ldr	r2, [r0, #28]
   17380:	sub	r3, r3, r2
   17384:	cmp	r3, r1
   17388:	bcc	17394 <argp_parse@@Base+0x1aa4>
   1738c:	mov	r0, #1
   17390:	bx	lr
   17394:	push	{r4, r5, r6, lr}
   17398:	mov	r4, r0
   1739c:	mov	r5, r1
   173a0:	bl	16f28 <argp_parse@@Base+0x1638>
   173a4:	ldr	r0, [r4, #24]
   173a8:	ldr	r2, [r4, #28]
   173ac:	ldr	r3, [r4]
   173b0:	sub	r2, r2, r0
   173b4:	mov	r1, #1
   173b8:	bl	110b8 <fwrite_unlocked@plt>
   173bc:	ldr	r2, [r4, #28]
   173c0:	mov	r1, r0
   173c4:	ldr	r0, [r4, #24]
   173c8:	sub	r3, r2, r0
   173cc:	cmp	r1, r3
   173d0:	bne	173f8 <argp_parse@@Base+0x1b08>
   173d4:	ldr	r1, [r4, #32]
   173d8:	mov	r3, #0
   173dc:	sub	r1, r1, r0
   173e0:	cmp	r5, r1
   173e4:	str	r0, [r4, #28]
   173e8:	str	r3, [r4, #16]
   173ec:	bhi	17420 <argp_parse@@Base+0x1b30>
   173f0:	mov	r0, #1
   173f4:	pop	{r4, r5, r6, pc}
   173f8:	ldr	r3, [r4, #16]
   173fc:	sub	r2, r2, r1
   17400:	sub	r3, r3, r1
   17404:	str	r2, [r4, #28]
   17408:	str	r3, [r4, #16]
   1740c:	sub	r2, r2, r0
   17410:	add	r1, r0, r1
   17414:	bl	11070 <memmove@plt>
   17418:	mov	r0, #0
   1741c:	pop	{r4, r5, r6, pc}
   17420:	adds	r5, r5, r1
   17424:	bcc	17438 <argp_parse@@Base+0x1b48>
   17428:	bl	111e4 <__errno_location@plt>
   1742c:	mov	r3, #12
   17430:	str	r3, [r0]
   17434:	b	17418 <argp_parse@@Base+0x1b28>
   17438:	mov	r1, r5
   1743c:	bl	16e54 <argp_parse@@Base+0x1564>
   17440:	cmp	r0, #0
   17444:	beq	17428 <argp_parse@@Base+0x1b38>
   17448:	add	r5, r0, r5
   1744c:	str	r0, [r4, #24]
   17450:	str	r5, [r4, #32]
   17454:	str	r0, [r4, #28]
   17458:	b	173f0 <argp_parse@@Base+0x1b00>
   1745c:	push	{r1, r2, r3}
   17460:	push	{r0, r1, r2, r4, r5, r6, lr}
   17464:	mov	r4, r0
   17468:	mov	r1, #150	; 0x96
   1746c:	add	r6, sp, #32
   17470:	mov	r0, r4
   17474:	bl	17378 <argp_parse@@Base+0x1a88>
   17478:	cmp	r0, #0
   1747c:	bne	17494 <argp_parse@@Base+0x1ba4>
   17480:	mvn	r0, #0
   17484:	add	sp, sp, #12
   17488:	pop	{r4, r5, r6, lr}
   1748c:	add	sp, sp, #12
   17490:	bx	lr
   17494:	ldr	r0, [r4, #28]
   17498:	ldr	r5, [r4, #32]
   1749c:	mov	r3, r6
   174a0:	sub	r5, r5, r0
   174a4:	ldr	r2, [sp, #28]
   174a8:	mov	r1, r5
   174ac:	str	r6, [sp, #4]
   174b0:	bl	11274 <vsnprintf@plt>
   174b4:	cmp	r5, r0
   174b8:	addls	r1, r0, #1
   174bc:	bls	17470 <argp_parse@@Base+0x1b80>
   174c0:	ldr	r3, [r4, #28]
   174c4:	add	r3, r3, r0
   174c8:	str	r3, [r4, #28]
   174cc:	b	17484 <argp_parse@@Base+0x1b94>
   174d0:	ldr	r3, [r1, #32]
   174d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174d8:	ldr	r7, [r1, #28]
   174dc:	ldr	r6, [r1]
   174e0:	add	r8, r0, r3, lsl #2
   174e4:	mov	lr, r6
   174e8:	mov	r4, r7
   174ec:	cmp	lr, r3
   174f0:	movle	r2, #0
   174f4:	movgt	r2, #1
   174f8:	cmp	r4, r3
   174fc:	movge	r2, #0
   17500:	cmp	r2, #0
   17504:	bne	1751c <argp_parse@@Base+0x1c2c>
   17508:	sub	r3, r6, r3
   1750c:	add	r3, r3, r7
   17510:	str	r3, [r1, #28]
   17514:	str	r6, [r1, #32]
   17518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1751c:	sub	r2, r3, r4
   17520:	sub	r5, lr, r3
   17524:	cmp	r5, r2
   17528:	lsl	ip, r4, #2
   1752c:	addle	r2, r0, ip
   17530:	movle	r9, r8
   17534:	movle	ip, #0
   17538:	ble	1756c <argp_parse@@Base+0x1c7c>
   1753c:	sub	r2, lr, r2
   17540:	add	ip, r0, ip
   17544:	add	r5, r0, r2, lsl #2
   17548:	add	lr, r0, lr, lsl #2
   1754c:	ldr	r9, [ip]
   17550:	ldr	sl, [r5]
   17554:	str	sl, [ip], #4
   17558:	str	r9, [r5], #4
   1755c:	cmp	lr, r5
   17560:	bne	1754c <argp_parse@@Base+0x1c5c>
   17564:	mov	lr, r2
   17568:	b	174ec <argp_parse@@Base+0x1bfc>
   1756c:	ldr	sl, [r2]
   17570:	ldr	fp, [r9]
   17574:	add	ip, ip, #1
   17578:	cmp	r5, ip
   1757c:	str	fp, [r2], #4
   17580:	str	sl, [r9], #4
   17584:	bgt	1756c <argp_parse@@Base+0x1c7c>
   17588:	add	r4, r4, r5
   1758c:	mov	r2, lr
   17590:	b	17564 <argp_parse@@Base+0x1c74>
   17594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17598:	sub	sp, sp, #44	; 0x2c
   1759c:	mov	sl, r1
   175a0:	ldr	r4, [sp, #88]	; 0x58
   175a4:	str	r0, [sp, #36]	; 0x24
   175a8:	str	r2, [sp, #32]
   175ac:	ldr	r8, [r4, #20]
   175b0:	str	r3, [sp, #20]
   175b4:	mov	r9, r8
   175b8:	mov	r3, r9
   175bc:	ldrb	r6, [r3], #1
   175c0:	cmp	r6, #0
   175c4:	cmpne	r6, #61	; 0x3d
   175c8:	movne	r6, #1
   175cc:	moveq	r6, #0
   175d0:	bne	17698 <argp_parse@@Base+0x1da8>
   175d4:	sub	r3, r9, r8
   175d8:	str	r3, [sp, #24]
   175dc:	ldr	r3, [sp, #20]
   175e0:	add	r7, r3, r6, lsl #4
   175e4:	ldr	r5, [r3, r6, lsl #4]
   175e8:	cmp	r5, #0
   175ec:	bne	176a0 <argp_parse@@Base+0x1db0>
   175f0:	mov	r8, r5
   175f4:	mov	r7, r5
   175f8:	mov	fp, r3
   175fc:	mvn	r3, #0
   17600:	str	r3, [sp, #16]
   17604:	str	r5, [sp, #28]
   17608:	str	r5, [sp, #12]
   1760c:	ldr	r0, [fp]
   17610:	cmp	r0, #0
   17614:	bne	176d4 <argp_parse@@Base+0x1de4>
   17618:	cmp	r5, #0
   1761c:	cmpeq	r8, #0
   17620:	beq	1780c <argp_parse@@Base+0x1f1c>
   17624:	ldr	r3, [sp, #92]	; 0x5c
   17628:	cmp	r3, #0
   1762c:	beq	17658 <argp_parse@@Base+0x1d68>
   17630:	cmp	r5, #0
   17634:	ldr	r7, [pc, #908]	; 179c8 <argp_parse@@Base+0x20d8>
   17638:	beq	17798 <argp_parse@@Base+0x1ea8>
   1763c:	ldr	r3, [r4, #20]
   17640:	ldr	r2, [sl]
   17644:	str	r3, [sp]
   17648:	ldr	r1, [pc, #892]	; 179cc <argp_parse@@Base+0x20dc>
   1764c:	ldr	r3, [sp, #96]	; 0x60
   17650:	ldr	r0, [r7]
   17654:	bl	111d8 <fprintf@plt>
   17658:	ldr	r3, [sp, #28]
   1765c:	cmp	r3, #0
   17660:	beq	1766c <argp_parse@@Base+0x1d7c>
   17664:	mov	r0, r8
   17668:	bl	1638c <argp_parse@@Base+0xa9c>
   1766c:	ldr	r5, [r4, #20]
   17670:	mov	r0, r5
   17674:	bl	111c0 <strlen@plt>
   17678:	ldr	r3, [r4]
   1767c:	add	r3, r3, #1
   17680:	str	r3, [r4]
   17684:	mov	r3, #0
   17688:	add	r0, r5, r0
   1768c:	str	r0, [r4, #20]
   17690:	str	r3, [r4, #8]
   17694:	b	17894 <argp_parse@@Base+0x1fa4>
   17698:	mov	r9, r3
   1769c:	b	175b8 <argp_parse@@Base+0x1cc8>
   176a0:	ldr	r2, [sp, #24]
   176a4:	mov	r1, r8
   176a8:	mov	r0, r5
   176ac:	bl	112d4 <strncmp@plt>
   176b0:	cmp	r0, #0
   176b4:	bne	176cc <argp_parse@@Base+0x1ddc>
   176b8:	mov	r0, r5
   176bc:	bl	111c0 <strlen@plt>
   176c0:	ldr	r3, [sp, #24]
   176c4:	cmp	r3, r0
   176c8:	beq	178a0 <argp_parse@@Base+0x1fb0>
   176cc:	add	r6, r6, #1
   176d0:	b	175dc <argp_parse@@Base+0x1cec>
   176d4:	ldr	r2, [sp, #24]
   176d8:	ldr	r1, [r4, #20]
   176dc:	bl	112d4 <strncmp@plt>
   176e0:	cmp	r0, #0
   176e4:	bne	17784 <argp_parse@@Base+0x1e94>
   176e8:	cmp	r7, #0
   176ec:	moveq	r7, fp
   176f0:	ldreq	r3, [sp, #12]
   176f4:	streq	r3, [sp, #16]
   176f8:	beq	17784 <argp_parse@@Base+0x1e94>
   176fc:	ldr	r3, [sp, #84]	; 0x54
   17700:	cmp	r3, #0
   17704:	bne	17738 <argp_parse@@Base+0x1e48>
   17708:	ldr	r1, [r7, #4]
   1770c:	ldr	r2, [fp, #4]
   17710:	cmp	r1, r2
   17714:	bne	17738 <argp_parse@@Base+0x1e48>
   17718:	ldr	r1, [r7, #8]
   1771c:	ldr	r2, [fp, #8]
   17720:	cmp	r1, r2
   17724:	bne	17738 <argp_parse@@Base+0x1e48>
   17728:	ldr	r1, [r7, #12]
   1772c:	ldr	r2, [fp, #12]
   17730:	cmp	r1, r2
   17734:	beq	17784 <argp_parse@@Base+0x1e94>
   17738:	cmp	r5, #0
   1773c:	bne	17784 <argp_parse@@Base+0x1e94>
   17740:	ldr	r3, [sp, #92]	; 0x5c
   17744:	cmp	r3, #0
   17748:	beq	1776c <argp_parse@@Base+0x1e7c>
   1774c:	cmp	r8, #0
   17750:	bne	17778 <argp_parse@@Base+0x1e88>
   17754:	mov	r0, r6
   17758:	bl	16e14 <argp_parse@@Base+0x1524>
   1775c:	subs	r8, r0, #0
   17760:	bne	179a4 <argp_parse@@Base+0x20b4>
   17764:	mov	r5, #1
   17768:	b	17784 <argp_parse@@Base+0x1e94>
   1776c:	cmp	r8, #0
   17770:	mov	r5, #1
   17774:	beq	17784 <argp_parse@@Base+0x1e94>
   17778:	ldr	r3, [sp, #12]
   1777c:	mov	r2, #1
   17780:	strb	r2, [r8, r3]
   17784:	ldr	r3, [sp, #12]
   17788:	add	fp, fp, #16
   1778c:	add	r3, r3, #1
   17790:	str	r3, [sp, #12]
   17794:	b	1760c <argp_parse@@Base+0x1d1c>
   17798:	ldr	r0, [r7]
   1779c:	bl	11268 <flockfile@plt>
   177a0:	ldr	r3, [r4, #20]
   177a4:	ldr	r2, [sl]
   177a8:	str	r3, [sp]
   177ac:	ldr	r1, [pc, #540]	; 179d0 <argp_parse@@Base+0x20e0>
   177b0:	ldr	r3, [sp, #96]	; 0x60
   177b4:	ldr	r0, [r7]
   177b8:	bl	111d8 <fprintf@plt>
   177bc:	ldr	r9, [pc, #528]	; 179d4 <argp_parse@@Base+0x20e4>
   177c0:	cmp	r6, r5
   177c4:	bne	177e0 <argp_parse@@Base+0x1ef0>
   177c8:	ldr	r1, [r7]
   177cc:	mov	r0, #10
   177d0:	bl	1125c <fputc@plt>
   177d4:	ldr	r0, [r7]
   177d8:	bl	11118 <funlockfile@plt>
   177dc:	b	17658 <argp_parse@@Base+0x1d68>
   177e0:	ldrb	r3, [r8, r5]
   177e4:	cmp	r3, #0
   177e8:	beq	17804 <argp_parse@@Base+0x1f14>
   177ec:	ldr	r3, [sp, #20]
   177f0:	ldr	r2, [sp, #96]	; 0x60
   177f4:	mov	r1, r9
   177f8:	ldr	r3, [r3, r5, lsl #4]
   177fc:	ldr	r0, [r7]
   17800:	bl	111d8 <fprintf@plt>
   17804:	add	r5, r5, #1
   17808:	b	177c0 <argp_parse@@Base+0x1ed0>
   1780c:	cmp	r7, #0
   17810:	bne	178a4 <argp_parse@@Base+0x1fb4>
   17814:	ldr	r3, [sp, #84]	; 0x54
   17818:	cmp	r3, #0
   1781c:	beq	17850 <argp_parse@@Base+0x1f60>
   17820:	ldr	r3, [r4]
   17824:	ldr	r3, [sl, r3, lsl #2]
   17828:	ldrb	r3, [r3, #1]
   1782c:	cmp	r3, #45	; 0x2d
   17830:	beq	17850 <argp_parse@@Base+0x1f60>
   17834:	ldr	r3, [r4, #20]
   17838:	ldr	r0, [sp, #32]
   1783c:	ldrb	r1, [r3]
   17840:	bl	111cc <strchr@plt>
   17844:	cmp	r0, #0
   17848:	mvnne	r0, #0
   1784c:	bne	17898 <argp_parse@@Base+0x1fa8>
   17850:	ldr	r3, [sp, #92]	; 0x5c
   17854:	cmp	r3, #0
   17858:	beq	1787c <argp_parse@@Base+0x1f8c>
   1785c:	ldr	r0, [pc, #356]	; 179c8 <argp_parse@@Base+0x20d8>
   17860:	ldr	r3, [r4, #20]
   17864:	ldr	r2, [sl]
   17868:	str	r3, [sp]
   1786c:	ldr	r1, [pc, #356]	; 179d8 <argp_parse@@Base+0x20e8>
   17870:	ldr	r3, [sp, #96]	; 0x60
   17874:	ldr	r0, [r0]
   17878:	bl	111d8 <fprintf@plt>
   1787c:	ldr	r3, [r4]
   17880:	mov	r2, #0
   17884:	add	r3, r3, #1
   17888:	str	r2, [r4, #20]
   1788c:	str	r3, [r4]
   17890:	str	r2, [r4, #8]
   17894:	mov	r0, #63	; 0x3f
   17898:	add	sp, sp, #44	; 0x2c
   1789c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   178a0:	str	r6, [sp, #16]
   178a4:	ldr	r3, [r4]
   178a8:	mov	r1, #0
   178ac:	add	r2, r3, #1
   178b0:	str	r2, [r4]
   178b4:	str	r1, [r4, #20]
   178b8:	ldrb	r1, [r9]
   178bc:	cmp	r1, #0
   178c0:	ldr	r1, [r7, #4]
   178c4:	beq	1790c <argp_parse@@Base+0x201c>
   178c8:	cmp	r1, #0
   178cc:	addne	r9, r9, #1
   178d0:	strne	r9, [r4, #12]
   178d4:	bne	17930 <argp_parse@@Base+0x2040>
   178d8:	ldr	r3, [sp, #92]	; 0x5c
   178dc:	cmp	r3, #0
   178e0:	beq	17904 <argp_parse@@Base+0x2014>
   178e4:	ldr	r0, [pc, #220]	; 179c8 <argp_parse@@Base+0x20d8>
   178e8:	ldr	r3, [r7]
   178ec:	ldr	r2, [sl]
   178f0:	str	r3, [sp]
   178f4:	ldr	r1, [pc, #224]	; 179dc <argp_parse@@Base+0x20ec>
   178f8:	ldr	r3, [sp, #96]	; 0x60
   178fc:	ldr	r0, [r0]
   17900:	bl	111d8 <fprintf@plt>
   17904:	ldr	r3, [r7, #12]
   17908:	b	17690 <argp_parse@@Base+0x1da0>
   1790c:	cmp	r1, #1
   17910:	bne	17930 <argp_parse@@Base+0x2040>
   17914:	ldr	r1, [sp, #36]	; 0x24
   17918:	cmp	r2, r1
   1791c:	bge	17958 <argp_parse@@Base+0x2068>
   17920:	add	r3, r3, #2
   17924:	str	r3, [r4]
   17928:	ldr	r3, [sl, r2, lsl #2]
   1792c:	str	r3, [r4, #12]
   17930:	ldr	r3, [sp, #80]	; 0x50
   17934:	cmp	r3, #0
   17938:	ldrne	r2, [sp, #16]
   1793c:	strne	r2, [r3]
   17940:	ldr	r3, [r7, #8]
   17944:	ldr	r0, [r7, #12]
   17948:	cmp	r3, #0
   1794c:	strne	r0, [r3]
   17950:	movne	r0, #0
   17954:	b	17898 <argp_parse@@Base+0x1fa8>
   17958:	ldr	r3, [sp, #92]	; 0x5c
   1795c:	cmp	r3, #0
   17960:	beq	17984 <argp_parse@@Base+0x2094>
   17964:	ldr	r0, [pc, #92]	; 179c8 <argp_parse@@Base+0x20d8>
   17968:	ldr	r3, [r7]
   1796c:	ldr	r2, [sl]
   17970:	str	r3, [sp]
   17974:	ldr	r1, [pc, #100]	; 179e0 <argp_parse@@Base+0x20f0>
   17978:	ldr	r3, [sp, #96]	; 0x60
   1797c:	ldr	r0, [r0]
   17980:	bl	111d8 <fprintf@plt>
   17984:	ldr	r3, [r7, #12]
   17988:	str	r3, [r4, #8]
   1798c:	ldr	r3, [sp, #32]
   17990:	ldrb	r0, [r3]
   17994:	cmp	r0, #58	; 0x3a
   17998:	moveq	r0, #58	; 0x3a
   1799c:	movne	r0, #63	; 0x3f
   179a0:	b	17898 <argp_parse@@Base+0x1fa8>
   179a4:	mov	r2, r6
   179a8:	mov	r1, #0
   179ac:	bl	111fc <memset@plt>
   179b0:	ldr	r3, [sp, #16]
   179b4:	mov	r2, #1
   179b8:	strb	r2, [r8, r3]
   179bc:	mov	r3, #1
   179c0:	str	r3, [sp, #28]
   179c4:	b	17778 <argp_parse@@Base+0x1e88>
   179c8:	andeq	sl, r2, r0, lsr #5
   179cc:	andeq	r9, r1, r1, asr r2
   179d0:	andeq	r9, r1, r1, ror r2
   179d4:	andeq	r9, r1, r0, lsr #5
   179d8:	andeq	r9, r1, r8, lsr #5
   179dc:	andeq	r9, r1, r8, asr #5
   179e0:	strdeq	r9, [r1], -r5
   179e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179e8:	sub	sp, sp, #36	; 0x24
   179ec:	subs	r8, r0, #0
   179f0:	ldr	r4, [sp, #80]	; 0x50
   179f4:	ldr	fp, [sp, #72]	; 0x48
   179f8:	ldr	r5, [sp, #76]	; 0x4c
   179fc:	ldr	r9, [r4, #4]
   17a00:	bgt	17a10 <argp_parse@@Base+0x2120>
   17a04:	mvn	r0, #0
   17a08:	add	sp, sp, #36	; 0x24
   17a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a10:	mov	sl, r3
   17a14:	mov	r3, #0
   17a18:	str	r3, [r4, #12]
   17a1c:	ldr	r3, [r4]
   17a20:	mov	r7, r1
   17a24:	cmp	r3, #0
   17a28:	mov	r6, r2
   17a2c:	beq	17a50 <argp_parse@@Base+0x2160>
   17a30:	ldr	r3, [r4, #16]
   17a34:	cmp	r3, #0
   17a38:	beq	17a58 <argp_parse@@Base+0x2168>
   17a3c:	ldrb	r3, [r2]
   17a40:	sub	r3, r3, #43	; 0x2b
   17a44:	tst	r3, #253	; 0xfd
   17a48:	addeq	r6, r2, #1
   17a4c:	b	17a94 <argp_parse@@Base+0x21a4>
   17a50:	mov	r3, #1
   17a54:	str	r3, [r4]
   17a58:	ldr	r3, [r4]
   17a5c:	str	r3, [r4, #32]
   17a60:	str	r3, [r4, #28]
   17a64:	mov	r3, #0
   17a68:	str	r3, [r4, #20]
   17a6c:	ldrb	r2, [r6]
   17a70:	cmp	r2, #45	; 0x2d
   17a74:	moveq	r3, #2
   17a78:	beq	17a84 <argp_parse@@Base+0x2194>
   17a7c:	cmp	r2, #43	; 0x2b
   17a80:	bne	17b94 <argp_parse@@Base+0x22a4>
   17a84:	add	r6, r6, #1
   17a88:	str	r3, [r4, #24]
   17a8c:	mov	r3, #1
   17a90:	str	r3, [r4, #16]
   17a94:	ldrb	r3, [r6]
   17a98:	cmp	r3, #58	; 0x3a
   17a9c:	ldr	r3, [r4, #20]
   17aa0:	moveq	r9, #0
   17aa4:	cmp	r3, #0
   17aa8:	beq	17ab8 <argp_parse@@Base+0x21c8>
   17aac:	ldrb	r3, [r3]
   17ab0:	cmp	r3, #0
   17ab4:	bne	17c4c <argp_parse@@Base+0x235c>
   17ab8:	ldr	r3, [r4]
   17abc:	ldr	r2, [r4, #32]
   17ac0:	cmp	r2, r3
   17ac4:	ldr	r2, [r4, #28]
   17ac8:	strgt	r3, [r4, #32]
   17acc:	cmp	r3, r2
   17ad0:	ldr	r2, [r4, #24]
   17ad4:	strlt	r3, [r4, #28]
   17ad8:	cmp	r2, #1
   17adc:	bne	17b14 <argp_parse@@Base+0x2224>
   17ae0:	ldr	r1, [r4, #32]
   17ae4:	ldr	r2, [r4, #28]
   17ae8:	cmp	r2, r1
   17aec:	beq	17bc4 <argp_parse@@Base+0x22d4>
   17af0:	cmp	r3, r1
   17af4:	beq	17b04 <argp_parse@@Base+0x2214>
   17af8:	mov	r1, r4
   17afc:	mov	r0, r7
   17b00:	bl	174d0 <argp_parse@@Base+0x1be0>
   17b04:	ldr	r3, [r4]
   17b08:	cmp	r8, r3
   17b0c:	bgt	17bd0 <argp_parse@@Base+0x22e0>
   17b10:	str	r3, [r4, #32]
   17b14:	ldr	r3, [r4]
   17b18:	cmp	r8, r3
   17b1c:	beq	17b74 <argp_parse@@Base+0x2284>
   17b20:	ldr	r1, [pc, #920]	; 17ec0 <argp_parse@@Base+0x25d0>
   17b24:	ldr	r0, [r7, r3, lsl #2]
   17b28:	str	r3, [sp, #24]
   17b2c:	bl	11028 <strcmp@plt>
   17b30:	cmp	r0, #0
   17b34:	bne	17b74 <argp_parse@@Base+0x2284>
   17b38:	ldr	r1, [r4, #28]
   17b3c:	ldr	r3, [sp, #24]
   17b40:	ldr	r2, [r4, #32]
   17b44:	add	r3, r3, #1
   17b48:	cmp	r1, r2
   17b4c:	str	r3, [r4]
   17b50:	streq	r3, [r4, #28]
   17b54:	beq	17b6c <argp_parse@@Base+0x227c>
   17b58:	cmp	r3, r2
   17b5c:	beq	17b6c <argp_parse@@Base+0x227c>
   17b60:	mov	r1, r4
   17b64:	mov	r0, r7
   17b68:	bl	174d0 <argp_parse@@Base+0x1be0>
   17b6c:	str	r8, [r4, #32]
   17b70:	str	r8, [r4]
   17b74:	ldr	r2, [r4]
   17b78:	cmp	r8, r2
   17b7c:	bne	17bf8 <argp_parse@@Base+0x2308>
   17b80:	ldr	r3, [r4, #28]
   17b84:	ldr	r2, [r4, #32]
   17b88:	cmp	r3, r2
   17b8c:	strne	r3, [r4]
   17b90:	b	17a04 <argp_parse@@Base+0x2114>
   17b94:	ldr	r3, [sp, #84]	; 0x54
   17b98:	cmp	r3, #0
   17b9c:	beq	17bac <argp_parse@@Base+0x22bc>
   17ba0:	mov	r3, #0
   17ba4:	str	r3, [r4, #24]
   17ba8:	b	17a8c <argp_parse@@Base+0x219c>
   17bac:	ldr	r0, [pc, #784]	; 17ec4 <argp_parse@@Base+0x25d4>
   17bb0:	bl	11148 <getenv@plt>
   17bb4:	cmp	r0, #0
   17bb8:	bne	17ba0 <argp_parse@@Base+0x22b0>
   17bbc:	mov	r3, #1
   17bc0:	b	17ba4 <argp_parse@@Base+0x22b4>
   17bc4:	cmp	r3, r2
   17bc8:	strne	r3, [r4, #28]
   17bcc:	b	17b04 <argp_parse@@Base+0x2214>
   17bd0:	ldr	r2, [r7, r3, lsl #2]
   17bd4:	ldrb	r1, [r2]
   17bd8:	cmp	r1, #45	; 0x2d
   17bdc:	bne	17bec <argp_parse@@Base+0x22fc>
   17be0:	ldrb	r2, [r2, #1]
   17be4:	cmp	r2, #0
   17be8:	bne	17b10 <argp_parse@@Base+0x2220>
   17bec:	add	r3, r3, #1
   17bf0:	str	r3, [r4]
   17bf4:	b	17b04 <argp_parse@@Base+0x2214>
   17bf8:	ldr	r3, [r7, r2, lsl #2]
   17bfc:	ldrb	r1, [r3]
   17c00:	cmp	r1, #45	; 0x2d
   17c04:	bne	17c14 <argp_parse@@Base+0x2324>
   17c08:	ldrb	r1, [r3, #1]
   17c0c:	cmp	r1, #0
   17c10:	bne	17c34 <argp_parse@@Base+0x2344>
   17c14:	ldr	r1, [r4, #24]
   17c18:	cmp	r1, #0
   17c1c:	beq	17a04 <argp_parse@@Base+0x2114>
   17c20:	add	r2, r2, #1
   17c24:	str	r2, [r4]
   17c28:	str	r3, [r4, #12]
   17c2c:	mov	r0, #1
   17c30:	b	17a08 <argp_parse@@Base+0x2118>
   17c34:	cmp	sl, #0
   17c38:	bne	17cc8 <argp_parse@@Base+0x23d8>
   17c3c:	ldr	r3, [r4]
   17c40:	ldr	r3, [r7, r3, lsl #2]
   17c44:	add	r3, r3, #1
   17c48:	str	r3, [r4, #20]
   17c4c:	ldr	r3, [r4, #20]
   17c50:	mov	r0, r6
   17c54:	add	r2, r3, #1
   17c58:	str	r2, [r4, #20]
   17c5c:	ldrb	r5, [r3]
   17c60:	str	r2, [sp, #28]
   17c64:	str	r3, [sp, #24]
   17c68:	mov	r1, r5
   17c6c:	bl	111cc <strchr@plt>
   17c70:	ldr	r3, [sp, #24]
   17c74:	ldr	r2, [sp, #28]
   17c78:	ldrb	r1, [r3, #1]
   17c7c:	cmp	r1, #0
   17c80:	ldreq	r1, [r4]
   17c84:	addeq	r1, r1, #1
   17c88:	streq	r1, [r4]
   17c8c:	sub	r1, r5, #58	; 0x3a
   17c90:	cmp	r0, #0
   17c94:	cmpne	r1, #1
   17c98:	bhi	17d74 <argp_parse@@Base+0x2484>
   17c9c:	cmp	r9, #0
   17ca0:	beq	17cbc <argp_parse@@Base+0x23cc>
   17ca4:	ldr	r0, [pc, #540]	; 17ec8 <argp_parse@@Base+0x25d8>
   17ca8:	mov	r3, r5
   17cac:	ldr	r2, [r7]
   17cb0:	ldr	r1, [pc, #532]	; 17ecc <argp_parse@@Base+0x25dc>
   17cb4:	ldr	r0, [r0]
   17cb8:	bl	111d8 <fprintf@plt>
   17cbc:	str	r5, [r4, #8]
   17cc0:	mov	r0, #63	; 0x3f
   17cc4:	b	17a08 <argp_parse@@Base+0x2118>
   17cc8:	cmp	r1, #45	; 0x2d
   17ccc:	bne	17d08 <argp_parse@@Base+0x2418>
   17cd0:	add	r3, r3, #2
   17cd4:	str	r3, [r4, #20]
   17cd8:	ldr	r3, [pc, #480]	; 17ec0 <argp_parse@@Base+0x25d0>
   17cdc:	str	r9, [sp, #12]
   17ce0:	str	r3, [sp, #16]
   17ce4:	str	r4, [sp, #8]
   17ce8:	str	r5, [sp, #4]
   17cec:	str	fp, [sp]
   17cf0:	mov	r3, sl
   17cf4:	mov	r2, r6
   17cf8:	mov	r1, r7
   17cfc:	mov	r0, r8
   17d00:	bl	17594 <argp_parse@@Base+0x1ca4>
   17d04:	b	17a08 <argp_parse@@Base+0x2118>
   17d08:	cmp	r5, #0
   17d0c:	beq	17c3c <argp_parse@@Base+0x234c>
   17d10:	ldrb	r2, [r3, #2]
   17d14:	cmp	r2, #0
   17d18:	bne	17d34 <argp_parse@@Base+0x2444>
   17d1c:	mov	r0, r6
   17d20:	str	r3, [sp, #24]
   17d24:	bl	111cc <strchr@plt>
   17d28:	ldr	r3, [sp, #24]
   17d2c:	cmp	r0, #0
   17d30:	bne	17c3c <argp_parse@@Base+0x234c>
   17d34:	add	r3, r3, #1
   17d38:	str	r3, [r4, #20]
   17d3c:	ldr	r3, [pc, #396]	; 17ed0 <argp_parse@@Base+0x25e0>
   17d40:	str	r9, [sp, #12]
   17d44:	str	r3, [sp, #16]
   17d48:	str	r4, [sp, #8]
   17d4c:	str	r5, [sp, #4]
   17d50:	str	fp, [sp]
   17d54:	mov	r3, sl
   17d58:	mov	r2, r6
   17d5c:	mov	r1, r7
   17d60:	mov	r0, r8
   17d64:	bl	17594 <argp_parse@@Base+0x1ca4>
   17d68:	cmn	r0, #1
   17d6c:	bne	17a08 <argp_parse@@Base+0x2118>
   17d70:	b	17c3c <argp_parse@@Base+0x234c>
   17d74:	ldrb	r1, [r0]
   17d78:	cmp	r1, #87	; 0x57
   17d7c:	ldrb	r1, [r0, #1]
   17d80:	bne	17e1c <argp_parse@@Base+0x252c>
   17d84:	cmp	sl, #0
   17d88:	sub	ip, r1, #59	; 0x3b
   17d8c:	clz	ip, ip
   17d90:	lsr	ip, ip, #5
   17d94:	moveq	ip, #0
   17d98:	cmp	ip, #0
   17d9c:	beq	17e1c <argp_parse@@Base+0x252c>
   17da0:	ldrb	r3, [r3, #1]
   17da4:	cmp	r3, #0
   17da8:	strne	r2, [r4, #12]
   17dac:	bne	17dfc <argp_parse@@Base+0x250c>
   17db0:	ldr	r3, [r4]
   17db4:	cmp	r8, r3
   17db8:	ldrne	r3, [r7, r3, lsl #2]
   17dbc:	strne	r3, [r4, #12]
   17dc0:	bne	17dfc <argp_parse@@Base+0x250c>
   17dc4:	cmp	r9, #0
   17dc8:	beq	17de4 <argp_parse@@Base+0x24f4>
   17dcc:	ldr	r0, [pc, #244]	; 17ec8 <argp_parse@@Base+0x25d8>
   17dd0:	mov	r3, r5
   17dd4:	ldr	r2, [r7]
   17dd8:	ldr	r1, [pc, #244]	; 17ed4 <argp_parse@@Base+0x25e4>
   17ddc:	ldr	r0, [r0]
   17de0:	bl	111d8 <fprintf@plt>
   17de4:	str	r5, [r4, #8]
   17de8:	ldrb	r0, [r6]
   17dec:	cmp	r0, #58	; 0x3a
   17df0:	moveq	r0, #58	; 0x3a
   17df4:	movne	r0, #63	; 0x3f
   17df8:	b	17a08 <argp_parse@@Base+0x2118>
   17dfc:	ldr	r3, [r4, #12]
   17e00:	ldr	r2, [pc, #208]	; 17ed8 <argp_parse@@Base+0x25e8>
   17e04:	str	r3, [r4, #20]
   17e08:	mov	r3, #0
   17e0c:	str	r3, [r4, #12]
   17e10:	str	r2, [sp, #16]
   17e14:	stmib	sp, {r3, r4, r9}
   17e18:	b	17cec <argp_parse@@Base+0x23fc>
   17e1c:	cmp	r1, #58	; 0x3a
   17e20:	bne	17e6c <argp_parse@@Base+0x257c>
   17e24:	ldrb	r1, [r0, #2]
   17e28:	ldrb	r3, [r3, #1]
   17e2c:	cmp	r1, #58	; 0x3a
   17e30:	bne	17e4c <argp_parse@@Base+0x255c>
   17e34:	cmp	r3, #0
   17e38:	strne	r2, [r4, #12]
   17e3c:	ldrne	r3, [r4]
   17e40:	bne	17e5c <argp_parse@@Base+0x256c>
   17e44:	str	r3, [r4, #12]
   17e48:	b	17e64 <argp_parse@@Base+0x2574>
   17e4c:	cmp	r3, #0
   17e50:	ldr	r3, [r4]
   17e54:	beq	17e74 <argp_parse@@Base+0x2584>
   17e58:	str	r2, [r4, #12]
   17e5c:	add	r3, r3, #1
   17e60:	str	r3, [r4]
   17e64:	mov	r3, #0
   17e68:	str	r3, [r4, #20]
   17e6c:	mov	r0, r5
   17e70:	b	17a08 <argp_parse@@Base+0x2118>
   17e74:	cmp	r8, r3
   17e78:	addne	r2, r3, #1
   17e7c:	strne	r2, [r4]
   17e80:	ldrne	r3, [r7, r3, lsl #2]
   17e84:	bne	17e44 <argp_parse@@Base+0x2554>
   17e88:	cmp	r9, #0
   17e8c:	beq	17ea8 <argp_parse@@Base+0x25b8>
   17e90:	ldr	r0, [pc, #48]	; 17ec8 <argp_parse@@Base+0x25d8>
   17e94:	mov	r3, r5
   17e98:	ldr	r2, [r7]
   17e9c:	ldr	r1, [pc, #48]	; 17ed4 <argp_parse@@Base+0x25e4>
   17ea0:	ldr	r0, [r0]
   17ea4:	bl	111d8 <fprintf@plt>
   17ea8:	str	r5, [r4, #8]
   17eac:	ldrb	r5, [r6]
   17eb0:	cmp	r5, #58	; 0x3a
   17eb4:	moveq	r5, #58	; 0x3a
   17eb8:	movne	r5, #63	; 0x3f
   17ebc:	b	17e64 <argp_parse@@Base+0x2574>
   17ec0:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17ec4:	andeq	r9, r1, sp, lsl r3
   17ec8:	andeq	sl, r2, r0, lsr #5
   17ecc:	andeq	r9, r1, sp, lsr #6
   17ed0:	ldrdeq	r8, [r1], -r9
   17ed4:	andeq	r9, r1, r9, asr #6
   17ed8:	andeq	r9, r1, r2, ror r3
   17edc:	push	{r4, r5, lr}
   17ee0:	sub	sp, sp, #20
   17ee4:	ldr	r5, [pc, #84]	; 17f40 <argp_parse@@Base+0x2650>
   17ee8:	ldr	r4, [pc, #84]	; 17f44 <argp_parse@@Base+0x2654>
   17eec:	ldr	ip, [r5]
   17ef0:	str	r4, [sp, #8]
   17ef4:	str	ip, [r4]
   17ef8:	ldr	ip, [r5, #4]
   17efc:	str	ip, [r4, #4]
   17f00:	ldr	ip, [sp, #40]	; 0x28
   17f04:	str	ip, [sp, #12]
   17f08:	ldr	ip, [sp, #36]	; 0x24
   17f0c:	str	ip, [sp, #4]
   17f10:	ldr	ip, [sp, #32]
   17f14:	str	ip, [sp]
   17f18:	bl	179e4 <argp_parse@@Base+0x20f4>
   17f1c:	ldr	r3, [r4]
   17f20:	ldr	r2, [r4, #12]
   17f24:	str	r3, [r5]
   17f28:	ldr	r3, [pc, #24]	; 17f48 <argp_parse@@Base+0x2658>
   17f2c:	str	r2, [r3]
   17f30:	ldr	r3, [r4, #8]
   17f34:	str	r3, [r5, #8]
   17f38:	add	sp, sp, #20
   17f3c:	pop	{r4, r5, pc}
   17f40:	andeq	sl, r2, ip, lsl #5
   17f44:	ldrdeq	sl, [r2], -ip
   17f48:	andeq	sl, r2, r8, ror r3
   17f4c:	push	{r0, r1, r2, r3, r4, lr}
   17f50:	mov	r3, #1
   17f54:	str	r3, [sp, #8]
   17f58:	mov	r3, #0
   17f5c:	str	r3, [sp, #4]
   17f60:	str	r3, [sp]
   17f64:	bl	17edc <argp_parse@@Base+0x25ec>
   17f68:	add	sp, sp, #20
   17f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   17f70:	push	{r4, r5, r6, lr}
   17f74:	subs	r4, r2, #0
   17f78:	mov	r6, r0
   17f7c:	mov	r5, r1
   17f80:	beq	17f98 <argp_parse@@Base+0x26a8>
   17f84:	mov	r1, r4
   17f88:	mvn	r0, #0
   17f8c:	bl	17fbc <argp_parse@@Base+0x26cc>
   17f90:	cmp	r0, r5
   17f94:	bcc	17fa8 <argp_parse@@Base+0x26b8>
   17f98:	mul	r1, r5, r4
   17f9c:	mov	r0, r6
   17fa0:	pop	{r4, r5, r6, lr}
   17fa4:	b	16e54 <argp_parse@@Base+0x1564>
   17fa8:	bl	111e4 <__errno_location@plt>
   17fac:	mov	r3, #12
   17fb0:	str	r3, [r0]
   17fb4:	mov	r0, #0
   17fb8:	pop	{r4, r5, r6, pc}
   17fbc:	subs	r2, r1, #1
   17fc0:	bxeq	lr
   17fc4:	bcc	1819c <argp_parse@@Base+0x28ac>
   17fc8:	cmp	r0, r1
   17fcc:	bls	18180 <argp_parse@@Base+0x2890>
   17fd0:	tst	r1, r2
   17fd4:	beq	1818c <argp_parse@@Base+0x289c>
   17fd8:	clz	r3, r0
   17fdc:	clz	r2, r1
   17fe0:	sub	r3, r2, r3
   17fe4:	rsbs	r3, r3, #31
   17fe8:	addne	r3, r3, r3, lsl #1
   17fec:	mov	r2, #0
   17ff0:	addne	pc, pc, r3, lsl #2
   17ff4:	nop			; (mov r0, r0)
   17ff8:	cmp	r0, r1, lsl #31
   17ffc:	adc	r2, r2, r2
   18000:	subcs	r0, r0, r1, lsl #31
   18004:	cmp	r0, r1, lsl #30
   18008:	adc	r2, r2, r2
   1800c:	subcs	r0, r0, r1, lsl #30
   18010:	cmp	r0, r1, lsl #29
   18014:	adc	r2, r2, r2
   18018:	subcs	r0, r0, r1, lsl #29
   1801c:	cmp	r0, r1, lsl #28
   18020:	adc	r2, r2, r2
   18024:	subcs	r0, r0, r1, lsl #28
   18028:	cmp	r0, r1, lsl #27
   1802c:	adc	r2, r2, r2
   18030:	subcs	r0, r0, r1, lsl #27
   18034:	cmp	r0, r1, lsl #26
   18038:	adc	r2, r2, r2
   1803c:	subcs	r0, r0, r1, lsl #26
   18040:	cmp	r0, r1, lsl #25
   18044:	adc	r2, r2, r2
   18048:	subcs	r0, r0, r1, lsl #25
   1804c:	cmp	r0, r1, lsl #24
   18050:	adc	r2, r2, r2
   18054:	subcs	r0, r0, r1, lsl #24
   18058:	cmp	r0, r1, lsl #23
   1805c:	adc	r2, r2, r2
   18060:	subcs	r0, r0, r1, lsl #23
   18064:	cmp	r0, r1, lsl #22
   18068:	adc	r2, r2, r2
   1806c:	subcs	r0, r0, r1, lsl #22
   18070:	cmp	r0, r1, lsl #21
   18074:	adc	r2, r2, r2
   18078:	subcs	r0, r0, r1, lsl #21
   1807c:	cmp	r0, r1, lsl #20
   18080:	adc	r2, r2, r2
   18084:	subcs	r0, r0, r1, lsl #20
   18088:	cmp	r0, r1, lsl #19
   1808c:	adc	r2, r2, r2
   18090:	subcs	r0, r0, r1, lsl #19
   18094:	cmp	r0, r1, lsl #18
   18098:	adc	r2, r2, r2
   1809c:	subcs	r0, r0, r1, lsl #18
   180a0:	cmp	r0, r1, lsl #17
   180a4:	adc	r2, r2, r2
   180a8:	subcs	r0, r0, r1, lsl #17
   180ac:	cmp	r0, r1, lsl #16
   180b0:	adc	r2, r2, r2
   180b4:	subcs	r0, r0, r1, lsl #16
   180b8:	cmp	r0, r1, lsl #15
   180bc:	adc	r2, r2, r2
   180c0:	subcs	r0, r0, r1, lsl #15
   180c4:	cmp	r0, r1, lsl #14
   180c8:	adc	r2, r2, r2
   180cc:	subcs	r0, r0, r1, lsl #14
   180d0:	cmp	r0, r1, lsl #13
   180d4:	adc	r2, r2, r2
   180d8:	subcs	r0, r0, r1, lsl #13
   180dc:	cmp	r0, r1, lsl #12
   180e0:	adc	r2, r2, r2
   180e4:	subcs	r0, r0, r1, lsl #12
   180e8:	cmp	r0, r1, lsl #11
   180ec:	adc	r2, r2, r2
   180f0:	subcs	r0, r0, r1, lsl #11
   180f4:	cmp	r0, r1, lsl #10
   180f8:	adc	r2, r2, r2
   180fc:	subcs	r0, r0, r1, lsl #10
   18100:	cmp	r0, r1, lsl #9
   18104:	adc	r2, r2, r2
   18108:	subcs	r0, r0, r1, lsl #9
   1810c:	cmp	r0, r1, lsl #8
   18110:	adc	r2, r2, r2
   18114:	subcs	r0, r0, r1, lsl #8
   18118:	cmp	r0, r1, lsl #7
   1811c:	adc	r2, r2, r2
   18120:	subcs	r0, r0, r1, lsl #7
   18124:	cmp	r0, r1, lsl #6
   18128:	adc	r2, r2, r2
   1812c:	subcs	r0, r0, r1, lsl #6
   18130:	cmp	r0, r1, lsl #5
   18134:	adc	r2, r2, r2
   18138:	subcs	r0, r0, r1, lsl #5
   1813c:	cmp	r0, r1, lsl #4
   18140:	adc	r2, r2, r2
   18144:	subcs	r0, r0, r1, lsl #4
   18148:	cmp	r0, r1, lsl #3
   1814c:	adc	r2, r2, r2
   18150:	subcs	r0, r0, r1, lsl #3
   18154:	cmp	r0, r1, lsl #2
   18158:	adc	r2, r2, r2
   1815c:	subcs	r0, r0, r1, lsl #2
   18160:	cmp	r0, r1, lsl #1
   18164:	adc	r2, r2, r2
   18168:	subcs	r0, r0, r1, lsl #1
   1816c:	cmp	r0, r1
   18170:	adc	r2, r2, r2
   18174:	subcs	r0, r0, r1
   18178:	mov	r0, r2
   1817c:	bx	lr
   18180:	moveq	r0, #1
   18184:	movne	r0, #0
   18188:	bx	lr
   1818c:	clz	r2, r1
   18190:	rsb	r2, r2, #31
   18194:	lsr	r0, r0, r2
   18198:	bx	lr
   1819c:	cmp	r0, #0
   181a0:	mvnne	r0, #0
   181a4:	b	18408 <argp_parse@@Base+0x2b18>
   181a8:	cmp	r1, #0
   181ac:	beq	1819c <argp_parse@@Base+0x28ac>
   181b0:	push	{r0, r1, lr}
   181b4:	bl	17fbc <argp_parse@@Base+0x26cc>
   181b8:	pop	{r1, r2, lr}
   181bc:	mul	r3, r2, r0
   181c0:	sub	r1, r1, r3
   181c4:	bx	lr
   181c8:	cmp	r1, #0
   181cc:	beq	183d8 <argp_parse@@Base+0x2ae8>
   181d0:	eor	ip, r0, r1
   181d4:	rsbmi	r1, r1, #0
   181d8:	subs	r2, r1, #1
   181dc:	beq	183a4 <argp_parse@@Base+0x2ab4>
   181e0:	movs	r3, r0
   181e4:	rsbmi	r3, r0, #0
   181e8:	cmp	r3, r1
   181ec:	bls	183b0 <argp_parse@@Base+0x2ac0>
   181f0:	tst	r1, r2
   181f4:	beq	183c0 <argp_parse@@Base+0x2ad0>
   181f8:	clz	r2, r3
   181fc:	clz	r0, r1
   18200:	sub	r2, r0, r2
   18204:	rsbs	r2, r2, #31
   18208:	addne	r2, r2, r2, lsl #1
   1820c:	mov	r0, #0
   18210:	addne	pc, pc, r2, lsl #2
   18214:	nop			; (mov r0, r0)
   18218:	cmp	r3, r1, lsl #31
   1821c:	adc	r0, r0, r0
   18220:	subcs	r3, r3, r1, lsl #31
   18224:	cmp	r3, r1, lsl #30
   18228:	adc	r0, r0, r0
   1822c:	subcs	r3, r3, r1, lsl #30
   18230:	cmp	r3, r1, lsl #29
   18234:	adc	r0, r0, r0
   18238:	subcs	r3, r3, r1, lsl #29
   1823c:	cmp	r3, r1, lsl #28
   18240:	adc	r0, r0, r0
   18244:	subcs	r3, r3, r1, lsl #28
   18248:	cmp	r3, r1, lsl #27
   1824c:	adc	r0, r0, r0
   18250:	subcs	r3, r3, r1, lsl #27
   18254:	cmp	r3, r1, lsl #26
   18258:	adc	r0, r0, r0
   1825c:	subcs	r3, r3, r1, lsl #26
   18260:	cmp	r3, r1, lsl #25
   18264:	adc	r0, r0, r0
   18268:	subcs	r3, r3, r1, lsl #25
   1826c:	cmp	r3, r1, lsl #24
   18270:	adc	r0, r0, r0
   18274:	subcs	r3, r3, r1, lsl #24
   18278:	cmp	r3, r1, lsl #23
   1827c:	adc	r0, r0, r0
   18280:	subcs	r3, r3, r1, lsl #23
   18284:	cmp	r3, r1, lsl #22
   18288:	adc	r0, r0, r0
   1828c:	subcs	r3, r3, r1, lsl #22
   18290:	cmp	r3, r1, lsl #21
   18294:	adc	r0, r0, r0
   18298:	subcs	r3, r3, r1, lsl #21
   1829c:	cmp	r3, r1, lsl #20
   182a0:	adc	r0, r0, r0
   182a4:	subcs	r3, r3, r1, lsl #20
   182a8:	cmp	r3, r1, lsl #19
   182ac:	adc	r0, r0, r0
   182b0:	subcs	r3, r3, r1, lsl #19
   182b4:	cmp	r3, r1, lsl #18
   182b8:	adc	r0, r0, r0
   182bc:	subcs	r3, r3, r1, lsl #18
   182c0:	cmp	r3, r1, lsl #17
   182c4:	adc	r0, r0, r0
   182c8:	subcs	r3, r3, r1, lsl #17
   182cc:	cmp	r3, r1, lsl #16
   182d0:	adc	r0, r0, r0
   182d4:	subcs	r3, r3, r1, lsl #16
   182d8:	cmp	r3, r1, lsl #15
   182dc:	adc	r0, r0, r0
   182e0:	subcs	r3, r3, r1, lsl #15
   182e4:	cmp	r3, r1, lsl #14
   182e8:	adc	r0, r0, r0
   182ec:	subcs	r3, r3, r1, lsl #14
   182f0:	cmp	r3, r1, lsl #13
   182f4:	adc	r0, r0, r0
   182f8:	subcs	r3, r3, r1, lsl #13
   182fc:	cmp	r3, r1, lsl #12
   18300:	adc	r0, r0, r0
   18304:	subcs	r3, r3, r1, lsl #12
   18308:	cmp	r3, r1, lsl #11
   1830c:	adc	r0, r0, r0
   18310:	subcs	r3, r3, r1, lsl #11
   18314:	cmp	r3, r1, lsl #10
   18318:	adc	r0, r0, r0
   1831c:	subcs	r3, r3, r1, lsl #10
   18320:	cmp	r3, r1, lsl #9
   18324:	adc	r0, r0, r0
   18328:	subcs	r3, r3, r1, lsl #9
   1832c:	cmp	r3, r1, lsl #8
   18330:	adc	r0, r0, r0
   18334:	subcs	r3, r3, r1, lsl #8
   18338:	cmp	r3, r1, lsl #7
   1833c:	adc	r0, r0, r0
   18340:	subcs	r3, r3, r1, lsl #7
   18344:	cmp	r3, r1, lsl #6
   18348:	adc	r0, r0, r0
   1834c:	subcs	r3, r3, r1, lsl #6
   18350:	cmp	r3, r1, lsl #5
   18354:	adc	r0, r0, r0
   18358:	subcs	r3, r3, r1, lsl #5
   1835c:	cmp	r3, r1, lsl #4
   18360:	adc	r0, r0, r0
   18364:	subcs	r3, r3, r1, lsl #4
   18368:	cmp	r3, r1, lsl #3
   1836c:	adc	r0, r0, r0
   18370:	subcs	r3, r3, r1, lsl #3
   18374:	cmp	r3, r1, lsl #2
   18378:	adc	r0, r0, r0
   1837c:	subcs	r3, r3, r1, lsl #2
   18380:	cmp	r3, r1, lsl #1
   18384:	adc	r0, r0, r0
   18388:	subcs	r3, r3, r1, lsl #1
   1838c:	cmp	r3, r1
   18390:	adc	r0, r0, r0
   18394:	subcs	r3, r3, r1
   18398:	cmp	ip, #0
   1839c:	rsbmi	r0, r0, #0
   183a0:	bx	lr
   183a4:	teq	ip, r0
   183a8:	rsbmi	r0, r0, #0
   183ac:	bx	lr
   183b0:	movcc	r0, #0
   183b4:	asreq	r0, ip, #31
   183b8:	orreq	r0, r0, #1
   183bc:	bx	lr
   183c0:	clz	r2, r1
   183c4:	rsb	r2, r2, #31
   183c8:	cmp	ip, #0
   183cc:	lsr	r0, r3, r2
   183d0:	rsbmi	r0, r0, #0
   183d4:	bx	lr
   183d8:	cmp	r0, #0
   183dc:	mvngt	r0, #-2147483648	; 0x80000000
   183e0:	movlt	r0, #-2147483648	; 0x80000000
   183e4:	b	18408 <argp_parse@@Base+0x2b18>
   183e8:	cmp	r1, #0
   183ec:	beq	183d8 <argp_parse@@Base+0x2ae8>
   183f0:	push	{r0, r1, lr}
   183f4:	bl	181d0 <argp_parse@@Base+0x28e0>
   183f8:	pop	{r1, r2, lr}
   183fc:	mul	r3, r2, r0
   18400:	sub	r1, r1, r3
   18404:	bx	lr
   18408:	push	{r1, lr}
   1840c:	mov	r0, #8
   18410:	bl	1101c <raise@plt>
   18414:	pop	{r1, pc}
   18418:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1841c:	mov	r7, r0
   18420:	ldr	r6, [pc, #72]	; 18470 <argp_parse@@Base+0x2b80>
   18424:	ldr	r5, [pc, #72]	; 18474 <argp_parse@@Base+0x2b84>
   18428:	add	r6, pc, r6
   1842c:	add	r5, pc, r5
   18430:	sub	r6, r6, r5
   18434:	mov	r8, r1
   18438:	mov	r9, r2
   1843c:	bl	10fe4 <calloc@plt-0x20>
   18440:	asrs	r6, r6, #2
   18444:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18448:	mov	r4, #0
   1844c:	add	r4, r4, #1
   18450:	ldr	r3, [r5], #4
   18454:	mov	r2, r9
   18458:	mov	r1, r8
   1845c:	mov	r0, r7
   18460:	blx	r3
   18464:	cmp	r6, r4
   18468:	bne	1844c <argp_parse@@Base+0x2b5c>
   1846c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18470:	ldrdeq	r1, [r1], -r8
   18474:	ldrdeq	r1, [r1], -r0
   18478:	bx	lr

Disassembly of section .fini:

0001847c <.fini>:
   1847c:	push	{r3, lr}
   18480:	pop	{r3, pc}
