
../repos/coreutils/src/split:     file format elf32-littlearm


Disassembly of section .init:

0001136c <.init>:
   1136c:	push	{r3, lr}
   11370:	bl	1177c <__assert_fail@plt+0x48>
   11374:	pop	{r3, pc}

Disassembly of section .plt:

00011378 <fdopen@plt-0x14>:
   11378:	push	{lr}		; (str lr, [sp, #-4]!)
   1137c:	ldr	lr, [pc, #4]	; 11388 <fdopen@plt-0x4>
   11380:	add	lr, pc, lr
   11384:	ldr	pc, [lr, #8]!
   11388:	andeq	r3, r2, r8, ror ip

0001138c <fdopen@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #143360	; 0x23000
   11394:	ldr	pc, [ip, #3192]!	; 0xc78

00011398 <calloc@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #143360	; 0x23000
   113a0:	ldr	pc, [ip, #3184]!	; 0xc70

000113a4 <fputs_unlocked@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #143360	; 0x23000
   113ac:	ldr	pc, [ip, #3176]!	; 0xc68

000113b0 <raise@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #143360	; 0x23000
   113b8:	ldr	pc, [ip, #3168]!	; 0xc60

000113bc <strcmp@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #143360	; 0x23000
   113c4:	ldr	pc, [ip, #3160]!	; 0xc58

000113c8 <strtol@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #143360	; 0x23000
   113d0:	ldr	pc, [ip, #3152]!	; 0xc50

000113d4 <printf@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #143360	; 0x23000
   113dc:	ldr	pc, [ip, #3144]!	; 0xc48

000113e0 <read@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #143360	; 0x23000
   113e8:	ldr	pc, [ip, #3136]!	; 0xc40

000113ec <fflush@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #143360	; 0x23000
   113f4:	ldr	pc, [ip, #3128]!	; 0xc38

000113f8 <sigprocmask@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #143360	; 0x23000
   11400:	ldr	pc, [ip, #3120]!	; 0xc30

00011404 <memmove@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #143360	; 0x23000
   1140c:	ldr	pc, [ip, #3112]!	; 0xc28

00011410 <free@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #143360	; 0x23000
   11418:	ldr	pc, [ip, #3104]!	; 0xc20

0001141c <_exit@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #143360	; 0x23000
   11424:	ldr	pc, [ip, #3096]!	; 0xc18

00011428 <memcpy@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #143360	; 0x23000
   11430:	ldr	pc, [ip, #3088]!	; 0xc10

00011434 <mbsinit@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #143360	; 0x23000
   1143c:	ldr	pc, [ip, #3080]!	; 0xc08

00011440 <ftruncate64@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #143360	; 0x23000
   11448:	ldr	pc, [ip, #3072]!	; 0xc00

0001144c <fwrite_unlocked@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #143360	; 0x23000
   11454:	ldr	pc, [ip, #3064]!	; 0xbf8

00011458 <memcmp@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #143360	; 0x23000
   11460:	ldr	pc, [ip, #3056]!	; 0xbf0

00011464 <dup2@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #143360	; 0x23000
   1146c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011470 <realloc@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #143360	; 0x23000
   11478:	ldr	pc, [ip, #3040]!	; 0xbe0

0001147c <textdomain@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #143360	; 0x23000
   11484:	ldr	pc, [ip, #3032]!	; 0xbd8

00011488 <rawmemchr@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #143360	; 0x23000
   11490:	ldr	pc, [ip, #3024]!	; 0xbd0

00011494 <iswprint@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #143360	; 0x23000
   1149c:	ldr	pc, [ip, #3016]!	; 0xbc8

000114a0 <__fxstat64@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #143360	; 0x23000
   114a8:	ldr	pc, [ip, #3008]!	; 0xbc0

000114ac <sigaction@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #143360	; 0x23000
   114b4:	ldr	pc, [ip, #3000]!	; 0xbb8

000114b8 <lseek64@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #143360	; 0x23000
   114c0:	ldr	pc, [ip, #2992]!	; 0xbb0

000114c4 <waitpid@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #143360	; 0x23000
   114cc:	ldr	pc, [ip, #2984]!	; 0xba8

000114d0 <__ctype_get_mb_cur_max@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #143360	; 0x23000
   114d8:	ldr	pc, [ip, #2976]!	; 0xba0

000114dc <strcpy@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #143360	; 0x23000
   114e4:	ldr	pc, [ip, #2968]!	; 0xb98

000114e8 <__fpending@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #143360	; 0x23000
   114f0:	ldr	pc, [ip, #2960]!	; 0xb90

000114f4 <ferror_unlocked@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #143360	; 0x23000
   114fc:	ldr	pc, [ip, #2952]!	; 0xb88

00011500 <mbrtowc@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #143360	; 0x23000
   11508:	ldr	pc, [ip, #2944]!	; 0xb80

0001150c <error@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #143360	; 0x23000
   11514:	ldr	pc, [ip, #2936]!	; 0xb78

00011518 <open64@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #143360	; 0x23000
   11520:	ldr	pc, [ip, #2928]!	; 0xb70

00011524 <getenv@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #143360	; 0x23000
   1152c:	ldr	pc, [ip, #2920]!	; 0xb68

00011530 <malloc@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #143360	; 0x23000
   11538:	ldr	pc, [ip, #2912]!	; 0xb60

0001153c <sigaddset@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #143360	; 0x23000
   11544:	ldr	pc, [ip, #2904]!	; 0xb58

00011548 <__libc_start_main@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #143360	; 0x23000
   11550:	ldr	pc, [ip, #2896]!	; 0xb50

00011554 <__freading@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #143360	; 0x23000
   1155c:	ldr	pc, [ip, #2888]!	; 0xb48

00011560 <__gmon_start__@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #143360	; 0x23000
   11568:	ldr	pc, [ip, #2880]!	; 0xb40

0001156c <getopt_long@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #143360	; 0x23000
   11574:	ldr	pc, [ip, #2872]!	; 0xb38

00011578 <__ctype_b_loc@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #143360	; 0x23000
   11580:	ldr	pc, [ip, #2864]!	; 0xb30

00011584 <exit@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #143360	; 0x23000
   1158c:	ldr	pc, [ip, #2856]!	; 0xb28

00011590 <gettext@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #143360	; 0x23000
   11598:	ldr	pc, [ip, #2848]!	; 0xb20

0001159c <strlen@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #143360	; 0x23000
   115a4:	ldr	pc, [ip, #2840]!	; 0xb18

000115a8 <__libc_current_sigrtmax@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #143360	; 0x23000
   115b0:	ldr	pc, [ip, #2832]!	; 0xb10

000115b4 <strchr@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #143360	; 0x23000
   115bc:	ldr	pc, [ip, #2824]!	; 0xb08

000115c0 <setenv@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #143360	; 0x23000
   115c8:	ldr	pc, [ip, #2816]!	; 0xb00

000115cc <memrchr@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #143360	; 0x23000
   115d4:	ldr	pc, [ip, #2808]!	; 0xaf8

000115d8 <fprintf@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #143360	; 0x23000
   115e0:	ldr	pc, [ip, #2800]!	; 0xaf0

000115e4 <getpagesize@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #143360	; 0x23000
   115ec:	ldr	pc, [ip, #2792]!	; 0xae8

000115f0 <__errno_location@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #143360	; 0x23000
   115f8:	ldr	pc, [ip, #2784]!	; 0xae0

000115fc <__cxa_atexit@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #143360	; 0x23000
   11604:	ldr	pc, [ip, #2776]!	; 0xad8

00011608 <memset@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #143360	; 0x23000
   11610:	ldr	pc, [ip, #2768]!	; 0xad0

00011614 <write@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #143360	; 0x23000
   1161c:	ldr	pc, [ip, #2760]!	; 0xac8

00011620 <fileno@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #143360	; 0x23000
   11628:	ldr	pc, [ip, #2752]!	; 0xac0

0001162c <strtoumax@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #143360	; 0x23000
   11634:	ldr	pc, [ip, #2744]!	; 0xab8

00011638 <memchr@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #143360	; 0x23000
   11640:	ldr	pc, [ip, #2736]!	; 0xab0

00011644 <fclose@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #143360	; 0x23000
   1164c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011650 <pipe@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #143360	; 0x23000
   11658:	ldr	pc, [ip, #2720]!	; 0xaa0

0001165c <fseeko64@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #143360	; 0x23000
   11664:	ldr	pc, [ip, #2712]!	; 0xa98

00011668 <fcntl64@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #143360	; 0x23000
   11670:	ldr	pc, [ip, #2704]!	; 0xa90

00011674 <setlocale@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #143360	; 0x23000
   1167c:	ldr	pc, [ip, #2696]!	; 0xa88

00011680 <sigemptyset@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #143360	; 0x23000
   11688:	ldr	pc, [ip, #2688]!	; 0xa80

0001168c <fork@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #143360	; 0x23000
   11694:	ldr	pc, [ip, #2680]!	; 0xa78

00011698 <execl@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #143360	; 0x23000
   116a0:	ldr	pc, [ip, #2672]!	; 0xa70

000116a4 <strrchr@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #143360	; 0x23000
   116ac:	ldr	pc, [ip, #2664]!	; 0xa68

000116b0 <nl_langinfo@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #143360	; 0x23000
   116b8:	ldr	pc, [ip, #2656]!	; 0xa60

000116bc <sprintf@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #143360	; 0x23000
   116c4:	ldr	pc, [ip, #2648]!	; 0xa58

000116c8 <clearerr_unlocked@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #143360	; 0x23000
   116d0:	ldr	pc, [ip, #2640]!	; 0xa50

000116d4 <bindtextdomain@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #143360	; 0x23000
   116dc:	ldr	pc, [ip, #2632]!	; 0xa48

000116e0 <aligned_alloc@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #143360	; 0x23000
   116e8:	ldr	pc, [ip, #2624]!	; 0xa40

000116ec <__libc_current_sigrtmin@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #143360	; 0x23000
   116f4:	ldr	pc, [ip, #2616]!	; 0xa38

000116f8 <fputs@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #143360	; 0x23000
   11700:	ldr	pc, [ip, #2608]!	; 0xa30

00011704 <strncmp@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #143360	; 0x23000
   1170c:	ldr	pc, [ip, #2600]!	; 0xa28

00011710 <abort@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #143360	; 0x23000
   11718:	ldr	pc, [ip, #2592]!	; 0xa20

0001171c <close@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #143360	; 0x23000
   11724:	ldr	pc, [ip, #2584]!	; 0xa18

00011728 <strspn@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #143360	; 0x23000
   11730:	ldr	pc, [ip, #2576]!	; 0xa10

00011734 <__assert_fail@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #143360	; 0x23000
   1173c:	ldr	pc, [ip, #2568]!	; 0xa08

Disassembly of section .text:

00011740 <.text>:
   11740:	mov	fp, #0
   11744:	mov	lr, #0
   11748:	pop	{r1}		; (ldr r1, [sp], #4)
   1174c:	mov	r2, sp
   11750:	push	{r2}		; (str r2, [sp, #-4]!)
   11754:	push	{r0}		; (str r0, [sp, #-4]!)
   11758:	ldr	ip, [pc, #16]	; 11770 <__assert_fail@plt+0x3c>
   1175c:	push	{ip}		; (str ip, [sp, #-4]!)
   11760:	ldr	r0, [pc, #12]	; 11774 <__assert_fail@plt+0x40>
   11764:	ldr	r3, [pc, #12]	; 11778 <__assert_fail@plt+0x44>
   11768:	bl	11548 <__libc_start_main@plt>
   1176c:	bl	11710 <abort@plt>
   11770:	andeq	r2, r2, r0, ror #25
   11774:	andeq	r1, r1, r8, lsl ip
   11778:	andeq	r2, r2, r0, lsl #25
   1177c:	ldr	r3, [pc, #20]	; 11798 <__assert_fail@plt+0x64>
   11780:	ldr	r2, [pc, #20]	; 1179c <__assert_fail@plt+0x68>
   11784:	add	r3, pc, r3
   11788:	ldr	r2, [r3, r2]
   1178c:	cmp	r2, #0
   11790:	bxeq	lr
   11794:	b	11560 <__gmon_start__@plt>
   11798:	andeq	r3, r2, r4, ror r8
   1179c:	andeq	r0, r0, r8, asr #2
   117a0:	ldr	r0, [pc, #24]	; 117c0 <__assert_fail@plt+0x8c>
   117a4:	ldr	r3, [pc, #24]	; 117c4 <__assert_fail@plt+0x90>
   117a8:	cmp	r3, r0
   117ac:	bxeq	lr
   117b0:	ldr	r3, [pc, #16]	; 117c8 <__assert_fail@plt+0x94>
   117b4:	cmp	r3, #0
   117b8:	bxeq	lr
   117bc:	bx	r3
   117c0:	andeq	r5, r3, r0, asr r3
   117c4:	andeq	r5, r3, r0, asr r3
   117c8:	andeq	r0, r0, r0
   117cc:	ldr	r0, [pc, #36]	; 117f8 <__assert_fail@plt+0xc4>
   117d0:	ldr	r1, [pc, #36]	; 117fc <__assert_fail@plt+0xc8>
   117d4:	sub	r1, r1, r0
   117d8:	asr	r1, r1, #2
   117dc:	add	r1, r1, r1, lsr #31
   117e0:	asrs	r1, r1, #1
   117e4:	bxeq	lr
   117e8:	ldr	r3, [pc, #16]	; 11800 <__assert_fail@plt+0xcc>
   117ec:	cmp	r3, #0
   117f0:	bxeq	lr
   117f4:	bx	r3
   117f8:	andeq	r5, r3, r0, asr r3
   117fc:	andeq	r5, r3, r0, asr r3
   11800:	andeq	r0, r0, r0
   11804:	push	{r4, lr}
   11808:	ldr	r4, [pc, #24]	; 11828 <__assert_fail@plt+0xf4>
   1180c:	ldrb	r3, [r4]
   11810:	cmp	r3, #0
   11814:	popne	{r4, pc}
   11818:	bl	117a0 <__assert_fail@plt+0x6c>
   1181c:	mov	r3, #1
   11820:	strb	r3, [r4]
   11824:	pop	{r4, pc}
   11828:	andeq	r5, r3, ip, ror #6
   1182c:	b	117cc <__assert_fail@plt+0x98>
   11830:	push	{fp, lr}
   11834:	mov	fp, sp
   11838:	sub	sp, sp, #56	; 0x38
   1183c:	str	r0, [fp, #-4]
   11840:	ldr	r0, [fp, #-4]
   11844:	cmp	r0, #0
   11848:	beq	11898 <__assert_fail@plt+0x164>
   1184c:	b	11850 <__assert_fail@plt+0x11c>
   11850:	movw	r0, #21344	; 0x5360
   11854:	movt	r0, #3
   11858:	ldr	r0, [r0]
   1185c:	movw	r1, #11544	; 0x2d18
   11860:	movt	r1, #2
   11864:	str	r0, [fp, #-8]
   11868:	mov	r0, r1
   1186c:	bl	11590 <gettext@plt>
   11870:	movw	r1, #21808	; 0x5530
   11874:	movt	r1, #3
   11878:	ldr	r2, [r1]
   1187c:	ldr	r1, [fp, #-8]
   11880:	str	r0, [fp, #-12]
   11884:	mov	r0, r1
   11888:	ldr	r1, [fp, #-12]
   1188c:	bl	115d8 <fprintf@plt>
   11890:	str	r0, [fp, #-16]
   11894:	b	119c0 <__assert_fail@plt+0x28c>
   11898:	movw	r0, #11583	; 0x2d3f
   1189c:	movt	r0, #2
   118a0:	bl	11590 <gettext@plt>
   118a4:	movw	lr, #21808	; 0x5530
   118a8:	movt	lr, #3
   118ac:	ldr	r1, [lr]
   118b0:	bl	113d4 <printf@plt>
   118b4:	movw	r1, #11622	; 0x2d66
   118b8:	movt	r1, #2
   118bc:	str	r0, [fp, #-20]	; 0xffffffec
   118c0:	mov	r0, r1
   118c4:	bl	11590 <gettext@plt>
   118c8:	movw	r1, #21348	; 0x5364
   118cc:	movt	r1, #3
   118d0:	ldr	r1, [r1]
   118d4:	bl	113a4 <fputs_unlocked@plt>
   118d8:	str	r0, [fp, #-24]	; 0xffffffe8
   118dc:	bl	119c8 <__assert_fail@plt+0x294>
   118e0:	bl	119fc <__assert_fail@plt+0x2c8>
   118e4:	movw	r0, #21348	; 0x5364
   118e8:	movt	r0, #3
   118ec:	ldr	r0, [r0]
   118f0:	movw	r1, #11728	; 0x2dd0
   118f4:	movt	r1, #2
   118f8:	str	r0, [sp, #28]
   118fc:	mov	r0, r1
   11900:	bl	11590 <gettext@plt>
   11904:	ldr	r1, [sp, #28]
   11908:	str	r0, [sp, #24]
   1190c:	mov	r0, r1
   11910:	ldr	r1, [sp, #24]
   11914:	movw	r2, #2
   11918:	bl	115d8 <fprintf@plt>
   1191c:	movw	r1, #12818	; 0x3212
   11920:	movt	r1, #2
   11924:	str	r0, [sp, #20]
   11928:	mov	r0, r1
   1192c:	bl	11590 <gettext@plt>
   11930:	movw	r1, #21348	; 0x5364
   11934:	movt	r1, #3
   11938:	ldr	r1, [r1]
   1193c:	bl	113a4 <fputs_unlocked@plt>
   11940:	movw	r1, #12931	; 0x3283
   11944:	movt	r1, #2
   11948:	str	r0, [sp, #16]
   1194c:	mov	r0, r1
   11950:	bl	11590 <gettext@plt>
   11954:	movw	r1, #21348	; 0x5364
   11958:	movt	r1, #3
   1195c:	ldr	r1, [r1]
   11960:	bl	113a4 <fputs_unlocked@plt>
   11964:	movw	r1, #12976	; 0x32b0
   11968:	movt	r1, #2
   1196c:	str	r0, [sp, #12]
   11970:	mov	r0, r1
   11974:	bl	11590 <gettext@plt>
   11978:	movw	r1, #21348	; 0x5364
   1197c:	movt	r1, #3
   11980:	ldr	r1, [r1]
   11984:	bl	113a4 <fputs_unlocked@plt>
   11988:	str	r0, [sp, #8]
   1198c:	bl	11a30 <__assert_fail@plt+0x2fc>
   11990:	movw	r0, #13030	; 0x32e6
   11994:	movt	r0, #2
   11998:	bl	11590 <gettext@plt>
   1199c:	movw	r1, #21348	; 0x5364
   119a0:	movt	r1, #3
   119a4:	ldr	r1, [r1]
   119a8:	bl	113a4 <fputs_unlocked@plt>
   119ac:	movw	r1, #13370	; 0x343a
   119b0:	movt	r1, #2
   119b4:	str	r0, [sp, #4]
   119b8:	mov	r0, r1
   119bc:	bl	11a64 <__assert_fail@plt+0x330>
   119c0:	ldr	r0, [fp, #-4]
   119c4:	bl	11584 <exit@plt>
   119c8:	push	{fp, lr}
   119cc:	mov	fp, sp
   119d0:	sub	sp, sp, #8
   119d4:	movw	r0, #14139	; 0x373b
   119d8:	movt	r0, #2
   119dc:	bl	11590 <gettext@plt>
   119e0:	movw	lr, #21348	; 0x5364
   119e4:	movt	lr, #3
   119e8:	ldr	r1, [lr]
   119ec:	bl	113a4 <fputs_unlocked@plt>
   119f0:	str	r0, [sp, #4]
   119f4:	mov	sp, fp
   119f8:	pop	{fp, pc}
   119fc:	push	{fp, lr}
   11a00:	mov	fp, sp
   11a04:	sub	sp, sp, #8
   11a08:	movw	r0, #14195	; 0x3773
   11a0c:	movt	r0, #2
   11a10:	bl	11590 <gettext@plt>
   11a14:	movw	lr, #21348	; 0x5364
   11a18:	movt	lr, #3
   11a1c:	ldr	r1, [lr]
   11a20:	bl	113a4 <fputs_unlocked@plt>
   11a24:	str	r0, [sp, #4]
   11a28:	mov	sp, fp
   11a2c:	pop	{fp, pc}
   11a30:	push	{fp, lr}
   11a34:	mov	fp, sp
   11a38:	sub	sp, sp, #8
   11a3c:	movw	r0, #14270	; 0x37be
   11a40:	movt	r0, #2
   11a44:	bl	11590 <gettext@plt>
   11a48:	movw	lr, #21348	; 0x5364
   11a4c:	movt	lr, #3
   11a50:	ldr	r1, [lr]
   11a54:	bl	113a4 <fputs_unlocked@plt>
   11a58:	str	r0, [sp, #4]
   11a5c:	mov	sp, fp
   11a60:	pop	{fp, pc}
   11a64:	push	{fp, lr}
   11a68:	mov	fp, sp
   11a6c:	sub	sp, sp, #96	; 0x60
   11a70:	add	r1, sp, #36	; 0x24
   11a74:	movw	r2, #16100	; 0x3ee4
   11a78:	movt	r2, #2
   11a7c:	str	r0, [fp, #-4]
   11a80:	mov	r0, r1
   11a84:	str	r1, [sp, #20]
   11a88:	mov	r1, r2
   11a8c:	movw	r2, #56	; 0x38
   11a90:	bl	11428 <memcpy@plt>
   11a94:	ldr	r0, [fp, #-4]
   11a98:	str	r0, [sp, #32]
   11a9c:	ldr	r0, [sp, #20]
   11aa0:	str	r0, [sp, #28]
   11aa4:	ldr	r0, [sp, #28]
   11aa8:	ldr	r0, [r0]
   11aac:	movw	r1, #0
   11ab0:	cmp	r0, r1
   11ab4:	movw	r0, #0
   11ab8:	str	r0, [sp, #16]
   11abc:	beq	11ae8 <__assert_fail@plt+0x3b4>
   11ac0:	ldr	r0, [fp, #-4]
   11ac4:	ldr	r1, [sp, #28]
   11ac8:	ldr	r1, [r1]
   11acc:	bl	113bc <strcmp@plt>
   11ad0:	cmp	r0, #0
   11ad4:	movw	r0, #0
   11ad8:	moveq	r0, #1
   11adc:	mvn	r1, #0
   11ae0:	eor	r0, r0, r1
   11ae4:	str	r0, [sp, #16]
   11ae8:	ldr	r0, [sp, #16]
   11aec:	tst	r0, #1
   11af0:	beq	11b04 <__assert_fail@plt+0x3d0>
   11af4:	ldr	r0, [sp, #28]
   11af8:	add	r0, r0, #8
   11afc:	str	r0, [sp, #28]
   11b00:	b	11aa4 <__assert_fail@plt+0x370>
   11b04:	ldr	r0, [sp, #28]
   11b08:	ldr	r0, [r0, #4]
   11b0c:	movw	r1, #0
   11b10:	cmp	r0, r1
   11b14:	beq	11b24 <__assert_fail@plt+0x3f0>
   11b18:	ldr	r0, [sp, #28]
   11b1c:	ldr	r0, [r0, #4]
   11b20:	str	r0, [sp, #32]
   11b24:	movw	r0, #14577	; 0x38f1
   11b28:	movt	r0, #2
   11b2c:	bl	11590 <gettext@plt>
   11b30:	movw	r1, #13887	; 0x363f
   11b34:	movt	r1, #2
   11b38:	movw	r2, #14600	; 0x3908
   11b3c:	movt	r2, #2
   11b40:	bl	113d4 <printf@plt>
   11b44:	movw	r1, #5
   11b48:	str	r0, [sp, #12]
   11b4c:	mov	r0, r1
   11b50:	movw	r1, #0
   11b54:	bl	11674 <setlocale@plt>
   11b58:	str	r0, [sp, #24]
   11b5c:	ldr	r0, [sp, #24]
   11b60:	movw	r1, #0
   11b64:	cmp	r0, r1
   11b68:	beq	11ba8 <__assert_fail@plt+0x474>
   11b6c:	ldr	r0, [sp, #24]
   11b70:	movw	r1, #14640	; 0x3930
   11b74:	movt	r1, #2
   11b78:	movw	r2, #3
   11b7c:	bl	11704 <strncmp@plt>
   11b80:	cmp	r0, #0
   11b84:	beq	11ba8 <__assert_fail@plt+0x474>
   11b88:	movw	r0, #14644	; 0x3934
   11b8c:	movt	r0, #2
   11b90:	bl	11590 <gettext@plt>
   11b94:	movw	lr, #21348	; 0x5364
   11b98:	movt	lr, #3
   11b9c:	ldr	r1, [lr]
   11ba0:	bl	113a4 <fputs_unlocked@plt>
   11ba4:	str	r0, [sp, #8]
   11ba8:	movw	r0, #14715	; 0x397b
   11bac:	movt	r0, #2
   11bb0:	bl	11590 <gettext@plt>
   11bb4:	ldr	r2, [fp, #-4]
   11bb8:	movw	r1, #14600	; 0x3908
   11bbc:	movt	r1, #2
   11bc0:	bl	113d4 <printf@plt>
   11bc4:	movw	r1, #14742	; 0x3996
   11bc8:	movt	r1, #2
   11bcc:	str	r0, [sp, #4]
   11bd0:	mov	r0, r1
   11bd4:	bl	11590 <gettext@plt>
   11bd8:	ldr	r1, [sp, #32]
   11bdc:	ldr	r2, [sp, #32]
   11be0:	ldr	lr, [fp, #-4]
   11be4:	cmp	r2, lr
   11be8:	movw	r2, #0
   11bec:	moveq	r2, #1
   11bf0:	tst	r2, #1
   11bf4:	movw	r2, #12817	; 0x3211
   11bf8:	movt	r2, #2
   11bfc:	movw	lr, #14510	; 0x38ae
   11c00:	movt	lr, #2
   11c04:	movne	r2, lr
   11c08:	bl	113d4 <printf@plt>
   11c0c:	str	r0, [sp]
   11c10:	mov	sp, fp
   11c14:	pop	{fp, pc}
   11c18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11c1c:	add	fp, sp, #24
   11c20:	sub	sp, sp, #696	; 0x2b8
   11c24:	mov	r2, #0
   11c28:	str	r2, [fp, #-28]	; 0xffffffe4
   11c2c:	str	r0, [fp, #-32]	; 0xffffffe0
   11c30:	str	r1, [fp, #-36]	; 0xffffffdc
   11c34:	str	r2, [fp, #-40]	; 0xffffffd8
   11c38:	str	r2, [fp, #-44]	; 0xffffffd4
   11c3c:	str	r2, [fp, #-292]	; 0xfffffedc
   11c40:	bl	115e4 <getpagesize@plt>
   11c44:	str	r0, [fp, #-48]	; 0xffffffd0
   11c48:	ldr	r0, [fp, #-292]	; 0xfffffedc
   11c4c:	str	r0, [fp, #-52]	; 0xffffffcc
   11c50:	str	r0, [fp, #-56]	; 0xffffffc8
   11c54:	str	r0, [fp, #-60]	; 0xffffffc4
   11c58:	str	r0, [fp, #-64]	; 0xffffffc0
   11c5c:	str	r0, [fp, #-72]	; 0xffffffb8
   11c60:	mvn	r1, #-2147483648	; 0x80000000
   11c64:	str	r1, [fp, #-76]	; 0xffffffb4
   11c68:	mvn	r1, #0
   11c6c:	str	r1, [fp, #-80]	; 0xffffffb0
   11c70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11c74:	ldr	r0, [r1]
   11c78:	bl	179e4 <__assert_fail@plt+0x62b0>
   11c7c:	movw	r0, #6
   11c80:	movw	r1, #12817	; 0x3211
   11c84:	movt	r1, #2
   11c88:	bl	11674 <setlocale@plt>
   11c8c:	movw	r1, #13891	; 0x3643
   11c90:	movt	r1, #2
   11c94:	str	r0, [fp, #-296]	; 0xfffffed8
   11c98:	mov	r0, r1
   11c9c:	movw	r1, #13376	; 0x3440
   11ca0:	movt	r1, #2
   11ca4:	bl	116d4 <bindtextdomain@plt>
   11ca8:	movw	r1, #13891	; 0x3643
   11cac:	movt	r1, #2
   11cb0:	str	r0, [fp, #-300]	; 0xfffffed4
   11cb4:	mov	r0, r1
   11cb8:	bl	1147c <textdomain@plt>
   11cbc:	movw	r1, #29372	; 0x72bc
   11cc0:	movt	r1, #1
   11cc4:	str	r0, [fp, #-304]	; 0xfffffed0
   11cc8:	mov	r0, r1
   11ccc:	bl	22ce4 <__assert_fail@plt+0x115b0>
   11cd0:	movw	r1, #16237	; 0x3f6d
   11cd4:	movt	r1, #2
   11cd8:	str	r0, [fp, #-308]	; 0xfffffecc
   11cdc:	mov	r0, r1
   11ce0:	bl	131cc <__assert_fail@plt+0x1a98>
   11ce4:	movw	r1, #21360	; 0x5370
   11ce8:	movt	r1, #3
   11cec:	str	r0, [r1]
   11cf0:	movw	r0, #13816	; 0x35f8
   11cf4:	movt	r0, #2
   11cf8:	bl	131cc <__assert_fail@plt+0x1a98>
   11cfc:	movw	r1, #21364	; 0x5374
   11d00:	movt	r1, #3
   11d04:	str	r0, [r1]
   11d08:	movw	r0, #21336	; 0x5358
   11d0c:	movt	r0, #3
   11d10:	ldr	r0, [r0]
   11d14:	cmp	r0, #0
   11d18:	beq	11d30 <__assert_fail@plt+0x5fc>
   11d1c:	movw	r0, #21336	; 0x5358
   11d20:	movt	r0, #3
   11d24:	ldr	r0, [r0]
   11d28:	str	r0, [fp, #-312]	; 0xfffffec8
   11d2c:	b	11d3c <__assert_fail@plt+0x608>
   11d30:	movw	r0, #1
   11d34:	str	r0, [fp, #-312]	; 0xfffffec8
   11d38:	b	11d3c <__assert_fail@plt+0x608>
   11d3c:	ldr	r0, [fp, #-312]	; 0xfffffec8
   11d40:	str	r0, [fp, #-84]	; 0xffffffac
   11d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11d4c:	movw	r2, #13400	; 0x3458
   11d50:	movt	r2, #2
   11d54:	movw	r3, #15828	; 0x3dd4
   11d58:	movt	r3, #2
   11d5c:	movw	ip, #0
   11d60:	str	ip, [sp]
   11d64:	bl	1156c <getopt_long@plt>
   11d68:	str	r0, [fp, #-68]	; 0xffffffbc
   11d6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11d70:	cmn	r0, #1
   11d74:	bne	11d7c <__assert_fail@plt+0x648>
   11d78:	b	12900 <__assert_fail@plt+0x11cc>
   11d7c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11d80:	cmn	r0, #3
   11d84:	str	r0, [fp, #-316]	; 0xfffffec4
   11d88:	beq	128a0 <__assert_fail@plt+0x116c>
   11d8c:	b	11d90 <__assert_fail@plt+0x65c>
   11d90:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11d94:	cmn	r0, #2
   11d98:	beq	12898 <__assert_fail@plt+0x1164>
   11d9c:	b	11da0 <__assert_fail@plt+0x66c>
   11da0:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11da4:	sub	r1, r0, #48	; 0x30
   11da8:	cmp	r1, #10
   11dac:	bcc	124b0 <__assert_fail@plt+0xd7c>
   11db0:	b	11db4 <__assert_fail@plt+0x680>
   11db4:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11db8:	cmp	r0, #67	; 0x43
   11dbc:	beq	120f4 <__assert_fail@plt+0x9c0>
   11dc0:	b	11dc4 <__assert_fail@plt+0x690>
   11dc4:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11dc8:	cmp	r0, #97	; 0x61
   11dcc:	beq	11ea0 <__assert_fail@plt+0x76c>
   11dd0:	b	11dd4 <__assert_fail@plt+0x6a0>
   11dd4:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11dd8:	cmp	r0, #98	; 0x62
   11ddc:	beq	11f94 <__assert_fail@plt+0x860>
   11de0:	b	11de4 <__assert_fail@plt+0x6b0>
   11de4:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11de8:	cmp	r0, #100	; 0x64
   11dec:	beq	12668 <__assert_fail@plt+0xf34>
   11df0:	b	11df4 <__assert_fail@plt+0x6c0>
   11df4:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11df8:	cmp	r0, #101	; 0x65
   11dfc:	beq	127f0 <__assert_fail@plt+0x10bc>
   11e00:	b	11e04 <__assert_fail@plt+0x6d0>
   11e04:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11e08:	cmp	r0, #108	; 0x6c
   11e0c:	beq	1204c <__assert_fail@plt+0x918>
   11e10:	b	11e14 <__assert_fail@plt+0x6e0>
   11e14:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11e18:	cmp	r0, #110	; 0x6e
   11e1c:	beq	1219c <__assert_fail@plt+0xa68>
   11e20:	b	11e24 <__assert_fail@plt+0x6f0>
   11e24:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11e28:	cmp	r0, #116	; 0x74
   11e2c:	beq	1237c <__assert_fail@plt+0xc48>
   11e30:	b	11e34 <__assert_fail@plt+0x700>
   11e34:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11e38:	cmp	r0, #117	; 0x75
   11e3c:	beq	12368 <__assert_fail@plt+0xc34>
   11e40:	b	11e44 <__assert_fail@plt+0x710>
   11e44:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11e48:	cmp	r0, #120	; 0x78
   11e4c:	beq	12668 <__assert_fail@plt+0xf34>
   11e50:	b	11e54 <__assert_fail@plt+0x720>
   11e54:	ldr	r0, [fp, #-316]	; 0xfffffec4
   11e58:	cmp	r0, #256	; 0x100
   11e5c:	beq	12884 <__assert_fail@plt+0x1150>
   11e60:	b	11e64 <__assert_fail@plt+0x730>
   11e64:	movw	r0, #257	; 0x101
   11e68:	ldr	r1, [fp, #-316]	; 0xfffffec4
   11e6c:	cmp	r1, r0
   11e70:	beq	12804 <__assert_fail@plt+0x10d0>
   11e74:	b	11e78 <__assert_fail@plt+0x744>
   11e78:	movw	r0, #258	; 0x102
   11e7c:	ldr	r1, [fp, #-316]	; 0xfffffec4
   11e80:	cmp	r1, r0
   11e84:	beq	12820 <__assert_fail@plt+0x10ec>
   11e88:	b	11e8c <__assert_fail@plt+0x758>
   11e8c:	movw	r0, #259	; 0x103
   11e90:	ldr	r1, [fp, #-316]	; 0xfffffec4
   11e94:	cmp	r1, r0
   11e98:	beq	11f0c <__assert_fail@plt+0x7d8>
   11e9c:	b	128f4 <__assert_fail@plt+0x11c0>
   11ea0:	movw	r0, #21352	; 0x5368
   11ea4:	movt	r0, #3
   11ea8:	ldr	r0, [r0]
   11eac:	movw	r1, #13427	; 0x3473
   11eb0:	movt	r1, #2
   11eb4:	str	r0, [fp, #-320]	; 0xfffffec0
   11eb8:	mov	r0, r1
   11ebc:	bl	11590 <gettext@plt>
   11ec0:	mov	r1, sp
   11ec4:	mov	lr, #0
   11ec8:	str	lr, [r1, #16]
   11ecc:	str	r0, [r1, #12]
   11ed0:	movw	r0, #12817	; 0x3211
   11ed4:	movt	r0, #2
   11ed8:	str	r0, [r1, #8]
   11edc:	str	lr, [r1, #4]
   11ee0:	mvn	r0, #-1073741824	; 0xc0000000
   11ee4:	str	r0, [r1]
   11ee8:	ldr	r0, [fp, #-320]	; 0xfffffec0
   11eec:	mov	r2, lr
   11ef0:	mov	r3, lr
   11ef4:	bl	1e110 <__assert_fail@plt+0xc9dc>
   11ef8:	movw	r2, #21368	; 0x5378
   11efc:	movt	r2, #3
   11f00:	str	r0, [r2]
   11f04:	str	r1, [fp, #-324]	; 0xfffffebc
   11f08:	b	128fc <__assert_fail@plt+0x11c8>
   11f0c:	movw	r0, #21352	; 0x5368
   11f10:	movt	r0, #3
   11f14:	ldr	r0, [r0]
   11f18:	bl	17138 <__assert_fail@plt+0x5a04>
   11f1c:	movw	lr, #21352	; 0x5368
   11f20:	movt	lr, #3
   11f24:	ldr	lr, [lr]
   11f28:	cmp	r0, lr
   11f2c:	beq	11f78 <__assert_fail@plt+0x844>
   11f30:	movw	r0, #13449	; 0x3489
   11f34:	movt	r0, #2
   11f38:	bl	11590 <gettext@plt>
   11f3c:	movw	lr, #21352	; 0x5368
   11f40:	movt	lr, #3
   11f44:	ldr	lr, [lr]
   11f48:	str	r0, [fp, #-328]	; 0xfffffeb8
   11f4c:	mov	r0, lr
   11f50:	bl	1a040 <__assert_fail@plt+0x890c>
   11f54:	movw	lr, #0
   11f58:	str	r0, [fp, #-332]	; 0xfffffeb4
   11f5c:	mov	r0, lr
   11f60:	mov	r1, lr
   11f64:	ldr	r2, [fp, #-328]	; 0xfffffeb8
   11f68:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   11f6c:	bl	1150c <error@plt>
   11f70:	movw	r0, #1
   11f74:	bl	11830 <__assert_fail@plt+0xfc>
   11f78:	movw	r0, #21352	; 0x5368
   11f7c:	movt	r0, #3
   11f80:	ldr	r0, [r0]
   11f84:	movw	r1, #21372	; 0x537c
   11f88:	movt	r1, #3
   11f8c:	str	r0, [r1]
   11f90:	b	128fc <__assert_fail@plt+0x11c8>
   11f94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f98:	cmp	r0, #0
   11f9c:	beq	11fd0 <__assert_fail@plt+0x89c>
   11fa0:	b	11fa4 <__assert_fail@plt+0x870>
   11fa4:	movw	r0, #13497	; 0x34b9
   11fa8:	movt	r0, #2
   11fac:	bl	11590 <gettext@plt>
   11fb0:	movw	lr, #0
   11fb4:	str	r0, [fp, #-336]	; 0xfffffeb0
   11fb8:	mov	r0, lr
   11fbc:	mov	r1, lr
   11fc0:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   11fc4:	bl	1150c <error@plt>
   11fc8:	movw	r0, #1
   11fcc:	bl	11830 <__assert_fail@plt+0xfc>
   11fd0:	mov	r0, #1
   11fd4:	str	r0, [fp, #-40]	; 0xffffffd8
   11fd8:	movw	r1, #21352	; 0x5368
   11fdc:	movt	r1, #3
   11fe0:	ldr	r1, [r1]
   11fe4:	movw	r2, #13531	; 0x34db
   11fe8:	movt	r2, #2
   11fec:	str	r0, [fp, #-340]	; 0xfffffeac
   11ff0:	mov	r0, r2
   11ff4:	str	r1, [fp, #-344]	; 0xfffffea8
   11ff8:	bl	11590 <gettext@plt>
   11ffc:	mov	r1, sp
   12000:	mov	r2, #0
   12004:	str	r2, [r1, #16]
   12008:	str	r0, [r1, #12]
   1200c:	movw	r0, #15812	; 0x3dc4
   12010:	movt	r0, #2
   12014:	str	r0, [r1, #8]
   12018:	mvn	r0, #-2147483648	; 0x80000000
   1201c:	str	r0, [r1, #4]
   12020:	mvn	r0, #0
   12024:	str	r0, [r1]
   12028:	ldr	r0, [fp, #-344]	; 0xfffffea8
   1202c:	ldr	r1, [fp, #-340]	; 0xfffffeac
   12030:	str	r2, [fp, #-348]	; 0xfffffea4
   12034:	mov	r2, r1
   12038:	ldr	r3, [fp, #-348]	; 0xfffffea4
   1203c:	bl	1e110 <__assert_fail@plt+0xc9dc>
   12040:	str	r1, [fp, #-60]	; 0xffffffc4
   12044:	str	r0, [fp, #-64]	; 0xffffffc0
   12048:	b	128fc <__assert_fail@plt+0x11c8>
   1204c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12050:	cmp	r0, #0
   12054:	beq	12088 <__assert_fail@plt+0x954>
   12058:	b	1205c <__assert_fail@plt+0x928>
   1205c:	movw	r0, #13497	; 0x34b9
   12060:	movt	r0, #2
   12064:	bl	11590 <gettext@plt>
   12068:	movw	lr, #0
   1206c:	str	r0, [fp, #-352]	; 0xfffffea0
   12070:	mov	r0, lr
   12074:	mov	r1, lr
   12078:	ldr	r2, [fp, #-352]	; 0xfffffea0
   1207c:	bl	1150c <error@plt>
   12080:	movw	r0, #1
   12084:	bl	11830 <__assert_fail@plt+0xfc>
   12088:	mov	r0, #3
   1208c:	str	r0, [fp, #-40]	; 0xffffffd8
   12090:	movw	r0, #21352	; 0x5368
   12094:	movt	r0, #3
   12098:	ldr	r0, [r0]
   1209c:	movw	r1, #13555	; 0x34f3
   120a0:	movt	r1, #2
   120a4:	str	r0, [fp, #-356]	; 0xfffffe9c
   120a8:	mov	r0, r1
   120ac:	bl	11590 <gettext@plt>
   120b0:	mov	r1, sp
   120b4:	mov	lr, #0
   120b8:	str	lr, [r1, #16]
   120bc:	str	r0, [r1, #12]
   120c0:	movw	r0, #12817	; 0x3211
   120c4:	movt	r0, #2
   120c8:	str	r0, [r1, #8]
   120cc:	mvn	r0, #0
   120d0:	str	r0, [r1, #4]
   120d4:	str	r0, [r1]
   120d8:	mov	r2, #1
   120dc:	ldr	r0, [fp, #-356]	; 0xfffffe9c
   120e0:	mov	r3, lr
   120e4:	bl	1e110 <__assert_fail@plt+0xc9dc>
   120e8:	str	r1, [fp, #-60]	; 0xffffffc4
   120ec:	str	r0, [fp, #-64]	; 0xffffffc0
   120f0:	b	128fc <__assert_fail@plt+0x11c8>
   120f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   120f8:	cmp	r0, #0
   120fc:	beq	12130 <__assert_fail@plt+0x9fc>
   12100:	b	12104 <__assert_fail@plt+0x9d0>
   12104:	movw	r0, #13497	; 0x34b9
   12108:	movt	r0, #2
   1210c:	bl	11590 <gettext@plt>
   12110:	movw	lr, #0
   12114:	str	r0, [sp, #360]	; 0x168
   12118:	mov	r0, lr
   1211c:	mov	r1, lr
   12120:	ldr	r2, [sp, #360]	; 0x168
   12124:	bl	1150c <error@plt>
   12128:	movw	r0, #1
   1212c:	bl	11830 <__assert_fail@plt+0xfc>
   12130:	mov	r0, #2
   12134:	str	r0, [fp, #-40]	; 0xffffffd8
   12138:	movw	r0, #21352	; 0x5368
   1213c:	movt	r0, #3
   12140:	ldr	r0, [r0]
   12144:	movw	r1, #13531	; 0x34db
   12148:	movt	r1, #2
   1214c:	str	r0, [sp, #356]	; 0x164
   12150:	mov	r0, r1
   12154:	bl	11590 <gettext@plt>
   12158:	mov	r1, sp
   1215c:	mov	lr, #0
   12160:	str	lr, [r1, #16]
   12164:	str	r0, [r1, #12]
   12168:	movw	r0, #15812	; 0x3dc4
   1216c:	movt	r0, #2
   12170:	str	r0, [r1, #8]
   12174:	str	lr, [r1, #4]
   12178:	mvn	r0, #0
   1217c:	str	r0, [r1]
   12180:	mov	r2, #1
   12184:	ldr	r0, [sp, #356]	; 0x164
   12188:	mov	r3, lr
   1218c:	bl	1e110 <__assert_fail@plt+0xc9dc>
   12190:	str	r1, [fp, #-60]	; 0xffffffc4
   12194:	str	r0, [fp, #-64]	; 0xffffffc0
   12198:	b	128fc <__assert_fail@plt+0x11c8>
   1219c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   121a0:	cmp	r0, #0
   121a4:	beq	121d8 <__assert_fail@plt+0xaa4>
   121a8:	b	121ac <__assert_fail@plt+0xa78>
   121ac:	movw	r0, #13497	; 0x34b9
   121b0:	movt	r0, #2
   121b4:	bl	11590 <gettext@plt>
   121b8:	movw	lr, #0
   121bc:	str	r0, [sp, #352]	; 0x160
   121c0:	mov	r0, lr
   121c4:	mov	r1, lr
   121c8:	ldr	r2, [sp, #352]	; 0x160
   121cc:	bl	1150c <error@plt>
   121d0:	movw	r0, #1
   121d4:	bl	11830 <__assert_fail@plt+0xfc>
   121d8:	b	121dc <__assert_fail@plt+0xaa8>
   121dc:	bl	11578 <__ctype_b_loc@plt>
   121e0:	ldr	r0, [r0]
   121e4:	movw	lr, #21352	; 0x5368
   121e8:	movt	lr, #3
   121ec:	ldr	lr, [lr]
   121f0:	ldrb	lr, [lr]
   121f4:	str	r0, [sp, #348]	; 0x15c
   121f8:	mov	r0, lr
   121fc:	bl	131e0 <__assert_fail@plt+0x1aac>
   12200:	mov	lr, r0
   12204:	ldr	r1, [sp, #348]	; 0x15c
   12208:	add	r0, r1, r0, lsl #1
   1220c:	ldrh	r0, [r0]
   12210:	and	r0, r0, #8192	; 0x2000
   12214:	cmp	r0, #0
   12218:	str	lr, [sp, #344]	; 0x158
   1221c:	beq	12238 <__assert_fail@plt+0xb04>
   12220:	movw	r0, #21352	; 0x5368
   12224:	movt	r0, #3
   12228:	ldr	r1, [r0]
   1222c:	add	r1, r1, #1
   12230:	str	r1, [r0]
   12234:	b	121dc <__assert_fail@plt+0xaa8>
   12238:	movw	r0, #21352	; 0x5368
   1223c:	movt	r0, #3
   12240:	ldr	r0, [r0]
   12244:	movw	r1, #13579	; 0x350b
   12248:	movt	r1, #2
   1224c:	movw	r2, #2
   12250:	bl	11704 <strncmp@plt>
   12254:	cmp	r0, #0
   12258:	bne	1227c <__assert_fail@plt+0xb48>
   1225c:	movw	r0, #7
   12260:	str	r0, [fp, #-40]	; 0xffffffd8
   12264:	movw	r0, #21352	; 0x5368
   12268:	movt	r0, #3
   1226c:	ldr	r1, [r0]
   12270:	add	r1, r1, #2
   12274:	str	r1, [r0]
   12278:	b	122cc <__assert_fail@plt+0xb98>
   1227c:	movw	r0, #21352	; 0x5368
   12280:	movt	r0, #3
   12284:	ldr	r0, [r0]
   12288:	movw	r1, #13582	; 0x350e
   1228c:	movt	r1, #2
   12290:	movw	r2, #2
   12294:	bl	11704 <strncmp@plt>
   12298:	cmp	r0, #0
   1229c:	bne	122c0 <__assert_fail@plt+0xb8c>
   122a0:	movw	r0, #6
   122a4:	str	r0, [fp, #-40]	; 0xffffffd8
   122a8:	movw	r0, #21352	; 0x5368
   122ac:	movt	r0, #3
   122b0:	ldr	r1, [r0]
   122b4:	add	r1, r1, #2
   122b8:	str	r1, [r0]
   122bc:	b	122c8 <__assert_fail@plt+0xb94>
   122c0:	movw	r0, #5
   122c4:	str	r0, [fp, #-40]	; 0xffffffd8
   122c8:	b	122cc <__assert_fail@plt+0xb98>
   122cc:	movw	r0, #21352	; 0x5368
   122d0:	movt	r0, #3
   122d4:	ldr	r0, [r0]
   122d8:	movw	r1, #47	; 0x2f
   122dc:	bl	115b4 <strchr@plt>
   122e0:	str	r0, [fp, #-88]	; 0xffffffa8
   122e4:	movw	r1, #0
   122e8:	cmp	r0, r1
   122ec:	beq	12304 <__assert_fail@plt+0xbd0>
   122f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   122f4:	sub	r0, fp, #56	; 0x38
   122f8:	sub	r1, fp, #64	; 0x40
   122fc:	bl	131f4 <__assert_fail@plt+0x1ac0>
   12300:	b	12364 <__assert_fail@plt+0xc30>
   12304:	movw	r0, #21352	; 0x5368
   12308:	movt	r0, #3
   1230c:	ldr	r0, [r0]
   12310:	movw	r1, #13585	; 0x3511
   12314:	movt	r1, #2
   12318:	str	r0, [sp, #340]	; 0x154
   1231c:	mov	r0, r1
   12320:	bl	11590 <gettext@plt>
   12324:	mov	r1, sp
   12328:	mov	lr, #0
   1232c:	str	lr, [r1, #16]
   12330:	str	r0, [r1, #12]
   12334:	movw	r0, #12817	; 0x3211
   12338:	movt	r0, #2
   1233c:	str	r0, [r1, #8]
   12340:	mvn	r0, #0
   12344:	str	r0, [r1, #4]
   12348:	str	r0, [r1]
   1234c:	mov	r2, #1
   12350:	ldr	r0, [sp, #340]	; 0x154
   12354:	mov	r3, lr
   12358:	bl	1e110 <__assert_fail@plt+0xc9dc>
   1235c:	str	r1, [fp, #-60]	; 0xffffffc4
   12360:	str	r0, [fp, #-64]	; 0xffffffc0
   12364:	b	128fc <__assert_fail@plt+0x11c8>
   12368:	movw	r0, #21376	; 0x5380
   1236c:	movt	r0, #3
   12370:	movw	r1, #1
   12374:	strb	r1, [r0]
   12378:	b	128fc <__assert_fail@plt+0x11c8>
   1237c:	movw	r0, #21352	; 0x5368
   12380:	movt	r0, #3
   12384:	ldr	r0, [r0]
   12388:	ldrb	r0, [r0]
   1238c:	strb	r0, [fp, #-89]	; 0xffffffa7
   12390:	ldrsb	r0, [fp, #-89]	; 0xffffffa7
   12394:	cmp	r0, #0
   12398:	bne	123c0 <__assert_fail@plt+0xc8c>
   1239c:	movw	r0, #13610	; 0x352a
   123a0:	movt	r0, #2
   123a4:	bl	11590 <gettext@plt>
   123a8:	movw	lr, #1
   123ac:	str	r0, [sp, #336]	; 0x150
   123b0:	mov	r0, lr
   123b4:	movw	r1, #0
   123b8:	ldr	r2, [sp, #336]	; 0x150
   123bc:	bl	1150c <error@plt>
   123c0:	movw	r0, #21352	; 0x5368
   123c4:	movt	r0, #3
   123c8:	ldr	r0, [r0]
   123cc:	ldrsb	r0, [r0, #1]
   123d0:	cmp	r0, #0
   123d4:	beq	12448 <__assert_fail@plt+0xd14>
   123d8:	movw	r0, #21352	; 0x5368
   123dc:	movt	r0, #3
   123e0:	ldr	r0, [r0]
   123e4:	movw	r1, #13633	; 0x3541
   123e8:	movt	r1, #2
   123ec:	bl	113bc <strcmp@plt>
   123f0:	cmp	r0, #0
   123f4:	bne	12404 <__assert_fail@plt+0xcd0>
   123f8:	movw	r0, #0
   123fc:	strb	r0, [fp, #-89]	; 0xffffffa7
   12400:	b	12444 <__assert_fail@plt+0xd10>
   12404:	movw	r0, #13636	; 0x3544
   12408:	movt	r0, #2
   1240c:	bl	11590 <gettext@plt>
   12410:	movw	lr, #21352	; 0x5368
   12414:	movt	lr, #3
   12418:	ldr	lr, [lr]
   1241c:	str	r0, [sp, #332]	; 0x14c
   12420:	mov	r0, lr
   12424:	bl	1a040 <__assert_fail@plt+0x890c>
   12428:	movw	lr, #1
   1242c:	str	r0, [sp, #328]	; 0x148
   12430:	mov	r0, lr
   12434:	movw	r1, #0
   12438:	ldr	r2, [sp, #332]	; 0x14c
   1243c:	ldr	r3, [sp, #328]	; 0x148
   12440:	bl	1150c <error@plt>
   12444:	b	12448 <__assert_fail@plt+0xd14>
   12448:	movw	r0, #20820	; 0x5154
   1244c:	movt	r0, #3
   12450:	ldr	r0, [r0]
   12454:	movw	r1, #0
   12458:	cmp	r1, r0
   1245c:	bgt	1249c <__assert_fail@plt+0xd68>
   12460:	ldrb	r0, [fp, #-89]	; 0xffffffa7
   12464:	movw	r1, #20820	; 0x5154
   12468:	movt	r1, #3
   1246c:	ldr	r1, [r1]
   12470:	cmp	r0, r1
   12474:	beq	1249c <__assert_fail@plt+0xd68>
   12478:	movw	r0, #13665	; 0x3561
   1247c:	movt	r0, #2
   12480:	bl	11590 <gettext@plt>
   12484:	movw	lr, #1
   12488:	str	r0, [sp, #324]	; 0x144
   1248c:	mov	r0, lr
   12490:	movw	r1, #0
   12494:	ldr	r2, [sp, #324]	; 0x144
   12498:	bl	1150c <error@plt>
   1249c:	ldrb	r0, [fp, #-89]	; 0xffffffa7
   124a0:	movw	r1, #20820	; 0x5154
   124a4:	movt	r1, #3
   124a8:	str	r0, [r1]
   124ac:	b	128fc <__assert_fail@plt+0x11c8>
   124b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   124b4:	cmp	r0, #0
   124b8:	bne	124d0 <__assert_fail@plt+0xd9c>
   124bc:	mov	r0, #4
   124c0:	str	r0, [fp, #-40]	; 0xffffffd8
   124c4:	mov	r0, #0
   124c8:	str	r0, [fp, #-60]	; 0xffffffc4
   124cc:	str	r0, [fp, #-64]	; 0xffffffc0
   124d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   124d4:	cmp	r0, #0
   124d8:	beq	12518 <__assert_fail@plt+0xde4>
   124dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   124e0:	cmp	r0, #4
   124e4:	beq	12518 <__assert_fail@plt+0xde4>
   124e8:	b	124ec <__assert_fail@plt+0xdb8>
   124ec:	movw	r0, #13497	; 0x34b9
   124f0:	movt	r0, #2
   124f4:	bl	11590 <gettext@plt>
   124f8:	movw	lr, #0
   124fc:	str	r0, [sp, #320]	; 0x140
   12500:	mov	r0, lr
   12504:	mov	r1, lr
   12508:	ldr	r2, [sp, #320]	; 0x140
   1250c:	bl	1150c <error@plt>
   12510:	movw	r0, #1
   12514:	bl	11830 <__assert_fail@plt+0xfc>
   12518:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1251c:	cmp	r0, #0
   12520:	beq	12540 <__assert_fail@plt+0xe0c>
   12524:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12528:	ldr	r1, [fp, #-84]	; 0xffffffac
   1252c:	cmp	r0, r1
   12530:	beq	12540 <__assert_fail@plt+0xe0c>
   12534:	mov	r0, #0
   12538:	str	r0, [fp, #-60]	; 0xffffffc4
   1253c:	str	r0, [fp, #-64]	; 0xffffffc0
   12540:	ldr	r0, [fp, #-84]	; 0xffffffac
   12544:	str	r0, [fp, #-72]	; 0xffffffb8
   12548:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1254c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12550:	movw	r2, #39321	; 0x9999
   12554:	movt	r2, #39321	; 0x9999
   12558:	subs	r0, r2, r0
   1255c:	movw	r2, #39321	; 0x9999
   12560:	movt	r2, #6553	; 0x1999
   12564:	sbcs	r1, r2, r1
   12568:	str	r0, [sp, #316]	; 0x13c
   1256c:	str	r1, [sp, #312]	; 0x138
   12570:	bcc	125b8 <__assert_fail@plt+0xe84>
   12574:	b	12578 <__assert_fail@plt+0xe44>
   12578:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1257c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12580:	mov	r2, #10
   12584:	umull	r2, r3, r0, r2
   12588:	add	ip, r1, r1, lsl #2
   1258c:	add	r3, r3, ip, lsl #1
   12590:	ldr	ip, [fp, #-68]	; 0xffffffbc
   12594:	sub	ip, ip, #48	; 0x30
   12598:	adds	r2, r2, ip
   1259c:	adc	r3, r3, ip, asr #31
   125a0:	subs	r0, r2, r0
   125a4:	sbcs	r1, r3, r1
   125a8:	str	r0, [sp, #308]	; 0x134
   125ac:	str	r1, [sp, #304]	; 0x130
   125b0:	bcs	125c4 <__assert_fail@plt+0xe90>
   125b4:	b	125b8 <__assert_fail@plt+0xe84>
   125b8:	movw	r0, #0
   125bc:	str	r0, [sp, #300]	; 0x12c
   125c0:	b	125fc <__assert_fail@plt+0xec8>
   125c4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   125c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   125cc:	mov	r2, #10
   125d0:	umull	r0, r2, r0, r2
   125d4:	add	r1, r1, r1, lsl #2
   125d8:	add	r1, r2, r1, lsl #1
   125dc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   125e0:	sub	r2, r2, #48	; 0x30
   125e4:	adds	r0, r0, r2
   125e8:	adc	r1, r1, r2, asr #31
   125ec:	str	r0, [fp, #-64]	; 0xffffffc0
   125f0:	str	r1, [fp, #-60]	; 0xffffffc4
   125f4:	movw	r0, #1
   125f8:	str	r0, [sp, #300]	; 0x12c
   125fc:	ldr	r0, [sp, #300]	; 0x12c
   12600:	cmp	r0, #0
   12604:	bne	12664 <__assert_fail@plt+0xf30>
   12608:	sub	r2, fp, #110	; 0x6e
   1260c:	movw	r0, #13705	; 0x3589
   12610:	movt	r0, #2
   12614:	str	r2, [sp, #296]	; 0x128
   12618:	bl	11590 <gettext@plt>
   1261c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12620:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12624:	str	r0, [sp, #292]	; 0x124
   12628:	mov	r0, r2
   1262c:	ldr	r2, [sp, #296]	; 0x128
   12630:	bl	178a4 <__assert_fail@plt+0x6170>
   12634:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12638:	movw	r2, #1
   1263c:	str	r0, [sp, #288]	; 0x120
   12640:	mov	r0, r2
   12644:	movw	r2, #0
   12648:	str	r1, [sp, #284]	; 0x11c
   1264c:	mov	r1, r2
   12650:	ldr	r2, [sp, #292]	; 0x124
   12654:	ldr	r3, [sp, #288]	; 0x120
   12658:	ldr	lr, [sp, #284]	; 0x11c
   1265c:	str	lr, [sp]
   12660:	bl	1150c <error@plt>
   12664:	b	128fc <__assert_fail@plt+0x11c8>
   12668:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1266c:	cmp	r0, #100	; 0x64
   12670:	bne	1268c <__assert_fail@plt+0xf58>
   12674:	movw	r0, #20824	; 0x5158
   12678:	movt	r0, #3
   1267c:	movw	r1, #13745	; 0x35b1
   12680:	movt	r1, #2
   12684:	str	r1, [r0]
   12688:	b	126a0 <__assert_fail@plt+0xf6c>
   1268c:	movw	r0, #20824	; 0x5158
   12690:	movt	r0, #3
   12694:	movw	r1, #13756	; 0x35bc
   12698:	movt	r1, #2
   1269c:	str	r1, [r0]
   126a0:	movw	r0, #21352	; 0x5368
   126a4:	movt	r0, #3
   126a8:	ldr	r0, [r0]
   126ac:	movw	r1, #0
   126b0:	cmp	r0, r1
   126b4:	beq	127ec <__assert_fail@plt+0x10b8>
   126b8:	movw	r0, #21352	; 0x5368
   126bc:	movt	r0, #3
   126c0:	ldr	r1, [r0]
   126c4:	str	r0, [sp, #280]	; 0x118
   126c8:	mov	r0, r1
   126cc:	bl	1159c <strlen@plt>
   126d0:	ldr	r1, [sp, #280]	; 0x118
   126d4:	ldr	lr, [r1]
   126d8:	movw	r2, #20824	; 0x5158
   126dc:	movt	r2, #3
   126e0:	ldr	r1, [r2]
   126e4:	str	r0, [sp, #276]	; 0x114
   126e8:	mov	r0, lr
   126ec:	bl	11728 <strspn@plt>
   126f0:	ldr	r1, [sp, #276]	; 0x114
   126f4:	cmp	r1, r0
   126f8:	beq	12768 <__assert_fail@plt+0x1034>
   126fc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12700:	cmp	r0, #100	; 0x64
   12704:	bne	1271c <__assert_fail@plt+0xfe8>
   12708:	movw	r0, #13773	; 0x35cd
   1270c:	movt	r0, #2
   12710:	bl	11590 <gettext@plt>
   12714:	str	r0, [sp, #272]	; 0x110
   12718:	b	1272c <__assert_fail@plt+0xff8>
   1271c:	movw	r0, #13818	; 0x35fa
   12720:	movt	r0, #2
   12724:	bl	11590 <gettext@plt>
   12728:	str	r0, [sp, #272]	; 0x110
   1272c:	ldr	r0, [sp, #272]	; 0x110
   12730:	movw	r1, #21352	; 0x5368
   12734:	movt	r1, #3
   12738:	ldr	r1, [r1]
   1273c:	str	r0, [sp, #268]	; 0x10c
   12740:	mov	r0, r1
   12744:	bl	1a040 <__assert_fail@plt+0x890c>
   12748:	movw	r1, #0
   1274c:	str	r0, [sp, #264]	; 0x108
   12750:	mov	r0, r1
   12754:	ldr	r2, [sp, #268]	; 0x10c
   12758:	ldr	r3, [sp, #264]	; 0x108
   1275c:	bl	1150c <error@plt>
   12760:	movw	r0, #1
   12764:	bl	11830 <__assert_fail@plt+0xfc>
   12768:	b	1276c <__assert_fail@plt+0x1038>
   1276c:	movw	r0, #21352	; 0x5368
   12770:	movt	r0, #3
   12774:	ldr	r0, [r0]
   12778:	ldrb	r0, [r0]
   1277c:	cmp	r0, #48	; 0x30
   12780:	movw	r0, #0
   12784:	str	r0, [sp, #260]	; 0x104
   12788:	bne	127ac <__assert_fail@plt+0x1078>
   1278c:	movw	r0, #21352	; 0x5368
   12790:	movt	r0, #3
   12794:	ldr	r0, [r0]
   12798:	ldrb	r0, [r0, #1]
   1279c:	cmp	r0, #0
   127a0:	movw	r0, #0
   127a4:	movne	r0, #1
   127a8:	str	r0, [sp, #260]	; 0x104
   127ac:	ldr	r0, [sp, #260]	; 0x104
   127b0:	tst	r0, #1
   127b4:	beq	127d0 <__assert_fail@plt+0x109c>
   127b8:	movw	r0, #21352	; 0x5368
   127bc:	movt	r0, #3
   127c0:	ldr	r1, [r0]
   127c4:	add	r1, r1, #1
   127c8:	str	r1, [r0]
   127cc:	b	1276c <__assert_fail@plt+0x1038>
   127d0:	movw	r0, #21352	; 0x5368
   127d4:	movt	r0, #3
   127d8:	ldr	r0, [r0]
   127dc:	movw	r1, #21380	; 0x5384
   127e0:	movt	r1, #3
   127e4:	str	r0, [r1]
   127e8:	b	127ec <__assert_fail@plt+0x10b8>
   127ec:	b	128fc <__assert_fail@plt+0x11c8>
   127f0:	movw	r0, #21384	; 0x5388
   127f4:	movt	r0, #3
   127f8:	movw	r1, #1
   127fc:	strb	r1, [r0]
   12800:	b	128fc <__assert_fail@plt+0x11c8>
   12804:	movw	r0, #21352	; 0x5368
   12808:	movt	r0, #3
   1280c:	ldr	r0, [r0]
   12810:	movw	r1, #21388	; 0x538c
   12814:	movt	r1, #3
   12818:	str	r0, [r1]
   1281c:	b	128fc <__assert_fail@plt+0x11c8>
   12820:	movw	r0, #21352	; 0x5368
   12824:	movt	r0, #3
   12828:	ldr	r0, [r0]
   1282c:	movw	r1, #13865	; 0x3629
   12830:	movt	r1, #2
   12834:	str	r0, [sp, #256]	; 0x100
   12838:	mov	r0, r1
   1283c:	bl	11590 <gettext@plt>
   12840:	mov	r1, sp
   12844:	mov	lr, #0
   12848:	str	lr, [r1, #16]
   1284c:	str	r0, [r1, #12]
   12850:	movw	r0, #15812	; 0x3dc4
   12854:	movt	r0, #2
   12858:	str	r0, [r1, #8]
   1285c:	str	lr, [r1, #4]
   12860:	mvn	r0, #-2147483647	; 0x80000001
   12864:	str	r0, [r1]
   12868:	mov	r2, #1
   1286c:	ldr	r0, [sp, #256]	; 0x100
   12870:	mov	r3, lr
   12874:	bl	1e110 <__assert_fail@plt+0xc9dc>
   12878:	str	r0, [fp, #-44]	; 0xffffffd4
   1287c:	str	r1, [sp, #252]	; 0xfc
   12880:	b	128fc <__assert_fail@plt+0x11c8>
   12884:	movw	r0, #21392	; 0x5390
   12888:	movt	r0, #3
   1288c:	movw	r1, #1
   12890:	strb	r1, [r0]
   12894:	b	128fc <__assert_fail@plt+0x11c8>
   12898:	movw	r0, #0
   1289c:	bl	11830 <__assert_fail@plt+0xfc>
   128a0:	movw	r0, #21348	; 0x5364
   128a4:	movt	r0, #3
   128a8:	ldr	r0, [r0]
   128ac:	movw	r1, #20836	; 0x5164
   128b0:	movt	r1, #3
   128b4:	ldr	r3, [r1]
   128b8:	movw	r1, #13370	; 0x343a
   128bc:	movt	r1, #2
   128c0:	movw	r2, #13887	; 0x363f
   128c4:	movt	r2, #2
   128c8:	movw	ip, #13901	; 0x364d
   128cc:	movt	ip, #2
   128d0:	str	ip, [sp]
   128d4:	movw	ip, #13919	; 0x365f
   128d8:	movt	ip, #2
   128dc:	str	ip, [sp, #4]
   128e0:	movw	ip, #0
   128e4:	str	ip, [sp, #8]
   128e8:	bl	1aed0 <__assert_fail@plt+0x979c>
   128ec:	movw	r0, #0
   128f0:	bl	11584 <exit@plt>
   128f4:	movw	r0, #1
   128f8:	bl	11830 <__assert_fail@plt+0xfc>
   128fc:	b	11d08 <__assert_fail@plt+0x5d4>
   12900:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12904:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12908:	orr	r0, r0, r1
   1290c:	cmp	r0, #0
   12910:	beq	1295c <__assert_fail@plt+0x1228>
   12914:	b	12918 <__assert_fail@plt+0x11e4>
   12918:	movw	r0, #21388	; 0x538c
   1291c:	movt	r0, #3
   12920:	ldr	r0, [r0]
   12924:	movw	r1, #0
   12928:	cmp	r0, r1
   1292c:	beq	1295c <__assert_fail@plt+0x1228>
   12930:	movw	r0, #13939	; 0x3673
   12934:	movt	r0, #2
   12938:	bl	11590 <gettext@plt>
   1293c:	movw	lr, #0
   12940:	str	r0, [sp, #248]	; 0xf8
   12944:	mov	r0, lr
   12948:	mov	r1, lr
   1294c:	ldr	r2, [sp, #248]	; 0xf8
   12950:	bl	1150c <error@plt>
   12954:	movw	r0, #1
   12958:	bl	11830 <__assert_fail@plt+0xfc>
   1295c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12960:	cmp	r0, #0
   12964:	bne	12980 <__assert_fail@plt+0x124c>
   12968:	mov	r0, #3
   1296c:	str	r0, [fp, #-40]	; 0xffffffd8
   12970:	mov	r0, #0
   12974:	str	r0, [fp, #-60]	; 0xffffffc4
   12978:	mov	r0, #1000	; 0x3e8
   1297c:	str	r0, [fp, #-64]	; 0xffffffc0
   12980:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12984:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12988:	orr	r0, r0, r1
   1298c:	cmp	r0, #0
   12990:	bne	129e8 <__assert_fail@plt+0x12b4>
   12994:	b	12998 <__assert_fail@plt+0x1264>
   12998:	movw	r0, #13555	; 0x34f3
   1299c:	movt	r0, #2
   129a0:	bl	11590 <gettext@plt>
   129a4:	movw	lr, #16339	; 0x3fd3
   129a8:	movt	lr, #2
   129ac:	str	r0, [sp, #244]	; 0xf4
   129b0:	mov	r0, lr
   129b4:	bl	1a040 <__assert_fail@plt+0x890c>
   129b8:	movw	lr, #0
   129bc:	str	r0, [sp, #240]	; 0xf0
   129c0:	mov	r0, lr
   129c4:	mov	r1, lr
   129c8:	movw	r2, #13993	; 0x36a9
   129cc:	movt	r2, #2
   129d0:	ldr	r3, [sp, #244]	; 0xf4
   129d4:	ldr	lr, [sp, #240]	; 0xf0
   129d8:	str	lr, [sp]
   129dc:	bl	1150c <error@plt>
   129e0:	movw	r0, #1
   129e4:	bl	11830 <__assert_fail@plt+0xfc>
   129e8:	movw	r0, #20820	; 0x5154
   129ec:	movt	r0, #3
   129f0:	ldr	r0, [r0]
   129f4:	cmp	r0, #0
   129f8:	bge	12a0c <__assert_fail@plt+0x12d8>
   129fc:	movw	r0, #20820	; 0x5154
   12a00:	movt	r0, #3
   12a04:	movw	r1, #10
   12a08:	str	r1, [r0]
   12a0c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12a10:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12a14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12a18:	bl	1332c <__assert_fail@plt+0x1bf8>
   12a1c:	movw	r0, #21336	; 0x5358
   12a20:	movt	r0, #3
   12a24:	ldr	r0, [r0]
   12a28:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12a2c:	cmp	r0, r1
   12a30:	bge	12a60 <__assert_fail@plt+0x132c>
   12a34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12a38:	movw	r1, #21336	; 0x5358
   12a3c:	movt	r1, #3
   12a40:	ldr	r2, [r1]
   12a44:	add	r3, r2, #1
   12a48:	str	r3, [r1]
   12a4c:	add	r0, r0, r2, lsl #2
   12a50:	ldr	r0, [r0]
   12a54:	movw	r1, #21360	; 0x5370
   12a58:	movt	r1, #3
   12a5c:	str	r0, [r1]
   12a60:	movw	r0, #21336	; 0x5358
   12a64:	movt	r0, #3
   12a68:	ldr	r0, [r0]
   12a6c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12a70:	cmp	r0, r1
   12a74:	bge	12aa4 <__assert_fail@plt+0x1370>
   12a78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12a7c:	movw	r1, #21336	; 0x5358
   12a80:	movt	r1, #3
   12a84:	ldr	r2, [r1]
   12a88:	add	r3, r2, #1
   12a8c:	str	r3, [r1]
   12a90:	add	r0, r0, r2, lsl #2
   12a94:	ldr	r0, [r0]
   12a98:	movw	r1, #21364	; 0x5374
   12a9c:	movt	r1, #3
   12aa0:	str	r0, [r1]
   12aa4:	movw	r0, #21336	; 0x5358
   12aa8:	movt	r0, #3
   12aac:	ldr	r0, [r0]
   12ab0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12ab4:	cmp	r0, r1
   12ab8:	bge	12b0c <__assert_fail@plt+0x13d8>
   12abc:	movw	r0, #14000	; 0x36b0
   12ac0:	movt	r0, #2
   12ac4:	bl	11590 <gettext@plt>
   12ac8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   12acc:	movw	r1, #21336	; 0x5358
   12ad0:	movt	r1, #3
   12ad4:	ldr	r1, [r1]
   12ad8:	add	r1, lr, r1, lsl #2
   12adc:	ldr	r1, [r1]
   12ae0:	str	r0, [sp, #236]	; 0xec
   12ae4:	mov	r0, r1
   12ae8:	bl	1a040 <__assert_fail@plt+0x890c>
   12aec:	movw	r1, #0
   12af0:	str	r0, [sp, #232]	; 0xe8
   12af4:	mov	r0, r1
   12af8:	ldr	r2, [sp, #236]	; 0xec
   12afc:	ldr	r3, [sp, #232]	; 0xe8
   12b00:	bl	1150c <error@plt>
   12b04:	movw	r0, #1
   12b08:	bl	11830 <__assert_fail@plt+0xfc>
   12b0c:	movw	r0, #21380	; 0x5384
   12b10:	movt	r0, #3
   12b14:	ldr	r0, [r0]
   12b18:	movw	r1, #0
   12b1c:	cmp	r0, r1
   12b20:	beq	12b74 <__assert_fail@plt+0x1440>
   12b24:	movw	r0, #21380	; 0x5384
   12b28:	movt	r0, #3
   12b2c:	ldr	r0, [r0]
   12b30:	bl	1159c <strlen@plt>
   12b34:	movw	lr, #21368	; 0x5378
   12b38:	movt	lr, #3
   12b3c:	ldr	lr, [lr]
   12b40:	cmp	r0, lr
   12b44:	bls	12b74 <__assert_fail@plt+0x1440>
   12b48:	movw	r0, #14017	; 0x36c1
   12b4c:	movt	r0, #2
   12b50:	bl	11590 <gettext@plt>
   12b54:	movw	lr, #0
   12b58:	str	r0, [sp, #228]	; 0xe4
   12b5c:	mov	r0, lr
   12b60:	mov	r1, lr
   12b64:	ldr	r2, [sp, #228]	; 0xe4
   12b68:	bl	1150c <error@plt>
   12b6c:	movw	r0, #1
   12b70:	bl	11830 <__assert_fail@plt+0xfc>
   12b74:	movw	r0, #21360	; 0x5370
   12b78:	movt	r0, #3
   12b7c:	ldr	r0, [r0]
   12b80:	movw	r1, #16237	; 0x3f6d
   12b84:	movt	r1, #2
   12b88:	bl	113bc <strcmp@plt>
   12b8c:	cmp	r0, #0
   12b90:	beq	12c0c <__assert_fail@plt+0x14d8>
   12b94:	movw	r0, #21360	; 0x5370
   12b98:	movt	r0, #3
   12b9c:	ldr	r1, [r0]
   12ba0:	movw	r0, #0
   12ba4:	str	r0, [sp, #224]	; 0xe0
   12ba8:	ldr	r2, [sp, #224]	; 0xe0
   12bac:	ldr	r3, [sp, #224]	; 0xe0
   12bb0:	bl	1754c <__assert_fail@plt+0x5e18>
   12bb4:	cmp	r0, #0
   12bb8:	bge	12c0c <__assert_fail@plt+0x14d8>
   12bbc:	bl	115f0 <__errno_location@plt>
   12bc0:	ldr	r1, [r0]
   12bc4:	movw	r0, #14081	; 0x3701
   12bc8:	movt	r0, #2
   12bcc:	str	r1, [sp, #220]	; 0xdc
   12bd0:	bl	11590 <gettext@plt>
   12bd4:	movw	r1, #21360	; 0x5370
   12bd8:	movt	r1, #3
   12bdc:	ldr	r1, [r1]
   12be0:	movw	lr, #4
   12be4:	str	r0, [sp, #216]	; 0xd8
   12be8:	mov	r0, lr
   12bec:	bl	19ca8 <__assert_fail@plt+0x8574>
   12bf0:	movw	r1, #1
   12bf4:	str	r0, [sp, #212]	; 0xd4
   12bf8:	mov	r0, r1
   12bfc:	ldr	r1, [sp, #220]	; 0xdc
   12c00:	ldr	r2, [sp, #216]	; 0xd8
   12c04:	ldr	r3, [sp, #212]	; 0xd4
   12c08:	bl	1150c <error@plt>
   12c0c:	movw	r0, #0
   12c10:	str	r0, [sp, #208]	; 0xd0
   12c14:	ldr	r1, [sp, #208]	; 0xd0
   12c18:	bl	1ded4 <__assert_fail@plt+0xc7a0>
   12c1c:	movw	r0, #0
   12c20:	movw	r1, #21400	; 0x5398
   12c24:	movt	r1, #3
   12c28:	bl	22cfc <__assert_fail@plt+0x115c8>
   12c2c:	cmp	r0, #0
   12c30:	beq	12c7c <__assert_fail@plt+0x1548>
   12c34:	bl	115f0 <__errno_location@plt>
   12c38:	ldr	r1, [r0]
   12c3c:	movw	r0, #21360	; 0x5370
   12c40:	movt	r0, #3
   12c44:	ldr	r2, [r0]
   12c48:	movw	r0, #0
   12c4c:	movw	lr, #3
   12c50:	str	r1, [sp, #204]	; 0xcc
   12c54:	mov	r1, lr
   12c58:	bl	19dfc <__assert_fail@plt+0x86c8>
   12c5c:	movw	r1, #1
   12c60:	str	r0, [sp, #200]	; 0xc8
   12c64:	mov	r0, r1
   12c68:	ldr	r1, [sp, #204]	; 0xcc
   12c6c:	movw	r2, #15774	; 0x3d9e
   12c70:	movt	r2, #2
   12c74:	ldr	r3, [sp, #200]	; 0xc8
   12c78:	bl	1150c <error@plt>
   12c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c80:	cmp	r0, #0
   12c84:	movw	r0, #0
   12c88:	movne	r0, #1
   12c8c:	mvn	r1, #0
   12c90:	eor	r0, r0, r1
   12c94:	eor	r0, r0, r1
   12c98:	and	r0, r0, #1
   12c9c:	strb	r0, [fp, #-111]	; 0xffffff91
   12ca0:	ldrb	r0, [fp, #-111]	; 0xffffff91
   12ca4:	tst	r0, #1
   12ca8:	bne	12d20 <__assert_fail@plt+0x15ec>
   12cac:	movw	r0, #21400	; 0x5398
   12cb0:	movt	r0, #3
   12cb4:	add	r1, r0, #16
   12cb8:	mov	r2, sp
   12cbc:	movw	r3, #88	; 0x58
   12cc0:	str	r0, [sp, #196]	; 0xc4
   12cc4:	str	r3, [sp, #192]	; 0xc0
   12cc8:	str	r1, [sp, #188]	; 0xbc
   12ccc:	str	r2, [sp, #184]	; 0xb8
   12cd0:	ldr	r0, [sp, #184]	; 0xb8
   12cd4:	ldr	r1, [sp, #188]	; 0xbc
   12cd8:	ldr	r2, [sp, #192]	; 0xc0
   12cdc:	vld1.32	{d16}, [r1]!
   12ce0:	vst1.32	{d16}, [r0]!
   12ce4:	subs	r2, r2, #8
   12ce8:	str	r1, [sp, #188]	; 0xbc
   12cec:	str	r2, [sp, #192]	; 0xc0
   12cf0:	str	r0, [sp, #184]	; 0xb8
   12cf4:	bne	12cd0 <__assert_fail@plt+0x159c>
   12cf8:	ldr	r0, [sp, #196]	; 0xc4
   12cfc:	ldr	r0, [r0]
   12d00:	ldr	r1, [sp, #196]	; 0xc4
   12d04:	ldr	r1, [r1, #4]
   12d08:	ldr	r2, [sp, #196]	; 0xc4
   12d0c:	ldr	r2, [r2, #8]
   12d10:	ldr	r3, [sp, #196]	; 0xc4
   12d14:	ldr	r3, [r3, #12]
   12d18:	bl	135e4 <__assert_fail@plt+0x1eb0>
   12d1c:	str	r0, [fp, #-44]	; 0xffffffd4
   12d20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12d24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12d28:	add	r1, r1, #1
   12d2c:	bl	1afbc <__assert_fail@plt+0x9888>
   12d30:	str	r0, [fp, #-116]	; 0xffffff8c
   12d34:	mvn	r0, #0
   12d38:	str	r0, [fp, #-120]	; 0xffffff88
   12d3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d40:	cmp	r0, #5
   12d44:	beq	12d54 <__assert_fail@plt+0x1620>
   12d48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d4c:	cmp	r0, #6
   12d50:	bne	12efc <__assert_fail@plt+0x17c8>
   12d54:	ldr	r2, [fp, #-116]	; 0xffffff8c
   12d58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12d5c:	movw	r1, #21400	; 0x5398
   12d60:	movt	r1, #3
   12d64:	mov	r0, #0
   12d68:	bl	13784 <__assert_fail@plt+0x2050>
   12d6c:	str	r1, [fp, #-76]	; 0xffffffb4
   12d70:	str	r0, [fp, #-80]	; 0xffffffb0
   12d74:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12d78:	cmn	r0, #1
   12d7c:	bgt	12dd8 <__assert_fail@plt+0x16a4>
   12d80:	b	12d84 <__assert_fail@plt+0x1650>
   12d84:	bl	115f0 <__errno_location@plt>
   12d88:	ldr	r1, [r0]
   12d8c:	movw	r0, #14108	; 0x371c
   12d90:	movt	r0, #2
   12d94:	str	r1, [sp, #180]	; 0xb4
   12d98:	bl	11590 <gettext@plt>
   12d9c:	movw	r1, #21360	; 0x5370
   12da0:	movt	r1, #3
   12da4:	ldr	r2, [r1]
   12da8:	movw	r1, #0
   12dac:	str	r0, [sp, #176]	; 0xb0
   12db0:	mov	r0, r1
   12db4:	movw	r1, #3
   12db8:	bl	19dfc <__assert_fail@plt+0x86c8>
   12dbc:	movw	r1, #1
   12dc0:	str	r0, [sp, #172]	; 0xac
   12dc4:	mov	r0, r1
   12dc8:	ldr	r1, [sp, #180]	; 0xb4
   12dcc:	ldr	r2, [sp, #176]	; 0xb0
   12dd0:	ldr	r3, [sp, #172]	; 0xac
   12dd4:	bl	1150c <error@plt>
   12dd8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12ddc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12de0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12de4:	subs	r0, r0, r2
   12de8:	sbcs	r1, r1, r2, asr #31
   12dec:	str	r0, [sp, #168]	; 0xa8
   12df0:	str	r1, [sp, #164]	; 0xa4
   12df4:	bge	12e10 <__assert_fail@plt+0x16dc>
   12df8:	b	12dfc <__assert_fail@plt+0x16c8>
   12dfc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12e00:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12e04:	str	r0, [sp, #160]	; 0xa0
   12e08:	str	r1, [sp, #156]	; 0x9c
   12e0c:	b	12e24 <__assert_fail@plt+0x16f0>
   12e10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e14:	asr	r1, r0, #31
   12e18:	str	r0, [sp, #160]	; 0xa0
   12e1c:	str	r1, [sp, #156]	; 0x9c
   12e20:	b	12e24 <__assert_fail@plt+0x16f0>
   12e24:	ldr	r0, [sp, #156]	; 0x9c
   12e28:	ldr	r1, [sp, #160]	; 0xa0
   12e2c:	str	r1, [fp, #-120]	; 0xffffff88
   12e30:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12e34:	cmn	r1, #1
   12e38:	str	r0, [sp, #152]	; 0x98
   12e3c:	bgt	12e9c <__assert_fail@plt+0x1768>
   12e40:	b	12e44 <__assert_fail@plt+0x1710>
   12e44:	sub	r2, fp, #141	; 0x8d
   12e48:	movw	r0, #13585	; 0x3511
   12e4c:	movt	r0, #2
   12e50:	str	r2, [sp, #148]	; 0x94
   12e54:	bl	11590 <gettext@plt>
   12e58:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12e5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12e60:	str	r0, [sp, #144]	; 0x90
   12e64:	mov	r0, r2
   12e68:	ldr	r2, [sp, #148]	; 0x94
   12e6c:	bl	178a4 <__assert_fail@plt+0x6170>
   12e70:	bl	1a040 <__assert_fail@plt+0x890c>
   12e74:	movw	r1, #1
   12e78:	str	r0, [sp, #140]	; 0x8c
   12e7c:	mov	r0, r1
   12e80:	movw	r1, #75	; 0x4b
   12e84:	movw	r2, #13993	; 0x36a9
   12e88:	movt	r2, #2
   12e8c:	ldr	r3, [sp, #144]	; 0x90
   12e90:	ldr	lr, [sp, #140]	; 0x8c
   12e94:	str	lr, [sp]
   12e98:	bl	1150c <error@plt>
   12e9c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12ea0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12ea4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12ea8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12eac:	subs	r0, r2, r0
   12eb0:	sbcs	r1, r3, r1
   12eb4:	str	r0, [sp, #136]	; 0x88
   12eb8:	str	r1, [sp, #132]	; 0x84
   12ebc:	bcs	12ed8 <__assert_fail@plt+0x17a4>
   12ec0:	b	12ec4 <__assert_fail@plt+0x1790>
   12ec4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12ec8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12ecc:	str	r0, [sp, #128]	; 0x80
   12ed0:	str	r1, [sp, #124]	; 0x7c
   12ed4:	b	12eec <__assert_fail@plt+0x17b8>
   12ed8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12edc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12ee0:	str	r0, [sp, #128]	; 0x80
   12ee4:	str	r1, [sp, #124]	; 0x7c
   12ee8:	b	12eec <__assert_fail@plt+0x17b8>
   12eec:	ldr	r0, [sp, #124]	; 0x7c
   12ef0:	ldr	r1, [sp, #128]	; 0x80
   12ef4:	str	r1, [fp, #-80]	; 0xffffffb0
   12ef8:	str	r0, [fp, #-76]	; 0xffffffb4
   12efc:	movw	r0, #21388	; 0x538c
   12f00:	movt	r0, #3
   12f04:	ldr	r0, [r0]
   12f08:	movw	r1, #0
   12f0c:	cmp	r0, r1
   12f10:	beq	12f7c <__assert_fail@plt+0x1848>
   12f14:	movw	r0, #21504	; 0x5400
   12f18:	movt	r0, #3
   12f1c:	bl	11680 <sigemptyset@plt>
   12f20:	movw	lr, #13
   12f24:	str	r0, [sp, #120]	; 0x78
   12f28:	mov	r0, lr
   12f2c:	movw	r1, #0
   12f30:	sub	r2, fp, #284	; 0x11c
   12f34:	bl	114ac <sigaction@plt>
   12f38:	ldr	r1, [fp, #-284]	; 0xfffffee4
   12f3c:	movw	r2, #1
   12f40:	cmp	r1, r2
   12f44:	str	r0, [sp, #116]	; 0x74
   12f48:	beq	12f60 <__assert_fail@plt+0x182c>
   12f4c:	movw	r0, #21504	; 0x5400
   12f50:	movt	r0, #3
   12f54:	movw	r1, #13
   12f58:	bl	1153c <sigaddset@plt>
   12f5c:	str	r0, [sp, #112]	; 0x70
   12f60:	movw	r0, #0
   12f64:	movw	r1, #21504	; 0x5400
   12f68:	movt	r1, #3
   12f6c:	movw	r2, #21632	; 0x5480
   12f70:	movt	r2, #3
   12f74:	bl	113f8 <sigprocmask@plt>
   12f78:	str	r0, [sp, #108]	; 0x6c
   12f7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f80:	sub	r0, r0, #1
   12f84:	cmp	r0, #6
   12f88:	str	r0, [sp, #104]	; 0x68
   12f8c:	bhi	13138 <__assert_fail@plt+0x1a04>
   12f90:	add	r0, pc, #8
   12f94:	ldr	r1, [sp, #104]	; 0x68
   12f98:	ldr	r0, [r0, r1, lsl #2]
   12f9c:	mov	pc, r0
   12fa0:	ldrdeq	r2, [r1], -r4
   12fa4:	andeq	r3, r1, r4
   12fa8:			; <UNDEFINED> instruction: 0x00012fbc
   12fac:			; <UNDEFINED> instruction: 0x00012fbc
   12fb0:	andeq	r3, r1, ip, lsl r0
   12fb4:	andeq	r3, r1, r0, asr #1
   12fb8:	andeq	r3, r1, r4, lsl #2
   12fbc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12fc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12fc4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   12fc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12fcc:	bl	13ad4 <__assert_fail@plt+0x23a0>
   12fd0:	b	1313c <__assert_fail@plt+0x1a08>
   12fd4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12fd8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12fdc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   12fe0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12fe4:	mov	ip, sp
   12fe8:	mov	lr, #0
   12fec:	str	lr, [ip, #12]
   12ff0:	str	lr, [ip, #8]
   12ff4:	mvn	lr, #0
   12ff8:	str	lr, [ip]
   12ffc:	bl	13cac <__assert_fail@plt+0x2578>
   13000:	b	1313c <__assert_fail@plt+0x1a08>
   13004:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13008:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1300c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   13010:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13014:	bl	14084 <__assert_fail@plt+0x2950>
   13018:	b	1313c <__assert_fail@plt+0x1a08>
   1301c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13020:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13024:	orr	r0, r0, r1
   13028:	cmp	r0, #0
   1302c:	bne	1307c <__assert_fail@plt+0x1948>
   13030:	b	13034 <__assert_fail@plt+0x1900>
   13034:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13038:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1303c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13040:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13044:	str	r2, [sp, #100]	; 0x64
   13048:	str	r3, [sp, #96]	; 0x60
   1304c:	bl	22b0c <__assert_fail@plt+0x113d8>
   13050:	ldr	r2, [fp, #-116]	; 0xffffff8c
   13054:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13058:	ldr	lr, [fp, #-120]	; 0xffffff88
   1305c:	mov	ip, sp
   13060:	ldr	r4, [sp, #96]	; 0x60
   13064:	str	r4, [ip, #12]
   13068:	ldr	r5, [sp, #100]	; 0x64
   1306c:	str	r5, [ip, #8]
   13070:	str	lr, [ip]
   13074:	bl	13cac <__assert_fail@plt+0x2578>
   13078:	b	130bc <__assert_fail@plt+0x1988>
   1307c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13080:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13084:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13088:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1308c:	ldr	ip, [fp, #-116]	; 0xffffff8c
   13090:	ldr	lr, [fp, #-44]	; 0xffffffd4
   13094:	ldr	r4, [fp, #-120]	; 0xffffff88
   13098:	ldr	r5, [fp, #-80]	; 0xffffffb0
   1309c:	ldr	r6, [fp, #-76]	; 0xffffffb4
   130a0:	mov	r7, sp
   130a4:	str	r6, [r7, #20]
   130a8:	str	r5, [r7, #16]
   130ac:	str	r4, [r7, #8]
   130b0:	str	lr, [r7, #4]
   130b4:	str	ip, [r7]
   130b8:	bl	1459c <__assert_fail@plt+0x2e68>
   130bc:	b	1313c <__assert_fail@plt+0x1a08>
   130c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   130c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   130c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   130cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   130d0:	ldr	ip, [fp, #-116]	; 0xffffff8c
   130d4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   130d8:	ldr	r4, [fp, #-120]	; 0xffffff88
   130dc:	ldr	r5, [fp, #-80]	; 0xffffffb0
   130e0:	ldr	r6, [fp, #-76]	; 0xffffffb4
   130e4:	mov	r7, sp
   130e8:	str	r6, [r7, #20]
   130ec:	str	r5, [r7, #16]
   130f0:	str	r4, [r7, #8]
   130f4:	str	lr, [r7, #4]
   130f8:	str	ip, [r7]
   130fc:	bl	14a48 <__assert_fail@plt+0x3314>
   13100:	b	1313c <__assert_fail@plt+0x1a08>
   13104:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13108:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1310c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13110:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13114:	ldr	ip, [fp, #-116]	; 0xffffff8c
   13118:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1311c:	mov	r4, sp
   13120:	sub	r5, fp, #288	; 0x120
   13124:	str	r5, [r4, #8]
   13128:	str	lr, [r4, #4]
   1312c:	str	ip, [r4]
   13130:	bl	15384 <__assert_fail@plt+0x3c50>
   13134:	b	1313c <__assert_fail@plt+0x1a08>
   13138:	bl	11710 <abort@plt>
   1313c:	movw	r0, #0
   13140:	bl	1171c <close@plt>
   13144:	cmp	r0, #0
   13148:	beq	13194 <__assert_fail@plt+0x1a60>
   1314c:	bl	115f0 <__errno_location@plt>
   13150:	ldr	r1, [r0]
   13154:	movw	r0, #21360	; 0x5370
   13158:	movt	r0, #3
   1315c:	ldr	r2, [r0]
   13160:	movw	r0, #0
   13164:	movw	lr, #3
   13168:	str	r1, [sp, #92]	; 0x5c
   1316c:	mov	r1, lr
   13170:	bl	19dfc <__assert_fail@plt+0x86c8>
   13174:	movw	r1, #1
   13178:	str	r0, [sp, #88]	; 0x58
   1317c:	mov	r0, r1
   13180:	ldr	r1, [sp, #92]	; 0x5c
   13184:	movw	r2, #15774	; 0x3d9e
   13188:	movt	r2, #2
   1318c:	ldr	r3, [sp, #88]	; 0x58
   13190:	bl	1150c <error@plt>
   13194:	movw	r0, #20828	; 0x515c
   13198:	movt	r0, #3
   1319c:	ldr	r1, [r0]
   131a0:	movw	r0, #21760	; 0x5500
   131a4:	movt	r0, #3
   131a8:	ldr	r2, [r0]
   131ac:	movw	r0, #21764	; 0x5504
   131b0:	movt	r0, #3
   131b4:	ldr	r3, [r0]
   131b8:	movw	r0, #0
   131bc:	bl	15b78 <__assert_fail@plt+0x4444>
   131c0:	movw	r0, #0
   131c4:	sub	sp, fp, #24
   131c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   131cc:	sub	sp, sp, #4
   131d0:	str	r0, [sp]
   131d4:	ldr	r0, [sp]
   131d8:	add	sp, sp, #4
   131dc:	bx	lr
   131e0:	sub	sp, sp, #4
   131e4:	strb	r0, [sp, #3]
   131e8:	ldrb	r0, [sp, #3]
   131ec:	add	sp, sp, #4
   131f0:	bx	lr
   131f4:	push	{fp, lr}
   131f8:	mov	fp, sp
   131fc:	sub	sp, sp, #64	; 0x40
   13200:	str	r0, [fp, #-4]
   13204:	str	r1, [fp, #-8]
   13208:	str	r2, [fp, #-12]
   1320c:	ldr	r0, [fp, #-12]
   13210:	add	r0, r0, #1
   13214:	movw	r1, #13585	; 0x3511
   13218:	movt	r1, #2
   1321c:	str	r0, [fp, #-16]
   13220:	mov	r0, r1
   13224:	bl	11590 <gettext@plt>
   13228:	mov	r1, sp
   1322c:	mov	r2, #0
   13230:	str	r2, [r1, #16]
   13234:	str	r0, [r1, #12]
   13238:	movw	r0, #12817	; 0x3211
   1323c:	movt	r0, #2
   13240:	str	r0, [r1, #8]
   13244:	mvn	r0, #0
   13248:	str	r0, [r1, #4]
   1324c:	str	r0, [r1]
   13250:	mov	r0, #1
   13254:	ldr	r1, [fp, #-16]
   13258:	str	r0, [fp, #-20]	; 0xffffffec
   1325c:	mov	r0, r1
   13260:	ldr	lr, [fp, #-20]	; 0xffffffec
   13264:	str	r2, [fp, #-24]	; 0xffffffe8
   13268:	mov	r2, lr
   1326c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13270:	bl	1e110 <__assert_fail@plt+0xc9dc>
   13274:	ldr	r2, [fp, #-8]
   13278:	str	r1, [r2, #4]
   1327c:	str	r0, [r2]
   13280:	ldr	r0, [fp, #-12]
   13284:	movw	r1, #21352	; 0x5368
   13288:	movt	r1, #3
   1328c:	ldr	r1, [r1]
   13290:	cmp	r0, r1
   13294:	beq	13324 <__assert_fail@plt+0x1bf0>
   13298:	ldr	r0, [fp, #-12]
   1329c:	mov	r1, #0
   132a0:	strb	r1, [r0]
   132a4:	movw	r0, #21352	; 0x5368
   132a8:	movt	r0, #3
   132ac:	ldr	r0, [r0]
   132b0:	ldr	r2, [fp, #-8]
   132b4:	ldr	r3, [r2]
   132b8:	ldr	r2, [r2, #4]
   132bc:	movw	ip, #14935	; 0x3a57
   132c0:	movt	ip, #2
   132c4:	str	r0, [fp, #-28]	; 0xffffffe4
   132c8:	mov	r0, ip
   132cc:	str	r1, [sp, #32]
   132d0:	str	r2, [sp, #28]
   132d4:	str	r3, [sp, #24]
   132d8:	bl	11590 <gettext@plt>
   132dc:	mov	r1, sp
   132e0:	ldr	r2, [sp, #32]
   132e4:	str	r2, [r1, #16]
   132e8:	str	r0, [r1, #12]
   132ec:	movw	r0, #12817	; 0x3211
   132f0:	movt	r0, #2
   132f4:	str	r0, [r1, #8]
   132f8:	ldr	r0, [sp, #28]
   132fc:	str	r0, [r1, #4]
   13300:	ldr	r0, [sp, #24]
   13304:	str	r0, [r1]
   13308:	mov	r2, #1
   1330c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13310:	ldr	r3, [sp, #32]
   13314:	bl	1e110 <__assert_fail@plt+0xc9dc>
   13318:	ldr	r2, [fp, #-4]
   1331c:	str	r1, [r2, #4]
   13320:	str	r0, [r2]
   13324:	mov	sp, fp
   13328:	pop	{fp, pc}
   1332c:	push	{fp, lr}
   13330:	mov	fp, sp
   13334:	sub	sp, sp, #104	; 0x68
   13338:	str	r0, [fp, #-8]
   1333c:	str	r1, [fp, #-4]
   13340:	str	r2, [fp, #-12]
   13344:	mov	r0, #0
   13348:	str	r0, [fp, #-20]	; 0xffffffec
   1334c:	str	r0, [fp, #-24]	; 0xffffffe8
   13350:	movw	r0, #21380	; 0x5384
   13354:	movt	r0, #3
   13358:	ldr	r0, [r0]
   1335c:	movw	r1, #0
   13360:	cmp	r0, r1
   13364:	beq	13378 <__assert_fail@plt+0x1c44>
   13368:	movw	r0, #20832	; 0x5160
   1336c:	movt	r0, #3
   13370:	movw	r1, #0
   13374:	strb	r1, [r0]
   13378:	ldr	r0, [fp, #-12]
   1337c:	cmp	r0, #5
   13380:	beq	1339c <__assert_fail@plt+0x1c68>
   13384:	ldr	r0, [fp, #-12]
   13388:	cmp	r0, #6
   1338c:	beq	1339c <__assert_fail@plt+0x1c68>
   13390:	ldr	r0, [fp, #-12]
   13394:	cmp	r0, #7
   13398:	bne	134ec <__assert_fail@plt+0x1db8>
   1339c:	ldr	r0, [fp, #-8]
   133a0:	ldr	r1, [fp, #-4]
   133a4:	subs	r0, r0, #1
   133a8:	sbc	r1, r1, #0
   133ac:	str	r0, [fp, #-32]	; 0xffffffe0
   133b0:	str	r1, [fp, #-28]	; 0xffffffe4
   133b4:	movw	r0, #21380	; 0x5384
   133b8:	movt	r0, #3
   133bc:	ldr	r0, [r0]
   133c0:	movw	r1, #0
   133c4:	cmp	r0, r1
   133c8:	beq	13484 <__assert_fail@plt+0x1d50>
   133cc:	movw	r0, #21380	; 0x5384
   133d0:	movt	r0, #3
   133d4:	ldr	r0, [r0]
   133d8:	movw	r1, #0
   133dc:	movw	r2, #10
   133e0:	sub	r3, fp, #40	; 0x28
   133e4:	movw	ip, #12817	; 0x3211
   133e8:	movt	ip, #2
   133ec:	str	ip, [sp]
   133f0:	bl	1e198 <__assert_fail@plt+0xca64>
   133f4:	str	r0, [fp, #-44]	; 0xffffffd4
   133f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133fc:	cmp	r0, #0
   13400:	bne	13480 <__assert_fail@plt+0x1d4c>
   13404:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13408:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1340c:	ldr	r2, [fp, #-8]
   13410:	ldr	r3, [fp, #-4]
   13414:	mvn	r3, r3
   13418:	mvn	r2, r2
   1341c:	subs	r0, r2, r0
   13420:	sbcs	r1, r3, r1
   13424:	str	r0, [sp, #52]	; 0x34
   13428:	str	r1, [sp, #48]	; 0x30
   1342c:	bcc	13480 <__assert_fail@plt+0x1d4c>
   13430:	b	13434 <__assert_fail@plt+0x1d00>
   13434:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13438:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1343c:	ldr	r2, [fp, #-8]
   13440:	ldr	r3, [fp, #-4]
   13444:	subs	r0, r0, r2
   13448:	sbcs	r1, r1, r3
   1344c:	str	r0, [sp, #44]	; 0x2c
   13450:	str	r1, [sp, #40]	; 0x28
   13454:	bcs	1347c <__assert_fail@plt+0x1d48>
   13458:	b	1345c <__assert_fail@plt+0x1d28>
   1345c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13460:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13464:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1346c:	adds	r0, r2, r0
   13470:	adc	r1, r3, r1
   13474:	str	r0, [fp, #-32]	; 0xffffffe0
   13478:	str	r1, [fp, #-28]	; 0xffffffe4
   1347c:	b	13480 <__assert_fail@plt+0x1d4c>
   13480:	b	13484 <__assert_fail@plt+0x1d50>
   13484:	movw	r0, #20824	; 0x5158
   13488:	movt	r0, #3
   1348c:	ldr	r0, [r0]
   13490:	bl	1159c <strlen@plt>
   13494:	str	r0, [fp, #-48]	; 0xffffffd0
   13498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1349c:	ldr	r1, [fp, #-20]	; 0xffffffec
   134a0:	adds	r0, r0, #1
   134a4:	adc	r1, r1, #0
   134a8:	str	r0, [fp, #-24]	; 0xffffffe8
   134ac:	str	r1, [fp, #-20]	; 0xffffffec
   134b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   134b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   134b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134bc:	mov	r3, #0
   134c0:	bl	22b0c <__assert_fail@plt+0x113d8>
   134c4:	str	r1, [fp, #-28]	; 0xffffffe4
   134c8:	str	r0, [fp, #-32]	; 0xffffffe0
   134cc:	orr	r0, r0, r1
   134d0:	cmp	r0, #0
   134d4:	bne	13498 <__assert_fail@plt+0x1d64>
   134d8:	b	134dc <__assert_fail@plt+0x1da8>
   134dc:	movw	r0, #20832	; 0x5160
   134e0:	movt	r0, #3
   134e4:	movw	r1, #0
   134e8:	strb	r1, [r0]
   134ec:	movw	r0, #21368	; 0x5378
   134f0:	movt	r0, #3
   134f4:	ldr	r0, [r0]
   134f8:	cmp	r0, #0
   134fc:	beq	1357c <__assert_fail@plt+0x1e48>
   13500:	movw	r0, #21368	; 0x5378
   13504:	movt	r0, #3
   13508:	ldr	r0, [r0]
   1350c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13510:	ldr	r2, [fp, #-20]	; 0xffffffec
   13514:	subs	r0, r0, r1
   13518:	rscs	r1, r2, #0
   1351c:	str	r0, [sp, #36]	; 0x24
   13520:	str	r1, [sp, #32]
   13524:	bcs	13568 <__assert_fail@plt+0x1e34>
   13528:	b	1352c <__assert_fail@plt+0x1df8>
   1352c:	movw	r0, #14983	; 0x3a87
   13530:	movt	r0, #2
   13534:	bl	11590 <gettext@plt>
   13538:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1353c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13540:	mov	r2, sp
   13544:	str	r1, [r2, #4]
   13548:	str	lr, [r2]
   1354c:	mov	r1, #1
   13550:	mov	r2, #0
   13554:	str	r0, [sp, #28]
   13558:	mov	r0, r1
   1355c:	mov	r1, r2
   13560:	ldr	r2, [sp, #28]
   13564:	bl	1150c <error@plt>
   13568:	movw	r0, #20832	; 0x5160
   1356c:	movt	r0, #3
   13570:	movw	r1, #0
   13574:	strb	r1, [r0]
   13578:	b	135dc <__assert_fail@plt+0x1ea8>
   1357c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13580:	ldr	r1, [fp, #-20]	; 0xffffffec
   13584:	rsbs	r0, r0, #1
   13588:	rscs	r1, r1, #0
   1358c:	str	r0, [sp, #24]
   13590:	str	r1, [sp, #20]
   13594:	bcc	135b0 <__assert_fail@plt+0x1e7c>
   13598:	b	1359c <__assert_fail@plt+0x1e68>
   1359c:	mov	r0, #0
   135a0:	mov	r1, #2
   135a4:	str	r1, [sp, #16]
   135a8:	str	r0, [sp, #12]
   135ac:	b	135c4 <__assert_fail@plt+0x1e90>
   135b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   135b8:	str	r0, [sp, #16]
   135bc:	str	r1, [sp, #12]
   135c0:	b	135c4 <__assert_fail@plt+0x1e90>
   135c4:	ldr	r0, [sp, #12]
   135c8:	ldr	r1, [sp, #16]
   135cc:	movw	r2, #21368	; 0x5378
   135d0:	movt	r2, #3
   135d4:	str	r1, [r2]
   135d8:	str	r0, [sp, #8]
   135dc:	mov	sp, fp
   135e0:	pop	{fp, pc}
   135e4:	sub	sp, sp, #16
   135e8:	sub	sp, sp, #32
   135ec:	str	r3, [sp, #44]	; 0x2c
   135f0:	str	r2, [sp, #40]	; 0x28
   135f4:	str	r1, [sp, #36]	; 0x24
   135f8:	str	r0, [sp, #32]
   135fc:	add	r0, sp, #32
   13600:	ldr	r1, [r0, #56]	; 0x38
   13604:	movw	r2, #0
   13608:	cmp	r2, r1
   1360c:	str	r0, [sp, #28]
   13610:	bge	13634 <__assert_fail@plt+0x1f00>
   13614:	ldr	r0, [sp, #28]
   13618:	ldr	r1, [r0, #56]	; 0x38
   1361c:	cmp	r1, #536870912	; 0x20000000
   13620:	bhi	13634 <__assert_fail@plt+0x1f00>
   13624:	ldr	r0, [sp, #28]
   13628:	ldr	r1, [r0, #56]	; 0x38
   1362c:	str	r1, [sp, #24]
   13630:	b	13640 <__assert_fail@plt+0x1f0c>
   13634:	movw	r0, #512	; 0x200
   13638:	str	r0, [sp, #24]
   1363c:	b	13640 <__assert_fail@plt+0x1f0c>
   13640:	ldr	r0, [sp, #24]
   13644:	ldr	r1, [pc, #304]	; 1377c <__assert_fail@plt+0x2048>
   13648:	cmp	r1, r0
   1364c:	ble	1365c <__assert_fail@plt+0x1f28>
   13650:	ldr	r0, [pc, #292]	; 1377c <__assert_fail@plt+0x2048>
   13654:	str	r0, [sp, #20]
   13658:	b	136a4 <__assert_fail@plt+0x1f70>
   1365c:	ldr	r0, [sp, #28]
   13660:	ldr	r1, [r0, #56]	; 0x38
   13664:	movw	r2, #0
   13668:	cmp	r2, r1
   1366c:	bge	13690 <__assert_fail@plt+0x1f5c>
   13670:	ldr	r0, [sp, #28]
   13674:	ldr	r1, [r0, #56]	; 0x38
   13678:	cmp	r1, #536870912	; 0x20000000
   1367c:	bhi	13690 <__assert_fail@plt+0x1f5c>
   13680:	ldr	r0, [sp, #28]
   13684:	ldr	r1, [r0, #56]	; 0x38
   13688:	str	r1, [sp, #16]
   1368c:	b	1369c <__assert_fail@plt+0x1f68>
   13690:	movw	r0, #512	; 0x200
   13694:	str	r0, [sp, #16]
   13698:	b	1369c <__assert_fail@plt+0x1f68>
   1369c:	ldr	r0, [sp, #16]
   136a0:	str	r0, [sp, #20]
   136a4:	ldr	r0, [sp, #20]
   136a8:	ldr	r1, [pc, #208]	; 13780 <__assert_fail@plt+0x204c>
   136ac:	cmp	r1, r0
   136b0:	bcs	136c0 <__assert_fail@plt+0x1f8c>
   136b4:	ldr	r0, [pc, #196]	; 13780 <__assert_fail@plt+0x204c>
   136b8:	str	r0, [sp, #12]
   136bc:	b	1376c <__assert_fail@plt+0x2038>
   136c0:	ldr	r0, [sp, #28]
   136c4:	ldr	r1, [r0, #56]	; 0x38
   136c8:	movw	r2, #0
   136cc:	cmp	r2, r1
   136d0:	bge	136f4 <__assert_fail@plt+0x1fc0>
   136d4:	ldr	r0, [sp, #28]
   136d8:	ldr	r1, [r0, #56]	; 0x38
   136dc:	cmp	r1, #536870912	; 0x20000000
   136e0:	bhi	136f4 <__assert_fail@plt+0x1fc0>
   136e4:	ldr	r0, [sp, #28]
   136e8:	ldr	r1, [r0, #56]	; 0x38
   136ec:	str	r1, [sp, #8]
   136f0:	b	13700 <__assert_fail@plt+0x1fcc>
   136f4:	movw	r0, #512	; 0x200
   136f8:	str	r0, [sp, #8]
   136fc:	b	13700 <__assert_fail@plt+0x1fcc>
   13700:	ldr	r0, [sp, #8]
   13704:	ldr	r1, [pc, #112]	; 1377c <__assert_fail@plt+0x2048>
   13708:	cmp	r1, r0
   1370c:	ble	1371c <__assert_fail@plt+0x1fe8>
   13710:	ldr	r0, [pc, #100]	; 1377c <__assert_fail@plt+0x2048>
   13714:	str	r0, [sp, #4]
   13718:	b	13764 <__assert_fail@plt+0x2030>
   1371c:	ldr	r0, [sp, #28]
   13720:	ldr	r1, [r0, #56]	; 0x38
   13724:	movw	r2, #0
   13728:	cmp	r2, r1
   1372c:	bge	13750 <__assert_fail@plt+0x201c>
   13730:	ldr	r0, [sp, #28]
   13734:	ldr	r1, [r0, #56]	; 0x38
   13738:	cmp	r1, #536870912	; 0x20000000
   1373c:	bhi	13750 <__assert_fail@plt+0x201c>
   13740:	ldr	r0, [sp, #28]
   13744:	ldr	r1, [r0, #56]	; 0x38
   13748:	str	r1, [sp]
   1374c:	b	1375c <__assert_fail@plt+0x2028>
   13750:	movw	r0, #512	; 0x200
   13754:	str	r0, [sp]
   13758:	b	1375c <__assert_fail@plt+0x2028>
   1375c:	ldr	r0, [sp]
   13760:	str	r0, [sp, #4]
   13764:	ldr	r0, [sp, #4]
   13768:	str	r0, [sp, #12]
   1376c:	ldr	r0, [sp, #12]
   13770:	add	sp, sp, #32
   13774:	add	sp, sp, #16
   13778:	bx	lr
   1377c:	andeq	r0, r2, r0
   13780:	andmi	r0, r0, r0
   13784:	push	{fp, lr}
   13788:	mov	fp, sp
   1378c:	sub	sp, sp, #88	; 0x58
   13790:	str	r0, [fp, #-12]
   13794:	str	r1, [fp, #-16]
   13798:	str	r2, [fp, #-20]	; 0xffffffec
   1379c:	str	r3, [fp, #-24]	; 0xffffffe8
   137a0:	ldr	r0, [fp, #-12]
   137a4:	mov	r1, sp
   137a8:	mov	r2, #1
   137ac:	str	r2, [r1]
   137b0:	mov	r1, #0
   137b4:	mov	r2, r1
   137b8:	mov	r3, r1
   137bc:	bl	114b8 <lseek64@plt>
   137c0:	str	r1, [fp, #-28]	; 0xffffffe4
   137c4:	str	r0, [fp, #-32]	; 0xffffffe0
   137c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137cc:	cmn	r0, #1
   137d0:	bgt	13804 <__assert_fail@plt+0x20d0>
   137d4:	b	137d8 <__assert_fail@plt+0x20a4>
   137d8:	bl	115f0 <__errno_location@plt>
   137dc:	ldr	r0, [r0]
   137e0:	cmp	r0, #29
   137e4:	bne	137f4 <__assert_fail@plt+0x20c0>
   137e8:	bl	115f0 <__errno_location@plt>
   137ec:	movw	lr, #0
   137f0:	str	lr, [r0]
   137f4:	mvn	r0, #0
   137f8:	str	r0, [fp, #-4]
   137fc:	str	r0, [fp, #-8]
   13800:	b	13ac4 <__assert_fail@plt+0x2390>
   13804:	mov	r0, #0
   13808:	str	r0, [fp, #-36]	; 0xffffffdc
   1380c:	str	r0, [fp, #-40]	; 0xffffffd8
   13810:	ldr	r0, [fp, #-12]
   13814:	ldr	r1, [fp, #-20]	; 0xffffffec
   13818:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1381c:	add	r1, r1, r2
   13820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13824:	sub	r2, r3, r2
   13828:	bl	1a178 <__assert_fail@plt+0x8a44>
   1382c:	str	r0, [sp, #44]	; 0x2c
   13830:	ldr	r0, [sp, #44]	; 0x2c
   13834:	cmp	r0, #0
   13838:	bne	13850 <__assert_fail@plt+0x211c>
   1383c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13840:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13844:	str	r1, [fp, #-4]
   13848:	str	r0, [fp, #-8]
   1384c:	b	13ac4 <__assert_fail@plt+0x2390>
   13850:	ldr	r0, [sp, #44]	; 0x2c
   13854:	cmn	r0, #1
   13858:	bne	1386c <__assert_fail@plt+0x2138>
   1385c:	mvn	r0, #0
   13860:	str	r0, [fp, #-4]
   13864:	str	r0, [fp, #-8]
   13868:	b	13ac4 <__assert_fail@plt+0x2390>
   1386c:	ldr	r0, [sp, #44]	; 0x2c
   13870:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13874:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13878:	adds	r0, r1, r0
   1387c:	adc	r1, r2, #0
   13880:	str	r0, [fp, #-40]	; 0xffffffd8
   13884:	str	r1, [fp, #-36]	; 0xffffffdc
   13888:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1388c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13890:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13894:	subs	r0, r0, r2
   13898:	sbcs	r1, r1, #0
   1389c:	str	r0, [sp, #28]
   138a0:	str	r1, [sp, #24]
   138a4:	blt	13810 <__assert_fail@plt+0x20dc>
   138a8:	b	138ac <__assert_fail@plt+0x2178>
   138ac:	ldr	r0, [fp, #-16]
   138b0:	ldr	r1, [r0, #48]	; 0x30
   138b4:	ldr	r0, [r0, #52]	; 0x34
   138b8:	orr	r0, r1, r0
   138bc:	cmp	r0, #0
   138c0:	bne	138e4 <__assert_fail@plt+0x21b0>
   138c4:	b	138c8 <__assert_fail@plt+0x2194>
   138c8:	bl	115f0 <__errno_location@plt>
   138cc:	mov	lr, #75	; 0x4b
   138d0:	str	lr, [r0]
   138d4:	mvn	r0, #0
   138d8:	str	r0, [fp, #-4]
   138dc:	str	r0, [fp, #-8]
   138e0:	b	13ac4 <__assert_fail@plt+0x2390>
   138e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   138e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   138ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   138f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   138f4:	adds	r0, r2, r0
   138f8:	adc	r1, r3, r1
   138fc:	str	r0, [fp, #-32]	; 0xffffffe0
   13900:	str	r1, [fp, #-28]	; 0xffffffe4
   13904:	ldr	r0, [fp, #-16]
   13908:	bl	15f48 <__assert_fail@plt+0x4814>
   1390c:	tst	r0, #1
   13910:	beq	13958 <__assert_fail@plt+0x2224>
   13914:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13918:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1391c:	ldr	r2, [fp, #-16]
   13920:	ldr	r3, [r2, #48]	; 0x30
   13924:	ldr	r2, [r2, #52]	; 0x34
   13928:	subs	r0, r3, r0
   1392c:	sbcs	r1, r2, r1
   13930:	str	r0, [sp, #20]
   13934:	str	r1, [sp, #16]
   13938:	blt	13958 <__assert_fail@plt+0x2224>
   1393c:	b	13940 <__assert_fail@plt+0x220c>
   13940:	ldr	r0, [fp, #-16]
   13944:	ldr	r1, [r0, #48]	; 0x30
   13948:	ldr	r0, [r0, #52]	; 0x34
   1394c:	str	r0, [sp, #36]	; 0x24
   13950:	str	r1, [sp, #32]
   13954:	b	13a44 <__assert_fail@plt+0x2310>
   13958:	ldr	r0, [fp, #-12]
   1395c:	mov	r1, sp
   13960:	mov	r2, #2
   13964:	str	r2, [r1]
   13968:	mov	r1, #0
   1396c:	mov	r2, r1
   13970:	mov	r3, r1
   13974:	bl	114b8 <lseek64@plt>
   13978:	str	r1, [sp, #36]	; 0x24
   1397c:	str	r0, [sp, #32]
   13980:	ldr	r0, [sp, #36]	; 0x24
   13984:	cmn	r0, #1
   13988:	bgt	139a0 <__assert_fail@plt+0x226c>
   1398c:	b	13990 <__assert_fail@plt+0x225c>
   13990:	mvn	r0, #0
   13994:	str	r0, [fp, #-4]
   13998:	str	r0, [fp, #-8]
   1399c:	b	13ac4 <__assert_fail@plt+0x2390>
   139a0:	ldr	r0, [sp, #32]
   139a4:	ldr	r1, [sp, #36]	; 0x24
   139a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   139ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   139b0:	eor	r1, r1, r3
   139b4:	eor	r0, r0, r2
   139b8:	orr	r0, r0, r1
   139bc:	cmp	r0, #0
   139c0:	beq	13a40 <__assert_fail@plt+0x230c>
   139c4:	b	139c8 <__assert_fail@plt+0x2294>
   139c8:	ldr	r0, [fp, #-12]
   139cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   139d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   139d4:	mov	r1, sp
   139d8:	mov	ip, #0
   139dc:	str	ip, [r1]
   139e0:	bl	114b8 <lseek64@plt>
   139e4:	cmn	r1, #1
   139e8:	str	r0, [sp, #12]
   139ec:	bgt	13a04 <__assert_fail@plt+0x22d0>
   139f0:	b	139f4 <__assert_fail@plt+0x22c0>
   139f4:	mvn	r0, #0
   139f8:	str	r0, [fp, #-4]
   139fc:	str	r0, [fp, #-8]
   13a00:	b	13ac4 <__assert_fail@plt+0x2390>
   13a04:	ldr	r0, [sp, #32]
   13a08:	ldr	r1, [sp, #36]	; 0x24
   13a0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13a10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a14:	subs	r0, r0, r2
   13a18:	sbcs	r1, r1, r3
   13a1c:	str	r0, [sp, #8]
   13a20:	str	r1, [sp, #4]
   13a24:	bge	13a3c <__assert_fail@plt+0x2308>
   13a28:	b	13a2c <__assert_fail@plt+0x22f8>
   13a2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a34:	str	r1, [sp, #36]	; 0x24
   13a38:	str	r0, [sp, #32]
   13a3c:	b	13a40 <__assert_fail@plt+0x230c>
   13a40:	b	13a44 <__assert_fail@plt+0x2310>
   13a44:	ldr	r0, [sp, #32]
   13a48:	ldr	r1, [sp, #36]	; 0x24
   13a4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13a50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a54:	subs	r0, r0, r2
   13a58:	sbc	r1, r1, r3
   13a5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13a60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13a64:	adds	r0, r2, r0
   13a68:	adc	r1, r3, r1
   13a6c:	str	r0, [fp, #-40]	; 0xffffffd8
   13a70:	str	r1, [fp, #-36]	; 0xffffffdc
   13a74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13a7c:	mvn	r2, #-2147483648	; 0x80000000
   13a80:	eor	r1, r1, r2
   13a84:	mvn	r0, r0
   13a88:	orr	r0, r0, r1
   13a8c:	cmp	r0, #0
   13a90:	bne	13ab4 <__assert_fail@plt+0x2380>
   13a94:	b	13a98 <__assert_fail@plt+0x2364>
   13a98:	bl	115f0 <__errno_location@plt>
   13a9c:	mov	lr, #75	; 0x4b
   13aa0:	str	lr, [r0]
   13aa4:	mvn	r0, #0
   13aa8:	str	r0, [fp, #-4]
   13aac:	str	r0, [fp, #-8]
   13ab0:	b	13ac4 <__assert_fail@plt+0x2390>
   13ab4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ab8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13abc:	str	r1, [fp, #-4]
   13ac0:	str	r0, [fp, #-8]
   13ac4:	ldr	r0, [fp, #-8]
   13ac8:	ldr	r1, [fp, #-4]
   13acc:	mov	sp, fp
   13ad0:	pop	{fp, pc}
   13ad4:	push	{fp, lr}
   13ad8:	mov	fp, sp
   13adc:	sub	sp, sp, #80	; 0x50
   13ae0:	str	r0, [fp, #-8]
   13ae4:	str	r1, [fp, #-4]
   13ae8:	str	r2, [fp, #-12]
   13aec:	str	r3, [fp, #-16]
   13af0:	mov	r0, #1
   13af4:	strb	r0, [fp, #-33]	; 0xffffffdf
   13af8:	mov	r0, #0
   13afc:	str	r0, [sp, #36]	; 0x24
   13b00:	str	r0, [sp, #32]
   13b04:	ldr	r1, [fp, #-12]
   13b08:	ldr	r2, [fp, #-16]
   13b0c:	movw	r0, #0
   13b10:	bl	1a178 <__assert_fail@plt+0x8a44>
   13b14:	str	r0, [fp, #-20]	; 0xffffffec
   13b18:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b1c:	cmn	r0, #1
   13b20:	bne	13b6c <__assert_fail@plt+0x2438>
   13b24:	bl	115f0 <__errno_location@plt>
   13b28:	ldr	r1, [r0]
   13b2c:	movw	r0, #21360	; 0x5370
   13b30:	movt	r0, #3
   13b34:	ldr	r2, [r0]
   13b38:	movw	r0, #0
   13b3c:	movw	lr, #3
   13b40:	str	r1, [sp, #24]
   13b44:	mov	r1, lr
   13b48:	bl	19dfc <__assert_fail@plt+0x86c8>
   13b4c:	movw	r1, #1
   13b50:	str	r0, [sp, #20]
   13b54:	mov	r0, r1
   13b58:	ldr	r1, [sp, #24]
   13b5c:	movw	r2, #15774	; 0x3d9e
   13b60:	movt	r2, #2
   13b64:	ldr	r3, [sp, #20]
   13b68:	bl	1150c <error@plt>
   13b6c:	ldr	r0, [fp, #-12]
   13b70:	str	r0, [fp, #-28]	; 0xffffffe4
   13b74:	str	r0, [fp, #-24]	; 0xffffffe8
   13b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b80:	add	r0, r0, r1
   13b84:	str	r0, [fp, #-32]	; 0xffffffe0
   13b88:	movw	r0, #20820	; 0x5154
   13b8c:	movt	r0, #3
   13b90:	ldr	r0, [r0]
   13b94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13b98:	strb	r0, [r1]
   13b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ba0:	movw	r1, #20820	; 0x5154
   13ba4:	movt	r1, #3
   13ba8:	ldr	r1, [r1]
   13bac:	bl	11488 <rawmemchr@plt>
   13bb0:	str	r0, [fp, #-24]	; 0xffffffe8
   13bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13bbc:	cmp	r0, r1
   13bc0:	bne	13c08 <__assert_fail@plt+0x24d4>
   13bc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13bcc:	cmp	r0, r1
   13bd0:	beq	13c04 <__assert_fail@plt+0x24d0>
   13bd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13bdc:	sub	r0, r0, r1
   13be0:	str	r0, [sp, #28]
   13be4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   13be8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13bec:	ldr	r2, [sp, #28]
   13bf0:	and	r0, r0, #1
   13bf4:	bl	15fc8 <__assert_fail@plt+0x4894>
   13bf8:	movw	r1, #0
   13bfc:	strb	r1, [fp, #-33]	; 0xffffffdf
   13c00:	str	r0, [sp, #16]
   13c04:	b	13c94 <__assert_fail@plt+0x2560>
   13c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c0c:	add	r0, r0, #1
   13c10:	str	r0, [fp, #-24]	; 0xffffffe8
   13c14:	ldr	r0, [sp, #32]
   13c18:	ldr	r1, [sp, #36]	; 0x24
   13c1c:	adds	r0, r0, #1
   13c20:	adc	r1, r1, #0
   13c24:	str	r0, [sp, #32]
   13c28:	str	r1, [sp, #36]	; 0x24
   13c2c:	ldr	r2, [fp, #-8]
   13c30:	ldr	r3, [fp, #-4]
   13c34:	subs	r0, r0, r2
   13c38:	sbcs	r1, r1, r3
   13c3c:	str	r0, [sp, #12]
   13c40:	str	r1, [sp, #8]
   13c44:	bcc	13c90 <__assert_fail@plt+0x255c>
   13c48:	b	13c4c <__assert_fail@plt+0x2518>
   13c4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13c50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c54:	sub	r2, r1, r0
   13c58:	ldrb	r1, [fp, #-33]	; 0xffffffdf
   13c5c:	and	r1, r1, #1
   13c60:	str	r0, [sp, #4]
   13c64:	mov	r0, r1
   13c68:	ldr	r1, [sp, #4]
   13c6c:	bl	15fc8 <__assert_fail@plt+0x4894>
   13c70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c74:	str	r1, [fp, #-28]	; 0xffffffe4
   13c78:	mov	r1, #1
   13c7c:	strb	r1, [fp, #-33]	; 0xffffffdf
   13c80:	mov	r1, #0
   13c84:	str	r1, [sp, #36]	; 0x24
   13c88:	str	r1, [sp, #32]
   13c8c:	str	r0, [sp]
   13c90:	b	13b9c <__assert_fail@plt+0x2468>
   13c94:	b	13c98 <__assert_fail@plt+0x2564>
   13c98:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c9c:	cmp	r0, #0
   13ca0:	bne	13b04 <__assert_fail@plt+0x23d0>
   13ca4:	mov	sp, fp
   13ca8:	pop	{fp, pc}
   13cac:	push	{r4, sl, fp, lr}
   13cb0:	add	fp, sp, #8
   13cb4:	sub	sp, sp, #112	; 0x70
   13cb8:	ldr	ip, [fp, #20]
   13cbc:	ldr	lr, [fp, #16]
   13cc0:	ldr	r4, [fp, #8]
   13cc4:	str	r0, [fp, #-16]
   13cc8:	str	r1, [fp, #-12]
   13ccc:	str	r2, [fp, #-20]	; 0xffffffec
   13cd0:	str	r3, [fp, #-24]	; 0xffffffe8
   13cd4:	str	ip, [fp, #-28]	; 0xffffffe4
   13cd8:	str	lr, [fp, #-32]	; 0xffffffe0
   13cdc:	mov	r0, #1
   13ce0:	strb	r0, [fp, #-37]	; 0xffffffdb
   13ce4:	strb	r0, [fp, #-38]	; 0xffffffda
   13ce8:	ldr	r0, [fp, #-16]
   13cec:	ldr	r1, [fp, #-12]
   13cf0:	str	r1, [fp, #-44]	; 0xffffffd4
   13cf4:	str	r0, [fp, #-48]	; 0xffffffd0
   13cf8:	mov	r0, #0
   13cfc:	str	r0, [fp, #-52]	; 0xffffffcc
   13d00:	str	r0, [fp, #-56]	; 0xffffffc8
   13d04:	str	r4, [sp, #52]	; 0x34
   13d08:	ldr	r0, [fp, #8]
   13d0c:	cmn	r0, #1
   13d10:	beq	13d44 <__assert_fail@plt+0x2610>
   13d14:	ldr	r0, [fp, #8]
   13d18:	str	r0, [fp, #-36]	; 0xffffffdc
   13d1c:	mvn	r0, #0
   13d20:	str	r0, [fp, #8]
   13d24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13d28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d2c:	cmp	r0, r1
   13d30:	movw	r0, #0
   13d34:	movcc	r0, #1
   13d38:	and	r0, r0, #1
   13d3c:	strb	r0, [fp, #-57]	; 0xffffffc7
   13d40:	b	13e14 <__assert_fail@plt+0x26e0>
   13d44:	ldrb	r0, [fp, #-38]	; 0xffffffda
   13d48:	tst	r0, #1
   13d4c:	bne	13d94 <__assert_fail@plt+0x2660>
   13d50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13d54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13d58:	mov	r0, sp
   13d5c:	mov	r1, #1
   13d60:	str	r1, [r0]
   13d64:	mov	r0, #0
   13d68:	bl	114b8 <lseek64@plt>
   13d6c:	and	r0, r0, r1
   13d70:	cmn	r0, #1
   13d74:	beq	13d94 <__assert_fail@plt+0x2660>
   13d78:	b	13d7c <__assert_fail@plt+0x2648>
   13d7c:	ldr	r0, [fp, #-16]
   13d80:	ldr	r1, [fp, #-12]
   13d84:	str	r1, [fp, #-44]	; 0xffffffd4
   13d88:	str	r0, [fp, #-48]	; 0xffffffd0
   13d8c:	movw	r0, #1
   13d90:	strb	r0, [fp, #-37]	; 0xffffffdb
   13d94:	ldr	r1, [fp, #-20]	; 0xffffffec
   13d98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13d9c:	movw	r0, #0
   13da0:	bl	1a178 <__assert_fail@plt+0x8a44>
   13da4:	str	r0, [fp, #-36]	; 0xffffffdc
   13da8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13dac:	cmn	r0, #1
   13db0:	bne	13dfc <__assert_fail@plt+0x26c8>
   13db4:	bl	115f0 <__errno_location@plt>
   13db8:	ldr	r1, [r0]
   13dbc:	movw	r0, #21360	; 0x5370
   13dc0:	movt	r0, #3
   13dc4:	ldr	r2, [r0]
   13dc8:	movw	r0, #0
   13dcc:	movw	lr, #3
   13dd0:	str	r1, [sp, #48]	; 0x30
   13dd4:	mov	r1, lr
   13dd8:	bl	19dfc <__assert_fail@plt+0x86c8>
   13ddc:	movw	r1, #1
   13de0:	str	r0, [sp, #44]	; 0x2c
   13de4:	mov	r0, r1
   13de8:	ldr	r1, [sp, #48]	; 0x30
   13dec:	movw	r2, #15774	; 0x3d9e
   13df0:	movt	r2, #2
   13df4:	ldr	r3, [sp, #44]	; 0x2c
   13df8:	bl	1150c <error@plt>
   13dfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e00:	cmp	r0, #0
   13e04:	movw	r0, #0
   13e08:	moveq	r0, #1
   13e0c:	and	r0, r0, #1
   13e10:	strb	r0, [fp, #-57]	; 0xffffffc7
   13e14:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e18:	str	r0, [sp, #56]	; 0x38
   13e1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13e20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13e28:	subs	r0, r2, r0
   13e2c:	rscs	r1, r1, #0
   13e30:	str	r0, [sp, #40]	; 0x28
   13e34:	str	r1, [sp, #36]	; 0x24
   13e38:	bcc	13f4c <__assert_fail@plt+0x2818>
   13e3c:	b	13e40 <__assert_fail@plt+0x270c>
   13e40:	ldrb	r0, [fp, #-38]	; 0xffffffda
   13e44:	tst	r0, #1
   13e48:	bne	13e58 <__assert_fail@plt+0x2724>
   13e4c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13e50:	tst	r0, #1
   13e54:	beq	13e74 <__assert_fail@plt+0x2740>
   13e58:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13e5c:	ldr	r1, [sp, #56]	; 0x38
   13e60:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13e64:	and	r0, r0, #1
   13e68:	bl	15fc8 <__assert_fail@plt+0x4894>
   13e6c:	and	r0, r0, #1
   13e70:	strb	r0, [fp, #-38]	; 0xffffffda
   13e74:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13e78:	and	r0, r0, #1
   13e7c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13e80:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13e84:	adds	r0, r1, r0
   13e88:	adc	r1, r2, #0
   13e8c:	str	r0, [fp, #-56]	; 0xffffffc8
   13e90:	str	r1, [fp, #-52]	; 0xffffffcc
   13e94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e9c:	orr	r0, r0, r1
   13ea0:	mov	r1, #1
   13ea4:	cmp	r0, #0
   13ea8:	str	r1, [sp, #32]
   13eac:	beq	13ee0 <__assert_fail@plt+0x27ac>
   13eb0:	b	13eb4 <__assert_fail@plt+0x2780>
   13eb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13eb8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13ebc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13ec0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ec4:	subs	r0, r0, r2
   13ec8:	sbcs	r1, r1, r3
   13ecc:	mov	r2, #0
   13ed0:	movwcc	r2, #1
   13ed4:	str	r0, [sp, #28]
   13ed8:	str	r1, [sp, #24]
   13edc:	str	r2, [sp, #32]
   13ee0:	ldr	r0, [sp, #32]
   13ee4:	and	r0, r0, #1
   13ee8:	strb	r0, [fp, #-37]	; 0xffffffdb
   13eec:	ldrb	r0, [fp, #-38]	; 0xffffffda
   13ef0:	tst	r0, #1
   13ef4:	bne	13f18 <__assert_fail@plt+0x27e4>
   13ef8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13efc:	tst	r0, #1
   13f00:	bne	13f18 <__assert_fail@plt+0x27e4>
   13f04:	movw	r0, #0
   13f08:	str	r0, [fp, #-36]	; 0xffffffdc
   13f0c:	movw	r0, #1
   13f10:	strb	r0, [fp, #-57]	; 0xffffffc7
   13f14:	b	13f4c <__assert_fail@plt+0x2818>
   13f18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f1c:	ldr	r1, [sp, #56]	; 0x38
   13f20:	add	r0, r1, r0
   13f24:	str	r0, [sp, #56]	; 0x38
   13f28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13f30:	sub	r0, r1, r0
   13f34:	str	r0, [fp, #-36]	; 0xffffffdc
   13f38:	ldr	r0, [fp, #-16]
   13f3c:	ldr	r1, [fp, #-12]
   13f40:	str	r1, [fp, #-44]	; 0xffffffd4
   13f44:	str	r0, [fp, #-48]	; 0xffffffd0
   13f48:	b	13e1c <__assert_fail@plt+0x26e8>
   13f4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f50:	cmp	r0, #0
   13f54:	beq	14008 <__assert_fail@plt+0x28d4>
   13f58:	ldrb	r0, [fp, #-38]	; 0xffffffda
   13f5c:	tst	r0, #1
   13f60:	bne	13f70 <__assert_fail@plt+0x283c>
   13f64:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13f68:	tst	r0, #1
   13f6c:	beq	13f8c <__assert_fail@plt+0x2858>
   13f70:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13f74:	ldr	r1, [sp, #56]	; 0x38
   13f78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13f7c:	and	r0, r0, #1
   13f80:	bl	15fc8 <__assert_fail@plt+0x4894>
   13f84:	and	r0, r0, #1
   13f88:	strb	r0, [fp, #-38]	; 0xffffffda
   13f8c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13f90:	and	r0, r0, #1
   13f94:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13f98:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13f9c:	adds	r0, r1, r0
   13fa0:	adc	r1, r2, #0
   13fa4:	str	r0, [fp, #-56]	; 0xffffffc8
   13fa8:	str	r1, [fp, #-52]	; 0xffffffcc
   13fac:	movw	r0, #0
   13fb0:	strb	r0, [fp, #-37]	; 0xffffffdb
   13fb4:	ldrb	r0, [fp, #-38]	; 0xffffffda
   13fb8:	tst	r0, #1
   13fbc:	bne	13fec <__assert_fail@plt+0x28b8>
   13fc0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13fc4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13fc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13fcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13fd0:	eor	r1, r1, r3
   13fd4:	eor	r0, r0, r2
   13fd8:	orr	r0, r0, r1
   13fdc:	cmp	r0, #0
   13fe0:	bne	13fec <__assert_fail@plt+0x28b8>
   13fe4:	b	13fe8 <__assert_fail@plt+0x28b4>
   13fe8:	b	14020 <__assert_fail@plt+0x28ec>
   13fec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13ff0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13ff4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13ff8:	subs	r0, r1, r0
   13ffc:	sbc	r1, r2, #0
   14000:	str	r0, [fp, #-48]	; 0xffffffd0
   14004:	str	r1, [fp, #-44]	; 0xffffffd4
   14008:	b	1400c <__assert_fail@plt+0x28d8>
   1400c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14010:	mvn	r1, #0
   14014:	eor	r0, r0, r1
   14018:	tst	r0, #1
   1401c:	bne	13d08 <__assert_fail@plt+0x25d4>
   14020:	b	14024 <__assert_fail@plt+0x28f0>
   14024:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14028:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1402c:	adds	r2, r0, #1
   14030:	adc	r3, r1, #0
   14034:	str	r2, [fp, #-56]	; 0xffffffc8
   14038:	str	r3, [fp, #-52]	; 0xffffffcc
   1403c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14040:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14044:	subs	r0, r0, r2
   14048:	sbcs	r1, r1, r3
   1404c:	str	r0, [sp, #20]
   14050:	str	r1, [sp, #16]
   14054:	bcs	1407c <__assert_fail@plt+0x2948>
   14058:	b	1405c <__assert_fail@plt+0x2928>
   1405c:	movw	r0, #1
   14060:	and	r0, r0, #1
   14064:	movw	r1, #0
   14068:	str	r1, [sp, #12]
   1406c:	ldr	r2, [sp, #12]
   14070:	bl	15fc8 <__assert_fail@plt+0x4894>
   14074:	str	r0, [sp, #8]
   14078:	b	14024 <__assert_fail@plt+0x28f0>
   1407c:	sub	sp, fp, #8
   14080:	pop	{r4, sl, fp, pc}
   14084:	push	{fp, lr}
   14088:	mov	fp, sp
   1408c:	sub	sp, sp, #120	; 0x78
   14090:	str	r0, [fp, #-8]
   14094:	str	r1, [fp, #-4]
   14098:	str	r2, [fp, #-12]
   1409c:	str	r3, [fp, #-16]
   140a0:	mov	r0, #0
   140a4:	str	r0, [fp, #-28]	; 0xffffffe4
   140a8:	str	r0, [fp, #-32]	; 0xffffffe0
   140ac:	movw	r0, #0
   140b0:	str	r0, [fp, #-36]	; 0xffffffdc
   140b4:	str	r0, [fp, #-40]	; 0xffffffd8
   140b8:	str	r0, [fp, #-44]	; 0xffffffd4
   140bc:	movw	r0, #0
   140c0:	strb	r0, [fp, #-45]	; 0xffffffd3
   140c4:	ldr	r1, [fp, #-12]
   140c8:	ldr	r2, [fp, #-16]
   140cc:	movw	r0, #0
   140d0:	bl	1a178 <__assert_fail@plt+0x8a44>
   140d4:	str	r0, [fp, #-20]	; 0xffffffec
   140d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   140dc:	cmn	r0, #1
   140e0:	bne	1412c <__assert_fail@plt+0x29f8>
   140e4:	bl	115f0 <__errno_location@plt>
   140e8:	ldr	r1, [r0]
   140ec:	movw	r0, #21360	; 0x5370
   140f0:	movt	r0, #3
   140f4:	ldr	r2, [r0]
   140f8:	movw	r0, #0
   140fc:	movw	lr, #3
   14100:	str	r1, [sp, #36]	; 0x24
   14104:	mov	r1, lr
   14108:	bl	19dfc <__assert_fail@plt+0x86c8>
   1410c:	movw	r1, #1
   14110:	str	r0, [sp, #32]
   14114:	mov	r0, r1
   14118:	ldr	r1, [sp, #36]	; 0x24
   1411c:	movw	r2, #15774	; 0x3d9e
   14120:	movt	r2, #2
   14124:	ldr	r3, [sp, #32]
   14128:	bl	1150c <error@plt>
   1412c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14130:	str	r0, [fp, #-52]	; 0xffffffcc
   14134:	ldr	r0, [fp, #-12]
   14138:	str	r0, [fp, #-56]	; 0xffffffc8
   1413c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14140:	cmp	r0, #0
   14144:	beq	14548 <__assert_fail@plt+0x2e14>
   14148:	mov	r0, #0
   1414c:	str	r0, [sp, #60]	; 0x3c
   14150:	str	r0, [sp, #56]	; 0x38
   14154:	ldr	r0, [fp, #-8]
   14158:	ldr	r1, [fp, #-4]
   1415c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14160:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14164:	subs	r0, r0, r2
   14168:	sbc	r1, r1, r3
   1416c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14170:	subs	r0, r0, r2
   14174:	sbc	r1, r1, #0
   14178:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1417c:	subs	r0, r2, r0
   14180:	rscs	r1, r1, #0
   14184:	str	r0, [sp, #28]
   14188:	str	r1, [sp, #24]
   1418c:	bcc	141e4 <__assert_fail@plt+0x2ab0>
   14190:	b	14194 <__assert_fail@plt+0x2a60>
   14194:	ldr	r0, [fp, #-8]
   14198:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1419c:	sub	r0, r0, r1
   141a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   141a4:	sub	r0, r0, r1
   141a8:	str	r0, [sp, #60]	; 0x3c
   141ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   141b0:	ldr	r1, [sp, #60]	; 0x3c
   141b4:	add	r0, r0, r1
   141b8:	mvn	r1, #0
   141bc:	add	r0, r0, r1
   141c0:	str	r0, [sp, #56]	; 0x38
   141c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   141c8:	movw	r1, #20820	; 0x5154
   141cc:	movt	r1, #3
   141d0:	ldr	r1, [r1]
   141d4:	ldr	r2, [sp, #60]	; 0x3c
   141d8:	bl	115cc <memrchr@plt>
   141dc:	str	r0, [sp, #52]	; 0x34
   141e0:	b	14200 <__assert_fail@plt+0x2acc>
   141e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   141e8:	movw	r1, #20820	; 0x5154
   141ec:	movt	r1, #3
   141f0:	ldr	r1, [r1]
   141f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   141f8:	bl	115cc <memrchr@plt>
   141fc:	str	r0, [sp, #52]	; 0x34
   14200:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14204:	cmp	r0, #0
   14208:	beq	142a4 <__assert_fail@plt+0x2b70>
   1420c:	ldr	r0, [sp, #52]	; 0x34
   14210:	movw	r1, #0
   14214:	cmp	r0, r1
   14218:	bne	14234 <__assert_fail@plt+0x2b00>
   1421c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14220:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14224:	orr	r0, r0, r1
   14228:	cmp	r0, #0
   1422c:	bne	142a4 <__assert_fail@plt+0x2b70>
   14230:	b	14234 <__assert_fail@plt+0x2b00>
   14234:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14238:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1423c:	orr	r0, r0, r1
   14240:	clz	r0, r0
   14244:	lsr	r0, r0, #5
   14248:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1424c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14250:	bl	15fc8 <__assert_fail@plt+0x4894>
   14254:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14258:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1425c:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14260:	adds	r1, r2, r1
   14264:	adc	r2, lr, #0
   14268:	str	r1, [fp, #-32]	; 0xffffffe0
   1426c:	str	r2, [fp, #-28]	; 0xffffffe4
   14270:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14274:	ldr	r2, [fp, #-16]
   14278:	cmp	r1, r2
   1427c:	str	r0, [sp, #20]
   14280:	bls	14294 <__assert_fail@plt+0x2b60>
   14284:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14288:	ldr	r1, [fp, #-16]
   1428c:	bl	1b13c <__assert_fail@plt+0x9a08>
   14290:	str	r0, [fp, #-40]	; 0xffffffd8
   14294:	movw	r0, #0
   14298:	str	r0, [fp, #-36]	; 0xffffffdc
   1429c:	ldr	r0, [fp, #-16]
   142a0:	str	r0, [fp, #-44]	; 0xffffffd4
   142a4:	ldr	r0, [sp, #52]	; 0x34
   142a8:	movw	r1, #0
   142ac:	cmp	r0, r1
   142b0:	beq	14354 <__assert_fail@plt+0x2c20>
   142b4:	mov	r0, #1
   142b8:	strb	r0, [fp, #-45]	; 0xffffffd3
   142bc:	ldr	r0, [sp, #52]	; 0x34
   142c0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   142c4:	sub	r0, r0, r1
   142c8:	add	r0, r0, #1
   142cc:	str	r0, [sp, #48]	; 0x30
   142d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142d8:	orr	r0, r0, r1
   142dc:	clz	r0, r0
   142e0:	lsr	r0, r0, #5
   142e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   142e8:	ldr	r2, [sp, #48]	; 0x30
   142ec:	bl	15fc8 <__assert_fail@plt+0x4894>
   142f0:	ldr	r1, [sp, #48]	; 0x30
   142f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   142f8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   142fc:	adds	r1, r2, r1
   14300:	adc	r2, lr, #0
   14304:	str	r1, [fp, #-32]	; 0xffffffe0
   14308:	str	r2, [fp, #-28]	; 0xffffffe4
   1430c:	ldr	r1, [sp, #48]	; 0x30
   14310:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14314:	sub	r1, r2, r1
   14318:	str	r1, [fp, #-52]	; 0xffffffcc
   1431c:	ldr	r1, [sp, #48]	; 0x30
   14320:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14324:	add	r1, r2, r1
   14328:	str	r1, [fp, #-56]	; 0xffffffc8
   1432c:	ldr	r1, [sp, #56]	; 0x38
   14330:	movw	r2, #0
   14334:	cmp	r1, r2
   14338:	str	r0, [sp, #16]
   1433c:	beq	14350 <__assert_fail@plt+0x2c1c>
   14340:	ldr	r0, [sp, #48]	; 0x30
   14344:	ldr	r1, [sp, #60]	; 0x3c
   14348:	sub	r0, r1, r0
   1434c:	str	r0, [sp, #60]	; 0x3c
   14350:	b	14354 <__assert_fail@plt+0x2c20>
   14354:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14358:	cmp	r0, #0
   1435c:	beq	1441c <__assert_fail@plt+0x2ce8>
   14360:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14364:	tst	r0, #1
   14368:	bne	1441c <__assert_fail@plt+0x2ce8>
   1436c:	ldr	r0, [sp, #56]	; 0x38
   14370:	movw	r1, #0
   14374:	cmp	r0, r1
   14378:	beq	14388 <__assert_fail@plt+0x2c54>
   1437c:	ldr	r0, [sp, #60]	; 0x3c
   14380:	str	r0, [sp, #12]
   14384:	b	14390 <__assert_fail@plt+0x2c5c>
   14388:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1438c:	str	r0, [sp, #12]
   14390:	ldr	r0, [sp, #12]
   14394:	str	r0, [sp, #44]	; 0x2c
   14398:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1439c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   143a0:	orr	r0, r0, r1
   143a4:	clz	r0, r0
   143a8:	lsr	r0, r0, #5
   143ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
   143b0:	ldr	r2, [sp, #44]	; 0x2c
   143b4:	bl	15fc8 <__assert_fail@plt+0x4894>
   143b8:	ldr	r1, [sp, #44]	; 0x2c
   143bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   143c0:	ldr	lr, [fp, #-28]	; 0xffffffe4
   143c4:	adds	r1, r2, r1
   143c8:	adc	r2, lr, #0
   143cc:	str	r1, [fp, #-32]	; 0xffffffe0
   143d0:	str	r2, [fp, #-28]	; 0xffffffe4
   143d4:	ldr	r1, [sp, #44]	; 0x2c
   143d8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   143dc:	sub	r1, r2, r1
   143e0:	str	r1, [fp, #-52]	; 0xffffffcc
   143e4:	ldr	r1, [sp, #44]	; 0x2c
   143e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   143ec:	add	r1, r2, r1
   143f0:	str	r1, [fp, #-56]	; 0xffffffc8
   143f4:	ldr	r1, [sp, #56]	; 0x38
   143f8:	movw	r2, #0
   143fc:	cmp	r1, r2
   14400:	str	r0, [sp, #8]
   14404:	beq	14418 <__assert_fail@plt+0x2ce4>
   14408:	ldr	r0, [sp, #44]	; 0x2c
   1440c:	ldr	r1, [sp, #60]	; 0x3c
   14410:	sub	r0, r1, r0
   14414:	str	r0, [sp, #60]	; 0x3c
   14418:	b	1441c <__assert_fail@plt+0x2ce8>
   1441c:	ldr	r0, [sp, #56]	; 0x38
   14420:	movw	r1, #0
   14424:	cmp	r0, r1
   14428:	beq	14438 <__assert_fail@plt+0x2d04>
   1442c:	ldr	r0, [sp, #60]	; 0x3c
   14430:	cmp	r0, #0
   14434:	bne	14454 <__assert_fail@plt+0x2d20>
   14438:	ldr	r0, [sp, #56]	; 0x38
   1443c:	movw	r1, #0
   14440:	cmp	r0, r1
   14444:	bne	14520 <__assert_fail@plt+0x2dec>
   14448:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1444c:	cmp	r0, #0
   14450:	beq	14520 <__assert_fail@plt+0x2dec>
   14454:	ldr	r0, [sp, #56]	; 0x38
   14458:	movw	r1, #0
   1445c:	cmp	r0, r1
   14460:	beq	14470 <__assert_fail@plt+0x2d3c>
   14464:	ldr	r0, [sp, #60]	; 0x3c
   14468:	str	r0, [sp, #4]
   1446c:	b	14478 <__assert_fail@plt+0x2d44>
   14470:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14474:	str	r0, [sp, #4]
   14478:	ldr	r0, [sp, #4]
   1447c:	str	r0, [sp, #40]	; 0x28
   14480:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14484:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14488:	sub	r0, r0, r1
   1448c:	ldr	r1, [sp, #40]	; 0x28
   14490:	cmp	r0, r1
   14494:	bcs	144d8 <__assert_fail@plt+0x2da4>
   14498:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1449c:	ldr	r1, [fp, #-16]
   144a0:	mvn	r2, #0
   144a4:	sub	r1, r2, r1
   144a8:	cmp	r0, r1
   144ac:	bhi	144c4 <__assert_fail@plt+0x2d90>
   144b0:	ldr	r0, [fp, #-16]
   144b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   144b8:	add	r0, r1, r0
   144bc:	str	r0, [fp, #-44]	; 0xffffffd4
   144c0:	b	144c8 <__assert_fail@plt+0x2d94>
   144c4:	bl	1de80 <__assert_fail@plt+0xc74c>
   144c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   144d0:	bl	1b13c <__assert_fail@plt+0x9a08>
   144d4:	str	r0, [fp, #-40]	; 0xffffffd8
   144d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   144e0:	add	r0, r0, r1
   144e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   144e8:	ldr	r2, [sp, #40]	; 0x28
   144ec:	bl	11428 <memcpy@plt>
   144f0:	ldr	r0, [sp, #40]	; 0x28
   144f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   144f8:	add	r0, r1, r0
   144fc:	str	r0, [fp, #-36]	; 0xffffffdc
   14500:	ldr	r0, [sp, #40]	; 0x28
   14504:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14508:	sub	r0, r1, r0
   1450c:	str	r0, [fp, #-52]	; 0xffffffcc
   14510:	ldr	r0, [sp, #40]	; 0x28
   14514:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14518:	add	r0, r1, r0
   1451c:	str	r0, [fp, #-56]	; 0xffffffc8
   14520:	ldr	r0, [sp, #56]	; 0x38
   14524:	movw	r1, #0
   14528:	cmp	r0, r1
   1452c:	beq	14544 <__assert_fail@plt+0x2e10>
   14530:	mov	r0, #0
   14534:	str	r0, [fp, #-28]	; 0xffffffe4
   14538:	str	r0, [fp, #-32]	; 0xffffffe0
   1453c:	movw	r0, #0
   14540:	strb	r0, [fp, #-45]	; 0xffffffd3
   14544:	b	1413c <__assert_fail@plt+0x2a08>
   14548:	b	1454c <__assert_fail@plt+0x2e18>
   1454c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14550:	cmp	r0, #0
   14554:	bne	140c4 <__assert_fail@plt+0x2990>
   14558:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1455c:	cmp	r0, #0
   14560:	beq	1458c <__assert_fail@plt+0x2e58>
   14564:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14568:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1456c:	orr	r0, r0, r1
   14570:	clz	r0, r0
   14574:	lsr	r0, r0, #5
   14578:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1457c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14580:	and	r0, r0, #1
   14584:	bl	15fc8 <__assert_fail@plt+0x4894>
   14588:	str	r0, [sp]
   1458c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14590:	bl	176a4 <__assert_fail@plt+0x5f70>
   14594:	mov	sp, fp
   14598:	pop	{fp, pc}
   1459c:	push	{r4, r5, r6, sl, fp, lr}
   145a0:	add	fp, sp, #16
   145a4:	sub	sp, sp, #176	; 0xb0
   145a8:	ldr	ip, [fp, #28]
   145ac:	ldr	lr, [fp, #24]
   145b0:	ldr	r4, [fp, #16]
   145b4:	ldr	r5, [fp, #12]
   145b8:	ldr	r6, [fp, #8]
   145bc:	str	r0, [fp, #-24]	; 0xffffffe8
   145c0:	str	r1, [fp, #-20]	; 0xffffffec
   145c4:	str	r3, [fp, #-28]	; 0xffffffe4
   145c8:	str	r2, [fp, #-32]	; 0xffffffe0
   145cc:	str	ip, [fp, #-36]	; 0xffffffdc
   145d0:	str	lr, [fp, #-40]	; 0xffffffd8
   145d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   145dc:	orr	r0, r0, r1
   145e0:	cmp	r0, #0
   145e4:	str	r5, [fp, #-64]	; 0xffffffc0
   145e8:	str	r4, [fp, #-68]	; 0xffffffbc
   145ec:	str	r6, [fp, #-72]	; 0xffffffb8
   145f0:	beq	14664 <__assert_fail@plt+0x2f30>
   145f4:	b	145f8 <__assert_fail@plt+0x2ec4>
   145f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14600:	orr	r0, r0, r1
   14604:	cmp	r0, #0
   14608:	beq	14664 <__assert_fail@plt+0x2f30>
   1460c:	b	14610 <__assert_fail@plt+0x2edc>
   14610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14614:	ldr	r1, [fp, #-20]	; 0xffffffec
   14618:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1461c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14620:	subs	r0, r2, r0
   14624:	sbcs	r1, r3, r1
   14628:	str	r0, [fp, #-76]	; 0xffffffb4
   1462c:	str	r1, [fp, #-80]	; 0xffffffb0
   14630:	bcc	14664 <__assert_fail@plt+0x2f30>
   14634:	b	14638 <__assert_fail@plt+0x2f04>
   14638:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1463c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14640:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14644:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14648:	subs	r0, r2, r0
   1464c:	sbcs	r1, r3, r1
   14650:	str	r0, [fp, #-84]	; 0xffffffac
   14654:	str	r1, [fp, #-88]	; 0xffffffa8
   14658:	bcc	14664 <__assert_fail@plt+0x2f30>
   1465c:	b	14660 <__assert_fail@plt+0x2f2c>
   14660:	b	14684 <__assert_fail@plt+0x2f50>
   14664:	movw	r0, #15465	; 0x3c69
   14668:	movt	r0, #2
   1466c:	movw	r1, #15035	; 0x3abb
   14670:	movt	r1, #2
   14674:	movw	r2, #996	; 0x3e4
   14678:	movw	r3, #15500	; 0x3c8c
   1467c:	movt	r3, #2
   14680:	bl	11734 <__assert_fail@plt>
   14684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14688:	ldr	r1, [fp, #-20]	; 0xffffffec
   1468c:	subs	r0, r0, #1
   14690:	sbc	r1, r1, #0
   14694:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14698:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1469c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   146a0:	ldr	lr, [fp, #-28]	; 0xffffffe4
   146a4:	str	r0, [fp, #-92]	; 0xffffffa4
   146a8:	mov	r0, r2
   146ac:	str	r1, [sp, #96]	; 0x60
   146b0:	mov	r1, r3
   146b4:	mov	r2, ip
   146b8:	mov	r3, lr
   146bc:	bl	22b0c <__assert_fail@plt+0x113d8>
   146c0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   146c4:	umull	r3, ip, r2, r0
   146c8:	mla	r1, r2, r1, ip
   146cc:	ldr	ip, [sp, #96]	; 0x60
   146d0:	mla	r0, ip, r0, r1
   146d4:	str	r3, [fp, #-48]	; 0xffffffd0
   146d8:	str	r0, [fp, #-44]	; 0xffffffd4
   146dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   146e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   146e8:	ldr	ip, [fp, #-28]	; 0xffffffe4
   146ec:	eor	r1, r1, ip
   146f0:	eor	r0, r0, r3
   146f4:	orr	r0, r0, r1
   146f8:	cmp	r0, #0
   146fc:	bne	14718 <__assert_fail@plt+0x2fe4>
   14700:	b	14704 <__assert_fail@plt+0x2fd0>
   14704:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14708:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1470c:	str	r0, [sp, #92]	; 0x5c
   14710:	str	r1, [sp, #88]	; 0x58
   14714:	b	1476c <__assert_fail@plt+0x3038>
   14718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1471c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14720:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14724:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14728:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1472c:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14730:	str	r0, [sp, #84]	; 0x54
   14734:	mov	r0, r2
   14738:	str	r1, [sp, #80]	; 0x50
   1473c:	mov	r1, r3
   14740:	mov	r2, ip
   14744:	mov	r3, lr
   14748:	bl	22b0c <__assert_fail@plt+0x113d8>
   1474c:	ldr	r2, [sp, #84]	; 0x54
   14750:	umull	r3, ip, r2, r0
   14754:	mla	r1, r2, r1, ip
   14758:	ldr	ip, [sp, #80]	; 0x50
   1475c:	mla	r0, ip, r0, r1
   14760:	str	r3, [sp, #92]	; 0x5c
   14764:	str	r0, [sp, #88]	; 0x58
   14768:	b	1476c <__assert_fail@plt+0x3038>
   1476c:	ldr	r0, [sp, #88]	; 0x58
   14770:	ldr	r1, [sp, #92]	; 0x5c
   14774:	str	r1, [fp, #-56]	; 0xffffffc8
   14778:	str	r0, [fp, #-52]	; 0xffffffcc
   1477c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14780:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14784:	ldr	r2, [fp, #16]
   14788:	subs	r0, r0, r2
   1478c:	sbcs	r1, r1, #0
   14790:	str	r0, [sp, #76]	; 0x4c
   14794:	str	r1, [sp, #72]	; 0x48
   14798:	bge	147dc <__assert_fail@plt+0x30a8>
   1479c:	b	147a0 <__assert_fail@plt+0x306c>
   147a0:	ldr	r0, [fp, #8]
   147a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   147a8:	add	r2, r0, r1
   147ac:	ldr	r3, [fp, #16]
   147b0:	sub	r1, r3, r1
   147b4:	str	r1, [sp, #68]	; 0x44
   147b8:	mov	r1, r2
   147bc:	ldr	r2, [sp, #68]	; 0x44
   147c0:	bl	11404 <memmove@plt>
   147c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   147c8:	ldr	r2, [fp, #16]
   147cc:	sub	r1, r2, r1
   147d0:	str	r1, [fp, #16]
   147d4:	str	r0, [sp, #64]	; 0x40
   147d8:	b	14864 <__assert_fail@plt+0x3130>
   147dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   147e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147e4:	ldr	r2, [fp, #16]
   147e8:	subs	r2, r0, r2
   147ec:	sbc	r3, r1, #0
   147f0:	mov	r0, sp
   147f4:	mov	r1, #1
   147f8:	str	r1, [r0]
   147fc:	mov	r0, #0
   14800:	bl	114b8 <lseek64@plt>
   14804:	cmn	r1, #1
   14808:	str	r0, [sp, #60]	; 0x3c
   1480c:	bgt	1485c <__assert_fail@plt+0x3128>
   14810:	b	14814 <__assert_fail@plt+0x30e0>
   14814:	bl	115f0 <__errno_location@plt>
   14818:	ldr	r1, [r0]
   1481c:	movw	r0, #21360	; 0x5370
   14820:	movt	r0, #3
   14824:	ldr	r2, [r0]
   14828:	movw	r0, #0
   1482c:	movw	lr, #3
   14830:	str	r1, [sp, #56]	; 0x38
   14834:	mov	r1, lr
   14838:	bl	19dfc <__assert_fail@plt+0x86c8>
   1483c:	movw	r1, #1
   14840:	str	r0, [sp, #52]	; 0x34
   14844:	mov	r0, r1
   14848:	ldr	r1, [sp, #56]	; 0x38
   1484c:	movw	r2, #15774	; 0x3d9e
   14850:	movt	r2, #2
   14854:	ldr	r3, [sp, #52]	; 0x34
   14858:	bl	1150c <error@plt>
   1485c:	mvn	r0, #0
   14860:	str	r0, [fp, #16]
   14864:	b	14868 <__assert_fail@plt+0x3134>
   14868:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1486c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14870:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14874:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14878:	subs	r0, r0, r2
   1487c:	sbcs	r1, r1, r3
   14880:	str	r0, [sp, #48]	; 0x30
   14884:	str	r1, [sp, #44]	; 0x2c
   14888:	bge	14a40 <__assert_fail@plt+0x330c>
   1488c:	b	14890 <__assert_fail@plt+0x315c>
   14890:	ldr	r0, [fp, #16]
   14894:	cmn	r0, #1
   14898:	beq	148b0 <__assert_fail@plt+0x317c>
   1489c:	ldr	r0, [fp, #16]
   148a0:	str	r0, [fp, #-60]	; 0xffffffc4
   148a4:	mvn	r0, #0
   148a8:	str	r0, [fp, #16]
   148ac:	b	1491c <__assert_fail@plt+0x31e8>
   148b0:	ldr	r1, [fp, #8]
   148b4:	ldr	r2, [fp, #12]
   148b8:	movw	r0, #0
   148bc:	bl	1a178 <__assert_fail@plt+0x8a44>
   148c0:	str	r0, [fp, #-60]	; 0xffffffc4
   148c4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   148c8:	cmn	r0, #1
   148cc:	bne	14918 <__assert_fail@plt+0x31e4>
   148d0:	bl	115f0 <__errno_location@plt>
   148d4:	ldr	r1, [r0]
   148d8:	movw	r0, #21360	; 0x5370
   148dc:	movt	r0, #3
   148e0:	ldr	r2, [r0]
   148e4:	movw	r0, #0
   148e8:	movw	lr, #3
   148ec:	str	r1, [sp, #40]	; 0x28
   148f0:	mov	r1, lr
   148f4:	bl	19dfc <__assert_fail@plt+0x86c8>
   148f8:	movw	r1, #1
   148fc:	str	r0, [sp, #36]	; 0x24
   14900:	mov	r0, r1
   14904:	ldr	r1, [sp, #40]	; 0x28
   14908:	movw	r2, #15774	; 0x3d9e
   1490c:	movt	r2, #2
   14910:	ldr	r3, [sp, #36]	; 0x24
   14914:	bl	1150c <error@plt>
   14918:	b	1491c <__assert_fail@plt+0x31e8>
   1491c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14920:	cmp	r0, #0
   14924:	bne	1492c <__assert_fail@plt+0x31f8>
   14928:	b	14a40 <__assert_fail@plt+0x330c>
   1492c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14930:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14934:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14938:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1493c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14940:	subs	r1, r1, r3
   14944:	sbc	r2, r2, ip
   14948:	subs	r0, r0, r1
   1494c:	rscs	r1, r2, #0
   14950:	str	r0, [sp, #32]
   14954:	str	r1, [sp, #28]
   14958:	bge	14974 <__assert_fail@plt+0x3240>
   1495c:	b	14960 <__assert_fail@plt+0x322c>
   14960:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14964:	mov	r1, #0
   14968:	str	r0, [sp, #24]
   1496c:	str	r1, [sp, #20]
   14970:	b	14998 <__assert_fail@plt+0x3264>
   14974:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14978:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1497c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14980:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14984:	subs	r0, r0, r2
   14988:	sbc	r1, r1, r3
   1498c:	str	r0, [sp, #24]
   14990:	str	r1, [sp, #20]
   14994:	b	14998 <__assert_fail@plt+0x3264>
   14998:	ldr	r0, [sp, #20]
   1499c:	ldr	r1, [sp, #24]
   149a0:	str	r1, [fp, #-60]	; 0xffffffc4
   149a4:	ldr	r1, [fp, #8]
   149a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   149ac:	movw	r3, #1
   149b0:	str	r0, [sp, #16]
   149b4:	mov	r0, r3
   149b8:	bl	177f0 <__assert_fail@plt+0x60bc>
   149bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   149c0:	cmp	r0, r1
   149c4:	beq	14a20 <__assert_fail@plt+0x32ec>
   149c8:	bl	115f0 <__errno_location@plt>
   149cc:	ldr	r0, [r0]
   149d0:	bl	16da8 <__assert_fail@plt+0x5674>
   149d4:	tst	r0, #1
   149d8:	bne	14a20 <__assert_fail@plt+0x32ec>
   149dc:	bl	115f0 <__errno_location@plt>
   149e0:	ldr	r1, [r0]
   149e4:	movw	r0, #0
   149e8:	movw	lr, #3
   149ec:	str	r1, [sp, #12]
   149f0:	mov	r1, lr
   149f4:	movw	r2, #16237	; 0x3f6d
   149f8:	movt	r2, #2
   149fc:	bl	19dfc <__assert_fail@plt+0x86c8>
   14a00:	movw	r1, #1
   14a04:	str	r0, [sp, #8]
   14a08:	mov	r0, r1
   14a0c:	ldr	r1, [sp, #12]
   14a10:	movw	r2, #15774	; 0x3d9e
   14a14:	movt	r2, #2
   14a18:	ldr	r3, [sp, #8]
   14a1c:	bl	1150c <error@plt>
   14a20:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14a24:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14a28:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14a2c:	adds	r0, r1, r0
   14a30:	adc	r1, r2, #0
   14a34:	str	r0, [fp, #-48]	; 0xffffffd0
   14a38:	str	r1, [fp, #-44]	; 0xffffffd4
   14a3c:	b	14868 <__assert_fail@plt+0x3134>
   14a40:	sub	sp, fp, #16
   14a44:	pop	{r4, r5, r6, sl, fp, pc}
   14a48:	push	{r4, r5, r6, sl, fp, lr}
   14a4c:	add	fp, sp, #16
   14a50:	sub	sp, sp, #336	; 0x150
   14a54:	ldr	ip, [fp, #28]
   14a58:	ldr	lr, [fp, #24]
   14a5c:	ldr	r4, [fp, #16]
   14a60:	ldr	r5, [fp, #12]
   14a64:	ldr	r6, [fp, #8]
   14a68:	str	r0, [fp, #-24]	; 0xffffffe8
   14a6c:	str	r1, [fp, #-20]	; 0xffffffec
   14a70:	str	r3, [fp, #-28]	; 0xffffffe4
   14a74:	str	r2, [fp, #-32]	; 0xffffffe0
   14a78:	str	ip, [fp, #-36]	; 0xffffffdc
   14a7c:	str	lr, [fp, #-40]	; 0xffffffd8
   14a80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a88:	orr	r0, r0, r1
   14a8c:	cmp	r0, #0
   14a90:	str	r5, [fp, #-128]	; 0xffffff80
   14a94:	str	r4, [fp, #-132]	; 0xffffff7c
   14a98:	str	r6, [fp, #-136]	; 0xffffff78
   14a9c:	beq	14af8 <__assert_fail@plt+0x33c4>
   14aa0:	b	14aa4 <__assert_fail@plt+0x3370>
   14aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14aa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   14aac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14ab0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14ab4:	subs	r0, r2, r0
   14ab8:	sbcs	r1, r3, r1
   14abc:	str	r0, [fp, #-140]	; 0xffffff74
   14ac0:	str	r1, [fp, #-144]	; 0xffffff70
   14ac4:	bcc	14af8 <__assert_fail@plt+0x33c4>
   14ac8:	b	14acc <__assert_fail@plt+0x3398>
   14acc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ad0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ad4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14ad8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14adc:	subs	r0, r2, r0
   14ae0:	sbcs	r1, r3, r1
   14ae4:	str	r0, [fp, #-148]	; 0xffffff6c
   14ae8:	str	r1, [fp, #-152]	; 0xffffff68
   14aec:	bcc	14af8 <__assert_fail@plt+0x33c4>
   14af0:	b	14af4 <__assert_fail@plt+0x33c0>
   14af4:	b	14b18 <__assert_fail@plt+0x33e4>
   14af8:	movw	r0, #15470	; 0x3c6e
   14afc:	movt	r0, #2
   14b00:	movw	r1, #15035	; 0x3abb
   14b04:	movt	r1, #2
   14b08:	movw	r2, #867	; 0x363
   14b0c:	movw	r3, #15578	; 0x3cda
   14b10:	movt	r3, #2
   14b14:	bl	11734 <__assert_fail@plt>
   14b18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14b24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b28:	bl	22b0c <__assert_fail@plt+0x113d8>
   14b2c:	str	r1, [fp, #-44]	; 0xffffffd4
   14b30:	str	r0, [fp, #-48]	; 0xffffffd0
   14b34:	mov	r0, #0
   14b38:	str	r0, [fp, #-52]	; 0xffffffcc
   14b3c:	mov	r1, #1
   14b40:	str	r1, [fp, #-56]	; 0xffffffc8
   14b44:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14b48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14b4c:	subs	r2, r2, #1
   14b50:	sbc	r3, r3, #0
   14b54:	str	r2, [fp, #-64]	; 0xffffffc0
   14b58:	str	r3, [fp, #-60]	; 0xffffffc4
   14b5c:	str	r0, [fp, #-68]	; 0xffffffbc
   14b60:	str	r0, [fp, #-72]	; 0xffffffb8
   14b64:	strb	r1, [fp, #-73]	; 0xffffffb7
   14b68:	strb	r0, [fp, #-74]	; 0xffffffb6
   14b6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b70:	ldr	r1, [fp, #-20]	; 0xffffffec
   14b74:	subs	r0, r0, #2
   14b78:	sbcs	r1, r1, #0
   14b7c:	str	r0, [fp, #-156]	; 0xffffff64
   14b80:	str	r1, [fp, #-160]	; 0xffffff60
   14b84:	bcc	14cfc <__assert_fail@plt+0x35c8>
   14b88:	b	14b8c <__assert_fail@plt+0x3458>
   14b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b90:	ldr	r1, [fp, #-20]	; 0xffffffec
   14b94:	subs	r0, r0, #1
   14b98:	sbc	r1, r1, #0
   14b9c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14ba0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14ba4:	umull	ip, lr, r0, r2
   14ba8:	mla	r0, r0, r3, lr
   14bac:	mla	r0, r1, r2, r0
   14bb0:	subs	r1, ip, #1
   14bb4:	sbc	r0, r0, #0
   14bb8:	str	r1, [fp, #-88]	; 0xffffffa8
   14bbc:	str	r0, [fp, #-84]	; 0xffffffac
   14bc0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14bc4:	ldr	r1, [fp, #-84]	; 0xffffffac
   14bc8:	ldr	r2, [fp, #16]
   14bcc:	subs	r0, r0, r2
   14bd0:	sbcs	r1, r1, #0
   14bd4:	str	r0, [fp, #-164]	; 0xffffff5c
   14bd8:	str	r1, [fp, #-168]	; 0xffffff58
   14bdc:	bge	14c20 <__assert_fail@plt+0x34ec>
   14be0:	b	14be4 <__assert_fail@plt+0x34b0>
   14be4:	ldr	r0, [fp, #8]
   14be8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14bec:	add	r2, r0, r1
   14bf0:	ldr	r3, [fp, #16]
   14bf4:	sub	r1, r3, r1
   14bf8:	str	r1, [fp, #-172]	; 0xffffff54
   14bfc:	mov	r1, r2
   14c00:	ldr	r2, [fp, #-172]	; 0xffffff54
   14c04:	bl	11404 <memmove@plt>
   14c08:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14c0c:	ldr	r2, [fp, #16]
   14c10:	sub	r1, r2, r1
   14c14:	str	r1, [fp, #16]
   14c18:	str	r0, [sp, #176]	; 0xb0
   14c1c:	b	14ca8 <__assert_fail@plt+0x3574>
   14c20:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14c24:	ldr	r1, [fp, #-84]	; 0xffffffac
   14c28:	ldr	r2, [fp, #16]
   14c2c:	subs	r2, r0, r2
   14c30:	sbc	r3, r1, #0
   14c34:	mov	r0, sp
   14c38:	mov	r1, #1
   14c3c:	str	r1, [r0]
   14c40:	mov	r0, #0
   14c44:	bl	114b8 <lseek64@plt>
   14c48:	cmn	r1, #1
   14c4c:	str	r0, [sp, #172]	; 0xac
   14c50:	bgt	14ca0 <__assert_fail@plt+0x356c>
   14c54:	b	14c58 <__assert_fail@plt+0x3524>
   14c58:	bl	115f0 <__errno_location@plt>
   14c5c:	ldr	r1, [r0]
   14c60:	movw	r0, #21360	; 0x5370
   14c64:	movt	r0, #3
   14c68:	ldr	r2, [r0]
   14c6c:	movw	r0, #0
   14c70:	movw	lr, #3
   14c74:	str	r1, [sp, #168]	; 0xa8
   14c78:	mov	r1, lr
   14c7c:	bl	19dfc <__assert_fail@plt+0x86c8>
   14c80:	movw	r1, #1
   14c84:	str	r0, [sp, #164]	; 0xa4
   14c88:	mov	r0, r1
   14c8c:	ldr	r1, [sp, #168]	; 0xa8
   14c90:	movw	r2, #15774	; 0x3d9e
   14c94:	movt	r2, #2
   14c98:	ldr	r3, [sp, #164]	; 0xa4
   14c9c:	bl	1150c <error@plt>
   14ca0:	mvn	r0, #0
   14ca4:	str	r0, [fp, #16]
   14ca8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14cac:	ldr	r1, [fp, #-84]	; 0xffffffac
   14cb0:	str	r1, [fp, #-68]	; 0xffffffbc
   14cb4:	str	r0, [fp, #-72]	; 0xffffffb8
   14cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14cbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14cc0:	subs	r0, r0, #1
   14cc4:	sbc	r1, r1, #0
   14cc8:	str	r0, [fp, #-56]	; 0xffffffc8
   14ccc:	str	r1, [fp, #-52]	; 0xffffffcc
   14cd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14cd4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14cd8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14cdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14ce0:	umull	ip, lr, r0, r2
   14ce4:	mla	r0, r0, r3, lr
   14ce8:	mla	r0, r1, r2, r0
   14cec:	subs	r1, ip, #1
   14cf0:	sbc	r0, r0, #0
   14cf4:	str	r1, [fp, #-64]	; 0xffffffc0
   14cf8:	str	r0, [fp, #-60]	; 0xffffffc4
   14cfc:	b	14d00 <__assert_fail@plt+0x35cc>
   14d00:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14d04:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14d08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14d0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d10:	subs	r0, r0, r2
   14d14:	sbcs	r1, r1, r3
   14d18:	str	r0, [sp, #160]	; 0xa0
   14d1c:	str	r1, [sp, #156]	; 0x9c
   14d20:	bge	152cc <__assert_fail@plt+0x3b98>
   14d24:	b	14d28 <__assert_fail@plt+0x35f4>
   14d28:	ldr	r0, [fp, #8]
   14d2c:	str	r0, [fp, #-92]	; 0xffffffa4
   14d30:	ldr	r0, [fp, #16]
   14d34:	cmn	r0, #1
   14d38:	beq	14d50 <__assert_fail@plt+0x361c>
   14d3c:	ldr	r0, [fp, #16]
   14d40:	str	r0, [fp, #-100]	; 0xffffff9c
   14d44:	mvn	r0, #0
   14d48:	str	r0, [fp, #16]
   14d4c:	b	14dbc <__assert_fail@plt+0x3688>
   14d50:	ldr	r1, [fp, #8]
   14d54:	ldr	r2, [fp, #12]
   14d58:	movw	r0, #0
   14d5c:	bl	1a178 <__assert_fail@plt+0x8a44>
   14d60:	str	r0, [fp, #-100]	; 0xffffff9c
   14d64:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14d68:	cmn	r0, #1
   14d6c:	bne	14db8 <__assert_fail@plt+0x3684>
   14d70:	bl	115f0 <__errno_location@plt>
   14d74:	ldr	r1, [r0]
   14d78:	movw	r0, #21360	; 0x5370
   14d7c:	movt	r0, #3
   14d80:	ldr	r2, [r0]
   14d84:	movw	r0, #0
   14d88:	movw	lr, #3
   14d8c:	str	r1, [sp, #152]	; 0x98
   14d90:	mov	r1, lr
   14d94:	bl	19dfc <__assert_fail@plt+0x86c8>
   14d98:	movw	r1, #1
   14d9c:	str	r0, [sp, #148]	; 0x94
   14da0:	mov	r0, r1
   14da4:	ldr	r1, [sp, #152]	; 0x98
   14da8:	movw	r2, #15774	; 0x3d9e
   14dac:	movt	r2, #2
   14db0:	ldr	r3, [sp, #148]	; 0x94
   14db4:	bl	1150c <error@plt>
   14db8:	b	14dbc <__assert_fail@plt+0x3688>
   14dbc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14dc0:	cmp	r0, #0
   14dc4:	bne	14dcc <__assert_fail@plt+0x3698>
   14dc8:	b	152cc <__assert_fail@plt+0x3b98>
   14dcc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14dd0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14dd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14dd8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14ddc:	ldr	ip, [fp, #-68]	; 0xffffffbc
   14de0:	subs	r1, r1, r3
   14de4:	sbc	r2, r2, ip
   14de8:	subs	r0, r0, r1
   14dec:	rscs	r1, r2, #0
   14df0:	str	r0, [sp, #144]	; 0x90
   14df4:	str	r1, [sp, #140]	; 0x8c
   14df8:	bge	14e14 <__assert_fail@plt+0x36e0>
   14dfc:	b	14e00 <__assert_fail@plt+0x36cc>
   14e00:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14e04:	mov	r1, #0
   14e08:	str	r0, [sp, #136]	; 0x88
   14e0c:	str	r1, [sp, #132]	; 0x84
   14e10:	b	14e38 <__assert_fail@plt+0x3704>
   14e14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14e1c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14e20:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14e24:	subs	r0, r0, r2
   14e28:	sbc	r1, r1, r3
   14e2c:	str	r0, [sp, #136]	; 0x88
   14e30:	str	r1, [sp, #132]	; 0x84
   14e34:	b	14e38 <__assert_fail@plt+0x3704>
   14e38:	ldr	r0, [sp, #132]	; 0x84
   14e3c:	ldr	r1, [sp, #136]	; 0x88
   14e40:	str	r1, [fp, #-100]	; 0xffffff9c
   14e44:	movw	r1, #0
   14e48:	strb	r1, [fp, #-74]	; 0xffffffb6
   14e4c:	ldr	r1, [fp, #8]
   14e50:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14e54:	add	r1, r1, r2
   14e58:	str	r1, [fp, #-96]	; 0xffffffa0
   14e5c:	str	r0, [sp, #128]	; 0x80
   14e60:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14e64:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14e68:	cmp	r0, r1
   14e6c:	beq	152c8 <__assert_fail@plt+0x3b94>
   14e70:	mov	r0, #0
   14e74:	strb	r0, [fp, #-105]	; 0xffffff97
   14e78:	ldr	r1, [fp, #-100]	; 0xffffff9c
   14e7c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14e80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14e84:	ldr	ip, [fp, #-72]	; 0xffffffb8
   14e88:	ldr	lr, [fp, #-68]	; 0xffffffbc
   14e8c:	subs	r2, r2, ip
   14e90:	sbc	r3, r3, lr
   14e94:	cmn	r3, #1
   14e98:	str	r0, [sp, #124]	; 0x7c
   14e9c:	str	r1, [sp, #120]	; 0x78
   14ea0:	str	r2, [sp, #116]	; 0x74
   14ea4:	bgt	14ec0 <__assert_fail@plt+0x378c>
   14ea8:	b	14eac <__assert_fail@plt+0x3778>
   14eac:	mov	r0, #0
   14eb0:	mov	r1, r0
   14eb4:	str	r1, [sp, #112]	; 0x70
   14eb8:	str	r0, [sp, #108]	; 0x6c
   14ebc:	b	14ee4 <__assert_fail@plt+0x37b0>
   14ec0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14ec4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14ec8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14ecc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14ed0:	subs	r0, r0, r2
   14ed4:	sbc	r1, r1, r3
   14ed8:	str	r0, [sp, #112]	; 0x70
   14edc:	str	r1, [sp, #108]	; 0x6c
   14ee0:	b	14ee4 <__assert_fail@plt+0x37b0>
   14ee4:	ldr	r0, [sp, #108]	; 0x6c
   14ee8:	ldr	r1, [sp, #112]	; 0x70
   14eec:	ldr	r2, [sp, #120]	; 0x78
   14ef0:	subs	r1, r2, r1
   14ef4:	ldr	r3, [sp, #124]	; 0x7c
   14ef8:	sbcs	r0, r3, r0
   14efc:	str	r1, [sp, #104]	; 0x68
   14f00:	str	r0, [sp, #100]	; 0x64
   14f04:	bge	14f20 <__assert_fail@plt+0x37ec>
   14f08:	b	14f0c <__assert_fail@plt+0x37d8>
   14f0c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14f10:	mov	r1, #0
   14f14:	str	r0, [sp, #96]	; 0x60
   14f18:	str	r1, [sp, #92]	; 0x5c
   14f1c:	b	14f94 <__assert_fail@plt+0x3860>
   14f20:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14f24:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14f28:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14f2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14f30:	subs	r0, r0, r2
   14f34:	sbc	r1, r1, r3
   14f38:	cmn	r1, #1
   14f3c:	str	r0, [sp, #88]	; 0x58
   14f40:	bgt	14f5c <__assert_fail@plt+0x3828>
   14f44:	b	14f48 <__assert_fail@plt+0x3814>
   14f48:	mov	r0, #0
   14f4c:	mov	r1, r0
   14f50:	str	r1, [sp, #84]	; 0x54
   14f54:	str	r0, [sp, #80]	; 0x50
   14f58:	b	14f80 <__assert_fail@plt+0x384c>
   14f5c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14f60:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14f64:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14f68:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14f6c:	subs	r0, r0, r2
   14f70:	sbc	r1, r1, r3
   14f74:	str	r0, [sp, #84]	; 0x54
   14f78:	str	r1, [sp, #80]	; 0x50
   14f7c:	b	14f80 <__assert_fail@plt+0x384c>
   14f80:	ldr	r0, [sp, #80]	; 0x50
   14f84:	ldr	r1, [sp, #84]	; 0x54
   14f88:	str	r1, [sp, #96]	; 0x60
   14f8c:	str	r0, [sp, #92]	; 0x5c
   14f90:	b	14f94 <__assert_fail@plt+0x3860>
   14f94:	ldr	r0, [sp, #92]	; 0x5c
   14f98:	ldr	r1, [sp, #96]	; 0x60
   14f9c:	str	r1, [fp, #-120]	; 0xffffff88
   14fa0:	str	r0, [fp, #-116]	; 0xffffff8c
   14fa4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14fa8:	ldr	r1, [fp, #-120]	; 0xffffff88
   14fac:	add	r0, r0, r1
   14fb0:	movw	r2, #20820	; 0x5154
   14fb4:	movt	r2, #3
   14fb8:	ldr	r2, [r2]
   14fbc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14fc0:	sub	r1, r3, r1
   14fc4:	str	r1, [sp, #76]	; 0x4c
   14fc8:	mov	r1, r2
   14fcc:	ldr	r2, [sp, #76]	; 0x4c
   14fd0:	bl	11638 <memchr@plt>
   14fd4:	str	r0, [fp, #-124]	; 0xffffff84
   14fd8:	ldr	r0, [fp, #-124]	; 0xffffff84
   14fdc:	movw	r1, #0
   14fe0:	cmp	r0, r1
   14fe4:	beq	15000 <__assert_fail@plt+0x38cc>
   14fe8:	ldr	r0, [fp, #-124]	; 0xffffff84
   14fec:	add	r0, r0, #1
   14ff0:	str	r0, [fp, #-124]	; 0xffffff84
   14ff4:	movw	r0, #1
   14ff8:	strb	r0, [fp, #-105]	; 0xffffff97
   14ffc:	b	15008 <__assert_fail@plt+0x38d4>
   15000:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15004:	str	r0, [fp, #-124]	; 0xffffff84
   15008:	ldr	r0, [fp, #-124]	; 0xffffff84
   1500c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15010:	sub	r0, r0, r1
   15014:	str	r0, [fp, #-104]	; 0xffffff98
   15018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1501c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15020:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15024:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15028:	eor	r1, r1, r3
   1502c:	eor	r0, r0, r2
   15030:	orr	r0, r0, r1
   15034:	cmp	r0, #0
   15038:	bne	15098 <__assert_fail@plt+0x3964>
   1503c:	b	15040 <__assert_fail@plt+0x390c>
   15040:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15044:	ldr	r2, [fp, #-104]	; 0xffffff98
   15048:	movw	r0, #1
   1504c:	bl	177f0 <__assert_fail@plt+0x60bc>
   15050:	ldr	r1, [fp, #-104]	; 0xffffff98
   15054:	cmp	r0, r1
   15058:	beq	15094 <__assert_fail@plt+0x3960>
   1505c:	bl	115f0 <__errno_location@plt>
   15060:	ldr	r1, [r0]
   15064:	movw	r0, #15654	; 0x3d26
   15068:	movt	r0, #2
   1506c:	str	r1, [sp, #72]	; 0x48
   15070:	bl	11590 <gettext@plt>
   15074:	movw	r1, #1
   15078:	str	r0, [sp, #68]	; 0x44
   1507c:	mov	r0, r1
   15080:	ldr	r1, [sp, #72]	; 0x48
   15084:	movw	r2, #15774	; 0x3d9e
   15088:	movt	r2, #2
   1508c:	ldr	r3, [sp, #68]	; 0x44
   15090:	bl	1150c <error@plt>
   15094:	b	150cc <__assert_fail@plt+0x3998>
   15098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1509c:	ldr	r1, [fp, #-20]	; 0xffffffec
   150a0:	orr	r0, r0, r1
   150a4:	cmp	r0, #0
   150a8:	bne	150c8 <__assert_fail@plt+0x3994>
   150ac:	b	150b0 <__assert_fail@plt+0x397c>
   150b0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   150b4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   150b8:	ldr	r2, [fp, #-104]	; 0xffffff98
   150bc:	and	r0, r0, #1
   150c0:	bl	15fc8 <__assert_fail@plt+0x4894>
   150c4:	str	r0, [sp, #64]	; 0x40
   150c8:	b	150cc <__assert_fail@plt+0x3998>
   150cc:	ldr	r0, [fp, #-104]	; 0xffffff98
   150d0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   150d4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   150d8:	adds	r0, r1, r0
   150dc:	adc	r1, r2, #0
   150e0:	str	r0, [fp, #-72]	; 0xffffffb8
   150e4:	str	r1, [fp, #-68]	; 0xffffffbc
   150e8:	ldr	r0, [fp, #-104]	; 0xffffff98
   150ec:	ldr	r1, [fp, #-92]	; 0xffffffa4
   150f0:	add	r0, r1, r0
   150f4:	str	r0, [fp, #-92]	; 0xffffffa4
   150f8:	ldr	r0, [fp, #-104]	; 0xffffff98
   150fc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15100:	sub	r0, r1, r0
   15104:	str	r0, [fp, #-100]	; 0xffffff9c
   15108:	ldrb	r0, [fp, #-105]	; 0xffffff97
   1510c:	and	r0, r0, #1
   15110:	strb	r0, [fp, #-73]	; 0xffffffb7
   15114:	ldrb	r0, [fp, #-105]	; 0xffffff97
   15118:	tst	r0, #1
   1511c:	movw	r0, #1
   15120:	str	r0, [sp, #60]	; 0x3c
   15124:	bne	1515c <__assert_fail@plt+0x3a28>
   15128:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1512c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15130:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15134:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15138:	subs	r2, r2, #1
   1513c:	sbc	r3, r3, #0
   15140:	subs	r0, r2, r0
   15144:	sbcs	r1, r3, r1
   15148:	mov	r2, #0
   1514c:	movwge	r2, #1
   15150:	str	r0, [sp, #56]	; 0x38
   15154:	str	r1, [sp, #52]	; 0x34
   15158:	str	r2, [sp, #60]	; 0x3c
   1515c:	ldr	r0, [sp, #60]	; 0x3c
   15160:	tst	r0, #1
   15164:	beq	152c4 <__assert_fail@plt+0x3b90>
   15168:	ldrb	r0, [fp, #-105]	; 0xffffff97
   1516c:	tst	r0, #1
   15170:	bne	15190 <__assert_fail@plt+0x3a5c>
   15174:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15178:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1517c:	cmp	r0, r1
   15180:	bne	15190 <__assert_fail@plt+0x3a5c>
   15184:	movw	r0, #1
   15188:	strb	r0, [fp, #-74]	; 0xffffffb6
   1518c:	b	152c4 <__assert_fail@plt+0x3b90>
   15190:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15194:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15198:	adds	r0, r0, #1
   1519c:	adc	r1, r1, #0
   151a0:	str	r0, [fp, #-56]	; 0xffffffc8
   151a4:	str	r1, [fp, #-52]	; 0xffffffcc
   151a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   151b0:	orr	r0, r0, r1
   151b4:	cmp	r0, #0
   151b8:	beq	151ec <__assert_fail@plt+0x3ab8>
   151bc:	b	151c0 <__assert_fail@plt+0x3a8c>
   151c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   151c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   151c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   151cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   151d0:	subs	r0, r2, r0
   151d4:	sbcs	r1, r3, r1
   151d8:	str	r0, [sp, #48]	; 0x30
   151dc:	str	r1, [sp, #44]	; 0x2c
   151e0:	bcs	151ec <__assert_fail@plt+0x3ab8>
   151e4:	b	151e8 <__assert_fail@plt+0x3ab4>
   151e8:	b	1537c <__assert_fail@plt+0x3c48>
   151ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   151f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   151f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   151f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   151fc:	eor	r1, r1, r3
   15200:	eor	r0, r0, r2
   15204:	orr	r0, r0, r1
   15208:	cmp	r0, #0
   1520c:	bne	15230 <__assert_fail@plt+0x3afc>
   15210:	b	15214 <__assert_fail@plt+0x3ae0>
   15214:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15218:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1521c:	subs	r0, r0, #1
   15220:	sbc	r1, r1, #0
   15224:	str	r0, [fp, #-64]	; 0xffffffc0
   15228:	str	r1, [fp, #-60]	; 0xffffffc4
   1522c:	b	15250 <__assert_fail@plt+0x3b1c>
   15230:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15234:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15238:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1523c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15240:	adds	r0, r2, r0
   15244:	adc	r1, r3, r1
   15248:	str	r0, [fp, #-64]	; 0xffffffc0
   1524c:	str	r1, [fp, #-60]	; 0xffffffc4
   15250:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15254:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15258:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1525c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15260:	subs	r2, r2, #1
   15264:	sbc	r3, r3, #0
   15268:	subs	r0, r2, r0
   1526c:	sbcs	r1, r3, r1
   15270:	str	r0, [sp, #40]	; 0x28
   15274:	str	r1, [sp, #36]	; 0x24
   15278:	blt	152b8 <__assert_fail@plt+0x3b84>
   1527c:	b	15280 <__assert_fail@plt+0x3b4c>
   15280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15284:	ldr	r1, [fp, #-20]	; 0xffffffec
   15288:	orr	r0, r0, r1
   1528c:	cmp	r0, #0
   15290:	bne	152b4 <__assert_fail@plt+0x3b80>
   15294:	b	15298 <__assert_fail@plt+0x3b64>
   15298:	movw	r0, #1
   1529c:	and	r0, r0, #1
   152a0:	movw	r1, #0
   152a4:	str	r1, [sp, #32]
   152a8:	ldr	r2, [sp, #32]
   152ac:	bl	15fc8 <__assert_fail@plt+0x4894>
   152b0:	str	r0, [sp, #28]
   152b4:	b	152c0 <__assert_fail@plt+0x3b8c>
   152b8:	movw	r0, #0
   152bc:	strb	r0, [fp, #-105]	; 0xffffff97
   152c0:	b	15114 <__assert_fail@plt+0x39e0>
   152c4:	b	14e60 <__assert_fail@plt+0x372c>
   152c8:	b	14d00 <__assert_fail@plt+0x35cc>
   152cc:	ldrb	r0, [fp, #-74]	; 0xffffffb6
   152d0:	tst	r0, #1
   152d4:	beq	152f0 <__assert_fail@plt+0x3bbc>
   152d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   152dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   152e0:	adds	r0, r0, #1
   152e4:	adc	r1, r1, #0
   152e8:	str	r0, [fp, #-56]	; 0xffffffc8
   152ec:	str	r1, [fp, #-52]	; 0xffffffcc
   152f0:	b	152f4 <__assert_fail@plt+0x3bc0>
   152f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   152fc:	orr	r0, r0, r1
   15300:	mov	r1, #0
   15304:	cmp	r0, #0
   15308:	str	r1, [sp, #24]
   1530c:	bne	15350 <__assert_fail@plt+0x3c1c>
   15310:	b	15314 <__assert_fail@plt+0x3be0>
   15314:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15318:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1531c:	adds	r2, r0, #1
   15320:	adc	r3, r1, #0
   15324:	str	r2, [fp, #-56]	; 0xffffffc8
   15328:	str	r3, [fp, #-52]	; 0xffffffcc
   1532c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15330:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15334:	subs	r0, r2, r0
   15338:	sbcs	r1, r3, r1
   1533c:	mov	r2, #0
   15340:	movwcs	r2, #1
   15344:	str	r0, [sp, #20]
   15348:	str	r1, [sp, #16]
   1534c:	str	r2, [sp, #24]
   15350:	ldr	r0, [sp, #24]
   15354:	tst	r0, #1
   15358:	beq	1537c <__assert_fail@plt+0x3c48>
   1535c:	movw	r0, #1
   15360:	and	r0, r0, #1
   15364:	movw	r1, #0
   15368:	str	r1, [sp, #12]
   1536c:	ldr	r2, [sp, #12]
   15370:	bl	15fc8 <__assert_fail@plt+0x4894>
   15374:	str	r0, [sp, #8]
   15378:	b	152f4 <__assert_fail@plt+0x3bc0>
   1537c:	sub	sp, fp, #16
   15380:	pop	{r4, r5, r6, sl, fp, pc}
   15384:	push	{r4, sl, fp, lr}
   15388:	add	fp, sp, #8
   1538c:	sub	sp, sp, #168	; 0xa8
   15390:	ldr	ip, [fp, #16]
   15394:	ldr	lr, [fp, #12]
   15398:	ldr	r4, [fp, #8]
   1539c:	str	r0, [fp, #-16]
   153a0:	str	r1, [fp, #-12]
   153a4:	str	r3, [fp, #-20]	; 0xffffffec
   153a8:	str	r2, [fp, #-24]	; 0xffffffe8
   153ac:	mov	r0, #0
   153b0:	strb	r0, [fp, #-25]	; 0xffffffe7
   153b4:	strb	r0, [fp, #-26]	; 0xffffffe6
   153b8:	ldr	r0, [fp, #-16]
   153bc:	ldr	r1, [fp, #-12]
   153c0:	orr	r0, r0, r1
   153c4:	cmp	r0, #0
   153c8:	str	lr, [fp, #-80]	; 0xffffffb0
   153cc:	str	ip, [fp, #-84]	; 0xffffffac
   153d0:	str	r4, [sp, #88]	; 0x58
   153d4:	beq	153f0 <__assert_fail@plt+0x3cbc>
   153d8:	b	153dc <__assert_fail@plt+0x3ca8>
   153dc:	mov	r0, #0
   153e0:	str	r0, [fp, #-44]	; 0xffffffd4
   153e4:	mov	r0, #1
   153e8:	str	r0, [fp, #-48]	; 0xffffffd0
   153ec:	b	154c4 <__assert_fail@plt+0x3d90>
   153f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   153f4:	cmp	r0, #0
   153f8:	beq	15404 <__assert_fail@plt+0x3cd0>
   153fc:	b	15400 <__assert_fail@plt+0x3ccc>
   15400:	bl	1de80 <__assert_fail@plt+0xc74c>
   15404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15408:	movw	r1, #16
   1540c:	bl	1b1fc <__assert_fail@plt+0x9ac8>
   15410:	ldr	r1, [fp, #16]
   15414:	str	r0, [r1]
   15418:	str	r0, [fp, #-36]	; 0xffffffdc
   1541c:	movw	r0, #0
   15420:	str	r0, [fp, #-32]	; 0xffffffe0
   15424:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15428:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1542c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15430:	subs	r0, r0, r1
   15434:	rscs	r1, r2, #0
   15438:	str	r0, [sp, #84]	; 0x54
   1543c:	str	r1, [sp, #80]	; 0x50
   15440:	bcs	154b4 <__assert_fail@plt+0x3d80>
   15444:	b	15448 <__assert_fail@plt+0x3d14>
   15448:	bl	16180 <__assert_fail@plt+0x4a4c>
   1544c:	movw	lr, #21764	; 0x5504
   15450:	movt	lr, #3
   15454:	ldr	r0, [lr]
   15458:	bl	1de48 <__assert_fail@plt+0xc714>
   1545c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15460:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15464:	str	r0, [lr, r1, lsl #4]
   15468:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1546c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15470:	add	r0, r0, r1, lsl #4
   15474:	mvn	r1, #0
   15478:	str	r1, [r0, #4]
   1547c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15480:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15484:	add	r0, r0, r1, lsl #4
   15488:	mov	r1, #0
   1548c:	str	r1, [r0, #8]
   15490:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15494:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15498:	add	r0, r0, r1, lsl #4
   1549c:	movw	r1, #0
   154a0:	str	r1, [r0, #12]
   154a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154a8:	add	r0, r0, #1
   154ac:	str	r0, [fp, #-32]	; 0xffffffe0
   154b0:	b	15424 <__assert_fail@plt+0x3cf0>
   154b4:	movw	r0, #0
   154b8:	str	r0, [fp, #-32]	; 0xffffffe0
   154bc:	movw	r0, #0
   154c0:	strb	r0, [fp, #-27]	; 0xffffffe5
   154c4:	b	154c8 <__assert_fail@plt+0x3d94>
   154c8:	ldr	r0, [fp, #8]
   154cc:	str	r0, [fp, #-52]	; 0xffffffcc
   154d0:	ldr	r1, [fp, #8]
   154d4:	ldr	r2, [fp, #12]
   154d8:	movw	r0, #0
   154dc:	bl	1a178 <__assert_fail@plt+0x8a44>
   154e0:	str	r0, [fp, #-60]	; 0xffffffc4
   154e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   154e8:	cmn	r0, #1
   154ec:	bne	15538 <__assert_fail@plt+0x3e04>
   154f0:	bl	115f0 <__errno_location@plt>
   154f4:	ldr	r1, [r0]
   154f8:	movw	r0, #21360	; 0x5370
   154fc:	movt	r0, #3
   15500:	ldr	r2, [r0]
   15504:	movw	r0, #0
   15508:	movw	lr, #3
   1550c:	str	r1, [sp, #76]	; 0x4c
   15510:	mov	r1, lr
   15514:	bl	19dfc <__assert_fail@plt+0x86c8>
   15518:	movw	r1, #1
   1551c:	str	r0, [sp, #72]	; 0x48
   15520:	mov	r0, r1
   15524:	ldr	r1, [sp, #76]	; 0x4c
   15528:	movw	r2, #15774	; 0x3d9e
   1552c:	movt	r2, #2
   15530:	ldr	r3, [sp, #72]	; 0x48
   15534:	bl	1150c <error@plt>
   15538:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1553c:	cmp	r0, #0
   15540:	bne	15548 <__assert_fail@plt+0x3e14>
   15544:	b	15a1c <__assert_fail@plt+0x42e8>
   15548:	b	1554c <__assert_fail@plt+0x3e18>
   1554c:	ldr	r0, [fp, #8]
   15550:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15554:	add	r0, r0, r1
   15558:	str	r0, [fp, #-56]	; 0xffffffc8
   1555c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15560:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15564:	cmp	r0, r1
   15568:	beq	15a18 <__assert_fail@plt+0x42e4>
   1556c:	movw	r0, #0
   15570:	strb	r0, [fp, #-65]	; 0xffffffbf
   15574:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15578:	movw	r1, #20820	; 0x5154
   1557c:	movt	r1, #3
   15580:	ldr	r1, [r1]
   15584:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15588:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1558c:	sub	r2, r2, r3
   15590:	bl	11638 <memchr@plt>
   15594:	str	r0, [fp, #-72]	; 0xffffffb8
   15598:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1559c:	movw	r1, #0
   155a0:	cmp	r0, r1
   155a4:	beq	155c0 <__assert_fail@plt+0x3e8c>
   155a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   155ac:	add	r0, r0, #1
   155b0:	str	r0, [fp, #-72]	; 0xffffffb8
   155b4:	movw	r0, #1
   155b8:	strb	r0, [fp, #-65]	; 0xffffffbf
   155bc:	b	155c8 <__assert_fail@plt+0x3e94>
   155c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   155c4:	str	r0, [fp, #-72]	; 0xffffffb8
   155c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   155cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   155d0:	sub	r0, r0, r1
   155d4:	str	r0, [fp, #-64]	; 0xffffffc0
   155d8:	ldr	r0, [fp, #-16]
   155dc:	ldr	r1, [fp, #-12]
   155e0:	orr	r0, r0, r1
   155e4:	cmp	r0, #0
   155e8:	beq	15794 <__assert_fail@plt+0x4060>
   155ec:	b	155f0 <__assert_fail@plt+0x3ebc>
   155f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   155f8:	ldr	r2, [fp, #-16]
   155fc:	ldr	r3, [fp, #-12]
   15600:	eor	r1, r1, r3
   15604:	eor	r0, r0, r2
   15608:	orr	r0, r0, r1
   1560c:	cmp	r0, #0
   15610:	bne	15684 <__assert_fail@plt+0x3f50>
   15614:	b	15618 <__assert_fail@plt+0x3ee4>
   15618:	movw	r0, #21376	; 0x5380
   1561c:	movt	r0, #3
   15620:	ldrb	r0, [r0]
   15624:	tst	r0, #1
   15628:	beq	15684 <__assert_fail@plt+0x3f50>
   1562c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15630:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15634:	movw	r0, #1
   15638:	bl	177f0 <__assert_fail@plt+0x60bc>
   1563c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15640:	cmp	r0, r1
   15644:	beq	15680 <__assert_fail@plt+0x3f4c>
   15648:	bl	115f0 <__errno_location@plt>
   1564c:	ldr	r1, [r0]
   15650:	movw	r0, #15654	; 0x3d26
   15654:	movt	r0, #2
   15658:	str	r1, [sp, #68]	; 0x44
   1565c:	bl	11590 <gettext@plt>
   15660:	movw	r1, #1
   15664:	str	r0, [sp, #64]	; 0x40
   15668:	mov	r0, r1
   1566c:	ldr	r1, [sp, #68]	; 0x44
   15670:	movw	r2, #15774	; 0x3d9e
   15674:	movt	r2, #2
   15678:	ldr	r3, [sp, #64]	; 0x40
   1567c:	bl	1150c <error@plt>
   15680:	b	1571c <__assert_fail@plt+0x3fe8>
   15684:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15688:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1568c:	ldr	r2, [fp, #-16]
   15690:	ldr	r3, [fp, #-12]
   15694:	eor	r1, r1, r3
   15698:	eor	r0, r0, r2
   1569c:	orr	r0, r0, r1
   156a0:	cmp	r0, #0
   156a4:	bne	15718 <__assert_fail@plt+0x3fe4>
   156a8:	b	156ac <__assert_fail@plt+0x3f78>
   156ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   156b0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   156b4:	movw	r2, #21348	; 0x5364
   156b8:	movt	r2, #3
   156bc:	ldr	r3, [r2]
   156c0:	movw	r2, #1
   156c4:	bl	1144c <fwrite_unlocked@plt>
   156c8:	cmp	r0, #1
   156cc:	beq	15718 <__assert_fail@plt+0x3fe4>
   156d0:	movw	r0, #21348	; 0x5364
   156d4:	movt	r0, #3
   156d8:	ldr	r0, [r0]
   156dc:	bl	116c8 <clearerr_unlocked@plt>
   156e0:	bl	115f0 <__errno_location@plt>
   156e4:	ldr	r1, [r0]
   156e8:	movw	r0, #15654	; 0x3d26
   156ec:	movt	r0, #2
   156f0:	str	r1, [sp, #60]	; 0x3c
   156f4:	bl	11590 <gettext@plt>
   156f8:	movw	r1, #1
   156fc:	str	r0, [sp, #56]	; 0x38
   15700:	mov	r0, r1
   15704:	ldr	r1, [sp, #60]	; 0x3c
   15708:	movw	r2, #15774	; 0x3d9e
   1570c:	movt	r2, #2
   15710:	ldr	r3, [sp, #56]	; 0x38
   15714:	bl	1150c <error@plt>
   15718:	b	1571c <__assert_fail@plt+0x3fe8>
   1571c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15720:	tst	r0, #1
   15724:	beq	15790 <__assert_fail@plt+0x405c>
   15728:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1572c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15730:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15734:	ldr	r3, [fp, #-20]	; 0xffffffec
   15738:	eor	r1, r1, r3
   1573c:	eor	r0, r0, r2
   15740:	orr	r0, r0, r1
   15744:	cmp	r0, #0
   15748:	bne	15764 <__assert_fail@plt+0x4030>
   1574c:	b	15750 <__assert_fail@plt+0x401c>
   15750:	mov	r0, #0
   15754:	mov	r1, #1
   15758:	str	r1, [sp, #52]	; 0x34
   1575c:	str	r0, [sp, #48]	; 0x30
   15760:	b	15780 <__assert_fail@plt+0x404c>
   15764:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15768:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1576c:	adds	r0, r0, #1
   15770:	adc	r1, r1, #0
   15774:	str	r0, [sp, #52]	; 0x34
   15778:	str	r1, [sp, #48]	; 0x30
   1577c:	b	15780 <__assert_fail@plt+0x404c>
   15780:	ldr	r0, [sp, #48]	; 0x30
   15784:	ldr	r1, [sp, #52]	; 0x34
   15788:	str	r1, [fp, #-48]	; 0xffffffd0
   1578c:	str	r0, [fp, #-44]	; 0xffffffd4
   15790:	b	15a0c <__assert_fail@plt+0x42d8>
   15794:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15798:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1579c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   157a0:	bl	16df4 <__assert_fail@plt+0x56c0>
   157a4:	and	r0, r0, #1
   157a8:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   157ac:	and	r1, r1, #1
   157b0:	orr	r0, r1, r0
   157b4:	cmp	r0, #0
   157b8:	movw	r0, #0
   157bc:	movne	r0, #1
   157c0:	and	r0, r0, #1
   157c4:	strb	r0, [fp, #-27]	; 0xffffffe5
   157c8:	movw	r0, #21376	; 0x5380
   157cc:	movt	r0, #3
   157d0:	ldrb	r0, [r0]
   157d4:	tst	r0, #1
   157d8:	beq	15868 <__assert_fail@plt+0x4134>
   157dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   157e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   157e4:	add	r0, r0, r1, lsl #4
   157e8:	ldr	r0, [r0, #4]
   157ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   157f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   157f4:	bl	177f0 <__assert_fail@plt+0x60bc>
   157f8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   157fc:	cmp	r0, r1
   15800:	beq	15864 <__assert_fail@plt+0x4130>
   15804:	bl	115f0 <__errno_location@plt>
   15808:	ldr	r0, [r0]
   1580c:	bl	16da8 <__assert_fail@plt+0x5674>
   15810:	tst	r0, #1
   15814:	bne	15864 <__assert_fail@plt+0x4130>
   15818:	bl	115f0 <__errno_location@plt>
   1581c:	ldr	r1, [r0]
   15820:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15824:	ldr	lr, [fp, #-32]	; 0xffffffe0
   15828:	add	r0, r0, lr, lsl #4
   1582c:	ldr	r2, [r0]
   15830:	movw	r0, #0
   15834:	movw	lr, #3
   15838:	str	r1, [sp, #44]	; 0x2c
   1583c:	mov	r1, lr
   15840:	bl	19dfc <__assert_fail@plt+0x86c8>
   15844:	movw	r1, #1
   15848:	str	r0, [sp, #40]	; 0x28
   1584c:	mov	r0, r1
   15850:	ldr	r1, [sp, #44]	; 0x2c
   15854:	movw	r2, #15774	; 0x3d9e
   15858:	movt	r2, #2
   1585c:	ldr	r3, [sp, #40]	; 0x28
   15860:	bl	1150c <error@plt>
   15864:	b	158f4 <__assert_fail@plt+0x41c0>
   15868:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1586c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15870:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15874:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15878:	add	r2, r2, r3, lsl #4
   1587c:	ldr	r3, [r2, #8]
   15880:	movw	r2, #1
   15884:	bl	1144c <fwrite_unlocked@plt>
   15888:	cmp	r0, #1
   1588c:	beq	158f0 <__assert_fail@plt+0x41bc>
   15890:	bl	115f0 <__errno_location@plt>
   15894:	ldr	r0, [r0]
   15898:	bl	16da8 <__assert_fail@plt+0x5674>
   1589c:	tst	r0, #1
   158a0:	bne	158f0 <__assert_fail@plt+0x41bc>
   158a4:	bl	115f0 <__errno_location@plt>
   158a8:	ldr	r1, [r0]
   158ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   158b0:	ldr	lr, [fp, #-32]	; 0xffffffe0
   158b4:	add	r0, r0, lr, lsl #4
   158b8:	ldr	r2, [r0]
   158bc:	movw	r0, #0
   158c0:	movw	lr, #3
   158c4:	str	r1, [sp, #36]	; 0x24
   158c8:	mov	r1, lr
   158cc:	bl	19dfc <__assert_fail@plt+0x86c8>
   158d0:	movw	r1, #1
   158d4:	str	r0, [sp, #32]
   158d8:	mov	r0, r1
   158dc:	ldr	r1, [sp, #36]	; 0x24
   158e0:	movw	r2, #15774	; 0x3d9e
   158e4:	movt	r2, #2
   158e8:	ldr	r3, [sp, #32]
   158ec:	bl	1150c <error@plt>
   158f0:	b	158f4 <__assert_fail@plt+0x41c0>
   158f4:	bl	115f0 <__errno_location@plt>
   158f8:	ldr	r0, [r0]
   158fc:	bl	16da8 <__assert_fail@plt+0x5674>
   15900:	tst	r0, #1
   15904:	bne	15910 <__assert_fail@plt+0x41dc>
   15908:	movw	r0, #1
   1590c:	strb	r0, [fp, #-26]	; 0xffffffe6
   15910:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   15914:	tst	r0, #1
   15918:	beq	159ac <__assert_fail@plt+0x4278>
   1591c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15920:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15924:	add	r0, r0, r1, lsl #4
   15928:	ldr	r0, [r0, #8]
   1592c:	bl	173dc <__assert_fail@plt+0x5ca8>
   15930:	cmp	r0, #0
   15934:	beq	15984 <__assert_fail@plt+0x4250>
   15938:	bl	115f0 <__errno_location@plt>
   1593c:	ldr	r1, [r0]
   15940:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15944:	ldr	lr, [fp, #-32]	; 0xffffffe0
   15948:	add	r0, r0, lr, lsl #4
   1594c:	ldr	r2, [r0]
   15950:	movw	r0, #0
   15954:	movw	lr, #3
   15958:	str	r1, [sp, #28]
   1595c:	mov	r1, lr
   15960:	bl	19dfc <__assert_fail@plt+0x86c8>
   15964:	movw	r1, #1
   15968:	str	r0, [sp, #24]
   1596c:	mov	r0, r1
   15970:	ldr	r1, [sp, #28]
   15974:	movw	r2, #15774	; 0x3d9e
   15978:	movt	r2, #2
   1597c:	ldr	r3, [sp, #24]
   15980:	bl	1150c <error@plt>
   15984:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15988:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1598c:	add	r0, r0, r1, lsl #4
   15990:	mov	r1, #0
   15994:	str	r1, [r0, #8]
   15998:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1599c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   159a0:	add	r0, r0, r1, lsl #4
   159a4:	mvn	r1, #1
   159a8:	str	r1, [r0, #4]
   159ac:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   159b0:	tst	r0, #1
   159b4:	beq	15a08 <__assert_fail@plt+0x42d4>
   159b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159bc:	add	r0, r0, #1
   159c0:	str	r0, [fp, #-32]	; 0xffffffe0
   159c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   159cc:	eor	r0, r0, r1
   159d0:	orr	r0, r0, r2
   159d4:	cmp	r0, #0
   159d8:	bne	15a08 <__assert_fail@plt+0x42d4>
   159dc:	b	159e0 <__assert_fail@plt+0x42ac>
   159e0:	movw	r0, #1
   159e4:	strb	r0, [fp, #-25]	; 0xffffffe7
   159e8:	ldrb	r0, [fp, #-26]	; 0xffffffe6
   159ec:	tst	r0, #1
   159f0:	bne	159f8 <__assert_fail@plt+0x42c4>
   159f4:	b	15a20 <__assert_fail@plt+0x42ec>
   159f8:	movw	r0, #0
   159fc:	strb	r0, [fp, #-26]	; 0xffffffe6
   15a00:	movw	r0, #0
   15a04:	str	r0, [fp, #-32]	; 0xffffffe0
   15a08:	b	15a0c <__assert_fail@plt+0x42d8>
   15a0c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15a10:	str	r0, [fp, #-52]	; 0xffffffcc
   15a14:	b	1555c <__assert_fail@plt+0x3e28>
   15a18:	b	154c8 <__assert_fail@plt+0x3d94>
   15a1c:	b	15a20 <__assert_fail@plt+0x42ec>
   15a20:	ldr	r0, [fp, #-16]
   15a24:	ldr	r1, [fp, #-12]
   15a28:	orr	r0, r0, r1
   15a2c:	cmp	r0, #0
   15a30:	bne	15b70 <__assert_fail@plt+0x443c>
   15a34:	b	15a38 <__assert_fail@plt+0x4304>
   15a38:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   15a3c:	tst	r0, #1
   15a40:	beq	15a58 <__assert_fail@plt+0x4324>
   15a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a48:	ldr	r1, [fp, #-20]	; 0xffffffec
   15a4c:	str	r0, [sp, #20]
   15a50:	str	r1, [sp, #16]
   15a54:	b	15a6c <__assert_fail@plt+0x4338>
   15a58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a5c:	mov	r1, #0
   15a60:	str	r0, [sp, #20]
   15a64:	str	r1, [sp, #16]
   15a68:	b	15a6c <__assert_fail@plt+0x4338>
   15a6c:	ldr	r0, [sp, #16]
   15a70:	ldr	r1, [sp, #20]
   15a74:	str	r1, [fp, #-76]	; 0xffffffb4
   15a78:	movw	r1, #0
   15a7c:	str	r1, [fp, #-32]	; 0xffffffe0
   15a80:	str	r0, [sp, #12]
   15a84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15a90:	subs	r0, r0, r1
   15a94:	rscs	r1, r2, #0
   15a98:	str	r0, [sp, #8]
   15a9c:	str	r1, [sp, #4]
   15aa0:	bcs	15b6c <__assert_fail@plt+0x4438>
   15aa4:	b	15aa8 <__assert_fail@plt+0x4374>
   15aa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15aac:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15ab0:	cmp	r0, r1
   15ab4:	bcc	15b00 <__assert_fail@plt+0x43cc>
   15ab8:	movw	r0, #21384	; 0x5388
   15abc:	movt	r0, #3
   15ac0:	ldrb	r0, [r0]
   15ac4:	tst	r0, #1
   15ac8:	bne	15b00 <__assert_fail@plt+0x43cc>
   15acc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ad0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15ad4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ad8:	bl	16df4 <__assert_fail@plt+0x56c0>
   15adc:	and	r0, r0, #1
   15ae0:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   15ae4:	and	r1, r1, #1
   15ae8:	orr	r0, r1, r0
   15aec:	cmp	r0, #0
   15af0:	movw	r0, #0
   15af4:	movne	r0, #1
   15af8:	and	r0, r0, #1
   15afc:	strb	r0, [fp, #-27]	; 0xffffffe5
   15b00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15b04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b08:	add	r0, r0, r1, lsl #4
   15b0c:	ldr	r0, [r0, #4]
   15b10:	cmp	r0, #0
   15b14:	blt	15b48 <__assert_fail@plt+0x4414>
   15b18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15b1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b20:	add	r0, r0, r1, lsl #4
   15b24:	ldr	r1, [r0, #4]
   15b28:	ldr	r2, [r0, #8]
   15b2c:	ldr	r3, [r0, #12]
   15b30:	ldr	r0, [r0]
   15b34:	str	r0, [sp]
   15b38:	mov	r0, r2
   15b3c:	mov	r2, r3
   15b40:	ldr	r3, [sp]
   15b44:	bl	15b78 <__assert_fail@plt+0x4444>
   15b48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15b4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b50:	add	r0, r0, r1, lsl #4
   15b54:	mvn	r1, #1
   15b58:	str	r1, [r0, #4]
   15b5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b60:	add	r0, r0, #1
   15b64:	str	r0, [fp, #-32]	; 0xffffffe0
   15b68:	b	15a84 <__assert_fail@plt+0x4350>
   15b6c:	b	15b70 <__assert_fail@plt+0x443c>
   15b70:	sub	sp, fp, #8
   15b74:	pop	{r4, sl, fp, pc}
   15b78:	push	{r4, sl, fp, lr}
   15b7c:	add	fp, sp, #8
   15b80:	sub	sp, sp, #136	; 0x88
   15b84:	str	r0, [fp, #-12]
   15b88:	str	r1, [fp, #-16]
   15b8c:	str	r2, [fp, #-20]	; 0xffffffec
   15b90:	str	r3, [fp, #-24]	; 0xffffffe8
   15b94:	ldr	r0, [fp, #-12]
   15b98:	movw	r1, #0
   15b9c:	cmp	r0, r1
   15ba0:	beq	15c08 <__assert_fail@plt+0x44d4>
   15ba4:	ldr	r0, [fp, #-12]
   15ba8:	bl	173dc <__assert_fail@plt+0x5ca8>
   15bac:	cmp	r0, #0
   15bb0:	beq	15c08 <__assert_fail@plt+0x44d4>
   15bb4:	bl	115f0 <__errno_location@plt>
   15bb8:	ldr	r0, [r0]
   15bbc:	bl	16da8 <__assert_fail@plt+0x5674>
   15bc0:	tst	r0, #1
   15bc4:	bne	15c08 <__assert_fail@plt+0x44d4>
   15bc8:	bl	115f0 <__errno_location@plt>
   15bcc:	ldr	r1, [r0]
   15bd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15bd4:	movw	r0, #0
   15bd8:	movw	lr, #3
   15bdc:	str	r1, [fp, #-64]	; 0xffffffc0
   15be0:	mov	r1, lr
   15be4:	bl	19dfc <__assert_fail@plt+0x86c8>
   15be8:	movw	r1, #1
   15bec:	str	r0, [fp, #-68]	; 0xffffffbc
   15bf0:	mov	r0, r1
   15bf4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15bf8:	movw	r2, #15774	; 0x3d9e
   15bfc:	movt	r2, #2
   15c00:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15c04:	bl	1150c <error@plt>
   15c08:	ldr	r0, [fp, #-16]
   15c0c:	cmp	r0, #0
   15c10:	blt	15d08 <__assert_fail@plt+0x45d4>
   15c14:	ldr	r0, [fp, #-12]
   15c18:	movw	r1, #0
   15c1c:	cmp	r0, r1
   15c20:	bne	15c74 <__assert_fail@plt+0x4540>
   15c24:	ldr	r0, [fp, #-16]
   15c28:	bl	1171c <close@plt>
   15c2c:	cmp	r0, #0
   15c30:	bge	15c74 <__assert_fail@plt+0x4540>
   15c34:	bl	115f0 <__errno_location@plt>
   15c38:	ldr	r1, [r0]
   15c3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c40:	movw	r0, #0
   15c44:	movw	lr, #3
   15c48:	str	r1, [sp, #72]	; 0x48
   15c4c:	mov	r1, lr
   15c50:	bl	19dfc <__assert_fail@plt+0x86c8>
   15c54:	movw	r1, #1
   15c58:	str	r0, [sp, #68]	; 0x44
   15c5c:	mov	r0, r1
   15c60:	ldr	r1, [sp, #72]	; 0x48
   15c64:	movw	r2, #15774	; 0x3d9e
   15c68:	movt	r2, #2
   15c6c:	ldr	r3, [sp, #68]	; 0x44
   15c70:	bl	1150c <error@plt>
   15c74:	movw	r0, #0
   15c78:	str	r0, [fp, #-28]	; 0xffffffe4
   15c7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15c80:	movw	r1, #21788	; 0x551c
   15c84:	movt	r1, #3
   15c88:	ldr	r1, [r1]
   15c8c:	cmp	r0, r1
   15c90:	bcs	15d04 <__assert_fail@plt+0x45d0>
   15c94:	movw	r0, #21792	; 0x5520
   15c98:	movt	r0, #3
   15c9c:	ldr	r0, [r0]
   15ca0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ca4:	add	r0, r0, r1, lsl #2
   15ca8:	ldr	r0, [r0]
   15cac:	ldr	r1, [fp, #-16]
   15cb0:	cmp	r0, r1
   15cb4:	bne	15cf0 <__assert_fail@plt+0x45bc>
   15cb8:	movw	r0, #21792	; 0x5520
   15cbc:	movt	r0, #3
   15cc0:	ldr	r1, [r0]
   15cc4:	movw	r2, #21788	; 0x551c
   15cc8:	movt	r2, #3
   15ccc:	ldr	r3, [r2]
   15cd0:	sub	r3, r3, #1
   15cd4:	str	r3, [r2]
   15cd8:	ldr	r1, [r1, r3, lsl #2]
   15cdc:	ldr	r0, [r0]
   15ce0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15ce4:	add	r0, r0, r2, lsl #2
   15ce8:	str	r1, [r0]
   15cec:	b	15d04 <__assert_fail@plt+0x45d0>
   15cf0:	b	15cf4 <__assert_fail@plt+0x45c0>
   15cf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15cf8:	add	r0, r0, #1
   15cfc:	str	r0, [fp, #-28]	; 0xffffffe4
   15d00:	b	15c7c <__assert_fail@plt+0x4548>
   15d04:	b	15d08 <__assert_fail@plt+0x45d4>
   15d08:	ldr	r0, [fp, #-20]	; 0xffffffec
   15d0c:	cmp	r0, #0
   15d10:	ble	15f40 <__assert_fail@plt+0x480c>
   15d14:	movw	r0, #0
   15d18:	str	r0, [fp, #-32]	; 0xffffffe0
   15d1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15d20:	str	r0, [sp, #64]	; 0x40
   15d24:	mov	r0, r1
   15d28:	sub	r1, fp, #32
   15d2c:	ldr	r2, [sp, #64]	; 0x40
   15d30:	bl	114c4 <waitpid@plt>
   15d34:	cmn	r0, #1
   15d38:	bne	15d7c <__assert_fail@plt+0x4648>
   15d3c:	bl	115f0 <__errno_location@plt>
   15d40:	ldr	r0, [r0]
   15d44:	cmp	r0, #10
   15d48:	beq	15d7c <__assert_fail@plt+0x4648>
   15d4c:	bl	115f0 <__errno_location@plt>
   15d50:	ldr	r1, [r0]
   15d54:	movw	r0, #15668	; 0x3d34
   15d58:	movt	r0, #2
   15d5c:	str	r1, [sp, #60]	; 0x3c
   15d60:	bl	11590 <gettext@plt>
   15d64:	movw	r1, #1
   15d68:	str	r0, [sp, #56]	; 0x38
   15d6c:	mov	r0, r1
   15d70:	ldr	r1, [sp, #60]	; 0x3c
   15d74:	ldr	r2, [sp, #56]	; 0x38
   15d78:	bl	1150c <error@plt>
   15d7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d80:	and	r0, r0, #127	; 0x7f
   15d84:	add	r0, r0, #1
   15d88:	sxtb	r0, r0
   15d8c:	asr	r0, r0, #1
   15d90:	cmp	r0, #0
   15d94:	ble	15e60 <__assert_fail@plt+0x472c>
   15d98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d9c:	and	r0, r0, #127	; 0x7f
   15da0:	str	r0, [fp, #-36]	; 0xffffffdc
   15da4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15da8:	cmp	r0, #13
   15dac:	beq	15e5c <__assert_fail@plt+0x4728>
   15db0:	sub	r1, fp, #55	; 0x37
   15db4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15db8:	bl	1a550 <__assert_fail@plt+0x8e1c>
   15dbc:	cmp	r0, #0
   15dc0:	beq	15ddc <__assert_fail@plt+0x46a8>
   15dc4:	sub	r0, fp, #55	; 0x37
   15dc8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15dcc:	movw	r1, #15694	; 0x3d4e
   15dd0:	movt	r1, #2
   15dd4:	bl	116bc <sprintf@plt>
   15dd8:	str	r0, [sp, #52]	; 0x34
   15ddc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15de0:	add	r0, r0, #128	; 0x80
   15de4:	movw	r1, #15697	; 0x3d51
   15de8:	movt	r1, #2
   15dec:	str	r0, [sp, #48]	; 0x30
   15df0:	mov	r0, r1
   15df4:	bl	11590 <gettext@plt>
   15df8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15dfc:	movw	r1, #0
   15e00:	str	r0, [sp, #44]	; 0x2c
   15e04:	mov	r0, r1
   15e08:	movw	r1, #3
   15e0c:	bl	19dfc <__assert_fail@plt+0x86c8>
   15e10:	sub	r1, fp, #55	; 0x37
   15e14:	movw	r2, #21388	; 0x538c
   15e18:	movt	r2, #3
   15e1c:	ldr	r2, [r2]
   15e20:	ldr	lr, [sp, #48]	; 0x30
   15e24:	str	r0, [sp, #40]	; 0x28
   15e28:	mov	r0, lr
   15e2c:	movw	r3, #0
   15e30:	str	r1, [sp, #36]	; 0x24
   15e34:	mov	r1, r3
   15e38:	ldr	r3, [sp, #44]	; 0x2c
   15e3c:	str	r2, [sp, #32]
   15e40:	mov	r2, r3
   15e44:	ldr	r3, [sp, #40]	; 0x28
   15e48:	ldr	ip, [sp, #36]	; 0x24
   15e4c:	str	ip, [sp]
   15e50:	ldr	r4, [sp, #32]
   15e54:	str	r4, [sp, #4]
   15e58:	bl	1150c <error@plt>
   15e5c:	b	15f3c <__assert_fail@plt+0x4808>
   15e60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e64:	and	r0, r0, #127	; 0x7f
   15e68:	cmp	r0, #0
   15e6c:	bne	15f0c <__assert_fail@plt+0x47d8>
   15e70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e74:	and	r0, r0, #65280	; 0xff00
   15e78:	asr	r0, r0, #8
   15e7c:	str	r0, [fp, #-60]	; 0xffffffc4
   15e80:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15e84:	cmp	r0, #0
   15e88:	beq	15f08 <__assert_fail@plt+0x47d4>
   15e8c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15e90:	movw	r1, #15738	; 0x3d7a
   15e94:	movt	r1, #2
   15e98:	str	r0, [sp, #28]
   15e9c:	mov	r0, r1
   15ea0:	bl	11590 <gettext@plt>
   15ea4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ea8:	movw	r1, #0
   15eac:	str	r0, [sp, #24]
   15eb0:	mov	r0, r1
   15eb4:	movw	r1, #3
   15eb8:	bl	19dfc <__assert_fail@plt+0x86c8>
   15ebc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15ec0:	movw	r2, #21388	; 0x538c
   15ec4:	movt	r2, #3
   15ec8:	ldr	r2, [r2]
   15ecc:	ldr	lr, [sp, #28]
   15ed0:	str	r0, [sp, #20]
   15ed4:	mov	r0, lr
   15ed8:	movw	r3, #0
   15edc:	str	r1, [sp, #16]
   15ee0:	mov	r1, r3
   15ee4:	ldr	r3, [sp, #24]
   15ee8:	str	r2, [sp, #12]
   15eec:	mov	r2, r3
   15ef0:	ldr	r3, [sp, #20]
   15ef4:	ldr	ip, [sp, #16]
   15ef8:	str	ip, [sp]
   15efc:	ldr	r4, [sp, #12]
   15f00:	str	r4, [sp, #4]
   15f04:	bl	1150c <error@plt>
   15f08:	b	15f38 <__assert_fail@plt+0x4804>
   15f0c:	movw	r0, #15777	; 0x3da1
   15f10:	movt	r0, #2
   15f14:	bl	11590 <gettext@plt>
   15f18:	ldr	lr, [fp, #-32]	; 0xffffffe0
   15f1c:	add	r3, lr, #0
   15f20:	movw	lr, #1
   15f24:	str	r0, [sp, #8]
   15f28:	mov	r0, lr
   15f2c:	movw	r1, #0
   15f30:	ldr	r2, [sp, #8]
   15f34:	bl	1150c <error@plt>
   15f38:	b	15f3c <__assert_fail@plt+0x4808>
   15f3c:	b	15f40 <__assert_fail@plt+0x480c>
   15f40:	sub	sp, fp, #8
   15f44:	pop	{r4, sl, fp, pc}
   15f48:	sub	sp, sp, #8
   15f4c:	str	r0, [sp, #4]
   15f50:	ldr	r0, [sp, #4]
   15f54:	ldr	r0, [r0, #16]
   15f58:	and	r0, r0, #61440	; 0xf000
   15f5c:	cmp	r0, #32768	; 0x8000
   15f60:	movw	r0, #1
   15f64:	str	r0, [sp]
   15f68:	beq	15fb8 <__assert_fail@plt+0x4884>
   15f6c:	ldr	r0, [sp, #4]
   15f70:	ldr	r0, [r0, #16]
   15f74:	and	r0, r0, #61440	; 0xf000
   15f78:	cmp	r0, #40960	; 0xa000
   15f7c:	movw	r0, #1
   15f80:	str	r0, [sp]
   15f84:	beq	15fb8 <__assert_fail@plt+0x4884>
   15f88:	ldr	r0, [sp, #4]
   15f8c:	ldr	r0, [r0, #16]
   15f90:	ldr	r1, [sp, #4]
   15f94:	ldr	r1, [r1, #16]
   15f98:	sub	r0, r0, r1
   15f9c:	cmp	r0, #0
   15fa0:	movw	r0, #1
   15fa4:	str	r0, [sp]
   15fa8:	bne	15fb8 <__assert_fail@plt+0x4884>
   15fac:	movw	r0, #0
   15fb0:	str	r0, [sp]
   15fb4:	b	15fb8 <__assert_fail@plt+0x4884>
   15fb8:	ldr	r0, [sp]
   15fbc:	and	r0, r0, #1
   15fc0:	add	sp, sp, #8
   15fc4:	bx	lr
   15fc8:	push	{fp, lr}
   15fcc:	mov	fp, sp
   15fd0:	sub	sp, sp, #32
   15fd4:	and	r0, r0, #1
   15fd8:	strb	r0, [fp, #-2]
   15fdc:	str	r1, [fp, #-8]
   15fe0:	str	r2, [fp, #-12]
   15fe4:	ldrb	r0, [fp, #-2]
   15fe8:	tst	r0, #1
   15fec:	beq	160d4 <__assert_fail@plt+0x49a0>
   15ff0:	ldr	r0, [fp, #-8]
   15ff4:	movw	r1, #0
   15ff8:	cmp	r0, r1
   15ffc:	bne	16030 <__assert_fail@plt+0x48fc>
   16000:	ldr	r0, [fp, #-12]
   16004:	cmp	r0, #0
   16008:	bne	16030 <__assert_fail@plt+0x48fc>
   1600c:	movw	r0, #21384	; 0x5388
   16010:	movt	r0, #3
   16014:	ldrb	r0, [r0]
   16018:	tst	r0, #1
   1601c:	beq	16030 <__assert_fail@plt+0x48fc>
   16020:	movw	r0, #1
   16024:	and	r0, r0, #1
   16028:	strb	r0, [fp, #-1]
   1602c:	b	16170 <__assert_fail@plt+0x4a3c>
   16030:	movw	r0, #20828	; 0x515c
   16034:	movt	r0, #3
   16038:	ldr	r1, [r0]
   1603c:	movw	r0, #21760	; 0x5500
   16040:	movt	r0, #3
   16044:	ldr	r2, [r0]
   16048:	movw	r0, #21764	; 0x5504
   1604c:	movt	r0, #3
   16050:	ldr	r3, [r0]
   16054:	movw	r0, #0
   16058:	bl	15b78 <__assert_fail@plt+0x4444>
   1605c:	bl	16180 <__assert_fail@plt+0x4a4c>
   16060:	movw	r0, #21764	; 0x5504
   16064:	movt	r0, #3
   16068:	ldr	r0, [r0]
   1606c:	bl	1670c <__assert_fail@plt+0x4fd8>
   16070:	movw	r1, #20828	; 0x515c
   16074:	movt	r1, #3
   16078:	str	r0, [r1]
   1607c:	ldr	r0, [r1]
   16080:	cmp	r0, #0
   16084:	bge	160d0 <__assert_fail@plt+0x499c>
   16088:	bl	115f0 <__errno_location@plt>
   1608c:	ldr	r1, [r0]
   16090:	movw	r0, #21764	; 0x5504
   16094:	movt	r0, #3
   16098:	ldr	r2, [r0]
   1609c:	movw	r0, #0
   160a0:	movw	lr, #3
   160a4:	str	r1, [sp, #16]
   160a8:	mov	r1, lr
   160ac:	bl	19dfc <__assert_fail@plt+0x86c8>
   160b0:	movw	r1, #1
   160b4:	str	r0, [sp, #12]
   160b8:	mov	r0, r1
   160bc:	ldr	r1, [sp, #16]
   160c0:	movw	r2, #15774	; 0x3d9e
   160c4:	movt	r2, #2
   160c8:	ldr	r3, [sp, #12]
   160cc:	bl	1150c <error@plt>
   160d0:	b	160d4 <__assert_fail@plt+0x49a0>
   160d4:	movw	r0, #20828	; 0x515c
   160d8:	movt	r0, #3
   160dc:	ldr	r0, [r0]
   160e0:	ldr	r1, [fp, #-8]
   160e4:	ldr	r2, [fp, #-12]
   160e8:	bl	177f0 <__assert_fail@plt+0x60bc>
   160ec:	ldr	r1, [fp, #-12]
   160f0:	cmp	r0, r1
   160f4:	bne	16108 <__assert_fail@plt+0x49d4>
   160f8:	movw	r0, #1
   160fc:	and	r0, r0, #1
   16100:	strb	r0, [fp, #-1]
   16104:	b	16170 <__assert_fail@plt+0x4a3c>
   16108:	bl	115f0 <__errno_location@plt>
   1610c:	ldr	r0, [r0]
   16110:	bl	16da8 <__assert_fail@plt+0x5674>
   16114:	tst	r0, #1
   16118:	bne	16164 <__assert_fail@plt+0x4a30>
   1611c:	bl	115f0 <__errno_location@plt>
   16120:	ldr	r1, [r0]
   16124:	movw	r0, #21764	; 0x5504
   16128:	movt	r0, #3
   1612c:	ldr	r2, [r0]
   16130:	movw	r0, #0
   16134:	movw	lr, #3
   16138:	str	r1, [sp, #8]
   1613c:	mov	r1, lr
   16140:	bl	19dfc <__assert_fail@plt+0x86c8>
   16144:	movw	r1, #1
   16148:	str	r0, [sp, #4]
   1614c:	mov	r0, r1
   16150:	ldr	r1, [sp, #8]
   16154:	movw	r2, #15774	; 0x3d9e
   16158:	movt	r2, #2
   1615c:	ldr	r3, [sp, #4]
   16160:	bl	1150c <error@plt>
   16164:	movw	r0, #0
   16168:	and	r0, r0, #1
   1616c:	strb	r0, [fp, #-1]
   16170:	ldrb	r0, [fp, #-1]
   16174:	and	r0, r0, #1
   16178:	mov	sp, fp
   1617c:	pop	{fp, pc}
   16180:	push	{fp, lr}
   16184:	mov	fp, sp
   16188:	sub	sp, sp, #40	; 0x28
   1618c:	movw	r0, #21764	; 0x5504
   16190:	movt	r0, #3
   16194:	ldr	r0, [r0]
   16198:	movw	r1, #0
   1619c:	cmp	r0, r1
   161a0:	bne	1658c <__assert_fail@plt+0x4e58>
   161a4:	b	161a8 <__assert_fail@plt+0x4a74>
   161a8:	movw	r0, #21776	; 0x5510
   161ac:	movt	r0, #3
   161b0:	ldr	r0, [r0]
   161b4:	cmp	r0, #0
   161b8:	movw	r0, #0
   161bc:	movne	r0, #1
   161c0:	mvn	r1, #0
   161c4:	eor	r0, r0, r1
   161c8:	eor	r0, r0, r1
   161cc:	and	r0, r0, #1
   161d0:	strb	r0, [fp, #-1]
   161d4:	ldrb	r0, [fp, #-1]
   161d8:	tst	r0, #1
   161dc:	bne	1627c <__assert_fail@plt+0x4b48>
   161e0:	movw	r0, #21364	; 0x5374
   161e4:	movt	r0, #3
   161e8:	ldr	r0, [r0]
   161ec:	bl	1159c <strlen@plt>
   161f0:	movw	lr, #21772	; 0x550c
   161f4:	movt	lr, #3
   161f8:	str	r0, [lr]
   161fc:	movw	r0, #21372	; 0x537c
   16200:	movt	r0, #3
   16204:	ldr	r0, [r0]
   16208:	movw	lr, #0
   1620c:	cmp	r0, lr
   16210:	beq	1622c <__assert_fail@plt+0x4af8>
   16214:	movw	r0, #21372	; 0x537c
   16218:	movt	r0, #3
   1621c:	ldr	r0, [r0]
   16220:	bl	1159c <strlen@plt>
   16224:	str	r0, [sp, #20]
   16228:	b	16238 <__assert_fail@plt+0x4b04>
   1622c:	movw	r0, #0
   16230:	str	r0, [sp, #20]
   16234:	b	16238 <__assert_fail@plt+0x4b04>
   16238:	ldr	r0, [sp, #20]
   1623c:	movw	r1, #21780	; 0x5514
   16240:	movt	r1, #3
   16244:	str	r0, [r1]
   16248:	movw	r0, #21772	; 0x550c
   1624c:	movt	r0, #3
   16250:	ldr	r0, [r0]
   16254:	movw	r2, #21368	; 0x5378
   16258:	movt	r2, #3
   1625c:	ldr	r2, [r2]
   16260:	add	r0, r0, r2
   16264:	ldr	r1, [r1]
   16268:	add	r0, r0, r1
   1626c:	movw	r1, #21776	; 0x5510
   16270:	movt	r1, #3
   16274:	str	r0, [r1]
   16278:	b	162a4 <__assert_fail@plt+0x4b70>
   1627c:	movw	r0, #21776	; 0x5510
   16280:	movt	r0, #3
   16284:	ldr	r1, [r0]
   16288:	add	r1, r1, #2
   1628c:	str	r1, [r0]
   16290:	movw	r0, #21368	; 0x5378
   16294:	movt	r0, #3
   16298:	ldr	r1, [r0]
   1629c:	add	r1, r1, #1
   162a0:	str	r1, [r0]
   162a4:	movw	r0, #21776	; 0x5510
   162a8:	movt	r0, #3
   162ac:	ldr	r0, [r0]
   162b0:	add	r0, r0, #1
   162b4:	movw	r1, #21772	; 0x550c
   162b8:	movt	r1, #3
   162bc:	ldr	r1, [r1]
   162c0:	cmp	r0, r1
   162c4:	bcs	162cc <__assert_fail@plt+0x4b98>
   162c8:	bl	1de80 <__assert_fail@plt+0xc74c>
   162cc:	movw	r0, #21764	; 0x5504
   162d0:	movt	r0, #3
   162d4:	ldr	r0, [r0]
   162d8:	movw	r1, #21776	; 0x5510
   162dc:	movt	r1, #3
   162e0:	ldr	r1, [r1]
   162e4:	add	r1, r1, #1
   162e8:	bl	1b13c <__assert_fail@plt+0x9a08>
   162ec:	movw	r1, #21764	; 0x5504
   162f0:	movt	r1, #3
   162f4:	str	r0, [r1]
   162f8:	ldrb	r0, [fp, #-1]
   162fc:	tst	r0, #1
   16300:	bne	16330 <__assert_fail@plt+0x4bfc>
   16304:	movw	r0, #21764	; 0x5504
   16308:	movt	r0, #3
   1630c:	ldr	r0, [r0]
   16310:	movw	r1, #21364	; 0x5374
   16314:	movt	r1, #3
   16318:	ldr	r1, [r1]
   1631c:	movw	r2, #21772	; 0x550c
   16320:	movt	r2, #3
   16324:	ldr	r2, [r2]
   16328:	bl	11428 <memcpy@plt>
   1632c:	b	16380 <__assert_fail@plt+0x4c4c>
   16330:	movw	r0, #20824	; 0x5158
   16334:	movt	r0, #3
   16338:	ldr	r0, [r0]
   1633c:	movw	r1, #21768	; 0x5508
   16340:	movt	r1, #3
   16344:	ldr	r1, [r1]
   16348:	ldr	r1, [r1]
   1634c:	add	r0, r0, r1
   16350:	ldrb	r0, [r0]
   16354:	movw	r1, #21764	; 0x5504
   16358:	movt	r1, #3
   1635c:	ldr	r1, [r1]
   16360:	movw	r2, #21772	; 0x550c
   16364:	movt	r2, #3
   16368:	ldr	r3, [r2]
   1636c:	add	r1, r1, r3
   16370:	strb	r0, [r1]
   16374:	ldr	r0, [r2]
   16378:	add	r0, r0, #1
   1637c:	str	r0, [r2]
   16380:	movw	r0, #21764	; 0x5504
   16384:	movt	r0, #3
   16388:	ldr	r0, [r0]
   1638c:	movw	r1, #21772	; 0x550c
   16390:	movt	r1, #3
   16394:	ldr	r1, [r1]
   16398:	add	r0, r0, r1
   1639c:	movw	r1, #21784	; 0x5518
   163a0:	movt	r1, #3
   163a4:	str	r0, [r1]
   163a8:	ldr	r0, [r1]
   163ac:	movw	r1, #20824	; 0x5158
   163b0:	movt	r1, #3
   163b4:	ldr	r1, [r1]
   163b8:	ldrb	r1, [r1]
   163bc:	movw	r2, #21368	; 0x5378
   163c0:	movt	r2, #3
   163c4:	ldr	r2, [r2]
   163c8:	and	r1, r1, #255	; 0xff
   163cc:	bl	11608 <memset@plt>
   163d0:	movw	r0, #21372	; 0x537c
   163d4:	movt	r0, #3
   163d8:	ldr	r0, [r0]
   163dc:	movw	r1, #0
   163e0:	cmp	r0, r1
   163e4:	beq	16420 <__assert_fail@plt+0x4cec>
   163e8:	movw	r0, #21784	; 0x5518
   163ec:	movt	r0, #3
   163f0:	ldr	r0, [r0]
   163f4:	movw	r1, #21368	; 0x5378
   163f8:	movt	r1, #3
   163fc:	ldr	r1, [r1]
   16400:	add	r0, r0, r1
   16404:	movw	r1, #21372	; 0x537c
   16408:	movt	r1, #3
   1640c:	ldr	r1, [r1]
   16410:	movw	r2, #21780	; 0x5514
   16414:	movt	r2, #3
   16418:	ldr	r2, [r2]
   1641c:	bl	11428 <memcpy@plt>
   16420:	movw	r0, #21764	; 0x5504
   16424:	movt	r0, #3
   16428:	ldr	r0, [r0]
   1642c:	movw	r1, #21776	; 0x5510
   16430:	movt	r1, #3
   16434:	ldr	r1, [r1]
   16438:	add	r0, r0, r1
   1643c:	movw	r1, #0
   16440:	strb	r1, [r0]
   16444:	movw	r0, #21768	; 0x5508
   16448:	movt	r0, #3
   1644c:	ldr	r0, [r0]
   16450:	bl	176a4 <__assert_fail@plt+0x5f70>
   16454:	movw	r0, #21368	; 0x5378
   16458:	movt	r0, #3
   1645c:	ldr	r0, [r0]
   16460:	movw	r1, #4
   16464:	bl	1dd04 <__assert_fail@plt+0xc5d0>
   16468:	movw	r1, #21768	; 0x5508
   1646c:	movt	r1, #3
   16470:	str	r0, [r1]
   16474:	movw	r0, #21380	; 0x5384
   16478:	movt	r0, #3
   1647c:	ldr	r0, [r0]
   16480:	movw	r1, #0
   16484:	cmp	r0, r1
   16488:	beq	16588 <__assert_fail@plt+0x4e54>
   1648c:	ldrb	r0, [fp, #-1]
   16490:	tst	r0, #1
   16494:	bne	1649c <__assert_fail@plt+0x4d68>
   16498:	b	164bc <__assert_fail@plt+0x4d88>
   1649c:	movw	r0, #15027	; 0x3ab3
   164a0:	movt	r0, #2
   164a4:	movw	r1, #15035	; 0x3abb
   164a8:	movt	r1, #2
   164ac:	movw	r2, #409	; 0x199
   164b0:	movw	r3, #15047	; 0x3ac7
   164b4:	movt	r3, #2
   164b8:	bl	11734 <__assert_fail@plt>
   164bc:	movw	r0, #21380	; 0x5384
   164c0:	movt	r0, #3
   164c4:	ldr	r1, [r0]
   164c8:	str	r0, [sp, #16]
   164cc:	mov	r0, r1
   164d0:	bl	1159c <strlen@plt>
   164d4:	str	r0, [fp, #-8]
   164d8:	movw	r0, #21784	; 0x5518
   164dc:	movt	r0, #3
   164e0:	ldr	r0, [r0]
   164e4:	movw	r1, #21368	; 0x5378
   164e8:	movt	r1, #3
   164ec:	ldr	lr, [r1]
   164f0:	add	r0, r0, lr
   164f4:	ldr	lr, [fp, #-8]
   164f8:	sub	r0, r0, lr
   164fc:	ldr	r2, [sp, #16]
   16500:	ldr	r3, [r2]
   16504:	str	r1, [sp, #12]
   16508:	mov	r1, r3
   1650c:	mov	r2, lr
   16510:	bl	11428 <memcpy@plt>
   16514:	movw	r1, #21768	; 0x5508
   16518:	movt	r1, #3
   1651c:	ldr	r1, [r1]
   16520:	ldr	r2, [sp, #12]
   16524:	ldr	r3, [r2]
   16528:	add	r1, r1, r3, lsl #2
   1652c:	str	r1, [fp, #-12]
   16530:	str	r0, [sp, #8]
   16534:	ldr	r0, [fp, #-8]
   16538:	mvn	r1, #0
   1653c:	add	r1, r0, r1
   16540:	str	r1, [fp, #-8]
   16544:	cmp	r0, #0
   16548:	beq	16584 <__assert_fail@plt+0x4e50>
   1654c:	movw	r0, #21380	; 0x5384
   16550:	movt	r0, #3
   16554:	ldr	r0, [r0]
   16558:	ldr	r1, [fp, #-8]
   1655c:	add	r0, r0, r1
   16560:	ldrb	r0, [r0]
   16564:	sub	r0, r0, #48	; 0x30
   16568:	ldr	r1, [fp, #-12]
   1656c:	mvn	r2, #3
   16570:	add	r3, r1, r2
   16574:	str	r3, [fp, #-12]
   16578:	add	r1, r1, r2
   1657c:	str	r0, [r1]
   16580:	b	16534 <__assert_fail@plt+0x4e00>
   16584:	b	16588 <__assert_fail@plt+0x4e54>
   16588:	b	16704 <__assert_fail@plt+0x4fd0>
   1658c:	movw	r0, #21368	; 0x5378
   16590:	movt	r0, #3
   16594:	ldr	r0, [r0]
   16598:	str	r0, [fp, #-16]
   1659c:	ldr	r0, [fp, #-16]
   165a0:	mvn	r1, #0
   165a4:	add	r1, r0, r1
   165a8:	str	r1, [fp, #-16]
   165ac:	cmp	r0, #0
   165b0:	beq	166e0 <__assert_fail@plt+0x4fac>
   165b4:	movw	r0, #21768	; 0x5508
   165b8:	movt	r0, #3
   165bc:	ldr	r0, [r0]
   165c0:	ldr	r1, [fp, #-16]
   165c4:	add	r0, r0, r1, lsl #2
   165c8:	ldr	r1, [r0]
   165cc:	add	r1, r1, #1
   165d0:	str	r1, [r0]
   165d4:	movw	r0, #20832	; 0x5160
   165d8:	movt	r0, #3
   165dc:	ldrb	r0, [r0]
   165e0:	tst	r0, #1
   165e4:	beq	16628 <__assert_fail@plt+0x4ef4>
   165e8:	ldr	r0, [fp, #-16]
   165ec:	cmp	r0, #0
   165f0:	bne	16628 <__assert_fail@plt+0x4ef4>
   165f4:	movw	r0, #20824	; 0x5158
   165f8:	movt	r0, #3
   165fc:	ldr	r0, [r0]
   16600:	movw	r1, #21768	; 0x5508
   16604:	movt	r1, #3
   16608:	ldr	r1, [r1]
   1660c:	ldr	r1, [r1]
   16610:	add	r1, r1, #1
   16614:	add	r0, r0, r1
   16618:	ldrsb	r0, [r0]
   1661c:	cmp	r0, #0
   16620:	bne	16628 <__assert_fail@plt+0x4ef4>
   16624:	b	161a8 <__assert_fail@plt+0x4a74>
   16628:	movw	r0, #20824	; 0x5158
   1662c:	movt	r0, #3
   16630:	ldr	r0, [r0]
   16634:	movw	r1, #21768	; 0x5508
   16638:	movt	r1, #3
   1663c:	ldr	r1, [r1]
   16640:	ldr	r2, [fp, #-16]
   16644:	add	r1, r1, r2, lsl #2
   16648:	ldr	r1, [r1]
   1664c:	add	r0, r0, r1
   16650:	ldrb	r0, [r0]
   16654:	movw	r1, #21784	; 0x5518
   16658:	movt	r1, #3
   1665c:	ldr	r2, [r1]
   16660:	ldr	r3, [fp, #-16]
   16664:	add	r2, r2, r3
   16668:	strb	r0, [r2]
   1666c:	ldr	r0, [r1]
   16670:	ldr	r1, [fp, #-16]
   16674:	add	r0, r0, r1
   16678:	ldrsb	r0, [r0]
   1667c:	cmp	r0, #0
   16680:	beq	16688 <__assert_fail@plt+0x4f54>
   16684:	b	16704 <__assert_fail@plt+0x4fd0>
   16688:	movw	r0, #21768	; 0x5508
   1668c:	movt	r0, #3
   16690:	ldr	r1, [r0]
   16694:	ldr	r2, [fp, #-16]
   16698:	mov	r3, #0
   1669c:	str	r3, [r1, r2, lsl #2]
   166a0:	movw	r1, #20824	; 0x5158
   166a4:	movt	r1, #3
   166a8:	ldr	r1, [r1]
   166ac:	ldr	r0, [r0]
   166b0:	ldr	r2, [fp, #-16]
   166b4:	add	r0, r0, r2, lsl #2
   166b8:	ldr	r0, [r0]
   166bc:	add	r0, r1, r0
   166c0:	ldrb	r0, [r0]
   166c4:	movw	r1, #21784	; 0x5518
   166c8:	movt	r1, #3
   166cc:	ldr	r1, [r1]
   166d0:	ldr	r2, [fp, #-16]
   166d4:	add	r1, r1, r2
   166d8:	strb	r0, [r1]
   166dc:	b	1659c <__assert_fail@plt+0x4e68>
   166e0:	movw	r0, #15073	; 0x3ae1
   166e4:	movt	r0, #2
   166e8:	bl	11590 <gettext@plt>
   166ec:	movw	lr, #1
   166f0:	str	r0, [sp, #4]
   166f4:	mov	r0, lr
   166f8:	movw	r1, #0
   166fc:	ldr	r2, [sp, #4]
   16700:	bl	1150c <error@plt>
   16704:	mov	sp, fp
   16708:	pop	{fp, pc}
   1670c:	push	{r4, r5, fp, lr}
   16710:	add	fp, sp, #8
   16714:	sub	sp, sp, #304	; 0x130
   16718:	str	r0, [fp, #-16]
   1671c:	movw	r0, #21388	; 0x538c
   16720:	movt	r0, #3
   16724:	ldr	r0, [r0]
   16728:	movw	r1, #0
   1672c:	cmp	r0, r1
   16730:	bne	16954 <__assert_fail@plt+0x5220>
   16734:	movw	r0, #21392	; 0x5390
   16738:	movt	r0, #3
   1673c:	ldrb	r0, [r0]
   16740:	tst	r0, #1
   16744:	beq	16798 <__assert_fail@plt+0x5064>
   16748:	movw	r0, #21348	; 0x5364
   1674c:	movt	r0, #3
   16750:	ldr	r0, [r0]
   16754:	movw	r1, #15104	; 0x3b00
   16758:	movt	r1, #2
   1675c:	str	r0, [fp, #-152]	; 0xffffff68
   16760:	mov	r0, r1
   16764:	bl	11590 <gettext@plt>
   16768:	ldr	r1, [fp, #-16]
   1676c:	movw	lr, #4
   16770:	str	r0, [sp, #156]	; 0x9c
   16774:	mov	r0, lr
   16778:	bl	19ca8 <__assert_fail@plt+0x8574>
   1677c:	ldr	r1, [fp, #-152]	; 0xffffff68
   16780:	str	r0, [sp, #152]	; 0x98
   16784:	mov	r0, r1
   16788:	ldr	r1, [sp, #156]	; 0x9c
   1678c:	ldr	r2, [sp, #152]	; 0x98
   16790:	bl	115d8 <fprintf@plt>
   16794:	str	r0, [sp, #148]	; 0x94
   16798:	ldr	r0, [fp, #-16]
   1679c:	movw	r1, #65	; 0x41
   167a0:	movw	r2, #438	; 0x1b6
   167a4:	bl	174c8 <__assert_fail@plt+0x5d94>
   167a8:	str	r0, [fp, #-20]	; 0xffffffec
   167ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   167b0:	cmp	r0, #0
   167b4:	bge	167c4 <__assert_fail@plt+0x5090>
   167b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   167bc:	str	r0, [fp, #-12]
   167c0:	b	16d9c <__assert_fail@plt+0x5668>
   167c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   167c8:	sub	r1, fp, #128	; 0x80
   167cc:	bl	22cfc <__assert_fail@plt+0x115c8>
   167d0:	cmp	r0, #0
   167d4:	beq	16820 <__assert_fail@plt+0x50ec>
   167d8:	bl	115f0 <__errno_location@plt>
   167dc:	ldr	r1, [r0]
   167e0:	movw	r0, #15122	; 0x3b12
   167e4:	movt	r0, #2
   167e8:	str	r1, [sp, #144]	; 0x90
   167ec:	bl	11590 <gettext@plt>
   167f0:	ldr	r1, [fp, #-16]
   167f4:	movw	lr, #4
   167f8:	str	r0, [sp, #140]	; 0x8c
   167fc:	mov	r0, lr
   16800:	bl	19ca8 <__assert_fail@plt+0x8574>
   16804:	movw	r1, #1
   16808:	str	r0, [sp, #136]	; 0x88
   1680c:	mov	r0, r1
   16810:	ldr	r1, [sp, #144]	; 0x90
   16814:	ldr	r2, [sp, #140]	; 0x8c
   16818:	ldr	r3, [sp, #136]	; 0x88
   1681c:	bl	1150c <error@plt>
   16820:	movw	r0, #21400	; 0x5398
   16824:	movt	r0, #3
   16828:	ldr	r1, [r0, #96]	; 0x60
   1682c:	ldr	r0, [r0, #100]	; 0x64
   16830:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16834:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16838:	eor	r0, r0, r3
   1683c:	eor	r1, r1, r2
   16840:	orr	r0, r1, r0
   16844:	cmp	r0, #0
   16848:	bne	168bc <__assert_fail@plt+0x5188>
   1684c:	b	16850 <__assert_fail@plt+0x511c>
   16850:	movw	r0, #21400	; 0x5398
   16854:	movt	r0, #3
   16858:	ldr	r1, [r0]
   1685c:	ldr	r0, [r0, #4]
   16860:	ldr	r2, [fp, #-128]	; 0xffffff80
   16864:	ldr	r3, [fp, #-124]	; 0xffffff84
   16868:	eor	r0, r0, r3
   1686c:	eor	r1, r1, r2
   16870:	orr	r0, r1, r0
   16874:	cmp	r0, #0
   16878:	bne	168bc <__assert_fail@plt+0x5188>
   1687c:	b	16880 <__assert_fail@plt+0x514c>
   16880:	movw	r0, #15140	; 0x3b24
   16884:	movt	r0, #2
   16888:	bl	11590 <gettext@plt>
   1688c:	ldr	r1, [fp, #-16]
   16890:	movw	lr, #4
   16894:	str	r0, [sp, #132]	; 0x84
   16898:	mov	r0, lr
   1689c:	bl	19ca8 <__assert_fail@plt+0x8574>
   168a0:	movw	r1, #1
   168a4:	str	r0, [sp, #128]	; 0x80
   168a8:	mov	r0, r1
   168ac:	movw	r1, #0
   168b0:	ldr	r2, [sp, #132]	; 0x84
   168b4:	ldr	r3, [sp, #128]	; 0x80
   168b8:	bl	1150c <error@plt>
   168bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   168c0:	mov	r1, #0
   168c4:	mov	r2, r1
   168c8:	mov	r3, r1
   168cc:	bl	11440 <ftruncate64@plt>
   168d0:	cmp	r0, #0
   168d4:	beq	16948 <__assert_fail@plt+0x5214>
   168d8:	ldr	r0, [fp, #-112]	; 0xffffff90
   168dc:	and	r0, r0, #61440	; 0xf000
   168e0:	cmp	r0, #32768	; 0x8000
   168e4:	beq	168fc <__assert_fail@plt+0x51c8>
   168e8:	ldr	r0, [fp, #-112]	; 0xffffff90
   168ec:	ldr	r1, [fp, #-112]	; 0xffffff90
   168f0:	sub	r0, r0, r1
   168f4:	cmp	r0, #0
   168f8:	beq	16948 <__assert_fail@plt+0x5214>
   168fc:	bl	115f0 <__errno_location@plt>
   16900:	ldr	r1, [r0]
   16904:	movw	r0, #15175	; 0x3b47
   16908:	movt	r0, #2
   1690c:	str	r1, [sp, #124]	; 0x7c
   16910:	bl	11590 <gettext@plt>
   16914:	ldr	r2, [fp, #-16]
   16918:	movw	r1, #0
   1691c:	str	r0, [sp, #120]	; 0x78
   16920:	mov	r0, r1
   16924:	movw	r1, #3
   16928:	bl	19dfc <__assert_fail@plt+0x86c8>
   1692c:	movw	r1, #1
   16930:	str	r0, [sp, #116]	; 0x74
   16934:	mov	r0, r1
   16938:	ldr	r1, [sp, #124]	; 0x7c
   1693c:	ldr	r2, [sp, #120]	; 0x78
   16940:	ldr	r3, [sp, #116]	; 0x74
   16944:	bl	1150c <error@plt>
   16948:	ldr	r0, [fp, #-20]	; 0xffffffec
   1694c:	str	r0, [fp, #-12]
   16950:	b	16d9c <__assert_fail@plt+0x5668>
   16954:	movw	r0, #15196	; 0x3b5c
   16958:	movt	r0, #2
   1695c:	bl	11524 <getenv@plt>
   16960:	str	r0, [fp, #-144]	; 0xffffff70
   16964:	ldr	r0, [fp, #-144]	; 0xffffff70
   16968:	movw	lr, #0
   1696c:	cmp	r0, lr
   16970:	bne	16980 <__assert_fail@plt+0x524c>
   16974:	movw	r0, #15202	; 0x3b62
   16978:	movt	r0, #2
   1697c:	str	r0, [fp, #-144]	; 0xffffff70
   16980:	ldr	r1, [fp, #-16]
   16984:	movw	r0, #15210	; 0x3b6a
   16988:	movt	r0, #2
   1698c:	movw	r2, #1
   16990:	bl	115c0 <setenv@plt>
   16994:	cmp	r0, #0
   16998:	beq	169cc <__assert_fail@plt+0x5298>
   1699c:	bl	115f0 <__errno_location@plt>
   169a0:	ldr	r1, [r0]
   169a4:	movw	r0, #15215	; 0x3b6f
   169a8:	movt	r0, #2
   169ac:	str	r1, [sp, #112]	; 0x70
   169b0:	bl	11590 <gettext@plt>
   169b4:	movw	r1, #1
   169b8:	str	r0, [sp, #108]	; 0x6c
   169bc:	mov	r0, r1
   169c0:	ldr	r1, [sp, #112]	; 0x70
   169c4:	ldr	r2, [sp, #108]	; 0x6c
   169c8:	bl	1150c <error@plt>
   169cc:	movw	r0, #21392	; 0x5390
   169d0:	movt	r0, #3
   169d4:	ldrb	r0, [r0]
   169d8:	tst	r0, #1
   169dc:	beq	16a34 <__assert_fail@plt+0x5300>
   169e0:	movw	r0, #21348	; 0x5364
   169e4:	movt	r0, #3
   169e8:	ldr	r0, [r0]
   169ec:	movw	r1, #15255	; 0x3b97
   169f0:	movt	r1, #2
   169f4:	str	r0, [sp, #104]	; 0x68
   169f8:	mov	r0, r1
   169fc:	bl	11590 <gettext@plt>
   16a00:	ldr	r2, [fp, #-16]
   16a04:	movw	r1, #0
   16a08:	str	r0, [sp, #100]	; 0x64
   16a0c:	mov	r0, r1
   16a10:	movw	r1, #3
   16a14:	bl	19dfc <__assert_fail@plt+0x86c8>
   16a18:	ldr	r1, [sp, #104]	; 0x68
   16a1c:	str	r0, [sp, #96]	; 0x60
   16a20:	mov	r0, r1
   16a24:	ldr	r1, [sp, #100]	; 0x64
   16a28:	ldr	r2, [sp, #96]	; 0x60
   16a2c:	bl	115d8 <fprintf@plt>
   16a30:	str	r0, [sp, #92]	; 0x5c
   16a34:	sub	r0, fp, #136	; 0x88
   16a38:	bl	11650 <pipe@plt>
   16a3c:	cmp	r0, #0
   16a40:	beq	16a74 <__assert_fail@plt+0x5340>
   16a44:	bl	115f0 <__errno_location@plt>
   16a48:	ldr	r1, [r0]
   16a4c:	movw	r0, #15279	; 0x3baf
   16a50:	movt	r0, #2
   16a54:	str	r1, [sp, #88]	; 0x58
   16a58:	bl	11590 <gettext@plt>
   16a5c:	movw	r1, #1
   16a60:	str	r0, [sp, #84]	; 0x54
   16a64:	mov	r0, r1
   16a68:	ldr	r1, [sp, #88]	; 0x58
   16a6c:	ldr	r2, [sp, #84]	; 0x54
   16a70:	bl	1150c <error@plt>
   16a74:	bl	1168c <fork@plt>
   16a78:	str	r0, [fp, #-140]	; 0xffffff74
   16a7c:	ldr	r0, [fp, #-140]	; 0xffffff74
   16a80:	cmp	r0, #0
   16a84:	bne	16c94 <__assert_fail@plt+0x5560>
   16a88:	movw	r0, #0
   16a8c:	str	r0, [fp, #-148]	; 0xffffff6c
   16a90:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16a94:	movw	r1, #21788	; 0x551c
   16a98:	movt	r1, #3
   16a9c:	ldr	r1, [r1]
   16aa0:	cmp	r0, r1
   16aa4:	bcs	16b10 <__assert_fail@plt+0x53dc>
   16aa8:	movw	r0, #21792	; 0x5520
   16aac:	movt	r0, #3
   16ab0:	ldr	r0, [r0]
   16ab4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16ab8:	add	r0, r0, r1, lsl #2
   16abc:	ldr	r0, [r0]
   16ac0:	bl	1171c <close@plt>
   16ac4:	cmp	r0, #0
   16ac8:	beq	16afc <__assert_fail@plt+0x53c8>
   16acc:	bl	115f0 <__errno_location@plt>
   16ad0:	ldr	r1, [r0]
   16ad4:	movw	r0, #15301	; 0x3bc5
   16ad8:	movt	r0, #2
   16adc:	str	r1, [sp, #80]	; 0x50
   16ae0:	bl	11590 <gettext@plt>
   16ae4:	movw	r1, #1
   16ae8:	str	r0, [sp, #76]	; 0x4c
   16aec:	mov	r0, r1
   16af0:	ldr	r1, [sp, #80]	; 0x50
   16af4:	ldr	r2, [sp, #76]	; 0x4c
   16af8:	bl	1150c <error@plt>
   16afc:	b	16b00 <__assert_fail@plt+0x53cc>
   16b00:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16b04:	add	r0, r0, #1
   16b08:	str	r0, [fp, #-148]	; 0xffffff6c
   16b0c:	b	16a90 <__assert_fail@plt+0x535c>
   16b10:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16b14:	bl	1171c <close@plt>
   16b18:	cmp	r0, #0
   16b1c:	beq	16b50 <__assert_fail@plt+0x541c>
   16b20:	bl	115f0 <__errno_location@plt>
   16b24:	ldr	r1, [r0]
   16b28:	movw	r0, #15320	; 0x3bd8
   16b2c:	movt	r0, #2
   16b30:	str	r1, [sp, #72]	; 0x48
   16b34:	bl	11590 <gettext@plt>
   16b38:	movw	r1, #1
   16b3c:	str	r0, [sp, #68]	; 0x44
   16b40:	mov	r0, r1
   16b44:	ldr	r1, [sp, #72]	; 0x48
   16b48:	ldr	r2, [sp, #68]	; 0x44
   16b4c:	bl	1150c <error@plt>
   16b50:	ldr	r0, [fp, #-136]	; 0xffffff78
   16b54:	cmp	r0, #0
   16b58:	beq	16be4 <__assert_fail@plt+0x54b0>
   16b5c:	ldr	r0, [fp, #-136]	; 0xffffff78
   16b60:	movw	r1, #0
   16b64:	bl	11464 <dup2@plt>
   16b68:	cmp	r0, #0
   16b6c:	beq	16ba0 <__assert_fail@plt+0x546c>
   16b70:	bl	115f0 <__errno_location@plt>
   16b74:	ldr	r1, [r0]
   16b78:	movw	r0, #15340	; 0x3bec
   16b7c:	movt	r0, #2
   16b80:	str	r1, [sp, #64]	; 0x40
   16b84:	bl	11590 <gettext@plt>
   16b88:	movw	r1, #1
   16b8c:	str	r0, [sp, #60]	; 0x3c
   16b90:	mov	r0, r1
   16b94:	ldr	r1, [sp, #64]	; 0x40
   16b98:	ldr	r2, [sp, #60]	; 0x3c
   16b9c:	bl	1150c <error@plt>
   16ba0:	ldr	r0, [fp, #-136]	; 0xffffff78
   16ba4:	bl	1171c <close@plt>
   16ba8:	cmp	r0, #0
   16bac:	beq	16be0 <__assert_fail@plt+0x54ac>
   16bb0:	bl	115f0 <__errno_location@plt>
   16bb4:	ldr	r1, [r0]
   16bb8:	movw	r0, #15358	; 0x3bfe
   16bbc:	movt	r0, #2
   16bc0:	str	r1, [sp, #56]	; 0x38
   16bc4:	bl	11590 <gettext@plt>
   16bc8:	movw	r1, #1
   16bcc:	str	r0, [sp, #52]	; 0x34
   16bd0:	mov	r0, r1
   16bd4:	ldr	r1, [sp, #56]	; 0x38
   16bd8:	ldr	r2, [sp, #52]	; 0x34
   16bdc:	bl	1150c <error@plt>
   16be0:	b	16be4 <__assert_fail@plt+0x54b0>
   16be4:	movw	r0, #2
   16be8:	movw	r1, #21632	; 0x5480
   16bec:	movt	r1, #3
   16bf0:	movw	r2, #0
   16bf4:	bl	113f8 <sigprocmask@plt>
   16bf8:	ldr	r1, [fp, #-144]	; 0xffffff70
   16bfc:	ldr	r2, [fp, #-144]	; 0xffffff70
   16c00:	str	r0, [sp, #48]	; 0x30
   16c04:	mov	r0, r2
   16c08:	str	r1, [sp, #44]	; 0x2c
   16c0c:	bl	17138 <__assert_fail@plt+0x5a04>
   16c10:	movw	r1, #21388	; 0x538c
   16c14:	movt	r1, #3
   16c18:	ldr	r3, [r1]
   16c1c:	ldr	r1, [sp, #44]	; 0x2c
   16c20:	str	r0, [sp, #40]	; 0x28
   16c24:	mov	r0, r1
   16c28:	ldr	r1, [sp, #40]	; 0x28
   16c2c:	movw	r2, #15377	; 0x3c11
   16c30:	movt	r2, #2
   16c34:	movw	lr, #0
   16c38:	str	lr, [sp]
   16c3c:	bl	11698 <execl@plt>
   16c40:	str	r0, [sp, #36]	; 0x24
   16c44:	bl	115f0 <__errno_location@plt>
   16c48:	ldr	r1, [r0]
   16c4c:	movw	r0, #15380	; 0x3c14
   16c50:	movt	r0, #2
   16c54:	str	r1, [sp, #32]
   16c58:	bl	11590 <gettext@plt>
   16c5c:	ldr	r3, [fp, #-144]	; 0xffffff70
   16c60:	movw	r1, #21388	; 0x538c
   16c64:	movt	r1, #3
   16c68:	ldr	r1, [r1]
   16c6c:	movw	r2, #1
   16c70:	str	r0, [sp, #28]
   16c74:	mov	r0, r2
   16c78:	ldr	r2, [sp, #32]
   16c7c:	str	r1, [sp, #24]
   16c80:	mov	r1, r2
   16c84:	ldr	r2, [sp, #28]
   16c88:	ldr	lr, [sp, #24]
   16c8c:	str	lr, [sp]
   16c90:	bl	1150c <error@plt>
   16c94:	ldr	r0, [fp, #-140]	; 0xffffff74
   16c98:	cmn	r0, #1
   16c9c:	bne	16cd0 <__assert_fail@plt+0x559c>
   16ca0:	bl	115f0 <__errno_location@plt>
   16ca4:	ldr	r1, [r0]
   16ca8:	movw	r0, #15414	; 0x3c36
   16cac:	movt	r0, #2
   16cb0:	str	r1, [sp, #20]
   16cb4:	bl	11590 <gettext@plt>
   16cb8:	movw	r1, #1
   16cbc:	str	r0, [sp, #16]
   16cc0:	mov	r0, r1
   16cc4:	ldr	r1, [sp, #20]
   16cc8:	ldr	r2, [sp, #16]
   16ccc:	bl	1150c <error@plt>
   16cd0:	ldr	r0, [fp, #-136]	; 0xffffff78
   16cd4:	bl	1171c <close@plt>
   16cd8:	cmp	r0, #0
   16cdc:	beq	16d10 <__assert_fail@plt+0x55dc>
   16ce0:	bl	115f0 <__errno_location@plt>
   16ce4:	ldr	r1, [r0]
   16ce8:	movw	r0, #15438	; 0x3c4e
   16cec:	movt	r0, #2
   16cf0:	str	r1, [sp, #12]
   16cf4:	bl	11590 <gettext@plt>
   16cf8:	movw	r1, #1
   16cfc:	str	r0, [sp, #8]
   16d00:	mov	r0, r1
   16d04:	ldr	r1, [sp, #12]
   16d08:	ldr	r2, [sp, #8]
   16d0c:	bl	1150c <error@plt>
   16d10:	ldr	r0, [fp, #-140]	; 0xffffff74
   16d14:	movw	r1, #21760	; 0x5500
   16d18:	movt	r1, #3
   16d1c:	str	r0, [r1]
   16d20:	movw	r0, #21788	; 0x551c
   16d24:	movt	r0, #3
   16d28:	ldr	r0, [r0]
   16d2c:	movw	r1, #21796	; 0x5524
   16d30:	movt	r1, #3
   16d34:	ldr	r1, [r1]
   16d38:	cmp	r0, r1
   16d3c:	bne	16d68 <__assert_fail@plt+0x5634>
   16d40:	movw	r0, #21792	; 0x5520
   16d44:	movt	r0, #3
   16d48:	ldr	r0, [r0]
   16d4c:	movw	r1, #21796	; 0x5524
   16d50:	movt	r1, #3
   16d54:	movw	r2, #4
   16d58:	bl	1b280 <__assert_fail@plt+0x9b4c>
   16d5c:	movw	r1, #21792	; 0x5520
   16d60:	movt	r1, #3
   16d64:	str	r0, [r1]
   16d68:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16d6c:	movw	r1, #21792	; 0x5520
   16d70:	movt	r1, #3
   16d74:	ldr	r1, [r1]
   16d78:	movw	r2, #21788	; 0x551c
   16d7c:	movt	r2, #3
   16d80:	ldr	r3, [r2]
   16d84:	add	ip, r3, #1
   16d88:	str	ip, [r2]
   16d8c:	add	r1, r1, r3, lsl #2
   16d90:	str	r0, [r1]
   16d94:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16d98:	str	r0, [fp, #-12]
   16d9c:	ldr	r0, [fp, #-12]
   16da0:	sub	sp, fp, #8
   16da4:	pop	{r4, r5, fp, pc}
   16da8:	sub	sp, sp, #8
   16dac:	str	r0, [sp, #4]
   16db0:	movw	r0, #21388	; 0x538c
   16db4:	movt	r0, #3
   16db8:	ldr	r0, [r0]
   16dbc:	movw	r1, #0
   16dc0:	cmp	r0, r1
   16dc4:	movw	r0, #0
   16dc8:	str	r0, [sp]
   16dcc:	beq	16de4 <__assert_fail@plt+0x56b0>
   16dd0:	ldr	r0, [sp, #4]
   16dd4:	cmp	r0, #32
   16dd8:	movw	r0, #0
   16ddc:	moveq	r0, #1
   16de0:	str	r0, [sp]
   16de4:	ldr	r0, [sp]
   16de8:	and	r0, r0, #1
   16dec:	add	sp, sp, #8
   16df0:	bx	lr
   16df4:	push	{fp, lr}
   16df8:	mov	fp, sp
   16dfc:	sub	sp, sp, #64	; 0x40
   16e00:	str	r0, [fp, #-4]
   16e04:	str	r1, [fp, #-8]
   16e08:	str	r2, [fp, #-12]
   16e0c:	mov	r0, #0
   16e10:	strb	r0, [fp, #-13]
   16e14:	ldr	r0, [fp, #-4]
   16e18:	ldr	r1, [fp, #-8]
   16e1c:	add	r0, r0, r1, lsl #4
   16e20:	ldr	r0, [r0, #4]
   16e24:	cmn	r0, #1
   16e28:	bgt	17128 <__assert_fail@plt+0x59f4>
   16e2c:	ldr	r0, [fp, #-8]
   16e30:	cmp	r0, #0
   16e34:	beq	16e48 <__assert_fail@plt+0x5714>
   16e38:	ldr	r0, [fp, #-8]
   16e3c:	sub	r0, r0, #1
   16e40:	str	r0, [fp, #-28]	; 0xffffffe4
   16e44:	b	16e54 <__assert_fail@plt+0x5720>
   16e48:	ldr	r0, [fp, #-12]
   16e4c:	sub	r0, r0, #1
   16e50:	str	r0, [fp, #-28]	; 0xffffffe4
   16e54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16e58:	str	r0, [fp, #-24]	; 0xffffffe8
   16e5c:	ldr	r0, [fp, #-4]
   16e60:	ldr	r1, [fp, #-8]
   16e64:	add	r0, r0, r1, lsl #4
   16e68:	ldr	r0, [r0, #4]
   16e6c:	cmn	r0, #1
   16e70:	bne	16e90 <__assert_fail@plt+0x575c>
   16e74:	ldr	r0, [fp, #-4]
   16e78:	ldr	r1, [fp, #-8]
   16e7c:	add	r0, r0, r1, lsl #4
   16e80:	ldr	r0, [r0]
   16e84:	bl	1670c <__assert_fail@plt+0x4fd8>
   16e88:	str	r0, [fp, #-20]	; 0xffffffec
   16e8c:	b	16eac <__assert_fail@plt+0x5778>
   16e90:	ldr	r0, [fp, #-4]
   16e94:	ldr	r1, [fp, #-8]
   16e98:	add	r0, r0, r1, lsl #4
   16e9c:	ldr	r0, [r0]
   16ea0:	movw	r1, #3073	; 0xc01
   16ea4:	bl	174c8 <__assert_fail@plt+0x5d94>
   16ea8:	str	r0, [fp, #-20]	; 0xffffffec
   16eac:	ldr	r0, [fp, #-20]	; 0xffffffec
   16eb0:	mvn	r1, #0
   16eb4:	cmp	r1, r0
   16eb8:	bge	16ec0 <__assert_fail@plt+0x578c>
   16ebc:	b	17070 <__assert_fail@plt+0x593c>
   16ec0:	bl	115f0 <__errno_location@plt>
   16ec4:	ldr	r0, [r0]
   16ec8:	cmp	r0, #24
   16ecc:	beq	16f2c <__assert_fail@plt+0x57f8>
   16ed0:	bl	115f0 <__errno_location@plt>
   16ed4:	ldr	r0, [r0]
   16ed8:	cmp	r0, #23
   16edc:	beq	16f2c <__assert_fail@plt+0x57f8>
   16ee0:	bl	115f0 <__errno_location@plt>
   16ee4:	ldr	r1, [r0]
   16ee8:	ldr	r0, [fp, #-4]
   16eec:	ldr	lr, [fp, #-8]
   16ef0:	add	r0, r0, lr, lsl #4
   16ef4:	ldr	r2, [r0]
   16ef8:	movw	r0, #0
   16efc:	movw	lr, #3
   16f00:	str	r1, [sp, #32]
   16f04:	mov	r1, lr
   16f08:	bl	19dfc <__assert_fail@plt+0x86c8>
   16f0c:	movw	r1, #1
   16f10:	str	r0, [sp, #28]
   16f14:	mov	r0, r1
   16f18:	ldr	r1, [sp, #32]
   16f1c:	movw	r2, #15774	; 0x3d9e
   16f20:	movt	r2, #2
   16f24:	ldr	r3, [sp, #28]
   16f28:	bl	1150c <error@plt>
   16f2c:	movw	r0, #1
   16f30:	strb	r0, [fp, #-13]
   16f34:	ldr	r0, [fp, #-4]
   16f38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f3c:	add	r0, r0, r1, lsl #4
   16f40:	ldr	r0, [r0, #4]
   16f44:	cmp	r0, #0
   16f48:	bge	16fdc <__assert_fail@plt+0x58a8>
   16f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f50:	cmp	r0, #0
   16f54:	beq	16f68 <__assert_fail@plt+0x5834>
   16f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f5c:	sub	r0, r0, #1
   16f60:	str	r0, [sp, #24]
   16f64:	b	16f74 <__assert_fail@plt+0x5840>
   16f68:	ldr	r0, [fp, #-12]
   16f6c:	sub	r0, r0, #1
   16f70:	str	r0, [sp, #24]
   16f74:	ldr	r0, [sp, #24]
   16f78:	str	r0, [fp, #-24]	; 0xffffffe8
   16f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f80:	ldr	r1, [fp, #-8]
   16f84:	cmp	r0, r1
   16f88:	bne	16fd8 <__assert_fail@plt+0x58a4>
   16f8c:	bl	115f0 <__errno_location@plt>
   16f90:	ldr	r1, [r0]
   16f94:	ldr	r0, [fp, #-4]
   16f98:	ldr	lr, [fp, #-8]
   16f9c:	add	r0, r0, lr, lsl #4
   16fa0:	ldr	r2, [r0]
   16fa4:	movw	r0, #0
   16fa8:	movw	lr, #3
   16fac:	str	r1, [sp, #20]
   16fb0:	mov	r1, lr
   16fb4:	bl	19dfc <__assert_fail@plt+0x86c8>
   16fb8:	movw	r1, #1
   16fbc:	str	r0, [sp, #16]
   16fc0:	mov	r0, r1
   16fc4:	ldr	r1, [sp, #20]
   16fc8:	movw	r2, #15774	; 0x3d9e
   16fcc:	movt	r2, #2
   16fd0:	ldr	r3, [sp, #16]
   16fd4:	bl	1150c <error@plt>
   16fd8:	b	16f34 <__assert_fail@plt+0x5800>
   16fdc:	ldr	r0, [fp, #-4]
   16fe0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fe4:	add	r0, r0, r1, lsl #4
   16fe8:	ldr	r0, [r0, #8]
   16fec:	bl	173dc <__assert_fail@plt+0x5ca8>
   16ff0:	cmp	r0, #0
   16ff4:	beq	17044 <__assert_fail@plt+0x5910>
   16ff8:	bl	115f0 <__errno_location@plt>
   16ffc:	ldr	r1, [r0]
   17000:	ldr	r0, [fp, #-4]
   17004:	ldr	lr, [fp, #-24]	; 0xffffffe8
   17008:	add	r0, r0, lr, lsl #4
   1700c:	ldr	r2, [r0]
   17010:	movw	r0, #0
   17014:	movw	lr, #3
   17018:	str	r1, [sp, #12]
   1701c:	mov	r1, lr
   17020:	bl	19dfc <__assert_fail@plt+0x86c8>
   17024:	movw	r1, #1
   17028:	str	r0, [sp, #8]
   1702c:	mov	r0, r1
   17030:	ldr	r1, [sp, #12]
   17034:	movw	r2, #15774	; 0x3d9e
   17038:	movt	r2, #2
   1703c:	ldr	r3, [sp, #8]
   17040:	bl	1150c <error@plt>
   17044:	ldr	r0, [fp, #-4]
   17048:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1704c:	add	r0, r0, r1, lsl #4
   17050:	mov	r1, #0
   17054:	str	r1, [r0, #8]
   17058:	ldr	r0, [fp, #-4]
   1705c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17060:	add	r0, r0, r1, lsl #4
   17064:	mvn	r1, #1
   17068:	str	r1, [r0, #4]
   1706c:	b	16e5c <__assert_fail@plt+0x5728>
   17070:	ldr	r0, [fp, #-20]	; 0xffffffec
   17074:	ldr	r1, [fp, #-4]
   17078:	ldr	r2, [fp, #-8]
   1707c:	add	r1, r1, r2, lsl #4
   17080:	str	r0, [r1, #4]
   17084:	ldr	r0, [fp, #-20]	; 0xffffffec
   17088:	movw	r1, #15666	; 0x3d32
   1708c:	movt	r1, #2
   17090:	bl	1138c <fdopen@plt>
   17094:	ldr	r1, [fp, #-4]
   17098:	ldr	r2, [fp, #-8]
   1709c:	add	r1, r1, r2, lsl #4
   170a0:	str	r0, [r1, #8]
   170a4:	movw	r1, #0
   170a8:	cmp	r0, r1
   170ac:	bne	170fc <__assert_fail@plt+0x59c8>
   170b0:	bl	115f0 <__errno_location@plt>
   170b4:	ldr	r1, [r0]
   170b8:	ldr	r0, [fp, #-4]
   170bc:	ldr	lr, [fp, #-8]
   170c0:	add	r0, r0, lr, lsl #4
   170c4:	ldr	r2, [r0]
   170c8:	movw	r0, #0
   170cc:	movw	lr, #3
   170d0:	str	r1, [sp, #4]
   170d4:	mov	r1, lr
   170d8:	bl	19dfc <__assert_fail@plt+0x86c8>
   170dc:	movw	r1, #1
   170e0:	str	r0, [sp]
   170e4:	mov	r0, r1
   170e8:	ldr	r1, [sp, #4]
   170ec:	movw	r2, #15774	; 0x3d9e
   170f0:	movt	r2, #2
   170f4:	ldr	r3, [sp]
   170f8:	bl	1150c <error@plt>
   170fc:	movw	r0, #21760	; 0x5500
   17100:	movt	r0, #3
   17104:	ldr	r0, [r0]
   17108:	ldr	r1, [fp, #-4]
   1710c:	ldr	r2, [fp, #-8]
   17110:	add	r1, r1, r2, lsl #4
   17114:	str	r0, [r1, #12]
   17118:	movw	r0, #21760	; 0x5500
   1711c:	movt	r0, #3
   17120:	movw	r1, #0
   17124:	str	r1, [r0]
   17128:	ldrb	r0, [fp, #-13]
   1712c:	and	r0, r0, #1
   17130:	mov	sp, fp
   17134:	pop	{fp, pc}
   17138:	sub	sp, sp, #16
   1713c:	str	r0, [sp, #12]
   17140:	ldr	r0, [sp, #12]
   17144:	str	r0, [sp, #8]
   17148:	movw	r0, #0
   1714c:	strb	r0, [sp, #3]
   17150:	ldr	r0, [sp, #8]
   17154:	ldrb	r0, [r0]
   17158:	cmp	r0, #47	; 0x2f
   1715c:	bne	17170 <__assert_fail@plt+0x5a3c>
   17160:	ldr	r0, [sp, #8]
   17164:	add	r0, r0, #1
   17168:	str	r0, [sp, #8]
   1716c:	b	17150 <__assert_fail@plt+0x5a1c>
   17170:	ldr	r0, [sp, #8]
   17174:	str	r0, [sp, #4]
   17178:	ldr	r0, [sp, #4]
   1717c:	ldrsb	r0, [r0]
   17180:	cmp	r0, #0
   17184:	beq	171d8 <__assert_fail@plt+0x5aa4>
   17188:	ldr	r0, [sp, #4]
   1718c:	ldrb	r0, [r0]
   17190:	cmp	r0, #47	; 0x2f
   17194:	bne	171a4 <__assert_fail@plt+0x5a70>
   17198:	movw	r0, #1
   1719c:	strb	r0, [sp, #3]
   171a0:	b	171c4 <__assert_fail@plt+0x5a90>
   171a4:	ldrb	r0, [sp, #3]
   171a8:	tst	r0, #1
   171ac:	beq	171c0 <__assert_fail@plt+0x5a8c>
   171b0:	ldr	r0, [sp, #4]
   171b4:	str	r0, [sp, #8]
   171b8:	movw	r0, #0
   171bc:	strb	r0, [sp, #3]
   171c0:	b	171c4 <__assert_fail@plt+0x5a90>
   171c4:	b	171c8 <__assert_fail@plt+0x5a94>
   171c8:	ldr	r0, [sp, #4]
   171cc:	add	r0, r0, #1
   171d0:	str	r0, [sp, #4]
   171d4:	b	17178 <__assert_fail@plt+0x5a44>
   171d8:	ldr	r0, [sp, #8]
   171dc:	add	sp, sp, #16
   171e0:	bx	lr
   171e4:	push	{fp, lr}
   171e8:	mov	fp, sp
   171ec:	sub	sp, sp, #16
   171f0:	str	r0, [fp, #-4]
   171f4:	movw	r0, #0
   171f8:	str	r0, [sp, #4]
   171fc:	ldr	r0, [fp, #-4]
   17200:	bl	1159c <strlen@plt>
   17204:	str	r0, [sp, #8]
   17208:	ldr	r0, [sp, #8]
   1720c:	movw	r1, #1
   17210:	cmp	r1, r0
   17214:	movw	r0, #0
   17218:	str	r0, [sp]
   1721c:	bcs	17244 <__assert_fail@plt+0x5b10>
   17220:	ldr	r0, [fp, #-4]
   17224:	ldr	r1, [sp, #8]
   17228:	sub	r1, r1, #1
   1722c:	add	r0, r0, r1
   17230:	ldrb	r0, [r0]
   17234:	cmp	r0, #47	; 0x2f
   17238:	movw	r0, #0
   1723c:	moveq	r0, #1
   17240:	str	r0, [sp]
   17244:	ldr	r0, [sp]
   17248:	tst	r0, #1
   1724c:	beq	17268 <__assert_fail@plt+0x5b34>
   17250:	b	17254 <__assert_fail@plt+0x5b20>
   17254:	ldr	r0, [sp, #8]
   17258:	mvn	r1, #0
   1725c:	add	r0, r0, r1
   17260:	str	r0, [sp, #8]
   17264:	b	17208 <__assert_fail@plt+0x5ad4>
   17268:	ldr	r0, [sp, #8]
   1726c:	mov	sp, fp
   17270:	pop	{fp, pc}
   17274:	sub	sp, sp, #4
   17278:	str	r0, [sp]
   1727c:	ldr	r0, [sp]
   17280:	movw	r1, #21800	; 0x5528
   17284:	movt	r1, #3
   17288:	str	r0, [r1]
   1728c:	add	sp, sp, #4
   17290:	bx	lr
   17294:	sub	sp, sp, #4
   17298:	and	r0, r0, #1
   1729c:	strb	r0, [sp, #3]
   172a0:	ldrb	r0, [sp, #3]
   172a4:	and	r0, r0, #1
   172a8:	movw	r1, #21804	; 0x552c
   172ac:	movt	r1, #3
   172b0:	strb	r0, [r1]
   172b4:	add	sp, sp, #4
   172b8:	bx	lr
   172bc:	push	{fp, lr}
   172c0:	mov	fp, sp
   172c4:	sub	sp, sp, #24
   172c8:	movw	r0, #21348	; 0x5364
   172cc:	movt	r0, #3
   172d0:	ldr	r0, [r0]
   172d4:	bl	206b8 <__assert_fail@plt+0xef84>
   172d8:	cmp	r0, #0
   172dc:	beq	173ac <__assert_fail@plt+0x5c78>
   172e0:	movw	r0, #21804	; 0x552c
   172e4:	movt	r0, #3
   172e8:	ldrb	r0, [r0]
   172ec:	tst	r0, #1
   172f0:	beq	17304 <__assert_fail@plt+0x5bd0>
   172f4:	bl	115f0 <__errno_location@plt>
   172f8:	ldr	r0, [r0]
   172fc:	cmp	r0, #32
   17300:	beq	173ac <__assert_fail@plt+0x5c78>
   17304:	movw	r0, #15654	; 0x3d26
   17308:	movt	r0, #2
   1730c:	bl	11590 <gettext@plt>
   17310:	str	r0, [fp, #-4]
   17314:	movw	r0, #21800	; 0x5528
   17318:	movt	r0, #3
   1731c:	ldr	r0, [r0]
   17320:	movw	lr, #0
   17324:	cmp	r0, lr
   17328:	beq	17380 <__assert_fail@plt+0x5c4c>
   1732c:	bl	115f0 <__errno_location@plt>
   17330:	ldr	r1, [r0]
   17334:	movw	r0, #21800	; 0x5528
   17338:	movt	r0, #3
   1733c:	ldr	r0, [r0]
   17340:	str	r1, [fp, #-8]
   17344:	bl	19da4 <__assert_fail@plt+0x8670>
   17348:	ldr	r1, [fp, #-4]
   1734c:	movw	lr, #0
   17350:	str	r0, [sp, #12]
   17354:	mov	r0, lr
   17358:	ldr	lr, [fp, #-8]
   1735c:	str	r1, [sp, #8]
   17360:	mov	r1, lr
   17364:	movw	r2, #13993	; 0x36a9
   17368:	movt	r2, #2
   1736c:	ldr	r3, [sp, #12]
   17370:	ldr	ip, [sp, #8]
   17374:	str	ip, [sp]
   17378:	bl	1150c <error@plt>
   1737c:	b	1739c <__assert_fail@plt+0x5c68>
   17380:	bl	115f0 <__errno_location@plt>
   17384:	ldr	r1, [r0]
   17388:	ldr	r3, [fp, #-4]
   1738c:	movw	r0, #0
   17390:	movw	r2, #15774	; 0x3d9e
   17394:	movt	r2, #2
   17398:	bl	1150c <error@plt>
   1739c:	movw	r0, #20840	; 0x5168
   173a0:	movt	r0, #3
   173a4:	ldr	r0, [r0]
   173a8:	bl	1141c <_exit@plt>
   173ac:	movw	r0, #21344	; 0x5360
   173b0:	movt	r0, #3
   173b4:	ldr	r0, [r0]
   173b8:	bl	206b8 <__assert_fail@plt+0xef84>
   173bc:	cmp	r0, #0
   173c0:	beq	173d4 <__assert_fail@plt+0x5ca0>
   173c4:	movw	r0, #20840	; 0x5168
   173c8:	movt	r0, #3
   173cc:	ldr	r0, [r0]
   173d0:	bl	1141c <_exit@plt>
   173d4:	mov	sp, fp
   173d8:	pop	{fp, pc}
   173dc:	push	{fp, lr}
   173e0:	mov	fp, sp
   173e4:	sub	sp, sp, #32
   173e8:	str	r0, [fp, #-8]
   173ec:	movw	r0, #0
   173f0:	str	r0, [fp, #-12]
   173f4:	str	r0, [sp, #12]
   173f8:	ldr	r0, [fp, #-8]
   173fc:	bl	11620 <fileno@plt>
   17400:	str	r0, [sp, #16]
   17404:	ldr	r0, [sp, #16]
   17408:	cmp	r0, #0
   1740c:	bge	17420 <__assert_fail@plt+0x5cec>
   17410:	ldr	r0, [fp, #-8]
   17414:	bl	11644 <fclose@plt>
   17418:	str	r0, [fp, #-4]
   1741c:	b	174bc <__assert_fail@plt+0x5d88>
   17420:	ldr	r0, [fp, #-8]
   17424:	bl	11554 <__freading@plt>
   17428:	cmp	r0, #0
   1742c:	beq	17464 <__assert_fail@plt+0x5d30>
   17430:	ldr	r0, [fp, #-8]
   17434:	bl	11620 <fileno@plt>
   17438:	mov	lr, sp
   1743c:	mov	r1, #1
   17440:	str	r1, [lr]
   17444:	mov	r1, #0
   17448:	mov	r2, r1
   1744c:	mov	r3, r1
   17450:	bl	114b8 <lseek64@plt>
   17454:	and	r0, r0, r1
   17458:	cmn	r0, #1
   1745c:	beq	17480 <__assert_fail@plt+0x5d4c>
   17460:	b	17464 <__assert_fail@plt+0x5d30>
   17464:	ldr	r0, [fp, #-8]
   17468:	bl	175f4 <__assert_fail@plt+0x5ec0>
   1746c:	cmp	r0, #0
   17470:	beq	17480 <__assert_fail@plt+0x5d4c>
   17474:	bl	115f0 <__errno_location@plt>
   17478:	ldr	r0, [r0]
   1747c:	str	r0, [fp, #-12]
   17480:	ldr	r0, [fp, #-8]
   17484:	bl	11644 <fclose@plt>
   17488:	str	r0, [sp, #12]
   1748c:	ldr	r0, [fp, #-12]
   17490:	cmp	r0, #0
   17494:	beq	174b4 <__assert_fail@plt+0x5d80>
   17498:	ldr	r0, [fp, #-12]
   1749c:	str	r0, [sp, #8]
   174a0:	bl	115f0 <__errno_location@plt>
   174a4:	ldr	lr, [sp, #8]
   174a8:	str	lr, [r0]
   174ac:	mvn	r0, #0
   174b0:	str	r0, [sp, #12]
   174b4:	ldr	r0, [sp, #12]
   174b8:	str	r0, [fp, #-4]
   174bc:	ldr	r0, [fp, #-4]
   174c0:	mov	sp, fp
   174c4:	pop	{fp, pc}
   174c8:	sub	sp, sp, #8
   174cc:	push	{fp, lr}
   174d0:	mov	fp, sp
   174d4:	sub	sp, sp, #24
   174d8:	str	r3, [fp, #12]
   174dc:	str	r2, [fp, #8]
   174e0:	str	r0, [fp, #-4]
   174e4:	str	r1, [fp, #-8]
   174e8:	movw	r0, #0
   174ec:	str	r0, [sp, #12]
   174f0:	ldr	r0, [fp, #-8]
   174f4:	and	r0, r0, #64	; 0x40
   174f8:	cmp	r0, #0
   174fc:	beq	17528 <__assert_fail@plt+0x5df4>
   17500:	add	r0, sp, #8
   17504:	mov	r1, r0
   17508:	add	r2, fp, #8
   1750c:	str	r2, [r1]
   17510:	ldr	r1, [sp, #8]
   17514:	add	r2, r1, #4
   17518:	str	r2, [sp, #8]
   1751c:	ldr	r1, [r1]
   17520:	str	r1, [sp, #12]
   17524:	str	r0, [sp, #4]
   17528:	ldr	r0, [fp, #-4]
   1752c:	ldr	r1, [fp, #-8]
   17530:	ldr	r2, [sp, #12]
   17534:	bl	11518 <open64@plt>
   17538:	bl	1a6d4 <__assert_fail@plt+0x8fa0>
   1753c:	mov	sp, fp
   17540:	pop	{fp, lr}
   17544:	add	sp, sp, #8
   17548:	bx	lr
   1754c:	push	{fp, lr}
   17550:	mov	fp, sp
   17554:	sub	sp, sp, #40	; 0x28
   17558:	str	r0, [fp, #-8]
   1755c:	str	r1, [fp, #-12]
   17560:	str	r2, [fp, #-16]
   17564:	str	r3, [sp, #20]
   17568:	ldr	r0, [fp, #-12]
   1756c:	ldr	r1, [fp, #-16]
   17570:	ldr	r2, [sp, #20]
   17574:	bl	11518 <open64@plt>
   17578:	str	r0, [sp, #16]
   1757c:	ldr	r0, [sp, #16]
   17580:	ldr	r1, [fp, #-8]
   17584:	cmp	r0, r1
   17588:	beq	17598 <__assert_fail@plt+0x5e64>
   1758c:	ldr	r0, [sp, #16]
   17590:	cmp	r0, #0
   17594:	bge	175a4 <__assert_fail@plt+0x5e70>
   17598:	ldr	r0, [sp, #16]
   1759c:	str	r0, [fp, #-4]
   175a0:	b	175e8 <__assert_fail@plt+0x5eb4>
   175a4:	ldr	r0, [sp, #16]
   175a8:	ldr	r1, [fp, #-8]
   175ac:	bl	11464 <dup2@plt>
   175b0:	str	r0, [sp, #12]
   175b4:	bl	115f0 <__errno_location@plt>
   175b8:	ldr	r0, [r0]
   175bc:	str	r0, [sp, #8]
   175c0:	ldr	r0, [sp, #16]
   175c4:	bl	1171c <close@plt>
   175c8:	ldr	r1, [sp, #8]
   175cc:	str	r0, [sp, #4]
   175d0:	str	r1, [sp]
   175d4:	bl	115f0 <__errno_location@plt>
   175d8:	ldr	r1, [sp]
   175dc:	str	r1, [r0]
   175e0:	ldr	r0, [sp, #12]
   175e4:	str	r0, [fp, #-4]
   175e8:	ldr	r0, [fp, #-4]
   175ec:	mov	sp, fp
   175f0:	pop	{fp, pc}
   175f4:	push	{fp, lr}
   175f8:	mov	fp, sp
   175fc:	sub	sp, sp, #8
   17600:	str	r0, [sp]
   17604:	ldr	r0, [sp]
   17608:	movw	r1, #0
   1760c:	cmp	r0, r1
   17610:	beq	17624 <__assert_fail@plt+0x5ef0>
   17614:	ldr	r0, [sp]
   17618:	bl	11554 <__freading@plt>
   1761c:	cmp	r0, #0
   17620:	bne	17634 <__assert_fail@plt+0x5f00>
   17624:	ldr	r0, [sp]
   17628:	bl	113ec <fflush@plt>
   1762c:	str	r0, [sp, #4]
   17630:	b	17648 <__assert_fail@plt+0x5f14>
   17634:	ldr	r0, [sp]
   17638:	bl	17654 <__assert_fail@plt+0x5f20>
   1763c:	ldr	r0, [sp]
   17640:	bl	113ec <fflush@plt>
   17644:	str	r0, [sp, #4]
   17648:	ldr	r0, [sp, #4]
   1764c:	mov	sp, fp
   17650:	pop	{fp, pc}
   17654:	push	{fp, lr}
   17658:	mov	fp, sp
   1765c:	sub	sp, sp, #16
   17660:	str	r0, [fp, #-4]
   17664:	ldr	r0, [fp, #-4]
   17668:	ldr	r0, [r0]
   1766c:	and	r0, r0, #256	; 0x100
   17670:	cmp	r0, #0
   17674:	beq	1769c <__assert_fail@plt+0x5f68>
   17678:	ldr	r0, [fp, #-4]
   1767c:	mov	r1, sp
   17680:	mov	r2, #1
   17684:	str	r2, [r1]
   17688:	mov	r1, #0
   1768c:	mov	r2, r1
   17690:	mov	r3, r1
   17694:	bl	176e4 <__assert_fail@plt+0x5fb0>
   17698:	str	r0, [sp, #8]
   1769c:	mov	sp, fp
   176a0:	pop	{fp, pc}
   176a4:	push	{fp, lr}
   176a8:	mov	fp, sp
   176ac:	sub	sp, sp, #16
   176b0:	str	r0, [fp, #-4]
   176b4:	bl	115f0 <__errno_location@plt>
   176b8:	ldr	r0, [r0]
   176bc:	str	r0, [sp, #8]
   176c0:	ldr	r0, [fp, #-4]
   176c4:	bl	11410 <free@plt>
   176c8:	ldr	r0, [sp, #8]
   176cc:	str	r0, [sp, #4]
   176d0:	bl	115f0 <__errno_location@plt>
   176d4:	ldr	lr, [sp, #4]
   176d8:	str	lr, [r0]
   176dc:	mov	sp, fp
   176e0:	pop	{fp, pc}
   176e4:	push	{fp, lr}
   176e8:	mov	fp, sp
   176ec:	sub	sp, sp, #32
   176f0:	ldr	r1, [fp, #8]
   176f4:	str	r0, [fp, #-8]
   176f8:	str	r3, [sp, #20]
   176fc:	str	r2, [sp, #16]
   17700:	ldr	r0, [fp, #-8]
   17704:	ldr	r0, [r0, #8]
   17708:	ldr	r2, [fp, #-8]
   1770c:	ldr	r2, [r2, #4]
   17710:	cmp	r0, r2
   17714:	str	r1, [sp, #4]
   17718:	bne	177c4 <__assert_fail@plt+0x6090>
   1771c:	ldr	r0, [fp, #-8]
   17720:	ldr	r0, [r0, #20]
   17724:	ldr	r1, [fp, #-8]
   17728:	ldr	r1, [r1, #16]
   1772c:	cmp	r0, r1
   17730:	bne	177c4 <__assert_fail@plt+0x6090>
   17734:	ldr	r0, [fp, #-8]
   17738:	ldr	r0, [r0, #36]	; 0x24
   1773c:	movw	r1, #0
   17740:	cmp	r0, r1
   17744:	bne	177c4 <__assert_fail@plt+0x6090>
   17748:	ldr	r0, [fp, #-8]
   1774c:	bl	11620 <fileno@plt>
   17750:	ldr	r2, [sp, #16]
   17754:	ldr	r3, [sp, #20]
   17758:	ldr	lr, [fp, #8]
   1775c:	mov	r1, sp
   17760:	str	lr, [r1]
   17764:	bl	114b8 <lseek64@plt>
   17768:	str	r1, [sp, #12]
   1776c:	str	r0, [sp, #8]
   17770:	ldr	r0, [sp, #8]
   17774:	ldr	r1, [sp, #12]
   17778:	and	r0, r0, r1
   1777c:	cmn	r0, #1
   17780:	bne	17794 <__assert_fail@plt+0x6060>
   17784:	b	17788 <__assert_fail@plt+0x6054>
   17788:	mvn	r0, #0
   1778c:	str	r0, [fp, #-4]
   17790:	b	177e4 <__assert_fail@plt+0x60b0>
   17794:	ldr	r0, [fp, #-8]
   17798:	ldr	r1, [r0]
   1779c:	bic	r1, r1, #16
   177a0:	str	r1, [r0]
   177a4:	ldr	r0, [sp, #8]
   177a8:	ldr	r1, [sp, #12]
   177ac:	ldr	r2, [fp, #-8]
   177b0:	str	r1, [r2, #84]	; 0x54
   177b4:	str	r0, [r2, #80]	; 0x50
   177b8:	movw	r0, #0
   177bc:	str	r0, [fp, #-4]
   177c0:	b	177e4 <__assert_fail@plt+0x60b0>
   177c4:	ldr	r0, [fp, #-8]
   177c8:	ldr	r2, [sp, #16]
   177cc:	ldr	r3, [sp, #20]
   177d0:	ldr	r1, [fp, #8]
   177d4:	mov	ip, sp
   177d8:	str	r1, [ip]
   177dc:	bl	1165c <fseeko64@plt>
   177e0:	str	r0, [fp, #-4]
   177e4:	ldr	r0, [fp, #-4]
   177e8:	mov	sp, fp
   177ec:	pop	{fp, pc}
   177f0:	push	{fp, lr}
   177f4:	mov	fp, sp
   177f8:	sub	sp, sp, #24
   177fc:	str	r0, [fp, #-4]
   17800:	str	r1, [fp, #-8]
   17804:	str	r2, [sp, #12]
   17808:	movw	r0, #0
   1780c:	str	r0, [sp, #8]
   17810:	ldr	r0, [fp, #-8]
   17814:	str	r0, [sp, #4]
   17818:	ldr	r0, [sp, #12]
   1781c:	cmp	r0, #0
   17820:	bls	17898 <__assert_fail@plt+0x6164>
   17824:	ldr	r0, [fp, #-4]
   17828:	ldr	r1, [sp, #4]
   1782c:	ldr	r2, [sp, #12]
   17830:	bl	1a228 <__assert_fail@plt+0x8af4>
   17834:	str	r0, [sp]
   17838:	ldr	r0, [sp]
   1783c:	cmn	r0, #1
   17840:	bne	17848 <__assert_fail@plt+0x6114>
   17844:	b	17898 <__assert_fail@plt+0x6164>
   17848:	ldr	r0, [sp]
   1784c:	cmp	r0, #0
   17850:	bne	17864 <__assert_fail@plt+0x6130>
   17854:	bl	115f0 <__errno_location@plt>
   17858:	movw	lr, #28
   1785c:	str	lr, [r0]
   17860:	b	17898 <__assert_fail@plt+0x6164>
   17864:	ldr	r0, [sp]
   17868:	ldr	r1, [sp, #8]
   1786c:	add	r0, r1, r0
   17870:	str	r0, [sp, #8]
   17874:	ldr	r0, [sp]
   17878:	ldr	r1, [sp, #4]
   1787c:	add	r0, r1, r0
   17880:	str	r0, [sp, #4]
   17884:	ldr	r0, [sp]
   17888:	ldr	r1, [sp, #12]
   1788c:	sub	r0, r1, r0
   17890:	str	r0, [sp, #12]
   17894:	b	17818 <__assert_fail@plt+0x60e4>
   17898:	ldr	r0, [sp, #8]
   1789c:	mov	sp, fp
   178a0:	pop	{fp, pc}
   178a4:	push	{fp, lr}
   178a8:	mov	fp, sp
   178ac:	sub	sp, sp, #32
   178b0:	str	r0, [fp, #-8]
   178b4:	str	r1, [fp, #-4]
   178b8:	str	r2, [fp, #-12]
   178bc:	ldr	r0, [fp, #-12]
   178c0:	add	r0, r0, #20
   178c4:	str	r0, [sp, #16]
   178c8:	ldr	r0, [sp, #16]
   178cc:	mov	r1, #0
   178d0:	strb	r1, [r0]
   178d4:	mov	r0, #1
   178d8:	cmp	r0, #0
   178dc:	bne	1796c <__assert_fail@plt+0x6238>
   178e0:	b	178e4 <__assert_fail@plt+0x61b0>
   178e4:	b	178e8 <__assert_fail@plt+0x61b4>
   178e8:	ldr	r0, [fp, #-8]
   178ec:	ldr	r1, [fp, #-4]
   178f0:	mov	r2, #10
   178f4:	mov	r3, #0
   178f8:	bl	22b0c <__assert_fail@plt+0x113d8>
   178fc:	rsb	r2, r2, #48	; 0x30
   17900:	ldr	r3, [sp, #16]
   17904:	mvn	lr, #0
   17908:	add	ip, r3, lr
   1790c:	str	ip, [sp, #16]
   17910:	add	r3, r3, lr
   17914:	strb	r2, [r3]
   17918:	str	r0, [sp, #12]
   1791c:	str	r1, [sp, #8]
   17920:	ldr	r0, [fp, #-8]
   17924:	ldr	r1, [fp, #-4]
   17928:	mov	r2, #10
   1792c:	mov	r3, #0
   17930:	bl	22b0c <__assert_fail@plt+0x113d8>
   17934:	str	r1, [fp, #-4]
   17938:	str	r0, [fp, #-8]
   1793c:	orr	r0, r0, r1
   17940:	cmp	r0, #0
   17944:	bne	178e8 <__assert_fail@plt+0x61b4>
   17948:	b	1794c <__assert_fail@plt+0x6218>
   1794c:	ldr	r0, [sp, #16]
   17950:	mvn	r1, #0
   17954:	add	r2, r0, r1
   17958:	str	r2, [sp, #16]
   1795c:	add	r0, r0, r1
   17960:	movw	r1, #45	; 0x2d
   17964:	strb	r1, [r0]
   17968:	b	179d8 <__assert_fail@plt+0x62a4>
   1796c:	b	17970 <__assert_fail@plt+0x623c>
   17970:	ldr	r0, [fp, #-8]
   17974:	ldr	r1, [fp, #-4]
   17978:	mov	r2, #10
   1797c:	mov	r3, #0
   17980:	bl	22b0c <__assert_fail@plt+0x113d8>
   17984:	orr	r2, r2, #48	; 0x30
   17988:	ldr	r3, [sp, #16]
   1798c:	mvn	lr, #0
   17990:	add	ip, r3, lr
   17994:	str	ip, [sp, #16]
   17998:	add	r3, r3, lr
   1799c:	strb	r2, [r3]
   179a0:	str	r0, [sp, #4]
   179a4:	str	r1, [sp]
   179a8:	ldr	r0, [fp, #-8]
   179ac:	ldr	r1, [fp, #-4]
   179b0:	mov	r2, #10
   179b4:	mov	r3, #0
   179b8:	bl	22b0c <__assert_fail@plt+0x113d8>
   179bc:	str	r1, [fp, #-4]
   179c0:	str	r0, [fp, #-8]
   179c4:	orr	r0, r0, r1
   179c8:	cmp	r0, #0
   179cc:	bne	17970 <__assert_fail@plt+0x623c>
   179d0:	b	179d4 <__assert_fail@plt+0x62a0>
   179d4:	b	179d8 <__assert_fail@plt+0x62a4>
   179d8:	ldr	r0, [sp, #16]
   179dc:	mov	sp, fp
   179e0:	pop	{fp, pc}
   179e4:	push	{fp, lr}
   179e8:	mov	fp, sp
   179ec:	sub	sp, sp, #24
   179f0:	str	r0, [fp, #-4]
   179f4:	ldr	r0, [fp, #-4]
   179f8:	movw	r1, #0
   179fc:	cmp	r0, r1
   17a00:	bne	17a24 <__assert_fail@plt+0x62f0>
   17a04:	movw	r0, #21344	; 0x5360
   17a08:	movt	r0, #3
   17a0c:	ldr	r1, [r0]
   17a10:	movw	r0, #16171	; 0x3f2b
   17a14:	movt	r0, #2
   17a18:	bl	116f8 <fputs@plt>
   17a1c:	str	r0, [sp, #8]
   17a20:	bl	11710 <abort@plt>
   17a24:	ldr	r0, [fp, #-4]
   17a28:	movw	r1, #47	; 0x2f
   17a2c:	bl	116a4 <strrchr@plt>
   17a30:	str	r0, [fp, #-8]
   17a34:	ldr	r0, [fp, #-8]
   17a38:	movw	r1, #0
   17a3c:	cmp	r0, r1
   17a40:	beq	17a54 <__assert_fail@plt+0x6320>
   17a44:	ldr	r0, [fp, #-8]
   17a48:	add	r0, r0, #1
   17a4c:	str	r0, [sp, #4]
   17a50:	b	17a5c <__assert_fail@plt+0x6328>
   17a54:	ldr	r0, [fp, #-4]
   17a58:	str	r0, [sp, #4]
   17a5c:	ldr	r0, [sp, #4]
   17a60:	str	r0, [sp, #12]
   17a64:	ldr	r0, [sp, #12]
   17a68:	ldr	r1, [fp, #-4]
   17a6c:	sub	r0, r0, r1
   17a70:	cmp	r0, #7
   17a74:	blt	17ae0 <__assert_fail@plt+0x63ac>
   17a78:	ldr	r0, [sp, #12]
   17a7c:	mvn	r1, #6
   17a80:	add	r0, r0, r1
   17a84:	movw	r1, #16227	; 0x3f63
   17a88:	movt	r1, #2
   17a8c:	movw	r2, #7
   17a90:	bl	11704 <strncmp@plt>
   17a94:	cmp	r0, #0
   17a98:	bne	17ae0 <__assert_fail@plt+0x63ac>
   17a9c:	ldr	r0, [sp, #12]
   17aa0:	str	r0, [fp, #-4]
   17aa4:	ldr	r0, [sp, #12]
   17aa8:	movw	r1, #16235	; 0x3f6b
   17aac:	movt	r1, #2
   17ab0:	movw	r2, #3
   17ab4:	bl	11704 <strncmp@plt>
   17ab8:	cmp	r0, #0
   17abc:	bne	17adc <__assert_fail@plt+0x63a8>
   17ac0:	ldr	r0, [sp, #12]
   17ac4:	add	r0, r0, #3
   17ac8:	str	r0, [fp, #-4]
   17acc:	ldr	r0, [fp, #-4]
   17ad0:	movw	r1, #21328	; 0x5350
   17ad4:	movt	r1, #3
   17ad8:	str	r0, [r1]
   17adc:	b	17ae0 <__assert_fail@plt+0x63ac>
   17ae0:	ldr	r0, [fp, #-4]
   17ae4:	movw	r1, #21808	; 0x5530
   17ae8:	movt	r1, #3
   17aec:	str	r0, [r1]
   17af0:	ldr	r0, [fp, #-4]
   17af4:	movw	r1, #21332	; 0x5354
   17af8:	movt	r1, #3
   17afc:	str	r0, [r1]
   17b00:	mov	sp, fp
   17b04:	pop	{fp, pc}
   17b08:	push	{fp, lr}
   17b0c:	mov	fp, sp
   17b10:	sub	sp, sp, #24
   17b14:	str	r0, [fp, #-4]
   17b18:	bl	115f0 <__errno_location@plt>
   17b1c:	ldr	r0, [r0]
   17b20:	str	r0, [fp, #-8]
   17b24:	ldr	r0, [fp, #-4]
   17b28:	movw	lr, #0
   17b2c:	cmp	r0, lr
   17b30:	beq	17b40 <__assert_fail@plt+0x640c>
   17b34:	ldr	r0, [fp, #-4]
   17b38:	str	r0, [sp, #8]
   17b3c:	b	17b50 <__assert_fail@plt+0x641c>
   17b40:	movw	r0, #21812	; 0x5534
   17b44:	movt	r0, #3
   17b48:	str	r0, [sp, #8]
   17b4c:	b	17b50 <__assert_fail@plt+0x641c>
   17b50:	ldr	r0, [sp, #8]
   17b54:	movw	r1, #48	; 0x30
   17b58:	bl	1dd80 <__assert_fail@plt+0xc64c>
   17b5c:	str	r0, [sp, #12]
   17b60:	ldr	r0, [fp, #-8]
   17b64:	str	r0, [sp, #4]
   17b68:	bl	115f0 <__errno_location@plt>
   17b6c:	ldr	r1, [sp, #4]
   17b70:	str	r1, [r0]
   17b74:	ldr	r0, [sp, #12]
   17b78:	mov	sp, fp
   17b7c:	pop	{fp, pc}
   17b80:	sub	sp, sp, #8
   17b84:	str	r0, [sp, #4]
   17b88:	ldr	r0, [sp, #4]
   17b8c:	movw	r1, #0
   17b90:	cmp	r0, r1
   17b94:	beq	17ba4 <__assert_fail@plt+0x6470>
   17b98:	ldr	r0, [sp, #4]
   17b9c:	str	r0, [sp]
   17ba0:	b	17bb4 <__assert_fail@plt+0x6480>
   17ba4:	movw	r0, #21812	; 0x5534
   17ba8:	movt	r0, #3
   17bac:	str	r0, [sp]
   17bb0:	b	17bb4 <__assert_fail@plt+0x6480>
   17bb4:	ldr	r0, [sp]
   17bb8:	ldr	r0, [r0]
   17bbc:	add	sp, sp, #8
   17bc0:	bx	lr
   17bc4:	sub	sp, sp, #16
   17bc8:	str	r0, [sp, #12]
   17bcc:	str	r1, [sp, #8]
   17bd0:	ldr	r0, [sp, #8]
   17bd4:	ldr	r1, [sp, #12]
   17bd8:	movw	r2, #0
   17bdc:	cmp	r1, r2
   17be0:	str	r0, [sp, #4]
   17be4:	beq	17bf4 <__assert_fail@plt+0x64c0>
   17be8:	ldr	r0, [sp, #12]
   17bec:	str	r0, [sp]
   17bf0:	b	17c04 <__assert_fail@plt+0x64d0>
   17bf4:	movw	r0, #21812	; 0x5534
   17bf8:	movt	r0, #3
   17bfc:	str	r0, [sp]
   17c00:	b	17c04 <__assert_fail@plt+0x64d0>
   17c04:	ldr	r0, [sp]
   17c08:	ldr	r1, [sp, #4]
   17c0c:	str	r1, [r0]
   17c10:	add	sp, sp, #16
   17c14:	bx	lr
   17c18:	sub	sp, sp, #32
   17c1c:	str	r0, [sp, #28]
   17c20:	strb	r1, [sp, #27]
   17c24:	str	r2, [sp, #20]
   17c28:	ldrb	r0, [sp, #27]
   17c2c:	strb	r0, [sp, #19]
   17c30:	ldr	r0, [sp, #28]
   17c34:	movw	r1, #0
   17c38:	cmp	r0, r1
   17c3c:	beq	17c4c <__assert_fail@plt+0x6518>
   17c40:	ldr	r0, [sp, #28]
   17c44:	str	r0, [sp]
   17c48:	b	17c5c <__assert_fail@plt+0x6528>
   17c4c:	movw	r0, #21812	; 0x5534
   17c50:	movt	r0, #3
   17c54:	str	r0, [sp]
   17c58:	b	17c5c <__assert_fail@plt+0x6528>
   17c5c:	ldr	r0, [sp]
   17c60:	add	r0, r0, #8
   17c64:	ldrb	r1, [sp, #19]
   17c68:	lsr	r1, r1, #5
   17c6c:	add	r0, r0, r1, lsl #2
   17c70:	str	r0, [sp, #12]
   17c74:	ldrb	r0, [sp, #19]
   17c78:	and	r0, r0, #31
   17c7c:	str	r0, [sp, #8]
   17c80:	ldr	r0, [sp, #12]
   17c84:	ldr	r0, [r0]
   17c88:	ldr	r1, [sp, #8]
   17c8c:	lsr	r0, r0, r1
   17c90:	and	r0, r0, #1
   17c94:	str	r0, [sp, #4]
   17c98:	ldr	r0, [sp, #20]
   17c9c:	and	r0, r0, #1
   17ca0:	ldr	r1, [sp, #4]
   17ca4:	eor	r0, r0, r1
   17ca8:	ldr	r1, [sp, #8]
   17cac:	lsl	r0, r0, r1
   17cb0:	ldr	r1, [sp, #12]
   17cb4:	ldr	r2, [r1]
   17cb8:	eor	r0, r2, r0
   17cbc:	str	r0, [r1]
   17cc0:	ldr	r0, [sp, #4]
   17cc4:	add	sp, sp, #32
   17cc8:	bx	lr
   17ccc:	sub	sp, sp, #12
   17cd0:	str	r0, [sp, #8]
   17cd4:	str	r1, [sp, #4]
   17cd8:	ldr	r0, [sp, #8]
   17cdc:	movw	r1, #0
   17ce0:	cmp	r0, r1
   17ce4:	bne	17cf4 <__assert_fail@plt+0x65c0>
   17ce8:	movw	r0, #21812	; 0x5534
   17cec:	movt	r0, #3
   17cf0:	str	r0, [sp, #8]
   17cf4:	ldr	r0, [sp, #8]
   17cf8:	ldr	r0, [r0, #4]
   17cfc:	str	r0, [sp]
   17d00:	ldr	r0, [sp, #4]
   17d04:	ldr	r1, [sp, #8]
   17d08:	str	r0, [r1, #4]
   17d0c:	ldr	r0, [sp]
   17d10:	add	sp, sp, #12
   17d14:	bx	lr
   17d18:	push	{fp, lr}
   17d1c:	mov	fp, sp
   17d20:	sub	sp, sp, #16
   17d24:	str	r0, [fp, #-4]
   17d28:	str	r1, [sp, #8]
   17d2c:	str	r2, [sp, #4]
   17d30:	ldr	r0, [fp, #-4]
   17d34:	movw	r1, #0
   17d38:	cmp	r0, r1
   17d3c:	bne	17d4c <__assert_fail@plt+0x6618>
   17d40:	movw	r0, #21812	; 0x5534
   17d44:	movt	r0, #3
   17d48:	str	r0, [fp, #-4]
   17d4c:	ldr	r0, [fp, #-4]
   17d50:	movw	r1, #10
   17d54:	str	r1, [r0]
   17d58:	ldr	r0, [sp, #8]
   17d5c:	movw	r1, #0
   17d60:	cmp	r0, r1
   17d64:	beq	17d78 <__assert_fail@plt+0x6644>
   17d68:	ldr	r0, [sp, #4]
   17d6c:	movw	r1, #0
   17d70:	cmp	r0, r1
   17d74:	bne	17d7c <__assert_fail@plt+0x6648>
   17d78:	bl	11710 <abort@plt>
   17d7c:	ldr	r0, [sp, #8]
   17d80:	ldr	r1, [fp, #-4]
   17d84:	str	r0, [r1, #40]	; 0x28
   17d88:	ldr	r0, [sp, #4]
   17d8c:	ldr	r1, [fp, #-4]
   17d90:	str	r0, [r1, #44]	; 0x2c
   17d94:	mov	sp, fp
   17d98:	pop	{fp, pc}
   17d9c:	push	{r4, r5, r6, sl, fp, lr}
   17da0:	add	fp, sp, #16
   17da4:	sub	sp, sp, #64	; 0x40
   17da8:	ldr	ip, [fp, #8]
   17dac:	str	r0, [fp, #-20]	; 0xffffffec
   17db0:	str	r1, [fp, #-24]	; 0xffffffe8
   17db4:	str	r2, [fp, #-28]	; 0xffffffe4
   17db8:	str	r3, [fp, #-32]	; 0xffffffe0
   17dbc:	ldr	r0, [fp, #8]
   17dc0:	movw	r1, #0
   17dc4:	cmp	r0, r1
   17dc8:	str	ip, [sp, #32]
   17dcc:	beq	17ddc <__assert_fail@plt+0x66a8>
   17dd0:	ldr	r0, [fp, #8]
   17dd4:	str	r0, [sp, #28]
   17dd8:	b	17dec <__assert_fail@plt+0x66b8>
   17ddc:	movw	r0, #21812	; 0x5534
   17de0:	movt	r0, #3
   17de4:	str	r0, [sp, #28]
   17de8:	b	17dec <__assert_fail@plt+0x66b8>
   17dec:	ldr	r0, [sp, #28]
   17df0:	str	r0, [fp, #-36]	; 0xffffffdc
   17df4:	bl	115f0 <__errno_location@plt>
   17df8:	ldr	r0, [r0]
   17dfc:	str	r0, [sp, #40]	; 0x28
   17e00:	ldr	r0, [fp, #-20]	; 0xffffffec
   17e04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17e0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17e10:	ldr	lr, [fp, #-36]	; 0xffffffdc
   17e14:	ldr	lr, [lr]
   17e18:	ldr	ip, [fp, #-36]	; 0xffffffdc
   17e1c:	ldr	ip, [ip, #4]
   17e20:	ldr	r4, [fp, #-36]	; 0xffffffdc
   17e24:	add	r4, r4, #8
   17e28:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17e2c:	ldr	r5, [r5, #40]	; 0x28
   17e30:	ldr	r6, [fp, #-36]	; 0xffffffdc
   17e34:	ldr	r6, [r6, #44]	; 0x2c
   17e38:	str	lr, [sp]
   17e3c:	str	ip, [sp, #4]
   17e40:	str	r4, [sp, #8]
   17e44:	str	r5, [sp, #12]
   17e48:	str	r6, [sp, #16]
   17e4c:	bl	17e74 <__assert_fail@plt+0x6740>
   17e50:	str	r0, [sp, #36]	; 0x24
   17e54:	ldr	r0, [sp, #40]	; 0x28
   17e58:	str	r0, [sp, #24]
   17e5c:	bl	115f0 <__errno_location@plt>
   17e60:	ldr	r1, [sp, #24]
   17e64:	str	r1, [r0]
   17e68:	ldr	r0, [sp, #36]	; 0x24
   17e6c:	sub	sp, fp, #16
   17e70:	pop	{r4, r5, r6, sl, fp, pc}
   17e74:	push	{r4, r5, r6, sl, fp, lr}
   17e78:	add	fp, sp, #16
   17e7c:	sub	sp, sp, #168	; 0xa8
   17e80:	ldr	ip, [fp, #24]
   17e84:	ldr	lr, [fp, #20]
   17e88:	ldr	r4, [fp, #16]
   17e8c:	ldr	r5, [fp, #12]
   17e90:	ldr	r6, [fp, #8]
   17e94:	str	r0, [fp, #-24]	; 0xffffffe8
   17e98:	str	r1, [fp, #-28]	; 0xffffffe4
   17e9c:	str	r2, [fp, #-32]	; 0xffffffe0
   17ea0:	str	r3, [fp, #-36]	; 0xffffffdc
   17ea4:	movw	r0, #0
   17ea8:	str	r0, [fp, #-44]	; 0xffffffd4
   17eac:	str	r0, [fp, #-48]	; 0xffffffd0
   17eb0:	str	r0, [fp, #-52]	; 0xffffffcc
   17eb4:	str	r0, [fp, #-56]	; 0xffffffc8
   17eb8:	movw	r0, #0
   17ebc:	strb	r0, [fp, #-57]	; 0xffffffc7
   17ec0:	str	r6, [sp, #80]	; 0x50
   17ec4:	str	lr, [sp, #76]	; 0x4c
   17ec8:	str	r4, [sp, #72]	; 0x48
   17ecc:	str	r5, [sp, #68]	; 0x44
   17ed0:	str	ip, [sp, #64]	; 0x40
   17ed4:	bl	114d0 <__ctype_get_mb_cur_max@plt>
   17ed8:	cmp	r0, #1
   17edc:	movw	r0, #0
   17ee0:	moveq	r0, #1
   17ee4:	and	r0, r0, #1
   17ee8:	strb	r0, [fp, #-58]	; 0xffffffc6
   17eec:	ldr	r0, [fp, #12]
   17ef0:	and	r0, r0, #2
   17ef4:	cmp	r0, #0
   17ef8:	movw	r0, #0
   17efc:	movne	r0, #1
   17f00:	and	r0, r0, #1
   17f04:	strb	r0, [fp, #-59]	; 0xffffffc5
   17f08:	movw	r0, #0
   17f0c:	strb	r0, [fp, #-60]	; 0xffffffc4
   17f10:	strb	r0, [fp, #-61]	; 0xffffffc3
   17f14:	movw	r0, #1
   17f18:	strb	r0, [fp, #-62]	; 0xffffffc2
   17f1c:	ldr	r0, [fp, #8]
   17f20:	cmp	r0, #10
   17f24:	str	r0, [sp, #60]	; 0x3c
   17f28:	bhi	18150 <__assert_fail@plt+0x6a1c>
   17f2c:	add	r0, pc, #8
   17f30:	ldr	r1, [sp, #60]	; 0x3c
   17f34:	ldr	r0, [r0, r1, lsl #2]
   17f38:	mov	pc, r0
   17f3c:	andeq	r8, r1, r4, asr #2
   17f40:	andeq	r8, r1, r0, asr #1
   17f44:	andeq	r8, r1, r0, ror #1
   17f48:	strheq	r8, [r1], -r8	; <UNPREDICTABLE>
   17f4c:	andeq	r8, r1, r8, asr #1
   17f50:	andeq	r7, r1, r8, ror pc
   17f54:	andeq	r7, r1, r8, ror #30
   17f58:	ldrdeq	r7, [r1], -ip
   17f5c:	strdeq	r7, [r1], -r0
   17f60:	strdeq	r7, [r1], -r0
   17f64:	strdeq	r7, [r1], -r0
   17f68:	movw	r0, #5
   17f6c:	str	r0, [fp, #8]
   17f70:	movw	r0, #1
   17f74:	strb	r0, [fp, #-59]	; 0xffffffc5
   17f78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17f7c:	tst	r0, #1
   17f80:	bne	17fbc <__assert_fail@plt+0x6888>
   17f84:	b	17f88 <__assert_fail@plt+0x6854>
   17f88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17f8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17f90:	cmp	r0, r1
   17f94:	bcs	17fac <__assert_fail@plt+0x6878>
   17f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17fa0:	add	r0, r0, r1
   17fa4:	movw	r1, #34	; 0x22
   17fa8:	strb	r1, [r0]
   17fac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17fb0:	add	r0, r0, #1
   17fb4:	str	r0, [fp, #-44]	; 0xffffffd4
   17fb8:	b	17fbc <__assert_fail@plt+0x6888>
   17fbc:	movw	r0, #1
   17fc0:	strb	r0, [fp, #-57]	; 0xffffffc7
   17fc4:	movw	r0, #15412	; 0x3c34
   17fc8:	movt	r0, #2
   17fcc:	str	r0, [fp, #-52]	; 0xffffffcc
   17fd0:	movw	r0, #1
   17fd4:	str	r0, [fp, #-56]	; 0xffffffc8
   17fd8:	b	18154 <__assert_fail@plt+0x6a20>
   17fdc:	movw	r0, #1
   17fe0:	strb	r0, [fp, #-57]	; 0xffffffc7
   17fe4:	movw	r0, #0
   17fe8:	strb	r0, [fp, #-59]	; 0xffffffc5
   17fec:	b	18154 <__assert_fail@plt+0x6a20>
   17ff0:	ldr	r0, [fp, #8]
   17ff4:	cmp	r0, #10
   17ff8:	beq	18024 <__assert_fail@plt+0x68f0>
   17ffc:	ldr	r1, [fp, #8]
   18000:	movw	r0, #16315	; 0x3fbb
   18004:	movt	r0, #2
   18008:	bl	1a064 <__assert_fail@plt+0x8930>
   1800c:	str	r0, [fp, #20]
   18010:	ldr	r1, [fp, #8]
   18014:	movw	r0, #16317	; 0x3fbd
   18018:	movt	r0, #2
   1801c:	bl	1a064 <__assert_fail@plt+0x8930>
   18020:	str	r0, [fp, #24]
   18024:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18028:	tst	r0, #1
   1802c:	bne	18098 <__assert_fail@plt+0x6964>
   18030:	ldr	r0, [fp, #20]
   18034:	str	r0, [fp, #-52]	; 0xffffffcc
   18038:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1803c:	ldrsb	r0, [r0]
   18040:	cmp	r0, #0
   18044:	beq	18094 <__assert_fail@plt+0x6960>
   18048:	b	1804c <__assert_fail@plt+0x6918>
   1804c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18050:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18054:	cmp	r0, r1
   18058:	bcs	18074 <__assert_fail@plt+0x6940>
   1805c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18060:	ldrb	r0, [r0]
   18064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18068:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1806c:	add	r1, r1, r2
   18070:	strb	r0, [r1]
   18074:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18078:	add	r0, r0, #1
   1807c:	str	r0, [fp, #-44]	; 0xffffffd4
   18080:	b	18084 <__assert_fail@plt+0x6950>
   18084:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18088:	add	r0, r0, #1
   1808c:	str	r0, [fp, #-52]	; 0xffffffcc
   18090:	b	18038 <__assert_fail@plt+0x6904>
   18094:	b	18098 <__assert_fail@plt+0x6964>
   18098:	movw	r0, #1
   1809c:	strb	r0, [fp, #-57]	; 0xffffffc7
   180a0:	ldr	r0, [fp, #24]
   180a4:	str	r0, [fp, #-52]	; 0xffffffcc
   180a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   180ac:	bl	1159c <strlen@plt>
   180b0:	str	r0, [fp, #-56]	; 0xffffffc8
   180b4:	b	18154 <__assert_fail@plt+0x6a20>
   180b8:	movw	r0, #1
   180bc:	strb	r0, [fp, #-57]	; 0xffffffc7
   180c0:	movw	r0, #1
   180c4:	strb	r0, [fp, #-59]	; 0xffffffc5
   180c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   180cc:	tst	r0, #1
   180d0:	bne	180dc <__assert_fail@plt+0x69a8>
   180d4:	movw	r0, #1
   180d8:	strb	r0, [fp, #-57]	; 0xffffffc7
   180dc:	b	180e0 <__assert_fail@plt+0x69ac>
   180e0:	movw	r0, #2
   180e4:	str	r0, [fp, #8]
   180e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   180ec:	tst	r0, #1
   180f0:	bne	1812c <__assert_fail@plt+0x69f8>
   180f4:	b	180f8 <__assert_fail@plt+0x69c4>
   180f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   180fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18100:	cmp	r0, r1
   18104:	bcs	1811c <__assert_fail@plt+0x69e8>
   18108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1810c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18110:	add	r0, r0, r1
   18114:	movw	r1, #39	; 0x27
   18118:	strb	r1, [r0]
   1811c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18120:	add	r0, r0, #1
   18124:	str	r0, [fp, #-44]	; 0xffffffd4
   18128:	b	1812c <__assert_fail@plt+0x69f8>
   1812c:	movw	r0, #16317	; 0x3fbd
   18130:	movt	r0, #2
   18134:	str	r0, [fp, #-52]	; 0xffffffcc
   18138:	movw	r0, #1
   1813c:	str	r0, [fp, #-56]	; 0xffffffc8
   18140:	b	18154 <__assert_fail@plt+0x6a20>
   18144:	movw	r0, #0
   18148:	strb	r0, [fp, #-59]	; 0xffffffc5
   1814c:	b	18154 <__assert_fail@plt+0x6a20>
   18150:	bl	11710 <abort@plt>
   18154:	movw	r0, #0
   18158:	str	r0, [fp, #-40]	; 0xffffffd8
   1815c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18160:	cmn	r0, #1
   18164:	bne	18190 <__assert_fail@plt+0x6a5c>
   18168:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1816c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18170:	add	r0, r0, r1
   18174:	ldrb	r0, [r0]
   18178:	cmp	r0, #0
   1817c:	movw	r0, #0
   18180:	moveq	r0, #1
   18184:	and	r0, r0, #1
   18188:	str	r0, [sp, #56]	; 0x38
   1818c:	b	181ac <__assert_fail@plt+0x6a78>
   18190:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18194:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18198:	cmp	r0, r1
   1819c:	movw	r0, #0
   181a0:	moveq	r0, #1
   181a4:	and	r0, r0, #1
   181a8:	str	r0, [sp, #56]	; 0x38
   181ac:	ldr	r0, [sp, #56]	; 0x38
   181b0:	cmp	r0, #0
   181b4:	movw	r0, #0
   181b8:	movne	r0, #1
   181bc:	mvn	r1, #0
   181c0:	eor	r0, r0, r1
   181c4:	tst	r0, #1
   181c8:	beq	193b8 <__assert_fail@plt+0x7c84>
   181cc:	movw	r0, #0
   181d0:	strb	r0, [fp, #-65]	; 0xffffffbf
   181d4:	strb	r0, [fp, #-66]	; 0xffffffbe
   181d8:	strb	r0, [fp, #-67]	; 0xffffffbd
   181dc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   181e0:	tst	r0, #1
   181e4:	beq	18290 <__assert_fail@plt+0x6b5c>
   181e8:	ldr	r0, [fp, #8]
   181ec:	cmp	r0, #2
   181f0:	beq	18290 <__assert_fail@plt+0x6b5c>
   181f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   181f8:	cmp	r0, #0
   181fc:	beq	18290 <__assert_fail@plt+0x6b5c>
   18200:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18204:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18208:	add	r0, r0, r1
   1820c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18210:	cmn	r1, #1
   18214:	str	r0, [sp, #52]	; 0x34
   18218:	bne	18240 <__assert_fail@plt+0x6b0c>
   1821c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18220:	movw	r1, #1
   18224:	cmp	r1, r0
   18228:	bcs	18240 <__assert_fail@plt+0x6b0c>
   1822c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18230:	bl	1159c <strlen@plt>
   18234:	str	r0, [fp, #-36]	; 0xffffffdc
   18238:	str	r0, [sp, #48]	; 0x30
   1823c:	b	18248 <__assert_fail@plt+0x6b14>
   18240:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18244:	str	r0, [sp, #48]	; 0x30
   18248:	ldr	r0, [sp, #48]	; 0x30
   1824c:	ldr	r1, [sp, #52]	; 0x34
   18250:	cmp	r1, r0
   18254:	bhi	18290 <__assert_fail@plt+0x6b5c>
   18258:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1825c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18260:	add	r0, r0, r1
   18264:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18268:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1826c:	bl	11458 <memcmp@plt>
   18270:	cmp	r0, #0
   18274:	bne	18290 <__assert_fail@plt+0x6b5c>
   18278:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1827c:	tst	r0, #1
   18280:	beq	18288 <__assert_fail@plt+0x6b54>
   18284:	b	19538 <__assert_fail@plt+0x7e04>
   18288:	movw	r0, #1
   1828c:	strb	r0, [fp, #-65]	; 0xffffffbf
   18290:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18294:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18298:	ldrb	r0, [r0, r1]
   1829c:	strb	r0, [fp, #-63]	; 0xffffffc1
   182a0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   182a4:	mov	r1, r0
   182a8:	cmp	r0, #126	; 0x7e
   182ac:	str	r1, [sp, #44]	; 0x2c
   182b0:	bhi	18b20 <__assert_fail@plt+0x73ec>
   182b4:	add	r0, pc, #8
   182b8:	ldr	r1, [sp, #44]	; 0x2c
   182bc:	ldr	r0, [r0, r1, lsl #2]
   182c0:	mov	pc, r0
   182c4:	andeq	r8, r1, r0, asr #9
   182c8:	andeq	r8, r1, r0, lsr #22
   182cc:	andeq	r8, r1, r0, lsr #22
   182d0:	andeq	r8, r1, r0, lsr #22
   182d4:	andeq	r8, r1, r0, lsr #22
   182d8:	andeq	r8, r1, r0, lsr #22
   182dc:	andeq	r8, r1, r0, lsr #22
   182e0:	andeq	r8, r1, r8, asr #17
   182e4:	ldrdeq	r8, [r1], -r4
   182e8:	andeq	r8, r1, r4, lsl #18
   182ec:	andeq	r8, r1, ip, ror #17
   182f0:	andeq	r8, r1, r0, lsl r9
   182f4:	andeq	r8, r1, r0, ror #17
   182f8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   182fc:	andeq	r8, r1, r0, lsr #22
   18300:	andeq	r8, r1, r0, lsr #22
   18304:	andeq	r8, r1, r0, lsr #22
   18308:	andeq	r8, r1, r0, lsr #22
   1830c:	andeq	r8, r1, r0, lsr #22
   18310:	andeq	r8, r1, r0, lsr #22
   18314:	andeq	r8, r1, r0, lsr #22
   18318:	andeq	r8, r1, r0, lsr #22
   1831c:	andeq	r8, r1, r0, lsr #22
   18320:	andeq	r8, r1, r0, lsr #22
   18324:	andeq	r8, r1, r0, lsr #22
   18328:	andeq	r8, r1, r0, lsr #22
   1832c:	andeq	r8, r1, r0, lsr #22
   18330:	andeq	r8, r1, r0, lsr #22
   18334:	andeq	r8, r1, r0, lsr #22
   18338:	andeq	r8, r1, r0, lsr #22
   1833c:	andeq	r8, r1, r0, lsr #22
   18340:	andeq	r8, r1, r0, lsr #22
   18344:	strdeq	r8, [r1], -r4
   18348:	strdeq	r8, [r1], -ip
   1834c:	strdeq	r8, [r1], -ip
   18350:	andeq	r8, r1, r0, ror #19
   18354:	strdeq	r8, [r1], -ip
   18358:	andeq	r8, r1, r4, lsl fp
   1835c:	strdeq	r8, [r1], -ip
   18360:	andeq	r8, r1, ip, lsl sl
   18364:	strdeq	r8, [r1], -ip
   18368:	strdeq	r8, [r1], -ip
   1836c:	strdeq	r8, [r1], -ip
   18370:	andeq	r8, r1, r4, lsl fp
   18374:	andeq	r8, r1, r4, lsl fp
   18378:	andeq	r8, r1, r4, lsl fp
   1837c:	andeq	r8, r1, r4, lsl fp
   18380:	andeq	r8, r1, r4, lsl fp
   18384:	andeq	r8, r1, r4, lsl fp
   18388:	andeq	r8, r1, r4, lsl fp
   1838c:	andeq	r8, r1, r4, lsl fp
   18390:	andeq	r8, r1, r4, lsl fp
   18394:	andeq	r8, r1, r4, lsl fp
   18398:	andeq	r8, r1, r4, lsl fp
   1839c:	andeq	r8, r1, r4, lsl fp
   183a0:	andeq	r8, r1, r4, lsl fp
   183a4:	andeq	r8, r1, r4, lsl fp
   183a8:	andeq	r8, r1, r4, lsl fp
   183ac:	andeq	r8, r1, r4, lsl fp
   183b0:	strdeq	r8, [r1], -ip
   183b4:	strdeq	r8, [r1], -ip
   183b8:	strdeq	r8, [r1], -ip
   183bc:	strdeq	r8, [r1], -ip
   183c0:	andeq	r8, r1, ip, asr #13
   183c4:	andeq	r8, r1, r0, lsr #22
   183c8:	andeq	r8, r1, r4, lsl fp
   183cc:	andeq	r8, r1, r4, lsl fp
   183d0:	andeq	r8, r1, r4, lsl fp
   183d4:	andeq	r8, r1, r4, lsl fp
   183d8:	andeq	r8, r1, r4, lsl fp
   183dc:	andeq	r8, r1, r4, lsl fp
   183e0:	andeq	r8, r1, r4, lsl fp
   183e4:	andeq	r8, r1, r4, lsl fp
   183e8:	andeq	r8, r1, r4, lsl fp
   183ec:	andeq	r8, r1, r4, lsl fp
   183f0:	andeq	r8, r1, r4, lsl fp
   183f4:	andeq	r8, r1, r4, lsl fp
   183f8:	andeq	r8, r1, r4, lsl fp
   183fc:	andeq	r8, r1, r4, lsl fp
   18400:	andeq	r8, r1, r4, lsl fp
   18404:	andeq	r8, r1, r4, lsl fp
   18408:	andeq	r8, r1, r4, lsl fp
   1840c:	andeq	r8, r1, r4, lsl fp
   18410:	andeq	r8, r1, r4, lsl fp
   18414:	andeq	r8, r1, r4, lsl fp
   18418:	andeq	r8, r1, r4, lsl fp
   1841c:	andeq	r8, r1, r4, lsl fp
   18420:	andeq	r8, r1, r4, lsl fp
   18424:	andeq	r8, r1, r4, lsl fp
   18428:	andeq	r8, r1, r4, lsl fp
   1842c:	andeq	r8, r1, r4, lsl fp
   18430:	strdeq	r8, [r1], -ip
   18434:	andeq	r8, r1, ip, lsl r9
   18438:	andeq	r8, r1, r4, lsl fp
   1843c:	strdeq	r8, [r1], -ip
   18440:	andeq	r8, r1, r4, lsl fp
   18444:	strdeq	r8, [r1], -ip
   18448:	andeq	r8, r1, r4, lsl fp
   1844c:	andeq	r8, r1, r4, lsl fp
   18450:	andeq	r8, r1, r4, lsl fp
   18454:	andeq	r8, r1, r4, lsl fp
   18458:	andeq	r8, r1, r4, lsl fp
   1845c:	andeq	r8, r1, r4, lsl fp
   18460:	andeq	r8, r1, r4, lsl fp
   18464:	andeq	r8, r1, r4, lsl fp
   18468:	andeq	r8, r1, r4, lsl fp
   1846c:	andeq	r8, r1, r4, lsl fp
   18470:	andeq	r8, r1, r4, lsl fp
   18474:	andeq	r8, r1, r4, lsl fp
   18478:	andeq	r8, r1, r4, lsl fp
   1847c:	andeq	r8, r1, r4, lsl fp
   18480:	andeq	r8, r1, r4, lsl fp
   18484:	andeq	r8, r1, r4, lsl fp
   18488:	andeq	r8, r1, r4, lsl fp
   1848c:	andeq	r8, r1, r4, lsl fp
   18490:	andeq	r8, r1, r4, lsl fp
   18494:	andeq	r8, r1, r4, lsl fp
   18498:	andeq	r8, r1, r4, lsl fp
   1849c:	andeq	r8, r1, r4, lsl fp
   184a0:	andeq	r8, r1, r4, lsl fp
   184a4:	andeq	r8, r1, r4, lsl fp
   184a8:	andeq	r8, r1, r4, lsl fp
   184ac:	andeq	r8, r1, r4, lsl fp
   184b0:	andeq	r8, r1, ip, lsr #19
   184b4:	strdeq	r8, [r1], -ip
   184b8:	andeq	r8, r1, ip, lsr #19
   184bc:	andeq	r8, r1, r0, ror #19
   184c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   184c4:	tst	r0, #1
   184c8:	beq	186b0 <__assert_fail@plt+0x6f7c>
   184cc:	b	184d0 <__assert_fail@plt+0x6d9c>
   184d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   184d4:	tst	r0, #1
   184d8:	beq	184e0 <__assert_fail@plt+0x6dac>
   184dc:	b	19538 <__assert_fail@plt+0x7e04>
   184e0:	movw	r0, #1
   184e4:	strb	r0, [fp, #-66]	; 0xffffffbe
   184e8:	ldr	r0, [fp, #8]
   184ec:	cmp	r0, #2
   184f0:	bne	185a4 <__assert_fail@plt+0x6e70>
   184f4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   184f8:	tst	r0, #1
   184fc:	bne	185a4 <__assert_fail@plt+0x6e70>
   18500:	b	18504 <__assert_fail@plt+0x6dd0>
   18504:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18508:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1850c:	cmp	r0, r1
   18510:	bcs	18528 <__assert_fail@plt+0x6df4>
   18514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18518:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1851c:	add	r0, r0, r1
   18520:	movw	r1, #39	; 0x27
   18524:	strb	r1, [r0]
   18528:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1852c:	add	r0, r0, #1
   18530:	str	r0, [fp, #-44]	; 0xffffffd4
   18534:	b	18538 <__assert_fail@plt+0x6e04>
   18538:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1853c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18540:	cmp	r0, r1
   18544:	bcs	1855c <__assert_fail@plt+0x6e28>
   18548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1854c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18550:	add	r0, r0, r1
   18554:	movw	r1, #36	; 0x24
   18558:	strb	r1, [r0]
   1855c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18560:	add	r0, r0, #1
   18564:	str	r0, [fp, #-44]	; 0xffffffd4
   18568:	b	1856c <__assert_fail@plt+0x6e38>
   1856c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18570:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18574:	cmp	r0, r1
   18578:	bcs	18590 <__assert_fail@plt+0x6e5c>
   1857c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18580:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18584:	add	r0, r0, r1
   18588:	movw	r1, #39	; 0x27
   1858c:	strb	r1, [r0]
   18590:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18594:	add	r0, r0, #1
   18598:	str	r0, [fp, #-44]	; 0xffffffd4
   1859c:	movw	r0, #1
   185a0:	strb	r0, [fp, #-60]	; 0xffffffc4
   185a4:	b	185a8 <__assert_fail@plt+0x6e74>
   185a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   185ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   185b0:	cmp	r0, r1
   185b4:	bcs	185cc <__assert_fail@plt+0x6e98>
   185b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   185c0:	add	r0, r0, r1
   185c4:	movw	r1, #92	; 0x5c
   185c8:	strb	r1, [r0]
   185cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   185d0:	add	r0, r0, #1
   185d4:	str	r0, [fp, #-44]	; 0xffffffd4
   185d8:	b	185dc <__assert_fail@plt+0x6ea8>
   185dc:	ldr	r0, [fp, #8]
   185e0:	cmp	r0, #2
   185e4:	beq	186a4 <__assert_fail@plt+0x6f70>
   185e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   185ec:	add	r0, r0, #1
   185f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   185f4:	cmp	r0, r1
   185f8:	bcs	186a4 <__assert_fail@plt+0x6f70>
   185fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18600:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18604:	add	r1, r1, #1
   18608:	add	r0, r0, r1
   1860c:	ldrb	r0, [r0]
   18610:	movw	r1, #48	; 0x30
   18614:	cmp	r1, r0
   18618:	bgt	186a4 <__assert_fail@plt+0x6f70>
   1861c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18620:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18624:	add	r1, r1, #1
   18628:	add	r0, r0, r1
   1862c:	ldrb	r0, [r0]
   18630:	cmp	r0, #57	; 0x39
   18634:	bgt	186a4 <__assert_fail@plt+0x6f70>
   18638:	b	1863c <__assert_fail@plt+0x6f08>
   1863c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18640:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18644:	cmp	r0, r1
   18648:	bcs	18660 <__assert_fail@plt+0x6f2c>
   1864c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18650:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18654:	add	r0, r0, r1
   18658:	movw	r1, #48	; 0x30
   1865c:	strb	r1, [r0]
   18660:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18664:	add	r0, r0, #1
   18668:	str	r0, [fp, #-44]	; 0xffffffd4
   1866c:	b	18670 <__assert_fail@plt+0x6f3c>
   18670:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18674:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18678:	cmp	r0, r1
   1867c:	bcs	18694 <__assert_fail@plt+0x6f60>
   18680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18684:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18688:	add	r0, r0, r1
   1868c:	movw	r1, #48	; 0x30
   18690:	strb	r1, [r0]
   18694:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18698:	add	r0, r0, #1
   1869c:	str	r0, [fp, #-44]	; 0xffffffd4
   186a0:	b	186a4 <__assert_fail@plt+0x6f70>
   186a4:	movw	r0, #48	; 0x30
   186a8:	strb	r0, [fp, #-63]	; 0xffffffc1
   186ac:	b	186c8 <__assert_fail@plt+0x6f94>
   186b0:	ldr	r0, [fp, #12]
   186b4:	and	r0, r0, #1
   186b8:	cmp	r0, #0
   186bc:	beq	186c4 <__assert_fail@plt+0x6f90>
   186c0:	b	193a8 <__assert_fail@plt+0x7c74>
   186c4:	b	186c8 <__assert_fail@plt+0x6f94>
   186c8:	b	19144 <__assert_fail@plt+0x7a10>
   186cc:	ldr	r0, [fp, #8]
   186d0:	cmp	r0, #2
   186d4:	str	r0, [sp, #40]	; 0x28
   186d8:	beq	186f0 <__assert_fail@plt+0x6fbc>
   186dc:	b	186e0 <__assert_fail@plt+0x6fac>
   186e0:	ldr	r0, [sp, #40]	; 0x28
   186e4:	cmp	r0, #5
   186e8:	beq	18704 <__assert_fail@plt+0x6fd0>
   186ec:	b	188c0 <__assert_fail@plt+0x718c>
   186f0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   186f4:	tst	r0, #1
   186f8:	beq	18700 <__assert_fail@plt+0x6fcc>
   186fc:	b	19538 <__assert_fail@plt+0x7e04>
   18700:	b	188c4 <__assert_fail@plt+0x7190>
   18704:	ldr	r0, [fp, #12]
   18708:	and	r0, r0, #4
   1870c:	cmp	r0, #0
   18710:	beq	188bc <__assert_fail@plt+0x7188>
   18714:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18718:	add	r0, r0, #2
   1871c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18720:	cmp	r0, r1
   18724:	bcs	188bc <__assert_fail@plt+0x7188>
   18728:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1872c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18730:	add	r1, r1, #1
   18734:	add	r0, r0, r1
   18738:	ldrb	r0, [r0]
   1873c:	cmp	r0, #63	; 0x3f
   18740:	bne	188bc <__assert_fail@plt+0x7188>
   18744:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18748:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1874c:	add	r0, r0, r1
   18750:	ldrb	r0, [r0, #2]
   18754:	mov	r1, r0
   18758:	cmp	r0, #33	; 0x21
   1875c:	str	r1, [sp, #36]	; 0x24
   18760:	beq	187b0 <__assert_fail@plt+0x707c>
   18764:	b	18768 <__assert_fail@plt+0x7034>
   18768:	ldr	r0, [sp, #36]	; 0x24
   1876c:	sub	r1, r0, #39	; 0x27
   18770:	cmp	r1, #3
   18774:	bcc	187b0 <__assert_fail@plt+0x707c>
   18778:	b	1877c <__assert_fail@plt+0x7048>
   1877c:	ldr	r0, [sp, #36]	; 0x24
   18780:	cmp	r0, #45	; 0x2d
   18784:	beq	187b0 <__assert_fail@plt+0x707c>
   18788:	b	1878c <__assert_fail@plt+0x7058>
   1878c:	ldr	r0, [sp, #36]	; 0x24
   18790:	cmp	r0, #47	; 0x2f
   18794:	beq	187b0 <__assert_fail@plt+0x707c>
   18798:	b	1879c <__assert_fail@plt+0x7068>
   1879c:	ldr	r0, [sp, #36]	; 0x24
   187a0:	sub	r1, r0, #60	; 0x3c
   187a4:	cmp	r1, #2
   187a8:	bhi	188b4 <__assert_fail@plt+0x7180>
   187ac:	b	187b0 <__assert_fail@plt+0x707c>
   187b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   187b4:	tst	r0, #1
   187b8:	beq	187c0 <__assert_fail@plt+0x708c>
   187bc:	b	19538 <__assert_fail@plt+0x7e04>
   187c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   187c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   187c8:	add	r1, r1, #2
   187cc:	add	r0, r0, r1
   187d0:	ldrb	r0, [r0]
   187d4:	strb	r0, [fp, #-63]	; 0xffffffc1
   187d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   187dc:	add	r0, r0, #2
   187e0:	str	r0, [fp, #-40]	; 0xffffffd8
   187e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   187e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   187ec:	cmp	r0, r1
   187f0:	bcs	18808 <__assert_fail@plt+0x70d4>
   187f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   187fc:	add	r0, r0, r1
   18800:	movw	r1, #63	; 0x3f
   18804:	strb	r1, [r0]
   18808:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1880c:	add	r0, r0, #1
   18810:	str	r0, [fp, #-44]	; 0xffffffd4
   18814:	b	18818 <__assert_fail@plt+0x70e4>
   18818:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1881c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18820:	cmp	r0, r1
   18824:	bcs	1883c <__assert_fail@plt+0x7108>
   18828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1882c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18830:	add	r0, r0, r1
   18834:	movw	r1, #34	; 0x22
   18838:	strb	r1, [r0]
   1883c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18840:	add	r0, r0, #1
   18844:	str	r0, [fp, #-44]	; 0xffffffd4
   18848:	b	1884c <__assert_fail@plt+0x7118>
   1884c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18850:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18854:	cmp	r0, r1
   18858:	bcs	18870 <__assert_fail@plt+0x713c>
   1885c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18860:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18864:	add	r0, r0, r1
   18868:	movw	r1, #34	; 0x22
   1886c:	strb	r1, [r0]
   18870:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18874:	add	r0, r0, #1
   18878:	str	r0, [fp, #-44]	; 0xffffffd4
   1887c:	b	18880 <__assert_fail@plt+0x714c>
   18880:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18884:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18888:	cmp	r0, r1
   1888c:	bcs	188a4 <__assert_fail@plt+0x7170>
   18890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18894:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18898:	add	r0, r0, r1
   1889c:	movw	r1, #63	; 0x3f
   188a0:	strb	r1, [r0]
   188a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   188a8:	add	r0, r0, #1
   188ac:	str	r0, [fp, #-44]	; 0xffffffd4
   188b0:	b	188b8 <__assert_fail@plt+0x7184>
   188b4:	b	188b8 <__assert_fail@plt+0x7184>
   188b8:	b	188bc <__assert_fail@plt+0x7188>
   188bc:	b	188c4 <__assert_fail@plt+0x7190>
   188c0:	b	188c4 <__assert_fail@plt+0x7190>
   188c4:	b	19144 <__assert_fail@plt+0x7a10>
   188c8:	movw	r0, #97	; 0x61
   188cc:	strb	r0, [fp, #-64]	; 0xffffffc0
   188d0:	b	18990 <__assert_fail@plt+0x725c>
   188d4:	movw	r0, #98	; 0x62
   188d8:	strb	r0, [fp, #-64]	; 0xffffffc0
   188dc:	b	18990 <__assert_fail@plt+0x725c>
   188e0:	movw	r0, #102	; 0x66
   188e4:	strb	r0, [fp, #-64]	; 0xffffffc0
   188e8:	b	18990 <__assert_fail@plt+0x725c>
   188ec:	movw	r0, #110	; 0x6e
   188f0:	strb	r0, [fp, #-64]	; 0xffffffc0
   188f4:	b	18970 <__assert_fail@plt+0x723c>
   188f8:	movw	r0, #114	; 0x72
   188fc:	strb	r0, [fp, #-64]	; 0xffffffc0
   18900:	b	18970 <__assert_fail@plt+0x723c>
   18904:	movw	r0, #116	; 0x74
   18908:	strb	r0, [fp, #-64]	; 0xffffffc0
   1890c:	b	18970 <__assert_fail@plt+0x723c>
   18910:	movw	r0, #118	; 0x76
   18914:	strb	r0, [fp, #-64]	; 0xffffffc0
   18918:	b	18990 <__assert_fail@plt+0x725c>
   1891c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   18920:	strb	r0, [fp, #-64]	; 0xffffffc0
   18924:	ldr	r0, [fp, #8]
   18928:	cmp	r0, #2
   1892c:	bne	18944 <__assert_fail@plt+0x7210>
   18930:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18934:	tst	r0, #1
   18938:	beq	18940 <__assert_fail@plt+0x720c>
   1893c:	b	19538 <__assert_fail@plt+0x7e04>
   18940:	b	192cc <__assert_fail@plt+0x7b98>
   18944:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   18948:	tst	r0, #1
   1894c:	beq	1896c <__assert_fail@plt+0x7238>
   18950:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18954:	tst	r0, #1
   18958:	beq	1896c <__assert_fail@plt+0x7238>
   1895c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18960:	cmp	r0, #0
   18964:	beq	1896c <__assert_fail@plt+0x7238>
   18968:	b	192cc <__assert_fail@plt+0x7b98>
   1896c:	b	18970 <__assert_fail@plt+0x723c>
   18970:	ldr	r0, [fp, #8]
   18974:	cmp	r0, #2
   18978:	bne	1898c <__assert_fail@plt+0x7258>
   1897c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18980:	tst	r0, #1
   18984:	beq	1898c <__assert_fail@plt+0x7258>
   18988:	b	19538 <__assert_fail@plt+0x7e04>
   1898c:	b	18990 <__assert_fail@plt+0x725c>
   18990:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   18994:	tst	r0, #1
   18998:	beq	189a8 <__assert_fail@plt+0x7274>
   1899c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   189a0:	strb	r0, [fp, #-63]	; 0xffffffc1
   189a4:	b	191b8 <__assert_fail@plt+0x7a84>
   189a8:	b	19144 <__assert_fail@plt+0x7a10>
   189ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   189b0:	cmn	r0, #1
   189b4:	bne	189cc <__assert_fail@plt+0x7298>
   189b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189bc:	ldrb	r0, [r0, #1]
   189c0:	cmp	r0, #0
   189c4:	beq	189dc <__assert_fail@plt+0x72a8>
   189c8:	b	189d8 <__assert_fail@plt+0x72a4>
   189cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   189d0:	cmp	r0, #1
   189d4:	beq	189dc <__assert_fail@plt+0x72a8>
   189d8:	b	19144 <__assert_fail@plt+0x7a10>
   189dc:	b	189e0 <__assert_fail@plt+0x72ac>
   189e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   189e4:	cmp	r0, #0
   189e8:	beq	189f0 <__assert_fail@plt+0x72bc>
   189ec:	b	19144 <__assert_fail@plt+0x7a10>
   189f0:	b	189f4 <__assert_fail@plt+0x72c0>
   189f4:	movw	r0, #1
   189f8:	strb	r0, [fp, #-67]	; 0xffffffbd
   189fc:	ldr	r0, [fp, #8]
   18a00:	cmp	r0, #2
   18a04:	bne	18a18 <__assert_fail@plt+0x72e4>
   18a08:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18a0c:	tst	r0, #1
   18a10:	beq	18a18 <__assert_fail@plt+0x72e4>
   18a14:	b	19538 <__assert_fail@plt+0x7e04>
   18a18:	b	19144 <__assert_fail@plt+0x7a10>
   18a1c:	movw	r0, #1
   18a20:	strb	r0, [fp, #-61]	; 0xffffffc3
   18a24:	strb	r0, [fp, #-67]	; 0xffffffbd
   18a28:	ldr	r0, [fp, #8]
   18a2c:	cmp	r0, #2
   18a30:	bne	18b10 <__assert_fail@plt+0x73dc>
   18a34:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18a38:	tst	r0, #1
   18a3c:	beq	18a44 <__assert_fail@plt+0x7310>
   18a40:	b	19538 <__assert_fail@plt+0x7e04>
   18a44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18a48:	cmp	r0, #0
   18a4c:	beq	18a6c <__assert_fail@plt+0x7338>
   18a50:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18a54:	cmp	r0, #0
   18a58:	bne	18a6c <__assert_fail@plt+0x7338>
   18a5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18a60:	str	r0, [fp, #-48]	; 0xffffffd0
   18a64:	movw	r0, #0
   18a68:	str	r0, [fp, #-28]	; 0xffffffe4
   18a6c:	b	18a70 <__assert_fail@plt+0x733c>
   18a70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18a74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18a78:	cmp	r0, r1
   18a7c:	bcs	18a94 <__assert_fail@plt+0x7360>
   18a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18a88:	add	r0, r0, r1
   18a8c:	movw	r1, #39	; 0x27
   18a90:	strb	r1, [r0]
   18a94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18a98:	add	r0, r0, #1
   18a9c:	str	r0, [fp, #-44]	; 0xffffffd4
   18aa0:	b	18aa4 <__assert_fail@plt+0x7370>
   18aa4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18aa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18aac:	cmp	r0, r1
   18ab0:	bcs	18ac8 <__assert_fail@plt+0x7394>
   18ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ab8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18abc:	add	r0, r0, r1
   18ac0:	movw	r1, #92	; 0x5c
   18ac4:	strb	r1, [r0]
   18ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18acc:	add	r0, r0, #1
   18ad0:	str	r0, [fp, #-44]	; 0xffffffd4
   18ad4:	b	18ad8 <__assert_fail@plt+0x73a4>
   18ad8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18adc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ae0:	cmp	r0, r1
   18ae4:	bcs	18afc <__assert_fail@plt+0x73c8>
   18ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18aec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18af0:	add	r0, r0, r1
   18af4:	movw	r1, #39	; 0x27
   18af8:	strb	r1, [r0]
   18afc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18b00:	add	r0, r0, #1
   18b04:	str	r0, [fp, #-44]	; 0xffffffd4
   18b08:	movw	r0, #0
   18b0c:	strb	r0, [fp, #-60]	; 0xffffffc4
   18b10:	b	19144 <__assert_fail@plt+0x7a10>
   18b14:	movw	r0, #1
   18b18:	strb	r0, [fp, #-67]	; 0xffffffbd
   18b1c:	b	19144 <__assert_fail@plt+0x7a10>
   18b20:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   18b24:	tst	r0, #1
   18b28:	beq	18b6c <__assert_fail@plt+0x7438>
   18b2c:	mov	r0, #1
   18b30:	str	r0, [fp, #-72]	; 0xffffffb8
   18b34:	bl	11578 <__ctype_b_loc@plt>
   18b38:	ldr	r0, [r0]
   18b3c:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   18b40:	mov	r1, lr
   18b44:	add	r0, r0, lr, lsl #1
   18b48:	ldrh	r0, [r0]
   18b4c:	and	r0, r0, #16384	; 0x4000
   18b50:	cmp	r0, #0
   18b54:	movw	r0, #0
   18b58:	movne	r0, #1
   18b5c:	and	r0, r0, #1
   18b60:	strb	r0, [fp, #-73]	; 0xffffffb7
   18b64:	str	r1, [sp, #32]
   18b68:	b	18df8 <__assert_fail@plt+0x76c4>
   18b6c:	sub	r0, fp, #84	; 0x54
   18b70:	movw	r1, #0
   18b74:	and	r1, r1, #255	; 0xff
   18b78:	movw	r2, #8
   18b7c:	bl	11608 <memset@plt>
   18b80:	movw	r0, #0
   18b84:	str	r0, [fp, #-72]	; 0xffffffb8
   18b88:	movw	r0, #1
   18b8c:	strb	r0, [fp, #-73]	; 0xffffffb7
   18b90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18b94:	cmn	r0, #1
   18b98:	bne	18ba8 <__assert_fail@plt+0x7474>
   18b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ba0:	bl	1159c <strlen@plt>
   18ba4:	str	r0, [fp, #-36]	; 0xffffffdc
   18ba8:	b	18bac <__assert_fail@plt+0x7478>
   18bac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18bb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18bb4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18bb8:	add	r1, r1, r2
   18bbc:	add	r1, r0, r1
   18bc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18bc4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18bc8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18bcc:	add	r2, r2, r3
   18bd0:	sub	r2, r0, r2
   18bd4:	sub	r0, fp, #88	; 0x58
   18bd8:	sub	r3, fp, #84	; 0x54
   18bdc:	bl	209b8 <__assert_fail@plt+0xf284>
   18be0:	str	r0, [sp, #92]	; 0x5c
   18be4:	ldr	r0, [sp, #92]	; 0x5c
   18be8:	cmp	r0, #0
   18bec:	bne	18bf4 <__assert_fail@plt+0x74c0>
   18bf0:	b	18df4 <__assert_fail@plt+0x76c0>
   18bf4:	ldr	r0, [sp, #92]	; 0x5c
   18bf8:	cmn	r0, #1
   18bfc:	bne	18c0c <__assert_fail@plt+0x74d8>
   18c00:	movw	r0, #0
   18c04:	strb	r0, [fp, #-73]	; 0xffffffb7
   18c08:	b	18df4 <__assert_fail@plt+0x76c0>
   18c0c:	ldr	r0, [sp, #92]	; 0x5c
   18c10:	cmn	r0, #2
   18c14:	bne	18c88 <__assert_fail@plt+0x7554>
   18c18:	movw	r0, #0
   18c1c:	strb	r0, [fp, #-73]	; 0xffffffb7
   18c20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c24:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18c28:	add	r0, r0, r1
   18c2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18c30:	cmp	r0, r1
   18c34:	movw	r0, #0
   18c38:	str	r0, [sp, #28]
   18c3c:	bcs	18c68 <__assert_fail@plt+0x7534>
   18c40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18c48:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18c4c:	add	r1, r1, r2
   18c50:	add	r0, r0, r1
   18c54:	ldrb	r0, [r0]
   18c58:	cmp	r0, #0
   18c5c:	movw	r0, #0
   18c60:	movne	r0, #1
   18c64:	str	r0, [sp, #28]
   18c68:	ldr	r0, [sp, #28]
   18c6c:	tst	r0, #1
   18c70:	beq	18c84 <__assert_fail@plt+0x7550>
   18c74:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18c78:	add	r0, r0, #1
   18c7c:	str	r0, [fp, #-72]	; 0xffffffb8
   18c80:	b	18c20 <__assert_fail@plt+0x74ec>
   18c84:	b	18df4 <__assert_fail@plt+0x76c0>
   18c88:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18c8c:	tst	r0, #1
   18c90:	beq	18d9c <__assert_fail@plt+0x7668>
   18c94:	ldr	r0, [fp, #8]
   18c98:	cmp	r0, #2
   18c9c:	bne	18d9c <__assert_fail@plt+0x7668>
   18ca0:	movw	r0, #1
   18ca4:	str	r0, [sp, #88]	; 0x58
   18ca8:	ldr	r0, [sp, #88]	; 0x58
   18cac:	ldr	r1, [sp, #92]	; 0x5c
   18cb0:	cmp	r0, r1
   18cb4:	bcs	18d98 <__assert_fail@plt+0x7664>
   18cb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18cbc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18cc0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18cc4:	add	r1, r1, r2
   18cc8:	ldr	r2, [sp, #88]	; 0x58
   18ccc:	add	r1, r1, r2
   18cd0:	ldrb	r0, [r0, r1]
   18cd4:	sub	r0, r0, #91	; 0x5b
   18cd8:	cmp	r0, #33	; 0x21
   18cdc:	str	r0, [sp, #24]
   18ce0:	bhi	18d80 <__assert_fail@plt+0x764c>
   18ce4:	add	r0, pc, #8
   18ce8:	ldr	r1, [sp, #24]
   18cec:	ldr	r0, [r0, r1, lsl #2]
   18cf0:	mov	pc, r0
   18cf4:	andeq	r8, r1, ip, ror sp
   18cf8:	andeq	r8, r1, ip, ror sp
   18cfc:	andeq	r8, r1, r0, lsl #27
   18d00:	andeq	r8, r1, ip, ror sp
   18d04:	andeq	r8, r1, r0, lsl #27
   18d08:	andeq	r8, r1, ip, ror sp
   18d0c:	andeq	r8, r1, r0, lsl #27
   18d10:	andeq	r8, r1, r0, lsl #27
   18d14:	andeq	r8, r1, r0, lsl #27
   18d18:	andeq	r8, r1, r0, lsl #27
   18d1c:	andeq	r8, r1, r0, lsl #27
   18d20:	andeq	r8, r1, r0, lsl #27
   18d24:	andeq	r8, r1, r0, lsl #27
   18d28:	andeq	r8, r1, r0, lsl #27
   18d2c:	andeq	r8, r1, r0, lsl #27
   18d30:	andeq	r8, r1, r0, lsl #27
   18d34:	andeq	r8, r1, r0, lsl #27
   18d38:	andeq	r8, r1, r0, lsl #27
   18d3c:	andeq	r8, r1, r0, lsl #27
   18d40:	andeq	r8, r1, r0, lsl #27
   18d44:	andeq	r8, r1, r0, lsl #27
   18d48:	andeq	r8, r1, r0, lsl #27
   18d4c:	andeq	r8, r1, r0, lsl #27
   18d50:	andeq	r8, r1, r0, lsl #27
   18d54:	andeq	r8, r1, r0, lsl #27
   18d58:	andeq	r8, r1, r0, lsl #27
   18d5c:	andeq	r8, r1, r0, lsl #27
   18d60:	andeq	r8, r1, r0, lsl #27
   18d64:	andeq	r8, r1, r0, lsl #27
   18d68:	andeq	r8, r1, r0, lsl #27
   18d6c:	andeq	r8, r1, r0, lsl #27
   18d70:	andeq	r8, r1, r0, lsl #27
   18d74:	andeq	r8, r1, r0, lsl #27
   18d78:	andeq	r8, r1, ip, ror sp
   18d7c:	b	19538 <__assert_fail@plt+0x7e04>
   18d80:	b	18d84 <__assert_fail@plt+0x7650>
   18d84:	b	18d88 <__assert_fail@plt+0x7654>
   18d88:	ldr	r0, [sp, #88]	; 0x58
   18d8c:	add	r0, r0, #1
   18d90:	str	r0, [sp, #88]	; 0x58
   18d94:	b	18ca8 <__assert_fail@plt+0x7574>
   18d98:	b	18d9c <__assert_fail@plt+0x7668>
   18d9c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   18da0:	bl	11494 <iswprint@plt>
   18da4:	cmp	r0, #0
   18da8:	bne	18db4 <__assert_fail@plt+0x7680>
   18dac:	movw	r0, #0
   18db0:	strb	r0, [fp, #-73]	; 0xffffffb7
   18db4:	ldr	r0, [sp, #92]	; 0x5c
   18db8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18dbc:	add	r0, r1, r0
   18dc0:	str	r0, [fp, #-72]	; 0xffffffb8
   18dc4:	b	18dc8 <__assert_fail@plt+0x7694>
   18dc8:	b	18dcc <__assert_fail@plt+0x7698>
   18dcc:	b	18dd0 <__assert_fail@plt+0x769c>
   18dd0:	sub	r0, fp, #84	; 0x54
   18dd4:	bl	11434 <mbsinit@plt>
   18dd8:	cmp	r0, #0
   18ddc:	movw	r0, #0
   18de0:	movne	r0, #1
   18de4:	mvn	lr, #0
   18de8:	eor	r0, r0, lr
   18dec:	tst	r0, #1
   18df0:	bne	18bac <__assert_fail@plt+0x7478>
   18df4:	b	18df8 <__assert_fail@plt+0x76c4>
   18df8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   18dfc:	and	r0, r0, #1
   18e00:	strb	r0, [fp, #-67]	; 0xffffffbd
   18e04:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18e08:	movw	r1, #1
   18e0c:	cmp	r1, r0
   18e10:	bcc	18e2c <__assert_fail@plt+0x76f8>
   18e14:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   18e18:	tst	r0, #1
   18e1c:	beq	19140 <__assert_fail@plt+0x7a0c>
   18e20:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   18e24:	tst	r0, #1
   18e28:	bne	19140 <__assert_fail@plt+0x7a0c>
   18e2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e30:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18e34:	add	r0, r0, r1
   18e38:	str	r0, [sp, #84]	; 0x54
   18e3c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   18e40:	tst	r0, #1
   18e44:	beq	18ff4 <__assert_fail@plt+0x78c0>
   18e48:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   18e4c:	tst	r0, #1
   18e50:	bne	18ff4 <__assert_fail@plt+0x78c0>
   18e54:	b	18e58 <__assert_fail@plt+0x7724>
   18e58:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18e5c:	tst	r0, #1
   18e60:	beq	18e68 <__assert_fail@plt+0x7734>
   18e64:	b	19538 <__assert_fail@plt+0x7e04>
   18e68:	movw	r0, #1
   18e6c:	strb	r0, [fp, #-66]	; 0xffffffbe
   18e70:	ldr	r0, [fp, #8]
   18e74:	cmp	r0, #2
   18e78:	bne	18f2c <__assert_fail@plt+0x77f8>
   18e7c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   18e80:	tst	r0, #1
   18e84:	bne	18f2c <__assert_fail@plt+0x77f8>
   18e88:	b	18e8c <__assert_fail@plt+0x7758>
   18e8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e94:	cmp	r0, r1
   18e98:	bcs	18eb0 <__assert_fail@plt+0x777c>
   18e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ea0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18ea4:	add	r0, r0, r1
   18ea8:	movw	r1, #39	; 0x27
   18eac:	strb	r1, [r0]
   18eb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18eb4:	add	r0, r0, #1
   18eb8:	str	r0, [fp, #-44]	; 0xffffffd4
   18ebc:	b	18ec0 <__assert_fail@plt+0x778c>
   18ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ec4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ec8:	cmp	r0, r1
   18ecc:	bcs	18ee4 <__assert_fail@plt+0x77b0>
   18ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ed4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18ed8:	add	r0, r0, r1
   18edc:	movw	r1, #36	; 0x24
   18ee0:	strb	r1, [r0]
   18ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ee8:	add	r0, r0, #1
   18eec:	str	r0, [fp, #-44]	; 0xffffffd4
   18ef0:	b	18ef4 <__assert_fail@plt+0x77c0>
   18ef4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ef8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18efc:	cmp	r0, r1
   18f00:	bcs	18f18 <__assert_fail@plt+0x77e4>
   18f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18f0c:	add	r0, r0, r1
   18f10:	movw	r1, #39	; 0x27
   18f14:	strb	r1, [r0]
   18f18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18f1c:	add	r0, r0, #1
   18f20:	str	r0, [fp, #-44]	; 0xffffffd4
   18f24:	movw	r0, #1
   18f28:	strb	r0, [fp, #-60]	; 0xffffffc4
   18f2c:	b	18f30 <__assert_fail@plt+0x77fc>
   18f30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18f34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18f38:	cmp	r0, r1
   18f3c:	bcs	18f54 <__assert_fail@plt+0x7820>
   18f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18f48:	add	r0, r0, r1
   18f4c:	movw	r1, #92	; 0x5c
   18f50:	strb	r1, [r0]
   18f54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18f58:	add	r0, r0, #1
   18f5c:	str	r0, [fp, #-44]	; 0xffffffd4
   18f60:	b	18f64 <__assert_fail@plt+0x7830>
   18f64:	b	18f68 <__assert_fail@plt+0x7834>
   18f68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18f6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18f70:	cmp	r0, r1
   18f74:	bcs	18f94 <__assert_fail@plt+0x7860>
   18f78:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   18f7c:	asr	r0, r0, #6
   18f80:	add	r0, r0, #48	; 0x30
   18f84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f88:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18f8c:	add	r1, r1, r2
   18f90:	strb	r0, [r1]
   18f94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18f98:	add	r0, r0, #1
   18f9c:	str	r0, [fp, #-44]	; 0xffffffd4
   18fa0:	b	18fa4 <__assert_fail@plt+0x7870>
   18fa4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18fa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18fac:	cmp	r0, r1
   18fb0:	bcs	18fd4 <__assert_fail@plt+0x78a0>
   18fb4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   18fb8:	asr	r0, r0, #3
   18fbc:	and	r0, r0, #7
   18fc0:	add	r0, r0, #48	; 0x30
   18fc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fc8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18fcc:	add	r1, r1, r2
   18fd0:	strb	r0, [r1]
   18fd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18fd8:	add	r0, r0, #1
   18fdc:	str	r0, [fp, #-44]	; 0xffffffd4
   18fe0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   18fe4:	and	r0, r0, #7
   18fe8:	add	r0, r0, #48	; 0x30
   18fec:	strb	r0, [fp, #-63]	; 0xffffffc1
   18ff0:	b	19040 <__assert_fail@plt+0x790c>
   18ff4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   18ff8:	tst	r0, #1
   18ffc:	beq	1903c <__assert_fail@plt+0x7908>
   19000:	b	19004 <__assert_fail@plt+0x78d0>
   19004:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19008:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1900c:	cmp	r0, r1
   19010:	bcs	19028 <__assert_fail@plt+0x78f4>
   19014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19018:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1901c:	add	r0, r0, r1
   19020:	movw	r1, #92	; 0x5c
   19024:	strb	r1, [r0]
   19028:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1902c:	add	r0, r0, #1
   19030:	str	r0, [fp, #-44]	; 0xffffffd4
   19034:	movw	r0, #0
   19038:	strb	r0, [fp, #-65]	; 0xffffffbf
   1903c:	b	19040 <__assert_fail@plt+0x790c>
   19040:	ldr	r0, [sp, #84]	; 0x54
   19044:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19048:	add	r1, r1, #1
   1904c:	cmp	r0, r1
   19050:	bhi	19058 <__assert_fail@plt+0x7924>
   19054:	b	1913c <__assert_fail@plt+0x7a08>
   19058:	b	1905c <__assert_fail@plt+0x7928>
   1905c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   19060:	tst	r0, #1
   19064:	beq	190e4 <__assert_fail@plt+0x79b0>
   19068:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1906c:	tst	r0, #1
   19070:	bne	190e4 <__assert_fail@plt+0x79b0>
   19074:	b	19078 <__assert_fail@plt+0x7944>
   19078:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1907c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19080:	cmp	r0, r1
   19084:	bcs	1909c <__assert_fail@plt+0x7968>
   19088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1908c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19090:	add	r0, r0, r1
   19094:	movw	r1, #39	; 0x27
   19098:	strb	r1, [r0]
   1909c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190a0:	add	r0, r0, #1
   190a4:	str	r0, [fp, #-44]	; 0xffffffd4
   190a8:	b	190ac <__assert_fail@plt+0x7978>
   190ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   190b4:	cmp	r0, r1
   190b8:	bcs	190d0 <__assert_fail@plt+0x799c>
   190bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   190c4:	add	r0, r0, r1
   190c8:	movw	r1, #39	; 0x27
   190cc:	strb	r1, [r0]
   190d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190d4:	add	r0, r0, #1
   190d8:	str	r0, [fp, #-44]	; 0xffffffd4
   190dc:	movw	r0, #0
   190e0:	strb	r0, [fp, #-60]	; 0xffffffc4
   190e4:	b	190e8 <__assert_fail@plt+0x79b4>
   190e8:	b	190ec <__assert_fail@plt+0x79b8>
   190ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   190f4:	cmp	r0, r1
   190f8:	bcs	19110 <__assert_fail@plt+0x79dc>
   190fc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19100:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19104:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19108:	add	r1, r1, r2
   1910c:	strb	r0, [r1]
   19110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19114:	add	r0, r0, #1
   19118:	str	r0, [fp, #-44]	; 0xffffffd4
   1911c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19120:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19124:	add	r1, r1, #1
   19128:	str	r1, [fp, #-40]	; 0xffffffd8
   1912c:	add	r0, r0, r1
   19130:	ldrb	r0, [r0]
   19134:	strb	r0, [fp, #-63]	; 0xffffffc1
   19138:	b	18e3c <__assert_fail@plt+0x7708>
   1913c:	b	192cc <__assert_fail@plt+0x7b98>
   19140:	b	19144 <__assert_fail@plt+0x7a10>
   19144:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19148:	tst	r0, #1
   1914c:	beq	1915c <__assert_fail@plt+0x7a28>
   19150:	ldr	r0, [fp, #8]
   19154:	cmp	r0, #2
   19158:	bne	19168 <__assert_fail@plt+0x7a34>
   1915c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19160:	tst	r0, #1
   19164:	beq	191a4 <__assert_fail@plt+0x7a70>
   19168:	ldr	r0, [fp, #16]
   1916c:	movw	r1, #0
   19170:	cmp	r0, r1
   19174:	beq	191a4 <__assert_fail@plt+0x7a70>
   19178:	ldr	r0, [fp, #16]
   1917c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   19180:	lsr	r1, r1, #5
   19184:	add	r0, r0, r1, lsl #2
   19188:	ldr	r0, [r0]
   1918c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   19190:	and	r1, r1, #31
   19194:	lsr	r0, r0, r1
   19198:	and	r0, r0, #1
   1919c:	cmp	r0, #0
   191a0:	bne	191b4 <__assert_fail@plt+0x7a80>
   191a4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   191a8:	tst	r0, #1
   191ac:	bne	191b4 <__assert_fail@plt+0x7a80>
   191b0:	b	192cc <__assert_fail@plt+0x7b98>
   191b4:	b	191b8 <__assert_fail@plt+0x7a84>
   191b8:	b	191bc <__assert_fail@plt+0x7a88>
   191bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   191c0:	tst	r0, #1
   191c4:	beq	191cc <__assert_fail@plt+0x7a98>
   191c8:	b	19538 <__assert_fail@plt+0x7e04>
   191cc:	movw	r0, #1
   191d0:	strb	r0, [fp, #-66]	; 0xffffffbe
   191d4:	ldr	r0, [fp, #8]
   191d8:	cmp	r0, #2
   191dc:	bne	19290 <__assert_fail@plt+0x7b5c>
   191e0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   191e4:	tst	r0, #1
   191e8:	bne	19290 <__assert_fail@plt+0x7b5c>
   191ec:	b	191f0 <__assert_fail@plt+0x7abc>
   191f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   191f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   191f8:	cmp	r0, r1
   191fc:	bcs	19214 <__assert_fail@plt+0x7ae0>
   19200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19204:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19208:	add	r0, r0, r1
   1920c:	movw	r1, #39	; 0x27
   19210:	strb	r1, [r0]
   19214:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19218:	add	r0, r0, #1
   1921c:	str	r0, [fp, #-44]	; 0xffffffd4
   19220:	b	19224 <__assert_fail@plt+0x7af0>
   19224:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19228:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1922c:	cmp	r0, r1
   19230:	bcs	19248 <__assert_fail@plt+0x7b14>
   19234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19238:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1923c:	add	r0, r0, r1
   19240:	movw	r1, #36	; 0x24
   19244:	strb	r1, [r0]
   19248:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1924c:	add	r0, r0, #1
   19250:	str	r0, [fp, #-44]	; 0xffffffd4
   19254:	b	19258 <__assert_fail@plt+0x7b24>
   19258:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1925c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19260:	cmp	r0, r1
   19264:	bcs	1927c <__assert_fail@plt+0x7b48>
   19268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1926c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19270:	add	r0, r0, r1
   19274:	movw	r1, #39	; 0x27
   19278:	strb	r1, [r0]
   1927c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19280:	add	r0, r0, #1
   19284:	str	r0, [fp, #-44]	; 0xffffffd4
   19288:	movw	r0, #1
   1928c:	strb	r0, [fp, #-60]	; 0xffffffc4
   19290:	b	19294 <__assert_fail@plt+0x7b60>
   19294:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19298:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1929c:	cmp	r0, r1
   192a0:	bcs	192b8 <__assert_fail@plt+0x7b84>
   192a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   192ac:	add	r0, r0, r1
   192b0:	movw	r1, #92	; 0x5c
   192b4:	strb	r1, [r0]
   192b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   192bc:	add	r0, r0, #1
   192c0:	str	r0, [fp, #-44]	; 0xffffffd4
   192c4:	b	192c8 <__assert_fail@plt+0x7b94>
   192c8:	b	192cc <__assert_fail@plt+0x7b98>
   192cc:	b	192d0 <__assert_fail@plt+0x7b9c>
   192d0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   192d4:	tst	r0, #1
   192d8:	beq	19358 <__assert_fail@plt+0x7c24>
   192dc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   192e0:	tst	r0, #1
   192e4:	bne	19358 <__assert_fail@plt+0x7c24>
   192e8:	b	192ec <__assert_fail@plt+0x7bb8>
   192ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   192f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   192f4:	cmp	r0, r1
   192f8:	bcs	19310 <__assert_fail@plt+0x7bdc>
   192fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19300:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19304:	add	r0, r0, r1
   19308:	movw	r1, #39	; 0x27
   1930c:	strb	r1, [r0]
   19310:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19314:	add	r0, r0, #1
   19318:	str	r0, [fp, #-44]	; 0xffffffd4
   1931c:	b	19320 <__assert_fail@plt+0x7bec>
   19320:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19324:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19328:	cmp	r0, r1
   1932c:	bcs	19344 <__assert_fail@plt+0x7c10>
   19330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19334:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19338:	add	r0, r0, r1
   1933c:	movw	r1, #39	; 0x27
   19340:	strb	r1, [r0]
   19344:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19348:	add	r0, r0, #1
   1934c:	str	r0, [fp, #-44]	; 0xffffffd4
   19350:	movw	r0, #0
   19354:	strb	r0, [fp, #-60]	; 0xffffffc4
   19358:	b	1935c <__assert_fail@plt+0x7c28>
   1935c:	b	19360 <__assert_fail@plt+0x7c2c>
   19360:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19364:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19368:	cmp	r0, r1
   1936c:	bcs	19384 <__assert_fail@plt+0x7c50>
   19370:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19374:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19378:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1937c:	add	r1, r1, r2
   19380:	strb	r0, [r1]
   19384:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19388:	add	r0, r0, #1
   1938c:	str	r0, [fp, #-44]	; 0xffffffd4
   19390:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   19394:	tst	r0, #1
   19398:	bne	193a4 <__assert_fail@plt+0x7c70>
   1939c:	movw	r0, #0
   193a0:	strb	r0, [fp, #-62]	; 0xffffffc2
   193a4:	b	193a8 <__assert_fail@plt+0x7c74>
   193a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   193ac:	add	r0, r0, #1
   193b0:	str	r0, [fp, #-40]	; 0xffffffd8
   193b4:	b	1815c <__assert_fail@plt+0x6a28>
   193b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   193bc:	cmp	r0, #0
   193c0:	bne	193e0 <__assert_fail@plt+0x7cac>
   193c4:	ldr	r0, [fp, #8]
   193c8:	cmp	r0, #2
   193cc:	bne	193e0 <__assert_fail@plt+0x7cac>
   193d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   193d4:	tst	r0, #1
   193d8:	beq	193e0 <__assert_fail@plt+0x7cac>
   193dc:	b	19538 <__assert_fail@plt+0x7e04>
   193e0:	ldr	r0, [fp, #8]
   193e4:	cmp	r0, #2
   193e8:	bne	19488 <__assert_fail@plt+0x7d54>
   193ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   193f0:	tst	r0, #1
   193f4:	bne	19488 <__assert_fail@plt+0x7d54>
   193f8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   193fc:	tst	r0, #1
   19400:	beq	19488 <__assert_fail@plt+0x7d54>
   19404:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   19408:	tst	r0, #1
   1940c:	beq	19454 <__assert_fail@plt+0x7d20>
   19410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19414:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19418:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1941c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19420:	ldr	ip, [fp, #12]
   19424:	ldr	lr, [fp, #16]
   19428:	ldr	r4, [fp, #20]
   1942c:	ldr	r5, [fp, #24]
   19430:	movw	r6, #5
   19434:	str	r6, [sp]
   19438:	str	ip, [sp, #4]
   1943c:	str	lr, [sp, #8]
   19440:	str	r4, [sp, #12]
   19444:	str	r5, [sp, #16]
   19448:	bl	17e74 <__assert_fail@plt+0x6740>
   1944c:	str	r0, [fp, #-20]	; 0xffffffec
   19450:	b	195a0 <__assert_fail@plt+0x7e6c>
   19454:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19458:	cmp	r0, #0
   1945c:	bne	19480 <__assert_fail@plt+0x7d4c>
   19460:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19464:	cmp	r0, #0
   19468:	beq	19480 <__assert_fail@plt+0x7d4c>
   1946c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19470:	str	r0, [fp, #-28]	; 0xffffffe4
   19474:	movw	r0, #0
   19478:	str	r0, [fp, #-44]	; 0xffffffd4
   1947c:	b	17f1c <__assert_fail@plt+0x67e8>
   19480:	b	19484 <__assert_fail@plt+0x7d50>
   19484:	b	19488 <__assert_fail@plt+0x7d54>
   19488:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1948c:	movw	r1, #0
   19490:	cmp	r0, r1
   19494:	beq	19508 <__assert_fail@plt+0x7dd4>
   19498:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1949c:	tst	r0, #1
   194a0:	bne	19508 <__assert_fail@plt+0x7dd4>
   194a4:	b	194a8 <__assert_fail@plt+0x7d74>
   194a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   194ac:	ldrsb	r0, [r0]
   194b0:	cmp	r0, #0
   194b4:	beq	19504 <__assert_fail@plt+0x7dd0>
   194b8:	b	194bc <__assert_fail@plt+0x7d88>
   194bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   194c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   194c4:	cmp	r0, r1
   194c8:	bcs	194e4 <__assert_fail@plt+0x7db0>
   194cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   194d0:	ldrb	r0, [r0]
   194d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   194dc:	add	r1, r1, r2
   194e0:	strb	r0, [r1]
   194e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   194e8:	add	r0, r0, #1
   194ec:	str	r0, [fp, #-44]	; 0xffffffd4
   194f0:	b	194f4 <__assert_fail@plt+0x7dc0>
   194f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   194f8:	add	r0, r0, #1
   194fc:	str	r0, [fp, #-52]	; 0xffffffcc
   19500:	b	194a8 <__assert_fail@plt+0x7d74>
   19504:	b	19508 <__assert_fail@plt+0x7dd4>
   19508:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1950c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19510:	cmp	r0, r1
   19514:	bcs	1952c <__assert_fail@plt+0x7df8>
   19518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1951c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19520:	add	r0, r0, r1
   19524:	movw	r1, #0
   19528:	strb	r1, [r0]
   1952c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19530:	str	r0, [fp, #-20]	; 0xffffffec
   19534:	b	195a0 <__assert_fail@plt+0x7e6c>
   19538:	ldr	r0, [fp, #8]
   1953c:	cmp	r0, #2
   19540:	bne	19558 <__assert_fail@plt+0x7e24>
   19544:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19548:	tst	r0, #1
   1954c:	beq	19558 <__assert_fail@plt+0x7e24>
   19550:	movw	r0, #4
   19554:	str	r0, [fp, #8]
   19558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1955c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19560:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19564:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19568:	ldr	ip, [fp, #8]
   1956c:	ldr	lr, [fp, #12]
   19570:	mvn	r4, #2
   19574:	and	lr, lr, r4
   19578:	ldr	r4, [fp, #20]
   1957c:	ldr	r5, [fp, #24]
   19580:	str	ip, [sp]
   19584:	str	lr, [sp, #4]
   19588:	movw	ip, #0
   1958c:	str	ip, [sp, #8]
   19590:	str	r4, [sp, #12]
   19594:	str	r5, [sp, #16]
   19598:	bl	17e74 <__assert_fail@plt+0x6740>
   1959c:	str	r0, [fp, #-20]	; 0xffffffec
   195a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   195a4:	sub	sp, fp, #16
   195a8:	pop	{r4, r5, r6, sl, fp, pc}
   195ac:	push	{fp, lr}
   195b0:	mov	fp, sp
   195b4:	sub	sp, sp, #16
   195b8:	str	r0, [fp, #-4]
   195bc:	str	r1, [sp, #8]
   195c0:	str	r2, [sp, #4]
   195c4:	ldr	r0, [fp, #-4]
   195c8:	ldr	r1, [sp, #8]
   195cc:	ldr	r3, [sp, #4]
   195d0:	movw	r2, #0
   195d4:	bl	195e0 <__assert_fail@plt+0x7eac>
   195d8:	mov	sp, fp
   195dc:	pop	{fp, pc}
   195e0:	push	{r4, r5, r6, sl, fp, lr}
   195e4:	add	fp, sp, #16
   195e8:	sub	sp, sp, #72	; 0x48
   195ec:	str	r0, [fp, #-20]	; 0xffffffec
   195f0:	str	r1, [fp, #-24]	; 0xffffffe8
   195f4:	str	r2, [fp, #-28]	; 0xffffffe4
   195f8:	str	r3, [fp, #-32]	; 0xffffffe0
   195fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19600:	movw	r1, #0
   19604:	cmp	r0, r1
   19608:	beq	19618 <__assert_fail@plt+0x7ee4>
   1960c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19610:	str	r0, [sp, #32]
   19614:	b	19628 <__assert_fail@plt+0x7ef4>
   19618:	movw	r0, #21812	; 0x5534
   1961c:	movt	r0, #3
   19620:	str	r0, [sp, #32]
   19624:	b	19628 <__assert_fail@plt+0x7ef4>
   19628:	ldr	r0, [sp, #32]
   1962c:	str	r0, [fp, #-36]	; 0xffffffdc
   19630:	bl	115f0 <__errno_location@plt>
   19634:	ldr	r0, [r0]
   19638:	str	r0, [fp, #-40]	; 0xffffffd8
   1963c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19640:	ldr	r0, [r0, #4]
   19644:	ldr	lr, [fp, #-28]	; 0xffffffe4
   19648:	movw	r1, #0
   1964c:	cmp	lr, r1
   19650:	movw	lr, #0
   19654:	movne	lr, #1
   19658:	tst	lr, #1
   1965c:	mov	lr, r1
   19660:	moveq	lr, #1
   19664:	orr	r0, r0, lr
   19668:	str	r0, [sp, #44]	; 0x2c
   1966c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19674:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19678:	ldr	r0, [r0]
   1967c:	ldr	lr, [sp, #44]	; 0x2c
   19680:	ldr	ip, [fp, #-36]	; 0xffffffdc
   19684:	add	ip, ip, #8
   19688:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1968c:	ldr	r4, [r4, #40]	; 0x28
   19690:	ldr	r5, [fp, #-36]	; 0xffffffdc
   19694:	ldr	r5, [r5, #44]	; 0x2c
   19698:	str	r0, [sp, #28]
   1969c:	mov	r0, r1
   196a0:	ldr	r6, [sp, #28]
   196a4:	str	r6, [sp]
   196a8:	str	lr, [sp, #4]
   196ac:	str	ip, [sp, #8]
   196b0:	str	r4, [sp, #12]
   196b4:	str	r5, [sp, #16]
   196b8:	bl	17e74 <__assert_fail@plt+0x6740>
   196bc:	add	r0, r0, #1
   196c0:	str	r0, [sp, #40]	; 0x28
   196c4:	ldr	r0, [sp, #40]	; 0x28
   196c8:	bl	1b11c <__assert_fail@plt+0x99e8>
   196cc:	str	r0, [sp, #36]	; 0x24
   196d0:	ldr	r0, [sp, #36]	; 0x24
   196d4:	ldr	r1, [sp, #40]	; 0x28
   196d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   196dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   196e0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   196e4:	ldr	ip, [ip]
   196e8:	ldr	lr, [sp, #44]	; 0x2c
   196ec:	ldr	r4, [fp, #-36]	; 0xffffffdc
   196f0:	add	r4, r4, #8
   196f4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   196f8:	ldr	r5, [r5, #40]	; 0x28
   196fc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   19700:	ldr	r6, [r6, #44]	; 0x2c
   19704:	str	ip, [sp]
   19708:	str	lr, [sp, #4]
   1970c:	str	r4, [sp, #8]
   19710:	str	r5, [sp, #12]
   19714:	str	r6, [sp, #16]
   19718:	bl	17e74 <__assert_fail@plt+0x6740>
   1971c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19720:	str	r0, [sp, #24]
   19724:	str	r1, [sp, #20]
   19728:	bl	115f0 <__errno_location@plt>
   1972c:	ldr	r1, [sp, #20]
   19730:	str	r1, [r0]
   19734:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19738:	movw	r2, #0
   1973c:	cmp	r0, r2
   19740:	beq	19754 <__assert_fail@plt+0x8020>
   19744:	ldr	r0, [sp, #40]	; 0x28
   19748:	sub	r0, r0, #1
   1974c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19750:	str	r0, [r1]
   19754:	ldr	r0, [sp, #36]	; 0x24
   19758:	sub	sp, fp, #16
   1975c:	pop	{r4, r5, r6, sl, fp, pc}
   19760:	push	{fp, lr}
   19764:	mov	fp, sp
   19768:	sub	sp, sp, #8
   1976c:	movw	r0, #20844	; 0x516c
   19770:	movt	r0, #3
   19774:	ldr	r0, [r0]
   19778:	str	r0, [sp, #4]
   1977c:	movw	r0, #1
   19780:	str	r0, [sp]
   19784:	ldr	r0, [sp]
   19788:	movw	r1, #20848	; 0x5170
   1978c:	movt	r1, #3
   19790:	ldr	r1, [r1]
   19794:	cmp	r0, r1
   19798:	bge	197c0 <__assert_fail@plt+0x808c>
   1979c:	ldr	r0, [sp, #4]
   197a0:	ldr	r1, [sp]
   197a4:	add	r0, r0, r1, lsl #3
   197a8:	ldr	r0, [r0, #4]
   197ac:	bl	176a4 <__assert_fail@plt+0x5f70>
   197b0:	ldr	r0, [sp]
   197b4:	add	r0, r0, #1
   197b8:	str	r0, [sp]
   197bc:	b	19784 <__assert_fail@plt+0x8050>
   197c0:	ldr	r0, [sp, #4]
   197c4:	ldr	r0, [r0, #4]
   197c8:	movw	r1, #21860	; 0x5564
   197cc:	movt	r1, #3
   197d0:	cmp	r0, r1
   197d4:	beq	19800 <__assert_fail@plt+0x80cc>
   197d8:	ldr	r0, [sp, #4]
   197dc:	ldr	r0, [r0, #4]
   197e0:	bl	176a4 <__assert_fail@plt+0x5f70>
   197e4:	movw	r0, #256	; 0x100
   197e8:	movw	lr, #20852	; 0x5174
   197ec:	movt	lr, #3
   197f0:	str	r0, [lr]
   197f4:	movw	r0, #21860	; 0x5564
   197f8:	movt	r0, #3
   197fc:	str	r0, [lr, #4]
   19800:	ldr	r0, [sp, #4]
   19804:	movw	r1, #20852	; 0x5174
   19808:	movt	r1, #3
   1980c:	cmp	r0, r1
   19810:	beq	19830 <__assert_fail@plt+0x80fc>
   19814:	ldr	r0, [sp, #4]
   19818:	bl	176a4 <__assert_fail@plt+0x5f70>
   1981c:	movw	r0, #20844	; 0x516c
   19820:	movt	r0, #3
   19824:	movw	lr, #20852	; 0x5174
   19828:	movt	lr, #3
   1982c:	str	lr, [r0]
   19830:	movw	r0, #20848	; 0x5170
   19834:	movt	r0, #3
   19838:	movw	r1, #1
   1983c:	str	r1, [r0]
   19840:	mov	sp, fp
   19844:	pop	{fp, pc}
   19848:	push	{fp, lr}
   1984c:	mov	fp, sp
   19850:	sub	sp, sp, #8
   19854:	str	r0, [sp, #4]
   19858:	str	r1, [sp]
   1985c:	ldr	r0, [sp, #4]
   19860:	ldr	r1, [sp]
   19864:	mvn	r2, #0
   19868:	movw	r3, #21812	; 0x5534
   1986c:	movt	r3, #3
   19870:	bl	1987c <__assert_fail@plt+0x8148>
   19874:	mov	sp, fp
   19878:	pop	{fp, pc}
   1987c:	push	{r4, r5, r6, sl, fp, lr}
   19880:	add	fp, sp, #16
   19884:	sub	sp, sp, #88	; 0x58
   19888:	str	r0, [fp, #-20]	; 0xffffffec
   1988c:	str	r1, [fp, #-24]	; 0xffffffe8
   19890:	str	r2, [fp, #-28]	; 0xffffffe4
   19894:	str	r3, [fp, #-32]	; 0xffffffe0
   19898:	bl	115f0 <__errno_location@plt>
   1989c:	ldr	r1, [pc, #676]	; 19b48 <__assert_fail@plt+0x8414>
   198a0:	ldr	r0, [r0]
   198a4:	str	r0, [fp, #-36]	; 0xffffffdc
   198a8:	movw	r0, #20844	; 0x516c
   198ac:	movt	r0, #3
   198b0:	ldr	r0, [r0]
   198b4:	str	r0, [fp, #-40]	; 0xffffffd8
   198b8:	str	r1, [fp, #-44]	; 0xffffffd4
   198bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   198c0:	movw	r1, #0
   198c4:	cmp	r1, r0
   198c8:	bgt	198dc <__assert_fail@plt+0x81a8>
   198cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   198d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   198d4:	cmp	r0, r1
   198d8:	blt	198e0 <__assert_fail@plt+0x81ac>
   198dc:	bl	11710 <abort@plt>
   198e0:	movw	r0, #20848	; 0x5170
   198e4:	movt	r0, #3
   198e8:	ldr	r0, [r0]
   198ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   198f0:	cmp	r0, r1
   198f4:	bgt	199ec <__assert_fail@plt+0x82b8>
   198f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   198fc:	movw	r1, #20852	; 0x5174
   19900:	movt	r1, #3
   19904:	cmp	r0, r1
   19908:	movw	r0, #0
   1990c:	moveq	r0, #1
   19910:	and	r0, r0, #1
   19914:	strb	r0, [fp, #-45]	; 0xffffffd3
   19918:	movw	r0, #20848	; 0x5170
   1991c:	movt	r0, #3
   19920:	ldr	r0, [r0]
   19924:	str	r0, [sp, #52]	; 0x34
   19928:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1992c:	tst	r0, #1
   19930:	beq	19940 <__assert_fail@plt+0x820c>
   19934:	movw	r0, #0
   19938:	str	r0, [sp, #32]
   1993c:	b	19948 <__assert_fail@plt+0x8214>
   19940:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19944:	str	r0, [sp, #32]
   19948:	ldr	r0, [sp, #32]
   1994c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19950:	movw	r2, #20848	; 0x5170
   19954:	movt	r2, #3
   19958:	ldr	r2, [r2]
   1995c:	sub	r1, r1, r2
   19960:	add	r2, r1, #1
   19964:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19968:	add	r1, sp, #52	; 0x34
   1996c:	movw	ip, #8
   19970:	str	ip, [sp]
   19974:	bl	1b358 <__assert_fail@plt+0x9c24>
   19978:	str	r0, [fp, #-40]	; 0xffffffd8
   1997c:	movw	r1, #20844	; 0x516c
   19980:	movt	r1, #3
   19984:	str	r0, [r1]
   19988:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1998c:	tst	r0, #1
   19990:	beq	199b0 <__assert_fail@plt+0x827c>
   19994:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19998:	movw	r1, #20852	; 0x5174
   1999c:	movt	r1, #3
   199a0:	ldr	r2, [r1]
   199a4:	str	r2, [r0]
   199a8:	ldr	r1, [r1, #4]
   199ac:	str	r1, [r0, #4]
   199b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   199b4:	movw	r1, #20848	; 0x5170
   199b8:	movt	r1, #3
   199bc:	ldr	r1, [r1]
   199c0:	add	r0, r0, r1, lsl #3
   199c4:	ldr	r2, [sp, #52]	; 0x34
   199c8:	sub	r1, r2, r1
   199cc:	lsl	r2, r1, #3
   199d0:	movw	r1, #0
   199d4:	and	r1, r1, #255	; 0xff
   199d8:	bl	11608 <memset@plt>
   199dc:	ldr	r0, [sp, #52]	; 0x34
   199e0:	movw	r1, #20848	; 0x5170
   199e4:	movt	r1, #3
   199e8:	str	r0, [r1]
   199ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   199f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   199f4:	ldr	r0, [r0, r1, lsl #3]
   199f8:	str	r0, [sp, #48]	; 0x30
   199fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19a00:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a04:	add	r0, r0, r1, lsl #3
   19a08:	ldr	r0, [r0, #4]
   19a0c:	str	r0, [sp, #44]	; 0x2c
   19a10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a14:	ldr	r0, [r0, #4]
   19a18:	orr	r0, r0, #1
   19a1c:	str	r0, [sp, #40]	; 0x28
   19a20:	ldr	r0, [sp, #44]	; 0x2c
   19a24:	ldr	r1, [sp, #48]	; 0x30
   19a28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19a30:	ldr	ip, [fp, #-32]	; 0xffffffe0
   19a34:	ldr	ip, [ip]
   19a38:	ldr	lr, [sp, #40]	; 0x28
   19a3c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   19a40:	add	r4, r4, #8
   19a44:	ldr	r5, [fp, #-32]	; 0xffffffe0
   19a48:	ldr	r5, [r5, #40]	; 0x28
   19a4c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   19a50:	ldr	r6, [r6, #44]	; 0x2c
   19a54:	str	ip, [sp]
   19a58:	str	lr, [sp, #4]
   19a5c:	str	r4, [sp, #8]
   19a60:	str	r5, [sp, #12]
   19a64:	str	r6, [sp, #16]
   19a68:	bl	17e74 <__assert_fail@plt+0x6740>
   19a6c:	str	r0, [sp, #36]	; 0x24
   19a70:	ldr	r0, [sp, #48]	; 0x30
   19a74:	ldr	r1, [sp, #36]	; 0x24
   19a78:	cmp	r0, r1
   19a7c:	bhi	19b28 <__assert_fail@plt+0x83f4>
   19a80:	ldr	r0, [sp, #36]	; 0x24
   19a84:	add	r0, r0, #1
   19a88:	str	r0, [sp, #48]	; 0x30
   19a8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19a90:	ldr	r2, [fp, #-20]	; 0xffffffec
   19a94:	add	r1, r1, r2, lsl #3
   19a98:	str	r0, [r1]
   19a9c:	ldr	r0, [sp, #44]	; 0x2c
   19aa0:	movw	r1, #21860	; 0x5564
   19aa4:	movt	r1, #3
   19aa8:	cmp	r0, r1
   19aac:	beq	19ab8 <__assert_fail@plt+0x8384>
   19ab0:	ldr	r0, [sp, #44]	; 0x2c
   19ab4:	bl	176a4 <__assert_fail@plt+0x5f70>
   19ab8:	ldr	r0, [sp, #48]	; 0x30
   19abc:	bl	1b11c <__assert_fail@plt+0x99e8>
   19ac0:	mov	lr, r0
   19ac4:	str	r0, [sp, #44]	; 0x2c
   19ac8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19acc:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ad0:	add	r0, r0, r1, lsl #3
   19ad4:	str	lr, [r0, #4]
   19ad8:	ldr	r0, [sp, #44]	; 0x2c
   19adc:	ldr	r1, [sp, #48]	; 0x30
   19ae0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ae4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19ae8:	ldr	lr, [fp, #-32]	; 0xffffffe0
   19aec:	ldr	lr, [lr]
   19af0:	ldr	ip, [sp, #40]	; 0x28
   19af4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   19af8:	add	r4, r4, #8
   19afc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   19b00:	ldr	r5, [r5, #40]	; 0x28
   19b04:	ldr	r6, [fp, #-32]	; 0xffffffe0
   19b08:	ldr	r6, [r6, #44]	; 0x2c
   19b0c:	str	lr, [sp]
   19b10:	str	ip, [sp, #4]
   19b14:	str	r4, [sp, #8]
   19b18:	str	r5, [sp, #12]
   19b1c:	str	r6, [sp, #16]
   19b20:	bl	17e74 <__assert_fail@plt+0x6740>
   19b24:	str	r0, [sp, #28]
   19b28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19b2c:	str	r0, [sp, #24]
   19b30:	bl	115f0 <__errno_location@plt>
   19b34:	ldr	lr, [sp, #24]
   19b38:	str	lr, [r0]
   19b3c:	ldr	r0, [sp, #44]	; 0x2c
   19b40:	sub	sp, fp, #16
   19b44:	pop	{r4, r5, r6, sl, fp, pc}
   19b48:	svcvc	0x00ffffff
   19b4c:	push	{fp, lr}
   19b50:	mov	fp, sp
   19b54:	sub	sp, sp, #16
   19b58:	str	r0, [fp, #-4]
   19b5c:	str	r1, [sp, #8]
   19b60:	str	r2, [sp, #4]
   19b64:	ldr	r0, [fp, #-4]
   19b68:	ldr	r1, [sp, #8]
   19b6c:	ldr	r2, [sp, #4]
   19b70:	movw	r3, #21812	; 0x5534
   19b74:	movt	r3, #3
   19b78:	bl	1987c <__assert_fail@plt+0x8148>
   19b7c:	mov	sp, fp
   19b80:	pop	{fp, pc}
   19b84:	push	{fp, lr}
   19b88:	mov	fp, sp
   19b8c:	sub	sp, sp, #8
   19b90:	str	r0, [sp, #4]
   19b94:	ldr	r1, [sp, #4]
   19b98:	movw	r0, #0
   19b9c:	bl	19848 <__assert_fail@plt+0x8114>
   19ba0:	mov	sp, fp
   19ba4:	pop	{fp, pc}
   19ba8:	push	{fp, lr}
   19bac:	mov	fp, sp
   19bb0:	sub	sp, sp, #8
   19bb4:	str	r0, [sp, #4]
   19bb8:	str	r1, [sp]
   19bbc:	ldr	r1, [sp, #4]
   19bc0:	ldr	r2, [sp]
   19bc4:	movw	r0, #0
   19bc8:	bl	19b4c <__assert_fail@plt+0x8418>
   19bcc:	mov	sp, fp
   19bd0:	pop	{fp, pc}
   19bd4:	push	{fp, lr}
   19bd8:	mov	fp, sp
   19bdc:	sub	sp, sp, #64	; 0x40
   19be0:	str	r0, [fp, #-4]
   19be4:	str	r1, [fp, #-8]
   19be8:	str	r2, [fp, #-12]
   19bec:	ldr	r1, [fp, #-8]
   19bf0:	add	r0, sp, #4
   19bf4:	bl	19c14 <__assert_fail@plt+0x84e0>
   19bf8:	ldr	r0, [fp, #-4]
   19bfc:	ldr	r1, [fp, #-12]
   19c00:	mvn	r2, #0
   19c04:	add	r3, sp, #4
   19c08:	bl	1987c <__assert_fail@plt+0x8148>
   19c0c:	mov	sp, fp
   19c10:	pop	{fp, pc}
   19c14:	push	{fp, lr}
   19c18:	mov	fp, sp
   19c1c:	sub	sp, sp, #8
   19c20:	str	r1, [sp, #4]
   19c24:	mov	r1, r0
   19c28:	str	r0, [sp]
   19c2c:	mov	r0, r1
   19c30:	movw	r1, #0
   19c34:	and	r1, r1, #255	; 0xff
   19c38:	movw	r2, #48	; 0x30
   19c3c:	bl	11608 <memset@plt>
   19c40:	ldr	r0, [sp, #4]
   19c44:	cmp	r0, #10
   19c48:	bne	19c50 <__assert_fail@plt+0x851c>
   19c4c:	bl	11710 <abort@plt>
   19c50:	ldr	r0, [sp, #4]
   19c54:	ldr	r1, [sp]
   19c58:	str	r0, [r1]
   19c5c:	mov	sp, fp
   19c60:	pop	{fp, pc}
   19c64:	push	{fp, lr}
   19c68:	mov	fp, sp
   19c6c:	sub	sp, sp, #64	; 0x40
   19c70:	str	r0, [fp, #-4]
   19c74:	str	r1, [fp, #-8]
   19c78:	str	r2, [fp, #-12]
   19c7c:	str	r3, [fp, #-16]
   19c80:	ldr	r1, [fp, #-8]
   19c84:	mov	r0, sp
   19c88:	bl	19c14 <__assert_fail@plt+0x84e0>
   19c8c:	ldr	r0, [fp, #-4]
   19c90:	ldr	r1, [fp, #-12]
   19c94:	ldr	r2, [fp, #-16]
   19c98:	mov	r3, sp
   19c9c:	bl	1987c <__assert_fail@plt+0x8148>
   19ca0:	mov	sp, fp
   19ca4:	pop	{fp, pc}
   19ca8:	push	{fp, lr}
   19cac:	mov	fp, sp
   19cb0:	sub	sp, sp, #8
   19cb4:	str	r0, [sp, #4]
   19cb8:	str	r1, [sp]
   19cbc:	ldr	r1, [sp, #4]
   19cc0:	ldr	r2, [sp]
   19cc4:	movw	r0, #0
   19cc8:	bl	19bd4 <__assert_fail@plt+0x84a0>
   19ccc:	mov	sp, fp
   19cd0:	pop	{fp, pc}
   19cd4:	push	{fp, lr}
   19cd8:	mov	fp, sp
   19cdc:	sub	sp, sp, #16
   19ce0:	str	r0, [fp, #-4]
   19ce4:	str	r1, [sp, #8]
   19ce8:	str	r2, [sp, #4]
   19cec:	ldr	r1, [fp, #-4]
   19cf0:	ldr	r2, [sp, #8]
   19cf4:	ldr	r3, [sp, #4]
   19cf8:	movw	r0, #0
   19cfc:	bl	19c64 <__assert_fail@plt+0x8530>
   19d00:	mov	sp, fp
   19d04:	pop	{fp, pc}
   19d08:	push	{fp, lr}
   19d0c:	mov	fp, sp
   19d10:	sub	sp, sp, #72	; 0x48
   19d14:	movw	r3, #21812	; 0x5534
   19d18:	movt	r3, #3
   19d1c:	str	r0, [fp, #-4]
   19d20:	str	r1, [fp, #-8]
   19d24:	strb	r2, [fp, #-9]
   19d28:	add	r0, sp, #12
   19d2c:	mov	r1, r0
   19d30:	str	r0, [sp, #8]
   19d34:	mov	r0, r1
   19d38:	mov	r1, r3
   19d3c:	movw	r2, #48	; 0x30
   19d40:	bl	11428 <memcpy@plt>
   19d44:	ldr	r0, [sp, #8]
   19d48:	ldrb	r1, [fp, #-9]
   19d4c:	movw	r2, #1
   19d50:	bl	17c18 <__assert_fail@plt+0x64e4>
   19d54:	ldr	r1, [fp, #-4]
   19d58:	ldr	r2, [fp, #-8]
   19d5c:	movw	r3, #0
   19d60:	str	r0, [sp, #4]
   19d64:	mov	r0, r3
   19d68:	add	r3, sp, #12
   19d6c:	bl	1987c <__assert_fail@plt+0x8148>
   19d70:	mov	sp, fp
   19d74:	pop	{fp, pc}
   19d78:	push	{fp, lr}
   19d7c:	mov	fp, sp
   19d80:	sub	sp, sp, #8
   19d84:	str	r0, [sp, #4]
   19d88:	strb	r1, [sp, #3]
   19d8c:	ldr	r0, [sp, #4]
   19d90:	mvn	r1, #0
   19d94:	ldrb	r2, [sp, #3]
   19d98:	bl	19d08 <__assert_fail@plt+0x85d4>
   19d9c:	mov	sp, fp
   19da0:	pop	{fp, pc}
   19da4:	push	{fp, lr}
   19da8:	mov	fp, sp
   19dac:	sub	sp, sp, #8
   19db0:	str	r0, [sp, #4]
   19db4:	ldr	r0, [sp, #4]
   19db8:	movw	r1, #58	; 0x3a
   19dbc:	and	r1, r1, #255	; 0xff
   19dc0:	bl	19d78 <__assert_fail@plt+0x8644>
   19dc4:	mov	sp, fp
   19dc8:	pop	{fp, pc}
   19dcc:	push	{fp, lr}
   19dd0:	mov	fp, sp
   19dd4:	sub	sp, sp, #8
   19dd8:	str	r0, [sp, #4]
   19ddc:	str	r1, [sp]
   19de0:	ldr	r0, [sp, #4]
   19de4:	ldr	r1, [sp]
   19de8:	movw	r2, #58	; 0x3a
   19dec:	and	r2, r2, #255	; 0xff
   19df0:	bl	19d08 <__assert_fail@plt+0x85d4>
   19df4:	mov	sp, fp
   19df8:	pop	{fp, pc}
   19dfc:	push	{fp, lr}
   19e00:	mov	fp, sp
   19e04:	sub	sp, sp, #120	; 0x78
   19e08:	str	r0, [fp, #-4]
   19e0c:	str	r1, [fp, #-8]
   19e10:	str	r2, [fp, #-12]
   19e14:	ldr	r1, [fp, #-8]
   19e18:	add	r0, sp, #12
   19e1c:	bl	19c14 <__assert_fail@plt+0x84e0>
   19e20:	add	r0, sp, #60	; 0x3c
   19e24:	mov	r1, r0
   19e28:	add	r2, sp, #12
   19e2c:	str	r0, [sp, #8]
   19e30:	mov	r0, r1
   19e34:	mov	r1, r2
   19e38:	movw	r2, #48	; 0x30
   19e3c:	bl	11428 <memcpy@plt>
   19e40:	ldr	r0, [sp, #8]
   19e44:	movw	r1, #58	; 0x3a
   19e48:	and	r1, r1, #255	; 0xff
   19e4c:	movw	r2, #1
   19e50:	bl	17c18 <__assert_fail@plt+0x64e4>
   19e54:	ldr	r1, [fp, #-4]
   19e58:	ldr	r2, [fp, #-12]
   19e5c:	str	r0, [sp, #4]
   19e60:	mov	r0, r1
   19e64:	mov	r1, r2
   19e68:	mvn	r2, #0
   19e6c:	add	r3, sp, #60	; 0x3c
   19e70:	bl	1987c <__assert_fail@plt+0x8148>
   19e74:	mov	sp, fp
   19e78:	pop	{fp, pc}
   19e7c:	push	{fp, lr}
   19e80:	mov	fp, sp
   19e84:	sub	sp, sp, #24
   19e88:	str	r0, [fp, #-4]
   19e8c:	str	r1, [fp, #-8]
   19e90:	str	r2, [sp, #12]
   19e94:	str	r3, [sp, #8]
   19e98:	ldr	r0, [fp, #-4]
   19e9c:	ldr	r1, [fp, #-8]
   19ea0:	ldr	r2, [sp, #12]
   19ea4:	ldr	r3, [sp, #8]
   19ea8:	mvn	ip, #0
   19eac:	str	ip, [sp]
   19eb0:	bl	19ebc <__assert_fail@plt+0x8788>
   19eb4:	mov	sp, fp
   19eb8:	pop	{fp, pc}
   19ebc:	push	{fp, lr}
   19ec0:	mov	fp, sp
   19ec4:	sub	sp, sp, #72	; 0x48
   19ec8:	ldr	ip, [fp, #8]
   19ecc:	movw	lr, #21812	; 0x5534
   19ed0:	movt	lr, #3
   19ed4:	str	r0, [fp, #-4]
   19ed8:	str	r1, [fp, #-8]
   19edc:	str	r2, [fp, #-12]
   19ee0:	str	r3, [fp, #-16]
   19ee4:	add	r0, sp, #8
   19ee8:	mov	r1, r0
   19eec:	str	r0, [sp, #4]
   19ef0:	mov	r0, r1
   19ef4:	mov	r1, lr
   19ef8:	movw	r2, #48	; 0x30
   19efc:	str	ip, [sp]
   19f00:	bl	11428 <memcpy@plt>
   19f04:	ldr	r1, [fp, #-8]
   19f08:	ldr	r2, [fp, #-12]
   19f0c:	ldr	r0, [sp, #4]
   19f10:	bl	17d18 <__assert_fail@plt+0x65e4>
   19f14:	ldr	r0, [fp, #-4]
   19f18:	ldr	r1, [fp, #-16]
   19f1c:	ldr	r2, [fp, #8]
   19f20:	add	r3, sp, #8
   19f24:	bl	1987c <__assert_fail@plt+0x8148>
   19f28:	mov	sp, fp
   19f2c:	pop	{fp, pc}
   19f30:	push	{fp, lr}
   19f34:	mov	fp, sp
   19f38:	sub	sp, sp, #16
   19f3c:	str	r0, [fp, #-4]
   19f40:	str	r1, [sp, #8]
   19f44:	str	r2, [sp, #4]
   19f48:	ldr	r1, [fp, #-4]
   19f4c:	ldr	r2, [sp, #8]
   19f50:	ldr	r3, [sp, #4]
   19f54:	movw	r0, #0
   19f58:	bl	19e7c <__assert_fail@plt+0x8748>
   19f5c:	mov	sp, fp
   19f60:	pop	{fp, pc}
   19f64:	push	{fp, lr}
   19f68:	mov	fp, sp
   19f6c:	sub	sp, sp, #24
   19f70:	str	r0, [fp, #-4]
   19f74:	str	r1, [fp, #-8]
   19f78:	str	r2, [sp, #12]
   19f7c:	str	r3, [sp, #8]
   19f80:	ldr	r1, [fp, #-4]
   19f84:	ldr	r2, [fp, #-8]
   19f88:	ldr	r3, [sp, #12]
   19f8c:	ldr	r0, [sp, #8]
   19f90:	movw	ip, #0
   19f94:	str	r0, [sp, #4]
   19f98:	mov	r0, ip
   19f9c:	ldr	ip, [sp, #4]
   19fa0:	str	ip, [sp]
   19fa4:	bl	19ebc <__assert_fail@plt+0x8788>
   19fa8:	mov	sp, fp
   19fac:	pop	{fp, pc}
   19fb0:	push	{fp, lr}
   19fb4:	mov	fp, sp
   19fb8:	sub	sp, sp, #16
   19fbc:	str	r0, [fp, #-4]
   19fc0:	str	r1, [sp, #8]
   19fc4:	str	r2, [sp, #4]
   19fc8:	ldr	r0, [fp, #-4]
   19fcc:	ldr	r1, [sp, #8]
   19fd0:	ldr	r2, [sp, #4]
   19fd4:	movw	r3, #20860	; 0x517c
   19fd8:	movt	r3, #3
   19fdc:	bl	1987c <__assert_fail@plt+0x8148>
   19fe0:	mov	sp, fp
   19fe4:	pop	{fp, pc}
   19fe8:	push	{fp, lr}
   19fec:	mov	fp, sp
   19ff0:	sub	sp, sp, #8
   19ff4:	str	r0, [sp, #4]
   19ff8:	str	r1, [sp]
   19ffc:	ldr	r1, [sp, #4]
   1a000:	ldr	r2, [sp]
   1a004:	movw	r0, #0
   1a008:	bl	19fb0 <__assert_fail@plt+0x887c>
   1a00c:	mov	sp, fp
   1a010:	pop	{fp, pc}
   1a014:	push	{fp, lr}
   1a018:	mov	fp, sp
   1a01c:	sub	sp, sp, #8
   1a020:	str	r0, [sp, #4]
   1a024:	str	r1, [sp]
   1a028:	ldr	r0, [sp, #4]
   1a02c:	ldr	r1, [sp]
   1a030:	mvn	r2, #0
   1a034:	bl	19fb0 <__assert_fail@plt+0x887c>
   1a038:	mov	sp, fp
   1a03c:	pop	{fp, pc}
   1a040:	push	{fp, lr}
   1a044:	mov	fp, sp
   1a048:	sub	sp, sp, #8
   1a04c:	str	r0, [sp, #4]
   1a050:	ldr	r1, [sp, #4]
   1a054:	movw	r0, #0
   1a058:	bl	1a014 <__assert_fail@plt+0x88e0>
   1a05c:	mov	sp, fp
   1a060:	pop	{fp, pc}
   1a064:	push	{fp, lr}
   1a068:	mov	fp, sp
   1a06c:	sub	sp, sp, #24
   1a070:	str	r0, [fp, #-8]
   1a074:	str	r1, [sp, #12]
   1a078:	ldr	r0, [fp, #-8]
   1a07c:	bl	11590 <gettext@plt>
   1a080:	str	r0, [sp, #8]
   1a084:	ldr	r0, [sp, #8]
   1a088:	ldr	r1, [fp, #-8]
   1a08c:	cmp	r0, r1
   1a090:	beq	1a0a0 <__assert_fail@plt+0x896c>
   1a094:	ldr	r0, [sp, #8]
   1a098:	str	r0, [fp, #-4]
   1a09c:	b	1a16c <__assert_fail@plt+0x8a38>
   1a0a0:	bl	2095c <__assert_fail@plt+0xf228>
   1a0a4:	str	r0, [sp, #4]
   1a0a8:	ldr	r0, [sp, #4]
   1a0ac:	movw	r1, #16319	; 0x3fbf
   1a0b0:	movt	r1, #2
   1a0b4:	bl	20600 <__assert_fail@plt+0xeecc>
   1a0b8:	cmp	r0, #0
   1a0bc:	bne	1a0f4 <__assert_fail@plt+0x89c0>
   1a0c0:	ldr	r0, [fp, #-8]
   1a0c4:	ldrb	r0, [r0]
   1a0c8:	cmp	r0, #96	; 0x60
   1a0cc:	movw	r0, #0
   1a0d0:	moveq	r0, #1
   1a0d4:	tst	r0, #1
   1a0d8:	movw	r0, #16329	; 0x3fc9
   1a0dc:	movt	r0, #2
   1a0e0:	movw	r1, #16325	; 0x3fc5
   1a0e4:	movt	r1, #2
   1a0e8:	movne	r0, r1
   1a0ec:	str	r0, [fp, #-4]
   1a0f0:	b	1a16c <__assert_fail@plt+0x8a38>
   1a0f4:	ldr	r0, [sp, #4]
   1a0f8:	movw	r1, #16333	; 0x3fcd
   1a0fc:	movt	r1, #2
   1a100:	bl	20600 <__assert_fail@plt+0xeecc>
   1a104:	cmp	r0, #0
   1a108:	bne	1a140 <__assert_fail@plt+0x8a0c>
   1a10c:	ldr	r0, [fp, #-8]
   1a110:	ldrb	r0, [r0]
   1a114:	cmp	r0, #96	; 0x60
   1a118:	movw	r0, #0
   1a11c:	moveq	r0, #1
   1a120:	tst	r0, #1
   1a124:	movw	r0, #16345	; 0x3fd9
   1a128:	movt	r0, #2
   1a12c:	movw	r1, #16341	; 0x3fd5
   1a130:	movt	r1, #2
   1a134:	movne	r0, r1
   1a138:	str	r0, [fp, #-4]
   1a13c:	b	1a16c <__assert_fail@plt+0x8a38>
   1a140:	ldr	r0, [sp, #12]
   1a144:	cmp	r0, #9
   1a148:	movw	r0, #0
   1a14c:	moveq	r0, #1
   1a150:	tst	r0, #1
   1a154:	movw	r0, #16317	; 0x3fbd
   1a158:	movt	r0, #2
   1a15c:	movw	r1, #15412	; 0x3c34
   1a160:	movt	r1, #2
   1a164:	movne	r0, r1
   1a168:	str	r0, [fp, #-4]
   1a16c:	ldr	r0, [fp, #-4]
   1a170:	mov	sp, fp
   1a174:	pop	{fp, pc}
   1a178:	push	{fp, lr}
   1a17c:	mov	fp, sp
   1a180:	sub	sp, sp, #24
   1a184:	str	r0, [fp, #-8]
   1a188:	str	r1, [sp, #12]
   1a18c:	str	r2, [sp, #8]
   1a190:	ldr	r0, [fp, #-8]
   1a194:	ldr	r1, [sp, #12]
   1a198:	ldr	r2, [sp, #8]
   1a19c:	bl	113e0 <read@plt>
   1a1a0:	str	r0, [sp, #4]
   1a1a4:	ldr	r0, [sp, #4]
   1a1a8:	movw	r1, #0
   1a1ac:	cmp	r1, r0
   1a1b0:	bgt	1a1c0 <__assert_fail@plt+0x8a8c>
   1a1b4:	ldr	r0, [sp, #4]
   1a1b8:	str	r0, [fp, #-4]
   1a1bc:	b	1a218 <__assert_fail@plt+0x8ae4>
   1a1c0:	bl	115f0 <__errno_location@plt>
   1a1c4:	ldr	r0, [r0]
   1a1c8:	cmp	r0, #4
   1a1cc:	bne	1a1d4 <__assert_fail@plt+0x8aa0>
   1a1d0:	b	1a190 <__assert_fail@plt+0x8a5c>
   1a1d4:	bl	115f0 <__errno_location@plt>
   1a1d8:	ldr	r0, [r0]
   1a1dc:	cmp	r0, #22
   1a1e0:	bne	1a200 <__assert_fail@plt+0x8acc>
   1a1e4:	ldr	r0, [pc, #56]	; 1a224 <__assert_fail@plt+0x8af0>
   1a1e8:	ldr	r1, [sp, #8]
   1a1ec:	cmp	r0, r1
   1a1f0:	bcs	1a200 <__assert_fail@plt+0x8acc>
   1a1f4:	ldr	r0, [pc, #40]	; 1a224 <__assert_fail@plt+0x8af0>
   1a1f8:	str	r0, [sp, #8]
   1a1fc:	b	1a20c <__assert_fail@plt+0x8ad8>
   1a200:	ldr	r0, [sp, #4]
   1a204:	str	r0, [fp, #-4]
   1a208:	b	1a218 <__assert_fail@plt+0x8ae4>
   1a20c:	b	1a210 <__assert_fail@plt+0x8adc>
   1a210:	b	1a214 <__assert_fail@plt+0x8ae0>
   1a214:	b	1a190 <__assert_fail@plt+0x8a5c>
   1a218:	ldr	r0, [fp, #-4]
   1a21c:	mov	sp, fp
   1a220:	pop	{fp, pc}
   1a224:	svcvc	0x00f00000	; IMB
   1a228:	push	{fp, lr}
   1a22c:	mov	fp, sp
   1a230:	sub	sp, sp, #24
   1a234:	str	r0, [fp, #-8]
   1a238:	str	r1, [sp, #12]
   1a23c:	str	r2, [sp, #8]
   1a240:	ldr	r0, [fp, #-8]
   1a244:	ldr	r1, [sp, #12]
   1a248:	ldr	r2, [sp, #8]
   1a24c:	bl	11614 <write@plt>
   1a250:	str	r0, [sp, #4]
   1a254:	ldr	r0, [sp, #4]
   1a258:	movw	r1, #0
   1a25c:	cmp	r1, r0
   1a260:	bgt	1a270 <__assert_fail@plt+0x8b3c>
   1a264:	ldr	r0, [sp, #4]
   1a268:	str	r0, [fp, #-4]
   1a26c:	b	1a2c8 <__assert_fail@plt+0x8b94>
   1a270:	bl	115f0 <__errno_location@plt>
   1a274:	ldr	r0, [r0]
   1a278:	cmp	r0, #4
   1a27c:	bne	1a284 <__assert_fail@plt+0x8b50>
   1a280:	b	1a240 <__assert_fail@plt+0x8b0c>
   1a284:	bl	115f0 <__errno_location@plt>
   1a288:	ldr	r0, [r0]
   1a28c:	cmp	r0, #22
   1a290:	bne	1a2b0 <__assert_fail@plt+0x8b7c>
   1a294:	ldr	r0, [pc, #56]	; 1a2d4 <__assert_fail@plt+0x8ba0>
   1a298:	ldr	r1, [sp, #8]
   1a29c:	cmp	r0, r1
   1a2a0:	bcs	1a2b0 <__assert_fail@plt+0x8b7c>
   1a2a4:	ldr	r0, [pc, #40]	; 1a2d4 <__assert_fail@plt+0x8ba0>
   1a2a8:	str	r0, [sp, #8]
   1a2ac:	b	1a2bc <__assert_fail@plt+0x8b88>
   1a2b0:	ldr	r0, [sp, #4]
   1a2b4:	str	r0, [fp, #-4]
   1a2b8:	b	1a2c8 <__assert_fail@plt+0x8b94>
   1a2bc:	b	1a2c0 <__assert_fail@plt+0x8b8c>
   1a2c0:	b	1a2c4 <__assert_fail@plt+0x8b90>
   1a2c4:	b	1a240 <__assert_fail@plt+0x8b0c>
   1a2c8:	ldr	r0, [fp, #-4]
   1a2cc:	mov	sp, fp
   1a2d0:	pop	{fp, pc}
   1a2d4:	svcvc	0x00f00000	; IMB
   1a2d8:	push	{fp, lr}
   1a2dc:	mov	fp, sp
   1a2e0:	sub	sp, sp, #8
   1a2e4:	str	r0, [sp, #4]
   1a2e8:	str	r1, [sp]
   1a2ec:	ldr	r0, [sp, #4]
   1a2f0:	bl	1a324 <__assert_fail@plt+0x8bf0>
   1a2f4:	ldr	r1, [sp]
   1a2f8:	str	r0, [r1]
   1a2fc:	ldr	r0, [sp]
   1a300:	ldr	r0, [r0]
   1a304:	cmp	r0, #0
   1a308:	movw	r0, #0
   1a30c:	movlt	r0, #1
   1a310:	tst	r0, #1
   1a314:	mvn	r0, #0
   1a318:	moveq	r0, #0
   1a31c:	mov	sp, fp
   1a320:	pop	{fp, pc}
   1a324:	push	{fp, lr}
   1a328:	mov	fp, sp
   1a32c:	sub	sp, sp, #40	; 0x28
   1a330:	str	r0, [fp, #-8]
   1a334:	ldr	r0, [fp, #-8]
   1a338:	ldrb	r0, [r0]
   1a33c:	sub	r0, r0, #48	; 0x30
   1a340:	cmp	r0, #9
   1a344:	bhi	1a388 <__assert_fail@plt+0x8c54>
   1a348:	ldr	r0, [fp, #-8]
   1a34c:	sub	r1, fp, #12
   1a350:	movw	r2, #10
   1a354:	bl	113c8 <strtol@plt>
   1a358:	str	r0, [fp, #-16]
   1a35c:	ldr	r0, [fp, #-12]
   1a360:	ldrsb	r0, [r0]
   1a364:	cmp	r0, #0
   1a368:	bne	1a384 <__assert_fail@plt+0x8c50>
   1a36c:	ldr	r0, [fp, #-16]
   1a370:	cmp	r0, #64	; 0x40
   1a374:	bgt	1a384 <__assert_fail@plt+0x8c50>
   1a378:	ldr	r0, [fp, #-16]
   1a37c:	str	r0, [fp, #-4]
   1a380:	b	1a544 <__assert_fail@plt+0x8e10>
   1a384:	b	1a53c <__assert_fail@plt+0x8e08>
   1a388:	movw	r0, #0
   1a38c:	str	r0, [sp, #20]
   1a390:	ldr	r0, [sp, #20]
   1a394:	cmp	r0, #35	; 0x23
   1a398:	bcs	1a400 <__assert_fail@plt+0x8ccc>
   1a39c:	ldr	r0, [sp, #20]
   1a3a0:	movw	r1, #12
   1a3a4:	mul	r0, r0, r1
   1a3a8:	movw	r1, #20908	; 0x51ac
   1a3ac:	movt	r1, #3
   1a3b0:	add	r0, r1, r0
   1a3b4:	add	r0, r0, #4
   1a3b8:	ldr	r1, [fp, #-8]
   1a3bc:	bl	113bc <strcmp@plt>
   1a3c0:	cmp	r0, #0
   1a3c4:	bne	1a3ec <__assert_fail@plt+0x8cb8>
   1a3c8:	ldr	r0, [sp, #20]
   1a3cc:	movw	r1, #12
   1a3d0:	mul	r0, r0, r1
   1a3d4:	movw	r1, #20908	; 0x51ac
   1a3d8:	movt	r1, #3
   1a3dc:	add	r0, r1, r0
   1a3e0:	ldr	r0, [r0]
   1a3e4:	str	r0, [fp, #-4]
   1a3e8:	b	1a544 <__assert_fail@plt+0x8e10>
   1a3ec:	b	1a3f0 <__assert_fail@plt+0x8cbc>
   1a3f0:	ldr	r0, [sp, #20]
   1a3f4:	add	r0, r0, #1
   1a3f8:	str	r0, [sp, #20]
   1a3fc:	b	1a390 <__assert_fail@plt+0x8c5c>
   1a400:	bl	116ec <__libc_current_sigrtmin@plt>
   1a404:	str	r0, [sp, #12]
   1a408:	bl	115a8 <__libc_current_sigrtmax@plt>
   1a40c:	str	r0, [sp, #8]
   1a410:	ldr	r0, [sp, #12]
   1a414:	movw	lr, #0
   1a418:	cmp	lr, r0
   1a41c:	bge	1a4a4 <__assert_fail@plt+0x8d70>
   1a420:	ldr	r0, [fp, #-8]
   1a424:	movw	r1, #16432	; 0x4030
   1a428:	movt	r1, #2
   1a42c:	movw	r2, #5
   1a430:	bl	11704 <strncmp@plt>
   1a434:	cmp	r0, #0
   1a438:	bne	1a4a4 <__assert_fail@plt+0x8d70>
   1a43c:	ldr	r0, [fp, #-8]
   1a440:	add	r0, r0, #5
   1a444:	add	r1, sp, #16
   1a448:	movw	r2, #10
   1a44c:	bl	113c8 <strtol@plt>
   1a450:	str	r0, [sp, #4]
   1a454:	ldr	r0, [sp, #16]
   1a458:	ldrsb	r0, [r0]
   1a45c:	cmp	r0, #0
   1a460:	bne	1a4a0 <__assert_fail@plt+0x8d6c>
   1a464:	ldr	r0, [sp, #4]
   1a468:	movw	r1, #0
   1a46c:	cmp	r1, r0
   1a470:	bgt	1a4a0 <__assert_fail@plt+0x8d6c>
   1a474:	ldr	r0, [sp, #4]
   1a478:	ldr	r1, [sp, #8]
   1a47c:	ldr	r2, [sp, #12]
   1a480:	sub	r1, r1, r2
   1a484:	cmp	r0, r1
   1a488:	bgt	1a4a0 <__assert_fail@plt+0x8d6c>
   1a48c:	ldr	r0, [sp, #12]
   1a490:	ldr	r1, [sp, #4]
   1a494:	add	r0, r0, r1
   1a498:	str	r0, [fp, #-4]
   1a49c:	b	1a544 <__assert_fail@plt+0x8e10>
   1a4a0:	b	1a538 <__assert_fail@plt+0x8e04>
   1a4a4:	ldr	r0, [sp, #8]
   1a4a8:	movw	r1, #0
   1a4ac:	cmp	r1, r0
   1a4b0:	bge	1a534 <__assert_fail@plt+0x8e00>
   1a4b4:	ldr	r0, [fp, #-8]
   1a4b8:	movw	r1, #16438	; 0x4036
   1a4bc:	movt	r1, #2
   1a4c0:	movw	r2, #5
   1a4c4:	bl	11704 <strncmp@plt>
   1a4c8:	cmp	r0, #0
   1a4cc:	bne	1a534 <__assert_fail@plt+0x8e00>
   1a4d0:	ldr	r0, [fp, #-8]
   1a4d4:	add	r0, r0, #5
   1a4d8:	add	r1, sp, #16
   1a4dc:	movw	r2, #10
   1a4e0:	bl	113c8 <strtol@plt>
   1a4e4:	str	r0, [sp]
   1a4e8:	ldr	r0, [sp, #16]
   1a4ec:	ldrsb	r0, [r0]
   1a4f0:	cmp	r0, #0
   1a4f4:	bne	1a530 <__assert_fail@plt+0x8dfc>
   1a4f8:	ldr	r0, [sp, #12]
   1a4fc:	ldr	r1, [sp, #8]
   1a500:	sub	r0, r0, r1
   1a504:	ldr	r1, [sp]
   1a508:	cmp	r0, r1
   1a50c:	bgt	1a530 <__assert_fail@plt+0x8dfc>
   1a510:	ldr	r0, [sp]
   1a514:	cmp	r0, #0
   1a518:	bgt	1a530 <__assert_fail@plt+0x8dfc>
   1a51c:	ldr	r0, [sp, #8]
   1a520:	ldr	r1, [sp]
   1a524:	add	r0, r0, r1
   1a528:	str	r0, [fp, #-4]
   1a52c:	b	1a544 <__assert_fail@plt+0x8e10>
   1a530:	b	1a534 <__assert_fail@plt+0x8e00>
   1a534:	b	1a538 <__assert_fail@plt+0x8e04>
   1a538:	b	1a53c <__assert_fail@plt+0x8e08>
   1a53c:	mvn	r0, #0
   1a540:	str	r0, [fp, #-4]
   1a544:	ldr	r0, [fp, #-4]
   1a548:	mov	sp, fp
   1a54c:	pop	{fp, pc}
   1a550:	push	{fp, lr}
   1a554:	mov	fp, sp
   1a558:	sub	sp, sp, #48	; 0x30
   1a55c:	str	r0, [fp, #-8]
   1a560:	str	r1, [fp, #-12]
   1a564:	movw	r0, #0
   1a568:	str	r0, [fp, #-16]
   1a56c:	ldr	r0, [fp, #-16]
   1a570:	cmp	r0, #35	; 0x23
   1a574:	bcs	1a5e8 <__assert_fail@plt+0x8eb4>
   1a578:	ldr	r0, [fp, #-16]
   1a57c:	movw	r1, #12
   1a580:	mul	r0, r0, r1
   1a584:	movw	r1, #20908	; 0x51ac
   1a588:	movt	r1, #3
   1a58c:	add	r0, r1, r0
   1a590:	ldr	r0, [r0]
   1a594:	ldr	r1, [fp, #-8]
   1a598:	cmp	r0, r1
   1a59c:	bne	1a5d4 <__assert_fail@plt+0x8ea0>
   1a5a0:	ldr	r0, [fp, #-12]
   1a5a4:	ldr	r1, [fp, #-16]
   1a5a8:	movw	r2, #12
   1a5ac:	mul	r1, r1, r2
   1a5b0:	movw	r2, #20908	; 0x51ac
   1a5b4:	movt	r2, #3
   1a5b8:	add	r1, r2, r1
   1a5bc:	add	r1, r1, #4
   1a5c0:	bl	114dc <strcpy@plt>
   1a5c4:	movw	r1, #0
   1a5c8:	str	r1, [fp, #-4]
   1a5cc:	str	r0, [sp, #12]
   1a5d0:	b	1a6c8 <__assert_fail@plt+0x8f94>
   1a5d4:	b	1a5d8 <__assert_fail@plt+0x8ea4>
   1a5d8:	ldr	r0, [fp, #-16]
   1a5dc:	add	r0, r0, #1
   1a5e0:	str	r0, [fp, #-16]
   1a5e4:	b	1a56c <__assert_fail@plt+0x8e38>
   1a5e8:	bl	116ec <__libc_current_sigrtmin@plt>
   1a5ec:	str	r0, [fp, #-20]	; 0xffffffec
   1a5f0:	bl	115a8 <__libc_current_sigrtmax@plt>
   1a5f4:	str	r0, [sp, #24]
   1a5f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a5fc:	ldr	lr, [fp, #-8]
   1a600:	cmp	r0, lr
   1a604:	bgt	1a618 <__assert_fail@plt+0x8ee4>
   1a608:	ldr	r0, [fp, #-8]
   1a60c:	ldr	r1, [sp, #24]
   1a610:	cmp	r0, r1
   1a614:	ble	1a624 <__assert_fail@plt+0x8ef0>
   1a618:	mvn	r0, #0
   1a61c:	str	r0, [fp, #-4]
   1a620:	b	1a6c8 <__assert_fail@plt+0x8f94>
   1a624:	ldr	r0, [fp, #-8]
   1a628:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a62c:	ldr	r2, [sp, #24]
   1a630:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a634:	sub	r2, r2, r3
   1a638:	movw	r3, #2
   1a63c:	sdiv	r2, r2, r3
   1a640:	add	r1, r1, r2
   1a644:	cmp	r0, r1
   1a648:	bgt	1a66c <__assert_fail@plt+0x8f38>
   1a64c:	ldr	r0, [fp, #-12]
   1a650:	movw	r1, #16432	; 0x4030
   1a654:	movt	r1, #2
   1a658:	bl	114dc <strcpy@plt>
   1a65c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a660:	str	r1, [sp, #20]
   1a664:	str	r0, [sp, #8]
   1a668:	b	1a688 <__assert_fail@plt+0x8f54>
   1a66c:	ldr	r0, [fp, #-12]
   1a670:	movw	r1, #16438	; 0x4036
   1a674:	movt	r1, #2
   1a678:	bl	114dc <strcpy@plt>
   1a67c:	ldr	r1, [sp, #24]
   1a680:	str	r1, [sp, #20]
   1a684:	str	r0, [sp, #4]
   1a688:	ldr	r0, [fp, #-8]
   1a68c:	ldr	r1, [sp, #20]
   1a690:	sub	r0, r0, r1
   1a694:	str	r0, [sp, #16]
   1a698:	ldr	r0, [sp, #16]
   1a69c:	cmp	r0, #0
   1a6a0:	beq	1a6c0 <__assert_fail@plt+0x8f8c>
   1a6a4:	ldr	r0, [fp, #-12]
   1a6a8:	add	r0, r0, #5
   1a6ac:	ldr	r2, [sp, #16]
   1a6b0:	movw	r1, #16444	; 0x403c
   1a6b4:	movt	r1, #2
   1a6b8:	bl	116bc <sprintf@plt>
   1a6bc:	str	r0, [sp]
   1a6c0:	movw	r0, #0
   1a6c4:	str	r0, [fp, #-4]
   1a6c8:	ldr	r0, [fp, #-4]
   1a6cc:	mov	sp, fp
   1a6d0:	pop	{fp, pc}
   1a6d4:	push	{fp, lr}
   1a6d8:	mov	fp, sp
   1a6dc:	sub	sp, sp, #24
   1a6e0:	str	r0, [fp, #-4]
   1a6e4:	ldr	r0, [fp, #-4]
   1a6e8:	movw	r1, #0
   1a6ec:	cmp	r1, r0
   1a6f0:	bgt	1a740 <__assert_fail@plt+0x900c>
   1a6f4:	ldr	r0, [fp, #-4]
   1a6f8:	cmp	r0, #2
   1a6fc:	bgt	1a740 <__assert_fail@plt+0x900c>
   1a700:	ldr	r0, [fp, #-4]
   1a704:	bl	21df8 <__assert_fail@plt+0x106c4>
   1a708:	str	r0, [fp, #-8]
   1a70c:	bl	115f0 <__errno_location@plt>
   1a710:	ldr	r0, [r0]
   1a714:	str	r0, [sp, #12]
   1a718:	ldr	r0, [fp, #-4]
   1a71c:	bl	1171c <close@plt>
   1a720:	ldr	lr, [sp, #12]
   1a724:	str	r0, [sp, #8]
   1a728:	str	lr, [sp, #4]
   1a72c:	bl	115f0 <__errno_location@plt>
   1a730:	ldr	lr, [sp, #4]
   1a734:	str	lr, [r0]
   1a738:	ldr	r0, [fp, #-8]
   1a73c:	str	r0, [fp, #-4]
   1a740:	ldr	r0, [fp, #-4]
   1a744:	mov	sp, fp
   1a748:	pop	{fp, pc}
   1a74c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a750:	add	fp, sp, #28
   1a754:	sub	sp, sp, #260	; 0x104
   1a758:	ldr	ip, [fp, #12]
   1a75c:	ldr	lr, [fp, #8]
   1a760:	str	r0, [fp, #-32]	; 0xffffffe0
   1a764:	str	r1, [fp, #-36]	; 0xffffffdc
   1a768:	str	r2, [fp, #-40]	; 0xffffffd8
   1a76c:	str	r3, [fp, #-44]	; 0xffffffd4
   1a770:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a774:	movw	r1, #0
   1a778:	cmp	r0, r1
   1a77c:	str	lr, [fp, #-48]	; 0xffffffd0
   1a780:	str	ip, [fp, #-52]	; 0xffffffcc
   1a784:	beq	1a7bc <__assert_fail@plt+0x9088>
   1a788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a78c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a790:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a794:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a798:	movw	ip, #16448	; 0x4040
   1a79c:	movt	ip, #2
   1a7a0:	str	r1, [fp, #-56]	; 0xffffffc8
   1a7a4:	mov	r1, ip
   1a7a8:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1a7ac:	str	ip, [sp]
   1a7b0:	bl	115d8 <fprintf@plt>
   1a7b4:	str	r0, [fp, #-60]	; 0xffffffc4
   1a7b8:	b	1a7d8 <__assert_fail@plt+0x90a4>
   1a7bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a7c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a7c8:	movw	r1, #16460	; 0x404c
   1a7cc:	movt	r1, #2
   1a7d0:	bl	115d8 <fprintf@plt>
   1a7d4:	str	r0, [fp, #-64]	; 0xffffffc0
   1a7d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7dc:	movw	r1, #16467	; 0x4053
   1a7e0:	movt	r1, #2
   1a7e4:	str	r0, [fp, #-68]	; 0xffffffbc
   1a7e8:	mov	r0, r1
   1a7ec:	bl	11590 <gettext@plt>
   1a7f0:	movw	r1, #17185	; 0x4321
   1a7f4:	movt	r1, #2
   1a7f8:	movw	r3, #2022	; 0x7e6
   1a7fc:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1a800:	str	r0, [fp, #-72]	; 0xffffffb8
   1a804:	mov	r0, lr
   1a808:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a80c:	bl	115d8 <fprintf@plt>
   1a810:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a814:	movw	r2, #12816	; 0x3210
   1a818:	movt	r2, #2
   1a81c:	str	r0, [fp, #-76]	; 0xffffffb4
   1a820:	mov	r0, r2
   1a824:	str	r2, [fp, #-80]	; 0xffffffb0
   1a828:	bl	113a4 <fputs_unlocked@plt>
   1a82c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a830:	movw	r2, #16471	; 0x4057
   1a834:	movt	r2, #2
   1a838:	str	r0, [fp, #-84]	; 0xffffffac
   1a83c:	mov	r0, r2
   1a840:	str	r1, [fp, #-88]	; 0xffffffa8
   1a844:	bl	11590 <gettext@plt>
   1a848:	movw	r2, #16642	; 0x4102
   1a84c:	movt	r2, #2
   1a850:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a854:	str	r0, [fp, #-92]	; 0xffffffa4
   1a858:	mov	r0, r1
   1a85c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1a860:	bl	115d8 <fprintf@plt>
   1a864:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a868:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a86c:	str	r0, [fp, #-96]	; 0xffffffa0
   1a870:	mov	r0, r2
   1a874:	bl	113a4 <fputs_unlocked@plt>
   1a878:	ldr	r1, [fp, #12]
   1a87c:	cmp	r1, #9
   1a880:	str	r0, [fp, #-100]	; 0xffffff9c
   1a884:	str	r1, [fp, #-104]	; 0xffffff98
   1a888:	bhi	1acc8 <__assert_fail@plt+0x9594>
   1a88c:	add	r0, pc, #8
   1a890:	ldr	r1, [fp, #-104]	; 0xffffff98
   1a894:	ldr	r0, [r0, r1, lsl #2]
   1a898:	mov	pc, r0
   1a89c:	andeq	sl, r1, r4, asr #17
   1a8a0:	andeq	sl, r1, r8, asr #17
   1a8a4:	andeq	sl, r1, r4, lsl #18
   1a8a8:	andeq	sl, r1, r8, asr #18
   1a8ac:	andeq	sl, r1, r4, lsr #19
   1a8b0:	andeq	sl, r1, ip, lsl #20
   1a8b4:	andeq	sl, r1, r0, lsl #21
   1a8b8:	andeq	sl, r1, r0, lsl #22
   1a8bc:	andeq	sl, r1, ip, lsl #23
   1a8c0:	andeq	sl, r1, r4, lsr #24
   1a8c4:	b	1ad68 <__assert_fail@plt+0x9634>
   1a8c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a8cc:	movw	r1, #16676	; 0x4124
   1a8d0:	movt	r1, #2
   1a8d4:	str	r0, [fp, #-108]	; 0xffffff94
   1a8d8:	mov	r0, r1
   1a8dc:	bl	11590 <gettext@plt>
   1a8e0:	ldr	r1, [fp, #8]
   1a8e4:	ldr	r2, [r1]
   1a8e8:	ldr	r1, [fp, #-108]	; 0xffffff94
   1a8ec:	str	r0, [fp, #-112]	; 0xffffff90
   1a8f0:	mov	r0, r1
   1a8f4:	ldr	r1, [fp, #-112]	; 0xffffff90
   1a8f8:	bl	115d8 <fprintf@plt>
   1a8fc:	str	r0, [fp, #-116]	; 0xffffff8c
   1a900:	b	1ad68 <__assert_fail@plt+0x9634>
   1a904:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a908:	movw	r1, #16692	; 0x4134
   1a90c:	movt	r1, #2
   1a910:	str	r0, [fp, #-120]	; 0xffffff88
   1a914:	mov	r0, r1
   1a918:	bl	11590 <gettext@plt>
   1a91c:	ldr	r1, [fp, #8]
   1a920:	ldr	r2, [r1]
   1a924:	ldr	r1, [fp, #8]
   1a928:	ldr	r3, [r1, #4]
   1a92c:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a930:	str	r0, [fp, #-124]	; 0xffffff84
   1a934:	mov	r0, r1
   1a938:	ldr	r1, [fp, #-124]	; 0xffffff84
   1a93c:	bl	115d8 <fprintf@plt>
   1a940:	str	r0, [fp, #-128]	; 0xffffff80
   1a944:	b	1ad68 <__assert_fail@plt+0x9634>
   1a948:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a94c:	movw	r1, #16715	; 0x414b
   1a950:	movt	r1, #2
   1a954:	str	r0, [fp, #-132]	; 0xffffff7c
   1a958:	mov	r0, r1
   1a95c:	bl	11590 <gettext@plt>
   1a960:	ldr	r1, [fp, #8]
   1a964:	ldr	r2, [r1]
   1a968:	ldr	r1, [fp, #8]
   1a96c:	ldr	r3, [r1, #4]
   1a970:	ldr	r1, [fp, #8]
   1a974:	ldr	r1, [r1, #8]
   1a978:	ldr	lr, [fp, #-132]	; 0xffffff7c
   1a97c:	str	r0, [fp, #-136]	; 0xffffff78
   1a980:	mov	r0, lr
   1a984:	ldr	ip, [fp, #-136]	; 0xffffff78
   1a988:	str	r1, [fp, #-140]	; 0xffffff74
   1a98c:	mov	r1, ip
   1a990:	ldr	r4, [fp, #-140]	; 0xffffff74
   1a994:	str	r4, [sp]
   1a998:	bl	115d8 <fprintf@plt>
   1a99c:	str	r0, [sp, #144]	; 0x90
   1a9a0:	b	1ad68 <__assert_fail@plt+0x9634>
   1a9a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a9a8:	movw	r1, #16743	; 0x4167
   1a9ac:	movt	r1, #2
   1a9b0:	str	r0, [sp, #140]	; 0x8c
   1a9b4:	mov	r0, r1
   1a9b8:	bl	11590 <gettext@plt>
   1a9bc:	ldr	r1, [fp, #8]
   1a9c0:	ldr	r2, [r1]
   1a9c4:	ldr	r1, [fp, #8]
   1a9c8:	ldr	r3, [r1, #4]
   1a9cc:	ldr	r1, [fp, #8]
   1a9d0:	ldr	r1, [r1, #8]
   1a9d4:	ldr	lr, [fp, #8]
   1a9d8:	ldr	lr, [lr, #12]
   1a9dc:	ldr	ip, [sp, #140]	; 0x8c
   1a9e0:	str	r0, [sp, #136]	; 0x88
   1a9e4:	mov	r0, ip
   1a9e8:	ldr	r4, [sp, #136]	; 0x88
   1a9ec:	str	r1, [sp, #132]	; 0x84
   1a9f0:	mov	r1, r4
   1a9f4:	ldr	r5, [sp, #132]	; 0x84
   1a9f8:	str	r5, [sp]
   1a9fc:	str	lr, [sp, #4]
   1aa00:	bl	115d8 <fprintf@plt>
   1aa04:	str	r0, [sp, #128]	; 0x80
   1aa08:	b	1ad68 <__assert_fail@plt+0x9634>
   1aa0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aa10:	movw	r1, #16775	; 0x4187
   1aa14:	movt	r1, #2
   1aa18:	str	r0, [sp, #124]	; 0x7c
   1aa1c:	mov	r0, r1
   1aa20:	bl	11590 <gettext@plt>
   1aa24:	ldr	r1, [fp, #8]
   1aa28:	ldr	r2, [r1]
   1aa2c:	ldr	r1, [fp, #8]
   1aa30:	ldr	r3, [r1, #4]
   1aa34:	ldr	r1, [fp, #8]
   1aa38:	ldr	r1, [r1, #8]
   1aa3c:	ldr	lr, [fp, #8]
   1aa40:	ldr	lr, [lr, #12]
   1aa44:	ldr	ip, [fp, #8]
   1aa48:	ldr	ip, [ip, #16]
   1aa4c:	ldr	r4, [sp, #124]	; 0x7c
   1aa50:	str	r0, [sp, #120]	; 0x78
   1aa54:	mov	r0, r4
   1aa58:	ldr	r5, [sp, #120]	; 0x78
   1aa5c:	str	r1, [sp, #116]	; 0x74
   1aa60:	mov	r1, r5
   1aa64:	ldr	r6, [sp, #116]	; 0x74
   1aa68:	str	r6, [sp]
   1aa6c:	str	lr, [sp, #4]
   1aa70:	str	ip, [sp, #8]
   1aa74:	bl	115d8 <fprintf@plt>
   1aa78:	str	r0, [sp, #112]	; 0x70
   1aa7c:	b	1ad68 <__assert_fail@plt+0x9634>
   1aa80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aa84:	movw	r1, #16811	; 0x41ab
   1aa88:	movt	r1, #2
   1aa8c:	str	r0, [sp, #108]	; 0x6c
   1aa90:	mov	r0, r1
   1aa94:	bl	11590 <gettext@plt>
   1aa98:	ldr	r1, [fp, #8]
   1aa9c:	ldr	r2, [r1]
   1aaa0:	ldr	r1, [fp, #8]
   1aaa4:	ldr	r3, [r1, #4]
   1aaa8:	ldr	r1, [fp, #8]
   1aaac:	ldr	r1, [r1, #8]
   1aab0:	ldr	lr, [fp, #8]
   1aab4:	ldr	lr, [lr, #12]
   1aab8:	ldr	ip, [fp, #8]
   1aabc:	ldr	ip, [ip, #16]
   1aac0:	ldr	r4, [fp, #8]
   1aac4:	ldr	r4, [r4, #20]
   1aac8:	ldr	r5, [sp, #108]	; 0x6c
   1aacc:	str	r0, [sp, #104]	; 0x68
   1aad0:	mov	r0, r5
   1aad4:	ldr	r6, [sp, #104]	; 0x68
   1aad8:	str	r1, [sp, #100]	; 0x64
   1aadc:	mov	r1, r6
   1aae0:	ldr	r7, [sp, #100]	; 0x64
   1aae4:	str	r7, [sp]
   1aae8:	str	lr, [sp, #4]
   1aaec:	str	ip, [sp, #8]
   1aaf0:	str	r4, [sp, #12]
   1aaf4:	bl	115d8 <fprintf@plt>
   1aaf8:	str	r0, [sp, #96]	; 0x60
   1aafc:	b	1ad68 <__assert_fail@plt+0x9634>
   1ab00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ab04:	movw	r1, #16851	; 0x41d3
   1ab08:	movt	r1, #2
   1ab0c:	str	r0, [sp, #92]	; 0x5c
   1ab10:	mov	r0, r1
   1ab14:	bl	11590 <gettext@plt>
   1ab18:	ldr	r1, [fp, #8]
   1ab1c:	ldr	r2, [r1]
   1ab20:	ldr	r1, [fp, #8]
   1ab24:	ldr	r3, [r1, #4]
   1ab28:	ldr	r1, [fp, #8]
   1ab2c:	ldr	r1, [r1, #8]
   1ab30:	ldr	lr, [fp, #8]
   1ab34:	ldr	lr, [lr, #12]
   1ab38:	ldr	ip, [fp, #8]
   1ab3c:	ldr	ip, [ip, #16]
   1ab40:	ldr	r4, [fp, #8]
   1ab44:	ldr	r4, [r4, #20]
   1ab48:	ldr	r5, [fp, #8]
   1ab4c:	ldr	r5, [r5, #24]
   1ab50:	ldr	r6, [sp, #92]	; 0x5c
   1ab54:	str	r0, [sp, #88]	; 0x58
   1ab58:	mov	r0, r6
   1ab5c:	ldr	r7, [sp, #88]	; 0x58
   1ab60:	str	r1, [sp, #84]	; 0x54
   1ab64:	mov	r1, r7
   1ab68:	ldr	r8, [sp, #84]	; 0x54
   1ab6c:	str	r8, [sp]
   1ab70:	str	lr, [sp, #4]
   1ab74:	str	ip, [sp, #8]
   1ab78:	str	r4, [sp, #12]
   1ab7c:	str	r5, [sp, #16]
   1ab80:	bl	115d8 <fprintf@plt>
   1ab84:	str	r0, [sp, #80]	; 0x50
   1ab88:	b	1ad68 <__assert_fail@plt+0x9634>
   1ab8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ab90:	movw	r1, #16895	; 0x41ff
   1ab94:	movt	r1, #2
   1ab98:	str	r0, [sp, #76]	; 0x4c
   1ab9c:	mov	r0, r1
   1aba0:	bl	11590 <gettext@plt>
   1aba4:	ldr	r1, [fp, #8]
   1aba8:	ldr	r2, [r1]
   1abac:	ldr	r1, [fp, #8]
   1abb0:	ldr	r3, [r1, #4]
   1abb4:	ldr	r1, [fp, #8]
   1abb8:	ldr	r1, [r1, #8]
   1abbc:	ldr	lr, [fp, #8]
   1abc0:	ldr	lr, [lr, #12]
   1abc4:	ldr	ip, [fp, #8]
   1abc8:	ldr	ip, [ip, #16]
   1abcc:	ldr	r4, [fp, #8]
   1abd0:	ldr	r4, [r4, #20]
   1abd4:	ldr	r5, [fp, #8]
   1abd8:	ldr	r5, [r5, #24]
   1abdc:	ldr	r6, [fp, #8]
   1abe0:	ldr	r6, [r6, #28]
   1abe4:	ldr	r7, [sp, #76]	; 0x4c
   1abe8:	str	r0, [sp, #72]	; 0x48
   1abec:	mov	r0, r7
   1abf0:	ldr	r8, [sp, #72]	; 0x48
   1abf4:	str	r1, [sp, #68]	; 0x44
   1abf8:	mov	r1, r8
   1abfc:	ldr	r9, [sp, #68]	; 0x44
   1ac00:	str	r9, [sp]
   1ac04:	str	lr, [sp, #4]
   1ac08:	str	ip, [sp, #8]
   1ac0c:	str	r4, [sp, #12]
   1ac10:	str	r5, [sp, #16]
   1ac14:	str	r6, [sp, #20]
   1ac18:	bl	115d8 <fprintf@plt>
   1ac1c:	str	r0, [sp, #64]	; 0x40
   1ac20:	b	1ad68 <__assert_fail@plt+0x9634>
   1ac24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ac28:	movw	r1, #16943	; 0x422f
   1ac2c:	movt	r1, #2
   1ac30:	str	r0, [sp, #60]	; 0x3c
   1ac34:	mov	r0, r1
   1ac38:	bl	11590 <gettext@plt>
   1ac3c:	ldr	r1, [fp, #8]
   1ac40:	ldr	r2, [r1]
   1ac44:	ldr	r1, [fp, #8]
   1ac48:	ldr	r3, [r1, #4]
   1ac4c:	ldr	r1, [fp, #8]
   1ac50:	ldr	r1, [r1, #8]
   1ac54:	ldr	lr, [fp, #8]
   1ac58:	ldr	lr, [lr, #12]
   1ac5c:	ldr	ip, [fp, #8]
   1ac60:	ldr	ip, [ip, #16]
   1ac64:	ldr	r4, [fp, #8]
   1ac68:	ldr	r4, [r4, #20]
   1ac6c:	ldr	r5, [fp, #8]
   1ac70:	ldr	r5, [r5, #24]
   1ac74:	ldr	r6, [fp, #8]
   1ac78:	ldr	r6, [r6, #28]
   1ac7c:	ldr	r7, [fp, #8]
   1ac80:	ldr	r7, [r7, #32]
   1ac84:	ldr	r8, [sp, #60]	; 0x3c
   1ac88:	str	r0, [sp, #56]	; 0x38
   1ac8c:	mov	r0, r8
   1ac90:	ldr	r9, [sp, #56]	; 0x38
   1ac94:	str	r1, [sp, #52]	; 0x34
   1ac98:	mov	r1, r9
   1ac9c:	ldr	sl, [sp, #52]	; 0x34
   1aca0:	str	sl, [sp]
   1aca4:	str	lr, [sp, #4]
   1aca8:	str	ip, [sp, #8]
   1acac:	str	r4, [sp, #12]
   1acb0:	str	r5, [sp, #16]
   1acb4:	str	r6, [sp, #20]
   1acb8:	str	r7, [sp, #24]
   1acbc:	bl	115d8 <fprintf@plt>
   1acc0:	str	r0, [sp, #48]	; 0x30
   1acc4:	b	1ad68 <__assert_fail@plt+0x9634>
   1acc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1accc:	movw	r1, #16995	; 0x4263
   1acd0:	movt	r1, #2
   1acd4:	str	r0, [sp, #44]	; 0x2c
   1acd8:	mov	r0, r1
   1acdc:	bl	11590 <gettext@plt>
   1ace0:	ldr	r1, [fp, #8]
   1ace4:	ldr	r2, [r1]
   1ace8:	ldr	r1, [fp, #8]
   1acec:	ldr	r3, [r1, #4]
   1acf0:	ldr	r1, [fp, #8]
   1acf4:	ldr	r1, [r1, #8]
   1acf8:	ldr	lr, [fp, #8]
   1acfc:	ldr	lr, [lr, #12]
   1ad00:	ldr	ip, [fp, #8]
   1ad04:	ldr	ip, [ip, #16]
   1ad08:	ldr	r4, [fp, #8]
   1ad0c:	ldr	r4, [r4, #20]
   1ad10:	ldr	r5, [fp, #8]
   1ad14:	ldr	r5, [r5, #24]
   1ad18:	ldr	r6, [fp, #8]
   1ad1c:	ldr	r6, [r6, #28]
   1ad20:	ldr	r7, [fp, #8]
   1ad24:	ldr	r7, [r7, #32]
   1ad28:	ldr	r8, [sp, #44]	; 0x2c
   1ad2c:	str	r0, [sp, #40]	; 0x28
   1ad30:	mov	r0, r8
   1ad34:	ldr	r9, [sp, #40]	; 0x28
   1ad38:	str	r1, [sp, #36]	; 0x24
   1ad3c:	mov	r1, r9
   1ad40:	ldr	sl, [sp, #36]	; 0x24
   1ad44:	str	sl, [sp]
   1ad48:	str	lr, [sp, #4]
   1ad4c:	str	ip, [sp, #8]
   1ad50:	str	r4, [sp, #12]
   1ad54:	str	r5, [sp, #16]
   1ad58:	str	r6, [sp, #20]
   1ad5c:	str	r7, [sp, #24]
   1ad60:	bl	115d8 <fprintf@plt>
   1ad64:	str	r0, [sp, #32]
   1ad68:	sub	sp, fp, #28
   1ad6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad70:	push	{fp, lr}
   1ad74:	mov	fp, sp
   1ad78:	sub	sp, sp, #32
   1ad7c:	ldr	ip, [fp, #8]
   1ad80:	str	r0, [fp, #-4]
   1ad84:	str	r1, [fp, #-8]
   1ad88:	str	r2, [fp, #-12]
   1ad8c:	str	r3, [sp, #16]
   1ad90:	movw	r0, #0
   1ad94:	str	r0, [sp, #12]
   1ad98:	str	ip, [sp, #8]
   1ad9c:	ldr	r0, [fp, #8]
   1ada0:	ldr	r1, [sp, #12]
   1ada4:	add	r0, r0, r1, lsl #2
   1ada8:	ldr	r0, [r0]
   1adac:	movw	r1, #0
   1adb0:	cmp	r0, r1
   1adb4:	beq	1adcc <__assert_fail@plt+0x9698>
   1adb8:	b	1adbc <__assert_fail@plt+0x9688>
   1adbc:	ldr	r0, [sp, #12]
   1adc0:	add	r0, r0, #1
   1adc4:	str	r0, [sp, #12]
   1adc8:	b	1ad9c <__assert_fail@plt+0x9668>
   1adcc:	ldr	r0, [fp, #-4]
   1add0:	ldr	r1, [fp, #-8]
   1add4:	ldr	r2, [fp, #-12]
   1add8:	ldr	r3, [sp, #16]
   1addc:	ldr	ip, [fp, #8]
   1ade0:	ldr	lr, [sp, #12]
   1ade4:	str	ip, [sp]
   1ade8:	str	lr, [sp, #4]
   1adec:	bl	1a74c <__assert_fail@plt+0x9018>
   1adf0:	mov	sp, fp
   1adf4:	pop	{fp, pc}
   1adf8:	push	{fp, lr}
   1adfc:	mov	fp, sp
   1ae00:	sub	sp, sp, #80	; 0x50
   1ae04:	ldr	ip, [fp, #8]
   1ae08:	str	ip, [fp, #-4]
   1ae0c:	str	r0, [fp, #-8]
   1ae10:	str	r1, [fp, #-12]
   1ae14:	str	r2, [fp, #-16]
   1ae18:	str	r3, [fp, #-20]	; 0xffffffec
   1ae1c:	movw	r0, #0
   1ae20:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae28:	cmp	r0, #10
   1ae2c:	movw	r0, #0
   1ae30:	str	r0, [sp, #12]
   1ae34:	bcs	1ae6c <__assert_fail@plt+0x9738>
   1ae38:	ldr	r0, [fp, #-4]
   1ae3c:	add	r1, r0, #4
   1ae40:	str	r1, [fp, #-4]
   1ae44:	ldr	r0, [r0]
   1ae48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae4c:	add	r2, sp, #16
   1ae50:	add	r1, r2, r1, lsl #2
   1ae54:	str	r0, [r1]
   1ae58:	movw	r1, #0
   1ae5c:	cmp	r0, r1
   1ae60:	movw	r0, #0
   1ae64:	movne	r0, #1
   1ae68:	str	r0, [sp, #12]
   1ae6c:	ldr	r0, [sp, #12]
   1ae70:	tst	r0, #1
   1ae74:	beq	1ae8c <__assert_fail@plt+0x9758>
   1ae78:	b	1ae7c <__assert_fail@plt+0x9748>
   1ae7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae80:	add	r0, r0, #1
   1ae84:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae88:	b	1ae24 <__assert_fail@plt+0x96f0>
   1ae8c:	add	r0, sp, #16
   1ae90:	ldr	r1, [fp, #-8]
   1ae94:	ldr	r2, [fp, #-12]
   1ae98:	ldr	r3, [fp, #-16]
   1ae9c:	ldr	ip, [fp, #-20]	; 0xffffffec
   1aea0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1aea4:	str	r0, [sp, #8]
   1aea8:	mov	r0, r1
   1aeac:	mov	r1, r2
   1aeb0:	mov	r2, r3
   1aeb4:	mov	r3, ip
   1aeb8:	ldr	ip, [sp, #8]
   1aebc:	str	ip, [sp]
   1aec0:	str	lr, [sp, #4]
   1aec4:	bl	1a74c <__assert_fail@plt+0x9018>
   1aec8:	mov	sp, fp
   1aecc:	pop	{fp, pc}
   1aed0:	push	{fp, lr}
   1aed4:	mov	fp, sp
   1aed8:	sub	sp, sp, #32
   1aedc:	str	r0, [fp, #-4]
   1aee0:	str	r1, [fp, #-8]
   1aee4:	str	r2, [fp, #-12]
   1aee8:	str	r3, [sp, #16]
   1aeec:	add	r0, fp, #8
   1aef0:	str	r0, [sp, #12]
   1aef4:	ldr	r0, [fp, #-4]
   1aef8:	ldr	r1, [fp, #-8]
   1aefc:	ldr	r2, [fp, #-12]
   1af00:	ldr	r3, [sp, #16]
   1af04:	ldr	ip, [sp, #12]
   1af08:	mov	lr, sp
   1af0c:	str	ip, [lr]
   1af10:	bl	1adf8 <__assert_fail@plt+0x96c4>
   1af14:	add	r0, sp, #12
   1af18:	str	r0, [sp, #8]
   1af1c:	mov	sp, fp
   1af20:	pop	{fp, pc}
   1af24:	push	{fp, lr}
   1af28:	mov	fp, sp
   1af2c:	sub	sp, sp, #16
   1af30:	movw	r0, #21348	; 0x5364
   1af34:	movt	r0, #3
   1af38:	ldr	r1, [r0]
   1af3c:	movw	r0, #12816	; 0x3210
   1af40:	movt	r0, #2
   1af44:	bl	113a4 <fputs_unlocked@plt>
   1af48:	movw	r1, #17055	; 0x429f
   1af4c:	movt	r1, #2
   1af50:	str	r0, [fp, #-4]
   1af54:	mov	r0, r1
   1af58:	bl	11590 <gettext@plt>
   1af5c:	movw	r1, #17075	; 0x42b3
   1af60:	movt	r1, #2
   1af64:	bl	113d4 <printf@plt>
   1af68:	movw	r1, #17097	; 0x42c9
   1af6c:	movt	r1, #2
   1af70:	str	r0, [sp, #8]
   1af74:	mov	r0, r1
   1af78:	bl	11590 <gettext@plt>
   1af7c:	movw	r1, #13887	; 0x363f
   1af80:	movt	r1, #2
   1af84:	movw	r2, #14600	; 0x3908
   1af88:	movt	r2, #2
   1af8c:	bl	113d4 <printf@plt>
   1af90:	movw	r1, #17117	; 0x42dd
   1af94:	movt	r1, #2
   1af98:	str	r0, [sp, #4]
   1af9c:	mov	r0, r1
   1afa0:	bl	11590 <gettext@plt>
   1afa4:	movw	r1, #17156	; 0x4304
   1afa8:	movt	r1, #2
   1afac:	bl	113d4 <printf@plt>
   1afb0:	str	r0, [sp]
   1afb4:	mov	sp, fp
   1afb8:	pop	{fp, pc}
   1afbc:	push	{fp, lr}
   1afc0:	mov	fp, sp
   1afc4:	sub	sp, sp, #16
   1afc8:	str	r0, [fp, #-4]
   1afcc:	str	r1, [sp, #8]
   1afd0:	ldr	r0, [fp, #-4]
   1afd4:	ldr	r1, [sp, #8]
   1afd8:	bl	20568 <__assert_fail@plt+0xee34>
   1afdc:	str	r0, [sp, #4]
   1afe0:	ldr	r0, [sp, #4]
   1afe4:	movw	r1, #0
   1afe8:	cmp	r0, r1
   1afec:	bne	1aff4 <__assert_fail@plt+0x98c0>
   1aff0:	bl	1de80 <__assert_fail@plt+0xc74c>
   1aff4:	ldr	r0, [sp, #4]
   1aff8:	mov	sp, fp
   1affc:	pop	{fp, pc}
   1b000:	push	{fp, lr}
   1b004:	mov	fp, sp
   1b008:	sub	sp, sp, #16
   1b00c:	str	r0, [fp, #-4]
   1b010:	str	r1, [sp, #8]
   1b014:	str	r2, [sp, #4]
   1b018:	ldr	r0, [fp, #-4]
   1b01c:	ldr	r1, [sp, #8]
   1b020:	ldr	r2, [sp, #4]
   1b024:	bl	1b030 <__assert_fail@plt+0x98fc>
   1b028:	mov	sp, fp
   1b02c:	pop	{fp, pc}
   1b030:	push	{fp, lr}
   1b034:	mov	fp, sp
   1b038:	sub	sp, sp, #16
   1b03c:	str	r0, [fp, #-4]
   1b040:	str	r1, [sp, #8]
   1b044:	str	r2, [sp, #4]
   1b048:	ldr	r0, [fp, #-4]
   1b04c:	ldr	r1, [sp, #8]
   1b050:	ldr	r2, [sp, #4]
   1b054:	bl	20a68 <__assert_fail@plt+0xf334>
   1b058:	str	r0, [sp]
   1b05c:	ldr	r0, [sp]
   1b060:	movw	r1, #0
   1b064:	cmp	r0, r1
   1b068:	bne	1b098 <__assert_fail@plt+0x9964>
   1b06c:	ldr	r0, [fp, #-4]
   1b070:	movw	r1, #0
   1b074:	cmp	r0, r1
   1b078:	beq	1b094 <__assert_fail@plt+0x9960>
   1b07c:	ldr	r0, [sp, #8]
   1b080:	cmp	r0, #0
   1b084:	beq	1b098 <__assert_fail@plt+0x9964>
   1b088:	ldr	r0, [sp, #4]
   1b08c:	cmp	r0, #0
   1b090:	beq	1b098 <__assert_fail@plt+0x9964>
   1b094:	bl	1de80 <__assert_fail@plt+0xc74c>
   1b098:	ldr	r0, [sp]
   1b09c:	mov	sp, fp
   1b0a0:	pop	{fp, pc}
   1b0a4:	push	{fp, lr}
   1b0a8:	mov	fp, sp
   1b0ac:	sub	sp, sp, #8
   1b0b0:	str	r0, [sp, #4]
   1b0b4:	ldr	r0, [sp, #4]
   1b0b8:	bl	20434 <__assert_fail@plt+0xed00>
   1b0bc:	bl	1b0c8 <__assert_fail@plt+0x9994>
   1b0c0:	mov	sp, fp
   1b0c4:	pop	{fp, pc}
   1b0c8:	push	{fp, lr}
   1b0cc:	mov	fp, sp
   1b0d0:	sub	sp, sp, #8
   1b0d4:	str	r0, [sp, #4]
   1b0d8:	ldr	r0, [sp, #4]
   1b0dc:	movw	r1, #0
   1b0e0:	cmp	r0, r1
   1b0e4:	bne	1b0ec <__assert_fail@plt+0x99b8>
   1b0e8:	bl	1de80 <__assert_fail@plt+0xc74c>
   1b0ec:	ldr	r0, [sp, #4]
   1b0f0:	mov	sp, fp
   1b0f4:	pop	{fp, pc}
   1b0f8:	push	{fp, lr}
   1b0fc:	mov	fp, sp
   1b100:	sub	sp, sp, #8
   1b104:	str	r0, [sp, #4]
   1b108:	ldr	r0, [sp, #4]
   1b10c:	bl	207a4 <__assert_fail@plt+0xf070>
   1b110:	bl	1b0c8 <__assert_fail@plt+0x9994>
   1b114:	mov	sp, fp
   1b118:	pop	{fp, pc}
   1b11c:	push	{fp, lr}
   1b120:	mov	fp, sp
   1b124:	sub	sp, sp, #8
   1b128:	str	r0, [sp, #4]
   1b12c:	ldr	r0, [sp, #4]
   1b130:	bl	1b0a4 <__assert_fail@plt+0x9970>
   1b134:	mov	sp, fp
   1b138:	pop	{fp, pc}
   1b13c:	push	{fp, lr}
   1b140:	mov	fp, sp
   1b144:	sub	sp, sp, #16
   1b148:	str	r0, [fp, #-4]
   1b14c:	str	r1, [sp, #8]
   1b150:	ldr	r0, [fp, #-4]
   1b154:	ldr	r1, [sp, #8]
   1b158:	bl	204a4 <__assert_fail@plt+0xed70>
   1b15c:	str	r0, [sp, #4]
   1b160:	ldr	r0, [sp, #4]
   1b164:	movw	r1, #0
   1b168:	cmp	r0, r1
   1b16c:	bne	1b190 <__assert_fail@plt+0x9a5c>
   1b170:	ldr	r0, [fp, #-4]
   1b174:	movw	r1, #0
   1b178:	cmp	r0, r1
   1b17c:	beq	1b18c <__assert_fail@plt+0x9a58>
   1b180:	ldr	r0, [sp, #8]
   1b184:	cmp	r0, #0
   1b188:	beq	1b190 <__assert_fail@plt+0x9a5c>
   1b18c:	bl	1de80 <__assert_fail@plt+0xc74c>
   1b190:	ldr	r0, [sp, #4]
   1b194:	mov	sp, fp
   1b198:	pop	{fp, pc}
   1b19c:	push	{fp, lr}
   1b1a0:	mov	fp, sp
   1b1a4:	sub	sp, sp, #8
   1b1a8:	str	r0, [sp, #4]
   1b1ac:	str	r1, [sp]
   1b1b0:	ldr	r0, [sp, #4]
   1b1b4:	ldr	r1, [sp]
   1b1b8:	bl	207e4 <__assert_fail@plt+0xf0b0>
   1b1bc:	bl	1b0c8 <__assert_fail@plt+0x9994>
   1b1c0:	mov	sp, fp
   1b1c4:	pop	{fp, pc}
   1b1c8:	push	{fp, lr}
   1b1cc:	mov	fp, sp
   1b1d0:	sub	sp, sp, #16
   1b1d4:	str	r0, [fp, #-4]
   1b1d8:	str	r1, [sp, #8]
   1b1dc:	str	r2, [sp, #4]
   1b1e0:	ldr	r0, [fp, #-4]
   1b1e4:	ldr	r1, [sp, #8]
   1b1e8:	ldr	r2, [sp, #4]
   1b1ec:	bl	208dc <__assert_fail@plt+0xf1a8>
   1b1f0:	bl	1b0c8 <__assert_fail@plt+0x9994>
   1b1f4:	mov	sp, fp
   1b1f8:	pop	{fp, pc}
   1b1fc:	push	{fp, lr}
   1b200:	mov	fp, sp
   1b204:	sub	sp, sp, #8
   1b208:	str	r0, [sp, #4]
   1b20c:	str	r1, [sp]
   1b210:	ldr	r1, [sp, #4]
   1b214:	ldr	r2, [sp]
   1b218:	movw	r0, #0
   1b21c:	bl	1b030 <__assert_fail@plt+0x98fc>
   1b220:	mov	sp, fp
   1b224:	pop	{fp, pc}
   1b228:	push	{fp, lr}
   1b22c:	mov	fp, sp
   1b230:	sub	sp, sp, #8
   1b234:	str	r0, [sp, #4]
   1b238:	str	r1, [sp]
   1b23c:	ldr	r1, [sp, #4]
   1b240:	ldr	r2, [sp]
   1b244:	movw	r0, #0
   1b248:	bl	1b1c8 <__assert_fail@plt+0x9a94>
   1b24c:	mov	sp, fp
   1b250:	pop	{fp, pc}
   1b254:	push	{fp, lr}
   1b258:	mov	fp, sp
   1b25c:	sub	sp, sp, #8
   1b260:	str	r0, [sp, #4]
   1b264:	str	r1, [sp]
   1b268:	ldr	r0, [sp, #4]
   1b26c:	ldr	r1, [sp]
   1b270:	movw	r2, #1
   1b274:	bl	1b280 <__assert_fail@plt+0x9b4c>
   1b278:	mov	sp, fp
   1b27c:	pop	{fp, pc}
   1b280:	push	{fp, lr}
   1b284:	mov	fp, sp
   1b288:	sub	sp, sp, #16
   1b28c:	str	r0, [fp, #-4]
   1b290:	str	r1, [sp, #8]
   1b294:	str	r2, [sp, #4]
   1b298:	ldr	r0, [sp, #8]
   1b29c:	ldr	r0, [r0]
   1b2a0:	str	r0, [sp]
   1b2a4:	ldr	r0, [fp, #-4]
   1b2a8:	movw	r1, #0
   1b2ac:	cmp	r0, r1
   1b2b0:	bne	1b2fc <__assert_fail@plt+0x9bc8>
   1b2b4:	ldr	r0, [sp]
   1b2b8:	cmp	r0, #0
   1b2bc:	bne	1b2f8 <__assert_fail@plt+0x9bc4>
   1b2c0:	ldr	r0, [sp, #4]
   1b2c4:	movw	r1, #64	; 0x40
   1b2c8:	udiv	r0, r1, r0
   1b2cc:	str	r0, [sp]
   1b2d0:	ldr	r0, [sp]
   1b2d4:	cmp	r0, #0
   1b2d8:	movw	r0, #0
   1b2dc:	movne	r0, #1
   1b2e0:	mvn	r1, #0
   1b2e4:	eor	r0, r0, r1
   1b2e8:	and	r0, r0, #1
   1b2ec:	ldr	r1, [sp]
   1b2f0:	add	r0, r1, r0
   1b2f4:	str	r0, [sp]
   1b2f8:	b	1b32c <__assert_fail@plt+0x9bf8>
   1b2fc:	ldr	r0, [sp]
   1b300:	ldr	r1, [sp]
   1b304:	lsr	r1, r1, #1
   1b308:	add	r1, r1, #1
   1b30c:	adds	r0, r0, r1
   1b310:	mov	r1, #0
   1b314:	adc	r1, r1, #0
   1b318:	str	r0, [sp]
   1b31c:	tst	r1, #1
   1b320:	beq	1b328 <__assert_fail@plt+0x9bf4>
   1b324:	bl	1de80 <__assert_fail@plt+0xc74c>
   1b328:	b	1b32c <__assert_fail@plt+0x9bf8>
   1b32c:	ldr	r0, [fp, #-4]
   1b330:	ldr	r1, [sp]
   1b334:	ldr	r2, [sp, #4]
   1b338:	bl	1b030 <__assert_fail@plt+0x98fc>
   1b33c:	str	r0, [fp, #-4]
   1b340:	ldr	r0, [sp]
   1b344:	ldr	r1, [sp, #8]
   1b348:	str	r0, [r1]
   1b34c:	ldr	r0, [fp, #-4]
   1b350:	mov	sp, fp
   1b354:	pop	{fp, pc}
   1b358:	push	{fp, lr}
   1b35c:	mov	fp, sp
   1b360:	sub	sp, sp, #376	; 0x178
   1b364:	ldr	ip, [fp, #8]
   1b368:	str	r0, [fp, #-4]
   1b36c:	str	r1, [fp, #-8]
   1b370:	str	r2, [fp, #-12]
   1b374:	str	r3, [fp, #-16]
   1b378:	ldr	r0, [fp, #-8]
   1b37c:	ldr	r0, [r0]
   1b380:	str	r0, [fp, #-20]	; 0xffffffec
   1b384:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b388:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b38c:	asr	r1, r1, #1
   1b390:	add	r1, r0, r1
   1b394:	mov	r2, #1
   1b398:	cmp	r1, r0
   1b39c:	movwvc	r2, #0
   1b3a0:	str	r1, [fp, #-24]	; 0xffffffe8
   1b3a4:	tst	r2, #1
   1b3a8:	str	ip, [fp, #-36]	; 0xffffffdc
   1b3ac:	beq	1b3b8 <__assert_fail@plt+0x9c84>
   1b3b0:	ldr	r0, [pc, #4044]	; 1c384 <__assert_fail@plt+0xac50>
   1b3b4:	str	r0, [fp, #-24]	; 0xffffffe8
   1b3b8:	ldr	r0, [fp, #-16]
   1b3bc:	movw	r1, #0
   1b3c0:	cmp	r1, r0
   1b3c4:	bgt	1b3e0 <__assert_fail@plt+0x9cac>
   1b3c8:	ldr	r0, [fp, #-16]
   1b3cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b3d0:	cmp	r0, r1
   1b3d4:	bge	1b3e0 <__assert_fail@plt+0x9cac>
   1b3d8:	ldr	r0, [fp, #-16]
   1b3dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b3e0:	b	1b7b8 <__assert_fail@plt+0xa084>
   1b3e4:	b	1b3e8 <__assert_fail@plt+0x9cb4>
   1b3e8:	ldr	r0, [fp, #8]
   1b3ec:	cmp	r0, #0
   1b3f0:	bge	1b504 <__assert_fail@plt+0x9dd0>
   1b3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3f8:	cmp	r0, #0
   1b3fc:	bge	1b488 <__assert_fail@plt+0x9d54>
   1b400:	b	1b404 <__assert_fail@plt+0x9cd0>
   1b404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b408:	ldr	r1, [fp, #8]
   1b40c:	movw	r2, #127	; 0x7f
   1b410:	sdiv	r1, r2, r1
   1b414:	cmp	r0, r1
   1b418:	blt	1b5a4 <__assert_fail@plt+0x9e70>
   1b41c:	b	1b5bc <__assert_fail@plt+0x9e88>
   1b420:	b	1b424 <__assert_fail@plt+0x9cf0>
   1b424:	ldr	r0, [pc, #4076]	; 1c418 <__assert_fail@plt+0xace4>
   1b428:	ldr	r1, [fp, #8]
   1b42c:	cmp	r1, r0
   1b430:	blt	1b448 <__assert_fail@plt+0x9d14>
   1b434:	b	1b454 <__assert_fail@plt+0x9d20>
   1b438:	ldr	r0, [fp, #8]
   1b43c:	movw	r1, #0
   1b440:	cmp	r1, r0
   1b444:	bge	1b454 <__assert_fail@plt+0x9d20>
   1b448:	movw	r0, #0
   1b44c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b450:	b	1b46c <__assert_fail@plt+0x9d38>
   1b454:	ldr	r0, [fp, #8]
   1b458:	movw	r1, #0
   1b45c:	sub	r0, r1, r0
   1b460:	movw	r1, #127	; 0x7f
   1b464:	sdiv	r0, r1, r0
   1b468:	str	r0, [fp, #-40]	; 0xffffffd8
   1b46c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b470:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b474:	mvn	r2, #0
   1b478:	sub	r1, r2, r1
   1b47c:	cmp	r0, r1
   1b480:	ble	1b5a4 <__assert_fail@plt+0x9e70>
   1b484:	b	1b5bc <__assert_fail@plt+0x9e88>
   1b488:	b	1b48c <__assert_fail@plt+0x9d58>
   1b48c:	b	1b4e8 <__assert_fail@plt+0x9db4>
   1b490:	b	1b4e8 <__assert_fail@plt+0x9db4>
   1b494:	ldr	r0, [fp, #8]
   1b498:	cmn	r0, #1
   1b49c:	bne	1b4e8 <__assert_fail@plt+0x9db4>
   1b4a0:	b	1b4a4 <__assert_fail@plt+0x9d70>
   1b4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4a8:	mvn	r1, #127	; 0x7f
   1b4ac:	add	r0, r0, r1
   1b4b0:	movw	r1, #0
   1b4b4:	cmp	r1, r0
   1b4b8:	blt	1b5a4 <__assert_fail@plt+0x9e70>
   1b4bc:	b	1b5bc <__assert_fail@plt+0x9e88>
   1b4c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4c4:	movw	r1, #0
   1b4c8:	cmp	r1, r0
   1b4cc:	bge	1b5bc <__assert_fail@plt+0x9e88>
   1b4d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4d4:	sub	r0, r0, #1
   1b4d8:	movw	r1, #127	; 0x7f
   1b4dc:	cmp	r1, r0
   1b4e0:	blt	1b5a4 <__assert_fail@plt+0x9e70>
   1b4e4:	b	1b5bc <__assert_fail@plt+0x9e88>
   1b4e8:	ldr	r0, [fp, #8]
   1b4ec:	mvn	r1, #127	; 0x7f
   1b4f0:	sdiv	r0, r1, r0
   1b4f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b4f8:	cmp	r0, r1
   1b4fc:	blt	1b5a4 <__assert_fail@plt+0x9e70>
   1b500:	b	1b5bc <__assert_fail@plt+0x9e88>
   1b504:	ldr	r0, [fp, #8]
   1b508:	cmp	r0, #0
   1b50c:	bne	1b514 <__assert_fail@plt+0x9de0>
   1b510:	b	1b5bc <__assert_fail@plt+0x9e88>
   1b514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b518:	cmp	r0, #0
   1b51c:	bge	1b58c <__assert_fail@plt+0x9e58>
   1b520:	b	1b524 <__assert_fail@plt+0x9df0>
   1b524:	b	1b570 <__assert_fail@plt+0x9e3c>
   1b528:	b	1b570 <__assert_fail@plt+0x9e3c>
   1b52c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b530:	cmn	r0, #1
   1b534:	bne	1b570 <__assert_fail@plt+0x9e3c>
   1b538:	b	1b53c <__assert_fail@plt+0x9e08>
   1b53c:	ldr	r0, [fp, #8]
   1b540:	mvn	r1, #127	; 0x7f
   1b544:	add	r0, r0, r1
   1b548:	movw	r1, #0
   1b54c:	cmp	r1, r0
   1b550:	blt	1b5a4 <__assert_fail@plt+0x9e70>
   1b554:	b	1b5bc <__assert_fail@plt+0x9e88>
   1b558:	ldr	r0, [fp, #8]
   1b55c:	sub	r0, r0, #1
   1b560:	movw	r1, #127	; 0x7f
   1b564:	cmp	r1, r0
   1b568:	blt	1b5a4 <__assert_fail@plt+0x9e70>
   1b56c:	b	1b5bc <__assert_fail@plt+0x9e88>
   1b570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b574:	mvn	r1, #127	; 0x7f
   1b578:	sdiv	r0, r1, r0
   1b57c:	ldr	r1, [fp, #8]
   1b580:	cmp	r0, r1
   1b584:	blt	1b5a4 <__assert_fail@plt+0x9e70>
   1b588:	b	1b5bc <__assert_fail@plt+0x9e88>
   1b58c:	ldr	r0, [fp, #8]
   1b590:	movw	r1, #127	; 0x7f
   1b594:	sdiv	r0, r1, r0
   1b598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b59c:	cmp	r0, r1
   1b5a0:	bge	1b5bc <__assert_fail@plt+0x9e88>
   1b5a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b5a8:	ldr	r1, [fp, #8]
   1b5ac:	mul	r0, r0, r1
   1b5b0:	sxtb	r0, r0
   1b5b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1b5b8:	b	1c7d0 <__assert_fail@plt+0xb09c>
   1b5bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b5c0:	ldr	r1, [fp, #8]
   1b5c4:	mul	r0, r0, r1
   1b5c8:	sxtb	r0, r0
   1b5cc:	str	r0, [fp, #-28]	; 0xffffffe4
   1b5d0:	b	1c7e0 <__assert_fail@plt+0xb0ac>
   1b5d4:	ldr	r0, [fp, #8]
   1b5d8:	cmp	r0, #0
   1b5dc:	bge	1b6ec <__assert_fail@plt+0x9fb8>
   1b5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b5e4:	cmp	r0, #0
   1b5e8:	bge	1b674 <__assert_fail@plt+0x9f40>
   1b5ec:	b	1b5f0 <__assert_fail@plt+0x9ebc>
   1b5f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b5f4:	ldr	r1, [fp, #8]
   1b5f8:	movw	r2, #255	; 0xff
   1b5fc:	sdiv	r1, r2, r1
   1b600:	cmp	r0, r1
   1b604:	blt	1b788 <__assert_fail@plt+0xa054>
   1b608:	b	1b7a0 <__assert_fail@plt+0xa06c>
   1b60c:	b	1b610 <__assert_fail@plt+0x9edc>
   1b610:	ldr	r0, [pc, #3584]	; 1c418 <__assert_fail@plt+0xace4>
   1b614:	ldr	r1, [fp, #8]
   1b618:	cmp	r1, r0
   1b61c:	blt	1b634 <__assert_fail@plt+0x9f00>
   1b620:	b	1b640 <__assert_fail@plt+0x9f0c>
   1b624:	ldr	r0, [fp, #8]
   1b628:	movw	r1, #0
   1b62c:	cmp	r1, r0
   1b630:	bge	1b640 <__assert_fail@plt+0x9f0c>
   1b634:	movw	r0, #0
   1b638:	str	r0, [fp, #-44]	; 0xffffffd4
   1b63c:	b	1b658 <__assert_fail@plt+0x9f24>
   1b640:	ldr	r0, [fp, #8]
   1b644:	movw	r1, #0
   1b648:	sub	r0, r1, r0
   1b64c:	movw	r1, #255	; 0xff
   1b650:	sdiv	r0, r1, r0
   1b654:	str	r0, [fp, #-44]	; 0xffffffd4
   1b658:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b65c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b660:	mvn	r2, #0
   1b664:	sub	r1, r2, r1
   1b668:	cmp	r0, r1
   1b66c:	ble	1b788 <__assert_fail@plt+0xa054>
   1b670:	b	1b7a0 <__assert_fail@plt+0xa06c>
   1b674:	b	1b678 <__assert_fail@plt+0x9f44>
   1b678:	b	1b6d0 <__assert_fail@plt+0x9f9c>
   1b67c:	b	1b6d0 <__assert_fail@plt+0x9f9c>
   1b680:	ldr	r0, [fp, #8]
   1b684:	cmn	r0, #1
   1b688:	bne	1b6d0 <__assert_fail@plt+0x9f9c>
   1b68c:	b	1b690 <__assert_fail@plt+0x9f5c>
   1b690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b694:	add	r0, r0, #0
   1b698:	movw	r1, #0
   1b69c:	cmp	r1, r0
   1b6a0:	blt	1b788 <__assert_fail@plt+0xa054>
   1b6a4:	b	1b7a0 <__assert_fail@plt+0xa06c>
   1b6a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b6ac:	movw	r1, #0
   1b6b0:	cmp	r1, r0
   1b6b4:	bge	1b7a0 <__assert_fail@plt+0xa06c>
   1b6b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b6bc:	sub	r0, r0, #1
   1b6c0:	mvn	r1, #0
   1b6c4:	cmp	r1, r0
   1b6c8:	blt	1b788 <__assert_fail@plt+0xa054>
   1b6cc:	b	1b7a0 <__assert_fail@plt+0xa06c>
   1b6d0:	ldr	r0, [fp, #8]
   1b6d4:	movw	r1, #0
   1b6d8:	sdiv	r0, r1, r0
   1b6dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b6e0:	cmp	r0, r1
   1b6e4:	blt	1b788 <__assert_fail@plt+0xa054>
   1b6e8:	b	1b7a0 <__assert_fail@plt+0xa06c>
   1b6ec:	ldr	r0, [fp, #8]
   1b6f0:	cmp	r0, #0
   1b6f4:	bne	1b6fc <__assert_fail@plt+0x9fc8>
   1b6f8:	b	1b7a0 <__assert_fail@plt+0xa06c>
   1b6fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b700:	cmp	r0, #0
   1b704:	bge	1b770 <__assert_fail@plt+0xa03c>
   1b708:	b	1b70c <__assert_fail@plt+0x9fd8>
   1b70c:	b	1b754 <__assert_fail@plt+0xa020>
   1b710:	b	1b754 <__assert_fail@plt+0xa020>
   1b714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b718:	cmn	r0, #1
   1b71c:	bne	1b754 <__assert_fail@plt+0xa020>
   1b720:	b	1b724 <__assert_fail@plt+0x9ff0>
   1b724:	ldr	r0, [fp, #8]
   1b728:	add	r0, r0, #0
   1b72c:	movw	r1, #0
   1b730:	cmp	r1, r0
   1b734:	blt	1b788 <__assert_fail@plt+0xa054>
   1b738:	b	1b7a0 <__assert_fail@plt+0xa06c>
   1b73c:	ldr	r0, [fp, #8]
   1b740:	sub	r0, r0, #1
   1b744:	mvn	r1, #0
   1b748:	cmp	r1, r0
   1b74c:	blt	1b788 <__assert_fail@plt+0xa054>
   1b750:	b	1b7a0 <__assert_fail@plt+0xa06c>
   1b754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b758:	movw	r1, #0
   1b75c:	sdiv	r0, r1, r0
   1b760:	ldr	r1, [fp, #8]
   1b764:	cmp	r0, r1
   1b768:	blt	1b788 <__assert_fail@plt+0xa054>
   1b76c:	b	1b7a0 <__assert_fail@plt+0xa06c>
   1b770:	ldr	r0, [fp, #8]
   1b774:	movw	r1, #255	; 0xff
   1b778:	sdiv	r0, r1, r0
   1b77c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b780:	cmp	r0, r1
   1b784:	bge	1b7a0 <__assert_fail@plt+0xa06c>
   1b788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b78c:	ldr	r1, [fp, #8]
   1b790:	mul	r0, r0, r1
   1b794:	and	r0, r0, #255	; 0xff
   1b798:	str	r0, [fp, #-28]	; 0xffffffe4
   1b79c:	b	1c7d0 <__assert_fail@plt+0xb09c>
   1b7a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b7a4:	ldr	r1, [fp, #8]
   1b7a8:	mul	r0, r0, r1
   1b7ac:	and	r0, r0, #255	; 0xff
   1b7b0:	str	r0, [fp, #-28]	; 0xffffffe4
   1b7b4:	b	1c7e0 <__assert_fail@plt+0xb0ac>
   1b7b8:	b	1bb90 <__assert_fail@plt+0xa45c>
   1b7bc:	b	1b7c0 <__assert_fail@plt+0xa08c>
   1b7c0:	ldr	r0, [fp, #8]
   1b7c4:	cmp	r0, #0
   1b7c8:	bge	1b8dc <__assert_fail@plt+0xa1a8>
   1b7cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b7d0:	cmp	r0, #0
   1b7d4:	bge	1b860 <__assert_fail@plt+0xa12c>
   1b7d8:	b	1b7dc <__assert_fail@plt+0xa0a8>
   1b7dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b7e0:	ldr	r1, [fp, #8]
   1b7e4:	movw	r2, #32767	; 0x7fff
   1b7e8:	sdiv	r1, r2, r1
   1b7ec:	cmp	r0, r1
   1b7f0:	blt	1b97c <__assert_fail@plt+0xa248>
   1b7f4:	b	1b994 <__assert_fail@plt+0xa260>
   1b7f8:	b	1b7fc <__assert_fail@plt+0xa0c8>
   1b7fc:	ldr	r0, [pc, #3092]	; 1c418 <__assert_fail@plt+0xace4>
   1b800:	ldr	r1, [fp, #8]
   1b804:	cmp	r1, r0
   1b808:	blt	1b820 <__assert_fail@plt+0xa0ec>
   1b80c:	b	1b82c <__assert_fail@plt+0xa0f8>
   1b810:	ldr	r0, [fp, #8]
   1b814:	movw	r1, #0
   1b818:	cmp	r1, r0
   1b81c:	bge	1b82c <__assert_fail@plt+0xa0f8>
   1b820:	movw	r0, #0
   1b824:	str	r0, [fp, #-48]	; 0xffffffd0
   1b828:	b	1b844 <__assert_fail@plt+0xa110>
   1b82c:	ldr	r0, [fp, #8]
   1b830:	movw	r1, #0
   1b834:	sub	r0, r1, r0
   1b838:	movw	r1, #32767	; 0x7fff
   1b83c:	sdiv	r0, r1, r0
   1b840:	str	r0, [fp, #-48]	; 0xffffffd0
   1b844:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b84c:	mvn	r2, #0
   1b850:	sub	r1, r2, r1
   1b854:	cmp	r0, r1
   1b858:	ble	1b97c <__assert_fail@plt+0xa248>
   1b85c:	b	1b994 <__assert_fail@plt+0xa260>
   1b860:	b	1b864 <__assert_fail@plt+0xa130>
   1b864:	b	1b8c0 <__assert_fail@plt+0xa18c>
   1b868:	b	1b8c0 <__assert_fail@plt+0xa18c>
   1b86c:	ldr	r0, [fp, #8]
   1b870:	cmn	r0, #1
   1b874:	bne	1b8c0 <__assert_fail@plt+0xa18c>
   1b878:	b	1b87c <__assert_fail@plt+0xa148>
   1b87c:	ldr	r0, [pc, #3928]	; 1c7dc <__assert_fail@plt+0xb0a8>
   1b880:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b884:	add	r0, r1, r0
   1b888:	movw	r1, #0
   1b88c:	cmp	r1, r0
   1b890:	blt	1b97c <__assert_fail@plt+0xa248>
   1b894:	b	1b994 <__assert_fail@plt+0xa260>
   1b898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b89c:	movw	r1, #0
   1b8a0:	cmp	r1, r0
   1b8a4:	bge	1b994 <__assert_fail@plt+0xa260>
   1b8a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8ac:	sub	r0, r0, #1
   1b8b0:	movw	r1, #32767	; 0x7fff
   1b8b4:	cmp	r1, r0
   1b8b8:	blt	1b97c <__assert_fail@plt+0xa248>
   1b8bc:	b	1b994 <__assert_fail@plt+0xa260>
   1b8c0:	ldr	r0, [pc, #3860]	; 1c7dc <__assert_fail@plt+0xb0a8>
   1b8c4:	ldr	r1, [fp, #8]
   1b8c8:	sdiv	r0, r0, r1
   1b8cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b8d0:	cmp	r0, r1
   1b8d4:	blt	1b97c <__assert_fail@plt+0xa248>
   1b8d8:	b	1b994 <__assert_fail@plt+0xa260>
   1b8dc:	ldr	r0, [fp, #8]
   1b8e0:	cmp	r0, #0
   1b8e4:	bne	1b8ec <__assert_fail@plt+0xa1b8>
   1b8e8:	b	1b994 <__assert_fail@plt+0xa260>
   1b8ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8f0:	cmp	r0, #0
   1b8f4:	bge	1b964 <__assert_fail@plt+0xa230>
   1b8f8:	b	1b8fc <__assert_fail@plt+0xa1c8>
   1b8fc:	b	1b948 <__assert_fail@plt+0xa214>
   1b900:	b	1b948 <__assert_fail@plt+0xa214>
   1b904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b908:	cmn	r0, #1
   1b90c:	bne	1b948 <__assert_fail@plt+0xa214>
   1b910:	b	1b914 <__assert_fail@plt+0xa1e0>
   1b914:	ldr	r0, [pc, #3776]	; 1c7dc <__assert_fail@plt+0xb0a8>
   1b918:	ldr	r1, [fp, #8]
   1b91c:	add	r0, r1, r0
   1b920:	movw	r1, #0
   1b924:	cmp	r1, r0
   1b928:	blt	1b97c <__assert_fail@plt+0xa248>
   1b92c:	b	1b994 <__assert_fail@plt+0xa260>
   1b930:	ldr	r0, [fp, #8]
   1b934:	sub	r0, r0, #1
   1b938:	movw	r1, #32767	; 0x7fff
   1b93c:	cmp	r1, r0
   1b940:	blt	1b97c <__assert_fail@plt+0xa248>
   1b944:	b	1b994 <__assert_fail@plt+0xa260>
   1b948:	ldr	r0, [pc, #3724]	; 1c7dc <__assert_fail@plt+0xb0a8>
   1b94c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b950:	sdiv	r0, r0, r1
   1b954:	ldr	r1, [fp, #8]
   1b958:	cmp	r0, r1
   1b95c:	blt	1b97c <__assert_fail@plt+0xa248>
   1b960:	b	1b994 <__assert_fail@plt+0xa260>
   1b964:	ldr	r0, [fp, #8]
   1b968:	movw	r1, #32767	; 0x7fff
   1b96c:	sdiv	r0, r1, r0
   1b970:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b974:	cmp	r0, r1
   1b978:	bge	1b994 <__assert_fail@plt+0xa260>
   1b97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b980:	ldr	r1, [fp, #8]
   1b984:	mul	r0, r0, r1
   1b988:	sxth	r0, r0
   1b98c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b990:	b	1c7d0 <__assert_fail@plt+0xb09c>
   1b994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b998:	ldr	r1, [fp, #8]
   1b99c:	mul	r0, r0, r1
   1b9a0:	sxth	r0, r0
   1b9a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1b9a8:	b	1c7e0 <__assert_fail@plt+0xb0ac>
   1b9ac:	ldr	r0, [fp, #8]
   1b9b0:	cmp	r0, #0
   1b9b4:	bge	1bac4 <__assert_fail@plt+0xa390>
   1b9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9bc:	cmp	r0, #0
   1b9c0:	bge	1ba4c <__assert_fail@plt+0xa318>
   1b9c4:	b	1b9c8 <__assert_fail@plt+0xa294>
   1b9c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9cc:	ldr	r1, [fp, #8]
   1b9d0:	movw	r2, #65535	; 0xffff
   1b9d4:	sdiv	r1, r2, r1
   1b9d8:	cmp	r0, r1
   1b9dc:	blt	1bb60 <__assert_fail@plt+0xa42c>
   1b9e0:	b	1bb78 <__assert_fail@plt+0xa444>
   1b9e4:	b	1b9e8 <__assert_fail@plt+0xa2b4>
   1b9e8:	ldr	r0, [pc, #2600]	; 1c418 <__assert_fail@plt+0xace4>
   1b9ec:	ldr	r1, [fp, #8]
   1b9f0:	cmp	r1, r0
   1b9f4:	blt	1ba0c <__assert_fail@plt+0xa2d8>
   1b9f8:	b	1ba18 <__assert_fail@plt+0xa2e4>
   1b9fc:	ldr	r0, [fp, #8]
   1ba00:	movw	r1, #0
   1ba04:	cmp	r1, r0
   1ba08:	bge	1ba18 <__assert_fail@plt+0xa2e4>
   1ba0c:	movw	r0, #0
   1ba10:	str	r0, [fp, #-52]	; 0xffffffcc
   1ba14:	b	1ba30 <__assert_fail@plt+0xa2fc>
   1ba18:	ldr	r0, [fp, #8]
   1ba1c:	movw	r1, #0
   1ba20:	sub	r0, r1, r0
   1ba24:	movw	r1, #65535	; 0xffff
   1ba28:	sdiv	r0, r1, r0
   1ba2c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ba30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ba34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ba38:	mvn	r2, #0
   1ba3c:	sub	r1, r2, r1
   1ba40:	cmp	r0, r1
   1ba44:	ble	1bb60 <__assert_fail@plt+0xa42c>
   1ba48:	b	1bb78 <__assert_fail@plt+0xa444>
   1ba4c:	b	1ba50 <__assert_fail@plt+0xa31c>
   1ba50:	b	1baa8 <__assert_fail@plt+0xa374>
   1ba54:	b	1baa8 <__assert_fail@plt+0xa374>
   1ba58:	ldr	r0, [fp, #8]
   1ba5c:	cmn	r0, #1
   1ba60:	bne	1baa8 <__assert_fail@plt+0xa374>
   1ba64:	b	1ba68 <__assert_fail@plt+0xa334>
   1ba68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba6c:	add	r0, r0, #0
   1ba70:	movw	r1, #0
   1ba74:	cmp	r1, r0
   1ba78:	blt	1bb60 <__assert_fail@plt+0xa42c>
   1ba7c:	b	1bb78 <__assert_fail@plt+0xa444>
   1ba80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba84:	movw	r1, #0
   1ba88:	cmp	r1, r0
   1ba8c:	bge	1bb78 <__assert_fail@plt+0xa444>
   1ba90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba94:	sub	r0, r0, #1
   1ba98:	mvn	r1, #0
   1ba9c:	cmp	r1, r0
   1baa0:	blt	1bb60 <__assert_fail@plt+0xa42c>
   1baa4:	b	1bb78 <__assert_fail@plt+0xa444>
   1baa8:	ldr	r0, [fp, #8]
   1baac:	movw	r1, #0
   1bab0:	sdiv	r0, r1, r0
   1bab4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bab8:	cmp	r0, r1
   1babc:	blt	1bb60 <__assert_fail@plt+0xa42c>
   1bac0:	b	1bb78 <__assert_fail@plt+0xa444>
   1bac4:	ldr	r0, [fp, #8]
   1bac8:	cmp	r0, #0
   1bacc:	bne	1bad4 <__assert_fail@plt+0xa3a0>
   1bad0:	b	1bb78 <__assert_fail@plt+0xa444>
   1bad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bad8:	cmp	r0, #0
   1badc:	bge	1bb48 <__assert_fail@plt+0xa414>
   1bae0:	b	1bae4 <__assert_fail@plt+0xa3b0>
   1bae4:	b	1bb2c <__assert_fail@plt+0xa3f8>
   1bae8:	b	1bb2c <__assert_fail@plt+0xa3f8>
   1baec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1baf0:	cmn	r0, #1
   1baf4:	bne	1bb2c <__assert_fail@plt+0xa3f8>
   1baf8:	b	1bafc <__assert_fail@plt+0xa3c8>
   1bafc:	ldr	r0, [fp, #8]
   1bb00:	add	r0, r0, #0
   1bb04:	movw	r1, #0
   1bb08:	cmp	r1, r0
   1bb0c:	blt	1bb60 <__assert_fail@plt+0xa42c>
   1bb10:	b	1bb78 <__assert_fail@plt+0xa444>
   1bb14:	ldr	r0, [fp, #8]
   1bb18:	sub	r0, r0, #1
   1bb1c:	mvn	r1, #0
   1bb20:	cmp	r1, r0
   1bb24:	blt	1bb60 <__assert_fail@plt+0xa42c>
   1bb28:	b	1bb78 <__assert_fail@plt+0xa444>
   1bb2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb30:	movw	r1, #0
   1bb34:	sdiv	r0, r1, r0
   1bb38:	ldr	r1, [fp, #8]
   1bb3c:	cmp	r0, r1
   1bb40:	blt	1bb60 <__assert_fail@plt+0xa42c>
   1bb44:	b	1bb78 <__assert_fail@plt+0xa444>
   1bb48:	ldr	r0, [fp, #8]
   1bb4c:	movw	r1, #65535	; 0xffff
   1bb50:	sdiv	r0, r1, r0
   1bb54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bb58:	cmp	r0, r1
   1bb5c:	bge	1bb78 <__assert_fail@plt+0xa444>
   1bb60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb64:	ldr	r1, [fp, #8]
   1bb68:	mul	r0, r0, r1
   1bb6c:	uxth	r0, r0
   1bb70:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb74:	b	1c7d0 <__assert_fail@plt+0xb09c>
   1bb78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb7c:	ldr	r1, [fp, #8]
   1bb80:	mul	r0, r0, r1
   1bb84:	uxth	r0, r0
   1bb88:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb8c:	b	1c7e0 <__assert_fail@plt+0xb0ac>
   1bb90:	b	1bb94 <__assert_fail@plt+0xa460>
   1bb94:	b	1bb98 <__assert_fail@plt+0xa464>
   1bb98:	ldr	r0, [fp, #8]
   1bb9c:	cmp	r0, #0
   1bba0:	bge	1bca4 <__assert_fail@plt+0xa570>
   1bba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bba8:	cmp	r0, #0
   1bbac:	bge	1bc38 <__assert_fail@plt+0xa504>
   1bbb0:	b	1bbb4 <__assert_fail@plt+0xa480>
   1bbb4:	ldr	r0, [pc, #1992]	; 1c384 <__assert_fail@plt+0xac50>
   1bbb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bbbc:	ldr	r2, [fp, #8]
   1bbc0:	sdiv	r0, r0, r2
   1bbc4:	cmp	r1, r0
   1bbc8:	blt	1bd34 <__assert_fail@plt+0xa600>
   1bbcc:	b	1bd48 <__assert_fail@plt+0xa614>
   1bbd0:	b	1bbd4 <__assert_fail@plt+0xa4a0>
   1bbd4:	ldr	r0, [pc, #2108]	; 1c418 <__assert_fail@plt+0xace4>
   1bbd8:	ldr	r1, [fp, #8]
   1bbdc:	cmp	r1, r0
   1bbe0:	blt	1bbf8 <__assert_fail@plt+0xa4c4>
   1bbe4:	b	1bc04 <__assert_fail@plt+0xa4d0>
   1bbe8:	ldr	r0, [fp, #8]
   1bbec:	movw	r1, #0
   1bbf0:	cmp	r1, r0
   1bbf4:	bge	1bc04 <__assert_fail@plt+0xa4d0>
   1bbf8:	movw	r0, #0
   1bbfc:	str	r0, [fp, #-56]	; 0xffffffc8
   1bc00:	b	1bc1c <__assert_fail@plt+0xa4e8>
   1bc04:	ldr	r0, [pc, #1912]	; 1c384 <__assert_fail@plt+0xac50>
   1bc08:	ldr	r1, [fp, #8]
   1bc0c:	movw	r2, #0
   1bc10:	sub	r1, r2, r1
   1bc14:	sdiv	r0, r0, r1
   1bc18:	str	r0, [fp, #-56]	; 0xffffffc8
   1bc1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bc20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bc24:	mvn	r2, #0
   1bc28:	sub	r1, r2, r1
   1bc2c:	cmp	r0, r1
   1bc30:	ble	1bd34 <__assert_fail@plt+0xa600>
   1bc34:	b	1bd48 <__assert_fail@plt+0xa614>
   1bc38:	ldr	r0, [fp, #8]
   1bc3c:	cmn	r0, #1
   1bc40:	bne	1bc88 <__assert_fail@plt+0xa554>
   1bc44:	b	1bc48 <__assert_fail@plt+0xa514>
   1bc48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc4c:	add	r0, r0, #-2147483648	; 0x80000000
   1bc50:	movw	r1, #0
   1bc54:	cmp	r1, r0
   1bc58:	blt	1bd34 <__assert_fail@plt+0xa600>
   1bc5c:	b	1bd48 <__assert_fail@plt+0xa614>
   1bc60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc64:	movw	r1, #0
   1bc68:	cmp	r1, r0
   1bc6c:	bge	1bd48 <__assert_fail@plt+0xa614>
   1bc70:	ldr	r0, [pc, #1804]	; 1c384 <__assert_fail@plt+0xac50>
   1bc74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bc78:	sub	r1, r1, #1
   1bc7c:	cmp	r0, r1
   1bc80:	blt	1bd34 <__assert_fail@plt+0xa600>
   1bc84:	b	1bd48 <__assert_fail@plt+0xa614>
   1bc88:	ldr	r0, [pc, #4072]	; 1cc78 <__assert_fail@plt+0xb544>
   1bc8c:	ldr	r1, [fp, #8]
   1bc90:	sdiv	r0, r0, r1
   1bc94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bc98:	cmp	r0, r1
   1bc9c:	blt	1bd34 <__assert_fail@plt+0xa600>
   1bca0:	b	1bd48 <__assert_fail@plt+0xa614>
   1bca4:	ldr	r0, [fp, #8]
   1bca8:	cmp	r0, #0
   1bcac:	bne	1bcb4 <__assert_fail@plt+0xa580>
   1bcb0:	b	1bd48 <__assert_fail@plt+0xa614>
   1bcb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bcb8:	cmp	r0, #0
   1bcbc:	bge	1bd1c <__assert_fail@plt+0xa5e8>
   1bcc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bcc4:	cmn	r0, #1
   1bcc8:	bne	1bd00 <__assert_fail@plt+0xa5cc>
   1bccc:	b	1bcd0 <__assert_fail@plt+0xa59c>
   1bcd0:	ldr	r0, [fp, #8]
   1bcd4:	add	r0, r0, #-2147483648	; 0x80000000
   1bcd8:	movw	r1, #0
   1bcdc:	cmp	r1, r0
   1bce0:	blt	1bd34 <__assert_fail@plt+0xa600>
   1bce4:	b	1bd48 <__assert_fail@plt+0xa614>
   1bce8:	ldr	r0, [pc, #1684]	; 1c384 <__assert_fail@plt+0xac50>
   1bcec:	ldr	r1, [fp, #8]
   1bcf0:	sub	r1, r1, #1
   1bcf4:	cmp	r0, r1
   1bcf8:	blt	1bd34 <__assert_fail@plt+0xa600>
   1bcfc:	b	1bd48 <__assert_fail@plt+0xa614>
   1bd00:	ldr	r0, [pc, #3952]	; 1cc78 <__assert_fail@plt+0xb544>
   1bd04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd08:	sdiv	r0, r0, r1
   1bd0c:	ldr	r1, [fp, #8]
   1bd10:	cmp	r0, r1
   1bd14:	blt	1bd34 <__assert_fail@plt+0xa600>
   1bd18:	b	1bd48 <__assert_fail@plt+0xa614>
   1bd1c:	ldr	r0, [pc, #1632]	; 1c384 <__assert_fail@plt+0xac50>
   1bd20:	ldr	r1, [fp, #8]
   1bd24:	sdiv	r0, r0, r1
   1bd28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd2c:	cmp	r0, r1
   1bd30:	bge	1bd48 <__assert_fail@plt+0xa614>
   1bd34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd38:	ldr	r1, [fp, #8]
   1bd3c:	mul	r0, r0, r1
   1bd40:	str	r0, [fp, #-28]	; 0xffffffe4
   1bd44:	b	1c7d0 <__assert_fail@plt+0xb09c>
   1bd48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd4c:	ldr	r1, [fp, #8]
   1bd50:	mul	r0, r0, r1
   1bd54:	str	r0, [fp, #-28]	; 0xffffffe4
   1bd58:	b	1c7e0 <__assert_fail@plt+0xb0ac>
   1bd5c:	ldr	r0, [fp, #8]
   1bd60:	cmp	r0, #0
   1bd64:	bge	1be74 <__assert_fail@plt+0xa740>
   1bd68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd6c:	cmp	r0, #0
   1bd70:	bge	1bdfc <__assert_fail@plt+0xa6c8>
   1bd74:	b	1bd94 <__assert_fail@plt+0xa660>
   1bd78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd7c:	ldr	r1, [fp, #8]
   1bd80:	mvn	r2, #0
   1bd84:	udiv	r1, r2, r1
   1bd88:	cmp	r0, r1
   1bd8c:	bcc	1bf10 <__assert_fail@plt+0xa7dc>
   1bd90:	b	1bf24 <__assert_fail@plt+0xa7f0>
   1bd94:	b	1bd98 <__assert_fail@plt+0xa664>
   1bd98:	ldr	r0, [pc, #1656]	; 1c418 <__assert_fail@plt+0xace4>
   1bd9c:	ldr	r1, [fp, #8]
   1bda0:	cmp	r1, r0
   1bda4:	blt	1bdbc <__assert_fail@plt+0xa688>
   1bda8:	b	1bdc8 <__assert_fail@plt+0xa694>
   1bdac:	ldr	r0, [fp, #8]
   1bdb0:	movw	r1, #0
   1bdb4:	cmp	r1, r0
   1bdb8:	bge	1bdc8 <__assert_fail@plt+0xa694>
   1bdbc:	movw	r0, #1
   1bdc0:	str	r0, [fp, #-60]	; 0xffffffc4
   1bdc4:	b	1bde0 <__assert_fail@plt+0xa6ac>
   1bdc8:	ldr	r0, [fp, #8]
   1bdcc:	movw	r1, #0
   1bdd0:	sub	r0, r1, r0
   1bdd4:	mvn	r1, #0
   1bdd8:	udiv	r0, r1, r0
   1bddc:	str	r0, [fp, #-60]	; 0xffffffc4
   1bde0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1bde4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bde8:	mvn	r2, #0
   1bdec:	sub	r1, r2, r1
   1bdf0:	cmp	r0, r1
   1bdf4:	bls	1bf10 <__assert_fail@plt+0xa7dc>
   1bdf8:	b	1bf24 <__assert_fail@plt+0xa7f0>
   1bdfc:	b	1be00 <__assert_fail@plt+0xa6cc>
   1be00:	b	1be58 <__assert_fail@plt+0xa724>
   1be04:	b	1be58 <__assert_fail@plt+0xa724>
   1be08:	ldr	r0, [fp, #8]
   1be0c:	cmn	r0, #1
   1be10:	bne	1be58 <__assert_fail@plt+0xa724>
   1be14:	b	1be18 <__assert_fail@plt+0xa6e4>
   1be18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be1c:	add	r0, r0, #0
   1be20:	movw	r1, #0
   1be24:	cmp	r1, r0
   1be28:	blt	1bf10 <__assert_fail@plt+0xa7dc>
   1be2c:	b	1bf24 <__assert_fail@plt+0xa7f0>
   1be30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be34:	movw	r1, #0
   1be38:	cmp	r1, r0
   1be3c:	bge	1bf24 <__assert_fail@plt+0xa7f0>
   1be40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be44:	sub	r0, r0, #1
   1be48:	mvn	r1, #0
   1be4c:	cmp	r1, r0
   1be50:	blt	1bf10 <__assert_fail@plt+0xa7dc>
   1be54:	b	1bf24 <__assert_fail@plt+0xa7f0>
   1be58:	ldr	r0, [fp, #8]
   1be5c:	movw	r1, #0
   1be60:	sdiv	r0, r1, r0
   1be64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1be68:	cmp	r0, r1
   1be6c:	blt	1bf10 <__assert_fail@plt+0xa7dc>
   1be70:	b	1bf24 <__assert_fail@plt+0xa7f0>
   1be74:	ldr	r0, [fp, #8]
   1be78:	cmp	r0, #0
   1be7c:	bne	1be84 <__assert_fail@plt+0xa750>
   1be80:	b	1bf24 <__assert_fail@plt+0xa7f0>
   1be84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be88:	cmp	r0, #0
   1be8c:	bge	1bef8 <__assert_fail@plt+0xa7c4>
   1be90:	b	1be94 <__assert_fail@plt+0xa760>
   1be94:	b	1bedc <__assert_fail@plt+0xa7a8>
   1be98:	b	1bedc <__assert_fail@plt+0xa7a8>
   1be9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bea0:	cmn	r0, #1
   1bea4:	bne	1bedc <__assert_fail@plt+0xa7a8>
   1bea8:	b	1beac <__assert_fail@plt+0xa778>
   1beac:	ldr	r0, [fp, #8]
   1beb0:	add	r0, r0, #0
   1beb4:	movw	r1, #0
   1beb8:	cmp	r1, r0
   1bebc:	blt	1bf10 <__assert_fail@plt+0xa7dc>
   1bec0:	b	1bf24 <__assert_fail@plt+0xa7f0>
   1bec4:	ldr	r0, [fp, #8]
   1bec8:	sub	r0, r0, #1
   1becc:	mvn	r1, #0
   1bed0:	cmp	r1, r0
   1bed4:	blt	1bf10 <__assert_fail@plt+0xa7dc>
   1bed8:	b	1bf24 <__assert_fail@plt+0xa7f0>
   1bedc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bee0:	movw	r1, #0
   1bee4:	sdiv	r0, r1, r0
   1bee8:	ldr	r1, [fp, #8]
   1beec:	cmp	r0, r1
   1bef0:	blt	1bf10 <__assert_fail@plt+0xa7dc>
   1bef4:	b	1bf24 <__assert_fail@plt+0xa7f0>
   1bef8:	ldr	r0, [fp, #8]
   1befc:	mvn	r1, #0
   1bf00:	udiv	r0, r1, r0
   1bf04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bf08:	cmp	r0, r1
   1bf0c:	bcs	1bf24 <__assert_fail@plt+0xa7f0>
   1bf10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf14:	ldr	r1, [fp, #8]
   1bf18:	mul	r0, r0, r1
   1bf1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bf20:	b	1c7d0 <__assert_fail@plt+0xb09c>
   1bf24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf28:	ldr	r1, [fp, #8]
   1bf2c:	mul	r0, r0, r1
   1bf30:	str	r0, [fp, #-28]	; 0xffffffe4
   1bf34:	b	1c7e0 <__assert_fail@plt+0xb0ac>
   1bf38:	b	1bf3c <__assert_fail@plt+0xa808>
   1bf3c:	b	1bf40 <__assert_fail@plt+0xa80c>
   1bf40:	ldr	r0, [fp, #8]
   1bf44:	cmp	r0, #0
   1bf48:	bge	1c04c <__assert_fail@plt+0xa918>
   1bf4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf50:	cmp	r0, #0
   1bf54:	bge	1bfe0 <__assert_fail@plt+0xa8ac>
   1bf58:	b	1bf5c <__assert_fail@plt+0xa828>
   1bf5c:	ldr	r0, [pc, #1056]	; 1c384 <__assert_fail@plt+0xac50>
   1bf60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bf64:	ldr	r2, [fp, #8]
   1bf68:	sdiv	r0, r0, r2
   1bf6c:	cmp	r1, r0
   1bf70:	blt	1c0dc <__assert_fail@plt+0xa9a8>
   1bf74:	b	1c0f0 <__assert_fail@plt+0xa9bc>
   1bf78:	b	1bf7c <__assert_fail@plt+0xa848>
   1bf7c:	ldr	r0, [pc, #1172]	; 1c418 <__assert_fail@plt+0xace4>
   1bf80:	ldr	r1, [fp, #8]
   1bf84:	cmp	r1, r0
   1bf88:	blt	1bfa0 <__assert_fail@plt+0xa86c>
   1bf8c:	b	1bfac <__assert_fail@plt+0xa878>
   1bf90:	ldr	r0, [fp, #8]
   1bf94:	movw	r1, #0
   1bf98:	cmp	r1, r0
   1bf9c:	bge	1bfac <__assert_fail@plt+0xa878>
   1bfa0:	movw	r0, #0
   1bfa4:	str	r0, [fp, #-64]	; 0xffffffc0
   1bfa8:	b	1bfc4 <__assert_fail@plt+0xa890>
   1bfac:	ldr	r0, [pc, #976]	; 1c384 <__assert_fail@plt+0xac50>
   1bfb0:	ldr	r1, [fp, #8]
   1bfb4:	movw	r2, #0
   1bfb8:	sub	r1, r2, r1
   1bfbc:	sdiv	r0, r0, r1
   1bfc0:	str	r0, [fp, #-64]	; 0xffffffc0
   1bfc4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1bfc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bfcc:	mvn	r2, #0
   1bfd0:	sub	r1, r2, r1
   1bfd4:	cmp	r0, r1
   1bfd8:	ble	1c0dc <__assert_fail@plt+0xa9a8>
   1bfdc:	b	1c0f0 <__assert_fail@plt+0xa9bc>
   1bfe0:	ldr	r0, [fp, #8]
   1bfe4:	cmn	r0, #1
   1bfe8:	bne	1c030 <__assert_fail@plt+0xa8fc>
   1bfec:	b	1bff0 <__assert_fail@plt+0xa8bc>
   1bff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bff4:	add	r0, r0, #-2147483648	; 0x80000000
   1bff8:	movw	r1, #0
   1bffc:	cmp	r1, r0
   1c000:	blt	1c0dc <__assert_fail@plt+0xa9a8>
   1c004:	b	1c0f0 <__assert_fail@plt+0xa9bc>
   1c008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c00c:	movw	r1, #0
   1c010:	cmp	r1, r0
   1c014:	bge	1c0f0 <__assert_fail@plt+0xa9bc>
   1c018:	ldr	r0, [pc, #868]	; 1c384 <__assert_fail@plt+0xac50>
   1c01c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c020:	sub	r1, r1, #1
   1c024:	cmp	r0, r1
   1c028:	blt	1c0dc <__assert_fail@plt+0xa9a8>
   1c02c:	b	1c0f0 <__assert_fail@plt+0xa9bc>
   1c030:	ldr	r0, [pc, #3136]	; 1cc78 <__assert_fail@plt+0xb544>
   1c034:	ldr	r1, [fp, #8]
   1c038:	sdiv	r0, r0, r1
   1c03c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c040:	cmp	r0, r1
   1c044:	blt	1c0dc <__assert_fail@plt+0xa9a8>
   1c048:	b	1c0f0 <__assert_fail@plt+0xa9bc>
   1c04c:	ldr	r0, [fp, #8]
   1c050:	cmp	r0, #0
   1c054:	bne	1c05c <__assert_fail@plt+0xa928>
   1c058:	b	1c0f0 <__assert_fail@plt+0xa9bc>
   1c05c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c060:	cmp	r0, #0
   1c064:	bge	1c0c4 <__assert_fail@plt+0xa990>
   1c068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c06c:	cmn	r0, #1
   1c070:	bne	1c0a8 <__assert_fail@plt+0xa974>
   1c074:	b	1c078 <__assert_fail@plt+0xa944>
   1c078:	ldr	r0, [fp, #8]
   1c07c:	add	r0, r0, #-2147483648	; 0x80000000
   1c080:	movw	r1, #0
   1c084:	cmp	r1, r0
   1c088:	blt	1c0dc <__assert_fail@plt+0xa9a8>
   1c08c:	b	1c0f0 <__assert_fail@plt+0xa9bc>
   1c090:	ldr	r0, [pc, #748]	; 1c384 <__assert_fail@plt+0xac50>
   1c094:	ldr	r1, [fp, #8]
   1c098:	sub	r1, r1, #1
   1c09c:	cmp	r0, r1
   1c0a0:	blt	1c0dc <__assert_fail@plt+0xa9a8>
   1c0a4:	b	1c0f0 <__assert_fail@plt+0xa9bc>
   1c0a8:	ldr	r0, [pc, #3016]	; 1cc78 <__assert_fail@plt+0xb544>
   1c0ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c0b0:	sdiv	r0, r0, r1
   1c0b4:	ldr	r1, [fp, #8]
   1c0b8:	cmp	r0, r1
   1c0bc:	blt	1c0dc <__assert_fail@plt+0xa9a8>
   1c0c0:	b	1c0f0 <__assert_fail@plt+0xa9bc>
   1c0c4:	ldr	r0, [pc, #696]	; 1c384 <__assert_fail@plt+0xac50>
   1c0c8:	ldr	r1, [fp, #8]
   1c0cc:	sdiv	r0, r0, r1
   1c0d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c0d4:	cmp	r0, r1
   1c0d8:	bge	1c0f0 <__assert_fail@plt+0xa9bc>
   1c0dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c0e0:	ldr	r1, [fp, #8]
   1c0e4:	mul	r0, r0, r1
   1c0e8:	str	r0, [fp, #-28]	; 0xffffffe4
   1c0ec:	b	1c7d0 <__assert_fail@plt+0xb09c>
   1c0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c0f4:	ldr	r1, [fp, #8]
   1c0f8:	mul	r0, r0, r1
   1c0fc:	str	r0, [fp, #-28]	; 0xffffffe4
   1c100:	b	1c7e0 <__assert_fail@plt+0xb0ac>
   1c104:	ldr	r0, [fp, #8]
   1c108:	cmp	r0, #0
   1c10c:	bge	1c21c <__assert_fail@plt+0xaae8>
   1c110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c114:	cmp	r0, #0
   1c118:	bge	1c1a4 <__assert_fail@plt+0xaa70>
   1c11c:	b	1c13c <__assert_fail@plt+0xaa08>
   1c120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c124:	ldr	r1, [fp, #8]
   1c128:	mvn	r2, #0
   1c12c:	udiv	r1, r2, r1
   1c130:	cmp	r0, r1
   1c134:	bcc	1c2b8 <__assert_fail@plt+0xab84>
   1c138:	b	1c2cc <__assert_fail@plt+0xab98>
   1c13c:	b	1c140 <__assert_fail@plt+0xaa0c>
   1c140:	ldr	r0, [pc, #720]	; 1c418 <__assert_fail@plt+0xace4>
   1c144:	ldr	r1, [fp, #8]
   1c148:	cmp	r1, r0
   1c14c:	blt	1c164 <__assert_fail@plt+0xaa30>
   1c150:	b	1c170 <__assert_fail@plt+0xaa3c>
   1c154:	ldr	r0, [fp, #8]
   1c158:	movw	r1, #0
   1c15c:	cmp	r1, r0
   1c160:	bge	1c170 <__assert_fail@plt+0xaa3c>
   1c164:	movw	r0, #1
   1c168:	str	r0, [fp, #-68]	; 0xffffffbc
   1c16c:	b	1c188 <__assert_fail@plt+0xaa54>
   1c170:	ldr	r0, [fp, #8]
   1c174:	movw	r1, #0
   1c178:	sub	r0, r1, r0
   1c17c:	mvn	r1, #0
   1c180:	udiv	r0, r1, r0
   1c184:	str	r0, [fp, #-68]	; 0xffffffbc
   1c188:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1c18c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c190:	mvn	r2, #0
   1c194:	sub	r1, r2, r1
   1c198:	cmp	r0, r1
   1c19c:	bls	1c2b8 <__assert_fail@plt+0xab84>
   1c1a0:	b	1c2cc <__assert_fail@plt+0xab98>
   1c1a4:	b	1c1a8 <__assert_fail@plt+0xaa74>
   1c1a8:	b	1c200 <__assert_fail@plt+0xaacc>
   1c1ac:	b	1c200 <__assert_fail@plt+0xaacc>
   1c1b0:	ldr	r0, [fp, #8]
   1c1b4:	cmn	r0, #1
   1c1b8:	bne	1c200 <__assert_fail@plt+0xaacc>
   1c1bc:	b	1c1c0 <__assert_fail@plt+0xaa8c>
   1c1c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1c4:	add	r0, r0, #0
   1c1c8:	movw	r1, #0
   1c1cc:	cmp	r1, r0
   1c1d0:	blt	1c2b8 <__assert_fail@plt+0xab84>
   1c1d4:	b	1c2cc <__assert_fail@plt+0xab98>
   1c1d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1dc:	movw	r1, #0
   1c1e0:	cmp	r1, r0
   1c1e4:	bge	1c2cc <__assert_fail@plt+0xab98>
   1c1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1ec:	sub	r0, r0, #1
   1c1f0:	mvn	r1, #0
   1c1f4:	cmp	r1, r0
   1c1f8:	blt	1c2b8 <__assert_fail@plt+0xab84>
   1c1fc:	b	1c2cc <__assert_fail@plt+0xab98>
   1c200:	ldr	r0, [fp, #8]
   1c204:	movw	r1, #0
   1c208:	sdiv	r0, r1, r0
   1c20c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c210:	cmp	r0, r1
   1c214:	blt	1c2b8 <__assert_fail@plt+0xab84>
   1c218:	b	1c2cc <__assert_fail@plt+0xab98>
   1c21c:	ldr	r0, [fp, #8]
   1c220:	cmp	r0, #0
   1c224:	bne	1c22c <__assert_fail@plt+0xaaf8>
   1c228:	b	1c2cc <__assert_fail@plt+0xab98>
   1c22c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c230:	cmp	r0, #0
   1c234:	bge	1c2a0 <__assert_fail@plt+0xab6c>
   1c238:	b	1c23c <__assert_fail@plt+0xab08>
   1c23c:	b	1c284 <__assert_fail@plt+0xab50>
   1c240:	b	1c284 <__assert_fail@plt+0xab50>
   1c244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c248:	cmn	r0, #1
   1c24c:	bne	1c284 <__assert_fail@plt+0xab50>
   1c250:	b	1c254 <__assert_fail@plt+0xab20>
   1c254:	ldr	r0, [fp, #8]
   1c258:	add	r0, r0, #0
   1c25c:	movw	r1, #0
   1c260:	cmp	r1, r0
   1c264:	blt	1c2b8 <__assert_fail@plt+0xab84>
   1c268:	b	1c2cc <__assert_fail@plt+0xab98>
   1c26c:	ldr	r0, [fp, #8]
   1c270:	sub	r0, r0, #1
   1c274:	mvn	r1, #0
   1c278:	cmp	r1, r0
   1c27c:	blt	1c2b8 <__assert_fail@plt+0xab84>
   1c280:	b	1c2cc <__assert_fail@plt+0xab98>
   1c284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c288:	movw	r1, #0
   1c28c:	sdiv	r0, r1, r0
   1c290:	ldr	r1, [fp, #8]
   1c294:	cmp	r0, r1
   1c298:	blt	1c2b8 <__assert_fail@plt+0xab84>
   1c29c:	b	1c2cc <__assert_fail@plt+0xab98>
   1c2a0:	ldr	r0, [fp, #8]
   1c2a4:	mvn	r1, #0
   1c2a8:	udiv	r0, r1, r0
   1c2ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c2b0:	cmp	r0, r1
   1c2b4:	bcs	1c2cc <__assert_fail@plt+0xab98>
   1c2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2bc:	ldr	r1, [fp, #8]
   1c2c0:	mul	r0, r0, r1
   1c2c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1c2c8:	b	1c7d0 <__assert_fail@plt+0xb09c>
   1c2cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2d0:	ldr	r1, [fp, #8]
   1c2d4:	mul	r0, r0, r1
   1c2d8:	str	r0, [fp, #-28]	; 0xffffffe4
   1c2dc:	b	1c7e0 <__assert_fail@plt+0xb0ac>
   1c2e0:	b	1c2e4 <__assert_fail@plt+0xabb0>
   1c2e4:	ldr	r0, [fp, #8]
   1c2e8:	cmp	r0, #0
   1c2ec:	bge	1c47c <__assert_fail@plt+0xad48>
   1c2f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2f4:	cmp	r0, #0
   1c2f8:	bge	1c3e4 <__assert_fail@plt+0xacb0>
   1c2fc:	b	1c300 <__assert_fail@plt+0xabcc>
   1c300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c304:	ldr	r1, [fp, #8]
   1c308:	asr	r3, r1, #31
   1c30c:	mvn	r2, #0
   1c310:	mvn	ip, #-2147483648	; 0x80000000
   1c314:	str	r0, [fp, #-72]	; 0xffffffb8
   1c318:	mov	r0, r2
   1c31c:	str	r1, [fp, #-76]	; 0xffffffb4
   1c320:	mov	r1, ip
   1c324:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1c328:	bl	22a38 <__assert_fail@plt+0x11304>
   1c32c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1c330:	subs	r0, r2, r0
   1c334:	rscs	r1, r1, r2, asr #31
   1c338:	str	r0, [fp, #-80]	; 0xffffffb0
   1c33c:	str	r1, [fp, #-84]	; 0xffffffac
   1c340:	blt	1c55c <__assert_fail@plt+0xae28>
   1c344:	b	1c570 <__assert_fail@plt+0xae3c>
   1c348:	b	1c34c <__assert_fail@plt+0xac18>
   1c34c:	ldr	r0, [pc, #196]	; 1c418 <__assert_fail@plt+0xace4>
   1c350:	ldr	r1, [fp, #8]
   1c354:	cmp	r1, r0
   1c358:	blt	1c370 <__assert_fail@plt+0xac3c>
   1c35c:	b	1c388 <__assert_fail@plt+0xac54>
   1c360:	ldr	r0, [fp, #8]
   1c364:	movw	r1, #0
   1c368:	cmp	r1, r0
   1c36c:	bge	1c388 <__assert_fail@plt+0xac54>
   1c370:	mov	r0, #0
   1c374:	mvn	r1, #0
   1c378:	str	r1, [fp, #-88]	; 0xffffffa8
   1c37c:	str	r0, [fp, #-92]	; 0xffffffa4
   1c380:	b	1c3bc <__assert_fail@plt+0xac88>
   1c384:	svcvc	0x00ffffff
   1c388:	ldr	r0, [fp, #8]
   1c38c:	rsb	r0, r0, #0
   1c390:	asr	r3, r0, #31
   1c394:	mvn	r1, #0
   1c398:	mvn	r2, #-2147483648	; 0x80000000
   1c39c:	str	r0, [fp, #-96]	; 0xffffffa0
   1c3a0:	mov	r0, r1
   1c3a4:	mov	r1, r2
   1c3a8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1c3ac:	bl	22a38 <__assert_fail@plt+0x11304>
   1c3b0:	str	r0, [fp, #-88]	; 0xffffffa8
   1c3b4:	str	r1, [fp, #-92]	; 0xffffffa4
   1c3b8:	b	1c3bc <__assert_fail@plt+0xac88>
   1c3bc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1c3c0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1c3c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c3c8:	mvn	r2, r2
   1c3cc:	subs	r1, r2, r1
   1c3d0:	rscs	r0, r0, r2, asr #31
   1c3d4:	str	r1, [fp, #-100]	; 0xffffff9c
   1c3d8:	str	r0, [fp, #-104]	; 0xffffff98
   1c3dc:	bge	1c55c <__assert_fail@plt+0xae28>
   1c3e0:	b	1c570 <__assert_fail@plt+0xae3c>
   1c3e4:	ldr	r0, [fp, #8]
   1c3e8:	cmn	r0, #1
   1c3ec:	bne	1c43c <__assert_fail@plt+0xad08>
   1c3f0:	b	1c3f4 <__assert_fail@plt+0xacc0>
   1c3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3f8:	mov	r1, #-2147483648	; 0x80000000
   1c3fc:	add	r1, r1, r0, asr #31
   1c400:	rsbs	r0, r0, #0
   1c404:	rscs	r1, r1, #0
   1c408:	str	r0, [fp, #-108]	; 0xffffff94
   1c40c:	str	r1, [fp, #-112]	; 0xffffff90
   1c410:	blt	1c55c <__assert_fail@plt+0xae28>
   1c414:	b	1c570 <__assert_fail@plt+0xae3c>
   1c418:	andhi	r0, r0, r1
   1c41c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c420:	movw	r1, #0
   1c424:	cmp	r1, r0
   1c428:	bge	1c570 <__assert_fail@plt+0xae3c>
   1c42c:	mov	r0, #0
   1c430:	cmp	r0, #0
   1c434:	bne	1c55c <__assert_fail@plt+0xae28>
   1c438:	b	1c570 <__assert_fail@plt+0xae3c>
   1c43c:	ldr	r0, [fp, #8]
   1c440:	asr	r3, r0, #31
   1c444:	mov	r1, #0
   1c448:	mov	r2, #-2147483648	; 0x80000000
   1c44c:	str	r0, [fp, #-116]	; 0xffffff8c
   1c450:	mov	r0, r1
   1c454:	mov	r1, r2
   1c458:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1c45c:	bl	22a38 <__assert_fail@plt+0x11304>
   1c460:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c464:	subs	r0, r0, r2
   1c468:	sbcs	r1, r1, r2, asr #31
   1c46c:	str	r0, [fp, #-120]	; 0xffffff88
   1c470:	str	r1, [fp, #-124]	; 0xffffff84
   1c474:	blt	1c55c <__assert_fail@plt+0xae28>
   1c478:	b	1c570 <__assert_fail@plt+0xae3c>
   1c47c:	ldr	r0, [fp, #8]
   1c480:	cmp	r0, #0
   1c484:	bne	1c48c <__assert_fail@plt+0xad58>
   1c488:	b	1c570 <__assert_fail@plt+0xae3c>
   1c48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c490:	cmp	r0, #0
   1c494:	bge	1c51c <__assert_fail@plt+0xade8>
   1c498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c49c:	cmn	r0, #1
   1c4a0:	bne	1c4dc <__assert_fail@plt+0xada8>
   1c4a4:	b	1c4a8 <__assert_fail@plt+0xad74>
   1c4a8:	ldr	r0, [fp, #8]
   1c4ac:	mov	r1, #-2147483648	; 0x80000000
   1c4b0:	add	r1, r1, r0, asr #31
   1c4b4:	rsbs	r0, r0, #0
   1c4b8:	rscs	r1, r1, #0
   1c4bc:	str	r0, [fp, #-128]	; 0xffffff80
   1c4c0:	str	r1, [fp, #-132]	; 0xffffff7c
   1c4c4:	blt	1c55c <__assert_fail@plt+0xae28>
   1c4c8:	b	1c570 <__assert_fail@plt+0xae3c>
   1c4cc:	mov	r0, #0
   1c4d0:	cmp	r0, #0
   1c4d4:	bne	1c55c <__assert_fail@plt+0xae28>
   1c4d8:	b	1c570 <__assert_fail@plt+0xae3c>
   1c4dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4e0:	asr	r3, r0, #31
   1c4e4:	mov	r1, #0
   1c4e8:	mov	r2, #-2147483648	; 0x80000000
   1c4ec:	str	r0, [fp, #-136]	; 0xffffff78
   1c4f0:	mov	r0, r1
   1c4f4:	mov	r1, r2
   1c4f8:	ldr	r2, [fp, #-136]	; 0xffffff78
   1c4fc:	bl	22a38 <__assert_fail@plt+0x11304>
   1c500:	ldr	r2, [fp, #8]
   1c504:	subs	r0, r0, r2
   1c508:	sbcs	r1, r1, r2, asr #31
   1c50c:	str	r0, [fp, #-140]	; 0xffffff74
   1c510:	str	r1, [fp, #-144]	; 0xffffff70
   1c514:	blt	1c55c <__assert_fail@plt+0xae28>
   1c518:	b	1c570 <__assert_fail@plt+0xae3c>
   1c51c:	ldr	r0, [fp, #8]
   1c520:	asr	r3, r0, #31
   1c524:	mvn	r1, #0
   1c528:	mvn	r2, #-2147483648	; 0x80000000
   1c52c:	str	r0, [fp, #-148]	; 0xffffff6c
   1c530:	mov	r0, r1
   1c534:	mov	r1, r2
   1c538:	ldr	r2, [fp, #-148]	; 0xffffff6c
   1c53c:	bl	22a38 <__assert_fail@plt+0x11304>
   1c540:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c544:	subs	r0, r0, r2
   1c548:	sbcs	r1, r1, r2, asr #31
   1c54c:	str	r0, [fp, #-152]	; 0xffffff68
   1c550:	str	r1, [fp, #-156]	; 0xffffff64
   1c554:	bge	1c570 <__assert_fail@plt+0xae3c>
   1c558:	b	1c55c <__assert_fail@plt+0xae28>
   1c55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c560:	ldr	r1, [fp, #8]
   1c564:	mul	r0, r0, r1
   1c568:	str	r0, [fp, #-28]	; 0xffffffe4
   1c56c:	b	1c7d0 <__assert_fail@plt+0xb09c>
   1c570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c574:	ldr	r1, [fp, #8]
   1c578:	mul	r0, r0, r1
   1c57c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c580:	b	1c7e0 <__assert_fail@plt+0xb0ac>
   1c584:	ldr	r0, [fp, #8]
   1c588:	cmp	r0, #0
   1c58c:	bge	1c6ec <__assert_fail@plt+0xafb8>
   1c590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c594:	cmp	r0, #0
   1c598:	bge	1c674 <__assert_fail@plt+0xaf40>
   1c59c:	b	1c5e4 <__assert_fail@plt+0xaeb0>
   1c5a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c5a4:	ldr	r1, [fp, #8]
   1c5a8:	asr	r3, r1, #31
   1c5ac:	mvn	r2, #0
   1c5b0:	str	r0, [fp, #-160]	; 0xffffff60
   1c5b4:	mov	r0, r2
   1c5b8:	str	r1, [fp, #-164]	; 0xffffff5c
   1c5bc:	mov	r1, r2
   1c5c0:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1c5c4:	bl	22b0c <__assert_fail@plt+0x113d8>
   1c5c8:	ldr	r2, [fp, #-160]	; 0xffffff60
   1c5cc:	subs	r0, r2, r0
   1c5d0:	rscs	r1, r1, r2, asr #31
   1c5d4:	str	r0, [fp, #-168]	; 0xffffff58
   1c5d8:	str	r1, [fp, #-172]	; 0xffffff54
   1c5dc:	bcc	1c7a8 <__assert_fail@plt+0xb074>
   1c5e0:	b	1c7bc <__assert_fail@plt+0xb088>
   1c5e4:	b	1c5e8 <__assert_fail@plt+0xaeb4>
   1c5e8:	ldr	r0, [pc, #-472]	; 1c418 <__assert_fail@plt+0xace4>
   1c5ec:	ldr	r1, [fp, #8]
   1c5f0:	cmp	r1, r0
   1c5f4:	blt	1c60c <__assert_fail@plt+0xaed8>
   1c5f8:	b	1c620 <__assert_fail@plt+0xaeec>
   1c5fc:	ldr	r0, [fp, #8]
   1c600:	movw	r1, #0
   1c604:	cmp	r1, r0
   1c608:	bge	1c620 <__assert_fail@plt+0xaeec>
   1c60c:	mov	r0, #1
   1c610:	mvn	r1, #0
   1c614:	str	r1, [fp, #-176]	; 0xffffff50
   1c618:	str	r0, [fp, #-180]	; 0xffffff4c
   1c61c:	b	1c64c <__assert_fail@plt+0xaf18>
   1c620:	ldr	r0, [fp, #8]
   1c624:	rsb	r0, r0, #0
   1c628:	asr	r3, r0, #31
   1c62c:	mvn	r1, #0
   1c630:	str	r0, [fp, #-184]	; 0xffffff48
   1c634:	mov	r0, r1
   1c638:	ldr	r2, [fp, #-184]	; 0xffffff48
   1c63c:	bl	22b0c <__assert_fail@plt+0x113d8>
   1c640:	str	r0, [fp, #-176]	; 0xffffff50
   1c644:	str	r1, [fp, #-180]	; 0xffffff4c
   1c648:	b	1c64c <__assert_fail@plt+0xaf18>
   1c64c:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1c650:	ldr	r1, [fp, #-176]	; 0xffffff50
   1c654:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c658:	mvn	r2, r2
   1c65c:	subs	r1, r2, r1
   1c660:	rscs	r0, r0, r2, asr #31
   1c664:	str	r1, [sp, #188]	; 0xbc
   1c668:	str	r0, [sp, #184]	; 0xb8
   1c66c:	bcs	1c7a8 <__assert_fail@plt+0xb074>
   1c670:	b	1c7bc <__assert_fail@plt+0xb088>
   1c674:	b	1c678 <__assert_fail@plt+0xaf44>
   1c678:	b	1c6d0 <__assert_fail@plt+0xaf9c>
   1c67c:	b	1c6d0 <__assert_fail@plt+0xaf9c>
   1c680:	ldr	r0, [fp, #8]
   1c684:	cmn	r0, #1
   1c688:	bne	1c6d0 <__assert_fail@plt+0xaf9c>
   1c68c:	b	1c690 <__assert_fail@plt+0xaf5c>
   1c690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c694:	add	r0, r0, #0
   1c698:	movw	r1, #0
   1c69c:	cmp	r1, r0
   1c6a0:	blt	1c7a8 <__assert_fail@plt+0xb074>
   1c6a4:	b	1c7bc <__assert_fail@plt+0xb088>
   1c6a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6ac:	movw	r1, #0
   1c6b0:	cmp	r1, r0
   1c6b4:	bge	1c7bc <__assert_fail@plt+0xb088>
   1c6b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6bc:	sub	r0, r0, #1
   1c6c0:	mvn	r1, #0
   1c6c4:	cmp	r1, r0
   1c6c8:	blt	1c7a8 <__assert_fail@plt+0xb074>
   1c6cc:	b	1c7bc <__assert_fail@plt+0xb088>
   1c6d0:	ldr	r0, [fp, #8]
   1c6d4:	movw	r1, #0
   1c6d8:	sdiv	r0, r1, r0
   1c6dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c6e0:	cmp	r0, r1
   1c6e4:	blt	1c7a8 <__assert_fail@plt+0xb074>
   1c6e8:	b	1c7bc <__assert_fail@plt+0xb088>
   1c6ec:	ldr	r0, [fp, #8]
   1c6f0:	cmp	r0, #0
   1c6f4:	bne	1c6fc <__assert_fail@plt+0xafc8>
   1c6f8:	b	1c7bc <__assert_fail@plt+0xb088>
   1c6fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c700:	cmp	r0, #0
   1c704:	bge	1c770 <__assert_fail@plt+0xb03c>
   1c708:	b	1c70c <__assert_fail@plt+0xafd8>
   1c70c:	b	1c754 <__assert_fail@plt+0xb020>
   1c710:	b	1c754 <__assert_fail@plt+0xb020>
   1c714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c718:	cmn	r0, #1
   1c71c:	bne	1c754 <__assert_fail@plt+0xb020>
   1c720:	b	1c724 <__assert_fail@plt+0xaff0>
   1c724:	ldr	r0, [fp, #8]
   1c728:	add	r0, r0, #0
   1c72c:	movw	r1, #0
   1c730:	cmp	r1, r0
   1c734:	blt	1c7a8 <__assert_fail@plt+0xb074>
   1c738:	b	1c7bc <__assert_fail@plt+0xb088>
   1c73c:	ldr	r0, [fp, #8]
   1c740:	sub	r0, r0, #1
   1c744:	mvn	r1, #0
   1c748:	cmp	r1, r0
   1c74c:	blt	1c7a8 <__assert_fail@plt+0xb074>
   1c750:	b	1c7bc <__assert_fail@plt+0xb088>
   1c754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c758:	movw	r1, #0
   1c75c:	sdiv	r0, r1, r0
   1c760:	ldr	r1, [fp, #8]
   1c764:	cmp	r0, r1
   1c768:	blt	1c7a8 <__assert_fail@plt+0xb074>
   1c76c:	b	1c7bc <__assert_fail@plt+0xb088>
   1c770:	ldr	r0, [fp, #8]
   1c774:	asr	r3, r0, #31
   1c778:	mvn	r1, #0
   1c77c:	str	r0, [sp, #180]	; 0xb4
   1c780:	mov	r0, r1
   1c784:	ldr	r2, [sp, #180]	; 0xb4
   1c788:	bl	22b0c <__assert_fail@plt+0x113d8>
   1c78c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c790:	subs	r0, r0, r2
   1c794:	sbcs	r1, r1, r2, asr #31
   1c798:	str	r0, [sp, #176]	; 0xb0
   1c79c:	str	r1, [sp, #172]	; 0xac
   1c7a0:	bcs	1c7bc <__assert_fail@plt+0xb088>
   1c7a4:	b	1c7a8 <__assert_fail@plt+0xb074>
   1c7a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7ac:	ldr	r1, [fp, #8]
   1c7b0:	mul	r0, r0, r1
   1c7b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1c7b8:	b	1c7d0 <__assert_fail@plt+0xb09c>
   1c7bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7c0:	ldr	r1, [fp, #8]
   1c7c4:	mul	r0, r0, r1
   1c7c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1c7cc:	b	1c7e0 <__assert_fail@plt+0xb0ac>
   1c7d0:	ldr	r0, [pc, #-1108]	; 1c384 <__assert_fail@plt+0xac50>
   1c7d4:	str	r0, [sp, #168]	; 0xa8
   1c7d8:	b	1c800 <__assert_fail@plt+0xb0cc>
   1c7dc:			; <UNDEFINED> instruction: 0xffff8000
   1c7e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c7e4:	cmp	r0, #64	; 0x40
   1c7e8:	movw	r0, #0
   1c7ec:	movlt	r0, #1
   1c7f0:	tst	r0, #1
   1c7f4:	movw	r0, #64	; 0x40
   1c7f8:	moveq	r0, #0
   1c7fc:	str	r0, [sp, #168]	; 0xa8
   1c800:	ldr	r0, [sp, #168]	; 0xa8
   1c804:	str	r0, [fp, #-32]	; 0xffffffe0
   1c808:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c80c:	cmp	r0, #0
   1c810:	beq	1c840 <__assert_fail@plt+0xb10c>
   1c814:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c818:	ldr	r1, [fp, #8]
   1c81c:	sdiv	r0, r0, r1
   1c820:	str	r0, [fp, #-24]	; 0xffffffe8
   1c824:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c828:	mov	r1, r0
   1c82c:	ldr	r2, [fp, #8]
   1c830:	sdiv	r3, r0, r2
   1c834:	mls	r0, r3, r2, r0
   1c838:	sub	r0, r1, r0
   1c83c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c840:	ldr	r0, [fp, #-4]
   1c844:	movw	r1, #0
   1c848:	cmp	r0, r1
   1c84c:	bne	1c85c <__assert_fail@plt+0xb128>
   1c850:	ldr	r0, [fp, #-8]
   1c854:	movw	r1, #0
   1c858:	str	r1, [r0]
   1c85c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c860:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c864:	sub	r0, r0, r1
   1c868:	ldr	r1, [fp, #-12]
   1c86c:	cmp	r0, r1
   1c870:	bge	1dca8 <__assert_fail@plt+0xc574>
   1c874:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c878:	ldr	r1, [fp, #-12]
   1c87c:	add	r1, r0, r1
   1c880:	mov	r2, #1
   1c884:	cmp	r1, r0
   1c888:	movwvc	r2, #0
   1c88c:	str	r1, [fp, #-24]	; 0xffffffe8
   1c890:	tst	r2, #1
   1c894:	bne	1dca4 <__assert_fail@plt+0xc570>
   1c898:	ldr	r0, [fp, #-16]
   1c89c:	movw	r1, #0
   1c8a0:	cmp	r1, r0
   1c8a4:	bgt	1c8b8 <__assert_fail@plt+0xb184>
   1c8a8:	ldr	r0, [fp, #-16]
   1c8ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c8b0:	cmp	r0, r1
   1c8b4:	blt	1dca4 <__assert_fail@plt+0xc570>
   1c8b8:	b	1cc94 <__assert_fail@plt+0xb560>
   1c8bc:	b	1c8c0 <__assert_fail@plt+0xb18c>
   1c8c0:	ldr	r0, [fp, #8]
   1c8c4:	cmp	r0, #0
   1c8c8:	bge	1c9dc <__assert_fail@plt+0xb2a8>
   1c8cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8d0:	cmp	r0, #0
   1c8d4:	bge	1c960 <__assert_fail@plt+0xb22c>
   1c8d8:	b	1c8dc <__assert_fail@plt+0xb1a8>
   1c8dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8e0:	ldr	r1, [fp, #8]
   1c8e4:	movw	r2, #127	; 0x7f
   1c8e8:	sdiv	r1, r2, r1
   1c8ec:	cmp	r0, r1
   1c8f0:	blt	1ca7c <__assert_fail@plt+0xb348>
   1c8f4:	b	1ca94 <__assert_fail@plt+0xb360>
   1c8f8:	b	1c8fc <__assert_fail@plt+0xb1c8>
   1c8fc:	ldr	r0, [pc, #-1260]	; 1c418 <__assert_fail@plt+0xace4>
   1c900:	ldr	r1, [fp, #8]
   1c904:	cmp	r1, r0
   1c908:	blt	1c920 <__assert_fail@plt+0xb1ec>
   1c90c:	b	1c92c <__assert_fail@plt+0xb1f8>
   1c910:	ldr	r0, [fp, #8]
   1c914:	movw	r1, #0
   1c918:	cmp	r1, r0
   1c91c:	bge	1c92c <__assert_fail@plt+0xb1f8>
   1c920:	movw	r0, #0
   1c924:	str	r0, [sp, #164]	; 0xa4
   1c928:	b	1c944 <__assert_fail@plt+0xb210>
   1c92c:	ldr	r0, [fp, #8]
   1c930:	movw	r1, #0
   1c934:	sub	r0, r1, r0
   1c938:	movw	r1, #127	; 0x7f
   1c93c:	sdiv	r0, r1, r0
   1c940:	str	r0, [sp, #164]	; 0xa4
   1c944:	ldr	r0, [sp, #164]	; 0xa4
   1c948:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c94c:	mvn	r2, #0
   1c950:	sub	r1, r2, r1
   1c954:	cmp	r0, r1
   1c958:	ble	1ca7c <__assert_fail@plt+0xb348>
   1c95c:	b	1ca94 <__assert_fail@plt+0xb360>
   1c960:	b	1c964 <__assert_fail@plt+0xb230>
   1c964:	b	1c9c0 <__assert_fail@plt+0xb28c>
   1c968:	b	1c9c0 <__assert_fail@plt+0xb28c>
   1c96c:	ldr	r0, [fp, #8]
   1c970:	cmn	r0, #1
   1c974:	bne	1c9c0 <__assert_fail@plt+0xb28c>
   1c978:	b	1c97c <__assert_fail@plt+0xb248>
   1c97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c980:	mvn	r1, #127	; 0x7f
   1c984:	add	r0, r0, r1
   1c988:	movw	r1, #0
   1c98c:	cmp	r1, r0
   1c990:	blt	1ca7c <__assert_fail@plt+0xb348>
   1c994:	b	1ca94 <__assert_fail@plt+0xb360>
   1c998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c99c:	movw	r1, #0
   1c9a0:	cmp	r1, r0
   1c9a4:	bge	1ca94 <__assert_fail@plt+0xb360>
   1c9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9ac:	sub	r0, r0, #1
   1c9b0:	movw	r1, #127	; 0x7f
   1c9b4:	cmp	r1, r0
   1c9b8:	blt	1ca7c <__assert_fail@plt+0xb348>
   1c9bc:	b	1ca94 <__assert_fail@plt+0xb360>
   1c9c0:	ldr	r0, [fp, #8]
   1c9c4:	mvn	r1, #127	; 0x7f
   1c9c8:	sdiv	r0, r1, r0
   1c9cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c9d0:	cmp	r0, r1
   1c9d4:	blt	1ca7c <__assert_fail@plt+0xb348>
   1c9d8:	b	1ca94 <__assert_fail@plt+0xb360>
   1c9dc:	ldr	r0, [fp, #8]
   1c9e0:	cmp	r0, #0
   1c9e4:	bne	1c9ec <__assert_fail@plt+0xb2b8>
   1c9e8:	b	1ca94 <__assert_fail@plt+0xb360>
   1c9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9f0:	cmp	r0, #0
   1c9f4:	bge	1ca64 <__assert_fail@plt+0xb330>
   1c9f8:	b	1c9fc <__assert_fail@plt+0xb2c8>
   1c9fc:	b	1ca48 <__assert_fail@plt+0xb314>
   1ca00:	b	1ca48 <__assert_fail@plt+0xb314>
   1ca04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca08:	cmn	r0, #1
   1ca0c:	bne	1ca48 <__assert_fail@plt+0xb314>
   1ca10:	b	1ca14 <__assert_fail@plt+0xb2e0>
   1ca14:	ldr	r0, [fp, #8]
   1ca18:	mvn	r1, #127	; 0x7f
   1ca1c:	add	r0, r0, r1
   1ca20:	movw	r1, #0
   1ca24:	cmp	r1, r0
   1ca28:	blt	1ca7c <__assert_fail@plt+0xb348>
   1ca2c:	b	1ca94 <__assert_fail@plt+0xb360>
   1ca30:	ldr	r0, [fp, #8]
   1ca34:	sub	r0, r0, #1
   1ca38:	movw	r1, #127	; 0x7f
   1ca3c:	cmp	r1, r0
   1ca40:	blt	1ca7c <__assert_fail@plt+0xb348>
   1ca44:	b	1ca94 <__assert_fail@plt+0xb360>
   1ca48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca4c:	mvn	r1, #127	; 0x7f
   1ca50:	sdiv	r0, r1, r0
   1ca54:	ldr	r1, [fp, #8]
   1ca58:	cmp	r0, r1
   1ca5c:	blt	1ca7c <__assert_fail@plt+0xb348>
   1ca60:	b	1ca94 <__assert_fail@plt+0xb360>
   1ca64:	ldr	r0, [fp, #8]
   1ca68:	movw	r1, #127	; 0x7f
   1ca6c:	sdiv	r0, r1, r0
   1ca70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca74:	cmp	r0, r1
   1ca78:	bge	1ca94 <__assert_fail@plt+0xb360>
   1ca7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca80:	ldr	r1, [fp, #8]
   1ca84:	mul	r0, r0, r1
   1ca88:	sxtb	r0, r0
   1ca8c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ca90:	b	1dca4 <__assert_fail@plt+0xc570>
   1ca94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca98:	ldr	r1, [fp, #8]
   1ca9c:	mul	r0, r0, r1
   1caa0:	sxtb	r0, r0
   1caa4:	str	r0, [fp, #-28]	; 0xffffffe4
   1caa8:	b	1dca8 <__assert_fail@plt+0xc574>
   1caac:	ldr	r0, [fp, #8]
   1cab0:	cmp	r0, #0
   1cab4:	bge	1cbc4 <__assert_fail@plt+0xb490>
   1cab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cabc:	cmp	r0, #0
   1cac0:	bge	1cb4c <__assert_fail@plt+0xb418>
   1cac4:	b	1cac8 <__assert_fail@plt+0xb394>
   1cac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cacc:	ldr	r1, [fp, #8]
   1cad0:	movw	r2, #255	; 0xff
   1cad4:	sdiv	r1, r2, r1
   1cad8:	cmp	r0, r1
   1cadc:	blt	1cc60 <__assert_fail@plt+0xb52c>
   1cae0:	b	1cc7c <__assert_fail@plt+0xb548>
   1cae4:	b	1cae8 <__assert_fail@plt+0xb3b4>
   1cae8:	ldr	r0, [pc, #-1752]	; 1c418 <__assert_fail@plt+0xace4>
   1caec:	ldr	r1, [fp, #8]
   1caf0:	cmp	r1, r0
   1caf4:	blt	1cb0c <__assert_fail@plt+0xb3d8>
   1caf8:	b	1cb18 <__assert_fail@plt+0xb3e4>
   1cafc:	ldr	r0, [fp, #8]
   1cb00:	movw	r1, #0
   1cb04:	cmp	r1, r0
   1cb08:	bge	1cb18 <__assert_fail@plt+0xb3e4>
   1cb0c:	movw	r0, #0
   1cb10:	str	r0, [sp, #160]	; 0xa0
   1cb14:	b	1cb30 <__assert_fail@plt+0xb3fc>
   1cb18:	ldr	r0, [fp, #8]
   1cb1c:	movw	r1, #0
   1cb20:	sub	r0, r1, r0
   1cb24:	movw	r1, #255	; 0xff
   1cb28:	sdiv	r0, r1, r0
   1cb2c:	str	r0, [sp, #160]	; 0xa0
   1cb30:	ldr	r0, [sp, #160]	; 0xa0
   1cb34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cb38:	mvn	r2, #0
   1cb3c:	sub	r1, r2, r1
   1cb40:	cmp	r0, r1
   1cb44:	ble	1cc60 <__assert_fail@plt+0xb52c>
   1cb48:	b	1cc7c <__assert_fail@plt+0xb548>
   1cb4c:	b	1cb50 <__assert_fail@plt+0xb41c>
   1cb50:	b	1cba8 <__assert_fail@plt+0xb474>
   1cb54:	b	1cba8 <__assert_fail@plt+0xb474>
   1cb58:	ldr	r0, [fp, #8]
   1cb5c:	cmn	r0, #1
   1cb60:	bne	1cba8 <__assert_fail@plt+0xb474>
   1cb64:	b	1cb68 <__assert_fail@plt+0xb434>
   1cb68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb6c:	add	r0, r0, #0
   1cb70:	movw	r1, #0
   1cb74:	cmp	r1, r0
   1cb78:	blt	1cc60 <__assert_fail@plt+0xb52c>
   1cb7c:	b	1cc7c <__assert_fail@plt+0xb548>
   1cb80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb84:	movw	r1, #0
   1cb88:	cmp	r1, r0
   1cb8c:	bge	1cc7c <__assert_fail@plt+0xb548>
   1cb90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb94:	sub	r0, r0, #1
   1cb98:	mvn	r1, #0
   1cb9c:	cmp	r1, r0
   1cba0:	blt	1cc60 <__assert_fail@plt+0xb52c>
   1cba4:	b	1cc7c <__assert_fail@plt+0xb548>
   1cba8:	ldr	r0, [fp, #8]
   1cbac:	movw	r1, #0
   1cbb0:	sdiv	r0, r1, r0
   1cbb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cbb8:	cmp	r0, r1
   1cbbc:	blt	1cc60 <__assert_fail@plt+0xb52c>
   1cbc0:	b	1cc7c <__assert_fail@plt+0xb548>
   1cbc4:	ldr	r0, [fp, #8]
   1cbc8:	cmp	r0, #0
   1cbcc:	bne	1cbd4 <__assert_fail@plt+0xb4a0>
   1cbd0:	b	1cc7c <__assert_fail@plt+0xb548>
   1cbd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbd8:	cmp	r0, #0
   1cbdc:	bge	1cc48 <__assert_fail@plt+0xb514>
   1cbe0:	b	1cbe4 <__assert_fail@plt+0xb4b0>
   1cbe4:	b	1cc2c <__assert_fail@plt+0xb4f8>
   1cbe8:	b	1cc2c <__assert_fail@plt+0xb4f8>
   1cbec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbf0:	cmn	r0, #1
   1cbf4:	bne	1cc2c <__assert_fail@plt+0xb4f8>
   1cbf8:	b	1cbfc <__assert_fail@plt+0xb4c8>
   1cbfc:	ldr	r0, [fp, #8]
   1cc00:	add	r0, r0, #0
   1cc04:	movw	r1, #0
   1cc08:	cmp	r1, r0
   1cc0c:	blt	1cc60 <__assert_fail@plt+0xb52c>
   1cc10:	b	1cc7c <__assert_fail@plt+0xb548>
   1cc14:	ldr	r0, [fp, #8]
   1cc18:	sub	r0, r0, #1
   1cc1c:	mvn	r1, #0
   1cc20:	cmp	r1, r0
   1cc24:	blt	1cc60 <__assert_fail@plt+0xb52c>
   1cc28:	b	1cc7c <__assert_fail@plt+0xb548>
   1cc2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc30:	movw	r1, #0
   1cc34:	sdiv	r0, r1, r0
   1cc38:	ldr	r1, [fp, #8]
   1cc3c:	cmp	r0, r1
   1cc40:	blt	1cc60 <__assert_fail@plt+0xb52c>
   1cc44:	b	1cc7c <__assert_fail@plt+0xb548>
   1cc48:	ldr	r0, [fp, #8]
   1cc4c:	movw	r1, #255	; 0xff
   1cc50:	sdiv	r0, r1, r0
   1cc54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cc58:	cmp	r0, r1
   1cc5c:	bge	1cc7c <__assert_fail@plt+0xb548>
   1cc60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc64:	ldr	r1, [fp, #8]
   1cc68:	mul	r0, r0, r1
   1cc6c:	and	r0, r0, #255	; 0xff
   1cc70:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc74:	b	1dca4 <__assert_fail@plt+0xc570>
   1cc78:	andhi	r0, r0, r0
   1cc7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc80:	ldr	r1, [fp, #8]
   1cc84:	mul	r0, r0, r1
   1cc88:	and	r0, r0, #255	; 0xff
   1cc8c:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc90:	b	1dca8 <__assert_fail@plt+0xc574>
   1cc94:	b	1d06c <__assert_fail@plt+0xb938>
   1cc98:	b	1cc9c <__assert_fail@plt+0xb568>
   1cc9c:	ldr	r0, [fp, #8]
   1cca0:	cmp	r0, #0
   1cca4:	bge	1cdb8 <__assert_fail@plt+0xb684>
   1cca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccac:	cmp	r0, #0
   1ccb0:	bge	1cd3c <__assert_fail@plt+0xb608>
   1ccb4:	b	1ccb8 <__assert_fail@plt+0xb584>
   1ccb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccbc:	ldr	r1, [fp, #8]
   1ccc0:	movw	r2, #32767	; 0x7fff
   1ccc4:	sdiv	r1, r2, r1
   1ccc8:	cmp	r0, r1
   1cccc:	blt	1ce58 <__assert_fail@plt+0xb724>
   1ccd0:	b	1ce70 <__assert_fail@plt+0xb73c>
   1ccd4:	b	1ccd8 <__assert_fail@plt+0xb5a4>
   1ccd8:	ldr	r0, [pc, #4084]	; 1dcd4 <__assert_fail@plt+0xc5a0>
   1ccdc:	ldr	r1, [fp, #8]
   1cce0:	cmp	r1, r0
   1cce4:	blt	1ccfc <__assert_fail@plt+0xb5c8>
   1cce8:	b	1cd08 <__assert_fail@plt+0xb5d4>
   1ccec:	ldr	r0, [fp, #8]
   1ccf0:	movw	r1, #0
   1ccf4:	cmp	r1, r0
   1ccf8:	bge	1cd08 <__assert_fail@plt+0xb5d4>
   1ccfc:	movw	r0, #0
   1cd00:	str	r0, [sp, #156]	; 0x9c
   1cd04:	b	1cd20 <__assert_fail@plt+0xb5ec>
   1cd08:	ldr	r0, [fp, #8]
   1cd0c:	movw	r1, #0
   1cd10:	sub	r0, r1, r0
   1cd14:	movw	r1, #32767	; 0x7fff
   1cd18:	sdiv	r0, r1, r0
   1cd1c:	str	r0, [sp, #156]	; 0x9c
   1cd20:	ldr	r0, [sp, #156]	; 0x9c
   1cd24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd28:	mvn	r2, #0
   1cd2c:	sub	r1, r2, r1
   1cd30:	cmp	r0, r1
   1cd34:	ble	1ce58 <__assert_fail@plt+0xb724>
   1cd38:	b	1ce70 <__assert_fail@plt+0xb73c>
   1cd3c:	b	1cd40 <__assert_fail@plt+0xb60c>
   1cd40:	b	1cd9c <__assert_fail@plt+0xb668>
   1cd44:	b	1cd9c <__assert_fail@plt+0xb668>
   1cd48:	ldr	r0, [fp, #8]
   1cd4c:	cmn	r0, #1
   1cd50:	bne	1cd9c <__assert_fail@plt+0xb668>
   1cd54:	b	1cd58 <__assert_fail@plt+0xb624>
   1cd58:	ldr	r0, [pc, #3964]	; 1dcdc <__assert_fail@plt+0xc5a8>
   1cd5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd60:	add	r0, r1, r0
   1cd64:	movw	r1, #0
   1cd68:	cmp	r1, r0
   1cd6c:	blt	1ce58 <__assert_fail@plt+0xb724>
   1cd70:	b	1ce70 <__assert_fail@plt+0xb73c>
   1cd74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd78:	movw	r1, #0
   1cd7c:	cmp	r1, r0
   1cd80:	bge	1ce70 <__assert_fail@plt+0xb73c>
   1cd84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd88:	sub	r0, r0, #1
   1cd8c:	movw	r1, #32767	; 0x7fff
   1cd90:	cmp	r1, r0
   1cd94:	blt	1ce58 <__assert_fail@plt+0xb724>
   1cd98:	b	1ce70 <__assert_fail@plt+0xb73c>
   1cd9c:	ldr	r0, [pc, #3896]	; 1dcdc <__assert_fail@plt+0xc5a8>
   1cda0:	ldr	r1, [fp, #8]
   1cda4:	sdiv	r0, r0, r1
   1cda8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cdac:	cmp	r0, r1
   1cdb0:	blt	1ce58 <__assert_fail@plt+0xb724>
   1cdb4:	b	1ce70 <__assert_fail@plt+0xb73c>
   1cdb8:	ldr	r0, [fp, #8]
   1cdbc:	cmp	r0, #0
   1cdc0:	bne	1cdc8 <__assert_fail@plt+0xb694>
   1cdc4:	b	1ce70 <__assert_fail@plt+0xb73c>
   1cdc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdcc:	cmp	r0, #0
   1cdd0:	bge	1ce40 <__assert_fail@plt+0xb70c>
   1cdd4:	b	1cdd8 <__assert_fail@plt+0xb6a4>
   1cdd8:	b	1ce24 <__assert_fail@plt+0xb6f0>
   1cddc:	b	1ce24 <__assert_fail@plt+0xb6f0>
   1cde0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cde4:	cmn	r0, #1
   1cde8:	bne	1ce24 <__assert_fail@plt+0xb6f0>
   1cdec:	b	1cdf0 <__assert_fail@plt+0xb6bc>
   1cdf0:	ldr	r0, [pc, #3812]	; 1dcdc <__assert_fail@plt+0xc5a8>
   1cdf4:	ldr	r1, [fp, #8]
   1cdf8:	add	r0, r1, r0
   1cdfc:	movw	r1, #0
   1ce00:	cmp	r1, r0
   1ce04:	blt	1ce58 <__assert_fail@plt+0xb724>
   1ce08:	b	1ce70 <__assert_fail@plt+0xb73c>
   1ce0c:	ldr	r0, [fp, #8]
   1ce10:	sub	r0, r0, #1
   1ce14:	movw	r1, #32767	; 0x7fff
   1ce18:	cmp	r1, r0
   1ce1c:	blt	1ce58 <__assert_fail@plt+0xb724>
   1ce20:	b	1ce70 <__assert_fail@plt+0xb73c>
   1ce24:	ldr	r0, [pc, #3760]	; 1dcdc <__assert_fail@plt+0xc5a8>
   1ce28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce2c:	sdiv	r0, r0, r1
   1ce30:	ldr	r1, [fp, #8]
   1ce34:	cmp	r0, r1
   1ce38:	blt	1ce58 <__assert_fail@plt+0xb724>
   1ce3c:	b	1ce70 <__assert_fail@plt+0xb73c>
   1ce40:	ldr	r0, [fp, #8]
   1ce44:	movw	r1, #32767	; 0x7fff
   1ce48:	sdiv	r0, r1, r0
   1ce4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce50:	cmp	r0, r1
   1ce54:	bge	1ce70 <__assert_fail@plt+0xb73c>
   1ce58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce5c:	ldr	r1, [fp, #8]
   1ce60:	mul	r0, r0, r1
   1ce64:	sxth	r0, r0
   1ce68:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce6c:	b	1dca4 <__assert_fail@plt+0xc570>
   1ce70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce74:	ldr	r1, [fp, #8]
   1ce78:	mul	r0, r0, r1
   1ce7c:	sxth	r0, r0
   1ce80:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce84:	b	1dca8 <__assert_fail@plt+0xc574>
   1ce88:	ldr	r0, [fp, #8]
   1ce8c:	cmp	r0, #0
   1ce90:	bge	1cfa0 <__assert_fail@plt+0xb86c>
   1ce94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce98:	cmp	r0, #0
   1ce9c:	bge	1cf28 <__assert_fail@plt+0xb7f4>
   1cea0:	b	1cea4 <__assert_fail@plt+0xb770>
   1cea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cea8:	ldr	r1, [fp, #8]
   1ceac:	movw	r2, #65535	; 0xffff
   1ceb0:	sdiv	r1, r2, r1
   1ceb4:	cmp	r0, r1
   1ceb8:	blt	1d03c <__assert_fail@plt+0xb908>
   1cebc:	b	1d054 <__assert_fail@plt+0xb920>
   1cec0:	b	1cec4 <__assert_fail@plt+0xb790>
   1cec4:	ldr	r0, [pc, #3592]	; 1dcd4 <__assert_fail@plt+0xc5a0>
   1cec8:	ldr	r1, [fp, #8]
   1cecc:	cmp	r1, r0
   1ced0:	blt	1cee8 <__assert_fail@plt+0xb7b4>
   1ced4:	b	1cef4 <__assert_fail@plt+0xb7c0>
   1ced8:	ldr	r0, [fp, #8]
   1cedc:	movw	r1, #0
   1cee0:	cmp	r1, r0
   1cee4:	bge	1cef4 <__assert_fail@plt+0xb7c0>
   1cee8:	movw	r0, #0
   1ceec:	str	r0, [sp, #152]	; 0x98
   1cef0:	b	1cf0c <__assert_fail@plt+0xb7d8>
   1cef4:	ldr	r0, [fp, #8]
   1cef8:	movw	r1, #0
   1cefc:	sub	r0, r1, r0
   1cf00:	movw	r1, #65535	; 0xffff
   1cf04:	sdiv	r0, r1, r0
   1cf08:	str	r0, [sp, #152]	; 0x98
   1cf0c:	ldr	r0, [sp, #152]	; 0x98
   1cf10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf14:	mvn	r2, #0
   1cf18:	sub	r1, r2, r1
   1cf1c:	cmp	r0, r1
   1cf20:	ble	1d03c <__assert_fail@plt+0xb908>
   1cf24:	b	1d054 <__assert_fail@plt+0xb920>
   1cf28:	b	1cf2c <__assert_fail@plt+0xb7f8>
   1cf2c:	b	1cf84 <__assert_fail@plt+0xb850>
   1cf30:	b	1cf84 <__assert_fail@plt+0xb850>
   1cf34:	ldr	r0, [fp, #8]
   1cf38:	cmn	r0, #1
   1cf3c:	bne	1cf84 <__assert_fail@plt+0xb850>
   1cf40:	b	1cf44 <__assert_fail@plt+0xb810>
   1cf44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf48:	add	r0, r0, #0
   1cf4c:	movw	r1, #0
   1cf50:	cmp	r1, r0
   1cf54:	blt	1d03c <__assert_fail@plt+0xb908>
   1cf58:	b	1d054 <__assert_fail@plt+0xb920>
   1cf5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf60:	movw	r1, #0
   1cf64:	cmp	r1, r0
   1cf68:	bge	1d054 <__assert_fail@plt+0xb920>
   1cf6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf70:	sub	r0, r0, #1
   1cf74:	mvn	r1, #0
   1cf78:	cmp	r1, r0
   1cf7c:	blt	1d03c <__assert_fail@plt+0xb908>
   1cf80:	b	1d054 <__assert_fail@plt+0xb920>
   1cf84:	ldr	r0, [fp, #8]
   1cf88:	movw	r1, #0
   1cf8c:	sdiv	r0, r1, r0
   1cf90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf94:	cmp	r0, r1
   1cf98:	blt	1d03c <__assert_fail@plt+0xb908>
   1cf9c:	b	1d054 <__assert_fail@plt+0xb920>
   1cfa0:	ldr	r0, [fp, #8]
   1cfa4:	cmp	r0, #0
   1cfa8:	bne	1cfb0 <__assert_fail@plt+0xb87c>
   1cfac:	b	1d054 <__assert_fail@plt+0xb920>
   1cfb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfb4:	cmp	r0, #0
   1cfb8:	bge	1d024 <__assert_fail@plt+0xb8f0>
   1cfbc:	b	1cfc0 <__assert_fail@plt+0xb88c>
   1cfc0:	b	1d008 <__assert_fail@plt+0xb8d4>
   1cfc4:	b	1d008 <__assert_fail@plt+0xb8d4>
   1cfc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfcc:	cmn	r0, #1
   1cfd0:	bne	1d008 <__assert_fail@plt+0xb8d4>
   1cfd4:	b	1cfd8 <__assert_fail@plt+0xb8a4>
   1cfd8:	ldr	r0, [fp, #8]
   1cfdc:	add	r0, r0, #0
   1cfe0:	movw	r1, #0
   1cfe4:	cmp	r1, r0
   1cfe8:	blt	1d03c <__assert_fail@plt+0xb908>
   1cfec:	b	1d054 <__assert_fail@plt+0xb920>
   1cff0:	ldr	r0, [fp, #8]
   1cff4:	sub	r0, r0, #1
   1cff8:	mvn	r1, #0
   1cffc:	cmp	r1, r0
   1d000:	blt	1d03c <__assert_fail@plt+0xb908>
   1d004:	b	1d054 <__assert_fail@plt+0xb920>
   1d008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d00c:	movw	r1, #0
   1d010:	sdiv	r0, r1, r0
   1d014:	ldr	r1, [fp, #8]
   1d018:	cmp	r0, r1
   1d01c:	blt	1d03c <__assert_fail@plt+0xb908>
   1d020:	b	1d054 <__assert_fail@plt+0xb920>
   1d024:	ldr	r0, [fp, #8]
   1d028:	movw	r1, #65535	; 0xffff
   1d02c:	sdiv	r0, r1, r0
   1d030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d034:	cmp	r0, r1
   1d038:	bge	1d054 <__assert_fail@plt+0xb920>
   1d03c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d040:	ldr	r1, [fp, #8]
   1d044:	mul	r0, r0, r1
   1d048:	uxth	r0, r0
   1d04c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d050:	b	1dca4 <__assert_fail@plt+0xc570>
   1d054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d058:	ldr	r1, [fp, #8]
   1d05c:	mul	r0, r0, r1
   1d060:	uxth	r0, r0
   1d064:	str	r0, [fp, #-28]	; 0xffffffe4
   1d068:	b	1dca8 <__assert_fail@plt+0xc574>
   1d06c:	b	1d070 <__assert_fail@plt+0xb93c>
   1d070:	b	1d074 <__assert_fail@plt+0xb940>
   1d074:	ldr	r0, [fp, #8]
   1d078:	cmp	r0, #0
   1d07c:	bge	1d180 <__assert_fail@plt+0xba4c>
   1d080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d084:	cmp	r0, #0
   1d088:	bge	1d114 <__assert_fail@plt+0xb9e0>
   1d08c:	b	1d090 <__assert_fail@plt+0xb95c>
   1d090:	ldr	r0, [pc, #3128]	; 1dcd0 <__assert_fail@plt+0xc59c>
   1d094:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d098:	ldr	r2, [fp, #8]
   1d09c:	sdiv	r0, r0, r2
   1d0a0:	cmp	r1, r0
   1d0a4:	blt	1d210 <__assert_fail@plt+0xbadc>
   1d0a8:	b	1d224 <__assert_fail@plt+0xbaf0>
   1d0ac:	b	1d0b0 <__assert_fail@plt+0xb97c>
   1d0b0:	ldr	r0, [pc, #3100]	; 1dcd4 <__assert_fail@plt+0xc5a0>
   1d0b4:	ldr	r1, [fp, #8]
   1d0b8:	cmp	r1, r0
   1d0bc:	blt	1d0d4 <__assert_fail@plt+0xb9a0>
   1d0c0:	b	1d0e0 <__assert_fail@plt+0xb9ac>
   1d0c4:	ldr	r0, [fp, #8]
   1d0c8:	movw	r1, #0
   1d0cc:	cmp	r1, r0
   1d0d0:	bge	1d0e0 <__assert_fail@plt+0xb9ac>
   1d0d4:	movw	r0, #0
   1d0d8:	str	r0, [sp, #148]	; 0x94
   1d0dc:	b	1d0f8 <__assert_fail@plt+0xb9c4>
   1d0e0:	ldr	r0, [pc, #3048]	; 1dcd0 <__assert_fail@plt+0xc59c>
   1d0e4:	ldr	r1, [fp, #8]
   1d0e8:	movw	r2, #0
   1d0ec:	sub	r1, r2, r1
   1d0f0:	sdiv	r0, r0, r1
   1d0f4:	str	r0, [sp, #148]	; 0x94
   1d0f8:	ldr	r0, [sp, #148]	; 0x94
   1d0fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d100:	mvn	r2, #0
   1d104:	sub	r1, r2, r1
   1d108:	cmp	r0, r1
   1d10c:	ble	1d210 <__assert_fail@plt+0xbadc>
   1d110:	b	1d224 <__assert_fail@plt+0xbaf0>
   1d114:	ldr	r0, [fp, #8]
   1d118:	cmn	r0, #1
   1d11c:	bne	1d164 <__assert_fail@plt+0xba30>
   1d120:	b	1d124 <__assert_fail@plt+0xb9f0>
   1d124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d128:	add	r0, r0, #-2147483648	; 0x80000000
   1d12c:	movw	r1, #0
   1d130:	cmp	r1, r0
   1d134:	blt	1d210 <__assert_fail@plt+0xbadc>
   1d138:	b	1d224 <__assert_fail@plt+0xbaf0>
   1d13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d140:	movw	r1, #0
   1d144:	cmp	r1, r0
   1d148:	bge	1d224 <__assert_fail@plt+0xbaf0>
   1d14c:	ldr	r0, [pc, #2940]	; 1dcd0 <__assert_fail@plt+0xc59c>
   1d150:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d154:	sub	r1, r1, #1
   1d158:	cmp	r0, r1
   1d15c:	blt	1d210 <__assert_fail@plt+0xbadc>
   1d160:	b	1d224 <__assert_fail@plt+0xbaf0>
   1d164:	ldr	r0, [pc, #2924]	; 1dcd8 <__assert_fail@plt+0xc5a4>
   1d168:	ldr	r1, [fp, #8]
   1d16c:	sdiv	r0, r0, r1
   1d170:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d174:	cmp	r0, r1
   1d178:	blt	1d210 <__assert_fail@plt+0xbadc>
   1d17c:	b	1d224 <__assert_fail@plt+0xbaf0>
   1d180:	ldr	r0, [fp, #8]
   1d184:	cmp	r0, #0
   1d188:	bne	1d190 <__assert_fail@plt+0xba5c>
   1d18c:	b	1d224 <__assert_fail@plt+0xbaf0>
   1d190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d194:	cmp	r0, #0
   1d198:	bge	1d1f8 <__assert_fail@plt+0xbac4>
   1d19c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1a0:	cmn	r0, #1
   1d1a4:	bne	1d1dc <__assert_fail@plt+0xbaa8>
   1d1a8:	b	1d1ac <__assert_fail@plt+0xba78>
   1d1ac:	ldr	r0, [fp, #8]
   1d1b0:	add	r0, r0, #-2147483648	; 0x80000000
   1d1b4:	movw	r1, #0
   1d1b8:	cmp	r1, r0
   1d1bc:	blt	1d210 <__assert_fail@plt+0xbadc>
   1d1c0:	b	1d224 <__assert_fail@plt+0xbaf0>
   1d1c4:	ldr	r0, [pc, #2820]	; 1dcd0 <__assert_fail@plt+0xc59c>
   1d1c8:	ldr	r1, [fp, #8]
   1d1cc:	sub	r1, r1, #1
   1d1d0:	cmp	r0, r1
   1d1d4:	blt	1d210 <__assert_fail@plt+0xbadc>
   1d1d8:	b	1d224 <__assert_fail@plt+0xbaf0>
   1d1dc:	ldr	r0, [pc, #2804]	; 1dcd8 <__assert_fail@plt+0xc5a4>
   1d1e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1e4:	sdiv	r0, r0, r1
   1d1e8:	ldr	r1, [fp, #8]
   1d1ec:	cmp	r0, r1
   1d1f0:	blt	1d210 <__assert_fail@plt+0xbadc>
   1d1f4:	b	1d224 <__assert_fail@plt+0xbaf0>
   1d1f8:	ldr	r0, [pc, #2768]	; 1dcd0 <__assert_fail@plt+0xc59c>
   1d1fc:	ldr	r1, [fp, #8]
   1d200:	sdiv	r0, r0, r1
   1d204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d208:	cmp	r0, r1
   1d20c:	bge	1d224 <__assert_fail@plt+0xbaf0>
   1d210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d214:	ldr	r1, [fp, #8]
   1d218:	mul	r0, r0, r1
   1d21c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d220:	b	1dca4 <__assert_fail@plt+0xc570>
   1d224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d228:	ldr	r1, [fp, #8]
   1d22c:	mul	r0, r0, r1
   1d230:	str	r0, [fp, #-28]	; 0xffffffe4
   1d234:	b	1dca8 <__assert_fail@plt+0xc574>
   1d238:	ldr	r0, [fp, #8]
   1d23c:	cmp	r0, #0
   1d240:	bge	1d350 <__assert_fail@plt+0xbc1c>
   1d244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d248:	cmp	r0, #0
   1d24c:	bge	1d2d8 <__assert_fail@plt+0xbba4>
   1d250:	b	1d270 <__assert_fail@plt+0xbb3c>
   1d254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d258:	ldr	r1, [fp, #8]
   1d25c:	mvn	r2, #0
   1d260:	udiv	r1, r2, r1
   1d264:	cmp	r0, r1
   1d268:	bcc	1d3ec <__assert_fail@plt+0xbcb8>
   1d26c:	b	1d400 <__assert_fail@plt+0xbccc>
   1d270:	b	1d274 <__assert_fail@plt+0xbb40>
   1d274:	ldr	r0, [pc, #2648]	; 1dcd4 <__assert_fail@plt+0xc5a0>
   1d278:	ldr	r1, [fp, #8]
   1d27c:	cmp	r1, r0
   1d280:	blt	1d298 <__assert_fail@plt+0xbb64>
   1d284:	b	1d2a4 <__assert_fail@plt+0xbb70>
   1d288:	ldr	r0, [fp, #8]
   1d28c:	movw	r1, #0
   1d290:	cmp	r1, r0
   1d294:	bge	1d2a4 <__assert_fail@plt+0xbb70>
   1d298:	movw	r0, #1
   1d29c:	str	r0, [sp, #144]	; 0x90
   1d2a0:	b	1d2bc <__assert_fail@plt+0xbb88>
   1d2a4:	ldr	r0, [fp, #8]
   1d2a8:	movw	r1, #0
   1d2ac:	sub	r0, r1, r0
   1d2b0:	mvn	r1, #0
   1d2b4:	udiv	r0, r1, r0
   1d2b8:	str	r0, [sp, #144]	; 0x90
   1d2bc:	ldr	r0, [sp, #144]	; 0x90
   1d2c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2c4:	mvn	r2, #0
   1d2c8:	sub	r1, r2, r1
   1d2cc:	cmp	r0, r1
   1d2d0:	bls	1d3ec <__assert_fail@plt+0xbcb8>
   1d2d4:	b	1d400 <__assert_fail@plt+0xbccc>
   1d2d8:	b	1d2dc <__assert_fail@plt+0xbba8>
   1d2dc:	b	1d334 <__assert_fail@plt+0xbc00>
   1d2e0:	b	1d334 <__assert_fail@plt+0xbc00>
   1d2e4:	ldr	r0, [fp, #8]
   1d2e8:	cmn	r0, #1
   1d2ec:	bne	1d334 <__assert_fail@plt+0xbc00>
   1d2f0:	b	1d2f4 <__assert_fail@plt+0xbbc0>
   1d2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2f8:	add	r0, r0, #0
   1d2fc:	movw	r1, #0
   1d300:	cmp	r1, r0
   1d304:	blt	1d3ec <__assert_fail@plt+0xbcb8>
   1d308:	b	1d400 <__assert_fail@plt+0xbccc>
   1d30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d310:	movw	r1, #0
   1d314:	cmp	r1, r0
   1d318:	bge	1d400 <__assert_fail@plt+0xbccc>
   1d31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d320:	sub	r0, r0, #1
   1d324:	mvn	r1, #0
   1d328:	cmp	r1, r0
   1d32c:	blt	1d3ec <__assert_fail@plt+0xbcb8>
   1d330:	b	1d400 <__assert_fail@plt+0xbccc>
   1d334:	ldr	r0, [fp, #8]
   1d338:	movw	r1, #0
   1d33c:	sdiv	r0, r1, r0
   1d340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d344:	cmp	r0, r1
   1d348:	blt	1d3ec <__assert_fail@plt+0xbcb8>
   1d34c:	b	1d400 <__assert_fail@plt+0xbccc>
   1d350:	ldr	r0, [fp, #8]
   1d354:	cmp	r0, #0
   1d358:	bne	1d360 <__assert_fail@plt+0xbc2c>
   1d35c:	b	1d400 <__assert_fail@plt+0xbccc>
   1d360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d364:	cmp	r0, #0
   1d368:	bge	1d3d4 <__assert_fail@plt+0xbca0>
   1d36c:	b	1d370 <__assert_fail@plt+0xbc3c>
   1d370:	b	1d3b8 <__assert_fail@plt+0xbc84>
   1d374:	b	1d3b8 <__assert_fail@plt+0xbc84>
   1d378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d37c:	cmn	r0, #1
   1d380:	bne	1d3b8 <__assert_fail@plt+0xbc84>
   1d384:	b	1d388 <__assert_fail@plt+0xbc54>
   1d388:	ldr	r0, [fp, #8]
   1d38c:	add	r0, r0, #0
   1d390:	movw	r1, #0
   1d394:	cmp	r1, r0
   1d398:	blt	1d3ec <__assert_fail@plt+0xbcb8>
   1d39c:	b	1d400 <__assert_fail@plt+0xbccc>
   1d3a0:	ldr	r0, [fp, #8]
   1d3a4:	sub	r0, r0, #1
   1d3a8:	mvn	r1, #0
   1d3ac:	cmp	r1, r0
   1d3b0:	blt	1d3ec <__assert_fail@plt+0xbcb8>
   1d3b4:	b	1d400 <__assert_fail@plt+0xbccc>
   1d3b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3bc:	movw	r1, #0
   1d3c0:	sdiv	r0, r1, r0
   1d3c4:	ldr	r1, [fp, #8]
   1d3c8:	cmp	r0, r1
   1d3cc:	blt	1d3ec <__assert_fail@plt+0xbcb8>
   1d3d0:	b	1d400 <__assert_fail@plt+0xbccc>
   1d3d4:	ldr	r0, [fp, #8]
   1d3d8:	mvn	r1, #0
   1d3dc:	udiv	r0, r1, r0
   1d3e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d3e4:	cmp	r0, r1
   1d3e8:	bcs	1d400 <__assert_fail@plt+0xbccc>
   1d3ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3f0:	ldr	r1, [fp, #8]
   1d3f4:	mul	r0, r0, r1
   1d3f8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3fc:	b	1dca4 <__assert_fail@plt+0xc570>
   1d400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d404:	ldr	r1, [fp, #8]
   1d408:	mul	r0, r0, r1
   1d40c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d410:	b	1dca8 <__assert_fail@plt+0xc574>
   1d414:	b	1d418 <__assert_fail@plt+0xbce4>
   1d418:	b	1d41c <__assert_fail@plt+0xbce8>
   1d41c:	ldr	r0, [fp, #8]
   1d420:	cmp	r0, #0
   1d424:	bge	1d528 <__assert_fail@plt+0xbdf4>
   1d428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d42c:	cmp	r0, #0
   1d430:	bge	1d4bc <__assert_fail@plt+0xbd88>
   1d434:	b	1d438 <__assert_fail@plt+0xbd04>
   1d438:	ldr	r0, [pc, #2192]	; 1dcd0 <__assert_fail@plt+0xc59c>
   1d43c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d440:	ldr	r2, [fp, #8]
   1d444:	sdiv	r0, r0, r2
   1d448:	cmp	r1, r0
   1d44c:	blt	1d5b8 <__assert_fail@plt+0xbe84>
   1d450:	b	1d5cc <__assert_fail@plt+0xbe98>
   1d454:	b	1d458 <__assert_fail@plt+0xbd24>
   1d458:	ldr	r0, [pc, #2164]	; 1dcd4 <__assert_fail@plt+0xc5a0>
   1d45c:	ldr	r1, [fp, #8]
   1d460:	cmp	r1, r0
   1d464:	blt	1d47c <__assert_fail@plt+0xbd48>
   1d468:	b	1d488 <__assert_fail@plt+0xbd54>
   1d46c:	ldr	r0, [fp, #8]
   1d470:	movw	r1, #0
   1d474:	cmp	r1, r0
   1d478:	bge	1d488 <__assert_fail@plt+0xbd54>
   1d47c:	movw	r0, #0
   1d480:	str	r0, [sp, #140]	; 0x8c
   1d484:	b	1d4a0 <__assert_fail@plt+0xbd6c>
   1d488:	ldr	r0, [pc, #2112]	; 1dcd0 <__assert_fail@plt+0xc59c>
   1d48c:	ldr	r1, [fp, #8]
   1d490:	movw	r2, #0
   1d494:	sub	r1, r2, r1
   1d498:	sdiv	r0, r0, r1
   1d49c:	str	r0, [sp, #140]	; 0x8c
   1d4a0:	ldr	r0, [sp, #140]	; 0x8c
   1d4a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4a8:	mvn	r2, #0
   1d4ac:	sub	r1, r2, r1
   1d4b0:	cmp	r0, r1
   1d4b4:	ble	1d5b8 <__assert_fail@plt+0xbe84>
   1d4b8:	b	1d5cc <__assert_fail@plt+0xbe98>
   1d4bc:	ldr	r0, [fp, #8]
   1d4c0:	cmn	r0, #1
   1d4c4:	bne	1d50c <__assert_fail@plt+0xbdd8>
   1d4c8:	b	1d4cc <__assert_fail@plt+0xbd98>
   1d4cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4d0:	add	r0, r0, #-2147483648	; 0x80000000
   1d4d4:	movw	r1, #0
   1d4d8:	cmp	r1, r0
   1d4dc:	blt	1d5b8 <__assert_fail@plt+0xbe84>
   1d4e0:	b	1d5cc <__assert_fail@plt+0xbe98>
   1d4e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4e8:	movw	r1, #0
   1d4ec:	cmp	r1, r0
   1d4f0:	bge	1d5cc <__assert_fail@plt+0xbe98>
   1d4f4:	ldr	r0, [pc, #2004]	; 1dcd0 <__assert_fail@plt+0xc59c>
   1d4f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4fc:	sub	r1, r1, #1
   1d500:	cmp	r0, r1
   1d504:	blt	1d5b8 <__assert_fail@plt+0xbe84>
   1d508:	b	1d5cc <__assert_fail@plt+0xbe98>
   1d50c:	ldr	r0, [pc, #1988]	; 1dcd8 <__assert_fail@plt+0xc5a4>
   1d510:	ldr	r1, [fp, #8]
   1d514:	sdiv	r0, r0, r1
   1d518:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d51c:	cmp	r0, r1
   1d520:	blt	1d5b8 <__assert_fail@plt+0xbe84>
   1d524:	b	1d5cc <__assert_fail@plt+0xbe98>
   1d528:	ldr	r0, [fp, #8]
   1d52c:	cmp	r0, #0
   1d530:	bne	1d538 <__assert_fail@plt+0xbe04>
   1d534:	b	1d5cc <__assert_fail@plt+0xbe98>
   1d538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d53c:	cmp	r0, #0
   1d540:	bge	1d5a0 <__assert_fail@plt+0xbe6c>
   1d544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d548:	cmn	r0, #1
   1d54c:	bne	1d584 <__assert_fail@plt+0xbe50>
   1d550:	b	1d554 <__assert_fail@plt+0xbe20>
   1d554:	ldr	r0, [fp, #8]
   1d558:	add	r0, r0, #-2147483648	; 0x80000000
   1d55c:	movw	r1, #0
   1d560:	cmp	r1, r0
   1d564:	blt	1d5b8 <__assert_fail@plt+0xbe84>
   1d568:	b	1d5cc <__assert_fail@plt+0xbe98>
   1d56c:	ldr	r0, [pc, #1884]	; 1dcd0 <__assert_fail@plt+0xc59c>
   1d570:	ldr	r1, [fp, #8]
   1d574:	sub	r1, r1, #1
   1d578:	cmp	r0, r1
   1d57c:	blt	1d5b8 <__assert_fail@plt+0xbe84>
   1d580:	b	1d5cc <__assert_fail@plt+0xbe98>
   1d584:	ldr	r0, [pc, #1868]	; 1dcd8 <__assert_fail@plt+0xc5a4>
   1d588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d58c:	sdiv	r0, r0, r1
   1d590:	ldr	r1, [fp, #8]
   1d594:	cmp	r0, r1
   1d598:	blt	1d5b8 <__assert_fail@plt+0xbe84>
   1d59c:	b	1d5cc <__assert_fail@plt+0xbe98>
   1d5a0:	ldr	r0, [pc, #1832]	; 1dcd0 <__assert_fail@plt+0xc59c>
   1d5a4:	ldr	r1, [fp, #8]
   1d5a8:	sdiv	r0, r0, r1
   1d5ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5b0:	cmp	r0, r1
   1d5b4:	bge	1d5cc <__assert_fail@plt+0xbe98>
   1d5b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5bc:	ldr	r1, [fp, #8]
   1d5c0:	mul	r0, r0, r1
   1d5c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d5c8:	b	1dca4 <__assert_fail@plt+0xc570>
   1d5cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5d0:	ldr	r1, [fp, #8]
   1d5d4:	mul	r0, r0, r1
   1d5d8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d5dc:	b	1dca8 <__assert_fail@plt+0xc574>
   1d5e0:	ldr	r0, [fp, #8]
   1d5e4:	cmp	r0, #0
   1d5e8:	bge	1d6f8 <__assert_fail@plt+0xbfc4>
   1d5ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5f0:	cmp	r0, #0
   1d5f4:	bge	1d680 <__assert_fail@plt+0xbf4c>
   1d5f8:	b	1d618 <__assert_fail@plt+0xbee4>
   1d5fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d600:	ldr	r1, [fp, #8]
   1d604:	mvn	r2, #0
   1d608:	udiv	r1, r2, r1
   1d60c:	cmp	r0, r1
   1d610:	bcc	1d794 <__assert_fail@plt+0xc060>
   1d614:	b	1d7a8 <__assert_fail@plt+0xc074>
   1d618:	b	1d61c <__assert_fail@plt+0xbee8>
   1d61c:	ldr	r0, [pc, #1712]	; 1dcd4 <__assert_fail@plt+0xc5a0>
   1d620:	ldr	r1, [fp, #8]
   1d624:	cmp	r1, r0
   1d628:	blt	1d640 <__assert_fail@plt+0xbf0c>
   1d62c:	b	1d64c <__assert_fail@plt+0xbf18>
   1d630:	ldr	r0, [fp, #8]
   1d634:	movw	r1, #0
   1d638:	cmp	r1, r0
   1d63c:	bge	1d64c <__assert_fail@plt+0xbf18>
   1d640:	movw	r0, #1
   1d644:	str	r0, [sp, #136]	; 0x88
   1d648:	b	1d664 <__assert_fail@plt+0xbf30>
   1d64c:	ldr	r0, [fp, #8]
   1d650:	movw	r1, #0
   1d654:	sub	r0, r1, r0
   1d658:	mvn	r1, #0
   1d65c:	udiv	r0, r1, r0
   1d660:	str	r0, [sp, #136]	; 0x88
   1d664:	ldr	r0, [sp, #136]	; 0x88
   1d668:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d66c:	mvn	r2, #0
   1d670:	sub	r1, r2, r1
   1d674:	cmp	r0, r1
   1d678:	bls	1d794 <__assert_fail@plt+0xc060>
   1d67c:	b	1d7a8 <__assert_fail@plt+0xc074>
   1d680:	b	1d684 <__assert_fail@plt+0xbf50>
   1d684:	b	1d6dc <__assert_fail@plt+0xbfa8>
   1d688:	b	1d6dc <__assert_fail@plt+0xbfa8>
   1d68c:	ldr	r0, [fp, #8]
   1d690:	cmn	r0, #1
   1d694:	bne	1d6dc <__assert_fail@plt+0xbfa8>
   1d698:	b	1d69c <__assert_fail@plt+0xbf68>
   1d69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6a0:	add	r0, r0, #0
   1d6a4:	movw	r1, #0
   1d6a8:	cmp	r1, r0
   1d6ac:	blt	1d794 <__assert_fail@plt+0xc060>
   1d6b0:	b	1d7a8 <__assert_fail@plt+0xc074>
   1d6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6b8:	movw	r1, #0
   1d6bc:	cmp	r1, r0
   1d6c0:	bge	1d7a8 <__assert_fail@plt+0xc074>
   1d6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6c8:	sub	r0, r0, #1
   1d6cc:	mvn	r1, #0
   1d6d0:	cmp	r1, r0
   1d6d4:	blt	1d794 <__assert_fail@plt+0xc060>
   1d6d8:	b	1d7a8 <__assert_fail@plt+0xc074>
   1d6dc:	ldr	r0, [fp, #8]
   1d6e0:	movw	r1, #0
   1d6e4:	sdiv	r0, r1, r0
   1d6e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6ec:	cmp	r0, r1
   1d6f0:	blt	1d794 <__assert_fail@plt+0xc060>
   1d6f4:	b	1d7a8 <__assert_fail@plt+0xc074>
   1d6f8:	ldr	r0, [fp, #8]
   1d6fc:	cmp	r0, #0
   1d700:	bne	1d708 <__assert_fail@plt+0xbfd4>
   1d704:	b	1d7a8 <__assert_fail@plt+0xc074>
   1d708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d70c:	cmp	r0, #0
   1d710:	bge	1d77c <__assert_fail@plt+0xc048>
   1d714:	b	1d718 <__assert_fail@plt+0xbfe4>
   1d718:	b	1d760 <__assert_fail@plt+0xc02c>
   1d71c:	b	1d760 <__assert_fail@plt+0xc02c>
   1d720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d724:	cmn	r0, #1
   1d728:	bne	1d760 <__assert_fail@plt+0xc02c>
   1d72c:	b	1d730 <__assert_fail@plt+0xbffc>
   1d730:	ldr	r0, [fp, #8]
   1d734:	add	r0, r0, #0
   1d738:	movw	r1, #0
   1d73c:	cmp	r1, r0
   1d740:	blt	1d794 <__assert_fail@plt+0xc060>
   1d744:	b	1d7a8 <__assert_fail@plt+0xc074>
   1d748:	ldr	r0, [fp, #8]
   1d74c:	sub	r0, r0, #1
   1d750:	mvn	r1, #0
   1d754:	cmp	r1, r0
   1d758:	blt	1d794 <__assert_fail@plt+0xc060>
   1d75c:	b	1d7a8 <__assert_fail@plt+0xc074>
   1d760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d764:	movw	r1, #0
   1d768:	sdiv	r0, r1, r0
   1d76c:	ldr	r1, [fp, #8]
   1d770:	cmp	r0, r1
   1d774:	blt	1d794 <__assert_fail@plt+0xc060>
   1d778:	b	1d7a8 <__assert_fail@plt+0xc074>
   1d77c:	ldr	r0, [fp, #8]
   1d780:	mvn	r1, #0
   1d784:	udiv	r0, r1, r0
   1d788:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d78c:	cmp	r0, r1
   1d790:	bcs	1d7a8 <__assert_fail@plt+0xc074>
   1d794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d798:	ldr	r1, [fp, #8]
   1d79c:	mul	r0, r0, r1
   1d7a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d7a4:	b	1dca4 <__assert_fail@plt+0xc570>
   1d7a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7ac:	ldr	r1, [fp, #8]
   1d7b0:	mul	r0, r0, r1
   1d7b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d7b8:	b	1dca8 <__assert_fail@plt+0xc574>
   1d7bc:	b	1d7c0 <__assert_fail@plt+0xc08c>
   1d7c0:	ldr	r0, [fp, #8]
   1d7c4:	cmp	r0, #0
   1d7c8:	bge	1d950 <__assert_fail@plt+0xc21c>
   1d7cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7d0:	cmp	r0, #0
   1d7d4:	bge	1d8bc <__assert_fail@plt+0xc188>
   1d7d8:	b	1d7dc <__assert_fail@plt+0xc0a8>
   1d7dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7e0:	ldr	r1, [fp, #8]
   1d7e4:	asr	r3, r1, #31
   1d7e8:	mvn	r2, #0
   1d7ec:	mvn	ip, #-2147483648	; 0x80000000
   1d7f0:	str	r0, [sp, #132]	; 0x84
   1d7f4:	mov	r0, r2
   1d7f8:	str	r1, [sp, #128]	; 0x80
   1d7fc:	mov	r1, ip
   1d800:	ldr	r2, [sp, #128]	; 0x80
   1d804:	bl	22a38 <__assert_fail@plt+0x11304>
   1d808:	ldr	r2, [sp, #132]	; 0x84
   1d80c:	subs	r0, r2, r0
   1d810:	rscs	r1, r1, r2, asr #31
   1d814:	str	r0, [sp, #124]	; 0x7c
   1d818:	str	r1, [sp, #120]	; 0x78
   1d81c:	blt	1da30 <__assert_fail@plt+0xc2fc>
   1d820:	b	1da44 <__assert_fail@plt+0xc310>
   1d824:	b	1d828 <__assert_fail@plt+0xc0f4>
   1d828:	ldr	r0, [pc, #1188]	; 1dcd4 <__assert_fail@plt+0xc5a0>
   1d82c:	ldr	r1, [fp, #8]
   1d830:	cmp	r1, r0
   1d834:	blt	1d84c <__assert_fail@plt+0xc118>
   1d838:	b	1d860 <__assert_fail@plt+0xc12c>
   1d83c:	ldr	r0, [fp, #8]
   1d840:	movw	r1, #0
   1d844:	cmp	r1, r0
   1d848:	bge	1d860 <__assert_fail@plt+0xc12c>
   1d84c:	mov	r0, #0
   1d850:	mvn	r1, #0
   1d854:	str	r1, [sp, #116]	; 0x74
   1d858:	str	r0, [sp, #112]	; 0x70
   1d85c:	b	1d894 <__assert_fail@plt+0xc160>
   1d860:	ldr	r0, [fp, #8]
   1d864:	rsb	r0, r0, #0
   1d868:	asr	r3, r0, #31
   1d86c:	mvn	r1, #0
   1d870:	mvn	r2, #-2147483648	; 0x80000000
   1d874:	str	r0, [sp, #108]	; 0x6c
   1d878:	mov	r0, r1
   1d87c:	mov	r1, r2
   1d880:	ldr	r2, [sp, #108]	; 0x6c
   1d884:	bl	22a38 <__assert_fail@plt+0x11304>
   1d888:	str	r0, [sp, #116]	; 0x74
   1d88c:	str	r1, [sp, #112]	; 0x70
   1d890:	b	1d894 <__assert_fail@plt+0xc160>
   1d894:	ldr	r0, [sp, #112]	; 0x70
   1d898:	ldr	r1, [sp, #116]	; 0x74
   1d89c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d8a0:	mvn	r2, r2
   1d8a4:	subs	r1, r2, r1
   1d8a8:	rscs	r0, r0, r2, asr #31
   1d8ac:	str	r1, [sp, #104]	; 0x68
   1d8b0:	str	r0, [sp, #100]	; 0x64
   1d8b4:	bge	1da30 <__assert_fail@plt+0xc2fc>
   1d8b8:	b	1da44 <__assert_fail@plt+0xc310>
   1d8bc:	ldr	r0, [fp, #8]
   1d8c0:	cmn	r0, #1
   1d8c4:	bne	1d910 <__assert_fail@plt+0xc1dc>
   1d8c8:	b	1d8cc <__assert_fail@plt+0xc198>
   1d8cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8d0:	mov	r1, #-2147483648	; 0x80000000
   1d8d4:	add	r1, r1, r0, asr #31
   1d8d8:	rsbs	r0, r0, #0
   1d8dc:	rscs	r1, r1, #0
   1d8e0:	str	r0, [sp, #96]	; 0x60
   1d8e4:	str	r1, [sp, #92]	; 0x5c
   1d8e8:	blt	1da30 <__assert_fail@plt+0xc2fc>
   1d8ec:	b	1da44 <__assert_fail@plt+0xc310>
   1d8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8f4:	movw	r1, #0
   1d8f8:	cmp	r1, r0
   1d8fc:	bge	1da44 <__assert_fail@plt+0xc310>
   1d900:	mov	r0, #0
   1d904:	cmp	r0, #0
   1d908:	bne	1da30 <__assert_fail@plt+0xc2fc>
   1d90c:	b	1da44 <__assert_fail@plt+0xc310>
   1d910:	ldr	r0, [fp, #8]
   1d914:	asr	r3, r0, #31
   1d918:	mov	r1, #0
   1d91c:	mov	r2, #-2147483648	; 0x80000000
   1d920:	str	r0, [sp, #88]	; 0x58
   1d924:	mov	r0, r1
   1d928:	mov	r1, r2
   1d92c:	ldr	r2, [sp, #88]	; 0x58
   1d930:	bl	22a38 <__assert_fail@plt+0x11304>
   1d934:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d938:	subs	r0, r0, r2
   1d93c:	sbcs	r1, r1, r2, asr #31
   1d940:	str	r0, [sp, #84]	; 0x54
   1d944:	str	r1, [sp, #80]	; 0x50
   1d948:	blt	1da30 <__assert_fail@plt+0xc2fc>
   1d94c:	b	1da44 <__assert_fail@plt+0xc310>
   1d950:	ldr	r0, [fp, #8]
   1d954:	cmp	r0, #0
   1d958:	bne	1d960 <__assert_fail@plt+0xc22c>
   1d95c:	b	1da44 <__assert_fail@plt+0xc310>
   1d960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d964:	cmp	r0, #0
   1d968:	bge	1d9f0 <__assert_fail@plt+0xc2bc>
   1d96c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d970:	cmn	r0, #1
   1d974:	bne	1d9b0 <__assert_fail@plt+0xc27c>
   1d978:	b	1d97c <__assert_fail@plt+0xc248>
   1d97c:	ldr	r0, [fp, #8]
   1d980:	mov	r1, #-2147483648	; 0x80000000
   1d984:	add	r1, r1, r0, asr #31
   1d988:	rsbs	r0, r0, #0
   1d98c:	rscs	r1, r1, #0
   1d990:	str	r0, [sp, #76]	; 0x4c
   1d994:	str	r1, [sp, #72]	; 0x48
   1d998:	blt	1da30 <__assert_fail@plt+0xc2fc>
   1d99c:	b	1da44 <__assert_fail@plt+0xc310>
   1d9a0:	mov	r0, #0
   1d9a4:	cmp	r0, #0
   1d9a8:	bne	1da30 <__assert_fail@plt+0xc2fc>
   1d9ac:	b	1da44 <__assert_fail@plt+0xc310>
   1d9b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9b4:	asr	r3, r0, #31
   1d9b8:	mov	r1, #0
   1d9bc:	mov	r2, #-2147483648	; 0x80000000
   1d9c0:	str	r0, [sp, #68]	; 0x44
   1d9c4:	mov	r0, r1
   1d9c8:	mov	r1, r2
   1d9cc:	ldr	r2, [sp, #68]	; 0x44
   1d9d0:	bl	22a38 <__assert_fail@plt+0x11304>
   1d9d4:	ldr	r2, [fp, #8]
   1d9d8:	subs	r0, r0, r2
   1d9dc:	sbcs	r1, r1, r2, asr #31
   1d9e0:	str	r0, [sp, #64]	; 0x40
   1d9e4:	str	r1, [sp, #60]	; 0x3c
   1d9e8:	blt	1da30 <__assert_fail@plt+0xc2fc>
   1d9ec:	b	1da44 <__assert_fail@plt+0xc310>
   1d9f0:	ldr	r0, [fp, #8]
   1d9f4:	asr	r3, r0, #31
   1d9f8:	mvn	r1, #0
   1d9fc:	mvn	r2, #-2147483648	; 0x80000000
   1da00:	str	r0, [sp, #56]	; 0x38
   1da04:	mov	r0, r1
   1da08:	mov	r1, r2
   1da0c:	ldr	r2, [sp, #56]	; 0x38
   1da10:	bl	22a38 <__assert_fail@plt+0x11304>
   1da14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da18:	subs	r0, r0, r2
   1da1c:	sbcs	r1, r1, r2, asr #31
   1da20:	str	r0, [sp, #52]	; 0x34
   1da24:	str	r1, [sp, #48]	; 0x30
   1da28:	bge	1da44 <__assert_fail@plt+0xc310>
   1da2c:	b	1da30 <__assert_fail@plt+0xc2fc>
   1da30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da34:	ldr	r1, [fp, #8]
   1da38:	mul	r0, r0, r1
   1da3c:	str	r0, [fp, #-28]	; 0xffffffe4
   1da40:	b	1dca4 <__assert_fail@plt+0xc570>
   1da44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da48:	ldr	r1, [fp, #8]
   1da4c:	mul	r0, r0, r1
   1da50:	str	r0, [fp, #-28]	; 0xffffffe4
   1da54:	b	1dca8 <__assert_fail@plt+0xc574>
   1da58:	ldr	r0, [fp, #8]
   1da5c:	cmp	r0, #0
   1da60:	bge	1dbc0 <__assert_fail@plt+0xc48c>
   1da64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da68:	cmp	r0, #0
   1da6c:	bge	1db48 <__assert_fail@plt+0xc414>
   1da70:	b	1dab8 <__assert_fail@plt+0xc384>
   1da74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da78:	ldr	r1, [fp, #8]
   1da7c:	asr	r3, r1, #31
   1da80:	mvn	r2, #0
   1da84:	str	r0, [sp, #44]	; 0x2c
   1da88:	mov	r0, r2
   1da8c:	str	r1, [sp, #40]	; 0x28
   1da90:	mov	r1, r2
   1da94:	ldr	r2, [sp, #40]	; 0x28
   1da98:	bl	22b0c <__assert_fail@plt+0x113d8>
   1da9c:	ldr	r2, [sp, #44]	; 0x2c
   1daa0:	subs	r0, r2, r0
   1daa4:	rscs	r1, r1, r2, asr #31
   1daa8:	str	r0, [sp, #36]	; 0x24
   1daac:	str	r1, [sp, #32]
   1dab0:	bcc	1dc7c <__assert_fail@plt+0xc548>
   1dab4:	b	1dc90 <__assert_fail@plt+0xc55c>
   1dab8:	b	1dabc <__assert_fail@plt+0xc388>
   1dabc:	ldr	r0, [pc, #528]	; 1dcd4 <__assert_fail@plt+0xc5a0>
   1dac0:	ldr	r1, [fp, #8]
   1dac4:	cmp	r1, r0
   1dac8:	blt	1dae0 <__assert_fail@plt+0xc3ac>
   1dacc:	b	1daf4 <__assert_fail@plt+0xc3c0>
   1dad0:	ldr	r0, [fp, #8]
   1dad4:	movw	r1, #0
   1dad8:	cmp	r1, r0
   1dadc:	bge	1daf4 <__assert_fail@plt+0xc3c0>
   1dae0:	mov	r0, #1
   1dae4:	mvn	r1, #0
   1dae8:	str	r1, [sp, #28]
   1daec:	str	r0, [sp, #24]
   1daf0:	b	1db20 <__assert_fail@plt+0xc3ec>
   1daf4:	ldr	r0, [fp, #8]
   1daf8:	rsb	r0, r0, #0
   1dafc:	asr	r3, r0, #31
   1db00:	mvn	r1, #0
   1db04:	str	r0, [sp, #20]
   1db08:	mov	r0, r1
   1db0c:	ldr	r2, [sp, #20]
   1db10:	bl	22b0c <__assert_fail@plt+0x113d8>
   1db14:	str	r0, [sp, #28]
   1db18:	str	r1, [sp, #24]
   1db1c:	b	1db20 <__assert_fail@plt+0xc3ec>
   1db20:	ldr	r0, [sp, #24]
   1db24:	ldr	r1, [sp, #28]
   1db28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1db2c:	mvn	r2, r2
   1db30:	subs	r1, r2, r1
   1db34:	rscs	r0, r0, r2, asr #31
   1db38:	str	r1, [sp, #16]
   1db3c:	str	r0, [sp, #12]
   1db40:	bcs	1dc7c <__assert_fail@plt+0xc548>
   1db44:	b	1dc90 <__assert_fail@plt+0xc55c>
   1db48:	b	1db4c <__assert_fail@plt+0xc418>
   1db4c:	b	1dba4 <__assert_fail@plt+0xc470>
   1db50:	b	1dba4 <__assert_fail@plt+0xc470>
   1db54:	ldr	r0, [fp, #8]
   1db58:	cmn	r0, #1
   1db5c:	bne	1dba4 <__assert_fail@plt+0xc470>
   1db60:	b	1db64 <__assert_fail@plt+0xc430>
   1db64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db68:	add	r0, r0, #0
   1db6c:	movw	r1, #0
   1db70:	cmp	r1, r0
   1db74:	blt	1dc7c <__assert_fail@plt+0xc548>
   1db78:	b	1dc90 <__assert_fail@plt+0xc55c>
   1db7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db80:	movw	r1, #0
   1db84:	cmp	r1, r0
   1db88:	bge	1dc90 <__assert_fail@plt+0xc55c>
   1db8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db90:	sub	r0, r0, #1
   1db94:	mvn	r1, #0
   1db98:	cmp	r1, r0
   1db9c:	blt	1dc7c <__assert_fail@plt+0xc548>
   1dba0:	b	1dc90 <__assert_fail@plt+0xc55c>
   1dba4:	ldr	r0, [fp, #8]
   1dba8:	movw	r1, #0
   1dbac:	sdiv	r0, r1, r0
   1dbb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dbb4:	cmp	r0, r1
   1dbb8:	blt	1dc7c <__assert_fail@plt+0xc548>
   1dbbc:	b	1dc90 <__assert_fail@plt+0xc55c>
   1dbc0:	ldr	r0, [fp, #8]
   1dbc4:	cmp	r0, #0
   1dbc8:	bne	1dbd0 <__assert_fail@plt+0xc49c>
   1dbcc:	b	1dc90 <__assert_fail@plt+0xc55c>
   1dbd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbd4:	cmp	r0, #0
   1dbd8:	bge	1dc44 <__assert_fail@plt+0xc510>
   1dbdc:	b	1dbe0 <__assert_fail@plt+0xc4ac>
   1dbe0:	b	1dc28 <__assert_fail@plt+0xc4f4>
   1dbe4:	b	1dc28 <__assert_fail@plt+0xc4f4>
   1dbe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbec:	cmn	r0, #1
   1dbf0:	bne	1dc28 <__assert_fail@plt+0xc4f4>
   1dbf4:	b	1dbf8 <__assert_fail@plt+0xc4c4>
   1dbf8:	ldr	r0, [fp, #8]
   1dbfc:	add	r0, r0, #0
   1dc00:	movw	r1, #0
   1dc04:	cmp	r1, r0
   1dc08:	blt	1dc7c <__assert_fail@plt+0xc548>
   1dc0c:	b	1dc90 <__assert_fail@plt+0xc55c>
   1dc10:	ldr	r0, [fp, #8]
   1dc14:	sub	r0, r0, #1
   1dc18:	mvn	r1, #0
   1dc1c:	cmp	r1, r0
   1dc20:	blt	1dc7c <__assert_fail@plt+0xc548>
   1dc24:	b	1dc90 <__assert_fail@plt+0xc55c>
   1dc28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc2c:	movw	r1, #0
   1dc30:	sdiv	r0, r1, r0
   1dc34:	ldr	r1, [fp, #8]
   1dc38:	cmp	r0, r1
   1dc3c:	blt	1dc7c <__assert_fail@plt+0xc548>
   1dc40:	b	1dc90 <__assert_fail@plt+0xc55c>
   1dc44:	ldr	r0, [fp, #8]
   1dc48:	asr	r3, r0, #31
   1dc4c:	mvn	r1, #0
   1dc50:	str	r0, [sp, #8]
   1dc54:	mov	r0, r1
   1dc58:	ldr	r2, [sp, #8]
   1dc5c:	bl	22b0c <__assert_fail@plt+0x113d8>
   1dc60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dc64:	subs	r0, r0, r2
   1dc68:	sbcs	r1, r1, r2, asr #31
   1dc6c:	str	r0, [sp, #4]
   1dc70:	str	r1, [sp]
   1dc74:	bcs	1dc90 <__assert_fail@plt+0xc55c>
   1dc78:	b	1dc7c <__assert_fail@plt+0xc548>
   1dc7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc80:	ldr	r1, [fp, #8]
   1dc84:	mul	r0, r0, r1
   1dc88:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc8c:	b	1dca4 <__assert_fail@plt+0xc570>
   1dc90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc94:	ldr	r1, [fp, #8]
   1dc98:	mul	r0, r0, r1
   1dc9c:	str	r0, [fp, #-28]	; 0xffffffe4
   1dca0:	b	1dca8 <__assert_fail@plt+0xc574>
   1dca4:	bl	1de80 <__assert_fail@plt+0xc74c>
   1dca8:	ldr	r0, [fp, #-4]
   1dcac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dcb0:	bl	1b13c <__assert_fail@plt+0x9a08>
   1dcb4:	str	r0, [fp, #-4]
   1dcb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcbc:	ldr	r1, [fp, #-8]
   1dcc0:	str	r0, [r1]
   1dcc4:	ldr	r0, [fp, #-4]
   1dcc8:	mov	sp, fp
   1dccc:	pop	{fp, pc}
   1dcd0:	svcvc	0x00ffffff
   1dcd4:	andhi	r0, r0, r1
   1dcd8:	andhi	r0, r0, r0
   1dcdc:			; <UNDEFINED> instruction: 0xffff8000
   1dce0:	push	{fp, lr}
   1dce4:	mov	fp, sp
   1dce8:	sub	sp, sp, #8
   1dcec:	str	r0, [sp, #4]
   1dcf0:	ldr	r0, [sp, #4]
   1dcf4:	movw	r1, #1
   1dcf8:	bl	1dd04 <__assert_fail@plt+0xc5d0>
   1dcfc:	mov	sp, fp
   1dd00:	pop	{fp, pc}
   1dd04:	push	{fp, lr}
   1dd08:	mov	fp, sp
   1dd0c:	sub	sp, sp, #8
   1dd10:	str	r0, [sp, #4]
   1dd14:	str	r1, [sp]
   1dd18:	ldr	r0, [sp, #4]
   1dd1c:	ldr	r1, [sp]
   1dd20:	bl	20398 <__assert_fail@plt+0xec64>
   1dd24:	bl	1b0c8 <__assert_fail@plt+0x9994>
   1dd28:	mov	sp, fp
   1dd2c:	pop	{fp, pc}
   1dd30:	push	{fp, lr}
   1dd34:	mov	fp, sp
   1dd38:	sub	sp, sp, #8
   1dd3c:	str	r0, [sp, #4]
   1dd40:	ldr	r0, [sp, #4]
   1dd44:	movw	r1, #1
   1dd48:	bl	1dd54 <__assert_fail@plt+0xc620>
   1dd4c:	mov	sp, fp
   1dd50:	pop	{fp, pc}
   1dd54:	push	{fp, lr}
   1dd58:	mov	fp, sp
   1dd5c:	sub	sp, sp, #8
   1dd60:	str	r0, [sp, #4]
   1dd64:	str	r1, [sp]
   1dd68:	ldr	r0, [sp, #4]
   1dd6c:	ldr	r1, [sp]
   1dd70:	bl	2084c <__assert_fail@plt+0xf118>
   1dd74:	bl	1b0c8 <__assert_fail@plt+0x9994>
   1dd78:	mov	sp, fp
   1dd7c:	pop	{fp, pc}
   1dd80:	push	{fp, lr}
   1dd84:	mov	fp, sp
   1dd88:	sub	sp, sp, #16
   1dd8c:	str	r0, [fp, #-4]
   1dd90:	str	r1, [sp, #8]
   1dd94:	ldr	r0, [sp, #8]
   1dd98:	bl	1b0a4 <__assert_fail@plt+0x9970>
   1dd9c:	ldr	r1, [fp, #-4]
   1dda0:	ldr	r2, [sp, #8]
   1dda4:	str	r0, [sp, #4]
   1dda8:	bl	11428 <memcpy@plt>
   1ddac:	ldr	r0, [sp, #4]
   1ddb0:	mov	sp, fp
   1ddb4:	pop	{fp, pc}
   1ddb8:	push	{fp, lr}
   1ddbc:	mov	fp, sp
   1ddc0:	sub	sp, sp, #16
   1ddc4:	str	r0, [fp, #-4]
   1ddc8:	str	r1, [sp, #8]
   1ddcc:	ldr	r0, [sp, #8]
   1ddd0:	bl	1b0f8 <__assert_fail@plt+0x99c4>
   1ddd4:	ldr	r1, [fp, #-4]
   1ddd8:	ldr	r2, [sp, #8]
   1dddc:	str	r0, [sp, #4]
   1dde0:	bl	11428 <memcpy@plt>
   1dde4:	ldr	r0, [sp, #4]
   1dde8:	mov	sp, fp
   1ddec:	pop	{fp, pc}
   1ddf0:	push	{fp, lr}
   1ddf4:	mov	fp, sp
   1ddf8:	sub	sp, sp, #16
   1ddfc:	str	r0, [fp, #-4]
   1de00:	str	r1, [sp, #8]
   1de04:	ldr	r0, [sp, #8]
   1de08:	add	r0, r0, #1
   1de0c:	bl	1b0f8 <__assert_fail@plt+0x99c4>
   1de10:	str	r0, [sp, #4]
   1de14:	ldr	r0, [sp, #4]
   1de18:	ldr	r1, [sp, #8]
   1de1c:	add	r0, r0, r1
   1de20:	movw	r1, #0
   1de24:	strb	r1, [r0]
   1de28:	ldr	r0, [sp, #4]
   1de2c:	ldr	r1, [fp, #-4]
   1de30:	ldr	r2, [sp, #8]
   1de34:	str	r0, [sp]
   1de38:	bl	11428 <memcpy@plt>
   1de3c:	ldr	r0, [sp]
   1de40:	mov	sp, fp
   1de44:	pop	{fp, pc}
   1de48:	push	{fp, lr}
   1de4c:	mov	fp, sp
   1de50:	sub	sp, sp, #8
   1de54:	str	r0, [sp, #4]
   1de58:	ldr	r0, [sp, #4]
   1de5c:	ldr	r1, [sp, #4]
   1de60:	str	r0, [sp]
   1de64:	mov	r0, r1
   1de68:	bl	1159c <strlen@plt>
   1de6c:	add	r1, r0, #1
   1de70:	ldr	r0, [sp]
   1de74:	bl	1dd80 <__assert_fail@plt+0xc64c>
   1de78:	mov	sp, fp
   1de7c:	pop	{fp, pc}
   1de80:	push	{fp, lr}
   1de84:	mov	fp, sp
   1de88:	sub	sp, sp, #8
   1de8c:	movw	r0, #20840	; 0x5168
   1de90:	movt	r0, #3
   1de94:	ldr	r0, [r0]
   1de98:	movw	r1, #17232	; 0x4350
   1de9c:	movt	r1, #2
   1dea0:	str	r0, [sp, #4]
   1dea4:	mov	r0, r1
   1dea8:	bl	11590 <gettext@plt>
   1deac:	ldr	r1, [sp, #4]
   1deb0:	str	r0, [sp]
   1deb4:	mov	r0, r1
   1deb8:	movw	r1, #0
   1debc:	movw	r2, #15774	; 0x3d9e
   1dec0:	movt	r2, #2
   1dec4:	ldr	r3, [sp]
   1dec8:	bl	1150c <error@plt>
   1decc:	bl	11710 <abort@plt>
   1ded0:	bx	lr
   1ded4:	push	{fp, lr}
   1ded8:	mov	fp, sp
   1dedc:	sub	sp, sp, #8
   1dee0:	str	r0, [sp, #4]
   1dee4:	str	r1, [sp]
   1dee8:	ldr	r0, [sp, #4]
   1deec:	ldr	r1, [sp]
   1def0:	bl	205d8 <__assert_fail@plt+0xeea4>
   1def4:	cmp	r0, #0
   1def8:	bge	1df00 <__assert_fail@plt+0xc7cc>
   1defc:	bl	1ded0 <__assert_fail@plt+0xc79c>
   1df00:	mov	sp, fp
   1df04:	pop	{fp, pc}
   1df08:	push	{r4, r5, r6, sl, fp, lr}
   1df0c:	add	fp, sp, #16
   1df10:	sub	sp, sp, #112	; 0x70
   1df14:	ldr	ip, [fp, #12]
   1df18:	ldr	lr, [fp, #8]
   1df1c:	ldr	r4, [fp, #24]
   1df20:	ldr	r5, [fp, #20]
   1df24:	ldr	r6, [fp, #16]
   1df28:	str	r0, [fp, #-20]	; 0xffffffec
   1df2c:	str	r1, [fp, #-24]	; 0xffffffe8
   1df30:	str	r3, [fp, #-28]	; 0xffffffe4
   1df34:	str	r2, [fp, #-32]	; 0xffffffe0
   1df38:	str	ip, [fp, #-36]	; 0xffffffdc
   1df3c:	str	lr, [fp, #-40]	; 0xffffffd8
   1df40:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1df48:	ldr	r1, [fp, #16]
   1df4c:	movw	r3, #0
   1df50:	str	r1, [fp, #-60]	; 0xffffffc4
   1df54:	mov	r1, r3
   1df58:	sub	r3, fp, #56	; 0x38
   1df5c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1df60:	str	ip, [sp]
   1df64:	str	r5, [sp, #64]	; 0x40
   1df68:	str	r4, [sp, #60]	; 0x3c
   1df6c:	str	r6, [sp, #56]	; 0x38
   1df70:	bl	1e198 <__assert_fail@plt+0xca64>
   1df74:	str	r0, [fp, #-44]	; 0xffffffd4
   1df78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1df7c:	cmp	r0, #0
   1df80:	bne	1e020 <__assert_fail@plt+0xc8ec>
   1df84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1df88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1df8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1df90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1df94:	subs	r0, r0, r2
   1df98:	sbcs	r1, r1, r3
   1df9c:	str	r0, [sp, #52]	; 0x34
   1dfa0:	str	r1, [sp, #48]	; 0x30
   1dfa4:	bcc	1dfd4 <__assert_fail@plt+0xc8a0>
   1dfa8:	b	1dfac <__assert_fail@plt+0xc878>
   1dfac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dfb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dfb4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1dfb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dfbc:	subs	r0, r0, r2
   1dfc0:	sbcs	r1, r1, r3
   1dfc4:	str	r0, [sp, #44]	; 0x2c
   1dfc8:	str	r1, [sp, #40]	; 0x28
   1dfcc:	bcs	1e01c <__assert_fail@plt+0xc8e8>
   1dfd0:	b	1dfd4 <__assert_fail@plt+0xc8a0>
   1dfd4:	mov	r0, #1
   1dfd8:	str	r0, [fp, #-44]	; 0xffffffd4
   1dfdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dfe0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1dfe4:	subs	r0, r0, #1073741824	; 0x40000000
   1dfe8:	sbcs	r1, r1, #0
   1dfec:	str	r0, [sp, #36]	; 0x24
   1dff0:	str	r1, [sp, #32]
   1dff4:	bcc	1e00c <__assert_fail@plt+0xc8d8>
   1dff8:	b	1dffc <__assert_fail@plt+0xc8c8>
   1dffc:	bl	115f0 <__errno_location@plt>
   1e000:	movw	lr, #75	; 0x4b
   1e004:	str	lr, [r0]
   1e008:	b	1e018 <__assert_fail@plt+0xc8e4>
   1e00c:	bl	115f0 <__errno_location@plt>
   1e010:	movw	lr, #34	; 0x22
   1e014:	str	lr, [r0]
   1e018:	b	1e01c <__assert_fail@plt+0xc8e8>
   1e01c:	b	1e05c <__assert_fail@plt+0xc928>
   1e020:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e024:	cmp	r0, #1
   1e028:	bne	1e03c <__assert_fail@plt+0xc908>
   1e02c:	bl	115f0 <__errno_location@plt>
   1e030:	movw	lr, #75	; 0x4b
   1e034:	str	lr, [r0]
   1e038:	b	1e058 <__assert_fail@plt+0xc924>
   1e03c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e040:	cmp	r0, #3
   1e044:	bne	1e054 <__assert_fail@plt+0xc920>
   1e048:	bl	115f0 <__errno_location@plt>
   1e04c:	movw	lr, #0
   1e050:	str	lr, [r0]
   1e054:	b	1e058 <__assert_fail@plt+0xc924>
   1e058:	b	1e05c <__assert_fail@plt+0xc928>
   1e05c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e060:	cmp	r0, #0
   1e064:	beq	1e100 <__assert_fail@plt+0xc9cc>
   1e068:	ldr	r0, [fp, #24]
   1e06c:	cmp	r0, #0
   1e070:	beq	1e080 <__assert_fail@plt+0xc94c>
   1e074:	ldr	r0, [fp, #24]
   1e078:	str	r0, [sp, #28]
   1e07c:	b	1e08c <__assert_fail@plt+0xc958>
   1e080:	movw	r0, #1
   1e084:	str	r0, [sp, #28]
   1e088:	b	1e08c <__assert_fail@plt+0xc958>
   1e08c:	ldr	r0, [sp, #28]
   1e090:	str	r0, [sp, #24]
   1e094:	bl	115f0 <__errno_location@plt>
   1e098:	ldr	r0, [r0]
   1e09c:	cmp	r0, #22
   1e0a0:	bne	1e0b0 <__assert_fail@plt+0xc97c>
   1e0a4:	movw	r0, #0
   1e0a8:	str	r0, [sp, #20]
   1e0ac:	b	1e0bc <__assert_fail@plt+0xc988>
   1e0b0:	bl	115f0 <__errno_location@plt>
   1e0b4:	ldr	r0, [r0]
   1e0b8:	str	r0, [sp, #20]
   1e0bc:	ldr	r0, [sp, #20]
   1e0c0:	ldr	r3, [fp, #20]
   1e0c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e0c8:	str	r0, [sp, #16]
   1e0cc:	mov	r0, r1
   1e0d0:	str	r3, [sp, #12]
   1e0d4:	bl	1a040 <__assert_fail@plt+0x890c>
   1e0d8:	ldr	r1, [sp, #24]
   1e0dc:	str	r0, [sp, #8]
   1e0e0:	mov	r0, r1
   1e0e4:	ldr	r1, [sp, #16]
   1e0e8:	movw	r2, #13993	; 0x36a9
   1e0ec:	movt	r2, #2
   1e0f0:	ldr	r3, [sp, #12]
   1e0f4:	ldr	lr, [sp, #8]
   1e0f8:	str	lr, [sp]
   1e0fc:	bl	1150c <error@plt>
   1e100:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e104:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1e108:	sub	sp, fp, #16
   1e10c:	pop	{r4, r5, r6, sl, fp, pc}
   1e110:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e114:	add	fp, sp, #24
   1e118:	sub	sp, sp, #56	; 0x38
   1e11c:	ldr	r1, [fp, #12]
   1e120:	ldr	ip, [fp, #8]
   1e124:	ldr	lr, [fp, #24]
   1e128:	ldr	r4, [fp, #20]
   1e12c:	ldr	r5, [fp, #16]
   1e130:	str	r0, [fp, #-28]	; 0xffffffe4
   1e134:	str	r3, [sp, #44]	; 0x2c
   1e138:	str	r2, [sp, #40]	; 0x28
   1e13c:	str	r1, [sp, #36]	; 0x24
   1e140:	str	ip, [sp, #32]
   1e144:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e148:	ldr	r2, [sp, #40]	; 0x28
   1e14c:	ldr	r3, [sp, #44]	; 0x2c
   1e150:	ldr	r1, [sp, #32]
   1e154:	ldr	ip, [sp, #36]	; 0x24
   1e158:	ldr	r6, [fp, #16]
   1e15c:	ldr	r7, [fp, #20]
   1e160:	ldr	r8, [fp, #24]
   1e164:	mov	r9, sp
   1e168:	str	r8, [r9, #16]
   1e16c:	str	r7, [r9, #12]
   1e170:	str	r6, [r9, #8]
   1e174:	str	ip, [r9, #4]
   1e178:	str	r1, [r9]
   1e17c:	mov	r1, #10
   1e180:	str	lr, [sp, #28]
   1e184:	str	r4, [sp, #24]
   1e188:	str	r5, [sp, #20]
   1e18c:	bl	1df08 <__assert_fail@plt+0xc7d4>
   1e190:	sub	sp, fp, #24
   1e194:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e198:	push	{fp, lr}
   1e19c:	mov	fp, sp
   1e1a0:	sub	sp, sp, #88	; 0x58
   1e1a4:	ldr	ip, [fp, #8]
   1e1a8:	str	r0, [fp, #-8]
   1e1ac:	str	r1, [fp, #-12]
   1e1b0:	str	r2, [fp, #-16]
   1e1b4:	str	r3, [fp, #-20]	; 0xffffffec
   1e1b8:	movw	r0, #0
   1e1bc:	str	r0, [sp, #44]	; 0x2c
   1e1c0:	ldr	r1, [fp, #-16]
   1e1c4:	cmp	r0, r1
   1e1c8:	str	ip, [sp, #20]
   1e1cc:	bgt	1e1e0 <__assert_fail@plt+0xcaac>
   1e1d0:	ldr	r0, [fp, #-16]
   1e1d4:	cmp	r0, #36	; 0x24
   1e1d8:	bgt	1e1e0 <__assert_fail@plt+0xcaac>
   1e1dc:	b	1e200 <__assert_fail@plt+0xcacc>
   1e1e0:	movw	r0, #17249	; 0x4361
   1e1e4:	movt	r0, #2
   1e1e8:	movw	r1, #17287	; 0x4387
   1e1ec:	movt	r1, #2
   1e1f0:	movw	r2, #85	; 0x55
   1e1f4:	movw	r3, #17303	; 0x4397
   1e1f8:	movt	r3, #2
   1e1fc:	bl	11734 <__assert_fail@plt>
   1e200:	ldr	r0, [fp, #-12]
   1e204:	movw	r1, #0
   1e208:	cmp	r0, r1
   1e20c:	beq	1e21c <__assert_fail@plt+0xcae8>
   1e210:	ldr	r0, [fp, #-12]
   1e214:	str	r0, [sp, #16]
   1e218:	b	1e228 <__assert_fail@plt+0xcaf4>
   1e21c:	sub	r0, fp, #24
   1e220:	str	r0, [sp, #16]
   1e224:	b	1e228 <__assert_fail@plt+0xcaf4>
   1e228:	ldr	r0, [sp, #16]
   1e22c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e230:	bl	115f0 <__errno_location@plt>
   1e234:	movw	lr, #0
   1e238:	str	lr, [r0]
   1e23c:	ldr	r0, [fp, #-8]
   1e240:	str	r0, [sp, #40]	; 0x28
   1e244:	ldr	r0, [sp, #40]	; 0x28
   1e248:	ldrb	r0, [r0]
   1e24c:	strb	r0, [sp, #39]	; 0x27
   1e250:	bl	11578 <__ctype_b_loc@plt>
   1e254:	ldr	r0, [r0]
   1e258:	ldrb	lr, [sp, #39]	; 0x27
   1e25c:	mov	r1, lr
   1e260:	add	r0, r0, lr, lsl #1
   1e264:	ldrh	r0, [r0]
   1e268:	and	r0, r0, #8192	; 0x2000
   1e26c:	cmp	r0, #0
   1e270:	str	r1, [sp, #12]
   1e274:	beq	1e290 <__assert_fail@plt+0xcb5c>
   1e278:	ldr	r0, [sp, #40]	; 0x28
   1e27c:	add	r1, r0, #1
   1e280:	str	r1, [sp, #40]	; 0x28
   1e284:	ldrb	r0, [r0, #1]
   1e288:	strb	r0, [sp, #39]	; 0x27
   1e28c:	b	1e250 <__assert_fail@plt+0xcb1c>
   1e290:	ldrb	r0, [sp, #39]	; 0x27
   1e294:	cmp	r0, #45	; 0x2d
   1e298:	bne	1e2a8 <__assert_fail@plt+0xcb74>
   1e29c:	movw	r0, #4
   1e2a0:	str	r0, [fp, #-4]
   1e2a4:	b	1e824 <__assert_fail@plt+0xd0f0>
   1e2a8:	ldr	r0, [fp, #-8]
   1e2ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e2b0:	ldr	r2, [fp, #-16]
   1e2b4:	bl	1162c <strtoumax@plt>
   1e2b8:	str	r1, [fp, #-36]	; 0xffffffdc
   1e2bc:	str	r0, [fp, #-40]	; 0xffffffd8
   1e2c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e2c4:	ldr	r0, [r0]
   1e2c8:	ldr	r1, [fp, #-8]
   1e2cc:	cmp	r0, r1
   1e2d0:	bne	1e33c <__assert_fail@plt+0xcc08>
   1e2d4:	ldr	r0, [fp, #8]
   1e2d8:	movw	r1, #0
   1e2dc:	cmp	r0, r1
   1e2e0:	beq	1e32c <__assert_fail@plt+0xcbf8>
   1e2e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e2e8:	ldr	r0, [r0]
   1e2ec:	ldrb	r0, [r0]
   1e2f0:	cmp	r0, #0
   1e2f4:	beq	1e32c <__assert_fail@plt+0xcbf8>
   1e2f8:	ldr	r0, [fp, #8]
   1e2fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e300:	ldr	r1, [r1]
   1e304:	ldrb	r1, [r1]
   1e308:	bl	115b4 <strchr@plt>
   1e30c:	movw	r1, #0
   1e310:	cmp	r0, r1
   1e314:	beq	1e32c <__assert_fail@plt+0xcbf8>
   1e318:	mov	r0, #0
   1e31c:	str	r0, [fp, #-36]	; 0xffffffdc
   1e320:	mov	r0, #1
   1e324:	str	r0, [fp, #-40]	; 0xffffffd8
   1e328:	b	1e338 <__assert_fail@plt+0xcc04>
   1e32c:	movw	r0, #4
   1e330:	str	r0, [fp, #-4]
   1e334:	b	1e824 <__assert_fail@plt+0xd0f0>
   1e338:	b	1e374 <__assert_fail@plt+0xcc40>
   1e33c:	bl	115f0 <__errno_location@plt>
   1e340:	ldr	r0, [r0]
   1e344:	cmp	r0, #0
   1e348:	beq	1e370 <__assert_fail@plt+0xcc3c>
   1e34c:	bl	115f0 <__errno_location@plt>
   1e350:	ldr	r0, [r0]
   1e354:	cmp	r0, #34	; 0x22
   1e358:	beq	1e368 <__assert_fail@plt+0xcc34>
   1e35c:	movw	r0, #4
   1e360:	str	r0, [fp, #-4]
   1e364:	b	1e824 <__assert_fail@plt+0xd0f0>
   1e368:	movw	r0, #1
   1e36c:	str	r0, [sp, #44]	; 0x2c
   1e370:	b	1e374 <__assert_fail@plt+0xcc40>
   1e374:	ldr	r0, [fp, #8]
   1e378:	movw	r1, #0
   1e37c:	cmp	r0, r1
   1e380:	bne	1e3a4 <__assert_fail@plt+0xcc70>
   1e384:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e388:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e38c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e390:	str	r1, [r2, #4]
   1e394:	str	r0, [r2]
   1e398:	ldr	r0, [sp, #44]	; 0x2c
   1e39c:	str	r0, [fp, #-4]
   1e3a0:	b	1e824 <__assert_fail@plt+0xd0f0>
   1e3a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e3a8:	ldr	r0, [r0]
   1e3ac:	ldrb	r0, [r0]
   1e3b0:	cmp	r0, #0
   1e3b4:	beq	1e808 <__assert_fail@plt+0xd0d4>
   1e3b8:	movw	r0, #1024	; 0x400
   1e3bc:	str	r0, [sp, #32]
   1e3c0:	movw	r0, #1
   1e3c4:	str	r0, [sp, #28]
   1e3c8:	ldr	r0, [fp, #8]
   1e3cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e3d0:	ldr	r1, [r1]
   1e3d4:	ldrb	r1, [r1]
   1e3d8:	bl	115b4 <strchr@plt>
   1e3dc:	movw	r1, #0
   1e3e0:	cmp	r0, r1
   1e3e4:	bne	1e40c <__assert_fail@plt+0xccd8>
   1e3e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e3ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e3f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e3f4:	str	r1, [r2, #4]
   1e3f8:	str	r0, [r2]
   1e3fc:	ldr	r0, [sp, #44]	; 0x2c
   1e400:	orr	r0, r0, #2
   1e404:	str	r0, [fp, #-4]
   1e408:	b	1e824 <__assert_fail@plt+0xd0f0>
   1e40c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e410:	ldr	r0, [r0]
   1e414:	ldrb	r0, [r0]
   1e418:	sub	r0, r0, #69	; 0x45
   1e41c:	cmp	r0, #47	; 0x2f
   1e420:	str	r0, [sp, #8]
   1e424:	bhi	1e590 <__assert_fail@plt+0xce5c>
   1e428:	add	r0, pc, #8
   1e42c:	ldr	r1, [sp, #8]
   1e430:	ldr	r0, [r0, r1, lsl #2]
   1e434:	mov	pc, r0
   1e438:	strdeq	lr, [r1], -r8
   1e43c:	muleq	r1, r0, r5
   1e440:	strdeq	lr, [r1], -r8
   1e444:	muleq	r1, r0, r5
   1e448:	muleq	r1, r0, r5
   1e44c:	muleq	r1, r0, r5
   1e450:	strdeq	lr, [r1], -r8
   1e454:	muleq	r1, r0, r5
   1e458:	strdeq	lr, [r1], -r8
   1e45c:	muleq	r1, r0, r5
   1e460:	muleq	r1, r0, r5
   1e464:	strdeq	lr, [r1], -r8
   1e468:	muleq	r1, r0, r5
   1e46c:	muleq	r1, r0, r5
   1e470:	muleq	r1, r0, r5
   1e474:	strdeq	lr, [r1], -r8
   1e478:	muleq	r1, r0, r5
   1e47c:	muleq	r1, r0, r5
   1e480:	muleq	r1, r0, r5
   1e484:	muleq	r1, r0, r5
   1e488:	strdeq	lr, [r1], -r8
   1e48c:	strdeq	lr, [r1], -r8
   1e490:	muleq	r1, r0, r5
   1e494:	muleq	r1, r0, r5
   1e498:	muleq	r1, r0, r5
   1e49c:	muleq	r1, r0, r5
   1e4a0:	muleq	r1, r0, r5
   1e4a4:	muleq	r1, r0, r5
   1e4a8:	muleq	r1, r0, r5
   1e4ac:	muleq	r1, r0, r5
   1e4b0:	muleq	r1, r0, r5
   1e4b4:	muleq	r1, r0, r5
   1e4b8:	muleq	r1, r0, r5
   1e4bc:	muleq	r1, r0, r5
   1e4c0:	strdeq	lr, [r1], -r8
   1e4c4:	muleq	r1, r0, r5
   1e4c8:	muleq	r1, r0, r5
   1e4cc:	muleq	r1, r0, r5
   1e4d0:	strdeq	lr, [r1], -r8
   1e4d4:	muleq	r1, r0, r5
   1e4d8:	strdeq	lr, [r1], -r8
   1e4dc:	muleq	r1, r0, r5
   1e4e0:	muleq	r1, r0, r5
   1e4e4:	muleq	r1, r0, r5
   1e4e8:	muleq	r1, r0, r5
   1e4ec:	muleq	r1, r0, r5
   1e4f0:	muleq	r1, r0, r5
   1e4f4:	strdeq	lr, [r1], -r8
   1e4f8:	ldr	r0, [fp, #8]
   1e4fc:	movw	r1, #48	; 0x30
   1e500:	bl	115b4 <strchr@plt>
   1e504:	movw	r1, #0
   1e508:	cmp	r0, r1
   1e50c:	beq	1e58c <__assert_fail@plt+0xce58>
   1e510:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e514:	ldr	r0, [r0]
   1e518:	ldrb	r0, [r0, #1]
   1e51c:	mov	r1, r0
   1e520:	cmp	r0, #66	; 0x42
   1e524:	str	r1, [sp, #4]
   1e528:	beq	1e574 <__assert_fail@plt+0xce40>
   1e52c:	b	1e530 <__assert_fail@plt+0xcdfc>
   1e530:	ldr	r0, [sp, #4]
   1e534:	cmp	r0, #68	; 0x44
   1e538:	beq	1e574 <__assert_fail@plt+0xce40>
   1e53c:	b	1e540 <__assert_fail@plt+0xce0c>
   1e540:	ldr	r0, [sp, #4]
   1e544:	cmp	r0, #105	; 0x69
   1e548:	bne	1e588 <__assert_fail@plt+0xce54>
   1e54c:	b	1e550 <__assert_fail@plt+0xce1c>
   1e550:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e554:	ldr	r0, [r0]
   1e558:	ldrb	r0, [r0, #2]
   1e55c:	cmp	r0, #66	; 0x42
   1e560:	bne	1e570 <__assert_fail@plt+0xce3c>
   1e564:	ldr	r0, [sp, #28]
   1e568:	add	r0, r0, #2
   1e56c:	str	r0, [sp, #28]
   1e570:	b	1e588 <__assert_fail@plt+0xce54>
   1e574:	movw	r0, #1000	; 0x3e8
   1e578:	str	r0, [sp, #32]
   1e57c:	ldr	r0, [sp, #28]
   1e580:	add	r0, r0, #1
   1e584:	str	r0, [sp, #28]
   1e588:	b	1e58c <__assert_fail@plt+0xce58>
   1e58c:	b	1e590 <__assert_fail@plt+0xce5c>
   1e590:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e594:	ldr	r0, [r0]
   1e598:	ldrb	r0, [r0]
   1e59c:	sub	r0, r0, #66	; 0x42
   1e5a0:	cmp	r0, #53	; 0x35
   1e5a4:	str	r0, [sp]
   1e5a8:	bhi	1e79c <__assert_fail@plt+0xd068>
   1e5ac:	add	r0, pc, #8
   1e5b0:	ldr	r1, [sp]
   1e5b4:	ldr	r0, [r0, r1, lsl #2]
   1e5b8:	mov	pc, r0
   1e5bc:	andeq	lr, r1, r8, lsr #13
   1e5c0:	muleq	r1, ip, r7
   1e5c4:	muleq	r1, ip, r7
   1e5c8:	andeq	lr, r1, r8, asr #13
   1e5cc:	muleq	r1, ip, r7
   1e5d0:	andeq	lr, r1, r0, ror #13
   1e5d4:	muleq	r1, ip, r7
   1e5d8:	muleq	r1, ip, r7
   1e5dc:	muleq	r1, ip, r7
   1e5e0:	strdeq	lr, [r1], -r8
   1e5e4:	muleq	r1, ip, r7
   1e5e8:	andeq	lr, r1, r0, lsl r7
   1e5ec:	muleq	r1, ip, r7
   1e5f0:	muleq	r1, ip, r7
   1e5f4:	andeq	lr, r1, r8, lsr #14
   1e5f8:	muleq	r1, ip, r7
   1e5fc:	muleq	r1, ip, r7
   1e600:	muleq	r1, ip, r7
   1e604:	andeq	lr, r1, r0, asr #14
   1e608:	muleq	r1, ip, r7
   1e60c:	muleq	r1, ip, r7
   1e610:	muleq	r1, ip, r7
   1e614:	muleq	r1, ip, r7
   1e618:	andeq	lr, r1, ip, ror #14
   1e61c:	andeq	lr, r1, r4, lsl #15
   1e620:	muleq	r1, ip, r7
   1e624:	muleq	r1, ip, r7
   1e628:	muleq	r1, ip, r7
   1e62c:	muleq	r1, ip, r7
   1e630:	muleq	r1, ip, r7
   1e634:	muleq	r1, ip, r7
   1e638:	muleq	r1, ip, r7
   1e63c:	muleq	r1, r4, r6
   1e640:			; <UNDEFINED> instruction: 0x0001e6bc
   1e644:	muleq	r1, ip, r7
   1e648:	muleq	r1, ip, r7
   1e64c:	muleq	r1, ip, r7
   1e650:	andeq	lr, r1, r0, ror #13
   1e654:	muleq	r1, ip, r7
   1e658:	muleq	r1, ip, r7
   1e65c:	muleq	r1, ip, r7
   1e660:	strdeq	lr, [r1], -r8
   1e664:	muleq	r1, ip, r7
   1e668:	andeq	lr, r1, r0, lsl r7
   1e66c:	muleq	r1, ip, r7
   1e670:	muleq	r1, ip, r7
   1e674:	muleq	r1, ip, r7
   1e678:	muleq	r1, ip, r7
   1e67c:	muleq	r1, ip, r7
   1e680:	muleq	r1, ip, r7
   1e684:	andeq	lr, r1, r0, asr #14
   1e688:	muleq	r1, ip, r7
   1e68c:	muleq	r1, ip, r7
   1e690:	andeq	lr, r1, r8, asr r7
   1e694:	sub	r0, fp, #40	; 0x28
   1e698:	movw	r1, #512	; 0x200
   1e69c:	bl	1e830 <__assert_fail@plt+0xd0fc>
   1e6a0:	str	r0, [sp, #24]
   1e6a4:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e6a8:	sub	r0, fp, #40	; 0x28
   1e6ac:	movw	r1, #1024	; 0x400
   1e6b0:	bl	1e830 <__assert_fail@plt+0xd0fc>
   1e6b4:	str	r0, [sp, #24]
   1e6b8:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e6bc:	movw	r0, #0
   1e6c0:	str	r0, [sp, #24]
   1e6c4:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e6c8:	ldr	r1, [sp, #32]
   1e6cc:	sub	r0, fp, #40	; 0x28
   1e6d0:	movw	r2, #6
   1e6d4:	bl	20338 <__assert_fail@plt+0xec04>
   1e6d8:	str	r0, [sp, #24]
   1e6dc:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e6e0:	ldr	r1, [sp, #32]
   1e6e4:	sub	r0, fp, #40	; 0x28
   1e6e8:	movw	r2, #3
   1e6ec:	bl	20338 <__assert_fail@plt+0xec04>
   1e6f0:	str	r0, [sp, #24]
   1e6f4:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e6f8:	ldr	r1, [sp, #32]
   1e6fc:	sub	r0, fp, #40	; 0x28
   1e700:	movw	r2, #1
   1e704:	bl	20338 <__assert_fail@plt+0xec04>
   1e708:	str	r0, [sp, #24]
   1e70c:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e710:	ldr	r1, [sp, #32]
   1e714:	sub	r0, fp, #40	; 0x28
   1e718:	movw	r2, #2
   1e71c:	bl	20338 <__assert_fail@plt+0xec04>
   1e720:	str	r0, [sp, #24]
   1e724:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e728:	ldr	r1, [sp, #32]
   1e72c:	sub	r0, fp, #40	; 0x28
   1e730:	movw	r2, #5
   1e734:	bl	20338 <__assert_fail@plt+0xec04>
   1e738:	str	r0, [sp, #24]
   1e73c:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e740:	ldr	r1, [sp, #32]
   1e744:	sub	r0, fp, #40	; 0x28
   1e748:	movw	r2, #4
   1e74c:	bl	20338 <__assert_fail@plt+0xec04>
   1e750:	str	r0, [sp, #24]
   1e754:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e758:	sub	r0, fp, #40	; 0x28
   1e75c:	movw	r1, #2
   1e760:	bl	1e830 <__assert_fail@plt+0xd0fc>
   1e764:	str	r0, [sp, #24]
   1e768:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e76c:	ldr	r1, [sp, #32]
   1e770:	sub	r0, fp, #40	; 0x28
   1e774:	movw	r2, #8
   1e778:	bl	20338 <__assert_fail@plt+0xec04>
   1e77c:	str	r0, [sp, #24]
   1e780:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e784:	ldr	r1, [sp, #32]
   1e788:	sub	r0, fp, #40	; 0x28
   1e78c:	movw	r2, #7
   1e790:	bl	20338 <__assert_fail@plt+0xec04>
   1e794:	str	r0, [sp, #24]
   1e798:	b	1e7c0 <__assert_fail@plt+0xd08c>
   1e79c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e7a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e7a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e7a8:	str	r1, [r2, #4]
   1e7ac:	str	r0, [r2]
   1e7b0:	ldr	r0, [sp, #44]	; 0x2c
   1e7b4:	orr	r0, r0, #2
   1e7b8:	str	r0, [fp, #-4]
   1e7bc:	b	1e824 <__assert_fail@plt+0xd0f0>
   1e7c0:	ldr	r0, [sp, #24]
   1e7c4:	ldr	r1, [sp, #44]	; 0x2c
   1e7c8:	orr	r0, r1, r0
   1e7cc:	str	r0, [sp, #44]	; 0x2c
   1e7d0:	ldr	r0, [sp, #28]
   1e7d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e7d8:	ldr	r2, [r1]
   1e7dc:	add	r0, r2, r0
   1e7e0:	str	r0, [r1]
   1e7e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e7e8:	ldr	r0, [r0]
   1e7ec:	ldrsb	r0, [r0]
   1e7f0:	cmp	r0, #0
   1e7f4:	beq	1e804 <__assert_fail@plt+0xd0d0>
   1e7f8:	ldr	r0, [sp, #44]	; 0x2c
   1e7fc:	orr	r0, r0, #2
   1e800:	str	r0, [sp, #44]	; 0x2c
   1e804:	b	1e808 <__assert_fail@plt+0xd0d4>
   1e808:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e80c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e810:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e814:	str	r1, [r2, #4]
   1e818:	str	r0, [r2]
   1e81c:	ldr	r0, [sp, #44]	; 0x2c
   1e820:	str	r0, [fp, #-4]
   1e824:	ldr	r0, [fp, #-4]
   1e828:	mov	sp, fp
   1e82c:	pop	{fp, pc}
   1e830:	push	{fp, lr}
   1e834:	mov	fp, sp
   1e838:	sub	sp, sp, #568	; 0x238
   1e83c:	str	r0, [fp, #-8]
   1e840:	str	r1, [fp, #-12]
   1e844:	b	1ed78 <__assert_fail@plt+0xd644>
   1e848:	b	1eaec <__assert_fail@plt+0xd3b8>
   1e84c:	ldr	r0, [fp, #-12]
   1e850:	cmp	r0, #0
   1e854:	bge	1e9cc <__assert_fail@plt+0xd298>
   1e858:	mov	r0, #1
   1e85c:	cmp	r0, #0
   1e860:	bne	1e918 <__assert_fail@plt+0xd1e4>
   1e864:	b	1e868 <__assert_fail@plt+0xd134>
   1e868:	b	1e86c <__assert_fail@plt+0xd138>
   1e86c:	ldr	r0, [fp, #-8]
   1e870:	ldr	r1, [r0]
   1e874:	ldr	r0, [r0, #4]
   1e878:	ldr	r2, [fp, #-12]
   1e87c:	mov	r3, #127	; 0x7f
   1e880:	sdiv	r2, r3, r2
   1e884:	subs	r1, r1, r2
   1e888:	sbcs	r0, r0, r2, asr #31
   1e88c:	str	r1, [fp, #-28]	; 0xffffffe4
   1e890:	str	r0, [fp, #-32]	; 0xffffffe0
   1e894:	bcc	1eaa4 <__assert_fail@plt+0xd370>
   1e898:	b	1eac8 <__assert_fail@plt+0xd394>
   1e89c:	b	1e8a0 <__assert_fail@plt+0xd16c>
   1e8a0:	ldr	r0, [pc, #4088]	; 1f8a0 <__assert_fail@plt+0xe16c>
   1e8a4:	ldr	r1, [fp, #-12]
   1e8a8:	cmp	r1, r0
   1e8ac:	blt	1e8c4 <__assert_fail@plt+0xd190>
   1e8b0:	b	1e8d0 <__assert_fail@plt+0xd19c>
   1e8b4:	ldr	r0, [fp, #-12]
   1e8b8:	movw	r1, #0
   1e8bc:	cmp	r1, r0
   1e8c0:	bge	1e8d0 <__assert_fail@plt+0xd19c>
   1e8c4:	movw	r0, #0
   1e8c8:	str	r0, [fp, #-36]	; 0xffffffdc
   1e8cc:	b	1e8e8 <__assert_fail@plt+0xd1b4>
   1e8d0:	ldr	r0, [fp, #-12]
   1e8d4:	movw	r1, #0
   1e8d8:	sub	r0, r1, r0
   1e8dc:	movw	r1, #127	; 0x7f
   1e8e0:	sdiv	r0, r1, r0
   1e8e4:	str	r0, [fp, #-36]	; 0xffffffdc
   1e8e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e8ec:	ldr	r1, [fp, #-8]
   1e8f0:	ldr	r2, [r1]
   1e8f4:	ldr	r1, [r1, #4]
   1e8f8:	mvn	r1, r1
   1e8fc:	mvn	r2, r2
   1e900:	subs	r2, r2, r0
   1e904:	sbcs	r0, r1, r0, asr #31
   1e908:	str	r2, [fp, #-40]	; 0xffffffd8
   1e90c:	str	r0, [fp, #-44]	; 0xffffffd4
   1e910:	bcs	1eaa4 <__assert_fail@plt+0xd370>
   1e914:	b	1eac8 <__assert_fail@plt+0xd394>
   1e918:	b	1e91c <__assert_fail@plt+0xd1e8>
   1e91c:	b	1e99c <__assert_fail@plt+0xd268>
   1e920:	b	1e99c <__assert_fail@plt+0xd268>
   1e924:	ldr	r0, [fp, #-12]
   1e928:	cmn	r0, #1
   1e92c:	bne	1e99c <__assert_fail@plt+0xd268>
   1e930:	b	1e954 <__assert_fail@plt+0xd220>
   1e934:	ldr	r0, [fp, #-8]
   1e938:	ldr	r1, [r0]
   1e93c:	ldr	r0, [r0, #4]
   1e940:	eor	r1, r1, #128	; 0x80
   1e944:	orr	r0, r1, r0
   1e948:	cmp	r0, #0
   1e94c:	bne	1eaa4 <__assert_fail@plt+0xd370>
   1e950:	b	1eac8 <__assert_fail@plt+0xd394>
   1e954:	ldr	r0, [fp, #-8]
   1e958:	ldr	r1, [r0]
   1e95c:	ldr	r0, [r0, #4]
   1e960:	orr	r0, r1, r0
   1e964:	cmp	r0, #0
   1e968:	beq	1eac8 <__assert_fail@plt+0xd394>
   1e96c:	b	1e970 <__assert_fail@plt+0xd23c>
   1e970:	ldr	r0, [fp, #-8]
   1e974:	ldr	r1, [r0]
   1e978:	ldr	r0, [r0, #4]
   1e97c:	subs	r1, r1, #1
   1e980:	sbc	r0, r0, #0
   1e984:	rsbs	r1, r1, #127	; 0x7f
   1e988:	rscs	r0, r0, #0
   1e98c:	str	r1, [fp, #-48]	; 0xffffffd0
   1e990:	str	r0, [fp, #-52]	; 0xffffffcc
   1e994:	bcc	1eaa4 <__assert_fail@plt+0xd370>
   1e998:	b	1eac8 <__assert_fail@plt+0xd394>
   1e99c:	ldr	r0, [fp, #-12]
   1e9a0:	mvn	r1, #127	; 0x7f
   1e9a4:	sdiv	r0, r1, r0
   1e9a8:	ldr	r1, [fp, #-8]
   1e9ac:	ldr	r2, [r1]
   1e9b0:	ldr	r1, [r1, #4]
   1e9b4:	subs	r2, r0, r2
   1e9b8:	rscs	r0, r1, r0, asr #31
   1e9bc:	str	r2, [fp, #-56]	; 0xffffffc8
   1e9c0:	str	r0, [fp, #-60]	; 0xffffffc4
   1e9c4:	bcc	1eaa4 <__assert_fail@plt+0xd370>
   1e9c8:	b	1eac8 <__assert_fail@plt+0xd394>
   1e9cc:	ldr	r0, [fp, #-12]
   1e9d0:	cmp	r0, #0
   1e9d4:	bne	1e9dc <__assert_fail@plt+0xd2a8>
   1e9d8:	b	1eac8 <__assert_fail@plt+0xd394>
   1e9dc:	mov	r0, #1
   1e9e0:	cmp	r0, #0
   1e9e4:	bne	1ea74 <__assert_fail@plt+0xd340>
   1e9e8:	b	1e9ec <__assert_fail@plt+0xd2b8>
   1e9ec:	ldr	r0, [fp, #-8]
   1e9f0:	ldr	r1, [r0]
   1e9f4:	ldr	r0, [r0, #4]
   1e9f8:	and	r0, r1, r0
   1e9fc:	cmn	r0, #1
   1ea00:	bne	1ea40 <__assert_fail@plt+0xd30c>
   1ea04:	b	1ea08 <__assert_fail@plt+0xd2d4>
   1ea08:	b	1ea0c <__assert_fail@plt+0xd2d8>
   1ea0c:	ldr	r0, [fp, #-12]
   1ea10:	mvn	r1, #127	; 0x7f
   1ea14:	add	r0, r0, r1
   1ea18:	movw	r1, #0
   1ea1c:	cmp	r1, r0
   1ea20:	blt	1eaa4 <__assert_fail@plt+0xd370>
   1ea24:	b	1eac8 <__assert_fail@plt+0xd394>
   1ea28:	ldr	r0, [fp, #-12]
   1ea2c:	sub	r0, r0, #1
   1ea30:	movw	r1, #127	; 0x7f
   1ea34:	cmp	r1, r0
   1ea38:	blt	1eaa4 <__assert_fail@plt+0xd370>
   1ea3c:	b	1eac8 <__assert_fail@plt+0xd394>
   1ea40:	ldr	r0, [fp, #-8]
   1ea44:	ldr	r2, [r0]
   1ea48:	ldr	r3, [r0, #4]
   1ea4c:	mvn	r0, #127	; 0x7f
   1ea50:	mvn	r1, #0
   1ea54:	bl	22b0c <__assert_fail@plt+0x113d8>
   1ea58:	ldr	r2, [fp, #-12]
   1ea5c:	subs	r0, r0, r2
   1ea60:	sbcs	r1, r1, r2, asr #31
   1ea64:	str	r0, [fp, #-64]	; 0xffffffc0
   1ea68:	str	r1, [fp, #-68]	; 0xffffffbc
   1ea6c:	bcc	1eaa4 <__assert_fail@plt+0xd370>
   1ea70:	b	1eac8 <__assert_fail@plt+0xd394>
   1ea74:	ldr	r0, [fp, #-12]
   1ea78:	mov	r1, #127	; 0x7f
   1ea7c:	sdiv	r0, r1, r0
   1ea80:	ldr	r1, [fp, #-8]
   1ea84:	ldr	r2, [r1]
   1ea88:	ldr	r1, [r1, #4]
   1ea8c:	subs	r2, r0, r2
   1ea90:	rscs	r0, r1, r0, asr #31
   1ea94:	str	r2, [fp, #-72]	; 0xffffffb8
   1ea98:	str	r0, [fp, #-76]	; 0xffffffb4
   1ea9c:	bcs	1eac8 <__assert_fail@plt+0xd394>
   1eaa0:	b	1eaa4 <__assert_fail@plt+0xd370>
   1eaa4:	ldr	r0, [fp, #-8]
   1eaa8:	ldr	r0, [r0]
   1eaac:	ldr	r1, [fp, #-12]
   1eab0:	mul	r0, r0, r1
   1eab4:	sxtb	r0, r0
   1eab8:	asr	r1, r0, #31
   1eabc:	str	r0, [fp, #-24]	; 0xffffffe8
   1eac0:	str	r1, [fp, #-20]	; 0xffffffec
   1eac4:	b	202ec <__assert_fail@plt+0xebb8>
   1eac8:	ldr	r0, [fp, #-8]
   1eacc:	ldr	r0, [r0]
   1ead0:	ldr	r1, [fp, #-12]
   1ead4:	mul	r0, r0, r1
   1ead8:	sxtb	r0, r0
   1eadc:	asr	r1, r0, #31
   1eae0:	str	r0, [fp, #-24]	; 0xffffffe8
   1eae4:	str	r1, [fp, #-20]	; 0xffffffec
   1eae8:	b	20308 <__assert_fail@plt+0xebd4>
   1eaec:	ldr	r0, [fp, #-12]
   1eaf0:	cmp	r0, #0
   1eaf4:	bge	1ec4c <__assert_fail@plt+0xd518>
   1eaf8:	mov	r0, #1
   1eafc:	cmp	r0, #0
   1eb00:	bne	1ebb8 <__assert_fail@plt+0xd484>
   1eb04:	b	1eb08 <__assert_fail@plt+0xd3d4>
   1eb08:	b	1eb0c <__assert_fail@plt+0xd3d8>
   1eb0c:	ldr	r0, [fp, #-8]
   1eb10:	ldr	r1, [r0]
   1eb14:	ldr	r0, [r0, #4]
   1eb18:	ldr	r2, [fp, #-12]
   1eb1c:	mov	r3, #255	; 0xff
   1eb20:	sdiv	r2, r3, r2
   1eb24:	subs	r1, r1, r2
   1eb28:	sbcs	r0, r0, r2, asr #31
   1eb2c:	str	r1, [fp, #-80]	; 0xffffffb0
   1eb30:	str	r0, [fp, #-84]	; 0xffffffac
   1eb34:	bcc	1ed30 <__assert_fail@plt+0xd5fc>
   1eb38:	b	1ed54 <__assert_fail@plt+0xd620>
   1eb3c:	b	1eb40 <__assert_fail@plt+0xd40c>
   1eb40:	ldr	r0, [pc, #3416]	; 1f8a0 <__assert_fail@plt+0xe16c>
   1eb44:	ldr	r1, [fp, #-12]
   1eb48:	cmp	r1, r0
   1eb4c:	blt	1eb64 <__assert_fail@plt+0xd430>
   1eb50:	b	1eb70 <__assert_fail@plt+0xd43c>
   1eb54:	ldr	r0, [fp, #-12]
   1eb58:	movw	r1, #0
   1eb5c:	cmp	r1, r0
   1eb60:	bge	1eb70 <__assert_fail@plt+0xd43c>
   1eb64:	movw	r0, #0
   1eb68:	str	r0, [fp, #-88]	; 0xffffffa8
   1eb6c:	b	1eb88 <__assert_fail@plt+0xd454>
   1eb70:	ldr	r0, [fp, #-12]
   1eb74:	movw	r1, #0
   1eb78:	sub	r0, r1, r0
   1eb7c:	movw	r1, #255	; 0xff
   1eb80:	sdiv	r0, r1, r0
   1eb84:	str	r0, [fp, #-88]	; 0xffffffa8
   1eb88:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1eb8c:	ldr	r1, [fp, #-8]
   1eb90:	ldr	r2, [r1]
   1eb94:	ldr	r1, [r1, #4]
   1eb98:	mvn	r1, r1
   1eb9c:	mvn	r2, r2
   1eba0:	subs	r2, r2, r0
   1eba4:	sbcs	r0, r1, r0, asr #31
   1eba8:	str	r2, [fp, #-92]	; 0xffffffa4
   1ebac:	str	r0, [fp, #-96]	; 0xffffffa0
   1ebb0:	bcs	1ed30 <__assert_fail@plt+0xd5fc>
   1ebb4:	b	1ed54 <__assert_fail@plt+0xd620>
   1ebb8:	b	1ebbc <__assert_fail@plt+0xd488>
   1ebbc:	b	1ec1c <__assert_fail@plt+0xd4e8>
   1ebc0:	b	1ec1c <__assert_fail@plt+0xd4e8>
   1ebc4:	ldr	r0, [fp, #-12]
   1ebc8:	cmn	r0, #1
   1ebcc:	bne	1ec1c <__assert_fail@plt+0xd4e8>
   1ebd0:	b	1ebf0 <__assert_fail@plt+0xd4bc>
   1ebd4:	ldr	r0, [fp, #-8]
   1ebd8:	ldr	r1, [r0]
   1ebdc:	ldr	r0, [r0, #4]
   1ebe0:	orr	r0, r1, r0
   1ebe4:	cmp	r0, #0
   1ebe8:	bne	1ed30 <__assert_fail@plt+0xd5fc>
   1ebec:	b	1ed54 <__assert_fail@plt+0xd620>
   1ebf0:	ldr	r0, [fp, #-8]
   1ebf4:	ldr	r1, [r0]
   1ebf8:	ldr	r0, [r0, #4]
   1ebfc:	orr	r0, r1, r0
   1ec00:	cmp	r0, #0
   1ec04:	beq	1ed54 <__assert_fail@plt+0xd620>
   1ec08:	b	1ec0c <__assert_fail@plt+0xd4d8>
   1ec0c:	mov	r0, #0
   1ec10:	cmp	r0, #0
   1ec14:	bne	1ed30 <__assert_fail@plt+0xd5fc>
   1ec18:	b	1ed54 <__assert_fail@plt+0xd620>
   1ec1c:	ldr	r0, [fp, #-12]
   1ec20:	mov	r1, #0
   1ec24:	sdiv	r0, r1, r0
   1ec28:	ldr	r1, [fp, #-8]
   1ec2c:	ldr	r2, [r1]
   1ec30:	ldr	r1, [r1, #4]
   1ec34:	subs	r2, r0, r2
   1ec38:	rscs	r0, r1, r0, asr #31
   1ec3c:	str	r2, [fp, #-100]	; 0xffffff9c
   1ec40:	str	r0, [fp, #-104]	; 0xffffff98
   1ec44:	bcc	1ed30 <__assert_fail@plt+0xd5fc>
   1ec48:	b	1ed54 <__assert_fail@plt+0xd620>
   1ec4c:	ldr	r0, [fp, #-12]
   1ec50:	cmp	r0, #0
   1ec54:	bne	1ec5c <__assert_fail@plt+0xd528>
   1ec58:	b	1ed54 <__assert_fail@plt+0xd620>
   1ec5c:	mov	r0, #1
   1ec60:	cmp	r0, #0
   1ec64:	bne	1ed00 <__assert_fail@plt+0xd5cc>
   1ec68:	b	1ec6c <__assert_fail@plt+0xd538>
   1ec6c:	b	1ec74 <__assert_fail@plt+0xd540>
   1ec70:	b	1ec78 <__assert_fail@plt+0xd544>
   1ec74:	b	1ecc8 <__assert_fail@plt+0xd594>
   1ec78:	ldr	r0, [fp, #-8]
   1ec7c:	ldr	r1, [r0]
   1ec80:	ldr	r0, [r0, #4]
   1ec84:	and	r0, r1, r0
   1ec88:	cmn	r0, #1
   1ec8c:	bne	1ecc8 <__assert_fail@plt+0xd594>
   1ec90:	b	1ec94 <__assert_fail@plt+0xd560>
   1ec94:	b	1ec98 <__assert_fail@plt+0xd564>
   1ec98:	ldr	r0, [fp, #-12]
   1ec9c:	add	r0, r0, #0
   1eca0:	movw	r1, #0
   1eca4:	cmp	r1, r0
   1eca8:	blt	1ed30 <__assert_fail@plt+0xd5fc>
   1ecac:	b	1ed54 <__assert_fail@plt+0xd620>
   1ecb0:	ldr	r0, [fp, #-12]
   1ecb4:	sub	r0, r0, #1
   1ecb8:	mvn	r1, #0
   1ecbc:	cmp	r1, r0
   1ecc0:	blt	1ed30 <__assert_fail@plt+0xd5fc>
   1ecc4:	b	1ed54 <__assert_fail@plt+0xd620>
   1ecc8:	ldr	r0, [fp, #-8]
   1eccc:	ldr	r2, [r0]
   1ecd0:	ldr	r3, [r0, #4]
   1ecd4:	mov	r0, #0
   1ecd8:	str	r0, [fp, #-108]	; 0xffffff94
   1ecdc:	ldr	r1, [fp, #-108]	; 0xffffff94
   1ece0:	bl	22b0c <__assert_fail@plt+0x113d8>
   1ece4:	ldr	r2, [fp, #-12]
   1ece8:	subs	r0, r0, r2
   1ecec:	sbcs	r1, r1, r2, asr #31
   1ecf0:	str	r0, [fp, #-112]	; 0xffffff90
   1ecf4:	str	r1, [fp, #-116]	; 0xffffff8c
   1ecf8:	bcc	1ed30 <__assert_fail@plt+0xd5fc>
   1ecfc:	b	1ed54 <__assert_fail@plt+0xd620>
   1ed00:	ldr	r0, [fp, #-12]
   1ed04:	mov	r1, #255	; 0xff
   1ed08:	sdiv	r0, r1, r0
   1ed0c:	ldr	r1, [fp, #-8]
   1ed10:	ldr	r2, [r1]
   1ed14:	ldr	r1, [r1, #4]
   1ed18:	subs	r2, r0, r2
   1ed1c:	rscs	r0, r1, r0, asr #31
   1ed20:	str	r2, [fp, #-120]	; 0xffffff88
   1ed24:	str	r0, [fp, #-124]	; 0xffffff84
   1ed28:	bcs	1ed54 <__assert_fail@plt+0xd620>
   1ed2c:	b	1ed30 <__assert_fail@plt+0xd5fc>
   1ed30:	ldr	r0, [fp, #-8]
   1ed34:	ldr	r0, [r0]
   1ed38:	ldr	r1, [fp, #-12]
   1ed3c:	mul	r0, r0, r1
   1ed40:	uxtb	r0, r0
   1ed44:	mov	r1, #0
   1ed48:	str	r1, [fp, #-20]	; 0xffffffec
   1ed4c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ed50:	b	202ec <__assert_fail@plt+0xebb8>
   1ed54:	ldr	r0, [fp, #-8]
   1ed58:	ldr	r0, [r0]
   1ed5c:	ldr	r1, [fp, #-12]
   1ed60:	mul	r0, r0, r1
   1ed64:	uxtb	r0, r0
   1ed68:	mov	r1, #0
   1ed6c:	str	r1, [fp, #-20]	; 0xffffffec
   1ed70:	str	r0, [fp, #-24]	; 0xffffffe8
   1ed74:	b	20308 <__assert_fail@plt+0xebd4>
   1ed78:	b	1f2b4 <__assert_fail@plt+0xdb80>
   1ed7c:	b	1f028 <__assert_fail@plt+0xd8f4>
   1ed80:	ldr	r0, [fp, #-12]
   1ed84:	cmp	r0, #0
   1ed88:	bge	1ef04 <__assert_fail@plt+0xd7d0>
   1ed8c:	mov	r0, #1
   1ed90:	cmp	r0, #0
   1ed94:	bne	1ee4c <__assert_fail@plt+0xd718>
   1ed98:	b	1ed9c <__assert_fail@plt+0xd668>
   1ed9c:	b	1eda0 <__assert_fail@plt+0xd66c>
   1eda0:	ldr	r0, [fp, #-8]
   1eda4:	ldr	r1, [r0]
   1eda8:	ldr	r0, [r0, #4]
   1edac:	ldr	r2, [fp, #-12]
   1edb0:	movw	r3, #32767	; 0x7fff
   1edb4:	sdiv	r2, r3, r2
   1edb8:	subs	r1, r1, r2
   1edbc:	sbcs	r0, r0, r2, asr #31
   1edc0:	str	r1, [fp, #-128]	; 0xffffff80
   1edc4:	str	r0, [fp, #-132]	; 0xffffff7c
   1edc8:	bcc	1efe0 <__assert_fail@plt+0xd8ac>
   1edcc:	b	1f004 <__assert_fail@plt+0xd8d0>
   1edd0:	b	1edd4 <__assert_fail@plt+0xd6a0>
   1edd4:	ldr	r0, [pc, #2756]	; 1f8a0 <__assert_fail@plt+0xe16c>
   1edd8:	ldr	r1, [fp, #-12]
   1eddc:	cmp	r1, r0
   1ede0:	blt	1edf8 <__assert_fail@plt+0xd6c4>
   1ede4:	b	1ee04 <__assert_fail@plt+0xd6d0>
   1ede8:	ldr	r0, [fp, #-12]
   1edec:	movw	r1, #0
   1edf0:	cmp	r1, r0
   1edf4:	bge	1ee04 <__assert_fail@plt+0xd6d0>
   1edf8:	movw	r0, #0
   1edfc:	str	r0, [fp, #-136]	; 0xffffff78
   1ee00:	b	1ee1c <__assert_fail@plt+0xd6e8>
   1ee04:	ldr	r0, [fp, #-12]
   1ee08:	movw	r1, #0
   1ee0c:	sub	r0, r1, r0
   1ee10:	movw	r1, #32767	; 0x7fff
   1ee14:	sdiv	r0, r1, r0
   1ee18:	str	r0, [fp, #-136]	; 0xffffff78
   1ee1c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ee20:	ldr	r1, [fp, #-8]
   1ee24:	ldr	r2, [r1]
   1ee28:	ldr	r1, [r1, #4]
   1ee2c:	mvn	r1, r1
   1ee30:	mvn	r2, r2
   1ee34:	subs	r2, r2, r0
   1ee38:	sbcs	r0, r1, r0, asr #31
   1ee3c:	str	r2, [fp, #-140]	; 0xffffff74
   1ee40:	str	r0, [fp, #-144]	; 0xffffff70
   1ee44:	bcs	1efe0 <__assert_fail@plt+0xd8ac>
   1ee48:	b	1f004 <__assert_fail@plt+0xd8d0>
   1ee4c:	b	1ee50 <__assert_fail@plt+0xd71c>
   1ee50:	b	1eed0 <__assert_fail@plt+0xd79c>
   1ee54:	b	1eed0 <__assert_fail@plt+0xd79c>
   1ee58:	ldr	r0, [fp, #-12]
   1ee5c:	cmn	r0, #1
   1ee60:	bne	1eed0 <__assert_fail@plt+0xd79c>
   1ee64:	b	1ee88 <__assert_fail@plt+0xd754>
   1ee68:	ldr	r0, [fp, #-8]
   1ee6c:	ldr	r1, [r0]
   1ee70:	ldr	r0, [r0, #4]
   1ee74:	eor	r1, r1, #32768	; 0x8000
   1ee78:	orr	r0, r1, r0
   1ee7c:	cmp	r0, #0
   1ee80:	bne	1efe0 <__assert_fail@plt+0xd8ac>
   1ee84:	b	1f004 <__assert_fail@plt+0xd8d0>
   1ee88:	ldr	r0, [fp, #-8]
   1ee8c:	ldr	r1, [r0]
   1ee90:	ldr	r0, [r0, #4]
   1ee94:	orr	r0, r1, r0
   1ee98:	cmp	r0, #0
   1ee9c:	beq	1f004 <__assert_fail@plt+0xd8d0>
   1eea0:	b	1eea4 <__assert_fail@plt+0xd770>
   1eea4:	ldr	r0, [fp, #-8]
   1eea8:	ldr	r1, [r0]
   1eeac:	ldr	r0, [r0, #4]
   1eeb0:	subs	r1, r1, #1
   1eeb4:	sbc	r0, r0, #0
   1eeb8:	lsr	r1, r1, #15
   1eebc:	orr	r1, r1, r0, lsl #17
   1eec0:	orr	r0, r1, r0, lsr #15
   1eec4:	cmp	r0, #0
   1eec8:	bne	1efe0 <__assert_fail@plt+0xd8ac>
   1eecc:	b	1f004 <__assert_fail@plt+0xd8d0>
   1eed0:	ldr	r0, [fp, #-12]
   1eed4:	movw	r1, #32768	; 0x8000
   1eed8:	movt	r1, #65535	; 0xffff
   1eedc:	sdiv	r0, r1, r0
   1eee0:	ldr	r1, [fp, #-8]
   1eee4:	ldr	r2, [r1]
   1eee8:	ldr	r1, [r1, #4]
   1eeec:	subs	r2, r0, r2
   1eef0:	rscs	r0, r1, r0, asr #31
   1eef4:	str	r2, [fp, #-148]	; 0xffffff6c
   1eef8:	str	r0, [fp, #-152]	; 0xffffff68
   1eefc:	bcc	1efe0 <__assert_fail@plt+0xd8ac>
   1ef00:	b	1f004 <__assert_fail@plt+0xd8d0>
   1ef04:	ldr	r0, [fp, #-12]
   1ef08:	cmp	r0, #0
   1ef0c:	bne	1ef14 <__assert_fail@plt+0xd7e0>
   1ef10:	b	1f004 <__assert_fail@plt+0xd8d0>
   1ef14:	mov	r0, #1
   1ef18:	cmp	r0, #0
   1ef1c:	bne	1efb0 <__assert_fail@plt+0xd87c>
   1ef20:	b	1ef24 <__assert_fail@plt+0xd7f0>
   1ef24:	ldr	r0, [fp, #-8]
   1ef28:	ldr	r1, [r0]
   1ef2c:	ldr	r0, [r0, #4]
   1ef30:	and	r0, r1, r0
   1ef34:	cmn	r0, #1
   1ef38:	bne	1ef78 <__assert_fail@plt+0xd844>
   1ef3c:	b	1ef40 <__assert_fail@plt+0xd80c>
   1ef40:	b	1ef44 <__assert_fail@plt+0xd810>
   1ef44:	ldr	r0, [pc, #4064]	; 1ff2c <__assert_fail@plt+0xe7f8>
   1ef48:	ldr	r1, [fp, #-12]
   1ef4c:	add	r0, r1, r0
   1ef50:	movw	r1, #0
   1ef54:	cmp	r1, r0
   1ef58:	blt	1efe0 <__assert_fail@plt+0xd8ac>
   1ef5c:	b	1f004 <__assert_fail@plt+0xd8d0>
   1ef60:	ldr	r0, [fp, #-12]
   1ef64:	sub	r0, r0, #1
   1ef68:	movw	r1, #32767	; 0x7fff
   1ef6c:	cmp	r1, r0
   1ef70:	blt	1efe0 <__assert_fail@plt+0xd8ac>
   1ef74:	b	1f004 <__assert_fail@plt+0xd8d0>
   1ef78:	ldr	r0, [fp, #-8]
   1ef7c:	ldr	r2, [r0]
   1ef80:	ldr	r3, [r0, #4]
   1ef84:	movw	r0, #32768	; 0x8000
   1ef88:	movt	r0, #65535	; 0xffff
   1ef8c:	mvn	r1, #0
   1ef90:	bl	22b0c <__assert_fail@plt+0x113d8>
   1ef94:	ldr	r2, [fp, #-12]
   1ef98:	subs	r0, r0, r2
   1ef9c:	sbcs	r1, r1, r2, asr #31
   1efa0:	str	r0, [fp, #-156]	; 0xffffff64
   1efa4:	str	r1, [fp, #-160]	; 0xffffff60
   1efa8:	bcc	1efe0 <__assert_fail@plt+0xd8ac>
   1efac:	b	1f004 <__assert_fail@plt+0xd8d0>
   1efb0:	ldr	r0, [fp, #-12]
   1efb4:	movw	r1, #32767	; 0x7fff
   1efb8:	sdiv	r0, r1, r0
   1efbc:	ldr	r1, [fp, #-8]
   1efc0:	ldr	r2, [r1]
   1efc4:	ldr	r1, [r1, #4]
   1efc8:	subs	r2, r0, r2
   1efcc:	rscs	r0, r1, r0, asr #31
   1efd0:	str	r2, [fp, #-164]	; 0xffffff5c
   1efd4:	str	r0, [fp, #-168]	; 0xffffff58
   1efd8:	bcs	1f004 <__assert_fail@plt+0xd8d0>
   1efdc:	b	1efe0 <__assert_fail@plt+0xd8ac>
   1efe0:	ldr	r0, [fp, #-8]
   1efe4:	ldr	r0, [r0]
   1efe8:	ldr	r1, [fp, #-12]
   1efec:	mul	r0, r0, r1
   1eff0:	sxth	r0, r0
   1eff4:	asr	r1, r0, #31
   1eff8:	str	r0, [fp, #-24]	; 0xffffffe8
   1effc:	str	r1, [fp, #-20]	; 0xffffffec
   1f000:	b	202ec <__assert_fail@plt+0xebb8>
   1f004:	ldr	r0, [fp, #-8]
   1f008:	ldr	r0, [r0]
   1f00c:	ldr	r1, [fp, #-12]
   1f010:	mul	r0, r0, r1
   1f014:	sxth	r0, r0
   1f018:	asr	r1, r0, #31
   1f01c:	str	r0, [fp, #-24]	; 0xffffffe8
   1f020:	str	r1, [fp, #-20]	; 0xffffffec
   1f024:	b	20308 <__assert_fail@plt+0xebd4>
   1f028:	ldr	r0, [fp, #-12]
   1f02c:	cmp	r0, #0
   1f030:	bge	1f188 <__assert_fail@plt+0xda54>
   1f034:	mov	r0, #1
   1f038:	cmp	r0, #0
   1f03c:	bne	1f0f4 <__assert_fail@plt+0xd9c0>
   1f040:	b	1f044 <__assert_fail@plt+0xd910>
   1f044:	b	1f048 <__assert_fail@plt+0xd914>
   1f048:	ldr	r0, [fp, #-8]
   1f04c:	ldr	r1, [r0]
   1f050:	ldr	r0, [r0, #4]
   1f054:	ldr	r2, [fp, #-12]
   1f058:	movw	r3, #65535	; 0xffff
   1f05c:	sdiv	r2, r3, r2
   1f060:	subs	r1, r1, r2
   1f064:	sbcs	r0, r0, r2, asr #31
   1f068:	str	r1, [fp, #-172]	; 0xffffff54
   1f06c:	str	r0, [fp, #-176]	; 0xffffff50
   1f070:	bcc	1f26c <__assert_fail@plt+0xdb38>
   1f074:	b	1f290 <__assert_fail@plt+0xdb5c>
   1f078:	b	1f07c <__assert_fail@plt+0xd948>
   1f07c:	ldr	r0, [pc, #2076]	; 1f8a0 <__assert_fail@plt+0xe16c>
   1f080:	ldr	r1, [fp, #-12]
   1f084:	cmp	r1, r0
   1f088:	blt	1f0a0 <__assert_fail@plt+0xd96c>
   1f08c:	b	1f0ac <__assert_fail@plt+0xd978>
   1f090:	ldr	r0, [fp, #-12]
   1f094:	movw	r1, #0
   1f098:	cmp	r1, r0
   1f09c:	bge	1f0ac <__assert_fail@plt+0xd978>
   1f0a0:	movw	r0, #0
   1f0a4:	str	r0, [fp, #-180]	; 0xffffff4c
   1f0a8:	b	1f0c4 <__assert_fail@plt+0xd990>
   1f0ac:	ldr	r0, [fp, #-12]
   1f0b0:	movw	r1, #0
   1f0b4:	sub	r0, r1, r0
   1f0b8:	movw	r1, #65535	; 0xffff
   1f0bc:	sdiv	r0, r1, r0
   1f0c0:	str	r0, [fp, #-180]	; 0xffffff4c
   1f0c4:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1f0c8:	ldr	r1, [fp, #-8]
   1f0cc:	ldr	r2, [r1]
   1f0d0:	ldr	r1, [r1, #4]
   1f0d4:	mvn	r1, r1
   1f0d8:	mvn	r2, r2
   1f0dc:	subs	r2, r2, r0
   1f0e0:	sbcs	r0, r1, r0, asr #31
   1f0e4:	str	r2, [fp, #-184]	; 0xffffff48
   1f0e8:	str	r0, [fp, #-188]	; 0xffffff44
   1f0ec:	bcs	1f26c <__assert_fail@plt+0xdb38>
   1f0f0:	b	1f290 <__assert_fail@plt+0xdb5c>
   1f0f4:	b	1f0f8 <__assert_fail@plt+0xd9c4>
   1f0f8:	b	1f158 <__assert_fail@plt+0xda24>
   1f0fc:	b	1f158 <__assert_fail@plt+0xda24>
   1f100:	ldr	r0, [fp, #-12]
   1f104:	cmn	r0, #1
   1f108:	bne	1f158 <__assert_fail@plt+0xda24>
   1f10c:	b	1f12c <__assert_fail@plt+0xd9f8>
   1f110:	ldr	r0, [fp, #-8]
   1f114:	ldr	r1, [r0]
   1f118:	ldr	r0, [r0, #4]
   1f11c:	orr	r0, r1, r0
   1f120:	cmp	r0, #0
   1f124:	bne	1f26c <__assert_fail@plt+0xdb38>
   1f128:	b	1f290 <__assert_fail@plt+0xdb5c>
   1f12c:	ldr	r0, [fp, #-8]
   1f130:	ldr	r1, [r0]
   1f134:	ldr	r0, [r0, #4]
   1f138:	orr	r0, r1, r0
   1f13c:	cmp	r0, #0
   1f140:	beq	1f290 <__assert_fail@plt+0xdb5c>
   1f144:	b	1f148 <__assert_fail@plt+0xda14>
   1f148:	mov	r0, #0
   1f14c:	cmp	r0, #0
   1f150:	bne	1f26c <__assert_fail@plt+0xdb38>
   1f154:	b	1f290 <__assert_fail@plt+0xdb5c>
   1f158:	ldr	r0, [fp, #-12]
   1f15c:	mov	r1, #0
   1f160:	sdiv	r0, r1, r0
   1f164:	ldr	r1, [fp, #-8]
   1f168:	ldr	r2, [r1]
   1f16c:	ldr	r1, [r1, #4]
   1f170:	subs	r2, r0, r2
   1f174:	rscs	r0, r1, r0, asr #31
   1f178:	str	r2, [fp, #-192]	; 0xffffff40
   1f17c:	str	r0, [fp, #-196]	; 0xffffff3c
   1f180:	bcc	1f26c <__assert_fail@plt+0xdb38>
   1f184:	b	1f290 <__assert_fail@plt+0xdb5c>
   1f188:	ldr	r0, [fp, #-12]
   1f18c:	cmp	r0, #0
   1f190:	bne	1f198 <__assert_fail@plt+0xda64>
   1f194:	b	1f290 <__assert_fail@plt+0xdb5c>
   1f198:	mov	r0, #1
   1f19c:	cmp	r0, #0
   1f1a0:	bne	1f23c <__assert_fail@plt+0xdb08>
   1f1a4:	b	1f1a8 <__assert_fail@plt+0xda74>
   1f1a8:	b	1f1b0 <__assert_fail@plt+0xda7c>
   1f1ac:	b	1f1b4 <__assert_fail@plt+0xda80>
   1f1b0:	b	1f204 <__assert_fail@plt+0xdad0>
   1f1b4:	ldr	r0, [fp, #-8]
   1f1b8:	ldr	r1, [r0]
   1f1bc:	ldr	r0, [r0, #4]
   1f1c0:	and	r0, r1, r0
   1f1c4:	cmn	r0, #1
   1f1c8:	bne	1f204 <__assert_fail@plt+0xdad0>
   1f1cc:	b	1f1d0 <__assert_fail@plt+0xda9c>
   1f1d0:	b	1f1d4 <__assert_fail@plt+0xdaa0>
   1f1d4:	ldr	r0, [fp, #-12]
   1f1d8:	add	r0, r0, #0
   1f1dc:	movw	r1, #0
   1f1e0:	cmp	r1, r0
   1f1e4:	blt	1f26c <__assert_fail@plt+0xdb38>
   1f1e8:	b	1f290 <__assert_fail@plt+0xdb5c>
   1f1ec:	ldr	r0, [fp, #-12]
   1f1f0:	sub	r0, r0, #1
   1f1f4:	mvn	r1, #0
   1f1f8:	cmp	r1, r0
   1f1fc:	blt	1f26c <__assert_fail@plt+0xdb38>
   1f200:	b	1f290 <__assert_fail@plt+0xdb5c>
   1f204:	ldr	r0, [fp, #-8]
   1f208:	ldr	r2, [r0]
   1f20c:	ldr	r3, [r0, #4]
   1f210:	mov	r0, #0
   1f214:	str	r0, [fp, #-200]	; 0xffffff38
   1f218:	ldr	r1, [fp, #-200]	; 0xffffff38
   1f21c:	bl	22b0c <__assert_fail@plt+0x113d8>
   1f220:	ldr	r2, [fp, #-12]
   1f224:	subs	r0, r0, r2
   1f228:	sbcs	r1, r1, r2, asr #31
   1f22c:	str	r0, [fp, #-204]	; 0xffffff34
   1f230:	str	r1, [fp, #-208]	; 0xffffff30
   1f234:	bcc	1f26c <__assert_fail@plt+0xdb38>
   1f238:	b	1f290 <__assert_fail@plt+0xdb5c>
   1f23c:	ldr	r0, [fp, #-12]
   1f240:	movw	r1, #65535	; 0xffff
   1f244:	sdiv	r0, r1, r0
   1f248:	ldr	r1, [fp, #-8]
   1f24c:	ldr	r2, [r1]
   1f250:	ldr	r1, [r1, #4]
   1f254:	subs	r2, r0, r2
   1f258:	rscs	r0, r1, r0, asr #31
   1f25c:	str	r2, [fp, #-212]	; 0xffffff2c
   1f260:	str	r0, [fp, #-216]	; 0xffffff28
   1f264:	bcs	1f290 <__assert_fail@plt+0xdb5c>
   1f268:	b	1f26c <__assert_fail@plt+0xdb38>
   1f26c:	ldr	r0, [fp, #-8]
   1f270:	ldr	r0, [r0]
   1f274:	ldr	r1, [fp, #-12]
   1f278:	mul	r0, r0, r1
   1f27c:	uxth	r0, r0
   1f280:	mov	r1, #0
   1f284:	str	r1, [fp, #-20]	; 0xffffffec
   1f288:	str	r0, [fp, #-24]	; 0xffffffe8
   1f28c:	b	202ec <__assert_fail@plt+0xebb8>
   1f290:	ldr	r0, [fp, #-8]
   1f294:	ldr	r0, [r0]
   1f298:	ldr	r1, [fp, #-12]
   1f29c:	mul	r0, r0, r1
   1f2a0:	uxth	r0, r0
   1f2a4:	mov	r1, #0
   1f2a8:	str	r1, [fp, #-20]	; 0xffffffec
   1f2ac:	str	r0, [fp, #-24]	; 0xffffffe8
   1f2b0:	b	20308 <__assert_fail@plt+0xebd4>
   1f2b4:	b	1f7cc <__assert_fail@plt+0xe098>
   1f2b8:	b	1f548 <__assert_fail@plt+0xde14>
   1f2bc:	ldr	r0, [fp, #-12]
   1f2c0:	cmp	r0, #0
   1f2c4:	bge	1f434 <__assert_fail@plt+0xdd00>
   1f2c8:	mov	r0, #1
   1f2cc:	cmp	r0, #0
   1f2d0:	bne	1f388 <__assert_fail@plt+0xdc54>
   1f2d4:	b	1f2d8 <__assert_fail@plt+0xdba4>
   1f2d8:	b	1f2dc <__assert_fail@plt+0xdba8>
   1f2dc:	ldr	r0, [fp, #-8]
   1f2e0:	ldr	r1, [r0]
   1f2e4:	ldr	r0, [r0, #4]
   1f2e8:	ldr	r2, [fp, #-12]
   1f2ec:	mvn	r3, #-2147483648	; 0x80000000
   1f2f0:	sdiv	r2, r3, r2
   1f2f4:	subs	r1, r1, r2
   1f2f8:	sbcs	r0, r0, r2, asr #31
   1f2fc:	str	r1, [fp, #-220]	; 0xffffff24
   1f300:	str	r0, [fp, #-224]	; 0xffffff20
   1f304:	bcc	1f508 <__assert_fail@plt+0xddd4>
   1f308:	b	1f528 <__assert_fail@plt+0xddf4>
   1f30c:	b	1f310 <__assert_fail@plt+0xdbdc>
   1f310:	ldr	r0, [pc, #1416]	; 1f8a0 <__assert_fail@plt+0xe16c>
   1f314:	ldr	r1, [fp, #-12]
   1f318:	cmp	r1, r0
   1f31c:	blt	1f334 <__assert_fail@plt+0xdc00>
   1f320:	b	1f340 <__assert_fail@plt+0xdc0c>
   1f324:	ldr	r0, [fp, #-12]
   1f328:	movw	r1, #0
   1f32c:	cmp	r1, r0
   1f330:	bge	1f340 <__assert_fail@plt+0xdc0c>
   1f334:	movw	r0, #0
   1f338:	str	r0, [fp, #-228]	; 0xffffff1c
   1f33c:	b	1f358 <__assert_fail@plt+0xdc24>
   1f340:	ldr	r0, [pc, #4076]	; 20334 <__assert_fail@plt+0xec00>
   1f344:	ldr	r1, [fp, #-12]
   1f348:	movw	r2, #0
   1f34c:	sub	r1, r2, r1
   1f350:	sdiv	r0, r0, r1
   1f354:	str	r0, [fp, #-228]	; 0xffffff1c
   1f358:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1f35c:	ldr	r1, [fp, #-8]
   1f360:	ldr	r2, [r1]
   1f364:	ldr	r1, [r1, #4]
   1f368:	mvn	r1, r1
   1f36c:	mvn	r2, r2
   1f370:	subs	r2, r2, r0
   1f374:	sbcs	r0, r1, r0, asr #31
   1f378:	str	r2, [fp, #-232]	; 0xffffff18
   1f37c:	str	r0, [fp, #-236]	; 0xffffff14
   1f380:	bcs	1f508 <__assert_fail@plt+0xddd4>
   1f384:	b	1f528 <__assert_fail@plt+0xddf4>
   1f388:	ldr	r0, [fp, #-12]
   1f38c:	cmn	r0, #1
   1f390:	bne	1f404 <__assert_fail@plt+0xdcd0>
   1f394:	b	1f3b8 <__assert_fail@plt+0xdc84>
   1f398:	ldr	r0, [fp, #-8]
   1f39c:	ldr	r1, [r0]
   1f3a0:	ldr	r0, [r0, #4]
   1f3a4:	eor	r1, r1, #-2147483648	; 0x80000000
   1f3a8:	orr	r0, r1, r0
   1f3ac:	cmp	r0, #0
   1f3b0:	bne	1f508 <__assert_fail@plt+0xddd4>
   1f3b4:	b	1f528 <__assert_fail@plt+0xddf4>
   1f3b8:	ldr	r0, [fp, #-8]
   1f3bc:	ldr	r1, [r0]
   1f3c0:	ldr	r0, [r0, #4]
   1f3c4:	orr	r0, r1, r0
   1f3c8:	cmp	r0, #0
   1f3cc:	beq	1f528 <__assert_fail@plt+0xddf4>
   1f3d0:	b	1f3d4 <__assert_fail@plt+0xdca0>
   1f3d4:	ldr	r0, [fp, #-8]
   1f3d8:	ldr	r1, [r0]
   1f3dc:	ldr	r0, [r0, #4]
   1f3e0:	subs	r1, r1, #1
   1f3e4:	sbc	r0, r0, #0
   1f3e8:	mvn	r2, #-2147483648	; 0x80000000
   1f3ec:	subs	r1, r2, r1
   1f3f0:	rscs	r0, r0, #0
   1f3f4:	str	r1, [fp, #-240]	; 0xffffff10
   1f3f8:	str	r0, [fp, #-244]	; 0xffffff0c
   1f3fc:	bcc	1f508 <__assert_fail@plt+0xddd4>
   1f400:	b	1f528 <__assert_fail@plt+0xddf4>
   1f404:	ldr	r0, [fp, #-12]
   1f408:	mov	r1, #-2147483648	; 0x80000000
   1f40c:	sdiv	r0, r1, r0
   1f410:	ldr	r1, [fp, #-8]
   1f414:	ldr	r2, [r1]
   1f418:	ldr	r1, [r1, #4]
   1f41c:	subs	r2, r0, r2
   1f420:	rscs	r0, r1, r0, asr #31
   1f424:	str	r2, [fp, #-248]	; 0xffffff08
   1f428:	str	r0, [fp, #-252]	; 0xffffff04
   1f42c:	bcc	1f508 <__assert_fail@plt+0xddd4>
   1f430:	b	1f528 <__assert_fail@plt+0xddf4>
   1f434:	ldr	r0, [fp, #-12]
   1f438:	cmp	r0, #0
   1f43c:	bne	1f444 <__assert_fail@plt+0xdd10>
   1f440:	b	1f528 <__assert_fail@plt+0xddf4>
   1f444:	mov	r0, #1
   1f448:	cmp	r0, #0
   1f44c:	bne	1f4d8 <__assert_fail@plt+0xdda4>
   1f450:	b	1f454 <__assert_fail@plt+0xdd20>
   1f454:	ldr	r0, [fp, #-8]
   1f458:	ldr	r1, [r0]
   1f45c:	ldr	r0, [r0, #4]
   1f460:	and	r0, r1, r0
   1f464:	cmn	r0, #1
   1f468:	bne	1f4a4 <__assert_fail@plt+0xdd70>
   1f46c:	b	1f470 <__assert_fail@plt+0xdd3c>
   1f470:	b	1f474 <__assert_fail@plt+0xdd40>
   1f474:	ldr	r0, [fp, #-12]
   1f478:	add	r0, r0, #-2147483648	; 0x80000000
   1f47c:	movw	r1, #0
   1f480:	cmp	r1, r0
   1f484:	blt	1f508 <__assert_fail@plt+0xddd4>
   1f488:	b	1f528 <__assert_fail@plt+0xddf4>
   1f48c:	ldr	r0, [pc, #3744]	; 20334 <__assert_fail@plt+0xec00>
   1f490:	ldr	r1, [fp, #-12]
   1f494:	sub	r1, r1, #1
   1f498:	cmp	r0, r1
   1f49c:	blt	1f508 <__assert_fail@plt+0xddd4>
   1f4a0:	b	1f528 <__assert_fail@plt+0xddf4>
   1f4a4:	ldr	r0, [fp, #-8]
   1f4a8:	ldr	r2, [r0]
   1f4ac:	ldr	r3, [r0, #4]
   1f4b0:	mov	r0, #-2147483648	; 0x80000000
   1f4b4:	mvn	r1, #0
   1f4b8:	bl	22b0c <__assert_fail@plt+0x113d8>
   1f4bc:	ldr	r2, [fp, #-12]
   1f4c0:	subs	r0, r0, r2
   1f4c4:	sbcs	r1, r1, r2, asr #31
   1f4c8:	str	r0, [fp, #-256]	; 0xffffff00
   1f4cc:	str	r1, [fp, #-260]	; 0xfffffefc
   1f4d0:	bcc	1f508 <__assert_fail@plt+0xddd4>
   1f4d4:	b	1f528 <__assert_fail@plt+0xddf4>
   1f4d8:	ldr	r0, [fp, #-12]
   1f4dc:	mvn	r1, #-2147483648	; 0x80000000
   1f4e0:	sdiv	r0, r1, r0
   1f4e4:	ldr	r1, [fp, #-8]
   1f4e8:	ldr	r2, [r1]
   1f4ec:	ldr	r1, [r1, #4]
   1f4f0:	subs	r2, r0, r2
   1f4f4:	rscs	r0, r1, r0, asr #31
   1f4f8:	str	r2, [fp, #-264]	; 0xfffffef8
   1f4fc:	str	r0, [fp, #-268]	; 0xfffffef4
   1f500:	bcs	1f528 <__assert_fail@plt+0xddf4>
   1f504:	b	1f508 <__assert_fail@plt+0xddd4>
   1f508:	ldr	r0, [fp, #-8]
   1f50c:	ldr	r0, [r0]
   1f510:	ldr	r1, [fp, #-12]
   1f514:	mul	r0, r0, r1
   1f518:	asr	r1, r0, #31
   1f51c:	str	r0, [fp, #-24]	; 0xffffffe8
   1f520:	str	r1, [fp, #-20]	; 0xffffffec
   1f524:	b	202ec <__assert_fail@plt+0xebb8>
   1f528:	ldr	r0, [fp, #-8]
   1f52c:	ldr	r0, [r0]
   1f530:	ldr	r1, [fp, #-12]
   1f534:	mul	r0, r0, r1
   1f538:	asr	r1, r0, #31
   1f53c:	str	r0, [fp, #-24]	; 0xffffffe8
   1f540:	str	r1, [fp, #-20]	; 0xffffffec
   1f544:	b	20308 <__assert_fail@plt+0xebd4>
   1f548:	ldr	r0, [fp, #-12]
   1f54c:	cmp	r0, #0
   1f550:	bge	1f6a8 <__assert_fail@plt+0xdf74>
   1f554:	mov	r0, #1
   1f558:	cmp	r0, #0
   1f55c:	bne	1f614 <__assert_fail@plt+0xdee0>
   1f560:	b	1f564 <__assert_fail@plt+0xde30>
   1f564:	b	1f598 <__assert_fail@plt+0xde64>
   1f568:	ldr	r0, [fp, #-8]
   1f56c:	ldr	r1, [r0]
   1f570:	ldr	r0, [r0, #4]
   1f574:	ldr	r2, [fp, #-12]
   1f578:	mvn	r3, #0
   1f57c:	udiv	r2, r3, r2
   1f580:	subs	r1, r1, r2
   1f584:	sbcs	r0, r0, #0
   1f588:	str	r1, [fp, #-272]	; 0xfffffef0
   1f58c:	str	r0, [fp, #-276]	; 0xfffffeec
   1f590:	bcc	1f78c <__assert_fail@plt+0xe058>
   1f594:	b	1f7ac <__assert_fail@plt+0xe078>
   1f598:	b	1f59c <__assert_fail@plt+0xde68>
   1f59c:	ldr	r0, [pc, #3468]	; 20330 <__assert_fail@plt+0xebfc>
   1f5a0:	ldr	r1, [fp, #-12]
   1f5a4:	cmp	r1, r0
   1f5a8:	blt	1f5c0 <__assert_fail@plt+0xde8c>
   1f5ac:	b	1f5cc <__assert_fail@plt+0xde98>
   1f5b0:	ldr	r0, [fp, #-12]
   1f5b4:	movw	r1, #0
   1f5b8:	cmp	r1, r0
   1f5bc:	bge	1f5cc <__assert_fail@plt+0xde98>
   1f5c0:	movw	r0, #1
   1f5c4:	str	r0, [fp, #-280]	; 0xfffffee8
   1f5c8:	b	1f5e4 <__assert_fail@plt+0xdeb0>
   1f5cc:	ldr	r0, [fp, #-12]
   1f5d0:	movw	r1, #0
   1f5d4:	sub	r0, r1, r0
   1f5d8:	mvn	r1, #0
   1f5dc:	udiv	r0, r1, r0
   1f5e0:	str	r0, [fp, #-280]	; 0xfffffee8
   1f5e4:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1f5e8:	ldr	r1, [fp, #-8]
   1f5ec:	ldr	r2, [r1]
   1f5f0:	ldr	r1, [r1, #4]
   1f5f4:	mvn	r1, r1
   1f5f8:	mvn	r2, r2
   1f5fc:	subs	r0, r2, r0
   1f600:	sbcs	r1, r1, #0
   1f604:	str	r0, [sp, #284]	; 0x11c
   1f608:	str	r1, [sp, #280]	; 0x118
   1f60c:	bcs	1f78c <__assert_fail@plt+0xe058>
   1f610:	b	1f7ac <__assert_fail@plt+0xe078>
   1f614:	b	1f618 <__assert_fail@plt+0xdee4>
   1f618:	b	1f678 <__assert_fail@plt+0xdf44>
   1f61c:	b	1f678 <__assert_fail@plt+0xdf44>
   1f620:	ldr	r0, [fp, #-12]
   1f624:	cmn	r0, #1
   1f628:	bne	1f678 <__assert_fail@plt+0xdf44>
   1f62c:	b	1f64c <__assert_fail@plt+0xdf18>
   1f630:	ldr	r0, [fp, #-8]
   1f634:	ldr	r1, [r0]
   1f638:	ldr	r0, [r0, #4]
   1f63c:	orr	r0, r1, r0
   1f640:	cmp	r0, #0
   1f644:	bne	1f78c <__assert_fail@plt+0xe058>
   1f648:	b	1f7ac <__assert_fail@plt+0xe078>
   1f64c:	ldr	r0, [fp, #-8]
   1f650:	ldr	r1, [r0]
   1f654:	ldr	r0, [r0, #4]
   1f658:	orr	r0, r1, r0
   1f65c:	cmp	r0, #0
   1f660:	beq	1f7ac <__assert_fail@plt+0xe078>
   1f664:	b	1f668 <__assert_fail@plt+0xdf34>
   1f668:	mov	r0, #0
   1f66c:	cmp	r0, #0
   1f670:	bne	1f78c <__assert_fail@plt+0xe058>
   1f674:	b	1f7ac <__assert_fail@plt+0xe078>
   1f678:	ldr	r0, [fp, #-12]
   1f67c:	mov	r1, #0
   1f680:	sdiv	r0, r1, r0
   1f684:	ldr	r1, [fp, #-8]
   1f688:	ldr	r2, [r1]
   1f68c:	ldr	r1, [r1, #4]
   1f690:	subs	r2, r0, r2
   1f694:	rscs	r0, r1, r0, asr #31
   1f698:	str	r2, [sp, #276]	; 0x114
   1f69c:	str	r0, [sp, #272]	; 0x110
   1f6a0:	bcc	1f78c <__assert_fail@plt+0xe058>
   1f6a4:	b	1f7ac <__assert_fail@plt+0xe078>
   1f6a8:	ldr	r0, [fp, #-12]
   1f6ac:	cmp	r0, #0
   1f6b0:	bne	1f6b8 <__assert_fail@plt+0xdf84>
   1f6b4:	b	1f7ac <__assert_fail@plt+0xe078>
   1f6b8:	mov	r0, #1
   1f6bc:	cmp	r0, #0
   1f6c0:	bne	1f75c <__assert_fail@plt+0xe028>
   1f6c4:	b	1f6c8 <__assert_fail@plt+0xdf94>
   1f6c8:	b	1f6d0 <__assert_fail@plt+0xdf9c>
   1f6cc:	b	1f6d4 <__assert_fail@plt+0xdfa0>
   1f6d0:	b	1f724 <__assert_fail@plt+0xdff0>
   1f6d4:	ldr	r0, [fp, #-8]
   1f6d8:	ldr	r1, [r0]
   1f6dc:	ldr	r0, [r0, #4]
   1f6e0:	and	r0, r1, r0
   1f6e4:	cmn	r0, #1
   1f6e8:	bne	1f724 <__assert_fail@plt+0xdff0>
   1f6ec:	b	1f6f0 <__assert_fail@plt+0xdfbc>
   1f6f0:	b	1f6f4 <__assert_fail@plt+0xdfc0>
   1f6f4:	ldr	r0, [fp, #-12]
   1f6f8:	add	r0, r0, #0
   1f6fc:	movw	r1, #0
   1f700:	cmp	r1, r0
   1f704:	blt	1f78c <__assert_fail@plt+0xe058>
   1f708:	b	1f7ac <__assert_fail@plt+0xe078>
   1f70c:	ldr	r0, [fp, #-12]
   1f710:	sub	r0, r0, #1
   1f714:	mvn	r1, #0
   1f718:	cmp	r1, r0
   1f71c:	blt	1f78c <__assert_fail@plt+0xe058>
   1f720:	b	1f7ac <__assert_fail@plt+0xe078>
   1f724:	ldr	r0, [fp, #-8]
   1f728:	ldr	r2, [r0]
   1f72c:	ldr	r3, [r0, #4]
   1f730:	mov	r0, #0
   1f734:	str	r0, [sp, #268]	; 0x10c
   1f738:	ldr	r1, [sp, #268]	; 0x10c
   1f73c:	bl	22b0c <__assert_fail@plt+0x113d8>
   1f740:	ldr	r2, [fp, #-12]
   1f744:	subs	r0, r0, r2
   1f748:	sbcs	r1, r1, r2, asr #31
   1f74c:	str	r0, [sp, #264]	; 0x108
   1f750:	str	r1, [sp, #260]	; 0x104
   1f754:	bcc	1f78c <__assert_fail@plt+0xe058>
   1f758:	b	1f7ac <__assert_fail@plt+0xe078>
   1f75c:	ldr	r0, [fp, #-12]
   1f760:	mvn	r1, #0
   1f764:	udiv	r0, r1, r0
   1f768:	ldr	r1, [fp, #-8]
   1f76c:	ldr	r2, [r1]
   1f770:	ldr	r1, [r1, #4]
   1f774:	subs	r0, r0, r2
   1f778:	rscs	r1, r1, #0
   1f77c:	str	r0, [sp, #256]	; 0x100
   1f780:	str	r1, [sp, #252]	; 0xfc
   1f784:	bcs	1f7ac <__assert_fail@plt+0xe078>
   1f788:	b	1f78c <__assert_fail@plt+0xe058>
   1f78c:	ldr	r0, [fp, #-8]
   1f790:	ldr	r0, [r0]
   1f794:	ldr	r1, [fp, #-12]
   1f798:	mul	r0, r0, r1
   1f79c:	mov	r1, #0
   1f7a0:	str	r1, [fp, #-20]	; 0xffffffec
   1f7a4:	str	r0, [fp, #-24]	; 0xffffffe8
   1f7a8:	b	202ec <__assert_fail@plt+0xebb8>
   1f7ac:	ldr	r0, [fp, #-8]
   1f7b0:	ldr	r0, [r0]
   1f7b4:	ldr	r1, [fp, #-12]
   1f7b8:	mul	r0, r0, r1
   1f7bc:	mov	r1, #0
   1f7c0:	str	r1, [fp, #-20]	; 0xffffffec
   1f7c4:	str	r0, [fp, #-24]	; 0xffffffe8
   1f7c8:	b	20308 <__assert_fail@plt+0xebd4>
   1f7cc:	b	1fce8 <__assert_fail@plt+0xe5b4>
   1f7d0:	b	1fa64 <__assert_fail@plt+0xe330>
   1f7d4:	ldr	r0, [fp, #-12]
   1f7d8:	cmp	r0, #0
   1f7dc:	bge	1f950 <__assert_fail@plt+0xe21c>
   1f7e0:	mov	r0, #1
   1f7e4:	cmp	r0, #0
   1f7e8:	bne	1f8a4 <__assert_fail@plt+0xe170>
   1f7ec:	b	1f7f0 <__assert_fail@plt+0xe0bc>
   1f7f0:	b	1f7f4 <__assert_fail@plt+0xe0c0>
   1f7f4:	ldr	r0, [fp, #-8]
   1f7f8:	ldr	r1, [r0]
   1f7fc:	ldr	r0, [r0, #4]
   1f800:	ldr	r2, [fp, #-12]
   1f804:	mvn	r3, #-2147483648	; 0x80000000
   1f808:	sdiv	r2, r3, r2
   1f80c:	subs	r1, r1, r2
   1f810:	sbcs	r0, r0, r2, asr #31
   1f814:	str	r1, [sp, #248]	; 0xf8
   1f818:	str	r0, [sp, #244]	; 0xf4
   1f81c:	bcc	1fa24 <__assert_fail@plt+0xe2f0>
   1f820:	b	1fa44 <__assert_fail@plt+0xe310>
   1f824:	b	1f828 <__assert_fail@plt+0xe0f4>
   1f828:	ldr	r0, [pc, #2816]	; 20330 <__assert_fail@plt+0xebfc>
   1f82c:	ldr	r1, [fp, #-12]
   1f830:	cmp	r1, r0
   1f834:	blt	1f84c <__assert_fail@plt+0xe118>
   1f838:	b	1f858 <__assert_fail@plt+0xe124>
   1f83c:	ldr	r0, [fp, #-12]
   1f840:	movw	r1, #0
   1f844:	cmp	r1, r0
   1f848:	bge	1f858 <__assert_fail@plt+0xe124>
   1f84c:	movw	r0, #0
   1f850:	str	r0, [sp, #240]	; 0xf0
   1f854:	b	1f870 <__assert_fail@plt+0xe13c>
   1f858:	ldr	r0, [pc, #2772]	; 20334 <__assert_fail@plt+0xec00>
   1f85c:	ldr	r1, [fp, #-12]
   1f860:	movw	r2, #0
   1f864:	sub	r1, r2, r1
   1f868:	sdiv	r0, r0, r1
   1f86c:	str	r0, [sp, #240]	; 0xf0
   1f870:	ldr	r0, [sp, #240]	; 0xf0
   1f874:	ldr	r1, [fp, #-8]
   1f878:	ldr	r2, [r1]
   1f87c:	ldr	r1, [r1, #4]
   1f880:	mvn	r1, r1
   1f884:	mvn	r2, r2
   1f888:	subs	r2, r2, r0
   1f88c:	sbcs	r0, r1, r0, asr #31
   1f890:	str	r2, [sp, #236]	; 0xec
   1f894:	str	r0, [sp, #232]	; 0xe8
   1f898:	bcs	1fa24 <__assert_fail@plt+0xe2f0>
   1f89c:	b	1fa44 <__assert_fail@plt+0xe310>
   1f8a0:	andhi	r0, r0, r1
   1f8a4:	ldr	r0, [fp, #-12]
   1f8a8:	cmn	r0, #1
   1f8ac:	bne	1f920 <__assert_fail@plt+0xe1ec>
   1f8b0:	b	1f8d4 <__assert_fail@plt+0xe1a0>
   1f8b4:	ldr	r0, [fp, #-8]
   1f8b8:	ldr	r1, [r0]
   1f8bc:	ldr	r0, [r0, #4]
   1f8c0:	eor	r1, r1, #-2147483648	; 0x80000000
   1f8c4:	orr	r0, r1, r0
   1f8c8:	cmp	r0, #0
   1f8cc:	bne	1fa24 <__assert_fail@plt+0xe2f0>
   1f8d0:	b	1fa44 <__assert_fail@plt+0xe310>
   1f8d4:	ldr	r0, [fp, #-8]
   1f8d8:	ldr	r1, [r0]
   1f8dc:	ldr	r0, [r0, #4]
   1f8e0:	orr	r0, r1, r0
   1f8e4:	cmp	r0, #0
   1f8e8:	beq	1fa44 <__assert_fail@plt+0xe310>
   1f8ec:	b	1f8f0 <__assert_fail@plt+0xe1bc>
   1f8f0:	ldr	r0, [fp, #-8]
   1f8f4:	ldr	r1, [r0]
   1f8f8:	ldr	r0, [r0, #4]
   1f8fc:	subs	r1, r1, #1
   1f900:	sbc	r0, r0, #0
   1f904:	mvn	r2, #-2147483648	; 0x80000000
   1f908:	subs	r1, r2, r1
   1f90c:	rscs	r0, r0, #0
   1f910:	str	r1, [sp, #228]	; 0xe4
   1f914:	str	r0, [sp, #224]	; 0xe0
   1f918:	bcc	1fa24 <__assert_fail@plt+0xe2f0>
   1f91c:	b	1fa44 <__assert_fail@plt+0xe310>
   1f920:	ldr	r0, [fp, #-12]
   1f924:	mov	r1, #-2147483648	; 0x80000000
   1f928:	sdiv	r0, r1, r0
   1f92c:	ldr	r1, [fp, #-8]
   1f930:	ldr	r2, [r1]
   1f934:	ldr	r1, [r1, #4]
   1f938:	subs	r2, r0, r2
   1f93c:	rscs	r0, r1, r0, asr #31
   1f940:	str	r2, [sp, #220]	; 0xdc
   1f944:	str	r0, [sp, #216]	; 0xd8
   1f948:	bcc	1fa24 <__assert_fail@plt+0xe2f0>
   1f94c:	b	1fa44 <__assert_fail@plt+0xe310>
   1f950:	ldr	r0, [fp, #-12]
   1f954:	cmp	r0, #0
   1f958:	bne	1f960 <__assert_fail@plt+0xe22c>
   1f95c:	b	1fa44 <__assert_fail@plt+0xe310>
   1f960:	mov	r0, #1
   1f964:	cmp	r0, #0
   1f968:	bne	1f9f4 <__assert_fail@plt+0xe2c0>
   1f96c:	b	1f970 <__assert_fail@plt+0xe23c>
   1f970:	ldr	r0, [fp, #-8]
   1f974:	ldr	r1, [r0]
   1f978:	ldr	r0, [r0, #4]
   1f97c:	and	r0, r1, r0
   1f980:	cmn	r0, #1
   1f984:	bne	1f9c0 <__assert_fail@plt+0xe28c>
   1f988:	b	1f98c <__assert_fail@plt+0xe258>
   1f98c:	b	1f990 <__assert_fail@plt+0xe25c>
   1f990:	ldr	r0, [fp, #-12]
   1f994:	add	r0, r0, #-2147483648	; 0x80000000
   1f998:	movw	r1, #0
   1f99c:	cmp	r1, r0
   1f9a0:	blt	1fa24 <__assert_fail@plt+0xe2f0>
   1f9a4:	b	1fa44 <__assert_fail@plt+0xe310>
   1f9a8:	ldr	r0, [pc, #2436]	; 20334 <__assert_fail@plt+0xec00>
   1f9ac:	ldr	r1, [fp, #-12]
   1f9b0:	sub	r1, r1, #1
   1f9b4:	cmp	r0, r1
   1f9b8:	blt	1fa24 <__assert_fail@plt+0xe2f0>
   1f9bc:	b	1fa44 <__assert_fail@plt+0xe310>
   1f9c0:	ldr	r0, [fp, #-8]
   1f9c4:	ldr	r2, [r0]
   1f9c8:	ldr	r3, [r0, #4]
   1f9cc:	mov	r0, #-2147483648	; 0x80000000
   1f9d0:	mvn	r1, #0
   1f9d4:	bl	22b0c <__assert_fail@plt+0x113d8>
   1f9d8:	ldr	r2, [fp, #-12]
   1f9dc:	subs	r0, r0, r2
   1f9e0:	sbcs	r1, r1, r2, asr #31
   1f9e4:	str	r0, [sp, #212]	; 0xd4
   1f9e8:	str	r1, [sp, #208]	; 0xd0
   1f9ec:	bcc	1fa24 <__assert_fail@plt+0xe2f0>
   1f9f0:	b	1fa44 <__assert_fail@plt+0xe310>
   1f9f4:	ldr	r0, [fp, #-12]
   1f9f8:	mvn	r1, #-2147483648	; 0x80000000
   1f9fc:	sdiv	r0, r1, r0
   1fa00:	ldr	r1, [fp, #-8]
   1fa04:	ldr	r2, [r1]
   1fa08:	ldr	r1, [r1, #4]
   1fa0c:	subs	r2, r0, r2
   1fa10:	rscs	r0, r1, r0, asr #31
   1fa14:	str	r2, [sp, #204]	; 0xcc
   1fa18:	str	r0, [sp, #200]	; 0xc8
   1fa1c:	bcs	1fa44 <__assert_fail@plt+0xe310>
   1fa20:	b	1fa24 <__assert_fail@plt+0xe2f0>
   1fa24:	ldr	r0, [fp, #-8]
   1fa28:	ldr	r0, [r0]
   1fa2c:	ldr	r1, [fp, #-12]
   1fa30:	mul	r0, r0, r1
   1fa34:	asr	r1, r0, #31
   1fa38:	str	r0, [fp, #-24]	; 0xffffffe8
   1fa3c:	str	r1, [fp, #-20]	; 0xffffffec
   1fa40:	b	202ec <__assert_fail@plt+0xebb8>
   1fa44:	ldr	r0, [fp, #-8]
   1fa48:	ldr	r0, [r0]
   1fa4c:	ldr	r1, [fp, #-12]
   1fa50:	mul	r0, r0, r1
   1fa54:	asr	r1, r0, #31
   1fa58:	str	r0, [fp, #-24]	; 0xffffffe8
   1fa5c:	str	r1, [fp, #-20]	; 0xffffffec
   1fa60:	b	20308 <__assert_fail@plt+0xebd4>
   1fa64:	ldr	r0, [fp, #-12]
   1fa68:	cmp	r0, #0
   1fa6c:	bge	1fbc4 <__assert_fail@plt+0xe490>
   1fa70:	mov	r0, #1
   1fa74:	cmp	r0, #0
   1fa78:	bne	1fb30 <__assert_fail@plt+0xe3fc>
   1fa7c:	b	1fa80 <__assert_fail@plt+0xe34c>
   1fa80:	b	1fab4 <__assert_fail@plt+0xe380>
   1fa84:	ldr	r0, [fp, #-8]
   1fa88:	ldr	r1, [r0]
   1fa8c:	ldr	r0, [r0, #4]
   1fa90:	ldr	r2, [fp, #-12]
   1fa94:	mvn	r3, #0
   1fa98:	udiv	r2, r3, r2
   1fa9c:	subs	r1, r1, r2
   1faa0:	sbcs	r0, r0, #0
   1faa4:	str	r1, [sp, #196]	; 0xc4
   1faa8:	str	r0, [sp, #192]	; 0xc0
   1faac:	bcc	1fca8 <__assert_fail@plt+0xe574>
   1fab0:	b	1fcc8 <__assert_fail@plt+0xe594>
   1fab4:	b	1fab8 <__assert_fail@plt+0xe384>
   1fab8:	ldr	r0, [pc, #2160]	; 20330 <__assert_fail@plt+0xebfc>
   1fabc:	ldr	r1, [fp, #-12]
   1fac0:	cmp	r1, r0
   1fac4:	blt	1fadc <__assert_fail@plt+0xe3a8>
   1fac8:	b	1fae8 <__assert_fail@plt+0xe3b4>
   1facc:	ldr	r0, [fp, #-12]
   1fad0:	movw	r1, #0
   1fad4:	cmp	r1, r0
   1fad8:	bge	1fae8 <__assert_fail@plt+0xe3b4>
   1fadc:	movw	r0, #1
   1fae0:	str	r0, [sp, #188]	; 0xbc
   1fae4:	b	1fb00 <__assert_fail@plt+0xe3cc>
   1fae8:	ldr	r0, [fp, #-12]
   1faec:	movw	r1, #0
   1faf0:	sub	r0, r1, r0
   1faf4:	mvn	r1, #0
   1faf8:	udiv	r0, r1, r0
   1fafc:	str	r0, [sp, #188]	; 0xbc
   1fb00:	ldr	r0, [sp, #188]	; 0xbc
   1fb04:	ldr	r1, [fp, #-8]
   1fb08:	ldr	r2, [r1]
   1fb0c:	ldr	r1, [r1, #4]
   1fb10:	mvn	r1, r1
   1fb14:	mvn	r2, r2
   1fb18:	subs	r0, r2, r0
   1fb1c:	sbcs	r1, r1, #0
   1fb20:	str	r0, [sp, #184]	; 0xb8
   1fb24:	str	r1, [sp, #180]	; 0xb4
   1fb28:	bcs	1fca8 <__assert_fail@plt+0xe574>
   1fb2c:	b	1fcc8 <__assert_fail@plt+0xe594>
   1fb30:	b	1fb34 <__assert_fail@plt+0xe400>
   1fb34:	b	1fb94 <__assert_fail@plt+0xe460>
   1fb38:	b	1fb94 <__assert_fail@plt+0xe460>
   1fb3c:	ldr	r0, [fp, #-12]
   1fb40:	cmn	r0, #1
   1fb44:	bne	1fb94 <__assert_fail@plt+0xe460>
   1fb48:	b	1fb68 <__assert_fail@plt+0xe434>
   1fb4c:	ldr	r0, [fp, #-8]
   1fb50:	ldr	r1, [r0]
   1fb54:	ldr	r0, [r0, #4]
   1fb58:	orr	r0, r1, r0
   1fb5c:	cmp	r0, #0
   1fb60:	bne	1fca8 <__assert_fail@plt+0xe574>
   1fb64:	b	1fcc8 <__assert_fail@plt+0xe594>
   1fb68:	ldr	r0, [fp, #-8]
   1fb6c:	ldr	r1, [r0]
   1fb70:	ldr	r0, [r0, #4]
   1fb74:	orr	r0, r1, r0
   1fb78:	cmp	r0, #0
   1fb7c:	beq	1fcc8 <__assert_fail@plt+0xe594>
   1fb80:	b	1fb84 <__assert_fail@plt+0xe450>
   1fb84:	mov	r0, #0
   1fb88:	cmp	r0, #0
   1fb8c:	bne	1fca8 <__assert_fail@plt+0xe574>
   1fb90:	b	1fcc8 <__assert_fail@plt+0xe594>
   1fb94:	ldr	r0, [fp, #-12]
   1fb98:	mov	r1, #0
   1fb9c:	sdiv	r0, r1, r0
   1fba0:	ldr	r1, [fp, #-8]
   1fba4:	ldr	r2, [r1]
   1fba8:	ldr	r1, [r1, #4]
   1fbac:	subs	r2, r0, r2
   1fbb0:	rscs	r0, r1, r0, asr #31
   1fbb4:	str	r2, [sp, #176]	; 0xb0
   1fbb8:	str	r0, [sp, #172]	; 0xac
   1fbbc:	bcc	1fca8 <__assert_fail@plt+0xe574>
   1fbc0:	b	1fcc8 <__assert_fail@plt+0xe594>
   1fbc4:	ldr	r0, [fp, #-12]
   1fbc8:	cmp	r0, #0
   1fbcc:	bne	1fbd4 <__assert_fail@plt+0xe4a0>
   1fbd0:	b	1fcc8 <__assert_fail@plt+0xe594>
   1fbd4:	mov	r0, #1
   1fbd8:	cmp	r0, #0
   1fbdc:	bne	1fc78 <__assert_fail@plt+0xe544>
   1fbe0:	b	1fbe4 <__assert_fail@plt+0xe4b0>
   1fbe4:	b	1fbec <__assert_fail@plt+0xe4b8>
   1fbe8:	b	1fbf0 <__assert_fail@plt+0xe4bc>
   1fbec:	b	1fc40 <__assert_fail@plt+0xe50c>
   1fbf0:	ldr	r0, [fp, #-8]
   1fbf4:	ldr	r1, [r0]
   1fbf8:	ldr	r0, [r0, #4]
   1fbfc:	and	r0, r1, r0
   1fc00:	cmn	r0, #1
   1fc04:	bne	1fc40 <__assert_fail@plt+0xe50c>
   1fc08:	b	1fc0c <__assert_fail@plt+0xe4d8>
   1fc0c:	b	1fc10 <__assert_fail@plt+0xe4dc>
   1fc10:	ldr	r0, [fp, #-12]
   1fc14:	add	r0, r0, #0
   1fc18:	movw	r1, #0
   1fc1c:	cmp	r1, r0
   1fc20:	blt	1fca8 <__assert_fail@plt+0xe574>
   1fc24:	b	1fcc8 <__assert_fail@plt+0xe594>
   1fc28:	ldr	r0, [fp, #-12]
   1fc2c:	sub	r0, r0, #1
   1fc30:	mvn	r1, #0
   1fc34:	cmp	r1, r0
   1fc38:	blt	1fca8 <__assert_fail@plt+0xe574>
   1fc3c:	b	1fcc8 <__assert_fail@plt+0xe594>
   1fc40:	ldr	r0, [fp, #-8]
   1fc44:	ldr	r2, [r0]
   1fc48:	ldr	r3, [r0, #4]
   1fc4c:	mov	r0, #0
   1fc50:	str	r0, [sp, #168]	; 0xa8
   1fc54:	ldr	r1, [sp, #168]	; 0xa8
   1fc58:	bl	22b0c <__assert_fail@plt+0x113d8>
   1fc5c:	ldr	r2, [fp, #-12]
   1fc60:	subs	r0, r0, r2
   1fc64:	sbcs	r1, r1, r2, asr #31
   1fc68:	str	r0, [sp, #164]	; 0xa4
   1fc6c:	str	r1, [sp, #160]	; 0xa0
   1fc70:	bcc	1fca8 <__assert_fail@plt+0xe574>
   1fc74:	b	1fcc8 <__assert_fail@plt+0xe594>
   1fc78:	ldr	r0, [fp, #-12]
   1fc7c:	mvn	r1, #0
   1fc80:	udiv	r0, r1, r0
   1fc84:	ldr	r1, [fp, #-8]
   1fc88:	ldr	r2, [r1]
   1fc8c:	ldr	r1, [r1, #4]
   1fc90:	subs	r0, r0, r2
   1fc94:	rscs	r1, r1, #0
   1fc98:	str	r0, [sp, #156]	; 0x9c
   1fc9c:	str	r1, [sp, #152]	; 0x98
   1fca0:	bcs	1fcc8 <__assert_fail@plt+0xe594>
   1fca4:	b	1fca8 <__assert_fail@plt+0xe574>
   1fca8:	ldr	r0, [fp, #-8]
   1fcac:	ldr	r0, [r0]
   1fcb0:	ldr	r1, [fp, #-12]
   1fcb4:	mul	r0, r0, r1
   1fcb8:	mov	r1, #0
   1fcbc:	str	r1, [fp, #-20]	; 0xffffffec
   1fcc0:	str	r0, [fp, #-24]	; 0xffffffe8
   1fcc4:	b	202ec <__assert_fail@plt+0xebb8>
   1fcc8:	ldr	r0, [fp, #-8]
   1fccc:	ldr	r0, [r0]
   1fcd0:	ldr	r1, [fp, #-12]
   1fcd4:	mul	r0, r0, r1
   1fcd8:	mov	r1, #0
   1fcdc:	str	r1, [fp, #-20]	; 0xffffffec
   1fce0:	str	r0, [fp, #-24]	; 0xffffffe8
   1fce4:	b	20308 <__assert_fail@plt+0xebd4>
   1fce8:	b	20004 <__assert_fail@plt+0xe8d0>
   1fcec:	ldr	r0, [fp, #-12]
   1fcf0:	cmp	r0, #0
   1fcf4:	bge	1feb8 <__assert_fail@plt+0xe784>
   1fcf8:	mov	r0, #1
   1fcfc:	cmp	r0, #0
   1fd00:	bne	1fe00 <__assert_fail@plt+0xe6cc>
   1fd04:	b	1fd08 <__assert_fail@plt+0xe5d4>
   1fd08:	b	1fd0c <__assert_fail@plt+0xe5d8>
   1fd0c:	ldr	r0, [fp, #-8]
   1fd10:	ldr	r1, [r0]
   1fd14:	ldr	r0, [r0, #4]
   1fd18:	ldr	r2, [fp, #-12]
   1fd1c:	asr	r3, r2, #31
   1fd20:	mvn	ip, #0
   1fd24:	mvn	lr, #-2147483648	; 0x80000000
   1fd28:	str	r0, [sp, #148]	; 0x94
   1fd2c:	mov	r0, ip
   1fd30:	str	r1, [sp, #144]	; 0x90
   1fd34:	mov	r1, lr
   1fd38:	bl	22a38 <__assert_fail@plt+0x11304>
   1fd3c:	ldr	r2, [sp, #144]	; 0x90
   1fd40:	subs	r0, r2, r0
   1fd44:	ldr	r2, [sp, #148]	; 0x94
   1fd48:	sbcs	r1, r2, r1
   1fd4c:	str	r0, [sp, #140]	; 0x8c
   1fd50:	str	r1, [sp, #136]	; 0x88
   1fd54:	bcc	1ffac <__assert_fail@plt+0xe878>
   1fd58:	b	1ffd8 <__assert_fail@plt+0xe8a4>
   1fd5c:	b	1fd60 <__assert_fail@plt+0xe62c>
   1fd60:	ldr	r0, [pc, #1480]	; 20330 <__assert_fail@plt+0xebfc>
   1fd64:	ldr	r1, [fp, #-12]
   1fd68:	cmp	r1, r0
   1fd6c:	blt	1fd84 <__assert_fail@plt+0xe650>
   1fd70:	b	1fd98 <__assert_fail@plt+0xe664>
   1fd74:	ldr	r0, [fp, #-12]
   1fd78:	movw	r1, #0
   1fd7c:	cmp	r1, r0
   1fd80:	bge	1fd98 <__assert_fail@plt+0xe664>
   1fd84:	mov	r0, #0
   1fd88:	mvn	r1, #0
   1fd8c:	str	r1, [sp, #132]	; 0x84
   1fd90:	str	r0, [sp, #128]	; 0x80
   1fd94:	b	1fdcc <__assert_fail@plt+0xe698>
   1fd98:	ldr	r0, [fp, #-12]
   1fd9c:	rsb	r0, r0, #0
   1fda0:	asr	r3, r0, #31
   1fda4:	mvn	r1, #0
   1fda8:	mvn	r2, #-2147483648	; 0x80000000
   1fdac:	str	r0, [sp, #124]	; 0x7c
   1fdb0:	mov	r0, r1
   1fdb4:	mov	r1, r2
   1fdb8:	ldr	r2, [sp, #124]	; 0x7c
   1fdbc:	bl	22a38 <__assert_fail@plt+0x11304>
   1fdc0:	str	r0, [sp, #132]	; 0x84
   1fdc4:	str	r1, [sp, #128]	; 0x80
   1fdc8:	b	1fdcc <__assert_fail@plt+0xe698>
   1fdcc:	ldr	r0, [sp, #128]	; 0x80
   1fdd0:	ldr	r1, [sp, #132]	; 0x84
   1fdd4:	ldr	r2, [fp, #-8]
   1fdd8:	ldr	r3, [r2]
   1fddc:	ldr	r2, [r2, #4]
   1fde0:	mvn	r2, r2
   1fde4:	mvn	r3, r3
   1fde8:	subs	r1, r3, r1
   1fdec:	sbcs	r0, r2, r0
   1fdf0:	str	r1, [sp, #120]	; 0x78
   1fdf4:	str	r0, [sp, #116]	; 0x74
   1fdf8:	bcs	1ffac <__assert_fail@plt+0xe878>
   1fdfc:	b	1ffd8 <__assert_fail@plt+0xe8a4>
   1fe00:	ldr	r0, [fp, #-12]
   1fe04:	cmn	r0, #1
   1fe08:	bne	1fe70 <__assert_fail@plt+0xe73c>
   1fe0c:	b	1fe30 <__assert_fail@plt+0xe6fc>
   1fe10:	ldr	r0, [fp, #-8]
   1fe14:	ldr	r1, [r0]
   1fe18:	ldr	r0, [r0, #4]
   1fe1c:	eor	r0, r0, #-2147483648	; 0x80000000
   1fe20:	orr	r0, r1, r0
   1fe24:	cmp	r0, #0
   1fe28:	bne	1ffac <__assert_fail@plt+0xe878>
   1fe2c:	b	1ffd8 <__assert_fail@plt+0xe8a4>
   1fe30:	ldr	r0, [fp, #-8]
   1fe34:	ldr	r1, [r0]
   1fe38:	ldr	r0, [r0, #4]
   1fe3c:	orr	r0, r1, r0
   1fe40:	cmp	r0, #0
   1fe44:	beq	1ffd8 <__assert_fail@plt+0xe8a4>
   1fe48:	b	1fe4c <__assert_fail@plt+0xe718>
   1fe4c:	ldr	r0, [fp, #-8]
   1fe50:	ldr	r1, [r0]
   1fe54:	ldr	r0, [r0, #4]
   1fe58:	subs	r1, r1, #1
   1fe5c:	sbc	r0, r0, #0
   1fe60:	cmp	r0, #0
   1fe64:	str	r1, [sp, #112]	; 0x70
   1fe68:	blt	1ffac <__assert_fail@plt+0xe878>
   1fe6c:	b	1ffd8 <__assert_fail@plt+0xe8a4>
   1fe70:	ldr	r0, [fp, #-12]
   1fe74:	asr	r3, r0, #31
   1fe78:	mov	r1, #0
   1fe7c:	mov	r2, #-2147483648	; 0x80000000
   1fe80:	str	r0, [sp, #108]	; 0x6c
   1fe84:	mov	r0, r1
   1fe88:	mov	r1, r2
   1fe8c:	ldr	r2, [sp, #108]	; 0x6c
   1fe90:	bl	22a38 <__assert_fail@plt+0x11304>
   1fe94:	ldr	r2, [fp, #-8]
   1fe98:	ldr	r3, [r2]
   1fe9c:	ldr	r2, [r2, #4]
   1fea0:	subs	r0, r0, r3
   1fea4:	sbcs	r1, r1, r2
   1fea8:	str	r0, [sp, #104]	; 0x68
   1feac:	str	r1, [sp, #100]	; 0x64
   1feb0:	bcc	1ffac <__assert_fail@plt+0xe878>
   1feb4:	b	1ffd8 <__assert_fail@plt+0xe8a4>
   1feb8:	ldr	r0, [fp, #-12]
   1febc:	cmp	r0, #0
   1fec0:	bne	1fec8 <__assert_fail@plt+0xe794>
   1fec4:	b	1ffd8 <__assert_fail@plt+0xe8a4>
   1fec8:	mov	r0, #1
   1fecc:	cmp	r0, #0
   1fed0:	bne	1ff64 <__assert_fail@plt+0xe830>
   1fed4:	b	1fed8 <__assert_fail@plt+0xe7a4>
   1fed8:	ldr	r0, [fp, #-8]
   1fedc:	ldr	r1, [r0]
   1fee0:	ldr	r0, [r0, #4]
   1fee4:	and	r0, r1, r0
   1fee8:	cmn	r0, #1
   1feec:	bne	1ff30 <__assert_fail@plt+0xe7fc>
   1fef0:	b	1fef4 <__assert_fail@plt+0xe7c0>
   1fef4:	b	1fef8 <__assert_fail@plt+0xe7c4>
   1fef8:	ldr	r0, [fp, #-12]
   1fefc:	mov	r1, #-2147483648	; 0x80000000
   1ff00:	add	r1, r1, r0, asr #31
   1ff04:	rsbs	r0, r0, #0
   1ff08:	rscs	r1, r1, #0
   1ff0c:	str	r0, [sp, #96]	; 0x60
   1ff10:	str	r1, [sp, #92]	; 0x5c
   1ff14:	blt	1ffac <__assert_fail@plt+0xe878>
   1ff18:	b	1ffd8 <__assert_fail@plt+0xe8a4>
   1ff1c:	mov	r0, #0
   1ff20:	cmp	r0, #0
   1ff24:	bne	1ffac <__assert_fail@plt+0xe878>
   1ff28:	b	1ffd8 <__assert_fail@plt+0xe8a4>
   1ff2c:			; <UNDEFINED> instruction: 0xffff8000
   1ff30:	ldr	r0, [fp, #-8]
   1ff34:	ldr	r2, [r0]
   1ff38:	ldr	r3, [r0, #4]
   1ff3c:	mov	r0, #0
   1ff40:	mov	r1, #-2147483648	; 0x80000000
   1ff44:	bl	22b0c <__assert_fail@plt+0x113d8>
   1ff48:	ldr	r2, [fp, #-12]
   1ff4c:	subs	r0, r0, r2
   1ff50:	sbcs	r1, r1, r2, asr #31
   1ff54:	str	r0, [sp, #88]	; 0x58
   1ff58:	str	r1, [sp, #84]	; 0x54
   1ff5c:	bcc	1ffac <__assert_fail@plt+0xe878>
   1ff60:	b	1ffd8 <__assert_fail@plt+0xe8a4>
   1ff64:	ldr	r0, [fp, #-12]
   1ff68:	asr	r3, r0, #31
   1ff6c:	mvn	r1, #0
   1ff70:	mvn	r2, #-2147483648	; 0x80000000
   1ff74:	str	r0, [sp, #80]	; 0x50
   1ff78:	mov	r0, r1
   1ff7c:	mov	r1, r2
   1ff80:	ldr	r2, [sp, #80]	; 0x50
   1ff84:	bl	22a38 <__assert_fail@plt+0x11304>
   1ff88:	ldr	r2, [fp, #-8]
   1ff8c:	ldr	r3, [r2]
   1ff90:	ldr	r2, [r2, #4]
   1ff94:	subs	r0, r0, r3
   1ff98:	sbcs	r1, r1, r2
   1ff9c:	str	r0, [sp, #76]	; 0x4c
   1ffa0:	str	r1, [sp, #72]	; 0x48
   1ffa4:	bcs	1ffd8 <__assert_fail@plt+0xe8a4>
   1ffa8:	b	1ffac <__assert_fail@plt+0xe878>
   1ffac:	ldr	r0, [fp, #-8]
   1ffb0:	ldr	r1, [r0]
   1ffb4:	ldr	r0, [r0, #4]
   1ffb8:	ldr	r2, [fp, #-12]
   1ffbc:	asr	r3, r2, #31
   1ffc0:	umull	ip, lr, r1, r2
   1ffc4:	mla	r1, r1, r3, lr
   1ffc8:	mla	r0, r0, r2, r1
   1ffcc:	str	ip, [fp, #-24]	; 0xffffffe8
   1ffd0:	str	r0, [fp, #-20]	; 0xffffffec
   1ffd4:	b	202ec <__assert_fail@plt+0xebb8>
   1ffd8:	ldr	r0, [fp, #-8]
   1ffdc:	ldr	r1, [r0]
   1ffe0:	ldr	r0, [r0, #4]
   1ffe4:	ldr	r2, [fp, #-12]
   1ffe8:	asr	r3, r2, #31
   1ffec:	umull	ip, lr, r1, r2
   1fff0:	mla	r1, r1, r3, lr
   1fff4:	mla	r0, r0, r2, r1
   1fff8:	str	ip, [fp, #-24]	; 0xffffffe8
   1fffc:	str	r0, [fp, #-20]	; 0xffffffec
   20000:	b	20308 <__assert_fail@plt+0xebd4>
   20004:	ldr	r0, [fp, #-12]
   20008:	cmp	r0, #0
   2000c:	bge	201a0 <__assert_fail@plt+0xea6c>
   20010:	mov	r0, #1
   20014:	cmp	r0, #0
   20018:	bne	2010c <__assert_fail@plt+0xe9d8>
   2001c:	b	20020 <__assert_fail@plt+0xe8ec>
   20020:	b	20070 <__assert_fail@plt+0xe93c>
   20024:	ldr	r0, [fp, #-8]
   20028:	ldr	r1, [r0]
   2002c:	ldr	r0, [r0, #4]
   20030:	ldr	r2, [fp, #-12]
   20034:	asr	r3, r2, #31
   20038:	mvn	ip, #0
   2003c:	str	r0, [sp, #68]	; 0x44
   20040:	mov	r0, ip
   20044:	str	r1, [sp, #64]	; 0x40
   20048:	mov	r1, ip
   2004c:	bl	22b0c <__assert_fail@plt+0x113d8>
   20050:	ldr	r2, [sp, #64]	; 0x40
   20054:	subs	r0, r2, r0
   20058:	ldr	r2, [sp, #68]	; 0x44
   2005c:	sbcs	r1, r2, r1
   20060:	str	r0, [sp, #60]	; 0x3c
   20064:	str	r1, [sp, #56]	; 0x38
   20068:	bcc	20294 <__assert_fail@plt+0xeb60>
   2006c:	b	202c0 <__assert_fail@plt+0xeb8c>
   20070:	b	20074 <__assert_fail@plt+0xe940>
   20074:	ldr	r0, [pc, #692]	; 20330 <__assert_fail@plt+0xebfc>
   20078:	ldr	r1, [fp, #-12]
   2007c:	cmp	r1, r0
   20080:	blt	20098 <__assert_fail@plt+0xe964>
   20084:	b	200ac <__assert_fail@plt+0xe978>
   20088:	ldr	r0, [fp, #-12]
   2008c:	movw	r1, #0
   20090:	cmp	r1, r0
   20094:	bge	200ac <__assert_fail@plt+0xe978>
   20098:	mov	r0, #1
   2009c:	mvn	r1, #0
   200a0:	str	r1, [sp, #52]	; 0x34
   200a4:	str	r0, [sp, #48]	; 0x30
   200a8:	b	200d8 <__assert_fail@plt+0xe9a4>
   200ac:	ldr	r0, [fp, #-12]
   200b0:	rsb	r0, r0, #0
   200b4:	asr	r3, r0, #31
   200b8:	mvn	r1, #0
   200bc:	str	r0, [sp, #44]	; 0x2c
   200c0:	mov	r0, r1
   200c4:	ldr	r2, [sp, #44]	; 0x2c
   200c8:	bl	22b0c <__assert_fail@plt+0x113d8>
   200cc:	str	r0, [sp, #52]	; 0x34
   200d0:	str	r1, [sp, #48]	; 0x30
   200d4:	b	200d8 <__assert_fail@plt+0xe9a4>
   200d8:	ldr	r0, [sp, #48]	; 0x30
   200dc:	ldr	r1, [sp, #52]	; 0x34
   200e0:	ldr	r2, [fp, #-8]
   200e4:	ldr	r3, [r2]
   200e8:	ldr	r2, [r2, #4]
   200ec:	mvn	r2, r2
   200f0:	mvn	r3, r3
   200f4:	subs	r1, r3, r1
   200f8:	sbcs	r0, r2, r0
   200fc:	str	r1, [sp, #40]	; 0x28
   20100:	str	r0, [sp, #36]	; 0x24
   20104:	bcs	20294 <__assert_fail@plt+0xeb60>
   20108:	b	202c0 <__assert_fail@plt+0xeb8c>
   2010c:	b	20110 <__assert_fail@plt+0xe9dc>
   20110:	b	20170 <__assert_fail@plt+0xea3c>
   20114:	b	20170 <__assert_fail@plt+0xea3c>
   20118:	ldr	r0, [fp, #-12]
   2011c:	cmn	r0, #1
   20120:	bne	20170 <__assert_fail@plt+0xea3c>
   20124:	b	20144 <__assert_fail@plt+0xea10>
   20128:	ldr	r0, [fp, #-8]
   2012c:	ldr	r1, [r0]
   20130:	ldr	r0, [r0, #4]
   20134:	orr	r0, r1, r0
   20138:	cmp	r0, #0
   2013c:	bne	20294 <__assert_fail@plt+0xeb60>
   20140:	b	202c0 <__assert_fail@plt+0xeb8c>
   20144:	ldr	r0, [fp, #-8]
   20148:	ldr	r1, [r0]
   2014c:	ldr	r0, [r0, #4]
   20150:	orr	r0, r1, r0
   20154:	cmp	r0, #0
   20158:	beq	202c0 <__assert_fail@plt+0xeb8c>
   2015c:	b	20160 <__assert_fail@plt+0xea2c>
   20160:	mov	r0, #0
   20164:	cmp	r0, #0
   20168:	bne	20294 <__assert_fail@plt+0xeb60>
   2016c:	b	202c0 <__assert_fail@plt+0xeb8c>
   20170:	ldr	r0, [fp, #-12]
   20174:	mov	r1, #0
   20178:	sdiv	r0, r1, r0
   2017c:	ldr	r1, [fp, #-8]
   20180:	ldr	r2, [r1]
   20184:	ldr	r1, [r1, #4]
   20188:	subs	r2, r0, r2
   2018c:	rscs	r0, r1, r0, asr #31
   20190:	str	r2, [sp, #32]
   20194:	str	r0, [sp, #28]
   20198:	bcc	20294 <__assert_fail@plt+0xeb60>
   2019c:	b	202c0 <__assert_fail@plt+0xeb8c>
   201a0:	ldr	r0, [fp, #-12]
   201a4:	cmp	r0, #0
   201a8:	bne	201b0 <__assert_fail@plt+0xea7c>
   201ac:	b	202c0 <__assert_fail@plt+0xeb8c>
   201b0:	mov	r0, #1
   201b4:	cmp	r0, #0
   201b8:	bne	20254 <__assert_fail@plt+0xeb20>
   201bc:	b	201c0 <__assert_fail@plt+0xea8c>
   201c0:	b	201c8 <__assert_fail@plt+0xea94>
   201c4:	b	201cc <__assert_fail@plt+0xea98>
   201c8:	b	2021c <__assert_fail@plt+0xeae8>
   201cc:	ldr	r0, [fp, #-8]
   201d0:	ldr	r1, [r0]
   201d4:	ldr	r0, [r0, #4]
   201d8:	and	r0, r1, r0
   201dc:	cmn	r0, #1
   201e0:	bne	2021c <__assert_fail@plt+0xeae8>
   201e4:	b	201e8 <__assert_fail@plt+0xeab4>
   201e8:	b	201ec <__assert_fail@plt+0xeab8>
   201ec:	ldr	r0, [fp, #-12]
   201f0:	add	r0, r0, #0
   201f4:	movw	r1, #0
   201f8:	cmp	r1, r0
   201fc:	blt	20294 <__assert_fail@plt+0xeb60>
   20200:	b	202c0 <__assert_fail@plt+0xeb8c>
   20204:	ldr	r0, [fp, #-12]
   20208:	sub	r0, r0, #1
   2020c:	mvn	r1, #0
   20210:	cmp	r1, r0
   20214:	blt	20294 <__assert_fail@plt+0xeb60>
   20218:	b	202c0 <__assert_fail@plt+0xeb8c>
   2021c:	ldr	r0, [fp, #-8]
   20220:	ldr	r2, [r0]
   20224:	ldr	r3, [r0, #4]
   20228:	mov	r0, #0
   2022c:	str	r0, [sp, #24]
   20230:	ldr	r1, [sp, #24]
   20234:	bl	22b0c <__assert_fail@plt+0x113d8>
   20238:	ldr	r2, [fp, #-12]
   2023c:	subs	r0, r0, r2
   20240:	sbcs	r1, r1, r2, asr #31
   20244:	str	r0, [sp, #20]
   20248:	str	r1, [sp, #16]
   2024c:	bcc	20294 <__assert_fail@plt+0xeb60>
   20250:	b	202c0 <__assert_fail@plt+0xeb8c>
   20254:	ldr	r0, [fp, #-12]
   20258:	asr	r3, r0, #31
   2025c:	mvn	r1, #0
   20260:	str	r0, [sp, #12]
   20264:	mov	r0, r1
   20268:	ldr	r2, [sp, #12]
   2026c:	bl	22b0c <__assert_fail@plt+0x113d8>
   20270:	ldr	r2, [fp, #-8]
   20274:	ldr	r3, [r2]
   20278:	ldr	r2, [r2, #4]
   2027c:	subs	r0, r0, r3
   20280:	sbcs	r1, r1, r2
   20284:	str	r0, [sp, #8]
   20288:	str	r1, [sp, #4]
   2028c:	bcs	202c0 <__assert_fail@plt+0xeb8c>
   20290:	b	20294 <__assert_fail@plt+0xeb60>
   20294:	ldr	r0, [fp, #-8]
   20298:	ldr	r1, [r0]
   2029c:	ldr	r0, [r0, #4]
   202a0:	ldr	r2, [fp, #-12]
   202a4:	asr	r3, r2, #31
   202a8:	umull	ip, lr, r1, r2
   202ac:	mla	r1, r1, r3, lr
   202b0:	mla	r0, r0, r2, r1
   202b4:	str	ip, [fp, #-24]	; 0xffffffe8
   202b8:	str	r0, [fp, #-20]	; 0xffffffec
   202bc:	b	202ec <__assert_fail@plt+0xebb8>
   202c0:	ldr	r0, [fp, #-8]
   202c4:	ldr	r1, [r0]
   202c8:	ldr	r0, [r0, #4]
   202cc:	ldr	r2, [fp, #-12]
   202d0:	asr	r3, r2, #31
   202d4:	umull	ip, lr, r1, r2
   202d8:	mla	r1, r1, r3, lr
   202dc:	mla	r0, r0, r2, r1
   202e0:	str	ip, [fp, #-24]	; 0xffffffe8
   202e4:	str	r0, [fp, #-20]	; 0xffffffec
   202e8:	b	20308 <__assert_fail@plt+0xebd4>
   202ec:	ldr	r0, [fp, #-8]
   202f0:	mvn	r1, #0
   202f4:	str	r1, [r0, #4]
   202f8:	str	r1, [r0]
   202fc:	movw	r0, #1
   20300:	str	r0, [fp, #-4]
   20304:	b	20324 <__assert_fail@plt+0xebf0>
   20308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2030c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20310:	ldr	r2, [fp, #-8]
   20314:	str	r1, [r2, #4]
   20318:	str	r0, [r2]
   2031c:	movw	r0, #0
   20320:	str	r0, [fp, #-4]
   20324:	ldr	r0, [fp, #-4]
   20328:	mov	sp, fp
   2032c:	pop	{fp, pc}
   20330:	andhi	r0, r0, r1
   20334:	svcvc	0x00ffffff
   20338:	push	{fp, lr}
   2033c:	mov	fp, sp
   20340:	sub	sp, sp, #16
   20344:	str	r0, [fp, #-4]
   20348:	str	r1, [sp, #8]
   2034c:	str	r2, [sp, #4]
   20350:	movw	r0, #0
   20354:	str	r0, [sp]
   20358:	ldr	r0, [sp, #4]
   2035c:	mvn	r1, #0
   20360:	add	r1, r0, r1
   20364:	str	r1, [sp, #4]
   20368:	cmp	r0, #0
   2036c:	beq	2038c <__assert_fail@plt+0xec58>
   20370:	ldr	r0, [fp, #-4]
   20374:	ldr	r1, [sp, #8]
   20378:	bl	1e830 <__assert_fail@plt+0xd0fc>
   2037c:	ldr	r1, [sp]
   20380:	orr	r0, r1, r0
   20384:	str	r0, [sp]
   20388:	b	20358 <__assert_fail@plt+0xec24>
   2038c:	ldr	r0, [sp]
   20390:	mov	sp, fp
   20394:	pop	{fp, pc}
   20398:	push	{fp, lr}
   2039c:	mov	fp, sp
   203a0:	sub	sp, sp, #16
   203a4:	str	r0, [sp, #8]
   203a8:	str	r1, [sp, #4]
   203ac:	ldr	r0, [sp, #8]
   203b0:	cmp	r0, #0
   203b4:	beq	203c4 <__assert_fail@plt+0xec90>
   203b8:	ldr	r0, [sp, #4]
   203bc:	cmp	r0, #0
   203c0:	bne	203d0 <__assert_fail@plt+0xec9c>
   203c4:	movw	r0, #1
   203c8:	str	r0, [sp, #4]
   203cc:	str	r0, [sp, #8]
   203d0:	ldr	r0, [sp, #4]
   203d4:	cmp	r0, #0
   203d8:	beq	2040c <__assert_fail@plt+0xecd8>
   203dc:	ldr	r0, [pc, #76]	; 20430 <__assert_fail@plt+0xecfc>
   203e0:	ldr	r1, [sp, #4]
   203e4:	udiv	r0, r0, r1
   203e8:	ldr	r1, [sp, #8]
   203ec:	cmp	r0, r1
   203f0:	bcs	2040c <__assert_fail@plt+0xecd8>
   203f4:	bl	115f0 <__errno_location@plt>
   203f8:	movw	lr, #12
   203fc:	str	lr, [r0]
   20400:	movw	r0, #0
   20404:	str	r0, [fp, #-4]
   20408:	b	20424 <__assert_fail@plt+0xecf0>
   2040c:	ldr	r0, [sp, #8]
   20410:	ldr	r1, [sp, #4]
   20414:	bl	11398 <calloc@plt>
   20418:	str	r0, [sp]
   2041c:	ldr	r0, [sp]
   20420:	str	r0, [fp, #-4]
   20424:	ldr	r0, [fp, #-4]
   20428:	mov	sp, fp
   2042c:	pop	{fp, pc}
   20430:	svcvc	0x00ffffff
   20434:	push	{fp, lr}
   20438:	mov	fp, sp
   2043c:	sub	sp, sp, #16
   20440:	str	r0, [sp, #8]
   20444:	ldr	r0, [sp, #8]
   20448:	cmp	r0, #0
   2044c:	bne	20458 <__assert_fail@plt+0xed24>
   20450:	movw	r0, #1
   20454:	str	r0, [sp, #8]
   20458:	ldr	r0, [pc, #64]	; 204a0 <__assert_fail@plt+0xed6c>
   2045c:	ldr	r1, [sp, #8]
   20460:	cmp	r0, r1
   20464:	bcs	20480 <__assert_fail@plt+0xed4c>
   20468:	bl	115f0 <__errno_location@plt>
   2046c:	movw	lr, #12
   20470:	str	lr, [r0]
   20474:	movw	r0, #0
   20478:	str	r0, [fp, #-4]
   2047c:	b	20494 <__assert_fail@plt+0xed60>
   20480:	ldr	r0, [sp, #8]
   20484:	bl	11530 <malloc@plt>
   20488:	str	r0, [sp, #4]
   2048c:	ldr	r0, [sp, #4]
   20490:	str	r0, [fp, #-4]
   20494:	ldr	r0, [fp, #-4]
   20498:	mov	sp, fp
   2049c:	pop	{fp, pc}
   204a0:	svcvc	0x00ffffff
   204a4:	push	{fp, lr}
   204a8:	mov	fp, sp
   204ac:	sub	sp, sp, #16
   204b0:	str	r0, [sp, #8]
   204b4:	str	r1, [sp, #4]
   204b8:	ldr	r0, [sp, #8]
   204bc:	movw	r1, #0
   204c0:	cmp	r0, r1
   204c4:	bne	204d8 <__assert_fail@plt+0xeda4>
   204c8:	ldr	r0, [sp, #4]
   204cc:	bl	20434 <__assert_fail@plt+0xed00>
   204d0:	str	r0, [fp, #-4]
   204d4:	b	20538 <__assert_fail@plt+0xee04>
   204d8:	ldr	r0, [sp, #4]
   204dc:	cmp	r0, #0
   204e0:	bne	204f8 <__assert_fail@plt+0xedc4>
   204e4:	ldr	r0, [sp, #8]
   204e8:	bl	176a4 <__assert_fail@plt+0x5f70>
   204ec:	movw	r0, #0
   204f0:	str	r0, [fp, #-4]
   204f4:	b	20538 <__assert_fail@plt+0xee04>
   204f8:	ldr	r0, [pc, #68]	; 20544 <__assert_fail@plt+0xee10>
   204fc:	ldr	r1, [sp, #4]
   20500:	cmp	r0, r1
   20504:	bcs	20520 <__assert_fail@plt+0xedec>
   20508:	bl	115f0 <__errno_location@plt>
   2050c:	movw	lr, #12
   20510:	str	lr, [r0]
   20514:	movw	r0, #0
   20518:	str	r0, [fp, #-4]
   2051c:	b	20538 <__assert_fail@plt+0xee04>
   20520:	ldr	r0, [sp, #8]
   20524:	ldr	r1, [sp, #4]
   20528:	bl	11470 <realloc@plt>
   2052c:	str	r0, [sp]
   20530:	ldr	r0, [sp]
   20534:	str	r0, [fp, #-4]
   20538:	ldr	r0, [fp, #-4]
   2053c:	mov	sp, fp
   20540:	pop	{fp, pc}
   20544:	svcvc	0x00ffffff
   20548:	push	{fp, lr}
   2054c:	mov	fp, sp
   20550:	sub	sp, sp, #8
   20554:	str	r0, [sp, #4]
   20558:	ldr	r0, [sp, #4]
   2055c:	bl	176a4 <__assert_fail@plt+0x5f70>
   20560:	mov	sp, fp
   20564:	pop	{fp, pc}
   20568:	push	{fp, lr}
   2056c:	mov	fp, sp
   20570:	sub	sp, sp, #8
   20574:	str	r0, [sp, #4]
   20578:	str	r1, [sp]
   2057c:	ldr	r0, [sp, #4]
   20580:	mvn	r1, #0
   20584:	cmp	r1, r0
   20588:	bcs	20594 <__assert_fail@plt+0xee60>
   2058c:	mvn	r0, #0
   20590:	str	r0, [sp, #4]
   20594:	ldr	r0, [sp]
   20598:	mvn	r1, #0
   2059c:	cmp	r1, r0
   205a0:	bcs	205ac <__assert_fail@plt+0xee78>
   205a4:	mvn	r0, #0
   205a8:	str	r0, [sp]
   205ac:	ldr	r0, [sp, #4]
   205b0:	ldr	r1, [sp]
   205b4:	bl	116e0 <aligned_alloc@plt>
   205b8:	mov	sp, fp
   205bc:	pop	{fp, pc}
   205c0:	sub	sp, sp, #8
   205c4:	str	r0, [sp, #4]
   205c8:	str	r1, [sp]
   205cc:	movw	r0, #0
   205d0:	add	sp, sp, #8
   205d4:	bx	lr
   205d8:	push	{fp, lr}
   205dc:	mov	fp, sp
   205e0:	sub	sp, sp, #8
   205e4:	str	r0, [sp, #4]
   205e8:	str	r1, [sp]
   205ec:	ldr	r0, [sp, #4]
   205f0:	ldr	r1, [sp]
   205f4:	bl	205c0 <__assert_fail@plt+0xee8c>
   205f8:	mov	sp, fp
   205fc:	pop	{fp, pc}
   20600:	push	{fp, lr}
   20604:	mov	fp, sp
   20608:	sub	sp, sp, #24
   2060c:	str	r0, [fp, #-8]
   20610:	str	r1, [sp, #12]
   20614:	ldr	r0, [fp, #-8]
   20618:	str	r0, [sp, #8]
   2061c:	ldr	r0, [sp, #12]
   20620:	str	r0, [sp, #4]
   20624:	ldr	r0, [sp, #8]
   20628:	ldr	r1, [sp, #4]
   2062c:	cmp	r0, r1
   20630:	bne	20640 <__assert_fail@plt+0xef0c>
   20634:	movw	r0, #0
   20638:	str	r0, [fp, #-4]
   2063c:	b	206ac <__assert_fail@plt+0xef78>
   20640:	b	20644 <__assert_fail@plt+0xef10>
   20644:	ldr	r0, [sp, #8]
   20648:	ldrb	r0, [r0]
   2064c:	bl	223d8 <__assert_fail@plt+0x10ca4>
   20650:	strb	r0, [sp, #3]
   20654:	ldr	r0, [sp, #4]
   20658:	ldrb	r0, [r0]
   2065c:	bl	223d8 <__assert_fail@plt+0x10ca4>
   20660:	strb	r0, [sp, #2]
   20664:	ldrb	r0, [sp, #3]
   20668:	cmp	r0, #0
   2066c:	bne	20674 <__assert_fail@plt+0xef40>
   20670:	b	2069c <__assert_fail@plt+0xef68>
   20674:	ldr	r0, [sp, #8]
   20678:	add	r0, r0, #1
   2067c:	str	r0, [sp, #8]
   20680:	ldr	r0, [sp, #4]
   20684:	add	r0, r0, #1
   20688:	str	r0, [sp, #4]
   2068c:	ldrb	r0, [sp, #3]
   20690:	ldrb	r1, [sp, #2]
   20694:	cmp	r0, r1
   20698:	beq	20644 <__assert_fail@plt+0xef10>
   2069c:	ldrb	r0, [sp, #3]
   206a0:	ldrb	r1, [sp, #2]
   206a4:	sub	r0, r0, r1
   206a8:	str	r0, [fp, #-4]
   206ac:	ldr	r0, [fp, #-4]
   206b0:	mov	sp, fp
   206b4:	pop	{fp, pc}
   206b8:	push	{fp, lr}
   206bc:	mov	fp, sp
   206c0:	sub	sp, sp, #16
   206c4:	str	r0, [sp, #8]
   206c8:	ldr	r0, [sp, #8]
   206cc:	bl	114e8 <__fpending@plt>
   206d0:	cmp	r0, #0
   206d4:	movw	r0, #0
   206d8:	movne	r0, #1
   206dc:	and	r0, r0, #1
   206e0:	strb	r0, [sp, #7]
   206e4:	ldr	r0, [sp, #8]
   206e8:	bl	114f4 <ferror_unlocked@plt>
   206ec:	cmp	r0, #0
   206f0:	movw	r0, #0
   206f4:	movne	r0, #1
   206f8:	and	r0, r0, #1
   206fc:	strb	r0, [sp, #6]
   20700:	ldr	r0, [sp, #8]
   20704:	bl	173dc <__assert_fail@plt+0x5ca8>
   20708:	cmp	r0, #0
   2070c:	movw	r0, #0
   20710:	movne	r0, #1
   20714:	and	r0, r0, #1
   20718:	strb	r0, [sp, #5]
   2071c:	ldrb	r0, [sp, #6]
   20720:	tst	r0, #1
   20724:	bne	20750 <__assert_fail@plt+0xf01c>
   20728:	ldrb	r0, [sp, #5]
   2072c:	tst	r0, #1
   20730:	beq	20774 <__assert_fail@plt+0xf040>
   20734:	ldrb	r0, [sp, #7]
   20738:	tst	r0, #1
   2073c:	bne	20750 <__assert_fail@plt+0xf01c>
   20740:	bl	115f0 <__errno_location@plt>
   20744:	ldr	r0, [r0]
   20748:	cmp	r0, #9
   2074c:	beq	20774 <__assert_fail@plt+0xf040>
   20750:	ldrb	r0, [sp, #5]
   20754:	tst	r0, #1
   20758:	bne	20768 <__assert_fail@plt+0xf034>
   2075c:	bl	115f0 <__errno_location@plt>
   20760:	movw	lr, #0
   20764:	str	lr, [r0]
   20768:	mvn	r0, #0
   2076c:	str	r0, [fp, #-4]
   20770:	b	2077c <__assert_fail@plt+0xf048>
   20774:	movw	r0, #0
   20778:	str	r0, [fp, #-4]
   2077c:	ldr	r0, [fp, #-4]
   20780:	mov	sp, fp
   20784:	pop	{fp, pc}
   20788:	push	{fp, lr}
   2078c:	mov	fp, sp
   20790:	bl	115f0 <__errno_location@plt>
   20794:	movw	lr, #12
   20798:	str	lr, [r0]
   2079c:	movw	r0, #0
   207a0:	pop	{fp, pc}
   207a4:	push	{fp, lr}
   207a8:	mov	fp, sp
   207ac:	sub	sp, sp, #8
   207b0:	str	r0, [sp, #4]
   207b4:	ldr	r0, [sp, #4]
   207b8:	cmn	r0, #1
   207bc:	bhi	207d0 <__assert_fail@plt+0xf09c>
   207c0:	ldr	r0, [sp, #4]
   207c4:	bl	20434 <__assert_fail@plt+0xed00>
   207c8:	str	r0, [sp]
   207cc:	b	207d8 <__assert_fail@plt+0xf0a4>
   207d0:	bl	20788 <__assert_fail@plt+0xf054>
   207d4:	str	r0, [sp]
   207d8:	ldr	r0, [sp]
   207dc:	mov	sp, fp
   207e0:	pop	{fp, pc}
   207e4:	push	{fp, lr}
   207e8:	mov	fp, sp
   207ec:	sub	sp, sp, #16
   207f0:	str	r0, [fp, #-4]
   207f4:	str	r1, [sp, #8]
   207f8:	ldr	r0, [sp, #8]
   207fc:	cmn	r0, #1
   20800:	bhi	20838 <__assert_fail@plt+0xf104>
   20804:	ldr	r0, [fp, #-4]
   20808:	ldr	r1, [sp, #8]
   2080c:	ldr	r2, [sp, #8]
   20810:	cmp	r2, #0
   20814:	movw	r2, #0
   20818:	movne	r2, #1
   2081c:	mvn	r3, #0
   20820:	eor	r2, r2, r3
   20824:	and	r2, r2, #1
   20828:	orr	r1, r1, r2
   2082c:	bl	204a4 <__assert_fail@plt+0xed70>
   20830:	str	r0, [sp, #4]
   20834:	b	20840 <__assert_fail@plt+0xf10c>
   20838:	bl	20788 <__assert_fail@plt+0xf054>
   2083c:	str	r0, [sp, #4]
   20840:	ldr	r0, [sp, #4]
   20844:	mov	sp, fp
   20848:	pop	{fp, pc}
   2084c:	push	{fp, lr}
   20850:	mov	fp, sp
   20854:	sub	sp, sp, #16
   20858:	str	r0, [sp, #8]
   2085c:	str	r1, [sp, #4]
   20860:	ldr	r0, [sp, #8]
   20864:	mvn	r1, #0
   20868:	cmp	r1, r0
   2086c:	bcs	20890 <__assert_fail@plt+0xf15c>
   20870:	ldr	r0, [sp, #4]
   20874:	cmp	r0, #0
   20878:	beq	20888 <__assert_fail@plt+0xf154>
   2087c:	bl	20788 <__assert_fail@plt+0xf054>
   20880:	str	r0, [fp, #-4]
   20884:	b	208d0 <__assert_fail@plt+0xf19c>
   20888:	movw	r0, #0
   2088c:	str	r0, [sp, #8]
   20890:	ldr	r0, [sp, #4]
   20894:	mvn	r1, #0
   20898:	cmp	r1, r0
   2089c:	bcs	208c0 <__assert_fail@plt+0xf18c>
   208a0:	ldr	r0, [sp, #8]
   208a4:	cmp	r0, #0
   208a8:	beq	208b8 <__assert_fail@plt+0xf184>
   208ac:	bl	20788 <__assert_fail@plt+0xf054>
   208b0:	str	r0, [fp, #-4]
   208b4:	b	208d0 <__assert_fail@plt+0xf19c>
   208b8:	movw	r0, #0
   208bc:	str	r0, [sp, #4]
   208c0:	ldr	r0, [sp, #8]
   208c4:	ldr	r1, [sp, #4]
   208c8:	bl	20398 <__assert_fail@plt+0xec64>
   208cc:	str	r0, [fp, #-4]
   208d0:	ldr	r0, [fp, #-4]
   208d4:	mov	sp, fp
   208d8:	pop	{fp, pc}
   208dc:	push	{fp, lr}
   208e0:	mov	fp, sp
   208e4:	sub	sp, sp, #16
   208e8:	str	r0, [fp, #-4]
   208ec:	str	r1, [sp, #8]
   208f0:	str	r2, [sp, #4]
   208f4:	ldr	r0, [sp, #8]
   208f8:	cmp	r0, #0
   208fc:	beq	2090c <__assert_fail@plt+0xf1d8>
   20900:	ldr	r0, [sp, #4]
   20904:	cmp	r0, #0
   20908:	bne	20918 <__assert_fail@plt+0xf1e4>
   2090c:	movw	r0, #1
   20910:	str	r0, [sp, #4]
   20914:	str	r0, [sp, #8]
   20918:	ldr	r0, [sp, #8]
   2091c:	cmn	r0, #1
   20920:	bhi	20948 <__assert_fail@plt+0xf214>
   20924:	ldr	r0, [sp, #4]
   20928:	cmn	r0, #1
   2092c:	bhi	20948 <__assert_fail@plt+0xf214>
   20930:	ldr	r0, [fp, #-4]
   20934:	ldr	r1, [sp, #8]
   20938:	ldr	r2, [sp, #4]
   2093c:	bl	20a68 <__assert_fail@plt+0xf334>
   20940:	str	r0, [sp]
   20944:	b	20950 <__assert_fail@plt+0xf21c>
   20948:	bl	20788 <__assert_fail@plt+0xf054>
   2094c:	str	r0, [sp]
   20950:	ldr	r0, [sp]
   20954:	mov	sp, fp
   20958:	pop	{fp, pc}
   2095c:	push	{fp, lr}
   20960:	mov	fp, sp
   20964:	sub	sp, sp, #8
   20968:	movw	r0, #14
   2096c:	bl	116b0 <nl_langinfo@plt>
   20970:	str	r0, [sp, #4]
   20974:	ldr	r0, [sp, #4]
   20978:	movw	lr, #0
   2097c:	cmp	r0, lr
   20980:	bne	20990 <__assert_fail@plt+0xf25c>
   20984:	movw	r0, #12817	; 0x3211
   20988:	movt	r0, #2
   2098c:	str	r0, [sp, #4]
   20990:	ldr	r0, [sp, #4]
   20994:	ldrb	r0, [r0]
   20998:	cmp	r0, #0
   2099c:	bne	209ac <__assert_fail@plt+0xf278>
   209a0:	movw	r0, #17382	; 0x43e6
   209a4:	movt	r0, #2
   209a8:	str	r0, [sp, #4]
   209ac:	ldr	r0, [sp, #4]
   209b0:	mov	sp, fp
   209b4:	pop	{fp, pc}
   209b8:	push	{fp, lr}
   209bc:	mov	fp, sp
   209c0:	sub	sp, sp, #32
   209c4:	str	r0, [fp, #-8]
   209c8:	str	r1, [fp, #-12]
   209cc:	str	r2, [sp, #16]
   209d0:	str	r3, [sp, #12]
   209d4:	ldr	r0, [fp, #-8]
   209d8:	movw	r1, #0
   209dc:	cmp	r0, r1
   209e0:	bne	209ec <__assert_fail@plt+0xf2b8>
   209e4:	add	r0, sp, #4
   209e8:	str	r0, [fp, #-8]
   209ec:	ldr	r0, [fp, #-8]
   209f0:	ldr	r1, [fp, #-12]
   209f4:	ldr	r2, [sp, #16]
   209f8:	ldr	r3, [sp, #12]
   209fc:	bl	11500 <mbrtowc@plt>
   20a00:	str	r0, [sp, #8]
   20a04:	ldr	r0, [sp, #8]
   20a08:	mvn	r1, #1
   20a0c:	cmp	r1, r0
   20a10:	bhi	20a54 <__assert_fail@plt+0xf320>
   20a14:	ldr	r0, [sp, #16]
   20a18:	cmp	r0, #0
   20a1c:	beq	20a54 <__assert_fail@plt+0xf320>
   20a20:	movw	r0, #0
   20a24:	bl	22840 <__assert_fail@plt+0x1110c>
   20a28:	tst	r0, #1
   20a2c:	bne	20a54 <__assert_fail@plt+0xf320>
   20a30:	ldr	r0, [fp, #-12]
   20a34:	ldrb	r0, [r0]
   20a38:	strb	r0, [sp, #3]
   20a3c:	ldrb	r0, [sp, #3]
   20a40:	ldr	r1, [fp, #-8]
   20a44:	str	r0, [r1]
   20a48:	movw	r0, #1
   20a4c:	str	r0, [fp, #-4]
   20a50:	b	20a5c <__assert_fail@plt+0xf328>
   20a54:	ldr	r0, [sp, #8]
   20a58:	str	r0, [fp, #-4]
   20a5c:	ldr	r0, [fp, #-4]
   20a60:	mov	sp, fp
   20a64:	pop	{fp, pc}
   20a68:	push	{fp, lr}
   20a6c:	mov	fp, sp
   20a70:	sub	sp, sp, #176	; 0xb0
   20a74:	str	r0, [fp, #-8]
   20a78:	str	r1, [fp, #-12]
   20a7c:	str	r2, [fp, #-16]
   20a80:	b	20e38 <__assert_fail@plt+0xf704>
   20a84:	b	20c58 <__assert_fail@plt+0xf524>
   20a88:	ldr	r0, [fp, #-16]
   20a8c:	cmp	r0, #0
   20a90:	bcs	20b94 <__assert_fail@plt+0xf460>
   20a94:	ldr	r0, [fp, #-12]
   20a98:	cmp	r0, #0
   20a9c:	bcs	20b24 <__assert_fail@plt+0xf3f0>
   20aa0:	b	20ac0 <__assert_fail@plt+0xf38c>
   20aa4:	ldr	r0, [fp, #-12]
   20aa8:	ldr	r1, [fp, #-16]
   20aac:	movw	r2, #127	; 0x7f
   20ab0:	udiv	r1, r2, r1
   20ab4:	cmp	r0, r1
   20ab8:	bcc	20c28 <__assert_fail@plt+0xf4f4>
   20abc:	b	20c40 <__assert_fail@plt+0xf50c>
   20ac0:	b	20ad4 <__assert_fail@plt+0xf3a0>
   20ac4:	ldr	r0, [fp, #-16]
   20ac8:	cmp	r0, #1
   20acc:	bcc	20ae4 <__assert_fail@plt+0xf3b0>
   20ad0:	b	20af0 <__assert_fail@plt+0xf3bc>
   20ad4:	ldr	r0, [fp, #-16]
   20ad8:	movw	r1, #0
   20adc:	cmp	r1, r0
   20ae0:	bcs	20af0 <__assert_fail@plt+0xf3bc>
   20ae4:	movw	r0, #0
   20ae8:	str	r0, [fp, #-24]	; 0xffffffe8
   20aec:	b	20b08 <__assert_fail@plt+0xf3d4>
   20af0:	ldr	r0, [fp, #-16]
   20af4:	movw	r1, #0
   20af8:	sub	r0, r1, r0
   20afc:	movw	r1, #127	; 0x7f
   20b00:	udiv	r0, r1, r0
   20b04:	str	r0, [fp, #-24]	; 0xffffffe8
   20b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20b0c:	ldr	r1, [fp, #-12]
   20b10:	mvn	r2, #0
   20b14:	sub	r1, r2, r1
   20b18:	cmp	r0, r1
   20b1c:	bls	20c28 <__assert_fail@plt+0xf4f4>
   20b20:	b	20c40 <__assert_fail@plt+0xf50c>
   20b24:	ldr	r0, [fp, #-16]
   20b28:	cmn	r0, #1
   20b2c:	bne	20b78 <__assert_fail@plt+0xf444>
   20b30:	b	20b50 <__assert_fail@plt+0xf41c>
   20b34:	ldr	r0, [fp, #-12]
   20b38:	mvn	r1, #127	; 0x7f
   20b3c:	add	r0, r0, r1
   20b40:	movw	r1, #0
   20b44:	cmp	r1, r0
   20b48:	bcc	20c28 <__assert_fail@plt+0xf4f4>
   20b4c:	b	20c40 <__assert_fail@plt+0xf50c>
   20b50:	ldr	r0, [fp, #-12]
   20b54:	movw	r1, #0
   20b58:	cmp	r1, r0
   20b5c:	bcs	20c40 <__assert_fail@plt+0xf50c>
   20b60:	ldr	r0, [fp, #-12]
   20b64:	sub	r0, r0, #1
   20b68:	movw	r1, #127	; 0x7f
   20b6c:	cmp	r1, r0
   20b70:	bcc	20c28 <__assert_fail@plt+0xf4f4>
   20b74:	b	20c40 <__assert_fail@plt+0xf50c>
   20b78:	ldr	r0, [fp, #-16]
   20b7c:	mvn	r1, #127	; 0x7f
   20b80:	udiv	r0, r1, r0
   20b84:	ldr	r1, [fp, #-12]
   20b88:	cmp	r0, r1
   20b8c:	bcc	20c28 <__assert_fail@plt+0xf4f4>
   20b90:	b	20c40 <__assert_fail@plt+0xf50c>
   20b94:	ldr	r0, [fp, #-16]
   20b98:	cmp	r0, #0
   20b9c:	bne	20ba4 <__assert_fail@plt+0xf470>
   20ba0:	b	20c40 <__assert_fail@plt+0xf50c>
   20ba4:	ldr	r0, [fp, #-12]
   20ba8:	cmp	r0, #0
   20bac:	bcs	20c10 <__assert_fail@plt+0xf4dc>
   20bb0:	ldr	r0, [fp, #-12]
   20bb4:	cmn	r0, #1
   20bb8:	bne	20bf4 <__assert_fail@plt+0xf4c0>
   20bbc:	b	20bdc <__assert_fail@plt+0xf4a8>
   20bc0:	ldr	r0, [fp, #-16]
   20bc4:	mvn	r1, #127	; 0x7f
   20bc8:	add	r0, r0, r1
   20bcc:	movw	r1, #0
   20bd0:	cmp	r1, r0
   20bd4:	bcc	20c28 <__assert_fail@plt+0xf4f4>
   20bd8:	b	20c40 <__assert_fail@plt+0xf50c>
   20bdc:	ldr	r0, [fp, #-16]
   20be0:	sub	r0, r0, #1
   20be4:	movw	r1, #127	; 0x7f
   20be8:	cmp	r1, r0
   20bec:	bcc	20c28 <__assert_fail@plt+0xf4f4>
   20bf0:	b	20c40 <__assert_fail@plt+0xf50c>
   20bf4:	ldr	r0, [fp, #-12]
   20bf8:	mvn	r1, #127	; 0x7f
   20bfc:	udiv	r0, r1, r0
   20c00:	ldr	r1, [fp, #-16]
   20c04:	cmp	r0, r1
   20c08:	bcc	20c28 <__assert_fail@plt+0xf4f4>
   20c0c:	b	20c40 <__assert_fail@plt+0xf50c>
   20c10:	ldr	r0, [fp, #-16]
   20c14:	movw	r1, #127	; 0x7f
   20c18:	udiv	r0, r1, r0
   20c1c:	ldr	r1, [fp, #-12]
   20c20:	cmp	r0, r1
   20c24:	bcs	20c40 <__assert_fail@plt+0xf50c>
   20c28:	ldr	r0, [fp, #-12]
   20c2c:	ldr	r1, [fp, #-16]
   20c30:	mul	r0, r0, r1
   20c34:	sxtb	r0, r0
   20c38:	str	r0, [fp, #-20]	; 0xffffffec
   20c3c:	b	21db8 <__assert_fail@plt+0x10684>
   20c40:	ldr	r0, [fp, #-12]
   20c44:	ldr	r1, [fp, #-16]
   20c48:	mul	r0, r0, r1
   20c4c:	sxtb	r0, r0
   20c50:	str	r0, [fp, #-20]	; 0xffffffec
   20c54:	b	21dd0 <__assert_fail@plt+0x1069c>
   20c58:	ldr	r0, [fp, #-16]
   20c5c:	cmp	r0, #0
   20c60:	bcs	20d6c <__assert_fail@plt+0xf638>
   20c64:	ldr	r0, [fp, #-12]
   20c68:	cmp	r0, #0
   20c6c:	bcs	20cf4 <__assert_fail@plt+0xf5c0>
   20c70:	b	20c90 <__assert_fail@plt+0xf55c>
   20c74:	ldr	r0, [fp, #-12]
   20c78:	ldr	r1, [fp, #-16]
   20c7c:	movw	r2, #255	; 0xff
   20c80:	udiv	r1, r2, r1
   20c84:	cmp	r0, r1
   20c88:	bcc	20e08 <__assert_fail@plt+0xf6d4>
   20c8c:	b	20e20 <__assert_fail@plt+0xf6ec>
   20c90:	b	20ca4 <__assert_fail@plt+0xf570>
   20c94:	ldr	r0, [fp, #-16]
   20c98:	cmp	r0, #1
   20c9c:	bcc	20cb4 <__assert_fail@plt+0xf580>
   20ca0:	b	20cc0 <__assert_fail@plt+0xf58c>
   20ca4:	ldr	r0, [fp, #-16]
   20ca8:	movw	r1, #0
   20cac:	cmp	r1, r0
   20cb0:	bcs	20cc0 <__assert_fail@plt+0xf58c>
   20cb4:	movw	r0, #0
   20cb8:	str	r0, [fp, #-28]	; 0xffffffe4
   20cbc:	b	20cd8 <__assert_fail@plt+0xf5a4>
   20cc0:	ldr	r0, [fp, #-16]
   20cc4:	movw	r1, #0
   20cc8:	sub	r0, r1, r0
   20ccc:	movw	r1, #255	; 0xff
   20cd0:	udiv	r0, r1, r0
   20cd4:	str	r0, [fp, #-28]	; 0xffffffe4
   20cd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20cdc:	ldr	r1, [fp, #-12]
   20ce0:	mvn	r2, #0
   20ce4:	sub	r1, r2, r1
   20ce8:	cmp	r0, r1
   20cec:	bls	20e08 <__assert_fail@plt+0xf6d4>
   20cf0:	b	20e20 <__assert_fail@plt+0xf6ec>
   20cf4:	b	20cfc <__assert_fail@plt+0xf5c8>
   20cf8:	b	20d00 <__assert_fail@plt+0xf5cc>
   20cfc:	b	20d50 <__assert_fail@plt+0xf61c>
   20d00:	ldr	r0, [fp, #-16]
   20d04:	cmn	r0, #1
   20d08:	bne	20d50 <__assert_fail@plt+0xf61c>
   20d0c:	b	20d28 <__assert_fail@plt+0xf5f4>
   20d10:	ldr	r0, [fp, #-12]
   20d14:	add	r0, r0, #0
   20d18:	movw	r1, #0
   20d1c:	cmp	r1, r0
   20d20:	bcc	20e08 <__assert_fail@plt+0xf6d4>
   20d24:	b	20e20 <__assert_fail@plt+0xf6ec>
   20d28:	ldr	r0, [fp, #-12]
   20d2c:	movw	r1, #0
   20d30:	cmp	r1, r0
   20d34:	bcs	20e20 <__assert_fail@plt+0xf6ec>
   20d38:	ldr	r0, [fp, #-12]
   20d3c:	sub	r0, r0, #1
   20d40:	mvn	r1, #0
   20d44:	cmp	r1, r0
   20d48:	bcc	20e08 <__assert_fail@plt+0xf6d4>
   20d4c:	b	20e20 <__assert_fail@plt+0xf6ec>
   20d50:	ldr	r0, [fp, #-16]
   20d54:	movw	r1, #0
   20d58:	udiv	r0, r1, r0
   20d5c:	ldr	r1, [fp, #-12]
   20d60:	cmp	r0, r1
   20d64:	bcc	20e08 <__assert_fail@plt+0xf6d4>
   20d68:	b	20e20 <__assert_fail@plt+0xf6ec>
   20d6c:	ldr	r0, [fp, #-16]
   20d70:	cmp	r0, #0
   20d74:	bne	20d7c <__assert_fail@plt+0xf648>
   20d78:	b	20e20 <__assert_fail@plt+0xf6ec>
   20d7c:	ldr	r0, [fp, #-12]
   20d80:	cmp	r0, #0
   20d84:	bcs	20df0 <__assert_fail@plt+0xf6bc>
   20d88:	b	20d90 <__assert_fail@plt+0xf65c>
   20d8c:	b	20d94 <__assert_fail@plt+0xf660>
   20d90:	b	20dd4 <__assert_fail@plt+0xf6a0>
   20d94:	ldr	r0, [fp, #-12]
   20d98:	cmn	r0, #1
   20d9c:	bne	20dd4 <__assert_fail@plt+0xf6a0>
   20da0:	b	20dbc <__assert_fail@plt+0xf688>
   20da4:	ldr	r0, [fp, #-16]
   20da8:	add	r0, r0, #0
   20dac:	movw	r1, #0
   20db0:	cmp	r1, r0
   20db4:	bcc	20e08 <__assert_fail@plt+0xf6d4>
   20db8:	b	20e20 <__assert_fail@plt+0xf6ec>
   20dbc:	ldr	r0, [fp, #-16]
   20dc0:	sub	r0, r0, #1
   20dc4:	mvn	r1, #0
   20dc8:	cmp	r1, r0
   20dcc:	bcc	20e08 <__assert_fail@plt+0xf6d4>
   20dd0:	b	20e20 <__assert_fail@plt+0xf6ec>
   20dd4:	ldr	r0, [fp, #-12]
   20dd8:	movw	r1, #0
   20ddc:	udiv	r0, r1, r0
   20de0:	ldr	r1, [fp, #-16]
   20de4:	cmp	r0, r1
   20de8:	bcc	20e08 <__assert_fail@plt+0xf6d4>
   20dec:	b	20e20 <__assert_fail@plt+0xf6ec>
   20df0:	ldr	r0, [fp, #-16]
   20df4:	movw	r1, #255	; 0xff
   20df8:	udiv	r0, r1, r0
   20dfc:	ldr	r1, [fp, #-12]
   20e00:	cmp	r0, r1
   20e04:	bcs	20e20 <__assert_fail@plt+0xf6ec>
   20e08:	ldr	r0, [fp, #-12]
   20e0c:	ldr	r1, [fp, #-16]
   20e10:	mul	r0, r0, r1
   20e14:	and	r0, r0, #255	; 0xff
   20e18:	str	r0, [fp, #-20]	; 0xffffffec
   20e1c:	b	21db8 <__assert_fail@plt+0x10684>
   20e20:	ldr	r0, [fp, #-12]
   20e24:	ldr	r1, [fp, #-16]
   20e28:	mul	r0, r0, r1
   20e2c:	and	r0, r0, #255	; 0xff
   20e30:	str	r0, [fp, #-20]	; 0xffffffec
   20e34:	b	21dd0 <__assert_fail@plt+0x1069c>
   20e38:	b	211f0 <__assert_fail@plt+0xfabc>
   20e3c:	b	21010 <__assert_fail@plt+0xf8dc>
   20e40:	ldr	r0, [fp, #-16]
   20e44:	cmp	r0, #0
   20e48:	bcs	20f4c <__assert_fail@plt+0xf818>
   20e4c:	ldr	r0, [fp, #-12]
   20e50:	cmp	r0, #0
   20e54:	bcs	20edc <__assert_fail@plt+0xf7a8>
   20e58:	b	20e78 <__assert_fail@plt+0xf744>
   20e5c:	ldr	r0, [fp, #-12]
   20e60:	ldr	r1, [fp, #-16]
   20e64:	movw	r2, #32767	; 0x7fff
   20e68:	udiv	r1, r2, r1
   20e6c:	cmp	r0, r1
   20e70:	bcc	20fe0 <__assert_fail@plt+0xf8ac>
   20e74:	b	20ff8 <__assert_fail@plt+0xf8c4>
   20e78:	b	20e8c <__assert_fail@plt+0xf758>
   20e7c:	ldr	r0, [fp, #-16]
   20e80:	cmp	r0, #1
   20e84:	bcc	20e9c <__assert_fail@plt+0xf768>
   20e88:	b	20ea8 <__assert_fail@plt+0xf774>
   20e8c:	ldr	r0, [fp, #-16]
   20e90:	movw	r1, #0
   20e94:	cmp	r1, r0
   20e98:	bcs	20ea8 <__assert_fail@plt+0xf774>
   20e9c:	movw	r0, #0
   20ea0:	str	r0, [fp, #-32]	; 0xffffffe0
   20ea4:	b	20ec0 <__assert_fail@plt+0xf78c>
   20ea8:	ldr	r0, [fp, #-16]
   20eac:	movw	r1, #0
   20eb0:	sub	r0, r1, r0
   20eb4:	movw	r1, #32767	; 0x7fff
   20eb8:	udiv	r0, r1, r0
   20ebc:	str	r0, [fp, #-32]	; 0xffffffe0
   20ec0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20ec4:	ldr	r1, [fp, #-12]
   20ec8:	mvn	r2, #0
   20ecc:	sub	r1, r2, r1
   20ed0:	cmp	r0, r1
   20ed4:	bls	20fe0 <__assert_fail@plt+0xf8ac>
   20ed8:	b	20ff8 <__assert_fail@plt+0xf8c4>
   20edc:	ldr	r0, [fp, #-16]
   20ee0:	cmn	r0, #1
   20ee4:	bne	20f30 <__assert_fail@plt+0xf7fc>
   20ee8:	b	20f08 <__assert_fail@plt+0xf7d4>
   20eec:	ldr	r0, [pc, #3840]	; 21df4 <__assert_fail@plt+0x106c0>
   20ef0:	ldr	r1, [fp, #-12]
   20ef4:	add	r0, r1, r0
   20ef8:	movw	r1, #0
   20efc:	cmp	r1, r0
   20f00:	bcc	20fe0 <__assert_fail@plt+0xf8ac>
   20f04:	b	20ff8 <__assert_fail@plt+0xf8c4>
   20f08:	ldr	r0, [fp, #-12]
   20f0c:	movw	r1, #0
   20f10:	cmp	r1, r0
   20f14:	bcs	20ff8 <__assert_fail@plt+0xf8c4>
   20f18:	ldr	r0, [fp, #-12]
   20f1c:	sub	r0, r0, #1
   20f20:	movw	r1, #32767	; 0x7fff
   20f24:	cmp	r1, r0
   20f28:	bcc	20fe0 <__assert_fail@plt+0xf8ac>
   20f2c:	b	20ff8 <__assert_fail@plt+0xf8c4>
   20f30:	ldr	r0, [pc, #3772]	; 21df4 <__assert_fail@plt+0x106c0>
   20f34:	ldr	r1, [fp, #-16]
   20f38:	udiv	r0, r0, r1
   20f3c:	ldr	r1, [fp, #-12]
   20f40:	cmp	r0, r1
   20f44:	bcc	20fe0 <__assert_fail@plt+0xf8ac>
   20f48:	b	20ff8 <__assert_fail@plt+0xf8c4>
   20f4c:	ldr	r0, [fp, #-16]
   20f50:	cmp	r0, #0
   20f54:	bne	20f5c <__assert_fail@plt+0xf828>
   20f58:	b	20ff8 <__assert_fail@plt+0xf8c4>
   20f5c:	ldr	r0, [fp, #-12]
   20f60:	cmp	r0, #0
   20f64:	bcs	20fc8 <__assert_fail@plt+0xf894>
   20f68:	ldr	r0, [fp, #-12]
   20f6c:	cmn	r0, #1
   20f70:	bne	20fac <__assert_fail@plt+0xf878>
   20f74:	b	20f94 <__assert_fail@plt+0xf860>
   20f78:	ldr	r0, [pc, #3700]	; 21df4 <__assert_fail@plt+0x106c0>
   20f7c:	ldr	r1, [fp, #-16]
   20f80:	add	r0, r1, r0
   20f84:	movw	r1, #0
   20f88:	cmp	r1, r0
   20f8c:	bcc	20fe0 <__assert_fail@plt+0xf8ac>
   20f90:	b	20ff8 <__assert_fail@plt+0xf8c4>
   20f94:	ldr	r0, [fp, #-16]
   20f98:	sub	r0, r0, #1
   20f9c:	movw	r1, #32767	; 0x7fff
   20fa0:	cmp	r1, r0
   20fa4:	bcc	20fe0 <__assert_fail@plt+0xf8ac>
   20fa8:	b	20ff8 <__assert_fail@plt+0xf8c4>
   20fac:	ldr	r0, [pc, #3648]	; 21df4 <__assert_fail@plt+0x106c0>
   20fb0:	ldr	r1, [fp, #-12]
   20fb4:	udiv	r0, r0, r1
   20fb8:	ldr	r1, [fp, #-16]
   20fbc:	cmp	r0, r1
   20fc0:	bcc	20fe0 <__assert_fail@plt+0xf8ac>
   20fc4:	b	20ff8 <__assert_fail@plt+0xf8c4>
   20fc8:	ldr	r0, [fp, #-16]
   20fcc:	movw	r1, #32767	; 0x7fff
   20fd0:	udiv	r0, r1, r0
   20fd4:	ldr	r1, [fp, #-12]
   20fd8:	cmp	r0, r1
   20fdc:	bcs	20ff8 <__assert_fail@plt+0xf8c4>
   20fe0:	ldr	r0, [fp, #-12]
   20fe4:	ldr	r1, [fp, #-16]
   20fe8:	mul	r0, r0, r1
   20fec:	sxth	r0, r0
   20ff0:	str	r0, [fp, #-20]	; 0xffffffec
   20ff4:	b	21db8 <__assert_fail@plt+0x10684>
   20ff8:	ldr	r0, [fp, #-12]
   20ffc:	ldr	r1, [fp, #-16]
   21000:	mul	r0, r0, r1
   21004:	sxth	r0, r0
   21008:	str	r0, [fp, #-20]	; 0xffffffec
   2100c:	b	21dd0 <__assert_fail@plt+0x1069c>
   21010:	ldr	r0, [fp, #-16]
   21014:	cmp	r0, #0
   21018:	bcs	21124 <__assert_fail@plt+0xf9f0>
   2101c:	ldr	r0, [fp, #-12]
   21020:	cmp	r0, #0
   21024:	bcs	210ac <__assert_fail@plt+0xf978>
   21028:	b	21048 <__assert_fail@plt+0xf914>
   2102c:	ldr	r0, [fp, #-12]
   21030:	ldr	r1, [fp, #-16]
   21034:	movw	r2, #65535	; 0xffff
   21038:	udiv	r1, r2, r1
   2103c:	cmp	r0, r1
   21040:	bcc	211c0 <__assert_fail@plt+0xfa8c>
   21044:	b	211d8 <__assert_fail@plt+0xfaa4>
   21048:	b	2105c <__assert_fail@plt+0xf928>
   2104c:	ldr	r0, [fp, #-16]
   21050:	cmp	r0, #1
   21054:	bcc	2106c <__assert_fail@plt+0xf938>
   21058:	b	21078 <__assert_fail@plt+0xf944>
   2105c:	ldr	r0, [fp, #-16]
   21060:	movw	r1, #0
   21064:	cmp	r1, r0
   21068:	bcs	21078 <__assert_fail@plt+0xf944>
   2106c:	movw	r0, #0
   21070:	str	r0, [fp, #-36]	; 0xffffffdc
   21074:	b	21090 <__assert_fail@plt+0xf95c>
   21078:	ldr	r0, [fp, #-16]
   2107c:	movw	r1, #0
   21080:	sub	r0, r1, r0
   21084:	movw	r1, #65535	; 0xffff
   21088:	udiv	r0, r1, r0
   2108c:	str	r0, [fp, #-36]	; 0xffffffdc
   21090:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21094:	ldr	r1, [fp, #-12]
   21098:	mvn	r2, #0
   2109c:	sub	r1, r2, r1
   210a0:	cmp	r0, r1
   210a4:	bls	211c0 <__assert_fail@plt+0xfa8c>
   210a8:	b	211d8 <__assert_fail@plt+0xfaa4>
   210ac:	b	210b4 <__assert_fail@plt+0xf980>
   210b0:	b	210b8 <__assert_fail@plt+0xf984>
   210b4:	b	21108 <__assert_fail@plt+0xf9d4>
   210b8:	ldr	r0, [fp, #-16]
   210bc:	cmn	r0, #1
   210c0:	bne	21108 <__assert_fail@plt+0xf9d4>
   210c4:	b	210e0 <__assert_fail@plt+0xf9ac>
   210c8:	ldr	r0, [fp, #-12]
   210cc:	add	r0, r0, #0
   210d0:	movw	r1, #0
   210d4:	cmp	r1, r0
   210d8:	bcc	211c0 <__assert_fail@plt+0xfa8c>
   210dc:	b	211d8 <__assert_fail@plt+0xfaa4>
   210e0:	ldr	r0, [fp, #-12]
   210e4:	movw	r1, #0
   210e8:	cmp	r1, r0
   210ec:	bcs	211d8 <__assert_fail@plt+0xfaa4>
   210f0:	ldr	r0, [fp, #-12]
   210f4:	sub	r0, r0, #1
   210f8:	mvn	r1, #0
   210fc:	cmp	r1, r0
   21100:	bcc	211c0 <__assert_fail@plt+0xfa8c>
   21104:	b	211d8 <__assert_fail@plt+0xfaa4>
   21108:	ldr	r0, [fp, #-16]
   2110c:	movw	r1, #0
   21110:	udiv	r0, r1, r0
   21114:	ldr	r1, [fp, #-12]
   21118:	cmp	r0, r1
   2111c:	bcc	211c0 <__assert_fail@plt+0xfa8c>
   21120:	b	211d8 <__assert_fail@plt+0xfaa4>
   21124:	ldr	r0, [fp, #-16]
   21128:	cmp	r0, #0
   2112c:	bne	21134 <__assert_fail@plt+0xfa00>
   21130:	b	211d8 <__assert_fail@plt+0xfaa4>
   21134:	ldr	r0, [fp, #-12]
   21138:	cmp	r0, #0
   2113c:	bcs	211a8 <__assert_fail@plt+0xfa74>
   21140:	b	21148 <__assert_fail@plt+0xfa14>
   21144:	b	2114c <__assert_fail@plt+0xfa18>
   21148:	b	2118c <__assert_fail@plt+0xfa58>
   2114c:	ldr	r0, [fp, #-12]
   21150:	cmn	r0, #1
   21154:	bne	2118c <__assert_fail@plt+0xfa58>
   21158:	b	21174 <__assert_fail@plt+0xfa40>
   2115c:	ldr	r0, [fp, #-16]
   21160:	add	r0, r0, #0
   21164:	movw	r1, #0
   21168:	cmp	r1, r0
   2116c:	bcc	211c0 <__assert_fail@plt+0xfa8c>
   21170:	b	211d8 <__assert_fail@plt+0xfaa4>
   21174:	ldr	r0, [fp, #-16]
   21178:	sub	r0, r0, #1
   2117c:	mvn	r1, #0
   21180:	cmp	r1, r0
   21184:	bcc	211c0 <__assert_fail@plt+0xfa8c>
   21188:	b	211d8 <__assert_fail@plt+0xfaa4>
   2118c:	ldr	r0, [fp, #-12]
   21190:	movw	r1, #0
   21194:	udiv	r0, r1, r0
   21198:	ldr	r1, [fp, #-16]
   2119c:	cmp	r0, r1
   211a0:	bcc	211c0 <__assert_fail@plt+0xfa8c>
   211a4:	b	211d8 <__assert_fail@plt+0xfaa4>
   211a8:	ldr	r0, [fp, #-16]
   211ac:	movw	r1, #65535	; 0xffff
   211b0:	udiv	r0, r1, r0
   211b4:	ldr	r1, [fp, #-12]
   211b8:	cmp	r0, r1
   211bc:	bcs	211d8 <__assert_fail@plt+0xfaa4>
   211c0:	ldr	r0, [fp, #-12]
   211c4:	ldr	r1, [fp, #-16]
   211c8:	mul	r0, r0, r1
   211cc:	uxth	r0, r0
   211d0:	str	r0, [fp, #-20]	; 0xffffffec
   211d4:	b	21db8 <__assert_fail@plt+0x10684>
   211d8:	ldr	r0, [fp, #-12]
   211dc:	ldr	r1, [fp, #-16]
   211e0:	mul	r0, r0, r1
   211e4:	uxth	r0, r0
   211e8:	str	r0, [fp, #-20]	; 0xffffffec
   211ec:	b	21dd0 <__assert_fail@plt+0x1069c>
   211f0:	b	211f4 <__assert_fail@plt+0xfac0>
   211f4:	b	213b8 <__assert_fail@plt+0xfc84>
   211f8:	ldr	r0, [fp, #-16]
   211fc:	cmp	r0, #0
   21200:	bcs	21300 <__assert_fail@plt+0xfbcc>
   21204:	ldr	r0, [fp, #-12]
   21208:	cmp	r0, #0
   2120c:	bcs	21294 <__assert_fail@plt+0xfb60>
   21210:	b	21230 <__assert_fail@plt+0xfafc>
   21214:	ldr	r0, [pc, #3024]	; 21dec <__assert_fail@plt+0x106b8>
   21218:	ldr	r1, [fp, #-12]
   2121c:	ldr	r2, [fp, #-16]
   21220:	udiv	r0, r0, r2
   21224:	cmp	r1, r0
   21228:	bcc	21390 <__assert_fail@plt+0xfc5c>
   2122c:	b	213a4 <__assert_fail@plt+0xfc70>
   21230:	b	21244 <__assert_fail@plt+0xfb10>
   21234:	ldr	r0, [fp, #-16]
   21238:	cmp	r0, #1
   2123c:	bcc	21254 <__assert_fail@plt+0xfb20>
   21240:	b	21260 <__assert_fail@plt+0xfb2c>
   21244:	ldr	r0, [fp, #-16]
   21248:	movw	r1, #0
   2124c:	cmp	r1, r0
   21250:	bcs	21260 <__assert_fail@plt+0xfb2c>
   21254:	movw	r0, #0
   21258:	str	r0, [fp, #-40]	; 0xffffffd8
   2125c:	b	21278 <__assert_fail@plt+0xfb44>
   21260:	ldr	r0, [pc, #2948]	; 21dec <__assert_fail@plt+0x106b8>
   21264:	ldr	r1, [fp, #-16]
   21268:	movw	r2, #0
   2126c:	sub	r1, r2, r1
   21270:	udiv	r0, r0, r1
   21274:	str	r0, [fp, #-40]	; 0xffffffd8
   21278:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2127c:	ldr	r1, [fp, #-12]
   21280:	mvn	r2, #0
   21284:	sub	r1, r2, r1
   21288:	cmp	r0, r1
   2128c:	bls	21390 <__assert_fail@plt+0xfc5c>
   21290:	b	213a4 <__assert_fail@plt+0xfc70>
   21294:	ldr	r0, [fp, #-16]
   21298:	cmn	r0, #1
   2129c:	bne	212e4 <__assert_fail@plt+0xfbb0>
   212a0:	b	212bc <__assert_fail@plt+0xfb88>
   212a4:	ldr	r0, [fp, #-12]
   212a8:	add	r0, r0, #-2147483648	; 0x80000000
   212ac:	movw	r1, #0
   212b0:	cmp	r1, r0
   212b4:	bcc	21390 <__assert_fail@plt+0xfc5c>
   212b8:	b	213a4 <__assert_fail@plt+0xfc70>
   212bc:	ldr	r0, [fp, #-12]
   212c0:	movw	r1, #0
   212c4:	cmp	r1, r0
   212c8:	bcs	213a4 <__assert_fail@plt+0xfc70>
   212cc:	ldr	r0, [pc, #2840]	; 21dec <__assert_fail@plt+0x106b8>
   212d0:	ldr	r1, [fp, #-12]
   212d4:	sub	r1, r1, #1
   212d8:	cmp	r0, r1
   212dc:	bcc	21390 <__assert_fail@plt+0xfc5c>
   212e0:	b	213a4 <__assert_fail@plt+0xfc70>
   212e4:	ldr	r0, [pc, #2820]	; 21df0 <__assert_fail@plt+0x106bc>
   212e8:	ldr	r1, [fp, #-16]
   212ec:	udiv	r0, r0, r1
   212f0:	ldr	r1, [fp, #-12]
   212f4:	cmp	r0, r1
   212f8:	bcc	21390 <__assert_fail@plt+0xfc5c>
   212fc:	b	213a4 <__assert_fail@plt+0xfc70>
   21300:	ldr	r0, [fp, #-16]
   21304:	cmp	r0, #0
   21308:	bne	21310 <__assert_fail@plt+0xfbdc>
   2130c:	b	213a4 <__assert_fail@plt+0xfc70>
   21310:	ldr	r0, [fp, #-12]
   21314:	cmp	r0, #0
   21318:	bcs	21378 <__assert_fail@plt+0xfc44>
   2131c:	ldr	r0, [fp, #-12]
   21320:	cmn	r0, #1
   21324:	bne	2135c <__assert_fail@plt+0xfc28>
   21328:	b	21344 <__assert_fail@plt+0xfc10>
   2132c:	ldr	r0, [fp, #-16]
   21330:	add	r0, r0, #-2147483648	; 0x80000000
   21334:	movw	r1, #0
   21338:	cmp	r1, r0
   2133c:	bcc	21390 <__assert_fail@plt+0xfc5c>
   21340:	b	213a4 <__assert_fail@plt+0xfc70>
   21344:	ldr	r0, [pc, #2720]	; 21dec <__assert_fail@plt+0x106b8>
   21348:	ldr	r1, [fp, #-16]
   2134c:	sub	r1, r1, #1
   21350:	cmp	r0, r1
   21354:	bcc	21390 <__assert_fail@plt+0xfc5c>
   21358:	b	213a4 <__assert_fail@plt+0xfc70>
   2135c:	ldr	r0, [pc, #2700]	; 21df0 <__assert_fail@plt+0x106bc>
   21360:	ldr	r1, [fp, #-12]
   21364:	udiv	r0, r0, r1
   21368:	ldr	r1, [fp, #-16]
   2136c:	cmp	r0, r1
   21370:	bcc	21390 <__assert_fail@plt+0xfc5c>
   21374:	b	213a4 <__assert_fail@plt+0xfc70>
   21378:	ldr	r0, [pc, #2668]	; 21dec <__assert_fail@plt+0x106b8>
   2137c:	ldr	r1, [fp, #-16]
   21380:	udiv	r0, r0, r1
   21384:	ldr	r1, [fp, #-12]
   21388:	cmp	r0, r1
   2138c:	bcs	213a4 <__assert_fail@plt+0xfc70>
   21390:	ldr	r0, [fp, #-12]
   21394:	ldr	r1, [fp, #-16]
   21398:	mul	r0, r0, r1
   2139c:	str	r0, [fp, #-20]	; 0xffffffec
   213a0:	b	21db8 <__assert_fail@plt+0x10684>
   213a4:	ldr	r0, [fp, #-12]
   213a8:	ldr	r1, [fp, #-16]
   213ac:	mul	r0, r0, r1
   213b0:	str	r0, [fp, #-20]	; 0xffffffec
   213b4:	b	21dd0 <__assert_fail@plt+0x1069c>
   213b8:	ldr	r0, [fp, #-16]
   213bc:	cmp	r0, #0
   213c0:	bcs	214cc <__assert_fail@plt+0xfd98>
   213c4:	ldr	r0, [fp, #-12]
   213c8:	cmp	r0, #0
   213cc:	bcs	21454 <__assert_fail@plt+0xfd20>
   213d0:	b	213f0 <__assert_fail@plt+0xfcbc>
   213d4:	ldr	r0, [fp, #-12]
   213d8:	ldr	r1, [fp, #-16]
   213dc:	mvn	r2, #0
   213e0:	udiv	r1, r2, r1
   213e4:	cmp	r0, r1
   213e8:	bcc	21568 <__assert_fail@plt+0xfe34>
   213ec:	b	2157c <__assert_fail@plt+0xfe48>
   213f0:	b	21404 <__assert_fail@plt+0xfcd0>
   213f4:	ldr	r0, [fp, #-16]
   213f8:	cmp	r0, #1
   213fc:	bcc	21414 <__assert_fail@plt+0xfce0>
   21400:	b	21420 <__assert_fail@plt+0xfcec>
   21404:	ldr	r0, [fp, #-16]
   21408:	movw	r1, #0
   2140c:	cmp	r1, r0
   21410:	bcs	21420 <__assert_fail@plt+0xfcec>
   21414:	movw	r0, #1
   21418:	str	r0, [fp, #-44]	; 0xffffffd4
   2141c:	b	21438 <__assert_fail@plt+0xfd04>
   21420:	ldr	r0, [fp, #-16]
   21424:	movw	r1, #0
   21428:	sub	r0, r1, r0
   2142c:	mvn	r1, #0
   21430:	udiv	r0, r1, r0
   21434:	str	r0, [fp, #-44]	; 0xffffffd4
   21438:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2143c:	ldr	r1, [fp, #-12]
   21440:	mvn	r2, #0
   21444:	sub	r1, r2, r1
   21448:	cmp	r0, r1
   2144c:	bls	21568 <__assert_fail@plt+0xfe34>
   21450:	b	2157c <__assert_fail@plt+0xfe48>
   21454:	b	2145c <__assert_fail@plt+0xfd28>
   21458:	b	21460 <__assert_fail@plt+0xfd2c>
   2145c:	b	214b0 <__assert_fail@plt+0xfd7c>
   21460:	ldr	r0, [fp, #-16]
   21464:	cmn	r0, #1
   21468:	bne	214b0 <__assert_fail@plt+0xfd7c>
   2146c:	b	21488 <__assert_fail@plt+0xfd54>
   21470:	ldr	r0, [fp, #-12]
   21474:	add	r0, r0, #0
   21478:	movw	r1, #0
   2147c:	cmp	r1, r0
   21480:	bcc	21568 <__assert_fail@plt+0xfe34>
   21484:	b	2157c <__assert_fail@plt+0xfe48>
   21488:	ldr	r0, [fp, #-12]
   2148c:	movw	r1, #0
   21490:	cmp	r1, r0
   21494:	bcs	2157c <__assert_fail@plt+0xfe48>
   21498:	ldr	r0, [fp, #-12]
   2149c:	sub	r0, r0, #1
   214a0:	mvn	r1, #0
   214a4:	cmp	r1, r0
   214a8:	bcc	21568 <__assert_fail@plt+0xfe34>
   214ac:	b	2157c <__assert_fail@plt+0xfe48>
   214b0:	ldr	r0, [fp, #-16]
   214b4:	movw	r1, #0
   214b8:	udiv	r0, r1, r0
   214bc:	ldr	r1, [fp, #-12]
   214c0:	cmp	r0, r1
   214c4:	bcc	21568 <__assert_fail@plt+0xfe34>
   214c8:	b	2157c <__assert_fail@plt+0xfe48>
   214cc:	ldr	r0, [fp, #-16]
   214d0:	cmp	r0, #0
   214d4:	bne	214dc <__assert_fail@plt+0xfda8>
   214d8:	b	2157c <__assert_fail@plt+0xfe48>
   214dc:	ldr	r0, [fp, #-12]
   214e0:	cmp	r0, #0
   214e4:	bcs	21550 <__assert_fail@plt+0xfe1c>
   214e8:	b	214f0 <__assert_fail@plt+0xfdbc>
   214ec:	b	214f4 <__assert_fail@plt+0xfdc0>
   214f0:	b	21534 <__assert_fail@plt+0xfe00>
   214f4:	ldr	r0, [fp, #-12]
   214f8:	cmn	r0, #1
   214fc:	bne	21534 <__assert_fail@plt+0xfe00>
   21500:	b	2151c <__assert_fail@plt+0xfde8>
   21504:	ldr	r0, [fp, #-16]
   21508:	add	r0, r0, #0
   2150c:	movw	r1, #0
   21510:	cmp	r1, r0
   21514:	bcc	21568 <__assert_fail@plt+0xfe34>
   21518:	b	2157c <__assert_fail@plt+0xfe48>
   2151c:	ldr	r0, [fp, #-16]
   21520:	sub	r0, r0, #1
   21524:	mvn	r1, #0
   21528:	cmp	r1, r0
   2152c:	bcc	21568 <__assert_fail@plt+0xfe34>
   21530:	b	2157c <__assert_fail@plt+0xfe48>
   21534:	ldr	r0, [fp, #-12]
   21538:	movw	r1, #0
   2153c:	udiv	r0, r1, r0
   21540:	ldr	r1, [fp, #-16]
   21544:	cmp	r0, r1
   21548:	bcc	21568 <__assert_fail@plt+0xfe34>
   2154c:	b	2157c <__assert_fail@plt+0xfe48>
   21550:	ldr	r0, [fp, #-16]
   21554:	mvn	r1, #0
   21558:	udiv	r0, r1, r0
   2155c:	ldr	r1, [fp, #-12]
   21560:	cmp	r0, r1
   21564:	bcs	2157c <__assert_fail@plt+0xfe48>
   21568:	ldr	r0, [fp, #-12]
   2156c:	ldr	r1, [fp, #-16]
   21570:	mul	r0, r0, r1
   21574:	str	r0, [fp, #-20]	; 0xffffffec
   21578:	b	21db8 <__assert_fail@plt+0x10684>
   2157c:	ldr	r0, [fp, #-12]
   21580:	ldr	r1, [fp, #-16]
   21584:	mul	r0, r0, r1
   21588:	str	r0, [fp, #-20]	; 0xffffffec
   2158c:	b	21dd0 <__assert_fail@plt+0x1069c>
   21590:	b	21594 <__assert_fail@plt+0xfe60>
   21594:	b	21758 <__assert_fail@plt+0x10024>
   21598:	ldr	r0, [fp, #-16]
   2159c:	cmp	r0, #0
   215a0:	bcs	216a0 <__assert_fail@plt+0xff6c>
   215a4:	ldr	r0, [fp, #-12]
   215a8:	cmp	r0, #0
   215ac:	bcs	21634 <__assert_fail@plt+0xff00>
   215b0:	b	215d0 <__assert_fail@plt+0xfe9c>
   215b4:	ldr	r0, [pc, #2096]	; 21dec <__assert_fail@plt+0x106b8>
   215b8:	ldr	r1, [fp, #-12]
   215bc:	ldr	r2, [fp, #-16]
   215c0:	udiv	r0, r0, r2
   215c4:	cmp	r1, r0
   215c8:	bcc	21730 <__assert_fail@plt+0xfffc>
   215cc:	b	21744 <__assert_fail@plt+0x10010>
   215d0:	b	215e4 <__assert_fail@plt+0xfeb0>
   215d4:	ldr	r0, [fp, #-16]
   215d8:	cmp	r0, #1
   215dc:	bcc	215f4 <__assert_fail@plt+0xfec0>
   215e0:	b	21600 <__assert_fail@plt+0xfecc>
   215e4:	ldr	r0, [fp, #-16]
   215e8:	movw	r1, #0
   215ec:	cmp	r1, r0
   215f0:	bcs	21600 <__assert_fail@plt+0xfecc>
   215f4:	movw	r0, #0
   215f8:	str	r0, [fp, #-48]	; 0xffffffd0
   215fc:	b	21618 <__assert_fail@plt+0xfee4>
   21600:	ldr	r0, [pc, #2020]	; 21dec <__assert_fail@plt+0x106b8>
   21604:	ldr	r1, [fp, #-16]
   21608:	movw	r2, #0
   2160c:	sub	r1, r2, r1
   21610:	udiv	r0, r0, r1
   21614:	str	r0, [fp, #-48]	; 0xffffffd0
   21618:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2161c:	ldr	r1, [fp, #-12]
   21620:	mvn	r2, #0
   21624:	sub	r1, r2, r1
   21628:	cmp	r0, r1
   2162c:	bls	21730 <__assert_fail@plt+0xfffc>
   21630:	b	21744 <__assert_fail@plt+0x10010>
   21634:	ldr	r0, [fp, #-16]
   21638:	cmn	r0, #1
   2163c:	bne	21684 <__assert_fail@plt+0xff50>
   21640:	b	2165c <__assert_fail@plt+0xff28>
   21644:	ldr	r0, [fp, #-12]
   21648:	add	r0, r0, #-2147483648	; 0x80000000
   2164c:	movw	r1, #0
   21650:	cmp	r1, r0
   21654:	bcc	21730 <__assert_fail@plt+0xfffc>
   21658:	b	21744 <__assert_fail@plt+0x10010>
   2165c:	ldr	r0, [fp, #-12]
   21660:	movw	r1, #0
   21664:	cmp	r1, r0
   21668:	bcs	21744 <__assert_fail@plt+0x10010>
   2166c:	ldr	r0, [pc, #1912]	; 21dec <__assert_fail@plt+0x106b8>
   21670:	ldr	r1, [fp, #-12]
   21674:	sub	r1, r1, #1
   21678:	cmp	r0, r1
   2167c:	bcc	21730 <__assert_fail@plt+0xfffc>
   21680:	b	21744 <__assert_fail@plt+0x10010>
   21684:	ldr	r0, [pc, #1892]	; 21df0 <__assert_fail@plt+0x106bc>
   21688:	ldr	r1, [fp, #-16]
   2168c:	udiv	r0, r0, r1
   21690:	ldr	r1, [fp, #-12]
   21694:	cmp	r0, r1
   21698:	bcc	21730 <__assert_fail@plt+0xfffc>
   2169c:	b	21744 <__assert_fail@plt+0x10010>
   216a0:	ldr	r0, [fp, #-16]
   216a4:	cmp	r0, #0
   216a8:	bne	216b0 <__assert_fail@plt+0xff7c>
   216ac:	b	21744 <__assert_fail@plt+0x10010>
   216b0:	ldr	r0, [fp, #-12]
   216b4:	cmp	r0, #0
   216b8:	bcs	21718 <__assert_fail@plt+0xffe4>
   216bc:	ldr	r0, [fp, #-12]
   216c0:	cmn	r0, #1
   216c4:	bne	216fc <__assert_fail@plt+0xffc8>
   216c8:	b	216e4 <__assert_fail@plt+0xffb0>
   216cc:	ldr	r0, [fp, #-16]
   216d0:	add	r0, r0, #-2147483648	; 0x80000000
   216d4:	movw	r1, #0
   216d8:	cmp	r1, r0
   216dc:	bcc	21730 <__assert_fail@plt+0xfffc>
   216e0:	b	21744 <__assert_fail@plt+0x10010>
   216e4:	ldr	r0, [pc, #1792]	; 21dec <__assert_fail@plt+0x106b8>
   216e8:	ldr	r1, [fp, #-16]
   216ec:	sub	r1, r1, #1
   216f0:	cmp	r0, r1
   216f4:	bcc	21730 <__assert_fail@plt+0xfffc>
   216f8:	b	21744 <__assert_fail@plt+0x10010>
   216fc:	ldr	r0, [pc, #1772]	; 21df0 <__assert_fail@plt+0x106bc>
   21700:	ldr	r1, [fp, #-12]
   21704:	udiv	r0, r0, r1
   21708:	ldr	r1, [fp, #-16]
   2170c:	cmp	r0, r1
   21710:	bcc	21730 <__assert_fail@plt+0xfffc>
   21714:	b	21744 <__assert_fail@plt+0x10010>
   21718:	ldr	r0, [pc, #1740]	; 21dec <__assert_fail@plt+0x106b8>
   2171c:	ldr	r1, [fp, #-16]
   21720:	udiv	r0, r0, r1
   21724:	ldr	r1, [fp, #-12]
   21728:	cmp	r0, r1
   2172c:	bcs	21744 <__assert_fail@plt+0x10010>
   21730:	ldr	r0, [fp, #-12]
   21734:	ldr	r1, [fp, #-16]
   21738:	mul	r0, r0, r1
   2173c:	str	r0, [fp, #-20]	; 0xffffffec
   21740:	b	21db8 <__assert_fail@plt+0x10684>
   21744:	ldr	r0, [fp, #-12]
   21748:	ldr	r1, [fp, #-16]
   2174c:	mul	r0, r0, r1
   21750:	str	r0, [fp, #-20]	; 0xffffffec
   21754:	b	21dd0 <__assert_fail@plt+0x1069c>
   21758:	ldr	r0, [fp, #-16]
   2175c:	cmp	r0, #0
   21760:	bcs	2186c <__assert_fail@plt+0x10138>
   21764:	ldr	r0, [fp, #-12]
   21768:	cmp	r0, #0
   2176c:	bcs	217f4 <__assert_fail@plt+0x100c0>
   21770:	b	21790 <__assert_fail@plt+0x1005c>
   21774:	ldr	r0, [fp, #-12]
   21778:	ldr	r1, [fp, #-16]
   2177c:	mvn	r2, #0
   21780:	udiv	r1, r2, r1
   21784:	cmp	r0, r1
   21788:	bcc	21908 <__assert_fail@plt+0x101d4>
   2178c:	b	2191c <__assert_fail@plt+0x101e8>
   21790:	b	217a4 <__assert_fail@plt+0x10070>
   21794:	ldr	r0, [fp, #-16]
   21798:	cmp	r0, #1
   2179c:	bcc	217b4 <__assert_fail@plt+0x10080>
   217a0:	b	217c0 <__assert_fail@plt+0x1008c>
   217a4:	ldr	r0, [fp, #-16]
   217a8:	movw	r1, #0
   217ac:	cmp	r1, r0
   217b0:	bcs	217c0 <__assert_fail@plt+0x1008c>
   217b4:	movw	r0, #1
   217b8:	str	r0, [fp, #-52]	; 0xffffffcc
   217bc:	b	217d8 <__assert_fail@plt+0x100a4>
   217c0:	ldr	r0, [fp, #-16]
   217c4:	movw	r1, #0
   217c8:	sub	r0, r1, r0
   217cc:	mvn	r1, #0
   217d0:	udiv	r0, r1, r0
   217d4:	str	r0, [fp, #-52]	; 0xffffffcc
   217d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   217dc:	ldr	r1, [fp, #-12]
   217e0:	mvn	r2, #0
   217e4:	sub	r1, r2, r1
   217e8:	cmp	r0, r1
   217ec:	bls	21908 <__assert_fail@plt+0x101d4>
   217f0:	b	2191c <__assert_fail@plt+0x101e8>
   217f4:	b	217fc <__assert_fail@plt+0x100c8>
   217f8:	b	21800 <__assert_fail@plt+0x100cc>
   217fc:	b	21850 <__assert_fail@plt+0x1011c>
   21800:	ldr	r0, [fp, #-16]
   21804:	cmn	r0, #1
   21808:	bne	21850 <__assert_fail@plt+0x1011c>
   2180c:	b	21828 <__assert_fail@plt+0x100f4>
   21810:	ldr	r0, [fp, #-12]
   21814:	add	r0, r0, #0
   21818:	movw	r1, #0
   2181c:	cmp	r1, r0
   21820:	bcc	21908 <__assert_fail@plt+0x101d4>
   21824:	b	2191c <__assert_fail@plt+0x101e8>
   21828:	ldr	r0, [fp, #-12]
   2182c:	movw	r1, #0
   21830:	cmp	r1, r0
   21834:	bcs	2191c <__assert_fail@plt+0x101e8>
   21838:	ldr	r0, [fp, #-12]
   2183c:	sub	r0, r0, #1
   21840:	mvn	r1, #0
   21844:	cmp	r1, r0
   21848:	bcc	21908 <__assert_fail@plt+0x101d4>
   2184c:	b	2191c <__assert_fail@plt+0x101e8>
   21850:	ldr	r0, [fp, #-16]
   21854:	movw	r1, #0
   21858:	udiv	r0, r1, r0
   2185c:	ldr	r1, [fp, #-12]
   21860:	cmp	r0, r1
   21864:	bcc	21908 <__assert_fail@plt+0x101d4>
   21868:	b	2191c <__assert_fail@plt+0x101e8>
   2186c:	ldr	r0, [fp, #-16]
   21870:	cmp	r0, #0
   21874:	bne	2187c <__assert_fail@plt+0x10148>
   21878:	b	2191c <__assert_fail@plt+0x101e8>
   2187c:	ldr	r0, [fp, #-12]
   21880:	cmp	r0, #0
   21884:	bcs	218f0 <__assert_fail@plt+0x101bc>
   21888:	b	21890 <__assert_fail@plt+0x1015c>
   2188c:	b	21894 <__assert_fail@plt+0x10160>
   21890:	b	218d4 <__assert_fail@plt+0x101a0>
   21894:	ldr	r0, [fp, #-12]
   21898:	cmn	r0, #1
   2189c:	bne	218d4 <__assert_fail@plt+0x101a0>
   218a0:	b	218bc <__assert_fail@plt+0x10188>
   218a4:	ldr	r0, [fp, #-16]
   218a8:	add	r0, r0, #0
   218ac:	movw	r1, #0
   218b0:	cmp	r1, r0
   218b4:	bcc	21908 <__assert_fail@plt+0x101d4>
   218b8:	b	2191c <__assert_fail@plt+0x101e8>
   218bc:	ldr	r0, [fp, #-16]
   218c0:	sub	r0, r0, #1
   218c4:	mvn	r1, #0
   218c8:	cmp	r1, r0
   218cc:	bcc	21908 <__assert_fail@plt+0x101d4>
   218d0:	b	2191c <__assert_fail@plt+0x101e8>
   218d4:	ldr	r0, [fp, #-12]
   218d8:	movw	r1, #0
   218dc:	udiv	r0, r1, r0
   218e0:	ldr	r1, [fp, #-16]
   218e4:	cmp	r0, r1
   218e8:	bcc	21908 <__assert_fail@plt+0x101d4>
   218ec:	b	2191c <__assert_fail@plt+0x101e8>
   218f0:	ldr	r0, [fp, #-16]
   218f4:	mvn	r1, #0
   218f8:	udiv	r0, r1, r0
   218fc:	ldr	r1, [fp, #-12]
   21900:	cmp	r0, r1
   21904:	bcs	2191c <__assert_fail@plt+0x101e8>
   21908:	ldr	r0, [fp, #-12]
   2190c:	ldr	r1, [fp, #-16]
   21910:	mul	r0, r0, r1
   21914:	str	r0, [fp, #-20]	; 0xffffffec
   21918:	b	21db8 <__assert_fail@plt+0x10684>
   2191c:	ldr	r0, [fp, #-12]
   21920:	ldr	r1, [fp, #-16]
   21924:	mul	r0, r0, r1
   21928:	str	r0, [fp, #-20]	; 0xffffffec
   2192c:	b	21dd0 <__assert_fail@plt+0x1069c>
   21930:	b	21b84 <__assert_fail@plt+0x10450>
   21934:	ldr	r0, [fp, #-16]
   21938:	cmp	r0, #0
   2193c:	bcs	21a9c <__assert_fail@plt+0x10368>
   21940:	ldr	r0, [fp, #-12]
   21944:	cmp	r0, #0
   21948:	bcs	21a18 <__assert_fail@plt+0x102e4>
   2194c:	b	21950 <__assert_fail@plt+0x1021c>
   21950:	ldr	r0, [fp, #-12]
   21954:	ldr	r2, [fp, #-16]
   21958:	mvn	r1, #0
   2195c:	mvn	r3, #-2147483648	; 0x80000000
   21960:	mov	ip, #0
   21964:	str	r0, [fp, #-56]	; 0xffffffc8
   21968:	mov	r0, r1
   2196c:	mov	r1, r3
   21970:	mov	r3, ip
   21974:	bl	22b0c <__assert_fail@plt+0x113d8>
   21978:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2197c:	subs	r0, r2, r0
   21980:	rscs	r1, r1, #0
   21984:	str	r0, [fp, #-60]	; 0xffffffc4
   21988:	str	r1, [fp, #-64]	; 0xffffffc0
   2198c:	blt	21b5c <__assert_fail@plt+0x10428>
   21990:	b	21b70 <__assert_fail@plt+0x1043c>
   21994:	b	219a8 <__assert_fail@plt+0x10274>
   21998:	ldr	r0, [fp, #-16]
   2199c:	cmp	r0, #1
   219a0:	bcc	219b8 <__assert_fail@plt+0x10284>
   219a4:	b	219cc <__assert_fail@plt+0x10298>
   219a8:	ldr	r0, [fp, #-16]
   219ac:	movw	r1, #0
   219b0:	cmp	r1, r0
   219b4:	bcs	219cc <__assert_fail@plt+0x10298>
   219b8:	mov	r0, #0
   219bc:	mvn	r1, #0
   219c0:	str	r1, [fp, #-68]	; 0xffffffbc
   219c4:	str	r0, [fp, #-72]	; 0xffffffb8
   219c8:	b	219f0 <__assert_fail@plt+0x102bc>
   219cc:	ldr	r0, [fp, #-16]
   219d0:	rsb	r2, r0, #0
   219d4:	mvn	r0, #0
   219d8:	mvn	r1, #-2147483648	; 0x80000000
   219dc:	mov	r3, #0
   219e0:	bl	22b0c <__assert_fail@plt+0x113d8>
   219e4:	str	r0, [fp, #-68]	; 0xffffffbc
   219e8:	str	r1, [fp, #-72]	; 0xffffffb8
   219ec:	b	219f0 <__assert_fail@plt+0x102bc>
   219f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   219f4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   219f8:	ldr	r2, [fp, #-12]
   219fc:	mvn	r2, r2
   21a00:	subs	r1, r2, r1
   21a04:	rscs	r0, r0, #0
   21a08:	str	r1, [fp, #-76]	; 0xffffffb4
   21a0c:	str	r0, [fp, #-80]	; 0xffffffb0
   21a10:	bge	21b5c <__assert_fail@plt+0x10428>
   21a14:	b	21b70 <__assert_fail@plt+0x1043c>
   21a18:	ldr	r0, [fp, #-16]
   21a1c:	cmn	r0, #1
   21a20:	bne	21a68 <__assert_fail@plt+0x10334>
   21a24:	b	21a48 <__assert_fail@plt+0x10314>
   21a28:	ldr	r0, [fp, #-12]
   21a2c:	rsbs	r0, r0, #0
   21a30:	mov	r1, #0
   21a34:	sbcs	r1, r1, #-2147483648	; 0x80000000
   21a38:	str	r0, [fp, #-84]	; 0xffffffac
   21a3c:	str	r1, [sp, #88]	; 0x58
   21a40:	blt	21b5c <__assert_fail@plt+0x10428>
   21a44:	b	21b70 <__assert_fail@plt+0x1043c>
   21a48:	ldr	r0, [fp, #-12]
   21a4c:	movw	r1, #0
   21a50:	cmp	r1, r0
   21a54:	bcs	21b70 <__assert_fail@plt+0x1043c>
   21a58:	mov	r0, #0
   21a5c:	cmp	r0, #0
   21a60:	bne	21b5c <__assert_fail@plt+0x10428>
   21a64:	b	21b70 <__assert_fail@plt+0x1043c>
   21a68:	ldr	r2, [fp, #-16]
   21a6c:	mov	r1, #-2147483648	; 0x80000000
   21a70:	mov	r0, #0
   21a74:	str	r0, [sp, #84]	; 0x54
   21a78:	ldr	r3, [sp, #84]	; 0x54
   21a7c:	bl	22a38 <__assert_fail@plt+0x11304>
   21a80:	ldr	r2, [fp, #-12]
   21a84:	subs	r0, r0, r2
   21a88:	sbcs	r1, r1, #0
   21a8c:	str	r0, [sp, #80]	; 0x50
   21a90:	str	r1, [sp, #76]	; 0x4c
   21a94:	blt	21b5c <__assert_fail@plt+0x10428>
   21a98:	b	21b70 <__assert_fail@plt+0x1043c>
   21a9c:	ldr	r0, [fp, #-16]
   21aa0:	cmp	r0, #0
   21aa4:	bne	21aac <__assert_fail@plt+0x10378>
   21aa8:	b	21b70 <__assert_fail@plt+0x1043c>
   21aac:	ldr	r0, [fp, #-12]
   21ab0:	cmp	r0, #0
   21ab4:	bcs	21b2c <__assert_fail@plt+0x103f8>
   21ab8:	ldr	r0, [fp, #-12]
   21abc:	cmn	r0, #1
   21ac0:	bne	21af8 <__assert_fail@plt+0x103c4>
   21ac4:	b	21ae8 <__assert_fail@plt+0x103b4>
   21ac8:	ldr	r0, [fp, #-16]
   21acc:	rsbs	r0, r0, #0
   21ad0:	mov	r1, #0
   21ad4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   21ad8:	str	r0, [sp, #72]	; 0x48
   21adc:	str	r1, [sp, #68]	; 0x44
   21ae0:	blt	21b5c <__assert_fail@plt+0x10428>
   21ae4:	b	21b70 <__assert_fail@plt+0x1043c>
   21ae8:	mov	r0, #0
   21aec:	cmp	r0, #0
   21af0:	bne	21b5c <__assert_fail@plt+0x10428>
   21af4:	b	21b70 <__assert_fail@plt+0x1043c>
   21af8:	ldr	r2, [fp, #-12]
   21afc:	mov	r1, #-2147483648	; 0x80000000
   21b00:	mov	r0, #0
   21b04:	str	r0, [sp, #64]	; 0x40
   21b08:	ldr	r3, [sp, #64]	; 0x40
   21b0c:	bl	22a38 <__assert_fail@plt+0x11304>
   21b10:	ldr	r2, [fp, #-16]
   21b14:	subs	r0, r0, r2
   21b18:	sbcs	r1, r1, #0
   21b1c:	str	r0, [sp, #60]	; 0x3c
   21b20:	str	r1, [sp, #56]	; 0x38
   21b24:	blt	21b5c <__assert_fail@plt+0x10428>
   21b28:	b	21b70 <__assert_fail@plt+0x1043c>
   21b2c:	ldr	r2, [fp, #-16]
   21b30:	mvn	r0, #0
   21b34:	mvn	r1, #-2147483648	; 0x80000000
   21b38:	mov	r3, #0
   21b3c:	bl	22b0c <__assert_fail@plt+0x113d8>
   21b40:	ldr	r2, [fp, #-12]
   21b44:	subs	r0, r0, r2
   21b48:	sbcs	r1, r1, #0
   21b4c:	str	r0, [sp, #52]	; 0x34
   21b50:	str	r1, [sp, #48]	; 0x30
   21b54:	bge	21b70 <__assert_fail@plt+0x1043c>
   21b58:	b	21b5c <__assert_fail@plt+0x10428>
   21b5c:	ldr	r0, [fp, #-12]
   21b60:	ldr	r1, [fp, #-16]
   21b64:	mul	r0, r0, r1
   21b68:	str	r0, [fp, #-20]	; 0xffffffec
   21b6c:	b	21db8 <__assert_fail@plt+0x10684>
   21b70:	ldr	r0, [fp, #-12]
   21b74:	ldr	r1, [fp, #-16]
   21b78:	mul	r0, r0, r1
   21b7c:	str	r0, [fp, #-20]	; 0xffffffec
   21b80:	b	21dd0 <__assert_fail@plt+0x1069c>
   21b84:	ldr	r0, [fp, #-16]
   21b88:	cmp	r0, #0
   21b8c:	bcs	21cd8 <__assert_fail@plt+0x105a4>
   21b90:	ldr	r0, [fp, #-12]
   21b94:	cmp	r0, #0
   21b98:	bcs	21c60 <__assert_fail@plt+0x1052c>
   21b9c:	b	21bd8 <__assert_fail@plt+0x104a4>
   21ba0:	ldr	r0, [fp, #-12]
   21ba4:	ldr	r2, [fp, #-16]
   21ba8:	mvn	r1, #0
   21bac:	mov	r3, #0
   21bb0:	str	r0, [sp, #44]	; 0x2c
   21bb4:	mov	r0, r1
   21bb8:	bl	22b0c <__assert_fail@plt+0x113d8>
   21bbc:	ldr	r2, [sp, #44]	; 0x2c
   21bc0:	subs	r0, r2, r0
   21bc4:	rscs	r1, r1, #0
   21bc8:	str	r0, [sp, #40]	; 0x28
   21bcc:	str	r1, [sp, #36]	; 0x24
   21bd0:	bcc	21d90 <__assert_fail@plt+0x1065c>
   21bd4:	b	21da4 <__assert_fail@plt+0x10670>
   21bd8:	b	21bec <__assert_fail@plt+0x104b8>
   21bdc:	ldr	r0, [fp, #-16]
   21be0:	cmp	r0, #1
   21be4:	bcc	21bfc <__assert_fail@plt+0x104c8>
   21be8:	b	21c10 <__assert_fail@plt+0x104dc>
   21bec:	ldr	r0, [fp, #-16]
   21bf0:	movw	r1, #0
   21bf4:	cmp	r1, r0
   21bf8:	bcs	21c10 <__assert_fail@plt+0x104dc>
   21bfc:	mov	r0, #1
   21c00:	mvn	r1, #0
   21c04:	str	r1, [sp, #32]
   21c08:	str	r0, [sp, #28]
   21c0c:	b	21c38 <__assert_fail@plt+0x10504>
   21c10:	ldr	r0, [fp, #-16]
   21c14:	rsb	r2, r0, #0
   21c18:	mvn	r0, #0
   21c1c:	mov	r3, #0
   21c20:	str	r0, [sp, #24]
   21c24:	ldr	r1, [sp, #24]
   21c28:	bl	22b0c <__assert_fail@plt+0x113d8>
   21c2c:	str	r0, [sp, #32]
   21c30:	str	r1, [sp, #28]
   21c34:	b	21c38 <__assert_fail@plt+0x10504>
   21c38:	ldr	r0, [sp, #28]
   21c3c:	ldr	r1, [sp, #32]
   21c40:	ldr	r2, [fp, #-12]
   21c44:	mvn	r2, r2
   21c48:	subs	r1, r2, r1
   21c4c:	rscs	r0, r0, #0
   21c50:	str	r1, [sp, #20]
   21c54:	str	r0, [sp, #16]
   21c58:	bcs	21d90 <__assert_fail@plt+0x1065c>
   21c5c:	b	21da4 <__assert_fail@plt+0x10670>
   21c60:	b	21c68 <__assert_fail@plt+0x10534>
   21c64:	b	21c6c <__assert_fail@plt+0x10538>
   21c68:	b	21cbc <__assert_fail@plt+0x10588>
   21c6c:	ldr	r0, [fp, #-16]
   21c70:	cmn	r0, #1
   21c74:	bne	21cbc <__assert_fail@plt+0x10588>
   21c78:	b	21c94 <__assert_fail@plt+0x10560>
   21c7c:	ldr	r0, [fp, #-12]
   21c80:	add	r0, r0, #0
   21c84:	movw	r1, #0
   21c88:	cmp	r1, r0
   21c8c:	bcc	21d90 <__assert_fail@plt+0x1065c>
   21c90:	b	21da4 <__assert_fail@plt+0x10670>
   21c94:	ldr	r0, [fp, #-12]
   21c98:	movw	r1, #0
   21c9c:	cmp	r1, r0
   21ca0:	bcs	21da4 <__assert_fail@plt+0x10670>
   21ca4:	ldr	r0, [fp, #-12]
   21ca8:	sub	r0, r0, #1
   21cac:	mvn	r1, #0
   21cb0:	cmp	r1, r0
   21cb4:	bcc	21d90 <__assert_fail@plt+0x1065c>
   21cb8:	b	21da4 <__assert_fail@plt+0x10670>
   21cbc:	ldr	r0, [fp, #-16]
   21cc0:	movw	r1, #0
   21cc4:	udiv	r0, r1, r0
   21cc8:	ldr	r1, [fp, #-12]
   21ccc:	cmp	r0, r1
   21cd0:	bcc	21d90 <__assert_fail@plt+0x1065c>
   21cd4:	b	21da4 <__assert_fail@plt+0x10670>
   21cd8:	ldr	r0, [fp, #-16]
   21cdc:	cmp	r0, #0
   21ce0:	bne	21ce8 <__assert_fail@plt+0x105b4>
   21ce4:	b	21da4 <__assert_fail@plt+0x10670>
   21ce8:	ldr	r0, [fp, #-12]
   21cec:	cmp	r0, #0
   21cf0:	bcs	21d5c <__assert_fail@plt+0x10628>
   21cf4:	b	21cfc <__assert_fail@plt+0x105c8>
   21cf8:	b	21d00 <__assert_fail@plt+0x105cc>
   21cfc:	b	21d40 <__assert_fail@plt+0x1060c>
   21d00:	ldr	r0, [fp, #-12]
   21d04:	cmn	r0, #1
   21d08:	bne	21d40 <__assert_fail@plt+0x1060c>
   21d0c:	b	21d28 <__assert_fail@plt+0x105f4>
   21d10:	ldr	r0, [fp, #-16]
   21d14:	add	r0, r0, #0
   21d18:	movw	r1, #0
   21d1c:	cmp	r1, r0
   21d20:	bcc	21d90 <__assert_fail@plt+0x1065c>
   21d24:	b	21da4 <__assert_fail@plt+0x10670>
   21d28:	ldr	r0, [fp, #-16]
   21d2c:	sub	r0, r0, #1
   21d30:	mvn	r1, #0
   21d34:	cmp	r1, r0
   21d38:	bcc	21d90 <__assert_fail@plt+0x1065c>
   21d3c:	b	21da4 <__assert_fail@plt+0x10670>
   21d40:	ldr	r0, [fp, #-12]
   21d44:	movw	r1, #0
   21d48:	udiv	r0, r1, r0
   21d4c:	ldr	r1, [fp, #-16]
   21d50:	cmp	r0, r1
   21d54:	bcc	21d90 <__assert_fail@plt+0x1065c>
   21d58:	b	21da4 <__assert_fail@plt+0x10670>
   21d5c:	ldr	r2, [fp, #-16]
   21d60:	mvn	r0, #0
   21d64:	mov	r3, #0
   21d68:	str	r0, [sp, #12]
   21d6c:	ldr	r1, [sp, #12]
   21d70:	bl	22b0c <__assert_fail@plt+0x113d8>
   21d74:	ldr	r2, [fp, #-12]
   21d78:	subs	r0, r0, r2
   21d7c:	sbcs	r1, r1, #0
   21d80:	str	r0, [sp, #8]
   21d84:	str	r1, [sp, #4]
   21d88:	bcs	21da4 <__assert_fail@plt+0x10670>
   21d8c:	b	21d90 <__assert_fail@plt+0x1065c>
   21d90:	ldr	r0, [fp, #-12]
   21d94:	ldr	r1, [fp, #-16]
   21d98:	mul	r0, r0, r1
   21d9c:	str	r0, [fp, #-20]	; 0xffffffec
   21da0:	b	21db8 <__assert_fail@plt+0x10684>
   21da4:	ldr	r0, [fp, #-12]
   21da8:	ldr	r1, [fp, #-16]
   21dac:	mul	r0, r0, r1
   21db0:	str	r0, [fp, #-20]	; 0xffffffec
   21db4:	b	21dd0 <__assert_fail@plt+0x1069c>
   21db8:	bl	115f0 <__errno_location@plt>
   21dbc:	movw	lr, #12
   21dc0:	str	lr, [r0]
   21dc4:	movw	r0, #0
   21dc8:	str	r0, [fp, #-4]
   21dcc:	b	21de0 <__assert_fail@plt+0x106ac>
   21dd0:	ldr	r0, [fp, #-8]
   21dd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   21dd8:	bl	204a4 <__assert_fail@plt+0xed70>
   21ddc:	str	r0, [fp, #-4]
   21de0:	ldr	r0, [fp, #-4]
   21de4:	mov	sp, fp
   21de8:	pop	{fp, pc}
   21dec:	svcvc	0x00ffffff
   21df0:	andhi	r0, r0, r0
   21df4:			; <UNDEFINED> instruction: 0xffff8000
   21df8:	push	{fp, lr}
   21dfc:	mov	fp, sp
   21e00:	sub	sp, sp, #8
   21e04:	str	r0, [sp, #4]
   21e08:	ldr	r0, [sp, #4]
   21e0c:	movw	r1, #0
   21e10:	movw	r2, #3
   21e14:	bl	22460 <__assert_fail@plt+0x10d2c>
   21e18:	mov	sp, fp
   21e1c:	pop	{fp, pc}
   21e20:	sub	sp, sp, #12
   21e24:	str	r0, [sp, #4]
   21e28:	ldr	r0, [sp, #4]
   21e2c:	sub	r1, r0, #48	; 0x30
   21e30:	cmp	r1, #10
   21e34:	str	r0, [sp]
   21e38:	bcc	21e68 <__assert_fail@plt+0x10734>
   21e3c:	b	21e40 <__assert_fail@plt+0x1070c>
   21e40:	ldr	r0, [sp]
   21e44:	sub	r1, r0, #65	; 0x41
   21e48:	cmp	r1, #26
   21e4c:	bcc	21e68 <__assert_fail@plt+0x10734>
   21e50:	b	21e54 <__assert_fail@plt+0x10720>
   21e54:	ldr	r0, [sp]
   21e58:	sub	r1, r0, #97	; 0x61
   21e5c:	cmp	r1, #25
   21e60:	bhi	21e78 <__assert_fail@plt+0x10744>
   21e64:	b	21e68 <__assert_fail@plt+0x10734>
   21e68:	movw	r0, #1
   21e6c:	and	r0, r0, #1
   21e70:	strb	r0, [sp, #11]
   21e74:	b	21e84 <__assert_fail@plt+0x10750>
   21e78:	movw	r0, #0
   21e7c:	and	r0, r0, #1
   21e80:	strb	r0, [sp, #11]
   21e84:	ldrb	r0, [sp, #11]
   21e88:	and	r0, r0, #1
   21e8c:	add	sp, sp, #12
   21e90:	bx	lr
   21e94:	sub	sp, sp, #12
   21e98:	str	r0, [sp, #4]
   21e9c:	ldr	r0, [sp, #4]
   21ea0:	sub	r1, r0, #65	; 0x41
   21ea4:	cmp	r1, #26
   21ea8:	str	r0, [sp]
   21eac:	bcc	21ec8 <__assert_fail@plt+0x10794>
   21eb0:	b	21eb4 <__assert_fail@plt+0x10780>
   21eb4:	ldr	r0, [sp]
   21eb8:	sub	r1, r0, #97	; 0x61
   21ebc:	cmp	r1, #25
   21ec0:	bhi	21ed8 <__assert_fail@plt+0x107a4>
   21ec4:	b	21ec8 <__assert_fail@plt+0x10794>
   21ec8:	movw	r0, #1
   21ecc:	and	r0, r0, #1
   21ed0:	strb	r0, [sp, #11]
   21ed4:	b	21ee4 <__assert_fail@plt+0x107b0>
   21ed8:	movw	r0, #0
   21edc:	and	r0, r0, #1
   21ee0:	strb	r0, [sp, #11]
   21ee4:	ldrb	r0, [sp, #11]
   21ee8:	and	r0, r0, #1
   21eec:	add	sp, sp, #12
   21ef0:	bx	lr
   21ef4:	sub	sp, sp, #8
   21ef8:	str	r0, [sp]
   21efc:	ldr	r0, [sp]
   21f00:	cmp	r0, #127	; 0x7f
   21f04:	bhi	21f1c <__assert_fail@plt+0x107e8>
   21f08:	b	21f0c <__assert_fail@plt+0x107d8>
   21f0c:	movw	r0, #1
   21f10:	and	r0, r0, #1
   21f14:	strb	r0, [sp, #7]
   21f18:	b	21f28 <__assert_fail@plt+0x107f4>
   21f1c:	movw	r0, #0
   21f20:	and	r0, r0, #1
   21f24:	strb	r0, [sp, #7]
   21f28:	ldrb	r0, [sp, #7]
   21f2c:	and	r0, r0, #1
   21f30:	add	sp, sp, #8
   21f34:	bx	lr
   21f38:	sub	sp, sp, #8
   21f3c:	str	r0, [sp, #4]
   21f40:	ldr	r0, [sp, #4]
   21f44:	cmp	r0, #32
   21f48:	movw	r0, #1
   21f4c:	str	r0, [sp]
   21f50:	beq	21f68 <__assert_fail@plt+0x10834>
   21f54:	ldr	r0, [sp, #4]
   21f58:	cmp	r0, #9
   21f5c:	movw	r0, #0
   21f60:	moveq	r0, #1
   21f64:	str	r0, [sp]
   21f68:	ldr	r0, [sp]
   21f6c:	and	r0, r0, #1
   21f70:	add	sp, sp, #8
   21f74:	bx	lr
   21f78:	sub	sp, sp, #12
   21f7c:	str	r0, [sp, #4]
   21f80:	ldr	r0, [sp, #4]
   21f84:	cmp	r0, #32
   21f88:	str	r0, [sp]
   21f8c:	bcc	21fa4 <__assert_fail@plt+0x10870>
   21f90:	b	21f94 <__assert_fail@plt+0x10860>
   21f94:	ldr	r0, [sp]
   21f98:	cmp	r0, #127	; 0x7f
   21f9c:	bne	21fb4 <__assert_fail@plt+0x10880>
   21fa0:	b	21fa4 <__assert_fail@plt+0x10870>
   21fa4:	movw	r0, #1
   21fa8:	and	r0, r0, #1
   21fac:	strb	r0, [sp, #11]
   21fb0:	b	21fc0 <__assert_fail@plt+0x1088c>
   21fb4:	movw	r0, #0
   21fb8:	and	r0, r0, #1
   21fbc:	strb	r0, [sp, #11]
   21fc0:	ldrb	r0, [sp, #11]
   21fc4:	and	r0, r0, #1
   21fc8:	add	sp, sp, #12
   21fcc:	bx	lr
   21fd0:	sub	sp, sp, #8
   21fd4:	str	r0, [sp]
   21fd8:	ldr	r0, [sp]
   21fdc:	sub	r0, r0, #48	; 0x30
   21fe0:	cmp	r0, #9
   21fe4:	bhi	21ffc <__assert_fail@plt+0x108c8>
   21fe8:	b	21fec <__assert_fail@plt+0x108b8>
   21fec:	movw	r0, #1
   21ff0:	and	r0, r0, #1
   21ff4:	strb	r0, [sp, #7]
   21ff8:	b	22008 <__assert_fail@plt+0x108d4>
   21ffc:	movw	r0, #0
   22000:	and	r0, r0, #1
   22004:	strb	r0, [sp, #7]
   22008:	ldrb	r0, [sp, #7]
   2200c:	and	r0, r0, #1
   22010:	add	sp, sp, #8
   22014:	bx	lr
   22018:	sub	sp, sp, #8
   2201c:	str	r0, [sp]
   22020:	ldr	r0, [sp]
   22024:	sub	r0, r0, #33	; 0x21
   22028:	cmp	r0, #93	; 0x5d
   2202c:	bhi	22044 <__assert_fail@plt+0x10910>
   22030:	b	22034 <__assert_fail@plt+0x10900>
   22034:	movw	r0, #1
   22038:	and	r0, r0, #1
   2203c:	strb	r0, [sp, #7]
   22040:	b	22050 <__assert_fail@plt+0x1091c>
   22044:	movw	r0, #0
   22048:	and	r0, r0, #1
   2204c:	strb	r0, [sp, #7]
   22050:	ldrb	r0, [sp, #7]
   22054:	and	r0, r0, #1
   22058:	add	sp, sp, #8
   2205c:	bx	lr
   22060:	sub	sp, sp, #8
   22064:	str	r0, [sp]
   22068:	ldr	r0, [sp]
   2206c:	sub	r0, r0, #97	; 0x61
   22070:	cmp	r0, #25
   22074:	bhi	2208c <__assert_fail@plt+0x10958>
   22078:	b	2207c <__assert_fail@plt+0x10948>
   2207c:	movw	r0, #1
   22080:	and	r0, r0, #1
   22084:	strb	r0, [sp, #7]
   22088:	b	22098 <__assert_fail@plt+0x10964>
   2208c:	movw	r0, #0
   22090:	and	r0, r0, #1
   22094:	strb	r0, [sp, #7]
   22098:	ldrb	r0, [sp, #7]
   2209c:	and	r0, r0, #1
   220a0:	add	sp, sp, #8
   220a4:	bx	lr
   220a8:	sub	sp, sp, #8
   220ac:	str	r0, [sp]
   220b0:	ldr	r0, [sp]
   220b4:	sub	r0, r0, #32
   220b8:	cmp	r0, #94	; 0x5e
   220bc:	bhi	220d4 <__assert_fail@plt+0x109a0>
   220c0:	b	220c4 <__assert_fail@plt+0x10990>
   220c4:	movw	r0, #1
   220c8:	and	r0, r0, #1
   220cc:	strb	r0, [sp, #7]
   220d0:	b	220e0 <__assert_fail@plt+0x109ac>
   220d4:	movw	r0, #0
   220d8:	and	r0, r0, #1
   220dc:	strb	r0, [sp, #7]
   220e0:	ldrb	r0, [sp, #7]
   220e4:	and	r0, r0, #1
   220e8:	add	sp, sp, #8
   220ec:	bx	lr
   220f0:	sub	sp, sp, #12
   220f4:	str	r0, [sp, #4]
   220f8:	ldr	r0, [sp, #4]
   220fc:	sub	r0, r0, #33	; 0x21
   22100:	cmp	r0, #93	; 0x5d
   22104:	str	r0, [sp]
   22108:	bhi	222a4 <__assert_fail@plt+0x10b70>
   2210c:	add	r0, pc, #8
   22110:	ldr	r1, [sp]
   22114:	ldr	r0, [r0, r1, lsl #2]
   22118:	mov	pc, r0
   2211c:	muleq	r2, r4, r2
   22120:	muleq	r2, r4, r2
   22124:	muleq	r2, r4, r2
   22128:	muleq	r2, r4, r2
   2212c:	muleq	r2, r4, r2
   22130:	muleq	r2, r4, r2
   22134:	muleq	r2, r4, r2
   22138:	muleq	r2, r4, r2
   2213c:	muleq	r2, r4, r2
   22140:	muleq	r2, r4, r2
   22144:	muleq	r2, r4, r2
   22148:	muleq	r2, r4, r2
   2214c:	muleq	r2, r4, r2
   22150:	muleq	r2, r4, r2
   22154:	muleq	r2, r4, r2
   22158:	andeq	r2, r2, r4, lsr #5
   2215c:	andeq	r2, r2, r4, lsr #5
   22160:	andeq	r2, r2, r4, lsr #5
   22164:	andeq	r2, r2, r4, lsr #5
   22168:	andeq	r2, r2, r4, lsr #5
   2216c:	andeq	r2, r2, r4, lsr #5
   22170:	andeq	r2, r2, r4, lsr #5
   22174:	andeq	r2, r2, r4, lsr #5
   22178:	andeq	r2, r2, r4, lsr #5
   2217c:	andeq	r2, r2, r4, lsr #5
   22180:	muleq	r2, r4, r2
   22184:	muleq	r2, r4, r2
   22188:	muleq	r2, r4, r2
   2218c:	muleq	r2, r4, r2
   22190:	muleq	r2, r4, r2
   22194:	muleq	r2, r4, r2
   22198:	muleq	r2, r4, r2
   2219c:	andeq	r2, r2, r4, lsr #5
   221a0:	andeq	r2, r2, r4, lsr #5
   221a4:	andeq	r2, r2, r4, lsr #5
   221a8:	andeq	r2, r2, r4, lsr #5
   221ac:	andeq	r2, r2, r4, lsr #5
   221b0:	andeq	r2, r2, r4, lsr #5
   221b4:	andeq	r2, r2, r4, lsr #5
   221b8:	andeq	r2, r2, r4, lsr #5
   221bc:	andeq	r2, r2, r4, lsr #5
   221c0:	andeq	r2, r2, r4, lsr #5
   221c4:	andeq	r2, r2, r4, lsr #5
   221c8:	andeq	r2, r2, r4, lsr #5
   221cc:	andeq	r2, r2, r4, lsr #5
   221d0:	andeq	r2, r2, r4, lsr #5
   221d4:	andeq	r2, r2, r4, lsr #5
   221d8:	andeq	r2, r2, r4, lsr #5
   221dc:	andeq	r2, r2, r4, lsr #5
   221e0:	andeq	r2, r2, r4, lsr #5
   221e4:	andeq	r2, r2, r4, lsr #5
   221e8:	andeq	r2, r2, r4, lsr #5
   221ec:	andeq	r2, r2, r4, lsr #5
   221f0:	andeq	r2, r2, r4, lsr #5
   221f4:	andeq	r2, r2, r4, lsr #5
   221f8:	andeq	r2, r2, r4, lsr #5
   221fc:	andeq	r2, r2, r4, lsr #5
   22200:	andeq	r2, r2, r4, lsr #5
   22204:	muleq	r2, r4, r2
   22208:	muleq	r2, r4, r2
   2220c:	muleq	r2, r4, r2
   22210:	muleq	r2, r4, r2
   22214:	muleq	r2, r4, r2
   22218:	muleq	r2, r4, r2
   2221c:	andeq	r2, r2, r4, lsr #5
   22220:	andeq	r2, r2, r4, lsr #5
   22224:	andeq	r2, r2, r4, lsr #5
   22228:	andeq	r2, r2, r4, lsr #5
   2222c:	andeq	r2, r2, r4, lsr #5
   22230:	andeq	r2, r2, r4, lsr #5
   22234:	andeq	r2, r2, r4, lsr #5
   22238:	andeq	r2, r2, r4, lsr #5
   2223c:	andeq	r2, r2, r4, lsr #5
   22240:	andeq	r2, r2, r4, lsr #5
   22244:	andeq	r2, r2, r4, lsr #5
   22248:	andeq	r2, r2, r4, lsr #5
   2224c:	andeq	r2, r2, r4, lsr #5
   22250:	andeq	r2, r2, r4, lsr #5
   22254:	andeq	r2, r2, r4, lsr #5
   22258:	andeq	r2, r2, r4, lsr #5
   2225c:	andeq	r2, r2, r4, lsr #5
   22260:	andeq	r2, r2, r4, lsr #5
   22264:	andeq	r2, r2, r4, lsr #5
   22268:	andeq	r2, r2, r4, lsr #5
   2226c:	andeq	r2, r2, r4, lsr #5
   22270:	andeq	r2, r2, r4, lsr #5
   22274:	andeq	r2, r2, r4, lsr #5
   22278:	andeq	r2, r2, r4, lsr #5
   2227c:	andeq	r2, r2, r4, lsr #5
   22280:	andeq	r2, r2, r4, lsr #5
   22284:	muleq	r2, r4, r2
   22288:	muleq	r2, r4, r2
   2228c:	muleq	r2, r4, r2
   22290:	muleq	r2, r4, r2
   22294:	movw	r0, #1
   22298:	and	r0, r0, #1
   2229c:	strb	r0, [sp, #11]
   222a0:	b	222b0 <__assert_fail@plt+0x10b7c>
   222a4:	movw	r0, #0
   222a8:	and	r0, r0, #1
   222ac:	strb	r0, [sp, #11]
   222b0:	ldrb	r0, [sp, #11]
   222b4:	and	r0, r0, #1
   222b8:	add	sp, sp, #12
   222bc:	bx	lr
   222c0:	sub	sp, sp, #12
   222c4:	str	r0, [sp, #4]
   222c8:	ldr	r0, [sp, #4]
   222cc:	sub	r1, r0, #9
   222d0:	cmp	r1, #5
   222d4:	str	r0, [sp]
   222d8:	bcc	222f0 <__assert_fail@plt+0x10bbc>
   222dc:	b	222e0 <__assert_fail@plt+0x10bac>
   222e0:	ldr	r0, [sp]
   222e4:	cmp	r0, #32
   222e8:	bne	22300 <__assert_fail@plt+0x10bcc>
   222ec:	b	222f0 <__assert_fail@plt+0x10bbc>
   222f0:	movw	r0, #1
   222f4:	and	r0, r0, #1
   222f8:	strb	r0, [sp, #11]
   222fc:	b	2230c <__assert_fail@plt+0x10bd8>
   22300:	movw	r0, #0
   22304:	and	r0, r0, #1
   22308:	strb	r0, [sp, #11]
   2230c:	ldrb	r0, [sp, #11]
   22310:	and	r0, r0, #1
   22314:	add	sp, sp, #12
   22318:	bx	lr
   2231c:	sub	sp, sp, #8
   22320:	str	r0, [sp]
   22324:	ldr	r0, [sp]
   22328:	sub	r0, r0, #65	; 0x41
   2232c:	cmp	r0, #25
   22330:	bhi	22348 <__assert_fail@plt+0x10c14>
   22334:	b	22338 <__assert_fail@plt+0x10c04>
   22338:	movw	r0, #1
   2233c:	and	r0, r0, #1
   22340:	strb	r0, [sp, #7]
   22344:	b	22354 <__assert_fail@plt+0x10c20>
   22348:	movw	r0, #0
   2234c:	and	r0, r0, #1
   22350:	strb	r0, [sp, #7]
   22354:	ldrb	r0, [sp, #7]
   22358:	and	r0, r0, #1
   2235c:	add	sp, sp, #8
   22360:	bx	lr
   22364:	sub	sp, sp, #12
   22368:	str	r0, [sp, #4]
   2236c:	ldr	r0, [sp, #4]
   22370:	sub	r1, r0, #48	; 0x30
   22374:	cmp	r1, #10
   22378:	str	r0, [sp]
   2237c:	bcc	223ac <__assert_fail@plt+0x10c78>
   22380:	b	22384 <__assert_fail@plt+0x10c50>
   22384:	ldr	r0, [sp]
   22388:	sub	r1, r0, #65	; 0x41
   2238c:	cmp	r1, #6
   22390:	bcc	223ac <__assert_fail@plt+0x10c78>
   22394:	b	22398 <__assert_fail@plt+0x10c64>
   22398:	ldr	r0, [sp]
   2239c:	sub	r1, r0, #97	; 0x61
   223a0:	cmp	r1, #5
   223a4:	bhi	223bc <__assert_fail@plt+0x10c88>
   223a8:	b	223ac <__assert_fail@plt+0x10c78>
   223ac:	movw	r0, #1
   223b0:	and	r0, r0, #1
   223b4:	strb	r0, [sp, #11]
   223b8:	b	223c8 <__assert_fail@plt+0x10c94>
   223bc:	movw	r0, #0
   223c0:	and	r0, r0, #1
   223c4:	strb	r0, [sp, #11]
   223c8:	ldrb	r0, [sp, #11]
   223cc:	and	r0, r0, #1
   223d0:	add	sp, sp, #12
   223d4:	bx	lr
   223d8:	sub	sp, sp, #8
   223dc:	str	r0, [sp]
   223e0:	ldr	r0, [sp]
   223e4:	sub	r0, r0, #65	; 0x41
   223e8:	cmp	r0, #25
   223ec:	bhi	22408 <__assert_fail@plt+0x10cd4>
   223f0:	b	223f4 <__assert_fail@plt+0x10cc0>
   223f4:	ldr	r0, [sp]
   223f8:	sub	r0, r0, #65	; 0x41
   223fc:	add	r0, r0, #97	; 0x61
   22400:	str	r0, [sp, #4]
   22404:	b	22410 <__assert_fail@plt+0x10cdc>
   22408:	ldr	r0, [sp]
   2240c:	str	r0, [sp, #4]
   22410:	ldr	r0, [sp, #4]
   22414:	add	sp, sp, #8
   22418:	bx	lr
   2241c:	sub	sp, sp, #8
   22420:	str	r0, [sp]
   22424:	ldr	r0, [sp]
   22428:	sub	r0, r0, #97	; 0x61
   2242c:	cmp	r0, #25
   22430:	bhi	2244c <__assert_fail@plt+0x10d18>
   22434:	b	22438 <__assert_fail@plt+0x10d04>
   22438:	ldr	r0, [sp]
   2243c:	sub	r0, r0, #97	; 0x61
   22440:	add	r0, r0, #65	; 0x41
   22444:	str	r0, [sp, #4]
   22448:	b	22454 <__assert_fail@plt+0x10d20>
   2244c:	ldr	r0, [sp]
   22450:	str	r0, [sp, #4]
   22454:	ldr	r0, [sp, #4]
   22458:	add	sp, sp, #8
   2245c:	bx	lr
   22460:	sub	sp, sp, #8
   22464:	push	{fp, lr}
   22468:	mov	fp, sp
   2246c:	sub	sp, sp, #48	; 0x30
   22470:	str	r3, [fp, #12]
   22474:	str	r2, [fp, #8]
   22478:	str	r0, [fp, #-4]
   2247c:	str	r1, [fp, #-8]
   22480:	mvn	r0, #0
   22484:	str	r0, [fp, #-16]
   22488:	add	r0, fp, #8
   2248c:	str	r0, [fp, #-12]
   22490:	ldr	r0, [fp, #-8]
   22494:	cmp	r0, #0
   22498:	str	r0, [sp, #12]
   2249c:	beq	224b8 <__assert_fail@plt+0x10d84>
   224a0:	b	224a4 <__assert_fail@plt+0x10d70>
   224a4:	movw	r0, #1030	; 0x406
   224a8:	ldr	r1, [sp, #12]
   224ac:	cmp	r1, r0
   224b0:	beq	224e0 <__assert_fail@plt+0x10dac>
   224b4:	b	22508 <__assert_fail@plt+0x10dd4>
   224b8:	ldr	r0, [fp, #-12]
   224bc:	add	r1, r0, #4
   224c0:	str	r1, [fp, #-12]
   224c4:	ldr	r0, [r0]
   224c8:	str	r0, [fp, #-20]	; 0xffffffec
   224cc:	ldr	r0, [fp, #-4]
   224d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   224d4:	bl	226b4 <__assert_fail@plt+0x10f80>
   224d8:	str	r0, [fp, #-16]
   224dc:	b	22694 <__assert_fail@plt+0x10f60>
   224e0:	ldr	r0, [fp, #-12]
   224e4:	add	r1, r0, #4
   224e8:	str	r1, [fp, #-12]
   224ec:	ldr	r0, [r0]
   224f0:	str	r0, [sp, #24]
   224f4:	ldr	r0, [fp, #-4]
   224f8:	ldr	r1, [sp, #24]
   224fc:	bl	226e8 <__assert_fail@plt+0x10fb4>
   22500:	str	r0, [fp, #-16]
   22504:	b	22694 <__assert_fail@plt+0x10f60>
   22508:	ldr	r0, [fp, #-8]
   2250c:	cmp	r0, #0
   22510:	str	r0, [sp, #8]
   22514:	beq	2263c <__assert_fail@plt+0x10f08>
   22518:	b	2251c <__assert_fail@plt+0x10de8>
   2251c:	ldr	r0, [sp, #8]
   22520:	cmp	r0, #1
   22524:	beq	22628 <__assert_fail@plt+0x10ef4>
   22528:	b	2252c <__assert_fail@plt+0x10df8>
   2252c:	ldr	r0, [sp, #8]
   22530:	cmp	r0, #2
   22534:	beq	2263c <__assert_fail@plt+0x10f08>
   22538:	b	2253c <__assert_fail@plt+0x10e08>
   2253c:	ldr	r0, [sp, #8]
   22540:	cmp	r0, #3
   22544:	beq	22628 <__assert_fail@plt+0x10ef4>
   22548:	b	2254c <__assert_fail@plt+0x10e18>
   2254c:	ldr	r0, [sp, #8]
   22550:	cmp	r0, #4
   22554:	beq	2263c <__assert_fail@plt+0x10f08>
   22558:	b	2255c <__assert_fail@plt+0x10e28>
   2255c:	ldr	r0, [sp, #8]
   22560:	cmp	r0, #8
   22564:	beq	2263c <__assert_fail@plt+0x10f08>
   22568:	b	2256c <__assert_fail@plt+0x10e38>
   2256c:	ldr	r0, [sp, #8]
   22570:	cmp	r0, #9
   22574:	beq	22628 <__assert_fail@plt+0x10ef4>
   22578:	b	2257c <__assert_fail@plt+0x10e48>
   2257c:	ldr	r0, [sp, #8]
   22580:	cmp	r0, #10
   22584:	beq	2263c <__assert_fail@plt+0x10f08>
   22588:	b	2258c <__assert_fail@plt+0x10e58>
   2258c:	ldr	r0, [sp, #8]
   22590:	cmp	r0, #11
   22594:	beq	22628 <__assert_fail@plt+0x10ef4>
   22598:	b	2259c <__assert_fail@plt+0x10e68>
   2259c:	ldr	r0, [sp, #8]
   225a0:	cmp	r0, #1024	; 0x400
   225a4:	beq	2263c <__assert_fail@plt+0x10f08>
   225a8:	b	225ac <__assert_fail@plt+0x10e78>
   225ac:	movw	r0, #1025	; 0x401
   225b0:	ldr	r1, [sp, #8]
   225b4:	cmp	r1, r0
   225b8:	beq	22628 <__assert_fail@plt+0x10ef4>
   225bc:	b	225c0 <__assert_fail@plt+0x10e8c>
   225c0:	movw	r0, #1026	; 0x402
   225c4:	ldr	r1, [sp, #8]
   225c8:	cmp	r1, r0
   225cc:	beq	2263c <__assert_fail@plt+0x10f08>
   225d0:	b	225d4 <__assert_fail@plt+0x10ea0>
   225d4:	movw	r0, #1030	; 0x406
   225d8:	ldr	r1, [sp, #8]
   225dc:	sub	r0, r1, r0
   225e0:	cmp	r0, #2
   225e4:	bcc	2263c <__assert_fail@plt+0x10f08>
   225e8:	b	225ec <__assert_fail@plt+0x10eb8>
   225ec:	movw	r0, #1032	; 0x408
   225f0:	ldr	r1, [sp, #8]
   225f4:	cmp	r1, r0
   225f8:	beq	22628 <__assert_fail@plt+0x10ef4>
   225fc:	b	22600 <__assert_fail@plt+0x10ecc>
   22600:	movw	r0, #1033	; 0x409
   22604:	ldr	r1, [sp, #8]
   22608:	cmp	r1, r0
   2260c:	beq	2263c <__assert_fail@plt+0x10f08>
   22610:	b	22614 <__assert_fail@plt+0x10ee0>
   22614:	movw	r0, #1034	; 0x40a
   22618:	ldr	r1, [sp, #8]
   2261c:	cmp	r1, r0
   22620:	bne	22668 <__assert_fail@plt+0x10f34>
   22624:	b	22628 <__assert_fail@plt+0x10ef4>
   22628:	ldr	r0, [fp, #-4]
   2262c:	ldr	r1, [fp, #-8]
   22630:	bl	11668 <fcntl64@plt>
   22634:	str	r0, [fp, #-16]
   22638:	b	22690 <__assert_fail@plt+0x10f5c>
   2263c:	ldr	r0, [fp, #-12]
   22640:	add	r1, r0, #4
   22644:	str	r1, [fp, #-12]
   22648:	ldr	r0, [r0]
   2264c:	str	r0, [sp, #20]
   22650:	ldr	r0, [fp, #-4]
   22654:	ldr	r1, [fp, #-8]
   22658:	ldr	r2, [sp, #20]
   2265c:	bl	11668 <fcntl64@plt>
   22660:	str	r0, [fp, #-16]
   22664:	b	22690 <__assert_fail@plt+0x10f5c>
   22668:	ldr	r0, [fp, #-12]
   2266c:	add	r1, r0, #4
   22670:	str	r1, [fp, #-12]
   22674:	ldr	r0, [r0]
   22678:	str	r0, [sp, #16]
   2267c:	ldr	r0, [fp, #-4]
   22680:	ldr	r1, [fp, #-8]
   22684:	ldr	r2, [sp, #16]
   22688:	bl	11668 <fcntl64@plt>
   2268c:	str	r0, [fp, #-16]
   22690:	b	22694 <__assert_fail@plt+0x10f60>
   22694:	sub	r0, fp, #12
   22698:	ldr	r1, [fp, #-16]
   2269c:	str	r0, [sp, #4]
   226a0:	mov	r0, r1
   226a4:	mov	sp, fp
   226a8:	pop	{fp, lr}
   226ac:	add	sp, sp, #8
   226b0:	bx	lr
   226b4:	push	{fp, lr}
   226b8:	mov	fp, sp
   226bc:	sub	sp, sp, #16
   226c0:	str	r0, [fp, #-4]
   226c4:	str	r1, [sp, #8]
   226c8:	ldr	r0, [fp, #-4]
   226cc:	ldr	r2, [sp, #8]
   226d0:	movw	r1, #0
   226d4:	bl	11668 <fcntl64@plt>
   226d8:	str	r0, [sp, #4]
   226dc:	ldr	r0, [sp, #4]
   226e0:	mov	sp, fp
   226e4:	pop	{fp, pc}
   226e8:	push	{fp, lr}
   226ec:	mov	fp, sp
   226f0:	sub	sp, sp, #32
   226f4:	str	r0, [fp, #-4]
   226f8:	str	r1, [fp, #-8]
   226fc:	movw	r0, #22116	; 0x5664
   22700:	movt	r0, #3
   22704:	ldr	r0, [r0]
   22708:	movw	r1, #0
   2270c:	cmp	r1, r0
   22710:	bgt	22790 <__assert_fail@plt+0x1105c>
   22714:	ldr	r0, [fp, #-4]
   22718:	ldr	r2, [fp, #-8]
   2271c:	movw	r1, #1030	; 0x406
   22720:	bl	11668 <fcntl64@plt>
   22724:	str	r0, [fp, #-12]
   22728:	ldr	r0, [fp, #-12]
   2272c:	movw	r1, #0
   22730:	cmp	r1, r0
   22734:	ble	22748 <__assert_fail@plt+0x11014>
   22738:	bl	115f0 <__errno_location@plt>
   2273c:	ldr	r0, [r0]
   22740:	cmp	r0, #22
   22744:	beq	2275c <__assert_fail@plt+0x11028>
   22748:	movw	r0, #22116	; 0x5664
   2274c:	movt	r0, #3
   22750:	movw	r1, #1
   22754:	str	r1, [r0]
   22758:	b	2278c <__assert_fail@plt+0x11058>
   2275c:	ldr	r0, [fp, #-4]
   22760:	ldr	r1, [fp, #-8]
   22764:	bl	226b4 <__assert_fail@plt+0x10f80>
   22768:	str	r0, [fp, #-12]
   2276c:	ldr	r0, [fp, #-12]
   22770:	cmp	r0, #0
   22774:	blt	22788 <__assert_fail@plt+0x11054>
   22778:	movw	r0, #22116	; 0x5664
   2277c:	movt	r0, #3
   22780:	mvn	r1, #0
   22784:	str	r1, [r0]
   22788:	b	2278c <__assert_fail@plt+0x11058>
   2278c:	b	227a0 <__assert_fail@plt+0x1106c>
   22790:	ldr	r0, [fp, #-4]
   22794:	ldr	r1, [fp, #-8]
   22798:	bl	226b4 <__assert_fail@plt+0x10f80>
   2279c:	str	r0, [fp, #-12]
   227a0:	ldr	r0, [fp, #-12]
   227a4:	movw	r1, #0
   227a8:	cmp	r1, r0
   227ac:	bgt	22834 <__assert_fail@plt+0x11100>
   227b0:	movw	r0, #22116	; 0x5664
   227b4:	movt	r0, #3
   227b8:	ldr	r0, [r0]
   227bc:	cmn	r0, #1
   227c0:	bne	22834 <__assert_fail@plt+0x11100>
   227c4:	ldr	r0, [fp, #-12]
   227c8:	movw	r1, #1
   227cc:	bl	11668 <fcntl64@plt>
   227d0:	str	r0, [sp, #16]
   227d4:	ldr	r0, [sp, #16]
   227d8:	cmp	r0, #0
   227dc:	blt	227fc <__assert_fail@plt+0x110c8>
   227e0:	ldr	r0, [fp, #-12]
   227e4:	ldr	r1, [sp, #16]
   227e8:	orr	r2, r1, #1
   227ec:	movw	r1, #2
   227f0:	bl	11668 <fcntl64@plt>
   227f4:	cmn	r0, #1
   227f8:	bne	22830 <__assert_fail@plt+0x110fc>
   227fc:	bl	115f0 <__errno_location@plt>
   22800:	ldr	r0, [r0]
   22804:	str	r0, [sp, #12]
   22808:	ldr	r0, [fp, #-12]
   2280c:	bl	1171c <close@plt>
   22810:	ldr	lr, [sp, #12]
   22814:	str	r0, [sp, #8]
   22818:	str	lr, [sp, #4]
   2281c:	bl	115f0 <__errno_location@plt>
   22820:	ldr	lr, [sp, #4]
   22824:	str	lr, [r0]
   22828:	mvn	r0, #0
   2282c:	str	r0, [fp, #-12]
   22830:	b	22834 <__assert_fail@plt+0x11100>
   22834:	ldr	r0, [fp, #-12]
   22838:	mov	sp, fp
   2283c:	pop	{fp, pc}
   22840:	push	{r4, r5, fp, lr}
   22844:	add	fp, sp, #8
   22848:	sub	sp, sp, #272	; 0x110
   2284c:	add	r1, sp, #7
   22850:	str	r0, [fp, #-16]
   22854:	ldr	r0, [fp, #-16]
   22858:	movw	r2, #257	; 0x101
   2285c:	bl	228dc <__assert_fail@plt+0x111a8>
   22860:	cmp	r0, #0
   22864:	beq	22878 <__assert_fail@plt+0x11144>
   22868:	movw	r0, #0
   2286c:	and	r0, r0, #1
   22870:	strb	r0, [fp, #-9]
   22874:	b	228cc <__assert_fail@plt+0x11198>
   22878:	add	r0, sp, #7
   2287c:	movw	r1, #17388	; 0x43ec
   22880:	movt	r1, #2
   22884:	bl	113bc <strcmp@plt>
   22888:	cmp	r0, #0
   2288c:	movw	r0, #1
   22890:	str	r0, [sp]
   22894:	beq	228b8 <__assert_fail@plt+0x11184>
   22898:	add	r0, sp, #7
   2289c:	movw	r1, #17390	; 0x43ee
   228a0:	movt	r1, #2
   228a4:	bl	113bc <strcmp@plt>
   228a8:	cmp	r0, #0
   228ac:	movw	r0, #0
   228b0:	moveq	r0, #1
   228b4:	str	r0, [sp]
   228b8:	ldr	r0, [sp]
   228bc:	mvn	r1, #0
   228c0:	eor	r0, r0, r1
   228c4:	and	r0, r0, #1
   228c8:	strb	r0, [fp, #-9]
   228cc:	ldrb	r0, [fp, #-9]
   228d0:	and	r0, r0, #1
   228d4:	sub	sp, fp, #8
   228d8:	pop	{r4, r5, fp, pc}
   228dc:	push	{fp, lr}
   228e0:	mov	fp, sp
   228e4:	sub	sp, sp, #16
   228e8:	str	r0, [fp, #-4]
   228ec:	str	r1, [sp, #8]
   228f0:	str	r2, [sp, #4]
   228f4:	ldr	r0, [fp, #-4]
   228f8:	ldr	r1, [sp, #8]
   228fc:	ldr	r2, [sp, #4]
   22900:	bl	2290c <__assert_fail@plt+0x111d8>
   22904:	mov	sp, fp
   22908:	pop	{fp, pc}
   2290c:	push	{fp, lr}
   22910:	mov	fp, sp
   22914:	sub	sp, sp, #24
   22918:	str	r0, [fp, #-8]
   2291c:	str	r1, [sp, #12]
   22920:	str	r2, [sp, #8]
   22924:	ldr	r0, [fp, #-8]
   22928:	bl	22a0c <__assert_fail@plt+0x112d8>
   2292c:	str	r0, [sp, #4]
   22930:	ldr	r0, [sp, #4]
   22934:	movw	r1, #0
   22938:	cmp	r0, r1
   2293c:	bne	22964 <__assert_fail@plt+0x11230>
   22940:	ldr	r0, [sp, #8]
   22944:	cmp	r0, #0
   22948:	bls	22958 <__assert_fail@plt+0x11224>
   2294c:	ldr	r0, [sp, #12]
   22950:	movw	r1, #0
   22954:	strb	r1, [r0]
   22958:	movw	r0, #22
   2295c:	str	r0, [fp, #-4]
   22960:	b	229e0 <__assert_fail@plt+0x112ac>
   22964:	ldr	r0, [sp, #4]
   22968:	bl	1159c <strlen@plt>
   2296c:	str	r0, [sp]
   22970:	ldr	r0, [sp]
   22974:	ldr	lr, [sp, #8]
   22978:	cmp	r0, lr
   2297c:	bcs	229a0 <__assert_fail@plt+0x1126c>
   22980:	ldr	r0, [sp, #12]
   22984:	ldr	r1, [sp, #4]
   22988:	ldr	r2, [sp]
   2298c:	add	r2, r2, #1
   22990:	bl	11428 <memcpy@plt>
   22994:	movw	r0, #0
   22998:	str	r0, [fp, #-4]
   2299c:	b	229e0 <__assert_fail@plt+0x112ac>
   229a0:	ldr	r0, [sp, #8]
   229a4:	cmp	r0, #0
   229a8:	bls	229d8 <__assert_fail@plt+0x112a4>
   229ac:	ldr	r0, [sp, #12]
   229b0:	ldr	r1, [sp, #4]
   229b4:	ldr	r2, [sp, #8]
   229b8:	sub	r2, r2, #1
   229bc:	bl	11428 <memcpy@plt>
   229c0:	ldr	r0, [sp, #12]
   229c4:	ldr	r1, [sp, #8]
   229c8:	sub	r1, r1, #1
   229cc:	add	r0, r0, r1
   229d0:	movw	r1, #0
   229d4:	strb	r1, [r0]
   229d8:	movw	r0, #34	; 0x22
   229dc:	str	r0, [fp, #-4]
   229e0:	ldr	r0, [fp, #-4]
   229e4:	mov	sp, fp
   229e8:	pop	{fp, pc}
   229ec:	push	{fp, lr}
   229f0:	mov	fp, sp
   229f4:	sub	sp, sp, #8
   229f8:	str	r0, [sp, #4]
   229fc:	ldr	r0, [sp, #4]
   22a00:	bl	22a0c <__assert_fail@plt+0x112d8>
   22a04:	mov	sp, fp
   22a08:	pop	{fp, pc}
   22a0c:	push	{fp, lr}
   22a10:	mov	fp, sp
   22a14:	sub	sp, sp, #8
   22a18:	str	r0, [sp, #4]
   22a1c:	ldr	r0, [sp, #4]
   22a20:	movw	r1, #0
   22a24:	bl	11674 <setlocale@plt>
   22a28:	str	r0, [sp]
   22a2c:	ldr	r0, [sp]
   22a30:	mov	sp, fp
   22a34:	pop	{fp, pc}
   22a38:	cmp	r3, #0
   22a3c:	cmpeq	r2, #0
   22a40:	bne	22a64 <__assert_fail@plt+0x11330>
   22a44:	cmp	r1, #0
   22a48:	movlt	r1, #-2147483648	; 0x80000000
   22a4c:	movlt	r0, #0
   22a50:	blt	22a60 <__assert_fail@plt+0x1132c>
   22a54:	cmpeq	r0, #0
   22a58:	mvnne	r1, #-2147483648	; 0x80000000
   22a5c:	mvnne	r0, #0
   22a60:	b	22b48 <__assert_fail@plt+0x11414>
   22a64:	sub	sp, sp, #8
   22a68:	push	{sp, lr}
   22a6c:	cmp	r1, #0
   22a70:	blt	22a90 <__assert_fail@plt+0x1135c>
   22a74:	cmp	r3, #0
   22a78:	blt	22ac4 <__assert_fail@plt+0x11390>
   22a7c:	bl	22b58 <__assert_fail@plt+0x11424>
   22a80:	ldr	lr, [sp, #4]
   22a84:	add	sp, sp, #8
   22a88:	pop	{r2, r3}
   22a8c:	bx	lr
   22a90:	rsbs	r0, r0, #0
   22a94:	sbc	r1, r1, r1, lsl #1
   22a98:	cmp	r3, #0
   22a9c:	blt	22ae8 <__assert_fail@plt+0x113b4>
   22aa0:	bl	22b58 <__assert_fail@plt+0x11424>
   22aa4:	ldr	lr, [sp, #4]
   22aa8:	add	sp, sp, #8
   22aac:	pop	{r2, r3}
   22ab0:	rsbs	r0, r0, #0
   22ab4:	sbc	r1, r1, r1, lsl #1
   22ab8:	rsbs	r2, r2, #0
   22abc:	sbc	r3, r3, r3, lsl #1
   22ac0:	bx	lr
   22ac4:	rsbs	r2, r2, #0
   22ac8:	sbc	r3, r3, r3, lsl #1
   22acc:	bl	22b58 <__assert_fail@plt+0x11424>
   22ad0:	ldr	lr, [sp, #4]
   22ad4:	add	sp, sp, #8
   22ad8:	pop	{r2, r3}
   22adc:	rsbs	r0, r0, #0
   22ae0:	sbc	r1, r1, r1, lsl #1
   22ae4:	bx	lr
   22ae8:	rsbs	r2, r2, #0
   22aec:	sbc	r3, r3, r3, lsl #1
   22af0:	bl	22b58 <__assert_fail@plt+0x11424>
   22af4:	ldr	lr, [sp, #4]
   22af8:	add	sp, sp, #8
   22afc:	pop	{r2, r3}
   22b00:	rsbs	r2, r2, #0
   22b04:	sbc	r3, r3, r3, lsl #1
   22b08:	bx	lr
   22b0c:	cmp	r3, #0
   22b10:	cmpeq	r2, #0
   22b14:	bne	22b2c <__assert_fail@plt+0x113f8>
   22b18:	cmp	r1, #0
   22b1c:	cmpeq	r0, #0
   22b20:	mvnne	r1, #0
   22b24:	mvnne	r0, #0
   22b28:	b	22b48 <__assert_fail@plt+0x11414>
   22b2c:	sub	sp, sp, #8
   22b30:	push	{sp, lr}
   22b34:	bl	22b58 <__assert_fail@plt+0x11424>
   22b38:	ldr	lr, [sp, #4]
   22b3c:	add	sp, sp, #8
   22b40:	pop	{r2, r3}
   22b44:	bx	lr
   22b48:	push	{r1, lr}
   22b4c:	mov	r0, #8
   22b50:	bl	113b0 <raise@plt>
   22b54:	pop	{r1, pc}
   22b58:	cmp	r1, r3
   22b5c:	cmpeq	r0, r2
   22b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b64:	mov	r4, r0
   22b68:	movcc	r0, #0
   22b6c:	mov	r5, r1
   22b70:	ldr	lr, [sp, #36]	; 0x24
   22b74:	movcc	r1, r0
   22b78:	bcc	22c74 <__assert_fail@plt+0x11540>
   22b7c:	cmp	r3, #0
   22b80:	clzeq	ip, r2
   22b84:	clzne	ip, r3
   22b88:	addeq	ip, ip, #32
   22b8c:	cmp	r5, #0
   22b90:	clzeq	r1, r4
   22b94:	addeq	r1, r1, #32
   22b98:	clzne	r1, r5
   22b9c:	sub	ip, ip, r1
   22ba0:	sub	sl, ip, #32
   22ba4:	lsl	r9, r3, ip
   22ba8:	rsb	fp, ip, #32
   22bac:	orr	r9, r9, r2, lsl sl
   22bb0:	orr	r9, r9, r2, lsr fp
   22bb4:	lsl	r8, r2, ip
   22bb8:	cmp	r5, r9
   22bbc:	cmpeq	r4, r8
   22bc0:	movcc	r0, #0
   22bc4:	movcc	r1, r0
   22bc8:	bcc	22be4 <__assert_fail@plt+0x114b0>
   22bcc:	mov	r0, #1
   22bd0:	subs	r4, r4, r8
   22bd4:	lsl	r1, r0, sl
   22bd8:	orr	r1, r1, r0, lsr fp
   22bdc:	lsl	r0, r0, ip
   22be0:	sbc	r5, r5, r9
   22be4:	cmp	ip, #0
   22be8:	beq	22c74 <__assert_fail@plt+0x11540>
   22bec:	lsr	r6, r8, #1
   22bf0:	orr	r6, r6, r9, lsl #31
   22bf4:	lsr	r7, r9, #1
   22bf8:	mov	r2, ip
   22bfc:	b	22c20 <__assert_fail@plt+0x114ec>
   22c00:	subs	r3, r4, r6
   22c04:	sbc	r8, r5, r7
   22c08:	adds	r3, r3, r3
   22c0c:	adc	r8, r8, r8
   22c10:	adds	r4, r3, #1
   22c14:	adc	r5, r8, #0
   22c18:	subs	r2, r2, #1
   22c1c:	beq	22c3c <__assert_fail@plt+0x11508>
   22c20:	cmp	r5, r7
   22c24:	cmpeq	r4, r6
   22c28:	bcs	22c00 <__assert_fail@plt+0x114cc>
   22c2c:	adds	r4, r4, r4
   22c30:	adc	r5, r5, r5
   22c34:	subs	r2, r2, #1
   22c38:	bne	22c20 <__assert_fail@plt+0x114ec>
   22c3c:	lsr	r3, r4, ip
   22c40:	orr	r3, r3, r5, lsl fp
   22c44:	lsr	r2, r5, ip
   22c48:	orr	r3, r3, r5, lsr sl
   22c4c:	adds	r0, r0, r4
   22c50:	mov	r4, r3
   22c54:	lsl	r3, r2, ip
   22c58:	orr	r3, r3, r4, lsl sl
   22c5c:	lsl	ip, r4, ip
   22c60:	orr	r3, r3, r4, lsr fp
   22c64:	adc	r1, r1, r5
   22c68:	subs	r0, r0, ip
   22c6c:	mov	r5, r2
   22c70:	sbc	r1, r1, r3
   22c74:	cmp	lr, #0
   22c78:	strdne	r4, [lr]
   22c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22c84:	mov	r7, r0
   22c88:	ldr	r6, [pc, #72]	; 22cd8 <__assert_fail@plt+0x115a4>
   22c8c:	ldr	r5, [pc, #72]	; 22cdc <__assert_fail@plt+0x115a8>
   22c90:	add	r6, pc, r6
   22c94:	add	r5, pc, r5
   22c98:	sub	r6, r6, r5
   22c9c:	mov	r8, r1
   22ca0:	mov	r9, r2
   22ca4:	bl	1136c <fdopen@plt-0x20>
   22ca8:	asrs	r6, r6, #2
   22cac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   22cb0:	mov	r4, #0
   22cb4:	add	r4, r4, #1
   22cb8:	ldr	r3, [r5], #4
   22cbc:	mov	r2, r9
   22cc0:	mov	r1, r8
   22cc4:	mov	r0, r7
   22cc8:	blx	r3
   22ccc:	cmp	r6, r4
   22cd0:	bne	22cb4 <__assert_fail@plt+0x11580>
   22cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22cd8:	andeq	r2, r1, r4, ror r2
   22cdc:	andeq	r2, r1, ip, ror #4
   22ce0:	bx	lr
   22ce4:	ldr	r3, [pc, #12]	; 22cf8 <__assert_fail@plt+0x115c4>
   22ce8:	mov	r1, #0
   22cec:	add	r3, pc, r3
   22cf0:	ldr	r2, [r3]
   22cf4:	b	115fc <__cxa_atexit@plt>
   22cf8:	andeq	r2, r1, ip, asr r4
   22cfc:	mov	r2, r1
   22d00:	mov	r1, r0
   22d04:	mov	r0, #3
   22d08:	b	114a0 <__fxstat64@plt>

Disassembly of section .fini:

00022d0c <.fini>:
   22d0c:	push	{r3, lr}
   22d10:	pop	{r3, pc}
