
../repos/coreutils/src/split:     file format elf32-littlearm


Disassembly of section .init:

00011120 <.init>:
   11120:	push	{r3, lr}
   11124:	bl	1153c <__assert_fail@plt+0x48>
   11128:	pop	{r3, pc}

Disassembly of section .plt:

0001112c <fdopen@plt-0x14>:
   1112c:	push	{lr}		; (str lr, [sp, #-4]!)
   11130:	ldr	lr, [pc, #4]	; 1113c <fdopen@plt-0x4>
   11134:	add	lr, pc, lr
   11138:	ldr	pc, [lr, #8]!
   1113c:	andeq	sp, r1, r4, asr #29

00011140 <fdopen@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #118784	; 0x1d000
   11148:	ldr	pc, [ip, #3780]!	; 0xec4

0001114c <calloc@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #118784	; 0x1d000
   11154:	ldr	pc, [ip, #3772]!	; 0xebc

00011158 <fputs_unlocked@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #118784	; 0x1d000
   11160:	ldr	pc, [ip, #3764]!	; 0xeb4

00011164 <raise@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #118784	; 0x1d000
   1116c:	ldr	pc, [ip, #3756]!	; 0xeac

00011170 <strcmp@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #118784	; 0x1d000
   11178:	ldr	pc, [ip, #3748]!	; 0xea4

0001117c <strtol@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #118784	; 0x1d000
   11184:	ldr	pc, [ip, #3740]!	; 0xe9c

00011188 <printf@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #118784	; 0x1d000
   11190:	ldr	pc, [ip, #3732]!	; 0xe94

00011194 <read@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #118784	; 0x1d000
   1119c:	ldr	pc, [ip, #3724]!	; 0xe8c

000111a0 <fflush@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #118784	; 0x1d000
   111a8:	ldr	pc, [ip, #3716]!	; 0xe84

000111ac <sigprocmask@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #118784	; 0x1d000
   111b4:	ldr	pc, [ip, #3708]!	; 0xe7c

000111b8 <memmove@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #118784	; 0x1d000
   111c0:	ldr	pc, [ip, #3700]!	; 0xe74

000111c4 <free@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #118784	; 0x1d000
   111cc:	ldr	pc, [ip, #3692]!	; 0xe6c

000111d0 <_exit@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #118784	; 0x1d000
   111d8:	ldr	pc, [ip, #3684]!	; 0xe64

000111dc <memcpy@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #118784	; 0x1d000
   111e4:	ldr	pc, [ip, #3676]!	; 0xe5c

000111e8 <mbsinit@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #118784	; 0x1d000
   111f0:	ldr	pc, [ip, #3668]!	; 0xe54

000111f4 <ftruncate64@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #118784	; 0x1d000
   111fc:	ldr	pc, [ip, #3660]!	; 0xe4c

00011200 <fwrite_unlocked@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #118784	; 0x1d000
   11208:	ldr	pc, [ip, #3652]!	; 0xe44

0001120c <memcmp@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #118784	; 0x1d000
   11214:	ldr	pc, [ip, #3644]!	; 0xe3c

00011218 <fputc_unlocked@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #118784	; 0x1d000
   11220:	ldr	pc, [ip, #3636]!	; 0xe34

00011224 <dup2@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #118784	; 0x1d000
   1122c:	ldr	pc, [ip, #3628]!	; 0xe2c

00011230 <realloc@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #118784	; 0x1d000
   11238:	ldr	pc, [ip, #3620]!	; 0xe24

0001123c <textdomain@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #118784	; 0x1d000
   11244:	ldr	pc, [ip, #3612]!	; 0xe1c

00011248 <rawmemchr@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #118784	; 0x1d000
   11250:	ldr	pc, [ip, #3604]!	; 0xe14

00011254 <iswprint@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #118784	; 0x1d000
   1125c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011260 <__fxstat64@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #118784	; 0x1d000
   11268:	ldr	pc, [ip, #3588]!	; 0xe04

0001126c <sigaction@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #118784	; 0x1d000
   11274:	ldr	pc, [ip, #3580]!	; 0xdfc

00011278 <fwrite@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #118784	; 0x1d000
   11280:	ldr	pc, [ip, #3572]!	; 0xdf4

00011284 <lseek64@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #118784	; 0x1d000
   1128c:	ldr	pc, [ip, #3564]!	; 0xdec

00011290 <waitpid@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #118784	; 0x1d000
   11298:	ldr	pc, [ip, #3556]!	; 0xde4

0001129c <__ctype_get_mb_cur_max@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #118784	; 0x1d000
   112a4:	ldr	pc, [ip, #3548]!	; 0xddc

000112a8 <strcpy@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #118784	; 0x1d000
   112b0:	ldr	pc, [ip, #3540]!	; 0xdd4

000112b4 <__fpending@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #118784	; 0x1d000
   112bc:	ldr	pc, [ip, #3532]!	; 0xdcc

000112c0 <ferror_unlocked@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #118784	; 0x1d000
   112c8:	ldr	pc, [ip, #3524]!	; 0xdc4

000112cc <mbrtowc@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #118784	; 0x1d000
   112d4:	ldr	pc, [ip, #3516]!	; 0xdbc

000112d8 <error@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #118784	; 0x1d000
   112e0:	ldr	pc, [ip, #3508]!	; 0xdb4

000112e4 <open64@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #118784	; 0x1d000
   112ec:	ldr	pc, [ip, #3500]!	; 0xdac

000112f0 <getenv@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #118784	; 0x1d000
   112f8:	ldr	pc, [ip, #3492]!	; 0xda4

000112fc <malloc@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #118784	; 0x1d000
   11304:	ldr	pc, [ip, #3484]!	; 0xd9c

00011308 <sigaddset@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #118784	; 0x1d000
   11310:	ldr	pc, [ip, #3476]!	; 0xd94

00011314 <__libc_start_main@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #118784	; 0x1d000
   1131c:	ldr	pc, [ip, #3468]!	; 0xd8c

00011320 <__freading@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #118784	; 0x1d000
   11328:	ldr	pc, [ip, #3460]!	; 0xd84

0001132c <__gmon_start__@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #118784	; 0x1d000
   11334:	ldr	pc, [ip, #3452]!	; 0xd7c

00011338 <getopt_long@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #118784	; 0x1d000
   11340:	ldr	pc, [ip, #3444]!	; 0xd74

00011344 <__ctype_b_loc@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #118784	; 0x1d000
   1134c:	ldr	pc, [ip, #3436]!	; 0xd6c

00011350 <exit@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #118784	; 0x1d000
   11358:	ldr	pc, [ip, #3428]!	; 0xd64

0001135c <gettext@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #118784	; 0x1d000
   11364:	ldr	pc, [ip, #3420]!	; 0xd5c

00011368 <strlen@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #118784	; 0x1d000
   11370:	ldr	pc, [ip, #3412]!	; 0xd54

00011374 <__libc_current_sigrtmax@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #118784	; 0x1d000
   1137c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011380 <strchr@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #118784	; 0x1d000
   11388:	ldr	pc, [ip, #3396]!	; 0xd44

0001138c <setenv@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #118784	; 0x1d000
   11394:	ldr	pc, [ip, #3388]!	; 0xd3c

00011398 <memrchr@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #118784	; 0x1d000
   113a0:	ldr	pc, [ip, #3380]!	; 0xd34

000113a4 <fprintf@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #118784	; 0x1d000
   113ac:	ldr	pc, [ip, #3372]!	; 0xd2c

000113b0 <getpagesize@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #118784	; 0x1d000
   113b8:	ldr	pc, [ip, #3364]!	; 0xd24

000113bc <__errno_location@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #118784	; 0x1d000
   113c4:	ldr	pc, [ip, #3356]!	; 0xd1c

000113c8 <__cxa_atexit@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #118784	; 0x1d000
   113d0:	ldr	pc, [ip, #3348]!	; 0xd14

000113d4 <memset@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #118784	; 0x1d000
   113dc:	ldr	pc, [ip, #3340]!	; 0xd0c

000113e0 <write@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #118784	; 0x1d000
   113e8:	ldr	pc, [ip, #3332]!	; 0xd04

000113ec <fileno@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #118784	; 0x1d000
   113f4:	ldr	pc, [ip, #3324]!	; 0xcfc

000113f8 <strtoumax@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #118784	; 0x1d000
   11400:	ldr	pc, [ip, #3316]!	; 0xcf4

00011404 <memchr@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #118784	; 0x1d000
   1140c:	ldr	pc, [ip, #3308]!	; 0xcec

00011410 <fclose@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #118784	; 0x1d000
   11418:	ldr	pc, [ip, #3300]!	; 0xce4

0001141c <pipe@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #118784	; 0x1d000
   11424:	ldr	pc, [ip, #3292]!	; 0xcdc

00011428 <fseeko64@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #118784	; 0x1d000
   11430:	ldr	pc, [ip, #3284]!	; 0xcd4

00011434 <fcntl64@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #118784	; 0x1d000
   1143c:	ldr	pc, [ip, #3276]!	; 0xccc

00011440 <setlocale@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #118784	; 0x1d000
   11448:	ldr	pc, [ip, #3268]!	; 0xcc4

0001144c <sigemptyset@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #118784	; 0x1d000
   11454:	ldr	pc, [ip, #3260]!	; 0xcbc

00011458 <fork@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #118784	; 0x1d000
   11460:	ldr	pc, [ip, #3252]!	; 0xcb4

00011464 <execl@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #118784	; 0x1d000
   1146c:	ldr	pc, [ip, #3244]!	; 0xcac

00011470 <strrchr@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #118784	; 0x1d000
   11478:	ldr	pc, [ip, #3236]!	; 0xca4

0001147c <nl_langinfo@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #118784	; 0x1d000
   11484:	ldr	pc, [ip, #3228]!	; 0xc9c

00011488 <sprintf@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #118784	; 0x1d000
   11490:	ldr	pc, [ip, #3220]!	; 0xc94

00011494 <clearerr_unlocked@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #118784	; 0x1d000
   1149c:	ldr	pc, [ip, #3212]!	; 0xc8c

000114a0 <bindtextdomain@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #118784	; 0x1d000
   114a8:	ldr	pc, [ip, #3204]!	; 0xc84

000114ac <aligned_alloc@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #118784	; 0x1d000
   114b4:	ldr	pc, [ip, #3196]!	; 0xc7c

000114b8 <__libc_current_sigrtmin@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #118784	; 0x1d000
   114c0:	ldr	pc, [ip, #3188]!	; 0xc74

000114c4 <strncmp@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #118784	; 0x1d000
   114cc:	ldr	pc, [ip, #3180]!	; 0xc6c

000114d0 <abort@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #118784	; 0x1d000
   114d8:	ldr	pc, [ip, #3172]!	; 0xc64

000114dc <close@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #118784	; 0x1d000
   114e4:	ldr	pc, [ip, #3164]!	; 0xc5c

000114e8 <strspn@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #118784	; 0x1d000
   114f0:	ldr	pc, [ip, #3156]!	; 0xc54

000114f4 <__assert_fail@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #118784	; 0x1d000
   114fc:	ldr	pc, [ip, #3148]!	; 0xc4c

Disassembly of section .text:

00011500 <.text>:
   11500:	mov	fp, #0
   11504:	mov	lr, #0
   11508:	pop	{r1}		; (ldr r1, [sp], #4)
   1150c:	mov	r2, sp
   11510:	push	{r2}		; (str r2, [sp, #-4]!)
   11514:	push	{r0}		; (str r0, [sp, #-4]!)
   11518:	ldr	ip, [pc, #16]	; 11530 <__assert_fail@plt+0x3c>
   1151c:	push	{ip}		; (str ip, [sp, #-4]!)
   11520:	ldr	r0, [pc, #12]	; 11534 <__assert_fail@plt+0x40>
   11524:	ldr	r3, [pc, #12]	; 11538 <__assert_fail@plt+0x44>
   11528:	bl	11314 <__libc_start_main@plt>
   1152c:	bl	114d0 <abort@plt>
   11530:	andeq	sp, r1, ip, lsl r2
   11534:	ldrdeq	r5, [r1], -ip
   11538:			; <UNDEFINED> instruction: 0x0001d1bc
   1153c:	ldr	r3, [pc, #20]	; 11558 <__assert_fail@plt+0x64>
   11540:	ldr	r2, [pc, #20]	; 1155c <__assert_fail@plt+0x68>
   11544:	add	r3, pc, r3
   11548:	ldr	r2, [r3, r2]
   1154c:	cmp	r2, #0
   11550:	bxeq	lr
   11554:	b	1132c <__gmon_start__@plt>
   11558:			; <UNDEFINED> instruction: 0x0001dab4
   1155c:	andeq	r0, r0, ip, asr #2
   11560:	ldr	r0, [pc, #24]	; 11580 <__assert_fail@plt+0x8c>
   11564:	ldr	r3, [pc, #24]	; 11584 <__assert_fail@plt+0x90>
   11568:	cmp	r3, r0
   1156c:	bxeq	lr
   11570:	ldr	r3, [pc, #16]	; 11588 <__assert_fail@plt+0x94>
   11574:	cmp	r3, #0
   11578:	bxeq	lr
   1157c:	bx	r3
   11580:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   11584:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   11588:	andeq	r0, r0, r0
   1158c:	ldr	r0, [pc, #36]	; 115b8 <__assert_fail@plt+0xc4>
   11590:	ldr	r1, [pc, #36]	; 115bc <__assert_fail@plt+0xc8>
   11594:	sub	r1, r1, r0
   11598:	asr	r1, r1, #2
   1159c:	add	r1, r1, r1, lsr #31
   115a0:	asrs	r1, r1, #1
   115a4:	bxeq	lr
   115a8:	ldr	r3, [pc, #16]	; 115c0 <__assert_fail@plt+0xcc>
   115ac:	cmp	r3, #0
   115b0:	bxeq	lr
   115b4:	bx	r3
   115b8:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   115bc:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   115c0:	andeq	r0, r0, r0
   115c4:	push	{r4, lr}
   115c8:	ldr	r4, [pc, #24]	; 115e8 <__assert_fail@plt+0xf4>
   115cc:	ldrb	r3, [r4]
   115d0:	cmp	r3, #0
   115d4:	popne	{r4, pc}
   115d8:	bl	11560 <__assert_fail@plt+0x6c>
   115dc:	mov	r3, #1
   115e0:	strb	r3, [r4]
   115e4:	pop	{r4, pc}
   115e8:	andeq	pc, r2, r4, ror r3	; <UNPREDICTABLE>
   115ec:	b	1158c <__assert_fail@plt+0x98>
   115f0:	push	{fp}		; (str fp, [sp, #-4]!)
   115f4:	add	fp, sp, #0
   115f8:	sub	sp, sp, #12
   115fc:	mov	r3, r0
   11600:	strb	r3, [fp, #-5]
   11604:	ldrb	r3, [fp, #-5]
   11608:	mov	r0, r3
   1160c:	add	sp, fp, #0
   11610:	pop	{fp}		; (ldr fp, [sp], #4)
   11614:	bx	lr
   11618:	str	fp, [sp, #-8]!
   1161c:	str	lr, [sp, #4]
   11620:	add	fp, sp, #4
   11624:	movw	r0, #53844	; 0xd254
   11628:	movt	r0, #1
   1162c:	bl	1135c <gettext@plt>
   11630:	mov	r2, r0
   11634:	movw	r3, #62316	; 0xf36c
   11638:	movt	r3, #2
   1163c:	ldr	r3, [r3]
   11640:	mov	r1, r3
   11644:	mov	r0, r2
   11648:	bl	11158 <fputs_unlocked@plt>
   1164c:	nop	{0}
   11650:	sub	sp, fp, #4
   11654:	ldr	fp, [sp]
   11658:	add	sp, sp, #4
   1165c:	pop	{pc}		; (ldr pc, [sp], #4)
   11660:	str	fp, [sp, #-8]!
   11664:	str	lr, [sp, #4]
   11668:	add	fp, sp, #4
   1166c:	movw	r0, #53900	; 0xd28c
   11670:	movt	r0, #1
   11674:	bl	1135c <gettext@plt>
   11678:	mov	r2, r0
   1167c:	movw	r3, #62316	; 0xf36c
   11680:	movt	r3, #2
   11684:	ldr	r3, [r3]
   11688:	mov	r1, r3
   1168c:	mov	r0, r2
   11690:	bl	11158 <fputs_unlocked@plt>
   11694:	nop	{0}
   11698:	sub	sp, fp, #4
   1169c:	ldr	fp, [sp]
   116a0:	add	sp, sp, #4
   116a4:	pop	{pc}		; (ldr pc, [sp], #4)
   116a8:	str	fp, [sp, #-8]!
   116ac:	str	lr, [sp, #4]
   116b0:	add	fp, sp, #4
   116b4:	movw	r0, #53976	; 0xd2d8
   116b8:	movt	r0, #1
   116bc:	bl	1135c <gettext@plt>
   116c0:	mov	r2, r0
   116c4:	movw	r3, #62316	; 0xf36c
   116c8:	movt	r3, #2
   116cc:	ldr	r3, [r3]
   116d0:	mov	r1, r3
   116d4:	mov	r0, r2
   116d8:	bl	11158 <fputs_unlocked@plt>
   116dc:	nop	{0}
   116e0:	sub	sp, fp, #4
   116e4:	ldr	fp, [sp]
   116e8:	add	sp, sp, #4
   116ec:	pop	{pc}		; (ldr pc, [sp], #4)
   116f0:	str	fp, [sp, #-8]!
   116f4:	str	lr, [sp, #4]
   116f8:	add	fp, sp, #4
   116fc:	sub	sp, sp, #80	; 0x50
   11700:	str	r0, [fp, #-80]	; 0xffffffb0
   11704:	movw	r2, #54560	; 0xd520
   11708:	movt	r2, #1
   1170c:	sub	r3, fp, #72	; 0x48
   11710:	ldrd	r0, [r2]
   11714:	strd	r0, [r3]
   11718:	ldrd	r0, [r2, #8]
   1171c:	strd	r0, [r3, #8]
   11720:	ldrd	r0, [r2, #16]
   11724:	strd	r0, [r3, #16]
   11728:	ldrd	r0, [r2, #24]
   1172c:	strd	r0, [r3, #24]
   11730:	ldrd	r0, [r2, #32]
   11734:	strd	r0, [r3, #32]
   11738:	ldrd	r0, [r2, #40]	; 0x28
   1173c:	strd	r0, [r3, #40]	; 0x28
   11740:	ldrd	r0, [r2, #48]	; 0x30
   11744:	strd	r0, [r3, #48]	; 0x30
   11748:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1174c:	str	r3, [fp, #-8]
   11750:	sub	r3, fp, #72	; 0x48
   11754:	str	r3, [fp, #-12]
   11758:	b	11768 <__assert_fail@plt+0x274>
   1175c:	ldr	r3, [fp, #-12]
   11760:	add	r3, r3, #8
   11764:	str	r3, [fp, #-12]
   11768:	ldr	r3, [fp, #-12]
   1176c:	ldr	r3, [r3]
   11770:	cmp	r3, #0
   11774:	beq	11798 <__assert_fail@plt+0x2a4>
   11778:	ldr	r3, [fp, #-12]
   1177c:	ldr	r3, [r3]
   11780:	mov	r1, r3
   11784:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11788:	bl	11170 <strcmp@plt>
   1178c:	mov	r3, r0
   11790:	cmp	r3, #0
   11794:	bne	1175c <__assert_fail@plt+0x268>
   11798:	ldr	r3, [fp, #-12]
   1179c:	ldr	r3, [r3, #4]
   117a0:	cmp	r3, #0
   117a4:	beq	117b4 <__assert_fail@plt+0x2c0>
   117a8:	ldr	r3, [fp, #-12]
   117ac:	ldr	r3, [r3, #4]
   117b0:	str	r3, [fp, #-8]
   117b4:	movw	r0, #54188	; 0xd3ac
   117b8:	movt	r0, #1
   117bc:	bl	1135c <gettext@plt>
   117c0:	mov	r3, r0
   117c4:	movw	r2, #54212	; 0xd3c4
   117c8:	movt	r2, #1
   117cc:	movw	r1, #54252	; 0xd3ec
   117d0:	movt	r1, #1
   117d4:	mov	r0, r3
   117d8:	bl	11188 <printf@plt>
   117dc:	mov	r1, #0
   117e0:	mov	r0, #5
   117e4:	bl	11440 <setlocale@plt>
   117e8:	str	r0, [fp, #-16]
   117ec:	ldr	r3, [fp, #-16]
   117f0:	cmp	r3, #0
   117f4:	beq	11840 <__assert_fail@plt+0x34c>
   117f8:	mov	r2, #3
   117fc:	movw	r1, #54268	; 0xd3fc
   11800:	movt	r1, #1
   11804:	ldr	r0, [fp, #-16]
   11808:	bl	114c4 <strncmp@plt>
   1180c:	mov	r3, r0
   11810:	cmp	r3, #0
   11814:	beq	11840 <__assert_fail@plt+0x34c>
   11818:	movw	r0, #54272	; 0xd400
   1181c:	movt	r0, #1
   11820:	bl	1135c <gettext@plt>
   11824:	mov	r2, r0
   11828:	movw	r3, #62316	; 0xf36c
   1182c:	movt	r3, #2
   11830:	ldr	r3, [r3]
   11834:	mov	r1, r3
   11838:	mov	r0, r2
   1183c:	bl	11158 <fputs_unlocked@plt>
   11840:	movw	r0, #54344	; 0xd448
   11844:	movt	r0, #1
   11848:	bl	1135c <gettext@plt>
   1184c:	mov	r3, r0
   11850:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11854:	movw	r1, #54212	; 0xd3c4
   11858:	movt	r1, #1
   1185c:	mov	r0, r3
   11860:	bl	11188 <printf@plt>
   11864:	movw	r0, #54372	; 0xd464
   11868:	movt	r0, #1
   1186c:	bl	1135c <gettext@plt>
   11870:	ldr	r2, [fp, #-8]
   11874:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11878:	cmp	r2, r3
   1187c:	bne	1188c <__assert_fail@plt+0x398>
   11880:	movw	r3, #54424	; 0xd498
   11884:	movt	r3, #1
   11888:	b	11894 <__assert_fail@plt+0x3a0>
   1188c:	movw	r3, #54436	; 0xd4a4
   11890:	movt	r3, #1
   11894:	mov	r2, r3
   11898:	ldr	r1, [fp, #-8]
   1189c:	bl	11188 <printf@plt>
   118a0:	nop	{0}
   118a4:	sub	sp, fp, #4
   118a8:	ldr	fp, [sp]
   118ac:	add	sp, sp, #4
   118b0:	pop	{pc}		; (ldr pc, [sp], #4)
   118b4:	push	{fp}		; (str fp, [sp, #-4]!)
   118b8:	add	fp, sp, #0
   118bc:	sub	sp, sp, #12
   118c0:	str	r0, [fp, #-8]
   118c4:	ldr	r3, [fp, #-8]
   118c8:	mov	r0, r3
   118cc:	add	sp, fp, #0
   118d0:	pop	{fp}		; (ldr fp, [sp], #4)
   118d4:	bx	lr
   118d8:	push	{fp}		; (str fp, [sp, #-4]!)
   118dc:	add	fp, sp, #0
   118e0:	sub	sp, sp, #12
   118e4:	str	r0, [fp, #-8]
   118e8:	ldr	r3, [fp, #-8]
   118ec:	ldr	r3, [r3, #16]
   118f0:	and	r3, r3, #61440	; 0xf000
   118f4:	cmp	r3, #32768	; 0x8000
   118f8:	beq	11910 <__assert_fail@plt+0x41c>
   118fc:	ldr	r3, [fp, #-8]
   11900:	ldr	r3, [r3, #16]
   11904:	and	r3, r3, #61440	; 0xf000
   11908:	cmp	r3, #40960	; 0xa000
   1190c:	bne	11918 <__assert_fail@plt+0x424>
   11910:	mov	r3, #1
   11914:	b	1191c <__assert_fail@plt+0x428>
   11918:	mov	r3, #0
   1191c:	and	r3, r3, #1
   11920:	uxtb	r3, r3
   11924:	mov	r0, r3
   11928:	add	sp, fp, #0
   1192c:	pop	{fp}		; (ldr fp, [sp], #4)
   11930:	bx	lr
   11934:	sub	sp, sp, #16
   11938:	push	{fp}		; (str fp, [sp, #-4]!)
   1193c:	add	fp, sp, #0
   11940:	add	ip, fp, #4
   11944:	stm	ip, {r0, r1, r2, r3}
   11948:	ldr	r3, [fp, #60]	; 0x3c
   1194c:	cmp	r3, #0
   11950:	ble	11990 <__assert_fail@plt+0x49c>
   11954:	ldr	r3, [fp, #60]	; 0x3c
   11958:	cmp	r3, #536870912	; 0x20000000
   1195c:	bhi	11990 <__assert_fail@plt+0x49c>
   11960:	ldr	r3, [fp, #60]	; 0x3c
   11964:	cmp	r3, #131072	; 0x20000
   11968:	blt	11990 <__assert_fail@plt+0x49c>
   1196c:	ldr	r3, [fp, #60]	; 0x3c
   11970:	cmp	r3, #0
   11974:	ble	11990 <__assert_fail@plt+0x49c>
   11978:	ldr	r3, [fp, #60]	; 0x3c
   1197c:	cmp	r3, #536870912	; 0x20000000
   11980:	bhi	11990 <__assert_fail@plt+0x49c>
   11984:	ldr	r3, [fp, #60]	; 0x3c
   11988:	cmp	r3, #1073741824	; 0x40000000
   1198c:	bhi	119e4 <__assert_fail@plt+0x4f0>
   11990:	ldr	r3, [fp, #60]	; 0x3c
   11994:	cmp	r3, #0
   11998:	ble	119dc <__assert_fail@plt+0x4e8>
   1199c:	ldr	r3, [fp, #60]	; 0x3c
   119a0:	cmp	r3, #536870912	; 0x20000000
   119a4:	bhi	119dc <__assert_fail@plt+0x4e8>
   119a8:	ldr	r3, [fp, #60]	; 0x3c
   119ac:	cmp	r3, #131072	; 0x20000
   119b0:	blt	119dc <__assert_fail@plt+0x4e8>
   119b4:	ldr	r3, [fp, #60]	; 0x3c
   119b8:	cmp	r3, #0
   119bc:	ble	119d4 <__assert_fail@plt+0x4e0>
   119c0:	ldr	r3, [fp, #60]	; 0x3c
   119c4:	cmp	r3, #536870912	; 0x20000000
   119c8:	bhi	119d4 <__assert_fail@plt+0x4e0>
   119cc:	ldr	r3, [fp, #60]	; 0x3c
   119d0:	b	119e8 <__assert_fail@plt+0x4f4>
   119d4:	mov	r3, #512	; 0x200
   119d8:	b	119e8 <__assert_fail@plt+0x4f4>
   119dc:	mov	r3, #131072	; 0x20000
   119e0:	b	119e8 <__assert_fail@plt+0x4f4>
   119e4:	mov	r3, #1073741824	; 0x40000000
   119e8:	mov	r0, r3
   119ec:	add	sp, fp, #0
   119f0:	pop	{fp}		; (ldr fp, [sp], #4)
   119f4:	add	sp, sp, #16
   119f8:	bx	lr
   119fc:	push	{fp}		; (str fp, [sp, #-4]!)
   11a00:	add	fp, sp, #0
   11a04:	sub	sp, sp, #12
   11a08:	str	r0, [fp, #-8]
   11a0c:	movw	r3, #62328	; 0xf378
   11a10:	movt	r3, #2
   11a14:	ldr	r3, [r3]
   11a18:	cmp	r3, #0
   11a1c:	beq	11a34 <__assert_fail@plt+0x540>
   11a20:	ldr	r3, [fp, #-8]
   11a24:	cmp	r3, #32
   11a28:	bne	11a34 <__assert_fail@plt+0x540>
   11a2c:	mov	r3, #1
   11a30:	b	11a38 <__assert_fail@plt+0x544>
   11a34:	mov	r3, #0
   11a38:	and	r3, r3, #1
   11a3c:	uxtb	r3, r3
   11a40:	mov	r0, r3
   11a44:	add	sp, fp, #0
   11a48:	pop	{fp}		; (ldr fp, [sp], #4)
   11a4c:	bx	lr
   11a50:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11a54:	strd	r6, [sp, #8]
   11a58:	strd	r8, [sp, #16]
   11a5c:	str	fp, [sp, #24]
   11a60:	str	lr, [sp, #28]
   11a64:	add	fp, sp, #28
   11a68:	sub	sp, sp, #64	; 0x40
   11a6c:	strd	r0, [fp, #-68]	; 0xffffffbc
   11a70:	str	r2, [fp, #-72]	; 0xffffffb8
   11a74:	mov	r2, #0
   11a78:	mov	r3, #0
   11a7c:	strd	r2, [fp, #-36]	; 0xffffffdc
   11a80:	movw	r3, #62620	; 0xf49c
   11a84:	movt	r3, #2
   11a88:	ldr	r3, [r3]
   11a8c:	cmp	r3, #0
   11a90:	beq	11aa4 <__assert_fail@plt+0x5b0>
   11a94:	movw	r3, #61784	; 0xf158
   11a98:	movt	r3, #2
   11a9c:	mov	r2, #0
   11aa0:	strb	r2, [r3]
   11aa4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11aa8:	cmp	r3, #5
   11aac:	beq	11ac8 <__assert_fail@plt+0x5d4>
   11ab0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11ab4:	cmp	r3, #6
   11ab8:	beq	11ac8 <__assert_fail@plt+0x5d4>
   11abc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11ac0:	cmp	r3, #7
   11ac4:	bne	11bdc <__assert_fail@plt+0x6e8>
   11ac8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   11acc:	subs	r1, r2, #1
   11ad0:	str	r1, [fp, #-84]	; 0xffffffac
   11ad4:	sbc	r3, r3, #0
   11ad8:	str	r3, [fp, #-80]	; 0xffffffb0
   11adc:	ldrd	r2, [fp, #-84]	; 0xffffffac
   11ae0:	strd	r2, [fp, #-44]	; 0xffffffd4
   11ae4:	movw	r3, #62620	; 0xf49c
   11ae8:	movt	r3, #2
   11aec:	ldr	r3, [r3]
   11af0:	cmp	r3, #0
   11af4:	beq	11b78 <__assert_fail@plt+0x684>
   11af8:	movw	r3, #62620	; 0xf49c
   11afc:	movt	r3, #2
   11b00:	ldr	r0, [r3]
   11b04:	sub	r2, fp, #60	; 0x3c
   11b08:	movw	r3, #54436	; 0xd4a4
   11b0c:	movt	r3, #1
   11b10:	str	r3, [sp]
   11b14:	mov	r3, r2
   11b18:	mov	r2, #10
   11b1c:	mov	r1, #0
   11b20:	bl	1b6b0 <__assert_fail@plt+0xa1bc>
   11b24:	str	r0, [fp, #-48]	; 0xffffffd0
   11b28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11b2c:	cmp	r3, #0
   11b30:	bne	11b78 <__assert_fail@plt+0x684>
   11b34:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   11b38:	mvn	r8, r2
   11b3c:	mvn	r9, r3
   11b40:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11b44:	cmp	r9, r3
   11b48:	cmpeq	r8, r2
   11b4c:	bcc	11b78 <__assert_fail@plt+0x684>
   11b50:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11b54:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   11b58:	cmp	r1, r3
   11b5c:	cmpeq	r0, r2
   11b60:	bls	11b78 <__assert_fail@plt+0x684>
   11b64:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11b68:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   11b6c:	adds	r6, r0, r2
   11b70:	adc	r7, r1, r3
   11b74:	strd	r6, [fp, #-44]	; 0xffffffd4
   11b78:	movw	r3, #61788	; 0xf15c
   11b7c:	movt	r3, #2
   11b80:	ldr	r3, [r3]
   11b84:	mov	r0, r3
   11b88:	bl	11368 <strlen@plt>
   11b8c:	str	r0, [fp, #-52]	; 0xffffffcc
   11b90:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   11b94:	adds	r4, r2, #1
   11b98:	adc	r5, r3, #0
   11b9c:	strd	r4, [fp, #-36]	; 0xffffffdc
   11ba0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11ba4:	mov	r2, r3
   11ba8:	mov	r3, #0
   11bac:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   11bb0:	bl	1d048 <__assert_fail@plt+0xbb54>
   11bb4:	mov	r2, r0
   11bb8:	mov	r3, r1
   11bbc:	strd	r2, [fp, #-44]	; 0xffffffd4
   11bc0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11bc4:	orrs	r3, r2, r3
   11bc8:	bne	11b90 <__assert_fail@plt+0x69c>
   11bcc:	movw	r3, #61784	; 0xf158
   11bd0:	movt	r3, #2
   11bd4:	mov	r2, #0
   11bd8:	strb	r2, [r3]
   11bdc:	movw	r3, #62616	; 0xf498
   11be0:	movt	r3, #2
   11be4:	ldr	r3, [r3]
   11be8:	cmp	r3, #0
   11bec:	beq	11c50 <__assert_fail@plt+0x75c>
   11bf0:	movw	r3, #62616	; 0xf498
   11bf4:	movt	r3, #2
   11bf8:	ldr	r3, [r3]
   11bfc:	mov	r2, r3
   11c00:	mov	r3, #0
   11c04:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11c08:	cmp	r1, r3
   11c0c:	cmpeq	r0, r2
   11c10:	bls	11c3c <__assert_fail@plt+0x748>
   11c14:	movw	r0, #55112	; 0xd748
   11c18:	movt	r0, #1
   11c1c:	bl	1135c <gettext@plt>
   11c20:	mov	r1, r0
   11c24:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   11c28:	strd	r2, [sp]
   11c2c:	mov	r2, r1
   11c30:	mov	r1, #0
   11c34:	mov	r0, #1
   11c38:	bl	112d8 <error@plt>
   11c3c:	movw	r3, #61784	; 0xf158
   11c40:	movt	r3, #2
   11c44:	mov	r2, #0
   11c48:	strb	r2, [r3]
   11c4c:	b	11c74 <__assert_fail@plt+0x780>
   11c50:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   11c54:	cmp	r3, #0
   11c58:	cmpeq	r2, #2
   11c5c:	bcs	11c68 <__assert_fail@plt+0x774>
   11c60:	mov	r2, #2
   11c64:	mov	r3, #0
   11c68:	movw	r3, #62616	; 0xf498
   11c6c:	movt	r3, #2
   11c70:	str	r2, [r3]
   11c74:	sub	sp, fp, #28
   11c78:	ldrd	r4, [sp]
   11c7c:	ldrd	r6, [sp, #8]
   11c80:	ldrd	r8, [sp, #16]
   11c84:	ldr	fp, [sp, #24]
   11c88:	add	sp, sp, #28
   11c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   11c90:	str	r4, [sp, #-12]!
   11c94:	str	fp, [sp, #4]
   11c98:	str	lr, [sp, #8]
   11c9c:	add	fp, sp, #8
   11ca0:	sub	sp, sp, #12
   11ca4:	str	r0, [fp, #-16]
   11ca8:	ldr	r3, [fp, #-16]
   11cac:	cmp	r3, #0
   11cb0:	beq	11cec <__assert_fail@plt+0x7f8>
   11cb4:	movw	r3, #62312	; 0xf368
   11cb8:	movt	r3, #2
   11cbc:	ldr	r4, [r3]
   11cc0:	movw	r0, #55156	; 0xd774
   11cc4:	movt	r0, #1
   11cc8:	bl	1135c <gettext@plt>
   11ccc:	mov	r1, r0
   11cd0:	movw	r3, #62764	; 0xf52c
   11cd4:	movt	r3, #2
   11cd8:	ldr	r3, [r3]
   11cdc:	mov	r2, r3
   11ce0:	mov	r0, r4
   11ce4:	bl	113a4 <fprintf@plt>
   11ce8:	b	11e20 <__assert_fail@plt+0x92c>
   11cec:	movw	r0, #55196	; 0xd79c
   11cf0:	movt	r0, #1
   11cf4:	bl	1135c <gettext@plt>
   11cf8:	mov	r2, r0
   11cfc:	movw	r3, #62764	; 0xf52c
   11d00:	movt	r3, #2
   11d04:	ldr	r3, [r3]
   11d08:	mov	r1, r3
   11d0c:	mov	r0, r2
   11d10:	bl	11188 <printf@plt>
   11d14:	movw	r0, #55236	; 0xd7c4
   11d18:	movt	r0, #1
   11d1c:	bl	1135c <gettext@plt>
   11d20:	mov	r2, r0
   11d24:	movw	r3, #62316	; 0xf36c
   11d28:	movt	r3, #2
   11d2c:	ldr	r3, [r3]
   11d30:	mov	r1, r3
   11d34:	mov	r0, r2
   11d38:	bl	11158 <fputs_unlocked@plt>
   11d3c:	bl	11618 <__assert_fail@plt+0x124>
   11d40:	bl	11660 <__assert_fail@plt+0x16c>
   11d44:	movw	r3, #62316	; 0xf36c
   11d48:	movt	r3, #2
   11d4c:	ldr	r4, [r3]
   11d50:	movw	r0, #55344	; 0xd830
   11d54:	movt	r0, #1
   11d58:	bl	1135c <gettext@plt>
   11d5c:	mov	r3, r0
   11d60:	mov	r2, #2
   11d64:	mov	r1, r3
   11d68:	mov	r0, r4
   11d6c:	bl	113a4 <fprintf@plt>
   11d70:	movw	r0, #56436	; 0xdc74
   11d74:	movt	r0, #1
   11d78:	bl	1135c <gettext@plt>
   11d7c:	mov	r2, r0
   11d80:	movw	r3, #62316	; 0xf36c
   11d84:	movt	r3, #2
   11d88:	ldr	r3, [r3]
   11d8c:	mov	r1, r3
   11d90:	mov	r0, r2
   11d94:	bl	11158 <fputs_unlocked@plt>
   11d98:	movw	r0, #56552	; 0xdce8
   11d9c:	movt	r0, #1
   11da0:	bl	1135c <gettext@plt>
   11da4:	mov	r2, r0
   11da8:	movw	r3, #62316	; 0xf36c
   11dac:	movt	r3, #2
   11db0:	ldr	r3, [r3]
   11db4:	mov	r1, r3
   11db8:	mov	r0, r2
   11dbc:	bl	11158 <fputs_unlocked@plt>
   11dc0:	movw	r0, #56600	; 0xdd18
   11dc4:	movt	r0, #1
   11dc8:	bl	1135c <gettext@plt>
   11dcc:	mov	r2, r0
   11dd0:	movw	r3, #62316	; 0xf36c
   11dd4:	movt	r3, #2
   11dd8:	ldr	r3, [r3]
   11ddc:	mov	r1, r3
   11de0:	mov	r0, r2
   11de4:	bl	11158 <fputs_unlocked@plt>
   11de8:	bl	116a8 <__assert_fail@plt+0x1b4>
   11dec:	movw	r0, #56656	; 0xdd50
   11df0:	movt	r0, #1
   11df4:	bl	1135c <gettext@plt>
   11df8:	mov	r2, r0
   11dfc:	movw	r3, #62316	; 0xf36c
   11e00:	movt	r3, #2
   11e04:	ldr	r3, [r3]
   11e08:	mov	r1, r3
   11e0c:	mov	r0, r2
   11e10:	bl	11158 <fputs_unlocked@plt>
   11e14:	movw	r0, #56996	; 0xdea4
   11e18:	movt	r0, #1
   11e1c:	bl	116f0 <__assert_fail@plt+0x1fc>
   11e20:	ldr	r0, [fp, #-16]
   11e24:	bl	11350 <exit@plt>
   11e28:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11e2c:	strd	r6, [sp, #8]
   11e30:	strd	r8, [sp, #16]
   11e34:	str	fp, [sp, #24]
   11e38:	str	lr, [sp, #28]
   11e3c:	add	fp, sp, #28
   11e40:	sub	sp, sp, #64	; 0x40
   11e44:	str	r0, [fp, #-64]	; 0xffffffc0
   11e48:	str	r1, [fp, #-68]	; 0xffffffbc
   11e4c:	str	r2, [fp, #-72]	; 0xffffffb8
   11e50:	str	r3, [fp, #-76]	; 0xffffffb4
   11e54:	mov	r3, #1
   11e58:	str	r3, [sp]
   11e5c:	mov	r2, #0
   11e60:	mov	r3, #0
   11e64:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11e68:	bl	11284 <lseek64@plt>
   11e6c:	strd	r0, [fp, #-52]	; 0xffffffcc
   11e70:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11e74:	cmp	r2, #0
   11e78:	sbcs	r3, r3, #0
   11e7c:	bge	11eb0 <__assert_fail@plt+0x9bc>
   11e80:	bl	113bc <__errno_location@plt>
   11e84:	mov	r3, r0
   11e88:	ldr	r3, [r3]
   11e8c:	cmp	r3, #29
   11e90:	bne	11ea4 <__assert_fail@plt+0x9b0>
   11e94:	bl	113bc <__errno_location@plt>
   11e98:	mov	r2, r0
   11e9c:	mov	r3, #0
   11ea0:	str	r3, [r2]
   11ea4:	mvn	r2, #0
   11ea8:	mvn	r3, #0
   11eac:	b	120c4 <__assert_fail@plt+0xbd0>
   11eb0:	mov	r2, #0
   11eb4:	mov	r3, #0
   11eb8:	strd	r2, [fp, #-36]	; 0xffffffdc
   11ebc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11ec0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11ec4:	add	r1, r2, r3
   11ec8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11ecc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11ed0:	sub	r3, r2, r3
   11ed4:	mov	r2, r3
   11ed8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11edc:	bl	19a94 <__assert_fail@plt+0x85a0>
   11ee0:	str	r0, [fp, #-56]	; 0xffffffc8
   11ee4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11ee8:	cmp	r3, #0
   11eec:	bne	11ef8 <__assert_fail@plt+0xa04>
   11ef0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   11ef4:	b	120c4 <__assert_fail@plt+0xbd0>
   11ef8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11efc:	cmn	r3, #1
   11f00:	bne	11f10 <__assert_fail@plt+0xa1c>
   11f04:	mvn	r2, #0
   11f08:	mvn	r3, #0
   11f0c:	b	120c4 <__assert_fail@plt+0xbd0>
   11f10:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11f14:	mov	r2, r3
   11f18:	mov	r3, #0
   11f1c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11f20:	adds	ip, r0, r2
   11f24:	str	ip, [fp, #-84]	; 0xffffffac
   11f28:	adc	r3, r1, r3
   11f2c:	str	r3, [fp, #-80]	; 0xffffffb0
   11f30:	ldrd	r2, [fp, #-84]	; 0xffffffac
   11f34:	strd	r2, [fp, #-36]	; 0xffffffdc
   11f38:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11f3c:	mov	r2, r3
   11f40:	mov	r3, #0
   11f44:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11f48:	cmp	r0, r2
   11f4c:	sbcs	r3, r1, r3
   11f50:	blt	11ebc <__assert_fail@plt+0x9c8>
   11f54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11f58:	ldrd	r2, [r3, #48]	; 0x30
   11f5c:	orrs	r3, r2, r3
   11f60:	bne	11f80 <__assert_fail@plt+0xa8c>
   11f64:	bl	113bc <__errno_location@plt>
   11f68:	mov	r2, r0
   11f6c:	mov	r3, #75	; 0x4b
   11f70:	str	r3, [r2]
   11f74:	mvn	r2, #0
   11f78:	mvn	r3, #0
   11f7c:	b	120c4 <__assert_fail@plt+0xbd0>
   11f80:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   11f84:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   11f88:	adds	r8, r0, r2
   11f8c:	adc	r9, r1, r3
   11f90:	strd	r8, [fp, #-52]	; 0xffffffcc
   11f94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11f98:	bl	118d8 <__assert_fail@plt+0x3e4>
   11f9c:	mov	r3, r0
   11fa0:	cmp	r3, #0
   11fa4:	beq	11fd0 <__assert_fail@plt+0xadc>
   11fa8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11fac:	ldrd	r0, [r3, #48]	; 0x30
   11fb0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11fb4:	cmp	r0, r2
   11fb8:	sbcs	r3, r1, r3
   11fbc:	blt	11fd0 <__assert_fail@plt+0xadc>
   11fc0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11fc4:	ldrd	r2, [r3, #48]	; 0x30
   11fc8:	strd	r2, [fp, #-44]	; 0xffffffd4
   11fcc:	b	1206c <__assert_fail@plt+0xb78>
   11fd0:	mov	r3, #2
   11fd4:	str	r3, [sp]
   11fd8:	mov	r2, #0
   11fdc:	mov	r3, #0
   11fe0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11fe4:	bl	11284 <lseek64@plt>
   11fe8:	strd	r0, [fp, #-44]	; 0xffffffd4
   11fec:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11ff0:	cmp	r2, #0
   11ff4:	sbcs	r3, r3, #0
   11ff8:	bge	12008 <__assert_fail@plt+0xb14>
   11ffc:	mvn	r2, #0
   12000:	mvn	r3, #0
   12004:	b	120c4 <__assert_fail@plt+0xbd0>
   12008:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1200c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   12010:	cmp	r1, r3
   12014:	cmpeq	r0, r2
   12018:	beq	1206c <__assert_fail@plt+0xb78>
   1201c:	mov	r3, #0
   12020:	str	r3, [sp]
   12024:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   12028:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1202c:	bl	11284 <lseek64@plt>
   12030:	mov	r2, r0
   12034:	mov	r3, r1
   12038:	cmp	r2, #0
   1203c:	sbcs	r3, r3, #0
   12040:	bge	12050 <__assert_fail@plt+0xb5c>
   12044:	mvn	r2, #0
   12048:	mvn	r3, #0
   1204c:	b	120c4 <__assert_fail@plt+0xbd0>
   12050:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   12054:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   12058:	cmp	r0, r2
   1205c:	sbcs	r3, r1, r3
   12060:	bge	1206c <__assert_fail@plt+0xb78>
   12064:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   12068:	strd	r2, [fp, #-44]	; 0xffffffd4
   1206c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   12070:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   12074:	subs	r4, r0, r2
   12078:	sbc	r5, r1, r3
   1207c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   12080:	adds	r6, r2, r4
   12084:	adc	r7, r3, r5
   12088:	strd	r6, [fp, #-36]	; 0xffffffdc
   1208c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   12090:	mvn	r0, #0
   12094:	mvn	r1, #-2147483648	; 0x80000000
   12098:	cmp	r3, r1
   1209c:	cmpeq	r2, r0
   120a0:	bne	120c0 <__assert_fail@plt+0xbcc>
   120a4:	bl	113bc <__errno_location@plt>
   120a8:	mov	r2, r0
   120ac:	mov	r3, #75	; 0x4b
   120b0:	str	r3, [r2]
   120b4:	mvn	r2, #0
   120b8:	mvn	r3, #0
   120bc:	b	120c4 <__assert_fail@plt+0xbd0>
   120c0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   120c4:	mov	r0, r2
   120c8:	mov	r1, r3
   120cc:	sub	sp, fp, #28
   120d0:	ldrd	r4, [sp]
   120d4:	ldrd	r6, [sp, #8]
   120d8:	ldrd	r8, [sp, #16]
   120dc:	ldr	fp, [sp, #24]
   120e0:	add	sp, sp, #28
   120e4:	pop	{pc}		; (ldr pc, [sp], #4)
   120e8:	str	fp, [sp, #-8]!
   120ec:	str	lr, [sp, #4]
   120f0:	add	fp, sp, #4
   120f4:	sub	sp, sp, #16
   120f8:	movw	r3, #62608	; 0xf490
   120fc:	movt	r3, #2
   12100:	ldr	r3, [r3]
   12104:	cmp	r3, #0
   12108:	bne	12540 <__assert_fail@plt+0x104c>
   1210c:	nop	{0}
   12110:	b	12118 <__assert_fail@plt+0xc24>
   12114:	nop	{0}
   12118:	movw	r3, #62740	; 0xf514
   1211c:	movt	r3, #2
   12120:	ldr	r3, [r3]
   12124:	cmp	r3, #0
   12128:	movne	r3, #1
   1212c:	moveq	r3, #0
   12130:	strb	r3, [fp, #-17]	; 0xffffffef
   12134:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12138:	eor	r3, r3, #1
   1213c:	uxtb	r3, r3
   12140:	cmp	r3, #0
   12144:	beq	121e8 <__assert_fail@plt+0xcf4>
   12148:	movw	r3, #62604	; 0xf48c
   1214c:	movt	r3, #2
   12150:	ldr	r3, [r3]
   12154:	mov	r0, r3
   12158:	bl	11368 <strlen@plt>
   1215c:	mov	r2, r0
   12160:	movw	r3, #62744	; 0xf518
   12164:	movt	r3, #2
   12168:	str	r2, [r3]
   1216c:	movw	r3, #62624	; 0xf4a0
   12170:	movt	r3, #2
   12174:	ldr	r3, [r3]
   12178:	cmp	r3, #0
   1217c:	beq	1219c <__assert_fail@plt+0xca8>
   12180:	movw	r3, #62624	; 0xf4a0
   12184:	movt	r3, #2
   12188:	ldr	r3, [r3]
   1218c:	mov	r0, r3
   12190:	bl	11368 <strlen@plt>
   12194:	mov	r2, r0
   12198:	b	121a0 <__assert_fail@plt+0xcac>
   1219c:	mov	r2, #0
   121a0:	movw	r3, #62748	; 0xf51c
   121a4:	movt	r3, #2
   121a8:	str	r2, [r3]
   121ac:	movw	r3, #62744	; 0xf518
   121b0:	movt	r3, #2
   121b4:	ldr	r2, [r3]
   121b8:	movw	r3, #62616	; 0xf498
   121bc:	movt	r3, #2
   121c0:	ldr	r3, [r3]
   121c4:	add	r2, r2, r3
   121c8:	movw	r3, #62748	; 0xf51c
   121cc:	movt	r3, #2
   121d0:	ldr	r3, [r3]
   121d4:	add	r2, r2, r3
   121d8:	movw	r3, #62740	; 0xf514
   121dc:	movt	r3, #2
   121e0:	str	r2, [r3]
   121e4:	b	12220 <__assert_fail@plt+0xd2c>
   121e8:	movw	r3, #62740	; 0xf514
   121ec:	movt	r3, #2
   121f0:	ldr	r3, [r3]
   121f4:	add	r2, r3, #2
   121f8:	movw	r3, #62740	; 0xf514
   121fc:	movt	r3, #2
   12200:	str	r2, [r3]
   12204:	movw	r3, #62616	; 0xf498
   12208:	movt	r3, #2
   1220c:	ldr	r3, [r3]
   12210:	add	r2, r3, #1
   12214:	movw	r3, #62616	; 0xf498
   12218:	movt	r3, #2
   1221c:	str	r2, [r3]
   12220:	movw	r3, #62740	; 0xf514
   12224:	movt	r3, #2
   12228:	ldr	r3, [r3]
   1222c:	add	r2, r3, #1
   12230:	movw	r3, #62744	; 0xf518
   12234:	movt	r3, #2
   12238:	ldr	r3, [r3]
   1223c:	cmp	r2, r3
   12240:	bcs	12248 <__assert_fail@plt+0xd54>
   12244:	bl	1b1c8 <__assert_fail@plt+0x9cd4>
   12248:	movw	r3, #62608	; 0xf490
   1224c:	movt	r3, #2
   12250:	ldr	r2, [r3]
   12254:	movw	r3, #62740	; 0xf514
   12258:	movt	r3, #2
   1225c:	ldr	r3, [r3]
   12260:	add	r3, r3, #1
   12264:	mov	r1, r3
   12268:	mov	r0, r2
   1226c:	bl	1aa08 <__assert_fail@plt+0x9514>
   12270:	mov	r2, r0
   12274:	movw	r3, #62608	; 0xf490
   12278:	movt	r3, #2
   1227c:	str	r2, [r3]
   12280:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12284:	eor	r3, r3, #1
   12288:	uxtb	r3, r3
   1228c:	cmp	r3, #0
   12290:	beq	122c4 <__assert_fail@plt+0xdd0>
   12294:	movw	r3, #62608	; 0xf490
   12298:	movt	r3, #2
   1229c:	ldr	r0, [r3]
   122a0:	movw	r3, #62604	; 0xf48c
   122a4:	movt	r3, #2
   122a8:	ldr	r1, [r3]
   122ac:	movw	r3, #62744	; 0xf518
   122b0:	movt	r3, #2
   122b4:	ldr	r3, [r3]
   122b8:	mov	r2, r3
   122bc:	bl	111dc <memcpy@plt>
   122c0:	b	12324 <__assert_fail@plt+0xe30>
   122c4:	movw	r3, #61788	; 0xf15c
   122c8:	movt	r3, #2
   122cc:	ldr	r2, [r3]
   122d0:	movw	r3, #62752	; 0xf520
   122d4:	movt	r3, #2
   122d8:	ldr	r3, [r3]
   122dc:	ldr	r3, [r3]
   122e0:	add	r2, r2, r3
   122e4:	movw	r3, #62608	; 0xf490
   122e8:	movt	r3, #2
   122ec:	ldr	r1, [r3]
   122f0:	movw	r3, #62744	; 0xf518
   122f4:	movt	r3, #2
   122f8:	ldr	r3, [r3]
   122fc:	add	r3, r1, r3
   12300:	ldrb	r2, [r2]
   12304:	strb	r2, [r3]
   12308:	movw	r3, #62744	; 0xf518
   1230c:	movt	r3, #2
   12310:	ldr	r3, [r3]
   12314:	add	r2, r3, #1
   12318:	movw	r3, #62744	; 0xf518
   1231c:	movt	r3, #2
   12320:	str	r2, [r3]
   12324:	movw	r3, #62608	; 0xf490
   12328:	movt	r3, #2
   1232c:	ldr	r2, [r3]
   12330:	movw	r3, #62744	; 0xf518
   12334:	movt	r3, #2
   12338:	ldr	r3, [r3]
   1233c:	add	r2, r2, r3
   12340:	movw	r3, #62612	; 0xf494
   12344:	movt	r3, #2
   12348:	str	r2, [r3]
   1234c:	movw	r3, #62612	; 0xf494
   12350:	movt	r3, #2
   12354:	ldr	r0, [r3]
   12358:	movw	r3, #61788	; 0xf15c
   1235c:	movt	r3, #2
   12360:	ldr	r3, [r3]
   12364:	ldrb	r3, [r3]
   12368:	mov	r1, r3
   1236c:	movw	r3, #62616	; 0xf498
   12370:	movt	r3, #2
   12374:	ldr	r3, [r3]
   12378:	mov	r2, r3
   1237c:	bl	113d4 <memset@plt>
   12380:	movw	r3, #62624	; 0xf4a0
   12384:	movt	r3, #2
   12388:	ldr	r3, [r3]
   1238c:	cmp	r3, #0
   12390:	beq	123d0 <__assert_fail@plt+0xedc>
   12394:	movw	r3, #62612	; 0xf494
   12398:	movt	r3, #2
   1239c:	ldr	r2, [r3]
   123a0:	movw	r3, #62616	; 0xf498
   123a4:	movt	r3, #2
   123a8:	ldr	r3, [r3]
   123ac:	add	r0, r2, r3
   123b0:	movw	r3, #62624	; 0xf4a0
   123b4:	movt	r3, #2
   123b8:	ldr	r1, [r3]
   123bc:	movw	r3, #62748	; 0xf51c
   123c0:	movt	r3, #2
   123c4:	ldr	r3, [r3]
   123c8:	mov	r2, r3
   123cc:	bl	111dc <memcpy@plt>
   123d0:	movw	r3, #62608	; 0xf490
   123d4:	movt	r3, #2
   123d8:	ldr	r2, [r3]
   123dc:	movw	r3, #62740	; 0xf514
   123e0:	movt	r3, #2
   123e4:	ldr	r3, [r3]
   123e8:	add	r3, r2, r3
   123ec:	mov	r2, #0
   123f0:	strb	r2, [r3]
   123f4:	movw	r3, #62752	; 0xf520
   123f8:	movt	r3, #2
   123fc:	ldr	r3, [r3]
   12400:	mov	r0, r3
   12404:	bl	16dfc <__assert_fail@plt+0x5908>
   12408:	movw	r3, #62616	; 0xf498
   1240c:	movt	r3, #2
   12410:	ldr	r3, [r3]
   12414:	mov	r1, #4
   12418:	mov	r0, r3
   1241c:	bl	1afe4 <__assert_fail@plt+0x9af0>
   12420:	mov	r3, r0
   12424:	mov	r2, r3
   12428:	movw	r3, #62752	; 0xf520
   1242c:	movt	r3, #2
   12430:	str	r2, [r3]
   12434:	movw	r3, #62620	; 0xf49c
   12438:	movt	r3, #2
   1243c:	ldr	r3, [r3]
   12440:	cmp	r3, #0
   12444:	beq	126d0 <__assert_fail@plt+0x11dc>
   12448:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1244c:	eor	r3, r3, #1
   12450:	uxtb	r3, r3
   12454:	cmp	r3, #0
   12458:	bne	1247c <__assert_fail@plt+0xf88>
   1245c:	movw	r3, #58500	; 0xe484
   12460:	movt	r3, #1
   12464:	movw	r2, #409	; 0x199
   12468:	movw	r1, #57004	; 0xdeac
   1246c:	movt	r1, #1
   12470:	movw	r0, #57016	; 0xdeb8
   12474:	movt	r0, #1
   12478:	bl	114f4 <__assert_fail@plt>
   1247c:	movw	r3, #62620	; 0xf49c
   12480:	movt	r3, #2
   12484:	ldr	r3, [r3]
   12488:	mov	r0, r3
   1248c:	bl	11368 <strlen@plt>
   12490:	str	r0, [fp, #-8]
   12494:	movw	r3, #62612	; 0xf494
   12498:	movt	r3, #2
   1249c:	ldr	r2, [r3]
   124a0:	movw	r3, #62616	; 0xf498
   124a4:	movt	r3, #2
   124a8:	ldr	r1, [r3]
   124ac:	ldr	r3, [fp, #-8]
   124b0:	sub	r3, r1, r3
   124b4:	add	r0, r2, r3
   124b8:	movw	r3, #62620	; 0xf49c
   124bc:	movt	r3, #2
   124c0:	ldr	r3, [r3]
   124c4:	ldr	r2, [fp, #-8]
   124c8:	mov	r1, r3
   124cc:	bl	111dc <memcpy@plt>
   124d0:	movw	r3, #62752	; 0xf520
   124d4:	movt	r3, #2
   124d8:	ldr	r2, [r3]
   124dc:	movw	r3, #62616	; 0xf498
   124e0:	movt	r3, #2
   124e4:	ldr	r3, [r3]
   124e8:	lsl	r3, r3, #2
   124ec:	add	r3, r2, r3
   124f0:	str	r3, [fp, #-12]
   124f4:	b	12528 <__assert_fail@plt+0x1034>
   124f8:	movw	r3, #62620	; 0xf49c
   124fc:	movt	r3, #2
   12500:	ldr	r2, [r3]
   12504:	ldr	r3, [fp, #-8]
   12508:	add	r3, r2, r3
   1250c:	ldrb	r3, [r3]
   12510:	sub	r2, r3, #48	; 0x30
   12514:	ldr	r3, [fp, #-12]
   12518:	sub	r3, r3, #4
   1251c:	str	r3, [fp, #-12]
   12520:	ldr	r3, [fp, #-12]
   12524:	str	r2, [r3]
   12528:	ldr	r3, [fp, #-8]
   1252c:	sub	r2, r3, #1
   12530:	str	r2, [fp, #-8]
   12534:	cmp	r3, #0
   12538:	bne	124f8 <__assert_fail@plt+0x1004>
   1253c:	b	126d0 <__assert_fail@plt+0x11dc>
   12540:	movw	r3, #62616	; 0xf498
   12544:	movt	r3, #2
   12548:	ldr	r3, [r3]
   1254c:	str	r3, [fp, #-16]
   12550:	b	12698 <__assert_fail@plt+0x11a4>
   12554:	movw	r3, #62752	; 0xf520
   12558:	movt	r3, #2
   1255c:	ldr	r2, [r3]
   12560:	ldr	r3, [fp, #-16]
   12564:	lsl	r3, r3, #2
   12568:	add	r3, r2, r3
   1256c:	ldr	r2, [r3]
   12570:	add	r2, r2, #1
   12574:	str	r2, [r3]
   12578:	movw	r3, #61784	; 0xf158
   1257c:	movt	r3, #2
   12580:	ldrb	r3, [r3]
   12584:	cmp	r3, #0
   12588:	beq	125c8 <__assert_fail@plt+0x10d4>
   1258c:	ldr	r3, [fp, #-16]
   12590:	cmp	r3, #0
   12594:	bne	125c8 <__assert_fail@plt+0x10d4>
   12598:	movw	r3, #61788	; 0xf15c
   1259c:	movt	r3, #2
   125a0:	ldr	r2, [r3]
   125a4:	movw	r3, #62752	; 0xf520
   125a8:	movt	r3, #2
   125ac:	ldr	r3, [r3]
   125b0:	ldr	r3, [r3]
   125b4:	add	r3, r3, #1
   125b8:	add	r3, r2, r3
   125bc:	ldrb	r3, [r3]
   125c0:	cmp	r3, #0
   125c4:	beq	12114 <__assert_fail@plt+0xc20>
   125c8:	movw	r3, #61788	; 0xf15c
   125cc:	movt	r3, #2
   125d0:	ldr	r2, [r3]
   125d4:	movw	r3, #62752	; 0xf520
   125d8:	movt	r3, #2
   125dc:	ldr	r1, [r3]
   125e0:	ldr	r3, [fp, #-16]
   125e4:	lsl	r3, r3, #2
   125e8:	add	r3, r1, r3
   125ec:	ldr	r3, [r3]
   125f0:	add	r2, r2, r3
   125f4:	movw	r3, #62612	; 0xf494
   125f8:	movt	r3, #2
   125fc:	ldr	r1, [r3]
   12600:	ldr	r3, [fp, #-16]
   12604:	add	r3, r1, r3
   12608:	ldrb	r2, [r2]
   1260c:	strb	r2, [r3]
   12610:	movw	r3, #62612	; 0xf494
   12614:	movt	r3, #2
   12618:	ldr	r2, [r3]
   1261c:	ldr	r3, [fp, #-16]
   12620:	add	r3, r2, r3
   12624:	ldrb	r3, [r3]
   12628:	cmp	r3, #0
   1262c:	bne	126cc <__assert_fail@plt+0x11d8>
   12630:	movw	r3, #62752	; 0xf520
   12634:	movt	r3, #2
   12638:	ldr	r2, [r3]
   1263c:	ldr	r3, [fp, #-16]
   12640:	lsl	r3, r3, #2
   12644:	add	r3, r2, r3
   12648:	mov	r2, #0
   1264c:	str	r2, [r3]
   12650:	movw	r3, #61788	; 0xf15c
   12654:	movt	r3, #2
   12658:	ldr	r2, [r3]
   1265c:	movw	r3, #62752	; 0xf520
   12660:	movt	r3, #2
   12664:	ldr	r1, [r3]
   12668:	ldr	r3, [fp, #-16]
   1266c:	lsl	r3, r3, #2
   12670:	add	r3, r1, r3
   12674:	ldr	r3, [r3]
   12678:	add	r2, r2, r3
   1267c:	movw	r3, #62612	; 0xf494
   12680:	movt	r3, #2
   12684:	ldr	r1, [r3]
   12688:	ldr	r3, [fp, #-16]
   1268c:	add	r3, r1, r3
   12690:	ldrb	r2, [r2]
   12694:	strb	r2, [r3]
   12698:	ldr	r3, [fp, #-16]
   1269c:	sub	r2, r3, #1
   126a0:	str	r2, [fp, #-16]
   126a4:	cmp	r3, #0
   126a8:	bne	12554 <__assert_fail@plt+0x1060>
   126ac:	movw	r0, #57024	; 0xdec0
   126b0:	movt	r0, #1
   126b4:	bl	1135c <gettext@plt>
   126b8:	mov	r3, r0
   126bc:	mov	r2, r3
   126c0:	mov	r1, #0
   126c4:	mov	r0, #1
   126c8:	bl	112d8 <error@plt>
   126cc:	nop	{0}
   126d0:	sub	sp, fp, #4
   126d4:	ldr	fp, [sp]
   126d8:	add	sp, sp, #4
   126dc:	pop	{pc}		; (ldr pc, [sp], #4)
   126e0:	strd	r4, [sp, #-16]!
   126e4:	str	fp, [sp, #8]
   126e8:	str	lr, [sp, #12]
   126ec:	add	fp, sp, #12
   126f0:	sub	sp, sp, #144	; 0x90
   126f4:	str	r0, [fp, #-144]	; 0xffffff70
   126f8:	movw	r3, #62328	; 0xf378
   126fc:	movt	r3, #2
   12700:	ldr	r3, [r3]
   12704:	cmp	r3, #0
   12708:	bne	128b8 <__assert_fail@plt+0x13c4>
   1270c:	movw	r3, #62736	; 0xf510
   12710:	movt	r3, #2
   12714:	ldrb	r3, [r3]
   12718:	cmp	r3, #0
   1271c:	beq	1275c <__assert_fail@plt+0x1268>
   12720:	movw	r3, #62316	; 0xf36c
   12724:	movt	r3, #2
   12728:	ldr	r4, [r3]
   1272c:	movw	r0, #57056	; 0xdee0
   12730:	movt	r0, #1
   12734:	bl	1135c <gettext@plt>
   12738:	mov	r5, r0
   1273c:	ldr	r1, [fp, #-144]	; 0xffffff70
   12740:	mov	r0, #4
   12744:	bl	1957c <__assert_fail@plt+0x8088>
   12748:	mov	r3, r0
   1274c:	mov	r2, r3
   12750:	mov	r1, r5
   12754:	mov	r0, r4
   12758:	bl	113a4 <fprintf@plt>
   1275c:	movw	r2, #438	; 0x1b6
   12760:	mov	r1, #65	; 0x41
   12764:	ldr	r0, [fp, #-144]	; 0xffffff70
   12768:	bl	16c0c <__assert_fail@plt+0x5718>
   1276c:	str	r0, [fp, #-24]	; 0xffffffe8
   12770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12774:	cmp	r3, #0
   12778:	bge	12784 <__assert_fail@plt+0x1290>
   1277c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12780:	b	12ce0 <__assert_fail@plt+0x17ec>
   12784:	sub	r3, fp, #140	; 0x8c
   12788:	mov	r1, r3
   1278c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12790:	bl	1d238 <__assert_fail@plt+0xbd44>
   12794:	mov	r3, r0
   12798:	cmp	r3, #0
   1279c:	beq	127dc <__assert_fail@plt+0x12e8>
   127a0:	bl	113bc <__errno_location@plt>
   127a4:	mov	r3, r0
   127a8:	ldr	r4, [r3]
   127ac:	movw	r0, #57076	; 0xdef4
   127b0:	movt	r0, #1
   127b4:	bl	1135c <gettext@plt>
   127b8:	mov	r5, r0
   127bc:	ldr	r1, [fp, #-144]	; 0xffffff70
   127c0:	mov	r0, #4
   127c4:	bl	1957c <__assert_fail@plt+0x8088>
   127c8:	mov	r3, r0
   127cc:	mov	r2, r5
   127d0:	mov	r1, r4
   127d4:	mov	r0, #1
   127d8:	bl	112d8 <error@plt>
   127dc:	movw	r3, #62632	; 0xf4a8
   127e0:	movt	r3, #2
   127e4:	ldrd	r0, [r3, #96]	; 0x60
   127e8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   127ec:	cmp	r1, r3
   127f0:	cmpeq	r0, r2
   127f4:	bne	12844 <__assert_fail@plt+0x1350>
   127f8:	movw	r3, #62632	; 0xf4a8
   127fc:	movt	r3, #2
   12800:	ldrd	r0, [r3]
   12804:	ldrd	r2, [fp, #-140]	; 0xffffff74
   12808:	cmp	r1, r3
   1280c:	cmpeq	r0, r2
   12810:	bne	12844 <__assert_fail@plt+0x1350>
   12814:	movw	r0, #57096	; 0xdf08
   12818:	movt	r0, #1
   1281c:	bl	1135c <gettext@plt>
   12820:	mov	r4, r0
   12824:	ldr	r1, [fp, #-144]	; 0xffffff70
   12828:	mov	r0, #4
   1282c:	bl	1957c <__assert_fail@plt+0x8088>
   12830:	mov	r3, r0
   12834:	mov	r2, r4
   12838:	mov	r1, #0
   1283c:	mov	r0, #1
   12840:	bl	112d8 <error@plt>
   12844:	mov	r2, #0
   12848:	mov	r3, #0
   1284c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12850:	bl	111f4 <ftruncate64@plt>
   12854:	mov	r3, r0
   12858:	cmp	r3, #0
   1285c:	beq	128b0 <__assert_fail@plt+0x13bc>
   12860:	ldr	r3, [fp, #-124]	; 0xffffff84
   12864:	and	r3, r3, #61440	; 0xf000
   12868:	cmp	r3, #32768	; 0x8000
   1286c:	bne	128b0 <__assert_fail@plt+0x13bc>
   12870:	bl	113bc <__errno_location@plt>
   12874:	mov	r3, r0
   12878:	ldr	r4, [r3]
   1287c:	movw	r0, #57132	; 0xdf2c
   12880:	movt	r0, #1
   12884:	bl	1135c <gettext@plt>
   12888:	mov	r5, r0
   1288c:	ldr	r2, [fp, #-144]	; 0xffffff70
   12890:	mov	r1, #3
   12894:	mov	r0, #0
   12898:	bl	19760 <__assert_fail@plt+0x826c>
   1289c:	mov	r3, r0
   128a0:	mov	r2, r5
   128a4:	mov	r1, r4
   128a8:	mov	r0, #1
   128ac:	bl	112d8 <error@plt>
   128b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   128b4:	b	12ce0 <__assert_fail@plt+0x17ec>
   128b8:	movw	r0, #57156	; 0xdf44
   128bc:	movt	r0, #1
   128c0:	bl	112f0 <getenv@plt>
   128c4:	str	r0, [fp, #-16]
   128c8:	ldr	r3, [fp, #-16]
   128cc:	cmp	r3, #0
   128d0:	bne	128e0 <__assert_fail@plt+0x13ec>
   128d4:	movw	r3, #57164	; 0xdf4c
   128d8:	movt	r3, #1
   128dc:	str	r3, [fp, #-16]
   128e0:	mov	r2, #1
   128e4:	ldr	r1, [fp, #-144]	; 0xffffff70
   128e8:	movw	r0, #57172	; 0xdf54
   128ec:	movt	r0, #1
   128f0:	bl	1138c <setenv@plt>
   128f4:	mov	r3, r0
   128f8:	cmp	r3, #0
   128fc:	beq	1292c <__assert_fail@plt+0x1438>
   12900:	bl	113bc <__errno_location@plt>
   12904:	mov	r3, r0
   12908:	ldr	r4, [r3]
   1290c:	movw	r0, #57180	; 0xdf5c
   12910:	movt	r0, #1
   12914:	bl	1135c <gettext@plt>
   12918:	mov	r3, r0
   1291c:	mov	r2, r3
   12920:	mov	r1, r4
   12924:	mov	r0, #1
   12928:	bl	112d8 <error@plt>
   1292c:	movw	r3, #62736	; 0xf510
   12930:	movt	r3, #2
   12934:	ldrb	r3, [r3]
   12938:	cmp	r3, #0
   1293c:	beq	12980 <__assert_fail@plt+0x148c>
   12940:	movw	r3, #62316	; 0xf36c
   12944:	movt	r3, #2
   12948:	ldr	r4, [r3]
   1294c:	movw	r0, #57220	; 0xdf84
   12950:	movt	r0, #1
   12954:	bl	1135c <gettext@plt>
   12958:	mov	r5, r0
   1295c:	ldr	r2, [fp, #-144]	; 0xffffff70
   12960:	mov	r1, #3
   12964:	mov	r0, #0
   12968:	bl	19760 <__assert_fail@plt+0x826c>
   1296c:	mov	r3, r0
   12970:	mov	r2, r3
   12974:	mov	r1, r5
   12978:	mov	r0, r4
   1297c:	bl	113a4 <fprintf@plt>
   12980:	sub	r3, fp, #36	; 0x24
   12984:	mov	r0, r3
   12988:	bl	1141c <pipe@plt>
   1298c:	mov	r3, r0
   12990:	cmp	r3, #0
   12994:	beq	129c4 <__assert_fail@plt+0x14d0>
   12998:	bl	113bc <__errno_location@plt>
   1299c:	mov	r3, r0
   129a0:	ldr	r4, [r3]
   129a4:	movw	r0, #57244	; 0xdf9c
   129a8:	movt	r0, #1
   129ac:	bl	1135c <gettext@plt>
   129b0:	mov	r3, r0
   129b4:	mov	r2, r3
   129b8:	mov	r1, r4
   129bc:	mov	r0, #1
   129c0:	bl	112d8 <error@plt>
   129c4:	bl	11458 <fork@plt>
   129c8:	mov	r3, r0
   129cc:	str	r3, [fp, #-28]	; 0xffffffe4
   129d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   129d4:	cmp	r3, #0
   129d8:	bne	12bc8 <__assert_fail@plt+0x16d4>
   129dc:	mov	r3, #0
   129e0:	str	r3, [fp, #-20]	; 0xffffffec
   129e4:	b	12a50 <__assert_fail@plt+0x155c>
   129e8:	movw	r3, #62336	; 0xf380
   129ec:	movt	r3, #2
   129f0:	ldr	r2, [r3]
   129f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   129f8:	lsl	r3, r3, #2
   129fc:	add	r3, r2, r3
   12a00:	ldr	r3, [r3]
   12a04:	mov	r0, r3
   12a08:	bl	114dc <close@plt>
   12a0c:	mov	r3, r0
   12a10:	cmp	r3, #0
   12a14:	beq	12a44 <__assert_fail@plt+0x1550>
   12a18:	bl	113bc <__errno_location@plt>
   12a1c:	mov	r3, r0
   12a20:	ldr	r4, [r3]
   12a24:	movw	r0, #57268	; 0xdfb4
   12a28:	movt	r0, #1
   12a2c:	bl	1135c <gettext@plt>
   12a30:	mov	r3, r0
   12a34:	mov	r2, r3
   12a38:	mov	r1, r4
   12a3c:	mov	r0, #1
   12a40:	bl	112d8 <error@plt>
   12a44:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a48:	add	r3, r3, #1
   12a4c:	str	r3, [fp, #-20]	; 0xffffffec
   12a50:	ldr	r2, [fp, #-20]	; 0xffffffec
   12a54:	movw	r3, #62344	; 0xf388
   12a58:	movt	r3, #2
   12a5c:	ldr	r3, [r3]
   12a60:	cmp	r2, r3
   12a64:	bcc	129e8 <__assert_fail@plt+0x14f4>
   12a68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a6c:	mov	r0, r3
   12a70:	bl	114dc <close@plt>
   12a74:	mov	r3, r0
   12a78:	cmp	r3, #0
   12a7c:	beq	12aac <__assert_fail@plt+0x15b8>
   12a80:	bl	113bc <__errno_location@plt>
   12a84:	mov	r3, r0
   12a88:	ldr	r4, [r3]
   12a8c:	movw	r0, #57288	; 0xdfc8
   12a90:	movt	r0, #1
   12a94:	bl	1135c <gettext@plt>
   12a98:	mov	r3, r0
   12a9c:	mov	r2, r3
   12aa0:	mov	r1, r4
   12aa4:	mov	r0, #1
   12aa8:	bl	112d8 <error@plt>
   12aac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12ab0:	cmp	r3, #0
   12ab4:	beq	12b44 <__assert_fail@plt+0x1650>
   12ab8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12abc:	mov	r1, #0
   12ac0:	mov	r0, r3
   12ac4:	bl	11224 <dup2@plt>
   12ac8:	mov	r3, r0
   12acc:	cmp	r3, #0
   12ad0:	beq	12b00 <__assert_fail@plt+0x160c>
   12ad4:	bl	113bc <__errno_location@plt>
   12ad8:	mov	r3, r0
   12adc:	ldr	r4, [r3]
   12ae0:	movw	r0, #57308	; 0xdfdc
   12ae4:	movt	r0, #1
   12ae8:	bl	1135c <gettext@plt>
   12aec:	mov	r3, r0
   12af0:	mov	r2, r3
   12af4:	mov	r1, r4
   12af8:	mov	r0, #1
   12afc:	bl	112d8 <error@plt>
   12b00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12b04:	mov	r0, r3
   12b08:	bl	114dc <close@plt>
   12b0c:	mov	r3, r0
   12b10:	cmp	r3, #0
   12b14:	beq	12b44 <__assert_fail@plt+0x1650>
   12b18:	bl	113bc <__errno_location@plt>
   12b1c:	mov	r3, r0
   12b20:	ldr	r4, [r3]
   12b24:	movw	r0, #57328	; 0xdff0
   12b28:	movt	r0, #1
   12b2c:	bl	1135c <gettext@plt>
   12b30:	mov	r3, r0
   12b34:	mov	r2, r3
   12b38:	mov	r1, r4
   12b3c:	mov	r0, #1
   12b40:	bl	112d8 <error@plt>
   12b44:	mov	r2, #0
   12b48:	movw	r1, #62348	; 0xf38c
   12b4c:	movt	r1, #2
   12b50:	mov	r0, #2
   12b54:	bl	111ac <sigprocmask@plt>
   12b58:	ldr	r0, [fp, #-16]
   12b5c:	bl	16828 <__assert_fail@plt+0x5334>
   12b60:	mov	r1, r0
   12b64:	movw	r3, #62328	; 0xf378
   12b68:	movt	r3, #2
   12b6c:	ldr	r2, [r3]
   12b70:	mov	r3, #0
   12b74:	str	r3, [sp]
   12b78:	mov	r3, r2
   12b7c:	movw	r2, #57348	; 0xe004
   12b80:	movt	r2, #1
   12b84:	ldr	r0, [fp, #-16]
   12b88:	bl	11464 <execl@plt>
   12b8c:	bl	113bc <__errno_location@plt>
   12b90:	mov	r3, r0
   12b94:	ldr	r4, [r3]
   12b98:	movw	r0, #57352	; 0xe008
   12b9c:	movt	r0, #1
   12ba0:	bl	1135c <gettext@plt>
   12ba4:	mov	r2, r0
   12ba8:	movw	r3, #62328	; 0xf378
   12bac:	movt	r3, #2
   12bb0:	ldr	r3, [r3]
   12bb4:	str	r3, [sp]
   12bb8:	ldr	r3, [fp, #-16]
   12bbc:	mov	r1, r4
   12bc0:	mov	r0, #1
   12bc4:	bl	112d8 <error@plt>
   12bc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12bcc:	cmn	r3, #1
   12bd0:	bne	12c00 <__assert_fail@plt+0x170c>
   12bd4:	bl	113bc <__errno_location@plt>
   12bd8:	mov	r3, r0
   12bdc:	ldr	r4, [r3]
   12be0:	movw	r0, #57388	; 0xe02c
   12be4:	movt	r0, #1
   12be8:	bl	1135c <gettext@plt>
   12bec:	mov	r3, r0
   12bf0:	mov	r2, r3
   12bf4:	mov	r1, r4
   12bf8:	mov	r0, #1
   12bfc:	bl	112d8 <error@plt>
   12c00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12c04:	mov	r0, r3
   12c08:	bl	114dc <close@plt>
   12c0c:	mov	r3, r0
   12c10:	cmp	r3, #0
   12c14:	beq	12c44 <__assert_fail@plt+0x1750>
   12c18:	bl	113bc <__errno_location@plt>
   12c1c:	mov	r3, r0
   12c20:	ldr	r4, [r3]
   12c24:	movw	r0, #57412	; 0xe044
   12c28:	movt	r0, #1
   12c2c:	bl	1135c <gettext@plt>
   12c30:	mov	r3, r0
   12c34:	mov	r2, r3
   12c38:	mov	r1, r4
   12c3c:	mov	r0, #1
   12c40:	bl	112d8 <error@plt>
   12c44:	movw	r3, #62332	; 0xf37c
   12c48:	movt	r3, #2
   12c4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12c50:	str	r2, [r3]
   12c54:	movw	r3, #62344	; 0xf388
   12c58:	movt	r3, #2
   12c5c:	ldr	r2, [r3]
   12c60:	movw	r3, #62340	; 0xf384
   12c64:	movt	r3, #2
   12c68:	ldr	r3, [r3]
   12c6c:	cmp	r2, r3
   12c70:	bne	12ca4 <__assert_fail@plt+0x17b0>
   12c74:	movw	r3, #62336	; 0xf380
   12c78:	movt	r3, #2
   12c7c:	ldr	r3, [r3]
   12c80:	mov	r2, #4
   12c84:	movw	r1, #62340	; 0xf384
   12c88:	movt	r1, #2
   12c8c:	mov	r0, r3
   12c90:	bl	1ac44 <__assert_fail@plt+0x9750>
   12c94:	mov	r2, r0
   12c98:	movw	r3, #62336	; 0xf380
   12c9c:	movt	r3, #2
   12ca0:	str	r2, [r3]
   12ca4:	movw	r3, #62336	; 0xf380
   12ca8:	movt	r3, #2
   12cac:	ldr	r1, [r3]
   12cb0:	movw	r3, #62344	; 0xf388
   12cb4:	movt	r3, #2
   12cb8:	ldr	r2, [r3]
   12cbc:	add	r0, r2, #1
   12cc0:	movw	r3, #62344	; 0xf388
   12cc4:	movt	r3, #2
   12cc8:	str	r0, [r3]
   12ccc:	lsl	r3, r2, #2
   12cd0:	add	r3, r1, r3
   12cd4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12cd8:	str	r2, [r3]
   12cdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12ce0:	mov	r0, r3
   12ce4:	sub	sp, fp, #12
   12ce8:	ldrd	r4, [sp]
   12cec:	ldr	fp, [sp, #8]
   12cf0:	add	sp, sp, #12
   12cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   12cf8:	strd	r4, [sp, #-16]!
   12cfc:	str	fp, [sp, #8]
   12d00:	str	lr, [sp, #12]
   12d04:	add	fp, sp, #12
   12d08:	sub	sp, sp, #64	; 0x40
   12d0c:	str	r0, [fp, #-56]	; 0xffffffc8
   12d10:	str	r1, [fp, #-60]	; 0xffffffc4
   12d14:	str	r2, [fp, #-64]	; 0xffffffc0
   12d18:	str	r3, [fp, #-68]	; 0xffffffbc
   12d1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12d20:	cmp	r3, #0
   12d24:	beq	12d98 <__assert_fail@plt+0x18a4>
   12d28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12d2c:	bl	16b08 <__assert_fail@plt+0x5614>
   12d30:	mov	r3, r0
   12d34:	cmp	r3, #0
   12d38:	beq	12d98 <__assert_fail@plt+0x18a4>
   12d3c:	bl	113bc <__errno_location@plt>
   12d40:	mov	r3, r0
   12d44:	ldr	r3, [r3]
   12d48:	mov	r0, r3
   12d4c:	bl	119fc <__assert_fail@plt+0x508>
   12d50:	mov	r3, r0
   12d54:	eor	r3, r3, #1
   12d58:	uxtb	r3, r3
   12d5c:	cmp	r3, #0
   12d60:	beq	12d98 <__assert_fail@plt+0x18a4>
   12d64:	bl	113bc <__errno_location@plt>
   12d68:	mov	r3, r0
   12d6c:	ldr	r4, [r3]
   12d70:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12d74:	mov	r1, #3
   12d78:	mov	r0, #0
   12d7c:	bl	19760 <__assert_fail@plt+0x826c>
   12d80:	mov	r3, r0
   12d84:	movw	r2, #57440	; 0xe060
   12d88:	movt	r2, #1
   12d8c:	mov	r1, r4
   12d90:	mov	r0, #1
   12d94:	bl	112d8 <error@plt>
   12d98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12d9c:	cmp	r3, #0
   12da0:	blt	12eb0 <__assert_fail@plt+0x19bc>
   12da4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12da8:	cmp	r3, #0
   12dac:	bne	12df8 <__assert_fail@plt+0x1904>
   12db0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12db4:	bl	114dc <close@plt>
   12db8:	mov	r3, r0
   12dbc:	cmp	r3, #0
   12dc0:	bge	12df8 <__assert_fail@plt+0x1904>
   12dc4:	bl	113bc <__errno_location@plt>
   12dc8:	mov	r3, r0
   12dcc:	ldr	r4, [r3]
   12dd0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12dd4:	mov	r1, #3
   12dd8:	mov	r0, #0
   12ddc:	bl	19760 <__assert_fail@plt+0x826c>
   12de0:	mov	r3, r0
   12de4:	movw	r2, #57440	; 0xe060
   12de8:	movt	r2, #1
   12dec:	mov	r1, r4
   12df0:	mov	r0, #1
   12df4:	bl	112d8 <error@plt>
   12df8:	mov	r3, #0
   12dfc:	str	r3, [fp, #-16]
   12e00:	b	12e98 <__assert_fail@plt+0x19a4>
   12e04:	movw	r3, #62336	; 0xf380
   12e08:	movt	r3, #2
   12e0c:	ldr	r2, [r3]
   12e10:	ldr	r3, [fp, #-16]
   12e14:	lsl	r3, r3, #2
   12e18:	add	r3, r2, r3
   12e1c:	ldr	r3, [r3]
   12e20:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12e24:	cmp	r2, r3
   12e28:	bne	12e8c <__assert_fail@plt+0x1998>
   12e2c:	movw	r3, #62336	; 0xf380
   12e30:	movt	r3, #2
   12e34:	ldr	r2, [r3]
   12e38:	movw	r3, #62344	; 0xf388
   12e3c:	movt	r3, #2
   12e40:	ldr	r3, [r3]
   12e44:	sub	r1, r3, #1
   12e48:	movw	r3, #62344	; 0xf388
   12e4c:	movt	r3, #2
   12e50:	str	r1, [r3]
   12e54:	movw	r3, #62344	; 0xf388
   12e58:	movt	r3, #2
   12e5c:	ldr	r3, [r3]
   12e60:	lsl	r3, r3, #2
   12e64:	add	r2, r2, r3
   12e68:	movw	r3, #62336	; 0xf380
   12e6c:	movt	r3, #2
   12e70:	ldr	r1, [r3]
   12e74:	ldr	r3, [fp, #-16]
   12e78:	lsl	r3, r3, #2
   12e7c:	add	r3, r1, r3
   12e80:	ldr	r2, [r2]
   12e84:	str	r2, [r3]
   12e88:	b	12eb0 <__assert_fail@plt+0x19bc>
   12e8c:	ldr	r3, [fp, #-16]
   12e90:	add	r3, r3, #1
   12e94:	str	r3, [fp, #-16]
   12e98:	ldr	r2, [fp, #-16]
   12e9c:	movw	r3, #62344	; 0xf388
   12ea0:	movt	r3, #2
   12ea4:	ldr	r3, [r3]
   12ea8:	cmp	r2, r3
   12eac:	bcc	12e04 <__assert_fail@plt+0x1910>
   12eb0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12eb4:	cmp	r3, #0
   12eb8:	ble	13098 <__assert_fail@plt+0x1ba4>
   12ebc:	mov	r3, #0
   12ec0:	str	r3, [fp, #-28]	; 0xffffffe4
   12ec4:	sub	r3, fp, #28
   12ec8:	mov	r2, #0
   12ecc:	mov	r1, r3
   12ed0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12ed4:	bl	11290 <waitpid@plt>
   12ed8:	mov	r3, r0
   12edc:	cmn	r3, #1
   12ee0:	bne	12f24 <__assert_fail@plt+0x1a30>
   12ee4:	bl	113bc <__errno_location@plt>
   12ee8:	mov	r3, r0
   12eec:	ldr	r3, [r3]
   12ef0:	cmp	r3, #10
   12ef4:	beq	12f24 <__assert_fail@plt+0x1a30>
   12ef8:	bl	113bc <__errno_location@plt>
   12efc:	mov	r3, r0
   12f00:	ldr	r4, [r3]
   12f04:	movw	r0, #57444	; 0xe064
   12f08:	movt	r0, #1
   12f0c:	bl	1135c <gettext@plt>
   12f10:	mov	r3, r0
   12f14:	mov	r2, r3
   12f18:	mov	r1, r4
   12f1c:	mov	r0, #1
   12f20:	bl	112d8 <error@plt>
   12f24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12f28:	uxtb	r3, r3
   12f2c:	and	r3, r3, #127	; 0x7f
   12f30:	uxtb	r3, r3
   12f34:	add	r3, r3, #1
   12f38:	uxtb	r3, r3
   12f3c:	sxtb	r3, r3
   12f40:	asr	r3, r3, #1
   12f44:	sxtb	r3, r3
   12f48:	cmp	r3, #0
   12f4c:	ble	12ff8 <__assert_fail@plt+0x1b04>
   12f50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12f54:	and	r3, r3, #127	; 0x7f
   12f58:	str	r3, [fp, #-20]	; 0xffffffec
   12f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f60:	cmp	r3, #13
   12f64:	beq	13098 <__assert_fail@plt+0x1ba4>
   12f68:	sub	r3, fp, #48	; 0x30
   12f6c:	mov	r1, r3
   12f70:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f74:	bl	19e88 <__assert_fail@plt+0x8994>
   12f78:	mov	r3, r0
   12f7c:	cmp	r3, #0
   12f80:	beq	12f9c <__assert_fail@plt+0x1aa8>
   12f84:	sub	r3, fp, #48	; 0x30
   12f88:	ldr	r2, [fp, #-20]	; 0xffffffec
   12f8c:	movw	r1, #57472	; 0xe080
   12f90:	movt	r1, #1
   12f94:	mov	r0, r3
   12f98:	bl	11488 <sprintf@plt>
   12f9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12fa0:	add	r4, r3, #128	; 0x80
   12fa4:	movw	r0, #57476	; 0xe084
   12fa8:	movt	r0, #1
   12fac:	bl	1135c <gettext@plt>
   12fb0:	mov	r5, r0
   12fb4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12fb8:	mov	r1, #3
   12fbc:	mov	r0, #0
   12fc0:	bl	19760 <__assert_fail@plt+0x826c>
   12fc4:	mov	r2, r0
   12fc8:	movw	r3, #62328	; 0xf378
   12fcc:	movt	r3, #2
   12fd0:	ldr	r3, [r3]
   12fd4:	str	r3, [sp, #4]
   12fd8:	sub	r3, fp, #48	; 0x30
   12fdc:	str	r3, [sp]
   12fe0:	mov	r3, r2
   12fe4:	mov	r2, r5
   12fe8:	mov	r1, #0
   12fec:	mov	r0, r4
   12ff0:	bl	112d8 <error@plt>
   12ff4:	b	13098 <__assert_fail@plt+0x1ba4>
   12ff8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12ffc:	and	r3, r3, #127	; 0x7f
   13000:	cmp	r3, #0
   13004:	bne	13078 <__assert_fail@plt+0x1b84>
   13008:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1300c:	asr	r3, r3, #8
   13010:	uxtb	r3, r3
   13014:	str	r3, [fp, #-24]	; 0xffffffe8
   13018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1301c:	cmp	r3, #0
   13020:	beq	13098 <__assert_fail@plt+0x1ba4>
   13024:	movw	r0, #57520	; 0xe0b0
   13028:	movt	r0, #1
   1302c:	bl	1135c <gettext@plt>
   13030:	mov	r4, r0
   13034:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13038:	mov	r1, #3
   1303c:	mov	r0, #0
   13040:	bl	19760 <__assert_fail@plt+0x826c>
   13044:	mov	r2, r0
   13048:	movw	r3, #62328	; 0xf378
   1304c:	movt	r3, #2
   13050:	ldr	r3, [r3]
   13054:	str	r3, [sp, #4]
   13058:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1305c:	str	r3, [sp]
   13060:	mov	r3, r2
   13064:	mov	r2, r4
   13068:	mov	r1, #0
   1306c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13070:	bl	112d8 <error@plt>
   13074:	b	13098 <__assert_fail@plt+0x1ba4>
   13078:	movw	r0, #57560	; 0xe0d8
   1307c:	movt	r0, #1
   13080:	bl	1135c <gettext@plt>
   13084:	mov	r2, r0
   13088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1308c:	mov	r1, #0
   13090:	mov	r0, #1
   13094:	bl	112d8 <error@plt>
   13098:	nop	{0}
   1309c:	sub	sp, fp, #12
   130a0:	ldrd	r4, [sp]
   130a4:	ldr	fp, [sp, #8]
   130a8:	add	sp, sp, #12
   130ac:	pop	{pc}		; (ldr pc, [sp], #4)
   130b0:	str	r4, [sp, #-12]!
   130b4:	str	fp, [sp, #4]
   130b8:	str	lr, [sp, #8]
   130bc:	add	fp, sp, #8
   130c0:	sub	sp, sp, #20
   130c4:	mov	r3, r0
   130c8:	str	r1, [fp, #-20]	; 0xffffffec
   130cc:	str	r2, [fp, #-24]	; 0xffffffe8
   130d0:	strb	r3, [fp, #-13]
   130d4:	ldrb	r3, [fp, #-13]
   130d8:	cmp	r3, #0
   130dc:	beq	131bc <__assert_fail@plt+0x1cc8>
   130e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   130e4:	cmp	r3, #0
   130e8:	bne	13114 <__assert_fail@plt+0x1c20>
   130ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   130f0:	cmp	r3, #0
   130f4:	bne	13114 <__assert_fail@plt+0x1c20>
   130f8:	movw	r3, #62737	; 0xf511
   130fc:	movt	r3, #2
   13100:	ldrb	r3, [r3]
   13104:	cmp	r3, #0
   13108:	beq	13114 <__assert_fail@plt+0x1c20>
   1310c:	mov	r3, #1
   13110:	b	1325c <__assert_fail@plt+0x1d68>
   13114:	movw	r3, #61792	; 0xf160
   13118:	movt	r3, #2
   1311c:	ldr	r1, [r3]
   13120:	movw	r3, #62332	; 0xf37c
   13124:	movt	r3, #2
   13128:	ldr	r2, [r3]
   1312c:	movw	r3, #62608	; 0xf490
   13130:	movt	r3, #2
   13134:	ldr	r3, [r3]
   13138:	mov	r0, #0
   1313c:	bl	12cf8 <__assert_fail@plt+0x1804>
   13140:	bl	120e8 <__assert_fail@plt+0xbf4>
   13144:	movw	r3, #62608	; 0xf490
   13148:	movt	r3, #2
   1314c:	ldr	r3, [r3]
   13150:	mov	r0, r3
   13154:	bl	126e0 <__assert_fail@plt+0x11ec>
   13158:	mov	r2, r0
   1315c:	movw	r3, #61792	; 0xf160
   13160:	movt	r3, #2
   13164:	str	r2, [r3]
   13168:	movw	r3, #61792	; 0xf160
   1316c:	movt	r3, #2
   13170:	ldr	r3, [r3]
   13174:	cmp	r3, #0
   13178:	bge	131bc <__assert_fail@plt+0x1cc8>
   1317c:	bl	113bc <__errno_location@plt>
   13180:	mov	r3, r0
   13184:	ldr	r4, [r3]
   13188:	movw	r3, #62608	; 0xf490
   1318c:	movt	r3, #2
   13190:	ldr	r3, [r3]
   13194:	mov	r2, r3
   13198:	mov	r1, #3
   1319c:	mov	r0, #0
   131a0:	bl	19760 <__assert_fail@plt+0x826c>
   131a4:	mov	r3, r0
   131a8:	movw	r2, #57440	; 0xe060
   131ac:	movt	r2, #1
   131b0:	mov	r1, r4
   131b4:	mov	r0, #1
   131b8:	bl	112d8 <error@plt>
   131bc:	movw	r3, #61792	; 0xf160
   131c0:	movt	r3, #2
   131c4:	ldr	r3, [r3]
   131c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   131cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   131d0:	mov	r0, r3
   131d4:	bl	16f90 <__assert_fail@plt+0x5a9c>
   131d8:	mov	r2, r0
   131dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   131e0:	cmp	r3, r2
   131e4:	bne	131f0 <__assert_fail@plt+0x1cfc>
   131e8:	mov	r3, #1
   131ec:	b	1325c <__assert_fail@plt+0x1d68>
   131f0:	bl	113bc <__errno_location@plt>
   131f4:	mov	r3, r0
   131f8:	ldr	r3, [r3]
   131fc:	mov	r0, r3
   13200:	bl	119fc <__assert_fail@plt+0x508>
   13204:	mov	r3, r0
   13208:	eor	r3, r3, #1
   1320c:	uxtb	r3, r3
   13210:	cmp	r3, #0
   13214:	beq	13258 <__assert_fail@plt+0x1d64>
   13218:	bl	113bc <__errno_location@plt>
   1321c:	mov	r3, r0
   13220:	ldr	r4, [r3]
   13224:	movw	r3, #62608	; 0xf490
   13228:	movt	r3, #2
   1322c:	ldr	r3, [r3]
   13230:	mov	r2, r3
   13234:	mov	r1, #3
   13238:	mov	r0, #0
   1323c:	bl	19760 <__assert_fail@plt+0x826c>
   13240:	mov	r3, r0
   13244:	movw	r2, #57440	; 0xe060
   13248:	movt	r2, #1
   1324c:	mov	r1, r4
   13250:	mov	r0, #1
   13254:	bl	112d8 <error@plt>
   13258:	mov	r3, #0
   1325c:	mov	r0, r3
   13260:	sub	sp, fp, #8
   13264:	ldr	r4, [sp]
   13268:	ldr	fp, [sp, #4]
   1326c:	add	sp, sp, #8
   13270:	pop	{pc}		; (ldr pc, [sp], #4)
   13274:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13278:	strd	r6, [sp, #8]
   1327c:	strd	r8, [sp, #16]
   13280:	str	fp, [sp, #24]
   13284:	str	lr, [sp, #28]
   13288:	add	fp, sp, #28
   1328c:	sub	sp, sp, #64	; 0x40
   13290:	strd	r0, [fp, #-68]	; 0xffffffbc
   13294:	str	r2, [fp, #-72]	; 0xffffffb8
   13298:	str	r3, [fp, #-76]	; 0xffffffb4
   1329c:	mov	r3, #1
   132a0:	strb	r3, [fp, #-33]	; 0xffffffdf
   132a4:	mov	r3, #1
   132a8:	strb	r3, [fp, #-34]	; 0xffffffde
   132ac:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   132b0:	strd	r2, [fp, #-44]	; 0xffffffd4
   132b4:	mov	r2, #0
   132b8:	mov	r3, #0
   132bc:	strd	r2, [fp, #-52]	; 0xffffffcc
   132c0:	ldr	r3, [fp, #4]
   132c4:	cmn	r3, #1
   132c8:	beq	132f8 <__assert_fail@plt+0x1e04>
   132cc:	ldr	r3, [fp, #4]
   132d0:	str	r3, [fp, #-32]	; 0xffffffe0
   132d4:	mvn	r3, #0
   132d8:	str	r3, [fp, #4]
   132dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   132e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   132e4:	cmp	r2, r3
   132e8:	movcc	r3, #1
   132ec:	movcs	r3, #0
   132f0:	strb	r3, [fp, #-53]	; 0xffffffcb
   132f4:	b	133b8 <__assert_fail@plt+0x1ec4>
   132f8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   132fc:	eor	r3, r3, #1
   13300:	uxtb	r3, r3
   13304:	cmp	r3, #0
   13308:	beq	13344 <__assert_fail@plt+0x1e50>
   1330c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   13310:	mov	r1, #1
   13314:	str	r1, [sp]
   13318:	mov	r0, #0
   1331c:	bl	11284 <lseek64@plt>
   13320:	mvn	r2, #0
   13324:	mvn	r3, #0
   13328:	cmp	r1, r3
   1332c:	cmpeq	r0, r2
   13330:	beq	13344 <__assert_fail@plt+0x1e50>
   13334:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   13338:	strd	r2, [fp, #-44]	; 0xffffffd4
   1333c:	mov	r3, #1
   13340:	strb	r3, [fp, #-33]	; 0xffffffdf
   13344:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13348:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1334c:	mov	r0, #0
   13350:	bl	19a94 <__assert_fail@plt+0x85a0>
   13354:	str	r0, [fp, #-32]	; 0xffffffe0
   13358:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1335c:	cmn	r3, #1
   13360:	bne	133a4 <__assert_fail@plt+0x1eb0>
   13364:	bl	113bc <__errno_location@plt>
   13368:	mov	r3, r0
   1336c:	ldr	r4, [r3]
   13370:	movw	r3, #62628	; 0xf4a4
   13374:	movt	r3, #2
   13378:	ldr	r3, [r3]
   1337c:	mov	r2, r3
   13380:	mov	r1, #3
   13384:	mov	r0, #0
   13388:	bl	19760 <__assert_fail@plt+0x826c>
   1338c:	mov	r3, r0
   13390:	movw	r2, #57440	; 0xe060
   13394:	movt	r2, #1
   13398:	mov	r1, r4
   1339c:	mov	r0, #1
   133a0:	bl	112d8 <error@plt>
   133a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   133a8:	cmp	r3, #0
   133ac:	moveq	r3, #1
   133b0:	movne	r3, #0
   133b4:	strb	r3, [fp, #-53]	; 0xffffffcb
   133b8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   133bc:	str	r3, [fp, #-60]	; 0xffffffc4
   133c0:	b	134b0 <__assert_fail@plt+0x1fbc>
   133c4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   133c8:	cmp	r3, #0
   133cc:	bne	133dc <__assert_fail@plt+0x1ee8>
   133d0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   133d4:	cmp	r3, #0
   133d8:	beq	133f8 <__assert_fail@plt+0x1f04>
   133dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   133e0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   133e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   133e8:	mov	r0, r3
   133ec:	bl	130b0 <__assert_fail@plt+0x1bbc>
   133f0:	mov	r3, r0
   133f4:	strb	r3, [fp, #-34]	; 0xffffffde
   133f8:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   133fc:	mov	r3, #0
   13400:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   13404:	adds	r6, r0, r2
   13408:	adc	r7, r1, r3
   1340c:	strd	r6, [fp, #-52]	; 0xffffffcc
   13410:	ldrd	r2, [fp, #12]
   13414:	orrs	r3, r2, r3
   13418:	beq	13430 <__assert_fail@plt+0x1f3c>
   1341c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   13420:	ldrd	r2, [fp, #12]
   13424:	cmp	r1, r3
   13428:	cmpeq	r0, r2
   1342c:	bcs	13438 <__assert_fail@plt+0x1f44>
   13430:	mov	r3, #1
   13434:	b	1343c <__assert_fail@plt+0x1f48>
   13438:	mov	r3, #0
   1343c:	strb	r3, [fp, #-33]	; 0xffffffdf
   13440:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13444:	and	r3, r3, #1
   13448:	strb	r3, [fp, #-33]	; 0xffffffdf
   1344c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13450:	eor	r3, r3, #1
   13454:	uxtb	r3, r3
   13458:	cmp	r3, #0
   1345c:	beq	13488 <__assert_fail@plt+0x1f94>
   13460:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13464:	eor	r3, r3, #1
   13468:	uxtb	r3, r3
   1346c:	cmp	r3, #0
   13470:	beq	13488 <__assert_fail@plt+0x1f94>
   13474:	mov	r3, #0
   13478:	str	r3, [fp, #-32]	; 0xffffffe0
   1347c:	mov	r3, #1
   13480:	strb	r3, [fp, #-53]	; 0xffffffcb
   13484:	b	134cc <__assert_fail@plt+0x1fd8>
   13488:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1348c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13490:	add	r3, r2, r3
   13494:	str	r3, [fp, #-60]	; 0xffffffc4
   13498:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1349c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   134a0:	sub	r3, r2, r3
   134a4:	str	r3, [fp, #-32]	; 0xffffffe0
   134a8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   134ac:	strd	r2, [fp, #-44]	; 0xffffffd4
   134b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   134b4:	mov	r2, r3
   134b8:	mov	r3, #0
   134bc:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   134c0:	cmp	r1, r3
   134c4:	cmpeq	r0, r2
   134c8:	bls	133c4 <__assert_fail@plt+0x1ed0>
   134cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   134d0:	cmp	r3, #0
   134d4:	beq	1357c <__assert_fail@plt+0x2088>
   134d8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   134dc:	cmp	r3, #0
   134e0:	bne	134f0 <__assert_fail@plt+0x1ffc>
   134e4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   134e8:	cmp	r3, #0
   134ec:	beq	1350c <__assert_fail@plt+0x2018>
   134f0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   134f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   134f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   134fc:	mov	r0, r3
   13500:	bl	130b0 <__assert_fail@plt+0x1bbc>
   13504:	mov	r3, r0
   13508:	strb	r3, [fp, #-34]	; 0xffffffde
   1350c:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   13510:	mov	r3, #0
   13514:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   13518:	adds	r8, r0, r2
   1351c:	adc	r9, r1, r3
   13520:	strd	r8, [fp, #-52]	; 0xffffffcc
   13524:	mov	r3, #0
   13528:	strb	r3, [fp, #-33]	; 0xffffffdf
   1352c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13530:	eor	r3, r3, #1
   13534:	uxtb	r3, r3
   13538:	cmp	r3, #0
   1353c:	beq	13554 <__assert_fail@plt+0x2060>
   13540:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   13544:	ldrd	r2, [fp, #12]
   13548:	cmp	r1, r3
   1354c:	cmpeq	r0, r2
   13550:	beq	13594 <__assert_fail@plt+0x20a0>
   13554:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13558:	mov	r2, r3
   1355c:	mov	r3, #0
   13560:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   13564:	subs	ip, r0, r2
   13568:	str	ip, [fp, #-84]	; 0xffffffac
   1356c:	sbc	r3, r1, r3
   13570:	str	r3, [fp, #-80]	; 0xffffffb0
   13574:	ldrd	r2, [fp, #-84]	; 0xffffffac
   13578:	strd	r2, [fp, #-44]	; 0xffffffd4
   1357c:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   13580:	eor	r3, r3, #1
   13584:	uxtb	r3, r3
   13588:	cmp	r3, #0
   1358c:	bne	132c0 <__assert_fail@plt+0x1dcc>
   13590:	b	135ac <__assert_fail@plt+0x20b8>
   13594:	nop	{0}
   13598:	b	135ac <__assert_fail@plt+0x20b8>
   1359c:	mov	r2, #0
   135a0:	mov	r1, #0
   135a4:	mov	r0, #1
   135a8:	bl	130b0 <__assert_fail@plt+0x1bbc>
   135ac:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   135b0:	adds	r4, r2, #1
   135b4:	adc	r5, r3, #0
   135b8:	strd	r4, [fp, #-52]	; 0xffffffcc
   135bc:	ldrd	r0, [fp, #12]
   135c0:	cmp	r1, r3
   135c4:	cmpeq	r0, r2
   135c8:	bhi	1359c <__assert_fail@plt+0x20a8>
   135cc:	nop	{0}
   135d0:	sub	sp, fp, #28
   135d4:	ldrd	r4, [sp]
   135d8:	ldrd	r6, [sp, #8]
   135dc:	ldrd	r8, [sp, #16]
   135e0:	ldr	fp, [sp, #24]
   135e4:	add	sp, sp, #28
   135e8:	pop	{pc}		; (ldr pc, [sp], #4)
   135ec:	strd	r4, [sp, #-16]!
   135f0:	str	fp, [sp, #8]
   135f4:	str	lr, [sp, #12]
   135f8:	add	fp, sp, #12
   135fc:	sub	sp, sp, #56	; 0x38
   13600:	strd	r0, [fp, #-60]	; 0xffffffc4
   13604:	str	r2, [fp, #-64]	; 0xffffffc0
   13608:	str	r3, [fp, #-68]	; 0xffffffbc
   1360c:	mov	r3, #1
   13610:	strb	r3, [fp, #-21]	; 0xffffffeb
   13614:	mov	r2, #0
   13618:	mov	r3, #0
   1361c:	strd	r2, [fp, #-36]	; 0xffffffdc
   13620:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13624:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13628:	mov	r0, #0
   1362c:	bl	19a94 <__assert_fail@plt+0x85a0>
   13630:	str	r0, [fp, #-40]	; 0xffffffd8
   13634:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13638:	cmn	r3, #1
   1363c:	bne	13680 <__assert_fail@plt+0x218c>
   13640:	bl	113bc <__errno_location@plt>
   13644:	mov	r3, r0
   13648:	ldr	r4, [r3]
   1364c:	movw	r3, #62628	; 0xf4a4
   13650:	movt	r3, #2
   13654:	ldr	r3, [r3]
   13658:	mov	r2, r3
   1365c:	mov	r1, #3
   13660:	mov	r0, #0
   13664:	bl	19760 <__assert_fail@plt+0x826c>
   13668:	mov	r3, r0
   1366c:	movw	r2, #57440	; 0xe060
   13670:	movt	r2, #1
   13674:	mov	r1, r4
   13678:	mov	r0, #1
   1367c:	bl	112d8 <error@plt>
   13680:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13684:	str	r3, [fp, #-20]	; 0xffffffec
   13688:	ldr	r3, [fp, #-20]	; 0xffffffec
   1368c:	str	r3, [fp, #-16]
   13690:	ldr	r2, [fp, #-16]
   13694:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13698:	add	r3, r2, r3
   1369c:	str	r3, [fp, #-44]	; 0xffffffd4
   136a0:	movw	r3, #61796	; 0xf164
   136a4:	movt	r3, #2
   136a8:	ldr	r3, [r3]
   136ac:	uxtb	r2, r3
   136b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   136b4:	strb	r2, [r3]
   136b8:	movw	r3, #61796	; 0xf164
   136bc:	movt	r3, #2
   136c0:	ldr	r3, [r3]
   136c4:	mov	r1, r3
   136c8:	ldr	r0, [fp, #-16]
   136cc:	bl	11248 <rawmemchr@plt>
   136d0:	str	r0, [fp, #-16]
   136d4:	ldr	r2, [fp, #-16]
   136d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   136dc:	cmp	r2, r3
   136e0:	bne	13724 <__assert_fail@plt+0x2230>
   136e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   136e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   136ec:	cmp	r2, r3
   136f0:	beq	13794 <__assert_fail@plt+0x22a0>
   136f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   136f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   136fc:	sub	r3, r2, r3
   13700:	str	r3, [fp, #-48]	; 0xffffffd0
   13704:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   13708:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1370c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13710:	mov	r0, r3
   13714:	bl	130b0 <__assert_fail@plt+0x1bbc>
   13718:	mov	r3, #0
   1371c:	strb	r3, [fp, #-21]	; 0xffffffeb
   13720:	b	13794 <__assert_fail@plt+0x22a0>
   13724:	ldr	r3, [fp, #-16]
   13728:	add	r3, r3, #1
   1372c:	str	r3, [fp, #-16]
   13730:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13734:	adds	r4, r2, #1
   13738:	adc	r5, r3, #0
   1373c:	strd	r4, [fp, #-36]	; 0xffffffdc
   13740:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   13744:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   13748:	cmp	r1, r3
   1374c:	cmpeq	r0, r2
   13750:	bcc	136b8 <__assert_fail@plt+0x21c4>
   13754:	ldr	r2, [fp, #-16]
   13758:	ldr	r3, [fp, #-20]	; 0xffffffec
   1375c:	sub	r3, r2, r3
   13760:	mov	r2, r3
   13764:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   13768:	ldr	r1, [fp, #-20]	; 0xffffffec
   1376c:	mov	r0, r3
   13770:	bl	130b0 <__assert_fail@plt+0x1bbc>
   13774:	ldr	r3, [fp, #-16]
   13778:	str	r3, [fp, #-20]	; 0xffffffec
   1377c:	mov	r3, #1
   13780:	strb	r3, [fp, #-21]	; 0xffffffeb
   13784:	mov	r2, #0
   13788:	mov	r3, #0
   1378c:	strd	r2, [fp, #-36]	; 0xffffffdc
   13790:	b	136b8 <__assert_fail@plt+0x21c4>
   13794:	nop	{0}
   13798:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1379c:	cmp	r3, #0
   137a0:	bne	13620 <__assert_fail@plt+0x212c>
   137a4:	nop	{0}
   137a8:	sub	sp, fp, #12
   137ac:	ldrd	r4, [sp]
   137b0:	ldr	fp, [sp, #8]
   137b4:	add	sp, sp, #12
   137b8:	pop	{pc}		; (ldr pc, [sp], #4)
   137bc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   137c0:	strd	r6, [sp, #8]
   137c4:	strd	r8, [sp, #16]
   137c8:	str	fp, [sp, #24]
   137cc:	str	lr, [sp, #28]
   137d0:	add	fp, sp, #28
   137d4:	sub	sp, sp, #96	; 0x60
   137d8:	strd	r0, [fp, #-100]	; 0xffffff9c
   137dc:	str	r2, [fp, #-104]	; 0xffffff98
   137e0:	str	r3, [fp, #-108]	; 0xffffff94
   137e4:	mov	r2, #0
   137e8:	mov	r3, #0
   137ec:	strd	r2, [fp, #-36]	; 0xffffffdc
   137f0:	mov	r3, #0
   137f4:	str	r3, [fp, #-40]	; 0xffffffd8
   137f8:	mov	r3, #0
   137fc:	str	r3, [fp, #-44]	; 0xffffffd4
   13800:	mov	r3, #0
   13804:	str	r3, [fp, #-48]	; 0xffffffd0
   13808:	mov	r3, #0
   1380c:	strb	r3, [fp, #-49]	; 0xffffffcf
   13810:	ldr	r2, [fp, #-108]	; 0xffffff94
   13814:	ldr	r1, [fp, #-104]	; 0xffffff98
   13818:	mov	r0, #0
   1381c:	bl	19a94 <__assert_fail@plt+0x85a0>
   13820:	str	r0, [fp, #-76]	; 0xffffffb4
   13824:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13828:	cmn	r3, #1
   1382c:	bne	13870 <__assert_fail@plt+0x237c>
   13830:	bl	113bc <__errno_location@plt>
   13834:	mov	r3, r0
   13838:	ldr	r4, [r3]
   1383c:	movw	r3, #62628	; 0xf4a4
   13840:	movt	r3, #2
   13844:	ldr	r3, [r3]
   13848:	mov	r2, r3
   1384c:	mov	r1, #3
   13850:	mov	r0, #0
   13854:	bl	19760 <__assert_fail@plt+0x826c>
   13858:	mov	r3, r0
   1385c:	movw	r2, #57440	; 0xe060
   13860:	movt	r2, #1
   13864:	mov	r1, r4
   13868:	mov	r0, #1
   1386c:	bl	112d8 <error@plt>
   13870:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13874:	str	r3, [fp, #-56]	; 0xffffffc8
   13878:	ldr	r3, [fp, #-104]	; 0xffffff98
   1387c:	str	r3, [fp, #-60]	; 0xffffffc4
   13880:	b	13c6c <__assert_fail@plt+0x2778>
   13884:	mov	r3, #0
   13888:	str	r3, [fp, #-64]	; 0xffffffc0
   1388c:	mov	r3, #0
   13890:	str	r3, [fp, #-68]	; 0xffffffbc
   13894:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   13898:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1389c:	subs	r4, r0, r2
   138a0:	sbc	r5, r1, r3
   138a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   138a8:	mov	r2, r3
   138ac:	mov	r3, #0
   138b0:	subs	r6, r4, r2
   138b4:	sbc	r7, r5, r3
   138b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   138bc:	mov	r2, r3
   138c0:	mov	r3, #0
   138c4:	cmp	r7, r3
   138c8:	cmpeq	r6, r2
   138cc:	bhi	13920 <__assert_fail@plt+0x242c>
   138d0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   138d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   138d8:	sub	r2, r2, r3
   138dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   138e0:	sub	r3, r2, r3
   138e4:	str	r3, [fp, #-64]	; 0xffffffc0
   138e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   138ec:	sub	r3, r3, #1
   138f0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   138f4:	add	r3, r2, r3
   138f8:	str	r3, [fp, #-68]	; 0xffffffbc
   138fc:	movw	r3, #61796	; 0xf164
   13900:	movt	r3, #2
   13904:	ldr	r3, [r3]
   13908:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1390c:	mov	r1, r3
   13910:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13914:	bl	11398 <memrchr@plt>
   13918:	str	r0, [fp, #-72]	; 0xffffffb8
   1391c:	b	13940 <__assert_fail@plt+0x244c>
   13920:	movw	r3, #61796	; 0xf164
   13924:	movt	r3, #2
   13928:	ldr	r3, [r3]
   1392c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13930:	mov	r1, r3
   13934:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13938:	bl	11398 <memrchr@plt>
   1393c:	str	r0, [fp, #-72]	; 0xffffffb8
   13940:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13944:	cmp	r3, #0
   13948:	beq	139dc <__assert_fail@plt+0x24e8>
   1394c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13950:	cmp	r3, #0
   13954:	bne	13964 <__assert_fail@plt+0x2470>
   13958:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1395c:	orrs	r3, r2, r3
   13960:	bne	139dc <__assert_fail@plt+0x24e8>
   13964:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1396c:	orr	r3, r2, r3
   13970:	cmp	r3, #0
   13974:	moveq	r3, #1
   13978:	movne	r3, #0
   1397c:	uxtb	r3, r3
   13980:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13984:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13988:	mov	r0, r3
   1398c:	bl	130b0 <__assert_fail@plt+0x1bbc>
   13990:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13994:	mov	r2, r3
   13998:	mov	r3, #0
   1399c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   139a0:	adds	r8, r0, r2
   139a4:	adc	r9, r1, r3
   139a8:	strd	r8, [fp, #-36]	; 0xffffffdc
   139ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   139b0:	ldr	r3, [fp, #-108]	; 0xffffff94
   139b4:	cmp	r2, r3
   139b8:	bls	139cc <__assert_fail@plt+0x24d8>
   139bc:	ldr	r1, [fp, #-108]	; 0xffffff94
   139c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139c4:	bl	1aa08 <__assert_fail@plt+0x9514>
   139c8:	str	r0, [fp, #-44]	; 0xffffffd4
   139cc:	mov	r3, #0
   139d0:	str	r3, [fp, #-40]	; 0xffffffd8
   139d4:	ldr	r3, [fp, #-108]	; 0xffffff94
   139d8:	str	r3, [fp, #-48]	; 0xffffffd0
   139dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   139e0:	cmp	r3, #0
   139e4:	beq	13a94 <__assert_fail@plt+0x25a0>
   139e8:	mov	r3, #1
   139ec:	strb	r3, [fp, #-49]	; 0xffffffcf
   139f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   139f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   139f8:	sub	r3, r2, r3
   139fc:	add	r3, r3, #1
   13a00:	str	r3, [fp, #-80]	; 0xffffffb0
   13a04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13a08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13a0c:	orr	r3, r2, r3
   13a10:	cmp	r3, #0
   13a14:	moveq	r3, #1
   13a18:	movne	r3, #0
   13a1c:	uxtb	r3, r3
   13a20:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13a24:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13a28:	mov	r0, r3
   13a2c:	bl	130b0 <__assert_fail@plt+0x1bbc>
   13a30:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13a34:	mov	r2, r3
   13a38:	mov	r3, #0
   13a3c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   13a40:	adds	ip, r0, r2
   13a44:	str	ip, [fp, #-116]	; 0xffffff8c
   13a48:	adc	r3, r1, r3
   13a4c:	str	r3, [fp, #-112]	; 0xffffff90
   13a50:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   13a54:	strd	r2, [fp, #-36]	; 0xffffffdc
   13a58:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13a5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13a60:	sub	r3, r2, r3
   13a64:	str	r3, [fp, #-56]	; 0xffffffc8
   13a68:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13a6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13a70:	add	r3, r2, r3
   13a74:	str	r3, [fp, #-60]	; 0xffffffc4
   13a78:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13a7c:	cmp	r3, #0
   13a80:	beq	13a94 <__assert_fail@plt+0x25a0>
   13a84:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13a88:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13a8c:	sub	r3, r2, r3
   13a90:	str	r3, [fp, #-64]	; 0xffffffc0
   13a94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13a98:	cmp	r3, #0
   13a9c:	beq	13b60 <__assert_fail@plt+0x266c>
   13aa0:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   13aa4:	eor	r3, r3, #1
   13aa8:	uxtb	r3, r3
   13aac:	cmp	r3, #0
   13ab0:	beq	13b60 <__assert_fail@plt+0x266c>
   13ab4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13ab8:	cmp	r3, #0
   13abc:	beq	13ac8 <__assert_fail@plt+0x25d4>
   13ac0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13ac4:	b	13acc <__assert_fail@plt+0x25d8>
   13ac8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13acc:	str	r3, [fp, #-84]	; 0xffffffac
   13ad0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13ad4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ad8:	orr	r3, r2, r3
   13adc:	cmp	r3, #0
   13ae0:	moveq	r3, #1
   13ae4:	movne	r3, #0
   13ae8:	uxtb	r3, r3
   13aec:	ldr	r2, [fp, #-84]	; 0xffffffac
   13af0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13af4:	mov	r0, r3
   13af8:	bl	130b0 <__assert_fail@plt+0x1bbc>
   13afc:	ldr	r3, [fp, #-84]	; 0xffffffac
   13b00:	mov	r2, r3
   13b04:	mov	r3, #0
   13b08:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   13b0c:	adds	ip, r0, r2
   13b10:	str	ip, [fp, #-124]	; 0xffffff84
   13b14:	adc	r3, r1, r3
   13b18:	str	r3, [fp, #-120]	; 0xffffff88
   13b1c:	ldrd	r2, [fp, #-124]	; 0xffffff84
   13b20:	strd	r2, [fp, #-36]	; 0xffffffdc
   13b24:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13b28:	ldr	r3, [fp, #-84]	; 0xffffffac
   13b2c:	sub	r3, r2, r3
   13b30:	str	r3, [fp, #-56]	; 0xffffffc8
   13b34:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13b38:	ldr	r3, [fp, #-84]	; 0xffffffac
   13b3c:	add	r3, r2, r3
   13b40:	str	r3, [fp, #-60]	; 0xffffffc4
   13b44:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13b48:	cmp	r3, #0
   13b4c:	beq	13b60 <__assert_fail@plt+0x266c>
   13b50:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13b54:	ldr	r3, [fp, #-84]	; 0xffffffac
   13b58:	sub	r3, r2, r3
   13b5c:	str	r3, [fp, #-64]	; 0xffffffc0
   13b60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13b64:	cmp	r3, #0
   13b68:	beq	13b78 <__assert_fail@plt+0x2684>
   13b6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13b70:	cmp	r3, #0
   13b74:	bne	13b90 <__assert_fail@plt+0x269c>
   13b78:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13b7c:	cmp	r3, #0
   13b80:	bne	13c4c <__assert_fail@plt+0x2758>
   13b84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13b88:	cmp	r3, #0
   13b8c:	beq	13c4c <__assert_fail@plt+0x2758>
   13b90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13b94:	cmp	r3, #0
   13b98:	beq	13ba4 <__assert_fail@plt+0x26b0>
   13b9c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13ba0:	b	13ba8 <__assert_fail@plt+0x26b4>
   13ba4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13ba8:	str	r3, [fp, #-88]	; 0xffffffa8
   13bac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13bb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13bb4:	sub	r3, r2, r3
   13bb8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13bbc:	cmp	r2, r3
   13bc0:	bls	13c00 <__assert_fail@plt+0x270c>
   13bc4:	ldr	r3, [fp, #-108]	; 0xffffff94
   13bc8:	mvn	r3, r3
   13bcc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13bd0:	cmp	r2, r3
   13bd4:	bhi	13bfc <__assert_fail@plt+0x2708>
   13bd8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13bdc:	ldr	r3, [fp, #-108]	; 0xffffff94
   13be0:	add	r3, r2, r3
   13be4:	str	r3, [fp, #-48]	; 0xffffffd0
   13be8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13bec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13bf0:	bl	1aa08 <__assert_fail@plt+0x9514>
   13bf4:	str	r0, [fp, #-44]	; 0xffffffd4
   13bf8:	b	13c00 <__assert_fail@plt+0x270c>
   13bfc:	bl	1b1c8 <__assert_fail@plt+0x9cd4>
   13c00:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13c04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13c08:	add	r3, r2, r3
   13c0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13c10:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13c14:	mov	r0, r3
   13c18:	bl	111dc <memcpy@plt>
   13c1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13c20:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13c24:	add	r3, r2, r3
   13c28:	str	r3, [fp, #-40]	; 0xffffffd8
   13c2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13c30:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13c34:	sub	r3, r2, r3
   13c38:	str	r3, [fp, #-56]	; 0xffffffc8
   13c3c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13c40:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13c44:	add	r3, r2, r3
   13c48:	str	r3, [fp, #-60]	; 0xffffffc4
   13c4c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13c50:	cmp	r3, #0
   13c54:	beq	13c6c <__assert_fail@plt+0x2778>
   13c58:	mov	r2, #0
   13c5c:	mov	r3, #0
   13c60:	strd	r2, [fp, #-36]	; 0xffffffdc
   13c64:	mov	r3, #0
   13c68:	strb	r3, [fp, #-49]	; 0xffffffcf
   13c6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13c70:	cmp	r3, #0
   13c74:	bne	13884 <__assert_fail@plt+0x2390>
   13c78:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13c7c:	cmp	r3, #0
   13c80:	bne	13810 <__assert_fail@plt+0x231c>
   13c84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13c88:	cmp	r3, #0
   13c8c:	beq	13cbc <__assert_fail@plt+0x27c8>
   13c90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13c94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c98:	orr	r3, r2, r3
   13c9c:	cmp	r3, #0
   13ca0:	moveq	r3, #1
   13ca4:	movne	r3, #0
   13ca8:	uxtb	r3, r3
   13cac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13cb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cb4:	mov	r0, r3
   13cb8:	bl	130b0 <__assert_fail@plt+0x1bbc>
   13cbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cc0:	bl	16dfc <__assert_fail@plt+0x5908>
   13cc4:	nop	{0}
   13cc8:	sub	sp, fp, #28
   13ccc:	ldrd	r4, [sp]
   13cd0:	ldrd	r6, [sp, #8]
   13cd4:	ldrd	r8, [sp, #16]
   13cd8:	ldr	fp, [sp, #24]
   13cdc:	add	sp, sp, #28
   13ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ce4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13ce8:	strd	r6, [sp, #8]
   13cec:	strd	r8, [sp, #16]
   13cf0:	str	fp, [sp, #24]
   13cf4:	str	lr, [sp, #28]
   13cf8:	add	fp, sp, #28
   13cfc:	sub	sp, sp, #200	; 0xc8
   13d00:	strd	r0, [fp, #-124]	; 0xffffff84
   13d04:	strd	r2, [fp, #-132]	; 0xffffff7c
   13d08:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13d0c:	orrs	r3, r2, r3
   13d10:	beq	13d3c <__assert_fail@plt+0x2848>
   13d14:	ldrd	r0, [fp, #-124]	; 0xffffff84
   13d18:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13d1c:	cmp	r1, r3
   13d20:	cmpeq	r0, r2
   13d24:	bhi	13d3c <__assert_fail@plt+0x2848>
   13d28:	ldrd	r0, [fp, #20]
   13d2c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13d30:	cmp	r3, r1
   13d34:	cmpeq	r2, r0
   13d38:	bls	13d5c <__assert_fail@plt+0x2868>
   13d3c:	movw	r3, #58516	; 0xe494
   13d40:	movt	r3, #1
   13d44:	movw	r2, #867	; 0x363
   13d48:	movw	r1, #57004	; 0xdeac
   13d4c:	movt	r1, #1
   13d50:	movw	r0, #57596	; 0xe0fc
   13d54:	movt	r0, #1
   13d58:	bl	114f4 <__assert_fail@plt>
   13d5c:	ldrd	r0, [fp, #20]
   13d60:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13d64:	bl	1d048 <__assert_fail@plt+0xbb54>
   13d68:	mov	r2, r0
   13d6c:	mov	r3, r1
   13d70:	strd	r2, [fp, #-84]	; 0xffffffac
   13d74:	mov	r2, #1
   13d78:	mov	r3, #0
   13d7c:	strd	r2, [fp, #-36]	; 0xffffffdc
   13d80:	ldrd	r2, [fp, #-84]	; 0xffffffac
   13d84:	subs	r6, r2, #1
   13d88:	sbc	r7, r3, #0
   13d8c:	strd	r6, [fp, #-44]	; 0xffffffd4
   13d90:	mov	r2, #0
   13d94:	mov	r3, #0
   13d98:	strd	r2, [fp, #-52]	; 0xffffffcc
   13d9c:	mov	r3, #1
   13da0:	strb	r3, [fp, #-53]	; 0xffffffcb
   13da4:	mov	r3, #0
   13da8:	strb	r3, [fp, #-54]	; 0xffffffca
   13dac:	ldrd	r2, [fp, #-124]	; 0xffffff84
   13db0:	cmp	r3, #0
   13db4:	cmpeq	r2, #1
   13db8:	bls	14304 <__assert_fail@plt+0x2e10>
   13dbc:	ldrd	r2, [fp, #-124]	; 0xffffff84
   13dc0:	subs	r4, r2, #1
   13dc4:	sbc	r5, r3, #0
   13dc8:	ldrd	r2, [fp, #-84]	; 0xffffffac
   13dcc:	mul	r0, r2, r5
   13dd0:	mul	r1, r4, r3
   13dd4:	add	r1, r0, r1
   13dd8:	umull	r2, r3, r4, r2
   13ddc:	add	r1, r1, r3
   13de0:	mov	r3, r1
   13de4:	subs	r8, r2, #1
   13de8:	sbc	r9, r3, #0
   13dec:	strd	r8, [fp, #-92]	; 0xffffffa4
   13df0:	ldr	r3, [fp, #12]
   13df4:	mov	r0, r3
   13df8:	mov	r1, #0
   13dfc:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13e00:	cmp	r2, r0
   13e04:	sbcs	r3, r3, r1
   13e08:	bge	13e44 <__assert_fail@plt+0x2950>
   13e0c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13e10:	ldr	r3, [fp, #4]
   13e14:	add	r1, r3, r2
   13e18:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13e1c:	ldr	r3, [fp, #12]
   13e20:	sub	r3, r3, r2
   13e24:	mov	r2, r3
   13e28:	ldr	r0, [fp, #4]
   13e2c:	bl	111b8 <memmove@plt>
   13e30:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13e34:	ldr	r3, [fp, #12]
   13e38:	sub	r3, r3, r2
   13e3c:	str	r3, [fp, #12]
   13e40:	b	13ed4 <__assert_fail@plt+0x29e0>
   13e44:	ldr	r3, [fp, #12]
   13e48:	mov	r0, r3
   13e4c:	mov	r1, #0
   13e50:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13e54:	subs	ip, r2, r0
   13e58:	str	ip, [fp, #-140]	; 0xffffff74
   13e5c:	sbc	r3, r3, r1
   13e60:	str	r3, [fp, #-136]	; 0xffffff78
   13e64:	mov	r3, #1
   13e68:	str	r3, [sp]
   13e6c:	ldrd	r2, [fp, #-140]	; 0xffffff74
   13e70:	mov	r0, #0
   13e74:	bl	11284 <lseek64@plt>
   13e78:	mov	r2, r0
   13e7c:	mov	r3, r1
   13e80:	cmp	r2, #0
   13e84:	sbcs	r3, r3, #0
   13e88:	bge	13ecc <__assert_fail@plt+0x29d8>
   13e8c:	bl	113bc <__errno_location@plt>
   13e90:	mov	r3, r0
   13e94:	ldr	r4, [r3]
   13e98:	movw	r3, #62628	; 0xf4a4
   13e9c:	movt	r3, #2
   13ea0:	ldr	r3, [r3]
   13ea4:	mov	r2, r3
   13ea8:	mov	r1, #3
   13eac:	mov	r0, #0
   13eb0:	bl	19760 <__assert_fail@plt+0x826c>
   13eb4:	mov	r3, r0
   13eb8:	movw	r2, #57440	; 0xe060
   13ebc:	movt	r2, #1
   13ec0:	mov	r1, r4
   13ec4:	mov	r0, #1
   13ec8:	bl	112d8 <error@plt>
   13ecc:	mvn	r3, #0
   13ed0:	str	r3, [fp, #12]
   13ed4:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13ed8:	strd	r2, [fp, #-52]	; 0xffffffcc
   13edc:	ldrd	r2, [fp, #-124]	; 0xffffff84
   13ee0:	subs	r1, r2, #1
   13ee4:	str	r1, [fp, #-172]	; 0xffffff54
   13ee8:	sbc	r3, r3, #0
   13eec:	str	r3, [fp, #-168]	; 0xffffff58
   13ef0:	ldrd	r2, [fp, #-172]	; 0xffffff54
   13ef4:	strd	r2, [fp, #-36]	; 0xffffffdc
   13ef8:	ldrd	r2, [fp, #-84]	; 0xffffffac
   13efc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13f00:	mul	r0, r3, r1
   13f04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13f08:	mul	r1, r2, r1
   13f0c:	add	r0, r0, r1
   13f10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13f14:	umull	r2, r3, r1, r2
   13f18:	add	r1, r0, r3
   13f1c:	mov	r3, r1
   13f20:	subs	r1, r2, #1
   13f24:	str	r1, [fp, #-148]	; 0xffffff6c
   13f28:	sbc	r3, r3, #0
   13f2c:	str	r3, [fp, #-144]	; 0xffffff70
   13f30:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   13f34:	strd	r2, [fp, #-44]	; 0xffffffd4
   13f38:	b	14304 <__assert_fail@plt+0x2e10>
   13f3c:	ldr	r3, [fp, #4]
   13f40:	str	r3, [fp, #-60]	; 0xffffffc4
   13f44:	ldr	r3, [fp, #12]
   13f48:	cmn	r3, #1
   13f4c:	beq	13f64 <__assert_fail@plt+0x2a70>
   13f50:	ldr	r3, [fp, #12]
   13f54:	str	r3, [fp, #-64]	; 0xffffffc0
   13f58:	mvn	r3, #0
   13f5c:	str	r3, [fp, #12]
   13f60:	b	13fc4 <__assert_fail@plt+0x2ad0>
   13f64:	ldr	r2, [fp, #8]
   13f68:	ldr	r1, [fp, #4]
   13f6c:	mov	r0, #0
   13f70:	bl	19a94 <__assert_fail@plt+0x85a0>
   13f74:	str	r0, [fp, #-64]	; 0xffffffc0
   13f78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13f7c:	cmn	r3, #1
   13f80:	bne	13fc4 <__assert_fail@plt+0x2ad0>
   13f84:	bl	113bc <__errno_location@plt>
   13f88:	mov	r3, r0
   13f8c:	ldr	r4, [r3]
   13f90:	movw	r3, #62628	; 0xf4a4
   13f94:	movt	r3, #2
   13f98:	ldr	r3, [r3]
   13f9c:	mov	r2, r3
   13fa0:	mov	r1, #3
   13fa4:	mov	r0, #0
   13fa8:	bl	19760 <__assert_fail@plt+0x826c>
   13fac:	mov	r3, r0
   13fb0:	movw	r2, #57440	; 0xe060
   13fb4:	movt	r2, #1
   13fb8:	mov	r1, r4
   13fbc:	mov	r0, #1
   13fc0:	bl	112d8 <error@plt>
   13fc4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13fc8:	cmp	r3, #0
   13fcc:	beq	1431c <__assert_fail@plt+0x2e28>
   13fd0:	ldrd	r0, [fp, #20]
   13fd4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   13fd8:	subs	ip, r0, r2
   13fdc:	str	ip, [fp, #-156]	; 0xffffff64
   13fe0:	sbc	r3, r1, r3
   13fe4:	str	r3, [fp, #-152]	; 0xffffff68
   13fe8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13fec:	mov	r0, r3
   13ff0:	mov	r1, #0
   13ff4:	ldrd	r2, [fp, #-156]	; 0xffffff64
   13ff8:	cmp	r0, r2
   13ffc:	sbcs	ip, r1, r3
   14000:	bge	1400c <__assert_fail@plt+0x2b18>
   14004:	mov	r2, r0
   14008:	mov	r3, r1
   1400c:	mov	r3, r2
   14010:	str	r3, [fp, #-64]	; 0xffffffc0
   14014:	mov	r3, #0
   14018:	strb	r3, [fp, #-54]	; 0xffffffca
   1401c:	ldr	r2, [fp, #4]
   14020:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14024:	add	r3, r2, r3
   14028:	str	r3, [fp, #-96]	; 0xffffffa0
   1402c:	b	142f4 <__assert_fail@plt+0x2e00>
   14030:	mov	r3, #0
   14034:	strb	r3, [fp, #-65]	; 0xffffffbf
   14038:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1403c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   14040:	subs	ip, r0, r2
   14044:	str	ip, [fp, #-164]	; 0xffffff5c
   14048:	sbc	r3, r1, r3
   1404c:	str	r3, [fp, #-160]	; 0xffffff60
   14050:	ldrd	r4, [fp, #-164]	; 0xffffff5c
   14054:	cmp	r4, #0
   14058:	sbcs	r3, r5, #0
   1405c:	bge	14068 <__assert_fail@plt+0x2b74>
   14060:	mov	r4, #0
   14064:	mov	r5, #0
   14068:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1406c:	mov	r0, r3
   14070:	mov	r1, #0
   14074:	mov	r2, r4
   14078:	mov	r3, r5
   1407c:	cmp	r0, r2
   14080:	sbcs	ip, r1, r3
   14084:	bge	14090 <__assert_fail@plt+0x2b9c>
   14088:	mov	r2, r0
   1408c:	mov	r3, r1
   14090:	strd	r2, [fp, #-108]	; 0xffffff94
   14094:	ldr	r2, [fp, #-108]	; 0xffffff94
   14098:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1409c:	add	r0, r3, r2
   140a0:	movw	r3, #61796	; 0xf164
   140a4:	movt	r3, #2
   140a8:	ldr	r1, [r3]
   140ac:	ldr	r2, [fp, #-108]	; 0xffffff94
   140b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   140b4:	sub	r3, r3, r2
   140b8:	mov	r2, r3
   140bc:	bl	11404 <memchr@plt>
   140c0:	str	r0, [fp, #-72]	; 0xffffffb8
   140c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   140c8:	cmp	r3, #0
   140cc:	beq	140e8 <__assert_fail@plt+0x2bf4>
   140d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   140d4:	add	r3, r3, #1
   140d8:	str	r3, [fp, #-72]	; 0xffffffb8
   140dc:	mov	r3, #1
   140e0:	strb	r3, [fp, #-65]	; 0xffffffbf
   140e4:	b	140f0 <__assert_fail@plt+0x2bfc>
   140e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   140ec:	str	r3, [fp, #-72]	; 0xffffffb8
   140f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   140f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   140f8:	sub	r3, r2, r3
   140fc:	str	r3, [fp, #-112]	; 0xffffff90
   14100:	ldrd	r0, [fp, #-124]	; 0xffffff84
   14104:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14108:	cmp	r1, r3
   1410c:	cmpeq	r0, r2
   14110:	bne	14164 <__assert_fail@plt+0x2c70>
   14114:	ldr	r2, [fp, #-112]	; 0xffffff90
   14118:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1411c:	mov	r0, #1
   14120:	bl	16f90 <__assert_fail@plt+0x5a9c>
   14124:	mov	r2, r0
   14128:	ldr	r3, [fp, #-112]	; 0xffffff90
   1412c:	cmp	r3, r2
   14130:	beq	14184 <__assert_fail@plt+0x2c90>
   14134:	bl	113bc <__errno_location@plt>
   14138:	mov	r3, r0
   1413c:	ldr	r4, [r3]
   14140:	movw	r0, #57628	; 0xe11c
   14144:	movt	r0, #1
   14148:	bl	1135c <gettext@plt>
   1414c:	mov	r3, r0
   14150:	movw	r2, #57440	; 0xe060
   14154:	movt	r2, #1
   14158:	mov	r1, r4
   1415c:	mov	r0, #1
   14160:	bl	112d8 <error@plt>
   14164:	ldrd	r2, [fp, #-124]	; 0xffffff84
   14168:	orrs	r3, r2, r3
   1416c:	bne	14184 <__assert_fail@plt+0x2c90>
   14170:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   14174:	ldr	r2, [fp, #-112]	; 0xffffff90
   14178:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1417c:	mov	r0, r3
   14180:	bl	130b0 <__assert_fail@plt+0x1bbc>
   14184:	ldr	r3, [fp, #-112]	; 0xffffff90
   14188:	mov	r0, r3
   1418c:	mov	r1, #0
   14190:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   14194:	adds	ip, r2, r0
   14198:	str	ip, [fp, #-180]	; 0xffffff4c
   1419c:	adc	r3, r3, r1
   141a0:	str	r3, [fp, #-176]	; 0xffffff50
   141a4:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   141a8:	strd	r2, [fp, #-52]	; 0xffffffcc
   141ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
   141b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   141b4:	add	r3, r2, r3
   141b8:	str	r3, [fp, #-60]	; 0xffffffc4
   141bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   141c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   141c4:	sub	r3, r2, r3
   141c8:	str	r3, [fp, #-64]	; 0xffffffc0
   141cc:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   141d0:	strb	r3, [fp, #-53]	; 0xffffffcb
   141d4:	b	142d4 <__assert_fail@plt+0x2de0>
   141d8:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   141dc:	eor	r3, r3, #1
   141e0:	uxtb	r3, r3
   141e4:	cmp	r3, #0
   141e8:	beq	14208 <__assert_fail@plt+0x2d14>
   141ec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   141f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   141f4:	cmp	r2, r3
   141f8:	bne	14208 <__assert_fail@plt+0x2d14>
   141fc:	mov	r3, #1
   14200:	strb	r3, [fp, #-54]	; 0xffffffca
   14204:	b	142f4 <__assert_fail@plt+0x2e00>
   14208:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1420c:	adds	r1, r2, #1
   14210:	str	r1, [fp, #-188]	; 0xffffff44
   14214:	adc	r3, r3, #0
   14218:	str	r3, [fp, #-184]	; 0xffffff48
   1421c:	ldrd	r2, [fp, #-188]	; 0xffffff44
   14220:	strd	r2, [fp, #-36]	; 0xffffffdc
   14224:	ldrd	r2, [fp, #-124]	; 0xffffff84
   14228:	orrs	r3, r2, r3
   1422c:	beq	14244 <__assert_fail@plt+0x2d50>
   14230:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14234:	ldrd	r2, [fp, #-124]	; 0xffffff84
   14238:	cmp	r1, r3
   1423c:	cmpeq	r0, r2
   14240:	bhi	14398 <__assert_fail@plt+0x2ea4>
   14244:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14248:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   1424c:	cmp	r1, r3
   14250:	cmpeq	r0, r2
   14254:	bne	14278 <__assert_fail@plt+0x2d84>
   14258:	ldrd	r2, [fp, #20]
   1425c:	subs	r1, r2, #1
   14260:	str	r1, [fp, #-196]	; 0xffffff3c
   14264:	sbc	r3, r3, #0
   14268:	str	r3, [fp, #-192]	; 0xffffff40
   1426c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   14270:	strd	r2, [fp, #-44]	; 0xffffffd4
   14274:	b	14298 <__assert_fail@plt+0x2da4>
   14278:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1427c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   14280:	adds	ip, r0, r2
   14284:	str	ip, [fp, #-204]	; 0xffffff34
   14288:	adc	r3, r1, r3
   1428c:	str	r3, [fp, #-200]	; 0xffffff38
   14290:	ldrd	r2, [fp, #-204]	; 0xffffff34
   14294:	strd	r2, [fp, #-44]	; 0xffffffd4
   14298:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   1429c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   142a0:	cmp	r2, r0
   142a4:	sbcs	r3, r3, r1
   142a8:	bge	142cc <__assert_fail@plt+0x2dd8>
   142ac:	ldrd	r2, [fp, #-124]	; 0xffffff84
   142b0:	orrs	r3, r2, r3
   142b4:	bne	142d4 <__assert_fail@plt+0x2de0>
   142b8:	mov	r2, #0
   142bc:	mov	r1, #0
   142c0:	mov	r0, #1
   142c4:	bl	130b0 <__assert_fail@plt+0x1bbc>
   142c8:	b	142d4 <__assert_fail@plt+0x2de0>
   142cc:	mov	r3, #0
   142d0:	strb	r3, [fp, #-65]	; 0xffffffbf
   142d4:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   142d8:	cmp	r3, #0
   142dc:	bne	141d8 <__assert_fail@plt+0x2ce4>
   142e0:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   142e4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   142e8:	cmp	r2, r0
   142ec:	sbcs	r3, r3, r1
   142f0:	blt	141d8 <__assert_fail@plt+0x2ce4>
   142f4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   142f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   142fc:	cmp	r2, r3
   14300:	bne	14030 <__assert_fail@plt+0x2b3c>
   14304:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   14308:	ldrd	r2, [fp, #20]
   1430c:	cmp	r0, r2
   14310:	sbcs	r3, r1, r3
   14314:	blt	13f3c <__assert_fail@plt+0x2a48>
   14318:	b	14320 <__assert_fail@plt+0x2e2c>
   1431c:	nop	{0}
   14320:	ldrb	r3, [fp, #-54]	; 0xffffffca
   14324:	cmp	r3, #0
   14328:	beq	1435c <__assert_fail@plt+0x2e68>
   1432c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14330:	adds	r1, r2, #1
   14334:	str	r1, [fp, #-212]	; 0xffffff2c
   14338:	adc	r3, r3, #0
   1433c:	str	r3, [fp, #-208]	; 0xffffff30
   14340:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   14344:	strd	r2, [fp, #-36]	; 0xffffffdc
   14348:	b	1435c <__assert_fail@plt+0x2e68>
   1434c:	mov	r2, #0
   14350:	mov	r1, #0
   14354:	mov	r0, #1
   14358:	bl	130b0 <__assert_fail@plt+0x1bbc>
   1435c:	ldrd	r2, [fp, #-124]	; 0xffffff84
   14360:	orrs	r3, r2, r3
   14364:	bne	1439c <__assert_fail@plt+0x2ea8>
   14368:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1436c:	adds	r1, r2, #1
   14370:	str	r1, [fp, #-220]	; 0xffffff24
   14374:	adc	r1, r3, #0
   14378:	str	r1, [fp, #-216]	; 0xffffff28
   1437c:	ldrd	r0, [fp, #-220]	; 0xffffff24
   14380:	strd	r0, [fp, #-36]	; 0xffffffdc
   14384:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   14388:	cmp	r1, r3
   1438c:	cmpeq	r0, r2
   14390:	bcs	1434c <__assert_fail@plt+0x2e58>
   14394:	b	1439c <__assert_fail@plt+0x2ea8>
   14398:	nop	{0}
   1439c:	sub	sp, fp, #28
   143a0:	ldrd	r4, [sp]
   143a4:	ldrd	r6, [sp, #8]
   143a8:	ldrd	r8, [sp, #16]
   143ac:	ldr	fp, [sp, #24]
   143b0:	add	sp, sp, #28
   143b4:	pop	{pc}		; (ldr pc, [sp], #4)
   143b8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   143bc:	strd	r6, [sp, #8]
   143c0:	strd	r8, [sp, #16]
   143c4:	str	fp, [sp, #24]
   143c8:	str	lr, [sp, #28]
   143cc:	add	fp, sp, #28
   143d0:	sub	sp, sp, #56	; 0x38
   143d4:	strd	r0, [fp, #-60]	; 0xffffffc4
   143d8:	strd	r2, [fp, #-68]	; 0xffffffbc
   143dc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   143e0:	orrs	r3, r2, r3
   143e4:	beq	1441c <__assert_fail@plt+0x2f28>
   143e8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   143ec:	orrs	r3, r2, r3
   143f0:	beq	1441c <__assert_fail@plt+0x2f28>
   143f4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   143f8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   143fc:	cmp	r1, r3
   14400:	cmpeq	r0, r2
   14404:	bhi	1441c <__assert_fail@plt+0x2f28>
   14408:	ldrd	r2, [fp, #20]
   1440c:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   14410:	cmp	r1, r3
   14414:	cmpeq	r0, r2
   14418:	bls	1443c <__assert_fail@plt+0x2f48>
   1441c:	movw	r3, #58536	; 0xe4a8
   14420:	movt	r3, #1
   14424:	mov	r2, #996	; 0x3e4
   14428:	movw	r1, #57004	; 0xdeac
   1442c:	movt	r1, #1
   14430:	movw	r0, #57640	; 0xe128
   14434:	movt	r0, #1
   14438:	bl	114f4 <__assert_fail@plt>
   1443c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   14440:	subs	r4, r2, #1
   14444:	sbc	r5, r3, #0
   14448:	ldrd	r0, [fp, #20]
   1444c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   14450:	bl	1d048 <__assert_fail@plt+0xbb54>
   14454:	mov	r2, r0
   14458:	mov	r3, r1
   1445c:	mul	r0, r2, r5
   14460:	mul	r1, r4, r3
   14464:	add	r1, r0, r1
   14468:	umull	r2, r3, r4, r2
   1446c:	add	r1, r1, r3
   14470:	mov	r3, r1
   14474:	strd	r2, [fp, #-36]	; 0xffffffdc
   14478:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   1447c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   14480:	cmp	r1, r3
   14484:	cmpeq	r0, r2
   14488:	beq	144c8 <__assert_fail@plt+0x2fd4>
   1448c:	ldrd	r0, [fp, #20]
   14490:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   14494:	bl	1d048 <__assert_fail@plt+0xbb54>
   14498:	mov	r2, r0
   1449c:	mov	r3, r1
   144a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   144a4:	mul	r0, r3, r1
   144a8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   144ac:	mul	r1, r2, r1
   144b0:	add	r1, r0, r1
   144b4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   144b8:	umull	r2, r3, r0, r2
   144bc:	add	r1, r1, r3
   144c0:	mov	r3, r1
   144c4:	b	144cc <__assert_fail@plt+0x2fd8>
   144c8:	ldrd	r2, [fp, #20]
   144cc:	strd	r2, [fp, #-52]	; 0xffffffcc
   144d0:	ldr	r3, [fp, #12]
   144d4:	mov	r2, r3
   144d8:	mov	r3, #0
   144dc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   144e0:	cmp	r0, r2
   144e4:	sbcs	r3, r1, r3
   144e8:	bge	14524 <__assert_fail@plt+0x3030>
   144ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   144f0:	ldr	r2, [fp, #4]
   144f4:	add	r1, r2, r3
   144f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   144fc:	ldr	r2, [fp, #12]
   14500:	sub	r3, r2, r3
   14504:	mov	r2, r3
   14508:	ldr	r0, [fp, #4]
   1450c:	bl	111b8 <memmove@plt>
   14510:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14514:	ldr	r2, [fp, #12]
   14518:	sub	r3, r2, r3
   1451c:	str	r3, [fp, #12]
   14520:	b	14720 <__assert_fail@plt+0x322c>
   14524:	ldr	r3, [fp, #12]
   14528:	mov	r2, r3
   1452c:	mov	r3, #0
   14530:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14534:	subs	ip, r0, r2
   14538:	str	ip, [fp, #-76]	; 0xffffffb4
   1453c:	sbc	r3, r1, r3
   14540:	str	r3, [fp, #-72]	; 0xffffffb8
   14544:	mov	r3, #1
   14548:	str	r3, [sp]
   1454c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   14550:	mov	r0, #0
   14554:	bl	11284 <lseek64@plt>
   14558:	mov	r2, r0
   1455c:	mov	r3, r1
   14560:	cmp	r2, #0
   14564:	sbcs	r3, r3, #0
   14568:	bge	145ac <__assert_fail@plt+0x30b8>
   1456c:	bl	113bc <__errno_location@plt>
   14570:	mov	r3, r0
   14574:	ldr	r4, [r3]
   14578:	movw	r3, #62628	; 0xf4a4
   1457c:	movt	r3, #2
   14580:	ldr	r3, [r3]
   14584:	mov	r2, r3
   14588:	mov	r1, #3
   1458c:	mov	r0, #0
   14590:	bl	19760 <__assert_fail@plt+0x826c>
   14594:	mov	r3, r0
   14598:	movw	r2, #57440	; 0xe060
   1459c:	movt	r2, #1
   145a0:	mov	r1, r4
   145a4:	mov	r0, #1
   145a8:	bl	112d8 <error@plt>
   145ac:	mvn	r3, #0
   145b0:	str	r3, [fp, #12]
   145b4:	b	14720 <__assert_fail@plt+0x322c>
   145b8:	ldr	r3, [fp, #12]
   145bc:	cmn	r3, #1
   145c0:	beq	145d8 <__assert_fail@plt+0x30e4>
   145c4:	ldr	r3, [fp, #12]
   145c8:	str	r3, [fp, #-40]	; 0xffffffd8
   145cc:	mvn	r3, #0
   145d0:	str	r3, [fp, #12]
   145d4:	b	14638 <__assert_fail@plt+0x3144>
   145d8:	ldr	r2, [fp, #8]
   145dc:	ldr	r1, [fp, #4]
   145e0:	mov	r0, #0
   145e4:	bl	19a94 <__assert_fail@plt+0x85a0>
   145e8:	str	r0, [fp, #-40]	; 0xffffffd8
   145ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   145f0:	cmn	r3, #1
   145f4:	bne	14638 <__assert_fail@plt+0x3144>
   145f8:	bl	113bc <__errno_location@plt>
   145fc:	mov	r3, r0
   14600:	ldr	r4, [r3]
   14604:	movw	r3, #62628	; 0xf4a4
   14608:	movt	r3, #2
   1460c:	ldr	r3, [r3]
   14610:	mov	r2, r3
   14614:	mov	r1, #3
   14618:	mov	r0, #0
   1461c:	bl	19760 <__assert_fail@plt+0x826c>
   14620:	mov	r3, r0
   14624:	movw	r2, #57440	; 0xe060
   14628:	movt	r2, #1
   1462c:	mov	r1, r4
   14630:	mov	r0, #1
   14634:	bl	112d8 <error@plt>
   14638:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1463c:	cmp	r3, #0
   14640:	beq	14738 <__assert_fail@plt+0x3244>
   14644:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   14648:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1464c:	subs	r8, r0, r2
   14650:	sbc	r9, r1, r3
   14654:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14658:	mov	r2, r3
   1465c:	mov	r3, #0
   14660:	mov	r0, r8
   14664:	mov	r1, r9
   14668:	cmp	r2, r0
   1466c:	sbcs	ip, r3, r1
   14670:	bge	1467c <__assert_fail@plt+0x3188>
   14674:	mov	r0, r2
   14678:	mov	r1, r3
   1467c:	mov	r3, r0
   14680:	str	r3, [fp, #-40]	; 0xffffffd8
   14684:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14688:	ldr	r1, [fp, #4]
   1468c:	mov	r0, #1
   14690:	bl	16f90 <__assert_fail@plt+0x5a9c>
   14694:	mov	r2, r0
   14698:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1469c:	cmp	r3, r2
   146a0:	beq	14704 <__assert_fail@plt+0x3210>
   146a4:	bl	113bc <__errno_location@plt>
   146a8:	mov	r3, r0
   146ac:	ldr	r3, [r3]
   146b0:	mov	r0, r3
   146b4:	bl	119fc <__assert_fail@plt+0x508>
   146b8:	mov	r3, r0
   146bc:	eor	r3, r3, #1
   146c0:	uxtb	r3, r3
   146c4:	cmp	r3, #0
   146c8:	beq	14704 <__assert_fail@plt+0x3210>
   146cc:	bl	113bc <__errno_location@plt>
   146d0:	mov	r3, r0
   146d4:	ldr	r4, [r3]
   146d8:	movw	r2, #57676	; 0xe14c
   146dc:	movt	r2, #1
   146e0:	mov	r1, #3
   146e4:	mov	r0, #0
   146e8:	bl	19760 <__assert_fail@plt+0x826c>
   146ec:	mov	r3, r0
   146f0:	movw	r2, #57440	; 0xe060
   146f4:	movt	r2, #1
   146f8:	mov	r1, r4
   146fc:	mov	r0, #1
   14700:	bl	112d8 <error@plt>
   14704:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14708:	mov	r2, r3
   1470c:	mov	r3, #0
   14710:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14714:	adds	r6, r0, r2
   14718:	adc	r7, r1, r3
   1471c:	strd	r6, [fp, #-36]	; 0xffffffdc
   14720:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14724:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   14728:	cmp	r0, r2
   1472c:	sbcs	r3, r1, r3
   14730:	blt	145b8 <__assert_fail@plt+0x30c4>
   14734:	b	1473c <__assert_fail@plt+0x3248>
   14738:	nop	{0}
   1473c:	nop	{0}
   14740:	sub	sp, fp, #28
   14744:	ldrd	r4, [sp]
   14748:	ldrd	r6, [sp, #8]
   1474c:	ldrd	r8, [sp, #16]
   14750:	ldr	fp, [sp, #24]
   14754:	add	sp, sp, #28
   14758:	pop	{pc}		; (ldr pc, [sp], #4)
   1475c:	str	r4, [sp, #-12]!
   14760:	str	fp, [sp, #4]
   14764:	str	lr, [sp, #8]
   14768:	add	fp, sp, #8
   1476c:	sub	sp, sp, #36	; 0x24
   14770:	str	r0, [fp, #-32]	; 0xffffffe0
   14774:	str	r1, [fp, #-36]	; 0xffffffdc
   14778:	str	r2, [fp, #-40]	; 0xffffffd8
   1477c:	mov	r3, #0
   14780:	strb	r3, [fp, #-13]
   14784:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14788:	lsl	r3, r3, #4
   1478c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14790:	add	r3, r2, r3
   14794:	ldr	r3, [r3, #4]
   14798:	cmp	r3, #0
   1479c:	bge	14ab4 <__assert_fail@plt+0x35c0>
   147a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   147a4:	cmp	r3, #0
   147a8:	beq	147b8 <__assert_fail@plt+0x32c4>
   147ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   147b0:	sub	r3, r3, #1
   147b4:	b	147c0 <__assert_fail@plt+0x32cc>
   147b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147bc:	sub	r3, r3, #1
   147c0:	str	r3, [fp, #-24]	; 0xffffffe8
   147c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   147c8:	lsl	r3, r3, #4
   147cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   147d0:	add	r3, r2, r3
   147d4:	ldr	r3, [r3, #4]
   147d8:	cmn	r3, #1
   147dc:	bne	14804 <__assert_fail@plt+0x3310>
   147e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   147e4:	lsl	r3, r3, #4
   147e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   147ec:	add	r3, r2, r3
   147f0:	ldr	r3, [r3]
   147f4:	mov	r0, r3
   147f8:	bl	126e0 <__assert_fail@plt+0x11ec>
   147fc:	str	r0, [fp, #-20]	; 0xffffffec
   14800:	b	14828 <__assert_fail@plt+0x3334>
   14804:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14808:	lsl	r3, r3, #4
   1480c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14810:	add	r3, r2, r3
   14814:	ldr	r3, [r3]
   14818:	movw	r1, #3073	; 0xc01
   1481c:	mov	r0, r3
   14820:	bl	16c0c <__assert_fail@plt+0x5718>
   14824:	str	r0, [fp, #-20]	; 0xffffffec
   14828:	ldr	r3, [fp, #-20]	; 0xffffffec
   1482c:	cmp	r3, #0
   14830:	bge	149ec <__assert_fail@plt+0x34f8>
   14834:	bl	113bc <__errno_location@plt>
   14838:	mov	r3, r0
   1483c:	ldr	r3, [r3]
   14840:	cmp	r3, #24
   14844:	beq	148a4 <__assert_fail@plt+0x33b0>
   14848:	bl	113bc <__errno_location@plt>
   1484c:	mov	r3, r0
   14850:	ldr	r3, [r3]
   14854:	cmp	r3, #23
   14858:	beq	148a4 <__assert_fail@plt+0x33b0>
   1485c:	bl	113bc <__errno_location@plt>
   14860:	mov	r3, r0
   14864:	ldr	r4, [r3]
   14868:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1486c:	lsl	r3, r3, #4
   14870:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14874:	add	r3, r2, r3
   14878:	ldr	r3, [r3]
   1487c:	mov	r2, r3
   14880:	mov	r1, #3
   14884:	mov	r0, #0
   14888:	bl	19760 <__assert_fail@plt+0x826c>
   1488c:	mov	r3, r0
   14890:	movw	r2, #57440	; 0xe060
   14894:	movt	r2, #1
   14898:	mov	r1, r4
   1489c:	mov	r0, #1
   148a0:	bl	112d8 <error@plt>
   148a4:	mov	r3, #1
   148a8:	strb	r3, [fp, #-13]
   148ac:	b	1492c <__assert_fail@plt+0x3438>
   148b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148b4:	cmp	r3, #0
   148b8:	beq	148c8 <__assert_fail@plt+0x33d4>
   148bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148c0:	sub	r3, r3, #1
   148c4:	b	148d0 <__assert_fail@plt+0x33dc>
   148c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   148cc:	sub	r3, r3, #1
   148d0:	str	r3, [fp, #-24]	; 0xffffffe8
   148d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   148d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   148dc:	cmp	r2, r3
   148e0:	bne	1492c <__assert_fail@plt+0x3438>
   148e4:	bl	113bc <__errno_location@plt>
   148e8:	mov	r3, r0
   148ec:	ldr	r4, [r3]
   148f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   148f4:	lsl	r3, r3, #4
   148f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   148fc:	add	r3, r2, r3
   14900:	ldr	r3, [r3]
   14904:	mov	r2, r3
   14908:	mov	r1, #3
   1490c:	mov	r0, #0
   14910:	bl	19760 <__assert_fail@plt+0x826c>
   14914:	mov	r3, r0
   14918:	movw	r2, #57440	; 0xe060
   1491c:	movt	r2, #1
   14920:	mov	r1, r4
   14924:	mov	r0, #1
   14928:	bl	112d8 <error@plt>
   1492c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14930:	lsl	r3, r3, #4
   14934:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14938:	add	r3, r2, r3
   1493c:	ldr	r3, [r3, #4]
   14940:	cmp	r3, #0
   14944:	blt	148b0 <__assert_fail@plt+0x33bc>
   14948:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1494c:	lsl	r3, r3, #4
   14950:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14954:	add	r3, r2, r3
   14958:	ldr	r3, [r3, #8]
   1495c:	mov	r0, r3
   14960:	bl	16b08 <__assert_fail@plt+0x5614>
   14964:	mov	r3, r0
   14968:	cmp	r3, #0
   1496c:	beq	149b8 <__assert_fail@plt+0x34c4>
   14970:	bl	113bc <__errno_location@plt>
   14974:	mov	r3, r0
   14978:	ldr	r4, [r3]
   1497c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14980:	lsl	r3, r3, #4
   14984:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14988:	add	r3, r2, r3
   1498c:	ldr	r3, [r3]
   14990:	mov	r2, r3
   14994:	mov	r1, #3
   14998:	mov	r0, #0
   1499c:	bl	19760 <__assert_fail@plt+0x826c>
   149a0:	mov	r3, r0
   149a4:	movw	r2, #57440	; 0xe060
   149a8:	movt	r2, #1
   149ac:	mov	r1, r4
   149b0:	mov	r0, #1
   149b4:	bl	112d8 <error@plt>
   149b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   149bc:	lsl	r3, r3, #4
   149c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   149c4:	add	r3, r2, r3
   149c8:	mov	r2, #0
   149cc:	str	r2, [r3, #8]
   149d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   149d4:	lsl	r3, r3, #4
   149d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   149dc:	add	r3, r2, r3
   149e0:	mvn	r2, #1
   149e4:	str	r2, [r3, #4]
   149e8:	b	147c4 <__assert_fail@plt+0x32d0>
   149ec:	nop	{0}
   149f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   149f4:	lsl	r3, r3, #4
   149f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   149fc:	add	r3, r2, r3
   14a00:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a04:	str	r2, [r3, #4]
   14a08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14a0c:	lsl	r3, r3, #4
   14a10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14a14:	add	r4, r2, r3
   14a18:	movw	r1, #57680	; 0xe150
   14a1c:	movt	r1, #1
   14a20:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a24:	bl	11140 <fdopen@plt>
   14a28:	mov	r3, r0
   14a2c:	str	r3, [r4, #8]
   14a30:	ldr	r3, [r4, #8]
   14a34:	cmp	r3, #0
   14a38:	bne	14a84 <__assert_fail@plt+0x3590>
   14a3c:	bl	113bc <__errno_location@plt>
   14a40:	mov	r3, r0
   14a44:	ldr	r4, [r3]
   14a48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14a4c:	lsl	r3, r3, #4
   14a50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14a54:	add	r3, r2, r3
   14a58:	ldr	r3, [r3]
   14a5c:	mov	r2, r3
   14a60:	mov	r1, #3
   14a64:	mov	r0, #0
   14a68:	bl	19760 <__assert_fail@plt+0x826c>
   14a6c:	mov	r3, r0
   14a70:	movw	r2, #57440	; 0xe060
   14a74:	movt	r2, #1
   14a78:	mov	r1, r4
   14a7c:	mov	r0, #1
   14a80:	bl	112d8 <error@plt>
   14a84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14a88:	lsl	r3, r3, #4
   14a8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14a90:	add	r2, r2, r3
   14a94:	movw	r3, #62332	; 0xf37c
   14a98:	movt	r3, #2
   14a9c:	ldr	r3, [r3]
   14aa0:	str	r3, [r2, #12]
   14aa4:	movw	r3, #62332	; 0xf37c
   14aa8:	movt	r3, #2
   14aac:	mov	r2, #0
   14ab0:	str	r2, [r3]
   14ab4:	ldrb	r3, [fp, #-13]
   14ab8:	mov	r0, r3
   14abc:	sub	sp, fp, #8
   14ac0:	ldr	r4, [sp]
   14ac4:	ldr	fp, [sp, #4]
   14ac8:	add	sp, sp, #8
   14acc:	pop	{pc}		; (ldr pc, [sp], #4)
   14ad0:	strd	r4, [sp, #-20]!	; 0xffffffec
   14ad4:	str	r6, [sp, #8]
   14ad8:	str	fp, [sp, #12]
   14adc:	str	lr, [sp, #16]
   14ae0:	add	fp, sp, #16
   14ae4:	sub	sp, sp, #76	; 0x4c
   14ae8:	strd	r0, [fp, #-84]	; 0xffffffac
   14aec:	strd	r2, [fp, #-92]	; 0xffffffa4
   14af0:	mov	r3, #0
   14af4:	strb	r3, [fp, #-21]	; 0xffffffeb
   14af8:	mov	r3, #0
   14afc:	strb	r3, [fp, #-22]	; 0xffffffea
   14b00:	mov	r3, #0
   14b04:	str	r3, [fp, #-32]	; 0xffffffe0
   14b08:	ldrd	r2, [fp, #-84]	; 0xffffffac
   14b0c:	orrs	r3, r2, r3
   14b10:	beq	14b24 <__assert_fail@plt+0x3630>
   14b14:	mov	r2, #1
   14b18:	mov	r3, #0
   14b1c:	strd	r2, [fp, #-44]	; 0xffffffd4
   14b20:	b	14c28 <__assert_fail@plt+0x3734>
   14b24:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   14b28:	mvn	r0, #0
   14b2c:	mov	r1, #0
   14b30:	cmp	r3, r1
   14b34:	cmpeq	r2, r0
   14b38:	bls	14b40 <__assert_fail@plt+0x364c>
   14b3c:	bl	1b1c8 <__assert_fail@plt+0x9cd4>
   14b40:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14b44:	mov	r1, #16
   14b48:	mov	r0, r3
   14b4c:	bl	1ab84 <__assert_fail@plt+0x9690>
   14b50:	mov	r3, r0
   14b54:	mov	r2, r3
   14b58:	ldr	r3, [fp, #12]
   14b5c:	str	r2, [r3]
   14b60:	ldr	r3, [fp, #12]
   14b64:	ldr	r3, [r3]
   14b68:	str	r3, [fp, #-32]	; 0xffffffe0
   14b6c:	mov	r3, #0
   14b70:	str	r3, [fp, #-28]	; 0xffffffe4
   14b74:	b	14bfc <__assert_fail@plt+0x3708>
   14b78:	bl	120e8 <__assert_fail@plt+0xbf4>
   14b7c:	movw	r3, #62608	; 0xf490
   14b80:	movt	r3, #2
   14b84:	ldr	r1, [r3]
   14b88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b8c:	lsl	r3, r3, #4
   14b90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14b94:	add	r6, r2, r3
   14b98:	mov	r0, r1
   14b9c:	bl	1b180 <__assert_fail@plt+0x9c8c>
   14ba0:	mov	r3, r0
   14ba4:	str	r3, [r6]
   14ba8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14bac:	lsl	r3, r3, #4
   14bb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14bb4:	add	r3, r2, r3
   14bb8:	mvn	r2, #0
   14bbc:	str	r2, [r3, #4]
   14bc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14bc4:	lsl	r3, r3, #4
   14bc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14bcc:	add	r3, r2, r3
   14bd0:	mov	r2, #0
   14bd4:	str	r2, [r3, #8]
   14bd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14bdc:	lsl	r3, r3, #4
   14be0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14be4:	add	r3, r2, r3
   14be8:	mov	r2, #0
   14bec:	str	r2, [r3, #12]
   14bf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14bf4:	add	r3, r3, #1
   14bf8:	str	r3, [fp, #-28]	; 0xffffffe4
   14bfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c00:	mov	r2, r3
   14c04:	mov	r3, #0
   14c08:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   14c0c:	cmp	r1, r3
   14c10:	cmpeq	r0, r2
   14c14:	bhi	14b78 <__assert_fail@plt+0x3684>
   14c18:	mov	r3, #0
   14c1c:	str	r3, [fp, #-28]	; 0xffffffe4
   14c20:	mov	r3, #0
   14c24:	strb	r3, [fp, #-23]	; 0xffffffe9
   14c28:	ldr	r3, [fp, #4]
   14c2c:	str	r3, [fp, #-48]	; 0xffffffd0
   14c30:	ldr	r2, [fp, #8]
   14c34:	ldr	r1, [fp, #4]
   14c38:	mov	r0, #0
   14c3c:	bl	19a94 <__assert_fail@plt+0x85a0>
   14c40:	str	r0, [fp, #-60]	; 0xffffffc4
   14c44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14c48:	cmn	r3, #1
   14c4c:	bne	14c90 <__assert_fail@plt+0x379c>
   14c50:	bl	113bc <__errno_location@plt>
   14c54:	mov	r3, r0
   14c58:	ldr	r4, [r3]
   14c5c:	movw	r3, #62628	; 0xf4a4
   14c60:	movt	r3, #2
   14c64:	ldr	r3, [r3]
   14c68:	mov	r2, r3
   14c6c:	mov	r1, #3
   14c70:	mov	r0, #0
   14c74:	bl	19760 <__assert_fail@plt+0x826c>
   14c78:	mov	r3, r0
   14c7c:	movw	r2, #57440	; 0xe060
   14c80:	movt	r2, #1
   14c84:	mov	r1, r4
   14c88:	mov	r0, #1
   14c8c:	bl	112d8 <error@plt>
   14c90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14c94:	cmp	r3, #0
   14c98:	beq	15148 <__assert_fail@plt+0x3c54>
   14c9c:	ldr	r2, [fp, #4]
   14ca0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14ca4:	add	r3, r2, r3
   14ca8:	str	r3, [fp, #-64]	; 0xffffffc0
   14cac:	b	15134 <__assert_fail@plt+0x3c40>
   14cb0:	mov	r3, #0
   14cb4:	strb	r3, [fp, #-49]	; 0xffffffcf
   14cb8:	movw	r3, #61796	; 0xf164
   14cbc:	movt	r3, #2
   14cc0:	ldr	r1, [r3]
   14cc4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14cc8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14ccc:	sub	r3, r2, r3
   14cd0:	mov	r2, r3
   14cd4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14cd8:	bl	11404 <memchr@plt>
   14cdc:	str	r0, [fp, #-56]	; 0xffffffc8
   14ce0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14ce4:	cmp	r3, #0
   14ce8:	beq	14d04 <__assert_fail@plt+0x3810>
   14cec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14cf0:	add	r3, r3, #1
   14cf4:	str	r3, [fp, #-56]	; 0xffffffc8
   14cf8:	mov	r3, #1
   14cfc:	strb	r3, [fp, #-49]	; 0xffffffcf
   14d00:	b	14d0c <__assert_fail@plt+0x3818>
   14d04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14d08:	str	r3, [fp, #-56]	; 0xffffffc8
   14d0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14d10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14d14:	sub	r3, r2, r3
   14d18:	str	r3, [fp, #-68]	; 0xffffffbc
   14d1c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   14d20:	orrs	r3, r2, r3
   14d24:	beq	14e60 <__assert_fail@plt+0x396c>
   14d28:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   14d2c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   14d30:	cmp	r1, r3
   14d34:	cmpeq	r0, r2
   14d38:	bne	14da0 <__assert_fail@plt+0x38ac>
   14d3c:	movw	r3, #62738	; 0xf512
   14d40:	movt	r3, #2
   14d44:	ldrb	r3, [r3]
   14d48:	cmp	r3, #0
   14d4c:	beq	14da0 <__assert_fail@plt+0x38ac>
   14d50:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14d54:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14d58:	mov	r0, #1
   14d5c:	bl	16f90 <__assert_fail@plt+0x5a9c>
   14d60:	mov	r2, r0
   14d64:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14d68:	cmp	r3, r2
   14d6c:	beq	14e20 <__assert_fail@plt+0x392c>
   14d70:	bl	113bc <__errno_location@plt>
   14d74:	mov	r3, r0
   14d78:	ldr	r4, [r3]
   14d7c:	movw	r0, #57628	; 0xe11c
   14d80:	movt	r0, #1
   14d84:	bl	1135c <gettext@plt>
   14d88:	mov	r3, r0
   14d8c:	movw	r2, #57440	; 0xe060
   14d90:	movt	r2, #1
   14d94:	mov	r1, r4
   14d98:	mov	r0, #1
   14d9c:	bl	112d8 <error@plt>
   14da0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   14da4:	ldrd	r2, [fp, #-84]	; 0xffffffac
   14da8:	cmp	r1, r3
   14dac:	cmpeq	r0, r2
   14db0:	bne	14e20 <__assert_fail@plt+0x392c>
   14db4:	movw	r3, #62316	; 0xf36c
   14db8:	movt	r3, #2
   14dbc:	ldr	r3, [r3]
   14dc0:	mov	r2, #1
   14dc4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14dc8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14dcc:	bl	11200 <fwrite_unlocked@plt>
   14dd0:	mov	r3, r0
   14dd4:	cmp	r3, #1
   14dd8:	beq	14e20 <__assert_fail@plt+0x392c>
   14ddc:	movw	r3, #62316	; 0xf36c
   14de0:	movt	r3, #2
   14de4:	ldr	r3, [r3]
   14de8:	mov	r0, r3
   14dec:	bl	11494 <clearerr_unlocked@plt>
   14df0:	bl	113bc <__errno_location@plt>
   14df4:	mov	r3, r0
   14df8:	ldr	r4, [r3]
   14dfc:	movw	r0, #57628	; 0xe11c
   14e00:	movt	r0, #1
   14e04:	bl	1135c <gettext@plt>
   14e08:	mov	r3, r0
   14e0c:	movw	r2, #57440	; 0xe060
   14e10:	movt	r2, #1
   14e14:	mov	r1, r4
   14e18:	mov	r0, #1
   14e1c:	bl	112d8 <error@plt>
   14e20:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14e24:	cmp	r3, #0
   14e28:	beq	1512c <__assert_fail@plt+0x3c38>
   14e2c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   14e30:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   14e34:	cmp	r1, r3
   14e38:	cmpeq	r0, r2
   14e3c:	beq	14e50 <__assert_fail@plt+0x395c>
   14e40:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   14e44:	adds	r4, r2, #1
   14e48:	adc	r5, r3, #0
   14e4c:	b	14e58 <__assert_fail@plt+0x3964>
   14e50:	mov	r4, #1
   14e54:	mov	r5, #0
   14e58:	strd	r4, [fp, #-44]	; 0xffffffd4
   14e5c:	b	1512c <__assert_fail@plt+0x3c38>
   14e60:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14e64:	mov	r2, r3
   14e68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e70:	bl	1475c <__assert_fail@plt+0x3268>
   14e74:	mov	r3, r0
   14e78:	mov	r2, r3
   14e7c:	ldrb	r3, [fp, #-23]	; 0xffffffe9
   14e80:	orr	r3, r2, r3
   14e84:	uxtb	r3, r3
   14e88:	cmp	r3, #0
   14e8c:	movne	r3, #1
   14e90:	moveq	r3, #0
   14e94:	strb	r3, [fp, #-23]	; 0xffffffe9
   14e98:	movw	r3, #62738	; 0xf512
   14e9c:	movt	r3, #2
   14ea0:	ldrb	r3, [r3]
   14ea4:	cmp	r3, #0
   14ea8:	beq	14f50 <__assert_fail@plt+0x3a5c>
   14eac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14eb0:	lsl	r3, r3, #4
   14eb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14eb8:	add	r3, r2, r3
   14ebc:	ldr	r3, [r3, #4]
   14ec0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14ec4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14ec8:	mov	r0, r3
   14ecc:	bl	16f90 <__assert_fail@plt+0x5a9c>
   14ed0:	mov	r2, r0
   14ed4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14ed8:	cmp	r3, r2
   14edc:	beq	14ff0 <__assert_fail@plt+0x3afc>
   14ee0:	bl	113bc <__errno_location@plt>
   14ee4:	mov	r3, r0
   14ee8:	ldr	r3, [r3]
   14eec:	mov	r0, r3
   14ef0:	bl	119fc <__assert_fail@plt+0x508>
   14ef4:	mov	r3, r0
   14ef8:	eor	r3, r3, #1
   14efc:	uxtb	r3, r3
   14f00:	cmp	r3, #0
   14f04:	beq	14ff0 <__assert_fail@plt+0x3afc>
   14f08:	bl	113bc <__errno_location@plt>
   14f0c:	mov	r3, r0
   14f10:	ldr	r4, [r3]
   14f14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f18:	lsl	r3, r3, #4
   14f1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14f20:	add	r3, r2, r3
   14f24:	ldr	r3, [r3]
   14f28:	mov	r2, r3
   14f2c:	mov	r1, #3
   14f30:	mov	r0, #0
   14f34:	bl	19760 <__assert_fail@plt+0x826c>
   14f38:	mov	r3, r0
   14f3c:	movw	r2, #57440	; 0xe060
   14f40:	movt	r2, #1
   14f44:	mov	r1, r4
   14f48:	mov	r0, #1
   14f4c:	bl	112d8 <error@plt>
   14f50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f54:	lsl	r3, r3, #4
   14f58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14f5c:	add	r3, r2, r3
   14f60:	ldr	r3, [r3, #8]
   14f64:	mov	r2, #1
   14f68:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14f6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14f70:	bl	11200 <fwrite_unlocked@plt>
   14f74:	mov	r3, r0
   14f78:	cmp	r3, #1
   14f7c:	beq	14ff0 <__assert_fail@plt+0x3afc>
   14f80:	bl	113bc <__errno_location@plt>
   14f84:	mov	r3, r0
   14f88:	ldr	r3, [r3]
   14f8c:	mov	r0, r3
   14f90:	bl	119fc <__assert_fail@plt+0x508>
   14f94:	mov	r3, r0
   14f98:	eor	r3, r3, #1
   14f9c:	uxtb	r3, r3
   14fa0:	cmp	r3, #0
   14fa4:	beq	14ff0 <__assert_fail@plt+0x3afc>
   14fa8:	bl	113bc <__errno_location@plt>
   14fac:	mov	r3, r0
   14fb0:	ldr	r4, [r3]
   14fb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14fb8:	lsl	r3, r3, #4
   14fbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14fc0:	add	r3, r2, r3
   14fc4:	ldr	r3, [r3]
   14fc8:	mov	r2, r3
   14fcc:	mov	r1, #3
   14fd0:	mov	r0, #0
   14fd4:	bl	19760 <__assert_fail@plt+0x826c>
   14fd8:	mov	r3, r0
   14fdc:	movw	r2, #57440	; 0xe060
   14fe0:	movt	r2, #1
   14fe4:	mov	r1, r4
   14fe8:	mov	r0, #1
   14fec:	bl	112d8 <error@plt>
   14ff0:	bl	113bc <__errno_location@plt>
   14ff4:	mov	r3, r0
   14ff8:	ldr	r3, [r3]
   14ffc:	mov	r0, r3
   15000:	bl	119fc <__assert_fail@plt+0x508>
   15004:	mov	r3, r0
   15008:	eor	r3, r3, #1
   1500c:	uxtb	r3, r3
   15010:	cmp	r3, #0
   15014:	beq	15020 <__assert_fail@plt+0x3b2c>
   15018:	mov	r3, #1
   1501c:	strb	r3, [fp, #-22]	; 0xffffffea
   15020:	ldrb	r3, [fp, #-23]	; 0xffffffe9
   15024:	cmp	r3, #0
   15028:	beq	150cc <__assert_fail@plt+0x3bd8>
   1502c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15030:	lsl	r3, r3, #4
   15034:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15038:	add	r3, r2, r3
   1503c:	ldr	r3, [r3, #8]
   15040:	mov	r0, r3
   15044:	bl	16b08 <__assert_fail@plt+0x5614>
   15048:	mov	r3, r0
   1504c:	cmp	r3, #0
   15050:	beq	1509c <__assert_fail@plt+0x3ba8>
   15054:	bl	113bc <__errno_location@plt>
   15058:	mov	r3, r0
   1505c:	ldr	r4, [r3]
   15060:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15064:	lsl	r3, r3, #4
   15068:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1506c:	add	r3, r2, r3
   15070:	ldr	r3, [r3]
   15074:	mov	r2, r3
   15078:	mov	r1, #3
   1507c:	mov	r0, #0
   15080:	bl	19760 <__assert_fail@plt+0x826c>
   15084:	mov	r3, r0
   15088:	movw	r2, #57440	; 0xe060
   1508c:	movt	r2, #1
   15090:	mov	r1, r4
   15094:	mov	r0, #1
   15098:	bl	112d8 <error@plt>
   1509c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150a0:	lsl	r3, r3, #4
   150a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   150a8:	add	r3, r2, r3
   150ac:	mov	r2, #0
   150b0:	str	r2, [r3, #8]
   150b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150b8:	lsl	r3, r3, #4
   150bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   150c0:	add	r3, r2, r3
   150c4:	mvn	r2, #1
   150c8:	str	r2, [r3, #4]
   150cc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   150d0:	cmp	r3, #0
   150d4:	beq	1512c <__assert_fail@plt+0x3c38>
   150d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150dc:	add	r3, r3, #1
   150e0:	str	r3, [fp, #-28]	; 0xffffffe4
   150e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150e8:	mov	r2, r3
   150ec:	mov	r3, #0
   150f0:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   150f4:	cmp	r1, r3
   150f8:	cmpeq	r0, r2
   150fc:	bne	1512c <__assert_fail@plt+0x3c38>
   15100:	mov	r3, #1
   15104:	strb	r3, [fp, #-21]	; 0xffffffeb
   15108:	ldrb	r3, [fp, #-22]	; 0xffffffea
   1510c:	eor	r3, r3, #1
   15110:	uxtb	r3, r3
   15114:	cmp	r3, #0
   15118:	bne	15150 <__assert_fail@plt+0x3c5c>
   1511c:	mov	r3, #0
   15120:	strb	r3, [fp, #-22]	; 0xffffffea
   15124:	mov	r3, #0
   15128:	str	r3, [fp, #-28]	; 0xffffffe4
   1512c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15130:	str	r3, [fp, #-48]	; 0xffffffd0
   15134:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15138:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1513c:	cmp	r2, r3
   15140:	bne	14cb0 <__assert_fail@plt+0x37bc>
   15144:	b	14c28 <__assert_fail@plt+0x3734>
   15148:	nop	{0}
   1514c:	b	15154 <__assert_fail@plt+0x3c60>
   15150:	nop	{0}
   15154:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15158:	orrs	r3, r2, r3
   1515c:	bne	152a0 <__assert_fail@plt+0x3dac>
   15160:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   15164:	cmp	r3, #0
   15168:	beq	15174 <__assert_fail@plt+0x3c80>
   1516c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15170:	b	15178 <__assert_fail@plt+0x3c84>
   15174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15178:	str	r3, [fp, #-72]	; 0xffffffb8
   1517c:	mov	r3, #0
   15180:	str	r3, [fp, #-28]	; 0xffffffe4
   15184:	b	15284 <__assert_fail@plt+0x3d90>
   15188:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1518c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15190:	cmp	r2, r3
   15194:	bcc	151ec <__assert_fail@plt+0x3cf8>
   15198:	movw	r3, #62737	; 0xf511
   1519c:	movt	r3, #2
   151a0:	ldrb	r3, [r3]
   151a4:	eor	r3, r3, #1
   151a8:	uxtb	r3, r3
   151ac:	cmp	r3, #0
   151b0:	beq	151ec <__assert_fail@plt+0x3cf8>
   151b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   151b8:	mov	r2, r3
   151bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151c4:	bl	1475c <__assert_fail@plt+0x3268>
   151c8:	mov	r3, r0
   151cc:	mov	r2, r3
   151d0:	ldrb	r3, [fp, #-23]	; 0xffffffe9
   151d4:	orr	r3, r2, r3
   151d8:	uxtb	r3, r3
   151dc:	cmp	r3, #0
   151e0:	movne	r3, #1
   151e4:	moveq	r3, #0
   151e8:	strb	r3, [fp, #-23]	; 0xffffffe9
   151ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   151f0:	lsl	r3, r3, #4
   151f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   151f8:	add	r3, r2, r3
   151fc:	ldr	r3, [r3, #4]
   15200:	cmp	r3, #0
   15204:	blt	15260 <__assert_fail@plt+0x3d6c>
   15208:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1520c:	lsl	r3, r3, #4
   15210:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15214:	add	r3, r2, r3
   15218:	ldr	r0, [r3, #8]
   1521c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15220:	lsl	r3, r3, #4
   15224:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15228:	add	r3, r2, r3
   1522c:	ldr	r1, [r3, #4]
   15230:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15234:	lsl	r3, r3, #4
   15238:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1523c:	add	r3, r2, r3
   15240:	ldr	ip, [r3, #12]
   15244:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15248:	lsl	r3, r3, #4
   1524c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15250:	add	r3, r2, r3
   15254:	ldr	r3, [r3]
   15258:	mov	r2, ip
   1525c:	bl	12cf8 <__assert_fail@plt+0x1804>
   15260:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15264:	lsl	r3, r3, #4
   15268:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1526c:	add	r3, r2, r3
   15270:	mvn	r2, #1
   15274:	str	r2, [r3, #4]
   15278:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1527c:	add	r3, r3, #1
   15280:	str	r3, [fp, #-28]	; 0xffffffe4
   15284:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15288:	mov	r2, r3
   1528c:	mov	r3, #0
   15290:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   15294:	cmp	r1, r3
   15298:	cmpeq	r0, r2
   1529c:	bhi	15188 <__assert_fail@plt+0x3c94>
   152a0:	nop	{0}
   152a4:	sub	sp, fp, #16
   152a8:	ldrd	r4, [sp]
   152ac:	ldr	r6, [sp, #8]
   152b0:	ldr	fp, [sp, #12]
   152b4:	add	sp, sp, #16
   152b8:	pop	{pc}		; (ldr pc, [sp], #4)
   152bc:	strd	r4, [sp, #-20]!	; 0xffffffec
   152c0:	str	r6, [sp, #8]
   152c4:	str	fp, [sp, #12]
   152c8:	str	lr, [sp, #16]
   152cc:	add	fp, sp, #16
   152d0:	sub	sp, sp, #44	; 0x2c
   152d4:	str	r0, [fp, #-24]	; 0xffffffe8
   152d8:	str	r1, [fp, #-28]	; 0xffffffe4
   152dc:	str	r2, [fp, #-32]	; 0xffffffe0
   152e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   152e4:	add	r4, r3, #1
   152e8:	movw	r0, #57684	; 0xe154
   152ec:	movt	r0, #1
   152f0:	bl	1135c <gettext@plt>
   152f4:	mov	r2, r0
   152f8:	mov	r3, #0
   152fc:	str	r3, [sp, #16]
   15300:	str	r2, [sp, #12]
   15304:	movw	r3, #54436	; 0xd4a4
   15308:	movt	r3, #1
   1530c:	str	r3, [sp, #8]
   15310:	mvn	r2, #0
   15314:	mvn	r3, #0
   15318:	strd	r2, [sp]
   1531c:	mov	r2, #1
   15320:	mov	r3, #0
   15324:	mov	r0, r4
   15328:	bl	1b3fc <__assert_fail@plt+0x9f08>
   1532c:	mov	r2, r0
   15330:	mov	r3, r1
   15334:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15338:	strd	r2, [r1]
   1533c:	movw	r3, #62320	; 0xf370
   15340:	movt	r3, #2
   15344:	ldr	r3, [r3]
   15348:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1534c:	cmp	r2, r3
   15350:	beq	153c0 <__assert_fail@plt+0x3ecc>
   15354:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15358:	mov	r2, #0
   1535c:	strb	r2, [r3]
   15360:	movw	r3, #62320	; 0xf370
   15364:	movt	r3, #2
   15368:	ldr	r6, [r3]
   1536c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15370:	ldrd	r4, [r3]
   15374:	movw	r0, #57712	; 0xe170
   15378:	movt	r0, #1
   1537c:	bl	1135c <gettext@plt>
   15380:	mov	r2, r0
   15384:	mov	r3, #0
   15388:	str	r3, [sp, #16]
   1538c:	str	r2, [sp, #12]
   15390:	movw	r3, #54436	; 0xd4a4
   15394:	movt	r3, #1
   15398:	str	r3, [sp, #8]
   1539c:	strd	r4, [sp]
   153a0:	mov	r2, #1
   153a4:	mov	r3, #0
   153a8:	mov	r0, r6
   153ac:	bl	1b3fc <__assert_fail@plt+0x9f08>
   153b0:	mov	r2, r0
   153b4:	mov	r3, r1
   153b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153bc:	strd	r2, [r1]
   153c0:	nop	{0}
   153c4:	sub	sp, fp, #16
   153c8:	ldrd	r4, [sp]
   153cc:	ldr	r6, [sp, #8]
   153d0:	ldr	fp, [sp, #12]
   153d4:	add	sp, sp, #16
   153d8:	pop	{pc}		; (ldr pc, [sp], #4)
   153dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   153e0:	strd	r6, [sp, #8]
   153e4:	strd	r8, [sp, #16]
   153e8:	str	fp, [sp, #24]
   153ec:	str	lr, [sp, #28]
   153f0:	add	fp, sp, #28
   153f4:	sub	sp, sp, #376	; 0x178
   153f8:	str	r0, [fp, #-296]	; 0xfffffed8
   153fc:	str	r1, [fp, #-300]	; 0xfffffed4
   15400:	mov	r3, #0
   15404:	str	r3, [fp, #-32]	; 0xffffffe0
   15408:	mov	r3, #0
   1540c:	str	r3, [fp, #-36]	; 0xffffffdc
   15410:	bl	113b0 <getpagesize@plt>
   15414:	mov	r3, r0
   15418:	str	r3, [fp, #-64]	; 0xffffffc0
   1541c:	mov	r2, #0
   15420:	mov	r3, #0
   15424:	strd	r2, [fp, #-92]	; 0xffffffa4
   15428:	mov	r2, #0
   1542c:	mov	r3, #0
   15430:	strd	r2, [fp, #-100]	; 0xffffff9c
   15434:	mov	r3, #0
   15438:	str	r3, [fp, #-40]	; 0xffffffd8
   1543c:	mvn	r2, #0
   15440:	mvn	r3, #-2147483648	; 0x80000000
   15444:	strd	r2, [fp, #-52]	; 0xffffffcc
   15448:	ldr	r3, [fp, #-300]	; 0xfffffed4
   1544c:	ldr	r3, [r3]
   15450:	mov	r0, r3
   15454:	bl	170fc <__assert_fail@plt+0x5c08>
   15458:	movw	r1, #54436	; 0xd4a4
   1545c:	movt	r1, #1
   15460:	mov	r0, #6
   15464:	bl	11440 <setlocale@plt>
   15468:	movw	r1, #57736	; 0xe188
   1546c:	movt	r1, #1
   15470:	movw	r0, #54460	; 0xd4bc
   15474:	movt	r0, #1
   15478:	bl	114a0 <bindtextdomain@plt>
   1547c:	movw	r0, #54460	; 0xd4bc
   15480:	movt	r0, #1
   15484:	bl	1123c <textdomain@plt>
   15488:	movw	r0, #27064	; 0x69b8
   1548c:	movt	r0, #1
   15490:	bl	1d220 <__assert_fail@plt+0xbd2c>
   15494:	movw	r0, #57676	; 0xe14c
   15498:	movt	r0, #1
   1549c:	bl	118b4 <__assert_fail@plt+0x3c0>
   154a0:	mov	r2, r0
   154a4:	movw	r3, #62628	; 0xf4a4
   154a8:	movt	r3, #2
   154ac:	str	r2, [r3]
   154b0:	movw	r0, #57760	; 0xe1a0
   154b4:	movt	r0, #1
   154b8:	bl	118b4 <__assert_fail@plt+0x3c0>
   154bc:	mov	r2, r0
   154c0:	movw	r3, #62604	; 0xf48c
   154c4:	movt	r3, #2
   154c8:	str	r2, [r3]
   154cc:	movw	r3, #62304	; 0xf360
   154d0:	movt	r3, #2
   154d4:	ldr	r3, [r3]
   154d8:	cmp	r3, #0
   154dc:	beq	154f0 <__assert_fail@plt+0x3ffc>
   154e0:	movw	r3, #62304	; 0xf360
   154e4:	movt	r3, #2
   154e8:	ldr	r3, [r3]
   154ec:	b	154f4 <__assert_fail@plt+0x4000>
   154f0:	mov	r3, #1
   154f4:	str	r3, [fp, #-68]	; 0xffffffbc
   154f8:	mov	r3, #0
   154fc:	str	r3, [sp]
   15500:	movw	r3, #54840	; 0xd638
   15504:	movt	r3, #1
   15508:	movw	r2, #57764	; 0xe1a4
   1550c:	movt	r2, #1
   15510:	ldr	r1, [fp, #-300]	; 0xfffffed4
   15514:	ldr	r0, [fp, #-296]	; 0xfffffed8
   15518:	bl	11338 <getopt_long@plt>
   1551c:	str	r0, [fp, #-72]	; 0xffffffb8
   15520:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15524:	cmn	r3, #1
   15528:	beq	160b0 <__assert_fail@plt+0x4bbc>
   1552c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15530:	cmp	r3, #101	; 0x65
   15534:	beq	15f90 <__assert_fail@plt+0x4a9c>
   15538:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1553c:	cmp	r3, #101	; 0x65
   15540:	bgt	155bc <__assert_fail@plt+0x40c8>
   15544:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15548:	cmp	r3, #57	; 0x39
   1554c:	bgt	15578 <__assert_fail@plt+0x4084>
   15550:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15554:	cmp	r3, #48	; 0x30
   15558:	bge	15c4c <__assert_fail@plt+0x4758>
   1555c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15560:	cmn	r3, #3
   15564:	beq	16040 <__assert_fail@plt+0x4b4c>
   15568:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1556c:	cmn	r3, #2
   15570:	beq	16038 <__assert_fail@plt+0x4b44>
   15574:	b	16098 <__assert_fail@plt+0x4ba4>
   15578:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1557c:	cmp	r3, #97	; 0x61
   15580:	beq	1566c <__assert_fail@plt+0x4178>
   15584:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15588:	cmp	r3, #97	; 0x61
   1558c:	bgt	155a0 <__assert_fail@plt+0x40ac>
   15590:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15594:	cmp	r3, #67	; 0x43
   15598:	beq	15894 <__assert_fail@plt+0x43a0>
   1559c:	b	16098 <__assert_fail@plt+0x4ba4>
   155a0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   155a4:	cmp	r3, #98	; 0x62
   155a8:	beq	1575c <__assert_fail@plt+0x4268>
   155ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   155b0:	cmp	r3, #100	; 0x64
   155b4:	beq	15e30 <__assert_fail@plt+0x493c>
   155b8:	b	16098 <__assert_fail@plt+0x4ba4>
   155bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   155c0:	cmp	r3, #120	; 0x78
   155c4:	beq	15e30 <__assert_fail@plt+0x493c>
   155c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   155cc:	cmp	r3, #120	; 0x78
   155d0:	bgt	15618 <__assert_fail@plt+0x4124>
   155d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   155d8:	cmp	r3, #110	; 0x6e
   155dc:	beq	15930 <__assert_fail@plt+0x443c>
   155e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   155e4:	cmp	r3, #110	; 0x6e
   155e8:	bgt	155fc <__assert_fail@plt+0x4108>
   155ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   155f0:	cmp	r3, #108	; 0x6c
   155f4:	beq	157f8 <__assert_fail@plt+0x4304>
   155f8:	b	16098 <__assert_fail@plt+0x4ba4>
   155fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15600:	cmp	r3, #116	; 0x74
   15604:	beq	15b24 <__assert_fail@plt+0x4630>
   15608:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1560c:	cmp	r3, #117	; 0x75
   15610:	beq	15b10 <__assert_fail@plt+0x461c>
   15614:	b	16098 <__assert_fail@plt+0x4ba4>
   15618:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1561c:	movw	r2, #257	; 0x101
   15620:	cmp	r3, r2
   15624:	beq	15fa4 <__assert_fail@plt+0x4ab0>
   15628:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1562c:	movw	r2, #257	; 0x101
   15630:	cmp	r3, r2
   15634:	bgt	15648 <__assert_fail@plt+0x4154>
   15638:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1563c:	cmp	r3, #256	; 0x100
   15640:	beq	16024 <__assert_fail@plt+0x4b30>
   15644:	b	16098 <__assert_fail@plt+0x4ba4>
   15648:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1564c:	movw	r2, #258	; 0x102
   15650:	cmp	r3, r2
   15654:	beq	15fc0 <__assert_fail@plt+0x4acc>
   15658:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1565c:	movw	r2, #259	; 0x103
   15660:	cmp	r3, r2
   15664:	beq	156d4 <__assert_fail@plt+0x41e0>
   15668:	b	16098 <__assert_fail@plt+0x4ba4>
   1566c:	movw	r3, #62320	; 0xf370
   15670:	movt	r3, #2
   15674:	ldr	r4, [r3]
   15678:	movw	r0, #57792	; 0xe1c0
   1567c:	movt	r0, #1
   15680:	bl	1135c <gettext@plt>
   15684:	mov	r2, r0
   15688:	mov	r3, #0
   1568c:	str	r3, [sp, #16]
   15690:	str	r2, [sp, #12]
   15694:	movw	r3, #54436	; 0xd4a4
   15698:	movt	r3, #1
   1569c:	str	r3, [sp, #8]
   156a0:	mvn	r2, #-1073741824	; 0xc0000000
   156a4:	mov	r3, #0
   156a8:	strd	r2, [sp]
   156ac:	mov	r2, #0
   156b0:	mov	r3, #0
   156b4:	mov	r0, r4
   156b8:	bl	1b3fc <__assert_fail@plt+0x9f08>
   156bc:	mov	r2, r0
   156c0:	mov	r3, r1
   156c4:	movw	r3, #62616	; 0xf498
   156c8:	movt	r3, #2
   156cc:	str	r2, [r3]
   156d0:	b	160a4 <__assert_fail@plt+0x4bb0>
   156d4:	movw	r3, #62320	; 0xf370
   156d8:	movt	r3, #2
   156dc:	ldr	r3, [r3]
   156e0:	mov	r0, r3
   156e4:	bl	16828 <__assert_fail@plt+0x5334>
   156e8:	mov	r2, r0
   156ec:	movw	r3, #62320	; 0xf370
   156f0:	movt	r3, #2
   156f4:	ldr	r3, [r3]
   156f8:	cmp	r2, r3
   156fc:	beq	15740 <__assert_fail@plt+0x424c>
   15700:	movw	r0, #57816	; 0xe1d8
   15704:	movt	r0, #1
   15708:	bl	1135c <gettext@plt>
   1570c:	mov	r4, r0
   15710:	movw	r3, #62320	; 0xf370
   15714:	movt	r3, #2
   15718:	ldr	r3, [r3]
   1571c:	mov	r0, r3
   15720:	bl	19a5c <__assert_fail@plt+0x8568>
   15724:	mov	r3, r0
   15728:	mov	r2, r4
   1572c:	mov	r1, #0
   15730:	mov	r0, #0
   15734:	bl	112d8 <error@plt>
   15738:	mov	r0, #1
   1573c:	bl	11c90 <__assert_fail@plt+0x79c>
   15740:	movw	r3, #62320	; 0xf370
   15744:	movt	r3, #2
   15748:	ldr	r2, [r3]
   1574c:	movw	r3, #62624	; 0xf4a0
   15750:	movt	r3, #2
   15754:	str	r2, [r3]
   15758:	b	160a4 <__assert_fail@plt+0x4bb0>
   1575c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15760:	cmp	r3, #0
   15764:	beq	15790 <__assert_fail@plt+0x429c>
   15768:	movw	r0, #57864	; 0xe208
   1576c:	movt	r0, #1
   15770:	bl	1135c <gettext@plt>
   15774:	mov	r3, r0
   15778:	mov	r2, r3
   1577c:	mov	r1, #0
   15780:	mov	r0, #0
   15784:	bl	112d8 <error@plt>
   15788:	mov	r0, #1
   1578c:	bl	11c90 <__assert_fail@plt+0x79c>
   15790:	mov	r3, #1
   15794:	str	r3, [fp, #-32]	; 0xffffffe0
   15798:	movw	r3, #62320	; 0xf370
   1579c:	movt	r3, #2
   157a0:	ldr	r4, [r3]
   157a4:	movw	r0, #57900	; 0xe22c
   157a8:	movt	r0, #1
   157ac:	bl	1135c <gettext@plt>
   157b0:	mov	r2, r0
   157b4:	mov	r3, #0
   157b8:	str	r3, [sp, #16]
   157bc:	str	r2, [sp, #12]
   157c0:	movw	r3, #58556	; 0xe4bc
   157c4:	movt	r3, #1
   157c8:	str	r3, [sp, #8]
   157cc:	mvn	r2, #0
   157d0:	mvn	r3, #-2147483648	; 0x80000000
   157d4:	strd	r2, [sp]
   157d8:	mov	r2, #1
   157dc:	mov	r3, #0
   157e0:	mov	r0, r4
   157e4:	bl	1b3fc <__assert_fail@plt+0x9f08>
   157e8:	mov	r2, r0
   157ec:	mov	r3, r1
   157f0:	strd	r2, [fp, #-100]	; 0xffffff9c
   157f4:	b	160a4 <__assert_fail@plt+0x4bb0>
   157f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   157fc:	cmp	r3, #0
   15800:	beq	1582c <__assert_fail@plt+0x4338>
   15804:	movw	r0, #57864	; 0xe208
   15808:	movt	r0, #1
   1580c:	bl	1135c <gettext@plt>
   15810:	mov	r3, r0
   15814:	mov	r2, r3
   15818:	mov	r1, #0
   1581c:	mov	r0, #0
   15820:	bl	112d8 <error@plt>
   15824:	mov	r0, #1
   15828:	bl	11c90 <__assert_fail@plt+0x79c>
   1582c:	mov	r3, #3
   15830:	str	r3, [fp, #-32]	; 0xffffffe0
   15834:	movw	r3, #62320	; 0xf370
   15838:	movt	r3, #2
   1583c:	ldr	r4, [r3]
   15840:	movw	r0, #57924	; 0xe244
   15844:	movt	r0, #1
   15848:	bl	1135c <gettext@plt>
   1584c:	mov	r2, r0
   15850:	mov	r3, #0
   15854:	str	r3, [sp, #16]
   15858:	str	r2, [sp, #12]
   1585c:	movw	r3, #54436	; 0xd4a4
   15860:	movt	r3, #1
   15864:	str	r3, [sp, #8]
   15868:	mvn	r2, #0
   1586c:	mvn	r3, #0
   15870:	strd	r2, [sp]
   15874:	mov	r2, #1
   15878:	mov	r3, #0
   1587c:	mov	r0, r4
   15880:	bl	1b3fc <__assert_fail@plt+0x9f08>
   15884:	mov	r2, r0
   15888:	mov	r3, r1
   1588c:	strd	r2, [fp, #-100]	; 0xffffff9c
   15890:	b	160a4 <__assert_fail@plt+0x4bb0>
   15894:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15898:	cmp	r3, #0
   1589c:	beq	158c8 <__assert_fail@plt+0x43d4>
   158a0:	movw	r0, #57864	; 0xe208
   158a4:	movt	r0, #1
   158a8:	bl	1135c <gettext@plt>
   158ac:	mov	r3, r0
   158b0:	mov	r2, r3
   158b4:	mov	r1, #0
   158b8:	mov	r0, #0
   158bc:	bl	112d8 <error@plt>
   158c0:	mov	r0, #1
   158c4:	bl	11c90 <__assert_fail@plt+0x79c>
   158c8:	mov	r3, #2
   158cc:	str	r3, [fp, #-32]	; 0xffffffe0
   158d0:	movw	r3, #62320	; 0xf370
   158d4:	movt	r3, #2
   158d8:	ldr	r4, [r3]
   158dc:	movw	r0, #57900	; 0xe22c
   158e0:	movt	r0, #1
   158e4:	bl	1135c <gettext@plt>
   158e8:	mov	r2, r0
   158ec:	mov	r3, #0
   158f0:	str	r3, [sp, #16]
   158f4:	str	r2, [sp, #12]
   158f8:	movw	r3, #58556	; 0xe4bc
   158fc:	movt	r3, #1
   15900:	str	r3, [sp, #8]
   15904:	mvn	r2, #0
   15908:	mov	r3, #0
   1590c:	strd	r2, [sp]
   15910:	mov	r2, #1
   15914:	mov	r3, #0
   15918:	mov	r0, r4
   1591c:	bl	1b3fc <__assert_fail@plt+0x9f08>
   15920:	mov	r2, r0
   15924:	mov	r3, r1
   15928:	strd	r2, [fp, #-100]	; 0xffffff9c
   1592c:	b	160a4 <__assert_fail@plt+0x4bb0>
   15930:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15934:	cmp	r3, #0
   15938:	beq	15980 <__assert_fail@plt+0x448c>
   1593c:	movw	r0, #57864	; 0xe208
   15940:	movt	r0, #1
   15944:	bl	1135c <gettext@plt>
   15948:	mov	r3, r0
   1594c:	mov	r2, r3
   15950:	mov	r1, #0
   15954:	mov	r0, #0
   15958:	bl	112d8 <error@plt>
   1595c:	mov	r0, #1
   15960:	bl	11c90 <__assert_fail@plt+0x79c>
   15964:	movw	r3, #62320	; 0xf370
   15968:	movt	r3, #2
   1596c:	ldr	r3, [r3]
   15970:	add	r2, r3, #1
   15974:	movw	r3, #62320	; 0xf370
   15978:	movt	r3, #2
   1597c:	str	r2, [r3]
   15980:	bl	11344 <__ctype_b_loc@plt>
   15984:	mov	r3, r0
   15988:	ldr	r4, [r3]
   1598c:	movw	r3, #62320	; 0xf370
   15990:	movt	r3, #2
   15994:	ldr	r3, [r3]
   15998:	ldrb	r3, [r3]
   1599c:	mov	r0, r3
   159a0:	bl	115f0 <__assert_fail@plt+0xfc>
   159a4:	mov	r3, r0
   159a8:	lsl	r3, r3, #1
   159ac:	add	r3, r4, r3
   159b0:	ldrh	r3, [r3]
   159b4:	and	r3, r3, #8192	; 0x2000
   159b8:	cmp	r3, #0
   159bc:	bne	15964 <__assert_fail@plt+0x4470>
   159c0:	movw	r3, #62320	; 0xf370
   159c4:	movt	r3, #2
   159c8:	ldr	r3, [r3]
   159cc:	mov	r2, #2
   159d0:	movw	r1, #57948	; 0xe25c
   159d4:	movt	r1, #1
   159d8:	mov	r0, r3
   159dc:	bl	114c4 <strncmp@plt>
   159e0:	mov	r3, r0
   159e4:	cmp	r3, #0
   159e8:	bne	15a14 <__assert_fail@plt+0x4520>
   159ec:	mov	r3, #7
   159f0:	str	r3, [fp, #-32]	; 0xffffffe0
   159f4:	movw	r3, #62320	; 0xf370
   159f8:	movt	r3, #2
   159fc:	ldr	r3, [r3]
   15a00:	add	r2, r3, #2
   15a04:	movw	r3, #62320	; 0xf370
   15a08:	movt	r3, #2
   15a0c:	str	r2, [r3]
   15a10:	b	15a70 <__assert_fail@plt+0x457c>
   15a14:	movw	r3, #62320	; 0xf370
   15a18:	movt	r3, #2
   15a1c:	ldr	r3, [r3]
   15a20:	mov	r2, #2
   15a24:	movw	r1, #57952	; 0xe260
   15a28:	movt	r1, #1
   15a2c:	mov	r0, r3
   15a30:	bl	114c4 <strncmp@plt>
   15a34:	mov	r3, r0
   15a38:	cmp	r3, #0
   15a3c:	bne	15a68 <__assert_fail@plt+0x4574>
   15a40:	mov	r3, #6
   15a44:	str	r3, [fp, #-32]	; 0xffffffe0
   15a48:	movw	r3, #62320	; 0xf370
   15a4c:	movt	r3, #2
   15a50:	ldr	r3, [r3]
   15a54:	add	r2, r3, #2
   15a58:	movw	r3, #62320	; 0xf370
   15a5c:	movt	r3, #2
   15a60:	str	r2, [r3]
   15a64:	b	15a70 <__assert_fail@plt+0x457c>
   15a68:	mov	r3, #5
   15a6c:	str	r3, [fp, #-32]	; 0xffffffe0
   15a70:	movw	r3, #62320	; 0xf370
   15a74:	movt	r3, #2
   15a78:	ldr	r3, [r3]
   15a7c:	mov	r1, #47	; 0x2f
   15a80:	mov	r0, r3
   15a84:	bl	11380 <strchr@plt>
   15a88:	str	r0, [fp, #-84]	; 0xffffffac
   15a8c:	ldr	r3, [fp, #-84]	; 0xffffffac
   15a90:	cmp	r3, #0
   15a94:	beq	15ab0 <__assert_fail@plt+0x45bc>
   15a98:	sub	r1, fp, #100	; 0x64
   15a9c:	sub	r3, fp, #92	; 0x5c
   15aa0:	ldr	r2, [fp, #-84]	; 0xffffffac
   15aa4:	mov	r0, r3
   15aa8:	bl	152bc <__assert_fail@plt+0x3dc8>
   15aac:	b	160a4 <__assert_fail@plt+0x4bb0>
   15ab0:	movw	r3, #62320	; 0xf370
   15ab4:	movt	r3, #2
   15ab8:	ldr	r4, [r3]
   15abc:	movw	r0, #57684	; 0xe154
   15ac0:	movt	r0, #1
   15ac4:	bl	1135c <gettext@plt>
   15ac8:	mov	r2, r0
   15acc:	mov	r3, #0
   15ad0:	str	r3, [sp, #16]
   15ad4:	str	r2, [sp, #12]
   15ad8:	movw	r3, #54436	; 0xd4a4
   15adc:	movt	r3, #1
   15ae0:	str	r3, [sp, #8]
   15ae4:	mvn	r2, #0
   15ae8:	mvn	r3, #0
   15aec:	strd	r2, [sp]
   15af0:	mov	r2, #1
   15af4:	mov	r3, #0
   15af8:	mov	r0, r4
   15afc:	bl	1b3fc <__assert_fail@plt+0x9f08>
   15b00:	mov	r2, r0
   15b04:	mov	r3, r1
   15b08:	strd	r2, [fp, #-100]	; 0xffffff9c
   15b0c:	b	160a4 <__assert_fail@plt+0x4bb0>
   15b10:	movw	r3, #62738	; 0xf512
   15b14:	movt	r3, #2
   15b18:	mov	r2, #1
   15b1c:	strb	r2, [r3]
   15b20:	b	160a4 <__assert_fail@plt+0x4bb0>
   15b24:	movw	r3, #62320	; 0xf370
   15b28:	movt	r3, #2
   15b2c:	ldr	r3, [r3]
   15b30:	ldrb	r3, [r3]
   15b34:	strb	r3, [fp, #-53]	; 0xffffffcb
   15b38:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   15b3c:	cmp	r3, #0
   15b40:	bne	15b64 <__assert_fail@plt+0x4670>
   15b44:	movw	r0, #57956	; 0xe264
   15b48:	movt	r0, #1
   15b4c:	bl	1135c <gettext@plt>
   15b50:	mov	r3, r0
   15b54:	mov	r2, r3
   15b58:	mov	r1, #0
   15b5c:	mov	r0, #1
   15b60:	bl	112d8 <error@plt>
   15b64:	movw	r3, #62320	; 0xf370
   15b68:	movt	r3, #2
   15b6c:	ldr	r3, [r3]
   15b70:	add	r3, r3, #1
   15b74:	ldrb	r3, [r3]
   15b78:	cmp	r3, #0
   15b7c:	beq	15bec <__assert_fail@plt+0x46f8>
   15b80:	movw	r3, #62320	; 0xf370
   15b84:	movt	r3, #2
   15b88:	ldr	r3, [r3]
   15b8c:	movw	r1, #57980	; 0xe27c
   15b90:	movt	r1, #1
   15b94:	mov	r0, r3
   15b98:	bl	11170 <strcmp@plt>
   15b9c:	mov	r3, r0
   15ba0:	cmp	r3, #0
   15ba4:	bne	15bb4 <__assert_fail@plt+0x46c0>
   15ba8:	mov	r3, #0
   15bac:	strb	r3, [fp, #-53]	; 0xffffffcb
   15bb0:	b	15bec <__assert_fail@plt+0x46f8>
   15bb4:	movw	r0, #57984	; 0xe280
   15bb8:	movt	r0, #1
   15bbc:	bl	1135c <gettext@plt>
   15bc0:	mov	r4, r0
   15bc4:	movw	r3, #62320	; 0xf370
   15bc8:	movt	r3, #2
   15bcc:	ldr	r3, [r3]
   15bd0:	mov	r0, r3
   15bd4:	bl	19a5c <__assert_fail@plt+0x8568>
   15bd8:	mov	r3, r0
   15bdc:	mov	r2, r4
   15be0:	mov	r1, #0
   15be4:	mov	r0, #1
   15be8:	bl	112d8 <error@plt>
   15bec:	movw	r3, #61796	; 0xf164
   15bf0:	movt	r3, #2
   15bf4:	ldr	r3, [r3]
   15bf8:	cmp	r3, #0
   15bfc:	blt	15c38 <__assert_fail@plt+0x4744>
   15c00:	ldrb	r2, [fp, #-53]	; 0xffffffcb
   15c04:	movw	r3, #61796	; 0xf164
   15c08:	movt	r3, #2
   15c0c:	ldr	r3, [r3]
   15c10:	cmp	r2, r3
   15c14:	beq	15c38 <__assert_fail@plt+0x4744>
   15c18:	movw	r0, #58016	; 0xe2a0
   15c1c:	movt	r0, #1
   15c20:	bl	1135c <gettext@plt>
   15c24:	mov	r3, r0
   15c28:	mov	r2, r3
   15c2c:	mov	r1, #0
   15c30:	mov	r0, #1
   15c34:	bl	112d8 <error@plt>
   15c38:	ldrb	r2, [fp, #-53]	; 0xffffffcb
   15c3c:	movw	r3, #61796	; 0xf164
   15c40:	movt	r3, #2
   15c44:	str	r2, [r3]
   15c48:	b	160a4 <__assert_fail@plt+0x4bb0>
   15c4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c50:	cmp	r3, #0
   15c54:	bne	15c6c <__assert_fail@plt+0x4778>
   15c58:	mov	r3, #4
   15c5c:	str	r3, [fp, #-32]	; 0xffffffe0
   15c60:	mov	r2, #0
   15c64:	mov	r3, #0
   15c68:	strd	r2, [fp, #-100]	; 0xffffff9c
   15c6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c70:	cmp	r3, #0
   15c74:	beq	15cac <__assert_fail@plt+0x47b8>
   15c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c7c:	cmp	r3, #4
   15c80:	beq	15cac <__assert_fail@plt+0x47b8>
   15c84:	movw	r0, #57864	; 0xe208
   15c88:	movt	r0, #1
   15c8c:	bl	1135c <gettext@plt>
   15c90:	mov	r3, r0
   15c94:	mov	r2, r3
   15c98:	mov	r1, #0
   15c9c:	mov	r0, #0
   15ca0:	bl	112d8 <error@plt>
   15ca4:	mov	r0, #1
   15ca8:	bl	11c90 <__assert_fail@plt+0x79c>
   15cac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15cb0:	cmp	r3, #0
   15cb4:	beq	15cd4 <__assert_fail@plt+0x47e0>
   15cb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15cbc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15cc0:	cmp	r2, r3
   15cc4:	beq	15cd4 <__assert_fail@plt+0x47e0>
   15cc8:	mov	r2, #0
   15ccc:	mov	r3, #0
   15cd0:	strd	r2, [fp, #-100]	; 0xffffff9c
   15cd4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15cd8:	str	r3, [fp, #-40]	; 0xffffffd8
   15cdc:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   15ce0:	add	r1, pc, #960	; 0x3c0
   15ce4:	ldrd	r0, [r1]
   15ce8:	cmp	r3, r1
   15cec:	cmpeq	r2, r0
   15cf0:	bhi	15de0 <__assert_fail@plt+0x48ec>
   15cf4:	ldrd	r4, [fp, #-100]	; 0xffffff9c
   15cf8:	mov	r2, r4
   15cfc:	mov	r3, r5
   15d00:	mov	r0, #0
   15d04:	mov	r1, #0
   15d08:	lsl	r1, r3, #2
   15d0c:	orr	r1, r1, r2, lsr #30
   15d10:	lsl	r0, r2, #2
   15d14:	mov	r2, r0
   15d18:	mov	r3, r1
   15d1c:	adds	r2, r2, r4
   15d20:	adc	r3, r3, r5
   15d24:	adds	r1, r2, r2
   15d28:	str	r1, [fp, #-308]	; 0xfffffecc
   15d2c:	adc	r3, r3, r3
   15d30:	str	r3, [fp, #-304]	; 0xfffffed0
   15d34:	sub	r3, fp, #308	; 0x134
   15d38:	ldrd	r2, [r3]
   15d3c:	mov	r0, r2
   15d40:	mov	r1, r3
   15d44:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15d48:	sub	r3, r3, #48	; 0x30
   15d4c:	mov	r2, r3
   15d50:	asr	r3, r2, #31
   15d54:	adds	r6, r0, r2
   15d58:	adc	r7, r1, r3
   15d5c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   15d60:	cmp	r7, r3
   15d64:	cmpeq	r6, r2
   15d68:	bcc	15de0 <__assert_fail@plt+0x48ec>
   15d6c:	ldrd	r4, [fp, #-100]	; 0xffffff9c
   15d70:	mov	r2, r4
   15d74:	mov	r3, r5
   15d78:	mov	r0, #0
   15d7c:	mov	r1, #0
   15d80:	lsl	r1, r3, #2
   15d84:	orr	r1, r1, r2, lsr #30
   15d88:	lsl	r0, r2, #2
   15d8c:	mov	r2, r0
   15d90:	mov	r3, r1
   15d94:	adds	r2, r2, r4
   15d98:	adc	r3, r3, r5
   15d9c:	adds	r1, r2, r2
   15da0:	str	r1, [fp, #-316]	; 0xfffffec4
   15da4:	adc	r3, r3, r3
   15da8:	str	r3, [fp, #-312]	; 0xfffffec8
   15dac:	sub	r3, fp, #316	; 0x13c
   15db0:	ldrd	r2, [r3]
   15db4:	mov	r0, r2
   15db8:	mov	r1, r3
   15dbc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15dc0:	sub	r3, r3, #48	; 0x30
   15dc4:	mov	r2, r3
   15dc8:	asr	r3, r2, #31
   15dcc:	adds	r8, r0, r2
   15dd0:	adc	r9, r1, r3
   15dd4:	strd	r8, [fp, #-100]	; 0xffffff9c
   15dd8:	mov	r3, #0
   15ddc:	b	15de4 <__assert_fail@plt+0x48f0>
   15de0:	mov	r3, #1
   15de4:	cmp	r3, #0
   15de8:	beq	15e2c <__assert_fail@plt+0x4938>
   15dec:	movw	r0, #58056	; 0xe2c8
   15df0:	movt	r0, #1
   15df4:	bl	1135c <gettext@plt>
   15df8:	mov	r4, r0
   15dfc:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   15e00:	sub	r3, fp, #124	; 0x7c
   15e04:	mov	r2, r3
   15e08:	bl	1705c <__assert_fail@plt+0x5b68>
   15e0c:	mov	r2, r0
   15e10:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15e14:	str	r3, [sp]
   15e18:	mov	r3, r2
   15e1c:	mov	r2, r4
   15e20:	mov	r1, #0
   15e24:	mov	r0, #1
   15e28:	bl	112d8 <error@plt>
   15e2c:	b	160a4 <__assert_fail@plt+0x4bb0>
   15e30:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15e34:	cmp	r3, #100	; 0x64
   15e38:	bne	15e54 <__assert_fail@plt+0x4960>
   15e3c:	movw	r3, #61788	; 0xf15c
   15e40:	movt	r3, #2
   15e44:	movw	r2, #58096	; 0xe2f0
   15e48:	movt	r2, #1
   15e4c:	str	r2, [r3]
   15e50:	b	15e68 <__assert_fail@plt+0x4974>
   15e54:	movw	r3, #61788	; 0xf15c
   15e58:	movt	r3, #2
   15e5c:	movw	r2, #58108	; 0xe2fc
   15e60:	movt	r2, #1
   15e64:	str	r2, [r3]
   15e68:	movw	r3, #62320	; 0xf370
   15e6c:	movt	r3, #2
   15e70:	ldr	r3, [r3]
   15e74:	cmp	r3, #0
   15e78:	beq	160a0 <__assert_fail@plt+0x4bac>
   15e7c:	movw	r3, #62320	; 0xf370
   15e80:	movt	r3, #2
   15e84:	ldr	r3, [r3]
   15e88:	mov	r0, r3
   15e8c:	bl	11368 <strlen@plt>
   15e90:	mov	r4, r0
   15e94:	movw	r3, #62320	; 0xf370
   15e98:	movt	r3, #2
   15e9c:	ldr	r2, [r3]
   15ea0:	movw	r3, #61788	; 0xf15c
   15ea4:	movt	r3, #2
   15ea8:	ldr	r3, [r3]
   15eac:	mov	r1, r3
   15eb0:	mov	r0, r2
   15eb4:	bl	114e8 <strspn@plt>
   15eb8:	mov	r3, r0
   15ebc:	cmp	r4, r3
   15ec0:	beq	15f40 <__assert_fail@plt+0x4a4c>
   15ec4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15ec8:	cmp	r3, #100	; 0x64
   15ecc:	bne	15ee4 <__assert_fail@plt+0x49f0>
   15ed0:	movw	r0, #58128	; 0xe310
   15ed4:	movt	r0, #1
   15ed8:	bl	1135c <gettext@plt>
   15edc:	mov	r4, r0
   15ee0:	b	15ef4 <__assert_fail@plt+0x4a00>
   15ee4:	movw	r0, #58176	; 0xe340
   15ee8:	movt	r0, #1
   15eec:	bl	1135c <gettext@plt>
   15ef0:	mov	r4, r0
   15ef4:	movw	r3, #62320	; 0xf370
   15ef8:	movt	r3, #2
   15efc:	ldr	r3, [r3]
   15f00:	mov	r0, r3
   15f04:	bl	19a5c <__assert_fail@plt+0x8568>
   15f08:	mov	r3, r0
   15f0c:	mov	r2, r4
   15f10:	mov	r1, #0
   15f14:	mov	r0, #0
   15f18:	bl	112d8 <error@plt>
   15f1c:	mov	r0, #1
   15f20:	bl	11c90 <__assert_fail@plt+0x79c>
   15f24:	movw	r3, #62320	; 0xf370
   15f28:	movt	r3, #2
   15f2c:	ldr	r3, [r3]
   15f30:	add	r2, r3, #1
   15f34:	movw	r3, #62320	; 0xf370
   15f38:	movt	r3, #2
   15f3c:	str	r2, [r3]
   15f40:	movw	r3, #62320	; 0xf370
   15f44:	movt	r3, #2
   15f48:	ldr	r3, [r3]
   15f4c:	ldrb	r3, [r3]
   15f50:	cmp	r3, #48	; 0x30
   15f54:	bne	15f74 <__assert_fail@plt+0x4a80>
   15f58:	movw	r3, #62320	; 0xf370
   15f5c:	movt	r3, #2
   15f60:	ldr	r3, [r3]
   15f64:	add	r3, r3, #1
   15f68:	ldrb	r3, [r3]
   15f6c:	cmp	r3, #0
   15f70:	bne	15f24 <__assert_fail@plt+0x4a30>
   15f74:	movw	r3, #62320	; 0xf370
   15f78:	movt	r3, #2
   15f7c:	ldr	r2, [r3]
   15f80:	movw	r3, #62620	; 0xf49c
   15f84:	movt	r3, #2
   15f88:	str	r2, [r3]
   15f8c:	b	160a0 <__assert_fail@plt+0x4bac>
   15f90:	movw	r3, #62737	; 0xf511
   15f94:	movt	r3, #2
   15f98:	mov	r2, #1
   15f9c:	strb	r2, [r3]
   15fa0:	b	160a4 <__assert_fail@plt+0x4bb0>
   15fa4:	movw	r3, #62320	; 0xf370
   15fa8:	movt	r3, #2
   15fac:	ldr	r2, [r3]
   15fb0:	movw	r3, #62328	; 0xf378
   15fb4:	movt	r3, #2
   15fb8:	str	r2, [r3]
   15fbc:	b	160a4 <__assert_fail@plt+0x4bb0>
   15fc0:	movw	r3, #62320	; 0xf370
   15fc4:	movt	r3, #2
   15fc8:	ldr	r4, [r3]
   15fcc:	movw	r0, #58224	; 0xe370
   15fd0:	movt	r0, #1
   15fd4:	bl	1135c <gettext@plt>
   15fd8:	mov	r2, r0
   15fdc:	mov	r3, #0
   15fe0:	str	r3, [sp, #16]
   15fe4:	str	r2, [sp, #12]
   15fe8:	movw	r3, #58556	; 0xe4bc
   15fec:	movt	r3, #1
   15ff0:	str	r3, [sp, #8]
   15ff4:	mvn	r2, #-2147483647	; 0x80000001
   15ff8:	mov	r3, #0
   15ffc:	strd	r2, [sp]
   16000:	mov	r2, #1
   16004:	mov	r3, #0
   16008:	mov	r0, r4
   1600c:	bl	1b3fc <__assert_fail@plt+0x9f08>
   16010:	mov	r2, r0
   16014:	mov	r3, r1
   16018:	mov	r3, r2
   1601c:	str	r3, [fp, #-36]	; 0xffffffdc
   16020:	b	160a4 <__assert_fail@plt+0x4bb0>
   16024:	movw	r3, #62736	; 0xf510
   16028:	movt	r3, #2
   1602c:	mov	r2, #1
   16030:	strb	r2, [r3]
   16034:	b	160a4 <__assert_fail@plt+0x4bb0>
   16038:	mov	r0, #0
   1603c:	bl	11c90 <__assert_fail@plt+0x79c>
   16040:	movw	r3, #62316	; 0xf36c
   16044:	movt	r3, #2
   16048:	ldr	r0, [r3]
   1604c:	movw	r3, #61800	; 0xf168
   16050:	movt	r3, #2
   16054:	ldr	r2, [r3]
   16058:	mov	r3, #0
   1605c:	str	r3, [sp, #8]
   16060:	movw	r3, #58248	; 0xe388
   16064:	movt	r3, #1
   16068:	str	r3, [sp, #4]
   1606c:	movw	r3, #58268	; 0xe39c
   16070:	movt	r3, #1
   16074:	str	r3, [sp]
   16078:	mov	r3, r2
   1607c:	movw	r2, #54252	; 0xd3ec
   16080:	movt	r2, #1
   16084:	movw	r1, #56996	; 0xdea4
   16088:	movt	r1, #1
   1608c:	bl	1a780 <__assert_fail@plt+0x928c>
   16090:	mov	r0, #0
   16094:	bl	11350 <exit@plt>
   16098:	mov	r0, #1
   1609c:	bl	11c90 <__assert_fail@plt+0x79c>
   160a0:	nop	{0}
   160a4:	b	154cc <__assert_fail@plt+0x3fd8>
   160a8:	ldmibls	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   160ac:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   160b0:	nop	{0}
   160b4:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   160b8:	orrs	r3, r2, r3
   160bc:	beq	160fc <__assert_fail@plt+0x4c08>
   160c0:	movw	r3, #62328	; 0xf378
   160c4:	movt	r3, #2
   160c8:	ldr	r3, [r3]
   160cc:	cmp	r3, #0
   160d0:	beq	160fc <__assert_fail@plt+0x4c08>
   160d4:	movw	r0, #58288	; 0xe3b0
   160d8:	movt	r0, #1
   160dc:	bl	1135c <gettext@plt>
   160e0:	mov	r3, r0
   160e4:	mov	r2, r3
   160e8:	mov	r1, #0
   160ec:	mov	r0, #0
   160f0:	bl	112d8 <error@plt>
   160f4:	mov	r0, #1
   160f8:	bl	11c90 <__assert_fail@plt+0x79c>
   160fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16100:	cmp	r3, #0
   16104:	bne	1611c <__assert_fail@plt+0x4c28>
   16108:	mov	r3, #3
   1610c:	str	r3, [fp, #-32]	; 0xffffffe0
   16110:	mov	r2, #1000	; 0x3e8
   16114:	mov	r3, #0
   16118:	strd	r2, [fp, #-100]	; 0xffffff9c
   1611c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   16120:	orrs	r3, r2, r3
   16124:	bne	1616c <__assert_fail@plt+0x4c78>
   16128:	movw	r0, #57924	; 0xe244
   1612c:	movt	r0, #1
   16130:	bl	1135c <gettext@plt>
   16134:	mov	r4, r0
   16138:	movw	r0, #58344	; 0xe3e8
   1613c:	movt	r0, #1
   16140:	bl	19a5c <__assert_fail@plt+0x8568>
   16144:	mov	r3, r0
   16148:	str	r3, [sp]
   1614c:	mov	r3, r4
   16150:	movw	r2, #58348	; 0xe3ec
   16154:	movt	r2, #1
   16158:	mov	r1, #0
   1615c:	mov	r0, #0
   16160:	bl	112d8 <error@plt>
   16164:	mov	r0, #1
   16168:	bl	11c90 <__assert_fail@plt+0x79c>
   1616c:	movw	r3, #61796	; 0xf164
   16170:	movt	r3, #2
   16174:	ldr	r3, [r3]
   16178:	cmp	r3, #0
   1617c:	bge	16190 <__assert_fail@plt+0x4c9c>
   16180:	movw	r3, #61796	; 0xf164
   16184:	movt	r3, #2
   16188:	mov	r2, #10
   1618c:	str	r2, [r3]
   16190:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   16194:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16198:	bl	11a50 <__assert_fail@plt+0x55c>
   1619c:	movw	r3, #62304	; 0xf360
   161a0:	movt	r3, #2
   161a4:	ldr	r3, [r3]
   161a8:	ldr	r2, [fp, #-296]	; 0xfffffed8
   161ac:	cmp	r2, r3
   161b0:	ble	161f0 <__assert_fail@plt+0x4cfc>
   161b4:	movw	r3, #62304	; 0xf360
   161b8:	movt	r3, #2
   161bc:	ldr	r2, [r3]
   161c0:	add	r1, r2, #1
   161c4:	movw	r3, #62304	; 0xf360
   161c8:	movt	r3, #2
   161cc:	str	r1, [r3]
   161d0:	mov	r3, r2
   161d4:	lsl	r3, r3, #2
   161d8:	ldr	r2, [fp, #-300]	; 0xfffffed4
   161dc:	add	r3, r2, r3
   161e0:	ldr	r2, [r3]
   161e4:	movw	r3, #62628	; 0xf4a4
   161e8:	movt	r3, #2
   161ec:	str	r2, [r3]
   161f0:	movw	r3, #62304	; 0xf360
   161f4:	movt	r3, #2
   161f8:	ldr	r3, [r3]
   161fc:	ldr	r2, [fp, #-296]	; 0xfffffed8
   16200:	cmp	r2, r3
   16204:	ble	16244 <__assert_fail@plt+0x4d50>
   16208:	movw	r3, #62304	; 0xf360
   1620c:	movt	r3, #2
   16210:	ldr	r2, [r3]
   16214:	add	r1, r2, #1
   16218:	movw	r3, #62304	; 0xf360
   1621c:	movt	r3, #2
   16220:	str	r1, [r3]
   16224:	mov	r3, r2
   16228:	lsl	r3, r3, #2
   1622c:	ldr	r2, [fp, #-300]	; 0xfffffed4
   16230:	add	r3, r2, r3
   16234:	ldr	r2, [r3]
   16238:	movw	r3, #62604	; 0xf48c
   1623c:	movt	r3, #2
   16240:	str	r2, [r3]
   16244:	movw	r3, #62304	; 0xf360
   16248:	movt	r3, #2
   1624c:	ldr	r3, [r3]
   16250:	ldr	r2, [fp, #-296]	; 0xfffffed8
   16254:	cmp	r2, r3
   16258:	ble	162ac <__assert_fail@plt+0x4db8>
   1625c:	movw	r0, #58356	; 0xe3f4
   16260:	movt	r0, #1
   16264:	bl	1135c <gettext@plt>
   16268:	mov	r4, r0
   1626c:	movw	r3, #62304	; 0xf360
   16270:	movt	r3, #2
   16274:	ldr	r3, [r3]
   16278:	lsl	r3, r3, #2
   1627c:	ldr	r2, [fp, #-300]	; 0xfffffed4
   16280:	add	r3, r2, r3
   16284:	ldr	r3, [r3]
   16288:	mov	r0, r3
   1628c:	bl	19a5c <__assert_fail@plt+0x8568>
   16290:	mov	r3, r0
   16294:	mov	r2, r4
   16298:	mov	r1, #0
   1629c:	mov	r0, #0
   162a0:	bl	112d8 <error@plt>
   162a4:	mov	r0, #1
   162a8:	bl	11c90 <__assert_fail@plt+0x79c>
   162ac:	movw	r3, #62620	; 0xf49c
   162b0:	movt	r3, #2
   162b4:	ldr	r3, [r3]
   162b8:	cmp	r3, #0
   162bc:	beq	16314 <__assert_fail@plt+0x4e20>
   162c0:	movw	r3, #62620	; 0xf49c
   162c4:	movt	r3, #2
   162c8:	ldr	r3, [r3]
   162cc:	mov	r0, r3
   162d0:	bl	11368 <strlen@plt>
   162d4:	mov	r2, r0
   162d8:	movw	r3, #62616	; 0xf498
   162dc:	movt	r3, #2
   162e0:	ldr	r3, [r3]
   162e4:	cmp	r2, r3
   162e8:	bls	16314 <__assert_fail@plt+0x4e20>
   162ec:	movw	r0, #58376	; 0xe408
   162f0:	movt	r0, #1
   162f4:	bl	1135c <gettext@plt>
   162f8:	mov	r3, r0
   162fc:	mov	r2, r3
   16300:	mov	r1, #0
   16304:	mov	r0, #0
   16308:	bl	112d8 <error@plt>
   1630c:	mov	r0, #1
   16310:	bl	11c90 <__assert_fail@plt+0x79c>
   16314:	movw	r3, #62628	; 0xf4a4
   16318:	movt	r3, #2
   1631c:	ldr	r3, [r3]
   16320:	movw	r1, #57676	; 0xe14c
   16324:	movt	r1, #1
   16328:	mov	r0, r3
   1632c:	bl	11170 <strcmp@plt>
   16330:	mov	r3, r0
   16334:	cmp	r3, #0
   16338:	beq	163ac <__assert_fail@plt+0x4eb8>
   1633c:	movw	r3, #62628	; 0xf4a4
   16340:	movt	r3, #2
   16344:	ldr	r1, [r3]
   16348:	mov	r3, #0
   1634c:	mov	r2, #0
   16350:	mov	r0, #0
   16354:	bl	16c94 <__assert_fail@plt+0x57a0>
   16358:	mov	r3, r0
   1635c:	cmp	r3, #0
   16360:	bge	163ac <__assert_fail@plt+0x4eb8>
   16364:	bl	113bc <__errno_location@plt>
   16368:	mov	r3, r0
   1636c:	ldr	r4, [r3]
   16370:	movw	r0, #58440	; 0xe448
   16374:	movt	r0, #1
   16378:	bl	1135c <gettext@plt>
   1637c:	mov	r5, r0
   16380:	movw	r3, #62628	; 0xf4a4
   16384:	movt	r3, #2
   16388:	ldr	r3, [r3]
   1638c:	mov	r1, r3
   16390:	mov	r0, #4
   16394:	bl	1957c <__assert_fail@plt+0x8088>
   16398:	mov	r3, r0
   1639c:	mov	r2, r5
   163a0:	mov	r1, r4
   163a4:	mov	r0, #1
   163a8:	bl	112d8 <error@plt>
   163ac:	mov	r1, #0
   163b0:	mov	r0, #0
   163b4:	bl	1b224 <__assert_fail@plt+0x9d30>
   163b8:	movw	r1, #62632	; 0xf4a8
   163bc:	movt	r1, #2
   163c0:	mov	r0, #0
   163c4:	bl	1d238 <__assert_fail@plt+0xbd44>
   163c8:	mov	r3, r0
   163cc:	cmp	r3, #0
   163d0:	beq	16414 <__assert_fail@plt+0x4f20>
   163d4:	bl	113bc <__errno_location@plt>
   163d8:	mov	r3, r0
   163dc:	ldr	r4, [r3]
   163e0:	movw	r3, #62628	; 0xf4a4
   163e4:	movt	r3, #2
   163e8:	ldr	r3, [r3]
   163ec:	mov	r2, r3
   163f0:	mov	r1, #3
   163f4:	mov	r0, #0
   163f8:	bl	19760 <__assert_fail@plt+0x826c>
   163fc:	mov	r3, r0
   16400:	movw	r2, #57440	; 0xe060
   16404:	movt	r2, #1
   16408:	mov	r1, r4
   1640c:	mov	r0, #1
   16410:	bl	112d8 <error@plt>
   16414:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16418:	cmp	r3, #0
   1641c:	movne	r3, #1
   16420:	moveq	r3, #0
   16424:	strb	r3, [fp, #-73]	; 0xffffffb7
   16428:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   1642c:	eor	r3, r3, #1
   16430:	uxtb	r3, r3
   16434:	cmp	r3, #0
   16438:	beq	16464 <__assert_fail@plt+0x4f70>
   1643c:	movw	r4, #62632	; 0xf4a8
   16440:	movt	r4, #2
   16444:	mov	r0, sp
   16448:	add	r3, r4, #16
   1644c:	mov	r2, #88	; 0x58
   16450:	mov	r1, r3
   16454:	bl	111dc <memcpy@plt>
   16458:	ldm	r4, {r0, r1, r2, r3}
   1645c:	bl	11934 <__assert_fail@plt+0x440>
   16460:	str	r0, [fp, #-36]	; 0xffffffdc
   16464:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16468:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1646c:	add	r3, r3, #1
   16470:	mov	r1, r3
   16474:	mov	r0, r2
   16478:	bl	1a880 <__assert_fail@plt+0x938c>
   1647c:	mov	r3, r0
   16480:	str	r3, [fp, #-80]	; 0xffffffb0
   16484:	mvn	r3, #0
   16488:	str	r3, [fp, #-60]	; 0xffffffc4
   1648c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16490:	cmp	r3, #5
   16494:	beq	164a4 <__assert_fail@plt+0x4fb0>
   16498:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1649c:	cmp	r3, #6
   164a0:	bne	165c4 <__assert_fail@plt+0x50d0>
   164a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   164a8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   164ac:	movw	r1, #62632	; 0xf4a8
   164b0:	movt	r1, #2
   164b4:	mov	r0, #0
   164b8:	bl	11e28 <__assert_fail@plt+0x934>
   164bc:	strd	r0, [fp, #-52]	; 0xffffffcc
   164c0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   164c4:	cmp	r2, #0
   164c8:	sbcs	r3, r3, #0
   164cc:	bge	1651c <__assert_fail@plt+0x5028>
   164d0:	bl	113bc <__errno_location@plt>
   164d4:	mov	r3, r0
   164d8:	ldr	r4, [r3]
   164dc:	movw	r0, #58468	; 0xe464
   164e0:	movt	r0, #1
   164e4:	bl	1135c <gettext@plt>
   164e8:	mov	r5, r0
   164ec:	movw	r3, #62628	; 0xf4a4
   164f0:	movt	r3, #2
   164f4:	ldr	r3, [r3]
   164f8:	mov	r2, r3
   164fc:	mov	r1, #3
   16500:	mov	r0, #0
   16504:	bl	19760 <__assert_fail@plt+0x826c>
   16508:	mov	r3, r0
   1650c:	mov	r2, r5
   16510:	mov	r1, r4
   16514:	mov	r0, #1
   16518:	bl	112d8 <error@plt>
   1651c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16520:	mov	r0, r3
   16524:	asr	r1, r0, #31
   16528:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1652c:	cmp	r0, r2
   16530:	sbcs	ip, r1, r3
   16534:	bge	16540 <__assert_fail@plt+0x504c>
   16538:	mov	r2, r0
   1653c:	mov	r3, r1
   16540:	mov	r3, r2
   16544:	str	r3, [fp, #-60]	; 0xffffffc4
   16548:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1654c:	cmp	r2, #0
   16550:	sbcs	r3, r3, #0
   16554:	bge	165a4 <__assert_fail@plt+0x50b0>
   16558:	movw	r0, #57684	; 0xe154
   1655c:	movt	r0, #1
   16560:	bl	1135c <gettext@plt>
   16564:	mov	r4, r0
   16568:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   1656c:	sub	r3, fp, #148	; 0x94
   16570:	mov	r2, r3
   16574:	bl	1705c <__assert_fail@plt+0x5b68>
   16578:	mov	r3, r0
   1657c:	mov	r0, r3
   16580:	bl	19a5c <__assert_fail@plt+0x8568>
   16584:	mov	r3, r0
   16588:	str	r3, [sp]
   1658c:	mov	r3, r4
   16590:	movw	r2, #58348	; 0xe3ec
   16594:	movt	r2, #1
   16598:	mov	r1, #75	; 0x4b
   1659c:	mov	r0, #1
   165a0:	bl	112d8 <error@plt>
   165a4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   165a8:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   165ac:	cmp	r3, r1
   165b0:	cmpeq	r2, r0
   165b4:	bcs	165c0 <__assert_fail@plt+0x50cc>
   165b8:	mov	r2, r0
   165bc:	mov	r3, r1
   165c0:	strd	r2, [fp, #-52]	; 0xffffffcc
   165c4:	movw	r3, #62328	; 0xf378
   165c8:	movt	r3, #2
   165cc:	ldr	r3, [r3]
   165d0:	cmp	r3, #0
   165d4:	beq	1662c <__assert_fail@plt+0x5138>
   165d8:	movw	r0, #62476	; 0xf40c
   165dc:	movt	r0, #2
   165e0:	bl	1144c <sigemptyset@plt>
   165e4:	sub	r3, fp, #292	; 0x124
   165e8:	mov	r2, r3
   165ec:	mov	r1, #0
   165f0:	mov	r0, #13
   165f4:	bl	1126c <sigaction@plt>
   165f8:	ldr	r3, [fp, #-292]	; 0xfffffedc
   165fc:	cmp	r3, #1
   16600:	beq	16614 <__assert_fail@plt+0x5120>
   16604:	mov	r1, #13
   16608:	movw	r0, #62476	; 0xf40c
   1660c:	movt	r0, #2
   16610:	bl	11308 <sigaddset@plt>
   16614:	movw	r2, #62348	; 0xf38c
   16618:	movt	r2, #2
   1661c:	movw	r1, #62476	; 0xf40c
   16620:	movt	r1, #2
   16624:	mov	r0, #0
   16628:	bl	111ac <sigprocmask@plt>
   1662c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16630:	sub	r3, r3, #1
   16634:	cmp	r3, #6
   16638:	ldrls	pc, [pc, r3, lsl #2]
   1663c:	b	1679c <__assert_fail@plt+0x52a8>
   16640:	andeq	r6, r1, r0, ror r6
   16644:	muleq	r1, ip, r6
   16648:	andeq	r6, r1, ip, asr r6
   1664c:	andeq	r6, r1, ip, asr r6
   16650:			; <UNDEFINED> instruction: 0x000166b0
   16654:	andeq	r6, r1, ip, lsr r7
   16658:	andeq	r6, r1, r4, ror r7
   1665c:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   16660:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16664:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16668:	bl	135ec <__assert_fail@plt+0x20f8>
   1666c:	b	167a0 <__assert_fail@plt+0x52ac>
   16670:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   16674:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16678:	mov	r2, #0
   1667c:	mov	r3, #0
   16680:	strd	r2, [sp, #8]
   16684:	mvn	r3, #0
   16688:	str	r3, [sp]
   1668c:	mov	r3, ip
   16690:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16694:	bl	13274 <__assert_fail@plt+0x1d80>
   16698:	b	167a0 <__assert_fail@plt+0x52ac>
   1669c:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   166a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   166a4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   166a8:	bl	137bc <__assert_fail@plt+0x22c8>
   166ac:	b	167a0 <__assert_fail@plt+0x52ac>
   166b0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   166b4:	orrs	r3, r2, r3
   166b8:	bne	16704 <__assert_fail@plt+0x5210>
   166bc:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   166c0:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   166c4:	bl	1d048 <__assert_fail@plt+0xbb54>
   166c8:	mov	r2, r0
   166cc:	mov	r3, r1
   166d0:	mov	r4, r2
   166d4:	mov	r5, r3
   166d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   166dc:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   166e0:	strd	r2, [sp, #8]
   166e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   166e8:	str	r3, [sp]
   166ec:	mov	r3, r1
   166f0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   166f4:	mov	r0, r4
   166f8:	mov	r1, r5
   166fc:	bl	13274 <__assert_fail@plt+0x1d80>
   16700:	b	167a0 <__assert_fail@plt+0x52ac>
   16704:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   16708:	ldrd	r4, [fp, #-100]	; 0xffffff9c
   1670c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16710:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   16714:	strd	r2, [sp, #16]
   16718:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1671c:	str	r3, [sp, #8]
   16720:	str	ip, [sp, #4]
   16724:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16728:	str	r3, [sp]
   1672c:	mov	r2, r4
   16730:	mov	r3, r5
   16734:	bl	143b8 <__assert_fail@plt+0x2ec4>
   16738:	b	167a0 <__assert_fail@plt+0x52ac>
   1673c:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   16740:	ldrd	r4, [fp, #-100]	; 0xffffff9c
   16744:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16748:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1674c:	strd	r2, [sp, #16]
   16750:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16754:	str	r3, [sp, #8]
   16758:	str	ip, [sp, #4]
   1675c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16760:	str	r3, [sp]
   16764:	mov	r2, r4
   16768:	mov	r3, r5
   1676c:	bl	13ce4 <__assert_fail@plt+0x27f0>
   16770:	b	167a0 <__assert_fail@plt+0x52ac>
   16774:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   16778:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1677c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16780:	sub	lr, fp, #152	; 0x98
   16784:	str	lr, [sp, #8]
   16788:	str	ip, [sp, #4]
   1678c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   16790:	str	ip, [sp]
   16794:	bl	14ad0 <__assert_fail@plt+0x35dc>
   16798:	b	167a0 <__assert_fail@plt+0x52ac>
   1679c:	bl	114d0 <abort@plt>
   167a0:	mov	r0, #0
   167a4:	bl	114dc <close@plt>
   167a8:	mov	r3, r0
   167ac:	cmp	r3, #0
   167b0:	beq	167f4 <__assert_fail@plt+0x5300>
   167b4:	bl	113bc <__errno_location@plt>
   167b8:	mov	r3, r0
   167bc:	ldr	r4, [r3]
   167c0:	movw	r3, #62628	; 0xf4a4
   167c4:	movt	r3, #2
   167c8:	ldr	r3, [r3]
   167cc:	mov	r2, r3
   167d0:	mov	r1, #3
   167d4:	mov	r0, #0
   167d8:	bl	19760 <__assert_fail@plt+0x826c>
   167dc:	mov	r3, r0
   167e0:	movw	r2, #57440	; 0xe060
   167e4:	movt	r2, #1
   167e8:	mov	r1, r4
   167ec:	mov	r0, #1
   167f0:	bl	112d8 <error@plt>
   167f4:	movw	r3, #61792	; 0xf160
   167f8:	movt	r3, #2
   167fc:	ldr	r1, [r3]
   16800:	movw	r3, #62332	; 0xf37c
   16804:	movt	r3, #2
   16808:	ldr	r2, [r3]
   1680c:	movw	r3, #62608	; 0xf490
   16810:	movt	r3, #2
   16814:	ldr	r3, [r3]
   16818:	mov	r0, #0
   1681c:	bl	12cf8 <__assert_fail@plt+0x1804>
   16820:	mov	r0, #0
   16824:	bl	11350 <exit@plt>
   16828:	push	{fp}		; (str fp, [sp, #-4]!)
   1682c:	add	fp, sp, #0
   16830:	sub	sp, sp, #28
   16834:	str	r0, [fp, #-24]	; 0xffffffe8
   16838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1683c:	str	r3, [fp, #-8]
   16840:	mov	r3, #0
   16844:	strb	r3, [fp, #-13]
   16848:	b	16858 <__assert_fail@plt+0x5364>
   1684c:	ldr	r3, [fp, #-8]
   16850:	add	r3, r3, #1
   16854:	str	r3, [fp, #-8]
   16858:	ldr	r3, [fp, #-8]
   1685c:	ldrb	r3, [r3]
   16860:	cmp	r3, #47	; 0x2f
   16864:	beq	1684c <__assert_fail@plt+0x5358>
   16868:	ldr	r3, [fp, #-8]
   1686c:	str	r3, [fp, #-12]
   16870:	b	168b8 <__assert_fail@plt+0x53c4>
   16874:	ldr	r3, [fp, #-12]
   16878:	ldrb	r3, [r3]
   1687c:	cmp	r3, #47	; 0x2f
   16880:	bne	16890 <__assert_fail@plt+0x539c>
   16884:	mov	r3, #1
   16888:	strb	r3, [fp, #-13]
   1688c:	b	168ac <__assert_fail@plt+0x53b8>
   16890:	ldrb	r3, [fp, #-13]
   16894:	cmp	r3, #0
   16898:	beq	168ac <__assert_fail@plt+0x53b8>
   1689c:	ldr	r3, [fp, #-12]
   168a0:	str	r3, [fp, #-8]
   168a4:	mov	r3, #0
   168a8:	strb	r3, [fp, #-13]
   168ac:	ldr	r3, [fp, #-12]
   168b0:	add	r3, r3, #1
   168b4:	str	r3, [fp, #-12]
   168b8:	ldr	r3, [fp, #-12]
   168bc:	ldrb	r3, [r3]
   168c0:	cmp	r3, #0
   168c4:	bne	16874 <__assert_fail@plt+0x5380>
   168c8:	ldr	r3, [fp, #-8]
   168cc:	mov	r0, r3
   168d0:	add	sp, fp, #0
   168d4:	pop	{fp}		; (ldr fp, [sp], #4)
   168d8:	bx	lr
   168dc:	str	fp, [sp, #-8]!
   168e0:	str	lr, [sp, #4]
   168e4:	add	fp, sp, #4
   168e8:	sub	sp, sp, #16
   168ec:	str	r0, [fp, #-16]
   168f0:	mov	r3, #0
   168f4:	str	r3, [fp, #-12]
   168f8:	ldr	r0, [fp, #-16]
   168fc:	bl	11368 <strlen@plt>
   16900:	str	r0, [fp, #-8]
   16904:	b	16914 <__assert_fail@plt+0x5420>
   16908:	ldr	r3, [fp, #-8]
   1690c:	sub	r3, r3, #1
   16910:	str	r3, [fp, #-8]
   16914:	ldr	r3, [fp, #-8]
   16918:	cmp	r3, #1
   1691c:	bls	1693c <__assert_fail@plt+0x5448>
   16920:	ldr	r3, [fp, #-8]
   16924:	sub	r3, r3, #1
   16928:	ldr	r2, [fp, #-16]
   1692c:	add	r3, r2, r3
   16930:	ldrb	r3, [r3]
   16934:	cmp	r3, #47	; 0x2f
   16938:	beq	16908 <__assert_fail@plt+0x5414>
   1693c:	ldr	r3, [fp, #-8]
   16940:	mov	r0, r3
   16944:	sub	sp, fp, #4
   16948:	ldr	fp, [sp]
   1694c:	add	sp, sp, #4
   16950:	pop	{pc}		; (ldr pc, [sp], #4)
   16954:	push	{fp}		; (str fp, [sp, #-4]!)
   16958:	add	fp, sp, #0
   1695c:	sub	sp, sp, #12
   16960:	str	r0, [fp, #-8]
   16964:	movw	r3, #62756	; 0xf524
   16968:	movt	r3, #2
   1696c:	ldr	r2, [fp, #-8]
   16970:	str	r2, [r3]
   16974:	nop	{0}
   16978:	add	sp, fp, #0
   1697c:	pop	{fp}		; (ldr fp, [sp], #4)
   16980:	bx	lr
   16984:	push	{fp}		; (str fp, [sp, #-4]!)
   16988:	add	fp, sp, #0
   1698c:	sub	sp, sp, #12
   16990:	mov	r3, r0
   16994:	strb	r3, [fp, #-5]
   16998:	movw	r3, #62760	; 0xf528
   1699c:	movt	r3, #2
   169a0:	ldrb	r2, [fp, #-5]
   169a4:	strb	r2, [r3]
   169a8:	nop	{0}
   169ac:	add	sp, fp, #0
   169b0:	pop	{fp}		; (ldr fp, [sp], #4)
   169b4:	bx	lr
   169b8:	str	r4, [sp, #-12]!
   169bc:	str	fp, [sp, #4]
   169c0:	str	lr, [sp, #8]
   169c4:	add	fp, sp, #8
   169c8:	sub	sp, sp, #20
   169cc:	movw	r3, #62316	; 0xf36c
   169d0:	movt	r3, #2
   169d4:	ldr	r3, [r3]
   169d8:	mov	r0, r3
   169dc:	bl	1c0a0 <__assert_fail@plt+0xabac>
   169e0:	mov	r3, r0
   169e4:	cmp	r3, #0
   169e8:	beq	16abc <__assert_fail@plt+0x55c8>
   169ec:	movw	r3, #62760	; 0xf528
   169f0:	movt	r3, #2
   169f4:	ldrb	r3, [r3]
   169f8:	eor	r3, r3, #1
   169fc:	uxtb	r3, r3
   16a00:	cmp	r3, #0
   16a04:	bne	16a1c <__assert_fail@plt+0x5528>
   16a08:	bl	113bc <__errno_location@plt>
   16a0c:	mov	r3, r0
   16a10:	ldr	r3, [r3]
   16a14:	cmp	r3, #32
   16a18:	beq	16abc <__assert_fail@plt+0x55c8>
   16a1c:	movw	r0, #58588	; 0xe4dc
   16a20:	movt	r0, #1
   16a24:	bl	1135c <gettext@plt>
   16a28:	str	r0, [fp, #-16]
   16a2c:	movw	r3, #62756	; 0xf524
   16a30:	movt	r3, #2
   16a34:	ldr	r3, [r3]
   16a38:	cmp	r3, #0
   16a3c:	beq	16a88 <__assert_fail@plt+0x5594>
   16a40:	bl	113bc <__errno_location@plt>
   16a44:	mov	r3, r0
   16a48:	ldr	r4, [r3]
   16a4c:	movw	r3, #62756	; 0xf524
   16a50:	movt	r3, #2
   16a54:	ldr	r3, [r3]
   16a58:	mov	r0, r3
   16a5c:	bl	196e8 <__assert_fail@plt+0x81f4>
   16a60:	mov	r2, r0
   16a64:	ldr	r3, [fp, #-16]
   16a68:	str	r3, [sp]
   16a6c:	mov	r3, r2
   16a70:	movw	r2, #58600	; 0xe4e8
   16a74:	movt	r2, #1
   16a78:	mov	r1, r4
   16a7c:	mov	r0, #0
   16a80:	bl	112d8 <error@plt>
   16a84:	b	16aa8 <__assert_fail@plt+0x55b4>
   16a88:	bl	113bc <__errno_location@plt>
   16a8c:	mov	r3, r0
   16a90:	ldr	r1, [r3]
   16a94:	ldr	r3, [fp, #-16]
   16a98:	movw	r2, #58608	; 0xe4f0
   16a9c:	movt	r2, #1
   16aa0:	mov	r0, #0
   16aa4:	bl	112d8 <error@plt>
   16aa8:	movw	r3, #61804	; 0xf16c
   16aac:	movt	r3, #2
   16ab0:	ldr	r3, [r3]
   16ab4:	mov	r0, r3
   16ab8:	bl	111d0 <_exit@plt>
   16abc:	movw	r3, #62312	; 0xf368
   16ac0:	movt	r3, #2
   16ac4:	ldr	r3, [r3]
   16ac8:	mov	r0, r3
   16acc:	bl	1c0a0 <__assert_fail@plt+0xabac>
   16ad0:	mov	r3, r0
   16ad4:	cmp	r3, #0
   16ad8:	beq	16af0 <__assert_fail@plt+0x55fc>
   16adc:	movw	r3, #61804	; 0xf16c
   16ae0:	movt	r3, #2
   16ae4:	ldr	r3, [r3]
   16ae8:	mov	r0, r3
   16aec:	bl	111d0 <_exit@plt>
   16af0:	nop	{0}
   16af4:	sub	sp, fp, #8
   16af8:	ldr	r4, [sp]
   16afc:	ldr	fp, [sp, #4]
   16b00:	add	sp, sp, #8
   16b04:	pop	{pc}		; (ldr pc, [sp], #4)
   16b08:	str	fp, [sp, #-8]!
   16b0c:	str	lr, [sp, #4]
   16b10:	add	fp, sp, #4
   16b14:	sub	sp, sp, #32
   16b18:	str	r0, [fp, #-24]	; 0xffffffe8
   16b1c:	mov	r3, #0
   16b20:	str	r3, [fp, #-8]
   16b24:	mov	r3, #0
   16b28:	str	r3, [fp, #-12]
   16b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b30:	bl	113ec <fileno@plt>
   16b34:	str	r0, [fp, #-16]
   16b38:	ldr	r3, [fp, #-16]
   16b3c:	cmp	r3, #0
   16b40:	bge	16b54 <__assert_fail@plt+0x5660>
   16b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b48:	bl	11410 <fclose@plt>
   16b4c:	mov	r3, r0
   16b50:	b	16bf8 <__assert_fail@plt+0x5704>
   16b54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b58:	bl	11320 <__freading@plt>
   16b5c:	mov	r3, r0
   16b60:	cmp	r3, #0
   16b64:	beq	16ba0 <__assert_fail@plt+0x56ac>
   16b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b6c:	bl	113ec <fileno@plt>
   16b70:	mov	r1, r0
   16b74:	mov	r3, #1
   16b78:	str	r3, [sp]
   16b7c:	mov	r2, #0
   16b80:	mov	r3, #0
   16b84:	mov	r0, r1
   16b88:	bl	11284 <lseek64@plt>
   16b8c:	mvn	r2, #0
   16b90:	mvn	r3, #0
   16b94:	cmp	r1, r3
   16b98:	cmpeq	r0, r2
   16b9c:	beq	16bc4 <__assert_fail@plt+0x56d0>
   16ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ba4:	bl	16d90 <__assert_fail@plt+0x589c>
   16ba8:	mov	r3, r0
   16bac:	cmp	r3, #0
   16bb0:	beq	16bc4 <__assert_fail@plt+0x56d0>
   16bb4:	bl	113bc <__errno_location@plt>
   16bb8:	mov	r3, r0
   16bbc:	ldr	r3, [r3]
   16bc0:	str	r3, [fp, #-8]
   16bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bc8:	bl	11410 <fclose@plt>
   16bcc:	str	r0, [fp, #-12]
   16bd0:	ldr	r3, [fp, #-8]
   16bd4:	cmp	r3, #0
   16bd8:	beq	16bf4 <__assert_fail@plt+0x5700>
   16bdc:	bl	113bc <__errno_location@plt>
   16be0:	mov	r2, r0
   16be4:	ldr	r3, [fp, #-8]
   16be8:	str	r3, [r2]
   16bec:	mvn	r3, #0
   16bf0:	str	r3, [fp, #-12]
   16bf4:	ldr	r3, [fp, #-12]
   16bf8:	mov	r0, r3
   16bfc:	sub	sp, fp, #4
   16c00:	ldr	fp, [sp]
   16c04:	add	sp, sp, #4
   16c08:	pop	{pc}		; (ldr pc, [sp], #4)
   16c0c:	push	{r1, r2, r3}
   16c10:	str	fp, [sp, #-8]!
   16c14:	str	lr, [sp, #4]
   16c18:	add	fp, sp, #4
   16c1c:	sub	sp, sp, #20
   16c20:	str	r0, [fp, #-20]	; 0xffffffec
   16c24:	mov	r3, #0
   16c28:	str	r3, [fp, #-12]
   16c2c:	ldr	r3, [fp, #4]
   16c30:	and	r3, r3, #64	; 0x40
   16c34:	cmp	r3, #0
   16c38:	beq	16c58 <__assert_fail@plt+0x5764>
   16c3c:	add	r3, fp, #8
   16c40:	str	r3, [fp, #-16]
   16c44:	ldr	r3, [fp, #-16]
   16c48:	add	r2, r3, #4
   16c4c:	str	r2, [fp, #-16]
   16c50:	ldr	r3, [r3]
   16c54:	str	r3, [fp, #-12]
   16c58:	ldr	r2, [fp, #-12]
   16c5c:	ldr	r1, [fp, #4]
   16c60:	ldr	r0, [fp, #-20]	; 0xffffffec
   16c64:	bl	112e4 <open64@plt>
   16c68:	mov	r3, r0
   16c6c:	mov	r0, r3
   16c70:	bl	1a030 <__assert_fail@plt+0x8b3c>
   16c74:	mov	r3, r0
   16c78:	mov	r0, r3
   16c7c:	sub	sp, fp, #4
   16c80:	ldr	fp, [sp]
   16c84:	ldr	lr, [sp, #4]
   16c88:	add	sp, sp, #8
   16c8c:	add	sp, sp, #12
   16c90:	bx	lr
   16c94:	str	fp, [sp, #-8]!
   16c98:	str	lr, [sp, #4]
   16c9c:	add	fp, sp, #4
   16ca0:	sub	sp, sp, #32
   16ca4:	str	r0, [fp, #-24]	; 0xffffffe8
   16ca8:	str	r1, [fp, #-28]	; 0xffffffe4
   16cac:	str	r2, [fp, #-32]	; 0xffffffe0
   16cb0:	str	r3, [fp, #-36]	; 0xffffffdc
   16cb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16cb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16cbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16cc0:	bl	112e4 <open64@plt>
   16cc4:	str	r0, [fp, #-8]
   16cc8:	ldr	r2, [fp, #-8]
   16ccc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16cd0:	cmp	r2, r3
   16cd4:	beq	16ce4 <__assert_fail@plt+0x57f0>
   16cd8:	ldr	r3, [fp, #-8]
   16cdc:	cmp	r3, #0
   16ce0:	bge	16cec <__assert_fail@plt+0x57f8>
   16ce4:	ldr	r3, [fp, #-8]
   16ce8:	b	16d28 <__assert_fail@plt+0x5834>
   16cec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cf0:	ldr	r0, [fp, #-8]
   16cf4:	bl	11224 <dup2@plt>
   16cf8:	str	r0, [fp, #-12]
   16cfc:	bl	113bc <__errno_location@plt>
   16d00:	mov	r3, r0
   16d04:	ldr	r3, [r3]
   16d08:	str	r3, [fp, #-16]
   16d0c:	ldr	r0, [fp, #-8]
   16d10:	bl	114dc <close@plt>
   16d14:	bl	113bc <__errno_location@plt>
   16d18:	mov	r2, r0
   16d1c:	ldr	r3, [fp, #-16]
   16d20:	str	r3, [r2]
   16d24:	ldr	r3, [fp, #-12]
   16d28:	mov	r0, r3
   16d2c:	sub	sp, fp, #4
   16d30:	ldr	fp, [sp]
   16d34:	add	sp, sp, #4
   16d38:	pop	{pc}		; (ldr pc, [sp], #4)
   16d3c:	str	fp, [sp, #-8]!
   16d40:	str	lr, [sp, #4]
   16d44:	add	fp, sp, #4
   16d48:	sub	sp, sp, #16
   16d4c:	str	r0, [fp, #-8]
   16d50:	ldr	r3, [fp, #-8]
   16d54:	ldr	r3, [r3]
   16d58:	and	r3, r3, #256	; 0x100
   16d5c:	cmp	r3, #0
   16d60:	beq	16d7c <__assert_fail@plt+0x5888>
   16d64:	mov	r3, #1
   16d68:	str	r3, [sp]
   16d6c:	mov	r2, #0
   16d70:	mov	r3, #0
   16d74:	ldr	r0, [fp, #-8]
   16d78:	bl	16ea0 <__assert_fail@plt+0x59ac>
   16d7c:	nop	{0}
   16d80:	sub	sp, fp, #4
   16d84:	ldr	fp, [sp]
   16d88:	add	sp, sp, #4
   16d8c:	pop	{pc}		; (ldr pc, [sp], #4)
   16d90:	str	fp, [sp, #-8]!
   16d94:	str	lr, [sp, #4]
   16d98:	add	fp, sp, #4
   16d9c:	sub	sp, sp, #8
   16da0:	str	r0, [fp, #-8]
   16da4:	ldr	r3, [fp, #-8]
   16da8:	cmp	r3, #0
   16dac:	beq	16dc4 <__assert_fail@plt+0x58d0>
   16db0:	ldr	r0, [fp, #-8]
   16db4:	bl	11320 <__freading@plt>
   16db8:	mov	r3, r0
   16dbc:	cmp	r3, #0
   16dc0:	bne	16dd4 <__assert_fail@plt+0x58e0>
   16dc4:	ldr	r0, [fp, #-8]
   16dc8:	bl	111a0 <fflush@plt>
   16dcc:	mov	r3, r0
   16dd0:	b	16de8 <__assert_fail@plt+0x58f4>
   16dd4:	ldr	r0, [fp, #-8]
   16dd8:	bl	16d3c <__assert_fail@plt+0x5848>
   16ddc:	ldr	r0, [fp, #-8]
   16de0:	bl	111a0 <fflush@plt>
   16de4:	mov	r3, r0
   16de8:	mov	r0, r3
   16dec:	sub	sp, fp, #4
   16df0:	ldr	fp, [sp]
   16df4:	add	sp, sp, #4
   16df8:	pop	{pc}		; (ldr pc, [sp], #4)
   16dfc:	str	r4, [sp, #-12]!
   16e00:	str	fp, [sp, #4]
   16e04:	str	lr, [sp, #8]
   16e08:	add	fp, sp, #8
   16e0c:	sub	sp, sp, #20
   16e10:	str	r0, [fp, #-24]	; 0xffffffe8
   16e14:	bl	113bc <__errno_location@plt>
   16e18:	mov	r3, r0
   16e1c:	ldr	r3, [r3]
   16e20:	str	r3, [fp, #-20]	; 0xffffffec
   16e24:	bl	113bc <__errno_location@plt>
   16e28:	mov	r3, r0
   16e2c:	ldr	r3, [r3]
   16e30:	str	r3, [fp, #-16]
   16e34:	bl	113bc <__errno_location@plt>
   16e38:	mov	r2, r0
   16e3c:	mov	r3, #0
   16e40:	str	r3, [r2]
   16e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e48:	bl	111c4 <free@plt>
   16e4c:	bl	113bc <__errno_location@plt>
   16e50:	mov	r3, r0
   16e54:	ldr	r3, [r3]
   16e58:	cmp	r3, #0
   16e5c:	moveq	r3, #1
   16e60:	movne	r3, #0
   16e64:	uxtb	r3, r3
   16e68:	mov	r4, r3
   16e6c:	bl	113bc <__errno_location@plt>
   16e70:	mov	r2, r0
   16e74:	lsl	r3, r4, #2
   16e78:	sub	r1, fp, #12
   16e7c:	add	r3, r1, r3
   16e80:	ldr	r3, [r3, #-8]
   16e84:	str	r3, [r2]
   16e88:	nop	{0}
   16e8c:	sub	sp, fp, #8
   16e90:	ldr	r4, [sp]
   16e94:	ldr	fp, [sp, #4]
   16e98:	add	sp, sp, #8
   16e9c:	pop	{pc}		; (ldr pc, [sp], #4)
   16ea0:	str	fp, [sp, #-8]!
   16ea4:	str	lr, [sp, #4]
   16ea8:	add	fp, sp, #4
   16eac:	sub	sp, sp, #32
   16eb0:	str	r0, [fp, #-16]
   16eb4:	strd	r2, [fp, #-28]	; 0xffffffe4
   16eb8:	ldr	r3, [fp, #-16]
   16ebc:	ldr	r2, [r3, #8]
   16ec0:	ldr	r3, [fp, #-16]
   16ec4:	ldr	r3, [r3, #4]
   16ec8:	cmp	r2, r3
   16ecc:	bne	16f64 <__assert_fail@plt+0x5a70>
   16ed0:	ldr	r3, [fp, #-16]
   16ed4:	ldr	r2, [r3, #20]
   16ed8:	ldr	r3, [fp, #-16]
   16edc:	ldr	r3, [r3, #16]
   16ee0:	cmp	r2, r3
   16ee4:	bne	16f64 <__assert_fail@plt+0x5a70>
   16ee8:	ldr	r3, [fp, #-16]
   16eec:	ldr	r3, [r3, #36]	; 0x24
   16ef0:	cmp	r3, #0
   16ef4:	bne	16f64 <__assert_fail@plt+0x5a70>
   16ef8:	ldr	r0, [fp, #-16]
   16efc:	bl	113ec <fileno@plt>
   16f00:	mov	r1, r0
   16f04:	ldr	r3, [fp, #4]
   16f08:	str	r3, [sp]
   16f0c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16f10:	mov	r0, r1
   16f14:	bl	11284 <lseek64@plt>
   16f18:	strd	r0, [fp, #-12]
   16f1c:	ldrd	r2, [fp, #-12]
   16f20:	mvn	r0, #0
   16f24:	mvn	r1, #0
   16f28:	cmp	r3, r1
   16f2c:	cmpeq	r2, r0
   16f30:	bne	16f3c <__assert_fail@plt+0x5a48>
   16f34:	mvn	r3, #0
   16f38:	b	16f7c <__assert_fail@plt+0x5a88>
   16f3c:	ldr	r3, [fp, #-16]
   16f40:	ldr	r3, [r3]
   16f44:	bic	r2, r3, #16
   16f48:	ldr	r3, [fp, #-16]
   16f4c:	str	r2, [r3]
   16f50:	ldr	r1, [fp, #-16]
   16f54:	ldrd	r2, [fp, #-12]
   16f58:	strd	r2, [r1, #80]	; 0x50
   16f5c:	mov	r3, #0
   16f60:	b	16f7c <__assert_fail@plt+0x5a88>
   16f64:	ldr	r3, [fp, #4]
   16f68:	str	r3, [sp]
   16f6c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16f70:	ldr	r0, [fp, #-16]
   16f74:	bl	11428 <fseeko64@plt>
   16f78:	mov	r3, r0
   16f7c:	mov	r0, r3
   16f80:	sub	sp, fp, #4
   16f84:	ldr	fp, [sp]
   16f88:	add	sp, sp, #4
   16f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   16f90:	str	fp, [sp, #-8]!
   16f94:	str	lr, [sp, #4]
   16f98:	add	fp, sp, #4
   16f9c:	sub	sp, sp, #32
   16fa0:	str	r0, [fp, #-24]	; 0xffffffe8
   16fa4:	str	r1, [fp, #-28]	; 0xffffffe4
   16fa8:	str	r2, [fp, #-32]	; 0xffffffe0
   16fac:	mov	r3, #0
   16fb0:	str	r3, [fp, #-8]
   16fb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16fb8:	str	r3, [fp, #-12]
   16fbc:	b	17030 <__assert_fail@plt+0x5b3c>
   16fc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16fc4:	ldr	r1, [fp, #-12]
   16fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fcc:	bl	19b48 <__assert_fail@plt+0x8654>
   16fd0:	str	r0, [fp, #-16]
   16fd4:	ldr	r3, [fp, #-16]
   16fd8:	cmn	r3, #1
   16fdc:	beq	17040 <__assert_fail@plt+0x5b4c>
   16fe0:	ldr	r3, [fp, #-16]
   16fe4:	cmp	r3, #0
   16fe8:	bne	17000 <__assert_fail@plt+0x5b0c>
   16fec:	bl	113bc <__errno_location@plt>
   16ff0:	mov	r2, r0
   16ff4:	mov	r3, #28
   16ff8:	str	r3, [r2]
   16ffc:	b	17044 <__assert_fail@plt+0x5b50>
   17000:	ldr	r2, [fp, #-8]
   17004:	ldr	r3, [fp, #-16]
   17008:	add	r3, r2, r3
   1700c:	str	r3, [fp, #-8]
   17010:	ldr	r2, [fp, #-12]
   17014:	ldr	r3, [fp, #-16]
   17018:	add	r3, r2, r3
   1701c:	str	r3, [fp, #-12]
   17020:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17024:	ldr	r3, [fp, #-16]
   17028:	sub	r3, r2, r3
   1702c:	str	r3, [fp, #-32]	; 0xffffffe0
   17030:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17034:	cmp	r3, #0
   17038:	bne	16fc0 <__assert_fail@plt+0x5acc>
   1703c:	b	17044 <__assert_fail@plt+0x5b50>
   17040:	nop	{0}
   17044:	ldr	r3, [fp, #-8]
   17048:	mov	r0, r3
   1704c:	sub	sp, fp, #4
   17050:	ldr	fp, [sp]
   17054:	add	sp, sp, #4
   17058:	pop	{pc}		; (ldr pc, [sp], #4)
   1705c:	str	fp, [sp, #-8]!
   17060:	str	lr, [sp, #4]
   17064:	add	fp, sp, #4
   17068:	sub	sp, sp, #24
   1706c:	strd	r0, [fp, #-20]	; 0xffffffec
   17070:	str	r2, [fp, #-24]	; 0xffffffe8
   17074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17078:	add	r3, r3, #20
   1707c:	str	r3, [fp, #-8]
   17080:	ldr	r3, [fp, #-8]
   17084:	mov	r2, #0
   17088:	strb	r2, [r3]
   1708c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   17090:	mov	r2, #10
   17094:	mov	r3, #0
   17098:	bl	1d048 <__assert_fail@plt+0xbb54>
   1709c:	uxtb	r3, r2
   170a0:	ldr	r2, [fp, #-8]
   170a4:	sub	r2, r2, #1
   170a8:	str	r2, [fp, #-8]
   170ac:	add	r3, r3, #48	; 0x30
   170b0:	uxtb	r2, r3
   170b4:	ldr	r3, [fp, #-8]
   170b8:	strb	r2, [r3]
   170bc:	ldrd	r0, [fp, #-20]	; 0xffffffec
   170c0:	mov	r2, #10
   170c4:	mov	r3, #0
   170c8:	bl	1d048 <__assert_fail@plt+0xbb54>
   170cc:	mov	r2, r0
   170d0:	mov	r3, r1
   170d4:	strd	r2, [fp, #-20]	; 0xffffffec
   170d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   170dc:	orrs	r3, r2, r3
   170e0:	bne	1708c <__assert_fail@plt+0x5b98>
   170e4:	ldr	r3, [fp, #-8]
   170e8:	mov	r0, r3
   170ec:	sub	sp, fp, #4
   170f0:	ldr	fp, [sp]
   170f4:	add	sp, sp, #4
   170f8:	pop	{pc}		; (ldr pc, [sp], #4)
   170fc:	str	fp, [sp, #-8]!
   17100:	str	lr, [sp, #4]
   17104:	add	fp, sp, #4
   17108:	sub	sp, sp, #16
   1710c:	str	r0, [fp, #-16]
   17110:	ldr	r3, [fp, #-16]
   17114:	cmp	r3, #0
   17118:	bne	17140 <__assert_fail@plt+0x5c4c>
   1711c:	movw	r3, #62312	; 0xf368
   17120:	movt	r3, #2
   17124:	ldr	r3, [r3]
   17128:	mov	r2, #55	; 0x37
   1712c:	mov	r1, #1
   17130:	movw	r0, #58612	; 0xe4f4
   17134:	movt	r0, #1
   17138:	bl	11278 <fwrite@plt>
   1713c:	bl	114d0 <abort@plt>
   17140:	mov	r1, #47	; 0x2f
   17144:	ldr	r0, [fp, #-16]
   17148:	bl	11470 <strrchr@plt>
   1714c:	str	r0, [fp, #-8]
   17150:	ldr	r3, [fp, #-8]
   17154:	cmp	r3, #0
   17158:	beq	17168 <__assert_fail@plt+0x5c74>
   1715c:	ldr	r3, [fp, #-8]
   17160:	add	r3, r3, #1
   17164:	b	1716c <__assert_fail@plt+0x5c78>
   17168:	ldr	r3, [fp, #-16]
   1716c:	str	r3, [fp, #-12]
   17170:	ldr	r2, [fp, #-12]
   17174:	ldr	r3, [fp, #-16]
   17178:	sub	r3, r2, r3
   1717c:	cmp	r3, #6
   17180:	ble	171f0 <__assert_fail@plt+0x5cfc>
   17184:	ldr	r3, [fp, #-12]
   17188:	sub	r3, r3, #7
   1718c:	mov	r2, #7
   17190:	movw	r1, #58668	; 0xe52c
   17194:	movt	r1, #1
   17198:	mov	r0, r3
   1719c:	bl	114c4 <strncmp@plt>
   171a0:	mov	r3, r0
   171a4:	cmp	r3, #0
   171a8:	bne	171f0 <__assert_fail@plt+0x5cfc>
   171ac:	ldr	r3, [fp, #-12]
   171b0:	str	r3, [fp, #-16]
   171b4:	mov	r2, #3
   171b8:	movw	r1, #58676	; 0xe534
   171bc:	movt	r1, #1
   171c0:	ldr	r0, [fp, #-12]
   171c4:	bl	114c4 <strncmp@plt>
   171c8:	mov	r3, r0
   171cc:	cmp	r3, #0
   171d0:	bne	171f0 <__assert_fail@plt+0x5cfc>
   171d4:	ldr	r3, [fp, #-12]
   171d8:	add	r3, r3, #3
   171dc:	str	r3, [fp, #-16]
   171e0:	movw	r3, #62296	; 0xf358
   171e4:	movt	r3, #2
   171e8:	ldr	r2, [fp, #-16]
   171ec:	str	r2, [r3]
   171f0:	movw	r3, #62764	; 0xf52c
   171f4:	movt	r3, #2
   171f8:	ldr	r2, [fp, #-16]
   171fc:	str	r2, [r3]
   17200:	movw	r3, #62300	; 0xf35c
   17204:	movt	r3, #2
   17208:	ldr	r2, [fp, #-16]
   1720c:	str	r2, [r3]
   17210:	nop	{0}
   17214:	sub	sp, fp, #4
   17218:	ldr	fp, [sp]
   1721c:	add	sp, sp, #4
   17220:	pop	{pc}		; (ldr pc, [sp], #4)
   17224:	str	fp, [sp, #-8]!
   17228:	str	lr, [sp, #4]
   1722c:	add	fp, sp, #4
   17230:	sub	sp, sp, #16
   17234:	str	r0, [fp, #-16]
   17238:	bl	113bc <__errno_location@plt>
   1723c:	mov	r3, r0
   17240:	ldr	r3, [r3]
   17244:	str	r3, [fp, #-8]
   17248:	ldr	r3, [fp, #-16]
   1724c:	cmp	r3, #0
   17250:	beq	1725c <__assert_fail@plt+0x5d68>
   17254:	ldr	r3, [fp, #-16]
   17258:	b	17264 <__assert_fail@plt+0x5d70>
   1725c:	movw	r3, #62768	; 0xf530
   17260:	movt	r3, #2
   17264:	mov	r1, #48	; 0x30
   17268:	mov	r0, r3
   1726c:	bl	1b074 <__assert_fail@plt+0x9b80>
   17270:	mov	r3, r0
   17274:	str	r3, [fp, #-12]
   17278:	bl	113bc <__errno_location@plt>
   1727c:	mov	r2, r0
   17280:	ldr	r3, [fp, #-8]
   17284:	str	r3, [r2]
   17288:	ldr	r3, [fp, #-12]
   1728c:	mov	r0, r3
   17290:	sub	sp, fp, #4
   17294:	ldr	fp, [sp]
   17298:	add	sp, sp, #4
   1729c:	pop	{pc}		; (ldr pc, [sp], #4)
   172a0:	push	{fp}		; (str fp, [sp, #-4]!)
   172a4:	add	fp, sp, #0
   172a8:	sub	sp, sp, #12
   172ac:	str	r0, [fp, #-8]
   172b0:	ldr	r3, [fp, #-8]
   172b4:	cmp	r3, #0
   172b8:	beq	172c4 <__assert_fail@plt+0x5dd0>
   172bc:	ldr	r3, [fp, #-8]
   172c0:	b	172cc <__assert_fail@plt+0x5dd8>
   172c4:	movw	r3, #62768	; 0xf530
   172c8:	movt	r3, #2
   172cc:	ldr	r3, [r3]
   172d0:	mov	r0, r3
   172d4:	add	sp, fp, #0
   172d8:	pop	{fp}		; (ldr fp, [sp], #4)
   172dc:	bx	lr
   172e0:	push	{fp}		; (str fp, [sp, #-4]!)
   172e4:	add	fp, sp, #0
   172e8:	sub	sp, sp, #12
   172ec:	str	r0, [fp, #-8]
   172f0:	str	r1, [fp, #-12]
   172f4:	ldr	r3, [fp, #-8]
   172f8:	cmp	r3, #0
   172fc:	beq	17308 <__assert_fail@plt+0x5e14>
   17300:	ldr	r3, [fp, #-8]
   17304:	b	17310 <__assert_fail@plt+0x5e1c>
   17308:	movw	r3, #62768	; 0xf530
   1730c:	movt	r3, #2
   17310:	ldr	r2, [fp, #-12]
   17314:	str	r2, [r3]
   17318:	nop	{0}
   1731c:	add	sp, fp, #0
   17320:	pop	{fp}		; (ldr fp, [sp], #4)
   17324:	bx	lr
   17328:	push	{fp}		; (str fp, [sp, #-4]!)
   1732c:	add	fp, sp, #0
   17330:	sub	sp, sp, #36	; 0x24
   17334:	str	r0, [fp, #-24]	; 0xffffffe8
   17338:	mov	r3, r1
   1733c:	str	r2, [fp, #-32]	; 0xffffffe0
   17340:	strb	r3, [fp, #-25]	; 0xffffffe7
   17344:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   17348:	strb	r3, [fp, #-5]
   1734c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17350:	cmp	r3, #0
   17354:	beq	17360 <__assert_fail@plt+0x5e6c>
   17358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1735c:	b	17368 <__assert_fail@plt+0x5e74>
   17360:	movw	r3, #62768	; 0xf530
   17364:	movt	r3, #2
   17368:	add	r2, r3, #8
   1736c:	ldrb	r3, [fp, #-5]
   17370:	lsr	r3, r3, #5
   17374:	uxtb	r3, r3
   17378:	lsl	r3, r3, #2
   1737c:	add	r3, r2, r3
   17380:	str	r3, [fp, #-12]
   17384:	ldrb	r3, [fp, #-5]
   17388:	and	r3, r3, #31
   1738c:	str	r3, [fp, #-16]
   17390:	ldr	r3, [fp, #-12]
   17394:	ldr	r2, [r3]
   17398:	ldr	r3, [fp, #-16]
   1739c:	lsr	r3, r2, r3
   173a0:	and	r3, r3, #1
   173a4:	str	r3, [fp, #-20]	; 0xffffffec
   173a8:	ldr	r3, [fp, #-12]
   173ac:	ldr	r3, [r3]
   173b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   173b4:	and	r1, r2, #1
   173b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   173bc:	eor	r1, r1, r2
   173c0:	ldr	r2, [fp, #-16]
   173c4:	lsl	r2, r1, r2
   173c8:	eor	r2, r2, r3
   173cc:	ldr	r3, [fp, #-12]
   173d0:	str	r2, [r3]
   173d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   173d8:	mov	r0, r3
   173dc:	add	sp, fp, #0
   173e0:	pop	{fp}		; (ldr fp, [sp], #4)
   173e4:	bx	lr
   173e8:	push	{fp}		; (str fp, [sp, #-4]!)
   173ec:	add	fp, sp, #0
   173f0:	sub	sp, sp, #20
   173f4:	str	r0, [fp, #-16]
   173f8:	str	r1, [fp, #-20]	; 0xffffffec
   173fc:	ldr	r3, [fp, #-16]
   17400:	cmp	r3, #0
   17404:	bne	17414 <__assert_fail@plt+0x5f20>
   17408:	movw	r3, #62768	; 0xf530
   1740c:	movt	r3, #2
   17410:	str	r3, [fp, #-16]
   17414:	ldr	r3, [fp, #-16]
   17418:	ldr	r3, [r3, #4]
   1741c:	str	r3, [fp, #-8]
   17420:	ldr	r3, [fp, #-16]
   17424:	ldr	r2, [fp, #-20]	; 0xffffffec
   17428:	str	r2, [r3, #4]
   1742c:	ldr	r3, [fp, #-8]
   17430:	mov	r0, r3
   17434:	add	sp, fp, #0
   17438:	pop	{fp}		; (ldr fp, [sp], #4)
   1743c:	bx	lr
   17440:	str	fp, [sp, #-8]!
   17444:	str	lr, [sp, #4]
   17448:	add	fp, sp, #4
   1744c:	sub	sp, sp, #16
   17450:	str	r0, [fp, #-8]
   17454:	str	r1, [fp, #-12]
   17458:	str	r2, [fp, #-16]
   1745c:	ldr	r3, [fp, #-8]
   17460:	cmp	r3, #0
   17464:	bne	17474 <__assert_fail@plt+0x5f80>
   17468:	movw	r3, #62768	; 0xf530
   1746c:	movt	r3, #2
   17470:	str	r3, [fp, #-8]
   17474:	ldr	r3, [fp, #-8]
   17478:	mov	r2, #10
   1747c:	str	r2, [r3]
   17480:	ldr	r3, [fp, #-12]
   17484:	cmp	r3, #0
   17488:	beq	17498 <__assert_fail@plt+0x5fa4>
   1748c:	ldr	r3, [fp, #-16]
   17490:	cmp	r3, #0
   17494:	bne	1749c <__assert_fail@plt+0x5fa8>
   17498:	bl	114d0 <abort@plt>
   1749c:	ldr	r3, [fp, #-8]
   174a0:	ldr	r2, [fp, #-12]
   174a4:	str	r2, [r3, #40]	; 0x28
   174a8:	ldr	r3, [fp, #-8]
   174ac:	ldr	r2, [fp, #-16]
   174b0:	str	r2, [r3, #44]	; 0x2c
   174b4:	nop	{0}
   174b8:	sub	sp, fp, #4
   174bc:	ldr	fp, [sp]
   174c0:	add	sp, sp, #4
   174c4:	pop	{pc}		; (ldr pc, [sp], #4)
   174c8:	str	fp, [sp, #-8]!
   174cc:	str	lr, [sp, #4]
   174d0:	add	fp, sp, #4
   174d4:	sub	sp, sp, #56	; 0x38
   174d8:	str	r0, [fp, #-56]	; 0xffffffc8
   174dc:	str	r1, [fp, #-60]	; 0xffffffc4
   174e0:	sub	r1, fp, #52	; 0x34
   174e4:	mov	r2, #0
   174e8:	mov	r3, #0
   174ec:	strd	r2, [r1]
   174f0:	strd	r2, [r1, #8]
   174f4:	strd	r2, [r1, #16]
   174f8:	strd	r2, [r1, #24]
   174fc:	strd	r2, [r1, #32]
   17500:	strd	r2, [r1, #40]	; 0x28
   17504:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17508:	cmp	r3, #10
   1750c:	bne	17514 <__assert_fail@plt+0x6020>
   17510:	bl	114d0 <abort@plt>
   17514:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17518:	str	r3, [fp, #-52]	; 0xffffffcc
   1751c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17520:	mov	r2, r3
   17524:	sub	r3, fp, #52	; 0x34
   17528:	ldrd	r0, [r3]
   1752c:	strd	r0, [r2]
   17530:	ldrd	r0, [r3, #8]
   17534:	strd	r0, [r2, #8]
   17538:	ldrd	r0, [r3, #16]
   1753c:	strd	r0, [r2, #16]
   17540:	ldrd	r0, [r3, #24]
   17544:	strd	r0, [r2, #24]
   17548:	ldrd	r0, [r3, #32]
   1754c:	strd	r0, [r2, #32]
   17550:	ldrd	r0, [r3, #40]	; 0x28
   17554:	strd	r0, [r2, #40]	; 0x28
   17558:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1755c:	sub	sp, fp, #4
   17560:	ldr	fp, [sp]
   17564:	add	sp, sp, #4
   17568:	pop	{pc}		; (ldr pc, [sp], #4)
   1756c:	str	fp, [sp, #-8]!
   17570:	str	lr, [sp, #4]
   17574:	add	fp, sp, #4
   17578:	sub	sp, sp, #16
   1757c:	str	r0, [fp, #-16]
   17580:	str	r1, [fp, #-20]	; 0xffffffec
   17584:	ldr	r0, [fp, #-16]
   17588:	bl	1135c <gettext@plt>
   1758c:	str	r0, [fp, #-8]
   17590:	ldr	r2, [fp, #-8]
   17594:	ldr	r3, [fp, #-16]
   17598:	cmp	r2, r3
   1759c:	beq	175a8 <__assert_fail@plt+0x60b4>
   175a0:	ldr	r3, [fp, #-8]
   175a4:	b	17658 <__assert_fail@plt+0x6164>
   175a8:	bl	1c300 <__assert_fail@plt+0xae0c>
   175ac:	str	r0, [fp, #-12]
   175b0:	movw	r1, #58868	; 0xe5f4
   175b4:	movt	r1, #1
   175b8:	ldr	r0, [fp, #-12]
   175bc:	bl	1bff4 <__assert_fail@plt+0xab00>
   175c0:	mov	r3, r0
   175c4:	cmp	r3, #0
   175c8:	bne	175f4 <__assert_fail@plt+0x6100>
   175cc:	ldr	r3, [fp, #-16]
   175d0:	ldrb	r3, [r3]
   175d4:	cmp	r3, #96	; 0x60
   175d8:	bne	175e8 <__assert_fail@plt+0x60f4>
   175dc:	movw	r3, #58876	; 0xe5fc
   175e0:	movt	r3, #1
   175e4:	b	17658 <__assert_fail@plt+0x6164>
   175e8:	movw	r3, #58880	; 0xe600
   175ec:	movt	r3, #1
   175f0:	b	17658 <__assert_fail@plt+0x6164>
   175f4:	movw	r1, #58884	; 0xe604
   175f8:	movt	r1, #1
   175fc:	ldr	r0, [fp, #-12]
   17600:	bl	1bff4 <__assert_fail@plt+0xab00>
   17604:	mov	r3, r0
   17608:	cmp	r3, #0
   1760c:	bne	17638 <__assert_fail@plt+0x6144>
   17610:	ldr	r3, [fp, #-16]
   17614:	ldrb	r3, [r3]
   17618:	cmp	r3, #96	; 0x60
   1761c:	bne	1762c <__assert_fail@plt+0x6138>
   17620:	movw	r3, #58892	; 0xe60c
   17624:	movt	r3, #1
   17628:	b	17658 <__assert_fail@plt+0x6164>
   1762c:	movw	r3, #58896	; 0xe610
   17630:	movt	r3, #1
   17634:	b	17658 <__assert_fail@plt+0x6164>
   17638:	ldr	r3, [fp, #-20]	; 0xffffffec
   1763c:	cmp	r3, #9
   17640:	bne	17650 <__assert_fail@plt+0x615c>
   17644:	movw	r3, #58900	; 0xe614
   17648:	movt	r3, #1
   1764c:	b	17658 <__assert_fail@plt+0x6164>
   17650:	movw	r3, #58904	; 0xe618
   17654:	movt	r3, #1
   17658:	mov	r0, r3
   1765c:	sub	sp, fp, #4
   17660:	ldr	fp, [sp]
   17664:	add	sp, sp, #4
   17668:	pop	{pc}		; (ldr pc, [sp], #4)
   1766c:	str	r4, [sp, #-12]!
   17670:	str	fp, [sp, #4]
   17674:	str	lr, [sp, #8]
   17678:	add	fp, sp, #8
   1767c:	sub	sp, sp, #116	; 0x74
   17680:	str	r0, [fp, #-88]	; 0xffffffa8
   17684:	str	r1, [fp, #-92]	; 0xffffffa4
   17688:	str	r2, [fp, #-96]	; 0xffffffa0
   1768c:	str	r3, [fp, #-100]	; 0xffffff9c
   17690:	mov	r3, #0
   17694:	str	r3, [fp, #-20]	; 0xffffffec
   17698:	mov	r3, #0
   1769c:	str	r3, [fp, #-24]	; 0xffffffe8
   176a0:	mov	r3, #0
   176a4:	str	r3, [fp, #-28]	; 0xffffffe4
   176a8:	mov	r3, #0
   176ac:	str	r3, [fp, #-32]	; 0xffffffe0
   176b0:	mov	r3, #0
   176b4:	strb	r3, [fp, #-33]	; 0xffffffdf
   176b8:	bl	1129c <__ctype_get_mb_cur_max@plt>
   176bc:	mov	r3, r0
   176c0:	cmp	r3, #1
   176c4:	moveq	r3, #1
   176c8:	movne	r3, #0
   176cc:	strb	r3, [fp, #-57]	; 0xffffffc7
   176d0:	ldr	r3, [fp, #8]
   176d4:	and	r3, r3, #2
   176d8:	cmp	r3, #0
   176dc:	movne	r3, #1
   176e0:	moveq	r3, #0
   176e4:	strb	r3, [fp, #-34]	; 0xffffffde
   176e8:	mov	r3, #0
   176ec:	strb	r3, [fp, #-35]	; 0xffffffdd
   176f0:	mov	r3, #0
   176f4:	strb	r3, [fp, #-36]	; 0xffffffdc
   176f8:	mov	r3, #1
   176fc:	strb	r3, [fp, #-37]	; 0xffffffdb
   17700:	ldr	r3, [fp, #4]
   17704:	cmp	r3, #10
   17708:	ldrls	pc, [pc, r3, lsl #2]
   1770c:	b	17924 <__assert_fail@plt+0x6430>
   17710:	andeq	r7, r1, r8, lsl r9
   17714:	muleq	r1, r0, r8
   17718:			; <UNDEFINED> instruction: 0x000178b4
   1771c:	andeq	r7, r1, r8, lsl #17
   17720:	muleq	r1, r8, r8
   17724:	andeq	r7, r1, ip, asr #14
   17728:	andeq	r7, r1, ip, lsr r7
   1772c:			; <UNDEFINED> instruction: 0x000177b0
   17730:	andeq	r7, r1, r4, asr #15
   17734:	andeq	r7, r1, r4, asr #15
   17738:	andeq	r7, r1, r4, asr #15
   1773c:	mov	r3, #5
   17740:	str	r3, [fp, #4]
   17744:	mov	r3, #1
   17748:	strb	r3, [fp, #-34]	; 0xffffffde
   1774c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   17750:	eor	r3, r3, #1
   17754:	uxtb	r3, r3
   17758:	cmp	r3, #0
   1775c:	beq	17790 <__assert_fail@plt+0x629c>
   17760:	ldr	r2, [fp, #-20]	; 0xffffffec
   17764:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17768:	cmp	r2, r3
   1776c:	bcs	17784 <__assert_fail@plt+0x6290>
   17770:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17774:	ldr	r3, [fp, #-20]	; 0xffffffec
   17778:	add	r3, r2, r3
   1777c:	mov	r2, #34	; 0x22
   17780:	strb	r2, [r3]
   17784:	ldr	r3, [fp, #-20]	; 0xffffffec
   17788:	add	r3, r3, #1
   1778c:	str	r3, [fp, #-20]	; 0xffffffec
   17790:	mov	r3, #1
   17794:	strb	r3, [fp, #-33]	; 0xffffffdf
   17798:	movw	r3, #58900	; 0xe614
   1779c:	movt	r3, #1
   177a0:	str	r3, [fp, #-28]	; 0xffffffe4
   177a4:	mov	r3, #1
   177a8:	str	r3, [fp, #-32]	; 0xffffffe0
   177ac:	b	17928 <__assert_fail@plt+0x6434>
   177b0:	mov	r3, #1
   177b4:	strb	r3, [fp, #-33]	; 0xffffffdf
   177b8:	mov	r3, #0
   177bc:	strb	r3, [fp, #-34]	; 0xffffffde
   177c0:	b	17928 <__assert_fail@plt+0x6434>
   177c4:	ldr	r3, [fp, #4]
   177c8:	cmp	r3, #10
   177cc:	beq	177f8 <__assert_fail@plt+0x6304>
   177d0:	ldr	r1, [fp, #4]
   177d4:	movw	r0, #58908	; 0xe61c
   177d8:	movt	r0, #1
   177dc:	bl	1756c <__assert_fail@plt+0x6078>
   177e0:	str	r0, [fp, #16]
   177e4:	ldr	r1, [fp, #4]
   177e8:	movw	r0, #58904	; 0xe618
   177ec:	movt	r0, #1
   177f0:	bl	1756c <__assert_fail@plt+0x6078>
   177f4:	str	r0, [fp, #20]
   177f8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   177fc:	eor	r3, r3, #1
   17800:	uxtb	r3, r3
   17804:	cmp	r3, #0
   17808:	beq	17868 <__assert_fail@plt+0x6374>
   1780c:	ldr	r3, [fp, #16]
   17810:	str	r3, [fp, #-28]	; 0xffffffe4
   17814:	b	17858 <__assert_fail@plt+0x6364>
   17818:	ldr	r2, [fp, #-20]	; 0xffffffec
   1781c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17820:	cmp	r2, r3
   17824:	bcs	17840 <__assert_fail@plt+0x634c>
   17828:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1782c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17830:	add	r3, r2, r3
   17834:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17838:	ldrb	r2, [r2]
   1783c:	strb	r2, [r3]
   17840:	ldr	r3, [fp, #-20]	; 0xffffffec
   17844:	add	r3, r3, #1
   17848:	str	r3, [fp, #-20]	; 0xffffffec
   1784c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17850:	add	r3, r3, #1
   17854:	str	r3, [fp, #-28]	; 0xffffffe4
   17858:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1785c:	ldrb	r3, [r3]
   17860:	cmp	r3, #0
   17864:	bne	17818 <__assert_fail@plt+0x6324>
   17868:	mov	r3, #1
   1786c:	strb	r3, [fp, #-33]	; 0xffffffdf
   17870:	ldr	r3, [fp, #20]
   17874:	str	r3, [fp, #-28]	; 0xffffffe4
   17878:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1787c:	bl	11368 <strlen@plt>
   17880:	str	r0, [fp, #-32]	; 0xffffffe0
   17884:	b	17928 <__assert_fail@plt+0x6434>
   17888:	mov	r3, #1
   1788c:	strb	r3, [fp, #-33]	; 0xffffffdf
   17890:	mov	r3, #1
   17894:	strb	r3, [fp, #-34]	; 0xffffffde
   17898:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1789c:	eor	r3, r3, #1
   178a0:	uxtb	r3, r3
   178a4:	cmp	r3, #0
   178a8:	beq	178b4 <__assert_fail@plt+0x63c0>
   178ac:	mov	r3, #1
   178b0:	strb	r3, [fp, #-33]	; 0xffffffdf
   178b4:	mov	r3, #2
   178b8:	str	r3, [fp, #4]
   178bc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   178c0:	eor	r3, r3, #1
   178c4:	uxtb	r3, r3
   178c8:	cmp	r3, #0
   178cc:	beq	17900 <__assert_fail@plt+0x640c>
   178d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   178d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   178d8:	cmp	r2, r3
   178dc:	bcs	178f4 <__assert_fail@plt+0x6400>
   178e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   178e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   178e8:	add	r3, r2, r3
   178ec:	mov	r2, #39	; 0x27
   178f0:	strb	r2, [r3]
   178f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   178f8:	add	r3, r3, #1
   178fc:	str	r3, [fp, #-20]	; 0xffffffec
   17900:	movw	r3, #58904	; 0xe618
   17904:	movt	r3, #1
   17908:	str	r3, [fp, #-28]	; 0xffffffe4
   1790c:	mov	r3, #1
   17910:	str	r3, [fp, #-32]	; 0xffffffe0
   17914:	b	17928 <__assert_fail@plt+0x6434>
   17918:	mov	r3, #0
   1791c:	strb	r3, [fp, #-34]	; 0xffffffde
   17920:	b	17928 <__assert_fail@plt+0x6434>
   17924:	bl	114d0 <abort@plt>
   17928:	mov	r3, #0
   1792c:	str	r3, [fp, #-16]
   17930:	b	18acc <__assert_fail@plt+0x75d8>
   17934:	mov	r3, #0
   17938:	strb	r3, [fp, #-40]	; 0xffffffd8
   1793c:	mov	r3, #0
   17940:	strb	r3, [fp, #-41]	; 0xffffffd7
   17944:	mov	r3, #0
   17948:	strb	r3, [fp, #-42]	; 0xffffffd6
   1794c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   17950:	cmp	r3, #0
   17954:	beq	179f0 <__assert_fail@plt+0x64fc>
   17958:	ldr	r3, [fp, #4]
   1795c:	cmp	r3, #2
   17960:	beq	179f0 <__assert_fail@plt+0x64fc>
   17964:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17968:	cmp	r3, #0
   1796c:	beq	179f0 <__assert_fail@plt+0x64fc>
   17970:	ldr	r2, [fp, #-16]
   17974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17978:	add	r4, r2, r3
   1797c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17980:	cmn	r3, #1
   17984:	bne	179a8 <__assert_fail@plt+0x64b4>
   17988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1798c:	cmp	r3, #1
   17990:	bls	179a8 <__assert_fail@plt+0x64b4>
   17994:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17998:	bl	11368 <strlen@plt>
   1799c:	str	r0, [fp, #-100]	; 0xffffff9c
   179a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   179a4:	b	179ac <__assert_fail@plt+0x64b8>
   179a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   179ac:	cmp	r3, r4
   179b0:	bcc	179f0 <__assert_fail@plt+0x64fc>
   179b4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   179b8:	ldr	r3, [fp, #-16]
   179bc:	add	r3, r2, r3
   179c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   179c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   179c8:	mov	r0, r3
   179cc:	bl	1120c <memcmp@plt>
   179d0:	mov	r3, r0
   179d4:	cmp	r3, #0
   179d8:	bne	179f0 <__assert_fail@plt+0x64fc>
   179dc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   179e0:	cmp	r3, #0
   179e4:	bne	18c88 <__assert_fail@plt+0x7794>
   179e8:	mov	r3, #1
   179ec:	strb	r3, [fp, #-40]	; 0xffffffd8
   179f0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   179f4:	ldr	r3, [fp, #-16]
   179f8:	add	r3, r2, r3
   179fc:	ldrb	r3, [r3]
   17a00:	strb	r3, [fp, #-38]	; 0xffffffda
   17a04:	ldrb	r3, [fp, #-38]	; 0xffffffda
   17a08:	cmp	r3, #126	; 0x7e
   17a0c:	ldrls	pc, [pc, r3, lsl #2]
   17a10:	b	18248 <__assert_fail@plt+0x6d54>
   17a14:	andeq	r7, r1, r0, lsl ip
   17a18:	andeq	r8, r1, r8, asr #4
   17a1c:	andeq	r8, r1, r8, asr #4
   17a20:	andeq	r8, r1, r8, asr #4
   17a24:	andeq	r8, r1, r8, asr #4
   17a28:	andeq	r8, r1, r8, asr #4
   17a2c:	andeq	r8, r1, r8, asr #4
   17a30:	andeq	r8, r1, r4
   17a34:	andeq	r8, r1, r0, lsl r0
   17a38:	andeq	r8, r1, r0, asr #32
   17a3c:	andeq	r8, r1, r8, lsr #32
   17a40:	andeq	r8, r1, ip, asr #32
   17a44:	andeq	r8, r1, ip, lsl r0
   17a48:	andeq	r8, r1, r4, lsr r0
   17a4c:	andeq	r8, r1, r8, asr #4
   17a50:	andeq	r8, r1, r8, asr #4
   17a54:	andeq	r8, r1, r8, asr #4
   17a58:	andeq	r8, r1, r8, asr #4
   17a5c:	andeq	r8, r1, r8, asr #4
   17a60:	andeq	r8, r1, r8, asr #4
   17a64:	andeq	r8, r1, r8, asr #4
   17a68:	andeq	r8, r1, r8, asr #4
   17a6c:	andeq	r8, r1, r8, asr #4
   17a70:	andeq	r8, r1, r8, asr #4
   17a74:	andeq	r8, r1, r8, asr #4
   17a78:	andeq	r8, r1, r8, asr #4
   17a7c:	andeq	r8, r1, r8, asr #4
   17a80:	andeq	r8, r1, r8, asr #4
   17a84:	andeq	r8, r1, r8, asr #4
   17a88:	andeq	r8, r1, r8, asr #4
   17a8c:	andeq	r8, r1, r8, asr #4
   17a90:	andeq	r8, r1, r8, asr #4
   17a94:	andeq	r8, r1, ip, lsr #2
   17a98:	andeq	r8, r1, r4, lsr r1
   17a9c:	andeq	r8, r1, r4, lsr r1
   17aa0:	andeq	r8, r1, r0, lsr #2
   17aa4:	andeq	r8, r1, r4, lsr r1
   17aa8:	andeq	r8, r1, ip, lsr r2
   17aac:	andeq	r8, r1, r4, lsr r1
   17ab0:	andeq	r8, r1, r0, asr r1
   17ab4:	andeq	r8, r1, r4, lsr r1
   17ab8:	andeq	r8, r1, r4, lsr r1
   17abc:	andeq	r8, r1, r4, lsr r1
   17ac0:	andeq	r8, r1, ip, lsr r2
   17ac4:	andeq	r8, r1, ip, lsr r2
   17ac8:	andeq	r8, r1, ip, lsr r2
   17acc:	andeq	r8, r1, ip, lsr r2
   17ad0:	andeq	r8, r1, ip, lsr r2
   17ad4:	andeq	r8, r1, ip, lsr r2
   17ad8:	andeq	r8, r1, ip, lsr r2
   17adc:	andeq	r8, r1, ip, lsr r2
   17ae0:	andeq	r8, r1, ip, lsr r2
   17ae4:	andeq	r8, r1, ip, lsr r2
   17ae8:	andeq	r8, r1, ip, lsr r2
   17aec:	andeq	r8, r1, ip, lsr r2
   17af0:	andeq	r8, r1, ip, lsr r2
   17af4:	andeq	r8, r1, ip, lsr r2
   17af8:	andeq	r8, r1, ip, lsr r2
   17afc:	andeq	r8, r1, ip, lsr r2
   17b00:	andeq	r8, r1, r4, lsr r1
   17b04:	andeq	r8, r1, r4, lsr r1
   17b08:	andeq	r8, r1, r4, lsr r1
   17b0c:	andeq	r8, r1, r4, lsr r1
   17b10:	strdeq	r7, [r1], -r0
   17b14:	andeq	r8, r1, r8, asr #4
   17b18:	andeq	r8, r1, ip, lsr r2
   17b1c:	andeq	r8, r1, ip, lsr r2
   17b20:	andeq	r8, r1, ip, lsr r2
   17b24:	andeq	r8, r1, ip, lsr r2
   17b28:	andeq	r8, r1, ip, lsr r2
   17b2c:	andeq	r8, r1, ip, lsr r2
   17b30:	andeq	r8, r1, ip, lsr r2
   17b34:	andeq	r8, r1, ip, lsr r2
   17b38:	andeq	r8, r1, ip, lsr r2
   17b3c:	andeq	r8, r1, ip, lsr r2
   17b40:	andeq	r8, r1, ip, lsr r2
   17b44:	andeq	r8, r1, ip, lsr r2
   17b48:	andeq	r8, r1, ip, lsr r2
   17b4c:	andeq	r8, r1, ip, lsr r2
   17b50:	andeq	r8, r1, ip, lsr r2
   17b54:	andeq	r8, r1, ip, lsr r2
   17b58:	andeq	r8, r1, ip, lsr r2
   17b5c:	andeq	r8, r1, ip, lsr r2
   17b60:	andeq	r8, r1, ip, lsr r2
   17b64:	andeq	r8, r1, ip, lsr r2
   17b68:	andeq	r8, r1, ip, lsr r2
   17b6c:	andeq	r8, r1, ip, lsr r2
   17b70:	andeq	r8, r1, ip, lsr r2
   17b74:	andeq	r8, r1, ip, lsr r2
   17b78:	andeq	r8, r1, ip, lsr r2
   17b7c:	andeq	r8, r1, ip, lsr r2
   17b80:	andeq	r8, r1, r4, lsr r1
   17b84:	andeq	r8, r1, r8, asr r0
   17b88:	andeq	r8, r1, ip, lsr r2
   17b8c:	andeq	r8, r1, r4, lsr r1
   17b90:	andeq	r8, r1, ip, lsr r2
   17b94:	andeq	r8, r1, r4, lsr r1
   17b98:	andeq	r8, r1, ip, lsr r2
   17b9c:	andeq	r8, r1, ip, lsr r2
   17ba0:	andeq	r8, r1, ip, lsr r2
   17ba4:	andeq	r8, r1, ip, lsr r2
   17ba8:	andeq	r8, r1, ip, lsr r2
   17bac:	andeq	r8, r1, ip, lsr r2
   17bb0:	andeq	r8, r1, ip, lsr r2
   17bb4:	andeq	r8, r1, ip, lsr r2
   17bb8:	andeq	r8, r1, ip, lsr r2
   17bbc:	andeq	r8, r1, ip, lsr r2
   17bc0:	andeq	r8, r1, ip, lsr r2
   17bc4:	andeq	r8, r1, ip, lsr r2
   17bc8:	andeq	r8, r1, ip, lsr r2
   17bcc:	andeq	r8, r1, ip, lsr r2
   17bd0:	andeq	r8, r1, ip, lsr r2
   17bd4:	andeq	r8, r1, ip, lsr r2
   17bd8:	andeq	r8, r1, ip, lsr r2
   17bdc:	andeq	r8, r1, ip, lsr r2
   17be0:	andeq	r8, r1, ip, lsr r2
   17be4:	andeq	r8, r1, ip, lsr r2
   17be8:	andeq	r8, r1, ip, lsr r2
   17bec:	andeq	r8, r1, ip, lsr r2
   17bf0:	andeq	r8, r1, ip, lsr r2
   17bf4:	andeq	r8, r1, ip, lsr r2
   17bf8:	andeq	r8, r1, ip, lsr r2
   17bfc:	andeq	r8, r1, ip, lsr r2
   17c00:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17c04:	andeq	r8, r1, r4, lsr r1
   17c08:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17c0c:	andeq	r8, r1, r0, lsr #2
   17c10:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   17c14:	cmp	r3, #0
   17c18:	beq	17ddc <__assert_fail@plt+0x68e8>
   17c1c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   17c20:	cmp	r3, #0
   17c24:	bne	18c90 <__assert_fail@plt+0x779c>
   17c28:	mov	r3, #1
   17c2c:	strb	r3, [fp, #-41]	; 0xffffffd7
   17c30:	ldr	r3, [fp, #4]
   17c34:	cmp	r3, #2
   17c38:	bne	17ce8 <__assert_fail@plt+0x67f4>
   17c3c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   17c40:	eor	r3, r3, #1
   17c44:	uxtb	r3, r3
   17c48:	cmp	r3, #0
   17c4c:	beq	17ce8 <__assert_fail@plt+0x67f4>
   17c50:	ldr	r2, [fp, #-20]	; 0xffffffec
   17c54:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17c58:	cmp	r2, r3
   17c5c:	bcs	17c74 <__assert_fail@plt+0x6780>
   17c60:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17c64:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c68:	add	r3, r2, r3
   17c6c:	mov	r2, #39	; 0x27
   17c70:	strb	r2, [r3]
   17c74:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c78:	add	r3, r3, #1
   17c7c:	str	r3, [fp, #-20]	; 0xffffffec
   17c80:	ldr	r2, [fp, #-20]	; 0xffffffec
   17c84:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17c88:	cmp	r2, r3
   17c8c:	bcs	17ca4 <__assert_fail@plt+0x67b0>
   17c90:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17c94:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c98:	add	r3, r2, r3
   17c9c:	mov	r2, #36	; 0x24
   17ca0:	strb	r2, [r3]
   17ca4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ca8:	add	r3, r3, #1
   17cac:	str	r3, [fp, #-20]	; 0xffffffec
   17cb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   17cb4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17cb8:	cmp	r2, r3
   17cbc:	bcs	17cd4 <__assert_fail@plt+0x67e0>
   17cc0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17cc8:	add	r3, r2, r3
   17ccc:	mov	r2, #39	; 0x27
   17cd0:	strb	r2, [r3]
   17cd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17cd8:	add	r3, r3, #1
   17cdc:	str	r3, [fp, #-20]	; 0xffffffec
   17ce0:	mov	r3, #1
   17ce4:	strb	r3, [fp, #-35]	; 0xffffffdd
   17ce8:	ldr	r2, [fp, #-20]	; 0xffffffec
   17cec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17cf0:	cmp	r2, r3
   17cf4:	bcs	17d0c <__assert_fail@plt+0x6818>
   17cf8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17cfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d00:	add	r3, r2, r3
   17d04:	mov	r2, #92	; 0x5c
   17d08:	strb	r2, [r3]
   17d0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d10:	add	r3, r3, #1
   17d14:	str	r3, [fp, #-20]	; 0xffffffec
   17d18:	ldr	r3, [fp, #4]
   17d1c:	cmp	r3, #2
   17d20:	beq	17dd0 <__assert_fail@plt+0x68dc>
   17d24:	ldr	r3, [fp, #-16]
   17d28:	add	r3, r3, #1
   17d2c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17d30:	cmp	r2, r3
   17d34:	bls	17dd0 <__assert_fail@plt+0x68dc>
   17d38:	ldr	r3, [fp, #-16]
   17d3c:	add	r3, r3, #1
   17d40:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17d44:	add	r3, r2, r3
   17d48:	ldrb	r3, [r3]
   17d4c:	cmp	r3, #47	; 0x2f
   17d50:	bls	17dd0 <__assert_fail@plt+0x68dc>
   17d54:	ldr	r3, [fp, #-16]
   17d58:	add	r3, r3, #1
   17d5c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17d60:	add	r3, r2, r3
   17d64:	ldrb	r3, [r3]
   17d68:	cmp	r3, #57	; 0x39
   17d6c:	bhi	17dd0 <__assert_fail@plt+0x68dc>
   17d70:	ldr	r2, [fp, #-20]	; 0xffffffec
   17d74:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17d78:	cmp	r2, r3
   17d7c:	bcs	17d94 <__assert_fail@plt+0x68a0>
   17d80:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d88:	add	r3, r2, r3
   17d8c:	mov	r2, #48	; 0x30
   17d90:	strb	r2, [r3]
   17d94:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d98:	add	r3, r3, #1
   17d9c:	str	r3, [fp, #-20]	; 0xffffffec
   17da0:	ldr	r2, [fp, #-20]	; 0xffffffec
   17da4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17da8:	cmp	r2, r3
   17dac:	bcs	17dc4 <__assert_fail@plt+0x68d0>
   17db0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17db4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17db8:	add	r3, r2, r3
   17dbc:	mov	r2, #48	; 0x30
   17dc0:	strb	r2, [r3]
   17dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17dc8:	add	r3, r3, #1
   17dcc:	str	r3, [fp, #-20]	; 0xffffffec
   17dd0:	mov	r3, #48	; 0x30
   17dd4:	strb	r3, [fp, #-38]	; 0xffffffda
   17dd8:	b	18818 <__assert_fail@plt+0x7324>
   17ddc:	ldr	r3, [fp, #8]
   17de0:	and	r3, r3, #1
   17de4:	cmp	r3, #0
   17de8:	beq	18818 <__assert_fail@plt+0x7324>
   17dec:	b	18ac0 <__assert_fail@plt+0x75cc>
   17df0:	ldr	r3, [fp, #4]
   17df4:	cmp	r3, #2
   17df8:	beq	17e0c <__assert_fail@plt+0x6918>
   17dfc:	ldr	r3, [fp, #4]
   17e00:	cmp	r3, #5
   17e04:	beq	17e1c <__assert_fail@plt+0x6928>
   17e08:	b	18000 <__assert_fail@plt+0x6b0c>
   17e0c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   17e10:	cmp	r3, #0
   17e14:	beq	17ff4 <__assert_fail@plt+0x6b00>
   17e18:	b	18cc4 <__assert_fail@plt+0x77d0>
   17e1c:	ldr	r3, [fp, #8]
   17e20:	and	r3, r3, #4
   17e24:	cmp	r3, #0
   17e28:	beq	17ffc <__assert_fail@plt+0x6b08>
   17e2c:	ldr	r3, [fp, #-16]
   17e30:	add	r3, r3, #2
   17e34:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17e38:	cmp	r2, r3
   17e3c:	bls	17ffc <__assert_fail@plt+0x6b08>
   17e40:	ldr	r3, [fp, #-16]
   17e44:	add	r3, r3, #1
   17e48:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17e4c:	add	r3, r2, r3
   17e50:	ldrb	r3, [r3]
   17e54:	cmp	r3, #63	; 0x3f
   17e58:	bne	17ffc <__assert_fail@plt+0x6b08>
   17e5c:	ldr	r3, [fp, #-16]
   17e60:	add	r3, r3, #2
   17e64:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17e68:	add	r3, r2, r3
   17e6c:	ldrb	r3, [r3]
   17e70:	sub	r3, r3, #33	; 0x21
   17e74:	cmp	r3, #29
   17e78:	ldrls	pc, [pc, r3, lsl #2]
   17e7c:	b	17fec <__assert_fail@plt+0x6af8>
   17e80:	strdeq	r7, [r1], -r8
   17e84:	andeq	r7, r1, ip, ror #31
   17e88:	andeq	r7, r1, ip, ror #31
   17e8c:	andeq	r7, r1, ip, ror #31
   17e90:	andeq	r7, r1, ip, ror #31
   17e94:	andeq	r7, r1, ip, ror #31
   17e98:	strdeq	r7, [r1], -r8
   17e9c:	strdeq	r7, [r1], -r8
   17ea0:	strdeq	r7, [r1], -r8
   17ea4:	andeq	r7, r1, ip, ror #31
   17ea8:	andeq	r7, r1, ip, ror #31
   17eac:	andeq	r7, r1, ip, ror #31
   17eb0:	strdeq	r7, [r1], -r8
   17eb4:	andeq	r7, r1, ip, ror #31
   17eb8:	strdeq	r7, [r1], -r8
   17ebc:	andeq	r7, r1, ip, ror #31
   17ec0:	andeq	r7, r1, ip, ror #31
   17ec4:	andeq	r7, r1, ip, ror #31
   17ec8:	andeq	r7, r1, ip, ror #31
   17ecc:	andeq	r7, r1, ip, ror #31
   17ed0:	andeq	r7, r1, ip, ror #31
   17ed4:	andeq	r7, r1, ip, ror #31
   17ed8:	andeq	r7, r1, ip, ror #31
   17edc:	andeq	r7, r1, ip, ror #31
   17ee0:	andeq	r7, r1, ip, ror #31
   17ee4:	andeq	r7, r1, ip, ror #31
   17ee8:	andeq	r7, r1, ip, ror #31
   17eec:	strdeq	r7, [r1], -r8
   17ef0:	strdeq	r7, [r1], -r8
   17ef4:	strdeq	r7, [r1], -r8
   17ef8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   17efc:	cmp	r3, #0
   17f00:	bne	18c98 <__assert_fail@plt+0x77a4>
   17f04:	ldr	r3, [fp, #-16]
   17f08:	add	r3, r3, #2
   17f0c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17f10:	add	r3, r2, r3
   17f14:	ldrb	r3, [r3]
   17f18:	strb	r3, [fp, #-38]	; 0xffffffda
   17f1c:	ldr	r3, [fp, #-16]
   17f20:	add	r3, r3, #2
   17f24:	str	r3, [fp, #-16]
   17f28:	ldr	r2, [fp, #-20]	; 0xffffffec
   17f2c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17f30:	cmp	r2, r3
   17f34:	bcs	17f4c <__assert_fail@plt+0x6a58>
   17f38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17f3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f40:	add	r3, r2, r3
   17f44:	mov	r2, #63	; 0x3f
   17f48:	strb	r2, [r3]
   17f4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f50:	add	r3, r3, #1
   17f54:	str	r3, [fp, #-20]	; 0xffffffec
   17f58:	ldr	r2, [fp, #-20]	; 0xffffffec
   17f5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17f60:	cmp	r2, r3
   17f64:	bcs	17f7c <__assert_fail@plt+0x6a88>
   17f68:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17f6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f70:	add	r3, r2, r3
   17f74:	mov	r2, #34	; 0x22
   17f78:	strb	r2, [r3]
   17f7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f80:	add	r3, r3, #1
   17f84:	str	r3, [fp, #-20]	; 0xffffffec
   17f88:	ldr	r2, [fp, #-20]	; 0xffffffec
   17f8c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17f90:	cmp	r2, r3
   17f94:	bcs	17fac <__assert_fail@plt+0x6ab8>
   17f98:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17f9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17fa0:	add	r3, r2, r3
   17fa4:	mov	r2, #34	; 0x22
   17fa8:	strb	r2, [r3]
   17fac:	ldr	r3, [fp, #-20]	; 0xffffffec
   17fb0:	add	r3, r3, #1
   17fb4:	str	r3, [fp, #-20]	; 0xffffffec
   17fb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   17fbc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17fc0:	cmp	r2, r3
   17fc4:	bcs	17fdc <__assert_fail@plt+0x6ae8>
   17fc8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17fd0:	add	r3, r2, r3
   17fd4:	mov	r2, #63	; 0x3f
   17fd8:	strb	r2, [r3]
   17fdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17fe0:	add	r3, r3, #1
   17fe4:	str	r3, [fp, #-20]	; 0xffffffec
   17fe8:	b	17ff0 <__assert_fail@plt+0x6afc>
   17fec:	nop	{0}
   17ff0:	b	17ffc <__assert_fail@plt+0x6b08>
   17ff4:	nop	{0}
   17ff8:	b	1884c <__assert_fail@plt+0x7358>
   17ffc:	nop	{0}
   18000:	b	1884c <__assert_fail@plt+0x7358>
   18004:	mov	r3, #97	; 0x61
   18008:	strb	r3, [fp, #-39]	; 0xffffffd9
   1800c:	b	180c0 <__assert_fail@plt+0x6bcc>
   18010:	mov	r3, #98	; 0x62
   18014:	strb	r3, [fp, #-39]	; 0xffffffd9
   18018:	b	180c0 <__assert_fail@plt+0x6bcc>
   1801c:	mov	r3, #102	; 0x66
   18020:	strb	r3, [fp, #-39]	; 0xffffffd9
   18024:	b	180c0 <__assert_fail@plt+0x6bcc>
   18028:	mov	r3, #110	; 0x6e
   1802c:	strb	r3, [fp, #-39]	; 0xffffffd9
   18030:	b	180a4 <__assert_fail@plt+0x6bb0>
   18034:	mov	r3, #114	; 0x72
   18038:	strb	r3, [fp, #-39]	; 0xffffffd9
   1803c:	b	180a4 <__assert_fail@plt+0x6bb0>
   18040:	mov	r3, #116	; 0x74
   18044:	strb	r3, [fp, #-39]	; 0xffffffd9
   18048:	b	180a4 <__assert_fail@plt+0x6bb0>
   1804c:	mov	r3, #118	; 0x76
   18050:	strb	r3, [fp, #-39]	; 0xffffffd9
   18054:	b	180c0 <__assert_fail@plt+0x6bcc>
   18058:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1805c:	strb	r3, [fp, #-39]	; 0xffffffd9
   18060:	ldr	r3, [fp, #4]
   18064:	cmp	r3, #2
   18068:	bne	1807c <__assert_fail@plt+0x6b88>
   1806c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18070:	cmp	r3, #0
   18074:	beq	189d8 <__assert_fail@plt+0x74e4>
   18078:	b	18cc4 <__assert_fail@plt+0x77d0>
   1807c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   18080:	cmp	r3, #0
   18084:	beq	180a0 <__assert_fail@plt+0x6bac>
   18088:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1808c:	cmp	r3, #0
   18090:	beq	180a0 <__assert_fail@plt+0x6bac>
   18094:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18098:	cmp	r3, #0
   1809c:	bne	189e0 <__assert_fail@plt+0x74ec>
   180a0:	nop	{0}
   180a4:	ldr	r3, [fp, #4]
   180a8:	cmp	r3, #2
   180ac:	bne	180bc <__assert_fail@plt+0x6bc8>
   180b0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   180b4:	cmp	r3, #0
   180b8:	bne	18ca0 <__assert_fail@plt+0x77ac>
   180bc:	nop	{0}
   180c0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   180c4:	cmp	r3, #0
   180c8:	beq	18820 <__assert_fail@plt+0x732c>
   180cc:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   180d0:	strb	r3, [fp, #-38]	; 0xffffffda
   180d4:	b	188d8 <__assert_fail@plt+0x73e4>
   180d8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   180dc:	cmn	r3, #1
   180e0:	bne	18104 <__assert_fail@plt+0x6c10>
   180e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   180e8:	add	r3, r3, #1
   180ec:	ldrb	r3, [r3]
   180f0:	cmp	r3, #0
   180f4:	movne	r3, #1
   180f8:	moveq	r3, #0
   180fc:	uxtb	r3, r3
   18100:	b	18118 <__assert_fail@plt+0x6c24>
   18104:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18108:	cmp	r3, #1
   1810c:	movne	r3, #1
   18110:	moveq	r3, #0
   18114:	uxtb	r3, r3
   18118:	cmp	r3, #0
   1811c:	bne	18828 <__assert_fail@plt+0x7334>
   18120:	ldr	r3, [fp, #-16]
   18124:	cmp	r3, #0
   18128:	bne	18830 <__assert_fail@plt+0x733c>
   1812c:	mov	r3, #1
   18130:	strb	r3, [fp, #-42]	; 0xffffffd6
   18134:	ldr	r3, [fp, #4]
   18138:	cmp	r3, #2
   1813c:	bne	18838 <__assert_fail@plt+0x7344>
   18140:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18144:	cmp	r3, #0
   18148:	beq	18838 <__assert_fail@plt+0x7344>
   1814c:	b	18cc4 <__assert_fail@plt+0x77d0>
   18150:	mov	r3, #1
   18154:	strb	r3, [fp, #-36]	; 0xffffffdc
   18158:	mov	r3, #1
   1815c:	strb	r3, [fp, #-42]	; 0xffffffd6
   18160:	ldr	r3, [fp, #4]
   18164:	cmp	r3, #2
   18168:	bne	18840 <__assert_fail@plt+0x734c>
   1816c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18170:	cmp	r3, #0
   18174:	bne	18ca8 <__assert_fail@plt+0x77b4>
   18178:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1817c:	cmp	r3, #0
   18180:	beq	181a0 <__assert_fail@plt+0x6cac>
   18184:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18188:	cmp	r3, #0
   1818c:	bne	181a0 <__assert_fail@plt+0x6cac>
   18190:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18194:	str	r3, [fp, #-24]	; 0xffffffe8
   18198:	mov	r3, #0
   1819c:	str	r3, [fp, #-92]	; 0xffffffa4
   181a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   181a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   181a8:	cmp	r2, r3
   181ac:	bcs	181c4 <__assert_fail@plt+0x6cd0>
   181b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   181b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   181b8:	add	r3, r2, r3
   181bc:	mov	r2, #39	; 0x27
   181c0:	strb	r2, [r3]
   181c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   181c8:	add	r3, r3, #1
   181cc:	str	r3, [fp, #-20]	; 0xffffffec
   181d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   181d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   181d8:	cmp	r2, r3
   181dc:	bcs	181f4 <__assert_fail@plt+0x6d00>
   181e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   181e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   181e8:	add	r3, r2, r3
   181ec:	mov	r2, #92	; 0x5c
   181f0:	strb	r2, [r3]
   181f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   181f8:	add	r3, r3, #1
   181fc:	str	r3, [fp, #-20]	; 0xffffffec
   18200:	ldr	r2, [fp, #-20]	; 0xffffffec
   18204:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18208:	cmp	r2, r3
   1820c:	bcs	18224 <__assert_fail@plt+0x6d30>
   18210:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18214:	ldr	r3, [fp, #-20]	; 0xffffffec
   18218:	add	r3, r2, r3
   1821c:	mov	r2, #39	; 0x27
   18220:	strb	r2, [r3]
   18224:	ldr	r3, [fp, #-20]	; 0xffffffec
   18228:	add	r3, r3, #1
   1822c:	str	r3, [fp, #-20]	; 0xffffffec
   18230:	mov	r3, #0
   18234:	strb	r3, [fp, #-35]	; 0xffffffdd
   18238:	b	18840 <__assert_fail@plt+0x734c>
   1823c:	mov	r3, #1
   18240:	strb	r3, [fp, #-42]	; 0xffffffd6
   18244:	b	1884c <__assert_fail@plt+0x7358>
   18248:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1824c:	cmp	r3, #0
   18250:	beq	18290 <__assert_fail@plt+0x6d9c>
   18254:	mov	r3, #1
   18258:	str	r3, [fp, #-48]	; 0xffffffd0
   1825c:	bl	11344 <__ctype_b_loc@plt>
   18260:	mov	r3, r0
   18264:	ldr	r2, [r3]
   18268:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1826c:	lsl	r3, r3, #1
   18270:	add	r3, r2, r3
   18274:	ldrh	r3, [r3]
   18278:	and	r3, r3, #16384	; 0x4000
   1827c:	cmp	r3, #0
   18280:	movne	r3, #1
   18284:	moveq	r3, #0
   18288:	strb	r3, [fp, #-49]	; 0xffffffcf
   1828c:	b	184dc <__assert_fail@plt+0x6fe8>
   18290:	sub	r3, fp, #76	; 0x4c
   18294:	mov	r2, #8
   18298:	mov	r1, #0
   1829c:	mov	r0, r3
   182a0:	bl	113d4 <memset@plt>
   182a4:	mov	r3, #0
   182a8:	str	r3, [fp, #-48]	; 0xffffffd0
   182ac:	mov	r3, #1
   182b0:	strb	r3, [fp, #-49]	; 0xffffffcf
   182b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   182b8:	cmn	r3, #1
   182bc:	bne	182cc <__assert_fail@plt+0x6dd8>
   182c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   182c4:	bl	11368 <strlen@plt>
   182c8:	str	r0, [fp, #-100]	; 0xffffff9c
   182cc:	ldr	r2, [fp, #-16]
   182d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   182d4:	add	r3, r2, r3
   182d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   182dc:	add	r1, r2, r3
   182e0:	ldr	r2, [fp, #-16]
   182e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   182e8:	add	r3, r2, r3
   182ec:	ldr	r2, [fp, #-100]	; 0xffffff9c
   182f0:	sub	r2, r2, r3
   182f4:	sub	r3, fp, #76	; 0x4c
   182f8:	sub	r0, fp, #80	; 0x50
   182fc:	bl	1c368 <__assert_fail@plt+0xae74>
   18300:	str	r0, [fp, #-64]	; 0xffffffc0
   18304:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18308:	cmp	r3, #0
   1830c:	beq	184d0 <__assert_fail@plt+0x6fdc>
   18310:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18314:	cmn	r3, #1
   18318:	bne	18328 <__assert_fail@plt+0x6e34>
   1831c:	mov	r3, #0
   18320:	strb	r3, [fp, #-49]	; 0xffffffcf
   18324:	b	184dc <__assert_fail@plt+0x6fe8>
   18328:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1832c:	cmn	r3, #2
   18330:	bne	18388 <__assert_fail@plt+0x6e94>
   18334:	mov	r3, #0
   18338:	strb	r3, [fp, #-49]	; 0xffffffcf
   1833c:	b	1834c <__assert_fail@plt+0x6e58>
   18340:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18344:	add	r3, r3, #1
   18348:	str	r3, [fp, #-48]	; 0xffffffd0
   1834c:	ldr	r2, [fp, #-16]
   18350:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18354:	add	r3, r2, r3
   18358:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1835c:	cmp	r2, r3
   18360:	bls	184d8 <__assert_fail@plt+0x6fe4>
   18364:	ldr	r2, [fp, #-16]
   18368:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1836c:	add	r3, r2, r3
   18370:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18374:	add	r3, r2, r3
   18378:	ldrb	r3, [r3]
   1837c:	cmp	r3, #0
   18380:	bne	18340 <__assert_fail@plt+0x6e4c>
   18384:	b	184d8 <__assert_fail@plt+0x6fe4>
   18388:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1838c:	cmp	r3, #0
   18390:	beq	18484 <__assert_fail@plt+0x6f90>
   18394:	ldr	r3, [fp, #4]
   18398:	cmp	r3, #2
   1839c:	bne	18484 <__assert_fail@plt+0x6f90>
   183a0:	mov	r3, #1
   183a4:	str	r3, [fp, #-56]	; 0xffffffc8
   183a8:	b	18474 <__assert_fail@plt+0x6f80>
   183ac:	ldr	r2, [fp, #-16]
   183b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   183b4:	add	r2, r2, r3
   183b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   183bc:	add	r3, r2, r3
   183c0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   183c4:	add	r3, r2, r3
   183c8:	ldrb	r3, [r3]
   183cc:	sub	r3, r3, #91	; 0x5b
   183d0:	cmp	r3, #33	; 0x21
   183d4:	ldrls	pc, [pc, r3, lsl #2]
   183d8:	b	18464 <__assert_fail@plt+0x6f70>
   183dc:	andeq	r8, r1, r4, asr #25
   183e0:	andeq	r8, r1, r4, asr #25
   183e4:	andeq	r8, r1, r4, ror #8
   183e8:	andeq	r8, r1, r4, asr #25
   183ec:	andeq	r8, r1, r4, ror #8
   183f0:	andeq	r8, r1, r4, asr #25
   183f4:	andeq	r8, r1, r4, ror #8
   183f8:	andeq	r8, r1, r4, ror #8
   183fc:	andeq	r8, r1, r4, ror #8
   18400:	andeq	r8, r1, r4, ror #8
   18404:	andeq	r8, r1, r4, ror #8
   18408:	andeq	r8, r1, r4, ror #8
   1840c:	andeq	r8, r1, r4, ror #8
   18410:	andeq	r8, r1, r4, ror #8
   18414:	andeq	r8, r1, r4, ror #8
   18418:	andeq	r8, r1, r4, ror #8
   1841c:	andeq	r8, r1, r4, ror #8
   18420:	andeq	r8, r1, r4, ror #8
   18424:	andeq	r8, r1, r4, ror #8
   18428:	andeq	r8, r1, r4, ror #8
   1842c:	andeq	r8, r1, r4, ror #8
   18430:	andeq	r8, r1, r4, ror #8
   18434:	andeq	r8, r1, r4, ror #8
   18438:	andeq	r8, r1, r4, ror #8
   1843c:	andeq	r8, r1, r4, ror #8
   18440:	andeq	r8, r1, r4, ror #8
   18444:	andeq	r8, r1, r4, ror #8
   18448:	andeq	r8, r1, r4, ror #8
   1844c:	andeq	r8, r1, r4, ror #8
   18450:	andeq	r8, r1, r4, ror #8
   18454:	andeq	r8, r1, r4, ror #8
   18458:	andeq	r8, r1, r4, ror #8
   1845c:	andeq	r8, r1, r4, ror #8
   18460:	andeq	r8, r1, r4, asr #25
   18464:	nop	{0}
   18468:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1846c:	add	r3, r3, #1
   18470:	str	r3, [fp, #-56]	; 0xffffffc8
   18474:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18478:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1847c:	cmp	r2, r3
   18480:	bcc	183ac <__assert_fail@plt+0x6eb8>
   18484:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18488:	mov	r0, r3
   1848c:	bl	11254 <iswprint@plt>
   18490:	mov	r3, r0
   18494:	cmp	r3, #0
   18498:	bne	184a4 <__assert_fail@plt+0x6fb0>
   1849c:	mov	r3, #0
   184a0:	strb	r3, [fp, #-49]	; 0xffffffcf
   184a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   184a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   184ac:	add	r3, r2, r3
   184b0:	str	r3, [fp, #-48]	; 0xffffffd0
   184b4:	sub	r3, fp, #76	; 0x4c
   184b8:	mov	r0, r3
   184bc:	bl	111e8 <mbsinit@plt>
   184c0:	mov	r3, r0
   184c4:	cmp	r3, #0
   184c8:	beq	182cc <__assert_fail@plt+0x6dd8>
   184cc:	b	184dc <__assert_fail@plt+0x6fe8>
   184d0:	nop	{0}
   184d4:	b	184dc <__assert_fail@plt+0x6fe8>
   184d8:	nop	{0}
   184dc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   184e0:	strb	r3, [fp, #-42]	; 0xffffffd6
   184e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   184e8:	cmp	r3, #1
   184ec:	bhi	18510 <__assert_fail@plt+0x701c>
   184f0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   184f4:	cmp	r3, #0
   184f8:	beq	18848 <__assert_fail@plt+0x7354>
   184fc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   18500:	eor	r3, r3, #1
   18504:	uxtb	r3, r3
   18508:	cmp	r3, #0
   1850c:	beq	18848 <__assert_fail@plt+0x7354>
   18510:	ldr	r2, [fp, #-16]
   18514:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18518:	add	r3, r2, r3
   1851c:	str	r3, [fp, #-68]	; 0xffffffbc
   18520:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   18524:	cmp	r3, #0
   18528:	beq	186dc <__assert_fail@plt+0x71e8>
   1852c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   18530:	eor	r3, r3, #1
   18534:	uxtb	r3, r3
   18538:	cmp	r3, #0
   1853c:	beq	186dc <__assert_fail@plt+0x71e8>
   18540:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18544:	cmp	r3, #0
   18548:	bne	18cb0 <__assert_fail@plt+0x77bc>
   1854c:	mov	r3, #1
   18550:	strb	r3, [fp, #-41]	; 0xffffffd7
   18554:	ldr	r3, [fp, #4]
   18558:	cmp	r3, #2
   1855c:	bne	1860c <__assert_fail@plt+0x7118>
   18560:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   18564:	eor	r3, r3, #1
   18568:	uxtb	r3, r3
   1856c:	cmp	r3, #0
   18570:	beq	1860c <__assert_fail@plt+0x7118>
   18574:	ldr	r2, [fp, #-20]	; 0xffffffec
   18578:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1857c:	cmp	r2, r3
   18580:	bcs	18598 <__assert_fail@plt+0x70a4>
   18584:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18588:	ldr	r3, [fp, #-20]	; 0xffffffec
   1858c:	add	r3, r2, r3
   18590:	mov	r2, #39	; 0x27
   18594:	strb	r2, [r3]
   18598:	ldr	r3, [fp, #-20]	; 0xffffffec
   1859c:	add	r3, r3, #1
   185a0:	str	r3, [fp, #-20]	; 0xffffffec
   185a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   185a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   185ac:	cmp	r2, r3
   185b0:	bcs	185c8 <__assert_fail@plt+0x70d4>
   185b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   185b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   185bc:	add	r3, r2, r3
   185c0:	mov	r2, #36	; 0x24
   185c4:	strb	r2, [r3]
   185c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   185cc:	add	r3, r3, #1
   185d0:	str	r3, [fp, #-20]	; 0xffffffec
   185d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   185d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   185dc:	cmp	r2, r3
   185e0:	bcs	185f8 <__assert_fail@plt+0x7104>
   185e4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   185e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   185ec:	add	r3, r2, r3
   185f0:	mov	r2, #39	; 0x27
   185f4:	strb	r2, [r3]
   185f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   185fc:	add	r3, r3, #1
   18600:	str	r3, [fp, #-20]	; 0xffffffec
   18604:	mov	r3, #1
   18608:	strb	r3, [fp, #-35]	; 0xffffffdd
   1860c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18610:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18614:	cmp	r2, r3
   18618:	bcs	18630 <__assert_fail@plt+0x713c>
   1861c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18620:	ldr	r3, [fp, #-20]	; 0xffffffec
   18624:	add	r3, r2, r3
   18628:	mov	r2, #92	; 0x5c
   1862c:	strb	r2, [r3]
   18630:	ldr	r3, [fp, #-20]	; 0xffffffec
   18634:	add	r3, r3, #1
   18638:	str	r3, [fp, #-20]	; 0xffffffec
   1863c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18640:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18644:	cmp	r2, r3
   18648:	bcs	18670 <__assert_fail@plt+0x717c>
   1864c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   18650:	lsr	r3, r3, #6
   18654:	uxtb	r2, r3
   18658:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1865c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18660:	add	r3, r1, r3
   18664:	add	r2, r2, #48	; 0x30
   18668:	uxtb	r2, r2
   1866c:	strb	r2, [r3]
   18670:	ldr	r3, [fp, #-20]	; 0xffffffec
   18674:	add	r3, r3, #1
   18678:	str	r3, [fp, #-20]	; 0xffffffec
   1867c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18680:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18684:	cmp	r2, r3
   18688:	bcs	186b8 <__assert_fail@plt+0x71c4>
   1868c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   18690:	lsr	r3, r3, #3
   18694:	uxtb	r3, r3
   18698:	and	r3, r3, #7
   1869c:	uxtb	r2, r3
   186a0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   186a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   186a8:	add	r3, r1, r3
   186ac:	add	r2, r2, #48	; 0x30
   186b0:	uxtb	r2, r2
   186b4:	strb	r2, [r3]
   186b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   186bc:	add	r3, r3, #1
   186c0:	str	r3, [fp, #-20]	; 0xffffffec
   186c4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   186c8:	and	r3, r3, #7
   186cc:	uxtb	r3, r3
   186d0:	add	r3, r3, #48	; 0x30
   186d4:	strb	r3, [fp, #-38]	; 0xffffffda
   186d8:	b	18720 <__assert_fail@plt+0x722c>
   186dc:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   186e0:	cmp	r3, #0
   186e4:	beq	18720 <__assert_fail@plt+0x722c>
   186e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   186ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   186f0:	cmp	r2, r3
   186f4:	bcs	1870c <__assert_fail@plt+0x7218>
   186f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   186fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   18700:	add	r3, r2, r3
   18704:	mov	r2, #92	; 0x5c
   18708:	strb	r2, [r3]
   1870c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18710:	add	r3, r3, #1
   18714:	str	r3, [fp, #-20]	; 0xffffffec
   18718:	mov	r3, #0
   1871c:	strb	r3, [fp, #-40]	; 0xffffffd8
   18720:	ldr	r3, [fp, #-16]
   18724:	add	r3, r3, #1
   18728:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1872c:	cmp	r2, r3
   18730:	bls	18810 <__assert_fail@plt+0x731c>
   18734:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   18738:	cmp	r3, #0
   1873c:	beq	187bc <__assert_fail@plt+0x72c8>
   18740:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   18744:	eor	r3, r3, #1
   18748:	uxtb	r3, r3
   1874c:	cmp	r3, #0
   18750:	beq	187bc <__assert_fail@plt+0x72c8>
   18754:	ldr	r2, [fp, #-20]	; 0xffffffec
   18758:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1875c:	cmp	r2, r3
   18760:	bcs	18778 <__assert_fail@plt+0x7284>
   18764:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18768:	ldr	r3, [fp, #-20]	; 0xffffffec
   1876c:	add	r3, r2, r3
   18770:	mov	r2, #39	; 0x27
   18774:	strb	r2, [r3]
   18778:	ldr	r3, [fp, #-20]	; 0xffffffec
   1877c:	add	r3, r3, #1
   18780:	str	r3, [fp, #-20]	; 0xffffffec
   18784:	ldr	r2, [fp, #-20]	; 0xffffffec
   18788:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1878c:	cmp	r2, r3
   18790:	bcs	187a8 <__assert_fail@plt+0x72b4>
   18794:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18798:	ldr	r3, [fp, #-20]	; 0xffffffec
   1879c:	add	r3, r2, r3
   187a0:	mov	r2, #39	; 0x27
   187a4:	strb	r2, [r3]
   187a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   187ac:	add	r3, r3, #1
   187b0:	str	r3, [fp, #-20]	; 0xffffffec
   187b4:	mov	r3, #0
   187b8:	strb	r3, [fp, #-35]	; 0xffffffdd
   187bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   187c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   187c4:	cmp	r2, r3
   187c8:	bcs	187e0 <__assert_fail@plt+0x72ec>
   187cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   187d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   187d4:	add	r3, r2, r3
   187d8:	ldrb	r2, [fp, #-38]	; 0xffffffda
   187dc:	strb	r2, [r3]
   187e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   187e4:	add	r3, r3, #1
   187e8:	str	r3, [fp, #-20]	; 0xffffffec
   187ec:	ldr	r3, [fp, #-16]
   187f0:	add	r3, r3, #1
   187f4:	str	r3, [fp, #-16]
   187f8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   187fc:	ldr	r3, [fp, #-16]
   18800:	add	r3, r2, r3
   18804:	ldrb	r3, [r3]
   18808:	strb	r3, [fp, #-38]	; 0xffffffda
   1880c:	b	18520 <__assert_fail@plt+0x702c>
   18810:	nop	{0}
   18814:	b	189ec <__assert_fail@plt+0x74f8>
   18818:	nop	{0}
   1881c:	b	1884c <__assert_fail@plt+0x7358>
   18820:	nop	{0}
   18824:	b	1884c <__assert_fail@plt+0x7358>
   18828:	nop	{0}
   1882c:	b	1884c <__assert_fail@plt+0x7358>
   18830:	nop	{0}
   18834:	b	1884c <__assert_fail@plt+0x7358>
   18838:	nop	{0}
   1883c:	b	1884c <__assert_fail@plt+0x7358>
   18840:	nop	{0}
   18844:	b	1884c <__assert_fail@plt+0x7358>
   18848:	nop	{0}
   1884c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   18850:	eor	r3, r3, #1
   18854:	uxtb	r3, r3
   18858:	cmp	r3, #0
   1885c:	bne	1886c <__assert_fail@plt+0x7378>
   18860:	ldr	r3, [fp, #4]
   18864:	cmp	r3, #2
   18868:	bne	18880 <__assert_fail@plt+0x738c>
   1886c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18870:	eor	r3, r3, #1
   18874:	uxtb	r3, r3
   18878:	cmp	r3, #0
   1887c:	bne	188c0 <__assert_fail@plt+0x73cc>
   18880:	ldr	r3, [fp, #12]
   18884:	cmp	r3, #0
   18888:	beq	188c0 <__assert_fail@plt+0x73cc>
   1888c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   18890:	lsr	r3, r3, #5
   18894:	uxtb	r3, r3
   18898:	lsl	r3, r3, #2
   1889c:	ldr	r2, [fp, #12]
   188a0:	add	r3, r2, r3
   188a4:	ldr	r2, [r3]
   188a8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   188ac:	and	r3, r3, #31
   188b0:	lsr	r3, r2, r3
   188b4:	and	r3, r3, #1
   188b8:	cmp	r3, #0
   188bc:	bne	188d4 <__assert_fail@plt+0x73e0>
   188c0:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   188c4:	eor	r3, r3, #1
   188c8:	uxtb	r3, r3
   188cc:	cmp	r3, #0
   188d0:	bne	189e8 <__assert_fail@plt+0x74f4>
   188d4:	nop	{0}
   188d8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   188dc:	cmp	r3, #0
   188e0:	bne	18cb8 <__assert_fail@plt+0x77c4>
   188e4:	mov	r3, #1
   188e8:	strb	r3, [fp, #-41]	; 0xffffffd7
   188ec:	ldr	r3, [fp, #4]
   188f0:	cmp	r3, #2
   188f4:	bne	189a4 <__assert_fail@plt+0x74b0>
   188f8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   188fc:	eor	r3, r3, #1
   18900:	uxtb	r3, r3
   18904:	cmp	r3, #0
   18908:	beq	189a4 <__assert_fail@plt+0x74b0>
   1890c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18910:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18914:	cmp	r2, r3
   18918:	bcs	18930 <__assert_fail@plt+0x743c>
   1891c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18920:	ldr	r3, [fp, #-20]	; 0xffffffec
   18924:	add	r3, r2, r3
   18928:	mov	r2, #39	; 0x27
   1892c:	strb	r2, [r3]
   18930:	ldr	r3, [fp, #-20]	; 0xffffffec
   18934:	add	r3, r3, #1
   18938:	str	r3, [fp, #-20]	; 0xffffffec
   1893c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18940:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18944:	cmp	r2, r3
   18948:	bcs	18960 <__assert_fail@plt+0x746c>
   1894c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18950:	ldr	r3, [fp, #-20]	; 0xffffffec
   18954:	add	r3, r2, r3
   18958:	mov	r2, #36	; 0x24
   1895c:	strb	r2, [r3]
   18960:	ldr	r3, [fp, #-20]	; 0xffffffec
   18964:	add	r3, r3, #1
   18968:	str	r3, [fp, #-20]	; 0xffffffec
   1896c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18970:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18974:	cmp	r2, r3
   18978:	bcs	18990 <__assert_fail@plt+0x749c>
   1897c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18980:	ldr	r3, [fp, #-20]	; 0xffffffec
   18984:	add	r3, r2, r3
   18988:	mov	r2, #39	; 0x27
   1898c:	strb	r2, [r3]
   18990:	ldr	r3, [fp, #-20]	; 0xffffffec
   18994:	add	r3, r3, #1
   18998:	str	r3, [fp, #-20]	; 0xffffffec
   1899c:	mov	r3, #1
   189a0:	strb	r3, [fp, #-35]	; 0xffffffdd
   189a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   189a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   189ac:	cmp	r2, r3
   189b0:	bcs	189c8 <__assert_fail@plt+0x74d4>
   189b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   189b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   189bc:	add	r3, r2, r3
   189c0:	mov	r2, #92	; 0x5c
   189c4:	strb	r2, [r3]
   189c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   189cc:	add	r3, r3, #1
   189d0:	str	r3, [fp, #-20]	; 0xffffffec
   189d4:	b	189ec <__assert_fail@plt+0x74f8>
   189d8:	nop	{0}
   189dc:	b	189ec <__assert_fail@plt+0x74f8>
   189e0:	nop	{0}
   189e4:	b	189ec <__assert_fail@plt+0x74f8>
   189e8:	nop	{0}
   189ec:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   189f0:	cmp	r3, #0
   189f4:	beq	18a74 <__assert_fail@plt+0x7580>
   189f8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   189fc:	eor	r3, r3, #1
   18a00:	uxtb	r3, r3
   18a04:	cmp	r3, #0
   18a08:	beq	18a74 <__assert_fail@plt+0x7580>
   18a0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18a10:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18a14:	cmp	r2, r3
   18a18:	bcs	18a30 <__assert_fail@plt+0x753c>
   18a1c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18a20:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a24:	add	r3, r2, r3
   18a28:	mov	r2, #39	; 0x27
   18a2c:	strb	r2, [r3]
   18a30:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a34:	add	r3, r3, #1
   18a38:	str	r3, [fp, #-20]	; 0xffffffec
   18a3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18a40:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18a44:	cmp	r2, r3
   18a48:	bcs	18a60 <__assert_fail@plt+0x756c>
   18a4c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18a50:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a54:	add	r3, r2, r3
   18a58:	mov	r2, #39	; 0x27
   18a5c:	strb	r2, [r3]
   18a60:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a64:	add	r3, r3, #1
   18a68:	str	r3, [fp, #-20]	; 0xffffffec
   18a6c:	mov	r3, #0
   18a70:	strb	r3, [fp, #-35]	; 0xffffffdd
   18a74:	ldr	r2, [fp, #-20]	; 0xffffffec
   18a78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18a7c:	cmp	r2, r3
   18a80:	bcs	18a98 <__assert_fail@plt+0x75a4>
   18a84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18a88:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a8c:	add	r3, r2, r3
   18a90:	ldrb	r2, [fp, #-38]	; 0xffffffda
   18a94:	strb	r2, [r3]
   18a98:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a9c:	add	r3, r3, #1
   18aa0:	str	r3, [fp, #-20]	; 0xffffffec
   18aa4:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   18aa8:	eor	r3, r3, #1
   18aac:	uxtb	r3, r3
   18ab0:	cmp	r3, #0
   18ab4:	beq	18ac0 <__assert_fail@plt+0x75cc>
   18ab8:	mov	r3, #0
   18abc:	strb	r3, [fp, #-37]	; 0xffffffdb
   18ac0:	ldr	r3, [fp, #-16]
   18ac4:	add	r3, r3, #1
   18ac8:	str	r3, [fp, #-16]
   18acc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18ad0:	cmn	r3, #1
   18ad4:	bne	18afc <__assert_fail@plt+0x7608>
   18ad8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18adc:	ldr	r3, [fp, #-16]
   18ae0:	add	r3, r2, r3
   18ae4:	ldrb	r3, [r3]
   18ae8:	cmp	r3, #0
   18aec:	movne	r3, #1
   18af0:	moveq	r3, #0
   18af4:	uxtb	r3, r3
   18af8:	b	18b14 <__assert_fail@plt+0x7620>
   18afc:	ldr	r2, [fp, #-16]
   18b00:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18b04:	cmp	r2, r3
   18b08:	movne	r3, #1
   18b0c:	moveq	r3, #0
   18b10:	uxtb	r3, r3
   18b14:	cmp	r3, #0
   18b18:	bne	17934 <__assert_fail@plt+0x6440>
   18b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b20:	cmp	r3, #0
   18b24:	bne	18b40 <__assert_fail@plt+0x764c>
   18b28:	ldr	r3, [fp, #4]
   18b2c:	cmp	r3, #2
   18b30:	bne	18b40 <__assert_fail@plt+0x764c>
   18b34:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18b38:	cmp	r3, #0
   18b3c:	bne	18cc0 <__assert_fail@plt+0x77cc>
   18b40:	ldr	r3, [fp, #4]
   18b44:	cmp	r3, #2
   18b48:	bne	18be8 <__assert_fail@plt+0x76f4>
   18b4c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18b50:	eor	r3, r3, #1
   18b54:	uxtb	r3, r3
   18b58:	cmp	r3, #0
   18b5c:	beq	18be8 <__assert_fail@plt+0x76f4>
   18b60:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   18b64:	cmp	r3, #0
   18b68:	beq	18be8 <__assert_fail@plt+0x76f4>
   18b6c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   18b70:	cmp	r3, #0
   18b74:	beq	18bbc <__assert_fail@plt+0x76c8>
   18b78:	ldr	r3, [fp, #20]
   18b7c:	str	r3, [sp, #16]
   18b80:	ldr	r3, [fp, #16]
   18b84:	str	r3, [sp, #12]
   18b88:	ldr	r3, [fp, #12]
   18b8c:	str	r3, [sp, #8]
   18b90:	ldr	r3, [fp, #8]
   18b94:	str	r3, [sp, #4]
   18b98:	mov	r3, #5
   18b9c:	str	r3, [sp]
   18ba0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18ba4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18ba8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bac:	ldr	r0, [fp, #-88]	; 0xffffffa8
   18bb0:	bl	1766c <__assert_fail@plt+0x6178>
   18bb4:	mov	r3, r0
   18bb8:	b	18d28 <__assert_fail@plt+0x7834>
   18bbc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18bc0:	cmp	r3, #0
   18bc4:	bne	18be8 <__assert_fail@plt+0x76f4>
   18bc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bcc:	cmp	r3, #0
   18bd0:	beq	18be8 <__assert_fail@plt+0x76f4>
   18bd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bd8:	str	r3, [fp, #-92]	; 0xffffffa4
   18bdc:	mov	r3, #0
   18be0:	str	r3, [fp, #-20]	; 0xffffffec
   18be4:	b	17700 <__assert_fail@plt+0x620c>
   18be8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18bec:	cmp	r3, #0
   18bf0:	beq	18c5c <__assert_fail@plt+0x7768>
   18bf4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18bf8:	eor	r3, r3, #1
   18bfc:	uxtb	r3, r3
   18c00:	cmp	r3, #0
   18c04:	beq	18c5c <__assert_fail@plt+0x7768>
   18c08:	b	18c4c <__assert_fail@plt+0x7758>
   18c0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18c10:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18c14:	cmp	r2, r3
   18c18:	bcs	18c34 <__assert_fail@plt+0x7740>
   18c1c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18c20:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c24:	add	r3, r2, r3
   18c28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18c2c:	ldrb	r2, [r2]
   18c30:	strb	r2, [r3]
   18c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c38:	add	r3, r3, #1
   18c3c:	str	r3, [fp, #-20]	; 0xffffffec
   18c40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18c44:	add	r3, r3, #1
   18c48:	str	r3, [fp, #-28]	; 0xffffffe4
   18c4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18c50:	ldrb	r3, [r3]
   18c54:	cmp	r3, #0
   18c58:	bne	18c0c <__assert_fail@plt+0x7718>
   18c5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18c60:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18c64:	cmp	r2, r3
   18c68:	bcs	18c80 <__assert_fail@plt+0x778c>
   18c6c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18c70:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c74:	add	r3, r2, r3
   18c78:	mov	r2, #0
   18c7c:	strb	r2, [r3]
   18c80:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c84:	b	18d28 <__assert_fail@plt+0x7834>
   18c88:	nop	{0}
   18c8c:	b	18cc4 <__assert_fail@plt+0x77d0>
   18c90:	nop	{0}
   18c94:	b	18cc4 <__assert_fail@plt+0x77d0>
   18c98:	nop	{0}
   18c9c:	b	18cc4 <__assert_fail@plt+0x77d0>
   18ca0:	nop	{0}
   18ca4:	b	18cc4 <__assert_fail@plt+0x77d0>
   18ca8:	nop	{0}
   18cac:	b	18cc4 <__assert_fail@plt+0x77d0>
   18cb0:	nop	{0}
   18cb4:	b	18cc4 <__assert_fail@plt+0x77d0>
   18cb8:	nop	{0}
   18cbc:	b	18cc4 <__assert_fail@plt+0x77d0>
   18cc0:	nop	{0}
   18cc4:	ldr	r3, [fp, #4]
   18cc8:	cmp	r3, #2
   18ccc:	bne	18ce4 <__assert_fail@plt+0x77f0>
   18cd0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   18cd4:	cmp	r3, #0
   18cd8:	beq	18ce4 <__assert_fail@plt+0x77f0>
   18cdc:	mov	r3, #4
   18ce0:	str	r3, [fp, #4]
   18ce4:	ldr	r3, [fp, #8]
   18ce8:	bic	r3, r3, #2
   18cec:	ldr	r2, [fp, #20]
   18cf0:	str	r2, [sp, #16]
   18cf4:	ldr	r2, [fp, #16]
   18cf8:	str	r2, [sp, #12]
   18cfc:	mov	r2, #0
   18d00:	str	r2, [sp, #8]
   18d04:	str	r3, [sp, #4]
   18d08:	ldr	r3, [fp, #4]
   18d0c:	str	r3, [sp]
   18d10:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18d14:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18d18:	ldr	r1, [fp, #-92]	; 0xffffffa4
   18d1c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   18d20:	bl	1766c <__assert_fail@plt+0x6178>
   18d24:	mov	r3, r0
   18d28:	mov	r0, r3
   18d2c:	sub	sp, fp, #8
   18d30:	ldr	r4, [sp]
   18d34:	ldr	fp, [sp, #4]
   18d38:	add	sp, sp, #8
   18d3c:	pop	{pc}		; (ldr pc, [sp], #4)
   18d40:	str	fp, [sp, #-8]!
   18d44:	str	lr, [sp, #4]
   18d48:	add	fp, sp, #4
   18d4c:	sub	sp, sp, #56	; 0x38
   18d50:	str	r0, [fp, #-24]	; 0xffffffe8
   18d54:	str	r1, [fp, #-28]	; 0xffffffe4
   18d58:	str	r2, [fp, #-32]	; 0xffffffe0
   18d5c:	str	r3, [fp, #-36]	; 0xffffffdc
   18d60:	ldr	r3, [fp, #4]
   18d64:	cmp	r3, #0
   18d68:	beq	18d74 <__assert_fail@plt+0x7880>
   18d6c:	ldr	r3, [fp, #4]
   18d70:	b	18d7c <__assert_fail@plt+0x7888>
   18d74:	movw	r3, #62768	; 0xf530
   18d78:	movt	r3, #2
   18d7c:	str	r3, [fp, #-8]
   18d80:	bl	113bc <__errno_location@plt>
   18d84:	mov	r3, r0
   18d88:	ldr	r3, [r3]
   18d8c:	str	r3, [fp, #-12]
   18d90:	ldr	r3, [fp, #-8]
   18d94:	ldr	r3, [r3]
   18d98:	ldr	r2, [fp, #-8]
   18d9c:	ldr	r2, [r2, #4]
   18da0:	ldr	r1, [fp, #-8]
   18da4:	add	r1, r1, #8
   18da8:	ldr	r0, [fp, #-8]
   18dac:	ldr	r0, [r0, #40]	; 0x28
   18db0:	ldr	ip, [fp, #-8]
   18db4:	ldr	ip, [ip, #44]	; 0x2c
   18db8:	str	ip, [sp, #16]
   18dbc:	str	r0, [sp, #12]
   18dc0:	str	r1, [sp, #8]
   18dc4:	str	r2, [sp, #4]
   18dc8:	str	r3, [sp]
   18dcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18dd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18dd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18dd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ddc:	bl	1766c <__assert_fail@plt+0x6178>
   18de0:	str	r0, [fp, #-16]
   18de4:	bl	113bc <__errno_location@plt>
   18de8:	mov	r2, r0
   18dec:	ldr	r3, [fp, #-12]
   18df0:	str	r3, [r2]
   18df4:	ldr	r3, [fp, #-16]
   18df8:	mov	r0, r3
   18dfc:	sub	sp, fp, #4
   18e00:	ldr	fp, [sp]
   18e04:	add	sp, sp, #4
   18e08:	pop	{pc}		; (ldr pc, [sp], #4)
   18e0c:	str	fp, [sp, #-8]!
   18e10:	str	lr, [sp, #4]
   18e14:	add	fp, sp, #4
   18e18:	sub	sp, sp, #16
   18e1c:	str	r0, [fp, #-8]
   18e20:	str	r1, [fp, #-12]
   18e24:	str	r2, [fp, #-16]
   18e28:	ldr	r3, [fp, #-16]
   18e2c:	mov	r2, #0
   18e30:	ldr	r1, [fp, #-12]
   18e34:	ldr	r0, [fp, #-8]
   18e38:	bl	18e54 <__assert_fail@plt+0x7960>
   18e3c:	mov	r3, r0
   18e40:	mov	r0, r3
   18e44:	sub	sp, fp, #4
   18e48:	ldr	fp, [sp]
   18e4c:	add	sp, sp, #4
   18e50:	pop	{pc}		; (ldr pc, [sp], #4)
   18e54:	str	fp, [sp, #-8]!
   18e58:	str	lr, [sp, #4]
   18e5c:	add	fp, sp, #4
   18e60:	sub	sp, sp, #64	; 0x40
   18e64:	str	r0, [fp, #-32]	; 0xffffffe0
   18e68:	str	r1, [fp, #-36]	; 0xffffffdc
   18e6c:	str	r2, [fp, #-40]	; 0xffffffd8
   18e70:	str	r3, [fp, #-44]	; 0xffffffd4
   18e74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18e78:	cmp	r3, #0
   18e7c:	beq	18e88 <__assert_fail@plt+0x7994>
   18e80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18e84:	b	18e90 <__assert_fail@plt+0x799c>
   18e88:	movw	r3, #62768	; 0xf530
   18e8c:	movt	r3, #2
   18e90:	str	r3, [fp, #-8]
   18e94:	bl	113bc <__errno_location@plt>
   18e98:	mov	r3, r0
   18e9c:	ldr	r3, [r3]
   18ea0:	str	r3, [fp, #-12]
   18ea4:	ldr	r3, [fp, #-8]
   18ea8:	ldr	r3, [r3, #4]
   18eac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18eb0:	cmp	r2, #0
   18eb4:	moveq	r2, #1
   18eb8:	movne	r2, #0
   18ebc:	uxtb	r2, r2
   18ec0:	orr	r3, r3, r2
   18ec4:	str	r3, [fp, #-16]
   18ec8:	ldr	r3, [fp, #-8]
   18ecc:	ldr	r3, [r3]
   18ed0:	ldr	r2, [fp, #-8]
   18ed4:	add	r2, r2, #8
   18ed8:	ldr	r1, [fp, #-8]
   18edc:	ldr	r1, [r1, #40]	; 0x28
   18ee0:	ldr	r0, [fp, #-8]
   18ee4:	ldr	r0, [r0, #44]	; 0x2c
   18ee8:	str	r0, [sp, #16]
   18eec:	str	r1, [sp, #12]
   18ef0:	str	r2, [sp, #8]
   18ef4:	ldr	r2, [fp, #-16]
   18ef8:	str	r2, [sp, #4]
   18efc:	str	r3, [sp]
   18f00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18f04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18f08:	mov	r1, #0
   18f0c:	mov	r0, #0
   18f10:	bl	1766c <__assert_fail@plt+0x6178>
   18f14:	mov	r3, r0
   18f18:	add	r3, r3, #1
   18f1c:	str	r3, [fp, #-20]	; 0xffffffec
   18f20:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f24:	bl	1a9d4 <__assert_fail@plt+0x94e0>
   18f28:	mov	r3, r0
   18f2c:	str	r3, [fp, #-24]	; 0xffffffe8
   18f30:	ldr	r3, [fp, #-8]
   18f34:	ldr	r3, [r3]
   18f38:	ldr	r2, [fp, #-8]
   18f3c:	add	r2, r2, #8
   18f40:	ldr	r1, [fp, #-8]
   18f44:	ldr	r1, [r1, #40]	; 0x28
   18f48:	ldr	r0, [fp, #-8]
   18f4c:	ldr	r0, [r0, #44]	; 0x2c
   18f50:	str	r0, [sp, #16]
   18f54:	str	r1, [sp, #12]
   18f58:	str	r2, [sp, #8]
   18f5c:	ldr	r2, [fp, #-16]
   18f60:	str	r2, [sp, #4]
   18f64:	str	r3, [sp]
   18f68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18f6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18f70:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f78:	bl	1766c <__assert_fail@plt+0x6178>
   18f7c:	bl	113bc <__errno_location@plt>
   18f80:	mov	r2, r0
   18f84:	ldr	r3, [fp, #-12]
   18f88:	str	r3, [r2]
   18f8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18f90:	cmp	r3, #0
   18f94:	beq	18fa8 <__assert_fail@plt+0x7ab4>
   18f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f9c:	sub	r2, r3, #1
   18fa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18fa4:	str	r2, [r3]
   18fa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18fac:	mov	r0, r3
   18fb0:	sub	sp, fp, #4
   18fb4:	ldr	fp, [sp]
   18fb8:	add	sp, sp, #4
   18fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   18fc0:	str	fp, [sp, #-8]!
   18fc4:	str	lr, [sp, #4]
   18fc8:	add	fp, sp, #4
   18fcc:	sub	sp, sp, #8
   18fd0:	movw	r3, #61820	; 0xf17c
   18fd4:	movt	r3, #2
   18fd8:	ldr	r3, [r3]
   18fdc:	str	r3, [fp, #-12]
   18fe0:	mov	r3, #1
   18fe4:	str	r3, [fp, #-8]
   18fe8:	b	19014 <__assert_fail@plt+0x7b20>
   18fec:	ldr	r3, [fp, #-8]
   18ff0:	lsl	r3, r3, #3
   18ff4:	ldr	r2, [fp, #-12]
   18ff8:	add	r3, r2, r3
   18ffc:	ldr	r3, [r3, #4]
   19000:	mov	r0, r3
   19004:	bl	16dfc <__assert_fail@plt+0x5908>
   19008:	ldr	r3, [fp, #-8]
   1900c:	add	r3, r3, #1
   19010:	str	r3, [fp, #-8]
   19014:	movw	r3, #61808	; 0xf170
   19018:	movt	r3, #2
   1901c:	ldr	r3, [r3]
   19020:	ldr	r2, [fp, #-8]
   19024:	cmp	r2, r3
   19028:	blt	18fec <__assert_fail@plt+0x7af8>
   1902c:	ldr	r3, [fp, #-12]
   19030:	ldr	r2, [r3, #4]
   19034:	movw	r3, #62816	; 0xf560
   19038:	movt	r3, #2
   1903c:	cmp	r2, r3
   19040:	beq	19078 <__assert_fail@plt+0x7b84>
   19044:	ldr	r3, [fp, #-12]
   19048:	ldr	r3, [r3, #4]
   1904c:	mov	r0, r3
   19050:	bl	16dfc <__assert_fail@plt+0x5908>
   19054:	movw	r3, #61812	; 0xf174
   19058:	movt	r3, #2
   1905c:	mov	r2, #256	; 0x100
   19060:	str	r2, [r3]
   19064:	movw	r3, #61812	; 0xf174
   19068:	movt	r3, #2
   1906c:	movw	r2, #62816	; 0xf560
   19070:	movt	r2, #2
   19074:	str	r2, [r3, #4]
   19078:	ldr	r2, [fp, #-12]
   1907c:	movw	r3, #61812	; 0xf174
   19080:	movt	r3, #2
   19084:	cmp	r2, r3
   19088:	beq	190a8 <__assert_fail@plt+0x7bb4>
   1908c:	ldr	r0, [fp, #-12]
   19090:	bl	16dfc <__assert_fail@plt+0x5908>
   19094:	movw	r3, #61820	; 0xf17c
   19098:	movt	r3, #2
   1909c:	movw	r2, #61812	; 0xf174
   190a0:	movt	r2, #2
   190a4:	str	r2, [r3]
   190a8:	movw	r3, #61808	; 0xf170
   190ac:	movt	r3, #2
   190b0:	mov	r2, #1
   190b4:	str	r2, [r3]
   190b8:	nop	{0}
   190bc:	sub	sp, fp, #4
   190c0:	ldr	fp, [sp]
   190c4:	add	sp, sp, #4
   190c8:	pop	{pc}		; (ldr pc, [sp], #4)
   190cc:	str	fp, [sp, #-8]!
   190d0:	str	lr, [sp, #4]
   190d4:	add	fp, sp, #4
   190d8:	sub	sp, sp, #80	; 0x50
   190dc:	str	r0, [fp, #-48]	; 0xffffffd0
   190e0:	str	r1, [fp, #-52]	; 0xffffffcc
   190e4:	str	r2, [fp, #-56]	; 0xffffffc8
   190e8:	str	r3, [fp, #-60]	; 0xffffffc4
   190ec:	bl	113bc <__errno_location@plt>
   190f0:	mov	r3, r0
   190f4:	ldr	r3, [r3]
   190f8:	str	r3, [fp, #-16]
   190fc:	movw	r3, #61820	; 0xf17c
   19100:	movt	r3, #2
   19104:	ldr	r3, [r3]
   19108:	str	r3, [fp, #-8]
   1910c:	mvn	r3, #-2147483648	; 0x80000000
   19110:	str	r3, [fp, #-20]	; 0xffffffec
   19114:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19118:	cmp	r3, #0
   1911c:	blt	19130 <__assert_fail@plt+0x7c3c>
   19120:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19124:	ldr	r3, [fp, #-20]	; 0xffffffec
   19128:	cmp	r2, r3
   1912c:	blt	19134 <__assert_fail@plt+0x7c40>
   19130:	bl	114d0 <abort@plt>
   19134:	movw	r3, #61808	; 0xf170
   19138:	movt	r3, #2
   1913c:	ldr	r3, [r3]
   19140:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19144:	cmp	r2, r3
   19148:	blt	19240 <__assert_fail@plt+0x7d4c>
   1914c:	ldr	r2, [fp, #-8]
   19150:	movw	r3, #61812	; 0xf174
   19154:	movt	r3, #2
   19158:	cmp	r2, r3
   1915c:	moveq	r3, #1
   19160:	movne	r3, #0
   19164:	strb	r3, [fp, #-21]	; 0xffffffeb
   19168:	movw	r3, #61808	; 0xf170
   1916c:	movt	r3, #2
   19170:	ldr	r3, [r3]
   19174:	str	r3, [fp, #-40]	; 0xffffffd8
   19178:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1917c:	cmp	r3, #0
   19180:	beq	1918c <__assert_fail@plt+0x7c98>
   19184:	mov	r0, #0
   19188:	b	19190 <__assert_fail@plt+0x7c9c>
   1918c:	ldr	r0, [fp, #-8]
   19190:	movw	r3, #61808	; 0xf170
   19194:	movt	r3, #2
   19198:	ldr	r3, [r3]
   1919c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   191a0:	sub	r3, r2, r3
   191a4:	add	r2, r3, #1
   191a8:	sub	r1, fp, #40	; 0x28
   191ac:	mov	r3, #8
   191b0:	str	r3, [sp]
   191b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   191b8:	bl	1ad34 <__assert_fail@plt+0x9840>
   191bc:	str	r0, [fp, #-8]
   191c0:	movw	r3, #61820	; 0xf17c
   191c4:	movt	r3, #2
   191c8:	ldr	r2, [fp, #-8]
   191cc:	str	r2, [r3]
   191d0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   191d4:	cmp	r3, #0
   191d8:	beq	191f4 <__assert_fail@plt+0x7d00>
   191dc:	ldr	r2, [fp, #-8]
   191e0:	movw	r3, #61812	; 0xf174
   191e4:	movt	r3, #2
   191e8:	mov	r1, r2
   191ec:	ldrd	r2, [r3]
   191f0:	strd	r2, [r1]
   191f4:	movw	r3, #61808	; 0xf170
   191f8:	movt	r3, #2
   191fc:	ldr	r3, [r3]
   19200:	lsl	r3, r3, #3
   19204:	ldr	r2, [fp, #-8]
   19208:	add	r0, r2, r3
   1920c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19210:	movw	r3, #61808	; 0xf170
   19214:	movt	r3, #2
   19218:	ldr	r3, [r3]
   1921c:	sub	r3, r2, r3
   19220:	lsl	r3, r3, #3
   19224:	mov	r2, r3
   19228:	mov	r1, #0
   1922c:	bl	113d4 <memset@plt>
   19230:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19234:	movw	r3, #61808	; 0xf170
   19238:	movt	r3, #2
   1923c:	str	r2, [r3]
   19240:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19244:	lsl	r3, r3, #3
   19248:	ldr	r2, [fp, #-8]
   1924c:	add	r3, r2, r3
   19250:	ldr	r3, [r3]
   19254:	str	r3, [fp, #-28]	; 0xffffffe4
   19258:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1925c:	lsl	r3, r3, #3
   19260:	ldr	r2, [fp, #-8]
   19264:	add	r3, r2, r3
   19268:	ldr	r3, [r3, #4]
   1926c:	str	r3, [fp, #-12]
   19270:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19274:	ldr	r3, [r3, #4]
   19278:	orr	r3, r3, #1
   1927c:	str	r3, [fp, #-32]	; 0xffffffe0
   19280:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19284:	ldr	r3, [r3]
   19288:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1928c:	add	r2, r2, #8
   19290:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19294:	ldr	r1, [r1, #40]	; 0x28
   19298:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1929c:	ldr	r0, [r0, #44]	; 0x2c
   192a0:	str	r0, [sp, #16]
   192a4:	str	r1, [sp, #12]
   192a8:	str	r2, [sp, #8]
   192ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   192b0:	str	r2, [sp, #4]
   192b4:	str	r3, [sp]
   192b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   192bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   192c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   192c4:	ldr	r0, [fp, #-12]
   192c8:	bl	1766c <__assert_fail@plt+0x6178>
   192cc:	str	r0, [fp, #-36]	; 0xffffffdc
   192d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   192d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   192d8:	cmp	r2, r3
   192dc:	bhi	19394 <__assert_fail@plt+0x7ea0>
   192e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   192e4:	add	r3, r3, #1
   192e8:	str	r3, [fp, #-28]	; 0xffffffe4
   192ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   192f0:	lsl	r3, r3, #3
   192f4:	ldr	r2, [fp, #-8]
   192f8:	add	r3, r2, r3
   192fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19300:	str	r2, [r3]
   19304:	ldr	r2, [fp, #-12]
   19308:	movw	r3, #62816	; 0xf560
   1930c:	movt	r3, #2
   19310:	cmp	r2, r3
   19314:	beq	19320 <__assert_fail@plt+0x7e2c>
   19318:	ldr	r0, [fp, #-12]
   1931c:	bl	16dfc <__assert_fail@plt+0x5908>
   19320:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19324:	bl	1a9d4 <__assert_fail@plt+0x94e0>
   19328:	mov	r3, r0
   1932c:	str	r3, [fp, #-12]
   19330:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19334:	lsl	r3, r3, #3
   19338:	ldr	r2, [fp, #-8]
   1933c:	add	r3, r2, r3
   19340:	ldr	r2, [fp, #-12]
   19344:	str	r2, [r3, #4]
   19348:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1934c:	ldr	r3, [r3]
   19350:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19354:	add	r2, r2, #8
   19358:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1935c:	ldr	r1, [r1, #40]	; 0x28
   19360:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19364:	ldr	r0, [r0, #44]	; 0x2c
   19368:	str	r0, [sp, #16]
   1936c:	str	r1, [sp, #12]
   19370:	str	r2, [sp, #8]
   19374:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19378:	str	r2, [sp, #4]
   1937c:	str	r3, [sp]
   19380:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19384:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19388:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1938c:	ldr	r0, [fp, #-12]
   19390:	bl	1766c <__assert_fail@plt+0x6178>
   19394:	bl	113bc <__errno_location@plt>
   19398:	mov	r2, r0
   1939c:	ldr	r3, [fp, #-16]
   193a0:	str	r3, [r2]
   193a4:	ldr	r3, [fp, #-12]
   193a8:	mov	r0, r3
   193ac:	sub	sp, fp, #4
   193b0:	ldr	fp, [sp]
   193b4:	add	sp, sp, #4
   193b8:	pop	{pc}		; (ldr pc, [sp], #4)
   193bc:	str	fp, [sp, #-8]!
   193c0:	str	lr, [sp, #4]
   193c4:	add	fp, sp, #4
   193c8:	sub	sp, sp, #8
   193cc:	str	r0, [fp, #-8]
   193d0:	str	r1, [fp, #-12]
   193d4:	movw	r3, #62768	; 0xf530
   193d8:	movt	r3, #2
   193dc:	mvn	r2, #0
   193e0:	ldr	r1, [fp, #-12]
   193e4:	ldr	r0, [fp, #-8]
   193e8:	bl	190cc <__assert_fail@plt+0x7bd8>
   193ec:	mov	r3, r0
   193f0:	mov	r0, r3
   193f4:	sub	sp, fp, #4
   193f8:	ldr	fp, [sp]
   193fc:	add	sp, sp, #4
   19400:	pop	{pc}		; (ldr pc, [sp], #4)
   19404:	str	fp, [sp, #-8]!
   19408:	str	lr, [sp, #4]
   1940c:	add	fp, sp, #4
   19410:	sub	sp, sp, #16
   19414:	str	r0, [fp, #-8]
   19418:	str	r1, [fp, #-12]
   1941c:	str	r2, [fp, #-16]
   19420:	movw	r3, #62768	; 0xf530
   19424:	movt	r3, #2
   19428:	ldr	r2, [fp, #-16]
   1942c:	ldr	r1, [fp, #-12]
   19430:	ldr	r0, [fp, #-8]
   19434:	bl	190cc <__assert_fail@plt+0x7bd8>
   19438:	mov	r3, r0
   1943c:	mov	r0, r3
   19440:	sub	sp, fp, #4
   19444:	ldr	fp, [sp]
   19448:	add	sp, sp, #4
   1944c:	pop	{pc}		; (ldr pc, [sp], #4)
   19450:	str	fp, [sp, #-8]!
   19454:	str	lr, [sp, #4]
   19458:	add	fp, sp, #4
   1945c:	sub	sp, sp, #8
   19460:	str	r0, [fp, #-8]
   19464:	ldr	r1, [fp, #-8]
   19468:	mov	r0, #0
   1946c:	bl	193bc <__assert_fail@plt+0x7ec8>
   19470:	mov	r3, r0
   19474:	mov	r0, r3
   19478:	sub	sp, fp, #4
   1947c:	ldr	fp, [sp]
   19480:	add	sp, sp, #4
   19484:	pop	{pc}		; (ldr pc, [sp], #4)
   19488:	str	fp, [sp, #-8]!
   1948c:	str	lr, [sp, #4]
   19490:	add	fp, sp, #4
   19494:	sub	sp, sp, #8
   19498:	str	r0, [fp, #-8]
   1949c:	str	r1, [fp, #-12]
   194a0:	ldr	r2, [fp, #-12]
   194a4:	ldr	r1, [fp, #-8]
   194a8:	mov	r0, #0
   194ac:	bl	19404 <__assert_fail@plt+0x7f10>
   194b0:	mov	r3, r0
   194b4:	mov	r0, r3
   194b8:	sub	sp, fp, #4
   194bc:	ldr	fp, [sp]
   194c0:	add	sp, sp, #4
   194c4:	pop	{pc}		; (ldr pc, [sp], #4)
   194c8:	str	fp, [sp, #-8]!
   194cc:	str	lr, [sp, #4]
   194d0:	add	fp, sp, #4
   194d4:	sub	sp, sp, #64	; 0x40
   194d8:	str	r0, [fp, #-56]	; 0xffffffc8
   194dc:	str	r1, [fp, #-60]	; 0xffffffc4
   194e0:	str	r2, [fp, #-64]	; 0xffffffc0
   194e4:	sub	r3, fp, #52	; 0x34
   194e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   194ec:	mov	r0, r3
   194f0:	bl	174c8 <__assert_fail@plt+0x5fd4>
   194f4:	sub	r3, fp, #52	; 0x34
   194f8:	mvn	r2, #0
   194fc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   19500:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19504:	bl	190cc <__assert_fail@plt+0x7bd8>
   19508:	mov	r3, r0
   1950c:	mov	r0, r3
   19510:	sub	sp, fp, #4
   19514:	ldr	fp, [sp]
   19518:	add	sp, sp, #4
   1951c:	pop	{pc}		; (ldr pc, [sp], #4)
   19520:	str	fp, [sp, #-8]!
   19524:	str	lr, [sp, #4]
   19528:	add	fp, sp, #4
   1952c:	sub	sp, sp, #64	; 0x40
   19530:	str	r0, [fp, #-56]	; 0xffffffc8
   19534:	str	r1, [fp, #-60]	; 0xffffffc4
   19538:	str	r2, [fp, #-64]	; 0xffffffc0
   1953c:	str	r3, [fp, #-68]	; 0xffffffbc
   19540:	sub	r3, fp, #52	; 0x34
   19544:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19548:	mov	r0, r3
   1954c:	bl	174c8 <__assert_fail@plt+0x5fd4>
   19550:	sub	r3, fp, #52	; 0x34
   19554:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19558:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1955c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19560:	bl	190cc <__assert_fail@plt+0x7bd8>
   19564:	mov	r3, r0
   19568:	mov	r0, r3
   1956c:	sub	sp, fp, #4
   19570:	ldr	fp, [sp]
   19574:	add	sp, sp, #4
   19578:	pop	{pc}		; (ldr pc, [sp], #4)
   1957c:	str	fp, [sp, #-8]!
   19580:	str	lr, [sp, #4]
   19584:	add	fp, sp, #4
   19588:	sub	sp, sp, #8
   1958c:	str	r0, [fp, #-8]
   19590:	str	r1, [fp, #-12]
   19594:	ldr	r2, [fp, #-12]
   19598:	ldr	r1, [fp, #-8]
   1959c:	mov	r0, #0
   195a0:	bl	194c8 <__assert_fail@plt+0x7fd4>
   195a4:	mov	r3, r0
   195a8:	mov	r0, r3
   195ac:	sub	sp, fp, #4
   195b0:	ldr	fp, [sp]
   195b4:	add	sp, sp, #4
   195b8:	pop	{pc}		; (ldr pc, [sp], #4)
   195bc:	str	fp, [sp, #-8]!
   195c0:	str	lr, [sp, #4]
   195c4:	add	fp, sp, #4
   195c8:	sub	sp, sp, #16
   195cc:	str	r0, [fp, #-8]
   195d0:	str	r1, [fp, #-12]
   195d4:	str	r2, [fp, #-16]
   195d8:	ldr	r3, [fp, #-16]
   195dc:	ldr	r2, [fp, #-12]
   195e0:	ldr	r1, [fp, #-8]
   195e4:	mov	r0, #0
   195e8:	bl	19520 <__assert_fail@plt+0x802c>
   195ec:	mov	r3, r0
   195f0:	mov	r0, r3
   195f4:	sub	sp, fp, #4
   195f8:	ldr	fp, [sp]
   195fc:	add	sp, sp, #4
   19600:	pop	{pc}		; (ldr pc, [sp], #4)
   19604:	str	fp, [sp, #-8]!
   19608:	str	lr, [sp, #4]
   1960c:	add	fp, sp, #4
   19610:	sub	sp, sp, #64	; 0x40
   19614:	str	r0, [fp, #-56]	; 0xffffffc8
   19618:	str	r1, [fp, #-60]	; 0xffffffc4
   1961c:	mov	r3, r2
   19620:	strb	r3, [fp, #-61]	; 0xffffffc3
   19624:	movw	r2, #62768	; 0xf530
   19628:	movt	r2, #2
   1962c:	sub	r3, fp, #52	; 0x34
   19630:	ldrd	r0, [r2]
   19634:	strd	r0, [r3]
   19638:	ldrd	r0, [r2, #8]
   1963c:	strd	r0, [r3, #8]
   19640:	ldrd	r0, [r2, #16]
   19644:	strd	r0, [r3, #16]
   19648:	ldrd	r0, [r2, #24]
   1964c:	strd	r0, [r3, #24]
   19650:	ldrd	r0, [r2, #32]
   19654:	strd	r0, [r3, #32]
   19658:	ldrd	r0, [r2, #40]	; 0x28
   1965c:	strd	r0, [r3, #40]	; 0x28
   19660:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   19664:	sub	r3, fp, #52	; 0x34
   19668:	mov	r2, #1
   1966c:	mov	r0, r3
   19670:	bl	17328 <__assert_fail@plt+0x5e34>
   19674:	sub	r3, fp, #52	; 0x34
   19678:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1967c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   19680:	mov	r0, #0
   19684:	bl	190cc <__assert_fail@plt+0x7bd8>
   19688:	mov	r3, r0
   1968c:	mov	r0, r3
   19690:	sub	sp, fp, #4
   19694:	ldr	fp, [sp]
   19698:	add	sp, sp, #4
   1969c:	pop	{pc}		; (ldr pc, [sp], #4)
   196a0:	str	fp, [sp, #-8]!
   196a4:	str	lr, [sp, #4]
   196a8:	add	fp, sp, #4
   196ac:	sub	sp, sp, #8
   196b0:	str	r0, [fp, #-8]
   196b4:	mov	r3, r1
   196b8:	strb	r3, [fp, #-9]
   196bc:	ldrb	r3, [fp, #-9]
   196c0:	mov	r2, r3
   196c4:	mvn	r1, #0
   196c8:	ldr	r0, [fp, #-8]
   196cc:	bl	19604 <__assert_fail@plt+0x8110>
   196d0:	mov	r3, r0
   196d4:	mov	r0, r3
   196d8:	sub	sp, fp, #4
   196dc:	ldr	fp, [sp]
   196e0:	add	sp, sp, #4
   196e4:	pop	{pc}		; (ldr pc, [sp], #4)
   196e8:	str	fp, [sp, #-8]!
   196ec:	str	lr, [sp, #4]
   196f0:	add	fp, sp, #4
   196f4:	sub	sp, sp, #8
   196f8:	str	r0, [fp, #-8]
   196fc:	mov	r1, #58	; 0x3a
   19700:	ldr	r0, [fp, #-8]
   19704:	bl	196a0 <__assert_fail@plt+0x81ac>
   19708:	mov	r3, r0
   1970c:	mov	r0, r3
   19710:	sub	sp, fp, #4
   19714:	ldr	fp, [sp]
   19718:	add	sp, sp, #4
   1971c:	pop	{pc}		; (ldr pc, [sp], #4)
   19720:	str	fp, [sp, #-8]!
   19724:	str	lr, [sp, #4]
   19728:	add	fp, sp, #4
   1972c:	sub	sp, sp, #8
   19730:	str	r0, [fp, #-8]
   19734:	str	r1, [fp, #-12]
   19738:	mov	r2, #58	; 0x3a
   1973c:	ldr	r1, [fp, #-12]
   19740:	ldr	r0, [fp, #-8]
   19744:	bl	19604 <__assert_fail@plt+0x8110>
   19748:	mov	r3, r0
   1974c:	mov	r0, r3
   19750:	sub	sp, fp, #4
   19754:	ldr	fp, [sp]
   19758:	add	sp, sp, #4
   1975c:	pop	{pc}		; (ldr pc, [sp], #4)
   19760:	str	fp, [sp, #-8]!
   19764:	str	lr, [sp, #4]
   19768:	add	fp, sp, #4
   1976c:	sub	sp, sp, #112	; 0x70
   19770:	str	r0, [fp, #-56]	; 0xffffffc8
   19774:	str	r1, [fp, #-60]	; 0xffffffc4
   19778:	str	r2, [fp, #-64]	; 0xffffffc0
   1977c:	sub	r3, fp, #116	; 0x74
   19780:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19784:	mov	r0, r3
   19788:	bl	174c8 <__assert_fail@plt+0x5fd4>
   1978c:	sub	r3, fp, #52	; 0x34
   19790:	sub	r2, fp, #116	; 0x74
   19794:	ldrd	r0, [r2]
   19798:	strd	r0, [r3]
   1979c:	ldrd	r0, [r2, #8]
   197a0:	strd	r0, [r3, #8]
   197a4:	ldrd	r0, [r2, #16]
   197a8:	strd	r0, [r3, #16]
   197ac:	ldrd	r0, [r2, #24]
   197b0:	strd	r0, [r3, #24]
   197b4:	ldrd	r0, [r2, #32]
   197b8:	strd	r0, [r3, #32]
   197bc:	ldrd	r0, [r2, #40]	; 0x28
   197c0:	strd	r0, [r3, #40]	; 0x28
   197c4:	sub	r3, fp, #52	; 0x34
   197c8:	mov	r2, #1
   197cc:	mov	r1, #58	; 0x3a
   197d0:	mov	r0, r3
   197d4:	bl	17328 <__assert_fail@plt+0x5e34>
   197d8:	sub	r3, fp, #52	; 0x34
   197dc:	mvn	r2, #0
   197e0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   197e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   197e8:	bl	190cc <__assert_fail@plt+0x7bd8>
   197ec:	mov	r3, r0
   197f0:	mov	r0, r3
   197f4:	sub	sp, fp, #4
   197f8:	ldr	fp, [sp]
   197fc:	add	sp, sp, #4
   19800:	pop	{pc}		; (ldr pc, [sp], #4)
   19804:	str	fp, [sp, #-8]!
   19808:	str	lr, [sp, #4]
   1980c:	add	fp, sp, #4
   19810:	sub	sp, sp, #24
   19814:	str	r0, [fp, #-8]
   19818:	str	r1, [fp, #-12]
   1981c:	str	r2, [fp, #-16]
   19820:	str	r3, [fp, #-20]	; 0xffffffec
   19824:	mvn	r3, #0
   19828:	str	r3, [sp]
   1982c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19830:	ldr	r2, [fp, #-16]
   19834:	ldr	r1, [fp, #-12]
   19838:	ldr	r0, [fp, #-8]
   1983c:	bl	19858 <__assert_fail@plt+0x8364>
   19840:	mov	r3, r0
   19844:	mov	r0, r3
   19848:	sub	sp, fp, #4
   1984c:	ldr	fp, [sp]
   19850:	add	sp, sp, #4
   19854:	pop	{pc}		; (ldr pc, [sp], #4)
   19858:	str	fp, [sp, #-8]!
   1985c:	str	lr, [sp, #4]
   19860:	add	fp, sp, #4
   19864:	sub	sp, sp, #64	; 0x40
   19868:	str	r0, [fp, #-56]	; 0xffffffc8
   1986c:	str	r1, [fp, #-60]	; 0xffffffc4
   19870:	str	r2, [fp, #-64]	; 0xffffffc0
   19874:	str	r3, [fp, #-68]	; 0xffffffbc
   19878:	movw	r2, #62768	; 0xf530
   1987c:	movt	r2, #2
   19880:	sub	r3, fp, #52	; 0x34
   19884:	ldrd	r0, [r2]
   19888:	strd	r0, [r3]
   1988c:	ldrd	r0, [r2, #8]
   19890:	strd	r0, [r3, #8]
   19894:	ldrd	r0, [r2, #16]
   19898:	strd	r0, [r3, #16]
   1989c:	ldrd	r0, [r2, #24]
   198a0:	strd	r0, [r3, #24]
   198a4:	ldrd	r0, [r2, #32]
   198a8:	strd	r0, [r3, #32]
   198ac:	ldrd	r0, [r2, #40]	; 0x28
   198b0:	strd	r0, [r3, #40]	; 0x28
   198b4:	sub	r3, fp, #52	; 0x34
   198b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   198bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   198c0:	mov	r0, r3
   198c4:	bl	17440 <__assert_fail@plt+0x5f4c>
   198c8:	sub	r3, fp, #52	; 0x34
   198cc:	ldr	r2, [fp, #4]
   198d0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   198d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   198d8:	bl	190cc <__assert_fail@plt+0x7bd8>
   198dc:	mov	r3, r0
   198e0:	mov	r0, r3
   198e4:	sub	sp, fp, #4
   198e8:	ldr	fp, [sp]
   198ec:	add	sp, sp, #4
   198f0:	pop	{pc}		; (ldr pc, [sp], #4)
   198f4:	str	fp, [sp, #-8]!
   198f8:	str	lr, [sp, #4]
   198fc:	add	fp, sp, #4
   19900:	sub	sp, sp, #16
   19904:	str	r0, [fp, #-8]
   19908:	str	r1, [fp, #-12]
   1990c:	str	r2, [fp, #-16]
   19910:	ldr	r3, [fp, #-16]
   19914:	ldr	r2, [fp, #-12]
   19918:	ldr	r1, [fp, #-8]
   1991c:	mov	r0, #0
   19920:	bl	19804 <__assert_fail@plt+0x8310>
   19924:	mov	r3, r0
   19928:	mov	r0, r3
   1992c:	sub	sp, fp, #4
   19930:	ldr	fp, [sp]
   19934:	add	sp, sp, #4
   19938:	pop	{pc}		; (ldr pc, [sp], #4)
   1993c:	str	fp, [sp, #-8]!
   19940:	str	lr, [sp, #4]
   19944:	add	fp, sp, #4
   19948:	sub	sp, sp, #24
   1994c:	str	r0, [fp, #-8]
   19950:	str	r1, [fp, #-12]
   19954:	str	r2, [fp, #-16]
   19958:	str	r3, [fp, #-20]	; 0xffffffec
   1995c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19960:	str	r3, [sp]
   19964:	ldr	r3, [fp, #-16]
   19968:	ldr	r2, [fp, #-12]
   1996c:	ldr	r1, [fp, #-8]
   19970:	mov	r0, #0
   19974:	bl	19858 <__assert_fail@plt+0x8364>
   19978:	mov	r3, r0
   1997c:	mov	r0, r3
   19980:	sub	sp, fp, #4
   19984:	ldr	fp, [sp]
   19988:	add	sp, sp, #4
   1998c:	pop	{pc}		; (ldr pc, [sp], #4)
   19990:	str	fp, [sp, #-8]!
   19994:	str	lr, [sp, #4]
   19998:	add	fp, sp, #4
   1999c:	sub	sp, sp, #16
   199a0:	str	r0, [fp, #-8]
   199a4:	str	r1, [fp, #-12]
   199a8:	str	r2, [fp, #-16]
   199ac:	movw	r3, #61824	; 0xf180
   199b0:	movt	r3, #2
   199b4:	ldr	r2, [fp, #-16]
   199b8:	ldr	r1, [fp, #-12]
   199bc:	ldr	r0, [fp, #-8]
   199c0:	bl	190cc <__assert_fail@plt+0x7bd8>
   199c4:	mov	r3, r0
   199c8:	mov	r0, r3
   199cc:	sub	sp, fp, #4
   199d0:	ldr	fp, [sp]
   199d4:	add	sp, sp, #4
   199d8:	pop	{pc}		; (ldr pc, [sp], #4)
   199dc:	str	fp, [sp, #-8]!
   199e0:	str	lr, [sp, #4]
   199e4:	add	fp, sp, #4
   199e8:	sub	sp, sp, #8
   199ec:	str	r0, [fp, #-8]
   199f0:	str	r1, [fp, #-12]
   199f4:	ldr	r2, [fp, #-12]
   199f8:	ldr	r1, [fp, #-8]
   199fc:	mov	r0, #0
   19a00:	bl	19990 <__assert_fail@plt+0x849c>
   19a04:	mov	r3, r0
   19a08:	mov	r0, r3
   19a0c:	sub	sp, fp, #4
   19a10:	ldr	fp, [sp]
   19a14:	add	sp, sp, #4
   19a18:	pop	{pc}		; (ldr pc, [sp], #4)
   19a1c:	str	fp, [sp, #-8]!
   19a20:	str	lr, [sp, #4]
   19a24:	add	fp, sp, #4
   19a28:	sub	sp, sp, #8
   19a2c:	str	r0, [fp, #-8]
   19a30:	str	r1, [fp, #-12]
   19a34:	mvn	r2, #0
   19a38:	ldr	r1, [fp, #-12]
   19a3c:	ldr	r0, [fp, #-8]
   19a40:	bl	19990 <__assert_fail@plt+0x849c>
   19a44:	mov	r3, r0
   19a48:	mov	r0, r3
   19a4c:	sub	sp, fp, #4
   19a50:	ldr	fp, [sp]
   19a54:	add	sp, sp, #4
   19a58:	pop	{pc}		; (ldr pc, [sp], #4)
   19a5c:	str	fp, [sp, #-8]!
   19a60:	str	lr, [sp, #4]
   19a64:	add	fp, sp, #4
   19a68:	sub	sp, sp, #8
   19a6c:	str	r0, [fp, #-8]
   19a70:	ldr	r1, [fp, #-8]
   19a74:	mov	r0, #0
   19a78:	bl	19a1c <__assert_fail@plt+0x8528>
   19a7c:	mov	r3, r0
   19a80:	mov	r0, r3
   19a84:	sub	sp, fp, #4
   19a88:	ldr	fp, [sp]
   19a8c:	add	sp, sp, #4
   19a90:	pop	{pc}		; (ldr pc, [sp], #4)
   19a94:	str	fp, [sp, #-8]!
   19a98:	str	lr, [sp, #4]
   19a9c:	add	fp, sp, #4
   19aa0:	sub	sp, sp, #24
   19aa4:	str	r0, [fp, #-16]
   19aa8:	str	r1, [fp, #-20]	; 0xffffffec
   19aac:	str	r2, [fp, #-24]	; 0xffffffe8
   19ab0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ab4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ab8:	ldr	r0, [fp, #-16]
   19abc:	bl	11194 <read@plt>
   19ac0:	str	r0, [fp, #-8]
   19ac4:	ldr	r3, [fp, #-8]
   19ac8:	cmp	r3, #0
   19acc:	blt	19ad8 <__assert_fail@plt+0x85e4>
   19ad0:	ldr	r3, [fp, #-8]
   19ad4:	b	19b34 <__assert_fail@plt+0x8640>
   19ad8:	bl	113bc <__errno_location@plt>
   19adc:	mov	r3, r0
   19ae0:	ldr	r3, [r3]
   19ae4:	cmp	r3, #4
   19ae8:	beq	19b2c <__assert_fail@plt+0x8638>
   19aec:	bl	113bc <__errno_location@plt>
   19af0:	mov	r3, r0
   19af4:	ldr	r3, [r3]
   19af8:	cmp	r3, #22
   19afc:	bne	19b24 <__assert_fail@plt+0x8630>
   19b00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b04:	mov	r3, #0
   19b08:	movt	r3, #32752	; 0x7ff0
   19b0c:	cmp	r2, r3
   19b10:	bls	19b24 <__assert_fail@plt+0x8630>
   19b14:	mov	r3, #0
   19b18:	movt	r3, #32752	; 0x7ff0
   19b1c:	str	r3, [fp, #-24]	; 0xffffffe8
   19b20:	b	19b30 <__assert_fail@plt+0x863c>
   19b24:	ldr	r3, [fp, #-8]
   19b28:	b	19b34 <__assert_fail@plt+0x8640>
   19b2c:	nop	{0}
   19b30:	b	19ab0 <__assert_fail@plt+0x85bc>
   19b34:	mov	r0, r3
   19b38:	sub	sp, fp, #4
   19b3c:	ldr	fp, [sp]
   19b40:	add	sp, sp, #4
   19b44:	pop	{pc}		; (ldr pc, [sp], #4)
   19b48:	str	fp, [sp, #-8]!
   19b4c:	str	lr, [sp, #4]
   19b50:	add	fp, sp, #4
   19b54:	sub	sp, sp, #24
   19b58:	str	r0, [fp, #-16]
   19b5c:	str	r1, [fp, #-20]	; 0xffffffec
   19b60:	str	r2, [fp, #-24]	; 0xffffffe8
   19b64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b68:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b6c:	ldr	r0, [fp, #-16]
   19b70:	bl	113e0 <write@plt>
   19b74:	str	r0, [fp, #-8]
   19b78:	ldr	r3, [fp, #-8]
   19b7c:	cmp	r3, #0
   19b80:	blt	19b8c <__assert_fail@plt+0x8698>
   19b84:	ldr	r3, [fp, #-8]
   19b88:	b	19be8 <__assert_fail@plt+0x86f4>
   19b8c:	bl	113bc <__errno_location@plt>
   19b90:	mov	r3, r0
   19b94:	ldr	r3, [r3]
   19b98:	cmp	r3, #4
   19b9c:	beq	19be0 <__assert_fail@plt+0x86ec>
   19ba0:	bl	113bc <__errno_location@plt>
   19ba4:	mov	r3, r0
   19ba8:	ldr	r3, [r3]
   19bac:	cmp	r3, #22
   19bb0:	bne	19bd8 <__assert_fail@plt+0x86e4>
   19bb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19bb8:	mov	r3, #0
   19bbc:	movt	r3, #32752	; 0x7ff0
   19bc0:	cmp	r2, r3
   19bc4:	bls	19bd8 <__assert_fail@plt+0x86e4>
   19bc8:	mov	r3, #0
   19bcc:	movt	r3, #32752	; 0x7ff0
   19bd0:	str	r3, [fp, #-24]	; 0xffffffe8
   19bd4:	b	19be4 <__assert_fail@plt+0x86f0>
   19bd8:	ldr	r3, [fp, #-8]
   19bdc:	b	19be8 <__assert_fail@plt+0x86f4>
   19be0:	nop	{0}
   19be4:	b	19b64 <__assert_fail@plt+0x8670>
   19be8:	mov	r0, r3
   19bec:	sub	sp, fp, #4
   19bf0:	ldr	fp, [sp]
   19bf4:	add	sp, sp, #4
   19bf8:	pop	{pc}		; (ldr pc, [sp], #4)
   19bfc:	str	fp, [sp, #-8]!
   19c00:	str	lr, [sp, #4]
   19c04:	add	fp, sp, #4
   19c08:	sub	sp, sp, #40	; 0x28
   19c0c:	str	r0, [fp, #-40]	; 0xffffffd8
   19c10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19c14:	ldrb	r3, [r3]
   19c18:	sub	r3, r3, #48	; 0x30
   19c1c:	cmp	r3, #9
   19c20:	bhi	19c60 <__assert_fail@plt+0x876c>
   19c24:	sub	r3, fp, #32
   19c28:	mov	r2, #10
   19c2c:	mov	r1, r3
   19c30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19c34:	bl	1117c <strtol@plt>
   19c38:	str	r0, [fp, #-12]
   19c3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19c40:	ldrb	r3, [r3]
   19c44:	cmp	r3, #0
   19c48:	bne	19e14 <__assert_fail@plt+0x8920>
   19c4c:	ldr	r3, [fp, #-12]
   19c50:	cmp	r3, #64	; 0x40
   19c54:	bgt	19e14 <__assert_fail@plt+0x8920>
   19c58:	ldr	r3, [fp, #-12]
   19c5c:	b	19e18 <__assert_fail@plt+0x8924>
   19c60:	mov	r3, #0
   19c64:	str	r3, [fp, #-8]
   19c68:	b	19cdc <__assert_fail@plt+0x87e8>
   19c6c:	ldr	r2, [fp, #-8]
   19c70:	mov	r3, r2
   19c74:	lsl	r3, r3, #1
   19c78:	add	r3, r3, r2
   19c7c:	lsl	r3, r3, #2
   19c80:	movw	r2, #61872	; 0xf1b0
   19c84:	movt	r2, #2
   19c88:	add	r3, r3, r2
   19c8c:	add	r3, r3, #4
   19c90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19c94:	mov	r0, r3
   19c98:	bl	11170 <strcmp@plt>
   19c9c:	mov	r3, r0
   19ca0:	cmp	r3, #0
   19ca4:	bne	19cd0 <__assert_fail@plt+0x87dc>
   19ca8:	movw	r2, #61872	; 0xf1b0
   19cac:	movt	r2, #2
   19cb0:	ldr	r1, [fp, #-8]
   19cb4:	mov	r3, r1
   19cb8:	lsl	r3, r3, #1
   19cbc:	add	r3, r3, r1
   19cc0:	lsl	r3, r3, #2
   19cc4:	add	r3, r2, r3
   19cc8:	ldr	r3, [r3]
   19ccc:	b	19e18 <__assert_fail@plt+0x8924>
   19cd0:	ldr	r3, [fp, #-8]
   19cd4:	add	r3, r3, #1
   19cd8:	str	r3, [fp, #-8]
   19cdc:	ldr	r3, [fp, #-8]
   19ce0:	cmp	r3, #34	; 0x22
   19ce4:	bls	19c6c <__assert_fail@plt+0x8778>
   19ce8:	bl	114b8 <__libc_current_sigrtmin@plt>
   19cec:	str	r0, [fp, #-16]
   19cf0:	bl	11374 <__libc_current_sigrtmax@plt>
   19cf4:	str	r0, [fp, #-20]	; 0xffffffec
   19cf8:	ldr	r3, [fp, #-16]
   19cfc:	cmp	r3, #0
   19d00:	ble	19d84 <__assert_fail@plt+0x8890>
   19d04:	mov	r2, #5
   19d08:	movw	r1, #58912	; 0xe620
   19d0c:	movt	r1, #1
   19d10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19d14:	bl	114c4 <strncmp@plt>
   19d18:	mov	r3, r0
   19d1c:	cmp	r3, #0
   19d20:	bne	19d84 <__assert_fail@plt+0x8890>
   19d24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19d28:	add	r3, r3, #5
   19d2c:	sub	r1, fp, #36	; 0x24
   19d30:	mov	r2, #10
   19d34:	mov	r0, r3
   19d38:	bl	1117c <strtol@plt>
   19d3c:	str	r0, [fp, #-24]	; 0xffffffe8
   19d40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19d44:	ldrb	r3, [r3]
   19d48:	cmp	r3, #0
   19d4c:	bne	19e10 <__assert_fail@plt+0x891c>
   19d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d54:	cmp	r3, #0
   19d58:	blt	19e10 <__assert_fail@plt+0x891c>
   19d5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19d60:	ldr	r3, [fp, #-16]
   19d64:	sub	r3, r2, r3
   19d68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d6c:	cmp	r2, r3
   19d70:	bgt	19e10 <__assert_fail@plt+0x891c>
   19d74:	ldr	r2, [fp, #-16]
   19d78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d7c:	add	r3, r2, r3
   19d80:	b	19e18 <__assert_fail@plt+0x8924>
   19d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d88:	cmp	r3, #0
   19d8c:	ble	19e14 <__assert_fail@plt+0x8920>
   19d90:	mov	r2, #5
   19d94:	movw	r1, #58920	; 0xe628
   19d98:	movt	r1, #1
   19d9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19da0:	bl	114c4 <strncmp@plt>
   19da4:	mov	r3, r0
   19da8:	cmp	r3, #0
   19dac:	bne	19e14 <__assert_fail@plt+0x8920>
   19db0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19db4:	add	r3, r3, #5
   19db8:	sub	r1, fp, #36	; 0x24
   19dbc:	mov	r2, #10
   19dc0:	mov	r0, r3
   19dc4:	bl	1117c <strtol@plt>
   19dc8:	str	r0, [fp, #-28]	; 0xffffffe4
   19dcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19dd0:	ldrb	r3, [r3]
   19dd4:	cmp	r3, #0
   19dd8:	bne	19e14 <__assert_fail@plt+0x8920>
   19ddc:	ldr	r2, [fp, #-16]
   19de0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19de4:	sub	r3, r2, r3
   19de8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19dec:	cmp	r2, r3
   19df0:	blt	19e14 <__assert_fail@plt+0x8920>
   19df4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19df8:	cmp	r3, #0
   19dfc:	bgt	19e14 <__assert_fail@plt+0x8920>
   19e00:	ldr	r2, [fp, #-20]	; 0xffffffec
   19e04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19e08:	add	r3, r2, r3
   19e0c:	b	19e18 <__assert_fail@plt+0x8924>
   19e10:	nop	{0}
   19e14:	mvn	r3, #0
   19e18:	mov	r0, r3
   19e1c:	sub	sp, fp, #4
   19e20:	ldr	fp, [sp]
   19e24:	add	sp, sp, #4
   19e28:	pop	{pc}		; (ldr pc, [sp], #4)
   19e2c:	str	fp, [sp, #-8]!
   19e30:	str	lr, [sp, #4]
   19e34:	add	fp, sp, #4
   19e38:	sub	sp, sp, #8
   19e3c:	str	r0, [fp, #-8]
   19e40:	str	r1, [fp, #-12]
   19e44:	ldr	r0, [fp, #-8]
   19e48:	bl	19bfc <__assert_fail@plt+0x8708>
   19e4c:	mov	r2, r0
   19e50:	ldr	r3, [fp, #-12]
   19e54:	str	r2, [r3]
   19e58:	ldr	r3, [fp, #-12]
   19e5c:	ldr	r3, [r3]
   19e60:	cmp	r3, #0
   19e64:	bge	19e70 <__assert_fail@plt+0x897c>
   19e68:	mvn	r3, #0
   19e6c:	b	19e74 <__assert_fail@plt+0x8980>
   19e70:	mov	r3, #0
   19e74:	mov	r0, r3
   19e78:	sub	sp, fp, #4
   19e7c:	ldr	fp, [sp]
   19e80:	add	sp, sp, #4
   19e84:	pop	{pc}		; (ldr pc, [sp], #4)
   19e88:	str	fp, [sp, #-8]!
   19e8c:	str	lr, [sp, #4]
   19e90:	add	fp, sp, #4
   19e94:	sub	sp, sp, #32
   19e98:	str	r0, [fp, #-32]	; 0xffffffe0
   19e9c:	str	r1, [fp, #-36]	; 0xffffffdc
   19ea0:	mov	r3, #0
   19ea4:	str	r3, [fp, #-8]
   19ea8:	b	19f20 <__assert_fail@plt+0x8a2c>
   19eac:	movw	r2, #61872	; 0xf1b0
   19eb0:	movt	r2, #2
   19eb4:	ldr	r1, [fp, #-8]
   19eb8:	mov	r3, r1
   19ebc:	lsl	r3, r3, #1
   19ec0:	add	r3, r3, r1
   19ec4:	lsl	r3, r3, #2
   19ec8:	add	r3, r2, r3
   19ecc:	ldr	r3, [r3]
   19ed0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19ed4:	cmp	r2, r3
   19ed8:	bne	19f14 <__assert_fail@plt+0x8a20>
   19edc:	ldr	r2, [fp, #-8]
   19ee0:	mov	r3, r2
   19ee4:	lsl	r3, r3, #1
   19ee8:	add	r3, r3, r2
   19eec:	lsl	r3, r3, #2
   19ef0:	movw	r2, #61872	; 0xf1b0
   19ef4:	movt	r2, #2
   19ef8:	add	r3, r3, r2
   19efc:	add	r3, r3, #4
   19f00:	mov	r1, r3
   19f04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19f08:	bl	112a8 <strcpy@plt>
   19f0c:	mov	r3, #0
   19f10:	b	1a01c <__assert_fail@plt+0x8b28>
   19f14:	ldr	r3, [fp, #-8]
   19f18:	add	r3, r3, #1
   19f1c:	str	r3, [fp, #-8]
   19f20:	ldr	r3, [fp, #-8]
   19f24:	cmp	r3, #34	; 0x22
   19f28:	bls	19eac <__assert_fail@plt+0x89b8>
   19f2c:	bl	114b8 <__libc_current_sigrtmin@plt>
   19f30:	str	r0, [fp, #-16]
   19f34:	bl	11374 <__libc_current_sigrtmax@plt>
   19f38:	str	r0, [fp, #-20]	; 0xffffffec
   19f3c:	ldr	r2, [fp, #-16]
   19f40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f44:	cmp	r2, r3
   19f48:	bgt	19f5c <__assert_fail@plt+0x8a68>
   19f4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19f50:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f54:	cmp	r2, r3
   19f58:	ble	19f64 <__assert_fail@plt+0x8a70>
   19f5c:	mvn	r3, #0
   19f60:	b	1a01c <__assert_fail@plt+0x8b28>
   19f64:	ldr	r2, [fp, #-20]	; 0xffffffec
   19f68:	ldr	r3, [fp, #-16]
   19f6c:	sub	r3, r2, r3
   19f70:	lsr	r2, r3, #31
   19f74:	add	r3, r2, r3
   19f78:	asr	r3, r3, #1
   19f7c:	mov	r2, r3
   19f80:	ldr	r3, [fp, #-16]
   19f84:	add	r3, r2, r3
   19f88:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19f8c:	cmp	r2, r3
   19f90:	bgt	19fbc <__assert_fail@plt+0x8ac8>
   19f94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19f98:	movw	r3, #58912	; 0xe620
   19f9c:	movt	r3, #1
   19fa0:	ldr	r1, [r3]
   19fa4:	str	r1, [r2]
   19fa8:	ldrh	r3, [r3, #4]
   19fac:	strh	r3, [r2, #4]
   19fb0:	ldr	r3, [fp, #-16]
   19fb4:	str	r3, [fp, #-12]
   19fb8:	b	19fe0 <__assert_fail@plt+0x8aec>
   19fbc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19fc0:	movw	r3, #58920	; 0xe628
   19fc4:	movt	r3, #1
   19fc8:	ldr	r1, [r3]
   19fcc:	str	r1, [r2]
   19fd0:	ldrh	r3, [r3, #4]
   19fd4:	strh	r3, [r2, #4]
   19fd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19fdc:	str	r3, [fp, #-12]
   19fe0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19fe4:	ldr	r3, [fp, #-12]
   19fe8:	sub	r3, r2, r3
   19fec:	str	r3, [fp, #-24]	; 0xffffffe8
   19ff0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ff4:	cmp	r3, #0
   19ff8:	beq	1a018 <__assert_fail@plt+0x8b24>
   19ffc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a000:	add	r3, r3, #5
   1a004:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a008:	movw	r1, #58928	; 0xe630
   1a00c:	movt	r1, #1
   1a010:	mov	r0, r3
   1a014:	bl	11488 <sprintf@plt>
   1a018:	mov	r3, #0
   1a01c:	mov	r0, r3
   1a020:	sub	sp, fp, #4
   1a024:	ldr	fp, [sp]
   1a028:	add	sp, sp, #4
   1a02c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a030:	str	fp, [sp, #-8]!
   1a034:	str	lr, [sp, #4]
   1a038:	add	fp, sp, #4
   1a03c:	sub	sp, sp, #16
   1a040:	str	r0, [fp, #-16]
   1a044:	ldr	r3, [fp, #-16]
   1a048:	cmp	r3, #0
   1a04c:	blt	1a098 <__assert_fail@plt+0x8ba4>
   1a050:	ldr	r3, [fp, #-16]
   1a054:	cmp	r3, #2
   1a058:	bgt	1a098 <__assert_fail@plt+0x8ba4>
   1a05c:	ldr	r0, [fp, #-16]
   1a060:	bl	1c4c4 <__assert_fail@plt+0xafd0>
   1a064:	str	r0, [fp, #-8]
   1a068:	bl	113bc <__errno_location@plt>
   1a06c:	mov	r3, r0
   1a070:	ldr	r3, [r3]
   1a074:	str	r3, [fp, #-12]
   1a078:	ldr	r0, [fp, #-16]
   1a07c:	bl	114dc <close@plt>
   1a080:	bl	113bc <__errno_location@plt>
   1a084:	mov	r2, r0
   1a088:	ldr	r3, [fp, #-12]
   1a08c:	str	r3, [r2]
   1a090:	ldr	r3, [fp, #-8]
   1a094:	str	r3, [fp, #-16]
   1a098:	ldr	r3, [fp, #-16]
   1a09c:	mov	r0, r3
   1a0a0:	sub	sp, fp, #4
   1a0a4:	ldr	fp, [sp]
   1a0a8:	add	sp, sp, #4
   1a0ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1a0b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a0b4:	strd	r6, [sp, #8]
   1a0b8:	str	fp, [sp, #16]
   1a0bc:	str	lr, [sp, #20]
   1a0c0:	add	fp, sp, #20
   1a0c4:	sub	sp, sp, #48	; 0x30
   1a0c8:	str	r0, [fp, #-24]	; 0xffffffe8
   1a0cc:	str	r1, [fp, #-28]	; 0xffffffe4
   1a0d0:	str	r2, [fp, #-32]	; 0xffffffe0
   1a0d4:	str	r3, [fp, #-36]	; 0xffffffdc
   1a0d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a0dc:	cmp	r3, #0
   1a0e0:	beq	1a108 <__assert_fail@plt+0x8c14>
   1a0e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a0e8:	str	r3, [sp]
   1a0ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a0f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a0f4:	movw	r1, #58932	; 0xe634
   1a0f8:	movt	r1, #1
   1a0fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a100:	bl	113a4 <fprintf@plt>
   1a104:	b	1a120 <__assert_fail@plt+0x8c2c>
   1a108:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a10c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a110:	movw	r1, #58944	; 0xe640
   1a114:	movt	r1, #1
   1a118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a11c:	bl	113a4 <fprintf@plt>
   1a120:	movw	r0, #58952	; 0xe648
   1a124:	movt	r0, #1
   1a128:	bl	1135c <gettext@plt>
   1a12c:	mov	r2, r0
   1a130:	movw	r3, #2022	; 0x7e6
   1a134:	movw	r1, #59736	; 0xe958
   1a138:	movt	r1, #1
   1a13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a140:	bl	113a4 <fprintf@plt>
   1a144:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a148:	mov	r0, #10
   1a14c:	bl	11218 <fputc_unlocked@plt>
   1a150:	movw	r0, #58956	; 0xe64c
   1a154:	movt	r0, #1
   1a158:	bl	1135c <gettext@plt>
   1a15c:	mov	r3, r0
   1a160:	movw	r2, #59128	; 0xe6f8
   1a164:	movt	r2, #1
   1a168:	mov	r1, r3
   1a16c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a170:	bl	113a4 <fprintf@plt>
   1a174:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a178:	mov	r0, #10
   1a17c:	bl	11218 <fputc_unlocked@plt>
   1a180:	ldr	r3, [fp, #8]
   1a184:	cmp	r3, #9
   1a188:	ldrls	pc, [pc, r3, lsl #2]
   1a18c:	b	1a56c <__assert_fail@plt+0x9078>
   1a190:	andeq	sl, r1, r8, lsl r6
   1a194:			; <UNDEFINED> instruction: 0x0001a1b8
   1a198:	andeq	sl, r1, r0, ror #3
   1a19c:	andeq	sl, r1, r0, lsl r2
   1a1a0:	andeq	sl, r1, r4, asr r2
   1a1a4:			; <UNDEFINED> instruction: 0x0001a2b0
   1a1a8:	andeq	sl, r1, ip, lsl r3
   1a1ac:	muleq	r1, r8, r3
   1a1b0:	andeq	sl, r1, r4, lsr #8
   1a1b4:	andeq	sl, r1, r0, asr #9
   1a1b8:	movw	r0, #59164	; 0xe71c
   1a1bc:	movt	r0, #1
   1a1c0:	bl	1135c <gettext@plt>
   1a1c4:	mov	r1, r0
   1a1c8:	ldr	r3, [fp, #4]
   1a1cc:	ldr	r3, [r3]
   1a1d0:	mov	r2, r3
   1a1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1d8:	bl	113a4 <fprintf@plt>
   1a1dc:	b	1a61c <__assert_fail@plt+0x9128>
   1a1e0:	movw	r0, #59180	; 0xe72c
   1a1e4:	movt	r0, #1
   1a1e8:	bl	1135c <gettext@plt>
   1a1ec:	mov	r1, r0
   1a1f0:	ldr	r3, [fp, #4]
   1a1f4:	ldr	r2, [r3]
   1a1f8:	ldr	r3, [fp, #4]
   1a1fc:	add	r3, r3, #4
   1a200:	ldr	r3, [r3]
   1a204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a208:	bl	113a4 <fprintf@plt>
   1a20c:	b	1a61c <__assert_fail@plt+0x9128>
   1a210:	movw	r0, #59204	; 0xe744
   1a214:	movt	r0, #1
   1a218:	bl	1135c <gettext@plt>
   1a21c:	ldr	r3, [fp, #4]
   1a220:	ldr	r2, [r3]
   1a224:	ldr	r3, [fp, #4]
   1a228:	add	r3, r3, #4
   1a22c:	ldr	r1, [r3]
   1a230:	ldr	r3, [fp, #4]
   1a234:	add	r3, r3, #8
   1a238:	ldr	r3, [r3]
   1a23c:	str	r3, [sp]
   1a240:	mov	r3, r1
   1a244:	mov	r1, r0
   1a248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a24c:	bl	113a4 <fprintf@plt>
   1a250:	b	1a61c <__assert_fail@plt+0x9128>
   1a254:	movw	r0, #59232	; 0xe760
   1a258:	movt	r0, #1
   1a25c:	bl	1135c <gettext@plt>
   1a260:	mov	ip, r0
   1a264:	ldr	r3, [fp, #4]
   1a268:	ldr	r1, [r3]
   1a26c:	ldr	r3, [fp, #4]
   1a270:	add	r3, r3, #4
   1a274:	ldr	r0, [r3]
   1a278:	ldr	r3, [fp, #4]
   1a27c:	add	r3, r3, #8
   1a280:	ldr	r3, [r3]
   1a284:	ldr	r2, [fp, #4]
   1a288:	add	r2, r2, #12
   1a28c:	ldr	r2, [r2]
   1a290:	str	r2, [sp, #4]
   1a294:	str	r3, [sp]
   1a298:	mov	r3, r0
   1a29c:	mov	r2, r1
   1a2a0:	mov	r1, ip
   1a2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2a8:	bl	113a4 <fprintf@plt>
   1a2ac:	b	1a61c <__assert_fail@plt+0x9128>
   1a2b0:	movw	r0, #59264	; 0xe780
   1a2b4:	movt	r0, #1
   1a2b8:	bl	1135c <gettext@plt>
   1a2bc:	mov	lr, r0
   1a2c0:	ldr	r3, [fp, #4]
   1a2c4:	ldr	r0, [r3]
   1a2c8:	ldr	r3, [fp, #4]
   1a2cc:	add	r3, r3, #4
   1a2d0:	ldr	ip, [r3]
   1a2d4:	ldr	r3, [fp, #4]
   1a2d8:	add	r3, r3, #8
   1a2dc:	ldr	r3, [r3]
   1a2e0:	ldr	r2, [fp, #4]
   1a2e4:	add	r2, r2, #12
   1a2e8:	ldr	r2, [r2]
   1a2ec:	ldr	r1, [fp, #4]
   1a2f0:	add	r1, r1, #16
   1a2f4:	ldr	r1, [r1]
   1a2f8:	str	r1, [sp, #8]
   1a2fc:	str	r2, [sp, #4]
   1a300:	str	r3, [sp]
   1a304:	mov	r3, ip
   1a308:	mov	r2, r0
   1a30c:	mov	r1, lr
   1a310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a314:	bl	113a4 <fprintf@plt>
   1a318:	b	1a61c <__assert_fail@plt+0x9128>
   1a31c:	movw	r0, #59300	; 0xe7a4
   1a320:	movt	r0, #1
   1a324:	bl	1135c <gettext@plt>
   1a328:	mov	r4, r0
   1a32c:	ldr	r3, [fp, #4]
   1a330:	ldr	ip, [r3]
   1a334:	ldr	r3, [fp, #4]
   1a338:	add	r3, r3, #4
   1a33c:	ldr	lr, [r3]
   1a340:	ldr	r3, [fp, #4]
   1a344:	add	r3, r3, #8
   1a348:	ldr	r3, [r3]
   1a34c:	ldr	r2, [fp, #4]
   1a350:	add	r2, r2, #12
   1a354:	ldr	r2, [r2]
   1a358:	ldr	r1, [fp, #4]
   1a35c:	add	r1, r1, #16
   1a360:	ldr	r1, [r1]
   1a364:	ldr	r0, [fp, #4]
   1a368:	add	r0, r0, #20
   1a36c:	ldr	r0, [r0]
   1a370:	str	r0, [sp, #12]
   1a374:	str	r1, [sp, #8]
   1a378:	str	r2, [sp, #4]
   1a37c:	str	r3, [sp]
   1a380:	mov	r3, lr
   1a384:	mov	r2, ip
   1a388:	mov	r1, r4
   1a38c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a390:	bl	113a4 <fprintf@plt>
   1a394:	b	1a61c <__assert_fail@plt+0x9128>
   1a398:	movw	r0, #59340	; 0xe7cc
   1a39c:	movt	r0, #1
   1a3a0:	bl	1135c <gettext@plt>
   1a3a4:	mov	r5, r0
   1a3a8:	ldr	r3, [fp, #4]
   1a3ac:	ldr	lr, [r3]
   1a3b0:	ldr	r3, [fp, #4]
   1a3b4:	add	r3, r3, #4
   1a3b8:	ldr	r4, [r3]
   1a3bc:	ldr	r3, [fp, #4]
   1a3c0:	add	r3, r3, #8
   1a3c4:	ldr	r3, [r3]
   1a3c8:	ldr	r2, [fp, #4]
   1a3cc:	add	r2, r2, #12
   1a3d0:	ldr	r2, [r2]
   1a3d4:	ldr	r1, [fp, #4]
   1a3d8:	add	r1, r1, #16
   1a3dc:	ldr	r1, [r1]
   1a3e0:	ldr	r0, [fp, #4]
   1a3e4:	add	r0, r0, #20
   1a3e8:	ldr	r0, [r0]
   1a3ec:	ldr	ip, [fp, #4]
   1a3f0:	add	ip, ip, #24
   1a3f4:	ldr	ip, [ip]
   1a3f8:	str	ip, [sp, #16]
   1a3fc:	str	r0, [sp, #12]
   1a400:	str	r1, [sp, #8]
   1a404:	str	r2, [sp, #4]
   1a408:	str	r3, [sp]
   1a40c:	mov	r3, r4
   1a410:	mov	r2, lr
   1a414:	mov	r1, r5
   1a418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a41c:	bl	113a4 <fprintf@plt>
   1a420:	b	1a61c <__assert_fail@plt+0x9128>
   1a424:	movw	r0, #59384	; 0xe7f8
   1a428:	movt	r0, #1
   1a42c:	bl	1135c <gettext@plt>
   1a430:	mov	r6, r0
   1a434:	ldr	r3, [fp, #4]
   1a438:	ldr	r4, [r3]
   1a43c:	ldr	r3, [fp, #4]
   1a440:	add	r3, r3, #4
   1a444:	ldr	r5, [r3]
   1a448:	ldr	r3, [fp, #4]
   1a44c:	add	r3, r3, #8
   1a450:	ldr	r3, [r3]
   1a454:	ldr	r2, [fp, #4]
   1a458:	add	r2, r2, #12
   1a45c:	ldr	r2, [r2]
   1a460:	ldr	r1, [fp, #4]
   1a464:	add	r1, r1, #16
   1a468:	ldr	r1, [r1]
   1a46c:	ldr	r0, [fp, #4]
   1a470:	add	r0, r0, #20
   1a474:	ldr	r0, [r0]
   1a478:	ldr	ip, [fp, #4]
   1a47c:	add	ip, ip, #24
   1a480:	ldr	ip, [ip]
   1a484:	ldr	lr, [fp, #4]
   1a488:	add	lr, lr, #28
   1a48c:	ldr	lr, [lr]
   1a490:	str	lr, [sp, #20]
   1a494:	str	ip, [sp, #16]
   1a498:	str	r0, [sp, #12]
   1a49c:	str	r1, [sp, #8]
   1a4a0:	str	r2, [sp, #4]
   1a4a4:	str	r3, [sp]
   1a4a8:	mov	r3, r5
   1a4ac:	mov	r2, r4
   1a4b0:	mov	r1, r6
   1a4b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4b8:	bl	113a4 <fprintf@plt>
   1a4bc:	b	1a61c <__assert_fail@plt+0x9128>
   1a4c0:	movw	r0, #59432	; 0xe828
   1a4c4:	movt	r0, #1
   1a4c8:	bl	1135c <gettext@plt>
   1a4cc:	mov	r7, r0
   1a4d0:	ldr	r3, [fp, #4]
   1a4d4:	ldr	r5, [r3]
   1a4d8:	ldr	r3, [fp, #4]
   1a4dc:	add	r3, r3, #4
   1a4e0:	ldr	r6, [r3]
   1a4e4:	ldr	r3, [fp, #4]
   1a4e8:	add	r3, r3, #8
   1a4ec:	ldr	r3, [r3]
   1a4f0:	ldr	r2, [fp, #4]
   1a4f4:	add	r2, r2, #12
   1a4f8:	ldr	r2, [r2]
   1a4fc:	ldr	r1, [fp, #4]
   1a500:	add	r1, r1, #16
   1a504:	ldr	r1, [r1]
   1a508:	ldr	r0, [fp, #4]
   1a50c:	add	r0, r0, #20
   1a510:	ldr	r0, [r0]
   1a514:	ldr	ip, [fp, #4]
   1a518:	add	ip, ip, #24
   1a51c:	ldr	ip, [ip]
   1a520:	ldr	lr, [fp, #4]
   1a524:	add	lr, lr, #28
   1a528:	ldr	lr, [lr]
   1a52c:	ldr	r4, [fp, #4]
   1a530:	add	r4, r4, #32
   1a534:	ldr	r4, [r4]
   1a538:	str	r4, [sp, #24]
   1a53c:	str	lr, [sp, #20]
   1a540:	str	ip, [sp, #16]
   1a544:	str	r0, [sp, #12]
   1a548:	str	r1, [sp, #8]
   1a54c:	str	r2, [sp, #4]
   1a550:	str	r3, [sp]
   1a554:	mov	r3, r6
   1a558:	mov	r2, r5
   1a55c:	mov	r1, r7
   1a560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a564:	bl	113a4 <fprintf@plt>
   1a568:	b	1a61c <__assert_fail@plt+0x9128>
   1a56c:	movw	r0, #59484	; 0xe85c
   1a570:	movt	r0, #1
   1a574:	bl	1135c <gettext@plt>
   1a578:	mov	r7, r0
   1a57c:	ldr	r3, [fp, #4]
   1a580:	ldr	r5, [r3]
   1a584:	ldr	r3, [fp, #4]
   1a588:	add	r3, r3, #4
   1a58c:	ldr	r6, [r3]
   1a590:	ldr	r3, [fp, #4]
   1a594:	add	r3, r3, #8
   1a598:	ldr	r3, [r3]
   1a59c:	ldr	r2, [fp, #4]
   1a5a0:	add	r2, r2, #12
   1a5a4:	ldr	r2, [r2]
   1a5a8:	ldr	r1, [fp, #4]
   1a5ac:	add	r1, r1, #16
   1a5b0:	ldr	r1, [r1]
   1a5b4:	ldr	r0, [fp, #4]
   1a5b8:	add	r0, r0, #20
   1a5bc:	ldr	r0, [r0]
   1a5c0:	ldr	ip, [fp, #4]
   1a5c4:	add	ip, ip, #24
   1a5c8:	ldr	ip, [ip]
   1a5cc:	ldr	lr, [fp, #4]
   1a5d0:	add	lr, lr, #28
   1a5d4:	ldr	lr, [lr]
   1a5d8:	ldr	r4, [fp, #4]
   1a5dc:	add	r4, r4, #32
   1a5e0:	ldr	r4, [r4]
   1a5e4:	str	r4, [sp, #24]
   1a5e8:	str	lr, [sp, #20]
   1a5ec:	str	ip, [sp, #16]
   1a5f0:	str	r0, [sp, #12]
   1a5f4:	str	r1, [sp, #8]
   1a5f8:	str	r2, [sp, #4]
   1a5fc:	str	r3, [sp]
   1a600:	mov	r3, r6
   1a604:	mov	r2, r5
   1a608:	mov	r1, r7
   1a60c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a610:	bl	113a4 <fprintf@plt>
   1a614:	b	1a61c <__assert_fail@plt+0x9128>
   1a618:	nop	{0}
   1a61c:	nop	{0}
   1a620:	sub	sp, fp, #20
   1a624:	ldrd	r4, [sp]
   1a628:	ldrd	r6, [sp, #8]
   1a62c:	ldr	fp, [sp, #16]
   1a630:	add	sp, sp, #20
   1a634:	pop	{pc}		; (ldr pc, [sp], #4)
   1a638:	str	fp, [sp, #-8]!
   1a63c:	str	lr, [sp, #4]
   1a640:	add	fp, sp, #4
   1a644:	sub	sp, sp, #32
   1a648:	str	r0, [fp, #-16]
   1a64c:	str	r1, [fp, #-20]	; 0xffffffec
   1a650:	str	r2, [fp, #-24]	; 0xffffffe8
   1a654:	str	r3, [fp, #-28]	; 0xffffffe4
   1a658:	mov	r3, #0
   1a65c:	str	r3, [fp, #-8]
   1a660:	b	1a670 <__assert_fail@plt+0x917c>
   1a664:	ldr	r3, [fp, #-8]
   1a668:	add	r3, r3, #1
   1a66c:	str	r3, [fp, #-8]
   1a670:	ldr	r3, [fp, #-8]
   1a674:	lsl	r3, r3, #2
   1a678:	ldr	r2, [fp, #4]
   1a67c:	add	r3, r2, r3
   1a680:	ldr	r3, [r3]
   1a684:	cmp	r3, #0
   1a688:	bne	1a664 <__assert_fail@plt+0x9170>
   1a68c:	ldr	r3, [fp, #-8]
   1a690:	str	r3, [sp, #4]
   1a694:	ldr	r3, [fp, #4]
   1a698:	str	r3, [sp]
   1a69c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a6a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a6a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a6a8:	ldr	r0, [fp, #-16]
   1a6ac:	bl	1a0b0 <__assert_fail@plt+0x8bbc>
   1a6b0:	nop	{0}
   1a6b4:	sub	sp, fp, #4
   1a6b8:	ldr	fp, [sp]
   1a6bc:	add	sp, sp, #4
   1a6c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a6c4:	str	fp, [sp, #-8]!
   1a6c8:	str	lr, [sp, #4]
   1a6cc:	add	fp, sp, #4
   1a6d0:	sub	sp, sp, #72	; 0x48
   1a6d4:	str	r0, [fp, #-56]	; 0xffffffc8
   1a6d8:	str	r1, [fp, #-60]	; 0xffffffc4
   1a6dc:	str	r2, [fp, #-64]	; 0xffffffc0
   1a6e0:	str	r3, [fp, #-68]	; 0xffffffbc
   1a6e4:	mov	r3, #0
   1a6e8:	str	r3, [fp, #-8]
   1a6ec:	b	1a6fc <__assert_fail@plt+0x9208>
   1a6f0:	ldr	r3, [fp, #-8]
   1a6f4:	add	r3, r3, #1
   1a6f8:	str	r3, [fp, #-8]
   1a6fc:	ldr	r3, [fp, #-8]
   1a700:	cmp	r3, #9
   1a704:	bhi	1a748 <__assert_fail@plt+0x9254>
   1a708:	ldr	r3, [fp, #4]
   1a70c:	add	r2, r3, #4
   1a710:	str	r2, [fp, #4]
   1a714:	ldr	r2, [r3]
   1a718:	ldr	r3, [fp, #-8]
   1a71c:	lsl	r3, r3, #2
   1a720:	sub	r1, fp, #4
   1a724:	add	r3, r1, r3
   1a728:	str	r2, [r3, #-44]	; 0xffffffd4
   1a72c:	ldr	r3, [fp, #-8]
   1a730:	lsl	r3, r3, #2
   1a734:	sub	r2, fp, #4
   1a738:	add	r3, r2, r3
   1a73c:	ldr	r3, [r3, #-44]	; 0xffffffd4
   1a740:	cmp	r3, #0
   1a744:	bne	1a6f0 <__assert_fail@plt+0x91fc>
   1a748:	ldr	r3, [fp, #-8]
   1a74c:	str	r3, [sp, #4]
   1a750:	sub	r3, fp, #48	; 0x30
   1a754:	str	r3, [sp]
   1a758:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a75c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a760:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a764:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a768:	bl	1a0b0 <__assert_fail@plt+0x8bbc>
   1a76c:	nop	{0}
   1a770:	sub	sp, fp, #4
   1a774:	ldr	fp, [sp]
   1a778:	add	sp, sp, #4
   1a77c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a780:	push	{r3}		; (str r3, [sp, #-4]!)
   1a784:	str	fp, [sp, #-8]!
   1a788:	str	lr, [sp, #4]
   1a78c:	add	fp, sp, #4
   1a790:	sub	sp, sp, #36	; 0x24
   1a794:	str	r0, [fp, #-20]	; 0xffffffec
   1a798:	str	r1, [fp, #-24]	; 0xffffffe8
   1a79c:	str	r2, [fp, #-28]	; 0xffffffe4
   1a7a0:	add	r3, fp, #8
   1a7a4:	str	r3, [fp, #-12]
   1a7a8:	ldr	r3, [fp, #-12]
   1a7ac:	str	r3, [sp]
   1a7b0:	ldr	r3, [fp, #4]
   1a7b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a7b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a7c0:	bl	1a6c4 <__assert_fail@plt+0x91d0>
   1a7c4:	nop	{0}
   1a7c8:	sub	sp, fp, #4
   1a7cc:	ldr	fp, [sp]
   1a7d0:	ldr	lr, [sp, #4]
   1a7d4:	add	sp, sp, #8
   1a7d8:	add	sp, sp, #4
   1a7dc:	bx	lr
   1a7e0:	str	fp, [sp, #-8]!
   1a7e4:	str	lr, [sp, #4]
   1a7e8:	add	fp, sp, #4
   1a7ec:	movw	r3, #62316	; 0xf36c
   1a7f0:	movt	r3, #2
   1a7f4:	ldr	r3, [r3]
   1a7f8:	mov	r1, r3
   1a7fc:	mov	r0, #10
   1a800:	bl	11218 <fputc_unlocked@plt>
   1a804:	movw	r0, #59544	; 0xe898
   1a808:	movt	r0, #1
   1a80c:	bl	1135c <gettext@plt>
   1a810:	mov	r3, r0
   1a814:	movw	r1, #59564	; 0xe8ac
   1a818:	movt	r1, #1
   1a81c:	mov	r0, r3
   1a820:	bl	11188 <printf@plt>
   1a824:	movw	r0, #59588	; 0xe8c4
   1a828:	movt	r0, #1
   1a82c:	bl	1135c <gettext@plt>
   1a830:	mov	r3, r0
   1a834:	movw	r2, #59608	; 0xe8d8
   1a838:	movt	r2, #1
   1a83c:	movw	r1, #59648	; 0xe900
   1a840:	movt	r1, #1
   1a844:	mov	r0, r3
   1a848:	bl	11188 <printf@plt>
   1a84c:	movw	r0, #59664	; 0xe910
   1a850:	movt	r0, #1
   1a854:	bl	1135c <gettext@plt>
   1a858:	mov	r3, r0
   1a85c:	movw	r1, #59704	; 0xe938
   1a860:	movt	r1, #1
   1a864:	mov	r0, r3
   1a868:	bl	11188 <printf@plt>
   1a86c:	nop	{0}
   1a870:	sub	sp, fp, #4
   1a874:	ldr	fp, [sp]
   1a878:	add	sp, sp, #4
   1a87c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a880:	str	fp, [sp, #-8]!
   1a884:	str	lr, [sp, #4]
   1a888:	add	fp, sp, #4
   1a88c:	sub	sp, sp, #16
   1a890:	str	r0, [fp, #-16]
   1a894:	str	r1, [fp, #-20]	; 0xffffffec
   1a898:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a89c:	ldr	r0, [fp, #-16]
   1a8a0:	bl	1bf4c <__assert_fail@plt+0xaa58>
   1a8a4:	mov	r3, r0
   1a8a8:	str	r3, [fp, #-8]
   1a8ac:	ldr	r3, [fp, #-8]
   1a8b0:	cmp	r3, #0
   1a8b4:	bne	1a8bc <__assert_fail@plt+0x93c8>
   1a8b8:	bl	1b1c8 <__assert_fail@plt+0x9cd4>
   1a8bc:	ldr	r3, [fp, #-8]
   1a8c0:	mov	r0, r3
   1a8c4:	sub	sp, fp, #4
   1a8c8:	ldr	fp, [sp]
   1a8cc:	add	sp, sp, #4
   1a8d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8d4:	str	fp, [sp, #-8]!
   1a8d8:	str	lr, [sp, #4]
   1a8dc:	add	fp, sp, #4
   1a8e0:	sub	sp, sp, #16
   1a8e4:	str	r0, [fp, #-8]
   1a8e8:	str	r1, [fp, #-12]
   1a8ec:	str	r2, [fp, #-16]
   1a8f0:	ldr	r2, [fp, #-16]
   1a8f4:	ldr	r1, [fp, #-12]
   1a8f8:	ldr	r0, [fp, #-8]
   1a8fc:	bl	1aab8 <__assert_fail@plt+0x95c4>
   1a900:	mov	r3, r0
   1a904:	mov	r0, r3
   1a908:	sub	sp, fp, #4
   1a90c:	ldr	fp, [sp]
   1a910:	add	sp, sp, #4
   1a914:	pop	{pc}		; (ldr pc, [sp], #4)
   1a918:	str	fp, [sp, #-8]!
   1a91c:	str	lr, [sp, #4]
   1a920:	add	fp, sp, #4
   1a924:	sub	sp, sp, #8
   1a928:	str	r0, [fp, #-8]
   1a92c:	ldr	r3, [fp, #-8]
   1a930:	cmp	r3, #0
   1a934:	bne	1a93c <__assert_fail@plt+0x9448>
   1a938:	bl	1b1c8 <__assert_fail@plt+0x9cd4>
   1a93c:	ldr	r3, [fp, #-8]
   1a940:	mov	r0, r3
   1a944:	sub	sp, fp, #4
   1a948:	ldr	fp, [sp]
   1a94c:	add	sp, sp, #4
   1a950:	pop	{pc}		; (ldr pc, [sp], #4)
   1a954:	str	fp, [sp, #-8]!
   1a958:	str	lr, [sp, #4]
   1a95c:	add	fp, sp, #4
   1a960:	sub	sp, sp, #8
   1a964:	str	r0, [fp, #-8]
   1a968:	ldr	r0, [fp, #-8]
   1a96c:	bl	1bdd4 <__assert_fail@plt+0xa8e0>
   1a970:	mov	r3, r0
   1a974:	mov	r0, r3
   1a978:	bl	1a918 <__assert_fail@plt+0x9424>
   1a97c:	mov	r3, r0
   1a980:	mov	r0, r3
   1a984:	sub	sp, fp, #4
   1a988:	ldr	fp, [sp]
   1a98c:	add	sp, sp, #4
   1a990:	pop	{pc}		; (ldr pc, [sp], #4)
   1a994:	str	fp, [sp, #-8]!
   1a998:	str	lr, [sp, #4]
   1a99c:	add	fp, sp, #4
   1a9a0:	sub	sp, sp, #8
   1a9a4:	str	r0, [fp, #-8]
   1a9a8:	ldr	r0, [fp, #-8]
   1a9ac:	bl	1c1b8 <__assert_fail@plt+0xacc4>
   1a9b0:	mov	r3, r0
   1a9b4:	mov	r0, r3
   1a9b8:	bl	1a918 <__assert_fail@plt+0x9424>
   1a9bc:	mov	r3, r0
   1a9c0:	mov	r0, r3
   1a9c4:	sub	sp, fp, #4
   1a9c8:	ldr	fp, [sp]
   1a9cc:	add	sp, sp, #4
   1a9d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9d4:	str	fp, [sp, #-8]!
   1a9d8:	str	lr, [sp, #4]
   1a9dc:	add	fp, sp, #4
   1a9e0:	sub	sp, sp, #8
   1a9e4:	str	r0, [fp, #-8]
   1a9e8:	ldr	r0, [fp, #-8]
   1a9ec:	bl	1a954 <__assert_fail@plt+0x9460>
   1a9f0:	mov	r3, r0
   1a9f4:	mov	r0, r3
   1a9f8:	sub	sp, fp, #4
   1a9fc:	ldr	fp, [sp]
   1aa00:	add	sp, sp, #4
   1aa04:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa08:	str	fp, [sp, #-8]!
   1aa0c:	str	lr, [sp, #4]
   1aa10:	add	fp, sp, #4
   1aa14:	sub	sp, sp, #16
   1aa18:	str	r0, [fp, #-16]
   1aa1c:	str	r1, [fp, #-20]	; 0xffffffec
   1aa20:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aa24:	ldr	r0, [fp, #-16]
   1aa28:	bl	1be64 <__assert_fail@plt+0xa970>
   1aa2c:	str	r0, [fp, #-8]
   1aa30:	ldr	r3, [fp, #-8]
   1aa34:	cmp	r3, #0
   1aa38:	bne	1aa58 <__assert_fail@plt+0x9564>
   1aa3c:	ldr	r3, [fp, #-16]
   1aa40:	cmp	r3, #0
   1aa44:	beq	1aa54 <__assert_fail@plt+0x9560>
   1aa48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa4c:	cmp	r3, #0
   1aa50:	beq	1aa58 <__assert_fail@plt+0x9564>
   1aa54:	bl	1b1c8 <__assert_fail@plt+0x9cd4>
   1aa58:	ldr	r3, [fp, #-8]
   1aa5c:	mov	r0, r3
   1aa60:	sub	sp, fp, #4
   1aa64:	ldr	fp, [sp]
   1aa68:	add	sp, sp, #4
   1aa6c:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa70:	str	fp, [sp, #-8]!
   1aa74:	str	lr, [sp, #4]
   1aa78:	add	fp, sp, #4
   1aa7c:	sub	sp, sp, #8
   1aa80:	str	r0, [fp, #-8]
   1aa84:	str	r1, [fp, #-12]
   1aa88:	ldr	r1, [fp, #-12]
   1aa8c:	ldr	r0, [fp, #-8]
   1aa90:	bl	1c1f0 <__assert_fail@plt+0xacfc>
   1aa94:	mov	r3, r0
   1aa98:	mov	r0, r3
   1aa9c:	bl	1a918 <__assert_fail@plt+0x9424>
   1aaa0:	mov	r3, r0
   1aaa4:	mov	r0, r3
   1aaa8:	sub	sp, fp, #4
   1aaac:	ldr	fp, [sp]
   1aab0:	add	sp, sp, #4
   1aab4:	pop	{pc}		; (ldr pc, [sp], #4)
   1aab8:	str	fp, [sp, #-8]!
   1aabc:	str	lr, [sp, #4]
   1aac0:	add	fp, sp, #4
   1aac4:	sub	sp, sp, #24
   1aac8:	str	r0, [fp, #-16]
   1aacc:	str	r1, [fp, #-20]	; 0xffffffec
   1aad0:	str	r2, [fp, #-24]	; 0xffffffe8
   1aad4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aad8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aadc:	ldr	r0, [fp, #-16]
   1aae0:	bl	1c420 <__assert_fail@plt+0xaf2c>
   1aae4:	str	r0, [fp, #-8]
   1aae8:	ldr	r3, [fp, #-8]
   1aaec:	cmp	r3, #0
   1aaf0:	bne	1ab1c <__assert_fail@plt+0x9628>
   1aaf4:	ldr	r3, [fp, #-16]
   1aaf8:	cmp	r3, #0
   1aafc:	beq	1ab18 <__assert_fail@plt+0x9624>
   1ab00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab04:	cmp	r3, #0
   1ab08:	beq	1ab1c <__assert_fail@plt+0x9628>
   1ab0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab10:	cmp	r3, #0
   1ab14:	beq	1ab1c <__assert_fail@plt+0x9628>
   1ab18:	bl	1b1c8 <__assert_fail@plt+0x9cd4>
   1ab1c:	ldr	r3, [fp, #-8]
   1ab20:	mov	r0, r3
   1ab24:	sub	sp, fp, #4
   1ab28:	ldr	fp, [sp]
   1ab2c:	add	sp, sp, #4
   1ab30:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab34:	str	fp, [sp, #-8]!
   1ab38:	str	lr, [sp, #4]
   1ab3c:	add	fp, sp, #4
   1ab40:	sub	sp, sp, #16
   1ab44:	str	r0, [fp, #-8]
   1ab48:	str	r1, [fp, #-12]
   1ab4c:	str	r2, [fp, #-16]
   1ab50:	ldr	r2, [fp, #-16]
   1ab54:	ldr	r1, [fp, #-12]
   1ab58:	ldr	r0, [fp, #-8]
   1ab5c:	bl	1c290 <__assert_fail@plt+0xad9c>
   1ab60:	mov	r3, r0
   1ab64:	mov	r0, r3
   1ab68:	bl	1a918 <__assert_fail@plt+0x9424>
   1ab6c:	mov	r3, r0
   1ab70:	mov	r0, r3
   1ab74:	sub	sp, fp, #4
   1ab78:	ldr	fp, [sp]
   1ab7c:	add	sp, sp, #4
   1ab80:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab84:	str	fp, [sp, #-8]!
   1ab88:	str	lr, [sp, #4]
   1ab8c:	add	fp, sp, #4
   1ab90:	sub	sp, sp, #8
   1ab94:	str	r0, [fp, #-8]
   1ab98:	str	r1, [fp, #-12]
   1ab9c:	ldr	r2, [fp, #-12]
   1aba0:	ldr	r1, [fp, #-8]
   1aba4:	mov	r0, #0
   1aba8:	bl	1aab8 <__assert_fail@plt+0x95c4>
   1abac:	mov	r3, r0
   1abb0:	mov	r0, r3
   1abb4:	sub	sp, fp, #4
   1abb8:	ldr	fp, [sp]
   1abbc:	add	sp, sp, #4
   1abc0:	pop	{pc}		; (ldr pc, [sp], #4)
   1abc4:	str	fp, [sp, #-8]!
   1abc8:	str	lr, [sp, #4]
   1abcc:	add	fp, sp, #4
   1abd0:	sub	sp, sp, #8
   1abd4:	str	r0, [fp, #-8]
   1abd8:	str	r1, [fp, #-12]
   1abdc:	ldr	r2, [fp, #-12]
   1abe0:	ldr	r1, [fp, #-8]
   1abe4:	mov	r0, #0
   1abe8:	bl	1ab34 <__assert_fail@plt+0x9640>
   1abec:	mov	r3, r0
   1abf0:	mov	r0, r3
   1abf4:	sub	sp, fp, #4
   1abf8:	ldr	fp, [sp]
   1abfc:	add	sp, sp, #4
   1ac00:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac04:	str	fp, [sp, #-8]!
   1ac08:	str	lr, [sp, #4]
   1ac0c:	add	fp, sp, #4
   1ac10:	sub	sp, sp, #8
   1ac14:	str	r0, [fp, #-8]
   1ac18:	str	r1, [fp, #-12]
   1ac1c:	mov	r2, #1
   1ac20:	ldr	r1, [fp, #-12]
   1ac24:	ldr	r0, [fp, #-8]
   1ac28:	bl	1ac44 <__assert_fail@plt+0x9750>
   1ac2c:	mov	r3, r0
   1ac30:	mov	r0, r3
   1ac34:	sub	sp, fp, #4
   1ac38:	ldr	fp, [sp]
   1ac3c:	add	sp, sp, #4
   1ac40:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac44:	str	fp, [sp, #-8]!
   1ac48:	str	lr, [sp, #4]
   1ac4c:	add	fp, sp, #4
   1ac50:	sub	sp, sp, #24
   1ac54:	str	r0, [fp, #-16]
   1ac58:	str	r1, [fp, #-20]	; 0xffffffec
   1ac5c:	str	r2, [fp, #-24]	; 0xffffffe8
   1ac60:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac64:	ldr	r3, [r3]
   1ac68:	str	r3, [fp, #-8]
   1ac6c:	ldr	r3, [fp, #-16]
   1ac70:	cmp	r3, #0
   1ac74:	bne	1acbc <__assert_fail@plt+0x97c8>
   1ac78:	ldr	r3, [fp, #-8]
   1ac7c:	cmp	r3, #0
   1ac80:	bne	1acf8 <__assert_fail@plt+0x9804>
   1ac84:	mov	r2, #64	; 0x40
   1ac88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac8c:	udiv	r3, r2, r3
   1ac90:	str	r3, [fp, #-8]
   1ac94:	ldr	r3, [fp, #-8]
   1ac98:	cmp	r3, #0
   1ac9c:	moveq	r3, #1
   1aca0:	movne	r3, #0
   1aca4:	uxtb	r3, r3
   1aca8:	mov	r2, r3
   1acac:	ldr	r3, [fp, #-8]
   1acb0:	add	r3, r2, r3
   1acb4:	str	r3, [fp, #-8]
   1acb8:	b	1acf8 <__assert_fail@plt+0x9804>
   1acbc:	ldr	r2, [fp, #-8]
   1acc0:	ldr	r3, [fp, #-8]
   1acc4:	lsr	r3, r3, #1
   1acc8:	add	r3, r3, #1
   1accc:	mov	r1, #0
   1acd0:	adds	r3, r2, r3
   1acd4:	bcc	1acdc <__assert_fail@plt+0x97e8>
   1acd8:	mov	r1, #1
   1acdc:	str	r3, [fp, #-8]
   1ace0:	mov	r3, r1
   1ace4:	and	r3, r3, #1
   1ace8:	uxtb	r3, r3
   1acec:	cmp	r3, #0
   1acf0:	beq	1acf8 <__assert_fail@plt+0x9804>
   1acf4:	bl	1b1c8 <__assert_fail@plt+0x9cd4>
   1acf8:	ldr	r3, [fp, #-8]
   1acfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ad00:	mov	r1, r3
   1ad04:	ldr	r0, [fp, #-16]
   1ad08:	bl	1aab8 <__assert_fail@plt+0x95c4>
   1ad0c:	str	r0, [fp, #-16]
   1ad10:	ldr	r2, [fp, #-8]
   1ad14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ad18:	str	r2, [r3]
   1ad1c:	ldr	r3, [fp, #-16]
   1ad20:	mov	r0, r3
   1ad24:	sub	sp, fp, #4
   1ad28:	ldr	fp, [sp]
   1ad2c:	add	sp, sp, #4
   1ad30:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad34:	str	fp, [sp, #-8]!
   1ad38:	str	lr, [sp, #4]
   1ad3c:	add	fp, sp, #4
   1ad40:	sub	sp, sp, #32
   1ad44:	str	r0, [fp, #-24]	; 0xffffffe8
   1ad48:	str	r1, [fp, #-28]	; 0xffffffe4
   1ad4c:	str	r2, [fp, #-32]	; 0xffffffe0
   1ad50:	str	r3, [fp, #-36]	; 0xffffffdc
   1ad54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ad58:	ldr	r3, [r3]
   1ad5c:	str	r3, [fp, #-8]
   1ad60:	ldr	r3, [fp, #-8]
   1ad64:	asr	r3, r3, #1
   1ad68:	mov	r1, #0
   1ad6c:	ldr	r2, [fp, #-8]
   1ad70:	adds	r3, r2, r3
   1ad74:	bvc	1ad7c <__assert_fail@plt+0x9888>
   1ad78:	mov	r1, #1
   1ad7c:	str	r3, [fp, #-16]
   1ad80:	mov	r3, r1
   1ad84:	and	r3, r3, #1
   1ad88:	uxtb	r3, r3
   1ad8c:	cmp	r3, #0
   1ad90:	beq	1ad9c <__assert_fail@plt+0x98a8>
   1ad94:	mvn	r3, #-2147483648	; 0x80000000
   1ad98:	str	r3, [fp, #-16]
   1ad9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ada0:	cmp	r3, #0
   1ada4:	blt	1adc0 <__assert_fail@plt+0x98cc>
   1ada8:	ldr	r3, [fp, #-16]
   1adac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1adb0:	cmp	r2, r3
   1adb4:	bge	1adc0 <__assert_fail@plt+0x98cc>
   1adb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1adbc:	str	r3, [fp, #-16]
   1adc0:	ldr	r2, [fp, #-16]
   1adc4:	mov	lr, #0
   1adc8:	ldr	r3, [fp, #4]
   1adcc:	smull	r2, r3, r2, r3
   1add0:	mov	r0, #0
   1add4:	mov	r1, #0
   1add8:	mov	r0, r3
   1addc:	asr	r1, r3, #31
   1ade0:	asr	ip, r2, #31
   1ade4:	cmp	ip, r0
   1ade8:	beq	1adf0 <__assert_fail@plt+0x98fc>
   1adec:	mov	lr, #1
   1adf0:	mov	r3, r2
   1adf4:	str	r3, [fp, #-20]	; 0xffffffec
   1adf8:	mov	r3, lr
   1adfc:	and	r3, r3, #1
   1ae00:	uxtb	r3, r3
   1ae04:	cmp	r3, #0
   1ae08:	beq	1ae14 <__assert_fail@plt+0x9920>
   1ae0c:	mvn	r3, #-2147483648	; 0x80000000
   1ae10:	b	1ae2c <__assert_fail@plt+0x9938>
   1ae14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae18:	cmp	r3, #63	; 0x3f
   1ae1c:	bgt	1ae28 <__assert_fail@plt+0x9934>
   1ae20:	mov	r3, #64	; 0x40
   1ae24:	b	1ae2c <__assert_fail@plt+0x9938>
   1ae28:	mov	r3, #0
   1ae2c:	str	r3, [fp, #-12]
   1ae30:	ldr	r3, [fp, #-12]
   1ae34:	cmp	r3, #0
   1ae38:	beq	1ae70 <__assert_fail@plt+0x997c>
   1ae3c:	ldr	r2, [fp, #-12]
   1ae40:	ldr	r3, [fp, #4]
   1ae44:	sdiv	r3, r2, r3
   1ae48:	str	r3, [fp, #-16]
   1ae4c:	ldr	r3, [fp, #-12]
   1ae50:	ldr	r2, [fp, #4]
   1ae54:	sdiv	r2, r3, r2
   1ae58:	ldr	r1, [fp, #4]
   1ae5c:	mul	r2, r1, r2
   1ae60:	sub	r3, r3, r2
   1ae64:	ldr	r2, [fp, #-12]
   1ae68:	sub	r3, r2, r3
   1ae6c:	str	r3, [fp, #-20]	; 0xffffffec
   1ae70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae74:	cmp	r3, #0
   1ae78:	bne	1ae88 <__assert_fail@plt+0x9994>
   1ae7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ae80:	mov	r2, #0
   1ae84:	str	r2, [r3]
   1ae88:	ldr	r2, [fp, #-16]
   1ae8c:	ldr	r3, [fp, #-8]
   1ae90:	sub	r3, r2, r3
   1ae94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ae98:	cmp	r2, r3
   1ae9c:	ble	1af3c <__assert_fail@plt+0x9a48>
   1aea0:	mov	r1, #0
   1aea4:	ldr	r2, [fp, #-8]
   1aea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aeac:	adds	r3, r2, r3
   1aeb0:	bvc	1aeb8 <__assert_fail@plt+0x99c4>
   1aeb4:	mov	r1, #1
   1aeb8:	str	r3, [fp, #-16]
   1aebc:	mov	r3, r1
   1aec0:	and	r3, r3, #1
   1aec4:	uxtb	r3, r3
   1aec8:	cmp	r3, #0
   1aecc:	bne	1af38 <__assert_fail@plt+0x9a44>
   1aed0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1aed4:	cmp	r3, #0
   1aed8:	blt	1aeec <__assert_fail@plt+0x99f8>
   1aedc:	ldr	r3, [fp, #-16]
   1aee0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1aee4:	cmp	r2, r3
   1aee8:	blt	1af38 <__assert_fail@plt+0x9a44>
   1aeec:	ldr	r2, [fp, #-16]
   1aef0:	mov	lr, #0
   1aef4:	ldr	r3, [fp, #4]
   1aef8:	smull	r2, r3, r2, r3
   1aefc:	mov	r0, #0
   1af00:	mov	r1, #0
   1af04:	mov	r0, r3
   1af08:	asr	r1, r3, #31
   1af0c:	asr	ip, r2, #31
   1af10:	cmp	ip, r0
   1af14:	beq	1af1c <__assert_fail@plt+0x9a28>
   1af18:	mov	lr, #1
   1af1c:	mov	r3, r2
   1af20:	str	r3, [fp, #-20]	; 0xffffffec
   1af24:	mov	r3, lr
   1af28:	and	r3, r3, #1
   1af2c:	uxtb	r3, r3
   1af30:	cmp	r3, #0
   1af34:	beq	1af3c <__assert_fail@plt+0x9a48>
   1af38:	bl	1b1c8 <__assert_fail@plt+0x9cd4>
   1af3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1af40:	mov	r1, r3
   1af44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af48:	bl	1aa08 <__assert_fail@plt+0x9514>
   1af4c:	str	r0, [fp, #-24]	; 0xffffffe8
   1af50:	ldr	r2, [fp, #-16]
   1af54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af58:	str	r2, [r3]
   1af5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1af60:	mov	r0, r3
   1af64:	sub	sp, fp, #4
   1af68:	ldr	fp, [sp]
   1af6c:	add	sp, sp, #4
   1af70:	pop	{pc}		; (ldr pc, [sp], #4)
   1af74:	str	fp, [sp, #-8]!
   1af78:	str	lr, [sp, #4]
   1af7c:	add	fp, sp, #4
   1af80:	sub	sp, sp, #8
   1af84:	str	r0, [fp, #-8]
   1af88:	mov	r1, #1
   1af8c:	ldr	r0, [fp, #-8]
   1af90:	bl	1afe4 <__assert_fail@plt+0x9af0>
   1af94:	mov	r3, r0
   1af98:	mov	r0, r3
   1af9c:	sub	sp, fp, #4
   1afa0:	ldr	fp, [sp]
   1afa4:	add	sp, sp, #4
   1afa8:	pop	{pc}		; (ldr pc, [sp], #4)
   1afac:	str	fp, [sp, #-8]!
   1afb0:	str	lr, [sp, #4]
   1afb4:	add	fp, sp, #4
   1afb8:	sub	sp, sp, #8
   1afbc:	str	r0, [fp, #-8]
   1afc0:	mov	r1, #1
   1afc4:	ldr	r0, [fp, #-8]
   1afc8:	bl	1b02c <__assert_fail@plt+0x9b38>
   1afcc:	mov	r3, r0
   1afd0:	mov	r0, r3
   1afd4:	sub	sp, fp, #4
   1afd8:	ldr	fp, [sp]
   1afdc:	add	sp, sp, #4
   1afe0:	pop	{pc}		; (ldr pc, [sp], #4)
   1afe4:	str	fp, [sp, #-8]!
   1afe8:	str	lr, [sp, #4]
   1afec:	add	fp, sp, #4
   1aff0:	sub	sp, sp, #8
   1aff4:	str	r0, [fp, #-8]
   1aff8:	str	r1, [fp, #-12]
   1affc:	ldr	r1, [fp, #-12]
   1b000:	ldr	r0, [fp, #-8]
   1b004:	bl	1bd04 <__assert_fail@plt+0xa810>
   1b008:	mov	r3, r0
   1b00c:	mov	r0, r3
   1b010:	bl	1a918 <__assert_fail@plt+0x9424>
   1b014:	mov	r3, r0
   1b018:	mov	r0, r3
   1b01c:	sub	sp, fp, #4
   1b020:	ldr	fp, [sp]
   1b024:	add	sp, sp, #4
   1b028:	pop	{pc}		; (ldr pc, [sp], #4)
   1b02c:	str	fp, [sp, #-8]!
   1b030:	str	lr, [sp, #4]
   1b034:	add	fp, sp, #4
   1b038:	sub	sp, sp, #8
   1b03c:	str	r0, [fp, #-8]
   1b040:	str	r1, [fp, #-12]
   1b044:	ldr	r1, [fp, #-12]
   1b048:	ldr	r0, [fp, #-8]
   1b04c:	bl	1c24c <__assert_fail@plt+0xad58>
   1b050:	mov	r3, r0
   1b054:	mov	r0, r3
   1b058:	bl	1a918 <__assert_fail@plt+0x9424>
   1b05c:	mov	r3, r0
   1b060:	mov	r0, r3
   1b064:	sub	sp, fp, #4
   1b068:	ldr	fp, [sp]
   1b06c:	add	sp, sp, #4
   1b070:	pop	{pc}		; (ldr pc, [sp], #4)
   1b074:	str	fp, [sp, #-8]!
   1b078:	str	lr, [sp, #4]
   1b07c:	add	fp, sp, #4
   1b080:	sub	sp, sp, #8
   1b084:	str	r0, [fp, #-8]
   1b088:	str	r1, [fp, #-12]
   1b08c:	ldr	r0, [fp, #-12]
   1b090:	bl	1a954 <__assert_fail@plt+0x9460>
   1b094:	mov	r3, r0
   1b098:	ldr	r2, [fp, #-12]
   1b09c:	ldr	r1, [fp, #-8]
   1b0a0:	mov	r0, r3
   1b0a4:	bl	111dc <memcpy@plt>
   1b0a8:	mov	r3, r0
   1b0ac:	mov	r0, r3
   1b0b0:	sub	sp, fp, #4
   1b0b4:	ldr	fp, [sp]
   1b0b8:	add	sp, sp, #4
   1b0bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0c0:	str	fp, [sp, #-8]!
   1b0c4:	str	lr, [sp, #4]
   1b0c8:	add	fp, sp, #4
   1b0cc:	sub	sp, sp, #8
   1b0d0:	str	r0, [fp, #-8]
   1b0d4:	str	r1, [fp, #-12]
   1b0d8:	ldr	r0, [fp, #-12]
   1b0dc:	bl	1a994 <__assert_fail@plt+0x94a0>
   1b0e0:	mov	r3, r0
   1b0e4:	mov	r0, r3
   1b0e8:	ldr	r3, [fp, #-12]
   1b0ec:	mov	r2, r3
   1b0f0:	ldr	r1, [fp, #-8]
   1b0f4:	bl	111dc <memcpy@plt>
   1b0f8:	mov	r3, r0
   1b0fc:	mov	r0, r3
   1b100:	sub	sp, fp, #4
   1b104:	ldr	fp, [sp]
   1b108:	add	sp, sp, #4
   1b10c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b110:	str	fp, [sp, #-8]!
   1b114:	str	lr, [sp, #4]
   1b118:	add	fp, sp, #4
   1b11c:	sub	sp, sp, #16
   1b120:	str	r0, [fp, #-16]
   1b124:	str	r1, [fp, #-20]	; 0xffffffec
   1b128:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b12c:	add	r3, r3, #1
   1b130:	mov	r0, r3
   1b134:	bl	1a994 <__assert_fail@plt+0x94a0>
   1b138:	mov	r3, r0
   1b13c:	str	r3, [fp, #-8]
   1b140:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b144:	ldr	r2, [fp, #-8]
   1b148:	add	r3, r2, r3
   1b14c:	mov	r2, #0
   1b150:	strb	r2, [r3]
   1b154:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b158:	mov	r2, r3
   1b15c:	ldr	r1, [fp, #-16]
   1b160:	ldr	r0, [fp, #-8]
   1b164:	bl	111dc <memcpy@plt>
   1b168:	mov	r3, r0
   1b16c:	mov	r0, r3
   1b170:	sub	sp, fp, #4
   1b174:	ldr	fp, [sp]
   1b178:	add	sp, sp, #4
   1b17c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b180:	str	fp, [sp, #-8]!
   1b184:	str	lr, [sp, #4]
   1b188:	add	fp, sp, #4
   1b18c:	sub	sp, sp, #8
   1b190:	str	r0, [fp, #-8]
   1b194:	ldr	r0, [fp, #-8]
   1b198:	bl	11368 <strlen@plt>
   1b19c:	mov	r3, r0
   1b1a0:	add	r3, r3, #1
   1b1a4:	mov	r1, r3
   1b1a8:	ldr	r0, [fp, #-8]
   1b1ac:	bl	1b074 <__assert_fail@plt+0x9b80>
   1b1b0:	mov	r3, r0
   1b1b4:	mov	r0, r3
   1b1b8:	sub	sp, fp, #4
   1b1bc:	ldr	fp, [sp]
   1b1c0:	add	sp, sp, #4
   1b1c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1c8:	strd	r4, [sp, #-16]!
   1b1cc:	str	fp, [sp, #8]
   1b1d0:	str	lr, [sp, #12]
   1b1d4:	add	fp, sp, #12
   1b1d8:	movw	r3, #61804	; 0xf16c
   1b1dc:	movt	r3, #2
   1b1e0:	ldr	r4, [r3]
   1b1e4:	movw	r0, #59784	; 0xe988
   1b1e8:	movt	r0, #1
   1b1ec:	bl	1135c <gettext@plt>
   1b1f0:	mov	r3, r0
   1b1f4:	movw	r2, #59804	; 0xe99c
   1b1f8:	movt	r2, #1
   1b1fc:	mov	r1, #0
   1b200:	mov	r0, r4
   1b204:	bl	112d8 <error@plt>
   1b208:	bl	114d0 <abort@plt>
   1b20c:	push	{fp}		; (str fp, [sp, #-4]!)
   1b210:	add	fp, sp, #0
   1b214:	nop	{0}
   1b218:	add	sp, fp, #0
   1b21c:	pop	{fp}		; (ldr fp, [sp], #4)
   1b220:	bx	lr
   1b224:	str	fp, [sp, #-8]!
   1b228:	str	lr, [sp, #4]
   1b22c:	add	fp, sp, #4
   1b230:	sub	sp, sp, #8
   1b234:	str	r0, [fp, #-8]
   1b238:	str	r1, [fp, #-12]
   1b23c:	ldr	r1, [fp, #-12]
   1b240:	ldr	r0, [fp, #-8]
   1b244:	bl	1bfb8 <__assert_fail@plt+0xaac4>
   1b248:	mov	r3, r0
   1b24c:	cmp	r3, #0
   1b250:	bge	1b258 <__assert_fail@plt+0x9d64>
   1b254:	bl	1b20c <__assert_fail@plt+0x9d18>
   1b258:	nop	{0}
   1b25c:	sub	sp, fp, #4
   1b260:	ldr	fp, [sp]
   1b264:	add	sp, sp, #4
   1b268:	pop	{pc}		; (ldr pc, [sp], #4)
   1b26c:	strd	r4, [sp, #-16]!
   1b270:	str	fp, [sp, #8]
   1b274:	str	lr, [sp, #12]
   1b278:	add	fp, sp, #12
   1b27c:	sub	sp, sp, #40	; 0x28
   1b280:	str	r0, [fp, #-32]	; 0xffffffe0
   1b284:	str	r1, [fp, #-36]	; 0xffffffdc
   1b288:	strd	r2, [fp, #-44]	; 0xffffffd4
   1b28c:	sub	r2, fp, #28
   1b290:	ldr	r3, [fp, #12]
   1b294:	str	r3, [sp]
   1b298:	mov	r3, r2
   1b29c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b2a0:	mov	r1, #0
   1b2a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b2a8:	bl	1b6b0 <__assert_fail@plt+0xa1bc>
   1b2ac:	str	r0, [fp, #-16]
   1b2b0:	ldr	r3, [fp, #-16]
   1b2b4:	cmp	r3, #0
   1b2b8:	bne	1b32c <__assert_fail@plt+0x9e38>
   1b2bc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1b2c0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1b2c4:	cmp	r1, r3
   1b2c8:	cmpeq	r0, r2
   1b2cc:	bhi	1b2e4 <__assert_fail@plt+0x9df0>
   1b2d0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1b2d4:	ldrd	r0, [fp, #4]
   1b2d8:	cmp	r1, r3
   1b2dc:	cmpeq	r0, r2
   1b2e0:	bcs	1b368 <__assert_fail@plt+0x9e74>
   1b2e4:	mov	r3, #1
   1b2e8:	str	r3, [fp, #-16]
   1b2ec:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1b2f0:	mvn	r0, #-1073741824	; 0xc0000000
   1b2f4:	mov	r1, #0
   1b2f8:	cmp	r3, r1
   1b2fc:	cmpeq	r2, r0
   1b300:	bls	1b318 <__assert_fail@plt+0x9e24>
   1b304:	bl	113bc <__errno_location@plt>
   1b308:	mov	r2, r0
   1b30c:	mov	r3, #75	; 0x4b
   1b310:	str	r3, [r2]
   1b314:	b	1b368 <__assert_fail@plt+0x9e74>
   1b318:	bl	113bc <__errno_location@plt>
   1b31c:	mov	r2, r0
   1b320:	mov	r3, #34	; 0x22
   1b324:	str	r3, [r2]
   1b328:	b	1b368 <__assert_fail@plt+0x9e74>
   1b32c:	ldr	r3, [fp, #-16]
   1b330:	cmp	r3, #1
   1b334:	bne	1b34c <__assert_fail@plt+0x9e58>
   1b338:	bl	113bc <__errno_location@plt>
   1b33c:	mov	r2, r0
   1b340:	mov	r3, #75	; 0x4b
   1b344:	str	r3, [r2]
   1b348:	b	1b368 <__assert_fail@plt+0x9e74>
   1b34c:	ldr	r3, [fp, #-16]
   1b350:	cmp	r3, #3
   1b354:	bne	1b368 <__assert_fail@plt+0x9e74>
   1b358:	bl	113bc <__errno_location@plt>
   1b35c:	mov	r2, r0
   1b360:	mov	r3, #0
   1b364:	str	r3, [r2]
   1b368:	ldr	r3, [fp, #-16]
   1b36c:	cmp	r3, #0
   1b370:	beq	1b3dc <__assert_fail@plt+0x9ee8>
   1b374:	ldr	r3, [fp, #20]
   1b378:	cmp	r3, #0
   1b37c:	beq	1b388 <__assert_fail@plt+0x9e94>
   1b380:	ldr	r4, [fp, #20]
   1b384:	b	1b38c <__assert_fail@plt+0x9e98>
   1b388:	mov	r4, #1
   1b38c:	bl	113bc <__errno_location@plt>
   1b390:	mov	r3, r0
   1b394:	ldr	r3, [r3]
   1b398:	cmp	r3, #22
   1b39c:	beq	1b3b0 <__assert_fail@plt+0x9ebc>
   1b3a0:	bl	113bc <__errno_location@plt>
   1b3a4:	mov	r3, r0
   1b3a8:	ldr	r5, [r3]
   1b3ac:	b	1b3b4 <__assert_fail@plt+0x9ec0>
   1b3b0:	mov	r5, #0
   1b3b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b3b8:	bl	19a5c <__assert_fail@plt+0x8568>
   1b3bc:	mov	r3, r0
   1b3c0:	str	r3, [sp]
   1b3c4:	ldr	r3, [fp, #16]
   1b3c8:	movw	r2, #59808	; 0xe9a0
   1b3cc:	movt	r2, #1
   1b3d0:	mov	r1, r5
   1b3d4:	mov	r0, r4
   1b3d8:	bl	112d8 <error@plt>
   1b3dc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1b3e0:	mov	r0, r2
   1b3e4:	mov	r1, r3
   1b3e8:	sub	sp, fp, #12
   1b3ec:	ldrd	r4, [sp]
   1b3f0:	ldr	fp, [sp, #8]
   1b3f4:	add	sp, sp, #12
   1b3f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3fc:	str	fp, [sp, #-8]!
   1b400:	str	lr, [sp, #4]
   1b404:	add	fp, sp, #4
   1b408:	sub	sp, sp, #40	; 0x28
   1b40c:	str	r0, [fp, #-8]
   1b410:	strd	r2, [fp, #-20]	; 0xffffffec
   1b414:	ldr	r3, [fp, #20]
   1b418:	str	r3, [sp, #16]
   1b41c:	ldr	r3, [fp, #16]
   1b420:	str	r3, [sp, #12]
   1b424:	ldr	r3, [fp, #12]
   1b428:	str	r3, [sp, #8]
   1b42c:	ldrd	r2, [fp, #4]
   1b430:	strd	r2, [sp]
   1b434:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1b438:	mov	r1, #10
   1b43c:	ldr	r0, [fp, #-8]
   1b440:	bl	1b26c <__assert_fail@plt+0x9d78>
   1b444:	mov	r2, r0
   1b448:	mov	r3, r1
   1b44c:	mov	r0, r2
   1b450:	mov	r1, r3
   1b454:	sub	sp, fp, #4
   1b458:	ldr	fp, [sp]
   1b45c:	add	sp, sp, #4
   1b460:	pop	{pc}		; (ldr pc, [sp], #4)
   1b464:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1b468:	strd	r6, [sp, #8]
   1b46c:	strd	r8, [sp, #16]
   1b470:	str	fp, [sp, #24]
   1b474:	add	fp, sp, #24
   1b478:	sub	sp, sp, #44	; 0x2c
   1b47c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b480:	str	r1, [fp, #-44]	; 0xffffffd4
   1b484:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b488:	ldrd	r4, [r3]
   1b48c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b490:	mov	r6, r3
   1b494:	asr	r7, r6, #31
   1b498:	mov	r2, #0
   1b49c:	mov	r3, #0
   1b4a0:	strd	r2, [fp, #-60]	; 0xffffffc4
   1b4a4:	cmp	r6, #0
   1b4a8:	sbcs	r3, r7, #0
   1b4ac:	bge	1b4c4 <__assert_fail@plt+0x9fd0>
   1b4b0:	orrs	r3, r4, r5
   1b4b4:	beq	1b4c4 <__assert_fail@plt+0x9fd0>
   1b4b8:	mov	r2, #1
   1b4bc:	mov	r3, #0
   1b4c0:	strd	r2, [fp, #-60]	; 0xffffffc4
   1b4c4:	mov	r0, #0
   1b4c8:	mov	r1, #0
   1b4cc:	mov	r0, r7
   1b4d0:	mov	r1, #0
   1b4d4:	mov	r2, #0
   1b4d8:	mov	r3, #0
   1b4dc:	mov	r2, r5
   1b4e0:	mov	r3, #0
   1b4e4:	cmp	r0, #0
   1b4e8:	bne	1b50c <__assert_fail@plt+0xa018>
   1b4ec:	cmp	r2, #0
   1b4f0:	bne	1b500 <__assert_fail@plt+0xa00c>
   1b4f4:	umull	r2, r3, r6, r4
   1b4f8:	strd	r2, [fp, #-52]	; 0xffffffcc
   1b4fc:	b	1b5d8 <__assert_fail@plt+0xa0e4>
   1b500:	mov	r3, r2
   1b504:	mov	r2, r6
   1b508:	b	1b51c <__assert_fail@plt+0xa028>
   1b50c:	cmp	r2, #0
   1b510:	bne	1b594 <__assert_fail@plt+0xa0a0>
   1b514:	mov	r3, r0
   1b518:	mov	r2, r4
   1b51c:	umull	r8, r9, r6, r4
   1b520:	umull	r2, r3, r2, r3
   1b524:	mov	r0, r2
   1b528:	mov	r1, r3
   1b52c:	mov	r2, #0
   1b530:	mov	r3, #0
   1b534:	mov	r2, r9
   1b538:	mov	r3, #0
   1b53c:	adds	ip, r0, r2
   1b540:	str	ip, [fp, #-68]	; 0xffffffbc
   1b544:	adc	r3, r1, r3
   1b548:	str	r3, [fp, #-64]	; 0xffffffc0
   1b54c:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   1b550:	mov	r2, #0
   1b554:	mov	r3, #0
   1b558:	mov	r2, r1
   1b55c:	asr	r3, r1, #31
   1b560:	cmp	r2, #0
   1b564:	bne	1b5b0 <__assert_fail@plt+0xa0bc>
   1b568:	mov	r2, #0
   1b56c:	mov	r3, #0
   1b570:	mov	r3, r0
   1b574:	mov	r2, #0
   1b578:	mov	r0, r8
   1b57c:	mov	r1, #0
   1b580:	orr	ip, r2, r0
   1b584:	str	ip, [fp, #-52]	; 0xffffffcc
   1b588:	orr	r3, r3, r1
   1b58c:	str	r3, [fp, #-48]	; 0xffffffd0
   1b590:	b	1b5d8 <__assert_fail@plt+0xa0e4>
   1b594:	mul	r2, r4, r7
   1b598:	mul	r3, r6, r5
   1b59c:	add	r1, r2, r3
   1b5a0:	umull	r2, r3, r6, r4
   1b5a4:	add	r1, r1, r3
   1b5a8:	mov	r3, r1
   1b5ac:	strd	r2, [fp, #-52]	; 0xffffffcc
   1b5b0:	mul	r2, r4, r7
   1b5b4:	mul	r3, r6, r5
   1b5b8:	add	r1, r2, r3
   1b5bc:	umull	r2, r3, r6, r4
   1b5c0:	add	r1, r1, r3
   1b5c4:	mov	r3, r1
   1b5c8:	strd	r2, [fp, #-52]	; 0xffffffcc
   1b5cc:	mov	r2, #1
   1b5d0:	mov	r3, #0
   1b5d4:	strd	r2, [fp, #-60]	; 0xffffffc4
   1b5d8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1b5dc:	strd	r2, [fp, #-36]	; 0xffffffdc
   1b5e0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1b5e4:	mov	r3, r2
   1b5e8:	and	r3, r3, #1
   1b5ec:	uxtb	r3, r3
   1b5f0:	cmp	r3, #0
   1b5f4:	beq	1b610 <__assert_fail@plt+0xa11c>
   1b5f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b5fc:	mvn	r2, #0
   1b600:	mvn	r3, #0
   1b604:	strd	r2, [r1]
   1b608:	mov	r3, #1
   1b60c:	b	1b620 <__assert_fail@plt+0xa12c>
   1b610:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b614:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b618:	strd	r2, [r1]
   1b61c:	mov	r3, #0
   1b620:	mov	r0, r3
   1b624:	sub	sp, fp, #24
   1b628:	ldrd	r4, [sp]
   1b62c:	ldrd	r6, [sp, #8]
   1b630:	ldrd	r8, [sp, #16]
   1b634:	ldr	fp, [sp, #24]
   1b638:	add	sp, sp, #28
   1b63c:	bx	lr
   1b640:	str	fp, [sp, #-8]!
   1b644:	str	lr, [sp, #4]
   1b648:	add	fp, sp, #4
   1b64c:	sub	sp, sp, #24
   1b650:	str	r0, [fp, #-16]
   1b654:	str	r1, [fp, #-20]	; 0xffffffec
   1b658:	str	r2, [fp, #-24]	; 0xffffffe8
   1b65c:	mov	r3, #0
   1b660:	str	r3, [fp, #-8]
   1b664:	b	1b684 <__assert_fail@plt+0xa190>
   1b668:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b66c:	ldr	r0, [fp, #-16]
   1b670:	bl	1b464 <__assert_fail@plt+0x9f70>
   1b674:	mov	r2, r0
   1b678:	ldr	r3, [fp, #-8]
   1b67c:	orr	r3, r3, r2
   1b680:	str	r3, [fp, #-8]
   1b684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b688:	sub	r2, r3, #1
   1b68c:	str	r2, [fp, #-24]	; 0xffffffe8
   1b690:	cmp	r3, #0
   1b694:	bne	1b668 <__assert_fail@plt+0xa174>
   1b698:	ldr	r3, [fp, #-8]
   1b69c:	mov	r0, r3
   1b6a0:	sub	sp, fp, #4
   1b6a4:	ldr	fp, [sp]
   1b6a8:	add	sp, sp, #4
   1b6ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6b0:	str	fp, [sp, #-8]!
   1b6b4:	str	lr, [sp, #4]
   1b6b8:	add	fp, sp, #4
   1b6bc:	sub	sp, sp, #56	; 0x38
   1b6c0:	str	r0, [fp, #-48]	; 0xffffffd0
   1b6c4:	str	r1, [fp, #-52]	; 0xffffffcc
   1b6c8:	str	r2, [fp, #-56]	; 0xffffffc8
   1b6cc:	str	r3, [fp, #-60]	; 0xffffffc4
   1b6d0:	mov	r3, #0
   1b6d4:	str	r3, [fp, #-8]
   1b6d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b6dc:	cmp	r3, #0
   1b6e0:	blt	1b6f0 <__assert_fail@plt+0xa1fc>
   1b6e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b6e8:	cmp	r3, #36	; 0x24
   1b6ec:	ble	1b710 <__assert_fail@plt+0xa21c>
   1b6f0:	movw	r3, #59872	; 0xe9e0
   1b6f4:	movt	r3, #1
   1b6f8:	mov	r2, #85	; 0x55
   1b6fc:	movw	r1, #59816	; 0xe9a8
   1b700:	movt	r1, #1
   1b704:	movw	r0, #59832	; 0xe9b8
   1b708:	movt	r0, #1
   1b70c:	bl	114f4 <__assert_fail@plt>
   1b710:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b714:	cmp	r3, #0
   1b718:	bne	1b724 <__assert_fail@plt+0xa230>
   1b71c:	sub	r3, fp, #36	; 0x24
   1b720:	b	1b728 <__assert_fail@plt+0xa234>
   1b724:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b728:	str	r3, [fp, #-32]	; 0xffffffe0
   1b72c:	bl	113bc <__errno_location@plt>
   1b730:	mov	r2, r0
   1b734:	mov	r3, #0
   1b738:	str	r3, [r2]
   1b73c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b740:	str	r3, [fp, #-12]
   1b744:	ldr	r3, [fp, #-12]
   1b748:	ldrb	r3, [r3]
   1b74c:	strb	r3, [fp, #-13]
   1b750:	b	1b76c <__assert_fail@plt+0xa278>
   1b754:	ldr	r3, [fp, #-12]
   1b758:	add	r3, r3, #1
   1b75c:	str	r3, [fp, #-12]
   1b760:	ldr	r3, [fp, #-12]
   1b764:	ldrb	r3, [r3]
   1b768:	strb	r3, [fp, #-13]
   1b76c:	bl	11344 <__ctype_b_loc@plt>
   1b770:	mov	r3, r0
   1b774:	ldr	r2, [r3]
   1b778:	ldrb	r3, [fp, #-13]
   1b77c:	lsl	r3, r3, #1
   1b780:	add	r3, r2, r3
   1b784:	ldrh	r3, [r3]
   1b788:	and	r3, r3, #8192	; 0x2000
   1b78c:	cmp	r3, #0
   1b790:	bne	1b754 <__assert_fail@plt+0xa260>
   1b794:	ldrb	r3, [fp, #-13]
   1b798:	cmp	r3, #45	; 0x2d
   1b79c:	bne	1b7a8 <__assert_fail@plt+0xa2b4>
   1b7a0:	mov	r3, #4
   1b7a4:	b	1bcf0 <__assert_fail@plt+0xa7fc>
   1b7a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b7ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b7b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b7b4:	bl	113f8 <strtoumax@plt>
   1b7b8:	mov	r2, r0
   1b7bc:	mov	r3, r1
   1b7c0:	strd	r2, [fp, #-44]	; 0xffffffd4
   1b7c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b7c8:	ldr	r3, [r3]
   1b7cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b7d0:	cmp	r2, r3
   1b7d4:	bne	1b834 <__assert_fail@plt+0xa340>
   1b7d8:	ldr	r3, [fp, #4]
   1b7dc:	cmp	r3, #0
   1b7e0:	beq	1b82c <__assert_fail@plt+0xa338>
   1b7e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b7e8:	ldr	r3, [r3]
   1b7ec:	ldrb	r3, [r3]
   1b7f0:	cmp	r3, #0
   1b7f4:	beq	1b82c <__assert_fail@plt+0xa338>
   1b7f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b7fc:	ldr	r3, [r3]
   1b800:	ldrb	r3, [r3]
   1b804:	mov	r1, r3
   1b808:	ldr	r0, [fp, #4]
   1b80c:	bl	11380 <strchr@plt>
   1b810:	mov	r3, r0
   1b814:	cmp	r3, #0
   1b818:	beq	1b82c <__assert_fail@plt+0xa338>
   1b81c:	mov	r2, #1
   1b820:	mov	r3, #0
   1b824:	strd	r2, [fp, #-44]	; 0xffffffd4
   1b828:	b	1b86c <__assert_fail@plt+0xa378>
   1b82c:	mov	r3, #4
   1b830:	b	1bcf0 <__assert_fail@plt+0xa7fc>
   1b834:	bl	113bc <__errno_location@plt>
   1b838:	mov	r3, r0
   1b83c:	ldr	r3, [r3]
   1b840:	cmp	r3, #0
   1b844:	beq	1b86c <__assert_fail@plt+0xa378>
   1b848:	bl	113bc <__errno_location@plt>
   1b84c:	mov	r3, r0
   1b850:	ldr	r3, [r3]
   1b854:	cmp	r3, #34	; 0x22
   1b858:	beq	1b864 <__assert_fail@plt+0xa370>
   1b85c:	mov	r3, #4
   1b860:	b	1bcf0 <__assert_fail@plt+0xa7fc>
   1b864:	mov	r3, #1
   1b868:	str	r3, [fp, #-8]
   1b86c:	ldr	r3, [fp, #4]
   1b870:	cmp	r3, #0
   1b874:	bne	1b88c <__assert_fail@plt+0xa398>
   1b878:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1b87c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b880:	strd	r2, [r1]
   1b884:	ldr	r3, [fp, #-8]
   1b888:	b	1bcf0 <__assert_fail@plt+0xa7fc>
   1b88c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b890:	ldr	r3, [r3]
   1b894:	ldrb	r3, [r3]
   1b898:	cmp	r3, #0
   1b89c:	beq	1bce0 <__assert_fail@plt+0xa7ec>
   1b8a0:	mov	r3, #1024	; 0x400
   1b8a4:	str	r3, [fp, #-20]	; 0xffffffec
   1b8a8:	mov	r3, #1
   1b8ac:	str	r3, [fp, #-24]	; 0xffffffe8
   1b8b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b8b4:	ldr	r3, [r3]
   1b8b8:	ldrb	r3, [r3]
   1b8bc:	mov	r1, r3
   1b8c0:	ldr	r0, [fp, #4]
   1b8c4:	bl	11380 <strchr@plt>
   1b8c8:	mov	r3, r0
   1b8cc:	cmp	r3, #0
   1b8d0:	bne	1b8ec <__assert_fail@plt+0xa3f8>
   1b8d4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1b8d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b8dc:	strd	r2, [r1]
   1b8e0:	ldr	r3, [fp, #-8]
   1b8e4:	orr	r3, r3, #2
   1b8e8:	b	1bcf0 <__assert_fail@plt+0xa7fc>
   1b8ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b8f0:	ldr	r3, [r3]
   1b8f4:	ldrb	r3, [r3]
   1b8f8:	sub	r3, r3, #69	; 0x45
   1b8fc:	cmp	r3, #47	; 0x2f
   1b900:	ldrls	pc, [pc, r3, lsl #2]
   1b904:	b	1ba58 <__assert_fail@plt+0xa564>
   1b908:	andeq	fp, r1, r8, asr #19
   1b90c:	andeq	fp, r1, r8, asr sl
   1b910:	andeq	fp, r1, r8, asr #19
   1b914:	andeq	fp, r1, r8, asr sl
   1b918:	andeq	fp, r1, r8, asr sl
   1b91c:	andeq	fp, r1, r8, asr sl
   1b920:	andeq	fp, r1, r8, asr #19
   1b924:	andeq	fp, r1, r8, asr sl
   1b928:	andeq	fp, r1, r8, asr #19
   1b92c:	andeq	fp, r1, r8, asr sl
   1b930:	andeq	fp, r1, r8, asr sl
   1b934:	andeq	fp, r1, r8, asr #19
   1b938:	andeq	fp, r1, r8, asr sl
   1b93c:	andeq	fp, r1, r8, asr sl
   1b940:	andeq	fp, r1, r8, asr sl
   1b944:	andeq	fp, r1, r8, asr #19
   1b948:	andeq	fp, r1, r8, asr sl
   1b94c:	andeq	fp, r1, r8, asr sl
   1b950:	andeq	fp, r1, r8, asr sl
   1b954:	andeq	fp, r1, r8, asr sl
   1b958:	andeq	fp, r1, r8, asr #19
   1b95c:	andeq	fp, r1, r8, asr #19
   1b960:	andeq	fp, r1, r8, asr sl
   1b964:	andeq	fp, r1, r8, asr sl
   1b968:	andeq	fp, r1, r8, asr sl
   1b96c:	andeq	fp, r1, r8, asr sl
   1b970:	andeq	fp, r1, r8, asr sl
   1b974:	andeq	fp, r1, r8, asr sl
   1b978:	andeq	fp, r1, r8, asr sl
   1b97c:	andeq	fp, r1, r8, asr sl
   1b980:	andeq	fp, r1, r8, asr sl
   1b984:	andeq	fp, r1, r8, asr sl
   1b988:	andeq	fp, r1, r8, asr sl
   1b98c:	andeq	fp, r1, r8, asr sl
   1b990:	andeq	fp, r1, r8, asr #19
   1b994:	andeq	fp, r1, r8, asr sl
   1b998:	andeq	fp, r1, r8, asr sl
   1b99c:	andeq	fp, r1, r8, asr sl
   1b9a0:	andeq	fp, r1, r8, asr #19
   1b9a4:	andeq	fp, r1, r8, asr sl
   1b9a8:	andeq	fp, r1, r8, asr #19
   1b9ac:	andeq	fp, r1, r8, asr sl
   1b9b0:	andeq	fp, r1, r8, asr sl
   1b9b4:	andeq	fp, r1, r8, asr sl
   1b9b8:	andeq	fp, r1, r8, asr sl
   1b9bc:	andeq	fp, r1, r8, asr sl
   1b9c0:	andeq	fp, r1, r8, asr sl
   1b9c4:	andeq	fp, r1, r8, asr #19
   1b9c8:	mov	r1, #48	; 0x30
   1b9cc:	ldr	r0, [fp, #4]
   1b9d0:	bl	11380 <strchr@plt>
   1b9d4:	mov	r3, r0
   1b9d8:	cmp	r3, #0
   1b9dc:	beq	1ba4c <__assert_fail@plt+0xa558>
   1b9e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b9e4:	ldr	r3, [r3]
   1b9e8:	add	r3, r3, #1
   1b9ec:	ldrb	r3, [r3]
   1b9f0:	cmp	r3, #68	; 0x44
   1b9f4:	beq	1ba34 <__assert_fail@plt+0xa540>
   1b9f8:	cmp	r3, #105	; 0x69
   1b9fc:	beq	1ba0c <__assert_fail@plt+0xa518>
   1ba00:	cmp	r3, #66	; 0x42
   1ba04:	beq	1ba34 <__assert_fail@plt+0xa540>
   1ba08:	b	1ba58 <__assert_fail@plt+0xa564>
   1ba0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba10:	ldr	r3, [r3]
   1ba14:	add	r3, r3, #2
   1ba18:	ldrb	r3, [r3]
   1ba1c:	cmp	r3, #66	; 0x42
   1ba20:	bne	1ba54 <__assert_fail@plt+0xa560>
   1ba24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba28:	add	r3, r3, #2
   1ba2c:	str	r3, [fp, #-24]	; 0xffffffe8
   1ba30:	b	1ba54 <__assert_fail@plt+0xa560>
   1ba34:	mov	r3, #1000	; 0x3e8
   1ba38:	str	r3, [fp, #-20]	; 0xffffffec
   1ba3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba40:	add	r3, r3, #1
   1ba44:	str	r3, [fp, #-24]	; 0xffffffe8
   1ba48:	b	1ba58 <__assert_fail@plt+0xa564>
   1ba4c:	nop	{0}
   1ba50:	b	1ba58 <__assert_fail@plt+0xa564>
   1ba54:	nop	{0}
   1ba58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba5c:	ldr	r3, [r3]
   1ba60:	ldrb	r3, [r3]
   1ba64:	sub	r3, r3, #66	; 0x42
   1ba68:	cmp	r3, #53	; 0x35
   1ba6c:	ldrls	pc, [pc, r3, lsl #2]
   1ba70:	b	1bc80 <__assert_fail@plt+0xa78c>
   1ba74:	andeq	fp, r1, r4, ror #22
   1ba78:	andeq	fp, r1, r0, lsl #25
   1ba7c:	andeq	fp, r1, r0, lsl #25
   1ba80:	andeq	fp, r1, r8, lsl #23
   1ba84:	andeq	fp, r1, r0, lsl #25
   1ba88:	andeq	fp, r1, r4, lsr #23
   1ba8c:	andeq	fp, r1, r0, lsl #25
   1ba90:	andeq	fp, r1, r0, lsl #25
   1ba94:	andeq	fp, r1, r0, lsl #25
   1ba98:	andeq	fp, r1, r0, asr #23
   1ba9c:	andeq	fp, r1, r0, lsl #25
   1baa0:	ldrdeq	fp, [r1], -ip
   1baa4:	andeq	fp, r1, r0, lsl #25
   1baa8:	andeq	fp, r1, r0, lsl #25
   1baac:	strdeq	fp, [r1], -r8
   1bab0:	andeq	fp, r1, r0, lsl #25
   1bab4:	andeq	fp, r1, r0, lsl #25
   1bab8:	andeq	fp, r1, r0, lsl #25
   1babc:	andeq	fp, r1, r4, lsl ip
   1bac0:	andeq	fp, r1, r0, lsl #25
   1bac4:	andeq	fp, r1, r0, lsl #25
   1bac8:	andeq	fp, r1, r0, lsl #25
   1bacc:	andeq	fp, r1, r0, lsl #25
   1bad0:	andeq	fp, r1, r8, asr #24
   1bad4:	andeq	fp, r1, r4, ror #24
   1bad8:	andeq	fp, r1, r0, lsl #25
   1badc:	andeq	fp, r1, r0, lsl #25
   1bae0:	andeq	fp, r1, r0, lsl #25
   1bae4:	andeq	fp, r1, r0, lsl #25
   1bae8:	andeq	fp, r1, r0, lsl #25
   1baec:	andeq	fp, r1, r0, lsl #25
   1baf0:	andeq	fp, r1, r0, lsl #25
   1baf4:	andeq	fp, r1, ip, asr #22
   1baf8:	andeq	fp, r1, ip, ror fp
   1bafc:	andeq	fp, r1, r0, lsl #25
   1bb00:	andeq	fp, r1, r0, lsl #25
   1bb04:	andeq	fp, r1, r0, lsl #25
   1bb08:	andeq	fp, r1, r4, lsr #23
   1bb0c:	andeq	fp, r1, r0, lsl #25
   1bb10:	andeq	fp, r1, r0, lsl #25
   1bb14:	andeq	fp, r1, r0, lsl #25
   1bb18:	andeq	fp, r1, r0, asr #23
   1bb1c:	andeq	fp, r1, r0, lsl #25
   1bb20:	ldrdeq	fp, [r1], -ip
   1bb24:	andeq	fp, r1, r0, lsl #25
   1bb28:	andeq	fp, r1, r0, lsl #25
   1bb2c:	andeq	fp, r1, r0, lsl #25
   1bb30:	andeq	fp, r1, r0, lsl #25
   1bb34:	andeq	fp, r1, r0, lsl #25
   1bb38:	andeq	fp, r1, r0, lsl #25
   1bb3c:	andeq	fp, r1, r4, lsl ip
   1bb40:	andeq	fp, r1, r0, lsl #25
   1bb44:	andeq	fp, r1, r0, lsl #25
   1bb48:	andeq	fp, r1, r0, lsr ip
   1bb4c:	sub	r3, fp, #44	; 0x2c
   1bb50:	mov	r1, #512	; 0x200
   1bb54:	mov	r0, r3
   1bb58:	bl	1b464 <__assert_fail@plt+0x9f70>
   1bb5c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb60:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bb64:	sub	r3, fp, #44	; 0x2c
   1bb68:	mov	r1, #1024	; 0x400
   1bb6c:	mov	r0, r3
   1bb70:	bl	1b464 <__assert_fail@plt+0x9f70>
   1bb74:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb78:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bb7c:	mov	r3, #0
   1bb80:	str	r3, [fp, #-28]	; 0xffffffe4
   1bb84:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bb88:	sub	r3, fp, #44	; 0x2c
   1bb8c:	mov	r2, #6
   1bb90:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bb94:	mov	r0, r3
   1bb98:	bl	1b640 <__assert_fail@plt+0xa14c>
   1bb9c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bba0:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bba4:	sub	r3, fp, #44	; 0x2c
   1bba8:	mov	r2, #3
   1bbac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bbb0:	mov	r0, r3
   1bbb4:	bl	1b640 <__assert_fail@plt+0xa14c>
   1bbb8:	str	r0, [fp, #-28]	; 0xffffffe4
   1bbbc:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bbc0:	sub	r3, fp, #44	; 0x2c
   1bbc4:	mov	r2, #1
   1bbc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bbcc:	mov	r0, r3
   1bbd0:	bl	1b640 <__assert_fail@plt+0xa14c>
   1bbd4:	str	r0, [fp, #-28]	; 0xffffffe4
   1bbd8:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bbdc:	sub	r3, fp, #44	; 0x2c
   1bbe0:	mov	r2, #2
   1bbe4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bbe8:	mov	r0, r3
   1bbec:	bl	1b640 <__assert_fail@plt+0xa14c>
   1bbf0:	str	r0, [fp, #-28]	; 0xffffffe4
   1bbf4:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bbf8:	sub	r3, fp, #44	; 0x2c
   1bbfc:	mov	r2, #5
   1bc00:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc04:	mov	r0, r3
   1bc08:	bl	1b640 <__assert_fail@plt+0xa14c>
   1bc0c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bc10:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bc14:	sub	r3, fp, #44	; 0x2c
   1bc18:	mov	r2, #4
   1bc1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc20:	mov	r0, r3
   1bc24:	bl	1b640 <__assert_fail@plt+0xa14c>
   1bc28:	str	r0, [fp, #-28]	; 0xffffffe4
   1bc2c:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bc30:	sub	r3, fp, #44	; 0x2c
   1bc34:	mov	r1, #2
   1bc38:	mov	r0, r3
   1bc3c:	bl	1b464 <__assert_fail@plt+0x9f70>
   1bc40:	str	r0, [fp, #-28]	; 0xffffffe4
   1bc44:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bc48:	sub	r3, fp, #44	; 0x2c
   1bc4c:	mov	r2, #8
   1bc50:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc54:	mov	r0, r3
   1bc58:	bl	1b640 <__assert_fail@plt+0xa14c>
   1bc5c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bc60:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bc64:	sub	r3, fp, #44	; 0x2c
   1bc68:	mov	r2, #7
   1bc6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc70:	mov	r0, r3
   1bc74:	bl	1b640 <__assert_fail@plt+0xa14c>
   1bc78:	str	r0, [fp, #-28]	; 0xffffffe4
   1bc7c:	b	1bc98 <__assert_fail@plt+0xa7a4>
   1bc80:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1bc84:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1bc88:	strd	r2, [r1]
   1bc8c:	ldr	r3, [fp, #-8]
   1bc90:	orr	r3, r3, #2
   1bc94:	b	1bcf0 <__assert_fail@plt+0xa7fc>
   1bc98:	ldr	r2, [fp, #-8]
   1bc9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bca0:	orr	r3, r2, r3
   1bca4:	str	r3, [fp, #-8]
   1bca8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bcac:	ldr	r2, [r3]
   1bcb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bcb4:	add	r2, r2, r3
   1bcb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bcbc:	str	r2, [r3]
   1bcc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bcc4:	ldr	r3, [r3]
   1bcc8:	ldrb	r3, [r3]
   1bccc:	cmp	r3, #0
   1bcd0:	beq	1bce0 <__assert_fail@plt+0xa7ec>
   1bcd4:	ldr	r3, [fp, #-8]
   1bcd8:	orr	r3, r3, #2
   1bcdc:	str	r3, [fp, #-8]
   1bce0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1bce4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1bce8:	strd	r2, [r1]
   1bcec:	ldr	r3, [fp, #-8]
   1bcf0:	mov	r0, r3
   1bcf4:	sub	sp, fp, #4
   1bcf8:	ldr	fp, [sp]
   1bcfc:	add	sp, sp, #4
   1bd00:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd04:	str	fp, [sp, #-8]!
   1bd08:	str	lr, [sp, #4]
   1bd0c:	add	fp, sp, #4
   1bd10:	sub	sp, sp, #16
   1bd14:	str	r0, [fp, #-16]
   1bd18:	str	r1, [fp, #-20]	; 0xffffffec
   1bd1c:	ldr	r3, [fp, #-16]
   1bd20:	cmp	r3, #0
   1bd24:	beq	1bd34 <__assert_fail@plt+0xa840>
   1bd28:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd2c:	cmp	r3, #0
   1bd30:	bne	1bd44 <__assert_fail@plt+0xa850>
   1bd34:	mov	r3, #1
   1bd38:	str	r3, [fp, #-20]	; 0xffffffec
   1bd3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd40:	str	r3, [fp, #-16]
   1bd44:	mov	ip, #0
   1bd48:	ldr	r2, [fp, #-16]
   1bd4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd50:	umull	r0, r1, r2, r3
   1bd54:	mov	r2, #0
   1bd58:	mov	r3, #0
   1bd5c:	mov	r2, r1
   1bd60:	mov	r3, #0
   1bd64:	cmp	r2, #0
   1bd68:	beq	1bd70 <__assert_fail@plt+0xa87c>
   1bd6c:	mov	ip, #1
   1bd70:	cmp	r0, #0
   1bd74:	bge	1bd7c <__assert_fail@plt+0xa888>
   1bd78:	mov	ip, #1
   1bd7c:	mov	r3, ip
   1bd80:	and	r3, r3, #1
   1bd84:	uxtb	r3, r3
   1bd88:	cmp	r3, #0
   1bd8c:	beq	1bda8 <__assert_fail@plt+0xa8b4>
   1bd90:	bl	113bc <__errno_location@plt>
   1bd94:	mov	r2, r0
   1bd98:	mov	r3, #12
   1bd9c:	str	r3, [r2]
   1bda0:	mov	r3, #0
   1bda4:	b	1bdc0 <__assert_fail@plt+0xa8cc>
   1bda8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bdac:	ldr	r0, [fp, #-16]
   1bdb0:	bl	1114c <calloc@plt>
   1bdb4:	mov	r3, r0
   1bdb8:	str	r3, [fp, #-8]
   1bdbc:	ldr	r3, [fp, #-8]
   1bdc0:	mov	r0, r3
   1bdc4:	sub	sp, fp, #4
   1bdc8:	ldr	fp, [sp]
   1bdcc:	add	sp, sp, #4
   1bdd0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bdd4:	str	fp, [sp, #-8]!
   1bdd8:	str	lr, [sp, #4]
   1bddc:	add	fp, sp, #4
   1bde0:	sub	sp, sp, #16
   1bde4:	str	r0, [fp, #-16]
   1bde8:	ldr	r3, [fp, #-16]
   1bdec:	cmp	r3, #0
   1bdf0:	bne	1bdfc <__assert_fail@plt+0xa908>
   1bdf4:	mov	r3, #1
   1bdf8:	str	r3, [fp, #-16]
   1bdfc:	mov	r2, #0
   1be00:	ldr	r3, [fp, #-16]
   1be04:	cmp	r3, #0
   1be08:	bge	1be10 <__assert_fail@plt+0xa91c>
   1be0c:	mov	r2, #1
   1be10:	mov	r3, r2
   1be14:	and	r3, r3, #1
   1be18:	uxtb	r3, r3
   1be1c:	cmp	r3, #0
   1be20:	beq	1be3c <__assert_fail@plt+0xa948>
   1be24:	bl	113bc <__errno_location@plt>
   1be28:	mov	r2, r0
   1be2c:	mov	r3, #12
   1be30:	str	r3, [r2]
   1be34:	mov	r3, #0
   1be38:	b	1be50 <__assert_fail@plt+0xa95c>
   1be3c:	ldr	r0, [fp, #-16]
   1be40:	bl	112fc <malloc@plt>
   1be44:	mov	r3, r0
   1be48:	str	r3, [fp, #-8]
   1be4c:	ldr	r3, [fp, #-8]
   1be50:	mov	r0, r3
   1be54:	sub	sp, fp, #4
   1be58:	ldr	fp, [sp]
   1be5c:	add	sp, sp, #4
   1be60:	pop	{pc}		; (ldr pc, [sp], #4)
   1be64:	str	fp, [sp, #-8]!
   1be68:	str	lr, [sp, #4]
   1be6c:	add	fp, sp, #4
   1be70:	sub	sp, sp, #16
   1be74:	str	r0, [fp, #-16]
   1be78:	str	r1, [fp, #-20]	; 0xffffffec
   1be7c:	ldr	r3, [fp, #-16]
   1be80:	cmp	r3, #0
   1be84:	bne	1be98 <__assert_fail@plt+0xa9a4>
   1be88:	ldr	r0, [fp, #-20]	; 0xffffffec
   1be8c:	bl	1bdd4 <__assert_fail@plt+0xa8e0>
   1be90:	mov	r3, r0
   1be94:	b	1bf08 <__assert_fail@plt+0xaa14>
   1be98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1be9c:	cmp	r3, #0
   1bea0:	bne	1beb4 <__assert_fail@plt+0xa9c0>
   1bea4:	ldr	r0, [fp, #-16]
   1bea8:	bl	16dfc <__assert_fail@plt+0x5908>
   1beac:	mov	r3, #0
   1beb0:	b	1bf08 <__assert_fail@plt+0xaa14>
   1beb4:	mov	r2, #0
   1beb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bebc:	cmp	r3, #0
   1bec0:	bge	1bec8 <__assert_fail@plt+0xa9d4>
   1bec4:	mov	r2, #1
   1bec8:	mov	r3, r2
   1becc:	and	r3, r3, #1
   1bed0:	uxtb	r3, r3
   1bed4:	cmp	r3, #0
   1bed8:	beq	1bef4 <__assert_fail@plt+0xaa00>
   1bedc:	bl	113bc <__errno_location@plt>
   1bee0:	mov	r2, r0
   1bee4:	mov	r3, #12
   1bee8:	str	r3, [r2]
   1beec:	mov	r3, #0
   1bef0:	b	1bf08 <__assert_fail@plt+0xaa14>
   1bef4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bef8:	ldr	r0, [fp, #-16]
   1befc:	bl	11230 <realloc@plt>
   1bf00:	str	r0, [fp, #-8]
   1bf04:	ldr	r3, [fp, #-8]
   1bf08:	mov	r0, r3
   1bf0c:	sub	sp, fp, #4
   1bf10:	ldr	fp, [sp]
   1bf14:	add	sp, sp, #4
   1bf18:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf1c:	str	fp, [sp, #-8]!
   1bf20:	str	lr, [sp, #4]
   1bf24:	add	fp, sp, #4
   1bf28:	sub	sp, sp, #8
   1bf2c:	str	r0, [fp, #-8]
   1bf30:	ldr	r0, [fp, #-8]
   1bf34:	bl	16dfc <__assert_fail@plt+0x5908>
   1bf38:	nop	{0}
   1bf3c:	sub	sp, fp, #4
   1bf40:	ldr	fp, [sp]
   1bf44:	add	sp, sp, #4
   1bf48:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf4c:	str	fp, [sp, #-8]!
   1bf50:	str	lr, [sp, #4]
   1bf54:	add	fp, sp, #4
   1bf58:	sub	sp, sp, #8
   1bf5c:	str	r0, [fp, #-8]
   1bf60:	str	r1, [fp, #-12]
   1bf64:	ldr	r3, [fp, #-8]
   1bf68:	ldr	r2, [fp, #-12]
   1bf6c:	mov	r1, r2
   1bf70:	mov	r0, r3
   1bf74:	bl	114ac <aligned_alloc@plt>
   1bf78:	mov	r3, r0
   1bf7c:	mov	r0, r3
   1bf80:	sub	sp, fp, #4
   1bf84:	ldr	fp, [sp]
   1bf88:	add	sp, sp, #4
   1bf8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf90:	push	{fp}		; (str fp, [sp, #-4]!)
   1bf94:	add	fp, sp, #0
   1bf98:	sub	sp, sp, #12
   1bf9c:	str	r0, [fp, #-8]
   1bfa0:	str	r1, [fp, #-12]
   1bfa4:	mov	r3, #0
   1bfa8:	mov	r0, r3
   1bfac:	add	sp, fp, #0
   1bfb0:	pop	{fp}		; (ldr fp, [sp], #4)
   1bfb4:	bx	lr
   1bfb8:	str	fp, [sp, #-8]!
   1bfbc:	str	lr, [sp, #4]
   1bfc0:	add	fp, sp, #4
   1bfc4:	sub	sp, sp, #8
   1bfc8:	str	r0, [fp, #-8]
   1bfcc:	str	r1, [fp, #-12]
   1bfd0:	ldr	r1, [fp, #-12]
   1bfd4:	ldr	r0, [fp, #-8]
   1bfd8:	bl	1bf90 <__assert_fail@plt+0xaa9c>
   1bfdc:	mov	r3, r0
   1bfe0:	mov	r0, r3
   1bfe4:	sub	sp, fp, #4
   1bfe8:	ldr	fp, [sp]
   1bfec:	add	sp, sp, #4
   1bff0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bff4:	strd	r4, [sp, #-16]!
   1bff8:	str	fp, [sp, #8]
   1bffc:	str	lr, [sp, #12]
   1c000:	add	fp, sp, #12
   1c004:	sub	sp, sp, #16
   1c008:	str	r0, [fp, #-24]	; 0xffffffe8
   1c00c:	str	r1, [fp, #-28]	; 0xffffffe4
   1c010:	ldr	r5, [fp, #-24]	; 0xffffffe8
   1c014:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1c018:	cmp	r5, r4
   1c01c:	bne	1c028 <__assert_fail@plt+0xab34>
   1c020:	mov	r3, #0
   1c024:	b	1c088 <__assert_fail@plt+0xab94>
   1c028:	ldrb	r3, [r5]
   1c02c:	mov	r0, r3
   1c030:	bl	1c9a8 <__assert_fail@plt+0xb4b4>
   1c034:	mov	r3, r0
   1c038:	strb	r3, [fp, #-13]
   1c03c:	ldrb	r3, [r4]
   1c040:	mov	r0, r3
   1c044:	bl	1c9a8 <__assert_fail@plt+0xb4b4>
   1c048:	mov	r3, r0
   1c04c:	strb	r3, [fp, #-14]
   1c050:	ldrb	r3, [fp, #-13]
   1c054:	cmp	r3, #0
   1c058:	beq	1c078 <__assert_fail@plt+0xab84>
   1c05c:	add	r5, r5, #1
   1c060:	add	r4, r4, #1
   1c064:	ldrb	r2, [fp, #-13]
   1c068:	ldrb	r3, [fp, #-14]
   1c06c:	cmp	r2, r3
   1c070:	beq	1c028 <__assert_fail@plt+0xab34>
   1c074:	b	1c07c <__assert_fail@plt+0xab88>
   1c078:	nop	{0}
   1c07c:	ldrb	r2, [fp, #-13]
   1c080:	ldrb	r3, [fp, #-14]
   1c084:	sub	r3, r2, r3
   1c088:	mov	r0, r3
   1c08c:	sub	sp, fp, #12
   1c090:	ldrd	r4, [sp]
   1c094:	ldr	fp, [sp, #8]
   1c098:	add	sp, sp, #12
   1c09c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0a0:	str	fp, [sp, #-8]!
   1c0a4:	str	lr, [sp, #4]
   1c0a8:	add	fp, sp, #4
   1c0ac:	sub	sp, sp, #16
   1c0b0:	str	r0, [fp, #-16]
   1c0b4:	ldr	r0, [fp, #-16]
   1c0b8:	bl	112b4 <__fpending@plt>
   1c0bc:	mov	r3, r0
   1c0c0:	cmp	r3, #0
   1c0c4:	movne	r3, #1
   1c0c8:	moveq	r3, #0
   1c0cc:	strb	r3, [fp, #-5]
   1c0d0:	ldr	r0, [fp, #-16]
   1c0d4:	bl	112c0 <ferror_unlocked@plt>
   1c0d8:	mov	r3, r0
   1c0dc:	cmp	r3, #0
   1c0e0:	movne	r3, #1
   1c0e4:	moveq	r3, #0
   1c0e8:	strb	r3, [fp, #-6]
   1c0ec:	ldr	r0, [fp, #-16]
   1c0f0:	bl	16b08 <__assert_fail@plt+0x5614>
   1c0f4:	mov	r3, r0
   1c0f8:	cmp	r3, #0
   1c0fc:	movne	r3, #1
   1c100:	moveq	r3, #0
   1c104:	strb	r3, [fp, #-7]
   1c108:	ldrb	r3, [fp, #-6]
   1c10c:	cmp	r3, #0
   1c110:	bne	1c140 <__assert_fail@plt+0xac4c>
   1c114:	ldrb	r3, [fp, #-7]
   1c118:	cmp	r3, #0
   1c11c:	beq	1c16c <__assert_fail@plt+0xac78>
   1c120:	ldrb	r3, [fp, #-5]
   1c124:	cmp	r3, #0
   1c128:	bne	1c140 <__assert_fail@plt+0xac4c>
   1c12c:	bl	113bc <__errno_location@plt>
   1c130:	mov	r3, r0
   1c134:	ldr	r3, [r3]
   1c138:	cmp	r3, #9
   1c13c:	beq	1c16c <__assert_fail@plt+0xac78>
   1c140:	ldrb	r3, [fp, #-7]
   1c144:	eor	r3, r3, #1
   1c148:	uxtb	r3, r3
   1c14c:	cmp	r3, #0
   1c150:	beq	1c164 <__assert_fail@plt+0xac70>
   1c154:	bl	113bc <__errno_location@plt>
   1c158:	mov	r2, r0
   1c15c:	mov	r3, #0
   1c160:	str	r3, [r2]
   1c164:	mvn	r3, #0
   1c168:	b	1c170 <__assert_fail@plt+0xac7c>
   1c16c:	mov	r3, #0
   1c170:	mov	r0, r3
   1c174:	sub	sp, fp, #4
   1c178:	ldr	fp, [sp]
   1c17c:	add	sp, sp, #4
   1c180:	pop	{pc}		; (ldr pc, [sp], #4)
   1c184:	str	fp, [sp, #-8]!
   1c188:	str	lr, [sp, #4]
   1c18c:	add	fp, sp, #4
   1c190:	bl	113bc <__errno_location@plt>
   1c194:	mov	r2, r0
   1c198:	mov	r3, #12
   1c19c:	str	r3, [r2]
   1c1a0:	mov	r3, #0
   1c1a4:	mov	r0, r3
   1c1a8:	sub	sp, fp, #4
   1c1ac:	ldr	fp, [sp]
   1c1b0:	add	sp, sp, #4
   1c1b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c1b8:	str	fp, [sp, #-8]!
   1c1bc:	str	lr, [sp, #4]
   1c1c0:	add	fp, sp, #4
   1c1c4:	sub	sp, sp, #8
   1c1c8:	str	r0, [fp, #-8]
   1c1cc:	ldr	r3, [fp, #-8]
   1c1d0:	mov	r0, r3
   1c1d4:	bl	1bdd4 <__assert_fail@plt+0xa8e0>
   1c1d8:	mov	r3, r0
   1c1dc:	mov	r0, r3
   1c1e0:	sub	sp, fp, #4
   1c1e4:	ldr	fp, [sp]
   1c1e8:	add	sp, sp, #4
   1c1ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1c1f0:	str	fp, [sp, #-8]!
   1c1f4:	str	lr, [sp, #4]
   1c1f8:	add	fp, sp, #4
   1c1fc:	sub	sp, sp, #8
   1c200:	str	r0, [fp, #-8]
   1c204:	str	r1, [fp, #-12]
   1c208:	ldr	r3, [fp, #-12]
   1c20c:	cmp	r3, #0
   1c210:	moveq	r3, #1
   1c214:	movne	r3, #0
   1c218:	uxtb	r3, r3
   1c21c:	mov	r2, r3
   1c220:	ldr	r3, [fp, #-12]
   1c224:	orr	r3, r2, r3
   1c228:	mov	r1, r3
   1c22c:	ldr	r0, [fp, #-8]
   1c230:	bl	1be64 <__assert_fail@plt+0xa970>
   1c234:	mov	r3, r0
   1c238:	mov	r0, r3
   1c23c:	sub	sp, fp, #4
   1c240:	ldr	fp, [sp]
   1c244:	add	sp, sp, #4
   1c248:	pop	{pc}		; (ldr pc, [sp], #4)
   1c24c:	str	fp, [sp, #-8]!
   1c250:	str	lr, [sp, #4]
   1c254:	add	fp, sp, #4
   1c258:	sub	sp, sp, #8
   1c25c:	str	r0, [fp, #-8]
   1c260:	str	r1, [fp, #-12]
   1c264:	ldr	r3, [fp, #-8]
   1c268:	ldr	r2, [fp, #-12]
   1c26c:	mov	r1, r2
   1c270:	mov	r0, r3
   1c274:	bl	1bd04 <__assert_fail@plt+0xa810>
   1c278:	mov	r3, r0
   1c27c:	mov	r0, r3
   1c280:	sub	sp, fp, #4
   1c284:	ldr	fp, [sp]
   1c288:	add	sp, sp, #4
   1c28c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c290:	str	fp, [sp, #-8]!
   1c294:	str	lr, [sp, #4]
   1c298:	add	fp, sp, #4
   1c29c:	sub	sp, sp, #16
   1c2a0:	str	r0, [fp, #-8]
   1c2a4:	str	r1, [fp, #-12]
   1c2a8:	str	r2, [fp, #-16]
   1c2ac:	ldr	r3, [fp, #-12]
   1c2b0:	cmp	r3, #0
   1c2b4:	beq	1c2c4 <__assert_fail@plt+0xadd0>
   1c2b8:	ldr	r3, [fp, #-16]
   1c2bc:	cmp	r3, #0
   1c2c0:	bne	1c2d4 <__assert_fail@plt+0xade0>
   1c2c4:	mov	r3, #1
   1c2c8:	str	r3, [fp, #-16]
   1c2cc:	ldr	r3, [fp, #-16]
   1c2d0:	str	r3, [fp, #-12]
   1c2d4:	ldr	r3, [fp, #-12]
   1c2d8:	ldr	r2, [fp, #-16]
   1c2dc:	mov	r1, r3
   1c2e0:	ldr	r0, [fp, #-8]
   1c2e4:	bl	1c420 <__assert_fail@plt+0xaf2c>
   1c2e8:	mov	r3, r0
   1c2ec:	mov	r0, r3
   1c2f0:	sub	sp, fp, #4
   1c2f4:	ldr	fp, [sp]
   1c2f8:	add	sp, sp, #4
   1c2fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c300:	str	fp, [sp, #-8]!
   1c304:	str	lr, [sp, #4]
   1c308:	add	fp, sp, #4
   1c30c:	sub	sp, sp, #8
   1c310:	mov	r0, #14
   1c314:	bl	1147c <nl_langinfo@plt>
   1c318:	str	r0, [fp, #-8]
   1c31c:	ldr	r3, [fp, #-8]
   1c320:	cmp	r3, #0
   1c324:	bne	1c334 <__assert_fail@plt+0xae40>
   1c328:	movw	r3, #59884	; 0xe9ec
   1c32c:	movt	r3, #1
   1c330:	str	r3, [fp, #-8]
   1c334:	ldr	r3, [fp, #-8]
   1c338:	ldrb	r3, [r3]
   1c33c:	cmp	r3, #0
   1c340:	bne	1c350 <__assert_fail@plt+0xae5c>
   1c344:	movw	r3, #59888	; 0xe9f0
   1c348:	movt	r3, #1
   1c34c:	str	r3, [fp, #-8]
   1c350:	ldr	r3, [fp, #-8]
   1c354:	mov	r0, r3
   1c358:	sub	sp, fp, #4
   1c35c:	ldr	fp, [sp]
   1c360:	add	sp, sp, #4
   1c364:	pop	{pc}		; (ldr pc, [sp], #4)
   1c368:	str	fp, [sp, #-8]!
   1c36c:	str	lr, [sp, #4]
   1c370:	add	fp, sp, #4
   1c374:	sub	sp, sp, #32
   1c378:	str	r0, [fp, #-24]	; 0xffffffe8
   1c37c:	str	r1, [fp, #-28]	; 0xffffffe4
   1c380:	str	r2, [fp, #-32]	; 0xffffffe0
   1c384:	str	r3, [fp, #-36]	; 0xffffffdc
   1c388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c38c:	cmp	r3, #0
   1c390:	bne	1c39c <__assert_fail@plt+0xaea8>
   1c394:	sub	r3, fp, #16
   1c398:	str	r3, [fp, #-24]	; 0xffffffe8
   1c39c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c3a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c3a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c3a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3ac:	bl	112cc <mbrtowc@plt>
   1c3b0:	str	r0, [fp, #-8]
   1c3b4:	ldr	r3, [fp, #-8]
   1c3b8:	cmn	r3, #3
   1c3bc:	bls	1c408 <__assert_fail@plt+0xaf14>
   1c3c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c3c4:	cmp	r3, #0
   1c3c8:	beq	1c408 <__assert_fail@plt+0xaf14>
   1c3cc:	mov	r0, #0
   1c3d0:	bl	1ce0c <__assert_fail@plt+0xb918>
   1c3d4:	mov	r3, r0
   1c3d8:	eor	r3, r3, #1
   1c3dc:	uxtb	r3, r3
   1c3e0:	cmp	r3, #0
   1c3e4:	beq	1c408 <__assert_fail@plt+0xaf14>
   1c3e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c3ec:	ldrb	r3, [r3]
   1c3f0:	strb	r3, [fp, #-9]
   1c3f4:	ldrb	r2, [fp, #-9]
   1c3f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c3fc:	str	r2, [r3]
   1c400:	mov	r3, #1
   1c404:	b	1c40c <__assert_fail@plt+0xaf18>
   1c408:	ldr	r3, [fp, #-8]
   1c40c:	mov	r0, r3
   1c410:	sub	sp, fp, #4
   1c414:	ldr	fp, [sp]
   1c418:	add	sp, sp, #4
   1c41c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c420:	str	fp, [sp, #-8]!
   1c424:	str	lr, [sp, #4]
   1c428:	add	fp, sp, #4
   1c42c:	sub	sp, sp, #24
   1c430:	str	r0, [fp, #-16]
   1c434:	str	r1, [fp, #-20]	; 0xffffffec
   1c438:	str	r2, [fp, #-24]	; 0xffffffe8
   1c43c:	mov	ip, #0
   1c440:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c448:	umull	r0, r1, r2, r3
   1c44c:	mov	r2, #0
   1c450:	mov	r3, #0
   1c454:	mov	r2, r1
   1c458:	mov	r3, #0
   1c45c:	cmp	r2, #0
   1c460:	beq	1c468 <__assert_fail@plt+0xaf74>
   1c464:	mov	ip, #1
   1c468:	mov	r3, r0
   1c46c:	str	r3, [fp, #-8]
   1c470:	mov	r3, ip
   1c474:	and	r3, r3, #1
   1c478:	uxtb	r3, r3
   1c47c:	cmp	r3, #0
   1c480:	beq	1c49c <__assert_fail@plt+0xafa8>
   1c484:	bl	113bc <__errno_location@plt>
   1c488:	mov	r2, r0
   1c48c:	mov	r3, #12
   1c490:	str	r3, [r2]
   1c494:	mov	r3, #0
   1c498:	b	1c4b0 <__assert_fail@plt+0xafbc>
   1c49c:	ldr	r3, [fp, #-8]
   1c4a0:	mov	r1, r3
   1c4a4:	ldr	r0, [fp, #-16]
   1c4a8:	bl	1be64 <__assert_fail@plt+0xa970>
   1c4ac:	mov	r3, r0
   1c4b0:	mov	r0, r3
   1c4b4:	sub	sp, fp, #4
   1c4b8:	ldr	fp, [sp]
   1c4bc:	add	sp, sp, #4
   1c4c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4c4:	str	fp, [sp, #-8]!
   1c4c8:	str	lr, [sp, #4]
   1c4cc:	add	fp, sp, #4
   1c4d0:	sub	sp, sp, #8
   1c4d4:	str	r0, [fp, #-8]
   1c4d8:	mov	r2, #3
   1c4dc:	mov	r1, #0
   1c4e0:	ldr	r0, [fp, #-8]
   1c4e4:	bl	1ca28 <__assert_fail@plt+0xb534>
   1c4e8:	mov	r3, r0
   1c4ec:	mov	r0, r3
   1c4f0:	sub	sp, fp, #4
   1c4f4:	ldr	fp, [sp]
   1c4f8:	add	sp, sp, #4
   1c4fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c500:	push	{fp}		; (str fp, [sp, #-4]!)
   1c504:	add	fp, sp, #0
   1c508:	sub	sp, sp, #12
   1c50c:	str	r0, [fp, #-8]
   1c510:	ldr	r3, [fp, #-8]
   1c514:	cmp	r3, #90	; 0x5a
   1c518:	bgt	1c53c <__assert_fail@plt+0xb048>
   1c51c:	ldr	r3, [fp, #-8]
   1c520:	cmp	r3, #65	; 0x41
   1c524:	bge	1c54c <__assert_fail@plt+0xb058>
   1c528:	ldr	r3, [fp, #-8]
   1c52c:	sub	r3, r3, #48	; 0x30
   1c530:	cmp	r3, #9
   1c534:	bhi	1c554 <__assert_fail@plt+0xb060>
   1c538:	b	1c54c <__assert_fail@plt+0xb058>
   1c53c:	ldr	r3, [fp, #-8]
   1c540:	sub	r3, r3, #97	; 0x61
   1c544:	cmp	r3, #25
   1c548:	bhi	1c554 <__assert_fail@plt+0xb060>
   1c54c:	mov	r3, #1
   1c550:	b	1c558 <__assert_fail@plt+0xb064>
   1c554:	mov	r3, #0
   1c558:	mov	r0, r3
   1c55c:	add	sp, fp, #0
   1c560:	pop	{fp}		; (ldr fp, [sp], #4)
   1c564:	bx	lr
   1c568:	push	{fp}		; (str fp, [sp, #-4]!)
   1c56c:	add	fp, sp, #0
   1c570:	sub	sp, sp, #12
   1c574:	str	r0, [fp, #-8]
   1c578:	ldr	r3, [fp, #-8]
   1c57c:	cmp	r3, #65	; 0x41
   1c580:	blt	1c5a8 <__assert_fail@plt+0xb0b4>
   1c584:	ldr	r3, [fp, #-8]
   1c588:	cmp	r3, #90	; 0x5a
   1c58c:	ble	1c5a0 <__assert_fail@plt+0xb0ac>
   1c590:	ldr	r3, [fp, #-8]
   1c594:	sub	r3, r3, #97	; 0x61
   1c598:	cmp	r3, #25
   1c59c:	bhi	1c5a8 <__assert_fail@plt+0xb0b4>
   1c5a0:	mov	r3, #1
   1c5a4:	b	1c5ac <__assert_fail@plt+0xb0b8>
   1c5a8:	mov	r3, #0
   1c5ac:	mov	r0, r3
   1c5b0:	add	sp, fp, #0
   1c5b4:	pop	{fp}		; (ldr fp, [sp], #4)
   1c5b8:	bx	lr
   1c5bc:	push	{fp}		; (str fp, [sp, #-4]!)
   1c5c0:	add	fp, sp, #0
   1c5c4:	sub	sp, sp, #12
   1c5c8:	str	r0, [fp, #-8]
   1c5cc:	ldr	r3, [fp, #-8]
   1c5d0:	cmp	r3, #127	; 0x7f
   1c5d4:	bhi	1c5e0 <__assert_fail@plt+0xb0ec>
   1c5d8:	mov	r3, #1
   1c5dc:	b	1c5e4 <__assert_fail@plt+0xb0f0>
   1c5e0:	mov	r3, #0
   1c5e4:	mov	r0, r3
   1c5e8:	add	sp, fp, #0
   1c5ec:	pop	{fp}		; (ldr fp, [sp], #4)
   1c5f0:	bx	lr
   1c5f4:	push	{fp}		; (str fp, [sp, #-4]!)
   1c5f8:	add	fp, sp, #0
   1c5fc:	sub	sp, sp, #12
   1c600:	str	r0, [fp, #-8]
   1c604:	ldr	r3, [fp, #-8]
   1c608:	cmp	r3, #32
   1c60c:	beq	1c61c <__assert_fail@plt+0xb128>
   1c610:	ldr	r3, [fp, #-8]
   1c614:	cmp	r3, #9
   1c618:	bne	1c624 <__assert_fail@plt+0xb130>
   1c61c:	mov	r3, #1
   1c620:	b	1c628 <__assert_fail@plt+0xb134>
   1c624:	mov	r3, #0
   1c628:	and	r3, r3, #1
   1c62c:	uxtb	r3, r3
   1c630:	mov	r0, r3
   1c634:	add	sp, fp, #0
   1c638:	pop	{fp}		; (ldr fp, [sp], #4)
   1c63c:	bx	lr
   1c640:	push	{fp}		; (str fp, [sp, #-4]!)
   1c644:	add	fp, sp, #0
   1c648:	sub	sp, sp, #12
   1c64c:	str	r0, [fp, #-8]
   1c650:	ldr	r3, [fp, #-8]
   1c654:	cmp	r3, #0
   1c658:	blt	1c67c <__assert_fail@plt+0xb188>
   1c65c:	ldr	r3, [fp, #-8]
   1c660:	cmp	r3, #31
   1c664:	ble	1c674 <__assert_fail@plt+0xb180>
   1c668:	ldr	r3, [fp, #-8]
   1c66c:	cmp	r3, #127	; 0x7f
   1c670:	bne	1c67c <__assert_fail@plt+0xb188>
   1c674:	mov	r3, #1
   1c678:	b	1c680 <__assert_fail@plt+0xb18c>
   1c67c:	mov	r3, #0
   1c680:	mov	r0, r3
   1c684:	add	sp, fp, #0
   1c688:	pop	{fp}		; (ldr fp, [sp], #4)
   1c68c:	bx	lr
   1c690:	push	{fp}		; (str fp, [sp, #-4]!)
   1c694:	add	fp, sp, #0
   1c698:	sub	sp, sp, #12
   1c69c:	str	r0, [fp, #-8]
   1c6a0:	ldr	r3, [fp, #-8]
   1c6a4:	sub	r3, r3, #48	; 0x30
   1c6a8:	cmp	r3, #9
   1c6ac:	bhi	1c6b8 <__assert_fail@plt+0xb1c4>
   1c6b0:	mov	r3, #1
   1c6b4:	b	1c6bc <__assert_fail@plt+0xb1c8>
   1c6b8:	mov	r3, #0
   1c6bc:	mov	r0, r3
   1c6c0:	add	sp, fp, #0
   1c6c4:	pop	{fp}		; (ldr fp, [sp], #4)
   1c6c8:	bx	lr
   1c6cc:	push	{fp}		; (str fp, [sp, #-4]!)
   1c6d0:	add	fp, sp, #0
   1c6d4:	sub	sp, sp, #12
   1c6d8:	str	r0, [fp, #-8]
   1c6dc:	ldr	r3, [fp, #-8]
   1c6e0:	sub	r3, r3, #33	; 0x21
   1c6e4:	cmp	r3, #93	; 0x5d
   1c6e8:	bhi	1c6f4 <__assert_fail@plt+0xb200>
   1c6ec:	mov	r3, #1
   1c6f0:	b	1c6f8 <__assert_fail@plt+0xb204>
   1c6f4:	mov	r3, #0
   1c6f8:	mov	r0, r3
   1c6fc:	add	sp, fp, #0
   1c700:	pop	{fp}		; (ldr fp, [sp], #4)
   1c704:	bx	lr
   1c708:	push	{fp}		; (str fp, [sp, #-4]!)
   1c70c:	add	fp, sp, #0
   1c710:	sub	sp, sp, #12
   1c714:	str	r0, [fp, #-8]
   1c718:	ldr	r3, [fp, #-8]
   1c71c:	sub	r3, r3, #97	; 0x61
   1c720:	cmp	r3, #25
   1c724:	bhi	1c730 <__assert_fail@plt+0xb23c>
   1c728:	mov	r3, #1
   1c72c:	b	1c734 <__assert_fail@plt+0xb240>
   1c730:	mov	r3, #0
   1c734:	mov	r0, r3
   1c738:	add	sp, fp, #0
   1c73c:	pop	{fp}		; (ldr fp, [sp], #4)
   1c740:	bx	lr
   1c744:	push	{fp}		; (str fp, [sp, #-4]!)
   1c748:	add	fp, sp, #0
   1c74c:	sub	sp, sp, #12
   1c750:	str	r0, [fp, #-8]
   1c754:	ldr	r3, [fp, #-8]
   1c758:	sub	r3, r3, #32
   1c75c:	cmp	r3, #94	; 0x5e
   1c760:	bhi	1c76c <__assert_fail@plt+0xb278>
   1c764:	mov	r3, #1
   1c768:	b	1c770 <__assert_fail@plt+0xb27c>
   1c76c:	mov	r3, #0
   1c770:	mov	r0, r3
   1c774:	add	sp, fp, #0
   1c778:	pop	{fp}		; (ldr fp, [sp], #4)
   1c77c:	bx	lr
   1c780:	push	{fp}		; (str fp, [sp, #-4]!)
   1c784:	add	fp, sp, #0
   1c788:	sub	sp, sp, #12
   1c78c:	str	r0, [fp, #-8]
   1c790:	ldr	r3, [fp, #-8]
   1c794:	cmp	r3, #64	; 0x40
   1c798:	bgt	1c7bc <__assert_fail@plt+0xb2c8>
   1c79c:	ldr	r3, [fp, #-8]
   1c7a0:	cmp	r3, #58	; 0x3a
   1c7a4:	bge	1c7e4 <__assert_fail@plt+0xb2f0>
   1c7a8:	ldr	r3, [fp, #-8]
   1c7ac:	sub	r3, r3, #33	; 0x21
   1c7b0:	cmp	r3, #14
   1c7b4:	bhi	1c7ec <__assert_fail@plt+0xb2f8>
   1c7b8:	b	1c7e4 <__assert_fail@plt+0xb2f0>
   1c7bc:	ldr	r3, [fp, #-8]
   1c7c0:	cmp	r3, #91	; 0x5b
   1c7c4:	blt	1c7ec <__assert_fail@plt+0xb2f8>
   1c7c8:	ldr	r3, [fp, #-8]
   1c7cc:	cmp	r3, #96	; 0x60
   1c7d0:	ble	1c7e4 <__assert_fail@plt+0xb2f0>
   1c7d4:	ldr	r3, [fp, #-8]
   1c7d8:	sub	r3, r3, #123	; 0x7b
   1c7dc:	cmp	r3, #3
   1c7e0:	bhi	1c7ec <__assert_fail@plt+0xb2f8>
   1c7e4:	mov	r3, #1
   1c7e8:	b	1c7f0 <__assert_fail@plt+0xb2fc>
   1c7ec:	mov	r3, #0
   1c7f0:	mov	r0, r3
   1c7f4:	add	sp, fp, #0
   1c7f8:	pop	{fp}		; (ldr fp, [sp], #4)
   1c7fc:	bx	lr
   1c800:	push	{fp}		; (str fp, [sp, #-4]!)
   1c804:	add	fp, sp, #0
   1c808:	sub	sp, sp, #12
   1c80c:	str	r0, [fp, #-8]
   1c810:	ldr	r3, [fp, #-8]
   1c814:	cmp	r3, #9
   1c818:	blt	1c83c <__assert_fail@plt+0xb348>
   1c81c:	ldr	r3, [fp, #-8]
   1c820:	cmp	r3, #13
   1c824:	ble	1c834 <__assert_fail@plt+0xb340>
   1c828:	ldr	r3, [fp, #-8]
   1c82c:	cmp	r3, #32
   1c830:	bne	1c83c <__assert_fail@plt+0xb348>
   1c834:	mov	r3, #1
   1c838:	b	1c840 <__assert_fail@plt+0xb34c>
   1c83c:	mov	r3, #0
   1c840:	mov	r0, r3
   1c844:	add	sp, fp, #0
   1c848:	pop	{fp}		; (ldr fp, [sp], #4)
   1c84c:	bx	lr
   1c850:	push	{fp}		; (str fp, [sp, #-4]!)
   1c854:	add	fp, sp, #0
   1c858:	sub	sp, sp, #12
   1c85c:	str	r0, [fp, #-8]
   1c860:	ldr	r3, [fp, #-8]
   1c864:	sub	r3, r3, #65	; 0x41
   1c868:	cmp	r3, #25
   1c86c:	bhi	1c878 <__assert_fail@plt+0xb384>
   1c870:	mov	r3, #1
   1c874:	b	1c87c <__assert_fail@plt+0xb388>
   1c878:	mov	r3, #0
   1c87c:	mov	r0, r3
   1c880:	add	sp, fp, #0
   1c884:	pop	{fp}		; (ldr fp, [sp], #4)
   1c888:	bx	lr
   1c88c:	push	{fp}		; (str fp, [sp, #-4]!)
   1c890:	add	fp, sp, #0
   1c894:	sub	sp, sp, #12
   1c898:	str	r0, [fp, #-8]
   1c89c:	ldr	r3, [fp, #-8]
   1c8a0:	sub	r3, r3, #48	; 0x30
   1c8a4:	cmp	r3, #54	; 0x36
   1c8a8:	ldrls	pc, [pc, r3, lsl #2]
   1c8ac:	b	1c994 <__assert_fail@plt+0xb4a0>
   1c8b0:	andeq	ip, r1, ip, lsl #19
   1c8b4:	andeq	ip, r1, ip, lsl #19
   1c8b8:	andeq	ip, r1, ip, lsl #19
   1c8bc:	andeq	ip, r1, ip, lsl #19
   1c8c0:	andeq	ip, r1, ip, lsl #19
   1c8c4:	andeq	ip, r1, ip, lsl #19
   1c8c8:	andeq	ip, r1, ip, lsl #19
   1c8cc:	andeq	ip, r1, ip, lsl #19
   1c8d0:	andeq	ip, r1, ip, lsl #19
   1c8d4:	andeq	ip, r1, ip, lsl #19
   1c8d8:	muleq	r1, r4, r9
   1c8dc:	muleq	r1, r4, r9
   1c8e0:	muleq	r1, r4, r9
   1c8e4:	muleq	r1, r4, r9
   1c8e8:	muleq	r1, r4, r9
   1c8ec:	muleq	r1, r4, r9
   1c8f0:	muleq	r1, r4, r9
   1c8f4:	andeq	ip, r1, ip, lsl #19
   1c8f8:	andeq	ip, r1, ip, lsl #19
   1c8fc:	andeq	ip, r1, ip, lsl #19
   1c900:	andeq	ip, r1, ip, lsl #19
   1c904:	andeq	ip, r1, ip, lsl #19
   1c908:	andeq	ip, r1, ip, lsl #19
   1c90c:	muleq	r1, r4, r9
   1c910:	muleq	r1, r4, r9
   1c914:	muleq	r1, r4, r9
   1c918:	muleq	r1, r4, r9
   1c91c:	muleq	r1, r4, r9
   1c920:	muleq	r1, r4, r9
   1c924:	muleq	r1, r4, r9
   1c928:	muleq	r1, r4, r9
   1c92c:	muleq	r1, r4, r9
   1c930:	muleq	r1, r4, r9
   1c934:	muleq	r1, r4, r9
   1c938:	muleq	r1, r4, r9
   1c93c:	muleq	r1, r4, r9
   1c940:	muleq	r1, r4, r9
   1c944:	muleq	r1, r4, r9
   1c948:	muleq	r1, r4, r9
   1c94c:	muleq	r1, r4, r9
   1c950:	muleq	r1, r4, r9
   1c954:	muleq	r1, r4, r9
   1c958:	muleq	r1, r4, r9
   1c95c:	muleq	r1, r4, r9
   1c960:	muleq	r1, r4, r9
   1c964:	muleq	r1, r4, r9
   1c968:	muleq	r1, r4, r9
   1c96c:	muleq	r1, r4, r9
   1c970:	muleq	r1, r4, r9
   1c974:	andeq	ip, r1, ip, lsl #19
   1c978:	andeq	ip, r1, ip, lsl #19
   1c97c:	andeq	ip, r1, ip, lsl #19
   1c980:	andeq	ip, r1, ip, lsl #19
   1c984:	andeq	ip, r1, ip, lsl #19
   1c988:	andeq	ip, r1, ip, lsl #19
   1c98c:	mov	r3, #1
   1c990:	b	1c998 <__assert_fail@plt+0xb4a4>
   1c994:	mov	r3, #0
   1c998:	mov	r0, r3
   1c99c:	add	sp, fp, #0
   1c9a0:	pop	{fp}		; (ldr fp, [sp], #4)
   1c9a4:	bx	lr
   1c9a8:	push	{fp}		; (str fp, [sp, #-4]!)
   1c9ac:	add	fp, sp, #0
   1c9b0:	sub	sp, sp, #12
   1c9b4:	str	r0, [fp, #-8]
   1c9b8:	ldr	r3, [fp, #-8]
   1c9bc:	sub	r3, r3, #65	; 0x41
   1c9c0:	cmp	r3, #25
   1c9c4:	bhi	1c9d4 <__assert_fail@plt+0xb4e0>
   1c9c8:	ldr	r3, [fp, #-8]
   1c9cc:	add	r3, r3, #32
   1c9d0:	b	1c9d8 <__assert_fail@plt+0xb4e4>
   1c9d4:	ldr	r3, [fp, #-8]
   1c9d8:	mov	r0, r3
   1c9dc:	add	sp, fp, #0
   1c9e0:	pop	{fp}		; (ldr fp, [sp], #4)
   1c9e4:	bx	lr
   1c9e8:	push	{fp}		; (str fp, [sp, #-4]!)
   1c9ec:	add	fp, sp, #0
   1c9f0:	sub	sp, sp, #12
   1c9f4:	str	r0, [fp, #-8]
   1c9f8:	ldr	r3, [fp, #-8]
   1c9fc:	sub	r3, r3, #97	; 0x61
   1ca00:	cmp	r3, #25
   1ca04:	bhi	1ca14 <__assert_fail@plt+0xb520>
   1ca08:	ldr	r3, [fp, #-8]
   1ca0c:	sub	r3, r3, #32
   1ca10:	b	1ca18 <__assert_fail@plt+0xb524>
   1ca14:	ldr	r3, [fp, #-8]
   1ca18:	mov	r0, r3
   1ca1c:	add	sp, fp, #0
   1ca20:	pop	{fp}		; (ldr fp, [sp], #4)
   1ca24:	bx	lr
   1ca28:	push	{r1, r2, r3}
   1ca2c:	str	fp, [sp, #-8]!
   1ca30:	str	lr, [sp, #4]
   1ca34:	add	fp, sp, #4
   1ca38:	sub	sp, sp, #36	; 0x24
   1ca3c:	str	r0, [fp, #-36]	; 0xffffffdc
   1ca40:	mvn	r3, #0
   1ca44:	str	r3, [fp, #-12]
   1ca48:	add	r3, fp, #8
   1ca4c:	str	r3, [fp, #-32]	; 0xffffffe0
   1ca50:	ldr	r3, [fp, #4]
   1ca54:	cmp	r3, #0
   1ca58:	beq	1ca70 <__assert_fail@plt+0xb57c>
   1ca5c:	ldr	r3, [fp, #4]
   1ca60:	movw	r2, #1030	; 0x406
   1ca64:	cmp	r3, r2
   1ca68:	beq	1ca98 <__assert_fail@plt+0xb5a4>
   1ca6c:	b	1cac0 <__assert_fail@plt+0xb5cc>
   1ca70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ca74:	add	r2, r3, #4
   1ca78:	str	r2, [fp, #-32]	; 0xffffffe0
   1ca7c:	ldr	r3, [r3]
   1ca80:	str	r3, [fp, #-16]
   1ca84:	ldr	r1, [fp, #-16]
   1ca88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ca8c:	bl	1cc6c <__assert_fail@plt+0xb778>
   1ca90:	str	r0, [fp, #-12]
   1ca94:	b	1cc4c <__assert_fail@plt+0xb758>
   1ca98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ca9c:	add	r2, r3, #4
   1caa0:	str	r2, [fp, #-32]	; 0xffffffe0
   1caa4:	ldr	r3, [r3]
   1caa8:	str	r3, [fp, #-20]	; 0xffffffec
   1caac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cab0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cab4:	bl	1ccb0 <__assert_fail@plt+0xb7bc>
   1cab8:	str	r0, [fp, #-12]
   1cabc:	b	1cc4c <__assert_fail@plt+0xb758>
   1cac0:	ldr	r3, [fp, #4]
   1cac4:	cmp	r3, #11
   1cac8:	beq	1cbdc <__assert_fail@plt+0xb6e8>
   1cacc:	ldr	r3, [fp, #4]
   1cad0:	cmp	r3, #11
   1cad4:	bgt	1cb5c <__assert_fail@plt+0xb668>
   1cad8:	ldr	r3, [fp, #4]
   1cadc:	cmp	r3, #3
   1cae0:	beq	1cbdc <__assert_fail@plt+0xb6e8>
   1cae4:	ldr	r3, [fp, #4]
   1cae8:	cmp	r3, #3
   1caec:	bgt	1cb18 <__assert_fail@plt+0xb624>
   1caf0:	ldr	r3, [fp, #4]
   1caf4:	cmp	r3, #1
   1caf8:	beq	1cbdc <__assert_fail@plt+0xb6e8>
   1cafc:	ldr	r3, [fp, #4]
   1cb00:	cmp	r3, #1
   1cb04:	bgt	1cbf0 <__assert_fail@plt+0xb6fc>
   1cb08:	ldr	r3, [fp, #4]
   1cb0c:	cmp	r3, #0
   1cb10:	beq	1cbf0 <__assert_fail@plt+0xb6fc>
   1cb14:	b	1cc1c <__assert_fail@plt+0xb728>
   1cb18:	ldr	r3, [fp, #4]
   1cb1c:	cmp	r3, #8
   1cb20:	beq	1cbf0 <__assert_fail@plt+0xb6fc>
   1cb24:	ldr	r3, [fp, #4]
   1cb28:	cmp	r3, #8
   1cb2c:	bgt	1cb40 <__assert_fail@plt+0xb64c>
   1cb30:	ldr	r3, [fp, #4]
   1cb34:	cmp	r3, #4
   1cb38:	beq	1cbf0 <__assert_fail@plt+0xb6fc>
   1cb3c:	b	1cc1c <__assert_fail@plt+0xb728>
   1cb40:	ldr	r3, [fp, #4]
   1cb44:	cmp	r3, #9
   1cb48:	beq	1cbdc <__assert_fail@plt+0xb6e8>
   1cb4c:	ldr	r3, [fp, #4]
   1cb50:	cmp	r3, #10
   1cb54:	beq	1cbf0 <__assert_fail@plt+0xb6fc>
   1cb58:	b	1cc1c <__assert_fail@plt+0xb728>
   1cb5c:	ldr	r3, [fp, #4]
   1cb60:	movw	r2, #1031	; 0x407
   1cb64:	cmp	r3, r2
   1cb68:	bgt	1cbac <__assert_fail@plt+0xb6b8>
   1cb6c:	ldr	r3, [fp, #4]
   1cb70:	movw	r2, #1030	; 0x406
   1cb74:	cmp	r3, r2
   1cb78:	bge	1cbf0 <__assert_fail@plt+0xb6fc>
   1cb7c:	ldr	r3, [fp, #4]
   1cb80:	movw	r2, #1025	; 0x401
   1cb84:	cmp	r3, r2
   1cb88:	beq	1cbdc <__assert_fail@plt+0xb6e8>
   1cb8c:	ldr	r3, [fp, #4]
   1cb90:	movw	r2, #1026	; 0x402
   1cb94:	cmp	r3, r2
   1cb98:	beq	1cbf0 <__assert_fail@plt+0xb6fc>
   1cb9c:	ldr	r3, [fp, #4]
   1cba0:	cmp	r3, #1024	; 0x400
   1cba4:	beq	1cbf0 <__assert_fail@plt+0xb6fc>
   1cba8:	b	1cc1c <__assert_fail@plt+0xb728>
   1cbac:	ldr	r3, [fp, #4]
   1cbb0:	movw	r2, #1033	; 0x409
   1cbb4:	cmp	r3, r2
   1cbb8:	beq	1cbf0 <__assert_fail@plt+0xb6fc>
   1cbbc:	ldr	r3, [fp, #4]
   1cbc0:	movw	r2, #1033	; 0x409
   1cbc4:	cmp	r3, r2
   1cbc8:	blt	1cbdc <__assert_fail@plt+0xb6e8>
   1cbcc:	ldr	r3, [fp, #4]
   1cbd0:	movw	r2, #1034	; 0x40a
   1cbd4:	cmp	r3, r2
   1cbd8:	bne	1cc1c <__assert_fail@plt+0xb728>
   1cbdc:	ldr	r1, [fp, #4]
   1cbe0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cbe4:	bl	11434 <fcntl64@plt>
   1cbe8:	str	r0, [fp, #-12]
   1cbec:	b	1cc48 <__assert_fail@plt+0xb754>
   1cbf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cbf4:	add	r2, r3, #4
   1cbf8:	str	r2, [fp, #-32]	; 0xffffffe0
   1cbfc:	ldr	r3, [r3]
   1cc00:	str	r3, [fp, #-24]	; 0xffffffe8
   1cc04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cc08:	ldr	r1, [fp, #4]
   1cc0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cc10:	bl	11434 <fcntl64@plt>
   1cc14:	str	r0, [fp, #-12]
   1cc18:	b	1cc48 <__assert_fail@plt+0xb754>
   1cc1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cc20:	add	r2, r3, #4
   1cc24:	str	r2, [fp, #-32]	; 0xffffffe0
   1cc28:	ldr	r3, [r3]
   1cc2c:	str	r3, [fp, #-28]	; 0xffffffe4
   1cc30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cc34:	ldr	r1, [fp, #4]
   1cc38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cc3c:	bl	11434 <fcntl64@plt>
   1cc40:	str	r0, [fp, #-12]
   1cc44:	nop	{0}
   1cc48:	nop	{0}
   1cc4c:	ldr	r3, [fp, #-12]
   1cc50:	mov	r0, r3
   1cc54:	sub	sp, fp, #4
   1cc58:	ldr	fp, [sp]
   1cc5c:	ldr	lr, [sp, #4]
   1cc60:	add	sp, sp, #8
   1cc64:	add	sp, sp, #12
   1cc68:	bx	lr
   1cc6c:	str	fp, [sp, #-8]!
   1cc70:	str	lr, [sp, #4]
   1cc74:	add	fp, sp, #4
   1cc78:	sub	sp, sp, #16
   1cc7c:	str	r0, [fp, #-16]
   1cc80:	str	r1, [fp, #-20]	; 0xffffffec
   1cc84:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cc88:	mov	r1, #0
   1cc8c:	ldr	r0, [fp, #-16]
   1cc90:	bl	11434 <fcntl64@plt>
   1cc94:	str	r0, [fp, #-8]
   1cc98:	ldr	r3, [fp, #-8]
   1cc9c:	mov	r0, r3
   1cca0:	sub	sp, fp, #4
   1cca4:	ldr	fp, [sp]
   1cca8:	add	sp, sp, #4
   1ccac:	pop	{pc}		; (ldr pc, [sp], #4)
   1ccb0:	str	fp, [sp, #-8]!
   1ccb4:	str	lr, [sp, #4]
   1ccb8:	add	fp, sp, #4
   1ccbc:	sub	sp, sp, #24
   1ccc0:	str	r0, [fp, #-24]	; 0xffffffe8
   1ccc4:	str	r1, [fp, #-28]	; 0xffffffe4
   1ccc8:	movw	r3, #63072	; 0xf660
   1cccc:	movt	r3, #2
   1ccd0:	ldr	r3, [r3]
   1ccd4:	cmp	r3, #0
   1ccd8:	blt	1cd54 <__assert_fail@plt+0xb860>
   1ccdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cce0:	movw	r1, #1030	; 0x406
   1cce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cce8:	bl	11434 <fcntl64@plt>
   1ccec:	str	r0, [fp, #-8]
   1ccf0:	ldr	r3, [fp, #-8]
   1ccf4:	cmp	r3, #0
   1ccf8:	bge	1cd10 <__assert_fail@plt+0xb81c>
   1ccfc:	bl	113bc <__errno_location@plt>
   1cd00:	mov	r3, r0
   1cd04:	ldr	r3, [r3]
   1cd08:	cmp	r3, #22
   1cd0c:	beq	1cd24 <__assert_fail@plt+0xb830>
   1cd10:	movw	r3, #63072	; 0xf660
   1cd14:	movt	r3, #2
   1cd18:	mov	r2, #1
   1cd1c:	str	r2, [r3]
   1cd20:	b	1cd64 <__assert_fail@plt+0xb870>
   1cd24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cd28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd2c:	bl	1cc6c <__assert_fail@plt+0xb778>
   1cd30:	str	r0, [fp, #-8]
   1cd34:	ldr	r3, [fp, #-8]
   1cd38:	cmp	r3, #0
   1cd3c:	blt	1cd64 <__assert_fail@plt+0xb870>
   1cd40:	movw	r3, #63072	; 0xf660
   1cd44:	movt	r3, #2
   1cd48:	mvn	r2, #0
   1cd4c:	str	r2, [r3]
   1cd50:	b	1cd64 <__assert_fail@plt+0xb870>
   1cd54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cd58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd5c:	bl	1cc6c <__assert_fail@plt+0xb778>
   1cd60:	str	r0, [fp, #-8]
   1cd64:	ldr	r3, [fp, #-8]
   1cd68:	cmp	r3, #0
   1cd6c:	blt	1cdf4 <__assert_fail@plt+0xb900>
   1cd70:	movw	r3, #63072	; 0xf660
   1cd74:	movt	r3, #2
   1cd78:	ldr	r3, [r3]
   1cd7c:	cmn	r3, #1
   1cd80:	bne	1cdf4 <__assert_fail@plt+0xb900>
   1cd84:	mov	r1, #1
   1cd88:	ldr	r0, [fp, #-8]
   1cd8c:	bl	11434 <fcntl64@plt>
   1cd90:	str	r0, [fp, #-12]
   1cd94:	ldr	r3, [fp, #-12]
   1cd98:	cmp	r3, #0
   1cd9c:	blt	1cdc4 <__assert_fail@plt+0xb8d0>
   1cda0:	ldr	r3, [fp, #-12]
   1cda4:	orr	r3, r3, #1
   1cda8:	mov	r2, r3
   1cdac:	mov	r1, #2
   1cdb0:	ldr	r0, [fp, #-8]
   1cdb4:	bl	11434 <fcntl64@plt>
   1cdb8:	mov	r3, r0
   1cdbc:	cmn	r3, #1
   1cdc0:	bne	1cdf4 <__assert_fail@plt+0xb900>
   1cdc4:	bl	113bc <__errno_location@plt>
   1cdc8:	mov	r3, r0
   1cdcc:	ldr	r3, [r3]
   1cdd0:	str	r3, [fp, #-16]
   1cdd4:	ldr	r0, [fp, #-8]
   1cdd8:	bl	114dc <close@plt>
   1cddc:	bl	113bc <__errno_location@plt>
   1cde0:	mov	r2, r0
   1cde4:	ldr	r3, [fp, #-16]
   1cde8:	str	r3, [r2]
   1cdec:	mvn	r3, #0
   1cdf0:	str	r3, [fp, #-8]
   1cdf4:	ldr	r3, [fp, #-8]
   1cdf8:	mov	r0, r3
   1cdfc:	sub	sp, fp, #4
   1ce00:	ldr	fp, [sp]
   1ce04:	add	sp, sp, #4
   1ce08:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce0c:	str	fp, [sp, #-8]!
   1ce10:	str	lr, [sp, #4]
   1ce14:	add	fp, sp, #4
   1ce18:	sub	sp, sp, #272	; 0x110
   1ce1c:	str	r0, [fp, #-272]	; 0xfffffef0
   1ce20:	sub	r3, fp, #264	; 0x108
   1ce24:	movw	r2, #257	; 0x101
   1ce28:	mov	r1, r3
   1ce2c:	ldr	r0, [fp, #-272]	; 0xfffffef0
   1ce30:	bl	1cfd0 <__assert_fail@plt+0xbadc>
   1ce34:	mov	r3, r0
   1ce38:	cmp	r3, #0
   1ce3c:	beq	1ce48 <__assert_fail@plt+0xb954>
   1ce40:	mov	r3, #0
   1ce44:	b	1ce9c <__assert_fail@plt+0xb9a8>
   1ce48:	sub	r3, fp, #264	; 0x108
   1ce4c:	movw	r1, #59896	; 0xe9f8
   1ce50:	movt	r1, #1
   1ce54:	mov	r0, r3
   1ce58:	bl	11170 <strcmp@plt>
   1ce5c:	mov	r3, r0
   1ce60:	cmp	r3, #0
   1ce64:	beq	1ce90 <__assert_fail@plt+0xb99c>
   1ce68:	sub	r3, fp, #264	; 0x108
   1ce6c:	movw	r1, #59900	; 0xe9fc
   1ce70:	movt	r1, #1
   1ce74:	mov	r0, r3
   1ce78:	bl	11170 <strcmp@plt>
   1ce7c:	mov	r3, r0
   1ce80:	cmp	r3, #0
   1ce84:	beq	1ce90 <__assert_fail@plt+0xb99c>
   1ce88:	mov	r3, #1
   1ce8c:	b	1ce94 <__assert_fail@plt+0xb9a0>
   1ce90:	mov	r3, #0
   1ce94:	and	r3, r3, #1
   1ce98:	uxtb	r3, r3
   1ce9c:	mov	r0, r3
   1cea0:	sub	sp, fp, #4
   1cea4:	ldr	fp, [sp]
   1cea8:	add	sp, sp, #4
   1ceac:	pop	{pc}		; (ldr pc, [sp], #4)
   1ceb0:	str	fp, [sp, #-8]!
   1ceb4:	str	lr, [sp, #4]
   1ceb8:	add	fp, sp, #4
   1cebc:	sub	sp, sp, #16
   1cec0:	str	r0, [fp, #-16]
   1cec4:	mov	r1, #0
   1cec8:	ldr	r0, [fp, #-16]
   1cecc:	bl	11440 <setlocale@plt>
   1ced0:	str	r0, [fp, #-8]
   1ced4:	ldr	r3, [fp, #-8]
   1ced8:	mov	r0, r3
   1cedc:	sub	sp, fp, #4
   1cee0:	ldr	fp, [sp]
   1cee4:	add	sp, sp, #4
   1cee8:	pop	{pc}		; (ldr pc, [sp], #4)
   1ceec:	str	fp, [sp, #-8]!
   1cef0:	str	lr, [sp, #4]
   1cef4:	add	fp, sp, #4
   1cef8:	sub	sp, sp, #24
   1cefc:	str	r0, [fp, #-16]
   1cf00:	str	r1, [fp, #-20]	; 0xffffffec
   1cf04:	str	r2, [fp, #-24]	; 0xffffffe8
   1cf08:	ldr	r0, [fp, #-16]
   1cf0c:	bl	1ceb0 <__assert_fail@plt+0xb9bc>
   1cf10:	str	r0, [fp, #-8]
   1cf14:	ldr	r3, [fp, #-8]
   1cf18:	cmp	r3, #0
   1cf1c:	bne	1cf40 <__assert_fail@plt+0xba4c>
   1cf20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf24:	cmp	r3, #0
   1cf28:	beq	1cf38 <__assert_fail@plt+0xba44>
   1cf2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf30:	mov	r2, #0
   1cf34:	strb	r2, [r3]
   1cf38:	mov	r3, #22
   1cf3c:	b	1cfbc <__assert_fail@plt+0xbac8>
   1cf40:	ldr	r0, [fp, #-8]
   1cf44:	bl	11368 <strlen@plt>
   1cf48:	str	r0, [fp, #-12]
   1cf4c:	ldr	r2, [fp, #-12]
   1cf50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf54:	cmp	r2, r3
   1cf58:	bcs	1cf7c <__assert_fail@plt+0xba88>
   1cf5c:	ldr	r3, [fp, #-12]
   1cf60:	add	r3, r3, #1
   1cf64:	mov	r2, r3
   1cf68:	ldr	r1, [fp, #-8]
   1cf6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf70:	bl	111dc <memcpy@plt>
   1cf74:	mov	r3, #0
   1cf78:	b	1cfbc <__assert_fail@plt+0xbac8>
   1cf7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf80:	cmp	r3, #0
   1cf84:	beq	1cfb8 <__assert_fail@plt+0xbac4>
   1cf88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf8c:	sub	r3, r3, #1
   1cf90:	mov	r2, r3
   1cf94:	ldr	r1, [fp, #-8]
   1cf98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf9c:	bl	111dc <memcpy@plt>
   1cfa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cfa4:	sub	r3, r3, #1
   1cfa8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cfac:	add	r3, r2, r3
   1cfb0:	mov	r2, #0
   1cfb4:	strb	r2, [r3]
   1cfb8:	mov	r3, #34	; 0x22
   1cfbc:	mov	r0, r3
   1cfc0:	sub	sp, fp, #4
   1cfc4:	ldr	fp, [sp]
   1cfc8:	add	sp, sp, #4
   1cfcc:	pop	{pc}		; (ldr pc, [sp], #4)
   1cfd0:	str	fp, [sp, #-8]!
   1cfd4:	str	lr, [sp, #4]
   1cfd8:	add	fp, sp, #4
   1cfdc:	sub	sp, sp, #16
   1cfe0:	str	r0, [fp, #-8]
   1cfe4:	str	r1, [fp, #-12]
   1cfe8:	str	r2, [fp, #-16]
   1cfec:	ldr	r2, [fp, #-16]
   1cff0:	ldr	r1, [fp, #-12]
   1cff4:	ldr	r0, [fp, #-8]
   1cff8:	bl	1ceec <__assert_fail@plt+0xb9f8>
   1cffc:	mov	r3, r0
   1d000:	mov	r0, r3
   1d004:	sub	sp, fp, #4
   1d008:	ldr	fp, [sp]
   1d00c:	add	sp, sp, #4
   1d010:	pop	{pc}		; (ldr pc, [sp], #4)
   1d014:	str	fp, [sp, #-8]!
   1d018:	str	lr, [sp, #4]
   1d01c:	add	fp, sp, #4
   1d020:	sub	sp, sp, #8
   1d024:	str	r0, [fp, #-8]
   1d028:	ldr	r0, [fp, #-8]
   1d02c:	bl	1ceb0 <__assert_fail@plt+0xb9bc>
   1d030:	mov	r3, r0
   1d034:	mov	r0, r3
   1d038:	sub	sp, fp, #4
   1d03c:	ldr	fp, [sp]
   1d040:	add	sp, sp, #4
   1d044:	pop	{pc}		; (ldr pc, [sp], #4)
   1d048:	cmp	r3, #0
   1d04c:	cmpeq	r2, #0
   1d050:	bne	1d068 <__assert_fail@plt+0xbb74>
   1d054:	cmp	r1, #0
   1d058:	cmpeq	r0, #0
   1d05c:	mvnne	r1, #0
   1d060:	mvnne	r0, #0
   1d064:	b	1d084 <__assert_fail@plt+0xbb90>
   1d068:	sub	sp, sp, #8
   1d06c:	push	{sp, lr}
   1d070:	bl	1d094 <__assert_fail@plt+0xbba0>
   1d074:	ldr	lr, [sp, #4]
   1d078:	add	sp, sp, #8
   1d07c:	pop	{r2, r3}
   1d080:	bx	lr
   1d084:	push	{r1, lr}
   1d088:	mov	r0, #8
   1d08c:	bl	11164 <raise@plt>
   1d090:	pop	{r1, pc}
   1d094:	cmp	r1, r3
   1d098:	cmpeq	r0, r2
   1d09c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d0a0:	mov	r4, r0
   1d0a4:	movcc	r0, #0
   1d0a8:	mov	r5, r1
   1d0ac:	ldr	lr, [sp, #36]	; 0x24
   1d0b0:	movcc	r1, r0
   1d0b4:	bcc	1d1b0 <__assert_fail@plt+0xbcbc>
   1d0b8:	cmp	r3, #0
   1d0bc:	clzeq	ip, r2
   1d0c0:	clzne	ip, r3
   1d0c4:	addeq	ip, ip, #32
   1d0c8:	cmp	r5, #0
   1d0cc:	clzeq	r1, r4
   1d0d0:	addeq	r1, r1, #32
   1d0d4:	clzne	r1, r5
   1d0d8:	sub	ip, ip, r1
   1d0dc:	sub	sl, ip, #32
   1d0e0:	lsl	r9, r3, ip
   1d0e4:	rsb	fp, ip, #32
   1d0e8:	orr	r9, r9, r2, lsl sl
   1d0ec:	orr	r9, r9, r2, lsr fp
   1d0f0:	lsl	r8, r2, ip
   1d0f4:	cmp	r5, r9
   1d0f8:	cmpeq	r4, r8
   1d0fc:	movcc	r0, #0
   1d100:	movcc	r1, r0
   1d104:	bcc	1d120 <__assert_fail@plt+0xbc2c>
   1d108:	mov	r0, #1
   1d10c:	subs	r4, r4, r8
   1d110:	lsl	r1, r0, sl
   1d114:	orr	r1, r1, r0, lsr fp
   1d118:	lsl	r0, r0, ip
   1d11c:	sbc	r5, r5, r9
   1d120:	cmp	ip, #0
   1d124:	beq	1d1b0 <__assert_fail@plt+0xbcbc>
   1d128:	lsr	r6, r8, #1
   1d12c:	orr	r6, r6, r9, lsl #31
   1d130:	lsr	r7, r9, #1
   1d134:	mov	r2, ip
   1d138:	b	1d15c <__assert_fail@plt+0xbc68>
   1d13c:	subs	r3, r4, r6
   1d140:	sbc	r8, r5, r7
   1d144:	adds	r3, r3, r3
   1d148:	adc	r8, r8, r8
   1d14c:	adds	r4, r3, #1
   1d150:	adc	r5, r8, #0
   1d154:	subs	r2, r2, #1
   1d158:	beq	1d178 <__assert_fail@plt+0xbc84>
   1d15c:	cmp	r5, r7
   1d160:	cmpeq	r4, r6
   1d164:	bcs	1d13c <__assert_fail@plt+0xbc48>
   1d168:	adds	r4, r4, r4
   1d16c:	adc	r5, r5, r5
   1d170:	subs	r2, r2, #1
   1d174:	bne	1d15c <__assert_fail@plt+0xbc68>
   1d178:	lsr	r3, r4, ip
   1d17c:	orr	r3, r3, r5, lsl fp
   1d180:	lsr	r2, r5, ip
   1d184:	orr	r3, r3, r5, lsr sl
   1d188:	adds	r0, r0, r4
   1d18c:	mov	r4, r3
   1d190:	lsl	r3, r2, ip
   1d194:	orr	r3, r3, r4, lsl sl
   1d198:	lsl	ip, r4, ip
   1d19c:	orr	r3, r3, r4, lsr fp
   1d1a0:	adc	r1, r1, r5
   1d1a4:	subs	r0, r0, ip
   1d1a8:	mov	r5, r2
   1d1ac:	sbc	r1, r1, r3
   1d1b0:	cmp	lr, #0
   1d1b4:	strdne	r4, [lr]
   1d1b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d1bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d1c0:	mov	r7, r0
   1d1c4:	ldr	r6, [pc, #72]	; 1d214 <__assert_fail@plt+0xbd20>
   1d1c8:	ldr	r5, [pc, #72]	; 1d218 <__assert_fail@plt+0xbd24>
   1d1cc:	add	r6, pc, r6
   1d1d0:	add	r5, pc, r5
   1d1d4:	sub	r6, r6, r5
   1d1d8:	mov	r8, r1
   1d1dc:	mov	r9, r2
   1d1e0:	bl	11120 <fdopen@plt-0x20>
   1d1e4:	asrs	r6, r6, #2
   1d1e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d1ec:	mov	r4, #0
   1d1f0:	add	r4, r4, #1
   1d1f4:	ldr	r3, [r5], #4
   1d1f8:	mov	r2, r9
   1d1fc:	mov	r1, r8
   1d200:	mov	r0, r7
   1d204:	blx	r3
   1d208:	cmp	r6, r4
   1d20c:	bne	1d1f0 <__assert_fail@plt+0xbcfc>
   1d210:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d214:	andeq	r1, r1, r0, asr #26
   1d218:	andeq	r1, r1, r8, lsr sp
   1d21c:	bx	lr
   1d220:	ldr	r3, [pc, #12]	; 1d234 <__assert_fail@plt+0xbd40>
   1d224:	mov	r1, #0
   1d228:	add	r3, pc, r3
   1d22c:	ldr	r2, [r3]
   1d230:	b	113c8 <__cxa_atexit@plt>
   1d234:	andeq	r1, r1, r4, lsr #30
   1d238:	mov	r2, r1
   1d23c:	mov	r1, r0
   1d240:	mov	r0, #3
   1d244:	b	11260 <__fxstat64@plt>

Disassembly of section .fini:

0001d248 <.fini>:
   1d248:	push	{r3, lr}
   1d24c:	pop	{r3, pc}
