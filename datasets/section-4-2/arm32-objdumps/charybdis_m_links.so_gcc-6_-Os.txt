
../repos/charybdis/modules/.libs/m_links.so:     file format elf32-littlearm


Disassembly of section .init:

0000056c <_init>:
 56c:	push	{r3, lr}
 570:	bl	5f8 <call_weak_fn>
 574:	pop	{r3, pc}

Disassembly of section .plt:

00000578 <.plt>:
 578:	push	{lr}		; (str lr, [sp, #-4]!)
 57c:	ldr	lr, [pc, #4]	; 588 <.plt+0x10>
 580:	add	lr, pc, lr
 584:	ldr	pc, [lr, #8]!
 588:	.word	0x00010a78

0000058c <__cxa_finalize@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2680]!	; 0xa78

00000598 <scache_send_flattened_links@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2672]!	; 0xa70

000005a4 <hunt_server@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2664]!	; 0xa68

000005b0 <__gmon_start__@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2656]!	; 0xa60

000005bc <sendto_one_numeric@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2648]!	; 0xa58

000005c8 <strlen@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2640]!	; 0xa50

000005d4 <collapse@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2632]!	; 0xa48

000005e0 <match@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2624]!	; 0xa40

000005ec <call_hook@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2616]!	; 0xa38

Disassembly of section .text:

000005f8 <call_weak_fn>:
 5f8:	ldr	r3, [pc, #20]	; 614 <call_weak_fn+0x1c>
 5fc:	ldr	r2, [pc, #20]	; 618 <call_weak_fn+0x20>
 600:	add	r3, pc, r3
 604:	ldr	r2, [r3, r2]
 608:	cmp	r2, #0
 60c:	bxeq	lr
 610:	b	5b0 <__gmon_start__@plt>
 614:	.word	0x000109f8
 618:	.word	0x00000040

0000061c <deregister_tm_clones>:
 61c:	ldr	r3, [pc, #52]	; 658 <deregister_tm_clones+0x3c>
 620:	ldr	r0, [pc, #52]	; 65c <deregister_tm_clones+0x40>
 624:	add	r3, pc, r3
 628:	add	r0, pc, r0
 62c:	add	r3, r3, #3
 630:	sub	r3, r3, r0
 634:	cmp	r3, #6
 638:	ldr	r3, [pc, #32]	; 660 <deregister_tm_clones+0x44>
 63c:	add	r3, pc, r3
 640:	bxls	lr
 644:	ldr	r2, [pc, #24]	; 664 <deregister_tm_clones+0x48>
 648:	ldr	r3, [r3, r2]
 64c:	cmp	r3, #0
 650:	bxeq	lr
 654:	bx	r3
 658:	.word	0x00010ab0
 65c:	.word	0x00010aac
 660:	.word	0x000109bc
 664:	.word	0x00000038

00000668 <register_tm_clones>:
 668:	ldr	r1, [pc, #56]	; 6a8 <register_tm_clones+0x40>
 66c:	ldr	r0, [pc, #56]	; 6ac <register_tm_clones+0x44>
 670:	add	r1, pc, r1
 674:	add	r0, pc, r0
 678:	sub	r1, r1, r0
 67c:	ldr	r3, [pc, #44]	; 6b0 <register_tm_clones+0x48>
 680:	asr	r1, r1, #2
 684:	add	r3, pc, r3
 688:	add	r1, r1, r1, lsr #31
 68c:	asrs	r1, r1, #1
 690:	bxeq	lr
 694:	ldr	r2, [pc, #24]	; 6b4 <register_tm_clones+0x4c>
 698:	ldr	r3, [r3, r2]
 69c:	cmp	r3, #0
 6a0:	bxeq	lr
 6a4:	bx	r3
 6a8:	.word	0x00010a64
 6ac:	.word	0x00010a60
 6b0:	.word	0x00010974
 6b4:	.word	0x00000050

000006b8 <__do_global_dtors_aux>:
 6b8:	ldr	r3, [pc, #76]	; 70c <__do_global_dtors_aux+0x54>
 6bc:	ldr	r2, [pc, #76]	; 710 <__do_global_dtors_aux+0x58>
 6c0:	add	r3, pc, r3
 6c4:	add	r2, pc, r2
 6c8:	ldrb	r3, [r3]
 6cc:	cmp	r3, #0
 6d0:	bxne	lr
 6d4:	ldr	r3, [pc, #56]	; 714 <__do_global_dtors_aux+0x5c>
 6d8:	push	{r4, lr}
 6dc:	ldr	r3, [r2, r3]
 6e0:	cmp	r3, #0
 6e4:	beq	6f4 <__do_global_dtors_aux+0x3c>
 6e8:	ldr	r3, [pc, #40]	; 718 <__do_global_dtors_aux+0x60>
 6ec:	ldr	r0, [pc, r3]
 6f0:	bl	58c <__cxa_finalize@plt>
 6f4:	bl	61c <deregister_tm_clones>
 6f8:	ldr	r3, [pc, #28]	; 71c <__do_global_dtors_aux+0x64>
 6fc:	mov	r2, #1
 700:	add	r3, pc, r3
 704:	strb	r2, [r3]
 708:	pop	{r4, pc}
 70c:	.word	0x00010a14
 710:	.word	0x00010934
 714:	.word	0x00000034
 718:	.word	0x00010960
 71c:	.word	0x000109d4

00000720 <frame_dummy>:
 720:	ldr	r0, [pc, #56]	; 760 <frame_dummy+0x40>
 724:	ldr	r3, [pc, #56]	; 764 <frame_dummy+0x44>
 728:	add	r0, pc, r0
 72c:	ldr	r2, [r0]
 730:	add	r3, pc, r3
 734:	cmp	r2, #0
 738:	bne	740 <frame_dummy+0x20>
 73c:	b	668 <register_tm_clones>
 740:	ldr	r2, [pc, #32]	; 768 <frame_dummy+0x48>
 744:	ldr	r3, [r3, r2]
 748:	cmp	r3, #0
 74c:	beq	73c <frame_dummy+0x1c>
 750:	push	{r4, lr}
 754:	blx	r3
 758:	pop	{r4, lr}
 75c:	b	668 <register_tm_clones>
 760:	.word	0x000107cc
 764:	.word	0x000108c8
 768:	.word	0x00000048

0000076c <mo_links>:
 76c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 770:	sub	sp, sp, #164	; 0xa4
 774:	ldr	r5, [pc, #548]	; 9a0 <mo_links+0x234>
 778:	cmp	r3, #2
 77c:	add	r5, pc, r5
 780:	mov	r6, r2
 784:	ldr	r4, [sp, #200]	; 0xc8
 788:	ble	7d8 <mo_links+0x6c>
 78c:	ldr	r0, [r4, #8]
 790:	mov	r8, r1
 794:	mov	r7, r3
 798:	bl	5c8 <strlen@plt>
 79c:	cmp	r0, #63	; 0x3f
 7a0:	bhi	7d0 <mo_links+0x64>
 7a4:	ldr	r2, [pc, #504]	; 9a4 <mo_links+0x238>
 7a8:	str	r4, [sp, #4]
 7ac:	str	r7, [sp]
 7b0:	mov	r3, #1
 7b4:	add	r2, pc, r2
 7b8:	mov	r1, r6
 7bc:	mov	r0, r8
 7c0:	bl	5a4 <hunt_server@plt>
 7c4:	cmp	r0, #0
 7c8:	ldreq	r4, [r4, #8]
 7cc:	beq	7e4 <mo_links+0x78>
 7d0:	add	sp, sp, #164	; 0xa4
 7d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 7d8:	ldreq	r4, [r4, #4]
 7dc:	ldrne	r4, [pc, #452]	; 9a8 <mo_links+0x23c>
 7e0:	addne	r4, pc, r4
 7e4:	ldrb	r3, [r4]
 7e8:	cmp	r3, #0
 7ec:	beq	848 <mo_links+0xdc>
 7f0:	add	r3, sp, #28
 7f4:	mov	r2, #126	; 0x7e
 7f8:	mov	r0, r3
 7fc:	mov	r7, #94	; 0x5e
 800:	mov	r8, #46	; 0x2e
 804:	ldrb	ip, [r4]
 808:	cmp	ip, #0
 80c:	cmpne	r2, #1
 810:	movls	r1, r3
 814:	bls	838 <mo_links+0xcc>
 818:	tst	ip, #128	; 0x80
 81c:	sub	lr, r2, #1
 820:	beq	8c4 <mo_links+0x158>
 824:	cmp	lr, #1
 828:	add	r1, r3, #1
 82c:	strb	r8, [r3]
 830:	mov	r2, lr
 834:	bne	8fc <mo_links+0x190>
 838:	mov	r3, #0
 83c:	strb	r3, [r1]
 840:	bl	5d4 <collapse@plt>
 844:	mov	r4, r0
 848:	mov	r3, #0
 84c:	str	r3, [sp, #24]
 850:	ldr	r3, [pc, #340]	; 9ac <mo_links+0x240>
 854:	str	r6, [sp, #16]
 858:	str	r4, [sp, #20]
 85c:	ldr	r3, [r5, r3]
 860:	add	r1, sp, #16
 864:	ldr	r8, [pc, #324]	; 9b0 <mo_links+0x244>
 868:	ldr	r0, [r3]
 86c:	bl	5ec <call_hook@plt>
 870:	ldr	r3, [pc, #316]	; 9b4 <mo_links+0x248>
 874:	ldr	sl, [pc, #316]	; 9b8 <mo_links+0x24c>
 878:	add	r8, pc, r8
 87c:	ldr	r3, [r5, r3]
 880:	mov	r9, #364	; 0x16c
 884:	add	sl, pc, sl
 888:	ldr	r7, [r3]
 88c:	cmp	r7, #0
 890:	bne	918 <mo_links+0x1ac>
 894:	cmp	r4, #0
 898:	beq	988 <mo_links+0x21c>
 89c:	ldrb	r3, [r4]
 8a0:	cmp	r3, #0
 8a4:	beq	994 <mo_links+0x228>
 8a8:	ldr	r2, [pc, #268]	; 9bc <mo_links+0x250>
 8ac:	mov	r3, r4
 8b0:	add	r2, pc, r2
 8b4:	ldr	r1, [pc, #260]	; 9c0 <mo_links+0x254>
 8b8:	mov	r0, r6
 8bc:	bl	5bc <sendto_one_numeric@plt>
 8c0:	b	7d0 <mo_links+0x64>
 8c4:	ldr	r1, [pc, #248]	; 9c4 <mo_links+0x258>
 8c8:	ldr	r1, [r5, r1]
 8cc:	ldr	r1, [r1, ip, lsl #2]
 8d0:	tst	r1, #1
 8d4:	bne	90c <mo_links+0x1a0>
 8d8:	cmp	lr, #1
 8dc:	strb	r7, [r3]
 8e0:	mov	r2, lr
 8e4:	addeq	r1, r3, #1
 8e8:	beq	838 <mo_links+0xcc>
 8ec:	ldrb	ip, [r4]
 8f0:	add	r1, r3, #2
 8f4:	add	ip, ip, #64	; 0x40
 8f8:	strb	ip, [r3, #1]
 8fc:	add	r4, r4, #1
 900:	sub	r2, r2, #1
 904:	mov	r3, r1
 908:	b	804 <mo_links+0x98>
 90c:	add	r1, r3, #1
 910:	strb	ip, [r3]
 914:	b	8fc <mo_links+0x190>
 918:	ldrb	r3, [r4]
 91c:	ldr	r5, [r7]
 920:	cmp	r3, #0
 924:	add	fp, r5, #88	; 0x58
 928:	bne	96c <mo_links+0x200>
 92c:	ldrb	r1, [r5, #345]	; 0x159
 930:	ldr	r3, [r5, #32]
 934:	ldr	r2, [r5, #76]	; 0x4c
 938:	cmp	r1, #0
 93c:	add	r3, r3, #88	; 0x58
 940:	moveq	r5, sl
 944:	addne	r5, r5, #344	; 0x158
 948:	addne	r5, r5, #1
 94c:	stmib	sp, {r2, r5}
 950:	str	r3, [sp]
 954:	mov	r2, r8
 958:	mov	r3, fp
 95c:	mov	r1, r9
 960:	mov	r0, r6
 964:	bl	5bc <sendto_one_numeric@plt>
 968:	b	980 <mo_links+0x214>
 96c:	mov	r1, fp
 970:	mov	r0, r4
 974:	bl	5e0 <match@plt>
 978:	cmp	r0, #0
 97c:	bne	92c <mo_links+0x1c0>
 980:	ldr	r7, [r7, #8]
 984:	b	88c <mo_links+0x120>
 988:	ldr	r4, [pc, #56]	; 9c8 <mo_links+0x25c>
 98c:	add	r4, pc, r4
 990:	b	8a8 <mo_links+0x13c>
 994:	ldr	r4, [pc, #48]	; 9cc <mo_links+0x260>
 998:	add	r4, pc, r4
 99c:	b	8a8 <mo_links+0x13c>
 9a0:	.word	0x0001087c
 9a4:	.word	0x000002ce
 9a8:	.word	0x0000029f
 9ac:	.word	0x0000004c
 9b0:	.word	0x0000021b
 9b4:	.word	0x00000030
 9b8:	.word	0x000001e9
 9bc:	.word	0x000001f0
 9c0:	.word	0x0000016d
 9c4:	.word	0x00000044
 9c8:	.word	0x000000f4
 9cc:	.word	0x000000e8

000009d0 <m_links>:
 9d0:	ldr	ip, [pc, #72]	; a20 <m_links+0x50>
 9d4:	push	{r4, r5, lr}
 9d8:	add	ip, pc, ip
 9dc:	ldr	r4, [pc, #64]	; a24 <m_links+0x54>
 9e0:	ldr	lr, [sp, #12]
 9e4:	ldr	ip, [ip, r4]
 9e8:	ldr	ip, [ip]
 9ec:	cmp	ip, #0
 9f0:	beq	a14 <m_links+0x44>
 9f4:	ldrd	r4, [r2, #64]	; 0x40
 9f8:	mov	r5, #0
 9fc:	and	r4, r4, #67108864	; 0x4000000
 a00:	orrs	ip, r4, r5
 a04:	bne	a14 <m_links+0x44>
 a08:	mov	r0, r2
 a0c:	pop	{r4, r5, lr}
 a10:	b	598 <scache_send_flattened_links@plt>
 a14:	str	lr, [sp, #12]
 a18:	pop	{r4, r5, lr}
 a1c:	b	76c <mo_links>
 a20:	.word	0x00010620
 a24:	.word	0x0000003c

Disassembly of section .fini:

00000a28 <_fini>:
 a28:	push	{r3, lr}
 a2c:	pop	{r3, pc}
