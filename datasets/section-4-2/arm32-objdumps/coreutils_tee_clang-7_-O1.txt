
../repos/coreutils/src/tee:     file format elf32-littlearm


Disassembly of section .init:

00010e40 <.init>:
   10e40:	push	{r3, lr}
   10e44:	bl	11118 <putc_unlocked@plt+0x48>
   10e48:	pop	{r3, pc}

Disassembly of section .plt:

00010e4c <fdopen@plt-0x14>:
   10e4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e50:	ldr	lr, [pc, #4]	; 10e5c <fdopen@plt-0x4>
   10e54:	add	lr, pc, lr
   10e58:	ldr	pc, [lr, #8]!
   10e5c:	andeq	r5, r1, r4, lsr #3

00010e60 <fdopen@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #420]!	; 0x1a4

00010e6c <calloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #412]!	; 0x19c

00010e78 <fputs_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #404]!	; 0x194

00010e84 <strcmp@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #396]!	; 0x18c

00010e90 <posix_fadvise64@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #388]!	; 0x184

00010e9c <read@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #380]!	; 0x17c

00010ea8 <fflush@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #372]!	; 0x174

00010eb4 <free@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #364]!	; 0x16c

00010ec0 <_exit@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #356]!	; 0x164

00010ecc <memcpy@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #348]!	; 0x15c

00010ed8 <mbsinit@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #340]!	; 0x154

00010ee4 <signal@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #332]!	; 0x14c

00010ef0 <fwrite_unlocked@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #324]!	; 0x144

00010efc <memcmp@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #316]!	; 0x13c

00010f08 <dcgettext@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #308]!	; 0x134

00010f14 <realloc@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #300]!	; 0x12c

00010f20 <textdomain@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #292]!	; 0x124

00010f2c <iswprint@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #284]!	; 0x11c

00010f38 <fwrite@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #276]!	; 0x114

00010f44 <lseek64@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #268]!	; 0x10c

00010f50 <__ctype_get_mb_cur_max@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #260]!	; 0x104

00010f5c <__fpending@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #252]!	; 0xfc

00010f68 <ferror_unlocked@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #244]!	; 0xf4

00010f74 <mbrtowc@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #236]!	; 0xec

00010f80 <error@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #228]!	; 0xe4

00010f8c <malloc@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #220]!	; 0xdc

00010f98 <__libc_start_main@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #212]!	; 0xd4

00010fa4 <__freading@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #204]!	; 0xcc

00010fb0 <__gmon_start__@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #196]!	; 0xc4

00010fbc <getopt_long@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #188]!	; 0xbc

00010fc8 <__ctype_b_loc@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #180]!	; 0xb4

00010fd4 <exit@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #172]!	; 0xac

00010fe0 <strlen@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #164]!	; 0xa4

00010fec <__errno_location@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #156]!	; 0x9c

00010ff8 <__cxa_atexit@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #148]!	; 0x94

00011004 <setvbuf@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #140]!	; 0x8c

00011010 <memset@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #132]!	; 0x84

0001101c <__printf_chk@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #124]!	; 0x7c

00011028 <fileno@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #116]!	; 0x74

00011034 <__fprintf_chk@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #86016	; 0x15000
   1103c:	ldr	pc, [ip, #108]!	; 0x6c

00011040 <fclose@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #86016	; 0x15000
   11048:	ldr	pc, [ip, #100]!	; 0x64

0001104c <fseeko64@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #86016	; 0x15000
   11054:	ldr	pc, [ip, #92]!	; 0x5c

00011058 <fcntl64@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #86016	; 0x15000
   11060:	ldr	pc, [ip, #84]!	; 0x54

00011064 <setlocale@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #86016	; 0x15000
   1106c:	ldr	pc, [ip, #76]!	; 0x4c

00011070 <strrchr@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #86016	; 0x15000
   11078:	ldr	pc, [ip, #68]!	; 0x44

0001107c <nl_langinfo@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #86016	; 0x15000
   11084:	ldr	pc, [ip, #60]!	; 0x3c

00011088 <clearerr_unlocked@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #86016	; 0x15000
   11090:	ldr	pc, [ip, #52]!	; 0x34

00011094 <fopen64@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #86016	; 0x15000
   1109c:	ldr	pc, [ip, #44]!	; 0x2c

000110a0 <bindtextdomain@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #86016	; 0x15000
   110a8:	ldr	pc, [ip, #36]!	; 0x24

000110ac <strncmp@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #86016	; 0x15000
   110b4:	ldr	pc, [ip, #28]!

000110b8 <abort@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #86016	; 0x15000
   110c0:	ldr	pc, [ip, #20]!

000110c4 <close@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #86016	; 0x15000
   110cc:	ldr	pc, [ip, #12]!

000110d0 <putc_unlocked@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #86016	; 0x15000
   110d8:	ldr	pc, [ip, #4]!

Disassembly of section .text:

000110dc <.text>:
   110dc:	mov	fp, #0
   110e0:	mov	lr, #0
   110e4:	pop	{r1}		; (ldr r1, [sp], #4)
   110e8:	mov	r2, sp
   110ec:	push	{r2}		; (str r2, [sp, #-4]!)
   110f0:	push	{r0}		; (str r0, [sp, #-4]!)
   110f4:	ldr	ip, [pc, #16]	; 1110c <putc_unlocked@plt+0x3c>
   110f8:	push	{ip}		; (str ip, [sp, #-4]!)
   110fc:	ldr	r0, [pc, #12]	; 11110 <putc_unlocked@plt+0x40>
   11100:	ldr	r3, [pc, #12]	; 11114 <putc_unlocked@plt+0x44>
   11104:	bl	10f98 <__libc_start_main@plt>
   11108:	bl	110b8 <abort@plt>
   1110c:	andeq	r5, r1, r4, lsl #1
   11110:	andeq	r1, r1, r4, ror r4
   11114:	andeq	r5, r1, r4, lsr #32
   11118:	ldr	r3, [pc, #20]	; 11134 <putc_unlocked@plt+0x64>
   1111c:	ldr	r2, [pc, #20]	; 11138 <putc_unlocked@plt+0x68>
   11120:	add	r3, pc, r3
   11124:	ldr	r2, [r3, r2]
   11128:	cmp	r2, #0
   1112c:	bxeq	lr
   11130:	b	10fb0 <__gmon_start__@plt>
   11134:	ldrdeq	r4, [r1], -r8
   11138:	andeq	r0, r0, r0, ror #1
   1113c:	ldr	r0, [pc, #24]	; 1115c <putc_unlocked@plt+0x8c>
   11140:	ldr	r3, [pc, #24]	; 11160 <putc_unlocked@plt+0x90>
   11144:	cmp	r3, r0
   11148:	bxeq	lr
   1114c:	ldr	r3, [pc, #16]	; 11164 <putc_unlocked@plt+0x94>
   11150:	cmp	r3, #0
   11154:	bxeq	lr
   11158:	bx	r3
   1115c:	andeq	r6, r2, r0, asr #2
   11160:	andeq	r6, r2, r0, asr #2
   11164:	andeq	r0, r0, r0
   11168:	ldr	r0, [pc, #36]	; 11194 <putc_unlocked@plt+0xc4>
   1116c:	ldr	r1, [pc, #36]	; 11198 <putc_unlocked@plt+0xc8>
   11170:	sub	r1, r1, r0
   11174:	asr	r1, r1, #2
   11178:	add	r1, r1, r1, lsr #31
   1117c:	asrs	r1, r1, #1
   11180:	bxeq	lr
   11184:	ldr	r3, [pc, #16]	; 1119c <putc_unlocked@plt+0xcc>
   11188:	cmp	r3, #0
   1118c:	bxeq	lr
   11190:	bx	r3
   11194:	andeq	r6, r2, r0, asr #2
   11198:	andeq	r6, r2, r0, asr #2
   1119c:	andeq	r0, r0, r0
   111a0:	push	{r4, lr}
   111a4:	ldr	r4, [pc, #24]	; 111c4 <putc_unlocked@plt+0xf4>
   111a8:	ldrb	r3, [r4]
   111ac:	cmp	r3, #0
   111b0:	popne	{r4, pc}
   111b4:	bl	1113c <putc_unlocked@plt+0x6c>
   111b8:	mov	r3, #1
   111bc:	strb	r3, [r4]
   111c0:	pop	{r4, pc}
   111c4:	andeq	r6, r2, r4, ror #2
   111c8:	b	11168 <putc_unlocked@plt+0x98>
   111cc:	push	{fp, lr}
   111d0:	mov	fp, sp
   111d4:	mov	r4, r0
   111d8:	cmp	r0, #0
   111dc:	bne	112ac <putc_unlocked@plt+0x1dc>
   111e0:	movw	r1, #20691	; 0x50d3
   111e4:	movt	r1, #1
   111e8:	mov	r0, #0
   111ec:	mov	r2, #5
   111f0:	bl	10f08 <dcgettext@plt>
   111f4:	mov	r1, r0
   111f8:	movw	r0, #24952	; 0x6178
   111fc:	movt	r0, #2
   11200:	ldr	r2, [r0]
   11204:	mov	r0, #1
   11208:	bl	1101c <__printf_chk@plt>
   1120c:	movw	r1, #20724	; 0x50f4
   11210:	movt	r1, #1
   11214:	mov	r0, #0
   11218:	mov	r2, #5
   1121c:	bl	10f08 <dcgettext@plt>
   11220:	movw	r5, #24924	; 0x615c
   11224:	movt	r5, #2
   11228:	ldr	r1, [r5]
   1122c:	bl	10e78 <fputs_unlocked@plt>
   11230:	movw	r1, #20914	; 0x51b2
   11234:	movt	r1, #1
   11238:	mov	r0, #0
   1123c:	mov	r2, #5
   11240:	bl	10f08 <dcgettext@plt>
   11244:	ldr	r1, [r5]
   11248:	bl	10e78 <fputs_unlocked@plt>
   1124c:	movw	r1, #21055	; 0x523f
   11250:	movt	r1, #1
   11254:	mov	r0, #0
   11258:	mov	r2, #5
   1125c:	bl	10f08 <dcgettext@plt>
   11260:	ldr	r1, [r5]
   11264:	bl	10e78 <fputs_unlocked@plt>
   11268:	movw	r1, #21100	; 0x526c
   1126c:	movt	r1, #1
   11270:	mov	r0, #0
   11274:	mov	r2, #5
   11278:	bl	10f08 <dcgettext@plt>
   1127c:	ldr	r1, [r5]
   11280:	bl	10e78 <fputs_unlocked@plt>
   11284:	movw	r1, #21154	; 0x52a2
   11288:	movt	r1, #1
   1128c:	mov	r0, #0
   11290:	mov	r2, #5
   11294:	bl	10f08 <dcgettext@plt>
   11298:	ldr	r1, [r5]
   1129c:	bl	10e78 <fputs_unlocked@plt>
   112a0:	bl	112f0 <putc_unlocked@plt+0x220>
   112a4:	mov	r0, r4
   112a8:	bl	10fd4 <exit@plt>
   112ac:	movw	r0, #24912	; 0x6150
   112b0:	movt	r0, #2
   112b4:	ldr	r5, [r0]
   112b8:	movw	r1, #20652	; 0x50ac
   112bc:	movt	r1, #1
   112c0:	mov	r0, #0
   112c4:	mov	r2, #5
   112c8:	bl	10f08 <dcgettext@plt>
   112cc:	mov	r2, r0
   112d0:	movw	r0, #24952	; 0x6178
   112d4:	movt	r0, #2
   112d8:	ldr	r3, [r0]
   112dc:	mov	r0, r5
   112e0:	mov	r1, #1
   112e4:	bl	11034 <__fprintf_chk@plt>
   112e8:	mov	r0, r4
   112ec:	bl	10fd4 <exit@plt>
   112f0:	push	{r4, r5, fp, lr}
   112f4:	add	fp, sp, #8
   112f8:	sub	sp, sp, #56	; 0x38
   112fc:	movw	r0, #22344	; 0x5748
   11300:	movt	r0, #1
   11304:	add	r1, r0, #32
   11308:	mov	r5, sp
   1130c:	mov	r2, #48	; 0x30
   11310:	vld1.64	{d16-d17}, [r1]
   11314:	add	r1, r5, #32
   11318:	add	r3, r0, #16
   1131c:	vld1.64	{d18-d19}, [r0], r2
   11320:	vld1.64	{d20-d21}, [r3]
   11324:	vldr	d22, [r0]
   11328:	vst1.64	{d16-d17}, [r1]
   1132c:	add	r0, r5, #16
   11330:	vst1.64	{d20-d21}, [r0]
   11334:	mov	r0, r5
   11338:	vst1.64	{d18-d19}, [r0], r2
   1133c:	vstr	d22, [r0]
   11340:	ldr	r1, [sp]
   11344:	cmp	r1, #0
   11348:	beq	11370 <putc_unlocked@plt+0x2a0>
   1134c:	mov	r5, sp
   11350:	movw	r4, #21666	; 0x54a2
   11354:	movt	r4, #1
   11358:	mov	r0, r4
   1135c:	bl	10e84 <strcmp@plt>
   11360:	cmp	r0, #0
   11364:	ldrne	r1, [r5, #8]!
   11368:	cmpne	r1, #0
   1136c:	bne	11358 <putc_unlocked@plt+0x288>
   11370:	ldr	r4, [r5, #4]
   11374:	movw	r1, #21885	; 0x557d
   11378:	movt	r1, #1
   1137c:	mov	r0, #0
   11380:	mov	r2, #5
   11384:	bl	10f08 <dcgettext@plt>
   11388:	mov	r1, r0
   1138c:	movw	r2, #21713	; 0x54d1
   11390:	movt	r2, #1
   11394:	movw	r3, #21908	; 0x5594
   11398:	movt	r3, #1
   1139c:	mov	r0, #1
   113a0:	bl	1101c <__printf_chk@plt>
   113a4:	movw	r5, #21666	; 0x54a2
   113a8:	movt	r5, #1
   113ac:	cmp	r4, #0
   113b0:	moveq	r4, r5
   113b4:	mov	r0, #5
   113b8:	mov	r1, #0
   113bc:	bl	11064 <setlocale@plt>
   113c0:	cmp	r0, #0
   113c4:	beq	11404 <putc_unlocked@plt+0x334>
   113c8:	movw	r1, #21948	; 0x55bc
   113cc:	movt	r1, #1
   113d0:	mov	r2, #3
   113d4:	bl	110ac <strncmp@plt>
   113d8:	cmp	r0, #0
   113dc:	beq	11404 <putc_unlocked@plt+0x334>
   113e0:	movw	r1, #21952	; 0x55c0
   113e4:	movt	r1, #1
   113e8:	mov	r0, #0
   113ec:	mov	r2, #5
   113f0:	bl	10f08 <dcgettext@plt>
   113f4:	movw	r1, #24924	; 0x615c
   113f8:	movt	r1, #2
   113fc:	ldr	r1, [r1]
   11400:	bl	10e78 <fputs_unlocked@plt>
   11404:	movw	r1, #22023	; 0x5607
   11408:	movt	r1, #1
   1140c:	mov	r0, #0
   11410:	mov	r2, #5
   11414:	bl	10f08 <dcgettext@plt>
   11418:	mov	r1, r0
   1141c:	movw	r2, #21908	; 0x5594
   11420:	movt	r2, #1
   11424:	mov	r0, #1
   11428:	mov	r3, r5
   1142c:	bl	1101c <__printf_chk@plt>
   11430:	movw	r1, #22050	; 0x5622
   11434:	movt	r1, #1
   11438:	mov	r0, #0
   1143c:	mov	r2, #5
   11440:	bl	10f08 <dcgettext@plt>
   11444:	mov	r1, r0
   11448:	movw	r0, #21818	; 0x553a
   1144c:	movt	r0, #1
   11450:	movw	r3, #22100	; 0x5654
   11454:	movt	r3, #1
   11458:	cmp	r4, r5
   1145c:	moveq	r3, r0
   11460:	mov	r0, #1
   11464:	mov	r2, r4
   11468:	bl	1101c <__printf_chk@plt>
   1146c:	sub	sp, fp, #8
   11470:	pop	{r4, r5, fp, pc}
   11474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11478:	add	fp, sp, #28
   1147c:	sub	sp, sp, #20
   11480:	mov	r4, r1
   11484:	mov	r5, r0
   11488:	ldr	r0, [r1]
   1148c:	bl	12264 <putc_unlocked@plt+0x1194>
   11490:	movw	r1, #22100	; 0x5654
   11494:	movt	r1, #1
   11498:	mov	r0, #6
   1149c:	bl	11064 <setlocale@plt>
   114a0:	movw	r6, #21717	; 0x54d5
   114a4:	movt	r6, #1
   114a8:	movw	r1, #21670	; 0x54a6
   114ac:	movt	r1, #1
   114b0:	mov	r0, r6
   114b4:	bl	110a0 <bindtextdomain@plt>
   114b8:	mov	r0, r6
   114bc:	bl	10f20 <textdomain@plt>
   114c0:	movw	r0, #7860	; 0x1eb4
   114c4:	movt	r0, #1
   114c8:	bl	15088 <putc_unlocked@plt+0x3fb8>
   114cc:	movw	sl, #24936	; 0x6168
   114d0:	movt	sl, #2
   114d4:	mov	r8, #0
   114d8:	strb	r8, [sl]
   114dc:	movw	r9, #24937	; 0x6169
   114e0:	movt	r9, #2
   114e4:	strb	r8, [r9]
   114e8:	movw	r6, #21694	; 0x54be
   114ec:	movt	r6, #1
   114f0:	movw	r7, #22208	; 0x56c0
   114f4:	movt	r7, #1
   114f8:	b	11504 <putc_unlocked@plt+0x434>
   114fc:	mov	r0, #1
   11500:	strb	r0, [r9]
   11504:	str	r8, [sp]
   11508:	mov	r0, r5
   1150c:	mov	r1, r4
   11510:	mov	r2, r6
   11514:	mov	r3, r7
   11518:	bl	10fbc <getopt_long@plt>
   1151c:	cmp	r0, #96	; 0x60
   11520:	ble	115c8 <putc_unlocked@plt+0x4f8>
   11524:	cmp	r0, #112	; 0x70
   11528:	beq	11548 <putc_unlocked@plt+0x478>
   1152c:	cmp	r0, #105	; 0x69
   11530:	beq	114fc <putc_unlocked@plt+0x42c>
   11534:	cmp	r0, #97	; 0x61
   11538:	bne	116e4 <putc_unlocked@plt+0x614>
   1153c:	mov	r0, #1
   11540:	strb	r0, [sl]
   11544:	b	11504 <putc_unlocked@plt+0x434>
   11548:	movw	r0, #24928	; 0x6160
   1154c:	movt	r0, #2
   11550:	ldr	r1, [r0]
   11554:	cmp	r1, #0
   11558:	beq	115b4 <putc_unlocked@plt+0x4e4>
   1155c:	movw	r0, #24820	; 0x60f4
   11560:	movt	r0, #2
   11564:	ldr	r0, [r0]
   11568:	mov	r2, #4
   1156c:	str	r2, [sp]
   11570:	str	r0, [sp, #4]
   11574:	mov	r0, #1
   11578:	str	r0, [sp, #8]
   1157c:	movw	r0, #21698	; 0x54c2
   11580:	movt	r0, #1
   11584:	movw	r2, #22320	; 0x5730
   11588:	movt	r2, #1
   1158c:	movw	r3, #22304	; 0x5720
   11590:	movt	r3, #1
   11594:	bl	11d84 <putc_unlocked@plt+0xcb4>
   11598:	movw	r1, #22304	; 0x5720
   1159c:	movt	r1, #1
   115a0:	ldr	r0, [r1, r0, lsl #2]
   115a4:	movw	r1, #24940	; 0x616c
   115a8:	movt	r1, #2
   115ac:	str	r0, [r1]
   115b0:	b	11504 <putc_unlocked@plt+0x434>
   115b4:	movw	r0, #24940	; 0x616c
   115b8:	movt	r0, #2
   115bc:	mov	r1, #2
   115c0:	str	r1, [r0]
   115c4:	b	11504 <putc_unlocked@plt+0x434>
   115c8:	cmn	r0, #1
   115cc:	bne	11670 <putc_unlocked@plt+0x5a0>
   115d0:	ldrb	r0, [r9]
   115d4:	cmp	r0, #1
   115d8:	bne	115e8 <putc_unlocked@plt+0x518>
   115dc:	mov	r0, #2
   115e0:	mov	r1, #1
   115e4:	bl	10ee4 <signal@plt>
   115e8:	movw	r0, #24940	; 0x616c
   115ec:	movt	r0, #2
   115f0:	ldr	r0, [r0]
   115f4:	cmp	r0, #0
   115f8:	beq	11608 <putc_unlocked@plt+0x538>
   115fc:	mov	r0, #13
   11600:	mov	r1, #1
   11604:	bl	10ee4 <signal@plt>
   11608:	movw	r0, #24904	; 0x6148
   1160c:	movt	r0, #2
   11610:	ldr	r1, [r0]
   11614:	sub	r0, r5, r1
   11618:	add	r1, r4, r1, lsl #2
   1161c:	bl	116ec <putc_unlocked@plt+0x61c>
   11620:	mov	r4, r0
   11624:	mov	r0, #0
   11628:	bl	110c4 <close@plt>
   1162c:	cmp	r0, #0
   11630:	eoreq	r0, r4, #1
   11634:	subeq	sp, fp, #28
   11638:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1163c:	bl	10fec <__errno_location@plt>
   11640:	ldr	r4, [r0]
   11644:	movw	r1, #21775	; 0x550f
   11648:	movt	r1, #1
   1164c:	mov	r0, #0
   11650:	mov	r2, #5
   11654:	bl	10f08 <dcgettext@plt>
   11658:	mov	r3, r0
   1165c:	movw	r2, #22502	; 0x57e6
   11660:	movt	r2, #1
   11664:	mov	r0, #1
   11668:	mov	r1, r4
   1166c:	bl	10f80 <error@plt>
   11670:	cmn	r0, #3
   11674:	bne	116d4 <putc_unlocked@plt+0x604>
   11678:	movw	r0, #24816	; 0x60f0
   1167c:	movt	r0, #2
   11680:	ldr	r3, [r0]
   11684:	movw	r0, #24924	; 0x615c
   11688:	movt	r0, #2
   1168c:	ldr	r0, [r0]
   11690:	mov	r1, #0
   11694:	movw	r2, #21759	; 0x54ff
   11698:	movt	r2, #1
   1169c:	movw	r7, #21739	; 0x54eb
   116a0:	movt	r7, #1
   116a4:	movw	r6, #21727	; 0x54df
   116a8:	movt	r6, #1
   116ac:	stm	sp, {r6, r7}
   116b0:	str	r2, [sp, #8]
   116b4:	str	r1, [sp, #12]
   116b8:	movw	r1, #21666	; 0x54a2
   116bc:	movt	r1, #1
   116c0:	movw	r2, #21713	; 0x54d1
   116c4:	movt	r2, #1
   116c8:	bl	14278 <putc_unlocked@plt+0x31a8>
   116cc:	mov	r0, #0
   116d0:	bl	10fd4 <exit@plt>
   116d4:	cmn	r0, #2
   116d8:	bne	116e4 <putc_unlocked@plt+0x614>
   116dc:	mov	r0, #0
   116e0:	bl	111cc <putc_unlocked@plt+0xfc>
   116e4:	mov	r0, #1
   116e8:	bl	111cc <putc_unlocked@plt+0xfc>
   116ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116f0:	add	fp, sp, #28
   116f4:	sub	sp, sp, #36	; 0x24
   116f8:	sub	sp, sp, #8192	; 0x2000
   116fc:	mov	sl, r1
   11700:	mov	r5, r0
   11704:	movw	r0, #24936	; 0x6168
   11708:	movt	r0, #2
   1170c:	ldrb	r8, [r0]
   11710:	mov	r0, #0
   11714:	mov	r1, #0
   11718:	bl	14778 <putc_unlocked@plt+0x36a8>
   1171c:	mov	r9, #1
   11720:	mov	r0, #1
   11724:	mov	r1, #0
   11728:	bl	14778 <putc_unlocked@plt+0x36a8>
   1172c:	movw	r0, #24920	; 0x6158
   11730:	movt	r0, #2
   11734:	ldr	r0, [r0]
   11738:	mov	r1, #2
   1173c:	bl	11fa0 <putc_unlocked@plt+0xed0>
   11740:	add	r0, r5, #1
   11744:	str	r0, [sp, #8]
   11748:	mov	r1, #4
   1174c:	bl	1441c <putc_unlocked@plt+0x334c>
   11750:	mov	r6, r0
   11754:	movw	r4, #24924	; 0x615c
   11758:	movt	r4, #2
   1175c:	ldr	r0, [r4]
   11760:	str	r0, [r6]
   11764:	movw	r1, #22177	; 0x56a1
   11768:	movt	r1, #1
   1176c:	mov	r0, #0
   11770:	mov	r2, #5
   11774:	bl	10f08 <dcgettext@plt>
   11778:	bl	11abc <putc_unlocked@plt+0x9ec>
   1177c:	mov	r1, sl
   11780:	str	r0, [r1, #-4]!
   11784:	str	r1, [sp, #4]
   11788:	ldr	r0, [r4]
   1178c:	mov	r1, #0
   11790:	mov	r2, #2
   11794:	mov	r3, #0
   11798:	bl	11004 <setvbuf@plt>
   1179c:	movw	r0, #22173	; 0x569d
   117a0:	movt	r0, #1
   117a4:	movw	r7, #22175	; 0x569f
   117a8:	movt	r7, #1
   117ac:	cmp	r8, #0
   117b0:	movne	r7, r0
   117b4:	cmp	r5, #1
   117b8:	str	r5, [sp, #16]
   117bc:	str	r6, [sp, #20]
   117c0:	str	sl, [sp, #12]
   117c4:	blt	11884 <putc_unlocked@plt+0x7b4>
   117c8:	add	r6, r6, #4
   117cc:	mov	r9, #1
   117d0:	mov	r4, sl
   117d4:	mov	r0, #1
   117d8:	str	r0, [sp, #28]
   117dc:	ldr	r0, [r4]
   117e0:	mov	r1, r7
   117e4:	bl	120e4 <putc_unlocked@plt+0x1014>
   117e8:	str	r0, [r6]
   117ec:	cmp	r0, #0
   117f0:	beq	1180c <putc_unlocked@plt+0x73c>
   117f4:	mov	r1, #0
   117f8:	mov	r2, #2
   117fc:	mov	r3, #0
   11800:	bl	11004 <setvbuf@plt>
   11804:	add	r9, r9, #1
   11808:	b	1185c <putc_unlocked@plt+0x78c>
   1180c:	movw	r0, #24940	; 0x616c
   11810:	movt	r0, #2
   11814:	ldr	sl, [r0]
   11818:	bl	10fec <__errno_location@plt>
   1181c:	ldr	r8, [r0]
   11820:	ldr	r2, [r4]
   11824:	mov	r0, #0
   11828:	str	r0, [sp, #28]
   1182c:	mov	r0, #0
   11830:	mov	r1, #3
   11834:	bl	1395c <putc_unlocked@plt+0x288c>
   11838:	mov	r3, r0
   1183c:	sub	r0, sl, #3
   11840:	cmp	r0, #2
   11844:	mov	r0, #0
   11848:	movwcc	r0, #1
   1184c:	mov	r1, r8
   11850:	movw	r2, #22502	; 0x57e6
   11854:	movt	r2, #1
   11858:	bl	10f80 <error@plt>
   1185c:	add	r6, r6, #4
   11860:	add	r4, r4, #4
   11864:	subs	r5, r5, #1
   11868:	bne	117dc <putc_unlocked@plt+0x70c>
   1186c:	cmp	r9, #0
   11870:	ldr	r5, [sp, #16]
   11874:	ldr	r8, [sp, #28]
   11878:	beq	119f8 <putc_unlocked@plt+0x928>
   1187c:	add	r4, sp, #32
   11880:	b	1188c <putc_unlocked@plt+0x7bc>
   11884:	mov	r8, #1
   11888:	add	r4, sp, #32
   1188c:	mov	r0, #0
   11890:	mov	r1, r4
   11894:	mov	r2, #8192	; 0x2000
   11898:	bl	10e9c <read@plt>
   1189c:	mov	r6, r0
   118a0:	cmn	r0, #1
   118a4:	bgt	118bc <putc_unlocked@plt+0x7ec>
   118a8:	bl	10fec <__errno_location@plt>
   118ac:	ldr	r0, [r0]
   118b0:	cmp	r0, #4
   118b4:	beq	1188c <putc_unlocked@plt+0x7bc>
   118b8:	b	119f0 <putc_unlocked@plt+0x920>
   118bc:	cmp	r6, #0
   118c0:	beq	119f8 <putc_unlocked@plt+0x928>
   118c4:	cmp	r5, #0
   118c8:	str	r8, [sp, #28]
   118cc:	str	r9, [sp, #24]
   118d0:	blt	119dc <putc_unlocked@plt+0x90c>
   118d4:	ldr	r7, [sp, #20]
   118d8:	ldmib	sp, {r9, sl}
   118dc:	b	118f0 <putc_unlocked@plt+0x820>
   118e0:	bl	11088 <clearerr_unlocked@plt>
   118e4:	cmp	r5, #0
   118e8:	bne	11964 <putc_unlocked@plt+0x894>
   118ec:	b	119a4 <putc_unlocked@plt+0x8d4>
   118f0:	ldr	r3, [r7]
   118f4:	cmp	r3, #0
   118f8:	beq	119cc <putc_unlocked@plt+0x8fc>
   118fc:	mov	r0, r4
   11900:	mov	r1, r6
   11904:	mov	r2, #1
   11908:	bl	10ef0 <fwrite_unlocked@plt>
   1190c:	cmp	r0, #1
   11910:	beq	119cc <putc_unlocked@plt+0x8fc>
   11914:	bl	10fec <__errno_location@plt>
   11918:	ldr	r4, [r0]
   1191c:	mov	r5, #1
   11920:	cmp	r4, #32
   11924:	bne	11944 <putc_unlocked@plt+0x874>
   11928:	movw	r0, #24940	; 0x616c
   1192c:	movt	r0, #2
   11930:	ldr	r0, [r0]
   11934:	orr	r0, r0, #2
   11938:	sub	r0, r0, #3
   1193c:	clz	r0, r0
   11940:	lsr	r5, r0, #5
   11944:	movw	r0, #24924	; 0x615c
   11948:	movt	r0, #2
   1194c:	ldr	r0, [r0]
   11950:	ldr	r1, [r7]
   11954:	cmp	r1, r0
   11958:	beq	118e0 <putc_unlocked@plt+0x810>
   1195c:	cmp	r5, #0
   11960:	beq	119a4 <putc_unlocked@plt+0x8d4>
   11964:	movw	r0, #24940	; 0x616c
   11968:	movt	r0, #2
   1196c:	ldr	r8, [r0]
   11970:	ldr	r2, [r9]
   11974:	mov	r0, #0
   11978:	mov	r1, #3
   1197c:	bl	1395c <putc_unlocked@plt+0x288c>
   11980:	mov	r3, r0
   11984:	sub	r0, r8, #3
   11988:	cmp	r0, #2
   1198c:	mov	r0, #0
   11990:	movwcc	r0, #1
   11994:	mov	r1, r4
   11998:	movw	r2, #22502	; 0x57e6
   1199c:	movt	r2, #1
   119a0:	bl	10f80 <error@plt>
   119a4:	mov	r0, #0
   119a8:	str	r0, [r7]
   119ac:	eor	r0, r5, #1
   119b0:	ldr	r1, [sp, #28]
   119b4:	and	r1, r1, r0
   119b8:	str	r1, [sp, #28]
   119bc:	ldr	r0, [sp, #24]
   119c0:	sub	r0, r0, #1
   119c4:	str	r0, [sp, #24]
   119c8:	add	r4, sp, #32
   119cc:	add	r9, r9, #4
   119d0:	add	r7, r7, #4
   119d4:	subs	sl, sl, #1
   119d8:	bne	118f0 <putc_unlocked@plt+0x820>
   119dc:	ldr	r9, [sp, #24]
   119e0:	cmp	r9, #0
   119e4:	ldr	r5, [sp, #16]
   119e8:	ldr	r8, [sp, #28]
   119ec:	bne	1188c <putc_unlocked@plt+0x7bc>
   119f0:	cmn	r6, #1
   119f4:	beq	11a04 <putc_unlocked@plt+0x934>
   119f8:	cmp	r5, #1
   119fc:	bge	11a3c <putc_unlocked@plt+0x96c>
   11a00:	b	11aa8 <putc_unlocked@plt+0x9d8>
   11a04:	bl	10fec <__errno_location@plt>
   11a08:	ldr	r6, [r0]
   11a0c:	mov	r8, #0
   11a10:	movw	r1, #22193	; 0x56b1
   11a14:	movt	r1, #1
   11a18:	mov	r0, #0
   11a1c:	mov	r2, #5
   11a20:	bl	10f08 <dcgettext@plt>
   11a24:	mov	r2, r0
   11a28:	mov	r0, #0
   11a2c:	mov	r1, r6
   11a30:	bl	10f80 <error@plt>
   11a34:	cmp	r5, #1
   11a38:	blt	11aa8 <putc_unlocked@plt+0x9d8>
   11a3c:	ldr	r0, [sp, #20]
   11a40:	add	r4, r0, #4
   11a44:	movw	r9, #22502	; 0x57e6
   11a48:	movt	r9, #1
   11a4c:	ldr	r6, [sp, #12]
   11a50:	ldr	r0, [r4]
   11a54:	cmp	r0, #0
   11a58:	beq	11a98 <putc_unlocked@plt+0x9c8>
   11a5c:	bl	11fdc <putc_unlocked@plt+0xf0c>
   11a60:	cmp	r0, #0
   11a64:	beq	11a98 <putc_unlocked@plt+0x9c8>
   11a68:	bl	10fec <__errno_location@plt>
   11a6c:	ldr	r7, [r0]
   11a70:	ldr	r2, [r6]
   11a74:	mov	r8, #0
   11a78:	mov	r0, #0
   11a7c:	mov	r1, #3
   11a80:	bl	1395c <putc_unlocked@plt+0x288c>
   11a84:	mov	r3, r0
   11a88:	mov	r0, #0
   11a8c:	mov	r1, r7
   11a90:	mov	r2, r9
   11a94:	bl	10f80 <error@plt>
   11a98:	add	r6, r6, #4
   11a9c:	add	r4, r4, #4
   11aa0:	subs	r5, r5, #1
   11aa4:	bne	11a50 <putc_unlocked@plt+0x980>
   11aa8:	ldr	r0, [sp, #20]
   11aac:	bl	12198 <putc_unlocked@plt+0x10c8>
   11ab0:	and	r0, r8, #1
   11ab4:	sub	sp, fp, #28
   11ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11abc:	bx	lr
   11ac0:	mov	r0, #1
   11ac4:	b	111cc <putc_unlocked@plt+0xfc>
   11ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11acc:	add	fp, sp, #28
   11ad0:	sub	sp, sp, #12
   11ad4:	mov	r4, r3
   11ad8:	mov	r6, r2
   11adc:	mov	r5, r1
   11ae0:	mov	sl, r0
   11ae4:	bl	10fe0 <strlen@plt>
   11ae8:	ldr	r8, [r5]
   11aec:	cmp	r8, #0
   11af0:	beq	11bac <putc_unlocked@plt+0xadc>
   11af4:	mov	r7, r0
   11af8:	add	r9, r5, #4
   11afc:	mov	r0, #0
   11b00:	str	r0, [sp]
   11b04:	mvn	r0, #0
   11b08:	str	r0, [sp, #8]
   11b0c:	str	r6, [sp, #4]
   11b10:	mov	r5, #0
   11b14:	mov	r0, r8
   11b18:	mov	r1, sl
   11b1c:	mov	r2, r7
   11b20:	bl	110ac <strncmp@plt>
   11b24:	cmp	r0, #0
   11b28:	bne	11b80 <putc_unlocked@plt+0xab0>
   11b2c:	mov	r0, r8
   11b30:	bl	10fe0 <strlen@plt>
   11b34:	cmp	r0, r7
   11b38:	beq	11bb0 <putc_unlocked@plt+0xae0>
   11b3c:	ldr	r0, [sp, #8]
   11b40:	cmn	r0, #1
   11b44:	beq	11b7c <putc_unlocked@plt+0xaac>
   11b48:	ldr	r0, [sp, #4]
   11b4c:	cmp	r0, #0
   11b50:	beq	11b70 <putc_unlocked@plt+0xaa0>
   11b54:	ldr	r1, [sp, #8]
   11b58:	mla	r0, r1, r4, r0
   11b5c:	mov	r1, r6
   11b60:	mov	r2, r4
   11b64:	bl	10efc <memcmp@plt>
   11b68:	cmp	r0, #0
   11b6c:	beq	11b80 <putc_unlocked@plt+0xab0>
   11b70:	mov	r0, #1
   11b74:	str	r0, [sp]
   11b78:	b	11b80 <putc_unlocked@plt+0xab0>
   11b7c:	str	r5, [sp, #8]
   11b80:	add	r6, r6, r4
   11b84:	ldr	r8, [r9, r5, lsl #2]
   11b88:	add	r5, r5, #1
   11b8c:	cmp	r8, #0
   11b90:	bne	11b14 <putc_unlocked@plt+0xa44>
   11b94:	ldr	r0, [sp]
   11b98:	tst	r0, #1
   11b9c:	ldr	r0, [sp, #8]
   11ba0:	mvnne	r0, #1
   11ba4:	sub	sp, fp, #28
   11ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bac:	mvn	r5, #0
   11bb0:	mov	r0, r5
   11bb4:	sub	sp, fp, #28
   11bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bbc:	push	{r4, r5, r6, r7, fp, lr}
   11bc0:	add	fp, sp, #16
   11bc4:	mov	r5, r0
   11bc8:	ldr	r0, [r1]
   11bcc:	mvn	r4, #0
   11bd0:	cmp	r0, #0
   11bd4:	beq	11c04 <putc_unlocked@plt+0xb34>
   11bd8:	add	r7, r1, #4
   11bdc:	mov	r6, #0
   11be0:	mov	r1, r5
   11be4:	bl	10e84 <strcmp@plt>
   11be8:	cmp	r0, #0
   11bec:	moveq	r0, r6
   11bf0:	popeq	{r4, r5, r6, r7, fp, pc}
   11bf4:	ldr	r0, [r7, r6, lsl #2]
   11bf8:	add	r6, r6, #1
   11bfc:	cmp	r0, #0
   11c00:	bne	11be0 <putc_unlocked@plt+0xb10>
   11c04:	mov	r0, r4
   11c08:	pop	{r4, r5, r6, r7, fp, pc}
   11c0c:	push	{r4, r5, r6, sl, fp, lr}
   11c10:	add	fp, sp, #16
   11c14:	sub	sp, sp, #8
   11c18:	mov	r4, r1
   11c1c:	mov	r5, r0
   11c20:	movw	r0, #22415	; 0x578f
   11c24:	movt	r0, #1
   11c28:	movw	r1, #22442	; 0x57aa
   11c2c:	movt	r1, #1
   11c30:	cmn	r2, #1
   11c34:	moveq	r1, r0
   11c38:	mov	r0, #0
   11c3c:	mov	r2, #5
   11c40:	bl	10f08 <dcgettext@plt>
   11c44:	mov	r6, r0
   11c48:	mov	r0, #0
   11c4c:	mov	r1, #8
   11c50:	mov	r2, r4
   11c54:	bl	137f8 <putc_unlocked@plt+0x2728>
   11c58:	mov	r4, r0
   11c5c:	mov	r0, #1
   11c60:	mov	r1, r5
   11c64:	bl	13a94 <putc_unlocked@plt+0x29c4>
   11c68:	str	r0, [sp]
   11c6c:	mov	r0, #0
   11c70:	mov	r1, #0
   11c74:	mov	r2, r6
   11c78:	mov	r3, r4
   11c7c:	bl	10f80 <error@plt>
   11c80:	sub	sp, fp, #16
   11c84:	pop	{r4, r5, r6, sl, fp, pc}
   11c88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c8c:	add	fp, sp, #28
   11c90:	sub	sp, sp, #4
   11c94:	mov	sl, r2
   11c98:	mov	r5, r1
   11c9c:	mov	r7, r0
   11ca0:	mov	r8, #0
   11ca4:	movw	r1, #22471	; 0x57c7
   11ca8:	movt	r1, #1
   11cac:	mov	r0, #0
   11cb0:	mov	r2, #5
   11cb4:	bl	10f08 <dcgettext@plt>
   11cb8:	movw	r4, #24912	; 0x6150
   11cbc:	movt	r4, #2
   11cc0:	ldr	r1, [r4]
   11cc4:	bl	10e78 <fputs_unlocked@plt>
   11cc8:	ldr	r6, [r7]
   11ccc:	cmp	r6, #0
   11cd0:	beq	11d70 <putc_unlocked@plt+0xca0>
   11cd4:	add	r9, r7, #4
   11cd8:	mov	r7, #0
   11cdc:	str	sl, [sp]
   11ce0:	cmp	r8, #0
   11ce4:	beq	11d00 <putc_unlocked@plt+0xc30>
   11ce8:	mov	r0, r7
   11cec:	mov	r1, r5
   11cf0:	mov	r2, sl
   11cf4:	bl	10efc <memcmp@plt>
   11cf8:	cmp	r0, #0
   11cfc:	beq	11d2c <putc_unlocked@plt+0xc5c>
   11d00:	ldr	r7, [r4]
   11d04:	mov	r0, r6
   11d08:	bl	13a9c <putc_unlocked@plt+0x29cc>
   11d0c:	mov	r3, r0
   11d10:	mov	r0, r7
   11d14:	mov	r1, #1
   11d18:	movw	r2, #22492	; 0x57dc
   11d1c:	movt	r2, #1
   11d20:	bl	11034 <__fprintf_chk@plt>
   11d24:	mov	r7, r5
   11d28:	b	11d5c <putc_unlocked@plt+0xc8c>
   11d2c:	mov	sl, r9
   11d30:	ldr	r9, [r4]
   11d34:	mov	r0, r6
   11d38:	bl	13a9c <putc_unlocked@plt+0x29cc>
   11d3c:	mov	r3, r0
   11d40:	mov	r0, r9
   11d44:	mov	r9, sl
   11d48:	ldr	sl, [sp]
   11d4c:	mov	r1, #1
   11d50:	movw	r2, #22500	; 0x57e4
   11d54:	movt	r2, #1
   11d58:	bl	11034 <__fprintf_chk@plt>
   11d5c:	add	r5, r5, sl
   11d60:	ldr	r6, [r9, -r8, lsl #2]
   11d64:	sub	r8, r8, #1
   11d68:	cmp	r6, #0
   11d6c:	bne	11ce0 <putc_unlocked@plt+0xc10>
   11d70:	ldr	r1, [r4]
   11d74:	mov	r0, #10
   11d78:	sub	sp, fp, #28
   11d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d80:	b	110d0 <putc_unlocked@plt>
   11d84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11d88:	add	fp, sp, #24
   11d8c:	mov	r4, r3
   11d90:	mov	r5, r2
   11d94:	mov	r7, r1
   11d98:	mov	r6, r0
   11d9c:	ldr	r8, [fp, #8]
   11da0:	ldr	r0, [fp, #16]
   11da4:	cmp	r0, #0
   11da8:	beq	11dc4 <putc_unlocked@plt+0xcf4>
   11dac:	mov	r0, r7
   11db0:	mov	r1, r5
   11db4:	mov	r2, r4
   11db8:	mov	r3, r8
   11dbc:	bl	11ac8 <putc_unlocked@plt+0x9f8>
   11dc0:	b	11dd0 <putc_unlocked@plt+0xd00>
   11dc4:	mov	r0, r7
   11dc8:	mov	r1, r5
   11dcc:	bl	11bbc <putc_unlocked@plt+0xaec>
   11dd0:	mov	r2, r0
   11dd4:	cmn	r0, #1
   11dd8:	ble	11de4 <putc_unlocked@plt+0xd14>
   11ddc:	mov	r0, r2
   11de0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11de4:	ldr	r9, [fp, #12]
   11de8:	mov	r0, r6
   11dec:	mov	r1, r7
   11df0:	bl	11c0c <putc_unlocked@plt+0xb3c>
   11df4:	mov	r0, r5
   11df8:	mov	r1, r4
   11dfc:	mov	r2, r8
   11e00:	bl	11c88 <putc_unlocked@plt+0xbb8>
   11e04:	blx	r9
   11e08:	mvn	r2, #0
   11e0c:	mov	r0, r2
   11e10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11e18:	add	fp, sp, #24
   11e1c:	ldr	r6, [r1]
   11e20:	cmp	r6, #0
   11e24:	beq	11e88 <putc_unlocked@plt+0xdb8>
   11e28:	mov	r4, r3
   11e2c:	mov	r7, r2
   11e30:	mov	r8, r1
   11e34:	mov	r9, r0
   11e38:	mov	r1, r2
   11e3c:	mov	r2, r3
   11e40:	bl	10efc <memcmp@plt>
   11e44:	cmp	r0, #0
   11e48:	beq	11e80 <putc_unlocked@plt+0xdb0>
   11e4c:	add	r7, r7, r4
   11e50:	add	r5, r8, #4
   11e54:	ldr	r6, [r5]
   11e58:	cmp	r6, #0
   11e5c:	beq	11e88 <putc_unlocked@plt+0xdb8>
   11e60:	mov	r0, r9
   11e64:	mov	r1, r7
   11e68:	mov	r2, r4
   11e6c:	bl	10efc <memcmp@plt>
   11e70:	add	r7, r7, r4
   11e74:	add	r5, r5, #4
   11e78:	cmp	r0, #0
   11e7c:	bne	11e54 <putc_unlocked@plt+0xd84>
   11e80:	mov	r0, r6
   11e84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e88:	mov	r6, #0
   11e8c:	mov	r0, r6
   11e90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e94:	movw	r1, #24944	; 0x6170
   11e98:	movt	r1, #2
   11e9c:	str	r0, [r1]
   11ea0:	bx	lr
   11ea4:	movw	r1, #24948	; 0x6174
   11ea8:	movt	r1, #2
   11eac:	strb	r0, [r1]
   11eb0:	bx	lr
   11eb4:	push	{r4, r5, r6, sl, fp, lr}
   11eb8:	add	fp, sp, #16
   11ebc:	sub	sp, sp, #8
   11ec0:	movw	r0, #24924	; 0x615c
   11ec4:	movt	r0, #2
   11ec8:	ldr	r0, [r0]
   11ecc:	bl	14b88 <putc_unlocked@plt+0x3ab8>
   11ed0:	cmp	r0, #0
   11ed4:	beq	11efc <putc_unlocked@plt+0xe2c>
   11ed8:	movw	r0, #24948	; 0x6174
   11edc:	movt	r0, #2
   11ee0:	ldrb	r0, [r0]
   11ee4:	cmp	r0, #0
   11ee8:	beq	11f1c <putc_unlocked@plt+0xe4c>
   11eec:	bl	10fec <__errno_location@plt>
   11ef0:	ldr	r0, [r0]
   11ef4:	cmp	r0, #32
   11ef8:	bne	11f1c <putc_unlocked@plt+0xe4c>
   11efc:	movw	r0, #24912	; 0x6150
   11f00:	movt	r0, #2
   11f04:	ldr	r0, [r0]
   11f08:	bl	14b88 <putc_unlocked@plt+0x3ab8>
   11f0c:	cmp	r0, #0
   11f10:	subeq	sp, fp, #16
   11f14:	popeq	{r4, r5, r6, sl, fp, pc}
   11f18:	b	11f8c <putc_unlocked@plt+0xebc>
   11f1c:	movw	r1, #22505	; 0x57e9
   11f20:	movt	r1, #1
   11f24:	mov	r0, #0
   11f28:	mov	r2, #5
   11f2c:	bl	10f08 <dcgettext@plt>
   11f30:	mov	r4, r0
   11f34:	movw	r0, #24944	; 0x6170
   11f38:	movt	r0, #2
   11f3c:	ldr	r6, [r0]
   11f40:	bl	10fec <__errno_location@plt>
   11f44:	ldr	r5, [r0]
   11f48:	cmp	r6, #0
   11f4c:	bne	11f68 <putc_unlocked@plt+0xe98>
   11f50:	movw	r2, #22502	; 0x57e6
   11f54:	movt	r2, #1
   11f58:	mov	r0, #0
   11f5c:	mov	r1, r5
   11f60:	mov	r3, r4
   11f64:	b	11f88 <putc_unlocked@plt+0xeb8>
   11f68:	mov	r0, r6
   11f6c:	bl	1394c <putc_unlocked@plt+0x287c>
   11f70:	mov	r3, r0
   11f74:	str	r4, [sp]
   11f78:	movw	r2, #22517	; 0x57f5
   11f7c:	movt	r2, #1
   11f80:	mov	r0, #0
   11f84:	mov	r1, r5
   11f88:	bl	10f80 <error@plt>
   11f8c:	movw	r0, #24824	; 0x60f8
   11f90:	movt	r0, #2
   11f94:	ldr	r0, [r0]
   11f98:	bl	10ec0 <_exit@plt>
   11f9c:	b	10e90 <posix_fadvise64@plt>
   11fa0:	cmp	r0, #0
   11fa4:	bxeq	lr
   11fa8:	push	{r4, sl, fp, lr}
   11fac:	add	fp, sp, #8
   11fb0:	sub	sp, sp, #16
   11fb4:	mov	r4, r1
   11fb8:	bl	11028 <fileno@plt>
   11fbc:	mov	r1, #0
   11fc0:	str	r1, [sp]
   11fc4:	stmib	sp, {r1, r4}
   11fc8:	mov	r2, #0
   11fcc:	mov	r3, #0
   11fd0:	bl	11f9c <putc_unlocked@plt+0xecc>
   11fd4:	sub	sp, fp, #8
   11fd8:	pop	{r4, sl, fp, pc}
   11fdc:	push	{r4, r5, fp, lr}
   11fe0:	add	fp, sp, #8
   11fe4:	sub	sp, sp, #8
   11fe8:	mov	r4, r0
   11fec:	bl	11028 <fileno@plt>
   11ff0:	cmn	r0, #1
   11ff4:	ble	1206c <putc_unlocked@plt+0xf9c>
   11ff8:	mov	r0, r4
   11ffc:	bl	10fa4 <__freading@plt>
   12000:	cmp	r0, #0
   12004:	beq	12030 <putc_unlocked@plt+0xf60>
   12008:	mov	r0, r4
   1200c:	bl	11028 <fileno@plt>
   12010:	mov	r1, #1
   12014:	str	r1, [sp]
   12018:	mov	r2, #0
   1201c:	mov	r3, #0
   12020:	bl	10f44 <lseek64@plt>
   12024:	and	r0, r0, r1
   12028:	cmn	r0, #1
   1202c:	beq	1206c <putc_unlocked@plt+0xf9c>
   12030:	mov	r0, r4
   12034:	bl	1207c <putc_unlocked@plt+0xfac>
   12038:	cmp	r0, #0
   1203c:	beq	1206c <putc_unlocked@plt+0xf9c>
   12040:	bl	10fec <__errno_location@plt>
   12044:	ldr	r5, [r0]
   12048:	mov	r0, r4
   1204c:	bl	11040 <fclose@plt>
   12050:	cmp	r5, #0
   12054:	beq	12064 <putc_unlocked@plt+0xf94>
   12058:	bl	10fec <__errno_location@plt>
   1205c:	str	r5, [r0]
   12060:	mvn	r0, #0
   12064:	sub	sp, fp, #8
   12068:	pop	{r4, r5, fp, pc}
   1206c:	mov	r0, r4
   12070:	sub	sp, fp, #8
   12074:	pop	{r4, r5, fp, lr}
   12078:	b	11040 <fclose@plt>
   1207c:	push	{r4, sl, fp, lr}
   12080:	add	fp, sp, #8
   12084:	mov	r4, r0
   12088:	cmp	r0, #0
   1208c:	beq	120a4 <putc_unlocked@plt+0xfd4>
   12090:	mov	r0, r4
   12094:	bl	10fa4 <__freading@plt>
   12098:	cmp	r0, #0
   1209c:	movne	r0, r4
   120a0:	blne	120b0 <putc_unlocked@plt+0xfe0>
   120a4:	mov	r0, r4
   120a8:	pop	{r4, sl, fp, lr}
   120ac:	b	10ea8 <fflush@plt>
   120b0:	ldrb	r1, [r0, #1]
   120b4:	tst	r1, #1
   120b8:	bxeq	lr
   120bc:	push	{fp, lr}
   120c0:	mov	fp, sp
   120c4:	sub	sp, sp, #8
   120c8:	mov	r1, #1
   120cc:	str	r1, [sp]
   120d0:	mov	r2, #0
   120d4:	mov	r3, #0
   120d8:	bl	121c0 <putc_unlocked@plt+0x10f0>
   120dc:	mov	sp, fp
   120e0:	pop	{fp, pc}
   120e4:	push	{r4, r5, r6, r7, fp, lr}
   120e8:	add	fp, sp, #16
   120ec:	mov	r5, r1
   120f0:	bl	11094 <fopen64@plt>
   120f4:	mov	r4, #0
   120f8:	cmp	r0, #0
   120fc:	beq	1214c <putc_unlocked@plt+0x107c>
   12100:	mov	r6, r0
   12104:	bl	11028 <fileno@plt>
   12108:	cmp	r0, #2
   1210c:	movhi	r0, r6
   12110:	pophi	{r4, r5, r6, r7, fp, pc}
   12114:	bl	13eb0 <putc_unlocked@plt+0x2de0>
   12118:	cmn	r0, #1
   1211c:	ble	12178 <putc_unlocked@plt+0x10a8>
   12120:	mov	r7, r0
   12124:	mov	r0, r6
   12128:	bl	11fdc <putc_unlocked@plt+0xf0c>
   1212c:	cmp	r0, #0
   12130:	bne	12154 <putc_unlocked@plt+0x1084>
   12134:	mov	r0, r7
   12138:	mov	r1, r5
   1213c:	bl	10e60 <fdopen@plt>
   12140:	mov	r4, r0
   12144:	cmp	r0, #0
   12148:	beq	12154 <putc_unlocked@plt+0x1084>
   1214c:	mov	r0, r4
   12150:	pop	{r4, r5, r6, r7, fp, pc}
   12154:	bl	10fec <__errno_location@plt>
   12158:	mov	r4, r0
   1215c:	ldr	r5, [r0]
   12160:	mov	r0, r7
   12164:	bl	110c4 <close@plt>
   12168:	str	r5, [r4]
   1216c:	mov	r4, #0
   12170:	mov	r0, r4
   12174:	pop	{r4, r5, r6, r7, fp, pc}
   12178:	bl	10fec <__errno_location@plt>
   1217c:	mov	r5, r0
   12180:	ldr	r7, [r0]
   12184:	mov	r0, r6
   12188:	bl	11fdc <putc_unlocked@plt+0xf0c>
   1218c:	str	r7, [r5]
   12190:	mov	r0, r4
   12194:	pop	{r4, r5, r6, r7, fp, pc}
   12198:	push	{r4, r5, r6, sl, fp, lr}
   1219c:	add	fp, sp, #16
   121a0:	mov	r4, r0
   121a4:	bl	10fec <__errno_location@plt>
   121a8:	mov	r5, r0
   121ac:	ldr	r6, [r0]
   121b0:	mov	r0, r4
   121b4:	bl	10eb4 <free@plt>
   121b8:	str	r6, [r5]
   121bc:	pop	{r4, r5, r6, sl, fp, pc}
   121c0:	push	{r4, r5, r6, r7, fp, lr}
   121c4:	add	fp, sp, #16
   121c8:	sub	sp, sp, #8
   121cc:	mov	r5, r3
   121d0:	mov	r6, r2
   121d4:	mov	r4, r0
   121d8:	ldr	r0, [r0, #4]
   121dc:	ldr	r1, [r4, #8]
   121e0:	cmp	r1, r0
   121e4:	bne	12200 <putc_unlocked@plt+0x1130>
   121e8:	ldrd	r0, [r4, #16]
   121ec:	cmp	r1, r0
   121f0:	bne	12200 <putc_unlocked@plt+0x1130>
   121f4:	ldr	r0, [r4, #36]	; 0x24
   121f8:	cmp	r0, #0
   121fc:	beq	12218 <putc_unlocked@plt+0x1148>
   12200:	mov	r0, r4
   12204:	mov	r2, r6
   12208:	mov	r3, r5
   1220c:	sub	sp, fp, #16
   12210:	pop	{r4, r5, r6, r7, fp, lr}
   12214:	b	1104c <fseeko64@plt>
   12218:	ldr	r7, [fp, #8]
   1221c:	mov	r0, r4
   12220:	bl	11028 <fileno@plt>
   12224:	str	r7, [sp]
   12228:	mov	r2, r6
   1222c:	mov	r3, r5
   12230:	bl	10f44 <lseek64@plt>
   12234:	and	r2, r0, r1
   12238:	cmn	r2, #1
   1223c:	mvneq	r0, #0
   12240:	subeq	sp, fp, #16
   12244:	popeq	{r4, r5, r6, r7, fp, pc}
   12248:	strd	r0, [r4, #80]	; 0x50
   1224c:	ldr	r0, [r4]
   12250:	bic	r0, r0, #16
   12254:	str	r0, [r4]
   12258:	mov	r0, #0
   1225c:	sub	sp, fp, #16
   12260:	pop	{r4, r5, r6, r7, fp, pc}
   12264:	push	{r4, r5, fp, lr}
   12268:	add	fp, sp, #8
   1226c:	cmp	r0, #0
   12270:	beq	12304 <putc_unlocked@plt+0x1234>
   12274:	mov	r4, r0
   12278:	mov	r1, #47	; 0x2f
   1227c:	bl	11070 <strrchr@plt>
   12280:	cmp	r0, #0
   12284:	mov	r5, r4
   12288:	addne	r5, r0, #1
   1228c:	sub	r0, r5, r4
   12290:	cmp	r0, #7
   12294:	blt	122e8 <putc_unlocked@plt+0x1218>
   12298:	sub	r0, r5, #7
   1229c:	movw	r1, #22580	; 0x5834
   122a0:	movt	r1, #1
   122a4:	mov	r2, #7
   122a8:	bl	110ac <strncmp@plt>
   122ac:	cmp	r0, #0
   122b0:	bne	122e8 <putc_unlocked@plt+0x1218>
   122b4:	movw	r1, #22588	; 0x583c
   122b8:	movt	r1, #1
   122bc:	mov	r0, r5
   122c0:	mov	r2, #3
   122c4:	bl	110ac <strncmp@plt>
   122c8:	cmp	r0, #0
   122cc:	beq	122d8 <putc_unlocked@plt+0x1208>
   122d0:	mov	r4, r5
   122d4:	b	122e8 <putc_unlocked@plt+0x1218>
   122d8:	add	r4, r5, #3
   122dc:	movw	r0, #24896	; 0x6140
   122e0:	movt	r0, #2
   122e4:	str	r4, [r0]
   122e8:	movw	r0, #24900	; 0x6144
   122ec:	movt	r0, #2
   122f0:	str	r4, [r0]
   122f4:	movw	r0, #24952	; 0x6178
   122f8:	movt	r0, #2
   122fc:	str	r4, [r0]
   12300:	pop	{r4, r5, fp, pc}
   12304:	movw	r0, #24912	; 0x6150
   12308:	movt	r0, #2
   1230c:	ldr	r3, [r0]
   12310:	movw	r0, #22524	; 0x57fc
   12314:	movt	r0, #1
   12318:	mov	r1, #55	; 0x37
   1231c:	mov	r2, #1
   12320:	bl	10f38 <fwrite@plt>
   12324:	bl	110b8 <abort@plt>
   12328:	push	{r4, r5, r6, sl, fp, lr}
   1232c:	add	fp, sp, #16
   12330:	mov	r4, r0
   12334:	movw	r0, #24960	; 0x6180
   12338:	movt	r0, #2
   1233c:	cmp	r4, #0
   12340:	moveq	r4, r0
   12344:	bl	10fec <__errno_location@plt>
   12348:	mov	r5, r0
   1234c:	ldr	r6, [r0]
   12350:	mov	r0, r4
   12354:	mov	r1, #48	; 0x30
   12358:	bl	14674 <putc_unlocked@plt+0x35a4>
   1235c:	str	r6, [r5]
   12360:	pop	{r4, r5, r6, sl, fp, pc}
   12364:	movw	r1, #24960	; 0x6180
   12368:	movt	r1, #2
   1236c:	cmp	r0, #0
   12370:	movne	r1, r0
   12374:	ldr	r0, [r1]
   12378:	bx	lr
   1237c:	movw	r2, #24960	; 0x6180
   12380:	movt	r2, #2
   12384:	cmp	r0, #0
   12388:	movne	r2, r0
   1238c:	str	r1, [r2]
   12390:	bx	lr
   12394:	movw	r3, #24960	; 0x6180
   12398:	movt	r3, #2
   1239c:	cmp	r0, #0
   123a0:	movne	r3, r0
   123a4:	ubfx	r0, r1, #5, #3
   123a8:	add	r0, r3, r0, lsl #2
   123ac:	ldr	r3, [r0, #8]
   123b0:	and	r1, r1, #31
   123b4:	eor	r2, r2, r3, lsr r1
   123b8:	and	r2, r2, #1
   123bc:	eor	r2, r3, r2, lsl r1
   123c0:	str	r2, [r0, #8]
   123c4:	mov	r0, #1
   123c8:	and	r0, r0, r3, lsr r1
   123cc:	bx	lr
   123d0:	movw	r2, #24960	; 0x6180
   123d4:	movt	r2, #2
   123d8:	cmp	r0, #0
   123dc:	movne	r2, r0
   123e0:	ldr	r0, [r2, #4]
   123e4:	str	r1, [r2, #4]
   123e8:	bx	lr
   123ec:	movw	r3, #24960	; 0x6180
   123f0:	movt	r3, #2
   123f4:	cmp	r0, #0
   123f8:	movne	r3, r0
   123fc:	mov	r0, #10
   12400:	str	r0, [r3]
   12404:	cmp	r1, #0
   12408:	cmpne	r2, #0
   1240c:	bne	1241c <putc_unlocked@plt+0x134c>
   12410:	push	{fp, lr}
   12414:	mov	fp, sp
   12418:	bl	110b8 <abort@plt>
   1241c:	str	r1, [r3, #40]	; 0x28
   12420:	str	r2, [r3, #44]	; 0x2c
   12424:	bx	lr
   12428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1242c:	add	fp, sp, #28
   12430:	sub	sp, sp, #20
   12434:	mov	r8, r3
   12438:	mov	r9, r2
   1243c:	mov	sl, r1
   12440:	mov	r7, r0
   12444:	ldr	r0, [fp, #8]
   12448:	movw	r5, #24960	; 0x6180
   1244c:	movt	r5, #2
   12450:	cmp	r0, #0
   12454:	movne	r5, r0
   12458:	bl	10fec <__errno_location@plt>
   1245c:	mov	r4, r0
   12460:	ldm	r5, {r0, r1}
   12464:	ldr	r2, [r5, #40]	; 0x28
   12468:	ldr	r3, [r5, #44]	; 0x2c
   1246c:	ldr	r6, [r4]
   12470:	add	r5, r5, #8
   12474:	stm	sp, {r0, r1, r5}
   12478:	str	r2, [sp, #12]
   1247c:	str	r3, [sp, #16]
   12480:	mov	r0, r7
   12484:	mov	r1, sl
   12488:	mov	r2, r9
   1248c:	mov	r3, r8
   12490:	bl	124a0 <putc_unlocked@plt+0x13d0>
   12494:	str	r6, [r4]
   12498:	sub	sp, fp, #28
   1249c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124a4:	add	fp, sp, #28
   124a8:	sub	sp, sp, #156	; 0x9c
   124ac:	mov	r9, r3
   124b0:	str	r2, [fp, #-84]	; 0xffffffac
   124b4:	mov	r6, r1
   124b8:	mov	r7, r0
   124bc:	ldr	r0, [fp, #12]
   124c0:	and	r1, r0, #4
   124c4:	str	r1, [sp, #32]
   124c8:	and	r1, r0, #1
   124cc:	str	r1, [sp, #36]	; 0x24
   124d0:	ubfx	sl, r0, #1, #1
   124d4:	bl	10f50 <__ctype_get_mb_cur_max@plt>
   124d8:	str	r0, [sp, #40]	; 0x28
   124dc:	ldr	r0, [fp, #24]
   124e0:	str	r0, [sp, #76]	; 0x4c
   124e4:	ldr	r0, [fp, #20]
   124e8:	str	r0, [sp, #68]	; 0x44
   124ec:	ldr	r0, [fp, #8]
   124f0:	str	r0, [fp, #-60]	; 0xffffffc4
   124f4:	mov	r0, #0
   124f8:	str	r0, [sp, #72]	; 0x48
   124fc:	mov	r0, #0
   12500:	str	r0, [sp, #92]	; 0x5c
   12504:	mov	r0, #0
   12508:	str	r0, [fp, #-72]	; 0xffffffb8
   1250c:	mov	r0, #0
   12510:	mov	r1, #0
   12514:	str	r1, [fp, #-56]	; 0xffffffc8
   12518:	mov	r1, #0
   1251c:	str	r1, [sp, #56]	; 0x38
   12520:	mov	r5, #1
   12524:	str	r7, [sp, #80]	; 0x50
   12528:	mov	r4, r6
   1252c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12530:	cmp	r6, #10
   12534:	bhi	1349c <putc_unlocked@plt+0x23cc>
   12538:	add	r1, pc, #20
   1253c:	mov	r8, #0
   12540:	mov	r2, #1
   12544:	mov	r3, #0
   12548:	ldr	ip, [fp, #-84]	; 0xffffffac
   1254c:	mov	lr, r9
   12550:	ldr	pc, [r1, r6, lsl #2]
   12554:	andeq	r2, r1, ip, lsr #12
   12558:	andeq	r2, r1, ip, asr r6
   1255c:	andeq	r2, r1, ip, lsl r6
   12560:	andeq	r2, r1, r4, lsl r6
   12564:	andeq	r2, r1, r0, asr r6
   12568:			; <UNDEFINED> instruction: 0x000126b0
   1256c:	andeq	r2, r1, ip, lsr r6
   12570:	andeq	r2, r1, ip, lsl #14
   12574:	andeq	r2, r1, r0, lsl #11
   12578:	andeq	r2, r1, r0, lsl #11
   1257c:	andeq	r2, r1, r8, lsr #11
   12580:	movw	r0, #22672	; 0x5890
   12584:	movt	r0, #1
   12588:	mov	r1, r6
   1258c:	bl	13aa8 <putc_unlocked@plt+0x29d8>
   12590:	str	r0, [sp, #68]	; 0x44
   12594:	movw	r0, #22674	; 0x5892
   12598:	movt	r0, #1
   1259c:	mov	r1, r6
   125a0:	bl	13aa8 <putc_unlocked@plt+0x29d8>
   125a4:	str	r0, [sp, #76]	; 0x4c
   125a8:	mov	r8, #0
   125ac:	tst	sl, #1
   125b0:	bne	125e8 <putc_unlocked@plt+0x1518>
   125b4:	ldr	r0, [sp, #68]	; 0x44
   125b8:	ldrb	r0, [r0]
   125bc:	cmp	r0, #0
   125c0:	beq	125e8 <putc_unlocked@plt+0x1518>
   125c4:	ldr	r1, [sp, #68]	; 0x44
   125c8:	add	r1, r1, #1
   125cc:	mov	r8, #0
   125d0:	cmp	r8, r4
   125d4:	strbcc	r0, [r7, r8]
   125d8:	ldrb	r0, [r1, r8]
   125dc:	add	r8, r8, #1
   125e0:	cmp	r0, #0
   125e4:	bne	125d0 <putc_unlocked@plt+0x1500>
   125e8:	ldr	r6, [sp, #76]	; 0x4c
   125ec:	mov	r0, r6
   125f0:	bl	10fe0 <strlen@plt>
   125f4:	str	r0, [fp, #-72]	; 0xffffffb8
   125f8:	str	r6, [sp, #92]	; 0x5c
   125fc:	mov	r2, #1
   12600:	mov	r3, sl
   12604:	ldr	ip, [fp, #-84]	; 0xffffffac
   12608:	mov	lr, r9
   1260c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12610:	b	1270c <putc_unlocked@plt+0x163c>
   12614:	mov	r0, #1
   12618:	b	1265c <putc_unlocked@plt+0x158c>
   1261c:	tst	sl, #1
   12620:	bne	1265c <putc_unlocked@plt+0x158c>
   12624:	mov	r2, r0
   12628:	b	12684 <putc_unlocked@plt+0x15b4>
   1262c:	mov	r6, #0
   12630:	mov	r8, #0
   12634:	mov	r2, r0
   12638:	b	12708 <putc_unlocked@plt+0x1638>
   1263c:	mov	r0, #1
   12640:	str	r0, [fp, #-72]	; 0xffffffb8
   12644:	mov	r8, #0
   12648:	mov	r6, #5
   1264c:	b	126c8 <putc_unlocked@plt+0x15f8>
   12650:	mov	r2, #1
   12654:	tst	sl, #1
   12658:	beq	12684 <putc_unlocked@plt+0x15b4>
   1265c:	mov	r1, #1
   12660:	str	r1, [fp, #-72]	; 0xffffffb8
   12664:	mov	r8, #0
   12668:	mov	r6, #2
   1266c:	movw	r1, #22674	; 0x5892
   12670:	movt	r1, #1
   12674:	str	r1, [sp, #92]	; 0x5c
   12678:	mov	r2, r0
   1267c:	mov	r3, #1
   12680:	b	1270c <putc_unlocked@plt+0x163c>
   12684:	mov	r8, #1
   12688:	mov	r6, #2
   1268c:	cmp	r4, #0
   12690:	movne	r0, #39	; 0x27
   12694:	strbne	r0, [r7]
   12698:	movw	r0, #22674	; 0x5892
   1269c:	movt	r0, #1
   126a0:	str	r0, [sp, #92]	; 0x5c
   126a4:	mov	r0, #1
   126a8:	str	r0, [fp, #-72]	; 0xffffffb8
   126ac:	b	12708 <putc_unlocked@plt+0x1638>
   126b0:	mov	r6, #5
   126b4:	tst	sl, #1
   126b8:	beq	126e0 <putc_unlocked@plt+0x1610>
   126bc:	mov	r0, #1
   126c0:	str	r0, [fp, #-72]	; 0xffffffb8
   126c4:	mov	r8, #0
   126c8:	movw	r0, #22670	; 0x588e
   126cc:	movt	r0, #1
   126d0:	str	r0, [sp, #92]	; 0x5c
   126d4:	mov	r2, #1
   126d8:	mov	r3, #1
   126dc:	b	1270c <putc_unlocked@plt+0x163c>
   126e0:	cmp	r4, #0
   126e4:	movne	r0, #34	; 0x22
   126e8:	strbne	r0, [r7]
   126ec:	mov	r8, #1
   126f0:	movw	r0, #22670	; 0x588e
   126f4:	movt	r0, #1
   126f8:	str	r0, [sp, #92]	; 0x5c
   126fc:	mov	r0, #1
   12700:	str	r0, [fp, #-72]	; 0xffffffb8
   12704:	mov	r2, #1
   12708:	mov	r3, #0
   1270c:	ldr	r0, [fp, #16]
   12710:	cmp	r0, #0
   12714:	movwne	r0, #1
   12718:	and	r0, r0, r3
   1271c:	str	r0, [fp, #-88]	; 0xffffffa8
   12720:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12724:	cmp	r0, #0
   12728:	movwne	r0, #1
   1272c:	and	r1, r0, r3
   12730:	and	r1, r2, r1
   12734:	str	r1, [sp, #48]	; 0x30
   12738:	str	r6, [fp, #-60]	; 0xffffffc4
   1273c:	subs	r6, r6, #2
   12740:	clz	r1, r6
   12744:	lsr	r1, r1, #5
   12748:	and	r1, r1, r3
   1274c:	str	r1, [sp, #60]	; 0x3c
   12750:	str	r6, [fp, #-80]	; 0xffffffb0
   12754:	mov	r1, r6
   12758:	movwne	r1, #1
   1275c:	str	r3, [fp, #-76]	; 0xffffffb4
   12760:	eor	r3, r3, #1
   12764:	str	r3, [sp, #88]	; 0x58
   12768:	orr	r3, r1, r3
   1276c:	str	r3, [sp, #64]	; 0x40
   12770:	and	r1, r1, r2
   12774:	str	r1, [fp, #-68]	; 0xffffffbc
   12778:	and	r0, r0, r1
   1277c:	str	r0, [fp, #-64]	; 0xffffffc0
   12780:	str	r2, [sp, #84]	; 0x54
   12784:	eor	r0, r2, #1
   12788:	str	r0, [sp, #52]	; 0x34
   1278c:	mov	r6, #0
   12790:	cmn	lr, #1
   12794:	beq	127a4 <putc_unlocked@plt+0x16d4>
   12798:	cmp	r6, lr
   1279c:	bne	127b0 <putc_unlocked@plt+0x16e0>
   127a0:	b	1331c <putc_unlocked@plt+0x224c>
   127a4:	ldrb	r0, [ip, r6]
   127a8:	cmp	r0, #0
   127ac:	beq	1331c <putc_unlocked@plt+0x224c>
   127b0:	str	r5, [fp, #-48]	; 0xffffffd0
   127b4:	mov	sl, #0
   127b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   127bc:	cmp	r0, #0
   127c0:	beq	127f4 <putc_unlocked@plt+0x1724>
   127c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   127c8:	add	r5, r6, r0
   127cc:	cmp	r0, #2
   127d0:	bcc	127ec <putc_unlocked@plt+0x171c>
   127d4:	cmn	lr, #1
   127d8:	bne	127ec <putc_unlocked@plt+0x171c>
   127dc:	mov	r0, ip
   127e0:	bl	10fe0 <strlen@plt>
   127e4:	ldr	ip, [fp, #-84]	; 0xffffffac
   127e8:	mov	lr, r0
   127ec:	cmp	r5, lr
   127f0:	bls	12800 <putc_unlocked@plt+0x1730>
   127f4:	mov	r0, #0
   127f8:	str	r0, [fp, #-52]	; 0xffffffcc
   127fc:	b	1284c <putc_unlocked@plt+0x177c>
   12800:	mov	r5, r4
   12804:	mov	r4, lr
   12808:	add	r0, ip, r6
   1280c:	ldr	r1, [sp, #92]	; 0x5c
   12810:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12814:	bl	10efc <memcmp@plt>
   12818:	cmp	r0, #0
   1281c:	mov	r1, r0
   12820:	movwne	r1, #1
   12824:	ldr	r2, [sp, #88]	; 0x58
   12828:	orr	r1, r1, r2
   1282c:	tst	r1, #1
   12830:	beq	133e0 <putc_unlocked@plt+0x2310>
   12834:	clz	r0, r0
   12838:	lsr	r0, r0, #5
   1283c:	str	r0, [fp, #-52]	; 0xffffffcc
   12840:	ldr	ip, [fp, #-84]	; 0xffffffac
   12844:	mov	lr, r4
   12848:	mov	r4, r5
   1284c:	ldrb	r5, [ip, r6]
   12850:	cmp	r5, #126	; 0x7e
   12854:	bhi	12c10 <putc_unlocked@plt+0x1b40>
   12858:	mov	r9, #1
   1285c:	mov	r2, #110	; 0x6e
   12860:	mov	r0, #97	; 0x61
   12864:	add	r3, pc, #4
   12868:	mov	r1, #0
   1286c:	ldr	pc, [r3, r5, lsl #2]
   12870:	andeq	r2, r1, r8, lsl #22
   12874:	andeq	r2, r1, r0, lsl ip
   12878:	andeq	r2, r1, r0, lsl ip
   1287c:	andeq	r2, r1, r0, lsl ip
   12880:	andeq	r2, r1, r0, lsl ip
   12884:	andeq	r2, r1, r0, lsl ip
   12888:	andeq	r2, r1, r0, lsl ip
   1288c:	ldrdeq	r2, [r1], -r4
   12890:	andeq	r2, r1, r8, ror #21
   12894:	andeq	r2, r1, r0, ror #21
   12898:	strdeq	r2, [r1], -r4
   1289c:	andeq	r2, r1, r8, ror fp
   128a0:	ldrdeq	r2, [r1], -r8
   128a4:	strdeq	r2, [r1], -r0
   128a8:	andeq	r2, r1, r0, lsl ip
   128ac:	andeq	r2, r1, r0, lsl ip
   128b0:	andeq	r2, r1, r0, lsl ip
   128b4:	andeq	r2, r1, r0, lsl ip
   128b8:	andeq	r2, r1, r0, lsl ip
   128bc:	andeq	r2, r1, r0, lsl ip
   128c0:	andeq	r2, r1, r0, lsl ip
   128c4:	andeq	r2, r1, r0, lsl ip
   128c8:	andeq	r2, r1, r0, lsl ip
   128cc:	andeq	r2, r1, r0, lsl ip
   128d0:	andeq	r2, r1, r0, lsl ip
   128d4:	andeq	r2, r1, r0, lsl ip
   128d8:	andeq	r2, r1, r0, lsl ip
   128dc:	andeq	r2, r1, r0, lsl ip
   128e0:	andeq	r2, r1, r0, lsl ip
   128e4:	andeq	r2, r1, r0, lsl ip
   128e8:	andeq	r2, r1, r0, lsl ip
   128ec:	andeq	r2, r1, r0, lsl ip
   128f0:	andeq	r2, r1, r4, lsl #25
   128f4:	andeq	r2, r1, r8, lsl #25
   128f8:	andeq	r2, r1, r8, lsl #25
   128fc:	andeq	r2, r1, r0, lsl #21
   12900:	andeq	r2, r1, r8, lsl #25
   12904:	andeq	r2, r1, ip, ror #20
   12908:	andeq	r2, r1, r8, lsl #25
   1290c:	andeq	r2, r1, r0, lsl #23
   12910:	andeq	r2, r1, r8, lsl #25
   12914:	andeq	r2, r1, r8, lsl #25
   12918:	andeq	r2, r1, r8, lsl #25
   1291c:	andeq	r2, r1, ip, ror #20
   12920:	andeq	r2, r1, ip, ror #20
   12924:	andeq	r2, r1, ip, ror #20
   12928:	andeq	r2, r1, ip, ror #20
   1292c:	andeq	r2, r1, ip, ror #20
   12930:	andeq	r2, r1, ip, ror #20
   12934:	andeq	r2, r1, ip, ror #20
   12938:	andeq	r2, r1, ip, ror #20
   1293c:	andeq	r2, r1, ip, ror #20
   12940:	andeq	r2, r1, ip, ror #20
   12944:	andeq	r2, r1, ip, ror #20
   12948:	andeq	r2, r1, ip, ror #20
   1294c:	andeq	r2, r1, ip, ror #20
   12950:	andeq	r2, r1, ip, ror #20
   12954:	andeq	r2, r1, ip, ror #20
   12958:	andeq	r2, r1, ip, ror #20
   1295c:	andeq	r2, r1, r8, lsl #25
   12960:	andeq	r2, r1, r8, lsl #25
   12964:	andeq	r2, r1, r8, lsl #25
   12968:	andeq	r2, r1, r8, lsl #25
   1296c:	andeq	r2, r1, r8, asr #22
   12970:	andeq	r2, r1, r0, lsl ip
   12974:	andeq	r2, r1, ip, ror #20
   12978:	andeq	r2, r1, ip, ror #20
   1297c:	andeq	r2, r1, ip, ror #20
   12980:	andeq	r2, r1, ip, ror #20
   12984:	andeq	r2, r1, ip, ror #20
   12988:	andeq	r2, r1, ip, ror #20
   1298c:	andeq	r2, r1, ip, ror #20
   12990:	andeq	r2, r1, ip, ror #20
   12994:	andeq	r2, r1, ip, ror #20
   12998:	andeq	r2, r1, ip, ror #20
   1299c:	andeq	r2, r1, ip, ror #20
   129a0:	andeq	r2, r1, ip, ror #20
   129a4:	andeq	r2, r1, ip, ror #20
   129a8:	andeq	r2, r1, ip, ror #20
   129ac:	andeq	r2, r1, ip, ror #20
   129b0:	andeq	r2, r1, ip, ror #20
   129b4:	andeq	r2, r1, ip, ror #20
   129b8:	andeq	r2, r1, ip, ror #20
   129bc:	andeq	r2, r1, ip, ror #20
   129c0:	andeq	r2, r1, ip, ror #20
   129c4:	andeq	r2, r1, ip, ror #20
   129c8:	andeq	r2, r1, ip, ror #20
   129cc:	andeq	r2, r1, ip, ror #20
   129d0:	andeq	r2, r1, ip, ror #20
   129d4:	andeq	r2, r1, ip, ror #20
   129d8:	andeq	r2, r1, ip, ror #20
   129dc:	andeq	r2, r1, r8, lsl #25
   129e0:			; <UNDEFINED> instruction: 0x00012ab4
   129e4:	andeq	r2, r1, ip, ror #20
   129e8:	andeq	r2, r1, r8, lsl #25
   129ec:	andeq	r2, r1, ip, ror #20
   129f0:	andeq	r2, r1, r8, lsl #25
   129f4:	andeq	r2, r1, ip, ror #20
   129f8:	andeq	r2, r1, ip, ror #20
   129fc:	andeq	r2, r1, ip, ror #20
   12a00:	andeq	r2, r1, ip, ror #20
   12a04:	andeq	r2, r1, ip, ror #20
   12a08:	andeq	r2, r1, ip, ror #20
   12a0c:	andeq	r2, r1, ip, ror #20
   12a10:	andeq	r2, r1, ip, ror #20
   12a14:	andeq	r2, r1, ip, ror #20
   12a18:	andeq	r2, r1, ip, ror #20
   12a1c:	andeq	r2, r1, ip, ror #20
   12a20:	andeq	r2, r1, ip, ror #20
   12a24:	andeq	r2, r1, ip, ror #20
   12a28:	andeq	r2, r1, ip, ror #20
   12a2c:	andeq	r2, r1, ip, ror #20
   12a30:	andeq	r2, r1, ip, ror #20
   12a34:	andeq	r2, r1, ip, ror #20
   12a38:	andeq	r2, r1, ip, ror #20
   12a3c:	andeq	r2, r1, ip, ror #20
   12a40:	andeq	r2, r1, ip, ror #20
   12a44:	andeq	r2, r1, ip, ror #20
   12a48:	andeq	r2, r1, ip, ror #20
   12a4c:	andeq	r2, r1, ip, ror #20
   12a50:	andeq	r2, r1, ip, ror #20
   12a54:	andeq	r2, r1, ip, ror #20
   12a58:	andeq	r2, r1, ip, ror #20
   12a5c:	muleq	r1, r4, sl
   12a60:	andeq	r2, r1, r8, lsl #25
   12a64:	muleq	r1, r4, sl
   12a68:	andeq	r2, r1, r0, lsl #21
   12a6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12a70:	cmp	r0, #0
   12a74:	beq	12ce8 <putc_unlocked@plt+0x1c18>
   12a78:	ldr	r0, [fp, #16]
   12a7c:	b	12cec <putc_unlocked@plt+0x1c1c>
   12a80:	mov	r9, #0
   12a84:	cmp	r6, #0
   12a88:	beq	12c84 <putc_unlocked@plt+0x1bb4>
   12a8c:	mov	sl, #0
   12a90:	b	12a6c <putc_unlocked@plt+0x199c>
   12a94:	mov	r9, #0
   12a98:	cmn	lr, #1
   12a9c:	beq	12c68 <putc_unlocked@plt+0x1b98>
   12aa0:	cmp	r6, #0
   12aa4:	bne	12a8c <putc_unlocked@plt+0x19bc>
   12aa8:	cmp	lr, #1
   12aac:	beq	12c84 <putc_unlocked@plt+0x1bb4>
   12ab0:	b	12a8c <putc_unlocked@plt+0x19bc>
   12ab4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12ab8:	cmp	r0, #2
   12abc:	bne	12cb0 <putc_unlocked@plt+0x1be0>
   12ac0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12ac4:	tst	r0, #1
   12ac8:	bne	133f8 <putc_unlocked@plt+0x2328>
   12acc:	mov	sl, #0
   12ad0:	mov	r0, #92	; 0x5c
   12ad4:	b	12cc4 <putc_unlocked@plt+0x1bf4>
   12ad8:	mov	r0, #102	; 0x66
   12adc:	b	12cd4 <putc_unlocked@plt+0x1c04>
   12ae0:	mov	r2, #116	; 0x74
   12ae4:	b	12af4 <putc_unlocked@plt+0x1a24>
   12ae8:	mov	r0, #98	; 0x62
   12aec:	b	12cd4 <putc_unlocked@plt+0x1c04>
   12af0:	mov	r2, #114	; 0x72
   12af4:	ldr	r0, [sp, #64]	; 0x40
   12af8:	tst	r0, #1
   12afc:	mov	r0, r2
   12b00:	bne	12cd4 <putc_unlocked@plt+0x1c04>
   12b04:	b	133f8 <putc_unlocked@plt+0x2328>
   12b08:	ldr	r0, [sp, #84]	; 0x54
   12b0c:	tst	r0, #1
   12b10:	beq	12dc4 <putc_unlocked@plt+0x1cf4>
   12b14:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b18:	tst	r0, #1
   12b1c:	bne	133f8 <putc_unlocked@plt+0x2328>
   12b20:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12b24:	cmp	r0, #2
   12b28:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12b2c:	movwne	r0, #1
   12b30:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12b34:	orr	r0, r0, r2
   12b38:	tst	r0, #1
   12b3c:	beq	131b8 <putc_unlocked@plt+0x20e8>
   12b40:	mov	r0, r8
   12b44:	b	131ec <putc_unlocked@plt+0x211c>
   12b48:	mov	sl, #0
   12b4c:	mov	r5, #63	; 0x3f
   12b50:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12b54:	cmp	r0, #5
   12b58:	beq	12f78 <putc_unlocked@plt+0x1ea8>
   12b5c:	cmp	r0, #2
   12b60:	bne	13018 <putc_unlocked@plt+0x1f48>
   12b64:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b68:	tst	r0, #1
   12b6c:	mov	r9, #0
   12b70:	beq	12a6c <putc_unlocked@plt+0x199c>
   12b74:	b	133f8 <putc_unlocked@plt+0x2328>
   12b78:	mov	r0, #118	; 0x76
   12b7c:	b	12cd4 <putc_unlocked@plt+0x1c04>
   12b80:	mov	r5, #39	; 0x27
   12b84:	mov	r0, #1
   12b88:	str	r0, [sp, #56]	; 0x38
   12b8c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12b90:	cmp	r0, #2
   12b94:	bne	12de4 <putc_unlocked@plt+0x1d14>
   12b98:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b9c:	tst	r0, #1
   12ba0:	bne	133f8 <putc_unlocked@plt+0x2328>
   12ba4:	ldr	r2, [sp, #72]	; 0x48
   12ba8:	cmp	r2, #0
   12bac:	mov	r0, r2
   12bb0:	movwne	r0, #1
   12bb4:	clz	r1, r4
   12bb8:	lsr	r1, r1, #5
   12bbc:	orrs	r0, r0, r1
   12bc0:	moveq	r2, r4
   12bc4:	str	r2, [sp, #72]	; 0x48
   12bc8:	moveq	r4, r0
   12bcc:	cmp	r8, r4
   12bd0:	movcc	r0, #39	; 0x27
   12bd4:	strbcc	r0, [r7, r8]
   12bd8:	add	r0, r8, #1
   12bdc:	cmp	r0, r4
   12be0:	movcc	r1, #92	; 0x5c
   12be4:	strbcc	r1, [r7, r0]
   12be8:	add	r0, r8, #2
   12bec:	cmp	r0, r4
   12bf0:	movcc	r1, #39	; 0x27
   12bf4:	strbcc	r1, [r7, r0]
   12bf8:	add	r8, r8, #3
   12bfc:	mov	r0, #0
   12c00:	str	r0, [fp, #-56]	; 0xffffffc8
   12c04:	mov	sl, #0
   12c08:	mov	r9, #1
   12c0c:	b	12a6c <putc_unlocked@plt+0x199c>
   12c10:	str	r4, [sp, #24]
   12c14:	ldr	r0, [sp, #40]	; 0x28
   12c18:	cmp	r0, #1
   12c1c:	bne	12dec <putc_unlocked@plt+0x1d1c>
   12c20:	str	lr, [sp, #28]
   12c24:	bl	10fc8 <__ctype_b_loc@plt>
   12c28:	ldr	ip, [fp, #-84]	; 0xffffffac
   12c2c:	ldr	r0, [r0]
   12c30:	add	r0, r0, r5, lsl #1
   12c34:	ldrb	r0, [r0, #1]
   12c38:	ubfx	r9, r0, #6, #1
   12c3c:	mov	r1, #1
   12c40:	ldr	r4, [sp, #24]
   12c44:	ldr	r0, [sp, #52]	; 0x34
   12c48:	orr	r0, r9, r0
   12c4c:	mov	r2, r1
   12c50:	cmp	r1, #1
   12c54:	bhi	13020 <putc_unlocked@plt+0x1f50>
   12c58:	tst	r0, #1
   12c5c:	beq	13020 <putc_unlocked@plt+0x1f50>
   12c60:	ldr	lr, [sp, #28]
   12c64:	b	12a6c <putc_unlocked@plt+0x199c>
   12c68:	cmp	r6, #0
   12c6c:	ldrbeq	r0, [ip, #1]
   12c70:	cmpeq	r0, #0
   12c74:	beq	12c84 <putc_unlocked@plt+0x1bb4>
   12c78:	mvn	lr, #0
   12c7c:	mov	sl, #0
   12c80:	b	12a6c <putc_unlocked@plt+0x199c>
   12c84:	mov	r1, #1
   12c88:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12c8c:	cmp	r0, #2
   12c90:	bne	12ca8 <putc_unlocked@plt+0x1bd8>
   12c94:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12c98:	tst	r0, #1
   12c9c:	mov	r9, r1
   12ca0:	beq	12a6c <putc_unlocked@plt+0x199c>
   12ca4:	b	133f8 <putc_unlocked@plt+0x2328>
   12ca8:	mov	r9, r1
   12cac:	b	12a6c <putc_unlocked@plt+0x199c>
   12cb0:	mov	sl, #0
   12cb4:	mov	r0, #92	; 0x5c
   12cb8:	ldr	r1, [sp, #48]	; 0x30
   12cbc:	cmp	r1, #0
   12cc0:	beq	12cd4 <putc_unlocked@plt+0x1c04>
   12cc4:	mov	r9, #0
   12cc8:	cmp	sl, #0
   12ccc:	beq	13284 <putc_unlocked@plt+0x21b4>
   12cd0:	b	132c0 <putc_unlocked@plt+0x21f0>
   12cd4:	mov	r9, #0
   12cd8:	ldr	r1, [sp, #84]	; 0x54
   12cdc:	tst	r1, #1
   12ce0:	mov	sl, #0
   12ce4:	bne	12d24 <putc_unlocked@plt+0x1c54>
   12ce8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12cec:	cmp	r0, #0
   12cf0:	mov	r0, r5
   12cf4:	beq	12d18 <putc_unlocked@plt+0x1c48>
   12cf8:	ubfx	r0, r5, #5, #3
   12cfc:	ldr	r1, [fp, #16]
   12d00:	ldr	r0, [r1, r0, lsl #2]
   12d04:	and	r1, r5, #31
   12d08:	mov	r2, #1
   12d0c:	tst	r0, r2, lsl r1
   12d10:	mov	r0, r5
   12d14:	bne	12d24 <putc_unlocked@plt+0x1c54>
   12d18:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12d1c:	cmp	r1, #0
   12d20:	beq	1327c <putc_unlocked@plt+0x21ac>
   12d24:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12d28:	tst	r1, #1
   12d2c:	bne	133f8 <putc_unlocked@plt+0x2328>
   12d30:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12d34:	cmp	r1, #2
   12d38:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12d3c:	movwne	r1, #1
   12d40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12d44:	orr	r1, r1, r2
   12d48:	tst	r1, #1
   12d4c:	beq	12d58 <putc_unlocked@plt+0x1c88>
   12d50:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12d54:	b	12d94 <putc_unlocked@plt+0x1cc4>
   12d58:	cmp	r8, r4
   12d5c:	movcc	r1, #39	; 0x27
   12d60:	strbcc	r1, [r7, r8]
   12d64:	add	r1, r8, #1
   12d68:	cmp	r1, r4
   12d6c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12d70:	movcc	r2, #36	; 0x24
   12d74:	strbcc	r2, [r7, r1]
   12d78:	add	r1, r8, #2
   12d7c:	cmp	r1, r4
   12d80:	movcc	r2, #39	; 0x27
   12d84:	strbcc	r2, [r7, r1]
   12d88:	add	r8, r8, #3
   12d8c:	mov	r1, #1
   12d90:	str	r1, [fp, #-56]	; 0xffffffc8
   12d94:	cmp	r8, r4
   12d98:	movcc	r1, #92	; 0x5c
   12d9c:	strbcc	r1, [r7, r8]
   12da0:	add	r8, r8, #1
   12da4:	cmp	r8, r4
   12da8:	strbcc	r0, [r7, r8]
   12dac:	and	r5, r5, r9
   12db0:	add	r8, r8, #1
   12db4:	add	r6, r6, #1
   12db8:	cmn	lr, #1
   12dbc:	bne	12798 <putc_unlocked@plt+0x16c8>
   12dc0:	b	127a4 <putc_unlocked@plt+0x16d4>
   12dc4:	mov	r9, #0
   12dc8:	ldr	r0, [sp, #36]	; 0x24
   12dcc:	cmp	r0, #0
   12dd0:	mov	sl, #0
   12dd4:	mov	r5, #0
   12dd8:	beq	12ce8 <putc_unlocked@plt+0x1c18>
   12ddc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12de0:	b	12db4 <putc_unlocked@plt+0x1ce4>
   12de4:	mov	r9, #1
   12de8:	b	12a6c <putc_unlocked@plt+0x199c>
   12dec:	mov	r0, #0
   12df0:	str	r0, [fp, #-36]	; 0xffffffdc
   12df4:	str	r0, [fp, #-40]	; 0xffffffd8
   12df8:	cmn	lr, #1
   12dfc:	bne	12e10 <putc_unlocked@plt+0x1d40>
   12e00:	mov	r0, ip
   12e04:	bl	10fe0 <strlen@plt>
   12e08:	ldr	ip, [fp, #-84]	; 0xffffffac
   12e0c:	mov	lr, r0
   12e10:	add	r0, ip, r6
   12e14:	str	r0, [sp, #20]
   12e18:	mov	r9, #1
   12e1c:	mov	r7, #0
   12e20:	sub	r4, fp, #40	; 0x28
   12e24:	str	lr, [sp, #28]
   12e28:	str	r7, [sp, #44]	; 0x2c
   12e2c:	add	r7, r7, r6
   12e30:	add	r1, ip, r7
   12e34:	sub	r2, lr, r7
   12e38:	sub	r0, fp, #44	; 0x2c
   12e3c:	mov	r3, r4
   12e40:	bl	14e7c <putc_unlocked@plt+0x3dac>
   12e44:	cmp	r0, #0
   12e48:	beq	13308 <putc_unlocked@plt+0x2238>
   12e4c:	cmn	r0, #1
   12e50:	beq	132c8 <putc_unlocked@plt+0x21f8>
   12e54:	cmn	r0, #2
   12e58:	ldr	lr, [sp, #28]
   12e5c:	beq	132d0 <putc_unlocked@plt+0x2200>
   12e60:	cmp	r0, #2
   12e64:	mov	r1, #0
   12e68:	movwcc	r1, #1
   12e6c:	ldr	r2, [sp, #60]	; 0x3c
   12e70:	eor	r2, r2, #1
   12e74:	orrs	r1, r2, r1
   12e78:	ldr	r4, [sp, #24]
   12e7c:	bne	12f3c <putc_unlocked@plt+0x1e6c>
   12e80:	ldr	r1, [sp, #44]	; 0x2c
   12e84:	ldr	r2, [sp, #20]
   12e88:	add	r1, r2, r1
   12e8c:	mov	r2, #1
   12e90:	ldrb	r3, [r1, r2]
   12e94:	sub	r3, r3, #91	; 0x5b
   12e98:	cmp	r3, #33	; 0x21
   12e9c:	bhi	12f30 <putc_unlocked@plt+0x1e60>
   12ea0:	add	r7, pc, #0
   12ea4:	ldr	pc, [r7, r3, lsl #2]
   12ea8:	strdeq	r3, [r1], -r0
   12eac:	strdeq	r3, [r1], -r0
   12eb0:	andeq	r2, r1, r0, lsr pc
   12eb4:	strdeq	r3, [r1], -r0
   12eb8:	andeq	r2, r1, r0, lsr pc
   12ebc:	strdeq	r3, [r1], -r0
   12ec0:	andeq	r2, r1, r0, lsr pc
   12ec4:	andeq	r2, r1, r0, lsr pc
   12ec8:	andeq	r2, r1, r0, lsr pc
   12ecc:	andeq	r2, r1, r0, lsr pc
   12ed0:	andeq	r2, r1, r0, lsr pc
   12ed4:	andeq	r2, r1, r0, lsr pc
   12ed8:	andeq	r2, r1, r0, lsr pc
   12edc:	andeq	r2, r1, r0, lsr pc
   12ee0:	andeq	r2, r1, r0, lsr pc
   12ee4:	andeq	r2, r1, r0, lsr pc
   12ee8:	andeq	r2, r1, r0, lsr pc
   12eec:	andeq	r2, r1, r0, lsr pc
   12ef0:	andeq	r2, r1, r0, lsr pc
   12ef4:	andeq	r2, r1, r0, lsr pc
   12ef8:	andeq	r2, r1, r0, lsr pc
   12efc:	andeq	r2, r1, r0, lsr pc
   12f00:	andeq	r2, r1, r0, lsr pc
   12f04:	andeq	r2, r1, r0, lsr pc
   12f08:	andeq	r2, r1, r0, lsr pc
   12f0c:	andeq	r2, r1, r0, lsr pc
   12f10:	andeq	r2, r1, r0, lsr pc
   12f14:	andeq	r2, r1, r0, lsr pc
   12f18:	andeq	r2, r1, r0, lsr pc
   12f1c:	andeq	r2, r1, r0, lsr pc
   12f20:	andeq	r2, r1, r0, lsr pc
   12f24:	andeq	r2, r1, r0, lsr pc
   12f28:	andeq	r2, r1, r0, lsr pc
   12f2c:	strdeq	r3, [r1], -r0
   12f30:	add	r2, r2, #1
   12f34:	cmp	r2, r0
   12f38:	bcc	12e90 <putc_unlocked@plt+0x1dc0>
   12f3c:	ldr	r7, [sp, #44]	; 0x2c
   12f40:	add	r7, r0, r7
   12f44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12f48:	bl	10f2c <iswprint@plt>
   12f4c:	cmp	r0, #0
   12f50:	movwne	r0, #1
   12f54:	and	r9, r9, r0
   12f58:	sub	r4, fp, #40	; 0x28
   12f5c:	mov	r0, r4
   12f60:	bl	10ed8 <mbsinit@plt>
   12f64:	ldr	lr, [sp, #28]
   12f68:	cmp	r0, #0
   12f6c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12f70:	beq	12e28 <putc_unlocked@plt+0x1d58>
   12f74:	b	13310 <putc_unlocked@plt+0x2240>
   12f78:	ldr	r0, [sp, #32]
   12f7c:	cmp	r0, #0
   12f80:	beq	13018 <putc_unlocked@plt+0x1f48>
   12f84:	add	r0, r6, #2
   12f88:	cmp	r0, lr
   12f8c:	bcs	13018 <putc_unlocked@plt+0x1f48>
   12f90:	add	r1, ip, r6
   12f94:	ldrb	r1, [r1, #1]
   12f98:	cmp	r1, #63	; 0x3f
   12f9c:	bne	13018 <putc_unlocked@plt+0x1f48>
   12fa0:	ldrb	r9, [ip, r0]
   12fa4:	sub	r2, r9, #33	; 0x21
   12fa8:	cmp	r2, #29
   12fac:	bhi	13018 <putc_unlocked@plt+0x1f48>
   12fb0:	mov	r3, #1
   12fb4:	movw	r1, #20929	; 0x51c1
   12fb8:	movt	r1, #14336	; 0x3800
   12fbc:	tst	r1, r3, lsl r2
   12fc0:	beq	13018 <putc_unlocked@plt+0x1f48>
   12fc4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12fc8:	tst	r1, #1
   12fcc:	bne	133f8 <putc_unlocked@plt+0x2328>
   12fd0:	cmp	r8, r4
   12fd4:	movcc	r1, #63	; 0x3f
   12fd8:	strbcc	r1, [r7, r8]
   12fdc:	add	r2, r8, #1
   12fe0:	cmp	r2, r4
   12fe4:	movcc	r1, #34	; 0x22
   12fe8:	strbcc	r1, [r7, r2]
   12fec:	add	r2, r8, #2
   12ff0:	cmp	r2, r4
   12ff4:	movcc	r1, #34	; 0x22
   12ff8:	strbcc	r1, [r7, r2]
   12ffc:	add	r2, r8, #3
   13000:	cmp	r2, r4
   13004:	movcc	r1, #63	; 0x3f
   13008:	strbcc	r1, [r7, r2]
   1300c:	add	r8, r8, #4
   13010:	mov	r6, r0
   13014:	mov	r5, r9
   13018:	mov	r9, #0
   1301c:	b	12a6c <putc_unlocked@plt+0x199c>
   13020:	add	r1, r2, r6
   13024:	str	r1, [sp, #44]	; 0x2c
   13028:	add	r1, r6, #1
   1302c:	mov	r3, #0
   13030:	ldr	lr, [sp, #28]
   13034:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13038:	tst	r0, #1
   1303c:	bne	13130 <putc_unlocked@plt+0x2060>
   13040:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13044:	tst	r2, #1
   13048:	bne	133f8 <putc_unlocked@plt+0x2328>
   1304c:	cmp	r6, #2
   13050:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13054:	movwne	r3, #1
   13058:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1305c:	orr	r3, r3, r2
   13060:	tst	r3, #1
   13064:	bne	130a0 <putc_unlocked@plt+0x1fd0>
   13068:	cmp	r8, r4
   1306c:	movcc	r2, #39	; 0x27
   13070:	strbcc	r2, [r7, r8]
   13074:	add	r3, r8, #1
   13078:	cmp	r3, r4
   1307c:	movcc	r2, #36	; 0x24
   13080:	strbcc	r2, [r7, r3]
   13084:	add	r3, r8, #2
   13088:	cmp	r3, r4
   1308c:	movcc	r2, #39	; 0x27
   13090:	strbcc	r2, [r7, r3]
   13094:	add	r8, r8, #3
   13098:	mov	r2, #1
   1309c:	str	r2, [fp, #-56]	; 0xffffffc8
   130a0:	cmp	r8, r4
   130a4:	movcc	r2, #92	; 0x5c
   130a8:	strbcc	r2, [r7, r8]
   130ac:	add	r3, r8, #1
   130b0:	cmp	r3, r4
   130b4:	bcs	130d4 <putc_unlocked@plt+0x2004>
   130b8:	and	r7, r5, #192	; 0xc0
   130bc:	mov	r2, #48	; 0x30
   130c0:	orr	r7, r2, r7, lsr #6
   130c4:	ldr	r6, [sp, #80]	; 0x50
   130c8:	strb	r7, [r6, r3]
   130cc:	ldr	r6, [fp, #-60]	; 0xffffffc4
   130d0:	ldr	r7, [sp, #80]	; 0x50
   130d4:	add	r3, r8, #2
   130d8:	cmp	r3, r4
   130dc:	bcs	130fc <putc_unlocked@plt+0x202c>
   130e0:	lsr	r7, r5, #3
   130e4:	mov	r2, #6
   130e8:	bfi	r7, r2, #3, #29
   130ec:	ldr	r6, [sp, #80]	; 0x50
   130f0:	strb	r7, [r6, r3]
   130f4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   130f8:	ldr	r7, [sp, #80]	; 0x50
   130fc:	mov	r2, #6
   13100:	bfi	r5, r2, #3, #29
   13104:	add	r8, r8, #3
   13108:	mov	r3, #1
   1310c:	b	13154 <putc_unlocked@plt+0x2084>
   13110:	ldr	r7, [sp, #80]	; 0x50
   13114:	cmp	r8, r4
   13118:	strbcc	r5, [r7, r8]
   1311c:	ldrb	r5, [ip, r1]
   13120:	add	r1, r1, #1
   13124:	add	r8, r8, #1
   13128:	tst	r0, #1
   1312c:	beq	13040 <putc_unlocked@plt+0x1f70>
   13130:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13134:	tst	r2, #1
   13138:	beq	1314c <putc_unlocked@plt+0x207c>
   1313c:	cmp	r8, r4
   13140:	movcc	r2, #92	; 0x5c
   13144:	strbcc	r2, [r7, r8]
   13148:	add	r8, r8, #1
   1314c:	mov	r2, #0
   13150:	str	r2, [fp, #-52]	; 0xffffffcc
   13154:	and	sl, r3, #1
   13158:	ldr	r2, [sp, #44]	; 0x2c
   1315c:	cmp	r2, r1
   13160:	bls	1326c <putc_unlocked@plt+0x219c>
   13164:	cmp	sl, #0
   13168:	movwne	sl, #1
   1316c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13170:	mvn	r7, r2
   13174:	orr	r7, r7, sl
   13178:	tst	r7, #1
   1317c:	bne	13110 <putc_unlocked@plt+0x2040>
   13180:	cmp	r8, r4
   13184:	ldrcc	r7, [sp, #80]	; 0x50
   13188:	movcc	r2, #39	; 0x27
   1318c:	strbcc	r2, [r7, r8]
   13190:	add	r7, r8, #1
   13194:	cmp	r7, r4
   13198:	ldrcc	r6, [sp, #80]	; 0x50
   1319c:	movcc	r2, #39	; 0x27
   131a0:	strbcc	r2, [r6, r7]
   131a4:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   131a8:	add	r8, r8, #2
   131ac:	mov	r2, #0
   131b0:	str	r2, [fp, #-56]	; 0xffffffc8
   131b4:	b	13110 <putc_unlocked@plt+0x2040>
   131b8:	cmp	r8, r4
   131bc:	movcc	r0, #39	; 0x27
   131c0:	strbcc	r0, [r7, r8]
   131c4:	add	r0, r8, #1
   131c8:	cmp	r0, r4
   131cc:	movcc	r1, #36	; 0x24
   131d0:	strbcc	r1, [r7, r0]
   131d4:	add	r0, r8, #2
   131d8:	cmp	r0, r4
   131dc:	movcc	r1, #39	; 0x27
   131e0:	strbcc	r1, [r7, r0]
   131e4:	add	r0, r8, #3
   131e8:	mov	r2, #1
   131ec:	cmp	r0, r4
   131f0:	movcc	r1, #92	; 0x5c
   131f4:	strbcc	r1, [r7, r0]
   131f8:	str	r2, [fp, #-56]	; 0xffffffc8
   131fc:	add	r8, r0, #1
   13200:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13204:	cmp	r1, #2
   13208:	beq	1325c <putc_unlocked@plt+0x218c>
   1320c:	add	r1, r6, #1
   13210:	mov	r9, #0
   13214:	mov	sl, #1
   13218:	mov	r5, #48	; 0x30
   1321c:	cmp	r1, lr
   13220:	bcs	12a6c <putc_unlocked@plt+0x199c>
   13224:	ldrb	r1, [ip, r1]
   13228:	sub	r1, r1, #48	; 0x30
   1322c:	uxtb	r1, r1
   13230:	cmp	r1, #9
   13234:	bhi	12a6c <putc_unlocked@plt+0x199c>
   13238:	cmp	r8, r4
   1323c:	movcc	r1, #48	; 0x30
   13240:	strbcc	r1, [r7, r8]
   13244:	add	r1, r0, #2
   13248:	cmp	r1, r4
   1324c:	movcc	r2, #48	; 0x30
   13250:	strbcc	r2, [r7, r1]
   13254:	add	r8, r0, #3
   13258:	b	12a6c <putc_unlocked@plt+0x199c>
   1325c:	mov	r0, #48	; 0x30
   13260:	mov	sl, #1
   13264:	mov	r9, #0
   13268:	b	12d18 <putc_unlocked@plt+0x1c48>
   1326c:	sub	r6, r1, #1
   13270:	cmp	sl, #0
   13274:	movwne	sl, #1
   13278:	mov	r0, r5
   1327c:	cmp	sl, #0
   13280:	bne	132c0 <putc_unlocked@plt+0x21f0>
   13284:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13288:	tst	r1, #1
   1328c:	beq	132c0 <putc_unlocked@plt+0x21f0>
   13290:	cmp	r8, r4
   13294:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13298:	movcc	r1, #39	; 0x27
   1329c:	strbcc	r1, [r7, r8]
   132a0:	add	r1, r8, #1
   132a4:	cmp	r1, r4
   132a8:	movcc	r2, #39	; 0x27
   132ac:	strbcc	r2, [r7, r1]
   132b0:	add	r8, r8, #2
   132b4:	mov	r1, #0
   132b8:	str	r1, [fp, #-56]	; 0xffffffc8
   132bc:	b	12da4 <putc_unlocked@plt+0x1cd4>
   132c0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   132c4:	b	12da4 <putc_unlocked@plt+0x1cd4>
   132c8:	mov	r9, #0
   132cc:	b	13308 <putc_unlocked@plt+0x2238>
   132d0:	mov	r9, #0
   132d4:	cmp	r7, lr
   132d8:	bcs	13308 <putc_unlocked@plt+0x2238>
   132dc:	ldr	ip, [fp, #-84]	; 0xffffffac
   132e0:	ldr	r7, [sp, #44]	; 0x2c
   132e4:	ldr	r0, [sp, #20]
   132e8:	ldrb	r0, [r0, r7]
   132ec:	cmp	r0, #0
   132f0:	beq	13310 <putc_unlocked@plt+0x2240>
   132f4:	add	r7, r7, #1
   132f8:	add	r0, r6, r7
   132fc:	cmp	r0, lr
   13300:	bcc	132e4 <putc_unlocked@plt+0x2214>
   13304:	b	13310 <putc_unlocked@plt+0x2240>
   13308:	ldr	ip, [fp, #-84]	; 0xffffffac
   1330c:	ldr	r7, [sp, #44]	; 0x2c
   13310:	mov	r1, r7
   13314:	ldr	r7, [sp, #80]	; 0x50
   13318:	b	12c40 <putc_unlocked@plt+0x1b70>
   1331c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13320:	eor	r0, r1, #2
   13324:	orr	r0, r0, r8
   13328:	clz	r0, r0
   1332c:	lsr	r0, r0, #5
   13330:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13334:	tst	r2, r0
   13338:	bne	133f8 <putc_unlocked@plt+0x2328>
   1333c:	cmp	r1, #2
   13340:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13344:	movwne	r0, #1
   13348:	orr	r0, r2, r0
   1334c:	tst	r0, #1
   13350:	ldreq	r0, [sp, #56]	; 0x38
   13354:	eoreq	r0, r0, #1
   13358:	tsteq	r0, #1
   1335c:	bne	13390 <putc_unlocked@plt+0x22c0>
   13360:	mov	r9, lr
   13364:	tst	r5, #1
   13368:	bne	13460 <putc_unlocked@plt+0x2390>
   1336c:	ldr	r0, [sp, #72]	; 0x48
   13370:	cmp	r0, #0
   13374:	beq	13390 <putc_unlocked@plt+0x22c0>
   13378:	mov	r5, #0
   1337c:	cmp	r4, #0
   13380:	ldr	r0, [sp, #84]	; 0x54
   13384:	mov	sl, r2
   13388:	ldr	r6, [sp, #72]	; 0x48
   1338c:	beq	12528 <putc_unlocked@plt+0x1458>
   13390:	ldr	r1, [sp, #92]	; 0x5c
   13394:	clz	r0, r1
   13398:	lsr	r0, r0, #5
   1339c:	orr	r0, r0, r2
   133a0:	tst	r0, #1
   133a4:	bne	133d0 <putc_unlocked@plt+0x2300>
   133a8:	ldrb	r0, [r1]
   133ac:	cmp	r0, #0
   133b0:	beq	133d0 <putc_unlocked@plt+0x2300>
   133b4:	add	r1, r1, #1
   133b8:	cmp	r8, r4
   133bc:	strbcc	r0, [r7, r8]
   133c0:	add	r8, r8, #1
   133c4:	ldrb	r0, [r1], #1
   133c8:	cmp	r0, #0
   133cc:	bne	133b8 <putc_unlocked@plt+0x22e8>
   133d0:	cmp	r8, r4
   133d4:	movcc	r0, #0
   133d8:	strbcc	r0, [r7, r8]
   133dc:	b	13454 <putc_unlocked@plt+0x2384>
   133e0:	ldr	ip, [fp, #-84]	; 0xffffffac
   133e4:	mov	lr, r4
   133e8:	mov	r4, r5
   133ec:	b	133f8 <putc_unlocked@plt+0x2328>
   133f0:	ldr	r7, [sp, #80]	; 0x50
   133f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   133f8:	mov	r0, #0
   133fc:	ldr	r1, [fp, #12]
   13400:	bic	r1, r1, #2
   13404:	ldr	r2, [sp, #84]	; 0x54
   13408:	tst	r2, #1
   1340c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13410:	mov	r2, r3
   13414:	movwne	r2, #4
   13418:	cmp	r3, #2
   1341c:	movne	r2, r3
   13420:	str	r2, [sp]
   13424:	str	r1, [sp, #4]
   13428:	str	r0, [sp, #8]
   1342c:	ldr	r0, [sp, #68]	; 0x44
   13430:	str	r0, [sp, #12]
   13434:	ldr	r0, [sp, #76]	; 0x4c
   13438:	str	r0, [sp, #16]
   1343c:	mov	r0, r7
   13440:	mov	r1, r4
   13444:	mov	r2, ip
   13448:	mov	r3, lr
   1344c:	bl	124a0 <putc_unlocked@plt+0x13d0>
   13450:	mov	r8, r0
   13454:	mov	r0, r8
   13458:	sub	sp, fp, #28
   1345c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13460:	mov	r0, #5
   13464:	str	r0, [sp]
   13468:	ldr	r0, [fp, #12]
   1346c:	str	r0, [sp, #4]
   13470:	ldr	r0, [fp, #16]
   13474:	str	r0, [sp, #8]
   13478:	ldr	r0, [sp, #68]	; 0x44
   1347c:	str	r0, [sp, #12]
   13480:	ldr	r0, [sp, #76]	; 0x4c
   13484:	str	r0, [sp, #16]
   13488:	mov	r0, r7
   1348c:	ldr	r1, [sp, #72]	; 0x48
   13490:	ldr	r2, [fp, #-84]	; 0xffffffac
   13494:	mov	r3, r9
   13498:	b	1344c <putc_unlocked@plt+0x237c>
   1349c:	bl	110b8 <abort@plt>
   134a0:	mov	r3, r2
   134a4:	mov	r2, #0
   134a8:	b	134ac <putc_unlocked@plt+0x23dc>
   134ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134b0:	add	fp, sp, #28
   134b4:	sub	sp, sp, #36	; 0x24
   134b8:	mov	r4, r2
   134bc:	str	r2, [sp, #24]
   134c0:	mov	r5, r1
   134c4:	mov	r6, r0
   134c8:	str	r0, [sp, #20]
   134cc:	movw	r8, #24960	; 0x6180
   134d0:	movt	r8, #2
   134d4:	cmp	r3, #0
   134d8:	movne	r8, r3
   134dc:	bl	10fec <__errno_location@plt>
   134e0:	str	r0, [sp, #28]
   134e4:	ldm	r8, {r3, r9}
   134e8:	ldr	r1, [r8, #40]	; 0x28
   134ec:	ldr	r2, [r8, #44]	; 0x2c
   134f0:	ldr	r7, [r0]
   134f4:	str	r7, [sp, #32]
   134f8:	add	sl, r8, #8
   134fc:	cmp	r4, #0
   13500:	orreq	r9, r9, #1
   13504:	stm	sp, {r3, r9, sl}
   13508:	str	r1, [sp, #12]
   1350c:	str	r2, [sp, #16]
   13510:	mov	r0, #0
   13514:	mov	r1, #0
   13518:	mov	r2, r6
   1351c:	mov	r3, r5
   13520:	mov	r7, r5
   13524:	bl	124a0 <putc_unlocked@plt+0x13d0>
   13528:	mov	r5, r0
   1352c:	add	r4, r0, #1
   13530:	mov	r0, r4
   13534:	bl	143bc <putc_unlocked@plt+0x32ec>
   13538:	mov	r6, r0
   1353c:	ldr	r0, [r8]
   13540:	ldr	r1, [r8, #40]	; 0x28
   13544:	ldr	r2, [r8, #44]	; 0x2c
   13548:	stm	sp, {r0, r9, sl}
   1354c:	str	r1, [sp, #12]
   13550:	str	r2, [sp, #16]
   13554:	mov	r0, r6
   13558:	mov	r1, r4
   1355c:	ldr	r2, [sp, #20]
   13560:	mov	r3, r7
   13564:	bl	124a0 <putc_unlocked@plt+0x13d0>
   13568:	ldr	r0, [sp, #24]
   1356c:	ldr	r1, [sp, #32]
   13570:	ldr	r2, [sp, #28]
   13574:	str	r1, [r2]
   13578:	cmp	r0, #0
   1357c:	strne	r5, [r0]
   13580:	mov	r0, r6
   13584:	sub	sp, fp, #28
   13588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1358c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13590:	add	fp, sp, #24
   13594:	movw	r8, #24832	; 0x6100
   13598:	movt	r8, #2
   1359c:	ldr	r4, [r8]
   135a0:	movw	r5, #24836	; 0x6104
   135a4:	movt	r5, #2
   135a8:	ldr	r0, [r5]
   135ac:	cmp	r0, #2
   135b0:	blt	135dc <putc_unlocked@plt+0x250c>
   135b4:	add	r7, r4, #12
   135b8:	mov	r6, #0
   135bc:	ldr	r0, [r7, r6, lsl #3]
   135c0:	bl	12198 <putc_unlocked@plt+0x10c8>
   135c4:	add	r0, r6, #1
   135c8:	ldr	r1, [r5]
   135cc:	add	r2, r6, #2
   135d0:	cmp	r2, r1
   135d4:	mov	r6, r0
   135d8:	blt	135bc <putc_unlocked@plt+0x24ec>
   135dc:	ldr	r0, [r4, #4]
   135e0:	movw	r7, #25008	; 0x61b0
   135e4:	movt	r7, #2
   135e8:	cmp	r0, r7
   135ec:	beq	13604 <putc_unlocked@plt+0x2534>
   135f0:	bl	12198 <putc_unlocked@plt+0x10c8>
   135f4:	movw	r0, #24840	; 0x6108
   135f8:	movt	r0, #2
   135fc:	mov	r6, #256	; 0x100
   13600:	strd	r6, [r0]
   13604:	movw	r6, #24840	; 0x6108
   13608:	movt	r6, #2
   1360c:	cmp	r4, r6
   13610:	beq	13620 <putc_unlocked@plt+0x2550>
   13614:	mov	r0, r4
   13618:	bl	12198 <putc_unlocked@plt+0x10c8>
   1361c:	str	r6, [r8]
   13620:	mov	r0, #1
   13624:	str	r0, [r5]
   13628:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1362c:	movw	r3, #24960	; 0x6180
   13630:	movt	r3, #2
   13634:	mvn	r2, #0
   13638:	b	1363c <putc_unlocked@plt+0x256c>
   1363c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13640:	add	fp, sp, #28
   13644:	sub	sp, sp, #44	; 0x2c
   13648:	mov	r7, r3
   1364c:	str	r2, [sp, #36]	; 0x24
   13650:	str	r1, [sp, #32]
   13654:	mov	r5, r0
   13658:	bl	10fec <__errno_location@plt>
   1365c:	cmp	r5, #0
   13660:	blt	137cc <putc_unlocked@plt+0x26fc>
   13664:	cmn	r5, #-2147483647	; 0x80000001
   13668:	beq	137cc <putc_unlocked@plt+0x26fc>
   1366c:	movw	r4, #24832	; 0x6100
   13670:	movt	r4, #2
   13674:	ldr	r6, [r4]
   13678:	str	r0, [sp, #28]
   1367c:	ldr	r0, [r0]
   13680:	str	r0, [sp, #24]
   13684:	movw	r8, #24836	; 0x6104
   13688:	movt	r8, #2
   1368c:	ldr	r1, [r8]
   13690:	cmp	r1, r5
   13694:	ble	136a0 <putc_unlocked@plt+0x25d0>
   13698:	mov	sl, r6
   1369c:	b	13708 <putc_unlocked@plt+0x2638>
   136a0:	str	r1, [fp, #-32]	; 0xffffffe0
   136a4:	mov	r0, #8
   136a8:	str	r0, [sp]
   136ac:	movw	r9, #24840	; 0x6108
   136b0:	movt	r9, #2
   136b4:	subs	r0, r6, r9
   136b8:	movne	r0, r6
   136bc:	add	r2, r5, #1
   136c0:	sub	r2, r2, r1
   136c4:	sub	r1, fp, #32
   136c8:	mvn	r3, #-2147483648	; 0x80000000
   136cc:	bl	144a4 <putc_unlocked@plt+0x33d4>
   136d0:	mov	sl, r0
   136d4:	str	r0, [r4]
   136d8:	cmp	r6, r9
   136dc:	ldrdeq	r0, [r9]
   136e0:	stmeq	sl, {r0, r1}
   136e4:	ldr	r1, [r8]
   136e8:	add	r0, sl, r1, lsl #3
   136ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   136f0:	sub	r1, r2, r1
   136f4:	lsl	r2, r1, #3
   136f8:	mov	r1, #0
   136fc:	bl	11010 <memset@plt>
   13700:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13704:	str	r0, [r8]
   13708:	mov	r9, sl
   1370c:	ldr	r6, [r9, r5, lsl #3]!
   13710:	ldr	r4, [r9, #4]!
   13714:	ldm	r7, {r0, r1}
   13718:	ldr	r2, [r7, #40]	; 0x28
   1371c:	ldr	r3, [r7, #44]	; 0x2c
   13720:	orr	r8, r1, #1
   13724:	add	r1, r7, #8
   13728:	stm	sp, {r0, r8}
   1372c:	str	r1, [sp, #20]
   13730:	add	r0, sp, #8
   13734:	stm	r0, {r1, r2, r3}
   13738:	mov	r0, r4
   1373c:	mov	r1, r6
   13740:	ldr	r2, [sp, #32]
   13744:	ldr	r3, [sp, #36]	; 0x24
   13748:	bl	124a0 <putc_unlocked@plt+0x13d0>
   1374c:	cmp	r6, r0
   13750:	bhi	137b4 <putc_unlocked@plt+0x26e4>
   13754:	add	r6, r0, #1
   13758:	str	r6, [sl, r5, lsl #3]
   1375c:	movw	r0, #25008	; 0x61b0
   13760:	movt	r0, #2
   13764:	cmp	r4, r0
   13768:	beq	13774 <putc_unlocked@plt+0x26a4>
   1376c:	mov	r0, r4
   13770:	bl	12198 <putc_unlocked@plt+0x10c8>
   13774:	mov	r0, r6
   13778:	bl	143bc <putc_unlocked@plt+0x32ec>
   1377c:	mov	r4, r0
   13780:	str	r0, [r9]
   13784:	ldr	r0, [r7]
   13788:	ldr	r1, [r7, #40]	; 0x28
   1378c:	ldr	r2, [r7, #44]	; 0x2c
   13790:	stm	sp, {r0, r8}
   13794:	ldr	r0, [sp, #20]
   13798:	add	r3, sp, #8
   1379c:	stm	r3, {r0, r1, r2}
   137a0:	mov	r0, r4
   137a4:	mov	r1, r6
   137a8:	ldr	r2, [sp, #32]
   137ac:	ldr	r3, [sp, #36]	; 0x24
   137b0:	bl	124a0 <putc_unlocked@plt+0x13d0>
   137b4:	ldr	r0, [sp, #28]
   137b8:	ldr	r1, [sp, #24]
   137bc:	str	r1, [r0]
   137c0:	mov	r0, r4
   137c4:	sub	sp, fp, #28
   137c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137cc:	bl	110b8 <abort@plt>
   137d0:	movw	r3, #24960	; 0x6180
   137d4:	movt	r3, #2
   137d8:	b	1363c <putc_unlocked@plt+0x256c>
   137dc:	mov	r1, r0
   137e0:	mov	r0, #0
   137e4:	b	1362c <putc_unlocked@plt+0x255c>
   137e8:	mov	r2, r1
   137ec:	mov	r1, r0
   137f0:	mov	r0, #0
   137f4:	b	137d0 <putc_unlocked@plt+0x2700>
   137f8:	push	{r4, r5, r6, sl, fp, lr}
   137fc:	add	fp, sp, #16
   13800:	sub	sp, sp, #48	; 0x30
   13804:	mov	r4, r2
   13808:	mov	r5, r0
   1380c:	mov	r6, sp
   13810:	mov	r0, r6
   13814:	bl	13834 <putc_unlocked@plt+0x2764>
   13818:	mov	r0, r5
   1381c:	mov	r1, r4
   13820:	mvn	r2, #0
   13824:	mov	r3, r6
   13828:	bl	1363c <putc_unlocked@plt+0x256c>
   1382c:	sub	sp, fp, #16
   13830:	pop	{r4, r5, r6, sl, fp, pc}
   13834:	vmov.i32	q8, #0	; 0x00000000
   13838:	mov	r2, #32
   1383c:	mov	r3, r0
   13840:	vst1.32	{d16-d17}, [r3], r2
   13844:	vst1.32	{d16-d17}, [r3]
   13848:	add	r2, r0, #16
   1384c:	vst1.32	{d16-d17}, [r2]
   13850:	cmp	r1, #10
   13854:	strne	r1, [r0]
   13858:	bxne	lr
   1385c:	push	{fp, lr}
   13860:	mov	fp, sp
   13864:	bl	110b8 <abort@plt>
   13868:	push	{r4, r5, r6, r7, fp, lr}
   1386c:	add	fp, sp, #16
   13870:	sub	sp, sp, #48	; 0x30
   13874:	mov	r4, r3
   13878:	mov	r5, r2
   1387c:	mov	r6, r0
   13880:	mov	r7, sp
   13884:	mov	r0, r7
   13888:	bl	13834 <putc_unlocked@plt+0x2764>
   1388c:	mov	r0, r6
   13890:	mov	r1, r5
   13894:	mov	r2, r4
   13898:	mov	r3, r7
   1389c:	bl	1363c <putc_unlocked@plt+0x256c>
   138a0:	sub	sp, fp, #16
   138a4:	pop	{r4, r5, r6, r7, fp, pc}
   138a8:	mov	r2, r1
   138ac:	mov	r1, r0
   138b0:	mov	r0, #0
   138b4:	b	137f8 <putc_unlocked@plt+0x2728>
   138b8:	mov	r3, r2
   138bc:	mov	r2, r1
   138c0:	mov	r1, r0
   138c4:	mov	r0, #0
   138c8:	b	13868 <putc_unlocked@plt+0x2798>
   138cc:	push	{r4, r5, r6, sl, fp, lr}
   138d0:	add	fp, sp, #16
   138d4:	sub	sp, sp, #48	; 0x30
   138d8:	mov	r4, r1
   138dc:	mov	r5, r0
   138e0:	mov	r0, #32
   138e4:	movw	r1, #24960	; 0x6180
   138e8:	movt	r1, #2
   138ec:	add	r3, r1, #16
   138f0:	vld1.64	{d16-d17}, [r1], r0
   138f4:	mov	r6, sp
   138f8:	vld1.64	{d18-d19}, [r3]
   138fc:	add	r3, r6, #16
   13900:	vld1.64	{d20-d21}, [r1]
   13904:	vst1.64	{d18-d19}, [r3]
   13908:	mov	r1, r6
   1390c:	vst1.64	{d16-d17}, [r1], r0
   13910:	vst1.64	{d20-d21}, [r1]
   13914:	mov	r0, r6
   13918:	mov	r1, r2
   1391c:	mov	r2, #1
   13920:	bl	12394 <putc_unlocked@plt+0x12c4>
   13924:	mov	r0, #0
   13928:	mov	r1, r5
   1392c:	mov	r2, r4
   13930:	mov	r3, r6
   13934:	bl	1363c <putc_unlocked@plt+0x256c>
   13938:	sub	sp, fp, #16
   1393c:	pop	{r4, r5, r6, sl, fp, pc}
   13940:	mov	r2, r1
   13944:	mvn	r1, #0
   13948:	b	138cc <putc_unlocked@plt+0x27fc>
   1394c:	mov	r1, #58	; 0x3a
   13950:	b	13940 <putc_unlocked@plt+0x2870>
   13954:	mov	r2, #58	; 0x3a
   13958:	b	138cc <putc_unlocked@plt+0x27fc>
   1395c:	push	{r4, r5, r6, sl, fp, lr}
   13960:	add	fp, sp, #16
   13964:	sub	sp, sp, #48	; 0x30
   13968:	mov	r4, r2
   1396c:	mov	r5, r0
   13970:	mov	r6, sp
   13974:	mov	r0, r6
   13978:	bl	13834 <putc_unlocked@plt+0x2764>
   1397c:	mov	r0, r6
   13980:	mov	r1, #58	; 0x3a
   13984:	mov	r2, #1
   13988:	bl	12394 <putc_unlocked@plt+0x12c4>
   1398c:	mov	r0, r5
   13990:	mov	r1, r4
   13994:	mvn	r2, #0
   13998:	mov	r3, r6
   1399c:	bl	1363c <putc_unlocked@plt+0x256c>
   139a0:	sub	sp, fp, #16
   139a4:	pop	{r4, r5, r6, sl, fp, pc}
   139a8:	push	{fp, lr}
   139ac:	mov	fp, sp
   139b0:	sub	sp, sp, #8
   139b4:	mvn	ip, #0
   139b8:	str	ip, [sp]
   139bc:	bl	139c8 <putc_unlocked@plt+0x28f8>
   139c0:	mov	sp, fp
   139c4:	pop	{fp, pc}
   139c8:	push	{r4, r5, r6, r7, fp, lr}
   139cc:	add	fp, sp, #16
   139d0:	sub	sp, sp, #48	; 0x30
   139d4:	mov	r7, r3
   139d8:	mov	r5, r0
   139dc:	mov	r0, #32
   139e0:	movw	r3, #24960	; 0x6180
   139e4:	movt	r3, #2
   139e8:	add	r4, r3, #16
   139ec:	vld1.64	{d16-d17}, [r3], r0
   139f0:	mov	r6, sp
   139f4:	vld1.64	{d18-d19}, [r4]
   139f8:	add	r4, r6, #16
   139fc:	vld1.64	{d20-d21}, [r3]
   13a00:	vst1.64	{d18-d19}, [r4]
   13a04:	mov	r3, r6
   13a08:	vst1.64	{d16-d17}, [r3], r0
   13a0c:	vst1.64	{d20-d21}, [r3]
   13a10:	mov	r0, r6
   13a14:	bl	123ec <putc_unlocked@plt+0x131c>
   13a18:	ldr	r2, [fp, #8]
   13a1c:	mov	r0, r5
   13a20:	mov	r1, r7
   13a24:	mov	r3, r6
   13a28:	bl	1363c <putc_unlocked@plt+0x256c>
   13a2c:	sub	sp, fp, #16
   13a30:	pop	{r4, r5, r6, r7, fp, pc}
   13a34:	mov	r3, r2
   13a38:	mov	r2, r1
   13a3c:	mov	r1, r0
   13a40:	mov	r0, #0
   13a44:	b	139a8 <putc_unlocked@plt+0x28d8>
   13a48:	push	{fp, lr}
   13a4c:	mov	fp, sp
   13a50:	sub	sp, sp, #8
   13a54:	mov	ip, r2
   13a58:	mov	r2, r1
   13a5c:	mov	r1, r0
   13a60:	str	r3, [sp]
   13a64:	mov	r0, #0
   13a68:	mov	r3, ip
   13a6c:	bl	139c8 <putc_unlocked@plt+0x28f8>
   13a70:	mov	sp, fp
   13a74:	pop	{fp, pc}
   13a78:	movw	r3, #24848	; 0x6110
   13a7c:	movt	r3, #2
   13a80:	b	1363c <putc_unlocked@plt+0x256c>
   13a84:	mov	r2, r1
   13a88:	mov	r1, r0
   13a8c:	mov	r0, #0
   13a90:	b	13a78 <putc_unlocked@plt+0x29a8>
   13a94:	mvn	r2, #0
   13a98:	b	13a78 <putc_unlocked@plt+0x29a8>
   13a9c:	mov	r1, r0
   13aa0:	mov	r0, #0
   13aa4:	b	13a94 <putc_unlocked@plt+0x29c4>
   13aa8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13aac:	add	fp, sp, #24
   13ab0:	sub	sp, sp, #16
   13ab4:	mov	r4, r1
   13ab8:	mov	r5, r0
   13abc:	mov	r7, #0
   13ac0:	mov	r0, #0
   13ac4:	mov	r1, r5
   13ac8:	mov	r2, #5
   13acc:	bl	10f08 <dcgettext@plt>
   13ad0:	cmp	r0, r5
   13ad4:	beq	13ae0 <putc_unlocked@plt+0x2a10>
   13ad8:	sub	sp, fp, #24
   13adc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ae0:	bl	14e44 <putc_unlocked@plt+0x3d74>
   13ae4:	mov	r6, r0
   13ae8:	mov	r8, #56	; 0x38
   13aec:	mov	r0, #45	; 0x2d
   13af0:	stm	sp, {r0, r8}
   13af4:	str	r7, [sp, #8]
   13af8:	str	r7, [sp, #12]
   13afc:	mov	r0, r6
   13b00:	mov	r1, #85	; 0x55
   13b04:	mov	r2, #84	; 0x54
   13b08:	mov	r3, #70	; 0x46
   13b0c:	bl	13ba4 <putc_unlocked@plt+0x2ad4>
   13b10:	cmp	r0, #0
   13b14:	beq	13b30 <putc_unlocked@plt+0x2a60>
   13b18:	ldrb	r1, [r5]
   13b1c:	movw	r2, #22676	; 0x5894
   13b20:	movt	r2, #1
   13b24:	movw	r0, #22680	; 0x5898
   13b28:	movt	r0, #1
   13b2c:	b	13b74 <putc_unlocked@plt+0x2aa4>
   13b30:	mov	r0, #48	; 0x30
   13b34:	mov	r1, #51	; 0x33
   13b38:	str	r8, [sp]
   13b3c:	stmib	sp, {r0, r1}
   13b40:	str	r0, [sp, #12]
   13b44:	mov	r0, r6
   13b48:	mov	r1, #71	; 0x47
   13b4c:	mov	r2, #66	; 0x42
   13b50:	mov	r3, #49	; 0x31
   13b54:	bl	13ba4 <putc_unlocked@plt+0x2ad4>
   13b58:	cmp	r0, #0
   13b5c:	beq	13b84 <putc_unlocked@plt+0x2ab4>
   13b60:	ldrb	r1, [r5]
   13b64:	movw	r2, #22684	; 0x589c
   13b68:	movt	r2, #1
   13b6c:	movw	r0, #22688	; 0x58a0
   13b70:	movt	r0, #1
   13b74:	cmp	r1, #96	; 0x60
   13b78:	moveq	r0, r2
   13b7c:	sub	sp, fp, #24
   13b80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13b84:	movw	r1, #22670	; 0x588e
   13b88:	movt	r1, #1
   13b8c:	movw	r0, #22674	; 0x5892
   13b90:	movt	r0, #1
   13b94:	cmp	r4, #9
   13b98:	moveq	r0, r1
   13b9c:	sub	sp, fp, #24
   13ba0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ba4:	push	{r4, r5, r6, r7, fp, lr}
   13ba8:	add	fp, sp, #16
   13bac:	sub	sp, sp, #16
   13bb0:	mov	r4, r3
   13bb4:	mov	r5, r2
   13bb8:	mov	r7, r1
   13bbc:	mov	r6, r0
   13bc0:	mov	r0, r1
   13bc4:	bl	14b18 <putc_unlocked@plt+0x3a48>
   13bc8:	ldrb	r1, [r6]
   13bcc:	cmp	r0, #0
   13bd0:	andne	r1, r1, #223	; 0xdf
   13bd4:	mov	r0, #0
   13bd8:	cmp	r1, r7
   13bdc:	bne	13c1c <putc_unlocked@plt+0x2b4c>
   13be0:	cmp	r7, #0
   13be4:	moveq	r0, #1
   13be8:	subeq	sp, fp, #16
   13bec:	popeq	{r4, r5, r6, r7, fp, pc}
   13bf0:	ldr	r0, [fp, #20]
   13bf4:	ldr	r1, [fp, #16]
   13bf8:	ldr	r2, [fp, #12]
   13bfc:	ldr	r3, [fp, #8]
   13c00:	str	r2, [sp]
   13c04:	str	r1, [sp, #4]
   13c08:	str	r0, [sp, #8]
   13c0c:	mov	r0, r6
   13c10:	mov	r1, r5
   13c14:	mov	r2, r4
   13c18:	bl	13c24 <putc_unlocked@plt+0x2b54>
   13c1c:	sub	sp, fp, #16
   13c20:	pop	{r4, r5, r6, r7, fp, pc}
   13c24:	push	{r4, r5, r6, r7, fp, lr}
   13c28:	add	fp, sp, #16
   13c2c:	sub	sp, sp, #8
   13c30:	mov	r4, r3
   13c34:	mov	r5, r2
   13c38:	mov	r7, r1
   13c3c:	mov	r6, r0
   13c40:	mov	r0, r1
   13c44:	bl	14b18 <putc_unlocked@plt+0x3a48>
   13c48:	ldrb	r1, [r6, #1]
   13c4c:	cmp	r0, #0
   13c50:	andne	r1, r1, #223	; 0xdf
   13c54:	mov	r0, #0
   13c58:	cmp	r1, r7
   13c5c:	bne	13c94 <putc_unlocked@plt+0x2bc4>
   13c60:	cmp	r7, #0
   13c64:	moveq	r0, #1
   13c68:	subeq	sp, fp, #16
   13c6c:	popeq	{r4, r5, r6, r7, fp, pc}
   13c70:	ldr	r0, [fp, #16]
   13c74:	ldr	r1, [fp, #12]
   13c78:	ldr	r3, [fp, #8]
   13c7c:	str	r1, [sp]
   13c80:	str	r0, [sp, #4]
   13c84:	mov	r0, r6
   13c88:	mov	r1, r5
   13c8c:	mov	r2, r4
   13c90:	bl	13c9c <putc_unlocked@plt+0x2bcc>
   13c94:	sub	sp, fp, #16
   13c98:	pop	{r4, r5, r6, r7, fp, pc}
   13c9c:	push	{r4, r5, r6, r7, fp, lr}
   13ca0:	add	fp, sp, #16
   13ca4:	sub	sp, sp, #8
   13ca8:	mov	r4, r3
   13cac:	mov	r5, r2
   13cb0:	mov	r7, r1
   13cb4:	mov	r6, r0
   13cb8:	mov	r0, r1
   13cbc:	bl	14b18 <putc_unlocked@plt+0x3a48>
   13cc0:	ldrb	r1, [r6, #2]
   13cc4:	cmp	r0, #0
   13cc8:	andne	r1, r1, #223	; 0xdf
   13ccc:	mov	r0, #0
   13cd0:	cmp	r1, r7
   13cd4:	bne	13d04 <putc_unlocked@plt+0x2c34>
   13cd8:	cmp	r7, #0
   13cdc:	moveq	r0, #1
   13ce0:	subeq	sp, fp, #16
   13ce4:	popeq	{r4, r5, r6, r7, fp, pc}
   13ce8:	ldr	r0, [fp, #12]
   13cec:	ldr	r3, [fp, #8]
   13cf0:	str	r0, [sp]
   13cf4:	mov	r0, r6
   13cf8:	mov	r1, r5
   13cfc:	mov	r2, r4
   13d00:	bl	13d0c <putc_unlocked@plt+0x2c3c>
   13d04:	sub	sp, fp, #16
   13d08:	pop	{r4, r5, r6, r7, fp, pc}
   13d0c:	push	{r4, r5, r6, r7, fp, lr}
   13d10:	add	fp, sp, #16
   13d14:	mov	r4, r3
   13d18:	mov	r5, r2
   13d1c:	mov	r7, r1
   13d20:	mov	r6, r0
   13d24:	mov	r0, r1
   13d28:	bl	14b18 <putc_unlocked@plt+0x3a48>
   13d2c:	ldrb	r1, [r6, #3]
   13d30:	ldr	r3, [fp, #8]
   13d34:	cmp	r0, #0
   13d38:	andne	r1, r1, #223	; 0xdf
   13d3c:	mov	r0, #0
   13d40:	cmp	r1, r7
   13d44:	popne	{r4, r5, r6, r7, fp, pc}
   13d48:	cmp	r7, #0
   13d4c:	beq	13d64 <putc_unlocked@plt+0x2c94>
   13d50:	mov	r0, r6
   13d54:	mov	r1, r5
   13d58:	mov	r2, r4
   13d5c:	pop	{r4, r5, r6, r7, fp, lr}
   13d60:	b	13d6c <putc_unlocked@plt+0x2c9c>
   13d64:	mov	r0, #1
   13d68:	pop	{r4, r5, r6, r7, fp, pc}
   13d6c:	push	{r4, r5, r6, r7, fp, lr}
   13d70:	add	fp, sp, #16
   13d74:	mov	r4, r3
   13d78:	mov	r5, r2
   13d7c:	mov	r7, r1
   13d80:	mov	r6, r0
   13d84:	mov	r0, r1
   13d88:	bl	14b18 <putc_unlocked@plt+0x3a48>
   13d8c:	ldrb	r1, [r6, #4]
   13d90:	cmp	r0, #0
   13d94:	andne	r1, r1, #223	; 0xdf
   13d98:	mov	r0, #0
   13d9c:	cmp	r1, r7
   13da0:	popne	{r4, r5, r6, r7, fp, pc}
   13da4:	cmp	r7, #0
   13da8:	beq	13dc0 <putc_unlocked@plt+0x2cf0>
   13dac:	mov	r0, r6
   13db0:	mov	r1, r5
   13db4:	mov	r2, r4
   13db8:	pop	{r4, r5, r6, r7, fp, lr}
   13dbc:	b	13dc8 <putc_unlocked@plt+0x2cf8>
   13dc0:	mov	r0, #1
   13dc4:	pop	{r4, r5, r6, r7, fp, pc}
   13dc8:	push	{r4, r5, r6, sl, fp, lr}
   13dcc:	add	fp, sp, #16
   13dd0:	mov	r4, r2
   13dd4:	mov	r6, r1
   13dd8:	mov	r5, r0
   13ddc:	mov	r0, r1
   13de0:	bl	14b18 <putc_unlocked@plt+0x3a48>
   13de4:	ldrb	r1, [r5, #5]
   13de8:	cmp	r0, #0
   13dec:	andne	r1, r1, #223	; 0xdf
   13df0:	mov	r0, #0
   13df4:	cmp	r1, r6
   13df8:	popne	{r4, r5, r6, sl, fp, pc}
   13dfc:	cmp	r6, #0
   13e00:	beq	13e14 <putc_unlocked@plt+0x2d44>
   13e04:	mov	r0, r5
   13e08:	mov	r1, r4
   13e0c:	pop	{r4, r5, r6, sl, fp, lr}
   13e10:	b	13e1c <putc_unlocked@plt+0x2d4c>
   13e14:	mov	r0, #1
   13e18:	pop	{r4, r5, r6, sl, fp, pc}
   13e1c:	push	{r4, r5, fp, lr}
   13e20:	add	fp, sp, #8
   13e24:	mov	r5, r1
   13e28:	mov	r4, r0
   13e2c:	mov	r0, r1
   13e30:	bl	14b18 <putc_unlocked@plt+0x3a48>
   13e34:	ldrb	r1, [r4, #6]
   13e38:	cmp	r0, #0
   13e3c:	andne	r1, r1, #223	; 0xdf
   13e40:	mov	r0, #0
   13e44:	cmp	r1, r5
   13e48:	popne	{r4, r5, fp, pc}
   13e4c:	cmp	r5, #0
   13e50:	beq	13e60 <putc_unlocked@plt+0x2d90>
   13e54:	mov	r0, r4
   13e58:	pop	{r4, r5, fp, lr}
   13e5c:	b	13e68 <putc_unlocked@plt+0x2d98>
   13e60:	mov	r0, #1
   13e64:	pop	{r4, r5, fp, pc}
   13e68:	push	{r4, sl, fp, lr}
   13e6c:	add	fp, sp, #8
   13e70:	mov	r4, r0
   13e74:	mov	r0, #0
   13e78:	bl	14b18 <putc_unlocked@plt+0x3a48>
   13e7c:	ldrb	r1, [r4, #7]
   13e80:	cmp	r0, #0
   13e84:	beq	13e9c <putc_unlocked@plt+0x2dcc>
   13e88:	tst	r1, #223	; 0xdf
   13e8c:	moveq	r0, #1
   13e90:	popeq	{r4, sl, fp, pc}
   13e94:	mov	r0, #0
   13e98:	pop	{r4, sl, fp, pc}
   13e9c:	cmp	r1, #0
   13ea0:	moveq	r0, #1
   13ea4:	popeq	{r4, sl, fp, pc}
   13ea8:	mov	r0, #0
   13eac:	pop	{r4, sl, fp, pc}
   13eb0:	mov	r1, #0
   13eb4:	mov	r2, #3
   13eb8:	b	14c10 <putc_unlocked@plt+0x3b40>
   13ebc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ec0:	add	fp, sp, #24
   13ec4:	sub	sp, sp, #32
   13ec8:	mov	r4, r2
   13ecc:	mov	r8, r0
   13ed0:	ldr	r6, [fp, #12]
   13ed4:	ldr	r7, [fp, #8]
   13ed8:	cmp	r1, #0
   13edc:	beq	13f04 <putc_unlocked@plt+0x2e34>
   13ee0:	mov	r5, r1
   13ee4:	str	r4, [sp]
   13ee8:	str	r3, [sp, #4]
   13eec:	movw	r2, #22776	; 0x58f8
   13ef0:	movt	r2, #1
   13ef4:	mov	r0, r8
   13ef8:	mov	r1, #1
   13efc:	mov	r3, r5
   13f00:	b	13f1c <putc_unlocked@plt+0x2e4c>
   13f04:	str	r3, [sp]
   13f08:	movw	r2, #22788	; 0x5904
   13f0c:	movt	r2, #1
   13f10:	mov	r0, r8
   13f14:	mov	r1, #1
   13f18:	mov	r3, r4
   13f1c:	bl	11034 <__fprintf_chk@plt>
   13f20:	movw	r1, #22795	; 0x590b
   13f24:	movt	r1, #1
   13f28:	mov	r0, #0
   13f2c:	mov	r2, #5
   13f30:	bl	10f08 <dcgettext@plt>
   13f34:	mov	r3, r0
   13f38:	movw	r0, #2022	; 0x7e6
   13f3c:	str	r0, [sp]
   13f40:	movw	r2, #23513	; 0x5bd9
   13f44:	movt	r2, #1
   13f48:	mov	r0, r8
   13f4c:	mov	r1, #1
   13f50:	bl	11034 <__fprintf_chk@plt>
   13f54:	movw	r4, #22099	; 0x5653
   13f58:	movt	r4, #1
   13f5c:	mov	r0, r4
   13f60:	mov	r1, r8
   13f64:	bl	10e78 <fputs_unlocked@plt>
   13f68:	movw	r1, #22799	; 0x590f
   13f6c:	movt	r1, #1
   13f70:	mov	r0, #0
   13f74:	mov	r2, #5
   13f78:	bl	10f08 <dcgettext@plt>
   13f7c:	mov	r2, r0
   13f80:	movw	r3, #22970	; 0x59ba
   13f84:	movt	r3, #1
   13f88:	mov	r0, r8
   13f8c:	mov	r1, #1
   13f90:	bl	11034 <__fprintf_chk@plt>
   13f94:	mov	r0, r4
   13f98:	mov	r1, r8
   13f9c:	bl	10e78 <fputs_unlocked@plt>
   13fa0:	cmp	r6, #9
   13fa4:	bhi	13fe0 <putc_unlocked@plt+0x2f10>
   13fa8:	add	r0, pc, #0
   13fac:	ldr	pc, [r0, r6, lsl #2]
   13fb0:	ldrdeq	r3, [r1], -r8
   13fb4:	andeq	r3, r1, ip, ror #31
   13fb8:	andeq	r4, r1, ip, lsl r0
   13fbc:	andeq	r4, r1, r4, asr #32
   13fc0:	andeq	r4, r1, ip, rrx
   13fc4:	muleq	r1, r4, r0
   13fc8:	strheq	r4, [r1], -ip
   13fcc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fd0:	muleq	r1, r4, r1
   13fd4:	andeq	r4, r1, ip, lsr r1
   13fd8:	sub	sp, fp, #24
   13fdc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13fe0:	movw	r1, #23323	; 0x5b1b
   13fe4:	movt	r1, #1
   13fe8:	b	14144 <putc_unlocked@plt+0x3074>
   13fec:	movw	r1, #23004	; 0x59dc
   13ff0:	movt	r1, #1
   13ff4:	mov	r0, #0
   13ff8:	mov	r2, #5
   13ffc:	bl	10f08 <dcgettext@plt>
   14000:	mov	r2, r0
   14004:	ldr	r3, [r7]
   14008:	mov	r0, r8
   1400c:	mov	r1, #1
   14010:	sub	sp, fp, #24
   14014:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14018:	b	11034 <__fprintf_chk@plt>
   1401c:	movw	r1, #23020	; 0x59ec
   14020:	movt	r1, #1
   14024:	mov	r0, #0
   14028:	mov	r2, #5
   1402c:	bl	10f08 <dcgettext@plt>
   14030:	mov	r2, r0
   14034:	ldr	r3, [r7]
   14038:	ldr	r0, [r7, #4]
   1403c:	str	r0, [sp]
   14040:	b	14130 <putc_unlocked@plt+0x3060>
   14044:	movw	r1, #23043	; 0x5a03
   14048:	movt	r1, #1
   1404c:	mov	r0, #0
   14050:	mov	r2, #5
   14054:	bl	10f08 <dcgettext@plt>
   14058:	mov	r2, r0
   1405c:	ldr	r3, [r7]
   14060:	ldmib	r7, {r0, r1}
   14064:	stm	sp, {r0, r1}
   14068:	b	14130 <putc_unlocked@plt+0x3060>
   1406c:	movw	r1, #23071	; 0x5a1f
   14070:	movt	r1, #1
   14074:	mov	r0, #0
   14078:	mov	r2, #5
   1407c:	bl	10f08 <dcgettext@plt>
   14080:	mov	r2, r0
   14084:	ldr	r3, [r7]
   14088:	ldmib	r7, {r0, r1, r7}
   1408c:	stm	sp, {r0, r1, r7}
   14090:	b	14130 <putc_unlocked@plt+0x3060>
   14094:	movw	r1, #23103	; 0x5a3f
   14098:	movt	r1, #1
   1409c:	mov	r0, #0
   140a0:	mov	r2, #5
   140a4:	bl	10f08 <dcgettext@plt>
   140a8:	mov	r2, r0
   140ac:	ldr	r3, [r7]
   140b0:	ldmib	r7, {r0, r1, r6, r7}
   140b4:	stm	sp, {r0, r1, r6, r7}
   140b8:	b	14130 <putc_unlocked@plt+0x3060>
   140bc:	movw	r1, #23139	; 0x5a63
   140c0:	movt	r1, #1
   140c4:	mov	r0, #0
   140c8:	mov	r2, #5
   140cc:	bl	10f08 <dcgettext@plt>
   140d0:	mov	r2, r0
   140d4:	ldr	r3, [r7]
   140d8:	ldmib	r7, {r0, r1, r6}
   140dc:	ldr	r5, [r7, #16]
   140e0:	ldr	r7, [r7, #20]
   140e4:	stm	sp, {r0, r1, r6}
   140e8:	str	r5, [sp, #12]
   140ec:	str	r7, [sp, #16]
   140f0:	b	14130 <putc_unlocked@plt+0x3060>
   140f4:	movw	r1, #23179	; 0x5a8b
   140f8:	movt	r1, #1
   140fc:	mov	r0, #0
   14100:	mov	r2, #5
   14104:	bl	10f08 <dcgettext@plt>
   14108:	mov	r2, r0
   1410c:	ldr	r3, [r7]
   14110:	ldmib	r7, {r0, r1, r6}
   14114:	ldr	r5, [r7, #16]
   14118:	ldr	r4, [r7, #20]
   1411c:	ldr	r7, [r7, #24]
   14120:	stm	sp, {r0, r1, r6}
   14124:	str	r5, [sp, #12]
   14128:	str	r4, [sp, #16]
   1412c:	str	r7, [sp, #20]
   14130:	mov	r0, r8
   14134:	mov	r1, #1
   14138:	b	141e4 <putc_unlocked@plt+0x3114>
   1413c:	movw	r1, #23271	; 0x5ae7
   14140:	movt	r1, #1
   14144:	mov	r0, #0
   14148:	mov	r2, #5
   1414c:	bl	10f08 <dcgettext@plt>
   14150:	mov	ip, r0
   14154:	ldr	r3, [r7]
   14158:	ldr	r0, [r7, #4]
   1415c:	ldr	r1, [r7, #8]
   14160:	ldr	r6, [r7, #12]
   14164:	ldr	r5, [r7, #16]
   14168:	ldr	r4, [r7, #20]
   1416c:	ldr	r2, [r7, #24]
   14170:	ldr	lr, [r7, #28]
   14174:	ldr	r7, [r7, #32]
   14178:	stm	sp, {r0, r1, r6}
   1417c:	str	r5, [sp, #12]
   14180:	str	r4, [sp, #16]
   14184:	str	r2, [sp, #20]
   14188:	str	lr, [sp, #24]
   1418c:	str	r7, [sp, #28]
   14190:	b	141d8 <putc_unlocked@plt+0x3108>
   14194:	movw	r1, #23223	; 0x5ab7
   14198:	movt	r1, #1
   1419c:	mov	r0, #0
   141a0:	mov	r2, #5
   141a4:	bl	10f08 <dcgettext@plt>
   141a8:	mov	ip, r0
   141ac:	ldr	r3, [r7]
   141b0:	ldmib	r7, {r0, r1, r6}
   141b4:	ldr	r5, [r7, #16]
   141b8:	ldr	r4, [r7, #20]
   141bc:	ldr	r2, [r7, #24]
   141c0:	ldr	r7, [r7, #28]
   141c4:	stm	sp, {r0, r1, r6}
   141c8:	str	r5, [sp, #12]
   141cc:	str	r4, [sp, #16]
   141d0:	str	r2, [sp, #20]
   141d4:	str	r7, [sp, #24]
   141d8:	mov	r0, r8
   141dc:	mov	r1, #1
   141e0:	mov	r2, ip
   141e4:	bl	11034 <__fprintf_chk@plt>
   141e8:	sub	sp, fp, #24
   141ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   141f0:	push	{r4, sl, fp, lr}
   141f4:	add	fp, sp, #8
   141f8:	sub	sp, sp, #8
   141fc:	mov	lr, #0
   14200:	ldr	ip, [fp, #8]
   14204:	ldr	r4, [ip, lr, lsl #2]
   14208:	add	lr, lr, #1
   1420c:	cmp	r4, #0
   14210:	bne	14204 <putc_unlocked@plt+0x3134>
   14214:	sub	r4, lr, #1
   14218:	str	ip, [sp]
   1421c:	str	r4, [sp, #4]
   14220:	bl	13ebc <putc_unlocked@plt+0x2dec>
   14224:	sub	sp, fp, #8
   14228:	pop	{r4, sl, fp, pc}
   1422c:	push	{r4, r5, fp, lr}
   14230:	add	fp, sp, #8
   14234:	sub	sp, sp, #48	; 0x30
   14238:	mov	ip, #0
   1423c:	ldr	r4, [fp, #8]
   14240:	add	lr, sp, #8
   14244:	ldr	r5, [r4]
   14248:	str	r5, [lr, ip, lsl #2]
   1424c:	cmp	r5, #0
   14250:	beq	14264 <putc_unlocked@plt+0x3194>
   14254:	add	ip, ip, #1
   14258:	add	r4, r4, #4
   1425c:	cmp	ip, #10
   14260:	bcc	14244 <putc_unlocked@plt+0x3174>
   14264:	str	lr, [sp]
   14268:	str	ip, [sp, #4]
   1426c:	bl	13ebc <putc_unlocked@plt+0x2dec>
   14270:	sub	sp, fp, #8
   14274:	pop	{r4, r5, fp, pc}
   14278:	push	{fp, lr}
   1427c:	mov	fp, sp
   14280:	sub	sp, sp, #8
   14284:	add	ip, fp, #8
   14288:	str	ip, [sp, #4]
   1428c:	str	ip, [sp]
   14290:	bl	1422c <putc_unlocked@plt+0x315c>
   14294:	mov	sp, fp
   14298:	pop	{fp, pc}
   1429c:	push	{fp, lr}
   142a0:	mov	fp, sp
   142a4:	movw	r0, #24924	; 0x615c
   142a8:	movt	r0, #2
   142ac:	ldr	r1, [r0]
   142b0:	movw	r0, #22099	; 0x5653
   142b4:	movt	r0, #1
   142b8:	bl	10e78 <fputs_unlocked@plt>
   142bc:	movw	r1, #23383	; 0x5b57
   142c0:	movt	r1, #1
   142c4:	mov	r0, #0
   142c8:	mov	r2, #5
   142cc:	bl	10f08 <dcgettext@plt>
   142d0:	mov	r1, r0
   142d4:	movw	r2, #23403	; 0x5b6b
   142d8:	movt	r2, #1
   142dc:	mov	r0, #1
   142e0:	bl	1101c <__printf_chk@plt>
   142e4:	movw	r1, #23425	; 0x5b81
   142e8:	movt	r1, #1
   142ec:	mov	r0, #0
   142f0:	mov	r2, #5
   142f4:	bl	10f08 <dcgettext@plt>
   142f8:	mov	r1, r0
   142fc:	movw	r2, #21713	; 0x54d1
   14300:	movt	r2, #1
   14304:	movw	r3, #21908	; 0x5594
   14308:	movt	r3, #1
   1430c:	mov	r0, #1
   14310:	bl	1101c <__printf_chk@plt>
   14314:	movw	r1, #23445	; 0x5b95
   14318:	movt	r1, #1
   1431c:	mov	r0, #0
   14320:	mov	r2, #5
   14324:	bl	10f08 <dcgettext@plt>
   14328:	mov	r1, r0
   1432c:	movw	r2, #23484	; 0x5bbc
   14330:	movt	r2, #1
   14334:	mov	r0, #1
   14338:	pop	{fp, lr}
   1433c:	b	1101c <__printf_chk@plt>
   14340:	b	14344 <putc_unlocked@plt+0x3274>
   14344:	push	{r4, r5, r6, sl, fp, lr}
   14348:	add	fp, sp, #16
   1434c:	mov	r4, r2
   14350:	mov	r5, r1
   14354:	mov	r6, r0
   14358:	bl	14edc <putc_unlocked@plt+0x3e0c>
   1435c:	cmp	r0, #0
   14360:	popne	{r4, r5, r6, sl, fp, pc}
   14364:	cmp	r6, #0
   14368:	beq	1437c <putc_unlocked@plt+0x32ac>
   1436c:	cmp	r5, #0
   14370:	cmpne	r4, #0
   14374:	bne	1437c <putc_unlocked@plt+0x32ac>
   14378:	pop	{r4, r5, r6, sl, fp, pc}
   1437c:	bl	14730 <putc_unlocked@plt+0x3660>
   14380:	push	{fp, lr}
   14384:	mov	fp, sp
   14388:	bl	147d0 <putc_unlocked@plt+0x3700>
   1438c:	bl	14394 <putc_unlocked@plt+0x32c4>
   14390:	pop	{fp, pc}
   14394:	cmp	r0, #0
   14398:	bxne	lr
   1439c:	push	{fp, lr}
   143a0:	mov	fp, sp
   143a4:	bl	14730 <putc_unlocked@plt+0x3660>
   143a8:	push	{fp, lr}
   143ac:	mov	fp, sp
   143b0:	bl	14e10 <putc_unlocked@plt+0x3d40>
   143b4:	bl	14394 <putc_unlocked@plt+0x32c4>
   143b8:	pop	{fp, pc}
   143bc:	b	14380 <putc_unlocked@plt+0x32b0>
   143c0:	push	{r4, r5, fp, lr}
   143c4:	add	fp, sp, #8
   143c8:	mov	r4, r1
   143cc:	mov	r5, r0
   143d0:	bl	14800 <putc_unlocked@plt+0x3730>
   143d4:	cmp	r0, #0
   143d8:	popne	{r4, r5, fp, pc}
   143dc:	cmp	r5, #0
   143e0:	beq	143f0 <putc_unlocked@plt+0x3320>
   143e4:	cmp	r4, #0
   143e8:	bne	143f0 <putc_unlocked@plt+0x3320>
   143ec:	pop	{r4, r5, fp, pc}
   143f0:	bl	14730 <putc_unlocked@plt+0x3660>
   143f4:	push	{fp, lr}
   143f8:	mov	fp, sp
   143fc:	bl	14e14 <putc_unlocked@plt+0x3d44>
   14400:	bl	14394 <putc_unlocked@plt+0x32c4>
   14404:	pop	{fp, pc}
   14408:	push	{fp, lr}
   1440c:	mov	fp, sp
   14410:	bl	14e24 <putc_unlocked@plt+0x3d54>
   14414:	bl	14394 <putc_unlocked@plt+0x32c4>
   14418:	pop	{fp, pc}
   1441c:	push	{fp, lr}
   14420:	mov	fp, sp
   14424:	mov	r2, r1
   14428:	mov	r1, r0
   1442c:	mov	r0, #0
   14430:	bl	14344 <putc_unlocked@plt+0x3274>
   14434:	pop	{fp, pc}
   14438:	mov	r2, r1
   1443c:	mov	r1, r0
   14440:	mov	r0, #0
   14444:	b	14408 <putc_unlocked@plt+0x3338>
   14448:	mov	r2, #1
   1444c:	b	14450 <putc_unlocked@plt+0x3380>
   14450:	push	{r4, r5, fp, lr}
   14454:	add	fp, sp, #8
   14458:	mov	r4, r1
   1445c:	ldr	r5, [r1]
   14460:	cmp	r0, #0
   14464:	beq	1447c <putc_unlocked@plt+0x33ac>
   14468:	mov	r1, #1
   1446c:	add	r1, r1, r5, lsr #1
   14470:	adds	r5, r5, r1
   14474:	bcc	14494 <putc_unlocked@plt+0x33c4>
   14478:	bl	14730 <putc_unlocked@plt+0x3660>
   1447c:	cmp	r5, #0
   14480:	bne	14494 <putc_unlocked@plt+0x33c4>
   14484:	mov	r1, #64	; 0x40
   14488:	udiv	r5, r1, r2
   1448c:	cmp	r2, #64	; 0x40
   14490:	addhi	r5, r5, #1
   14494:	mov	r1, r5
   14498:	bl	14344 <putc_unlocked@plt+0x3274>
   1449c:	str	r5, [r4]
   144a0:	pop	{r4, r5, fp, pc}
   144a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144a8:	add	fp, sp, #24
   144ac:	mov	r8, r1
   144b0:	ldr	r6, [r1]
   144b4:	add	r1, r6, r6, asr #1
   144b8:	cmp	r1, r6
   144bc:	mvnvs	r1, #-2147483648	; 0x80000000
   144c0:	cmp	r1, r3
   144c4:	mov	r5, r1
   144c8:	movgt	r5, r3
   144cc:	cmn	r3, #1
   144d0:	movle	r5, r1
   144d4:	ldr	r4, [fp, #8]
   144d8:	cmn	r4, #1
   144dc:	ble	14504 <putc_unlocked@plt+0x3434>
   144e0:	cmp	r4, #0
   144e4:	beq	14558 <putc_unlocked@plt+0x3488>
   144e8:	cmn	r5, #1
   144ec:	ble	1452c <putc_unlocked@plt+0x345c>
   144f0:	mvn	r7, #-2147483648	; 0x80000000
   144f4:	udiv	r1, r7, r4
   144f8:	cmp	r1, r5
   144fc:	bge	14558 <putc_unlocked@plt+0x3488>
   14500:	b	14568 <putc_unlocked@plt+0x3498>
   14504:	cmn	r5, #1
   14508:	ble	14548 <putc_unlocked@plt+0x3478>
   1450c:	cmn	r4, #1
   14510:	beq	14558 <putc_unlocked@plt+0x3488>
   14514:	mov	r1, #-2147483648	; 0x80000000
   14518:	sdiv	r1, r1, r4
   1451c:	mvn	r7, #-2147483648	; 0x80000000
   14520:	cmp	r1, r5
   14524:	bge	14558 <putc_unlocked@plt+0x3488>
   14528:	b	14568 <putc_unlocked@plt+0x3498>
   1452c:	beq	14558 <putc_unlocked@plt+0x3488>
   14530:	mov	r1, #-2147483648	; 0x80000000
   14534:	sdiv	r1, r1, r5
   14538:	mvn	r7, #-2147483648	; 0x80000000
   1453c:	cmp	r1, r4
   14540:	bge	14558 <putc_unlocked@plt+0x3488>
   14544:	b	14568 <putc_unlocked@plt+0x3498>
   14548:	mvn	r7, #-2147483648	; 0x80000000
   1454c:	sdiv	r1, r7, r4
   14550:	cmp	r5, r1
   14554:	blt	14568 <putc_unlocked@plt+0x3498>
   14558:	mul	r1, r5, r4
   1455c:	mov	r7, #64	; 0x40
   14560:	cmp	r1, #63	; 0x3f
   14564:	bgt	14570 <putc_unlocked@plt+0x34a0>
   14568:	sdiv	r5, r7, r4
   1456c:	mul	r1, r5, r4
   14570:	cmp	r0, #0
   14574:	moveq	r7, #0
   14578:	streq	r7, [r8]
   1457c:	sub	r7, r5, r6
   14580:	cmp	r7, r2
   14584:	bge	14630 <putc_unlocked@plt+0x3560>
   14588:	add	r5, r6, r2
   1458c:	mov	r1, #0
   14590:	cmp	r5, r3
   14594:	mov	r2, #0
   14598:	movwgt	r2, #1
   1459c:	cmn	r3, #1
   145a0:	movwgt	r1, #1
   145a4:	cmp	r5, r6
   145a8:	bvs	14618 <putc_unlocked@plt+0x3548>
   145ac:	ands	r1, r1, r2
   145b0:	bne	14618 <putc_unlocked@plt+0x3548>
   145b4:	cmn	r4, #1
   145b8:	ble	145e0 <putc_unlocked@plt+0x3510>
   145bc:	cmp	r4, #0
   145c0:	beq	1462c <putc_unlocked@plt+0x355c>
   145c4:	cmn	r5, #1
   145c8:	ble	14604 <putc_unlocked@plt+0x3534>
   145cc:	mvn	r1, #-2147483648	; 0x80000000
   145d0:	udiv	r1, r1, r4
   145d4:	cmp	r1, r5
   145d8:	bge	1462c <putc_unlocked@plt+0x355c>
   145dc:	b	14618 <putc_unlocked@plt+0x3548>
   145e0:	cmn	r5, #1
   145e4:	ble	1461c <putc_unlocked@plt+0x354c>
   145e8:	cmn	r4, #1
   145ec:	beq	1462c <putc_unlocked@plt+0x355c>
   145f0:	mov	r1, #-2147483648	; 0x80000000
   145f4:	sdiv	r1, r1, r4
   145f8:	cmp	r1, r5
   145fc:	bge	1462c <putc_unlocked@plt+0x355c>
   14600:	b	14618 <putc_unlocked@plt+0x3548>
   14604:	beq	1462c <putc_unlocked@plt+0x355c>
   14608:	mov	r1, #-2147483648	; 0x80000000
   1460c:	sdiv	r1, r1, r5
   14610:	cmp	r1, r4
   14614:	bge	1462c <putc_unlocked@plt+0x355c>
   14618:	bl	14730 <putc_unlocked@plt+0x3660>
   1461c:	mvn	r1, #-2147483648	; 0x80000000
   14620:	sdiv	r1, r1, r4
   14624:	cmp	r5, r1
   14628:	blt	14618 <putc_unlocked@plt+0x3548>
   1462c:	mul	r1, r5, r4
   14630:	bl	143c0 <putc_unlocked@plt+0x32f0>
   14634:	str	r5, [r8]
   14638:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1463c:	mov	r1, #1
   14640:	b	14644 <putc_unlocked@plt+0x3574>
   14644:	push	{fp, lr}
   14648:	mov	fp, sp
   1464c:	bl	1477c <putc_unlocked@plt+0x36ac>
   14650:	bl	14394 <putc_unlocked@plt+0x32c4>
   14654:	pop	{fp, pc}
   14658:	mov	r1, #1
   1465c:	b	14660 <putc_unlocked@plt+0x3590>
   14660:	push	{fp, lr}
   14664:	mov	fp, sp
   14668:	bl	14e20 <putc_unlocked@plt+0x3d50>
   1466c:	bl	14394 <putc_unlocked@plt+0x32c4>
   14670:	pop	{fp, pc}
   14674:	push	{r4, r5, r6, sl, fp, lr}
   14678:	add	fp, sp, #16
   1467c:	mov	r4, r1
   14680:	mov	r5, r0
   14684:	mov	r0, r1
   14688:	bl	14380 <putc_unlocked@plt+0x32b0>
   1468c:	mov	r6, r0
   14690:	mov	r1, r5
   14694:	mov	r2, r4
   14698:	bl	10ecc <memcpy@plt>
   1469c:	mov	r0, r6
   146a0:	pop	{r4, r5, r6, sl, fp, pc}
   146a4:	push	{r4, r5, r6, sl, fp, lr}
   146a8:	add	fp, sp, #16
   146ac:	mov	r4, r1
   146b0:	mov	r5, r0
   146b4:	mov	r0, r1
   146b8:	bl	143a8 <putc_unlocked@plt+0x32d8>
   146bc:	mov	r6, r0
   146c0:	mov	r1, r5
   146c4:	mov	r2, r4
   146c8:	bl	10ecc <memcpy@plt>
   146cc:	mov	r0, r6
   146d0:	pop	{r4, r5, r6, sl, fp, pc}
   146d4:	push	{r4, r5, r6, sl, fp, lr}
   146d8:	add	fp, sp, #16
   146dc:	mov	r4, r1
   146e0:	mov	r5, r0
   146e4:	add	r0, r1, #1
   146e8:	bl	143a8 <putc_unlocked@plt+0x32d8>
   146ec:	mov	r6, r0
   146f0:	mov	r0, #0
   146f4:	strb	r0, [r6, r4]
   146f8:	mov	r0, r6
   146fc:	mov	r1, r5
   14700:	mov	r2, r4
   14704:	bl	10ecc <memcpy@plt>
   14708:	mov	r0, r6
   1470c:	pop	{r4, r5, r6, sl, fp, pc}
   14710:	push	{r4, sl, fp, lr}
   14714:	add	fp, sp, #8
   14718:	mov	r4, r0
   1471c:	bl	10fe0 <strlen@plt>
   14720:	add	r1, r0, #1
   14724:	mov	r0, r4
   14728:	pop	{r4, sl, fp, lr}
   1472c:	b	14674 <putc_unlocked@plt+0x35a4>
   14730:	push	{fp, lr}
   14734:	mov	fp, sp
   14738:	movw	r0, #24824	; 0x60f8
   1473c:	movt	r0, #2
   14740:	ldr	r4, [r0]
   14744:	movw	r1, #23560	; 0x5c08
   14748:	movt	r1, #1
   1474c:	mov	r0, #0
   14750:	mov	r2, #5
   14754:	bl	10f08 <dcgettext@plt>
   14758:	mov	r3, r0
   1475c:	movw	r2, #22502	; 0x57e6
   14760:	movt	r2, #1
   14764:	mov	r0, r4
   14768:	mov	r1, #0
   1476c:	bl	10f80 <error@plt>
   14770:	bl	110b8 <abort@plt>
   14774:	bx	lr
   14778:	b	1485c <putc_unlocked@plt+0x378c>
   1477c:	clz	r2, r1
   14780:	lsr	r2, r2, #5
   14784:	clz	r3, r0
   14788:	lsr	r3, r3, #5
   1478c:	orrs	r2, r3, r2
   14790:	movwne	r1, #1
   14794:	movwne	r0, #1
   14798:	cmp	r1, #0
   1479c:	beq	147cc <putc_unlocked@plt+0x36fc>
   147a0:	mvn	r2, #-2147483648	; 0x80000000
   147a4:	udiv	r2, r2, r1
   147a8:	cmp	r2, r0
   147ac:	bcs	147cc <putc_unlocked@plt+0x36fc>
   147b0:	push	{fp, lr}
   147b4:	mov	fp, sp
   147b8:	bl	10fec <__errno_location@plt>
   147bc:	mov	r1, #12
   147c0:	str	r1, [r0]
   147c4:	mov	r0, #0
   147c8:	pop	{fp, pc}
   147cc:	b	10e6c <calloc@plt>
   147d0:	cmp	r0, #0
   147d4:	movweq	r0, #1
   147d8:	cmn	r0, #1
   147dc:	ble	147e4 <putc_unlocked@plt+0x3714>
   147e0:	b	10f8c <malloc@plt>
   147e4:	push	{fp, lr}
   147e8:	mov	fp, sp
   147ec:	bl	10fec <__errno_location@plt>
   147f0:	mov	r1, #12
   147f4:	str	r1, [r0]
   147f8:	mov	r0, #0
   147fc:	pop	{fp, pc}
   14800:	push	{fp, lr}
   14804:	mov	fp, sp
   14808:	cmp	r0, #0
   1480c:	beq	14828 <putc_unlocked@plt+0x3758>
   14810:	cmp	r1, #0
   14814:	beq	14834 <putc_unlocked@plt+0x3764>
   14818:	cmn	r1, #1
   1481c:	ble	14840 <putc_unlocked@plt+0x3770>
   14820:	pop	{fp, lr}
   14824:	b	10f14 <realloc@plt>
   14828:	mov	r0, r1
   1482c:	pop	{fp, lr}
   14830:	b	147d0 <putc_unlocked@plt+0x3700>
   14834:	bl	12198 <putc_unlocked@plt+0x10c8>
   14838:	mov	r0, #0
   1483c:	pop	{fp, pc}
   14840:	bl	10fec <__errno_location@plt>
   14844:	mov	r1, #12
   14848:	str	r1, [r0]
   1484c:	mov	r0, #0
   14850:	pop	{fp, pc}
   14854:	mov	r0, #0
   14858:	bx	lr
   1485c:	mov	r0, #0
   14860:	bx	lr
   14864:	mov	r1, r0
   14868:	sub	r2, r0, #65	; 0x41
   1486c:	mov	r0, #1
   14870:	cmp	r2, #26
   14874:	subcs	r2, r1, #97	; 0x61
   14878:	cmpcs	r2, #26
   1487c:	bcs	14884 <putc_unlocked@plt+0x37b4>
   14880:	bx	lr
   14884:	sub	r1, r1, #48	; 0x30
   14888:	cmp	r1, #10
   1488c:	movcs	r0, #0
   14890:	bx	lr
   14894:	mov	r1, r0
   14898:	sub	r2, r0, #65	; 0x41
   1489c:	mov	r0, #1
   148a0:	cmp	r2, #26
   148a4:	subcs	r1, r1, #97	; 0x61
   148a8:	cmpcs	r1, #26
   148ac:	movcs	r0, #0
   148b0:	bx	lr
   148b4:	mov	r1, #0
   148b8:	cmp	r0, #128	; 0x80
   148bc:	movwcc	r1, #1
   148c0:	mov	r0, r1
   148c4:	bx	lr
   148c8:	sub	r1, r0, #9
   148cc:	clz	r1, r1
   148d0:	lsr	r1, r1, #5
   148d4:	sub	r0, r0, #32
   148d8:	clz	r0, r0
   148dc:	lsr	r0, r0, #5
   148e0:	orr	r0, r0, r1
   148e4:	bx	lr
   148e8:	mov	r1, r0
   148ec:	mov	r0, #1
   148f0:	cmp	r1, #32
   148f4:	bxcc	lr
   148f8:	cmp	r1, #127	; 0x7f
   148fc:	movne	r0, #0
   14900:	bx	lr
   14904:	sub	r1, r0, #48	; 0x30
   14908:	mov	r0, #0
   1490c:	cmp	r1, #10
   14910:	movwcc	r0, #1
   14914:	bx	lr
   14918:	sub	r1, r0, #33	; 0x21
   1491c:	mov	r0, #0
   14920:	cmp	r1, #94	; 0x5e
   14924:	movwcc	r0, #1
   14928:	bx	lr
   1492c:	sub	r1, r0, #97	; 0x61
   14930:	mov	r0, #0
   14934:	cmp	r1, #26
   14938:	movwcc	r0, #1
   1493c:	bx	lr
   14940:	sub	r1, r0, #32
   14944:	mov	r0, #0
   14948:	cmp	r1, #95	; 0x5f
   1494c:	movwcc	r0, #1
   14950:	bx	lr
   14954:	sub	r1, r0, #33	; 0x21
   14958:	cmp	r1, #93	; 0x5d
   1495c:	bhi	14ae8 <putc_unlocked@plt+0x3a18>
   14960:	mov	r0, #1
   14964:	add	r2, pc, #0
   14968:	ldr	pc, [r2, r1, lsl #2]
   1496c:	andeq	r4, r1, r4, ror #21
   14970:	andeq	r4, r1, r4, ror #21
   14974:	andeq	r4, r1, r4, ror #21
   14978:	andeq	r4, r1, r4, ror #21
   1497c:	andeq	r4, r1, r4, ror #21
   14980:	andeq	r4, r1, r4, ror #21
   14984:	andeq	r4, r1, r4, ror #21
   14988:	andeq	r4, r1, r4, ror #21
   1498c:	andeq	r4, r1, r4, ror #21
   14990:	andeq	r4, r1, r4, ror #21
   14994:	andeq	r4, r1, r4, ror #21
   14998:	andeq	r4, r1, r4, ror #21
   1499c:	andeq	r4, r1, r4, ror #21
   149a0:	andeq	r4, r1, r4, ror #21
   149a4:	andeq	r4, r1, r4, ror #21
   149a8:	andeq	r4, r1, r8, ror #21
   149ac:	andeq	r4, r1, r8, ror #21
   149b0:	andeq	r4, r1, r8, ror #21
   149b4:	andeq	r4, r1, r8, ror #21
   149b8:	andeq	r4, r1, r8, ror #21
   149bc:	andeq	r4, r1, r8, ror #21
   149c0:	andeq	r4, r1, r8, ror #21
   149c4:	andeq	r4, r1, r8, ror #21
   149c8:	andeq	r4, r1, r8, ror #21
   149cc:	andeq	r4, r1, r8, ror #21
   149d0:	andeq	r4, r1, r4, ror #21
   149d4:	andeq	r4, r1, r4, ror #21
   149d8:	andeq	r4, r1, r4, ror #21
   149dc:	andeq	r4, r1, r4, ror #21
   149e0:	andeq	r4, r1, r4, ror #21
   149e4:	andeq	r4, r1, r4, ror #21
   149e8:	andeq	r4, r1, r4, ror #21
   149ec:	andeq	r4, r1, r8, ror #21
   149f0:	andeq	r4, r1, r8, ror #21
   149f4:	andeq	r4, r1, r8, ror #21
   149f8:	andeq	r4, r1, r8, ror #21
   149fc:	andeq	r4, r1, r8, ror #21
   14a00:	andeq	r4, r1, r8, ror #21
   14a04:	andeq	r4, r1, r8, ror #21
   14a08:	andeq	r4, r1, r8, ror #21
   14a0c:	andeq	r4, r1, r8, ror #21
   14a10:	andeq	r4, r1, r8, ror #21
   14a14:	andeq	r4, r1, r8, ror #21
   14a18:	andeq	r4, r1, r8, ror #21
   14a1c:	andeq	r4, r1, r8, ror #21
   14a20:	andeq	r4, r1, r8, ror #21
   14a24:	andeq	r4, r1, r8, ror #21
   14a28:	andeq	r4, r1, r8, ror #21
   14a2c:	andeq	r4, r1, r8, ror #21
   14a30:	andeq	r4, r1, r8, ror #21
   14a34:	andeq	r4, r1, r8, ror #21
   14a38:	andeq	r4, r1, r8, ror #21
   14a3c:	andeq	r4, r1, r8, ror #21
   14a40:	andeq	r4, r1, r8, ror #21
   14a44:	andeq	r4, r1, r8, ror #21
   14a48:	andeq	r4, r1, r8, ror #21
   14a4c:	andeq	r4, r1, r8, ror #21
   14a50:	andeq	r4, r1, r8, ror #21
   14a54:	andeq	r4, r1, r4, ror #21
   14a58:	andeq	r4, r1, r4, ror #21
   14a5c:	andeq	r4, r1, r4, ror #21
   14a60:	andeq	r4, r1, r4, ror #21
   14a64:	andeq	r4, r1, r4, ror #21
   14a68:	andeq	r4, r1, r4, ror #21
   14a6c:	andeq	r4, r1, r8, ror #21
   14a70:	andeq	r4, r1, r8, ror #21
   14a74:	andeq	r4, r1, r8, ror #21
   14a78:	andeq	r4, r1, r8, ror #21
   14a7c:	andeq	r4, r1, r8, ror #21
   14a80:	andeq	r4, r1, r8, ror #21
   14a84:	andeq	r4, r1, r8, ror #21
   14a88:	andeq	r4, r1, r8, ror #21
   14a8c:	andeq	r4, r1, r8, ror #21
   14a90:	andeq	r4, r1, r8, ror #21
   14a94:	andeq	r4, r1, r8, ror #21
   14a98:	andeq	r4, r1, r8, ror #21
   14a9c:	andeq	r4, r1, r8, ror #21
   14aa0:	andeq	r4, r1, r8, ror #21
   14aa4:	andeq	r4, r1, r8, ror #21
   14aa8:	andeq	r4, r1, r8, ror #21
   14aac:	andeq	r4, r1, r8, ror #21
   14ab0:	andeq	r4, r1, r8, ror #21
   14ab4:	andeq	r4, r1, r8, ror #21
   14ab8:	andeq	r4, r1, r8, ror #21
   14abc:	andeq	r4, r1, r8, ror #21
   14ac0:	andeq	r4, r1, r8, ror #21
   14ac4:	andeq	r4, r1, r8, ror #21
   14ac8:	andeq	r4, r1, r8, ror #21
   14acc:	andeq	r4, r1, r8, ror #21
   14ad0:	andeq	r4, r1, r8, ror #21
   14ad4:	andeq	r4, r1, r4, ror #21
   14ad8:	andeq	r4, r1, r4, ror #21
   14adc:	andeq	r4, r1, r4, ror #21
   14ae0:	andeq	r4, r1, r4, ror #21
   14ae4:	bx	lr
   14ae8:	mov	r0, #0
   14aec:	bx	lr
   14af0:	sub	r0, r0, #9
   14af4:	cmp	r0, #23
   14af8:	movhi	r0, #0
   14afc:	bxhi	lr
   14b00:	bic	r0, r0, #-16777216	; 0xff000000
   14b04:	movw	r1, #31
   14b08:	movt	r1, #128	; 0x80
   14b0c:	mov	r2, #1
   14b10:	and	r0, r2, r1, lsr r0
   14b14:	bx	lr
   14b18:	sub	r1, r0, #65	; 0x41
   14b1c:	mov	r0, #0
   14b20:	cmp	r1, #26
   14b24:	movwcc	r0, #1
   14b28:	bx	lr
   14b2c:	mov	r1, r0
   14b30:	sub	r2, r0, #48	; 0x30
   14b34:	mov	r0, #1
   14b38:	cmp	r2, #22
   14b3c:	bhi	14b54 <putc_unlocked@plt+0x3a84>
   14b40:	mov	ip, #1
   14b44:	movw	r3, #1023	; 0x3ff
   14b48:	movt	r3, #126	; 0x7e
   14b4c:	tst	r3, ip, lsl r2
   14b50:	bxne	lr
   14b54:	sub	r1, r1, #97	; 0x61
   14b58:	cmp	r1, #6
   14b5c:	movcs	r0, #0
   14b60:	bxcs	lr
   14b64:	bx	lr
   14b68:	sub	r1, r0, #65	; 0x41
   14b6c:	cmp	r1, #26
   14b70:	addcc	r0, r0, #32
   14b74:	bx	lr
   14b78:	sub	r1, r0, #97	; 0x61
   14b7c:	cmp	r1, #26
   14b80:	subcc	r0, r0, #32
   14b84:	bx	lr
   14b88:	push	{r4, r5, r6, sl, fp, lr}
   14b8c:	add	fp, sp, #16
   14b90:	mov	r4, r0
   14b94:	bl	10f5c <__fpending@plt>
   14b98:	mov	r5, r0
   14b9c:	mov	r0, r4
   14ba0:	bl	10f68 <ferror_unlocked@plt>
   14ba4:	mov	r6, r0
   14ba8:	mov	r0, r4
   14bac:	bl	11fdc <putc_unlocked@plt+0xf0c>
   14bb0:	cmp	r6, #0
   14bb4:	beq	14bd4 <putc_unlocked@plt+0x3b04>
   14bb8:	mvn	r4, #0
   14bbc:	cmp	r0, #0
   14bc0:	bne	14c08 <putc_unlocked@plt+0x3b38>
   14bc4:	bl	10fec <__errno_location@plt>
   14bc8:	mov	r1, #0
   14bcc:	str	r1, [r0]
   14bd0:	b	14c08 <putc_unlocked@plt+0x3b38>
   14bd4:	cmp	r0, #0
   14bd8:	mov	r4, r0
   14bdc:	mvnne	r4, #0
   14be0:	cmp	r5, #0
   14be4:	bne	14c08 <putc_unlocked@plt+0x3b38>
   14be8:	cmp	r0, #0
   14bec:	beq	14c08 <putc_unlocked@plt+0x3b38>
   14bf0:	bl	10fec <__errno_location@plt>
   14bf4:	ldr	r0, [r0]
   14bf8:	subs	r4, r0, #9
   14bfc:	mvnne	r4, #0
   14c00:	mov	r0, r4
   14c04:	pop	{r4, r5, r6, sl, fp, pc}
   14c08:	mov	r0, r4
   14c0c:	pop	{r4, r5, r6, sl, fp, pc}
   14c10:	sub	sp, sp, #8
   14c14:	push	{fp, lr}
   14c18:	mov	fp, sp
   14c1c:	sub	sp, sp, #8
   14c20:	str	r3, [fp, #12]
   14c24:	str	r2, [fp, #8]
   14c28:	add	r2, fp, #8
   14c2c:	str	r2, [sp, #4]
   14c30:	cmp	r1, #11
   14c34:	bhi	14c74 <putc_unlocked@plt+0x3ba4>
   14c38:	mov	r2, #1
   14c3c:	movw	r3, #1300	; 0x514
   14c40:	tst	r3, r2, lsl r1
   14c44:	bne	14cc4 <putc_unlocked@plt+0x3bf4>
   14c48:	movw	r3, #2570	; 0xa0a
   14c4c:	tst	r3, r2, lsl r1
   14c50:	bne	14c9c <putc_unlocked@plt+0x3bcc>
   14c54:	cmp	r1, #0
   14c58:	bne	14c74 <putc_unlocked@plt+0x3ba4>
   14c5c:	ldr	r1, [sp, #4]
   14c60:	add	r2, r1, #4
   14c64:	str	r2, [sp, #4]
   14c68:	ldr	r1, [r1]
   14c6c:	bl	14ce8 <putc_unlocked@plt+0x3c18>
   14c70:	b	14cd8 <putc_unlocked@plt+0x3c08>
   14c74:	sub	r2, r1, #1024	; 0x400
   14c78:	cmp	r2, #10
   14c7c:	bhi	14cc4 <putc_unlocked@plt+0x3bf4>
   14c80:	mov	ip, #1
   14c84:	movw	r3, #645	; 0x285
   14c88:	tst	r3, ip, lsl r2
   14c8c:	bne	14cc4 <putc_unlocked@plt+0x3bf4>
   14c90:	movw	r3, #1282	; 0x502
   14c94:	tst	r3, ip, lsl r2
   14c98:	beq	14ca4 <putc_unlocked@plt+0x3bd4>
   14c9c:	bl	11058 <fcntl64@plt>
   14ca0:	b	14cd8 <putc_unlocked@plt+0x3c08>
   14ca4:	cmp	r2, #6
   14ca8:	bne	14cc4 <putc_unlocked@plt+0x3bf4>
   14cac:	ldr	r1, [sp, #4]
   14cb0:	add	r2, r1, #4
   14cb4:	str	r2, [sp, #4]
   14cb8:	ldr	r1, [r1]
   14cbc:	bl	14cf4 <putc_unlocked@plt+0x3c24>
   14cc0:	b	14cd8 <putc_unlocked@plt+0x3c08>
   14cc4:	ldr	r2, [sp, #4]
   14cc8:	add	r3, r2, #4
   14ccc:	str	r3, [sp, #4]
   14cd0:	ldr	r2, [r2]
   14cd4:	bl	11058 <fcntl64@plt>
   14cd8:	mov	sp, fp
   14cdc:	pop	{fp, lr}
   14ce0:	add	sp, sp, #8
   14ce4:	bx	lr
   14ce8:	mov	r2, r1
   14cec:	mov	r1, #0
   14cf0:	b	11058 <fcntl64@plt>
   14cf4:	push	{r4, r5, r6, r7, fp, lr}
   14cf8:	add	fp, sp, #16
   14cfc:	mov	r5, r1
   14d00:	mov	r6, r0
   14d04:	movw	r7, #25264	; 0x62b0
   14d08:	movt	r7, #2
   14d0c:	ldr	r0, [r7]
   14d10:	cmp	r0, #0
   14d14:	blt	14d78 <putc_unlocked@plt+0x3ca8>
   14d18:	mov	r0, r6
   14d1c:	movw	r1, #1030	; 0x406
   14d20:	mov	r2, r5
   14d24:	bl	11058 <fcntl64@plt>
   14d28:	mov	r4, r0
   14d2c:	cmn	r0, #1
   14d30:	bgt	14d64 <putc_unlocked@plt+0x3c94>
   14d34:	bl	10fec <__errno_location@plt>
   14d38:	ldr	r0, [r0]
   14d3c:	cmp	r0, #22
   14d40:	bne	14d64 <putc_unlocked@plt+0x3c94>
   14d44:	mov	r0, r6
   14d48:	mov	r1, r5
   14d4c:	bl	14ce8 <putc_unlocked@plt+0x3c18>
   14d50:	mov	r4, r0
   14d54:	cmp	r0, #0
   14d58:	blt	14dc8 <putc_unlocked@plt+0x3cf8>
   14d5c:	mvn	r0, #0
   14d60:	b	14d68 <putc_unlocked@plt+0x3c98>
   14d64:	mov	r0, #1
   14d68:	str	r0, [r7]
   14d6c:	cmp	r4, #0
   14d70:	bge	14d90 <putc_unlocked@plt+0x3cc0>
   14d74:	b	14dc8 <putc_unlocked@plt+0x3cf8>
   14d78:	mov	r0, r6
   14d7c:	mov	r1, r5
   14d80:	bl	14ce8 <putc_unlocked@plt+0x3c18>
   14d84:	mov	r4, r0
   14d88:	cmp	r4, #0
   14d8c:	blt	14dc8 <putc_unlocked@plt+0x3cf8>
   14d90:	ldr	r0, [r7]
   14d94:	cmn	r0, #1
   14d98:	bne	14dc8 <putc_unlocked@plt+0x3cf8>
   14d9c:	mov	r0, r4
   14da0:	mov	r1, #1
   14da4:	bl	11058 <fcntl64@plt>
   14da8:	cmp	r0, #0
   14dac:	blt	14dd0 <putc_unlocked@plt+0x3d00>
   14db0:	orr	r2, r0, #1
   14db4:	mov	r0, r4
   14db8:	mov	r1, #2
   14dbc:	bl	11058 <fcntl64@plt>
   14dc0:	cmn	r0, #1
   14dc4:	beq	14dd0 <putc_unlocked@plt+0x3d00>
   14dc8:	mov	r0, r4
   14dcc:	pop	{r4, r5, r6, r7, fp, pc}
   14dd0:	bl	10fec <__errno_location@plt>
   14dd4:	mov	r5, r0
   14dd8:	ldr	r6, [r0]
   14ddc:	mov	r0, r4
   14de0:	bl	110c4 <close@plt>
   14de4:	str	r6, [r5]
   14de8:	mvn	r4, #0
   14dec:	mov	r0, r4
   14df0:	pop	{r4, r5, r6, r7, fp, pc}
   14df4:	push	{fp, lr}
   14df8:	mov	fp, sp
   14dfc:	bl	10fec <__errno_location@plt>
   14e00:	mov	r1, #12
   14e04:	str	r1, [r0]
   14e08:	mov	r0, #0
   14e0c:	pop	{fp, pc}
   14e10:	b	147d0 <putc_unlocked@plt+0x3700>
   14e14:	cmp	r1, #0
   14e18:	orreq	r1, r1, #1
   14e1c:	b	14800 <putc_unlocked@plt+0x3730>
   14e20:	b	1477c <putc_unlocked@plt+0x36ac>
   14e24:	clz	r3, r2
   14e28:	lsr	ip, r3, #5
   14e2c:	clz	r3, r1
   14e30:	lsr	r3, r3, #5
   14e34:	orrs	r3, r3, ip
   14e38:	movwne	r1, #1
   14e3c:	movwne	r2, #1
   14e40:	b	14edc <putc_unlocked@plt+0x3e0c>
   14e44:	push	{fp, lr}
   14e48:	mov	fp, sp
   14e4c:	mov	r0, #14
   14e50:	bl	1107c <nl_langinfo@plt>
   14e54:	movw	r1, #22100	; 0x5654
   14e58:	movt	r1, #1
   14e5c:	cmp	r0, #0
   14e60:	movne	r1, r0
   14e64:	ldrb	r2, [r1]
   14e68:	movw	r0, #23577	; 0x5c19
   14e6c:	movt	r0, #1
   14e70:	cmp	r2, #0
   14e74:	movne	r0, r1
   14e78:	pop	{fp, pc}
   14e7c:	push	{r4, r5, r6, r7, fp, lr}
   14e80:	add	fp, sp, #16
   14e84:	sub	sp, sp, #8
   14e88:	mov	r7, r2
   14e8c:	mov	r4, r1
   14e90:	add	r5, sp, #4
   14e94:	cmp	r0, #0
   14e98:	movne	r5, r0
   14e9c:	mov	r0, r5
   14ea0:	bl	10f74 <mbrtowc@plt>
   14ea4:	mov	r6, r0
   14ea8:	cmp	r7, #0
   14eac:	beq	14ed0 <putc_unlocked@plt+0x3e00>
   14eb0:	cmn	r6, #2
   14eb4:	bcc	14ed0 <putc_unlocked@plt+0x3e00>
   14eb8:	mov	r0, #0
   14ebc:	bl	14f18 <putc_unlocked@plt+0x3e48>
   14ec0:	cmp	r0, #0
   14ec4:	ldrbeq	r0, [r4]
   14ec8:	streq	r0, [r5]
   14ecc:	moveq	r6, #1
   14ed0:	mov	r0, r6
   14ed4:	sub	sp, fp, #16
   14ed8:	pop	{r4, r5, r6, r7, fp, pc}
   14edc:	cmp	r2, #0
   14ee0:	beq	14f10 <putc_unlocked@plt+0x3e40>
   14ee4:	mvn	r3, #0
   14ee8:	udiv	r3, r3, r2
   14eec:	cmp	r3, r1
   14ef0:	bcs	14f10 <putc_unlocked@plt+0x3e40>
   14ef4:	push	{fp, lr}
   14ef8:	mov	fp, sp
   14efc:	bl	10fec <__errno_location@plt>
   14f00:	mov	r1, #12
   14f04:	str	r1, [r0]
   14f08:	mov	r0, #0
   14f0c:	pop	{fp, pc}
   14f10:	mul	r1, r2, r1
   14f14:	b	14800 <putc_unlocked@plt+0x3730>
   14f18:	push	{r4, sl, fp, lr}
   14f1c:	add	fp, sp, #8
   14f20:	sub	sp, sp, #264	; 0x108
   14f24:	add	r1, sp, #7
   14f28:	movw	r2, #257	; 0x101
   14f2c:	bl	14f7c <putc_unlocked@plt+0x3eac>
   14f30:	mov	r4, #0
   14f34:	cmp	r0, #0
   14f38:	bne	14f70 <putc_unlocked@plt+0x3ea0>
   14f3c:	add	r0, sp, #7
   14f40:	movw	r1, #23583	; 0x5c1f
   14f44:	movt	r1, #1
   14f48:	bl	10e84 <strcmp@plt>
   14f4c:	cmp	r0, #0
   14f50:	beq	14f70 <putc_unlocked@plt+0x3ea0>
   14f54:	add	r0, sp, #7
   14f58:	movw	r1, #23585	; 0x5c21
   14f5c:	movt	r1, #1
   14f60:	bl	10e84 <strcmp@plt>
   14f64:	mov	r4, r0
   14f68:	cmp	r0, #0
   14f6c:	movwne	r4, #1
   14f70:	mov	r0, r4
   14f74:	sub	sp, fp, #8
   14f78:	pop	{r4, sl, fp, pc}
   14f7c:	b	14f80 <putc_unlocked@plt+0x3eb0>
   14f80:	push	{r4, r5, r6, r7, fp, lr}
   14f84:	add	fp, sp, #16
   14f88:	mov	r6, r2
   14f8c:	mov	r4, r1
   14f90:	bl	1501c <putc_unlocked@plt+0x3f4c>
   14f94:	cmp	r0, #0
   14f98:	beq	14fc8 <putc_unlocked@plt+0x3ef8>
   14f9c:	mov	r7, r0
   14fa0:	bl	10fe0 <strlen@plt>
   14fa4:	cmp	r0, r6
   14fa8:	bcs	14fe8 <putc_unlocked@plt+0x3f18>
   14fac:	add	r2, r0, #1
   14fb0:	mov	r0, r4
   14fb4:	mov	r1, r7
   14fb8:	bl	10ecc <memcpy@plt>
   14fbc:	mov	r5, #0
   14fc0:	mov	r0, r5
   14fc4:	pop	{r4, r5, r6, r7, fp, pc}
   14fc8:	mov	r5, #22
   14fcc:	cmp	r6, #0
   14fd0:	movne	r0, #0
   14fd4:	strbne	r0, [r4]
   14fd8:	movne	r0, r5
   14fdc:	popne	{r4, r5, r6, r7, fp, pc}
   14fe0:	mov	r0, r5
   14fe4:	pop	{r4, r5, r6, r7, fp, pc}
   14fe8:	mov	r5, #34	; 0x22
   14fec:	cmp	r6, #0
   14ff0:	beq	15010 <putc_unlocked@plt+0x3f40>
   14ff4:	sub	r6, r6, #1
   14ff8:	mov	r0, r4
   14ffc:	mov	r1, r7
   15000:	mov	r2, r6
   15004:	bl	10ecc <memcpy@plt>
   15008:	mov	r0, #0
   1500c:	strb	r0, [r4, r6]
   15010:	mov	r0, r5
   15014:	pop	{r4, r5, r6, r7, fp, pc}
   15018:	b	1501c <putc_unlocked@plt+0x3f4c>
   1501c:	mov	r1, #0
   15020:	b	11064 <setlocale@plt>
   15024:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15028:	mov	r7, r0
   1502c:	ldr	r6, [pc, #72]	; 1507c <putc_unlocked@plt+0x3fac>
   15030:	ldr	r5, [pc, #72]	; 15080 <putc_unlocked@plt+0x3fb0>
   15034:	add	r6, pc, r6
   15038:	add	r5, pc, r5
   1503c:	sub	r6, r6, r5
   15040:	mov	r8, r1
   15044:	mov	r9, r2
   15048:	bl	10e40 <fdopen@plt-0x20>
   1504c:	asrs	r6, r6, #2
   15050:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15054:	mov	r4, #0
   15058:	add	r4, r4, #1
   1505c:	ldr	r3, [r5], #4
   15060:	mov	r2, r9
   15064:	mov	r1, r8
   15068:	mov	r0, r7
   1506c:	blx	r3
   15070:	cmp	r6, r4
   15074:	bne	15058 <putc_unlocked@plt+0x3f88>
   15078:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1507c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   15080:	andeq	r0, r1, r8, asr #29
   15084:	bx	lr
   15088:	ldr	r3, [pc, #12]	; 1509c <putc_unlocked@plt+0x3fcc>
   1508c:	mov	r1, #0
   15090:	add	r3, pc, r3
   15094:	ldr	r2, [r3]
   15098:	b	10ff8 <__cxa_atexit@plt>
   1509c:	andeq	r1, r1, r4, asr r0

Disassembly of section .fini:

000150a0 <.fini>:
   150a0:	push	{r3, lr}
   150a4:	pop	{r3, pc}
