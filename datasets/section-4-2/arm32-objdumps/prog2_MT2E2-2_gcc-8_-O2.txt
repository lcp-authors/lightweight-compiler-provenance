
../repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010c08 <.init>:
   10c08:	push	{r3, lr}
   10c0c:	bl	10fb0 <_start@@Base+0x3c>
   10c10:	pop	{r3, pc}

Disassembly of section .plt:

00010c14 <calloc@plt-0x14>:
   10c14:	push	{lr}		; (str lr, [sp, #-4]!)
   10c18:	ldr	lr, [pc, #4]	; 10c24 <calloc@plt-0x4>
   10c1c:	add	lr, pc, lr
   10c20:	ldr	pc, [lr, #8]!
   10c24:	ldrdeq	r2, [r1], -ip

00010c28 <calloc@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #73728	; 0x12000
   10c30:	ldr	pc, [ip, #988]!	; 0x3dc

00010c34 <strcmp@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #73728	; 0x12000
   10c3c:	ldr	pc, [ip, #980]!	; 0x3d4

00010c40 <strtol@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #73728	; 0x12000
   10c48:	ldr	pc, [ip, #972]!	; 0x3cc

00010c4c <printf@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #73728	; 0x12000
   10c54:	ldr	pc, [ip, #964]!	; 0x3c4

00010c58 <__isoc99_fscanf@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #73728	; 0x12000
   10c60:	ldr	pc, [ip, #956]!	; 0x3bc

00010c64 <fopen@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #73728	; 0x12000
   10c6c:	ldr	pc, [ip, #948]!	; 0x3b4

00010c70 <free@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #73728	; 0x12000
   10c78:	ldr	pc, [ip, #940]!	; 0x3ac

00010c7c <memcpy@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #73728	; 0x12000
   10c84:	ldr	pc, [ip, #932]!	; 0x3a4

00010c88 <realloc@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #73728	; 0x12000
   10c90:	ldr	pc, [ip, #924]!	; 0x39c

00010c94 <strcpy@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #73728	; 0x12000
   10c9c:	ldr	pc, [ip, #916]!	; 0x394

00010ca0 <puts@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #73728	; 0x12000
   10ca8:	ldr	pc, [ip, #908]!	; 0x38c

00010cac <malloc@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #73728	; 0x12000
   10cb4:	ldr	pc, [ip, #900]!	; 0x384

00010cb8 <__libc_start_main@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #73728	; 0x12000
   10cc0:	ldr	pc, [ip, #892]!	; 0x37c

00010cc4 <__gmon_start__@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #73728	; 0x12000
   10ccc:	ldr	pc, [ip, #884]!	; 0x374

00010cd0 <strlen@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #73728	; 0x12000
   10cd8:	ldr	pc, [ip, #876]!	; 0x36c

00010cdc <putchar@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #73728	; 0x12000
   10ce4:	ldr	pc, [ip, #868]!	; 0x364

00010ce8 <fclose@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #73728	; 0x12000
   10cf0:	ldr	pc, [ip, #860]!	; 0x35c

00010cf4 <sprintf@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #73728	; 0x12000
   10cfc:	ldr	pc, [ip, #852]!	; 0x354

00010d00 <abort@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #73728	; 0x12000
   10d08:	ldr	pc, [ip, #844]!	; 0x34c

Disassembly of section .text:

00010d0c <main@@Base>:
   10d0c:	ldr	r0, [pc, #572]	; 10f50 <main@@Base+0x244>
   10d10:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10d14:	mov	r4, #0
   10d18:	strd	r6, [sp, #8]
   10d1c:	strd	r8, [sp, #16]
   10d20:	str	lr, [sp, #24]
   10d24:	sub	sp, sp, #36	; 0x24
   10d28:	add	r0, pc, r0
   10d2c:	ldr	r6, [pc, #544]	; 10f54 <main@@Base+0x248>
   10d30:	bl	10ca0 <puts@plt>
   10d34:	mov	r1, #1
   10d38:	mov	r0, #8
   10d3c:	bl	112d8 <grafo_novo@@Base>
   10d40:	mov	r7, r0
   10d44:	mov	r2, #3
   10d48:	mov	r1, #1
   10d4c:	add	r6, pc, r6
   10d50:	bl	11578 <grafo_adiciona@@Base>
   10d54:	mov	r0, r7
   10d58:	mov	r2, #3
   10d5c:	mov	r1, #2
   10d60:	bl	11578 <grafo_adiciona@@Base>
   10d64:	mov	r0, r7
   10d68:	mov	r2, #4
   10d6c:	mov	r1, #2
   10d70:	bl	11578 <grafo_adiciona@@Base>
   10d74:	mov	r0, r7
   10d78:	mov	r2, #5
   10d7c:	mov	r1, #2
   10d80:	bl	11578 <grafo_adiciona@@Base>
   10d84:	mov	r0, r7
   10d88:	mov	r2, #2
   10d8c:	mov	r1, #3
   10d90:	bl	11578 <grafo_adiciona@@Base>
   10d94:	mov	r0, r7
   10d98:	mov	r2, #4
   10d9c:	mov	r1, #3
   10da0:	bl	11578 <grafo_adiciona@@Base>
   10da4:	mov	r0, r7
   10da8:	mov	r2, #6
   10dac:	mov	r1, #4
   10db0:	bl	11578 <grafo_adiciona@@Base>
   10db4:	mov	r0, r7
   10db8:	mov	r2, #7
   10dbc:	mov	r1, #4
   10dc0:	bl	11578 <grafo_adiciona@@Base>
   10dc4:	mov	r0, r7
   10dc8:	mov	r2, #4
   10dcc:	mov	r1, #5
   10dd0:	bl	11578 <grafo_adiciona@@Base>
   10dd4:	mov	r0, r7
   10dd8:	mov	r2, #6
   10ddc:	mov	r1, #5
   10de0:	bl	11578 <grafo_adiciona@@Base>
   10de4:	mov	r0, r7
   10de8:	mov	r2, #7
   10dec:	mov	r1, #5
   10df0:	bl	11578 <grafo_adiciona@@Base>
   10df4:	mov	r0, r7
   10df8:	mov	r2, #7
   10dfc:	mov	r1, #6
   10e00:	bl	11578 <grafo_adiciona@@Base>
   10e04:	mov	r3, #5
   10e08:	mov	r2, #7
   10e0c:	mov	r1, #1
   10e10:	mov	r0, r7
   10e14:	bl	11064 <descobre_caminho@@Base>
   10e18:	mov	r5, r0
   10e1c:	ldr	r0, [pc, #308]	; 10f58 <main@@Base+0x24c>
   10e20:	add	r0, pc, r0
   10e24:	bl	10c4c <printf@plt>
   10e28:	b	10e3c <main@@Base+0x130>
   10e2c:	bl	12014 <lista_elemento@@Base>
   10e30:	mov	r1, r0
   10e34:	mov	r0, r6
   10e38:	bl	10c4c <printf@plt>
   10e3c:	mov	r0, r5
   10e40:	bl	12004 <lista_tamanho@@Base>
   10e44:	cmp	r0, r4
   10e48:	mov	r1, r4
   10e4c:	mov	r0, r5
   10e50:	add	r4, r4, #1
   10e54:	bgt	10e2c <main@@Base+0x120>
   10e58:	ldr	r0, [pc, #252]	; 10f5c <main@@Base+0x250>
   10e5c:	mov	r6, sp
   10e60:	add	r4, sp, #8
   10e64:	ldr	r9, [pc, #244]	; 10f60 <main@@Base+0x254>
   10e68:	add	r0, pc, r0
   10e6c:	bl	10ca0 <puts@plt>
   10e70:	mov	r0, r7
   10e74:	add	r9, pc, r9
   10e78:	bl	11344 <grafo_apaga@@Base>
   10e7c:	mov	r0, r5
   10e80:	bl	11fa4 <lista_apaga@@Base>
   10e84:	ldr	r0, [pc, #216]	; 10f64 <main@@Base+0x258>
   10e88:	add	r0, pc, r0
   10e8c:	bl	10ca0 <puts@plt>
   10e90:	ldr	r1, [pc, #208]	; 10f68 <main@@Base+0x25c>
   10e94:	ldr	r0, [pc, #208]	; 10f6c <main@@Base+0x260>
   10e98:	add	r1, pc, r1
   10e9c:	add	r0, pc, r0
   10ea0:	bl	10c64 <fopen@plt>
   10ea4:	mov	r7, r0
   10ea8:	bl	11f74 <lista_nova@@Base>
   10eac:	mov	r5, r0
   10eb0:	bl	11f74 <lista_nova@@Base>
   10eb4:	mov	r8, r0
   10eb8:	b	10ed0 <main@@Base+0x1c4>
   10ebc:	bl	120fc <lista_insere@@Base>
   10ec0:	mvn	r2, #0
   10ec4:	mov	r1, r6
   10ec8:	mov	r0, r8
   10ecc:	bl	120fc <lista_insere@@Base>
   10ed0:	mov	r2, r4
   10ed4:	mov	r1, r9
   10ed8:	mov	r3, r6
   10edc:	mov	r0, r7
   10ee0:	bl	10c58 <__isoc99_fscanf@plt>
   10ee4:	cmp	r0, #2
   10ee8:	mvn	r2, #0
   10eec:	mov	r1, r4
   10ef0:	mov	r0, r5
   10ef4:	beq	10ebc <main@@Base+0x1b0>
   10ef8:	mov	r2, #4
   10efc:	mov	r1, r8
   10f00:	bl	111a0 <simula_acontecimentos@@Base>
   10f04:	cmp	r0, #0
   10f08:	beq	10f40 <main@@Base+0x234>
   10f0c:	mov	r0, r5
   10f10:	bl	11fa4 <lista_apaga@@Base>
   10f14:	mov	r0, r8
   10f18:	bl	11fa4 <lista_apaga@@Base>
   10f1c:	mov	r0, r7
   10f20:	bl	10ce8 <fclose@plt>
   10f24:	mov	r0, #0
   10f28:	add	sp, sp, #36	; 0x24
   10f2c:	ldrd	r4, [sp]
   10f30:	ldrd	r6, [sp, #8]
   10f34:	ldrd	r8, [sp, #16]
   10f38:	add	sp, sp, #24
   10f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   10f40:	ldr	r0, [pc, #40]	; 10f70 <main@@Base+0x264>
   10f44:	add	r0, pc, r0
   10f48:	bl	10ca0 <puts@plt>
   10f4c:	b	10f0c <main@@Base+0x200>
   10f50:	andeq	r1, r0, r8, asr #17
   10f54:	strdeq	r1, [r0], -r8
   10f58:	andeq	r1, r0, r4, ror #15
   10f5c:	andeq	r1, r0, r0, ror #15
   10f60:	strdeq	r1, [r0], -ip
   10f64:	andeq	r1, r0, r4, asr #15
   10f68:	andeq	r1, r0, r8, asr #15
   10f6c:	andeq	r1, r0, r8, asr #15
   10f70:	andeq	r1, r0, r4, lsr r7

00010f74 <_start@@Base>:
   10f74:	mov	fp, #0
   10f78:	mov	lr, #0
   10f7c:	pop	{r1}		; (ldr r1, [sp], #4)
   10f80:	mov	r2, sp
   10f84:	push	{r2}		; (str r2, [sp, #-4]!)
   10f88:	push	{r0}		; (str r0, [sp, #-4]!)
   10f8c:	ldr	ip, [pc, #16]	; 10fa4 <_start@@Base+0x30>
   10f90:	push	{ip}		; (str ip, [sp, #-4]!)
   10f94:	ldr	r0, [pc, #12]	; 10fa8 <_start@@Base+0x34>
   10f98:	ldr	r3, [pc, #12]	; 10fac <_start@@Base+0x38>
   10f9c:	bl	10cb8 <__libc_start_main@plt>
   10fa0:	bl	10d00 <abort@plt>
   10fa4:	ldrdeq	r2, [r1], -ip
   10fa8:	andeq	r0, r1, ip, lsl #26
   10fac:	andeq	r2, r1, ip, ror r5
   10fb0:	ldr	r3, [pc, #20]	; 10fcc <_start@@Base+0x58>
   10fb4:	ldr	r2, [pc, #20]	; 10fd0 <_start@@Base+0x5c>
   10fb8:	add	r3, pc, r3
   10fbc:	ldr	r2, [r3, r2]
   10fc0:	cmp	r2, #0
   10fc4:	bxeq	lr
   10fc8:	b	10cc4 <__gmon_start__@plt>
   10fcc:	andeq	r2, r1, r0, asr #32
   10fd0:	andeq	r0, r0, r8, asr r0
   10fd4:	ldr	r0, [pc, #24]	; 10ff4 <_start@@Base+0x80>
   10fd8:	ldr	r3, [pc, #24]	; 10ff8 <_start@@Base+0x84>
   10fdc:	cmp	r3, r0
   10fe0:	bxeq	lr
   10fe4:	ldr	r3, [pc, #16]	; 10ffc <_start@@Base+0x88>
   10fe8:	cmp	r3, #0
   10fec:	bxeq	lr
   10ff0:	bx	r3
   10ff4:	andeq	r3, r2, r4, rrx
   10ff8:	andeq	r3, r2, r4, rrx
   10ffc:	andeq	r0, r0, r0
   11000:	ldr	r0, [pc, #36]	; 1102c <_start@@Base+0xb8>
   11004:	ldr	r1, [pc, #36]	; 11030 <_start@@Base+0xbc>
   11008:	sub	r1, r1, r0
   1100c:	asr	r1, r1, #2
   11010:	add	r1, r1, r1, lsr #31
   11014:	asrs	r1, r1, #1
   11018:	bxeq	lr
   1101c:	ldr	r3, [pc, #16]	; 11034 <_start@@Base+0xc0>
   11020:	cmp	r3, #0
   11024:	bxeq	lr
   11028:	bx	r3
   1102c:	andeq	r3, r2, r4, rrx
   11030:	andeq	r3, r2, r4, rrx
   11034:	andeq	r0, r0, r0
   11038:	push	{r4, lr}
   1103c:	ldr	r4, [pc, #24]	; 1105c <_start@@Base+0xe8>
   11040:	ldrb	r3, [r4]
   11044:	cmp	r3, #0
   11048:	popne	{r4, pc}
   1104c:	bl	10fd4 <_start@@Base+0x60>
   11050:	mov	r3, #1
   11054:	strb	r3, [r4]
   11058:	pop	{r4, pc}
   1105c:	andeq	r3, r2, r4, rrx
   11060:	b	11000 <_start@@Base+0x8c>

00011064 <descobre_caminho@@Base>:
   11064:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11068:	mov	r4, r1
   1106c:	strd	r6, [sp, #8]
   11070:	strd	r8, [sp, #16]
   11074:	mov	r9, r3
   11078:	mov	r8, r0
   1107c:	strd	sl, [sp, #24]
   11080:	str	lr, [sp, #32]
   11084:	sub	sp, sp, #20
   11088:	add	sl, sp, #12
   1108c:	str	r2, [sp, #4]
   11090:	bl	11f74 <lista_nova@@Base>
   11094:	mov	r6, r0
   11098:	mov	r3, sl
   1109c:	mov	r1, r4
   110a0:	mov	r2, r9
   110a4:	mov	r0, r8
   110a8:	bl	118cc <grafo_bfs@@Base>
   110ac:	ldr	r3, [sp, #12]
   110b0:	str	r0, [sp]
   110b4:	cmp	r3, #0
   110b8:	ble	11100 <descobre_caminho@@Base+0x9c>
   110bc:	ldr	r7, [pc, #212]	; 11198 <descobre_caminho@@Base+0x134>
   110c0:	sub	fp, r0, #4
   110c4:	mov	r5, #0
   110c8:	add	r4, sp, #8
   110cc:	add	r7, pc, r7
   110d0:	mov	r1, r7
   110d4:	mov	r0, r4
   110d8:	ldr	r2, [fp, #4]!
   110dc:	bl	10cf4 <sprintf@plt>
   110e0:	mvn	r2, #0
   110e4:	mov	r1, r4
   110e8:	mov	r0, r6
   110ec:	add	r5, r5, #1
   110f0:	bl	120fc <lista_insere@@Base>
   110f4:	ldr	r3, [sp, #12]
   110f8:	cmp	r3, r5
   110fc:	bgt	110d0 <descobre_caminho@@Base+0x6c>
   11100:	mov	r3, sl
   11104:	mov	r1, r9
   11108:	ldr	r2, [sp, #4]
   1110c:	mov	r0, r8
   11110:	bl	118cc <grafo_bfs@@Base>
   11114:	ldr	r3, [sp, #12]
   11118:	mov	r9, r0
   1111c:	cmp	r3, #1
   11120:	ble	11168 <descobre_caminho@@Base+0x104>
   11124:	ldr	r8, [pc, #112]	; 1119c <descobre_caminho@@Base+0x138>
   11128:	mov	r7, r0
   1112c:	mov	r5, #1
   11130:	add	r4, sp, #8
   11134:	add	r8, pc, r8
   11138:	mov	r1, r8
   1113c:	mov	r0, r4
   11140:	ldr	r2, [r7, #4]!
   11144:	bl	10cf4 <sprintf@plt>
   11148:	mvn	r2, #0
   1114c:	mov	r1, r4
   11150:	mov	r0, r6
   11154:	add	r5, r5, #1
   11158:	bl	120fc <lista_insere@@Base>
   1115c:	ldr	r3, [sp, #12]
   11160:	cmp	r3, r5
   11164:	bgt	11138 <descobre_caminho@@Base+0xd4>
   11168:	mov	r0, r9
   1116c:	bl	10c70 <free@plt>
   11170:	ldr	r0, [sp]
   11174:	bl	10c70 <free@plt>
   11178:	mov	r0, r6
   1117c:	add	sp, sp, #20
   11180:	ldrd	r4, [sp]
   11184:	ldrd	r6, [sp, #8]
   11188:	ldrd	r8, [sp, #16]
   1118c:	ldrd	sl, [sp, #24]
   11190:	add	sp, sp, #32
   11194:	pop	{pc}		; (ldr pc, [sp], #4)
   11198:	andeq	r1, r0, r8, lsl r5
   1119c:			; <UNDEFINED> instruction: 0x000014b0

000111a0 <simula_acontecimentos@@Base>:
   111a0:	cmp	r2, #20
   111a4:	ble	111b0 <simula_acontecimentos@@Base+0x10>
   111a8:	mov	r0, #0
   111ac:	bx	lr
   111b0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   111b4:	strd	r6, [sp, #8]
   111b8:	mov	r6, r2
   111bc:	mov	r7, r0
   111c0:	mov	r0, r2
   111c4:	strd	r8, [sp, #16]
   111c8:	mov	r9, r1
   111cc:	str	lr, [sp, #24]
   111d0:	sub	sp, sp, #28
   111d4:	bl	11a94 <heap_nova@@Base>
   111d8:	cmp	r6, #0
   111dc:	mov	r8, r0
   111e0:	ble	1127c <simula_acontecimentos@@Base+0xdc>
   111e4:	mov	r4, #0
   111e8:	add	r5, sp, #4
   111ec:	b	111f4 <simula_acontecimentos@@Base+0x54>
   111f0:	mov	r4, r3
   111f4:	mov	r1, r4
   111f8:	mov	r0, r7
   111fc:	bl	12014 <lista_elemento@@Base>
   11200:	mov	r1, r0
   11204:	mov	r0, r5
   11208:	bl	10c94 <strcpy@plt>
   1120c:	mov	r1, r4
   11210:	mov	r0, r9
   11214:	bl	12014 <lista_elemento@@Base>
   11218:	mov	r2, #10
   1121c:	mov	r1, #0
   11220:	bl	10c40 <strtol@plt>
   11224:	mov	r2, r0
   11228:	mov	r1, r5
   1122c:	mov	r0, r8
   11230:	bl	11d40 <heap_insere@@Base>
   11234:	add	r3, r4, #1
   11238:	cmp	r6, r3
   1123c:	bne	111f0 <simula_acontecimentos@@Base+0x50>
   11240:	ldr	r9, [pc, #88]	; 112a0 <simula_acontecimentos@@Base+0x100>
   11244:	mov	r5, #0
   11248:	mov	r6, r5
   1124c:	add	r9, pc, r9
   11250:	ldr	r3, [r8, #8]
   11254:	add	r7, r6, #1
   11258:	mov	r0, r9
   1125c:	mov	r1, r7
   11260:	ldr	r3, [r3, r5]
   11264:	add	r5, r5, #4
   11268:	ldr	r2, [r3, #4]
   1126c:	bl	10c4c <printf@plt>
   11270:	cmp	r4, r6
   11274:	mov	r6, r7
   11278:	bne	11250 <simula_acontecimentos@@Base+0xb0>
   1127c:	mov	r0, r8
   11280:	bl	11afc <heap_apaga@@Base>
   11284:	mov	r0, #1
   11288:	add	sp, sp, #28
   1128c:	ldrd	r4, [sp]
   11290:	ldrd	r6, [sp, #8]
   11294:	ldrd	r8, [sp, #16]
   11298:	add	sp, sp, #24
   1129c:	pop	{pc}		; (ldr pc, [sp], #4)
   112a0:	muleq	r0, ip, r3

000112a4 <cria_no@@Base>:
   112a4:	str	r4, [sp, #-8]!
   112a8:	mov	r4, r0
   112ac:	mov	r0, #8
   112b0:	str	lr, [sp, #4]
   112b4:	bl	10cac <malloc@plt>
   112b8:	cmp	r0, #0
   112bc:	beq	112cc <cria_no@@Base+0x28>
   112c0:	mov	r3, #0
   112c4:	str	r4, [r0]
   112c8:	str	r3, [r0, #4]
   112cc:	ldr	r4, [sp]
   112d0:	add	sp, sp, #4
   112d4:	pop	{pc}		; (ldr pc, [sp], #4)

000112d8 <grafo_novo@@Base>:
   112d8:	strd	r4, [sp, #-16]!
   112dc:	mov	r5, r0
   112e0:	mov	r0, #12
   112e4:	str	r6, [sp, #8]
   112e8:	mov	r6, r1
   112ec:	str	lr, [sp, #12]
   112f0:	bl	10cac <malloc@plt>
   112f4:	subs	r4, r0, #0
   112f8:	beq	11320 <grafo_novo@@Base+0x48>
   112fc:	mov	r0, r5
   11300:	mov	r1, #8
   11304:	str	r6, [r4]
   11308:	str	r5, [r4, #4]
   1130c:	bl	10c28 <calloc@plt>
   11310:	cmp	r0, #0
   11314:	mov	r3, r0
   11318:	str	r0, [r4, #8]
   1131c:	beq	11334 <grafo_novo@@Base+0x5c>
   11320:	mov	r0, r4
   11324:	ldrd	r4, [sp]
   11328:	ldr	r6, [sp, #8]
   1132c:	add	sp, sp, #12
   11330:	pop	{pc}		; (ldr pc, [sp], #4)
   11334:	mov	r0, r4
   11338:	mov	r4, r3
   1133c:	bl	10c70 <free@plt>
   11340:	b	11320 <grafo_novo@@Base+0x48>

00011344 <grafo_apaga@@Base>:
   11344:	strd	r4, [sp, #-16]!
   11348:	subs	r5, r0, #0
   1134c:	str	r6, [sp, #8]
   11350:	str	lr, [sp, #12]
   11354:	beq	113d8 <grafo_apaga@@Base+0x94>
   11358:	ldr	r2, [r5, #8]
   1135c:	cmp	r2, #0
   11360:	beq	113c0 <grafo_apaga@@Base+0x7c>
   11364:	ldr	r1, [r5, #4]
   11368:	cmp	r1, #0
   1136c:	movgt	r6, #0
   11370:	ble	113b8 <grafo_apaga@@Base+0x74>
   11374:	lsl	r4, r6, #3
   11378:	add	r3, r2, r4
   1137c:	ldr	r0, [r3, #4]
   11380:	cmp	r0, #0
   11384:	beq	113ac <grafo_apaga@@Base+0x68>
   11388:	ldr	r2, [r0, #4]
   1138c:	str	r2, [r3, #4]
   11390:	bl	10c70 <free@plt>
   11394:	ldr	r2, [r5, #8]
   11398:	add	r3, r2, r4
   1139c:	ldr	r0, [r3, #4]
   113a0:	cmp	r0, #0
   113a4:	bne	11388 <grafo_apaga@@Base+0x44>
   113a8:	ldr	r1, [r5, #4]
   113ac:	add	r6, r6, #1
   113b0:	cmp	r1, r6
   113b4:	bgt	11374 <grafo_apaga@@Base+0x30>
   113b8:	mov	r0, r2
   113bc:	bl	10c70 <free@plt>
   113c0:	mov	r0, r5
   113c4:	ldrd	r4, [sp]
   113c8:	ldr	r6, [sp, #8]
   113cc:	ldr	lr, [sp, #12]
   113d0:	add	sp, sp, #16
   113d4:	b	10c70 <free@plt>
   113d8:	ldrd	r4, [sp]
   113dc:	ldr	r6, [sp, #8]
   113e0:	add	sp, sp, #12
   113e4:	pop	{pc}		; (ldr pc, [sp], #4)

000113e8 <grafo_remove@@Base>:
   113e8:	strd	r4, [sp, #-16]!
   113ec:	str	r6, [sp, #8]
   113f0:	subs	r6, r0, #0
   113f4:	str	lr, [sp, #12]
   113f8:	beq	114ac <grafo_remove@@Base+0xc4>
   113fc:	ldr	ip, [r6, #8]
   11400:	add	ip, ip, r1, lsl #3
   11404:	ldr	lr, [ip, #4]
   11408:	cmp	lr, #0
   1140c:	beq	114ac <grafo_remove@@Base+0xc4>
   11410:	mov	r4, r2
   11414:	ldrd	r2, [lr]
   11418:	mov	r5, r1
   1141c:	cmp	r2, r4
   11420:	beq	1150c <grafo_remove@@Base+0x124>
   11424:	cmp	r3, #0
   11428:	beq	1144c <grafo_remove@@Base+0x64>
   1142c:	ldr	r2, [r3]
   11430:	cmp	r4, r2
   11434:	bne	114cc <grafo_remove@@Base+0xe4>
   11438:	mov	r0, r3
   1143c:	mov	r3, lr
   11440:	ldr	r2, [r0, #4]
   11444:	str	r2, [r3, #4]
   11448:	bl	10c70 <free@plt>
   1144c:	ldr	r3, [r6]
   11450:	cmp	r3, #0
   11454:	bne	114ac <grafo_remove@@Base+0xc4>
   11458:	ldr	r2, [r6, #8]
   1145c:	add	r4, r2, r4, lsl #3
   11460:	ldr	r2, [r4, #4]
   11464:	ldm	r2, {r1, r3}
   11468:	cmp	r1, r5
   1146c:	moveq	r0, r2
   11470:	streq	r3, [r4, #4]
   11474:	beq	114f8 <grafo_remove@@Base+0x110>
   11478:	cmp	r3, #0
   1147c:	beq	114ac <grafo_remove@@Base+0xc4>
   11480:	ldr	r1, [r3]
   11484:	cmp	r1, r5
   11488:	bne	114a0 <grafo_remove@@Base+0xb8>
   1148c:	b	114e8 <grafo_remove@@Base+0x100>
   11490:	ldr	r2, [r0]
   11494:	cmp	r2, r5
   11498:	beq	114f0 <grafo_remove@@Base+0x108>
   1149c:	mov	r3, r0
   114a0:	ldr	r0, [r3, #4]
   114a4:	cmp	r0, #0
   114a8:	bne	11490 <grafo_remove@@Base+0xa8>
   114ac:	ldrd	r4, [sp]
   114b0:	ldr	r6, [sp, #8]
   114b4:	add	sp, sp, #12
   114b8:	pop	{pc}		; (ldr pc, [sp], #4)
   114bc:	ldr	ip, [r0]
   114c0:	cmp	ip, r4
   114c4:	beq	11440 <grafo_remove@@Base+0x58>
   114c8:	mov	r3, r0
   114cc:	ldr	r0, [r3, #4]
   114d0:	cmp	r0, #0
   114d4:	bne	114bc <grafo_remove@@Base+0xd4>
   114d8:	ldr	r3, [r6]
   114dc:	cmp	r3, #0
   114e0:	bne	114ac <grafo_remove@@Base+0xc4>
   114e4:	b	11458 <grafo_remove@@Base+0x70>
   114e8:	mov	r0, r3
   114ec:	mov	r3, r2
   114f0:	ldr	r2, [r0, #4]
   114f4:	str	r2, [r3, #4]
   114f8:	ldrd	r4, [sp]
   114fc:	ldr	r6, [sp, #8]
   11500:	ldr	lr, [sp, #12]
   11504:	add	sp, sp, #16
   11508:	b	10c70 <free@plt>
   1150c:	mov	r0, lr
   11510:	str	r3, [ip, #4]
   11514:	bl	10c70 <free@plt>
   11518:	ldr	r3, [r6]
   1151c:	cmp	r3, #0
   11520:	bne	114ac <grafo_remove@@Base+0xc4>
   11524:	b	11458 <grafo_remove@@Base+0x70>

00011528 <grafo_existe@@Base>:
   11528:	cmp	r0, #0
   1152c:	beq	11574 <grafo_existe@@Base+0x4c>
   11530:	ldr	r3, [r0, #8]
   11534:	add	r3, r3, r1, lsl #3
   11538:	ldr	r0, [r3, #4]
   1153c:	cmp	r0, #0
   11540:	beq	11574 <grafo_existe@@Base+0x4c>
   11544:	ldr	r3, [r0]
   11548:	cmp	r2, r3
   1154c:	bne	11560 <grafo_existe@@Base+0x38>
   11550:	b	11570 <grafo_existe@@Base+0x48>
   11554:	ldr	r3, [r0]
   11558:	cmp	r3, r2
   1155c:	beq	11570 <grafo_existe@@Base+0x48>
   11560:	ldr	r0, [r0, #4]
   11564:	cmp	r0, #0
   11568:	bne	11554 <grafo_existe@@Base+0x2c>
   1156c:	bx	lr
   11570:	mov	r0, #1
   11574:	bx	lr

00011578 <grafo_adiciona@@Base>:
   11578:	subs	r3, r0, #0
   1157c:	bxeq	lr
   11580:	strd	r4, [sp, #-16]!
   11584:	mov	r4, r1
   11588:	mov	r5, r3
   1158c:	str	r6, [sp, #8]
   11590:	mov	r6, r2
   11594:	str	lr, [sp, #12]
   11598:	bl	11528 <grafo_existe@@Base>
   1159c:	cmp	r0, #0
   115a0:	beq	115b4 <grafo_adiciona@@Base+0x3c>
   115a4:	ldrd	r4, [sp]
   115a8:	ldr	r6, [sp, #8]
   115ac:	add	sp, sp, #12
   115b0:	pop	{pc}		; (ldr pc, [sp], #4)
   115b4:	mov	r0, r6
   115b8:	bl	112a4 <cria_no@@Base>
   115bc:	ldr	lr, [r5]
   115c0:	ldr	r3, [r5, #8]
   115c4:	cmp	lr, #0
   115c8:	add	r1, r3, r4, lsl #3
   115cc:	ldr	r2, [r3, r4, lsl #3]
   115d0:	ldr	ip, [r1, #4]
   115d4:	add	r2, r2, #1
   115d8:	str	ip, [r0, #4]
   115dc:	str	r0, [r1, #4]
   115e0:	str	r2, [r3, r4, lsl #3]
   115e4:	bne	115a4 <grafo_adiciona@@Base+0x2c>
   115e8:	mov	r0, r4
   115ec:	bl	112a4 <cria_no@@Base>
   115f0:	ldr	r3, [r5, #8]
   115f4:	ldrd	r4, [sp]
   115f8:	add	r1, r3, r6, lsl #3
   115fc:	ldr	r2, [r3, r6, lsl #3]
   11600:	ldr	ip, [r1, #4]
   11604:	add	r2, r2, #1
   11608:	str	ip, [r0, #4]
   1160c:	str	r0, [r1, #4]
   11610:	str	r2, [r3, r6, lsl #3]
   11614:	ldr	r6, [sp, #8]
   11618:	add	sp, sp, #12
   1161c:	pop	{pc}		; (ldr pc, [sp], #4)

00011620 <grafo_imprime@@Base>:
   11620:	ldr	r3, [r0, #4]
   11624:	cmp	r3, #0
   11628:	bxle	lr
   1162c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11630:	mov	r5, #0
   11634:	strd	r6, [sp, #8]
   11638:	mov	r7, r0
   1163c:	ldr	r6, [pc, #148]	; 116d8 <grafo_imprime@@Base+0xb8>
   11640:	strd	r8, [sp, #16]
   11644:	ldr	r8, [pc, #144]	; 116dc <grafo_imprime@@Base+0xbc>
   11648:	str	sl, [sp, #24]
   1164c:	ldr	r9, [pc, #140]	; 116e0 <grafo_imprime@@Base+0xc0>
   11650:	add	r6, pc, r6
   11654:	str	lr, [sp, #28]
   11658:	add	r8, pc, r8
   1165c:	add	r9, pc, r9
   11660:	b	1167c <grafo_imprime@@Base+0x5c>
   11664:	mov	r0, #10
   11668:	add	r5, r5, #1
   1166c:	bl	10cdc <putchar@plt>
   11670:	ldr	r3, [r7, #4]
   11674:	cmp	r3, r5
   11678:	ble	116c0 <grafo_imprime@@Base+0xa0>
   1167c:	ldr	r3, [r7, #8]
   11680:	mov	r1, r5
   11684:	mov	r0, r8
   11688:	add	r3, r3, r5, lsl #3
   1168c:	ldr	r4, [r3, #4]
   11690:	bl	10c4c <printf@plt>
   11694:	cmp	r4, #0
   11698:	beq	11664 <grafo_imprime@@Base+0x44>
   1169c:	mov	r0, r9
   116a0:	b	116a8 <grafo_imprime@@Base+0x88>
   116a4:	mov	r0, r6
   116a8:	ldr	r1, [r4]
   116ac:	bl	10c4c <printf@plt>
   116b0:	ldr	r4, [r4, #4]
   116b4:	cmp	r4, #0
   116b8:	bne	116a4 <grafo_imprime@@Base+0x84>
   116bc:	b	11664 <grafo_imprime@@Base+0x44>
   116c0:	ldrd	r4, [sp]
   116c4:	ldrd	r6, [sp, #8]
   116c8:	ldrd	r8, [sp, #16]
   116cc:	ldr	sl, [sp, #24]
   116d0:	add	sp, sp, #28
   116d4:	pop	{pc}		; (ldr pc, [sp], #4)
   116d8:	andeq	r1, r0, ip, asr #32
   116dc:	andeq	r1, r0, ip, lsr r0
   116e0:	andeq	r0, r0, r8, lsl #31

000116e4 <dfs_helper@@Base>:
   116e4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   116e8:	strd	r6, [sp, #8]
   116ec:	strd	r8, [sp, #16]
   116f0:	str	sl, [sp, #24]
   116f4:	str	lr, [sp, #28]
   116f8:	sub	sp, sp, #8
   116fc:	ldr	r7, [sp, #40]	; 0x28
   11700:	ldr	r8, [r7, r1, lsl #2]
   11704:	cmp	r8, #0
   11708:	movne	r8, #0
   1170c:	bne	11790 <dfs_helper@@Base+0xac>
   11710:	cmp	r1, r2
   11714:	str	r3, [r7, r1, lsl #2]
   11718:	moveq	r8, r3
   1171c:	beq	11790 <dfs_helper@@Base+0xac>
   11720:	mov	r9, r2
   11724:	ldr	r2, [r0, #4]
   11728:	mov	r5, r0
   1172c:	mov	r6, r1
   11730:	cmp	r2, #0
   11734:	ble	117b0 <dfs_helper@@Base+0xcc>
   11738:	add	sl, r3, #1
   1173c:	mov	r4, r8
   11740:	b	11754 <dfs_helper@@Base+0x70>
   11744:	ldr	r3, [r5, #4]
   11748:	add	r4, r4, #1
   1174c:	cmp	r3, r4
   11750:	ble	117b0 <dfs_helper@@Base+0xcc>
   11754:	mov	r2, r4
   11758:	mov	r1, r6
   1175c:	mov	r0, r5
   11760:	bl	11528 <grafo_existe@@Base>
   11764:	cmp	r0, #0
   11768:	beq	11744 <dfs_helper@@Base+0x60>
   1176c:	mov	r3, sl
   11770:	mov	r2, r9
   11774:	str	r7, [sp]
   11778:	mov	r1, r4
   1177c:	mov	r0, r5
   11780:	bl	116e4 <dfs_helper@@Base>
   11784:	cmp	r0, #0
   11788:	beq	11744 <dfs_helper@@Base+0x60>
   1178c:	mov	r8, r0
   11790:	mov	r0, r8
   11794:	add	sp, sp, #8
   11798:	ldrd	r4, [sp]
   1179c:	ldrd	r6, [sp, #8]
   117a0:	ldrd	r8, [sp, #16]
   117a4:	ldr	sl, [sp, #24]
   117a8:	add	sp, sp, #28
   117ac:	pop	{pc}		; (ldr pc, [sp], #4)
   117b0:	mov	r3, #0
   117b4:	str	r3, [r7, r6, lsl #2]
   117b8:	b	11790 <dfs_helper@@Base+0xac>

000117bc <grafo_dfs@@Base>:
   117bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   117c0:	strd	r6, [sp, #8]
   117c4:	subs	r7, r0, #0
   117c8:	str	r8, [sp, #16]
   117cc:	moveq	r8, r7
   117d0:	str	lr, [sp, #20]
   117d4:	sub	sp, sp, #8
   117d8:	beq	11888 <grafo_dfs@@Base+0xcc>
   117dc:	mov	r6, r1
   117e0:	mov	r1, #4
   117e4:	ldr	r0, [r7, #4]
   117e8:	mov	r5, r3
   117ec:	mov	r8, r2
   117f0:	bl	10c28 <calloc@plt>
   117f4:	mov	r4, r0
   117f8:	mov	r1, r6
   117fc:	mov	r2, r8
   11800:	mov	r3, #1
   11804:	mov	r0, r7
   11808:	str	r4, [sp]
   1180c:	bl	116e4 <dfs_helper@@Base>
   11810:	subs	r6, r0, #0
   11814:	beq	118b8 <grafo_dfs@@Base+0xfc>
   11818:	mov	r1, #4
   1181c:	bl	10c28 <calloc@plt>
   11820:	cmp	r6, #0
   11824:	mov	r8, r0
   11828:	ble	1187c <grafo_dfs@@Base+0xc0>
   1182c:	ldr	lr, [r7, #4]
   11830:	mov	ip, #0
   11834:	sub	r3, r0, #4
   11838:	cmp	lr, #0
   1183c:	add	ip, ip, #1
   11840:	ble	11874 <grafo_dfs@@Base+0xb8>
   11844:	ldr	r2, [r4]
   11848:	cmp	ip, r2
   1184c:	movne	r1, r4
   11850:	movne	r2, #0
   11854:	bne	11868 <grafo_dfs@@Base+0xac>
   11858:	b	118a4 <grafo_dfs@@Base+0xe8>
   1185c:	ldr	r0, [r1, #4]!
   11860:	cmp	r0, ip
   11864:	beq	118a8 <grafo_dfs@@Base+0xec>
   11868:	add	r2, r2, #1
   1186c:	cmp	r2, lr
   11870:	bne	1185c <grafo_dfs@@Base+0xa0>
   11874:	cmp	r6, ip
   11878:	bne	11838 <grafo_dfs@@Base+0x7c>
   1187c:	mov	r0, r4
   11880:	str	r6, [r5]
   11884:	bl	10c70 <free@plt>
   11888:	mov	r0, r8
   1188c:	add	sp, sp, #8
   11890:	ldrd	r4, [sp]
   11894:	ldrd	r6, [sp, #8]
   11898:	ldr	r8, [sp, #16]
   1189c:	add	sp, sp, #20
   118a0:	pop	{pc}		; (ldr pc, [sp], #4)
   118a4:	mov	r2, #0
   118a8:	cmp	r6, ip
   118ac:	str	r2, [r3, ip, lsl #2]
   118b0:	bne	11838 <grafo_dfs@@Base+0x7c>
   118b4:	b	1187c <grafo_dfs@@Base+0xc0>
   118b8:	mov	r0, r4
   118bc:	mov	r8, r6
   118c0:	bl	10c70 <free@plt>
   118c4:	str	r6, [r5]
   118c8:	b	11888 <grafo_dfs@@Base+0xcc>

000118cc <grafo_bfs@@Base>:
   118cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   118d0:	subs	r4, r0, #0
   118d4:	strd	r6, [sp, #8]
   118d8:	strd	r8, [sp, #16]
   118dc:	strd	sl, [sp, #24]
   118e0:	str	lr, [sp, #32]
   118e4:	sub	sp, sp, #20
   118e8:	streq	r4, [sp, #8]
   118ec:	str	r3, [sp, #4]
   118f0:	beq	11a0c <grafo_bfs@@Base+0x140>
   118f4:	ldr	r3, [r4, #4]
   118f8:	mov	r5, r1
   118fc:	mov	r1, #4
   11900:	mov	sl, r2
   11904:	mov	r0, r3
   11908:	str	r3, [sp, #12]
   1190c:	bl	10c28 <calloc@plt>
   11910:	ldr	r3, [sp, #12]
   11914:	mov	r7, r0
   11918:	mov	r1, #4
   1191c:	mov	r0, r3
   11920:	bl	10c28 <calloc@plt>
   11924:	ldr	r3, [sp, #12]
   11928:	mov	r9, r0
   1192c:	cmp	r3, #0
   11930:	addgt	r0, r7, r3, lsl #2
   11934:	movgt	r2, r7
   11938:	mvngt	r1, #0
   1193c:	ble	1194c <grafo_bfs@@Base+0x80>
   11940:	str	r1, [r2], #4
   11944:	cmp	r0, r2
   11948:	bne	11940 <grafo_bfs@@Base+0x74>
   1194c:	mov	r6, #1
   11950:	mov	r8, #0
   11954:	str	r5, [r7, r5, lsl #2]
   11958:	str	r5, [r9]
   1195c:	add	r8, r8, #1
   11960:	cmp	r3, #0
   11964:	sdiv	r2, r8, r3
   11968:	mls	r8, r3, r2, r8
   1196c:	ble	119d0 <grafo_bfs@@Base+0x104>
   11970:	mov	fp, #0
   11974:	b	11988 <grafo_bfs@@Base+0xbc>
   11978:	ldr	r3, [r4, #4]
   1197c:	add	fp, fp, #1
   11980:	cmp	fp, r3
   11984:	bge	119d0 <grafo_bfs@@Base+0x104>
   11988:	mov	r2, fp
   1198c:	mov	r1, r5
   11990:	mov	r0, r4
   11994:	bl	11528 <grafo_existe@@Base>
   11998:	cmp	r0, #0
   1199c:	beq	11978 <grafo_bfs@@Base+0xac>
   119a0:	ldr	r2, [r7, fp, lsl #2]
   119a4:	ldr	r3, [r4, #4]
   119a8:	cmn	r2, #1
   119ac:	bne	1197c <grafo_bfs@@Base+0xb0>
   119b0:	add	r2, r6, #1
   119b4:	str	fp, [r9, r6, lsl #2]
   119b8:	str	r5, [r7, fp, lsl #2]
   119bc:	add	fp, fp, #1
   119c0:	sdiv	r6, r2, r3
   119c4:	cmp	fp, r3
   119c8:	mls	r6, r3, r6, r2
   119cc:	blt	11988 <grafo_bfs@@Base+0xbc>
   119d0:	cmp	r8, r6
   119d4:	beq	119e4 <grafo_bfs@@Base+0x118>
   119d8:	ldr	r5, [r9, r8, lsl #2]
   119dc:	ldr	r3, [r4, #4]
   119e0:	b	1195c <grafo_bfs@@Base+0x90>
   119e4:	ldr	r5, [r7, sl, lsl #2]
   119e8:	cmp	r5, #0
   119ec:	movlt	r6, #0
   119f0:	bge	11a2c <grafo_bfs@@Base+0x160>
   119f4:	mov	r0, r9
   119f8:	bl	10c70 <free@plt>
   119fc:	mov	r0, r7
   11a00:	bl	10c70 <free@plt>
   11a04:	ldr	r3, [sp, #4]
   11a08:	str	r6, [r3]
   11a0c:	ldr	r0, [sp, #8]
   11a10:	add	sp, sp, #20
   11a14:	ldrd	r4, [sp]
   11a18:	ldrd	r6, [sp, #8]
   11a1c:	ldrd	r8, [sp, #16]
   11a20:	ldrd	sl, [sp, #24]
   11a24:	add	sp, sp, #32
   11a28:	pop	{pc}		; (ldr pc, [sp], #4)
   11a2c:	cmp	r5, sl
   11a30:	beq	11a84 <grafo_bfs@@Base+0x1b8>
   11a34:	mov	r3, r5
   11a38:	mov	r6, #1
   11a3c:	ldr	r2, [r7, r3, lsl #2]
   11a40:	add	r6, r6, #1
   11a44:	cmp	r2, r3
   11a48:	mov	r3, r2
   11a4c:	bne	11a3c <grafo_bfs@@Base+0x170>
   11a50:	lsl	r4, r6, #2
   11a54:	mov	r0, r4
   11a58:	bl	10cac <malloc@plt>
   11a5c:	mov	r2, r0
   11a60:	add	r3, r0, r4
   11a64:	str	r0, [sp, #8]
   11a68:	b	11a70 <grafo_bfs@@Base+0x1a4>
   11a6c:	ldr	r5, [r7, r5, lsl #2]
   11a70:	str	sl, [r3, #-4]!
   11a74:	cmp	r3, r2
   11a78:	mov	sl, r5
   11a7c:	bne	11a6c <grafo_bfs@@Base+0x1a0>
   11a80:	b	119f4 <grafo_bfs@@Base+0x128>
   11a84:	mov	r0, #4
   11a88:	mov	r6, #1
   11a8c:	mov	r4, r0
   11a90:	b	11a58 <grafo_bfs@@Base+0x18c>

00011a94 <heap_nova@@Base>:
   11a94:	strd	r4, [sp, #-16]!
   11a98:	mov	r5, r0
   11a9c:	mov	r0, #12
   11aa0:	str	r6, [sp, #8]
   11aa4:	str	lr, [sp, #12]
   11aa8:	bl	10cac <malloc@plt>
   11aac:	subs	r4, r0, #0
   11ab0:	beq	11ad8 <heap_nova@@Base+0x44>
   11ab4:	mov	r3, #0
   11ab8:	mov	r0, r5
   11abc:	mov	r1, #4
   11ac0:	stm	r4, {r3, r5}
   11ac4:	bl	10c28 <calloc@plt>
   11ac8:	cmp	r0, #0
   11acc:	mov	r3, r0
   11ad0:	str	r0, [r4, #8]
   11ad4:	beq	11aec <heap_nova@@Base+0x58>
   11ad8:	mov	r0, r4
   11adc:	ldrd	r4, [sp]
   11ae0:	ldr	r6, [sp, #8]
   11ae4:	add	sp, sp, #12
   11ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   11aec:	mov	r0, r4
   11af0:	mov	r4, r3
   11af4:	bl	10c70 <free@plt>
   11af8:	b	11ad8 <heap_nova@@Base+0x44>

00011afc <heap_apaga@@Base>:
   11afc:	strd	r4, [sp, #-16]!
   11b00:	subs	r5, r0, #0
   11b04:	str	r6, [sp, #8]
   11b08:	str	lr, [sp, #12]
   11b0c:	beq	11b74 <heap_apaga@@Base+0x78>
   11b10:	ldr	r3, [r5]
   11b14:	ldr	r0, [r5, #8]
   11b18:	cmp	r3, #0
   11b1c:	ble	11b58 <heap_apaga@@Base+0x5c>
   11b20:	mov	r4, #0
   11b24:	mov	r6, r4
   11b28:	ldr	r3, [r0, r4, lsl #2]
   11b2c:	ldr	r0, [r3, #4]
   11b30:	bl	10c70 <free@plt>
   11b34:	ldr	r3, [r5, #8]
   11b38:	ldr	r0, [r3, r4, lsl #2]
   11b3c:	bl	10c70 <free@plt>
   11b40:	ldr	r3, [r5]
   11b44:	ldr	r0, [r5, #8]
   11b48:	str	r6, [r0, r4, lsl #2]
   11b4c:	add	r4, r4, #1
   11b50:	cmp	r3, r4
   11b54:	bgt	11b28 <heap_apaga@@Base+0x2c>
   11b58:	bl	10c70 <free@plt>
   11b5c:	mov	r0, r5
   11b60:	ldrd	r4, [sp]
   11b64:	ldr	r6, [sp, #8]
   11b68:	ldr	lr, [sp, #12]
   11b6c:	add	sp, sp, #16
   11b70:	b	10c70 <free@plt>
   11b74:	ldrd	r4, [sp]
   11b78:	ldr	r6, [sp, #8]
   11b7c:	add	sp, sp, #12
   11b80:	pop	{pc}		; (ldr pc, [sp], #4)

00011b84 <elemento_cria@@Base>:
   11b84:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11b88:	mov	r5, r1
   11b8c:	strd	r6, [sp, #8]
   11b90:	mov	r7, r0
   11b94:	mov	r0, #8
   11b98:	str	r8, [sp, #16]
   11b9c:	str	lr, [sp, #20]
   11ba0:	bl	10cac <malloc@plt>
   11ba4:	subs	r4, r0, #0
   11ba8:	beq	11be4 <elemento_cria@@Base+0x60>
   11bac:	mov	r0, r5
   11bb0:	bl	10cd0 <strlen@plt>
   11bb4:	add	r6, r0, #1
   11bb8:	mov	r1, #1
   11bbc:	mov	r0, r6
   11bc0:	bl	10c28 <calloc@plt>
   11bc4:	cmp	r0, #0
   11bc8:	mov	r3, r0
   11bcc:	str	r0, [r4, #4]
   11bd0:	beq	11bfc <elemento_cria@@Base+0x78>
   11bd4:	mov	r2, r6
   11bd8:	mov	r1, r5
   11bdc:	bl	10c7c <memcpy@plt>
   11be0:	str	r7, [r4]
   11be4:	mov	r0, r4
   11be8:	ldrd	r4, [sp]
   11bec:	ldrd	r6, [sp, #8]
   11bf0:	ldr	r8, [sp, #16]
   11bf4:	add	sp, sp, #20
   11bf8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bfc:	mov	r0, r4
   11c00:	mov	r4, r3
   11c04:	bl	10c70 <free@plt>
   11c08:	b	11be4 <elemento_cria@@Base+0x60>

00011c0c <mostraHeap@@Base>:
   11c0c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11c10:	strd	r6, [sp, #8]
   11c14:	mov	r7, r0
   11c18:	mov	r6, r1
   11c1c:	ldr	r3, [r7]
   11c20:	strd	r8, [sp, #16]
   11c24:	ldr	r5, [pc, #220]	; 11d08 <mostraHeap@@Base+0xfc>
   11c28:	str	sl, [sp, #24]
   11c2c:	ldr	r9, [pc, #216]	; 11d0c <mostraHeap@@Base+0x100>
   11c30:	cmp	r3, r6
   11c34:	str	lr, [sp, #28]
   11c38:	add	r5, pc, r5
   11c3c:	add	r9, pc, r9
   11c40:	ble	11cb4 <mostraHeap@@Base+0xa8>
   11c44:	lsl	r8, r6, #1
   11c48:	cmp	r6, #0
   11c4c:	add	r1, r8, #1
   11c50:	ble	11cd4 <mostraHeap@@Base+0xc8>
   11c54:	mov	r4, r6
   11c58:	mov	r3, #0
   11c5c:	sub	r4, r4, #1
   11c60:	add	r3, r3, #1
   11c64:	asrs	r4, r4, #1
   11c68:	bne	11c5c <mostraHeap@@Base+0x50>
   11c6c:	mov	r0, r7
   11c70:	add	sl, r3, r3, lsl #1
   11c74:	bl	11c0c <mostraHeap@@Base>
   11c78:	add	r4, r4, #1
   11c7c:	mov	r0, r5
   11c80:	bl	10c4c <printf@plt>
   11c84:	cmp	r4, sl
   11c88:	blt	11c78 <mostraHeap@@Base+0x6c>
   11c8c:	ldr	r3, [r7, #8]
   11c90:	mov	r0, r9
   11c94:	ldr	r3, [r3, r6, lsl #2]
   11c98:	add	r6, r8, #2
   11c9c:	ldr	r2, [r3]
   11ca0:	ldr	r1, [r3, #4]
   11ca4:	bl	10c4c <printf@plt>
   11ca8:	ldr	r3, [r7]
   11cac:	cmp	r3, r6
   11cb0:	bgt	11c44 <mostraHeap@@Base+0x38>
   11cb4:	mov	r0, #10
   11cb8:	ldrd	r4, [sp]
   11cbc:	ldrd	r6, [sp, #8]
   11cc0:	ldrd	r8, [sp, #16]
   11cc4:	ldr	sl, [sp, #24]
   11cc8:	ldr	lr, [sp, #28]
   11ccc:	add	sp, sp, #32
   11cd0:	b	10cdc <putchar@plt>
   11cd4:	mov	r0, r7
   11cd8:	bl	11c0c <mostraHeap@@Base>
   11cdc:	ldr	r3, [r7, #8]
   11ce0:	ldr	r0, [pc, #40]	; 11d10 <mostraHeap@@Base+0x104>
   11ce4:	ldr	r3, [r3, r6, lsl #2]
   11ce8:	add	r0, pc, r0
   11cec:	ldr	r2, [r3]
   11cf0:	ldr	r1, [r3, #4]
   11cf4:	bl	10c4c <printf@plt>
   11cf8:	add	r1, r8, #2
   11cfc:	mov	r0, r7
   11d00:	bl	11c0c <mostraHeap@@Base>
   11d04:	b	11cb4 <mostraHeap@@Base+0xa8>
   11d08:	andeq	r0, r0, ip, ror #20
   11d0c:	andeq	r0, r0, r0, ror sl
   11d10:	andeq	r0, r0, r4, asr #19

00011d14 <menor_que@@Base>:
   11d14:	cmp	r1, #0
   11d18:	cmpne	r0, #0
   11d1c:	beq	11d38 <menor_que@@Base+0x24>
   11d20:	ldr	r0, [r0]
   11d24:	ldr	r3, [r1]
   11d28:	cmp	r0, r3
   11d2c:	movge	r0, #0
   11d30:	movlt	r0, #1
   11d34:	bx	lr
   11d38:	mov	r0, #0
   11d3c:	bx	lr

00011d40 <heap_insere@@Base>:
   11d40:	ldr	ip, [r0]
   11d44:	ldr	r3, [r0, #4]
   11d48:	cmp	ip, r3
   11d4c:	blt	11d58 <heap_insere@@Base+0x18>
   11d50:	mov	r0, #0
   11d54:	bx	lr
   11d58:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11d5c:	strd	r6, [sp, #8]
   11d60:	mov	r7, r0
   11d64:	mov	r0, r2
   11d68:	str	r8, [sp, #16]
   11d6c:	str	lr, [sp, #20]
   11d70:	bl	11b84 <elemento_cria@@Base>
   11d74:	cmp	r0, #0
   11d78:	moveq	r0, #0
   11d7c:	beq	11dec <heap_insere@@Base+0xac>
   11d80:	ldr	r4, [r7]
   11d84:	ldr	r3, [r7, #8]
   11d88:	add	r2, r4, #1
   11d8c:	cmp	r4, #0
   11d90:	str	r0, [r3, r4, lsl #2]
   11d94:	str	r2, [r7]
   11d98:	beq	11de8 <heap_insere@@Base+0xa8>
   11d9c:	lsl	r5, r4, #2
   11da0:	b	11dc4 <heap_insere@@Base+0x84>
   11da4:	ldr	r3, [r7, #8]
   11da8:	cmp	r4, #0
   11dac:	ldr	r2, [r3, r4, lsl #2]
   11db0:	ldr	r1, [r3, r6]
   11db4:	str	r1, [r3, r4, lsl #2]
   11db8:	str	r2, [r3, r6]
   11dbc:	beq	11de8 <heap_insere@@Base+0xa8>
   11dc0:	ldr	r0, [r3, r5]
   11dc4:	sub	r4, r4, #1
   11dc8:	mov	r6, r5
   11dcc:	add	r4, r4, r4, lsr #31
   11dd0:	asr	r4, r4, #1
   11dd4:	ldr	r1, [r3, r4, lsl #2]
   11dd8:	lsl	r5, r4, #2
   11ddc:	bl	11d14 <menor_que@@Base>
   11de0:	cmp	r0, #0
   11de4:	bne	11da4 <heap_insere@@Base+0x64>
   11de8:	mov	r0, #1
   11dec:	ldrd	r4, [sp]
   11df0:	ldrd	r6, [sp, #8]
   11df4:	ldr	r8, [sp, #16]
   11df8:	add	sp, sp, #20
   11dfc:	pop	{pc}		; (ldr pc, [sp], #4)

00011e00 <heap_remove@@Base>:
   11e00:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11e04:	strd	r6, [sp, #8]
   11e08:	subs	r7, r0, #0
   11e0c:	str	r8, [sp, #16]
   11e10:	str	lr, [sp, #20]
   11e14:	beq	11edc <heap_remove@@Base+0xdc>
   11e18:	ldr	r3, [r7]
   11e1c:	cmp	r3, #0
   11e20:	ble	11edc <heap_remove@@Base+0xdc>
   11e24:	ldr	r3, [r7, #8]
   11e28:	mov	r4, #0
   11e2c:	ldr	r3, [r3]
   11e30:	mov	r0, r3
   11e34:	ldr	r6, [r3, #4]
   11e38:	bl	10c70 <free@plt>
   11e3c:	ldr	r1, [r7]
   11e40:	ldr	r3, [r7, #8]
   11e44:	sub	r1, r1, #1
   11e48:	cmp	r1, #1
   11e4c:	ldr	r2, [r3, r1, lsl #2]
   11e50:	str	r1, [r7]
   11e54:	str	r2, [r3]
   11e58:	str	r4, [r3, r1, lsl #2]
   11e5c:	ble	11ee0 <heap_remove@@Base+0xe0>
   11e60:	mov	r2, #1
   11e64:	b	11ea4 <heap_remove@@Base+0xa4>
   11e68:	ldr	r1, [r3, r5, lsl #2]
   11e6c:	ldr	r0, [r3, r4, lsl #2]
   11e70:	bl	11d14 <menor_que@@Base>
   11e74:	cmp	r0, #0
   11e78:	lsl	r2, r4, #1
   11e7c:	beq	11ee0 <heap_remove@@Base+0xe0>
   11e80:	ldr	r1, [r7]
   11e84:	add	r2, r2, #1
   11e88:	ldr	r3, [r7, #8]
   11e8c:	cmp	r2, r1
   11e90:	ldr	r0, [r3, r4, lsl #2]
   11e94:	ldr	ip, [r3, r5, lsl #2]
   11e98:	str	ip, [r3, r4, lsl #2]
   11e9c:	str	r0, [r3, r5, lsl #2]
   11ea0:	bge	11ee0 <heap_remove@@Base+0xe0>
   11ea4:	add	r0, r4, #1
   11ea8:	mov	r5, r4
   11eac:	lsl	r8, r0, #1
   11eb0:	mov	r4, r2
   11eb4:	cmp	r8, r1
   11eb8:	bge	11e68 <heap_remove@@Base+0x68>
   11ebc:	add	r1, r3, r0, lsl #3
   11ec0:	ldr	r0, [r3, r0, lsl #3]
   11ec4:	ldr	r1, [r1, #-4]
   11ec8:	bl	11d14 <menor_que@@Base>
   11ecc:	cmp	r0, #0
   11ed0:	ldr	r3, [r7, #8]
   11ed4:	movne	r4, r8
   11ed8:	b	11e68 <heap_remove@@Base+0x68>
   11edc:	mov	r6, #0
   11ee0:	mov	r0, r6
   11ee4:	ldrd	r4, [sp]
   11ee8:	ldrd	r6, [sp, #8]
   11eec:	ldr	r8, [sp, #16]
   11ef0:	add	sp, sp, #20
   11ef4:	pop	{pc}		; (ldr pc, [sp], #4)

00011ef8 <novo_str@@Base>:
   11ef8:	strd	r4, [sp, #-16]!
   11efc:	mov	r5, r0
   11f00:	mov	r0, #8
   11f04:	str	r6, [sp, #8]
   11f08:	str	lr, [sp, #12]
   11f0c:	bl	10cac <malloc@plt>
   11f10:	subs	r4, r0, #0
   11f14:	beq	11f50 <novo_str@@Base+0x58>
   11f18:	mov	r0, r5
   11f1c:	bl	10cd0 <strlen@plt>
   11f20:	add	r6, r0, #1
   11f24:	mov	r0, r6
   11f28:	bl	10cac <malloc@plt>
   11f2c:	cmp	r0, #0
   11f30:	mov	r3, r0
   11f34:	str	r0, [r4]
   11f38:	beq	11f64 <novo_str@@Base+0x6c>
   11f3c:	mov	r2, r6
   11f40:	mov	r1, r5
   11f44:	bl	10c7c <memcpy@plt>
   11f48:	mov	r3, #0
   11f4c:	str	r3, [r4, #4]
   11f50:	mov	r0, r4
   11f54:	ldrd	r4, [sp]
   11f58:	ldr	r6, [sp, #8]
   11f5c:	add	sp, sp, #12
   11f60:	pop	{pc}		; (ldr pc, [sp], #4)
   11f64:	mov	r0, r4
   11f68:	mov	r4, r3
   11f6c:	bl	10c70 <free@plt>
   11f70:	b	11f50 <novo_str@@Base+0x58>

00011f74 <lista_nova@@Base>:
   11f74:	mov	r0, #8
   11f78:	str	r4, [sp, #-8]!
   11f7c:	str	lr, [sp, #4]
   11f80:	bl	10cac <malloc@plt>
   11f84:	cmp	r0, #0
   11f88:	beq	11f98 <lista_nova@@Base+0x24>
   11f8c:	mov	r3, #0
   11f90:	str	r3, [r0]
   11f94:	str	r3, [r0, #4]
   11f98:	ldr	r4, [sp]
   11f9c:	add	sp, sp, #4
   11fa0:	pop	{pc}		; (ldr pc, [sp], #4)

00011fa4 <lista_apaga@@Base>:
   11fa4:	strd	r4, [sp, #-16]!
   11fa8:	subs	r5, r0, #0
   11fac:	str	r6, [sp, #8]
   11fb0:	str	lr, [sp, #12]
   11fb4:	bne	11fd0 <lista_apaga@@Base+0x2c>
   11fb8:	b	11ff4 <lista_apaga@@Base+0x50>
   11fbc:	ldm	r4, {r0, r3}
   11fc0:	str	r3, [r5]
   11fc4:	bl	10c70 <free@plt>
   11fc8:	mov	r0, r4
   11fcc:	bl	10c70 <free@plt>
   11fd0:	ldr	r4, [r5]
   11fd4:	cmp	r4, #0
   11fd8:	bne	11fbc <lista_apaga@@Base+0x18>
   11fdc:	mov	r0, r5
   11fe0:	ldrd	r4, [sp]
   11fe4:	ldr	r6, [sp, #8]
   11fe8:	ldr	lr, [sp, #12]
   11fec:	add	sp, sp, #16
   11ff0:	b	10c70 <free@plt>
   11ff4:	ldrd	r4, [sp]
   11ff8:	ldr	r6, [sp, #8]
   11ffc:	add	sp, sp, #12
   12000:	pop	{pc}		; (ldr pc, [sp], #4)

00012004 <lista_tamanho@@Base>:
   12004:	cmp	r0, #0
   12008:	ldrne	r0, [r0, #4]
   1200c:	mvneq	r0, #0
   12010:	bx	lr

00012014 <lista_elemento@@Base>:
   12014:	cmp	r0, #0
   12018:	lsrne	r3, r1, #31
   1201c:	moveq	r3, #1
   12020:	cmp	r3, #0
   12024:	bne	1205c <lista_elemento@@Base+0x48>
   12028:	ldr	r0, [r0]
   1202c:	cmp	r0, #0
   12030:	cmpne	r1, #0
   12034:	ble	1204c <lista_elemento@@Base+0x38>
   12038:	ldr	r0, [r0, #4]
   1203c:	add	r3, r3, #1
   12040:	cmp	r0, #0
   12044:	cmpne	r1, r3
   12048:	bgt	12038 <lista_elemento@@Base+0x24>
   1204c:	cmp	r0, #0
   12050:	beq	12060 <lista_elemento@@Base+0x4c>
   12054:	ldr	r0, [r0]
   12058:	bx	lr
   1205c:	mov	r0, #0
   12060:	bx	lr

00012064 <lista_atribui@@Base>:
   12064:	cmp	r0, #0
   12068:	lsrne	r3, r1, #31
   1206c:	moveq	r3, #1
   12070:	cmp	r3, #0
   12074:	bne	120ec <lista_atribui@@Base+0x88>
   12078:	strd	r4, [sp, #-16]!
   1207c:	ldr	r4, [r0]
   12080:	str	r6, [sp, #8]
   12084:	str	lr, [sp, #12]
   12088:	cmp	r4, #0
   1208c:	cmpne	r1, #0
   12090:	ble	120a8 <lista_atribui@@Base+0x44>
   12094:	ldr	r4, [r4, #4]
   12098:	add	r3, r3, #1
   1209c:	cmp	r4, #0
   120a0:	cmpne	r1, r3
   120a4:	bgt	12094 <lista_atribui@@Base+0x30>
   120a8:	cmp	r4, #0
   120ac:	beq	120f4 <lista_atribui@@Base+0x90>
   120b0:	mov	r0, r2
   120b4:	mov	r6, r2
   120b8:	mov	r5, r1
   120bc:	bl	10cd0 <strlen@plt>
   120c0:	add	r1, r0, #1
   120c4:	ldr	r0, [r4]
   120c8:	bl	10c88 <realloc@plt>
   120cc:	mov	r1, r6
   120d0:	str	r0, [r4]
   120d4:	bl	10c94 <strcpy@plt>
   120d8:	mov	r0, r5
   120dc:	ldrd	r4, [sp]
   120e0:	ldr	r6, [sp, #8]
   120e4:	add	sp, sp, #12
   120e8:	pop	{pc}		; (ldr pc, [sp], #4)
   120ec:	mvn	r0, #0
   120f0:	bx	lr
   120f4:	mvn	r0, #0
   120f8:	b	120dc <lista_atribui@@Base+0x78>

000120fc <lista_insere@@Base>:
   120fc:	cmn	r2, #1
   12100:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12104:	movge	r3, #0
   12108:	movlt	r3, #1
   1210c:	strd	r6, [sp, #8]
   12110:	cmp	r0, #0
   12114:	str	r8, [sp, #16]
   12118:	movne	r5, r3
   1211c:	moveq	r5, #1
   12120:	str	lr, [sp, #20]
   12124:	cmp	r5, #0
   12128:	bne	12220 <lista_insere@@Base+0x124>
   1212c:	cmp	r2, #0
   12130:	mov	r6, r0
   12134:	mov	r7, r2
   12138:	mov	r0, r1
   1213c:	beq	121c8 <lista_insere@@Base+0xcc>
   12140:	ldr	r3, [r6, #4]
   12144:	cmp	r3, r2
   12148:	ble	12220 <lista_insere@@Base+0x124>
   1214c:	ldr	r4, [r6]
   12150:	bl	11ef8 <novo_str@@Base>
   12154:	subs	r1, r0, #0
   12158:	beq	12220 <lista_insere@@Base+0x124>
   1215c:	ldr	r0, [r6, #4]
   12160:	cmn	r7, #1
   12164:	add	r3, r0, #1
   12168:	str	r3, [r6, #4]
   1216c:	beq	121f4 <lista_insere@@Base+0xf8>
   12170:	cmp	r7, #1
   12174:	beq	121a4 <lista_insere@@Base+0xa8>
   12178:	cmp	r4, #0
   1217c:	beq	12228 <lista_insere@@Base+0x12c>
   12180:	mov	r3, r5
   12184:	sub	r2, r7, #1
   12188:	b	12194 <lista_insere@@Base+0x98>
   1218c:	cmp	r4, #0
   12190:	beq	12228 <lista_insere@@Base+0x12c>
   12194:	add	r3, r3, #1
   12198:	ldr	r4, [r4, #4]
   1219c:	cmp	r3, r2
   121a0:	bne	1218c <lista_insere@@Base+0x90>
   121a4:	ldr	r3, [r4, #4]
   121a8:	mov	r0, r7
   121ac:	str	r3, [r1, #4]
   121b0:	str	r1, [r4, #4]
   121b4:	ldrd	r4, [sp]
   121b8:	ldrd	r6, [sp, #8]
   121bc:	ldr	r8, [sp, #16]
   121c0:	add	sp, sp, #20
   121c4:	pop	{pc}		; (ldr pc, [sp], #4)
   121c8:	ldr	r4, [r6]
   121cc:	bl	11ef8 <novo_str@@Base>
   121d0:	subs	r2, r0, #0
   121d4:	beq	12220 <lista_insere@@Base+0x124>
   121d8:	ldr	r3, [r6, #4]
   121dc:	mov	r0, r7
   121e0:	add	r3, r3, #1
   121e4:	str	r3, [r6, #4]
   121e8:	str	r4, [r2, #4]
   121ec:	str	r2, [r6]
   121f0:	b	121b4 <lista_insere@@Base+0xb8>
   121f4:	cmp	r4, #0
   121f8:	streq	r1, [r6]
   121fc:	beq	121b4 <lista_insere@@Base+0xb8>
   12200:	ldr	r3, [r4, #4]
   12204:	cmp	r3, #0
   12208:	beq	121b0 <lista_insere@@Base+0xb4>
   1220c:	mov	r4, r3
   12210:	ldr	r3, [r4, #4]
   12214:	cmp	r3, #0
   12218:	bne	1220c <lista_insere@@Base+0x110>
   1221c:	b	121b0 <lista_insere@@Base+0xb4>
   12220:	mvn	r0, #0
   12224:	b	121b4 <lista_insere@@Base+0xb8>
   12228:	mov	r3, #0
   1222c:	ldr	r3, [r3, #4]
   12230:	udf	#0

00012234 <lista_remove@@Base>:
   12234:	cmp	r0, #0
   12238:	lsrne	r3, r1, #31
   1223c:	moveq	r3, #1
   12240:	cmp	r3, #0
   12244:	bne	12300 <lista_remove@@Base+0xcc>
   12248:	ldr	r2, [r0, #4]
   1224c:	cmp	r2, r1
   12250:	ble	12300 <lista_remove@@Base+0xcc>
   12254:	strd	r4, [sp, #-16]!
   12258:	sub	r2, r2, #1
   1225c:	cmp	r1, #0
   12260:	str	r6, [sp, #8]
   12264:	mov	r5, r1
   12268:	ldr	r6, [r0]
   1226c:	str	lr, [sp, #12]
   12270:	str	r2, [r0, #4]
   12274:	ldr	r4, [r6, #4]
   12278:	beq	122d8 <lista_remove@@Base+0xa4>
   1227c:	cmp	r4, #0
   12280:	moveq	r2, r4
   12284:	moveq	r4, r6
   12288:	bne	122a0 <lista_remove@@Base+0x6c>
   1228c:	b	122b0 <lista_remove@@Base+0x7c>
   12290:	cmp	r2, #0
   12294:	beq	122b0 <lista_remove@@Base+0x7c>
   12298:	mov	r6, r4
   1229c:	mov	r4, r2
   122a0:	add	r3, r3, #1
   122a4:	ldr	r2, [r4, #4]
   122a8:	cmp	r5, r3
   122ac:	bne	12290 <lista_remove@@Base+0x5c>
   122b0:	ldr	r0, [r4]
   122b4:	str	r2, [r6, #4]
   122b8:	bl	10c70 <free@plt>
   122bc:	mov	r0, r4
   122c0:	bl	10c70 <free@plt>
   122c4:	ldrd	r4, [sp]
   122c8:	mov	r0, #0
   122cc:	ldr	r6, [sp, #8]
   122d0:	add	sp, sp, #12
   122d4:	pop	{pc}		; (ldr pc, [sp], #4)
   122d8:	str	r4, [r0]
   122dc:	ldr	r0, [r6]
   122e0:	bl	10c70 <free@plt>
   122e4:	mov	r0, r6
   122e8:	bl	10c70 <free@plt>
   122ec:	mov	r0, r5
   122f0:	ldrd	r4, [sp]
   122f4:	ldr	r6, [sp, #8]
   122f8:	add	sp, sp, #12
   122fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12300:	mvn	r0, #0
   12304:	bx	lr

00012308 <lista_pesquisa@@Base>:
   12308:	cmp	r0, #0
   1230c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12310:	strd	r6, [sp, #8]
   12314:	str	r8, [sp, #16]
   12318:	str	lr, [sp, #20]
   1231c:	beq	12390 <lista_pesquisa@@Base+0x88>
   12320:	ldr	r4, [r0]
   12324:	cmp	r4, #0
   12328:	beq	12390 <lista_pesquisa@@Base+0x88>
   1232c:	mov	r7, r2
   12330:	mov	r6, r1
   12334:	mvn	r8, #0
   12338:	mov	r5, #0
   1233c:	mov	r1, r6
   12340:	ldr	r0, [r4]
   12344:	bl	10c34 <strcmp@plt>
   12348:	cmp	r0, #0
   1234c:	bne	12360 <lista_pesquisa@@Base+0x58>
   12350:	cmp	r7, #0
   12354:	beq	12388 <lista_pesquisa@@Base+0x80>
   12358:	cmn	r7, #1
   1235c:	moveq	r8, r5
   12360:	ldr	r4, [r4, #4]
   12364:	add	r5, r5, #1
   12368:	cmp	r4, #0
   1236c:	bne	1233c <lista_pesquisa@@Base+0x34>
   12370:	mov	r0, r8
   12374:	ldrd	r4, [sp]
   12378:	ldrd	r6, [sp, #8]
   1237c:	ldr	r8, [sp, #16]
   12380:	add	sp, sp, #20
   12384:	pop	{pc}		; (ldr pc, [sp], #4)
   12388:	mov	r8, r5
   1238c:	b	12370 <lista_pesquisa@@Base+0x68>
   12390:	mvn	r8, #0
   12394:	b	12370 <lista_pesquisa@@Base+0x68>

00012398 <lista_ordena@@Base>:
   12398:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1239c:	strd	r6, [sp, #8]
   123a0:	str	sl, [sp, #24]
   123a4:	subs	sl, r0, #0
   123a8:	strd	r8, [sp, #16]
   123ac:	str	lr, [sp, #28]
   123b0:	beq	12464 <lista_ordena@@Base+0xcc>
   123b4:	ldr	r6, [sl]
   123b8:	ldr	r7, [r6, #4]
   123bc:	cmp	r7, #0
   123c0:	beq	123f0 <lista_ordena@@Base+0x58>
   123c4:	ldr	r4, [r6]
   123c8:	mov	r0, r4
   123cc:	ldr	r5, [r7]
   123d0:	mov	r1, r5
   123d4:	bl	10c34 <strcmp@plt>
   123d8:	cmp	r0, #0
   123dc:	bgt	1240c <lista_ordena@@Base+0x74>
   123e0:	ldr	r6, [r6, #4]
   123e4:	ldr	r7, [r6, #4]
   123e8:	cmp	r7, #0
   123ec:	bne	123c4 <lista_ordena@@Base+0x2c>
   123f0:	mov	r0, #0
   123f4:	ldrd	r4, [sp]
   123f8:	ldrd	r6, [sp, #8]
   123fc:	ldrd	r8, [sp, #16]
   12400:	ldr	sl, [sp, #24]
   12404:	add	sp, sp, #28
   12408:	pop	{pc}		; (ldr pc, [sp], #4)
   1240c:	ldr	r3, [r7, #4]
   12410:	ldr	r9, [sl]
   12414:	cmp	r3, r6
   12418:	str	r3, [r6, #4]
   1241c:	beq	1245c <lista_ordena@@Base+0xc4>
   12420:	mov	r8, r9
   12424:	mov	r4, r9
   12428:	b	12434 <lista_ordena@@Base+0x9c>
   1242c:	mov	r8, r4
   12430:	ldr	r4, [r4, #4]
   12434:	mov	r1, r5
   12438:	ldr	r0, [r4]
   1243c:	bl	10c34 <strcmp@plt>
   12440:	cmp	r0, #0
   12444:	ble	1242c <lista_ordena@@Base+0x94>
   12448:	cmp	r9, r4
   1244c:	str	r4, [r7, #4]
   12450:	streq	r7, [sl]
   12454:	strne	r7, [r8, #4]
   12458:	b	123b8 <lista_ordena@@Base+0x20>
   1245c:	mov	r7, r6
   12460:	b	123c8 <lista_ordena@@Base+0x30>
   12464:	mvn	r0, #0
   12468:	b	123f4 <lista_ordena@@Base+0x5c>

0001246c <lista_compara@@Base>:
   1246c:	clz	r3, r1
   12470:	cmp	r0, #0
   12474:	lsr	r3, r3, #5
   12478:	moveq	r3, #1
   1247c:	cmp	r3, #0
   12480:	bne	124f4 <lista_compara@@Base+0x88>
   12484:	ldr	ip, [r0, #4]
   12488:	ldr	r2, [r1, #4]
   1248c:	cmp	ip, r2
   12490:	bne	124ec <lista_compara@@Base+0x80>
   12494:	strd	r4, [sp, #-16]!
   12498:	ldr	r4, [r0]
   1249c:	ldr	r5, [r1]
   124a0:	str	r6, [sp, #8]
   124a4:	str	lr, [sp, #12]
   124a8:	cmp	r4, #0
   124ac:	bne	124c4 <lista_compara@@Base+0x58>
   124b0:	b	124fc <lista_compara@@Base+0x90>
   124b4:	ldr	r4, [r4, #4]
   124b8:	ldr	r5, [r5, #4]
   124bc:	cmp	r4, #0
   124c0:	beq	124fc <lista_compara@@Base+0x90>
   124c4:	ldr	r0, [r4]
   124c8:	ldr	r1, [r5]
   124cc:	bl	10c34 <strcmp@plt>
   124d0:	cmp	r0, #0
   124d4:	beq	124b4 <lista_compara@@Base+0x48>
   124d8:	ldrd	r4, [sp]
   124dc:	mov	r0, #0
   124e0:	ldr	r6, [sp, #8]
   124e4:	add	sp, sp, #12
   124e8:	pop	{pc}		; (ldr pc, [sp], #4)
   124ec:	mov	r0, r3
   124f0:	bx	lr
   124f4:	mvn	r0, #0
   124f8:	bx	lr
   124fc:	cmp	r5, #0
   12500:	ldrd	r4, [sp]
   12504:	mvnne	r0, #0
   12508:	moveq	r0, #1
   1250c:	ldr	r6, [sp, #8]
   12510:	add	sp, sp, #12
   12514:	pop	{pc}		; (ldr pc, [sp], #4)

00012518 <lista_inverte@@Base>:
   12518:	strd	r4, [sp, #-16]!
   1251c:	subs	r4, r0, #0
   12520:	str	r6, [sp, #8]
   12524:	str	lr, [sp, #12]
   12528:	beq	12574 <lista_inverte@@Base+0x5c>
   1252c:	bl	11f74 <lista_nova@@Base>
   12530:	subs	r5, r0, #0
   12534:	beq	12574 <lista_inverte@@Base+0x5c>
   12538:	ldr	r4, [r4]
   1253c:	cmp	r4, #0
   12540:	beq	12560 <lista_inverte@@Base+0x48>
   12544:	mov	r2, #0
   12548:	mov	r0, r5
   1254c:	ldr	r1, [r4]
   12550:	bl	120fc <lista_insere@@Base>
   12554:	ldr	r4, [r4, #4]
   12558:	cmp	r4, #0
   1255c:	bne	12544 <lista_inverte@@Base+0x2c>
   12560:	mov	r0, r5
   12564:	ldrd	r4, [sp]
   12568:	ldr	r6, [sp, #8]
   1256c:	add	sp, sp, #12
   12570:	pop	{pc}		; (ldr pc, [sp], #4)
   12574:	mov	r5, #0
   12578:	b	12560 <lista_inverte@@Base+0x48>

0001257c <__libc_csu_init@@Base>:
   1257c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12580:	mov	r7, r0
   12584:	ldr	r6, [pc, #72]	; 125d4 <__libc_csu_init@@Base+0x58>
   12588:	ldr	r5, [pc, #72]	; 125d8 <__libc_csu_init@@Base+0x5c>
   1258c:	add	r6, pc, r6
   12590:	add	r5, pc, r5
   12594:	sub	r6, r6, r5
   12598:	mov	r8, r1
   1259c:	mov	r9, r2
   125a0:	bl	10c08 <calloc@plt-0x20>
   125a4:	asrs	r6, r6, #2
   125a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   125ac:	mov	r4, #0
   125b0:	add	r4, r4, #1
   125b4:	ldr	r3, [r5], #4
   125b8:	mov	r2, r9
   125bc:	mov	r1, r8
   125c0:	mov	r0, r7
   125c4:	blx	r3
   125c8:	cmp	r6, r4
   125cc:	bne	125b0 <__libc_csu_init@@Base+0x34>
   125d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   125d4:	andeq	r0, r1, r0, lsl #19
   125d8:	andeq	r0, r1, r8, ror r9

000125dc <__libc_csu_fini@@Base>:
   125dc:	bx	lr

Disassembly of section .fini:

000125e0 <.fini>:
   125e0:	push	{r3, lr}
   125e4:	pop	{r3, pc}
