
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

00010818 <.init>:
   10818:	push	{r3, lr}
   1081c:	bl	10a04 <_start@@Base+0x3c>
   10820:	pop	{r3, pc}

Disassembly of section .plt:

00010824 <printf@plt-0x14>:
   10824:	push	{lr}		; (str lr, [sp, #-4]!)
   10828:	ldr	lr, [pc, #4]	; 10834 <printf@plt-0x4>
   1082c:	add	lr, pc, lr
   10830:	ldr	pc, [lr, #8]!
   10834:	andeq	r2, r1, ip, asr #15

00010838 <printf@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #73728	; 0x12000
   10840:	ldr	pc, [ip, #1996]!	; 0x7cc

00010844 <fopen@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #73728	; 0x12000
   1084c:	ldr	pc, [ip, #1988]!	; 0x7c4

00010850 <free@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #73728	; 0x12000
   10858:	ldr	pc, [ip, #1980]!	; 0x7bc

0001085c <ftell@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #73728	; 0x12000
   10864:	ldr	pc, [ip, #1972]!	; 0x7b4

00010868 <rewind@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #73728	; 0x12000
   10870:	ldr	pc, [ip, #1964]!	; 0x7ac

00010874 <fwrite@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #73728	; 0x12000
   1087c:	ldr	pc, [ip, #1956]!	; 0x7a4

00010880 <fread@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #73728	; 0x12000
   10888:	ldr	pc, [ip, #1948]!	; 0x79c

0001088c <puts@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #73728	; 0x12000
   10894:	ldr	pc, [ip, #1940]!	; 0x794

00010898 <malloc@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #73728	; 0x12000
   108a0:	ldr	pc, [ip, #1932]!	; 0x78c

000108a4 <__libc_start_main@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #73728	; 0x12000
   108ac:	ldr	pc, [ip, #1924]!	; 0x784

000108b0 <__gmon_start__@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #73728	; 0x12000
   108b8:	ldr	pc, [ip, #1916]!	; 0x77c

000108bc <exit@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #73728	; 0x12000
   108c4:	ldr	pc, [ip, #1908]!	; 0x774

000108c8 <fprintf@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #73728	; 0x12000
   108d0:	ldr	pc, [ip, #1900]!	; 0x76c

000108d4 <putchar@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #73728	; 0x12000
   108dc:	ldr	pc, [ip, #1892]!	; 0x764

000108e0 <fclose@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #73728	; 0x12000
   108e8:	ldr	pc, [ip, #1884]!	; 0x75c

000108ec <fseek@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #73728	; 0x12000
   108f4:	ldr	pc, [ip, #1876]!	; 0x754

000108f8 <abort@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #73728	; 0x12000
   10900:	ldr	pc, [ip, #1868]!	; 0x74c

00010904 <__assert_fail@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #73728	; 0x12000
   1090c:	ldr	pc, [ip, #1860]!	; 0x744

Disassembly of section .text:

00010910 <main@@Base-0x30>:
   10910:	ldr	r3, [pc, #28]	; 10934 <__assert_fail@plt+0x30>
   10914:	ldr	r1, [pc, #28]	; 10938 <__assert_fail@plt+0x34>
   10918:	ldr	r0, [pc, #28]	; 1093c <__assert_fail@plt+0x38>
   1091c:	push	{r4, lr}
   10920:	add	r3, pc, r3
   10924:	mov	r2, #147	; 0x93
   10928:	add	r1, pc, r1
   1092c:	add	r0, pc, r0
   10930:	bl	10904 <__assert_fail@plt>
   10934:	andeq	r1, r0, r4, ror #8
   10938:	andeq	r1, r0, ip, ror #11
   1093c:	andeq	r1, r0, r0, ror #12

00010940 <main@@Base>:
   10940:	ldr	r3, [pc, #108]	; 109b4 <main@@Base+0x74>
   10944:	cmp	r0, #2
   10948:	add	r3, pc, r3
   1094c:	bne	10958 <main@@Base+0x18>
   10950:	ldr	r0, [r1, #4]
   10954:	b	11b48 <load_and_dump_schema@@Base>
   10958:	ldr	r0, [pc, #88]	; 109b8 <main@@Base+0x78>
   1095c:	push	{r4, lr}
   10960:	mov	r2, #28
   10964:	ldr	r4, [r3, r0]
   10968:	ldr	r0, [pc, #76]	; 109bc <main@@Base+0x7c>
   1096c:	mov	r1, #1
   10970:	ldr	r3, [r4]
   10974:	add	r0, pc, r0
   10978:	bl	10874 <fwrite@plt>
   1097c:	ldr	r0, [pc, #60]	; 109c0 <main@@Base+0x80>
   10980:	ldr	r3, [r4]
   10984:	mov	r2, #74	; 0x4a
   10988:	mov	r1, #1
   1098c:	add	r0, pc, r0
   10990:	bl	10874 <fwrite@plt>
   10994:	ldr	r0, [pc, #40]	; 109c4 <main@@Base+0x84>
   10998:	ldr	r3, [r4]
   1099c:	mov	r2, #180	; 0xb4
   109a0:	mov	r1, #1
   109a4:	add	r0, pc, r0
   109a8:	bl	10874 <fwrite@plt>
   109ac:	mvn	r0, #0
   109b0:	bl	108bc <exit@plt>
   109b4:			; <UNDEFINED> instruction: 0x000126b0
   109b8:	andeq	r0, r0, r4, asr r0
   109bc:	andeq	r1, r0, r0, asr r9
   109c0:	andeq	r1, r0, r8, asr r9
   109c4:	andeq	r1, r0, ip, lsl #19

000109c8 <_start@@Base>:
   109c8:	mov	fp, #0
   109cc:	mov	lr, #0
   109d0:	pop	{r1}		; (ldr r1, [sp], #4)
   109d4:	mov	r2, sp
   109d8:	push	{r2}		; (str r2, [sp, #-4]!)
   109dc:	push	{r0}		; (str r0, [sp, #-4]!)
   109e0:	ldr	ip, [pc, #16]	; 109f8 <_start@@Base+0x30>
   109e4:	push	{ip}		; (str ip, [sp, #-4]!)
   109e8:	ldr	r0, [pc, #12]	; 109fc <_start@@Base+0x34>
   109ec:	ldr	r3, [pc, #12]	; 10a00 <_start@@Base+0x38>
   109f0:	bl	108a4 <__libc_start_main@plt>
   109f4:	bl	108f8 <abort@plt>
   109f8:	andeq	r1, r1, ip, ror sp
   109fc:	andeq	r0, r1, r0, asr #18
   10a00:	andeq	r1, r1, ip, lsl sp
   10a04:	ldr	r3, [pc, #20]	; 10a20 <_start@@Base+0x58>
   10a08:	ldr	r2, [pc, #20]	; 10a24 <_start@@Base+0x5c>
   10a0c:	add	r3, pc, r3
   10a10:	ldr	r2, [r3, r2]
   10a14:	cmp	r2, #0
   10a18:	bxeq	lr
   10a1c:	b	108b0 <__gmon_start__@plt>
   10a20:	andeq	r2, r1, ip, ror #11
   10a24:	andeq	r0, r0, r8, asr r0
   10a28:	ldr	r3, [pc, #28]	; 10a4c <_start@@Base+0x84>
   10a2c:	ldr	r0, [pc, #28]	; 10a50 <_start@@Base+0x88>
   10a30:	sub	r3, r3, r0
   10a34:	cmp	r3, #6
   10a38:	bxls	lr
   10a3c:	ldr	r3, [pc, #16]	; 10a54 <_start@@Base+0x8c>
   10a40:	cmp	r3, #0
   10a44:	bxeq	lr
   10a48:	bx	r3
   10a4c:	andeq	r3, r2, r7, rrx
   10a50:	andeq	r3, r2, r4, rrx
   10a54:	andeq	r0, r0, r0
   10a58:	ldr	r1, [pc, #36]	; 10a84 <_start@@Base+0xbc>
   10a5c:	ldr	r0, [pc, #36]	; 10a88 <_start@@Base+0xc0>
   10a60:	sub	r1, r1, r0
   10a64:	asr	r1, r1, #2
   10a68:	add	r1, r1, r1, lsr #31
   10a6c:	asrs	r1, r1, #1
   10a70:	bxeq	lr
   10a74:	ldr	r3, [pc, #16]	; 10a8c <_start@@Base+0xc4>
   10a78:	cmp	r3, #0
   10a7c:	bxeq	lr
   10a80:	bx	r3
   10a84:	andeq	r3, r2, r4, rrx
   10a88:	andeq	r3, r2, r4, rrx
   10a8c:	andeq	r0, r0, r0
   10a90:	push	{r4, lr}
   10a94:	ldr	r4, [pc, #24]	; 10ab4 <_start@@Base+0xec>
   10a98:	ldrb	r3, [r4]
   10a9c:	cmp	r3, #0
   10aa0:	popne	{r4, pc}
   10aa4:	bl	10a28 <_start@@Base+0x60>
   10aa8:	mov	r3, #1
   10aac:	strb	r3, [r4]
   10ab0:	pop	{r4, pc}
   10ab4:	andeq	r3, r2, r4, rrx
   10ab8:	ldr	r0, [pc, #40]	; 10ae8 <_start@@Base+0x120>
   10abc:	ldr	r3, [r0]
   10ac0:	cmp	r3, #0
   10ac4:	bne	10acc <_start@@Base+0x104>
   10ac8:	b	10a58 <_start@@Base+0x90>
   10acc:	ldr	r3, [pc, #24]	; 10aec <_start@@Base+0x124>
   10ad0:	cmp	r3, #0
   10ad4:	beq	10ac8 <_start@@Base+0x100>
   10ad8:	push	{r4, lr}
   10adc:	blx	r3
   10ae0:	pop	{r4, lr}
   10ae4:	b	10a58 <_start@@Base+0x90>
   10ae8:	andeq	r2, r2, r4, lsl pc
   10aec:	andeq	r0, r0, r0

00010af0 <print_type@@Base>:
   10af0:	push	{r4, lr}
   10af4:	mov	r4, r0
   10af8:	mov	r0, #123	; 0x7b
   10afc:	bl	108d4 <putchar@plt>
   10b00:	cmp	r4, #0
   10b04:	beq	10e58 <print_type@@Base+0x368>
   10b08:	ldr	r3, [r4]
   10b0c:	sub	r3, r4, r3
   10b10:	ldrh	r2, [r3]
   10b14:	cmp	r2, #5
   10b18:	bls	10c14 <print_type@@Base+0x124>
   10b1c:	ldrh	r1, [r3, #4]
   10b20:	cmp	r1, #0
   10b24:	moveq	r1, #1
   10b28:	bne	10c20 <print_type@@Base+0x130>
   10b2c:	cmp	r2, #7
   10b30:	bls	10c14 <print_type@@Base+0x124>
   10b34:	ldrh	r0, [r3, #6]
   10b38:	cmp	r0, #0
   10b3c:	beq	10be8 <print_type@@Base+0xf8>
   10b40:	cmp	r1, #0
   10b44:	beq	10ba8 <print_type@@Base+0xb8>
   10b48:	ldrh	r3, [r3, #4]
   10b4c:	cmp	r3, #0
   10b50:	beq	10e98 <print_type@@Base+0x3a8>
   10b54:	ldrsb	r3, [r4, r3]
   10b58:	cmp	r3, #16
   10b5c:	addls	pc, pc, r3, lsl #2
   10b60:	b	10e40 <print_type@@Base+0x350>
   10b64:	b	10e7c <print_type@@Base+0x38c>
   10b68:	b	10d4c <print_type@@Base+0x25c>
   10b6c:	b	10ca4 <print_type@@Base+0x1b4>
   10b70:	b	10cb0 <print_type@@Base+0x1c0>
   10b74:	b	10cbc <print_type@@Base+0x1cc>
   10b78:	b	10cc8 <print_type@@Base+0x1d8>
   10b7c:	b	10cd4 <print_type@@Base+0x1e4>
   10b80:	b	10ce0 <print_type@@Base+0x1f0>
   10b84:	b	10cec <print_type@@Base+0x1fc>
   10b88:	b	10cf8 <print_type@@Base+0x208>
   10b8c:	b	10d04 <print_type@@Base+0x214>
   10b90:	b	10d10 <print_type@@Base+0x220>
   10b94:	b	10d1c <print_type@@Base+0x22c>
   10b98:	b	10d28 <print_type@@Base+0x238>
   10b9c:	b	10d34 <print_type@@Base+0x244>
   10ba0:	b	10d40 <print_type@@Base+0x250>
   10ba4:	b	10c98 <print_type@@Base+0x1a8>
   10ba8:	mov	r0, #44	; 0x2c
   10bac:	bl	108d4 <putchar@plt>
   10bb0:	ldr	r3, [r4]
   10bb4:	ldr	r1, [pc, #744]	; 10ea4 <print_type@@Base+0x3b4>
   10bb8:	sub	r3, r4, r3
   10bbc:	add	r1, pc, r1
   10bc0:	ldrh	r2, [r3]
   10bc4:	cmp	r2, #5
   10bc8:	bhi	10b48 <print_type@@Base+0x58>
   10bcc:	ldr	r0, [pc, #724]	; 10ea8 <print_type@@Base+0x3b8>
   10bd0:	add	r0, pc, r0
   10bd4:	bl	10838 <printf@plt>
   10bd8:	ldr	r3, [r4]
   10bdc:	mov	r1, #0
   10be0:	sub	r3, r4, r3
   10be4:	ldrh	r2, [r3]
   10be8:	cmp	r2, #9
   10bec:	bls	10c14 <print_type@@Base+0x124>
   10bf0:	ldrh	r3, [r3, #8]
   10bf4:	cmp	r3, #0
   10bf8:	beq	10c14 <print_type@@Base+0x124>
   10bfc:	cmp	r1, #0
   10c00:	beq	10c74 <print_type@@Base+0x184>
   10c04:	ldr	r1, [r4, r3]
   10c08:	ldr	r0, [pc, #668]	; 10eac <print_type@@Base+0x3bc>
   10c0c:	add	r0, pc, r0
   10c10:	bl	10838 <printf@plt>
   10c14:	mov	r0, #125	; 0x7d
   10c18:	pop	{r4, lr}
   10c1c:	b	108d4 <putchar@plt>
   10c20:	ldrsb	r3, [r4, r1]
   10c24:	cmp	r3, #16
   10c28:	addls	pc, pc, r3, lsl #2
   10c2c:	b	10e4c <print_type@@Base+0x35c>
   10c30:	b	10e1c <print_type@@Base+0x32c>
   10c34:	b	10d58 <print_type@@Base+0x268>
   10c38:	b	10d80 <print_type@@Base+0x290>
   10c3c:	b	10d8c <print_type@@Base+0x29c>
   10c40:	b	10d98 <print_type@@Base+0x2a8>
   10c44:	b	10da4 <print_type@@Base+0x2b4>
   10c48:	b	10db0 <print_type@@Base+0x2c0>
   10c4c:	b	10dbc <print_type@@Base+0x2cc>
   10c50:	b	10dc8 <print_type@@Base+0x2d8>
   10c54:	b	10dd4 <print_type@@Base+0x2e4>
   10c58:	b	10de0 <print_type@@Base+0x2f0>
   10c5c:	b	10dec <print_type@@Base+0x2fc>
   10c60:	b	10df8 <print_type@@Base+0x308>
   10c64:	b	10e04 <print_type@@Base+0x314>
   10c68:	b	10e28 <print_type@@Base+0x338>
   10c6c:	b	10e34 <print_type@@Base+0x344>
   10c70:	b	10e10 <print_type@@Base+0x320>
   10c74:	mov	r0, #44	; 0x2c
   10c78:	bl	108d4 <putchar@plt>
   10c7c:	ldr	r3, [r4]
   10c80:	sub	r3, r4, r3
   10c84:	ldrh	r2, [r3]
   10c88:	cmp	r2, #9
   10c8c:	bhi	10e88 <print_type@@Base+0x398>
   10c90:	mvn	r1, #0
   10c94:	b	10c08 <print_type@@Base+0x118>
   10c98:	ldr	r1, [pc, #528]	; 10eb0 <print_type@@Base+0x3c0>
   10c9c:	add	r1, pc, r1
   10ca0:	b	10bcc <print_type@@Base+0xdc>
   10ca4:	ldr	r1, [pc, #520]	; 10eb4 <print_type@@Base+0x3c4>
   10ca8:	add	r1, pc, r1
   10cac:	b	10bcc <print_type@@Base+0xdc>
   10cb0:	ldr	r1, [pc, #512]	; 10eb8 <print_type@@Base+0x3c8>
   10cb4:	add	r1, pc, r1
   10cb8:	b	10bcc <print_type@@Base+0xdc>
   10cbc:	ldr	r1, [pc, #504]	; 10ebc <print_type@@Base+0x3cc>
   10cc0:	add	r1, pc, r1
   10cc4:	b	10bcc <print_type@@Base+0xdc>
   10cc8:	ldr	r1, [pc, #496]	; 10ec0 <print_type@@Base+0x3d0>
   10ccc:	add	r1, pc, r1
   10cd0:	b	10bcc <print_type@@Base+0xdc>
   10cd4:	ldr	r1, [pc, #488]	; 10ec4 <print_type@@Base+0x3d4>
   10cd8:	add	r1, pc, r1
   10cdc:	b	10bcc <print_type@@Base+0xdc>
   10ce0:	ldr	r1, [pc, #480]	; 10ec8 <print_type@@Base+0x3d8>
   10ce4:	add	r1, pc, r1
   10ce8:	b	10bcc <print_type@@Base+0xdc>
   10cec:	ldr	r1, [pc, #472]	; 10ecc <print_type@@Base+0x3dc>
   10cf0:	add	r1, pc, r1
   10cf4:	b	10bcc <print_type@@Base+0xdc>
   10cf8:	ldr	r1, [pc, #464]	; 10ed0 <print_type@@Base+0x3e0>
   10cfc:	add	r1, pc, r1
   10d00:	b	10bcc <print_type@@Base+0xdc>
   10d04:	ldr	r1, [pc, #456]	; 10ed4 <print_type@@Base+0x3e4>
   10d08:	add	r1, pc, r1
   10d0c:	b	10bcc <print_type@@Base+0xdc>
   10d10:	ldr	r1, [pc, #448]	; 10ed8 <print_type@@Base+0x3e8>
   10d14:	add	r1, pc, r1
   10d18:	b	10bcc <print_type@@Base+0xdc>
   10d1c:	ldr	r1, [pc, #440]	; 10edc <print_type@@Base+0x3ec>
   10d20:	add	r1, pc, r1
   10d24:	b	10bcc <print_type@@Base+0xdc>
   10d28:	ldr	r1, [pc, #432]	; 10ee0 <print_type@@Base+0x3f0>
   10d2c:	add	r1, pc, r1
   10d30:	b	10bcc <print_type@@Base+0xdc>
   10d34:	ldr	r1, [pc, #424]	; 10ee4 <print_type@@Base+0x3f4>
   10d38:	add	r1, pc, r1
   10d3c:	b	10bcc <print_type@@Base+0xdc>
   10d40:	ldr	r1, [pc, #416]	; 10ee8 <print_type@@Base+0x3f8>
   10d44:	add	r1, pc, r1
   10d48:	b	10bcc <print_type@@Base+0xdc>
   10d4c:	ldr	r1, [pc, #408]	; 10eec <print_type@@Base+0x3fc>
   10d50:	add	r1, pc, r1
   10d54:	b	10bcc <print_type@@Base+0xdc>
   10d58:	ldr	r1, [pc, #400]	; 10ef0 <print_type@@Base+0x400>
   10d5c:	add	r1, pc, r1
   10d60:	ldr	r0, [pc, #396]	; 10ef4 <print_type@@Base+0x404>
   10d64:	add	r0, pc, r0
   10d68:	bl	10838 <printf@plt>
   10d6c:	ldr	r3, [r4]
   10d70:	mov	r1, #0
   10d74:	sub	r3, r4, r3
   10d78:	ldrh	r2, [r3]
   10d7c:	b	10b2c <print_type@@Base+0x3c>
   10d80:	ldr	r1, [pc, #368]	; 10ef8 <print_type@@Base+0x408>
   10d84:	add	r1, pc, r1
   10d88:	b	10d60 <print_type@@Base+0x270>
   10d8c:	ldr	r1, [pc, #360]	; 10efc <print_type@@Base+0x40c>
   10d90:	add	r1, pc, r1
   10d94:	b	10d60 <print_type@@Base+0x270>
   10d98:	ldr	r1, [pc, #352]	; 10f00 <print_type@@Base+0x410>
   10d9c:	add	r1, pc, r1
   10da0:	b	10d60 <print_type@@Base+0x270>
   10da4:	ldr	r1, [pc, #344]	; 10f04 <print_type@@Base+0x414>
   10da8:	add	r1, pc, r1
   10dac:	b	10d60 <print_type@@Base+0x270>
   10db0:	ldr	r1, [pc, #336]	; 10f08 <print_type@@Base+0x418>
   10db4:	add	r1, pc, r1
   10db8:	b	10d60 <print_type@@Base+0x270>
   10dbc:	ldr	r1, [pc, #328]	; 10f0c <print_type@@Base+0x41c>
   10dc0:	add	r1, pc, r1
   10dc4:	b	10d60 <print_type@@Base+0x270>
   10dc8:	ldr	r1, [pc, #320]	; 10f10 <print_type@@Base+0x420>
   10dcc:	add	r1, pc, r1
   10dd0:	b	10d60 <print_type@@Base+0x270>
   10dd4:	ldr	r1, [pc, #312]	; 10f14 <print_type@@Base+0x424>
   10dd8:	add	r1, pc, r1
   10ddc:	b	10d60 <print_type@@Base+0x270>
   10de0:	ldr	r1, [pc, #304]	; 10f18 <print_type@@Base+0x428>
   10de4:	add	r1, pc, r1
   10de8:	b	10d60 <print_type@@Base+0x270>
   10dec:	ldr	r1, [pc, #296]	; 10f1c <print_type@@Base+0x42c>
   10df0:	add	r1, pc, r1
   10df4:	b	10d60 <print_type@@Base+0x270>
   10df8:	ldr	r1, [pc, #288]	; 10f20 <print_type@@Base+0x430>
   10dfc:	add	r1, pc, r1
   10e00:	b	10d60 <print_type@@Base+0x270>
   10e04:	ldr	r1, [pc, #280]	; 10f24 <print_type@@Base+0x434>
   10e08:	add	r1, pc, r1
   10e0c:	b	10d60 <print_type@@Base+0x270>
   10e10:	ldr	r1, [pc, #272]	; 10f28 <print_type@@Base+0x438>
   10e14:	add	r1, pc, r1
   10e18:	b	10d60 <print_type@@Base+0x270>
   10e1c:	ldr	r1, [pc, #264]	; 10f2c <print_type@@Base+0x43c>
   10e20:	add	r1, pc, r1
   10e24:	b	10d60 <print_type@@Base+0x270>
   10e28:	ldr	r1, [pc, #256]	; 10f30 <print_type@@Base+0x440>
   10e2c:	add	r1, pc, r1
   10e30:	b	10d60 <print_type@@Base+0x270>
   10e34:	ldr	r1, [pc, #248]	; 10f34 <print_type@@Base+0x444>
   10e38:	add	r1, pc, r1
   10e3c:	b	10d60 <print_type@@Base+0x270>
   10e40:	ldr	r1, [pc, #240]	; 10f38 <print_type@@Base+0x448>
   10e44:	add	r1, pc, r1
   10e48:	b	10bcc <print_type@@Base+0xdc>
   10e4c:	ldr	r1, [pc, #232]	; 10f3c <print_type@@Base+0x44c>
   10e50:	add	r1, pc, r1
   10e54:	b	10d60 <print_type@@Base+0x270>
   10e58:	ldr	r3, [pc, #224]	; 10f40 <print_type@@Base+0x450>
   10e5c:	ldr	r1, [pc, #224]	; 10f44 <print_type@@Base+0x454>
   10e60:	ldr	r0, [pc, #224]	; 10f48 <print_type@@Base+0x458>
   10e64:	add	r3, pc, r3
   10e68:	mov	r2, #147	; 0x93
   10e6c:	add	r3, r3, #28
   10e70:	add	r1, pc, r1
   10e74:	add	r0, pc, r0
   10e78:	bl	10904 <__assert_fail@plt>
   10e7c:	ldr	r1, [pc, #200]	; 10f4c <print_type@@Base+0x45c>
   10e80:	add	r1, pc, r1
   10e84:	b	10bcc <print_type@@Base+0xdc>
   10e88:	ldrh	r3, [r3, #8]
   10e8c:	cmp	r3, #0
   10e90:	bne	10c04 <print_type@@Base+0x114>
   10e94:	b	10c90 <print_type@@Base+0x1a0>
   10e98:	ldr	r1, [pc, #176]	; 10f50 <print_type@@Base+0x460>
   10e9c:	add	r1, pc, r1
   10ea0:	b	10bcc <print_type@@Base+0xdc>
   10ea4:	strdeq	r1, [r0], -r8
   10ea8:	andeq	r1, r0, r8, ror r4
   10eac:	andeq	r1, r0, ip, asr #8
   10eb0:	muleq	r0, r0, r3
   10eb4:	andeq	r1, r0, ip, lsl r3
   10eb8:	andeq	r1, r0, r8, lsl r3
   10ebc:	andeq	r1, r0, r4, lsl r3
   10ec0:	andeq	r1, r0, r0, lsl r3
   10ec4:	andeq	r1, r0, ip, lsl #6
   10ec8:	andeq	r1, r0, r8, lsl #6
   10ecc:	andeq	r1, r0, r0, lsl #6
   10ed0:	strdeq	r1, [r0], -ip
   10ed4:	strdeq	r1, [r0], -r8
   10ed8:	strdeq	r1, [r0], -r4
   10edc:	strdeq	r1, [r0], -r0
   10ee0:	andeq	r1, r0, ip, ror #5
   10ee4:	andeq	r1, r0, r8, ror #5
   10ee8:	andeq	r1, r0, r4, ror #5
   10eec:	andeq	r1, r0, ip, ror #4
   10ef0:	andeq	r1, r0, r0, ror #4
   10ef4:	ldrdeq	r1, [r0], -r0
   10ef8:	andeq	r1, r0, r0, asr #4
   10efc:	andeq	r1, r0, ip, lsr r2
   10f00:	andeq	r1, r0, r8, lsr r2
   10f04:	andeq	r1, r0, r4, lsr r2
   10f08:	andeq	r1, r0, r0, lsr r2
   10f0c:	andeq	r1, r0, ip, lsr #4
   10f10:	andeq	r1, r0, r4, lsr #4
   10f14:	andeq	r1, r0, r0, lsr #4
   10f18:	andeq	r1, r0, ip, lsl r2
   10f1c:	andeq	r1, r0, r8, lsl r2
   10f20:	andeq	r1, r0, r4, lsl r2
   10f24:	andeq	r1, r0, r0, lsl r2
   10f28:	andeq	r1, r0, r8, lsl r2
   10f2c:	muleq	r0, r4, r1
   10f30:	strdeq	r1, [r0], -r4
   10f34:	strdeq	r1, [r0], -r0
   10f38:	andeq	r1, r0, r0, ror #8
   10f3c:	andeq	r1, r0, r4, asr r4
   10f40:	andeq	r0, r0, r0, lsr #30
   10f44:	andeq	r1, r0, r4, lsr #1
   10f48:	andeq	r1, r0, r8, lsl r1
   10f4c:	andeq	r1, r0, r4, lsr r1
   10f50:	andeq	r1, r0, r8, lsl r1

00010f54 <print_object@@Base>:
   10f54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f58:	subs	sl, r0, #0
   10f5c:	sub	sp, sp, #28
   10f60:	beq	11388 <print_object@@Base+0x434>
   10f64:	ldr	r3, [sl]
   10f68:	sub	r3, sl, r3
   10f6c:	ldrh	r2, [r3]
   10f70:	cmp	r2, #7
   10f74:	bhi	10f9c <print_object@@Base+0x48>
   10f78:	ldr	r3, [pc, #1068]	; 113ac <print_object@@Base+0x458>
   10f7c:	ldr	r1, [pc, #1068]	; 113b0 <print_object@@Base+0x45c>
   10f80:	ldr	r0, [pc, #1068]	; 113b4 <print_object@@Base+0x460>
   10f84:	add	r3, pc, r3
   10f88:	mov	r2, #224	; 0xe0
   10f8c:	add	r3, r3, #68	; 0x44
   10f90:	add	r1, pc, r1
   10f94:	add	r0, pc, r0
   10f98:	bl	10904 <__assert_fail@plt>
   10f9c:	ldrh	r2, [r3, #6]
   10fa0:	cmp	r2, #0
   10fa4:	beq	10f78 <print_object@@Base+0x24>
   10fa8:	ldrh	r1, [r3, #4]
   10fac:	ldr	r9, [sl, r2]
   10fb0:	add	r2, sl, r2
   10fb4:	add	r9, r9, #4
   10fb8:	cmp	r1, #0
   10fbc:	add	r9, r2, r9
   10fc0:	beq	11364 <print_object@@Base+0x410>
   10fc4:	ldr	r3, [sl, r1]
   10fc8:	ldr	r0, [pc, #1000]	; 113b8 <print_object@@Base+0x464>
   10fcc:	add	r3, r3, #4
   10fd0:	add	r1, sl, r1
   10fd4:	add	r1, r1, r3
   10fd8:	add	r0, pc, r0
   10fdc:	bl	10838 <printf@plt>
   10fe0:	ldr	r0, [pc, #980]	; 113bc <print_object@@Base+0x468>
   10fe4:	add	r0, pc, r0
   10fe8:	bl	10838 <printf@plt>
   10fec:	cmp	r9, #0
   10ff0:	beq	11258 <print_object@@Base+0x304>
   10ff4:	ldr	r3, [r9, #-4]
   10ff8:	cmp	r3, #0
   10ffc:	beq	11258 <print_object@@Base+0x304>
   11000:	ldr	r2, [pc, #952]	; 113c0 <print_object@@Base+0x46c>
   11004:	ldr	fp, [pc, #952]	; 113c4 <print_object@@Base+0x470>
   11008:	add	r2, pc, r2
   1100c:	str	r2, [sp, #4]
   11010:	ldr	r2, [pc, #944]	; 113c8 <print_object@@Base+0x474>
   11014:	mov	r8, r9
   11018:	add	r2, pc, r2
   1101c:	str	r2, [sp, #8]
   11020:	ldr	r2, [pc, #932]	; 113cc <print_object@@Base+0x478>
   11024:	mov	r7, #0
   11028:	add	r2, pc, r2
   1102c:	str	r2, [sp, #12]
   11030:	ldr	r2, [pc, #920]	; 113d0 <print_object@@Base+0x47c>
   11034:	add	fp, pc, fp
   11038:	add	r2, pc, r2
   1103c:	str	r2, [sp, #16]
   11040:	ldr	r2, [pc, #908]	; 113d4 <print_object@@Base+0x480>
   11044:	add	r2, pc, r2
   11048:	str	r2, [sp, #20]
   1104c:	cmp	r7, r3
   11050:	mov	r5, r8
   11054:	bcs	1131c <print_object@@Base+0x3c8>
   11058:	ldr	r6, [r8]
   1105c:	add	r8, r8, #4
   11060:	adds	r4, r5, r6
   11064:	beq	11340 <print_object@@Base+0x3ec>
   11068:	ldr	r3, [r5, r6]
   1106c:	sub	r3, r4, r3
   11070:	ldrh	r2, [r3]
   11074:	cmp	r2, #5
   11078:	bhi	110a0 <print_object@@Base+0x14c>
   1107c:	ldr	r3, [pc, #852]	; 113d8 <print_object@@Base+0x484>
   11080:	ldr	r1, [pc, #852]	; 113dc <print_object@@Base+0x488>
   11084:	ldr	r0, [pc, #852]	; 113e0 <print_object@@Base+0x48c>
   11088:	add	r3, pc, r3
   1108c:	mov	r2, #195	; 0xc3
   11090:	add	r3, r3, #144	; 0x90
   11094:	add	r1, pc, r1
   11098:	add	r0, pc, r0
   1109c:	bl	10904 <__assert_fail@plt>
   110a0:	ldrh	r1, [r3, #4]
   110a4:	cmp	r1, #0
   110a8:	beq	1107c <print_object@@Base+0x128>
   110ac:	ldr	r3, [r4, r1]
   110b0:	add	r1, r4, r1
   110b4:	add	r3, r3, #4
   110b8:	add	r1, r1, r3
   110bc:	mov	r0, fp
   110c0:	bl	10838 <printf@plt>
   110c4:	ldr	r3, [r5, r6]
   110c8:	sub	r3, r4, r3
   110cc:	ldrh	r2, [r3]
   110d0:	cmp	r2, #7
   110d4:	bhi	110fc <print_object@@Base+0x1a8>
   110d8:	ldr	r3, [pc, #772]	; 113e4 <print_object@@Base+0x490>
   110dc:	ldr	r1, [pc, #772]	; 113e8 <print_object@@Base+0x494>
   110e0:	ldr	r0, [pc, #772]	; 113ec <print_object@@Base+0x498>
   110e4:	add	r3, pc, r3
   110e8:	mov	r2, #201	; 0xc9
   110ec:	add	r3, r3, #168	; 0xa8
   110f0:	add	r1, pc, r1
   110f4:	add	r0, pc, r0
   110f8:	bl	10904 <__assert_fail@plt>
   110fc:	ldrh	r3, [r3, #6]
   11100:	cmp	r3, #0
   11104:	beq	110d8 <print_object@@Base+0x184>
   11108:	ldr	r0, [r4, r3]
   1110c:	add	r3, r4, r3
   11110:	add	r0, r3, r0
   11114:	bl	10af0 <print_type@@Base>
   11118:	ldr	r3, [r5, r6]
   1111c:	sub	r3, r4, r3
   11120:	ldrh	r2, [r3]
   11124:	cmp	r2, #9
   11128:	bls	11228 <print_object@@Base+0x2d4>
   1112c:	ldrh	r1, [r3, #8]
   11130:	cmp	r1, #0
   11134:	beq	11154 <print_object@@Base+0x200>
   11138:	ldr	r0, [pc, #688]	; 113f0 <print_object@@Base+0x49c>
   1113c:	ldrh	r1, [r4, r1]
   11140:	add	r0, pc, r0
   11144:	bl	10838 <printf@plt>
   11148:	ldr	r3, [r5, r6]
   1114c:	sub	r3, r4, r3
   11150:	ldrh	r2, [r3]
   11154:	cmp	r2, #13
   11158:	bls	11228 <print_object@@Base+0x2d4>
   1115c:	ldrh	r1, [r3, #12]
   11160:	cmp	r1, #0
   11164:	beq	11184 <print_object@@Base+0x230>
   11168:	ldr	r0, [pc, #644]	; 113f4 <print_object@@Base+0x4a0>
   1116c:	ldrd	r2, [r4, r1]
   11170:	add	r0, pc, r0
   11174:	bl	10838 <printf@plt>
   11178:	ldr	r3, [r5, r6]
   1117c:	sub	r3, r4, r3
   11180:	ldrh	r2, [r3]
   11184:	cmp	r2, #15
   11188:	bls	11228 <print_object@@Base+0x2d4>
   1118c:	ldrh	r1, [r3, #14]
   11190:	cmp	r1, #0
   11194:	beq	111b8 <print_object@@Base+0x264>
   11198:	add	r1, r4, r1
   1119c:	ldr	r0, [pc, #596]	; 113f8 <print_object@@Base+0x4a4>
   111a0:	ldrd	r2, [r1]
   111a4:	add	r0, pc, r0
   111a8:	bl	10838 <printf@plt>
   111ac:	ldr	r3, [r5, r6]
   111b0:	sub	r3, r4, r3
   111b4:	ldrh	r2, [r3]
   111b8:	cmp	r2, #19
   111bc:	bls	11228 <print_object@@Base+0x2d4>
   111c0:	ldrh	r1, [r3, #18]
   111c4:	cmp	r1, #0
   111c8:	beq	111f4 <print_object@@Base+0x2a0>
   111cc:	ldrb	r3, [r4, r1]
   111d0:	ldr	r1, [pc, #548]	; 113fc <print_object@@Base+0x4a8>
   111d4:	ldr	r0, [sp, #16]
   111d8:	cmp	r3, #0
   111dc:	add	r1, pc, r1
   111e0:	ldreq	r1, [sp, #20]
   111e4:	bl	10838 <printf@plt>
   111e8:	ldr	r3, [r5, r6]
   111ec:	sub	r3, r4, r3
   111f0:	ldrh	r2, [r3]
   111f4:	cmp	r2, #21
   111f8:	bls	11228 <print_object@@Base+0x2d4>
   111fc:	ldrh	r3, [r3, #20]
   11200:	cmp	r3, #0
   11204:	beq	11228 <print_object@@Base+0x2d4>
   11208:	ldrb	r3, [r4, r3]
   1120c:	ldr	r2, [sp, #12]
   11210:	ldr	r0, [sp, #4]
   11214:	cmp	r3, #0
   11218:	ldr	r3, [sp, #8]
   1121c:	movne	r1, r2
   11220:	moveq	r1, r3
   11224:	bl	10838 <printf@plt>
   11228:	mov	r0, #125	; 0x7d
   1122c:	bl	108d4 <putchar@plt>
   11230:	ldr	r3, [r9, #-4]
   11234:	add	r7, r7, #1
   11238:	cmp	r7, r3
   1123c:	bcs	11258 <print_object@@Base+0x304>
   11240:	cmp	r7, #0
   11244:	beq	1104c <print_object@@Base+0xf8>
   11248:	mov	r0, #44	; 0x2c
   1124c:	bl	108d4 <putchar@plt>
   11250:	ldr	r3, [r9, #-4]
   11254:	b	1104c <print_object@@Base+0xf8>
   11258:	mov	r0, #93	; 0x5d
   1125c:	bl	108d4 <putchar@plt>
   11260:	ldr	r3, [sl]
   11264:	sub	r3, sl, r3
   11268:	ldrh	r2, [r3]
   1126c:	cmp	r2, #9
   11270:	bls	112b8 <print_object@@Base+0x364>
   11274:	ldrh	r1, [r3, #8]
   11278:	cmp	r1, #0
   1127c:	bne	112e8 <print_object@@Base+0x394>
   11280:	cmp	r2, #11
   11284:	bls	112b8 <print_object@@Base+0x364>
   11288:	ldrh	r1, [r3, #10]
   1128c:	cmp	r1, #0
   11290:	bne	112c8 <print_object@@Base+0x374>
   11294:	cmp	r2, #13
   11298:	bls	112b8 <print_object@@Base+0x364>
   1129c:	ldrh	r3, [r3, #12]
   112a0:	cmp	r3, #0
   112a4:	beq	112b8 <print_object@@Base+0x364>
   112a8:	ldr	r0, [pc, #336]	; 11400 <print_object@@Base+0x4ac>
   112ac:	ldr	r1, [sl, r3]
   112b0:	add	r0, pc, r0
   112b4:	bl	10838 <printf@plt>
   112b8:	mov	r0, #125	; 0x7d
   112bc:	add	sp, sp, #28
   112c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112c4:	b	108d4 <putchar@plt>
   112c8:	ldr	r0, [pc, #308]	; 11404 <print_object@@Base+0x4b0>
   112cc:	ldr	r1, [sl, r1]
   112d0:	add	r0, pc, r0
   112d4:	bl	10838 <printf@plt>
   112d8:	ldr	r3, [sl]
   112dc:	sub	r3, sl, r3
   112e0:	ldrh	r2, [r3]
   112e4:	b	11294 <print_object@@Base+0x340>
   112e8:	ldrb	r3, [sl, r1]
   112ec:	ldr	r1, [pc, #276]	; 11408 <print_object@@Base+0x4b4>
   112f0:	cmp	r3, #0
   112f4:	add	r1, pc, r1
   112f8:	ldreq	r1, [pc, #268]	; 1140c <print_object@@Base+0x4b8>
   112fc:	addeq	r1, pc, r1
   11300:	ldr	r0, [pc, #264]	; 11410 <print_object@@Base+0x4bc>
   11304:	add	r0, pc, r0
   11308:	bl	10838 <printf@plt>
   1130c:	ldr	r3, [sl]
   11310:	sub	r3, sl, r3
   11314:	ldrh	r2, [r3]
   11318:	b	11280 <print_object@@Base+0x32c>
   1131c:	ldr	r3, [pc, #240]	; 11414 <print_object@@Base+0x4c0>
   11320:	ldr	r1, [pc, #240]	; 11418 <print_object@@Base+0x4c4>
   11324:	ldr	r0, [pc, #240]	; 1141c <print_object@@Base+0x4c8>
   11328:	add	r3, pc, r3
   1132c:	mov	r2, #192	; 0xc0
   11330:	add	r3, r3, #120	; 0x78
   11334:	add	r1, pc, r1
   11338:	add	r0, pc, r0
   1133c:	bl	10904 <__assert_fail@plt>
   11340:	ldr	r3, [pc, #216]	; 11420 <print_object@@Base+0x4cc>
   11344:	ldr	r1, [pc, #216]	; 11424 <print_object@@Base+0x4d0>
   11348:	ldr	r0, [pc, #216]	; 11428 <print_object@@Base+0x4d4>
   1134c:	add	r3, pc, r3
   11350:	mov	r2, #195	; 0xc3
   11354:	add	r3, r3, #144	; 0x90
   11358:	add	r1, pc, r1
   1135c:	add	r0, pc, r0
   11360:	bl	10904 <__assert_fail@plt>
   11364:	ldr	r3, [pc, #192]	; 1142c <print_object@@Base+0x4d8>
   11368:	ldr	r1, [pc, #192]	; 11430 <print_object@@Base+0x4dc>
   1136c:	ldr	r0, [pc, #192]	; 11434 <print_object@@Base+0x4e0>
   11370:	add	r3, pc, r3
   11374:	mov	r2, #218	; 0xda
   11378:	add	r3, r3, #96	; 0x60
   1137c:	add	r1, pc, r1
   11380:	add	r0, pc, r0
   11384:	bl	10904 <__assert_fail@plt>
   11388:	ldr	r3, [pc, #168]	; 11438 <print_object@@Base+0x4e4>
   1138c:	ldr	r1, [pc, #168]	; 1143c <print_object@@Base+0x4e8>
   11390:	ldr	r0, [pc, #168]	; 11440 <print_object@@Base+0x4ec>
   11394:	add	r3, pc, r3
   11398:	mov	r2, #224	; 0xe0
   1139c:	add	r3, r3, #68	; 0x44
   113a0:	add	r1, pc, r1
   113a4:	add	r0, pc, r0
   113a8:	bl	10904 <__assert_fail@plt>
   113ac:	andeq	r0, r0, r0, lsl #28
   113b0:	andeq	r0, r0, r4, lsl #31
   113b4:	andeq	r1, r0, r0, ror #1
   113b8:	andeq	r1, r0, r0, asr #1
   113bc:	andeq	r1, r0, r4, asr #1
   113c0:	andeq	r1, r0, r8, asr #2
   113c4:	strheq	r1, [r0], -r8
   113c8:	andeq	r1, r0, r4, asr r0
   113cc:	andeq	r1, r0, ip, lsr r0
   113d0:	andeq	r1, r0, r8, lsl #2
   113d4:	andeq	r1, r0, r8, lsr #32
   113d8:	strdeq	r0, [r0], -ip
   113dc:	andeq	r0, r0, r0, lsl #29
   113e0:	ldrdeq	r0, [r0], -ip
   113e4:	andeq	r0, r0, r0, lsr #25
   113e8:	andeq	r0, r0, r4, lsr #28
   113ec:	andeq	r0, r0, r0, lsl #31
   113f0:	andeq	r0, r0, r4, asr #31
   113f4:	andeq	r0, r0, r0, lsr #31
   113f8:	andeq	r0, r0, r4, lsl #31
   113fc:	andeq	r0, r0, r8, lsl #29
   11400:	andeq	r0, r0, ip, asr #29
   11404:	muleq	r0, ip, lr
   11408:	andeq	r0, r0, r0, ror sp
   1140c:	andeq	r0, r0, r0, ror sp
   11410:	andeq	r0, r0, r8, asr lr
   11414:	andeq	r0, r0, ip, asr sl
   11418:	andeq	r0, r0, r0, ror #23
   1141c:	andeq	r0, r0, ip, ror sp
   11420:	andeq	r0, r0, r8, lsr sl
   11424:			; <UNDEFINED> instruction: 0x00000bbc
   11428:	andeq	r0, r0, r0, lsr ip
   1142c:	andeq	r0, r0, r4, lsl sl
   11430:	muleq	r0, r8, fp
   11434:	strdeq	r0, [r0], -r4
   11438:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1143c:	andeq	r0, r0, r4, ror fp
   11440:	andeq	r0, r0, r8, ror #23

00011444 <print_enum@@Base>:
   11444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11448:	subs	r7, r0, #0
   1144c:	sub	sp, sp, #12
   11450:	beq	1176c <print_enum@@Base+0x328>
   11454:	ldr	r3, [r7]
   11458:	sub	r3, r7, r3
   1145c:	ldrh	r2, [r3]
   11460:	cmp	r2, #5
   11464:	bhi	1148c <print_enum@@Base+0x48>
   11468:	ldr	r3, [pc, #800]	; 11790 <print_enum@@Base+0x34c>
   1146c:	ldr	r1, [pc, #800]	; 11794 <print_enum@@Base+0x350>
   11470:	ldr	r0, [pc, #800]	; 11798 <print_enum@@Base+0x354>
   11474:	add	r3, pc, r3
   11478:	mov	r2, #177	; 0xb1
   1147c:	add	r3, r3, #192	; 0xc0
   11480:	add	r1, pc, r1
   11484:	add	r0, pc, r0
   11488:	bl	10904 <__assert_fail@plt>
   1148c:	ldrh	r1, [r3, #4]
   11490:	cmp	r1, #0
   11494:	beq	11468 <print_enum@@Base+0x24>
   11498:	ldr	r3, [r7, r1]
   1149c:	ldr	r0, [pc, #760]	; 1179c <print_enum@@Base+0x358>
   114a0:	add	r3, r3, #4
   114a4:	add	r1, r7, r1
   114a8:	add	r1, r1, r3
   114ac:	add	r0, pc, r0
   114b0:	bl	10838 <printf@plt>
   114b4:	ldr	r3, [r7]
   114b8:	sub	r3, r7, r3
   114bc:	ldrh	r2, [r3]
   114c0:	cmp	r2, #7
   114c4:	bhi	114ec <print_enum@@Base+0xa8>
   114c8:	ldr	r3, [pc, #720]	; 117a0 <print_enum@@Base+0x35c>
   114cc:	ldr	r1, [pc, #720]	; 117a4 <print_enum@@Base+0x360>
   114d0:	ldr	r0, [pc, #720]	; 117a8 <print_enum@@Base+0x364>
   114d4:	add	r3, pc, r3
   114d8:	mov	r2, #183	; 0xb7
   114dc:	add	r3, r3, #216	; 0xd8
   114e0:	add	r1, pc, r1
   114e4:	add	r0, pc, r0
   114e8:	bl	10904 <__assert_fail@plt>
   114ec:	ldrh	r3, [r3, #6]
   114f0:	cmp	r3, #0
   114f4:	beq	114c8 <print_enum@@Base+0x84>
   114f8:	ldr	r5, [r7, r3]
   114fc:	ldr	r0, [pc, #680]	; 117ac <print_enum@@Base+0x368>
   11500:	add	r4, r7, r3
   11504:	add	r5, r5, #4
   11508:	add	r8, r4, r5
   1150c:	add	r0, pc, r0
   11510:	bl	10838 <printf@plt>
   11514:	cmp	r8, #0
   11518:	beq	11660 <print_enum@@Base+0x21c>
   1151c:	ldr	r3, [r8, #-4]
   11520:	cmp	r3, #0
   11524:	beq	11660 <print_enum@@Base+0x21c>
   11528:	ldr	r3, [pc, #640]	; 117b0 <print_enum@@Base+0x36c>
   1152c:	ldr	r4, [r4, r5]
   11530:	add	r3, pc, r3
   11534:	ldr	r9, [pc, #632]	; 117b4 <print_enum@@Base+0x370>
   11538:	str	r3, [sp]
   1153c:	ldr	r3, [pc, #628]	; 117b8 <print_enum@@Base+0x374>
   11540:	mov	r5, #0
   11544:	add	r4, r8, r4
   11548:	add	r6, r8, #4
   1154c:	add	r9, pc, r9
   11550:	mov	sl, #125	; 0x7d
   11554:	mov	fp, #44	; 0x2c
   11558:	add	r3, pc, r3
   1155c:	str	r3, [sp, #4]
   11560:	cmp	r4, #0
   11564:	beq	11748 <print_enum@@Base+0x304>
   11568:	ldr	r3, [r4]
   1156c:	sub	r3, r4, r3
   11570:	ldrh	r2, [r3]
   11574:	cmp	r2, #5
   11578:	bhi	115a0 <print_enum@@Base+0x15c>
   1157c:	ldr	r3, [pc, #568]	; 117bc <print_enum@@Base+0x378>
   11580:	ldr	r1, [pc, #568]	; 117c0 <print_enum@@Base+0x37c>
   11584:	ldr	r0, [pc, #568]	; 117c4 <print_enum@@Base+0x380>
   11588:	add	r3, pc, r3
   1158c:	mov	r2, #159	; 0x9f
   11590:	add	r3, r3, #240	; 0xf0
   11594:	add	r1, pc, r1
   11598:	add	r0, pc, r0
   1159c:	bl	10904 <__assert_fail@plt>
   115a0:	ldrh	r1, [r3, #4]
   115a4:	cmp	r1, #0
   115a8:	beq	1157c <print_enum@@Base+0x138>
   115ac:	ldr	r3, [r4, r1]
   115b0:	add	r1, r4, r1
   115b4:	add	r3, r3, #4
   115b8:	add	r1, r1, r3
   115bc:	mov	r0, r9
   115c0:	bl	10838 <printf@plt>
   115c4:	ldr	r3, [r4]
   115c8:	sub	r3, r4, r3
   115cc:	ldrh	r2, [r3]
   115d0:	cmp	r2, #7
   115d4:	bls	11648 <print_enum@@Base+0x204>
   115d8:	ldrh	r1, [r3, #6]
   115dc:	cmp	r1, #0
   115e0:	beq	115fc <print_enum@@Base+0x1b8>
   115e4:	ldrd	r2, [r4, r1]
   115e8:	ldr	r0, [sp, #4]
   115ec:	bl	10838 <printf@plt>
   115f0:	ldr	r3, [r4]
   115f4:	sub	r3, r4, r3
   115f8:	ldrh	r2, [r3]
   115fc:	cmp	r2, #9
   11600:	bls	11648 <print_enum@@Base+0x204>
   11604:	ldrh	r3, [r3, #8]
   11608:	cmp	r3, #0
   1160c:	beq	11648 <print_enum@@Base+0x204>
   11610:	ldr	r0, [sp]
   11614:	bl	10838 <printf@plt>
   11618:	ldr	r3, [r4]
   1161c:	sub	r3, r4, r3
   11620:	ldrh	r2, [r3]
   11624:	cmp	r2, #9
   11628:	bls	11708 <print_enum@@Base+0x2c4>
   1162c:	ldrh	r3, [r3, #8]
   11630:	cmp	r3, #0
   11634:	beq	11708 <print_enum@@Base+0x2c4>
   11638:	ldr	r0, [r4, r3]
   1163c:	add	r4, r4, r3
   11640:	add	r0, r4, r0
   11644:	bl	10f54 <print_object@@Base>
   11648:	mov	r0, sl
   1164c:	bl	108d4 <putchar@plt>
   11650:	ldr	r3, [r8, #-4]
   11654:	add	r5, r5, #1
   11658:	cmp	r5, r3
   1165c:	bcc	116ec <print_enum@@Base+0x2a8>
   11660:	mov	r0, #93	; 0x5d
   11664:	bl	108d4 <putchar@plt>
   11668:	ldr	r3, [r7]
   1166c:	sub	r3, r7, r3
   11670:	ldrh	r2, [r3]
   11674:	cmp	r2, #9
   11678:	bls	116a8 <print_enum@@Base+0x264>
   1167c:	ldrh	r3, [r3, #8]
   11680:	cmp	r3, #0
   11684:	beq	116a8 <print_enum@@Base+0x264>
   11688:	ldrb	r3, [r7, r3]
   1168c:	ldr	r1, [pc, #308]	; 117c8 <print_enum@@Base+0x384>
   11690:	cmp	r3, #0
   11694:	add	r1, pc, r1
   11698:	beq	1173c <print_enum@@Base+0x2f8>
   1169c:	ldr	r0, [pc, #296]	; 117cc <print_enum@@Base+0x388>
   116a0:	add	r0, pc, r0
   116a4:	bl	10838 <printf@plt>
   116a8:	ldr	r0, [pc, #288]	; 117d0 <print_enum@@Base+0x38c>
   116ac:	add	r0, pc, r0
   116b0:	bl	10838 <printf@plt>
   116b4:	ldr	r3, [r7]
   116b8:	sub	r3, r7, r3
   116bc:	ldrh	r2, [r3]
   116c0:	cmp	r2, #11
   116c4:	bhi	11710 <print_enum@@Base+0x2cc>
   116c8:	ldr	r3, [pc, #260]	; 117d4 <print_enum@@Base+0x390>
   116cc:	ldr	r1, [pc, #260]	; 117d8 <print_enum@@Base+0x394>
   116d0:	ldr	r0, [pc, #260]	; 117dc <print_enum@@Base+0x398>
   116d4:	add	r3, pc, r3
   116d8:	mov	r2, #185	; 0xb9
   116dc:	add	r3, r3, #264	; 0x108
   116e0:	add	r1, pc, r1
   116e4:	add	r0, pc, r0
   116e8:	bl	10904 <__assert_fail@plt>
   116ec:	ldr	r3, [r6]
   116f0:	mov	r4, r6
   116f4:	mov	r0, fp
   116f8:	add	r6, r6, #4
   116fc:	add	r4, r4, r3
   11700:	bl	108d4 <putchar@plt>
   11704:	b	11560 <print_enum@@Base+0x11c>
   11708:	mov	r0, #0
   1170c:	b	11644 <print_enum@@Base+0x200>
   11710:	ldrh	r3, [r3, #10]
   11714:	cmp	r3, #0
   11718:	beq	116c8 <print_enum@@Base+0x284>
   1171c:	ldr	r0, [r7, r3]
   11720:	add	r7, r7, r3
   11724:	add	r0, r7, r0
   11728:	bl	10af0 <print_type@@Base>
   1172c:	mov	r0, #125	; 0x7d
   11730:	add	sp, sp, #12
   11734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11738:	b	108d4 <putchar@plt>
   1173c:	ldr	r1, [pc, #156]	; 117e0 <print_enum@@Base+0x39c>
   11740:	add	r1, pc, r1
   11744:	b	1169c <print_enum@@Base+0x258>
   11748:	ldr	r3, [pc, #148]	; 117e4 <print_enum@@Base+0x3a0>
   1174c:	ldr	r1, [pc, #148]	; 117e8 <print_enum@@Base+0x3a4>
   11750:	ldr	r0, [pc, #148]	; 117ec <print_enum@@Base+0x3a8>
   11754:	add	r3, pc, r3
   11758:	mov	r2, #159	; 0x9f
   1175c:	add	r3, r3, #240	; 0xf0
   11760:	add	r1, pc, r1
   11764:	add	r0, pc, r0
   11768:	bl	10904 <__assert_fail@plt>
   1176c:	ldr	r3, [pc, #124]	; 117f0 <print_enum@@Base+0x3ac>
   11770:	ldr	r1, [pc, #124]	; 117f4 <print_enum@@Base+0x3b0>
   11774:	ldr	r0, [pc, #124]	; 117f8 <print_enum@@Base+0x3b4>
   11778:	add	r3, pc, r3
   1177c:	mov	r2, #177	; 0xb1
   11780:	add	r3, r3, #192	; 0xc0
   11784:	add	r1, pc, r1
   11788:	add	r0, pc, r0
   1178c:	bl	10904 <__assert_fail@plt>
   11790:	andeq	r0, r0, r0, lsl r9
   11794:	muleq	r0, r4, sl
   11798:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1179c:	andeq	r0, r0, ip, ror #23
   117a0:			; <UNDEFINED> instruction: 0x000008b0
   117a4:	andeq	r0, r0, r4, lsr sl
   117a8:	muleq	r0, r0, fp
   117ac:	andeq	r0, r0, r0, lsl #25
   117b0:	andeq	r0, r0, r8, ror ip
   117b4:	andeq	r0, r0, ip, asr #22
   117b8:	andeq	r0, r0, r0, asr #24
   117bc:	strdeq	r0, [r0], -ip
   117c0:	andeq	r0, r0, r0, lsl #19
   117c4:	ldrdeq	r0, [r0], -ip
   117c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   117cc:	andeq	r0, r0, r4, lsl fp
   117d0:	andeq	r0, r0, r8, lsl fp
   117d4:			; <UNDEFINED> instruction: 0x000006b0
   117d8:	andeq	r0, r0, r4, lsr r8
   117dc:	muleq	r0, r0, r9
   117e0:	andeq	r0, r0, ip, lsr #18
   117e4:	andeq	r0, r0, r0, lsr r6
   117e8:			; <UNDEFINED> instruction: 0x000007b4
   117ec:	andeq	r0, r0, r8, lsr #16
   117f0:	andeq	r0, r0, ip, lsl #12
   117f4:	muleq	r0, r0, r7
   117f8:	andeq	r0, r0, r4, lsl #16

000117fc <print_schema@@Base>:
   117fc:	push	{r4, r5, r6, r7, r8, lr}
   11800:	subs	r6, r0, #0
   11804:	beq	11ad0 <print_schema@@Base+0x2d4>
   11808:	ldr	r3, [r6]
   1180c:	sub	r3, r6, r3
   11810:	ldrh	r2, [r3]
   11814:	cmp	r2, #5
   11818:	bhi	11840 <print_schema@@Base+0x44>
   1181c:	ldr	r3, [pc, #720]	; 11af4 <print_schema@@Base+0x2f8>
   11820:	ldr	r1, [pc, #720]	; 11af8 <print_schema@@Base+0x2fc>
   11824:	ldr	r0, [pc, #720]	; 11afc <print_schema@@Base+0x300>
   11828:	add	r3, pc, r3
   1182c:	mov	r2, #237	; 0xed
   11830:	add	r3, r3, #296	; 0x128
   11834:	add	r1, pc, r1
   11838:	add	r0, pc, r0
   1183c:	bl	10904 <__assert_fail@plt>
   11840:	ldrh	r3, [r3, #4]
   11844:	cmp	r3, #0
   11848:	beq	1181c <print_schema@@Base+0x20>
   1184c:	ldr	r7, [r6, r3]
   11850:	mov	r0, #123	; 0x7b
   11854:	add	r3, r6, r3
   11858:	add	r7, r7, #4
   1185c:	add	r7, r3, r7
   11860:	bl	108d4 <putchar@plt>
   11864:	ldr	r0, [pc, #660]	; 11b00 <print_schema@@Base+0x304>
   11868:	add	r0, pc, r0
   1186c:	bl	10838 <printf@plt>
   11870:	cmp	r7, #0
   11874:	beq	118d0 <print_schema@@Base+0xd4>
   11878:	ldr	r3, [r7, #-4]
   1187c:	cmp	r3, #0
   11880:	beq	118d0 <print_schema@@Base+0xd4>
   11884:	mov	r5, r7
   11888:	mov	r4, #0
   1188c:	mov	r8, #44	; 0x2c
   11890:	cmp	r3, r4
   11894:	bls	11aac <print_schema@@Base+0x2b0>
   11898:	ldr	r0, [r5]
   1189c:	add	r4, r4, #1
   118a0:	add	r0, r5, r0
   118a4:	bl	10f54 <print_object@@Base>
   118a8:	ldr	r3, [r7, #-4]
   118ac:	add	r5, r5, #4
   118b0:	cmp	r4, r3
   118b4:	bcs	118d0 <print_schema@@Base+0xd4>
   118b8:	cmp	r4, #0
   118bc:	beq	11890 <print_schema@@Base+0x94>
   118c0:	mov	r0, r8
   118c4:	bl	108d4 <putchar@plt>
   118c8:	ldr	r3, [r7, #-4]
   118cc:	b	11890 <print_schema@@Base+0x94>
   118d0:	mov	r0, #93	; 0x5d
   118d4:	bl	108d4 <putchar@plt>
   118d8:	ldr	r3, [r6]
   118dc:	sub	r3, r6, r3
   118e0:	ldrh	r2, [r3]
   118e4:	cmp	r2, #7
   118e8:	bls	11a64 <print_schema@@Base+0x268>
   118ec:	ldrh	r3, [r3, #6]
   118f0:	cmp	r3, #0
   118f4:	beq	11a64 <print_schema@@Base+0x268>
   118f8:	ldr	r7, [r6, r3]
   118fc:	ldr	r0, [pc, #512]	; 11b04 <print_schema@@Base+0x308>
   11900:	add	r3, r6, r3
   11904:	add	r7, r7, #4
   11908:	add	r7, r3, r7
   1190c:	add	r0, pc, r0
   11910:	bl	10838 <printf@plt>
   11914:	cmp	r7, #0
   11918:	beq	11974 <print_schema@@Base+0x178>
   1191c:	ldr	r3, [r7, #-4]
   11920:	cmp	r3, #0
   11924:	beq	11974 <print_schema@@Base+0x178>
   11928:	mov	r5, r7
   1192c:	mov	r4, #0
   11930:	mov	r8, #44	; 0x2c
   11934:	cmp	r3, r4
   11938:	bls	11a88 <print_schema@@Base+0x28c>
   1193c:	ldr	r0, [r5]
   11940:	add	r4, r4, #1
   11944:	add	r0, r5, r0
   11948:	bl	11444 <print_enum@@Base>
   1194c:	ldr	r3, [r7, #-4]
   11950:	add	r5, r5, #4
   11954:	cmp	r4, r3
   11958:	bcs	11974 <print_schema@@Base+0x178>
   1195c:	cmp	r4, #0
   11960:	beq	11934 <print_schema@@Base+0x138>
   11964:	mov	r0, r8
   11968:	bl	108d4 <putchar@plt>
   1196c:	ldr	r3, [r7, #-4]
   11970:	b	11934 <print_schema@@Base+0x138>
   11974:	mov	r0, #93	; 0x5d
   11978:	bl	108d4 <putchar@plt>
   1197c:	ldr	r3, [r6]
   11980:	sub	r3, r6, r3
   11984:	ldrh	r2, [r3]
   11988:	cmp	r2, #9
   1198c:	bls	11a3c <print_schema@@Base+0x240>
   11990:	ldrh	r1, [r3, #8]
   11994:	cmp	r1, #0
   11998:	beq	119c4 <print_schema@@Base+0x1c8>
   1199c:	ldr	r3, [r6, r1]
   119a0:	ldr	r0, [pc, #352]	; 11b08 <print_schema@@Base+0x30c>
   119a4:	add	r3, r3, #4
   119a8:	add	r1, r6, r1
   119ac:	add	r1, r1, r3
   119b0:	add	r0, pc, r0
   119b4:	bl	10838 <printf@plt>
   119b8:	ldr	r3, [r6]
   119bc:	sub	r3, r6, r3
   119c0:	ldrh	r2, [r3]
   119c4:	cmp	r2, #11
   119c8:	bls	11a3c <print_schema@@Base+0x240>
   119cc:	ldrh	r1, [r3, #10]
   119d0:	cmp	r1, #0
   119d4:	beq	11a00 <print_schema@@Base+0x204>
   119d8:	ldr	r3, [r6, r1]
   119dc:	ldr	r0, [pc, #296]	; 11b0c <print_schema@@Base+0x310>
   119e0:	add	r3, r3, #4
   119e4:	add	r1, r6, r1
   119e8:	add	r1, r1, r3
   119ec:	add	r0, pc, r0
   119f0:	bl	10838 <printf@plt>
   119f4:	ldr	r3, [r6]
   119f8:	sub	r3, r6, r3
   119fc:	ldrh	r2, [r3]
   11a00:	cmp	r2, #13
   11a04:	bls	11a3c <print_schema@@Base+0x240>
   11a08:	ldrh	r3, [r3, #12]
   11a0c:	cmp	r3, #0
   11a10:	beq	11a3c <print_schema@@Base+0x240>
   11a14:	ldr	r0, [pc, #244]	; 11b10 <print_schema@@Base+0x314>
   11a18:	add	r0, pc, r0
   11a1c:	bl	10838 <printf@plt>
   11a20:	ldr	r3, [r6]
   11a24:	sub	r3, r6, r3
   11a28:	ldrh	r2, [r3]
   11a2c:	cmp	r2, #13
   11a30:	movls	r0, #0
   11a34:	bhi	11a4c <print_schema@@Base+0x250>
   11a38:	bl	10f54 <print_object@@Base>
   11a3c:	ldr	r0, [pc, #208]	; 11b14 <print_schema@@Base+0x318>
   11a40:	pop	{r4, r5, r6, r7, r8, lr}
   11a44:	add	r0, pc, r0
   11a48:	b	1088c <puts@plt>
   11a4c:	ldrh	r0, [r3, #12]
   11a50:	cmp	r0, #0
   11a54:	ldrne	r3, [r6, r0]
   11a58:	addne	r0, r6, r0
   11a5c:	addne	r0, r0, r3
   11a60:	b	11a38 <print_schema@@Base+0x23c>
   11a64:	ldr	r3, [pc, #172]	; 11b18 <print_schema@@Base+0x31c>
   11a68:	ldr	r1, [pc, #172]	; 11b1c <print_schema@@Base+0x320>
   11a6c:	ldr	r0, [pc, #172]	; 11b20 <print_schema@@Base+0x324>
   11a70:	add	r3, pc, r3
   11a74:	mov	r2, #238	; 0xee
   11a78:	add	r3, r3, #352	; 0x160
   11a7c:	add	r1, pc, r1
   11a80:	add	r0, pc, r0
   11a84:	bl	10904 <__assert_fail@plt>
   11a88:	ldr	r3, [pc, #148]	; 11b24 <print_schema@@Base+0x328>
   11a8c:	ldr	r1, [pc, #148]	; 11b28 <print_schema@@Base+0x32c>
   11a90:	ldr	r0, [pc, #148]	; 11b2c <print_schema@@Base+0x330>
   11a94:	add	r3, pc, r3
   11a98:	mov	r2, #174	; 0xae
   11a9c:	add	r3, r3, #376	; 0x178
   11aa0:	add	r1, pc, r1
   11aa4:	add	r0, pc, r0
   11aa8:	bl	10904 <__assert_fail@plt>
   11aac:	ldr	r3, [pc, #124]	; 11b30 <print_schema@@Base+0x334>
   11ab0:	ldr	r1, [pc, #124]	; 11b34 <print_schema@@Base+0x338>
   11ab4:	ldr	r0, [pc, #124]	; 11b38 <print_schema@@Base+0x33c>
   11ab8:	add	r3, pc, r3
   11abc:	mov	r2, #215	; 0xd7
   11ac0:	add	r3, r3, #324	; 0x144
   11ac4:	add	r1, pc, r1
   11ac8:	add	r0, pc, r0
   11acc:	bl	10904 <__assert_fail@plt>
   11ad0:	ldr	r3, [pc, #100]	; 11b3c <print_schema@@Base+0x340>
   11ad4:	ldr	r1, [pc, #100]	; 11b40 <print_schema@@Base+0x344>
   11ad8:	ldr	r0, [pc, #100]	; 11b44 <print_schema@@Base+0x348>
   11adc:	add	r3, pc, r3
   11ae0:	mov	r2, #237	; 0xed
   11ae4:	add	r3, r3, #296	; 0x128
   11ae8:	add	r1, pc, r1
   11aec:	add	r0, pc, r0
   11af0:	bl	10904 <__assert_fail@plt>
   11af4:	andeq	r0, r0, ip, asr r5
   11af8:	andeq	r0, r0, r0, ror #13
   11afc:	andeq	r0, r0, ip, lsr r8
   11b00:	andeq	r0, r0, r0, ror r9
   11b04:	ldrdeq	r0, [r0], -r8
   11b08:	andeq	r0, r0, r0, asr #16
   11b0c:	andeq	r0, r0, r8, lsl r8
   11b10:	andeq	r0, r0, r0, lsl #16
   11b14:	andeq	r0, r0, r4, ror #15
   11b18:	andeq	r0, r0, r4, lsl r3
   11b1c:	muleq	r0, r8, r4
   11b20:	strdeq	r0, [r0], -r4
   11b24:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11b28:	andeq	r0, r0, r4, ror r4
   11b2c:	andeq	r0, r0, r0, lsl r6
   11b30:	andeq	r0, r0, ip, asr #5
   11b34:	andeq	r0, r0, r0, asr r4
   11b38:	andeq	r0, r0, ip, ror #11
   11b3c:	andeq	r0, r0, r8, lsr #5
   11b40:	andeq	r0, r0, ip, lsr #8
   11b44:	andeq	r0, r0, r0, lsr #9

00011b48 <load_and_dump_schema@@Base>:
   11b48:	ldr	r1, [pc, #424]	; 11cf8 <load_and_dump_schema@@Base+0x1b0>
   11b4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b50:	add	r1, pc, r1
   11b54:	mov	sl, r0
   11b58:	bl	10844 <fopen@plt>
   11b5c:	ldr	r9, [pc, #408]	; 11cfc <load_and_dump_schema@@Base+0x1b4>
   11b60:	add	r9, pc, r9
   11b64:	subs	r7, r0, #0
   11b68:	beq	11c44 <load_and_dump_schema@@Base+0xfc>
   11b6c:	mov	r2, #2
   11b70:	mov	r1, #0
   11b74:	bl	108ec <fseek@plt>
   11b78:	mov	r0, r7
   11b7c:	bl	1085c <ftell@plt>
   11b80:	ldr	r3, [pc, #376]	; 11d00 <load_and_dump_schema@@Base+0x1b8>
   11b84:	cmp	r0, r3
   11b88:	mov	r5, r0
   11b8c:	bhi	11c3c <load_and_dump_schema@@Base+0xf4>
   11b90:	mov	r0, r7
   11b94:	bl	10868 <rewind@plt>
   11b98:	cmp	r5, #0
   11b9c:	movne	r0, r5
   11ba0:	moveq	r0, #1
   11ba4:	bl	10898 <malloc@plt>
   11ba8:	subs	r6, r0, #0
   11bac:	beq	11c3c <load_and_dump_schema@@Base+0xf4>
   11bb0:	mov	r4, #0
   11bb4:	mov	r8, #1
   11bb8:	b	11bc0 <load_and_dump_schema@@Base+0x78>
   11bbc:	add	r4, r4, r0
   11bc0:	mov	r3, r7
   11bc4:	sub	r2, r5, r4
   11bc8:	mov	r1, r8
   11bcc:	add	r0, r6, r4
   11bd0:	bl	10880 <fread@plt>
   11bd4:	cmp	r0, #0
   11bd8:	bne	11bbc <load_and_dump_schema@@Base+0x74>
   11bdc:	cmp	r5, r4
   11be0:	mov	r0, r7
   11be4:	bne	11c6c <load_and_dump_schema@@Base+0x124>
   11be8:	bl	108e0 <fclose@plt>
   11bec:	cmp	r5, #11
   11bf0:	bls	11cd4 <load_and_dump_schema@@Base+0x18c>
   11bf4:	ldr	r3, [r6, #4]
   11bf8:	ldr	r2, [pc, #260]	; 11d04 <load_and_dump_schema@@Base+0x1bc>
   11bfc:	cmp	r3, r2
   11c00:	beq	11c7c <load_and_dump_schema@@Base+0x134>
   11c04:	ldr	r2, [pc, #248]	; 11d04 <load_and_dump_schema@@Base+0x1bc>
   11c08:	ldr	r1, [r6, #8]
   11c0c:	cmp	r1, r2
   11c10:	beq	11ca4 <load_and_dump_schema@@Base+0x15c>
   11c14:	ldr	r3, [pc, #236]	; 11d08 <load_and_dump_schema@@Base+0x1c0>
   11c18:	ldr	r0, [pc, #236]	; 11d0c <load_and_dump_schema@@Base+0x1c4>
   11c1c:	mov	r2, #27
   11c20:	ldr	r3, [r9, r3]
   11c24:	mov	r1, #1
   11c28:	add	r0, pc, r0
   11c2c:	ldr	r3, [r3]
   11c30:	mvn	r4, #0
   11c34:	bl	10874 <fwrite@plt>
   11c38:	b	11c94 <load_and_dump_schema@@Base+0x14c>
   11c3c:	mov	r0, r7
   11c40:	bl	108e0 <fclose@plt>
   11c44:	ldr	r3, [pc, #188]	; 11d08 <load_and_dump_schema@@Base+0x1c0>
   11c48:	ldr	r1, [pc, #192]	; 11d10 <load_and_dump_schema@@Base+0x1c8>
   11c4c:	mov	r2, sl
   11c50:	ldr	r3, [r9, r3]
   11c54:	add	r1, pc, r1
   11c58:	mvn	r4, #0
   11c5c:	ldr	r0, [r3]
   11c60:	bl	108c8 <fprintf@plt>
   11c64:	mov	r0, r4
   11c68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c6c:	bl	108e0 <fclose@plt>
   11c70:	mov	r0, r6
   11c74:	bl	10850 <free@plt>
   11c78:	b	11c44 <load_and_dump_schema@@Base+0xfc>
   11c7c:	ldr	r4, [r6]
   11c80:	adds	r4, r6, r4
   11c84:	beq	11c04 <load_and_dump_schema@@Base+0xbc>
   11c88:	mov	r0, r4
   11c8c:	bl	117fc <print_schema@@Base>
   11c90:	mov	r4, #0
   11c94:	mov	r0, r6
   11c98:	bl	10850 <free@plt>
   11c9c:	mov	r0, r4
   11ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ca4:	add	r3, r3, #4
   11ca8:	adds	r4, r6, r3
   11cac:	beq	11c14 <load_and_dump_schema@@Base+0xcc>
   11cb0:	ldr	r3, [pc, #80]	; 11d08 <load_and_dump_schema@@Base+0x1c0>
   11cb4:	ldr	r0, [pc, #88]	; 11d14 <load_and_dump_schema@@Base+0x1cc>
   11cb8:	mov	r2, #40	; 0x28
   11cbc:	ldr	r3, [r9, r3]
   11cc0:	mov	r1, #1
   11cc4:	add	r0, pc, r0
   11cc8:	ldr	r3, [r3]
   11ccc:	bl	10874 <fwrite@plt>
   11cd0:	b	11c88 <load_and_dump_schema@@Base+0x140>
   11cd4:	ldr	r3, [pc, #44]	; 11d08 <load_and_dump_schema@@Base+0x1c0>
   11cd8:	ldr	r1, [pc, #56]	; 11d18 <load_and_dump_schema@@Base+0x1d0>
   11cdc:	mov	r2, sl
   11ce0:	ldr	r3, [r9, r3]
   11ce4:	add	r1, pc, r1
   11ce8:	mvn	r4, #0
   11cec:	ldr	r0, [r3]
   11cf0:	bl	108c8 <fprintf@plt>
   11cf4:	b	11c94 <load_and_dump_schema@@Base+0x14c>
   11cf8:	ldrdeq	r0, [r0], -ip
   11cfc:	muleq	r1, r8, r4
   11d00:	andeq	r2, r0, r0, lsl r7
   11d04:	movtpl	r4, #9794	; 0x2642
   11d08:	andeq	r0, r0, r4, asr r0
   11d0c:	andeq	r0, r0, r0, lsl #13
   11d10:	andeq	r0, r0, r8, lsr #12
   11d14:	andeq	r0, r0, ip, lsl #11
   11d18:	andeq	r0, r0, ip, asr #10

00011d1c <__libc_csu_init@@Base>:
   11d1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d20:	mov	r7, r0
   11d24:	ldr	r6, [pc, #72]	; 11d74 <__libc_csu_init@@Base+0x58>
   11d28:	ldr	r5, [pc, #72]	; 11d78 <__libc_csu_init@@Base+0x5c>
   11d2c:	add	r6, pc, r6
   11d30:	add	r5, pc, r5
   11d34:	sub	r6, r6, r5
   11d38:	mov	r8, r1
   11d3c:	mov	r9, r2
   11d40:	bl	10818 <printf@plt-0x20>
   11d44:	asrs	r6, r6, #2
   11d48:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d4c:	mov	r4, #0
   11d50:	add	r4, r4, #1
   11d54:	ldr	r3, [r5], #4
   11d58:	mov	r2, r9
   11d5c:	mov	r1, r8
   11d60:	mov	r0, r7
   11d64:	blx	r3
   11d68:	cmp	r6, r4
   11d6c:	bne	11d50 <__libc_csu_init@@Base+0x34>
   11d70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d74:	ldrdeq	r1, [r1], -ip
   11d78:	ldrdeq	r1, [r1], -r4

00011d7c <__libc_csu_fini@@Base>:
   11d7c:	bx	lr

Disassembly of section .fini:

00011d80 <.fini>:
   11d80:	push	{r3, lr}
   11d84:	pop	{r3, pc}
