
../repos/charybdis/extensions/.libs/override.so:     file format elf32-littlearm


Disassembly of section .init:

00000620 <_init>:
 620:	push	{r3, lr}
 624:	bl	700 <call_weak_fn>
 628:	pop	{r3, pc}

Disassembly of section .plt:

0000062c <.plt>:
 62c:	push	{lr}		; (str lr, [sp, #-4]!)
 630:	ldr	lr, [pc, #4]	; 63c <.plt+0x10>
 634:	add	lr, pc, lr
 638:	ldr	pc, [lr, #8]!
 63c:	.word	0x000119c4

00000640 <calloc@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #69632	; 0x11000
 648:	ldr	pc, [ip, #2500]!	; 0x9c4

0000064c <rb_current_time@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #69632	; 0x11000
 654:	ldr	pc, [ip, #2492]!	; 0x9bc

00000658 <rb_event_add@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #69632	; 0x11000
 660:	ldr	pc, [ip, #2484]!	; 0x9b4

00000664 <__cxa_finalize@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #69632	; 0x11000
 66c:	ldr	pc, [ip, #2476]!	; 0x9ac

00000670 <rb_event_delete@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2468]!	; 0x9a4

0000067c <free@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2460]!	; 0x99c

00000688 <rb_outofmemory@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #69632	; 0x11000
 690:	ldr	pc, [ip, #2452]!	; 0x994

00000694 <user_mode@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #69632	; 0x11000
 69c:	ldr	pc, [ip, #2444]!	; 0x98c

000006a0 <sendto_realops_snomask@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #69632	; 0x11000
 6a8:	ldr	pc, [ip, #2436]!	; 0x984

000006ac <find_umode_slot@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #69632	; 0x11000
 6b4:	ldr	pc, [ip, #2428]!	; 0x97c

000006b8 <get_oper_name@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2420]!	; 0x974

000006c4 <__gmon_start__@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #69632	; 0x11000
 6cc:	ldr	pc, [ip, #2412]!	; 0x96c

000006d0 <get_channel_access@plt>:
 6d0:	add	ip, pc, #0, 12
 6d4:	add	ip, ip, #69632	; 0x11000
 6d8:	ldr	pc, [ip, #2404]!	; 0x964

000006dc <sendto_one_notice@plt>:
 6dc:	add	ip, pc, #0, 12
 6e0:	add	ip, ip, #69632	; 0x11000
 6e4:	ldr	pc, [ip, #2396]!	; 0x95c

000006e8 <privilegeset_in_set@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #69632	; 0x11000
 6f0:	ldr	pc, [ip, #2388]!	; 0x954

000006f4 <construct_umodebuf@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #69632	; 0x11000
 6fc:	ldr	pc, [ip, #2380]!	; 0x94c

Disassembly of section .text:

00000700 <call_weak_fn>:
     700:	ldr	r3, [pc, #20]	; 71c <call_weak_fn+0x1c>
     704:	ldr	r2, [pc, #20]	; 720 <call_weak_fn+0x20>
     708:	add	r3, pc, r3
     70c:	ldr	r2, [r3, r2]
     710:	cmp	r2, #0
     714:	bxeq	lr
     718:	b	6c4 <__gmon_start__@plt>
     71c:	.word	0x000118f0
     720:	.word	0x00000060

00000724 <deregister_tm_clones>:
     724:	ldr	r0, [pc, #44]	; 758 <deregister_tm_clones+0x34>
     728:	ldr	r3, [pc, #44]	; 75c <deregister_tm_clones+0x38>
     72c:	add	r0, pc, r0
     730:	add	r3, pc, r3
     734:	cmp	r3, r0
     738:	ldr	r3, [pc, #32]	; 760 <deregister_tm_clones+0x3c>
     73c:	add	r3, pc, r3
     740:	bxeq	lr
     744:	ldr	r2, [pc, #24]	; 764 <deregister_tm_clones+0x40>
     748:	ldr	r3, [r3, r2]
     74c:	cmp	r3, #0
     750:	bxeq	lr
     754:	bx	r3
     758:	.word	0x000119b8
     75c:	.word	0x000119b4
     760:	.word	0x000118bc
     764:	.word	0x00000054

00000768 <register_tm_clones>:
     768:	ldr	r0, [pc, #56]	; 7a8 <register_tm_clones+0x40>
     76c:	ldr	r3, [pc, #56]	; 7ac <register_tm_clones+0x44>
     770:	add	r0, pc, r0
     774:	add	r3, pc, r3
     778:	sub	r1, r3, r0
     77c:	ldr	r3, [pc, #44]	; 7b0 <register_tm_clones+0x48>
     780:	asr	r1, r1, #2
     784:	add	r3, pc, r3
     788:	add	r1, r1, r1, lsr #31
     78c:	asrs	r1, r1, #1
     790:	bxeq	lr
     794:	ldr	r2, [pc, #24]	; 7b4 <register_tm_clones+0x4c>
     798:	ldr	r3, [r3, r2]
     79c:	cmp	r3, #0
     7a0:	bxeq	lr
     7a4:	bx	r3
     7a8:	.word	0x00011974
     7ac:	.word	0x00011970
     7b0:	.word	0x00011874
     7b4:	.word	0x00000068

000007b8 <__do_global_dtors_aux>:
     7b8:	ldr	r3, [pc, #76]	; 80c <__do_global_dtors_aux+0x54>
     7bc:	ldr	r2, [pc, #76]	; 810 <__do_global_dtors_aux+0x58>
     7c0:	add	r3, pc, r3
     7c4:	add	r2, pc, r2
     7c8:	ldrb	r3, [r3]
     7cc:	cmp	r3, #0
     7d0:	bxne	lr
     7d4:	ldr	r3, [pc, #56]	; 814 <__do_global_dtors_aux+0x5c>
     7d8:	push	{r4, lr}
     7dc:	ldr	r3, [r2, r3]
     7e0:	cmp	r3, #0
     7e4:	beq	7f4 <__do_global_dtors_aux+0x3c>
     7e8:	ldr	r3, [pc, #40]	; 818 <__do_global_dtors_aux+0x60>
     7ec:	ldr	r0, [pc, r3]
     7f0:	bl	664 <__cxa_finalize@plt>
     7f4:	bl	724 <deregister_tm_clones>
     7f8:	ldr	r3, [pc, #28]	; 81c <__do_global_dtors_aux+0x64>
     7fc:	mov	r2, #1
     800:	add	r3, pc, r3
     804:	strb	r2, [r3]
     808:	pop	{r4, pc}
     80c:	.word	0x00011924
     810:	.word	0x00011834
     814:	.word	0x0000004c
     818:	.word	0x00011878
     81c:	.word	0x000118e4

00000820 <frame_dummy>:
     820:	b	768 <register_tm_clones>

00000824 <expire_override_deadlines>:
     824:	ldr	r3, [pc, #192]	; 8ec <expire_override_deadlines+0xc8>
     828:	ldr	r2, [pc, #192]	; 8f0 <expire_override_deadlines+0xcc>
     82c:	add	r3, pc, r3
     830:	ldr	r3, [r3, r2]
     834:	ldr	r3, [r3]
     838:	cmp	r3, #0
     83c:	bxeq	lr
     840:	strd	r4, [sp, #-28]!	; 0xffffffe4
     844:	ldr	r4, [r3, #8]
     848:	strd	r6, [sp, #8]
     84c:	strd	r8, [sp, #16]
     850:	mov	r8, #0
     854:	ldr	r9, [pc, #152]	; 8f4 <expire_override_deadlines+0xd0>
     858:	str	lr, [sp, #24]
     85c:	sub	sp, sp, #20
     860:	mov	r7, sp
     864:	add	r9, pc, r9
     868:	ldr	r5, [r3]
     86c:	ldr	r6, [r5, #16]
     870:	bl	64c <rb_current_time@plt>
     874:	cmp	r6, r0
     878:	bgt	8d4 <expire_override_deadlines+0xb0>
     87c:	ldr	r6, [r5, #16]
     880:	bl	64c <rb_current_time@plt>
     884:	cmp	r6, r0
     888:	blt	8a0 <expire_override_deadlines+0x7c>
     88c:	cmp	r4, #0
     890:	mov	r3, r4
     894:	beq	8d4 <expire_override_deadlines+0xb0>
     898:	ldr	r4, [r4, #8]
     89c:	b	868 <expire_override_deadlines+0x44>
     8a0:	ldr	r1, [r5, #12]
     8a4:	mov	r3, r7
     8a8:	mov	r2, #3
     8ac:	str	r9, [sp, #8]
     8b0:	str	r8, [sp, #12]
     8b4:	add	ip, r1, #88	; 0x58
     8b8:	mov	r0, r1
     8bc:	str	ip, [sp]
     8c0:	str	ip, [sp, #4]
     8c4:	bl	694 <user_mode@plt>
     8c8:	cmp	r4, #0
     8cc:	mov	r3, r4
     8d0:	bne	898 <expire_override_deadlines+0x74>
     8d4:	add	sp, sp, #20
     8d8:	ldrd	r4, [sp]
     8dc:	ldrd	r6, [sp, #8]
     8e0:	ldrd	r8, [sp, #16]
     8e4:	add	sp, sp, #24
     8e8:	pop	{pc}		; (ldr pc, [sp], #4)
     8ec:	.word	0x000117cc
     8f0:	.word	0x00000050
     8f4:	.word	0x00000900

000008f8 <_moddeinit>:
     8f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
     8fc:	strd	r6, [sp, #8]
     900:	ldr	r6, [pc, #184]	; 9c0 <_moddeinit+0xc8>
     904:	str	r8, [sp, #16]
     908:	mov	r8, #0
     90c:	ldr	r3, [pc, #176]	; 9c4 <_moddeinit+0xcc>
     910:	str	lr, [sp, #20]
     914:	add	r6, pc, r6
     918:	ldr	r3, [r6, r3]
     91c:	str	r8, [r3, #448]	; 0x1c0
     920:	bl	6f4 <construct_umodebuf@plt>
     924:	ldr	r3, [pc, #156]	; 9c8 <_moddeinit+0xd0>
     928:	ldr	r7, [r6, r3]
     92c:	ldr	r3, [r7]
     930:	cmp	r3, r8
     934:	beq	99c <_moddeinit+0xa4>
     938:	ldr	r4, [r3, #8]
     93c:	mov	r5, r4
     940:	cmp	r4, #0
     944:	ldr	r1, [r3]
     948:	ldr	r2, [r3, #4]
     94c:	strne	r2, [r4, #4]
     950:	ldrne	r2, [r3, #4]
     954:	streq	r2, [r7, #4]
     958:	cmp	r2, #0
     95c:	strne	r4, [r2, #8]
     960:	ldr	r2, [r7, #8]
     964:	str	r8, [r3, #4]
     968:	str	r8, [r3, #8]
     96c:	streq	r4, [r7]
     970:	subs	r0, r1, #0
     974:	sub	r3, r2, #1
     978:	str	r3, [r7, #8]
     97c:	beq	984 <_moddeinit+0x8c>
     980:	bl	67c <free@plt>
     984:	cmp	r4, #0
     988:	mov	r3, r5
     98c:	beq	99c <_moddeinit+0xa4>
     990:	ldr	r4, [r4, #8]
     994:	mov	r5, r4
     998:	b	940 <_moddeinit+0x48>
     99c:	ldr	r3, [pc, #40]	; 9cc <_moddeinit+0xd4>
     9a0:	ldrd	r4, [sp]
     9a4:	ldr	r8, [sp, #16]
     9a8:	ldr	r3, [r6, r3]
     9ac:	ldrd	r6, [sp, #8]
     9b0:	ldr	lr, [sp, #20]
     9b4:	add	sp, sp, #24
     9b8:	ldr	r0, [r3]
     9bc:	b	670 <rb_event_delete@plt>
     9c0:	.word	0x000116e4
     9c4:	.word	0x0000005c
     9c8:	.word	0x00000050
     9cc:	.word	0x00000058

000009d0 <handle_client_exit>:
     9d0:	ldr	r3, [pc, #188]	; a94 <handle_client_exit+0xc4>
     9d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
     9d8:	ldr	r2, [pc, #184]	; a98 <handle_client_exit+0xc8>
     9dc:	strd	r6, [sp, #8]
     9e0:	str	r8, [sp, #16]
     9e4:	add	r3, pc, r3
     9e8:	str	lr, [sp, #20]
     9ec:	ldr	r6, [r3, r2]
     9f0:	ldr	r3, [r6]
     9f4:	cmp	r3, #0
     9f8:	beq	a80 <handle_client_exit+0xb0>
     9fc:	ldr	r5, [r0, #4]
     a00:	mov	r7, #0
     a04:	ldr	r0, [r3]
     a08:	ldr	r4, [r3, #8]
     a0c:	ldr	r2, [r0, #12]
     a10:	cmp	r2, r5
     a14:	beq	a38 <handle_client_exit+0x68>
     a18:	cmp	r4, #0
     a1c:	mov	r3, r4
     a20:	beq	a80 <handle_client_exit+0xb0>
     a24:	ldr	r0, [r3]
     a28:	ldr	r4, [r4, #8]
     a2c:	ldr	r2, [r0, #12]
     a30:	cmp	r2, r5
     a34:	bne	a18 <handle_client_exit+0x48>
     a38:	ldr	r2, [r3, #4]
     a3c:	ldr	r1, [r3, #8]
     a40:	cmp	r1, #0
     a44:	strne	r2, [r1, #4]
     a48:	ldrne	r2, [r3, #4]
     a4c:	streq	r2, [r6, #4]
     a50:	cmp	r2, #0
     a54:	strne	r1, [r2, #8]
     a58:	ldr	r2, [r6, #8]
     a5c:	str	r7, [r3, #4]
     a60:	str	r7, [r3, #8]
     a64:	streq	r1, [r6]
     a68:	sub	r2, r2, #1
     a6c:	str	r2, [r6, #8]
     a70:	bl	67c <free@plt>
     a74:	cmp	r4, #0
     a78:	mov	r3, r4
     a7c:	bne	a24 <handle_client_exit+0x54>
     a80:	ldrd	r4, [sp]
     a84:	ldrd	r6, [sp, #8]
     a88:	ldr	r8, [sp, #16]
     a8c:	add	sp, sp, #20
     a90:	pop	{pc}		; (ldr pc, [sp], #4)
     a94:	.word	0x00011614
     a98:	.word	0x00000050

00000a9c <update_session_deadline.constprop.5>:
     a9c:	ldr	r3, [pc, #248]	; b9c <update_session_deadline.constprop.5+0x100>
     aa0:	strd	r4, [sp, #-16]!
     aa4:	ldr	r2, [pc, #244]	; ba0 <update_session_deadline.constprop.5+0x104>
     aa8:	str	r6, [sp, #8]
     aac:	mov	r6, r0
     ab0:	str	lr, [sp, #12]
     ab4:	add	r3, pc, r3
     ab8:	ldr	r5, [r3, r2]
     abc:	ldr	r3, [r5]
     ac0:	cmp	r3, #0
     ac4:	beq	af8 <update_session_deadline.constprop.5+0x5c>
     ac8:	ldr	r4, [r3]
     acc:	ldr	r2, [r4, #12]
     ad0:	cmp	r0, r2
     ad4:	bne	aec <update_session_deadline.constprop.5+0x50>
     ad8:	b	b10 <update_session_deadline.constprop.5+0x74>
     adc:	ldr	r4, [r3]
     ae0:	ldr	r2, [r4, #12]
     ae4:	cmp	r2, r6
     ae8:	beq	b10 <update_session_deadline.constprop.5+0x74>
     aec:	ldr	r3, [r3, #8]
     af0:	cmp	r3, #0
     af4:	bne	adc <update_session_deadline.constprop.5+0x40>
     af8:	mov	r1, #20
     afc:	mov	r0, #1
     b00:	bl	640 <calloc@plt>
     b04:	subs	r4, r0, #0
     b08:	strne	r6, [r4, #12]
     b0c:	beq	b98 <update_session_deadline.constprop.5+0xfc>
     b10:	bl	64c <rb_current_time@plt>
     b14:	ldr	r3, [r4, #8]
     b18:	add	r0, r0, #1792	; 0x700
     b1c:	add	r0, r0, #8
     b20:	str	r0, [r4, #16]
     b24:	cmp	r3, #0
     b28:	beq	b7c <update_session_deadline.constprop.5+0xe0>
     b2c:	ldr	r2, [r4, #4]
     b30:	str	r2, [r3, #4]
     b34:	ldr	r2, [r4, #4]
     b38:	cmp	r2, #0
     b3c:	beq	b48 <update_session_deadline.constprop.5+0xac>
     b40:	str	r3, [r2, #8]
     b44:	ldr	r3, [r5]
     b48:	mov	r2, #0
     b4c:	cmp	r3, r2
     b50:	ldr	r1, [r5, #8]
     b54:	str	r4, [r4]
     b58:	strd	r2, [r4, #4]
     b5c:	strne	r4, [r3, #4]
     b60:	beq	b88 <update_session_deadline.constprop.5+0xec>
     b64:	ldr	r6, [sp, #8]
     b68:	str	r4, [r5]
     b6c:	str	r1, [r5, #8]
     b70:	ldrd	r4, [sp]
     b74:	add	sp, sp, #12
     b78:	pop	{pc}		; (ldr pc, [sp], #4)
     b7c:	ldr	r2, [r4, #4]
     b80:	str	r2, [r5, #4]
     b84:	b	b38 <update_session_deadline.constprop.5+0x9c>
     b88:	ldr	r3, [r5, #4]
     b8c:	cmp	r3, #0
     b90:	streq	r4, [r5, #4]
     b94:	b	b64 <update_session_deadline.constprop.5+0xc8>
     b98:	bl	688 <rb_outofmemory@plt>
     b9c:	.word	0x00011544
     ba0:	.word	0x00000050

00000ba4 <_modinit>:
     ba4:	strd	r4, [sp, #-16]!
     ba8:	ldr	r5, [pc, #184]	; c68 <_modinit+0xc4>
     bac:	str	r6, [sp, #8]
     bb0:	str	lr, [sp, #12]
     bb4:	bl	6ac <find_umode_slot@plt>
     bb8:	ldr	r3, [pc, #172]	; c6c <_modinit+0xc8>
     bbc:	add	r5, pc, r5
     bc0:	ldr	r6, [r5, r3]
     bc4:	str	r0, [r6, #448]	; 0x1c0
     bc8:	bl	6f4 <construct_umodebuf@plt>
     bcc:	ldr	r3, [pc, #156]	; c70 <_modinit+0xcc>
     bd0:	ldr	r3, [r5, r3]
     bd4:	ldr	r4, [r3]
     bd8:	cmp	r4, #0
     bdc:	bne	bf0 <_modinit+0x4c>
     be0:	b	c2c <_modinit+0x88>
     be4:	ldr	r4, [r4, #8]
     be8:	cmp	r4, #0
     bec:	beq	c2c <_modinit+0x88>
     bf0:	ldr	r0, [r4]
     bf4:	ldrh	r3, [r0, #80]	; 0x50
     bf8:	cmp	r3, #64	; 0x40
     bfc:	bne	be4 <_modinit+0x40>
     c00:	ldr	r3, [r0, #24]
     c04:	cmp	r3, #0
     c08:	beq	be4 <_modinit+0x40>
     c0c:	ldr	r2, [r0, #56]	; 0x38
     c10:	ldr	r3, [r6, #448]	; 0x1c0
     c14:	tst	r2, r3
     c18:	beq	be4 <_modinit+0x40>
     c1c:	bl	a9c <update_session_deadline.constprop.5>
     c20:	ldr	r4, [r4, #8]
     c24:	cmp	r4, #0
     c28:	bne	bf0 <_modinit+0x4c>
     c2c:	ldr	r1, [pc, #64]	; c74 <_modinit+0xd0>
     c30:	mov	r3, #60	; 0x3c
     c34:	mov	r2, #0
     c38:	ldr	r0, [pc, #56]	; c78 <_modinit+0xd4>
     c3c:	add	r1, pc, r1
     c40:	add	r0, pc, r0
     c44:	bl	658 <rb_event_add@plt>
     c48:	ldr	r3, [pc, #44]	; c7c <_modinit+0xd8>
     c4c:	ldr	r6, [sp, #8]
     c50:	ldr	r3, [r5, r3]
     c54:	ldrd	r4, [sp]
     c58:	add	sp, sp, #12
     c5c:	str	r0, [r3]
     c60:	mov	r0, #0
     c64:	pop	{pc}		; (ldr pc, [sp], #4)
     c68:	.word	0x0001143c
     c6c:	.word	0x0000005c
     c70:	.word	0x00000064
     c74:	.word	0xfffffbe0
     c78:	.word	0x00000528
     c7c:	.word	0x00000058

00000c80 <check_umode_change>:
     c80:	strd	r4, [sp, #-24]!	; 0xffffffe8
     c84:	mov	r3, #0
     c88:	ldr	r4, [r0]
     c8c:	ldr	r1, [pc, #384]	; e14 <check_umode_change+0x194>
     c90:	ldr	ip, [r4, #64]	; 0x40
     c94:	strd	r6, [sp, #8]
     c98:	add	r1, pc, r1
     c9c:	str	r8, [sp, #16]
     ca0:	str	lr, [sp, #20]
     ca4:	and	r2, ip, #8192	; 0x2000
     ca8:	orrs	r3, r2, r3
     cac:	beq	cbc <check_umode_change+0x3c>
     cb0:	ldrh	r3, [r4, #80]	; 0x50
     cb4:	cmp	r3, #64	; 0x40
     cb8:	beq	cd0 <check_umode_change+0x50>
     cbc:	ldrd	r4, [sp]
     cc0:	ldrd	r6, [sp, #8]
     cc4:	ldr	r8, [sp, #16]
     cc8:	add	sp, sp, #20
     ccc:	pop	{pc}		; (ldr pc, [sp], #4)
     cd0:	ldr	ip, [pc, #320]	; e18 <check_umode_change+0x198>
     cd4:	ldr	r2, [r0, #4]
     cd8:	ldr	r3, [r4, #56]	; 0x38
     cdc:	ldr	r7, [r1, ip]
     ce0:	tst	r2, #4096	; 0x1000
     ce4:	ldr	r6, [r7, #448]	; 0x1c0
     ce8:	beq	d00 <check_umode_change+0x80>
     cec:	tst	r3, #4096	; 0x1000
     cf0:	bne	d00 <check_umode_change+0x80>
     cf4:	bic	r3, r3, r6
     cf8:	str	r3, [r4, #56]	; 0x38
     cfc:	ldr	r6, [r7, #448]	; 0x1c0
     d00:	eor	r2, r2, r3
     d04:	ands	r5, r6, r3
     d08:	and	r6, r6, r2
     d0c:	bne	da0 <check_umode_change+0x120>
     d10:	cmp	r6, #0
     d14:	beq	cbc <check_umode_change+0x3c>
     d18:	ldr	r3, [pc, #252]	; e1c <check_umode_change+0x19c>
     d1c:	ldr	r7, [r1, r3]
     d20:	ldr	r3, [r7]
     d24:	cmp	r3, #0
     d28:	beq	cbc <check_umode_change+0x3c>
     d2c:	ldr	r0, [r3]
     d30:	ldr	r6, [r3, #8]
     d34:	ldr	r2, [r0, #12]
     d38:	cmp	r2, r4
     d3c:	beq	d60 <check_umode_change+0xe0>
     d40:	cmp	r6, #0
     d44:	mov	r3, r6
     d48:	beq	cbc <check_umode_change+0x3c>
     d4c:	ldr	r0, [r3]
     d50:	ldr	r6, [r6, #8]
     d54:	ldr	r2, [r0, #12]
     d58:	cmp	r2, r4
     d5c:	bne	d40 <check_umode_change+0xc0>
     d60:	ldr	r2, [r3, #4]
     d64:	ldr	r1, [r3, #8]
     d68:	cmp	r1, #0
     d6c:	strne	r2, [r1, #4]
     d70:	ldrne	r2, [r3, #4]
     d74:	streq	r2, [r7, #4]
     d78:	cmp	r2, #0
     d7c:	strne	r1, [r2, #8]
     d80:	ldr	r2, [r7, #8]
     d84:	str	r5, [r3, #4]
     d88:	str	r5, [r3, #8]
     d8c:	streq	r1, [r7]
     d90:	sub	r2, r2, #1
     d94:	str	r2, [r7, #8]
     d98:	bl	67c <free@plt>
     d9c:	b	d40 <check_umode_change+0xc0>
     da0:	ldr	r3, [r4, #24]
     da4:	cmp	r3, #0
     da8:	beq	df0 <check_umode_change+0x170>
     dac:	ldr	r0, [r3, #36]	; 0x24
     db0:	cmp	r0, #0
     db4:	beq	df0 <check_umode_change+0x170>
     db8:	ldr	r1, [pc, #96]	; e20 <check_umode_change+0x1a0>
     dbc:	add	r1, pc, r1
     dc0:	bl	6e8 <privilegeset_in_set@plt>
     dc4:	cmp	r0, #0
     dc8:	beq	df0 <check_umode_change+0x170>
     dcc:	cmp	r6, #0
     dd0:	beq	cbc <check_umode_change+0x3c>
     dd4:	mov	r0, r4
     dd8:	ldrd	r4, [sp]
     ddc:	ldrd	r6, [sp, #8]
     de0:	ldr	r8, [sp, #16]
     de4:	ldr	lr, [sp, #20]
     de8:	add	sp, sp, #24
     dec:	b	a9c <update_session_deadline.constprop.5>
     df0:	ldr	r1, [pc, #44]	; e24 <check_umode_change+0x1a4>
     df4:	mov	r0, r4
     df8:	add	r1, pc, r1
     dfc:	bl	6dc <sendto_one_notice@plt>
     e00:	ldr	r3, [r4, #56]	; 0x38
     e04:	ldr	r2, [r7, #448]	; 0x1c0
     e08:	bic	r3, r3, r2
     e0c:	str	r3, [r4, #56]	; 0x38
     e10:	b	cbc <check_umode_change+0x3c>
     e14:	.word	0x00011360
     e18:	.word	0x0000005c
     e1c:	.word	0x00000050
     e20:	.word	0x000003f8
     e24:	.word	0x0000038c

00000e28 <hack_can_kick>:
     e28:	mov	r3, #0
     e2c:	strd	r4, [sp, #-12]!
     e30:	mov	r4, r0
     e34:	ldr	r5, [pc, #156]	; ed8 <hack_can_kick+0xb0>
     e38:	str	lr, [sp, #8]
     e3c:	sub	sp, sp, #12
     e40:	str	r3, [sp]
     e44:	ldr	r0, [r0]
     e48:	add	r5, pc, r5
     e4c:	ldmib	r4, {r1, r2}
     e50:	ldr	r3, [r4, #20]
     e54:	bl	6d0 <get_channel_access@plt>
     e58:	cmp	r0, #4
     e5c:	bne	e7c <hack_can_kick+0x54>
     e60:	ldr	r3, [pc, #116]	; edc <hack_can_kick+0xb4>
     e64:	ldr	r0, [r4]
     e68:	ldr	r3, [r5, r3]
     e6c:	ldr	r2, [r0, #56]	; 0x38
     e70:	ldr	r3, [r3, #448]	; 0x1c0
     e74:	tst	r2, r3
     e78:	bne	e8c <hack_can_kick+0x64>
     e7c:	add	sp, sp, #12
     e80:	ldrd	r4, [sp]
     e84:	add	sp, sp, #8
     e88:	pop	{pc}		; (ldr pc, [sp], #4)
     e8c:	bl	a9c <update_session_deadline.constprop.5>
     e90:	ldr	r0, [r4]
     e94:	bl	6b8 <get_oper_name@plt>
     e98:	ldr	lr, [r4, #4]
     e9c:	mov	r1, #256	; 0x100
     ea0:	mov	r3, r0
     ea4:	mov	r0, r1
     ea8:	ldr	ip, [r4, #12]
     eac:	ldr	r2, [pc, #44]	; ee0 <hack_can_kick+0xb8>
     eb0:	add	ip, ip, #88	; 0x58
     eb4:	str	ip, [sp, #4]
     eb8:	add	r2, pc, r2
     ebc:	ldr	ip, [lr, #236]	; 0xec
     ec0:	str	ip, [sp]
     ec4:	bl	6a0 <sendto_realops_snomask@plt>
     ec8:	add	sp, sp, #12
     ecc:	ldrd	r4, [sp]
     ed0:	add	sp, sp, #8
     ed4:	pop	{pc}		; (ldr pc, [sp], #4)
     ed8:	.word	0x000111b0
     edc:	.word	0x0000005c
     ee0:	.word	0x0000030c

00000ee4 <hack_channel_access>:
     ee4:	ldr	r2, [r0, #20]
     ee8:	ldr	r3, [pc, #160]	; f90 <hack_channel_access+0xac>
     eec:	cmp	r2, #0
     ef0:	add	r3, pc, r3
     ef4:	bxeq	lr
     ef8:	ldr	r2, [r0, #16]
     efc:	cmp	r2, #2
     f00:	bxeq	lr
     f04:	ldr	r2, [pc, #136]	; f94 <hack_channel_access+0xb0>
     f08:	ldr	r1, [r0]
     f0c:	ldr	r3, [r3, r2]
     f10:	ldr	r2, [r1, #56]	; 0x38
     f14:	ldr	r3, [r3, #448]	; 0x1c0
     f18:	tst	r2, r3
     f1c:	bxeq	lr
     f20:	str	r4, [sp, #-8]!
     f24:	mov	r4, r0
     f28:	mov	r0, r1
     f2c:	str	lr, [sp, #4]
     f30:	sub	sp, sp, #8
     f34:	bl	a9c <update_session_deadline.constprop.5>
     f38:	ldr	r3, [r4, #24]
     f3c:	mov	r2, #4
     f40:	str	r2, [r4, #16]
     f44:	cmp	r3, #0
     f48:	beq	f80 <hack_channel_access+0x9c>
     f4c:	ldr	r0, [r4]
     f50:	bl	6b8 <get_oper_name@plt>
     f54:	ldr	ip, [r4, #4]
     f58:	mov	r1, #256	; 0x100
     f5c:	mov	r3, r0
     f60:	mov	r0, r1
     f64:	ldr	lr, [r4, #24]
     f68:	ldr	r2, [pc, #40]	; f98 <hack_channel_access+0xb4>
     f6c:	str	lr, [sp, #4]
     f70:	ldr	ip, [ip, #236]	; 0xec
     f74:	add	r2, pc, r2
     f78:	str	ip, [sp]
     f7c:	bl	6a0 <sendto_realops_snomask@plt>
     f80:	add	sp, sp, #8
     f84:	ldr	r4, [sp]
     f88:	add	sp, sp, #4
     f8c:	pop	{pc}		; (ldr pc, [sp], #4)
     f90:	.word	0x00011108
     f94:	.word	0x0000005c
     f98:	.word	0x0000027c

00000f9c <hack_can_join>:
     f9c:	ldr	r2, [r0, #8]
     fa0:	ldr	r3, [pc, #128]	; 1028 <hack_can_join+0x8c>
     fa4:	cmp	r2, #0
     fa8:	add	r3, pc, r3
     fac:	bxeq	lr
     fb0:	ldr	r2, [pc, #116]	; 102c <hack_can_join+0x90>
     fb4:	ldr	r1, [r0]
     fb8:	ldr	r3, [r3, r2]
     fbc:	ldr	r2, [r1, #56]	; 0x38
     fc0:	ldr	r3, [r3, #448]	; 0x1c0
     fc4:	tst	r2, r3
     fc8:	bxeq	lr
     fcc:	str	r4, [sp, #-8]!
     fd0:	mov	r4, r0
     fd4:	mov	r0, r1
     fd8:	str	lr, [sp, #4]
     fdc:	sub	sp, sp, #8
     fe0:	bl	a9c <update_session_deadline.constprop.5>
     fe4:	mov	r3, #0
     fe8:	ldr	r0, [r4]
     fec:	str	r3, [r4, #8]
     ff0:	bl	6b8 <get_oper_name@plt>
     ff4:	ldr	ip, [r4, #4]
     ff8:	mov	r1, #256	; 0x100
     ffc:	mov	r3, r0
    1000:	mov	r0, r1
    1004:	ldr	r2, [pc, #36]	; 1030 <hack_can_join+0x94>
    1008:	ldr	ip, [ip, #236]	; 0xec
    100c:	add	r2, pc, r2
    1010:	str	ip, [sp]
    1014:	bl	6a0 <sendto_realops_snomask@plt>
    1018:	add	sp, sp, #8
    101c:	ldr	r4, [sp]
    1020:	add	sp, sp, #4
    1024:	pop	{pc}		; (ldr pc, [sp], #4)
    1028:	.word	0x00011050
    102c:	.word	0x0000005c
    1030:	.word	0x00000218

00001034 <hack_can_send>:
    1034:	ldr	r3, [r0, #20]
    1038:	ldr	r2, [pc, #180]	; 10f4 <hack_can_send+0xc0>
    103c:	cmp	r3, #0
    1040:	add	r2, pc, r2
    1044:	bxeq	lr
    1048:	ldr	r3, [r0, #16]
    104c:	sub	r3, r3, #1
    1050:	cmp	r3, #1
    1054:	bxls	lr
    1058:	ldr	r3, [pc, #152]	; 10f8 <hack_can_send+0xc4>
    105c:	ldr	r1, [r0]
    1060:	ldr	r3, [r2, r3]
    1064:	ldr	r2, [r1, #56]	; 0x38
    1068:	ldr	r3, [r3, #448]	; 0x1c0
    106c:	tst	r2, r3
    1070:	bxeq	lr
    1074:	mov	r3, #0
    1078:	str	r4, [sp, #-8]!
    107c:	ldr	ip, [r1, #64]	; 0x40
    1080:	str	lr, [sp, #4]
    1084:	mov	lr, #1
    1088:	sub	sp, sp, #8
    108c:	str	lr, [r0, #16]
    1090:	and	r2, ip, #8192	; 0x2000
    1094:	orrs	r3, r2, r3
    1098:	beq	10a8 <hack_can_send+0x74>
    109c:	ldrh	r3, [r1, #80]	; 0x50
    10a0:	cmp	r3, #64	; 0x40
    10a4:	beq	10b8 <hack_can_send+0x84>
    10a8:	add	sp, sp, #8
    10ac:	ldr	r4, [sp]
    10b0:	add	sp, sp, #4
    10b4:	pop	{pc}		; (ldr pc, [sp], #4)
    10b8:	mov	r4, r0
    10bc:	mov	r0, r1
    10c0:	bl	a9c <update_session_deadline.constprop.5>
    10c4:	ldr	r0, [r4]
    10c8:	bl	6b8 <get_oper_name@plt>
    10cc:	ldr	ip, [r4, #4]
    10d0:	mov	r1, #256	; 0x100
    10d4:	mov	r3, r0
    10d8:	mov	r0, r1
    10dc:	ldr	r2, [pc, #24]	; 10fc <hack_can_send+0xc8>
    10e0:	ldr	ip, [ip, #236]	; 0xec
    10e4:	add	r2, pc, r2
    10e8:	str	ip, [sp]
    10ec:	bl	6a0 <sendto_realops_snomask@plt>
    10f0:	b	10a8 <hack_can_send+0x74>
    10f4:	.word	0x00010fb8
    10f8:	.word	0x0000005c
    10fc:	.word	0x00000170

Disassembly of section .fini:

00001100 <_fini>:
    1100:	push	{r3, lr}
    1104:	pop	{r3, pc}
