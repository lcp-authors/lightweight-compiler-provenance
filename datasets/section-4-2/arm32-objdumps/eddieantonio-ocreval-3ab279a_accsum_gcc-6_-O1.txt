
../repos/eddieantonio-ocreval-3ab279a/accsum/accsum:     file format elf32-littlearm


Disassembly of section .init:

0001089c <.init>:
   1089c:	push	{r3, lr}
   108a0:	bl	10a6c <getc@plt+0x48>
   108a4:	pop	{r3, pc}

Disassembly of section .plt:

000108a8 <calloc@plt-0x14>:
   108a8:	push	{lr}		; (str lr, [sp, #-4]!)
   108ac:	ldr	lr, [pc, #4]	; 108b8 <calloc@plt-0x4>
   108b0:	add	lr, pc, lr
   108b4:	ldr	pc, [lr, #8]!
   108b8:	andeq	r3, r1, r8, asr #14

000108bc <calloc@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #77824	; 0x13000
   108c4:	ldr	pc, [ip, #1864]!	; 0x748

000108c8 <strcmp@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #77824	; 0x13000
   108d0:	ldr	pc, [ip, #1856]!	; 0x740

000108d4 <fopen@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #77824	; 0x13000
   108dc:	ldr	pc, [ip, #1848]!	; 0x738

000108e0 <free@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #77824	; 0x13000
   108e8:	ldr	pc, [ip, #1840]!	; 0x730

000108ec <utf8proc_get_property@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #77824	; 0x13000
   108f4:	ldr	pc, [ip, #1832]!	; 0x728

000108f8 <fgets@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #77824	; 0x13000
   10900:	ldr	pc, [ip, #1824]!	; 0x720

00010904 <utf8proc_encode_char@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #77824	; 0x13000
   1090c:	ldr	pc, [ip, #1816]!	; 0x718

00010910 <strdup@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #77824	; 0x13000
   10918:	ldr	pc, [ip, #1808]!	; 0x710

0001091c <rewind@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #77824	; 0x13000
   10924:	ldr	pc, [ip, #1800]!	; 0x708

00010928 <unlink@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #77824	; 0x13000
   10930:	ldr	pc, [ip, #1792]!	; 0x700

00010934 <utf8proc_tolower@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #77824	; 0x13000
   1093c:	ldr	pc, [ip, #1784]!	; 0x6f8

00010940 <__xstat@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #77824	; 0x13000
   10948:	ldr	pc, [ip, #1776]!	; 0x6f0

0001094c <fwrite@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #77824	; 0x13000
   10954:	ldr	pc, [ip, #1768]!	; 0x6e8

00010958 <fread@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #77824	; 0x13000
   10960:	ldr	pc, [ip, #1760]!	; 0x6e0

00010964 <utf8proc_iterate@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #77824	; 0x13000
   1096c:	ldr	pc, [ip, #1752]!	; 0x6d8

00010970 <__libc_start_main@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #77824	; 0x13000
   10978:	ldr	pc, [ip, #1744]!	; 0x6d0

0001097c <__sysv_signal@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #77824	; 0x13000
   10984:	ldr	pc, [ip, #1736]!	; 0x6c8

00010988 <__gmon_start__@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #77824	; 0x13000
   10990:	ldr	pc, [ip, #1728]!	; 0x6c0

00010994 <getpid@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #77824	; 0x13000
   1099c:	ldr	pc, [ip, #1720]!	; 0x6b8

000109a0 <exit@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #77824	; 0x13000
   109a8:	ldr	pc, [ip, #1712]!	; 0x6b0

000109ac <utf8proc_category@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #77824	; 0x13000
   109b4:	ldr	pc, [ip, #1704]!	; 0x6a8

000109b8 <strlen@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #77824	; 0x13000
   109c0:	ldr	pc, [ip, #1696]!	; 0x6a0

000109c4 <fprintf@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #77824	; 0x13000
   109cc:	ldr	pc, [ip, #1688]!	; 0x698

000109d0 <__isoc99_sscanf@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #77824	; 0x13000
   109d8:	ldr	pc, [ip, #1680]!	; 0x690

000109dc <fclose@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #77824	; 0x13000
   109e4:	ldr	pc, [ip, #1672]!	; 0x688

000109e8 <sprintf@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #77824	; 0x13000
   109f0:	ldr	pc, [ip, #1664]!	; 0x680

000109f4 <utf8proc_errmsg@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #77824	; 0x13000
   109fc:	ldr	pc, [ip, #1656]!	; 0x678

00010a00 <fputs@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #77824	; 0x13000
   10a08:	ldr	pc, [ip, #1648]!	; 0x670

00010a0c <strncmp@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #77824	; 0x13000
   10a14:	ldr	pc, [ip, #1640]!	; 0x668

00010a18 <abort@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #77824	; 0x13000
   10a20:	ldr	pc, [ip, #1632]!	; 0x660

00010a24 <getc@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #77824	; 0x13000
   10a2c:	ldr	pc, [ip, #1624]!	; 0x658

Disassembly of section .text:

00010a30 <error@@Base-0x12f4>:
   10a30:	mov	fp, #0
   10a34:	mov	lr, #0
   10a38:	pop	{r1}		; (ldr r1, [sp], #4)
   10a3c:	mov	r2, sp
   10a40:	push	{r2}		; (str r2, [sp, #-4]!)
   10a44:	push	{r0}		; (str r0, [sp, #-4]!)
   10a48:	ldr	ip, [pc, #16]	; 10a60 <getc@plt+0x3c>
   10a4c:	push	{ip}		; (str ip, [sp, #-4]!)
   10a50:	ldr	r0, [pc, #12]	; 10a64 <getc@plt+0x40>
   10a54:	ldr	r3, [pc, #12]	; 10a68 <getc@plt+0x44>
   10a58:	bl	10970 <__libc_start_main@plt>
   10a5c:	bl	10a18 <abort@plt>
   10a60:	andeq	r2, r1, r8, lsl r9
   10a64:	andeq	r0, r1, r8, asr fp
   10a68:			; <UNDEFINED> instruction: 0x000128b8
   10a6c:	ldr	r3, [pc, #20]	; 10a88 <getc@plt+0x64>
   10a70:	ldr	r2, [pc, #20]	; 10a8c <getc@plt+0x68>
   10a74:	add	r3, pc, r3
   10a78:	ldr	r2, [r3, r2]
   10a7c:	cmp	r2, #0
   10a80:	bxeq	lr
   10a84:	b	10988 <__gmon_start__@plt>
   10a88:	andeq	r3, r1, r4, lsl #11
   10a8c:	andeq	r0, r0, r8, lsl #1
   10a90:	ldr	r3, [pc, #28]	; 10ab4 <getc@plt+0x90>
   10a94:	ldr	r0, [pc, #28]	; 10ab8 <getc@plt+0x94>
   10a98:	sub	r3, r3, r0
   10a9c:	cmp	r3, #6
   10aa0:	bxls	lr
   10aa4:	ldr	r3, [pc, #16]	; 10abc <getc@plt+0x98>
   10aa8:	cmp	r3, #0
   10aac:	bxeq	lr
   10ab0:	bx	r3
   10ab4:	muleq	r2, pc, r0	; <UNPREDICTABLE>
   10ab8:	muleq	r2, ip, r0
   10abc:	andeq	r0, r0, r0
   10ac0:	ldr	r1, [pc, #36]	; 10aec <getc@plt+0xc8>
   10ac4:	ldr	r0, [pc, #36]	; 10af0 <getc@plt+0xcc>
   10ac8:	sub	r1, r1, r0
   10acc:	asr	r1, r1, #2
   10ad0:	add	r1, r1, r1, lsr #31
   10ad4:	asrs	r1, r1, #1
   10ad8:	bxeq	lr
   10adc:	ldr	r3, [pc, #16]	; 10af4 <getc@plt+0xd0>
   10ae0:	cmp	r3, #0
   10ae4:	bxeq	lr
   10ae8:	bx	r3
   10aec:	muleq	r2, ip, r0
   10af0:	muleq	r2, ip, r0
   10af4:	andeq	r0, r0, r0
   10af8:	push	{r4, lr}
   10afc:	ldr	r4, [pc, #24]	; 10b1c <getc@plt+0xf8>
   10b00:	ldrb	r3, [r4]
   10b04:	cmp	r3, #0
   10b08:	popne	{r4, pc}
   10b0c:	bl	10a90 <getc@plt+0x6c>
   10b10:	mov	r3, #1
   10b14:	strb	r3, [r4]
   10b18:	pop	{r4, pc}
   10b1c:	strheq	r4, [r2], -r0
   10b20:	ldr	r0, [pc, #40]	; 10b50 <getc@plt+0x12c>
   10b24:	ldr	r3, [r0]
   10b28:	cmp	r3, #0
   10b2c:	bne	10b34 <getc@plt+0x110>
   10b30:	b	10ac0 <getc@plt+0x9c>
   10b34:	ldr	r3, [pc, #24]	; 10b54 <getc@plt+0x130>
   10b38:	cmp	r3, #0
   10b3c:	beq	10b30 <getc@plt+0x10c>
   10b40:	push	{r4, lr}
   10b44:	blx	r3
   10b48:	pop	{r4, lr}
   10b4c:	b	10ac0 <getc@plt+0x9c>
   10b50:	andeq	r3, r2, r4, lsl #28
   10b54:	andeq	r0, r0, r0
   10b58:	push	{r4, r5, r6, lr}
   10b5c:	sub	sp, sp, #8
   10b60:	add	ip, sp, #8
   10b64:	str	r0, [ip, #-4]!
   10b68:	mov	r5, r1
   10b6c:	mov	r3, #0
   10b70:	ldr	r2, [pc, #88]	; 10bd0 <getc@plt+0x1ac>
   10b74:	mov	r0, ip
   10b78:	bl	11e64 <error@@Base+0x140>
   10b7c:	ldr	r3, [sp, #4]
   10b80:	cmp	r3, #1
   10b84:	ble	10bc8 <getc@plt+0x1a4>
   10b88:	cmp	r3, #0
   10b8c:	ble	10bb8 <getc@plt+0x194>
   10b90:	sub	r5, r5, #4
   10b94:	mov	r4, #0
   10b98:	ldr	r6, [pc, #52]	; 10bd4 <getc@plt+0x1b0>
   10b9c:	ldr	r1, [r5, #4]!
   10ba0:	mov	r0, r6
   10ba4:	bl	10f5c <getc@plt+0x538>
   10ba8:	add	r4, r4, #1
   10bac:	ldr	r3, [sp, #4]
   10bb0:	cmp	r3, r4
   10bb4:	bgt	10b9c <getc@plt+0x178>
   10bb8:	mov	r1, #0
   10bbc:	ldr	r0, [pc, #16]	; 10bd4 <getc@plt+0x1b0>
   10bc0:	bl	11260 <getc@plt+0x83c>
   10bc4:	bl	11ccc <getc@plt+0x12a8>
   10bc8:	ldr	r0, [pc, #8]	; 10bd8 <getc@plt+0x1b4>
   10bcc:	bl	11d24 <error@@Base>
   10bd0:	andeq	r2, r1, r8, lsr #18
   10bd4:	andseq	r4, r3, r8, lsr #10
   10bd8:	andeq	r2, r1, r0, ror #18
   10bdc:	andeq	r0, r0, r0
   10be0:	push	{r4, lr}
   10be4:	mov	r2, r0
   10be8:	mov	r1, #99	; 0x63
   10bec:	ldr	r0, [pc, #12]	; 10c00 <getc@plt+0x1dc>
   10bf0:	bl	108f8 <fgets@plt>
   10bf4:	adds	r0, r0, #0
   10bf8:	movne	r0, #1
   10bfc:	pop	{r4, pc}
   10c00:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   10c04:	push	{r4, r5, r6, lr}
   10c08:	mov	r4, r1
   10c0c:	mov	r5, r2
   10c10:	bl	10be0 <getc@plt+0x1bc>
   10c14:	cmp	r0, #0
   10c18:	popeq	{r4, r5, r6, pc}
   10c1c:	mov	r2, r4
   10c20:	ldr	r1, [pc, #32]	; 10c48 <getc@plt+0x224>
   10c24:	ldr	r0, [pc, #32]	; 10c4c <getc@plt+0x228>
   10c28:	bl	109d0 <__isoc99_sscanf@plt>
   10c2c:	cmp	r0, #1
   10c30:	ldreq	r3, [r5]
   10c34:	ldreq	r2, [r4]
   10c38:	addeq	r3, r3, r2
   10c3c:	streq	r3, [r5]
   10c40:	movne	r0, #0
   10c44:	pop	{r4, r5, r6, pc}
   10c48:	andeq	r2, r1, r4, lsl #19
   10c4c:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   10c50:	push	{r4, lr}
   10c54:	sub	sp, sp, #24
   10c58:	mov	r4, r1
   10c5c:	bl	10be0 <getc@plt+0x1bc>
   10c60:	cmp	r0, #0
   10c64:	bne	10c70 <getc@plt+0x24c>
   10c68:	add	sp, sp, #24
   10c6c:	pop	{r4, pc}
   10c70:	add	r3, sp, #20
   10c74:	str	r3, [sp, #4]
   10c78:	add	r3, sp, #16
   10c7c:	str	r3, [sp]
   10c80:	add	r3, sp, #12
   10c84:	add	r2, sp, #8
   10c88:	ldr	r1, [pc, #88]	; 10ce8 <getc@plt+0x2c4>
   10c8c:	ldr	r0, [pc, #88]	; 10cec <getc@plt+0x2c8>
   10c90:	bl	109d0 <__isoc99_sscanf@plt>
   10c94:	cmp	r0, #4
   10c98:	movne	r0, #0
   10c9c:	bne	10c68 <getc@plt+0x244>
   10ca0:	ldr	r3, [r4]
   10ca4:	ldr	r2, [sp, #8]
   10ca8:	add	r3, r3, r2
   10cac:	str	r3, [r4]
   10cb0:	ldr	r3, [r4, #4]
   10cb4:	ldr	r2, [sp, #12]
   10cb8:	add	r3, r3, r2
   10cbc:	str	r3, [r4, #4]
   10cc0:	ldr	r3, [r4, #8]
   10cc4:	ldr	r2, [sp, #16]
   10cc8:	add	r3, r3, r2
   10ccc:	str	r3, [r4, #8]
   10cd0:	ldr	r3, [r4, #12]
   10cd4:	ldr	r2, [sp, #20]
   10cd8:	add	r3, r3, r2
   10cdc:	str	r3, [r4, #12]
   10ce0:	mov	r0, #1
   10ce4:	b	10c68 <getc@plt+0x244>
   10ce8:	andeq	r2, r1, r8, ror r9
   10cec:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   10cf0:	push	{lr}		; (str lr, [sp, #-4]!)
   10cf4:	sub	sp, sp, #20
   10cf8:	ldr	r3, [r1, #4]
   10cfc:	ldr	ip, [r1]
   10d00:	str	r2, [sp, #8]
   10d04:	ldr	r2, [r1, #12]
   10d08:	str	r2, [sp, #4]
   10d0c:	ldr	r2, [r1, #8]
   10d10:	str	r2, [sp]
   10d14:	mov	r2, ip
   10d18:	ldr	r1, [pc, #8]	; 10d28 <getc@plt+0x304>
   10d1c:	bl	109c4 <fprintf@plt>
   10d20:	add	sp, sp, #20
   10d24:	pop	{pc}		; (ldr pc, [sp], #4)
   10d28:	andeq	r2, r1, r8, lsl #19
   10d2c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d30:	sub	sp, sp, #12
   10d34:	str	r1, [sp, #4]
   10d38:	cmp	r2, #0
   10d3c:	beq	10d70 <getc@plt+0x34c>
   10d40:	vldr	s15, [sp, #4]
   10d44:	vcvt.f64.s32	d7, s15
   10d48:	vldr	d6, [pc, #56]	; 10d88 <getc@plt+0x364>
   10d4c:	vmul.f64	d7, d7, d6
   10d50:	vmov	s13, r2
   10d54:	vcvt.f64.s32	d6, s13
   10d58:	vdiv.f64	d5, d7, d6
   10d5c:	vmov	r2, r3, d5
   10d60:	ldr	r1, [pc, #40]	; 10d90 <getc@plt+0x36c>
   10d64:	bl	109c4 <fprintf@plt>
   10d68:	add	sp, sp, #12
   10d6c:	pop	{pc}		; (ldr pc, [sp], #4)
   10d70:	mov	r3, r0
   10d74:	mov	r2, #8
   10d78:	mov	r1, #1
   10d7c:	ldr	r0, [pc, #16]	; 10d94 <getc@plt+0x370>
   10d80:	bl	1094c <fwrite@plt>
   10d84:	b	10d68 <getc@plt+0x344>
   10d88:	andeq	r0, r0, r0
   10d8c:	subsmi	r0, r9, r0
   10d90:			; <UNDEFINED> instruction: 0x000129b0
   10d94:	andeq	r2, r1, r4, lsr #19
   10d98:	ldr	r2, [r0, #12]
   10d9c:	ldr	r3, [r1, #12]
   10da0:	cmp	r2, r3
   10da4:	beq	10db0 <getc@plt+0x38c>
   10da8:	sub	r0, r3, r2
   10dac:	bx	lr
   10db0:	ldr	r2, [r0, #16]
   10db4:	ldr	r3, [r1, #16]
   10db8:	cmp	r2, r3
   10dbc:	beq	10dc8 <getc@plt+0x3a4>
   10dc0:	sub	r0, r3, r2
   10dc4:	bx	lr
   10dc8:	push	{r4, lr}
   10dcc:	ldr	r1, [r1, #8]
   10dd0:	ldr	r0, [r0, #8]
   10dd4:	bl	11b74 <getc@plt+0x1150>
   10dd8:	pop	{r4, pc}
   10ddc:	push	{r4, r5, r6, r7, lr}
   10de0:	sub	sp, sp, #20
   10de4:	mov	r5, r0
   10de8:	mov	r4, r1
   10dec:	mov	r6, r2
   10df0:	mov	r7, r3
   10df4:	ldr	r3, [r1, #4]
   10df8:	ldr	r2, [r1]
   10dfc:	ldr	r1, [pc, #96]	; 10e64 <getc@plt+0x440>
   10e00:	bl	109c4 <fprintf@plt>
   10e04:	ldr	r3, [r4]
   10e08:	ldr	r1, [r4, #4]
   10e0c:	mov	r2, r3
   10e10:	sub	r1, r3, r1
   10e14:	mov	r0, r5
   10e18:	bl	10d2c <getc@plt+0x308>
   10e1c:	cmp	r6, #0
   10e20:	beq	10e3c <getc@plt+0x418>
   10e24:	mov	r2, r6
   10e28:	ldr	r1, [pc, #56]	; 10e68 <getc@plt+0x444>
   10e2c:	mov	r0, r5
   10e30:	bl	109c4 <fprintf@plt>
   10e34:	add	sp, sp, #20
   10e38:	pop	{r4, r5, r6, r7, pc}
   10e3c:	mov	r3, #1
   10e40:	add	r2, sp, #4
   10e44:	mov	r1, r7
   10e48:	mov	r0, #0
   10e4c:	bl	124ac <error@@Base+0x788>
   10e50:	add	r2, sp, #4
   10e54:	ldr	r1, [pc, #16]	; 10e6c <getc@plt+0x448>
   10e58:	mov	r0, r5
   10e5c:	bl	109c4 <fprintf@plt>
   10e60:	b	10e34 <getc@plt+0x410>
   10e64:			; <UNDEFINED> instruction: 0x000129b8
   10e68:	andeq	r2, r1, r8, ror #20
   10e6c:	andeq	r2, r1, r4, asr #19
   10e70:	push	{r4, r5, r6, r7, r8, lr}
   10e74:	mov	r4, r0
   10e78:	mov	r7, r1
   10e7c:	mov	r6, r2
   10e80:	mov	r5, r3
   10e84:	mov	r0, r1
   10e88:	bl	11a38 <getc@plt+0x1014>
   10e8c:	add	r0, r4, r0, lsl #3
   10e90:	ldr	r3, [r0, #68]	; 0x44
   10e94:	add	r3, r3, r6
   10e98:	str	r3, [r0, #68]	; 0x44
   10e9c:	ldr	r3, [r0, #72]	; 0x48
   10ea0:	add	r3, r3, r5
   10ea4:	str	r3, [r0, #72]	; 0x48
   10ea8:	ldr	r3, [r4, #2116]	; 0x844
   10eac:	add	r3, r3, r6
   10eb0:	str	r3, [r4, #2116]	; 0x844
   10eb4:	ldr	r3, [r4, #2120]	; 0x848
   10eb8:	add	r3, r3, r5
   10ebc:	str	r3, [r4, #2120]	; 0x848
   10ec0:	add	r4, r4, r7, lsl #3
   10ec4:	add	r4, r4, #8192	; 0x2000
   10ec8:	ldr	r2, [r4, #1988]	; 0x7c4
   10ecc:	add	r2, r2, r6
   10ed0:	str	r2, [r4, #1988]	; 0x7c4
   10ed4:	ldr	r3, [r4, #1992]	; 0x7c8
   10ed8:	add	r3, r3, r5
   10edc:	str	r3, [r4, #1992]	; 0x7c8
   10ee0:	pop	{r4, r5, r6, r7, r8, pc}
   10ee4:	push	{r4, r5, r6, r7, r8, lr}
   10ee8:	mov	r7, r1
   10eec:	mov	r6, r2
   10ef0:	mov	r5, r3
   10ef4:	add	r0, r0, #2112	; 0x840
   10ef8:	add	r4, r0, #12
   10efc:	mov	r0, r4
   10f00:	bl	1176c <getc@plt+0xd48>
   10f04:	cmp	r0, #0
   10f08:	beq	10f28 <getc@plt+0x504>
   10f0c:	ldr	r2, [r0, #12]
   10f10:	add	r2, r2, r6
   10f14:	str	r2, [r0, #12]
   10f18:	ldr	r3, [r0, #16]
   10f1c:	add	r3, r3, r5
   10f20:	str	r3, [r0, #16]
   10f24:	pop	{r4, r5, r6, r7, r8, pc}
   10f28:	mov	r1, #20
   10f2c:	mov	r0, #1
   10f30:	bl	11d60 <error@@Base+0x3c>
   10f34:	mov	r8, r0
   10f38:	mov	r0, r7
   10f3c:	bl	10910 <strdup@plt>
   10f40:	str	r0, [r8, #8]
   10f44:	str	r6, [r8, #12]
   10f48:	str	r5, [r8, #16]
   10f4c:	mov	r1, r8
   10f50:	mov	r0, r4
   10f54:	bl	117b4 <getc@plt+0xd90>
   10f58:	pop	{r4, r5, r6, r7, r8, pc}
   10f5c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10f60:	sub	sp, sp, #28
   10f64:	mov	r5, r0
   10f68:	mov	r6, r1
   10f6c:	ldr	r1, [pc, #716]	; 11240 <getc@plt+0x81c>
   10f70:	mov	r0, r6
   10f74:	bl	11df8 <error@@Base+0xd4>
   10f78:	mov	r4, r0
   10f7c:	bl	10be0 <getc@plt+0x1bc>
   10f80:	cmp	r0, #0
   10f84:	beq	1122c <getc@plt+0x808>
   10f88:	mov	r2, #40	; 0x28
   10f8c:	ldr	r1, [pc, #688]	; 11244 <getc@plt+0x820>
   10f90:	ldr	r0, [pc, #688]	; 11248 <getc@plt+0x824>
   10f94:	bl	10a0c <strncmp@plt>
   10f98:	cmp	r0, #0
   10f9c:	bne	1122c <getc@plt+0x808>
   10fa0:	mov	r0, r4
   10fa4:	bl	10be0 <getc@plt+0x1bc>
   10fa8:	cmp	r0, #0
   10fac:	beq	1122c <getc@plt+0x808>
   10fb0:	ldr	r1, [pc, #660]	; 1124c <getc@plt+0x828>
   10fb4:	ldr	r0, [pc, #652]	; 11248 <getc@plt+0x824>
   10fb8:	bl	108c8 <strcmp@plt>
   10fbc:	cmp	r0, #0
   10fc0:	bne	1122c <getc@plt+0x808>
   10fc4:	mov	r2, r5
   10fc8:	add	r1, sp, #20
   10fcc:	mov	r0, r4
   10fd0:	bl	10c04 <getc@plt+0x1e0>
   10fd4:	cmp	r0, #0
   10fd8:	beq	1122c <getc@plt+0x808>
   10fdc:	add	r2, r5, #4
   10fe0:	add	r1, sp, #16
   10fe4:	mov	r0, r4
   10fe8:	bl	10c04 <getc@plt+0x1e0>
   10fec:	cmp	r0, #0
   10ff0:	beq	1122c <getc@plt+0x808>
   10ff4:	mov	r0, r4
   10ff8:	bl	10be0 <getc@plt+0x1bc>
   10ffc:	cmp	r0, #0
   11000:	beq	1122c <getc@plt+0x808>
   11004:	mov	r0, r4
   11008:	bl	10be0 <getc@plt+0x1bc>
   1100c:	cmp	r0, #0
   11010:	beq	1122c <getc@plt+0x808>
   11014:	add	r2, r5, #8
   11018:	add	r1, sp, #12
   1101c:	mov	r0, r4
   11020:	bl	10c04 <getc@plt+0x1e0>
   11024:	cmp	r0, #0
   11028:	beq	1122c <getc@plt+0x808>
   1102c:	add	r2, r5, #12
   11030:	add	r1, sp, #12
   11034:	mov	r0, r4
   11038:	bl	10c04 <getc@plt+0x1e0>
   1103c:	cmp	r0, #0
   11040:	beq	1122c <getc@plt+0x808>
   11044:	add	r2, r5, #16
   11048:	add	r1, sp, #12
   1104c:	mov	r0, r4
   11050:	bl	10c04 <getc@plt+0x1e0>
   11054:	cmp	r0, #0
   11058:	beq	1122c <getc@plt+0x808>
   1105c:	mov	r0, r4
   11060:	bl	10be0 <getc@plt+0x1bc>
   11064:	cmp	r0, #0
   11068:	beq	1122c <getc@plt+0x808>
   1106c:	mov	r0, r4
   11070:	bl	10be0 <getc@plt+0x1bc>
   11074:	cmp	r0, #0
   11078:	beq	1122c <getc@plt+0x808>
   1107c:	mov	r0, r4
   11080:	bl	10be0 <getc@plt+0x1bc>
   11084:	cmp	r0, #0
   11088:	beq	1122c <getc@plt+0x808>
   1108c:	mov	r0, r4
   11090:	bl	10be0 <getc@plt+0x1bc>
   11094:	cmp	r0, #0
   11098:	beq	1122c <getc@plt+0x808>
   1109c:	add	r1, r5, #20
   110a0:	mov	r0, r4
   110a4:	bl	10c50 <getc@plt+0x22c>
   110a8:	cmp	r0, #0
   110ac:	beq	1122c <getc@plt+0x808>
   110b0:	add	r1, r5, #36	; 0x24
   110b4:	mov	r0, r4
   110b8:	bl	10c50 <getc@plt+0x22c>
   110bc:	cmp	r0, #0
   110c0:	beq	1122c <getc@plt+0x808>
   110c4:	add	r1, r5, #52	; 0x34
   110c8:	mov	r0, r4
   110cc:	bl	10c50 <getc@plt+0x22c>
   110d0:	cmp	r0, #0
   110d4:	beq	1122c <getc@plt+0x808>
   110d8:	mov	r0, r4
   110dc:	bl	10be0 <getc@plt+0x1bc>
   110e0:	cmp	r0, #0
   110e4:	beq	1122c <getc@plt+0x808>
   110e8:	ldr	r6, [pc, #344]	; 11248 <getc@plt+0x824>
   110ec:	mov	r0, r4
   110f0:	bl	10be0 <getc@plt+0x1bc>
   110f4:	cmp	r0, #0
   110f8:	beq	11108 <getc@plt+0x6e4>
   110fc:	ldrb	r3, [r6]
   11100:	cmp	r3, #10
   11104:	bne	110ec <getc@plt+0x6c8>
   11108:	ldr	r3, [sp, #16]
   1110c:	cmp	r3, #0
   11110:	ble	11174 <getc@plt+0x750>
   11114:	mov	r0, r4
   11118:	bl	10be0 <getc@plt+0x1bc>
   1111c:	cmp	r0, #0
   11120:	beq	11174 <getc@plt+0x750>
   11124:	ldr	r8, [pc, #292]	; 11250 <getc@plt+0x82c>
   11128:	ldr	r7, [pc, #280]	; 11248 <getc@plt+0x824>
   1112c:	add	r6, r7, #20
   11130:	b	11164 <getc@plt+0x740>
   11134:	add	r3, sp, #8
   11138:	add	r2, sp, #12
   1113c:	mov	r1, r8
   11140:	mov	r0, r7
   11144:	bl	109d0 <__isoc99_sscanf@plt>
   11148:	cmp	r0, #2
   1114c:	bne	11174 <getc@plt+0x750>
   11150:	ldr	r3, [sp, #8]
   11154:	ldr	r2, [sp, #12]
   11158:	mov	r1, r6
   1115c:	mov	r0, r5
   11160:	bl	10ee4 <getc@plt+0x4c0>
   11164:	mov	r0, r4
   11168:	bl	10be0 <getc@plt+0x1bc>
   1116c:	cmp	r0, #0
   11170:	bne	11134 <getc@plt+0x710>
   11174:	ldr	r3, [sp, #20]
   11178:	cmp	r3, #0
   1117c:	ble	1121c <getc@plt+0x7f8>
   11180:	mov	r0, r4
   11184:	bl	10be0 <getc@plt+0x1bc>
   11188:	cmp	r0, #0
   1118c:	beq	1121c <getc@plt+0x7f8>
   11190:	ldr	r7, [pc, #184]	; 11250 <getc@plt+0x82c>
   11194:	ldr	r6, [pc, #172]	; 11248 <getc@plt+0x824>
   11198:	ldr	r9, [pc, #180]	; 11254 <getc@plt+0x830>
   1119c:	add	r8, r6, #31
   111a0:	b	1120c <getc@plt+0x7e8>
   111a4:	ldrb	r3, [r6, #30]
   111a8:	str	r3, [sp, #4]
   111ac:	b	111f8 <getc@plt+0x7d4>
   111b0:	add	r3, sp, #8
   111b4:	add	r2, sp, #12
   111b8:	mov	r1, r7
   111bc:	mov	r0, r6
   111c0:	bl	109d0 <__isoc99_sscanf@plt>
   111c4:	cmp	r0, #2
   111c8:	bne	1121c <getc@plt+0x7f8>
   111cc:	ldrb	r3, [r6, #31]
   111d0:	cmp	r3, #125	; 0x7d
   111d4:	beq	111a4 <getc@plt+0x780>
   111d8:	cmp	r3, #92	; 0x5c
   111dc:	moveq	r3, #10
   111e0:	streq	r3, [sp, #4]
   111e4:	beq	111f8 <getc@plt+0x7d4>
   111e8:	add	r2, sp, #4
   111ec:	mov	r1, r9
   111f0:	mov	r0, r8
   111f4:	bl	109d0 <__isoc99_sscanf@plt>
   111f8:	ldr	r3, [sp, #8]
   111fc:	ldr	r2, [sp, #12]
   11200:	ldr	r1, [sp, #4]
   11204:	mov	r0, r5
   11208:	bl	10e70 <getc@plt+0x44c>
   1120c:	mov	r0, r4
   11210:	bl	10be0 <getc@plt+0x1bc>
   11214:	cmp	r0, #0
   11218:	bne	111b0 <getc@plt+0x78c>
   1121c:	mov	r0, r4
   11220:	bl	11bf0 <getc@plt+0x11cc>
   11224:	add	sp, sp, #28
   11228:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1122c:	ldr	r1, [pc, #36]	; 11258 <getc@plt+0x834>
   11230:	cmp	r6, #0
   11234:	movne	r1, r6
   11238:	ldr	r0, [pc, #28]	; 1125c <getc@plt+0x838>
   1123c:	bl	11db0 <error@@Base+0x8c>
   11240:	ldrdeq	r2, [r1], -r8
   11244:	ldrdeq	r2, [r1], -ip
   11248:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   1124c:	andeq	r2, r1, r8, lsl #20
   11250:	andeq	r2, r1, r0, lsl #19
   11254:	andeq	r2, r1, r4, lsr sl
   11258:	ldrdeq	r2, [r1], -r0
   1125c:	andeq	r2, r1, r8, lsr sl
   11260:	push	{r4, r5, r6, r7, r8, lr}
   11264:	sub	sp, sp, #8
   11268:	mov	r6, r0
   1126c:	mov	r0, r1
   11270:	ldr	r1, [pc, #668]	; 11514 <getc@plt+0xaf0>
   11274:	bl	11df8 <error@@Base+0xd4>
   11278:	mov	r7, r0
   1127c:	ldr	r3, [pc, #660]	; 11518 <getc@plt+0xaf4>
   11280:	ldr	r2, [pc, #660]	; 1151c <getc@plt+0xaf8>
   11284:	ldr	r1, [pc, #660]	; 11520 <getc@plt+0xafc>
   11288:	bl	109c4 <fprintf@plt>
   1128c:	ldr	r4, [pc, #656]	; 11524 <getc@plt+0xb00>
   11290:	ldr	r3, [pc, #656]	; 11528 <getc@plt+0xb04>
   11294:	ldr	r2, [r6]
   11298:	mov	r1, r4
   1129c:	mov	r0, r7
   112a0:	bl	109c4 <fprintf@plt>
   112a4:	ldr	r3, [pc, #640]	; 1152c <getc@plt+0xb08>
   112a8:	ldr	r2, [r6, #4]
   112ac:	mov	r1, r4
   112b0:	mov	r0, r7
   112b4:	bl	109c4 <fprintf@plt>
   112b8:	ldr	r3, [r6]
   112bc:	ldr	r1, [r6, #4]
   112c0:	mov	r2, r3
   112c4:	sub	r1, r3, r1
   112c8:	mov	r0, r7
   112cc:	bl	10d2c <getc@plt+0x308>
   112d0:	ldr	r1, [pc, #600]	; 11530 <getc@plt+0xb0c>
   112d4:	mov	r0, r7
   112d8:	bl	109c4 <fprintf@plt>
   112dc:	ldr	r3, [pc, #592]	; 11534 <getc@plt+0xb10>
   112e0:	ldr	r2, [r6, #8]
   112e4:	mov	r1, r4
   112e8:	mov	r0, r7
   112ec:	bl	109c4 <fprintf@plt>
   112f0:	ldr	r3, [pc, #576]	; 11538 <getc@plt+0xb14>
   112f4:	ldr	r2, [r6, #12]
   112f8:	mov	r1, r4
   112fc:	mov	r0, r7
   11300:	bl	109c4 <fprintf@plt>
   11304:	ldr	r3, [pc, #560]	; 1153c <getc@plt+0xb18>
   11308:	ldr	r2, [r6, #16]
   1130c:	mov	r1, r4
   11310:	mov	r0, r7
   11314:	bl	109c4 <fprintf@plt>
   11318:	ldr	r1, [r6, #8]
   1131c:	ldr	r3, [r6, #12]
   11320:	ldr	r2, [r6]
   11324:	add	r1, r1, r3
   11328:	mov	r0, r7
   1132c:	bl	10d2c <getc@plt+0x308>
   11330:	ldr	r1, [pc, #520]	; 11540 <getc@plt+0xb1c>
   11334:	mov	r0, r7
   11338:	bl	109c4 <fprintf@plt>
   1133c:	ldr	r3, [r6]
   11340:	ldr	r1, [r6, #48]	; 0x30
   11344:	mov	r2, r3
   11348:	sub	r1, r3, r1
   1134c:	mov	r0, r7
   11350:	bl	10d2c <getc@plt+0x308>
   11354:	ldr	r1, [pc, #488]	; 11544 <getc@plt+0xb20>
   11358:	mov	r0, r7
   1135c:	bl	109c4 <fprintf@plt>
   11360:	mov	r3, r7
   11364:	mov	r2, #37	; 0x25
   11368:	mov	r1, #1
   1136c:	ldr	r0, [pc, #468]	; 11548 <getc@plt+0xb24>
   11370:	bl	1094c <fwrite@plt>
   11374:	ldr	r2, [pc, #464]	; 1154c <getc@plt+0xb28>
   11378:	add	r1, r6, #20
   1137c:	mov	r0, r7
   11380:	bl	10cf0 <getc@plt+0x2cc>
   11384:	ldr	r2, [pc, #452]	; 11550 <getc@plt+0xb2c>
   11388:	add	r1, r6, #36	; 0x24
   1138c:	mov	r0, r7
   11390:	bl	10cf0 <getc@plt+0x2cc>
   11394:	ldr	r2, [pc, #440]	; 11554 <getc@plt+0xb30>
   11398:	add	r1, r6, #52	; 0x34
   1139c:	mov	r0, r7
   113a0:	bl	10cf0 <getc@plt+0x2cc>
   113a4:	ldr	r1, [pc, #428]	; 11558 <getc@plt+0xb34>
   113a8:	mov	r0, r7
   113ac:	bl	109c4 <fprintf@plt>
   113b0:	add	r5, r6, #68	; 0x44
   113b4:	mov	r4, #0
   113b8:	mov	r8, r4
   113bc:	b	113d0 <getc@plt+0x9ac>
   113c0:	add	r4, r4, #1
   113c4:	add	r5, r5, #8
   113c8:	cmp	r4, #256	; 0x100
   113cc:	beq	113fc <getc@plt+0x9d8>
   113d0:	ldr	r3, [r5]
   113d4:	cmp	r3, #0
   113d8:	ble	113c0 <getc@plt+0x99c>
   113dc:	mov	r0, r4
   113e0:	bl	11a6c <getc@plt+0x1048>
   113e4:	mov	r3, r8
   113e8:	mov	r2, r0
   113ec:	mov	r1, r5
   113f0:	mov	r0, r7
   113f4:	bl	10ddc <getc@plt+0x3b8>
   113f8:	b	113c0 <getc@plt+0x99c>
   113fc:	add	r1, r6, #2112	; 0x840
   11400:	mov	r3, #0
   11404:	ldr	r2, [pc, #328]	; 11554 <getc@plt+0xb30>
   11408:	add	r1, r1, #4
   1140c:	mov	r0, r7
   11410:	bl	10ddc <getc@plt+0x3b8>
   11414:	ldr	r3, [r6, #4]
   11418:	cmp	r3, #0
   1141c:	ble	114a0 <getc@plt+0xa7c>
   11420:	add	r0, r6, #2112	; 0x840
   11424:	add	r0, r0, #12
   11428:	bl	1185c <getc@plt+0xe38>
   1142c:	add	r4, r6, #8192	; 0x2000
   11430:	ldr	r2, [pc, #292]	; 1155c <getc@plt+0xb38>
   11434:	ldr	r1, [r4, #1980]	; 0x7bc
   11438:	ldr	r0, [r4, #1984]	; 0x7c0
   1143c:	bl	116b0 <getc@plt+0xc8c>
   11440:	mov	r3, r7
   11444:	mov	r2, #39	; 0x27
   11448:	mov	r1, #1
   1144c:	ldr	r0, [pc, #268]	; 11560 <getc@plt+0xb3c>
   11450:	bl	1094c <fwrite@plt>
   11454:	ldr	r3, [r4, #1984]	; 0x7c0
   11458:	cmp	r3, #0
   1145c:	ble	114a0 <getc@plt+0xa7c>
   11460:	mov	r4, #0
   11464:	add	r5, r6, #8192	; 0x2000
   11468:	ldr	r8, [pc, #244]	; 11564 <getc@plt+0xb40>
   1146c:	ldr	r3, [r5, #1980]	; 0x7bc
   11470:	ldr	r1, [r3, r4, lsl #2]
   11474:	ldr	r3, [r1, #16]
   11478:	ldr	r2, [r1, #12]
   1147c:	ldr	r1, [r1, #8]
   11480:	str	r1, [sp]
   11484:	mov	r1, r8
   11488:	mov	r0, r7
   1148c:	bl	109c4 <fprintf@plt>
   11490:	add	r4, r4, #1
   11494:	ldr	r3, [r5, #1984]	; 0x7c0
   11498:	cmp	r3, r4
   1149c:	bgt	1146c <getc@plt+0xa48>
   114a0:	ldr	r3, [r6]
   114a4:	cmp	r3, #0
   114a8:	ble	11504 <getc@plt+0xae0>
   114ac:	ldr	r1, [pc, #164]	; 11558 <getc@plt+0xb34>
   114b0:	mov	r0, r7
   114b4:	bl	109c4 <fprintf@plt>
   114b8:	add	r4, r6, #10176	; 0x27c0
   114bc:	add	r4, r4, #4
   114c0:	mov	r5, #0
   114c4:	mov	r8, r5
   114c8:	ldr	r6, [pc, #152]	; 11568 <getc@plt+0xb44>
   114cc:	b	114e0 <getc@plt+0xabc>
   114d0:	add	r5, r5, #1
   114d4:	add	r4, r4, #8
   114d8:	cmp	r5, r6
   114dc:	beq	11504 <getc@plt+0xae0>
   114e0:	ldr	r3, [r4]
   114e4:	cmp	r3, #0
   114e8:	ble	114d0 <getc@plt+0xaac>
   114ec:	mov	r3, r5
   114f0:	mov	r2, r8
   114f4:	mov	r1, r4
   114f8:	mov	r0, r7
   114fc:	bl	10ddc <getc@plt+0x3b8>
   11500:	b	114d0 <getc@plt+0xaac>
   11504:	mov	r0, r7
   11508:	bl	11bf0 <getc@plt+0x11cc>
   1150c:	add	sp, sp, #8
   11510:	pop	{r4, r5, r6, r7, r8, pc}
   11514:	andeq	r2, r1, ip, asr #20
   11518:	andeq	r2, r1, r8, lsl #20
   1151c:	ldrdeq	r2, [r1], -ip
   11520:	andeq	r2, r1, r0, asr sl
   11524:	andeq	r2, r1, r4, ror #20
   11528:	andeq	r2, r1, r8, asr sl
   1152c:	andeq	r2, r1, r0, ror sl
   11530:	andeq	r2, r1, r8, ror sl
   11534:	andeq	r2, r1, r8, lsl #21
   11538:	muleq	r1, ip, sl
   1153c:	andeq	r2, r1, ip, lsr #21
   11540:			; <UNDEFINED> instruction: 0x00012ab8
   11544:	ldrdeq	r2, [r1], -r0
   11548:	strdeq	r2, [r1], -r0
   1154c:	andeq	r2, r1, r8, lsl fp
   11550:	andeq	r2, r1, r0, lsr #22
   11554:	andeq	r2, r1, ip, lsr #22
   11558:	andeq	r2, r1, r4, lsr fp
   1155c:	muleq	r1, r8, sp
   11560:	andeq	r2, r1, r4, asr fp
   11564:	andeq	r2, r1, ip, ror fp
   11568:			; <UNDEFINED> instruction: 0x0010ffff
   1156c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11570:	mov	sl, r0
   11574:	mov	r9, r1
   11578:	ldr	r3, [pc, #300]	; 116ac <getc@plt+0xc88>
   1157c:	ldr	r3, [r3]
   11580:	ldr	r8, [r3, r0, lsl #2]
   11584:	cmp	r0, r1
   11588:	movge	r3, r1
   1158c:	movge	r4, r0
   11590:	bge	11670 <getc@plt+0xc4c>
   11594:	mov	r4, r0
   11598:	mov	r3, r1
   1159c:	ldr	r6, [pc, #264]	; 116ac <getc@plt+0xc88>
   115a0:	b	11624 <getc@plt+0xc00>
   115a4:	mov	r5, r3
   115a8:	cmp	r4, r5
   115ac:	beq	11668 <getc@plt+0xc44>
   115b0:	ldr	r2, [r6]
   115b4:	add	r3, r4, #1
   115b8:	lsl	r7, r4, #2
   115bc:	ldr	r1, [r2, r5, lsl #2]
   115c0:	str	r1, [r2, r4, lsl #2]
   115c4:	cmp	r3, r5
   115c8:	movge	r4, r3
   115cc:	bge	11604 <getc@plt+0xbe0>
   115d0:	add	r7, r7, #4
   115d4:	mov	r4, r3
   115d8:	ldr	r2, [r6]
   115dc:	ldr	r3, [r6, #4]
   115e0:	ldr	r1, [r2, r7]
   115e4:	mov	r0, r8
   115e8:	blx	r3
   115ec:	cmp	r0, #0
   115f0:	ble	11604 <getc@plt+0xbe0>
   115f4:	add	r4, r4, #1
   115f8:	add	r7, r7, #4
   115fc:	cmp	r4, r5
   11600:	blt	115d8 <getc@plt+0xbb4>
   11604:	cmp	r4, r5
   11608:	beq	1166c <getc@plt+0xc48>
   1160c:	ldr	r2, [r6]
   11610:	sub	r3, r5, #1
   11614:	ldr	r1, [r2, r4, lsl #2]
   11618:	str	r1, [r2, r5, lsl #2]
   1161c:	cmp	r3, r4
   11620:	ble	11670 <getc@plt+0xc4c>
   11624:	cmp	r3, r4
   11628:	ble	115a4 <getc@plt+0xb80>
   1162c:	lsl	r7, r3, #2
   11630:	mov	r5, r3
   11634:	ldr	r2, [r6]
   11638:	ldr	r3, [r6, #4]
   1163c:	ldr	r1, [r2, r7]
   11640:	mov	r0, r8
   11644:	blx	r3
   11648:	cmp	r0, #0
   1164c:	bge	115a8 <getc@plt+0xb84>
   11650:	sub	r5, r5, #1
   11654:	sub	r7, r7, #4
   11658:	cmp	r5, r4
   1165c:	bne	11634 <getc@plt+0xc10>
   11660:	mov	r4, r5
   11664:	b	11604 <getc@plt+0xbe0>
   11668:	mov	r4, r5
   1166c:	mov	r3, r4
   11670:	ldr	r2, [pc, #52]	; 116ac <getc@plt+0xc88>
   11674:	ldr	r2, [r2]
   11678:	str	r8, [r2, r3, lsl #2]
   1167c:	sub	r1, r3, #1
   11680:	cmp	sl, r1
   11684:	blt	116a0 <getc@plt+0xc7c>
   11688:	add	r0, r4, #1
   1168c:	cmp	r9, r0
   11690:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   11694:	mov	r1, r9
   11698:	bl	1156c <getc@plt+0xb48>
   1169c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   116a0:	mov	r0, sl
   116a4:	bl	1156c <getc@plt+0xb48>
   116a8:	b	11688 <getc@plt+0xc64>
   116ac:	andeq	r4, r2, r8, lsl r1
   116b0:	cmp	r0, #1
   116b4:	bxle	lr
   116b8:	push	{r4, lr}
   116bc:	ldr	r3, [pc, #20]	; 116d8 <getc@plt+0xcb4>
   116c0:	str	r1, [r3]
   116c4:	str	r2, [r3, #4]
   116c8:	sub	r1, r0, #1
   116cc:	mov	r0, #0
   116d0:	bl	1156c <getc@plt+0xb48>
   116d4:	pop	{r4, pc}
   116d8:	andeq	r4, r2, r8, lsl r1
   116dc:	ldrb	r3, [r0]
   116e0:	cmp	r3, #0
   116e4:	beq	11724 <getc@plt+0xd00>
   116e8:	mov	r2, #0
   116ec:	add	r2, r2, r3
   116f0:	ldrb	r3, [r0, #1]!
   116f4:	cmp	r3, #0
   116f8:	bne	116ec <getc@plt+0xcc8>
   116fc:	ldr	r0, [pc, #40]	; 1172c <getc@plt+0xd08>
   11700:	smull	r3, r0, r0, r2
   11704:	add	r3, r0, r2
   11708:	asr	r0, r2, #31
   1170c:	rsb	r0, r0, r3, asr #8
   11710:	rsb	r3, r0, r0, lsl #6
   11714:	rsb	r0, r0, r3, lsl #3
   11718:	sub	r0, r2, r0
   1171c:	sxth	r0, r0
   11720:	bx	lr
   11724:	mov	r2, #0
   11728:	b	116fc <getc@plt+0xcd8>
   1172c:	subhi	r4, sl, #1552	; 0x610
   11730:	push	{r4, r5, r6, lr}
   11734:	mov	r6, r0
   11738:	mov	r4, r0
   1173c:	add	r5, r0, #8000	; 0x1f40
   11740:	add	r5, r5, #48	; 0x30
   11744:	mov	r0, r4
   11748:	bl	12740 <error@@Base+0xa1c>
   1174c:	add	r4, r4, #16
   11750:	cmp	r4, r5
   11754:	bne	11744 <getc@plt+0xd20>
   11758:	add	r6, r6, #4096	; 0x1000
   1175c:	mov	r3, #0
   11760:	str	r3, [r6, #3952]	; 0xf70
   11764:	str	r3, [r6, #3956]	; 0xf74
   11768:	pop	{r4, r5, r6, pc}
   1176c:	push	{r4, r5, r6, lr}
   11770:	mov	r4, r0
   11774:	mov	r5, r1
   11778:	mov	r0, r1
   1177c:	bl	116dc <getc@plt+0xcb8>
   11780:	ldr	r4, [r4, r0, lsl #4]
   11784:	cmp	r4, #0
   11788:	beq	117ac <getc@plt+0xd88>
   1178c:	ldr	r1, [r4, #8]
   11790:	mov	r0, r5
   11794:	bl	108c8 <strcmp@plt>
   11798:	cmp	r0, #0
   1179c:	beq	117ac <getc@plt+0xd88>
   117a0:	ldr	r4, [r4, #4]
   117a4:	cmp	r4, #0
   117a8:	bne	1178c <getc@plt+0xd68>
   117ac:	mov	r0, r4
   117b0:	pop	{r4, r5, r6, pc}
   117b4:	push	{r4, r5, r6, lr}
   117b8:	mov	r4, r0
   117bc:	mov	r5, r1
   117c0:	ldr	r0, [r1, #8]
   117c4:	bl	116dc <getc@plt+0xcb8>
   117c8:	mov	r1, r5
   117cc:	add	r0, r4, r0, lsl #4
   117d0:	bl	12758 <error@@Base+0xa34>
   117d4:	add	r3, r4, #4096	; 0x1000
   117d8:	ldr	r0, [r3, #3952]	; 0xf70
   117dc:	cmp	r0, #0
   117e0:	beq	117f4 <getc@plt+0xdd0>
   117e4:	bl	108e0 <free@plt>
   117e8:	add	r3, r4, #4096	; 0x1000
   117ec:	mov	r2, #0
   117f0:	str	r2, [r3, #3952]	; 0xf70
   117f4:	add	r4, r4, #4096	; 0x1000
   117f8:	ldr	r3, [r4, #3956]	; 0xf74
   117fc:	add	r3, r3, #1
   11800:	str	r3, [r4, #3956]	; 0xf74
   11804:	pop	{r4, r5, r6, pc}
   11808:	push	{r4, r5, r6, lr}
   1180c:	mov	r4, r0
   11810:	mov	r5, r1
   11814:	ldr	r0, [r1, #8]
   11818:	bl	116dc <getc@plt+0xcb8>
   1181c:	mov	r1, r5
   11820:	add	r0, r4, r0, lsl #4
   11824:	bl	127b4 <error@@Base+0xa90>
   11828:	add	r3, r4, #4096	; 0x1000
   1182c:	ldr	r0, [r3, #3952]	; 0xf70
   11830:	cmp	r0, #0
   11834:	beq	11848 <getc@plt+0xe24>
   11838:	bl	108e0 <free@plt>
   1183c:	add	r3, r4, #4096	; 0x1000
   11840:	mov	r2, #0
   11844:	str	r2, [r3, #3952]	; 0xf70
   11848:	add	r4, r4, #4096	; 0x1000
   1184c:	ldr	r3, [r4, #3956]	; 0xf74
   11850:	sub	r3, r3, #1
   11854:	str	r3, [r4, #3956]	; 0xf74
   11858:	pop	{r4, r5, r6, pc}
   1185c:	add	r3, r0, #4096	; 0x1000
   11860:	ldr	r3, [r3, #3952]	; 0xf70
   11864:	cmp	r3, #0
   11868:	bxne	lr
   1186c:	add	r3, r0, #4096	; 0x1000
   11870:	ldr	r3, [r3, #3956]	; 0xf74
   11874:	cmp	r3, #0
   11878:	bxeq	lr
   1187c:	push	{r4, r5, r6, lr}
   11880:	mov	r4, r0
   11884:	mov	r1, #4
   11888:	mov	r0, r3
   1188c:	bl	11d60 <error@@Base+0x3c>
   11890:	add	r3, r4, #4096	; 0x1000
   11894:	str	r0, [r3, #3952]	; 0xf70
   11898:	mov	r1, #0
   1189c:	mov	lr, r1
   118a0:	mov	ip, r3
   118a4:	ldr	r5, [pc, #64]	; 118ec <getc@plt+0xec8>
   118a8:	b	118b8 <getc@plt+0xe94>
   118ac:	add	lr, lr, #1
   118b0:	cmp	lr, r5
   118b4:	beq	118e8 <getc@plt+0xec4>
   118b8:	ldr	r3, [r4, lr, lsl #4]
   118bc:	cmp	r3, #0
   118c0:	beq	118ac <getc@plt+0xe88>
   118c4:	lsl	r2, r1, #2
   118c8:	add	r1, r1, #1
   118cc:	ldr	r0, [ip, #3952]	; 0xf70
   118d0:	str	r3, [r0, r2]
   118d4:	ldr	r3, [r3, #4]
   118d8:	add	r2, r2, #4
   118dc:	cmp	r3, #0
   118e0:	bne	118c8 <getc@plt+0xea4>
   118e4:	b	118ac <getc@plt+0xe88>
   118e8:	pop	{r4, r5, r6, pc}
   118ec:	strdeq	r0, [r0], -r7
   118f0:	push	{r4, r5, r6, r7, r8, lr}
   118f4:	mov	r7, r0
   118f8:	mov	r6, r1
   118fc:	mov	r4, r0
   11900:	add	r5, r0, #8000	; 0x1f40
   11904:	add	r5, r5, #48	; 0x30
   11908:	mov	r1, r6
   1190c:	mov	r0, r4
   11910:	bl	1287c <error@@Base+0xb58>
   11914:	add	r4, r4, #16
   11918:	cmp	r4, r5
   1191c:	bne	11908 <getc@plt+0xee4>
   11920:	add	r3, r7, #4096	; 0x1000
   11924:	ldr	r0, [r3, #3952]	; 0xf70
   11928:	cmp	r0, #0
   1192c:	beq	11940 <getc@plt+0xf1c>
   11930:	bl	108e0 <free@plt>
   11934:	add	r3, r7, #4096	; 0x1000
   11938:	mov	r2, #0
   1193c:	str	r2, [r3, #3952]	; 0xf70
   11940:	add	r7, r7, #4096	; 0x1000
   11944:	mov	r3, #0
   11948:	str	r3, [r7, #3956]	; 0xf74
   1194c:	pop	{r4, r5, r6, r7, r8, pc}
   11950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11954:	sub	sp, sp, #12
   11958:	ldr	r8, [pc, #204]	; 11a2c <getc@plt+0x1008>
   1195c:	add	fp, r8, #1088	; 0x440
   11960:	add	fp, fp, #4
   11964:	ldr	sl, [pc, #196]	; 11a30 <getc@plt+0x100c>
   11968:	add	r3, sl, #1024	; 0x400
   1196c:	add	r3, r3, #4
   11970:	str	r3, [sp, #4]
   11974:	b	119c0 <getc@plt+0xf9c>
   11978:	mov	r4, #0
   1197c:	cmp	r9, r4
   11980:	beq	119fc <getc@plt+0xfd8>
   11984:	ldr	r2, [r8]
   11988:	mov	r3, r2
   1198c:	ldr	r1, [r8, #4]
   11990:	cmp	r2, r1
   11994:	bhi	119b4 <getc@plt+0xf90>
   11998:	sub	r2, r2, #1
   1199c:	ldr	r0, [sp, #4]
   119a0:	add	r2, r0, r2
   119a4:	strb	r4, [r2, #1]!
   119a8:	add	r3, r3, #1
   119ac:	cmp	r1, r3
   119b0:	bcs	119a4 <getc@plt+0xf80>
   119b4:	add	r8, r8, #12
   119b8:	cmp	r8, fp
   119bc:	beq	11a24 <getc@plt+0x1000>
   119c0:	ldrsh	r9, [sl]
   119c4:	mov	r7, r9
   119c8:	cmp	r9, #0
   119cc:	ble	11978 <getc@plt+0xf54>
   119d0:	ldr	r6, [r8, #8]
   119d4:	mov	r5, sl
   119d8:	mov	r4, #0
   119dc:	ldr	r1, [r5, #4]!
   119e0:	mov	r0, r6
   119e4:	bl	108c8 <strcmp@plt>
   119e8:	cmp	r0, #0
   119ec:	beq	1197c <getc@plt+0xf58>
   119f0:	add	r4, r4, #1
   119f4:	cmp	r4, r7
   119f8:	bne	119dc <getc@plt+0xfb8>
   119fc:	cmp	r9, #256	; 0x100
   11a00:	beq	11a1c <getc@plt+0xff8>
   11a04:	add	r3, r9, #1
   11a08:	strh	r3, [sl]
   11a0c:	add	r9, sl, r9, lsl #2
   11a10:	ldr	r3, [r8, #8]
   11a14:	str	r3, [r9, #4]
   11a18:	b	11984 <getc@plt+0xf60>
   11a1c:	ldr	r0, [pc, #16]	; 11a34 <getc@plt+0x1010>
   11a20:	bl	11d24 <error@@Base>
   11a24:	add	sp, sp, #12
   11a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a2c:	andeq	r2, r1, ip, lsl #23
   11a30:	andeq	r4, r2, r0, lsr #2
   11a34:	ldrdeq	r2, [r1], -r0
   11a38:	push	{r4, lr}
   11a3c:	mov	r4, r0
   11a40:	ldr	r3, [pc, #32]	; 11a68 <getc@plt+0x1044>
   11a44:	ldrsh	r3, [r3]
   11a48:	cmp	r3, #0
   11a4c:	beq	11a60 <getc@plt+0x103c>
   11a50:	ldr	r0, [pc, #16]	; 11a68 <getc@plt+0x1044>
   11a54:	add	r0, r0, r4
   11a58:	ldrb	r0, [r0, #1028]	; 0x404
   11a5c:	pop	{r4, pc}
   11a60:	bl	11950 <getc@plt+0xf2c>
   11a64:	b	11a50 <getc@plt+0x102c>
   11a68:	andeq	r4, r2, r0, lsr #2
   11a6c:	push	{r4, lr}
   11a70:	uxtb	r4, r0
   11a74:	ldr	r3, [pc, #56]	; 11ab4 <getc@plt+0x1090>
   11a78:	ldrsh	r3, [r3]
   11a7c:	cmp	r3, #0
   11a80:	beq	11aa4 <getc@plt+0x1080>
   11a84:	ldr	r3, [pc, #40]	; 11ab4 <getc@plt+0x1090>
   11a88:	ldrsh	r3, [r3]
   11a8c:	cmp	r4, r3
   11a90:	bge	11aac <getc@plt+0x1088>
   11a94:	ldr	r0, [pc, #24]	; 11ab4 <getc@plt+0x1090>
   11a98:	add	r0, r0, r4, lsl #2
   11a9c:	ldr	r0, [r0, #4]
   11aa0:	pop	{r4, pc}
   11aa4:	bl	11950 <getc@plt+0xf2c>
   11aa8:	b	11a84 <getc@plt+0x1060>
   11aac:	ldr	r0, [pc, #4]	; 11ab8 <getc@plt+0x1094>
   11ab0:	bl	11d24 <error@@Base>
   11ab4:	andeq	r4, r2, r0, lsr #2
   11ab8:	andeq	r2, r1, ip, ror #31
   11abc:	push	{r4, r5, lr}
   11ac0:	sub	sp, sp, #116	; 0x74
   11ac4:	mov	r5, r0
   11ac8:	ldr	r3, [pc, #44]	; 11afc <getc@plt+0x10d8>
   11acc:	ldr	r4, [r3]
   11ad0:	bl	10994 <getpid@plt>
   11ad4:	str	r5, [sp]
   11ad8:	mov	r3, r0
   11adc:	mov	r2, r4
   11ae0:	ldr	r1, [pc, #24]	; 11b00 <getc@plt+0x10dc>
   11ae4:	add	r0, sp, #12
   11ae8:	bl	109e8 <sprintf@plt>
   11aec:	add	r0, sp, #12
   11af0:	bl	10910 <strdup@plt>
   11af4:	add	sp, sp, #116	; 0x74
   11af8:	pop	{r4, r5, pc}
   11afc:	addseq	r6, fp, r8, ror #25
   11b00:	andeq	r3, r1, ip, lsr r6
   11b04:	push	{r7, lr}
   11b08:	mov	r7, r0
   11b0c:	ldr	r3, [pc, #88]	; 11b6c <getc@plt+0x1148>
   11b10:	ldr	r3, [r3]
   11b14:	cmp	r3, #0
   11b18:	beq	11b20 <getc@plt+0x10fc>
   11b1c:	blx	r3
   11b20:	ldr	r3, [pc, #72]	; 11b70 <getc@plt+0x114c>
   11b24:	ldrsh	r3, [r3]
   11b28:	cmp	r3, #0
   11b2c:	ble	11b64 <getc@plt+0x1140>
   11b30:	mov	r4, #1
   11b34:	ldr	r6, [pc, #52]	; 11b70 <getc@plt+0x114c>
   11b38:	mov	r0, r4
   11b3c:	bl	11abc <getc@plt+0x1098>
   11b40:	mov	r5, r0
   11b44:	bl	10928 <unlink@plt>
   11b48:	mov	r0, r5
   11b4c:	bl	108e0 <free@plt>
   11b50:	add	r4, r4, #1
   11b54:	sxth	r4, r4
   11b58:	ldrsh	r3, [r6]
   11b5c:	cmp	r3, r4
   11b60:	bge	11b38 <getc@plt+0x1114>
   11b64:	mov	r0, r7
   11b68:	bl	109a0 <exit@plt>
   11b6c:	addseq	r6, fp, ip, ror #25
   11b70:	andseq	r4, r3, r4, lsr #10
   11b74:	push	{r4, lr}
   11b78:	ldrb	r3, [r0]
   11b7c:	cmp	r3, #0
   11b80:	beq	11bcc <getc@plt+0x11a8>
   11b84:	ldrb	r2, [r1]
   11b88:	cmp	r2, r3
   11b8c:	bne	11be8 <getc@plt+0x11c4>
   11b90:	mov	ip, r1
   11b94:	mov	r2, #0
   11b98:	add	r2, r2, #1
   11b9c:	mov	r4, r2
   11ba0:	ldrb	r3, [r0, #1]!
   11ba4:	cmp	r3, #0
   11ba8:	beq	11bd0 <getc@plt+0x11ac>
   11bac:	ldrb	lr, [ip, #1]!
   11bb0:	cmp	lr, r3
   11bb4:	beq	11b98 <getc@plt+0x1174>
   11bb8:	ldrb	r2, [r1, r4]
   11bbc:	cmp	r2, r3
   11bc0:	mvnhi	r0, #0
   11bc4:	movls	r0, #1
   11bc8:	pop	{r4, pc}
   11bcc:	mov	r4, #0
   11bd0:	ldrb	r3, [r1, r4]
   11bd4:	cmp	r3, #0
   11bd8:	movne	r3, #0
   11bdc:	bne	11bb8 <getc@plt+0x1194>
   11be0:	mov	r0, #0
   11be4:	pop	{r4, pc}
   11be8:	mov	r4, #0
   11bec:	b	11bb8 <getc@plt+0x1194>
   11bf0:	ldr	r3, [pc, #36]	; 11c1c <getc@plt+0x11f8>
   11bf4:	ldr	r3, [r3]
   11bf8:	cmp	r3, r0
   11bfc:	bxeq	lr
   11c00:	ldr	r3, [pc, #24]	; 11c20 <getc@plt+0x11fc>
   11c04:	ldr	r3, [r3]
   11c08:	cmp	r0, r3
   11c0c:	bxeq	lr
   11c10:	push	{r4, lr}
   11c14:	bl	109dc <fclose@plt>
   11c18:	pop	{r4, pc}
   11c1c:	andeq	r4, r2, r8, lsr #1
   11c20:	andeq	r4, r2, ip, lsr #1
   11c24:	push	{lr}		; (str lr, [sp, #-4]!)
   11c28:	sub	sp, sp, #92	; 0x5c
   11c2c:	mov	r2, sp
   11c30:	mov	r1, r0
   11c34:	mov	r0, #3
   11c38:	bl	10940 <__xstat@plt>
   11c3c:	clz	r0, r0
   11c40:	lsr	r0, r0, #5
   11c44:	add	sp, sp, #92	; 0x5c
   11c48:	pop	{pc}		; (ldr pc, [sp], #4)
   11c4c:	push	{r4, lr}
   11c50:	ldr	r3, [pc, #32]	; 11c78 <getc@plt+0x1254>
   11c54:	ldrh	r0, [r3]
   11c58:	add	r0, r0, #1
   11c5c:	sxth	r0, r0
   11c60:	strh	r0, [r3]
   11c64:	bl	11abc <getc@plt+0x1098>
   11c68:	mov	r4, r0
   11c6c:	bl	10928 <unlink@plt>
   11c70:	mov	r0, r4
   11c74:	pop	{r4, pc}
   11c78:	andseq	r4, r3, r4, lsr #10
   11c7c:	push	{r4, lr}
   11c80:	mov	r4, r0
   11c84:	bl	109b8 <strlen@plt>
   11c88:	sub	r0, r0, #1
   11c8c:	sxth	r0, r0
   11c90:	cmp	r0, #0
   11c94:	blt	11cc0 <getc@plt+0x129c>
   11c98:	ldrb	r3, [r4, r0]
   11c9c:	cmp	r3, #47	; 0x2f
   11ca0:	beq	11cc0 <getc@plt+0x129c>
   11ca4:	sub	r0, r0, #1
   11ca8:	sxth	r0, r0
   11cac:	cmp	r0, #0
   11cb0:	blt	11cc0 <getc@plt+0x129c>
   11cb4:	ldrb	r3, [r4, r0]
   11cb8:	cmp	r3, #47	; 0x2f
   11cbc:	bne	11ca4 <getc@plt+0x1280>
   11cc0:	add	r0, r0, #1
   11cc4:	add	r0, r4, r0
   11cc8:	pop	{r4, pc}
   11ccc:	push	{r4, lr}
   11cd0:	mov	r0, #0
   11cd4:	bl	11b04 <getc@plt+0x10e0>
   11cd8:	push	{r4, lr}
   11cdc:	ldr	r2, [pc, #48]	; 11d14 <getc@plt+0x12f0>
   11ce0:	ldr	r2, [r2]
   11ce4:	cmp	r2, #0
   11ce8:	beq	11cf4 <getc@plt+0x12d0>
   11cec:	blx	r2
   11cf0:	bl	11ccc <getc@plt+0x12a8>
   11cf4:	mov	r3, r0
   11cf8:	ldr	r2, [pc, #24]	; 11d18 <getc@plt+0x12f4>
   11cfc:	ldr	r2, [r2]
   11d00:	ldr	r1, [pc, #20]	; 11d1c <getc@plt+0x12f8>
   11d04:	ldr	r0, [pc, #20]	; 11d20 <getc@plt+0x12fc>
   11d08:	ldr	r0, [r0]
   11d0c:	bl	109c4 <fprintf@plt>
   11d10:	b	11cf0 <getc@plt+0x12cc>
   11d14:	addseq	r6, fp, r4, ror #25
   11d18:	addseq	r6, fp, r8, ror #25
   11d1c:	andeq	r3, r1, ip, asr #12
   11d20:	andeq	r4, r2, r0, lsr #1

00011d24 <error@@Base>:
   11d24:	push	{r4, lr}
   11d28:	mov	r3, r0
   11d2c:	ldr	r2, [pc, #28]	; 11d50 <error@@Base+0x2c>
   11d30:	ldr	r2, [r2]
   11d34:	ldr	r1, [pc, #24]	; 11d54 <error@@Base+0x30>
   11d38:	ldr	r0, [pc, #24]	; 11d58 <error@@Base+0x34>
   11d3c:	ldr	r0, [r0]
   11d40:	bl	109c4 <fprintf@plt>
   11d44:	ldr	r3, [pc, #16]	; 11d5c <error@@Base+0x38>
   11d48:	ldr	r0, [r3]
   11d4c:	bl	11b04 <getc@plt+0x10e0>
   11d50:	addseq	r6, fp, r8, ror #25
   11d54:	andeq	r3, r1, ip, asr r6
   11d58:	andeq	r4, r2, r0, lsr #1
   11d5c:	muleq	r2, r4, r0
   11d60:	push	{r4, lr}
   11d64:	bl	108bc <calloc@plt>
   11d68:	cmp	r0, #0
   11d6c:	popne	{r4, pc}
   11d70:	ldr	r0, [pc]	; 11d78 <error@@Base+0x54>
   11d74:	bl	11d24 <error@@Base>
   11d78:	andeq	r3, r1, r4, ror #12
   11d7c:	ldr	r3, [pc, #36]	; 11da8 <error@@Base+0x84>
   11d80:	ldrb	r3, [r3, #2]
   11d84:	cmp	r3, #0
   11d88:	beq	11d90 <error@@Base+0x6c>
   11d8c:	bx	lr
   11d90:	push	{r4, lr}
   11d94:	mov	r2, #1
   11d98:	ldr	r3, [pc, #8]	; 11da8 <error@@Base+0x84>
   11d9c:	strb	r2, [r3, #2]
   11da0:	ldr	r0, [pc, #4]	; 11dac <error@@Base+0x88>
   11da4:	bl	11d24 <error@@Base>
   11da8:	andseq	r4, r3, r4, lsr #10
   11dac:	andeq	r3, r1, r0, lsl #13
   11db0:	push	{lr}		; (str lr, [sp, #-4]!)
   11db4:	sub	sp, sp, #12
   11db8:	ldr	r3, [pc, #40]	; 11de8 <error@@Base+0xc4>
   11dbc:	ldr	r2, [r3]
   11dc0:	ldr	r3, [pc, #36]	; 11dec <error@@Base+0xc8>
   11dc4:	ldr	ip, [r3]
   11dc8:	str	r1, [sp]
   11dcc:	mov	r3, r0
   11dd0:	ldr	r1, [pc, #24]	; 11df0 <error@@Base+0xcc>
   11dd4:	mov	r0, ip
   11dd8:	bl	109c4 <fprintf@plt>
   11ddc:	ldr	r3, [pc, #16]	; 11df4 <error@@Base+0xd0>
   11de0:	ldr	r0, [r3]
   11de4:	bl	11b04 <getc@plt+0x10e0>
   11de8:	addseq	r6, fp, r8, ror #25
   11dec:	andeq	r4, r2, r0, lsr #1
   11df0:	muleq	r1, r0, r6
   11df4:	muleq	r2, r4, r0
   11df8:	push	{r4, r5, r6, lr}
   11dfc:	subs	r5, r0, #0
   11e00:	beq	11e30 <error@@Base+0x10c>
   11e04:	mov	r4, r1
   11e08:	mov	r0, r5
   11e0c:	bl	108d4 <fopen@plt>
   11e10:	cmp	r0, #0
   11e14:	popne	{r4, r5, r6, pc}
   11e18:	ldrb	r3, [r4]
   11e1c:	cmp	r3, #119	; 0x77
   11e20:	beq	11e48 <error@@Base+0x124>
   11e24:	mov	r1, r5
   11e28:	ldr	r0, [pc, #36]	; 11e54 <error@@Base+0x130>
   11e2c:	bl	11db0 <error@@Base+0x8c>
   11e30:	ldrb	r3, [r1]
   11e34:	cmp	r3, #114	; 0x72
   11e38:	ldreq	r3, [pc, #24]	; 11e58 <error@@Base+0x134>
   11e3c:	ldrne	r3, [pc, #24]	; 11e5c <error@@Base+0x138>
   11e40:	ldr	r0, [r3]
   11e44:	pop	{r4, r5, r6, pc}
   11e48:	mov	r1, r5
   11e4c:	ldr	r0, [pc, #12]	; 11e60 <error@@Base+0x13c>
   11e50:	bl	11db0 <error@@Base+0x8c>
   11e54:			; <UNDEFINED> instruction: 0x000136b8
   11e58:	andeq	r4, r2, r8, lsr #1
   11e5c:	andeq	r4, r2, ip, lsr #1
   11e60:	andeq	r3, r1, r0, lsr #13
   11e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e68:	sub	sp, sp, #20
   11e6c:	mov	r5, r0
   11e70:	str	r0, [sp, #8]
   11e74:	mov	sl, r1
   11e78:	str	r2, [sp, #12]
   11e7c:	mov	r6, r3
   11e80:	ldr	r0, [r1]
   11e84:	bl	11c7c <getc@plt+0x1258>
   11e88:	ldr	r3, [pc, #468]	; 12064 <error@@Base+0x340>
   11e8c:	str	r0, [r3]
   11e90:	ldr	r4, [pc, #464]	; 12068 <error@@Base+0x344>
   11e94:	mov	r1, r4
   11e98:	mov	r0, #2
   11e9c:	bl	1097c <__sysv_signal@plt>
   11ea0:	mov	r1, r4
   11ea4:	mov	r0, #15
   11ea8:	bl	1097c <__sysv_signal@plt>
   11eac:	ldr	r8, [r5]
   11eb0:	cmp	r8, #1
   11eb4:	beq	11ed4 <error@@Base+0x1b0>
   11eb8:	movle	r7, #0
   11ebc:	ble	11ee8 <error@@Base+0x1c4>
   11ec0:	mov	r7, #0
   11ec4:	mov	r3, #1
   11ec8:	str	r3, [sp, #4]
   11ecc:	mov	r4, r3
   11ed0:	b	11f80 <error@@Base+0x25c>
   11ed4:	ldr	r3, [pc, #400]	; 1206c <error@@Base+0x348>
   11ed8:	ldrb	r3, [r3, #4]
   11edc:	cmp	r3, #0
   11ee0:	moveq	r7, #0
   11ee4:	bne	11ef8 <error@@Base+0x1d4>
   11ee8:	ldr	r3, [sp, #8]
   11eec:	str	r7, [r3]
   11ef0:	add	sp, sp, #20
   11ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ef8:	ldr	r0, [sp, #12]
   11efc:	bl	11cd8 <getc@plt+0x12b4>
   11f00:	ldr	r0, [sp, #12]
   11f04:	bl	11cd8 <getc@plt+0x12b4>
   11f08:	mov	r1, r6
   11f0c:	b	12014 <error@@Base+0x2f0>
   11f10:	ldr	r3, [r1, #8]
   11f14:	cmp	r3, #0
   11f18:	beq	11f40 <error@@Base+0x21c>
   11f1c:	ldrb	r2, [r5, #2]
   11f20:	cmp	r2, #0
   11f24:	bne	11f40 <error@@Base+0x21c>
   11f28:	ldrb	r2, [r3]
   11f2c:	cmp	r2, #0
   11f30:	bne	11f4c <error@@Base+0x228>
   11f34:	mov	r2, #1
   11f38:	strb	r2, [r3]
   11f3c:	b	11f64 <error@@Base+0x240>
   11f40:	mov	r1, r5
   11f44:	ldr	r0, [pc, #292]	; 12070 <error@@Base+0x34c>
   11f48:	bl	11db0 <error@@Base+0x8c>
   11f4c:	mov	r1, r5
   11f50:	ldr	r0, [pc, #284]	; 12074 <error@@Base+0x350>
   11f54:	bl	11db0 <error@@Base+0x8c>
   11f58:	add	r3, r7, #1
   11f5c:	str	r5, [sl, r7, lsl #2]
   11f60:	sxth	r7, r3
   11f64:	add	r4, r4, #1
   11f68:	sxth	r4, r4
   11f6c:	str	r4, [sp, #4]
   11f70:	ldr	r3, [sp, #8]
   11f74:	ldr	r8, [r3]
   11f78:	cmp	r4, r8
   11f7c:	bge	11ee8 <error@@Base+0x1c4>
   11f80:	lsl	fp, r4, #2
   11f84:	ldr	r5, [sl, r4, lsl #2]
   11f88:	ldrb	r3, [r5]
   11f8c:	cmp	r3, #45	; 0x2d
   11f90:	bne	11f58 <error@@Base+0x234>
   11f94:	ldrb	r9, [r5, #1]
   11f98:	cmp	r9, #0
   11f9c:	beq	11f58 <error@@Base+0x234>
   11fa0:	mov	r0, r5
   11fa4:	bl	109b8 <strlen@plt>
   11fa8:	mov	r2, r0
   11fac:	mov	r1, r5
   11fb0:	ldr	r0, [pc, #192]	; 12078 <error@@Base+0x354>
   11fb4:	bl	10a0c <strncmp@plt>
   11fb8:	cmp	r0, #0
   11fbc:	beq	11f00 <error@@Base+0x1dc>
   11fc0:	ldr	r3, [sp, #4]
   11fc4:	add	r3, r3, #1
   11fc8:	cmp	r3, r8
   11fcc:	addlt	r3, sl, fp
   11fd0:	ldrlt	r0, [r3, #4]
   11fd4:	movge	r0, #0
   11fd8:	cmp	r6, #0
   11fdc:	beq	11f40 <error@@Base+0x21c>
   11fe0:	ldrb	r2, [r6]
   11fe4:	cmp	r9, r2
   11fe8:	cmpne	r2, #0
   11fec:	beq	11f08 <error@@Base+0x1e4>
   11ff0:	mov	r3, #0
   11ff4:	add	r3, r3, #1
   11ff8:	sxth	r3, r3
   11ffc:	add	r2, r3, r3, lsl #1
   12000:	add	r1, r6, r2, lsl #2
   12004:	ldrb	r2, [r6, r2, lsl #2]
   12008:	cmp	r9, r2
   1200c:	cmpne	r2, #0
   12010:	bne	11ff4 <error@@Base+0x2d0>
   12014:	cmp	r2, #0
   12018:	beq	11f40 <error@@Base+0x21c>
   1201c:	ldr	r3, [r1, #4]
   12020:	cmp	r3, #0
   12024:	beq	11f10 <error@@Base+0x1ec>
   12028:	ldrb	r2, [r5, #2]
   1202c:	cmp	r2, #0
   12030:	cmpeq	r0, #0
   12034:	beq	11f10 <error@@Base+0x1ec>
   12038:	ldr	r1, [r3]
   1203c:	cmp	r1, #0
   12040:	bne	11f4c <error@@Base+0x228>
   12044:	cmp	r2, #0
   12048:	addne	r0, r5, #2
   1204c:	str	r0, [r3]
   12050:	ldrb	r3, [r5, #2]
   12054:	cmp	r3, #0
   12058:	addeq	r4, r4, #1
   1205c:	sxtheq	r4, r4
   12060:	b	11f64 <error@@Base+0x240>
   12064:	addseq	r6, fp, r8, ror #25
   12068:	andeq	r1, r1, ip, ror sp
   1206c:	muleq	r2, r4, r0
   12070:	ldrdeq	r3, [r1], -r4
   12074:	andeq	r3, r1, r4, ror #13
   12078:	andeq	r3, r1, ip, asr #13
   1207c:	push	{lr}		; (str lr, [sp, #-4]!)
   12080:	sub	sp, sp, #12
   12084:	ldr	r3, [pc, #36]	; 120b0 <error@@Base+0x38c>
   12088:	ldr	r2, [r3]
   1208c:	ldr	r3, [pc, #32]	; 120b4 <error@@Base+0x390>
   12090:	ldr	ip, [r3]
   12094:	str	r1, [sp]
   12098:	mov	r3, r0
   1209c:	ldr	r1, [pc, #20]	; 120b8 <error@@Base+0x394>
   120a0:	mov	r0, ip
   120a4:	bl	109c4 <fprintf@plt>
   120a8:	add	sp, sp, #12
   120ac:	pop	{pc}		; (ldr pc, [sp], #4)
   120b0:	addseq	r6, fp, r8, ror #25
   120b4:	andeq	r4, r2, r0, lsr #1
   120b8:	muleq	r1, r0, r6
   120bc:	push	{r4, r5, r6, lr}
   120c0:	mov	r4, r0
   120c4:	mov	r5, r2
   120c8:	uxtb	r6, r1
   120cc:	mov	r1, #16
   120d0:	mov	r0, #1
   120d4:	bl	11d60 <error@@Base+0x3c>
   120d8:	mov	r1, r0
   120dc:	strb	r6, [r0, #8]
   120e0:	str	r5, [r0, #12]
   120e4:	mov	r0, r4
   120e8:	bl	12770 <error@@Base+0xa4c>
   120ec:	pop	{r4, r5, r6, pc}
   120f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120f4:	sub	sp, sp, #116	; 0x74
   120f8:	str	r0, [sp]
   120fc:	mov	sl, r2
   12100:	ldrb	r3, [r2]
   12104:	mov	r0, r1
   12108:	adds	r2, r3, #0
   1210c:	movne	r2, #1
   12110:	cmp	r1, #0
   12114:	movne	r2, #0
   12118:	cmp	r2, #0
   1211c:	bne	12180 <error@@Base+0x45c>
   12120:	ldr	r3, [sp]
   12124:	ldr	r3, [r3, #4]
   12128:	str	r3, [sp, #4]
   1212c:	ldr	r1, [pc, #820]	; 12468 <error@@Base+0x744>
   12130:	bl	11df8 <error@@Base+0xd4>
   12134:	mov	r6, r0
   12138:	ldrb	r3, [sl]
   1213c:	cmp	r3, #0
   12140:	bne	1218c <error@@Base+0x468>
   12144:	ldrb	r8, [sl, #1]
   12148:	ldr	fp, [sl, #4]
   1214c:	cmp	fp, #0
   12150:	moveq	fp, #94	; 0x5e
   12154:	mov	r0, r6
   12158:	bl	10a24 <getc@plt>
   1215c:	cmn	r0, #1
   12160:	beq	122cc <error@@Base+0x5a8>
   12164:	ldr	r3, [pc, #768]	; 1246c <error@@Base+0x748>
   12168:	ldrsb	r4, [r3, r0]
   1216c:	cmp	r4, #0
   12170:	ble	12224 <error@@Base+0x500>
   12174:	mov	r7, #0
   12178:	mov	r9, r3
   1217c:	b	1226c <error@@Base+0x548>
   12180:	ldr	r1, [pc, #744]	; 12470 <error@@Base+0x74c>
   12184:	ldr	r0, [pc, #744]	; 12474 <error@@Base+0x750>
   12188:	bl	11db0 <error@@Base+0x8c>
   1218c:	mov	r2, r0
   12190:	mov	r1, #99	; 0x63
   12194:	add	r0, sp, #12
   12198:	bl	108f8 <fgets@plt>
   1219c:	cmp	r0, #0
   121a0:	beq	121bc <error@@Base+0x498>
   121a4:	mov	r2, #51	; 0x33
   121a8:	ldr	r1, [pc, #712]	; 12478 <error@@Base+0x754>
   121ac:	add	r0, sp, #12
   121b0:	bl	10a0c <strncmp@plt>
   121b4:	cmp	r0, #0
   121b8:	beq	121d0 <error@@Base+0x4ac>
   121bc:	mov	r0, r6
   121c0:	bl	1091c <rewind@plt>
   121c4:	mov	r3, #0
   121c8:	strb	r3, [sl, #11]
   121cc:	b	12144 <error@@Base+0x420>
   121d0:	mov	r4, #0
   121d4:	mov	r5, #99	; 0x63
   121d8:	ldr	r7, [pc, #668]	; 1247c <error@@Base+0x758>
   121dc:	mov	r2, r6
   121e0:	mov	r1, r5
   121e4:	add	r0, sp, #12
   121e8:	bl	108f8 <fgets@plt>
   121ec:	cmp	r0, #0
   121f0:	beq	1221c <error@@Base+0x4f8>
   121f4:	mov	r1, r7
   121f8:	add	r0, sp, #12
   121fc:	bl	108c8 <strcmp@plt>
   12200:	cmp	r0, #0
   12204:	addeq	r4, r4, #1
   12208:	sxtheq	r4, r4
   1220c:	cmp	r4, #1
   12210:	ble	121dc <error@@Base+0x4b8>
   12214:	mov	r3, #1
   12218:	b	121c8 <error@@Base+0x4a4>
   1221c:	mov	r3, #1
   12220:	b	121c8 <error@@Base+0x4a4>
   12224:	ldr	r0, [pc, #596]	; 12480 <error@@Base+0x75c>
   12228:	bl	11d24 <error@@Base>
   1222c:	ldr	r0, [pc, #592]	; 12484 <error@@Base+0x760>
   12230:	bl	11d24 <error@@Base>
   12234:	bl	109f4 <utf8proc_errmsg@plt>
   12238:	bl	11d24 <error@@Base>
   1223c:	ldr	r2, [sp, #12]
   12240:	mov	r1, r7
   12244:	ldr	r0, [sp]
   12248:	bl	120bc <error@@Base+0x398>
   1224c:	mov	r7, #0
   12250:	mov	r0, r6
   12254:	bl	10a24 <getc@plt>
   12258:	cmn	r0, #1
   1225c:	beq	122cc <error@@Base+0x5a8>
   12260:	ldrsb	r4, [r9, r0]
   12264:	cmp	r4, #0
   12268:	ble	12224 <error@@Base+0x500>
   1226c:	strb	r0, [sp, #8]
   12270:	cmp	r4, #1
   12274:	ble	12298 <error@@Base+0x574>
   12278:	sub	r5, r4, #1
   1227c:	mov	r3, r6
   12280:	mov	r2, r5
   12284:	mov	r1, #1
   12288:	add	r0, sp, #9
   1228c:	bl	10958 <fread@plt>
   12290:	cmp	r5, r0
   12294:	bne	1222c <error@@Base+0x508>
   12298:	add	r2, sp, #12
   1229c:	mov	r1, #4
   122a0:	add	r0, sp, #8
   122a4:	bl	10964 <utf8proc_iterate@plt>
   122a8:	cmp	r0, r4
   122ac:	bne	12234 <error@@Base+0x510>
   122b0:	cmp	r8, #0
   122b4:	beq	1223c <error@@Base+0x518>
   122b8:	ldr	r3, [sp, #12]
   122bc:	cmp	fp, r3
   122c0:	moveq	r7, #1
   122c4:	bne	1223c <error@@Base+0x518>
   122c8:	b	12250 <error@@Base+0x52c>
   122cc:	mov	r0, r6
   122d0:	bl	11bf0 <getc@plt+0x11cc>
   122d4:	ldrb	r3, [sl, #9]
   122d8:	cmp	r3, #0
   122dc:	beq	12420 <error@@Base+0x6fc>
   122e0:	ldr	r3, [sp, #4]
   122e4:	cmp	r3, #0
   122e8:	ldrne	r6, [r3, #4]
   122ec:	ldreq	r3, [sp]
   122f0:	ldreq	r6, [r3]
   122f4:	cmp	r6, #0
   122f8:	beq	12420 <error@@Base+0x6fc>
   122fc:	mov	r5, r6
   12300:	mov	r7, #32
   12304:	mov	r9, #1
   12308:	mov	r8, #0
   1230c:	b	12340 <error@@Base+0x61c>
   12310:	cmp	r4, #160	; 0xa0
   12314:	beq	12330 <error@@Base+0x60c>
   12318:	ldrsh	r3, [r0]
   1231c:	sub	r3, r3, #23
   12320:	cmp	r3, #2
   12324:	bhi	12334 <error@@Base+0x610>
   12328:	mov	r3, r9
   1232c:	b	12370 <error@@Base+0x64c>
   12330:	str	r7, [r5, #12]
   12334:	ldr	r5, [r5, #4]
   12338:	cmp	r5, #0
   1233c:	beq	123b4 <error@@Base+0x690>
   12340:	ldr	r4, [r5, #12]
   12344:	mov	r0, r4
   12348:	bl	108ec <utf8proc_get_property@plt>
   1234c:	cmp	r4, #13
   12350:	bhi	12310 <error@@Base+0x5ec>
   12354:	cmp	r4, #11
   12358:	bcs	12330 <error@@Base+0x60c>
   1235c:	cmp	r4, #9
   12360:	beq	12330 <error@@Base+0x60c>
   12364:	cmp	r4, #10
   12368:	moveq	r3, r8
   1236c:	bne	12318 <error@@Base+0x5f4>
   12370:	cmp	r3, #0
   12374:	beq	12334 <error@@Base+0x610>
   12378:	b	12330 <error@@Base+0x60c>
   1237c:	eor	r2, r5, #1
   12380:	cmp	r4, #0
   12384:	orreq	r2, r2, #1
   12388:	cmp	r2, #0
   1238c:	bne	123dc <error@@Base+0x6b8>
   12390:	ldr	r2, [r4, #12]
   12394:	cmp	r2, #32
   12398:	cmpne	r2, #10
   1239c:	beq	123dc <error@@Base+0x6b8>
   123a0:	subs	r5, r3, #10
   123a4:	movne	r5, #1
   123a8:	mov	r6, r4
   123ac:	cmp	r4, #0
   123b0:	beq	12420 <error@@Base+0x6fc>
   123b4:	ldr	r4, [r6, #4]
   123b8:	ldr	r3, [r6, #12]
   123bc:	cmp	r3, #32
   123c0:	beq	1237c <error@@Base+0x658>
   123c4:	eor	r2, r5, #1
   123c8:	cmp	r3, #10
   123cc:	movne	r2, #0
   123d0:	andeq	r2, r2, #1
   123d4:	cmp	r2, #0
   123d8:	beq	123a0 <error@@Base+0x67c>
   123dc:	cmp	r4, #0
   123e0:	moveq	r3, #0
   123e4:	andne	r3, r5, #1
   123e8:	cmp	r3, #0
   123ec:	beq	12408 <error@@Base+0x6e4>
   123f0:	ldr	r3, [r4, #12]
   123f4:	cmp	r3, #32
   123f8:	ldrbeq	r3, [r4, #8]
   123fc:	ldrbeq	r2, [r6, #8]
   12400:	orreq	r3, r3, r2
   12404:	strbeq	r3, [r4, #8]
   12408:	mov	r1, r6
   1240c:	ldr	r0, [sp]
   12410:	bl	127b4 <error@@Base+0xa90>
   12414:	mov	r0, r6
   12418:	bl	108e0 <free@plt>
   1241c:	b	123a8 <error@@Base+0x684>
   12420:	ldrb	r3, [sl, #10]
   12424:	cmp	r3, #0
   12428:	beq	12460 <error@@Base+0x73c>
   1242c:	ldr	r3, [sp, #4]
   12430:	cmp	r3, #0
   12434:	ldrne	r4, [r3, #4]
   12438:	ldreq	r3, [sp]
   1243c:	ldreq	r4, [r3]
   12440:	cmp	r4, #0
   12444:	beq	12460 <error@@Base+0x73c>
   12448:	ldr	r0, [r4, #12]
   1244c:	bl	10934 <utf8proc_tolower@plt>
   12450:	str	r0, [r4, #12]
   12454:	ldr	r4, [r4, #4]
   12458:	cmp	r4, #0
   1245c:	bne	12448 <error@@Base+0x724>
   12460:	add	sp, sp, #116	; 0x74
   12464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12468:	ldrdeq	r2, [r1], -r8
   1246c:	andeq	r3, r2, r8, lsl #28
   12470:	strdeq	r3, [r1], -r8
   12474:	andeq	r3, r1, r4, lsl #14
   12478:	andeq	r3, r1, r4, lsl r7
   1247c:	andeq	r3, r1, ip, asr #14
   12480:	andeq	r3, r1, r4, lsl #15
   12484:	muleq	r1, ip, r7
   12488:	push	{r4, lr}
   1248c:	bl	10904 <utf8proc_encode_char@plt>
   12490:	cmp	r0, #0
   12494:	ble	124a0 <error@@Base+0x77c>
   12498:	sxtb	r0, r0
   1249c:	pop	{r4, pc}
   124a0:	ldr	r0, [pc]	; 124a8 <error@@Base+0x784>
   124a4:	bl	11d24 <error@@Base>
   124a8:			; <UNDEFINED> instruction: 0x000137b4
   124ac:	push	{r4, r5, r6, r7, r8, lr}
   124b0:	mov	r4, r1
   124b4:	mov	r6, r2
   124b8:	uxtb	r0, r0
   124bc:	uxtb	r7, r3
   124c0:	cmp	r0, #0
   124c4:	moveq	r5, #0
   124c8:	bne	1251c <error@@Base+0x7f8>
   124cc:	cmp	r4, #10
   124d0:	beq	12530 <error@@Base+0x80c>
   124d4:	mov	r0, r4
   124d8:	bl	108ec <utf8proc_get_property@plt>
   124dc:	cmp	r4, #32
   124e0:	beq	1254c <error@@Base+0x828>
   124e4:	ldrsh	r3, [r0]
   124e8:	cmp	r3, #1
   124ec:	blt	12500 <error@@Base+0x7dc>
   124f0:	cmp	r3, #22
   124f4:	ble	1254c <error@@Base+0x828>
   124f8:	cmp	r3, #29
   124fc:	beq	1254c <error@@Base+0x828>
   12500:	cmp	r4, #255	; 0xff
   12504:	mov	r2, r4
   12508:	ldrls	r1, [pc, #136]	; 12598 <error@@Base+0x874>
   1250c:	ldrhi	r1, [pc, #136]	; 1259c <error@@Base+0x878>
   12510:	add	r0, r6, r5
   12514:	bl	109e8 <sprintf@plt>
   12518:	pop	{r4, r5, r6, r7, r8, pc}
   1251c:	mov	r1, r2
   12520:	mov	r0, #94	; 0x5e
   12524:	bl	12488 <error@@Base+0x764>
   12528:	sxth	r5, r0
   1252c:	b	124cc <error@@Base+0x7a8>
   12530:	ldr	r3, [pc, #104]	; 125a0 <error@@Base+0x87c>
   12534:	ldr	r1, [pc, #104]	; 125a4 <error@@Base+0x880>
   12538:	cmp	r7, #0
   1253c:	moveq	r1, r3
   12540:	add	r0, r6, r5
   12544:	bl	109e8 <sprintf@plt>
   12548:	pop	{r4, r5, r6, r7, r8, pc}
   1254c:	mov	r0, r4
   12550:	bl	109ac <utf8proc_category@plt>
   12554:	sub	r0, r0, #6
   12558:	cmp	r0, #2
   1255c:	bls	12580 <error@@Base+0x85c>
   12560:	add	r1, r6, r5
   12564:	mov	r0, r4
   12568:	bl	12488 <error@@Base+0x764>
   1256c:	add	r0, r0, r5
   12570:	sxth	r0, r0
   12574:	mov	r3, #0
   12578:	strb	r3, [r6, r0]
   1257c:	pop	{r4, r5, r6, r7, r8, pc}
   12580:	add	r1, r6, r5
   12584:	ldr	r0, [pc, #28]	; 125a8 <error@@Base+0x884>
   12588:	bl	12488 <error@@Base+0x764>
   1258c:	add	r5, r0, r5
   12590:	sxth	r5, r5
   12594:	b	12560 <error@@Base+0x83c>
   12598:	ldrdeq	r3, [r1], -r4
   1259c:	ldrdeq	r3, [r1], -ip
   125a0:	andeq	r2, r1, r0, lsr #19
   125a4:	andeq	r3, r1, ip, asr #15
   125a8:	andeq	r2, r0, ip, asr #11
   125ac:	push	{r4, r5, r6, r7, lr}
   125b0:	sub	sp, sp, #20
   125b4:	mov	r7, r0
   125b8:	mov	r0, r1
   125bc:	mov	r4, r2
   125c0:	ldr	r1, [pc, #160]	; 12668 <error@@Base+0x944>
   125c4:	bl	11df8 <error@@Base+0xd4>
   125c8:	mov	r5, r0
   125cc:	cmp	r4, #0
   125d0:	beq	1261c <error@@Base+0x8f8>
   125d4:	mov	r3, r0
   125d8:	mov	r2, #55	; 0x37
   125dc:	mov	r1, #1
   125e0:	ldr	r0, [pc, #132]	; 1266c <error@@Base+0x948>
   125e4:	bl	1094c <fwrite@plt>
   125e8:	ldr	r6, [pc, #128]	; 12670 <error@@Base+0x94c>
   125ec:	mov	r3, r5
   125f0:	mov	r2, #55	; 0x37
   125f4:	mov	r1, #1
   125f8:	mov	r0, r6
   125fc:	bl	1094c <fwrite@plt>
   12600:	mov	r0, r5
   12604:	blx	r4
   12608:	mov	r3, r5
   1260c:	mov	r2, #55	; 0x37
   12610:	mov	r1, #1
   12614:	mov	r0, r6
   12618:	bl	1094c <fwrite@plt>
   1261c:	ldr	r4, [r7]
   12620:	cmp	r4, #0
   12624:	beq	12658 <error@@Base+0x934>
   12628:	mov	r6, #0
   1262c:	mov	r3, r6
   12630:	add	r2, sp, #4
   12634:	ldr	r1, [r4, #12]
   12638:	ldrb	r0, [r4, #8]
   1263c:	bl	124ac <error@@Base+0x788>
   12640:	mov	r1, r5
   12644:	add	r0, sp, #4
   12648:	bl	10a00 <fputs@plt>
   1264c:	ldr	r4, [r4, #4]
   12650:	cmp	r4, #0
   12654:	bne	1262c <error@@Base+0x908>
   12658:	mov	r0, r5
   1265c:	bl	11bf0 <getc@plt+0x11cc>
   12660:	add	sp, sp, #20
   12664:	pop	{r4, r5, r6, r7, pc}
   12668:	andeq	r2, r1, ip, asr #20
   1266c:	andeq	r3, r1, r4, lsl r7
   12670:	andeq	r3, r1, ip, asr #14
   12674:	push	{r4, r5, r6, r7, r8, lr}
   12678:	sub	sp, sp, #8
   1267c:	mov	r3, #0
   12680:	str	r3, [sp, #4]
   12684:	ldrb	r3, [r1]
   12688:	cmp	r3, #0
   1268c:	beq	126dc <error@@Base+0x9b8>
   12690:	mov	r6, r0
   12694:	mov	r4, r1
   12698:	mvn	r5, #0
   1269c:	mov	r7, #0
   126a0:	add	r2, sp, #4
   126a4:	mov	r1, r5
   126a8:	mov	r0, r4
   126ac:	bl	10964 <utf8proc_iterate@plt>
   126b0:	subs	r8, r0, #0
   126b4:	ble	126e4 <error@@Base+0x9c0>
   126b8:	ldr	r2, [sp, #4]
   126bc:	mov	r1, r7
   126c0:	mov	r0, r6
   126c4:	bl	120bc <error@@Base+0x398>
   126c8:	ldrb	r3, [r4, r8]!
   126cc:	cmp	r3, #0
   126d0:	bne	126a0 <error@@Base+0x97c>
   126d4:	mov	r0, #1
   126d8:	b	126e8 <error@@Base+0x9c4>
   126dc:	mov	r0, #1
   126e0:	b	126e8 <error@@Base+0x9c4>
   126e4:	mov	r0, #0
   126e8:	add	sp, sp, #8
   126ec:	pop	{r4, r5, r6, r7, r8, pc}
   126f0:	push	{r4, lr}
   126f4:	mov	r4, r0
   126f8:	str	r1, [r2]
   126fc:	str	r3, [r2, #4]
   12700:	cmp	r1, #0
   12704:	strne	r2, [r1, #4]
   12708:	streq	r2, [r0]
   1270c:	cmp	r3, #0
   12710:	strne	r2, [r3]
   12714:	streq	r2, [r0, #4]
   12718:	ldr	r0, [r0, #8]
   1271c:	cmp	r0, #0
   12720:	beq	12730 <error@@Base+0xa0c>
   12724:	bl	108e0 <free@plt>
   12728:	mov	r3, #0
   1272c:	str	r3, [r4, #8]
   12730:	ldr	r3, [r4, #12]
   12734:	add	r3, r3, #1
   12738:	str	r3, [r4, #12]
   1273c:	pop	{r4, pc}
   12740:	mov	r3, #0
   12744:	str	r3, [r0, #4]
   12748:	str	r3, [r0]
   1274c:	str	r3, [r0, #8]
   12750:	str	r3, [r0, #12]
   12754:	bx	lr
   12758:	push	{r4, lr}
   1275c:	ldr	r3, [r0]
   12760:	mov	r2, r1
   12764:	mov	r1, #0
   12768:	bl	126f0 <error@@Base+0x9cc>
   1276c:	pop	{r4, pc}
   12770:	push	{r4, lr}
   12774:	mov	r3, #0
   12778:	mov	r2, r1
   1277c:	ldr	r1, [r0, #4]
   12780:	bl	126f0 <error@@Base+0x9cc>
   12784:	pop	{r4, pc}
   12788:	push	{r4, lr}
   1278c:	mov	ip, r2
   12790:	mov	r3, r2
   12794:	mov	r2, r1
   12798:	ldr	r1, [ip]
   1279c:	bl	126f0 <error@@Base+0x9cc>
   127a0:	pop	{r4, pc}
   127a4:	push	{r4, lr}
   127a8:	ldr	r3, [r1, #4]
   127ac:	bl	126f0 <error@@Base+0x9cc>
   127b0:	pop	{r4, pc}
   127b4:	push	{r4, lr}
   127b8:	mov	r4, r0
   127bc:	ldr	r3, [r1]
   127c0:	cmp	r3, #0
   127c4:	ldrne	r2, [r1, #4]
   127c8:	strne	r2, [r3, #4]
   127cc:	ldreq	r3, [r1, #4]
   127d0:	streq	r3, [r0]
   127d4:	ldr	r3, [r1, #4]
   127d8:	cmp	r3, #0
   127dc:	ldrne	r2, [r1]
   127e0:	strne	r2, [r3]
   127e4:	ldreq	r3, [r1]
   127e8:	streq	r3, [r0, #4]
   127ec:	mov	r3, #0
   127f0:	str	r3, [r1, #4]
   127f4:	str	r3, [r1]
   127f8:	ldr	r0, [r0, #8]
   127fc:	cmp	r0, r3
   12800:	beq	12810 <error@@Base+0xaec>
   12804:	bl	108e0 <free@plt>
   12808:	mov	r3, #0
   1280c:	str	r3, [r4, #8]
   12810:	ldr	r3, [r4, #12]
   12814:	sub	r3, r3, #1
   12818:	str	r3, [r4, #12]
   1281c:	pop	{r4, pc}
   12820:	ldr	r3, [r0, #8]
   12824:	cmp	r3, #0
   12828:	bxne	lr
   1282c:	ldr	r3, [r0, #12]
   12830:	cmp	r3, #0
   12834:	bxeq	lr
   12838:	push	{r4, lr}
   1283c:	mov	r4, r0
   12840:	mov	r1, #4
   12844:	mov	r0, r3
   12848:	bl	11d60 <error@@Base+0x3c>
   1284c:	str	r0, [r4, #8]
   12850:	ldr	r3, [r4]
   12854:	cmp	r3, #0
   12858:	popeq	{r4, pc}
   1285c:	mov	r2, #0
   12860:	ldr	r1, [r4, #8]
   12864:	str	r3, [r1, r2]
   12868:	ldr	r3, [r3, #4]
   1286c:	add	r2, r2, #4
   12870:	cmp	r3, #0
   12874:	bne	12860 <error@@Base+0xb3c>
   12878:	pop	{r4, pc}
   1287c:	push	{r4, r5, r6, lr}
   12880:	mov	r5, r0
   12884:	mov	r6, r1
   12888:	ldr	r4, [r0]
   1288c:	cmp	r4, #0
   12890:	popeq	{r4, r5, r6, pc}
   12894:	mov	r1, r4
   12898:	mov	r0, r5
   1289c:	bl	127b4 <error@@Base+0xa90>
   128a0:	mov	r0, r4
   128a4:	blx	r6
   128a8:	ldr	r4, [r5]
   128ac:	cmp	r4, #0
   128b0:	bne	12894 <error@@Base+0xb70>
   128b4:	pop	{r4, r5, r6, pc}
   128b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   128bc:	mov	r7, r0
   128c0:	ldr	r6, [pc, #72]	; 12910 <error@@Base+0xbec>
   128c4:	ldr	r5, [pc, #72]	; 12914 <error@@Base+0xbf0>
   128c8:	add	r6, pc, r6
   128cc:	add	r5, pc, r5
   128d0:	sub	r6, r6, r5
   128d4:	mov	r8, r1
   128d8:	mov	r9, r2
   128dc:	bl	1089c <calloc@plt-0x20>
   128e0:	asrs	r6, r6, #2
   128e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   128e8:	mov	r4, #0
   128ec:	add	r4, r4, #1
   128f0:	ldr	r3, [r5], #4
   128f4:	mov	r2, r9
   128f8:	mov	r1, r8
   128fc:	mov	r0, r7
   12900:	blx	r3
   12904:	cmp	r6, r4
   12908:	bne	128ec <error@@Base+0xbc8>
   1290c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12910:	andeq	r1, r1, r0, lsr r5
   12914:	andeq	r1, r1, r8, lsr #10
   12918:	bx	lr

Disassembly of section .fini:

0001291c <.fini>:
   1291c:	push	{r3, lr}
   12920:	pop	{r3, pc}
