
../repos/sgerbino-table-2fdd8d0/bin/table_validator_test:     file format elf32-littlearm


Disassembly of section .init:

00011b80 <.init>:
   11b80:	push	{r3, lr}
   11b84:	bl	11e24 <_start@@Base+0x3c>
   11b88:	pop	{r3, pc}

Disassembly of section .plt:

00011b8c <raise@plt-0x14>:
   11b8c:	push	{lr}		; (str lr, [sp, #-4]!)
   11b90:	ldr	lr, [pc, #4]	; 11b9c <raise@plt-0x4>
   11b94:	add	lr, pc, lr
   11b98:	ldr	pc, [lr, #8]!
   11b9c:	andeq	r4, r1, r4, ror #8

00011ba0 <raise@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #20, 20	; 0x14000
   11ba8:	ldr	pc, [ip, #1124]!	; 0x464

00011bac <strcmp@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #20, 20	; 0x14000
   11bb4:	ldr	pc, [ip, #1116]!	; 0x45c

00011bb8 <printf@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #20, 20	; 0x14000
   11bc0:	ldr	pc, [ip, #1108]!	; 0x454

00011bc4 <free@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #20, 20	; 0x14000
   11bcc:	ldr	pc, [ip, #1100]!	; 0x44c

00011bd0 <time@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #20, 20	; 0x14000
   11bd8:	ldr	pc, [ip, #1092]!	; 0x444

00011bdc <realloc@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #20, 20	; 0x14000
   11be4:	ldr	pc, [ip, #1084]!	; 0x43c

00011be8 <strcpy@plt>:
   11be8:	add	ip, pc, #0, 12
   11bec:	add	ip, ip, #20, 20	; 0x14000
   11bf0:	ldr	pc, [ip, #1076]!	; 0x434

00011bf4 <malloc@plt>:
   11bf4:	add	ip, pc, #0, 12
   11bf8:	add	ip, ip, #20, 20	; 0x14000
   11bfc:	ldr	pc, [ip, #1068]!	; 0x42c

00011c00 <__libc_start_main@plt>:
   11c00:	add	ip, pc, #0, 12
   11c04:	add	ip, ip, #20, 20	; 0x14000
   11c08:	ldr	pc, [ip, #1060]!	; 0x424

00011c0c <__gmon_start__@plt>:
   11c0c:	add	ip, pc, #0, 12
   11c10:	add	ip, ip, #20, 20	; 0x14000
   11c14:	ldr	pc, [ip, #1052]!	; 0x41c

00011c18 <strlen@plt>:
   11c18:	add	ip, pc, #0, 12
   11c1c:	add	ip, ip, #20, 20	; 0x14000
   11c20:	ldr	pc, [ip, #1044]!	; 0x414

00011c24 <srand@plt>:
   11c24:	add	ip, pc, #0, 12
   11c28:	add	ip, ip, #20, 20	; 0x14000
   11c2c:	ldr	pc, [ip, #1036]!	; 0x40c

00011c30 <snprintf@plt>:
   11c30:	add	ip, pc, #0, 12
   11c34:	add	ip, ip, #20, 20	; 0x14000
   11c38:	ldr	pc, [ip, #1028]!	; 0x404

00011c3c <__isoc99_sscanf@plt>:
   11c3c:	add	ip, pc, #0, 12
   11c40:	add	ip, ip, #20, 20	; 0x14000
   11c44:	ldr	pc, [ip, #1020]!	; 0x3fc

00011c48 <rand@plt>:
   11c48:	add	ip, pc, #0, 12
   11c4c:	add	ip, ip, #20, 20	; 0x14000
   11c50:	ldr	pc, [ip, #1012]!	; 0x3f4

00011c54 <abort@plt>:
   11c54:	add	ip, pc, #0, 12
   11c58:	add	ip, ip, #20, 20	; 0x14000
   11c5c:	ldr	pc, [ip, #1004]!	; 0x3ec

Disassembly of section .text:

00011c60 <main@@Base>:
   11c60:	push	{r4, r5, r6, lr}
   11c64:	sub	sp, sp, #64	; 0x40
   11c68:	add	r0, sp, #4
   11c6c:	bl	11bd0 <time@plt>
   11c70:	bl	11c24 <srand@plt>
   11c74:	bl	11c48 <rand@plt>
   11c78:	mov	r4, r0
   11c7c:	add	r0, sp, #4
   11c80:	bl	11bd0 <time@plt>
   11c84:	bl	11c24 <srand@plt>
   11c88:	bl	11c48 <rand@plt>
   11c8c:	mov	r5, r0
   11c90:	add	r0, sp, #8
   11c94:	bl	11f64 <table_init@@Base>
   11c98:	mov	r1, r4
   11c9c:	add	r0, sp, #8
   11ca0:	bl	14644 <table_row_is_valid@@Base>
   11ca4:	subs	r6, r0, #0
   11ca8:	bne	11d4c <main@@Base+0xec>
   11cac:	mov	r1, r5
   11cb0:	add	r0, sp, #8
   11cb4:	bl	14614 <table_column_is_valid@@Base>
   11cb8:	cmp	r0, #0
   11cbc:	bne	11da0 <main@@Base+0x140>
   11cc0:	mov	r2, r5
   11cc4:	mov	r1, r4
   11cc8:	add	r0, sp, #8
   11ccc:	bl	14674 <table_cell_is_valid@@Base>
   11cd0:	cmp	r0, #0
   11cd4:	bne	11d88 <main@@Base+0x128>
   11cd8:	add	r0, sp, #8
   11cdc:	bl	13514 <table_add_row@@Base>
   11ce0:	mov	r1, r0
   11ce4:	mov	r4, r0
   11ce8:	add	r0, sp, #8
   11cec:	bl	14644 <table_row_is_valid@@Base>
   11cf0:	cmp	r0, #0
   11cf4:	beq	11d74 <main@@Base+0x114>
   11cf8:	mov	r2, #0
   11cfc:	ldr	r1, [pc, #200]	; 11dcc <main@@Base+0x16c>
   11d00:	add	r0, sp, #8
   11d04:	bl	12988 <table_add_column@@Base>
   11d08:	mov	r1, r0
   11d0c:	mov	r5, r0
   11d10:	add	r0, sp, #8
   11d14:	bl	14614 <table_column_is_valid@@Base>
   11d18:	cmp	r0, #0
   11d1c:	beq	11d60 <main@@Base+0x100>
   11d20:	mov	r2, r5
   11d24:	mov	r1, r4
   11d28:	add	r0, sp, #8
   11d2c:	bl	14674 <table_cell_is_valid@@Base>
   11d30:	cmp	r0, #0
   11d34:	beq	11db4 <main@@Base+0x154>
   11d38:	add	r0, sp, #8
   11d3c:	bl	11fac <table_destroy@@Base>
   11d40:	mov	r0, r6
   11d44:	add	sp, sp, #64	; 0x40
   11d48:	pop	{r4, r5, r6, pc}
   11d4c:	mov	r1, r4
   11d50:	ldr	r0, [pc, #120]	; 11dd0 <main@@Base+0x170>
   11d54:	bl	11bb8 <printf@plt>
   11d58:	mvn	r6, #0
   11d5c:	b	11cac <main@@Base+0x4c>
   11d60:	mov	r1, r5
   11d64:	ldr	r0, [pc, #104]	; 11dd4 <main@@Base+0x174>
   11d68:	bl	11bb8 <printf@plt>
   11d6c:	mvn	r6, #0
   11d70:	b	11d20 <main@@Base+0xc0>
   11d74:	mov	r1, r4
   11d78:	ldr	r0, [pc, #88]	; 11dd8 <main@@Base+0x178>
   11d7c:	bl	11bb8 <printf@plt>
   11d80:	mvn	r6, #0
   11d84:	b	11cf8 <main@@Base+0x98>
   11d88:	mov	r2, r5
   11d8c:	mov	r1, r4
   11d90:	ldr	r0, [pc, #68]	; 11ddc <main@@Base+0x17c>
   11d94:	bl	11bb8 <printf@plt>
   11d98:	mvn	r6, #0
   11d9c:	b	11cd8 <main@@Base+0x78>
   11da0:	mov	r1, r5
   11da4:	ldr	r0, [pc, #52]	; 11de0 <main@@Base+0x180>
   11da8:	bl	11bb8 <printf@plt>
   11dac:	mvn	r6, #0
   11db0:	b	11cc0 <main@@Base+0x60>
   11db4:	mov	r2, r5
   11db8:	mov	r1, r4
   11dbc:	ldr	r0, [pc, #32]	; 11de4 <main@@Base+0x184>
   11dc0:	bl	11bb8 <printf@plt>
   11dc4:	mvn	r6, #0
   11dc8:	b	11d38 <main@@Base+0xd8>
   11dcc:	andeq	r5, r1, r4, ror #8
   11dd0:	strdeq	r5, [r1], -r4
   11dd4:	andeq	r5, r1, r8, ror #8
   11dd8:	andeq	r5, r1, r0, asr r4
   11ddc:	andeq	r5, r1, r0, lsr r4
   11de0:	andeq	r5, r1, r0, lsl r4
   11de4:	andeq	r5, r1, r4, lsl #9

00011de8 <_start@@Base>:
   11de8:	mov	fp, #0
   11dec:	mov	lr, #0
   11df0:	pop	{r1}		; (ldr r1, [sp], #4)
   11df4:	mov	r2, sp
   11df8:	push	{r2}		; (str r2, [sp, #-4]!)
   11dfc:	push	{r0}		; (str r0, [sp, #-4]!)
   11e00:	ldr	ip, [pc, #16]	; 11e18 <_start@@Base+0x30>
   11e04:	push	{ip}		; (str ip, [sp, #-4]!)
   11e08:	ldr	r0, [pc, #12]	; 11e1c <_start@@Base+0x34>
   11e0c:	ldr	r3, [pc, #12]	; 11e20 <_start@@Base+0x38>
   11e10:	bl	11c00 <__libc_start_main@plt>
   11e14:	bl	11c54 <abort@plt>
   11e18:	andeq	r5, r1, r4, ror #7
   11e1c:	andeq	r1, r1, r0, ror #24
   11e20:	andeq	r5, r1, r4, lsl #7
   11e24:	ldr	r3, [pc, #20]	; 11e40 <_start@@Base+0x58>
   11e28:	ldr	r2, [pc, #20]	; 11e44 <_start@@Base+0x5c>
   11e2c:	add	r3, pc, r3
   11e30:	ldr	r2, [r3, r2]
   11e34:	cmp	r2, #0
   11e38:	bxeq	lr
   11e3c:	b	11c0c <__gmon_start__@plt>
   11e40:	andeq	r4, r1, ip, asr #3
   11e44:	andeq	r0, r0, ip, asr #32
   11e48:	ldr	r3, [pc, #28]	; 11e6c <_start@@Base+0x84>
   11e4c:	ldr	r0, [pc, #28]	; 11e70 <_start@@Base+0x88>
   11e50:	sub	r3, r3, r0
   11e54:	cmp	r3, #6
   11e58:	bxls	lr
   11e5c:	ldr	r3, [pc, #16]	; 11e74 <_start@@Base+0x8c>
   11e60:	cmp	r3, #0
   11e64:	bxeq	lr
   11e68:	bx	r3
   11e6c:	andeq	r6, r2, fp, asr r0
   11e70:	andeq	r6, r2, r8, asr r0
   11e74:	andeq	r0, r0, r0
   11e78:	ldr	r1, [pc, #36]	; 11ea4 <_start@@Base+0xbc>
   11e7c:	ldr	r0, [pc, #36]	; 11ea8 <_start@@Base+0xc0>
   11e80:	sub	r1, r1, r0
   11e84:	asr	r1, r1, #2
   11e88:	add	r1, r1, r1, lsr #31
   11e8c:	asrs	r1, r1, #1
   11e90:	bxeq	lr
   11e94:	ldr	r3, [pc, #16]	; 11eac <_start@@Base+0xc4>
   11e98:	cmp	r3, #0
   11e9c:	bxeq	lr
   11ea0:	bx	r3
   11ea4:	andeq	r6, r2, r8, asr r0
   11ea8:	andeq	r6, r2, r8, asr r0
   11eac:	andeq	r0, r0, r0
   11eb0:	push	{r4, lr}
   11eb4:	ldr	r4, [pc, #24]	; 11ed4 <_start@@Base+0xec>
   11eb8:	ldrb	r3, [r4]
   11ebc:	cmp	r3, #0
   11ec0:	popne	{r4, pc}
   11ec4:	bl	11e48 <_start@@Base+0x60>
   11ec8:	mov	r3, #1
   11ecc:	strb	r3, [r4]
   11ed0:	pop	{r4, pc}
   11ed4:	andeq	r6, r2, r8, asr r0
   11ed8:	ldr	r0, [pc, #40]	; 11f08 <_start@@Base+0x120>
   11edc:	ldr	r3, [r0]
   11ee0:	cmp	r3, #0
   11ee4:	bne	11eec <_start@@Base+0x104>
   11ee8:	b	11e78 <_start@@Base+0x90>
   11eec:	ldr	r3, [pc, #24]	; 11f0c <_start@@Base+0x124>
   11ef0:	cmp	r3, #0
   11ef4:	beq	11ee8 <_start@@Base+0x100>
   11ef8:	push	{r4, lr}
   11efc:	blx	r3
   11f00:	pop	{r4, lr}
   11f04:	b	11e78 <_start@@Base+0x90>
   11f08:	andeq	r5, r2, r4, lsl pc
   11f0c:	andeq	r0, r0, r0

00011f10 <table_new@@Base>:
   11f10:	push	{r4, lr}
   11f14:	mov	r0, #56	; 0x38
   11f18:	bl	11bf4 <malloc@plt>
   11f1c:	mov	r2, #0
   11f20:	mov	r1, #10
   11f24:	mov	ip, #20
   11f28:	str	ip, [r0, #24]
   11f2c:	str	r2, [r0]
   11f30:	str	r2, [r0, #4]
   11f34:	str	r2, [r0, #12]
   11f38:	str	r2, [r0, #16]
   11f3c:	str	r2, [r0, #20]
   11f40:	str	r2, [r0, #28]
   11f44:	str	r2, [r0, #36]	; 0x24
   11f48:	str	r2, [r0, #40]	; 0x28
   11f4c:	str	r2, [r0, #44]	; 0x2c
   11f50:	str	r2, [r0, #32]
   11f54:	str	r2, [r0, #52]	; 0x34
   11f58:	str	r1, [r0, #8]
   11f5c:	str	r1, [r0, #48]	; 0x30
   11f60:	pop	{r4, pc}

00011f64 <table_init@@Base>:
   11f64:	mov	r3, #0
   11f68:	mov	r2, #10
   11f6c:	mov	r1, #20
   11f70:	str	r1, [r0, #24]
   11f74:	str	r3, [r0]
   11f78:	str	r3, [r0, #4]
   11f7c:	str	r3, [r0, #12]
   11f80:	str	r3, [r0, #16]
   11f84:	str	r3, [r0, #20]
   11f88:	str	r3, [r0, #28]
   11f8c:	str	r3, [r0, #36]	; 0x24
   11f90:	str	r3, [r0, #40]	; 0x28
   11f94:	str	r3, [r0, #44]	; 0x2c
   11f98:	str	r3, [r0, #32]
   11f9c:	str	r3, [r0, #52]	; 0x34
   11fa0:	str	r2, [r0, #8]
   11fa4:	str	r2, [r0, #48]	; 0x30
   11fa8:	bx	lr

00011fac <table_destroy@@Base>:
   11fac:	push	{r4, r5, r6, lr}
   11fb0:	subs	r5, r0, #0
   11fb4:	popeq	{r4, r5, r6, pc}
   11fb8:	mvn	r2, #0
   11fbc:	mov	r1, r2
   11fc0:	mov	r3, #64	; 0x40
   11fc4:	bl	12814 <table_notify@@Base>
   11fc8:	mov	r0, r5
   11fcc:	bl	1350c <table_get_row_length@@Base>
   11fd0:	subs	r6, r0, #0
   11fd4:	movgt	r4, #0
   11fd8:	ble	11ff4 <table_destroy@@Base+0x48>
   11fdc:	mov	r1, r4
   11fe0:	mov	r0, r5
   11fe4:	add	r4, r4, #1
   11fe8:	bl	134b8 <table_row_destroy@@Base>
   11fec:	cmp	r6, r4
   11ff0:	bne	11fdc <table_destroy@@Base+0x30>
   11ff4:	ldr	r0, [r5, #16]
   11ff8:	cmp	r0, #0
   11ffc:	beq	12004 <table_destroy@@Base+0x58>
   12000:	bl	11bc4 <free@plt>
   12004:	mov	r0, r5
   12008:	bl	12904 <table_get_column_length@@Base>
   1200c:	subs	r6, r0, #0
   12010:	movgt	r4, #0
   12014:	ble	12030 <table_destroy@@Base+0x84>
   12018:	mov	r1, r4
   1201c:	mov	r0, r5
   12020:	add	r4, r4, #1
   12024:	bl	128ec <table_column_destroy@@Base>
   12028:	cmp	r6, r4
   1202c:	bne	12018 <table_destroy@@Base+0x6c>
   12030:	ldr	r0, [r5]
   12034:	cmp	r0, #0
   12038:	beq	12040 <table_destroy@@Base+0x94>
   1203c:	bl	11bc4 <free@plt>
   12040:	ldr	r0, [r5, #36]	; 0x24
   12044:	cmp	r0, #0
   12048:	beq	12050 <table_destroy@@Base+0xa4>
   1204c:	bl	11bc4 <free@plt>
   12050:	ldr	r0, [r5, #40]	; 0x28
   12054:	cmp	r0, #0
   12058:	beq	12060 <table_destroy@@Base+0xb4>
   1205c:	bl	11bc4 <free@plt>
   12060:	ldr	r0, [r5, #44]	; 0x2c
   12064:	cmp	r0, #0
   12068:	popeq	{r4, r5, r6, pc}
   1206c:	pop	{r4, r5, r6, lr}
   12070:	b	11bc4 <free@plt>

00012074 <table_delete@@Base>:
   12074:	push	{r4, lr}
   12078:	mov	r4, r0
   1207c:	bl	11fac <table_destroy@@Base>
   12080:	mov	r0, r4
   12084:	pop	{r4, lr}
   12088:	b	11bc4 <free@plt>

0001208c <table_dupe@@Base>:
   1208c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12090:	sub	sp, sp, #20
   12094:	mov	r6, r0
   12098:	bl	1350c <table_get_row_length@@Base>
   1209c:	mov	r4, #0
   120a0:	mov	r9, r0
   120a4:	mov	r0, r6
   120a8:	bl	12904 <table_get_column_length@@Base>
   120ac:	mov	r8, r0
   120b0:	mov	r0, #56	; 0x38
   120b4:	bl	11bf4 <malloc@plt>
   120b8:	mov	r3, #10
   120bc:	mov	r2, #20
   120c0:	cmp	r8, #0
   120c4:	mov	r7, r0
   120c8:	str	r2, [r0, #24]
   120cc:	str	r4, [r0]
   120d0:	str	r4, [r0, #4]
   120d4:	str	r4, [r0, #12]
   120d8:	str	r4, [r0, #16]
   120dc:	str	r4, [r0, #20]
   120e0:	str	r4, [r0, #28]
   120e4:	str	r4, [r0, #36]	; 0x24
   120e8:	str	r4, [r0, #40]	; 0x28
   120ec:	str	r4, [r0, #44]	; 0x2c
   120f0:	str	r4, [r0, #32]
   120f4:	str	r4, [r0, #52]	; 0x34
   120f8:	str	r3, [r0, #8]
   120fc:	str	r3, [r0, #48]	; 0x30
   12100:	ble	1213c <table_dupe@@Base+0xb0>
   12104:	mov	r1, r4
   12108:	mov	r0, r6
   1210c:	bl	12c40 <table_get_column_name@@Base>
   12110:	mov	r1, r4
   12114:	add	r4, r4, #1
   12118:	mov	r5, r0
   1211c:	mov	r0, r6
   12120:	bl	12974 <table_get_column_data_type@@Base>
   12124:	mov	r1, r5
   12128:	mov	r2, r0
   1212c:	mov	r0, r7
   12130:	bl	12988 <table_add_column@@Base>
   12134:	cmp	r8, r4
   12138:	bne	12104 <table_dupe@@Base+0x78>
   1213c:	cmp	r9, #0
   12140:	movgt	r5, #0
   12144:	ble	12214 <table_dupe@@Base+0x188>
   12148:	mov	r0, r7
   1214c:	bl	13514 <table_add_row@@Base>
   12150:	cmp	r8, #0
   12154:	movgt	r4, #0
   12158:	ble	12208 <table_dupe@@Base+0x17c>
   1215c:	mov	r1, r4
   12160:	mov	r0, r6
   12164:	bl	12974 <table_get_column_data_type@@Base>
   12168:	cmp	r0, #23
   1216c:	ldrls	pc, [pc, r0, lsl #2]
   12170:	b	121fc <table_dupe@@Base+0x170>
   12174:	andeq	r2, r1, r0, ror r2
   12178:	andeq	r2, r1, r4, ror #9
   1217c:			; <UNDEFINED> instruction: 0x000124bc
   12180:	muleq	r1, r4, r4
   12184:	andeq	r2, r1, ip, ror #8
   12188:	andeq	r2, r1, r4, lsl #11
   1218c:	andeq	r2, r1, ip, asr r5
   12190:	andeq	r2, r1, r4, lsr r5
   12194:	andeq	r2, r1, ip, lsl #10
   12198:	andeq	r2, r1, r4, asr #8
   1219c:	andeq	r2, r1, ip, lsl r4
   121a0:	strdeq	r2, [r1], -r4
   121a4:	andeq	r2, r1, ip, asr #7
   121a8:	andeq	r2, r1, r4, lsr #7
   121ac:	andeq	r2, r1, ip, ror r3
   121b0:	andeq	r2, r1, r4, asr r3
   121b4:	andeq	r2, r1, r0, lsr r3
   121b8:	andeq	r2, r1, ip, lsl #6
   121bc:	andeq	r2, r1, r8, ror #5
   121c0:	andeq	r2, r1, r0, asr #5
   121c4:	muleq	r1, r8, r2
   121c8:	andeq	r2, r1, r8, asr #4
   121cc:	andeq	r2, r1, r0, lsr #4
   121d0:	ldrdeq	r2, [r1], -r4
   121d4:	mov	r2, r4
   121d8:	mov	r1, r5
   121dc:	mov	r0, r6
   121e0:	bl	13488 <table_get_ptr@@Base>
   121e4:	add	r3, sp, #12
   121e8:	mov	r2, r4
   121ec:	mov	r1, r5
   121f0:	str	r0, [sp, #12]
   121f4:	mov	r0, r7
   121f8:	bl	145b8 <table_set_ptr@@Base>
   121fc:	add	r4, r4, #1
   12200:	cmp	r8, r4
   12204:	bne	1215c <table_dupe@@Base+0xd0>
   12208:	add	r5, r5, #1
   1220c:	cmp	r9, r5
   12210:	bne	12148 <table_dupe@@Base+0xbc>
   12214:	mov	r0, r7
   12218:	add	sp, sp, #20
   1221c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12220:	mov	r2, r4
   12224:	mov	r1, r5
   12228:	mov	r0, r6
   1222c:	bl	132c0 <table_get_bool@@Base>
   12230:	mov	r2, r4
   12234:	mov	r1, r5
   12238:	mov	r3, r0
   1223c:	mov	r0, r7
   12240:	bl	13a2c <table_set_bool@@Base>
   12244:	b	121fc <table_dupe@@Base+0x170>
   12248:	mov	r2, r4
   1224c:	mov	r1, r5
   12250:	mov	r0, r6
   12254:	bl	13478 <table_get_string@@Base>
   12258:	mov	r2, r4
   1225c:	mov	r1, r5
   12260:	mov	r3, r0
   12264:	mov	r0, r7
   12268:	bl	14440 <table_set_string@@Base>
   1226c:	b	121fc <table_dupe@@Base+0x170>
   12270:	mov	r2, r4
   12274:	mov	r1, r5
   12278:	mov	r0, r6
   1227c:	bl	132d4 <table_get_int@@Base>
   12280:	mov	r2, r4
   12284:	mov	r1, r5
   12288:	mov	r3, r0
   1228c:	mov	r0, r7
   12290:	bl	13aa8 <table_set_int@@Base>
   12294:	b	121fc <table_dupe@@Base+0x170>
   12298:	mov	r2, r4
   1229c:	mov	r1, r5
   122a0:	mov	r0, r6
   122a4:	bl	13464 <table_get_uchar@@Base>
   122a8:	mov	r2, r4
   122ac:	mov	r1, r5
   122b0:	mov	r3, r0
   122b4:	mov	r0, r7
   122b8:	bl	1453c <table_set_uchar@@Base>
   122bc:	b	121fc <table_dupe@@Base+0x170>
   122c0:	mov	r2, r4
   122c4:	mov	r1, r5
   122c8:	mov	r0, r6
   122cc:	bl	13450 <table_get_char@@Base>
   122d0:	mov	r2, r4
   122d4:	mov	r1, r5
   122d8:	mov	r3, r0
   122dc:	mov	r0, r7
   122e0:	bl	144c0 <table_set_char@@Base>
   122e4:	b	121fc <table_dupe@@Base+0x170>
   122e8:	mov	r2, r4
   122ec:	mov	r1, r5
   122f0:	mov	r0, r6
   122f4:	bl	1343c <table_get_ldouble@@Base>
   122f8:	mov	r2, r4
   122fc:	mov	r1, r5
   12300:	mov	r0, r7
   12304:	bl	143a8 <table_set_ldouble@@Base>
   12308:	b	121fc <table_dupe@@Base+0x170>
   1230c:	mov	r2, r4
   12310:	mov	r1, r5
   12314:	mov	r0, r6
   12318:	bl	13428 <table_get_double@@Base>
   1231c:	mov	r2, r4
   12320:	mov	r1, r5
   12324:	mov	r0, r7
   12328:	bl	14310 <table_set_double@@Base>
   1232c:	b	121fc <table_dupe@@Base+0x170>
   12330:	mov	r2, r4
   12334:	mov	r1, r5
   12338:	mov	r0, r6
   1233c:	bl	13414 <table_get_float@@Base>
   12340:	mov	r2, r4
   12344:	mov	r1, r5
   12348:	mov	r0, r7
   1234c:	bl	14294 <table_set_float@@Base>
   12350:	b	121fc <table_dupe@@Base+0x170>
   12354:	mov	r2, r4
   12358:	mov	r1, r5
   1235c:	mov	r0, r6
   12360:	bl	13400 <table_get_ullong@@Base>
   12364:	mov	r2, r4
   12368:	strd	r0, [sp]
   1236c:	mov	r1, r5
   12370:	mov	r0, r7
   12374:	bl	1420c <table_set_ullong@@Base>
   12378:	b	121fc <table_dupe@@Base+0x170>
   1237c:	mov	r2, r4
   12380:	mov	r1, r5
   12384:	mov	r0, r6
   12388:	bl	133ec <table_get_llong@@Base>
   1238c:	mov	r2, r4
   12390:	strd	r0, [sp]
   12394:	mov	r1, r5
   12398:	mov	r0, r7
   1239c:	bl	14184 <table_set_llong@@Base>
   123a0:	b	121fc <table_dupe@@Base+0x170>
   123a4:	mov	r2, r4
   123a8:	mov	r1, r5
   123ac:	mov	r0, r6
   123b0:	bl	133d8 <table_get_ulong@@Base>
   123b4:	mov	r2, r4
   123b8:	mov	r1, r5
   123bc:	mov	r3, r0
   123c0:	mov	r0, r7
   123c4:	bl	14108 <table_set_ulong@@Base>
   123c8:	b	121fc <table_dupe@@Base+0x170>
   123cc:	mov	r2, r4
   123d0:	mov	r1, r5
   123d4:	mov	r0, r6
   123d8:	bl	133c4 <table_get_long@@Base>
   123dc:	mov	r2, r4
   123e0:	mov	r1, r5
   123e4:	mov	r3, r0
   123e8:	mov	r0, r7
   123ec:	bl	1408c <table_set_long@@Base>
   123f0:	b	121fc <table_dupe@@Base+0x170>
   123f4:	mov	r2, r4
   123f8:	mov	r1, r5
   123fc:	mov	r0, r6
   12400:	bl	133b0 <table_get_ushort@@Base>
   12404:	mov	r2, r4
   12408:	mov	r1, r5
   1240c:	mov	r3, r0
   12410:	mov	r0, r7
   12414:	bl	14010 <table_set_ushort@@Base>
   12418:	b	121fc <table_dupe@@Base+0x170>
   1241c:	mov	r2, r4
   12420:	mov	r1, r5
   12424:	mov	r0, r6
   12428:	bl	1339c <table_get_short@@Base>
   1242c:	mov	r2, r4
   12430:	mov	r1, r5
   12434:	mov	r3, r0
   12438:	mov	r0, r7
   1243c:	bl	13f94 <table_set_short@@Base>
   12440:	b	121fc <table_dupe@@Base+0x170>
   12444:	mov	r2, r4
   12448:	mov	r1, r5
   1244c:	mov	r0, r6
   12450:	bl	13388 <table_get_uint64@@Base>
   12454:	mov	r2, r4
   12458:	strd	r0, [sp]
   1245c:	mov	r1, r5
   12460:	mov	r0, r7
   12464:	bl	13f0c <table_set_uint64@@Base>
   12468:	b	121fc <table_dupe@@Base+0x170>
   1246c:	mov	r2, r4
   12470:	mov	r1, r5
   12474:	mov	r0, r6
   12478:	bl	13324 <table_get_int16@@Base>
   1247c:	mov	r2, r4
   12480:	mov	r1, r5
   12484:	mov	r3, r0
   12488:	mov	r0, r7
   1248c:	bl	13c98 <table_set_int16@@Base>
   12490:	b	121fc <table_dupe@@Base+0x170>
   12494:	mov	r2, r4
   12498:	mov	r1, r5
   1249c:	mov	r0, r6
   124a0:	bl	13310 <table_get_uint8@@Base>
   124a4:	mov	r2, r4
   124a8:	mov	r1, r5
   124ac:	mov	r3, r0
   124b0:	mov	r0, r7
   124b4:	bl	13c1c <table_set_uint8@@Base>
   124b8:	b	121fc <table_dupe@@Base+0x170>
   124bc:	mov	r2, r4
   124c0:	mov	r1, r5
   124c4:	mov	r0, r6
   124c8:	bl	132fc <table_get_int8@@Base>
   124cc:	mov	r2, r4
   124d0:	mov	r1, r5
   124d4:	mov	r3, r0
   124d8:	mov	r0, r7
   124dc:	bl	13ba0 <table_set_int8@@Base>
   124e0:	b	121fc <table_dupe@@Base+0x170>
   124e4:	mov	r2, r4
   124e8:	mov	r1, r5
   124ec:	mov	r0, r6
   124f0:	bl	132e8 <table_get_uint@@Base>
   124f4:	mov	r2, r4
   124f8:	mov	r1, r5
   124fc:	mov	r3, r0
   12500:	mov	r0, r7
   12504:	bl	13b24 <table_set_uint@@Base>
   12508:	b	121fc <table_dupe@@Base+0x170>
   1250c:	mov	r2, r4
   12510:	mov	r1, r5
   12514:	mov	r0, r6
   12518:	bl	13374 <table_get_int64@@Base>
   1251c:	mov	r2, r4
   12520:	strd	r0, [sp]
   12524:	mov	r1, r5
   12528:	mov	r0, r7
   1252c:	bl	13e88 <table_set_int64@@Base>
   12530:	b	121fc <table_dupe@@Base+0x170>
   12534:	mov	r2, r4
   12538:	mov	r1, r5
   1253c:	mov	r0, r6
   12540:	bl	13360 <table_get_uint32@@Base>
   12544:	mov	r2, r4
   12548:	mov	r1, r5
   1254c:	mov	r3, r0
   12550:	mov	r0, r7
   12554:	bl	13e0c <table_set_uint32@@Base>
   12558:	b	121fc <table_dupe@@Base+0x170>
   1255c:	mov	r2, r4
   12560:	mov	r1, r5
   12564:	mov	r0, r6
   12568:	bl	1334c <table_get_int32@@Base>
   1256c:	mov	r2, r4
   12570:	mov	r1, r5
   12574:	mov	r3, r0
   12578:	mov	r0, r7
   1257c:	bl	13d90 <table_set_int32@@Base>
   12580:	b	121fc <table_dupe@@Base+0x170>
   12584:	mov	r2, r4
   12588:	mov	r1, r5
   1258c:	mov	r0, r6
   12590:	bl	13338 <table_get_uint16@@Base>
   12594:	mov	r2, r4
   12598:	mov	r1, r5
   1259c:	mov	r3, r0
   125a0:	mov	r0, r7
   125a4:	bl	13d14 <table_set_uint16@@Base>
   125a8:	b	121fc <table_dupe@@Base+0x170>

000125ac <table_get_major_version@@Base>:
   125ac:	mov	r0, #0
   125b0:	bx	lr

000125b4 <table_get_minor_version@@Base>:
   125b4:	mov	r0, #0
   125b8:	bx	lr

000125bc <table_get_patch_version@@Base>:
   125bc:	mov	r0, #0
   125c0:	bx	lr

000125c4 <table_get_version@@Base>:
   125c4:	ldr	r0, [pc]	; 125cc <table_get_version@@Base+0x8>
   125c8:	bx	lr
   125cc:	andeq	r5, r1, r4, asr #10

000125d0 <table_get_callback_length@@Base>:
   125d0:	ldr	r0, [r0, #32]
   125d4:	bx	lr

000125d8 <table_register_callback@@Base>:
   125d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   125dc:	ldr	r5, [r0, #32]
   125e0:	ldr	r7, [r0, #36]	; 0x24
   125e4:	cmp	r5, #0
   125e8:	ble	12640 <table_register_callback@@Base+0x68>
   125ec:	mov	ip, #0
   125f0:	sub	lr, r7, #4
   125f4:	b	12604 <table_register_callback@@Base+0x2c>
   125f8:	add	ip, ip, #1
   125fc:	cmp	ip, r5
   12600:	beq	12640 <table_register_callback@@Base+0x68>
   12604:	ldr	r4, [lr, #4]!
   12608:	lsl	r6, ip, #2
   1260c:	cmp	r1, r4
   12610:	bne	125f8 <table_register_callback@@Base+0x20>
   12614:	ldr	r4, [r0, #40]	; 0x28
   12618:	ldr	r4, [r4, ip, lsl #2]
   1261c:	cmp	r2, r4
   12620:	bne	125f8 <table_register_callback@@Base+0x20>
   12624:	cmp	ip, #0
   12628:	beq	12640 <table_register_callback@@Base+0x68>
   1262c:	ldr	r1, [r0, #44]	; 0x2c
   12630:	ldr	r2, [r1, r6]
   12634:	orr	r3, r2, r3
   12638:	str	r3, [r1, r6]
   1263c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12640:	ldr	sl, [r0, #48]	; 0x30
   12644:	mov	r9, r1
   12648:	mov	r8, r0
   1264c:	mov	r1, sl
   12650:	mov	r0, r5
   12654:	mov	r6, r3
   12658:	mov	r4, r2
   1265c:	bl	15354 <table_get_cell_ptr@@Base+0x204>
   12660:	cmp	r1, #0
   12664:	beq	1268c <table_register_callback@@Base+0xb4>
   12668:	str	r9, [r7, r5, lsl #2]
   1266c:	ldr	r3, [r8, #40]	; 0x28
   12670:	str	r4, [r3, r5, lsl #2]
   12674:	ldr	r3, [r8, #44]	; 0x2c
   12678:	str	r6, [r3, r5, lsl #2]
   1267c:	ldr	r3, [r8, #32]
   12680:	add	r3, r3, #1
   12684:	str	r3, [r8, #32]
   12688:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1268c:	ldr	r1, [r8, #52]	; 0x34
   12690:	mov	r0, r7
   12694:	add	r1, sl, r1
   12698:	str	r1, [r8, #52]	; 0x34
   1269c:	lsl	r1, r1, #2
   126a0:	bl	11bdc <realloc@plt>
   126a4:	ldr	r1, [r8, #52]	; 0x34
   126a8:	lsl	r1, r1, #2
   126ac:	str	r0, [r8, #36]	; 0x24
   126b0:	ldr	r0, [r8, #40]	; 0x28
   126b4:	bl	11bdc <realloc@plt>
   126b8:	ldr	r1, [r8, #52]	; 0x34
   126bc:	lsl	r1, r1, #2
   126c0:	str	r0, [r8, #40]	; 0x28
   126c4:	ldr	r0, [r8, #44]	; 0x2c
   126c8:	bl	11bdc <realloc@plt>
   126cc:	ldr	r7, [r8, #36]	; 0x24
   126d0:	ldr	r5, [r8, #32]
   126d4:	str	r0, [r8, #44]	; 0x2c
   126d8:	b	12668 <table_register_callback@@Base+0x90>

000126dc <table_unregister_callback@@Base>:
   126dc:	push	{r4, r5, r6, lr}
   126e0:	ldr	lr, [r0, #32]
   126e4:	cmp	lr, #0
   126e8:	pople	{r4, r5, r6, pc}
   126ec:	ldr	r6, [r0, #36]	; 0x24
   126f0:	mov	r3, #0
   126f4:	sub	r4, r6, #4
   126f8:	b	12708 <table_unregister_callback@@Base+0x2c>
   126fc:	add	r3, r3, #1
   12700:	cmp	r3, lr
   12704:	beq	127d4 <table_unregister_callback@@Base+0xf8>
   12708:	ldr	r5, [r4, #4]!
   1270c:	lsl	ip, r3, #2
   12710:	cmp	r1, r5
   12714:	bne	126fc <table_unregister_callback@@Base+0x20>
   12718:	ldr	r5, [r0, #40]	; 0x28
   1271c:	ldr	r5, [r5, r3, lsl #2]
   12720:	cmp	r2, r5
   12724:	bne	126fc <table_unregister_callback@@Base+0x20>
   12728:	sub	lr, lr, #1
   1272c:	cmp	lr, r3
   12730:	bgt	1273c <table_unregister_callback@@Base+0x60>
   12734:	b	12778 <table_unregister_callback@@Base+0x9c>
   12738:	ldr	r6, [r0, #36]	; 0x24
   1273c:	add	r2, ip, #4
   12740:	add	r3, r3, #1
   12744:	ldr	r1, [r6, r2]
   12748:	str	r1, [r6, ip]
   1274c:	ldr	r1, [r0, #40]	; 0x28
   12750:	ldr	lr, [r1, r2]
   12754:	str	lr, [r1, ip]
   12758:	ldr	r1, [r0, #44]	; 0x2c
   1275c:	ldr	lr, [r1, r2]
   12760:	str	lr, [r1, ip]
   12764:	ldr	lr, [r0, #32]
   12768:	mov	ip, r2
   1276c:	sub	lr, lr, #1
   12770:	cmp	lr, r3
   12774:	bgt	12738 <table_unregister_callback@@Base+0x5c>
   12778:	ldr	r6, [r0, #48]	; 0x30
   1277c:	str	lr, [r0, #32]
   12780:	mov	r4, r0
   12784:	mov	r1, r6
   12788:	mov	r0, lr
   1278c:	bl	15354 <table_get_cell_ptr@@Base+0x204>
   12790:	cmp	r1, #0
   12794:	popne	{r4, r5, r6, pc}
   12798:	ldr	r5, [r4, #52]	; 0x34
   1279c:	sub	r5, r5, r6
   127a0:	cmp	r5, #0
   127a4:	str	r5, [r4, #52]	; 0x34
   127a8:	bne	127d8 <table_unregister_callback@@Base+0xfc>
   127ac:	ldr	r0, [r4, #36]	; 0x24
   127b0:	bl	11bc4 <free@plt>
   127b4:	ldr	r0, [r4, #40]	; 0x28
   127b8:	bl	11bc4 <free@plt>
   127bc:	ldr	r0, [r4, #44]	; 0x2c
   127c0:	bl	11bc4 <free@plt>
   127c4:	str	r5, [r4, #36]	; 0x24
   127c8:	str	r5, [r4, #40]	; 0x28
   127cc:	str	r5, [r4, #44]	; 0x2c
   127d0:	pop	{r4, r5, r6, pc}
   127d4:	pop	{r4, r5, r6, pc}
   127d8:	lsl	r1, r5, #2
   127dc:	ldr	r0, [r4, #36]	; 0x24
   127e0:	bl	11bdc <realloc@plt>
   127e4:	ldr	r1, [r4, #52]	; 0x34
   127e8:	lsl	r1, r1, #2
   127ec:	str	r0, [r4, #36]	; 0x24
   127f0:	ldr	r0, [r4, #40]	; 0x28
   127f4:	bl	11bdc <realloc@plt>
   127f8:	ldr	r1, [r4, #52]	; 0x34
   127fc:	lsl	r1, r1, #2
   12800:	str	r0, [r4, #40]	; 0x28
   12804:	ldr	r0, [r4, #44]	; 0x2c
   12808:	bl	11bdc <realloc@plt>
   1280c:	str	r0, [r4, #44]	; 0x2c
   12810:	pop	{r4, r5, r6, pc}

00012814 <table_notify@@Base>:
   12814:	ldr	ip, [r0, #32]
   12818:	cmp	ip, #0
   1281c:	bxle	lr
   12820:	push	{r4, r5, r6, r7, r8, r9, lr}
   12824:	mov	r6, r3
   12828:	sub	sp, sp, #12
   1282c:	mov	r8, r2
   12830:	mov	r7, r1
   12834:	mov	r5, r0
   12838:	mov	r4, #0
   1283c:	b	1284c <table_notify@@Base+0x38>
   12840:	add	r4, r4, #1
   12844:	cmp	r4, ip
   12848:	bge	12894 <table_notify@@Base+0x80>
   1284c:	ldr	r0, [r5, #44]	; 0x2c
   12850:	ldr	r0, [r0, r4, lsl #2]
   12854:	tst	r6, r0
   12858:	beq	12840 <table_notify@@Base+0x2c>
   1285c:	ldr	r2, [r5, #40]	; 0x28
   12860:	ldr	r0, [r5, #36]	; 0x24
   12864:	mov	r3, r6
   12868:	ldr	r1, [r2, r4, lsl #2]
   1286c:	mov	r2, r8
   12870:	str	r1, [sp]
   12874:	mov	r1, r7
   12878:	ldr	r9, [r0, r4, lsl #2]
   1287c:	mov	r0, r5
   12880:	blx	r9
   12884:	ldr	ip, [r5, #32]
   12888:	add	r4, r4, #1
   1288c:	cmp	r4, ip
   12890:	blt	1284c <table_notify@@Base+0x38>
   12894:	add	sp, sp, #12
   12898:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001289c <table_column_init@@Base>:
   1289c:	add	r1, r1, r1, lsl #1
   128a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   128a4:	lsl	r4, r1, #2
   128a8:	ldr	r6, [r0]
   128ac:	mov	r0, r2
   128b0:	mov	r9, r3
   128b4:	mov	r7, r2
   128b8:	bl	11c18 <strlen@plt>
   128bc:	ldr	r8, [sp, #32]
   128c0:	add	r5, r6, r4
   128c4:	add	r0, r0, #1
   128c8:	bl	11bf4 <malloc@plt>
   128cc:	subs	r3, r0, #0
   128d0:	str	r0, [r6, r4]
   128d4:	beq	128e0 <table_column_init@@Base+0x44>
   128d8:	mov	r1, r7
   128dc:	bl	11be8 <strcpy@plt>
   128e0:	str	r9, [r5, #4]
   128e4:	str	r8, [r5, #8]
   128e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000128ec <table_column_destroy@@Base>:
   128ec:	ldr	r3, [r0]
   128f0:	add	r1, r1, r1, lsl #1
   128f4:	ldr	r0, [r3, r1, lsl #2]
   128f8:	cmp	r0, #0
   128fc:	bxeq	lr
   12900:	b	11bc4 <free@plt>

00012904 <table_get_column_length@@Base>:
   12904:	ldr	r0, [r0, #4]
   12908:	bx	lr

0001290c <table_get_column@@Base>:
   1290c:	push	{r4, r5, r6, r7, r8, lr}
   12910:	ldr	r7, [r0, #4]
   12914:	cmp	r7, #0
   12918:	ble	12968 <table_get_column@@Base+0x5c>
   1291c:	mov	r4, #0
   12920:	mov	r6, r1
   12924:	ldr	r8, [r0]
   12928:	mov	r5, r4
   1292c:	b	1293c <table_get_column@@Base+0x30>
   12930:	add	r5, r5, #1
   12934:	cmp	r7, r5
   12938:	beq	1295c <table_get_column@@Base+0x50>
   1293c:	ldr	r0, [r8, r4]
   12940:	mov	r1, r6
   12944:	bl	11bac <strcmp@plt>
   12948:	add	r4, r4, #12
   1294c:	cmp	r0, #0
   12950:	bne	12930 <table_get_column@@Base+0x24>
   12954:	mov	r0, r5
   12958:	pop	{r4, r5, r6, r7, r8, pc}
   1295c:	mvn	r5, #0
   12960:	mov	r0, r5
   12964:	pop	{r4, r5, r6, r7, r8, pc}
   12968:	mvneq	r5, #0
   1296c:	movne	r5, #0
   12970:	b	12954 <table_get_column@@Base+0x48>

00012974 <table_get_column_data_type@@Base>:
   12974:	ldr	r3, [r0]
   12978:	add	r1, r1, r1, lsl #1
   1297c:	add	r3, r3, r1, lsl #2
   12980:	ldr	r0, [r3, #4]
   12984:	bx	lr

00012988 <table_add_column@@Base>:
   12988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1298c:	mov	r5, r0
   12990:	ldmib	r0, {r0, r6}
   12994:	sub	sp, sp, #12
   12998:	mov	r9, r1
   1299c:	mov	r1, r6
   129a0:	mov	r8, r2
   129a4:	bl	15354 <table_get_cell_ptr@@Base+0x204>
   129a8:	subs	r4, r1, #0
   129ac:	beq	12a5c <table_add_column@@Base+0xd4>
   129b0:	mov	r0, r5
   129b4:	bl	1350c <table_get_row_length@@Base>
   129b8:	ldr	r6, [r5, #4]
   129bc:	add	r4, r6, r6, lsl #1
   129c0:	lsl	r4, r4, #2
   129c4:	mov	r7, r0
   129c8:	mov	r0, r8
   129cc:	bl	13298 <table_get_default_compare_function_for_data_type@@Base>
   129d0:	mov	fp, r0
   129d4:	mov	r0, r9
   129d8:	bl	11c18 <strlen@plt>
   129dc:	ldr	r3, [r5]
   129e0:	add	sl, r3, r4
   129e4:	str	r3, [sp, #4]
   129e8:	add	r0, r0, #1
   129ec:	bl	11bf4 <malloc@plt>
   129f0:	ldr	r3, [sp, #4]
   129f4:	cmp	r0, #0
   129f8:	str	r0, [r3, r4]
   129fc:	beq	12a08 <table_add_column@@Base+0x80>
   12a00:	mov	r1, r9
   12a04:	bl	11be8 <strcpy@plt>
   12a08:	cmp	r7, #0
   12a0c:	stmib	sl, {r8, fp}
   12a10:	ble	12a34 <table_add_column@@Base+0xac>
   12a14:	mov	r4, #0
   12a18:	mov	r1, r4
   12a1c:	mov	r2, r6
   12a20:	mov	r0, r5
   12a24:	add	r4, r4, #1
   12a28:	bl	146f8 <table_cell_init@@Base>
   12a2c:	cmp	r7, r4
   12a30:	bne	12a18 <table_add_column@@Base+0x90>
   12a34:	mov	r0, r5
   12a38:	mov	r3, #8
   12a3c:	ldr	r2, [r5, #4]
   12a40:	mvn	r1, #0
   12a44:	bl	12814 <table_notify@@Base>
   12a48:	ldr	r0, [r5, #4]
   12a4c:	add	r3, r0, #1
   12a50:	str	r3, [r5, #4]
   12a54:	add	sp, sp, #12
   12a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a5c:	ldr	r1, [r5, #12]
   12a60:	ldr	r0, [r5]
   12a64:	add	r6, r6, r1
   12a68:	str	r6, [r5, #12]
   12a6c:	add	r6, r6, r6, lsl #1
   12a70:	lsl	r1, r6, #2
   12a74:	bl	11bdc <realloc@plt>
   12a78:	str	r0, [r5]
   12a7c:	mov	r0, r5
   12a80:	bl	1350c <table_get_row_length@@Base>
   12a84:	subs	r7, r0, #0
   12a88:	ble	129b0 <table_add_column@@Base+0x28>
   12a8c:	mov	r1, r4
   12a90:	mov	r0, r5
   12a94:	bl	136c4 <table_get_row_ptr@@Base>
   12a98:	ldr	r1, [r5, #12]
   12a9c:	add	r4, r4, #1
   12aa0:	lsl	r1, r1, #2
   12aa4:	mov	r6, r0
   12aa8:	ldr	r0, [r0]
   12aac:	bl	11bdc <realloc@plt>
   12ab0:	cmp	r7, r4
   12ab4:	str	r0, [r6]
   12ab8:	bne	12a8c <table_add_column@@Base+0x104>
   12abc:	b	129b0 <table_add_column@@Base+0x28>

00012ac0 <table_remove_column@@Base>:
   12ac0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ac4:	add	r5, r1, r1, lsl #1
   12ac8:	ldr	r3, [r0]
   12acc:	lsl	r5, r5, #2
   12ad0:	mov	r6, r0
   12ad4:	ldr	r0, [r3, r5]
   12ad8:	mov	r9, r1
   12adc:	cmp	r0, #0
   12ae0:	beq	12ae8 <table_remove_column@@Base+0x28>
   12ae4:	bl	11bc4 <free@plt>
   12ae8:	ldr	r4, [r6, #4]
   12aec:	sub	r4, r4, #1
   12af0:	cmp	r9, r4
   12af4:	movlt	r1, r9
   12af8:	bge	12b34 <table_remove_column@@Base+0x74>
   12afc:	ldr	r3, [r6]
   12b00:	add	r0, r5, #12
   12b04:	add	r2, r3, r0
   12b08:	add	r1, r1, #1
   12b0c:	ldr	lr, [r2, #4]
   12b10:	ldr	ip, [r2, #8]
   12b14:	ldr	r7, [r2]
   12b18:	add	r2, r3, r5
   12b1c:	cmp	r1, r4
   12b20:	str	r7, [r3, r5]
   12b24:	str	lr, [r2, #4]
   12b28:	str	ip, [r2, #8]
   12b2c:	mov	r5, r0
   12b30:	bne	12afc <table_remove_column@@Base+0x3c>
   12b34:	mov	r0, r6
   12b38:	bl	1350c <table_get_row_length@@Base>
   12b3c:	subs	r7, r0, #0
   12b40:	lslgt	r8, r9, #2
   12b44:	movgt	r5, #0
   12b48:	ble	12ba4 <table_remove_column@@Base+0xe4>
   12b4c:	mov	r2, r9
   12b50:	mov	r1, r5
   12b54:	mov	r0, r6
   12b58:	bl	14714 <table_cell_destroy@@Base>
   12b5c:	mov	r1, r5
   12b60:	mov	r0, r6
   12b64:	bl	136c4 <table_get_row_ptr@@Base>
   12b68:	cmp	r9, r4
   12b6c:	movlt	r2, r8
   12b70:	movlt	r3, r9
   12b74:	bge	12b98 <table_remove_column@@Base+0xd8>
   12b78:	ldr	ip, [r0]
   12b7c:	add	r1, r2, #4
   12b80:	add	r3, r3, #1
   12b84:	ldr	lr, [ip, r1]
   12b88:	cmp	r3, r4
   12b8c:	str	lr, [ip, r2]
   12b90:	mov	r2, r1
   12b94:	bne	12b78 <table_remove_column@@Base+0xb8>
   12b98:	add	r5, r5, #1
   12b9c:	cmp	r7, r5
   12ba0:	bne	12b4c <table_remove_column@@Base+0x8c>
   12ba4:	ldmib	r6, {r0, r5}
   12ba8:	sub	r0, r0, #1
   12bac:	str	r0, [r6, #4]
   12bb0:	mov	r1, r5
   12bb4:	bl	15354 <table_get_cell_ptr@@Base+0x204>
   12bb8:	subs	r4, r1, #0
   12bbc:	beq	12bdc <table_remove_column@@Base+0x11c>
   12bc0:	mov	r0, r6
   12bc4:	mov	r2, r9
   12bc8:	mov	r3, #16
   12bcc:	mvn	r1, #0
   12bd0:	bl	12814 <table_notify@@Base>
   12bd4:	mov	r0, #0
   12bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bdc:	ldr	r1, [r6, #12]
   12be0:	ldr	r0, [r6]
   12be4:	sub	r1, r1, r5
   12be8:	str	r1, [r6, #12]
   12bec:	add	r1, r1, r1, lsl #1
   12bf0:	lsl	r1, r1, #2
   12bf4:	bl	11bdc <realloc@plt>
   12bf8:	str	r0, [r6]
   12bfc:	mov	r0, r6
   12c00:	bl	1350c <table_get_row_length@@Base>
   12c04:	subs	r7, r0, #0
   12c08:	ble	12bc0 <table_remove_column@@Base+0x100>
   12c0c:	mov	r1, r4
   12c10:	mov	r0, r6
   12c14:	bl	136c4 <table_get_row_ptr@@Base>
   12c18:	ldr	r1, [r6, #12]
   12c1c:	add	r4, r4, #1
   12c20:	lsl	r1, r1, #2
   12c24:	mov	r5, r0
   12c28:	ldr	r0, [r0]
   12c2c:	bl	11bdc <realloc@plt>
   12c30:	cmp	r7, r4
   12c34:	str	r0, [r5]
   12c38:	bne	12c0c <table_remove_column@@Base+0x14c>
   12c3c:	b	12bc0 <table_remove_column@@Base+0x100>

00012c40 <table_get_column_name@@Base>:
   12c40:	ldr	r3, [r0]
   12c44:	add	r1, r1, r1, lsl #1
   12c48:	ldr	r0, [r3, r1, lsl #2]
   12c4c:	bx	lr

00012c50 <table_get_col_ptr@@Base>:
   12c50:	add	r1, r1, r1, lsl #1
   12c54:	ldr	r0, [r0]
   12c58:	add	r0, r0, r1, lsl #2
   12c5c:	bx	lr

00012c60 <table_get_column_compare_function@@Base>:
   12c60:	ldr	r3, [r0]
   12c64:	add	r1, r1, r1, lsl #1
   12c68:	add	r3, r3, r1, lsl #2
   12c6c:	ldr	r0, [r3, #8]
   12c70:	bx	lr

00012c74 <table_set_column_compare_function@@Base>:
   12c74:	ldr	r3, [r0]
   12c78:	add	r1, r1, r1, lsl #1
   12c7c:	add	r3, r3, r1, lsl #2
   12c80:	str	r2, [r3, #8]
   12c84:	bx	lr

00012c88 <table_compare_bool@@Base>:
   12c88:	cmp	r0, #0
   12c8c:	beq	12cbc <table_compare_bool@@Base+0x34>
   12c90:	cmp	r1, #0
   12c94:	beq	12cb4 <table_compare_bool@@Base+0x2c>
   12c98:	ldrb	r2, [r0]
   12c9c:	ldrb	r3, [r1]
   12ca0:	cmp	r2, r3
   12ca4:	bgt	12cb4 <table_compare_bool@@Base+0x2c>
   12ca8:	mvnlt	r0, #0
   12cac:	movge	r0, #0
   12cb0:	bx	lr
   12cb4:	mov	r0, #1
   12cb8:	bx	lr
   12cbc:	adds	r0, r1, #0
   12cc0:	mvnne	r0, #0
   12cc4:	bx	lr

00012cc8 <table_compare_int8@@Base>:
   12cc8:	cmp	r0, #0
   12ccc:	beq	12cfc <table_compare_int8@@Base+0x34>
   12cd0:	cmp	r1, #0
   12cd4:	beq	12cf4 <table_compare_int8@@Base+0x2c>
   12cd8:	ldrsb	r2, [r0]
   12cdc:	ldrsb	r3, [r1]
   12ce0:	cmp	r2, r3
   12ce4:	bgt	12cf4 <table_compare_int8@@Base+0x2c>
   12ce8:	mvnlt	r0, #0
   12cec:	movge	r0, #0
   12cf0:	bx	lr
   12cf4:	mov	r0, #1
   12cf8:	bx	lr
   12cfc:	adds	r0, r1, #0
   12d00:	mvnne	r0, #0
   12d04:	bx	lr

00012d08 <table_compare_int32@@Base>:
   12d08:	cmp	r0, #0
   12d0c:	beq	12d3c <table_compare_int32@@Base+0x34>
   12d10:	cmp	r1, #0
   12d14:	beq	12d34 <table_compare_int32@@Base+0x2c>
   12d18:	ldr	r2, [r0]
   12d1c:	ldr	r3, [r1]
   12d20:	cmp	r2, r3
   12d24:	bgt	12d34 <table_compare_int32@@Base+0x2c>
   12d28:	mvnlt	r0, #0
   12d2c:	movge	r0, #0
   12d30:	bx	lr
   12d34:	mov	r0, #1
   12d38:	bx	lr
   12d3c:	adds	r0, r1, #0
   12d40:	mvnne	r0, #0
   12d44:	bx	lr

00012d48 <table_compare_uint32@@Base>:
   12d48:	cmp	r0, #0
   12d4c:	beq	12d7c <table_compare_uint32@@Base+0x34>
   12d50:	cmp	r1, #0
   12d54:	beq	12d74 <table_compare_uint32@@Base+0x2c>
   12d58:	ldr	r2, [r0]
   12d5c:	ldr	r3, [r1]
   12d60:	cmp	r2, r3
   12d64:	bhi	12d74 <table_compare_uint32@@Base+0x2c>
   12d68:	mvncc	r0, #0
   12d6c:	movcs	r0, #0
   12d70:	bx	lr
   12d74:	mov	r0, #1
   12d78:	bx	lr
   12d7c:	adds	r0, r1, #0
   12d80:	mvnne	r0, #0
   12d84:	bx	lr

00012d88 <table_compare_uint64@@Base>:
   12d88:	cmp	r0, #0
   12d8c:	beq	12dc4 <table_compare_uint64@@Base+0x3c>
   12d90:	cmp	r1, #0
   12d94:	beq	12dd0 <table_compare_uint64@@Base+0x48>
   12d98:	ldrd	r2, [r1]
   12d9c:	push	{r4, r5}
   12da0:	ldrd	r4, [r0]
   12da4:	cmp	r5, r3
   12da8:	cmpeq	r4, r2
   12dac:	movhi	r0, #1
   12db0:	bhi	12dbc <table_compare_uint64@@Base+0x34>
   12db4:	mvncc	r0, #0
   12db8:	movcs	r0, #0
   12dbc:	pop	{r4, r5}
   12dc0:	bx	lr
   12dc4:	adds	r0, r1, #0
   12dc8:	mvnne	r0, #0
   12dcc:	bx	lr
   12dd0:	mov	r0, #1
   12dd4:	bx	lr

00012dd8 <table_compare_short@@Base>:
   12dd8:	cmp	r0, #0
   12ddc:	beq	12e0c <table_compare_short@@Base+0x34>
   12de0:	cmp	r1, #0
   12de4:	beq	12e04 <table_compare_short@@Base+0x2c>
   12de8:	ldrsh	r2, [r0]
   12dec:	ldrsh	r3, [r1]
   12df0:	cmp	r2, r3
   12df4:	bgt	12e04 <table_compare_short@@Base+0x2c>
   12df8:	mvnlt	r0, #0
   12dfc:	movge	r0, #0
   12e00:	bx	lr
   12e04:	mov	r0, #1
   12e08:	bx	lr
   12e0c:	adds	r0, r1, #0
   12e10:	mvnne	r0, #0
   12e14:	bx	lr

00012e18 <table_compare_ushort@@Base>:
   12e18:	cmp	r0, #0
   12e1c:	beq	12e4c <table_compare_ushort@@Base+0x34>
   12e20:	cmp	r1, #0
   12e24:	beq	12e44 <table_compare_ushort@@Base+0x2c>
   12e28:	ldrh	r2, [r0]
   12e2c:	ldrh	r3, [r1]
   12e30:	cmp	r2, r3
   12e34:	bhi	12e44 <table_compare_ushort@@Base+0x2c>
   12e38:	mvncc	r0, #0
   12e3c:	movcs	r0, #0
   12e40:	bx	lr
   12e44:	mov	r0, #1
   12e48:	bx	lr
   12e4c:	adds	r0, r1, #0
   12e50:	mvnne	r0, #0
   12e54:	bx	lr

00012e58 <table_compare_long@@Base>:
   12e58:	cmp	r0, #0
   12e5c:	beq	12e8c <table_compare_long@@Base+0x34>
   12e60:	cmp	r1, #0
   12e64:	beq	12e84 <table_compare_long@@Base+0x2c>
   12e68:	ldr	r2, [r0]
   12e6c:	ldr	r3, [r1]
   12e70:	cmp	r2, r3
   12e74:	bgt	12e84 <table_compare_long@@Base+0x2c>
   12e78:	mvnlt	r0, #0
   12e7c:	movge	r0, #0
   12e80:	bx	lr
   12e84:	mov	r0, #1
   12e88:	bx	lr
   12e8c:	adds	r0, r1, #0
   12e90:	mvnne	r0, #0
   12e94:	bx	lr

00012e98 <table_compare_llong@@Base>:
   12e98:	cmp	r0, #0
   12e9c:	beq	12edc <table_compare_llong@@Base+0x44>
   12ea0:	cmp	r1, #0
   12ea4:	beq	12ee8 <table_compare_llong@@Base+0x50>
   12ea8:	ldrd	r2, [r1]
   12eac:	push	{r4, r5}
   12eb0:	ldrd	r4, [r0]
   12eb4:	cmp	r2, r4
   12eb8:	sbcs	r1, r3, r5
   12ebc:	movlt	r0, #1
   12ec0:	blt	12ed4 <table_compare_llong@@Base+0x3c>
   12ec4:	cmp	r4, r2
   12ec8:	sbcs	r3, r5, r3
   12ecc:	mvnlt	r0, #0
   12ed0:	movge	r0, #0
   12ed4:	pop	{r4, r5}
   12ed8:	bx	lr
   12edc:	adds	r0, r1, #0
   12ee0:	mvnne	r0, #0
   12ee4:	bx	lr
   12ee8:	mov	r0, #1
   12eec:	bx	lr

00012ef0 <table_compare_ullong@@Base>:
   12ef0:	cmp	r0, #0
   12ef4:	beq	12f24 <table_compare_ullong@@Base+0x34>
   12ef8:	cmp	r1, #0
   12efc:	beq	12f1c <table_compare_ullong@@Base+0x2c>
   12f00:	ldr	r2, [r0]
   12f04:	ldr	r3, [r1]
   12f08:	cmp	r2, r3
   12f0c:	bhi	12f1c <table_compare_ullong@@Base+0x2c>
   12f10:	mvncc	r0, #0
   12f14:	movcs	r0, #0
   12f18:	bx	lr
   12f1c:	mov	r0, #1
   12f20:	bx	lr
   12f24:	adds	r0, r1, #0
   12f28:	mvnne	r0, #0
   12f2c:	bx	lr

00012f30 <table_compare_float@@Base>:
   12f30:	cmp	r0, #0
   12f34:	beq	12f68 <table_compare_float@@Base+0x38>
   12f38:	cmp	r1, #0
   12f3c:	beq	12f60 <table_compare_float@@Base+0x30>
   12f40:	vldr	s14, [r0]
   12f44:	vldr	s15, [r1]
   12f48:	vcmpe.f32	s14, s15
   12f4c:	vmrs	APSR_nzcv, fpscr
   12f50:	bgt	12f60 <table_compare_float@@Base+0x30>
   12f54:	mvnmi	r0, #0
   12f58:	movpl	r0, #0
   12f5c:	bx	lr
   12f60:	mov	r0, #1
   12f64:	bx	lr
   12f68:	adds	r0, r1, #0
   12f6c:	mvnne	r0, #0
   12f70:	bx	lr

00012f74 <table_compare_double@@Base>:
   12f74:	cmp	r0, #0
   12f78:	beq	12fac <table_compare_double@@Base+0x38>
   12f7c:	cmp	r1, #0
   12f80:	beq	12fa4 <table_compare_double@@Base+0x30>
   12f84:	vldr	d6, [r0]
   12f88:	vldr	d7, [r1]
   12f8c:	vcmpe.f64	d6, d7
   12f90:	vmrs	APSR_nzcv, fpscr
   12f94:	bgt	12fa4 <table_compare_double@@Base+0x30>
   12f98:	mvnmi	r0, #0
   12f9c:	movpl	r0, #0
   12fa0:	bx	lr
   12fa4:	mov	r0, #1
   12fa8:	bx	lr
   12fac:	adds	r0, r1, #0
   12fb0:	mvnne	r0, #0
   12fb4:	bx	lr

00012fb8 <table_compare_ldouble@@Base>:
   12fb8:	cmp	r0, #0
   12fbc:	beq	12ff0 <table_compare_ldouble@@Base+0x38>
   12fc0:	cmp	r1, #0
   12fc4:	beq	12fe8 <table_compare_ldouble@@Base+0x30>
   12fc8:	vldr	d6, [r0]
   12fcc:	vldr	d7, [r1]
   12fd0:	vcmpe.f64	d6, d7
   12fd4:	vmrs	APSR_nzcv, fpscr
   12fd8:	bgt	12fe8 <table_compare_ldouble@@Base+0x30>
   12fdc:	mvnmi	r0, #0
   12fe0:	movpl	r0, #0
   12fe4:	bx	lr
   12fe8:	mov	r0, #1
   12fec:	bx	lr
   12ff0:	adds	r0, r1, #0
   12ff4:	mvnne	r0, #0
   12ff8:	bx	lr

00012ffc <table_compare_uchar@@Base>:
   12ffc:	cmp	r0, #0
   13000:	beq	13030 <table_compare_uchar@@Base+0x34>
   13004:	cmp	r1, #0
   13008:	beq	13028 <table_compare_uchar@@Base+0x2c>
   1300c:	ldrb	r2, [r0]
   13010:	ldrb	r3, [r1]
   13014:	cmp	r2, r3
   13018:	bhi	13028 <table_compare_uchar@@Base+0x2c>
   1301c:	mvncc	r0, #0
   13020:	movcs	r0, #0
   13024:	bx	lr
   13028:	mov	r0, #1
   1302c:	bx	lr
   13030:	adds	r0, r1, #0
   13034:	mvnne	r0, #0
   13038:	bx	lr

0001303c <table_compare_ptr@@Base>:
   1303c:	cmp	r0, r1
   13040:	bhi	13050 <table_compare_ptr@@Base+0x14>
   13044:	mvncc	r0, #0
   13048:	movcs	r0, #0
   1304c:	bx	lr
   13050:	mov	r0, #1
   13054:	bx	lr

00013058 <table_compare_string@@Base>:
   13058:	cmp	r0, #0
   1305c:	beq	1306c <table_compare_string@@Base+0x14>
   13060:	cmp	r1, #0
   13064:	beq	13078 <table_compare_string@@Base+0x20>
   13068:	b	11bac <strcmp@plt>
   1306c:	adds	r0, r1, #0
   13070:	mvnne	r0, #0
   13074:	bx	lr
   13078:	mov	r0, #1
   1307c:	bx	lr

00013080 <table_compare_ulong@@Base>:
   13080:	cmp	r0, #0
   13084:	beq	130b4 <table_compare_ulong@@Base+0x34>
   13088:	cmp	r1, #0
   1308c:	beq	130ac <table_compare_ulong@@Base+0x2c>
   13090:	ldr	r2, [r0]
   13094:	ldr	r3, [r1]
   13098:	cmp	r2, r3
   1309c:	bhi	130ac <table_compare_ulong@@Base+0x2c>
   130a0:	mvncc	r0, #0
   130a4:	movcs	r0, #0
   130a8:	bx	lr
   130ac:	mov	r0, #1
   130b0:	bx	lr
   130b4:	adds	r0, r1, #0
   130b8:	mvnne	r0, #0
   130bc:	bx	lr

000130c0 <table_compare_int@@Base>:
   130c0:	cmp	r0, #0
   130c4:	beq	130f4 <table_compare_int@@Base+0x34>
   130c8:	cmp	r1, #0
   130cc:	beq	130ec <table_compare_int@@Base+0x2c>
   130d0:	ldr	r2, [r0]
   130d4:	ldr	r3, [r1]
   130d8:	cmp	r2, r3
   130dc:	bgt	130ec <table_compare_int@@Base+0x2c>
   130e0:	mvnlt	r0, #0
   130e4:	movge	r0, #0
   130e8:	bx	lr
   130ec:	mov	r0, #1
   130f0:	bx	lr
   130f4:	adds	r0, r1, #0
   130f8:	mvnne	r0, #0
   130fc:	bx	lr

00013100 <table_compare_uint@@Base>:
   13100:	cmp	r0, #0
   13104:	beq	13134 <table_compare_uint@@Base+0x34>
   13108:	cmp	r1, #0
   1310c:	beq	1312c <table_compare_uint@@Base+0x2c>
   13110:	ldr	r2, [r0]
   13114:	ldr	r3, [r1]
   13118:	cmp	r2, r3
   1311c:	bhi	1312c <table_compare_uint@@Base+0x2c>
   13120:	mvncc	r0, #0
   13124:	movcs	r0, #0
   13128:	bx	lr
   1312c:	mov	r0, #1
   13130:	bx	lr
   13134:	adds	r0, r1, #0
   13138:	mvnne	r0, #0
   1313c:	bx	lr

00013140 <table_compare_int16@@Base>:
   13140:	cmp	r0, #0
   13144:	beq	13174 <table_compare_int16@@Base+0x34>
   13148:	cmp	r1, #0
   1314c:	beq	1316c <table_compare_int16@@Base+0x2c>
   13150:	ldrsh	r2, [r0]
   13154:	ldrsh	r3, [r1]
   13158:	cmp	r2, r3
   1315c:	bgt	1316c <table_compare_int16@@Base+0x2c>
   13160:	mvnlt	r0, #0
   13164:	movge	r0, #0
   13168:	bx	lr
   1316c:	mov	r0, #1
   13170:	bx	lr
   13174:	adds	r0, r1, #0
   13178:	mvnne	r0, #0
   1317c:	bx	lr

00013180 <table_compare_uint16@@Base>:
   13180:	cmp	r0, #0
   13184:	beq	131b4 <table_compare_uint16@@Base+0x34>
   13188:	cmp	r1, #0
   1318c:	beq	131ac <table_compare_uint16@@Base+0x2c>
   13190:	ldrh	r2, [r0]
   13194:	ldrh	r3, [r1]
   13198:	cmp	r2, r3
   1319c:	bhi	131ac <table_compare_uint16@@Base+0x2c>
   131a0:	mvncc	r0, #0
   131a4:	movcs	r0, #0
   131a8:	bx	lr
   131ac:	mov	r0, #1
   131b0:	bx	lr
   131b4:	adds	r0, r1, #0
   131b8:	mvnne	r0, #0
   131bc:	bx	lr

000131c0 <table_compare_int64@@Base>:
   131c0:	cmp	r0, #0
   131c4:	beq	13204 <table_compare_int64@@Base+0x44>
   131c8:	cmp	r1, #0
   131cc:	beq	13210 <table_compare_int64@@Base+0x50>
   131d0:	ldrd	r2, [r1]
   131d4:	push	{r4, r5}
   131d8:	ldrd	r4, [r0]
   131dc:	cmp	r2, r4
   131e0:	sbcs	r1, r3, r5
   131e4:	movlt	r0, #1
   131e8:	blt	131fc <table_compare_int64@@Base+0x3c>
   131ec:	cmp	r4, r2
   131f0:	sbcs	r3, r5, r3
   131f4:	mvnlt	r0, #0
   131f8:	movge	r0, #0
   131fc:	pop	{r4, r5}
   13200:	bx	lr
   13204:	adds	r0, r1, #0
   13208:	mvnne	r0, #0
   1320c:	bx	lr
   13210:	mov	r0, #1
   13214:	bx	lr

00013218 <table_compare_char@@Base>:
   13218:	cmp	r0, #0
   1321c:	beq	1324c <table_compare_char@@Base+0x34>
   13220:	cmp	r1, #0
   13224:	beq	13244 <table_compare_char@@Base+0x2c>
   13228:	ldrb	r2, [r0]
   1322c:	ldrb	r3, [r1]
   13230:	cmp	r2, r3
   13234:	bhi	13244 <table_compare_char@@Base+0x2c>
   13238:	mvncc	r0, #0
   1323c:	movcs	r0, #0
   13240:	bx	lr
   13244:	mov	r0, #1
   13248:	bx	lr
   1324c:	adds	r0, r1, #0
   13250:	mvnne	r0, #0
   13254:	bx	lr

00013258 <table_compare_uint8@@Base>:
   13258:	cmp	r0, #0
   1325c:	beq	1328c <table_compare_uint8@@Base+0x34>
   13260:	cmp	r1, #0
   13264:	beq	13284 <table_compare_uint8@@Base+0x2c>
   13268:	ldrb	r2, [r0]
   1326c:	ldrb	r3, [r1]
   13270:	cmp	r2, r3
   13274:	bhi	13284 <table_compare_uint8@@Base+0x2c>
   13278:	mvncc	r0, #0
   1327c:	movcs	r0, #0
   13280:	bx	lr
   13284:	mov	r0, #1
   13288:	bx	lr
   1328c:	adds	r0, r1, #0
   13290:	mvnne	r0, #0
   13294:	bx	lr

00013298 <table_get_default_compare_function_for_data_type@@Base>:
   13298:	cmp	r0, #23
   1329c:	ldrls	r3, [pc, #8]	; 132ac <table_get_default_compare_function_for_data_type@@Base+0x14>
   132a0:	ldrls	r0, [r3, r0, lsl #2]
   132a4:	movhi	r0, #0
   132a8:	bx	lr
   132ac:	andeq	r5, r1, r0, lsr #9

000132b0 <table_get@@Base>:
   132b0:	push	{r4, lr}
   132b4:	bl	15150 <table_get_cell_ptr@@Base>
   132b8:	ldr	r0, [r0]
   132bc:	pop	{r4, pc}

000132c0 <table_get_bool@@Base>:
   132c0:	push	{r4, lr}
   132c4:	bl	15150 <table_get_cell_ptr@@Base>
   132c8:	ldr	r3, [r0]
   132cc:	ldrb	r0, [r3]
   132d0:	pop	{r4, pc}

000132d4 <table_get_int@@Base>:
   132d4:	push	{r4, lr}
   132d8:	bl	15150 <table_get_cell_ptr@@Base>
   132dc:	ldr	r3, [r0]
   132e0:	ldr	r0, [r3]
   132e4:	pop	{r4, pc}

000132e8 <table_get_uint@@Base>:
   132e8:	push	{r4, lr}
   132ec:	bl	15150 <table_get_cell_ptr@@Base>
   132f0:	ldr	r3, [r0]
   132f4:	ldr	r0, [r3]
   132f8:	pop	{r4, pc}

000132fc <table_get_int8@@Base>:
   132fc:	push	{r4, lr}
   13300:	bl	15150 <table_get_cell_ptr@@Base>
   13304:	ldr	r3, [r0]
   13308:	ldrsb	r0, [r3]
   1330c:	pop	{r4, pc}

00013310 <table_get_uint8@@Base>:
   13310:	push	{r4, lr}
   13314:	bl	15150 <table_get_cell_ptr@@Base>
   13318:	ldr	r3, [r0]
   1331c:	ldrb	r0, [r3]
   13320:	pop	{r4, pc}

00013324 <table_get_int16@@Base>:
   13324:	push	{r4, lr}
   13328:	bl	15150 <table_get_cell_ptr@@Base>
   1332c:	ldr	r3, [r0]
   13330:	ldrsh	r0, [r3]
   13334:	pop	{r4, pc}

00013338 <table_get_uint16@@Base>:
   13338:	push	{r4, lr}
   1333c:	bl	15150 <table_get_cell_ptr@@Base>
   13340:	ldr	r3, [r0]
   13344:	ldrh	r0, [r3]
   13348:	pop	{r4, pc}

0001334c <table_get_int32@@Base>:
   1334c:	push	{r4, lr}
   13350:	bl	15150 <table_get_cell_ptr@@Base>
   13354:	ldr	r3, [r0]
   13358:	ldr	r0, [r3]
   1335c:	pop	{r4, pc}

00013360 <table_get_uint32@@Base>:
   13360:	push	{r4, lr}
   13364:	bl	15150 <table_get_cell_ptr@@Base>
   13368:	ldr	r3, [r0]
   1336c:	ldr	r0, [r3]
   13370:	pop	{r4, pc}

00013374 <table_get_int64@@Base>:
   13374:	push	{r4, lr}
   13378:	bl	15150 <table_get_cell_ptr@@Base>
   1337c:	ldr	r3, [r0]
   13380:	ldrd	r0, [r3]
   13384:	pop	{r4, pc}

00013388 <table_get_uint64@@Base>:
   13388:	push	{r4, lr}
   1338c:	bl	15150 <table_get_cell_ptr@@Base>
   13390:	ldr	r3, [r0]
   13394:	ldrd	r0, [r3]
   13398:	pop	{r4, pc}

0001339c <table_get_short@@Base>:
   1339c:	push	{r4, lr}
   133a0:	bl	15150 <table_get_cell_ptr@@Base>
   133a4:	ldr	r3, [r0]
   133a8:	ldrsh	r0, [r3]
   133ac:	pop	{r4, pc}

000133b0 <table_get_ushort@@Base>:
   133b0:	push	{r4, lr}
   133b4:	bl	15150 <table_get_cell_ptr@@Base>
   133b8:	ldr	r3, [r0]
   133bc:	ldrh	r0, [r3]
   133c0:	pop	{r4, pc}

000133c4 <table_get_long@@Base>:
   133c4:	push	{r4, lr}
   133c8:	bl	15150 <table_get_cell_ptr@@Base>
   133cc:	ldr	r3, [r0]
   133d0:	ldr	r0, [r3]
   133d4:	pop	{r4, pc}

000133d8 <table_get_ulong@@Base>:
   133d8:	push	{r4, lr}
   133dc:	bl	15150 <table_get_cell_ptr@@Base>
   133e0:	ldr	r3, [r0]
   133e4:	ldr	r0, [r3]
   133e8:	pop	{r4, pc}

000133ec <table_get_llong@@Base>:
   133ec:	push	{r4, lr}
   133f0:	bl	15150 <table_get_cell_ptr@@Base>
   133f4:	ldr	r3, [r0]
   133f8:	ldrd	r0, [r3]
   133fc:	pop	{r4, pc}

00013400 <table_get_ullong@@Base>:
   13400:	push	{r4, lr}
   13404:	bl	15150 <table_get_cell_ptr@@Base>
   13408:	ldr	r3, [r0]
   1340c:	ldrd	r0, [r3]
   13410:	pop	{r4, pc}

00013414 <table_get_float@@Base>:
   13414:	push	{r4, lr}
   13418:	bl	15150 <table_get_cell_ptr@@Base>
   1341c:	ldr	r3, [r0]
   13420:	vldr	s0, [r3]
   13424:	pop	{r4, pc}

00013428 <table_get_double@@Base>:
   13428:	push	{r4, lr}
   1342c:	bl	15150 <table_get_cell_ptr@@Base>
   13430:	ldr	r3, [r0]
   13434:	vldr	d0, [r3]
   13438:	pop	{r4, pc}

0001343c <table_get_ldouble@@Base>:
   1343c:	push	{r4, lr}
   13440:	bl	15150 <table_get_cell_ptr@@Base>
   13444:	ldr	r3, [r0]
   13448:	vldr	d0, [r3]
   1344c:	pop	{r4, pc}

00013450 <table_get_char@@Base>:
   13450:	push	{r4, lr}
   13454:	bl	15150 <table_get_cell_ptr@@Base>
   13458:	ldr	r3, [r0]
   1345c:	ldrb	r0, [r3]
   13460:	pop	{r4, pc}

00013464 <table_get_uchar@@Base>:
   13464:	push	{r4, lr}
   13468:	bl	15150 <table_get_cell_ptr@@Base>
   1346c:	ldr	r3, [r0]
   13470:	ldrb	r0, [r3]
   13474:	pop	{r4, pc}

00013478 <table_get_string@@Base>:
   13478:	push	{r4, lr}
   1347c:	bl	15150 <table_get_cell_ptr@@Base>
   13480:	ldr	r0, [r0]
   13484:	pop	{r4, pc}

00013488 <table_get_ptr@@Base>:
   13488:	push	{r4, lr}
   1348c:	bl	15150 <table_get_cell_ptr@@Base>
   13490:	ldr	r0, [r0]
   13494:	pop	{r4, pc}

00013498 <table_row_init@@Base>:
   13498:	ldr	r3, [r0, #12]
   1349c:	push	{r4, r5, r6, lr}
   134a0:	mov	r5, r1
   134a4:	ldr	r4, [r0, #16]
   134a8:	lsl	r0, r3, #2
   134ac:	bl	11bf4 <malloc@plt>
   134b0:	str	r0, [r4, r5, lsl #2]
   134b4:	pop	{r4, r5, r6, pc}

000134b8 <table_row_destroy@@Base>:
   134b8:	push	{r4, r5, r6, r7, r8, lr}
   134bc:	mov	r6, r0
   134c0:	mov	r5, r1
   134c4:	bl	12904 <table_get_column_length@@Base>
   134c8:	ldr	r8, [r6, #16]
   134cc:	subs	r7, r0, #0
   134d0:	movgt	r4, #0
   134d4:	ble	134f4 <table_row_destroy@@Base+0x3c>
   134d8:	mov	r2, r4
   134dc:	mov	r1, r5
   134e0:	add	r4, r4, #1
   134e4:	mov	r0, r6
   134e8:	bl	14714 <table_cell_destroy@@Base>
   134ec:	cmp	r7, r4
   134f0:	bne	134d8 <table_row_destroy@@Base+0x20>
   134f4:	ldr	r0, [r8, r5, lsl #2]
   134f8:	cmp	r0, #0
   134fc:	beq	13508 <table_row_destroy@@Base+0x50>
   13500:	pop	{r4, r5, r6, r7, r8, lr}
   13504:	b	11bc4 <free@plt>
   13508:	pop	{r4, r5, r6, r7, r8, pc}

0001350c <table_get_row_length@@Base>:
   1350c:	ldr	r0, [r0, #20]
   13510:	bx	lr

00013514 <table_add_row@@Base>:
   13514:	push	{r4, r5, r6, r7, r8, lr}
   13518:	mov	r5, r0
   1351c:	ldr	r4, [r0, #24]
   13520:	ldr	r6, [r0, #20]
   13524:	mov	r1, r4
   13528:	mov	r0, r6
   1352c:	bl	15354 <table_get_cell_ptr@@Base+0x204>
   13530:	cmp	r1, #0
   13534:	bne	13558 <table_add_row@@Base+0x44>
   13538:	ldr	r1, [r5, #28]
   1353c:	ldr	r0, [r5, #16]
   13540:	add	r1, r4, r1
   13544:	str	r1, [r5, #28]
   13548:	lsl	r1, r1, #2
   1354c:	bl	11bdc <realloc@plt>
   13550:	ldr	r6, [r5, #20]
   13554:	str	r0, [r5, #16]
   13558:	mov	r0, r5
   1355c:	bl	12904 <table_get_column_length@@Base>
   13560:	ldr	r4, [r5, #16]
   13564:	mov	r7, r0
   13568:	ldr	r0, [r5, #12]
   1356c:	lsl	r0, r0, #2
   13570:	bl	11bf4 <malloc@plt>
   13574:	cmp	r7, #0
   13578:	str	r0, [r4, r6, lsl #2]
   1357c:	ble	135a0 <table_add_row@@Base+0x8c>
   13580:	mov	r4, #0
   13584:	mov	r2, r4
   13588:	mov	r1, r6
   1358c:	add	r4, r4, #1
   13590:	mov	r0, r5
   13594:	bl	146f8 <table_cell_init@@Base>
   13598:	cmp	r7, r4
   1359c:	bne	13584 <table_add_row@@Base+0x70>
   135a0:	mov	r0, r5
   135a4:	mov	r3, #2
   135a8:	mvn	r2, #0
   135ac:	ldr	r1, [r5, #20]
   135b0:	bl	12814 <table_notify@@Base>
   135b4:	ldr	r0, [r5, #20]
   135b8:	add	r3, r0, #1
   135bc:	str	r3, [r5, #20]
   135c0:	pop	{r4, r5, r6, r7, r8, pc}

000135c4 <table_remove_row@@Base>:
   135c4:	push	{r4, r5, r6, r7, r8, lr}
   135c8:	mov	r5, r0
   135cc:	mov	r6, r1
   135d0:	ldr	r7, [r0, #20]
   135d4:	bl	12904 <table_get_column_length@@Base>
   135d8:	subs	r8, r0, #0
   135dc:	movgt	r4, #0
   135e0:	ble	13624 <table_remove_row@@Base+0x60>
   135e4:	mov	r1, r4
   135e8:	mov	r0, r5
   135ec:	bl	12974 <table_get_column_data_type@@Base>
   135f0:	mov	r2, r4
   135f4:	mov	r1, r6
   135f8:	add	r4, r4, #1
   135fc:	cmp	r0, #23
   13600:	mov	r0, r5
   13604:	beq	1361c <table_remove_row@@Base+0x58>
   13608:	bl	15150 <table_get_cell_ptr@@Base>
   1360c:	ldr	r3, [r0]
   13610:	subs	r0, r3, #0
   13614:	beq	1361c <table_remove_row@@Base+0x58>
   13618:	bl	11bc4 <free@plt>
   1361c:	cmp	r8, r4
   13620:	bne	135e4 <table_remove_row@@Base+0x20>
   13624:	ldr	r3, [r5, #16]
   13628:	lsl	r4, r6, #2
   1362c:	ldr	r0, [r3, r6, lsl #2]
   13630:	cmp	r0, #0
   13634:	beq	1363c <table_remove_row@@Base+0x78>
   13638:	bl	11bc4 <free@plt>
   1363c:	sub	ip, r7, #1
   13640:	cmp	r6, ip
   13644:	movlt	r3, r6
   13648:	bge	1366c <table_remove_row@@Base+0xa8>
   1364c:	ldr	r1, [r5, #16]
   13650:	add	r2, r4, #4
   13654:	add	r3, r3, #1
   13658:	ldr	r0, [r1, r2]
   1365c:	cmp	r3, ip
   13660:	str	r0, [r1, r4]
   13664:	mov	r4, r2
   13668:	bne	1364c <table_remove_row@@Base+0x88>
   1366c:	ldr	r0, [r5, #20]
   13670:	ldr	r4, [r5, #24]
   13674:	sub	r0, r0, #1
   13678:	str	r0, [r5, #20]
   1367c:	mov	r1, r4
   13680:	bl	15354 <table_get_cell_ptr@@Base+0x204>
   13684:	cmp	r1, #0
   13688:	bne	136a8 <table_remove_row@@Base+0xe4>
   1368c:	ldr	r1, [r5, #28]
   13690:	ldr	r0, [r5, #16]
   13694:	sub	r1, r1, r4
   13698:	str	r1, [r5, #28]
   1369c:	lsl	r1, r1, #2
   136a0:	bl	11bdc <realloc@plt>
   136a4:	str	r0, [r5, #16]
   136a8:	mov	r0, r5
   136ac:	mov	r1, r6
   136b0:	mov	r3, #4
   136b4:	mvn	r2, #0
   136b8:	bl	12814 <table_notify@@Base>
   136bc:	mov	r0, #0
   136c0:	pop	{r4, r5, r6, r7, r8, pc}

000136c4 <table_get_row_ptr@@Base>:
   136c4:	ldr	r0, [r0, #16]
   136c8:	add	r0, r0, r1, lsl #2
   136cc:	bx	lr

000136d0 <table_set_row_ptr@@Base>:
   136d0:	ldr	r3, [r0, #16]
   136d4:	ldr	r2, [r2]
   136d8:	str	r2, [r3, r1, lsl #2]
   136dc:	bx	lr

000136e0 <table_set@@Base>:
   136e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136e4:	mov	r5, r0
   136e8:	mov	r6, r2
   136ec:	ldr	r4, [sp, #32]
   136f0:	mov	r9, r1
   136f4:	mov	r7, r3
   136f8:	bl	15150 <table_get_cell_ptr@@Base>
   136fc:	mov	r1, r6
   13700:	mov	r8, r0
   13704:	mov	r0, r5
   13708:	bl	12c50 <table_get_col_ptr@@Base>
   1370c:	cmp	r4, #23
   13710:	ldrls	pc, [pc, r4, lsl #2]
   13714:	b	1378c <table_set@@Base+0xac>
   13718:	andeq	r3, r1, r0, lsr r9
   1371c:	andeq	r3, r1, r0, lsr #18
   13720:	andeq	r3, r1, r0, lsl r9
   13724:	andeq	r3, r1, r0, lsl #18
   13728:	strdeq	r3, [r1], -r0
   1372c:	andeq	r3, r1, ip, asr #17
   13730:			; <UNDEFINED> instruction: 0x000138bc
   13734:	andeq	r3, r1, ip, lsr #17
   13738:	andeq	r3, r1, r0, ror r9
   1373c:	andeq	r3, r1, r0, ror #18
   13740:	andeq	r3, r1, r0, asr r9
   13744:	andeq	r3, r1, r0, asr #18
   13748:			; <UNDEFINED> instruction: 0x000139bc
   1374c:	muleq	r1, ip, r9
   13750:	andeq	r3, r1, ip, lsr #19
   13754:	muleq	r1, ip, r8
   13758:	andeq	r3, r1, r8, ror r8
   1375c:	andeq	r3, r1, r8, ror #16
   13760:	andeq	r3, r1, ip, lsr r8
   13764:	andeq	r3, r1, ip, lsr #16
   13768:	andeq	r3, r1, ip, lsl r8
   1376c:	andeq	r3, r1, r4, ror #15
   13770:	andeq	r3, r1, r0, asr #15
   13774:	muleq	r1, r4, r7
   13778:	bl	11bf4 <malloc@plt>
   1377c:	cmp	r0, #0
   13780:	mov	r3, r0
   13784:	str	r0, [r8]
   13788:	bne	13988 <table_set@@Base+0x2a8>
   1378c:	mvn	r0, #0
   13790:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13794:	ldr	r3, [r0, #4]
   13798:	cmp	r3, #23
   1379c:	bne	1378c <table_set@@Base+0xac>
   137a0:	str	r7, [r8]
   137a4:	mov	r0, r5
   137a8:	mov	r2, r6
   137ac:	mov	r1, r9
   137b0:	mov	r3, #1
   137b4:	bl	12814 <table_notify@@Base>
   137b8:	mov	r0, #0
   137bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137c0:	ldr	r3, [r0, #4]
   137c4:	cmp	r3, #22
   137c8:	bne	1378c <table_set@@Base+0xac>
   137cc:	ldr	r0, [r8]
   137d0:	cmp	r0, #0
   137d4:	beq	139e4 <table_set@@Base+0x304>
   137d8:	ldrb	r3, [r7]
   137dc:	strb	r3, [r0]
   137e0:	b	137a4 <table_set@@Base+0xc4>
   137e4:	ldr	r3, [r0, #4]
   137e8:	cmp	r3, #21
   137ec:	bne	1378c <table_set@@Base+0xac>
   137f0:	mov	r0, r7
   137f4:	bl	11c18 <strlen@plt>
   137f8:	add	r1, r0, #1
   137fc:	ldr	r0, [r8]
   13800:	bl	11bdc <realloc@plt>
   13804:	cmp	r0, #0
   13808:	str	r0, [r8]
   1380c:	beq	1378c <table_set@@Base+0xac>
   13810:	mov	r1, r7
   13814:	bl	11be8 <strcpy@plt>
   13818:	b	137a4 <table_set@@Base+0xc4>
   1381c:	ldr	r3, [r0, #4]
   13820:	cmp	r3, #20
   13824:	beq	137cc <table_set@@Base+0xec>
   13828:	b	1378c <table_set@@Base+0xac>
   1382c:	ldr	r3, [r0, #4]
   13830:	cmp	r3, #19
   13834:	beq	137cc <table_set@@Base+0xec>
   13838:	b	1378c <table_set@@Base+0xac>
   1383c:	ldr	r3, [r0, #4]
   13840:	cmp	r3, #18
   13844:	bne	1378c <table_set@@Base+0xac>
   13848:	ldr	r0, [r8]
   1384c:	cmp	r0, #0
   13850:	beq	139fc <table_set@@Base+0x31c>
   13854:	ldr	r2, [r7]
   13858:	ldr	r3, [r7, #4]
   1385c:	str	r2, [r0]
   13860:	str	r3, [r0, #4]
   13864:	b	137a4 <table_set@@Base+0xc4>
   13868:	ldr	r3, [r0, #4]
   1386c:	cmp	r3, #17
   13870:	beq	13848 <table_set@@Base+0x168>
   13874:	b	1378c <table_set@@Base+0xac>
   13878:	ldr	r3, [r0, #4]
   1387c:	cmp	r3, #16
   13880:	bne	1378c <table_set@@Base+0xac>
   13884:	ldr	r0, [r8]
   13888:	cmp	r0, #0
   1388c:	beq	139cc <table_set@@Base+0x2ec>
   13890:	ldr	r3, [r7]
   13894:	str	r3, [r0]
   13898:	b	137a4 <table_set@@Base+0xc4>
   1389c:	ldr	r3, [r0, #4]
   138a0:	cmp	r3, #15
   138a4:	beq	13848 <table_set@@Base+0x168>
   138a8:	b	1378c <table_set@@Base+0xac>
   138ac:	ldr	r3, [r0, #4]
   138b0:	cmp	r3, #7
   138b4:	beq	13884 <table_set@@Base+0x1a4>
   138b8:	b	1378c <table_set@@Base+0xac>
   138bc:	ldr	r3, [r0, #4]
   138c0:	cmp	r3, #6
   138c4:	beq	13884 <table_set@@Base+0x1a4>
   138c8:	b	1378c <table_set@@Base+0xac>
   138cc:	ldr	r3, [r0, #4]
   138d0:	cmp	r3, #5
   138d4:	bne	1378c <table_set@@Base+0xac>
   138d8:	ldr	r0, [r8]
   138dc:	cmp	r0, #0
   138e0:	beq	13a14 <table_set@@Base+0x334>
   138e4:	ldrh	r3, [r7]
   138e8:	strh	r3, [r0]
   138ec:	b	137a4 <table_set@@Base+0xc4>
   138f0:	ldr	r3, [r0, #4]
   138f4:	cmp	r3, #4
   138f8:	beq	138d8 <table_set@@Base+0x1f8>
   138fc:	b	1378c <table_set@@Base+0xac>
   13900:	ldr	r3, [r0, #4]
   13904:	cmp	r3, #3
   13908:	beq	137cc <table_set@@Base+0xec>
   1390c:	b	1378c <table_set@@Base+0xac>
   13910:	ldr	r3, [r0, #4]
   13914:	cmp	r3, #2
   13918:	beq	137cc <table_set@@Base+0xec>
   1391c:	b	1378c <table_set@@Base+0xac>
   13920:	ldr	r3, [r0, #4]
   13924:	cmp	r3, #1
   13928:	beq	13884 <table_set@@Base+0x1a4>
   1392c:	b	1378c <table_set@@Base+0xac>
   13930:	ldr	r3, [r0, #4]
   13934:	cmp	r3, #0
   13938:	beq	13884 <table_set@@Base+0x1a4>
   1393c:	b	1378c <table_set@@Base+0xac>
   13940:	ldr	r3, [r0, #4]
   13944:	cmp	r3, #11
   13948:	beq	138d8 <table_set@@Base+0x1f8>
   1394c:	b	1378c <table_set@@Base+0xac>
   13950:	ldr	r3, [r0, #4]
   13954:	cmp	r3, #10
   13958:	beq	138d8 <table_set@@Base+0x1f8>
   1395c:	b	1378c <table_set@@Base+0xac>
   13960:	ldr	r3, [r0, #4]
   13964:	cmp	r3, #9
   13968:	beq	13848 <table_set@@Base+0x168>
   1396c:	b	1378c <table_set@@Base+0xac>
   13970:	ldr	r0, [r0, #4]
   13974:	cmp	r0, #8
   13978:	bne	1378c <table_set@@Base+0xac>
   1397c:	ldr	r3, [r8]
   13980:	cmp	r3, #0
   13984:	beq	13778 <table_set@@Base+0x98>
   13988:	ldr	r1, [r7]
   1398c:	ldr	r2, [r7, #4]
   13990:	str	r1, [r3]
   13994:	str	r2, [r3, #4]
   13998:	b	137a4 <table_set@@Base+0xc4>
   1399c:	ldr	r3, [r0, #4]
   139a0:	cmp	r3, #13
   139a4:	beq	13884 <table_set@@Base+0x1a4>
   139a8:	b	1378c <table_set@@Base+0xac>
   139ac:	ldr	r3, [r0, #4]
   139b0:	cmp	r3, #14
   139b4:	beq	13848 <table_set@@Base+0x168>
   139b8:	b	1378c <table_set@@Base+0xac>
   139bc:	ldr	r3, [r0, #4]
   139c0:	cmp	r3, #12
   139c4:	beq	13884 <table_set@@Base+0x1a4>
   139c8:	b	1378c <table_set@@Base+0xac>
   139cc:	mov	r0, #4
   139d0:	bl	11bf4 <malloc@plt>
   139d4:	cmp	r0, #0
   139d8:	str	r0, [r8]
   139dc:	bne	13890 <table_set@@Base+0x1b0>
   139e0:	b	1378c <table_set@@Base+0xac>
   139e4:	mov	r0, #1
   139e8:	bl	11bf4 <malloc@plt>
   139ec:	cmp	r0, #0
   139f0:	str	r0, [r8]
   139f4:	bne	137d8 <table_set@@Base+0xf8>
   139f8:	b	1378c <table_set@@Base+0xac>
   139fc:	mov	r0, #8
   13a00:	bl	11bf4 <malloc@plt>
   13a04:	cmp	r0, #0
   13a08:	str	r0, [r8]
   13a0c:	bne	13854 <table_set@@Base+0x174>
   13a10:	b	1378c <table_set@@Base+0xac>
   13a14:	mov	r0, #2
   13a18:	bl	11bf4 <malloc@plt>
   13a1c:	cmp	r0, #0
   13a20:	str	r0, [r8]
   13a24:	bne	138e4 <table_set@@Base+0x204>
   13a28:	b	1378c <table_set@@Base+0xac>

00013a2c <table_set_bool@@Base>:
   13a2c:	push	{r4, r5, r6, r7, r8, lr}
   13a30:	mov	r5, r2
   13a34:	mov	r4, r0
   13a38:	mov	r8, r3
   13a3c:	mov	r7, r1
   13a40:	bl	15150 <table_get_cell_ptr@@Base>
   13a44:	mov	r1, r5
   13a48:	mov	r6, r0
   13a4c:	mov	r0, r4
   13a50:	bl	12c50 <table_get_col_ptr@@Base>
   13a54:	ldr	r2, [r0, #4]
   13a58:	cmp	r2, #22
   13a5c:	bne	13aa0 <table_set_bool@@Base+0x74>
   13a60:	ldr	r0, [r6]
   13a64:	cmp	r0, #0
   13a68:	beq	13a8c <table_set_bool@@Base+0x60>
   13a6c:	strb	r8, [r0]
   13a70:	mov	r2, r5
   13a74:	mov	r0, r4
   13a78:	mov	r1, r7
   13a7c:	mov	r3, #1
   13a80:	bl	12814 <table_notify@@Base>
   13a84:	mov	r0, #0
   13a88:	pop	{r4, r5, r6, r7, r8, pc}
   13a8c:	mov	r0, #1
   13a90:	bl	11bf4 <malloc@plt>
   13a94:	cmp	r0, #0
   13a98:	str	r0, [r6]
   13a9c:	bne	13a6c <table_set_bool@@Base+0x40>
   13aa0:	mvn	r0, #0
   13aa4:	pop	{r4, r5, r6, r7, r8, pc}

00013aa8 <table_set_int@@Base>:
   13aa8:	push	{r4, r5, r6, r7, r8, lr}
   13aac:	mov	r5, r2
   13ab0:	mov	r4, r0
   13ab4:	mov	r8, r3
   13ab8:	mov	r7, r1
   13abc:	bl	15150 <table_get_cell_ptr@@Base>
   13ac0:	mov	r1, r5
   13ac4:	mov	r6, r0
   13ac8:	mov	r0, r4
   13acc:	bl	12c50 <table_get_col_ptr@@Base>
   13ad0:	ldr	r2, [r0, #4]
   13ad4:	cmp	r2, #0
   13ad8:	bne	13b1c <table_set_int@@Base+0x74>
   13adc:	ldr	r0, [r6]
   13ae0:	cmp	r0, #0
   13ae4:	beq	13b08 <table_set_int@@Base+0x60>
   13ae8:	str	r8, [r0]
   13aec:	mov	r2, r5
   13af0:	mov	r0, r4
   13af4:	mov	r1, r7
   13af8:	mov	r3, #1
   13afc:	bl	12814 <table_notify@@Base>
   13b00:	mov	r0, #0
   13b04:	pop	{r4, r5, r6, r7, r8, pc}
   13b08:	mov	r0, #4
   13b0c:	bl	11bf4 <malloc@plt>
   13b10:	cmp	r0, #0
   13b14:	str	r0, [r6]
   13b18:	bne	13ae8 <table_set_int@@Base+0x40>
   13b1c:	mvn	r0, #0
   13b20:	pop	{r4, r5, r6, r7, r8, pc}

00013b24 <table_set_uint@@Base>:
   13b24:	push	{r4, r5, r6, r7, r8, lr}
   13b28:	mov	r5, r2
   13b2c:	mov	r4, r0
   13b30:	mov	r8, r3
   13b34:	mov	r7, r1
   13b38:	bl	15150 <table_get_cell_ptr@@Base>
   13b3c:	mov	r1, r5
   13b40:	mov	r6, r0
   13b44:	mov	r0, r4
   13b48:	bl	12c50 <table_get_col_ptr@@Base>
   13b4c:	ldr	r2, [r0, #4]
   13b50:	cmp	r2, #1
   13b54:	bne	13b98 <table_set_uint@@Base+0x74>
   13b58:	ldr	r0, [r6]
   13b5c:	cmp	r0, #0
   13b60:	beq	13b84 <table_set_uint@@Base+0x60>
   13b64:	str	r8, [r0]
   13b68:	mov	r2, r5
   13b6c:	mov	r0, r4
   13b70:	mov	r1, r7
   13b74:	mov	r3, #1
   13b78:	bl	12814 <table_notify@@Base>
   13b7c:	mov	r0, #0
   13b80:	pop	{r4, r5, r6, r7, r8, pc}
   13b84:	mov	r0, #4
   13b88:	bl	11bf4 <malloc@plt>
   13b8c:	cmp	r0, #0
   13b90:	str	r0, [r6]
   13b94:	bne	13b64 <table_set_uint@@Base+0x40>
   13b98:	mvn	r0, #0
   13b9c:	pop	{r4, r5, r6, r7, r8, pc}

00013ba0 <table_set_int8@@Base>:
   13ba0:	push	{r4, r5, r6, r7, r8, lr}
   13ba4:	mov	r5, r2
   13ba8:	mov	r4, r0
   13bac:	mov	r8, r3
   13bb0:	mov	r7, r1
   13bb4:	bl	15150 <table_get_cell_ptr@@Base>
   13bb8:	mov	r1, r5
   13bbc:	mov	r6, r0
   13bc0:	mov	r0, r4
   13bc4:	bl	12c50 <table_get_col_ptr@@Base>
   13bc8:	ldr	r2, [r0, #4]
   13bcc:	cmp	r2, #2
   13bd0:	bne	13c14 <table_set_int8@@Base+0x74>
   13bd4:	ldr	r0, [r6]
   13bd8:	cmp	r0, #0
   13bdc:	beq	13c00 <table_set_int8@@Base+0x60>
   13be0:	strb	r8, [r0]
   13be4:	mov	r2, r5
   13be8:	mov	r0, r4
   13bec:	mov	r1, r7
   13bf0:	mov	r3, #1
   13bf4:	bl	12814 <table_notify@@Base>
   13bf8:	mov	r0, #0
   13bfc:	pop	{r4, r5, r6, r7, r8, pc}
   13c00:	mov	r0, #1
   13c04:	bl	11bf4 <malloc@plt>
   13c08:	cmp	r0, #0
   13c0c:	str	r0, [r6]
   13c10:	bne	13be0 <table_set_int8@@Base+0x40>
   13c14:	mvn	r0, #0
   13c18:	pop	{r4, r5, r6, r7, r8, pc}

00013c1c <table_set_uint8@@Base>:
   13c1c:	push	{r4, r5, r6, r7, r8, lr}
   13c20:	mov	r5, r2
   13c24:	mov	r4, r0
   13c28:	mov	r8, r3
   13c2c:	mov	r7, r1
   13c30:	bl	15150 <table_get_cell_ptr@@Base>
   13c34:	mov	r1, r5
   13c38:	mov	r6, r0
   13c3c:	mov	r0, r4
   13c40:	bl	12c50 <table_get_col_ptr@@Base>
   13c44:	ldr	r2, [r0, #4]
   13c48:	cmp	r2, #3
   13c4c:	bne	13c90 <table_set_uint8@@Base+0x74>
   13c50:	ldr	r0, [r6]
   13c54:	cmp	r0, #0
   13c58:	beq	13c7c <table_set_uint8@@Base+0x60>
   13c5c:	strb	r8, [r0]
   13c60:	mov	r2, r5
   13c64:	mov	r0, r4
   13c68:	mov	r1, r7
   13c6c:	mov	r3, #1
   13c70:	bl	12814 <table_notify@@Base>
   13c74:	mov	r0, #0
   13c78:	pop	{r4, r5, r6, r7, r8, pc}
   13c7c:	mov	r0, #1
   13c80:	bl	11bf4 <malloc@plt>
   13c84:	cmp	r0, #0
   13c88:	str	r0, [r6]
   13c8c:	bne	13c5c <table_set_uint8@@Base+0x40>
   13c90:	mvn	r0, #0
   13c94:	pop	{r4, r5, r6, r7, r8, pc}

00013c98 <table_set_int16@@Base>:
   13c98:	push	{r4, r5, r6, r7, r8, lr}
   13c9c:	mov	r5, r2
   13ca0:	mov	r4, r0
   13ca4:	mov	r8, r3
   13ca8:	mov	r7, r1
   13cac:	bl	15150 <table_get_cell_ptr@@Base>
   13cb0:	mov	r1, r5
   13cb4:	mov	r6, r0
   13cb8:	mov	r0, r4
   13cbc:	bl	12c50 <table_get_col_ptr@@Base>
   13cc0:	ldr	r2, [r0, #4]
   13cc4:	cmp	r2, #4
   13cc8:	bne	13d0c <table_set_int16@@Base+0x74>
   13ccc:	ldr	r0, [r6]
   13cd0:	cmp	r0, #0
   13cd4:	beq	13cf8 <table_set_int16@@Base+0x60>
   13cd8:	strh	r8, [r0]
   13cdc:	mov	r2, r5
   13ce0:	mov	r0, r4
   13ce4:	mov	r1, r7
   13ce8:	mov	r3, #1
   13cec:	bl	12814 <table_notify@@Base>
   13cf0:	mov	r0, #0
   13cf4:	pop	{r4, r5, r6, r7, r8, pc}
   13cf8:	mov	r0, #2
   13cfc:	bl	11bf4 <malloc@plt>
   13d00:	cmp	r0, #0
   13d04:	str	r0, [r6]
   13d08:	bne	13cd8 <table_set_int16@@Base+0x40>
   13d0c:	mvn	r0, #0
   13d10:	pop	{r4, r5, r6, r7, r8, pc}

00013d14 <table_set_uint16@@Base>:
   13d14:	push	{r4, r5, r6, r7, r8, lr}
   13d18:	mov	r5, r2
   13d1c:	mov	r4, r0
   13d20:	mov	r8, r3
   13d24:	mov	r7, r1
   13d28:	bl	15150 <table_get_cell_ptr@@Base>
   13d2c:	mov	r1, r5
   13d30:	mov	r6, r0
   13d34:	mov	r0, r4
   13d38:	bl	12c50 <table_get_col_ptr@@Base>
   13d3c:	ldr	r2, [r0, #4]
   13d40:	cmp	r2, #5
   13d44:	bne	13d88 <table_set_uint16@@Base+0x74>
   13d48:	ldr	r0, [r6]
   13d4c:	cmp	r0, #0
   13d50:	beq	13d74 <table_set_uint16@@Base+0x60>
   13d54:	strh	r8, [r0]
   13d58:	mov	r2, r5
   13d5c:	mov	r0, r4
   13d60:	mov	r1, r7
   13d64:	mov	r3, #1
   13d68:	bl	12814 <table_notify@@Base>
   13d6c:	mov	r0, #0
   13d70:	pop	{r4, r5, r6, r7, r8, pc}
   13d74:	mov	r0, #2
   13d78:	bl	11bf4 <malloc@plt>
   13d7c:	cmp	r0, #0
   13d80:	str	r0, [r6]
   13d84:	bne	13d54 <table_set_uint16@@Base+0x40>
   13d88:	mvn	r0, #0
   13d8c:	pop	{r4, r5, r6, r7, r8, pc}

00013d90 <table_set_int32@@Base>:
   13d90:	push	{r4, r5, r6, r7, r8, lr}
   13d94:	mov	r5, r2
   13d98:	mov	r4, r0
   13d9c:	mov	r8, r3
   13da0:	mov	r7, r1
   13da4:	bl	15150 <table_get_cell_ptr@@Base>
   13da8:	mov	r1, r5
   13dac:	mov	r6, r0
   13db0:	mov	r0, r4
   13db4:	bl	12c50 <table_get_col_ptr@@Base>
   13db8:	ldr	r2, [r0, #4]
   13dbc:	cmp	r2, #6
   13dc0:	bne	13e04 <table_set_int32@@Base+0x74>
   13dc4:	ldr	r0, [r6]
   13dc8:	cmp	r0, #0
   13dcc:	beq	13df0 <table_set_int32@@Base+0x60>
   13dd0:	str	r8, [r0]
   13dd4:	mov	r2, r5
   13dd8:	mov	r0, r4
   13ddc:	mov	r1, r7
   13de0:	mov	r3, #1
   13de4:	bl	12814 <table_notify@@Base>
   13de8:	mov	r0, #0
   13dec:	pop	{r4, r5, r6, r7, r8, pc}
   13df0:	mov	r0, #4
   13df4:	bl	11bf4 <malloc@plt>
   13df8:	cmp	r0, #0
   13dfc:	str	r0, [r6]
   13e00:	bne	13dd0 <table_set_int32@@Base+0x40>
   13e04:	mvn	r0, #0
   13e08:	pop	{r4, r5, r6, r7, r8, pc}

00013e0c <table_set_uint32@@Base>:
   13e0c:	push	{r4, r5, r6, r7, r8, lr}
   13e10:	mov	r5, r2
   13e14:	mov	r4, r0
   13e18:	mov	r8, r3
   13e1c:	mov	r7, r1
   13e20:	bl	15150 <table_get_cell_ptr@@Base>
   13e24:	mov	r1, r5
   13e28:	mov	r6, r0
   13e2c:	mov	r0, r4
   13e30:	bl	12c50 <table_get_col_ptr@@Base>
   13e34:	ldr	r2, [r0, #4]
   13e38:	cmp	r2, #7
   13e3c:	bne	13e80 <table_set_uint32@@Base+0x74>
   13e40:	ldr	r0, [r6]
   13e44:	cmp	r0, #0
   13e48:	beq	13e6c <table_set_uint32@@Base+0x60>
   13e4c:	str	r8, [r0]
   13e50:	mov	r2, r5
   13e54:	mov	r0, r4
   13e58:	mov	r1, r7
   13e5c:	mov	r3, #1
   13e60:	bl	12814 <table_notify@@Base>
   13e64:	mov	r0, #0
   13e68:	pop	{r4, r5, r6, r7, r8, pc}
   13e6c:	mov	r0, #4
   13e70:	bl	11bf4 <malloc@plt>
   13e74:	cmp	r0, #0
   13e78:	str	r0, [r6]
   13e7c:	bne	13e4c <table_set_uint32@@Base+0x40>
   13e80:	mvn	r0, #0
   13e84:	pop	{r4, r5, r6, r7, r8, pc}

00013e88 <table_set_int64@@Base>:
   13e88:	push	{r4, r5, r6, r7, r8, lr}
   13e8c:	mov	r5, r2
   13e90:	mov	r4, r0
   13e94:	mov	r7, r1
   13e98:	bl	15150 <table_get_cell_ptr@@Base>
   13e9c:	mov	r1, r5
   13ea0:	mov	r6, r0
   13ea4:	mov	r0, r4
   13ea8:	bl	12c50 <table_get_col_ptr@@Base>
   13eac:	ldr	r0, [r0, #4]
   13eb0:	cmp	r0, #8
   13eb4:	bne	13f04 <table_set_int64@@Base+0x7c>
   13eb8:	ldr	ip, [r6]
   13ebc:	cmp	ip, #0
   13ec0:	beq	13ef0 <table_set_int64@@Base+0x68>
   13ec4:	add	r3, sp, #24
   13ec8:	mov	r2, r5
   13ecc:	ldm	r3!, {r0, r1}
   13ed0:	mov	r3, #1
   13ed4:	str	r0, [ip]
   13ed8:	str	r1, [ip, #4]
   13edc:	mov	r0, r4
   13ee0:	mov	r1, r7
   13ee4:	bl	12814 <table_notify@@Base>
   13ee8:	mov	r0, #0
   13eec:	pop	{r4, r5, r6, r7, r8, pc}
   13ef0:	bl	11bf4 <malloc@plt>
   13ef4:	cmp	r0, #0
   13ef8:	mov	ip, r0
   13efc:	str	r0, [r6]
   13f00:	bne	13ec4 <table_set_int64@@Base+0x3c>
   13f04:	mvn	r0, #0
   13f08:	pop	{r4, r5, r6, r7, r8, pc}

00013f0c <table_set_uint64@@Base>:
   13f0c:	push	{r4, r5, r6, r7, r8, lr}
   13f10:	mov	r5, r2
   13f14:	mov	r4, r0
   13f18:	mov	r7, r1
   13f1c:	bl	15150 <table_get_cell_ptr@@Base>
   13f20:	mov	r1, r5
   13f24:	mov	r6, r0
   13f28:	mov	r0, r4
   13f2c:	bl	12c50 <table_get_col_ptr@@Base>
   13f30:	ldr	r3, [r0, #4]
   13f34:	cmp	r3, #9
   13f38:	bne	13f8c <table_set_uint64@@Base+0x80>
   13f3c:	ldr	ip, [r6]
   13f40:	cmp	ip, #0
   13f44:	beq	13f74 <table_set_uint64@@Base+0x68>
   13f48:	add	r3, sp, #24
   13f4c:	mov	r2, r5
   13f50:	ldm	r3!, {r0, r1}
   13f54:	mov	r3, #1
   13f58:	str	r0, [ip]
   13f5c:	str	r1, [ip, #4]
   13f60:	mov	r0, r4
   13f64:	mov	r1, r7
   13f68:	bl	12814 <table_notify@@Base>
   13f6c:	mov	r0, #0
   13f70:	pop	{r4, r5, r6, r7, r8, pc}
   13f74:	mov	r0, #8
   13f78:	bl	11bf4 <malloc@plt>
   13f7c:	cmp	r0, #0
   13f80:	mov	ip, r0
   13f84:	str	r0, [r6]
   13f88:	bne	13f48 <table_set_uint64@@Base+0x3c>
   13f8c:	mvn	r0, #0
   13f90:	pop	{r4, r5, r6, r7, r8, pc}

00013f94 <table_set_short@@Base>:
   13f94:	push	{r4, r5, r6, r7, r8, lr}
   13f98:	mov	r5, r2
   13f9c:	mov	r4, r0
   13fa0:	mov	r8, r3
   13fa4:	mov	r7, r1
   13fa8:	bl	15150 <table_get_cell_ptr@@Base>
   13fac:	mov	r1, r5
   13fb0:	mov	r6, r0
   13fb4:	mov	r0, r4
   13fb8:	bl	12c50 <table_get_col_ptr@@Base>
   13fbc:	ldr	r2, [r0, #4]
   13fc0:	cmp	r2, #10
   13fc4:	bne	14008 <table_set_short@@Base+0x74>
   13fc8:	ldr	r0, [r6]
   13fcc:	cmp	r0, #0
   13fd0:	beq	13ff4 <table_set_short@@Base+0x60>
   13fd4:	strh	r8, [r0]
   13fd8:	mov	r2, r5
   13fdc:	mov	r0, r4
   13fe0:	mov	r1, r7
   13fe4:	mov	r3, #1
   13fe8:	bl	12814 <table_notify@@Base>
   13fec:	mov	r0, #0
   13ff0:	pop	{r4, r5, r6, r7, r8, pc}
   13ff4:	mov	r0, #2
   13ff8:	bl	11bf4 <malloc@plt>
   13ffc:	cmp	r0, #0
   14000:	str	r0, [r6]
   14004:	bne	13fd4 <table_set_short@@Base+0x40>
   14008:	mvn	r0, #0
   1400c:	pop	{r4, r5, r6, r7, r8, pc}

00014010 <table_set_ushort@@Base>:
   14010:	push	{r4, r5, r6, r7, r8, lr}
   14014:	mov	r5, r2
   14018:	mov	r4, r0
   1401c:	mov	r8, r3
   14020:	mov	r7, r1
   14024:	bl	15150 <table_get_cell_ptr@@Base>
   14028:	mov	r1, r5
   1402c:	mov	r6, r0
   14030:	mov	r0, r4
   14034:	bl	12c50 <table_get_col_ptr@@Base>
   14038:	ldr	r2, [r0, #4]
   1403c:	cmp	r2, #11
   14040:	bne	14084 <table_set_ushort@@Base+0x74>
   14044:	ldr	r0, [r6]
   14048:	cmp	r0, #0
   1404c:	beq	14070 <table_set_ushort@@Base+0x60>
   14050:	strh	r8, [r0]
   14054:	mov	r2, r5
   14058:	mov	r0, r4
   1405c:	mov	r1, r7
   14060:	mov	r3, #1
   14064:	bl	12814 <table_notify@@Base>
   14068:	mov	r0, #0
   1406c:	pop	{r4, r5, r6, r7, r8, pc}
   14070:	mov	r0, #2
   14074:	bl	11bf4 <malloc@plt>
   14078:	cmp	r0, #0
   1407c:	str	r0, [r6]
   14080:	bne	14050 <table_set_ushort@@Base+0x40>
   14084:	mvn	r0, #0
   14088:	pop	{r4, r5, r6, r7, r8, pc}

0001408c <table_set_long@@Base>:
   1408c:	push	{r4, r5, r6, r7, r8, lr}
   14090:	mov	r5, r2
   14094:	mov	r4, r0
   14098:	mov	r8, r3
   1409c:	mov	r7, r1
   140a0:	bl	15150 <table_get_cell_ptr@@Base>
   140a4:	mov	r1, r5
   140a8:	mov	r6, r0
   140ac:	mov	r0, r4
   140b0:	bl	12c50 <table_get_col_ptr@@Base>
   140b4:	ldr	r2, [r0, #4]
   140b8:	cmp	r2, #12
   140bc:	bne	14100 <table_set_long@@Base+0x74>
   140c0:	ldr	r0, [r6]
   140c4:	cmp	r0, #0
   140c8:	beq	140ec <table_set_long@@Base+0x60>
   140cc:	str	r8, [r0]
   140d0:	mov	r2, r5
   140d4:	mov	r0, r4
   140d8:	mov	r1, r7
   140dc:	mov	r3, #1
   140e0:	bl	12814 <table_notify@@Base>
   140e4:	mov	r0, #0
   140e8:	pop	{r4, r5, r6, r7, r8, pc}
   140ec:	mov	r0, #4
   140f0:	bl	11bf4 <malloc@plt>
   140f4:	cmp	r0, #0
   140f8:	str	r0, [r6]
   140fc:	bne	140cc <table_set_long@@Base+0x40>
   14100:	mvn	r0, #0
   14104:	pop	{r4, r5, r6, r7, r8, pc}

00014108 <table_set_ulong@@Base>:
   14108:	push	{r4, r5, r6, r7, r8, lr}
   1410c:	mov	r5, r2
   14110:	mov	r4, r0
   14114:	mov	r8, r3
   14118:	mov	r7, r1
   1411c:	bl	15150 <table_get_cell_ptr@@Base>
   14120:	mov	r1, r5
   14124:	mov	r6, r0
   14128:	mov	r0, r4
   1412c:	bl	12c50 <table_get_col_ptr@@Base>
   14130:	ldr	r2, [r0, #4]
   14134:	cmp	r2, #13
   14138:	bne	1417c <table_set_ulong@@Base+0x74>
   1413c:	ldr	r0, [r6]
   14140:	cmp	r0, #0
   14144:	beq	14168 <table_set_ulong@@Base+0x60>
   14148:	str	r8, [r0]
   1414c:	mov	r2, r5
   14150:	mov	r0, r4
   14154:	mov	r1, r7
   14158:	mov	r3, #1
   1415c:	bl	12814 <table_notify@@Base>
   14160:	mov	r0, #0
   14164:	pop	{r4, r5, r6, r7, r8, pc}
   14168:	mov	r0, #4
   1416c:	bl	11bf4 <malloc@plt>
   14170:	cmp	r0, #0
   14174:	str	r0, [r6]
   14178:	bne	14148 <table_set_ulong@@Base+0x40>
   1417c:	mvn	r0, #0
   14180:	pop	{r4, r5, r6, r7, r8, pc}

00014184 <table_set_llong@@Base>:
   14184:	push	{r4, r5, r6, r7, r8, lr}
   14188:	mov	r5, r2
   1418c:	mov	r4, r0
   14190:	mov	r7, r1
   14194:	bl	15150 <table_get_cell_ptr@@Base>
   14198:	mov	r1, r5
   1419c:	mov	r6, r0
   141a0:	mov	r0, r4
   141a4:	bl	12c50 <table_get_col_ptr@@Base>
   141a8:	ldr	r3, [r0, #4]
   141ac:	cmp	r3, #14
   141b0:	bne	14204 <table_set_llong@@Base+0x80>
   141b4:	ldr	ip, [r6]
   141b8:	cmp	ip, #0
   141bc:	beq	141ec <table_set_llong@@Base+0x68>
   141c0:	add	r3, sp, #24
   141c4:	mov	r2, r5
   141c8:	ldm	r3!, {r0, r1}
   141cc:	mov	r3, #1
   141d0:	str	r0, [ip]
   141d4:	str	r1, [ip, #4]
   141d8:	mov	r0, r4
   141dc:	mov	r1, r7
   141e0:	bl	12814 <table_notify@@Base>
   141e4:	mov	r0, #0
   141e8:	pop	{r4, r5, r6, r7, r8, pc}
   141ec:	mov	r0, #8
   141f0:	bl	11bf4 <malloc@plt>
   141f4:	cmp	r0, #0
   141f8:	mov	ip, r0
   141fc:	str	r0, [r6]
   14200:	bne	141c0 <table_set_llong@@Base+0x3c>
   14204:	mvn	r0, #0
   14208:	pop	{r4, r5, r6, r7, r8, pc}

0001420c <table_set_ullong@@Base>:
   1420c:	push	{r4, r5, r6, r7, r8, lr}
   14210:	mov	r5, r2
   14214:	mov	r4, r0
   14218:	mov	r7, r1
   1421c:	bl	15150 <table_get_cell_ptr@@Base>
   14220:	mov	r1, r5
   14224:	mov	r6, r0
   14228:	mov	r0, r4
   1422c:	bl	12c50 <table_get_col_ptr@@Base>
   14230:	ldr	r3, [r0, #4]
   14234:	cmp	r3, #15
   14238:	bne	1428c <table_set_ullong@@Base+0x80>
   1423c:	ldr	ip, [r6]
   14240:	cmp	ip, #0
   14244:	beq	14274 <table_set_ullong@@Base+0x68>
   14248:	add	r3, sp, #24
   1424c:	mov	r2, r5
   14250:	ldm	r3!, {r0, r1}
   14254:	mov	r3, #1
   14258:	str	r0, [ip]
   1425c:	str	r1, [ip, #4]
   14260:	mov	r0, r4
   14264:	mov	r1, r7
   14268:	bl	12814 <table_notify@@Base>
   1426c:	mov	r0, #0
   14270:	pop	{r4, r5, r6, r7, r8, pc}
   14274:	mov	r0, #8
   14278:	bl	11bf4 <malloc@plt>
   1427c:	cmp	r0, #0
   14280:	mov	ip, r0
   14284:	str	r0, [r6]
   14288:	bne	14248 <table_set_ullong@@Base+0x3c>
   1428c:	mvn	r0, #0
   14290:	pop	{r4, r5, r6, r7, r8, pc}

00014294 <table_set_float@@Base>:
   14294:	push	{r4, r5, r6, r7, r8, lr}
   14298:	mov	r5, r2
   1429c:	mov	r4, r0
   142a0:	mov	r7, r1
   142a4:	vmov	r8, s0
   142a8:	bl	15150 <table_get_cell_ptr@@Base>
   142ac:	mov	r1, r5
   142b0:	mov	r6, r0
   142b4:	mov	r0, r4
   142b8:	bl	12c50 <table_get_col_ptr@@Base>
   142bc:	ldr	r3, [r0, #4]
   142c0:	cmp	r3, #16
   142c4:	bne	14308 <table_set_float@@Base+0x74>
   142c8:	ldr	r0, [r6]
   142cc:	cmp	r0, #0
   142d0:	beq	142f4 <table_set_float@@Base+0x60>
   142d4:	str	r8, [r0]
   142d8:	mov	r2, r5
   142dc:	mov	r0, r4
   142e0:	mov	r1, r7
   142e4:	mov	r3, #1
   142e8:	bl	12814 <table_notify@@Base>
   142ec:	mov	r0, #0
   142f0:	pop	{r4, r5, r6, r7, r8, pc}
   142f4:	mov	r0, #4
   142f8:	bl	11bf4 <malloc@plt>
   142fc:	cmp	r0, #0
   14300:	str	r0, [r6]
   14304:	bne	142d4 <table_set_float@@Base+0x40>
   14308:	mvn	r0, #0
   1430c:	pop	{r4, r5, r6, r7, r8, pc}

00014310 <table_set_double@@Base>:
   14310:	push	{r4, r5, r6, r7, lr}
   14314:	sub	sp, sp, #12
   14318:	mov	r5, r2
   1431c:	mov	r4, r0
   14320:	vstr	d0, [sp]
   14324:	mov	r7, r1
   14328:	bl	15150 <table_get_cell_ptr@@Base>
   1432c:	mov	r1, r5
   14330:	mov	r6, r0
   14334:	mov	r0, r4
   14338:	bl	12c50 <table_get_col_ptr@@Base>
   1433c:	ldr	r3, [r0, #4]
   14340:	cmp	r3, #17
   14344:	bne	1439c <table_set_double@@Base+0x8c>
   14348:	ldr	ip, [r6]
   1434c:	cmp	ip, #0
   14350:	beq	14384 <table_set_double@@Base+0x74>
   14354:	mov	r3, sp
   14358:	mov	r2, r5
   1435c:	ldm	r3!, {r0, r1}
   14360:	mov	r3, #1
   14364:	str	r0, [ip]
   14368:	str	r1, [ip, #4]
   1436c:	mov	r0, r4
   14370:	mov	r1, r7
   14374:	bl	12814 <table_notify@@Base>
   14378:	mov	r0, #0
   1437c:	add	sp, sp, #12
   14380:	pop	{r4, r5, r6, r7, pc}
   14384:	mov	r0, #8
   14388:	bl	11bf4 <malloc@plt>
   1438c:	cmp	r0, #0
   14390:	mov	ip, r0
   14394:	str	r0, [r6]
   14398:	bne	14354 <table_set_double@@Base+0x44>
   1439c:	mvn	r0, #0
   143a0:	add	sp, sp, #12
   143a4:	pop	{r4, r5, r6, r7, pc}

000143a8 <table_set_ldouble@@Base>:
   143a8:	push	{r4, r5, r6, r7, lr}
   143ac:	sub	sp, sp, #12
   143b0:	mov	r5, r2
   143b4:	mov	r4, r0
   143b8:	vstr	d0, [sp]
   143bc:	mov	r7, r1
   143c0:	bl	15150 <table_get_cell_ptr@@Base>
   143c4:	mov	r1, r5
   143c8:	mov	r6, r0
   143cc:	mov	r0, r4
   143d0:	bl	12c50 <table_get_col_ptr@@Base>
   143d4:	ldr	r3, [r0, #4]
   143d8:	cmp	r3, #18
   143dc:	bne	14434 <table_set_ldouble@@Base+0x8c>
   143e0:	ldr	ip, [r6]
   143e4:	cmp	ip, #0
   143e8:	beq	1441c <table_set_ldouble@@Base+0x74>
   143ec:	mov	r3, sp
   143f0:	mov	r2, r5
   143f4:	ldm	r3!, {r0, r1}
   143f8:	mov	r3, #1
   143fc:	str	r0, [ip]
   14400:	str	r1, [ip, #4]
   14404:	mov	r0, r4
   14408:	mov	r1, r7
   1440c:	bl	12814 <table_notify@@Base>
   14410:	mov	r0, #0
   14414:	add	sp, sp, #12
   14418:	pop	{r4, r5, r6, r7, pc}
   1441c:	mov	r0, #8
   14420:	bl	11bf4 <malloc@plt>
   14424:	cmp	r0, #0
   14428:	mov	ip, r0
   1442c:	str	r0, [r6]
   14430:	bne	143ec <table_set_ldouble@@Base+0x44>
   14434:	mvn	r0, #0
   14438:	add	sp, sp, #12
   1443c:	pop	{r4, r5, r6, r7, pc}

00014440 <table_set_string@@Base>:
   14440:	push	{r4, r5, r6, r7, r8, lr}
   14444:	mov	r5, r2
   14448:	mov	r7, r3
   1444c:	mov	r4, r0
   14450:	mov	r8, r1
   14454:	bl	15150 <table_get_cell_ptr@@Base>
   14458:	mov	r1, r5
   1445c:	mov	r6, r0
   14460:	mov	r0, r4
   14464:	bl	12c50 <table_get_col_ptr@@Base>
   14468:	ldr	r3, [r0, #4]
   1446c:	cmp	r3, #21
   14470:	bne	144b8 <table_set_string@@Base+0x78>
   14474:	mov	r0, r7
   14478:	bl	11c18 <strlen@plt>
   1447c:	add	r1, r0, #1
   14480:	ldr	r0, [r6]
   14484:	bl	11bdc <realloc@plt>
   14488:	cmp	r0, #0
   1448c:	str	r0, [r6]
   14490:	beq	144b8 <table_set_string@@Base+0x78>
   14494:	mov	r1, r7
   14498:	bl	11be8 <strcpy@plt>
   1449c:	mov	r0, r4
   144a0:	mov	r2, r5
   144a4:	mov	r1, r8
   144a8:	mov	r3, #1
   144ac:	bl	12814 <table_notify@@Base>
   144b0:	mov	r0, #0
   144b4:	pop	{r4, r5, r6, r7, r8, pc}
   144b8:	mvn	r0, #0
   144bc:	pop	{r4, r5, r6, r7, r8, pc}

000144c0 <table_set_char@@Base>:
   144c0:	push	{r4, r5, r6, r7, r8, lr}
   144c4:	mov	r5, r2
   144c8:	mov	r4, r0
   144cc:	mov	r8, r3
   144d0:	mov	r7, r1
   144d4:	bl	15150 <table_get_cell_ptr@@Base>
   144d8:	mov	r1, r5
   144dc:	mov	r6, r0
   144e0:	mov	r0, r4
   144e4:	bl	12c50 <table_get_col_ptr@@Base>
   144e8:	ldr	r2, [r0, #4]
   144ec:	cmp	r2, #19
   144f0:	bne	14534 <table_set_char@@Base+0x74>
   144f4:	ldr	r0, [r6]
   144f8:	cmp	r0, #0
   144fc:	beq	14520 <table_set_char@@Base+0x60>
   14500:	strb	r8, [r0]
   14504:	mov	r2, r5
   14508:	mov	r0, r4
   1450c:	mov	r1, r7
   14510:	mov	r3, #1
   14514:	bl	12814 <table_notify@@Base>
   14518:	mov	r0, #0
   1451c:	pop	{r4, r5, r6, r7, r8, pc}
   14520:	mov	r0, #1
   14524:	bl	11bf4 <malloc@plt>
   14528:	cmp	r0, #0
   1452c:	str	r0, [r6]
   14530:	bne	14500 <table_set_char@@Base+0x40>
   14534:	mvn	r0, #0
   14538:	pop	{r4, r5, r6, r7, r8, pc}

0001453c <table_set_uchar@@Base>:
   1453c:	push	{r4, r5, r6, r7, r8, lr}
   14540:	mov	r5, r2
   14544:	mov	r4, r0
   14548:	mov	r8, r3
   1454c:	mov	r7, r1
   14550:	bl	15150 <table_get_cell_ptr@@Base>
   14554:	mov	r1, r5
   14558:	mov	r6, r0
   1455c:	mov	r0, r4
   14560:	bl	12c50 <table_get_col_ptr@@Base>
   14564:	ldr	r2, [r0, #4]
   14568:	cmp	r2, #20
   1456c:	bne	145b0 <table_set_uchar@@Base+0x74>
   14570:	ldr	r0, [r6]
   14574:	cmp	r0, #0
   14578:	beq	1459c <table_set_uchar@@Base+0x60>
   1457c:	strb	r8, [r0]
   14580:	mov	r2, r5
   14584:	mov	r0, r4
   14588:	mov	r1, r7
   1458c:	mov	r3, #1
   14590:	bl	12814 <table_notify@@Base>
   14594:	mov	r0, #0
   14598:	pop	{r4, r5, r6, r7, r8, pc}
   1459c:	mov	r0, #1
   145a0:	bl	11bf4 <malloc@plt>
   145a4:	cmp	r0, #0
   145a8:	str	r0, [r6]
   145ac:	bne	1457c <table_set_uchar@@Base+0x40>
   145b0:	mvn	r0, #0
   145b4:	pop	{r4, r5, r6, r7, r8, pc}

000145b8 <table_set_ptr@@Base>:
   145b8:	push	{r4, r5, r6, r7, r8, lr}
   145bc:	mov	r5, r2
   145c0:	mov	r4, r0
   145c4:	mov	r8, r3
   145c8:	mov	r6, r1
   145cc:	bl	15150 <table_get_cell_ptr@@Base>
   145d0:	mov	r1, r5
   145d4:	mov	r7, r0
   145d8:	mov	r0, r4
   145dc:	bl	12c50 <table_get_col_ptr@@Base>
   145e0:	ldr	r2, [r0, #4]
   145e4:	cmp	r2, #23
   145e8:	bne	1460c <table_set_ptr@@Base+0x54>
   145ec:	mov	r0, r4
   145f0:	str	r8, [r7]
   145f4:	mov	r2, r5
   145f8:	mov	r1, r6
   145fc:	mov	r3, #1
   14600:	bl	12814 <table_notify@@Base>
   14604:	mov	r0, #0
   14608:	pop	{r4, r5, r6, r7, r8, pc}
   1460c:	mvn	r0, #0
   14610:	pop	{r4, r5, r6, r7, r8, pc}

00014614 <table_column_is_valid@@Base>:
   14614:	push	{r4, lr}
   14618:	subs	r4, r0, #0
   1461c:	beq	1463c <table_column_is_valid@@Base+0x28>
   14620:	mov	r4, r1
   14624:	bl	12904 <table_get_column_length@@Base>
   14628:	cmp	r4, #0
   1462c:	cmpge	r0, r4
   14630:	movgt	r0, #1
   14634:	movle	r0, #0
   14638:	pop	{r4, pc}
   1463c:	mov	r0, r4
   14640:	pop	{r4, pc}

00014644 <table_row_is_valid@@Base>:
   14644:	push	{r4, lr}
   14648:	subs	r4, r0, #0
   1464c:	beq	1466c <table_row_is_valid@@Base+0x28>
   14650:	mov	r4, r1
   14654:	bl	1350c <table_get_row_length@@Base>
   14658:	cmp	r4, #0
   1465c:	cmpge	r0, r4
   14660:	movgt	r0, #1
   14664:	movle	r0, #0
   14668:	pop	{r4, pc}
   1466c:	mov	r0, r4
   14670:	pop	{r4, pc}

00014674 <table_cell_is_valid@@Base>:
   14674:	subs	r3, r0, #0
   14678:	beq	146d0 <table_cell_is_valid@@Base+0x5c>
   1467c:	push	{r4, r5, r6, lr}
   14680:	mov	r4, r2
   14684:	mov	r6, r3
   14688:	mov	r5, r1
   1468c:	bl	12904 <table_get_column_length@@Base>
   14690:	mvn	r3, r4
   14694:	lsr	r3, r3, #31
   14698:	cmp	r4, r0
   1469c:	movge	r3, #0
   146a0:	cmp	r3, #0
   146a4:	beq	146c8 <table_cell_is_valid@@Base+0x54>
   146a8:	mov	r0, r6
   146ac:	bl	1350c <table_get_row_length@@Base>
   146b0:	mvn	r3, r5
   146b4:	lsr	r3, r3, #31
   146b8:	cmp	r5, r0
   146bc:	movge	r3, #0
   146c0:	mov	r0, r3
   146c4:	pop	{r4, r5, r6, pc}
   146c8:	mov	r0, #0
   146cc:	pop	{r4, r5, r6, pc}
   146d0:	mov	r0, #0
   146d4:	bx	lr

000146d8 <table_cell_has_value@@Base>:
   146d8:	push	{r4, lr}
   146dc:	bl	15150 <table_get_cell_ptr@@Base>
   146e0:	cmp	r0, #0
   146e4:	popeq	{r4, pc}
   146e8:	ldr	r0, [r0]
   146ec:	adds	r0, r0, #0
   146f0:	movne	r0, #1
   146f4:	pop	{r4, pc}

000146f8 <table_cell_init@@Base>:
   146f8:	push	{r4, lr}
   146fc:	mov	r4, r2
   14700:	bl	136c4 <table_get_row_ptr@@Base>
   14704:	mov	r2, #0
   14708:	ldr	r3, [r0]
   1470c:	str	r2, [r3, r4, lsl #2]
   14710:	pop	{r4, pc}

00014714 <table_cell_destroy@@Base>:
   14714:	push	{r4, r5, r6, lr}
   14718:	mov	r6, r1
   1471c:	mov	r1, r2
   14720:	mov	r4, r2
   14724:	mov	r5, r0
   14728:	bl	12974 <table_get_column_data_type@@Base>
   1472c:	cmp	r0, #23
   14730:	popeq	{r4, r5, r6, pc}
   14734:	mov	r1, r6
   14738:	mov	r0, r5
   1473c:	bl	136c4 <table_get_row_ptr@@Base>
   14740:	ldr	r3, [r0]
   14744:	ldr	r0, [r3, r4, lsl #2]
   14748:	cmp	r0, #0
   1474c:	popeq	{r4, r5, r6, pc}
   14750:	pop	{r4, r5, r6, lr}
   14754:	b	11bc4 <free@plt>

00014758 <table_cell_to_buffer@@Base>:
   14758:	push	{r4, r5, r6, r7, lr}
   1475c:	mov	r7, r1
   14760:	sub	sp, sp, #12
   14764:	mov	r1, r2
   14768:	mov	r4, r2
   1476c:	mov	r5, r3
   14770:	mov	r6, r0
   14774:	bl	12974 <table_get_column_data_type@@Base>
   14778:	cmp	r0, #23
   1477c:	ldrls	pc, [pc, r0, lsl #2]
   14780:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   14784:	ldrdeq	r4, [r1], -ip
   14788:	andeq	r4, r1, r8, asr #21
   1478c:			; <UNDEFINED> instruction: 0x00014ab4
   14790:	andeq	r4, r1, r0, lsr #21
   14794:	andeq	r4, r1, ip, lsl #21
   14798:	andeq	r4, r1, r8, ror sl
   1479c:	andeq	r4, r1, r4, ror #20
   147a0:	andeq	r4, r1, r4, lsr sl
   147a4:	andeq	r4, r1, r0, lsr #20
   147a8:	andeq	r4, r1, ip, lsl #20
   147ac:	andeq	r4, r1, r4, ror #19
   147b0:			; <UNDEFINED> instruction: 0x000149bc
   147b4:	muleq	r1, r4, r9
   147b8:	andeq	r4, r1, ip, ror #18
   147bc:	andeq	r4, r1, r4, asr #18
   147c0:	andeq	r4, r1, ip, lsl r9
   147c4:	strdeq	r4, [r1], -r0
   147c8:	andeq	r4, r1, r8, asr #17
   147cc:	andeq	r4, r1, r0, lsr #17
   147d0:	andeq	r4, r1, ip, lsl #17
   147d4:	andeq	r4, r1, r4, ror #16
   147d8:	andeq	r4, r1, ip, lsr r8
   147dc:	andeq	r4, r1, r4, ror #15
   147e0:	andeq	r4, r1, r4, lsl r8
   147e4:	mov	r2, r4
   147e8:	mov	r1, r7
   147ec:	mov	r0, r6
   147f0:	bl	132c0 <table_get_bool@@Base>
   147f4:	mov	r3, r0
   147f8:	ldr	r2, [pc, #752]	; 14af0 <table_cell_to_buffer@@Base+0x398>
   147fc:	mov	r0, r5
   14800:	ldr	r1, [sp, #32]
   14804:	bl	11c30 <snprintf@plt>
   14808:	mov	r0, #0
   1480c:	add	sp, sp, #12
   14810:	pop	{r4, r5, r6, r7, pc}
   14814:	mov	r2, r4
   14818:	mov	r1, r7
   1481c:	mov	r0, r6
   14820:	bl	13488 <table_get_ptr@@Base>
   14824:	ldr	r2, [pc, #712]	; 14af4 <table_cell_to_buffer@@Base+0x39c>
   14828:	ldr	r1, [sp, #32]
   1482c:	mov	r3, r0
   14830:	mov	r0, r5
   14834:	bl	11c30 <snprintf@plt>
   14838:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   1483c:	mov	r2, r4
   14840:	mov	r1, r7
   14844:	mov	r0, r6
   14848:	bl	13478 <table_get_string@@Base>
   1484c:	ldr	r2, [pc, #676]	; 14af8 <table_cell_to_buffer@@Base+0x3a0>
   14850:	ldr	r1, [sp, #32]
   14854:	mov	r3, r0
   14858:	mov	r0, r5
   1485c:	bl	11c30 <snprintf@plt>
   14860:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   14864:	mov	r2, r4
   14868:	mov	r1, r7
   1486c:	mov	r0, r6
   14870:	bl	13464 <table_get_uchar@@Base>
   14874:	mov	r3, r0
   14878:	ldr	r2, [pc, #636]	; 14afc <table_cell_to_buffer@@Base+0x3a4>
   1487c:	mov	r0, r5
   14880:	ldr	r1, [sp, #32]
   14884:	bl	11c30 <snprintf@plt>
   14888:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   1488c:	mov	r2, r4
   14890:	mov	r1, r7
   14894:	mov	r0, r6
   14898:	bl	13450 <table_get_char@@Base>
   1489c:	b	14874 <table_cell_to_buffer@@Base+0x11c>
   148a0:	mov	r2, r4
   148a4:	mov	r1, r7
   148a8:	mov	r0, r6
   148ac:	bl	1343c <table_get_ldouble@@Base>
   148b0:	mov	r0, r5
   148b4:	ldr	r2, [pc, #580]	; 14b00 <table_cell_to_buffer@@Base+0x3a8>
   148b8:	ldr	r1, [sp, #32]
   148bc:	vstr	d0, [sp]
   148c0:	bl	11c30 <snprintf@plt>
   148c4:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   148c8:	mov	r2, r4
   148cc:	mov	r1, r7
   148d0:	mov	r0, r6
   148d4:	bl	13428 <table_get_double@@Base>
   148d8:	mov	r0, r5
   148dc:	ldr	r2, [pc, #544]	; 14b04 <table_cell_to_buffer@@Base+0x3ac>
   148e0:	ldr	r1, [sp, #32]
   148e4:	vstr	d0, [sp]
   148e8:	bl	11c30 <snprintf@plt>
   148ec:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   148f0:	mov	r2, r4
   148f4:	mov	r1, r7
   148f8:	mov	r0, r6
   148fc:	bl	13414 <table_get_float@@Base>
   14900:	mov	r0, r5
   14904:	ldr	r2, [pc, #508]	; 14b08 <table_cell_to_buffer@@Base+0x3b0>
   14908:	ldr	r1, [sp, #32]
   1490c:	vcvt.f64.f32	d0, s0
   14910:	vstr	d0, [sp]
   14914:	bl	11c30 <snprintf@plt>
   14918:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   1491c:	mov	r2, r4
   14920:	mov	r1, r7
   14924:	mov	r0, r6
   14928:	bl	13400 <table_get_ullong@@Base>
   1492c:	strd	r0, [sp]
   14930:	ldr	r2, [pc, #468]	; 14b0c <table_cell_to_buffer@@Base+0x3b4>
   14934:	mov	r0, r5
   14938:	ldr	r1, [sp, #32]
   1493c:	bl	11c30 <snprintf@plt>
   14940:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   14944:	mov	r2, r4
   14948:	mov	r1, r7
   1494c:	mov	r0, r6
   14950:	bl	133ec <table_get_llong@@Base>
   14954:	strd	r0, [sp]
   14958:	ldr	r2, [pc, #432]	; 14b10 <table_cell_to_buffer@@Base+0x3b8>
   1495c:	mov	r0, r5
   14960:	ldr	r1, [sp, #32]
   14964:	bl	11c30 <snprintf@plt>
   14968:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   1496c:	mov	r2, r4
   14970:	mov	r1, r7
   14974:	mov	r0, r6
   14978:	bl	133d8 <table_get_ulong@@Base>
   1497c:	ldr	r2, [pc, #400]	; 14b14 <table_cell_to_buffer@@Base+0x3bc>
   14980:	ldr	r1, [sp, #32]
   14984:	mov	r3, r0
   14988:	mov	r0, r5
   1498c:	bl	11c30 <snprintf@plt>
   14990:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   14994:	mov	r2, r4
   14998:	mov	r1, r7
   1499c:	mov	r0, r6
   149a0:	bl	133c4 <table_get_long@@Base>
   149a4:	ldr	r2, [pc, #364]	; 14b18 <table_cell_to_buffer@@Base+0x3c0>
   149a8:	ldr	r1, [sp, #32]
   149ac:	mov	r3, r0
   149b0:	mov	r0, r5
   149b4:	bl	11c30 <snprintf@plt>
   149b8:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   149bc:	mov	r2, r4
   149c0:	mov	r1, r7
   149c4:	mov	r0, r6
   149c8:	bl	133b0 <table_get_ushort@@Base>
   149cc:	ldr	r2, [pc, #328]	; 14b1c <table_cell_to_buffer@@Base+0x3c4>
   149d0:	ldr	r1, [sp, #32]
   149d4:	mov	r3, r0
   149d8:	mov	r0, r5
   149dc:	bl	11c30 <snprintf@plt>
   149e0:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   149e4:	mov	r2, r4
   149e8:	mov	r1, r7
   149ec:	mov	r0, r6
   149f0:	bl	1339c <table_get_short@@Base>
   149f4:	ldr	r2, [pc, #292]	; 14b20 <table_cell_to_buffer@@Base+0x3c8>
   149f8:	ldr	r1, [sp, #32]
   149fc:	mov	r3, r0
   14a00:	mov	r0, r5
   14a04:	bl	11c30 <snprintf@plt>
   14a08:	b	14808 <table_cell_to_buffer@@Base+0xb0>
   14a0c:	mov	r2, r4
   14a10:	mov	r1, r7
   14a14:	mov	r0, r6
   14a18:	bl	13388 <table_get_uint64@@Base>
   14a1c:	b	1492c <table_cell_to_buffer@@Base+0x1d4>
   14a20:	mov	r2, r4
   14a24:	mov	r1, r7
   14a28:	mov	r0, r6
   14a2c:	bl	13374 <table_get_int64@@Base>
   14a30:	b	14954 <table_cell_to_buffer@@Base+0x1fc>
   14a34:	mov	r2, r4
   14a38:	mov	r1, r7
   14a3c:	mov	r0, r6
   14a40:	bl	13360 <table_get_uint32@@Base>
   14a44:	mov	r3, r0
   14a48:	ldr	r2, [pc, #212]	; 14b24 <table_cell_to_buffer@@Base+0x3cc>
   14a4c:	mov	r0, r5
   14a50:	ldr	r1, [sp, #32]
   14a54:	bl	11c30 <snprintf@plt>
   14a58:	mov	r0, #0
   14a5c:	add	sp, sp, #12
   14a60:	pop	{r4, r5, r6, r7, pc}
   14a64:	mov	r2, r4
   14a68:	mov	r1, r7
   14a6c:	mov	r0, r6
   14a70:	bl	1334c <table_get_int32@@Base>
   14a74:	b	147f4 <table_cell_to_buffer@@Base+0x9c>
   14a78:	mov	r2, r4
   14a7c:	mov	r1, r7
   14a80:	mov	r0, r6
   14a84:	bl	13338 <table_get_uint16@@Base>
   14a88:	b	14a44 <table_cell_to_buffer@@Base+0x2ec>
   14a8c:	mov	r2, r4
   14a90:	mov	r1, r7
   14a94:	mov	r0, r6
   14a98:	bl	13324 <table_get_int16@@Base>
   14a9c:	b	147f4 <table_cell_to_buffer@@Base+0x9c>
   14aa0:	mov	r2, r4
   14aa4:	mov	r1, r7
   14aa8:	mov	r0, r6
   14aac:	bl	13310 <table_get_uint8@@Base>
   14ab0:	b	14a44 <table_cell_to_buffer@@Base+0x2ec>
   14ab4:	mov	r2, r4
   14ab8:	mov	r1, r7
   14abc:	mov	r0, r6
   14ac0:	bl	132fc <table_get_int8@@Base>
   14ac4:	b	147f4 <table_cell_to_buffer@@Base+0x9c>
   14ac8:	mov	r2, r4
   14acc:	mov	r1, r7
   14ad0:	mov	r0, r6
   14ad4:	bl	132e8 <table_get_uint@@Base>
   14ad8:	b	14a44 <table_cell_to_buffer@@Base+0x2ec>
   14adc:	mov	r2, r4
   14ae0:	mov	r1, r7
   14ae4:	mov	r0, r6
   14ae8:	bl	132d4 <table_get_int@@Base>
   14aec:	b	147f4 <table_cell_to_buffer@@Base+0x9c>
   14af0:	andeq	r5, r1, r0, lsl #10
   14af4:	andeq	r5, r1, ip, lsr r5
   14af8:	andeq	r5, r1, r8, lsr #10
   14afc:	andeq	r5, r1, r8, lsr r5
   14b00:	andeq	r5, r1, r4, lsr r5
   14b04:	andeq	r5, r1, r0, lsr r5
   14b08:	andeq	r5, r1, ip, lsr #10
   14b0c:	andeq	r5, r1, r0, lsl r5
   14b10:	andeq	r5, r1, r8, lsl #10
   14b14:	andeq	r5, r1, r4, lsr #10
   14b18:	andeq	r5, r1, r0, lsr #10
   14b1c:	andeq	r5, r1, ip, lsl r5
   14b20:	andeq	r5, r1, r8, lsl r5
   14b24:	andeq	r5, r1, r4, lsl #10

00014b28 <table_cell_from_buffer@@Base>:
   14b28:	push	{r4, r5, r6, r7, r8, lr}
   14b2c:	mov	r8, r1
   14b30:	sub	sp, sp, #264	; 0x108
   14b34:	mov	r1, r2
   14b38:	mov	r4, r2
   14b3c:	mov	r6, r3
   14b40:	mov	r5, r0
   14b44:	bl	12974 <table_get_column_data_type@@Base>
   14b48:	cmp	r0, #23
   14b4c:	ldrls	pc, [pc, r0, lsl #2]
   14b50:	b	150d8 <table_cell_from_buffer@@Base+0x5b0>
   14b54:	andeq	r5, r1, r0, ror r0
   14b58:	andeq	r5, r1, ip, lsr r0
   14b5c:	andeq	r5, r1, r8
   14b60:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b64:	andeq	r4, r1, r0, lsr #31
   14b68:	andeq	r4, r1, ip, ror #30
   14b6c:	andeq	r4, r1, r8, lsr pc
   14b70:	andeq	r4, r1, r4, lsl #30
   14b74:	andeq	r4, r1, ip, asr #29
   14b78:	muleq	r1, r4, lr
   14b7c:	andeq	r4, r1, r0, ror #28
   14b80:	andeq	r4, r1, ip, lsr #28
   14b84:	strdeq	r4, [r1], -r8
   14b88:	andeq	r4, r1, r4, asr #27
   14b8c:	andeq	r4, r1, ip, lsl #27
   14b90:	andeq	r4, r1, r4, asr sp
   14b94:	andeq	r4, r1, ip, ror #25
   14b98:			; <UNDEFINED> instruction: 0x00014cb8
   14b9c:	andeq	r4, r1, r0, lsr #26
   14ba0:	andeq	r4, r1, ip, lsl ip
   14ba4:	andeq	r4, r1, r4, lsl #25
   14ba8:	andeq	r4, r1, r0, asr ip
   14bac:	ldrdeq	r4, [r1], -ip
   14bb0:			; <UNDEFINED> instruction: 0x00014bb4
   14bb4:	mov	r0, r6
   14bb8:	add	r2, sp, #8
   14bbc:	ldr	r1, [pc, #1308]	; 150e0 <table_cell_from_buffer@@Base+0x5b8>
   14bc0:	bl	11c3c <__isoc99_sscanf@plt>
   14bc4:	cmp	r0, #1
   14bc8:	beq	150bc <table_cell_from_buffer@@Base+0x594>
   14bcc:	mvn	r6, #0
   14bd0:	mov	r0, r6
   14bd4:	add	sp, sp, #264	; 0x108
   14bd8:	pop	{r4, r5, r6, r7, r8, pc}
   14bdc:	mov	r0, r6
   14be0:	add	r2, sp, #8
   14be4:	ldr	r1, [pc, #1272]	; 150e4 <table_cell_from_buffer@@Base+0x5bc>
   14be8:	bl	11c3c <__isoc99_sscanf@plt>
   14bec:	cmp	r0, #1
   14bf0:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14bf4:	ldr	r6, [sp, #8]
   14bf8:	cmp	r6, #0
   14bfc:	beq	150a4 <table_cell_from_buffer@@Base+0x57c>
   14c00:	mov	r3, r0
   14c04:	mov	r2, r4
   14c08:	mov	r1, r8
   14c0c:	mov	r0, r5
   14c10:	bl	13a2c <table_set_bool@@Base>
   14c14:	mov	r6, #0
   14c18:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14c1c:	mov	r0, r6
   14c20:	add	r2, sp, #8
   14c24:	ldr	r1, [pc, #1212]	; 150e8 <table_cell_from_buffer@@Base+0x5c0>
   14c28:	bl	11c3c <__isoc99_sscanf@plt>
   14c2c:	cmp	r0, #1
   14c30:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14c34:	mov	r2, r4
   14c38:	mov	r1, r8
   14c3c:	mov	r0, r5
   14c40:	ldrb	r3, [sp, #8]
   14c44:	bl	144c0 <table_set_char@@Base>
   14c48:	mov	r6, #0
   14c4c:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14c50:	mov	r0, r6
   14c54:	add	r2, sp, #8
   14c58:	ldr	r1, [pc, #1164]	; 150ec <table_cell_from_buffer@@Base+0x5c4>
   14c5c:	bl	11c3c <__isoc99_sscanf@plt>
   14c60:	cmp	r0, #1
   14c64:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14c68:	add	r3, sp, #8
   14c6c:	mov	r2, r4
   14c70:	mov	r1, r8
   14c74:	mov	r0, r5
   14c78:	bl	14440 <table_set_string@@Base>
   14c7c:	mov	r6, #0
   14c80:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14c84:	mov	r0, r6
   14c88:	add	r2, sp, #8
   14c8c:	ldr	r1, [pc, #1108]	; 150e8 <table_cell_from_buffer@@Base+0x5c0>
   14c90:	bl	11c3c <__isoc99_sscanf@plt>
   14c94:	cmp	r0, #1
   14c98:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14c9c:	mov	r2, r4
   14ca0:	mov	r1, r8
   14ca4:	mov	r0, r5
   14ca8:	ldrb	r3, [sp, #8]
   14cac:	bl	1453c <table_set_uchar@@Base>
   14cb0:	mov	r6, #0
   14cb4:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14cb8:	mov	r0, r6
   14cbc:	add	r2, sp, #8
   14cc0:	ldr	r1, [pc, #1064]	; 150f0 <table_cell_from_buffer@@Base+0x5c8>
   14cc4:	bl	11c3c <__isoc99_sscanf@plt>
   14cc8:	cmp	r0, #1
   14ccc:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14cd0:	mov	r2, r4
   14cd4:	mov	r1, r8
   14cd8:	mov	r0, r5
   14cdc:	vldr	d0, [sp, #8]
   14ce0:	bl	14310 <table_set_double@@Base>
   14ce4:	mov	r6, #0
   14ce8:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14cec:	mov	r0, r6
   14cf0:	add	r2, sp, #8
   14cf4:	ldr	r1, [pc, #1016]	; 150f4 <table_cell_from_buffer@@Base+0x5cc>
   14cf8:	bl	11c3c <__isoc99_sscanf@plt>
   14cfc:	cmp	r0, #1
   14d00:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14d04:	mov	r2, r4
   14d08:	mov	r1, r8
   14d0c:	mov	r0, r5
   14d10:	vldr	s0, [sp, #8]
   14d14:	bl	14294 <table_set_float@@Base>
   14d18:	mov	r6, #0
   14d1c:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14d20:	mov	r0, r6
   14d24:	add	r2, sp, #8
   14d28:	ldr	r1, [pc, #968]	; 150f8 <table_cell_from_buffer@@Base+0x5d0>
   14d2c:	bl	11c3c <__isoc99_sscanf@plt>
   14d30:	cmp	r0, #1
   14d34:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14d38:	mov	r2, r4
   14d3c:	mov	r1, r8
   14d40:	mov	r0, r5
   14d44:	vldr	d0, [sp, #8]
   14d48:	bl	143a8 <table_set_ldouble@@Base>
   14d4c:	mov	r6, #0
   14d50:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14d54:	mov	r0, r6
   14d58:	add	r2, sp, #8
   14d5c:	ldr	r1, [pc, #920]	; 150fc <table_cell_from_buffer@@Base+0x5d4>
   14d60:	bl	11c3c <__isoc99_sscanf@plt>
   14d64:	cmp	r0, #1
   14d68:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14d6c:	ldrd	r6, [sp, #8]
   14d70:	mov	r2, r4
   14d74:	mov	r1, r8
   14d78:	strd	r6, [sp]
   14d7c:	mov	r0, r5
   14d80:	bl	1420c <table_set_ullong@@Base>
   14d84:	mov	r6, #0
   14d88:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14d8c:	mov	r0, r6
   14d90:	add	r2, sp, #8
   14d94:	ldr	r1, [pc, #868]	; 15100 <table_cell_from_buffer@@Base+0x5d8>
   14d98:	bl	11c3c <__isoc99_sscanf@plt>
   14d9c:	cmp	r0, #1
   14da0:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14da4:	ldrd	r6, [sp, #8]
   14da8:	mov	r2, r4
   14dac:	mov	r1, r8
   14db0:	strd	r6, [sp]
   14db4:	mov	r0, r5
   14db8:	bl	14184 <table_set_llong@@Base>
   14dbc:	mov	r6, #0
   14dc0:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14dc4:	mov	r0, r6
   14dc8:	add	r2, sp, #8
   14dcc:	ldr	r1, [pc, #816]	; 15104 <table_cell_from_buffer@@Base+0x5dc>
   14dd0:	bl	11c3c <__isoc99_sscanf@plt>
   14dd4:	cmp	r0, #1
   14dd8:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14ddc:	mov	r2, r4
   14de0:	mov	r1, r8
   14de4:	mov	r0, r5
   14de8:	ldr	r3, [sp, #8]
   14dec:	bl	14108 <table_set_ulong@@Base>
   14df0:	mov	r6, #0
   14df4:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14df8:	mov	r0, r6
   14dfc:	add	r2, sp, #8
   14e00:	ldr	r1, [pc, #768]	; 15108 <table_cell_from_buffer@@Base+0x5e0>
   14e04:	bl	11c3c <__isoc99_sscanf@plt>
   14e08:	cmp	r0, #1
   14e0c:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14e10:	mov	r2, r4
   14e14:	mov	r1, r8
   14e18:	mov	r0, r5
   14e1c:	ldr	r3, [sp, #8]
   14e20:	bl	1408c <table_set_long@@Base>
   14e24:	mov	r6, #0
   14e28:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14e2c:	mov	r0, r6
   14e30:	add	r2, sp, #8
   14e34:	ldr	r1, [pc, #720]	; 1510c <table_cell_from_buffer@@Base+0x5e4>
   14e38:	bl	11c3c <__isoc99_sscanf@plt>
   14e3c:	cmp	r0, #1
   14e40:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14e44:	ldrh	r3, [sp, #8]
   14e48:	mov	r2, r4
   14e4c:	mov	r1, r8
   14e50:	mov	r0, r5
   14e54:	bl	14010 <table_set_ushort@@Base>
   14e58:	mov	r6, #0
   14e5c:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14e60:	mov	r0, r6
   14e64:	add	r2, sp, #8
   14e68:	ldr	r1, [pc, #672]	; 15110 <table_cell_from_buffer@@Base+0x5e8>
   14e6c:	bl	11c3c <__isoc99_sscanf@plt>
   14e70:	cmp	r0, #1
   14e74:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14e78:	ldrsh	r3, [sp, #8]
   14e7c:	mov	r2, r4
   14e80:	mov	r1, r8
   14e84:	mov	r0, r5
   14e88:	bl	13f94 <table_set_short@@Base>
   14e8c:	mov	r6, #0
   14e90:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14e94:	mov	r0, r6
   14e98:	add	r2, sp, #8
   14e9c:	ldr	r1, [pc, #600]	; 150fc <table_cell_from_buffer@@Base+0x5d4>
   14ea0:	bl	11c3c <__isoc99_sscanf@plt>
   14ea4:	cmp	r0, #1
   14ea8:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14eac:	ldrd	r6, [sp, #8]
   14eb0:	mov	r2, r4
   14eb4:	mov	r1, r8
   14eb8:	strd	r6, [sp]
   14ebc:	mov	r0, r5
   14ec0:	bl	13f0c <table_set_uint64@@Base>
   14ec4:	mov	r6, #0
   14ec8:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14ecc:	mov	r0, r6
   14ed0:	add	r2, sp, #8
   14ed4:	ldr	r1, [pc, #548]	; 15100 <table_cell_from_buffer@@Base+0x5d8>
   14ed8:	bl	11c3c <__isoc99_sscanf@plt>
   14edc:	cmp	r0, #1
   14ee0:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14ee4:	ldrd	r6, [sp, #8]
   14ee8:	mov	r2, r4
   14eec:	mov	r1, r8
   14ef0:	strd	r6, [sp]
   14ef4:	mov	r0, r5
   14ef8:	bl	13e88 <table_set_int64@@Base>
   14efc:	mov	r6, #0
   14f00:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14f04:	mov	r0, r6
   14f08:	add	r2, sp, #8
   14f0c:	ldr	r1, [pc, #512]	; 15114 <table_cell_from_buffer@@Base+0x5ec>
   14f10:	bl	11c3c <__isoc99_sscanf@plt>
   14f14:	cmp	r0, #1
   14f18:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14f1c:	mov	r2, r4
   14f20:	mov	r1, r8
   14f24:	mov	r0, r5
   14f28:	ldr	r3, [sp, #8]
   14f2c:	bl	13e0c <table_set_uint32@@Base>
   14f30:	mov	r6, #0
   14f34:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14f38:	mov	r0, r6
   14f3c:	add	r2, sp, #8
   14f40:	ldr	r1, [pc, #412]	; 150e4 <table_cell_from_buffer@@Base+0x5bc>
   14f44:	bl	11c3c <__isoc99_sscanf@plt>
   14f48:	cmp	r0, #1
   14f4c:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14f50:	mov	r2, r4
   14f54:	mov	r1, r8
   14f58:	mov	r0, r5
   14f5c:	ldr	r3, [sp, #8]
   14f60:	bl	13d90 <table_set_int32@@Base>
   14f64:	mov	r6, #0
   14f68:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14f6c:	mov	r0, r6
   14f70:	add	r2, sp, #8
   14f74:	ldr	r1, [pc, #400]	; 1510c <table_cell_from_buffer@@Base+0x5e4>
   14f78:	bl	11c3c <__isoc99_sscanf@plt>
   14f7c:	cmp	r0, #1
   14f80:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14f84:	ldrh	r3, [sp, #8]
   14f88:	mov	r2, r4
   14f8c:	mov	r1, r8
   14f90:	mov	r0, r5
   14f94:	bl	13d14 <table_set_uint16@@Base>
   14f98:	mov	r6, #0
   14f9c:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14fa0:	mov	r0, r6
   14fa4:	add	r2, sp, #8
   14fa8:	ldr	r1, [pc, #352]	; 15110 <table_cell_from_buffer@@Base+0x5e8>
   14fac:	bl	11c3c <__isoc99_sscanf@plt>
   14fb0:	cmp	r0, #1
   14fb4:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14fb8:	ldrsh	r3, [sp, #8]
   14fbc:	mov	r2, r4
   14fc0:	mov	r1, r8
   14fc4:	mov	r0, r5
   14fc8:	bl	13c98 <table_set_int16@@Base>
   14fcc:	mov	r6, #0
   14fd0:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   14fd4:	mov	r0, r6
   14fd8:	add	r2, sp, #8
   14fdc:	ldr	r1, [pc, #308]	; 15118 <table_cell_from_buffer@@Base+0x5f0>
   14fe0:	bl	11c3c <__isoc99_sscanf@plt>
   14fe4:	cmp	r0, #1
   14fe8:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   14fec:	mov	r2, r4
   14ff0:	mov	r1, r8
   14ff4:	mov	r0, r5
   14ff8:	ldrb	r3, [sp, #8]
   14ffc:	bl	13c1c <table_set_uint8@@Base>
   15000:	mov	r6, #0
   15004:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   15008:	mov	r0, r6
   1500c:	add	r2, sp, #8
   15010:	ldr	r1, [pc, #260]	; 1511c <table_cell_from_buffer@@Base+0x5f4>
   15014:	bl	11c3c <__isoc99_sscanf@plt>
   15018:	cmp	r0, #1
   1501c:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   15020:	ldrsb	r3, [sp, #8]
   15024:	mov	r2, r4
   15028:	mov	r1, r8
   1502c:	mov	r0, r5
   15030:	bl	13ba0 <table_set_int8@@Base>
   15034:	mov	r6, #0
   15038:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   1503c:	mov	r0, r6
   15040:	add	r2, sp, #8
   15044:	ldr	r1, [pc, #200]	; 15114 <table_cell_from_buffer@@Base+0x5ec>
   15048:	bl	11c3c <__isoc99_sscanf@plt>
   1504c:	cmp	r0, #1
   15050:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   15054:	mov	r2, r4
   15058:	mov	r1, r8
   1505c:	mov	r0, r5
   15060:	ldr	r3, [sp, #8]
   15064:	bl	13b24 <table_set_uint@@Base>
   15068:	mov	r6, #0
   1506c:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   15070:	mov	r0, r6
   15074:	add	r2, sp, #8
   15078:	ldr	r1, [pc, #100]	; 150e4 <table_cell_from_buffer@@Base+0x5bc>
   1507c:	bl	11c3c <__isoc99_sscanf@plt>
   15080:	cmp	r0, #1
   15084:	bne	14bcc <table_cell_from_buffer@@Base+0xa4>
   15088:	mov	r2, r4
   1508c:	mov	r1, r8
   15090:	mov	r0, r5
   15094:	ldr	r3, [sp, #8]
   15098:	bl	13aa8 <table_set_int@@Base>
   1509c:	mov	r6, #0
   150a0:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   150a4:	mov	r2, r4
   150a8:	mov	r1, r8
   150ac:	mov	r0, r5
   150b0:	mov	r3, r6
   150b4:	bl	13a2c <table_set_bool@@Base>
   150b8:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   150bc:	mov	r2, r4
   150c0:	mov	r1, r8
   150c4:	mov	r0, r5
   150c8:	ldr	r3, [sp, #8]
   150cc:	bl	145b8 <table_set_ptr@@Base>
   150d0:	mov	r6, #0
   150d4:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   150d8:	mov	r6, #0
   150dc:	b	14bd0 <table_cell_from_buffer@@Base+0xa8>
   150e0:	andeq	r5, r1, ip, lsr r5
   150e4:	andeq	r5, r1, r0, lsl #10
   150e8:	andeq	r5, r1, r8, lsr r5
   150ec:	andeq	r5, r1, r8, lsr #10
   150f0:	andeq	r5, r1, r0, lsr r5
   150f4:	andeq	r5, r1, ip, lsr #10
   150f8:	andeq	r5, r1, r4, lsr r5
   150fc:	andeq	r5, r1, r0, lsl r5
   15100:	andeq	r5, r1, r8, lsl #10
   15104:	andeq	r5, r1, r4, lsr #10
   15108:	andeq	r5, r1, r0, lsr #10
   1510c:	andeq	r5, r1, ip, lsl r5
   15110:	andeq	r5, r1, r8, lsl r5
   15114:	andeq	r5, r1, r4, lsl #10
   15118:	andeq	r5, r1, r8, asr #10
   1511c:	andeq	r5, r1, r0, asr #10

00015120 <table_cell_nullify@@Base>:
   15120:	push	{r4, r5, r6, lr}
   15124:	mov	r5, r2
   15128:	bl	136c4 <table_get_row_ptr@@Base>
   1512c:	ldr	r4, [r0]
   15130:	ldr	r0, [r4, r5, lsl #2]
   15134:	cmp	r0, #0
   15138:	beq	15148 <table_cell_nullify@@Base+0x28>
   1513c:	bl	11bc4 <free@plt>
   15140:	mov	r3, #0
   15144:	str	r3, [r4, r5, lsl #2]
   15148:	mov	r0, #0
   1514c:	pop	{r4, r5, r6, pc}

00015150 <table_get_cell_ptr@@Base>:
   15150:	push	{r4, lr}
   15154:	mov	r4, r2
   15158:	bl	136c4 <table_get_row_ptr@@Base>
   1515c:	ldr	r0, [r0]
   15160:	add	r0, r0, r4, lsl #2
   15164:	pop	{r4, pc}
   15168:	subs	r2, r1, #1
   1516c:	bxeq	lr
   15170:	bcc	15348 <table_get_cell_ptr@@Base+0x1f8>
   15174:	cmp	r0, r1
   15178:	bls	1532c <table_get_cell_ptr@@Base+0x1dc>
   1517c:	tst	r1, r2
   15180:	beq	15338 <table_get_cell_ptr@@Base+0x1e8>
   15184:	clz	r3, r0
   15188:	clz	r2, r1
   1518c:	sub	r3, r2, r3
   15190:	rsbs	r3, r3, #31
   15194:	addne	r3, r3, r3, lsl #1
   15198:	mov	r2, #0
   1519c:	addne	pc, pc, r3, lsl #2
   151a0:	nop			; (mov r0, r0)
   151a4:	cmp	r0, r1, lsl #31
   151a8:	adc	r2, r2, r2
   151ac:	subcs	r0, r0, r1, lsl #31
   151b0:	cmp	r0, r1, lsl #30
   151b4:	adc	r2, r2, r2
   151b8:	subcs	r0, r0, r1, lsl #30
   151bc:	cmp	r0, r1, lsl #29
   151c0:	adc	r2, r2, r2
   151c4:	subcs	r0, r0, r1, lsl #29
   151c8:	cmp	r0, r1, lsl #28
   151cc:	adc	r2, r2, r2
   151d0:	subcs	r0, r0, r1, lsl #28
   151d4:	cmp	r0, r1, lsl #27
   151d8:	adc	r2, r2, r2
   151dc:	subcs	r0, r0, r1, lsl #27
   151e0:	cmp	r0, r1, lsl #26
   151e4:	adc	r2, r2, r2
   151e8:	subcs	r0, r0, r1, lsl #26
   151ec:	cmp	r0, r1, lsl #25
   151f0:	adc	r2, r2, r2
   151f4:	subcs	r0, r0, r1, lsl #25
   151f8:	cmp	r0, r1, lsl #24
   151fc:	adc	r2, r2, r2
   15200:	subcs	r0, r0, r1, lsl #24
   15204:	cmp	r0, r1, lsl #23
   15208:	adc	r2, r2, r2
   1520c:	subcs	r0, r0, r1, lsl #23
   15210:	cmp	r0, r1, lsl #22
   15214:	adc	r2, r2, r2
   15218:	subcs	r0, r0, r1, lsl #22
   1521c:	cmp	r0, r1, lsl #21
   15220:	adc	r2, r2, r2
   15224:	subcs	r0, r0, r1, lsl #21
   15228:	cmp	r0, r1, lsl #20
   1522c:	adc	r2, r2, r2
   15230:	subcs	r0, r0, r1, lsl #20
   15234:	cmp	r0, r1, lsl #19
   15238:	adc	r2, r2, r2
   1523c:	subcs	r0, r0, r1, lsl #19
   15240:	cmp	r0, r1, lsl #18
   15244:	adc	r2, r2, r2
   15248:	subcs	r0, r0, r1, lsl #18
   1524c:	cmp	r0, r1, lsl #17
   15250:	adc	r2, r2, r2
   15254:	subcs	r0, r0, r1, lsl #17
   15258:	cmp	r0, r1, lsl #16
   1525c:	adc	r2, r2, r2
   15260:	subcs	r0, r0, r1, lsl #16
   15264:	cmp	r0, r1, lsl #15
   15268:	adc	r2, r2, r2
   1526c:	subcs	r0, r0, r1, lsl #15
   15270:	cmp	r0, r1, lsl #14
   15274:	adc	r2, r2, r2
   15278:	subcs	r0, r0, r1, lsl #14
   1527c:	cmp	r0, r1, lsl #13
   15280:	adc	r2, r2, r2
   15284:	subcs	r0, r0, r1, lsl #13
   15288:	cmp	r0, r1, lsl #12
   1528c:	adc	r2, r2, r2
   15290:	subcs	r0, r0, r1, lsl #12
   15294:	cmp	r0, r1, lsl #11
   15298:	adc	r2, r2, r2
   1529c:	subcs	r0, r0, r1, lsl #11
   152a0:	cmp	r0, r1, lsl #10
   152a4:	adc	r2, r2, r2
   152a8:	subcs	r0, r0, r1, lsl #10
   152ac:	cmp	r0, r1, lsl #9
   152b0:	adc	r2, r2, r2
   152b4:	subcs	r0, r0, r1, lsl #9
   152b8:	cmp	r0, r1, lsl #8
   152bc:	adc	r2, r2, r2
   152c0:	subcs	r0, r0, r1, lsl #8
   152c4:	cmp	r0, r1, lsl #7
   152c8:	adc	r2, r2, r2
   152cc:	subcs	r0, r0, r1, lsl #7
   152d0:	cmp	r0, r1, lsl #6
   152d4:	adc	r2, r2, r2
   152d8:	subcs	r0, r0, r1, lsl #6
   152dc:	cmp	r0, r1, lsl #5
   152e0:	adc	r2, r2, r2
   152e4:	subcs	r0, r0, r1, lsl #5
   152e8:	cmp	r0, r1, lsl #4
   152ec:	adc	r2, r2, r2
   152f0:	subcs	r0, r0, r1, lsl #4
   152f4:	cmp	r0, r1, lsl #3
   152f8:	adc	r2, r2, r2
   152fc:	subcs	r0, r0, r1, lsl #3
   15300:	cmp	r0, r1, lsl #2
   15304:	adc	r2, r2, r2
   15308:	subcs	r0, r0, r1, lsl #2
   1530c:	cmp	r0, r1, lsl #1
   15310:	adc	r2, r2, r2
   15314:	subcs	r0, r0, r1, lsl #1
   15318:	cmp	r0, r1
   1531c:	adc	r2, r2, r2
   15320:	subcs	r0, r0, r1
   15324:	mov	r0, r2
   15328:	bx	lr
   1532c:	moveq	r0, #1
   15330:	movne	r0, #0
   15334:	bx	lr
   15338:	clz	r2, r1
   1533c:	rsb	r2, r2, #31
   15340:	lsr	r0, r0, r2
   15344:	bx	lr
   15348:	cmp	r0, #0
   1534c:	mvnne	r0, #0
   15350:	b	15374 <table_get_cell_ptr@@Base+0x224>
   15354:	cmp	r1, #0
   15358:	beq	15348 <table_get_cell_ptr@@Base+0x1f8>
   1535c:	push	{r0, r1, lr}
   15360:	bl	15168 <table_get_cell_ptr@@Base+0x18>
   15364:	pop	{r1, r2, lr}
   15368:	mul	r3, r2, r0
   1536c:	sub	r1, r1, r3
   15370:	bx	lr
   15374:	push	{r1, lr}
   15378:	mov	r0, #8
   1537c:	bl	11ba0 <raise@plt>
   15380:	pop	{r1, pc}

00015384 <__libc_csu_init@@Base>:
   15384:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15388:	mov	r7, r0
   1538c:	ldr	r6, [pc, #72]	; 153dc <__libc_csu_init@@Base+0x58>
   15390:	ldr	r5, [pc, #72]	; 153e0 <__libc_csu_init@@Base+0x5c>
   15394:	add	r6, pc, r6
   15398:	add	r5, pc, r5
   1539c:	sub	r6, r6, r5
   153a0:	mov	r8, r1
   153a4:	mov	r9, r2
   153a8:	bl	11b80 <raise@plt-0x20>
   153ac:	asrs	r6, r6, #2
   153b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   153b4:	mov	r4, #0
   153b8:	add	r4, r4, #1
   153bc:	ldr	r3, [r5], #4
   153c0:	mov	r2, r9
   153c4:	mov	r1, r8
   153c8:	mov	r0, r7
   153cc:	blx	r3
   153d0:	cmp	r6, r4
   153d4:	bne	153b8 <__libc_csu_init@@Base+0x34>
   153d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   153dc:	andeq	r0, r1, r4, ror fp
   153e0:	andeq	r0, r1, ip, ror #22

000153e4 <__libc_csu_fini@@Base>:
   153e4:	bx	lr

Disassembly of section .fini:

000153e8 <.fini>:
   153e8:	push	{r3, lr}
   153ec:	pop	{r3, pc}
