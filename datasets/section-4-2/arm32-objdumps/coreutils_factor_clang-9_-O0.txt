
../repos/coreutils/src/factor:     file format elf32-littlearm


Disassembly of section .init:

0001107c <.init>:
   1107c:	push	{r3, lr}
   11080:	bl	113cc <__assert_fail@plt+0x48>
   11084:	pop	{r3, pc}

Disassembly of section .plt:

00011088 <calloc@plt-0x14>:
   11088:	push	{lr}		; (str lr, [sp, #-4]!)
   1108c:	ldr	lr, [pc, #4]	; 11098 <calloc@plt-0x4>
   11090:	add	lr, pc, lr
   11094:	ldr	pc, [lr, #8]!
   11098:	andeq	r7, r3, r8, ror #30

0001109c <calloc@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #225280	; 0x37000
   110a4:	ldr	pc, [ip, #3944]!	; 0xf68

000110a8 <fputs_unlocked@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #225280	; 0x37000
   110b0:	ldr	pc, [ip, #3936]!	; 0xf60

000110b4 <raise@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #225280	; 0x37000
   110bc:	ldr	pc, [ip, #3928]!	; 0xf58

000110c0 <iconv_close@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #225280	; 0x37000
   110c8:	ldr	pc, [ip, #3920]!	; 0xf50

000110cc <iconv@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #225280	; 0x37000
   110d4:	ldr	pc, [ip, #3912]!	; 0xf48

000110d8 <strcmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #225280	; 0x37000
   110e0:	ldr	pc, [ip, #3904]!	; 0xf40

000110e4 <printf@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #225280	; 0x37000
   110ec:	ldr	pc, [ip, #3896]!	; 0xf38

000110f0 <fflush@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #225280	; 0x37000
   110f8:	ldr	pc, [ip, #3888]!	; 0xf30

000110fc <wcwidth@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #225280	; 0x37000
   11104:	ldr	pc, [ip, #3880]!	; 0xf28

00011108 <memmove@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #225280	; 0x37000
   11110:	ldr	pc, [ip, #3872]!	; 0xf20

00011114 <free@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #225280	; 0x37000
   1111c:	ldr	pc, [ip, #3864]!	; 0xf18

00011120 <_exit@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #225280	; 0x37000
   11128:	ldr	pc, [ip, #3856]!	; 0xf10

0001112c <memcpy@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #225280	; 0x37000
   11134:	ldr	pc, [ip, #3848]!	; 0xf08

00011138 <mbsinit@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #225280	; 0x37000
   11140:	ldr	pc, [ip, #3840]!	; 0xf00

00011144 <memcmp@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #225280	; 0x37000
   1114c:	ldr	pc, [ip, #3832]!	; 0xef8

00011150 <getc_unlocked@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #225280	; 0x37000
   11158:	ldr	pc, [ip, #3824]!	; 0xef0

0001115c <strdup@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #225280	; 0x37000
   11164:	ldr	pc, [ip, #3816]!	; 0xee8

00011168 <realloc@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #225280	; 0x37000
   11170:	ldr	pc, [ip, #3808]!	; 0xee0

00011174 <textdomain@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #225280	; 0x37000
   1117c:	ldr	pc, [ip, #3800]!	; 0xed8

00011180 <iswcntrl@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #225280	; 0x37000
   11188:	ldr	pc, [ip, #3792]!	; 0xed0

0001118c <fflush_unlocked@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #225280	; 0x37000
   11194:	ldr	pc, [ip, #3784]!	; 0xec8

00011198 <iswprint@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #225280	; 0x37000
   111a0:	ldr	pc, [ip, #3776]!	; 0xec0

000111a4 <fwrite@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #225280	; 0x37000
   111ac:	ldr	pc, [ip, #3768]!	; 0xeb8

000111b0 <lseek64@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #225280	; 0x37000
   111b8:	ldr	pc, [ip, #3760]!	; 0xeb0

000111bc <__ctype_get_mb_cur_max@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #225280	; 0x37000
   111c4:	ldr	pc, [ip, #3752]!	; 0xea8

000111c8 <__fpending@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #225280	; 0x37000
   111d0:	ldr	pc, [ip, #3744]!	; 0xea0

000111d4 <ferror_unlocked@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #225280	; 0x37000
   111dc:	ldr	pc, [ip, #3736]!	; 0xe98

000111e0 <mbrtowc@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #225280	; 0x37000
   111e8:	ldr	pc, [ip, #3728]!	; 0xe90

000111ec <error@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #225280	; 0x37000
   111f4:	ldr	pc, [ip, #3720]!	; 0xe88

000111f8 <malloc@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #225280	; 0x37000
   11200:	ldr	pc, [ip, #3712]!	; 0xe80

00011204 <iconv_open@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #225280	; 0x37000
   1120c:	ldr	pc, [ip, #3704]!	; 0xe78

00011210 <__libc_start_main@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #225280	; 0x37000
   11218:	ldr	pc, [ip, #3696]!	; 0xe70

0001121c <__freading@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #225280	; 0x37000
   11224:	ldr	pc, [ip, #3688]!	; 0xe68

00011228 <__gmon_start__@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #225280	; 0x37000
   11230:	ldr	pc, [ip, #3680]!	; 0xe60

00011234 <getopt_long@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #225280	; 0x37000
   1123c:	ldr	pc, [ip, #3672]!	; 0xe58

00011240 <__ctype_b_loc@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #225280	; 0x37000
   11248:	ldr	pc, [ip, #3664]!	; 0xe50

0001124c <exit@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #225280	; 0x37000
   11254:	ldr	pc, [ip, #3656]!	; 0xe48

00011258 <iswspace@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #225280	; 0x37000
   11260:	ldr	pc, [ip, #3648]!	; 0xe40

00011264 <gettext@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #225280	; 0x37000
   1126c:	ldr	pc, [ip, #3640]!	; 0xe38

00011270 <strlen@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #225280	; 0x37000
   11278:	ldr	pc, [ip, #3632]!	; 0xe30

0001127c <strchr@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #225280	; 0x37000
   11284:	ldr	pc, [ip, #3624]!	; 0xe28

00011288 <fprintf@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #225280	; 0x37000
   11290:	ldr	pc, [ip, #3616]!	; 0xe20

00011294 <__errno_location@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #225280	; 0x37000
   1129c:	ldr	pc, [ip, #3608]!	; 0xe18

000112a0 <iswalnum@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #225280	; 0x37000
   112a8:	ldr	pc, [ip, #3600]!	; 0xe10

000112ac <__cxa_atexit@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #225280	; 0x37000
   112b4:	ldr	pc, [ip, #3592]!	; 0xe08

000112b8 <memset@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #225280	; 0x37000
   112c0:	ldr	pc, [ip, #3584]!	; 0xe00

000112c4 <write@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #225280	; 0x37000
   112cc:	ldr	pc, [ip, #3576]!	; 0xdf8

000112d0 <fileno@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #225280	; 0x37000
   112d8:	ldr	pc, [ip, #3568]!	; 0xdf0

000112dc <memchr@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #225280	; 0x37000
   112e4:	ldr	pc, [ip, #3560]!	; 0xde8

000112e8 <fclose@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #225280	; 0x37000
   112f0:	ldr	pc, [ip, #3552]!	; 0xde0

000112f4 <strnlen@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #225280	; 0x37000
   112fc:	ldr	pc, [ip, #3544]!	; 0xdd8

00011300 <fseeko64@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #225280	; 0x37000
   11308:	ldr	pc, [ip, #3536]!	; 0xdd0

0001130c <setlocale@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #225280	; 0x37000
   11314:	ldr	pc, [ip, #3528]!	; 0xdc8

00011318 <strrchr@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #225280	; 0x37000
   11320:	ldr	pc, [ip, #3520]!	; 0xdc0

00011324 <nl_langinfo@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #225280	; 0x37000
   1132c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011330 <sprintf@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #225280	; 0x37000
   11338:	ldr	pc, [ip, #3504]!	; 0xdb0

0001133c <bindtextdomain@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #225280	; 0x37000
   11344:	ldr	pc, [ip, #3496]!	; 0xda8

00011348 <isatty@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #225280	; 0x37000
   11350:	ldr	pc, [ip, #3488]!	; 0xda0

00011354 <fputs@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #225280	; 0x37000
   1135c:	ldr	pc, [ip, #3480]!	; 0xd98

00011360 <strncmp@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #225280	; 0x37000
   11368:	ldr	pc, [ip, #3472]!	; 0xd90

0001136c <abort@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #225280	; 0x37000
   11374:	ldr	pc, [ip, #3464]!	; 0xd88

00011378 <putchar_unlocked@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #225280	; 0x37000
   11380:	ldr	pc, [ip, #3456]!	; 0xd80

00011384 <__assert_fail@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #225280	; 0x37000
   1138c:	ldr	pc, [ip, #3448]!	; 0xd78

Disassembly of section .text:

00011390 <.text>:
   11390:	mov	fp, #0
   11394:	mov	lr, #0
   11398:	pop	{r1}		; (ldr r1, [sp], #4)
   1139c:	mov	r2, sp
   113a0:	push	{r2}		; (str r2, [sp, #-4]!)
   113a4:	push	{r0}		; (str r0, [sp, #-4]!)
   113a8:	ldr	ip, [pc, #16]	; 113c0 <__assert_fail@plt+0x3c>
   113ac:	push	{ip}		; (str ip, [sp, #-4]!)
   113b0:	ldr	r0, [pc, #12]	; 113c4 <__assert_fail@plt+0x40>
   113b4:	ldr	r3, [pc, #12]	; 113c8 <__assert_fail@plt+0x44>
   113b8:	bl	11210 <__libc_start_main@plt>
   113bc:	bl	1136c <abort@plt>
   113c0:	andeq	r3, r3, r8, asr #19
   113c4:	andeq	r1, r1, r4, asr #14
   113c8:	andeq	r3, r3, r8, ror #18
   113cc:	ldr	r3, [pc, #20]	; 113e8 <__assert_fail@plt+0x64>
   113d0:	ldr	r2, [pc, #20]	; 113ec <__assert_fail@plt+0x68>
   113d4:	add	r3, pc, r3
   113d8:	ldr	r2, [r3, r2]
   113dc:	cmp	r2, #0
   113e0:	bxeq	lr
   113e4:	b	11228 <__gmon_start__@plt>
   113e8:	andeq	r7, r3, r4, lsr #24
   113ec:	andeq	r0, r0, r8, lsl #2
   113f0:	ldr	r0, [pc, #24]	; 11410 <__assert_fail@plt+0x8c>
   113f4:	ldr	r3, [pc, #24]	; 11414 <__assert_fail@plt+0x90>
   113f8:	cmp	r3, r0
   113fc:	bxeq	lr
   11400:	ldr	r3, [pc, #16]	; 11418 <__assert_fail@plt+0x94>
   11404:	cmp	r3, #0
   11408:	bxeq	lr
   1140c:	bx	r3
   11410:	andeq	r9, r4, r0, ror r1
   11414:	andeq	r9, r4, r0, ror r1
   11418:	andeq	r0, r0, r0
   1141c:	ldr	r0, [pc, #36]	; 11448 <__assert_fail@plt+0xc4>
   11420:	ldr	r1, [pc, #36]	; 1144c <__assert_fail@plt+0xc8>
   11424:	sub	r1, r1, r0
   11428:	asr	r1, r1, #2
   1142c:	add	r1, r1, r1, lsr #31
   11430:	asrs	r1, r1, #1
   11434:	bxeq	lr
   11438:	ldr	r3, [pc, #16]	; 11450 <__assert_fail@plt+0xcc>
   1143c:	cmp	r3, #0
   11440:	bxeq	lr
   11444:	bx	r3
   11448:	andeq	r9, r4, r0, ror r1
   1144c:	andeq	r9, r4, r0, ror r1
   11450:	andeq	r0, r0, r0
   11454:	push	{r4, lr}
   11458:	ldr	r4, [pc, #24]	; 11478 <__assert_fail@plt+0xf4>
   1145c:	ldrb	r3, [r4]
   11460:	cmp	r3, #0
   11464:	popne	{r4, pc}
   11468:	bl	113f0 <__assert_fail@plt+0x6c>
   1146c:	mov	r3, #1
   11470:	strb	r3, [r4]
   11474:	pop	{r4, pc}
   11478:	muleq	r4, r0, r1
   1147c:	b	1141c <__assert_fail@plt+0x98>
   11480:	push	{fp, lr}
   11484:	mov	fp, sp
   11488:	sub	sp, sp, #32
   1148c:	str	r0, [fp, #-4]
   11490:	ldr	r0, [fp, #-4]
   11494:	cmp	r0, #0
   11498:	beq	114e4 <__assert_fail@plt+0x160>
   1149c:	b	114a0 <__assert_fail@plt+0x11c>
   114a0:	movw	r0, #37248	; 0x9180
   114a4:	movt	r0, #4
   114a8:	ldr	r0, [r0]
   114ac:	movw	r1, #14836	; 0x39f4
   114b0:	movt	r1, #3
   114b4:	str	r0, [fp, #-8]
   114b8:	mov	r0, r1
   114bc:	bl	11264 <gettext@plt>
   114c0:	movw	r1, #37288	; 0x91a8
   114c4:	movt	r1, #4
   114c8:	ldr	r2, [r1]
   114cc:	ldr	r1, [fp, #-8]
   114d0:	str	r0, [fp, #-12]
   114d4:	mov	r0, r1
   114d8:	ldr	r1, [fp, #-12]
   114dc:	bl	11288 <fprintf@plt>
   114e0:	b	11590 <__assert_fail@plt+0x20c>
   114e4:	movw	r0, #14875	; 0x3a1b
   114e8:	movt	r0, #3
   114ec:	bl	11264 <gettext@plt>
   114f0:	movw	r1, #37288	; 0x91a8
   114f4:	movt	r1, #4
   114f8:	ldr	r2, [r1]
   114fc:	ldr	r1, [r1]
   11500:	str	r1, [sp, #16]
   11504:	mov	r1, r2
   11508:	ldr	r2, [sp, #16]
   1150c:	bl	110e4 <printf@plt>
   11510:	movw	r1, #14915	; 0x3a43
   11514:	movt	r1, #3
   11518:	str	r0, [sp, #12]
   1151c:	mov	r0, r1
   11520:	bl	11264 <gettext@plt>
   11524:	movw	r1, #37260	; 0x918c
   11528:	movt	r1, #4
   1152c:	ldr	r1, [r1]
   11530:	bl	110a8 <fputs_unlocked@plt>
   11534:	movw	r1, #15050	; 0x3aca
   11538:	movt	r1, #3
   1153c:	str	r0, [sp, #8]
   11540:	mov	r0, r1
   11544:	bl	11264 <gettext@plt>
   11548:	movw	r1, #37260	; 0x918c
   1154c:	movt	r1, #4
   11550:	ldr	r1, [r1]
   11554:	bl	110a8 <fputs_unlocked@plt>
   11558:	movw	r1, #15095	; 0x3af7
   1155c:	movt	r1, #3
   11560:	str	r0, [sp, #4]
   11564:	mov	r0, r1
   11568:	bl	11264 <gettext@plt>
   1156c:	movw	r1, #37260	; 0x918c
   11570:	movt	r1, #4
   11574:	ldr	r1, [r1]
   11578:	bl	110a8 <fputs_unlocked@plt>
   1157c:	movw	r1, #15149	; 0x3b2d
   11580:	movt	r1, #3
   11584:	str	r0, [sp]
   11588:	mov	r0, r1
   1158c:	bl	11598 <__assert_fail@plt+0x214>
   11590:	ldr	r0, [fp, #-4]
   11594:	bl	1124c <exit@plt>
   11598:	push	{fp, lr}
   1159c:	mov	fp, sp
   115a0:	sub	sp, sp, #88	; 0x58
   115a4:	add	r1, sp, #28
   115a8:	movw	r2, #16600	; 0x40d8
   115ac:	movt	r2, #3
   115b0:	str	r0, [fp, #-4]
   115b4:	mov	r0, r1
   115b8:	str	r1, [sp, #12]
   115bc:	mov	r1, r2
   115c0:	movw	r2, #56	; 0x38
   115c4:	bl	1112c <memcpy@plt>
   115c8:	ldr	r0, [fp, #-4]
   115cc:	str	r0, [sp, #24]
   115d0:	ldr	r0, [sp, #12]
   115d4:	str	r0, [sp, #20]
   115d8:	ldr	r0, [sp, #20]
   115dc:	ldr	r0, [r0]
   115e0:	movw	r1, #0
   115e4:	cmp	r0, r1
   115e8:	movw	r0, #0
   115ec:	str	r0, [sp, #8]
   115f0:	beq	1161c <__assert_fail@plt+0x298>
   115f4:	ldr	r0, [fp, #-4]
   115f8:	ldr	r1, [sp, #20]
   115fc:	ldr	r1, [r1]
   11600:	bl	110d8 <strcmp@plt>
   11604:	cmp	r0, #0
   11608:	movw	r0, #0
   1160c:	moveq	r0, #1
   11610:	mvn	r1, #0
   11614:	eor	r0, r0, r1
   11618:	str	r0, [sp, #8]
   1161c:	ldr	r0, [sp, #8]
   11620:	tst	r0, #1
   11624:	beq	11638 <__assert_fail@plt+0x2b4>
   11628:	ldr	r0, [sp, #20]
   1162c:	add	r0, r0, #8
   11630:	str	r0, [sp, #20]
   11634:	b	115d8 <__assert_fail@plt+0x254>
   11638:	ldr	r0, [sp, #20]
   1163c:	ldr	r0, [r0, #4]
   11640:	movw	r1, #0
   11644:	cmp	r0, r1
   11648:	beq	11658 <__assert_fail@plt+0x2d4>
   1164c:	ldr	r0, [sp, #20]
   11650:	ldr	r0, [r0, #4]
   11654:	str	r0, [sp, #24]
   11658:	movw	r0, #15364	; 0x3c04
   1165c:	movt	r0, #3
   11660:	bl	11264 <gettext@plt>
   11664:	movw	r1, #15180	; 0x3b4c
   11668:	movt	r1, #3
   1166c:	movw	r2, #15387	; 0x3c1b
   11670:	movt	r2, #3
   11674:	bl	110e4 <printf@plt>
   11678:	movw	r1, #5
   1167c:	str	r0, [sp, #4]
   11680:	mov	r0, r1
   11684:	movw	r1, #0
   11688:	bl	1130c <setlocale@plt>
   1168c:	str	r0, [sp, #16]
   11690:	ldr	r0, [sp, #16]
   11694:	movw	r1, #0
   11698:	cmp	r0, r1
   1169c:	beq	116d8 <__assert_fail@plt+0x354>
   116a0:	ldr	r0, [sp, #16]
   116a4:	movw	r1, #15427	; 0x3c43
   116a8:	movt	r1, #3
   116ac:	movw	r2, #3
   116b0:	bl	11360 <strncmp@plt>
   116b4:	cmp	r0, #0
   116b8:	beq	116d8 <__assert_fail@plt+0x354>
   116bc:	movw	r0, #15431	; 0x3c47
   116c0:	movt	r0, #3
   116c4:	bl	11264 <gettext@plt>
   116c8:	movw	r1, #37260	; 0x918c
   116cc:	movt	r1, #4
   116d0:	ldr	r1, [r1]
   116d4:	bl	110a8 <fputs_unlocked@plt>
   116d8:	movw	r0, #15502	; 0x3c8e
   116dc:	movt	r0, #3
   116e0:	bl	11264 <gettext@plt>
   116e4:	ldr	r2, [fp, #-4]
   116e8:	movw	r1, #15387	; 0x3c1b
   116ec:	movt	r1, #3
   116f0:	bl	110e4 <printf@plt>
   116f4:	movw	r1, #15529	; 0x3ca9
   116f8:	movt	r1, #3
   116fc:	str	r0, [sp]
   11700:	mov	r0, r1
   11704:	bl	11264 <gettext@plt>
   11708:	ldr	r1, [sp, #24]
   1170c:	ldr	r2, [sp, #24]
   11710:	ldr	r3, [fp, #-4]
   11714:	cmp	r2, r3
   11718:	movw	r2, #0
   1171c:	moveq	r2, #1
   11720:	tst	r2, #1
   11724:	movw	r2, #15049	; 0x3ac9
   11728:	movt	r2, #3
   1172c:	movw	r3, #15297	; 0x3bc1
   11730:	movt	r3, #3
   11734:	movne	r2, r3
   11738:	bl	110e4 <printf@plt>
   1173c:	mov	sp, fp
   11740:	pop	{fp, pc}
   11744:	push	{r4, sl, fp, lr}
   11748:	add	fp, sp, #8
   1174c:	sub	sp, sp, #80	; 0x50
   11750:	movw	r2, #0
   11754:	str	r2, [fp, #-12]
   11758:	str	r0, [fp, #-16]
   1175c:	str	r1, [fp, #-20]	; 0xffffffec
   11760:	ldr	r0, [fp, #-20]	; 0xffffffec
   11764:	ldr	r0, [r0]
   11768:	bl	27e20 <__assert_fail@plt+0x16a9c>
   1176c:	movw	r0, #6
   11770:	movw	r1, #15049	; 0x3ac9
   11774:	movt	r1, #3
   11778:	bl	1130c <setlocale@plt>
   1177c:	movw	r1, #15184	; 0x3b50
   11780:	movt	r1, #3
   11784:	str	r0, [fp, #-36]	; 0xffffffdc
   11788:	mov	r0, r1
   1178c:	movw	r1, #15156	; 0x3b34
   11790:	movt	r1, #3
   11794:	bl	1133c <bindtextdomain@plt>
   11798:	movw	r1, #15184	; 0x3b50
   1179c:	movt	r1, #3
   117a0:	str	r0, [fp, #-40]	; 0xffffffd8
   117a4:	mov	r0, r1
   117a8:	bl	11174 <textdomain@plt>
   117ac:	str	r0, [sp, #44]	; 0x2c
   117b0:	bl	119a8 <__assert_fail@plt+0x624>
   117b4:	movw	r0, #43468	; 0xa9cc
   117b8:	movt	r0, #1
   117bc:	bl	339cc <__assert_fail@plt+0x22648>
   117c0:	movw	r1, #6636	; 0x19ec
   117c4:	movt	r1, #1
   117c8:	str	r0, [sp, #40]	; 0x28
   117cc:	mov	r0, r1
   117d0:	bl	339cc <__assert_fail@plt+0x22648>
   117d4:	ldr	r0, [fp, #-16]
   117d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   117dc:	movw	r2, #15049	; 0x3ac9
   117e0:	movt	r2, #3
   117e4:	movw	r3, #16536	; 0x4098
   117e8:	movt	r3, #3
   117ec:	movw	ip, #0
   117f0:	str	ip, [sp]
   117f4:	bl	11234 <getopt_long@plt>
   117f8:	str	r0, [fp, #-24]	; 0xffffffe8
   117fc:	cmn	r0, #1
   11800:	beq	11904 <__assert_fail@plt+0x580>
   11804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11808:	cmn	r0, #3
   1180c:	str	r0, [sp, #36]	; 0x24
   11810:	beq	11854 <__assert_fail@plt+0x4d0>
   11814:	b	11818 <__assert_fail@plt+0x494>
   11818:	ldr	r0, [sp, #36]	; 0x24
   1181c:	cmn	r0, #2
   11820:	beq	1184c <__assert_fail@plt+0x4c8>
   11824:	b	11828 <__assert_fail@plt+0x4a4>
   11828:	ldr	r0, [sp, #36]	; 0x24
   1182c:	cmp	r0, #256	; 0x100
   11830:	bne	118f8 <__assert_fail@plt+0x574>
   11834:	b	11838 <__assert_fail@plt+0x4b4>
   11838:	movw	r0, #37268	; 0x9194
   1183c:	movt	r0, #4
   11840:	movw	r1, #1
   11844:	strb	r1, [r0]
   11848:	b	11900 <__assert_fail@plt+0x57c>
   1184c:	movw	r0, #0
   11850:	bl	11480 <__assert_fail@plt+0xfc>
   11854:	movw	r0, #37260	; 0x918c
   11858:	movt	r0, #4
   1185c:	ldr	r0, [r0]
   11860:	movw	r1, #37148	; 0x911c
   11864:	movt	r1, #4
   11868:	ldr	r3, [r1]
   1186c:	movw	r1, #15205	; 0x3b65
   11870:	movt	r1, #3
   11874:	str	r0, [sp, #32]
   11878:	mov	r0, r1
   1187c:	movw	r1, #15223	; 0x3b77
   11880:	movt	r1, #3
   11884:	str	r3, [sp, #28]
   11888:	bl	28510 <__assert_fail@plt+0x1718c>
   1188c:	movw	r1, #15242	; 0x3b8a
   11890:	movt	r1, #3
   11894:	str	r0, [sp, #24]
   11898:	mov	r0, r1
   1189c:	movw	r1, #15255	; 0x3b97
   118a0:	movt	r1, #3
   118a4:	bl	28510 <__assert_fail@plt+0x1718c>
   118a8:	ldr	r1, [sp, #32]
   118ac:	str	r0, [sp, #20]
   118b0:	mov	r0, r1
   118b4:	movw	r1, #15149	; 0x3b2d
   118b8:	movt	r1, #3
   118bc:	movw	r2, #15180	; 0x3b4c
   118c0:	movt	r2, #3
   118c4:	ldr	r3, [sp, #28]
   118c8:	movw	ip, #15194	; 0x3b5a
   118cc:	movt	ip, #3
   118d0:	str	ip, [sp]
   118d4:	ldr	ip, [sp, #24]
   118d8:	str	ip, [sp, #4]
   118dc:	ldr	lr, [sp, #20]
   118e0:	str	lr, [sp, #8]
   118e4:	movw	r4, #0
   118e8:	str	r4, [sp, #12]
   118ec:	bl	2bfdc <__assert_fail@plt+0x1ac58>
   118f0:	movw	r0, #0
   118f4:	bl	1124c <exit@plt>
   118f8:	movw	r0, #1
   118fc:	bl	11480 <__assert_fail@plt+0xfc>
   11900:	b	117d4 <__assert_fail@plt+0x450>
   11904:	ldr	r0, [fp, #-16]
   11908:	movw	r1, #37240	; 0x9178
   1190c:	movt	r1, #4
   11910:	ldr	r1, [r1]
   11914:	cmp	r0, r1
   11918:	bgt	1192c <__assert_fail@plt+0x5a8>
   1191c:	bl	11a7c <__assert_fail@plt+0x6f8>
   11920:	and	r0, r0, #1
   11924:	strb	r0, [fp, #-25]	; 0xffffffe7
   11928:	b	11990 <__assert_fail@plt+0x60c>
   1192c:	movw	r0, #1
   11930:	strb	r0, [fp, #-25]	; 0xffffffe7
   11934:	movw	r0, #37240	; 0x9178
   11938:	movt	r0, #4
   1193c:	ldr	r0, [r0]
   11940:	str	r0, [fp, #-32]	; 0xffffffe0
   11944:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11948:	ldr	r1, [fp, #-16]
   1194c:	cmp	r0, r1
   11950:	bge	1198c <__assert_fail@plt+0x608>
   11954:	ldr	r0, [fp, #-20]	; 0xffffffec
   11958:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1195c:	add	r0, r0, r1, lsl #2
   11960:	ldr	r0, [r0]
   11964:	bl	11b14 <__assert_fail@plt+0x790>
   11968:	tst	r0, #1
   1196c:	bne	11978 <__assert_fail@plt+0x5f4>
   11970:	movw	r0, #0
   11974:	strb	r0, [fp, #-25]	; 0xffffffe7
   11978:	b	1197c <__assert_fail@plt+0x5f8>
   1197c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11980:	add	r0, r0, #1
   11984:	str	r0, [fp, #-32]	; 0xffffffe0
   11988:	b	11944 <__assert_fail@plt+0x5c0>
   1198c:	b	11990 <__assert_fail@plt+0x60c>
   11990:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11994:	tst	r0, #1
   11998:	movw	r0, #0
   1199c:	moveq	r0, #1
   119a0:	sub	sp, fp, #8
   119a4:	pop	{r4, sl, fp, pc}
   119a8:	push	{fp, lr}
   119ac:	mov	fp, sp
   119b0:	movw	r0, #37272	; 0x9198
   119b4:	movt	r0, #4
   119b8:	ldr	r0, [r0]
   119bc:	movw	r1, #0
   119c0:	cmp	r0, r1
   119c4:	beq	119cc <__assert_fail@plt+0x648>
   119c8:	b	119e8 <__assert_fail@plt+0x664>
   119cc:	movw	r0, #1024	; 0x400
   119d0:	bl	2c164 <__assert_fail@plt+0x1ade0>
   119d4:	movw	r1, #37272	; 0x9198
   119d8:	movt	r1, #4
   119dc:	str	r0, [r1]
   119e0:	ldr	r0, [r1]
   119e4:	str	r0, [r1, #4]
   119e8:	pop	{fp, pc}
   119ec:	push	{fp, lr}
   119f0:	mov	fp, sp
   119f4:	sub	sp, sp, #16
   119f8:	movw	r0, #37272	; 0x9198
   119fc:	movt	r0, #4
   11a00:	ldr	r1, [r0, #4]
   11a04:	ldr	r2, [r0]
   11a08:	sub	r1, r1, r2
   11a0c:	str	r1, [fp, #-4]
   11a10:	ldr	r1, [r0]
   11a14:	ldr	r2, [fp, #-4]
   11a18:	movw	r0, #1
   11a1c:	bl	1ab2c <__assert_fail@plt+0x97a8>
   11a20:	ldr	r1, [fp, #-4]
   11a24:	cmp	r0, r1
   11a28:	beq	11a64 <__assert_fail@plt+0x6e0>
   11a2c:	bl	11294 <__errno_location@plt>
   11a30:	ldr	r1, [r0]
   11a34:	movw	r0, #15580	; 0x3cdc
   11a38:	movt	r0, #3
   11a3c:	str	r1, [sp, #8]
   11a40:	bl	11264 <gettext@plt>
   11a44:	movw	r1, #1
   11a48:	str	r0, [sp, #4]
   11a4c:	mov	r0, r1
   11a50:	ldr	r1, [sp, #8]
   11a54:	movw	r2, #28953	; 0x7119
   11a58:	movt	r2, #3
   11a5c:	ldr	r3, [sp, #4]
   11a60:	bl	111ec <error@plt>
   11a64:	movw	r0, #37272	; 0x9198
   11a68:	movt	r0, #4
   11a6c:	ldr	r1, [r0]
   11a70:	str	r1, [r0, #4]
   11a74:	mov	sp, fp
   11a78:	pop	{fp, pc}
   11a7c:	push	{fp, lr}
   11a80:	mov	fp, sp
   11a84:	sub	sp, sp, #16
   11a88:	movw	r0, #1
   11a8c:	strb	r0, [fp, #-1]
   11a90:	add	r0, sp, #4
   11a94:	bl	2aeec <__assert_fail@plt+0x19b68>
   11a98:	movw	r0, #37256	; 0x9188
   11a9c:	movt	r0, #4
   11aa0:	ldr	r0, [r0]
   11aa4:	movw	r1, #15612	; 0x3cfc
   11aa8:	movt	r1, #3
   11aac:	movw	r2, #3
   11ab0:	add	r3, sp, #4
   11ab4:	bl	2af10 <__assert_fail@plt+0x19b8c>
   11ab8:	str	r0, [sp]
   11abc:	ldr	r0, [sp]
   11ac0:	cmn	r0, #1
   11ac4:	bne	11acc <__assert_fail@plt+0x748>
   11ac8:	b	11afc <__assert_fail@plt+0x778>
   11acc:	ldr	r0, [sp, #8]
   11ad0:	bl	11b14 <__assert_fail@plt+0x790>
   11ad4:	and	r0, r0, #1
   11ad8:	ldrb	r1, [fp, #-1]
   11adc:	and	r1, r1, #1
   11ae0:	and	r0, r1, r0
   11ae4:	cmp	r0, #0
   11ae8:	movw	r0, #0
   11aec:	movne	r0, #1
   11af0:	and	r0, r0, #1
   11af4:	strb	r0, [fp, #-1]
   11af8:	b	11a98 <__assert_fail@plt+0x714>
   11afc:	ldr	r0, [sp, #8]
   11b00:	bl	1aaec <__assert_fail@plt+0x9768>
   11b04:	ldrb	r0, [fp, #-1]
   11b08:	and	r0, r0, #1
   11b0c:	mov	sp, fp
   11b10:	pop	{fp, pc}
   11b14:	push	{fp, lr}
   11b18:	mov	fp, sp
   11b1c:	sub	sp, sp, #104	; 0x68
   11b20:	str	r0, [fp, #-8]
   11b24:	ldr	r0, [fp, #-8]
   11b28:	str	r0, [fp, #-12]
   11b2c:	ldr	r0, [fp, #-12]
   11b30:	ldrb	r0, [r0]
   11b34:	cmp	r0, #32
   11b38:	bne	11b4c <__assert_fail@plt+0x7c8>
   11b3c:	ldr	r0, [fp, #-12]
   11b40:	add	r0, r0, #1
   11b44:	str	r0, [fp, #-12]
   11b48:	b	11b2c <__assert_fail@plt+0x7a8>
   11b4c:	ldr	r0, [fp, #-12]
   11b50:	mov	r1, r0
   11b54:	ldrb	r2, [r1], #1
   11b58:	cmp	r2, #43	; 0x2b
   11b5c:	moveq	r0, r1
   11b60:	str	r0, [fp, #-12]
   11b64:	ldr	r2, [fp, #-12]
   11b68:	sub	r0, fp, #24
   11b6c:	sub	r1, fp, #32
   11b70:	bl	11dc0 <__assert_fail@plt+0xa3c>
   11b74:	str	r0, [fp, #-36]	; 0xffffffdc
   11b78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b7c:	cmp	r0, #0
   11b80:	str	r0, [sp, #32]
   11b84:	beq	11b9c <__assert_fail@plt+0x818>
   11b88:	b	11b8c <__assert_fail@plt+0x808>
   11b8c:	ldr	r0, [sp, #32]
   11b90:	cmp	r0, #1
   11b94:	beq	11c0c <__assert_fail@plt+0x888>
   11b98:	b	11c10 <__assert_fail@plt+0x88c>
   11b9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ba0:	bic	r1, r0, #-2147483648	; 0x80000000
   11ba4:	teq	r1, r0
   11ba8:	bne	11c08 <__assert_fail@plt+0x884>
   11bac:	b	11bb0 <__assert_fail@plt+0x82c>
   11bb0:	b	11bb4 <__assert_fail@plt+0x830>
   11bb4:	movw	r0, #37268	; 0x9194
   11bb8:	movt	r0, #4
   11bbc:	ldrb	r0, [r0]
   11bc0:	tst	r0, #1
   11bc4:	beq	11be0 <__assert_fail@plt+0x85c>
   11bc8:	movw	r0, #37248	; 0x9180
   11bcc:	movt	r0, #4
   11bd0:	ldr	r0, [r0]
   11bd4:	movw	r1, #15616	; 0x3d00
   11bd8:	movt	r1, #3
   11bdc:	bl	11288 <fprintf@plt>
   11be0:	b	11be4 <__assert_fail@plt+0x860>
   11be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11be8:	ldr	r1, [fp, #-20]	; 0xffffffec
   11bec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11bf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11bf4:	bl	1200c <__assert_fail@plt+0xc88>
   11bf8:	movw	r0, #1
   11bfc:	and	r0, r0, #1
   11c00:	strb	r0, [fp, #-1]
   11c04:	b	11db0 <__assert_fail@plt+0xa2c>
   11c08:	b	11c54 <__assert_fail@plt+0x8d0>
   11c0c:	b	11c54 <__assert_fail@plt+0x8d0>
   11c10:	movw	r0, #15653	; 0x3d25
   11c14:	movt	r0, #3
   11c18:	bl	11264 <gettext@plt>
   11c1c:	ldr	r1, [fp, #-8]
   11c20:	str	r0, [sp, #28]
   11c24:	mov	r0, r1
   11c28:	bl	2adb4 <__assert_fail@plt+0x19a30>
   11c2c:	movw	r1, #0
   11c30:	str	r0, [sp, #24]
   11c34:	mov	r0, r1
   11c38:	ldr	r2, [sp, #28]
   11c3c:	ldr	r3, [sp, #24]
   11c40:	bl	111ec <error@plt>
   11c44:	movw	r0, #0
   11c48:	and	r0, r0, #1
   11c4c:	strb	r0, [fp, #-1]
   11c50:	b	11db0 <__assert_fail@plt+0xa2c>
   11c54:	b	11c58 <__assert_fail@plt+0x8d4>
   11c58:	movw	r0, #37268	; 0x9194
   11c5c:	movt	r0, #4
   11c60:	ldrb	r0, [r0]
   11c64:	tst	r0, #1
   11c68:	beq	11c84 <__assert_fail@plt+0x900>
   11c6c:	movw	r0, #37248	; 0x9180
   11c70:	movt	r0, #4
   11c74:	ldr	r0, [r0]
   11c78:	movw	r1, #15688	; 0x3d48
   11c7c:	movt	r1, #3
   11c80:	bl	11288 <fprintf@plt>
   11c84:	b	11c88 <__assert_fail@plt+0x904>
   11c88:	sub	r0, fp, #48	; 0x30
   11c8c:	ldr	r1, [fp, #-12]
   11c90:	movw	r2, #10
   11c94:	bl	25bb8 <__assert_fail@plt+0x14834>
   11c98:	sub	r2, fp, #48	; 0x30
   11c9c:	movw	r1, #37260	; 0x918c
   11ca0:	movt	r1, #4
   11ca4:	ldr	r1, [r1]
   11ca8:	str	r0, [sp, #20]
   11cac:	mov	r0, r1
   11cb0:	movw	r1, #10
   11cb4:	bl	25bf0 <__assert_fail@plt+0x1486c>
   11cb8:	movw	r1, #58	; 0x3a
   11cbc:	str	r0, [sp, #16]
   11cc0:	mov	r0, r1
   11cc4:	bl	11378 <putchar_unlocked@plt>
   11cc8:	sub	r1, fp, #48	; 0x30
   11ccc:	str	r0, [sp, #12]
   11cd0:	mov	r0, r1
   11cd4:	add	r1, sp, #44	; 0x2c
   11cd8:	bl	1213c <__assert_fail@plt+0xdb8>
   11cdc:	movw	r0, #0
   11ce0:	str	r0, [sp, #40]	; 0x28
   11ce4:	ldr	r0, [sp, #40]	; 0x28
   11ce8:	ldr	r1, [sp, #52]	; 0x34
   11cec:	cmp	r0, r1
   11cf0:	bcs	11d74 <__assert_fail@plt+0x9f0>
   11cf4:	movw	r0, #0
   11cf8:	str	r0, [sp, #36]	; 0x24
   11cfc:	ldr	r0, [sp, #36]	; 0x24
   11d00:	ldr	r1, [sp, #48]	; 0x30
   11d04:	ldr	r2, [sp, #40]	; 0x28
   11d08:	add	r1, r1, r2, lsl #2
   11d0c:	ldr	r1, [r1]
   11d10:	cmp	r0, r1
   11d14:	bcs	11d60 <__assert_fail@plt+0x9dc>
   11d18:	movw	r0, #32
   11d1c:	bl	11378 <putchar_unlocked@plt>
   11d20:	movw	r1, #37260	; 0x918c
   11d24:	movt	r1, #4
   11d28:	ldr	r1, [r1]
   11d2c:	ldr	r2, [sp, #44]	; 0x2c
   11d30:	ldr	r3, [sp, #40]	; 0x28
   11d34:	movw	ip, #12
   11d38:	mul	r3, r3, ip
   11d3c:	add	r2, r2, r3
   11d40:	str	r0, [sp, #8]
   11d44:	mov	r0, r1
   11d48:	movw	r1, #10
   11d4c:	bl	25bf0 <__assert_fail@plt+0x1486c>
   11d50:	ldr	r0, [sp, #36]	; 0x24
   11d54:	add	r0, r0, #1
   11d58:	str	r0, [sp, #36]	; 0x24
   11d5c:	b	11cfc <__assert_fail@plt+0x978>
   11d60:	b	11d64 <__assert_fail@plt+0x9e0>
   11d64:	ldr	r0, [sp, #40]	; 0x28
   11d68:	add	r0, r0, #1
   11d6c:	str	r0, [sp, #40]	; 0x28
   11d70:	b	11ce4 <__assert_fail@plt+0x960>
   11d74:	add	r0, sp, #44	; 0x2c
   11d78:	bl	121fc <__assert_fail@plt+0xe78>
   11d7c:	sub	r0, fp, #48	; 0x30
   11d80:	bl	1d384 <__assert_fail@plt+0xc000>
   11d84:	movw	r0, #10
   11d88:	bl	11378 <putchar_unlocked@plt>
   11d8c:	movw	r1, #37260	; 0x918c
   11d90:	movt	r1, #4
   11d94:	ldr	r1, [r1]
   11d98:	str	r0, [sp, #4]
   11d9c:	mov	r0, r1
   11da0:	bl	1118c <fflush_unlocked@plt>
   11da4:	movw	r1, #1
   11da8:	and	r1, r1, #1
   11dac:	strb	r1, [fp, #-1]
   11db0:	ldrb	r0, [fp, #-1]
   11db4:	and	r0, r0, #1
   11db8:	mov	sp, fp
   11dbc:	pop	{fp, pc}
   11dc0:	push	{r4, sl, fp, lr}
   11dc4:	add	fp, sp, #8
   11dc8:	sub	sp, sp, #48	; 0x30
   11dcc:	str	r0, [fp, #-12]
   11dd0:	str	r1, [fp, #-16]
   11dd4:	str	r2, [fp, #-20]	; 0xffffffec
   11dd8:	mov	r0, #0
   11ddc:	str	r0, [sp, #28]
   11de0:	str	r0, [sp, #24]
   11de4:	str	r0, [sp, #20]
   11de8:	str	r0, [sp, #16]
   11dec:	movw	r0, #4
   11df0:	str	r0, [sp, #12]
   11df4:	ldr	r0, [fp, #-20]	; 0xffffffec
   11df8:	str	r0, [sp, #8]
   11dfc:	ldr	r0, [sp, #8]
   11e00:	add	r1, r0, #1
   11e04:	str	r1, [sp, #8]
   11e08:	ldrb	r0, [r0]
   11e0c:	str	r0, [sp, #4]
   11e10:	ldr	r0, [sp, #4]
   11e14:	cmp	r0, #0
   11e18:	bne	11e20 <__assert_fail@plt+0xa9c>
   11e1c:	b	11e5c <__assert_fail@plt+0xad8>
   11e20:	ldr	r0, [sp, #4]
   11e24:	sub	r0, r0, #48	; 0x30
   11e28:	cmp	r0, #9
   11e2c:	movw	r0, #0
   11e30:	movls	r0, #1
   11e34:	mvn	r1, #0
   11e38:	eor	r0, r0, r1
   11e3c:	tst	r0, #1
   11e40:	beq	11e50 <__assert_fail@plt+0xacc>
   11e44:	movw	r0, #4
   11e48:	str	r0, [sp, #12]
   11e4c:	b	11e5c <__assert_fail@plt+0xad8>
   11e50:	movw	r0, #0
   11e54:	str	r0, [sp, #12]
   11e58:	b	11dfc <__assert_fail@plt+0xa78>
   11e5c:	b	11e60 <__assert_fail@plt+0xadc>
   11e60:	ldr	r0, [sp, #12]
   11e64:	cmp	r0, #0
   11e68:	bne	11fd8 <__assert_fail@plt+0xc54>
   11e6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e70:	add	r1, r0, #1
   11e74:	str	r1, [fp, #-20]	; 0xffffffec
   11e78:	ldrb	r0, [r0]
   11e7c:	str	r0, [sp]
   11e80:	ldr	r0, [sp]
   11e84:	cmp	r0, #0
   11e88:	bne	11e90 <__assert_fail@plt+0xb0c>
   11e8c:	b	11fd8 <__assert_fail@plt+0xc54>
   11e90:	ldr	r0, [sp]
   11e94:	sub	r0, r0, #48	; 0x30
   11e98:	str	r0, [sp]
   11e9c:	ldr	r0, [sp, #24]
   11ea0:	ldr	r1, [sp, #28]
   11ea4:	movw	r2, #39322	; 0x999a
   11ea8:	movt	r2, #39321	; 0x9999
   11eac:	subs	r0, r0, r2
   11eb0:	movw	r2, #39321	; 0x9999
   11eb4:	movt	r2, #6553	; 0x1999
   11eb8:	sbcs	r1, r1, r2
   11ebc:	bcc	11ed0 <__assert_fail@plt+0xb4c>
   11ec0:	b	11ec4 <__assert_fail@plt+0xb40>
   11ec4:	movw	r0, #1
   11ec8:	str	r0, [sp, #12]
   11ecc:	b	11fd8 <__assert_fail@plt+0xc54>
   11ed0:	ldr	r0, [sp, #24]
   11ed4:	ldr	r1, [sp, #28]
   11ed8:	mov	r2, #10
   11edc:	umull	r0, r3, r0, r2
   11ee0:	add	r1, r1, r1, lsl #2
   11ee4:	add	r1, r3, r1, lsl #1
   11ee8:	str	r0, [sp, #24]
   11eec:	str	r1, [sp, #28]
   11ef0:	ldr	r0, [sp, #20]
   11ef4:	lsr	r1, r0, #29
   11ef8:	add	r0, r1, r0, lsr #31
   11efc:	str	r0, [fp, #-24]	; 0xffffffe8
   11f00:	ldr	r0, [sp, #16]
   11f04:	ldr	r1, [sp, #20]
   11f08:	umull	r3, ip, r0, r2
   11f0c:	add	lr, r1, r1, lsl #2
   11f10:	add	ip, ip, lr, lsl #1
   11f14:	lsl	r1, r1, #1
   11f18:	orr	r1, r1, r0, lsr #31
   11f1c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11f20:	add	r4, lr, #1
   11f24:	subs	r0, r3, r0, lsl #1
   11f28:	sbcs	r1, ip, r1
   11f2c:	movcc	lr, r4
   11f30:	str	lr, [fp, #-24]	; 0xffffffe8
   11f34:	ldr	r3, [sp, #16]
   11f38:	ldr	ip, [sp, #20]
   11f3c:	umull	r2, r3, r3, r2
   11f40:	add	ip, ip, ip, lsl #2
   11f44:	add	r3, r3, ip, lsl #1
   11f48:	str	r2, [sp, #16]
   11f4c:	str	r3, [sp, #20]
   11f50:	ldr	r2, [sp]
   11f54:	ldr	r3, [sp, #16]
   11f58:	ldr	ip, [sp, #20]
   11f5c:	adds	r2, r3, r2
   11f60:	adc	r3, ip, #0
   11f64:	str	r2, [sp, #16]
   11f68:	str	r3, [sp, #20]
   11f6c:	ldr	r2, [sp, #16]
   11f70:	ldr	r3, [sp, #20]
   11f74:	ldr	ip, [sp]
   11f78:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11f7c:	add	r4, lr, #1
   11f80:	subs	r2, r2, ip
   11f84:	sbcs	r3, r3, #0
   11f88:	movcc	lr, r4
   11f8c:	str	lr, [fp, #-24]	; 0xffffffe8
   11f90:	ldr	ip, [fp, #-24]	; 0xffffffe8
   11f94:	ldr	lr, [sp, #24]
   11f98:	ldr	r4, [sp, #28]
   11f9c:	adds	ip, lr, ip
   11fa0:	adc	lr, r4, #0
   11fa4:	str	ip, [sp, #24]
   11fa8:	str	lr, [sp, #28]
   11fac:	ldr	ip, [sp, #24]
   11fb0:	ldr	lr, [sp, #28]
   11fb4:	ldr	r4, [fp, #-24]	; 0xffffffe8
   11fb8:	subs	ip, ip, r4
   11fbc:	sbcs	lr, lr, #0
   11fc0:	bcs	11fd4 <__assert_fail@plt+0xc50>
   11fc4:	b	11fc8 <__assert_fail@plt+0xc44>
   11fc8:	movw	r0, #1
   11fcc:	str	r0, [sp, #12]
   11fd0:	b	11fd8 <__assert_fail@plt+0xc54>
   11fd4:	b	11e60 <__assert_fail@plt+0xadc>
   11fd8:	ldr	r0, [sp, #24]
   11fdc:	ldr	r1, [sp, #28]
   11fe0:	ldr	r2, [fp, #-12]
   11fe4:	str	r1, [r2, #4]
   11fe8:	str	r0, [r2]
   11fec:	ldr	r0, [sp, #16]
   11ff0:	ldr	r1, [sp, #20]
   11ff4:	ldr	r2, [fp, #-16]
   11ff8:	str	r1, [r2, #4]
   11ffc:	str	r0, [r2]
   12000:	ldr	r0, [sp, #12]
   12004:	sub	sp, fp, #8
   12008:	pop	{r4, sl, fp, pc}
   1200c:	push	{r4, r5, fp, lr}
   12010:	add	fp, sp, #8
   12014:	sub	sp, sp, #288	; 0x120
   12018:	str	r0, [fp, #-16]
   1201c:	str	r1, [fp, #-12]
   12020:	str	r3, [fp, #-20]	; 0xffffffec
   12024:	str	r2, [fp, #-24]	; 0xffffffe8
   12028:	ldr	r0, [fp, #-16]
   1202c:	ldr	r1, [fp, #-12]
   12030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12034:	ldr	r3, [fp, #-20]	; 0xffffffec
   12038:	bl	12274 <__assert_fail@plt+0xef0>
   1203c:	mov	r0, #58	; 0x3a
   12040:	bl	12558 <__assert_fail@plt+0x11d4>
   12044:	ldr	r0, [fp, #-16]
   12048:	ldr	r1, [fp, #-12]
   1204c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12050:	ldr	r3, [fp, #-20]	; 0xffffffec
   12054:	mov	ip, sp
   12058:	add	lr, sp, #16
   1205c:	str	lr, [ip]
   12060:	bl	126e4 <__assert_fail@plt+0x1360>
   12064:	movw	r0, #0
   12068:	str	r0, [sp, #12]
   1206c:	ldr	r0, [sp, #12]
   12070:	ldrb	r1, [sp, #266]	; 0x10a
   12074:	cmp	r0, r1
   12078:	bcs	120f4 <__assert_fail@plt+0xd70>
   1207c:	movw	r0, #0
   12080:	str	r0, [sp, #8]
   12084:	ldr	r0, [sp, #8]
   12088:	add	r1, sp, #16
   1208c:	add	r1, r1, #224	; 0xe0
   12090:	ldr	r2, [sp, #12]
   12094:	add	r1, r1, r2
   12098:	ldrb	r1, [r1]
   1209c:	cmp	r0, r1
   120a0:	bcs	120e0 <__assert_fail@plt+0xd5c>
   120a4:	mov	r0, #32
   120a8:	bl	12558 <__assert_fail@plt+0x11d4>
   120ac:	ldr	r0, [sp, #12]
   120b0:	add	r1, sp, #16
   120b4:	add	r0, r1, r0, lsl #3
   120b8:	ldr	r2, [r0, #16]
   120bc:	ldr	r3, [r0, #20]
   120c0:	mov	r0, #0
   120c4:	str	r0, [sp, #4]
   120c8:	ldr	r1, [sp, #4]
   120cc:	bl	12274 <__assert_fail@plt+0xef0>
   120d0:	ldr	r0, [sp, #8]
   120d4:	add	r0, r0, #1
   120d8:	str	r0, [sp, #8]
   120dc:	b	12084 <__assert_fail@plt+0xd00>
   120e0:	b	120e4 <__assert_fail@plt+0xd60>
   120e4:	ldr	r0, [sp, #12]
   120e8:	add	r0, r0, #1
   120ec:	str	r0, [sp, #12]
   120f0:	b	1206c <__assert_fail@plt+0xce8>
   120f4:	ldr	r0, [sp, #24]
   120f8:	ldr	r1, [sp, #28]
   120fc:	orr	r0, r0, r1
   12100:	cmp	r0, #0
   12104:	beq	12128 <__assert_fail@plt+0xda4>
   12108:	b	1210c <__assert_fail@plt+0xd88>
   1210c:	mov	r0, #32
   12110:	bl	12558 <__assert_fail@plt+0x11d4>
   12114:	ldr	r2, [sp, #16]
   12118:	ldr	r3, [sp, #20]
   1211c:	ldr	r0, [sp, #24]
   12120:	ldr	r1, [sp, #28]
   12124:	bl	12274 <__assert_fail@plt+0xef0>
   12128:	movw	r0, #10
   1212c:	and	r0, r0, #255	; 0xff
   12130:	bl	12558 <__assert_fail@plt+0x11d4>
   12134:	sub	sp, fp, #8
   12138:	pop	{r4, r5, fp, pc}
   1213c:	push	{fp, lr}
   12140:	mov	fp, sp
   12144:	sub	sp, sp, #8
   12148:	str	r0, [sp, #4]
   1214c:	str	r1, [sp]
   12150:	ldr	r0, [sp]
   12154:	bl	19ca8 <__assert_fail@plt+0x8924>
   12158:	ldr	r0, [sp, #4]
   1215c:	bl	1e6c4 <__assert_fail@plt+0xd340>
   12160:	cmp	r0, #0
   12164:	beq	121f4 <__assert_fail@plt+0xe70>
   12168:	ldr	r0, [sp, #4]
   1216c:	ldr	r1, [sp]
   12170:	bl	19cd4 <__assert_fail@plt+0x8950>
   12174:	ldr	r0, [sp, #4]
   12178:	movw	r1, #1
   1217c:	bl	1e708 <__assert_fail@plt+0xd384>
   12180:	cmp	r0, #0
   12184:	beq	121f0 <__assert_fail@plt+0xe6c>
   12188:	b	1218c <__assert_fail@plt+0xe08>
   1218c:	movw	r0, #37268	; 0x9194
   12190:	movt	r0, #4
   12194:	ldrb	r0, [r0]
   12198:	tst	r0, #1
   1219c:	beq	121b8 <__assert_fail@plt+0xe34>
   121a0:	movw	r0, #37248	; 0x9180
   121a4:	movt	r0, #4
   121a8:	ldr	r0, [r0]
   121ac:	movw	r1, #16433	; 0x4031
   121b0:	movt	r1, #3
   121b4:	bl	11288 <fprintf@plt>
   121b8:	b	121bc <__assert_fail@plt+0xe38>
   121bc:	ldr	r0, [sp, #4]
   121c0:	bl	19e24 <__assert_fail@plt+0x8aa0>
   121c4:	tst	r0, #1
   121c8:	beq	121dc <__assert_fail@plt+0xe58>
   121cc:	ldr	r0, [sp]
   121d0:	ldr	r1, [sp, #4]
   121d4:	bl	1a174 <__assert_fail@plt+0x8df0>
   121d8:	b	121ec <__assert_fail@plt+0xe68>
   121dc:	ldr	r0, [sp, #4]
   121e0:	ldr	r2, [sp]
   121e4:	movw	r1, #1
   121e8:	bl	1a36c <__assert_fail@plt+0x8fe8>
   121ec:	b	121f0 <__assert_fail@plt+0xe6c>
   121f0:	b	121f4 <__assert_fail@plt+0xe70>
   121f4:	mov	sp, fp
   121f8:	pop	{fp, pc}
   121fc:	push	{fp, lr}
   12200:	mov	fp, sp
   12204:	sub	sp, sp, #8
   12208:	str	r0, [sp, #4]
   1220c:	movw	r0, #0
   12210:	str	r0, [sp]
   12214:	ldr	r0, [sp]
   12218:	ldr	r1, [sp, #4]
   1221c:	ldr	r1, [r1, #8]
   12220:	cmp	r0, r1
   12224:	bcs	12254 <__assert_fail@plt+0xed0>
   12228:	ldr	r0, [sp, #4]
   1222c:	ldr	r0, [r0]
   12230:	ldr	r1, [sp]
   12234:	movw	r2, #12
   12238:	mul	r1, r1, r2
   1223c:	add	r0, r0, r1
   12240:	bl	1d384 <__assert_fail@plt+0xc000>
   12244:	ldr	r0, [sp]
   12248:	add	r0, r0, #1
   1224c:	str	r0, [sp]
   12250:	b	12214 <__assert_fail@plt+0xe90>
   12254:	ldr	r0, [sp, #4]
   12258:	ldr	r0, [r0]
   1225c:	bl	1aaec <__assert_fail@plt+0x9768>
   12260:	ldr	r0, [sp, #4]
   12264:	ldr	r0, [r0, #4]
   12268:	bl	1aaec <__assert_fail@plt+0x9768>
   1226c:	mov	sp, fp
   12270:	pop	{fp, pc}
   12274:	push	{fp, lr}
   12278:	mov	fp, sp
   1227c:	sub	sp, sp, #96	; 0x60
   12280:	str	r0, [fp, #-8]
   12284:	str	r1, [fp, #-4]
   12288:	str	r3, [fp, #-12]
   1228c:	str	r2, [fp, #-16]
   12290:	ldr	r0, [fp, #-8]
   12294:	ldr	r1, [fp, #-4]
   12298:	orr	r0, r0, r1
   1229c:	cmp	r0, #0
   122a0:	bne	122bc <__assert_fail@plt+0xf38>
   122a4:	b	122a8 <__assert_fail@plt+0xf24>
   122a8:	ldr	r0, [fp, #-16]
   122ac:	ldr	r1, [fp, #-12]
   122b0:	mov	r2, #0
   122b4:	bl	12860 <__assert_fail@plt+0x14dc>
   122b8:	b	12550 <__assert_fail@plt+0x11cc>
   122bc:	ldr	r0, [fp, #-8]
   122c0:	ldr	r1, [fp, #-4]
   122c4:	movw	r2, #51712	; 0xca00
   122c8:	movt	r2, #15258	; 0x3b9a
   122cc:	mov	r3, #0
   122d0:	str	r2, [sp, #4]
   122d4:	str	r3, [sp]
   122d8:	bl	337f4 <__assert_fail@plt+0x22470>
   122dc:	str	r1, [fp, #-20]	; 0xffffffec
   122e0:	str	r0, [fp, #-24]	; 0xffffffe8
   122e4:	ldr	r0, [fp, #-8]
   122e8:	ldr	r1, [fp, #-4]
   122ec:	ldr	r2, [sp, #4]
   122f0:	ldr	r3, [sp]
   122f4:	bl	337f4 <__assert_fail@plt+0x22470>
   122f8:	str	r3, [fp, #-28]	; 0xffffffe4
   122fc:	str	r2, [fp, #-32]	; 0xffffffe0
   12300:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12304:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12308:	movw	r2, #51711	; 0xc9ff
   1230c:	movt	r2, #15258	; 0x3b9a
   12310:	subs	r0, r2, r0
   12314:	rscs	r1, r1, #0
   12318:	bcc	12324 <__assert_fail@plt+0xfa0>
   1231c:	b	12320 <__assert_fail@plt+0xf9c>
   12320:	b	12344 <__assert_fail@plt+0xfc0>
   12324:	movw	r0, #15728	; 0x3d70
   12328:	movt	r0, #3
   1232c:	movw	r1, #15747	; 0x3d83
   12330:	movt	r1, #3
   12334:	movw	r2, #2438	; 0x986
   12338:	movw	r3, #15760	; 0x3d90
   1233c:	movt	r3, #3
   12340:	bl	11384 <__assert_fail@plt>
   12344:	mov	r0, #0
   12348:	str	r0, [fp, #-36]	; 0xffffffdc
   1234c:	movw	r1, #51712	; 0xca00
   12350:	movt	r1, #15258	; 0x3b9a
   12354:	str	r1, [fp, #-40]	; 0xffffffd8
   12358:	str	r0, [sp, #52]	; 0x34
   1235c:	str	r0, [sp, #48]	; 0x30
   12360:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12364:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12368:	str	r2, [sp, #36]	; 0x24
   1236c:	str	r1, [sp, #32]
   12370:	ldr	r1, [fp, #-16]
   12374:	ldr	r2, [fp, #-12]
   12378:	str	r2, [sp, #28]
   1237c:	str	r1, [sp, #24]
   12380:	str	r0, [sp, #44]	; 0x2c
   12384:	str	r0, [sp, #40]	; 0x28
   12388:	movw	r0, #64	; 0x40
   1238c:	str	r0, [sp, #20]
   12390:	ldr	r0, [sp, #20]
   12394:	cmp	r0, #0
   12398:	bls	1250c <__assert_fail@plt+0x1188>
   1239c:	b	123a0 <__assert_fail@plt+0x101c>
   123a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   123a4:	ldr	r1, [sp, #48]	; 0x30
   123a8:	ldr	r2, [sp, #52]	; 0x34
   123ac:	lsrs	r2, r2, #1
   123b0:	rrx	r1, r1
   123b4:	orr	r0, r2, r0, lsl #31
   123b8:	str	r1, [sp, #48]	; 0x30
   123bc:	str	r0, [sp, #52]	; 0x34
   123c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   123c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   123c8:	lsrs	r1, r1, #1
   123cc:	rrx	r0, r0
   123d0:	str	r1, [fp, #-36]	; 0xffffffdc
   123d4:	str	r0, [fp, #-40]	; 0xffffffd8
   123d8:	ldr	r0, [sp, #40]	; 0x28
   123dc:	ldr	r1, [sp, #44]	; 0x2c
   123e0:	lsl	r1, r1, #1
   123e4:	orr	r1, r1, r0, lsr #31
   123e8:	lsl	r0, r0, #1
   123ec:	str	r0, [sp, #40]	; 0x28
   123f0:	str	r1, [sp, #44]	; 0x2c
   123f4:	ldr	r0, [sp, #32]
   123f8:	ldr	r1, [sp, #36]	; 0x24
   123fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12400:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12404:	subs	r0, r2, r0
   12408:	sbcs	r1, r3, r1
   1240c:	bcc	1245c <__assert_fail@plt+0x10d8>
   12410:	b	12414 <__assert_fail@plt+0x1090>
   12414:	ldr	r0, [sp, #32]
   12418:	ldr	r1, [sp, #36]	; 0x24
   1241c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12420:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12424:	eor	r1, r1, r3
   12428:	eor	r0, r0, r2
   1242c:	orr	r0, r0, r1
   12430:	cmp	r0, #0
   12434:	bne	124f4 <__assert_fail@plt+0x1170>
   12438:	b	1243c <__assert_fail@plt+0x10b8>
   1243c:	ldr	r0, [sp, #24]
   12440:	ldr	r1, [sp, #28]
   12444:	ldr	r2, [sp, #48]	; 0x30
   12448:	ldr	r3, [sp, #52]	; 0x34
   1244c:	subs	r0, r0, r2
   12450:	sbcs	r1, r1, r3
   12454:	bcc	124f4 <__assert_fail@plt+0x1170>
   12458:	b	1245c <__assert_fail@plt+0x10d8>
   1245c:	ldr	r0, [sp, #40]	; 0x28
   12460:	ldr	r1, [sp, #44]	; 0x2c
   12464:	adds	r0, r0, #1
   12468:	adc	r1, r1, #0
   1246c:	str	r0, [sp, #40]	; 0x28
   12470:	str	r1, [sp, #44]	; 0x2c
   12474:	ldr	r0, [sp, #24]
   12478:	ldr	r1, [sp, #28]
   1247c:	ldr	r2, [sp, #48]	; 0x30
   12480:	ldr	r3, [sp, #52]	; 0x34
   12484:	subs	r0, r0, r2
   12488:	sbcs	r1, r1, r3
   1248c:	mov	r2, #0
   12490:	mov	r3, r2
   12494:	movwcc	r3, #1
   12498:	str	r2, [sp, #12]
   1249c:	str	r3, [sp, #8]
   124a0:	ldr	r2, [sp, #24]
   124a4:	ldr	r3, [sp, #28]
   124a8:	ldr	ip, [sp, #48]	; 0x30
   124ac:	ldr	lr, [sp, #52]	; 0x34
   124b0:	subs	r2, r2, ip
   124b4:	sbc	r3, r3, lr
   124b8:	str	r2, [sp, #24]
   124bc:	str	r3, [sp, #28]
   124c0:	ldr	r2, [sp, #32]
   124c4:	ldr	r3, [sp, #36]	; 0x24
   124c8:	ldr	ip, [fp, #-40]	; 0xffffffd8
   124cc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   124d0:	subs	r2, r2, ip
   124d4:	sbc	r3, r3, lr
   124d8:	ldr	ip, [sp, #8]
   124dc:	ldr	lr, [sp, #12]
   124e0:	subs	r2, r2, ip
   124e4:	sbc	r3, r3, lr
   124e8:	str	r2, [sp, #32]
   124ec:	str	r3, [sp, #36]	; 0x24
   124f0:	b	124f4 <__assert_fail@plt+0x1170>
   124f4:	b	124f8 <__assert_fail@plt+0x1174>
   124f8:	ldr	r0, [sp, #20]
   124fc:	mvn	r1, #0
   12500:	add	r0, r0, r1
   12504:	str	r0, [sp, #20]
   12508:	b	12390 <__assert_fail@plt+0x100c>
   1250c:	ldr	r0, [sp, #24]
   12510:	ldr	r1, [sp, #28]
   12514:	str	r1, [fp, #-28]	; 0xffffffe4
   12518:	str	r0, [fp, #-32]	; 0xffffffe0
   1251c:	ldr	r0, [sp, #40]	; 0x28
   12520:	ldr	r1, [sp, #44]	; 0x2c
   12524:	str	r1, [fp, #-12]
   12528:	str	r0, [fp, #-16]
   1252c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12530:	ldr	r1, [fp, #-20]	; 0xffffffec
   12534:	ldr	r2, [fp, #-16]
   12538:	ldr	r3, [fp, #-12]
   1253c:	bl	12274 <__assert_fail@plt+0xef0>
   12540:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12544:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12548:	mov	r2, #9
   1254c:	bl	12860 <__assert_fail@plt+0x14dc>
   12550:	mov	sp, fp
   12554:	pop	{fp, pc}
   12558:	push	{fp, lr}
   1255c:	mov	fp, sp
   12560:	sub	sp, sp, #24
   12564:	strb	r0, [fp, #-1]
   12568:	ldrb	r0, [fp, #-1]
   1256c:	movw	r1, #37272	; 0x9198
   12570:	movt	r1, #4
   12574:	ldr	r2, [r1, #4]
   12578:	add	r3, r2, #1
   1257c:	str	r3, [r1, #4]
   12580:	strb	r0, [r2]
   12584:	ldrb	r0, [fp, #-1]
   12588:	cmp	r0, #10
   1258c:	bne	126dc <__assert_fail@plt+0x1358>
   12590:	movw	r0, #37272	; 0x9198
   12594:	movt	r0, #4
   12598:	ldr	r1, [r0, #4]
   1259c:	ldr	r0, [r0]
   125a0:	sub	r0, r1, r0
   125a4:	str	r0, [fp, #-8]
   125a8:	movw	r0, #37140	; 0x9114
   125ac:	movt	r0, #4
   125b0:	ldr	r0, [r0]
   125b4:	cmn	r0, #1
   125b8:	bne	12600 <__assert_fail@plt+0x127c>
   125bc:	movw	r0, #0
   125c0:	bl	11348 <isatty@plt>
   125c4:	cmp	r0, #0
   125c8:	movw	r0, #1
   125cc:	str	r0, [sp, #4]
   125d0:	bne	125ec <__assert_fail@plt+0x1268>
   125d4:	movw	r0, #1
   125d8:	bl	11348 <isatty@plt>
   125dc:	cmp	r0, #0
   125e0:	movw	r0, #0
   125e4:	movne	r0, #1
   125e8:	str	r0, [sp, #4]
   125ec:	ldr	r0, [sp, #4]
   125f0:	and	r0, r0, #1
   125f4:	movw	r1, #37140	; 0x9114
   125f8:	movt	r1, #4
   125fc:	str	r0, [r1]
   12600:	movw	r0, #37140	; 0x9114
   12604:	movt	r0, #4
   12608:	ldr	r0, [r0]
   1260c:	cmp	r0, #0
   12610:	beq	1261c <__assert_fail@plt+0x1298>
   12614:	bl	119ec <__assert_fail@plt+0x668>
   12618:	b	126d8 <__assert_fail@plt+0x1354>
   1261c:	ldr	r0, [fp, #-8]
   12620:	cmp	r0, #512	; 0x200
   12624:	bcc	126d4 <__assert_fail@plt+0x1350>
   12628:	movw	r0, #37272	; 0x9198
   1262c:	movt	r0, #4
   12630:	ldr	r1, [r0, #4]
   12634:	str	r1, [sp, #12]
   12638:	ldr	r0, [r0]
   1263c:	add	r0, r0, #512	; 0x200
   12640:	str	r0, [sp, #8]
   12644:	ldr	r0, [sp, #8]
   12648:	mvn	r1, #0
   1264c:	add	r2, r0, r1
   12650:	str	r2, [sp, #8]
   12654:	add	r0, r0, r1
   12658:	ldrb	r0, [r0]
   1265c:	cmp	r0, #10
   12660:	beq	12668 <__assert_fail@plt+0x12e4>
   12664:	b	12644 <__assert_fail@plt+0x12c0>
   12668:	ldr	r0, [sp, #8]
   1266c:	add	r0, r0, #1
   12670:	str	r0, [sp, #8]
   12674:	ldr	r0, [sp, #8]
   12678:	movw	r1, #37272	; 0x9198
   1267c:	movt	r1, #4
   12680:	str	r0, [r1, #4]
   12684:	bl	119ec <__assert_fail@plt+0x668>
   12688:	movw	r0, #37272	; 0x9198
   1268c:	movt	r0, #4
   12690:	ldr	r1, [r0]
   12694:	ldr	r2, [sp, #8]
   12698:	ldr	r3, [sp, #12]
   1269c:	ldr	ip, [sp, #8]
   126a0:	sub	r3, r3, ip
   126a4:	str	r0, [sp]
   126a8:	mov	r0, r1
   126ac:	mov	r1, r2
   126b0:	mov	r2, r3
   126b4:	bl	1112c <memcpy@plt>
   126b8:	ldr	r0, [sp]
   126bc:	ldr	r1, [r0]
   126c0:	ldr	r2, [sp, #12]
   126c4:	ldr	r3, [sp, #8]
   126c8:	sub	r2, r2, r3
   126cc:	add	r1, r1, r2
   126d0:	str	r1, [r0, #4]
   126d4:	b	126d8 <__assert_fail@plt+0x1354>
   126d8:	b	126dc <__assert_fail@plt+0x1358>
   126dc:	mov	sp, fp
   126e0:	pop	{fp, pc}
   126e4:	push	{fp, lr}
   126e8:	mov	fp, sp
   126ec:	sub	sp, sp, #32
   126f0:	ldr	ip, [fp, #8]
   126f4:	str	r0, [fp, #-8]
   126f8:	str	r1, [fp, #-4]
   126fc:	str	r3, [sp, #20]
   12700:	str	r2, [sp, #16]
   12704:	ldr	r0, [fp, #8]
   12708:	mov	r1, #0
   1270c:	strb	r1, [r0, #250]	; 0xfa
   12710:	ldr	r0, [fp, #8]
   12714:	str	r1, [r0, #12]
   12718:	str	r1, [r0, #8]
   1271c:	ldr	r0, [fp, #-8]
   12720:	ldr	r1, [fp, #-4]
   12724:	orr	r0, r0, r1
   12728:	cmp	r0, #0
   1272c:	bne	12750 <__assert_fail@plt+0x13cc>
   12730:	b	12734 <__assert_fail@plt+0x13b0>
   12734:	ldr	r0, [sp, #16]
   12738:	ldr	r1, [sp, #20]
   1273c:	rsbs	r0, r0, #1
   12740:	rscs	r1, r1, #0
   12744:	bcc	12750 <__assert_fail@plt+0x13cc>
   12748:	b	1274c <__assert_fail@plt+0x13c8>
   1274c:	b	12858 <__assert_fail@plt+0x14d4>
   12750:	ldr	r2, [fp, #-8]
   12754:	ldr	r3, [fp, #-4]
   12758:	ldr	r0, [sp, #16]
   1275c:	ldr	r1, [sp, #20]
   12760:	ldr	ip, [fp, #8]
   12764:	mov	lr, sp
   12768:	str	ip, [lr, #8]
   1276c:	str	r1, [lr, #4]
   12770:	str	r0, [lr]
   12774:	sub	r0, fp, #8
   12778:	bl	12934 <__assert_fail@plt+0x15b0>
   1277c:	str	r1, [sp, #20]
   12780:	str	r0, [sp, #16]
   12784:	ldr	r0, [fp, #-8]
   12788:	ldr	r1, [fp, #-4]
   1278c:	orr	r0, r0, r1
   12790:	cmp	r0, #0
   12794:	bne	127b8 <__assert_fail@plt+0x1434>
   12798:	b	1279c <__assert_fail@plt+0x1418>
   1279c:	ldr	r0, [sp, #16]
   127a0:	ldr	r1, [sp, #20]
   127a4:	rsbs	r0, r0, #1
   127a8:	rscs	r1, r1, #0
   127ac:	bcc	127b8 <__assert_fail@plt+0x1434>
   127b0:	b	127b4 <__assert_fail@plt+0x1430>
   127b4:	b	12858 <__assert_fail@plt+0x14d4>
   127b8:	ldr	r0, [fp, #-8]
   127bc:	ldr	r1, [fp, #-4]
   127c0:	ldr	r2, [sp, #16]
   127c4:	ldr	r3, [sp, #20]
   127c8:	bl	133ac <__assert_fail@plt+0x2028>
   127cc:	tst	r0, #1
   127d0:	beq	127fc <__assert_fail@plt+0x1478>
   127d4:	ldr	r0, [fp, #8]
   127d8:	ldr	r2, [fp, #-8]
   127dc:	ldr	r3, [fp, #-4]
   127e0:	ldr	r1, [sp, #16]
   127e4:	ldr	ip, [sp, #20]
   127e8:	mov	lr, sp
   127ec:	str	ip, [lr, #4]
   127f0:	str	r1, [lr]
   127f4:	bl	144ac <__assert_fail@plt+0x3128>
   127f8:	b	12858 <__assert_fail@plt+0x14d4>
   127fc:	ldr	r0, [fp, #-8]
   12800:	ldr	r1, [fp, #-4]
   12804:	orr	r0, r0, r1
   12808:	cmp	r0, #0
   1280c:	bne	1282c <__assert_fail@plt+0x14a8>
   12810:	b	12814 <__assert_fail@plt+0x1490>
   12814:	ldr	r0, [sp, #16]
   12818:	ldr	r1, [sp, #20]
   1281c:	ldr	r3, [fp, #8]
   12820:	mov	r2, #1
   12824:	bl	1457c <__assert_fail@plt+0x31f8>
   12828:	b	12854 <__assert_fail@plt+0x14d0>
   1282c:	ldr	r0, [fp, #-8]
   12830:	ldr	r1, [fp, #-4]
   12834:	ldr	r2, [sp, #16]
   12838:	ldr	r3, [sp, #20]
   1283c:	ldr	ip, [fp, #8]
   12840:	mov	lr, sp
   12844:	str	ip, [lr, #4]
   12848:	mov	ip, #1
   1284c:	str	ip, [lr]
   12850:	bl	14fc4 <__assert_fail@plt+0x3c40>
   12854:	b	12858 <__assert_fail@plt+0x14d4>
   12858:	mov	sp, fp
   1285c:	pop	{fp, pc}
   12860:	push	{fp, lr}
   12864:	mov	fp, sp
   12868:	sub	sp, sp, #56	; 0x38
   1286c:	add	r3, sp, #23
   12870:	str	r0, [fp, #-8]
   12874:	str	r1, [fp, #-4]
   12878:	str	r2, [fp, #-12]
   1287c:	ldr	r0, [fp, #-8]
   12880:	ldr	r1, [fp, #-4]
   12884:	mov	r2, r3
   12888:	bl	1abe0 <__assert_fail@plt+0x985c>
   1288c:	add	r1, sp, #23
   12890:	str	r0, [sp, #16]
   12894:	ldr	r0, [sp, #16]
   12898:	sub	r0, r0, r1
   1289c:	movw	r1, #21
   128a0:	sub	r0, r1, r0
   128a4:	sub	r0, r0, #1
   128a8:	str	r0, [sp, #12]
   128ac:	ldr	r0, [sp, #12]
   128b0:	str	r0, [sp, #8]
   128b4:	ldr	r0, [sp, #8]
   128b8:	ldr	r1, [fp, #-12]
   128bc:	cmp	r0, r1
   128c0:	bcs	128f0 <__assert_fail@plt+0x156c>
   128c4:	movw	r0, #37272	; 0x9198
   128c8:	movt	r0, #4
   128cc:	ldr	r1, [r0, #4]
   128d0:	add	r2, r1, #1
   128d4:	str	r2, [r0, #4]
   128d8:	movw	r0, #48	; 0x30
   128dc:	strb	r0, [r1]
   128e0:	ldr	r0, [sp, #8]
   128e4:	add	r0, r0, #1
   128e8:	str	r0, [sp, #8]
   128ec:	b	128b4 <__assert_fail@plt+0x1530>
   128f0:	movw	r0, #37272	; 0x9198
   128f4:	movt	r0, #4
   128f8:	ldr	r1, [r0, #4]
   128fc:	ldr	r2, [sp, #16]
   12900:	ldr	r3, [sp, #12]
   12904:	str	r0, [sp, #4]
   12908:	mov	r0, r1
   1290c:	mov	r1, r2
   12910:	mov	r2, r3
   12914:	bl	1112c <memcpy@plt>
   12918:	ldr	r0, [sp, #12]
   1291c:	ldr	r1, [sp, #4]
   12920:	ldr	r2, [r1, #4]
   12924:	add	r0, r2, r0
   12928:	str	r0, [r1, #4]
   1292c:	mov	sp, fp
   12930:	pop	{fp, pc}
   12934:	push	{r4, sl, fp, lr}
   12938:	add	fp, sp, #8
   1293c:	sub	sp, sp, #200	; 0xc8
   12940:	ldr	r1, [fp, #12]
   12944:	ldr	ip, [fp, #8]
   12948:	ldr	lr, [fp, #16]
   1294c:	str	r0, [fp, #-12]
   12950:	str	r3, [fp, #-20]	; 0xffffffec
   12954:	str	r2, [fp, #-24]	; 0xffffffe8
   12958:	str	r1, [fp, #-28]	; 0xffffffe4
   1295c:	str	ip, [fp, #-32]	; 0xffffffe0
   12960:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   12964:	tst	r0, #1
   12968:	bne	12b5c <__assert_fail@plt+0x17d8>
   1296c:	b	12970 <__assert_fail@plt+0x15ec>
   12970:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12978:	orr	r0, r0, r1
   1297c:	cmp	r0, #0
   12980:	bne	12a38 <__assert_fail@plt+0x16b4>
   12984:	b	12988 <__assert_fail@plt+0x1604>
   12988:	b	1298c <__assert_fail@plt+0x1608>
   1298c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12990:	ldr	r1, [fp, #-20]	; 0xffffffec
   12994:	str	r1, [fp, #-44]	; 0xffffffd4
   12998:	str	r0, [fp, #-48]	; 0xffffffd0
   1299c:	movw	r0, #0
   129a0:	str	r0, [fp, #-52]	; 0xffffffcc
   129a4:	ldrb	r0, [fp, #-48]	; 0xffffffd0
   129a8:	tst	r0, #1
   129ac:	bne	129dc <__assert_fail@plt+0x1658>
   129b0:	b	129b4 <__assert_fail@plt+0x1630>
   129b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   129b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129bc:	lsrs	r1, r1, #1
   129c0:	rrx	r0, r0
   129c4:	str	r1, [fp, #-44]	; 0xffffffd4
   129c8:	str	r0, [fp, #-48]	; 0xffffffd0
   129cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   129d0:	add	r0, r0, #1
   129d4:	str	r0, [fp, #-52]	; 0xffffffcc
   129d8:	b	129a4 <__assert_fail@plt+0x1620>
   129dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   129e0:	str	r0, [fp, #-36]	; 0xffffffdc
   129e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   129ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   129f0:	lsr	r0, r0, r2
   129f4:	rsb	r3, r2, #32
   129f8:	orr	r0, r0, r1, lsl r3
   129fc:	sub	r3, r2, #32
   12a00:	cmp	r3, #0
   12a04:	lsrpl	r0, r1, r3
   12a08:	lsr	r1, r1, r2
   12a0c:	cmp	r3, #0
   12a10:	movwpl	r1, #0
   12a14:	str	r1, [fp, #-28]	; 0xffffffe4
   12a18:	str	r0, [fp, #-32]	; 0xffffffe0
   12a1c:	mov	r0, #0
   12a20:	str	r0, [fp, #-20]	; 0xffffffec
   12a24:	str	r0, [fp, #-24]	; 0xffffffe8
   12a28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12a2c:	add	r0, r0, #64	; 0x40
   12a30:	str	r0, [fp, #-36]	; 0xffffffdc
   12a34:	b	12b40 <__assert_fail@plt+0x17bc>
   12a38:	b	12a3c <__assert_fail@plt+0x16b8>
   12a3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a44:	str	r1, [fp, #-60]	; 0xffffffc4
   12a48:	str	r0, [fp, #-64]	; 0xffffffc0
   12a4c:	movw	r0, #0
   12a50:	str	r0, [fp, #-68]	; 0xffffffbc
   12a54:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   12a58:	tst	r0, #1
   12a5c:	bne	12a8c <__assert_fail@plt+0x1708>
   12a60:	b	12a64 <__assert_fail@plt+0x16e0>
   12a64:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12a68:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12a6c:	lsrs	r1, r1, #1
   12a70:	rrx	r0, r0
   12a74:	str	r1, [fp, #-60]	; 0xffffffc4
   12a78:	str	r0, [fp, #-64]	; 0xffffffc0
   12a7c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12a80:	add	r0, r0, #1
   12a84:	str	r0, [fp, #-68]	; 0xffffffbc
   12a88:	b	12a54 <__assert_fail@plt+0x16d0>
   12a8c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12a90:	str	r0, [fp, #-36]	; 0xffffffdc
   12a94:	b	12a98 <__assert_fail@plt+0x1714>
   12a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12aa0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12aa4:	rsb	r3, r2, #64	; 0x40
   12aa8:	lsl	ip, r0, r3
   12aac:	rsb	lr, r2, #32
   12ab0:	cmp	lr, #0
   12ab4:	movwpl	ip, #0
   12ab8:	rsb	r4, r3, #32
   12abc:	lsr	r4, r0, r4
   12ac0:	orr	r1, r4, r1, lsl r3
   12ac4:	cmp	lr, #0
   12ac8:	lslpl	r1, r0, lr
   12acc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ad0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12ad4:	lsr	r0, r0, r2
   12ad8:	orr	r0, r0, r3, lsl lr
   12adc:	sub	lr, r2, #32
   12ae0:	cmp	lr, #0
   12ae4:	lsrpl	r0, r3, lr
   12ae8:	lsr	r2, r3, r2
   12aec:	cmp	lr, #0
   12af0:	movwpl	r2, #0
   12af4:	orr	r1, r1, r2
   12af8:	orr	r0, ip, r0
   12afc:	str	r0, [fp, #-32]	; 0xffffffe0
   12b00:	str	r1, [fp, #-28]	; 0xffffffe4
   12b04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b08:	ldr	r1, [fp, #-20]	; 0xffffffec
   12b0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12b10:	lsr	r0, r0, r2
   12b14:	rsb	r3, r2, #32
   12b18:	orr	r0, r0, r1, lsl r3
   12b1c:	sub	r3, r2, #32
   12b20:	cmp	r3, #0
   12b24:	lsrpl	r0, r1, r3
   12b28:	lsr	r1, r1, r2
   12b2c:	cmp	r3, #0
   12b30:	movwpl	r1, #0
   12b34:	str	r1, [fp, #-20]	; 0xffffffec
   12b38:	str	r0, [fp, #-24]	; 0xffffffe8
   12b3c:	b	12b40 <__assert_fail@plt+0x17bc>
   12b40:	ldr	r0, [fp, #16]
   12b44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12b48:	mov	r2, sp
   12b4c:	str	r1, [r2]
   12b50:	mov	r2, #2
   12b54:	mov	r3, #0
   12b58:	bl	166b8 <__assert_fail@plt+0x5334>
   12b5c:	mov	r0, #0
   12b60:	str	r0, [fp, #-76]	; 0xffffffb4
   12b64:	mov	r0, #3
   12b68:	str	r0, [fp, #-80]	; 0xffffffb0
   12b6c:	movw	r0, #0
   12b70:	str	r0, [fp, #-84]	; 0xffffffac
   12b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b78:	ldr	r1, [fp, #-20]	; 0xffffffec
   12b7c:	orr	r0, r0, r1
   12b80:	mov	r1, #0
   12b84:	cmp	r0, #0
   12b88:	str	r1, [sp, #8]
   12b8c:	beq	12ba8 <__assert_fail@plt+0x1824>
   12b90:	b	12b94 <__assert_fail@plt+0x1810>
   12b94:	ldr	r0, [fp, #-84]	; 0xffffffac
   12b98:	cmp	r0, #668	; 0x29c
   12b9c:	movw	r0, #0
   12ba0:	movcc	r0, #1
   12ba4:	str	r0, [sp, #8]
   12ba8:	ldr	r0, [sp, #8]
   12bac:	tst	r0, #1
   12bb0:	beq	12e2c <__assert_fail@plt+0x1aa8>
   12bb4:	b	12bb8 <__assert_fail@plt+0x1834>
   12bb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12bbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bc0:	ldr	r2, [fp, #-84]	; 0xffffffac
   12bc4:	movw	r3, #16656	; 0x4110
   12bc8:	movt	r3, #3
   12bcc:	ldr	r2, [r3, r2, lsl #4]!
   12bd0:	ldr	r3, [r3, #4]
   12bd4:	umull	ip, lr, r0, r2
   12bd8:	mla	r0, r0, r3, lr
   12bdc:	mla	r0, r1, r2, r0
   12be0:	str	ip, [sp, #104]	; 0x68
   12be4:	str	r0, [sp, #108]	; 0x6c
   12be8:	ldr	r0, [sp, #104]	; 0x68
   12bec:	ldr	r1, [sp, #108]	; 0x6c
   12bf0:	str	r1, [sp, #36]	; 0x24
   12bf4:	str	r0, [sp, #32]
   12bf8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12bfc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12c00:	str	r1, [sp, #28]
   12c04:	str	r0, [sp, #24]
   12c08:	ldr	r0, [sp, #32]
   12c0c:	str	r0, [sp, #52]	; 0x34
   12c10:	ldr	r0, [sp, #36]	; 0x24
   12c14:	str	r0, [sp, #44]	; 0x2c
   12c18:	ldr	r0, [sp, #24]
   12c1c:	str	r0, [sp, #48]	; 0x30
   12c20:	ldr	r0, [sp, #28]
   12c24:	str	r0, [sp, #40]	; 0x28
   12c28:	ldr	r0, [sp, #52]	; 0x34
   12c2c:	ldr	r1, [sp, #48]	; 0x30
   12c30:	umull	r0, r1, r0, r1
   12c34:	str	r1, [sp, #84]	; 0x54
   12c38:	str	r0, [sp, #80]	; 0x50
   12c3c:	ldr	r0, [sp, #52]	; 0x34
   12c40:	ldr	r1, [sp, #40]	; 0x28
   12c44:	umull	r0, r1, r0, r1
   12c48:	str	r1, [sp, #76]	; 0x4c
   12c4c:	str	r0, [sp, #72]	; 0x48
   12c50:	ldr	r0, [sp, #44]	; 0x2c
   12c54:	ldr	r1, [sp, #48]	; 0x30
   12c58:	umull	r0, r1, r0, r1
   12c5c:	str	r1, [sp, #68]	; 0x44
   12c60:	str	r0, [sp, #64]	; 0x40
   12c64:	ldr	r0, [sp, #44]	; 0x2c
   12c68:	ldr	r1, [sp, #40]	; 0x28
   12c6c:	umull	r0, r1, r0, r1
   12c70:	str	r1, [sp, #60]	; 0x3c
   12c74:	str	r0, [sp, #56]	; 0x38
   12c78:	ldr	r0, [sp, #84]	; 0x54
   12c7c:	ldr	r1, [sp, #72]	; 0x48
   12c80:	ldr	r2, [sp, #76]	; 0x4c
   12c84:	adds	r0, r1, r0
   12c88:	adc	r1, r2, #0
   12c8c:	str	r0, [sp, #72]	; 0x48
   12c90:	str	r1, [sp, #76]	; 0x4c
   12c94:	ldr	r0, [sp, #64]	; 0x40
   12c98:	ldr	r1, [sp, #68]	; 0x44
   12c9c:	ldr	r2, [sp, #72]	; 0x48
   12ca0:	ldr	r3, [sp, #76]	; 0x4c
   12ca4:	adds	r0, r2, r0
   12ca8:	adc	r1, r3, r1
   12cac:	str	r0, [sp, #72]	; 0x48
   12cb0:	str	r1, [sp, #76]	; 0x4c
   12cb4:	ldr	r0, [sp, #72]	; 0x48
   12cb8:	ldr	r1, [sp, #76]	; 0x4c
   12cbc:	ldr	r2, [sp, #64]	; 0x40
   12cc0:	ldr	r3, [sp, #68]	; 0x44
   12cc4:	subs	r0, r0, r2
   12cc8:	sbcs	r1, r1, r3
   12ccc:	bcs	12ce0 <__assert_fail@plt+0x195c>
   12cd0:	b	12cd4 <__assert_fail@plt+0x1950>
   12cd4:	ldr	r0, [sp, #60]	; 0x3c
   12cd8:	add	r0, r0, #1
   12cdc:	str	r0, [sp, #60]	; 0x3c
   12ce0:	ldr	r0, [sp, #56]	; 0x38
   12ce4:	ldr	r1, [sp, #60]	; 0x3c
   12ce8:	ldr	r2, [sp, #76]	; 0x4c
   12cec:	adds	r0, r0, r2
   12cf0:	adc	r1, r1, #0
   12cf4:	str	r0, [sp, #96]	; 0x60
   12cf8:	str	r1, [sp, #100]	; 0x64
   12cfc:	ldr	r0, [sp, #72]	; 0x48
   12d00:	ldr	r1, [sp, #80]	; 0x50
   12d04:	str	r0, [sp, #92]	; 0x5c
   12d08:	str	r1, [sp, #88]	; 0x58
   12d0c:	ldr	r0, [sp, #96]	; 0x60
   12d10:	ldr	r1, [sp, #100]	; 0x64
   12d14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d18:	ldr	r3, [fp, #-20]	; 0xffffffec
   12d1c:	subs	r0, r2, r0
   12d20:	sbcs	r1, r3, r1
   12d24:	bcs	12d30 <__assert_fail@plt+0x19ac>
   12d28:	b	12d2c <__assert_fail@plt+0x19a8>
   12d2c:	b	12df0 <__assert_fail@plt+0x1a6c>
   12d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d34:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d38:	ldr	r2, [sp, #96]	; 0x60
   12d3c:	ldr	r3, [sp, #100]	; 0x64
   12d40:	subs	r0, r0, r2
   12d44:	sbc	r1, r1, r3
   12d48:	str	r0, [sp, #96]	; 0x60
   12d4c:	str	r1, [sp, #100]	; 0x64
   12d50:	ldr	r0, [sp, #96]	; 0x60
   12d54:	ldr	r1, [sp, #100]	; 0x64
   12d58:	ldr	r2, [fp, #-84]	; 0xffffffac
   12d5c:	movw	r3, #16656	; 0x4110
   12d60:	movt	r3, #3
   12d64:	mov	ip, r3
   12d68:	ldr	r2, [ip, r2, lsl #4]!
   12d6c:	ldr	ip, [ip, #4]
   12d70:	umull	lr, r4, r0, r2
   12d74:	mla	r0, r0, ip, r4
   12d78:	mla	r0, r1, r2, r0
   12d7c:	str	lr, [fp, #-96]	; 0xffffffa0
   12d80:	str	r0, [fp, #-92]	; 0xffffffa4
   12d84:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12d88:	ldr	r1, [fp, #-92]	; 0xffffffa4
   12d8c:	ldr	r2, [fp, #-84]	; 0xffffffac
   12d90:	add	r2, r3, r2, lsl #4
   12d94:	ldr	r3, [r2, #8]
   12d98:	ldr	r2, [r2, #12]
   12d9c:	subs	r0, r3, r0
   12da0:	sbcs	r1, r2, r1
   12da4:	bcs	12db0 <__assert_fail@plt+0x1a2c>
   12da8:	b	12dac <__assert_fail@plt+0x1a28>
   12dac:	b	12df0 <__assert_fail@plt+0x1a6c>
   12db0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12db4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   12db8:	str	r1, [fp, #-20]	; 0xffffffec
   12dbc:	str	r0, [fp, #-24]	; 0xffffffe8
   12dc0:	ldr	r0, [sp, #104]	; 0x68
   12dc4:	ldr	r1, [sp, #108]	; 0x6c
   12dc8:	str	r1, [fp, #-28]	; 0xffffffe4
   12dcc:	str	r0, [fp, #-32]	; 0xffffffe0
   12dd0:	ldr	r0, [fp, #16]
   12dd4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12dd8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12ddc:	mov	r1, sp
   12de0:	mov	ip, #1
   12de4:	str	ip, [r1]
   12de8:	bl	166b8 <__assert_fail@plt+0x5334>
   12dec:	b	12bb8 <__assert_fail@plt+0x1834>
   12df0:	ldr	r0, [fp, #-84]	; 0xffffffac
   12df4:	movw	r1, #27456	; 0x6b40
   12df8:	movt	r1, #3
   12dfc:	add	r0, r0, r1
   12e00:	ldrb	r0, [r0, #1]
   12e04:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12e08:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12e0c:	adds	r0, r1, r0
   12e10:	adc	r1, r2, #0
   12e14:	str	r0, [fp, #-80]	; 0xffffffb0
   12e18:	str	r1, [fp, #-76]	; 0xffffffb4
   12e1c:	ldr	r0, [fp, #-84]	; 0xffffffac
   12e20:	add	r0, r0, #1
   12e24:	str	r0, [fp, #-84]	; 0xffffffac
   12e28:	b	12b74 <__assert_fail@plt+0x17f0>
   12e2c:	ldr	r0, [fp, #-12]
   12e30:	movw	r1, #0
   12e34:	cmp	r0, r1
   12e38:	beq	12e50 <__assert_fail@plt+0x1acc>
   12e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e40:	ldr	r1, [fp, #-20]	; 0xffffffec
   12e44:	ldr	r2, [fp, #-12]
   12e48:	str	r1, [r2, #4]
   12e4c:	str	r0, [r2]
   12e50:	b	12e54 <__assert_fail@plt+0x1ad0>
   12e54:	ldr	r0, [fp, #-84]	; 0xffffffac
   12e58:	cmp	r0, #668	; 0x29c
   12e5c:	bcs	1339c <__assert_fail@plt+0x2018>
   12e60:	ldr	r0, [fp, #-84]	; 0xffffffac
   12e64:	movw	r1, #16656	; 0x4110
   12e68:	movt	r1, #3
   12e6c:	add	r0, r1, r0, lsl #4
   12e70:	str	r0, [sp, #12]
   12e74:	b	12e78 <__assert_fail@plt+0x1af4>
   12e78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e80:	ldr	r2, [sp, #12]
   12e84:	ldr	r3, [r2]
   12e88:	ldr	r2, [r2, #4]
   12e8c:	umull	ip, lr, r0, r3
   12e90:	mla	r0, r0, r2, lr
   12e94:	mla	r0, r1, r3, r0
   12e98:	str	ip, [sp, #16]
   12e9c:	str	r0, [sp, #20]
   12ea0:	ldr	r0, [sp, #16]
   12ea4:	ldr	r1, [sp, #20]
   12ea8:	ldr	r2, [sp, #12]
   12eac:	ldr	r3, [r2, #8]
   12eb0:	ldr	r2, [r2, #12]
   12eb4:	subs	r0, r3, r0
   12eb8:	sbcs	r1, r2, r1
   12ebc:	bcs	12ec8 <__assert_fail@plt+0x1b44>
   12ec0:	b	12ec4 <__assert_fail@plt+0x1b40>
   12ec4:	b	12f04 <__assert_fail@plt+0x1b80>
   12ec8:	ldr	r0, [sp, #16]
   12ecc:	ldr	r1, [sp, #20]
   12ed0:	str	r1, [fp, #-28]	; 0xffffffe4
   12ed4:	str	r0, [fp, #-32]	; 0xffffffe0
   12ed8:	ldr	r0, [fp, #16]
   12edc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12ee0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12ee4:	ldr	r1, [fp, #-84]	; 0xffffffac
   12ee8:	add	r1, r1, #1
   12eec:	mov	ip, sp
   12ef0:	mov	lr, #0
   12ef4:	str	lr, [ip, #4]
   12ef8:	str	r1, [ip]
   12efc:	bl	16860 <__assert_fail@plt+0x54dc>
   12f00:	b	12e78 <__assert_fail@plt+0x1af4>
   12f04:	b	12f08 <__assert_fail@plt+0x1b84>
   12f08:	b	12f0c <__assert_fail@plt+0x1b88>
   12f0c:	b	12f10 <__assert_fail@plt+0x1b8c>
   12f10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12f18:	ldr	r2, [sp, #12]
   12f1c:	ldr	r3, [r2, #16]
   12f20:	ldr	r2, [r2, #20]
   12f24:	umull	ip, lr, r0, r3
   12f28:	mla	r0, r0, r2, lr
   12f2c:	mla	r0, r1, r3, r0
   12f30:	str	ip, [sp, #16]
   12f34:	str	r0, [sp, #20]
   12f38:	ldr	r0, [sp, #16]
   12f3c:	ldr	r1, [sp, #20]
   12f40:	ldr	r2, [sp, #12]
   12f44:	ldr	r3, [r2, #24]
   12f48:	ldr	r2, [r2, #28]
   12f4c:	subs	r0, r3, r0
   12f50:	sbcs	r1, r2, r1
   12f54:	bcs	12f60 <__assert_fail@plt+0x1bdc>
   12f58:	b	12f5c <__assert_fail@plt+0x1bd8>
   12f5c:	b	12f9c <__assert_fail@plt+0x1c18>
   12f60:	ldr	r0, [sp, #16]
   12f64:	ldr	r1, [sp, #20]
   12f68:	str	r1, [fp, #-28]	; 0xffffffe4
   12f6c:	str	r0, [fp, #-32]	; 0xffffffe0
   12f70:	ldr	r0, [fp, #16]
   12f74:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12f78:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12f7c:	ldr	r1, [fp, #-84]	; 0xffffffac
   12f80:	add	r1, r1, #1
   12f84:	mov	ip, sp
   12f88:	mov	lr, #1
   12f8c:	str	lr, [ip, #4]
   12f90:	str	r1, [ip]
   12f94:	bl	16860 <__assert_fail@plt+0x54dc>
   12f98:	b	12f10 <__assert_fail@plt+0x1b8c>
   12f9c:	b	12fa0 <__assert_fail@plt+0x1c1c>
   12fa0:	b	12fa4 <__assert_fail@plt+0x1c20>
   12fa4:	b	12fa8 <__assert_fail@plt+0x1c24>
   12fa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12fac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12fb0:	ldr	r2, [sp, #12]
   12fb4:	ldr	r3, [r2, #32]
   12fb8:	ldr	r2, [r2, #36]	; 0x24
   12fbc:	umull	ip, lr, r0, r3
   12fc0:	mla	r0, r0, r2, lr
   12fc4:	mla	r0, r1, r3, r0
   12fc8:	str	ip, [sp, #16]
   12fcc:	str	r0, [sp, #20]
   12fd0:	ldr	r0, [sp, #16]
   12fd4:	ldr	r1, [sp, #20]
   12fd8:	ldr	r2, [sp, #12]
   12fdc:	ldr	r3, [r2, #40]	; 0x28
   12fe0:	ldr	r2, [r2, #44]	; 0x2c
   12fe4:	subs	r0, r3, r0
   12fe8:	sbcs	r1, r2, r1
   12fec:	bcs	12ff8 <__assert_fail@plt+0x1c74>
   12ff0:	b	12ff4 <__assert_fail@plt+0x1c70>
   12ff4:	b	13034 <__assert_fail@plt+0x1cb0>
   12ff8:	ldr	r0, [sp, #16]
   12ffc:	ldr	r1, [sp, #20]
   13000:	str	r1, [fp, #-28]	; 0xffffffe4
   13004:	str	r0, [fp, #-32]	; 0xffffffe0
   13008:	ldr	r0, [fp, #16]
   1300c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13010:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13014:	ldr	r1, [fp, #-84]	; 0xffffffac
   13018:	add	r1, r1, #1
   1301c:	mov	ip, sp
   13020:	mov	lr, #2
   13024:	str	lr, [ip, #4]
   13028:	str	r1, [ip]
   1302c:	bl	16860 <__assert_fail@plt+0x54dc>
   13030:	b	12fa8 <__assert_fail@plt+0x1c24>
   13034:	b	13038 <__assert_fail@plt+0x1cb4>
   13038:	b	1303c <__assert_fail@plt+0x1cb8>
   1303c:	b	13040 <__assert_fail@plt+0x1cbc>
   13040:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13044:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13048:	ldr	r2, [sp, #12]
   1304c:	ldr	r3, [r2, #48]	; 0x30
   13050:	ldr	r2, [r2, #52]	; 0x34
   13054:	umull	ip, lr, r0, r3
   13058:	mla	r0, r0, r2, lr
   1305c:	mla	r0, r1, r3, r0
   13060:	str	ip, [sp, #16]
   13064:	str	r0, [sp, #20]
   13068:	ldr	r0, [sp, #16]
   1306c:	ldr	r1, [sp, #20]
   13070:	ldr	r2, [sp, #12]
   13074:	ldr	r3, [r2, #56]	; 0x38
   13078:	ldr	r2, [r2, #60]	; 0x3c
   1307c:	subs	r0, r3, r0
   13080:	sbcs	r1, r2, r1
   13084:	bcs	13090 <__assert_fail@plt+0x1d0c>
   13088:	b	1308c <__assert_fail@plt+0x1d08>
   1308c:	b	130cc <__assert_fail@plt+0x1d48>
   13090:	ldr	r0, [sp, #16]
   13094:	ldr	r1, [sp, #20]
   13098:	str	r1, [fp, #-28]	; 0xffffffe4
   1309c:	str	r0, [fp, #-32]	; 0xffffffe0
   130a0:	ldr	r0, [fp, #16]
   130a4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   130a8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   130ac:	ldr	r1, [fp, #-84]	; 0xffffffac
   130b0:	add	r1, r1, #1
   130b4:	mov	ip, sp
   130b8:	mov	lr, #3
   130bc:	str	lr, [ip, #4]
   130c0:	str	r1, [ip]
   130c4:	bl	16860 <__assert_fail@plt+0x54dc>
   130c8:	b	13040 <__assert_fail@plt+0x1cbc>
   130cc:	b	130d0 <__assert_fail@plt+0x1d4c>
   130d0:	b	130d4 <__assert_fail@plt+0x1d50>
   130d4:	b	130d8 <__assert_fail@plt+0x1d54>
   130d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   130dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130e0:	ldr	r2, [sp, #12]
   130e4:	ldr	r3, [r2, #64]	; 0x40
   130e8:	ldr	r2, [r2, #68]	; 0x44
   130ec:	umull	ip, lr, r0, r3
   130f0:	mla	r0, r0, r2, lr
   130f4:	mla	r0, r1, r3, r0
   130f8:	str	ip, [sp, #16]
   130fc:	str	r0, [sp, #20]
   13100:	ldr	r0, [sp, #16]
   13104:	ldr	r1, [sp, #20]
   13108:	ldr	r2, [sp, #12]
   1310c:	ldr	r3, [r2, #72]	; 0x48
   13110:	ldr	r2, [r2, #76]	; 0x4c
   13114:	subs	r0, r3, r0
   13118:	sbcs	r1, r2, r1
   1311c:	bcs	13128 <__assert_fail@plt+0x1da4>
   13120:	b	13124 <__assert_fail@plt+0x1da0>
   13124:	b	13164 <__assert_fail@plt+0x1de0>
   13128:	ldr	r0, [sp, #16]
   1312c:	ldr	r1, [sp, #20]
   13130:	str	r1, [fp, #-28]	; 0xffffffe4
   13134:	str	r0, [fp, #-32]	; 0xffffffe0
   13138:	ldr	r0, [fp, #16]
   1313c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13140:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13144:	ldr	r1, [fp, #-84]	; 0xffffffac
   13148:	add	r1, r1, #1
   1314c:	mov	ip, sp
   13150:	mov	lr, #4
   13154:	str	lr, [ip, #4]
   13158:	str	r1, [ip]
   1315c:	bl	16860 <__assert_fail@plt+0x54dc>
   13160:	b	130d8 <__assert_fail@plt+0x1d54>
   13164:	b	13168 <__assert_fail@plt+0x1de4>
   13168:	b	1316c <__assert_fail@plt+0x1de8>
   1316c:	b	13170 <__assert_fail@plt+0x1dec>
   13170:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13174:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13178:	ldr	r2, [sp, #12]
   1317c:	ldr	r3, [r2, #80]	; 0x50
   13180:	ldr	r2, [r2, #84]	; 0x54
   13184:	umull	ip, lr, r0, r3
   13188:	mla	r0, r0, r2, lr
   1318c:	mla	r0, r1, r3, r0
   13190:	str	ip, [sp, #16]
   13194:	str	r0, [sp, #20]
   13198:	ldr	r0, [sp, #16]
   1319c:	ldr	r1, [sp, #20]
   131a0:	ldr	r2, [sp, #12]
   131a4:	ldr	r3, [r2, #88]	; 0x58
   131a8:	ldr	r2, [r2, #92]	; 0x5c
   131ac:	subs	r0, r3, r0
   131b0:	sbcs	r1, r2, r1
   131b4:	bcs	131c0 <__assert_fail@plt+0x1e3c>
   131b8:	b	131bc <__assert_fail@plt+0x1e38>
   131bc:	b	131fc <__assert_fail@plt+0x1e78>
   131c0:	ldr	r0, [sp, #16]
   131c4:	ldr	r1, [sp, #20]
   131c8:	str	r1, [fp, #-28]	; 0xffffffe4
   131cc:	str	r0, [fp, #-32]	; 0xffffffe0
   131d0:	ldr	r0, [fp, #16]
   131d4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   131d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   131dc:	ldr	r1, [fp, #-84]	; 0xffffffac
   131e0:	add	r1, r1, #1
   131e4:	mov	ip, sp
   131e8:	mov	lr, #5
   131ec:	str	lr, [ip, #4]
   131f0:	str	r1, [ip]
   131f4:	bl	16860 <__assert_fail@plt+0x54dc>
   131f8:	b	13170 <__assert_fail@plt+0x1dec>
   131fc:	b	13200 <__assert_fail@plt+0x1e7c>
   13200:	b	13204 <__assert_fail@plt+0x1e80>
   13204:	b	13208 <__assert_fail@plt+0x1e84>
   13208:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1320c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13210:	ldr	r2, [sp, #12]
   13214:	ldr	r3, [r2, #96]	; 0x60
   13218:	ldr	r2, [r2, #100]	; 0x64
   1321c:	umull	ip, lr, r0, r3
   13220:	mla	r0, r0, r2, lr
   13224:	mla	r0, r1, r3, r0
   13228:	str	ip, [sp, #16]
   1322c:	str	r0, [sp, #20]
   13230:	ldr	r0, [sp, #16]
   13234:	ldr	r1, [sp, #20]
   13238:	ldr	r2, [sp, #12]
   1323c:	ldr	r3, [r2, #104]	; 0x68
   13240:	ldr	r2, [r2, #108]	; 0x6c
   13244:	subs	r0, r3, r0
   13248:	sbcs	r1, r2, r1
   1324c:	bcs	13258 <__assert_fail@plt+0x1ed4>
   13250:	b	13254 <__assert_fail@plt+0x1ed0>
   13254:	b	13294 <__assert_fail@plt+0x1f10>
   13258:	ldr	r0, [sp, #16]
   1325c:	ldr	r1, [sp, #20]
   13260:	str	r1, [fp, #-28]	; 0xffffffe4
   13264:	str	r0, [fp, #-32]	; 0xffffffe0
   13268:	ldr	r0, [fp, #16]
   1326c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13270:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13274:	ldr	r1, [fp, #-84]	; 0xffffffac
   13278:	add	r1, r1, #1
   1327c:	mov	ip, sp
   13280:	mov	lr, #6
   13284:	str	lr, [ip, #4]
   13288:	str	r1, [ip]
   1328c:	bl	16860 <__assert_fail@plt+0x54dc>
   13290:	b	13208 <__assert_fail@plt+0x1e84>
   13294:	b	13298 <__assert_fail@plt+0x1f14>
   13298:	b	1329c <__assert_fail@plt+0x1f18>
   1329c:	b	132a0 <__assert_fail@plt+0x1f1c>
   132a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132a8:	ldr	r2, [sp, #12]
   132ac:	ldr	r3, [r2, #112]	; 0x70
   132b0:	ldr	r2, [r2, #116]	; 0x74
   132b4:	umull	ip, lr, r0, r3
   132b8:	mla	r0, r0, r2, lr
   132bc:	mla	r0, r1, r3, r0
   132c0:	str	ip, [sp, #16]
   132c4:	str	r0, [sp, #20]
   132c8:	ldr	r0, [sp, #16]
   132cc:	ldr	r1, [sp, #20]
   132d0:	ldr	r2, [sp, #12]
   132d4:	ldr	r3, [r2, #120]	; 0x78
   132d8:	ldr	r2, [r2, #124]	; 0x7c
   132dc:	subs	r0, r3, r0
   132e0:	sbcs	r1, r2, r1
   132e4:	bcs	132f0 <__assert_fail@plt+0x1f6c>
   132e8:	b	132ec <__assert_fail@plt+0x1f68>
   132ec:	b	1332c <__assert_fail@plt+0x1fa8>
   132f0:	ldr	r0, [sp, #16]
   132f4:	ldr	r1, [sp, #20]
   132f8:	str	r1, [fp, #-28]	; 0xffffffe4
   132fc:	str	r0, [fp, #-32]	; 0xffffffe0
   13300:	ldr	r0, [fp, #16]
   13304:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13308:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1330c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13310:	add	r1, r1, #1
   13314:	mov	ip, sp
   13318:	mov	lr, #7
   1331c:	str	lr, [ip, #4]
   13320:	str	r1, [ip]
   13324:	bl	16860 <__assert_fail@plt+0x54dc>
   13328:	b	132a0 <__assert_fail@plt+0x1f1c>
   1332c:	b	13330 <__assert_fail@plt+0x1fac>
   13330:	ldr	r0, [fp, #-84]	; 0xffffffac
   13334:	movw	r1, #28131	; 0x6de3
   13338:	movt	r1, #3
   1333c:	ldrb	r0, [r1, r0]
   13340:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13344:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13348:	adds	r0, r1, r0
   1334c:	adc	r1, r2, #0
   13350:	str	r0, [fp, #-80]	; 0xffffffb0
   13354:	str	r1, [fp, #-76]	; 0xffffffb4
   13358:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1335c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13360:	umull	r2, r3, r0, r0
   13364:	mla	r3, r0, r1, r3
   13368:	mla	r0, r0, r1, r3
   1336c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13370:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13374:	subs	r1, r1, r2
   13378:	sbcs	r0, r3, r0
   1337c:	bcs	13388 <__assert_fail@plt+0x2004>
   13380:	b	13384 <__assert_fail@plt+0x2000>
   13384:	b	1339c <__assert_fail@plt+0x2018>
   13388:	b	1338c <__assert_fail@plt+0x2008>
   1338c:	ldr	r0, [fp, #-84]	; 0xffffffac
   13390:	add	r0, r0, #8
   13394:	str	r0, [fp, #-84]	; 0xffffffac
   13398:	b	12e54 <__assert_fail@plt+0x1ad0>
   1339c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133a4:	sub	sp, fp, #8
   133a8:	pop	{r4, sl, fp, pc}
   133ac:	push	{r4, r5, r6, sl, fp, lr}
   133b0:	add	fp, sp, #16
   133b4:	sub	sp, sp, #728	; 0x2d8
   133b8:	str	r0, [fp, #-32]	; 0xffffffe0
   133bc:	str	r1, [fp, #-28]	; 0xffffffe4
   133c0:	str	r3, [fp, #-36]	; 0xffffffdc
   133c4:	str	r2, [fp, #-40]	; 0xffffffd8
   133c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133d0:	orr	r0, r0, r1
   133d4:	cmp	r0, #0
   133d8:	bne	133f8 <__assert_fail@plt+0x2074>
   133dc:	b	133e0 <__assert_fail@plt+0x205c>
   133e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   133e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   133e8:	bl	168fc <__assert_fail@plt+0x5578>
   133ec:	and	r0, r0, #1
   133f0:	strb	r0, [fp, #-17]	; 0xffffffef
   133f4:	b	1449c <__assert_fail@plt+0x3118>
   133f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13400:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13404:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13408:	orr	r2, r2, r3
   1340c:	subs	r3, r0, #1
   13410:	sbc	ip, r1, #0
   13414:	cmp	r2, #0
   13418:	moveq	r0, r3
   1341c:	cmp	r2, #0
   13420:	moveq	r1, ip
   13424:	str	r0, [fp, #-64]	; 0xffffffc0
   13428:	str	r1, [fp, #-60]	; 0xffffffc4
   1342c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13430:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13434:	subs	r0, r0, #1
   13438:	sbc	r1, r1, #0
   1343c:	str	r0, [fp, #-72]	; 0xffffffb8
   13440:	str	r1, [fp, #-68]	; 0xffffffbc
   13444:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13448:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1344c:	orr	r0, r0, r1
   13450:	cmp	r0, #0
   13454:	bne	1350c <__assert_fail@plt+0x2188>
   13458:	b	1345c <__assert_fail@plt+0x20d8>
   1345c:	b	13460 <__assert_fail@plt+0x20dc>
   13460:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13464:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13468:	str	r1, [sp, #348]	; 0x15c
   1346c:	str	r0, [sp, #344]	; 0x158
   13470:	movw	r0, #0
   13474:	str	r0, [sp, #340]	; 0x154
   13478:	ldrb	r0, [sp, #344]	; 0x158
   1347c:	tst	r0, #1
   13480:	bne	134b0 <__assert_fail@plt+0x212c>
   13484:	b	13488 <__assert_fail@plt+0x2104>
   13488:	ldr	r0, [sp, #344]	; 0x158
   1348c:	ldr	r1, [sp, #348]	; 0x15c
   13490:	lsrs	r1, r1, #1
   13494:	rrx	r0, r0
   13498:	str	r1, [sp, #348]	; 0x15c
   1349c:	str	r0, [sp, #344]	; 0x158
   134a0:	ldr	r0, [sp, #340]	; 0x154
   134a4:	add	r0, r0, #1
   134a8:	str	r0, [sp, #340]	; 0x154
   134ac:	b	13478 <__assert_fail@plt+0x20f4>
   134b0:	ldr	r0, [sp, #340]	; 0x154
   134b4:	str	r0, [fp, #-132]	; 0xffffff7c
   134b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   134bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   134c0:	ldr	r2, [fp, #-132]	; 0xffffff7c
   134c4:	lsr	r0, r0, r2
   134c8:	rsb	r3, r2, #32
   134cc:	orr	r0, r0, r1, lsl r3
   134d0:	sub	r3, r2, #32
   134d4:	cmp	r3, #0
   134d8:	lsrpl	r0, r1, r3
   134dc:	lsr	r1, r1, r2
   134e0:	cmp	r3, #0
   134e4:	movwpl	r1, #0
   134e8:	str	r1, [fp, #-52]	; 0xffffffcc
   134ec:	str	r0, [fp, #-56]	; 0xffffffc8
   134f0:	mov	r0, #0
   134f4:	str	r0, [fp, #-44]	; 0xffffffd4
   134f8:	str	r0, [fp, #-48]	; 0xffffffd0
   134fc:	ldr	r0, [fp, #-132]	; 0xffffff7c
   13500:	add	r0, r0, #64	; 0x40
   13504:	str	r0, [fp, #-132]	; 0xffffff7c
   13508:	b	13614 <__assert_fail@plt+0x2290>
   1350c:	b	13510 <__assert_fail@plt+0x218c>
   13510:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13514:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13518:	str	r1, [sp, #332]	; 0x14c
   1351c:	str	r0, [sp, #328]	; 0x148
   13520:	movw	r0, #0
   13524:	str	r0, [sp, #324]	; 0x144
   13528:	ldrb	r0, [sp, #328]	; 0x148
   1352c:	tst	r0, #1
   13530:	bne	13560 <__assert_fail@plt+0x21dc>
   13534:	b	13538 <__assert_fail@plt+0x21b4>
   13538:	ldr	r0, [sp, #328]	; 0x148
   1353c:	ldr	r1, [sp, #332]	; 0x14c
   13540:	lsrs	r1, r1, #1
   13544:	rrx	r0, r0
   13548:	str	r1, [sp, #332]	; 0x14c
   1354c:	str	r0, [sp, #328]	; 0x148
   13550:	ldr	r0, [sp, #324]	; 0x144
   13554:	add	r0, r0, #1
   13558:	str	r0, [sp, #324]	; 0x144
   1355c:	b	13528 <__assert_fail@plt+0x21a4>
   13560:	ldr	r0, [sp, #324]	; 0x144
   13564:	str	r0, [fp, #-132]	; 0xffffff7c
   13568:	b	1356c <__assert_fail@plt+0x21e8>
   1356c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13570:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13574:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13578:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1357c:	ldr	ip, [fp, #-132]	; 0xffffff7c
   13580:	rsb	lr, ip, #64	; 0x40
   13584:	lsl	r4, r2, lr
   13588:	rsb	r5, ip, #32
   1358c:	cmp	r5, #0
   13590:	movwpl	r4, #0
   13594:	rsb	r6, lr, #32
   13598:	lsr	r6, r2, r6
   1359c:	orr	r3, r6, r3, lsl lr
   135a0:	cmp	r5, #0
   135a4:	lslpl	r3, r2, r5
   135a8:	lsr	r0, r0, ip
   135ac:	orr	r0, r0, r1, lsl r5
   135b0:	sub	r2, ip, #32
   135b4:	cmp	r2, #0
   135b8:	lsrpl	r0, r1, r2
   135bc:	lsr	r1, r1, ip
   135c0:	cmp	r2, #0
   135c4:	movwpl	r1, #0
   135c8:	orr	r1, r3, r1
   135cc:	orr	r0, r4, r0
   135d0:	str	r0, [fp, #-56]	; 0xffffffc8
   135d4:	str	r1, [fp, #-52]	; 0xffffffcc
   135d8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   135dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   135e0:	ldr	r2, [fp, #-132]	; 0xffffff7c
   135e4:	lsr	r0, r0, r2
   135e8:	rsb	r3, r2, #32
   135ec:	orr	r0, r0, r1, lsl r3
   135f0:	sub	r3, r2, #32
   135f4:	cmp	r3, #0
   135f8:	lsrpl	r0, r1, r3
   135fc:	lsr	r1, r1, r2
   13600:	cmp	r3, #0
   13604:	movwpl	r1, #0
   13608:	str	r1, [fp, #-44]	; 0xffffffd4
   1360c:	str	r0, [fp, #-48]	; 0xffffffd0
   13610:	b	13614 <__assert_fail@plt+0x2290>
   13614:	mov	r0, #0
   13618:	str	r0, [sp, #316]	; 0x13c
   1361c:	mov	r0, #2
   13620:	str	r0, [sp, #312]	; 0x138
   13624:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13628:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1362c:	str	r1, [sp, #308]	; 0x134
   13630:	str	r0, [sp, #304]	; 0x130
   13634:	ldr	r0, [sp, #304]	; 0x130
   13638:	ldr	r1, [sp, #308]	; 0x134
   1363c:	lsrs	r1, r1, #1
   13640:	rrx	r0, r0
   13644:	and	r0, r0, #127	; 0x7f
   13648:	movw	r2, #28806	; 0x7086
   1364c:	movt	r2, #3
   13650:	ldrb	r0, [r2, r0]
   13654:	mov	r2, #0
   13658:	str	r2, [sp, #300]	; 0x12c
   1365c:	str	r0, [sp, #296]	; 0x128
   13660:	ldr	r0, [sp, #296]	; 0x128
   13664:	ldr	r2, [sp, #300]	; 0x12c
   13668:	lsl	r3, r2, #1
   1366c:	orr	r3, r3, r0, lsr #31
   13670:	umull	ip, lr, r0, r0
   13674:	mla	lr, r0, r2, lr
   13678:	mla	r2, r0, r2, lr
   1367c:	ldr	lr, [sp, #304]	; 0x130
   13680:	ldr	r4, [sp, #308]	; 0x134
   13684:	umull	r5, r6, ip, lr
   13688:	mla	ip, ip, r4, r6
   1368c:	mla	r2, r2, lr, ip
   13690:	rsbs	r0, r5, r0, lsl #1
   13694:	sbc	r2, r3, r2
   13698:	str	r0, [sp, #296]	; 0x128
   1369c:	str	r2, [sp, #300]	; 0x12c
   136a0:	ldr	r0, [sp, #296]	; 0x128
   136a4:	ldr	r2, [sp, #300]	; 0x12c
   136a8:	lsl	r3, r2, #1
   136ac:	orr	r3, r3, r0, lsr #31
   136b0:	umull	ip, lr, r0, r0
   136b4:	mla	lr, r0, r2, lr
   136b8:	mla	r2, r0, r2, lr
   136bc:	ldr	lr, [sp, #304]	; 0x130
   136c0:	ldr	r4, [sp, #308]	; 0x134
   136c4:	umull	r5, r6, ip, lr
   136c8:	mla	ip, ip, r4, r6
   136cc:	mla	r2, r2, lr, ip
   136d0:	rsbs	r0, r5, r0, lsl #1
   136d4:	sbc	r2, r3, r2
   136d8:	str	r0, [sp, #296]	; 0x128
   136dc:	str	r2, [sp, #300]	; 0x12c
   136e0:	ldr	r0, [sp, #296]	; 0x128
   136e4:	ldr	r2, [sp, #300]	; 0x12c
   136e8:	lsl	r3, r2, #1
   136ec:	orr	r3, r3, r0, lsr #31
   136f0:	umull	ip, lr, r0, r0
   136f4:	mla	lr, r0, r2, lr
   136f8:	mla	r2, r0, r2, lr
   136fc:	ldr	lr, [sp, #304]	; 0x130
   13700:	ldr	r4, [sp, #308]	; 0x134
   13704:	umull	r5, r6, ip, lr
   13708:	mla	ip, ip, r4, r6
   1370c:	mla	r2, r2, lr, ip
   13710:	rsbs	r0, r5, r0, lsl #1
   13714:	sbc	r2, r3, r2
   13718:	str	r0, [sp, #296]	; 0x128
   1371c:	str	r2, [sp, #300]	; 0x12c
   13720:	ldr	r0, [sp, #296]	; 0x128
   13724:	ldr	r2, [sp, #300]	; 0x12c
   13728:	str	r2, [fp, #-124]	; 0xffffff84
   1372c:	str	r0, [fp, #-128]	; 0xffffff80
   13730:	b	13734 <__assert_fail@plt+0x23b0>
   13734:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13738:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1373c:	subs	r0, r0, #2
   13740:	sbcs	r1, r1, #0
   13744:	bcc	13774 <__assert_fail@plt+0x23f0>
   13748:	b	1374c <__assert_fail@plt+0x23c8>
   1374c:	mov	r0, #0
   13750:	str	r0, [sp, #292]	; 0x124
   13754:	mov	r1, #1
   13758:	str	r1, [sp, #288]	; 0x120
   1375c:	str	r0, [sp, #284]	; 0x11c
   13760:	str	r0, [sp, #280]	; 0x118
   13764:	str	r0, [sp, #276]	; 0x114
   13768:	mov	r0, #64	; 0x40
   1376c:	str	r0, [sp, #272]	; 0x110
   13770:	b	13798 <__assert_fail@plt+0x2414>
   13774:	mov	r0, #0
   13778:	str	r0, [sp, #292]	; 0x124
   1377c:	str	r0, [sp, #288]	; 0x120
   13780:	str	r0, [sp, #284]	; 0x11c
   13784:	mov	r1, #1
   13788:	str	r1, [sp, #280]	; 0x118
   1378c:	str	r0, [sp, #276]	; 0x114
   13790:	mov	r0, #128	; 0x80
   13794:	str	r0, [sp, #272]	; 0x110
   13798:	b	1379c <__assert_fail@plt+0x2418>
   1379c:	ldr	r0, [sp, #272]	; 0x110
   137a0:	ldr	r1, [sp, #276]	; 0x114
   137a4:	subs	r2, r0, #1
   137a8:	sbc	r3, r1, #0
   137ac:	str	r2, [sp, #272]	; 0x110
   137b0:	str	r3, [sp, #276]	; 0x114
   137b4:	orr	r0, r0, r1
   137b8:	cmp	r0, #0
   137bc:	beq	138f8 <__assert_fail@plt+0x2574>
   137c0:	b	137c4 <__assert_fail@plt+0x2440>
   137c4:	b	137c8 <__assert_fail@plt+0x2444>
   137c8:	ldr	r0, [sp, #288]	; 0x120
   137cc:	ldr	r1, [sp, #292]	; 0x124
   137d0:	lsl	r1, r1, #1
   137d4:	orr	r1, r1, r0, lsr #31
   137d8:	lsl	r0, r0, #1
   137dc:	ldr	r2, [sp, #284]	; 0x11c
   137e0:	orr	r0, r0, r2, lsr #31
   137e4:	str	r1, [sp, #292]	; 0x124
   137e8:	str	r0, [sp, #288]	; 0x120
   137ec:	ldr	r0, [sp, #280]	; 0x118
   137f0:	ldr	r1, [sp, #284]	; 0x11c
   137f4:	lsl	r1, r1, #1
   137f8:	orr	r1, r1, r0, lsr #31
   137fc:	lsl	r0, r0, #1
   13800:	str	r0, [sp, #280]	; 0x118
   13804:	str	r1, [sp, #284]	; 0x11c
   13808:	ldr	r0, [sp, #288]	; 0x120
   1380c:	ldr	r1, [sp, #292]	; 0x124
   13810:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13814:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13818:	subs	r0, r2, r0
   1381c:	sbcs	r1, r3, r1
   13820:	bcc	13870 <__assert_fail@plt+0x24ec>
   13824:	b	13828 <__assert_fail@plt+0x24a4>
   13828:	ldr	r0, [sp, #288]	; 0x120
   1382c:	ldr	r1, [sp, #292]	; 0x124
   13830:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13834:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13838:	eor	r1, r1, r3
   1383c:	eor	r0, r0, r2
   13840:	orr	r0, r0, r1
   13844:	cmp	r0, #0
   13848:	bne	138f4 <__assert_fail@plt+0x2570>
   1384c:	b	13850 <__assert_fail@plt+0x24cc>
   13850:	ldr	r0, [sp, #280]	; 0x118
   13854:	ldr	r1, [sp, #284]	; 0x11c
   13858:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1385c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13860:	subs	r0, r0, r2
   13864:	sbcs	r1, r1, r3
   13868:	bcc	138f4 <__assert_fail@plt+0x2570>
   1386c:	b	13870 <__assert_fail@plt+0x24ec>
   13870:	b	13874 <__assert_fail@plt+0x24f0>
   13874:	ldr	r0, [sp, #280]	; 0x118
   13878:	ldr	r1, [sp, #284]	; 0x11c
   1387c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13880:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13884:	subs	r0, r0, r2
   13888:	sbcs	r1, r1, r3
   1388c:	mov	r2, #0
   13890:	mov	r3, r2
   13894:	movwcc	r3, #1
   13898:	str	r2, [sp, #268]	; 0x10c
   1389c:	str	r3, [sp, #264]	; 0x108
   138a0:	ldr	r2, [sp, #280]	; 0x118
   138a4:	ldr	r3, [sp, #284]	; 0x11c
   138a8:	ldr	ip, [fp, #-40]	; 0xffffffd8
   138ac:	ldr	lr, [fp, #-36]	; 0xffffffdc
   138b0:	subs	r2, r2, ip
   138b4:	sbc	r3, r3, lr
   138b8:	str	r2, [sp, #280]	; 0x118
   138bc:	str	r3, [sp, #284]	; 0x11c
   138c0:	ldr	r2, [sp, #288]	; 0x120
   138c4:	ldr	r3, [sp, #292]	; 0x124
   138c8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   138cc:	ldr	lr, [fp, #-28]	; 0xffffffe4
   138d0:	subs	r2, r2, ip
   138d4:	sbc	r3, r3, lr
   138d8:	ldr	ip, [sp, #264]	; 0x108
   138dc:	ldr	lr, [sp, #268]	; 0x10c
   138e0:	subs	r2, r2, ip
   138e4:	sbc	r3, r3, lr
   138e8:	str	r2, [sp, #288]	; 0x120
   138ec:	str	r3, [sp, #292]	; 0x124
   138f0:	b	138f4 <__assert_fail@plt+0x2570>
   138f4:	b	1379c <__assert_fail@plt+0x2418>
   138f8:	ldr	r0, [sp, #288]	; 0x120
   138fc:	ldr	r1, [sp, #292]	; 0x124
   13900:	str	r1, [fp, #-92]	; 0xffffffa4
   13904:	str	r0, [fp, #-96]	; 0xffffffa0
   13908:	ldr	r0, [sp, #280]	; 0x118
   1390c:	ldr	r1, [sp, #284]	; 0x11c
   13910:	str	r1, [fp, #-100]	; 0xffffff9c
   13914:	str	r0, [fp, #-104]	; 0xffffff98
   13918:	b	1391c <__assert_fail@plt+0x2598>
   1391c:	b	13920 <__assert_fail@plt+0x259c>
   13920:	ldr	r0, [fp, #-104]	; 0xffffff98
   13924:	ldr	r1, [fp, #-100]	; 0xffffff9c
   13928:	adds	r0, r0, r0
   1392c:	adc	r1, r1, r1
   13930:	str	r0, [sp, #256]	; 0x100
   13934:	str	r1, [sp, #260]	; 0x104
   13938:	ldr	r0, [fp, #-104]	; 0xffffff98
   1393c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   13940:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13944:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13948:	adds	r2, r2, r2
   1394c:	adc	r3, r3, r3
   13950:	ldr	ip, [sp, #256]	; 0x100
   13954:	ldr	lr, [sp, #260]	; 0x104
   13958:	subs	r0, ip, r0
   1395c:	sbcs	r1, lr, r1
   13960:	mov	ip, #0
   13964:	movwcc	ip, #1
   13968:	adds	lr, r2, #1
   1396c:	adc	r4, r3, #0
   13970:	cmp	ip, #0
   13974:	movne	r3, r4
   13978:	cmp	ip, #0
   1397c:	movne	r2, lr
   13980:	str	r3, [fp, #-76]	; 0xffffffb4
   13984:	str	r2, [fp, #-80]	; 0xffffffb0
   13988:	ldr	r2, [sp, #256]	; 0x100
   1398c:	ldr	r3, [sp, #260]	; 0x104
   13990:	str	r3, [fp, #-84]	; 0xffffffac
   13994:	str	r2, [fp, #-88]	; 0xffffffa8
   13998:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1399c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   139a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   139a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   139a8:	subs	r0, r2, r0
   139ac:	sbcs	r1, r3, r1
   139b0:	bcc	13a00 <__assert_fail@plt+0x267c>
   139b4:	b	139b8 <__assert_fail@plt+0x2634>
   139b8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   139bc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   139c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   139c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   139c8:	eor	r1, r1, r3
   139cc:	eor	r0, r0, r2
   139d0:	orr	r0, r0, r1
   139d4:	cmp	r0, #0
   139d8:	bne	13a84 <__assert_fail@plt+0x2700>
   139dc:	b	139e0 <__assert_fail@plt+0x265c>
   139e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   139e4:	ldr	r1, [fp, #-84]	; 0xffffffac
   139e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   139ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   139f0:	subs	r0, r0, r2
   139f4:	sbcs	r1, r1, r3
   139f8:	bcc	13a84 <__assert_fail@plt+0x2700>
   139fc:	b	13a00 <__assert_fail@plt+0x267c>
   13a00:	b	13a04 <__assert_fail@plt+0x2680>
   13a04:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13a08:	ldr	r1, [fp, #-84]	; 0xffffffac
   13a0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13a10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13a14:	subs	r0, r0, r2
   13a18:	sbcs	r1, r1, r3
   13a1c:	mov	r2, #0
   13a20:	mov	r3, r2
   13a24:	movwcc	r3, #1
   13a28:	str	r2, [sp, #252]	; 0xfc
   13a2c:	str	r3, [sp, #248]	; 0xf8
   13a30:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13a34:	ldr	r3, [fp, #-84]	; 0xffffffac
   13a38:	ldr	ip, [fp, #-40]	; 0xffffffd8
   13a3c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13a40:	subs	r2, r2, ip
   13a44:	sbc	r3, r3, lr
   13a48:	str	r2, [fp, #-88]	; 0xffffffa8
   13a4c:	str	r3, [fp, #-84]	; 0xffffffac
   13a50:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13a54:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13a58:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13a5c:	ldr	lr, [fp, #-28]	; 0xffffffe4
   13a60:	subs	r2, r2, ip
   13a64:	sbc	r3, r3, lr
   13a68:	ldr	ip, [sp, #248]	; 0xf8
   13a6c:	ldr	lr, [sp, #252]	; 0xfc
   13a70:	subs	r2, r2, ip
   13a74:	sbc	r3, r3, lr
   13a78:	str	r2, [fp, #-80]	; 0xffffffb0
   13a7c:	str	r3, [fp, #-76]	; 0xffffffb4
   13a80:	b	13a84 <__assert_fail@plt+0x2700>
   13a84:	b	13a88 <__assert_fail@plt+0x2704>
   13a88:	sub	r0, fp, #104	; 0x68
   13a8c:	sub	r1, fp, #56	; 0x38
   13a90:	sub	r2, fp, #88	; 0x58
   13a94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13a98:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13a9c:	str	ip, [fp, #-116]	; 0xffffff8c
   13aa0:	str	r3, [fp, #-120]	; 0xffffff88
   13aa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13aa8:	ldr	ip, [fp, #-28]	; 0xffffffe4
   13aac:	str	ip, [fp, #-108]	; 0xffffff94
   13ab0:	str	r3, [fp, #-112]	; 0xffffff90
   13ab4:	sub	r3, fp, #120	; 0x78
   13ab8:	ldr	ip, [fp, #-128]	; 0xffffff80
   13abc:	ldr	lr, [fp, #-124]	; 0xffffff84
   13ac0:	ldr	r4, [fp, #-132]	; 0xffffff7c
   13ac4:	mov	r5, sp
   13ac8:	str	r0, [r5, #12]
   13acc:	str	r4, [r5, #8]
   13ad0:	str	r1, [r5, #4]
   13ad4:	str	r2, [r5]
   13ad8:	mov	r0, r3
   13adc:	mov	r2, ip
   13ae0:	mov	r3, lr
   13ae4:	bl	17404 <__assert_fail@plt+0x6080>
   13ae8:	tst	r0, #1
   13aec:	bne	13b00 <__assert_fail@plt+0x277c>
   13af0:	movw	r0, #0
   13af4:	and	r0, r0, #1
   13af8:	strb	r0, [fp, #-17]	; 0xffffffef
   13afc:	b	1449c <__assert_fail@plt+0x3118>
   13b00:	movw	r0, #37144	; 0x9118
   13b04:	movt	r0, #4
   13b08:	ldrb	r0, [r0]
   13b0c:	tst	r0, #1
   13b10:	beq	13b34 <__assert_fail@plt+0x27b0>
   13b14:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13b18:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13b1c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13b20:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13b24:	mov	ip, sp
   13b28:	add	lr, sp, #352	; 0x160
   13b2c:	str	lr, [ip]
   13b30:	bl	126e4 <__assert_fail@plt+0x1360>
   13b34:	movw	r0, #0
   13b38:	str	r0, [sp, #244]	; 0xf4
   13b3c:	ldr	r0, [sp, #244]	; 0xf4
   13b40:	cmp	r0, #668	; 0x29c
   13b44:	bcs	14478 <__assert_fail@plt+0x30f4>
   13b48:	movw	r0, #37144	; 0x9118
   13b4c:	movt	r0, #4
   13b50:	ldrb	r0, [r0]
   13b54:	tst	r0, #1
   13b58:	beq	141bc <__assert_fail@plt+0x2e38>
   13b5c:	mov	r0, #1
   13b60:	strb	r0, [sp, #243]	; 0xf3
   13b64:	ldr	r0, [sp, #360]	; 0x168
   13b68:	ldr	r1, [sp, #364]	; 0x16c
   13b6c:	orr	r0, r0, r1
   13b70:	cmp	r0, #0
   13b74:	beq	13d5c <__assert_fail@plt+0x29d8>
   13b78:	b	13b7c <__assert_fail@plt+0x27f8>
   13b7c:	b	13b80 <__assert_fail@plt+0x27fc>
   13b80:	ldr	r0, [sp, #352]	; 0x160
   13b84:	ldr	r1, [sp, #356]	; 0x164
   13b88:	str	r1, [sp, #196]	; 0xc4
   13b8c:	str	r0, [sp, #192]	; 0xc0
   13b90:	ldr	r0, [sp, #192]	; 0xc0
   13b94:	ldr	r1, [sp, #196]	; 0xc4
   13b98:	lsrs	r1, r1, #1
   13b9c:	rrx	r0, r0
   13ba0:	and	r0, r0, #127	; 0x7f
   13ba4:	movw	r2, #28806	; 0x7086
   13ba8:	movt	r2, #3
   13bac:	ldrb	r0, [r2, r0]
   13bb0:	mov	r2, #0
   13bb4:	str	r2, [sp, #188]	; 0xbc
   13bb8:	str	r0, [sp, #184]	; 0xb8
   13bbc:	ldr	r0, [sp, #184]	; 0xb8
   13bc0:	ldr	r2, [sp, #188]	; 0xbc
   13bc4:	lsl	r3, r2, #1
   13bc8:	orr	r3, r3, r0, lsr #31
   13bcc:	umull	ip, lr, r0, r0
   13bd0:	mla	lr, r0, r2, lr
   13bd4:	mla	r2, r0, r2, lr
   13bd8:	ldr	lr, [sp, #192]	; 0xc0
   13bdc:	ldr	r4, [sp, #196]	; 0xc4
   13be0:	umull	r5, r6, ip, lr
   13be4:	mla	ip, ip, r4, r6
   13be8:	mla	r2, r2, lr, ip
   13bec:	rsbs	r0, r5, r0, lsl #1
   13bf0:	sbc	r2, r3, r2
   13bf4:	str	r0, [sp, #184]	; 0xb8
   13bf8:	str	r2, [sp, #188]	; 0xbc
   13bfc:	ldr	r0, [sp, #184]	; 0xb8
   13c00:	ldr	r2, [sp, #188]	; 0xbc
   13c04:	lsl	r3, r2, #1
   13c08:	orr	r3, r3, r0, lsr #31
   13c0c:	umull	ip, lr, r0, r0
   13c10:	mla	lr, r0, r2, lr
   13c14:	mla	r2, r0, r2, lr
   13c18:	ldr	lr, [sp, #192]	; 0xc0
   13c1c:	ldr	r4, [sp, #196]	; 0xc4
   13c20:	umull	r5, r6, ip, lr
   13c24:	mla	ip, ip, r4, r6
   13c28:	mla	r2, r2, lr, ip
   13c2c:	rsbs	r0, r5, r0, lsl #1
   13c30:	sbc	r2, r3, r2
   13c34:	str	r0, [sp, #184]	; 0xb8
   13c38:	str	r2, [sp, #188]	; 0xbc
   13c3c:	ldr	r0, [sp, #184]	; 0xb8
   13c40:	ldr	r2, [sp, #188]	; 0xbc
   13c44:	lsl	r3, r2, #1
   13c48:	orr	r3, r3, r0, lsr #31
   13c4c:	umull	ip, lr, r0, r0
   13c50:	mla	lr, r0, r2, lr
   13c54:	mla	r2, r0, r2, lr
   13c58:	ldr	lr, [sp, #192]	; 0xc0
   13c5c:	ldr	r4, [sp, #196]	; 0xc4
   13c60:	umull	r5, r6, ip, lr
   13c64:	mla	ip, ip, r4, r6
   13c68:	mla	r2, r2, lr, ip
   13c6c:	rsbs	r0, r5, r0, lsl #1
   13c70:	sbc	r2, r3, r2
   13c74:	str	r0, [sp, #184]	; 0xb8
   13c78:	str	r2, [sp, #188]	; 0xbc
   13c7c:	ldr	r0, [sp, #184]	; 0xb8
   13c80:	ldr	r2, [sp, #188]	; 0xbc
   13c84:	str	r2, [sp, #204]	; 0xcc
   13c88:	str	r0, [sp, #200]	; 0xc8
   13c8c:	ldr	r0, [sp, #200]	; 0xc8
   13c90:	ldr	r1, [sp, #204]	; 0xcc
   13c94:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13c98:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13c9c:	umull	ip, lr, r0, r2
   13ca0:	mla	r0, r0, r3, lr
   13ca4:	mla	r0, r1, r2, r0
   13ca8:	str	ip, [sp, #224]	; 0xe0
   13cac:	str	r0, [sp, #228]	; 0xe4
   13cb0:	mov	r0, #0
   13cb4:	str	r0, [sp, #236]	; 0xec
   13cb8:	str	r0, [sp, #232]	; 0xe8
   13cbc:	add	r0, sp, #208	; 0xd0
   13cc0:	add	r0, r0, #8
   13cc4:	ldr	r1, [fp, #-128]	; 0xffffff80
   13cc8:	ldr	r2, [fp, #-124]	; 0xffffff84
   13ccc:	mov	r3, sp
   13cd0:	sub	ip, fp, #104	; 0x68
   13cd4:	str	ip, [r3, #8]
   13cd8:	str	r2, [r3, #4]
   13cdc:	str	r1, [r3]
   13ce0:	sub	r1, fp, #88	; 0x58
   13ce4:	add	r2, sp, #224	; 0xe0
   13ce8:	sub	r3, fp, #120	; 0x78
   13cec:	bl	17794 <__assert_fail@plt+0x6410>
   13cf0:	str	r1, [sp, #212]	; 0xd4
   13cf4:	str	r0, [sp, #208]	; 0xd0
   13cf8:	ldr	r0, [sp, #208]	; 0xd0
   13cfc:	ldr	r1, [sp, #212]	; 0xd4
   13d00:	ldr	r2, [fp, #-104]	; 0xffffff98
   13d04:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13d08:	eor	r1, r1, r3
   13d0c:	eor	r0, r0, r2
   13d10:	orr	r0, r0, r1
   13d14:	mov	r1, #1
   13d18:	cmp	r0, #0
   13d1c:	str	r1, [sp, #28]
   13d20:	bne	13d50 <__assert_fail@plt+0x29cc>
   13d24:	b	13d28 <__assert_fail@plt+0x29a4>
   13d28:	ldr	r0, [sp, #216]	; 0xd8
   13d2c:	ldr	r1, [sp, #220]	; 0xdc
   13d30:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13d34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13d38:	eor	r1, r1, r3
   13d3c:	eor	r0, r0, r2
   13d40:	orr	r0, r0, r1
   13d44:	cmp	r0, #0
   13d48:	movwne	r0, #1
   13d4c:	str	r0, [sp, #28]
   13d50:	ldr	r0, [sp, #28]
   13d54:	and	r0, r0, #1
   13d58:	strb	r0, [sp, #243]	; 0xf3
   13d5c:	movw	r0, #0
   13d60:	str	r0, [sp, #180]	; 0xb4
   13d64:	ldr	r0, [sp, #180]	; 0xb4
   13d68:	ldrb	r1, [sp, #602]	; 0x25a
   13d6c:	cmp	r0, r1
   13d70:	movw	r0, #0
   13d74:	str	r0, [sp, #24]
   13d78:	bcs	13d84 <__assert_fail@plt+0x2a00>
   13d7c:	ldrb	r0, [sp, #243]	; 0xf3
   13d80:	str	r0, [sp, #24]
   13d84:	ldr	r0, [sp, #24]
   13d88:	tst	r0, #1
   13d8c:	beq	141b8 <__assert_fail@plt+0x2e34>
   13d90:	ldr	r0, [sp, #180]	; 0xb4
   13d94:	add	r1, sp, #352	; 0x160
   13d98:	add	r0, r1, r0, lsl #3
   13d9c:	ldr	r1, [r0, #16]
   13da0:	ldr	r0, [r0, #20]
   13da4:	eor	r1, r1, #2
   13da8:	orr	r0, r1, r0
   13dac:	cmp	r0, #0
   13db0:	bne	13df8 <__assert_fail@plt+0x2a74>
   13db4:	b	13db8 <__assert_fail@plt+0x2a34>
   13db8:	b	13dbc <__assert_fail@plt+0x2a38>
   13dbc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13dc0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13dc4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13dc8:	lsrs	r1, r1, #1
   13dcc:	rrx	r0, r0
   13dd0:	orr	r1, r1, r2, lsl #31
   13dd4:	str	r0, [sp, #224]	; 0xe0
   13dd8:	str	r1, [sp, #228]	; 0xe4
   13ddc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13de0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13de4:	lsrs	r1, r1, #1
   13de8:	rrx	r0, r0
   13dec:	str	r1, [sp, #236]	; 0xec
   13df0:	str	r0, [sp, #232]	; 0xe8
   13df4:	b	14108 <__assert_fail@plt+0x2d84>
   13df8:	b	13dfc <__assert_fail@plt+0x2a78>
   13dfc:	b	13e00 <__assert_fail@plt+0x2a7c>
   13e00:	ldr	r0, [sp, #180]	; 0xb4
   13e04:	add	r1, sp, #352	; 0x160
   13e08:	add	r0, r1, r0, lsl #3
   13e0c:	ldr	r1, [r0, #16]
   13e10:	ldr	r0, [r0, #20]
   13e14:	str	r0, [sp, #156]	; 0x9c
   13e18:	str	r1, [sp, #152]	; 0x98
   13e1c:	ldr	r0, [sp, #152]	; 0x98
   13e20:	ldr	r1, [sp, #156]	; 0x9c
   13e24:	lsrs	r1, r1, #1
   13e28:	rrx	r0, r0
   13e2c:	and	r0, r0, #127	; 0x7f
   13e30:	movw	r2, #28806	; 0x7086
   13e34:	movt	r2, #3
   13e38:	ldrb	r0, [r2, r0]
   13e3c:	mov	r2, #0
   13e40:	str	r2, [sp, #148]	; 0x94
   13e44:	str	r0, [sp, #144]	; 0x90
   13e48:	ldr	r0, [sp, #144]	; 0x90
   13e4c:	ldr	r2, [sp, #148]	; 0x94
   13e50:	lsl	r3, r2, #1
   13e54:	orr	r3, r3, r0, lsr #31
   13e58:	umull	ip, lr, r0, r0
   13e5c:	mla	lr, r0, r2, lr
   13e60:	mla	r2, r0, r2, lr
   13e64:	ldr	lr, [sp, #152]	; 0x98
   13e68:	ldr	r4, [sp, #156]	; 0x9c
   13e6c:	umull	r5, r6, ip, lr
   13e70:	mla	ip, ip, r4, r6
   13e74:	mla	r2, r2, lr, ip
   13e78:	rsbs	r0, r5, r0, lsl #1
   13e7c:	sbc	r2, r3, r2
   13e80:	str	r0, [sp, #144]	; 0x90
   13e84:	str	r2, [sp, #148]	; 0x94
   13e88:	ldr	r0, [sp, #144]	; 0x90
   13e8c:	ldr	r2, [sp, #148]	; 0x94
   13e90:	lsl	r3, r2, #1
   13e94:	orr	r3, r3, r0, lsr #31
   13e98:	umull	ip, lr, r0, r0
   13e9c:	mla	lr, r0, r2, lr
   13ea0:	mla	r2, r0, r2, lr
   13ea4:	ldr	lr, [sp, #152]	; 0x98
   13ea8:	ldr	r4, [sp, #156]	; 0x9c
   13eac:	umull	r5, r6, ip, lr
   13eb0:	mla	ip, ip, r4, r6
   13eb4:	mla	r2, r2, lr, ip
   13eb8:	rsbs	r0, r5, r0, lsl #1
   13ebc:	sbc	r2, r3, r2
   13ec0:	str	r0, [sp, #144]	; 0x90
   13ec4:	str	r2, [sp, #148]	; 0x94
   13ec8:	ldr	r0, [sp, #144]	; 0x90
   13ecc:	ldr	r2, [sp, #148]	; 0x94
   13ed0:	lsl	r3, r2, #1
   13ed4:	orr	r3, r3, r0, lsr #31
   13ed8:	umull	ip, lr, r0, r0
   13edc:	mla	lr, r0, r2, lr
   13ee0:	mla	r2, r0, r2, lr
   13ee4:	ldr	lr, [sp, #152]	; 0x98
   13ee8:	ldr	r4, [sp, #156]	; 0x9c
   13eec:	umull	r5, r6, ip, lr
   13ef0:	mla	ip, ip, r4, r6
   13ef4:	mla	r2, r2, lr, ip
   13ef8:	rsbs	r0, r5, r0, lsl #1
   13efc:	sbc	r2, r3, r2
   13f00:	str	r0, [sp, #144]	; 0x90
   13f04:	str	r2, [sp, #148]	; 0x94
   13f08:	ldr	r0, [sp, #144]	; 0x90
   13f0c:	ldr	r2, [sp, #148]	; 0x94
   13f10:	str	r2, [sp, #172]	; 0xac
   13f14:	str	r0, [sp, #168]	; 0xa8
   13f18:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13f1c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13f20:	ldr	r2, [sp, #168]	; 0xa8
   13f24:	ldr	r3, [sp, #172]	; 0xac
   13f28:	umull	ip, lr, r0, r2
   13f2c:	mla	r0, r0, r3, lr
   13f30:	mla	r0, r1, r2, r0
   13f34:	str	ip, [sp, #160]	; 0xa0
   13f38:	str	r0, [sp, #164]	; 0xa4
   13f3c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13f40:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13f44:	ldr	r2, [sp, #180]	; 0xb4
   13f48:	add	r3, sp, #352	; 0x160
   13f4c:	add	r2, r3, r2, lsl #3
   13f50:	ldr	r3, [r2, #16]
   13f54:	ldr	r2, [r2, #20]
   13f58:	subs	r0, r0, r3
   13f5c:	sbcs	r1, r1, r2
   13f60:	bcc	140e4 <__assert_fail@plt+0x2d60>
   13f64:	b	13f68 <__assert_fail@plt+0x2be4>
   13f68:	b	13f6c <__assert_fail@plt+0x2be8>
   13f6c:	ldr	r0, [sp, #160]	; 0xa0
   13f70:	ldr	r1, [sp, #164]	; 0xa4
   13f74:	str	r1, [sp, #76]	; 0x4c
   13f78:	str	r0, [sp, #72]	; 0x48
   13f7c:	ldr	r0, [sp, #180]	; 0xb4
   13f80:	add	r1, sp, #352	; 0x160
   13f84:	add	r0, r1, r0, lsl #3
   13f88:	ldr	r1, [r0, #16]
   13f8c:	ldr	r0, [r0, #20]
   13f90:	str	r0, [sp, #68]	; 0x44
   13f94:	str	r1, [sp, #64]	; 0x40
   13f98:	ldr	r0, [sp, #72]	; 0x48
   13f9c:	str	r0, [sp, #92]	; 0x5c
   13fa0:	ldr	r0, [sp, #76]	; 0x4c
   13fa4:	str	r0, [sp, #84]	; 0x54
   13fa8:	ldr	r0, [sp, #64]	; 0x40
   13fac:	str	r0, [sp, #88]	; 0x58
   13fb0:	ldr	r0, [sp, #68]	; 0x44
   13fb4:	str	r0, [sp, #80]	; 0x50
   13fb8:	ldr	r0, [sp, #92]	; 0x5c
   13fbc:	ldr	r1, [sp, #88]	; 0x58
   13fc0:	umull	r0, r1, r0, r1
   13fc4:	str	r1, [sp, #124]	; 0x7c
   13fc8:	str	r0, [sp, #120]	; 0x78
   13fcc:	ldr	r0, [sp, #92]	; 0x5c
   13fd0:	ldr	r1, [sp, #80]	; 0x50
   13fd4:	umull	r0, r1, r0, r1
   13fd8:	str	r1, [sp, #116]	; 0x74
   13fdc:	str	r0, [sp, #112]	; 0x70
   13fe0:	ldr	r0, [sp, #84]	; 0x54
   13fe4:	ldr	r1, [sp, #88]	; 0x58
   13fe8:	umull	r0, r1, r0, r1
   13fec:	str	r1, [sp, #108]	; 0x6c
   13ff0:	str	r0, [sp, #104]	; 0x68
   13ff4:	ldr	r0, [sp, #84]	; 0x54
   13ff8:	ldr	r1, [sp, #80]	; 0x50
   13ffc:	umull	r0, r1, r0, r1
   14000:	str	r1, [sp, #100]	; 0x64
   14004:	str	r0, [sp, #96]	; 0x60
   14008:	ldr	r0, [sp, #124]	; 0x7c
   1400c:	ldr	r1, [sp, #112]	; 0x70
   14010:	ldr	r2, [sp, #116]	; 0x74
   14014:	adds	r0, r1, r0
   14018:	adc	r1, r2, #0
   1401c:	str	r0, [sp, #112]	; 0x70
   14020:	str	r1, [sp, #116]	; 0x74
   14024:	ldr	r0, [sp, #104]	; 0x68
   14028:	ldr	r1, [sp, #108]	; 0x6c
   1402c:	ldr	r2, [sp, #112]	; 0x70
   14030:	ldr	r3, [sp, #116]	; 0x74
   14034:	adds	r0, r2, r0
   14038:	adc	r1, r3, r1
   1403c:	str	r0, [sp, #112]	; 0x70
   14040:	str	r1, [sp, #116]	; 0x74
   14044:	ldr	r0, [sp, #112]	; 0x70
   14048:	ldr	r1, [sp, #116]	; 0x74
   1404c:	ldr	r2, [sp, #104]	; 0x68
   14050:	ldr	r3, [sp, #108]	; 0x6c
   14054:	subs	r0, r0, r2
   14058:	sbcs	r1, r1, r3
   1405c:	bcs	14070 <__assert_fail@plt+0x2cec>
   14060:	b	14064 <__assert_fail@plt+0x2ce0>
   14064:	ldr	r0, [sp, #100]	; 0x64
   14068:	add	r0, r0, #1
   1406c:	str	r0, [sp, #100]	; 0x64
   14070:	ldr	r0, [sp, #96]	; 0x60
   14074:	ldr	r1, [sp, #100]	; 0x64
   14078:	ldr	r2, [sp, #116]	; 0x74
   1407c:	adds	r0, r0, r2
   14080:	adc	r1, r1, #0
   14084:	str	r0, [sp, #136]	; 0x88
   14088:	str	r1, [sp, #140]	; 0x8c
   1408c:	ldr	r0, [sp, #112]	; 0x70
   14090:	ldr	r1, [sp, #120]	; 0x78
   14094:	str	r0, [sp, #132]	; 0x84
   14098:	str	r1, [sp, #128]	; 0x80
   1409c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   140a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   140a4:	ldr	r2, [sp, #136]	; 0x88
   140a8:	ldr	r3, [sp, #140]	; 0x8c
   140ac:	subs	r0, r0, r2
   140b0:	sbc	r1, r1, r3
   140b4:	ldr	r2, [sp, #168]	; 0xa8
   140b8:	ldr	r3, [sp, #172]	; 0xac
   140bc:	umull	ip, lr, r0, r2
   140c0:	mla	r0, r0, r3, lr
   140c4:	mla	r0, r1, r2, r0
   140c8:	str	ip, [sp, #232]	; 0xe8
   140cc:	str	r0, [sp, #236]	; 0xec
   140d0:	ldr	r0, [sp, #160]	; 0xa0
   140d4:	ldr	r1, [sp, #164]	; 0xa4
   140d8:	str	r1, [sp, #228]	; 0xe4
   140dc:	str	r0, [sp, #224]	; 0xe0
   140e0:	b	14100 <__assert_fail@plt+0x2d7c>
   140e4:	ldr	r0, [sp, #160]	; 0xa0
   140e8:	ldr	r1, [sp, #164]	; 0xa4
   140ec:	str	r1, [sp, #228]	; 0xe4
   140f0:	str	r0, [sp, #224]	; 0xe0
   140f4:	mov	r0, #0
   140f8:	str	r0, [sp, #236]	; 0xec
   140fc:	str	r0, [sp, #232]	; 0xe8
   14100:	b	14104 <__assert_fail@plt+0x2d80>
   14104:	b	14108 <__assert_fail@plt+0x2d84>
   14108:	add	r0, sp, #208	; 0xd0
   1410c:	add	r0, r0, #8
   14110:	ldr	r1, [fp, #-128]	; 0xffffff80
   14114:	ldr	r2, [fp, #-124]	; 0xffffff84
   14118:	mov	r3, sp
   1411c:	sub	ip, fp, #104	; 0x68
   14120:	str	ip, [r3, #8]
   14124:	str	r2, [r3, #4]
   14128:	str	r1, [r3]
   1412c:	sub	r1, fp, #88	; 0x58
   14130:	add	r2, sp, #224	; 0xe0
   14134:	sub	r3, fp, #120	; 0x78
   14138:	bl	17794 <__assert_fail@plt+0x6410>
   1413c:	str	r1, [sp, #212]	; 0xd4
   14140:	str	r0, [sp, #208]	; 0xd0
   14144:	ldr	r0, [sp, #208]	; 0xd0
   14148:	ldr	r1, [sp, #212]	; 0xd4
   1414c:	ldr	r2, [fp, #-104]	; 0xffffff98
   14150:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14154:	eor	r1, r1, r3
   14158:	eor	r0, r0, r2
   1415c:	orr	r0, r0, r1
   14160:	mov	r1, #1
   14164:	cmp	r0, #0
   14168:	str	r1, [sp, #20]
   1416c:	bne	1419c <__assert_fail@plt+0x2e18>
   14170:	b	14174 <__assert_fail@plt+0x2df0>
   14174:	ldr	r0, [sp, #216]	; 0xd8
   14178:	ldr	r1, [sp, #220]	; 0xdc
   1417c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14180:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14184:	eor	r1, r1, r3
   14188:	eor	r0, r0, r2
   1418c:	orr	r0, r0, r1
   14190:	cmp	r0, #0
   14194:	movwne	r0, #1
   14198:	str	r0, [sp, #20]
   1419c:	ldr	r0, [sp, #20]
   141a0:	and	r0, r0, #1
   141a4:	strb	r0, [sp, #243]	; 0xf3
   141a8:	ldr	r0, [sp, #180]	; 0xb4
   141ac:	add	r0, r0, #1
   141b0:	str	r0, [sp, #180]	; 0xb4
   141b4:	b	13d64 <__assert_fail@plt+0x29e0>
   141b8:	b	141d4 <__assert_fail@plt+0x2e50>
   141bc:	ldr	r0, [sp, #244]	; 0xf4
   141c0:	cmp	r0, #24
   141c4:	movw	r0, #0
   141c8:	moveq	r0, #1
   141cc:	and	r0, r0, #1
   141d0:	strb	r0, [sp, #243]	; 0xf3
   141d4:	ldrb	r0, [sp, #243]	; 0xf3
   141d8:	tst	r0, #1
   141dc:	beq	141f0 <__assert_fail@plt+0x2e6c>
   141e0:	movw	r0, #1
   141e4:	and	r0, r0, #1
   141e8:	strb	r0, [fp, #-17]	; 0xffffffef
   141ec:	b	1449c <__assert_fail@plt+0x3118>
   141f0:	ldr	r0, [sp, #244]	; 0xf4
   141f4:	movw	r1, #27456	; 0x6b40
   141f8:	movt	r1, #3
   141fc:	ldrb	r0, [r1, r0]
   14200:	ldr	r1, [sp, #312]	; 0x138
   14204:	ldr	r2, [sp, #316]	; 0x13c
   14208:	adds	r0, r1, r0
   1420c:	adc	r1, r2, #0
   14210:	str	r0, [sp, #312]	; 0x138
   14214:	str	r1, [sp, #316]	; 0x13c
   14218:	ldr	r0, [sp, #312]	; 0x138
   1421c:	ldr	r1, [sp, #316]	; 0x13c
   14220:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14228:	subs	r0, r0, r2
   1422c:	sbcs	r1, r1, r3
   14230:	bcs	14264 <__assert_fail@plt+0x2ee0>
   14234:	b	14238 <__assert_fail@plt+0x2eb4>
   14238:	ldr	r0, [sp, #312]	; 0x138
   1423c:	ldr	r1, [sp, #316]	; 0x13c
   14240:	str	r1, [sp, #60]	; 0x3c
   14244:	str	r0, [sp, #56]	; 0x38
   14248:	mov	r0, #0
   1424c:	str	r0, [sp, #52]	; 0x34
   14250:	str	r0, [sp, #48]	; 0x30
   14254:	str	r0, [sp, #44]	; 0x2c
   14258:	mov	r0, #64	; 0x40
   1425c:	str	r0, [sp, #40]	; 0x28
   14260:	b	1428c <__assert_fail@plt+0x2f08>
   14264:	mov	r0, #0
   14268:	str	r0, [sp, #60]	; 0x3c
   1426c:	str	r0, [sp, #56]	; 0x38
   14270:	ldr	r1, [sp, #312]	; 0x138
   14274:	ldr	r2, [sp, #316]	; 0x13c
   14278:	str	r2, [sp, #52]	; 0x34
   1427c:	str	r1, [sp, #48]	; 0x30
   14280:	str	r0, [sp, #44]	; 0x2c
   14284:	mov	r0, #128	; 0x80
   14288:	str	r0, [sp, #40]	; 0x28
   1428c:	b	14290 <__assert_fail@plt+0x2f0c>
   14290:	ldr	r0, [sp, #40]	; 0x28
   14294:	ldr	r1, [sp, #44]	; 0x2c
   14298:	subs	r2, r0, #1
   1429c:	sbc	r3, r1, #0
   142a0:	str	r2, [sp, #40]	; 0x28
   142a4:	str	r3, [sp, #44]	; 0x2c
   142a8:	orr	r0, r0, r1
   142ac:	cmp	r0, #0
   142b0:	beq	143ec <__assert_fail@plt+0x3068>
   142b4:	b	142b8 <__assert_fail@plt+0x2f34>
   142b8:	b	142bc <__assert_fail@plt+0x2f38>
   142bc:	ldr	r0, [sp, #56]	; 0x38
   142c0:	ldr	r1, [sp, #60]	; 0x3c
   142c4:	lsl	r1, r1, #1
   142c8:	orr	r1, r1, r0, lsr #31
   142cc:	lsl	r0, r0, #1
   142d0:	ldr	r2, [sp, #52]	; 0x34
   142d4:	orr	r0, r0, r2, lsr #31
   142d8:	str	r1, [sp, #60]	; 0x3c
   142dc:	str	r0, [sp, #56]	; 0x38
   142e0:	ldr	r0, [sp, #48]	; 0x30
   142e4:	ldr	r1, [sp, #52]	; 0x34
   142e8:	lsl	r1, r1, #1
   142ec:	orr	r1, r1, r0, lsr #31
   142f0:	lsl	r0, r0, #1
   142f4:	str	r0, [sp, #48]	; 0x30
   142f8:	str	r1, [sp, #52]	; 0x34
   142fc:	ldr	r0, [sp, #56]	; 0x38
   14300:	ldr	r1, [sp, #60]	; 0x3c
   14304:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14308:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1430c:	subs	r0, r2, r0
   14310:	sbcs	r1, r3, r1
   14314:	bcc	14364 <__assert_fail@plt+0x2fe0>
   14318:	b	1431c <__assert_fail@plt+0x2f98>
   1431c:	ldr	r0, [sp, #56]	; 0x38
   14320:	ldr	r1, [sp, #60]	; 0x3c
   14324:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14328:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1432c:	eor	r1, r1, r3
   14330:	eor	r0, r0, r2
   14334:	orr	r0, r0, r1
   14338:	cmp	r0, #0
   1433c:	bne	143e8 <__assert_fail@plt+0x3064>
   14340:	b	14344 <__assert_fail@plt+0x2fc0>
   14344:	ldr	r0, [sp, #48]	; 0x30
   14348:	ldr	r1, [sp, #52]	; 0x34
   1434c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14350:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14354:	subs	r0, r0, r2
   14358:	sbcs	r1, r1, r3
   1435c:	bcc	143e8 <__assert_fail@plt+0x3064>
   14360:	b	14364 <__assert_fail@plt+0x2fe0>
   14364:	b	14368 <__assert_fail@plt+0x2fe4>
   14368:	ldr	r0, [sp, #48]	; 0x30
   1436c:	ldr	r1, [sp, #52]	; 0x34
   14370:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14374:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14378:	subs	r0, r0, r2
   1437c:	sbcs	r1, r1, r3
   14380:	mov	r2, #0
   14384:	mov	r3, r2
   14388:	movwcc	r3, #1
   1438c:	str	r2, [sp, #36]	; 0x24
   14390:	str	r3, [sp, #32]
   14394:	ldr	r2, [sp, #48]	; 0x30
   14398:	ldr	r3, [sp, #52]	; 0x34
   1439c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   143a0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   143a4:	subs	r2, r2, ip
   143a8:	sbc	r3, r3, lr
   143ac:	str	r2, [sp, #48]	; 0x30
   143b0:	str	r3, [sp, #52]	; 0x34
   143b4:	ldr	r2, [sp, #56]	; 0x38
   143b8:	ldr	r3, [sp, #60]	; 0x3c
   143bc:	ldr	ip, [fp, #-32]	; 0xffffffe0
   143c0:	ldr	lr, [fp, #-28]	; 0xffffffe4
   143c4:	subs	r2, r2, ip
   143c8:	sbc	r3, r3, lr
   143cc:	ldr	ip, [sp, #32]
   143d0:	ldr	lr, [sp, #36]	; 0x24
   143d4:	subs	r2, r2, ip
   143d8:	sbc	r3, r3, lr
   143dc:	str	r2, [sp, #56]	; 0x38
   143e0:	str	r3, [sp, #60]	; 0x3c
   143e4:	b	143e8 <__assert_fail@plt+0x3064>
   143e8:	b	14290 <__assert_fail@plt+0x2f0c>
   143ec:	ldr	r0, [sp, #56]	; 0x38
   143f0:	ldr	r1, [sp, #60]	; 0x3c
   143f4:	str	r1, [fp, #-76]	; 0xffffffb4
   143f8:	str	r0, [fp, #-80]	; 0xffffffb0
   143fc:	ldr	r0, [sp, #48]	; 0x30
   14400:	ldr	r1, [sp, #52]	; 0x34
   14404:	str	r1, [fp, #-84]	; 0xffffffac
   14408:	str	r0, [fp, #-88]	; 0xffffffa8
   1440c:	sub	r0, fp, #104	; 0x68
   14410:	sub	r1, fp, #56	; 0x38
   14414:	sub	r2, fp, #88	; 0x58
   14418:	sub	r3, fp, #120	; 0x78
   1441c:	ldr	ip, [fp, #-128]	; 0xffffff80
   14420:	ldr	lr, [fp, #-124]	; 0xffffff84
   14424:	ldr	r4, [fp, #-132]	; 0xffffff7c
   14428:	mov	r5, sp
   1442c:	str	r0, [r5, #12]
   14430:	str	r4, [r5, #8]
   14434:	str	r1, [r5, #4]
   14438:	str	r2, [r5]
   1443c:	mov	r0, r3
   14440:	mov	r2, ip
   14444:	mov	r3, lr
   14448:	bl	17404 <__assert_fail@plt+0x6080>
   1444c:	tst	r0, #1
   14450:	bne	14464 <__assert_fail@plt+0x30e0>
   14454:	movw	r0, #0
   14458:	and	r0, r0, #1
   1445c:	strb	r0, [fp, #-17]	; 0xffffffef
   14460:	b	1449c <__assert_fail@plt+0x3118>
   14464:	b	14468 <__assert_fail@plt+0x30e4>
   14468:	ldr	r0, [sp, #244]	; 0xf4
   1446c:	add	r0, r0, #1
   14470:	str	r0, [sp, #244]	; 0xf4
   14474:	b	13b3c <__assert_fail@plt+0x27b8>
   14478:	movw	r0, #15803	; 0x3dbb
   1447c:	movt	r0, #3
   14480:	bl	11264 <gettext@plt>
   14484:	movw	r1, #0
   14488:	str	r0, [sp, #16]
   1448c:	mov	r0, r1
   14490:	ldr	r2, [sp, #16]
   14494:	bl	111ec <error@plt>
   14498:	bl	1136c <abort@plt>
   1449c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   144a0:	and	r0, r0, #1
   144a4:	sub	sp, fp, #16
   144a8:	pop	{r4, r5, r6, sl, fp, pc}
   144ac:	push	{fp, lr}
   144b0:	mov	fp, sp
   144b4:	sub	sp, sp, #32
   144b8:	ldr	r1, [fp, #12]
   144bc:	ldr	ip, [fp, #8]
   144c0:	str	r0, [fp, #-4]
   144c4:	str	r3, [sp, #20]
   144c8:	str	r2, [sp, #16]
   144cc:	str	r1, [sp, #12]
   144d0:	str	ip, [sp, #8]
   144d4:	ldr	r0, [sp, #16]
   144d8:	ldr	r1, [sp, #20]
   144dc:	orr	r0, r0, r1
   144e0:	cmp	r0, #0
   144e4:	beq	14558 <__assert_fail@plt+0x31d4>
   144e8:	b	144ec <__assert_fail@plt+0x3168>
   144ec:	ldr	r0, [fp, #-4]
   144f0:	ldr	r1, [r0, #8]
   144f4:	ldr	r0, [r0, #12]
   144f8:	orr	r0, r1, r0
   144fc:	cmp	r0, #0
   14500:	bne	1450c <__assert_fail@plt+0x3188>
   14504:	b	14508 <__assert_fail@plt+0x3184>
   14508:	b	1452c <__assert_fail@plt+0x31a8>
   1450c:	movw	r0, #16101	; 0x3ee5
   14510:	movt	r0, #3
   14514:	movw	r1, #15747	; 0x3d83
   14518:	movt	r1, #3
   1451c:	movw	r2, #558	; 0x22e
   14520:	movw	r3, #16125	; 0x3efd
   14524:	movt	r3, #3
   14528:	bl	11384 <__assert_fail@plt>
   1452c:	ldr	r0, [sp, #8]
   14530:	ldr	r1, [sp, #12]
   14534:	ldr	r2, [fp, #-4]
   14538:	str	r1, [r2, #4]
   1453c:	str	r0, [r2]
   14540:	ldr	r0, [sp, #16]
   14544:	ldr	r1, [sp, #20]
   14548:	ldr	r2, [fp, #-4]
   1454c:	str	r1, [r2, #12]
   14550:	str	r0, [r2, #8]
   14554:	b	14574 <__assert_fail@plt+0x31f0>
   14558:	ldr	r0, [fp, #-4]
   1455c:	ldr	r2, [sp, #8]
   14560:	ldr	r3, [sp, #12]
   14564:	mov	r1, sp
   14568:	mov	ip, #1
   1456c:	str	ip, [r1]
   14570:	bl	166b8 <__assert_fail@plt+0x5334>
   14574:	mov	sp, fp
   14578:	pop	{fp, pc}
   1457c:	push	{r4, r5, r6, sl, fp, lr}
   14580:	add	fp, sp, #16
   14584:	sub	sp, sp, #272	; 0x110
   14588:	str	r0, [fp, #-24]	; 0xffffffe8
   1458c:	str	r1, [fp, #-20]	; 0xffffffec
   14590:	str	r2, [fp, #-28]	; 0xffffffe4
   14594:	str	r3, [fp, #-32]	; 0xffffffe0
   14598:	movw	r0, #1
   1459c:	str	r0, [fp, #-92]	; 0xffffffa4
   145a0:	str	r0, [fp, #-96]	; 0xffffffa0
   145a4:	b	145a8 <__assert_fail@plt+0x3224>
   145a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   145b0:	subs	r0, r0, #2
   145b4:	sbcs	r1, r1, #0
   145b8:	bcc	145c4 <__assert_fail@plt+0x3240>
   145bc:	b	145c0 <__assert_fail@plt+0x323c>
   145c0:	b	145e4 <__assert_fail@plt+0x3260>
   145c4:	movw	r0, #15853	; 0x3ded
   145c8:	movt	r0, #3
   145cc:	movw	r1, #15747	; 0x3d83
   145d0:	movt	r1, #3
   145d4:	movw	r2, #1466	; 0x5ba
   145d8:	movw	r3, #16190	; 0x3f3e
   145dc:	movt	r3, #3
   145e0:	bl	11384 <__assert_fail@plt>
   145e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   145ec:	str	r1, [fp, #-108]	; 0xffffff94
   145f0:	str	r0, [fp, #-112]	; 0xffffff90
   145f4:	mov	r0, #0
   145f8:	str	r0, [fp, #-116]	; 0xffffff8c
   145fc:	str	r0, [fp, #-120]	; 0xffffff88
   14600:	str	r0, [fp, #-132]	; 0xffffff7c
   14604:	mov	r1, #1
   14608:	str	r1, [fp, #-136]	; 0xffffff78
   1460c:	str	r0, [sp, #148]	; 0x94
   14610:	str	r0, [sp, #144]	; 0x90
   14614:	str	r0, [fp, #-124]	; 0xffffff84
   14618:	str	r0, [fp, #-128]	; 0xffffff80
   1461c:	movw	r0, #64	; 0x40
   14620:	str	r0, [sp, #140]	; 0x8c
   14624:	ldr	r0, [sp, #140]	; 0x8c
   14628:	cmp	r0, #0
   1462c:	bls	147a0 <__assert_fail@plt+0x341c>
   14630:	b	14634 <__assert_fail@plt+0x32b0>
   14634:	ldr	r0, [fp, #-112]	; 0xffffff90
   14638:	ldr	r1, [fp, #-120]	; 0xffffff88
   1463c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   14640:	lsrs	r2, r2, #1
   14644:	rrx	r1, r1
   14648:	orr	r0, r2, r0, lsl #31
   1464c:	str	r1, [fp, #-120]	; 0xffffff88
   14650:	str	r0, [fp, #-116]	; 0xffffff8c
   14654:	ldr	r0, [fp, #-112]	; 0xffffff90
   14658:	ldr	r1, [fp, #-108]	; 0xffffff94
   1465c:	lsrs	r1, r1, #1
   14660:	rrx	r0, r0
   14664:	str	r1, [fp, #-108]	; 0xffffff94
   14668:	str	r0, [fp, #-112]	; 0xffffff90
   1466c:	ldr	r0, [fp, #-128]	; 0xffffff80
   14670:	ldr	r1, [fp, #-124]	; 0xffffff84
   14674:	lsl	r1, r1, #1
   14678:	orr	r1, r1, r0, lsr #31
   1467c:	lsl	r0, r0, #1
   14680:	str	r0, [fp, #-128]	; 0xffffff80
   14684:	str	r1, [fp, #-124]	; 0xffffff84
   14688:	ldr	r0, [fp, #-136]	; 0xffffff78
   1468c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   14690:	ldr	r2, [fp, #-112]	; 0xffffff90
   14694:	ldr	r3, [fp, #-108]	; 0xffffff94
   14698:	subs	r0, r2, r0
   1469c:	sbcs	r1, r3, r1
   146a0:	bcc	146f0 <__assert_fail@plt+0x336c>
   146a4:	b	146a8 <__assert_fail@plt+0x3324>
   146a8:	ldr	r0, [fp, #-136]	; 0xffffff78
   146ac:	ldr	r1, [fp, #-132]	; 0xffffff7c
   146b0:	ldr	r2, [fp, #-112]	; 0xffffff90
   146b4:	ldr	r3, [fp, #-108]	; 0xffffff94
   146b8:	eor	r1, r1, r3
   146bc:	eor	r0, r0, r2
   146c0:	orr	r0, r0, r1
   146c4:	cmp	r0, #0
   146c8:	bne	14788 <__assert_fail@plt+0x3404>
   146cc:	b	146d0 <__assert_fail@plt+0x334c>
   146d0:	ldr	r0, [sp, #144]	; 0x90
   146d4:	ldr	r1, [sp, #148]	; 0x94
   146d8:	ldr	r2, [fp, #-120]	; 0xffffff88
   146dc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   146e0:	subs	r0, r0, r2
   146e4:	sbcs	r1, r1, r3
   146e8:	bcc	14788 <__assert_fail@plt+0x3404>
   146ec:	b	146f0 <__assert_fail@plt+0x336c>
   146f0:	ldr	r0, [fp, #-128]	; 0xffffff80
   146f4:	ldr	r1, [fp, #-124]	; 0xffffff84
   146f8:	adds	r0, r0, #1
   146fc:	adc	r1, r1, #0
   14700:	str	r0, [fp, #-128]	; 0xffffff80
   14704:	str	r1, [fp, #-124]	; 0xffffff84
   14708:	ldr	r0, [sp, #144]	; 0x90
   1470c:	ldr	r1, [sp, #148]	; 0x94
   14710:	ldr	r2, [fp, #-120]	; 0xffffff88
   14714:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14718:	subs	r0, r0, r2
   1471c:	sbcs	r1, r1, r3
   14720:	mov	r2, #0
   14724:	mov	r3, r2
   14728:	movwcc	r3, #1
   1472c:	str	r2, [sp, #132]	; 0x84
   14730:	str	r3, [sp, #128]	; 0x80
   14734:	ldr	r2, [sp, #144]	; 0x90
   14738:	ldr	r3, [sp, #148]	; 0x94
   1473c:	ldr	ip, [fp, #-120]	; 0xffffff88
   14740:	ldr	lr, [fp, #-116]	; 0xffffff8c
   14744:	subs	r2, r2, ip
   14748:	sbc	r3, r3, lr
   1474c:	str	r2, [sp, #144]	; 0x90
   14750:	str	r3, [sp, #148]	; 0x94
   14754:	ldr	r2, [fp, #-136]	; 0xffffff78
   14758:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1475c:	ldr	ip, [fp, #-112]	; 0xffffff90
   14760:	ldr	lr, [fp, #-108]	; 0xffffff94
   14764:	subs	r2, r2, ip
   14768:	sbc	r3, r3, lr
   1476c:	ldr	ip, [sp, #128]	; 0x80
   14770:	ldr	lr, [sp, #132]	; 0x84
   14774:	subs	r2, r2, ip
   14778:	sbc	r3, r3, lr
   1477c:	str	r2, [fp, #-136]	; 0xffffff78
   14780:	str	r3, [fp, #-132]	; 0xffffff7c
   14784:	b	14788 <__assert_fail@plt+0x3404>
   14788:	b	1478c <__assert_fail@plt+0x3408>
   1478c:	ldr	r0, [sp, #140]	; 0x8c
   14790:	mvn	r1, #0
   14794:	add	r0, r0, r1
   14798:	str	r0, [sp, #140]	; 0x8c
   1479c:	b	14624 <__assert_fail@plt+0x32a0>
   147a0:	ldr	r0, [sp, #144]	; 0x90
   147a4:	ldr	r1, [sp, #148]	; 0x94
   147a8:	str	r1, [fp, #-60]	; 0xffffffc4
   147ac:	str	r0, [fp, #-64]	; 0xffffffc0
   147b0:	ldr	r0, [fp, #-128]	; 0xffffff80
   147b4:	ldr	r1, [fp, #-124]	; 0xffffff84
   147b8:	str	r1, [fp, #-100]	; 0xffffff9c
   147bc:	str	r0, [fp, #-104]	; 0xffffff98
   147c0:	b	147c4 <__assert_fail@plt+0x3440>
   147c4:	b	147c8 <__assert_fail@plt+0x3444>
   147c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   147cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   147d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   147d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   147d8:	subs	r2, r2, r0
   147dc:	sbc	r3, r3, r1
   147e0:	subs	r0, r0, r2
   147e4:	sbcs	r1, r1, r3
   147e8:	mov	r2, #0
   147ec:	movwcc	r2, #1
   147f0:	cmp	r2, #0
   147f4:	mvnne	r2, #0
   147f8:	str	r2, [sp, #124]	; 0x7c
   147fc:	str	r2, [sp, #120]	; 0x78
   14800:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14804:	ldr	r3, [fp, #-20]	; 0xffffffec
   14808:	ldr	ip, [sp, #120]	; 0x78
   1480c:	ldr	lr, [sp, #124]	; 0x7c
   14810:	and	lr, r3, lr
   14814:	and	ip, r2, ip
   14818:	ldr	r4, [fp, #-64]	; 0xffffffc0
   1481c:	ldr	r5, [fp, #-60]	; 0xffffffc4
   14820:	adds	ip, ip, r4
   14824:	adc	lr, lr, r5
   14828:	subs	r2, r4, r2
   1482c:	sbc	r3, r5, r3
   14830:	adds	r2, ip, r2
   14834:	adc	r3, lr, r3
   14838:	str	r2, [fp, #-40]	; 0xffffffd8
   1483c:	str	r3, [fp, #-36]	; 0xffffffdc
   14840:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14844:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14848:	str	r1, [fp, #-44]	; 0xffffffd4
   1484c:	str	r0, [fp, #-48]	; 0xffffffd0
   14850:	str	r1, [fp, #-52]	; 0xffffffcc
   14854:	str	r0, [fp, #-56]	; 0xffffffc8
   14858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1485c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14860:	eor	r0, r0, #1
   14864:	orr	r0, r0, r1
   14868:	cmp	r0, #0
   1486c:	beq	14fbc <__assert_fail@plt+0x3c38>
   14870:	b	14874 <__assert_fail@plt+0x34f0>
   14874:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14878:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1487c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14880:	subs	r0, r0, r1
   14884:	rscs	r1, r2, #0
   14888:	bcs	14894 <__assert_fail@plt+0x3510>
   1488c:	b	14890 <__assert_fail@plt+0x350c>
   14890:	b	148b4 <__assert_fail@plt+0x3530>
   14894:	movw	r0, #16264	; 0x3f88
   14898:	movt	r0, #3
   1489c:	movw	r1, #15747	; 0x3d83
   148a0:	movt	r1, #3
   148a4:	movw	r2, #1472	; 0x5c0
   148a8:	movw	r3, #16190	; 0x3f3e
   148ac:	movt	r3, #3
   148b0:	bl	11384 <__assert_fail@plt>
   148b4:	b	148b8 <__assert_fail@plt+0x3534>
   148b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   148bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   148c0:	str	r1, [sp, #116]	; 0x74
   148c4:	str	r0, [sp, #112]	; 0x70
   148c8:	ldr	r0, [sp, #112]	; 0x70
   148cc:	ldr	r1, [sp, #116]	; 0x74
   148d0:	lsrs	r1, r1, #1
   148d4:	rrx	r0, r0
   148d8:	and	r0, r0, #127	; 0x7f
   148dc:	movw	r2, #28806	; 0x7086
   148e0:	movt	r2, #3
   148e4:	ldrb	r0, [r2, r0]
   148e8:	mov	r2, #0
   148ec:	str	r2, [sp, #108]	; 0x6c
   148f0:	str	r0, [sp, #104]	; 0x68
   148f4:	ldr	r0, [sp, #104]	; 0x68
   148f8:	ldr	r2, [sp, #108]	; 0x6c
   148fc:	lsl	r3, r2, #1
   14900:	orr	r3, r3, r0, lsr #31
   14904:	umull	ip, lr, r0, r0
   14908:	mla	lr, r0, r2, lr
   1490c:	mla	r2, r0, r2, lr
   14910:	ldr	lr, [sp, #112]	; 0x70
   14914:	ldr	r4, [sp, #116]	; 0x74
   14918:	umull	r5, r6, ip, lr
   1491c:	mla	ip, ip, r4, r6
   14920:	mla	r2, r2, lr, ip
   14924:	rsbs	r0, r5, r0, lsl #1
   14928:	sbc	r2, r3, r2
   1492c:	str	r0, [sp, #104]	; 0x68
   14930:	str	r2, [sp, #108]	; 0x6c
   14934:	ldr	r0, [sp, #104]	; 0x68
   14938:	ldr	r2, [sp, #108]	; 0x6c
   1493c:	lsl	r3, r2, #1
   14940:	orr	r3, r3, r0, lsr #31
   14944:	umull	ip, lr, r0, r0
   14948:	mla	lr, r0, r2, lr
   1494c:	mla	r2, r0, r2, lr
   14950:	ldr	lr, [sp, #112]	; 0x70
   14954:	ldr	r4, [sp, #116]	; 0x74
   14958:	umull	r5, r6, ip, lr
   1495c:	mla	ip, ip, r4, r6
   14960:	mla	r2, r2, lr, ip
   14964:	rsbs	r0, r5, r0, lsl #1
   14968:	sbc	r2, r3, r2
   1496c:	str	r0, [sp, #104]	; 0x68
   14970:	str	r2, [sp, #108]	; 0x6c
   14974:	ldr	r0, [sp, #104]	; 0x68
   14978:	ldr	r2, [sp, #108]	; 0x6c
   1497c:	lsl	r3, r2, #1
   14980:	orr	r3, r3, r0, lsr #31
   14984:	umull	ip, lr, r0, r0
   14988:	mla	lr, r0, r2, lr
   1498c:	mla	r2, r0, r2, lr
   14990:	ldr	lr, [sp, #112]	; 0x70
   14994:	ldr	r4, [sp, #116]	; 0x74
   14998:	umull	r5, r6, ip, lr
   1499c:	mla	ip, ip, r4, r6
   149a0:	mla	r2, r2, lr, ip
   149a4:	rsbs	r0, r5, r0, lsl #1
   149a8:	sbc	r2, r3, r2
   149ac:	str	r0, [sp, #104]	; 0x68
   149b0:	str	r2, [sp, #108]	; 0x6c
   149b4:	ldr	r0, [sp, #104]	; 0x68
   149b8:	ldr	r2, [sp, #108]	; 0x6c
   149bc:	str	r2, [fp, #-76]	; 0xffffffb4
   149c0:	str	r0, [fp, #-80]	; 0xffffffb0
   149c4:	b	149c8 <__assert_fail@plt+0x3644>
   149c8:	b	149cc <__assert_fail@plt+0x3648>
   149cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   149d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   149d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   149d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   149dc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   149e0:	ldr	lr, [fp, #-76]	; 0xffffffb4
   149e4:	mov	r4, sp
   149e8:	str	lr, [r4, #12]
   149ec:	str	ip, [r4, #8]
   149f0:	str	r3, [r4, #4]
   149f4:	str	r2, [r4]
   149f8:	str	r0, [sp, #52]	; 0x34
   149fc:	str	r1, [sp, #48]	; 0x30
   14a00:	ldr	r2, [sp, #52]	; 0x34
   14a04:	ldr	r3, [sp, #48]	; 0x30
   14a08:	bl	17f20 <__assert_fail@plt+0x6b9c>
   14a0c:	str	r1, [fp, #-36]	; 0xffffffdc
   14a10:	str	r0, [fp, #-40]	; 0xffffffd8
   14a14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14a18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14a20:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a24:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14a28:	subs	r2, r2, ip
   14a2c:	sbc	r3, r3, #0
   14a30:	subs	r0, r0, r2
   14a34:	sbcs	r1, r1, r3
   14a38:	mov	r2, #0
   14a3c:	movwcc	r2, #1
   14a40:	cmp	r2, #0
   14a44:	mvnne	r2, #0
   14a48:	str	r2, [sp, #100]	; 0x64
   14a4c:	str	r2, [sp, #96]	; 0x60
   14a50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14a54:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a58:	ldr	ip, [sp, #96]	; 0x60
   14a5c:	ldr	lr, [sp, #100]	; 0x64
   14a60:	and	lr, r3, lr
   14a64:	and	ip, r2, ip
   14a68:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14a6c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14a70:	adds	ip, ip, r4
   14a74:	adc	lr, lr, r5
   14a78:	ldr	r4, [fp, #-28]	; 0xffffffe4
   14a7c:	subs	r2, r4, r2
   14a80:	rsc	r3, r3, #0
   14a84:	adds	r2, ip, r2
   14a88:	adc	r3, lr, r3
   14a8c:	str	r2, [fp, #-40]	; 0xffffffd8
   14a90:	str	r3, [fp, #-36]	; 0xffffffdc
   14a94:	b	14a98 <__assert_fail@plt+0x3714>
   14a98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14a9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14aa0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14aa4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14aa8:	subs	r0, r0, r2
   14aac:	sbcs	r1, r1, r3
   14ab0:	mov	r2, #0
   14ab4:	movwcc	r2, #1
   14ab8:	cmp	r2, #0
   14abc:	mvnne	r2, #0
   14ac0:	str	r2, [sp, #92]	; 0x5c
   14ac4:	str	r2, [sp, #88]	; 0x58
   14ac8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14acc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ad0:	ldr	ip, [sp, #88]	; 0x58
   14ad4:	ldr	lr, [sp, #92]	; 0x5c
   14ad8:	and	r3, r3, lr
   14adc:	and	r2, r2, ip
   14ae0:	ldr	ip, [fp, #-48]	; 0xffffffd0
   14ae4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   14ae8:	adds	r2, r2, ip
   14aec:	adc	r3, r3, lr
   14af0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   14af4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14af8:	subs	r2, r2, ip
   14afc:	sbc	r3, r3, lr
   14b00:	str	r2, [fp, #-72]	; 0xffffffb8
   14b04:	str	r3, [fp, #-68]	; 0xffffffbc
   14b08:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14b0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14b10:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14b14:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14b18:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14b1c:	ldr	lr, [fp, #-20]	; 0xffffffec
   14b20:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14b24:	ldr	r5, [fp, #-76]	; 0xffffffb4
   14b28:	mov	r6, sp
   14b2c:	str	r5, [r6, #12]
   14b30:	str	r4, [r6, #8]
   14b34:	str	lr, [r6, #4]
   14b38:	str	ip, [r6]
   14b3c:	bl	17f20 <__assert_fail@plt+0x6b9c>
   14b40:	str	r1, [fp, #-60]	; 0xffffffc4
   14b44:	str	r0, [fp, #-64]	; 0xffffffc0
   14b48:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14b4c:	and	r0, r0, #31
   14b50:	cmp	r0, #1
   14b54:	bne	14b94 <__assert_fail@plt+0x3810>
   14b58:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14b5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14b60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b64:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b68:	bl	19278 <__assert_fail@plt+0x7ef4>
   14b6c:	eor	r0, r0, #1
   14b70:	orr	r0, r0, r1
   14b74:	cmp	r0, #0
   14b78:	beq	14b84 <__assert_fail@plt+0x3800>
   14b7c:	b	14b80 <__assert_fail@plt+0x37fc>
   14b80:	b	14cdc <__assert_fail@plt+0x3958>
   14b84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b88:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b8c:	str	r1, [fp, #-52]	; 0xffffffcc
   14b90:	str	r0, [fp, #-56]	; 0xffffffc8
   14b94:	b	14b98 <__assert_fail@plt+0x3814>
   14b98:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14b9c:	mvn	r1, #0
   14ba0:	add	r0, r0, r1
   14ba4:	str	r0, [fp, #-92]	; 0xffffffa4
   14ba8:	cmp	r0, #0
   14bac:	bne	149cc <__assert_fail@plt+0x3648>
   14bb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14bb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14bb8:	str	r1, [fp, #-44]	; 0xffffffd4
   14bbc:	str	r0, [fp, #-48]	; 0xffffffd0
   14bc0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14bc4:	str	r0, [fp, #-92]	; 0xffffffa4
   14bc8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14bcc:	lsl	r0, r0, #1
   14bd0:	str	r0, [fp, #-96]	; 0xffffffa0
   14bd4:	movw	r0, #0
   14bd8:	str	r0, [sp, #84]	; 0x54
   14bdc:	ldr	r0, [sp, #84]	; 0x54
   14be0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14be4:	cmp	r0, r1
   14be8:	bcs	14cc8 <__assert_fail@plt+0x3944>
   14bec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14bf0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14bf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14bf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bfc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14c00:	ldr	lr, [fp, #-76]	; 0xffffffb4
   14c04:	mov	r4, sp
   14c08:	str	lr, [r4, #12]
   14c0c:	str	ip, [r4, #8]
   14c10:	str	r3, [r4, #4]
   14c14:	str	r2, [r4]
   14c18:	str	r0, [sp, #44]	; 0x2c
   14c1c:	str	r1, [sp, #40]	; 0x28
   14c20:	ldr	r2, [sp, #44]	; 0x2c
   14c24:	ldr	r3, [sp, #40]	; 0x28
   14c28:	bl	17f20 <__assert_fail@plt+0x6b9c>
   14c2c:	str	r1, [fp, #-36]	; 0xffffffdc
   14c30:	str	r0, [fp, #-40]	; 0xffffffd8
   14c34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14c3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14c40:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c44:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14c48:	subs	r2, r2, ip
   14c4c:	sbc	r3, r3, #0
   14c50:	subs	r0, r0, r2
   14c54:	sbcs	r1, r1, r3
   14c58:	mov	r2, #0
   14c5c:	movwcc	r2, #1
   14c60:	cmp	r2, #0
   14c64:	mvnne	r2, #0
   14c68:	str	r2, [sp, #76]	; 0x4c
   14c6c:	str	r2, [sp, #72]	; 0x48
   14c70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14c74:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c78:	ldr	ip, [sp, #72]	; 0x48
   14c7c:	ldr	lr, [sp, #76]	; 0x4c
   14c80:	and	lr, r3, lr
   14c84:	and	ip, r2, ip
   14c88:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14c8c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14c90:	adds	ip, ip, r4
   14c94:	adc	lr, lr, r5
   14c98:	ldr	r4, [fp, #-28]	; 0xffffffe4
   14c9c:	subs	r2, r4, r2
   14ca0:	rsc	r3, r3, #0
   14ca4:	adds	r2, ip, r2
   14ca8:	adc	r3, lr, r3
   14cac:	str	r2, [fp, #-40]	; 0xffffffd8
   14cb0:	str	r3, [fp, #-36]	; 0xffffffdc
   14cb4:	b	14cb8 <__assert_fail@plt+0x3934>
   14cb8:	ldr	r0, [sp, #84]	; 0x54
   14cbc:	add	r0, r0, #1
   14cc0:	str	r0, [sp, #84]	; 0x54
   14cc4:	b	14bdc <__assert_fail@plt+0x3858>
   14cc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ccc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14cd0:	str	r1, [fp, #-52]	; 0xffffffcc
   14cd4:	str	r0, [fp, #-56]	; 0xffffffc8
   14cd8:	b	149c8 <__assert_fail@plt+0x3644>
   14cdc:	b	14ce0 <__assert_fail@plt+0x395c>
   14ce0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14ce4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14ce8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14cec:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cf0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14cf4:	ldr	lr, [fp, #-76]	; 0xffffffb4
   14cf8:	mov	r4, sp
   14cfc:	str	lr, [r4, #12]
   14d00:	str	ip, [r4, #8]
   14d04:	str	r3, [r4, #4]
   14d08:	str	r2, [r4]
   14d0c:	str	r0, [sp, #36]	; 0x24
   14d10:	str	r1, [sp, #32]
   14d14:	ldr	r2, [sp, #36]	; 0x24
   14d18:	ldr	r3, [sp, #32]
   14d1c:	bl	17f20 <__assert_fail@plt+0x6b9c>
   14d20:	str	r1, [fp, #-52]	; 0xffffffcc
   14d24:	str	r0, [fp, #-56]	; 0xffffffc8
   14d28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14d2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14d30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d38:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14d3c:	subs	r2, r2, ip
   14d40:	sbc	r3, r3, #0
   14d44:	subs	r0, r0, r2
   14d48:	sbcs	r1, r1, r3
   14d4c:	mov	r2, #0
   14d50:	movwcc	r2, #1
   14d54:	cmp	r2, #0
   14d58:	mvnne	r2, #0
   14d5c:	str	r2, [sp, #68]	; 0x44
   14d60:	str	r2, [sp, #64]	; 0x40
   14d64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d68:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d6c:	ldr	ip, [sp, #64]	; 0x40
   14d70:	ldr	lr, [sp, #68]	; 0x44
   14d74:	and	lr, r3, lr
   14d78:	and	ip, r2, ip
   14d7c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   14d80:	ldr	r5, [fp, #-52]	; 0xffffffcc
   14d84:	adds	ip, ip, r4
   14d88:	adc	lr, lr, r5
   14d8c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   14d90:	subs	r2, r4, r2
   14d94:	rsc	r3, r3, #0
   14d98:	adds	r2, ip, r2
   14d9c:	adc	r3, lr, r3
   14da0:	str	r2, [fp, #-56]	; 0xffffffc8
   14da4:	str	r3, [fp, #-52]	; 0xffffffcc
   14da8:	b	14dac <__assert_fail@plt+0x3a28>
   14dac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14db0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14db4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14db8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14dbc:	subs	r0, r0, r2
   14dc0:	sbcs	r1, r1, r3
   14dc4:	mov	r2, #0
   14dc8:	movwcc	r2, #1
   14dcc:	cmp	r2, #0
   14dd0:	mvnne	r2, #0
   14dd4:	str	r2, [sp, #60]	; 0x3c
   14dd8:	str	r2, [sp, #56]	; 0x38
   14ddc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14de0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14de4:	ldr	ip, [sp, #56]	; 0x38
   14de8:	ldr	lr, [sp, #60]	; 0x3c
   14dec:	and	r3, r3, lr
   14df0:	and	r2, r2, ip
   14df4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   14df8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   14dfc:	adds	r2, r2, ip
   14e00:	adc	r3, r3, lr
   14e04:	ldr	ip, [fp, #-56]	; 0xffffffc8
   14e08:	ldr	lr, [fp, #-52]	; 0xffffffcc
   14e0c:	subs	r2, r2, ip
   14e10:	sbc	r3, r3, lr
   14e14:	str	r2, [fp, #-72]	; 0xffffffb8
   14e18:	str	r3, [fp, #-68]	; 0xffffffbc
   14e1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14e20:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14e24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e28:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e2c:	bl	19278 <__assert_fail@plt+0x7ef4>
   14e30:	str	r1, [fp, #-84]	; 0xffffffac
   14e34:	str	r0, [fp, #-88]	; 0xffffffa8
   14e38:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14e3c:	ldr	r1, [fp, #-84]	; 0xffffffac
   14e40:	eor	r0, r0, #1
   14e44:	orr	r0, r0, r1
   14e48:	cmp	r0, #0
   14e4c:	beq	14ce0 <__assert_fail@plt+0x395c>
   14e50:	b	14e54 <__assert_fail@plt+0x3ad0>
   14e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e58:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e5c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14e60:	ldr	r3, [fp, #-84]	; 0xffffffac
   14e64:	eor	r1, r1, r3
   14e68:	eor	r0, r0, r2
   14e6c:	orr	r0, r0, r1
   14e70:	cmp	r0, #0
   14e74:	bne	14e98 <__assert_fail@plt+0x3b14>
   14e78:	b	14e7c <__assert_fail@plt+0x3af8>
   14e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e80:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14e88:	add	r2, r2, #1
   14e8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14e90:	bl	1457c <__assert_fail@plt+0x31f8>
   14e94:	b	14fbc <__assert_fail@plt+0x3c38>
   14e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ea0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14ea4:	ldr	r3, [fp, #-84]	; 0xffffffac
   14ea8:	bl	337f4 <__assert_fail@plt+0x22470>
   14eac:	str	r1, [fp, #-20]	; 0xffffffec
   14eb0:	str	r0, [fp, #-24]	; 0xffffffe8
   14eb4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14eb8:	ldr	r1, [fp, #-84]	; 0xffffffac
   14ebc:	bl	168fc <__assert_fail@plt+0x5578>
   14ec0:	tst	r0, #1
   14ec4:	bne	14ee4 <__assert_fail@plt+0x3b60>
   14ec8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14ecc:	ldr	r1, [fp, #-84]	; 0xffffffac
   14ed0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14ed4:	add	r2, r2, #1
   14ed8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14edc:	bl	1457c <__assert_fail@plt+0x31f8>
   14ee0:	b	14f00 <__assert_fail@plt+0x3b7c>
   14ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ee8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14eec:	ldr	r3, [fp, #-84]	; 0xffffffac
   14ef0:	mov	r1, sp
   14ef4:	mov	ip, #1
   14ef8:	str	ip, [r1]
   14efc:	bl	166b8 <__assert_fail@plt+0x5334>
   14f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f04:	ldr	r1, [fp, #-20]	; 0xffffffec
   14f08:	bl	168fc <__assert_fail@plt+0x5578>
   14f0c:	tst	r0, #1
   14f10:	beq	14f34 <__assert_fail@plt+0x3bb0>
   14f14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f20:	mov	r1, sp
   14f24:	mov	ip, #1
   14f28:	str	ip, [r1]
   14f2c:	bl	166b8 <__assert_fail@plt+0x5334>
   14f30:	b	14fbc <__assert_fail@plt+0x3c38>
   14f34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14f38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14f3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f40:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f44:	bl	337f4 <__assert_fail@plt+0x22470>
   14f48:	str	r3, [fp, #-36]	; 0xffffffdc
   14f4c:	str	r2, [fp, #-40]	; 0xffffffd8
   14f50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14f54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14f58:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14f5c:	ldr	lr, [fp, #-20]	; 0xffffffec
   14f60:	str	r0, [sp, #28]
   14f64:	mov	r0, r2
   14f68:	str	r1, [sp, #24]
   14f6c:	mov	r1, r3
   14f70:	mov	r2, ip
   14f74:	mov	r3, lr
   14f78:	bl	337f4 <__assert_fail@plt+0x22470>
   14f7c:	str	r3, [fp, #-44]	; 0xffffffd4
   14f80:	str	r2, [fp, #-48]	; 0xffffffd0
   14f84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14f88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14f8c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14f90:	ldr	lr, [fp, #-20]	; 0xffffffec
   14f94:	str	r0, [sp, #20]
   14f98:	mov	r0, r2
   14f9c:	str	r1, [sp, #16]
   14fa0:	mov	r1, r3
   14fa4:	mov	r2, ip
   14fa8:	mov	r3, lr
   14fac:	bl	337f4 <__assert_fail@plt+0x22470>
   14fb0:	str	r3, [fp, #-52]	; 0xffffffcc
   14fb4:	str	r2, [fp, #-56]	; 0xffffffc8
   14fb8:	b	14858 <__assert_fail@plt+0x34d4>
   14fbc:	sub	sp, fp, #16
   14fc0:	pop	{r4, r5, r6, sl, fp, pc}
   14fc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fc8:	add	fp, sp, #28
   14fcc:	sub	sp, sp, #516	; 0x204
   14fd0:	ldr	ip, [fp, #12]
   14fd4:	ldr	lr, [fp, #8]
   14fd8:	str	r0, [fp, #-40]	; 0xffffffd8
   14fdc:	str	r1, [fp, #-36]	; 0xffffffdc
   14fe0:	str	r3, [fp, #-44]	; 0xffffffd4
   14fe4:	str	r2, [fp, #-48]	; 0xffffffd0
   14fe8:	movw	r0, #1
   14fec:	str	r0, [fp, #-164]	; 0xffffff5c
   14ff0:	str	r0, [fp, #-168]	; 0xffffff58
   14ff4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ff8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ffc:	subs	r0, r0, #2
   15000:	sbcs	r1, r1, #0
   15004:	bcc	15034 <__assert_fail@plt+0x3cb0>
   15008:	b	1500c <__assert_fail@plt+0x3c88>
   1500c:	mov	r0, #0
   15010:	str	r0, [fp, #-172]	; 0xffffff54
   15014:	mov	r1, #1
   15018:	str	r1, [fp, #-176]	; 0xffffff50
   1501c:	str	r0, [fp, #-180]	; 0xffffff4c
   15020:	str	r0, [fp, #-184]	; 0xffffff48
   15024:	str	r0, [fp, #-188]	; 0xffffff44
   15028:	mov	r0, #64	; 0x40
   1502c:	str	r0, [fp, #-192]	; 0xffffff40
   15030:	b	15058 <__assert_fail@plt+0x3cd4>
   15034:	mov	r0, #0
   15038:	str	r0, [fp, #-172]	; 0xffffff54
   1503c:	str	r0, [fp, #-176]	; 0xffffff50
   15040:	str	r0, [fp, #-180]	; 0xffffff4c
   15044:	mov	r1, #1
   15048:	str	r1, [fp, #-184]	; 0xffffff48
   1504c:	str	r0, [fp, #-188]	; 0xffffff44
   15050:	mov	r0, #128	; 0x80
   15054:	str	r0, [fp, #-192]	; 0xffffff40
   15058:	b	1505c <__assert_fail@plt+0x3cd8>
   1505c:	ldr	r0, [fp, #-192]	; 0xffffff40
   15060:	ldr	r1, [fp, #-188]	; 0xffffff44
   15064:	subs	r2, r0, #1
   15068:	sbc	r3, r1, #0
   1506c:	str	r2, [fp, #-192]	; 0xffffff40
   15070:	str	r3, [fp, #-188]	; 0xffffff44
   15074:	orr	r0, r0, r1
   15078:	cmp	r0, #0
   1507c:	beq	151b8 <__assert_fail@plt+0x3e34>
   15080:	b	15084 <__assert_fail@plt+0x3d00>
   15084:	b	15088 <__assert_fail@plt+0x3d04>
   15088:	ldr	r0, [fp, #-176]	; 0xffffff50
   1508c:	ldr	r1, [fp, #-172]	; 0xffffff54
   15090:	lsl	r1, r1, #1
   15094:	orr	r1, r1, r0, lsr #31
   15098:	lsl	r0, r0, #1
   1509c:	ldr	r2, [fp, #-180]	; 0xffffff4c
   150a0:	orr	r0, r0, r2, lsr #31
   150a4:	str	r1, [fp, #-172]	; 0xffffff54
   150a8:	str	r0, [fp, #-176]	; 0xffffff50
   150ac:	ldr	r0, [fp, #-184]	; 0xffffff48
   150b0:	ldr	r1, [fp, #-180]	; 0xffffff4c
   150b4:	lsl	r1, r1, #1
   150b8:	orr	r1, r1, r0, lsr #31
   150bc:	lsl	r0, r0, #1
   150c0:	str	r0, [fp, #-184]	; 0xffffff48
   150c4:	str	r1, [fp, #-180]	; 0xffffff4c
   150c8:	ldr	r0, [fp, #-176]	; 0xffffff50
   150cc:	ldr	r1, [fp, #-172]	; 0xffffff54
   150d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   150d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   150d8:	subs	r0, r2, r0
   150dc:	sbcs	r1, r3, r1
   150e0:	bcc	15130 <__assert_fail@plt+0x3dac>
   150e4:	b	150e8 <__assert_fail@plt+0x3d64>
   150e8:	ldr	r0, [fp, #-176]	; 0xffffff50
   150ec:	ldr	r1, [fp, #-172]	; 0xffffff54
   150f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   150f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   150f8:	eor	r1, r1, r3
   150fc:	eor	r0, r0, r2
   15100:	orr	r0, r0, r1
   15104:	cmp	r0, #0
   15108:	bne	151b4 <__assert_fail@plt+0x3e30>
   1510c:	b	15110 <__assert_fail@plt+0x3d8c>
   15110:	ldr	r0, [fp, #-184]	; 0xffffff48
   15114:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15118:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1511c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15120:	subs	r0, r0, r2
   15124:	sbcs	r1, r1, r3
   15128:	bcc	151b4 <__assert_fail@plt+0x3e30>
   1512c:	b	15130 <__assert_fail@plt+0x3dac>
   15130:	b	15134 <__assert_fail@plt+0x3db0>
   15134:	ldr	r0, [fp, #-184]	; 0xffffff48
   15138:	ldr	r1, [fp, #-180]	; 0xffffff4c
   1513c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15140:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15144:	subs	r0, r0, r2
   15148:	sbcs	r1, r1, r3
   1514c:	mov	r2, #0
   15150:	mov	r3, r2
   15154:	movwcc	r3, #1
   15158:	str	r2, [fp, #-196]	; 0xffffff3c
   1515c:	str	r3, [fp, #-200]	; 0xffffff38
   15160:	ldr	r2, [fp, #-184]	; 0xffffff48
   15164:	ldr	r3, [fp, #-180]	; 0xffffff4c
   15168:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1516c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15170:	subs	r2, r2, ip
   15174:	sbc	r3, r3, lr
   15178:	str	r2, [fp, #-184]	; 0xffffff48
   1517c:	str	r3, [fp, #-180]	; 0xffffff4c
   15180:	ldr	r2, [fp, #-176]	; 0xffffff50
   15184:	ldr	r3, [fp, #-172]	; 0xffffff54
   15188:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1518c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15190:	subs	r2, r2, ip
   15194:	sbc	r3, r3, lr
   15198:	ldr	ip, [fp, #-200]	; 0xffffff38
   1519c:	ldr	lr, [fp, #-196]	; 0xffffff3c
   151a0:	subs	r2, r2, ip
   151a4:	sbc	r3, r3, lr
   151a8:	str	r2, [fp, #-176]	; 0xffffff50
   151ac:	str	r3, [fp, #-172]	; 0xffffff54
   151b0:	b	151b4 <__assert_fail@plt+0x3e30>
   151b4:	b	1505c <__assert_fail@plt+0x3cd8>
   151b8:	ldr	r0, [fp, #-176]	; 0xffffff50
   151bc:	ldr	r1, [fp, #-172]	; 0xffffff54
   151c0:	str	r1, [fp, #-100]	; 0xffffff9c
   151c4:	str	r0, [fp, #-104]	; 0xffffff98
   151c8:	ldr	r0, [fp, #-184]	; 0xffffff48
   151cc:	ldr	r1, [fp, #-180]	; 0xffffff4c
   151d0:	str	r1, [fp, #-108]	; 0xffffff94
   151d4:	str	r0, [fp, #-112]	; 0xffffff90
   151d8:	b	151dc <__assert_fail@plt+0x3e58>
   151dc:	b	151e0 <__assert_fail@plt+0x3e5c>
   151e0:	ldr	r0, [fp, #-112]	; 0xffffff90
   151e4:	ldr	r1, [fp, #-108]	; 0xffffff94
   151e8:	adds	r0, r0, r0
   151ec:	adc	r1, r1, r1
   151f0:	str	r0, [fp, #-208]	; 0xffffff30
   151f4:	str	r1, [fp, #-204]	; 0xffffff34
   151f8:	ldr	r0, [fp, #-104]	; 0xffffff98
   151fc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15200:	adds	r0, r0, r0
   15204:	adc	r1, r1, r1
   15208:	ldr	r2, [fp, #-208]	; 0xffffff30
   1520c:	ldr	r3, [fp, #-204]	; 0xffffff34
   15210:	ldr	ip, [fp, #-112]	; 0xffffff90
   15214:	ldr	lr, [fp, #-108]	; 0xffffff94
   15218:	subs	r2, r2, ip
   1521c:	sbcs	r3, r3, lr
   15220:	mov	ip, #0
   15224:	movwcc	ip, #1
   15228:	adds	lr, r0, #1
   1522c:	adc	r4, r1, #0
   15230:	cmp	ip, #0
   15234:	movne	r1, r4
   15238:	cmp	ip, #0
   1523c:	movne	r0, lr
   15240:	str	r1, [fp, #-52]	; 0xffffffcc
   15244:	str	r0, [fp, #-56]	; 0xffffffc8
   15248:	ldr	r0, [fp, #-208]	; 0xffffff30
   1524c:	ldr	r1, [fp, #-204]	; 0xffffff34
   15250:	str	r1, [fp, #-60]	; 0xffffffc4
   15254:	str	r0, [fp, #-64]	; 0xffffffc0
   15258:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1525c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15260:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15264:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15268:	subs	r0, r2, r0
   1526c:	sbcs	r1, r3, r1
   15270:	bcc	152c0 <__assert_fail@plt+0x3f3c>
   15274:	b	15278 <__assert_fail@plt+0x3ef4>
   15278:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1527c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15280:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15284:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15288:	eor	r1, r1, r3
   1528c:	eor	r0, r0, r2
   15290:	orr	r0, r0, r1
   15294:	cmp	r0, #0
   15298:	bne	15344 <__assert_fail@plt+0x3fc0>
   1529c:	b	152a0 <__assert_fail@plt+0x3f1c>
   152a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   152a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   152a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   152ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   152b0:	subs	r0, r0, r2
   152b4:	sbcs	r1, r1, r3
   152b8:	bcc	15344 <__assert_fail@plt+0x3fc0>
   152bc:	b	152c0 <__assert_fail@plt+0x3f3c>
   152c0:	b	152c4 <__assert_fail@plt+0x3f40>
   152c4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   152c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   152cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   152d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   152d4:	subs	r0, r0, r2
   152d8:	sbcs	r1, r1, r3
   152dc:	mov	r2, #0
   152e0:	mov	r3, r2
   152e4:	movwcc	r3, #1
   152e8:	str	r2, [fp, #-212]	; 0xffffff2c
   152ec:	str	r3, [fp, #-216]	; 0xffffff28
   152f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   152f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   152f8:	ldr	ip, [fp, #-48]	; 0xffffffd0
   152fc:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15300:	subs	r2, r2, ip
   15304:	sbc	r3, r3, lr
   15308:	str	r2, [fp, #-64]	; 0xffffffc0
   1530c:	str	r3, [fp, #-60]	; 0xffffffc4
   15310:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15314:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15318:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1531c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15320:	subs	r2, r2, ip
   15324:	sbc	r3, r3, lr
   15328:	ldr	ip, [fp, #-216]	; 0xffffff28
   1532c:	ldr	lr, [fp, #-212]	; 0xffffff2c
   15330:	subs	r2, r2, ip
   15334:	sbc	r3, r3, lr
   15338:	str	r2, [fp, #-56]	; 0xffffffc8
   1533c:	str	r3, [fp, #-52]	; 0xffffffcc
   15340:	b	15344 <__assert_fail@plt+0x3fc0>
   15344:	b	15348 <__assert_fail@plt+0x3fc4>
   15348:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1534c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15350:	str	r1, [fp, #-68]	; 0xffffffbc
   15354:	str	r0, [fp, #-72]	; 0xffffffb8
   15358:	str	r1, [fp, #-84]	; 0xffffffac
   1535c:	str	r0, [fp, #-88]	; 0xffffffa8
   15360:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15364:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15368:	str	r1, [fp, #-76]	; 0xffffffb4
   1536c:	str	r0, [fp, #-80]	; 0xffffffb0
   15370:	str	r1, [fp, #-92]	; 0xffffffa4
   15374:	str	r0, [fp, #-96]	; 0xffffffa0
   15378:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1537c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15380:	orr	r0, r0, r1
   15384:	mov	r1, #1
   15388:	cmp	r0, #0
   1538c:	str	r1, [sp, #84]	; 0x54
   15390:	bne	153b4 <__assert_fail@plt+0x4030>
   15394:	b	15398 <__assert_fail@plt+0x4014>
   15398:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1539c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   153a0:	eor	r0, r0, #1
   153a4:	orr	r0, r0, r1
   153a8:	cmp	r0, #0
   153ac:	movwne	r0, #1
   153b0:	str	r0, [sp, #84]	; 0x54
   153b4:	ldr	r0, [sp, #84]	; 0x54
   153b8:	tst	r0, #1
   153bc:	beq	166b0 <__assert_fail@plt+0x532c>
   153c0:	b	153c4 <__assert_fail@plt+0x4040>
   153c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   153c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   153cc:	str	r1, [fp, #-220]	; 0xffffff24
   153d0:	str	r0, [fp, #-224]	; 0xffffff20
   153d4:	ldr	r0, [fp, #-224]	; 0xffffff20
   153d8:	ldr	r1, [fp, #-220]	; 0xffffff24
   153dc:	lsrs	r1, r1, #1
   153e0:	rrx	r0, r0
   153e4:	and	r0, r0, #127	; 0x7f
   153e8:	movw	r2, #28806	; 0x7086
   153ec:	movt	r2, #3
   153f0:	ldrb	r0, [r2, r0]
   153f4:	mov	r2, #0
   153f8:	str	r2, [fp, #-228]	; 0xffffff1c
   153fc:	str	r0, [fp, #-232]	; 0xffffff18
   15400:	ldr	r0, [fp, #-232]	; 0xffffff18
   15404:	ldr	r2, [fp, #-228]	; 0xffffff1c
   15408:	lsl	r3, r2, #1
   1540c:	orr	r3, r3, r0, lsr #31
   15410:	umull	ip, lr, r0, r0
   15414:	mla	lr, r0, r2, lr
   15418:	mla	r2, r0, r2, lr
   1541c:	ldr	lr, [fp, #-224]	; 0xffffff20
   15420:	ldr	r4, [fp, #-220]	; 0xffffff24
   15424:	umull	r5, r6, ip, lr
   15428:	mla	ip, ip, r4, r6
   1542c:	mla	r2, r2, lr, ip
   15430:	rsbs	r0, r5, r0, lsl #1
   15434:	sbc	r2, r3, r2
   15438:	str	r0, [fp, #-232]	; 0xffffff18
   1543c:	str	r2, [fp, #-228]	; 0xffffff1c
   15440:	ldr	r0, [fp, #-232]	; 0xffffff18
   15444:	ldr	r2, [fp, #-228]	; 0xffffff1c
   15448:	lsl	r3, r2, #1
   1544c:	orr	r3, r3, r0, lsr #31
   15450:	umull	ip, lr, r0, r0
   15454:	mla	lr, r0, r2, lr
   15458:	mla	r2, r0, r2, lr
   1545c:	ldr	lr, [fp, #-224]	; 0xffffff20
   15460:	ldr	r4, [fp, #-220]	; 0xffffff24
   15464:	umull	r5, r6, ip, lr
   15468:	mla	ip, ip, r4, r6
   1546c:	mla	r2, r2, lr, ip
   15470:	rsbs	r0, r5, r0, lsl #1
   15474:	sbc	r2, r3, r2
   15478:	str	r0, [fp, #-232]	; 0xffffff18
   1547c:	str	r2, [fp, #-228]	; 0xffffff1c
   15480:	ldr	r0, [fp, #-232]	; 0xffffff18
   15484:	ldr	r2, [fp, #-228]	; 0xffffff1c
   15488:	lsl	r3, r2, #1
   1548c:	orr	r3, r3, r0, lsr #31
   15490:	umull	ip, lr, r0, r0
   15494:	mla	lr, r0, r2, lr
   15498:	mla	r2, r0, r2, lr
   1549c:	ldr	lr, [fp, #-224]	; 0xffffff20
   154a0:	ldr	r4, [fp, #-220]	; 0xffffff24
   154a4:	umull	r5, r6, ip, lr
   154a8:	mla	ip, ip, r4, r6
   154ac:	mla	r2, r2, lr, ip
   154b0:	rsbs	r0, r5, r0, lsl #1
   154b4:	sbc	r2, r3, r2
   154b8:	str	r0, [fp, #-232]	; 0xffffff18
   154bc:	str	r2, [fp, #-228]	; 0xffffff1c
   154c0:	ldr	r0, [fp, #-232]	; 0xffffff18
   154c4:	ldr	r2, [fp, #-228]	; 0xffffff1c
   154c8:	str	r2, [fp, #-132]	; 0xffffff7c
   154cc:	str	r0, [fp, #-136]	; 0xffffff78
   154d0:	b	154d4 <__assert_fail@plt+0x4150>
   154d4:	b	154d8 <__assert_fail@plt+0x4154>
   154d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   154dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   154e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   154e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   154e8:	ldr	ip, [fp, #-40]	; 0xffffffd8
   154ec:	ldr	lr, [fp, #-36]	; 0xffffffdc
   154f0:	ldr	r4, [fp, #-48]	; 0xffffffd0
   154f4:	ldr	r5, [fp, #-44]	; 0xffffffd4
   154f8:	ldr	r6, [fp, #-136]	; 0xffffff78
   154fc:	ldr	r7, [fp, #-132]	; 0xffffff7c
   15500:	mov	r8, sp
   15504:	str	r7, [r8, #44]	; 0x2c
   15508:	str	r6, [r8, #40]	; 0x28
   1550c:	str	r5, [r8, #36]	; 0x24
   15510:	str	r4, [r8, #32]
   15514:	str	lr, [r8, #28]
   15518:	str	ip, [r8, #24]
   1551c:	str	r3, [r8, #20]
   15520:	str	r2, [r8, #16]
   15524:	str	r1, [r8, #12]
   15528:	str	r0, [r8, #8]
   1552c:	str	r3, [r8, #4]
   15530:	str	r2, [r8]
   15534:	sub	r2, fp, #160	; 0xa0
   15538:	str	r0, [sp, #80]	; 0x50
   1553c:	mov	r0, r2
   15540:	ldr	r2, [sp, #80]	; 0x50
   15544:	mov	r3, r1
   15548:	bl	18238 <__assert_fail@plt+0x6eb4>
   1554c:	str	r1, [fp, #-60]	; 0xffffffc4
   15550:	str	r0, [fp, #-64]	; 0xffffffc0
   15554:	ldr	r0, [fp, #-160]	; 0xffffff60
   15558:	ldr	r1, [fp, #-156]	; 0xffffff64
   1555c:	str	r1, [fp, #-52]	; 0xffffffcc
   15560:	str	r0, [fp, #-56]	; 0xffffffc8
   15564:	b	15568 <__assert_fail@plt+0x41e4>
   15568:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1556c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15570:	ldr	r2, [fp, #8]
   15574:	adds	r0, r0, r2
   15578:	adc	r1, r1, #0
   1557c:	str	r0, [fp, #-240]	; 0xffffff10
   15580:	str	r1, [fp, #-236]	; 0xffffff14
   15584:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15588:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1558c:	ldr	r2, [fp, #-240]	; 0xffffff10
   15590:	ldr	r3, [fp, #-236]	; 0xffffff14
   15594:	ldr	ip, [fp, #-64]	; 0xffffffc0
   15598:	ldr	lr, [fp, #-60]	; 0xffffffc4
   1559c:	subs	r2, r2, ip
   155a0:	sbcs	r3, r3, lr
   155a4:	mov	ip, #0
   155a8:	movwcc	ip, #1
   155ac:	adds	lr, r0, #1
   155b0:	adc	r4, r1, #0
   155b4:	cmp	ip, #0
   155b8:	movne	r1, r4
   155bc:	cmp	ip, #0
   155c0:	movne	r0, lr
   155c4:	str	r1, [fp, #-52]	; 0xffffffcc
   155c8:	str	r0, [fp, #-56]	; 0xffffffc8
   155cc:	ldr	r0, [fp, #-240]	; 0xffffff10
   155d0:	ldr	r1, [fp, #-236]	; 0xffffff14
   155d4:	str	r1, [fp, #-60]	; 0xffffffc4
   155d8:	str	r0, [fp, #-64]	; 0xffffffc0
   155dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   155e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   155e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   155e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   155ec:	subs	r0, r2, r0
   155f0:	sbcs	r1, r3, r1
   155f4:	bcc	15644 <__assert_fail@plt+0x42c0>
   155f8:	b	155fc <__assert_fail@plt+0x4278>
   155fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15600:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15604:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15608:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1560c:	eor	r1, r1, r3
   15610:	eor	r0, r0, r2
   15614:	orr	r0, r0, r1
   15618:	cmp	r0, #0
   1561c:	bne	156c8 <__assert_fail@plt+0x4344>
   15620:	b	15624 <__assert_fail@plt+0x42a0>
   15624:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15628:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1562c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15630:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15634:	subs	r0, r0, r2
   15638:	sbcs	r1, r1, r3
   1563c:	bcc	156c8 <__assert_fail@plt+0x4344>
   15640:	b	15644 <__assert_fail@plt+0x42c0>
   15644:	b	15648 <__assert_fail@plt+0x42c4>
   15648:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1564c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15650:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15654:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15658:	subs	r0, r0, r2
   1565c:	sbcs	r1, r1, r3
   15660:	mov	r2, #0
   15664:	mov	r3, r2
   15668:	movwcc	r3, #1
   1566c:	str	r2, [fp, #-244]	; 0xffffff0c
   15670:	str	r3, [fp, #-248]	; 0xffffff08
   15674:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15678:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1567c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15680:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15684:	subs	r2, r2, ip
   15688:	sbc	r3, r3, lr
   1568c:	str	r2, [fp, #-64]	; 0xffffffc0
   15690:	str	r3, [fp, #-60]	; 0xffffffc4
   15694:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15698:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1569c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   156a0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   156a4:	subs	r2, r2, ip
   156a8:	sbc	r3, r3, lr
   156ac:	ldr	ip, [fp, #-248]	; 0xffffff08
   156b0:	ldr	lr, [fp, #-244]	; 0xffffff0c
   156b4:	subs	r2, r2, ip
   156b8:	sbc	r3, r3, lr
   156bc:	str	r2, [fp, #-56]	; 0xffffffc8
   156c0:	str	r3, [fp, #-52]	; 0xffffffcc
   156c4:	b	156c8 <__assert_fail@plt+0x4344>
   156c8:	b	156cc <__assert_fail@plt+0x4348>
   156cc:	b	156d0 <__assert_fail@plt+0x434c>
   156d0:	b	156d4 <__assert_fail@plt+0x4350>
   156d4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   156d8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   156dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   156e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   156e4:	subs	r0, r0, r2
   156e8:	sbcs	r1, r1, r3
   156ec:	mov	r2, #0
   156f0:	mov	r3, r2
   156f4:	movwcc	r3, #1
   156f8:	str	r2, [fp, #-252]	; 0xffffff04
   156fc:	str	r3, [fp, #-256]	; 0xffffff00
   15700:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15704:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15708:	ldr	ip, [fp, #-64]	; 0xffffffc0
   1570c:	ldr	lr, [fp, #-60]	; 0xffffffc4
   15710:	subs	r2, r2, ip
   15714:	sbc	r3, r3, lr
   15718:	str	r2, [fp, #-128]	; 0xffffff80
   1571c:	str	r3, [fp, #-124]	; 0xffffff84
   15720:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15724:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15728:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1572c:	ldr	lr, [fp, #-52]	; 0xffffffcc
   15730:	subs	r2, r2, ip
   15734:	sbc	r3, r3, lr
   15738:	ldr	ip, [fp, #-256]	; 0xffffff00
   1573c:	ldr	lr, [fp, #-252]	; 0xffffff04
   15740:	subs	r2, r2, ip
   15744:	sbc	r3, r3, lr
   15748:	str	r2, [fp, #-120]	; 0xffffff88
   1574c:	str	r3, [fp, #-116]	; 0xffffff8c
   15750:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15754:	cmn	r0, #1
   15758:	bgt	157f0 <__assert_fail@plt+0x446c>
   1575c:	b	15760 <__assert_fail@plt+0x43dc>
   15760:	b	15764 <__assert_fail@plt+0x43e0>
   15764:	ldr	r0, [fp, #-128]	; 0xffffff80
   15768:	ldr	r1, [fp, #-124]	; 0xffffff84
   1576c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15770:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15774:	adds	r0, r0, r2
   15778:	adc	r1, r1, r3
   1577c:	str	r0, [fp, #-264]	; 0xfffffef8
   15780:	str	r1, [fp, #-260]	; 0xfffffefc
   15784:	ldr	r0, [fp, #-120]	; 0xffffff88
   15788:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1578c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15790:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15794:	adds	r0, r0, r2
   15798:	adc	r1, r1, r3
   1579c:	ldr	r2, [fp, #-264]	; 0xfffffef8
   157a0:	ldr	r3, [fp, #-260]	; 0xfffffefc
   157a4:	ldr	ip, [fp, #-128]	; 0xffffff80
   157a8:	ldr	lr, [fp, #-124]	; 0xffffff84
   157ac:	subs	r2, r2, ip
   157b0:	sbcs	r3, r3, lr
   157b4:	mov	ip, #0
   157b8:	movwcc	ip, #1
   157bc:	adds	lr, r0, #1
   157c0:	adc	r4, r1, #0
   157c4:	cmp	ip, #0
   157c8:	movne	r0, lr
   157cc:	cmp	ip, #0
   157d0:	movne	r1, r4
   157d4:	str	r1, [fp, #-116]	; 0xffffff8c
   157d8:	str	r0, [fp, #-120]	; 0xffffff88
   157dc:	ldr	r0, [fp, #-264]	; 0xfffffef8
   157e0:	ldr	r1, [fp, #-260]	; 0xfffffefc
   157e4:	str	r1, [fp, #-124]	; 0xffffff84
   157e8:	str	r0, [fp, #-128]	; 0xffffff80
   157ec:	b	157f0 <__assert_fail@plt+0x446c>
   157f0:	b	157f4 <__assert_fail@plt+0x4470>
   157f4:	ldr	r2, [fp, #-104]	; 0xffffff98
   157f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   157fc:	ldr	r0, [fp, #-112]	; 0xffffff90
   15800:	ldr	r1, [fp, #-108]	; 0xffffff94
   15804:	ldr	ip, [fp, #-120]	; 0xffffff88
   15808:	ldr	lr, [fp, #-116]	; 0xffffff8c
   1580c:	ldr	r4, [fp, #-128]	; 0xffffff80
   15810:	ldr	r5, [fp, #-124]	; 0xffffff84
   15814:	ldr	r6, [fp, #-40]	; 0xffffffd8
   15818:	ldr	r7, [fp, #-36]	; 0xffffffdc
   1581c:	ldr	r8, [fp, #-48]	; 0xffffffd0
   15820:	ldr	r9, [fp, #-44]	; 0xffffffd4
   15824:	ldr	sl, [fp, #-136]	; 0xffffff78
   15828:	str	r0, [sp, #76]	; 0x4c
   1582c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15830:	str	r0, [sp, #72]	; 0x48
   15834:	mov	r0, sp
   15838:	str	r0, [sp, #68]	; 0x44
   1583c:	ldr	r0, [sp, #72]	; 0x48
   15840:	str	r1, [sp, #64]	; 0x40
   15844:	ldr	r1, [sp, #68]	; 0x44
   15848:	str	r0, [r1, #44]	; 0x2c
   1584c:	str	sl, [r1, #40]	; 0x28
   15850:	str	r9, [r1, #36]	; 0x24
   15854:	str	r8, [r1, #32]
   15858:	str	r7, [r1, #28]
   1585c:	str	r6, [r1, #24]
   15860:	str	r5, [r1, #20]
   15864:	str	r4, [r1, #16]
   15868:	str	lr, [r1, #12]
   1586c:	str	ip, [r1, #8]
   15870:	ldr	r0, [sp, #64]	; 0x40
   15874:	str	r0, [r1, #4]
   15878:	ldr	r0, [sp, #76]	; 0x4c
   1587c:	str	r0, [r1]
   15880:	sub	r0, fp, #160	; 0xa0
   15884:	bl	18238 <__assert_fail@plt+0x6eb4>
   15888:	str	r1, [fp, #-108]	; 0xffffff94
   1588c:	str	r0, [fp, #-112]	; 0xffffff90
   15890:	ldr	r0, [fp, #-160]	; 0xffffff60
   15894:	ldr	r1, [fp, #-156]	; 0xffffff64
   15898:	str	r1, [fp, #-100]	; 0xffffff9c
   1589c:	str	r0, [fp, #-104]	; 0xffffff98
   158a0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   158a4:	and	r0, r0, #31
   158a8:	cmp	r0, #1
   158ac:	bne	15954 <__assert_fail@plt+0x45d0>
   158b0:	ldr	r2, [fp, #-104]	; 0xffffff98
   158b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   158b8:	ldr	r0, [fp, #-112]	; 0xffffff90
   158bc:	ldr	r1, [fp, #-108]	; 0xffffff94
   158c0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   158c4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   158c8:	ldr	r4, [fp, #-48]	; 0xffffffd0
   158cc:	ldr	r5, [fp, #-44]	; 0xffffffd4
   158d0:	mov	r6, sp
   158d4:	str	r5, [r6, #20]
   158d8:	str	r4, [r6, #16]
   158dc:	str	lr, [r6, #12]
   158e0:	str	ip, [r6, #8]
   158e4:	str	r1, [r6, #4]
   158e8:	str	r0, [r6]
   158ec:	sub	r0, fp, #144	; 0x90
   158f0:	bl	19430 <__assert_fail@plt+0x80ac>
   158f4:	str	r1, [fp, #-148]	; 0xffffff6c
   158f8:	str	r0, [fp, #-152]	; 0xffffff68
   158fc:	ldr	r0, [fp, #-144]	; 0xffffff70
   15900:	ldr	r1, [fp, #-140]	; 0xffffff74
   15904:	orr	r0, r0, r1
   15908:	cmp	r0, #0
   1590c:	bne	15930 <__assert_fail@plt+0x45ac>
   15910:	b	15914 <__assert_fail@plt+0x4590>
   15914:	ldr	r0, [fp, #-152]	; 0xffffff68
   15918:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1591c:	eor	r0, r0, #1
   15920:	orr	r0, r0, r1
   15924:	cmp	r0, #0
   15928:	beq	15934 <__assert_fail@plt+0x45b0>
   1592c:	b	15930 <__assert_fail@plt+0x45ac>
   15930:	b	15be8 <__assert_fail@plt+0x4864>
   15934:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15938:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1593c:	str	r1, [fp, #-84]	; 0xffffffac
   15940:	str	r0, [fp, #-88]	; 0xffffffa8
   15944:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15948:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1594c:	str	r1, [fp, #-92]	; 0xffffffa4
   15950:	str	r0, [fp, #-96]	; 0xffffffa0
   15954:	b	15958 <__assert_fail@plt+0x45d4>
   15958:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1595c:	mvn	r1, #0
   15960:	add	r0, r0, r1
   15964:	str	r0, [fp, #-164]	; 0xffffff5c
   15968:	cmp	r0, #0
   1596c:	bne	154d8 <__assert_fail@plt+0x4154>
   15970:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15974:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15978:	str	r1, [fp, #-68]	; 0xffffffbc
   1597c:	str	r0, [fp, #-72]	; 0xffffffb8
   15980:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15984:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15988:	str	r1, [fp, #-76]	; 0xffffffb4
   1598c:	str	r0, [fp, #-80]	; 0xffffffb0
   15990:	ldr	r0, [fp, #-168]	; 0xffffff58
   15994:	str	r0, [fp, #-164]	; 0xffffff5c
   15998:	ldr	r0, [fp, #-168]	; 0xffffff58
   1599c:	lsl	r0, r0, #1
   159a0:	str	r0, [fp, #-168]	; 0xffffff58
   159a4:	movw	r0, #0
   159a8:	str	r0, [fp, #-268]	; 0xfffffef4
   159ac:	ldr	r0, [fp, #-268]	; 0xfffffef4
   159b0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   159b4:	cmp	r0, r1
   159b8:	bcs	15bc4 <__assert_fail@plt+0x4840>
   159bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   159c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   159c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   159c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   159cc:	ldr	ip, [fp, #-40]	; 0xffffffd8
   159d0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   159d4:	ldr	r4, [fp, #-48]	; 0xffffffd0
   159d8:	ldr	r5, [fp, #-44]	; 0xffffffd4
   159dc:	ldr	r6, [fp, #-136]	; 0xffffff78
   159e0:	ldr	r7, [fp, #-132]	; 0xffffff7c
   159e4:	mov	r8, sp
   159e8:	str	r7, [r8, #44]	; 0x2c
   159ec:	str	r6, [r8, #40]	; 0x28
   159f0:	str	r5, [r8, #36]	; 0x24
   159f4:	str	r4, [r8, #32]
   159f8:	str	lr, [r8, #28]
   159fc:	str	ip, [r8, #24]
   15a00:	str	r3, [r8, #20]
   15a04:	str	r2, [r8, #16]
   15a08:	str	r1, [r8, #12]
   15a0c:	str	r0, [r8, #8]
   15a10:	str	r3, [r8, #4]
   15a14:	str	r2, [r8]
   15a18:	sub	r2, fp, #160	; 0xa0
   15a1c:	str	r0, [sp, #60]	; 0x3c
   15a20:	mov	r0, r2
   15a24:	ldr	r2, [sp, #60]	; 0x3c
   15a28:	mov	r3, r1
   15a2c:	bl	18238 <__assert_fail@plt+0x6eb4>
   15a30:	str	r1, [fp, #-60]	; 0xffffffc4
   15a34:	str	r0, [fp, #-64]	; 0xffffffc0
   15a38:	ldr	r0, [fp, #-160]	; 0xffffff60
   15a3c:	ldr	r1, [fp, #-156]	; 0xffffff64
   15a40:	str	r1, [fp, #-52]	; 0xffffffcc
   15a44:	str	r0, [fp, #-56]	; 0xffffffc8
   15a48:	b	15a4c <__assert_fail@plt+0x46c8>
   15a4c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15a50:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15a54:	ldr	r2, [fp, #8]
   15a58:	adds	r0, r0, r2
   15a5c:	adc	r1, r1, #0
   15a60:	str	r0, [sp, #264]	; 0x108
   15a64:	str	r1, [sp, #268]	; 0x10c
   15a68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15a6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15a70:	ldr	r2, [sp, #264]	; 0x108
   15a74:	ldr	r3, [sp, #268]	; 0x10c
   15a78:	ldr	ip, [fp, #-64]	; 0xffffffc0
   15a7c:	ldr	lr, [fp, #-60]	; 0xffffffc4
   15a80:	subs	r2, r2, ip
   15a84:	sbcs	r3, r3, lr
   15a88:	mov	ip, #0
   15a8c:	movwcc	ip, #1
   15a90:	adds	lr, r0, #1
   15a94:	adc	r4, r1, #0
   15a98:	cmp	ip, #0
   15a9c:	movne	r1, r4
   15aa0:	cmp	ip, #0
   15aa4:	movne	r0, lr
   15aa8:	str	r1, [fp, #-52]	; 0xffffffcc
   15aac:	str	r0, [fp, #-56]	; 0xffffffc8
   15ab0:	ldr	r0, [sp, #264]	; 0x108
   15ab4:	ldr	r1, [sp, #268]	; 0x10c
   15ab8:	str	r1, [fp, #-60]	; 0xffffffc4
   15abc:	str	r0, [fp, #-64]	; 0xffffffc0
   15ac0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ac4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15ac8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15acc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ad0:	subs	r0, r2, r0
   15ad4:	sbcs	r1, r3, r1
   15ad8:	bcc	15b28 <__assert_fail@plt+0x47a4>
   15adc:	b	15ae0 <__assert_fail@plt+0x475c>
   15ae0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ae4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15ae8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15aec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15af0:	eor	r1, r1, r3
   15af4:	eor	r0, r0, r2
   15af8:	orr	r0, r0, r1
   15afc:	cmp	r0, #0
   15b00:	bne	15bac <__assert_fail@plt+0x4828>
   15b04:	b	15b08 <__assert_fail@plt+0x4784>
   15b08:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15b0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15b10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15b14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b18:	subs	r0, r0, r2
   15b1c:	sbcs	r1, r1, r3
   15b20:	bcc	15bac <__assert_fail@plt+0x4828>
   15b24:	b	15b28 <__assert_fail@plt+0x47a4>
   15b28:	b	15b2c <__assert_fail@plt+0x47a8>
   15b2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15b30:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15b34:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15b38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b3c:	subs	r0, r0, r2
   15b40:	sbcs	r1, r1, r3
   15b44:	mov	r2, #0
   15b48:	mov	r3, r2
   15b4c:	movwcc	r3, #1
   15b50:	str	r2, [sp, #260]	; 0x104
   15b54:	str	r3, [sp, #256]	; 0x100
   15b58:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15b5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15b60:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15b64:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15b68:	subs	r2, r2, ip
   15b6c:	sbc	r3, r3, lr
   15b70:	str	r2, [fp, #-64]	; 0xffffffc0
   15b74:	str	r3, [fp, #-60]	; 0xffffffc4
   15b78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15b7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15b80:	ldr	ip, [fp, #-40]	; 0xffffffd8
   15b84:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15b88:	subs	r2, r2, ip
   15b8c:	sbc	r3, r3, lr
   15b90:	ldr	ip, [sp, #256]	; 0x100
   15b94:	ldr	lr, [sp, #260]	; 0x104
   15b98:	subs	r2, r2, ip
   15b9c:	sbc	r3, r3, lr
   15ba0:	str	r2, [fp, #-56]	; 0xffffffc8
   15ba4:	str	r3, [fp, #-52]	; 0xffffffcc
   15ba8:	b	15bac <__assert_fail@plt+0x4828>
   15bac:	b	15bb0 <__assert_fail@plt+0x482c>
   15bb0:	b	15bb4 <__assert_fail@plt+0x4830>
   15bb4:	ldr	r0, [fp, #-268]	; 0xfffffef4
   15bb8:	add	r0, r0, #1
   15bbc:	str	r0, [fp, #-268]	; 0xfffffef4
   15bc0:	b	159ac <__assert_fail@plt+0x4628>
   15bc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15bc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15bcc:	str	r1, [fp, #-84]	; 0xffffffac
   15bd0:	str	r0, [fp, #-88]	; 0xffffffa8
   15bd4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15bd8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15bdc:	str	r1, [fp, #-92]	; 0xffffffa4
   15be0:	str	r0, [fp, #-96]	; 0xffffffa0
   15be4:	b	154d4 <__assert_fail@plt+0x4150>
   15be8:	b	15bec <__assert_fail@plt+0x4868>
   15bec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15bf0:	ldr	r1, [fp, #-84]	; 0xffffffac
   15bf4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15bf8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15bfc:	ldr	ip, [fp, #-40]	; 0xffffffd8
   15c00:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15c04:	ldr	r4, [fp, #-48]	; 0xffffffd0
   15c08:	ldr	r5, [fp, #-44]	; 0xffffffd4
   15c0c:	ldr	r6, [fp, #-136]	; 0xffffff78
   15c10:	ldr	r7, [fp, #-132]	; 0xffffff7c
   15c14:	mov	r8, sp
   15c18:	str	r7, [r8, #44]	; 0x2c
   15c1c:	str	r6, [r8, #40]	; 0x28
   15c20:	str	r5, [r8, #36]	; 0x24
   15c24:	str	r4, [r8, #32]
   15c28:	str	lr, [r8, #28]
   15c2c:	str	ip, [r8, #24]
   15c30:	str	r3, [r8, #20]
   15c34:	str	r2, [r8, #16]
   15c38:	str	r1, [r8, #12]
   15c3c:	str	r0, [r8, #8]
   15c40:	str	r3, [r8, #4]
   15c44:	str	r2, [r8]
   15c48:	sub	r2, fp, #160	; 0xa0
   15c4c:	str	r0, [sp, #56]	; 0x38
   15c50:	mov	r0, r2
   15c54:	ldr	r2, [sp, #56]	; 0x38
   15c58:	mov	r3, r1
   15c5c:	bl	18238 <__assert_fail@plt+0x6eb4>
   15c60:	str	r1, [fp, #-92]	; 0xffffffa4
   15c64:	str	r0, [fp, #-96]	; 0xffffffa0
   15c68:	ldr	r0, [fp, #-160]	; 0xffffff60
   15c6c:	ldr	r1, [fp, #-156]	; 0xffffff64
   15c70:	str	r1, [fp, #-84]	; 0xffffffac
   15c74:	str	r0, [fp, #-88]	; 0xffffffa8
   15c78:	b	15c7c <__assert_fail@plt+0x48f8>
   15c7c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15c80:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15c84:	ldr	r2, [fp, #8]
   15c88:	adds	r0, r0, r2
   15c8c:	adc	r1, r1, #0
   15c90:	str	r0, [sp, #248]	; 0xf8
   15c94:	str	r1, [sp, #252]	; 0xfc
   15c98:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15c9c:	ldr	r1, [fp, #-84]	; 0xffffffac
   15ca0:	ldr	r2, [sp, #248]	; 0xf8
   15ca4:	ldr	r3, [sp, #252]	; 0xfc
   15ca8:	ldr	ip, [fp, #-96]	; 0xffffffa0
   15cac:	ldr	lr, [fp, #-92]	; 0xffffffa4
   15cb0:	subs	r2, r2, ip
   15cb4:	sbcs	r3, r3, lr
   15cb8:	mov	ip, #0
   15cbc:	movwcc	ip, #1
   15cc0:	adds	lr, r0, #1
   15cc4:	adc	r4, r1, #0
   15cc8:	cmp	ip, #0
   15ccc:	movne	r1, r4
   15cd0:	cmp	ip, #0
   15cd4:	movne	r0, lr
   15cd8:	str	r1, [fp, #-84]	; 0xffffffac
   15cdc:	str	r0, [fp, #-88]	; 0xffffffa8
   15ce0:	ldr	r0, [sp, #248]	; 0xf8
   15ce4:	ldr	r1, [sp, #252]	; 0xfc
   15ce8:	str	r1, [fp, #-92]	; 0xffffffa4
   15cec:	str	r0, [fp, #-96]	; 0xffffffa0
   15cf0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15cf4:	ldr	r1, [fp, #-84]	; 0xffffffac
   15cf8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15cfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d00:	subs	r0, r2, r0
   15d04:	sbcs	r1, r3, r1
   15d08:	bcc	15d58 <__assert_fail@plt+0x49d4>
   15d0c:	b	15d10 <__assert_fail@plt+0x498c>
   15d10:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15d14:	ldr	r1, [fp, #-84]	; 0xffffffac
   15d18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15d1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d20:	eor	r1, r1, r3
   15d24:	eor	r0, r0, r2
   15d28:	orr	r0, r0, r1
   15d2c:	cmp	r0, #0
   15d30:	bne	15ddc <__assert_fail@plt+0x4a58>
   15d34:	b	15d38 <__assert_fail@plt+0x49b4>
   15d38:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15d3c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15d40:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15d44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d48:	subs	r0, r0, r2
   15d4c:	sbcs	r1, r1, r3
   15d50:	bcc	15ddc <__assert_fail@plt+0x4a58>
   15d54:	b	15d58 <__assert_fail@plt+0x49d4>
   15d58:	b	15d5c <__assert_fail@plt+0x49d8>
   15d5c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15d60:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15d64:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15d68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d6c:	subs	r0, r0, r2
   15d70:	sbcs	r1, r1, r3
   15d74:	mov	r2, #0
   15d78:	mov	r3, r2
   15d7c:	movwcc	r3, #1
   15d80:	str	r2, [sp, #244]	; 0xf4
   15d84:	str	r3, [sp, #240]	; 0xf0
   15d88:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15d8c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15d90:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15d94:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15d98:	subs	r2, r2, ip
   15d9c:	sbc	r3, r3, lr
   15da0:	str	r2, [fp, #-96]	; 0xffffffa0
   15da4:	str	r3, [fp, #-92]	; 0xffffffa4
   15da8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15dac:	ldr	r3, [fp, #-84]	; 0xffffffac
   15db0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   15db4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15db8:	subs	r2, r2, ip
   15dbc:	sbc	r3, r3, lr
   15dc0:	ldr	ip, [sp, #240]	; 0xf0
   15dc4:	ldr	lr, [sp, #244]	; 0xf4
   15dc8:	subs	r2, r2, ip
   15dcc:	sbc	r3, r3, lr
   15dd0:	str	r2, [fp, #-88]	; 0xffffffa8
   15dd4:	str	r3, [fp, #-84]	; 0xffffffac
   15dd8:	b	15ddc <__assert_fail@plt+0x4a58>
   15ddc:	b	15de0 <__assert_fail@plt+0x4a5c>
   15de0:	b	15de4 <__assert_fail@plt+0x4a60>
   15de4:	b	15de8 <__assert_fail@plt+0x4a64>
   15de8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15dec:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15df0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15df4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15df8:	subs	r0, r0, r2
   15dfc:	sbcs	r1, r1, r3
   15e00:	mov	r2, #0
   15e04:	mov	r3, r2
   15e08:	movwcc	r3, #1
   15e0c:	str	r2, [sp, #236]	; 0xec
   15e10:	str	r3, [sp, #232]	; 0xe8
   15e14:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15e18:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15e1c:	ldr	ip, [fp, #-96]	; 0xffffffa0
   15e20:	ldr	lr, [fp, #-92]	; 0xffffffa4
   15e24:	subs	r2, r2, ip
   15e28:	sbc	r3, r3, lr
   15e2c:	str	r2, [fp, #-128]	; 0xffffff80
   15e30:	str	r3, [fp, #-124]	; 0xffffff84
   15e34:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15e38:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15e3c:	ldr	ip, [fp, #-88]	; 0xffffffa8
   15e40:	ldr	lr, [fp, #-84]	; 0xffffffac
   15e44:	subs	r2, r2, ip
   15e48:	sbc	r3, r3, lr
   15e4c:	ldr	ip, [sp, #232]	; 0xe8
   15e50:	ldr	lr, [sp, #236]	; 0xec
   15e54:	subs	r2, r2, ip
   15e58:	sbc	r3, r3, lr
   15e5c:	str	r2, [fp, #-120]	; 0xffffff88
   15e60:	str	r3, [fp, #-116]	; 0xffffff8c
   15e64:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15e68:	cmn	r0, #1
   15e6c:	bgt	15f04 <__assert_fail@plt+0x4b80>
   15e70:	b	15e74 <__assert_fail@plt+0x4af0>
   15e74:	b	15e78 <__assert_fail@plt+0x4af4>
   15e78:	ldr	r0, [fp, #-128]	; 0xffffff80
   15e7c:	ldr	r1, [fp, #-124]	; 0xffffff84
   15e80:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15e84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15e88:	adds	r0, r0, r2
   15e8c:	adc	r1, r1, r3
   15e90:	str	r0, [sp, #224]	; 0xe0
   15e94:	str	r1, [sp, #228]	; 0xe4
   15e98:	ldr	r0, [fp, #-120]	; 0xffffff88
   15e9c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   15ea0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15ea4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ea8:	adds	r0, r0, r2
   15eac:	adc	r1, r1, r3
   15eb0:	ldr	r2, [sp, #224]	; 0xe0
   15eb4:	ldr	r3, [sp, #228]	; 0xe4
   15eb8:	ldr	ip, [fp, #-128]	; 0xffffff80
   15ebc:	ldr	lr, [fp, #-124]	; 0xffffff84
   15ec0:	subs	r2, r2, ip
   15ec4:	sbcs	r3, r3, lr
   15ec8:	mov	ip, #0
   15ecc:	movwcc	ip, #1
   15ed0:	adds	lr, r0, #1
   15ed4:	adc	r4, r1, #0
   15ed8:	cmp	ip, #0
   15edc:	movne	r0, lr
   15ee0:	cmp	ip, #0
   15ee4:	movne	r1, r4
   15ee8:	str	r1, [fp, #-116]	; 0xffffff8c
   15eec:	str	r0, [fp, #-120]	; 0xffffff88
   15ef0:	ldr	r0, [sp, #224]	; 0xe0
   15ef4:	ldr	r1, [sp, #228]	; 0xe4
   15ef8:	str	r1, [fp, #-124]	; 0xffffff84
   15efc:	str	r0, [fp, #-128]	; 0xffffff80
   15f00:	b	15f04 <__assert_fail@plt+0x4b80>
   15f04:	b	15f08 <__assert_fail@plt+0x4b84>
   15f08:	ldr	r2, [fp, #-120]	; 0xffffff88
   15f0c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15f10:	ldr	r0, [fp, #-128]	; 0xffffff80
   15f14:	ldr	r1, [fp, #-124]	; 0xffffff84
   15f18:	ldr	ip, [fp, #-40]	; 0xffffffd8
   15f1c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15f20:	ldr	r4, [fp, #-48]	; 0xffffffd0
   15f24:	ldr	r5, [fp, #-44]	; 0xffffffd4
   15f28:	mov	r6, sp
   15f2c:	str	r5, [r6, #20]
   15f30:	str	r4, [r6, #16]
   15f34:	str	lr, [r6, #12]
   15f38:	str	ip, [r6, #8]
   15f3c:	str	r1, [r6, #4]
   15f40:	str	r0, [r6]
   15f44:	sub	r0, fp, #144	; 0x90
   15f48:	bl	19430 <__assert_fail@plt+0x80ac>
   15f4c:	str	r1, [fp, #-148]	; 0xffffff6c
   15f50:	str	r0, [fp, #-152]	; 0xffffff68
   15f54:	ldr	r0, [fp, #-144]	; 0xffffff70
   15f58:	ldr	r1, [fp, #-140]	; 0xffffff74
   15f5c:	orr	r0, r0, r1
   15f60:	mov	r1, #0
   15f64:	cmp	r0, #0
   15f68:	str	r1, [sp, #52]	; 0x34
   15f6c:	bne	15f90 <__assert_fail@plt+0x4c0c>
   15f70:	b	15f74 <__assert_fail@plt+0x4bf0>
   15f74:	ldr	r0, [fp, #-152]	; 0xffffff68
   15f78:	ldr	r1, [fp, #-148]	; 0xffffff6c
   15f7c:	eor	r0, r0, #1
   15f80:	orr	r0, r0, r1
   15f84:	clz	r0, r0
   15f88:	lsr	r0, r0, #5
   15f8c:	str	r0, [sp, #52]	; 0x34
   15f90:	ldr	r0, [sp, #52]	; 0x34
   15f94:	tst	r0, #1
   15f98:	bne	15bec <__assert_fail@plt+0x4868>
   15f9c:	ldr	r0, [fp, #-144]	; 0xffffff70
   15fa0:	ldr	r1, [fp, #-140]	; 0xffffff74
   15fa4:	orr	r0, r0, r1
   15fa8:	cmp	r0, #0
   15fac:	bne	162ec <__assert_fail@plt+0x4f68>
   15fb0:	b	15fb4 <__assert_fail@plt+0x4c30>
   15fb4:	b	15fb8 <__assert_fail@plt+0x4c34>
   15fb8:	b	15fbc <__assert_fail@plt+0x4c38>
   15fbc:	ldr	r0, [fp, #-152]	; 0xffffff68
   15fc0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   15fc4:	str	r1, [sp, #204]	; 0xcc
   15fc8:	str	r0, [sp, #200]	; 0xc8
   15fcc:	ldr	r0, [sp, #200]	; 0xc8
   15fd0:	ldr	r1, [sp, #204]	; 0xcc
   15fd4:	lsrs	r1, r1, #1
   15fd8:	rrx	r0, r0
   15fdc:	and	r0, r0, #127	; 0x7f
   15fe0:	movw	r2, #28806	; 0x7086
   15fe4:	movt	r2, #3
   15fe8:	ldrb	r0, [r2, r0]
   15fec:	mov	r2, #0
   15ff0:	str	r2, [sp, #196]	; 0xc4
   15ff4:	str	r0, [sp, #192]	; 0xc0
   15ff8:	ldr	r0, [sp, #192]	; 0xc0
   15ffc:	ldr	r2, [sp, #196]	; 0xc4
   16000:	lsl	r3, r2, #1
   16004:	orr	r3, r3, r0, lsr #31
   16008:	umull	ip, lr, r0, r0
   1600c:	mla	lr, r0, r2, lr
   16010:	mla	r2, r0, r2, lr
   16014:	ldr	lr, [sp, #200]	; 0xc8
   16018:	ldr	r4, [sp, #204]	; 0xcc
   1601c:	umull	r5, r6, ip, lr
   16020:	mla	ip, ip, r4, r6
   16024:	mla	r2, r2, lr, ip
   16028:	rsbs	r0, r5, r0, lsl #1
   1602c:	sbc	r2, r3, r2
   16030:	str	r0, [sp, #192]	; 0xc0
   16034:	str	r2, [sp, #196]	; 0xc4
   16038:	ldr	r0, [sp, #192]	; 0xc0
   1603c:	ldr	r2, [sp, #196]	; 0xc4
   16040:	lsl	r3, r2, #1
   16044:	orr	r3, r3, r0, lsr #31
   16048:	umull	ip, lr, r0, r0
   1604c:	mla	lr, r0, r2, lr
   16050:	mla	r2, r0, r2, lr
   16054:	ldr	lr, [sp, #200]	; 0xc8
   16058:	ldr	r4, [sp, #204]	; 0xcc
   1605c:	umull	r5, r6, ip, lr
   16060:	mla	ip, ip, r4, r6
   16064:	mla	r2, r2, lr, ip
   16068:	rsbs	r0, r5, r0, lsl #1
   1606c:	sbc	r2, r3, r2
   16070:	str	r0, [sp, #192]	; 0xc0
   16074:	str	r2, [sp, #196]	; 0xc4
   16078:	ldr	r0, [sp, #192]	; 0xc0
   1607c:	ldr	r2, [sp, #196]	; 0xc4
   16080:	lsl	r3, r2, #1
   16084:	orr	r3, r3, r0, lsr #31
   16088:	umull	ip, lr, r0, r0
   1608c:	mla	lr, r0, r2, lr
   16090:	mla	r2, r0, r2, lr
   16094:	ldr	lr, [sp, #200]	; 0xc8
   16098:	ldr	r4, [sp, #204]	; 0xcc
   1609c:	umull	r5, r6, ip, lr
   160a0:	mla	ip, ip, r4, r6
   160a4:	mla	r2, r2, lr, ip
   160a8:	rsbs	r0, r5, r0, lsl #1
   160ac:	sbc	r2, r3, r2
   160b0:	str	r0, [sp, #192]	; 0xc0
   160b4:	str	r2, [sp, #196]	; 0xc4
   160b8:	ldr	r0, [sp, #192]	; 0xc0
   160bc:	ldr	r2, [sp, #196]	; 0xc4
   160c0:	str	r2, [sp, #220]	; 0xdc
   160c4:	str	r0, [sp, #216]	; 0xd8
   160c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   160cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   160d0:	ldr	r2, [sp, #216]	; 0xd8
   160d4:	ldr	r3, [sp, #220]	; 0xdc
   160d8:	umull	ip, lr, r0, r2
   160dc:	mla	r0, r0, r3, lr
   160e0:	mla	r0, r1, r2, r0
   160e4:	str	ip, [sp, #208]	; 0xd0
   160e8:	str	r0, [sp, #212]	; 0xd4
   160ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   160f4:	ldr	r2, [fp, #-152]	; 0xffffff68
   160f8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   160fc:	subs	r0, r0, r2
   16100:	sbcs	r1, r1, r3
   16104:	bcc	1627c <__assert_fail@plt+0x4ef8>
   16108:	b	1610c <__assert_fail@plt+0x4d88>
   1610c:	b	16110 <__assert_fail@plt+0x4d8c>
   16110:	ldr	r0, [sp, #208]	; 0xd0
   16114:	ldr	r1, [sp, #212]	; 0xd4
   16118:	str	r1, [sp, #124]	; 0x7c
   1611c:	str	r0, [sp, #120]	; 0x78
   16120:	ldr	r0, [fp, #-152]	; 0xffffff68
   16124:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16128:	str	r1, [sp, #116]	; 0x74
   1612c:	str	r0, [sp, #112]	; 0x70
   16130:	ldr	r0, [sp, #120]	; 0x78
   16134:	str	r0, [sp, #140]	; 0x8c
   16138:	ldr	r0, [sp, #124]	; 0x7c
   1613c:	str	r0, [sp, #132]	; 0x84
   16140:	ldr	r0, [sp, #112]	; 0x70
   16144:	str	r0, [sp, #136]	; 0x88
   16148:	ldr	r0, [sp, #116]	; 0x74
   1614c:	str	r0, [sp, #128]	; 0x80
   16150:	ldr	r0, [sp, #140]	; 0x8c
   16154:	ldr	r1, [sp, #136]	; 0x88
   16158:	umull	r0, r1, r0, r1
   1615c:	str	r1, [sp, #172]	; 0xac
   16160:	str	r0, [sp, #168]	; 0xa8
   16164:	ldr	r0, [sp, #140]	; 0x8c
   16168:	ldr	r1, [sp, #128]	; 0x80
   1616c:	umull	r0, r1, r0, r1
   16170:	str	r1, [sp, #164]	; 0xa4
   16174:	str	r0, [sp, #160]	; 0xa0
   16178:	ldr	r0, [sp, #132]	; 0x84
   1617c:	ldr	r1, [sp, #136]	; 0x88
   16180:	umull	r0, r1, r0, r1
   16184:	str	r1, [sp, #156]	; 0x9c
   16188:	str	r0, [sp, #152]	; 0x98
   1618c:	ldr	r0, [sp, #132]	; 0x84
   16190:	ldr	r1, [sp, #128]	; 0x80
   16194:	umull	r0, r1, r0, r1
   16198:	str	r1, [sp, #148]	; 0x94
   1619c:	str	r0, [sp, #144]	; 0x90
   161a0:	ldr	r0, [sp, #172]	; 0xac
   161a4:	ldr	r1, [sp, #160]	; 0xa0
   161a8:	ldr	r2, [sp, #164]	; 0xa4
   161ac:	adds	r0, r1, r0
   161b0:	adc	r1, r2, #0
   161b4:	str	r0, [sp, #160]	; 0xa0
   161b8:	str	r1, [sp, #164]	; 0xa4
   161bc:	ldr	r0, [sp, #152]	; 0x98
   161c0:	ldr	r1, [sp, #156]	; 0x9c
   161c4:	ldr	r2, [sp, #160]	; 0xa0
   161c8:	ldr	r3, [sp, #164]	; 0xa4
   161cc:	adds	r0, r2, r0
   161d0:	adc	r1, r3, r1
   161d4:	str	r0, [sp, #160]	; 0xa0
   161d8:	str	r1, [sp, #164]	; 0xa4
   161dc:	ldr	r0, [sp, #160]	; 0xa0
   161e0:	ldr	r1, [sp, #164]	; 0xa4
   161e4:	ldr	r2, [sp, #152]	; 0x98
   161e8:	ldr	r3, [sp, #156]	; 0x9c
   161ec:	subs	r0, r0, r2
   161f0:	sbcs	r1, r1, r3
   161f4:	bcs	16208 <__assert_fail@plt+0x4e84>
   161f8:	b	161fc <__assert_fail@plt+0x4e78>
   161fc:	ldr	r0, [sp, #148]	; 0x94
   16200:	add	r0, r0, #1
   16204:	str	r0, [sp, #148]	; 0x94
   16208:	ldr	r0, [sp, #144]	; 0x90
   1620c:	ldr	r1, [sp, #148]	; 0x94
   16210:	ldr	r2, [sp, #164]	; 0xa4
   16214:	adds	r0, r0, r2
   16218:	adc	r1, r1, #0
   1621c:	str	r0, [sp, #184]	; 0xb8
   16220:	str	r1, [sp, #188]	; 0xbc
   16224:	ldr	r0, [sp, #160]	; 0xa0
   16228:	ldr	r1, [sp, #168]	; 0xa8
   1622c:	str	r0, [sp, #180]	; 0xb4
   16230:	str	r1, [sp, #176]	; 0xb0
   16234:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16238:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1623c:	ldr	r2, [sp, #184]	; 0xb8
   16240:	ldr	r3, [sp, #188]	; 0xbc
   16244:	subs	r0, r0, r2
   16248:	sbc	r1, r1, r3
   1624c:	ldr	r2, [sp, #216]	; 0xd8
   16250:	ldr	r3, [sp, #220]	; 0xdc
   16254:	umull	ip, lr, r0, r2
   16258:	mla	r0, r0, r3, lr
   1625c:	mla	r0, r1, r2, r0
   16260:	str	ip, [fp, #-40]	; 0xffffffd8
   16264:	str	r0, [fp, #-36]	; 0xffffffdc
   16268:	ldr	r0, [sp, #208]	; 0xd0
   1626c:	ldr	r1, [sp, #212]	; 0xd4
   16270:	str	r1, [fp, #-44]	; 0xffffffd4
   16274:	str	r0, [fp, #-48]	; 0xffffffd0
   16278:	b	16298 <__assert_fail@plt+0x4f14>
   1627c:	ldr	r0, [sp, #208]	; 0xd0
   16280:	ldr	r1, [sp, #212]	; 0xd4
   16284:	str	r1, [fp, #-44]	; 0xffffffd4
   16288:	str	r0, [fp, #-48]	; 0xffffffd0
   1628c:	mov	r0, #0
   16290:	str	r0, [fp, #-36]	; 0xffffffdc
   16294:	str	r0, [fp, #-40]	; 0xffffffd8
   16298:	b	1629c <__assert_fail@plt+0x4f18>
   1629c:	ldr	r0, [fp, #-152]	; 0xffffff68
   162a0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   162a4:	bl	168fc <__assert_fail@plt+0x5578>
   162a8:	tst	r0, #1
   162ac:	bne	162cc <__assert_fail@plt+0x4f48>
   162b0:	ldr	r0, [fp, #-152]	; 0xffffff68
   162b4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   162b8:	ldr	r2, [fp, #8]
   162bc:	add	r2, r2, #1
   162c0:	ldr	r3, [fp, #12]
   162c4:	bl	1457c <__assert_fail@plt+0x31f8>
   162c8:	b	162e8 <__assert_fail@plt+0x4f64>
   162cc:	ldr	r0, [fp, #12]
   162d0:	ldr	r2, [fp, #-152]	; 0xffffff68
   162d4:	ldr	r3, [fp, #-148]	; 0xffffff6c
   162d8:	mov	r1, sp
   162dc:	mov	ip, #1
   162e0:	str	ip, [r1]
   162e4:	bl	166b8 <__assert_fail@plt+0x5334>
   162e8:	b	16520 <__assert_fail@plt+0x519c>
   162ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   162f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   162f4:	ldr	r2, [fp, #-144]	; 0xffffff70
   162f8:	ldr	r3, [fp, #-140]	; 0xffffff74
   162fc:	eor	r1, r1, r3
   16300:	eor	r0, r0, r2
   16304:	orr	r0, r0, r1
   16308:	cmp	r0, #0
   1630c:	bne	1636c <__assert_fail@plt+0x4fe8>
   16310:	b	16314 <__assert_fail@plt+0x4f90>
   16314:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16318:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1631c:	ldr	r2, [fp, #-152]	; 0xffffff68
   16320:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16324:	eor	r1, r1, r3
   16328:	eor	r0, r0, r2
   1632c:	orr	r0, r0, r1
   16330:	cmp	r0, #0
   16334:	bne	1636c <__assert_fail@plt+0x4fe8>
   16338:	b	1633c <__assert_fail@plt+0x4fb8>
   1633c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16340:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16344:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16348:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1634c:	ldr	ip, [fp, #8]
   16350:	add	ip, ip, #1
   16354:	ldr	lr, [fp, #12]
   16358:	mov	r4, sp
   1635c:	str	lr, [r4, #4]
   16360:	str	ip, [r4]
   16364:	bl	14fc4 <__assert_fail@plt+0x3c40>
   16368:	b	166b0 <__assert_fail@plt+0x532c>
   1636c:	b	16370 <__assert_fail@plt+0x4fec>
   16370:	ldr	r0, [fp, #-152]	; 0xffffff68
   16374:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16378:	str	r1, [sp, #100]	; 0x64
   1637c:	str	r0, [sp, #96]	; 0x60
   16380:	ldr	r0, [sp, #96]	; 0x60
   16384:	ldr	r1, [sp, #100]	; 0x64
   16388:	lsrs	r1, r1, #1
   1638c:	rrx	r0, r0
   16390:	and	r0, r0, #127	; 0x7f
   16394:	movw	r2, #28806	; 0x7086
   16398:	movt	r2, #3
   1639c:	ldrb	r0, [r2, r0]
   163a0:	mov	r2, #0
   163a4:	str	r2, [sp, #92]	; 0x5c
   163a8:	str	r0, [sp, #88]	; 0x58
   163ac:	ldr	r0, [sp, #88]	; 0x58
   163b0:	ldr	r2, [sp, #92]	; 0x5c
   163b4:	lsl	r3, r2, #1
   163b8:	orr	r3, r3, r0, lsr #31
   163bc:	umull	ip, lr, r0, r0
   163c0:	mla	lr, r0, r2, lr
   163c4:	mla	r2, r0, r2, lr
   163c8:	ldr	lr, [sp, #96]	; 0x60
   163cc:	ldr	r4, [sp, #100]	; 0x64
   163d0:	umull	r5, r6, ip, lr
   163d4:	mla	ip, ip, r4, r6
   163d8:	mla	r2, r2, lr, ip
   163dc:	rsbs	r0, r5, r0, lsl #1
   163e0:	sbc	r2, r3, r2
   163e4:	str	r0, [sp, #88]	; 0x58
   163e8:	str	r2, [sp, #92]	; 0x5c
   163ec:	ldr	r0, [sp, #88]	; 0x58
   163f0:	ldr	r2, [sp, #92]	; 0x5c
   163f4:	lsl	r3, r2, #1
   163f8:	orr	r3, r3, r0, lsr #31
   163fc:	umull	ip, lr, r0, r0
   16400:	mla	lr, r0, r2, lr
   16404:	mla	r2, r0, r2, lr
   16408:	ldr	lr, [sp, #96]	; 0x60
   1640c:	ldr	r4, [sp, #100]	; 0x64
   16410:	umull	r5, r6, ip, lr
   16414:	mla	ip, ip, r4, r6
   16418:	mla	r2, r2, lr, ip
   1641c:	rsbs	r0, r5, r0, lsl #1
   16420:	sbc	r2, r3, r2
   16424:	str	r0, [sp, #88]	; 0x58
   16428:	str	r2, [sp, #92]	; 0x5c
   1642c:	ldr	r0, [sp, #88]	; 0x58
   16430:	ldr	r2, [sp, #92]	; 0x5c
   16434:	lsl	r3, r2, #1
   16438:	orr	r3, r3, r0, lsr #31
   1643c:	umull	ip, lr, r0, r0
   16440:	mla	lr, r0, r2, lr
   16444:	mla	r2, r0, r2, lr
   16448:	ldr	lr, [sp, #96]	; 0x60
   1644c:	ldr	r4, [sp, #100]	; 0x64
   16450:	umull	r5, r6, ip, lr
   16454:	mla	ip, ip, r4, r6
   16458:	mla	r2, r2, lr, ip
   1645c:	rsbs	r0, r5, r0, lsl #1
   16460:	sbc	r2, r3, r2
   16464:	str	r0, [sp, #88]	; 0x58
   16468:	str	r2, [sp, #92]	; 0x5c
   1646c:	ldr	r0, [sp, #88]	; 0x58
   16470:	ldr	r2, [sp, #92]	; 0x5c
   16474:	str	r2, [sp, #108]	; 0x6c
   16478:	str	r0, [sp, #104]	; 0x68
   1647c:	ldr	r0, [sp, #104]	; 0x68
   16480:	ldr	r1, [sp, #108]	; 0x6c
   16484:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16488:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1648c:	umull	ip, lr, r0, r2
   16490:	mla	r0, r0, r3, lr
   16494:	mla	r0, r1, r2, r0
   16498:	str	ip, [fp, #-48]	; 0xffffffd0
   1649c:	str	r0, [fp, #-44]	; 0xffffffd4
   164a0:	mov	r0, #0
   164a4:	str	r0, [fp, #-36]	; 0xffffffdc
   164a8:	str	r0, [fp, #-40]	; 0xffffffd8
   164ac:	ldr	r0, [fp, #-144]	; 0xffffff70
   164b0:	ldr	r1, [fp, #-140]	; 0xffffff74
   164b4:	ldr	r2, [fp, #-152]	; 0xffffff68
   164b8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   164bc:	bl	133ac <__assert_fail@plt+0x2028>
   164c0:	tst	r0, #1
   164c4:	bne	164f8 <__assert_fail@plt+0x5174>
   164c8:	ldr	r0, [fp, #-144]	; 0xffffff70
   164cc:	ldr	r1, [fp, #-140]	; 0xffffff74
   164d0:	ldr	r2, [fp, #-152]	; 0xffffff68
   164d4:	ldr	r3, [fp, #-148]	; 0xffffff6c
   164d8:	ldr	ip, [fp, #8]
   164dc:	add	ip, ip, #1
   164e0:	ldr	lr, [fp, #12]
   164e4:	mov	r4, sp
   164e8:	str	lr, [r4, #4]
   164ec:	str	ip, [r4]
   164f0:	bl	14fc4 <__assert_fail@plt+0x3c40>
   164f4:	b	1651c <__assert_fail@plt+0x5198>
   164f8:	ldr	r0, [fp, #12]
   164fc:	ldr	r2, [fp, #-144]	; 0xffffff70
   16500:	ldr	r3, [fp, #-140]	; 0xffffff74
   16504:	ldr	r1, [fp, #-152]	; 0xffffff68
   16508:	ldr	ip, [fp, #-148]	; 0xffffff6c
   1650c:	mov	lr, sp
   16510:	str	ip, [lr, #4]
   16514:	str	r1, [lr]
   16518:	bl	144ac <__assert_fail@plt+0x3128>
   1651c:	b	16520 <__assert_fail@plt+0x519c>
   16520:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16524:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16528:	orr	r0, r0, r1
   1652c:	cmp	r0, #0
   16530:	bne	16584 <__assert_fail@plt+0x5200>
   16534:	b	16538 <__assert_fail@plt+0x51b4>
   16538:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1653c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16540:	bl	168fc <__assert_fail@plt+0x5578>
   16544:	tst	r0, #1
   16548:	beq	1656c <__assert_fail@plt+0x51e8>
   1654c:	ldr	r0, [fp, #12]
   16550:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16554:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16558:	mov	r1, sp
   1655c:	mov	ip, #1
   16560:	str	ip, [r1]
   16564:	bl	166b8 <__assert_fail@plt+0x5334>
   16568:	b	166b0 <__assert_fail@plt+0x532c>
   1656c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16570:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16574:	ldr	r2, [fp, #8]
   16578:	ldr	r3, [fp, #12]
   1657c:	bl	1457c <__assert_fail@plt+0x31f8>
   16580:	b	166b0 <__assert_fail@plt+0x532c>
   16584:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16588:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1658c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16590:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16594:	bl	133ac <__assert_fail@plt+0x2028>
   16598:	tst	r0, #1
   1659c:	beq	165c8 <__assert_fail@plt+0x5244>
   165a0:	ldr	r0, [fp, #12]
   165a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   165a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   165ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   165b0:	ldr	ip, [fp, #-44]	; 0xffffffd4
   165b4:	mov	lr, sp
   165b8:	str	ip, [lr, #4]
   165bc:	str	r1, [lr]
   165c0:	bl	144ac <__assert_fail@plt+0x3128>
   165c4:	b	166b0 <__assert_fail@plt+0x532c>
   165c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   165cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   165d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   165d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   165d8:	ldr	ip, [fp, #-40]	; 0xffffffd8
   165dc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   165e0:	ldr	r4, [fp, #-48]	; 0xffffffd0
   165e4:	ldr	r5, [fp, #-44]	; 0xffffffd4
   165e8:	mov	r6, sp
   165ec:	str	r5, [r6, #20]
   165f0:	str	r4, [r6, #16]
   165f4:	str	lr, [r6, #12]
   165f8:	str	ip, [r6, #8]
   165fc:	str	r1, [r6, #4]
   16600:	str	r0, [r6]
   16604:	sub	r0, fp, #56	; 0x38
   16608:	bl	1986c <__assert_fail@plt+0x84e8>
   1660c:	str	r1, [fp, #-60]	; 0xffffffc4
   16610:	str	r0, [fp, #-64]	; 0xffffffc0
   16614:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16618:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1661c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   16620:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16624:	ldr	ip, [fp, #-40]	; 0xffffffd8
   16628:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1662c:	ldr	r4, [fp, #-48]	; 0xffffffd0
   16630:	ldr	r5, [fp, #-44]	; 0xffffffd4
   16634:	mov	r6, sp
   16638:	str	r5, [r6, #20]
   1663c:	str	r4, [r6, #16]
   16640:	str	lr, [r6, #12]
   16644:	str	ip, [r6, #8]
   16648:	str	r1, [r6, #4]
   1664c:	str	r0, [r6]
   16650:	sub	r0, fp, #72	; 0x48
   16654:	bl	1986c <__assert_fail@plt+0x84e8>
   16658:	str	r1, [fp, #-76]	; 0xffffffb4
   1665c:	str	r0, [fp, #-80]	; 0xffffffb0
   16660:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16664:	ldr	r3, [fp, #-84]	; 0xffffffac
   16668:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1666c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16670:	ldr	ip, [fp, #-40]	; 0xffffffd8
   16674:	ldr	lr, [fp, #-36]	; 0xffffffdc
   16678:	ldr	r4, [fp, #-48]	; 0xffffffd0
   1667c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   16680:	mov	r6, sp
   16684:	str	r5, [r6, #20]
   16688:	str	r4, [r6, #16]
   1668c:	str	lr, [r6, #12]
   16690:	str	ip, [r6, #8]
   16694:	str	r1, [r6, #4]
   16698:	str	r0, [r6]
   1669c:	sub	r0, fp, #88	; 0x58
   166a0:	bl	1986c <__assert_fail@plt+0x84e8>
   166a4:	str	r1, [fp, #-92]	; 0xffffffa4
   166a8:	str	r0, [fp, #-96]	; 0xffffffa0
   166ac:	b	15378 <__assert_fail@plt+0x3ff4>
   166b0:	sub	sp, fp, #28
   166b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166b8:	sub	sp, sp, #40	; 0x28
   166bc:	ldr	r1, [sp, #40]	; 0x28
   166c0:	str	r0, [sp, #36]	; 0x24
   166c4:	str	r3, [sp, #28]
   166c8:	str	r2, [sp, #24]
   166cc:	ldr	r0, [sp, #36]	; 0x24
   166d0:	ldrb	r0, [r0, #250]	; 0xfa
   166d4:	str	r0, [sp, #20]
   166d8:	ldr	r0, [sp, #36]	; 0x24
   166dc:	add	r0, r0, #16
   166e0:	str	r0, [sp, #16]
   166e4:	ldr	r0, [sp, #36]	; 0x24
   166e8:	add	r0, r0, #224	; 0xe0
   166ec:	str	r0, [sp, #12]
   166f0:	ldr	r0, [sp, #20]
   166f4:	sub	r0, r0, #1
   166f8:	str	r0, [sp, #8]
   166fc:	ldr	r0, [sp, #8]
   16700:	cmp	r0, #0
   16704:	blt	1674c <__assert_fail@plt+0x53c8>
   16708:	ldr	r0, [sp, #16]
   1670c:	ldr	r1, [sp, #8]
   16710:	ldr	r1, [r0, r1, lsl #3]!
   16714:	ldr	r0, [r0, #4]
   16718:	ldr	r2, [sp, #24]
   1671c:	ldr	r3, [sp, #28]
   16720:	subs	r1, r2, r1
   16724:	sbcs	r0, r3, r0
   16728:	bcc	16734 <__assert_fail@plt+0x53b0>
   1672c:	b	16730 <__assert_fail@plt+0x53ac>
   16730:	b	1674c <__assert_fail@plt+0x53c8>
   16734:	b	16738 <__assert_fail@plt+0x53b4>
   16738:	ldr	r0, [sp, #8]
   1673c:	mvn	r1, #0
   16740:	add	r0, r0, r1
   16744:	str	r0, [sp, #8]
   16748:	b	166fc <__assert_fail@plt+0x5378>
   1674c:	ldr	r0, [sp, #8]
   16750:	cmp	r0, #0
   16754:	blt	16788 <__assert_fail@plt+0x5404>
   16758:	ldr	r0, [sp, #16]
   1675c:	ldr	r1, [sp, #8]
   16760:	ldr	r1, [r0, r1, lsl #3]!
   16764:	ldr	r0, [r0, #4]
   16768:	ldr	r2, [sp, #24]
   1676c:	ldr	r3, [sp, #28]
   16770:	eor	r1, r1, r2
   16774:	eor	r0, r0, r3
   16778:	orr	r0, r1, r0
   1677c:	cmp	r0, #0
   16780:	beq	1683c <__assert_fail@plt+0x54b8>
   16784:	b	16788 <__assert_fail@plt+0x5404>
   16788:	ldr	r0, [sp, #20]
   1678c:	sub	r0, r0, #1
   16790:	str	r0, [sp, #4]
   16794:	ldr	r0, [sp, #4]
   16798:	ldr	r1, [sp, #8]
   1679c:	cmp	r0, r1
   167a0:	ble	167f4 <__assert_fail@plt+0x5470>
   167a4:	ldr	r0, [sp, #16]
   167a8:	ldr	r1, [sp, #4]
   167ac:	ldr	r1, [r0, r1, lsl #3]!
   167b0:	ldr	r2, [r0, #4]
   167b4:	str	r2, [r0, #12]
   167b8:	str	r1, [r0, #8]
   167bc:	ldr	r0, [sp, #12]
   167c0:	ldr	r1, [sp, #4]
   167c4:	add	r0, r0, r1
   167c8:	ldrb	r0, [r0]
   167cc:	ldr	r1, [sp, #12]
   167d0:	ldr	r2, [sp, #4]
   167d4:	add	r2, r2, #1
   167d8:	add	r1, r1, r2
   167dc:	strb	r0, [r1]
   167e0:	ldr	r0, [sp, #4]
   167e4:	mvn	r1, #0
   167e8:	add	r0, r0, r1
   167ec:	str	r0, [sp, #4]
   167f0:	b	16794 <__assert_fail@plt+0x5410>
   167f4:	ldr	r0, [sp, #24]
   167f8:	ldr	r1, [sp, #28]
   167fc:	ldr	r2, [sp, #16]
   16800:	ldr	r3, [sp, #8]
   16804:	add	r2, r2, r3, lsl #3
   16808:	str	r1, [r2, #12]
   1680c:	str	r0, [r2, #8]
   16810:	ldr	r0, [sp, #40]	; 0x28
   16814:	ldr	r1, [sp, #12]
   16818:	ldr	r2, [sp, #8]
   1681c:	add	r2, r2, #1
   16820:	add	r1, r1, r2
   16824:	strb	r0, [r1]
   16828:	ldr	r0, [sp, #20]
   1682c:	add	r0, r0, #1
   16830:	ldr	r1, [sp, #36]	; 0x24
   16834:	strb	r0, [r1, #250]	; 0xfa
   16838:	b	16858 <__assert_fail@plt+0x54d4>
   1683c:	ldr	r0, [sp, #40]	; 0x28
   16840:	ldr	r1, [sp, #12]
   16844:	ldr	r2, [sp, #8]
   16848:	add	r1, r1, r2
   1684c:	ldrb	r2, [r1]
   16850:	add	r0, r2, r0
   16854:	strb	r0, [r1]
   16858:	add	sp, sp, #40	; 0x28
   1685c:	bx	lr
   16860:	push	{fp, lr}
   16864:	mov	fp, sp
   16868:	sub	sp, sp, #24
   1686c:	ldr	r1, [fp, #12]
   16870:	ldr	ip, [fp, #8]
   16874:	str	r0, [fp, #-4]
   16878:	str	r3, [sp, #12]
   1687c:	str	r2, [sp, #8]
   16880:	movw	r0, #0
   16884:	str	r0, [sp, #4]
   16888:	ldr	r0, [sp, #4]
   1688c:	ldr	r1, [fp, #12]
   16890:	cmp	r0, r1
   16894:	bcs	168d8 <__assert_fail@plt+0x5554>
   16898:	ldr	r0, [fp, #8]
   1689c:	ldr	r1, [sp, #4]
   168a0:	add	r0, r0, r1
   168a4:	movw	r1, #27456	; 0x6b40
   168a8:	movt	r1, #3
   168ac:	ldrb	r0, [r1, r0]
   168b0:	ldr	r1, [sp, #8]
   168b4:	ldr	r2, [sp, #12]
   168b8:	adds	r0, r1, r0
   168bc:	adc	r1, r2, #0
   168c0:	str	r0, [sp, #8]
   168c4:	str	r1, [sp, #12]
   168c8:	ldr	r0, [sp, #4]
   168cc:	add	r0, r0, #1
   168d0:	str	r0, [sp, #4]
   168d4:	b	16888 <__assert_fail@plt+0x5504>
   168d8:	ldr	r0, [fp, #-4]
   168dc:	ldr	r2, [sp, #8]
   168e0:	ldr	r3, [sp, #12]
   168e4:	mov	r1, sp
   168e8:	mov	ip, #1
   168ec:	str	ip, [r1]
   168f0:	bl	166b8 <__assert_fail@plt+0x5334>
   168f4:	mov	sp, fp
   168f8:	pop	{fp, pc}
   168fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16900:	add	fp, sp, #24
   16904:	sub	sp, sp, #632	; 0x278
   16908:	str	r0, [fp, #-40]	; 0xffffffd8
   1690c:	str	r1, [fp, #-36]	; 0xffffffdc
   16910:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16914:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16918:	rsbs	r0, r0, #1
   1691c:	rscs	r1, r1, #0
   16920:	bcc	16938 <__assert_fail@plt+0x55b4>
   16924:	b	16928 <__assert_fail@plt+0x55a4>
   16928:	movw	r0, #0
   1692c:	and	r0, r0, #1
   16930:	strb	r0, [fp, #-29]	; 0xffffffe3
   16934:	b	173f4 <__assert_fail@plt+0x6070>
   16938:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1693c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16940:	movw	r2, #60792	; 0xed78
   16944:	movt	r2, #381	; 0x17d
   16948:	subs	r0, r2, r0
   1694c:	rscs	r1, r1, #0
   16950:	bcc	16968 <__assert_fail@plt+0x55e4>
   16954:	b	16958 <__assert_fail@plt+0x55d4>
   16958:	movw	r0, #1
   1695c:	and	r0, r0, #1
   16960:	strb	r0, [fp, #-29]	; 0xffffffe3
   16964:	b	173f4 <__assert_fail@plt+0x6070>
   16968:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1696c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16970:	subs	r0, r0, #1
   16974:	sbc	r1, r1, #0
   16978:	str	r0, [sp, #320]	; 0x140
   1697c:	str	r1, [sp, #324]	; 0x144
   16980:	movw	r0, #0
   16984:	str	r0, [fp, #-44]	; 0xffffffd4
   16988:	ldrb	r0, [sp, #320]	; 0x140
   1698c:	tst	r0, #1
   16990:	bne	169c0 <__assert_fail@plt+0x563c>
   16994:	b	16998 <__assert_fail@plt+0x5614>
   16998:	ldr	r0, [sp, #320]	; 0x140
   1699c:	ldr	r1, [sp, #324]	; 0x144
   169a0:	lsrs	r1, r1, #1
   169a4:	rrx	r0, r0
   169a8:	str	r1, [sp, #324]	; 0x144
   169ac:	str	r0, [sp, #320]	; 0x140
   169b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   169b4:	add	r0, r0, #1
   169b8:	str	r0, [fp, #-44]	; 0xffffffd4
   169bc:	b	16988 <__assert_fail@plt+0x5604>
   169c0:	mov	r0, #0
   169c4:	str	r0, [sp, #316]	; 0x13c
   169c8:	mov	r0, #2
   169cc:	str	r0, [sp, #312]	; 0x138
   169d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   169d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   169d8:	str	r1, [sp, #308]	; 0x134
   169dc:	str	r0, [sp, #304]	; 0x130
   169e0:	ldr	r0, [sp, #304]	; 0x130
   169e4:	ldr	r1, [sp, #308]	; 0x134
   169e8:	lsrs	r1, r1, #1
   169ec:	rrx	r0, r0
   169f0:	and	r0, r0, #127	; 0x7f
   169f4:	movw	r2, #28806	; 0x7086
   169f8:	movt	r2, #3
   169fc:	ldrb	r0, [r2, r0]
   16a00:	mov	r2, #0
   16a04:	str	r2, [sp, #300]	; 0x12c
   16a08:	str	r0, [sp, #296]	; 0x128
   16a0c:	ldr	r0, [sp, #296]	; 0x128
   16a10:	ldr	r2, [sp, #300]	; 0x12c
   16a14:	lsl	r3, r2, #1
   16a18:	orr	r3, r3, r0, lsr #31
   16a1c:	umull	ip, lr, r0, r0
   16a20:	mla	lr, r0, r2, lr
   16a24:	mla	r2, r0, r2, lr
   16a28:	ldr	lr, [sp, #304]	; 0x130
   16a2c:	ldr	r4, [sp, #308]	; 0x134
   16a30:	umull	r5, r6, ip, lr
   16a34:	mla	ip, ip, r4, r6
   16a38:	mla	r2, r2, lr, ip
   16a3c:	rsbs	r0, r5, r0, lsl #1
   16a40:	sbc	r2, r3, r2
   16a44:	str	r0, [sp, #296]	; 0x128
   16a48:	str	r2, [sp, #300]	; 0x12c
   16a4c:	ldr	r0, [sp, #296]	; 0x128
   16a50:	ldr	r2, [sp, #300]	; 0x12c
   16a54:	lsl	r3, r2, #1
   16a58:	orr	r3, r3, r0, lsr #31
   16a5c:	umull	ip, lr, r0, r0
   16a60:	mla	lr, r0, r2, lr
   16a64:	mla	r2, r0, r2, lr
   16a68:	ldr	lr, [sp, #304]	; 0x130
   16a6c:	ldr	r4, [sp, #308]	; 0x134
   16a70:	umull	r5, r6, ip, lr
   16a74:	mla	ip, ip, r4, r6
   16a78:	mla	r2, r2, lr, ip
   16a7c:	rsbs	r0, r5, r0, lsl #1
   16a80:	sbc	r2, r3, r2
   16a84:	str	r0, [sp, #296]	; 0x128
   16a88:	str	r2, [sp, #300]	; 0x12c
   16a8c:	ldr	r0, [sp, #296]	; 0x128
   16a90:	ldr	r2, [sp, #300]	; 0x12c
   16a94:	lsl	r3, r2, #1
   16a98:	orr	r3, r3, r0, lsr #31
   16a9c:	umull	ip, lr, r0, r0
   16aa0:	mla	lr, r0, r2, lr
   16aa4:	mla	r2, r0, r2, lr
   16aa8:	ldr	lr, [sp, #304]	; 0x130
   16aac:	ldr	r4, [sp, #308]	; 0x134
   16ab0:	umull	r5, r6, ip, lr
   16ab4:	mla	ip, ip, r4, r6
   16ab8:	mla	r2, r2, lr, ip
   16abc:	rsbs	r0, r5, r0, lsl #1
   16ac0:	sbc	r2, r3, r2
   16ac4:	str	r0, [sp, #296]	; 0x128
   16ac8:	str	r2, [sp, #300]	; 0x12c
   16acc:	ldr	r0, [sp, #296]	; 0x128
   16ad0:	ldr	r2, [sp, #300]	; 0x12c
   16ad4:	str	r2, [fp, #-68]	; 0xffffffbc
   16ad8:	str	r0, [fp, #-72]	; 0xffffffb8
   16adc:	b	16ae0 <__assert_fail@plt+0x575c>
   16ae0:	b	16ae4 <__assert_fail@plt+0x5760>
   16ae4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16ae8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16aec:	subs	r0, r0, #2
   16af0:	sbcs	r1, r1, #0
   16af4:	bcc	16b00 <__assert_fail@plt+0x577c>
   16af8:	b	16afc <__assert_fail@plt+0x5778>
   16afc:	b	16b20 <__assert_fail@plt+0x579c>
   16b00:	movw	r0, #15853	; 0x3ded
   16b04:	movt	r0, #3
   16b08:	movw	r1, #15747	; 0x3d83
   16b0c:	movt	r1, #3
   16b10:	movw	r2, #1214	; 0x4be
   16b14:	movw	r3, #15863	; 0x3df7
   16b18:	movt	r3, #3
   16b1c:	bl	11384 <__assert_fail@plt>
   16b20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16b24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16b28:	str	r1, [sp, #284]	; 0x11c
   16b2c:	str	r0, [sp, #280]	; 0x118
   16b30:	mov	r0, #0
   16b34:	str	r0, [sp, #276]	; 0x114
   16b38:	str	r0, [sp, #272]	; 0x110
   16b3c:	str	r0, [sp, #260]	; 0x104
   16b40:	mov	r1, #1
   16b44:	str	r1, [sp, #256]	; 0x100
   16b48:	str	r0, [sp, #252]	; 0xfc
   16b4c:	str	r0, [sp, #248]	; 0xf8
   16b50:	str	r0, [sp, #268]	; 0x10c
   16b54:	str	r0, [sp, #264]	; 0x108
   16b58:	movw	r0, #64	; 0x40
   16b5c:	str	r0, [sp, #244]	; 0xf4
   16b60:	ldr	r0, [sp, #244]	; 0xf4
   16b64:	cmp	r0, #0
   16b68:	bls	16cdc <__assert_fail@plt+0x5958>
   16b6c:	b	16b70 <__assert_fail@plt+0x57ec>
   16b70:	ldr	r0, [sp, #280]	; 0x118
   16b74:	ldr	r1, [sp, #272]	; 0x110
   16b78:	ldr	r2, [sp, #276]	; 0x114
   16b7c:	lsrs	r2, r2, #1
   16b80:	rrx	r1, r1
   16b84:	orr	r0, r2, r0, lsl #31
   16b88:	str	r1, [sp, #272]	; 0x110
   16b8c:	str	r0, [sp, #276]	; 0x114
   16b90:	ldr	r0, [sp, #280]	; 0x118
   16b94:	ldr	r1, [sp, #284]	; 0x11c
   16b98:	lsrs	r1, r1, #1
   16b9c:	rrx	r0, r0
   16ba0:	str	r1, [sp, #284]	; 0x11c
   16ba4:	str	r0, [sp, #280]	; 0x118
   16ba8:	ldr	r0, [sp, #264]	; 0x108
   16bac:	ldr	r1, [sp, #268]	; 0x10c
   16bb0:	lsl	r1, r1, #1
   16bb4:	orr	r1, r1, r0, lsr #31
   16bb8:	lsl	r0, r0, #1
   16bbc:	str	r0, [sp, #264]	; 0x108
   16bc0:	str	r1, [sp, #268]	; 0x10c
   16bc4:	ldr	r0, [sp, #256]	; 0x100
   16bc8:	ldr	r1, [sp, #260]	; 0x104
   16bcc:	ldr	r2, [sp, #280]	; 0x118
   16bd0:	ldr	r3, [sp, #284]	; 0x11c
   16bd4:	subs	r0, r2, r0
   16bd8:	sbcs	r1, r3, r1
   16bdc:	bcc	16c2c <__assert_fail@plt+0x58a8>
   16be0:	b	16be4 <__assert_fail@plt+0x5860>
   16be4:	ldr	r0, [sp, #256]	; 0x100
   16be8:	ldr	r1, [sp, #260]	; 0x104
   16bec:	ldr	r2, [sp, #280]	; 0x118
   16bf0:	ldr	r3, [sp, #284]	; 0x11c
   16bf4:	eor	r1, r1, r3
   16bf8:	eor	r0, r0, r2
   16bfc:	orr	r0, r0, r1
   16c00:	cmp	r0, #0
   16c04:	bne	16cc4 <__assert_fail@plt+0x5940>
   16c08:	b	16c0c <__assert_fail@plt+0x5888>
   16c0c:	ldr	r0, [sp, #248]	; 0xf8
   16c10:	ldr	r1, [sp, #252]	; 0xfc
   16c14:	ldr	r2, [sp, #272]	; 0x110
   16c18:	ldr	r3, [sp, #276]	; 0x114
   16c1c:	subs	r0, r0, r2
   16c20:	sbcs	r1, r1, r3
   16c24:	bcc	16cc4 <__assert_fail@plt+0x5940>
   16c28:	b	16c2c <__assert_fail@plt+0x58a8>
   16c2c:	ldr	r0, [sp, #264]	; 0x108
   16c30:	ldr	r1, [sp, #268]	; 0x10c
   16c34:	adds	r0, r0, #1
   16c38:	adc	r1, r1, #0
   16c3c:	str	r0, [sp, #264]	; 0x108
   16c40:	str	r1, [sp, #268]	; 0x10c
   16c44:	ldr	r0, [sp, #248]	; 0xf8
   16c48:	ldr	r1, [sp, #252]	; 0xfc
   16c4c:	ldr	r2, [sp, #272]	; 0x110
   16c50:	ldr	r3, [sp, #276]	; 0x114
   16c54:	subs	r0, r0, r2
   16c58:	sbcs	r1, r1, r3
   16c5c:	mov	r2, #0
   16c60:	mov	r3, r2
   16c64:	movwcc	r3, #1
   16c68:	str	r2, [sp, #236]	; 0xec
   16c6c:	str	r3, [sp, #232]	; 0xe8
   16c70:	ldr	r2, [sp, #248]	; 0xf8
   16c74:	ldr	r3, [sp, #252]	; 0xfc
   16c78:	ldr	ip, [sp, #272]	; 0x110
   16c7c:	ldr	lr, [sp, #276]	; 0x114
   16c80:	subs	r2, r2, ip
   16c84:	sbc	r3, r3, lr
   16c88:	str	r2, [sp, #248]	; 0xf8
   16c8c:	str	r3, [sp, #252]	; 0xfc
   16c90:	ldr	r2, [sp, #256]	; 0x100
   16c94:	ldr	r3, [sp, #260]	; 0x104
   16c98:	ldr	ip, [sp, #280]	; 0x118
   16c9c:	ldr	lr, [sp, #284]	; 0x11c
   16ca0:	subs	r2, r2, ip
   16ca4:	sbc	r3, r3, lr
   16ca8:	ldr	ip, [sp, #232]	; 0xe8
   16cac:	ldr	lr, [sp, #236]	; 0xec
   16cb0:	subs	r2, r2, ip
   16cb4:	sbc	r3, r3, lr
   16cb8:	str	r2, [sp, #256]	; 0x100
   16cbc:	str	r3, [sp, #260]	; 0x104
   16cc0:	b	16cc4 <__assert_fail@plt+0x5940>
   16cc4:	b	16cc8 <__assert_fail@plt+0x5944>
   16cc8:	ldr	r0, [sp, #244]	; 0xf4
   16ccc:	mvn	r1, #0
   16cd0:	add	r0, r0, r1
   16cd4:	str	r0, [sp, #244]	; 0xf4
   16cd8:	b	16b60 <__assert_fail@plt+0x57dc>
   16cdc:	ldr	r0, [sp, #248]	; 0xf8
   16ce0:	ldr	r1, [sp, #252]	; 0xfc
   16ce4:	str	r1, [fp, #-60]	; 0xffffffc4
   16ce8:	str	r0, [fp, #-64]	; 0xffffffc0
   16cec:	ldr	r0, [sp, #264]	; 0x108
   16cf0:	ldr	r1, [sp, #268]	; 0x10c
   16cf4:	str	r1, [sp, #292]	; 0x124
   16cf8:	str	r0, [sp, #288]	; 0x120
   16cfc:	b	16d00 <__assert_fail@plt+0x597c>
   16d00:	b	16d04 <__assert_fail@plt+0x5980>
   16d04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16d08:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16d0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16d10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16d14:	subs	r2, r2, r0
   16d18:	sbc	r3, r3, r1
   16d1c:	subs	r0, r0, r2
   16d20:	sbcs	r1, r1, r3
   16d24:	mov	r2, #0
   16d28:	movwcc	r2, #1
   16d2c:	cmp	r2, #0
   16d30:	mvnne	r2, #0
   16d34:	str	r2, [sp, #228]	; 0xe4
   16d38:	str	r2, [sp, #224]	; 0xe0
   16d3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16d40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16d44:	ldr	ip, [sp, #224]	; 0xe0
   16d48:	ldr	lr, [sp, #228]	; 0xe4
   16d4c:	and	lr, r3, lr
   16d50:	and	ip, r2, ip
   16d54:	ldr	r4, [fp, #-64]	; 0xffffffc0
   16d58:	ldr	r5, [fp, #-60]	; 0xffffffc4
   16d5c:	adds	ip, ip, r4
   16d60:	adc	lr, lr, r5
   16d64:	subs	r2, r4, r2
   16d68:	sbc	r3, r5, r3
   16d6c:	adds	r2, ip, r2
   16d70:	adc	r3, lr, r3
   16d74:	str	r2, [fp, #-56]	; 0xffffffc8
   16d78:	str	r3, [fp, #-52]	; 0xffffffcc
   16d7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16d84:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16d88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16d8c:	ldr	ip, [fp, #-56]	; 0xffffffc8
   16d90:	ldr	lr, [fp, #-52]	; 0xffffffcc
   16d94:	ldr	r4, [sp, #320]	; 0x140
   16d98:	ldr	r5, [sp, #324]	; 0x144
   16d9c:	ldr	r6, [fp, #-44]	; 0xffffffd4
   16da0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   16da4:	ldr	r8, [fp, #-60]	; 0xffffffc4
   16da8:	mov	r9, sp
   16dac:	str	r8, [r9, #28]
   16db0:	str	r7, [r9, #24]
   16db4:	str	r6, [r9, #16]
   16db8:	str	r5, [r9, #12]
   16dbc:	str	r4, [r9, #8]
   16dc0:	str	lr, [r9, #4]
   16dc4:	str	ip, [r9]
   16dc8:	bl	17ba0 <__assert_fail@plt+0x681c>
   16dcc:	tst	r0, #1
   16dd0:	bne	16de4 <__assert_fail@plt+0x5a60>
   16dd4:	movw	r0, #0
   16dd8:	and	r0, r0, #1
   16ddc:	strb	r0, [fp, #-29]	; 0xffffffe3
   16de0:	b	173f4 <__assert_fail@plt+0x6070>
   16de4:	movw	r0, #37144	; 0x9118
   16de8:	movt	r0, #4
   16dec:	ldrb	r0, [r0]
   16df0:	tst	r0, #1
   16df4:	beq	16e24 <__assert_fail@plt+0x5aa0>
   16df8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16dfc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16e00:	subs	r2, r0, #1
   16e04:	sbc	r3, r1, #0
   16e08:	mov	r0, sp
   16e0c:	add	r1, sp, #328	; 0x148
   16e10:	str	r1, [r0]
   16e14:	mov	r0, #0
   16e18:	str	r0, [sp, #68]	; 0x44
   16e1c:	ldr	r1, [sp, #68]	; 0x44
   16e20:	bl	126e4 <__assert_fail@plt+0x1360>
   16e24:	movw	r0, #0
   16e28:	str	r0, [sp, #220]	; 0xdc
   16e2c:	ldr	r0, [sp, #220]	; 0xdc
   16e30:	cmp	r0, #668	; 0x29c
   16e34:	bcs	173d0 <__assert_fail@plt+0x604c>
   16e38:	movw	r0, #37144	; 0x9118
   16e3c:	movt	r0, #4
   16e40:	ldrb	r0, [r0]
   16e44:	tst	r0, #1
   16e48:	beq	16f68 <__assert_fail@plt+0x5be4>
   16e4c:	movw	r0, #1
   16e50:	strb	r0, [fp, #-45]	; 0xffffffd3
   16e54:	movw	r0, #0
   16e58:	str	r0, [sp, #216]	; 0xd8
   16e5c:	ldr	r0, [sp, #216]	; 0xd8
   16e60:	ldrb	r1, [sp, #578]	; 0x242
   16e64:	cmp	r0, r1
   16e68:	movw	r0, #0
   16e6c:	str	r0, [sp, #64]	; 0x40
   16e70:	bcs	16e7c <__assert_fail@plt+0x5af8>
   16e74:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16e78:	str	r0, [sp, #64]	; 0x40
   16e7c:	ldr	r0, [sp, #64]	; 0x40
   16e80:	tst	r0, #1
   16e84:	beq	16f64 <__assert_fail@plt+0x5be0>
   16e88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16e8c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16e90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16e94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16e98:	subs	ip, r2, #1
   16e9c:	sbc	lr, r3, #0
   16ea0:	ldr	r4, [sp, #216]	; 0xd8
   16ea4:	add	r5, sp, #328	; 0x148
   16ea8:	add	r4, r5, r4, lsl #3
   16eac:	ldr	r5, [r4, #16]
   16eb0:	ldr	r4, [r4, #20]
   16eb4:	str	r0, [sp, #60]	; 0x3c
   16eb8:	mov	r0, ip
   16ebc:	str	r1, [sp, #56]	; 0x38
   16ec0:	mov	r1, lr
   16ec4:	str	r2, [sp, #52]	; 0x34
   16ec8:	mov	r2, r5
   16ecc:	str	r3, [sp, #48]	; 0x30
   16ed0:	mov	r3, r4
   16ed4:	bl	337f4 <__assert_fail@plt+0x22470>
   16ed8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16edc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16ee0:	ldr	ip, [fp, #-64]	; 0xffffffc0
   16ee4:	ldr	lr, [fp, #-60]	; 0xffffffc4
   16ee8:	mov	r4, sp
   16eec:	str	lr, [r4, #20]
   16ef0:	str	ip, [r4, #16]
   16ef4:	str	r3, [r4, #12]
   16ef8:	str	r2, [r4, #8]
   16efc:	ldr	r2, [sp, #48]	; 0x30
   16f00:	str	r2, [r4, #4]
   16f04:	ldr	r3, [sp, #52]	; 0x34
   16f08:	str	r3, [r4]
   16f0c:	ldr	ip, [sp, #60]	; 0x3c
   16f10:	str	r0, [sp, #44]	; 0x2c
   16f14:	mov	r0, ip
   16f18:	ldr	lr, [sp, #56]	; 0x38
   16f1c:	str	r1, [sp, #40]	; 0x28
   16f20:	mov	r1, lr
   16f24:	ldr	r2, [sp, #44]	; 0x2c
   16f28:	ldr	r3, [sp, #40]	; 0x28
   16f2c:	bl	17dc4 <__assert_fail@plt+0x6a40>
   16f30:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16f34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16f38:	eor	r1, r1, r3
   16f3c:	eor	r0, r0, r2
   16f40:	orr	r0, r0, r1
   16f44:	cmp	r0, #0
   16f48:	movwne	r0, #1
   16f4c:	and	r0, r0, #1
   16f50:	strb	r0, [fp, #-45]	; 0xffffffd3
   16f54:	ldr	r0, [sp, #216]	; 0xd8
   16f58:	add	r0, r0, #1
   16f5c:	str	r0, [sp, #216]	; 0xd8
   16f60:	b	16e5c <__assert_fail@plt+0x5ad8>
   16f64:	b	16f80 <__assert_fail@plt+0x5bfc>
   16f68:	ldr	r0, [sp, #220]	; 0xdc
   16f6c:	cmp	r0, #24
   16f70:	movw	r0, #0
   16f74:	moveq	r0, #1
   16f78:	and	r0, r0, #1
   16f7c:	strb	r0, [fp, #-45]	; 0xffffffd3
   16f80:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16f84:	tst	r0, #1
   16f88:	beq	16f9c <__assert_fail@plt+0x5c18>
   16f8c:	movw	r0, #1
   16f90:	and	r0, r0, #1
   16f94:	strb	r0, [fp, #-29]	; 0xffffffe3
   16f98:	b	173f4 <__assert_fail@plt+0x6070>
   16f9c:	ldr	r0, [sp, #220]	; 0xdc
   16fa0:	movw	r1, #27456	; 0x6b40
   16fa4:	movt	r1, #3
   16fa8:	ldrb	r0, [r1, r0]
   16fac:	ldr	r1, [sp, #312]	; 0x138
   16fb0:	ldr	r2, [sp, #316]	; 0x13c
   16fb4:	adds	r0, r1, r0
   16fb8:	adc	r1, r2, #0
   16fbc:	str	r0, [sp, #312]	; 0x138
   16fc0:	str	r1, [sp, #316]	; 0x13c
   16fc4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16fc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16fcc:	str	r1, [sp, #148]	; 0x94
   16fd0:	str	r0, [sp, #144]	; 0x90
   16fd4:	ldr	r0, [sp, #312]	; 0x138
   16fd8:	ldr	r1, [sp, #316]	; 0x13c
   16fdc:	str	r1, [sp, #140]	; 0x8c
   16fe0:	str	r0, [sp, #136]	; 0x88
   16fe4:	ldr	r0, [sp, #144]	; 0x90
   16fe8:	str	r0, [sp, #164]	; 0xa4
   16fec:	ldr	r0, [sp, #148]	; 0x94
   16ff0:	str	r0, [sp, #156]	; 0x9c
   16ff4:	ldr	r0, [sp, #136]	; 0x88
   16ff8:	str	r0, [sp, #160]	; 0xa0
   16ffc:	ldr	r0, [sp, #140]	; 0x8c
   17000:	str	r0, [sp, #152]	; 0x98
   17004:	ldr	r0, [sp, #164]	; 0xa4
   17008:	ldr	r1, [sp, #160]	; 0xa0
   1700c:	umull	r0, r1, r0, r1
   17010:	str	r1, [sp, #196]	; 0xc4
   17014:	str	r0, [sp, #192]	; 0xc0
   17018:	ldr	r0, [sp, #164]	; 0xa4
   1701c:	ldr	r1, [sp, #152]	; 0x98
   17020:	umull	r0, r1, r0, r1
   17024:	str	r1, [sp, #188]	; 0xbc
   17028:	str	r0, [sp, #184]	; 0xb8
   1702c:	ldr	r0, [sp, #156]	; 0x9c
   17030:	ldr	r1, [sp, #160]	; 0xa0
   17034:	umull	r0, r1, r0, r1
   17038:	str	r1, [sp, #180]	; 0xb4
   1703c:	str	r0, [sp, #176]	; 0xb0
   17040:	ldr	r0, [sp, #156]	; 0x9c
   17044:	ldr	r1, [sp, #152]	; 0x98
   17048:	umull	r0, r1, r0, r1
   1704c:	str	r1, [sp, #172]	; 0xac
   17050:	str	r0, [sp, #168]	; 0xa8
   17054:	ldr	r0, [sp, #196]	; 0xc4
   17058:	ldr	r1, [sp, #184]	; 0xb8
   1705c:	ldr	r2, [sp, #188]	; 0xbc
   17060:	adds	r0, r1, r0
   17064:	adc	r1, r2, #0
   17068:	str	r0, [sp, #184]	; 0xb8
   1706c:	str	r1, [sp, #188]	; 0xbc
   17070:	ldr	r0, [sp, #176]	; 0xb0
   17074:	ldr	r1, [sp, #180]	; 0xb4
   17078:	ldr	r2, [sp, #184]	; 0xb8
   1707c:	ldr	r3, [sp, #188]	; 0xbc
   17080:	adds	r0, r2, r0
   17084:	adc	r1, r3, r1
   17088:	str	r0, [sp, #184]	; 0xb8
   1708c:	str	r1, [sp, #188]	; 0xbc
   17090:	ldr	r0, [sp, #184]	; 0xb8
   17094:	ldr	r1, [sp, #188]	; 0xbc
   17098:	ldr	r2, [sp, #176]	; 0xb0
   1709c:	ldr	r3, [sp, #180]	; 0xb4
   170a0:	subs	r0, r0, r2
   170a4:	sbcs	r1, r1, r3
   170a8:	bcs	170bc <__assert_fail@plt+0x5d38>
   170ac:	b	170b0 <__assert_fail@plt+0x5d2c>
   170b0:	ldr	r0, [sp, #172]	; 0xac
   170b4:	add	r0, r0, #1
   170b8:	str	r0, [sp, #172]	; 0xac
   170bc:	ldr	r0, [sp, #168]	; 0xa8
   170c0:	ldr	r1, [sp, #172]	; 0xac
   170c4:	ldr	r2, [sp, #188]	; 0xbc
   170c8:	adds	r0, r0, r2
   170cc:	adc	r1, r1, #0
   170d0:	str	r0, [sp, #208]	; 0xd0
   170d4:	str	r1, [sp, #212]	; 0xd4
   170d8:	ldr	r0, [sp, #184]	; 0xb8
   170dc:	ldr	r1, [sp, #192]	; 0xc0
   170e0:	str	r0, [sp, #204]	; 0xcc
   170e4:	str	r1, [sp, #200]	; 0xc8
   170e8:	ldr	r0, [sp, #208]	; 0xd0
   170ec:	ldr	r1, [sp, #212]	; 0xd4
   170f0:	orr	r0, r0, r1
   170f4:	cmp	r0, #0
   170f8:	bne	17120 <__assert_fail@plt+0x5d9c>
   170fc:	b	17100 <__assert_fail@plt+0x5d7c>
   17100:	ldr	r0, [sp, #200]	; 0xc8
   17104:	ldr	r1, [sp, #204]	; 0xcc
   17108:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1710c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17110:	bl	337f4 <__assert_fail@plt+0x22470>
   17114:	str	r3, [fp, #-52]	; 0xffffffcc
   17118:	str	r2, [fp, #-56]	; 0xffffffc8
   1711c:	b	17354 <__assert_fail@plt+0x5fd0>
   17120:	b	17124 <__assert_fail@plt+0x5da0>
   17124:	ldr	r0, [sp, #208]	; 0xd0
   17128:	ldr	r1, [sp, #212]	; 0xd4
   1712c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17130:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17134:	subs	r0, r0, r2
   17138:	sbcs	r1, r1, r3
   1713c:	bcs	17148 <__assert_fail@plt+0x5dc4>
   17140:	b	17144 <__assert_fail@plt+0x5dc0>
   17144:	b	17168 <__assert_fail@plt+0x5de4>
   17148:	movw	r0, #15888	; 0x3e10
   1714c:	movt	r0, #3
   17150:	movw	r1, #15747	; 0x3d83
   17154:	movt	r1, #3
   17158:	movw	r2, #1262	; 0x4ee
   1715c:	movw	r3, #15863	; 0x3df7
   17160:	movt	r3, #3
   17164:	bl	11384 <__assert_fail@plt>
   17168:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1716c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17170:	str	r1, [sp, #124]	; 0x7c
   17174:	str	r0, [sp, #120]	; 0x78
   17178:	mov	r0, #0
   1717c:	str	r0, [sp, #116]	; 0x74
   17180:	str	r0, [sp, #112]	; 0x70
   17184:	ldr	r1, [sp, #208]	; 0xd0
   17188:	ldr	r2, [sp, #212]	; 0xd4
   1718c:	str	r2, [sp, #100]	; 0x64
   17190:	str	r1, [sp, #96]	; 0x60
   17194:	ldr	r1, [sp, #200]	; 0xc8
   17198:	ldr	r2, [sp, #204]	; 0xcc
   1719c:	str	r2, [sp, #92]	; 0x5c
   171a0:	str	r1, [sp, #88]	; 0x58
   171a4:	str	r0, [sp, #108]	; 0x6c
   171a8:	str	r0, [sp, #104]	; 0x68
   171ac:	movw	r0, #64	; 0x40
   171b0:	str	r0, [sp, #84]	; 0x54
   171b4:	ldr	r0, [sp, #84]	; 0x54
   171b8:	cmp	r0, #0
   171bc:	bls	17330 <__assert_fail@plt+0x5fac>
   171c0:	b	171c4 <__assert_fail@plt+0x5e40>
   171c4:	ldr	r0, [sp, #120]	; 0x78
   171c8:	ldr	r1, [sp, #112]	; 0x70
   171cc:	ldr	r2, [sp, #116]	; 0x74
   171d0:	lsrs	r2, r2, #1
   171d4:	rrx	r1, r1
   171d8:	orr	r0, r2, r0, lsl #31
   171dc:	str	r1, [sp, #112]	; 0x70
   171e0:	str	r0, [sp, #116]	; 0x74
   171e4:	ldr	r0, [sp, #120]	; 0x78
   171e8:	ldr	r1, [sp, #124]	; 0x7c
   171ec:	lsrs	r1, r1, #1
   171f0:	rrx	r0, r0
   171f4:	str	r1, [sp, #124]	; 0x7c
   171f8:	str	r0, [sp, #120]	; 0x78
   171fc:	ldr	r0, [sp, #104]	; 0x68
   17200:	ldr	r1, [sp, #108]	; 0x6c
   17204:	lsl	r1, r1, #1
   17208:	orr	r1, r1, r0, lsr #31
   1720c:	lsl	r0, r0, #1
   17210:	str	r0, [sp, #104]	; 0x68
   17214:	str	r1, [sp, #108]	; 0x6c
   17218:	ldr	r0, [sp, #96]	; 0x60
   1721c:	ldr	r1, [sp, #100]	; 0x64
   17220:	ldr	r2, [sp, #120]	; 0x78
   17224:	ldr	r3, [sp, #124]	; 0x7c
   17228:	subs	r0, r2, r0
   1722c:	sbcs	r1, r3, r1
   17230:	bcc	17280 <__assert_fail@plt+0x5efc>
   17234:	b	17238 <__assert_fail@plt+0x5eb4>
   17238:	ldr	r0, [sp, #96]	; 0x60
   1723c:	ldr	r1, [sp, #100]	; 0x64
   17240:	ldr	r2, [sp, #120]	; 0x78
   17244:	ldr	r3, [sp, #124]	; 0x7c
   17248:	eor	r1, r1, r3
   1724c:	eor	r0, r0, r2
   17250:	orr	r0, r0, r1
   17254:	cmp	r0, #0
   17258:	bne	17318 <__assert_fail@plt+0x5f94>
   1725c:	b	17260 <__assert_fail@plt+0x5edc>
   17260:	ldr	r0, [sp, #88]	; 0x58
   17264:	ldr	r1, [sp, #92]	; 0x5c
   17268:	ldr	r2, [sp, #112]	; 0x70
   1726c:	ldr	r3, [sp, #116]	; 0x74
   17270:	subs	r0, r0, r2
   17274:	sbcs	r1, r1, r3
   17278:	bcc	17318 <__assert_fail@plt+0x5f94>
   1727c:	b	17280 <__assert_fail@plt+0x5efc>
   17280:	ldr	r0, [sp, #104]	; 0x68
   17284:	ldr	r1, [sp, #108]	; 0x6c
   17288:	adds	r0, r0, #1
   1728c:	adc	r1, r1, #0
   17290:	str	r0, [sp, #104]	; 0x68
   17294:	str	r1, [sp, #108]	; 0x6c
   17298:	ldr	r0, [sp, #88]	; 0x58
   1729c:	ldr	r1, [sp, #92]	; 0x5c
   172a0:	ldr	r2, [sp, #112]	; 0x70
   172a4:	ldr	r3, [sp, #116]	; 0x74
   172a8:	subs	r0, r0, r2
   172ac:	sbcs	r1, r1, r3
   172b0:	mov	r2, #0
   172b4:	mov	r3, r2
   172b8:	movwcc	r3, #1
   172bc:	str	r2, [sp, #76]	; 0x4c
   172c0:	str	r3, [sp, #72]	; 0x48
   172c4:	ldr	r2, [sp, #88]	; 0x58
   172c8:	ldr	r3, [sp, #92]	; 0x5c
   172cc:	ldr	ip, [sp, #112]	; 0x70
   172d0:	ldr	lr, [sp, #116]	; 0x74
   172d4:	subs	r2, r2, ip
   172d8:	sbc	r3, r3, lr
   172dc:	str	r2, [sp, #88]	; 0x58
   172e0:	str	r3, [sp, #92]	; 0x5c
   172e4:	ldr	r2, [sp, #96]	; 0x60
   172e8:	ldr	r3, [sp, #100]	; 0x64
   172ec:	ldr	ip, [sp, #120]	; 0x78
   172f0:	ldr	lr, [sp, #124]	; 0x7c
   172f4:	subs	r2, r2, ip
   172f8:	sbc	r3, r3, lr
   172fc:	ldr	ip, [sp, #72]	; 0x48
   17300:	ldr	lr, [sp, #76]	; 0x4c
   17304:	subs	r2, r2, ip
   17308:	sbc	r3, r3, lr
   1730c:	str	r2, [sp, #96]	; 0x60
   17310:	str	r3, [sp, #100]	; 0x64
   17314:	b	17318 <__assert_fail@plt+0x5f94>
   17318:	b	1731c <__assert_fail@plt+0x5f98>
   1731c:	ldr	r0, [sp, #84]	; 0x54
   17320:	mvn	r1, #0
   17324:	add	r0, r0, r1
   17328:	str	r0, [sp, #84]	; 0x54
   1732c:	b	171b4 <__assert_fail@plt+0x5e30>
   17330:	ldr	r0, [sp, #88]	; 0x58
   17334:	ldr	r1, [sp, #92]	; 0x5c
   17338:	str	r1, [fp, #-52]	; 0xffffffcc
   1733c:	str	r0, [fp, #-56]	; 0xffffffc8
   17340:	ldr	r0, [sp, #104]	; 0x68
   17344:	ldr	r1, [sp, #108]	; 0x6c
   17348:	str	r1, [sp, #132]	; 0x84
   1734c:	str	r0, [sp, #128]	; 0x80
   17350:	b	17354 <__assert_fail@plt+0x5fd0>
   17354:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17358:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1735c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17360:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17364:	ldr	ip, [fp, #-56]	; 0xffffffc8
   17368:	ldr	lr, [fp, #-52]	; 0xffffffcc
   1736c:	ldr	r4, [sp, #320]	; 0x140
   17370:	ldr	r5, [sp, #324]	; 0x144
   17374:	ldr	r6, [fp, #-44]	; 0xffffffd4
   17378:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1737c:	ldr	r8, [fp, #-60]	; 0xffffffc4
   17380:	mov	r9, sp
   17384:	str	r8, [r9, #28]
   17388:	str	r7, [r9, #24]
   1738c:	str	r6, [r9, #16]
   17390:	str	r5, [r9, #12]
   17394:	str	r4, [r9, #8]
   17398:	str	lr, [r9, #4]
   1739c:	str	ip, [r9]
   173a0:	bl	17ba0 <__assert_fail@plt+0x681c>
   173a4:	tst	r0, #1
   173a8:	bne	173bc <__assert_fail@plt+0x6038>
   173ac:	movw	r0, #0
   173b0:	and	r0, r0, #1
   173b4:	strb	r0, [fp, #-29]	; 0xffffffe3
   173b8:	b	173f4 <__assert_fail@plt+0x6070>
   173bc:	b	173c0 <__assert_fail@plt+0x603c>
   173c0:	ldr	r0, [sp, #220]	; 0xdc
   173c4:	add	r0, r0, #1
   173c8:	str	r0, [sp, #220]	; 0xdc
   173cc:	b	16e2c <__assert_fail@plt+0x5aa8>
   173d0:	movw	r0, #15803	; 0x3dbb
   173d4:	movt	r0, #3
   173d8:	bl	11264 <gettext@plt>
   173dc:	movw	r1, #0
   173e0:	str	r0, [sp, #36]	; 0x24
   173e4:	mov	r0, r1
   173e8:	ldr	r2, [sp, #36]	; 0x24
   173ec:	bl	111ec <error@plt>
   173f0:	bl	1136c <abort@plt>
   173f4:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   173f8:	and	r0, r0, #1
   173fc:	sub	sp, fp, #24
   17400:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17404:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17408:	add	fp, sp, #24
   1740c:	sub	sp, sp, #144	; 0x90
   17410:	ldr	r1, [fp, #20]
   17414:	ldr	ip, [fp, #16]
   17418:	ldr	lr, [fp, #12]
   1741c:	ldr	r4, [fp, #8]
   17420:	str	r0, [fp, #-32]	; 0xffffffe0
   17424:	str	r3, [fp, #-36]	; 0xffffffdc
   17428:	str	r2, [fp, #-40]	; 0xffffffd8
   1742c:	ldr	r0, [fp, #8]
   17430:	ldr	r2, [fp, #12]
   17434:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17438:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1743c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   17440:	ldr	r7, [fp, #20]
   17444:	mov	r8, sp
   17448:	str	r7, [r8, #8]
   1744c:	str	r6, [r8, #4]
   17450:	str	r5, [r8]
   17454:	sub	r5, fp, #80	; 0x50
   17458:	str	r0, [sp, #72]	; 0x48
   1745c:	mov	r0, r5
   17460:	ldr	r5, [sp, #72]	; 0x48
   17464:	str	r1, [sp, #68]	; 0x44
   17468:	mov	r1, r5
   1746c:	str	ip, [sp, #64]	; 0x40
   17470:	str	lr, [sp, #60]	; 0x3c
   17474:	str	r4, [sp, #56]	; 0x38
   17478:	bl	17794 <__assert_fail@plt+0x6410>
   1747c:	str	r1, [fp, #-52]	; 0xffffffcc
   17480:	str	r0, [fp, #-56]	; 0xffffffc8
   17484:	ldr	r0, [fp, #-80]	; 0xffffffb0
   17488:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1748c:	str	r1, [fp, #-44]	; 0xffffffd4
   17490:	str	r0, [fp, #-48]	; 0xffffffd0
   17494:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17498:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1749c:	ldr	r2, [fp, #20]
   174a0:	ldr	r3, [r2]
   174a4:	ldr	r2, [r2, #4]
   174a8:	eor	r1, r1, r2
   174ac:	eor	r0, r0, r3
   174b0:	orr	r0, r0, r1
   174b4:	cmp	r0, #0
   174b8:	bne	174fc <__assert_fail@plt+0x6178>
   174bc:	b	174c0 <__assert_fail@plt+0x613c>
   174c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   174c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   174c8:	ldr	r2, [fp, #20]
   174cc:	ldr	r3, [r2, #8]
   174d0:	ldr	r2, [r2, #12]
   174d4:	eor	r1, r1, r2
   174d8:	eor	r0, r0, r3
   174dc:	orr	r0, r0, r1
   174e0:	cmp	r0, #0
   174e4:	bne	174fc <__assert_fail@plt+0x6178>
   174e8:	b	174ec <__assert_fail@plt+0x6168>
   174ec:	movw	r0, #1
   174f0:	and	r0, r0, #1
   174f4:	strb	r0, [fp, #-25]	; 0xffffffe7
   174f8:	b	17784 <__assert_fail@plt+0x6400>
   174fc:	b	17500 <__assert_fail@plt+0x617c>
   17500:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17504:	ldr	r1, [r0]
   17508:	ldr	r0, [r0, #4]
   1750c:	ldr	r2, [fp, #20]
   17510:	ldr	r3, [r2]
   17514:	ldr	r2, [r2, #4]
   17518:	subs	r1, r1, r3
   1751c:	sbcs	r0, r0, r2
   17520:	mov	r2, #0
   17524:	mov	r3, r2
   17528:	movwcc	r3, #1
   1752c:	str	r2, [sp, #84]	; 0x54
   17530:	str	r3, [sp, #80]	; 0x50
   17534:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17538:	ldr	r3, [r2]
   1753c:	ldr	r2, [r2, #4]
   17540:	ldr	ip, [fp, #20]
   17544:	ldr	lr, [ip]
   17548:	ldr	ip, [ip, #4]
   1754c:	subs	r3, r3, lr
   17550:	sbc	r2, r2, ip
   17554:	str	r3, [fp, #-72]	; 0xffffffb8
   17558:	str	r2, [fp, #-68]	; 0xffffffbc
   1755c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17560:	ldr	r3, [r2, #8]
   17564:	ldr	r2, [r2, #12]
   17568:	ldr	ip, [fp, #20]
   1756c:	ldr	lr, [ip, #8]
   17570:	ldr	ip, [ip, #12]
   17574:	subs	r3, r3, lr
   17578:	sbc	r2, r2, ip
   1757c:	ldr	ip, [sp, #80]	; 0x50
   17580:	ldr	lr, [sp, #84]	; 0x54
   17584:	subs	r3, r3, ip
   17588:	sbc	r2, r2, lr
   1758c:	str	r3, [fp, #-64]	; 0xffffffc0
   17590:	str	r2, [fp, #-60]	; 0xffffffc4
   17594:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17598:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1759c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   175a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   175a4:	eor	r1, r1, r3
   175a8:	eor	r0, r0, r2
   175ac:	orr	r0, r0, r1
   175b0:	cmp	r0, #0
   175b4:	bne	175f4 <__assert_fail@plt+0x6270>
   175b8:	b	175bc <__assert_fail@plt+0x6238>
   175bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   175c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   175c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   175c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   175cc:	eor	r1, r1, r3
   175d0:	eor	r0, r0, r2
   175d4:	orr	r0, r0, r1
   175d8:	cmp	r0, #0
   175dc:	bne	175f4 <__assert_fail@plt+0x6270>
   175e0:	b	175e4 <__assert_fail@plt+0x6260>
   175e4:	movw	r0, #1
   175e8:	and	r0, r0, #1
   175ec:	strb	r0, [fp, #-25]	; 0xffffffe7
   175f0:	b	17784 <__assert_fail@plt+0x6400>
   175f4:	movw	r0, #1
   175f8:	str	r0, [sp, #76]	; 0x4c
   175fc:	ldr	r0, [sp, #76]	; 0x4c
   17600:	ldr	r1, [fp, #16]
   17604:	cmp	r0, r1
   17608:	bcs	17778 <__assert_fail@plt+0x63f4>
   1760c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17610:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17614:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17618:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1761c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   17620:	ldr	lr, [ip]
   17624:	ldr	r4, [ip, #4]
   17628:	ldr	r5, [ip, #8]
   1762c:	ldr	ip, [ip, #12]
   17630:	ldr	r6, [fp, #-40]	; 0xffffffd8
   17634:	ldr	r7, [fp, #-36]	; 0xffffffdc
   17638:	mov	r8, sp
   1763c:	str	r7, [r8, #44]	; 0x2c
   17640:	str	r6, [r8, #40]	; 0x28
   17644:	str	r4, [r8, #36]	; 0x24
   17648:	str	lr, [r8, #32]
   1764c:	str	ip, [r8, #28]
   17650:	str	r5, [r8, #24]
   17654:	str	r3, [r8, #20]
   17658:	str	r2, [r8, #16]
   1765c:	str	r1, [r8, #12]
   17660:	str	r0, [r8, #8]
   17664:	str	r3, [r8, #4]
   17668:	str	r2, [r8]
   1766c:	sub	r2, fp, #80	; 0x50
   17670:	str	r0, [sp, #52]	; 0x34
   17674:	mov	r0, r2
   17678:	ldr	r2, [sp, #52]	; 0x34
   1767c:	mov	r3, r1
   17680:	bl	18238 <__assert_fail@plt+0x6eb4>
   17684:	str	r1, [fp, #-52]	; 0xffffffcc
   17688:	str	r0, [fp, #-56]	; 0xffffffc8
   1768c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   17690:	ldr	r1, [fp, #-76]	; 0xffffffb4
   17694:	str	r1, [fp, #-44]	; 0xffffffd4
   17698:	str	r0, [fp, #-48]	; 0xffffffd0
   1769c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   176a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   176a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   176a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   176ac:	eor	r1, r1, r3
   176b0:	eor	r0, r0, r2
   176b4:	orr	r0, r0, r1
   176b8:	cmp	r0, #0
   176bc:	bne	176fc <__assert_fail@plt+0x6378>
   176c0:	b	176c4 <__assert_fail@plt+0x6340>
   176c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   176c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   176cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   176d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   176d4:	eor	r1, r1, r3
   176d8:	eor	r0, r0, r2
   176dc:	orr	r0, r0, r1
   176e0:	cmp	r0, #0
   176e4:	bne	176fc <__assert_fail@plt+0x6378>
   176e8:	b	176ec <__assert_fail@plt+0x6368>
   176ec:	movw	r0, #1
   176f0:	and	r0, r0, #1
   176f4:	strb	r0, [fp, #-25]	; 0xffffffe7
   176f8:	b	17784 <__assert_fail@plt+0x6400>
   176fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17700:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17704:	ldr	r2, [fp, #20]
   17708:	ldr	r3, [r2]
   1770c:	ldr	r2, [r2, #4]
   17710:	eor	r1, r1, r2
   17714:	eor	r0, r0, r3
   17718:	orr	r0, r0, r1
   1771c:	cmp	r0, #0
   17720:	bne	17764 <__assert_fail@plt+0x63e0>
   17724:	b	17728 <__assert_fail@plt+0x63a4>
   17728:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1772c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17730:	ldr	r2, [fp, #20]
   17734:	ldr	r3, [r2, #8]
   17738:	ldr	r2, [r2, #12]
   1773c:	eor	r1, r1, r2
   17740:	eor	r0, r0, r3
   17744:	orr	r0, r0, r1
   17748:	cmp	r0, #0
   1774c:	bne	17764 <__assert_fail@plt+0x63e0>
   17750:	b	17754 <__assert_fail@plt+0x63d0>
   17754:	movw	r0, #0
   17758:	and	r0, r0, #1
   1775c:	strb	r0, [fp, #-25]	; 0xffffffe7
   17760:	b	17784 <__assert_fail@plt+0x6400>
   17764:	b	17768 <__assert_fail@plt+0x63e4>
   17768:	ldr	r0, [sp, #76]	; 0x4c
   1776c:	add	r0, r0, #1
   17770:	str	r0, [sp, #76]	; 0x4c
   17774:	b	175fc <__assert_fail@plt+0x6278>
   17778:	movw	r0, #0
   1777c:	and	r0, r0, #1
   17780:	strb	r0, [fp, #-25]	; 0xffffffe7
   17784:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   17788:	and	r0, r0, #1
   1778c:	sub	sp, fp, #24
   17790:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17798:	add	fp, sp, #28
   1779c:	sub	sp, sp, #188	; 0xbc
   177a0:	ldr	ip, [fp, #12]
   177a4:	ldr	lr, [fp, #8]
   177a8:	ldr	r4, [fp, #16]
   177ac:	str	r0, [fp, #-32]	; 0xffffffe0
   177b0:	str	r1, [fp, #-36]	; 0xffffffdc
   177b4:	str	r2, [fp, #-40]	; 0xffffffd8
   177b8:	str	r3, [fp, #-44]	; 0xffffffd4
   177bc:	str	ip, [fp, #-52]	; 0xffffffcc
   177c0:	str	lr, [fp, #-56]	; 0xffffffc8
   177c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   177c8:	ldr	r1, [r0]
   177cc:	ldr	r0, [r0, #4]
   177d0:	str	r0, [fp, #-84]	; 0xffffffac
   177d4:	str	r1, [fp, #-88]	; 0xffffffa8
   177d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   177dc:	ldr	r1, [r0, #8]
   177e0:	ldr	r0, [r0, #12]
   177e4:	str	r0, [fp, #-76]	; 0xffffffb4
   177e8:	str	r1, [fp, #-80]	; 0xffffffb0
   177ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   177f0:	ldr	r1, [r0]
   177f4:	ldr	r0, [r0, #4]
   177f8:	str	r0, [fp, #-100]	; 0xffffff9c
   177fc:	str	r1, [fp, #-104]	; 0xffffff98
   17800:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17804:	ldr	r1, [r0, #8]
   17808:	ldr	r0, [r0, #12]
   1780c:	str	r0, [fp, #-92]	; 0xffffffa4
   17810:	str	r1, [fp, #-96]	; 0xffffffa0
   17814:	ldr	r0, [fp, #16]
   17818:	ldr	r1, [r0]
   1781c:	ldr	r0, [r0, #4]
   17820:	str	r0, [fp, #-68]	; 0xffffffbc
   17824:	str	r1, [fp, #-72]	; 0xffffffb8
   17828:	ldr	r0, [fp, #16]
   1782c:	ldr	r1, [r0, #8]
   17830:	ldr	r0, [r0, #12]
   17834:	str	r0, [fp, #-60]	; 0xffffffc4
   17838:	str	r1, [fp, #-64]	; 0xffffffc0
   1783c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17840:	ldr	r1, [r0]
   17844:	ldr	r0, [r0, #4]
   17848:	str	r0, [sp, #100]	; 0x64
   1784c:	str	r1, [sp, #96]	; 0x60
   17850:	movw	r0, #64	; 0x40
   17854:	str	r0, [sp, #108]	; 0x6c
   17858:	ldr	r0, [sp, #108]	; 0x6c
   1785c:	cmp	r0, #0
   17860:	bls	179e0 <__assert_fail@plt+0x665c>
   17864:	ldrb	r0, [sp, #96]	; 0x60
   17868:	tst	r0, #1
   1786c:	beq	1792c <__assert_fail@plt+0x65a8>
   17870:	b	17874 <__assert_fail@plt+0x64f0>
   17874:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17878:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1787c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17880:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17884:	ldr	ip, [fp, #-68]	; 0xffffffbc
   17888:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1788c:	ldr	r4, [fp, #-76]	; 0xffffffb4
   17890:	ldr	r5, [fp, #-88]	; 0xffffffa8
   17894:	ldr	r6, [fp, #-84]	; 0xffffffac
   17898:	ldr	r7, [fp, #-96]	; 0xffffffa0
   1789c:	ldr	r8, [fp, #-92]	; 0xffffffa4
   178a0:	ldr	r9, [fp, #-104]	; 0xffffff98
   178a4:	ldr	sl, [fp, #-100]	; 0xffffff9c
   178a8:	str	r0, [sp, #92]	; 0x5c
   178ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   178b0:	str	r0, [sp, #88]	; 0x58
   178b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   178b8:	str	r0, [sp, #84]	; 0x54
   178bc:	mov	r0, sp
   178c0:	str	r0, [sp, #80]	; 0x50
   178c4:	ldr	r0, [sp, #84]	; 0x54
   178c8:	str	r1, [sp, #76]	; 0x4c
   178cc:	ldr	r1, [sp, #80]	; 0x50
   178d0:	str	r0, [r1, #44]	; 0x2c
   178d4:	ldr	r0, [sp, #88]	; 0x58
   178d8:	str	r0, [r1, #40]	; 0x28
   178dc:	str	sl, [r1, #36]	; 0x24
   178e0:	str	r9, [r1, #32]
   178e4:	str	r8, [r1, #28]
   178e8:	str	r7, [r1, #24]
   178ec:	str	r6, [r1, #20]
   178f0:	str	r5, [r1, #16]
   178f4:	str	r4, [r1, #12]
   178f8:	str	lr, [r1, #8]
   178fc:	str	ip, [r1, #4]
   17900:	ldr	r0, [sp, #76]	; 0x4c
   17904:	str	r0, [r1]
   17908:	ldr	r0, [sp, #92]	; 0x5c
   1790c:	bl	18238 <__assert_fail@plt+0x6eb4>
   17910:	str	r1, [fp, #-68]	; 0xffffffbc
   17914:	str	r0, [fp, #-72]	; 0xffffffb8
   17918:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1791c:	ldr	r1, [r0]
   17920:	ldr	r0, [r0, #4]
   17924:	str	r0, [fp, #-60]	; 0xffffffc4
   17928:	str	r1, [fp, #-64]	; 0xffffffc0
   1792c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17930:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17934:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17938:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1793c:	ldr	ip, [fp, #-84]	; 0xffffffac
   17940:	ldr	lr, [fp, #-96]	; 0xffffffa0
   17944:	ldr	r4, [fp, #-92]	; 0xffffffa4
   17948:	ldr	r5, [fp, #-104]	; 0xffffff98
   1794c:	ldr	r6, [fp, #-100]	; 0xffffff9c
   17950:	ldr	r7, [fp, #-56]	; 0xffffffc8
   17954:	ldr	r8, [fp, #-52]	; 0xffffffcc
   17958:	mov	r9, sp
   1795c:	str	r8, [r9, #44]	; 0x2c
   17960:	str	r7, [r9, #40]	; 0x28
   17964:	str	r6, [r9, #36]	; 0x24
   17968:	str	r5, [r9, #32]
   1796c:	str	r4, [r9, #28]
   17970:	str	lr, [r9, #24]
   17974:	str	ip, [r9, #20]
   17978:	str	r3, [r9, #16]
   1797c:	str	r2, [r9, #12]
   17980:	str	r1, [r9, #8]
   17984:	str	ip, [r9, #4]
   17988:	str	r3, [r9]
   1798c:	str	r2, [sp, #72]	; 0x48
   17990:	mov	r2, r1
   17994:	ldr	r3, [sp, #72]	; 0x48
   17998:	bl	18238 <__assert_fail@plt+0x6eb4>
   1799c:	str	r1, [fp, #-84]	; 0xffffffac
   179a0:	str	r0, [fp, #-88]	; 0xffffffa8
   179a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   179a8:	ldr	r1, [r0]
   179ac:	ldr	r0, [r0, #4]
   179b0:	str	r0, [fp, #-76]	; 0xffffffb4
   179b4:	str	r1, [fp, #-80]	; 0xffffffb0
   179b8:	ldr	r0, [sp, #108]	; 0x6c
   179bc:	sub	r0, r0, #1
   179c0:	str	r0, [sp, #108]	; 0x6c
   179c4:	ldr	r0, [sp, #96]	; 0x60
   179c8:	ldr	r1, [sp, #100]	; 0x64
   179cc:	lsrs	r1, r1, #1
   179d0:	rrx	r0, r0
   179d4:	str	r1, [sp, #100]	; 0x64
   179d8:	str	r0, [sp, #96]	; 0x60
   179dc:	b	17858 <__assert_fail@plt+0x64d4>
   179e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   179e4:	ldr	r1, [r0, #8]
   179e8:	ldr	r0, [r0, #12]
   179ec:	str	r0, [sp, #100]	; 0x64
   179f0:	str	r1, [sp, #96]	; 0x60
   179f4:	ldr	r0, [sp, #96]	; 0x60
   179f8:	ldr	r1, [sp, #100]	; 0x64
   179fc:	orr	r0, r0, r1
   17a00:	cmp	r0, #0
   17a04:	beq	17b7c <__assert_fail@plt+0x67f8>
   17a08:	b	17a0c <__assert_fail@plt+0x6688>
   17a0c:	ldrb	r0, [sp, #96]	; 0x60
   17a10:	tst	r0, #1
   17a14:	beq	17ad4 <__assert_fail@plt+0x6750>
   17a18:	b	17a1c <__assert_fail@plt+0x6698>
   17a1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a20:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17a24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17a28:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17a2c:	ldr	ip, [fp, #-68]	; 0xffffffbc
   17a30:	ldr	lr, [fp, #-80]	; 0xffffffb0
   17a34:	ldr	r4, [fp, #-76]	; 0xffffffb4
   17a38:	ldr	r5, [fp, #-88]	; 0xffffffa8
   17a3c:	ldr	r6, [fp, #-84]	; 0xffffffac
   17a40:	ldr	r7, [fp, #-96]	; 0xffffffa0
   17a44:	ldr	r8, [fp, #-92]	; 0xffffffa4
   17a48:	ldr	r9, [fp, #-104]	; 0xffffff98
   17a4c:	ldr	sl, [fp, #-100]	; 0xffffff9c
   17a50:	str	r0, [sp, #68]	; 0x44
   17a54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17a58:	str	r0, [sp, #64]	; 0x40
   17a5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17a60:	str	r0, [sp, #60]	; 0x3c
   17a64:	mov	r0, sp
   17a68:	str	r0, [sp, #56]	; 0x38
   17a6c:	ldr	r0, [sp, #60]	; 0x3c
   17a70:	str	r1, [sp, #52]	; 0x34
   17a74:	ldr	r1, [sp, #56]	; 0x38
   17a78:	str	r0, [r1, #44]	; 0x2c
   17a7c:	ldr	r0, [sp, #64]	; 0x40
   17a80:	str	r0, [r1, #40]	; 0x28
   17a84:	str	sl, [r1, #36]	; 0x24
   17a88:	str	r9, [r1, #32]
   17a8c:	str	r8, [r1, #28]
   17a90:	str	r7, [r1, #24]
   17a94:	str	r6, [r1, #20]
   17a98:	str	r5, [r1, #16]
   17a9c:	str	r4, [r1, #12]
   17aa0:	str	lr, [r1, #8]
   17aa4:	str	ip, [r1, #4]
   17aa8:	ldr	r0, [sp, #52]	; 0x34
   17aac:	str	r0, [r1]
   17ab0:	ldr	r0, [sp, #68]	; 0x44
   17ab4:	bl	18238 <__assert_fail@plt+0x6eb4>
   17ab8:	str	r1, [fp, #-68]	; 0xffffffbc
   17abc:	str	r0, [fp, #-72]	; 0xffffffb8
   17ac0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ac4:	ldr	r1, [r0]
   17ac8:	ldr	r0, [r0, #4]
   17acc:	str	r0, [fp, #-60]	; 0xffffffc4
   17ad0:	str	r1, [fp, #-64]	; 0xffffffc0
   17ad4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ad8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17adc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17ae0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17ae4:	ldr	ip, [fp, #-84]	; 0xffffffac
   17ae8:	ldr	lr, [fp, #-96]	; 0xffffffa0
   17aec:	ldr	r4, [fp, #-92]	; 0xffffffa4
   17af0:	ldr	r5, [fp, #-104]	; 0xffffff98
   17af4:	ldr	r6, [fp, #-100]	; 0xffffff9c
   17af8:	ldr	r7, [fp, #-56]	; 0xffffffc8
   17afc:	ldr	r8, [fp, #-52]	; 0xffffffcc
   17b00:	mov	r9, sp
   17b04:	str	r8, [r9, #44]	; 0x2c
   17b08:	str	r7, [r9, #40]	; 0x28
   17b0c:	str	r6, [r9, #36]	; 0x24
   17b10:	str	r5, [r9, #32]
   17b14:	str	r4, [r9, #28]
   17b18:	str	lr, [r9, #24]
   17b1c:	str	ip, [r9, #20]
   17b20:	str	r3, [r9, #16]
   17b24:	str	r2, [r9, #12]
   17b28:	str	r1, [r9, #8]
   17b2c:	str	ip, [r9, #4]
   17b30:	str	r3, [r9]
   17b34:	str	r2, [sp, #48]	; 0x30
   17b38:	mov	r2, r1
   17b3c:	ldr	r3, [sp, #48]	; 0x30
   17b40:	bl	18238 <__assert_fail@plt+0x6eb4>
   17b44:	str	r1, [fp, #-84]	; 0xffffffac
   17b48:	str	r0, [fp, #-88]	; 0xffffffa8
   17b4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17b50:	ldr	r1, [r0]
   17b54:	ldr	r0, [r0, #4]
   17b58:	str	r0, [fp, #-76]	; 0xffffffb4
   17b5c:	str	r1, [fp, #-80]	; 0xffffffb0
   17b60:	ldr	r0, [sp, #96]	; 0x60
   17b64:	ldr	r1, [sp, #100]	; 0x64
   17b68:	lsrs	r1, r1, #1
   17b6c:	rrx	r0, r0
   17b70:	str	r1, [sp, #100]	; 0x64
   17b74:	str	r0, [sp, #96]	; 0x60
   17b78:	b	179f4 <__assert_fail@plt+0x6670>
   17b7c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17b80:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17b84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17b88:	str	r1, [r2, #4]
   17b8c:	str	r0, [r2]
   17b90:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17b94:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17b98:	sub	sp, fp, #28
   17b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ba0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17ba4:	add	fp, sp, #24
   17ba8:	sub	sp, sp, #104	; 0x68
   17bac:	ldr	ip, [fp, #36]	; 0x24
   17bb0:	ldr	lr, [fp, #32]
   17bb4:	ldr	r4, [fp, #20]
   17bb8:	ldr	r5, [fp, #16]
   17bbc:	ldr	r6, [fp, #12]
   17bc0:	ldr	r7, [fp, #8]
   17bc4:	ldr	r8, [fp, #24]
   17bc8:	str	r0, [fp, #-40]	; 0xffffffd8
   17bcc:	str	r1, [fp, #-36]	; 0xffffffdc
   17bd0:	str	r3, [fp, #-44]	; 0xffffffd4
   17bd4:	str	r2, [fp, #-48]	; 0xffffffd0
   17bd8:	str	r6, [fp, #-52]	; 0xffffffcc
   17bdc:	str	r7, [fp, #-56]	; 0xffffffc8
   17be0:	str	r4, [sp, #68]	; 0x44
   17be4:	str	r5, [sp, #64]	; 0x40
   17be8:	str	ip, [sp, #60]	; 0x3c
   17bec:	str	lr, [sp, #56]	; 0x38
   17bf0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17bf4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17bf8:	ldr	r2, [sp, #64]	; 0x40
   17bfc:	ldr	r3, [sp, #68]	; 0x44
   17c00:	ldr	ip, [fp, #-40]	; 0xffffffd8
   17c04:	ldr	lr, [fp, #-36]	; 0xffffffdc
   17c08:	ldr	r4, [fp, #-48]	; 0xffffffd0
   17c0c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   17c10:	ldr	r6, [sp, #56]	; 0x38
   17c14:	ldr	r7, [sp, #60]	; 0x3c
   17c18:	mov	r9, sp
   17c1c:	str	r7, [r9, #20]
   17c20:	str	r6, [r9, #16]
   17c24:	str	r5, [r9, #12]
   17c28:	str	r4, [r9, #8]
   17c2c:	str	lr, [r9, #4]
   17c30:	str	ip, [r9]
   17c34:	str	r8, [sp, #32]
   17c38:	bl	17dc4 <__assert_fail@plt+0x6a40>
   17c3c:	str	r1, [sp, #52]	; 0x34
   17c40:	str	r0, [sp, #48]	; 0x30
   17c44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17c48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17c4c:	ldr	r2, [sp, #56]	; 0x38
   17c50:	ldr	r3, [sp, #60]	; 0x3c
   17c54:	subs	r0, r0, r2
   17c58:	sbc	r1, r1, r3
   17c5c:	str	r0, [sp, #40]	; 0x28
   17c60:	str	r1, [sp, #44]	; 0x2c
   17c64:	ldr	r0, [sp, #48]	; 0x30
   17c68:	ldr	r1, [sp, #52]	; 0x34
   17c6c:	ldr	r2, [sp, #56]	; 0x38
   17c70:	ldr	r3, [sp, #60]	; 0x3c
   17c74:	eor	r1, r1, r3
   17c78:	eor	r0, r0, r2
   17c7c:	orr	r0, r0, r1
   17c80:	cmp	r0, #0
   17c84:	beq	17cb4 <__assert_fail@plt+0x6930>
   17c88:	b	17c8c <__assert_fail@plt+0x6908>
   17c8c:	ldr	r0, [sp, #48]	; 0x30
   17c90:	ldr	r1, [sp, #52]	; 0x34
   17c94:	ldr	r2, [sp, #40]	; 0x28
   17c98:	ldr	r3, [sp, #44]	; 0x2c
   17c9c:	eor	r1, r1, r3
   17ca0:	eor	r0, r0, r2
   17ca4:	orr	r0, r0, r1
   17ca8:	cmp	r0, #0
   17cac:	bne	17cc4 <__assert_fail@plt+0x6940>
   17cb0:	b	17cb4 <__assert_fail@plt+0x6930>
   17cb4:	movw	r0, #1
   17cb8:	and	r0, r0, #1
   17cbc:	strb	r0, [fp, #-25]	; 0xffffffe7
   17cc0:	b	17db4 <__assert_fail@plt+0x6a30>
   17cc4:	movw	r0, #1
   17cc8:	str	r0, [sp, #36]	; 0x24
   17ccc:	ldr	r0, [sp, #36]	; 0x24
   17cd0:	ldr	r1, [fp, #24]
   17cd4:	cmp	r0, r1
   17cd8:	bcs	17da8 <__assert_fail@plt+0x6a24>
   17cdc:	ldr	r0, [sp, #48]	; 0x30
   17ce0:	ldr	r1, [sp, #52]	; 0x34
   17ce4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17ce8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17cec:	ldr	ip, [fp, #-48]	; 0xffffffd0
   17cf0:	ldr	lr, [fp, #-44]	; 0xffffffd4
   17cf4:	mov	r4, sp
   17cf8:	str	lr, [r4, #12]
   17cfc:	str	ip, [r4, #8]
   17d00:	str	r3, [r4, #4]
   17d04:	str	r2, [r4]
   17d08:	str	r0, [sp, #28]
   17d0c:	str	r1, [sp, #24]
   17d10:	ldr	r2, [sp, #28]
   17d14:	ldr	r3, [sp, #24]
   17d18:	bl	17f20 <__assert_fail@plt+0x6b9c>
   17d1c:	str	r1, [sp, #52]	; 0x34
   17d20:	str	r0, [sp, #48]	; 0x30
   17d24:	ldr	r0, [sp, #48]	; 0x30
   17d28:	ldr	r1, [sp, #52]	; 0x34
   17d2c:	ldr	r2, [sp, #40]	; 0x28
   17d30:	ldr	r3, [sp, #44]	; 0x2c
   17d34:	eor	r1, r1, r3
   17d38:	eor	r0, r0, r2
   17d3c:	orr	r0, r0, r1
   17d40:	cmp	r0, #0
   17d44:	bne	17d5c <__assert_fail@plt+0x69d8>
   17d48:	b	17d4c <__assert_fail@plt+0x69c8>
   17d4c:	movw	r0, #1
   17d50:	and	r0, r0, #1
   17d54:	strb	r0, [fp, #-25]	; 0xffffffe7
   17d58:	b	17db4 <__assert_fail@plt+0x6a30>
   17d5c:	ldr	r0, [sp, #48]	; 0x30
   17d60:	ldr	r1, [sp, #52]	; 0x34
   17d64:	ldr	r2, [sp, #56]	; 0x38
   17d68:	ldr	r3, [sp, #60]	; 0x3c
   17d6c:	eor	r1, r1, r3
   17d70:	eor	r0, r0, r2
   17d74:	orr	r0, r0, r1
   17d78:	cmp	r0, #0
   17d7c:	bne	17d94 <__assert_fail@plt+0x6a10>
   17d80:	b	17d84 <__assert_fail@plt+0x6a00>
   17d84:	movw	r0, #0
   17d88:	and	r0, r0, #1
   17d8c:	strb	r0, [fp, #-25]	; 0xffffffe7
   17d90:	b	17db4 <__assert_fail@plt+0x6a30>
   17d94:	b	17d98 <__assert_fail@plt+0x6a14>
   17d98:	ldr	r0, [sp, #36]	; 0x24
   17d9c:	add	r0, r0, #1
   17da0:	str	r0, [sp, #36]	; 0x24
   17da4:	b	17ccc <__assert_fail@plt+0x6948>
   17da8:	movw	r0, #0
   17dac:	and	r0, r0, #1
   17db0:	strb	r0, [fp, #-25]	; 0xffffffe7
   17db4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   17db8:	and	r0, r0, #1
   17dbc:	sub	sp, fp, #24
   17dc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17dc4:	push	{r4, r5, r6, r7, fp, lr}
   17dc8:	add	fp, sp, #16
   17dcc:	sub	sp, sp, #72	; 0x48
   17dd0:	ldr	ip, [fp, #28]
   17dd4:	ldr	lr, [fp, #24]
   17dd8:	ldr	r4, [fp, #20]
   17ddc:	ldr	r5, [fp, #16]
   17de0:	ldr	r6, [fp, #12]
   17de4:	ldr	r7, [fp, #8]
   17de8:	str	r0, [fp, #-24]	; 0xffffffe8
   17dec:	str	r1, [fp, #-20]	; 0xffffffec
   17df0:	str	r3, [fp, #-28]	; 0xffffffe4
   17df4:	str	r2, [fp, #-32]	; 0xffffffe0
   17df8:	str	r6, [fp, #-36]	; 0xffffffdc
   17dfc:	str	r7, [fp, #-40]	; 0xffffffd8
   17e00:	str	r4, [sp, #44]	; 0x2c
   17e04:	str	r5, [sp, #40]	; 0x28
   17e08:	str	ip, [sp, #36]	; 0x24
   17e0c:	str	lr, [sp, #32]
   17e10:	ldr	r0, [sp, #32]
   17e14:	ldr	r1, [sp, #36]	; 0x24
   17e18:	str	r1, [sp, #28]
   17e1c:	str	r0, [sp, #24]
   17e20:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   17e24:	tst	r0, #1
   17e28:	beq	17e40 <__assert_fail@plt+0x6abc>
   17e2c:	b	17e30 <__assert_fail@plt+0x6aac>
   17e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e34:	ldr	r1, [fp, #-20]	; 0xffffffec
   17e38:	str	r1, [sp, #28]
   17e3c:	str	r0, [sp, #24]
   17e40:	b	17e44 <__assert_fail@plt+0x6ac0>
   17e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e4c:	orr	r0, r0, r1
   17e50:	cmp	r0, #0
   17e54:	beq	17f10 <__assert_fail@plt+0x6b8c>
   17e58:	b	17e5c <__assert_fail@plt+0x6ad8>
   17e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e60:	ldr	r1, [fp, #-20]	; 0xffffffec
   17e64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17e68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17e6c:	ldr	ip, [sp, #40]	; 0x28
   17e70:	ldr	lr, [sp, #44]	; 0x2c
   17e74:	mov	r4, sp
   17e78:	str	lr, [r4, #12]
   17e7c:	str	ip, [r4, #8]
   17e80:	str	r3, [r4, #4]
   17e84:	str	r2, [r4]
   17e88:	str	r0, [sp, #20]
   17e8c:	str	r1, [sp, #16]
   17e90:	ldr	r2, [sp, #20]
   17e94:	ldr	r3, [sp, #16]
   17e98:	bl	17f20 <__assert_fail@plt+0x6b9c>
   17e9c:	str	r1, [fp, #-20]	; 0xffffffec
   17ea0:	str	r0, [fp, #-24]	; 0xffffffe8
   17ea4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ea8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17eac:	lsrs	r1, r1, #1
   17eb0:	rrx	r0, r0
   17eb4:	str	r1, [fp, #-28]	; 0xffffffe4
   17eb8:	str	r0, [fp, #-32]	; 0xffffffe0
   17ebc:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   17ec0:	tst	r0, #1
   17ec4:	beq	17f0c <__assert_fail@plt+0x6b88>
   17ec8:	b	17ecc <__assert_fail@plt+0x6b48>
   17ecc:	ldr	r0, [sp, #24]
   17ed0:	ldr	r1, [sp, #28]
   17ed4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17ed8:	ldr	r3, [fp, #-20]	; 0xffffffec
   17edc:	ldr	ip, [fp, #-40]	; 0xffffffd8
   17ee0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   17ee4:	ldr	r4, [sp, #40]	; 0x28
   17ee8:	ldr	r5, [sp, #44]	; 0x2c
   17eec:	mov	r6, sp
   17ef0:	str	r5, [r6, #12]
   17ef4:	str	r4, [r6, #8]
   17ef8:	str	lr, [r6, #4]
   17efc:	str	ip, [r6]
   17f00:	bl	17f20 <__assert_fail@plt+0x6b9c>
   17f04:	str	r1, [sp, #28]
   17f08:	str	r0, [sp, #24]
   17f0c:	b	17e44 <__assert_fail@plt+0x6ac0>
   17f10:	ldr	r0, [sp, #24]
   17f14:	ldr	r1, [sp, #28]
   17f18:	sub	sp, fp, #16
   17f1c:	pop	{r4, r5, r6, r7, fp, pc}
   17f20:	push	{r4, r5, fp, lr}
   17f24:	add	fp, sp, #8
   17f28:	sub	sp, sp, #208	; 0xd0
   17f2c:	ldr	ip, [fp, #20]
   17f30:	ldr	lr, [fp, #16]
   17f34:	ldr	r4, [fp, #12]
   17f38:	ldr	r5, [fp, #8]
   17f3c:	str	r0, [fp, #-16]
   17f40:	str	r1, [fp, #-12]
   17f44:	str	r3, [fp, #-20]	; 0xffffffec
   17f48:	str	r2, [fp, #-24]	; 0xffffffe8
   17f4c:	str	r4, [fp, #-28]	; 0xffffffe4
   17f50:	str	r5, [fp, #-32]	; 0xffffffe0
   17f54:	str	ip, [fp, #-36]	; 0xffffffdc
   17f58:	str	lr, [fp, #-40]	; 0xffffffd8
   17f5c:	ldr	r0, [fp, #-16]
   17f60:	ldr	r1, [fp, #-12]
   17f64:	str	r1, [sp, #76]	; 0x4c
   17f68:	str	r0, [sp, #72]	; 0x48
   17f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f70:	ldr	r1, [fp, #-20]	; 0xffffffec
   17f74:	str	r1, [sp, #68]	; 0x44
   17f78:	str	r0, [sp, #64]	; 0x40
   17f7c:	ldr	r0, [sp, #72]	; 0x48
   17f80:	str	r0, [sp, #92]	; 0x5c
   17f84:	ldr	r0, [sp, #76]	; 0x4c
   17f88:	str	r0, [sp, #84]	; 0x54
   17f8c:	ldr	r0, [sp, #64]	; 0x40
   17f90:	str	r0, [sp, #88]	; 0x58
   17f94:	ldr	r0, [sp, #68]	; 0x44
   17f98:	str	r0, [sp, #80]	; 0x50
   17f9c:	ldr	r0, [sp, #92]	; 0x5c
   17fa0:	ldr	r1, [sp, #88]	; 0x58
   17fa4:	umull	r0, r1, r0, r1
   17fa8:	str	r1, [fp, #-92]	; 0xffffffa4
   17fac:	str	r0, [fp, #-96]	; 0xffffffa0
   17fb0:	ldr	r0, [sp, #92]	; 0x5c
   17fb4:	ldr	r1, [sp, #80]	; 0x50
   17fb8:	umull	r0, r1, r0, r1
   17fbc:	str	r1, [fp, #-100]	; 0xffffff9c
   17fc0:	str	r0, [fp, #-104]	; 0xffffff98
   17fc4:	ldr	r0, [sp, #84]	; 0x54
   17fc8:	ldr	r1, [sp, #88]	; 0x58
   17fcc:	umull	r0, r1, r0, r1
   17fd0:	str	r1, [sp, #108]	; 0x6c
   17fd4:	str	r0, [sp, #104]	; 0x68
   17fd8:	ldr	r0, [sp, #84]	; 0x54
   17fdc:	ldr	r1, [sp, #80]	; 0x50
   17fe0:	umull	r0, r1, r0, r1
   17fe4:	str	r1, [sp, #100]	; 0x64
   17fe8:	str	r0, [sp, #96]	; 0x60
   17fec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17ff0:	ldr	r1, [fp, #-104]	; 0xffffff98
   17ff4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17ff8:	adds	r0, r1, r0
   17ffc:	adc	r1, r2, #0
   18000:	str	r0, [fp, #-104]	; 0xffffff98
   18004:	str	r1, [fp, #-100]	; 0xffffff9c
   18008:	ldr	r0, [sp, #104]	; 0x68
   1800c:	ldr	r1, [sp, #108]	; 0x6c
   18010:	ldr	r2, [fp, #-104]	; 0xffffff98
   18014:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18018:	adds	r0, r2, r0
   1801c:	adc	r1, r3, r1
   18020:	str	r0, [fp, #-104]	; 0xffffff98
   18024:	str	r1, [fp, #-100]	; 0xffffff9c
   18028:	ldr	r0, [fp, #-104]	; 0xffffff98
   1802c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18030:	ldr	r2, [sp, #104]	; 0x68
   18034:	ldr	r3, [sp, #108]	; 0x6c
   18038:	subs	r0, r0, r2
   1803c:	sbcs	r1, r1, r3
   18040:	bcs	18054 <__assert_fail@plt+0x6cd0>
   18044:	b	18048 <__assert_fail@plt+0x6cc4>
   18048:	ldr	r0, [sp, #100]	; 0x64
   1804c:	add	r0, r0, #1
   18050:	str	r0, [sp, #100]	; 0x64
   18054:	ldr	r0, [sp, #96]	; 0x60
   18058:	ldr	r1, [sp, #100]	; 0x64
   1805c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18060:	adds	r0, r0, r2
   18064:	adc	r1, r1, #0
   18068:	str	r0, [fp, #-48]	; 0xffffffd0
   1806c:	str	r1, [fp, #-44]	; 0xffffffd4
   18070:	ldr	r0, [fp, #-104]	; 0xffffff98
   18074:	ldr	r1, [fp, #-96]	; 0xffffffa0
   18078:	str	r0, [fp, #-52]	; 0xffffffcc
   1807c:	str	r1, [fp, #-56]	; 0xffffffc8
   18080:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18084:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18088:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1808c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18090:	umull	ip, lr, r0, r2
   18094:	mla	r0, r0, r3, lr
   18098:	mla	r0, r1, r2, r0
   1809c:	str	ip, [fp, #-64]	; 0xffffffc0
   180a0:	str	r0, [fp, #-60]	; 0xffffffc4
   180a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   180a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   180ac:	str	r1, [sp, #12]
   180b0:	str	r0, [sp, #8]
   180b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   180b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   180bc:	str	r1, [sp, #4]
   180c0:	str	r0, [sp]
   180c4:	ldr	r0, [sp, #8]
   180c8:	str	r0, [sp, #28]
   180cc:	ldr	r0, [sp, #12]
   180d0:	str	r0, [sp, #20]
   180d4:	ldr	r0, [sp]
   180d8:	str	r0, [sp, #24]
   180dc:	ldr	r0, [sp, #4]
   180e0:	str	r0, [sp, #16]
   180e4:	ldr	r0, [sp, #28]
   180e8:	ldr	r1, [sp, #24]
   180ec:	umull	r0, r1, r0, r1
   180f0:	str	r1, [sp, #60]	; 0x3c
   180f4:	str	r0, [sp, #56]	; 0x38
   180f8:	ldr	r0, [sp, #28]
   180fc:	ldr	r1, [sp, #16]
   18100:	umull	r0, r1, r0, r1
   18104:	str	r1, [sp, #52]	; 0x34
   18108:	str	r0, [sp, #48]	; 0x30
   1810c:	ldr	r0, [sp, #20]
   18110:	ldr	r1, [sp, #24]
   18114:	umull	r0, r1, r0, r1
   18118:	str	r1, [sp, #44]	; 0x2c
   1811c:	str	r0, [sp, #40]	; 0x28
   18120:	ldr	r0, [sp, #20]
   18124:	ldr	r1, [sp, #16]
   18128:	umull	r0, r1, r0, r1
   1812c:	str	r1, [sp, #36]	; 0x24
   18130:	str	r0, [sp, #32]
   18134:	ldr	r0, [sp, #60]	; 0x3c
   18138:	ldr	r1, [sp, #48]	; 0x30
   1813c:	ldr	r2, [sp, #52]	; 0x34
   18140:	adds	r0, r1, r0
   18144:	adc	r1, r2, #0
   18148:	str	r0, [sp, #48]	; 0x30
   1814c:	str	r1, [sp, #52]	; 0x34
   18150:	ldr	r0, [sp, #40]	; 0x28
   18154:	ldr	r1, [sp, #44]	; 0x2c
   18158:	ldr	r2, [sp, #48]	; 0x30
   1815c:	ldr	r3, [sp, #52]	; 0x34
   18160:	adds	r0, r2, r0
   18164:	adc	r1, r3, r1
   18168:	str	r0, [sp, #48]	; 0x30
   1816c:	str	r1, [sp, #52]	; 0x34
   18170:	ldr	r0, [sp, #48]	; 0x30
   18174:	ldr	r1, [sp, #52]	; 0x34
   18178:	ldr	r2, [sp, #40]	; 0x28
   1817c:	ldr	r3, [sp, #44]	; 0x2c
   18180:	subs	r0, r0, r2
   18184:	sbcs	r1, r1, r3
   18188:	bcs	1819c <__assert_fail@plt+0x6e18>
   1818c:	b	18190 <__assert_fail@plt+0x6e0c>
   18190:	ldr	r0, [sp, #36]	; 0x24
   18194:	add	r0, r0, #1
   18198:	str	r0, [sp, #36]	; 0x24
   1819c:	ldr	r0, [sp, #32]
   181a0:	ldr	r1, [sp, #36]	; 0x24
   181a4:	ldr	r2, [sp, #52]	; 0x34
   181a8:	adds	r0, r0, r2
   181ac:	adc	r1, r1, #0
   181b0:	str	r0, [fp, #-72]	; 0xffffffb8
   181b4:	str	r1, [fp, #-68]	; 0xffffffbc
   181b8:	ldr	r0, [sp, #48]	; 0x30
   181bc:	ldr	r1, [sp, #56]	; 0x38
   181c0:	str	r0, [fp, #-84]	; 0xffffffac
   181c4:	str	r1, [fp, #-88]	; 0xffffffa8
   181c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   181cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   181d0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   181d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   181d8:	subs	r0, r0, r2
   181dc:	sbc	r1, r1, r3
   181e0:	str	r0, [fp, #-80]	; 0xffffffb0
   181e4:	str	r1, [fp, #-76]	; 0xffffffb4
   181e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   181ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   181f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   181f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   181f8:	subs	r0, r0, r2
   181fc:	sbcs	r1, r1, r3
   18200:	bcs	18228 <__assert_fail@plt+0x6ea4>
   18204:	b	18208 <__assert_fail@plt+0x6e84>
   18208:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1820c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18210:	ldr	r2, [fp, #-80]	; 0xffffffb0
   18214:	ldr	r3, [fp, #-76]	; 0xffffffb4
   18218:	adds	r0, r2, r0
   1821c:	adc	r1, r3, r1
   18220:	str	r0, [fp, #-80]	; 0xffffffb0
   18224:	str	r1, [fp, #-76]	; 0xffffffb4
   18228:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1822c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   18230:	sub	sp, fp, #8
   18234:	pop	{r4, r5, fp, pc}
   18238:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1823c:	add	fp, sp, #28
   18240:	sub	sp, sp, #732	; 0x2dc
   18244:	ldr	r1, [fp, #52]	; 0x34
   18248:	ldr	ip, [fp, #48]	; 0x30
   1824c:	ldr	lr, [fp, #44]	; 0x2c
   18250:	ldr	r4, [fp, #40]	; 0x28
   18254:	ldr	r5, [fp, #36]	; 0x24
   18258:	ldr	r6, [fp, #32]
   1825c:	ldr	r7, [fp, #28]
   18260:	ldr	r8, [fp, #24]
   18264:	ldr	r9, [fp, #20]
   18268:	ldr	sl, [fp, #16]
   1826c:	str	r0, [sp, #12]
   18270:	ldr	r0, [fp, #12]
   18274:	str	r0, [sp, #8]
   18278:	ldr	r0, [fp, #8]
   1827c:	str	r0, [sp, #4]
   18280:	ldr	r0, [sp, #12]
   18284:	str	r0, [fp, #-32]	; 0xffffffe0
   18288:	str	r3, [fp, #-36]	; 0xffffffdc
   1828c:	str	r2, [fp, #-40]	; 0xffffffd8
   18290:	ldr	r2, [sp, #8]
   18294:	str	r2, [fp, #-44]	; 0xffffffd4
   18298:	ldr	r3, [sp, #4]
   1829c:	str	r3, [fp, #-48]	; 0xffffffd0
   182a0:	str	r9, [fp, #-52]	; 0xffffffcc
   182a4:	str	sl, [fp, #-56]	; 0xffffffc8
   182a8:	str	r7, [fp, #-60]	; 0xffffffc4
   182ac:	str	r8, [fp, #-64]	; 0xffffffc0
   182b0:	str	r5, [fp, #-68]	; 0xffffffbc
   182b4:	str	r6, [fp, #-72]	; 0xffffffb8
   182b8:	str	lr, [fp, #-76]	; 0xffffffb4
   182bc:	str	r4, [fp, #-80]	; 0xffffffb0
   182c0:	str	r1, [fp, #-84]	; 0xffffffac
   182c4:	str	ip, [fp, #-88]	; 0xffffffa8
   182c8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   182cc:	ldr	ip, [fp, #-84]	; 0xffffffac
   182d0:	rsbs	r1, r1, #0
   182d4:	rsc	ip, ip, #0
   182d8:	str	r1, [fp, #-88]	; 0xffffffa8
   182dc:	str	ip, [fp, #-84]	; 0xffffffac
   182e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   182e4:	mov	ip, #0
   182e8:	cmp	ip, r1, lsr #31
   182ec:	bne	182f8 <__assert_fail@plt+0x6f74>
   182f0:	b	182f4 <__assert_fail@plt+0x6f70>
   182f4:	b	18318 <__assert_fail@plt+0x6f94>
   182f8:	movw	r0, #15899	; 0x3e1b
   182fc:	movt	r0, #3
   18300:	movw	r1, #15747	; 0x3d83
   18304:	movt	r1, #3
   18308:	movw	r2, #993	; 0x3e1
   1830c:	movw	r3, #15930	; 0x3e3a
   18310:	movt	r3, #3
   18314:	bl	11384 <__assert_fail@plt>
   18318:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1831c:	mov	r1, #0
   18320:	cmp	r1, r0, lsr #31
   18324:	bne	18330 <__assert_fail@plt+0x6fac>
   18328:	b	1832c <__assert_fail@plt+0x6fa8>
   1832c:	b	18350 <__assert_fail@plt+0x6fcc>
   18330:	movw	r0, #16039	; 0x3ea7
   18334:	movt	r0, #3
   18338:	movw	r1, #15747	; 0x3d83
   1833c:	movt	r1, #3
   18340:	movw	r2, #994	; 0x3e2
   18344:	movw	r3, #15930	; 0x3e3a
   18348:	movt	r3, #3
   1834c:	bl	11384 <__assert_fail@plt>
   18350:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18354:	mov	r1, #0
   18358:	cmp	r1, r0, lsr #31
   1835c:	bne	18368 <__assert_fail@plt+0x6fe4>
   18360:	b	18364 <__assert_fail@plt+0x6fe0>
   18364:	b	18388 <__assert_fail@plt+0x7004>
   18368:	movw	r0, #16070	; 0x3ec6
   1836c:	movt	r0, #3
   18370:	movw	r1, #15747	; 0x3d83
   18374:	movt	r1, #3
   18378:	movw	r2, #995	; 0x3e3
   1837c:	movw	r3, #15930	; 0x3e3a
   18380:	movt	r3, #3
   18384:	bl	11384 <__assert_fail@plt>
   18388:	b	1838c <__assert_fail@plt+0x7008>
   1838c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18390:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18394:	str	r1, [fp, #-212]	; 0xffffff2c
   18398:	str	r0, [fp, #-216]	; 0xffffff28
   1839c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   183a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   183a4:	str	r1, [fp, #-220]	; 0xffffff24
   183a8:	str	r0, [fp, #-224]	; 0xffffff20
   183ac:	ldr	r0, [fp, #-216]	; 0xffffff28
   183b0:	str	r0, [fp, #-196]	; 0xffffff3c
   183b4:	ldr	r0, [fp, #-212]	; 0xffffff2c
   183b8:	str	r0, [fp, #-204]	; 0xffffff34
   183bc:	ldr	r0, [fp, #-224]	; 0xffffff20
   183c0:	str	r0, [fp, #-200]	; 0xffffff38
   183c4:	ldr	r0, [fp, #-220]	; 0xffffff24
   183c8:	str	r0, [fp, #-208]	; 0xffffff30
   183cc:	ldr	r0, [fp, #-196]	; 0xffffff3c
   183d0:	ldr	r1, [fp, #-200]	; 0xffffff38
   183d4:	umull	r0, r1, r0, r1
   183d8:	str	r1, [fp, #-164]	; 0xffffff5c
   183dc:	str	r0, [fp, #-168]	; 0xffffff58
   183e0:	ldr	r0, [fp, #-196]	; 0xffffff3c
   183e4:	ldr	r1, [fp, #-208]	; 0xffffff30
   183e8:	umull	r0, r1, r0, r1
   183ec:	str	r1, [fp, #-172]	; 0xffffff54
   183f0:	str	r0, [fp, #-176]	; 0xffffff50
   183f4:	ldr	r0, [fp, #-204]	; 0xffffff34
   183f8:	ldr	r1, [fp, #-200]	; 0xffffff38
   183fc:	umull	r0, r1, r0, r1
   18400:	str	r1, [fp, #-180]	; 0xffffff4c
   18404:	str	r0, [fp, #-184]	; 0xffffff48
   18408:	ldr	r0, [fp, #-204]	; 0xffffff34
   1840c:	ldr	r1, [fp, #-208]	; 0xffffff30
   18410:	umull	r0, r1, r0, r1
   18414:	str	r1, [fp, #-188]	; 0xffffff44
   18418:	str	r0, [fp, #-192]	; 0xffffff40
   1841c:	ldr	r0, [fp, #-164]	; 0xffffff5c
   18420:	ldr	r1, [fp, #-176]	; 0xffffff50
   18424:	ldr	r2, [fp, #-172]	; 0xffffff54
   18428:	adds	r0, r1, r0
   1842c:	adc	r1, r2, #0
   18430:	str	r0, [fp, #-176]	; 0xffffff50
   18434:	str	r1, [fp, #-172]	; 0xffffff54
   18438:	ldr	r0, [fp, #-184]	; 0xffffff48
   1843c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   18440:	ldr	r2, [fp, #-176]	; 0xffffff50
   18444:	ldr	r3, [fp, #-172]	; 0xffffff54
   18448:	adds	r0, r2, r0
   1844c:	adc	r1, r3, r1
   18450:	str	r0, [fp, #-176]	; 0xffffff50
   18454:	str	r1, [fp, #-172]	; 0xffffff54
   18458:	ldr	r0, [fp, #-176]	; 0xffffff50
   1845c:	ldr	r1, [fp, #-172]	; 0xffffff54
   18460:	ldr	r2, [fp, #-184]	; 0xffffff48
   18464:	ldr	r3, [fp, #-180]	; 0xffffff4c
   18468:	subs	r0, r0, r2
   1846c:	sbcs	r1, r1, r3
   18470:	bcs	18484 <__assert_fail@plt+0x7100>
   18474:	b	18478 <__assert_fail@plt+0x70f4>
   18478:	ldr	r0, [fp, #-188]	; 0xffffff44
   1847c:	add	r0, r0, #1
   18480:	str	r0, [fp, #-188]	; 0xffffff44
   18484:	ldr	r0, [fp, #-192]	; 0xffffff40
   18488:	ldr	r1, [fp, #-188]	; 0xffffff44
   1848c:	ldr	r2, [fp, #-172]	; 0xffffff54
   18490:	adds	r0, r0, r2
   18494:	adc	r1, r1, #0
   18498:	str	r0, [fp, #-128]	; 0xffffff80
   1849c:	str	r1, [fp, #-124]	; 0xffffff84
   184a0:	ldr	r0, [fp, #-176]	; 0xffffff50
   184a4:	ldr	r1, [fp, #-168]	; 0xffffff58
   184a8:	str	r0, [fp, #-132]	; 0xffffff7c
   184ac:	str	r1, [fp, #-136]	; 0xffffff78
   184b0:	b	184b4 <__assert_fail@plt+0x7130>
   184b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   184b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   184bc:	str	r1, [fp, #-276]	; 0xfffffeec
   184c0:	str	r0, [fp, #-280]	; 0xfffffee8
   184c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   184c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   184cc:	str	r1, [fp, #-284]	; 0xfffffee4
   184d0:	str	r0, [fp, #-288]	; 0xfffffee0
   184d4:	ldr	r0, [fp, #-280]	; 0xfffffee8
   184d8:	str	r0, [fp, #-260]	; 0xfffffefc
   184dc:	ldr	r0, [fp, #-276]	; 0xfffffeec
   184e0:	str	r0, [fp, #-268]	; 0xfffffef4
   184e4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   184e8:	str	r0, [fp, #-264]	; 0xfffffef8
   184ec:	ldr	r0, [fp, #-284]	; 0xfffffee4
   184f0:	str	r0, [fp, #-272]	; 0xfffffef0
   184f4:	ldr	r0, [fp, #-260]	; 0xfffffefc
   184f8:	ldr	r1, [fp, #-264]	; 0xfffffef8
   184fc:	umull	r0, r1, r0, r1
   18500:	str	r1, [fp, #-228]	; 0xffffff1c
   18504:	str	r0, [fp, #-232]	; 0xffffff18
   18508:	ldr	r0, [fp, #-260]	; 0xfffffefc
   1850c:	ldr	r1, [fp, #-272]	; 0xfffffef0
   18510:	umull	r0, r1, r0, r1
   18514:	str	r1, [fp, #-236]	; 0xffffff14
   18518:	str	r0, [fp, #-240]	; 0xffffff10
   1851c:	ldr	r0, [fp, #-268]	; 0xfffffef4
   18520:	ldr	r1, [fp, #-264]	; 0xfffffef8
   18524:	umull	r0, r1, r0, r1
   18528:	str	r1, [fp, #-244]	; 0xffffff0c
   1852c:	str	r0, [fp, #-248]	; 0xffffff08
   18530:	ldr	r0, [fp, #-268]	; 0xfffffef4
   18534:	ldr	r1, [fp, #-272]	; 0xfffffef0
   18538:	umull	r0, r1, r0, r1
   1853c:	str	r1, [fp, #-252]	; 0xffffff04
   18540:	str	r0, [fp, #-256]	; 0xffffff00
   18544:	ldr	r0, [fp, #-228]	; 0xffffff1c
   18548:	ldr	r1, [fp, #-240]	; 0xffffff10
   1854c:	ldr	r2, [fp, #-236]	; 0xffffff14
   18550:	adds	r0, r1, r0
   18554:	adc	r1, r2, #0
   18558:	str	r0, [fp, #-240]	; 0xffffff10
   1855c:	str	r1, [fp, #-236]	; 0xffffff14
   18560:	ldr	r0, [fp, #-248]	; 0xffffff08
   18564:	ldr	r1, [fp, #-244]	; 0xffffff0c
   18568:	ldr	r2, [fp, #-240]	; 0xffffff10
   1856c:	ldr	r3, [fp, #-236]	; 0xffffff14
   18570:	adds	r0, r2, r0
   18574:	adc	r1, r3, r1
   18578:	str	r0, [fp, #-240]	; 0xffffff10
   1857c:	str	r1, [fp, #-236]	; 0xffffff14
   18580:	ldr	r0, [fp, #-240]	; 0xffffff10
   18584:	ldr	r1, [fp, #-236]	; 0xffffff14
   18588:	ldr	r2, [fp, #-248]	; 0xffffff08
   1858c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   18590:	subs	r0, r0, r2
   18594:	sbcs	r1, r1, r3
   18598:	bcs	185ac <__assert_fail@plt+0x7228>
   1859c:	b	185a0 <__assert_fail@plt+0x721c>
   185a0:	ldr	r0, [fp, #-252]	; 0xffffff04
   185a4:	add	r0, r0, #1
   185a8:	str	r0, [fp, #-252]	; 0xffffff04
   185ac:	ldr	r0, [fp, #-256]	; 0xffffff00
   185b0:	ldr	r1, [fp, #-252]	; 0xffffff04
   185b4:	ldr	r2, [fp, #-236]	; 0xffffff14
   185b8:	adds	r0, r0, r2
   185bc:	adc	r1, r1, #0
   185c0:	str	r0, [fp, #-96]	; 0xffffffa0
   185c4:	str	r1, [fp, #-92]	; 0xffffffa4
   185c8:	ldr	r0, [fp, #-240]	; 0xffffff10
   185cc:	ldr	r1, [fp, #-232]	; 0xffffff18
   185d0:	str	r0, [fp, #-100]	; 0xffffff9c
   185d4:	str	r1, [fp, #-104]	; 0xffffff98
   185d8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   185dc:	ldr	r1, [fp, #-84]	; 0xffffffac
   185e0:	ldr	r2, [fp, #-136]	; 0xffffff78
   185e4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   185e8:	umull	ip, lr, r0, r2
   185ec:	mla	r0, r0, r3, lr
   185f0:	mla	r0, r1, r2, r0
   185f4:	str	ip, [fp, #-112]	; 0xffffff90
   185f8:	str	r0, [fp, #-108]	; 0xffffff94
   185fc:	ldr	r0, [fp, #-112]	; 0xffffff90
   18600:	ldr	r1, [fp, #-108]	; 0xffffff94
   18604:	str	r1, [fp, #-340]	; 0xfffffeac
   18608:	str	r0, [fp, #-344]	; 0xfffffea8
   1860c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   18610:	ldr	r1, [fp, #-76]	; 0xffffffb4
   18614:	str	r1, [fp, #-348]	; 0xfffffea4
   18618:	str	r0, [fp, #-352]	; 0xfffffea0
   1861c:	ldr	r0, [fp, #-344]	; 0xfffffea8
   18620:	str	r0, [fp, #-324]	; 0xfffffebc
   18624:	ldr	r0, [fp, #-340]	; 0xfffffeac
   18628:	str	r0, [fp, #-332]	; 0xfffffeb4
   1862c:	ldr	r0, [fp, #-352]	; 0xfffffea0
   18630:	str	r0, [fp, #-328]	; 0xfffffeb8
   18634:	ldr	r0, [fp, #-348]	; 0xfffffea4
   18638:	str	r0, [fp, #-336]	; 0xfffffeb0
   1863c:	ldr	r0, [fp, #-324]	; 0xfffffebc
   18640:	ldr	r1, [fp, #-328]	; 0xfffffeb8
   18644:	umull	r0, r1, r0, r1
   18648:	str	r1, [fp, #-292]	; 0xfffffedc
   1864c:	str	r0, [fp, #-296]	; 0xfffffed8
   18650:	ldr	r0, [fp, #-324]	; 0xfffffebc
   18654:	ldr	r1, [fp, #-336]	; 0xfffffeb0
   18658:	umull	r0, r1, r0, r1
   1865c:	str	r1, [fp, #-300]	; 0xfffffed4
   18660:	str	r0, [fp, #-304]	; 0xfffffed0
   18664:	ldr	r0, [fp, #-332]	; 0xfffffeb4
   18668:	ldr	r1, [fp, #-328]	; 0xfffffeb8
   1866c:	umull	r0, r1, r0, r1
   18670:	str	r1, [fp, #-308]	; 0xfffffecc
   18674:	str	r0, [fp, #-312]	; 0xfffffec8
   18678:	ldr	r0, [fp, #-332]	; 0xfffffeb4
   1867c:	ldr	r1, [fp, #-336]	; 0xfffffeb0
   18680:	umull	r0, r1, r0, r1
   18684:	str	r1, [fp, #-316]	; 0xfffffec4
   18688:	str	r0, [fp, #-320]	; 0xfffffec0
   1868c:	ldr	r0, [fp, #-292]	; 0xfffffedc
   18690:	ldr	r1, [fp, #-304]	; 0xfffffed0
   18694:	ldr	r2, [fp, #-300]	; 0xfffffed4
   18698:	adds	r0, r1, r0
   1869c:	adc	r1, r2, #0
   186a0:	str	r0, [fp, #-304]	; 0xfffffed0
   186a4:	str	r1, [fp, #-300]	; 0xfffffed4
   186a8:	ldr	r0, [fp, #-312]	; 0xfffffec8
   186ac:	ldr	r1, [fp, #-308]	; 0xfffffecc
   186b0:	ldr	r2, [fp, #-304]	; 0xfffffed0
   186b4:	ldr	r3, [fp, #-300]	; 0xfffffed4
   186b8:	adds	r0, r2, r0
   186bc:	adc	r1, r3, r1
   186c0:	str	r0, [fp, #-304]	; 0xfffffed0
   186c4:	str	r1, [fp, #-300]	; 0xfffffed4
   186c8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   186cc:	ldr	r1, [fp, #-300]	; 0xfffffed4
   186d0:	ldr	r2, [fp, #-312]	; 0xfffffec8
   186d4:	ldr	r3, [fp, #-308]	; 0xfffffecc
   186d8:	subs	r0, r0, r2
   186dc:	sbcs	r1, r1, r3
   186e0:	bcs	186f4 <__assert_fail@plt+0x7370>
   186e4:	b	186e8 <__assert_fail@plt+0x7364>
   186e8:	ldr	r0, [fp, #-316]	; 0xfffffec4
   186ec:	add	r0, r0, #1
   186f0:	str	r0, [fp, #-316]	; 0xfffffec4
   186f4:	ldr	r0, [fp, #-320]	; 0xfffffec0
   186f8:	ldr	r1, [fp, #-316]	; 0xfffffec4
   186fc:	ldr	r2, [fp, #-300]	; 0xfffffed4
   18700:	adds	r0, r0, r2
   18704:	adc	r1, r1, #0
   18708:	str	r0, [fp, #-120]	; 0xffffff88
   1870c:	str	r1, [fp, #-116]	; 0xffffff8c
   18710:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18714:	ldr	r1, [fp, #-296]	; 0xfffffed8
   18718:	str	r0, [fp, #-156]	; 0xffffff64
   1871c:	str	r1, [fp, #-160]	; 0xffffff60
   18720:	b	18724 <__assert_fail@plt+0x73a0>
   18724:	ldr	r0, [fp, #-112]	; 0xffffff90
   18728:	ldr	r1, [fp, #-108]	; 0xffffff94
   1872c:	str	r1, [sp, #356]	; 0x164
   18730:	str	r0, [sp, #352]	; 0x160
   18734:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18738:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1873c:	str	r1, [sp, #348]	; 0x15c
   18740:	str	r0, [sp, #344]	; 0x158
   18744:	ldr	r0, [sp, #352]	; 0x160
   18748:	str	r0, [sp, #372]	; 0x174
   1874c:	ldr	r0, [sp, #356]	; 0x164
   18750:	str	r0, [sp, #364]	; 0x16c
   18754:	ldr	r0, [sp, #344]	; 0x158
   18758:	str	r0, [sp, #368]	; 0x170
   1875c:	ldr	r0, [sp, #348]	; 0x15c
   18760:	str	r0, [sp, #360]	; 0x168
   18764:	ldr	r0, [sp, #372]	; 0x174
   18768:	ldr	r1, [sp, #368]	; 0x170
   1876c:	umull	r0, r1, r0, r1
   18770:	str	r1, [fp, #-356]	; 0xfffffe9c
   18774:	str	r0, [fp, #-360]	; 0xfffffe98
   18778:	ldr	r0, [sp, #372]	; 0x174
   1877c:	ldr	r1, [sp, #360]	; 0x168
   18780:	umull	r0, r1, r0, r1
   18784:	str	r1, [fp, #-364]	; 0xfffffe94
   18788:	str	r0, [fp, #-368]	; 0xfffffe90
   1878c:	ldr	r0, [sp, #364]	; 0x16c
   18790:	ldr	r1, [sp, #368]	; 0x170
   18794:	umull	r0, r1, r0, r1
   18798:	str	r1, [fp, #-372]	; 0xfffffe8c
   1879c:	str	r0, [fp, #-376]	; 0xfffffe88
   187a0:	ldr	r0, [sp, #364]	; 0x16c
   187a4:	ldr	r1, [sp, #360]	; 0x168
   187a8:	umull	r0, r1, r0, r1
   187ac:	str	r1, [sp, #380]	; 0x17c
   187b0:	str	r0, [sp, #376]	; 0x178
   187b4:	ldr	r0, [fp, #-356]	; 0xfffffe9c
   187b8:	ldr	r1, [fp, #-368]	; 0xfffffe90
   187bc:	ldr	r2, [fp, #-364]	; 0xfffffe94
   187c0:	adds	r0, r1, r0
   187c4:	adc	r1, r2, #0
   187c8:	str	r0, [fp, #-368]	; 0xfffffe90
   187cc:	str	r1, [fp, #-364]	; 0xfffffe94
   187d0:	ldr	r0, [fp, #-376]	; 0xfffffe88
   187d4:	ldr	r1, [fp, #-372]	; 0xfffffe8c
   187d8:	ldr	r2, [fp, #-368]	; 0xfffffe90
   187dc:	ldr	r3, [fp, #-364]	; 0xfffffe94
   187e0:	adds	r0, r2, r0
   187e4:	adc	r1, r3, r1
   187e8:	str	r0, [fp, #-368]	; 0xfffffe90
   187ec:	str	r1, [fp, #-364]	; 0xfffffe94
   187f0:	ldr	r0, [fp, #-368]	; 0xfffffe90
   187f4:	ldr	r1, [fp, #-364]	; 0xfffffe94
   187f8:	ldr	r2, [fp, #-376]	; 0xfffffe88
   187fc:	ldr	r3, [fp, #-372]	; 0xfffffe8c
   18800:	subs	r0, r0, r2
   18804:	sbcs	r1, r1, r3
   18808:	bcs	1881c <__assert_fail@plt+0x7498>
   1880c:	b	18810 <__assert_fail@plt+0x748c>
   18810:	ldr	r0, [sp, #380]	; 0x17c
   18814:	add	r0, r0, #1
   18818:	str	r0, [sp, #380]	; 0x17c
   1881c:	ldr	r0, [sp, #376]	; 0x178
   18820:	ldr	r1, [sp, #380]	; 0x17c
   18824:	ldr	r2, [fp, #-364]	; 0xfffffe94
   18828:	adds	r0, r0, r2
   1882c:	adc	r1, r1, #0
   18830:	str	r0, [fp, #-144]	; 0xffffff70
   18834:	str	r1, [fp, #-140]	; 0xffffff74
   18838:	ldr	r0, [fp, #-368]	; 0xfffffe90
   1883c:	ldr	r1, [fp, #-360]	; 0xfffffe98
   18840:	str	r0, [fp, #-148]	; 0xffffff6c
   18844:	str	r1, [fp, #-152]	; 0xffffff68
   18848:	ldr	r0, [fp, #-136]	; 0xffffff78
   1884c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   18850:	orr	r0, r0, r1
   18854:	ldr	r1, [fp, #-104]	; 0xffffff98
   18858:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1885c:	adds	r3, r1, #1
   18860:	adc	ip, r2, #0
   18864:	cmp	r0, #0
   18868:	movne	r1, r3
   1886c:	cmp	r0, #0
   18870:	movne	r2, ip
   18874:	str	r1, [fp, #-104]	; 0xffffff98
   18878:	str	r2, [fp, #-100]	; 0xffffff9c
   1887c:	ldr	r0, [fp, #-104]	; 0xffffff98
   18880:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18884:	ldr	r2, [fp, #-120]	; 0xffffff88
   18888:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1888c:	adds	r0, r0, r2
   18890:	adc	r1, r1, r3
   18894:	str	r0, [sp, #336]	; 0x150
   18898:	str	r1, [sp, #340]	; 0x154
   1889c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   188a0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   188a4:	ldr	r2, [sp, #336]	; 0x150
   188a8:	ldr	r3, [sp, #340]	; 0x154
   188ac:	ldr	ip, [fp, #-104]	; 0xffffff98
   188b0:	ldr	lr, [fp, #-100]	; 0xffffff9c
   188b4:	subs	r2, r2, ip
   188b8:	sbcs	r3, r3, lr
   188bc:	mov	ip, #0
   188c0:	movwcc	ip, #1
   188c4:	adds	lr, r0, #1
   188c8:	adc	r4, r1, #0
   188cc:	cmp	ip, #0
   188d0:	movne	r1, r4
   188d4:	cmp	ip, #0
   188d8:	movne	r0, lr
   188dc:	str	r1, [fp, #-92]	; 0xffffffa4
   188e0:	str	r0, [fp, #-96]	; 0xffffffa0
   188e4:	ldr	r0, [sp, #336]	; 0x150
   188e8:	ldr	r1, [sp, #340]	; 0x154
   188ec:	str	r1, [fp, #-100]	; 0xffffff9c
   188f0:	str	r0, [fp, #-104]	; 0xffffff98
   188f4:	b	188f8 <__assert_fail@plt+0x7574>
   188f8:	ldr	r0, [fp, #-104]	; 0xffffff98
   188fc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18900:	ldr	r2, [fp, #-128]	; 0xffffff80
   18904:	ldr	r3, [fp, #-124]	; 0xffffff84
   18908:	adds	r0, r0, r2
   1890c:	adc	r1, r1, r3
   18910:	str	r0, [sp, #328]	; 0x148
   18914:	str	r1, [sp, #332]	; 0x14c
   18918:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1891c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   18920:	ldr	r2, [sp, #328]	; 0x148
   18924:	ldr	r3, [sp, #332]	; 0x14c
   18928:	ldr	ip, [fp, #-104]	; 0xffffff98
   1892c:	ldr	lr, [fp, #-100]	; 0xffffff9c
   18930:	subs	r2, r2, ip
   18934:	sbcs	r3, r3, lr
   18938:	mov	ip, #0
   1893c:	movwcc	ip, #1
   18940:	adds	lr, r0, #1
   18944:	adc	r4, r1, #0
   18948:	cmp	ip, #0
   1894c:	movne	r1, r4
   18950:	cmp	ip, #0
   18954:	movne	r0, lr
   18958:	str	r1, [fp, #-92]	; 0xffffffa4
   1895c:	str	r0, [fp, #-96]	; 0xffffffa0
   18960:	ldr	r0, [sp, #328]	; 0x148
   18964:	ldr	r1, [sp, #332]	; 0x14c
   18968:	str	r1, [fp, #-100]	; 0xffffff9c
   1896c:	str	r0, [fp, #-104]	; 0xffffff98
   18970:	b	18974 <__assert_fail@plt+0x75f0>
   18974:	ldr	r0, [fp, #-104]	; 0xffffff98
   18978:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1897c:	ldr	r2, [fp, #-152]	; 0xffffff68
   18980:	ldr	r3, [fp, #-148]	; 0xffffff6c
   18984:	adds	r0, r0, r2
   18988:	adc	r1, r1, r3
   1898c:	str	r0, [sp, #320]	; 0x140
   18990:	str	r1, [sp, #324]	; 0x144
   18994:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18998:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1899c:	ldr	r2, [fp, #-144]	; 0xffffff70
   189a0:	ldr	r3, [fp, #-140]	; 0xffffff74
   189a4:	adds	r0, r0, r2
   189a8:	adc	r1, r1, r3
   189ac:	ldr	r2, [sp, #320]	; 0x140
   189b0:	ldr	r3, [sp, #324]	; 0x144
   189b4:	ldr	ip, [fp, #-104]	; 0xffffff98
   189b8:	ldr	lr, [fp, #-100]	; 0xffffff9c
   189bc:	subs	r2, r2, ip
   189c0:	sbcs	r3, r3, lr
   189c4:	mov	ip, #0
   189c8:	movwcc	ip, #1
   189cc:	adds	lr, r0, #1
   189d0:	adc	r4, r1, #0
   189d4:	cmp	ip, #0
   189d8:	movne	r0, lr
   189dc:	cmp	ip, #0
   189e0:	movne	r1, r4
   189e4:	str	r1, [fp, #-92]	; 0xffffffa4
   189e8:	str	r0, [fp, #-96]	; 0xffffffa0
   189ec:	ldr	r0, [sp, #320]	; 0x140
   189f0:	ldr	r1, [sp, #324]	; 0x144
   189f4:	str	r1, [fp, #-100]	; 0xffffff9c
   189f8:	str	r0, [fp, #-104]	; 0xffffff98
   189fc:	b	18a00 <__assert_fail@plt+0x767c>
   18a00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18a08:	str	r1, [sp, #268]	; 0x10c
   18a0c:	str	r0, [sp, #264]	; 0x108
   18a10:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18a14:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18a18:	str	r1, [sp, #260]	; 0x104
   18a1c:	str	r0, [sp, #256]	; 0x100
   18a20:	ldr	r0, [sp, #264]	; 0x108
   18a24:	str	r0, [sp, #284]	; 0x11c
   18a28:	ldr	r0, [sp, #268]	; 0x10c
   18a2c:	str	r0, [sp, #276]	; 0x114
   18a30:	ldr	r0, [sp, #256]	; 0x100
   18a34:	str	r0, [sp, #280]	; 0x118
   18a38:	ldr	r0, [sp, #260]	; 0x104
   18a3c:	str	r0, [sp, #272]	; 0x110
   18a40:	ldr	r0, [sp, #284]	; 0x11c
   18a44:	ldr	r1, [sp, #280]	; 0x118
   18a48:	umull	r0, r1, r0, r1
   18a4c:	str	r1, [sp, #316]	; 0x13c
   18a50:	str	r0, [sp, #312]	; 0x138
   18a54:	ldr	r0, [sp, #284]	; 0x11c
   18a58:	ldr	r1, [sp, #272]	; 0x110
   18a5c:	umull	r0, r1, r0, r1
   18a60:	str	r1, [sp, #308]	; 0x134
   18a64:	str	r0, [sp, #304]	; 0x130
   18a68:	ldr	r0, [sp, #276]	; 0x114
   18a6c:	ldr	r1, [sp, #280]	; 0x118
   18a70:	umull	r0, r1, r0, r1
   18a74:	str	r1, [sp, #300]	; 0x12c
   18a78:	str	r0, [sp, #296]	; 0x128
   18a7c:	ldr	r0, [sp, #276]	; 0x114
   18a80:	ldr	r1, [sp, #272]	; 0x110
   18a84:	umull	r0, r1, r0, r1
   18a88:	str	r1, [sp, #292]	; 0x124
   18a8c:	str	r0, [sp, #288]	; 0x120
   18a90:	ldr	r0, [sp, #316]	; 0x13c
   18a94:	ldr	r1, [sp, #304]	; 0x130
   18a98:	ldr	r2, [sp, #308]	; 0x134
   18a9c:	adds	r0, r1, r0
   18aa0:	adc	r1, r2, #0
   18aa4:	str	r0, [sp, #304]	; 0x130
   18aa8:	str	r1, [sp, #308]	; 0x134
   18aac:	ldr	r0, [sp, #296]	; 0x128
   18ab0:	ldr	r1, [sp, #300]	; 0x12c
   18ab4:	ldr	r2, [sp, #304]	; 0x130
   18ab8:	ldr	r3, [sp, #308]	; 0x134
   18abc:	adds	r0, r2, r0
   18ac0:	adc	r1, r3, r1
   18ac4:	str	r0, [sp, #304]	; 0x130
   18ac8:	str	r1, [sp, #308]	; 0x134
   18acc:	ldr	r0, [sp, #304]	; 0x130
   18ad0:	ldr	r1, [sp, #308]	; 0x134
   18ad4:	ldr	r2, [sp, #296]	; 0x128
   18ad8:	ldr	r3, [sp, #300]	; 0x12c
   18adc:	subs	r0, r0, r2
   18ae0:	sbcs	r1, r1, r3
   18ae4:	bcs	18af8 <__assert_fail@plt+0x7774>
   18ae8:	b	18aec <__assert_fail@plt+0x7768>
   18aec:	ldr	r0, [sp, #292]	; 0x124
   18af0:	add	r0, r0, #1
   18af4:	str	r0, [sp, #292]	; 0x124
   18af8:	ldr	r0, [sp, #288]	; 0x120
   18afc:	ldr	r1, [sp, #292]	; 0x124
   18b00:	ldr	r2, [sp, #308]	; 0x134
   18b04:	adds	r0, r0, r2
   18b08:	adc	r1, r1, #0
   18b0c:	str	r0, [fp, #-128]	; 0xffffff80
   18b10:	str	r1, [fp, #-124]	; 0xffffff84
   18b14:	ldr	r0, [sp, #304]	; 0x130
   18b18:	ldr	r1, [sp, #312]	; 0x138
   18b1c:	str	r0, [fp, #-132]	; 0xffffff7c
   18b20:	str	r1, [fp, #-136]	; 0xffffff78
   18b24:	b	18b28 <__assert_fail@plt+0x77a4>
   18b28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18b2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18b30:	str	r1, [sp, #204]	; 0xcc
   18b34:	str	r0, [sp, #200]	; 0xc8
   18b38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18b3c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18b40:	str	r1, [sp, #196]	; 0xc4
   18b44:	str	r0, [sp, #192]	; 0xc0
   18b48:	ldr	r0, [sp, #200]	; 0xc8
   18b4c:	str	r0, [sp, #220]	; 0xdc
   18b50:	ldr	r0, [sp, #204]	; 0xcc
   18b54:	str	r0, [sp, #212]	; 0xd4
   18b58:	ldr	r0, [sp, #192]	; 0xc0
   18b5c:	str	r0, [sp, #216]	; 0xd8
   18b60:	ldr	r0, [sp, #196]	; 0xc4
   18b64:	str	r0, [sp, #208]	; 0xd0
   18b68:	ldr	r0, [sp, #220]	; 0xdc
   18b6c:	ldr	r1, [sp, #216]	; 0xd8
   18b70:	umull	r0, r1, r0, r1
   18b74:	str	r1, [sp, #252]	; 0xfc
   18b78:	str	r0, [sp, #248]	; 0xf8
   18b7c:	ldr	r0, [sp, #220]	; 0xdc
   18b80:	ldr	r1, [sp, #208]	; 0xd0
   18b84:	umull	r0, r1, r0, r1
   18b88:	str	r1, [sp, #244]	; 0xf4
   18b8c:	str	r0, [sp, #240]	; 0xf0
   18b90:	ldr	r0, [sp, #212]	; 0xd4
   18b94:	ldr	r1, [sp, #216]	; 0xd8
   18b98:	umull	r0, r1, r0, r1
   18b9c:	str	r1, [sp, #236]	; 0xec
   18ba0:	str	r0, [sp, #232]	; 0xe8
   18ba4:	ldr	r0, [sp, #212]	; 0xd4
   18ba8:	ldr	r1, [sp, #208]	; 0xd0
   18bac:	umull	r0, r1, r0, r1
   18bb0:	str	r1, [sp, #228]	; 0xe4
   18bb4:	str	r0, [sp, #224]	; 0xe0
   18bb8:	ldr	r0, [sp, #252]	; 0xfc
   18bbc:	ldr	r1, [sp, #240]	; 0xf0
   18bc0:	ldr	r2, [sp, #244]	; 0xf4
   18bc4:	adds	r0, r1, r0
   18bc8:	adc	r1, r2, #0
   18bcc:	str	r0, [sp, #240]	; 0xf0
   18bd0:	str	r1, [sp, #244]	; 0xf4
   18bd4:	ldr	r0, [sp, #232]	; 0xe8
   18bd8:	ldr	r1, [sp, #236]	; 0xec
   18bdc:	ldr	r2, [sp, #240]	; 0xf0
   18be0:	ldr	r3, [sp, #244]	; 0xf4
   18be4:	adds	r0, r2, r0
   18be8:	adc	r1, r3, r1
   18bec:	str	r0, [sp, #240]	; 0xf0
   18bf0:	str	r1, [sp, #244]	; 0xf4
   18bf4:	ldr	r0, [sp, #240]	; 0xf0
   18bf8:	ldr	r1, [sp, #244]	; 0xf4
   18bfc:	ldr	r2, [sp, #232]	; 0xe8
   18c00:	ldr	r3, [sp, #236]	; 0xec
   18c04:	subs	r0, r0, r2
   18c08:	sbcs	r1, r1, r3
   18c0c:	bcs	18c20 <__assert_fail@plt+0x789c>
   18c10:	b	18c14 <__assert_fail@plt+0x7890>
   18c14:	ldr	r0, [sp, #228]	; 0xe4
   18c18:	add	r0, r0, #1
   18c1c:	str	r0, [sp, #228]	; 0xe4
   18c20:	ldr	r0, [sp, #224]	; 0xe0
   18c24:	ldr	r1, [sp, #228]	; 0xe4
   18c28:	ldr	r2, [sp, #244]	; 0xf4
   18c2c:	adds	r0, r0, r2
   18c30:	adc	r1, r1, #0
   18c34:	str	r0, [fp, #-144]	; 0xffffff70
   18c38:	str	r1, [fp, #-140]	; 0xffffff74
   18c3c:	ldr	r0, [sp, #240]	; 0xf0
   18c40:	ldr	r1, [sp, #248]	; 0xf8
   18c44:	str	r0, [fp, #-148]	; 0xffffff6c
   18c48:	str	r1, [fp, #-152]	; 0xffffff68
   18c4c:	b	18c50 <__assert_fail@plt+0x78cc>
   18c50:	ldr	r0, [fp, #-136]	; 0xffffff78
   18c54:	ldr	r1, [fp, #-132]	; 0xffffff7c
   18c58:	ldr	r2, [fp, #-104]	; 0xffffff98
   18c5c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18c60:	adds	r0, r0, r2
   18c64:	adc	r1, r1, r3
   18c68:	str	r0, [sp, #184]	; 0xb8
   18c6c:	str	r1, [sp, #188]	; 0xbc
   18c70:	ldr	r0, [fp, #-128]	; 0xffffff80
   18c74:	ldr	r1, [fp, #-124]	; 0xffffff84
   18c78:	ldr	r2, [sp, #184]	; 0xb8
   18c7c:	ldr	r3, [sp, #188]	; 0xbc
   18c80:	ldr	ip, [fp, #-136]	; 0xffffff78
   18c84:	ldr	lr, [fp, #-132]	; 0xffffff7c
   18c88:	subs	r2, r2, ip
   18c8c:	sbcs	r3, r3, lr
   18c90:	mov	ip, #0
   18c94:	movwcc	ip, #1
   18c98:	adds	lr, r0, #1
   18c9c:	adc	r4, r1, #0
   18ca0:	cmp	ip, #0
   18ca4:	movne	r1, r4
   18ca8:	cmp	ip, #0
   18cac:	movne	r0, lr
   18cb0:	str	r1, [fp, #-124]	; 0xffffff84
   18cb4:	str	r0, [fp, #-128]	; 0xffffff80
   18cb8:	ldr	r0, [sp, #184]	; 0xb8
   18cbc:	ldr	r1, [sp, #188]	; 0xbc
   18cc0:	str	r1, [fp, #-132]	; 0xffffff7c
   18cc4:	str	r0, [fp, #-136]	; 0xffffff78
   18cc8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   18ccc:	ldr	r1, [fp, #-84]	; 0xffffffac
   18cd0:	ldr	r2, [fp, #-136]	; 0xffffff78
   18cd4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   18cd8:	umull	ip, lr, r0, r2
   18cdc:	mla	r0, r0, r3, lr
   18ce0:	mla	r0, r1, r2, r0
   18ce4:	str	ip, [fp, #-112]	; 0xffffff90
   18ce8:	str	r0, [fp, #-108]	; 0xffffff94
   18cec:	ldr	r0, [fp, #-152]	; 0xffffff68
   18cf0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18cf4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18cf8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18cfc:	adds	r0, r0, r2
   18d00:	adc	r1, r1, r3
   18d04:	str	r0, [sp, #176]	; 0xb0
   18d08:	str	r1, [sp, #180]	; 0xb4
   18d0c:	ldr	r0, [fp, #-144]	; 0xffffff70
   18d10:	ldr	r1, [fp, #-140]	; 0xffffff74
   18d14:	ldr	r2, [sp, #176]	; 0xb0
   18d18:	ldr	r3, [sp, #180]	; 0xb4
   18d1c:	ldr	ip, [fp, #-152]	; 0xffffff68
   18d20:	ldr	lr, [fp, #-148]	; 0xffffff6c
   18d24:	subs	r2, r2, ip
   18d28:	sbcs	r3, r3, lr
   18d2c:	mov	ip, #0
   18d30:	movwcc	ip, #1
   18d34:	adds	lr, r0, #1
   18d38:	adc	r4, r1, #0
   18d3c:	cmp	ip, #0
   18d40:	movne	r1, r4
   18d44:	cmp	ip, #0
   18d48:	movne	r0, lr
   18d4c:	str	r1, [fp, #-92]	; 0xffffffa4
   18d50:	str	r0, [fp, #-96]	; 0xffffffa0
   18d54:	ldr	r0, [sp, #176]	; 0xb0
   18d58:	ldr	r1, [sp, #180]	; 0xb4
   18d5c:	str	r1, [fp, #-100]	; 0xffffff9c
   18d60:	str	r0, [fp, #-104]	; 0xffffff98
   18d64:	b	18d68 <__assert_fail@plt+0x79e4>
   18d68:	ldr	r0, [fp, #-112]	; 0xffffff90
   18d6c:	ldr	r1, [fp, #-108]	; 0xffffff94
   18d70:	str	r1, [sp, #124]	; 0x7c
   18d74:	str	r0, [sp, #120]	; 0x78
   18d78:	ldr	r0, [fp, #-80]	; 0xffffffb0
   18d7c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   18d80:	str	r1, [sp, #116]	; 0x74
   18d84:	str	r0, [sp, #112]	; 0x70
   18d88:	ldr	r0, [sp, #120]	; 0x78
   18d8c:	str	r0, [sp, #140]	; 0x8c
   18d90:	ldr	r0, [sp, #124]	; 0x7c
   18d94:	str	r0, [sp, #132]	; 0x84
   18d98:	ldr	r0, [sp, #112]	; 0x70
   18d9c:	str	r0, [sp, #136]	; 0x88
   18da0:	ldr	r0, [sp, #116]	; 0x74
   18da4:	str	r0, [sp, #128]	; 0x80
   18da8:	ldr	r0, [sp, #140]	; 0x8c
   18dac:	ldr	r1, [sp, #136]	; 0x88
   18db0:	umull	r0, r1, r0, r1
   18db4:	str	r1, [sp, #172]	; 0xac
   18db8:	str	r0, [sp, #168]	; 0xa8
   18dbc:	ldr	r0, [sp, #140]	; 0x8c
   18dc0:	ldr	r1, [sp, #128]	; 0x80
   18dc4:	umull	r0, r1, r0, r1
   18dc8:	str	r1, [sp, #164]	; 0xa4
   18dcc:	str	r0, [sp, #160]	; 0xa0
   18dd0:	ldr	r0, [sp, #132]	; 0x84
   18dd4:	ldr	r1, [sp, #136]	; 0x88
   18dd8:	umull	r0, r1, r0, r1
   18ddc:	str	r1, [sp, #156]	; 0x9c
   18de0:	str	r0, [sp, #152]	; 0x98
   18de4:	ldr	r0, [sp, #132]	; 0x84
   18de8:	ldr	r1, [sp, #128]	; 0x80
   18dec:	umull	r0, r1, r0, r1
   18df0:	str	r1, [sp, #148]	; 0x94
   18df4:	str	r0, [sp, #144]	; 0x90
   18df8:	ldr	r0, [sp, #172]	; 0xac
   18dfc:	ldr	r1, [sp, #160]	; 0xa0
   18e00:	ldr	r2, [sp, #164]	; 0xa4
   18e04:	adds	r0, r1, r0
   18e08:	adc	r1, r2, #0
   18e0c:	str	r0, [sp, #160]	; 0xa0
   18e10:	str	r1, [sp, #164]	; 0xa4
   18e14:	ldr	r0, [sp, #152]	; 0x98
   18e18:	ldr	r1, [sp, #156]	; 0x9c
   18e1c:	ldr	r2, [sp, #160]	; 0xa0
   18e20:	ldr	r3, [sp, #164]	; 0xa4
   18e24:	adds	r0, r2, r0
   18e28:	adc	r1, r3, r1
   18e2c:	str	r0, [sp, #160]	; 0xa0
   18e30:	str	r1, [sp, #164]	; 0xa4
   18e34:	ldr	r0, [sp, #160]	; 0xa0
   18e38:	ldr	r1, [sp, #164]	; 0xa4
   18e3c:	ldr	r2, [sp, #152]	; 0x98
   18e40:	ldr	r3, [sp, #156]	; 0x9c
   18e44:	subs	r0, r0, r2
   18e48:	sbcs	r1, r1, r3
   18e4c:	bcs	18e60 <__assert_fail@plt+0x7adc>
   18e50:	b	18e54 <__assert_fail@plt+0x7ad0>
   18e54:	ldr	r0, [sp, #148]	; 0x94
   18e58:	add	r0, r0, #1
   18e5c:	str	r0, [sp, #148]	; 0x94
   18e60:	ldr	r0, [sp, #144]	; 0x90
   18e64:	ldr	r1, [sp, #148]	; 0x94
   18e68:	ldr	r2, [sp, #164]	; 0xa4
   18e6c:	adds	r0, r0, r2
   18e70:	adc	r1, r1, #0
   18e74:	str	r0, [fp, #-120]	; 0xffffff88
   18e78:	str	r1, [fp, #-116]	; 0xffffff8c
   18e7c:	ldr	r0, [sp, #160]	; 0xa0
   18e80:	ldr	r1, [sp, #168]	; 0xa8
   18e84:	str	r0, [fp, #-156]	; 0xffffff64
   18e88:	str	r1, [fp, #-160]	; 0xffffff60
   18e8c:	b	18e90 <__assert_fail@plt+0x7b0c>
   18e90:	ldr	r0, [fp, #-112]	; 0xffffff90
   18e94:	ldr	r1, [fp, #-108]	; 0xffffff94
   18e98:	str	r1, [sp, #60]	; 0x3c
   18e9c:	str	r0, [sp, #56]	; 0x38
   18ea0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18ea4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18ea8:	str	r1, [sp, #52]	; 0x34
   18eac:	str	r0, [sp, #48]	; 0x30
   18eb0:	ldr	r0, [sp, #56]	; 0x38
   18eb4:	str	r0, [sp, #76]	; 0x4c
   18eb8:	ldr	r0, [sp, #60]	; 0x3c
   18ebc:	str	r0, [sp, #68]	; 0x44
   18ec0:	ldr	r0, [sp, #48]	; 0x30
   18ec4:	str	r0, [sp, #72]	; 0x48
   18ec8:	ldr	r0, [sp, #52]	; 0x34
   18ecc:	str	r0, [sp, #64]	; 0x40
   18ed0:	ldr	r0, [sp, #76]	; 0x4c
   18ed4:	ldr	r1, [sp, #72]	; 0x48
   18ed8:	umull	r0, r1, r0, r1
   18edc:	str	r1, [sp, #108]	; 0x6c
   18ee0:	str	r0, [sp, #104]	; 0x68
   18ee4:	ldr	r0, [sp, #76]	; 0x4c
   18ee8:	ldr	r1, [sp, #64]	; 0x40
   18eec:	umull	r0, r1, r0, r1
   18ef0:	str	r1, [sp, #100]	; 0x64
   18ef4:	str	r0, [sp, #96]	; 0x60
   18ef8:	ldr	r0, [sp, #68]	; 0x44
   18efc:	ldr	r1, [sp, #72]	; 0x48
   18f00:	umull	r0, r1, r0, r1
   18f04:	str	r1, [sp, #92]	; 0x5c
   18f08:	str	r0, [sp, #88]	; 0x58
   18f0c:	ldr	r0, [sp, #68]	; 0x44
   18f10:	ldr	r1, [sp, #64]	; 0x40
   18f14:	umull	r0, r1, r0, r1
   18f18:	str	r1, [sp, #84]	; 0x54
   18f1c:	str	r0, [sp, #80]	; 0x50
   18f20:	ldr	r0, [sp, #108]	; 0x6c
   18f24:	ldr	r1, [sp, #96]	; 0x60
   18f28:	ldr	r2, [sp, #100]	; 0x64
   18f2c:	adds	r0, r1, r0
   18f30:	adc	r1, r2, #0
   18f34:	str	r0, [sp, #96]	; 0x60
   18f38:	str	r1, [sp, #100]	; 0x64
   18f3c:	ldr	r0, [sp, #88]	; 0x58
   18f40:	ldr	r1, [sp, #92]	; 0x5c
   18f44:	ldr	r2, [sp, #96]	; 0x60
   18f48:	ldr	r3, [sp, #100]	; 0x64
   18f4c:	adds	r0, r2, r0
   18f50:	adc	r1, r3, r1
   18f54:	str	r0, [sp, #96]	; 0x60
   18f58:	str	r1, [sp, #100]	; 0x64
   18f5c:	ldr	r0, [sp, #96]	; 0x60
   18f60:	ldr	r1, [sp, #100]	; 0x64
   18f64:	ldr	r2, [sp, #88]	; 0x58
   18f68:	ldr	r3, [sp, #92]	; 0x5c
   18f6c:	subs	r0, r0, r2
   18f70:	sbcs	r1, r1, r3
   18f74:	bcs	18f88 <__assert_fail@plt+0x7c04>
   18f78:	b	18f7c <__assert_fail@plt+0x7bf8>
   18f7c:	ldr	r0, [sp, #84]	; 0x54
   18f80:	add	r0, r0, #1
   18f84:	str	r0, [sp, #84]	; 0x54
   18f88:	ldr	r0, [sp, #80]	; 0x50
   18f8c:	ldr	r1, [sp, #84]	; 0x54
   18f90:	ldr	r2, [sp, #100]	; 0x64
   18f94:	adds	r0, r0, r2
   18f98:	adc	r1, r1, #0
   18f9c:	str	r0, [fp, #-144]	; 0xffffff70
   18fa0:	str	r1, [fp, #-140]	; 0xffffff74
   18fa4:	ldr	r0, [sp, #96]	; 0x60
   18fa8:	ldr	r1, [sp, #104]	; 0x68
   18fac:	str	r0, [fp, #-148]	; 0xffffff6c
   18fb0:	str	r1, [fp, #-152]	; 0xffffff68
   18fb4:	ldr	r0, [fp, #-136]	; 0xffffff78
   18fb8:	ldr	r1, [fp, #-132]	; 0xffffff7c
   18fbc:	orr	r0, r0, r1
   18fc0:	ldr	r1, [fp, #-104]	; 0xffffff98
   18fc4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18fc8:	adds	r3, r1, #1
   18fcc:	adc	ip, r2, #0
   18fd0:	cmp	r0, #0
   18fd4:	movne	r1, r3
   18fd8:	cmp	r0, #0
   18fdc:	movne	r2, ip
   18fe0:	str	r1, [fp, #-104]	; 0xffffff98
   18fe4:	str	r2, [fp, #-100]	; 0xffffff9c
   18fe8:	ldr	r0, [fp, #-104]	; 0xffffff98
   18fec:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18ff0:	ldr	r2, [fp, #-120]	; 0xffffff88
   18ff4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18ff8:	adds	r0, r0, r2
   18ffc:	adc	r1, r1, r3
   19000:	str	r0, [sp, #40]	; 0x28
   19004:	str	r1, [sp, #44]	; 0x2c
   19008:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1900c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19010:	ldr	r2, [sp, #40]	; 0x28
   19014:	ldr	r3, [sp, #44]	; 0x2c
   19018:	ldr	ip, [fp, #-104]	; 0xffffff98
   1901c:	ldr	lr, [fp, #-100]	; 0xffffff9c
   19020:	subs	r2, r2, ip
   19024:	sbcs	r3, r3, lr
   19028:	mov	ip, #0
   1902c:	movwcc	ip, #1
   19030:	adds	lr, r0, #1
   19034:	adc	r4, r1, #0
   19038:	cmp	ip, #0
   1903c:	movne	r1, r4
   19040:	cmp	ip, #0
   19044:	movne	r0, lr
   19048:	str	r1, [fp, #-92]	; 0xffffffa4
   1904c:	str	r0, [fp, #-96]	; 0xffffffa0
   19050:	ldr	r0, [sp, #40]	; 0x28
   19054:	ldr	r1, [sp, #44]	; 0x2c
   19058:	str	r1, [fp, #-100]	; 0xffffff9c
   1905c:	str	r0, [fp, #-104]	; 0xffffff98
   19060:	b	19064 <__assert_fail@plt+0x7ce0>
   19064:	ldr	r0, [fp, #-104]	; 0xffffff98
   19068:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1906c:	ldr	r2, [fp, #-128]	; 0xffffff80
   19070:	ldr	r3, [fp, #-124]	; 0xffffff84
   19074:	adds	r0, r0, r2
   19078:	adc	r1, r1, r3
   1907c:	str	r0, [sp, #32]
   19080:	str	r1, [sp, #36]	; 0x24
   19084:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19088:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1908c:	ldr	r2, [sp, #32]
   19090:	ldr	r3, [sp, #36]	; 0x24
   19094:	ldr	ip, [fp, #-104]	; 0xffffff98
   19098:	ldr	lr, [fp, #-100]	; 0xffffff9c
   1909c:	subs	r2, r2, ip
   190a0:	sbcs	r3, r3, lr
   190a4:	mov	ip, #0
   190a8:	movwcc	ip, #1
   190ac:	adds	lr, r0, #1
   190b0:	adc	r4, r1, #0
   190b4:	cmp	ip, #0
   190b8:	movne	r1, r4
   190bc:	cmp	ip, #0
   190c0:	movne	r0, lr
   190c4:	str	r1, [fp, #-92]	; 0xffffffa4
   190c8:	str	r0, [fp, #-96]	; 0xffffffa0
   190cc:	ldr	r0, [sp, #32]
   190d0:	ldr	r1, [sp, #36]	; 0x24
   190d4:	str	r1, [fp, #-100]	; 0xffffff9c
   190d8:	str	r0, [fp, #-104]	; 0xffffff98
   190dc:	b	190e0 <__assert_fail@plt+0x7d5c>
   190e0:	ldr	r0, [fp, #-104]	; 0xffffff98
   190e4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   190e8:	ldr	r2, [fp, #-152]	; 0xffffff68
   190ec:	ldr	r3, [fp, #-148]	; 0xffffff6c
   190f0:	adds	r0, r0, r2
   190f4:	adc	r1, r1, r3
   190f8:	str	r0, [sp, #24]
   190fc:	str	r1, [sp, #28]
   19100:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19104:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19108:	ldr	r2, [fp, #-144]	; 0xffffff70
   1910c:	ldr	r3, [fp, #-140]	; 0xffffff74
   19110:	adds	r0, r0, r2
   19114:	adc	r1, r1, r3
   19118:	ldr	r2, [sp, #24]
   1911c:	ldr	r3, [sp, #28]
   19120:	ldr	ip, [fp, #-104]	; 0xffffff98
   19124:	ldr	lr, [fp, #-100]	; 0xffffff9c
   19128:	subs	r2, r2, ip
   1912c:	sbcs	r3, r3, lr
   19130:	mov	ip, #0
   19134:	movwcc	ip, #1
   19138:	adds	lr, r0, #1
   1913c:	adc	r4, r1, #0
   19140:	cmp	ip, #0
   19144:	movne	r0, lr
   19148:	cmp	ip, #0
   1914c:	movne	r1, r4
   19150:	str	r1, [fp, #-92]	; 0xffffffa4
   19154:	str	r0, [fp, #-96]	; 0xffffffa0
   19158:	ldr	r0, [sp, #24]
   1915c:	ldr	r1, [sp, #28]
   19160:	str	r1, [fp, #-100]	; 0xffffff9c
   19164:	str	r0, [fp, #-104]	; 0xffffff98
   19168:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1916c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19170:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19174:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19178:	subs	r0, r2, r0
   1917c:	sbcs	r1, r3, r1
   19180:	bcc	191d0 <__assert_fail@plt+0x7e4c>
   19184:	b	19188 <__assert_fail@plt+0x7e04>
   19188:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1918c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19190:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19194:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19198:	eor	r1, r1, r3
   1919c:	eor	r0, r0, r2
   191a0:	orr	r0, r0, r1
   191a4:	cmp	r0, #0
   191a8:	bne	19254 <__assert_fail@plt+0x7ed0>
   191ac:	b	191b0 <__assert_fail@plt+0x7e2c>
   191b0:	ldr	r0, [fp, #-104]	; 0xffffff98
   191b4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   191b8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   191bc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   191c0:	subs	r0, r0, r2
   191c4:	sbcs	r1, r1, r3
   191c8:	bcc	19254 <__assert_fail@plt+0x7ed0>
   191cc:	b	191d0 <__assert_fail@plt+0x7e4c>
   191d0:	b	191d4 <__assert_fail@plt+0x7e50>
   191d4:	ldr	r0, [fp, #-104]	; 0xffffff98
   191d8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   191dc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   191e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   191e4:	subs	r0, r0, r2
   191e8:	sbcs	r1, r1, r3
   191ec:	mov	r2, #0
   191f0:	mov	r3, r2
   191f4:	movwcc	r3, #1
   191f8:	str	r2, [sp, #20]
   191fc:	str	r3, [sp, #16]
   19200:	ldr	r2, [fp, #-104]	; 0xffffff98
   19204:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19208:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1920c:	ldr	lr, [fp, #-76]	; 0xffffffb4
   19210:	subs	r2, r2, ip
   19214:	sbc	r3, r3, lr
   19218:	str	r2, [fp, #-104]	; 0xffffff98
   1921c:	str	r3, [fp, #-100]	; 0xffffff9c
   19220:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19224:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19228:	ldr	ip, [fp, #-72]	; 0xffffffb8
   1922c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   19230:	subs	r2, r2, ip
   19234:	sbc	r3, r3, lr
   19238:	ldr	ip, [sp, #16]
   1923c:	ldr	lr, [sp, #20]
   19240:	subs	r2, r2, ip
   19244:	sbc	r3, r3, lr
   19248:	str	r2, [fp, #-96]	; 0xffffffa0
   1924c:	str	r3, [fp, #-92]	; 0xffffffa4
   19250:	b	19254 <__assert_fail@plt+0x7ed0>
   19254:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19258:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1925c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19260:	str	r1, [r2, #4]
   19264:	str	r0, [r2]
   19268:	ldr	r0, [fp, #-104]	; 0xffffff98
   1926c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19270:	sub	sp, fp, #28
   19274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19278:	sub	sp, sp, #48	; 0x30
   1927c:	str	r0, [sp, #32]
   19280:	str	r1, [sp, #36]	; 0x24
   19284:	str	r3, [sp, #28]
   19288:	str	r2, [sp, #24]
   1928c:	ldrb	r0, [sp, #24]
   19290:	tst	r0, #1
   19294:	bne	192cc <__assert_fail@plt+0x7f48>
   19298:	b	1929c <__assert_fail@plt+0x7f18>
   1929c:	ldr	r0, [sp, #24]
   192a0:	ldr	r1, [sp, #28]
   192a4:	str	r1, [sp, #20]
   192a8:	str	r0, [sp, #16]
   192ac:	ldr	r0, [sp, #32]
   192b0:	ldr	r1, [sp, #36]	; 0x24
   192b4:	str	r1, [sp, #28]
   192b8:	str	r0, [sp, #24]
   192bc:	ldr	r0, [sp, #16]
   192c0:	ldr	r1, [sp, #20]
   192c4:	str	r1, [sp, #36]	; 0x24
   192c8:	str	r0, [sp, #32]
   192cc:	ldr	r0, [sp, #32]
   192d0:	ldr	r1, [sp, #36]	; 0x24
   192d4:	orr	r0, r0, r1
   192d8:	cmp	r0, #0
   192dc:	bne	192f8 <__assert_fail@plt+0x7f74>
   192e0:	b	192e4 <__assert_fail@plt+0x7f60>
   192e4:	ldr	r0, [sp, #24]
   192e8:	ldr	r1, [sp, #28]
   192ec:	str	r1, [sp, #44]	; 0x2c
   192f0:	str	r0, [sp, #40]	; 0x28
   192f4:	b	19420 <__assert_fail@plt+0x809c>
   192f8:	ldr	r0, [sp, #24]
   192fc:	ldr	r1, [sp, #28]
   19300:	lsrs	r1, r1, #1
   19304:	rrx	r0, r0
   19308:	str	r1, [sp, #28]
   1930c:	str	r0, [sp, #24]
   19310:	b	19314 <__assert_fail@plt+0x7f90>
   19314:	ldrb	r0, [sp, #32]
   19318:	tst	r0, #1
   1931c:	bne	19340 <__assert_fail@plt+0x7fbc>
   19320:	b	19324 <__assert_fail@plt+0x7fa0>
   19324:	ldr	r0, [sp, #32]
   19328:	ldr	r1, [sp, #36]	; 0x24
   1932c:	lsrs	r1, r1, #1
   19330:	rrx	r0, r0
   19334:	str	r1, [sp, #36]	; 0x24
   19338:	str	r0, [sp, #32]
   1933c:	b	19314 <__assert_fail@plt+0x7f90>
   19340:	ldr	r0, [sp, #32]
   19344:	ldr	r1, [sp, #36]	; 0x24
   19348:	lsrs	r1, r1, #1
   1934c:	rrx	r0, r0
   19350:	str	r1, [sp, #36]	; 0x24
   19354:	str	r0, [sp, #32]
   19358:	ldr	r0, [sp, #32]
   1935c:	ldr	r1, [sp, #36]	; 0x24
   19360:	ldr	r2, [sp, #24]
   19364:	ldr	r3, [sp, #28]
   19368:	subs	r0, r0, r2
   1936c:	sbc	r1, r1, r3
   19370:	str	r0, [sp, #8]
   19374:	str	r1, [sp, #12]
   19378:	ldr	r0, [sp, #8]
   1937c:	ldr	r1, [sp, #12]
   19380:	orr	r0, r0, r1
   19384:	cmp	r0, #0
   19388:	bne	193b4 <__assert_fail@plt+0x8030>
   1938c:	b	19390 <__assert_fail@plt+0x800c>
   19390:	ldr	r0, [sp, #32]
   19394:	ldr	r1, [sp, #36]	; 0x24
   19398:	lsl	r1, r1, #1
   1939c:	orr	r1, r1, r0, lsr #31
   193a0:	mov	r2, #1
   193a4:	orr	r0, r2, r0, lsl #1
   193a8:	str	r0, [sp, #40]	; 0x28
   193ac:	str	r1, [sp, #44]	; 0x2c
   193b0:	b	19420 <__assert_fail@plt+0x809c>
   193b4:	ldr	r0, [sp, #12]
   193b8:	asr	r0, r0, #31
   193bc:	str	r0, [sp, #4]
   193c0:	str	r0, [sp]
   193c4:	ldr	r0, [sp]
   193c8:	ldr	r1, [sp, #4]
   193cc:	ldr	r2, [sp, #8]
   193d0:	ldr	r3, [sp, #12]
   193d4:	and	r1, r1, r3
   193d8:	and	r0, r0, r2
   193dc:	ldr	r2, [sp, #24]
   193e0:	ldr	r3, [sp, #28]
   193e4:	adds	r0, r2, r0
   193e8:	adc	r1, r3, r1
   193ec:	str	r0, [sp, #24]
   193f0:	str	r1, [sp, #28]
   193f4:	ldr	r0, [sp, #8]
   193f8:	ldr	r1, [sp, #12]
   193fc:	ldr	r2, [sp]
   19400:	ldr	r3, [sp, #4]
   19404:	eor	r1, r1, r3
   19408:	eor	r0, r0, r2
   1940c:	subs	r0, r0, r2
   19410:	sbc	r1, r1, r3
   19414:	str	r0, [sp, #32]
   19418:	str	r1, [sp, #36]	; 0x24
   1941c:	b	19310 <__assert_fail@plt+0x7f8c>
   19420:	ldr	r0, [sp, #40]	; 0x28
   19424:	ldr	r1, [sp, #44]	; 0x2c
   19428:	add	sp, sp, #48	; 0x30
   1942c:	bx	lr
   19430:	push	{r4, r5, r6, sl, fp, lr}
   19434:	add	fp, sp, #16
   19438:	sub	sp, sp, #64	; 0x40
   1943c:	ldr	r1, [fp, #28]
   19440:	ldr	ip, [fp, #24]
   19444:	ldr	lr, [fp, #20]
   19448:	ldr	r4, [fp, #16]
   1944c:	ldr	r5, [fp, #12]
   19450:	ldr	r6, [fp, #8]
   19454:	str	r0, [fp, #-28]	; 0xffffffe4
   19458:	str	r3, [sp, #44]	; 0x2c
   1945c:	str	r2, [sp, #40]	; 0x28
   19460:	str	r5, [sp, #36]	; 0x24
   19464:	str	r6, [sp, #32]
   19468:	str	lr, [sp, #28]
   1946c:	str	r4, [sp, #24]
   19470:	str	r1, [sp, #20]
   19474:	str	ip, [sp, #16]
   19478:	ldrb	r0, [sp, #16]
   1947c:	tst	r0, #1
   19480:	beq	1948c <__assert_fail@plt+0x8108>
   19484:	b	19488 <__assert_fail@plt+0x8104>
   19488:	b	194ac <__assert_fail@plt+0x8128>
   1948c:	movw	r0, #16270	; 0x3f8e
   19490:	movt	r0, #3
   19494:	movw	r1, #15747	; 0x3d83
   19498:	movt	r1, #3
   1949c:	movw	r2, #476	; 0x1dc
   194a0:	movw	r3, #16277	; 0x3f95
   194a4:	movt	r3, #3
   194a8:	bl	11384 <__assert_fail@plt>
   194ac:	ldr	r0, [sp, #32]
   194b0:	ldr	r1, [sp, #36]	; 0x24
   194b4:	ldr	r2, [sp, #40]	; 0x28
   194b8:	ldr	r3, [sp, #44]	; 0x2c
   194bc:	orr	r1, r1, r3
   194c0:	orr	r0, r0, r2
   194c4:	orr	r0, r0, r1
   194c8:	cmp	r0, #0
   194cc:	bne	194fc <__assert_fail@plt+0x8178>
   194d0:	b	194d4 <__assert_fail@plt+0x8150>
   194d4:	ldr	r0, [sp, #24]
   194d8:	ldr	r1, [sp, #28]
   194dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   194e0:	str	r1, [r2, #4]
   194e4:	str	r0, [r2]
   194e8:	ldr	r0, [sp, #16]
   194ec:	ldr	r1, [sp, #20]
   194f0:	str	r1, [fp, #-20]	; 0xffffffec
   194f4:	str	r0, [fp, #-24]	; 0xffffffe8
   194f8:	b	1985c <__assert_fail@plt+0x84d8>
   194fc:	b	19500 <__assert_fail@plt+0x817c>
   19500:	ldrb	r0, [sp, #32]
   19504:	tst	r0, #1
   19508:	bne	19550 <__assert_fail@plt+0x81cc>
   1950c:	b	19510 <__assert_fail@plt+0x818c>
   19510:	b	19514 <__assert_fail@plt+0x8190>
   19514:	ldr	r0, [sp, #40]	; 0x28
   19518:	ldr	r1, [sp, #32]
   1951c:	ldr	r2, [sp, #36]	; 0x24
   19520:	lsrs	r2, r2, #1
   19524:	rrx	r1, r1
   19528:	orr	r0, r2, r0, lsl #31
   1952c:	str	r1, [sp, #32]
   19530:	str	r0, [sp, #36]	; 0x24
   19534:	ldr	r0, [sp, #40]	; 0x28
   19538:	ldr	r1, [sp, #44]	; 0x2c
   1953c:	lsrs	r1, r1, #1
   19540:	rrx	r0, r0
   19544:	str	r1, [sp, #44]	; 0x2c
   19548:	str	r0, [sp, #40]	; 0x28
   1954c:	b	19500 <__assert_fail@plt+0x817c>
   19550:	b	19554 <__assert_fail@plt+0x81d0>
   19554:	ldr	r0, [sp, #24]
   19558:	ldr	r1, [sp, #28]
   1955c:	ldr	r2, [sp, #40]	; 0x28
   19560:	ldr	r3, [sp, #44]	; 0x2c
   19564:	orr	r1, r1, r3
   19568:	orr	r0, r0, r2
   1956c:	orr	r0, r0, r1
   19570:	cmp	r0, #0
   19574:	bne	195ac <__assert_fail@plt+0x8228>
   19578:	b	1957c <__assert_fail@plt+0x81f8>
   1957c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19580:	mov	r1, #0
   19584:	str	r1, [r0, #4]
   19588:	str	r1, [r0]
   1958c:	ldr	r0, [sp, #16]
   19590:	ldr	r1, [sp, #20]
   19594:	ldr	r2, [sp, #32]
   19598:	ldr	r3, [sp, #36]	; 0x24
   1959c:	bl	19278 <__assert_fail@plt+0x7ef4>
   195a0:	str	r1, [fp, #-20]	; 0xffffffec
   195a4:	str	r0, [fp, #-24]	; 0xffffffe8
   195a8:	b	1985c <__assert_fail@plt+0x84d8>
   195ac:	ldr	r0, [sp, #40]	; 0x28
   195b0:	ldr	r1, [sp, #44]	; 0x2c
   195b4:	ldr	r2, [sp, #24]
   195b8:	ldr	r3, [sp, #28]
   195bc:	subs	r0, r2, r0
   195c0:	sbcs	r1, r3, r1
   195c4:	bcc	19614 <__assert_fail@plt+0x8290>
   195c8:	b	195cc <__assert_fail@plt+0x8248>
   195cc:	ldr	r0, [sp, #40]	; 0x28
   195d0:	ldr	r1, [sp, #44]	; 0x2c
   195d4:	ldr	r2, [sp, #24]
   195d8:	ldr	r3, [sp, #28]
   195dc:	eor	r1, r1, r3
   195e0:	eor	r0, r0, r2
   195e4:	orr	r0, r0, r1
   195e8:	cmp	r0, #0
   195ec:	bne	196ec <__assert_fail@plt+0x8368>
   195f0:	b	195f4 <__assert_fail@plt+0x8270>
   195f4:	ldr	r0, [sp, #32]
   195f8:	ldr	r1, [sp, #36]	; 0x24
   195fc:	ldr	r2, [sp, #16]
   19600:	ldr	r3, [sp, #20]
   19604:	subs	r0, r2, r0
   19608:	sbcs	r1, r3, r1
   1960c:	bcs	196ec <__assert_fail@plt+0x8368>
   19610:	b	19614 <__assert_fail@plt+0x8290>
   19614:	b	19618 <__assert_fail@plt+0x8294>
   19618:	ldr	r0, [sp, #32]
   1961c:	ldr	r1, [sp, #36]	; 0x24
   19620:	ldr	r2, [sp, #16]
   19624:	ldr	r3, [sp, #20]
   19628:	subs	r0, r0, r2
   1962c:	sbcs	r1, r1, r3
   19630:	mov	r2, #0
   19634:	mov	r3, r2
   19638:	movwcc	r3, #1
   1963c:	str	r2, [sp, #12]
   19640:	str	r3, [sp, #8]
   19644:	ldr	r2, [sp, #32]
   19648:	ldr	r3, [sp, #36]	; 0x24
   1964c:	ldr	ip, [sp, #16]
   19650:	ldr	lr, [sp, #20]
   19654:	subs	r2, r2, ip
   19658:	sbc	r3, r3, lr
   1965c:	str	r2, [sp, #32]
   19660:	str	r3, [sp, #36]	; 0x24
   19664:	ldr	r2, [sp, #40]	; 0x28
   19668:	ldr	r3, [sp, #44]	; 0x2c
   1966c:	ldr	ip, [sp, #24]
   19670:	ldr	lr, [sp, #28]
   19674:	subs	r2, r2, ip
   19678:	sbc	r3, r3, lr
   1967c:	ldr	ip, [sp, #8]
   19680:	ldr	lr, [sp, #12]
   19684:	subs	r2, r2, ip
   19688:	sbc	r3, r3, lr
   1968c:	str	r2, [sp, #40]	; 0x28
   19690:	str	r3, [sp, #44]	; 0x2c
   19694:	b	19698 <__assert_fail@plt+0x8314>
   19698:	b	1969c <__assert_fail@plt+0x8318>
   1969c:	ldr	r0, [sp, #40]	; 0x28
   196a0:	ldr	r1, [sp, #32]
   196a4:	ldr	r2, [sp, #36]	; 0x24
   196a8:	lsrs	r2, r2, #1
   196ac:	rrx	r1, r1
   196b0:	orr	r0, r2, r0, lsl #31
   196b4:	str	r1, [sp, #32]
   196b8:	str	r0, [sp, #36]	; 0x24
   196bc:	ldr	r0, [sp, #40]	; 0x28
   196c0:	ldr	r1, [sp, #44]	; 0x2c
   196c4:	lsrs	r1, r1, #1
   196c8:	rrx	r0, r0
   196cc:	str	r1, [sp, #44]	; 0x2c
   196d0:	str	r0, [sp, #40]	; 0x28
   196d4:	b	196d8 <__assert_fail@plt+0x8354>
   196d8:	ldrb	r0, [sp, #32]
   196dc:	tst	r0, #1
   196e0:	beq	19698 <__assert_fail@plt+0x8314>
   196e4:	b	196e8 <__assert_fail@plt+0x8364>
   196e8:	b	19834 <__assert_fail@plt+0x84b0>
   196ec:	ldr	r0, [sp, #24]
   196f0:	ldr	r1, [sp, #28]
   196f4:	ldr	r2, [sp, #40]	; 0x28
   196f8:	ldr	r3, [sp, #44]	; 0x2c
   196fc:	subs	r0, r2, r0
   19700:	sbcs	r1, r3, r1
   19704:	bcc	19754 <__assert_fail@plt+0x83d0>
   19708:	b	1970c <__assert_fail@plt+0x8388>
   1970c:	ldr	r0, [sp, #24]
   19710:	ldr	r1, [sp, #28]
   19714:	ldr	r2, [sp, #40]	; 0x28
   19718:	ldr	r3, [sp, #44]	; 0x2c
   1971c:	eor	r1, r1, r3
   19720:	eor	r0, r0, r2
   19724:	orr	r0, r0, r1
   19728:	cmp	r0, #0
   1972c:	bne	1982c <__assert_fail@plt+0x84a8>
   19730:	b	19734 <__assert_fail@plt+0x83b0>
   19734:	ldr	r0, [sp, #16]
   19738:	ldr	r1, [sp, #20]
   1973c:	ldr	r2, [sp, #32]
   19740:	ldr	r3, [sp, #36]	; 0x24
   19744:	subs	r0, r2, r0
   19748:	sbcs	r1, r3, r1
   1974c:	bcs	1982c <__assert_fail@plt+0x84a8>
   19750:	b	19754 <__assert_fail@plt+0x83d0>
   19754:	b	19758 <__assert_fail@plt+0x83d4>
   19758:	ldr	r0, [sp, #16]
   1975c:	ldr	r1, [sp, #20]
   19760:	ldr	r2, [sp, #32]
   19764:	ldr	r3, [sp, #36]	; 0x24
   19768:	subs	r0, r0, r2
   1976c:	sbcs	r1, r1, r3
   19770:	mov	r2, #0
   19774:	mov	r3, r2
   19778:	movwcc	r3, #1
   1977c:	str	r2, [sp, #4]
   19780:	str	r3, [sp]
   19784:	ldr	r2, [sp, #16]
   19788:	ldr	r3, [sp, #20]
   1978c:	ldr	ip, [sp, #32]
   19790:	ldr	lr, [sp, #36]	; 0x24
   19794:	subs	r2, r2, ip
   19798:	sbc	r3, r3, lr
   1979c:	str	r2, [sp, #16]
   197a0:	str	r3, [sp, #20]
   197a4:	ldr	r2, [sp, #24]
   197a8:	ldr	r3, [sp, #28]
   197ac:	ldr	ip, [sp, #40]	; 0x28
   197b0:	ldr	lr, [sp, #44]	; 0x2c
   197b4:	subs	r2, r2, ip
   197b8:	sbc	r3, r3, lr
   197bc:	ldr	ip, [sp]
   197c0:	ldr	lr, [sp, #4]
   197c4:	subs	r2, r2, ip
   197c8:	sbc	r3, r3, lr
   197cc:	str	r2, [sp, #24]
   197d0:	str	r3, [sp, #28]
   197d4:	b	197d8 <__assert_fail@plt+0x8454>
   197d8:	b	197dc <__assert_fail@plt+0x8458>
   197dc:	ldr	r0, [sp, #24]
   197e0:	ldr	r1, [sp, #16]
   197e4:	ldr	r2, [sp, #20]
   197e8:	lsrs	r2, r2, #1
   197ec:	rrx	r1, r1
   197f0:	orr	r0, r2, r0, lsl #31
   197f4:	str	r1, [sp, #16]
   197f8:	str	r0, [sp, #20]
   197fc:	ldr	r0, [sp, #24]
   19800:	ldr	r1, [sp, #28]
   19804:	lsrs	r1, r1, #1
   19808:	rrx	r0, r0
   1980c:	str	r1, [sp, #28]
   19810:	str	r0, [sp, #24]
   19814:	b	19818 <__assert_fail@plt+0x8494>
   19818:	ldrb	r0, [sp, #16]
   1981c:	tst	r0, #1
   19820:	beq	197d8 <__assert_fail@plt+0x8454>
   19824:	b	19828 <__assert_fail@plt+0x84a4>
   19828:	b	19830 <__assert_fail@plt+0x84ac>
   1982c:	b	19838 <__assert_fail@plt+0x84b4>
   19830:	b	19834 <__assert_fail@plt+0x84b0>
   19834:	b	19554 <__assert_fail@plt+0x81d0>
   19838:	ldr	r0, [sp, #40]	; 0x28
   1983c:	ldr	r1, [sp, #44]	; 0x2c
   19840:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19844:	str	r1, [r2, #4]
   19848:	str	r0, [r2]
   1984c:	ldr	r0, [sp, #32]
   19850:	ldr	r1, [sp, #36]	; 0x24
   19854:	str	r1, [fp, #-20]	; 0xffffffec
   19858:	str	r0, [fp, #-24]	; 0xffffffe8
   1985c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19860:	ldr	r1, [fp, #-20]	; 0xffffffec
   19864:	sub	sp, fp, #16
   19868:	pop	{r4, r5, r6, sl, fp, pc}
   1986c:	push	{r4, r5, r6, sl, fp, lr}
   19870:	add	fp, sp, #16
   19874:	sub	sp, sp, #104	; 0x68
   19878:	ldr	r1, [fp, #28]
   1987c:	ldr	ip, [fp, #24]
   19880:	ldr	lr, [fp, #20]
   19884:	ldr	r4, [fp, #16]
   19888:	ldr	r5, [fp, #12]
   1988c:	ldr	r6, [fp, #8]
   19890:	str	r0, [fp, #-28]	; 0xffffffe4
   19894:	str	r3, [fp, #-36]	; 0xffffffdc
   19898:	str	r2, [fp, #-40]	; 0xffffffd8
   1989c:	str	r5, [fp, #-44]	; 0xffffffd4
   198a0:	str	r6, [fp, #-48]	; 0xffffffd0
   198a4:	str	lr, [fp, #-52]	; 0xffffffcc
   198a8:	str	r4, [fp, #-56]	; 0xffffffc8
   198ac:	str	r1, [sp, #60]	; 0x3c
   198b0:	str	ip, [sp, #56]	; 0x38
   198b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   198b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   198bc:	orr	r0, r0, r1
   198c0:	cmp	r0, #0
   198c4:	beq	198d0 <__assert_fail@plt+0x854c>
   198c8:	b	198cc <__assert_fail@plt+0x8548>
   198cc:	b	198f0 <__assert_fail@plt+0x856c>
   198d0:	movw	r0, #16353	; 0x3fe1
   198d4:	movt	r0, #3
   198d8:	movw	r1, #15747	; 0x3d83
   198dc:	movt	r1, #3
   198e0:	movw	r2, #411	; 0x19b
   198e4:	movw	r3, #16361	; 0x3fe9
   198e8:	movt	r3, #3
   198ec:	bl	11384 <__assert_fail@plt>
   198f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   198f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   198f8:	orr	r0, r0, r1
   198fc:	cmp	r0, #0
   19900:	bne	1992c <__assert_fail@plt+0x85a8>
   19904:	b	19908 <__assert_fail@plt+0x8584>
   19908:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1990c:	mov	r1, #0
   19910:	str	r1, [r0, #4]
   19914:	str	r1, [r0]
   19918:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1991c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19920:	str	r1, [fp, #-20]	; 0xffffffec
   19924:	str	r0, [fp, #-24]	; 0xffffffe8
   19928:	b	19c98 <__assert_fail@plt+0x8914>
   1992c:	b	19930 <__assert_fail@plt+0x85ac>
   19930:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19934:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19938:	str	r1, [sp, #44]	; 0x2c
   1993c:	str	r0, [sp, #40]	; 0x28
   19940:	movw	r0, #0
   19944:	str	r0, [sp, #36]	; 0x24
   19948:	ldrb	r0, [sp, #47]	; 0x2f
   1994c:	cmp	r0, #0
   19950:	bne	19984 <__assert_fail@plt+0x8600>
   19954:	b	19958 <__assert_fail@plt+0x85d4>
   19958:	ldr	r0, [sp, #40]	; 0x28
   1995c:	ldr	r1, [sp, #44]	; 0x2c
   19960:	lsl	r1, r1, #8
   19964:	orr	r1, r1, r0, lsr #24
   19968:	lsl	r0, r0, #8
   1996c:	str	r0, [sp, #40]	; 0x28
   19970:	str	r1, [sp, #44]	; 0x2c
   19974:	ldr	r0, [sp, #36]	; 0x24
   19978:	add	r0, r0, #8
   1997c:	str	r0, [sp, #36]	; 0x24
   19980:	b	19948 <__assert_fail@plt+0x85c4>
   19984:	b	19988 <__assert_fail@plt+0x8604>
   19988:	ldr	r0, [sp, #44]	; 0x2c
   1998c:	cmp	r0, #0
   19990:	bmi	199c4 <__assert_fail@plt+0x8640>
   19994:	b	19998 <__assert_fail@plt+0x8614>
   19998:	ldr	r0, [sp, #40]	; 0x28
   1999c:	ldr	r1, [sp, #44]	; 0x2c
   199a0:	lsl	r1, r1, #1
   199a4:	orr	r1, r1, r0, lsr #31
   199a8:	lsl	r0, r0, #1
   199ac:	str	r0, [sp, #40]	; 0x28
   199b0:	str	r1, [sp, #44]	; 0x2c
   199b4:	ldr	r0, [sp, #36]	; 0x24
   199b8:	add	r0, r0, #1
   199bc:	str	r0, [sp, #36]	; 0x24
   199c0:	b	19988 <__assert_fail@plt+0x8604>
   199c4:	ldr	r0, [sp, #36]	; 0x24
   199c8:	str	r0, [sp, #52]	; 0x34
   199cc:	b	199d0 <__assert_fail@plt+0x864c>
   199d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   199d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   199d8:	str	r1, [sp, #28]
   199dc:	str	r0, [sp, #24]
   199e0:	movw	r0, #0
   199e4:	str	r0, [sp, #20]
   199e8:	ldrb	r0, [sp, #31]
   199ec:	cmp	r0, #0
   199f0:	bne	19a24 <__assert_fail@plt+0x86a0>
   199f4:	b	199f8 <__assert_fail@plt+0x8674>
   199f8:	ldr	r0, [sp, #24]
   199fc:	ldr	r1, [sp, #28]
   19a00:	lsl	r1, r1, #8
   19a04:	orr	r1, r1, r0, lsr #24
   19a08:	lsl	r0, r0, #8
   19a0c:	str	r0, [sp, #24]
   19a10:	str	r1, [sp, #28]
   19a14:	ldr	r0, [sp, #20]
   19a18:	add	r0, r0, #8
   19a1c:	str	r0, [sp, #20]
   19a20:	b	199e8 <__assert_fail@plt+0x8664>
   19a24:	b	19a28 <__assert_fail@plt+0x86a4>
   19a28:	ldr	r0, [sp, #28]
   19a2c:	cmp	r0, #0
   19a30:	bmi	19a64 <__assert_fail@plt+0x86e0>
   19a34:	b	19a38 <__assert_fail@plt+0x86b4>
   19a38:	ldr	r0, [sp, #24]
   19a3c:	ldr	r1, [sp, #28]
   19a40:	lsl	r1, r1, #1
   19a44:	orr	r1, r1, r0, lsr #31
   19a48:	lsl	r0, r0, #1
   19a4c:	str	r0, [sp, #24]
   19a50:	str	r1, [sp, #28]
   19a54:	ldr	r0, [sp, #20]
   19a58:	add	r0, r0, #1
   19a5c:	str	r0, [sp, #20]
   19a60:	b	19a28 <__assert_fail@plt+0x86a4>
   19a64:	ldr	r0, [sp, #20]
   19a68:	str	r0, [sp, #48]	; 0x30
   19a6c:	ldr	r0, [sp, #52]	; 0x34
   19a70:	ldr	r1, [sp, #48]	; 0x30
   19a74:	sub	r0, r0, r1
   19a78:	str	r0, [sp, #16]
   19a7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19a80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19a84:	ldr	r2, [sp, #16]
   19a88:	rsb	r3, r2, #32
   19a8c:	lsr	ip, r0, r3
   19a90:	orr	r1, ip, r1, lsl r2
   19a94:	sub	ip, r2, #32
   19a98:	cmp	ip, #0
   19a9c:	lslpl	r1, r0, ip
   19aa0:	lsl	r0, r0, r2
   19aa4:	cmp	ip, #0
   19aa8:	movwpl	r0, #0
   19aac:	ldr	ip, [sp, #56]	; 0x38
   19ab0:	ldr	lr, [sp, #60]	; 0x3c
   19ab4:	rsb	r2, r2, #64	; 0x40
   19ab8:	lsr	r4, lr, r2
   19abc:	cmp	r3, #0
   19ac0:	movwpl	r4, #0
   19ac4:	lsr	ip, ip, r2
   19ac8:	rsb	r2, r2, #32
   19acc:	orr	r2, ip, lr, lsl r2
   19ad0:	cmp	r3, #0
   19ad4:	lsrpl	r2, lr, r3
   19ad8:	orr	r0, r0, r2
   19adc:	orr	r1, r1, r4
   19ae0:	str	r1, [fp, #-52]	; 0xffffffcc
   19ae4:	str	r0, [fp, #-56]	; 0xffffffc8
   19ae8:	ldr	r0, [sp, #56]	; 0x38
   19aec:	ldr	r1, [sp, #60]	; 0x3c
   19af0:	ldr	r2, [sp, #16]
   19af4:	rsb	r3, r2, #32
   19af8:	lsr	r3, r0, r3
   19afc:	orr	r1, r3, r1, lsl r2
   19b00:	sub	r3, r2, #32
   19b04:	cmp	r3, #0
   19b08:	lslpl	r1, r0, r3
   19b0c:	lsl	r0, r0, r2
   19b10:	cmp	r3, #0
   19b14:	movwpl	r0, #0
   19b18:	str	r0, [sp, #56]	; 0x38
   19b1c:	str	r1, [sp, #60]	; 0x3c
   19b20:	movw	r0, #0
   19b24:	str	r0, [sp, #12]
   19b28:	ldr	r0, [sp, #12]
   19b2c:	ldr	r1, [sp, #16]
   19b30:	cmp	r0, r1
   19b34:	bge	19c74 <__assert_fail@plt+0x88f0>
   19b38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19b40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19b44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19b48:	subs	r0, r2, r0
   19b4c:	sbcs	r1, r3, r1
   19b50:	bcc	19ba0 <__assert_fail@plt+0x881c>
   19b54:	b	19b58 <__assert_fail@plt+0x87d4>
   19b58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19b60:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19b64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19b68:	eor	r1, r1, r3
   19b6c:	eor	r0, r0, r2
   19b70:	orr	r0, r0, r1
   19b74:	cmp	r0, #0
   19b78:	bne	19c24 <__assert_fail@plt+0x88a0>
   19b7c:	b	19b80 <__assert_fail@plt+0x87fc>
   19b80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19b84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19b88:	ldr	r2, [sp, #56]	; 0x38
   19b8c:	ldr	r3, [sp, #60]	; 0x3c
   19b90:	subs	r0, r0, r2
   19b94:	sbcs	r1, r1, r3
   19b98:	bcc	19c24 <__assert_fail@plt+0x88a0>
   19b9c:	b	19ba0 <__assert_fail@plt+0x881c>
   19ba0:	b	19ba4 <__assert_fail@plt+0x8820>
   19ba4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19ba8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19bac:	ldr	r2, [sp, #56]	; 0x38
   19bb0:	ldr	r3, [sp, #60]	; 0x3c
   19bb4:	subs	r0, r0, r2
   19bb8:	sbcs	r1, r1, r3
   19bbc:	mov	r2, #0
   19bc0:	mov	r3, r2
   19bc4:	movwcc	r3, #1
   19bc8:	str	r2, [sp, #4]
   19bcc:	str	r3, [sp]
   19bd0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19bd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19bd8:	ldr	ip, [sp, #56]	; 0x38
   19bdc:	ldr	lr, [sp, #60]	; 0x3c
   19be0:	subs	r2, r2, ip
   19be4:	sbc	r3, r3, lr
   19be8:	str	r2, [fp, #-48]	; 0xffffffd0
   19bec:	str	r3, [fp, #-44]	; 0xffffffd4
   19bf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19bf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19bf8:	ldr	ip, [fp, #-56]	; 0xffffffc8
   19bfc:	ldr	lr, [fp, #-52]	; 0xffffffcc
   19c00:	subs	r2, r2, ip
   19c04:	sbc	r3, r3, lr
   19c08:	ldr	ip, [sp]
   19c0c:	ldr	lr, [sp, #4]
   19c10:	subs	r2, r2, ip
   19c14:	sbc	r3, r3, lr
   19c18:	str	r2, [fp, #-40]	; 0xffffffd8
   19c1c:	str	r3, [fp, #-36]	; 0xffffffdc
   19c20:	b	19c24 <__assert_fail@plt+0x88a0>
   19c24:	b	19c28 <__assert_fail@plt+0x88a4>
   19c28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19c2c:	ldr	r1, [sp, #56]	; 0x38
   19c30:	ldr	r2, [sp, #60]	; 0x3c
   19c34:	lsrs	r2, r2, #1
   19c38:	rrx	r1, r1
   19c3c:	orr	r0, r2, r0, lsl #31
   19c40:	str	r1, [sp, #56]	; 0x38
   19c44:	str	r0, [sp, #60]	; 0x3c
   19c48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19c4c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19c50:	lsrs	r1, r1, #1
   19c54:	rrx	r0, r0
   19c58:	str	r1, [fp, #-52]	; 0xffffffcc
   19c5c:	str	r0, [fp, #-56]	; 0xffffffc8
   19c60:	b	19c64 <__assert_fail@plt+0x88e0>
   19c64:	ldr	r0, [sp, #12]
   19c68:	add	r0, r0, #1
   19c6c:	str	r0, [sp, #12]
   19c70:	b	19b28 <__assert_fail@plt+0x87a4>
   19c74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19c78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19c7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19c80:	str	r1, [r2, #4]
   19c84:	str	r0, [r2]
   19c88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19c8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c90:	str	r1, [fp, #-20]	; 0xffffffec
   19c94:	str	r0, [fp, #-24]	; 0xffffffe8
   19c98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ca0:	sub	sp, fp, #16
   19ca4:	pop	{r4, r5, r6, sl, fp, pc}
   19ca8:	sub	sp, sp, #4
   19cac:	str	r0, [sp]
   19cb0:	ldr	r0, [sp]
   19cb4:	movw	r1, #0
   19cb8:	str	r1, [r0]
   19cbc:	ldr	r0, [sp]
   19cc0:	str	r1, [r0, #4]
   19cc4:	ldr	r0, [sp]
   19cc8:	str	r1, [r0, #8]
   19ccc:	add	sp, sp, #4
   19cd0:	bx	lr
   19cd4:	push	{fp, lr}
   19cd8:	mov	fp, sp
   19cdc:	sub	sp, sp, #32
   19ce0:	str	r0, [fp, #-4]
   19ce4:	str	r1, [fp, #-8]
   19ce8:	movw	r0, #37268	; 0x9194
   19cec:	movt	r0, #4
   19cf0:	ldrb	r0, [r0]
   19cf4:	tst	r0, #1
   19cf8:	beq	19d14 <__assert_fail@plt+0x8990>
   19cfc:	movw	r0, #37248	; 0x9180
   19d00:	movt	r0, #4
   19d04:	ldr	r0, [r0]
   19d08:	movw	r1, #16453	; 0x4045
   19d0c:	movt	r1, #3
   19d10:	bl	11288 <fprintf@plt>
   19d14:	b	19d18 <__assert_fail@plt+0x8994>
   19d18:	add	r0, sp, #12
   19d1c:	bl	1d2ac <__assert_fail@plt+0xbf28>
   19d20:	ldr	r0, [fp, #-4]
   19d24:	movw	r1, #0
   19d28:	bl	24ab4 <__assert_fail@plt+0x13730>
   19d2c:	str	r0, [sp, #8]
   19d30:	ldr	r0, [fp, #-4]
   19d34:	ldr	r1, [fp, #-4]
   19d38:	ldr	r2, [sp, #8]
   19d3c:	bl	1ffa4 <__assert_fail@plt+0xec20>
   19d40:	ldr	r0, [sp, #8]
   19d44:	cmp	r0, #0
   19d48:	beq	19d6c <__assert_fail@plt+0x89e8>
   19d4c:	ldr	r0, [fp, #-8]
   19d50:	movw	r1, #2
   19d54:	bl	1a7ac <__assert_fail@plt+0x9428>
   19d58:	ldr	r0, [sp, #8]
   19d5c:	mvn	r1, #0
   19d60:	add	r0, r0, r1
   19d64:	str	r0, [sp, #8]
   19d68:	b	19d40 <__assert_fail@plt+0x89bc>
   19d6c:	movw	r0, #3
   19d70:	str	r0, [sp, #8]
   19d74:	movw	r0, #1
   19d78:	str	r0, [sp, #4]
   19d7c:	ldr	r0, [sp, #4]
   19d80:	cmp	r0, #668	; 0x29c
   19d84:	bhi	19e14 <__assert_fail@plt+0x8a90>
   19d88:	ldr	r0, [fp, #-4]
   19d8c:	ldr	r1, [sp, #8]
   19d90:	bl	20998 <__assert_fail@plt+0xf614>
   19d94:	cmp	r0, #0
   19d98:	bne	19de8 <__assert_fail@plt+0x8a64>
   19d9c:	ldr	r0, [sp, #4]
   19da0:	add	r1, r0, #1
   19da4:	str	r1, [sp, #4]
   19da8:	movw	r1, #27456	; 0x6b40
   19dac:	movt	r1, #3
   19db0:	add	r0, r1, r0
   19db4:	ldrb	r0, [r0]
   19db8:	ldr	r1, [sp, #8]
   19dbc:	add	r0, r1, r0
   19dc0:	str	r0, [sp, #8]
   19dc4:	ldr	r0, [fp, #-4]
   19dc8:	ldr	r1, [sp, #8]
   19dcc:	ldr	r2, [sp, #8]
   19dd0:	mul	r1, r1, r2
   19dd4:	bl	1e708 <__assert_fail@plt+0xd384>
   19dd8:	cmp	r0, #0
   19ddc:	bge	19de4 <__assert_fail@plt+0x8a60>
   19de0:	b	19e14 <__assert_fail@plt+0x8a90>
   19de4:	b	19e10 <__assert_fail@plt+0x8a8c>
   19de8:	ldr	r0, [fp, #-4]
   19dec:	ldr	r1, [fp, #-4]
   19df0:	ldr	r2, [sp, #8]
   19df4:	bl	2073c <__assert_fail@plt+0xf3b8>
   19df8:	ldr	r1, [fp, #-8]
   19dfc:	ldr	r2, [sp, #8]
   19e00:	str	r0, [sp]
   19e04:	mov	r0, r1
   19e08:	mov	r1, r2
   19e0c:	bl	1a7ac <__assert_fail@plt+0x9428>
   19e10:	b	19d7c <__assert_fail@plt+0x89f8>
   19e14:	add	r0, sp, #12
   19e18:	bl	1d384 <__assert_fail@plt+0xc000>
   19e1c:	mov	sp, fp
   19e20:	pop	{fp, pc}
   19e24:	push	{fp, lr}
   19e28:	mov	fp, sp
   19e2c:	sub	sp, sp, #128	; 0x80
   19e30:	str	r0, [fp, #-8]
   19e34:	ldr	r0, [fp, #-8]
   19e38:	movw	r1, #1
   19e3c:	bl	1e708 <__assert_fail@plt+0xd384>
   19e40:	cmp	r0, #0
   19e44:	bgt	19e58 <__assert_fail@plt+0x8ad4>
   19e48:	movw	r0, #0
   19e4c:	and	r0, r0, #1
   19e50:	strb	r0, [fp, #-1]
   19e54:	b	1a160 <__assert_fail@plt+0x8ddc>
   19e58:	ldr	r1, [pc, #784]	; 1a170 <__assert_fail@plt+0x8dec>
   19e5c:	ldr	r0, [fp, #-8]
   19e60:	bl	1e708 <__assert_fail@plt+0xd384>
   19e64:	cmp	r0, #0
   19e68:	bge	19e7c <__assert_fail@plt+0x8af8>
   19e6c:	movw	r0, #1
   19e70:	and	r0, r0, #1
   19e74:	strb	r0, [fp, #-1]
   19e78:	b	1a160 <__assert_fail@plt+0x8ddc>
   19e7c:	sub	r0, fp, #60	; 0x3c
   19e80:	sub	r3, fp, #48	; 0x30
   19e84:	sub	r2, fp, #36	; 0x24
   19e88:	sub	r1, fp, #24
   19e8c:	movw	ip, #53932	; 0xd2ac
   19e90:	movt	ip, #1
   19e94:	str	r0, [sp, #40]	; 0x28
   19e98:	mov	r0, ip
   19e9c:	ldr	ip, [sp, #40]	; 0x28
   19ea0:	str	ip, [sp]
   19ea4:	movw	lr, #0
   19ea8:	str	lr, [sp, #4]
   19eac:	bl	1a7ec <__assert_fail@plt+0x9468>
   19eb0:	sub	r0, fp, #48	; 0x30
   19eb4:	ldr	r1, [fp, #-8]
   19eb8:	movw	r2, #1
   19ebc:	bl	1eb78 <__assert_fail@plt+0xd7f4>
   19ec0:	sub	r0, fp, #48	; 0x30
   19ec4:	movw	r1, #0
   19ec8:	bl	24ab4 <__assert_fail@plt+0x13730>
   19ecc:	sub	r1, fp, #48	; 0x30
   19ed0:	sub	r2, fp, #24
   19ed4:	str	r0, [sp, #52]	; 0x34
   19ed8:	ldr	r0, [sp, #52]	; 0x34
   19edc:	str	r0, [sp, #36]	; 0x24
   19ee0:	mov	r0, r2
   19ee4:	ldr	r2, [sp, #36]	; 0x24
   19ee8:	bl	1ffd8 <__assert_fail@plt+0xec54>
   19eec:	sub	r0, fp, #36	; 0x24
   19ef0:	movw	r1, #2
   19ef4:	bl	1d4a4 <__assert_fail@plt+0xc120>
   19ef8:	sub	r0, fp, #24
   19efc:	sub	r3, fp, #60	; 0x3c
   19f00:	sub	r2, fp, #36	; 0x24
   19f04:	sub	r1, fp, #48	; 0x30
   19f08:	ldr	ip, [fp, #-8]
   19f0c:	ldr	lr, [sp, #52]	; 0x34
   19f10:	str	r0, [sp, #32]
   19f14:	mov	r0, ip
   19f18:	ldr	ip, [sp, #32]
   19f1c:	str	ip, [sp]
   19f20:	str	lr, [sp, #4]
   19f24:	bl	1a868 <__assert_fail@plt+0x94e4>
   19f28:	tst	r0, #1
   19f2c:	bne	19f3c <__assert_fail@plt+0x8bb8>
   19f30:	movw	r0, #0
   19f34:	strb	r0, [fp, #-9]
   19f38:	b	1a120 <__assert_fail@plt+0x8d9c>
   19f3c:	movw	r0, #37144	; 0x9118
   19f40:	movt	r0, #4
   19f44:	ldrb	r0, [r0]
   19f48:	tst	r0, #1
   19f4c:	beq	19f68 <__assert_fail@plt+0x8be4>
   19f50:	sub	r1, fp, #48	; 0x30
   19f54:	sub	r0, fp, #60	; 0x3c
   19f58:	bl	1d61c <__assert_fail@plt+0xc298>
   19f5c:	sub	r0, fp, #60	; 0x3c
   19f60:	add	r1, sp, #56	; 0x38
   19f64:	bl	1213c <__assert_fail@plt+0xdb8>
   19f68:	movw	r0, #0
   19f6c:	str	r0, [sp, #48]	; 0x30
   19f70:	ldr	r0, [sp, #48]	; 0x30
   19f74:	cmp	r0, #668	; 0x29c
   19f78:	bcs	1a0dc <__assert_fail@plt+0x8d58>
   19f7c:	movw	r0, #37144	; 0x9118
   19f80:	movt	r0, #4
   19f84:	ldrb	r0, [r0]
   19f88:	tst	r0, #1
   19f8c:	beq	1a038 <__assert_fail@plt+0x8cb4>
   19f90:	movw	r0, #1
   19f94:	strb	r0, [fp, #-9]
   19f98:	movw	r0, #0
   19f9c:	str	r0, [sp, #44]	; 0x2c
   19fa0:	ldr	r0, [sp, #44]	; 0x2c
   19fa4:	ldr	r1, [sp, #64]	; 0x40
   19fa8:	cmp	r0, r1
   19fac:	movw	r0, #0
   19fb0:	str	r0, [sp, #28]
   19fb4:	bcs	19fc0 <__assert_fail@plt+0x8c3c>
   19fb8:	ldrb	r0, [fp, #-9]
   19fbc:	str	r0, [sp, #28]
   19fc0:	ldr	r0, [sp, #28]
   19fc4:	tst	r0, #1
   19fc8:	beq	1a034 <__assert_fail@plt+0x8cb0>
   19fcc:	sub	r1, fp, #48	; 0x30
   19fd0:	sub	r0, fp, #60	; 0x3c
   19fd4:	ldr	r2, [sp, #56]	; 0x38
   19fd8:	ldr	r3, [sp, #44]	; 0x2c
   19fdc:	movw	ip, #12
   19fe0:	mul	r3, r3, ip
   19fe4:	add	r2, r2, r3
   19fe8:	bl	20408 <__assert_fail@plt+0xf084>
   19fec:	sub	r0, fp, #60	; 0x3c
   19ff0:	sub	r1, fp, #36	; 0x24
   19ff4:	ldr	r3, [fp, #-8]
   19ff8:	str	r0, [sp, #24]
   19ffc:	ldr	r2, [sp, #24]
   1a000:	bl	2199c <__assert_fail@plt+0x10618>
   1a004:	sub	r0, fp, #60	; 0x3c
   1a008:	movw	r1, #1
   1a00c:	bl	1e708 <__assert_fail@plt+0xd384>
   1a010:	cmp	r0, #0
   1a014:	movw	r0, #0
   1a018:	movne	r0, #1
   1a01c:	and	r0, r0, #1
   1a020:	strb	r0, [fp, #-9]
   1a024:	ldr	r0, [sp, #44]	; 0x2c
   1a028:	add	r0, r0, #1
   1a02c:	str	r0, [sp, #44]	; 0x2c
   1a030:	b	19fa0 <__assert_fail@plt+0x8c1c>
   1a034:	b	1a050 <__assert_fail@plt+0x8ccc>
   1a038:	ldr	r0, [sp, #48]	; 0x30
   1a03c:	cmp	r0, #24
   1a040:	movw	r0, #0
   1a044:	moveq	r0, #1
   1a048:	and	r0, r0, #1
   1a04c:	strb	r0, [fp, #-9]
   1a050:	ldrb	r0, [fp, #-9]
   1a054:	tst	r0, #1
   1a058:	beq	1a060 <__assert_fail@plt+0x8cdc>
   1a05c:	b	1a100 <__assert_fail@plt+0x8d7c>
   1a060:	sub	r0, fp, #36	; 0x24
   1a064:	ldr	r1, [sp, #48]	; 0x30
   1a068:	movw	r2, #27456	; 0x6b40
   1a06c:	movt	r2, #3
   1a070:	add	r1, r2, r1
   1a074:	ldrb	r2, [r1]
   1a078:	str	r0, [sp, #20]
   1a07c:	ldr	r1, [sp, #20]
   1a080:	bl	1ea90 <__assert_fail@plt+0xd70c>
   1a084:	sub	r0, fp, #24
   1a088:	sub	r3, fp, #60	; 0x3c
   1a08c:	sub	r2, fp, #36	; 0x24
   1a090:	sub	r1, fp, #48	; 0x30
   1a094:	ldr	ip, [fp, #-8]
   1a098:	ldr	lr, [sp, #52]	; 0x34
   1a09c:	str	r0, [sp, #16]
   1a0a0:	mov	r0, ip
   1a0a4:	ldr	ip, [sp, #16]
   1a0a8:	str	ip, [sp]
   1a0ac:	str	lr, [sp, #4]
   1a0b0:	bl	1a868 <__assert_fail@plt+0x94e4>
   1a0b4:	tst	r0, #1
   1a0b8:	bne	1a0c8 <__assert_fail@plt+0x8d44>
   1a0bc:	movw	r0, #0
   1a0c0:	strb	r0, [fp, #-9]
   1a0c4:	b	1a100 <__assert_fail@plt+0x8d7c>
   1a0c8:	b	1a0cc <__assert_fail@plt+0x8d48>
   1a0cc:	ldr	r0, [sp, #48]	; 0x30
   1a0d0:	add	r0, r0, #1
   1a0d4:	str	r0, [sp, #48]	; 0x30
   1a0d8:	b	19f70 <__assert_fail@plt+0x8bec>
   1a0dc:	movw	r0, #15803	; 0x3dbb
   1a0e0:	movt	r0, #3
   1a0e4:	bl	11264 <gettext@plt>
   1a0e8:	movw	r1, #0
   1a0ec:	str	r0, [sp, #12]
   1a0f0:	mov	r0, r1
   1a0f4:	ldr	r2, [sp, #12]
   1a0f8:	bl	111ec <error@plt>
   1a0fc:	bl	1136c <abort@plt>
   1a100:	movw	r0, #37144	; 0x9118
   1a104:	movt	r0, #4
   1a108:	ldrb	r0, [r0]
   1a10c:	tst	r0, #1
   1a110:	beq	1a11c <__assert_fail@plt+0x8d98>
   1a114:	add	r0, sp, #56	; 0x38
   1a118:	bl	121fc <__assert_fail@plt+0xe78>
   1a11c:	b	1a120 <__assert_fail@plt+0x8d9c>
   1a120:	sub	r0, fp, #60	; 0x3c
   1a124:	sub	r3, fp, #48	; 0x30
   1a128:	sub	r2, fp, #36	; 0x24
   1a12c:	sub	r1, fp, #24
   1a130:	movw	ip, #54148	; 0xd384
   1a134:	movt	ip, #1
   1a138:	str	r0, [sp, #8]
   1a13c:	mov	r0, ip
   1a140:	ldr	ip, [sp, #8]
   1a144:	str	ip, [sp]
   1a148:	movw	lr, #0
   1a14c:	str	lr, [sp, #4]
   1a150:	bl	1a7ec <__assert_fail@plt+0x9468>
   1a154:	ldrb	r0, [fp, #-9]
   1a158:	and	r0, r0, #1
   1a15c:	strb	r0, [fp, #-1]
   1a160:	ldrb	r0, [fp, #-1]
   1a164:	and	r0, r0, #1
   1a168:	mov	sp, fp
   1a16c:	pop	{fp, pc}
   1a170:	cmneq	sp, r9, ror sp
   1a174:	push	{fp, lr}
   1a178:	mov	fp, sp
   1a17c:	sub	sp, sp, #32
   1a180:	str	r0, [fp, #-4]
   1a184:	str	r1, [fp, #-8]
   1a188:	ldr	r0, [fp, #-4]
   1a18c:	ldr	r0, [r0, #8]
   1a190:	str	r0, [fp, #-12]
   1a194:	ldr	r0, [fp, #-4]
   1a198:	ldr	r0, [r0]
   1a19c:	str	r0, [sp, #16]
   1a1a0:	ldr	r0, [fp, #-4]
   1a1a4:	ldr	r0, [r0, #4]
   1a1a8:	str	r0, [sp, #12]
   1a1ac:	ldr	r0, [fp, #-12]
   1a1b0:	sub	r0, r0, #1
   1a1b4:	str	r0, [sp, #8]
   1a1b8:	ldr	r0, [sp, #8]
   1a1bc:	cmp	r0, #0
   1a1c0:	blt	1a204 <__assert_fail@plt+0x8e80>
   1a1c4:	ldr	r0, [sp, #16]
   1a1c8:	ldr	r1, [sp, #8]
   1a1cc:	movw	r2, #12
   1a1d0:	mul	r1, r1, r2
   1a1d4:	add	r0, r0, r1
   1a1d8:	ldr	r1, [fp, #-8]
   1a1dc:	bl	1e75c <__assert_fail@plt+0xd3d8>
   1a1e0:	cmp	r0, #0
   1a1e4:	bgt	1a1ec <__assert_fail@plt+0x8e68>
   1a1e8:	b	1a204 <__assert_fail@plt+0x8e80>
   1a1ec:	b	1a1f0 <__assert_fail@plt+0x8e6c>
   1a1f0:	ldr	r0, [sp, #8]
   1a1f4:	mvn	r1, #0
   1a1f8:	add	r0, r0, r1
   1a1fc:	str	r0, [sp, #8]
   1a200:	b	1a1b8 <__assert_fail@plt+0x8e34>
   1a204:	ldr	r0, [sp, #8]
   1a208:	cmp	r0, #0
   1a20c:	blt	1a234 <__assert_fail@plt+0x8eb0>
   1a210:	ldr	r0, [sp, #16]
   1a214:	ldr	r1, [sp, #8]
   1a218:	movw	r2, #12
   1a21c:	mul	r1, r1, r2
   1a220:	add	r0, r0, r1
   1a224:	ldr	r1, [fp, #-8]
   1a228:	bl	1e75c <__assert_fail@plt+0xd3d8>
   1a22c:	cmp	r0, #0
   1a230:	beq	1a34c <__assert_fail@plt+0x8fc8>
   1a234:	ldr	r0, [sp, #16]
   1a238:	ldr	r1, [fp, #-12]
   1a23c:	add	r1, r1, r1, lsl #1
   1a240:	mov	r2, #12
   1a244:	add	r1, r2, r1, lsl #2
   1a248:	bl	2c1fc <__assert_fail@plt+0x1ae78>
   1a24c:	str	r0, [sp, #16]
   1a250:	ldr	r0, [sp, #12]
   1a254:	ldr	r1, [fp, #-12]
   1a258:	add	r1, r1, #1
   1a25c:	lsl	r1, r1, #2
   1a260:	bl	2c1fc <__assert_fail@plt+0x1ae78>
   1a264:	str	r0, [sp, #12]
   1a268:	ldr	r0, [sp, #16]
   1a26c:	ldr	r1, [fp, #-12]
   1a270:	movw	r2, #12
   1a274:	mul	r1, r1, r2
   1a278:	add	r0, r0, r1
   1a27c:	bl	1d2ac <__assert_fail@plt+0xbf28>
   1a280:	ldr	r0, [fp, #-12]
   1a284:	sub	r0, r0, #1
   1a288:	str	r0, [sp, #4]
   1a28c:	ldr	r0, [sp, #4]
   1a290:	ldr	r1, [sp, #8]
   1a294:	cmp	r0, r1
   1a298:	ble	1a2ec <__assert_fail@plt+0x8f68>
   1a29c:	ldr	r0, [sp, #16]
   1a2a0:	ldr	r1, [sp, #4]
   1a2a4:	add	r1, r1, r1, lsl #1
   1a2a8:	add	r0, r0, r1, lsl #2
   1a2ac:	add	r1, r0, #12
   1a2b0:	str	r0, [sp]
   1a2b4:	mov	r0, r1
   1a2b8:	ldr	r1, [sp]
   1a2bc:	bl	1d61c <__assert_fail@plt+0xc298>
   1a2c0:	ldr	r0, [sp, #12]
   1a2c4:	ldr	r1, [sp, #4]
   1a2c8:	ldr	r2, [r0, r1, lsl #2]
   1a2cc:	add	r1, r1, #1
   1a2d0:	add	r0, r0, r1, lsl #2
   1a2d4:	str	r2, [r0]
   1a2d8:	ldr	r0, [sp, #4]
   1a2dc:	mvn	r1, #0
   1a2e0:	add	r0, r0, r1
   1a2e4:	str	r0, [sp, #4]
   1a2e8:	b	1a28c <__assert_fail@plt+0x8f08>
   1a2ec:	ldr	r0, [sp, #16]
   1a2f0:	ldr	r1, [sp, #8]
   1a2f4:	add	r1, r1, r1, lsl #1
   1a2f8:	add	r0, r0, r1, lsl #2
   1a2fc:	add	r0, r0, #12
   1a300:	ldr	r1, [fp, #-8]
   1a304:	bl	1d61c <__assert_fail@plt+0xc298>
   1a308:	ldr	r0, [sp, #12]
   1a30c:	ldr	r1, [sp, #8]
   1a310:	add	r1, r1, #1
   1a314:	add	r0, r0, r1, lsl #2
   1a318:	movw	r1, #1
   1a31c:	str	r1, [r0]
   1a320:	ldr	r0, [sp, #16]
   1a324:	ldr	r1, [fp, #-4]
   1a328:	str	r0, [r1]
   1a32c:	ldr	r0, [sp, #12]
   1a330:	ldr	r1, [fp, #-4]
   1a334:	str	r0, [r1, #4]
   1a338:	ldr	r0, [fp, #-12]
   1a33c:	add	r0, r0, #1
   1a340:	ldr	r1, [fp, #-4]
   1a344:	str	r0, [r1, #8]
   1a348:	b	1a364 <__assert_fail@plt+0x8fe0>
   1a34c:	ldr	r0, [sp, #12]
   1a350:	ldr	r1, [sp, #8]
   1a354:	add	r0, r0, r1, lsl #2
   1a358:	ldr	r1, [r0]
   1a35c:	add	r1, r1, #1
   1a360:	str	r1, [r0]
   1a364:	mov	sp, fp
   1a368:	pop	{fp, pc}
   1a36c:	push	{r4, r5, fp, lr}
   1a370:	add	fp, sp, #8
   1a374:	sub	sp, sp, #200	; 0xc8
   1a378:	str	r0, [fp, #-12]
   1a37c:	str	r1, [fp, #-16]
   1a380:	str	r2, [fp, #-20]	; 0xffffffec
   1a384:	movw	r0, #37268	; 0x9194
   1a388:	movt	r0, #4
   1a38c:	ldrb	r0, [r0]
   1a390:	tst	r0, #1
   1a394:	beq	1a3b4 <__assert_fail@plt+0x9030>
   1a398:	movw	r0, #37248	; 0x9180
   1a39c:	movt	r0, #4
   1a3a0:	ldr	r0, [r0]
   1a3a4:	ldr	r2, [fp, #-16]
   1a3a8:	movw	r1, #16471	; 0x4057
   1a3ac:	movt	r1, #3
   1a3b0:	bl	11288 <fprintf@plt>
   1a3b4:	b	1a3b8 <__assert_fail@plt+0x9034>
   1a3b8:	movw	r0, #53932	; 0xd2ac
   1a3bc:	movt	r0, #1
   1a3c0:	sub	r1, fp, #80	; 0x50
   1a3c4:	sub	r2, fp, #92	; 0x5c
   1a3c8:	mov	r3, #0
   1a3cc:	str	r3, [sp, #84]	; 0x54
   1a3d0:	bl	1a7ec <__assert_fail@plt+0x9468>
   1a3d4:	sub	r0, fp, #56	; 0x38
   1a3d8:	mov	r1, #2
   1a3dc:	str	r1, [sp, #80]	; 0x50
   1a3e0:	bl	1d6e4 <__assert_fail@plt+0xc360>
   1a3e4:	sub	r0, fp, #32
   1a3e8:	ldr	r1, [sp, #80]	; 0x50
   1a3ec:	bl	1d6e4 <__assert_fail@plt+0xc360>
   1a3f0:	sub	r0, fp, #44	; 0x2c
   1a3f4:	ldr	r1, [sp, #80]	; 0x50
   1a3f8:	bl	1d6e4 <__assert_fail@plt+0xc360>
   1a3fc:	sub	r0, fp, #68	; 0x44
   1a400:	mov	r1, #1
   1a404:	str	r1, [sp, #76]	; 0x4c
   1a408:	bl	1d714 <__assert_fail@plt+0xc390>
   1a40c:	ldr	r0, [sp, #84]	; 0x54
   1a410:	str	r0, [sp, #108]	; 0x6c
   1a414:	ldr	r1, [sp, #76]	; 0x4c
   1a418:	str	r1, [sp, #104]	; 0x68
   1a41c:	str	r0, [sp, #100]	; 0x64
   1a420:	str	r1, [sp, #96]	; 0x60
   1a424:	ldr	r0, [fp, #-12]
   1a428:	movw	r1, #1
   1a42c:	bl	1e708 <__assert_fail@plt+0xd384>
   1a430:	cmp	r0, #0
   1a434:	beq	1a748 <__assert_fail@plt+0x93c4>
   1a438:	b	1a43c <__assert_fail@plt+0x90b8>
   1a43c:	b	1a440 <__assert_fail@plt+0x90bc>
   1a440:	sub	r0, fp, #80	; 0x50
   1a444:	sub	r1, fp, #32
   1a448:	str	r0, [sp, #72]	; 0x48
   1a44c:	str	r1, [sp, #68]	; 0x44
   1a450:	ldr	r2, [sp, #68]	; 0x44
   1a454:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   1a458:	ldr	r2, [fp, #-12]
   1a45c:	ldr	r0, [sp, #68]	; 0x44
   1a460:	ldr	r1, [sp, #72]	; 0x48
   1a464:	bl	1fcbc <__assert_fail@plt+0xe938>
   1a468:	ldr	r2, [fp, #-16]
   1a46c:	ldr	r0, [sp, #68]	; 0x44
   1a470:	ldr	r1, [sp, #68]	; 0x44
   1a474:	bl	1ea90 <__assert_fail@plt+0xd70c>
   1a478:	sub	r1, fp, #44	; 0x2c
   1a47c:	ldr	r0, [sp, #72]	; 0x48
   1a480:	ldr	r2, [sp, #68]	; 0x44
   1a484:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   1a488:	sub	r0, fp, #92	; 0x5c
   1a48c:	sub	r1, fp, #68	; 0x44
   1a490:	str	r0, [sp, #64]	; 0x40
   1a494:	str	r1, [sp, #60]	; 0x3c
   1a498:	ldr	r2, [sp, #72]	; 0x48
   1a49c:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   1a4a0:	ldr	r2, [fp, #-12]
   1a4a4:	ldr	r0, [sp, #60]	; 0x3c
   1a4a8:	ldr	r1, [sp, #64]	; 0x40
   1a4ac:	bl	1fcbc <__assert_fail@plt+0xe938>
   1a4b0:	ldr	r0, [sp, #104]	; 0x68
   1a4b4:	and	r0, r0, #31
   1a4b8:	teq	r0, #1
   1a4bc:	bne	1a4f8 <__assert_fail@plt+0x9174>
   1a4c0:	b	1a4c4 <__assert_fail@plt+0x9140>
   1a4c4:	sub	r1, fp, #68	; 0x44
   1a4c8:	sub	r0, fp, #80	; 0x50
   1a4cc:	ldr	r2, [fp, #-12]
   1a4d0:	bl	20a68 <__assert_fail@plt+0xf6e4>
   1a4d4:	sub	r0, fp, #80	; 0x50
   1a4d8:	movw	r1, #1
   1a4dc:	bl	1e708 <__assert_fail@plt+0xd384>
   1a4e0:	cmp	r0, #0
   1a4e4:	beq	1a4ec <__assert_fail@plt+0x9168>
   1a4e8:	b	1a5f4 <__assert_fail@plt+0x9270>
   1a4ec:	sub	r1, fp, #32
   1a4f0:	sub	r0, fp, #56	; 0x38
   1a4f4:	bl	1d61c <__assert_fail@plt+0xc298>
   1a4f8:	b	1a4fc <__assert_fail@plt+0x9178>
   1a4fc:	ldr	r0, [sp, #104]	; 0x68
   1a500:	ldr	r1, [sp, #108]	; 0x6c
   1a504:	subs	r0, r0, #1
   1a508:	sbc	r1, r1, #0
   1a50c:	str	r0, [sp, #104]	; 0x68
   1a510:	str	r1, [sp, #108]	; 0x6c
   1a514:	orr	r0, r0, r1
   1a518:	cmp	r0, #0
   1a51c:	bne	1a440 <__assert_fail@plt+0x90bc>
   1a520:	b	1a524 <__assert_fail@plt+0x91a0>
   1a524:	sub	r0, fp, #44	; 0x2c
   1a528:	sub	r1, fp, #32
   1a52c:	bl	1d61c <__assert_fail@plt+0xc298>
   1a530:	ldr	r0, [sp, #96]	; 0x60
   1a534:	ldr	r1, [sp, #100]	; 0x64
   1a538:	str	r1, [sp, #108]	; 0x6c
   1a53c:	str	r0, [sp, #104]	; 0x68
   1a540:	ldr	r0, [sp, #96]	; 0x60
   1a544:	ldr	r1, [sp, #100]	; 0x64
   1a548:	lsl	r1, r1, #1
   1a54c:	orr	r1, r1, r0, lsr #31
   1a550:	lsl	r0, r0, #1
   1a554:	str	r0, [sp, #96]	; 0x60
   1a558:	str	r1, [sp, #100]	; 0x64
   1a55c:	mov	r0, #0
   1a560:	str	r0, [sp, #92]	; 0x5c
   1a564:	str	r0, [sp, #88]	; 0x58
   1a568:	ldr	r0, [sp, #88]	; 0x58
   1a56c:	ldr	r1, [sp, #92]	; 0x5c
   1a570:	ldr	r2, [sp, #104]	; 0x68
   1a574:	ldr	r3, [sp, #108]	; 0x6c
   1a578:	subs	r0, r0, r2
   1a57c:	sbcs	r1, r1, r3
   1a580:	bcs	1a5e4 <__assert_fail@plt+0x9260>
   1a584:	b	1a588 <__assert_fail@plt+0x9204>
   1a588:	sub	r0, fp, #32
   1a58c:	sub	r1, fp, #80	; 0x50
   1a590:	str	r0, [sp, #56]	; 0x38
   1a594:	mov	r0, r1
   1a598:	ldr	r1, [sp, #56]	; 0x38
   1a59c:	ldr	r2, [sp, #56]	; 0x38
   1a5a0:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   1a5a4:	sub	r1, fp, #80	; 0x50
   1a5a8:	sub	r0, fp, #32
   1a5ac:	ldr	r2, [fp, #-12]
   1a5b0:	bl	1fcbc <__assert_fail@plt+0xe938>
   1a5b4:	sub	r0, fp, #32
   1a5b8:	ldr	r2, [fp, #-16]
   1a5bc:	str	r0, [sp, #52]	; 0x34
   1a5c0:	ldr	r1, [sp, #52]	; 0x34
   1a5c4:	bl	1ea90 <__assert_fail@plt+0xd70c>
   1a5c8:	ldr	r0, [sp, #88]	; 0x58
   1a5cc:	ldr	r1, [sp, #92]	; 0x5c
   1a5d0:	adds	r0, r0, #1
   1a5d4:	adc	r1, r1, #0
   1a5d8:	str	r0, [sp, #88]	; 0x58
   1a5dc:	str	r1, [sp, #92]	; 0x5c
   1a5e0:	b	1a568 <__assert_fail@plt+0x91e4>
   1a5e4:	sub	r1, fp, #32
   1a5e8:	sub	r0, fp, #56	; 0x38
   1a5ec:	bl	1d61c <__assert_fail@plt+0xc298>
   1a5f0:	b	1a43c <__assert_fail@plt+0x90b8>
   1a5f4:	b	1a5f8 <__assert_fail@plt+0x9274>
   1a5f8:	sub	r0, fp, #56	; 0x38
   1a5fc:	sub	r1, fp, #80	; 0x50
   1a600:	str	r0, [sp, #48]	; 0x30
   1a604:	mov	r0, r1
   1a608:	ldr	r1, [sp, #48]	; 0x30
   1a60c:	ldr	r2, [sp, #48]	; 0x30
   1a610:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   1a614:	sub	r1, fp, #80	; 0x50
   1a618:	sub	r0, fp, #56	; 0x38
   1a61c:	ldr	r2, [fp, #-12]
   1a620:	bl	1fcbc <__assert_fail@plt+0xe938>
   1a624:	sub	r0, fp, #56	; 0x38
   1a628:	ldr	r2, [fp, #-16]
   1a62c:	str	r0, [sp, #44]	; 0x2c
   1a630:	ldr	r1, [sp, #44]	; 0x2c
   1a634:	bl	1ea90 <__assert_fail@plt+0xd70c>
   1a638:	sub	r2, fp, #56	; 0x38
   1a63c:	sub	r1, fp, #44	; 0x2c
   1a640:	sub	r0, fp, #80	; 0x50
   1a644:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   1a648:	sub	r0, fp, #80	; 0x50
   1a64c:	ldr	r2, [fp, #-12]
   1a650:	str	r0, [sp, #40]	; 0x28
   1a654:	ldr	r1, [sp, #40]	; 0x28
   1a658:	bl	20a68 <__assert_fail@plt+0xf6e4>
   1a65c:	sub	r0, fp, #80	; 0x50
   1a660:	movw	r1, #1
   1a664:	bl	1e708 <__assert_fail@plt+0xd384>
   1a668:	cmp	r0, #0
   1a66c:	beq	1a5f8 <__assert_fail@plt+0x9274>
   1a670:	sub	r2, fp, #80	; 0x50
   1a674:	ldr	r0, [fp, #-12]
   1a678:	ldr	r1, [fp, #-12]
   1a67c:	bl	20408 <__assert_fail@plt+0xf084>
   1a680:	sub	r0, fp, #80	; 0x50
   1a684:	bl	19e24 <__assert_fail@plt+0x8aa0>
   1a688:	tst	r0, #1
   1a68c:	bne	1a6dc <__assert_fail@plt+0x9358>
   1a690:	b	1a694 <__assert_fail@plt+0x9310>
   1a694:	movw	r0, #37268	; 0x9194
   1a698:	movt	r0, #4
   1a69c:	ldrb	r0, [r0]
   1a6a0:	tst	r0, #1
   1a6a4:	beq	1a6c0 <__assert_fail@plt+0x933c>
   1a6a8:	movw	r0, #37248	; 0x9180
   1a6ac:	movt	r0, #4
   1a6b0:	ldr	r0, [r0]
   1a6b4:	movw	r1, #16492	; 0x406c
   1a6b8:	movt	r1, #3
   1a6bc:	bl	11288 <fprintf@plt>
   1a6c0:	b	1a6c4 <__assert_fail@plt+0x9340>
   1a6c4:	sub	r0, fp, #80	; 0x50
   1a6c8:	ldr	r1, [fp, #-16]
   1a6cc:	add	r1, r1, #1
   1a6d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a6d4:	bl	1a36c <__assert_fail@plt+0x8fe8>
   1a6d8:	b	1a6e8 <__assert_fail@plt+0x9364>
   1a6dc:	sub	r1, fp, #80	; 0x50
   1a6e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a6e4:	bl	1a174 <__assert_fail@plt+0x8df0>
   1a6e8:	ldr	r0, [fp, #-12]
   1a6ec:	bl	19e24 <__assert_fail@plt+0x8aa0>
   1a6f0:	tst	r0, #1
   1a6f4:	beq	1a708 <__assert_fail@plt+0x9384>
   1a6f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a6fc:	ldr	r1, [fp, #-12]
   1a700:	bl	1a174 <__assert_fail@plt+0x8df0>
   1a704:	b	1a748 <__assert_fail@plt+0x93c4>
   1a708:	sub	r0, fp, #32
   1a70c:	ldr	r2, [fp, #-12]
   1a710:	str	r0, [sp, #36]	; 0x24
   1a714:	ldr	r1, [sp, #36]	; 0x24
   1a718:	bl	1fcbc <__assert_fail@plt+0xe938>
   1a71c:	sub	r0, fp, #44	; 0x2c
   1a720:	ldr	r2, [fp, #-12]
   1a724:	str	r0, [sp, #32]
   1a728:	ldr	r1, [sp, #32]
   1a72c:	bl	1fcbc <__assert_fail@plt+0xe938>
   1a730:	sub	r0, fp, #56	; 0x38
   1a734:	ldr	r2, [fp, #-12]
   1a738:	str	r0, [sp, #28]
   1a73c:	ldr	r1, [sp, #28]
   1a740:	bl	1fcbc <__assert_fail@plt+0xe938>
   1a744:	b	1a424 <__assert_fail@plt+0x90a0>
   1a748:	sub	r0, fp, #56	; 0x38
   1a74c:	sub	r1, fp, #32
   1a750:	sub	r2, fp, #44	; 0x2c
   1a754:	sub	r3, fp, #80	; 0x50
   1a758:	sub	ip, fp, #92	; 0x5c
   1a75c:	sub	lr, fp, #68	; 0x44
   1a760:	movw	r4, #54148	; 0xd384
   1a764:	movt	r4, #1
   1a768:	str	r0, [sp, #24]
   1a76c:	mov	r0, r4
   1a770:	str	r1, [sp, #20]
   1a774:	mov	r1, lr
   1a778:	str	r2, [sp, #16]
   1a77c:	mov	r2, ip
   1a780:	ldr	ip, [sp, #16]
   1a784:	str	ip, [sp]
   1a788:	ldr	lr, [sp, #20]
   1a78c:	str	lr, [sp, #4]
   1a790:	ldr	r4, [sp, #24]
   1a794:	str	r4, [sp, #8]
   1a798:	movw	r5, #0
   1a79c:	str	r5, [sp, #12]
   1a7a0:	bl	1a7ec <__assert_fail@plt+0x9468>
   1a7a4:	sub	sp, fp, #8
   1a7a8:	pop	{r4, r5, fp, pc}
   1a7ac:	push	{fp, lr}
   1a7b0:	mov	fp, sp
   1a7b4:	sub	sp, sp, #24
   1a7b8:	add	r2, sp, #4
   1a7bc:	str	r0, [fp, #-4]
   1a7c0:	str	r1, [fp, #-8]
   1a7c4:	ldr	r1, [fp, #-8]
   1a7c8:	mov	r0, r2
   1a7cc:	bl	1d714 <__assert_fail@plt+0xc390>
   1a7d0:	add	r1, sp, #4
   1a7d4:	ldr	r0, [fp, #-4]
   1a7d8:	bl	1a174 <__assert_fail@plt+0x8df0>
   1a7dc:	add	r0, sp, #4
   1a7e0:	bl	1d384 <__assert_fail@plt+0xc000>
   1a7e4:	mov	sp, fp
   1a7e8:	pop	{fp, pc}
   1a7ec:	sub	sp, sp, #12
   1a7f0:	push	{fp, lr}
   1a7f4:	mov	fp, sp
   1a7f8:	sub	sp, sp, #20
   1a7fc:	str	r3, [fp, #16]
   1a800:	str	r2, [fp, #12]
   1a804:	str	r1, [fp, #8]
   1a808:	str	r0, [fp, #-4]
   1a80c:	sub	r0, fp, #8
   1a810:	add	r1, fp, #8
   1a814:	str	r1, [r0]
   1a818:	ldr	r0, [fp, #-8]
   1a81c:	add	r1, r0, #4
   1a820:	str	r1, [fp, #-8]
   1a824:	ldr	r0, [r0]
   1a828:	str	r0, [sp, #8]
   1a82c:	movw	r1, #0
   1a830:	cmp	r0, r1
   1a834:	beq	1a854 <__assert_fail@plt+0x94d0>
   1a838:	ldr	r0, [fp, #-4]
   1a83c:	ldr	r1, [sp, #8]
   1a840:	str	r0, [sp, #4]
   1a844:	mov	r0, r1
   1a848:	ldr	r1, [sp, #4]
   1a84c:	blx	r1
   1a850:	b	1a818 <__assert_fail@plt+0x9494>
   1a854:	sub	r0, fp, #8
   1a858:	mov	sp, fp
   1a85c:	pop	{fp, lr}
   1a860:	add	sp, sp, #12
   1a864:	bx	lr
   1a868:	push	{fp, lr}
   1a86c:	mov	fp, sp
   1a870:	sub	sp, sp, #32
   1a874:	ldr	ip, [fp, #12]
   1a878:	ldr	lr, [fp, #8]
   1a87c:	str	r0, [fp, #-8]
   1a880:	str	r1, [fp, #-12]
   1a884:	str	r2, [sp, #16]
   1a888:	str	r3, [sp, #12]
   1a88c:	ldr	r0, [sp, #12]
   1a890:	ldr	r1, [sp, #16]
   1a894:	ldr	r2, [fp, #8]
   1a898:	ldr	r3, [fp, #-8]
   1a89c:	str	ip, [sp, #4]
   1a8a0:	str	lr, [sp]
   1a8a4:	bl	2199c <__assert_fail@plt+0x10618>
   1a8a8:	ldr	r0, [sp, #12]
   1a8ac:	movw	r1, #1
   1a8b0:	bl	1e708 <__assert_fail@plt+0xd384>
   1a8b4:	cmp	r0, #0
   1a8b8:	beq	1a8d0 <__assert_fail@plt+0x954c>
   1a8bc:	ldr	r0, [sp, #12]
   1a8c0:	ldr	r1, [fp, #-12]
   1a8c4:	bl	1e75c <__assert_fail@plt+0xd3d8>
   1a8c8:	cmp	r0, #0
   1a8cc:	bne	1a8e0 <__assert_fail@plt+0x955c>
   1a8d0:	movw	r0, #1
   1a8d4:	and	r0, r0, #1
   1a8d8:	strb	r0, [fp, #-1]
   1a8dc:	b	1a974 <__assert_fail@plt+0x95f0>
   1a8e0:	movw	r0, #1
   1a8e4:	str	r0, [sp, #8]
   1a8e8:	ldr	r0, [sp, #8]
   1a8ec:	ldr	r1, [fp, #12]
   1a8f0:	cmp	r0, r1
   1a8f4:	bcs	1a968 <__assert_fail@plt+0x95e4>
   1a8f8:	ldr	r0, [sp, #12]
   1a8fc:	ldr	r1, [sp, #12]
   1a900:	ldr	r3, [fp, #-8]
   1a904:	movw	r2, #2
   1a908:	bl	222b4 <__assert_fail@plt+0x10f30>
   1a90c:	ldr	r0, [sp, #12]
   1a910:	ldr	r1, [fp, #-12]
   1a914:	bl	1e75c <__assert_fail@plt+0xd3d8>
   1a918:	cmp	r0, #0
   1a91c:	bne	1a930 <__assert_fail@plt+0x95ac>
   1a920:	movw	r0, #1
   1a924:	and	r0, r0, #1
   1a928:	strb	r0, [fp, #-1]
   1a92c:	b	1a974 <__assert_fail@plt+0x95f0>
   1a930:	ldr	r0, [sp, #12]
   1a934:	movw	r1, #1
   1a938:	bl	1e708 <__assert_fail@plt+0xd384>
   1a93c:	cmp	r0, #0
   1a940:	bne	1a954 <__assert_fail@plt+0x95d0>
   1a944:	movw	r0, #0
   1a948:	and	r0, r0, #1
   1a94c:	strb	r0, [fp, #-1]
   1a950:	b	1a974 <__assert_fail@plt+0x95f0>
   1a954:	b	1a958 <__assert_fail@plt+0x95d4>
   1a958:	ldr	r0, [sp, #8]
   1a95c:	add	r0, r0, #1
   1a960:	str	r0, [sp, #8]
   1a964:	b	1a8e8 <__assert_fail@plt+0x9564>
   1a968:	movw	r0, #0
   1a96c:	and	r0, r0, #1
   1a970:	strb	r0, [fp, #-1]
   1a974:	ldrb	r0, [fp, #-1]
   1a978:	and	r0, r0, #1
   1a97c:	mov	sp, fp
   1a980:	pop	{fp, pc}
   1a984:	sub	sp, sp, #4
   1a988:	str	r0, [sp]
   1a98c:	ldr	r0, [sp]
   1a990:	movw	r1, #37280	; 0x91a0
   1a994:	movt	r1, #4
   1a998:	str	r0, [r1]
   1a99c:	add	sp, sp, #4
   1a9a0:	bx	lr
   1a9a4:	sub	sp, sp, #4
   1a9a8:	and	r0, r0, #1
   1a9ac:	strb	r0, [sp, #3]
   1a9b0:	ldrb	r0, [sp, #3]
   1a9b4:	and	r0, r0, #1
   1a9b8:	movw	r1, #37284	; 0x91a4
   1a9bc:	movt	r1, #4
   1a9c0:	strb	r0, [r1]
   1a9c4:	add	sp, sp, #4
   1a9c8:	bx	lr
   1a9cc:	push	{fp, lr}
   1a9d0:	mov	fp, sp
   1a9d4:	sub	sp, sp, #24
   1a9d8:	movw	r0, #37260	; 0x918c
   1a9dc:	movt	r0, #4
   1a9e0:	ldr	r0, [r0]
   1a9e4:	bl	2f274 <__assert_fail@plt+0x1def0>
   1a9e8:	cmp	r0, #0
   1a9ec:	beq	1aabc <__assert_fail@plt+0x9738>
   1a9f0:	movw	r0, #37284	; 0x91a4
   1a9f4:	movt	r0, #4
   1a9f8:	ldrb	r0, [r0]
   1a9fc:	tst	r0, #1
   1aa00:	beq	1aa14 <__assert_fail@plt+0x9690>
   1aa04:	bl	11294 <__errno_location@plt>
   1aa08:	ldr	r0, [r0]
   1aa0c:	cmp	r0, #32
   1aa10:	beq	1aabc <__assert_fail@plt+0x9738>
   1aa14:	movw	r0, #15580	; 0x3cdc
   1aa18:	movt	r0, #3
   1aa1c:	bl	11264 <gettext@plt>
   1aa20:	str	r0, [fp, #-4]
   1aa24:	movw	r0, #37280	; 0x91a0
   1aa28:	movt	r0, #4
   1aa2c:	ldr	r0, [r0]
   1aa30:	movw	r1, #0
   1aa34:	cmp	r0, r1
   1aa38:	beq	1aa90 <__assert_fail@plt+0x970c>
   1aa3c:	bl	11294 <__errno_location@plt>
   1aa40:	ldr	r1, [r0]
   1aa44:	movw	r0, #37280	; 0x91a0
   1aa48:	movt	r0, #4
   1aa4c:	ldr	r0, [r0]
   1aa50:	str	r1, [fp, #-8]
   1aa54:	bl	2ab18 <__assert_fail@plt+0x19794>
   1aa58:	ldr	r1, [fp, #-4]
   1aa5c:	movw	r2, #0
   1aa60:	str	r0, [sp, #12]
   1aa64:	mov	r0, r2
   1aa68:	ldr	r2, [fp, #-8]
   1aa6c:	str	r1, [sp, #8]
   1aa70:	mov	r1, r2
   1aa74:	movw	r2, #28949	; 0x7115
   1aa78:	movt	r2, #3
   1aa7c:	ldr	r3, [sp, #12]
   1aa80:	ldr	ip, [sp, #8]
   1aa84:	str	ip, [sp]
   1aa88:	bl	111ec <error@plt>
   1aa8c:	b	1aaac <__assert_fail@plt+0x9728>
   1aa90:	bl	11294 <__errno_location@plt>
   1aa94:	ldr	r1, [r0]
   1aa98:	ldr	r3, [fp, #-4]
   1aa9c:	movw	r0, #0
   1aaa0:	movw	r2, #28953	; 0x7119
   1aaa4:	movt	r2, #3
   1aaa8:	bl	111ec <error@plt>
   1aaac:	movw	r0, #37152	; 0x9120
   1aab0:	movt	r0, #4
   1aab4:	ldr	r0, [r0]
   1aab8:	bl	11120 <_exit@plt>
   1aabc:	movw	r0, #37248	; 0x9180
   1aac0:	movt	r0, #4
   1aac4:	ldr	r0, [r0]
   1aac8:	bl	2f274 <__assert_fail@plt+0x1def0>
   1aacc:	cmp	r0, #0
   1aad0:	beq	1aae4 <__assert_fail@plt+0x9760>
   1aad4:	movw	r0, #37152	; 0x9120
   1aad8:	movt	r0, #4
   1aadc:	ldr	r0, [r0]
   1aae0:	bl	11120 <_exit@plt>
   1aae4:	mov	sp, fp
   1aae8:	pop	{fp, pc}
   1aaec:	push	{fp, lr}
   1aaf0:	mov	fp, sp
   1aaf4:	sub	sp, sp, #16
   1aaf8:	str	r0, [fp, #-4]
   1aafc:	bl	11294 <__errno_location@plt>
   1ab00:	ldr	r0, [r0]
   1ab04:	str	r0, [sp, #8]
   1ab08:	ldr	r0, [fp, #-4]
   1ab0c:	bl	11114 <free@plt>
   1ab10:	ldr	r0, [sp, #8]
   1ab14:	str	r0, [sp, #4]
   1ab18:	bl	11294 <__errno_location@plt>
   1ab1c:	ldr	r1, [sp, #4]
   1ab20:	str	r1, [r0]
   1ab24:	mov	sp, fp
   1ab28:	pop	{fp, pc}
   1ab2c:	push	{fp, lr}
   1ab30:	mov	fp, sp
   1ab34:	sub	sp, sp, #24
   1ab38:	str	r0, [fp, #-4]
   1ab3c:	str	r1, [fp, #-8]
   1ab40:	str	r2, [sp, #12]
   1ab44:	movw	r0, #0
   1ab48:	str	r0, [sp, #8]
   1ab4c:	ldr	r0, [fp, #-8]
   1ab50:	str	r0, [sp, #4]
   1ab54:	ldr	r0, [sp, #12]
   1ab58:	cmp	r0, #0
   1ab5c:	bls	1abd4 <__assert_fail@plt+0x9850>
   1ab60:	ldr	r0, [fp, #-4]
   1ab64:	ldr	r1, [sp, #4]
   1ab68:	ldr	r2, [sp, #12]
   1ab6c:	bl	2b350 <__assert_fail@plt+0x19fcc>
   1ab70:	str	r0, [sp]
   1ab74:	ldr	r0, [sp]
   1ab78:	cmn	r0, #1
   1ab7c:	bne	1ab84 <__assert_fail@plt+0x9800>
   1ab80:	b	1abd4 <__assert_fail@plt+0x9850>
   1ab84:	ldr	r0, [sp]
   1ab88:	cmp	r0, #0
   1ab8c:	bne	1aba0 <__assert_fail@plt+0x981c>
   1ab90:	bl	11294 <__errno_location@plt>
   1ab94:	movw	r1, #28
   1ab98:	str	r1, [r0]
   1ab9c:	b	1abd4 <__assert_fail@plt+0x9850>
   1aba0:	ldr	r0, [sp]
   1aba4:	ldr	r1, [sp, #8]
   1aba8:	add	r0, r1, r0
   1abac:	str	r0, [sp, #8]
   1abb0:	ldr	r0, [sp]
   1abb4:	ldr	r1, [sp, #4]
   1abb8:	add	r0, r1, r0
   1abbc:	str	r0, [sp, #4]
   1abc0:	ldr	r0, [sp]
   1abc4:	ldr	r1, [sp, #12]
   1abc8:	sub	r0, r1, r0
   1abcc:	str	r0, [sp, #12]
   1abd0:	b	1ab54 <__assert_fail@plt+0x97d0>
   1abd4:	ldr	r0, [sp, #8]
   1abd8:	mov	sp, fp
   1abdc:	pop	{fp, pc}
   1abe0:	push	{fp, lr}
   1abe4:	mov	fp, sp
   1abe8:	sub	sp, sp, #16
   1abec:	str	r0, [sp, #8]
   1abf0:	str	r1, [sp, #12]
   1abf4:	str	r2, [sp, #4]
   1abf8:	ldr	r0, [sp, #4]
   1abfc:	add	r0, r0, #20
   1ac00:	str	r0, [sp]
   1ac04:	ldr	r0, [sp]
   1ac08:	mov	r1, #0
   1ac0c:	strb	r1, [r0]
   1ac10:	mov	r0, #1
   1ac14:	cmp	r0, #0
   1ac18:	bne	1aca0 <__assert_fail@plt+0x991c>
   1ac1c:	b	1ac20 <__assert_fail@plt+0x989c>
   1ac20:	b	1ac24 <__assert_fail@plt+0x98a0>
   1ac24:	ldr	r0, [sp, #8]
   1ac28:	ldr	r1, [sp, #12]
   1ac2c:	mov	r2, #10
   1ac30:	mov	r3, #0
   1ac34:	bl	337f4 <__assert_fail@plt+0x22470>
   1ac38:	rsb	r2, r2, #48	; 0x30
   1ac3c:	ldr	r3, [sp]
   1ac40:	mvn	ip, #0
   1ac44:	add	lr, r3, ip
   1ac48:	str	lr, [sp]
   1ac4c:	add	r3, r3, ip
   1ac50:	strb	r2, [r3]
   1ac54:	ldr	r0, [sp, #8]
   1ac58:	ldr	r1, [sp, #12]
   1ac5c:	mov	r2, #10
   1ac60:	mov	r3, #0
   1ac64:	bl	337f4 <__assert_fail@plt+0x22470>
   1ac68:	str	r1, [sp, #12]
   1ac6c:	str	r0, [sp, #8]
   1ac70:	orr	r0, r0, r1
   1ac74:	cmp	r0, #0
   1ac78:	bne	1ac24 <__assert_fail@plt+0x98a0>
   1ac7c:	b	1ac80 <__assert_fail@plt+0x98fc>
   1ac80:	ldr	r0, [sp]
   1ac84:	mvn	r1, #0
   1ac88:	add	r2, r0, r1
   1ac8c:	str	r2, [sp]
   1ac90:	add	r0, r0, r1
   1ac94:	movw	r1, #45	; 0x2d
   1ac98:	strb	r1, [r0]
   1ac9c:	b	1ad04 <__assert_fail@plt+0x9980>
   1aca0:	b	1aca4 <__assert_fail@plt+0x9920>
   1aca4:	ldr	r0, [sp, #8]
   1aca8:	ldr	r1, [sp, #12]
   1acac:	mov	r2, #10
   1acb0:	mov	r3, #0
   1acb4:	bl	337f4 <__assert_fail@plt+0x22470>
   1acb8:	orr	r2, r2, #48	; 0x30
   1acbc:	ldr	r3, [sp]
   1acc0:	mvn	ip, #0
   1acc4:	add	lr, r3, ip
   1acc8:	str	lr, [sp]
   1accc:	add	r3, r3, ip
   1acd0:	strb	r2, [r3]
   1acd4:	ldr	r0, [sp, #8]
   1acd8:	ldr	r1, [sp, #12]
   1acdc:	mov	r2, #10
   1ace0:	mov	r3, #0
   1ace4:	bl	337f4 <__assert_fail@plt+0x22470>
   1ace8:	str	r1, [sp, #12]
   1acec:	str	r0, [sp, #8]
   1acf0:	orr	r0, r0, r1
   1acf4:	cmp	r0, #0
   1acf8:	bne	1aca4 <__assert_fail@plt+0x9920>
   1acfc:	b	1ad00 <__assert_fail@plt+0x997c>
   1ad00:	b	1ad04 <__assert_fail@plt+0x9980>
   1ad04:	ldr	r0, [sp]
   1ad08:	mov	sp, fp
   1ad0c:	pop	{fp, pc}
   1ad10:	sub	sp, sp, #12
   1ad14:	str	r0, [sp, #8]
   1ad18:	str	r1, [sp, #4]
   1ad1c:	str	r2, [sp]
   1ad20:	ldr	r0, [sp, #8]
   1ad24:	movw	r1, #0
   1ad28:	cmp	r0, r1
   1ad2c:	beq	1ad44 <__assert_fail@plt+0x99c0>
   1ad30:	movw	r0, #37156	; 0x9124
   1ad34:	movt	r0, #4
   1ad38:	ldr	r0, [r0]
   1ad3c:	ldr	r1, [sp, #8]
   1ad40:	str	r0, [r1]
   1ad44:	ldr	r0, [sp, #4]
   1ad48:	movw	r1, #0
   1ad4c:	cmp	r0, r1
   1ad50:	beq	1ad68 <__assert_fail@plt+0x99e4>
   1ad54:	movw	r0, #37160	; 0x9128
   1ad58:	movt	r0, #4
   1ad5c:	ldr	r0, [r0]
   1ad60:	ldr	r1, [sp, #4]
   1ad64:	str	r0, [r1]
   1ad68:	ldr	r0, [sp]
   1ad6c:	movw	r1, #0
   1ad70:	cmp	r0, r1
   1ad74:	beq	1ad8c <__assert_fail@plt+0x9a08>
   1ad78:	movw	r0, #37164	; 0x912c
   1ad7c:	movt	r0, #4
   1ad80:	ldr	r0, [r0]
   1ad84:	ldr	r1, [sp]
   1ad88:	str	r0, [r1]
   1ad8c:	add	sp, sp, #12
   1ad90:	bx	lr
   1ad94:	sub	sp, sp, #12
   1ad98:	str	r0, [sp, #8]
   1ad9c:	str	r1, [sp, #4]
   1ada0:	str	r2, [sp]
   1ada4:	ldr	r0, [sp, #8]
   1ada8:	movw	r1, #0
   1adac:	cmp	r0, r1
   1adb0:	bne	1adc0 <__assert_fail@plt+0x9a3c>
   1adb4:	movw	r0, #44592	; 0xae30
   1adb8:	movt	r0, #1
   1adbc:	str	r0, [sp, #8]
   1adc0:	ldr	r0, [sp, #4]
   1adc4:	movw	r1, #0
   1adc8:	cmp	r0, r1
   1adcc:	bne	1addc <__assert_fail@plt+0x9a58>
   1add0:	movw	r0, #44708	; 0xaea4
   1add4:	movt	r0, #1
   1add8:	str	r0, [sp, #4]
   1addc:	ldr	r0, [sp]
   1ade0:	movw	r1, #0
   1ade4:	cmp	r0, r1
   1ade8:	bne	1adf8 <__assert_fail@plt+0x9a74>
   1adec:	movw	r0, #44788	; 0xaef4
   1adf0:	movt	r0, #1
   1adf4:	str	r0, [sp]
   1adf8:	ldr	r0, [sp, #8]
   1adfc:	movw	r1, #37156	; 0x9124
   1ae00:	movt	r1, #4
   1ae04:	str	r0, [r1]
   1ae08:	ldr	r0, [sp, #4]
   1ae0c:	movw	r1, #37160	; 0x9128
   1ae10:	movt	r1, #4
   1ae14:	str	r0, [r1]
   1ae18:	ldr	r0, [sp]
   1ae1c:	movw	r1, #37164	; 0x912c
   1ae20:	movt	r1, #4
   1ae24:	str	r0, [r1]
   1ae28:	add	sp, sp, #12
   1ae2c:	bx	lr
   1ae30:	push	{fp, lr}
   1ae34:	mov	fp, sp
   1ae38:	sub	sp, sp, #8
   1ae3c:	str	r0, [sp, #4]
   1ae40:	ldr	r0, [sp, #4]
   1ae44:	cmp	r0, #0
   1ae48:	bls	1ae50 <__assert_fail@plt+0x9acc>
   1ae4c:	b	1ae70 <__assert_fail@plt+0x9aec>
   1ae50:	movw	r0, #32532	; 0x7f14
   1ae54:	movt	r0, #3
   1ae58:	movw	r1, #28968	; 0x7128
   1ae5c:	movt	r1, #3
   1ae60:	movw	r2, #291	; 0x123
   1ae64:	movw	r3, #31662	; 0x7bae
   1ae68:	movt	r3, #3
   1ae6c:	bl	11384 <__assert_fail@plt>
   1ae70:	ldr	r0, [sp, #4]
   1ae74:	bl	2f0a8 <__assert_fail@plt+0x1dd24>
   1ae78:	str	r0, [sp]
   1ae7c:	ldr	r0, [sp]
   1ae80:	movw	r1, #0
   1ae84:	cmp	r0, r1
   1ae88:	bne	1ae98 <__assert_fail@plt+0x9b14>
   1ae8c:	movw	r0, #31694	; 0x7bce
   1ae90:	movt	r0, #3
   1ae94:	bl	21dd8 <__assert_fail@plt+0x10a54>
   1ae98:	ldr	r0, [sp]
   1ae9c:	mov	sp, fp
   1aea0:	pop	{fp, pc}
   1aea4:	push	{fp, lr}
   1aea8:	mov	fp, sp
   1aeac:	sub	sp, sp, #16
   1aeb0:	str	r0, [fp, #-4]
   1aeb4:	str	r1, [sp, #8]
   1aeb8:	str	r2, [sp, #4]
   1aebc:	ldr	r0, [fp, #-4]
   1aec0:	ldr	r1, [sp, #4]
   1aec4:	bl	2f118 <__assert_fail@plt+0x1dd94>
   1aec8:	str	r0, [sp]
   1aecc:	ldr	r0, [sp]
   1aed0:	movw	r1, #0
   1aed4:	cmp	r0, r1
   1aed8:	bne	1aee8 <__assert_fail@plt+0x9b64>
   1aedc:	movw	r0, #31739	; 0x7bfb
   1aee0:	movt	r0, #3
   1aee4:	bl	21dd8 <__assert_fail@plt+0x10a54>
   1aee8:	ldr	r0, [sp]
   1aeec:	mov	sp, fp
   1aef0:	pop	{fp, pc}
   1aef4:	push	{fp, lr}
   1aef8:	mov	fp, sp
   1aefc:	sub	sp, sp, #8
   1af00:	str	r0, [sp, #4]
   1af04:	str	r1, [sp]
   1af08:	ldr	r0, [sp, #4]
   1af0c:	bl	1aaec <__assert_fail@plt+0x9768>
   1af10:	mov	sp, fp
   1af14:	pop	{fp, pc}
   1af18:	sub	sp, sp, #16
   1af1c:	str	r0, [sp, #12]
   1af20:	str	r1, [sp, #8]
   1af24:	str	r2, [sp, #4]
   1af28:	movw	r0, #0
   1af2c:	str	r0, [sp]
   1af30:	ldr	r0, [sp]
   1af34:	ldr	r1, [sp, #4]
   1af38:	cmp	r0, r1
   1af3c:	bge	1af68 <__assert_fail@plt+0x9be4>
   1af40:	ldr	r0, [sp, #8]
   1af44:	ldr	r1, [sp]
   1af48:	ldr	r0, [r0, r1, lsl #2]
   1af4c:	ldr	r2, [sp, #12]
   1af50:	add	r1, r2, r1, lsl #2
   1af54:	str	r0, [r1]
   1af58:	ldr	r0, [sp]
   1af5c:	add	r0, r0, #1
   1af60:	str	r0, [sp]
   1af64:	b	1af30 <__assert_fail@plt+0x9bac>
   1af68:	add	sp, sp, #16
   1af6c:	bx	lr
   1af70:	sub	sp, sp, #12
   1af74:	str	r0, [sp, #8]
   1af78:	str	r1, [sp, #4]
   1af7c:	str	r2, [sp]
   1af80:	ldr	r0, [sp]
   1af84:	mvn	r1, #0
   1af88:	add	r0, r0, r1
   1af8c:	str	r0, [sp]
   1af90:	cmp	r0, #0
   1af94:	blt	1afb4 <__assert_fail@plt+0x9c30>
   1af98:	ldr	r0, [sp, #4]
   1af9c:	ldr	r1, [sp]
   1afa0:	ldr	r0, [r0, r1, lsl #2]
   1afa4:	ldr	r2, [sp, #8]
   1afa8:	add	r1, r2, r1, lsl #2
   1afac:	str	r0, [r1]
   1afb0:	b	1af80 <__assert_fail@plt+0x9bfc>
   1afb4:	add	sp, sp, #12
   1afb8:	bx	lr
   1afbc:	sub	sp, sp, #16
   1afc0:	str	r0, [sp, #8]
   1afc4:	str	r1, [sp, #4]
   1afc8:	str	r2, [sp]
   1afcc:	ldr	r0, [sp]
   1afd0:	mvn	r1, #0
   1afd4:	add	r0, r0, r1
   1afd8:	str	r0, [sp]
   1afdc:	cmp	r0, #0
   1afe0:	blt	1b040 <__assert_fail@plt+0x9cbc>
   1afe4:	ldr	r0, [sp, #8]
   1afe8:	ldr	r1, [sp]
   1afec:	ldr	r0, [r0, r1, lsl #2]
   1aff0:	ldr	r2, [sp, #4]
   1aff4:	add	r1, r2, r1, lsl #2
   1aff8:	ldr	r1, [r1]
   1affc:	cmp	r0, r1
   1b000:	beq	1b03c <__assert_fail@plt+0x9cb8>
   1b004:	ldr	r0, [sp, #8]
   1b008:	ldr	r1, [sp]
   1b00c:	ldr	r0, [r0, r1, lsl #2]
   1b010:	ldr	r2, [sp, #4]
   1b014:	add	r1, r2, r1, lsl #2
   1b018:	ldr	r1, [r1]
   1b01c:	cmp	r0, r1
   1b020:	movw	r0, #0
   1b024:	movhi	r0, #1
   1b028:	tst	r0, #1
   1b02c:	movw	r0, #1
   1b030:	mvneq	r0, #0
   1b034:	str	r0, [sp, #12]
   1b038:	b	1b048 <__assert_fail@plt+0x9cc4>
   1b03c:	b	1afcc <__assert_fail@plt+0x9c48>
   1b040:	movw	r0, #0
   1b044:	str	r0, [sp, #12]
   1b048:	ldr	r0, [sp, #12]
   1b04c:	add	sp, sp, #16
   1b050:	bx	lr
   1b054:	push	{fp, lr}
   1b058:	mov	fp, sp
   1b05c:	sub	sp, sp, #8
   1b060:	str	r0, [sp, #4]
   1b064:	str	r1, [sp]
   1b068:	ldr	r0, [sp, #4]
   1b06c:	ldr	r1, [sp]
   1b070:	bl	1b08c <__assert_fail@plt+0x9d08>
   1b074:	cmp	r0, #0
   1b078:	movw	r0, #0
   1b07c:	moveq	r0, #1
   1b080:	and	r0, r0, #1
   1b084:	mov	sp, fp
   1b088:	pop	{fp, pc}
   1b08c:	sub	sp, sp, #12
   1b090:	str	r0, [sp, #8]
   1b094:	str	r1, [sp, #4]
   1b098:	ldr	r0, [sp, #4]
   1b09c:	cmp	r0, #0
   1b0a0:	movw	r0, #0
   1b0a4:	str	r0, [sp]
   1b0a8:	ble	1b0d0 <__assert_fail@plt+0x9d4c>
   1b0ac:	ldr	r0, [sp, #8]
   1b0b0:	ldr	r1, [sp, #4]
   1b0b4:	sub	r1, r1, #1
   1b0b8:	add	r0, r0, r1, lsl #2
   1b0bc:	ldr	r0, [r0]
   1b0c0:	cmp	r0, #0
   1b0c4:	movw	r0, #0
   1b0c8:	moveq	r0, #1
   1b0cc:	str	r0, [sp]
   1b0d0:	ldr	r0, [sp]
   1b0d4:	tst	r0, #1
   1b0d8:	beq	1b0f0 <__assert_fail@plt+0x9d6c>
   1b0dc:	ldr	r0, [sp, #4]
   1b0e0:	mvn	r1, #0
   1b0e4:	add	r0, r0, r1
   1b0e8:	str	r0, [sp, #4]
   1b0ec:	b	1b098 <__assert_fail@plt+0x9d14>
   1b0f0:	ldr	r0, [sp, #4]
   1b0f4:	add	sp, sp, #12
   1b0f8:	bx	lr
   1b0fc:	sub	sp, sp, #8
   1b100:	str	r0, [sp, #4]
   1b104:	str	r1, [sp]
   1b108:	ldr	r0, [sp]
   1b10c:	mvn	r1, #0
   1b110:	add	r0, r0, r1
   1b114:	str	r0, [sp]
   1b118:	cmp	r0, #0
   1b11c:	blt	1b138 <__assert_fail@plt+0x9db4>
   1b120:	ldr	r0, [sp, #4]
   1b124:	ldr	r1, [sp]
   1b128:	add	r0, r0, r1, lsl #2
   1b12c:	movw	r1, #0
   1b130:	str	r1, [r0]
   1b134:	b	1b108 <__assert_fail@plt+0x9d84>
   1b138:	add	sp, sp, #8
   1b13c:	bx	lr
   1b140:	push	{fp, lr}
   1b144:	mov	fp, sp
   1b148:	sub	sp, sp, #24
   1b14c:	str	r0, [fp, #-4]
   1b150:	str	r1, [fp, #-8]
   1b154:	str	r2, [sp, #12]
   1b158:	str	r3, [sp, #8]
   1b15c:	ldr	r0, [sp, #12]
   1b160:	cmp	r0, #0
   1b164:	ble	1b16c <__assert_fail@plt+0x9de8>
   1b168:	b	1b18c <__assert_fail@plt+0x9e08>
   1b16c:	movw	r0, #32349	; 0x7e5d
   1b170:	movt	r0, #3
   1b174:	movw	r1, #28968	; 0x7128
   1b178:	movt	r1, #3
   1b17c:	movw	r2, #442	; 0x1ba
   1b180:	movw	r3, #28985	; 0x7139
   1b184:	movt	r3, #3
   1b188:	bl	11384 <__assert_fail@plt>
   1b18c:	movw	r0, #0
   1b190:	str	r0, [sp, #4]
   1b194:	ldr	r0, [fp, #-8]
   1b198:	ldr	r1, [sp, #4]
   1b19c:	ldr	r0, [r0, r1, lsl #2]
   1b1a0:	ldr	r1, [sp, #8]
   1b1a4:	add	r0, r0, r1
   1b1a8:	str	r0, [sp]
   1b1ac:	ldr	r0, [sp]
   1b1b0:	ldr	r1, [sp, #8]
   1b1b4:	mov	r2, #0
   1b1b8:	cmp	r0, r1
   1b1bc:	movwcc	r2, #1
   1b1c0:	str	r2, [sp, #8]
   1b1c4:	ldr	r0, [sp]
   1b1c8:	ldr	r1, [fp, #-4]
   1b1cc:	ldr	r2, [sp, #4]
   1b1d0:	add	r1, r1, r2, lsl #2
   1b1d4:	str	r0, [r1]
   1b1d8:	ldr	r0, [sp, #4]
   1b1dc:	add	r0, r0, #1
   1b1e0:	str	r0, [sp, #4]
   1b1e4:	ldr	r1, [sp, #12]
   1b1e8:	cmp	r0, r1
   1b1ec:	blt	1b194 <__assert_fail@plt+0x9e10>
   1b1f0:	ldr	r0, [sp, #8]
   1b1f4:	mov	sp, fp
   1b1f8:	pop	{fp, pc}
   1b1fc:	sub	sp, sp, #36	; 0x24
   1b200:	str	r0, [sp, #32]
   1b204:	str	r1, [sp, #28]
   1b208:	str	r2, [sp, #24]
   1b20c:	str	r3, [sp, #20]
   1b210:	movw	r0, #0
   1b214:	str	r0, [sp, #16]
   1b218:	str	r0, [sp, #12]
   1b21c:	ldr	r0, [sp, #16]
   1b220:	ldr	r1, [sp, #20]
   1b224:	cmp	r0, r1
   1b228:	bge	1b2c4 <__assert_fail@plt+0x9f40>
   1b22c:	ldr	r0, [sp, #28]
   1b230:	ldr	r1, [sp, #16]
   1b234:	ldr	r0, [r0, r1, lsl #2]
   1b238:	str	r0, [sp, #8]
   1b23c:	ldr	r0, [sp, #24]
   1b240:	ldr	r1, [sp, #16]
   1b244:	ldr	r0, [r0, r1, lsl #2]
   1b248:	str	r0, [sp, #4]
   1b24c:	ldr	r0, [sp, #8]
   1b250:	ldr	r1, [sp, #12]
   1b254:	add	r0, r0, r1
   1b258:	str	r0, [sp]
   1b25c:	ldr	r0, [sp]
   1b260:	ldr	r1, [sp, #12]
   1b264:	mov	r2, #0
   1b268:	cmp	r0, r1
   1b26c:	movwcc	r2, #1
   1b270:	str	r2, [sp, #12]
   1b274:	ldr	r0, [sp, #4]
   1b278:	ldr	r1, [sp]
   1b27c:	add	r0, r1, r0
   1b280:	str	r0, [sp]
   1b284:	ldr	r0, [sp]
   1b288:	ldr	r1, [sp, #4]
   1b28c:	ldr	r2, [sp, #12]
   1b290:	add	r3, r2, #1
   1b294:	cmp	r0, r1
   1b298:	movcc	r2, r3
   1b29c:	str	r2, [sp, #12]
   1b2a0:	ldr	r0, [sp]
   1b2a4:	ldr	r1, [sp, #32]
   1b2a8:	ldr	r2, [sp, #16]
   1b2ac:	add	r1, r1, r2, lsl #2
   1b2b0:	str	r0, [r1]
   1b2b4:	ldr	r0, [sp, #16]
   1b2b8:	add	r0, r0, #1
   1b2bc:	str	r0, [sp, #16]
   1b2c0:	b	1b21c <__assert_fail@plt+0x9e98>
   1b2c4:	ldr	r0, [sp, #12]
   1b2c8:	add	sp, sp, #36	; 0x24
   1b2cc:	bx	lr
   1b2d0:	push	{fp, lr}
   1b2d4:	mov	fp, sp
   1b2d8:	sub	sp, sp, #24
   1b2dc:	ldr	ip, [fp, #8]
   1b2e0:	str	r0, [fp, #-4]
   1b2e4:	str	r1, [fp, #-8]
   1b2e8:	str	r2, [sp, #12]
   1b2ec:	str	r3, [sp, #8]
   1b2f0:	ldr	r0, [sp, #12]
   1b2f4:	ldr	r1, [fp, #8]
   1b2f8:	cmp	r0, r1
   1b2fc:	blt	1b304 <__assert_fail@plt+0x9f80>
   1b300:	b	1b324 <__assert_fail@plt+0x9fa0>
   1b304:	movw	r0, #29046	; 0x7176
   1b308:	movt	r0, #3
   1b30c:	movw	r1, #28968	; 0x7128
   1b310:	movt	r1, #3
   1b314:	movw	r2, #480	; 0x1e0
   1b318:	movw	r3, #29055	; 0x717f
   1b31c:	movt	r3, #3
   1b320:	bl	11384 <__assert_fail@plt>
   1b324:	ldr	r0, [fp, #-4]
   1b328:	ldr	r1, [fp, #-8]
   1b32c:	ldr	r2, [sp, #8]
   1b330:	ldr	r3, [fp, #8]
   1b334:	bl	1b1fc <__assert_fail@plt+0x9e78>
   1b338:	str	r0, [sp, #4]
   1b33c:	ldr	r0, [sp, #12]
   1b340:	ldr	r1, [fp, #8]
   1b344:	cmp	r0, r1
   1b348:	ble	1b378 <__assert_fail@plt+0x9ff4>
   1b34c:	ldr	r0, [fp, #-4]
   1b350:	ldr	r1, [fp, #8]
   1b354:	add	r0, r0, r1, lsl #2
   1b358:	ldr	r2, [fp, #-8]
   1b35c:	add	r1, r2, r1, lsl #2
   1b360:	ldr	r2, [sp, #12]
   1b364:	ldr	r3, [fp, #8]
   1b368:	sub	r2, r2, r3
   1b36c:	ldr	r3, [sp, #4]
   1b370:	bl	1b140 <__assert_fail@plt+0x9dbc>
   1b374:	str	r0, [sp, #4]
   1b378:	ldr	r0, [sp, #4]
   1b37c:	mov	sp, fp
   1b380:	pop	{fp, pc}
   1b384:	push	{fp, lr}
   1b388:	mov	fp, sp
   1b38c:	sub	sp, sp, #32
   1b390:	str	r0, [fp, #-4]
   1b394:	str	r1, [fp, #-8]
   1b398:	str	r2, [fp, #-12]
   1b39c:	str	r3, [sp, #16]
   1b3a0:	ldr	r0, [fp, #-12]
   1b3a4:	cmp	r0, #0
   1b3a8:	ble	1b3b0 <__assert_fail@plt+0xa02c>
   1b3ac:	b	1b3d0 <__assert_fail@plt+0xa04c>
   1b3b0:	movw	r0, #32349	; 0x7e5d
   1b3b4:	movt	r0, #3
   1b3b8:	movw	r1, #28968	; 0x7128
   1b3bc:	movt	r1, #3
   1b3c0:	movw	r2, #493	; 0x1ed
   1b3c4:	movw	r3, #29125	; 0x71c5
   1b3c8:	movt	r3, #3
   1b3cc:	bl	11384 <__assert_fail@plt>
   1b3d0:	movw	r0, #0
   1b3d4:	str	r0, [sp, #12]
   1b3d8:	ldr	r0, [fp, #-8]
   1b3dc:	ldr	r1, [sp, #12]
   1b3e0:	ldr	r0, [r0, r1, lsl #2]
   1b3e4:	str	r0, [sp, #8]
   1b3e8:	ldr	r0, [sp, #8]
   1b3ec:	ldr	r1, [sp, #16]
   1b3f0:	mov	r2, #0
   1b3f4:	cmp	r0, r1
   1b3f8:	movwcc	r2, #1
   1b3fc:	str	r2, [sp, #4]
   1b400:	ldr	r0, [sp, #8]
   1b404:	ldr	r1, [sp, #16]
   1b408:	sub	r0, r0, r1
   1b40c:	ldr	r1, [fp, #-4]
   1b410:	ldr	r2, [sp, #12]
   1b414:	add	r1, r1, r2, lsl #2
   1b418:	str	r0, [r1]
   1b41c:	ldr	r0, [sp, #4]
   1b420:	str	r0, [sp, #16]
   1b424:	ldr	r0, [sp, #12]
   1b428:	add	r0, r0, #1
   1b42c:	str	r0, [sp, #12]
   1b430:	ldr	r1, [fp, #-12]
   1b434:	cmp	r0, r1
   1b438:	blt	1b3d8 <__assert_fail@plt+0xa054>
   1b43c:	ldr	r0, [sp, #16]
   1b440:	mov	sp, fp
   1b444:	pop	{fp, pc}
   1b448:	sub	sp, sp, #32
   1b44c:	str	r0, [sp, #28]
   1b450:	str	r1, [sp, #24]
   1b454:	str	r2, [sp, #20]
   1b458:	str	r3, [sp, #16]
   1b45c:	movw	r0, #0
   1b460:	str	r0, [sp, #12]
   1b464:	str	r0, [sp, #8]
   1b468:	ldr	r0, [sp, #12]
   1b46c:	ldr	r1, [sp, #16]
   1b470:	cmp	r0, r1
   1b474:	bge	1b508 <__assert_fail@plt+0xa184>
   1b478:	ldr	r0, [sp, #24]
   1b47c:	ldr	r1, [sp, #12]
   1b480:	ldr	r0, [r0, r1, lsl #2]
   1b484:	str	r0, [sp, #4]
   1b488:	ldr	r0, [sp, #20]
   1b48c:	ldr	r1, [sp, #12]
   1b490:	ldr	r0, [r0, r1, lsl #2]
   1b494:	str	r0, [sp]
   1b498:	ldr	r0, [sp, #8]
   1b49c:	ldr	r1, [sp]
   1b4a0:	add	r0, r1, r0
   1b4a4:	str	r0, [sp]
   1b4a8:	ldr	r0, [sp]
   1b4ac:	ldr	r1, [sp, #8]
   1b4b0:	mov	r2, #0
   1b4b4:	cmp	r0, r1
   1b4b8:	movwcc	r2, #1
   1b4bc:	str	r2, [sp, #8]
   1b4c0:	ldr	r0, [sp, #4]
   1b4c4:	ldr	r1, [sp]
   1b4c8:	ldr	r2, [sp, #8]
   1b4cc:	add	r3, r2, #1
   1b4d0:	cmp	r0, r1
   1b4d4:	movcc	r2, r3
   1b4d8:	str	r2, [sp, #8]
   1b4dc:	ldr	r0, [sp, #4]
   1b4e0:	ldr	r1, [sp]
   1b4e4:	sub	r0, r0, r1
   1b4e8:	ldr	r1, [sp, #28]
   1b4ec:	ldr	r2, [sp, #12]
   1b4f0:	add	r1, r1, r2, lsl #2
   1b4f4:	str	r0, [r1]
   1b4f8:	ldr	r0, [sp, #12]
   1b4fc:	add	r0, r0, #1
   1b500:	str	r0, [sp, #12]
   1b504:	b	1b468 <__assert_fail@plt+0xa0e4>
   1b508:	ldr	r0, [sp, #8]
   1b50c:	add	sp, sp, #32
   1b510:	bx	lr
   1b514:	push	{fp, lr}
   1b518:	mov	fp, sp
   1b51c:	sub	sp, sp, #24
   1b520:	ldr	ip, [fp, #8]
   1b524:	str	r0, [fp, #-4]
   1b528:	str	r1, [fp, #-8]
   1b52c:	str	r2, [sp, #12]
   1b530:	str	r3, [sp, #8]
   1b534:	ldr	r0, [sp, #12]
   1b538:	ldr	r1, [fp, #8]
   1b53c:	cmp	r0, r1
   1b540:	blt	1b548 <__assert_fail@plt+0xa1c4>
   1b544:	b	1b568 <__assert_fail@plt+0xa1e4>
   1b548:	movw	r0, #29046	; 0x7176
   1b54c:	movt	r0, #3
   1b550:	movw	r1, #28968	; 0x7128
   1b554:	movt	r1, #3
   1b558:	movw	r2, #532	; 0x214
   1b55c:	movw	r3, #29186	; 0x7202
   1b560:	movt	r3, #3
   1b564:	bl	11384 <__assert_fail@plt>
   1b568:	ldr	r0, [fp, #-4]
   1b56c:	ldr	r1, [fp, #-8]
   1b570:	ldr	r2, [sp, #8]
   1b574:	ldr	r3, [fp, #8]
   1b578:	bl	1b448 <__assert_fail@plt+0xa0c4>
   1b57c:	str	r0, [sp, #4]
   1b580:	ldr	r0, [sp, #12]
   1b584:	ldr	r1, [fp, #8]
   1b588:	cmp	r0, r1
   1b58c:	ble	1b5bc <__assert_fail@plt+0xa238>
   1b590:	ldr	r0, [fp, #-4]
   1b594:	ldr	r1, [fp, #8]
   1b598:	add	r0, r0, r1, lsl #2
   1b59c:	ldr	r2, [fp, #-8]
   1b5a0:	add	r1, r2, r1, lsl #2
   1b5a4:	ldr	r2, [sp, #12]
   1b5a8:	ldr	r3, [fp, #8]
   1b5ac:	sub	r2, r2, r3
   1b5b0:	ldr	r3, [sp, #4]
   1b5b4:	bl	1b384 <__assert_fail@plt+0xa000>
   1b5b8:	str	r0, [sp, #4]
   1b5bc:	ldr	r0, [sp, #4]
   1b5c0:	mov	sp, fp
   1b5c4:	pop	{fp, pc}
   1b5c8:	push	{fp, lr}
   1b5cc:	mov	fp, sp
   1b5d0:	sub	sp, sp, #80	; 0x50
   1b5d4:	str	r0, [fp, #-4]
   1b5d8:	str	r1, [fp, #-8]
   1b5dc:	str	r2, [fp, #-12]
   1b5e0:	str	r3, [fp, #-16]
   1b5e4:	ldr	r0, [fp, #-12]
   1b5e8:	cmp	r0, #1
   1b5ec:	blt	1b5f4 <__assert_fail@plt+0xa270>
   1b5f0:	b	1b614 <__assert_fail@plt+0xa290>
   1b5f4:	movw	r0, #29525	; 0x7355
   1b5f8:	movt	r0, #3
   1b5fc:	movw	r1, #28968	; 0x7128
   1b600:	movt	r1, #3
   1b604:	movw	r2, #545	; 0x221
   1b608:	movw	r3, #29256	; 0x7248
   1b60c:	movt	r3, #3
   1b610:	bl	11384 <__assert_fail@plt>
   1b614:	movw	r0, #0
   1b618:	str	r0, [fp, #-24]	; 0xffffffe8
   1b61c:	ldr	r0, [fp, #-8]
   1b620:	add	r1, r0, #4
   1b624:	str	r1, [fp, #-8]
   1b628:	ldr	r0, [r0]
   1b62c:	str	r0, [fp, #-20]	; 0xffffffec
   1b630:	movw	r0, #32
   1b634:	str	r0, [fp, #-36]	; 0xffffffdc
   1b638:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b63c:	str	r0, [sp, #8]
   1b640:	ldr	r0, [fp, #-16]
   1b644:	str	r0, [sp, #4]
   1b648:	ldr	r0, [sp, #8]
   1b64c:	movw	r1, #65535	; 0xffff
   1b650:	and	r0, r0, r1
   1b654:	str	r0, [sp, #24]
   1b658:	ldr	r0, [sp, #8]
   1b65c:	lsr	r0, r0, #16
   1b660:	str	r0, [sp, #16]
   1b664:	ldr	r0, [sp, #4]
   1b668:	and	r0, r0, r1
   1b66c:	str	r0, [sp, #20]
   1b670:	ldr	r0, [sp, #4]
   1b674:	lsr	r0, r0, #16
   1b678:	str	r0, [sp, #12]
   1b67c:	ldr	r0, [sp, #24]
   1b680:	ldr	r1, [sp, #20]
   1b684:	mul	r0, r0, r1
   1b688:	str	r0, [sp, #40]	; 0x28
   1b68c:	ldr	r0, [sp, #24]
   1b690:	ldr	r1, [sp, #12]
   1b694:	mul	r0, r0, r1
   1b698:	str	r0, [sp, #36]	; 0x24
   1b69c:	ldr	r0, [sp, #16]
   1b6a0:	ldr	r1, [sp, #20]
   1b6a4:	mul	r0, r0, r1
   1b6a8:	str	r0, [sp, #32]
   1b6ac:	ldr	r0, [sp, #16]
   1b6b0:	ldr	r1, [sp, #12]
   1b6b4:	mul	r0, r0, r1
   1b6b8:	str	r0, [sp, #28]
   1b6bc:	ldr	r0, [sp, #40]	; 0x28
   1b6c0:	lsr	r0, r0, #16
   1b6c4:	ldr	r1, [sp, #36]	; 0x24
   1b6c8:	add	r0, r1, r0
   1b6cc:	str	r0, [sp, #36]	; 0x24
   1b6d0:	ldr	r0, [sp, #32]
   1b6d4:	ldr	r1, [sp, #36]	; 0x24
   1b6d8:	add	r0, r1, r0
   1b6dc:	str	r0, [sp, #36]	; 0x24
   1b6e0:	ldr	r0, [sp, #36]	; 0x24
   1b6e4:	ldr	r1, [sp, #32]
   1b6e8:	cmp	r0, r1
   1b6ec:	bcs	1b6fc <__assert_fail@plt+0xa378>
   1b6f0:	ldr	r0, [sp, #28]
   1b6f4:	add	r0, r0, #65536	; 0x10000
   1b6f8:	str	r0, [sp, #28]
   1b6fc:	ldr	r0, [sp, #28]
   1b700:	ldr	r1, [sp, #36]	; 0x24
   1b704:	lsr	r1, r1, #16
   1b708:	add	r0, r0, r1
   1b70c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b710:	ldr	r0, [sp, #36]	; 0x24
   1b714:	lsl	r0, r0, #16
   1b718:	ldr	r1, [sp, #40]	; 0x28
   1b71c:	movw	r2, #65535	; 0xffff
   1b720:	and	r1, r1, r2
   1b724:	add	r0, r0, r1
   1b728:	str	r0, [fp, #-32]	; 0xffffffe0
   1b72c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b730:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b734:	add	r0, r1, r0
   1b738:	str	r0, [fp, #-32]	; 0xffffffe0
   1b73c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b740:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b744:	cmp	r0, r1
   1b748:	movw	r0, #0
   1b74c:	movcc	r0, #1
   1b750:	and	r0, r0, #1
   1b754:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b758:	add	r0, r0, r1
   1b75c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b760:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b764:	ldr	r1, [fp, #-4]
   1b768:	add	r2, r1, #4
   1b76c:	str	r2, [fp, #-4]
   1b770:	str	r0, [r1]
   1b774:	ldr	r0, [fp, #-12]
   1b778:	mvn	r1, #0
   1b77c:	add	r0, r0, r1
   1b780:	str	r0, [fp, #-12]
   1b784:	cmp	r0, #0
   1b788:	bne	1b61c <__assert_fail@plt+0xa298>
   1b78c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b790:	mov	sp, fp
   1b794:	pop	{fp, pc}
   1b798:	push	{fp, lr}
   1b79c:	mov	fp, sp
   1b7a0:	sub	sp, sp, #80	; 0x50
   1b7a4:	str	r0, [fp, #-4]
   1b7a8:	str	r1, [fp, #-8]
   1b7ac:	str	r2, [fp, #-12]
   1b7b0:	str	r3, [fp, #-16]
   1b7b4:	ldr	r0, [fp, #-12]
   1b7b8:	cmp	r0, #1
   1b7bc:	blt	1b7c4 <__assert_fail@plt+0xa440>
   1b7c0:	b	1b7e4 <__assert_fail@plt+0xa460>
   1b7c4:	movw	r0, #29525	; 0x7355
   1b7c8:	movt	r0, #3
   1b7cc:	movw	r1, #28968	; 0x7128
   1b7d0:	movt	r1, #3
   1b7d4:	movw	r2, #568	; 0x238
   1b7d8:	movw	r3, #29317	; 0x7285
   1b7dc:	movt	r3, #3
   1b7e0:	bl	11384 <__assert_fail@plt>
   1b7e4:	movw	r0, #0
   1b7e8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b7ec:	ldr	r0, [fp, #-8]
   1b7f0:	add	r1, r0, #4
   1b7f4:	str	r1, [fp, #-8]
   1b7f8:	ldr	r0, [r0]
   1b7fc:	str	r0, [fp, #-20]	; 0xffffffec
   1b800:	movw	r0, #32
   1b804:	str	r0, [sp, #40]	; 0x28
   1b808:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b80c:	str	r0, [sp, #4]
   1b810:	ldr	r0, [fp, #-16]
   1b814:	str	r0, [sp]
   1b818:	ldr	r0, [sp, #4]
   1b81c:	movw	r1, #65535	; 0xffff
   1b820:	and	r0, r0, r1
   1b824:	str	r0, [sp, #20]
   1b828:	ldr	r0, [sp, #4]
   1b82c:	lsr	r0, r0, #16
   1b830:	str	r0, [sp, #12]
   1b834:	ldr	r0, [sp]
   1b838:	and	r0, r0, r1
   1b83c:	str	r0, [sp, #16]
   1b840:	ldr	r0, [sp]
   1b844:	lsr	r0, r0, #16
   1b848:	str	r0, [sp, #8]
   1b84c:	ldr	r0, [sp, #20]
   1b850:	ldr	r1, [sp, #16]
   1b854:	mul	r0, r0, r1
   1b858:	str	r0, [sp, #36]	; 0x24
   1b85c:	ldr	r0, [sp, #20]
   1b860:	ldr	r1, [sp, #8]
   1b864:	mul	r0, r0, r1
   1b868:	str	r0, [sp, #32]
   1b86c:	ldr	r0, [sp, #12]
   1b870:	ldr	r1, [sp, #16]
   1b874:	mul	r0, r0, r1
   1b878:	str	r0, [sp, #28]
   1b87c:	ldr	r0, [sp, #12]
   1b880:	ldr	r1, [sp, #8]
   1b884:	mul	r0, r0, r1
   1b888:	str	r0, [sp, #24]
   1b88c:	ldr	r0, [sp, #36]	; 0x24
   1b890:	lsr	r0, r0, #16
   1b894:	ldr	r1, [sp, #32]
   1b898:	add	r0, r1, r0
   1b89c:	str	r0, [sp, #32]
   1b8a0:	ldr	r0, [sp, #28]
   1b8a4:	ldr	r1, [sp, #32]
   1b8a8:	add	r0, r1, r0
   1b8ac:	str	r0, [sp, #32]
   1b8b0:	ldr	r0, [sp, #32]
   1b8b4:	ldr	r1, [sp, #28]
   1b8b8:	cmp	r0, r1
   1b8bc:	bcs	1b8cc <__assert_fail@plt+0xa548>
   1b8c0:	ldr	r0, [sp, #24]
   1b8c4:	add	r0, r0, #65536	; 0x10000
   1b8c8:	str	r0, [sp, #24]
   1b8cc:	ldr	r0, [sp, #24]
   1b8d0:	ldr	r1, [sp, #32]
   1b8d4:	lsr	r1, r1, #16
   1b8d8:	add	r0, r0, r1
   1b8dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1b8e0:	ldr	r0, [sp, #32]
   1b8e4:	lsl	r0, r0, #16
   1b8e8:	ldr	r1, [sp, #36]	; 0x24
   1b8ec:	movw	r2, #65535	; 0xffff
   1b8f0:	and	r1, r1, r2
   1b8f4:	add	r0, r0, r1
   1b8f8:	str	r0, [fp, #-32]	; 0xffffffe0
   1b8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b900:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b904:	add	r0, r1, r0
   1b908:	str	r0, [fp, #-32]	; 0xffffffe0
   1b90c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b914:	cmp	r0, r1
   1b918:	movw	r0, #0
   1b91c:	movcc	r0, #1
   1b920:	and	r0, r0, #1
   1b924:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b928:	add	r0, r0, r1
   1b92c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b930:	ldr	r0, [fp, #-4]
   1b934:	ldr	r0, [r0]
   1b938:	str	r0, [fp, #-36]	; 0xffffffdc
   1b93c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b940:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b944:	add	r0, r0, r1
   1b948:	str	r0, [fp, #-32]	; 0xffffffe0
   1b94c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b950:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b954:	cmp	r0, r1
   1b958:	movw	r0, #0
   1b95c:	movcc	r0, #1
   1b960:	and	r0, r0, #1
   1b964:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b968:	add	r0, r1, r0
   1b96c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b970:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b974:	ldr	r1, [fp, #-4]
   1b978:	add	r2, r1, #4
   1b97c:	str	r2, [fp, #-4]
   1b980:	str	r0, [r1]
   1b984:	ldr	r0, [fp, #-12]
   1b988:	mvn	r1, #0
   1b98c:	add	r0, r0, r1
   1b990:	str	r0, [fp, #-12]
   1b994:	cmp	r0, #0
   1b998:	bne	1b7ec <__assert_fail@plt+0xa468>
   1b99c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9a0:	mov	sp, fp
   1b9a4:	pop	{fp, pc}
   1b9a8:	push	{fp, lr}
   1b9ac:	mov	fp, sp
   1b9b0:	sub	sp, sp, #80	; 0x50
   1b9b4:	str	r0, [fp, #-4]
   1b9b8:	str	r1, [fp, #-8]
   1b9bc:	str	r2, [fp, #-12]
   1b9c0:	str	r3, [fp, #-16]
   1b9c4:	ldr	r0, [fp, #-12]
   1b9c8:	cmp	r0, #1
   1b9cc:	blt	1b9d4 <__assert_fail@plt+0xa650>
   1b9d0:	b	1b9f4 <__assert_fail@plt+0xa670>
   1b9d4:	movw	r0, #29525	; 0x7355
   1b9d8:	movt	r0, #3
   1b9dc:	movw	r1, #28968	; 0x7128
   1b9e0:	movt	r1, #3
   1b9e4:	movw	r2, #594	; 0x252
   1b9e8:	movw	r3, #29381	; 0x72c5
   1b9ec:	movt	r3, #3
   1b9f0:	bl	11384 <__assert_fail@plt>
   1b9f4:	movw	r0, #0
   1b9f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b9fc:	ldr	r0, [fp, #-8]
   1ba00:	add	r1, r0, #4
   1ba04:	str	r1, [fp, #-8]
   1ba08:	ldr	r0, [r0]
   1ba0c:	str	r0, [fp, #-20]	; 0xffffffec
   1ba10:	movw	r0, #32
   1ba14:	str	r0, [sp, #40]	; 0x28
   1ba18:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ba1c:	str	r0, [sp, #4]
   1ba20:	ldr	r0, [fp, #-16]
   1ba24:	str	r0, [sp]
   1ba28:	ldr	r0, [sp, #4]
   1ba2c:	movw	r1, #65535	; 0xffff
   1ba30:	and	r0, r0, r1
   1ba34:	str	r0, [sp, #20]
   1ba38:	ldr	r0, [sp, #4]
   1ba3c:	lsr	r0, r0, #16
   1ba40:	str	r0, [sp, #12]
   1ba44:	ldr	r0, [sp]
   1ba48:	and	r0, r0, r1
   1ba4c:	str	r0, [sp, #16]
   1ba50:	ldr	r0, [sp]
   1ba54:	lsr	r0, r0, #16
   1ba58:	str	r0, [sp, #8]
   1ba5c:	ldr	r0, [sp, #20]
   1ba60:	ldr	r1, [sp, #16]
   1ba64:	mul	r0, r0, r1
   1ba68:	str	r0, [sp, #36]	; 0x24
   1ba6c:	ldr	r0, [sp, #20]
   1ba70:	ldr	r1, [sp, #8]
   1ba74:	mul	r0, r0, r1
   1ba78:	str	r0, [sp, #32]
   1ba7c:	ldr	r0, [sp, #12]
   1ba80:	ldr	r1, [sp, #16]
   1ba84:	mul	r0, r0, r1
   1ba88:	str	r0, [sp, #28]
   1ba8c:	ldr	r0, [sp, #12]
   1ba90:	ldr	r1, [sp, #8]
   1ba94:	mul	r0, r0, r1
   1ba98:	str	r0, [sp, #24]
   1ba9c:	ldr	r0, [sp, #36]	; 0x24
   1baa0:	lsr	r0, r0, #16
   1baa4:	ldr	r1, [sp, #32]
   1baa8:	add	r0, r1, r0
   1baac:	str	r0, [sp, #32]
   1bab0:	ldr	r0, [sp, #28]
   1bab4:	ldr	r1, [sp, #32]
   1bab8:	add	r0, r1, r0
   1babc:	str	r0, [sp, #32]
   1bac0:	ldr	r0, [sp, #32]
   1bac4:	ldr	r1, [sp, #28]
   1bac8:	cmp	r0, r1
   1bacc:	bcs	1badc <__assert_fail@plt+0xa758>
   1bad0:	ldr	r0, [sp, #24]
   1bad4:	add	r0, r0, #65536	; 0x10000
   1bad8:	str	r0, [sp, #24]
   1badc:	ldr	r0, [sp, #24]
   1bae0:	ldr	r1, [sp, #32]
   1bae4:	lsr	r1, r1, #16
   1bae8:	add	r0, r0, r1
   1baec:	str	r0, [fp, #-28]	; 0xffffffe4
   1baf0:	ldr	r0, [sp, #32]
   1baf4:	lsl	r0, r0, #16
   1baf8:	ldr	r1, [sp, #36]	; 0x24
   1bafc:	movw	r2, #65535	; 0xffff
   1bb00:	and	r1, r1, r2
   1bb04:	add	r0, r0, r1
   1bb08:	str	r0, [fp, #-32]	; 0xffffffe0
   1bb0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bb14:	add	r0, r1, r0
   1bb18:	str	r0, [fp, #-32]	; 0xffffffe0
   1bb1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bb20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bb24:	cmp	r0, r1
   1bb28:	movw	r0, #0
   1bb2c:	movcc	r0, #1
   1bb30:	and	r0, r0, #1
   1bb34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bb38:	add	r0, r0, r1
   1bb3c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bb40:	ldr	r0, [fp, #-4]
   1bb44:	ldr	r0, [r0]
   1bb48:	str	r0, [fp, #-36]	; 0xffffffdc
   1bb4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bb50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bb54:	sub	r0, r0, r1
   1bb58:	str	r0, [fp, #-32]	; 0xffffffe0
   1bb5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bb60:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bb64:	cmp	r0, r1
   1bb68:	movw	r0, #0
   1bb6c:	movhi	r0, #1
   1bb70:	and	r0, r0, #1
   1bb74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bb78:	add	r0, r1, r0
   1bb7c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bb80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bb84:	ldr	r1, [fp, #-4]
   1bb88:	add	r2, r1, #4
   1bb8c:	str	r2, [fp, #-4]
   1bb90:	str	r0, [r1]
   1bb94:	ldr	r0, [fp, #-12]
   1bb98:	mvn	r1, #0
   1bb9c:	add	r0, r0, r1
   1bba0:	str	r0, [fp, #-12]
   1bba4:	cmp	r0, #0
   1bba8:	bne	1b9fc <__assert_fail@plt+0xa678>
   1bbac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bbb0:	mov	sp, fp
   1bbb4:	pop	{fp, pc}
   1bbb8:	push	{fp, lr}
   1bbbc:	mov	fp, sp
   1bbc0:	sub	sp, sp, #16
   1bbc4:	ldr	ip, [fp, #8]
   1bbc8:	str	r0, [fp, #-4]
   1bbcc:	str	r1, [sp, #8]
   1bbd0:	str	r2, [sp, #4]
   1bbd4:	str	r3, [sp]
   1bbd8:	ldr	r0, [sp, #4]
   1bbdc:	ldr	r1, [fp, #8]
   1bbe0:	cmp	r0, r1
   1bbe4:	blt	1bbec <__assert_fail@plt+0xa868>
   1bbe8:	b	1bc0c <__assert_fail@plt+0xa888>
   1bbec:	movw	r0, #29445	; 0x7305
   1bbf0:	movt	r0, #3
   1bbf4:	movw	r1, #28968	; 0x7128
   1bbf8:	movt	r1, #3
   1bbfc:	movw	r2, #618	; 0x26a
   1bc00:	movw	r3, #29454	; 0x730e
   1bc04:	movt	r3, #3
   1bc08:	bl	11384 <__assert_fail@plt>
   1bc0c:	ldr	r0, [fp, #8]
   1bc10:	cmp	r0, #1
   1bc14:	blt	1bc1c <__assert_fail@plt+0xa898>
   1bc18:	b	1bc3c <__assert_fail@plt+0xa8b8>
   1bc1c:	movw	r0, #29524	; 0x7354
   1bc20:	movt	r0, #3
   1bc24:	movw	r1, #28968	; 0x7128
   1bc28:	movt	r1, #3
   1bc2c:	movw	r2, #619	; 0x26b
   1bc30:	movw	r3, #29454	; 0x730e
   1bc34:	movt	r3, #3
   1bc38:	bl	11384 <__assert_fail@plt>
   1bc3c:	ldr	r0, [fp, #-4]
   1bc40:	ldr	r1, [sp, #4]
   1bc44:	ldr	r2, [fp, #8]
   1bc48:	add	r1, r1, r2
   1bc4c:	add	r0, r0, r1, lsl #2
   1bc50:	ldr	r1, [sp, #8]
   1bc54:	cmp	r0, r1
   1bc58:	bls	1bc74 <__assert_fail@plt+0xa8f0>
   1bc5c:	ldr	r0, [sp, #8]
   1bc60:	ldr	r1, [sp, #4]
   1bc64:	add	r0, r0, r1, lsl #2
   1bc68:	ldr	r1, [fp, #-4]
   1bc6c:	cmp	r0, r1
   1bc70:	bhi	1bc78 <__assert_fail@plt+0xa8f4>
   1bc74:	b	1bc98 <__assert_fail@plt+0xa914>
   1bc78:	movw	r0, #29532	; 0x735c
   1bc7c:	movt	r0, #3
   1bc80:	movw	r1, #28968	; 0x7128
   1bc84:	movt	r1, #3
   1bc88:	movw	r2, #620	; 0x26c
   1bc8c:	movw	r3, #29454	; 0x730e
   1bc90:	movt	r3, #3
   1bc94:	bl	11384 <__assert_fail@plt>
   1bc98:	ldr	r0, [fp, #-4]
   1bc9c:	ldr	r1, [sp, #4]
   1bca0:	ldr	r2, [fp, #8]
   1bca4:	add	r1, r1, r2
   1bca8:	add	r0, r0, r1, lsl #2
   1bcac:	ldr	r1, [sp]
   1bcb0:	cmp	r0, r1
   1bcb4:	bls	1bcd0 <__assert_fail@plt+0xa94c>
   1bcb8:	ldr	r0, [sp]
   1bcbc:	ldr	r1, [fp, #8]
   1bcc0:	add	r0, r0, r1, lsl #2
   1bcc4:	ldr	r1, [fp, #-4]
   1bcc8:	cmp	r0, r1
   1bccc:	bhi	1bcd4 <__assert_fail@plt+0xa950>
   1bcd0:	b	1bcf4 <__assert_fail@plt+0xa970>
   1bcd4:	movw	r0, #29572	; 0x7384
   1bcd8:	movt	r0, #3
   1bcdc:	movw	r1, #28968	; 0x7128
   1bce0:	movt	r1, #3
   1bce4:	movw	r2, #621	; 0x26d
   1bce8:	movw	r3, #29454	; 0x730e
   1bcec:	movt	r3, #3
   1bcf0:	bl	11384 <__assert_fail@plt>
   1bcf4:	ldr	r0, [fp, #-4]
   1bcf8:	ldr	r1, [sp, #8]
   1bcfc:	ldr	r2, [sp, #4]
   1bd00:	ldr	r3, [sp]
   1bd04:	ldr	r3, [r3]
   1bd08:	bl	1b5c8 <__assert_fail@plt+0xa244>
   1bd0c:	ldr	r1, [fp, #-4]
   1bd10:	ldr	r2, [sp, #4]
   1bd14:	add	r1, r1, r2, lsl #2
   1bd18:	str	r0, [r1]
   1bd1c:	ldr	r0, [fp, #8]
   1bd20:	mvn	r1, #0
   1bd24:	add	r0, r0, r1
   1bd28:	str	r0, [fp, #8]
   1bd2c:	cmp	r0, #1
   1bd30:	blt	1bd78 <__assert_fail@plt+0xa9f4>
   1bd34:	ldr	r0, [fp, #-4]
   1bd38:	add	r0, r0, #4
   1bd3c:	str	r0, [fp, #-4]
   1bd40:	ldr	r0, [sp]
   1bd44:	add	r0, r0, #4
   1bd48:	str	r0, [sp]
   1bd4c:	ldr	r0, [fp, #-4]
   1bd50:	ldr	r1, [sp, #8]
   1bd54:	ldr	r2, [sp, #4]
   1bd58:	ldr	r3, [sp]
   1bd5c:	ldr	r3, [r3]
   1bd60:	bl	1b798 <__assert_fail@plt+0xa414>
   1bd64:	ldr	r1, [fp, #-4]
   1bd68:	ldr	r2, [sp, #4]
   1bd6c:	add	r1, r1, r2, lsl #2
   1bd70:	str	r0, [r1]
   1bd74:	b	1bd1c <__assert_fail@plt+0xa998>
   1bd78:	ldr	r0, [fp, #-4]
   1bd7c:	ldr	r1, [sp, #4]
   1bd80:	add	r0, r0, r1, lsl #2
   1bd84:	ldr	r0, [r0]
   1bd88:	mov	sp, fp
   1bd8c:	pop	{fp, pc}
   1bd90:	push	{fp, lr}
   1bd94:	mov	fp, sp
   1bd98:	sub	sp, sp, #24
   1bd9c:	str	r0, [fp, #-4]
   1bda0:	str	r1, [fp, #-8]
   1bda4:	str	r2, [sp, #12]
   1bda8:	str	r3, [sp, #8]
   1bdac:	ldr	r0, [fp, #-4]
   1bdb0:	ldr	r1, [fp, #-8]
   1bdb4:	ldr	r2, [sp, #8]
   1bdb8:	ldr	r3, [sp, #12]
   1bdbc:	ldr	ip, [sp, #8]
   1bdc0:	str	ip, [sp]
   1bdc4:	bl	1bbb8 <__assert_fail@plt+0xa834>
   1bdc8:	mov	sp, fp
   1bdcc:	pop	{fp, pc}
   1bdd0:	push	{fp, lr}
   1bdd4:	mov	fp, sp
   1bdd8:	sub	sp, sp, #16
   1bddc:	str	r0, [fp, #-4]
   1bde0:	str	r1, [sp, #8]
   1bde4:	str	r2, [sp, #4]
   1bde8:	ldr	r0, [fp, #-4]
   1bdec:	ldr	r1, [sp, #8]
   1bdf0:	ldr	r2, [sp, #4]
   1bdf4:	ldr	r3, [sp, #8]
   1bdf8:	ldr	ip, [sp, #4]
   1bdfc:	str	ip, [sp]
   1be00:	bl	1bbb8 <__assert_fail@plt+0xa834>
   1be04:	mov	sp, fp
   1be08:	pop	{fp, pc}
   1be0c:	push	{fp, lr}
   1be10:	mov	fp, sp
   1be14:	sub	sp, sp, #32
   1be18:	str	r0, [fp, #-4]
   1be1c:	str	r1, [fp, #-8]
   1be20:	str	r2, [fp, #-12]
   1be24:	str	r3, [sp, #16]
   1be28:	ldr	r0, [fp, #-12]
   1be2c:	cmp	r0, #1
   1be30:	blt	1be38 <__assert_fail@plt+0xaab4>
   1be34:	b	1be58 <__assert_fail@plt+0xaad4>
   1be38:	movw	r0, #29525	; 0x7355
   1be3c:	movt	r0, #3
   1be40:	movw	r1, #28968	; 0x7128
   1be44:	movt	r1, #3
   1be48:	movw	r2, #659	; 0x293
   1be4c:	movw	r3, #29612	; 0x73ac
   1be50:	movt	r3, #3
   1be54:	bl	11384 <__assert_fail@plt>
   1be58:	ldr	r0, [sp, #16]
   1be5c:	cmp	r0, #1
   1be60:	bcc	1be68 <__assert_fail@plt+0xaae4>
   1be64:	b	1be88 <__assert_fail@plt+0xab04>
   1be68:	movw	r0, #29677	; 0x73ed
   1be6c:	movt	r0, #3
   1be70:	movw	r1, #28968	; 0x7128
   1be74:	movt	r1, #3
   1be78:	movw	r2, #660	; 0x294
   1be7c:	movw	r3, #29612	; 0x73ac
   1be80:	movt	r3, #3
   1be84:	bl	11384 <__assert_fail@plt>
   1be88:	ldr	r0, [sp, #16]
   1be8c:	cmp	r0, #32
   1be90:	bcs	1be98 <__assert_fail@plt+0xab14>
   1be94:	b	1beb8 <__assert_fail@plt+0xab34>
   1be98:	movw	r0, #29686	; 0x73f6
   1be9c:	movt	r0, #3
   1bea0:	movw	r1, #28968	; 0x7128
   1bea4:	movt	r1, #3
   1bea8:	movw	r2, #661	; 0x295
   1beac:	movw	r3, #29612	; 0x73ac
   1beb0:	movt	r3, #3
   1beb4:	bl	11384 <__assert_fail@plt>
   1beb8:	ldr	r0, [fp, #-12]
   1bebc:	ldr	r1, [fp, #-8]
   1bec0:	add	r0, r1, r0, lsl #2
   1bec4:	str	r0, [fp, #-8]
   1bec8:	ldr	r0, [fp, #-12]
   1becc:	ldr	r1, [fp, #-4]
   1bed0:	add	r0, r1, r0, lsl #2
   1bed4:	str	r0, [fp, #-4]
   1bed8:	ldr	r0, [sp, #16]
   1bedc:	movw	r1, #32
   1bee0:	sub	r0, r1, r0
   1bee4:	str	r0, [sp, #4]
   1bee8:	ldr	r0, [fp, #-8]
   1beec:	mvn	r1, #3
   1bef0:	add	r2, r0, r1
   1bef4:	str	r2, [fp, #-8]
   1bef8:	add	r0, r0, r1
   1befc:	ldr	r0, [r0]
   1bf00:	str	r0, [sp, #8]
   1bf04:	ldr	r0, [sp, #8]
   1bf08:	ldr	r1, [sp, #4]
   1bf0c:	lsr	r0, r0, r1
   1bf10:	str	r0, [sp]
   1bf14:	ldr	r0, [sp, #8]
   1bf18:	ldr	r1, [sp, #16]
   1bf1c:	lsl	r0, r0, r1
   1bf20:	str	r0, [sp, #12]
   1bf24:	ldr	r0, [fp, #-12]
   1bf28:	mvn	r1, #0
   1bf2c:	add	r0, r0, r1
   1bf30:	str	r0, [fp, #-12]
   1bf34:	cmp	r0, #0
   1bf38:	beq	1bf94 <__assert_fail@plt+0xac10>
   1bf3c:	ldr	r0, [fp, #-8]
   1bf40:	mvn	r1, #3
   1bf44:	add	r2, r0, r1
   1bf48:	str	r2, [fp, #-8]
   1bf4c:	add	r0, r0, r1
   1bf50:	ldr	r0, [r0]
   1bf54:	str	r0, [sp, #8]
   1bf58:	ldr	r0, [sp, #12]
   1bf5c:	ldr	r2, [sp, #8]
   1bf60:	ldr	r3, [sp, #4]
   1bf64:	lsr	r2, r2, r3
   1bf68:	orr	r0, r0, r2
   1bf6c:	ldr	r2, [fp, #-4]
   1bf70:	add	r3, r2, r1
   1bf74:	str	r3, [fp, #-4]
   1bf78:	add	r1, r2, r1
   1bf7c:	str	r0, [r1]
   1bf80:	ldr	r0, [sp, #8]
   1bf84:	ldr	r1, [sp, #16]
   1bf88:	lsl	r0, r0, r1
   1bf8c:	str	r0, [sp, #12]
   1bf90:	b	1bf24 <__assert_fail@plt+0xaba0>
   1bf94:	ldr	r0, [sp, #12]
   1bf98:	ldr	r1, [fp, #-4]
   1bf9c:	mvn	r2, #3
   1bfa0:	add	r3, r1, r2
   1bfa4:	str	r3, [fp, #-4]
   1bfa8:	add	r1, r1, r2
   1bfac:	str	r0, [r1]
   1bfb0:	ldr	r0, [sp]
   1bfb4:	mov	sp, fp
   1bfb8:	pop	{fp, pc}
   1bfbc:	push	{fp, lr}
   1bfc0:	mov	fp, sp
   1bfc4:	sub	sp, sp, #32
   1bfc8:	str	r0, [fp, #-4]
   1bfcc:	str	r1, [fp, #-8]
   1bfd0:	str	r2, [fp, #-12]
   1bfd4:	str	r3, [sp, #16]
   1bfd8:	ldr	r0, [fp, #-12]
   1bfdc:	cmp	r0, #1
   1bfe0:	blt	1bfe8 <__assert_fail@plt+0xac64>
   1bfe4:	b	1c008 <__assert_fail@plt+0xac84>
   1bfe8:	movw	r0, #29525	; 0x7355
   1bfec:	movt	r0, #3
   1bff0:	movw	r1, #28968	; 0x7128
   1bff4:	movt	r1, #3
   1bff8:	movw	r2, #689	; 0x2b1
   1bffc:	movw	r3, #29706	; 0x740a
   1c000:	movt	r3, #3
   1c004:	bl	11384 <__assert_fail@plt>
   1c008:	ldr	r0, [sp, #16]
   1c00c:	cmp	r0, #1
   1c010:	bcc	1c018 <__assert_fail@plt+0xac94>
   1c014:	b	1c038 <__assert_fail@plt+0xacb4>
   1c018:	movw	r0, #29677	; 0x73ed
   1c01c:	movt	r0, #3
   1c020:	movw	r1, #28968	; 0x7128
   1c024:	movt	r1, #3
   1c028:	movw	r2, #690	; 0x2b2
   1c02c:	movw	r3, #29706	; 0x740a
   1c030:	movt	r3, #3
   1c034:	bl	11384 <__assert_fail@plt>
   1c038:	ldr	r0, [sp, #16]
   1c03c:	cmp	r0, #32
   1c040:	bcs	1c048 <__assert_fail@plt+0xacc4>
   1c044:	b	1c068 <__assert_fail@plt+0xace4>
   1c048:	movw	r0, #29686	; 0x73f6
   1c04c:	movt	r0, #3
   1c050:	movw	r1, #28968	; 0x7128
   1c054:	movt	r1, #3
   1c058:	movw	r2, #691	; 0x2b3
   1c05c:	movw	r3, #29706	; 0x740a
   1c060:	movt	r3, #3
   1c064:	bl	11384 <__assert_fail@plt>
   1c068:	ldr	r0, [sp, #16]
   1c06c:	movw	r1, #32
   1c070:	sub	r0, r1, r0
   1c074:	str	r0, [sp, #4]
   1c078:	ldr	r0, [fp, #-8]
   1c07c:	add	r1, r0, #4
   1c080:	str	r1, [fp, #-8]
   1c084:	ldr	r0, [r0]
   1c088:	str	r0, [sp, #12]
   1c08c:	ldr	r0, [sp, #12]
   1c090:	ldr	r1, [sp, #4]
   1c094:	lsl	r0, r0, r1
   1c098:	str	r0, [sp]
   1c09c:	ldr	r0, [sp, #12]
   1c0a0:	ldr	r1, [sp, #16]
   1c0a4:	lsr	r0, r0, r1
   1c0a8:	str	r0, [sp, #8]
   1c0ac:	ldr	r0, [fp, #-12]
   1c0b0:	mvn	r1, #0
   1c0b4:	add	r0, r0, r1
   1c0b8:	str	r0, [fp, #-12]
   1c0bc:	cmp	r0, #0
   1c0c0:	beq	1c110 <__assert_fail@plt+0xad8c>
   1c0c4:	ldr	r0, [fp, #-8]
   1c0c8:	add	r1, r0, #4
   1c0cc:	str	r1, [fp, #-8]
   1c0d0:	ldr	r0, [r0]
   1c0d4:	str	r0, [sp, #12]
   1c0d8:	ldr	r0, [sp, #8]
   1c0dc:	ldr	r1, [sp, #12]
   1c0e0:	ldr	r2, [sp, #4]
   1c0e4:	lsl	r1, r1, r2
   1c0e8:	orr	r0, r0, r1
   1c0ec:	ldr	r1, [fp, #-4]
   1c0f0:	add	r2, r1, #4
   1c0f4:	str	r2, [fp, #-4]
   1c0f8:	str	r0, [r1]
   1c0fc:	ldr	r0, [sp, #12]
   1c100:	ldr	r1, [sp, #16]
   1c104:	lsr	r0, r0, r1
   1c108:	str	r0, [sp, #8]
   1c10c:	b	1c0ac <__assert_fail@plt+0xad28>
   1c110:	ldr	r0, [sp, #8]
   1c114:	ldr	r1, [fp, #-4]
   1c118:	str	r0, [r1]
   1c11c:	ldr	r0, [sp]
   1c120:	mov	sp, fp
   1c124:	pop	{fp, pc}
   1c128:	push	{fp, lr}
   1c12c:	mov	fp, sp
   1c130:	sub	sp, sp, #16
   1c134:	str	r0, [fp, #-4]
   1c138:	str	r1, [sp, #8]
   1c13c:	ldr	r0, [sp, #8]
   1c140:	lsr	r0, r0, #5
   1c144:	str	r0, [sp, #4]
   1c148:	ldr	r0, [fp, #-4]
   1c14c:	ldr	r1, [sp, #4]
   1c150:	add	r0, r0, r1, lsl #2
   1c154:	ldr	r0, [r0]
   1c158:	ldr	r1, [sp, #8]
   1c15c:	and	r1, r1, #31
   1c160:	mvn	r2, #0
   1c164:	lsl	r1, r2, r1
   1c168:	and	r0, r0, r1
   1c16c:	ldr	r1, [sp, #4]
   1c170:	ldr	r2, [fp, #-4]
   1c174:	ldr	r3, [sp, #4]
   1c178:	movw	ip, #0
   1c17c:	str	ip, [sp]
   1c180:	bl	1c18c <__assert_fail@plt+0xae08>
   1c184:	mov	sp, fp
   1c188:	pop	{fp, pc}
   1c18c:	push	{fp, lr}
   1c190:	mov	fp, sp
   1c194:	sub	sp, sp, #48	; 0x30
   1c198:	ldr	ip, [fp, #8]
   1c19c:	str	r0, [fp, #-8]
   1c1a0:	str	r1, [fp, #-12]
   1c1a4:	str	r2, [fp, #-16]
   1c1a8:	str	r3, [fp, #-20]	; 0xffffffec
   1c1ac:	ldr	r0, [fp, #8]
   1c1b0:	cmp	r0, #0
   1c1b4:	beq	1c1c4 <__assert_fail@plt+0xae40>
   1c1b8:	ldr	r0, [fp, #8]
   1c1bc:	cmn	r0, #1
   1c1c0:	bne	1c1c8 <__assert_fail@plt+0xae44>
   1c1c4:	b	1c1e8 <__assert_fail@plt+0xae64>
   1c1c8:	movw	r0, #31786	; 0x7c2a
   1c1cc:	movt	r0, #3
   1c1d0:	movw	r1, #28968	; 0x7128
   1c1d4:	movt	r1, #3
   1c1d8:	movw	r2, #715	; 0x2cb
   1c1dc:	movw	r3, #31816	; 0x7c48
   1c1e0:	movt	r3, #3
   1c1e4:	bl	11384 <__assert_fail@plt>
   1c1e8:	ldr	r0, [fp, #-12]
   1c1ec:	movw	r1, #0
   1c1f0:	cmp	r1, r0
   1c1f4:	bgt	1c20c <__assert_fail@plt+0xae88>
   1c1f8:	ldr	r0, [fp, #-12]
   1c1fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c200:	cmp	r0, r1
   1c204:	bgt	1c20c <__assert_fail@plt+0xae88>
   1c208:	b	1c22c <__assert_fail@plt+0xaea8>
   1c20c:	movw	r0, #31899	; 0x7c9b
   1c210:	movt	r0, #3
   1c214:	movw	r1, #28968	; 0x7128
   1c218:	movt	r1, #3
   1c21c:	movw	r2, #716	; 0x2cc
   1c220:	movw	r3, #31816	; 0x7c48
   1c224:	movt	r3, #3
   1c228:	bl	11384 <__assert_fail@plt>
   1c22c:	b	1c230 <__assert_fail@plt+0xaeac>
   1c230:	ldr	r0, [fp, #-8]
   1c234:	cmp	r0, #0
   1c238:	bne	1c2a8 <__assert_fail@plt+0xaf24>
   1c23c:	ldr	r0, [fp, #-12]
   1c240:	add	r0, r0, #1
   1c244:	str	r0, [fp, #-12]
   1c248:	ldr	r0, [fp, #-12]
   1c24c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c250:	cmp	r0, r1
   1c254:	bne	1c288 <__assert_fail@plt+0xaf04>
   1c258:	ldr	r0, [fp, #8]
   1c25c:	cmp	r0, #0
   1c260:	bne	1c270 <__assert_fail@plt+0xaeec>
   1c264:	mvn	r0, #0
   1c268:	str	r0, [sp]
   1c26c:	b	1c27c <__assert_fail@plt+0xaef8>
   1c270:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c274:	lsl	r0, r0, #5
   1c278:	str	r0, [sp]
   1c27c:	ldr	r0, [sp]
   1c280:	str	r0, [fp, #-4]
   1c284:	b	1c384 <__assert_fail@plt+0xb000>
   1c288:	ldr	r0, [fp, #8]
   1c28c:	ldr	r1, [fp, #-16]
   1c290:	ldr	r2, [fp, #-12]
   1c294:	add	r1, r1, r2, lsl #2
   1c298:	ldr	r1, [r1]
   1c29c:	eor	r0, r0, r1
   1c2a0:	str	r0, [fp, #-8]
   1c2a4:	b	1c230 <__assert_fail@plt+0xaeac>
   1c2a8:	b	1c2ac <__assert_fail@plt+0xaf28>
   1c2ac:	ldr	r0, [fp, #-8]
   1c2b0:	str	r0, [sp, #20]
   1c2b4:	movw	r0, #0
   1c2b8:	str	r0, [sp, #16]
   1c2bc:	ldr	r0, [sp, #20]
   1c2c0:	ldr	r1, [sp, #20]
   1c2c4:	movw	r2, #0
   1c2c8:	sub	r1, r2, r1
   1c2cc:	and	r0, r0, r1
   1c2d0:	str	r0, [sp, #12]
   1c2d4:	str	r2, [sp, #8]
   1c2d8:	movw	r0, #8
   1c2dc:	str	r0, [sp, #4]
   1c2e0:	ldr	r0, [sp, #4]
   1c2e4:	movw	r1, #32
   1c2e8:	cmp	r1, r0
   1c2ec:	bls	1c328 <__assert_fail@plt+0xafa4>
   1c2f0:	b	1c2f4 <__assert_fail@plt+0xaf70>
   1c2f4:	ldr	r0, [sp, #12]
   1c2f8:	and	r0, r0, #-16777216	; 0xff000000
   1c2fc:	cmp	r0, #0
   1c300:	bne	1c324 <__assert_fail@plt+0xafa0>
   1c304:	ldr	r0, [sp, #4]
   1c308:	ldr	r1, [sp, #12]
   1c30c:	lsl	r0, r1, r0
   1c310:	str	r0, [sp, #12]
   1c314:	ldr	r0, [sp, #8]
   1c318:	add	r0, r0, #8
   1c31c:	str	r0, [sp, #8]
   1c320:	b	1c2f4 <__assert_fail@plt+0xaf70>
   1c324:	b	1c328 <__assert_fail@plt+0xafa4>
   1c328:	b	1c32c <__assert_fail@plt+0xafa8>
   1c32c:	ldr	r0, [sp, #12]
   1c330:	and	r0, r0, #-2147483648	; 0x80000000
   1c334:	cmp	r0, #0
   1c338:	bne	1c358 <__assert_fail@plt+0xafd4>
   1c33c:	ldr	r0, [sp, #12]
   1c340:	lsl	r0, r0, #1
   1c344:	str	r0, [sp, #12]
   1c348:	ldr	r0, [sp, #8]
   1c34c:	add	r0, r0, #1
   1c350:	str	r0, [sp, #8]
   1c354:	b	1c32c <__assert_fail@plt+0xafa8>
   1c358:	ldr	r0, [sp, #8]
   1c35c:	str	r0, [sp, #16]
   1c360:	ldr	r0, [sp, #16]
   1c364:	movw	r1, #31
   1c368:	sub	r0, r1, r0
   1c36c:	str	r0, [sp, #24]
   1c370:	ldr	r0, [fp, #-12]
   1c374:	lsl	r0, r0, #5
   1c378:	ldr	r1, [sp, #24]
   1c37c:	add	r0, r0, r1
   1c380:	str	r0, [fp, #-4]
   1c384:	ldr	r0, [fp, #-4]
   1c388:	mov	sp, fp
   1c38c:	pop	{fp, pc}
   1c390:	push	{fp, lr}
   1c394:	mov	fp, sp
   1c398:	sub	sp, sp, #24
   1c39c:	str	r0, [fp, #-4]
   1c3a0:	str	r1, [fp, #-8]
   1c3a4:	ldr	r0, [fp, #-8]
   1c3a8:	lsr	r0, r0, #5
   1c3ac:	str	r0, [sp, #12]
   1c3b0:	ldr	r0, [fp, #-4]
   1c3b4:	ldr	r1, [sp, #12]
   1c3b8:	add	r0, r0, r1, lsl #2
   1c3bc:	ldr	r0, [r0]
   1c3c0:	mvn	r1, #0
   1c3c4:	eor	r0, r0, r1
   1c3c8:	ldr	r2, [fp, #-8]
   1c3cc:	and	r2, r2, #31
   1c3d0:	lsl	r2, r1, r2
   1c3d4:	and	r0, r0, r2
   1c3d8:	ldr	r2, [sp, #12]
   1c3dc:	ldr	r3, [fp, #-4]
   1c3e0:	ldr	ip, [sp, #12]
   1c3e4:	str	r1, [sp, #8]
   1c3e8:	mov	r1, r2
   1c3ec:	mov	r2, r3
   1c3f0:	mov	r3, ip
   1c3f4:	ldr	ip, [sp, #8]
   1c3f8:	str	ip, [sp]
   1c3fc:	bl	1c18c <__assert_fail@plt+0xae08>
   1c400:	mov	sp, fp
   1c404:	pop	{fp, pc}
   1c408:	sub	sp, sp, #12
   1c40c:	str	r0, [sp, #8]
   1c410:	str	r1, [sp, #4]
   1c414:	str	r2, [sp]
   1c418:	ldr	r0, [sp]
   1c41c:	mvn	r1, #0
   1c420:	add	r0, r0, r1
   1c424:	str	r0, [sp]
   1c428:	cmp	r0, #0
   1c42c:	blt	1c45c <__assert_fail@plt+0xb0d8>
   1c430:	ldr	r0, [sp, #4]
   1c434:	add	r1, r0, #4
   1c438:	str	r1, [sp, #4]
   1c43c:	ldr	r0, [r0]
   1c440:	mvn	r1, #0
   1c444:	eor	r0, r0, r1
   1c448:	ldr	r1, [sp, #8]
   1c44c:	add	r2, r1, #4
   1c450:	str	r2, [sp, #8]
   1c454:	str	r0, [r1]
   1c458:	b	1c418 <__assert_fail@plt+0xb094>
   1c45c:	add	sp, sp, #12
   1c460:	bx	lr
   1c464:	push	{fp, lr}
   1c468:	mov	fp, sp
   1c46c:	sub	sp, sp, #16
   1c470:	str	r0, [sp, #8]
   1c474:	str	r1, [sp, #4]
   1c478:	str	r2, [sp]
   1c47c:	ldr	r0, [sp, #4]
   1c480:	ldr	r0, [r0]
   1c484:	cmp	r0, #0
   1c488:	bne	1c4d8 <__assert_fail@plt+0xb154>
   1c48c:	ldr	r0, [sp, #8]
   1c490:	movw	r1, #0
   1c494:	str	r1, [r0]
   1c498:	ldr	r0, [sp]
   1c49c:	mvn	r1, #0
   1c4a0:	add	r0, r0, r1
   1c4a4:	str	r0, [sp]
   1c4a8:	cmp	r0, #0
   1c4ac:	bne	1c4bc <__assert_fail@plt+0xb138>
   1c4b0:	movw	r0, #0
   1c4b4:	str	r0, [fp, #-4]
   1c4b8:	b	1c524 <__assert_fail@plt+0xb1a0>
   1c4bc:	ldr	r0, [sp, #4]
   1c4c0:	add	r0, r0, #4
   1c4c4:	str	r0, [sp, #4]
   1c4c8:	ldr	r0, [sp, #8]
   1c4cc:	add	r0, r0, #4
   1c4d0:	str	r0, [sp, #8]
   1c4d4:	b	1c47c <__assert_fail@plt+0xb0f8>
   1c4d8:	ldr	r0, [sp, #4]
   1c4dc:	ldr	r0, [r0]
   1c4e0:	movw	r1, #0
   1c4e4:	sub	r0, r1, r0
   1c4e8:	ldr	r1, [sp, #8]
   1c4ec:	str	r0, [r1]
   1c4f0:	ldr	r0, [sp, #8]
   1c4f4:	add	r0, r0, #4
   1c4f8:	str	r0, [sp, #8]
   1c4fc:	ldr	r1, [sp, #4]
   1c500:	add	r1, r1, #4
   1c504:	str	r1, [sp, #4]
   1c508:	ldr	r2, [sp]
   1c50c:	mvn	r3, #0
   1c510:	add	r2, r2, r3
   1c514:	str	r2, [sp]
   1c518:	bl	1c408 <__assert_fail@plt+0xb084>
   1c51c:	movw	r0, #1
   1c520:	str	r0, [fp, #-4]
   1c524:	ldr	r0, [fp, #-4]
   1c528:	mov	sp, fp
   1c52c:	pop	{fp, pc}
   1c530:	sub	sp, sp, #88	; 0x58
   1c534:	str	r0, [sp, #84]	; 0x54
   1c538:	str	r1, [sp, #80]	; 0x50
   1c53c:	ldr	r0, [sp, #84]	; 0x54
   1c540:	movw	r1, #65535	; 0xffff
   1c544:	and	r0, r0, r1
   1c548:	str	r0, [sp, #60]	; 0x3c
   1c54c:	ldr	r0, [sp, #84]	; 0x54
   1c550:	lsr	r0, r0, #16
   1c554:	str	r0, [sp, #56]	; 0x38
   1c558:	ldr	r0, [sp, #84]	; 0x54
   1c55c:	mvn	r2, #0
   1c560:	eor	r0, r0, r2
   1c564:	ldr	r3, [sp, #56]	; 0x38
   1c568:	udiv	r0, r0, r3
   1c56c:	str	r0, [sp, #52]	; 0x34
   1c570:	ldr	r0, [sp, #84]	; 0x54
   1c574:	eor	r0, r0, r2
   1c578:	ldr	r2, [sp, #52]	; 0x34
   1c57c:	ldr	r3, [sp, #56]	; 0x38
   1c580:	mul	r2, r2, r3
   1c584:	sub	r0, r0, r2
   1c588:	lsl	r0, r0, #16
   1c58c:	orr	r0, r0, r1
   1c590:	str	r0, [sp, #76]	; 0x4c
   1c594:	ldr	r0, [sp, #52]	; 0x34
   1c598:	ldr	r1, [sp, #60]	; 0x3c
   1c59c:	mul	r0, r0, r1
   1c5a0:	str	r0, [sp, #68]	; 0x44
   1c5a4:	ldr	r0, [sp, #76]	; 0x4c
   1c5a8:	ldr	r1, [sp, #68]	; 0x44
   1c5ac:	cmp	r0, r1
   1c5b0:	bcs	1c61c <__assert_fail@plt+0xb298>
   1c5b4:	ldr	r0, [sp, #52]	; 0x34
   1c5b8:	mvn	r1, #0
   1c5bc:	add	r0, r0, r1
   1c5c0:	str	r0, [sp, #52]	; 0x34
   1c5c4:	ldr	r0, [sp, #84]	; 0x54
   1c5c8:	ldr	r1, [sp, #76]	; 0x4c
   1c5cc:	add	r0, r1, r0
   1c5d0:	str	r0, [sp, #76]	; 0x4c
   1c5d4:	ldr	r0, [sp, #76]	; 0x4c
   1c5d8:	ldr	r1, [sp, #84]	; 0x54
   1c5dc:	cmp	r0, r1
   1c5e0:	bcc	1c618 <__assert_fail@plt+0xb294>
   1c5e4:	ldr	r0, [sp, #76]	; 0x4c
   1c5e8:	ldr	r1, [sp, #68]	; 0x44
   1c5ec:	cmp	r0, r1
   1c5f0:	bcs	1c614 <__assert_fail@plt+0xb290>
   1c5f4:	ldr	r0, [sp, #52]	; 0x34
   1c5f8:	mvn	r1, #0
   1c5fc:	add	r0, r0, r1
   1c600:	str	r0, [sp, #52]	; 0x34
   1c604:	ldr	r0, [sp, #84]	; 0x54
   1c608:	ldr	r1, [sp, #76]	; 0x4c
   1c60c:	add	r0, r1, r0
   1c610:	str	r0, [sp, #76]	; 0x4c
   1c614:	b	1c618 <__assert_fail@plt+0xb294>
   1c618:	b	1c61c <__assert_fail@plt+0xb298>
   1c61c:	ldr	r0, [sp, #68]	; 0x44
   1c620:	ldr	r1, [sp, #76]	; 0x4c
   1c624:	sub	r0, r1, r0
   1c628:	str	r0, [sp, #76]	; 0x4c
   1c62c:	ldr	r0, [sp, #76]	; 0x4c
   1c630:	lsr	r0, r0, #16
   1c634:	ldr	r1, [sp, #52]	; 0x34
   1c638:	mul	r0, r0, r1
   1c63c:	ldr	r1, [sp, #76]	; 0x4c
   1c640:	add	r0, r0, r1
   1c644:	str	r0, [sp, #68]	; 0x44
   1c648:	ldr	r0, [sp, #68]	; 0x44
   1c64c:	lsr	r0, r0, #16
   1c650:	add	r0, r0, #1
   1c654:	str	r0, [sp, #64]	; 0x40
   1c658:	ldr	r0, [sp, #76]	; 0x4c
   1c65c:	lsl	r0, r0, #16
   1c660:	movw	r1, #65535	; 0xffff
   1c664:	add	r0, r0, r1
   1c668:	ldr	r1, [sp, #64]	; 0x40
   1c66c:	ldr	r2, [sp, #84]	; 0x54
   1c670:	mul	r1, r1, r2
   1c674:	sub	r0, r0, r1
   1c678:	str	r0, [sp, #76]	; 0x4c
   1c67c:	ldr	r0, [sp, #76]	; 0x4c
   1c680:	ldr	r1, [sp, #68]	; 0x44
   1c684:	lsl	r1, r1, #16
   1c688:	mvn	r2, #0
   1c68c:	and	r1, r1, r2
   1c690:	cmp	r0, r1
   1c694:	bcc	1c6b8 <__assert_fail@plt+0xb334>
   1c698:	ldr	r0, [sp, #64]	; 0x40
   1c69c:	mvn	r1, #0
   1c6a0:	add	r0, r0, r1
   1c6a4:	str	r0, [sp, #64]	; 0x40
   1c6a8:	ldr	r0, [sp, #84]	; 0x54
   1c6ac:	ldr	r1, [sp, #76]	; 0x4c
   1c6b0:	add	r0, r1, r0
   1c6b4:	str	r0, [sp, #76]	; 0x4c
   1c6b8:	ldr	r0, [sp, #52]	; 0x34
   1c6bc:	lsl	r0, r0, #16
   1c6c0:	ldr	r1, [sp, #64]	; 0x40
   1c6c4:	add	r0, r0, r1
   1c6c8:	str	r0, [sp, #72]	; 0x48
   1c6cc:	ldr	r0, [sp, #76]	; 0x4c
   1c6d0:	ldr	r1, [sp, #84]	; 0x54
   1c6d4:	cmp	r0, r1
   1c6d8:	bcc	1c6f8 <__assert_fail@plt+0xb374>
   1c6dc:	ldr	r0, [sp, #72]	; 0x48
   1c6e0:	add	r0, r0, #1
   1c6e4:	str	r0, [sp, #72]	; 0x48
   1c6e8:	ldr	r0, [sp, #84]	; 0x54
   1c6ec:	ldr	r1, [sp, #76]	; 0x4c
   1c6f0:	sub	r0, r1, r0
   1c6f4:	str	r0, [sp, #76]	; 0x4c
   1c6f8:	ldr	r0, [sp, #80]	; 0x50
   1c6fc:	cmp	r0, #0
   1c700:	bls	1c914 <__assert_fail@plt+0xb590>
   1c704:	ldr	r0, [sp, #76]	; 0x4c
   1c708:	mvn	r1, #0
   1c70c:	eor	r0, r0, r1
   1c710:	str	r0, [sp, #76]	; 0x4c
   1c714:	ldr	r0, [sp, #80]	; 0x50
   1c718:	ldr	r1, [sp, #76]	; 0x4c
   1c71c:	add	r0, r1, r0
   1c720:	str	r0, [sp, #76]	; 0x4c
   1c724:	ldr	r0, [sp, #76]	; 0x4c
   1c728:	ldr	r1, [sp, #80]	; 0x50
   1c72c:	cmp	r0, r1
   1c730:	bcs	1c784 <__assert_fail@plt+0xb400>
   1c734:	ldr	r0, [sp, #72]	; 0x48
   1c738:	mvn	r1, #0
   1c73c:	add	r0, r0, r1
   1c740:	str	r0, [sp, #72]	; 0x48
   1c744:	ldr	r0, [sp, #76]	; 0x4c
   1c748:	ldr	r1, [sp, #84]	; 0x54
   1c74c:	cmp	r0, r1
   1c750:	bcc	1c774 <__assert_fail@plt+0xb3f0>
   1c754:	ldr	r0, [sp, #72]	; 0x48
   1c758:	mvn	r1, #0
   1c75c:	add	r0, r0, r1
   1c760:	str	r0, [sp, #72]	; 0x48
   1c764:	ldr	r0, [sp, #84]	; 0x54
   1c768:	ldr	r1, [sp, #76]	; 0x4c
   1c76c:	sub	r0, r1, r0
   1c770:	str	r0, [sp, #76]	; 0x4c
   1c774:	ldr	r0, [sp, #84]	; 0x54
   1c778:	ldr	r1, [sp, #76]	; 0x4c
   1c77c:	sub	r0, r1, r0
   1c780:	str	r0, [sp, #76]	; 0x4c
   1c784:	b	1c788 <__assert_fail@plt+0xb404>
   1c788:	movw	r0, #32
   1c78c:	str	r0, [sp, #40]	; 0x28
   1c790:	ldr	r0, [sp, #80]	; 0x50
   1c794:	str	r0, [sp, #4]
   1c798:	ldr	r0, [sp, #72]	; 0x48
   1c79c:	str	r0, [sp]
   1c7a0:	ldr	r0, [sp, #4]
   1c7a4:	movw	r1, #65535	; 0xffff
   1c7a8:	and	r0, r0, r1
   1c7ac:	str	r0, [sp, #20]
   1c7b0:	ldr	r0, [sp, #4]
   1c7b4:	lsr	r0, r0, #16
   1c7b8:	str	r0, [sp, #12]
   1c7bc:	ldr	r0, [sp]
   1c7c0:	and	r0, r0, r1
   1c7c4:	str	r0, [sp, #16]
   1c7c8:	ldr	r0, [sp]
   1c7cc:	lsr	r0, r0, #16
   1c7d0:	str	r0, [sp, #8]
   1c7d4:	ldr	r0, [sp, #20]
   1c7d8:	ldr	r1, [sp, #16]
   1c7dc:	mul	r0, r0, r1
   1c7e0:	str	r0, [sp, #36]	; 0x24
   1c7e4:	ldr	r0, [sp, #20]
   1c7e8:	ldr	r1, [sp, #8]
   1c7ec:	mul	r0, r0, r1
   1c7f0:	str	r0, [sp, #32]
   1c7f4:	ldr	r0, [sp, #12]
   1c7f8:	ldr	r1, [sp, #16]
   1c7fc:	mul	r0, r0, r1
   1c800:	str	r0, [sp, #28]
   1c804:	ldr	r0, [sp, #12]
   1c808:	ldr	r1, [sp, #8]
   1c80c:	mul	r0, r0, r1
   1c810:	str	r0, [sp, #24]
   1c814:	ldr	r0, [sp, #36]	; 0x24
   1c818:	lsr	r0, r0, #16
   1c81c:	ldr	r1, [sp, #32]
   1c820:	add	r0, r1, r0
   1c824:	str	r0, [sp, #32]
   1c828:	ldr	r0, [sp, #28]
   1c82c:	ldr	r1, [sp, #32]
   1c830:	add	r0, r1, r0
   1c834:	str	r0, [sp, #32]
   1c838:	ldr	r0, [sp, #32]
   1c83c:	ldr	r1, [sp, #28]
   1c840:	cmp	r0, r1
   1c844:	bcs	1c854 <__assert_fail@plt+0xb4d0>
   1c848:	ldr	r0, [sp, #24]
   1c84c:	add	r0, r0, #65536	; 0x10000
   1c850:	str	r0, [sp, #24]
   1c854:	ldr	r0, [sp, #24]
   1c858:	ldr	r1, [sp, #32]
   1c85c:	lsr	r1, r1, #16
   1c860:	add	r0, r0, r1
   1c864:	str	r0, [sp, #48]	; 0x30
   1c868:	ldr	r0, [sp, #32]
   1c86c:	lsl	r0, r0, #16
   1c870:	ldr	r1, [sp, #36]	; 0x24
   1c874:	movw	r2, #65535	; 0xffff
   1c878:	and	r1, r1, r2
   1c87c:	add	r0, r0, r1
   1c880:	str	r0, [sp, #44]	; 0x2c
   1c884:	ldr	r0, [sp, #48]	; 0x30
   1c888:	ldr	r1, [sp, #76]	; 0x4c
   1c88c:	add	r0, r1, r0
   1c890:	str	r0, [sp, #76]	; 0x4c
   1c894:	ldr	r0, [sp, #76]	; 0x4c
   1c898:	ldr	r1, [sp, #48]	; 0x30
   1c89c:	cmp	r0, r1
   1c8a0:	bcs	1c910 <__assert_fail@plt+0xb58c>
   1c8a4:	ldr	r0, [sp, #72]	; 0x48
   1c8a8:	mvn	r1, #0
   1c8ac:	add	r0, r0, r1
   1c8b0:	str	r0, [sp, #72]	; 0x48
   1c8b4:	ldr	r0, [sp, #76]	; 0x4c
   1c8b8:	ldr	r1, [sp, #84]	; 0x54
   1c8bc:	cmp	r0, r1
   1c8c0:	movw	r0, #0
   1c8c4:	movhi	r0, #1
   1c8c8:	and	r0, r0, #1
   1c8cc:	ldr	r1, [sp, #76]	; 0x4c
   1c8d0:	ldr	r2, [sp, #84]	; 0x54
   1c8d4:	cmp	r1, r2
   1c8d8:	movw	r1, #0
   1c8dc:	moveq	r1, #1
   1c8e0:	and	r1, r1, #1
   1c8e4:	ldr	r2, [sp, #44]	; 0x2c
   1c8e8:	ldr	r3, [sp, #80]	; 0x50
   1c8ec:	cmp	r2, r3
   1c8f0:	movw	r2, #0
   1c8f4:	movhi	r2, #1
   1c8f8:	and	r2, r2, #1
   1c8fc:	and	r1, r1, r2
   1c900:	orr	r0, r0, r1
   1c904:	ldr	r1, [sp, #72]	; 0x48
   1c908:	sub	r0, r1, r0
   1c90c:	str	r0, [sp, #72]	; 0x48
   1c910:	b	1c914 <__assert_fail@plt+0xb590>
   1c914:	ldr	r0, [sp, #72]	; 0x48
   1c918:	add	sp, sp, #88	; 0x58
   1c91c:	bx	lr
   1c920:	push	{fp, lr}
   1c924:	mov	fp, sp
   1c928:	sub	sp, sp, #40	; 0x28
   1c92c:	str	r0, [fp, #-8]
   1c930:	str	r1, [fp, #-12]
   1c934:	str	r2, [fp, #-16]
   1c938:	str	r3, [sp, #20]
   1c93c:	ldr	r0, [sp, #20]
   1c940:	cmp	r0, #0
   1c944:	ble	1c94c <__assert_fail@plt+0xb5c8>
   1c948:	b	1c96c <__assert_fail@plt+0xb5e8>
   1c94c:	movw	r0, #29771	; 0x744b
   1c950:	movt	r0, #3
   1c954:	movw	r1, #28968	; 0x7128
   1c958:	movt	r1, #3
   1c95c:	movw	r2, #1316	; 0x524
   1c960:	movw	r3, #29778	; 0x7452
   1c964:	movt	r3, #3
   1c968:	bl	11384 <__assert_fail@plt>
   1c96c:	ldr	r0, [fp, #-16]
   1c970:	ldr	r1, [sp, #20]
   1c974:	sub	r1, r1, #1
   1c978:	add	r0, r0, r1, lsl #2
   1c97c:	ldr	r0, [r0]
   1c980:	cmp	r0, #0
   1c984:	bls	1c98c <__assert_fail@plt+0xb608>
   1c988:	b	1c9ac <__assert_fail@plt+0xb628>
   1c98c:	movw	r0, #29838	; 0x748e
   1c990:	movt	r0, #3
   1c994:	movw	r1, #28968	; 0x7128
   1c998:	movt	r1, #3
   1c99c:	movw	r2, #1317	; 0x525
   1c9a0:	movw	r3, #29778	; 0x7452
   1c9a4:	movt	r3, #3
   1c9a8:	bl	11384 <__assert_fail@plt>
   1c9ac:	ldr	r0, [fp, #-12]
   1c9b0:	bl	1ca24 <__assert_fail@plt+0xb6a0>
   1c9b4:	str	r0, [sp, #16]
   1c9b8:	ldr	r0, [sp, #16]
   1c9bc:	cmp	r0, #0
   1c9c0:	beq	1c9e0 <__assert_fail@plt+0xb65c>
   1c9c4:	ldr	r0, [fp, #-8]
   1c9c8:	ldr	r1, [sp, #16]
   1c9cc:	ldr	r2, [fp, #-16]
   1c9d0:	ldr	r3, [sp, #20]
   1c9d4:	bl	1cb24 <__assert_fail@plt+0xb7a0>
   1c9d8:	str	r0, [fp, #-4]
   1c9dc:	b	1ca18 <__assert_fail@plt+0xb694>
   1c9e0:	ldr	r1, [fp, #-12]
   1c9e4:	add	r0, sp, #8
   1c9e8:	bl	1cc74 <__assert_fail@plt+0xb8f0>
   1c9ec:	ldr	r0, [fp, #-8]
   1c9f0:	ldr	r1, [fp, #-12]
   1c9f4:	ldr	r3, [fp, #-16]
   1c9f8:	ldr	r2, [sp, #20]
   1c9fc:	add	ip, sp, #8
   1ca00:	str	r2, [sp, #4]
   1ca04:	mov	r2, ip
   1ca08:	ldr	ip, [sp, #4]
   1ca0c:	str	ip, [sp]
   1ca10:	bl	1ccf0 <__assert_fail@plt+0xb96c>
   1ca14:	str	r0, [fp, #-4]
   1ca18:	ldr	r0, [fp, #-4]
   1ca1c:	mov	sp, fp
   1ca20:	pop	{fp, pc}
   1ca24:	sub	sp, sp, #12
   1ca28:	str	r0, [sp, #4]
   1ca2c:	ldr	r0, [sp, #4]
   1ca30:	cmp	r0, #2
   1ca34:	str	r0, [sp]
   1ca38:	beq	1cab0 <__assert_fail@plt+0xb72c>
   1ca3c:	b	1ca40 <__assert_fail@plt+0xb6bc>
   1ca40:	ldr	r0, [sp]
   1ca44:	cmp	r0, #4
   1ca48:	beq	1cabc <__assert_fail@plt+0xb738>
   1ca4c:	b	1ca50 <__assert_fail@plt+0xb6cc>
   1ca50:	ldr	r0, [sp]
   1ca54:	cmp	r0, #8
   1ca58:	beq	1cac8 <__assert_fail@plt+0xb744>
   1ca5c:	b	1ca60 <__assert_fail@plt+0xb6dc>
   1ca60:	ldr	r0, [sp]
   1ca64:	cmp	r0, #16
   1ca68:	beq	1cad4 <__assert_fail@plt+0xb750>
   1ca6c:	b	1ca70 <__assert_fail@plt+0xb6ec>
   1ca70:	ldr	r0, [sp]
   1ca74:	cmp	r0, #32
   1ca78:	beq	1cae0 <__assert_fail@plt+0xb75c>
   1ca7c:	b	1ca80 <__assert_fail@plt+0xb6fc>
   1ca80:	ldr	r0, [sp]
   1ca84:	cmp	r0, #64	; 0x40
   1ca88:	beq	1caec <__assert_fail@plt+0xb768>
   1ca8c:	b	1ca90 <__assert_fail@plt+0xb70c>
   1ca90:	ldr	r0, [sp]
   1ca94:	cmp	r0, #128	; 0x80
   1ca98:	beq	1caf8 <__assert_fail@plt+0xb774>
   1ca9c:	b	1caa0 <__assert_fail@plt+0xb71c>
   1caa0:	ldr	r0, [sp]
   1caa4:	cmp	r0, #256	; 0x100
   1caa8:	beq	1cb04 <__assert_fail@plt+0xb780>
   1caac:	b	1cb10 <__assert_fail@plt+0xb78c>
   1cab0:	movw	r0, #1
   1cab4:	str	r0, [sp, #8]
   1cab8:	b	1cb18 <__assert_fail@plt+0xb794>
   1cabc:	movw	r0, #2
   1cac0:	str	r0, [sp, #8]
   1cac4:	b	1cb18 <__assert_fail@plt+0xb794>
   1cac8:	movw	r0, #3
   1cacc:	str	r0, [sp, #8]
   1cad0:	b	1cb18 <__assert_fail@plt+0xb794>
   1cad4:	movw	r0, #4
   1cad8:	str	r0, [sp, #8]
   1cadc:	b	1cb18 <__assert_fail@plt+0xb794>
   1cae0:	movw	r0, #5
   1cae4:	str	r0, [sp, #8]
   1cae8:	b	1cb18 <__assert_fail@plt+0xb794>
   1caec:	movw	r0, #6
   1caf0:	str	r0, [sp, #8]
   1caf4:	b	1cb18 <__assert_fail@plt+0xb794>
   1caf8:	movw	r0, #7
   1cafc:	str	r0, [sp, #8]
   1cb00:	b	1cb18 <__assert_fail@plt+0xb794>
   1cb04:	movw	r0, #8
   1cb08:	str	r0, [sp, #8]
   1cb0c:	b	1cb18 <__assert_fail@plt+0xb794>
   1cb10:	movw	r0, #0
   1cb14:	str	r0, [sp, #8]
   1cb18:	ldr	r0, [sp, #8]
   1cb1c:	add	sp, sp, #12
   1cb20:	bx	lr
   1cb24:	push	{fp, lr}
   1cb28:	mov	fp, sp
   1cb2c:	sub	sp, sp, #48	; 0x30
   1cb30:	str	r0, [fp, #-4]
   1cb34:	str	r1, [fp, #-8]
   1cb38:	str	r2, [fp, #-12]
   1cb3c:	str	r3, [fp, #-16]
   1cb40:	ldr	r0, [fp, #-16]
   1cb44:	sub	r0, r0, #1
   1cb48:	lsl	r1, r0, #5
   1cb4c:	ldr	r2, [fp, #-12]
   1cb50:	add	r0, r2, r0, lsl #2
   1cb54:	ldr	r0, [r0]
   1cb58:	str	r1, [sp, #4]
   1cb5c:	bl	24d70 <__assert_fail@plt+0x139ec>
   1cb60:	ldr	r1, [sp, #4]
   1cb64:	add	r0, r1, r0
   1cb68:	ldr	r1, [fp, #-8]
   1cb6c:	add	r0, r0, r1
   1cb70:	sub	r0, r0, #1
   1cb74:	ldr	r1, [fp, #-8]
   1cb78:	udiv	r0, r0, r1
   1cb7c:	str	r0, [sp, #24]
   1cb80:	ldr	r0, [fp, #-8]
   1cb84:	movw	r1, #1
   1cb88:	lsl	r0, r1, r0
   1cb8c:	sub	r0, r0, #1
   1cb90:	strb	r0, [fp, #-17]	; 0xffffffef
   1cb94:	movw	r0, #0
   1cb98:	str	r0, [sp, #16]
   1cb9c:	ldr	r1, [sp, #24]
   1cba0:	str	r1, [sp, #20]
   1cba4:	str	r0, [sp, #12]
   1cba8:	ldr	r0, [sp, #20]
   1cbac:	mvn	r1, #0
   1cbb0:	add	r1, r0, r1
   1cbb4:	str	r1, [sp, #20]
   1cbb8:	cmp	r0, #0
   1cbbc:	bls	1cc68 <__assert_fail@plt+0xb8e4>
   1cbc0:	ldr	r0, [fp, #-12]
   1cbc4:	ldr	r1, [sp, #16]
   1cbc8:	add	r0, r0, r1, lsl #2
   1cbcc:	ldr	r0, [r0]
   1cbd0:	ldr	r1, [sp, #12]
   1cbd4:	lsr	r0, r0, r1
   1cbd8:	strb	r0, [sp, #11]
   1cbdc:	ldr	r0, [fp, #-8]
   1cbe0:	ldr	r1, [sp, #12]
   1cbe4:	add	r0, r1, r0
   1cbe8:	str	r0, [sp, #12]
   1cbec:	ldr	r0, [sp, #12]
   1cbf0:	cmp	r0, #32
   1cbf4:	bcc	1cc48 <__assert_fail@plt+0xb8c4>
   1cbf8:	ldr	r0, [sp, #16]
   1cbfc:	add	r0, r0, #1
   1cc00:	str	r0, [sp, #16]
   1cc04:	ldr	r1, [fp, #-16]
   1cc08:	cmp	r0, r1
   1cc0c:	bge	1cc48 <__assert_fail@plt+0xb8c4>
   1cc10:	ldr	r0, [sp, #12]
   1cc14:	sub	r0, r0, #32
   1cc18:	str	r0, [sp, #12]
   1cc1c:	ldr	r0, [fp, #-12]
   1cc20:	ldr	r1, [sp, #16]
   1cc24:	add	r0, r0, r1, lsl #2
   1cc28:	ldr	r0, [r0]
   1cc2c:	ldr	r1, [fp, #-8]
   1cc30:	ldr	r2, [sp, #12]
   1cc34:	sub	r1, r1, r2
   1cc38:	lsl	r0, r0, r1
   1cc3c:	ldrb	r1, [sp, #11]
   1cc40:	orr	r0, r1, r0
   1cc44:	strb	r0, [sp, #11]
   1cc48:	ldrb	r0, [sp, #11]
   1cc4c:	ldrb	r1, [fp, #-17]	; 0xffffffef
   1cc50:	and	r0, r0, r1
   1cc54:	ldr	r1, [fp, #-4]
   1cc58:	ldr	r2, [sp, #20]
   1cc5c:	add	r1, r1, r2
   1cc60:	strb	r0, [r1]
   1cc64:	b	1cba8 <__assert_fail@plt+0xb824>
   1cc68:	ldr	r0, [sp, #24]
   1cc6c:	mov	sp, fp
   1cc70:	pop	{fp, pc}
   1cc74:	sub	sp, sp, #20
   1cc78:	str	r0, [sp, #16]
   1cc7c:	str	r1, [sp, #12]
   1cc80:	ldr	r0, [sp, #12]
   1cc84:	mvn	r1, #0
   1cc88:	udiv	r0, r1, r0
   1cc8c:	str	r0, [sp, #8]
   1cc90:	movw	r0, #1
   1cc94:	str	r0, [sp]
   1cc98:	ldr	r0, [sp, #12]
   1cc9c:	str	r0, [sp, #4]
   1cca0:	ldr	r0, [sp, #4]
   1cca4:	ldr	r1, [sp, #8]
   1cca8:	cmp	r0, r1
   1ccac:	bhi	1ccd0 <__assert_fail@plt+0xb94c>
   1ccb0:	ldr	r0, [sp, #12]
   1ccb4:	ldr	r1, [sp, #4]
   1ccb8:	mul	r0, r1, r0
   1ccbc:	str	r0, [sp, #4]
   1ccc0:	ldr	r0, [sp]
   1ccc4:	add	r0, r0, #1
   1ccc8:	str	r0, [sp]
   1cccc:	b	1cca0 <__assert_fail@plt+0xb91c>
   1ccd0:	ldr	r0, [sp]
   1ccd4:	ldr	r1, [sp, #16]
   1ccd8:	str	r0, [r1]
   1ccdc:	ldr	r0, [sp, #4]
   1cce0:	ldr	r1, [sp, #16]
   1cce4:	str	r0, [r1, #4]
   1cce8:	add	sp, sp, #20
   1ccec:	bx	lr
   1ccf0:	push	{fp, lr}
   1ccf4:	mov	fp, sp
   1ccf8:	sub	sp, sp, #80	; 0x50
   1ccfc:	ldr	ip, [fp, #8]
   1cd00:	str	r0, [fp, #-4]
   1cd04:	str	r1, [fp, #-8]
   1cd08:	str	r2, [fp, #-12]
   1cd0c:	str	r3, [fp, #-16]
   1cd10:	ldr	r1, [fp, #-8]
   1cd14:	sub	r0, fp, #32
   1cd18:	str	ip, [sp, #8]
   1cd1c:	bl	24e60 <__assert_fail@plt+0x13adc>
   1cd20:	movw	r0, #0
   1cd24:	str	r0, [fp, #-36]	; 0xffffffdc
   1cd28:	ldr	r0, [fp, #8]
   1cd2c:	cmp	r0, #1
   1cd30:	ble	1ce10 <__assert_fail@plt+0xba8c>
   1cd34:	ldr	r0, [fp, #-12]
   1cd38:	ldr	r1, [r0, #4]
   1cd3c:	add	r0, sp, #24
   1cd40:	bl	24e60 <__assert_fail@plt+0x13adc>
   1cd44:	ldr	r0, [fp, #-16]
   1cd48:	ldr	r2, [fp, #8]
   1cd4c:	add	r3, sp, #24
   1cd50:	str	r0, [sp, #4]
   1cd54:	ldr	r1, [sp, #4]
   1cd58:	bl	24f80 <__assert_fail@plt+0x13bfc>
   1cd5c:	str	r0, [sp, #20]
   1cd60:	ldr	r0, [fp, #-16]
   1cd64:	ldr	r1, [fp, #8]
   1cd68:	sub	r1, r1, #1
   1cd6c:	add	r0, r0, r1, lsl #2
   1cd70:	ldr	r0, [r0]
   1cd74:	cmp	r0, #0
   1cd78:	movw	r0, #0
   1cd7c:	moveq	r0, #1
   1cd80:	and	r0, r0, #1
   1cd84:	ldr	r1, [fp, #8]
   1cd88:	sub	r0, r1, r0
   1cd8c:	str	r0, [fp, #8]
   1cd90:	ldr	r0, [fp, #-4]
   1cd94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cd98:	add	r0, r0, r1
   1cd9c:	ldr	r1, [sp, #20]
   1cda0:	sub	r2, fp, #32
   1cda4:	bl	26478 <__assert_fail@plt+0x150f4>
   1cda8:	str	r0, [sp, #16]
   1cdac:	ldr	r0, [sp, #16]
   1cdb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cdb4:	add	r0, r1, r0
   1cdb8:	str	r0, [fp, #-36]	; 0xffffffdc
   1cdbc:	ldr	r0, [sp, #16]
   1cdc0:	ldr	r1, [fp, #-12]
   1cdc4:	ldr	r1, [r1]
   1cdc8:	cmp	r0, r1
   1cdcc:	bcs	1cdfc <__assert_fail@plt+0xba78>
   1cdd0:	ldr	r0, [fp, #-4]
   1cdd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cdd8:	add	r2, r1, #1
   1cddc:	str	r2, [fp, #-36]	; 0xffffffdc
   1cde0:	add	r0, r0, r1
   1cde4:	movw	r1, #0
   1cde8:	strb	r1, [r0]
   1cdec:	ldr	r0, [sp, #16]
   1cdf0:	add	r0, r0, #1
   1cdf4:	str	r0, [sp, #16]
   1cdf8:	b	1cdbc <__assert_fail@plt+0xba38>
   1cdfc:	b	1ce00 <__assert_fail@plt+0xba7c>
   1ce00:	ldr	r0, [fp, #8]
   1ce04:	cmp	r0, #1
   1ce08:	bgt	1cd44 <__assert_fail@plt+0xb9c0>
   1ce0c:	b	1ce10 <__assert_fail@plt+0xba8c>
   1ce10:	ldr	r0, [fp, #-4]
   1ce14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce18:	add	r0, r0, r1
   1ce1c:	ldr	r1, [fp, #-16]
   1ce20:	ldr	r1, [r1]
   1ce24:	sub	r2, fp, #32
   1ce28:	bl	26478 <__assert_fail@plt+0x150f4>
   1ce2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce30:	add	r0, r1, r0
   1ce34:	str	r0, [fp, #-36]	; 0xffffffdc
   1ce38:	movw	r0, #0
   1ce3c:	str	r0, [sp, #40]	; 0x28
   1ce40:	ldr	r0, [sp, #40]	; 0x28
   1ce44:	lsl	r0, r0, #1
   1ce48:	add	r0, r0, #1
   1ce4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce50:	cmp	r0, r1
   1ce54:	bcs	1cec8 <__assert_fail@plt+0xbb44>
   1ce58:	ldr	r0, [fp, #-4]
   1ce5c:	ldr	r1, [sp, #40]	; 0x28
   1ce60:	add	r0, r0, r1
   1ce64:	ldrb	r0, [r0]
   1ce68:	strb	r0, [sp, #15]
   1ce6c:	ldr	r0, [fp, #-4]
   1ce70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce74:	ldr	r2, [sp, #40]	; 0x28
   1ce78:	sub	r1, r1, r2
   1ce7c:	sub	r1, r1, #1
   1ce80:	add	r0, r0, r1
   1ce84:	ldrb	r0, [r0]
   1ce88:	ldr	r1, [fp, #-4]
   1ce8c:	ldr	r2, [sp, #40]	; 0x28
   1ce90:	add	r1, r1, r2
   1ce94:	strb	r0, [r1]
   1ce98:	ldrb	r0, [sp, #15]
   1ce9c:	ldr	r1, [fp, #-4]
   1cea0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cea4:	ldr	r3, [sp, #40]	; 0x28
   1cea8:	sub	r2, r2, r3
   1ceac:	sub	r2, r2, #1
   1ceb0:	add	r1, r1, r2
   1ceb4:	strb	r0, [r1]
   1ceb8:	ldr	r0, [sp, #40]	; 0x28
   1cebc:	add	r0, r0, #1
   1cec0:	str	r0, [sp, #40]	; 0x28
   1cec4:	b	1ce40 <__assert_fail@plt+0xbabc>
   1cec8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cecc:	mov	sp, fp
   1ced0:	pop	{fp, pc}
   1ced4:	push	{fp, lr}
   1ced8:	mov	fp, sp
   1cedc:	sub	sp, sp, #40	; 0x28
   1cee0:	str	r0, [fp, #-8]
   1cee4:	str	r1, [fp, #-12]
   1cee8:	str	r2, [fp, #-16]
   1ceec:	str	r3, [sp, #20]
   1cef0:	ldr	r0, [fp, #-16]
   1cef4:	cmp	r0, #0
   1cef8:	bne	1cf08 <__assert_fail@plt+0xbb84>
   1cefc:	movw	r0, #0
   1cf00:	str	r0, [fp, #-4]
   1cf04:	b	1cf68 <__assert_fail@plt+0xbbe4>
   1cf08:	ldr	r0, [sp, #20]
   1cf0c:	bl	1ca24 <__assert_fail@plt+0xb6a0>
   1cf10:	str	r0, [sp, #16]
   1cf14:	ldr	r0, [sp, #16]
   1cf18:	cmp	r0, #0
   1cf1c:	beq	1cf3c <__assert_fail@plt+0xbbb8>
   1cf20:	ldr	r0, [fp, #-8]
   1cf24:	ldr	r1, [fp, #-12]
   1cf28:	ldr	r2, [fp, #-16]
   1cf2c:	ldr	r3, [sp, #16]
   1cf30:	bl	1cf74 <__assert_fail@plt+0xbbf0>
   1cf34:	str	r0, [fp, #-4]
   1cf38:	b	1cf68 <__assert_fail@plt+0xbbe4>
   1cf3c:	ldr	r1, [sp, #20]
   1cf40:	add	r0, sp, #8
   1cf44:	bl	1cc74 <__assert_fail@plt+0xb8f0>
   1cf48:	ldr	r0, [fp, #-8]
   1cf4c:	ldr	r1, [fp, #-12]
   1cf50:	ldr	r2, [fp, #-16]
   1cf54:	ldr	r3, [sp, #20]
   1cf58:	add	ip, sp, #8
   1cf5c:	str	ip, [sp]
   1cf60:	bl	1d090 <__assert_fail@plt+0xbd0c>
   1cf64:	str	r0, [fp, #-4]
   1cf68:	ldr	r0, [fp, #-4]
   1cf6c:	mov	sp, fp
   1cf70:	pop	{fp, pc}
   1cf74:	push	{fp, lr}
   1cf78:	mov	fp, sp
   1cf7c:	sub	sp, sp, #32
   1cf80:	str	r0, [fp, #-4]
   1cf84:	str	r1, [fp, #-8]
   1cf88:	str	r2, [fp, #-12]
   1cf8c:	str	r3, [sp, #16]
   1cf90:	movw	r0, #0
   1cf94:	str	r0, [sp, #8]
   1cf98:	str	r0, [sp, #12]
   1cf9c:	str	r0, [sp, #4]
   1cfa0:	ldr	r0, [fp, #-12]
   1cfa4:	mvn	r1, #0
   1cfa8:	add	r1, r0, r1
   1cfac:	str	r1, [fp, #-12]
   1cfb0:	cmp	r0, #0
   1cfb4:	bls	1d048 <__assert_fail@plt+0xbcc4>
   1cfb8:	ldr	r0, [fp, #-8]
   1cfbc:	ldr	r1, [fp, #-12]
   1cfc0:	add	r0, r0, r1
   1cfc4:	ldrb	r0, [r0]
   1cfc8:	ldr	r1, [sp, #4]
   1cfcc:	lsl	r0, r0, r1
   1cfd0:	ldr	r1, [sp, #8]
   1cfd4:	orr	r0, r1, r0
   1cfd8:	str	r0, [sp, #8]
   1cfdc:	ldr	r0, [sp, #16]
   1cfe0:	ldr	r1, [sp, #4]
   1cfe4:	add	r0, r1, r0
   1cfe8:	str	r0, [sp, #4]
   1cfec:	ldr	r0, [sp, #4]
   1cff0:	cmp	r0, #32
   1cff4:	bcc	1d044 <__assert_fail@plt+0xbcc0>
   1cff8:	ldr	r0, [sp, #4]
   1cffc:	sub	r0, r0, #32
   1d000:	str	r0, [sp, #4]
   1d004:	ldr	r0, [sp, #8]
   1d008:	ldr	r1, [fp, #-4]
   1d00c:	ldr	r2, [sp, #12]
   1d010:	add	r3, r2, #1
   1d014:	str	r3, [sp, #12]
   1d018:	add	r1, r1, r2, lsl #2
   1d01c:	str	r0, [r1]
   1d020:	ldr	r0, [fp, #-8]
   1d024:	ldr	r1, [fp, #-12]
   1d028:	add	r0, r0, r1
   1d02c:	ldrb	r0, [r0]
   1d030:	ldr	r1, [sp, #16]
   1d034:	ldr	r2, [sp, #4]
   1d038:	sub	r1, r1, r2
   1d03c:	lsr	r0, r0, r1
   1d040:	str	r0, [sp, #8]
   1d044:	b	1cfa0 <__assert_fail@plt+0xbc1c>
   1d048:	ldr	r0, [sp, #8]
   1d04c:	cmp	r0, #0
   1d050:	beq	1d074 <__assert_fail@plt+0xbcf0>
   1d054:	ldr	r0, [sp, #8]
   1d058:	ldr	r1, [fp, #-4]
   1d05c:	ldr	r2, [sp, #12]
   1d060:	add	r3, r2, #1
   1d064:	str	r3, [sp, #12]
   1d068:	add	r1, r1, r2, lsl #2
   1d06c:	str	r0, [r1]
   1d070:	b	1d084 <__assert_fail@plt+0xbd00>
   1d074:	ldr	r0, [fp, #-4]
   1d078:	ldr	r1, [sp, #12]
   1d07c:	bl	1b08c <__assert_fail@plt+0x9d08>
   1d080:	str	r0, [sp, #12]
   1d084:	ldr	r0, [sp, #12]
   1d088:	mov	sp, fp
   1d08c:	pop	{fp, pc}
   1d090:	push	{fp, lr}
   1d094:	mov	fp, sp
   1d098:	sub	sp, sp, #40	; 0x28
   1d09c:	ldr	ip, [fp, #8]
   1d0a0:	str	r0, [fp, #-4]
   1d0a4:	str	r1, [fp, #-8]
   1d0a8:	str	r2, [fp, #-12]
   1d0ac:	str	r3, [fp, #-16]
   1d0b0:	ldr	r0, [fp, #-12]
   1d0b4:	cmp	r0, #0
   1d0b8:	bls	1d0c0 <__assert_fail@plt+0xbd3c>
   1d0bc:	b	1d0e0 <__assert_fail@plt+0xbd5c>
   1d0c0:	movw	r0, #32060	; 0x7d3c
   1d0c4:	movt	r0, #3
   1d0c8:	movw	r1, #28968	; 0x7128
   1d0cc:	movt	r1, #3
   1d0d0:	movw	r2, #1370	; 0x55a
   1d0d4:	movw	r3, #32067	; 0x7d43
   1d0d8:	movt	r3, #3
   1d0dc:	bl	11384 <__assert_fail@plt>
   1d0e0:	ldr	r0, [fp, #-12]
   1d0e4:	sub	r0, r0, #1
   1d0e8:	ldr	r1, [fp, #8]
   1d0ec:	ldr	r1, [r1]
   1d0f0:	udiv	r2, r0, r1
   1d0f4:	mls	r0, r2, r1, r0
   1d0f8:	add	r0, r0, #1
   1d0fc:	str	r0, [sp, #12]
   1d100:	movw	r0, #0
   1d104:	str	r0, [sp, #8]
   1d108:	ldr	r0, [fp, #-8]
   1d10c:	ldr	r1, [sp, #8]
   1d110:	add	r2, r1, #1
   1d114:	str	r2, [sp, #8]
   1d118:	add	r0, r0, r1
   1d11c:	ldrb	r0, [r0]
   1d120:	str	r0, [sp, #16]
   1d124:	ldr	r0, [sp, #12]
   1d128:	mvn	r1, #0
   1d12c:	add	r0, r0, r1
   1d130:	str	r0, [sp, #12]
   1d134:	cmp	r0, #0
   1d138:	beq	1d16c <__assert_fail@plt+0xbde8>
   1d13c:	ldr	r0, [sp, #16]
   1d140:	ldr	r1, [fp, #-16]
   1d144:	mul	r0, r0, r1
   1d148:	ldr	r1, [fp, #-8]
   1d14c:	ldr	r2, [sp, #8]
   1d150:	add	r3, r2, #1
   1d154:	str	r3, [sp, #8]
   1d158:	add	r1, r1, r2
   1d15c:	ldrb	r1, [r1]
   1d160:	add	r0, r0, r1
   1d164:	str	r0, [sp, #16]
   1d168:	b	1d124 <__assert_fail@plt+0xbda0>
   1d16c:	ldr	r0, [sp, #16]
   1d170:	ldr	r1, [fp, #-4]
   1d174:	str	r0, [r1]
   1d178:	movw	r0, #1
   1d17c:	str	r0, [sp, #20]
   1d180:	ldr	r0, [sp, #8]
   1d184:	ldr	r1, [fp, #-12]
   1d188:	cmp	r0, r1
   1d18c:	bcs	1d26c <__assert_fail@plt+0xbee8>
   1d190:	ldr	r0, [fp, #-8]
   1d194:	ldr	r1, [sp, #8]
   1d198:	add	r2, r1, #1
   1d19c:	str	r2, [sp, #8]
   1d1a0:	add	r0, r0, r1
   1d1a4:	ldrb	r0, [r0]
   1d1a8:	str	r0, [sp, #16]
   1d1ac:	movw	r0, #1
   1d1b0:	str	r0, [sp, #12]
   1d1b4:	ldr	r0, [sp, #12]
   1d1b8:	ldr	r1, [fp, #8]
   1d1bc:	ldr	r1, [r1]
   1d1c0:	cmp	r0, r1
   1d1c4:	bcs	1d204 <__assert_fail@plt+0xbe80>
   1d1c8:	ldr	r0, [sp, #16]
   1d1cc:	ldr	r1, [fp, #-16]
   1d1d0:	mul	r0, r0, r1
   1d1d4:	ldr	r1, [fp, #-8]
   1d1d8:	ldr	r2, [sp, #8]
   1d1dc:	add	r3, r2, #1
   1d1e0:	str	r3, [sp, #8]
   1d1e4:	add	r1, r1, r2
   1d1e8:	ldrb	r1, [r1]
   1d1ec:	add	r0, r0, r1
   1d1f0:	str	r0, [sp, #16]
   1d1f4:	ldr	r0, [sp, #12]
   1d1f8:	add	r0, r0, #1
   1d1fc:	str	r0, [sp, #12]
   1d200:	b	1d1b4 <__assert_fail@plt+0xbe30>
   1d204:	ldr	r0, [fp, #-4]
   1d208:	ldr	r1, [fp, #-4]
   1d20c:	ldr	r2, [sp, #20]
   1d210:	ldr	r3, [fp, #8]
   1d214:	ldr	r3, [r3, #4]
   1d218:	bl	1b5c8 <__assert_fail@plt+0xa244>
   1d21c:	str	r0, [sp, #4]
   1d220:	ldr	r0, [fp, #-4]
   1d224:	ldr	r1, [fp, #-4]
   1d228:	ldr	r2, [sp, #20]
   1d22c:	ldr	r3, [sp, #16]
   1d230:	bl	1b140 <__assert_fail@plt+0x9dbc>
   1d234:	ldr	r1, [sp, #4]
   1d238:	add	r0, r1, r0
   1d23c:	str	r0, [sp, #4]
   1d240:	ldr	r0, [sp, #4]
   1d244:	cmp	r0, #0
   1d248:	bls	1d268 <__assert_fail@plt+0xbee4>
   1d24c:	ldr	r0, [sp, #4]
   1d250:	ldr	r1, [fp, #-4]
   1d254:	ldr	r2, [sp, #20]
   1d258:	add	r3, r2, #1
   1d25c:	str	r3, [sp, #20]
   1d260:	add	r1, r1, r2, lsl #2
   1d264:	str	r0, [r1]
   1d268:	b	1d180 <__assert_fail@plt+0xbdfc>
   1d26c:	ldr	r0, [sp, #8]
   1d270:	ldr	r1, [fp, #-12]
   1d274:	cmp	r0, r1
   1d278:	bne	1d280 <__assert_fail@plt+0xbefc>
   1d27c:	b	1d2a0 <__assert_fail@plt+0xbf1c>
   1d280:	movw	r0, #32175	; 0x7daf
   1d284:	movt	r0, #3
   1d288:	movw	r1, #28968	; 0x7128
   1d28c:	movt	r1, #3
   1d290:	movw	r2, #1394	; 0x572
   1d294:	movw	r3, #32067	; 0x7d43
   1d298:	movt	r3, #3
   1d29c:	bl	11384 <__assert_fail@plt>
   1d2a0:	ldr	r0, [sp, #20]
   1d2a4:	mov	sp, fp
   1d2a8:	pop	{fp, pc}
   1d2ac:	sub	sp, sp, #4
   1d2b0:	str	r0, [sp]
   1d2b4:	ldr	r0, [sp]
   1d2b8:	movw	r1, #0
   1d2bc:	str	r1, [r0]
   1d2c0:	ldr	r0, [sp]
   1d2c4:	str	r1, [r0, #4]
   1d2c8:	ldr	r0, [sp]
   1d2cc:	movw	r1, #28960	; 0x7120
   1d2d0:	movt	r1, #3
   1d2d4:	str	r1, [r0, #8]
   1d2d8:	add	sp, sp, #4
   1d2dc:	bx	lr
   1d2e0:	push	{fp, lr}
   1d2e4:	mov	fp, sp
   1d2e8:	sub	sp, sp, #16
   1d2ec:	str	r0, [fp, #-4]
   1d2f0:	str	r1, [sp, #8]
   1d2f4:	ldr	r0, [sp, #8]
   1d2f8:	sub	r1, r0, #1
   1d2fc:	cmp	r0, #0
   1d300:	movne	r0, r1
   1d304:	str	r0, [sp, #8]
   1d308:	ldr	r0, [sp, #8]
   1d30c:	lsr	r0, r0, #5
   1d310:	add	r0, r0, #1
   1d314:	str	r0, [sp, #4]
   1d318:	ldr	r0, [sp, #4]
   1d31c:	ldr	r1, [fp, #-4]
   1d320:	str	r0, [r1]
   1d324:	ldr	r0, [fp, #-4]
   1d328:	movw	r1, #0
   1d32c:	str	r1, [r0, #4]
   1d330:	ldr	r0, [sp, #4]
   1d334:	bl	1d348 <__assert_fail@plt+0xbfc4>
   1d338:	ldr	r1, [fp, #-4]
   1d33c:	str	r0, [r1, #8]
   1d340:	mov	sp, fp
   1d344:	pop	{fp, pc}
   1d348:	push	{fp, lr}
   1d34c:	mov	fp, sp
   1d350:	sub	sp, sp, #8
   1d354:	str	r0, [sp, #4]
   1d358:	movw	r0, #37156	; 0x9124
   1d35c:	movt	r0, #4
   1d360:	ldr	r0, [r0]
   1d364:	ldr	r1, [sp, #4]
   1d368:	lsl	r1, r1, #2
   1d36c:	str	r0, [sp]
   1d370:	mov	r0, r1
   1d374:	ldr	r1, [sp]
   1d378:	blx	r1
   1d37c:	mov	sp, fp
   1d380:	pop	{fp, pc}
   1d384:	push	{fp, lr}
   1d388:	mov	fp, sp
   1d38c:	sub	sp, sp, #8
   1d390:	str	r0, [sp, #4]
   1d394:	ldr	r0, [sp, #4]
   1d398:	ldr	r0, [r0]
   1d39c:	cmp	r0, #0
   1d3a0:	beq	1d3b8 <__assert_fail@plt+0xc034>
   1d3a4:	ldr	r0, [sp, #4]
   1d3a8:	ldr	r0, [r0, #8]
   1d3ac:	ldr	r1, [sp, #4]
   1d3b0:	ldr	r1, [r1]
   1d3b4:	bl	1d3c0 <__assert_fail@plt+0xc03c>
   1d3b8:	mov	sp, fp
   1d3bc:	pop	{fp, pc}
   1d3c0:	push	{fp, lr}
   1d3c4:	mov	fp, sp
   1d3c8:	sub	sp, sp, #16
   1d3cc:	str	r0, [fp, #-4]
   1d3d0:	str	r1, [sp, #8]
   1d3d4:	movw	r0, #37164	; 0x912c
   1d3d8:	movt	r0, #4
   1d3dc:	ldr	r0, [r0]
   1d3e0:	ldr	r1, [fp, #-4]
   1d3e4:	ldr	r2, [sp, #8]
   1d3e8:	lsl	r2, r2, #2
   1d3ec:	str	r0, [sp, #4]
   1d3f0:	mov	r0, r1
   1d3f4:	mov	r1, r2
   1d3f8:	ldr	r2, [sp, #4]
   1d3fc:	blx	r2
   1d400:	mov	sp, fp
   1d404:	pop	{fp, pc}
   1d408:	push	{fp, lr}
   1d40c:	mov	fp, sp
   1d410:	sub	sp, sp, #16
   1d414:	str	r0, [fp, #-4]
   1d418:	str	r1, [sp, #8]
   1d41c:	ldr	r0, [sp, #8]
   1d420:	cmp	r0, #0
   1d424:	blt	1d438 <__assert_fail@plt+0xc0b4>
   1d428:	ldr	r0, [fp, #-4]
   1d42c:	ldr	r1, [sp, #8]
   1d430:	bl	1d4a4 <__assert_fail@plt+0xc120>
   1d434:	b	1d49c <__assert_fail@plt+0xc118>
   1d438:	ldr	r0, [fp, #-4]
   1d43c:	mvn	r1, #0
   1d440:	str	r1, [r0, #4]
   1d444:	ldr	r0, [sp, #8]
   1d448:	add	r0, r0, #1
   1d44c:	sub	r0, r0, #1
   1d450:	movw	r1, #0
   1d454:	sub	r0, r1, r0
   1d458:	ldr	r1, [fp, #-4]
   1d45c:	ldr	r1, [r1]
   1d460:	movw	r2, #1
   1d464:	cmp	r2, r1
   1d468:	str	r0, [sp, #4]
   1d46c:	ble	1d484 <__assert_fail@plt+0xc100>
   1d470:	ldr	r0, [fp, #-4]
   1d474:	movw	r1, #1
   1d478:	bl	1d52c <__assert_fail@plt+0xc1a8>
   1d47c:	str	r0, [sp]
   1d480:	b	1d490 <__assert_fail@plt+0xc10c>
   1d484:	ldr	r0, [fp, #-4]
   1d488:	ldr	r0, [r0, #8]
   1d48c:	str	r0, [sp]
   1d490:	ldr	r0, [sp]
   1d494:	ldr	r1, [sp, #4]
   1d498:	str	r1, [r0]
   1d49c:	mov	sp, fp
   1d4a0:	pop	{fp, pc}
   1d4a4:	push	{fp, lr}
   1d4a8:	mov	fp, sp
   1d4ac:	sub	sp, sp, #16
   1d4b0:	str	r0, [fp, #-4]
   1d4b4:	str	r1, [sp, #8]
   1d4b8:	ldr	r0, [sp, #8]
   1d4bc:	cmp	r0, #0
   1d4c0:	bls	1d518 <__assert_fail@plt+0xc194>
   1d4c4:	ldr	r0, [fp, #-4]
   1d4c8:	movw	r1, #1
   1d4cc:	str	r1, [r0, #4]
   1d4d0:	ldr	r0, [sp, #8]
   1d4d4:	ldr	r2, [fp, #-4]
   1d4d8:	ldr	r2, [r2]
   1d4dc:	cmp	r1, r2
   1d4e0:	str	r0, [sp, #4]
   1d4e4:	ble	1d4fc <__assert_fail@plt+0xc178>
   1d4e8:	ldr	r0, [fp, #-4]
   1d4ec:	movw	r1, #1
   1d4f0:	bl	1d52c <__assert_fail@plt+0xc1a8>
   1d4f4:	str	r0, [sp]
   1d4f8:	b	1d508 <__assert_fail@plt+0xc184>
   1d4fc:	ldr	r0, [fp, #-4]
   1d500:	ldr	r0, [r0, #8]
   1d504:	str	r0, [sp]
   1d508:	ldr	r0, [sp]
   1d50c:	ldr	r1, [sp, #4]
   1d510:	str	r1, [r0]
   1d514:	b	1d524 <__assert_fail@plt+0xc1a0>
   1d518:	ldr	r0, [fp, #-4]
   1d51c:	movw	r1, #0
   1d520:	str	r1, [r0, #4]
   1d524:	mov	sp, fp
   1d528:	pop	{fp, pc}
   1d52c:	push	{fp, lr}
   1d530:	mov	fp, sp
   1d534:	sub	sp, sp, #16
   1d538:	str	r0, [fp, #-4]
   1d53c:	str	r1, [sp, #8]
   1d540:	ldr	r0, [sp, #8]
   1d544:	cmp	r0, #1
   1d548:	ble	1d558 <__assert_fail@plt+0xc1d4>
   1d54c:	ldr	r0, [sp, #8]
   1d550:	str	r0, [sp, #4]
   1d554:	b	1d564 <__assert_fail@plt+0xc1e0>
   1d558:	movw	r0, #1
   1d55c:	str	r0, [sp, #4]
   1d560:	b	1d564 <__assert_fail@plt+0xc1e0>
   1d564:	ldr	r0, [sp, #4]
   1d568:	str	r0, [sp, #8]
   1d56c:	ldr	r0, [fp, #-4]
   1d570:	ldr	r0, [r0]
   1d574:	cmp	r0, #0
   1d578:	beq	1d5a0 <__assert_fail@plt+0xc21c>
   1d57c:	ldr	r0, [fp, #-4]
   1d580:	ldr	r0, [r0, #8]
   1d584:	ldr	r1, [fp, #-4]
   1d588:	ldr	r1, [r1]
   1d58c:	ldr	r2, [sp, #8]
   1d590:	bl	26764 <__assert_fail@plt+0x153e0>
   1d594:	ldr	r1, [fp, #-4]
   1d598:	str	r0, [r1, #8]
   1d59c:	b	1d5b0 <__assert_fail@plt+0xc22c>
   1d5a0:	ldr	r0, [sp, #8]
   1d5a4:	bl	1d348 <__assert_fail@plt+0xbfc4>
   1d5a8:	ldr	r1, [fp, #-4]
   1d5ac:	str	r0, [r1, #8]
   1d5b0:	ldr	r0, [sp, #8]
   1d5b4:	ldr	r1, [fp, #-4]
   1d5b8:	str	r0, [r1]
   1d5bc:	ldr	r0, [fp, #-4]
   1d5c0:	ldr	r0, [r0, #4]
   1d5c4:	cmp	r0, #0
   1d5c8:	blt	1d5dc <__assert_fail@plt+0xc258>
   1d5cc:	ldr	r0, [fp, #-4]
   1d5d0:	ldr	r0, [r0, #4]
   1d5d4:	str	r0, [sp]
   1d5d8:	b	1d5f0 <__assert_fail@plt+0xc26c>
   1d5dc:	ldr	r0, [fp, #-4]
   1d5e0:	ldr	r0, [r0, #4]
   1d5e4:	movw	r1, #0
   1d5e8:	sub	r0, r1, r0
   1d5ec:	str	r0, [sp]
   1d5f0:	ldr	r0, [sp]
   1d5f4:	ldr	r1, [sp, #8]
   1d5f8:	cmp	r0, r1
   1d5fc:	ble	1d60c <__assert_fail@plt+0xc288>
   1d600:	ldr	r0, [fp, #-4]
   1d604:	movw	r1, #0
   1d608:	str	r1, [r0, #4]
   1d60c:	ldr	r0, [fp, #-4]
   1d610:	ldr	r0, [r0, #8]
   1d614:	mov	sp, fp
   1d618:	pop	{fp, pc}
   1d61c:	push	{fp, lr}
   1d620:	mov	fp, sp
   1d624:	sub	sp, sp, #24
   1d628:	str	r0, [fp, #-4]
   1d62c:	str	r1, [fp, #-8]
   1d630:	ldr	r0, [fp, #-4]
   1d634:	ldr	r1, [fp, #-8]
   1d638:	cmp	r0, r1
   1d63c:	beq	1d6dc <__assert_fail@plt+0xc358>
   1d640:	ldr	r0, [fp, #-8]
   1d644:	ldr	r0, [r0, #4]
   1d648:	cmp	r0, #0
   1d64c:	blt	1d660 <__assert_fail@plt+0xc2dc>
   1d650:	ldr	r0, [fp, #-8]
   1d654:	ldr	r0, [r0, #4]
   1d658:	str	r0, [sp, #4]
   1d65c:	b	1d674 <__assert_fail@plt+0xc2f0>
   1d660:	ldr	r0, [fp, #-8]
   1d664:	ldr	r0, [r0, #4]
   1d668:	movw	r1, #0
   1d66c:	sub	r0, r1, r0
   1d670:	str	r0, [sp, #4]
   1d674:	ldr	r0, [sp, #4]
   1d678:	str	r0, [sp, #12]
   1d67c:	ldr	r0, [sp, #12]
   1d680:	ldr	r1, [fp, #-4]
   1d684:	ldr	r1, [r1]
   1d688:	cmp	r0, r1
   1d68c:	ble	1d6a4 <__assert_fail@plt+0xc320>
   1d690:	ldr	r0, [fp, #-4]
   1d694:	ldr	r1, [sp, #12]
   1d698:	bl	1d52c <__assert_fail@plt+0xc1a8>
   1d69c:	str	r0, [sp]
   1d6a0:	b	1d6b0 <__assert_fail@plt+0xc32c>
   1d6a4:	ldr	r0, [fp, #-4]
   1d6a8:	ldr	r0, [r0, #8]
   1d6ac:	str	r0, [sp]
   1d6b0:	ldr	r0, [sp]
   1d6b4:	str	r0, [sp, #8]
   1d6b8:	ldr	r0, [sp, #8]
   1d6bc:	ldr	r1, [fp, #-8]
   1d6c0:	ldr	r1, [r1, #8]
   1d6c4:	ldr	r2, [sp, #12]
   1d6c8:	bl	1af18 <__assert_fail@plt+0x9b94>
   1d6cc:	ldr	r0, [fp, #-8]
   1d6d0:	ldr	r0, [r0, #4]
   1d6d4:	ldr	r1, [fp, #-4]
   1d6d8:	str	r0, [r1, #4]
   1d6dc:	mov	sp, fp
   1d6e0:	pop	{fp, pc}
   1d6e4:	push	{fp, lr}
   1d6e8:	mov	fp, sp
   1d6ec:	sub	sp, sp, #8
   1d6f0:	str	r0, [sp, #4]
   1d6f4:	str	r1, [sp]
   1d6f8:	ldr	r0, [sp, #4]
   1d6fc:	bl	1d2ac <__assert_fail@plt+0xbf28>
   1d700:	ldr	r0, [sp, #4]
   1d704:	ldr	r1, [sp]
   1d708:	bl	1d408 <__assert_fail@plt+0xc084>
   1d70c:	mov	sp, fp
   1d710:	pop	{fp, pc}
   1d714:	push	{fp, lr}
   1d718:	mov	fp, sp
   1d71c:	sub	sp, sp, #8
   1d720:	str	r0, [sp, #4]
   1d724:	str	r1, [sp]
   1d728:	ldr	r0, [sp, #4]
   1d72c:	bl	1d2ac <__assert_fail@plt+0xbf28>
   1d730:	ldr	r0, [sp, #4]
   1d734:	ldr	r1, [sp]
   1d738:	bl	1d4a4 <__assert_fail@plt+0xc120>
   1d73c:	mov	sp, fp
   1d740:	pop	{fp, pc}
   1d744:	push	{fp, lr}
   1d748:	mov	fp, sp
   1d74c:	sub	sp, sp, #8
   1d750:	str	r0, [sp, #4]
   1d754:	str	r1, [sp]
   1d758:	ldr	r0, [sp, #4]
   1d75c:	bl	1d2ac <__assert_fail@plt+0xbf28>
   1d760:	ldr	r0, [sp, #4]
   1d764:	ldr	r1, [sp]
   1d768:	bl	1d61c <__assert_fail@plt+0xc298>
   1d76c:	mov	sp, fp
   1d770:	pop	{fp, pc}
   1d774:	push	{fp, lr}
   1d778:	mov	fp, sp
   1d77c:	sub	sp, sp, #8
   1d780:	ldr	r1, [pc, #68]	; 1d7cc <__assert_fail@plt+0xc448>
   1d784:	str	r0, [sp, #4]
   1d788:	ldr	r0, [sp, #4]
   1d78c:	bl	1d7d4 <__assert_fail@plt+0xc450>
   1d790:	cmp	r0, #0
   1d794:	movw	r0, #0
   1d798:	str	r0, [sp]
   1d79c:	bgt	1d7bc <__assert_fail@plt+0xc438>
   1d7a0:	ldr	r1, [pc, #40]	; 1d7d0 <__assert_fail@plt+0xc44c>
   1d7a4:	ldr	r0, [sp, #4]
   1d7a8:	bl	1d7d4 <__assert_fail@plt+0xc450>
   1d7ac:	cmp	r0, #0
   1d7b0:	movw	r0, #0
   1d7b4:	movge	r0, #1
   1d7b8:	str	r0, [sp]
   1d7bc:	ldr	r0, [sp]
   1d7c0:	and	r0, r0, #1
   1d7c4:	mov	sp, fp
   1d7c8:	pop	{fp, pc}
   1d7cc:	svcvc	0x00ffffff
   1d7d0:	andhi	r0, r0, r0
   1d7d4:	push	{fp, lr}
   1d7d8:	mov	fp, sp
   1d7dc:	sub	sp, sp, #16
   1d7e0:	str	r0, [sp, #8]
   1d7e4:	str	r1, [sp, #4]
   1d7e8:	ldr	r0, [sp, #8]
   1d7ec:	ldr	r0, [r0, #4]
   1d7f0:	str	r0, [sp]
   1d7f4:	ldr	r0, [sp, #4]
   1d7f8:	cmp	r0, #0
   1d7fc:	blt	1d814 <__assert_fail@plt+0xc490>
   1d800:	ldr	r0, [sp, #8]
   1d804:	ldr	r1, [sp, #4]
   1d808:	bl	1e708 <__assert_fail@plt+0xd384>
   1d80c:	str	r0, [fp, #-4]
   1d810:	b	1d854 <__assert_fail@plt+0xc4d0>
   1d814:	ldr	r0, [sp]
   1d818:	cmp	r0, #0
   1d81c:	blt	1d82c <__assert_fail@plt+0xc4a8>
   1d820:	movw	r0, #1
   1d824:	str	r0, [fp, #-4]
   1d828:	b	1d854 <__assert_fail@plt+0xc4d0>
   1d82c:	ldr	r0, [sp, #8]
   1d830:	ldr	r1, [sp, #4]
   1d834:	add	r1, r1, #1
   1d838:	sub	r1, r1, #1
   1d83c:	movw	r2, #0
   1d840:	sub	r1, r2, r1
   1d844:	bl	1da00 <__assert_fail@plt+0xc67c>
   1d848:	movw	r1, #0
   1d84c:	sub	r0, r1, r0
   1d850:	str	r0, [fp, #-4]
   1d854:	ldr	r0, [fp, #-4]
   1d858:	mov	sp, fp
   1d85c:	pop	{fp, pc}
   1d860:	push	{fp, lr}
   1d864:	mov	fp, sp
   1d868:	sub	sp, sp, #16
   1d86c:	str	r0, [fp, #-4]
   1d870:	ldr	r0, [fp, #-4]
   1d874:	ldr	r0, [r0, #4]
   1d878:	str	r0, [sp, #8]
   1d87c:	ldr	r0, [sp, #8]
   1d880:	cmp	r0, #0
   1d884:	movw	r0, #0
   1d888:	str	r0, [sp, #4]
   1d88c:	blt	1d8b0 <__assert_fail@plt+0xc52c>
   1d890:	ldr	r0, [fp, #-4]
   1d894:	ldr	r0, [r0, #8]
   1d898:	ldr	r1, [sp, #8]
   1d89c:	bl	1d8c0 <__assert_fail@plt+0xc53c>
   1d8a0:	cmp	r0, #0
   1d8a4:	movw	r0, #0
   1d8a8:	movne	r0, #1
   1d8ac:	str	r0, [sp, #4]
   1d8b0:	ldr	r0, [sp, #4]
   1d8b4:	and	r0, r0, #1
   1d8b8:	mov	sp, fp
   1d8bc:	pop	{fp, pc}
   1d8c0:	sub	sp, sp, #24
   1d8c4:	str	r0, [sp, #20]
   1d8c8:	str	r1, [sp, #16]
   1d8cc:	movw	r0, #1
   1d8d0:	str	r0, [sp, #12]
   1d8d4:	movw	r0, #0
   1d8d8:	str	r0, [sp, #8]
   1d8dc:	ldr	r0, [sp, #16]
   1d8e0:	ldr	r1, [sp, #12]
   1d8e4:	cmp	r0, r1
   1d8e8:	movw	r0, #1
   1d8ec:	str	r0, [sp, #4]
   1d8f0:	ble	1d93c <__assert_fail@plt+0xc5b8>
   1d8f4:	ldr	r0, [sp, #20]
   1d8f8:	ldr	r1, [sp, #12]
   1d8fc:	add	r0, r0, r1, lsl #2
   1d900:	ldr	r0, [r0]
   1d904:	ldr	r1, [sp, #8]
   1d908:	cmp	r0, r1
   1d90c:	movw	r0, #0
   1d910:	str	r0, [sp]
   1d914:	bcs	1d934 <__assert_fail@plt+0xc5b0>
   1d918:	ldr	r0, [sp, #16]
   1d91c:	ldr	r1, [sp, #12]
   1d920:	add	r1, r1, #1
   1d924:	cmp	r0, r1
   1d928:	movw	r0, #0
   1d92c:	moveq	r0, #1
   1d930:	str	r0, [sp]
   1d934:	ldr	r0, [sp]
   1d938:	str	r0, [sp, #4]
   1d93c:	ldr	r0, [sp, #4]
   1d940:	and	r0, r0, #1
   1d944:	add	sp, sp, #24
   1d948:	bx	lr
   1d94c:	push	{fp, lr}
   1d950:	mov	fp, sp
   1d954:	sub	sp, sp, #8
   1d958:	ldr	r1, [pc, #68]	; 1d9a4 <__assert_fail@plt+0xc620>
   1d95c:	str	r0, [sp, #4]
   1d960:	ldr	r0, [sp, #4]
   1d964:	bl	1d7d4 <__assert_fail@plt+0xc450>
   1d968:	cmp	r0, #0
   1d96c:	movw	r0, #0
   1d970:	str	r0, [sp]
   1d974:	bgt	1d994 <__assert_fail@plt+0xc610>
   1d978:	ldr	r1, [pc, #40]	; 1d9a8 <__assert_fail@plt+0xc624>
   1d97c:	ldr	r0, [sp, #4]
   1d980:	bl	1d7d4 <__assert_fail@plt+0xc450>
   1d984:	cmp	r0, #0
   1d988:	movw	r0, #0
   1d98c:	movge	r0, #1
   1d990:	str	r0, [sp]
   1d994:	ldr	r0, [sp]
   1d998:	and	r0, r0, #1
   1d99c:	mov	sp, fp
   1d9a0:	pop	{fp, pc}
   1d9a4:	svcvc	0x00ffffff
   1d9a8:	andhi	r0, r0, r0
   1d9ac:	push	{fp, lr}
   1d9b0:	mov	fp, sp
   1d9b4:	sub	sp, sp, #8
   1d9b8:	str	r0, [sp, #4]
   1d9bc:	ldr	r0, [sp, #4]
   1d9c0:	ldr	r0, [r0, #4]
   1d9c4:	cmp	r0, #0
   1d9c8:	movw	r0, #0
   1d9cc:	str	r0, [sp]
   1d9d0:	blt	1d9f0 <__assert_fail@plt+0xc66c>
   1d9d4:	ldr	r0, [sp, #4]
   1d9d8:	mvn	r1, #0
   1d9dc:	bl	1da00 <__assert_fail@plt+0xc67c>
   1d9e0:	cmp	r0, #0
   1d9e4:	movw	r0, #0
   1d9e8:	movle	r0, #1
   1d9ec:	str	r0, [sp]
   1d9f0:	ldr	r0, [sp]
   1d9f4:	and	r0, r0, #1
   1d9f8:	mov	sp, fp
   1d9fc:	pop	{fp, pc}
   1da00:	push	{fp, lr}
   1da04:	mov	fp, sp
   1da08:	sub	sp, sp, #24
   1da0c:	str	r0, [fp, #-8]
   1da10:	str	r1, [sp, #12]
   1da14:	ldr	r0, [fp, #-8]
   1da18:	ldr	r0, [r0, #4]
   1da1c:	cmp	r0, #0
   1da20:	blt	1da34 <__assert_fail@plt+0xc6b0>
   1da24:	ldr	r0, [fp, #-8]
   1da28:	ldr	r0, [r0, #4]
   1da2c:	str	r0, [sp]
   1da30:	b	1da48 <__assert_fail@plt+0xc6c4>
   1da34:	ldr	r0, [fp, #-8]
   1da38:	ldr	r0, [r0, #4]
   1da3c:	movw	r1, #0
   1da40:	sub	r0, r1, r0
   1da44:	str	r0, [sp]
   1da48:	ldr	r0, [sp]
   1da4c:	str	r0, [sp, #8]
   1da50:	ldr	r0, [fp, #-8]
   1da54:	ldr	r0, [r0, #8]
   1da58:	ldr	r1, [sp, #8]
   1da5c:	bl	1d8c0 <__assert_fail@plt+0xc53c>
   1da60:	cmp	r0, #0
   1da64:	bne	1da74 <__assert_fail@plt+0xc6f0>
   1da68:	movw	r0, #1
   1da6c:	str	r0, [fp, #-4]
   1da70:	b	1dab8 <__assert_fail@plt+0xc734>
   1da74:	ldr	r0, [fp, #-8]
   1da78:	bl	1dbf4 <__assert_fail@plt+0xc870>
   1da7c:	str	r0, [sp, #4]
   1da80:	ldr	r0, [sp, #4]
   1da84:	ldr	r1, [sp, #12]
   1da88:	cmp	r0, r1
   1da8c:	movw	r0, #0
   1da90:	movhi	r0, #1
   1da94:	and	r0, r0, #1
   1da98:	ldr	r1, [sp, #4]
   1da9c:	ldr	r2, [sp, #12]
   1daa0:	cmp	r1, r2
   1daa4:	movw	r1, #0
   1daa8:	movcc	r1, #1
   1daac:	and	r1, r1, #1
   1dab0:	sub	r0, r0, r1
   1dab4:	str	r0, [fp, #-4]
   1dab8:	ldr	r0, [fp, #-4]
   1dabc:	mov	sp, fp
   1dac0:	pop	{fp, pc}
   1dac4:	push	{fp, lr}
   1dac8:	mov	fp, sp
   1dacc:	sub	sp, sp, #8
   1dad0:	str	r0, [sp, #4]
   1dad4:	ldr	r0, [sp, #4]
   1dad8:	movw	r1, #32767	; 0x7fff
   1dadc:	bl	1d7d4 <__assert_fail@plt+0xc450>
   1dae0:	cmp	r0, #0
   1dae4:	movw	r0, #0
   1dae8:	str	r0, [sp]
   1daec:	bgt	1db0c <__assert_fail@plt+0xc788>
   1daf0:	ldr	r1, [pc, #36]	; 1db1c <__assert_fail@plt+0xc798>
   1daf4:	ldr	r0, [sp, #4]
   1daf8:	bl	1d7d4 <__assert_fail@plt+0xc450>
   1dafc:	cmp	r0, #0
   1db00:	movw	r0, #0
   1db04:	movge	r0, #1
   1db08:	str	r0, [sp]
   1db0c:	ldr	r0, [sp]
   1db10:	and	r0, r0, #1
   1db14:	mov	sp, fp
   1db18:	pop	{fp, pc}
   1db1c:			; <UNDEFINED> instruction: 0xffff8000
   1db20:	push	{fp, lr}
   1db24:	mov	fp, sp
   1db28:	sub	sp, sp, #8
   1db2c:	str	r0, [sp, #4]
   1db30:	ldr	r0, [sp, #4]
   1db34:	ldr	r0, [r0, #4]
   1db38:	cmp	r0, #0
   1db3c:	movw	r0, #0
   1db40:	str	r0, [sp]
   1db44:	blt	1db64 <__assert_fail@plt+0xc7e0>
   1db48:	ldr	r0, [sp, #4]
   1db4c:	movw	r1, #65535	; 0xffff
   1db50:	bl	1da00 <__assert_fail@plt+0xc67c>
   1db54:	cmp	r0, #0
   1db58:	movw	r0, #0
   1db5c:	movle	r0, #1
   1db60:	str	r0, [sp]
   1db64:	ldr	r0, [sp]
   1db68:	and	r0, r0, #1
   1db6c:	mov	sp, fp
   1db70:	pop	{fp, pc}
   1db74:	push	{fp, lr}
   1db78:	mov	fp, sp
   1db7c:	sub	sp, sp, #16
   1db80:	str	r0, [sp, #8]
   1db84:	ldr	r0, [sp, #8]
   1db88:	bl	1dbf4 <__assert_fail@plt+0xc870>
   1db8c:	str	r0, [sp, #4]
   1db90:	movw	r0, #1
   1db94:	str	r0, [sp]
   1db98:	ldr	r0, [sp, #8]
   1db9c:	ldr	r0, [r0, #4]
   1dba0:	cmp	r0, #0
   1dba4:	bge	1dbd4 <__assert_fail@plt+0xc850>
   1dba8:	ldr	r0, [pc, #64]	; 1dbf0 <__assert_fail@plt+0xc86c>
   1dbac:	ldr	r1, [sp]
   1dbb0:	movw	r2, #0
   1dbb4:	sub	r1, r2, r1
   1dbb8:	ldr	r2, [sp, #4]
   1dbbc:	ldr	r3, [sp]
   1dbc0:	sub	r2, r2, r3
   1dbc4:	and	r0, r2, r0
   1dbc8:	sub	r0, r1, r0
   1dbcc:	str	r0, [fp, #-4]
   1dbd0:	b	1dbe4 <__assert_fail@plt+0xc860>
   1dbd4:	ldr	r0, [pc, #20]	; 1dbf0 <__assert_fail@plt+0xc86c>
   1dbd8:	ldr	r1, [sp, #4]
   1dbdc:	and	r0, r1, r0
   1dbe0:	str	r0, [fp, #-4]
   1dbe4:	ldr	r0, [fp, #-4]
   1dbe8:	mov	sp, fp
   1dbec:	pop	{fp, pc}
   1dbf0:	svcvc	0x00ffffff
   1dbf4:	sub	sp, sp, #8
   1dbf8:	str	r0, [sp, #4]
   1dbfc:	ldr	r0, [sp, #4]
   1dc00:	ldr	r0, [r0, #4]
   1dc04:	cmp	r0, #0
   1dc08:	bne	1dc18 <__assert_fail@plt+0xc894>
   1dc0c:	movw	r0, #0
   1dc10:	str	r0, [sp]
   1dc14:	b	1dc28 <__assert_fail@plt+0xc8a4>
   1dc18:	ldr	r0, [sp, #4]
   1dc1c:	ldr	r0, [r0, #8]
   1dc20:	ldr	r0, [r0]
   1dc24:	str	r0, [sp]
   1dc28:	ldr	r0, [sp]
   1dc2c:	add	sp, sp, #8
   1dc30:	bx	lr
   1dc34:	sub	sp, sp, #8
   1dc38:	str	r0, [sp, #4]
   1dc3c:	ldr	r0, [sp, #4]
   1dc40:	ldr	r0, [r0, #4]
   1dc44:	cmp	r0, #0
   1dc48:	blt	1dc5c <__assert_fail@plt+0xc8d8>
   1dc4c:	ldr	r0, [sp, #4]
   1dc50:	ldr	r0, [r0, #4]
   1dc54:	str	r0, [sp]
   1dc58:	b	1dc70 <__assert_fail@plt+0xc8ec>
   1dc5c:	ldr	r0, [sp, #4]
   1dc60:	ldr	r0, [r0, #4]
   1dc64:	movw	r1, #0
   1dc68:	sub	r0, r1, r0
   1dc6c:	str	r0, [sp]
   1dc70:	ldr	r0, [sp]
   1dc74:	add	sp, sp, #8
   1dc78:	bx	lr
   1dc7c:	sub	sp, sp, #20
   1dc80:	str	r0, [sp, #12]
   1dc84:	str	r1, [sp, #8]
   1dc88:	ldr	r0, [sp, #8]
   1dc8c:	cmp	r0, #0
   1dc90:	blt	1dcfc <__assert_fail@plt+0xc978>
   1dc94:	ldr	r0, [sp, #8]
   1dc98:	ldr	r1, [sp, #12]
   1dc9c:	ldr	r1, [r1, #4]
   1dca0:	cmp	r1, #0
   1dca4:	str	r0, [sp, #4]
   1dca8:	blt	1dcbc <__assert_fail@plt+0xc938>
   1dcac:	ldr	r0, [sp, #12]
   1dcb0:	ldr	r0, [r0, #4]
   1dcb4:	str	r0, [sp]
   1dcb8:	b	1dcd0 <__assert_fail@plt+0xc94c>
   1dcbc:	ldr	r0, [sp, #12]
   1dcc0:	ldr	r0, [r0, #4]
   1dcc4:	movw	r1, #0
   1dcc8:	sub	r0, r1, r0
   1dccc:	str	r0, [sp]
   1dcd0:	ldr	r0, [sp]
   1dcd4:	ldr	r1, [sp, #4]
   1dcd8:	cmp	r1, r0
   1dcdc:	bge	1dcfc <__assert_fail@plt+0xc978>
   1dce0:	ldr	r0, [sp, #12]
   1dce4:	ldr	r0, [r0, #8]
   1dce8:	ldr	r1, [sp, #8]
   1dcec:	add	r0, r0, r1, lsl #2
   1dcf0:	ldr	r0, [r0]
   1dcf4:	str	r0, [sp, #16]
   1dcf8:	b	1dd04 <__assert_fail@plt+0xc980>
   1dcfc:	movw	r0, #0
   1dd00:	str	r0, [sp, #16]
   1dd04:	ldr	r0, [sp, #16]
   1dd08:	add	sp, sp, #20
   1dd0c:	bx	lr
   1dd10:	push	{fp, lr}
   1dd14:	mov	fp, sp
   1dd18:	sub	sp, sp, #8
   1dd1c:	str	r0, [sp, #4]
   1dd20:	str	r1, [sp]
   1dd24:	ldr	r0, [sp, #4]
   1dd28:	ldr	r1, [sp]
   1dd2c:	sub	r2, r1, #1
   1dd30:	cmp	r1, #0
   1dd34:	movne	r1, r2
   1dd38:	lsr	r1, r1, #5
   1dd3c:	add	r1, r1, #1
   1dd40:	bl	1d52c <__assert_fail@plt+0xc1a8>
   1dd44:	mov	sp, fp
   1dd48:	pop	{fp, pc}
   1dd4c:	sub	sp, sp, #4
   1dd50:	str	r0, [sp]
   1dd54:	ldr	r0, [sp]
   1dd58:	ldr	r0, [r0, #8]
   1dd5c:	add	sp, sp, #4
   1dd60:	bx	lr
   1dd64:	push	{fp, lr}
   1dd68:	mov	fp, sp
   1dd6c:	sub	sp, sp, #16
   1dd70:	str	r0, [fp, #-4]
   1dd74:	str	r1, [sp, #8]
   1dd78:	ldr	r0, [sp, #8]
   1dd7c:	cmp	r0, #0
   1dd80:	ble	1dd88 <__assert_fail@plt+0xca04>
   1dd84:	b	1dda8 <__assert_fail@plt+0xca24>
   1dd88:	movw	r0, #32349	; 0x7e5d
   1dd8c:	movt	r0, #3
   1dd90:	movw	r1, #28968	; 0x7128
   1dd94:	movt	r1, #3
   1dd98:	movw	r2, #1663	; 0x67f
   1dd9c:	movw	r3, #29851	; 0x749b
   1dda0:	movt	r3, #3
   1dda4:	bl	11384 <__assert_fail@plt>
   1dda8:	ldr	r0, [sp, #8]
   1ddac:	ldr	r1, [fp, #-4]
   1ddb0:	ldr	r1, [r1]
   1ddb4:	cmp	r0, r1
   1ddb8:	ble	1ddd0 <__assert_fail@plt+0xca4c>
   1ddbc:	ldr	r0, [fp, #-4]
   1ddc0:	ldr	r1, [sp, #8]
   1ddc4:	bl	1d52c <__assert_fail@plt+0xc1a8>
   1ddc8:	str	r0, [sp, #4]
   1ddcc:	b	1dddc <__assert_fail@plt+0xca58>
   1ddd0:	ldr	r0, [fp, #-4]
   1ddd4:	ldr	r0, [r0, #8]
   1ddd8:	str	r0, [sp, #4]
   1dddc:	ldr	r0, [sp, #4]
   1dde0:	mov	sp, fp
   1dde4:	pop	{fp, pc}
   1dde8:	push	{fp, lr}
   1ddec:	mov	fp, sp
   1ddf0:	sub	sp, sp, #8
   1ddf4:	str	r0, [sp, #4]
   1ddf8:	str	r1, [sp]
   1ddfc:	ldr	r0, [sp, #4]
   1de00:	ldr	r1, [sp]
   1de04:	bl	1dd64 <__assert_fail@plt+0xc9e0>
   1de08:	mov	sp, fp
   1de0c:	pop	{fp, pc}
   1de10:	push	{fp, lr}
   1de14:	mov	fp, sp
   1de18:	sub	sp, sp, #32
   1de1c:	str	r0, [fp, #-4]
   1de20:	str	r1, [fp, #-8]
   1de24:	ldr	r0, [fp, #-4]
   1de28:	ldr	r0, [r0, #8]
   1de2c:	ldr	r1, [fp, #-8]
   1de30:	cmp	r1, #0
   1de34:	str	r0, [sp, #16]
   1de38:	blt	1de48 <__assert_fail@plt+0xcac4>
   1de3c:	ldr	r0, [fp, #-8]
   1de40:	str	r0, [sp, #12]
   1de44:	b	1de58 <__assert_fail@plt+0xcad4>
   1de48:	ldr	r0, [fp, #-8]
   1de4c:	movw	r1, #0
   1de50:	sub	r0, r1, r0
   1de54:	str	r0, [sp, #12]
   1de58:	ldr	r0, [sp, #12]
   1de5c:	ldr	r1, [sp, #16]
   1de60:	str	r0, [sp, #8]
   1de64:	mov	r0, r1
   1de68:	ldr	r1, [sp, #8]
   1de6c:	bl	1b08c <__assert_fail@plt+0x9d08>
   1de70:	str	r0, [fp, #-12]
   1de74:	ldr	r0, [fp, #-8]
   1de78:	cmp	r0, #0
   1de7c:	bge	1de94 <__assert_fail@plt+0xcb10>
   1de80:	ldr	r0, [fp, #-12]
   1de84:	movw	r1, #0
   1de88:	sub	r0, r1, r0
   1de8c:	str	r0, [sp, #4]
   1de90:	b	1de9c <__assert_fail@plt+0xcb18>
   1de94:	ldr	r0, [fp, #-12]
   1de98:	str	r0, [sp, #4]
   1de9c:	ldr	r0, [sp, #4]
   1dea0:	ldr	r1, [fp, #-4]
   1dea4:	str	r0, [r1, #4]
   1dea8:	mov	sp, fp
   1deac:	pop	{fp, pc}
   1deb0:	push	{fp, lr}
   1deb4:	mov	fp, sp
   1deb8:	sub	sp, sp, #16
   1debc:	str	r0, [fp, #-4]
   1dec0:	str	r1, [sp, #8]
   1dec4:	str	r2, [sp, #4]
   1dec8:	ldr	r0, [fp, #-4]
   1decc:	ldr	r1, [sp, #8]
   1ded0:	ldr	r2, [sp, #4]
   1ded4:	bl	1defc <__assert_fail@plt+0xcb78>
   1ded8:	ldr	r1, [fp, #-4]
   1dedc:	ldr	r2, [sp, #4]
   1dee0:	str	r0, [sp]
   1dee4:	mov	r0, r1
   1dee8:	mov	r1, r2
   1deec:	bl	1de10 <__assert_fail@plt+0xca8c>
   1def0:	ldr	r0, [fp, #-4]
   1def4:	mov	sp, fp
   1def8:	pop	{fp, pc}
   1defc:	sub	sp, sp, #12
   1df00:	str	r0, [sp, #8]
   1df04:	str	r1, [sp, #4]
   1df08:	str	r2, [sp]
   1df0c:	ldr	r0, [sp, #8]
   1df10:	movw	r1, #0
   1df14:	str	r1, [r0]
   1df18:	ldr	r0, [sp, #4]
   1df1c:	ldr	r1, [sp, #8]
   1df20:	str	r0, [r1, #8]
   1df24:	ldr	r0, [sp]
   1df28:	ldr	r1, [sp, #8]
   1df2c:	str	r0, [r1, #4]
   1df30:	ldr	r0, [sp, #8]
   1df34:	add	sp, sp, #12
   1df38:	bx	lr
   1df3c:	nop	{0}
   1df40:	push	{fp, lr}
   1df44:	mov	fp, sp
   1df48:	sub	sp, sp, #64	; 0x40
   1df4c:	str	r0, [fp, #-4]
   1df50:	vstr	d0, [fp, #-16]
   1df54:	vldr	d16, [fp, #-16]
   1df58:	vldr	d17, [fp, #-16]
   1df5c:	vcmp.f64	d16, d17
   1df60:	vmrs	APSR_nzcv, fpscr
   1df64:	bne	1df84 <__assert_fail@plt+0xcc00>
   1df68:	vldr	d16, [fp, #-16]
   1df6c:	vldr	d17, [fp, #-16]
   1df70:	vmov.f64	d18, #96	; 0x3f000000  0.5
   1df74:	vmul.f64	d17, d17, d18
   1df78:	vcmp.f64	d16, d17
   1df7c:	vmrs	APSR_nzcv, fpscr
   1df80:	bne	1df94 <__assert_fail@plt+0xcc10>
   1df84:	ldr	r0, [fp, #-4]
   1df88:	movw	r1, #0
   1df8c:	str	r1, [r0, #4]
   1df90:	b	1e1d0 <__assert_fail@plt+0xce4c>
   1df94:	vldr	d16, [fp, #-16]
   1df98:	vcmpe.f64	d16, #0.0
   1df9c:	vmrs	APSR_nzcv, fpscr
   1dfa0:	movw	r0, #0
   1dfa4:	movmi	r0, #1
   1dfa8:	and	r0, r0, #1
   1dfac:	str	r0, [fp, #-20]	; 0xffffffec
   1dfb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dfb4:	cmp	r0, #0
   1dfb8:	beq	1dfc8 <__assert_fail@plt+0xcc44>
   1dfbc:	vldr	d16, [fp, #-16]
   1dfc0:	vneg.f64	d16, d16
   1dfc4:	vstr	d16, [fp, #-16]
   1dfc8:	vldr	d16, [fp, #-16]
   1dfcc:	vmov.f64	d17, #112	; 0x3f800000  1.0
   1dfd0:	vcmpe.f64	d16, d17
   1dfd4:	vmrs	APSR_nzcv, fpscr
   1dfd8:	bpl	1dfec <__assert_fail@plt+0xcc68>
   1dfdc:	ldr	r0, [fp, #-4]
   1dfe0:	movw	r1, #0
   1dfe4:	str	r1, [r0, #4]
   1dfe8:	b	1e1d0 <__assert_fail@plt+0xce4c>
   1dfec:	vldr	d16, [pc, #484]	; 1e1d8 <__assert_fail@plt+0xce54>
   1dff0:	vstr	d16, [sp, #24]
   1dff4:	vldr	d16, [sp, #24]
   1dff8:	vmov.f64	d17, #112	; 0x3f800000  1.0
   1dffc:	vdiv.f64	d16, d17, d16
   1e000:	vstr	d16, [sp, #16]
   1e004:	movw	r0, #1
   1e008:	str	r0, [fp, #-28]	; 0xffffffe4
   1e00c:	vldr	d16, [fp, #-16]
   1e010:	vldr	d17, [sp, #24]
   1e014:	vcmpe.f64	d16, d17
   1e018:	vmrs	APSR_nzcv, fpscr
   1e01c:	blt	1e040 <__assert_fail@plt+0xccbc>
   1e020:	vldr	d16, [sp, #16]
   1e024:	vldr	d17, [fp, #-16]
   1e028:	vmul.f64	d16, d17, d16
   1e02c:	vstr	d16, [fp, #-16]
   1e030:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e034:	add	r0, r0, #1
   1e038:	str	r0, [fp, #-28]	; 0xffffffe4
   1e03c:	b	1e00c <__assert_fail@plt+0xcc88>
   1e040:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e044:	ldr	r1, [fp, #-4]
   1e048:	ldr	r1, [r1]
   1e04c:	cmp	r0, r1
   1e050:	ble	1e068 <__assert_fail@plt+0xcce4>
   1e054:	ldr	r0, [fp, #-4]
   1e058:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e05c:	bl	1d52c <__assert_fail@plt+0xc1a8>
   1e060:	str	r0, [sp, #8]
   1e064:	b	1e074 <__assert_fail@plt+0xccf0>
   1e068:	ldr	r0, [fp, #-4]
   1e06c:	ldr	r0, [r0, #8]
   1e070:	str	r0, [sp, #8]
   1e074:	ldr	r0, [sp, #8]
   1e078:	str	r0, [fp, #-24]	; 0xffffffe8
   1e07c:	vldr	d16, [fp, #-16]
   1e080:	vcvt.u32.f64	s0, d16
   1e084:	vmov	r0, s0
   1e088:	str	r0, [sp, #12]
   1e08c:	ldr	r0, [sp, #12]
   1e090:	vmov	s0, r0
   1e094:	vcvt.f64.u32	d16, s0
   1e098:	vldr	d17, [fp, #-16]
   1e09c:	vsub.f64	d16, d17, d16
   1e0a0:	vstr	d16, [fp, #-16]
   1e0a4:	vldr	d16, [fp, #-16]
   1e0a8:	vmov.f64	d17, #112	; 0x3f800000  1.0
   1e0ac:	vcmpe.f64	d16, d17
   1e0b0:	vmrs	APSR_nzcv, fpscr
   1e0b4:	bpl	1e0bc <__assert_fail@plt+0xcd38>
   1e0b8:	b	1e0dc <__assert_fail@plt+0xcd58>
   1e0bc:	movw	r0, #29902	; 0x74ce
   1e0c0:	movt	r0, #3
   1e0c4:	movw	r1, #28968	; 0x7128
   1e0c8:	movt	r1, #3
   1e0cc:	movw	r2, #1736	; 0x6c8
   1e0d0:	movw	r3, #29910	; 0x74d6
   1e0d4:	movt	r3, #3
   1e0d8:	bl	11384 <__assert_fail@plt>
   1e0dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e0e0:	sub	r0, r0, #1
   1e0e4:	str	r0, [sp, #32]
   1e0e8:	ldr	r0, [sp, #12]
   1e0ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e0f0:	ldr	r2, [sp, #32]
   1e0f4:	add	r1, r1, r2, lsl #2
   1e0f8:	str	r0, [r1]
   1e0fc:	ldr	r0, [sp, #32]
   1e100:	mvn	r1, #0
   1e104:	add	r0, r0, r1
   1e108:	str	r0, [sp, #32]
   1e10c:	cmp	r0, #0
   1e110:	blt	1e19c <__assert_fail@plt+0xce18>
   1e114:	vldr	d16, [sp, #24]
   1e118:	vldr	d17, [fp, #-16]
   1e11c:	vmul.f64	d16, d16, d17
   1e120:	vstr	d16, [fp, #-16]
   1e124:	vldr	d16, [fp, #-16]
   1e128:	vcvt.u32.f64	s0, d16
   1e12c:	vmov	r0, s0
   1e130:	str	r0, [sp, #12]
   1e134:	ldr	r0, [sp, #12]
   1e138:	vmov	s0, r0
   1e13c:	vcvt.f64.u32	d16, s0
   1e140:	vldr	d17, [fp, #-16]
   1e144:	vsub.f64	d16, d17, d16
   1e148:	vstr	d16, [fp, #-16]
   1e14c:	vldr	d16, [fp, #-16]
   1e150:	vmov.f64	d17, #112	; 0x3f800000  1.0
   1e154:	vcmpe.f64	d16, d17
   1e158:	vmrs	APSR_nzcv, fpscr
   1e15c:	bpl	1e164 <__assert_fail@plt+0xcde0>
   1e160:	b	1e184 <__assert_fail@plt+0xce00>
   1e164:	movw	r0, #29902	; 0x74ce
   1e168:	movt	r0, #3
   1e16c:	movw	r1, #28968	; 0x7128
   1e170:	movt	r1, #3
   1e174:	movw	r2, #1744	; 0x6d0
   1e178:	movw	r3, #29910	; 0x74d6
   1e17c:	movt	r3, #3
   1e180:	bl	11384 <__assert_fail@plt>
   1e184:	ldr	r0, [sp, #12]
   1e188:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e18c:	ldr	r2, [sp, #32]
   1e190:	add	r1, r1, r2, lsl #2
   1e194:	str	r0, [r1]
   1e198:	b	1e0fc <__assert_fail@plt+0xcd78>
   1e19c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e1a0:	cmp	r0, #0
   1e1a4:	beq	1e1bc <__assert_fail@plt+0xce38>
   1e1a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e1ac:	movw	r1, #0
   1e1b0:	sub	r0, r1, r0
   1e1b4:	str	r0, [sp, #4]
   1e1b8:	b	1e1c4 <__assert_fail@plt+0xce40>
   1e1bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e1c0:	str	r0, [sp, #4]
   1e1c4:	ldr	r0, [sp, #4]
   1e1c8:	ldr	r1, [fp, #-4]
   1e1cc:	str	r0, [r1, #4]
   1e1d0:	mov	sp, fp
   1e1d4:	pop	{fp, pc}
   1e1d8:	andeq	r0, r0, r0
   1e1dc:	mvnsmi	r0, r0
   1e1e0:	push	{fp, lr}
   1e1e4:	mov	fp, sp
   1e1e8:	sub	sp, sp, #16
   1e1ec:	str	r0, [fp, #-4]
   1e1f0:	vstr	d0, [sp]
   1e1f4:	ldr	r0, [fp, #-4]
   1e1f8:	bl	1d2ac <__assert_fail@plt+0xbf28>
   1e1fc:	ldr	r0, [fp, #-4]
   1e200:	vldr	d0, [sp]
   1e204:	bl	1df40 <__assert_fail@plt+0xcbbc>
   1e208:	mov	sp, fp
   1e20c:	pop	{fp, pc}
   1e210:	sub	sp, sp, #56	; 0x38
   1e214:	vldr	d16, [pc, #556]	; 1e448 <__assert_fail@plt+0xd0c4>
   1e218:	str	r0, [sp, #44]	; 0x2c
   1e21c:	vstr	d16, [sp, #16]
   1e220:	ldr	r0, [sp, #44]	; 0x2c
   1e224:	ldr	r0, [r0, #4]
   1e228:	cmp	r0, #0
   1e22c:	blt	1e240 <__assert_fail@plt+0xcebc>
   1e230:	ldr	r0, [sp, #44]	; 0x2c
   1e234:	ldr	r0, [r0, #4]
   1e238:	str	r0, [sp]
   1e23c:	b	1e254 <__assert_fail@plt+0xced0>
   1e240:	ldr	r0, [sp, #44]	; 0x2c
   1e244:	ldr	r0, [r0, #4]
   1e248:	movw	r1, #0
   1e24c:	sub	r0, r1, r0
   1e250:	str	r0, [sp]
   1e254:	ldr	r0, [sp]
   1e258:	str	r0, [sp, #32]
   1e25c:	ldr	r0, [sp, #32]
   1e260:	cmp	r0, #0
   1e264:	bne	1e274 <__assert_fail@plt+0xcef0>
   1e268:	vldr	d16, [pc, #480]	; 1e450 <__assert_fail@plt+0xd0cc>
   1e26c:	vstr	d16, [sp, #48]	; 0x30
   1e270:	b	1e43c <__assert_fail@plt+0xd0b8>
   1e274:	ldr	r0, [sp, #44]	; 0x2c
   1e278:	ldr	r0, [r0, #8]
   1e27c:	ldr	r1, [sp, #32]
   1e280:	sub	r1, r1, #1
   1e284:	str	r1, [sp, #32]
   1e288:	add	r0, r0, r1, lsl #2
   1e28c:	ldr	r0, [r0]
   1e290:	str	r0, [sp, #36]	; 0x24
   1e294:	ldr	r0, [sp, #36]	; 0x24
   1e298:	str	r0, [sp, #12]
   1e29c:	movw	r0, #0
   1e2a0:	str	r0, [sp, #8]
   1e2a4:	movw	r0, #8
   1e2a8:	str	r0, [sp, #4]
   1e2ac:	ldr	r0, [sp, #4]
   1e2b0:	movw	r1, #32
   1e2b4:	cmp	r1, r0
   1e2b8:	bls	1e2f4 <__assert_fail@plt+0xcf70>
   1e2bc:	b	1e2c0 <__assert_fail@plt+0xcf3c>
   1e2c0:	ldr	r0, [sp, #12]
   1e2c4:	and	r0, r0, #-16777216	; 0xff000000
   1e2c8:	cmp	r0, #0
   1e2cc:	bne	1e2f0 <__assert_fail@plt+0xcf6c>
   1e2d0:	ldr	r0, [sp, #4]
   1e2d4:	ldr	r1, [sp, #12]
   1e2d8:	lsl	r0, r1, r0
   1e2dc:	str	r0, [sp, #12]
   1e2e0:	ldr	r0, [sp, #8]
   1e2e4:	add	r0, r0, #8
   1e2e8:	str	r0, [sp, #8]
   1e2ec:	b	1e2c0 <__assert_fail@plt+0xcf3c>
   1e2f0:	b	1e2f4 <__assert_fail@plt+0xcf70>
   1e2f4:	b	1e2f8 <__assert_fail@plt+0xcf74>
   1e2f8:	ldr	r0, [sp, #12]
   1e2fc:	and	r0, r0, #-2147483648	; 0x80000000
   1e300:	cmp	r0, #0
   1e304:	bne	1e324 <__assert_fail@plt+0xcfa0>
   1e308:	ldr	r0, [sp, #12]
   1e30c:	lsl	r0, r0, #1
   1e310:	str	r0, [sp, #12]
   1e314:	ldr	r0, [sp, #8]
   1e318:	add	r0, r0, #1
   1e31c:	str	r0, [sp, #8]
   1e320:	b	1e2f8 <__assert_fail@plt+0xcf74>
   1e324:	ldr	r0, [sp, #8]
   1e328:	str	r0, [sp, #40]	; 0x28
   1e32c:	ldr	r0, [sp, #40]	; 0x28
   1e330:	add	r0, r0, #53	; 0x35
   1e334:	sub	r0, r0, #32
   1e338:	str	r0, [sp, #40]	; 0x28
   1e33c:	ldr	r0, [sp, #40]	; 0x28
   1e340:	cmp	r0, #0
   1e344:	bge	1e368 <__assert_fail@plt+0xcfe4>
   1e348:	ldr	r0, [sp, #40]	; 0x28
   1e34c:	movw	r1, #0
   1e350:	sub	r0, r1, r0
   1e354:	mvn	r1, #0
   1e358:	lsl	r0, r1, r0
   1e35c:	ldr	r1, [sp, #36]	; 0x24
   1e360:	and	r0, r1, r0
   1e364:	str	r0, [sp, #36]	; 0x24
   1e368:	ldr	r0, [sp, #36]	; 0x24
   1e36c:	vmov	s0, r0
   1e370:	vcvt.f64.u32	d16, s0
   1e374:	vstr	d16, [sp, #24]
   1e378:	ldr	r0, [sp, #32]
   1e37c:	mvn	r1, #0
   1e380:	add	r0, r0, r1
   1e384:	str	r0, [sp, #32]
   1e388:	cmp	r0, #0
   1e38c:	blt	1e418 <__assert_fail@plt+0xd094>
   1e390:	vldr	d16, [sp, #16]
   1e394:	vldr	d17, [sp, #24]
   1e398:	vmul.f64	d16, d16, d17
   1e39c:	vstr	d16, [sp, #24]
   1e3a0:	ldr	r0, [sp, #40]	; 0x28
   1e3a4:	cmp	r0, #0
   1e3a8:	ble	1e414 <__assert_fail@plt+0xd090>
   1e3ac:	ldr	r0, [sp, #44]	; 0x2c
   1e3b0:	ldr	r0, [r0, #8]
   1e3b4:	ldr	r1, [sp, #32]
   1e3b8:	add	r0, r0, r1, lsl #2
   1e3bc:	ldr	r0, [r0]
   1e3c0:	str	r0, [sp, #36]	; 0x24
   1e3c4:	ldr	r0, [sp, #40]	; 0x28
   1e3c8:	sub	r0, r0, #32
   1e3cc:	str	r0, [sp, #40]	; 0x28
   1e3d0:	ldr	r0, [sp, #40]	; 0x28
   1e3d4:	cmp	r0, #0
   1e3d8:	bge	1e3fc <__assert_fail@plt+0xd078>
   1e3dc:	ldr	r0, [sp, #40]	; 0x28
   1e3e0:	movw	r1, #0
   1e3e4:	sub	r0, r1, r0
   1e3e8:	mvn	r1, #0
   1e3ec:	lsl	r0, r1, r0
   1e3f0:	ldr	r1, [sp, #36]	; 0x24
   1e3f4:	and	r0, r1, r0
   1e3f8:	str	r0, [sp, #36]	; 0x24
   1e3fc:	ldr	r0, [sp, #36]	; 0x24
   1e400:	vmov	s0, r0
   1e404:	vcvt.f64.u32	d16, s0
   1e408:	vldr	d17, [sp, #24]
   1e40c:	vadd.f64	d16, d17, d16
   1e410:	vstr	d16, [sp, #24]
   1e414:	b	1e378 <__assert_fail@plt+0xcff4>
   1e418:	ldr	r0, [sp, #44]	; 0x2c
   1e41c:	ldr	r0, [r0, #4]
   1e420:	cmp	r0, #0
   1e424:	bge	1e434 <__assert_fail@plt+0xd0b0>
   1e428:	vldr	d16, [sp, #24]
   1e42c:	vneg.f64	d16, d16
   1e430:	vstr	d16, [sp, #24]
   1e434:	vldr	d16, [sp, #24]
   1e438:	vstr	d16, [sp, #48]	; 0x30
   1e43c:	vldr	d0, [sp, #48]	; 0x30
   1e440:	add	sp, sp, #56	; 0x38
   1e444:	bx	lr
   1e448:	andeq	r0, r0, r0
   1e44c:	mvnsmi	r0, r0
	...
   1e458:	sub	sp, sp, #72	; 0x48
   1e45c:	str	r0, [sp, #64]	; 0x40
   1e460:	vstr	d0, [sp, #56]	; 0x38
   1e464:	ldr	r0, [sp, #64]	; 0x40
   1e468:	ldr	r0, [r0, #4]
   1e46c:	str	r0, [sp, #52]	; 0x34
   1e470:	vldr	d16, [sp, #56]	; 0x38
   1e474:	vcmpe.f64	d16, #0.0
   1e478:	vmrs	APSR_nzcv, fpscr
   1e47c:	blt	1e48c <__assert_fail@plt+0xd108>
   1e480:	vldr	d16, [sp, #56]	; 0x38
   1e484:	vstr	d16, [sp, #8]
   1e488:	b	1e498 <__assert_fail@plt+0xd114>
   1e48c:	vldr	d16, [sp, #56]	; 0x38
   1e490:	vneg.f64	d16, d16
   1e494:	vstr	d16, [sp, #8]
   1e498:	vldr	d16, [sp, #8]
   1e49c:	vstr	d16, [sp, #56]	; 0x38
   1e4a0:	ldr	r0, [sp, #52]	; 0x34
   1e4a4:	cmp	r0, #0
   1e4a8:	beq	1e5f4 <__assert_fail@plt+0xd270>
   1e4ac:	ldr	r0, [sp, #52]	; 0x34
   1e4b0:	cmp	r0, #0
   1e4b4:	blt	1e4c4 <__assert_fail@plt+0xd140>
   1e4b8:	ldr	r0, [sp, #52]	; 0x34
   1e4bc:	str	r0, [sp, #4]
   1e4c0:	b	1e4d4 <__assert_fail@plt+0xd150>
   1e4c4:	ldr	r0, [sp, #52]	; 0x34
   1e4c8:	movw	r1, #0
   1e4cc:	sub	r0, r1, r0
   1e4d0:	str	r0, [sp, #4]
   1e4d4:	ldr	r0, [sp, #4]
   1e4d8:	vldr	d16, [pc, #328]	; 1e628 <__assert_fail@plt+0xd2a4>
   1e4dc:	str	r0, [sp, #52]	; 0x34
   1e4e0:	vstr	d16, [sp, #40]	; 0x28
   1e4e4:	vldr	d16, [sp, #40]	; 0x28
   1e4e8:	vmov.f64	d17, #112	; 0x3f800000  1.0
   1e4ec:	vdiv.f64	d16, d17, d16
   1e4f0:	vstr	d16, [sp, #32]
   1e4f4:	movw	r0, #1
   1e4f8:	str	r0, [sp, #28]
   1e4fc:	ldr	r0, [sp, #28]
   1e500:	ldr	r1, [sp, #52]	; 0x34
   1e504:	cmp	r0, r1
   1e508:	bge	1e52c <__assert_fail@plt+0xd1a8>
   1e50c:	vldr	d16, [sp, #32]
   1e510:	vldr	d17, [sp, #56]	; 0x38
   1e514:	vmul.f64	d16, d17, d16
   1e518:	vstr	d16, [sp, #56]	; 0x38
   1e51c:	ldr	r0, [sp, #28]
   1e520:	add	r0, r0, #1
   1e524:	str	r0, [sp, #28]
   1e528:	b	1e4fc <__assert_fail@plt+0xd178>
   1e52c:	vldr	d16, [sp, #56]	; 0x38
   1e530:	vldr	d17, [sp, #40]	; 0x28
   1e534:	vcmpe.f64	d16, d17
   1e538:	vmrs	APSR_nzcv, fpscr
   1e53c:	blt	1e54c <__assert_fail@plt+0xd1c8>
   1e540:	mvn	r0, #0
   1e544:	str	r0, [sp, #68]	; 0x44
   1e548:	b	1e618 <__assert_fail@plt+0xd294>
   1e54c:	ldr	r0, [sp, #52]	; 0x34
   1e550:	str	r0, [sp, #28]
   1e554:	ldr	r0, [sp, #28]
   1e558:	mvn	r1, #0
   1e55c:	add	r1, r0, r1
   1e560:	str	r1, [sp, #28]
   1e564:	cmp	r0, #0
   1e568:	ble	1e5f0 <__assert_fail@plt+0xd26c>
   1e56c:	vldr	d16, [sp, #56]	; 0x38
   1e570:	vcvt.u32.f64	s0, d16
   1e574:	vstr	s0, [sp, #24]
   1e578:	ldr	r0, [sp, #64]	; 0x40
   1e57c:	ldr	r0, [r0, #8]
   1e580:	ldr	r1, [sp, #28]
   1e584:	add	r0, r0, r1, lsl #2
   1e588:	ldr	r0, [r0]
   1e58c:	str	r0, [sp, #20]
   1e590:	ldr	r0, [sp, #20]
   1e594:	ldr	r1, [sp, #24]
   1e598:	cmp	r0, r1
   1e59c:	bls	1e5ac <__assert_fail@plt+0xd228>
   1e5a0:	movw	r0, #1
   1e5a4:	str	r0, [sp, #68]	; 0x44
   1e5a8:	b	1e618 <__assert_fail@plt+0xd294>
   1e5ac:	ldr	r0, [sp, #20]
   1e5b0:	ldr	r1, [sp, #24]
   1e5b4:	cmp	r0, r1
   1e5b8:	bcs	1e5c8 <__assert_fail@plt+0xd244>
   1e5bc:	mvn	r0, #0
   1e5c0:	str	r0, [sp, #68]	; 0x44
   1e5c4:	b	1e618 <__assert_fail@plt+0xd294>
   1e5c8:	b	1e5cc <__assert_fail@plt+0xd248>
   1e5cc:	vldr	d16, [sp, #40]	; 0x28
   1e5d0:	vldr	d17, [sp, #56]	; 0x38
   1e5d4:	ldr	r0, [sp, #24]
   1e5d8:	vmov	s0, r0
   1e5dc:	vcvt.f64.u32	d18, s0
   1e5e0:	vsub.f64	d17, d17, d18
   1e5e4:	vmul.f64	d16, d16, d17
   1e5e8:	vstr	d16, [sp, #56]	; 0x38
   1e5ec:	b	1e554 <__assert_fail@plt+0xd1d0>
   1e5f0:	b	1e5f4 <__assert_fail@plt+0xd270>
   1e5f4:	vldr	d16, [sp, #56]	; 0x38
   1e5f8:	vcmpe.f64	d16, #0.0
   1e5fc:	vmrs	APSR_nzcv, fpscr
   1e600:	movw	r0, #0
   1e604:	movgt	r0, #1
   1e608:	and	r0, r0, #1
   1e60c:	movw	r1, #0
   1e610:	sub	r0, r1, r0
   1e614:	str	r0, [sp, #68]	; 0x44
   1e618:	ldr	r0, [sp, #68]	; 0x44
   1e61c:	add	sp, sp, #72	; 0x48
   1e620:	bx	lr
   1e624:	nop	{0}
   1e628:	andeq	r0, r0, r0
   1e62c:	mvnsmi	r0, r0
   1e630:	push	{fp, lr}
   1e634:	mov	fp, sp
   1e638:	sub	sp, sp, #16
   1e63c:	str	r0, [sp, #8]
   1e640:	vstr	d0, [sp]
   1e644:	ldr	r0, [sp, #8]
   1e648:	ldr	r0, [r0, #4]
   1e64c:	cmp	r0, #0
   1e650:	bge	1e68c <__assert_fail@plt+0xd308>
   1e654:	vldr	d16, [sp]
   1e658:	vcmpe.f64	d16, #0.0
   1e65c:	vmrs	APSR_nzcv, fpscr
   1e660:	blt	1e670 <__assert_fail@plt+0xd2ec>
   1e664:	mvn	r0, #0
   1e668:	str	r0, [fp, #-4]
   1e66c:	b	1e6b8 <__assert_fail@plt+0xd334>
   1e670:	ldr	r0, [sp, #8]
   1e674:	vldr	d0, [sp]
   1e678:	bl	1e458 <__assert_fail@plt+0xd0d4>
   1e67c:	movw	r1, #0
   1e680:	sub	r0, r1, r0
   1e684:	str	r0, [fp, #-4]
   1e688:	b	1e6b8 <__assert_fail@plt+0xd334>
   1e68c:	vldr	d16, [sp]
   1e690:	vcmpe.f64	d16, #0.0
   1e694:	vmrs	APSR_nzcv, fpscr
   1e698:	bpl	1e6a8 <__assert_fail@plt+0xd324>
   1e69c:	movw	r0, #1
   1e6a0:	str	r0, [fp, #-4]
   1e6a4:	b	1e6b8 <__assert_fail@plt+0xd334>
   1e6a8:	ldr	r0, [sp, #8]
   1e6ac:	vldr	d0, [sp]
   1e6b0:	bl	1e458 <__assert_fail@plt+0xd0d4>
   1e6b4:	str	r0, [fp, #-4]
   1e6b8:	ldr	r0, [fp, #-4]
   1e6bc:	mov	sp, fp
   1e6c0:	pop	{fp, pc}
   1e6c4:	sub	sp, sp, #4
   1e6c8:	str	r0, [sp]
   1e6cc:	ldr	r0, [sp]
   1e6d0:	ldr	r0, [r0, #4]
   1e6d4:	cmp	r0, #0
   1e6d8:	movw	r0, #0
   1e6dc:	movgt	r0, #1
   1e6e0:	and	r0, r0, #1
   1e6e4:	ldr	r1, [sp]
   1e6e8:	ldr	r1, [r1, #4]
   1e6ec:	cmp	r1, #0
   1e6f0:	movw	r1, #0
   1e6f4:	movlt	r1, #1
   1e6f8:	and	r1, r1, #1
   1e6fc:	sub	r0, r0, r1
   1e700:	add	sp, sp, #4
   1e704:	bx	lr
   1e708:	push	{fp, lr}
   1e70c:	mov	fp, sp
   1e710:	sub	sp, sp, #16
   1e714:	str	r0, [sp, #8]
   1e718:	str	r1, [sp, #4]
   1e71c:	ldr	r0, [sp, #8]
   1e720:	ldr	r0, [r0, #4]
   1e724:	str	r0, [sp]
   1e728:	ldr	r0, [sp]
   1e72c:	cmp	r0, #0
   1e730:	bge	1e740 <__assert_fail@plt+0xd3bc>
   1e734:	mvn	r0, #0
   1e738:	str	r0, [fp, #-4]
   1e73c:	b	1e750 <__assert_fail@plt+0xd3cc>
   1e740:	ldr	r0, [sp, #8]
   1e744:	ldr	r1, [sp, #4]
   1e748:	bl	1da00 <__assert_fail@plt+0xc67c>
   1e74c:	str	r0, [fp, #-4]
   1e750:	ldr	r0, [fp, #-4]
   1e754:	mov	sp, fp
   1e758:	pop	{fp, pc}
   1e75c:	push	{fp, lr}
   1e760:	mov	fp, sp
   1e764:	sub	sp, sp, #24
   1e768:	str	r0, [fp, #-8]
   1e76c:	str	r1, [sp, #12]
   1e770:	ldr	r0, [fp, #-8]
   1e774:	ldr	r0, [r0, #4]
   1e778:	str	r0, [sp, #8]
   1e77c:	ldr	r0, [sp, #12]
   1e780:	ldr	r0, [r0, #4]
   1e784:	str	r0, [sp, #4]
   1e788:	ldr	r0, [sp, #8]
   1e78c:	ldr	r1, [sp, #4]
   1e790:	cmp	r0, r1
   1e794:	beq	1e7c0 <__assert_fail@plt+0xd43c>
   1e798:	ldr	r0, [sp, #8]
   1e79c:	ldr	r1, [sp, #4]
   1e7a0:	cmp	r0, r1
   1e7a4:	movw	r0, #0
   1e7a8:	movlt	r0, #1
   1e7ac:	tst	r0, #1
   1e7b0:	mvn	r0, #0
   1e7b4:	moveq	r0, #1
   1e7b8:	str	r0, [fp, #-4]
   1e7bc:	b	1e810 <__assert_fail@plt+0xd48c>
   1e7c0:	ldr	r0, [sp, #8]
   1e7c4:	cmp	r0, #0
   1e7c8:	blt	1e7ec <__assert_fail@plt+0xd468>
   1e7cc:	ldr	r0, [fp, #-8]
   1e7d0:	ldr	r0, [r0, #8]
   1e7d4:	ldr	r1, [sp, #12]
   1e7d8:	ldr	r1, [r1, #8]
   1e7dc:	ldr	r2, [sp, #8]
   1e7e0:	bl	1afbc <__assert_fail@plt+0x9c38>
   1e7e4:	str	r0, [fp, #-4]
   1e7e8:	b	1e810 <__assert_fail@plt+0xd48c>
   1e7ec:	ldr	r0, [sp, #12]
   1e7f0:	ldr	r0, [r0, #8]
   1e7f4:	ldr	r1, [fp, #-8]
   1e7f8:	ldr	r1, [r1, #8]
   1e7fc:	ldr	r2, [sp, #8]
   1e800:	movw	r3, #0
   1e804:	sub	r2, r3, r2
   1e808:	bl	1afbc <__assert_fail@plt+0x9c38>
   1e80c:	str	r0, [fp, #-4]
   1e810:	ldr	r0, [fp, #-4]
   1e814:	mov	sp, fp
   1e818:	pop	{fp, pc}
   1e81c:	push	{fp, lr}
   1e820:	mov	fp, sp
   1e824:	sub	sp, sp, #32
   1e828:	str	r0, [fp, #-4]
   1e82c:	str	r1, [fp, #-8]
   1e830:	ldr	r0, [fp, #-4]
   1e834:	ldr	r0, [r0, #8]
   1e838:	ldr	r1, [fp, #-4]
   1e83c:	ldr	r1, [r1, #4]
   1e840:	cmp	r1, #0
   1e844:	str	r0, [fp, #-12]
   1e848:	blt	1e85c <__assert_fail@plt+0xd4d8>
   1e84c:	ldr	r0, [fp, #-4]
   1e850:	ldr	r0, [r0, #4]
   1e854:	str	r0, [sp, #16]
   1e858:	b	1e870 <__assert_fail@plt+0xd4ec>
   1e85c:	ldr	r0, [fp, #-4]
   1e860:	ldr	r0, [r0, #4]
   1e864:	movw	r1, #0
   1e868:	sub	r0, r1, r0
   1e86c:	str	r0, [sp, #16]
   1e870:	ldr	r0, [sp, #16]
   1e874:	ldr	r1, [fp, #-8]
   1e878:	ldr	r2, [r1, #8]
   1e87c:	ldr	r1, [fp, #-8]
   1e880:	ldr	r1, [r1, #4]
   1e884:	cmp	r1, #0
   1e888:	str	r0, [sp, #12]
   1e88c:	str	r2, [sp, #8]
   1e890:	blt	1e8a4 <__assert_fail@plt+0xd520>
   1e894:	ldr	r0, [fp, #-8]
   1e898:	ldr	r0, [r0, #4]
   1e89c:	str	r0, [sp, #4]
   1e8a0:	b	1e8b8 <__assert_fail@plt+0xd534>
   1e8a4:	ldr	r0, [fp, #-8]
   1e8a8:	ldr	r0, [r0, #4]
   1e8ac:	movw	r1, #0
   1e8b0:	sub	r0, r1, r0
   1e8b4:	str	r0, [sp, #4]
   1e8b8:	ldr	r0, [sp, #4]
   1e8bc:	ldr	r1, [fp, #-12]
   1e8c0:	str	r0, [sp]
   1e8c4:	mov	r0, r1
   1e8c8:	ldr	r1, [sp, #12]
   1e8cc:	ldr	r2, [sp, #8]
   1e8d0:	ldr	r3, [sp]
   1e8d4:	bl	1e8e0 <__assert_fail@plt+0xd55c>
   1e8d8:	mov	sp, fp
   1e8dc:	pop	{fp, pc}
   1e8e0:	push	{fp, lr}
   1e8e4:	mov	fp, sp
   1e8e8:	sub	sp, sp, #24
   1e8ec:	str	r0, [fp, #-8]
   1e8f0:	str	r1, [sp, #12]
   1e8f4:	str	r2, [sp, #8]
   1e8f8:	str	r3, [sp, #4]
   1e8fc:	ldr	r0, [sp, #12]
   1e900:	ldr	r1, [sp, #4]
   1e904:	cmp	r0, r1
   1e908:	beq	1e934 <__assert_fail@plt+0xd5b0>
   1e90c:	ldr	r0, [sp, #12]
   1e910:	ldr	r1, [sp, #4]
   1e914:	cmp	r0, r1
   1e918:	movw	r0, #0
   1e91c:	movlt	r0, #1
   1e920:	tst	r0, #1
   1e924:	mvn	r0, #0
   1e928:	moveq	r0, #1
   1e92c:	str	r0, [fp, #-4]
   1e930:	b	1e948 <__assert_fail@plt+0xd5c4>
   1e934:	ldr	r0, [fp, #-8]
   1e938:	ldr	r1, [sp, #8]
   1e93c:	ldr	r2, [sp, #12]
   1e940:	bl	1afbc <__assert_fail@plt+0x9c38>
   1e944:	str	r0, [fp, #-4]
   1e948:	ldr	r0, [fp, #-4]
   1e94c:	mov	sp, fp
   1e950:	pop	{fp, pc}
   1e954:	push	{fp, lr}
   1e958:	mov	fp, sp
   1e95c:	sub	sp, sp, #16
   1e960:	str	r0, [fp, #-4]
   1e964:	str	r1, [sp, #8]
   1e968:	ldr	r0, [fp, #-4]
   1e96c:	ldr	r1, [sp, #8]
   1e970:	bl	1d61c <__assert_fail@plt+0xc298>
   1e974:	ldr	r0, [fp, #-4]
   1e978:	ldr	r0, [r0, #4]
   1e97c:	cmp	r0, #0
   1e980:	blt	1e994 <__assert_fail@plt+0xd610>
   1e984:	ldr	r0, [fp, #-4]
   1e988:	ldr	r0, [r0, #4]
   1e98c:	str	r0, [sp, #4]
   1e990:	b	1e9a8 <__assert_fail@plt+0xd624>
   1e994:	ldr	r0, [fp, #-4]
   1e998:	ldr	r0, [r0, #4]
   1e99c:	movw	r1, #0
   1e9a0:	sub	r0, r1, r0
   1e9a4:	str	r0, [sp, #4]
   1e9a8:	ldr	r0, [sp, #4]
   1e9ac:	ldr	r1, [fp, #-4]
   1e9b0:	str	r0, [r1, #4]
   1e9b4:	mov	sp, fp
   1e9b8:	pop	{fp, pc}
   1e9bc:	push	{fp, lr}
   1e9c0:	mov	fp, sp
   1e9c4:	sub	sp, sp, #8
   1e9c8:	str	r0, [sp, #4]
   1e9cc:	str	r1, [sp]
   1e9d0:	ldr	r0, [sp, #4]
   1e9d4:	ldr	r1, [sp]
   1e9d8:	bl	1d61c <__assert_fail@plt+0xc298>
   1e9dc:	ldr	r0, [sp, #4]
   1e9e0:	ldr	r0, [r0, #4]
   1e9e4:	movw	r1, #0
   1e9e8:	sub	r0, r1, r0
   1e9ec:	ldr	r1, [sp, #4]
   1e9f0:	str	r0, [r1, #4]
   1e9f4:	mov	sp, fp
   1e9f8:	pop	{fp, pc}
   1e9fc:	sub	sp, sp, #20
   1ea00:	str	r0, [sp, #16]
   1ea04:	str	r1, [sp, #12]
   1ea08:	ldr	r0, [sp, #16]
   1ea0c:	ldr	r0, [r0, #4]
   1ea10:	str	r0, [sp, #8]
   1ea14:	ldr	r0, [sp, #12]
   1ea18:	ldr	r0, [r0, #4]
   1ea1c:	ldr	r1, [sp, #16]
   1ea20:	str	r0, [r1, #4]
   1ea24:	ldr	r0, [sp, #8]
   1ea28:	ldr	r1, [sp, #12]
   1ea2c:	str	r0, [r1, #4]
   1ea30:	b	1ea34 <__assert_fail@plt+0xd6b0>
   1ea34:	ldr	r0, [sp, #16]
   1ea38:	ldr	r0, [r0]
   1ea3c:	str	r0, [sp, #4]
   1ea40:	ldr	r0, [sp, #12]
   1ea44:	ldr	r0, [r0]
   1ea48:	ldr	r1, [sp, #16]
   1ea4c:	str	r0, [r1]
   1ea50:	ldr	r0, [sp, #4]
   1ea54:	ldr	r1, [sp, #12]
   1ea58:	str	r0, [r1]
   1ea5c:	b	1ea60 <__assert_fail@plt+0xd6dc>
   1ea60:	ldr	r0, [sp, #16]
   1ea64:	ldr	r0, [r0, #8]
   1ea68:	str	r0, [sp]
   1ea6c:	ldr	r0, [sp, #12]
   1ea70:	ldr	r0, [r0, #8]
   1ea74:	ldr	r1, [sp, #16]
   1ea78:	str	r0, [r1, #8]
   1ea7c:	ldr	r0, [sp]
   1ea80:	ldr	r1, [sp, #12]
   1ea84:	str	r0, [r1, #8]
   1ea88:	add	sp, sp, #20
   1ea8c:	bx	lr
   1ea90:	push	{fp, lr}
   1ea94:	mov	fp, sp
   1ea98:	sub	sp, sp, #24
   1ea9c:	mov	r3, sp
   1eaa0:	str	r0, [fp, #-4]
   1eaa4:	str	r1, [fp, #-8]
   1eaa8:	str	r2, [sp, #12]
   1eaac:	ldr	r1, [sp, #12]
   1eab0:	mov	r0, r3
   1eab4:	bl	1d714 <__assert_fail@plt+0xc390>
   1eab8:	mov	r2, sp
   1eabc:	ldr	r0, [fp, #-4]
   1eac0:	ldr	r1, [fp, #-8]
   1eac4:	bl	1ead8 <__assert_fail@plt+0xd754>
   1eac8:	mov	r0, sp
   1eacc:	bl	1d384 <__assert_fail@plt+0xc000>
   1ead0:	mov	sp, fp
   1ead4:	pop	{fp, pc}
   1ead8:	push	{fp, lr}
   1eadc:	mov	fp, sp
   1eae0:	sub	sp, sp, #24
   1eae4:	str	r0, [fp, #-4]
   1eae8:	str	r1, [fp, #-8]
   1eaec:	str	r2, [sp, #12]
   1eaf0:	ldr	r0, [fp, #-8]
   1eaf4:	ldr	r0, [r0, #4]
   1eaf8:	ldr	r1, [sp, #12]
   1eafc:	ldr	r1, [r1, #4]
   1eb00:	eor	r0, r0, r1
   1eb04:	cmp	r0, #0
   1eb08:	blt	1eb24 <__assert_fail@plt+0xd7a0>
   1eb0c:	ldr	r0, [fp, #-4]
   1eb10:	ldr	r1, [fp, #-8]
   1eb14:	ldr	r2, [sp, #12]
   1eb18:	bl	1ebf0 <__assert_fail@plt+0xd86c>
   1eb1c:	str	r0, [sp, #8]
   1eb20:	b	1eb38 <__assert_fail@plt+0xd7b4>
   1eb24:	ldr	r0, [fp, #-4]
   1eb28:	ldr	r1, [fp, #-8]
   1eb2c:	ldr	r2, [sp, #12]
   1eb30:	bl	1ed64 <__assert_fail@plt+0xd9e0>
   1eb34:	str	r0, [sp, #8]
   1eb38:	ldr	r0, [fp, #-8]
   1eb3c:	ldr	r0, [r0, #4]
   1eb40:	cmp	r0, #0
   1eb44:	blt	1eb54 <__assert_fail@plt+0xd7d0>
   1eb48:	ldr	r0, [sp, #8]
   1eb4c:	str	r0, [sp, #4]
   1eb50:	b	1eb64 <__assert_fail@plt+0xd7e0>
   1eb54:	ldr	r0, [sp, #8]
   1eb58:	movw	r1, #0
   1eb5c:	sub	r0, r1, r0
   1eb60:	str	r0, [sp, #4]
   1eb64:	ldr	r0, [sp, #4]
   1eb68:	ldr	r1, [fp, #-4]
   1eb6c:	str	r0, [r1, #4]
   1eb70:	mov	sp, fp
   1eb74:	pop	{fp, pc}
   1eb78:	push	{fp, lr}
   1eb7c:	mov	fp, sp
   1eb80:	sub	sp, sp, #16
   1eb84:	str	r0, [fp, #-4]
   1eb88:	str	r1, [sp, #8]
   1eb8c:	str	r2, [sp, #4]
   1eb90:	ldr	r0, [fp, #-4]
   1eb94:	ldr	r1, [sp, #4]
   1eb98:	ldr	r2, [sp, #8]
   1eb9c:	bl	1ebb4 <__assert_fail@plt+0xd830>
   1eba0:	ldr	r0, [fp, #-4]
   1eba4:	ldr	r1, [fp, #-4]
   1eba8:	bl	1e9bc <__assert_fail@plt+0xd638>
   1ebac:	mov	sp, fp
   1ebb0:	pop	{fp, pc}
   1ebb4:	push	{fp, lr}
   1ebb8:	mov	fp, sp
   1ebbc:	sub	sp, sp, #16
   1ebc0:	str	r0, [fp, #-4]
   1ebc4:	str	r1, [sp, #8]
   1ebc8:	str	r2, [sp, #4]
   1ebcc:	ldr	r0, [fp, #-4]
   1ebd0:	ldr	r1, [sp, #4]
   1ebd4:	bl	1e9bc <__assert_fail@plt+0xd638>
   1ebd8:	ldr	r0, [fp, #-4]
   1ebdc:	ldr	r1, [fp, #-4]
   1ebe0:	ldr	r2, [sp, #8]
   1ebe4:	bl	1ea90 <__assert_fail@plt+0xd70c>
   1ebe8:	mov	sp, fp
   1ebec:	pop	{fp, pc}
   1ebf0:	push	{fp, lr}
   1ebf4:	mov	fp, sp
   1ebf8:	sub	sp, sp, #56	; 0x38
   1ebfc:	str	r0, [fp, #-4]
   1ec00:	str	r1, [fp, #-8]
   1ec04:	str	r2, [fp, #-12]
   1ec08:	ldr	r0, [fp, #-8]
   1ec0c:	ldr	r0, [r0, #4]
   1ec10:	cmp	r0, #0
   1ec14:	blt	1ec28 <__assert_fail@plt+0xd8a4>
   1ec18:	ldr	r0, [fp, #-8]
   1ec1c:	ldr	r0, [r0, #4]
   1ec20:	str	r0, [sp, #16]
   1ec24:	b	1ec3c <__assert_fail@plt+0xd8b8>
   1ec28:	ldr	r0, [fp, #-8]
   1ec2c:	ldr	r0, [r0, #4]
   1ec30:	movw	r1, #0
   1ec34:	sub	r0, r1, r0
   1ec38:	str	r0, [sp, #16]
   1ec3c:	ldr	r0, [sp, #16]
   1ec40:	str	r0, [fp, #-16]
   1ec44:	ldr	r0, [fp, #-12]
   1ec48:	ldr	r0, [r0, #4]
   1ec4c:	cmp	r0, #0
   1ec50:	blt	1ec64 <__assert_fail@plt+0xd8e0>
   1ec54:	ldr	r0, [fp, #-12]
   1ec58:	ldr	r0, [r0, #4]
   1ec5c:	str	r0, [sp, #12]
   1ec60:	b	1ec78 <__assert_fail@plt+0xd8f4>
   1ec64:	ldr	r0, [fp, #-12]
   1ec68:	ldr	r0, [r0, #4]
   1ec6c:	movw	r1, #0
   1ec70:	sub	r0, r1, r0
   1ec74:	str	r0, [sp, #12]
   1ec78:	ldr	r0, [sp, #12]
   1ec7c:	str	r0, [fp, #-20]	; 0xffffffec
   1ec80:	ldr	r0, [fp, #-16]
   1ec84:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ec88:	cmp	r0, r1
   1ec8c:	bge	1eccc <__assert_fail@plt+0xd948>
   1ec90:	b	1ec94 <__assert_fail@plt+0xd910>
   1ec94:	ldr	r0, [fp, #-8]
   1ec98:	str	r0, [sp, #24]
   1ec9c:	ldr	r0, [fp, #-12]
   1eca0:	str	r0, [fp, #-8]
   1eca4:	ldr	r0, [sp, #24]
   1eca8:	str	r0, [fp, #-12]
   1ecac:	b	1ecb0 <__assert_fail@plt+0xd92c>
   1ecb0:	ldr	r0, [fp, #-16]
   1ecb4:	str	r0, [sp, #20]
   1ecb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ecbc:	str	r0, [fp, #-16]
   1ecc0:	ldr	r0, [sp, #20]
   1ecc4:	str	r0, [fp, #-20]	; 0xffffffec
   1ecc8:	b	1eccc <__assert_fail@plt+0xd948>
   1eccc:	ldr	r0, [fp, #-16]
   1ecd0:	add	r0, r0, #1
   1ecd4:	ldr	r1, [fp, #-4]
   1ecd8:	ldr	r1, [r1]
   1ecdc:	cmp	r0, r1
   1ece0:	ble	1ecfc <__assert_fail@plt+0xd978>
   1ece4:	ldr	r0, [fp, #-4]
   1ece8:	ldr	r1, [fp, #-16]
   1ecec:	add	r1, r1, #1
   1ecf0:	bl	1d52c <__assert_fail@plt+0xc1a8>
   1ecf4:	str	r0, [sp, #8]
   1ecf8:	b	1ed08 <__assert_fail@plt+0xd984>
   1ecfc:	ldr	r0, [fp, #-4]
   1ed00:	ldr	r0, [r0, #8]
   1ed04:	str	r0, [sp, #8]
   1ed08:	ldr	r0, [sp, #8]
   1ed0c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ed10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed14:	ldr	r1, [fp, #-8]
   1ed18:	ldr	r1, [r1, #8]
   1ed1c:	ldr	r2, [fp, #-16]
   1ed20:	ldr	r3, [fp, #-12]
   1ed24:	ldr	r3, [r3, #8]
   1ed28:	ldr	ip, [fp, #-20]	; 0xffffffec
   1ed2c:	mov	lr, sp
   1ed30:	str	ip, [lr]
   1ed34:	bl	1b2d0 <__assert_fail@plt+0x9f4c>
   1ed38:	str	r0, [sp, #28]
   1ed3c:	ldr	r0, [sp, #28]
   1ed40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed44:	ldr	r2, [fp, #-16]
   1ed48:	add	r1, r1, r2, lsl #2
   1ed4c:	str	r0, [r1]
   1ed50:	ldr	r0, [fp, #-16]
   1ed54:	ldr	r1, [sp, #28]
   1ed58:	add	r0, r0, r1
   1ed5c:	mov	sp, fp
   1ed60:	pop	{fp, pc}
   1ed64:	push	{fp, lr}
   1ed68:	mov	fp, sp
   1ed6c:	sub	sp, sp, #64	; 0x40
   1ed70:	str	r0, [fp, #-8]
   1ed74:	str	r1, [fp, #-12]
   1ed78:	str	r2, [fp, #-16]
   1ed7c:	ldr	r0, [fp, #-12]
   1ed80:	ldr	r0, [r0, #4]
   1ed84:	cmp	r0, #0
   1ed88:	blt	1ed9c <__assert_fail@plt+0xda18>
   1ed8c:	ldr	r0, [fp, #-12]
   1ed90:	ldr	r0, [r0, #4]
   1ed94:	str	r0, [sp, #20]
   1ed98:	b	1edb0 <__assert_fail@plt+0xda2c>
   1ed9c:	ldr	r0, [fp, #-12]
   1eda0:	ldr	r0, [r0, #4]
   1eda4:	movw	r1, #0
   1eda8:	sub	r0, r1, r0
   1edac:	str	r0, [sp, #20]
   1edb0:	ldr	r0, [sp, #20]
   1edb4:	str	r0, [fp, #-20]	; 0xffffffec
   1edb8:	ldr	r0, [fp, #-16]
   1edbc:	ldr	r0, [r0, #4]
   1edc0:	cmp	r0, #0
   1edc4:	blt	1edd8 <__assert_fail@plt+0xda54>
   1edc8:	ldr	r0, [fp, #-16]
   1edcc:	ldr	r0, [r0, #4]
   1edd0:	str	r0, [sp, #16]
   1edd4:	b	1edec <__assert_fail@plt+0xda68>
   1edd8:	ldr	r0, [fp, #-16]
   1eddc:	ldr	r0, [r0, #4]
   1ede0:	movw	r1, #0
   1ede4:	sub	r0, r1, r0
   1ede8:	str	r0, [sp, #16]
   1edec:	ldr	r0, [sp, #16]
   1edf0:	str	r0, [fp, #-24]	; 0xffffffe8
   1edf4:	ldr	r0, [fp, #-12]
   1edf8:	ldr	r0, [r0, #8]
   1edfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ee00:	ldr	r2, [fp, #-16]
   1ee04:	ldr	r2, [r2, #8]
   1ee08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ee0c:	bl	1e8e0 <__assert_fail@plt+0xd55c>
   1ee10:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ee18:	cmp	r0, #0
   1ee1c:	ble	1eecc <__assert_fail@plt+0xdb48>
   1ee20:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ee24:	ldr	r1, [fp, #-8]
   1ee28:	ldr	r1, [r1]
   1ee2c:	cmp	r0, r1
   1ee30:	ble	1ee48 <__assert_fail@plt+0xdac4>
   1ee34:	ldr	r0, [fp, #-8]
   1ee38:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ee3c:	bl	1d52c <__assert_fail@plt+0xc1a8>
   1ee40:	str	r0, [sp, #12]
   1ee44:	b	1ee54 <__assert_fail@plt+0xdad0>
   1ee48:	ldr	r0, [fp, #-8]
   1ee4c:	ldr	r0, [r0, #8]
   1ee50:	str	r0, [sp, #12]
   1ee54:	ldr	r0, [sp, #12]
   1ee58:	str	r0, [sp, #32]
   1ee5c:	ldr	r0, [sp, #32]
   1ee60:	ldr	r1, [fp, #-12]
   1ee64:	ldr	r1, [r1, #8]
   1ee68:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ee6c:	ldr	r3, [fp, #-16]
   1ee70:	ldr	r3, [r3, #8]
   1ee74:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1ee78:	str	ip, [sp]
   1ee7c:	bl	1b514 <__assert_fail@plt+0xa190>
   1ee80:	str	r0, [sp, #28]
   1ee84:	ldr	r0, [sp, #28]
   1ee88:	cmp	r0, #0
   1ee8c:	bne	1ee94 <__assert_fail@plt+0xdb10>
   1ee90:	b	1eeb4 <__assert_fail@plt+0xdb30>
   1ee94:	movw	r0, #29949	; 0x74fd
   1ee98:	movt	r0, #3
   1ee9c:	movw	r1, #28968	; 0x7128
   1eea0:	movt	r1, #3
   1eea4:	movw	r2, #2006	; 0x7d6
   1eea8:	movw	r3, #32238	; 0x7dee
   1eeac:	movt	r3, #3
   1eeb0:	bl	11384 <__assert_fail@plt>
   1eeb4:	b	1eeb8 <__assert_fail@plt+0xdb34>
   1eeb8:	ldr	r0, [sp, #32]
   1eebc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1eec0:	bl	1b08c <__assert_fail@plt+0x9d08>
   1eec4:	str	r0, [fp, #-4]
   1eec8:	b	1ef94 <__assert_fail@plt+0xdc10>
   1eecc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1eed0:	cmp	r0, #0
   1eed4:	bge	1ef8c <__assert_fail@plt+0xdc08>
   1eed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eedc:	ldr	r1, [fp, #-8]
   1eee0:	ldr	r1, [r1]
   1eee4:	cmp	r0, r1
   1eee8:	ble	1ef00 <__assert_fail@plt+0xdb7c>
   1eeec:	ldr	r0, [fp, #-8]
   1eef0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eef4:	bl	1d52c <__assert_fail@plt+0xc1a8>
   1eef8:	str	r0, [sp, #8]
   1eefc:	b	1ef0c <__assert_fail@plt+0xdb88>
   1ef00:	ldr	r0, [fp, #-8]
   1ef04:	ldr	r0, [r0, #8]
   1ef08:	str	r0, [sp, #8]
   1ef0c:	ldr	r0, [sp, #8]
   1ef10:	str	r0, [sp, #32]
   1ef14:	ldr	r0, [sp, #32]
   1ef18:	ldr	r1, [fp, #-16]
   1ef1c:	ldr	r1, [r1, #8]
   1ef20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ef24:	ldr	r3, [fp, #-12]
   1ef28:	ldr	r3, [r3, #8]
   1ef2c:	ldr	ip, [fp, #-20]	; 0xffffffec
   1ef30:	str	ip, [sp]
   1ef34:	bl	1b514 <__assert_fail@plt+0xa190>
   1ef38:	str	r0, [sp, #24]
   1ef3c:	ldr	r0, [sp, #24]
   1ef40:	cmp	r0, #0
   1ef44:	bne	1ef4c <__assert_fail@plt+0xdbc8>
   1ef48:	b	1ef6c <__assert_fail@plt+0xdbe8>
   1ef4c:	movw	r0, #29949	; 0x74fd
   1ef50:	movt	r0, #3
   1ef54:	movw	r1, #28968	; 0x7128
   1ef58:	movt	r1, #3
   1ef5c:	movw	r2, #2012	; 0x7dc
   1ef60:	movw	r3, #32238	; 0x7dee
   1ef64:	movt	r3, #3
   1ef68:	bl	11384 <__assert_fail@plt>
   1ef6c:	b	1ef70 <__assert_fail@plt+0xdbec>
   1ef70:	ldr	r0, [sp, #32]
   1ef74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef78:	bl	1b08c <__assert_fail@plt+0x9d08>
   1ef7c:	movw	r1, #0
   1ef80:	sub	r0, r1, r0
   1ef84:	str	r0, [fp, #-4]
   1ef88:	b	1ef94 <__assert_fail@plt+0xdc10>
   1ef8c:	movw	r0, #0
   1ef90:	str	r0, [fp, #-4]
   1ef94:	ldr	r0, [fp, #-4]
   1ef98:	mov	sp, fp
   1ef9c:	pop	{fp, pc}
   1efa0:	push	{fp, lr}
   1efa4:	mov	fp, sp
   1efa8:	sub	sp, sp, #24
   1efac:	str	r0, [fp, #-4]
   1efb0:	str	r1, [fp, #-8]
   1efb4:	str	r2, [sp, #12]
   1efb8:	ldr	r0, [fp, #-8]
   1efbc:	ldr	r0, [r0, #4]
   1efc0:	ldr	r1, [sp, #12]
   1efc4:	ldr	r1, [r1, #4]
   1efc8:	eor	r0, r0, r1
   1efcc:	cmp	r0, #0
   1efd0:	blt	1efec <__assert_fail@plt+0xdc68>
   1efd4:	ldr	r0, [fp, #-4]
   1efd8:	ldr	r1, [fp, #-8]
   1efdc:	ldr	r2, [sp, #12]
   1efe0:	bl	1ed64 <__assert_fail@plt+0xd9e0>
   1efe4:	str	r0, [sp, #8]
   1efe8:	b	1f000 <__assert_fail@plt+0xdc7c>
   1efec:	ldr	r0, [fp, #-4]
   1eff0:	ldr	r1, [fp, #-8]
   1eff4:	ldr	r2, [sp, #12]
   1eff8:	bl	1ebf0 <__assert_fail@plt+0xd86c>
   1effc:	str	r0, [sp, #8]
   1f000:	ldr	r0, [fp, #-8]
   1f004:	ldr	r0, [r0, #4]
   1f008:	cmp	r0, #0
   1f00c:	blt	1f01c <__assert_fail@plt+0xdc98>
   1f010:	ldr	r0, [sp, #8]
   1f014:	str	r0, [sp, #4]
   1f018:	b	1f02c <__assert_fail@plt+0xdca8>
   1f01c:	ldr	r0, [sp, #8]
   1f020:	movw	r1, #0
   1f024:	sub	r0, r1, r0
   1f028:	str	r0, [sp, #4]
   1f02c:	ldr	r0, [sp, #4]
   1f030:	ldr	r1, [fp, #-4]
   1f034:	str	r0, [r1, #4]
   1f038:	mov	sp, fp
   1f03c:	pop	{fp, pc}
   1f040:	push	{fp, lr}
   1f044:	mov	fp, sp
   1f048:	sub	sp, sp, #16
   1f04c:	str	r0, [fp, #-4]
   1f050:	str	r1, [sp, #8]
   1f054:	str	r2, [sp, #4]
   1f058:	ldr	r0, [sp, #4]
   1f05c:	cmp	r0, #0
   1f060:	bge	1f094 <__assert_fail@plt+0xdd10>
   1f064:	ldr	r0, [fp, #-4]
   1f068:	ldr	r1, [sp, #8]
   1f06c:	ldr	r2, [sp, #4]
   1f070:	add	r2, r2, #1
   1f074:	sub	r2, r2, #1
   1f078:	movw	r3, #0
   1f07c:	sub	r2, r3, r2
   1f080:	bl	1f0ac <__assert_fail@plt+0xdd28>
   1f084:	ldr	r0, [fp, #-4]
   1f088:	ldr	r1, [fp, #-4]
   1f08c:	bl	1e9bc <__assert_fail@plt+0xd638>
   1f090:	b	1f0a4 <__assert_fail@plt+0xdd20>
   1f094:	ldr	r0, [fp, #-4]
   1f098:	ldr	r1, [sp, #8]
   1f09c:	ldr	r2, [sp, #4]
   1f0a0:	bl	1f0ac <__assert_fail@plt+0xdd28>
   1f0a4:	mov	sp, fp
   1f0a8:	pop	{fp, pc}
   1f0ac:	push	{fp, lr}
   1f0b0:	mov	fp, sp
   1f0b4:	sub	sp, sp, #24
   1f0b8:	mov	r3, sp
   1f0bc:	str	r0, [fp, #-4]
   1f0c0:	str	r1, [fp, #-8]
   1f0c4:	str	r2, [sp, #12]
   1f0c8:	ldr	r1, [sp, #12]
   1f0cc:	mov	r0, r3
   1f0d0:	bl	1d714 <__assert_fail@plt+0xc390>
   1f0d4:	mov	r2, sp
   1f0d8:	ldr	r0, [fp, #-4]
   1f0dc:	ldr	r1, [fp, #-8]
   1f0e0:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   1f0e4:	mov	r0, sp
   1f0e8:	bl	1d384 <__assert_fail@plt+0xc000>
   1f0ec:	mov	sp, fp
   1f0f0:	pop	{fp, pc}
   1f0f4:	push	{fp, lr}
   1f0f8:	mov	fp, sp
   1f0fc:	sub	sp, sp, #64	; 0x40
   1f100:	str	r0, [fp, #-4]
   1f104:	str	r1, [fp, #-8]
   1f108:	str	r2, [fp, #-12]
   1f10c:	ldr	r0, [fp, #-8]
   1f110:	ldr	r0, [r0, #4]
   1f114:	str	r0, [fp, #-20]	; 0xffffffec
   1f118:	ldr	r0, [fp, #-12]
   1f11c:	ldr	r0, [r0, #4]
   1f120:	str	r0, [fp, #-24]	; 0xffffffe8
   1f124:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f128:	cmp	r0, #0
   1f12c:	beq	1f13c <__assert_fail@plt+0xddb8>
   1f130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f134:	cmp	r0, #0
   1f138:	bne	1f14c <__assert_fail@plt+0xddc8>
   1f13c:	ldr	r0, [fp, #-4]
   1f140:	movw	r1, #0
   1f144:	str	r1, [r0, #4]
   1f148:	b	1f2cc <__assert_fail@plt+0xdf48>
   1f14c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f150:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f154:	eor	r0, r0, r1
   1f158:	cmp	r0, #0
   1f15c:	movw	r0, #0
   1f160:	movlt	r0, #1
   1f164:	and	r0, r0, #1
   1f168:	str	r0, [fp, #-16]
   1f16c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f170:	cmp	r0, #0
   1f174:	blt	1f184 <__assert_fail@plt+0xde00>
   1f178:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f17c:	str	r0, [sp, #16]
   1f180:	b	1f194 <__assert_fail@plt+0xde10>
   1f184:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f188:	movw	r1, #0
   1f18c:	sub	r0, r1, r0
   1f190:	str	r0, [sp, #16]
   1f194:	ldr	r0, [sp, #16]
   1f198:	str	r0, [fp, #-20]	; 0xffffffec
   1f19c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1a0:	cmp	r0, #0
   1f1a4:	blt	1f1b4 <__assert_fail@plt+0xde30>
   1f1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1ac:	str	r0, [sp, #12]
   1f1b0:	b	1f1c4 <__assert_fail@plt+0xde40>
   1f1b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1b8:	movw	r1, #0
   1f1bc:	sub	r0, r1, r0
   1f1c0:	str	r0, [sp, #12]
   1f1c4:	ldr	r0, [sp, #12]
   1f1c8:	str	r0, [fp, #-24]	; 0xffffffe8
   1f1cc:	add	r0, sp, #24
   1f1d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f1d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f1d8:	add	r1, r1, r2
   1f1dc:	lsl	r1, r1, #5
   1f1e0:	bl	1d2e0 <__assert_fail@plt+0xbf5c>
   1f1e4:	ldr	r0, [sp, #32]
   1f1e8:	str	r0, [sp, #20]
   1f1ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f1f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f1f4:	cmp	r0, r1
   1f1f8:	blt	1f224 <__assert_fail@plt+0xdea0>
   1f1fc:	ldr	r0, [sp, #20]
   1f200:	ldr	r1, [fp, #-8]
   1f204:	ldr	r1, [r1, #8]
   1f208:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f20c:	ldr	r3, [fp, #-12]
   1f210:	ldr	r3, [r3, #8]
   1f214:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1f218:	str	ip, [sp]
   1f21c:	bl	1bbb8 <__assert_fail@plt+0xa834>
   1f220:	b	1f248 <__assert_fail@plt+0xdec4>
   1f224:	ldr	r0, [sp, #20]
   1f228:	ldr	r1, [fp, #-12]
   1f22c:	ldr	r1, [r1, #8]
   1f230:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f234:	ldr	r3, [fp, #-8]
   1f238:	ldr	r3, [r3, #8]
   1f23c:	ldr	ip, [fp, #-20]	; 0xffffffec
   1f240:	str	ip, [sp]
   1f244:	bl	1bbb8 <__assert_fail@plt+0xa834>
   1f248:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f24c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f250:	add	r0, r0, r1
   1f254:	str	r0, [fp, #-28]	; 0xffffffe4
   1f258:	ldr	r0, [sp, #20]
   1f25c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f260:	sub	r1, r1, #1
   1f264:	add	r0, r0, r1, lsl #2
   1f268:	ldr	r0, [r0]
   1f26c:	cmp	r0, #0
   1f270:	movw	r0, #0
   1f274:	moveq	r0, #1
   1f278:	and	r0, r0, #1
   1f27c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f280:	sub	r0, r1, r0
   1f284:	str	r0, [fp, #-28]	; 0xffffffe4
   1f288:	ldr	r0, [fp, #-16]
   1f28c:	cmp	r0, #0
   1f290:	beq	1f2a8 <__assert_fail@plt+0xdf24>
   1f294:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f298:	movw	r1, #0
   1f29c:	sub	r0, r1, r0
   1f2a0:	str	r0, [sp, #8]
   1f2a4:	b	1f2b0 <__assert_fail@plt+0xdf2c>
   1f2a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f2ac:	str	r0, [sp, #8]
   1f2b0:	ldr	r0, [sp, #8]
   1f2b4:	add	r1, sp, #24
   1f2b8:	str	r0, [sp, #28]
   1f2bc:	ldr	r0, [fp, #-4]
   1f2c0:	bl	1e9fc <__assert_fail@plt+0xd678>
   1f2c4:	add	r0, sp, #24
   1f2c8:	bl	1d384 <__assert_fail@plt+0xc000>
   1f2cc:	mov	sp, fp
   1f2d0:	pop	{fp, pc}
   1f2d4:	push	{fp, lr}
   1f2d8:	mov	fp, sp
   1f2dc:	sub	sp, sp, #48	; 0x30
   1f2e0:	str	r0, [fp, #-4]
   1f2e4:	str	r1, [fp, #-8]
   1f2e8:	str	r2, [fp, #-12]
   1f2ec:	ldr	r0, [fp, #-8]
   1f2f0:	ldr	r0, [r0, #4]
   1f2f4:	cmp	r0, #0
   1f2f8:	blt	1f30c <__assert_fail@plt+0xdf88>
   1f2fc:	ldr	r0, [fp, #-8]
   1f300:	ldr	r0, [r0, #4]
   1f304:	str	r0, [sp, #8]
   1f308:	b	1f320 <__assert_fail@plt+0xdf9c>
   1f30c:	ldr	r0, [fp, #-8]
   1f310:	ldr	r0, [r0, #4]
   1f314:	movw	r1, #0
   1f318:	sub	r0, r1, r0
   1f31c:	str	r0, [sp, #8]
   1f320:	ldr	r0, [sp, #8]
   1f324:	str	r0, [fp, #-16]
   1f328:	ldr	r0, [fp, #-16]
   1f32c:	cmp	r0, #0
   1f330:	bne	1f344 <__assert_fail@plt+0xdfc0>
   1f334:	ldr	r0, [fp, #-4]
   1f338:	movw	r1, #0
   1f33c:	str	r1, [r0, #4]
   1f340:	b	1f48c <__assert_fail@plt+0xe108>
   1f344:	ldr	r0, [fp, #-12]
   1f348:	lsr	r0, r0, #5
   1f34c:	str	r0, [sp, #24]
   1f350:	ldr	r0, [fp, #-12]
   1f354:	and	r0, r0, #31
   1f358:	str	r0, [sp, #20]
   1f35c:	ldr	r0, [fp, #-16]
   1f360:	ldr	r1, [sp, #24]
   1f364:	add	r0, r0, r1
   1f368:	ldr	r1, [sp, #20]
   1f36c:	cmp	r1, #0
   1f370:	movw	r1, #0
   1f374:	movhi	r1, #1
   1f378:	and	r1, r1, #1
   1f37c:	add	r0, r0, r1
   1f380:	str	r0, [fp, #-20]	; 0xffffffec
   1f384:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f388:	ldr	r1, [fp, #-4]
   1f38c:	ldr	r1, [r1]
   1f390:	cmp	r0, r1
   1f394:	ble	1f3ac <__assert_fail@plt+0xe028>
   1f398:	ldr	r0, [fp, #-4]
   1f39c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f3a0:	bl	1d52c <__assert_fail@plt+0xc1a8>
   1f3a4:	str	r0, [sp, #4]
   1f3a8:	b	1f3b8 <__assert_fail@plt+0xe034>
   1f3ac:	ldr	r0, [fp, #-4]
   1f3b0:	ldr	r0, [r0, #8]
   1f3b4:	str	r0, [sp, #4]
   1f3b8:	ldr	r0, [sp, #4]
   1f3bc:	str	r0, [sp, #16]
   1f3c0:	ldr	r0, [sp, #20]
   1f3c4:	cmp	r0, #0
   1f3c8:	bls	1f42c <__assert_fail@plt+0xe0a8>
   1f3cc:	ldr	r0, [sp, #16]
   1f3d0:	ldr	r1, [sp, #24]
   1f3d4:	add	r0, r0, r1, lsl #2
   1f3d8:	ldr	r1, [fp, #-8]
   1f3dc:	ldr	r1, [r1, #8]
   1f3e0:	ldr	r2, [fp, #-16]
   1f3e4:	ldr	r3, [sp, #20]
   1f3e8:	bl	1be0c <__assert_fail@plt+0xaa88>
   1f3ec:	str	r0, [sp, #12]
   1f3f0:	ldr	r0, [sp, #12]
   1f3f4:	ldr	r1, [sp, #16]
   1f3f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f3fc:	sub	r2, r2, #1
   1f400:	add	r1, r1, r2, lsl #2
   1f404:	str	r0, [r1]
   1f408:	ldr	r0, [sp, #12]
   1f40c:	cmp	r0, #0
   1f410:	movw	r0, #0
   1f414:	moveq	r0, #1
   1f418:	and	r0, r0, #1
   1f41c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f420:	sub	r0, r1, r0
   1f424:	str	r0, [fp, #-20]	; 0xffffffec
   1f428:	b	1f448 <__assert_fail@plt+0xe0c4>
   1f42c:	ldr	r0, [sp, #16]
   1f430:	ldr	r1, [sp, #24]
   1f434:	add	r0, r0, r1, lsl #2
   1f438:	ldr	r1, [fp, #-8]
   1f43c:	ldr	r1, [r1, #8]
   1f440:	ldr	r2, [fp, #-16]
   1f444:	bl	1af70 <__assert_fail@plt+0x9bec>
   1f448:	ldr	r0, [sp, #16]
   1f44c:	ldr	r1, [sp, #24]
   1f450:	bl	1b0fc <__assert_fail@plt+0x9d78>
   1f454:	ldr	r0, [fp, #-8]
   1f458:	ldr	r0, [r0, #4]
   1f45c:	cmp	r0, #0
   1f460:	bge	1f478 <__assert_fail@plt+0xe0f4>
   1f464:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f468:	movw	r1, #0
   1f46c:	sub	r0, r1, r0
   1f470:	str	r0, [sp]
   1f474:	b	1f480 <__assert_fail@plt+0xe0fc>
   1f478:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f47c:	str	r0, [sp]
   1f480:	ldr	r0, [sp]
   1f484:	ldr	r1, [fp, #-4]
   1f488:	str	r0, [r1, #4]
   1f48c:	mov	sp, fp
   1f490:	pop	{fp, pc}
   1f494:	push	{fp, lr}
   1f498:	mov	fp, sp
   1f49c:	sub	sp, sp, #32
   1f4a0:	add	r3, sp, #8
   1f4a4:	str	r0, [fp, #-4]
   1f4a8:	str	r1, [fp, #-8]
   1f4ac:	str	r2, [fp, #-12]
   1f4b0:	ldr	r1, [fp, #-12]
   1f4b4:	mov	r0, r3
   1f4b8:	bl	1d714 <__assert_fail@plt+0xc390>
   1f4bc:	add	r0, sp, #8
   1f4c0:	ldr	r1, [fp, #-8]
   1f4c4:	str	r0, [sp, #4]
   1f4c8:	ldr	r2, [sp, #4]
   1f4cc:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   1f4d0:	add	r2, sp, #8
   1f4d4:	ldr	r0, [fp, #-4]
   1f4d8:	ldr	r1, [fp, #-4]
   1f4dc:	bl	1ead8 <__assert_fail@plt+0xd754>
   1f4e0:	add	r0, sp, #8
   1f4e4:	bl	1d384 <__assert_fail@plt+0xc000>
   1f4e8:	mov	sp, fp
   1f4ec:	pop	{fp, pc}
   1f4f0:	push	{fp, lr}
   1f4f4:	mov	fp, sp
   1f4f8:	sub	sp, sp, #32
   1f4fc:	add	r3, sp, #8
   1f500:	str	r0, [fp, #-4]
   1f504:	str	r1, [fp, #-8]
   1f508:	str	r2, [fp, #-12]
   1f50c:	ldr	r1, [fp, #-12]
   1f510:	mov	r0, r3
   1f514:	bl	1d714 <__assert_fail@plt+0xc390>
   1f518:	add	r0, sp, #8
   1f51c:	ldr	r1, [fp, #-8]
   1f520:	str	r0, [sp, #4]
   1f524:	ldr	r2, [sp, #4]
   1f528:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   1f52c:	add	r2, sp, #8
   1f530:	ldr	r0, [fp, #-4]
   1f534:	ldr	r1, [fp, #-4]
   1f538:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   1f53c:	add	r0, sp, #8
   1f540:	bl	1d384 <__assert_fail@plt+0xc000>
   1f544:	mov	sp, fp
   1f548:	pop	{fp, pc}
   1f54c:	push	{fp, lr}
   1f550:	mov	fp, sp
   1f554:	sub	sp, sp, #24
   1f558:	mov	r3, sp
   1f55c:	str	r0, [fp, #-4]
   1f560:	str	r1, [fp, #-8]
   1f564:	str	r2, [sp, #12]
   1f568:	mov	r0, r3
   1f56c:	bl	1d2ac <__assert_fail@plt+0xbf28>
   1f570:	mov	r0, sp
   1f574:	ldr	r1, [fp, #-8]
   1f578:	ldr	r2, [sp, #12]
   1f57c:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   1f580:	mov	r2, sp
   1f584:	ldr	r0, [fp, #-4]
   1f588:	ldr	r1, [fp, #-4]
   1f58c:	bl	1ead8 <__assert_fail@plt+0xd754>
   1f590:	mov	r0, sp
   1f594:	bl	1d384 <__assert_fail@plt+0xc000>
   1f598:	mov	sp, fp
   1f59c:	pop	{fp, pc}
   1f5a0:	push	{fp, lr}
   1f5a4:	mov	fp, sp
   1f5a8:	sub	sp, sp, #24
   1f5ac:	mov	r3, sp
   1f5b0:	str	r0, [fp, #-4]
   1f5b4:	str	r1, [fp, #-8]
   1f5b8:	str	r2, [sp, #12]
   1f5bc:	mov	r0, r3
   1f5c0:	bl	1d2ac <__assert_fail@plt+0xbf28>
   1f5c4:	mov	r0, sp
   1f5c8:	ldr	r1, [fp, #-8]
   1f5cc:	ldr	r2, [sp, #12]
   1f5d0:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   1f5d4:	mov	r2, sp
   1f5d8:	ldr	r0, [fp, #-4]
   1f5dc:	ldr	r1, [fp, #-4]
   1f5e0:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   1f5e4:	mov	r0, sp
   1f5e8:	bl	1d384 <__assert_fail@plt+0xc000>
   1f5ec:	mov	sp, fp
   1f5f0:	pop	{fp, pc}
   1f5f4:	push	{fp, lr}
   1f5f8:	mov	fp, sp
   1f5fc:	sub	sp, sp, #24
   1f600:	str	r0, [fp, #-4]
   1f604:	str	r1, [fp, #-8]
   1f608:	str	r2, [sp, #12]
   1f60c:	str	r3, [sp, #8]
   1f610:	ldr	r0, [fp, #-4]
   1f614:	ldr	r1, [fp, #-8]
   1f618:	ldr	r2, [sp, #12]
   1f61c:	ldr	r3, [sp, #8]
   1f620:	movw	ip, #1
   1f624:	str	ip, [sp]
   1f628:	bl	1f634 <__assert_fail@plt+0xe2b0>
   1f62c:	mov	sp, fp
   1f630:	pop	{fp, pc}
   1f634:	push	{fp, lr}
   1f638:	mov	fp, sp
   1f63c:	sub	sp, sp, #120	; 0x78
   1f640:	ldr	ip, [fp, #8]
   1f644:	str	r0, [fp, #-8]
   1f648:	str	r1, [fp, #-12]
   1f64c:	str	r2, [fp, #-16]
   1f650:	str	r3, [fp, #-20]	; 0xffffffec
   1f654:	ldr	r0, [fp, #-16]
   1f658:	ldr	r0, [r0, #4]
   1f65c:	str	r0, [fp, #-24]	; 0xffffffe8
   1f660:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f664:	ldr	r0, [r0, #4]
   1f668:	str	r0, [fp, #-28]	; 0xffffffe4
   1f66c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f670:	cmp	r0, #0
   1f674:	bne	1f684 <__assert_fail@plt+0xe300>
   1f678:	movw	r0, #32320	; 0x7e40
   1f67c:	movt	r0, #3
   1f680:	bl	21dd8 <__assert_fail@plt+0x10a54>
   1f684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f688:	cmp	r0, #0
   1f68c:	bne	1f6d4 <__assert_fail@plt+0xe350>
   1f690:	ldr	r0, [fp, #-8]
   1f694:	movw	r1, #0
   1f698:	cmp	r0, r1
   1f69c:	beq	1f6ac <__assert_fail@plt+0xe328>
   1f6a0:	ldr	r0, [fp, #-8]
   1f6a4:	movw	r1, #0
   1f6a8:	str	r1, [r0, #4]
   1f6ac:	ldr	r0, [fp, #-12]
   1f6b0:	movw	r1, #0
   1f6b4:	cmp	r0, r1
   1f6b8:	beq	1f6c8 <__assert_fail@plt+0xe344>
   1f6bc:	ldr	r0, [fp, #-12]
   1f6c0:	movw	r1, #0
   1f6c4:	str	r1, [r0, #4]
   1f6c8:	movw	r0, #0
   1f6cc:	str	r0, [fp, #-4]
   1f6d0:	b	1fac0 <__assert_fail@plt+0xe73c>
   1f6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6d8:	cmp	r0, #0
   1f6dc:	blt	1f6ec <__assert_fail@plt+0xe368>
   1f6e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6e4:	str	r0, [sp, #36]	; 0x24
   1f6e8:	b	1f6fc <__assert_fail@plt+0xe378>
   1f6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6f0:	movw	r1, #0
   1f6f4:	sub	r0, r1, r0
   1f6f8:	str	r0, [sp, #36]	; 0x24
   1f6fc:	ldr	r0, [sp, #36]	; 0x24
   1f700:	str	r0, [fp, #-32]	; 0xffffffe0
   1f704:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f708:	cmp	r0, #0
   1f70c:	blt	1f71c <__assert_fail@plt+0xe398>
   1f710:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f714:	str	r0, [sp, #32]
   1f718:	b	1f72c <__assert_fail@plt+0xe3a8>
   1f71c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f720:	movw	r1, #0
   1f724:	sub	r0, r1, r0
   1f728:	str	r0, [sp, #32]
   1f72c:	ldr	r0, [sp, #32]
   1f730:	str	r0, [fp, #-36]	; 0xffffffdc
   1f734:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f738:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f73c:	eor	r0, r0, r1
   1f740:	str	r0, [fp, #-40]	; 0xffffffd8
   1f744:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f748:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f74c:	cmp	r0, r1
   1f750:	bge	1f850 <__assert_fail@plt+0xe4cc>
   1f754:	ldr	r0, [fp, #8]
   1f758:	cmp	r0, #1
   1f75c:	bne	1f7ac <__assert_fail@plt+0xe428>
   1f760:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f764:	cmp	r0, #0
   1f768:	blt	1f7ac <__assert_fail@plt+0xe428>
   1f76c:	ldr	r0, [fp, #-12]
   1f770:	movw	r1, #0
   1f774:	cmp	r0, r1
   1f778:	beq	1f78c <__assert_fail@plt+0xe408>
   1f77c:	ldr	r0, [fp, #-12]
   1f780:	ldr	r1, [fp, #-16]
   1f784:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f788:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   1f78c:	ldr	r0, [fp, #-8]
   1f790:	movw	r1, #0
   1f794:	cmp	r0, r1
   1f798:	beq	1f7a8 <__assert_fail@plt+0xe424>
   1f79c:	ldr	r0, [fp, #-8]
   1f7a0:	movw	r1, #1
   1f7a4:	bl	1d4a4 <__assert_fail@plt+0xc120>
   1f7a8:	b	1f844 <__assert_fail@plt+0xe4c0>
   1f7ac:	ldr	r0, [fp, #8]
   1f7b0:	cmp	r0, #0
   1f7b4:	bne	1f804 <__assert_fail@plt+0xe480>
   1f7b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f7bc:	cmp	r0, #0
   1f7c0:	bge	1f804 <__assert_fail@plt+0xe480>
   1f7c4:	ldr	r0, [fp, #-12]
   1f7c8:	movw	r1, #0
   1f7cc:	cmp	r0, r1
   1f7d0:	beq	1f7e4 <__assert_fail@plt+0xe460>
   1f7d4:	ldr	r0, [fp, #-12]
   1f7d8:	ldr	r1, [fp, #-16]
   1f7dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f7e0:	bl	1ead8 <__assert_fail@plt+0xd754>
   1f7e4:	ldr	r0, [fp, #-8]
   1f7e8:	movw	r1, #0
   1f7ec:	cmp	r0, r1
   1f7f0:	beq	1f800 <__assert_fail@plt+0xe47c>
   1f7f4:	ldr	r0, [fp, #-8]
   1f7f8:	mvn	r1, #0
   1f7fc:	bl	1d408 <__assert_fail@plt+0xc084>
   1f800:	b	1f840 <__assert_fail@plt+0xe4bc>
   1f804:	ldr	r0, [fp, #-12]
   1f808:	movw	r1, #0
   1f80c:	cmp	r0, r1
   1f810:	beq	1f820 <__assert_fail@plt+0xe49c>
   1f814:	ldr	r0, [fp, #-12]
   1f818:	ldr	r1, [fp, #-16]
   1f81c:	bl	1d61c <__assert_fail@plt+0xc298>
   1f820:	ldr	r0, [fp, #-8]
   1f824:	movw	r1, #0
   1f828:	cmp	r0, r1
   1f82c:	beq	1f83c <__assert_fail@plt+0xe4b8>
   1f830:	ldr	r0, [fp, #-8]
   1f834:	movw	r1, #0
   1f838:	str	r1, [r0, #4]
   1f83c:	b	1f840 <__assert_fail@plt+0xe4bc>
   1f840:	b	1f844 <__assert_fail@plt+0xe4c0>
   1f844:	movw	r0, #1
   1f848:	str	r0, [fp, #-4]
   1f84c:	b	1fac0 <__assert_fail@plt+0xe73c>
   1f850:	add	r0, sp, #40	; 0x28
   1f854:	ldr	r1, [fp, #-16]
   1f858:	bl	1d744 <__assert_fail@plt+0xc3c0>
   1f85c:	ldr	r0, [sp, #48]	; 0x30
   1f860:	str	r0, [fp, #-44]	; 0xffffffd4
   1f864:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f868:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f86c:	sub	r0, r0, r1
   1f870:	add	r0, r0, #1
   1f874:	str	r0, [fp, #-52]	; 0xffffffcc
   1f878:	ldr	r0, [fp, #-8]
   1f87c:	movw	r1, #0
   1f880:	cmp	r0, r1
   1f884:	beq	1f8a4 <__assert_fail@plt+0xe520>
   1f888:	add	r0, sp, #52	; 0x34
   1f88c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f890:	lsl	r1, r1, #5
   1f894:	bl	1d2e0 <__assert_fail@plt+0xbf5c>
   1f898:	ldr	r0, [sp, #60]	; 0x3c
   1f89c:	str	r0, [fp, #-48]	; 0xffffffd0
   1f8a0:	b	1f8ac <__assert_fail@plt+0xe528>
   1f8a4:	movw	r0, #0
   1f8a8:	str	r0, [fp, #-48]	; 0xffffffd0
   1f8ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f8b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f8b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f8b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f8bc:	ldr	r3, [r3, #8]
   1f8c0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1f8c4:	str	ip, [sp]
   1f8c8:	bl	267ec <__assert_fail@plt+0x15468>
   1f8cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f8d0:	movw	r1, #0
   1f8d4:	cmp	r0, r1
   1f8d8:	beq	1f93c <__assert_fail@plt+0xe5b8>
   1f8dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f8e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f8e4:	sub	r1, r1, #1
   1f8e8:	add	r0, r0, r1, lsl #2
   1f8ec:	ldr	r0, [r0]
   1f8f0:	cmp	r0, #0
   1f8f4:	movw	r0, #0
   1f8f8:	moveq	r0, #1
   1f8fc:	and	r0, r0, #1
   1f900:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f904:	sub	r0, r1, r0
   1f908:	str	r0, [fp, #-52]	; 0xffffffcc
   1f90c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f910:	cmp	r0, #0
   1f914:	bge	1f92c <__assert_fail@plt+0xe5a8>
   1f918:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f91c:	movw	r1, #0
   1f920:	sub	r0, r1, r0
   1f924:	str	r0, [sp, #28]
   1f928:	b	1f934 <__assert_fail@plt+0xe5b0>
   1f92c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f930:	str	r0, [sp, #28]
   1f934:	ldr	r0, [sp, #28]
   1f938:	str	r0, [sp, #56]	; 0x38
   1f93c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f940:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f944:	bl	1b08c <__assert_fail@plt+0x9d08>
   1f948:	str	r0, [fp, #-56]	; 0xffffffc8
   1f94c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f950:	cmp	r0, #0
   1f954:	bge	1f96c <__assert_fail@plt+0xe5e8>
   1f958:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f95c:	movw	r1, #0
   1f960:	sub	r0, r1, r0
   1f964:	str	r0, [sp, #24]
   1f968:	b	1f974 <__assert_fail@plt+0xe5f0>
   1f96c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f970:	str	r0, [sp, #24]
   1f974:	ldr	r0, [sp, #24]
   1f978:	str	r0, [sp, #44]	; 0x2c
   1f97c:	ldr	r0, [fp, #8]
   1f980:	cmp	r0, #0
   1f984:	bne	1f9ec <__assert_fail@plt+0xe668>
   1f988:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f98c:	cmp	r0, #0
   1f990:	bge	1f9ec <__assert_fail@plt+0xe668>
   1f994:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f998:	cmp	r0, #0
   1f99c:	beq	1f9ec <__assert_fail@plt+0xe668>
   1f9a0:	ldr	r0, [fp, #-8]
   1f9a4:	movw	r1, #0
   1f9a8:	cmp	r0, r1
   1f9ac:	beq	1f9c4 <__assert_fail@plt+0xe640>
   1f9b0:	add	r0, sp, #52	; 0x34
   1f9b4:	str	r0, [sp, #20]
   1f9b8:	ldr	r1, [sp, #20]
   1f9bc:	movw	r2, #1
   1f9c0:	bl	1eb78 <__assert_fail@plt+0xd7f4>
   1f9c4:	ldr	r0, [fp, #-12]
   1f9c8:	movw	r1, #0
   1f9cc:	cmp	r0, r1
   1f9d0:	beq	1f9e8 <__assert_fail@plt+0xe664>
   1f9d4:	add	r0, sp, #40	; 0x28
   1f9d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f9dc:	str	r0, [sp, #16]
   1f9e0:	ldr	r1, [sp, #16]
   1f9e4:	bl	1ead8 <__assert_fail@plt+0xd754>
   1f9e8:	b	1fa60 <__assert_fail@plt+0xe6dc>
   1f9ec:	ldr	r0, [fp, #8]
   1f9f0:	cmp	r0, #1
   1f9f4:	bne	1fa5c <__assert_fail@plt+0xe6d8>
   1f9f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f9fc:	cmp	r0, #0
   1fa00:	blt	1fa5c <__assert_fail@plt+0xe6d8>
   1fa04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fa08:	cmp	r0, #0
   1fa0c:	beq	1fa5c <__assert_fail@plt+0xe6d8>
   1fa10:	ldr	r0, [fp, #-8]
   1fa14:	movw	r1, #0
   1fa18:	cmp	r0, r1
   1fa1c:	beq	1fa34 <__assert_fail@plt+0xe6b0>
   1fa20:	add	r0, sp, #52	; 0x34
   1fa24:	str	r0, [sp, #12]
   1fa28:	ldr	r1, [sp, #12]
   1fa2c:	movw	r2, #1
   1fa30:	bl	1ea90 <__assert_fail@plt+0xd70c>
   1fa34:	ldr	r0, [fp, #-12]
   1fa38:	movw	r1, #0
   1fa3c:	cmp	r0, r1
   1fa40:	beq	1fa58 <__assert_fail@plt+0xe6d4>
   1fa44:	add	r0, sp, #40	; 0x28
   1fa48:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fa4c:	str	r0, [sp, #8]
   1fa50:	ldr	r1, [sp, #8]
   1fa54:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   1fa58:	b	1fa5c <__assert_fail@plt+0xe6d8>
   1fa5c:	b	1fa60 <__assert_fail@plt+0xe6dc>
   1fa60:	ldr	r0, [fp, #-8]
   1fa64:	movw	r1, #0
   1fa68:	cmp	r0, r1
   1fa6c:	beq	1fa84 <__assert_fail@plt+0xe700>
   1fa70:	add	r0, sp, #52	; 0x34
   1fa74:	ldr	r1, [fp, #-8]
   1fa78:	bl	1e9fc <__assert_fail@plt+0xd678>
   1fa7c:	add	r0, sp, #52	; 0x34
   1fa80:	bl	1d384 <__assert_fail@plt+0xc000>
   1fa84:	ldr	r0, [fp, #-12]
   1fa88:	movw	r1, #0
   1fa8c:	cmp	r0, r1
   1fa90:	beq	1faa0 <__assert_fail@plt+0xe71c>
   1fa94:	add	r0, sp, #40	; 0x28
   1fa98:	ldr	r1, [fp, #-12]
   1fa9c:	bl	1e9fc <__assert_fail@plt+0xd678>
   1faa0:	add	r0, sp, #40	; 0x28
   1faa4:	bl	1d384 <__assert_fail@plt+0xc000>
   1faa8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1faac:	cmp	r0, #0
   1fab0:	movw	r0, #0
   1fab4:	movne	r0, #1
   1fab8:	and	r0, r0, #1
   1fabc:	str	r0, [fp, #-4]
   1fac0:	ldr	r0, [fp, #-4]
   1fac4:	mov	sp, fp
   1fac8:	pop	{fp, pc}
   1facc:	push	{fp, lr}
   1fad0:	mov	fp, sp
   1fad4:	sub	sp, sp, #24
   1fad8:	str	r0, [fp, #-4]
   1fadc:	str	r1, [fp, #-8]
   1fae0:	str	r2, [sp, #12]
   1fae4:	str	r3, [sp, #8]
   1fae8:	ldr	r0, [fp, #-4]
   1faec:	ldr	r1, [fp, #-8]
   1faf0:	ldr	r2, [sp, #12]
   1faf4:	ldr	r3, [sp, #8]
   1faf8:	movw	ip, #0
   1fafc:	str	ip, [sp]
   1fb00:	bl	1f634 <__assert_fail@plt+0xe2b0>
   1fb04:	mov	sp, fp
   1fb08:	pop	{fp, pc}
   1fb0c:	push	{fp, lr}
   1fb10:	mov	fp, sp
   1fb14:	sub	sp, sp, #24
   1fb18:	str	r0, [fp, #-4]
   1fb1c:	str	r1, [fp, #-8]
   1fb20:	str	r2, [sp, #12]
   1fb24:	str	r3, [sp, #8]
   1fb28:	ldr	r0, [fp, #-4]
   1fb2c:	ldr	r1, [fp, #-8]
   1fb30:	ldr	r2, [sp, #12]
   1fb34:	ldr	r3, [sp, #8]
   1fb38:	movw	ip, #2
   1fb3c:	str	ip, [sp]
   1fb40:	bl	1f634 <__assert_fail@plt+0xe2b0>
   1fb44:	mov	sp, fp
   1fb48:	pop	{fp, pc}
   1fb4c:	push	{fp, lr}
   1fb50:	mov	fp, sp
   1fb54:	sub	sp, sp, #16
   1fb58:	str	r0, [fp, #-4]
   1fb5c:	str	r1, [sp, #8]
   1fb60:	str	r2, [sp, #4]
   1fb64:	ldr	r0, [fp, #-4]
   1fb68:	ldr	r2, [sp, #8]
   1fb6c:	ldr	r3, [sp, #4]
   1fb70:	movw	r1, #0
   1fb74:	movw	ip, #1
   1fb78:	str	ip, [sp]
   1fb7c:	bl	1f634 <__assert_fail@plt+0xe2b0>
   1fb80:	mov	sp, fp
   1fb84:	pop	{fp, pc}
   1fb88:	push	{fp, lr}
   1fb8c:	mov	fp, sp
   1fb90:	sub	sp, sp, #24
   1fb94:	str	r0, [fp, #-4]
   1fb98:	str	r1, [fp, #-8]
   1fb9c:	str	r2, [sp, #12]
   1fba0:	ldr	r0, [fp, #-4]
   1fba4:	ldr	r2, [fp, #-8]
   1fba8:	ldr	r3, [sp, #12]
   1fbac:	movw	r1, #0
   1fbb0:	str	r1, [sp, #8]
   1fbb4:	ldr	ip, [sp, #8]
   1fbb8:	str	ip, [sp]
   1fbbc:	bl	1f634 <__assert_fail@plt+0xe2b0>
   1fbc0:	mov	sp, fp
   1fbc4:	pop	{fp, pc}
   1fbc8:	push	{fp, lr}
   1fbcc:	mov	fp, sp
   1fbd0:	sub	sp, sp, #16
   1fbd4:	str	r0, [fp, #-4]
   1fbd8:	str	r1, [sp, #8]
   1fbdc:	str	r2, [sp, #4]
   1fbe0:	ldr	r0, [fp, #-4]
   1fbe4:	ldr	r2, [sp, #8]
   1fbe8:	ldr	r3, [sp, #4]
   1fbec:	movw	r1, #0
   1fbf0:	movw	ip, #2
   1fbf4:	str	ip, [sp]
   1fbf8:	bl	1f634 <__assert_fail@plt+0xe2b0>
   1fbfc:	mov	sp, fp
   1fc00:	pop	{fp, pc}
   1fc04:	push	{fp, lr}
   1fc08:	mov	fp, sp
   1fc0c:	sub	sp, sp, #16
   1fc10:	str	r0, [fp, #-4]
   1fc14:	str	r1, [sp, #8]
   1fc18:	str	r2, [sp, #4]
   1fc1c:	ldr	r1, [fp, #-4]
   1fc20:	ldr	r2, [sp, #8]
   1fc24:	ldr	r3, [sp, #4]
   1fc28:	movw	r0, #0
   1fc2c:	movw	ip, #1
   1fc30:	str	ip, [sp]
   1fc34:	bl	1f634 <__assert_fail@plt+0xe2b0>
   1fc38:	mov	sp, fp
   1fc3c:	pop	{fp, pc}
   1fc40:	push	{fp, lr}
   1fc44:	mov	fp, sp
   1fc48:	sub	sp, sp, #24
   1fc4c:	str	r0, [fp, #-4]
   1fc50:	str	r1, [fp, #-8]
   1fc54:	str	r2, [sp, #12]
   1fc58:	ldr	r1, [fp, #-4]
   1fc5c:	ldr	r2, [fp, #-8]
   1fc60:	ldr	r3, [sp, #12]
   1fc64:	movw	r0, #0
   1fc68:	str	r0, [sp, #8]
   1fc6c:	ldr	ip, [sp, #8]
   1fc70:	str	ip, [sp]
   1fc74:	bl	1f634 <__assert_fail@plt+0xe2b0>
   1fc78:	mov	sp, fp
   1fc7c:	pop	{fp, pc}
   1fc80:	push	{fp, lr}
   1fc84:	mov	fp, sp
   1fc88:	sub	sp, sp, #16
   1fc8c:	str	r0, [fp, #-4]
   1fc90:	str	r1, [sp, #8]
   1fc94:	str	r2, [sp, #4]
   1fc98:	ldr	r1, [fp, #-4]
   1fc9c:	ldr	r2, [sp, #8]
   1fca0:	ldr	r3, [sp, #4]
   1fca4:	movw	r0, #0
   1fca8:	movw	ip, #2
   1fcac:	str	ip, [sp]
   1fcb0:	bl	1f634 <__assert_fail@plt+0xe2b0>
   1fcb4:	mov	sp, fp
   1fcb8:	pop	{fp, pc}
   1fcbc:	push	{fp, lr}
   1fcc0:	mov	fp, sp
   1fcc4:	sub	sp, sp, #16
   1fcc8:	str	r0, [fp, #-4]
   1fccc:	str	r1, [sp, #8]
   1fcd0:	str	r2, [sp, #4]
   1fcd4:	ldr	r1, [fp, #-4]
   1fcd8:	ldr	r2, [sp, #8]
   1fcdc:	ldr	r3, [sp, #4]
   1fce0:	ldr	r0, [sp, #4]
   1fce4:	ldr	r0, [r0, #4]
   1fce8:	cmp	r0, #0
   1fcec:	movw	r0, #0
   1fcf0:	movge	r0, #1
   1fcf4:	tst	r0, #1
   1fcf8:	movw	r0, #0
   1fcfc:	mov	ip, r0
   1fd00:	moveq	ip, #1
   1fd04:	str	ip, [sp]
   1fd08:	bl	1f634 <__assert_fail@plt+0xe2b0>
   1fd0c:	mov	sp, fp
   1fd10:	pop	{fp, pc}
   1fd14:	push	{fp, lr}
   1fd18:	mov	fp, sp
   1fd1c:	sub	sp, sp, #16
   1fd20:	str	r0, [fp, #-4]
   1fd24:	str	r1, [sp, #8]
   1fd28:	str	r2, [sp, #4]
   1fd2c:	ldr	r0, [fp, #-4]
   1fd30:	ldr	r1, [sp, #8]
   1fd34:	ldr	r2, [sp, #4]
   1fd38:	movw	r3, #1
   1fd3c:	bl	1fd48 <__assert_fail@plt+0xe9c4>
   1fd40:	mov	sp, fp
   1fd44:	pop	{fp, pc}
   1fd48:	push	{fp, lr}
   1fd4c:	mov	fp, sp
   1fd50:	sub	sp, sp, #48	; 0x30
   1fd54:	str	r0, [fp, #-4]
   1fd58:	str	r1, [fp, #-8]
   1fd5c:	str	r2, [fp, #-12]
   1fd60:	str	r3, [fp, #-16]
   1fd64:	ldr	r0, [fp, #-8]
   1fd68:	ldr	r0, [r0, #4]
   1fd6c:	str	r0, [fp, #-20]	; 0xffffffec
   1fd70:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd74:	cmp	r0, #0
   1fd78:	bne	1fd8c <__assert_fail@plt+0xea08>
   1fd7c:	ldr	r0, [fp, #-4]
   1fd80:	movw	r1, #0
   1fd84:	str	r1, [r0, #4]
   1fd88:	b	1ff9c <__assert_fail@plt+0xec18>
   1fd8c:	ldr	r0, [fp, #-12]
   1fd90:	lsr	r0, r0, #5
   1fd94:	str	r0, [sp, #20]
   1fd98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd9c:	cmp	r0, #0
   1fda0:	blt	1fdb0 <__assert_fail@plt+0xea2c>
   1fda4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fda8:	str	r0, [sp, #8]
   1fdac:	b	1fdc0 <__assert_fail@plt+0xea3c>
   1fdb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fdb4:	movw	r1, #0
   1fdb8:	sub	r0, r1, r0
   1fdbc:	str	r0, [sp, #8]
   1fdc0:	ldr	r0, [sp, #8]
   1fdc4:	ldr	r1, [sp, #20]
   1fdc8:	sub	r0, r0, r1
   1fdcc:	str	r0, [sp, #24]
   1fdd0:	ldr	r0, [fp, #-12]
   1fdd4:	and	r0, r0, #31
   1fdd8:	str	r0, [fp, #-12]
   1fddc:	ldr	r0, [fp, #-16]
   1fde0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fde4:	cmp	r1, #0
   1fde8:	movw	r1, #0
   1fdec:	movgt	r1, #1
   1fdf0:	tst	r1, #1
   1fdf4:	movw	r1, #1
   1fdf8:	moveq	r1, #0
   1fdfc:	cmp	r0, r1
   1fe00:	bne	1fe80 <__assert_fail@plt+0xeafc>
   1fe04:	ldr	r0, [sp, #24]
   1fe08:	cmp	r0, #0
   1fe0c:	movw	r0, #1
   1fe10:	str	r0, [sp, #4]
   1fe14:	ble	1fe70 <__assert_fail@plt+0xeaec>
   1fe18:	ldr	r0, [fp, #-8]
   1fe1c:	ldr	r0, [r0, #8]
   1fe20:	ldr	r1, [sp, #20]
   1fe24:	bl	1b054 <__assert_fail@plt+0x9cd0>
   1fe28:	cmp	r0, #0
   1fe2c:	movw	r0, #1
   1fe30:	str	r0, [sp, #4]
   1fe34:	beq	1fe70 <__assert_fail@plt+0xeaec>
   1fe38:	ldr	r0, [fp, #-8]
   1fe3c:	ldr	r0, [r0, #8]
   1fe40:	ldr	r1, [sp, #20]
   1fe44:	add	r0, r0, r1, lsl #2
   1fe48:	ldr	r0, [r0]
   1fe4c:	ldr	r1, [fp, #-12]
   1fe50:	movw	r2, #1
   1fe54:	lsl	r1, r2, r1
   1fe58:	sub	r1, r1, #1
   1fe5c:	and	r0, r0, r1
   1fe60:	cmp	r0, #0
   1fe64:	movw	r0, #0
   1fe68:	movne	r0, #1
   1fe6c:	str	r0, [sp, #4]
   1fe70:	ldr	r0, [sp, #4]
   1fe74:	and	r0, r0, #1
   1fe78:	str	r0, [sp, #12]
   1fe7c:	b	1fe88 <__assert_fail@plt+0xeb04>
   1fe80:	movw	r0, #0
   1fe84:	str	r0, [sp, #12]
   1fe88:	ldr	r0, [sp, #24]
   1fe8c:	cmp	r0, #0
   1fe90:	bgt	1fea0 <__assert_fail@plt+0xeb1c>
   1fe94:	movw	r0, #0
   1fe98:	str	r0, [sp, #24]
   1fe9c:	b	1ff5c <__assert_fail@plt+0xebd8>
   1fea0:	ldr	r0, [sp, #24]
   1fea4:	ldr	r1, [fp, #-4]
   1fea8:	ldr	r1, [r1]
   1feac:	cmp	r0, r1
   1feb0:	ble	1fec8 <__assert_fail@plt+0xeb44>
   1feb4:	ldr	r0, [fp, #-4]
   1feb8:	ldr	r1, [sp, #24]
   1febc:	bl	1d52c <__assert_fail@plt+0xc1a8>
   1fec0:	str	r0, [sp]
   1fec4:	b	1fed4 <__assert_fail@plt+0xeb50>
   1fec8:	ldr	r0, [fp, #-4]
   1fecc:	ldr	r0, [r0, #8]
   1fed0:	str	r0, [sp]
   1fed4:	ldr	r0, [sp]
   1fed8:	str	r0, [sp, #16]
   1fedc:	ldr	r0, [fp, #-12]
   1fee0:	cmp	r0, #0
   1fee4:	beq	1ff3c <__assert_fail@plt+0xebb8>
   1fee8:	ldr	r0, [sp, #16]
   1feec:	ldr	r1, [fp, #-8]
   1fef0:	ldr	r1, [r1, #8]
   1fef4:	ldr	r2, [sp, #20]
   1fef8:	add	r1, r1, r2, lsl #2
   1fefc:	ldr	r2, [sp, #24]
   1ff00:	ldr	r3, [fp, #-12]
   1ff04:	bl	1bfbc <__assert_fail@plt+0xac38>
   1ff08:	ldr	r1, [sp, #16]
   1ff0c:	ldr	r2, [sp, #24]
   1ff10:	sub	r2, r2, #1
   1ff14:	add	r1, r1, r2, lsl #2
   1ff18:	ldr	r1, [r1]
   1ff1c:	cmp	r1, #0
   1ff20:	movw	r1, #0
   1ff24:	moveq	r1, #1
   1ff28:	and	r1, r1, #1
   1ff2c:	ldr	r2, [sp, #24]
   1ff30:	sub	r1, r2, r1
   1ff34:	str	r1, [sp, #24]
   1ff38:	b	1ff58 <__assert_fail@plt+0xebd4>
   1ff3c:	ldr	r0, [sp, #16]
   1ff40:	ldr	r1, [fp, #-8]
   1ff44:	ldr	r1, [r1, #8]
   1ff48:	ldr	r2, [sp, #20]
   1ff4c:	add	r1, r1, r2, lsl #2
   1ff50:	ldr	r2, [sp, #24]
   1ff54:	bl	1af18 <__assert_fail@plt+0x9b94>
   1ff58:	b	1ff5c <__assert_fail@plt+0xebd8>
   1ff5c:	ldr	r0, [sp, #24]
   1ff60:	ldr	r1, [fp, #-4]
   1ff64:	str	r0, [r1, #4]
   1ff68:	ldr	r0, [sp, #12]
   1ff6c:	cmp	r0, #0
   1ff70:	beq	1ff84 <__assert_fail@plt+0xec00>
   1ff74:	ldr	r0, [fp, #-4]
   1ff78:	ldr	r1, [fp, #-4]
   1ff7c:	movw	r2, #1
   1ff80:	bl	1ea90 <__assert_fail@plt+0xd70c>
   1ff84:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ff88:	cmp	r0, #0
   1ff8c:	bge	1ff9c <__assert_fail@plt+0xec18>
   1ff90:	ldr	r0, [fp, #-4]
   1ff94:	ldr	r1, [fp, #-4]
   1ff98:	bl	1e9bc <__assert_fail@plt+0xd638>
   1ff9c:	mov	sp, fp
   1ffa0:	pop	{fp, pc}
   1ffa4:	push	{fp, lr}
   1ffa8:	mov	fp, sp
   1ffac:	sub	sp, sp, #16
   1ffb0:	str	r0, [fp, #-4]
   1ffb4:	str	r1, [sp, #8]
   1ffb8:	str	r2, [sp, #4]
   1ffbc:	ldr	r0, [fp, #-4]
   1ffc0:	ldr	r1, [sp, #8]
   1ffc4:	ldr	r2, [sp, #4]
   1ffc8:	movw	r3, #0
   1ffcc:	bl	1fd48 <__assert_fail@plt+0xe9c4>
   1ffd0:	mov	sp, fp
   1ffd4:	pop	{fp, pc}
   1ffd8:	push	{fp, lr}
   1ffdc:	mov	fp, sp
   1ffe0:	sub	sp, sp, #16
   1ffe4:	str	r0, [fp, #-4]
   1ffe8:	str	r1, [sp, #8]
   1ffec:	str	r2, [sp, #4]
   1fff0:	ldr	r0, [fp, #-4]
   1fff4:	ldr	r1, [sp, #8]
   1fff8:	ldr	r2, [sp, #4]
   1fffc:	movw	r3, #2
   20000:	bl	1fd48 <__assert_fail@plt+0xe9c4>
   20004:	mov	sp, fp
   20008:	pop	{fp, pc}
   2000c:	push	{fp, lr}
   20010:	mov	fp, sp
   20014:	sub	sp, sp, #16
   20018:	str	r0, [fp, #-4]
   2001c:	str	r1, [sp, #8]
   20020:	str	r2, [sp, #4]
   20024:	ldr	r0, [fp, #-4]
   20028:	ldr	r1, [sp, #8]
   2002c:	ldr	r2, [sp, #4]
   20030:	movw	r3, #1
   20034:	bl	20040 <__assert_fail@plt+0xecbc>
   20038:	mov	sp, fp
   2003c:	pop	{fp, pc}
   20040:	push	{fp, lr}
   20044:	mov	fp, sp
   20048:	sub	sp, sp, #64	; 0x40
   2004c:	str	r0, [fp, #-4]
   20050:	str	r1, [fp, #-8]
   20054:	str	r2, [fp, #-12]
   20058:	str	r3, [fp, #-16]
   2005c:	ldr	r0, [fp, #-8]
   20060:	ldr	r0, [r0, #4]
   20064:	str	r0, [fp, #-20]	; 0xffffffec
   20068:	ldr	r0, [fp, #-20]	; 0xffffffec
   2006c:	cmp	r0, #0
   20070:	beq	20080 <__assert_fail@plt+0xecfc>
   20074:	ldr	r0, [fp, #-12]
   20078:	cmp	r0, #0
   2007c:	bne	20090 <__assert_fail@plt+0xed0c>
   20080:	ldr	r0, [fp, #-4]
   20084:	movw	r1, #0
   20088:	str	r1, [r0, #4]
   2008c:	b	20398 <__assert_fail@plt+0xf014>
   20090:	ldr	r0, [fp, #-12]
   20094:	add	r0, r0, #31
   20098:	lsr	r0, r0, #5
   2009c:	str	r0, [fp, #-28]	; 0xffffffe4
   200a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   200a4:	cmp	r0, #0
   200a8:	ble	200b0 <__assert_fail@plt+0xed2c>
   200ac:	b	200d0 <__assert_fail@plt+0xed4c>
   200b0:	movw	r0, #31280	; 0x7a30
   200b4:	movt	r0, #3
   200b8:	movw	r1, #28968	; 0x7128
   200bc:	movt	r1, #3
   200c0:	movw	r2, #2427	; 0x97b
   200c4:	movw	r3, #32429	; 0x7ead
   200c8:	movt	r3, #3
   200cc:	bl	11384 <__assert_fail@plt>
   200d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   200d4:	ldr	r1, [fp, #-4]
   200d8:	ldr	r1, [r1]
   200dc:	cmp	r0, r1
   200e0:	ble	200f8 <__assert_fail@plt+0xed74>
   200e4:	ldr	r0, [fp, #-4]
   200e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   200ec:	bl	1d52c <__assert_fail@plt+0xc1a8>
   200f0:	str	r0, [sp, #16]
   200f4:	b	20104 <__assert_fail@plt+0xed80>
   200f8:	ldr	r0, [fp, #-4]
   200fc:	ldr	r0, [r0, #8]
   20100:	str	r0, [sp, #16]
   20104:	ldr	r0, [sp, #16]
   20108:	str	r0, [sp, #32]
   2010c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20110:	cmp	r0, #0
   20114:	blt	20124 <__assert_fail@plt+0xeda0>
   20118:	ldr	r0, [fp, #-20]	; 0xffffffec
   2011c:	str	r0, [sp, #12]
   20120:	b	20134 <__assert_fail@plt+0xedb0>
   20124:	ldr	r0, [fp, #-20]	; 0xffffffec
   20128:	movw	r1, #0
   2012c:	sub	r0, r1, r0
   20130:	str	r0, [sp, #12]
   20134:	ldr	r0, [sp, #12]
   20138:	str	r0, [fp, #-24]	; 0xffffffe8
   2013c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20140:	lsl	r0, r0, #5
   20144:	ldr	r1, [fp, #-12]
   20148:	sub	r0, r0, r1
   2014c:	mvn	r1, #0
   20150:	lsr	r0, r1, r0
   20154:	str	r0, [sp, #28]
   20158:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2015c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20160:	cmp	r0, r1
   20164:	ble	20294 <__assert_fail@plt+0xef10>
   20168:	ldr	r0, [fp, #-16]
   2016c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20170:	cmp	r1, #0
   20174:	movw	r1, #0
   20178:	movgt	r1, #1
   2017c:	tst	r1, #1
   20180:	movw	r1, #1
   20184:	moveq	r1, #0
   20188:	cmp	r0, r1
   2018c:	bne	20264 <__assert_fail@plt+0xeee0>
   20190:	b	20194 <__assert_fail@plt+0xee10>
   20194:	ldr	r0, [sp, #32]
   20198:	ldr	r1, [fp, #-8]
   2019c:	ldr	r1, [r1, #8]
   201a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   201a4:	bl	1c464 <__assert_fail@plt+0xb0e0>
   201a8:	cmp	r0, #0
   201ac:	movw	r0, #0
   201b0:	movne	r0, #1
   201b4:	mvn	r1, #0
   201b8:	eor	r0, r0, r1
   201bc:	and	r0, r0, #1
   201c0:	str	r0, [sp, #20]
   201c4:	ldr	r0, [sp, #20]
   201c8:	cmp	r0, #0
   201cc:	bne	201d4 <__assert_fail@plt+0xee50>
   201d0:	b	201f4 <__assert_fail@plt+0xee70>
   201d4:	movw	r0, #29949	; 0x74fd
   201d8:	movt	r0, #3
   201dc:	movw	r1, #28968	; 0x7128
   201e0:	movt	r1, #3
   201e4:	movw	r2, #2443	; 0x98b
   201e8:	movw	r3, #32429	; 0x7ead
   201ec:	movt	r3, #3
   201f0:	bl	11384 <__assert_fail@plt>
   201f4:	b	201f8 <__assert_fail@plt+0xee74>
   201f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   201fc:	str	r0, [sp, #24]
   20200:	ldr	r0, [sp, #24]
   20204:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20208:	sub	r1, r1, #1
   2020c:	cmp	r0, r1
   20210:	bge	20238 <__assert_fail@plt+0xeeb4>
   20214:	ldr	r0, [sp, #32]
   20218:	ldr	r1, [sp, #24]
   2021c:	add	r0, r0, r1, lsl #2
   20220:	mvn	r1, #0
   20224:	str	r1, [r0]
   20228:	ldr	r0, [sp, #24]
   2022c:	add	r0, r0, #1
   20230:	str	r0, [sp, #24]
   20234:	b	20200 <__assert_fail@plt+0xee7c>
   20238:	ldr	r0, [sp, #28]
   2023c:	ldr	r1, [sp, #32]
   20240:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20244:	sub	r2, r2, #1
   20248:	add	r1, r1, r2, lsl #2
   2024c:	str	r0, [r1]
   20250:	ldr	r0, [fp, #-20]	; 0xffffffec
   20254:	movw	r1, #0
   20258:	sub	r0, r1, r0
   2025c:	str	r0, [fp, #-20]	; 0xffffffec
   20260:	b	20290 <__assert_fail@plt+0xef0c>
   20264:	ldr	r0, [fp, #-4]
   20268:	ldr	r1, [fp, #-8]
   2026c:	cmp	r0, r1
   20270:	beq	20288 <__assert_fail@plt+0xef04>
   20274:	ldr	r0, [sp, #32]
   20278:	ldr	r1, [fp, #-8]
   2027c:	ldr	r1, [r1, #8]
   20280:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20284:	bl	1af18 <__assert_fail@plt+0x9b94>
   20288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2028c:	str	r0, [fp, #-28]	; 0xffffffe4
   20290:	b	20354 <__assert_fail@plt+0xefd0>
   20294:	ldr	r0, [fp, #-4]
   20298:	ldr	r1, [fp, #-8]
   2029c:	cmp	r0, r1
   202a0:	beq	202bc <__assert_fail@plt+0xef38>
   202a4:	ldr	r0, [sp, #32]
   202a8:	ldr	r1, [fp, #-8]
   202ac:	ldr	r1, [r1, #8]
   202b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   202b4:	sub	r2, r2, #1
   202b8:	bl	1af18 <__assert_fail@plt+0x9b94>
   202bc:	ldr	r0, [fp, #-8]
   202c0:	ldr	r0, [r0, #8]
   202c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   202c8:	sub	r1, r1, #1
   202cc:	ldr	r0, [r0, r1, lsl #2]
   202d0:	ldr	r2, [sp, #28]
   202d4:	and	r0, r0, r2
   202d8:	ldr	r2, [sp, #32]
   202dc:	add	r1, r2, r1, lsl #2
   202e0:	str	r0, [r1]
   202e4:	ldr	r0, [fp, #-16]
   202e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   202ec:	cmp	r1, #0
   202f0:	movw	r1, #0
   202f4:	movgt	r1, #1
   202f8:	tst	r1, #1
   202fc:	movw	r1, #1
   20300:	moveq	r1, #0
   20304:	cmp	r0, r1
   20308:	bne	20350 <__assert_fail@plt+0xefcc>
   2030c:	ldr	r0, [sp, #32]
   20310:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20314:	str	r0, [sp, #8]
   20318:	ldr	r1, [sp, #8]
   2031c:	bl	1c464 <__assert_fail@plt+0xb0e0>
   20320:	ldr	r1, [sp, #28]
   20324:	ldr	r2, [sp, #32]
   20328:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2032c:	sub	r3, r3, #1
   20330:	add	r2, r2, r3, lsl #2
   20334:	ldr	r3, [r2]
   20338:	and	r1, r3, r1
   2033c:	str	r1, [r2]
   20340:	ldr	r1, [fp, #-20]	; 0xffffffec
   20344:	movw	r2, #0
   20348:	sub	r1, r2, r1
   2034c:	str	r1, [fp, #-20]	; 0xffffffec
   20350:	b	20354 <__assert_fail@plt+0xefd0>
   20354:	ldr	r0, [sp, #32]
   20358:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2035c:	bl	1b08c <__assert_fail@plt+0x9d08>
   20360:	str	r0, [fp, #-28]	; 0xffffffe4
   20364:	ldr	r0, [fp, #-20]	; 0xffffffec
   20368:	cmp	r0, #0
   2036c:	bge	20384 <__assert_fail@plt+0xf000>
   20370:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20374:	movw	r1, #0
   20378:	sub	r0, r1, r0
   2037c:	str	r0, [sp, #4]
   20380:	b	2038c <__assert_fail@plt+0xf008>
   20384:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20388:	str	r0, [sp, #4]
   2038c:	ldr	r0, [sp, #4]
   20390:	ldr	r1, [fp, #-4]
   20394:	str	r0, [r1, #4]
   20398:	mov	sp, fp
   2039c:	pop	{fp, pc}
   203a0:	push	{fp, lr}
   203a4:	mov	fp, sp
   203a8:	sub	sp, sp, #16
   203ac:	str	r0, [fp, #-4]
   203b0:	str	r1, [sp, #8]
   203b4:	str	r2, [sp, #4]
   203b8:	ldr	r0, [fp, #-4]
   203bc:	ldr	r1, [sp, #8]
   203c0:	ldr	r2, [sp, #4]
   203c4:	movw	r3, #0
   203c8:	bl	20040 <__assert_fail@plt+0xecbc>
   203cc:	mov	sp, fp
   203d0:	pop	{fp, pc}
   203d4:	push	{fp, lr}
   203d8:	mov	fp, sp
   203dc:	sub	sp, sp, #16
   203e0:	str	r0, [fp, #-4]
   203e4:	str	r1, [sp, #8]
   203e8:	str	r2, [sp, #4]
   203ec:	ldr	r0, [fp, #-4]
   203f0:	ldr	r1, [sp, #8]
   203f4:	ldr	r2, [sp, #4]
   203f8:	movw	r3, #2
   203fc:	bl	20040 <__assert_fail@plt+0xecbc>
   20400:	mov	sp, fp
   20404:	pop	{fp, pc}
   20408:	push	{fp, lr}
   2040c:	mov	fp, sp
   20410:	sub	sp, sp, #24
   20414:	str	r0, [fp, #-4]
   20418:	str	r1, [fp, #-8]
   2041c:	str	r2, [sp, #12]
   20420:	ldr	r0, [fp, #-4]
   20424:	ldr	r2, [fp, #-8]
   20428:	ldr	r3, [sp, #12]
   2042c:	movw	r1, #0
   20430:	movw	ip, #2
   20434:	str	ip, [sp]
   20438:	bl	1f634 <__assert_fail@plt+0xe2b0>
   2043c:	str	r0, [sp, #8]
   20440:	ldr	r0, [sp, #8]
   20444:	cmp	r0, #0
   20448:	bne	20450 <__assert_fail@plt+0xf0cc>
   2044c:	b	20470 <__assert_fail@plt+0xf0ec>
   20450:	movw	r0, #29949	; 0x74fd
   20454:	movt	r0, #3
   20458:	movw	r1, #28968	; 0x7128
   2045c:	movt	r1, #3
   20460:	movw	r2, #2521	; 0x9d9
   20464:	movw	r3, #29959	; 0x7507
   20468:	movt	r3, #3
   2046c:	bl	11384 <__assert_fail@plt>
   20470:	b	20474 <__assert_fail@plt+0xf0f0>
   20474:	mov	sp, fp
   20478:	pop	{fp, pc}
   2047c:	push	{fp, lr}
   20480:	mov	fp, sp
   20484:	sub	sp, sp, #16
   20488:	str	r0, [fp, #-4]
   2048c:	str	r1, [sp, #8]
   20490:	ldr	r2, [fp, #-4]
   20494:	ldr	r3, [sp, #8]
   20498:	movw	r0, #0
   2049c:	str	r0, [sp, #4]
   204a0:	ldr	r1, [sp, #4]
   204a4:	movw	ip, #2
   204a8:	str	ip, [sp]
   204ac:	bl	1f634 <__assert_fail@plt+0xe2b0>
   204b0:	cmp	r0, #0
   204b4:	movw	r0, #0
   204b8:	moveq	r0, #1
   204bc:	and	r0, r0, #1
   204c0:	mov	sp, fp
   204c4:	pop	{fp, pc}
   204c8:	push	{fp, lr}
   204cc:	mov	fp, sp
   204d0:	sub	sp, sp, #32
   204d4:	str	r0, [fp, #-8]
   204d8:	str	r1, [fp, #-12]
   204dc:	str	r2, [sp, #16]
   204e0:	ldr	r0, [sp, #16]
   204e4:	bl	1e6c4 <__assert_fail@plt+0xd340>
   204e8:	cmp	r0, #0
   204ec:	bne	20514 <__assert_fail@plt+0xf190>
   204f0:	ldr	r0, [fp, #-8]
   204f4:	ldr	r1, [fp, #-12]
   204f8:	bl	1e75c <__assert_fail@plt+0xd3d8>
   204fc:	cmp	r0, #0
   20500:	movw	r0, #0
   20504:	moveq	r0, #1
   20508:	and	r0, r0, #1
   2050c:	str	r0, [fp, #-4]
   20510:	b	20550 <__assert_fail@plt+0xf1cc>
   20514:	add	r0, sp, #4
   20518:	bl	1d2ac <__assert_fail@plt+0xbf28>
   2051c:	add	r0, sp, #4
   20520:	ldr	r1, [fp, #-8]
   20524:	ldr	r2, [fp, #-12]
   20528:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   2052c:	add	r0, sp, #4
   20530:	ldr	r1, [sp, #16]
   20534:	bl	2047c <__assert_fail@plt+0xf0f8>
   20538:	add	r1, sp, #4
   2053c:	str	r0, [sp]
   20540:	mov	r0, r1
   20544:	bl	1d384 <__assert_fail@plt+0xc000>
   20548:	ldr	r0, [sp]
   2054c:	str	r0, [fp, #-4]
   20550:	ldr	r0, [fp, #-4]
   20554:	mov	sp, fp
   20558:	pop	{fp, pc}
   2055c:	push	{fp, lr}
   20560:	mov	fp, sp
   20564:	sub	sp, sp, #24
   20568:	str	r0, [fp, #-4]
   2056c:	str	r1, [fp, #-8]
   20570:	str	r2, [sp, #12]
   20574:	str	r3, [sp, #8]
   20578:	ldr	r0, [fp, #-4]
   2057c:	ldr	r1, [fp, #-8]
   20580:	ldr	r2, [sp, #12]
   20584:	ldr	r3, [sp, #8]
   20588:	movw	ip, #1
   2058c:	str	ip, [sp]
   20590:	bl	2059c <__assert_fail@plt+0xf218>
   20594:	mov	sp, fp
   20598:	pop	{fp, pc}
   2059c:	push	{fp, lr}
   205a0:	mov	fp, sp
   205a4:	sub	sp, sp, #56	; 0x38
   205a8:	ldr	ip, [fp, #8]
   205ac:	add	lr, sp, #24
   205b0:	str	r0, [fp, #-4]
   205b4:	str	r1, [fp, #-8]
   205b8:	str	r2, [fp, #-12]
   205bc:	str	r3, [fp, #-16]
   205c0:	mov	r0, lr
   205c4:	str	ip, [sp, #8]
   205c8:	bl	1d2ac <__assert_fail@plt+0xbf28>
   205cc:	add	r0, sp, #12
   205d0:	ldr	r1, [fp, #-16]
   205d4:	bl	1d714 <__assert_fail@plt+0xc390>
   205d8:	add	r3, sp, #12
   205dc:	add	r1, sp, #24
   205e0:	ldr	r0, [fp, #-4]
   205e4:	ldr	r2, [fp, #-12]
   205e8:	ldr	ip, [fp, #8]
   205ec:	str	ip, [sp]
   205f0:	bl	1f634 <__assert_fail@plt+0xe2b0>
   205f4:	add	r1, sp, #12
   205f8:	str	r0, [sp, #4]
   205fc:	mov	r0, r1
   20600:	bl	1d384 <__assert_fail@plt+0xc000>
   20604:	add	r0, sp, #24
   20608:	bl	1dbf4 <__assert_fail@plt+0xc870>
   2060c:	str	r0, [fp, #-20]	; 0xffffffec
   20610:	ldr	r0, [fp, #-8]
   20614:	movw	r1, #0
   20618:	cmp	r0, r1
   2061c:	beq	2062c <__assert_fail@plt+0xf2a8>
   20620:	add	r1, sp, #24
   20624:	ldr	r0, [fp, #-8]
   20628:	bl	1e9fc <__assert_fail@plt+0xd678>
   2062c:	add	r0, sp, #24
   20630:	bl	1d384 <__assert_fail@plt+0xc000>
   20634:	ldr	r0, [fp, #-20]	; 0xffffffec
   20638:	mov	sp, fp
   2063c:	pop	{fp, pc}
   20640:	push	{fp, lr}
   20644:	mov	fp, sp
   20648:	sub	sp, sp, #24
   2064c:	str	r0, [fp, #-4]
   20650:	str	r1, [fp, #-8]
   20654:	str	r2, [sp, #12]
   20658:	str	r3, [sp, #8]
   2065c:	ldr	r0, [fp, #-4]
   20660:	ldr	r1, [fp, #-8]
   20664:	ldr	r2, [sp, #12]
   20668:	ldr	r3, [sp, #8]
   2066c:	movw	ip, #0
   20670:	str	ip, [sp]
   20674:	bl	2059c <__assert_fail@plt+0xf218>
   20678:	mov	sp, fp
   2067c:	pop	{fp, pc}
   20680:	push	{fp, lr}
   20684:	mov	fp, sp
   20688:	sub	sp, sp, #24
   2068c:	str	r0, [fp, #-4]
   20690:	str	r1, [fp, #-8]
   20694:	str	r2, [sp, #12]
   20698:	str	r3, [sp, #8]
   2069c:	ldr	r0, [fp, #-4]
   206a0:	ldr	r1, [fp, #-8]
   206a4:	ldr	r2, [sp, #12]
   206a8:	ldr	r3, [sp, #8]
   206ac:	movw	ip, #2
   206b0:	str	ip, [sp]
   206b4:	bl	2059c <__assert_fail@plt+0xf218>
   206b8:	mov	sp, fp
   206bc:	pop	{fp, pc}
   206c0:	push	{fp, lr}
   206c4:	mov	fp, sp
   206c8:	sub	sp, sp, #16
   206cc:	str	r0, [fp, #-4]
   206d0:	str	r1, [sp, #8]
   206d4:	str	r2, [sp, #4]
   206d8:	ldr	r0, [fp, #-4]
   206dc:	ldr	r2, [sp, #8]
   206e0:	ldr	r3, [sp, #4]
   206e4:	movw	r1, #0
   206e8:	movw	ip, #1
   206ec:	str	ip, [sp]
   206f0:	bl	2059c <__assert_fail@plt+0xf218>
   206f4:	mov	sp, fp
   206f8:	pop	{fp, pc}
   206fc:	push	{fp, lr}
   20700:	mov	fp, sp
   20704:	sub	sp, sp, #24
   20708:	str	r0, [fp, #-4]
   2070c:	str	r1, [fp, #-8]
   20710:	str	r2, [sp, #12]
   20714:	ldr	r0, [fp, #-4]
   20718:	ldr	r2, [fp, #-8]
   2071c:	ldr	r3, [sp, #12]
   20720:	movw	r1, #0
   20724:	str	r1, [sp, #8]
   20728:	ldr	ip, [sp, #8]
   2072c:	str	ip, [sp]
   20730:	bl	2059c <__assert_fail@plt+0xf218>
   20734:	mov	sp, fp
   20738:	pop	{fp, pc}
   2073c:	push	{fp, lr}
   20740:	mov	fp, sp
   20744:	sub	sp, sp, #16
   20748:	str	r0, [fp, #-4]
   2074c:	str	r1, [sp, #8]
   20750:	str	r2, [sp, #4]
   20754:	ldr	r0, [fp, #-4]
   20758:	ldr	r2, [sp, #8]
   2075c:	ldr	r3, [sp, #4]
   20760:	movw	r1, #0
   20764:	movw	ip, #2
   20768:	str	ip, [sp]
   2076c:	bl	2059c <__assert_fail@plt+0xf218>
   20770:	mov	sp, fp
   20774:	pop	{fp, pc}
   20778:	push	{fp, lr}
   2077c:	mov	fp, sp
   20780:	sub	sp, sp, #16
   20784:	str	r0, [fp, #-4]
   20788:	str	r1, [sp, #8]
   2078c:	str	r2, [sp, #4]
   20790:	ldr	r1, [fp, #-4]
   20794:	ldr	r2, [sp, #8]
   20798:	ldr	r3, [sp, #4]
   2079c:	movw	r0, #0
   207a0:	movw	ip, #1
   207a4:	str	ip, [sp]
   207a8:	bl	2059c <__assert_fail@plt+0xf218>
   207ac:	mov	sp, fp
   207b0:	pop	{fp, pc}
   207b4:	push	{fp, lr}
   207b8:	mov	fp, sp
   207bc:	sub	sp, sp, #24
   207c0:	str	r0, [fp, #-4]
   207c4:	str	r1, [fp, #-8]
   207c8:	str	r2, [sp, #12]
   207cc:	ldr	r1, [fp, #-4]
   207d0:	ldr	r2, [fp, #-8]
   207d4:	ldr	r3, [sp, #12]
   207d8:	movw	r0, #0
   207dc:	str	r0, [sp, #8]
   207e0:	ldr	ip, [sp, #8]
   207e4:	str	ip, [sp]
   207e8:	bl	2059c <__assert_fail@plt+0xf218>
   207ec:	mov	sp, fp
   207f0:	pop	{fp, pc}
   207f4:	push	{fp, lr}
   207f8:	mov	fp, sp
   207fc:	sub	sp, sp, #16
   20800:	str	r0, [fp, #-4]
   20804:	str	r1, [sp, #8]
   20808:	str	r2, [sp, #4]
   2080c:	ldr	r1, [fp, #-4]
   20810:	ldr	r2, [sp, #8]
   20814:	ldr	r3, [sp, #4]
   20818:	movw	r0, #0
   2081c:	movw	ip, #2
   20820:	str	ip, [sp]
   20824:	bl	2059c <__assert_fail@plt+0xf218>
   20828:	mov	sp, fp
   2082c:	pop	{fp, pc}
   20830:	push	{fp, lr}
   20834:	mov	fp, sp
   20838:	sub	sp, sp, #16
   2083c:	str	r0, [fp, #-4]
   20840:	str	r1, [sp, #8]
   20844:	ldr	r2, [fp, #-4]
   20848:	ldr	r3, [sp, #8]
   2084c:	movw	r0, #0
   20850:	str	r0, [sp, #4]
   20854:	ldr	r1, [sp, #4]
   20858:	movw	ip, #1
   2085c:	str	ip, [sp]
   20860:	bl	2059c <__assert_fail@plt+0xf218>
   20864:	mov	sp, fp
   20868:	pop	{fp, pc}
   2086c:	push	{fp, lr}
   20870:	mov	fp, sp
   20874:	sub	sp, sp, #16
   20878:	str	r0, [fp, #-4]
   2087c:	str	r1, [sp, #8]
   20880:	ldr	r2, [fp, #-4]
   20884:	ldr	r3, [sp, #8]
   20888:	movw	r0, #0
   2088c:	str	r0, [sp, #4]
   20890:	ldr	r1, [sp, #4]
   20894:	ldr	ip, [sp, #4]
   20898:	str	ip, [sp]
   2089c:	bl	2059c <__assert_fail@plt+0xf218>
   208a0:	mov	sp, fp
   208a4:	pop	{fp, pc}
   208a8:	push	{fp, lr}
   208ac:	mov	fp, sp
   208b0:	sub	sp, sp, #16
   208b4:	str	r0, [fp, #-4]
   208b8:	str	r1, [sp, #8]
   208bc:	ldr	r2, [fp, #-4]
   208c0:	ldr	r3, [sp, #8]
   208c4:	movw	r0, #0
   208c8:	str	r0, [sp, #4]
   208cc:	ldr	r1, [sp, #4]
   208d0:	movw	ip, #2
   208d4:	str	ip, [sp]
   208d8:	bl	2059c <__assert_fail@plt+0xf218>
   208dc:	mov	sp, fp
   208e0:	pop	{fp, pc}
   208e4:	push	{fp, lr}
   208e8:	mov	fp, sp
   208ec:	sub	sp, sp, #24
   208f0:	str	r0, [fp, #-4]
   208f4:	str	r1, [fp, #-8]
   208f8:	str	r2, [sp, #12]
   208fc:	ldr	r1, [fp, #-4]
   20900:	ldr	r2, [fp, #-8]
   20904:	ldr	r3, [sp, #12]
   20908:	movw	r0, #0
   2090c:	str	r0, [sp, #8]
   20910:	ldr	ip, [sp, #8]
   20914:	str	ip, [sp]
   20918:	bl	2059c <__assert_fail@plt+0xf218>
   2091c:	mov	sp, fp
   20920:	pop	{fp, pc}
   20924:	push	{fp, lr}
   20928:	mov	fp, sp
   2092c:	sub	sp, sp, #24
   20930:	str	r0, [fp, #-4]
   20934:	str	r1, [fp, #-8]
   20938:	str	r2, [sp, #12]
   2093c:	ldr	r0, [fp, #-4]
   20940:	ldr	r2, [fp, #-8]
   20944:	ldr	r3, [sp, #12]
   20948:	movw	r1, #0
   2094c:	movw	ip, #2
   20950:	str	ip, [sp]
   20954:	bl	2059c <__assert_fail@plt+0xf218>
   20958:	str	r0, [sp, #8]
   2095c:	ldr	r0, [sp, #8]
   20960:	cmp	r0, #0
   20964:	bne	2096c <__assert_fail@plt+0xf5e8>
   20968:	b	2098c <__assert_fail@plt+0xf608>
   2096c:	movw	r0, #29949	; 0x74fd
   20970:	movt	r0, #3
   20974:	movw	r1, #28968	; 0x7128
   20978:	movt	r1, #3
   2097c:	movw	r2, #2647	; 0xa57
   20980:	movw	r3, #30037	; 0x7555
   20984:	movt	r3, #3
   20988:	bl	11384 <__assert_fail@plt>
   2098c:	b	20990 <__assert_fail@plt+0xf60c>
   20990:	mov	sp, fp
   20994:	pop	{fp, pc}
   20998:	push	{fp, lr}
   2099c:	mov	fp, sp
   209a0:	sub	sp, sp, #16
   209a4:	str	r0, [fp, #-4]
   209a8:	str	r1, [sp, #8]
   209ac:	ldr	r2, [fp, #-4]
   209b0:	ldr	r3, [sp, #8]
   209b4:	movw	r0, #0
   209b8:	str	r0, [sp, #4]
   209bc:	ldr	r1, [sp, #4]
   209c0:	movw	ip, #2
   209c4:	str	ip, [sp]
   209c8:	bl	2059c <__assert_fail@plt+0xf218>
   209cc:	cmp	r0, #0
   209d0:	movw	r0, #0
   209d4:	moveq	r0, #1
   209d8:	and	r0, r0, #1
   209dc:	mov	sp, fp
   209e0:	pop	{fp, pc}
   209e4:	push	{fp, lr}
   209e8:	mov	fp, sp
   209ec:	sub	sp, sp, #32
   209f0:	add	r3, sp, #8
   209f4:	str	r0, [fp, #-4]
   209f8:	str	r1, [fp, #-8]
   209fc:	str	r2, [fp, #-12]
   20a00:	ldr	r1, [fp, #-12]
   20a04:	mov	r0, r3
   20a08:	bl	1d714 <__assert_fail@plt+0xc390>
   20a0c:	add	r0, sp, #8
   20a10:	ldr	r1, [fp, #-8]
   20a14:	str	r0, [sp, #4]
   20a18:	ldr	r2, [sp, #4]
   20a1c:	bl	20a68 <__assert_fail@plt+0xf6e4>
   20a20:	ldr	r0, [fp, #-12]
   20a24:	cmp	r0, #0
   20a28:	bls	20a38 <__assert_fail@plt+0xf6b4>
   20a2c:	add	r0, sp, #8
   20a30:	bl	1dbf4 <__assert_fail@plt+0xc870>
   20a34:	str	r0, [fp, #-12]
   20a38:	ldr	r0, [fp, #-4]
   20a3c:	movw	r1, #0
   20a40:	cmp	r0, r1
   20a44:	beq	20a54 <__assert_fail@plt+0xf6d0>
   20a48:	add	r0, sp, #8
   20a4c:	ldr	r1, [fp, #-4]
   20a50:	bl	1e9fc <__assert_fail@plt+0xd678>
   20a54:	add	r0, sp, #8
   20a58:	bl	1d384 <__assert_fail@plt+0xc000>
   20a5c:	ldr	r0, [fp, #-12]
   20a60:	mov	sp, fp
   20a64:	pop	{fp, pc}
   20a68:	push	{fp, lr}
   20a6c:	mov	fp, sp
   20a70:	sub	sp, sp, #88	; 0x58
   20a74:	str	r0, [fp, #-4]
   20a78:	str	r1, [fp, #-8]
   20a7c:	str	r2, [fp, #-12]
   20a80:	ldr	r0, [fp, #-8]
   20a84:	ldr	r0, [r0, #4]
   20a88:	cmp	r0, #0
   20a8c:	bne	20aa0 <__assert_fail@plt+0xf71c>
   20a90:	ldr	r0, [fp, #-4]
   20a94:	ldr	r1, [fp, #-12]
   20a98:	bl	1e954 <__assert_fail@plt+0xd5d0>
   20a9c:	b	20cb4 <__assert_fail@plt+0xf930>
   20aa0:	ldr	r0, [fp, #-12]
   20aa4:	ldr	r0, [r0, #4]
   20aa8:	cmp	r0, #0
   20aac:	bne	20ac0 <__assert_fail@plt+0xf73c>
   20ab0:	ldr	r0, [fp, #-4]
   20ab4:	ldr	r1, [fp, #-8]
   20ab8:	bl	1e954 <__assert_fail@plt+0xd5d0>
   20abc:	b	20cb4 <__assert_fail@plt+0xf930>
   20ac0:	sub	r0, fp, #24
   20ac4:	bl	1d2ac <__assert_fail@plt+0xbf28>
   20ac8:	sub	r0, fp, #36	; 0x24
   20acc:	bl	1d2ac <__assert_fail@plt+0xbf28>
   20ad0:	sub	r0, fp, #24
   20ad4:	ldr	r1, [fp, #-8]
   20ad8:	bl	1e954 <__assert_fail@plt+0xd5d0>
   20adc:	sub	r0, fp, #24
   20ae0:	bl	20cbc <__assert_fail@plt+0xf938>
   20ae4:	sub	r1, fp, #36	; 0x24
   20ae8:	str	r0, [fp, #-40]	; 0xffffffd8
   20aec:	ldr	r0, [fp, #-12]
   20af0:	str	r0, [sp, #28]
   20af4:	mov	r0, r1
   20af8:	ldr	r1, [sp, #28]
   20afc:	bl	1e954 <__assert_fail@plt+0xd5d0>
   20b00:	sub	r0, fp, #36	; 0x24
   20b04:	bl	20cbc <__assert_fail@plt+0xf938>
   20b08:	str	r0, [sp, #44]	; 0x2c
   20b0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20b10:	ldr	r1, [sp, #44]	; 0x2c
   20b14:	cmp	r0, r1
   20b18:	bcs	20b28 <__assert_fail@plt+0xf7a4>
   20b1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20b20:	str	r0, [sp, #24]
   20b24:	b	20b30 <__assert_fail@plt+0xf7ac>
   20b28:	ldr	r0, [sp, #44]	; 0x2c
   20b2c:	str	r0, [sp, #24]
   20b30:	ldr	r0, [sp, #24]
   20b34:	str	r0, [sp, #40]	; 0x28
   20b38:	ldr	r0, [fp, #-20]	; 0xffffffec
   20b3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20b40:	cmp	r0, r1
   20b44:	bge	20b54 <__assert_fail@plt+0xf7d0>
   20b48:	sub	r1, fp, #36	; 0x24
   20b4c:	sub	r0, fp, #24
   20b50:	bl	1e9fc <__assert_fail@plt+0xd678>
   20b54:	sub	r2, fp, #36	; 0x24
   20b58:	sub	r0, fp, #24
   20b5c:	str	r0, [sp, #20]
   20b60:	ldr	r1, [sp, #20]
   20b64:	bl	1fc80 <__assert_fail@plt+0xe8fc>
   20b68:	ldr	r0, [fp, #-20]	; 0xffffffec
   20b6c:	cmp	r0, #0
   20b70:	bne	20b84 <__assert_fail@plt+0xf800>
   20b74:	sub	r1, fp, #36	; 0x24
   20b78:	ldr	r0, [fp, #-4]
   20b7c:	bl	1e9fc <__assert_fail@plt+0xd678>
   20b80:	b	20c94 <__assert_fail@plt+0xf910>
   20b84:	b	20b88 <__assert_fail@plt+0xf804>
   20b88:	sub	r0, fp, #24
   20b8c:	bl	20cbc <__assert_fail@plt+0xf938>
   20b90:	sub	r1, fp, #36	; 0x24
   20b94:	sub	r2, fp, #24
   20b98:	str	r0, [sp, #16]
   20b9c:	mov	r0, r2
   20ba0:	bl	1e75c <__assert_fail@plt+0xd3d8>
   20ba4:	str	r0, [sp, #36]	; 0x24
   20ba8:	ldr	r0, [sp, #36]	; 0x24
   20bac:	cmp	r0, #0
   20bb0:	bne	20bc4 <__assert_fail@plt+0xf840>
   20bb4:	sub	r1, fp, #24
   20bb8:	ldr	r0, [fp, #-4]
   20bbc:	bl	1e9fc <__assert_fail@plt+0xd678>
   20bc0:	b	20c90 <__assert_fail@plt+0xf90c>
   20bc4:	ldr	r0, [sp, #36]	; 0x24
   20bc8:	cmp	r0, #0
   20bcc:	bge	20bdc <__assert_fail@plt+0xf858>
   20bd0:	sub	r1, fp, #36	; 0x24
   20bd4:	sub	r0, fp, #24
   20bd8:	bl	1e9fc <__assert_fail@plt+0xd678>
   20bdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20be0:	cmp	r0, #1
   20be4:	bne	20c78 <__assert_fail@plt+0xf8f4>
   20be8:	sub	r2, fp, #36	; 0x24
   20bec:	sub	r0, fp, #24
   20bf0:	str	r0, [sp, #12]
   20bf4:	ldr	r1, [sp, #12]
   20bf8:	bl	1fc80 <__assert_fail@plt+0xe8fc>
   20bfc:	ldr	r0, [fp, #-4]
   20c00:	ldr	r0, [r0]
   20c04:	movw	r1, #1
   20c08:	cmp	r1, r0
   20c0c:	ble	20c24 <__assert_fail@plt+0xf8a0>
   20c10:	ldr	r0, [fp, #-4]
   20c14:	movw	r1, #1
   20c18:	bl	1d52c <__assert_fail@plt+0xc1a8>
   20c1c:	str	r0, [sp, #8]
   20c20:	b	20c30 <__assert_fail@plt+0xf8ac>
   20c24:	ldr	r0, [fp, #-4]
   20c28:	ldr	r0, [r0, #8]
   20c2c:	str	r0, [sp, #8]
   20c30:	ldr	r0, [sp, #8]
   20c34:	str	r0, [sp, #32]
   20c38:	ldr	r0, [fp, #-16]
   20c3c:	ldr	r0, [r0]
   20c40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20c44:	ldr	r1, [r1]
   20c48:	bl	20d30 <__assert_fail@plt+0xf9ac>
   20c4c:	ldr	r1, [sp, #32]
   20c50:	str	r0, [r1]
   20c54:	ldr	r0, [sp, #32]
   20c58:	ldr	r0, [r0]
   20c5c:	cmp	r0, #0
   20c60:	movw	r0, #0
   20c64:	movne	r0, #1
   20c68:	and	r0, r0, #1
   20c6c:	ldr	r1, [fp, #-4]
   20c70:	str	r0, [r1, #4]
   20c74:	b	20c90 <__assert_fail@plt+0xf90c>
   20c78:	sub	r2, fp, #36	; 0x24
   20c7c:	sub	r0, fp, #24
   20c80:	str	r0, [sp, #4]
   20c84:	ldr	r1, [sp, #4]
   20c88:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   20c8c:	b	20b88 <__assert_fail@plt+0xf804>
   20c90:	b	20c94 <__assert_fail@plt+0xf910>
   20c94:	sub	r0, fp, #24
   20c98:	bl	1d384 <__assert_fail@plt+0xc000>
   20c9c:	sub	r0, fp, #36	; 0x24
   20ca0:	bl	1d384 <__assert_fail@plt+0xc000>
   20ca4:	ldr	r0, [fp, #-4]
   20ca8:	ldr	r1, [fp, #-4]
   20cac:	ldr	r2, [sp, #40]	; 0x28
   20cb0:	bl	1f2d4 <__assert_fail@plt+0xdf50>
   20cb4:	mov	sp, fp
   20cb8:	pop	{fp, pc}
   20cbc:	push	{fp, lr}
   20cc0:	mov	fp, sp
   20cc4:	sub	sp, sp, #8
   20cc8:	str	r0, [sp, #4]
   20ccc:	ldr	r0, [sp, #4]
   20cd0:	ldr	r0, [r0, #4]
   20cd4:	cmp	r0, #0
   20cd8:	ble	20ce0 <__assert_fail@plt+0xf95c>
   20cdc:	b	20d00 <__assert_fail@plt+0xf97c>
   20ce0:	movw	r0, #32525	; 0x7f0d
   20ce4:	movt	r0, #3
   20ce8:	movw	r1, #28968	; 0x7128
   20cec:	movt	r1, #3
   20cf0:	movw	r2, #2723	; 0xaa3
   20cf4:	movw	r3, #32541	; 0x7f1d
   20cf8:	movt	r3, #3
   20cfc:	bl	11384 <__assert_fail@plt>
   20d00:	ldr	r0, [sp, #4]
   20d04:	ldr	r0, [r0, #8]
   20d08:	movw	r1, #0
   20d0c:	bl	1c128 <__assert_fail@plt+0xada4>
   20d10:	str	r0, [sp]
   20d14:	ldr	r0, [sp, #4]
   20d18:	ldr	r1, [sp, #4]
   20d1c:	ldr	r2, [sp]
   20d20:	bl	1ffd8 <__assert_fail@plt+0xec54>
   20d24:	ldr	r0, [sp]
   20d28:	mov	sp, fp
   20d2c:	pop	{fp, pc}
   20d30:	push	{fp, lr}
   20d34:	mov	fp, sp
   20d38:	sub	sp, sp, #40	; 0x28
   20d3c:	str	r0, [fp, #-8]
   20d40:	str	r1, [fp, #-12]
   20d44:	ldr	r0, [fp, #-8]
   20d48:	ldr	r1, [fp, #-12]
   20d4c:	orr	r0, r0, r1
   20d50:	cmp	r0, #0
   20d54:	bls	20d5c <__assert_fail@plt+0xf9d8>
   20d58:	b	20d7c <__assert_fail@plt+0xf9f8>
   20d5c:	movw	r0, #32582	; 0x7f46
   20d60:	movt	r0, #3
   20d64:	movw	r1, #28968	; 0x7128
   20d68:	movt	r1, #3
   20d6c:	movw	r2, #2663	; 0xa67
   20d70:	movw	r3, #32594	; 0x7f52
   20d74:	movt	r3, #3
   20d78:	bl	11384 <__assert_fail@plt>
   20d7c:	ldr	r0, [fp, #-8]
   20d80:	cmp	r0, #0
   20d84:	bne	20d94 <__assert_fail@plt+0xfa10>
   20d88:	ldr	r0, [fp, #-12]
   20d8c:	str	r0, [fp, #-4]
   20d90:	b	20f8c <__assert_fail@plt+0xfc08>
   20d94:	ldr	r0, [fp, #-12]
   20d98:	cmp	r0, #0
   20d9c:	bne	20dac <__assert_fail@plt+0xfa28>
   20da0:	ldr	r0, [fp, #-8]
   20da4:	str	r0, [fp, #-4]
   20da8:	b	20f8c <__assert_fail@plt+0xfc08>
   20dac:	b	20db0 <__assert_fail@plt+0xfa2c>
   20db0:	b	20db4 <__assert_fail@plt+0xfa30>
   20db4:	ldr	r0, [fp, #-8]
   20db8:	ldr	r1, [fp, #-12]
   20dbc:	orr	r0, r0, r1
   20dc0:	str	r0, [sp, #20]
   20dc4:	movw	r0, #0
   20dc8:	str	r0, [sp, #16]
   20dcc:	ldr	r0, [sp, #20]
   20dd0:	ldr	r1, [sp, #20]
   20dd4:	movw	r2, #0
   20dd8:	sub	r1, r2, r1
   20ddc:	and	r0, r0, r1
   20de0:	str	r0, [sp, #12]
   20de4:	str	r2, [sp, #8]
   20de8:	movw	r0, #8
   20dec:	str	r0, [sp, #4]
   20df0:	ldr	r0, [sp, #4]
   20df4:	movw	r1, #32
   20df8:	cmp	r1, r0
   20dfc:	bls	20e38 <__assert_fail@plt+0xfab4>
   20e00:	b	20e04 <__assert_fail@plt+0xfa80>
   20e04:	ldr	r0, [sp, #12]
   20e08:	and	r0, r0, #-16777216	; 0xff000000
   20e0c:	cmp	r0, #0
   20e10:	bne	20e34 <__assert_fail@plt+0xfab0>
   20e14:	ldr	r0, [sp, #4]
   20e18:	ldr	r1, [sp, #12]
   20e1c:	lsl	r0, r1, r0
   20e20:	str	r0, [sp, #12]
   20e24:	ldr	r0, [sp, #8]
   20e28:	add	r0, r0, #8
   20e2c:	str	r0, [sp, #8]
   20e30:	b	20e04 <__assert_fail@plt+0xfa80>
   20e34:	b	20e38 <__assert_fail@plt+0xfab4>
   20e38:	b	20e3c <__assert_fail@plt+0xfab8>
   20e3c:	ldr	r0, [sp, #12]
   20e40:	and	r0, r0, #-2147483648	; 0x80000000
   20e44:	cmp	r0, #0
   20e48:	bne	20e68 <__assert_fail@plt+0xfae4>
   20e4c:	ldr	r0, [sp, #12]
   20e50:	lsl	r0, r0, #1
   20e54:	str	r0, [sp, #12]
   20e58:	ldr	r0, [sp, #8]
   20e5c:	add	r0, r0, #1
   20e60:	str	r0, [sp, #8]
   20e64:	b	20e3c <__assert_fail@plt+0xfab8>
   20e68:	ldr	r0, [sp, #8]
   20e6c:	str	r0, [sp, #16]
   20e70:	ldr	r0, [sp, #16]
   20e74:	movw	r1, #31
   20e78:	sub	r0, r1, r0
   20e7c:	str	r0, [fp, #-16]
   20e80:	ldr	r0, [fp, #-16]
   20e84:	ldr	r1, [fp, #-8]
   20e88:	lsr	r0, r1, r0
   20e8c:	str	r0, [fp, #-8]
   20e90:	ldr	r0, [fp, #-16]
   20e94:	ldr	r1, [fp, #-12]
   20e98:	lsr	r0, r1, r0
   20e9c:	str	r0, [fp, #-12]
   20ea0:	ldr	r0, [fp, #-8]
   20ea4:	and	r0, r0, #1
   20ea8:	cmp	r0, #0
   20eac:	bne	20ed0 <__assert_fail@plt+0xfb4c>
   20eb0:	b	20eb4 <__assert_fail@plt+0xfb30>
   20eb4:	ldr	r0, [fp, #-8]
   20eb8:	str	r0, [sp]
   20ebc:	ldr	r0, [fp, #-12]
   20ec0:	str	r0, [fp, #-8]
   20ec4:	ldr	r0, [sp]
   20ec8:	str	r0, [fp, #-12]
   20ecc:	b	20ed0 <__assert_fail@plt+0xfb4c>
   20ed0:	b	20ed4 <__assert_fail@plt+0xfb50>
   20ed4:	ldr	r0, [fp, #-12]
   20ed8:	and	r0, r0, #1
   20edc:	cmp	r0, #0
   20ee0:	bne	20ef4 <__assert_fail@plt+0xfb70>
   20ee4:	ldr	r0, [fp, #-12]
   20ee8:	lsr	r0, r0, #1
   20eec:	str	r0, [fp, #-12]
   20ef0:	b	20ed4 <__assert_fail@plt+0xfb50>
   20ef4:	b	20ef8 <__assert_fail@plt+0xfb74>
   20ef8:	ldr	r0, [fp, #-8]
   20efc:	ldr	r1, [fp, #-12]
   20f00:	cmp	r0, r1
   20f04:	beq	20f7c <__assert_fail@plt+0xfbf8>
   20f08:	ldr	r0, [fp, #-8]
   20f0c:	ldr	r1, [fp, #-12]
   20f10:	cmp	r0, r1
   20f14:	bls	20f48 <__assert_fail@plt+0xfbc4>
   20f18:	ldr	r0, [fp, #-12]
   20f1c:	ldr	r1, [fp, #-8]
   20f20:	sub	r0, r1, r0
   20f24:	str	r0, [fp, #-8]
   20f28:	ldr	r0, [fp, #-8]
   20f2c:	lsr	r0, r0, #1
   20f30:	str	r0, [fp, #-8]
   20f34:	ldr	r0, [fp, #-8]
   20f38:	and	r0, r0, #1
   20f3c:	cmp	r0, #0
   20f40:	beq	20f28 <__assert_fail@plt+0xfba4>
   20f44:	b	20f78 <__assert_fail@plt+0xfbf4>
   20f48:	ldr	r0, [fp, #-8]
   20f4c:	ldr	r1, [fp, #-12]
   20f50:	sub	r0, r1, r0
   20f54:	str	r0, [fp, #-12]
   20f58:	ldr	r0, [fp, #-12]
   20f5c:	lsr	r0, r0, #1
   20f60:	str	r0, [fp, #-12]
   20f64:	ldr	r0, [fp, #-12]
   20f68:	and	r0, r0, #1
   20f6c:	cmp	r0, #0
   20f70:	beq	20f58 <__assert_fail@plt+0xfbd4>
   20f74:	b	20f78 <__assert_fail@plt+0xfbf4>
   20f78:	b	20ef8 <__assert_fail@plt+0xfb74>
   20f7c:	ldr	r0, [fp, #-8]
   20f80:	ldr	r1, [fp, #-16]
   20f84:	lsl	r0, r0, r1
   20f88:	str	r0, [fp, #-4]
   20f8c:	ldr	r0, [fp, #-4]
   20f90:	mov	sp, fp
   20f94:	pop	{fp, pc}
   20f98:	push	{fp, lr}
   20f9c:	mov	fp, sp
   20fa0:	sub	sp, sp, #232	; 0xe8
   20fa4:	ldr	ip, [fp, #8]
   20fa8:	str	r0, [fp, #-4]
   20fac:	str	r1, [fp, #-8]
   20fb0:	str	r2, [fp, #-12]
   20fb4:	str	r3, [fp, #-16]
   20fb8:	ldr	r0, [fp, #-16]
   20fbc:	ldr	r0, [r0, #4]
   20fc0:	cmp	r0, #0
   20fc4:	bne	2101c <__assert_fail@plt+0xfc98>
   20fc8:	ldr	r0, [fp, #8]
   20fcc:	bl	1e6c4 <__assert_fail@plt+0xd340>
   20fd0:	str	r0, [fp, #-108]	; 0xffffff94
   20fd4:	ldr	r0, [fp, #-4]
   20fd8:	ldr	r1, [fp, #8]
   20fdc:	bl	1e954 <__assert_fail@plt+0xd5d0>
   20fe0:	ldr	r0, [fp, #-8]
   20fe4:	movw	r1, #0
   20fe8:	cmp	r0, r1
   20fec:	beq	20ffc <__assert_fail@plt+0xfc78>
   20ff0:	ldr	r0, [fp, #-8]
   20ff4:	movw	r1, #0
   20ff8:	str	r1, [r0, #4]
   20ffc:	ldr	r0, [fp, #-12]
   21000:	movw	r1, #0
   21004:	cmp	r0, r1
   21008:	beq	21018 <__assert_fail@plt+0xfc94>
   2100c:	ldr	r0, [fp, #-12]
   21010:	ldr	r1, [fp, #-108]	; 0xffffff94
   21014:	bl	1d408 <__assert_fail@plt+0xc084>
   21018:	b	215fc <__assert_fail@plt+0x10278>
   2101c:	ldr	r0, [fp, #8]
   21020:	ldr	r0, [r0, #4]
   21024:	cmp	r0, #0
   21028:	bne	21080 <__assert_fail@plt+0xfcfc>
   2102c:	ldr	r0, [fp, #-16]
   21030:	bl	1e6c4 <__assert_fail@plt+0xd340>
   21034:	str	r0, [fp, #-112]	; 0xffffff90
   21038:	ldr	r0, [fp, #-4]
   2103c:	ldr	r1, [fp, #-16]
   21040:	bl	1e954 <__assert_fail@plt+0xd5d0>
   21044:	ldr	r0, [fp, #-8]
   21048:	movw	r1, #0
   2104c:	cmp	r0, r1
   21050:	beq	21060 <__assert_fail@plt+0xfcdc>
   21054:	ldr	r0, [fp, #-8]
   21058:	ldr	r1, [fp, #-112]	; 0xffffff90
   2105c:	bl	1d408 <__assert_fail@plt+0xc084>
   21060:	ldr	r0, [fp, #-12]
   21064:	movw	r1, #0
   21068:	cmp	r0, r1
   2106c:	beq	2107c <__assert_fail@plt+0xfcf8>
   21070:	ldr	r0, [fp, #-12]
   21074:	movw	r1, #0
   21078:	str	r1, [r0, #4]
   2107c:	b	215fc <__assert_fail@plt+0x10278>
   21080:	sub	r0, fp, #28
   21084:	bl	1d2ac <__assert_fail@plt+0xbf28>
   21088:	sub	r0, fp, #40	; 0x28
   2108c:	bl	1d2ac <__assert_fail@plt+0xbf28>
   21090:	sub	r0, fp, #52	; 0x34
   21094:	bl	1d2ac <__assert_fail@plt+0xbf28>
   21098:	sub	r0, fp, #64	; 0x40
   2109c:	bl	1d2ac <__assert_fail@plt+0xbf28>
   210a0:	sub	r0, fp, #76	; 0x4c
   210a4:	bl	1d2ac <__assert_fail@plt+0xbf28>
   210a8:	sub	r0, fp, #88	; 0x58
   210ac:	bl	1d2ac <__assert_fail@plt+0xbf28>
   210b0:	sub	r0, fp, #28
   210b4:	ldr	r1, [fp, #-16]
   210b8:	bl	1e954 <__assert_fail@plt+0xd5d0>
   210bc:	sub	r0, fp, #28
   210c0:	bl	20cbc <__assert_fail@plt+0xf938>
   210c4:	sub	r1, fp, #40	; 0x28
   210c8:	str	r0, [fp, #-92]	; 0xffffffa4
   210cc:	ldr	r0, [fp, #8]
   210d0:	str	r0, [sp, #96]	; 0x60
   210d4:	mov	r0, r1
   210d8:	ldr	r1, [sp, #96]	; 0x60
   210dc:	bl	1e954 <__assert_fail@plt+0xd5d0>
   210e0:	sub	r0, fp, #40	; 0x28
   210e4:	bl	20cbc <__assert_fail@plt+0xf938>
   210e8:	str	r0, [fp, #-96]	; 0xffffffa0
   210ec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   210f0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   210f4:	cmp	r0, r1
   210f8:	bcs	21108 <__assert_fail@plt+0xfd84>
   210fc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   21100:	str	r0, [sp, #92]	; 0x5c
   21104:	b	21110 <__assert_fail@plt+0xfd8c>
   21108:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2110c:	str	r0, [sp, #92]	; 0x5c
   21110:	ldr	r0, [sp, #92]	; 0x5c
   21114:	str	r0, [fp, #-100]	; 0xffffff9c
   21118:	ldr	r0, [fp, #-100]	; 0xffffff9c
   2111c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   21120:	sub	r0, r1, r0
   21124:	str	r0, [fp, #-92]	; 0xffffffa4
   21128:	ldr	r0, [fp, #-100]	; 0xffffff9c
   2112c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   21130:	sub	r0, r1, r0
   21134:	str	r0, [fp, #-96]	; 0xffffffa0
   21138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2113c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21140:	cmp	r0, r1
   21144:	bge	211a8 <__assert_fail@plt+0xfe24>
   21148:	sub	r1, fp, #40	; 0x28
   2114c:	sub	r0, fp, #28
   21150:	bl	1e9fc <__assert_fail@plt+0xd678>
   21154:	ldr	r0, [fp, #-16]
   21158:	str	r0, [sp, #116]	; 0x74
   2115c:	ldr	r0, [fp, #8]
   21160:	str	r0, [fp, #-16]
   21164:	ldr	r0, [sp, #116]	; 0x74
   21168:	str	r0, [fp, #8]
   2116c:	b	21170 <__assert_fail@plt+0xfdec>
   21170:	ldr	r0, [fp, #-8]
   21174:	str	r0, [sp, #112]	; 0x70
   21178:	ldr	r0, [fp, #-12]
   2117c:	str	r0, [fp, #-8]
   21180:	ldr	r0, [sp, #112]	; 0x70
   21184:	str	r0, [fp, #-12]
   21188:	b	2118c <__assert_fail@plt+0xfe08>
   2118c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   21190:	str	r0, [sp, #108]	; 0x6c
   21194:	ldr	r0, [fp, #-96]	; 0xffffffa0
   21198:	str	r0, [fp, #-92]	; 0xffffffa4
   2119c:	ldr	r0, [sp, #108]	; 0x6c
   211a0:	str	r0, [fp, #-96]	; 0xffffffa0
   211a4:	b	211a8 <__assert_fail@plt+0xfe24>
   211a8:	sub	r3, fp, #40	; 0x28
   211ac:	sub	r0, fp, #28
   211b0:	sub	r1, fp, #88	; 0x58
   211b4:	str	r0, [sp, #88]	; 0x58
   211b8:	mov	r0, r1
   211bc:	ldr	r1, [sp, #88]	; 0x58
   211c0:	ldr	r2, [sp, #88]	; 0x58
   211c4:	bl	1fb0c <__assert_fail@plt+0xe788>
   211c8:	sub	r0, fp, #88	; 0x58
   211cc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   211d0:	str	r0, [sp, #84]	; 0x54
   211d4:	ldr	r1, [sp, #84]	; 0x54
   211d8:	bl	1f2d4 <__assert_fail@plt+0xdf50>
   211dc:	sub	r0, fp, #64	; 0x40
   211e0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   211e4:	bl	21604 <__assert_fail@plt+0x10280>
   211e8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   211ec:	ldr	r1, [fp, #-96]	; 0xffffffa0
   211f0:	add	r0, r0, r1
   211f4:	str	r0, [fp, #-104]	; 0xffffff98
   211f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   211fc:	cmp	r0, #0
   21200:	ble	21360 <__assert_fail@plt+0xffdc>
   21204:	sub	r0, fp, #28
   21208:	bl	20cbc <__assert_fail@plt+0xf938>
   2120c:	sub	r1, fp, #76	; 0x4c
   21210:	str	r0, [sp, #104]	; 0x68
   21214:	ldr	r0, [fp, #-92]	; 0xffffffa4
   21218:	ldr	r2, [sp, #104]	; 0x68
   2121c:	add	r0, r0, r2
   21220:	str	r0, [sp, #80]	; 0x50
   21224:	mov	r0, r1
   21228:	ldr	r1, [sp, #80]	; 0x50
   2122c:	bl	21604 <__assert_fail@plt+0x10280>
   21230:	ldr	r0, [sp, #104]	; 0x68
   21234:	ldr	r1, [fp, #-104]	; 0xffffff98
   21238:	add	r0, r1, r0
   2123c:	str	r0, [fp, #-104]	; 0xffffff98
   21240:	sub	r1, fp, #40	; 0x28
   21244:	sub	r0, fp, #28
   21248:	bl	1e75c <__assert_fail@plt+0xd3d8>
   2124c:	str	r0, [sp, #100]	; 0x64
   21250:	ldr	r0, [sp, #100]	; 0x64
   21254:	cmp	r0, #0
   21258:	bne	21260 <__assert_fail@plt+0xfedc>
   2125c:	b	2135c <__assert_fail@plt+0xffd8>
   21260:	ldr	r0, [sp, #100]	; 0x64
   21264:	cmp	r0, #0
   21268:	bge	212dc <__assert_fail@plt+0xff58>
   2126c:	sub	r2, fp, #28
   21270:	sub	r0, fp, #40	; 0x28
   21274:	str	r0, [sp, #76]	; 0x4c
   21278:	ldr	r1, [sp, #76]	; 0x4c
   2127c:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   21280:	sub	r2, fp, #88	; 0x58
   21284:	sub	r0, fp, #76	; 0x4c
   21288:	str	r0, [sp, #72]	; 0x48
   2128c:	ldr	r1, [sp, #72]	; 0x48
   21290:	bl	1ead8 <__assert_fail@plt+0xd754>
   21294:	sub	r2, fp, #64	; 0x40
   21298:	sub	r0, fp, #52	; 0x34
   2129c:	str	r0, [sp, #68]	; 0x44
   212a0:	ldr	r1, [sp, #68]	; 0x44
   212a4:	bl	1ead8 <__assert_fail@plt+0xd754>
   212a8:	sub	r0, fp, #40	; 0x28
   212ac:	bl	20cbc <__assert_fail@plt+0xf938>
   212b0:	sub	r1, fp, #88	; 0x58
   212b4:	str	r0, [sp, #104]	; 0x68
   212b8:	ldr	r2, [sp, #104]	; 0x68
   212bc:	mov	r0, r1
   212c0:	bl	1f2d4 <__assert_fail@plt+0xdf50>
   212c4:	sub	r0, fp, #64	; 0x40
   212c8:	ldr	r2, [sp, #104]	; 0x68
   212cc:	str	r0, [sp, #64]	; 0x40
   212d0:	ldr	r1, [sp, #64]	; 0x40
   212d4:	bl	1f2d4 <__assert_fail@plt+0xdf50>
   212d8:	b	21348 <__assert_fail@plt+0xffc4>
   212dc:	sub	r2, fp, #40	; 0x28
   212e0:	sub	r0, fp, #28
   212e4:	str	r0, [sp, #60]	; 0x3c
   212e8:	ldr	r1, [sp, #60]	; 0x3c
   212ec:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   212f0:	sub	r0, fp, #88	; 0x58
   212f4:	sub	r1, fp, #76	; 0x4c
   212f8:	str	r0, [sp, #56]	; 0x38
   212fc:	ldr	r2, [sp, #56]	; 0x38
   21300:	bl	1ead8 <__assert_fail@plt+0xd754>
   21304:	sub	r0, fp, #64	; 0x40
   21308:	sub	r1, fp, #52	; 0x34
   2130c:	str	r0, [sp, #52]	; 0x34
   21310:	ldr	r2, [sp, #52]	; 0x34
   21314:	bl	1ead8 <__assert_fail@plt+0xd754>
   21318:	sub	r0, fp, #28
   2131c:	bl	20cbc <__assert_fail@plt+0xf938>
   21320:	sub	r1, fp, #76	; 0x4c
   21324:	str	r0, [sp, #104]	; 0x68
   21328:	ldr	r2, [sp, #104]	; 0x68
   2132c:	mov	r0, r1
   21330:	bl	1f2d4 <__assert_fail@plt+0xdf50>
   21334:	sub	r0, fp, #52	; 0x34
   21338:	ldr	r2, [sp, #104]	; 0x68
   2133c:	str	r0, [sp, #48]	; 0x30
   21340:	ldr	r1, [sp, #48]	; 0x30
   21344:	bl	1f2d4 <__assert_fail@plt+0xdf50>
   21348:	ldr	r0, [sp, #104]	; 0x68
   2134c:	ldr	r1, [fp, #-104]	; 0xffffff98
   21350:	add	r0, r1, r0
   21354:	str	r0, [fp, #-104]	; 0xffffff98
   21358:	b	21240 <__assert_fail@plt+0xfebc>
   2135c:	b	2136c <__assert_fail@plt+0xffe8>
   21360:	sub	r0, fp, #76	; 0x4c
   21364:	ldr	r1, [fp, #-92]	; 0xffffffa4
   21368:	bl	21604 <__assert_fail@plt+0x10280>
   2136c:	sub	r0, fp, #40	; 0x28
   21370:	ldr	r2, [fp, #-100]	; 0xffffff9c
   21374:	str	r0, [sp, #44]	; 0x2c
   21378:	ldr	r1, [sp, #44]	; 0x2c
   2137c:	bl	1f2d4 <__assert_fail@plt+0xdf50>
   21380:	sub	r0, fp, #52	; 0x34
   21384:	str	r0, [sp, #40]	; 0x28
   21388:	ldr	r1, [sp, #40]	; 0x28
   2138c:	bl	1e9bc <__assert_fail@plt+0xd638>
   21390:	sub	r2, fp, #40	; 0x28
   21394:	sub	r0, fp, #64	; 0x40
   21398:	ldr	r1, [fp, #8]
   2139c:	bl	20408 <__assert_fail@plt+0xf084>
   213a0:	sub	r0, fp, #64	; 0x40
   213a4:	str	r0, [sp, #36]	; 0x24
   213a8:	ldr	r1, [sp, #36]	; 0x24
   213ac:	bl	1e954 <__assert_fail@plt+0xd5d0>
   213b0:	sub	r2, fp, #40	; 0x28
   213b4:	sub	r0, fp, #88	; 0x58
   213b8:	ldr	r1, [fp, #-16]
   213bc:	bl	20408 <__assert_fail@plt+0xf084>
   213c0:	sub	r0, fp, #88	; 0x58
   213c4:	str	r0, [sp, #32]
   213c8:	ldr	r1, [sp, #32]
   213cc:	bl	1e954 <__assert_fail@plt+0xd5d0>
   213d0:	ldr	r0, [fp, #-104]	; 0xffffff98
   213d4:	mvn	r1, #0
   213d8:	add	r1, r0, r1
   213dc:	str	r1, [fp, #-104]	; 0xffffff98
   213e0:	cmp	r0, #0
   213e4:	bls	21500 <__assert_fail@plt+0x1017c>
   213e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   213ec:	cmp	r0, #0
   213f0:	movw	r0, #0
   213f4:	movne	r0, #1
   213f8:	and	r0, r0, #1
   213fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21400:	ldr	r1, [r1]
   21404:	and	r0, r0, r1
   21408:	cmp	r0, #0
   2140c:	bne	21438 <__assert_fail@plt+0x100b4>
   21410:	ldr	r0, [fp, #-72]	; 0xffffffb8
   21414:	cmp	r0, #0
   21418:	movw	r0, #0
   2141c:	movne	r0, #1
   21420:	and	r0, r0, #1
   21424:	ldr	r1, [fp, #-68]	; 0xffffffbc
   21428:	ldr	r1, [r1]
   2142c:	and	r0, r0, r1
   21430:	cmp	r0, #0
   21434:	beq	21460 <__assert_fail@plt+0x100dc>
   21438:	sub	r2, fp, #64	; 0x40
   2143c:	sub	r0, fp, #52	; 0x34
   21440:	str	r0, [sp, #28]
   21444:	ldr	r1, [sp, #28]
   21448:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   2144c:	sub	r2, fp, #88	; 0x58
   21450:	sub	r0, fp, #76	; 0x4c
   21454:	str	r0, [sp, #24]
   21458:	ldr	r1, [sp, #24]
   2145c:	bl	1ead8 <__assert_fail@plt+0xd754>
   21460:	ldr	r0, [fp, #-72]	; 0xffffffb8
   21464:	cmp	r0, #0
   21468:	movw	r0, #0
   2146c:	movne	r0, #1
   21470:	and	r0, r0, #1
   21474:	ldr	r1, [fp, #-68]	; 0xffffffbc
   21478:	ldr	r1, [r1]
   2147c:	and	r0, r0, r1
   21480:	cmp	r0, #0
   21484:	bne	214b4 <__assert_fail@plt+0x10130>
   21488:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2148c:	cmp	r0, #0
   21490:	movw	r0, #0
   21494:	movne	r0, #1
   21498:	and	r0, r0, #1
   2149c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   214a0:	ldr	r1, [r1]
   214a4:	and	r0, r0, r1
   214a8:	cmp	r0, #0
   214ac:	bne	214b4 <__assert_fail@plt+0x10130>
   214b0:	b	214d4 <__assert_fail@plt+0x10150>
   214b4:	movw	r0, #30111	; 0x759f
   214b8:	movt	r0, #3
   214bc:	movw	r1, #28968	; 0x7128
   214c0:	movt	r1, #3
   214c4:	movw	r2, #2950	; 0xb86
   214c8:	movw	r3, #30146	; 0x75c2
   214cc:	movt	r3, #3
   214d0:	bl	11384 <__assert_fail@plt>
   214d4:	sub	r0, fp, #52	; 0x34
   214d8:	str	r0, [sp, #20]
   214dc:	ldr	r1, [sp, #20]
   214e0:	movw	r2, #1
   214e4:	bl	1ffd8 <__assert_fail@plt+0xec54>
   214e8:	sub	r0, fp, #76	; 0x4c
   214ec:	str	r0, [sp, #16]
   214f0:	ldr	r1, [sp, #16]
   214f4:	movw	r2, #1
   214f8:	bl	1ffd8 <__assert_fail@plt+0xec54>
   214fc:	b	213d0 <__assert_fail@plt+0x1004c>
   21500:	sub	r0, fp, #64	; 0x40
   21504:	sub	r1, fp, #52	; 0x34
   21508:	str	r0, [sp, #12]
   2150c:	ldr	r2, [sp, #12]
   21510:	bl	1ead8 <__assert_fail@plt+0xd754>
   21514:	sub	r1, fp, #64	; 0x40
   21518:	sub	r0, fp, #52	; 0x34
   2151c:	bl	1e81c <__assert_fail@plt+0xd498>
   21520:	cmp	r0, #0
   21524:	ble	21548 <__assert_fail@plt+0x101c4>
   21528:	sub	r1, fp, #64	; 0x40
   2152c:	sub	r0, fp, #52	; 0x34
   21530:	bl	1e9fc <__assert_fail@plt+0xd678>
   21534:	sub	r2, fp, #88	; 0x58
   21538:	sub	r0, fp, #76	; 0x4c
   2153c:	str	r0, [sp, #8]
   21540:	ldr	r1, [sp, #8]
   21544:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   21548:	ldr	r0, [fp, #-16]
   2154c:	ldr	r0, [r0, #4]
   21550:	cmp	r0, #0
   21554:	bge	21568 <__assert_fail@plt+0x101e4>
   21558:	sub	r0, fp, #52	; 0x34
   2155c:	str	r0, [sp, #4]
   21560:	ldr	r1, [sp, #4]
   21564:	bl	1e9bc <__assert_fail@plt+0xd638>
   21568:	ldr	r0, [fp, #8]
   2156c:	ldr	r0, [r0, #4]
   21570:	cmp	r0, #0
   21574:	bge	21588 <__assert_fail@plt+0x10204>
   21578:	sub	r0, fp, #76	; 0x4c
   2157c:	str	r0, [sp]
   21580:	ldr	r1, [sp]
   21584:	bl	1e9bc <__assert_fail@plt+0xd638>
   21588:	sub	r1, fp, #40	; 0x28
   2158c:	ldr	r0, [fp, #-4]
   21590:	bl	1e9fc <__assert_fail@plt+0xd678>
   21594:	ldr	r0, [fp, #-8]
   21598:	movw	r1, #0
   2159c:	cmp	r0, r1
   215a0:	beq	215b0 <__assert_fail@plt+0x1022c>
   215a4:	sub	r1, fp, #52	; 0x34
   215a8:	ldr	r0, [fp, #-8]
   215ac:	bl	1e9fc <__assert_fail@plt+0xd678>
   215b0:	ldr	r0, [fp, #-12]
   215b4:	movw	r1, #0
   215b8:	cmp	r0, r1
   215bc:	beq	215cc <__assert_fail@plt+0x10248>
   215c0:	sub	r1, fp, #76	; 0x4c
   215c4:	ldr	r0, [fp, #-12]
   215c8:	bl	1e9fc <__assert_fail@plt+0xd678>
   215cc:	sub	r0, fp, #28
   215d0:	bl	1d384 <__assert_fail@plt+0xc000>
   215d4:	sub	r0, fp, #40	; 0x28
   215d8:	bl	1d384 <__assert_fail@plt+0xc000>
   215dc:	sub	r0, fp, #52	; 0x34
   215e0:	bl	1d384 <__assert_fail@plt+0xc000>
   215e4:	sub	r0, fp, #64	; 0x40
   215e8:	bl	1d384 <__assert_fail@plt+0xc000>
   215ec:	sub	r0, fp, #76	; 0x4c
   215f0:	bl	1d384 <__assert_fail@plt+0xc000>
   215f4:	sub	r0, fp, #88	; 0x58
   215f8:	bl	1d384 <__assert_fail@plt+0xc000>
   215fc:	mov	sp, fp
   21600:	pop	{fp, pc}
   21604:	push	{fp, lr}
   21608:	mov	fp, sp
   2160c:	sub	sp, sp, #8
   21610:	str	r0, [sp, #4]
   21614:	str	r1, [sp]
   21618:	ldr	r0, [sp, #4]
   2161c:	ldr	r1, [sp]
   21620:	bl	2344c <__assert_fail@plt+0x120c8>
   21624:	cmp	r0, #0
   21628:	bne	2165c <__assert_fail@plt+0x102d8>
   2162c:	ldr	r0, [sp, #4]
   21630:	ldr	r0, [r0, #4]
   21634:	cmp	r0, #0
   21638:	blt	2164c <__assert_fail@plt+0x102c8>
   2163c:	ldr	r0, [sp, #4]
   21640:	ldr	r1, [sp]
   21644:	bl	235ac <__assert_fail@plt+0x12228>
   21648:	b	21658 <__assert_fail@plt+0x102d4>
   2164c:	ldr	r0, [sp, #4]
   21650:	ldr	r1, [sp]
   21654:	bl	237c0 <__assert_fail@plt+0x1243c>
   21658:	b	2165c <__assert_fail@plt+0x102d8>
   2165c:	mov	sp, fp
   21660:	pop	{fp, pc}
   21664:	push	{fp, lr}
   21668:	mov	fp, sp
   2166c:	sub	sp, sp, #32
   21670:	str	r0, [fp, #-4]
   21674:	str	r1, [fp, #-8]
   21678:	str	r2, [fp, #-12]
   2167c:	ldr	r0, [fp, #-8]
   21680:	ldr	r0, [r0, #4]
   21684:	cmp	r0, #0
   21688:	beq	2169c <__assert_fail@plt+0x10318>
   2168c:	ldr	r0, [fp, #-12]
   21690:	ldr	r0, [r0, #4]
   21694:	cmp	r0, #0
   21698:	bne	216ac <__assert_fail@plt+0x10328>
   2169c:	ldr	r0, [fp, #-4]
   216a0:	movw	r1, #0
   216a4:	str	r1, [r0, #4]
   216a8:	b	216fc <__assert_fail@plt+0x10378>
   216ac:	add	r0, sp, #8
   216b0:	bl	1d2ac <__assert_fail@plt+0xbf28>
   216b4:	add	r0, sp, #8
   216b8:	ldr	r1, [fp, #-8]
   216bc:	ldr	r2, [fp, #-12]
   216c0:	bl	20a68 <__assert_fail@plt+0xf6e4>
   216c4:	add	r0, sp, #8
   216c8:	ldr	r1, [fp, #-8]
   216cc:	str	r0, [sp, #4]
   216d0:	ldr	r2, [sp, #4]
   216d4:	bl	20408 <__assert_fail@plt+0xf084>
   216d8:	add	r1, sp, #8
   216dc:	ldr	r0, [fp, #-4]
   216e0:	ldr	r2, [fp, #-12]
   216e4:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   216e8:	add	r0, sp, #8
   216ec:	bl	1d384 <__assert_fail@plt+0xc000>
   216f0:	ldr	r0, [fp, #-4]
   216f4:	ldr	r1, [fp, #-4]
   216f8:	bl	1e954 <__assert_fail@plt+0xd5d0>
   216fc:	mov	sp, fp
   21700:	pop	{fp, pc}
   21704:	push	{fp, lr}
   21708:	mov	fp, sp
   2170c:	sub	sp, sp, #16
   21710:	str	r0, [fp, #-4]
   21714:	str	r1, [sp, #8]
   21718:	str	r2, [sp, #4]
   2171c:	ldr	r0, [sp, #4]
   21720:	cmp	r0, #0
   21724:	beq	21738 <__assert_fail@plt+0x103b4>
   21728:	ldr	r0, [sp, #8]
   2172c:	ldr	r0, [r0, #4]
   21730:	cmp	r0, #0
   21734:	bne	21748 <__assert_fail@plt+0x103c4>
   21738:	ldr	r0, [fp, #-4]
   2173c:	movw	r1, #0
   21740:	str	r1, [r0, #4]
   21744:	b	21780 <__assert_fail@plt+0x103fc>
   21748:	ldr	r1, [sp, #8]
   2174c:	ldr	r2, [sp, #4]
   21750:	movw	r0, #0
   21754:	bl	209e4 <__assert_fail@plt+0xf660>
   21758:	ldr	r1, [sp, #4]
   2175c:	udiv	r0, r1, r0
   21760:	str	r0, [sp, #4]
   21764:	ldr	r0, [fp, #-4]
   21768:	ldr	r1, [sp, #8]
   2176c:	ldr	r2, [sp, #4]
   21770:	bl	1f0ac <__assert_fail@plt+0xdd28>
   21774:	ldr	r0, [fp, #-4]
   21778:	ldr	r1, [fp, #-4]
   2177c:	bl	1e954 <__assert_fail@plt+0xd5d0>
   21780:	mov	sp, fp
   21784:	pop	{fp, pc}
   21788:	push	{fp, lr}
   2178c:	mov	fp, sp
   21790:	sub	sp, sp, #64	; 0x40
   21794:	str	r0, [fp, #-8]
   21798:	str	r1, [fp, #-12]
   2179c:	str	r2, [fp, #-16]
   217a0:	ldr	r0, [fp, #-12]
   217a4:	ldr	r0, [r0, #4]
   217a8:	cmp	r0, #0
   217ac:	beq	217c4 <__assert_fail@plt+0x10440>
   217b0:	ldr	r0, [fp, #-16]
   217b4:	movw	r1, #1
   217b8:	bl	1da00 <__assert_fail@plt+0xc67c>
   217bc:	cmp	r0, #0
   217c0:	bgt	217d0 <__assert_fail@plt+0x1044c>
   217c4:	movw	r0, #0
   217c8:	str	r0, [fp, #-4]
   217cc:	b	218a4 <__assert_fail@plt+0x10520>
   217d0:	sub	r0, fp, #28
   217d4:	bl	1d2ac <__assert_fail@plt+0xbf28>
   217d8:	add	r0, sp, #24
   217dc:	bl	1d2ac <__assert_fail@plt+0xbf28>
   217e0:	add	r1, sp, #24
   217e4:	sub	r0, fp, #28
   217e8:	ldr	r3, [fp, #-12]
   217ec:	ldr	r2, [fp, #-16]
   217f0:	movw	ip, #0
   217f4:	str	r2, [sp, #16]
   217f8:	mov	r2, ip
   217fc:	ldr	ip, [sp, #16]
   21800:	str	ip, [sp]
   21804:	bl	20f98 <__assert_fail@plt+0xfc14>
   21808:	sub	r0, fp, #28
   2180c:	movw	r1, #1
   21810:	bl	1e708 <__assert_fail@plt+0xd384>
   21814:	cmp	r0, #0
   21818:	movw	r0, #0
   2181c:	moveq	r0, #1
   21820:	and	r0, r0, #1
   21824:	str	r0, [sp, #20]
   21828:	ldr	r0, [sp, #20]
   2182c:	cmp	r0, #0
   21830:	beq	2188c <__assert_fail@plt+0x10508>
   21834:	ldr	r0, [sp, #28]
   21838:	cmp	r0, #0
   2183c:	bge	21880 <__assert_fail@plt+0x104fc>
   21840:	ldr	r0, [fp, #-16]
   21844:	ldr	r0, [r0, #4]
   21848:	cmp	r0, #0
   2184c:	blt	21868 <__assert_fail@plt+0x104e4>
   21850:	add	r0, sp, #24
   21854:	ldr	r2, [fp, #-16]
   21858:	str	r0, [sp, #12]
   2185c:	ldr	r1, [sp, #12]
   21860:	bl	1ead8 <__assert_fail@plt+0xd754>
   21864:	b	2187c <__assert_fail@plt+0x104f8>
   21868:	add	r0, sp, #24
   2186c:	ldr	r2, [fp, #-16]
   21870:	str	r0, [sp, #8]
   21874:	ldr	r1, [sp, #8]
   21878:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   2187c:	b	21880 <__assert_fail@plt+0x104fc>
   21880:	add	r1, sp, #24
   21884:	ldr	r0, [fp, #-8]
   21888:	bl	1e9fc <__assert_fail@plt+0xd678>
   2188c:	sub	r0, fp, #28
   21890:	bl	1d384 <__assert_fail@plt+0xc000>
   21894:	add	r0, sp, #24
   21898:	bl	1d384 <__assert_fail@plt+0xc000>
   2189c:	ldr	r0, [sp, #20]
   218a0:	str	r0, [fp, #-4]
   218a4:	ldr	r0, [fp, #-4]
   218a8:	mov	sp, fp
   218ac:	pop	{fp, pc}
   218b0:	push	{fp, lr}
   218b4:	mov	fp, sp
   218b8:	sub	sp, sp, #40	; 0x28
   218bc:	add	r3, sp, #12
   218c0:	str	r0, [fp, #-4]
   218c4:	str	r1, [fp, #-8]
   218c8:	str	r2, [fp, #-12]
   218cc:	mov	r0, r3
   218d0:	movw	r1, #1
   218d4:	bl	1d714 <__assert_fail@plt+0xc390>
   218d8:	ldr	r0, [pc, #112]	; 21950 <__assert_fail@plt+0x105cc>
   218dc:	str	r0, [fp, #-16]
   218e0:	add	r0, sp, #12
   218e4:	str	r0, [sp, #8]
   218e8:	ldr	r1, [sp, #8]
   218ec:	ldr	r2, [sp, #8]
   218f0:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   218f4:	ldr	r0, [fp, #-12]
   218f8:	ldr	r1, [fp, #-16]
   218fc:	and	r0, r0, r1
   21900:	cmp	r0, #0
   21904:	beq	2191c <__assert_fail@plt+0x10598>
   21908:	add	r0, sp, #12
   2190c:	ldr	r2, [fp, #-8]
   21910:	str	r0, [sp, #4]
   21914:	ldr	r1, [sp, #4]
   21918:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   2191c:	ldr	r0, [fp, #-16]
   21920:	lsr	r0, r0, #1
   21924:	str	r0, [fp, #-16]
   21928:	ldr	r0, [fp, #-16]
   2192c:	cmp	r0, #0
   21930:	bhi	218e0 <__assert_fail@plt+0x1055c>
   21934:	add	r1, sp, #12
   21938:	ldr	r0, [fp, #-4]
   2193c:	bl	1e9fc <__assert_fail@plt+0xd678>
   21940:	add	r0, sp, #12
   21944:	bl	1d384 <__assert_fail@plt+0xc000>
   21948:	mov	sp, fp
   2194c:	pop	{fp, pc}
   21950:	andhi	r0, r0, r0
   21954:	push	{fp, lr}
   21958:	mov	fp, sp
   2195c:	sub	sp, sp, #24
   21960:	mov	r3, sp
   21964:	str	r0, [fp, #-4]
   21968:	str	r1, [fp, #-8]
   2196c:	str	r2, [sp, #12]
   21970:	ldr	r1, [fp, #-8]
   21974:	mov	r0, r3
   21978:	bl	1d714 <__assert_fail@plt+0xc390>
   2197c:	mov	r1, sp
   21980:	ldr	r0, [fp, #-4]
   21984:	ldr	r2, [sp, #12]
   21988:	bl	218b0 <__assert_fail@plt+0x1052c>
   2198c:	mov	r0, sp
   21990:	bl	1d384 <__assert_fail@plt+0xc000>
   21994:	mov	sp, fp
   21998:	pop	{fp, pc}
   2199c:	push	{fp, lr}
   219a0:	mov	fp, sp
   219a4:	sub	sp, sp, #144	; 0x90
   219a8:	str	r0, [fp, #-4]
   219ac:	str	r1, [fp, #-8]
   219b0:	str	r2, [fp, #-12]
   219b4:	str	r3, [fp, #-16]
   219b8:	movw	r0, #0
   219bc:	str	r0, [sp, #68]	; 0x44
   219c0:	ldr	r0, [fp, #-12]
   219c4:	ldr	r0, [r0, #4]
   219c8:	cmp	r0, #0
   219cc:	blt	219e0 <__assert_fail@plt+0x1065c>
   219d0:	ldr	r0, [fp, #-12]
   219d4:	ldr	r0, [r0, #4]
   219d8:	str	r0, [sp, #40]	; 0x28
   219dc:	b	219f4 <__assert_fail@plt+0x10670>
   219e0:	ldr	r0, [fp, #-12]
   219e4:	ldr	r0, [r0, #4]
   219e8:	movw	r1, #0
   219ec:	sub	r0, r1, r0
   219f0:	str	r0, [sp, #40]	; 0x28
   219f4:	ldr	r0, [sp, #40]	; 0x28
   219f8:	str	r0, [fp, #-44]	; 0xffffffd4
   219fc:	ldr	r0, [fp, #-16]
   21a00:	ldr	r0, [r0, #4]
   21a04:	cmp	r0, #0
   21a08:	blt	21a1c <__assert_fail@plt+0x10698>
   21a0c:	ldr	r0, [fp, #-16]
   21a10:	ldr	r0, [r0, #4]
   21a14:	str	r0, [sp, #36]	; 0x24
   21a18:	b	21a30 <__assert_fail@plt+0x106ac>
   21a1c:	ldr	r0, [fp, #-16]
   21a20:	ldr	r0, [r0, #4]
   21a24:	movw	r1, #0
   21a28:	sub	r0, r1, r0
   21a2c:	str	r0, [sp, #36]	; 0x24
   21a30:	ldr	r0, [sp, #36]	; 0x24
   21a34:	str	r0, [fp, #-48]	; 0xffffffd0
   21a38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21a3c:	cmp	r0, #0
   21a40:	bne	21a50 <__assert_fail@plt+0x106cc>
   21a44:	movw	r0, #30254	; 0x762e
   21a48:	movt	r0, #3
   21a4c:	bl	21dd8 <__assert_fail@plt+0x10a54>
   21a50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21a54:	cmp	r0, #0
   21a58:	bne	21a6c <__assert_fail@plt+0x106e8>
   21a5c:	ldr	r0, [fp, #-4]
   21a60:	movw	r1, #1
   21a64:	bl	1d4a4 <__assert_fail@plt+0xc120>
   21a68:	b	21dcc <__assert_fail@plt+0x10a48>
   21a6c:	ldr	r0, [fp, #-16]
   21a70:	ldr	r0, [r0, #8]
   21a74:	str	r0, [fp, #-52]	; 0xffffffcc
   21a78:	ldr	r1, [fp, #-52]	; 0xffffffcc
   21a7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   21a80:	sub	r0, fp, #68	; 0x44
   21a84:	bl	21e0c <__assert_fail@plt+0x10a88>
   21a88:	ldr	r0, [fp, #-68]	; 0xffffffbc
   21a8c:	str	r0, [sp, #72]	; 0x48
   21a90:	ldr	r0, [sp, #72]	; 0x48
   21a94:	cmp	r0, #0
   21a98:	bls	21b04 <__assert_fail@plt+0x10780>
   21a9c:	movw	r0, #0
   21aa0:	str	r0, [fp, #-68]	; 0xffffffbc
   21aa4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21aa8:	bl	1d348 <__assert_fail@plt+0xbfc4>
   21aac:	str	r0, [sp, #68]	; 0x44
   21ab0:	ldr	r0, [sp, #68]	; 0x44
   21ab4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   21ab8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   21abc:	ldr	r3, [sp, #72]	; 0x48
   21ac0:	bl	1be0c <__assert_fail@plt+0xaa88>
   21ac4:	str	r0, [sp, #64]	; 0x40
   21ac8:	ldr	r0, [sp, #64]	; 0x40
   21acc:	cmp	r0, #0
   21ad0:	bne	21ad8 <__assert_fail@plt+0x10754>
   21ad4:	b	21af8 <__assert_fail@plt+0x10774>
   21ad8:	movw	r0, #29949	; 0x74fd
   21adc:	movt	r0, #3
   21ae0:	movw	r1, #28968	; 0x7128
   21ae4:	movt	r1, #3
   21ae8:	movw	r2, #3116	; 0xc2c
   21aec:	movw	r3, #30277	; 0x7645
   21af0:	movt	r3, #3
   21af4:	bl	11384 <__assert_fail@plt>
   21af8:	b	21afc <__assert_fail@plt+0x10778>
   21afc:	ldr	r0, [sp, #68]	; 0x44
   21b00:	str	r0, [fp, #-52]	; 0xffffffcc
   21b04:	sub	r0, fp, #40	; 0x28
   21b08:	bl	1d2ac <__assert_fail@plt+0xbf28>
   21b0c:	ldr	r0, [fp, #-12]
   21b10:	ldr	r0, [r0, #4]
   21b14:	cmp	r0, #0
   21b18:	bge	21b44 <__assert_fail@plt+0x107c0>
   21b1c:	sub	r0, fp, #40	; 0x28
   21b20:	ldr	r1, [fp, #-8]
   21b24:	ldr	r2, [fp, #-16]
   21b28:	bl	21788 <__assert_fail@plt+0x10404>
   21b2c:	cmp	r0, #0
   21b30:	bne	21b40 <__assert_fail@plt+0x107bc>
   21b34:	movw	r0, #30373	; 0x76a5
   21b38:	movt	r0, #3
   21b3c:	bl	21dd8 <__assert_fail@plt+0x10a54>
   21b40:	b	21c50 <__assert_fail@plt+0x108cc>
   21b44:	sub	r0, fp, #40	; 0x28
   21b48:	ldr	r1, [fp, #-8]
   21b4c:	bl	1e954 <__assert_fail@plt+0xd5d0>
   21b50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21b54:	str	r0, [sp, #60]	; 0x3c
   21b58:	ldr	r0, [sp, #60]	; 0x3c
   21b5c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21b60:	cmp	r0, r1
   21b64:	blt	21ba0 <__assert_fail@plt+0x1081c>
   21b68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21b6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   21b70:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21b74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21b78:	movw	ip, #0
   21b7c:	str	r0, [sp, #32]
   21b80:	mov	r0, ip
   21b84:	ldr	ip, [sp, #32]
   21b88:	str	ip, [sp]
   21b8c:	sub	lr, fp, #68	; 0x44
   21b90:	str	lr, [sp, #4]
   21b94:	bl	22038 <__assert_fail@plt+0x10cb4>
   21b98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21b9c:	str	r0, [sp, #60]	; 0x3c
   21ba0:	ldr	r0, [fp, #-8]
   21ba4:	ldr	r0, [r0, #4]
   21ba8:	cmp	r0, #0
   21bac:	bge	21c40 <__assert_fail@plt+0x108bc>
   21bb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21bb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21bb8:	cmp	r0, r1
   21bbc:	ble	21bd4 <__assert_fail@plt+0x10850>
   21bc0:	sub	r0, fp, #40	; 0x28
   21bc4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21bc8:	bl	1d52c <__assert_fail@plt+0xc1a8>
   21bcc:	str	r0, [sp, #28]
   21bd0:	b	21bdc <__assert_fail@plt+0x10858>
   21bd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21bd8:	str	r0, [sp, #28]
   21bdc:	ldr	r0, [sp, #28]
   21be0:	str	r0, [sp, #56]	; 0x38
   21be4:	ldr	r0, [sp, #56]	; 0x38
   21be8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   21bec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   21bf0:	ldr	r3, [sp, #56]	; 0x38
   21bf4:	ldr	ip, [sp, #60]	; 0x3c
   21bf8:	str	ip, [sp]
   21bfc:	bl	1b514 <__assert_fail@plt+0xa190>
   21c00:	str	r0, [sp, #52]	; 0x34
   21c04:	ldr	r0, [sp, #52]	; 0x34
   21c08:	cmp	r0, #0
   21c0c:	bne	21c14 <__assert_fail@plt+0x10890>
   21c10:	b	21c34 <__assert_fail@plt+0x108b0>
   21c14:	movw	r0, #29949	; 0x74fd
   21c18:	movt	r0, #3
   21c1c:	movw	r1, #28968	; 0x7128
   21c20:	movt	r1, #3
   21c24:	movw	r2, #3145	; 0xc49
   21c28:	movw	r3, #30277	; 0x7645
   21c2c:	movt	r3, #3
   21c30:	bl	11384 <__assert_fail@plt>
   21c34:	b	21c38 <__assert_fail@plt+0x108b4>
   21c38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21c3c:	str	r0, [sp, #60]	; 0x3c
   21c40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21c44:	ldr	r1, [sp, #60]	; 0x3c
   21c48:	bl	1b08c <__assert_fail@plt+0x9d08>
   21c4c:	str	r0, [fp, #-36]	; 0xffffffdc
   21c50:	sub	r0, fp, #28
   21c54:	movw	r1, #1
   21c58:	bl	1d714 <__assert_fail@plt+0xc390>
   21c5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21c60:	mvn	r1, #0
   21c64:	add	r0, r0, r1
   21c68:	str	r0, [fp, #-44]	; 0xffffffd4
   21c6c:	cmp	r0, #0
   21c70:	blt	21d3c <__assert_fail@plt+0x109b8>
   21c74:	ldr	r0, [pc, #344]	; 21dd4 <__assert_fail@plt+0x10a50>
   21c78:	ldr	r1, [fp, #-12]
   21c7c:	ldr	r1, [r1, #8]
   21c80:	ldr	r2, [fp, #-44]	; 0xffffffd4
   21c84:	add	r1, r1, r2, lsl #2
   21c88:	ldr	r1, [r1]
   21c8c:	str	r1, [sp, #48]	; 0x30
   21c90:	str	r0, [sp, #44]	; 0x2c
   21c94:	sub	r0, fp, #28
   21c98:	str	r0, [sp, #24]
   21c9c:	ldr	r1, [sp, #24]
   21ca0:	ldr	r2, [sp, #24]
   21ca4:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   21ca8:	ldr	r0, [sp, #48]	; 0x30
   21cac:	ldr	r1, [sp, #44]	; 0x2c
   21cb0:	and	r0, r0, r1
   21cb4:	cmp	r0, #0
   21cb8:	beq	21cd0 <__assert_fail@plt+0x1094c>
   21cbc:	sub	r2, fp, #40	; 0x28
   21cc0:	sub	r0, fp, #28
   21cc4:	str	r0, [sp, #20]
   21cc8:	ldr	r1, [sp, #20]
   21ccc:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   21cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21cd4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21cd8:	cmp	r0, r1
   21cdc:	ble	21d20 <__assert_fail@plt+0x1099c>
   21ce0:	ldr	r1, [fp, #-20]	; 0xffffffec
   21ce4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21ce8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21cec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21cf0:	movw	ip, #0
   21cf4:	str	r0, [sp, #16]
   21cf8:	mov	r0, ip
   21cfc:	ldr	ip, [sp, #16]
   21d00:	str	ip, [sp]
   21d04:	sub	lr, fp, #68	; 0x44
   21d08:	str	lr, [sp, #4]
   21d0c:	bl	22038 <__assert_fail@plt+0x10cb4>
   21d10:	ldr	r0, [fp, #-20]	; 0xffffffec
   21d14:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21d18:	bl	1b08c <__assert_fail@plt+0x9d08>
   21d1c:	str	r0, [fp, #-24]	; 0xffffffe8
   21d20:	ldr	r0, [sp, #44]	; 0x2c
   21d24:	lsr	r0, r0, #1
   21d28:	str	r0, [sp, #44]	; 0x2c
   21d2c:	ldr	r0, [sp, #44]	; 0x2c
   21d30:	cmp	r0, #0
   21d34:	bhi	21c94 <__assert_fail@plt+0x10910>
   21d38:	b	21c5c <__assert_fail@plt+0x108d8>
   21d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21d40:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21d44:	cmp	r0, r1
   21d48:	blt	21d94 <__assert_fail@plt+0x10a10>
   21d4c:	ldr	r0, [sp, #72]	; 0x48
   21d50:	str	r0, [fp, #-68]	; 0xffffffbc
   21d54:	ldr	r1, [fp, #-20]	; 0xffffffec
   21d58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21d5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21d60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21d64:	movw	ip, #0
   21d68:	str	r0, [sp, #12]
   21d6c:	mov	r0, ip
   21d70:	ldr	ip, [sp, #12]
   21d74:	str	ip, [sp]
   21d78:	sub	lr, fp, #68	; 0x44
   21d7c:	str	lr, [sp, #4]
   21d80:	bl	22038 <__assert_fail@plt+0x10cb4>
   21d84:	ldr	r0, [fp, #-20]	; 0xffffffec
   21d88:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21d8c:	bl	1b08c <__assert_fail@plt+0x9d08>
   21d90:	str	r0, [fp, #-24]	; 0xffffffe8
   21d94:	ldr	r0, [sp, #68]	; 0x44
   21d98:	movw	r1, #0
   21d9c:	cmp	r0, r1
   21da0:	beq	21db0 <__assert_fail@plt+0x10a2c>
   21da4:	ldr	r0, [sp, #68]	; 0x44
   21da8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21dac:	bl	1d3c0 <__assert_fail@plt+0xc03c>
   21db0:	sub	r1, fp, #28
   21db4:	ldr	r0, [fp, #-4]
   21db8:	bl	1e9fc <__assert_fail@plt+0xd678>
   21dbc:	sub	r0, fp, #28
   21dc0:	bl	1d384 <__assert_fail@plt+0xc000>
   21dc4:	sub	r0, fp, #40	; 0x28
   21dc8:	bl	1d384 <__assert_fail@plt+0xc000>
   21dcc:	mov	sp, fp
   21dd0:	pop	{fp, pc}
   21dd4:	andhi	r0, r0, r0
   21dd8:	push	{fp, lr}
   21ddc:	mov	fp, sp
   21de0:	sub	sp, sp, #8
   21de4:	str	r0, [sp, #4]
   21de8:	movw	r0, #37248	; 0x9180
   21dec:	movt	r0, #4
   21df0:	ldr	r0, [r0]
   21df4:	ldr	r2, [sp, #4]
   21df8:	movw	r1, #34132	; 0x8554
   21dfc:	movt	r1, #3
   21e00:	bl	11288 <fprintf@plt>
   21e04:	str	r0, [sp]
   21e08:	bl	1136c <abort@plt>
   21e0c:	push	{fp, lr}
   21e10:	mov	fp, sp
   21e14:	sub	sp, sp, #40	; 0x28
   21e18:	str	r0, [fp, #-4]
   21e1c:	str	r1, [fp, #-8]
   21e20:	str	r2, [fp, #-12]
   21e24:	ldr	r0, [fp, #-12]
   21e28:	cmp	r0, #0
   21e2c:	ble	21e34 <__assert_fail@plt+0x10ab0>
   21e30:	b	21e54 <__assert_fail@plt+0x10ad0>
   21e34:	movw	r0, #32348	; 0x7e5c
   21e38:	movt	r0, #3
   21e3c:	movw	r1, #28968	; 0x7128
   21e40:	movt	r1, #3
   21e44:	movw	r2, #932	; 0x3a4
   21e48:	movw	r3, #32637	; 0x7f7d
   21e4c:	movt	r3, #3
   21e50:	bl	11384 <__assert_fail@plt>
   21e54:	ldr	r0, [fp, #-12]
   21e58:	cmp	r0, #1
   21e5c:	bne	21e74 <__assert_fail@plt+0x10af0>
   21e60:	ldr	r0, [fp, #-4]
   21e64:	ldr	r1, [fp, #-8]
   21e68:	ldr	r1, [r1]
   21e6c:	bl	24e60 <__assert_fail@plt+0x13adc>
   21e70:	b	22030 <__assert_fail@plt+0x10cac>
   21e74:	ldr	r0, [fp, #-12]
   21e78:	cmp	r0, #2
   21e7c:	bne	21e9c <__assert_fail@plt+0x10b18>
   21e80:	ldr	r0, [fp, #-4]
   21e84:	ldr	r1, [fp, #-8]
   21e88:	ldr	r1, [r1, #4]
   21e8c:	ldr	r2, [fp, #-8]
   21e90:	ldr	r2, [r2]
   21e94:	bl	26948 <__assert_fail@plt+0x155c4>
   21e98:	b	2202c <__assert_fail@plt+0x10ca8>
   21e9c:	ldr	r0, [fp, #-8]
   21ea0:	ldr	r1, [fp, #-12]
   21ea4:	add	r0, r0, r1, lsl #2
   21ea8:	ldr	r0, [r0, #-4]
   21eac:	str	r0, [sp, #20]
   21eb0:	ldr	r0, [fp, #-8]
   21eb4:	ldr	r1, [fp, #-12]
   21eb8:	sub	r1, r1, #2
   21ebc:	add	r0, r0, r1, lsl #2
   21ec0:	ldr	r0, [r0]
   21ec4:	str	r0, [sp, #16]
   21ec8:	ldr	r0, [sp, #20]
   21ecc:	cmp	r0, #0
   21ed0:	bls	21ed8 <__assert_fail@plt+0x10b54>
   21ed4:	b	21ef8 <__assert_fail@plt+0x10b74>
   21ed8:	movw	r0, #32708	; 0x7fc4
   21edc:	movt	r0, #3
   21ee0:	movw	r1, #28968	; 0x7128
   21ee4:	movt	r1, #3
   21ee8:	movw	r2, #945	; 0x3b1
   21eec:	movw	r3, #32637	; 0x7f7d
   21ef0:	movt	r3, #3
   21ef4:	bl	11384 <__assert_fail@plt>
   21ef8:	b	21efc <__assert_fail@plt+0x10b78>
   21efc:	ldr	r0, [sp, #20]
   21f00:	str	r0, [sp, #12]
   21f04:	movw	r0, #0
   21f08:	str	r0, [sp, #8]
   21f0c:	movw	r0, #8
   21f10:	str	r0, [sp, #4]
   21f14:	ldr	r0, [sp, #4]
   21f18:	movw	r1, #32
   21f1c:	cmp	r1, r0
   21f20:	bls	21f5c <__assert_fail@plt+0x10bd8>
   21f24:	b	21f28 <__assert_fail@plt+0x10ba4>
   21f28:	ldr	r0, [sp, #12]
   21f2c:	and	r0, r0, #-16777216	; 0xff000000
   21f30:	cmp	r0, #0
   21f34:	bne	21f58 <__assert_fail@plt+0x10bd4>
   21f38:	ldr	r0, [sp, #4]
   21f3c:	ldr	r1, [sp, #12]
   21f40:	lsl	r0, r1, r0
   21f44:	str	r0, [sp, #12]
   21f48:	ldr	r0, [sp, #8]
   21f4c:	add	r0, r0, #8
   21f50:	str	r0, [sp, #8]
   21f54:	b	21f28 <__assert_fail@plt+0x10ba4>
   21f58:	b	21f5c <__assert_fail@plt+0x10bd8>
   21f5c:	b	21f60 <__assert_fail@plt+0x10bdc>
   21f60:	ldr	r0, [sp, #12]
   21f64:	and	r0, r0, #-2147483648	; 0x80000000
   21f68:	cmp	r0, #0
   21f6c:	bne	21f8c <__assert_fail@plt+0x10c08>
   21f70:	ldr	r0, [sp, #12]
   21f74:	lsl	r0, r0, #1
   21f78:	str	r0, [sp, #12]
   21f7c:	ldr	r0, [sp, #8]
   21f80:	add	r0, r0, #1
   21f84:	str	r0, [sp, #8]
   21f88:	b	21f60 <__assert_fail@plt+0x10bdc>
   21f8c:	ldr	r0, [sp, #8]
   21f90:	str	r0, [fp, #-16]
   21f94:	ldr	r0, [fp, #-16]
   21f98:	ldr	r1, [fp, #-4]
   21f9c:	str	r0, [r1]
   21fa0:	ldr	r0, [fp, #-16]
   21fa4:	cmp	r0, #0
   21fa8:	bls	22000 <__assert_fail@plt+0x10c7c>
   21fac:	ldr	r0, [sp, #20]
   21fb0:	ldr	r1, [fp, #-16]
   21fb4:	lsl	r0, r0, r1
   21fb8:	ldr	r2, [sp, #16]
   21fbc:	rsb	r1, r1, #32
   21fc0:	orr	r0, r0, r2, lsr r1
   21fc4:	str	r0, [sp, #20]
   21fc8:	ldr	r0, [sp, #16]
   21fcc:	ldr	r1, [fp, #-16]
   21fd0:	lsl	r0, r0, r1
   21fd4:	ldr	r1, [fp, #-8]
   21fd8:	ldr	r2, [fp, #-12]
   21fdc:	sub	r2, r2, #3
   21fe0:	add	r1, r1, r2, lsl #2
   21fe4:	ldr	r1, [r1]
   21fe8:	ldr	r2, [fp, #-16]
   21fec:	movw	r3, #32
   21ff0:	sub	r2, r3, r2
   21ff4:	lsr	r1, r1, r2
   21ff8:	orr	r0, r0, r1
   21ffc:	str	r0, [sp, #16]
   22000:	ldr	r0, [sp, #20]
   22004:	ldr	r1, [fp, #-4]
   22008:	str	r0, [r1, #4]
   2200c:	ldr	r0, [sp, #16]
   22010:	ldr	r1, [fp, #-4]
   22014:	str	r0, [r1, #8]
   22018:	ldr	r0, [sp, #20]
   2201c:	ldr	r1, [sp, #16]
   22020:	bl	1c530 <__assert_fail@plt+0xb1ac>
   22024:	ldr	r1, [fp, #-4]
   22028:	str	r0, [r1, #12]
   2202c:	b	22030 <__assert_fail@plt+0x10cac>
   22030:	mov	sp, fp
   22034:	pop	{fp, pc}
   22038:	push	{r4, sl, fp, lr}
   2203c:	add	fp, sp, #8
   22040:	sub	sp, sp, #40	; 0x28
   22044:	ldr	ip, [fp, #12]
   22048:	ldr	lr, [fp, #8]
   2204c:	str	r0, [fp, #-12]
   22050:	str	r1, [fp, #-16]
   22054:	str	r2, [fp, #-20]	; 0xffffffec
   22058:	str	r3, [sp, #24]
   2205c:	ldr	r0, [fp, #8]
   22060:	cmp	r0, #0
   22064:	ble	2206c <__assert_fail@plt+0x10ce8>
   22068:	b	2208c <__assert_fail@plt+0x10d08>
   2206c:	movw	r0, #32348	; 0x7e5c
   22070:	movt	r0, #3
   22074:	movw	r1, #28968	; 0x7128
   22078:	movt	r1, #3
   2207c:	movw	r2, #1113	; 0x459
   22080:	movw	r3, #32788	; 0x8014
   22084:	movt	r3, #3
   22088:	bl	11384 <__assert_fail@plt>
   2208c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22090:	ldr	r1, [fp, #8]
   22094:	cmp	r0, r1
   22098:	blt	220a0 <__assert_fail@plt+0x10d1c>
   2209c:	b	220c0 <__assert_fail@plt+0x10d3c>
   220a0:	movw	r0, #32420	; 0x7ea4
   220a4:	movt	r0, #3
   220a8:	movw	r1, #28968	; 0x7128
   220ac:	movt	r1, #3
   220b0:	movw	r2, #1114	; 0x45a
   220b4:	movw	r3, #32788	; 0x8014
   220b8:	movt	r3, #3
   220bc:	bl	11384 <__assert_fail@plt>
   220c0:	ldr	r0, [fp, #8]
   220c4:	cmp	r0, #1
   220c8:	bne	220ec <__assert_fail@plt+0x10d68>
   220cc:	ldr	r0, [fp, #-12]
   220d0:	ldr	r1, [fp, #-16]
   220d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   220d8:	ldr	r3, [fp, #12]
   220dc:	bl	24f80 <__assert_fail@plt+0x13bfc>
   220e0:	ldr	r1, [fp, #-16]
   220e4:	str	r0, [r1]
   220e8:	b	222ac <__assert_fail@plt+0x10f28>
   220ec:	ldr	r0, [fp, #8]
   220f0:	cmp	r0, #2
   220f4:	bne	22110 <__assert_fail@plt+0x10d8c>
   220f8:	ldr	r0, [fp, #-12]
   220fc:	ldr	r1, [fp, #-16]
   22100:	ldr	r2, [fp, #-20]	; 0xffffffec
   22104:	ldr	r3, [fp, #12]
   22108:	bl	26ab0 <__assert_fail@plt+0x1572c>
   2210c:	b	222a8 <__assert_fail@plt+0x10f24>
   22110:	ldr	r0, [fp, #12]
   22114:	ldr	r0, [r0, #4]
   22118:	ldr	r1, [sp, #24]
   2211c:	ldr	r2, [fp, #8]
   22120:	sub	r2, r2, #1
   22124:	add	r1, r1, r2, lsl #2
   22128:	ldr	r1, [r1]
   2212c:	cmp	r0, r1
   22130:	bne	22138 <__assert_fail@plt+0x10db4>
   22134:	b	22158 <__assert_fail@plt+0x10dd4>
   22138:	movw	r0, #32892	; 0x807c
   2213c:	movt	r0, #3
   22140:	movw	r1, #28968	; 0x7128
   22144:	movt	r1, #3
   22148:	movw	r2, #1125	; 0x465
   2214c:	movw	r3, #32788	; 0x8014
   22150:	movt	r3, #3
   22154:	bl	11384 <__assert_fail@plt>
   22158:	ldr	r0, [fp, #12]
   2215c:	ldr	r0, [r0, #8]
   22160:	ldr	r1, [sp, #24]
   22164:	ldr	r2, [fp, #8]
   22168:	sub	r2, r2, #2
   2216c:	add	r1, r1, r2, lsl #2
   22170:	ldr	r1, [r1]
   22174:	cmp	r0, r1
   22178:	bne	22180 <__assert_fail@plt+0x10dfc>
   2217c:	b	221a0 <__assert_fail@plt+0x10e1c>
   22180:	movw	r0, #32912	; 0x8090
   22184:	movt	r0, #3
   22188:	movw	r1, #28968	; 0x7128
   2218c:	movt	r1, #3
   22190:	movw	r2, #1126	; 0x466
   22194:	movw	r3, #32788	; 0x8014
   22198:	movt	r3, #3
   2219c:	bl	11384 <__assert_fail@plt>
   221a0:	ldr	r0, [fp, #12]
   221a4:	ldr	r0, [r0, #4]
   221a8:	and	r0, r0, #-2147483648	; 0x80000000
   221ac:	cmp	r0, #0
   221b0:	beq	221b8 <__assert_fail@plt+0x10e34>
   221b4:	b	221d8 <__assert_fail@plt+0x10e54>
   221b8:	movw	r0, #32932	; 0x80a4
   221bc:	movt	r0, #3
   221c0:	movw	r1, #28968	; 0x7128
   221c4:	movt	r1, #3
   221c8:	movw	r2, #1127	; 0x467
   221cc:	movw	r3, #32788	; 0x8014
   221d0:	movt	r3, #3
   221d4:	bl	11384 <__assert_fail@plt>
   221d8:	ldr	r0, [fp, #12]
   221dc:	ldr	r0, [r0]
   221e0:	str	r0, [sp, #16]
   221e4:	ldr	r0, [sp, #16]
   221e8:	cmp	r0, #0
   221ec:	bls	2220c <__assert_fail@plt+0x10e88>
   221f0:	ldr	r0, [fp, #-16]
   221f4:	ldr	r1, [fp, #-16]
   221f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   221fc:	ldr	r3, [sp, #16]
   22200:	bl	1be0c <__assert_fail@plt+0xaa88>
   22204:	str	r0, [sp, #20]
   22208:	b	22214 <__assert_fail@plt+0x10e90>
   2220c:	movw	r0, #0
   22210:	str	r0, [sp, #20]
   22214:	ldr	r0, [fp, #-12]
   22218:	ldr	r1, [fp, #-16]
   2221c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22220:	ldr	r3, [sp, #20]
   22224:	ldr	ip, [sp, #24]
   22228:	ldr	lr, [fp, #8]
   2222c:	ldr	r4, [fp, #12]
   22230:	ldr	r4, [r4, #12]
   22234:	str	ip, [sp]
   22238:	str	lr, [sp, #4]
   2223c:	str	r4, [sp, #8]
   22240:	bl	2708c <__assert_fail@plt+0x15d08>
   22244:	ldr	r0, [sp, #16]
   22248:	cmp	r0, #0
   2224c:	bls	222a4 <__assert_fail@plt+0x10f20>
   22250:	b	22254 <__assert_fail@plt+0x10ed0>
   22254:	ldr	r0, [fp, #-16]
   22258:	ldr	r1, [fp, #-16]
   2225c:	ldr	r2, [fp, #8]
   22260:	ldr	r3, [sp, #16]
   22264:	bl	1bfbc <__assert_fail@plt+0xac38>
   22268:	str	r0, [sp, #12]
   2226c:	ldr	r0, [sp, #12]
   22270:	cmp	r0, #0
   22274:	bne	2227c <__assert_fail@plt+0x10ef8>
   22278:	b	2229c <__assert_fail@plt+0x10f18>
   2227c:	movw	r0, #29949	; 0x74fd
   22280:	movt	r0, #3
   22284:	movw	r1, #28968	; 0x7128
   22288:	movt	r1, #3
   2228c:	movw	r2, #1138	; 0x472
   22290:	movw	r3, #32788	; 0x8014
   22294:	movt	r3, #3
   22298:	bl	11384 <__assert_fail@plt>
   2229c:	b	222a0 <__assert_fail@plt+0x10f1c>
   222a0:	b	222a4 <__assert_fail@plt+0x10f20>
   222a4:	b	222a8 <__assert_fail@plt+0x10f24>
   222a8:	b	222ac <__assert_fail@plt+0x10f28>
   222ac:	sub	sp, fp, #8
   222b0:	pop	{r4, sl, fp, pc}
   222b4:	push	{fp, lr}
   222b8:	mov	fp, sp
   222bc:	sub	sp, sp, #32
   222c0:	add	ip, sp, #4
   222c4:	str	r0, [fp, #-4]
   222c8:	str	r1, [fp, #-8]
   222cc:	str	r2, [fp, #-12]
   222d0:	str	r3, [sp, #16]
   222d4:	ldr	r1, [fp, #-12]
   222d8:	mov	r0, ip
   222dc:	bl	1d714 <__assert_fail@plt+0xc390>
   222e0:	add	r2, sp, #4
   222e4:	ldr	r0, [fp, #-4]
   222e8:	ldr	r1, [fp, #-8]
   222ec:	ldr	r3, [sp, #16]
   222f0:	bl	2199c <__assert_fail@plt+0x10618>
   222f4:	add	r0, sp, #4
   222f8:	bl	1d384 <__assert_fail@plt+0xc000>
   222fc:	mov	sp, fp
   22300:	pop	{fp, pc}
   22304:	push	{fp, lr}
   22308:	mov	fp, sp
   2230c:	sub	sp, sp, #88	; 0x58
   22310:	str	r0, [fp, #-4]
   22314:	str	r1, [fp, #-8]
   22318:	str	r2, [fp, #-12]
   2231c:	str	r3, [fp, #-16]
   22320:	ldr	r0, [fp, #-12]
   22324:	ldr	r0, [r0, #4]
   22328:	cmp	r0, #0
   2232c:	movw	r0, #0
   22330:	movlt	r0, #1
   22334:	and	r0, r0, #1
   22338:	str	r0, [fp, #-20]	; 0xffffffec
   2233c:	ldr	r0, [fp, #-16]
   22340:	mvn	r1, #0
   22344:	eor	r0, r0, r1
   22348:	ldr	r1, [fp, #-20]	; 0xffffffec
   2234c:	and	r0, r0, r1
   22350:	cmp	r0, #0
   22354:	beq	22364 <__assert_fail@plt+0x10fe0>
   22358:	movw	r0, #30426	; 0x76da
   2235c:	movt	r0, #3
   22360:	bl	21dd8 <__assert_fail@plt+0x10a54>
   22364:	ldr	r0, [fp, #-16]
   22368:	cmp	r0, #0
   2236c:	bne	2237c <__assert_fail@plt+0x10ff8>
   22370:	movw	r0, #30474	; 0x770a
   22374:	movt	r0, #3
   22378:	bl	21dd8 <__assert_fail@plt+0x10a54>
   2237c:	ldr	r0, [fp, #-12]
   22380:	movw	r1, #1
   22384:	bl	1da00 <__assert_fail@plt+0xc67c>
   22388:	cmp	r0, #0
   2238c:	bgt	223cc <__assert_fail@plt+0x11048>
   22390:	ldr	r0, [fp, #-4]
   22394:	movw	r1, #0
   22398:	cmp	r0, r1
   2239c:	beq	223ac <__assert_fail@plt+0x11028>
   223a0:	ldr	r0, [fp, #-4]
   223a4:	ldr	r1, [fp, #-12]
   223a8:	bl	1d61c <__assert_fail@plt+0xc298>
   223ac:	ldr	r0, [fp, #-8]
   223b0:	movw	r1, #0
   223b4:	cmp	r0, r1
   223b8:	beq	223c8 <__assert_fail@plt+0x11044>
   223bc:	ldr	r0, [fp, #-8]
   223c0:	movw	r1, #0
   223c4:	str	r1, [r0, #4]
   223c8:	b	22590 <__assert_fail@plt+0x1120c>
   223cc:	add	r0, sp, #40	; 0x28
   223d0:	bl	1d2ac <__assert_fail@plt+0xbf28>
   223d4:	sub	r0, fp, #36	; 0x24
   223d8:	bl	1d2ac <__assert_fail@plt+0xbf28>
   223dc:	ldr	r0, [fp, #-12]
   223e0:	movw	r1, #2
   223e4:	bl	22598 <__assert_fail@plt+0x11214>
   223e8:	sub	r1, fp, #36	; 0x24
   223ec:	sub	r0, r0, #1
   223f0:	ldr	r2, [fp, #-16]
   223f4:	udiv	r0, r0, r2
   223f8:	add	r0, r0, #1
   223fc:	str	r0, [fp, #-24]	; 0xffffffe8
   22400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22404:	str	r0, [sp, #24]
   22408:	mov	r0, r1
   2240c:	ldr	r1, [sp, #24]
   22410:	bl	21604 <__assert_fail@plt+0x10280>
   22414:	ldr	r0, [fp, #-16]
   22418:	cmp	r0, #2
   2241c:	bne	22480 <__assert_fail@plt+0x110fc>
   22420:	b	22424 <__assert_fail@plt+0x110a0>
   22424:	sub	r1, fp, #36	; 0x24
   22428:	add	r0, sp, #40	; 0x28
   2242c:	bl	1e9fc <__assert_fail@plt+0xd678>
   22430:	add	r2, sp, #40	; 0x28
   22434:	sub	r0, fp, #36	; 0x24
   22438:	ldr	r1, [fp, #-12]
   2243c:	bl	1fbc8 <__assert_fail@plt+0xe844>
   22440:	add	r2, sp, #40	; 0x28
   22444:	sub	r0, fp, #36	; 0x24
   22448:	str	r0, [sp, #20]
   2244c:	ldr	r1, [sp, #20]
   22450:	bl	1ead8 <__assert_fail@plt+0xd754>
   22454:	sub	r0, fp, #36	; 0x24
   22458:	str	r0, [sp, #16]
   2245c:	ldr	r1, [sp, #16]
   22460:	movw	r2, #1
   22464:	bl	1ffd8 <__assert_fail@plt+0xec54>
   22468:	add	r1, sp, #40	; 0x28
   2246c:	sub	r0, fp, #36	; 0x24
   22470:	bl	1e81c <__assert_fail@plt+0xd498>
   22474:	cmp	r0, #0
   22478:	blt	22424 <__assert_fail@plt+0x110a0>
   2247c:	b	22534 <__assert_fail@plt+0x111b0>
   22480:	add	r0, sp, #28
   22484:	bl	1d2ac <__assert_fail@plt+0xbf28>
   22488:	ldr	r0, [fp, #-20]	; 0xffffffec
   2248c:	cmp	r0, #0
   22490:	beq	224a4 <__assert_fail@plt+0x11120>
   22494:	sub	r0, fp, #36	; 0x24
   22498:	str	r0, [sp, #12]
   2249c:	ldr	r1, [sp, #12]
   224a0:	bl	1e9bc <__assert_fail@plt+0xd638>
   224a4:	b	224a8 <__assert_fail@plt+0x11124>
   224a8:	sub	r1, fp, #36	; 0x24
   224ac:	add	r0, sp, #40	; 0x28
   224b0:	bl	1e9fc <__assert_fail@plt+0xd678>
   224b4:	add	r1, sp, #40	; 0x28
   224b8:	sub	r0, fp, #36	; 0x24
   224bc:	ldr	r2, [fp, #-16]
   224c0:	sub	r2, r2, #1
   224c4:	bl	218b0 <__assert_fail@plt+0x1052c>
   224c8:	sub	r0, fp, #36	; 0x24
   224cc:	ldr	r1, [fp, #-12]
   224d0:	str	r0, [sp, #8]
   224d4:	ldr	r2, [sp, #8]
   224d8:	bl	1fbc8 <__assert_fail@plt+0xe844>
   224dc:	add	r1, sp, #40	; 0x28
   224e0:	add	r0, sp, #28
   224e4:	ldr	r2, [fp, #-16]
   224e8:	sub	r2, r2, #1
   224ec:	bl	1f0ac <__assert_fail@plt+0xdd28>
   224f0:	add	r2, sp, #28
   224f4:	sub	r0, fp, #36	; 0x24
   224f8:	str	r0, [sp, #4]
   224fc:	ldr	r1, [sp, #4]
   22500:	bl	1ead8 <__assert_fail@plt+0xd754>
   22504:	sub	r0, fp, #36	; 0x24
   22508:	ldr	r2, [fp, #-16]
   2250c:	str	r0, [sp]
   22510:	ldr	r1, [sp]
   22514:	bl	2073c <__assert_fail@plt+0xf3b8>
   22518:	add	r1, sp, #40	; 0x28
   2251c:	sub	r0, fp, #36	; 0x24
   22520:	bl	1e81c <__assert_fail@plt+0xd498>
   22524:	cmp	r0, #0
   22528:	blt	224a8 <__assert_fail@plt+0x11124>
   2252c:	add	r0, sp, #28
   22530:	bl	1d384 <__assert_fail@plt+0xc000>
   22534:	ldr	r0, [fp, #-8]
   22538:	movw	r1, #0
   2253c:	cmp	r0, r1
   22540:	beq	22564 <__assert_fail@plt+0x111e0>
   22544:	add	r1, sp, #40	; 0x28
   22548:	sub	r0, fp, #36	; 0x24
   2254c:	ldr	r2, [fp, #-16]
   22550:	bl	218b0 <__assert_fail@plt+0x1052c>
   22554:	sub	r2, fp, #36	; 0x24
   22558:	ldr	r0, [fp, #-8]
   2255c:	ldr	r1, [fp, #-12]
   22560:	bl	1efa0 <__assert_fail@plt+0xdc1c>
   22564:	ldr	r0, [fp, #-4]
   22568:	movw	r1, #0
   2256c:	cmp	r0, r1
   22570:	beq	22580 <__assert_fail@plt+0x111fc>
   22574:	add	r1, sp, #40	; 0x28
   22578:	ldr	r0, [fp, #-4]
   2257c:	bl	1e9fc <__assert_fail@plt+0xd678>
   22580:	add	r0, sp, #40	; 0x28
   22584:	bl	1d384 <__assert_fail@plt+0xc000>
   22588:	sub	r0, fp, #36	; 0x24
   2258c:	bl	1d384 <__assert_fail@plt+0xc000>
   22590:	mov	sp, fp
   22594:	pop	{fp, pc}
   22598:	push	{fp, lr}
   2259c:	mov	fp, sp
   225a0:	sub	sp, sp, #72	; 0x48
   225a4:	str	r0, [fp, #-8]
   225a8:	str	r1, [fp, #-12]
   225ac:	ldr	r0, [fp, #-12]
   225b0:	cmp	r0, #2
   225b4:	blt	225bc <__assert_fail@plt+0x11238>
   225b8:	b	225dc <__assert_fail@plt+0x11258>
   225bc:	movw	r0, #31020	; 0x792c
   225c0:	movt	r0, #3
   225c4:	movw	r1, #28968	; 0x7128
   225c8:	movt	r1, #3
   225cc:	movw	r2, #4191	; 0x105f
   225d0:	movw	r3, #31030	; 0x7936
   225d4:	movt	r3, #3
   225d8:	bl	11384 <__assert_fail@plt>
   225dc:	ldr	r0, [fp, #-12]
   225e0:	cmp	r0, #62	; 0x3e
   225e4:	bgt	225ec <__assert_fail@plt+0x11268>
   225e8:	b	2260c <__assert_fail@plt+0x11288>
   225ec:	movw	r0, #31079	; 0x7967
   225f0:	movt	r0, #3
   225f4:	movw	r1, #28968	; 0x7128
   225f8:	movt	r1, #3
   225fc:	movw	r2, #4192	; 0x1060
   22600:	movw	r3, #31030	; 0x7936
   22604:	movt	r3, #3
   22608:	bl	11384 <__assert_fail@plt>
   2260c:	ldr	r0, [fp, #-8]
   22610:	ldr	r0, [r0, #4]
   22614:	cmp	r0, #0
   22618:	blt	2262c <__assert_fail@plt+0x112a8>
   2261c:	ldr	r0, [fp, #-8]
   22620:	ldr	r0, [r0, #4]
   22624:	str	r0, [sp, #16]
   22628:	b	22640 <__assert_fail@plt+0x112bc>
   2262c:	ldr	r0, [fp, #-8]
   22630:	ldr	r0, [r0, #4]
   22634:	movw	r1, #0
   22638:	sub	r0, r1, r0
   2263c:	str	r0, [sp, #16]
   22640:	ldr	r0, [sp, #16]
   22644:	str	r0, [fp, #-16]
   22648:	ldr	r0, [fp, #-16]
   2264c:	cmp	r0, #0
   22650:	bne	22660 <__assert_fail@plt+0x112dc>
   22654:	movw	r0, #1
   22658:	str	r0, [fp, #-4]
   2265c:	b	22844 <__assert_fail@plt+0x114c0>
   22660:	ldr	r0, [fp, #-8]
   22664:	ldr	r0, [r0, #8]
   22668:	str	r0, [fp, #-24]	; 0xffffffe8
   2266c:	ldr	r0, [fp, #-16]
   22670:	sub	r0, r0, #1
   22674:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22678:	ldr	r1, [r1, r0, lsl #2]
   2267c:	str	r0, [sp, #12]
   22680:	mov	r0, r1
   22684:	bl	24d70 <__assert_fail@plt+0x139ec>
   22688:	ldr	r1, [sp, #12]
   2268c:	add	r0, r0, r1, lsl #5
   22690:	str	r0, [fp, #-32]	; 0xffffffe0
   22694:	ldr	r0, [fp, #-12]
   22698:	sub	r0, r0, #2
   2269c:	cmp	r0, #30
   226a0:	str	r0, [sp, #8]
   226a4:	bhi	22798 <__assert_fail@plt+0x11414>
   226a8:	add	r0, pc, #8
   226ac:	ldr	r1, [sp, #8]
   226b0:	ldr	r0, [r0, r1, lsl #2]
   226b4:	mov	pc, r0
   226b8:	andeq	r2, r2, r4, lsr r7
   226bc:	muleq	r2, r8, r7
   226c0:	andeq	r2, r2, r0, asr #14
   226c4:	muleq	r2, r8, r7
   226c8:	muleq	r2, r8, r7
   226cc:	muleq	r2, r8, r7
   226d0:	andeq	r2, r2, r4, asr r7
   226d4:	muleq	r2, r8, r7
   226d8:	muleq	r2, r8, r7
   226dc:	muleq	r2, r8, r7
   226e0:	muleq	r2, r8, r7
   226e4:	muleq	r2, r8, r7
   226e8:	muleq	r2, r8, r7
   226ec:	muleq	r2, r8, r7
   226f0:	andeq	r2, r2, ip, ror #14
   226f4:	muleq	r2, r8, r7
   226f8:	muleq	r2, r8, r7
   226fc:	muleq	r2, r8, r7
   22700:	muleq	r2, r8, r7
   22704:	muleq	r2, r8, r7
   22708:	muleq	r2, r8, r7
   2270c:	muleq	r2, r8, r7
   22710:	muleq	r2, r8, r7
   22714:	muleq	r2, r8, r7
   22718:	muleq	r2, r8, r7
   2271c:	muleq	r2, r8, r7
   22720:	muleq	r2, r8, r7
   22724:	muleq	r2, r8, r7
   22728:	muleq	r2, r8, r7
   2272c:	muleq	r2, r8, r7
   22730:	andeq	r2, r2, r0, lsl #15
   22734:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22738:	str	r0, [fp, #-4]
   2273c:	b	22844 <__assert_fail@plt+0x114c0>
   22740:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22744:	add	r0, r0, #1
   22748:	lsr	r0, r0, #1
   2274c:	str	r0, [fp, #-4]
   22750:	b	22844 <__assert_fail@plt+0x114c0>
   22754:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22758:	add	r0, r0, #2
   2275c:	movw	r1, #3
   22760:	udiv	r0, r0, r1
   22764:	str	r0, [fp, #-4]
   22768:	b	22844 <__assert_fail@plt+0x114c0>
   2276c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22770:	add	r0, r0, #3
   22774:	lsr	r0, r0, #2
   22778:	str	r0, [fp, #-4]
   2277c:	b	22844 <__assert_fail@plt+0x114c0>
   22780:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22784:	add	r0, r0, #4
   22788:	movw	r1, #5
   2278c:	udiv	r0, r0, r1
   22790:	str	r0, [fp, #-4]
   22794:	b	22844 <__assert_fail@plt+0x114c0>
   22798:	ldr	r0, [fp, #-16]
   2279c:	bl	1d348 <__assert_fail@plt+0xbfc4>
   227a0:	str	r0, [fp, #-28]	; 0xffffffe4
   227a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   227a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   227ac:	ldr	r2, [fp, #-16]
   227b0:	bl	1af18 <__assert_fail@plt+0x9b94>
   227b4:	ldr	r1, [fp, #-12]
   227b8:	add	r0, sp, #24
   227bc:	bl	24e60 <__assert_fail@plt+0x13adc>
   227c0:	ldr	r0, [fp, #-16]
   227c4:	str	r0, [fp, #-20]	; 0xffffffec
   227c8:	movw	r0, #0
   227cc:	str	r0, [sp, #20]
   227d0:	ldr	r0, [sp, #20]
   227d4:	add	r0, r0, #1
   227d8:	str	r0, [sp, #20]
   227dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   227e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   227e4:	add	r3, sp, #24
   227e8:	str	r0, [sp, #4]
   227ec:	ldr	r1, [sp, #4]
   227f0:	bl	24f80 <__assert_fail@plt+0x13bfc>
   227f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   227f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   227fc:	sub	r2, r2, #1
   22800:	add	r1, r1, r2, lsl #2
   22804:	ldr	r1, [r1]
   22808:	cmp	r1, #0
   2280c:	movw	r1, #0
   22810:	moveq	r1, #1
   22814:	and	r1, r1, #1
   22818:	ldr	r2, [fp, #-20]	; 0xffffffec
   2281c:	sub	r1, r2, r1
   22820:	str	r1, [fp, #-20]	; 0xffffffec
   22824:	ldr	r0, [fp, #-20]	; 0xffffffec
   22828:	cmp	r0, #0
   2282c:	bgt	227d0 <__assert_fail@plt+0x1144c>
   22830:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22834:	ldr	r1, [fp, #-16]
   22838:	bl	1d3c0 <__assert_fail@plt+0xc03c>
   2283c:	ldr	r0, [sp, #20]
   22840:	str	r0, [fp, #-4]
   22844:	ldr	r0, [fp, #-4]
   22848:	mov	sp, fp
   2284c:	pop	{fp, pc}
   22850:	push	{fp, lr}
   22854:	mov	fp, sp
   22858:	sub	sp, sp, #32
   2285c:	add	r3, sp, #4
   22860:	str	r0, [fp, #-4]
   22864:	str	r1, [fp, #-8]
   22868:	str	r2, [fp, #-12]
   2286c:	mov	r0, r3
   22870:	bl	1d2ac <__assert_fail@plt+0xbf28>
   22874:	add	r1, sp, #4
   22878:	ldr	r0, [fp, #-4]
   2287c:	ldr	r2, [fp, #-8]
   22880:	ldr	r3, [fp, #-12]
   22884:	bl	22304 <__assert_fail@plt+0x10f80>
   22888:	add	r0, sp, #4
   2288c:	ldr	r1, [sp, #8]
   22890:	cmp	r1, #0
   22894:	movw	r1, #0
   22898:	moveq	r1, #1
   2289c:	and	r1, r1, #1
   228a0:	str	r1, [sp, #16]
   228a4:	bl	1d384 <__assert_fail@plt+0xc000>
   228a8:	ldr	r0, [sp, #16]
   228ac:	mov	sp, fp
   228b0:	pop	{fp, pc}
   228b4:	push	{fp, lr}
   228b8:	mov	fp, sp
   228bc:	sub	sp, sp, #16
   228c0:	str	r0, [fp, #-4]
   228c4:	str	r1, [sp, #8]
   228c8:	str	r2, [sp, #4]
   228cc:	ldr	r0, [fp, #-4]
   228d0:	ldr	r1, [sp, #8]
   228d4:	ldr	r2, [sp, #4]
   228d8:	movw	r3, #2
   228dc:	bl	22304 <__assert_fail@plt+0x10f80>
   228e0:	mov	sp, fp
   228e4:	pop	{fp, pc}
   228e8:	push	{fp, lr}
   228ec:	mov	fp, sp
   228f0:	sub	sp, sp, #8
   228f4:	str	r0, [sp, #4]
   228f8:	str	r1, [sp]
   228fc:	ldr	r0, [sp, #4]
   22900:	ldr	r2, [sp]
   22904:	movw	r1, #0
   22908:	movw	r3, #2
   2290c:	bl	22304 <__assert_fail@plt+0x10f80>
   22910:	mov	sp, fp
   22914:	pop	{fp, pc}
   22918:	push	{fp, lr}
   2291c:	mov	fp, sp
   22920:	sub	sp, sp, #8
   22924:	str	r0, [sp]
   22928:	ldr	r0, [sp]
   2292c:	ldr	r0, [r0, #4]
   22930:	cmp	r0, #0
   22934:	bgt	22958 <__assert_fail@plt+0x115d4>
   22938:	ldr	r0, [sp]
   2293c:	ldr	r0, [r0, #4]
   22940:	cmp	r0, #0
   22944:	movw	r0, #0
   22948:	moveq	r0, #1
   2294c:	and	r0, r0, #1
   22950:	str	r0, [sp, #4]
   22954:	b	2296c <__assert_fail@plt+0x115e8>
   22958:	ldr	r1, [sp]
   2295c:	movw	r0, #0
   22960:	movw	r2, #2
   22964:	bl	22850 <__assert_fail@plt+0x114cc>
   22968:	str	r0, [sp, #4]
   2296c:	ldr	r0, [sp, #4]
   22970:	mov	sp, fp
   22974:	pop	{fp, pc}
   22978:	push	{fp, lr}
   2297c:	mov	fp, sp
   22980:	sub	sp, sp, #24
   22984:	str	r0, [fp, #-4]
   22988:	str	r1, [fp, #-8]
   2298c:	ldr	r0, [fp, #-8]
   22990:	cmp	r0, #0
   22994:	ble	2299c <__assert_fail@plt+0x11618>
   22998:	b	229bc <__assert_fail@plt+0x11638>
   2299c:	movw	r0, #32349	; 0x7e5d
   229a0:	movt	r0, #3
   229a4:	movw	r1, #28968	; 0x7128
   229a8:	movt	r1, #3
   229ac:	movw	r2, #3302	; 0xce6
   229b0:	movw	r3, #30500	; 0x7724
   229b4:	movt	r3, #3
   229b8:	bl	11384 <__assert_fail@plt>
   229bc:	ldr	r0, [fp, #-4]
   229c0:	ldr	r1, [fp, #-8]
   229c4:	sub	r1, r1, #1
   229c8:	add	r0, r0, r1, lsl #2
   229cc:	ldr	r0, [r0]
   229d0:	cmp	r0, #0
   229d4:	beq	229dc <__assert_fail@plt+0x11658>
   229d8:	b	229fc <__assert_fail@plt+0x11678>
   229dc:	movw	r0, #30547	; 0x7753
   229e0:	movt	r0, #3
   229e4:	movw	r1, #28968	; 0x7128
   229e8:	movt	r1, #3
   229ec:	movw	r2, #3303	; 0xce7
   229f0:	movw	r3, #30500	; 0x7724
   229f4:	movt	r3, #3
   229f8:	bl	11384 <__assert_fail@plt>
   229fc:	add	r0, sp, #4
   22a00:	ldr	r1, [fp, #-4]
   22a04:	ldr	r2, [fp, #-8]
   22a08:	bl	1defc <__assert_fail@plt+0xcb78>
   22a0c:	movw	r1, #0
   22a10:	str	r0, [sp]
   22a14:	mov	r0, r1
   22a18:	ldr	r1, [sp]
   22a1c:	movw	r2, #2
   22a20:	bl	22850 <__assert_fail@plt+0x114cc>
   22a24:	mov	sp, fp
   22a28:	pop	{fp, pc}
   22a2c:	push	{fp, lr}
   22a30:	mov	fp, sp
   22a34:	sub	sp, sp, #72	; 0x48
   22a38:	str	r0, [fp, #-4]
   22a3c:	str	r1, [fp, #-8]
   22a40:	str	r2, [fp, #-12]
   22a44:	str	r3, [fp, #-16]
   22a48:	ldr	r0, [fp, #-16]
   22a4c:	cmp	r0, #0
   22a50:	ble	22a58 <__assert_fail@plt+0x116d4>
   22a54:	b	22a78 <__assert_fail@plt+0x116f4>
   22a58:	movw	r0, #32349	; 0x7e5d
   22a5c:	movt	r0, #3
   22a60:	movw	r1, #28968	; 0x7128
   22a64:	movt	r1, #3
   22a68:	movw	r2, #3313	; 0xcf1
   22a6c:	movw	r3, #30560	; 0x7760
   22a70:	movt	r3, #3
   22a74:	bl	11384 <__assert_fail@plt>
   22a78:	ldr	r0, [fp, #-12]
   22a7c:	ldr	r1, [fp, #-16]
   22a80:	sub	r1, r1, #1
   22a84:	add	r0, r0, r1, lsl #2
   22a88:	ldr	r0, [r0]
   22a8c:	cmp	r0, #0
   22a90:	beq	22a98 <__assert_fail@plt+0x11714>
   22a94:	b	22ab8 <__assert_fail@plt+0x11734>
   22a98:	movw	r0, #30547	; 0x7753
   22a9c:	movt	r0, #3
   22aa0:	movw	r1, #28968	; 0x7128
   22aa4:	movt	r1, #3
   22aa8:	movw	r2, #3314	; 0xcf2
   22aac:	movw	r3, #30560	; 0x7760
   22ab0:	movt	r3, #3
   22ab4:	bl	11384 <__assert_fail@plt>
   22ab8:	add	r0, sp, #32
   22abc:	bl	1d2ac <__assert_fail@plt+0xbf28>
   22ac0:	sub	r0, fp, #28
   22ac4:	bl	1d2ac <__assert_fail@plt+0xbf28>
   22ac8:	add	r0, sp, #20
   22acc:	add	r1, sp, #32
   22ad0:	sub	r2, fp, #28
   22ad4:	ldr	r3, [fp, #-12]
   22ad8:	ldr	ip, [fp, #-16]
   22adc:	str	r1, [sp, #12]
   22ae0:	mov	r1, r3
   22ae4:	str	r2, [sp, #8]
   22ae8:	mov	r2, ip
   22aec:	bl	1defc <__assert_fail@plt+0xcb78>
   22af0:	ldr	r1, [sp, #8]
   22af4:	str	r0, [sp, #4]
   22af8:	mov	r0, r1
   22afc:	ldr	r1, [sp, #12]
   22b00:	ldr	r2, [sp, #4]
   22b04:	movw	r3, #2
   22b08:	bl	22304 <__assert_fail@plt+0x10f80>
   22b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22b10:	ldr	r1, [fp, #-16]
   22b14:	add	r1, r1, #1
   22b18:	movw	r2, #2
   22b1c:	sdiv	r1, r1, r2
   22b20:	cmp	r0, r1
   22b24:	bne	22b2c <__assert_fail@plt+0x117a8>
   22b28:	b	22b4c <__assert_fail@plt+0x117c8>
   22b2c:	movw	r0, #30620	; 0x779c
   22b30:	movt	r0, #3
   22b34:	movw	r1, #28968	; 0x7128
   22b38:	movt	r1, #3
   22b3c:	movw	r2, #3320	; 0xcf8
   22b40:	movw	r3, #30560	; 0x7760
   22b44:	movt	r3, #3
   22b48:	bl	11384 <__assert_fail@plt>
   22b4c:	ldr	r0, [fp, #-4]
   22b50:	ldr	r1, [fp, #-20]	; 0xffffffec
   22b54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22b58:	bl	1af70 <__assert_fail@plt+0x9bec>
   22b5c:	sub	r0, fp, #28
   22b60:	bl	1d384 <__assert_fail@plt+0xc000>
   22b64:	ldr	r0, [sp, #36]	; 0x24
   22b68:	str	r0, [sp, #16]
   22b6c:	ldr	r0, [fp, #-8]
   22b70:	movw	r1, #0
   22b74:	cmp	r0, r1
   22b78:	beq	22b8c <__assert_fail@plt+0x11808>
   22b7c:	ldr	r0, [fp, #-8]
   22b80:	ldr	r1, [sp, #40]	; 0x28
   22b84:	ldr	r2, [sp, #16]
   22b88:	bl	1af70 <__assert_fail@plt+0x9bec>
   22b8c:	add	r0, sp, #32
   22b90:	bl	1d384 <__assert_fail@plt+0xc000>
   22b94:	ldr	r0, [sp, #16]
   22b98:	mov	sp, fp
   22b9c:	pop	{fp, pc}
   22ba0:	push	{fp, lr}
   22ba4:	mov	fp, sp
   22ba8:	sub	sp, sp, #16
   22bac:	str	r0, [fp, #-4]
   22bb0:	str	r1, [sp, #8]
   22bb4:	str	r2, [sp, #4]
   22bb8:	ldr	r0, [fp, #-4]
   22bbc:	ldr	r1, [sp, #8]
   22bc0:	ldr	r2, [sp, #8]
   22bc4:	cmp	r2, #0
   22bc8:	movw	r2, #0
   22bcc:	moveq	r2, #1
   22bd0:	and	r2, r2, #1
   22bd4:	add	r1, r1, r2
   22bd8:	bl	1d4a4 <__assert_fail@plt+0xc120>
   22bdc:	ldr	r0, [sp, #4]
   22be0:	add	r0, r0, #1
   22be4:	cmp	r0, #2
   22be8:	bcs	22bf0 <__assert_fail@plt+0x1186c>
   22bec:	b	22c28 <__assert_fail@plt+0x118a4>
   22bf0:	b	22bf4 <__assert_fail@plt+0x11870>
   22bf4:	ldr	r0, [sp, #8]
   22bf8:	ldr	r1, [sp, #4]
   22bfc:	add	r1, r1, #1
   22c00:	cmp	r0, r1
   22c04:	bls	22c28 <__assert_fail@plt+0x118a4>
   22c08:	ldr	r0, [fp, #-4]
   22c0c:	ldr	r1, [fp, #-4]
   22c10:	ldr	r2, [sp, #4]
   22c14:	ldr	r3, [sp, #8]
   22c18:	sub	r2, r3, r2
   22c1c:	str	r2, [sp, #8]
   22c20:	bl	1f0ac <__assert_fail@plt+0xdd28>
   22c24:	b	22bf4 <__assert_fail@plt+0x11870>
   22c28:	mov	sp, fp
   22c2c:	pop	{fp, pc}
   22c30:	push	{fp, lr}
   22c34:	mov	fp, sp
   22c38:	sub	sp, sp, #8
   22c3c:	str	r0, [sp, #4]
   22c40:	str	r1, [sp]
   22c44:	ldr	r0, [sp, #4]
   22c48:	ldr	r1, [sp]
   22c4c:	movw	r2, #2
   22c50:	bl	22ba0 <__assert_fail@plt+0x1181c>
   22c54:	mov	sp, fp
   22c58:	pop	{fp, pc}
   22c5c:	push	{fp, lr}
   22c60:	mov	fp, sp
   22c64:	sub	sp, sp, #8
   22c68:	str	r0, [sp, #4]
   22c6c:	str	r1, [sp]
   22c70:	ldr	r0, [sp, #4]
   22c74:	ldr	r1, [sp]
   22c78:	movw	r2, #1
   22c7c:	bl	22ba0 <__assert_fail@plt+0x1181c>
   22c80:	mov	sp, fp
   22c84:	pop	{fp, pc}
   22c88:	push	{fp, lr}
   22c8c:	mov	fp, sp
   22c90:	sub	sp, sp, #32
   22c94:	str	r0, [fp, #-4]
   22c98:	str	r1, [fp, #-8]
   22c9c:	str	r2, [fp, #-12]
   22ca0:	ldr	r0, [fp, #-4]
   22ca4:	ldr	r1, [fp, #-12]
   22ca8:	ldr	r2, [fp, #-8]
   22cac:	cmp	r1, r2
   22cb0:	movw	r1, #0
   22cb4:	movls	r1, #1
   22cb8:	and	r1, r1, #1
   22cbc:	bl	1d4a4 <__assert_fail@plt+0xc120>
   22cc0:	ldr	r0, [fp, #-12]
   22cc4:	ldr	r1, [fp, #-8]
   22cc8:	lsr	r1, r1, #1
   22ccc:	cmp	r0, r1
   22cd0:	bls	22d0c <__assert_fail@plt+0x11988>
   22cd4:	ldr	r0, [fp, #-12]
   22cd8:	ldr	r1, [fp, #-8]
   22cdc:	cmp	r0, r1
   22ce0:	bhi	22cf8 <__assert_fail@plt+0x11974>
   22ce4:	ldr	r0, [fp, #-8]
   22ce8:	ldr	r1, [fp, #-12]
   22cec:	sub	r0, r0, r1
   22cf0:	str	r0, [sp, #4]
   22cf4:	b	22d04 <__assert_fail@plt+0x11980>
   22cf8:	movw	r0, #0
   22cfc:	str	r0, [sp, #4]
   22d00:	b	22d04 <__assert_fail@plt+0x11980>
   22d04:	ldr	r0, [sp, #4]
   22d08:	str	r0, [fp, #-12]
   22d0c:	add	r0, sp, #8
   22d10:	bl	1d2ac <__assert_fail@plt+0xbf28>
   22d14:	add	r0, sp, #8
   22d18:	ldr	r1, [fp, #-12]
   22d1c:	bl	22c5c <__assert_fail@plt+0x118d8>
   22d20:	ldr	r0, [fp, #-12]
   22d24:	cmp	r0, #0
   22d28:	bls	22d5c <__assert_fail@plt+0x119d8>
   22d2c:	ldr	r0, [fp, #-4]
   22d30:	ldr	r1, [fp, #-4]
   22d34:	ldr	r2, [fp, #-8]
   22d38:	mvn	r3, #0
   22d3c:	add	r3, r2, r3
   22d40:	str	r3, [fp, #-8]
   22d44:	bl	1f0ac <__assert_fail@plt+0xdd28>
   22d48:	ldr	r0, [fp, #-12]
   22d4c:	mvn	r1, #0
   22d50:	add	r0, r0, r1
   22d54:	str	r0, [fp, #-12]
   22d58:	b	22d20 <__assert_fail@plt+0x1199c>
   22d5c:	add	r2, sp, #8
   22d60:	ldr	r0, [fp, #-4]
   22d64:	ldr	r1, [fp, #-4]
   22d68:	bl	20408 <__assert_fail@plt+0xf084>
   22d6c:	add	r0, sp, #8
   22d70:	bl	1d384 <__assert_fail@plt+0xc000>
   22d74:	mov	sp, fp
   22d78:	pop	{fp, pc}
   22d7c:	push	{fp, lr}
   22d80:	mov	fp, sp
   22d84:	sub	sp, sp, #72	; 0x48
   22d88:	str	r0, [fp, #-8]
   22d8c:	str	r1, [fp, #-12]
   22d90:	ldr	r0, [fp, #-8]
   22d94:	ldr	r0, [r0, #4]
   22d98:	cmp	r0, #0
   22d9c:	movw	r0, #0
   22da0:	movne	r0, #1
   22da4:	and	r0, r0, #1
   22da8:	ldr	r1, [fp, #-8]
   22dac:	ldr	r1, [r1, #8]
   22db0:	ldr	r1, [r1]
   22db4:	and	r0, r0, r1
   22db8:	cmp	r0, #0
   22dbc:	bne	22dec <__assert_fail@plt+0x11a68>
   22dc0:	ldr	r0, [fp, #-8]
   22dc4:	movw	r1, #2
   22dc8:	bl	1da00 <__assert_fail@plt+0xc67c>
   22dcc:	cmp	r0, #0
   22dd0:	movw	r0, #0
   22dd4:	moveq	r0, #1
   22dd8:	tst	r0, #1
   22ddc:	movw	r0, #2
   22de0:	moveq	r0, #0
   22de4:	str	r0, [fp, #-4]
   22de8:	b	23048 <__assert_fail@plt+0x11cc4>
   22dec:	ldr	r0, [fp, #-8]
   22df0:	ldr	r0, [r0, #4]
   22df4:	cmp	r0, #0
   22df8:	beq	22e00 <__assert_fail@plt+0x11a7c>
   22dfc:	b	22e20 <__assert_fail@plt+0x11a9c>
   22e00:	movw	r0, #30643	; 0x77b3
   22e04:	movt	r0, #3
   22e08:	movw	r1, #28968	; 0x7128
   22e0c:	movt	r1, #3
   22e10:	movw	r2, #3590	; 0xe06
   22e14:	movw	r3, #30660	; 0x77c4
   22e18:	movt	r3, #3
   22e1c:	bl	11384 <__assert_fail@plt>
   22e20:	ldr	r0, [fp, #-8]
   22e24:	movw	r1, #64	; 0x40
   22e28:	bl	1da00 <__assert_fail@plt+0xc67c>
   22e2c:	cmp	r0, #0
   22e30:	bge	22e58 <__assert_fail@plt+0x11ad4>
   22e34:	ldr	r0, [pc, #540]	; 23058 <__assert_fail@plt+0x11cd4>
   22e38:	ldr	r1, [fp, #-8]
   22e3c:	ldr	r1, [r1, #8]
   22e40:	ldr	r1, [r1]
   22e44:	lsr	r1, r1, #1
   22e48:	lsr	r0, r0, r1
   22e4c:	and	r0, r0, #2
   22e50:	str	r0, [fp, #-4]
   22e54:	b	23048 <__assert_fail@plt+0x11cc4>
   22e58:	ldr	r2, [pc, #500]	; 23054 <__assert_fail@plt+0x11cd0>
   22e5c:	ldr	r1, [fp, #-8]
   22e60:	movw	r0, #0
   22e64:	bl	209e4 <__assert_fail@plt+0xf660>
   22e68:	cmp	r0, #1
   22e6c:	beq	22e7c <__assert_fail@plt+0x11af8>
   22e70:	movw	r0, #0
   22e74:	str	r0, [fp, #-4]
   22e78:	b	23048 <__assert_fail@plt+0x11cc4>
   22e7c:	ldr	r0, [fp, #-8]
   22e80:	movw	r1, #961	; 0x3c1
   22e84:	bl	1da00 <__assert_fail@plt+0xc67c>
   22e88:	cmp	r0, #0
   22e8c:	bge	22e9c <__assert_fail@plt+0x11b18>
   22e90:	movw	r0, #2
   22e94:	str	r0, [fp, #-4]
   22e98:	b	23048 <__assert_fail@plt+0x11cc4>
   22e9c:	sub	r0, fp, #24
   22ea0:	bl	1d2ac <__assert_fail@plt+0xbf28>
   22ea4:	add	r0, sp, #36	; 0x24
   22ea8:	bl	1d2ac <__assert_fail@plt+0xbf28>
   22eac:	sub	r0, fp, #24
   22eb0:	ldr	r1, [fp, #-8]
   22eb4:	bl	1e954 <__assert_fail@plt+0xd5d0>
   22eb8:	ldr	r0, [fp, #-16]
   22ebc:	ldr	r1, [r0]
   22ec0:	sub	r1, r1, #1
   22ec4:	str	r1, [r0]
   22ec8:	ldr	r0, [fp, #-16]
   22ecc:	movw	r1, #0
   22ed0:	bl	1c128 <__assert_fail@plt+0xada4>
   22ed4:	sub	r1, fp, #24
   22ed8:	add	r2, sp, #36	; 0x24
   22edc:	str	r0, [sp, #20]
   22ee0:	ldr	r0, [sp, #20]
   22ee4:	str	r0, [sp, #8]
   22ee8:	mov	r0, r2
   22eec:	ldr	r2, [sp, #8]
   22ef0:	bl	1ffd8 <__assert_fail@plt+0xec54>
   22ef4:	add	r0, sp, #24
   22ef8:	movw	r1, #2
   22efc:	bl	1d714 <__assert_fail@plt+0xc390>
   22f00:	add	r3, sp, #36	; 0x24
   22f04:	add	r2, sp, #24
   22f08:	sub	r1, fp, #24
   22f0c:	ldr	r0, [fp, #-8]
   22f10:	ldr	ip, [sp, #20]
   22f14:	str	ip, [sp]
   22f18:	bl	2305c <__assert_fail@plt+0x11cd8>
   22f1c:	cmp	r0, #0
   22f20:	movw	r0, #0
   22f24:	str	r0, [sp, #4]
   22f28:	beq	22f48 <__assert_fail@plt+0x11bc4>
   22f2c:	add	r1, sp, #24
   22f30:	ldr	r0, [fp, #-8]
   22f34:	bl	2315c <__assert_fail@plt+0x11dd8>
   22f38:	cmp	r0, #0
   22f3c:	movw	r0, #0
   22f40:	movne	r0, #1
   22f44:	str	r0, [sp, #4]
   22f48:	ldr	r0, [sp, #4]
   22f4c:	and	r0, r0, #1
   22f50:	str	r0, [sp, #16]
   22f54:	ldr	r0, [fp, #-12]
   22f58:	sub	r0, r0, #24
   22f5c:	str	r0, [fp, #-12]
   22f60:	movw	r0, #0
   22f64:	str	r0, [sp, #12]
   22f68:	ldr	r0, [sp, #16]
   22f6c:	ldr	r1, [sp, #12]
   22f70:	ldr	r2, [fp, #-12]
   22f74:	cmp	r1, r2
   22f78:	movw	r1, #0
   22f7c:	movlt	r1, #1
   22f80:	and	r1, r1, #1
   22f84:	and	r0, r0, r1
   22f88:	cmp	r0, #0
   22f8c:	beq	23028 <__assert_fail@plt+0x11ca4>
   22f90:	add	r0, sp, #24
   22f94:	ldr	r1, [sp, #12]
   22f98:	ldr	r2, [sp, #12]
   22f9c:	mul	r1, r1, r2
   22fa0:	ldr	r2, [sp, #12]
   22fa4:	add	r1, r1, r2
   22fa8:	add	r1, r1, #41	; 0x29
   22fac:	bl	1d4a4 <__assert_fail@plt+0xc120>
   22fb0:	sub	r1, fp, #24
   22fb4:	add	r0, sp, #24
   22fb8:	bl	1e75c <__assert_fail@plt+0xd3d8>
   22fbc:	cmp	r0, #0
   22fc0:	blt	22ff8 <__assert_fail@plt+0x11c74>
   22fc4:	ldr	r0, [sp, #12]
   22fc8:	cmp	r0, #30
   22fcc:	blt	22fd4 <__assert_fail@plt+0x11c50>
   22fd0:	b	22ff4 <__assert_fail@plt+0x11c70>
   22fd4:	movw	r0, #30710	; 0x77f6
   22fd8:	movt	r0, #3
   22fdc:	movw	r1, #28968	; 0x7128
   22fe0:	movt	r1, #3
   22fe4:	movw	r2, #3629	; 0xe2d
   22fe8:	movw	r3, #30660	; 0x77c4
   22fec:	movt	r3, #3
   22ff0:	bl	11384 <__assert_fail@plt>
   22ff4:	b	23028 <__assert_fail@plt+0x11ca4>
   22ff8:	add	r3, sp, #36	; 0x24
   22ffc:	add	r2, sp, #24
   23000:	sub	r1, fp, #24
   23004:	ldr	r0, [fp, #-8]
   23008:	ldr	ip, [sp, #20]
   2300c:	str	ip, [sp]
   23010:	bl	2305c <__assert_fail@plt+0x11cd8>
   23014:	str	r0, [sp, #16]
   23018:	ldr	r0, [sp, #12]
   2301c:	add	r0, r0, #1
   23020:	str	r0, [sp, #12]
   23024:	b	22f68 <__assert_fail@plt+0x11be4>
   23028:	sub	r0, fp, #24
   2302c:	bl	1d384 <__assert_fail@plt+0xc000>
   23030:	add	r0, sp, #36	; 0x24
   23034:	bl	1d384 <__assert_fail@plt+0xc000>
   23038:	add	r0, sp, #24
   2303c:	bl	1d384 <__assert_fail@plt+0xc000>
   23040:	ldr	r0, [sp, #16]
   23044:	str	r0, [fp, #-4]
   23048:	ldr	r0, [fp, #-4]
   2304c:	mov	sp, fp
   23050:	pop	{fp, pc}
   23054:	smullgt	sp, pc, r7, r7	; <UNPREDICTABLE>
   23058:	stmdbgt	r9!, {r2, r3, r4, r6, r7, r9, sl, ip, pc}^
   2305c:	push	{fp, lr}
   23060:	mov	fp, sp
   23064:	sub	sp, sp, #24
   23068:	ldr	ip, [fp, #8]
   2306c:	str	r0, [fp, #-8]
   23070:	str	r1, [sp, #12]
   23074:	str	r2, [sp, #8]
   23078:	str	r3, [sp, #4]
   2307c:	ldr	r0, [fp, #8]
   23080:	cmp	r0, #0
   23084:	bls	2308c <__assert_fail@plt+0x11d08>
   23088:	b	230ac <__assert_fail@plt+0x11d28>
   2308c:	movw	r0, #33239	; 0x81d7
   23090:	movt	r0, #3
   23094:	movw	r1, #28968	; 0x7128
   23098:	movt	r1, #3
   2309c:	movw	r2, #3550	; 0xdde
   230a0:	movw	r3, #33245	; 0x81dd
   230a4:	movt	r3, #3
   230a8:	bl	11384 <__assert_fail@plt>
   230ac:	ldr	r0, [sp, #8]
   230b0:	ldr	r1, [sp, #8]
   230b4:	ldr	r2, [sp, #4]
   230b8:	ldr	r3, [fp, #-8]
   230bc:	bl	2199c <__assert_fail@plt+0x10618>
   230c0:	ldr	r0, [sp, #8]
   230c4:	movw	r1, #1
   230c8:	bl	1e708 <__assert_fail@plt+0xd384>
   230cc:	cmp	r0, #0
   230d0:	beq	230e8 <__assert_fail@plt+0x11d64>
   230d4:	ldr	r0, [sp, #8]
   230d8:	ldr	r1, [sp, #12]
   230dc:	bl	1e75c <__assert_fail@plt+0xd3d8>
   230e0:	cmp	r0, #0
   230e4:	bne	230f4 <__assert_fail@plt+0x11d70>
   230e8:	movw	r0, #1
   230ec:	str	r0, [fp, #-4]
   230f0:	b	23150 <__assert_fail@plt+0x11dcc>
   230f4:	b	230f8 <__assert_fail@plt+0x11d74>
   230f8:	ldr	r0, [fp, #8]
   230fc:	mvn	r1, #0
   23100:	add	r0, r0, r1
   23104:	str	r0, [fp, #8]
   23108:	cmp	r0, #0
   2310c:	bls	23148 <__assert_fail@plt+0x11dc4>
   23110:	ldr	r0, [sp, #8]
   23114:	ldr	r1, [sp, #8]
   23118:	ldr	r3, [fp, #-8]
   2311c:	movw	r2, #2
   23120:	bl	222b4 <__assert_fail@plt+0x10f30>
   23124:	ldr	r0, [sp, #8]
   23128:	ldr	r1, [sp, #12]
   2312c:	bl	1e75c <__assert_fail@plt+0xd3d8>
   23130:	cmp	r0, #0
   23134:	bne	23144 <__assert_fail@plt+0x11dc0>
   23138:	movw	r0, #1
   2313c:	str	r0, [fp, #-4]
   23140:	b	23150 <__assert_fail@plt+0x11dcc>
   23144:	b	230f8 <__assert_fail@plt+0x11d74>
   23148:	movw	r0, #0
   2314c:	str	r0, [fp, #-4]
   23150:	ldr	r0, [fp, #-4]
   23154:	mov	sp, fp
   23158:	pop	{fp, pc}
   2315c:	push	{fp, lr}
   23160:	mov	fp, sp
   23164:	sub	sp, sp, #104	; 0x68
   23168:	sub	r2, fp, #40	; 0x28
   2316c:	str	r0, [fp, #-8]
   23170:	str	r1, [fp, #-12]
   23174:	ldr	r0, [fp, #-8]
   23178:	ldr	r1, [r0, #8]
   2317c:	ldr	r0, [fp, #-8]
   23180:	ldr	r0, [r0, #4]
   23184:	cmp	r0, #0
   23188:	str	r2, [sp, #44]	; 0x2c
   2318c:	str	r1, [sp, #40]	; 0x28
   23190:	blt	231a4 <__assert_fail@plt+0x11e20>
   23194:	ldr	r0, [fp, #-8]
   23198:	ldr	r0, [r0, #4]
   2319c:	str	r0, [sp, #36]	; 0x24
   231a0:	b	231b8 <__assert_fail@plt+0x11e34>
   231a4:	ldr	r0, [fp, #-8]
   231a8:	ldr	r0, [r0, #4]
   231ac:	movw	r1, #0
   231b0:	sub	r0, r1, r0
   231b4:	str	r0, [sp, #36]	; 0x24
   231b8:	ldr	r0, [sp, #36]	; 0x24
   231bc:	ldr	r1, [sp, #44]	; 0x2c
   231c0:	str	r0, [sp, #32]
   231c4:	mov	r0, r1
   231c8:	ldr	r1, [sp, #40]	; 0x28
   231cc:	ldr	r2, [sp, #32]
   231d0:	bl	1defc <__assert_fail@plt+0xcb78>
   231d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   231d8:	cmp	r1, #0
   231dc:	movw	r1, #0
   231e0:	movne	r1, #1
   231e4:	and	r1, r1, #1
   231e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   231ec:	ldr	r2, [r2]
   231f0:	and	r1, r1, r2
   231f4:	cmp	r1, #0
   231f8:	beq	23200 <__assert_fail@plt+0x11e7c>
   231fc:	b	23220 <__assert_fail@plt+0x11e9c>
   23200:	movw	r0, #33360	; 0x8250
   23204:	movt	r0, #3
   23208:	movw	r1, #28968	; 0x7128
   2320c:	movt	r1, #3
   23210:	movw	r2, #3504	; 0xdb0
   23214:	movw	r3, #33374	; 0x825e
   23218:	movt	r3, #3
   2321c:	bl	11384 <__assert_fail@plt>
   23220:	sub	r1, fp, #40	; 0x28
   23224:	ldr	r0, [fp, #-12]
   23228:	movw	r2, #2
   2322c:	bl	22850 <__assert_fail@plt+0x114cc>
   23230:	cmp	r0, #0
   23234:	beq	23244 <__assert_fail@plt+0x11ec0>
   23238:	movw	r0, #0
   2323c:	str	r0, [fp, #-4]
   23240:	b	23440 <__assert_fail@plt+0x120bc>
   23244:	ldr	r0, [fp, #-12]
   23248:	ldr	r0, [r0, #4]
   2324c:	cmp	r0, #1
   23250:	bne	2326c <__assert_fail@plt+0x11ee8>
   23254:	ldr	r0, [fp, #-12]
   23258:	ldr	r0, [r0, #8]
   2325c:	ldr	r0, [r0]
   23260:	sub	r0, r0, #1
   23264:	str	r0, [sp, #28]
   23268:	b	23278 <__assert_fail@plt+0x11ef4>
   2326c:	mvn	r0, #0
   23270:	str	r0, [sp, #28]
   23274:	b	23278 <__assert_fail@plt+0x11ef4>
   23278:	ldr	r0, [sp, #28]
   2327c:	str	r0, [fp, #-44]	; 0xffffffd4
   23280:	movw	r0, #3
   23284:	str	r0, [fp, #-48]	; 0xffffffd0
   23288:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2328c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23290:	cmp	r0, r1
   23294:	bcc	232b8 <__assert_fail@plt+0x11f34>
   23298:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2329c:	cmn	r0, #1
   232a0:	movw	r0, #0
   232a4:	movne	r0, #1
   232a8:	and	r0, r0, #1
   232ac:	add	r0, r0, #1
   232b0:	str	r0, [fp, #-4]
   232b4:	b	23440 <__assert_fail@plt+0x120bc>
   232b8:	sub	r0, fp, #40	; 0x28
   232bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   232c0:	add	r1, r1, #2
   232c4:	str	r1, [fp, #-48]	; 0xffffffd0
   232c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   232cc:	bl	208a8 <__assert_fail@plt+0xf524>
   232d0:	str	r0, [sp, #48]	; 0x30
   232d4:	ldr	r0, [sp, #48]	; 0x30
   232d8:	cmp	r0, #0
   232dc:	bne	232ec <__assert_fail@plt+0x11f68>
   232e0:	movw	r0, #0
   232e4:	str	r0, [fp, #-4]
   232e8:	b	23440 <__assert_fail@plt+0x120bc>
   232ec:	b	232f0 <__assert_fail@plt+0x11f6c>
   232f0:	ldr	r0, [sp, #48]	; 0x30
   232f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   232f8:	bl	277a8 <__assert_fail@plt+0x16424>
   232fc:	cmp	r0, #1
   23300:	beq	23288 <__assert_fail@plt+0x11f04>
   23304:	sub	r0, fp, #28
   23308:	bl	1d2ac <__assert_fail@plt+0xbf28>
   2330c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23310:	ldr	r0, [r0]
   23314:	mvn	r1, #0
   23318:	eor	r0, r0, r1
   2331c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23320:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23324:	movw	ip, #0
   23328:	str	r1, [sp, #24]
   2332c:	mov	r1, ip
   23330:	ldr	ip, [sp, #24]
   23334:	str	ip, [sp]
   23338:	bl	1c18c <__assert_fail@plt+0xae08>
   2333c:	str	r0, [fp, #-16]
   23340:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23344:	and	r0, r0, #2
   23348:	cmp	r0, #0
   2334c:	beq	23364 <__assert_fail@plt+0x11fe0>
   23350:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23354:	lsr	r0, r0, #2
   23358:	add	r0, r0, #1
   2335c:	str	r0, [sp, #20]
   23360:	b	23378 <__assert_fail@plt+0x11ff4>
   23364:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23368:	lsr	r0, r0, #2
   2336c:	movw	r1, #0
   23370:	sub	r0, r1, r0
   23374:	str	r0, [sp, #20]
   23378:	ldr	r0, [sp, #20]
   2337c:	sub	r1, fp, #40	; 0x28
   23380:	sub	r2, fp, #28
   23384:	str	r0, [sp, #52]	; 0x34
   23388:	ldr	r0, [fp, #-12]
   2338c:	ldr	r3, [sp, #52]	; 0x34
   23390:	ldr	ip, [fp, #-16]
   23394:	str	r0, [sp, #16]
   23398:	mov	r0, r2
   2339c:	ldr	r2, [sp, #16]
   233a0:	str	r1, [sp, #12]
   233a4:	mov	r1, r2
   233a8:	mov	r2, r3
   233ac:	mov	r3, ip
   233b0:	ldr	ip, [sp, #12]
   233b4:	str	ip, [sp]
   233b8:	bl	27ad4 <__assert_fail@plt+0x16750>
   233bc:	cmp	r0, #0
   233c0:	bne	23420 <__assert_fail@plt+0x1209c>
   233c4:	b	233c8 <__assert_fail@plt+0x12044>
   233c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   233cc:	cmp	r0, #0
   233d0:	movw	r0, #0
   233d4:	str	r0, [sp, #8]
   233d8:	beq	233fc <__assert_fail@plt+0x12078>
   233dc:	ldr	r0, [fp, #-16]
   233e0:	mvn	r1, #0
   233e4:	add	r0, r0, r1
   233e8:	str	r0, [fp, #-16]
   233ec:	cmp	r0, #0
   233f0:	movw	r0, #0
   233f4:	movne	r0, #1
   233f8:	str	r0, [sp, #8]
   233fc:	ldr	r0, [sp, #8]
   23400:	tst	r0, #1
   23404:	beq	2341c <__assert_fail@plt+0x12098>
   23408:	sub	r2, fp, #40	; 0x28
   2340c:	sub	r0, fp, #28
   23410:	ldr	r1, [fp, #-12]
   23414:	bl	27db0 <__assert_fail@plt+0x16a2c>
   23418:	b	233c8 <__assert_fail@plt+0x12044>
   2341c:	b	23420 <__assert_fail@plt+0x1209c>
   23420:	sub	r0, fp, #28
   23424:	bl	1d384 <__assert_fail@plt+0xc000>
   23428:	ldr	r0, [fp, #-16]
   2342c:	cmp	r0, #0
   23430:	movw	r0, #0
   23434:	movne	r0, #1
   23438:	and	r0, r0, #1
   2343c:	str	r0, [fp, #-4]
   23440:	ldr	r0, [fp, #-4]
   23444:	mov	sp, fp
   23448:	pop	{fp, pc}
   2344c:	sub	sp, sp, #40	; 0x28
   23450:	str	r0, [sp, #32]
   23454:	str	r1, [sp, #28]
   23458:	ldr	r0, [sp, #32]
   2345c:	ldr	r0, [r0, #4]
   23460:	str	r0, [sp, #16]
   23464:	ldr	r0, [sp, #16]
   23468:	cmp	r0, #0
   2346c:	blt	2347c <__assert_fail@plt+0x120f8>
   23470:	ldr	r0, [sp, #16]
   23474:	str	r0, [sp]
   23478:	b	2348c <__assert_fail@plt+0x12108>
   2347c:	ldr	r0, [sp, #16]
   23480:	movw	r1, #0
   23484:	sub	r0, r1, r0
   23488:	str	r0, [sp]
   2348c:	ldr	r0, [sp]
   23490:	str	r0, [sp, #12]
   23494:	ldr	r0, [sp, #28]
   23498:	lsr	r0, r0, #5
   2349c:	str	r0, [sp, #24]
   234a0:	ldr	r0, [sp, #24]
   234a4:	ldr	r1, [sp, #12]
   234a8:	cmp	r0, r1
   234ac:	blt	234cc <__assert_fail@plt+0x12148>
   234b0:	ldr	r0, [sp, #16]
   234b4:	cmp	r0, #0
   234b8:	movw	r0, #0
   234bc:	movlt	r0, #1
   234c0:	and	r0, r0, #1
   234c4:	str	r0, [sp, #36]	; 0x24
   234c8:	b	235a0 <__assert_fail@plt+0x1221c>
   234cc:	ldr	r0, [sp, #28]
   234d0:	and	r0, r0, #31
   234d4:	str	r0, [sp, #20]
   234d8:	ldr	r0, [sp, #32]
   234dc:	ldr	r0, [r0, #8]
   234e0:	ldr	r1, [sp, #24]
   234e4:	add	r0, r0, r1, lsl #2
   234e8:	ldr	r0, [r0]
   234ec:	str	r0, [sp, #8]
   234f0:	ldr	r0, [sp, #8]
   234f4:	ldr	r1, [sp, #20]
   234f8:	lsr	r0, r0, r1
   234fc:	and	r0, r0, #1
   23500:	str	r0, [sp, #4]
   23504:	ldr	r0, [sp, #16]
   23508:	cmp	r0, #0
   2350c:	bge	23598 <__assert_fail@plt+0x12214>
   23510:	ldr	r0, [sp, #20]
   23514:	cmp	r0, #0
   23518:	bls	23548 <__assert_fail@plt+0x121c4>
   2351c:	ldr	r0, [sp, #8]
   23520:	ldr	r1, [sp, #20]
   23524:	movw	r2, #32
   23528:	sub	r1, r2, r1
   2352c:	lsl	r0, r0, r1
   23530:	cmp	r0, #0
   23534:	bls	23548 <__assert_fail@plt+0x121c4>
   23538:	ldr	r0, [sp, #4]
   2353c:	eor	r0, r0, #1
   23540:	str	r0, [sp, #36]	; 0x24
   23544:	b	235a0 <__assert_fail@plt+0x1221c>
   23548:	b	2354c <__assert_fail@plt+0x121c8>
   2354c:	ldr	r0, [sp, #24]
   23550:	mvn	r1, #0
   23554:	add	r0, r0, r1
   23558:	str	r0, [sp, #24]
   2355c:	cmp	r0, #0
   23560:	blt	23594 <__assert_fail@plt+0x12210>
   23564:	ldr	r0, [sp, #32]
   23568:	ldr	r0, [r0, #8]
   2356c:	ldr	r1, [sp, #24]
   23570:	add	r0, r0, r1, lsl #2
   23574:	ldr	r0, [r0]
   23578:	cmp	r0, #0
   2357c:	bls	23590 <__assert_fail@plt+0x1220c>
   23580:	ldr	r0, [sp, #4]
   23584:	eor	r0, r0, #1
   23588:	str	r0, [sp, #36]	; 0x24
   2358c:	b	235a0 <__assert_fail@plt+0x1221c>
   23590:	b	2354c <__assert_fail@plt+0x121c8>
   23594:	b	23598 <__assert_fail@plt+0x12214>
   23598:	ldr	r0, [sp, #4]
   2359c:	str	r0, [sp, #36]	; 0x24
   235a0:	ldr	r0, [sp, #36]	; 0x24
   235a4:	add	sp, sp, #40	; 0x28
   235a8:	bx	lr
   235ac:	push	{fp, lr}
   235b0:	mov	fp, sp
   235b4:	sub	sp, sp, #56	; 0x38
   235b8:	str	r0, [fp, #-4]
   235bc:	str	r1, [fp, #-8]
   235c0:	ldr	r0, [fp, #-4]
   235c4:	ldr	r0, [r0, #4]
   235c8:	cmp	r0, #0
   235cc:	blt	235e0 <__assert_fail@plt+0x1225c>
   235d0:	ldr	r0, [fp, #-4]
   235d4:	ldr	r0, [r0, #4]
   235d8:	str	r0, [sp, #20]
   235dc:	b	235f4 <__assert_fail@plt+0x12270>
   235e0:	ldr	r0, [fp, #-4]
   235e4:	ldr	r0, [r0, #4]
   235e8:	movw	r1, #0
   235ec:	sub	r0, r1, r0
   235f0:	str	r0, [sp, #20]
   235f4:	ldr	r0, [sp, #20]
   235f8:	str	r0, [fp, #-12]
   235fc:	ldr	r0, [fp, #-8]
   23600:	lsr	r0, r0, #5
   23604:	str	r0, [fp, #-16]
   23608:	ldr	r0, [fp, #-8]
   2360c:	and	r0, r0, #31
   23610:	movw	r1, #1
   23614:	lsl	r0, r1, r0
   23618:	str	r0, [fp, #-20]	; 0xffffffec
   2361c:	ldr	r0, [fp, #-16]
   23620:	ldr	r1, [fp, #-12]
   23624:	cmp	r0, r1
   23628:	blt	236d0 <__assert_fail@plt+0x1234c>
   2362c:	ldr	r0, [fp, #-16]
   23630:	add	r0, r0, #1
   23634:	ldr	r1, [fp, #-4]
   23638:	ldr	r1, [r1]
   2363c:	cmp	r0, r1
   23640:	ble	2365c <__assert_fail@plt+0x122d8>
   23644:	ldr	r0, [fp, #-4]
   23648:	ldr	r1, [fp, #-16]
   2364c:	add	r1, r1, #1
   23650:	bl	1d52c <__assert_fail@plt+0xc1a8>
   23654:	str	r0, [sp, #16]
   23658:	b	23668 <__assert_fail@plt+0x122e4>
   2365c:	ldr	r0, [fp, #-4]
   23660:	ldr	r0, [r0, #8]
   23664:	str	r0, [sp, #16]
   23668:	ldr	r0, [sp, #16]
   2366c:	str	r0, [fp, #-24]	; 0xffffffe8
   23670:	ldr	r0, [fp, #-20]	; 0xffffffec
   23674:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23678:	ldr	r2, [fp, #-16]
   2367c:	add	r1, r1, r2, lsl #2
   23680:	str	r0, [r1]
   23684:	ldr	r0, [fp, #-12]
   23688:	str	r0, [sp, #28]
   2368c:	ldr	r0, [sp, #28]
   23690:	ldr	r1, [fp, #-16]
   23694:	cmp	r0, r1
   23698:	bge	236c0 <__assert_fail@plt+0x1233c>
   2369c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   236a0:	ldr	r1, [sp, #28]
   236a4:	add	r0, r0, r1, lsl #2
   236a8:	movw	r1, #0
   236ac:	str	r1, [r0]
   236b0:	ldr	r0, [sp, #28]
   236b4:	add	r0, r0, #1
   236b8:	str	r0, [sp, #28]
   236bc:	b	2368c <__assert_fail@plt+0x12308>
   236c0:	ldr	r0, [fp, #-16]
   236c4:	add	r0, r0, #1
   236c8:	str	r0, [fp, #-12]
   236cc:	b	23780 <__assert_fail@plt+0x123fc>
   236d0:	ldr	r0, [fp, #-4]
   236d4:	ldr	r0, [r0, #8]
   236d8:	str	r0, [fp, #-24]	; 0xffffffe8
   236dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   236e0:	ldr	r1, [fp, #-16]
   236e4:	add	r0, r0, r1, lsl #2
   236e8:	mov	r1, r0
   236ec:	ldr	r2, [fp, #-12]
   236f0:	ldr	r3, [fp, #-16]
   236f4:	sub	r2, r2, r3
   236f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   236fc:	str	r0, [sp, #12]
   23700:	mov	r0, r1
   23704:	ldr	r1, [sp, #12]
   23708:	bl	1b140 <__assert_fail@plt+0x9dbc>
   2370c:	str	r0, [sp, #24]
   23710:	ldr	r0, [sp, #24]
   23714:	cmp	r0, #0
   23718:	bls	2377c <__assert_fail@plt+0x123f8>
   2371c:	ldr	r0, [fp, #-12]
   23720:	add	r0, r0, #1
   23724:	ldr	r1, [fp, #-4]
   23728:	ldr	r1, [r1]
   2372c:	cmp	r0, r1
   23730:	ble	2374c <__assert_fail@plt+0x123c8>
   23734:	ldr	r0, [fp, #-4]
   23738:	ldr	r1, [fp, #-12]
   2373c:	add	r1, r1, #1
   23740:	bl	1d52c <__assert_fail@plt+0xc1a8>
   23744:	str	r0, [sp, #8]
   23748:	b	23758 <__assert_fail@plt+0x123d4>
   2374c:	ldr	r0, [fp, #-4]
   23750:	ldr	r0, [r0, #8]
   23754:	str	r0, [sp, #8]
   23758:	ldr	r0, [sp, #8]
   2375c:	str	r0, [fp, #-24]	; 0xffffffe8
   23760:	ldr	r0, [sp, #24]
   23764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23768:	ldr	r2, [fp, #-12]
   2376c:	add	r3, r2, #1
   23770:	str	r3, [fp, #-12]
   23774:	add	r1, r1, r2, lsl #2
   23778:	str	r0, [r1]
   2377c:	b	23780 <__assert_fail@plt+0x123fc>
   23780:	ldr	r0, [fp, #-4]
   23784:	ldr	r0, [r0, #4]
   23788:	cmp	r0, #0
   2378c:	bge	237a4 <__assert_fail@plt+0x12420>
   23790:	ldr	r0, [fp, #-12]
   23794:	movw	r1, #0
   23798:	sub	r0, r1, r0
   2379c:	str	r0, [sp, #4]
   237a0:	b	237ac <__assert_fail@plt+0x12428>
   237a4:	ldr	r0, [fp, #-12]
   237a8:	str	r0, [sp, #4]
   237ac:	ldr	r0, [sp, #4]
   237b0:	ldr	r1, [fp, #-4]
   237b4:	str	r0, [r1, #4]
   237b8:	mov	sp, fp
   237bc:	pop	{fp, pc}
   237c0:	push	{fp, lr}
   237c4:	mov	fp, sp
   237c8:	sub	sp, sp, #40	; 0x28
   237cc:	str	r0, [fp, #-4]
   237d0:	str	r1, [fp, #-8]
   237d4:	ldr	r0, [fp, #-4]
   237d8:	ldr	r0, [r0, #4]
   237dc:	cmp	r0, #0
   237e0:	blt	237f4 <__assert_fail@plt+0x12470>
   237e4:	ldr	r0, [fp, #-4]
   237e8:	ldr	r0, [r0, #4]
   237ec:	str	r0, [sp, #8]
   237f0:	b	23808 <__assert_fail@plt+0x12484>
   237f4:	ldr	r0, [fp, #-4]
   237f8:	ldr	r0, [r0, #4]
   237fc:	movw	r1, #0
   23800:	sub	r0, r1, r0
   23804:	str	r0, [sp, #8]
   23808:	ldr	r0, [sp, #8]
   2380c:	str	r0, [fp, #-12]
   23810:	ldr	r0, [fp, #-4]
   23814:	ldr	r0, [r0, #8]
   23818:	str	r0, [sp, #20]
   2381c:	ldr	r0, [fp, #-8]
   23820:	lsr	r0, r0, #5
   23824:	str	r0, [fp, #-16]
   23828:	ldr	r0, [fp, #-8]
   2382c:	and	r0, r0, #31
   23830:	movw	r1, #1
   23834:	lsl	r0, r1, r0
   23838:	str	r0, [sp, #16]
   2383c:	ldr	r0, [fp, #-16]
   23840:	ldr	r1, [fp, #-12]
   23844:	cmp	r0, r1
   23848:	bge	23850 <__assert_fail@plt+0x124cc>
   2384c:	b	23870 <__assert_fail@plt+0x124ec>
   23850:	movw	r0, #33654	; 0x8376
   23854:	movt	r0, #3
   23858:	movw	r1, #28968	; 0x7128
   2385c:	movt	r1, #3
   23860:	movw	r2, #3753	; 0xea9
   23864:	movw	r3, #33670	; 0x8386
   23868:	movt	r3, #3
   2386c:	bl	11384 <__assert_fail@plt>
   23870:	b	23874 <__assert_fail@plt+0x124f0>
   23874:	ldr	r0, [sp, #20]
   23878:	ldr	r1, [fp, #-16]
   2387c:	add	r0, r0, r1, lsl #2
   23880:	mov	r1, r0
   23884:	ldr	r2, [fp, #-12]
   23888:	ldr	r3, [fp, #-16]
   2388c:	sub	r2, r2, r3
   23890:	ldr	r3, [sp, #16]
   23894:	str	r0, [sp, #4]
   23898:	mov	r0, r1
   2389c:	ldr	r1, [sp, #4]
   238a0:	bl	1b384 <__assert_fail@plt+0xa000>
   238a4:	str	r0, [sp, #12]
   238a8:	ldr	r0, [sp, #12]
   238ac:	cmp	r0, #0
   238b0:	bne	238b8 <__assert_fail@plt+0x12534>
   238b4:	b	238d8 <__assert_fail@plt+0x12554>
   238b8:	movw	r0, #29949	; 0x74fd
   238bc:	movt	r0, #3
   238c0:	movw	r1, #28968	; 0x7128
   238c4:	movt	r1, #3
   238c8:	movw	r2, #3756	; 0xeac
   238cc:	movw	r3, #33670	; 0x8386
   238d0:	movt	r3, #3
   238d4:	bl	11384 <__assert_fail@plt>
   238d8:	b	238dc <__assert_fail@plt+0x12558>
   238dc:	ldr	r0, [sp, #20]
   238e0:	ldr	r1, [fp, #-12]
   238e4:	bl	1b08c <__assert_fail@plt+0x9d08>
   238e8:	str	r0, [fp, #-12]
   238ec:	ldr	r0, [fp, #-4]
   238f0:	ldr	r0, [r0, #4]
   238f4:	cmp	r0, #0
   238f8:	bge	23910 <__assert_fail@plt+0x1258c>
   238fc:	ldr	r0, [fp, #-12]
   23900:	movw	r1, #0
   23904:	sub	r0, r1, r0
   23908:	str	r0, [sp]
   2390c:	b	23918 <__assert_fail@plt+0x12594>
   23910:	ldr	r0, [fp, #-12]
   23914:	str	r0, [sp]
   23918:	ldr	r0, [sp]
   2391c:	ldr	r1, [fp, #-4]
   23920:	str	r0, [r1, #4]
   23924:	mov	sp, fp
   23928:	pop	{fp, pc}
   2392c:	push	{fp, lr}
   23930:	mov	fp, sp
   23934:	sub	sp, sp, #8
   23938:	str	r0, [sp, #4]
   2393c:	str	r1, [sp]
   23940:	ldr	r0, [sp, #4]
   23944:	ldr	r1, [sp]
   23948:	bl	2344c <__assert_fail@plt+0x120c8>
   2394c:	cmp	r0, #0
   23950:	beq	23984 <__assert_fail@plt+0x12600>
   23954:	ldr	r0, [sp, #4]
   23958:	ldr	r0, [r0, #4]
   2395c:	cmp	r0, #0
   23960:	blt	23974 <__assert_fail@plt+0x125f0>
   23964:	ldr	r0, [sp, #4]
   23968:	ldr	r1, [sp]
   2396c:	bl	237c0 <__assert_fail@plt+0x1243c>
   23970:	b	23980 <__assert_fail@plt+0x125fc>
   23974:	ldr	r0, [sp, #4]
   23978:	ldr	r1, [sp]
   2397c:	bl	235ac <__assert_fail@plt+0x12228>
   23980:	b	23984 <__assert_fail@plt+0x12600>
   23984:	mov	sp, fp
   23988:	pop	{fp, pc}
   2398c:	push	{fp, lr}
   23990:	mov	fp, sp
   23994:	sub	sp, sp, #8
   23998:	str	r0, [sp, #4]
   2399c:	str	r1, [sp]
   239a0:	ldr	r0, [sp, #4]
   239a4:	ldr	r1, [sp]
   239a8:	bl	2344c <__assert_fail@plt+0x120c8>
   239ac:	ldr	r1, [sp, #4]
   239b0:	ldr	r1, [r1, #4]
   239b4:	cmp	r1, #0
   239b8:	movw	r1, #0
   239bc:	movlt	r1, #1
   239c0:	and	r1, r1, #1
   239c4:	eor	r0, r0, r1
   239c8:	cmp	r0, #0
   239cc:	beq	239e0 <__assert_fail@plt+0x1265c>
   239d0:	ldr	r0, [sp, #4]
   239d4:	ldr	r1, [sp]
   239d8:	bl	237c0 <__assert_fail@plt+0x1243c>
   239dc:	b	239ec <__assert_fail@plt+0x12668>
   239e0:	ldr	r0, [sp, #4]
   239e4:	ldr	r1, [sp]
   239e8:	bl	235ac <__assert_fail@plt+0x12228>
   239ec:	mov	sp, fp
   239f0:	pop	{fp, pc}
   239f4:	push	{fp, lr}
   239f8:	mov	fp, sp
   239fc:	sub	sp, sp, #8
   23a00:	str	r0, [sp, #4]
   23a04:	str	r1, [sp]
   23a08:	ldr	r0, [sp, #4]
   23a0c:	ldr	r1, [sp]
   23a10:	movw	r2, #1
   23a14:	bl	1ea90 <__assert_fail@plt+0xd70c>
   23a18:	ldr	r0, [sp, #4]
   23a1c:	ldr	r1, [sp, #4]
   23a20:	bl	1e9bc <__assert_fail@plt+0xd638>
   23a24:	mov	sp, fp
   23a28:	pop	{fp, pc}
   23a2c:	push	{fp, lr}
   23a30:	mov	fp, sp
   23a34:	sub	sp, sp, #104	; 0x68
   23a38:	str	r0, [fp, #-4]
   23a3c:	str	r1, [fp, #-8]
   23a40:	str	r2, [fp, #-12]
   23a44:	ldr	r0, [fp, #-8]
   23a48:	ldr	r0, [r0, #4]
   23a4c:	cmp	r0, #0
   23a50:	blt	23a64 <__assert_fail@plt+0x126e0>
   23a54:	ldr	r0, [fp, #-8]
   23a58:	ldr	r0, [r0, #4]
   23a5c:	str	r0, [sp, #16]
   23a60:	b	23a78 <__assert_fail@plt+0x126f4>
   23a64:	ldr	r0, [fp, #-8]
   23a68:	ldr	r0, [r0, #4]
   23a6c:	movw	r1, #0
   23a70:	sub	r0, r1, r0
   23a74:	str	r0, [sp, #16]
   23a78:	ldr	r0, [sp, #16]
   23a7c:	str	r0, [fp, #-16]
   23a80:	ldr	r0, [fp, #-12]
   23a84:	ldr	r0, [r0, #4]
   23a88:	cmp	r0, #0
   23a8c:	blt	23aa0 <__assert_fail@plt+0x1271c>
   23a90:	ldr	r0, [fp, #-12]
   23a94:	ldr	r0, [r0, #4]
   23a98:	str	r0, [sp, #12]
   23a9c:	b	23ab4 <__assert_fail@plt+0x12730>
   23aa0:	ldr	r0, [fp, #-12]
   23aa4:	ldr	r0, [r0, #4]
   23aa8:	movw	r1, #0
   23aac:	sub	r0, r1, r0
   23ab0:	str	r0, [sp, #12]
   23ab4:	ldr	r0, [sp, #12]
   23ab8:	str	r0, [fp, #-20]	; 0xffffffec
   23abc:	ldr	r0, [fp, #-16]
   23ac0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23ac4:	cmp	r0, r1
   23ac8:	bge	23b08 <__assert_fail@plt+0x12784>
   23acc:	b	23ad0 <__assert_fail@plt+0x1274c>
   23ad0:	ldr	r0, [fp, #-8]
   23ad4:	str	r0, [sp, #24]
   23ad8:	ldr	r0, [fp, #-12]
   23adc:	str	r0, [fp, #-8]
   23ae0:	ldr	r0, [sp, #24]
   23ae4:	str	r0, [fp, #-12]
   23ae8:	b	23aec <__assert_fail@plt+0x12768>
   23aec:	ldr	r0, [fp, #-16]
   23af0:	str	r0, [sp, #20]
   23af4:	ldr	r0, [fp, #-20]	; 0xffffffec
   23af8:	str	r0, [fp, #-16]
   23afc:	ldr	r0, [sp, #20]
   23b00:	str	r0, [fp, #-20]	; 0xffffffec
   23b04:	b	23b08 <__assert_fail@plt+0x12784>
   23b08:	ldr	r0, [fp, #-20]	; 0xffffffec
   23b0c:	cmp	r0, #0
   23b10:	bne	23b24 <__assert_fail@plt+0x127a0>
   23b14:	ldr	r0, [fp, #-4]
   23b18:	movw	r1, #0
   23b1c:	str	r1, [r0, #4]
   23b20:	b	23e44 <__assert_fail@plt+0x12ac0>
   23b24:	ldr	r0, [fp, #-8]
   23b28:	ldr	r0, [r0, #4]
   23b2c:	cmp	r0, #0
   23b30:	movw	r0, #0
   23b34:	movlt	r0, #1
   23b38:	and	r0, r0, #1
   23b3c:	str	r0, [sp, #48]	; 0x30
   23b40:	ldr	r0, [fp, #-12]
   23b44:	ldr	r0, [r0, #4]
   23b48:	cmp	r0, #0
   23b4c:	movw	r0, #0
   23b50:	movlt	r0, #1
   23b54:	and	r0, r0, #1
   23b58:	str	r0, [sp, #44]	; 0x2c
   23b5c:	ldr	r0, [sp, #48]	; 0x30
   23b60:	ldr	r1, [sp, #44]	; 0x2c
   23b64:	and	r0, r0, r1
   23b68:	str	r0, [sp, #40]	; 0x28
   23b6c:	ldr	r0, [sp, #48]	; 0x30
   23b70:	movw	r1, #0
   23b74:	sub	r0, r1, r0
   23b78:	str	r0, [fp, #-44]	; 0xffffffd4
   23b7c:	ldr	r0, [sp, #44]	; 0x2c
   23b80:	sub	r0, r1, r0
   23b84:	str	r0, [fp, #-48]	; 0xffffffd0
   23b88:	ldr	r0, [sp, #40]	; 0x28
   23b8c:	sub	r0, r1, r0
   23b90:	str	r0, [sp, #52]	; 0x34
   23b94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23b98:	cmp	r0, #0
   23b9c:	beq	23bac <__assert_fail@plt+0x12828>
   23ba0:	ldr	r0, [fp, #-16]
   23ba4:	str	r0, [sp, #8]
   23ba8:	b	23bb4 <__assert_fail@plt+0x12830>
   23bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   23bb0:	str	r0, [sp, #8]
   23bb4:	ldr	r0, [sp, #8]
   23bb8:	str	r0, [fp, #-24]	; 0xffffffe8
   23bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23bc0:	ldr	r1, [sp, #40]	; 0x28
   23bc4:	add	r0, r0, r1
   23bc8:	ldr	r1, [fp, #-4]
   23bcc:	ldr	r1, [r1]
   23bd0:	cmp	r0, r1
   23bd4:	ble	23bf4 <__assert_fail@plt+0x12870>
   23bd8:	ldr	r0, [fp, #-4]
   23bdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23be0:	ldr	r2, [sp, #40]	; 0x28
   23be4:	add	r1, r1, r2
   23be8:	bl	1d52c <__assert_fail@plt+0xc1a8>
   23bec:	str	r0, [sp, #4]
   23bf0:	b	23c00 <__assert_fail@plt+0x1287c>
   23bf4:	ldr	r0, [fp, #-4]
   23bf8:	ldr	r0, [r0, #8]
   23bfc:	str	r0, [sp, #4]
   23c00:	ldr	r0, [sp, #4]
   23c04:	str	r0, [fp, #-40]	; 0xffffffd8
   23c08:	ldr	r0, [fp, #-8]
   23c0c:	ldr	r0, [r0, #8]
   23c10:	str	r0, [fp, #-32]	; 0xffffffe0
   23c14:	ldr	r0, [fp, #-12]
   23c18:	ldr	r0, [r0, #8]
   23c1c:	str	r0, [fp, #-36]	; 0xffffffdc
   23c20:	movw	r0, #0
   23c24:	str	r0, [fp, #-28]	; 0xffffffe4
   23c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23c2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23c30:	ldr	r0, [r0, r1, lsl #2]
   23c34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23c38:	eor	r0, r0, r1
   23c3c:	ldr	r1, [sp, #48]	; 0x30
   23c40:	add	r0, r0, r1
   23c44:	str	r0, [sp, #36]	; 0x24
   23c48:	ldr	r0, [sp, #36]	; 0x24
   23c4c:	ldr	r1, [sp, #48]	; 0x30
   23c50:	mov	r2, #0
   23c54:	cmp	r0, r1
   23c58:	mov	r0, r2
   23c5c:	movwcc	r0, #1
   23c60:	str	r0, [sp, #48]	; 0x30
   23c64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23c68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23c6c:	ldr	r0, [r0, r1, lsl #2]
   23c70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23c74:	eor	r0, r0, r1
   23c78:	ldr	r1, [sp, #44]	; 0x2c
   23c7c:	add	r0, r0, r1
   23c80:	str	r0, [sp, #32]
   23c84:	ldr	r0, [sp, #32]
   23c88:	ldr	r1, [sp, #44]	; 0x2c
   23c8c:	cmp	r0, r1
   23c90:	mov	r0, r2
   23c94:	movwcc	r0, #1
   23c98:	str	r0, [sp, #44]	; 0x2c
   23c9c:	ldr	r0, [sp, #36]	; 0x24
   23ca0:	ldr	r1, [sp, #32]
   23ca4:	and	r0, r0, r1
   23ca8:	ldr	r1, [sp, #52]	; 0x34
   23cac:	eor	r0, r0, r1
   23cb0:	ldr	r1, [sp, #40]	; 0x28
   23cb4:	add	r0, r0, r1
   23cb8:	str	r0, [sp, #28]
   23cbc:	ldr	r0, [sp, #28]
   23cc0:	ldr	r1, [sp, #40]	; 0x28
   23cc4:	cmp	r0, r1
   23cc8:	movwcc	r2, #1
   23ccc:	str	r2, [sp, #40]	; 0x28
   23cd0:	ldr	r0, [sp, #28]
   23cd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23cd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23cdc:	add	r1, r1, r2, lsl #2
   23ce0:	str	r0, [r1]
   23ce4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23ce8:	add	r0, r0, #1
   23cec:	str	r0, [fp, #-28]	; 0xffffffe4
   23cf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23cf4:	cmp	r0, r1
   23cf8:	blt	23c28 <__assert_fail@plt+0x128a4>
   23cfc:	ldr	r0, [sp, #44]	; 0x2c
   23d00:	cmp	r0, #0
   23d04:	bne	23d0c <__assert_fail@plt+0x12988>
   23d08:	b	23d2c <__assert_fail@plt+0x129a8>
   23d0c:	movw	r0, #30718	; 0x77fe
   23d10:	movt	r0, #3
   23d14:	movw	r1, #28968	; 0x7128
   23d18:	movt	r1, #3
   23d1c:	movw	r2, #3854	; 0xf0e
   23d20:	movw	r3, #30726	; 0x7806
   23d24:	movt	r3, #3
   23d28:	bl	11384 <__assert_fail@plt>
   23d2c:	b	23d30 <__assert_fail@plt+0x129ac>
   23d30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23d34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23d38:	cmp	r0, r1
   23d3c:	bge	23dd4 <__assert_fail@plt+0x12a50>
   23d40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23d44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23d48:	ldr	r0, [r0, r1, lsl #2]
   23d4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23d50:	eor	r0, r0, r1
   23d54:	ldr	r1, [sp, #48]	; 0x30
   23d58:	add	r0, r0, r1
   23d5c:	str	r0, [sp, #36]	; 0x24
   23d60:	ldr	r0, [sp, #36]	; 0x24
   23d64:	ldr	r1, [sp, #48]	; 0x30
   23d68:	mov	r2, #0
   23d6c:	cmp	r0, r1
   23d70:	mov	r0, r2
   23d74:	movwcc	r0, #1
   23d78:	str	r0, [sp, #48]	; 0x30
   23d7c:	ldr	r0, [sp, #36]	; 0x24
   23d80:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23d84:	and	r0, r0, r1
   23d88:	ldr	r1, [sp, #52]	; 0x34
   23d8c:	eor	r0, r0, r1
   23d90:	ldr	r1, [sp, #40]	; 0x28
   23d94:	add	r0, r0, r1
   23d98:	str	r0, [sp, #28]
   23d9c:	ldr	r0, [sp, #28]
   23da0:	ldr	r1, [sp, #40]	; 0x28
   23da4:	cmp	r0, r1
   23da8:	movwcc	r2, #1
   23dac:	str	r2, [sp, #40]	; 0x28
   23db0:	ldr	r0, [sp, #28]
   23db4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23db8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23dbc:	add	r1, r1, r2, lsl #2
   23dc0:	str	r0, [r1]
   23dc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23dc8:	add	r0, r0, #1
   23dcc:	str	r0, [fp, #-28]	; 0xffffffe4
   23dd0:	b	23d30 <__assert_fail@plt+0x129ac>
   23dd4:	ldr	r0, [sp, #40]	; 0x28
   23dd8:	cmp	r0, #0
   23ddc:	beq	23e00 <__assert_fail@plt+0x12a7c>
   23de0:	ldr	r0, [sp, #40]	; 0x28
   23de4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23de8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23dec:	add	r3, r2, #1
   23df0:	str	r3, [fp, #-24]	; 0xffffffe8
   23df4:	add	r1, r1, r2, lsl #2
   23df8:	str	r0, [r1]
   23dfc:	b	23e10 <__assert_fail@plt+0x12a8c>
   23e00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23e04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23e08:	bl	1b08c <__assert_fail@plt+0x9d08>
   23e0c:	str	r0, [fp, #-24]	; 0xffffffe8
   23e10:	ldr	r0, [sp, #52]	; 0x34
   23e14:	cmp	r0, #0
   23e18:	beq	23e30 <__assert_fail@plt+0x12aac>
   23e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23e20:	movw	r1, #0
   23e24:	sub	r0, r1, r0
   23e28:	str	r0, [sp]
   23e2c:	b	23e38 <__assert_fail@plt+0x12ab4>
   23e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23e34:	str	r0, [sp]
   23e38:	ldr	r0, [sp]
   23e3c:	ldr	r1, [fp, #-4]
   23e40:	str	r0, [r1, #4]
   23e44:	mov	sp, fp
   23e48:	pop	{fp, pc}
   23e4c:	push	{fp, lr}
   23e50:	mov	fp, sp
   23e54:	sub	sp, sp, #104	; 0x68
   23e58:	str	r0, [fp, #-4]
   23e5c:	str	r1, [fp, #-8]
   23e60:	str	r2, [fp, #-12]
   23e64:	ldr	r0, [fp, #-8]
   23e68:	ldr	r0, [r0, #4]
   23e6c:	cmp	r0, #0
   23e70:	blt	23e84 <__assert_fail@plt+0x12b00>
   23e74:	ldr	r0, [fp, #-8]
   23e78:	ldr	r0, [r0, #4]
   23e7c:	str	r0, [sp, #16]
   23e80:	b	23e98 <__assert_fail@plt+0x12b14>
   23e84:	ldr	r0, [fp, #-8]
   23e88:	ldr	r0, [r0, #4]
   23e8c:	movw	r1, #0
   23e90:	sub	r0, r1, r0
   23e94:	str	r0, [sp, #16]
   23e98:	ldr	r0, [sp, #16]
   23e9c:	str	r0, [fp, #-16]
   23ea0:	ldr	r0, [fp, #-12]
   23ea4:	ldr	r0, [r0, #4]
   23ea8:	cmp	r0, #0
   23eac:	blt	23ec0 <__assert_fail@plt+0x12b3c>
   23eb0:	ldr	r0, [fp, #-12]
   23eb4:	ldr	r0, [r0, #4]
   23eb8:	str	r0, [sp, #12]
   23ebc:	b	23ed4 <__assert_fail@plt+0x12b50>
   23ec0:	ldr	r0, [fp, #-12]
   23ec4:	ldr	r0, [r0, #4]
   23ec8:	movw	r1, #0
   23ecc:	sub	r0, r1, r0
   23ed0:	str	r0, [sp, #12]
   23ed4:	ldr	r0, [sp, #12]
   23ed8:	str	r0, [fp, #-20]	; 0xffffffec
   23edc:	ldr	r0, [fp, #-16]
   23ee0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23ee4:	cmp	r0, r1
   23ee8:	bge	23f28 <__assert_fail@plt+0x12ba4>
   23eec:	b	23ef0 <__assert_fail@plt+0x12b6c>
   23ef0:	ldr	r0, [fp, #-8]
   23ef4:	str	r0, [sp, #24]
   23ef8:	ldr	r0, [fp, #-12]
   23efc:	str	r0, [fp, #-8]
   23f00:	ldr	r0, [sp, #24]
   23f04:	str	r0, [fp, #-12]
   23f08:	b	23f0c <__assert_fail@plt+0x12b88>
   23f0c:	ldr	r0, [fp, #-16]
   23f10:	str	r0, [sp, #20]
   23f14:	ldr	r0, [fp, #-20]	; 0xffffffec
   23f18:	str	r0, [fp, #-16]
   23f1c:	ldr	r0, [sp, #20]
   23f20:	str	r0, [fp, #-20]	; 0xffffffec
   23f24:	b	23f28 <__assert_fail@plt+0x12ba4>
   23f28:	ldr	r0, [fp, #-20]	; 0xffffffec
   23f2c:	cmp	r0, #0
   23f30:	bne	23f44 <__assert_fail@plt+0x12bc0>
   23f34:	ldr	r0, [fp, #-4]
   23f38:	ldr	r1, [fp, #-8]
   23f3c:	bl	1d61c <__assert_fail@plt+0xc298>
   23f40:	b	24264 <__assert_fail@plt+0x12ee0>
   23f44:	ldr	r0, [fp, #-8]
   23f48:	ldr	r0, [r0, #4]
   23f4c:	cmp	r0, #0
   23f50:	movw	r0, #0
   23f54:	movlt	r0, #1
   23f58:	and	r0, r0, #1
   23f5c:	str	r0, [sp, #48]	; 0x30
   23f60:	ldr	r0, [fp, #-12]
   23f64:	ldr	r0, [r0, #4]
   23f68:	cmp	r0, #0
   23f6c:	movw	r0, #0
   23f70:	movlt	r0, #1
   23f74:	and	r0, r0, #1
   23f78:	str	r0, [sp, #44]	; 0x2c
   23f7c:	ldr	r0, [sp, #48]	; 0x30
   23f80:	ldr	r1, [sp, #44]	; 0x2c
   23f84:	orr	r0, r0, r1
   23f88:	str	r0, [sp, #40]	; 0x28
   23f8c:	ldr	r0, [sp, #48]	; 0x30
   23f90:	movw	r1, #0
   23f94:	sub	r0, r1, r0
   23f98:	str	r0, [fp, #-44]	; 0xffffffd4
   23f9c:	ldr	r0, [sp, #44]	; 0x2c
   23fa0:	sub	r0, r1, r0
   23fa4:	str	r0, [fp, #-48]	; 0xffffffd0
   23fa8:	ldr	r0, [sp, #40]	; 0x28
   23fac:	sub	r0, r1, r0
   23fb0:	str	r0, [sp, #52]	; 0x34
   23fb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23fb8:	cmp	r0, #0
   23fbc:	beq	23fcc <__assert_fail@plt+0x12c48>
   23fc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   23fc4:	str	r0, [sp, #8]
   23fc8:	b	23fd4 <__assert_fail@plt+0x12c50>
   23fcc:	ldr	r0, [fp, #-16]
   23fd0:	str	r0, [sp, #8]
   23fd4:	ldr	r0, [sp, #8]
   23fd8:	str	r0, [fp, #-24]	; 0xffffffe8
   23fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23fe0:	ldr	r1, [sp, #40]	; 0x28
   23fe4:	add	r0, r0, r1
   23fe8:	ldr	r1, [fp, #-4]
   23fec:	ldr	r1, [r1]
   23ff0:	cmp	r0, r1
   23ff4:	ble	24014 <__assert_fail@plt+0x12c90>
   23ff8:	ldr	r0, [fp, #-4]
   23ffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24000:	ldr	r2, [sp, #40]	; 0x28
   24004:	add	r1, r1, r2
   24008:	bl	1d52c <__assert_fail@plt+0xc1a8>
   2400c:	str	r0, [sp, #4]
   24010:	b	24020 <__assert_fail@plt+0x12c9c>
   24014:	ldr	r0, [fp, #-4]
   24018:	ldr	r0, [r0, #8]
   2401c:	str	r0, [sp, #4]
   24020:	ldr	r0, [sp, #4]
   24024:	str	r0, [fp, #-40]	; 0xffffffd8
   24028:	ldr	r0, [fp, #-8]
   2402c:	ldr	r0, [r0, #8]
   24030:	str	r0, [fp, #-32]	; 0xffffffe0
   24034:	ldr	r0, [fp, #-12]
   24038:	ldr	r0, [r0, #8]
   2403c:	str	r0, [fp, #-36]	; 0xffffffdc
   24040:	movw	r0, #0
   24044:	str	r0, [fp, #-28]	; 0xffffffe4
   24048:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2404c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24050:	ldr	r0, [r0, r1, lsl #2]
   24054:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24058:	eor	r0, r0, r1
   2405c:	ldr	r1, [sp, #48]	; 0x30
   24060:	add	r0, r0, r1
   24064:	str	r0, [sp, #36]	; 0x24
   24068:	ldr	r0, [sp, #36]	; 0x24
   2406c:	ldr	r1, [sp, #48]	; 0x30
   24070:	mov	r2, #0
   24074:	cmp	r0, r1
   24078:	mov	r0, r2
   2407c:	movwcc	r0, #1
   24080:	str	r0, [sp, #48]	; 0x30
   24084:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24088:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2408c:	ldr	r0, [r0, r1, lsl #2]
   24090:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24094:	eor	r0, r0, r1
   24098:	ldr	r1, [sp, #44]	; 0x2c
   2409c:	add	r0, r0, r1
   240a0:	str	r0, [sp, #32]
   240a4:	ldr	r0, [sp, #32]
   240a8:	ldr	r1, [sp, #44]	; 0x2c
   240ac:	cmp	r0, r1
   240b0:	mov	r0, r2
   240b4:	movwcc	r0, #1
   240b8:	str	r0, [sp, #44]	; 0x2c
   240bc:	ldr	r0, [sp, #36]	; 0x24
   240c0:	ldr	r1, [sp, #32]
   240c4:	orr	r0, r0, r1
   240c8:	ldr	r1, [sp, #52]	; 0x34
   240cc:	eor	r0, r0, r1
   240d0:	ldr	r1, [sp, #40]	; 0x28
   240d4:	add	r0, r0, r1
   240d8:	str	r0, [sp, #28]
   240dc:	ldr	r0, [sp, #28]
   240e0:	ldr	r1, [sp, #40]	; 0x28
   240e4:	cmp	r0, r1
   240e8:	movwcc	r2, #1
   240ec:	str	r2, [sp, #40]	; 0x28
   240f0:	ldr	r0, [sp, #28]
   240f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   240f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   240fc:	add	r1, r1, r2, lsl #2
   24100:	str	r0, [r1]
   24104:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24108:	add	r0, r0, #1
   2410c:	str	r0, [fp, #-28]	; 0xffffffe4
   24110:	ldr	r1, [fp, #-20]	; 0xffffffec
   24114:	cmp	r0, r1
   24118:	blt	24048 <__assert_fail@plt+0x12cc4>
   2411c:	ldr	r0, [sp, #44]	; 0x2c
   24120:	cmp	r0, #0
   24124:	bne	2412c <__assert_fail@plt+0x12da8>
   24128:	b	2414c <__assert_fail@plt+0x12dc8>
   2412c:	movw	r0, #30718	; 0x77fe
   24130:	movt	r0, #3
   24134:	movw	r1, #28968	; 0x7128
   24138:	movt	r1, #3
   2413c:	movw	r2, #3927	; 0xf57
   24140:	movw	r3, #30799	; 0x784f
   24144:	movt	r3, #3
   24148:	bl	11384 <__assert_fail@plt>
   2414c:	b	24150 <__assert_fail@plt+0x12dcc>
   24150:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24154:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24158:	cmp	r0, r1
   2415c:	bge	241f4 <__assert_fail@plt+0x12e70>
   24160:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24164:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24168:	ldr	r0, [r0, r1, lsl #2]
   2416c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24170:	eor	r0, r0, r1
   24174:	ldr	r1, [sp, #48]	; 0x30
   24178:	add	r0, r0, r1
   2417c:	str	r0, [sp, #36]	; 0x24
   24180:	ldr	r0, [sp, #36]	; 0x24
   24184:	ldr	r1, [sp, #48]	; 0x30
   24188:	mov	r2, #0
   2418c:	cmp	r0, r1
   24190:	mov	r0, r2
   24194:	movwcc	r0, #1
   24198:	str	r0, [sp, #48]	; 0x30
   2419c:	ldr	r0, [sp, #36]	; 0x24
   241a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   241a4:	orr	r0, r0, r1
   241a8:	ldr	r1, [sp, #52]	; 0x34
   241ac:	eor	r0, r0, r1
   241b0:	ldr	r1, [sp, #40]	; 0x28
   241b4:	add	r0, r0, r1
   241b8:	str	r0, [sp, #28]
   241bc:	ldr	r0, [sp, #28]
   241c0:	ldr	r1, [sp, #40]	; 0x28
   241c4:	cmp	r0, r1
   241c8:	movwcc	r2, #1
   241cc:	str	r2, [sp, #40]	; 0x28
   241d0:	ldr	r0, [sp, #28]
   241d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   241d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   241dc:	add	r1, r1, r2, lsl #2
   241e0:	str	r0, [r1]
   241e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   241e8:	add	r0, r0, #1
   241ec:	str	r0, [fp, #-28]	; 0xffffffe4
   241f0:	b	24150 <__assert_fail@plt+0x12dcc>
   241f4:	ldr	r0, [sp, #40]	; 0x28
   241f8:	cmp	r0, #0
   241fc:	beq	24220 <__assert_fail@plt+0x12e9c>
   24200:	ldr	r0, [sp, #40]	; 0x28
   24204:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24208:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2420c:	add	r3, r2, #1
   24210:	str	r3, [fp, #-24]	; 0xffffffe8
   24214:	add	r1, r1, r2, lsl #2
   24218:	str	r0, [r1]
   2421c:	b	24230 <__assert_fail@plt+0x12eac>
   24220:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24224:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24228:	bl	1b08c <__assert_fail@plt+0x9d08>
   2422c:	str	r0, [fp, #-24]	; 0xffffffe8
   24230:	ldr	r0, [sp, #52]	; 0x34
   24234:	cmp	r0, #0
   24238:	beq	24250 <__assert_fail@plt+0x12ecc>
   2423c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24240:	movw	r1, #0
   24244:	sub	r0, r1, r0
   24248:	str	r0, [sp]
   2424c:	b	24258 <__assert_fail@plt+0x12ed4>
   24250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24254:	str	r0, [sp]
   24258:	ldr	r0, [sp]
   2425c:	ldr	r1, [fp, #-4]
   24260:	str	r0, [r1, #4]
   24264:	mov	sp, fp
   24268:	pop	{fp, pc}
   2426c:	push	{fp, lr}
   24270:	mov	fp, sp
   24274:	sub	sp, sp, #96	; 0x60
   24278:	str	r0, [fp, #-4]
   2427c:	str	r1, [fp, #-8]
   24280:	str	r2, [fp, #-12]
   24284:	ldr	r0, [fp, #-8]
   24288:	ldr	r0, [r0, #4]
   2428c:	cmp	r0, #0
   24290:	blt	242a4 <__assert_fail@plt+0x12f20>
   24294:	ldr	r0, [fp, #-8]
   24298:	ldr	r0, [r0, #4]
   2429c:	str	r0, [sp, #12]
   242a0:	b	242b8 <__assert_fail@plt+0x12f34>
   242a4:	ldr	r0, [fp, #-8]
   242a8:	ldr	r0, [r0, #4]
   242ac:	movw	r1, #0
   242b0:	sub	r0, r1, r0
   242b4:	str	r0, [sp, #12]
   242b8:	ldr	r0, [sp, #12]
   242bc:	str	r0, [fp, #-16]
   242c0:	ldr	r0, [fp, #-12]
   242c4:	ldr	r0, [r0, #4]
   242c8:	cmp	r0, #0
   242cc:	blt	242e0 <__assert_fail@plt+0x12f5c>
   242d0:	ldr	r0, [fp, #-12]
   242d4:	ldr	r0, [r0, #4]
   242d8:	str	r0, [sp, #8]
   242dc:	b	242f4 <__assert_fail@plt+0x12f70>
   242e0:	ldr	r0, [fp, #-12]
   242e4:	ldr	r0, [r0, #4]
   242e8:	movw	r1, #0
   242ec:	sub	r0, r1, r0
   242f0:	str	r0, [sp, #8]
   242f4:	ldr	r0, [sp, #8]
   242f8:	str	r0, [fp, #-20]	; 0xffffffec
   242fc:	ldr	r0, [fp, #-16]
   24300:	ldr	r1, [fp, #-20]	; 0xffffffec
   24304:	cmp	r0, r1
   24308:	bge	24348 <__assert_fail@plt+0x12fc4>
   2430c:	b	24310 <__assert_fail@plt+0x12f8c>
   24310:	ldr	r0, [fp, #-8]
   24314:	str	r0, [sp, #20]
   24318:	ldr	r0, [fp, #-12]
   2431c:	str	r0, [fp, #-8]
   24320:	ldr	r0, [sp, #20]
   24324:	str	r0, [fp, #-12]
   24328:	b	2432c <__assert_fail@plt+0x12fa8>
   2432c:	ldr	r0, [fp, #-16]
   24330:	str	r0, [sp, #16]
   24334:	ldr	r0, [fp, #-20]	; 0xffffffec
   24338:	str	r0, [fp, #-16]
   2433c:	ldr	r0, [sp, #16]
   24340:	str	r0, [fp, #-20]	; 0xffffffec
   24344:	b	24348 <__assert_fail@plt+0x12fc4>
   24348:	ldr	r0, [fp, #-20]	; 0xffffffec
   2434c:	cmp	r0, #0
   24350:	bne	24364 <__assert_fail@plt+0x12fe0>
   24354:	ldr	r0, [fp, #-4]
   24358:	ldr	r1, [fp, #-8]
   2435c:	bl	1d61c <__assert_fail@plt+0xc298>
   24360:	b	24654 <__assert_fail@plt+0x132d0>
   24364:	ldr	r0, [fp, #-8]
   24368:	ldr	r0, [r0, #4]
   2436c:	cmp	r0, #0
   24370:	movw	r0, #0
   24374:	movlt	r0, #1
   24378:	and	r0, r0, #1
   2437c:	str	r0, [sp, #44]	; 0x2c
   24380:	ldr	r0, [fp, #-12]
   24384:	ldr	r0, [r0, #4]
   24388:	cmp	r0, #0
   2438c:	movw	r0, #0
   24390:	movlt	r0, #1
   24394:	and	r0, r0, #1
   24398:	str	r0, [sp, #40]	; 0x28
   2439c:	ldr	r0, [sp, #44]	; 0x2c
   243a0:	ldr	r1, [sp, #40]	; 0x28
   243a4:	eor	r0, r0, r1
   243a8:	str	r0, [sp, #36]	; 0x24
   243ac:	ldr	r0, [sp, #44]	; 0x2c
   243b0:	movw	r1, #0
   243b4:	sub	r0, r1, r0
   243b8:	str	r0, [fp, #-40]	; 0xffffffd8
   243bc:	ldr	r0, [sp, #40]	; 0x28
   243c0:	sub	r0, r1, r0
   243c4:	str	r0, [fp, #-44]	; 0xffffffd4
   243c8:	ldr	r0, [sp, #36]	; 0x24
   243cc:	sub	r0, r1, r0
   243d0:	str	r0, [sp, #48]	; 0x30
   243d4:	ldr	r0, [fp, #-16]
   243d8:	ldr	r1, [sp, #36]	; 0x24
   243dc:	add	r0, r0, r1
   243e0:	ldr	r1, [fp, #-4]
   243e4:	ldr	r1, [r1]
   243e8:	cmp	r0, r1
   243ec:	ble	2440c <__assert_fail@plt+0x13088>
   243f0:	ldr	r0, [fp, #-4]
   243f4:	ldr	r1, [fp, #-16]
   243f8:	ldr	r2, [sp, #36]	; 0x24
   243fc:	add	r1, r1, r2
   24400:	bl	1d52c <__assert_fail@plt+0xc1a8>
   24404:	str	r0, [sp, #4]
   24408:	b	24418 <__assert_fail@plt+0x13094>
   2440c:	ldr	r0, [fp, #-4]
   24410:	ldr	r0, [r0, #8]
   24414:	str	r0, [sp, #4]
   24418:	ldr	r0, [sp, #4]
   2441c:	str	r0, [fp, #-36]	; 0xffffffdc
   24420:	ldr	r0, [fp, #-8]
   24424:	ldr	r0, [r0, #8]
   24428:	str	r0, [fp, #-28]	; 0xffffffe4
   2442c:	ldr	r0, [fp, #-12]
   24430:	ldr	r0, [r0, #8]
   24434:	str	r0, [fp, #-32]	; 0xffffffe0
   24438:	movw	r0, #0
   2443c:	str	r0, [fp, #-24]	; 0xffffffe8
   24440:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24444:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24448:	ldr	r0, [r0, r1, lsl #2]
   2444c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24450:	eor	r0, r0, r1
   24454:	ldr	r1, [sp, #44]	; 0x2c
   24458:	add	r0, r0, r1
   2445c:	str	r0, [sp, #32]
   24460:	ldr	r0, [sp, #32]
   24464:	ldr	r1, [sp, #44]	; 0x2c
   24468:	mov	r2, #0
   2446c:	cmp	r0, r1
   24470:	mov	r0, r2
   24474:	movwcc	r0, #1
   24478:	str	r0, [sp, #44]	; 0x2c
   2447c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24484:	ldr	r0, [r0, r1, lsl #2]
   24488:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2448c:	eor	r0, r0, r1
   24490:	ldr	r1, [sp, #40]	; 0x28
   24494:	add	r0, r0, r1
   24498:	str	r0, [sp, #28]
   2449c:	ldr	r0, [sp, #28]
   244a0:	ldr	r1, [sp, #40]	; 0x28
   244a4:	cmp	r0, r1
   244a8:	mov	r0, r2
   244ac:	movwcc	r0, #1
   244b0:	str	r0, [sp, #40]	; 0x28
   244b4:	ldr	r0, [sp, #32]
   244b8:	ldr	r1, [sp, #28]
   244bc:	eor	r0, r0, r1
   244c0:	ldr	r1, [sp, #48]	; 0x30
   244c4:	eor	r0, r0, r1
   244c8:	ldr	r1, [sp, #36]	; 0x24
   244cc:	add	r0, r0, r1
   244d0:	str	r0, [sp, #24]
   244d4:	ldr	r0, [sp, #24]
   244d8:	ldr	r1, [sp, #36]	; 0x24
   244dc:	cmp	r0, r1
   244e0:	movwcc	r2, #1
   244e4:	str	r2, [sp, #36]	; 0x24
   244e8:	ldr	r0, [sp, #24]
   244ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   244f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   244f4:	add	r1, r1, r2, lsl #2
   244f8:	str	r0, [r1]
   244fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24500:	add	r0, r0, #1
   24504:	str	r0, [fp, #-24]	; 0xffffffe8
   24508:	ldr	r1, [fp, #-20]	; 0xffffffec
   2450c:	cmp	r0, r1
   24510:	blt	24440 <__assert_fail@plt+0x130bc>
   24514:	ldr	r0, [sp, #40]	; 0x28
   24518:	cmp	r0, #0
   2451c:	bne	24524 <__assert_fail@plt+0x131a0>
   24520:	b	24544 <__assert_fail@plt+0x131c0>
   24524:	movw	r0, #30718	; 0x77fe
   24528:	movt	r0, #3
   2452c:	movw	r1, #28968	; 0x7128
   24530:	movt	r1, #3
   24534:	movw	r2, #3996	; 0xf9c
   24538:	movw	r3, #30872	; 0x7898
   2453c:	movt	r3, #3
   24540:	bl	11384 <__assert_fail@plt>
   24544:	b	24548 <__assert_fail@plt+0x131c4>
   24548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2454c:	ldr	r1, [fp, #-16]
   24550:	cmp	r0, r1
   24554:	bge	245e4 <__assert_fail@plt+0x13260>
   24558:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2455c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24560:	ldr	r0, [r0, r1, lsl #2]
   24564:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24568:	eor	r0, r0, r1
   2456c:	ldr	r1, [sp, #44]	; 0x2c
   24570:	add	r0, r0, r1
   24574:	str	r0, [sp, #32]
   24578:	ldr	r0, [sp, #32]
   2457c:	ldr	r1, [sp, #44]	; 0x2c
   24580:	mov	r2, #0
   24584:	cmp	r0, r1
   24588:	mov	r0, r2
   2458c:	movwcc	r0, #1
   24590:	str	r0, [sp, #44]	; 0x2c
   24594:	ldr	r0, [sp, #32]
   24598:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2459c:	eor	r0, r0, r1
   245a0:	ldr	r1, [sp, #36]	; 0x24
   245a4:	add	r0, r0, r1
   245a8:	str	r0, [sp, #24]
   245ac:	ldr	r0, [sp, #24]
   245b0:	ldr	r1, [sp, #36]	; 0x24
   245b4:	cmp	r0, r1
   245b8:	movwcc	r2, #1
   245bc:	str	r2, [sp, #36]	; 0x24
   245c0:	ldr	r0, [sp, #24]
   245c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   245c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   245cc:	add	r1, r1, r2, lsl #2
   245d0:	str	r0, [r1]
   245d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   245d8:	add	r0, r0, #1
   245dc:	str	r0, [fp, #-24]	; 0xffffffe8
   245e0:	b	24548 <__assert_fail@plt+0x131c4>
   245e4:	ldr	r0, [sp, #36]	; 0x24
   245e8:	cmp	r0, #0
   245ec:	beq	24610 <__assert_fail@plt+0x1328c>
   245f0:	ldr	r0, [sp, #36]	; 0x24
   245f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   245f8:	ldr	r2, [fp, #-16]
   245fc:	add	r3, r2, #1
   24600:	str	r3, [fp, #-16]
   24604:	add	r1, r1, r2, lsl #2
   24608:	str	r0, [r1]
   2460c:	b	24620 <__assert_fail@plt+0x1329c>
   24610:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24614:	ldr	r1, [fp, #-16]
   24618:	bl	1b08c <__assert_fail@plt+0x9d08>
   2461c:	str	r0, [fp, #-16]
   24620:	ldr	r0, [sp, #48]	; 0x30
   24624:	cmp	r0, #0
   24628:	beq	24640 <__assert_fail@plt+0x132bc>
   2462c:	ldr	r0, [fp, #-16]
   24630:	movw	r1, #0
   24634:	sub	r0, r1, r0
   24638:	str	r0, [sp]
   2463c:	b	24648 <__assert_fail@plt+0x132c4>
   24640:	ldr	r0, [fp, #-16]
   24644:	str	r0, [sp]
   24648:	ldr	r0, [sp]
   2464c:	ldr	r1, [fp, #-4]
   24650:	str	r0, [r1, #4]
   24654:	mov	sp, fp
   24658:	pop	{fp, pc}
   2465c:	push	{fp, lr}
   24660:	mov	fp, sp
   24664:	sub	sp, sp, #16
   24668:	str	r0, [fp, #-4]
   2466c:	str	r1, [sp, #8]
   24670:	movw	r0, #0
   24674:	str	r0, [sp]
   24678:	str	r0, [sp, #4]
   2467c:	ldr	r0, [sp, #4]
   24680:	ldr	r1, [sp, #8]
   24684:	cmp	r0, r1
   24688:	bge	246bc <__assert_fail@plt+0x13338>
   2468c:	ldr	r0, [fp, #-4]
   24690:	ldr	r1, [sp, #4]
   24694:	add	r0, r0, r1, lsl #2
   24698:	ldr	r0, [r0]
   2469c:	bl	246c8 <__assert_fail@plt+0x13344>
   246a0:	ldr	r1, [sp]
   246a4:	add	r0, r1, r0
   246a8:	str	r0, [sp]
   246ac:	ldr	r0, [sp, #4]
   246b0:	add	r0, r0, #1
   246b4:	str	r0, [sp, #4]
   246b8:	b	2467c <__assert_fail@plt+0x132f8>
   246bc:	ldr	r0, [sp]
   246c0:	mov	sp, fp
   246c4:	pop	{fp, pc}
   246c8:	sub	sp, sp, #16
   246cc:	str	r0, [sp, #12]
   246d0:	movw	r0, #16
   246d4:	str	r0, [sp, #4]
   246d8:	movw	r0, #0
   246dc:	str	r0, [sp, #8]
   246e0:	ldr	r0, [sp, #12]
   246e4:	cmp	r0, #0
   246e8:	bls	24798 <__assert_fail@plt+0x13414>
   246ec:	ldr	r0, [sp, #12]
   246f0:	ldr	r1, [sp, #12]
   246f4:	lsr	r1, r1, #1
   246f8:	movw	r2, #21845	; 0x5555
   246fc:	and	r1, r1, r2
   24700:	sub	r0, r0, r1
   24704:	str	r0, [sp]
   24708:	ldr	r0, [sp]
   2470c:	lsr	r0, r0, #2
   24710:	movw	r1, #13107	; 0x3333
   24714:	and	r0, r0, r1
   24718:	ldr	r2, [sp]
   2471c:	and	r1, r2, r1
   24720:	add	r0, r0, r1
   24724:	str	r0, [sp]
   24728:	ldr	r0, [sp]
   2472c:	lsr	r0, r0, #4
   24730:	ldr	r1, [sp]
   24734:	add	r0, r0, r1
   24738:	str	r0, [sp]
   2473c:	ldr	r0, [sp]
   24740:	lsr	r0, r0, #8
   24744:	and	r0, r0, #15
   24748:	ldr	r1, [sp]
   2474c:	and	r1, r1, #15
   24750:	add	r0, r0, r1
   24754:	str	r0, [sp]
   24758:	ldr	r0, [sp]
   2475c:	ldr	r1, [sp, #8]
   24760:	add	r0, r1, r0
   24764:	str	r0, [sp, #8]
   24768:	ldr	r0, [sp, #4]
   2476c:	movw	r1, #32
   24770:	cmp	r1, r0
   24774:	bls	2478c <__assert_fail@plt+0x13408>
   24778:	ldr	r0, [sp, #4]
   2477c:	ldr	r1, [sp, #12]
   24780:	lsr	r0, r1, r0
   24784:	str	r0, [sp, #12]
   24788:	b	24794 <__assert_fail@plt+0x13410>
   2478c:	movw	r0, #0
   24790:	str	r0, [sp, #12]
   24794:	b	246e0 <__assert_fail@plt+0x1335c>
   24798:	ldr	r0, [sp, #8]
   2479c:	add	sp, sp, #16
   247a0:	bx	lr
   247a4:	push	{fp, lr}
   247a8:	mov	fp, sp
   247ac:	sub	sp, sp, #16
   247b0:	str	r0, [sp, #8]
   247b4:	ldr	r0, [sp, #8]
   247b8:	ldr	r0, [r0, #4]
   247bc:	str	r0, [sp, #4]
   247c0:	ldr	r0, [sp, #4]
   247c4:	cmp	r0, #0
   247c8:	bge	247d8 <__assert_fail@plt+0x13454>
   247cc:	mvn	r0, #0
   247d0:	str	r0, [fp, #-4]
   247d4:	b	247ec <__assert_fail@plt+0x13468>
   247d8:	ldr	r0, [sp, #8]
   247dc:	ldr	r0, [r0, #8]
   247e0:	ldr	r1, [sp, #4]
   247e4:	bl	2465c <__assert_fail@plt+0x132d8>
   247e8:	str	r0, [fp, #-4]
   247ec:	ldr	r0, [fp, #-4]
   247f0:	mov	sp, fp
   247f4:	pop	{fp, pc}
   247f8:	push	{fp, lr}
   247fc:	mov	fp, sp
   24800:	sub	sp, sp, #64	; 0x40
   24804:	str	r0, [fp, #-8]
   24808:	str	r1, [fp, #-12]
   2480c:	ldr	r0, [fp, #-8]
   24810:	ldr	r0, [r0, #4]
   24814:	str	r0, [fp, #-16]
   24818:	ldr	r0, [fp, #-12]
   2481c:	ldr	r0, [r0, #4]
   24820:	str	r0, [fp, #-20]	; 0xffffffec
   24824:	ldr	r0, [fp, #-16]
   24828:	ldr	r1, [fp, #-20]	; 0xffffffec
   2482c:	eor	r0, r0, r1
   24830:	cmp	r0, #0
   24834:	bge	24844 <__assert_fail@plt+0x134c0>
   24838:	mvn	r0, #0
   2483c:	str	r0, [fp, #-4]
   24840:	b	24aa8 <__assert_fail@plt+0x13724>
   24844:	ldr	r0, [fp, #-16]
   24848:	cmp	r0, #0
   2484c:	movw	r0, #0
   24850:	movlt	r0, #1
   24854:	and	r0, r0, #1
   24858:	str	r0, [sp, #32]
   2485c:	str	r0, [fp, #-28]	; 0xffffffe4
   24860:	movw	r1, #0
   24864:	sub	r0, r1, r0
   24868:	str	r0, [sp, #20]
   2486c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24870:	cmp	r0, #0
   24874:	beq	248c4 <__assert_fail@plt+0x13540>
   24878:	ldr	r0, [fp, #-20]	; 0xffffffec
   2487c:	cmp	r0, #0
   24880:	bge	24888 <__assert_fail@plt+0x13504>
   24884:	b	248a8 <__assert_fail@plt+0x13524>
   24888:	movw	r0, #30945	; 0x78e1
   2488c:	movt	r0, #3
   24890:	movw	r1, #28968	; 0x7128
   24894:	movt	r1, #3
   24898:	movw	r2, #4079	; 0xfef
   2489c:	movw	r3, #30952	; 0x78e8
   248a0:	movt	r3, #3
   248a4:	bl	11384 <__assert_fail@plt>
   248a8:	ldr	r0, [fp, #-16]
   248ac:	movw	r1, #0
   248b0:	sub	r0, r1, r0
   248b4:	str	r0, [fp, #-16]
   248b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   248bc:	sub	r0, r1, r0
   248c0:	str	r0, [fp, #-20]	; 0xffffffec
   248c4:	ldr	r0, [fp, #-8]
   248c8:	ldr	r0, [r0, #8]
   248cc:	str	r0, [sp, #16]
   248d0:	ldr	r0, [fp, #-12]
   248d4:	ldr	r0, [r0, #8]
   248d8:	str	r0, [sp, #12]
   248dc:	ldr	r0, [fp, #-16]
   248e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   248e4:	cmp	r0, r1
   248e8:	bge	24930 <__assert_fail@plt+0x135ac>
   248ec:	b	248f0 <__assert_fail@plt+0x1356c>
   248f0:	b	248f4 <__assert_fail@plt+0x13570>
   248f4:	ldr	r0, [sp, #16]
   248f8:	str	r0, [sp, #4]
   248fc:	ldr	r0, [sp, #12]
   24900:	str	r0, [sp, #16]
   24904:	ldr	r0, [sp, #4]
   24908:	str	r0, [sp, #12]
   2490c:	b	24910 <__assert_fail@plt+0x1358c>
   24910:	ldr	r0, [fp, #-16]
   24914:	str	r0, [sp]
   24918:	ldr	r0, [fp, #-20]	; 0xffffffec
   2491c:	str	r0, [fp, #-16]
   24920:	ldr	r0, [sp]
   24924:	str	r0, [fp, #-20]	; 0xffffffec
   24928:	b	2492c <__assert_fail@plt+0x135a8>
   2492c:	b	24930 <__assert_fail@plt+0x135ac>
   24930:	movw	r0, #0
   24934:	str	r0, [fp, #-24]	; 0xffffffe8
   24938:	str	r0, [sp, #8]
   2493c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24940:	ldr	r1, [fp, #-20]	; 0xffffffec
   24944:	cmp	r0, r1
   24948:	bge	249f0 <__assert_fail@plt+0x1366c>
   2494c:	ldr	r0, [sp, #16]
   24950:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24954:	ldr	r0, [r0, r1, lsl #2]
   24958:	ldr	r1, [sp, #20]
   2495c:	eor	r0, r0, r1
   24960:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24964:	add	r0, r0, r1
   24968:	str	r0, [sp, #28]
   2496c:	ldr	r0, [sp, #28]
   24970:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24974:	mov	r2, #0
   24978:	cmp	r0, r1
   2497c:	movwcc	r2, #1
   24980:	str	r2, [fp, #-28]	; 0xffffffe4
   24984:	ldr	r0, [sp, #12]
   24988:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2498c:	add	r0, r0, r1, lsl #2
   24990:	ldr	r0, [r0]
   24994:	ldr	r1, [sp, #20]
   24998:	eor	r0, r0, r1
   2499c:	ldr	r1, [sp, #32]
   249a0:	add	r0, r0, r1
   249a4:	str	r0, [sp, #24]
   249a8:	ldr	r0, [sp, #24]
   249ac:	ldr	r1, [sp, #32]
   249b0:	cmp	r0, r1
   249b4:	movw	r0, #0
   249b8:	movcc	r0, #1
   249bc:	and	r0, r0, #1
   249c0:	str	r0, [sp, #32]
   249c4:	ldr	r0, [sp, #28]
   249c8:	ldr	r1, [sp, #24]
   249cc:	eor	r0, r0, r1
   249d0:	bl	246c8 <__assert_fail@plt+0x13344>
   249d4:	ldr	r1, [sp, #8]
   249d8:	add	r0, r1, r0
   249dc:	str	r0, [sp, #8]
   249e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   249e4:	add	r0, r0, #1
   249e8:	str	r0, [fp, #-24]	; 0xffffffe8
   249ec:	b	2493c <__assert_fail@plt+0x135b8>
   249f0:	ldr	r0, [sp, #32]
   249f4:	cmp	r0, #0
   249f8:	bne	24a00 <__assert_fail@plt+0x1367c>
   249fc:	b	24a20 <__assert_fail@plt+0x1369c>
   24a00:	movw	r0, #30718	; 0x77fe
   24a04:	movt	r0, #3
   24a08:	movw	r1, #28968	; 0x7128
   24a0c:	movt	r1, #3
   24a10:	movw	r2, #4100	; 0x1004
   24a14:	movw	r3, #30952	; 0x78e8
   24a18:	movt	r3, #3
   24a1c:	bl	11384 <__assert_fail@plt>
   24a20:	b	24a24 <__assert_fail@plt+0x136a0>
   24a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24a28:	ldr	r1, [fp, #-16]
   24a2c:	cmp	r0, r1
   24a30:	bge	24aa0 <__assert_fail@plt+0x1371c>
   24a34:	ldr	r0, [sp, #16]
   24a38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24a3c:	add	r0, r0, r1, lsl #2
   24a40:	ldr	r0, [r0]
   24a44:	ldr	r1, [sp, #20]
   24a48:	eor	r0, r0, r1
   24a4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24a50:	add	r0, r0, r1
   24a54:	str	r0, [sp, #28]
   24a58:	ldr	r0, [sp, #28]
   24a5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24a60:	cmp	r0, r1
   24a64:	movw	r0, #0
   24a68:	movcc	r0, #1
   24a6c:	and	r0, r0, #1
   24a70:	str	r0, [fp, #-28]	; 0xffffffe4
   24a74:	ldr	r0, [sp, #28]
   24a78:	ldr	r1, [sp, #20]
   24a7c:	eor	r0, r0, r1
   24a80:	bl	246c8 <__assert_fail@plt+0x13344>
   24a84:	ldr	r1, [sp, #8]
   24a88:	add	r0, r1, r0
   24a8c:	str	r0, [sp, #8]
   24a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24a94:	add	r0, r0, #1
   24a98:	str	r0, [fp, #-24]	; 0xffffffe8
   24a9c:	b	24a24 <__assert_fail@plt+0x136a0>
   24aa0:	ldr	r0, [sp, #8]
   24aa4:	str	r0, [fp, #-4]
   24aa8:	ldr	r0, [fp, #-4]
   24aac:	mov	sp, fp
   24ab0:	pop	{fp, pc}
   24ab4:	push	{fp, lr}
   24ab8:	mov	fp, sp
   24abc:	sub	sp, sp, #48	; 0x30
   24ac0:	str	r0, [fp, #-8]
   24ac4:	str	r1, [fp, #-12]
   24ac8:	ldr	r0, [fp, #-8]
   24acc:	ldr	r0, [r0, #4]
   24ad0:	str	r0, [fp, #-20]	; 0xffffffec
   24ad4:	ldr	r0, [fp, #-20]	; 0xffffffec
   24ad8:	cmp	r0, #0
   24adc:	blt	24aec <__assert_fail@plt+0x13768>
   24ae0:	ldr	r0, [fp, #-20]	; 0xffffffec
   24ae4:	str	r0, [sp, #8]
   24ae8:	b	24afc <__assert_fail@plt+0x13778>
   24aec:	ldr	r0, [fp, #-20]	; 0xffffffec
   24af0:	movw	r1, #0
   24af4:	sub	r0, r1, r0
   24af8:	str	r0, [sp, #8]
   24afc:	ldr	r0, [sp, #8]
   24b00:	str	r0, [sp, #24]
   24b04:	ldr	r0, [fp, #-12]
   24b08:	lsr	r0, r0, #5
   24b0c:	str	r0, [sp, #20]
   24b10:	ldr	r0, [sp, #20]
   24b14:	ldr	r1, [sp, #24]
   24b18:	cmp	r0, r1
   24b1c:	blt	24b4c <__assert_fail@plt+0x137c8>
   24b20:	ldr	r0, [fp, #-20]	; 0xffffffec
   24b24:	cmp	r0, #0
   24b28:	blt	24b38 <__assert_fail@plt+0x137b4>
   24b2c:	mvn	r0, #0
   24b30:	str	r0, [sp, #4]
   24b34:	b	24b40 <__assert_fail@plt+0x137bc>
   24b38:	ldr	r0, [fp, #-12]
   24b3c:	str	r0, [sp, #4]
   24b40:	ldr	r0, [sp, #4]
   24b44:	str	r0, [fp, #-4]
   24b48:	b	24c14 <__assert_fail@plt+0x13890>
   24b4c:	ldr	r0, [fp, #-8]
   24b50:	ldr	r0, [r0, #8]
   24b54:	str	r0, [fp, #-16]
   24b58:	mov	r0, #0
   24b5c:	str	r0, [sp, #12]
   24b60:	ldr	r0, [fp, #-16]
   24b64:	ldr	r1, [sp, #20]
   24b68:	add	r0, r0, r1, lsl #2
   24b6c:	ldr	r0, [r0]
   24b70:	str	r0, [sp, #16]
   24b74:	ldr	r0, [fp, #-12]
   24b78:	cmp	r0, #0
   24b7c:	beq	24bf4 <__assert_fail@plt+0x13870>
   24b80:	ldr	r0, [fp, #-20]	; 0xffffffec
   24b84:	cmp	r0, #0
   24b88:	bge	24bd8 <__assert_fail@plt+0x13854>
   24b8c:	ldr	r0, [fp, #-16]
   24b90:	ldr	r1, [sp, #20]
   24b94:	bl	1b054 <__assert_fail@plt+0x9cd0>
   24b98:	str	r0, [sp, #12]
   24b9c:	ldr	r0, [sp, #16]
   24ba0:	mvn	r1, #0
   24ba4:	eor	r0, r0, r1
   24ba8:	ldr	r1, [sp, #12]
   24bac:	add	r0, r0, r1
   24bb0:	str	r0, [sp, #16]
   24bb4:	ldr	r0, [sp, #16]
   24bb8:	ldr	r1, [sp, #12]
   24bbc:	cmp	r0, r1
   24bc0:	movw	r0, #0
   24bc4:	movcs	r0, #1
   24bc8:	and	r0, r0, #1
   24bcc:	movw	r1, #0
   24bd0:	sub	r0, r1, r0
   24bd4:	str	r0, [sp, #12]
   24bd8:	ldr	r0, [fp, #-12]
   24bdc:	and	r0, r0, #31
   24be0:	mvn	r1, #0
   24be4:	lsl	r0, r1, r0
   24be8:	ldr	r1, [sp, #16]
   24bec:	and	r0, r1, r0
   24bf0:	str	r0, [sp, #16]
   24bf4:	ldr	r0, [sp, #16]
   24bf8:	ldr	r1, [sp, #20]
   24bfc:	ldr	r2, [fp, #-16]
   24c00:	ldr	r3, [sp, #24]
   24c04:	ldr	ip, [sp, #12]
   24c08:	str	ip, [sp]
   24c0c:	bl	1c18c <__assert_fail@plt+0xae08>
   24c10:	str	r0, [fp, #-4]
   24c14:	ldr	r0, [fp, #-4]
   24c18:	mov	sp, fp
   24c1c:	pop	{fp, pc}
   24c20:	push	{fp, lr}
   24c24:	mov	fp, sp
   24c28:	sub	sp, sp, #48	; 0x30
   24c2c:	str	r0, [fp, #-8]
   24c30:	str	r1, [fp, #-12]
   24c34:	ldr	r0, [fp, #-8]
   24c38:	ldr	r0, [r0, #4]
   24c3c:	str	r0, [fp, #-20]	; 0xffffffec
   24c40:	ldr	r0, [fp, #-20]	; 0xffffffec
   24c44:	cmp	r0, #0
   24c48:	movw	r0, #0
   24c4c:	movge	r0, #1
   24c50:	and	r0, r0, #1
   24c54:	movw	r1, #0
   24c58:	sub	r0, r1, r0
   24c5c:	str	r0, [sp, #12]
   24c60:	ldr	r0, [fp, #-20]	; 0xffffffec
   24c64:	cmp	r0, #0
   24c68:	blt	24c78 <__assert_fail@plt+0x138f4>
   24c6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24c70:	str	r0, [sp, #8]
   24c74:	b	24c88 <__assert_fail@plt+0x13904>
   24c78:	ldr	r0, [fp, #-20]	; 0xffffffec
   24c7c:	movw	r1, #0
   24c80:	sub	r0, r1, r0
   24c84:	str	r0, [sp, #8]
   24c88:	ldr	r0, [sp, #8]
   24c8c:	str	r0, [sp, #24]
   24c90:	ldr	r0, [fp, #-12]
   24c94:	lsr	r0, r0, #5
   24c98:	str	r0, [sp, #20]
   24c9c:	ldr	r0, [sp, #20]
   24ca0:	ldr	r1, [sp, #24]
   24ca4:	cmp	r0, r1
   24ca8:	blt	24cdc <__assert_fail@plt+0x13958>
   24cac:	ldr	r0, [sp, #12]
   24cb0:	cmp	r0, #0
   24cb4:	beq	24cc4 <__assert_fail@plt+0x13940>
   24cb8:	ldr	r0, [fp, #-12]
   24cbc:	str	r0, [sp, #4]
   24cc0:	b	24cd0 <__assert_fail@plt+0x1394c>
   24cc4:	mvn	r0, #0
   24cc8:	str	r0, [sp, #4]
   24ccc:	b	24cd0 <__assert_fail@plt+0x1394c>
   24cd0:	ldr	r0, [sp, #4]
   24cd4:	str	r0, [fp, #-4]
   24cd8:	b	24d64 <__assert_fail@plt+0x139e0>
   24cdc:	ldr	r0, [fp, #-8]
   24ce0:	ldr	r0, [r0, #8]
   24ce4:	str	r0, [fp, #-16]
   24ce8:	ldr	r0, [fp, #-16]
   24cec:	ldr	r1, [sp, #20]
   24cf0:	add	r0, r0, r1, lsl #2
   24cf4:	ldr	r0, [r0]
   24cf8:	ldr	r1, [sp, #12]
   24cfc:	eor	r0, r0, r1
   24d00:	str	r0, [sp, #16]
   24d04:	ldr	r0, [sp, #12]
   24d08:	cmp	r0, #0
   24d0c:	bne	24d28 <__assert_fail@plt+0x139a4>
   24d10:	ldr	r0, [fp, #-16]
   24d14:	ldr	r1, [sp, #20]
   24d18:	bl	1b054 <__assert_fail@plt+0x9cd0>
   24d1c:	ldr	r1, [sp, #16]
   24d20:	sub	r0, r1, r0
   24d24:	str	r0, [sp, #16]
   24d28:	ldr	r0, [fp, #-12]
   24d2c:	and	r0, r0, #31
   24d30:	mvn	r1, #0
   24d34:	lsl	r0, r1, r0
   24d38:	ldr	r1, [sp, #16]
   24d3c:	and	r0, r1, r0
   24d40:	str	r0, [sp, #16]
   24d44:	ldr	r0, [sp, #16]
   24d48:	ldr	r1, [sp, #20]
   24d4c:	ldr	r2, [fp, #-16]
   24d50:	ldr	r3, [sp, #24]
   24d54:	ldr	ip, [sp, #12]
   24d58:	str	ip, [sp]
   24d5c:	bl	1c18c <__assert_fail@plt+0xae08>
   24d60:	str	r0, [fp, #-4]
   24d64:	ldr	r0, [fp, #-4]
   24d68:	mov	sp, fp
   24d6c:	pop	{fp, pc}
   24d70:	push	{fp, lr}
   24d74:	mov	fp, sp
   24d78:	sub	sp, sp, #24
   24d7c:	str	r0, [fp, #-4]
   24d80:	ldr	r0, [fp, #-4]
   24d84:	cmp	r0, #0
   24d88:	bls	24d90 <__assert_fail@plt+0x13a0c>
   24d8c:	b	24db0 <__assert_fail@plt+0x13a2c>
   24d90:	movw	r0, #33720	; 0x83b8
   24d94:	movt	r0, #3
   24d98:	movw	r1, #28968	; 0x7128
   24d9c:	movt	r1, #3
   24da0:	movw	r2, #1210	; 0x4ba
   24da4:	movw	r3, #33726	; 0x83be
   24da8:	movt	r3, #3
   24dac:	bl	11384 <__assert_fail@plt>
   24db0:	b	24db4 <__assert_fail@plt+0x13a30>
   24db4:	ldr	r0, [fp, #-4]
   24db8:	str	r0, [sp, #12]
   24dbc:	movw	r0, #0
   24dc0:	str	r0, [sp, #8]
   24dc4:	movw	r0, #8
   24dc8:	str	r0, [sp, #4]
   24dcc:	ldr	r0, [sp, #4]
   24dd0:	movw	r1, #32
   24dd4:	cmp	r1, r0
   24dd8:	bls	24e14 <__assert_fail@plt+0x13a90>
   24ddc:	b	24de0 <__assert_fail@plt+0x13a5c>
   24de0:	ldr	r0, [sp, #12]
   24de4:	and	r0, r0, #-16777216	; 0xff000000
   24de8:	cmp	r0, #0
   24dec:	bne	24e10 <__assert_fail@plt+0x13a8c>
   24df0:	ldr	r0, [sp, #4]
   24df4:	ldr	r1, [sp, #12]
   24df8:	lsl	r0, r1, r0
   24dfc:	str	r0, [sp, #12]
   24e00:	ldr	r0, [sp, #8]
   24e04:	add	r0, r0, #8
   24e08:	str	r0, [sp, #8]
   24e0c:	b	24de0 <__assert_fail@plt+0x13a5c>
   24e10:	b	24e14 <__assert_fail@plt+0x13a90>
   24e14:	b	24e18 <__assert_fail@plt+0x13a94>
   24e18:	ldr	r0, [sp, #12]
   24e1c:	and	r0, r0, #-2147483648	; 0x80000000
   24e20:	cmp	r0, #0
   24e24:	bne	24e44 <__assert_fail@plt+0x13ac0>
   24e28:	ldr	r0, [sp, #12]
   24e2c:	lsl	r0, r0, #1
   24e30:	str	r0, [sp, #12]
   24e34:	ldr	r0, [sp, #8]
   24e38:	add	r0, r0, #1
   24e3c:	str	r0, [sp, #8]
   24e40:	b	24e18 <__assert_fail@plt+0x13a94>
   24e44:	ldr	r0, [sp, #8]
   24e48:	str	r0, [fp, #-8]
   24e4c:	ldr	r0, [fp, #-8]
   24e50:	movw	r1, #32
   24e54:	sub	r0, r1, r0
   24e58:	mov	sp, fp
   24e5c:	pop	{fp, pc}
   24e60:	push	{fp, lr}
   24e64:	mov	fp, sp
   24e68:	sub	sp, sp, #24
   24e6c:	str	r0, [fp, #-4]
   24e70:	str	r1, [fp, #-8]
   24e74:	ldr	r0, [fp, #-8]
   24e78:	cmp	r0, #0
   24e7c:	bls	24e84 <__assert_fail@plt+0x13b00>
   24e80:	b	24ea4 <__assert_fail@plt+0x13b20>
   24e84:	movw	r0, #33773	; 0x83ed
   24e88:	movt	r0, #3
   24e8c:	movw	r1, #28968	; 0x7128
   24e90:	movt	r1, #3
   24e94:	movw	r2, #902	; 0x386
   24e98:	movw	r3, #33779	; 0x83f3
   24e9c:	movt	r3, #3
   24ea0:	bl	11384 <__assert_fail@plt>
   24ea4:	b	24ea8 <__assert_fail@plt+0x13b24>
   24ea8:	ldr	r0, [fp, #-8]
   24eac:	str	r0, [sp, #8]
   24eb0:	movw	r0, #0
   24eb4:	str	r0, [sp, #4]
   24eb8:	movw	r0, #8
   24ebc:	str	r0, [sp]
   24ec0:	ldr	r0, [sp]
   24ec4:	movw	r1, #32
   24ec8:	cmp	r1, r0
   24ecc:	bls	24f08 <__assert_fail@plt+0x13b84>
   24ed0:	b	24ed4 <__assert_fail@plt+0x13b50>
   24ed4:	ldr	r0, [sp, #8]
   24ed8:	and	r0, r0, #-16777216	; 0xff000000
   24edc:	cmp	r0, #0
   24ee0:	bne	24f04 <__assert_fail@plt+0x13b80>
   24ee4:	ldr	r0, [sp]
   24ee8:	ldr	r1, [sp, #8]
   24eec:	lsl	r0, r1, r0
   24ef0:	str	r0, [sp, #8]
   24ef4:	ldr	r0, [sp, #4]
   24ef8:	add	r0, r0, #8
   24efc:	str	r0, [sp, #4]
   24f00:	b	24ed4 <__assert_fail@plt+0x13b50>
   24f04:	b	24f08 <__assert_fail@plt+0x13b84>
   24f08:	b	24f0c <__assert_fail@plt+0x13b88>
   24f0c:	ldr	r0, [sp, #8]
   24f10:	and	r0, r0, #-2147483648	; 0x80000000
   24f14:	cmp	r0, #0
   24f18:	bne	24f38 <__assert_fail@plt+0x13bb4>
   24f1c:	ldr	r0, [sp, #8]
   24f20:	lsl	r0, r0, #1
   24f24:	str	r0, [sp, #8]
   24f28:	ldr	r0, [sp, #4]
   24f2c:	add	r0, r0, #1
   24f30:	str	r0, [sp, #4]
   24f34:	b	24f0c <__assert_fail@plt+0x13b88>
   24f38:	ldr	r0, [sp, #4]
   24f3c:	str	r0, [sp, #12]
   24f40:	ldr	r0, [sp, #12]
   24f44:	ldr	r1, [fp, #-4]
   24f48:	str	r0, [r1]
   24f4c:	ldr	r0, [fp, #-8]
   24f50:	ldr	r1, [sp, #12]
   24f54:	lsl	r0, r0, r1
   24f58:	ldr	r1, [fp, #-4]
   24f5c:	str	r0, [r1, #4]
   24f60:	ldr	r0, [fp, #-4]
   24f64:	ldr	r0, [r0, #4]
   24f68:	movw	r1, #0
   24f6c:	bl	1c530 <__assert_fail@plt+0xb1ac>
   24f70:	ldr	r1, [fp, #-4]
   24f74:	str	r0, [r1, #12]
   24f78:	mov	sp, fp
   24f7c:	pop	{fp, pc}
   24f80:	push	{fp, lr}
   24f84:	mov	fp, sp
   24f88:	sub	sp, sp, #104	; 0x68
   24f8c:	str	r0, [fp, #-4]
   24f90:	str	r1, [fp, #-8]
   24f94:	str	r2, [fp, #-12]
   24f98:	str	r3, [fp, #-16]
   24f9c:	movw	r0, #0
   24fa0:	str	r0, [fp, #-32]	; 0xffffffe0
   24fa4:	str	r0, [fp, #-36]	; 0xffffffdc
   24fa8:	ldr	r0, [fp, #-16]
   24fac:	ldr	r0, [r0]
   24fb0:	cmp	r0, #0
   24fb4:	bls	2500c <__assert_fail@plt+0x13c88>
   24fb8:	ldr	r0, [fp, #-4]
   24fbc:	str	r0, [fp, #-32]	; 0xffffffe0
   24fc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24fc4:	movw	r1, #0
   24fc8:	cmp	r0, r1
   24fcc:	bne	24fe4 <__assert_fail@plt+0x13c60>
   24fd0:	ldr	r0, [fp, #-12]
   24fd4:	str	r0, [fp, #-36]	; 0xffffffdc
   24fd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24fdc:	bl	1d348 <__assert_fail@plt+0xbfc4>
   24fe0:	str	r0, [fp, #-32]	; 0xffffffe0
   24fe4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24fe8:	ldr	r1, [fp, #-8]
   24fec:	ldr	r2, [fp, #-12]
   24ff0:	ldr	r3, [fp, #-16]
   24ff4:	ldr	r3, [r3]
   24ff8:	bl	1be0c <__assert_fail@plt+0xaa88>
   24ffc:	str	r0, [fp, #-28]	; 0xffffffe4
   25000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25004:	str	r0, [fp, #-8]
   25008:	b	25014 <__assert_fail@plt+0x13c90>
   2500c:	movw	r0, #0
   25010:	str	r0, [fp, #-28]	; 0xffffffe4
   25014:	ldr	r0, [fp, #-16]
   25018:	ldr	r0, [r0, #4]
   2501c:	str	r0, [fp, #-20]	; 0xffffffec
   25020:	ldr	r0, [fp, #-16]
   25024:	ldr	r0, [r0, #12]
   25028:	str	r0, [fp, #-24]	; 0xffffffe8
   2502c:	ldr	r0, [fp, #-12]
   25030:	mvn	r1, #0
   25034:	add	r0, r0, r1
   25038:	str	r0, [fp, #-12]
   2503c:	cmp	r0, #0
   25040:	blt	25274 <__assert_fail@plt+0x13ef0>
   25044:	b	25048 <__assert_fail@plt+0x13cc4>
   25048:	b	2504c <__assert_fail@plt+0x13cc8>
   2504c:	movw	r0, #32
   25050:	str	r0, [sp, #44]	; 0x2c
   25054:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25058:	str	r0, [sp, #8]
   2505c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25060:	str	r0, [sp, #4]
   25064:	ldr	r0, [sp, #8]
   25068:	movw	r1, #65535	; 0xffff
   2506c:	and	r0, r0, r1
   25070:	str	r0, [sp, #24]
   25074:	ldr	r0, [sp, #8]
   25078:	lsr	r0, r0, #16
   2507c:	str	r0, [sp, #16]
   25080:	ldr	r0, [sp, #4]
   25084:	and	r0, r0, r1
   25088:	str	r0, [sp, #20]
   2508c:	ldr	r0, [sp, #4]
   25090:	lsr	r0, r0, #16
   25094:	str	r0, [sp, #12]
   25098:	ldr	r0, [sp, #24]
   2509c:	ldr	r1, [sp, #20]
   250a0:	mul	r0, r0, r1
   250a4:	str	r0, [sp, #40]	; 0x28
   250a8:	ldr	r0, [sp, #24]
   250ac:	ldr	r1, [sp, #12]
   250b0:	mul	r0, r0, r1
   250b4:	str	r0, [sp, #36]	; 0x24
   250b8:	ldr	r0, [sp, #16]
   250bc:	ldr	r1, [sp, #20]
   250c0:	mul	r0, r0, r1
   250c4:	str	r0, [sp, #32]
   250c8:	ldr	r0, [sp, #16]
   250cc:	ldr	r1, [sp, #12]
   250d0:	mul	r0, r0, r1
   250d4:	str	r0, [sp, #28]
   250d8:	ldr	r0, [sp, #40]	; 0x28
   250dc:	lsr	r0, r0, #16
   250e0:	ldr	r1, [sp, #36]	; 0x24
   250e4:	add	r0, r1, r0
   250e8:	str	r0, [sp, #36]	; 0x24
   250ec:	ldr	r0, [sp, #32]
   250f0:	ldr	r1, [sp, #36]	; 0x24
   250f4:	add	r0, r1, r0
   250f8:	str	r0, [sp, #36]	; 0x24
   250fc:	ldr	r0, [sp, #36]	; 0x24
   25100:	ldr	r1, [sp, #32]
   25104:	cmp	r0, r1
   25108:	bcs	25118 <__assert_fail@plt+0x13d94>
   2510c:	ldr	r0, [sp, #28]
   25110:	add	r0, r0, #65536	; 0x10000
   25114:	str	r0, [sp, #28]
   25118:	ldr	r0, [sp, #28]
   2511c:	ldr	r1, [sp, #36]	; 0x24
   25120:	lsr	r1, r1, #16
   25124:	add	r0, r0, r1
   25128:	str	r0, [fp, #-44]	; 0xffffffd4
   2512c:	ldr	r0, [sp, #36]	; 0x24
   25130:	lsl	r0, r0, #16
   25134:	ldr	r1, [sp, #40]	; 0x28
   25138:	movw	r2, #65535	; 0xffff
   2513c:	and	r1, r1, r2
   25140:	add	r0, r0, r1
   25144:	str	r0, [fp, #-48]	; 0xffffffd0
   25148:	b	2514c <__assert_fail@plt+0x13dc8>
   2514c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   25150:	ldr	r1, [fp, #-8]
   25154:	ldr	r2, [fp, #-12]
   25158:	add	r1, r1, r2, lsl #2
   2515c:	ldr	r1, [r1]
   25160:	add	r0, r0, r1
   25164:	str	r0, [sp]
   25168:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2516c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25170:	add	r1, r1, #1
   25174:	add	r0, r0, r1
   25178:	ldr	r1, [sp]
   2517c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25180:	cmp	r1, r2
   25184:	movw	r1, #0
   25188:	movcc	r1, #1
   2518c:	and	r1, r1, #1
   25190:	add	r0, r0, r1
   25194:	str	r0, [fp, #-44]	; 0xffffffd4
   25198:	ldr	r0, [sp]
   2519c:	str	r0, [fp, #-48]	; 0xffffffd0
   251a0:	ldr	r0, [fp, #-8]
   251a4:	ldr	r1, [fp, #-12]
   251a8:	add	r0, r0, r1, lsl #2
   251ac:	ldr	r0, [r0]
   251b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   251b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   251b8:	mul	r1, r1, r2
   251bc:	sub	r0, r0, r1
   251c0:	str	r0, [sp, #52]	; 0x34
   251c4:	ldr	r0, [sp, #52]	; 0x34
   251c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   251cc:	cmp	r0, r1
   251d0:	movw	r0, #0
   251d4:	movhi	r0, #1
   251d8:	and	r0, r0, #1
   251dc:	movw	r1, #0
   251e0:	sub	r0, r1, r0
   251e4:	str	r0, [sp, #48]	; 0x30
   251e8:	ldr	r0, [sp, #48]	; 0x30
   251ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   251f0:	add	r0, r1, r0
   251f4:	str	r0, [fp, #-44]	; 0xffffffd4
   251f8:	ldr	r0, [sp, #48]	; 0x30
   251fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   25200:	and	r0, r0, r1
   25204:	ldr	r1, [sp, #52]	; 0x34
   25208:	add	r0, r1, r0
   2520c:	str	r0, [sp, #52]	; 0x34
   25210:	ldr	r0, [sp, #52]	; 0x34
   25214:	ldr	r1, [fp, #-20]	; 0xffffffec
   25218:	cmp	r0, r1
   2521c:	bcc	2523c <__assert_fail@plt+0x13eb8>
   25220:	ldr	r0, [fp, #-20]	; 0xffffffec
   25224:	ldr	r1, [sp, #52]	; 0x34
   25228:	sub	r0, r1, r0
   2522c:	str	r0, [sp, #52]	; 0x34
   25230:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25234:	add	r0, r0, #1
   25238:	str	r0, [fp, #-44]	; 0xffffffd4
   2523c:	ldr	r0, [sp, #52]	; 0x34
   25240:	str	r0, [fp, #-28]	; 0xffffffe4
   25244:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25248:	str	r0, [fp, #-40]	; 0xffffffd8
   2524c:	ldr	r0, [fp, #-4]
   25250:	movw	r1, #0
   25254:	cmp	r0, r1
   25258:	beq	25270 <__assert_fail@plt+0x13eec>
   2525c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25260:	ldr	r1, [fp, #-4]
   25264:	ldr	r2, [fp, #-12]
   25268:	add	r1, r1, r2, lsl #2
   2526c:	str	r0, [r1]
   25270:	b	2502c <__assert_fail@plt+0x13ca8>
   25274:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25278:	cmp	r0, #0
   2527c:	beq	2528c <__assert_fail@plt+0x13f08>
   25280:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25284:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25288:	bl	1d3c0 <__assert_fail@plt+0xc03c>
   2528c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25290:	ldr	r1, [fp, #-16]
   25294:	ldr	r1, [r1]
   25298:	lsr	r0, r0, r1
   2529c:	mov	sp, fp
   252a0:	pop	{fp, pc}
   252a4:	push	{fp, lr}
   252a8:	mov	fp, sp
   252ac:	sub	sp, sp, #80	; 0x50
   252b0:	str	r0, [fp, #-8]
   252b4:	str	r1, [fp, #-12]
   252b8:	str	r2, [fp, #-16]
   252bc:	movw	r0, #31090	; 0x7972
   252c0:	movt	r0, #3
   252c4:	str	r0, [fp, #-24]	; 0xffffffe8
   252c8:	ldr	r0, [fp, #-12]
   252cc:	cmp	r0, #1
   252d0:	ble	25310 <__assert_fail@plt+0x13f8c>
   252d4:	ldr	r0, [fp, #-12]
   252d8:	cmp	r0, #36	; 0x24
   252dc:	bgt	252f0 <__assert_fail@plt+0x13f6c>
   252e0:	movw	r0, #31153	; 0x79b1
   252e4:	movt	r0, #3
   252e8:	str	r0, [fp, #-24]	; 0xffffffe8
   252ec:	b	2530c <__assert_fail@plt+0x13f88>
   252f0:	ldr	r0, [fp, #-12]
   252f4:	cmp	r0, #62	; 0x3e
   252f8:	ble	25308 <__assert_fail@plt+0x13f84>
   252fc:	movw	r0, #0
   25300:	str	r0, [fp, #-4]
   25304:	b	255ec <__assert_fail@plt+0x14268>
   25308:	b	2530c <__assert_fail@plt+0x13f88>
   2530c:	b	25358 <__assert_fail@plt+0x13fd4>
   25310:	ldr	r0, [fp, #-12]
   25314:	cmn	r0, #1
   25318:	blt	25328 <__assert_fail@plt+0x13fa4>
   2531c:	movw	r0, #10
   25320:	str	r0, [fp, #-12]
   25324:	b	25354 <__assert_fail@plt+0x13fd0>
   25328:	ldr	r0, [fp, #-12]
   2532c:	movw	r1, #0
   25330:	sub	r0, r1, r0
   25334:	str	r0, [fp, #-12]
   25338:	ldr	r0, [fp, #-12]
   2533c:	cmp	r0, #36	; 0x24
   25340:	ble	25350 <__assert_fail@plt+0x13fcc>
   25344:	movw	r0, #0
   25348:	str	r0, [fp, #-4]
   2534c:	b	255ec <__assert_fail@plt+0x14268>
   25350:	b	25354 <__assert_fail@plt+0x13fd0>
   25354:	b	25358 <__assert_fail@plt+0x13fd4>
   25358:	ldr	r0, [fp, #-16]
   2535c:	ldr	r1, [fp, #-12]
   25360:	bl	22598 <__assert_fail@plt+0x11214>
   25364:	add	r0, r0, #1
   25368:	str	r0, [fp, #-36]	; 0xffffffdc
   2536c:	ldr	r0, [fp, #-8]
   25370:	movw	r1, #0
   25374:	cmp	r0, r1
   25378:	bne	253b0 <__assert_fail@plt+0x1402c>
   2537c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25380:	add	r0, r0, #1
   25384:	str	r0, [sp, #40]	; 0x28
   25388:	movw	r0, #37156	; 0x9124
   2538c:	movt	r0, #4
   25390:	ldr	r0, [r0]
   25394:	ldr	r1, [sp, #40]	; 0x28
   25398:	str	r0, [sp, #24]
   2539c:	mov	r0, r1
   253a0:	ldr	r1, [sp, #24]
   253a4:	blx	r1
   253a8:	str	r0, [fp, #-8]
   253ac:	b	253b8 <__assert_fail@plt+0x14034>
   253b0:	movw	r0, #0
   253b4:	str	r0, [sp, #40]	; 0x28
   253b8:	ldr	r0, [fp, #-16]
   253bc:	ldr	r0, [r0, #4]
   253c0:	cmp	r0, #0
   253c4:	blt	253d8 <__assert_fail@plt+0x14054>
   253c8:	ldr	r0, [fp, #-16]
   253cc:	ldr	r0, [r0, #4]
   253d0:	str	r0, [sp, #20]
   253d4:	b	253ec <__assert_fail@plt+0x14068>
   253d8:	ldr	r0, [fp, #-16]
   253dc:	ldr	r0, [r0, #4]
   253e0:	movw	r1, #0
   253e4:	sub	r0, r1, r0
   253e8:	str	r0, [sp, #20]
   253ec:	ldr	r0, [sp, #20]
   253f0:	str	r0, [fp, #-28]	; 0xffffffe4
   253f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   253f8:	cmp	r0, #0
   253fc:	bne	25418 <__assert_fail@plt+0x14094>
   25400:	ldr	r0, [fp, #-8]
   25404:	movw	r1, #48	; 0x30
   25408:	strb	r1, [r0]
   2540c:	movw	r0, #1
   25410:	str	r0, [fp, #-36]	; 0xffffffdc
   25414:	b	25578 <__assert_fail@plt+0x141f4>
   25418:	movw	r0, #0
   2541c:	str	r0, [fp, #-32]	; 0xffffffe0
   25420:	ldr	r0, [fp, #-16]
   25424:	ldr	r0, [r0, #4]
   25428:	cmp	r0, #0
   2542c:	bge	2544c <__assert_fail@plt+0x140c8>
   25430:	ldr	r0, [fp, #-8]
   25434:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25438:	add	r2, r1, #1
   2543c:	str	r2, [fp, #-32]	; 0xffffffe0
   25440:	add	r0, r0, r1
   25444:	movw	r1, #45	; 0x2d
   25448:	strb	r1, [r0]
   2544c:	ldr	r0, [fp, #-12]
   25450:	bl	1ca24 <__assert_fail@plt+0xb6a0>
   25454:	str	r0, [fp, #-20]	; 0xffffffec
   25458:	ldr	r0, [fp, #-20]	; 0xffffffec
   2545c:	cmp	r0, #0
   25460:	beq	254ac <__assert_fail@plt+0x14128>
   25464:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25468:	ldr	r1, [fp, #-8]
   2546c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25470:	add	r1, r1, r2
   25474:	ldr	r2, [fp, #-20]	; 0xffffffec
   25478:	ldr	r3, [fp, #-16]
   2547c:	ldr	r3, [r3, #8]
   25480:	ldr	ip, [fp, #-28]	; 0xffffffe4
   25484:	str	r0, [sp, #16]
   25488:	mov	r0, r1
   2548c:	mov	r1, r2
   25490:	mov	r2, r3
   25494:	mov	r3, ip
   25498:	bl	1cb24 <__assert_fail@plt+0xb7a0>
   2549c:	ldr	r1, [sp, #16]
   254a0:	add	r0, r1, r0
   254a4:	str	r0, [fp, #-36]	; 0xffffffdc
   254a8:	b	25524 <__assert_fail@plt+0x141a0>
   254ac:	ldr	r1, [fp, #-12]
   254b0:	add	r0, sp, #32
   254b4:	bl	1cc74 <__assert_fail@plt+0xb8f0>
   254b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   254bc:	bl	1d348 <__assert_fail@plt+0xbfc4>
   254c0:	str	r0, [sp, #28]
   254c4:	ldr	r0, [sp, #28]
   254c8:	ldr	r1, [fp, #-16]
   254cc:	ldr	r1, [r1, #8]
   254d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   254d4:	bl	1af18 <__assert_fail@plt+0x9b94>
   254d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   254dc:	ldr	r1, [fp, #-8]
   254e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   254e4:	add	r1, r1, r2
   254e8:	ldr	r2, [fp, #-12]
   254ec:	ldr	r3, [sp, #28]
   254f0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   254f4:	str	r0, [sp, #12]
   254f8:	mov	r0, r1
   254fc:	mov	r1, r2
   25500:	add	r2, sp, #32
   25504:	str	ip, [sp]
   25508:	bl	1ccf0 <__assert_fail@plt+0xb96c>
   2550c:	ldr	r1, [sp, #12]
   25510:	add	r0, r1, r0
   25514:	str	r0, [fp, #-36]	; 0xffffffdc
   25518:	ldr	r0, [sp, #28]
   2551c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25520:	bl	1d3c0 <__assert_fail@plt+0xc03c>
   25524:	b	25528 <__assert_fail@plt+0x141a4>
   25528:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2552c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25530:	cmp	r0, r1
   25534:	bcs	25574 <__assert_fail@plt+0x141f0>
   25538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2553c:	ldr	r1, [fp, #-8]
   25540:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25544:	add	r1, r1, r2
   25548:	ldrb	r1, [r1]
   2554c:	add	r0, r0, r1
   25550:	ldrb	r0, [r0]
   25554:	ldr	r1, [fp, #-8]
   25558:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2555c:	add	r1, r1, r2
   25560:	strb	r0, [r1]
   25564:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25568:	add	r0, r0, #1
   2556c:	str	r0, [fp, #-32]	; 0xffffffe0
   25570:	b	25528 <__assert_fail@plt+0x141a4>
   25574:	b	25578 <__assert_fail@plt+0x141f4>
   25578:	ldr	r0, [fp, #-8]
   2557c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25580:	add	r0, r0, r1
   25584:	movw	r1, #0
   25588:	strb	r1, [r0]
   2558c:	ldr	r0, [sp, #40]	; 0x28
   25590:	cmp	r0, #0
   25594:	beq	255e4 <__assert_fail@plt+0x14260>
   25598:	ldr	r0, [sp, #40]	; 0x28
   2559c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   255a0:	add	r1, r1, #1
   255a4:	cmp	r0, r1
   255a8:	beq	255e4 <__assert_fail@plt+0x14260>
   255ac:	movw	r0, #37160	; 0x9128
   255b0:	movt	r0, #4
   255b4:	ldr	r0, [r0]
   255b8:	ldr	r1, [fp, #-8]
   255bc:	ldr	r2, [sp, #40]	; 0x28
   255c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   255c4:	add	r3, r3, #1
   255c8:	str	r0, [sp, #8]
   255cc:	mov	r0, r1
   255d0:	mov	r1, r2
   255d4:	mov	r2, r3
   255d8:	ldr	r3, [sp, #8]
   255dc:	blx	r3
   255e0:	str	r0, [fp, #-8]
   255e4:	ldr	r0, [fp, #-8]
   255e8:	str	r0, [fp, #-4]
   255ec:	ldr	r0, [fp, #-4]
   255f0:	mov	sp, fp
   255f4:	pop	{fp, pc}
   255f8:	push	{fp, lr}
   255fc:	mov	fp, sp
   25600:	sub	sp, sp, #96	; 0x60
   25604:	str	r0, [fp, #-8]
   25608:	str	r1, [fp, #-12]
   2560c:	str	r2, [fp, #-16]
   25610:	ldr	r0, [fp, #-16]
   25614:	cmp	r0, #0
   25618:	beq	25634 <__assert_fail@plt+0x142b0>
   2561c:	ldr	r0, [fp, #-16]
   25620:	cmp	r0, #2
   25624:	blt	25638 <__assert_fail@plt+0x142b4>
   25628:	ldr	r0, [fp, #-16]
   2562c:	cmp	r0, #62	; 0x3e
   25630:	bgt	25638 <__assert_fail@plt+0x142b4>
   25634:	b	25658 <__assert_fail@plt+0x142d4>
   25638:	movw	r0, #31190	; 0x79d6
   2563c:	movt	r0, #3
   25640:	movw	r1, #28968	; 0x7128
   25644:	movt	r1, #3
   25648:	movw	r2, #4320	; 0x10e0
   2564c:	movw	r3, #31229	; 0x79fd
   25650:	movt	r3, #3
   25654:	bl	11384 <__assert_fail@plt>
   25658:	b	2565c <__assert_fail@plt+0x142d8>
   2565c:	bl	11240 <__ctype_b_loc@plt>
   25660:	ldr	r0, [r0]
   25664:	ldr	r1, [fp, #-12]
   25668:	ldrb	r1, [r1]
   2566c:	mov	r2, r1
   25670:	add	r0, r0, r1, lsl #1
   25674:	ldrh	r0, [r0]
   25678:	and	r0, r0, #8192	; 0x2000
   2567c:	cmp	r0, #0
   25680:	beq	25694 <__assert_fail@plt+0x14310>
   25684:	ldr	r0, [fp, #-12]
   25688:	add	r0, r0, #1
   2568c:	str	r0, [fp, #-12]
   25690:	b	2565c <__assert_fail@plt+0x142d8>
   25694:	ldr	r0, [fp, #-12]
   25698:	ldrb	r0, [r0]
   2569c:	cmp	r0, #45	; 0x2d
   256a0:	movw	r0, #0
   256a4:	moveq	r0, #1
   256a8:	and	r0, r0, #1
   256ac:	str	r0, [sp, #48]	; 0x30
   256b0:	ldr	r0, [sp, #48]	; 0x30
   256b4:	ldr	r1, [fp, #-12]
   256b8:	add	r0, r1, r0
   256bc:	str	r0, [fp, #-12]
   256c0:	ldr	r0, [fp, #-16]
   256c4:	cmp	r0, #0
   256c8:	bne	25768 <__assert_fail@plt+0x143e4>
   256cc:	ldr	r0, [fp, #-12]
   256d0:	ldrb	r0, [r0]
   256d4:	cmp	r0, #48	; 0x30
   256d8:	bne	2575c <__assert_fail@plt+0x143d8>
   256dc:	ldr	r0, [fp, #-12]
   256e0:	ldrb	r0, [r0, #1]
   256e4:	cmp	r0, #120	; 0x78
   256e8:	beq	256fc <__assert_fail@plt+0x14378>
   256ec:	ldr	r0, [fp, #-12]
   256f0:	ldrb	r0, [r0, #1]
   256f4:	cmp	r0, #88	; 0x58
   256f8:	bne	25714 <__assert_fail@plt+0x14390>
   256fc:	movw	r0, #16
   25700:	str	r0, [fp, #-16]
   25704:	ldr	r0, [fp, #-12]
   25708:	add	r0, r0, #2
   2570c:	str	r0, [fp, #-12]
   25710:	b	25758 <__assert_fail@plt+0x143d4>
   25714:	ldr	r0, [fp, #-12]
   25718:	ldrb	r0, [r0, #1]
   2571c:	cmp	r0, #98	; 0x62
   25720:	beq	25734 <__assert_fail@plt+0x143b0>
   25724:	ldr	r0, [fp, #-12]
   25728:	ldrb	r0, [r0, #1]
   2572c:	cmp	r0, #66	; 0x42
   25730:	bne	2574c <__assert_fail@plt+0x143c8>
   25734:	movw	r0, #2
   25738:	str	r0, [fp, #-16]
   2573c:	ldr	r0, [fp, #-12]
   25740:	add	r0, r0, #2
   25744:	str	r0, [fp, #-12]
   25748:	b	25754 <__assert_fail@plt+0x143d0>
   2574c:	movw	r0, #8
   25750:	str	r0, [fp, #-16]
   25754:	b	25758 <__assert_fail@plt+0x143d4>
   25758:	b	25764 <__assert_fail@plt+0x143e0>
   2575c:	movw	r0, #10
   25760:	str	r0, [fp, #-16]
   25764:	b	25768 <__assert_fail@plt+0x143e4>
   25768:	ldr	r0, [fp, #-12]
   2576c:	ldrsb	r0, [r0]
   25770:	cmp	r0, #0
   25774:	bne	25790 <__assert_fail@plt+0x1440c>
   25778:	ldr	r0, [fp, #-8]
   2577c:	movw	r1, #0
   25780:	str	r1, [r0, #4]
   25784:	mvn	r0, #0
   25788:	str	r0, [fp, #-4]
   2578c:	b	25bac <__assert_fail@plt+0x14828>
   25790:	ldr	r0, [fp, #-12]
   25794:	bl	11270 <strlen@plt>
   25798:	str	r0, [fp, #-44]	; 0xffffffd4
   2579c:	movw	r0, #37156	; 0x9124
   257a0:	movt	r0, #4
   257a4:	ldr	r0, [r0]
   257a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   257ac:	str	r0, [sp, #28]
   257b0:	mov	r0, r1
   257b4:	ldr	r1, [sp, #28]
   257b8:	blx	r1
   257bc:	str	r0, [sp, #44]	; 0x2c
   257c0:	ldr	r0, [fp, #-16]
   257c4:	cmp	r0, #36	; 0x24
   257c8:	movw	r0, #0
   257cc:	movgt	r0, #1
   257d0:	tst	r0, #1
   257d4:	movw	r0, #36	; 0x24
   257d8:	moveq	r0, #10
   257dc:	str	r0, [fp, #-24]	; 0xffffffe8
   257e0:	movw	r0, #0
   257e4:	str	r0, [fp, #-40]	; 0xffffffd8
   257e8:	ldr	r0, [fp, #-12]
   257ec:	ldrsb	r0, [r0]
   257f0:	cmp	r0, #0
   257f4:	beq	2595c <__assert_fail@plt+0x145d8>
   257f8:	bl	11240 <__ctype_b_loc@plt>
   257fc:	ldr	r0, [r0]
   25800:	ldr	r1, [fp, #-12]
   25804:	ldrb	r1, [r1]
   25808:	mov	r2, r1
   2580c:	add	r0, r0, r1, lsl #1
   25810:	ldrh	r0, [r0]
   25814:	and	r0, r0, #8192	; 0x2000
   25818:	cmp	r0, #0
   2581c:	beq	25824 <__assert_fail@plt+0x144a0>
   25820:	b	2594c <__assert_fail@plt+0x145c8>
   25824:	ldr	r0, [fp, #-12]
   25828:	ldrb	r0, [r0]
   2582c:	cmp	r0, #48	; 0x30
   25830:	blt	25858 <__assert_fail@plt+0x144d4>
   25834:	ldr	r0, [fp, #-12]
   25838:	ldrb	r0, [r0]
   2583c:	cmp	r0, #57	; 0x39
   25840:	bgt	25858 <__assert_fail@plt+0x144d4>
   25844:	ldr	r0, [fp, #-12]
   25848:	ldrb	r0, [r0]
   2584c:	sub	r0, r0, #48	; 0x30
   25850:	str	r0, [sp, #40]	; 0x28
   25854:	b	258dc <__assert_fail@plt+0x14558>
   25858:	ldr	r0, [fp, #-12]
   2585c:	ldrb	r0, [r0]
   25860:	cmp	r0, #97	; 0x61
   25864:	blt	25894 <__assert_fail@plt+0x14510>
   25868:	ldr	r0, [fp, #-12]
   2586c:	ldrb	r0, [r0]
   25870:	cmp	r0, #122	; 0x7a
   25874:	bgt	25894 <__assert_fail@plt+0x14510>
   25878:	ldr	r0, [fp, #-12]
   2587c:	ldrb	r0, [r0]
   25880:	sub	r0, r0, #97	; 0x61
   25884:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25888:	add	r0, r0, r1
   2588c:	str	r0, [sp, #40]	; 0x28
   25890:	b	258d8 <__assert_fail@plt+0x14554>
   25894:	ldr	r0, [fp, #-12]
   25898:	ldrb	r0, [r0]
   2589c:	cmp	r0, #65	; 0x41
   258a0:	blt	258cc <__assert_fail@plt+0x14548>
   258a4:	ldr	r0, [fp, #-12]
   258a8:	ldrb	r0, [r0]
   258ac:	cmp	r0, #90	; 0x5a
   258b0:	bgt	258cc <__assert_fail@plt+0x14548>
   258b4:	ldr	r0, [fp, #-12]
   258b8:	ldrb	r0, [r0]
   258bc:	sub	r0, r0, #65	; 0x41
   258c0:	add	r0, r0, #10
   258c4:	str	r0, [sp, #40]	; 0x28
   258c8:	b	258d4 <__assert_fail@plt+0x14550>
   258cc:	ldr	r0, [fp, #-16]
   258d0:	str	r0, [sp, #40]	; 0x28
   258d4:	b	258d8 <__assert_fail@plt+0x14554>
   258d8:	b	258dc <__assert_fail@plt+0x14558>
   258dc:	b	258e0 <__assert_fail@plt+0x1455c>
   258e0:	ldr	r0, [sp, #40]	; 0x28
   258e4:	ldr	r1, [fp, #-16]
   258e8:	cmp	r0, r1
   258ec:	bcc	25930 <__assert_fail@plt+0x145ac>
   258f0:	movw	r0, #37164	; 0x912c
   258f4:	movt	r0, #4
   258f8:	ldr	r0, [r0]
   258fc:	ldr	r1, [sp, #44]	; 0x2c
   25900:	ldr	r2, [fp, #-44]	; 0xffffffd4
   25904:	str	r0, [sp, #24]
   25908:	mov	r0, r1
   2590c:	mov	r1, r2
   25910:	ldr	r2, [sp, #24]
   25914:	blx	r2
   25918:	ldr	r0, [fp, #-8]
   2591c:	movw	r1, #0
   25920:	str	r1, [r0, #4]
   25924:	mvn	r0, #0
   25928:	str	r0, [fp, #-4]
   2592c:	b	25bac <__assert_fail@plt+0x14828>
   25930:	ldr	r0, [sp, #40]	; 0x28
   25934:	ldr	r1, [sp, #44]	; 0x2c
   25938:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2593c:	add	r3, r2, #1
   25940:	str	r3, [fp, #-40]	; 0xffffffd8
   25944:	add	r1, r1, r2
   25948:	strb	r0, [r1]
   2594c:	ldr	r0, [fp, #-12]
   25950:	add	r0, r0, #1
   25954:	str	r0, [fp, #-12]
   25958:	b	257e8 <__assert_fail@plt+0x14464>
   2595c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25960:	cmp	r0, #0
   25964:	bne	259a8 <__assert_fail@plt+0x14624>
   25968:	movw	r0, #37164	; 0x912c
   2596c:	movt	r0, #4
   25970:	ldr	r0, [r0]
   25974:	ldr	r1, [sp, #44]	; 0x2c
   25978:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2597c:	str	r0, [sp, #20]
   25980:	mov	r0, r1
   25984:	mov	r1, r2
   25988:	ldr	r2, [sp, #20]
   2598c:	blx	r2
   25990:	ldr	r0, [fp, #-8]
   25994:	movw	r1, #0
   25998:	str	r1, [r0, #4]
   2599c:	mvn	r0, #0
   259a0:	str	r0, [fp, #-4]
   259a4:	b	25bac <__assert_fail@plt+0x14828>
   259a8:	ldr	r0, [fp, #-16]
   259ac:	bl	1ca24 <__assert_fail@plt+0xb6a0>
   259b0:	str	r0, [fp, #-20]	; 0xffffffec
   259b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   259b8:	cmp	r0, #0
   259bc:	bls	25a30 <__assert_fail@plt+0x146ac>
   259c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   259c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   259c8:	mul	r0, r0, r1
   259cc:	add	r0, r0, #31
   259d0:	lsr	r0, r0, #5
   259d4:	str	r0, [fp, #-32]	; 0xffffffe0
   259d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   259dc:	ldr	r1, [fp, #-8]
   259e0:	ldr	r1, [r1]
   259e4:	cmp	r0, r1
   259e8:	ble	25a00 <__assert_fail@plt+0x1467c>
   259ec:	ldr	r0, [fp, #-8]
   259f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   259f4:	bl	1d52c <__assert_fail@plt+0xc1a8>
   259f8:	str	r0, [sp, #16]
   259fc:	b	25a0c <__assert_fail@plt+0x14688>
   25a00:	ldr	r0, [fp, #-8]
   25a04:	ldr	r0, [r0, #8]
   25a08:	str	r0, [sp, #16]
   25a0c:	ldr	r0, [sp, #16]
   25a10:	str	r0, [fp, #-36]	; 0xffffffdc
   25a14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25a18:	ldr	r1, [sp, #44]	; 0x2c
   25a1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25a20:	ldr	r3, [fp, #-20]	; 0xffffffec
   25a24:	bl	1cf74 <__assert_fail@plt+0xbbf0>
   25a28:	str	r0, [fp, #-28]	; 0xffffffe4
   25a2c:	b	25b14 <__assert_fail@plt+0x14790>
   25a30:	ldr	r1, [fp, #-16]
   25a34:	add	r0, sp, #32
   25a38:	bl	1cc74 <__assert_fail@plt+0xb8f0>
   25a3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25a40:	ldr	r1, [sp, #32]
   25a44:	add	r0, r0, r1
   25a48:	sub	r0, r0, #1
   25a4c:	ldr	r1, [sp, #32]
   25a50:	udiv	r0, r0, r1
   25a54:	str	r0, [fp, #-32]	; 0xffffffe0
   25a58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25a5c:	ldr	r1, [fp, #-8]
   25a60:	ldr	r1, [r1]
   25a64:	cmp	r0, r1
   25a68:	ble	25a80 <__assert_fail@plt+0x146fc>
   25a6c:	ldr	r0, [fp, #-8]
   25a70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25a74:	bl	1d52c <__assert_fail@plt+0xc1a8>
   25a78:	str	r0, [sp, #12]
   25a7c:	b	25a8c <__assert_fail@plt+0x14708>
   25a80:	ldr	r0, [fp, #-8]
   25a84:	ldr	r0, [r0, #8]
   25a88:	str	r0, [sp, #12]
   25a8c:	ldr	r0, [sp, #12]
   25a90:	str	r0, [fp, #-36]	; 0xffffffdc
   25a94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25a98:	ldr	r1, [sp, #44]	; 0x2c
   25a9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25aa0:	ldr	r3, [fp, #-16]
   25aa4:	add	ip, sp, #32
   25aa8:	str	ip, [sp]
   25aac:	bl	1d090 <__assert_fail@plt+0xbd0c>
   25ab0:	str	r0, [fp, #-28]	; 0xffffffe4
   25ab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25ab8:	cmp	r0, #0
   25abc:	ble	25ac4 <__assert_fail@plt+0x14740>
   25ac0:	b	25ae4 <__assert_fail@plt+0x14760>
   25ac4:	movw	r0, #31280	; 0x7a30
   25ac8:	movt	r0, #3
   25acc:	movw	r1, #28968	; 0x7128
   25ad0:	movt	r1, #3
   25ad4:	movw	r2, #4405	; 0x1135
   25ad8:	movw	r3, #31229	; 0x79fd
   25adc:	movt	r3, #3
   25ae0:	bl	11384 <__assert_fail@plt>
   25ae4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25ae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25aec:	sub	r1, r1, #1
   25af0:	add	r0, r0, r1, lsl #2
   25af4:	ldr	r0, [r0]
   25af8:	cmp	r0, #0
   25afc:	movw	r0, #0
   25b00:	moveq	r0, #1
   25b04:	and	r0, r0, #1
   25b08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25b0c:	sub	r0, r1, r0
   25b10:	str	r0, [fp, #-28]	; 0xffffffe4
   25b14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25b18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25b1c:	cmp	r0, r1
   25b20:	bgt	25b28 <__assert_fail@plt+0x147a4>
   25b24:	b	25b48 <__assert_fail@plt+0x147c4>
   25b28:	movw	r0, #31287	; 0x7a37
   25b2c:	movt	r0, #3
   25b30:	movw	r1, #28968	; 0x7128
   25b34:	movt	r1, #3
   25b38:	movw	r2, #4408	; 0x1138
   25b3c:	movw	r3, #31229	; 0x79fd
   25b40:	movt	r3, #3
   25b44:	bl	11384 <__assert_fail@plt>
   25b48:	movw	r0, #37164	; 0x912c
   25b4c:	movt	r0, #4
   25b50:	ldr	r0, [r0]
   25b54:	ldr	r1, [sp, #44]	; 0x2c
   25b58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   25b5c:	str	r0, [sp, #8]
   25b60:	mov	r0, r1
   25b64:	mov	r1, r2
   25b68:	ldr	r2, [sp, #8]
   25b6c:	blx	r2
   25b70:	ldr	r0, [sp, #48]	; 0x30
   25b74:	cmp	r0, #0
   25b78:	beq	25b90 <__assert_fail@plt+0x1480c>
   25b7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25b80:	movw	r1, #0
   25b84:	sub	r0, r1, r0
   25b88:	str	r0, [sp, #4]
   25b8c:	b	25b98 <__assert_fail@plt+0x14814>
   25b90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25b94:	str	r0, [sp, #4]
   25b98:	ldr	r0, [sp, #4]
   25b9c:	ldr	r1, [fp, #-8]
   25ba0:	str	r0, [r1, #4]
   25ba4:	movw	r0, #0
   25ba8:	str	r0, [fp, #-4]
   25bac:	ldr	r0, [fp, #-4]
   25bb0:	mov	sp, fp
   25bb4:	pop	{fp, pc}
   25bb8:	push	{fp, lr}
   25bbc:	mov	fp, sp
   25bc0:	sub	sp, sp, #16
   25bc4:	str	r0, [fp, #-4]
   25bc8:	str	r1, [sp, #8]
   25bcc:	str	r2, [sp, #4]
   25bd0:	ldr	r0, [fp, #-4]
   25bd4:	bl	1d2ac <__assert_fail@plt+0xbf28>
   25bd8:	ldr	r0, [fp, #-4]
   25bdc:	ldr	r1, [sp, #8]
   25be0:	ldr	r2, [sp, #4]
   25be4:	bl	255f8 <__assert_fail@plt+0x14274>
   25be8:	mov	sp, fp
   25bec:	pop	{fp, pc}
   25bf0:	push	{fp, lr}
   25bf4:	mov	fp, sp
   25bf8:	sub	sp, sp, #32
   25bfc:	str	r0, [fp, #-8]
   25c00:	str	r1, [fp, #-12]
   25c04:	str	r2, [sp, #16]
   25c08:	ldr	r1, [fp, #-12]
   25c0c:	ldr	r2, [sp, #16]
   25c10:	movw	r0, #0
   25c14:	bl	252a4 <__assert_fail@plt+0x13f20>
   25c18:	str	r0, [sp, #12]
   25c1c:	ldr	r0, [sp, #12]
   25c20:	movw	r1, #0
   25c24:	cmp	r0, r1
   25c28:	bne	25c38 <__assert_fail@plt+0x148b4>
   25c2c:	movw	r0, #0
   25c30:	str	r0, [fp, #-4]
   25c34:	b	25c90 <__assert_fail@plt+0x1490c>
   25c38:	ldr	r0, [sp, #12]
   25c3c:	bl	11270 <strlen@plt>
   25c40:	str	r0, [sp, #8]
   25c44:	ldr	r0, [sp, #12]
   25c48:	ldr	r2, [sp, #8]
   25c4c:	ldr	r3, [fp, #-8]
   25c50:	movw	r1, #1
   25c54:	bl	111a4 <fwrite@plt>
   25c58:	str	r0, [sp, #4]
   25c5c:	movw	r0, #37164	; 0x912c
   25c60:	movt	r0, #4
   25c64:	ldr	r0, [r0]
   25c68:	ldr	r1, [sp, #12]
   25c6c:	ldr	r2, [sp, #8]
   25c70:	add	r2, r2, #1
   25c74:	str	r0, [sp]
   25c78:	mov	r0, r1
   25c7c:	mov	r1, r2
   25c80:	ldr	r2, [sp]
   25c84:	blx	r2
   25c88:	ldr	r0, [sp, #4]
   25c8c:	str	r0, [fp, #-4]
   25c90:	ldr	r0, [fp, #-4]
   25c94:	mov	sp, fp
   25c98:	pop	{fp, pc}
   25c9c:	push	{r4, sl, fp, lr}
   25ca0:	add	fp, sp, #8
   25ca4:	sub	sp, sp, #56	; 0x38
   25ca8:	ldr	ip, [fp, #16]
   25cac:	ldr	lr, [fp, #12]
   25cb0:	ldr	r4, [fp, #8]
   25cb4:	str	r0, [fp, #-12]
   25cb8:	str	r1, [fp, #-16]
   25cbc:	str	r2, [fp, #-20]	; 0xffffffec
   25cc0:	str	r3, [fp, #-24]	; 0xffffffe8
   25cc4:	ldr	r0, [fp, #12]
   25cc8:	cmp	r0, #0
   25ccc:	beq	25cdc <__assert_fail@plt+0x14958>
   25cd0:	movw	r0, #31299	; 0x7a43
   25cd4:	movt	r0, #3
   25cd8:	bl	21dd8 <__assert_fail@plt+0x10a54>
   25cdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   25ce0:	cmp	r0, #1
   25ce4:	beq	25cf4 <__assert_fail@plt+0x14970>
   25ce8:	ldr	r0, [fp, #-20]	; 0xffffffec
   25cec:	cmn	r0, #1
   25cf0:	bne	25cf8 <__assert_fail@plt+0x14974>
   25cf4:	b	25d18 <__assert_fail@plt+0x14994>
   25cf8:	movw	r0, #31332	; 0x7a64
   25cfc:	movt	r0, #3
   25d00:	movw	r1, #28968	; 0x7128
   25d04:	movt	r1, #3
   25d08:	movw	r2, #4468	; 0x1174
   25d0c:	movw	r3, #31358	; 0x7a7e
   25d10:	movt	r3, #3
   25d14:	bl	11384 <__assert_fail@plt>
   25d18:	ldr	r0, [fp, #8]
   25d1c:	cmn	r0, #1
   25d20:	blt	25d34 <__assert_fail@plt+0x149b0>
   25d24:	ldr	r0, [fp, #8]
   25d28:	cmp	r0, #1
   25d2c:	bgt	25d34 <__assert_fail@plt+0x149b0>
   25d30:	b	25d54 <__assert_fail@plt+0x149d0>
   25d34:	movw	r0, #31438	; 0x7ace
   25d38:	movt	r0, #3
   25d3c:	movw	r1, #28968	; 0x7128
   25d40:	movt	r1, #3
   25d44:	movw	r2, #4469	; 0x1175
   25d48:	movw	r3, #31358	; 0x7a7e
   25d4c:	movt	r3, #3
   25d50:	bl	11384 <__assert_fail@plt>
   25d54:	ldr	r0, [fp, #8]
   25d58:	cmp	r0, #0
   25d5c:	bne	25d68 <__assert_fail@plt+0x149e4>
   25d60:	bl	25fd0 <__assert_fail@plt+0x14c4c>
   25d64:	str	r0, [fp, #8]
   25d68:	ldr	r0, [fp, #16]
   25d6c:	str	r0, [fp, #-28]	; 0xffffffe4
   25d70:	ldr	r0, [fp, #-20]	; 0xffffffec
   25d74:	ldr	r1, [fp, #8]
   25d78:	cmp	r0, r1
   25d7c:	beq	25d90 <__assert_fail@plt+0x14a0c>
   25d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25d84:	lsl	r0, r0, #1
   25d88:	str	r0, [sp, #4]
   25d8c:	b	25d9c <__assert_fail@plt+0x14a18>
   25d90:	movw	r0, #0
   25d94:	str	r0, [sp, #4]
   25d98:	b	25d9c <__assert_fail@plt+0x14a18>
   25d9c:	ldr	r0, [sp, #4]
   25da0:	str	r0, [sp, #32]
   25da4:	ldr	r0, [fp, #-20]	; 0xffffffec
   25da8:	cmp	r0, #1
   25dac:	bne	25ddc <__assert_fail@plt+0x14a58>
   25db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25db4:	ldr	r1, [fp, #-16]
   25db8:	sub	r1, r1, #1
   25dbc:	mul	r0, r0, r1
   25dc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25dc4:	add	r0, r1, r0
   25dc8:	str	r0, [fp, #-28]	; 0xffffffe4
   25dcc:	ldr	r0, [sp, #32]
   25dd0:	movw	r1, #0
   25dd4:	sub	r0, r1, r0
   25dd8:	str	r0, [sp, #32]
   25ddc:	ldr	r0, [fp, #8]
   25de0:	cmp	r0, #1
   25de4:	bne	25dfc <__assert_fail@plt+0x14a78>
   25de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25dec:	sub	r0, r0, #1
   25df0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25df4:	add	r0, r1, r0
   25df8:	str	r0, [fp, #-28]	; 0xffffffe4
   25dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25e00:	ldr	r1, [fp, #-16]
   25e04:	mul	r0, r0, r1
   25e08:	add	r0, r0, #3
   25e0c:	lsr	r0, r0, #2
   25e10:	str	r0, [sp, #24]
   25e14:	ldr	r0, [sp, #24]
   25e18:	ldr	r1, [fp, #-12]
   25e1c:	ldr	r1, [r1]
   25e20:	cmp	r0, r1
   25e24:	ble	25e3c <__assert_fail@plt+0x14ab8>
   25e28:	ldr	r0, [fp, #-12]
   25e2c:	ldr	r1, [sp, #24]
   25e30:	bl	1d52c <__assert_fail@plt+0xc1a8>
   25e34:	str	r0, [sp]
   25e38:	b	25e48 <__assert_fail@plt+0x14ac4>
   25e3c:	ldr	r0, [fp, #-12]
   25e40:	ldr	r0, [r0, #8]
   25e44:	str	r0, [sp]
   25e48:	ldr	r0, [sp]
   25e4c:	str	r0, [sp, #28]
   25e50:	movw	r0, #0
   25e54:	str	r0, [sp, #20]
   25e58:	str	r0, [sp, #16]
   25e5c:	str	r0, [sp, #12]
   25e60:	ldr	r0, [fp, #-16]
   25e64:	cmp	r0, #0
   25e68:	bls	25f34 <__assert_fail@plt+0x14bb0>
   25e6c:	movw	r0, #0
   25e70:	str	r0, [sp, #8]
   25e74:	ldr	r0, [sp, #8]
   25e78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25e7c:	cmp	r0, r1
   25e80:	bcs	25f0c <__assert_fail@plt+0x14b88>
   25e84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25e88:	ldrb	r0, [r0]
   25e8c:	ldr	r1, [sp, #16]
   25e90:	add	r2, r1, #1
   25e94:	str	r2, [sp, #16]
   25e98:	lsl	r1, r1, #3
   25e9c:	lsl	r0, r0, r1
   25ea0:	ldr	r1, [sp, #20]
   25ea4:	orr	r0, r1, r0
   25ea8:	str	r0, [sp, #20]
   25eac:	ldr	r0, [sp, #16]
   25eb0:	cmp	r0, #4
   25eb4:	bne	25ee0 <__assert_fail@plt+0x14b5c>
   25eb8:	ldr	r0, [sp, #20]
   25ebc:	ldr	r1, [sp, #28]
   25ec0:	ldr	r2, [sp, #12]
   25ec4:	add	r3, r2, #1
   25ec8:	str	r3, [sp, #12]
   25ecc:	add	r1, r1, r2, lsl #2
   25ed0:	str	r0, [r1]
   25ed4:	movw	r0, #0
   25ed8:	str	r0, [sp, #16]
   25edc:	str	r0, [sp, #20]
   25ee0:	b	25ee4 <__assert_fail@plt+0x14b60>
   25ee4:	ldr	r0, [sp, #8]
   25ee8:	add	r0, r0, #1
   25eec:	str	r0, [sp, #8]
   25ef0:	ldr	r0, [fp, #8]
   25ef4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25ef8:	movw	r2, #0
   25efc:	sub	r0, r2, r0
   25f00:	add	r0, r1, r0
   25f04:	str	r0, [fp, #-28]	; 0xffffffe4
   25f08:	b	25e74 <__assert_fail@plt+0x14af0>
   25f0c:	b	25f10 <__assert_fail@plt+0x14b8c>
   25f10:	ldr	r0, [fp, #-16]
   25f14:	mvn	r1, #0
   25f18:	add	r0, r0, r1
   25f1c:	str	r0, [fp, #-16]
   25f20:	ldr	r0, [sp, #32]
   25f24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25f28:	add	r0, r1, r0
   25f2c:	str	r0, [fp, #-28]	; 0xffffffe4
   25f30:	b	25e60 <__assert_fail@plt+0x14adc>
   25f34:	ldr	r0, [sp, #12]
   25f38:	ldr	r1, [sp, #16]
   25f3c:	cmp	r1, #0
   25f40:	movw	r1, #0
   25f44:	movhi	r1, #1
   25f48:	and	r1, r1, #1
   25f4c:	add	r0, r0, r1
   25f50:	ldr	r1, [sp, #24]
   25f54:	cmp	r0, r1
   25f58:	bne	25f60 <__assert_fail@plt+0x14bdc>
   25f5c:	b	25f80 <__assert_fail@plt+0x14bfc>
   25f60:	movw	r0, #31466	; 0x7aea
   25f64:	movt	r0, #3
   25f68:	movw	r1, #28968	; 0x7128
   25f6c:	movt	r1, #3
   25f70:	movw	r2, #4507	; 0x119b
   25f74:	movw	r3, #31358	; 0x7a7e
   25f78:	movt	r3, #3
   25f7c:	bl	11384 <__assert_fail@plt>
   25f80:	ldr	r0, [sp, #20]
   25f84:	cmp	r0, #0
   25f88:	beq	25fac <__assert_fail@plt+0x14c28>
   25f8c:	ldr	r0, [sp, #20]
   25f90:	ldr	r1, [sp, #28]
   25f94:	ldr	r2, [sp, #12]
   25f98:	add	r3, r2, #1
   25f9c:	str	r3, [sp, #12]
   25fa0:	add	r1, r1, r2, lsl #2
   25fa4:	str	r0, [r1]
   25fa8:	b	25fbc <__assert_fail@plt+0x14c38>
   25fac:	ldr	r0, [sp, #28]
   25fb0:	ldr	r1, [sp, #12]
   25fb4:	bl	1b08c <__assert_fail@plt+0x9d08>
   25fb8:	str	r0, [sp, #12]
   25fbc:	ldr	r0, [sp, #12]
   25fc0:	ldr	r1, [fp, #-12]
   25fc4:	str	r0, [r1, #4]
   25fc8:	sub	sp, fp, #8
   25fcc:	pop	{r4, sl, fp, pc}
   25fd0:	sub	sp, sp, #4
   25fd4:	movw	r0, #28964	; 0x7124
   25fd8:	movt	r0, #3
   25fdc:	str	r0, [sp]
   25fe0:	ldr	r0, [sp]
   25fe4:	ldrb	r0, [r0]
   25fe8:	movw	r1, #1
   25fec:	sub	r0, r1, r0
   25ff0:	add	sp, sp, #4
   25ff4:	bx	lr
   25ff8:	push	{r4, sl, fp, lr}
   25ffc:	add	fp, sp, #8
   26000:	sub	sp, sp, #72	; 0x48
   26004:	ldr	ip, [fp, #16]
   26008:	ldr	lr, [fp, #12]
   2600c:	ldr	r4, [fp, #8]
   26010:	str	r0, [fp, #-12]
   26014:	str	r1, [fp, #-16]
   26018:	str	r2, [fp, #-20]	; 0xffffffec
   2601c:	str	r3, [fp, #-24]	; 0xffffffe8
   26020:	ldr	r0, [fp, #12]
   26024:	cmp	r0, #0
   26028:	beq	26038 <__assert_fail@plt+0x14cb4>
   2602c:	movw	r0, #31488	; 0x7b00
   26030:	movt	r0, #3
   26034:	bl	21dd8 <__assert_fail@plt+0x10a54>
   26038:	ldr	r0, [fp, #-20]	; 0xffffffec
   2603c:	cmp	r0, #1
   26040:	beq	26050 <__assert_fail@plt+0x14ccc>
   26044:	ldr	r0, [fp, #-20]	; 0xffffffec
   26048:	cmn	r0, #1
   2604c:	bne	26054 <__assert_fail@plt+0x14cd0>
   26050:	b	26074 <__assert_fail@plt+0x14cf0>
   26054:	movw	r0, #31332	; 0x7a64
   26058:	movt	r0, #3
   2605c:	movw	r1, #28968	; 0x7128
   26060:	movt	r1, #3
   26064:	movw	r2, #4526	; 0x11ae
   26068:	movw	r3, #31521	; 0x7b21
   2606c:	movt	r3, #3
   26070:	bl	11384 <__assert_fail@plt>
   26074:	ldr	r0, [fp, #8]
   26078:	cmn	r0, #1
   2607c:	blt	26090 <__assert_fail@plt+0x14d0c>
   26080:	ldr	r0, [fp, #8]
   26084:	cmp	r0, #1
   26088:	bgt	26090 <__assert_fail@plt+0x14d0c>
   2608c:	b	260b0 <__assert_fail@plt+0x14d2c>
   26090:	movw	r0, #31438	; 0x7ace
   26094:	movt	r0, #3
   26098:	movw	r1, #28968	; 0x7128
   2609c:	movt	r1, #3
   260a0:	movw	r2, #4527	; 0x11af
   260a4:	movw	r3, #31521	; 0x7b21
   260a8:	movt	r3, #3
   260ac:	bl	11384 <__assert_fail@plt>
   260b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   260b4:	cmp	r0, #0
   260b8:	bhi	260cc <__assert_fail@plt+0x14d48>
   260bc:	ldr	r0, [fp, #16]
   260c0:	ldr	r0, [r0, #4]
   260c4:	cmp	r0, #0
   260c8:	bne	260d0 <__assert_fail@plt+0x14d4c>
   260cc:	b	260f0 <__assert_fail@plt+0x14d6c>
   260d0:	movw	r0, #31604	; 0x7b74
   260d4:	movt	r0, #3
   260d8:	movw	r1, #28968	; 0x7128
   260dc:	movt	r1, #3
   260e0:	movw	r2, #4528	; 0x11b0
   260e4:	movw	r3, #31521	; 0x7b21
   260e8:	movt	r3, #3
   260ec:	bl	11384 <__assert_fail@plt>
   260f0:	ldr	r0, [fp, #16]
   260f4:	ldr	r0, [r0, #4]
   260f8:	str	r0, [fp, #-32]	; 0xffffffe0
   260fc:	movw	r0, #0
   26100:	str	r0, [fp, #-28]	; 0xffffffe4
   26104:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26108:	cmp	r0, #0
   2610c:	beq	26450 <__assert_fail@plt+0x150cc>
   26110:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26114:	cmp	r0, #0
   26118:	blt	26128 <__assert_fail@plt+0x14da4>
   2611c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26120:	str	r0, [sp, #8]
   26124:	b	26138 <__assert_fail@plt+0x14db4>
   26128:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2612c:	movw	r1, #0
   26130:	sub	r0, r1, r0
   26134:	str	r0, [sp, #8]
   26138:	ldr	r0, [sp, #8]
   2613c:	str	r0, [fp, #-32]	; 0xffffffe0
   26140:	ldr	r0, [fp, #16]
   26144:	ldr	r0, [r0, #8]
   26148:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2614c:	sub	r1, r1, #1
   26150:	add	r0, r0, r1, lsl #2
   26154:	ldr	r0, [r0]
   26158:	str	r0, [sp, #32]
   2615c:	ldr	r0, [sp, #32]
   26160:	cmp	r0, #0
   26164:	beq	2616c <__assert_fail@plt+0x14de8>
   26168:	b	2618c <__assert_fail@plt+0x14e08>
   2616c:	movw	r0, #31633	; 0x7b91
   26170:	movt	r0, #3
   26174:	movw	r1, #28968	; 0x7128
   26178:	movt	r1, #3
   2617c:	movw	r2, #4548	; 0x11c4
   26180:	movw	r3, #31521	; 0x7b21
   26184:	movt	r3, #3
   26188:	bl	11384 <__assert_fail@plt>
   2618c:	movw	r0, #0
   26190:	str	r0, [fp, #-36]	; 0xffffffdc
   26194:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26198:	cmp	r0, #0
   2619c:	bne	261d8 <__assert_fail@plt+0x14e54>
   261a0:	b	261a4 <__assert_fail@plt+0x14e20>
   261a4:	movw	r0, #8
   261a8:	str	r0, [sp, #20]
   261ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   261b0:	add	r0, r0, #1
   261b4:	str	r0, [fp, #-36]	; 0xffffffdc
   261b8:	ldr	r0, [sp, #20]
   261bc:	ldr	r1, [sp, #32]
   261c0:	lsr	r0, r1, r0
   261c4:	str	r0, [sp, #32]
   261c8:	ldr	r0, [sp, #32]
   261cc:	cmp	r0, #0
   261d0:	bne	261a4 <__assert_fail@plt+0x14e20>
   261d4:	b	261d8 <__assert_fail@plt+0x14e54>
   261d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   261dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   261e0:	sub	r1, r1, #1
   261e4:	lsl	r1, r1, #2
   261e8:	add	r0, r0, r1
   261ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   261f0:	add	r0, r0, r1
   261f4:	sub	r0, r0, #1
   261f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   261fc:	udiv	r0, r0, r1
   26200:	str	r0, [fp, #-28]	; 0xffffffe4
   26204:	ldr	r0, [fp, #-12]
   26208:	movw	r1, #0
   2620c:	cmp	r0, r1
   26210:	bne	26240 <__assert_fail@plt+0x14ebc>
   26214:	movw	r0, #37156	; 0x9124
   26218:	movt	r0, #4
   2621c:	ldr	r0, [r0]
   26220:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26224:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26228:	mul	r1, r1, r2
   2622c:	str	r0, [sp, #4]
   26230:	mov	r0, r1
   26234:	ldr	r1, [sp, #4]
   26238:	blx	r1
   2623c:	str	r0, [fp, #-12]
   26240:	ldr	r0, [fp, #8]
   26244:	cmp	r0, #0
   26248:	bne	26254 <__assert_fail@plt+0x14ed0>
   2624c:	bl	25fd0 <__assert_fail@plt+0x14c4c>
   26250:	str	r0, [fp, #8]
   26254:	ldr	r0, [fp, #-12]
   26258:	str	r0, [sp, #40]	; 0x28
   2625c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26260:	ldr	r1, [fp, #8]
   26264:	cmp	r0, r1
   26268:	beq	2627c <__assert_fail@plt+0x14ef8>
   2626c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26270:	lsl	r0, r0, #1
   26274:	str	r0, [sp]
   26278:	b	26288 <__assert_fail@plt+0x14f04>
   2627c:	movw	r0, #0
   26280:	str	r0, [sp]
   26284:	b	26288 <__assert_fail@plt+0x14f04>
   26288:	ldr	r0, [sp]
   2628c:	str	r0, [sp, #36]	; 0x24
   26290:	ldr	r0, [fp, #-20]	; 0xffffffec
   26294:	cmp	r0, #1
   26298:	bne	262c8 <__assert_fail@plt+0x14f44>
   2629c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   262a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   262a4:	sub	r1, r1, #1
   262a8:	mul	r0, r0, r1
   262ac:	ldr	r1, [sp, #40]	; 0x28
   262b0:	add	r0, r1, r0
   262b4:	str	r0, [sp, #40]	; 0x28
   262b8:	ldr	r0, [sp, #36]	; 0x24
   262bc:	movw	r1, #0
   262c0:	sub	r0, r1, r0
   262c4:	str	r0, [sp, #36]	; 0x24
   262c8:	ldr	r0, [fp, #8]
   262cc:	cmp	r0, #1
   262d0:	bne	262e8 <__assert_fail@plt+0x14f64>
   262d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   262d8:	sub	r0, r0, #1
   262dc:	ldr	r1, [sp, #40]	; 0x28
   262e0:	add	r0, r1, r0
   262e4:	str	r0, [sp, #40]	; 0x28
   262e8:	movw	r0, #0
   262ec:	str	r0, [sp, #28]
   262f0:	str	r0, [sp, #24]
   262f4:	str	r0, [fp, #-36]	; 0xffffffdc
   262f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   262fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26300:	cmp	r0, r1
   26304:	bcs	263e4 <__assert_fail@plt+0x15060>
   26308:	movw	r0, #0
   2630c:	str	r0, [sp, #16]
   26310:	ldr	r0, [sp, #16]
   26314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26318:	cmp	r0, r1
   2631c:	bcs	263c0 <__assert_fail@plt+0x1503c>
   26320:	movw	r0, #8
   26324:	str	r0, [sp, #12]
   26328:	ldr	r0, [sp, #28]
   2632c:	cmp	r0, #0
   26330:	bne	2636c <__assert_fail@plt+0x14fe8>
   26334:	ldr	r0, [sp, #24]
   26338:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2633c:	cmp	r0, r1
   26340:	bge	26364 <__assert_fail@plt+0x14fe0>
   26344:	ldr	r0, [fp, #16]
   26348:	ldr	r0, [r0, #8]
   2634c:	ldr	r1, [sp, #24]
   26350:	add	r2, r1, #1
   26354:	str	r2, [sp, #24]
   26358:	add	r0, r0, r1, lsl #2
   2635c:	ldr	r0, [r0]
   26360:	str	r0, [sp, #32]
   26364:	movw	r0, #4
   26368:	str	r0, [sp, #28]
   2636c:	ldr	r0, [sp, #32]
   26370:	ldr	r1, [sp, #40]	; 0x28
   26374:	strb	r0, [r1]
   26378:	ldr	r0, [sp, #12]
   2637c:	ldr	r1, [sp, #32]
   26380:	lsr	r0, r1, r0
   26384:	str	r0, [sp, #32]
   26388:	ldr	r0, [sp, #28]
   2638c:	mvn	r1, #0
   26390:	add	r0, r0, r1
   26394:	str	r0, [sp, #28]
   26398:	ldr	r0, [sp, #16]
   2639c:	add	r0, r0, #1
   263a0:	str	r0, [sp, #16]
   263a4:	ldr	r0, [fp, #8]
   263a8:	ldr	r1, [sp, #40]	; 0x28
   263ac:	movw	r2, #0
   263b0:	sub	r0, r2, r0
   263b4:	add	r0, r1, r0
   263b8:	str	r0, [sp, #40]	; 0x28
   263bc:	b	26310 <__assert_fail@plt+0x14f8c>
   263c0:	b	263c4 <__assert_fail@plt+0x15040>
   263c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   263c8:	add	r0, r0, #1
   263cc:	str	r0, [fp, #-36]	; 0xffffffdc
   263d0:	ldr	r0, [sp, #36]	; 0x24
   263d4:	ldr	r1, [sp, #40]	; 0x28
   263d8:	add	r0, r1, r0
   263dc:	str	r0, [sp, #40]	; 0x28
   263e0:	b	262f8 <__assert_fail@plt+0x14f74>
   263e4:	ldr	r0, [sp, #24]
   263e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   263ec:	cmp	r0, r1
   263f0:	bne	263f8 <__assert_fail@plt+0x15074>
   263f4:	b	26418 <__assert_fail@plt+0x15094>
   263f8:	movw	r0, #31643	; 0x7b9b
   263fc:	movt	r0, #3
   26400:	movw	r1, #28968	; 0x7128
   26404:	movt	r1, #3
   26408:	movw	r2, #4611	; 0x1203
   2640c:	movw	r3, #31521	; 0x7b21
   26410:	movt	r3, #3
   26414:	bl	11384 <__assert_fail@plt>
   26418:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2641c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26420:	cmp	r0, r1
   26424:	bne	2642c <__assert_fail@plt+0x150a8>
   26428:	b	2644c <__assert_fail@plt+0x150c8>
   2642c:	movw	r0, #31651	; 0x7ba3
   26430:	movt	r0, #3
   26434:	movw	r1, #28968	; 0x7128
   26438:	movt	r1, #3
   2643c:	movw	r2, #4612	; 0x1204
   26440:	movw	r3, #31521	; 0x7b21
   26444:	movt	r3, #3
   26448:	bl	11384 <__assert_fail@plt>
   2644c:	b	26450 <__assert_fail@plt+0x150cc>
   26450:	ldr	r0, [fp, #-16]
   26454:	movw	r1, #0
   26458:	cmp	r0, r1
   2645c:	beq	2646c <__assert_fail@plt+0x150e8>
   26460:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26464:	ldr	r1, [fp, #-16]
   26468:	str	r0, [r1]
   2646c:	ldr	r0, [fp, #-12]
   26470:	sub	sp, fp, #8
   26474:	pop	{r4, sl, fp, pc}
   26478:	push	{fp, lr}
   2647c:	mov	fp, sp
   26480:	sub	sp, sp, #96	; 0x60
   26484:	str	r0, [fp, #-4]
   26488:	str	r1, [fp, #-8]
   2648c:	str	r2, [fp, #-12]
   26490:	movw	r0, #0
   26494:	str	r0, [fp, #-16]
   26498:	ldr	r0, [fp, #-8]
   2649c:	cmp	r0, #0
   264a0:	bls	26758 <__assert_fail@plt+0x153d4>
   264a4:	ldr	r0, [fp, #-8]
   264a8:	ldr	r1, [fp, #-12]
   264ac:	ldr	r1, [r1]
   264b0:	movw	r2, #32
   264b4:	sub	r1, r2, r1
   264b8:	lsr	r0, r0, r1
   264bc:	str	r0, [fp, #-20]	; 0xffffffec
   264c0:	ldr	r0, [fp, #-8]
   264c4:	ldr	r1, [fp, #-12]
   264c8:	ldr	r1, [r1]
   264cc:	lsl	r0, r0, r1
   264d0:	str	r0, [fp, #-24]	; 0xffffffe8
   264d4:	b	264d8 <__assert_fail@plt+0x15154>
   264d8:	movw	r0, #32
   264dc:	str	r0, [sp, #48]	; 0x30
   264e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   264e4:	str	r0, [sp, #12]
   264e8:	ldr	r0, [fp, #-12]
   264ec:	ldr	r0, [r0, #12]
   264f0:	str	r0, [sp, #8]
   264f4:	ldr	r0, [sp, #12]
   264f8:	movw	r1, #65535	; 0xffff
   264fc:	and	r0, r0, r1
   26500:	str	r0, [sp, #28]
   26504:	ldr	r0, [sp, #12]
   26508:	lsr	r0, r0, #16
   2650c:	str	r0, [sp, #20]
   26510:	ldr	r0, [sp, #8]
   26514:	and	r0, r0, r1
   26518:	str	r0, [sp, #24]
   2651c:	ldr	r0, [sp, #8]
   26520:	lsr	r0, r0, #16
   26524:	str	r0, [sp, #16]
   26528:	ldr	r0, [sp, #28]
   2652c:	ldr	r1, [sp, #24]
   26530:	mul	r0, r0, r1
   26534:	str	r0, [sp, #44]	; 0x2c
   26538:	ldr	r0, [sp, #28]
   2653c:	ldr	r1, [sp, #16]
   26540:	mul	r0, r0, r1
   26544:	str	r0, [sp, #40]	; 0x28
   26548:	ldr	r0, [sp, #20]
   2654c:	ldr	r1, [sp, #24]
   26550:	mul	r0, r0, r1
   26554:	str	r0, [sp, #36]	; 0x24
   26558:	ldr	r0, [sp, #20]
   2655c:	ldr	r1, [sp, #16]
   26560:	mul	r0, r0, r1
   26564:	str	r0, [sp, #32]
   26568:	ldr	r0, [sp, #44]	; 0x2c
   2656c:	lsr	r0, r0, #16
   26570:	ldr	r1, [sp, #40]	; 0x28
   26574:	add	r0, r1, r0
   26578:	str	r0, [sp, #40]	; 0x28
   2657c:	ldr	r0, [sp, #36]	; 0x24
   26580:	ldr	r1, [sp, #40]	; 0x28
   26584:	add	r0, r1, r0
   26588:	str	r0, [sp, #40]	; 0x28
   2658c:	ldr	r0, [sp, #40]	; 0x28
   26590:	ldr	r1, [sp, #36]	; 0x24
   26594:	cmp	r0, r1
   26598:	bcs	265a8 <__assert_fail@plt+0x15224>
   2659c:	ldr	r0, [sp, #32]
   265a0:	add	r0, r0, #65536	; 0x10000
   265a4:	str	r0, [sp, #32]
   265a8:	ldr	r0, [sp, #32]
   265ac:	ldr	r1, [sp, #40]	; 0x28
   265b0:	lsr	r1, r1, #16
   265b4:	add	r0, r0, r1
   265b8:	str	r0, [fp, #-32]	; 0xffffffe0
   265bc:	ldr	r0, [sp, #40]	; 0x28
   265c0:	lsl	r0, r0, #16
   265c4:	ldr	r1, [sp, #44]	; 0x2c
   265c8:	movw	r2, #65535	; 0xffff
   265cc:	and	r1, r1, r2
   265d0:	add	r0, r0, r1
   265d4:	str	r0, [fp, #-36]	; 0xffffffdc
   265d8:	b	265dc <__assert_fail@plt+0x15258>
   265dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   265e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   265e4:	add	r0, r0, r1
   265e8:	str	r0, [sp, #4]
   265ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   265f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   265f4:	add	r1, r1, #1
   265f8:	add	r0, r0, r1
   265fc:	ldr	r1, [sp, #4]
   26600:	ldr	r2, [fp, #-36]	; 0xffffffdc
   26604:	cmp	r1, r2
   26608:	movw	r1, #0
   2660c:	movcc	r1, #1
   26610:	and	r1, r1, #1
   26614:	add	r0, r0, r1
   26618:	str	r0, [fp, #-32]	; 0xffffffe0
   2661c:	ldr	r0, [sp, #4]
   26620:	str	r0, [fp, #-36]	; 0xffffffdc
   26624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26628:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2662c:	ldr	r2, [fp, #-12]
   26630:	ldr	r2, [r2, #4]
   26634:	mul	r1, r1, r2
   26638:	sub	r0, r0, r1
   2663c:	str	r0, [fp, #-40]	; 0xffffffd8
   26640:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26644:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26648:	cmp	r0, r1
   2664c:	movw	r0, #0
   26650:	movhi	r0, #1
   26654:	and	r0, r0, #1
   26658:	movw	r1, #0
   2665c:	sub	r0, r1, r0
   26660:	str	r0, [fp, #-44]	; 0xffffffd4
   26664:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26668:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2666c:	add	r0, r1, r0
   26670:	str	r0, [fp, #-32]	; 0xffffffe0
   26674:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26678:	ldr	r1, [fp, #-12]
   2667c:	ldr	r1, [r1, #4]
   26680:	and	r0, r0, r1
   26684:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26688:	add	r0, r1, r0
   2668c:	str	r0, [fp, #-40]	; 0xffffffd8
   26690:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26694:	ldr	r1, [fp, #-12]
   26698:	ldr	r1, [r1, #4]
   2669c:	cmp	r0, r1
   266a0:	bcc	266c4 <__assert_fail@plt+0x15340>
   266a4:	ldr	r0, [fp, #-12]
   266a8:	ldr	r0, [r0, #4]
   266ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   266b0:	sub	r0, r1, r0
   266b4:	str	r0, [fp, #-40]	; 0xffffffd8
   266b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   266bc:	add	r0, r0, #1
   266c0:	str	r0, [fp, #-32]	; 0xffffffe0
   266c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   266c8:	str	r0, [fp, #-28]	; 0xffffffe4
   266cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   266d0:	str	r0, [fp, #-8]
   266d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   266d8:	ldr	r1, [fp, #-12]
   266dc:	ldr	r1, [r1]
   266e0:	movw	r2, #32
   266e4:	sub	r1, r2, r1
   266e8:	mvn	r2, #0
   266ec:	lsr	r1, r2, r1
   266f0:	and	r0, r0, r1
   266f4:	cmp	r0, #0
   266f8:	bne	26700 <__assert_fail@plt+0x1537c>
   266fc:	b	26720 <__assert_fail@plt+0x1539c>
   26700:	movw	r0, #31917	; 0x7cad
   26704:	movt	r0, #3
   26708:	movw	r1, #28968	; 0x7128
   2670c:	movt	r1, #3
   26710:	movw	r2, #1259	; 0x4eb
   26714:	movw	r3, #31976	; 0x7ce8
   26718:	movt	r3, #3
   2671c:	bl	11384 <__assert_fail@plt>
   26720:	ldr	r0, [fp, #-12]
   26724:	ldr	r0, [r0]
   26728:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2672c:	lsr	r0, r1, r0
   26730:	str	r0, [fp, #-28]	; 0xffffffe4
   26734:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26738:	ldr	r1, [fp, #-4]
   2673c:	ldr	r2, [fp, #-16]
   26740:	add	r1, r1, r2
   26744:	strb	r0, [r1]
   26748:	ldr	r0, [fp, #-16]
   2674c:	add	r0, r0, #1
   26750:	str	r0, [fp, #-16]
   26754:	b	26498 <__assert_fail@plt+0x15114>
   26758:	ldr	r0, [fp, #-16]
   2675c:	mov	sp, fp
   26760:	pop	{fp, pc}
   26764:	push	{fp, lr}
   26768:	mov	fp, sp
   2676c:	sub	sp, sp, #16
   26770:	str	r0, [fp, #-4]
   26774:	str	r1, [sp, #8]
   26778:	str	r2, [sp, #4]
   2677c:	ldr	r0, [sp, #4]
   26780:	cmp	r0, #0
   26784:	ble	2678c <__assert_fail@plt+0x15408>
   26788:	b	267ac <__assert_fail@plt+0x15428>
   2678c:	movw	r0, #32532	; 0x7f14
   26790:	movt	r0, #3
   26794:	movw	r1, #28968	; 0x7128
   26798:	movt	r1, #3
   2679c:	movw	r2, #368	; 0x170
   267a0:	movw	r3, #32183	; 0x7db7
   267a4:	movt	r3, #3
   267a8:	bl	11384 <__assert_fail@plt>
   267ac:	movw	r0, #37160	; 0x9128
   267b0:	movt	r0, #4
   267b4:	ldr	r0, [r0]
   267b8:	ldr	r1, [fp, #-4]
   267bc:	ldr	r2, [sp, #8]
   267c0:	lsl	r2, r2, #2
   267c4:	ldr	r3, [sp, #4]
   267c8:	lsl	r3, r3, #2
   267cc:	str	r0, [sp]
   267d0:	mov	r0, r1
   267d4:	mov	r1, r2
   267d8:	mov	r2, r3
   267dc:	ldr	r3, [sp]
   267e0:	blx	r3
   267e4:	mov	sp, fp
   267e8:	pop	{fp, pc}
   267ec:	push	{fp, lr}
   267f0:	mov	fp, sp
   267f4:	sub	sp, sp, #48	; 0x30
   267f8:	ldr	ip, [fp, #8]
   267fc:	str	r0, [fp, #-4]
   26800:	str	r1, [fp, #-8]
   26804:	str	r2, [fp, #-12]
   26808:	str	r3, [fp, #-16]
   2680c:	movw	r0, #0
   26810:	str	r0, [sp, #12]
   26814:	ldr	r0, [fp, #8]
   26818:	cmp	r0, #0
   2681c:	ble	26824 <__assert_fail@plt+0x154a0>
   26820:	b	26844 <__assert_fail@plt+0x154c0>
   26824:	movw	r0, #32348	; 0x7e5c
   26828:	movt	r0, #3
   2682c:	movw	r1, #28968	; 0x7128
   26830:	movt	r1, #3
   26834:	movw	r2, #1148	; 0x47c
   26838:	movw	r3, #32355	; 0x7e63
   2683c:	movt	r3, #3
   26840:	bl	11384 <__assert_fail@plt>
   26844:	ldr	r0, [fp, #-12]
   26848:	ldr	r1, [fp, #8]
   2684c:	cmp	r0, r1
   26850:	blt	26858 <__assert_fail@plt+0x154d4>
   26854:	b	26878 <__assert_fail@plt+0x154f4>
   26858:	movw	r0, #32420	; 0x7ea4
   2685c:	movt	r0, #3
   26860:	movw	r1, #28968	; 0x7128
   26864:	movt	r1, #3
   26868:	movw	r2, #1149	; 0x47d
   2686c:	movw	r3, #32355	; 0x7e63
   26870:	movt	r3, #3
   26874:	bl	11384 <__assert_fail@plt>
   26878:	ldr	r1, [fp, #-16]
   2687c:	ldr	r2, [fp, #8]
   26880:	add	r0, sp, #16
   26884:	bl	21e0c <__assert_fail@plt+0x10a88>
   26888:	ldr	r0, [fp, #8]
   2688c:	cmp	r0, #2
   26890:	ble	26900 <__assert_fail@plt+0x1557c>
   26894:	ldr	r0, [sp, #16]
   26898:	cmp	r0, #0
   2689c:	bls	26900 <__assert_fail@plt+0x1557c>
   268a0:	ldr	r0, [fp, #8]
   268a4:	bl	1d348 <__assert_fail@plt+0xbfc4>
   268a8:	str	r0, [sp, #12]
   268ac:	ldr	r0, [sp, #12]
   268b0:	ldr	r1, [fp, #-16]
   268b4:	ldr	r2, [fp, #8]
   268b8:	ldr	r3, [sp, #16]
   268bc:	bl	1be0c <__assert_fail@plt+0xaa88>
   268c0:	str	r0, [sp, #8]
   268c4:	ldr	r0, [sp, #8]
   268c8:	cmp	r0, #0
   268cc:	bne	268d4 <__assert_fail@plt+0x15550>
   268d0:	b	268f4 <__assert_fail@plt+0x15570>
   268d4:	movw	r0, #29949	; 0x74fd
   268d8:	movt	r0, #3
   268dc:	movw	r1, #28968	; 0x7128
   268e0:	movt	r1, #3
   268e4:	movw	r2, #1155	; 0x483
   268e8:	movw	r3, #32355	; 0x7e63
   268ec:	movt	r3, #3
   268f0:	bl	11384 <__assert_fail@plt>
   268f4:	b	268f8 <__assert_fail@plt+0x15574>
   268f8:	ldr	r0, [sp, #12]
   268fc:	str	r0, [fp, #-16]
   26900:	ldr	r0, [fp, #-4]
   26904:	ldr	r1, [fp, #-8]
   26908:	ldr	r2, [fp, #-12]
   2690c:	ldr	r3, [fp, #-16]
   26910:	ldr	ip, [fp, #8]
   26914:	str	ip, [sp]
   26918:	add	ip, sp, #16
   2691c:	str	ip, [sp, #4]
   26920:	bl	22038 <__assert_fail@plt+0x10cb4>
   26924:	ldr	r0, [sp, #12]
   26928:	movw	r1, #0
   2692c:	cmp	r0, r1
   26930:	beq	26940 <__assert_fail@plt+0x155bc>
   26934:	ldr	r0, [sp, #12]
   26938:	ldr	r1, [fp, #8]
   2693c:	bl	1d3c0 <__assert_fail@plt+0xc03c>
   26940:	mov	sp, fp
   26944:	pop	{fp, pc}
   26948:	push	{fp, lr}
   2694c:	mov	fp, sp
   26950:	sub	sp, sp, #32
   26954:	str	r0, [fp, #-4]
   26958:	str	r1, [fp, #-8]
   2695c:	str	r2, [fp, #-12]
   26960:	ldr	r0, [fp, #-8]
   26964:	cmp	r0, #0
   26968:	bls	26970 <__assert_fail@plt+0x155ec>
   2696c:	b	26990 <__assert_fail@plt+0x1560c>
   26970:	movw	r0, #32708	; 0x7fc4
   26974:	movt	r0, #3
   26978:	movw	r1, #28968	; 0x7128
   2697c:	movt	r1, #3
   26980:	movw	r2, #915	; 0x393
   26984:	movw	r3, #32715	; 0x7fcb
   26988:	movt	r3, #3
   2698c:	bl	11384 <__assert_fail@plt>
   26990:	b	26994 <__assert_fail@plt+0x15610>
   26994:	ldr	r0, [fp, #-8]
   26998:	str	r0, [sp, #12]
   2699c:	movw	r0, #0
   269a0:	str	r0, [sp, #8]
   269a4:	movw	r0, #8
   269a8:	str	r0, [sp, #4]
   269ac:	ldr	r0, [sp, #4]
   269b0:	movw	r1, #32
   269b4:	cmp	r1, r0
   269b8:	bls	269f4 <__assert_fail@plt+0x15670>
   269bc:	b	269c0 <__assert_fail@plt+0x1563c>
   269c0:	ldr	r0, [sp, #12]
   269c4:	and	r0, r0, #-16777216	; 0xff000000
   269c8:	cmp	r0, #0
   269cc:	bne	269f0 <__assert_fail@plt+0x1566c>
   269d0:	ldr	r0, [sp, #4]
   269d4:	ldr	r1, [sp, #12]
   269d8:	lsl	r0, r1, r0
   269dc:	str	r0, [sp, #12]
   269e0:	ldr	r0, [sp, #8]
   269e4:	add	r0, r0, #8
   269e8:	str	r0, [sp, #8]
   269ec:	b	269c0 <__assert_fail@plt+0x1563c>
   269f0:	b	269f4 <__assert_fail@plt+0x15670>
   269f4:	b	269f8 <__assert_fail@plt+0x15674>
   269f8:	ldr	r0, [sp, #12]
   269fc:	and	r0, r0, #-2147483648	; 0x80000000
   26a00:	cmp	r0, #0
   26a04:	bne	26a24 <__assert_fail@plt+0x156a0>
   26a08:	ldr	r0, [sp, #12]
   26a0c:	lsl	r0, r0, #1
   26a10:	str	r0, [sp, #12]
   26a14:	ldr	r0, [sp, #8]
   26a18:	add	r0, r0, #1
   26a1c:	str	r0, [sp, #8]
   26a20:	b	269f8 <__assert_fail@plt+0x15674>
   26a24:	ldr	r0, [sp, #8]
   26a28:	str	r0, [sp, #16]
   26a2c:	ldr	r0, [sp, #16]
   26a30:	ldr	r1, [fp, #-4]
   26a34:	str	r0, [r1]
   26a38:	ldr	r0, [sp, #16]
   26a3c:	cmp	r0, #0
   26a40:	bls	26a7c <__assert_fail@plt+0x156f8>
   26a44:	ldr	r0, [fp, #-8]
   26a48:	ldr	r1, [sp, #16]
   26a4c:	lsl	r0, r0, r1
   26a50:	ldr	r1, [fp, #-12]
   26a54:	ldr	r2, [sp, #16]
   26a58:	movw	r3, #32
   26a5c:	sub	r2, r3, r2
   26a60:	lsr	r1, r1, r2
   26a64:	orr	r0, r0, r1
   26a68:	str	r0, [fp, #-8]
   26a6c:	ldr	r0, [sp, #16]
   26a70:	ldr	r1, [fp, #-12]
   26a74:	lsl	r0, r1, r0
   26a78:	str	r0, [fp, #-12]
   26a7c:	ldr	r0, [fp, #-8]
   26a80:	ldr	r1, [fp, #-4]
   26a84:	str	r0, [r1, #4]
   26a88:	ldr	r0, [fp, #-12]
   26a8c:	ldr	r1, [fp, #-4]
   26a90:	str	r0, [r1, #8]
   26a94:	ldr	r0, [fp, #-8]
   26a98:	ldr	r1, [fp, #-12]
   26a9c:	bl	1c530 <__assert_fail@plt+0xb1ac>
   26aa0:	ldr	r1, [fp, #-4]
   26aa4:	str	r0, [r1, #12]
   26aa8:	mov	sp, fp
   26aac:	pop	{fp, pc}
   26ab0:	push	{fp, lr}
   26ab4:	mov	fp, sp
   26ab8:	sub	sp, sp, #176	; 0xb0
   26abc:	str	r0, [fp, #-4]
   26ac0:	str	r1, [fp, #-8]
   26ac4:	str	r2, [fp, #-12]
   26ac8:	str	r3, [fp, #-16]
   26acc:	ldr	r0, [fp, #-12]
   26ad0:	cmp	r0, #2
   26ad4:	blt	26adc <__assert_fail@plt+0x15758>
   26ad8:	b	26afc <__assert_fail@plt+0x15778>
   26adc:	movw	r0, #32966	; 0x80c6
   26ae0:	movt	r0, #3
   26ae4:	movw	r1, #28968	; 0x7128
   26ae8:	movt	r1, #3
   26aec:	movw	r2, #1009	; 0x3f1
   26af0:	movw	r3, #32974	; 0x80ce
   26af4:	movt	r3, #3
   26af8:	bl	11384 <__assert_fail@plt>
   26afc:	ldr	r0, [fp, #-16]
   26b00:	ldr	r0, [r0]
   26b04:	str	r0, [fp, #-20]	; 0xffffffec
   26b08:	ldr	r0, [fp, #-16]
   26b0c:	ldr	r0, [r0, #4]
   26b10:	str	r0, [fp, #-28]	; 0xffffffe4
   26b14:	ldr	r0, [fp, #-16]
   26b18:	ldr	r0, [r0, #8]
   26b1c:	str	r0, [fp, #-32]	; 0xffffffe0
   26b20:	ldr	r0, [fp, #-16]
   26b24:	ldr	r0, [r0, #12]
   26b28:	str	r0, [fp, #-36]	; 0xffffffdc
   26b2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b30:	cmp	r0, #0
   26b34:	bls	26b54 <__assert_fail@plt+0x157d0>
   26b38:	ldr	r0, [fp, #-8]
   26b3c:	ldr	r1, [fp, #-8]
   26b40:	ldr	r2, [fp, #-12]
   26b44:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b48:	bl	1be0c <__assert_fail@plt+0xaa88>
   26b4c:	str	r0, [fp, #-40]	; 0xffffffd8
   26b50:	b	26b5c <__assert_fail@plt+0x157d8>
   26b54:	movw	r0, #0
   26b58:	str	r0, [fp, #-40]	; 0xffffffd8
   26b5c:	ldr	r0, [fp, #-8]
   26b60:	ldr	r1, [fp, #-12]
   26b64:	sub	r1, r1, #1
   26b68:	add	r0, r0, r1, lsl #2
   26b6c:	ldr	r0, [r0]
   26b70:	str	r0, [fp, #-44]	; 0xffffffd4
   26b74:	ldr	r0, [fp, #-12]
   26b78:	sub	r0, r0, #2
   26b7c:	str	r0, [fp, #-24]	; 0xffffffe8
   26b80:	ldr	r0, [fp, #-8]
   26b84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26b88:	add	r0, r0, r1, lsl #2
   26b8c:	ldr	r0, [r0]
   26b90:	str	r0, [fp, #-48]	; 0xffffffd0
   26b94:	b	26b98 <__assert_fail@plt+0x15814>
   26b98:	movw	r0, #32
   26b9c:	str	r0, [fp, #-72]	; 0xffffffb8
   26ba0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26ba4:	str	r0, [sp, #68]	; 0x44
   26ba8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26bac:	str	r0, [sp, #64]	; 0x40
   26bb0:	ldr	r0, [sp, #68]	; 0x44
   26bb4:	movw	r1, #65535	; 0xffff
   26bb8:	and	r0, r0, r1
   26bbc:	str	r0, [sp, #84]	; 0x54
   26bc0:	ldr	r0, [sp, #68]	; 0x44
   26bc4:	lsr	r0, r0, #16
   26bc8:	str	r0, [sp, #76]	; 0x4c
   26bcc:	ldr	r0, [sp, #64]	; 0x40
   26bd0:	and	r0, r0, r1
   26bd4:	str	r0, [sp, #80]	; 0x50
   26bd8:	ldr	r0, [sp, #64]	; 0x40
   26bdc:	lsr	r0, r0, #16
   26be0:	str	r0, [sp, #72]	; 0x48
   26be4:	ldr	r0, [sp, #84]	; 0x54
   26be8:	ldr	r1, [sp, #80]	; 0x50
   26bec:	mul	r0, r0, r1
   26bf0:	str	r0, [fp, #-76]	; 0xffffffb4
   26bf4:	ldr	r0, [sp, #84]	; 0x54
   26bf8:	ldr	r1, [sp, #72]	; 0x48
   26bfc:	mul	r0, r0, r1
   26c00:	str	r0, [fp, #-80]	; 0xffffffb0
   26c04:	ldr	r0, [sp, #76]	; 0x4c
   26c08:	ldr	r1, [sp, #80]	; 0x50
   26c0c:	mul	r0, r0, r1
   26c10:	str	r0, [fp, #-84]	; 0xffffffac
   26c14:	ldr	r0, [sp, #76]	; 0x4c
   26c18:	ldr	r1, [sp, #72]	; 0x48
   26c1c:	mul	r0, r0, r1
   26c20:	str	r0, [sp, #88]	; 0x58
   26c24:	ldr	r0, [fp, #-76]	; 0xffffffb4
   26c28:	lsr	r0, r0, #16
   26c2c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   26c30:	add	r0, r1, r0
   26c34:	str	r0, [fp, #-80]	; 0xffffffb0
   26c38:	ldr	r0, [fp, #-84]	; 0xffffffac
   26c3c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   26c40:	add	r0, r1, r0
   26c44:	str	r0, [fp, #-80]	; 0xffffffb0
   26c48:	ldr	r0, [fp, #-80]	; 0xffffffb0
   26c4c:	ldr	r1, [fp, #-84]	; 0xffffffac
   26c50:	cmp	r0, r1
   26c54:	bcs	26c64 <__assert_fail@plt+0x158e0>
   26c58:	ldr	r0, [sp, #88]	; 0x58
   26c5c:	add	r0, r0, #65536	; 0x10000
   26c60:	str	r0, [sp, #88]	; 0x58
   26c64:	ldr	r0, [sp, #88]	; 0x58
   26c68:	ldr	r1, [fp, #-80]	; 0xffffffb0
   26c6c:	lsr	r1, r1, #16
   26c70:	add	r0, r0, r1
   26c74:	str	r0, [fp, #-52]	; 0xffffffcc
   26c78:	ldr	r0, [fp, #-80]	; 0xffffffb0
   26c7c:	lsl	r0, r0, #16
   26c80:	ldr	r1, [fp, #-76]	; 0xffffffb4
   26c84:	movw	r2, #65535	; 0xffff
   26c88:	and	r1, r1, r2
   26c8c:	add	r0, r0, r1
   26c90:	str	r0, [fp, #-56]	; 0xffffffc8
   26c94:	b	26c98 <__assert_fail@plt+0x15914>
   26c98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26c9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   26ca0:	add	r0, r0, r1
   26ca4:	str	r0, [sp, #60]	; 0x3c
   26ca8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26cac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26cb0:	add	r0, r0, r1
   26cb4:	ldr	r1, [sp, #60]	; 0x3c
   26cb8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   26cbc:	cmp	r1, r2
   26cc0:	movw	r1, #0
   26cc4:	movcc	r1, #1
   26cc8:	and	r1, r1, #1
   26ccc:	add	r0, r0, r1
   26cd0:	str	r0, [fp, #-52]	; 0xffffffcc
   26cd4:	ldr	r0, [sp, #60]	; 0x3c
   26cd8:	str	r0, [fp, #-56]	; 0xffffffc8
   26cdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26ce0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26ce4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26ce8:	mul	r1, r1, r2
   26cec:	sub	r0, r0, r1
   26cf0:	str	r0, [fp, #-40]	; 0xffffffd8
   26cf4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   26cf8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26cfc:	sub	r0, r0, r1
   26d00:	str	r0, [sp, #56]	; 0x38
   26d04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26d08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26d0c:	sub	r0, r0, r1
   26d10:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26d14:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26d18:	cmp	r1, r2
   26d1c:	movw	r1, #0
   26d20:	movcc	r1, #1
   26d24:	and	r1, r1, #1
   26d28:	sub	r0, r0, r1
   26d2c:	str	r0, [fp, #-40]	; 0xffffffd8
   26d30:	ldr	r0, [sp, #56]	; 0x38
   26d34:	str	r0, [fp, #-44]	; 0xffffffd4
   26d38:	b	26d3c <__assert_fail@plt+0x159b8>
   26d3c:	movw	r0, #32
   26d40:	str	r0, [sp, #52]	; 0x34
   26d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26d48:	str	r0, [sp, #16]
   26d4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26d50:	str	r0, [sp, #12]
   26d54:	ldr	r0, [sp, #16]
   26d58:	movw	r1, #65535	; 0xffff
   26d5c:	and	r0, r0, r1
   26d60:	str	r0, [sp, #32]
   26d64:	ldr	r0, [sp, #16]
   26d68:	lsr	r0, r0, #16
   26d6c:	str	r0, [sp, #24]
   26d70:	ldr	r0, [sp, #12]
   26d74:	and	r0, r0, r1
   26d78:	str	r0, [sp, #28]
   26d7c:	ldr	r0, [sp, #12]
   26d80:	lsr	r0, r0, #16
   26d84:	str	r0, [sp, #20]
   26d88:	ldr	r0, [sp, #32]
   26d8c:	ldr	r1, [sp, #28]
   26d90:	mul	r0, r0, r1
   26d94:	str	r0, [sp, #48]	; 0x30
   26d98:	ldr	r0, [sp, #32]
   26d9c:	ldr	r1, [sp, #20]
   26da0:	mul	r0, r0, r1
   26da4:	str	r0, [sp, #44]	; 0x2c
   26da8:	ldr	r0, [sp, #24]
   26dac:	ldr	r1, [sp, #28]
   26db0:	mul	r0, r0, r1
   26db4:	str	r0, [sp, #40]	; 0x28
   26db8:	ldr	r0, [sp, #24]
   26dbc:	ldr	r1, [sp, #20]
   26dc0:	mul	r0, r0, r1
   26dc4:	str	r0, [sp, #36]	; 0x24
   26dc8:	ldr	r0, [sp, #48]	; 0x30
   26dcc:	lsr	r0, r0, #16
   26dd0:	ldr	r1, [sp, #44]	; 0x2c
   26dd4:	add	r0, r1, r0
   26dd8:	str	r0, [sp, #44]	; 0x2c
   26ddc:	ldr	r0, [sp, #40]	; 0x28
   26de0:	ldr	r1, [sp, #44]	; 0x2c
   26de4:	add	r0, r1, r0
   26de8:	str	r0, [sp, #44]	; 0x2c
   26dec:	ldr	r0, [sp, #44]	; 0x2c
   26df0:	ldr	r1, [sp, #40]	; 0x28
   26df4:	cmp	r0, r1
   26df8:	bcs	26e08 <__assert_fail@plt+0x15a84>
   26dfc:	ldr	r0, [sp, #36]	; 0x24
   26e00:	add	r0, r0, #65536	; 0x10000
   26e04:	str	r0, [sp, #36]	; 0x24
   26e08:	ldr	r0, [sp, #36]	; 0x24
   26e0c:	ldr	r1, [sp, #44]	; 0x2c
   26e10:	lsr	r1, r1, #16
   26e14:	add	r0, r0, r1
   26e18:	str	r0, [fp, #-60]	; 0xffffffc4
   26e1c:	ldr	r0, [sp, #44]	; 0x2c
   26e20:	lsl	r0, r0, #16
   26e24:	ldr	r1, [sp, #48]	; 0x30
   26e28:	movw	r2, #65535	; 0xffff
   26e2c:	and	r1, r1, r2
   26e30:	add	r0, r0, r1
   26e34:	str	r0, [fp, #-64]	; 0xffffffc0
   26e38:	b	26e3c <__assert_fail@plt+0x15ab8>
   26e3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26e40:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26e44:	sub	r0, r0, r1
   26e48:	str	r0, [sp, #8]
   26e4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26e50:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26e54:	sub	r0, r0, r1
   26e58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   26e5c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26e60:	cmp	r1, r2
   26e64:	movw	r1, #0
   26e68:	movcc	r1, #1
   26e6c:	and	r1, r1, #1
   26e70:	sub	r0, r0, r1
   26e74:	str	r0, [fp, #-40]	; 0xffffffd8
   26e78:	ldr	r0, [sp, #8]
   26e7c:	str	r0, [fp, #-44]	; 0xffffffd4
   26e80:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26e84:	add	r0, r0, #1
   26e88:	str	r0, [fp, #-52]	; 0xffffffcc
   26e8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26e90:	ldr	r1, [fp, #-56]	; 0xffffffc8
   26e94:	cmp	r0, r1
   26e98:	movw	r0, #0
   26e9c:	movcs	r0, #1
   26ea0:	and	r0, r0, #1
   26ea4:	movw	r1, #0
   26ea8:	sub	r0, r1, r0
   26eac:	str	r0, [fp, #-68]	; 0xffffffbc
   26eb0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   26eb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   26eb8:	add	r0, r1, r0
   26ebc:	str	r0, [fp, #-52]	; 0xffffffcc
   26ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26ec4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   26ec8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26ecc:	and	r1, r1, r2
   26ed0:	add	r0, r0, r1
   26ed4:	str	r0, [sp, #4]
   26ed8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26edc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   26ee0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26ee4:	and	r1, r1, r2
   26ee8:	add	r0, r0, r1
   26eec:	ldr	r1, [sp, #4]
   26ef0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   26ef4:	cmp	r1, r2
   26ef8:	movw	r1, #0
   26efc:	movcc	r1, #1
   26f00:	and	r1, r1, #1
   26f04:	add	r0, r0, r1
   26f08:	str	r0, [fp, #-40]	; 0xffffffd8
   26f0c:	ldr	r0, [sp, #4]
   26f10:	str	r0, [fp, #-44]	; 0xffffffd4
   26f14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26f18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26f1c:	cmp	r0, r1
   26f20:	bcc	26f9c <__assert_fail@plt+0x15c18>
   26f24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26f28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26f2c:	cmp	r0, r1
   26f30:	bhi	26f44 <__assert_fail@plt+0x15bc0>
   26f34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26f38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26f3c:	cmp	r0, r1
   26f40:	bcc	26f98 <__assert_fail@plt+0x15c14>
   26f44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26f48:	add	r0, r0, #1
   26f4c:	str	r0, [fp, #-52]	; 0xffffffcc
   26f50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26f54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26f58:	sub	r0, r0, r1
   26f5c:	str	r0, [sp]
   26f60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26f64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26f68:	sub	r0, r0, r1
   26f6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   26f70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26f74:	cmp	r1, r2
   26f78:	movw	r1, #0
   26f7c:	movcc	r1, #1
   26f80:	and	r1, r1, #1
   26f84:	sub	r0, r0, r1
   26f88:	str	r0, [fp, #-40]	; 0xffffffd8
   26f8c:	ldr	r0, [sp]
   26f90:	str	r0, [fp, #-44]	; 0xffffffd4
   26f94:	b	26f98 <__assert_fail@plt+0x15c14>
   26f98:	b	26f9c <__assert_fail@plt+0x15c18>
   26f9c:	b	26fa0 <__assert_fail@plt+0x15c1c>
   26fa0:	ldr	r0, [fp, #-4]
   26fa4:	movw	r1, #0
   26fa8:	cmp	r0, r1
   26fac:	beq	26fc4 <__assert_fail@plt+0x15c40>
   26fb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26fb4:	ldr	r1, [fp, #-4]
   26fb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26fbc:	add	r1, r1, r2, lsl #2
   26fc0:	str	r0, [r1]
   26fc4:	b	26fc8 <__assert_fail@plt+0x15c44>
   26fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26fcc:	mvn	r1, #0
   26fd0:	add	r0, r0, r1
   26fd4:	str	r0, [fp, #-24]	; 0xffffffe8
   26fd8:	cmp	r0, #0
   26fdc:	bge	26b80 <__assert_fail@plt+0x157fc>
   26fe0:	ldr	r0, [fp, #-20]	; 0xffffffec
   26fe4:	cmp	r0, #0
   26fe8:	bls	2706c <__assert_fail@plt+0x15ce8>
   26fec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26ff0:	ldr	r1, [fp, #-20]	; 0xffffffec
   26ff4:	movw	r2, #32
   26ff8:	sub	r1, r2, r1
   26ffc:	mvn	r2, #0
   27000:	lsr	r1, r2, r1
   27004:	and	r0, r0, r1
   27008:	cmp	r0, #0
   2700c:	bne	27014 <__assert_fail@plt+0x15c90>
   27010:	b	27034 <__assert_fail@plt+0x15cb0>
   27014:	movw	r0, #33058	; 0x8122
   27018:	movt	r0, #3
   2701c:	movw	r1, #28968	; 0x7128
   27020:	movt	r1, #3
   27024:	movw	r2, #1036	; 0x40c
   27028:	movw	r3, #32974	; 0x80ce
   2702c:	movt	r3, #3
   27030:	bl	11384 <__assert_fail@plt>
   27034:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27038:	ldr	r1, [fp, #-20]	; 0xffffffec
   2703c:	lsr	r0, r0, r1
   27040:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27044:	ldr	r2, [fp, #-20]	; 0xffffffec
   27048:	movw	r3, #32
   2704c:	sub	r2, r3, r2
   27050:	lsl	r1, r1, r2
   27054:	orr	r0, r0, r1
   27058:	str	r0, [fp, #-44]	; 0xffffffd4
   2705c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27060:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27064:	lsr	r0, r1, r0
   27068:	str	r0, [fp, #-40]	; 0xffffffd8
   2706c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27070:	ldr	r1, [fp, #-8]
   27074:	str	r0, [r1, #4]
   27078:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2707c:	ldr	r1, [fp, #-8]
   27080:	str	r0, [r1]
   27084:	mov	sp, fp
   27088:	pop	{fp, pc}
   2708c:	push	{r4, sl, fp, lr}
   27090:	add	fp, sp, #8
   27094:	sub	sp, sp, #176	; 0xb0
   27098:	ldr	ip, [fp, #16]
   2709c:	ldr	lr, [fp, #12]
   270a0:	ldr	r4, [fp, #8]
   270a4:	str	r0, [fp, #-12]
   270a8:	str	r1, [fp, #-16]
   270ac:	str	r2, [fp, #-20]	; 0xffffffec
   270b0:	str	r3, [fp, #-24]	; 0xffffffe8
   270b4:	ldr	r0, [fp, #12]
   270b8:	cmp	r0, #2
   270bc:	ble	270c4 <__assert_fail@plt+0x15d40>
   270c0:	b	270e4 <__assert_fail@plt+0x15d60>
   270c4:	movw	r0, #33112	; 0x8158
   270c8:	movt	r0, #3
   270cc:	movw	r1, #28968	; 0x7128
   270d0:	movt	r1, #3
   270d4:	movw	r2, #1057	; 0x421
   270d8:	movw	r3, #33119	; 0x815f
   270dc:	movt	r3, #3
   270e0:	bl	11384 <__assert_fail@plt>
   270e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   270e8:	ldr	r1, [fp, #12]
   270ec:	cmp	r0, r1
   270f0:	blt	270f8 <__assert_fail@plt+0x15d74>
   270f4:	b	27118 <__assert_fail@plt+0x15d94>
   270f8:	movw	r0, #32420	; 0x7ea4
   270fc:	movt	r0, #3
   27100:	movw	r1, #28968	; 0x7128
   27104:	movt	r1, #3
   27108:	movw	r2, #1058	; 0x422
   2710c:	movw	r3, #33119	; 0x815f
   27110:	movt	r3, #3
   27114:	bl	11384 <__assert_fail@plt>
   27118:	ldr	r0, [fp, #8]
   2711c:	ldr	r1, [fp, #12]
   27120:	add	r0, r0, r1, lsl #2
   27124:	ldr	r0, [r0, #-4]
   27128:	str	r0, [fp, #-32]	; 0xffffffe0
   2712c:	ldr	r0, [fp, #8]
   27130:	ldr	r1, [fp, #12]
   27134:	sub	r1, r1, #2
   27138:	add	r0, r0, r1, lsl #2
   2713c:	ldr	r0, [r0]
   27140:	str	r0, [fp, #-36]	; 0xffffffdc
   27144:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27148:	and	r0, r0, #-2147483648	; 0x80000000
   2714c:	cmp	r0, #0
   27150:	beq	27158 <__assert_fail@plt+0x15dd4>
   27154:	b	27178 <__assert_fail@plt+0x15df4>
   27158:	movw	r0, #33210	; 0x81ba
   2715c:	movt	r0, #3
   27160:	movw	r1, #28968	; 0x7128
   27164:	movt	r1, #3
   27168:	movw	r2, #1063	; 0x427
   2716c:	movw	r3, #33119	; 0x815f
   27170:	movt	r3, #3
   27174:	bl	11384 <__assert_fail@plt>
   27178:	ldr	r0, [fp, #-20]	; 0xffffffec
   2717c:	ldr	r1, [fp, #12]
   27180:	sub	r0, r0, r1
   27184:	str	r0, [fp, #-28]	; 0xffffffe4
   27188:	ldr	r0, [fp, #-16]
   2718c:	ldr	r1, [fp, #12]
   27190:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27194:	add	r1, r1, r2
   27198:	sub	r1, r1, #1
   2719c:	add	r0, r0, r1, lsl #2
   271a0:	ldr	r0, [r0]
   271a4:	str	r0, [fp, #-52]	; 0xffffffcc
   271a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   271ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   271b0:	cmp	r0, r1
   271b4:	bne	27210 <__assert_fail@plt+0x15e8c>
   271b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   271bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   271c0:	cmp	r0, r1
   271c4:	bne	27210 <__assert_fail@plt+0x15e8c>
   271c8:	mvn	r0, #0
   271cc:	str	r0, [fp, #-48]	; 0xffffffd0
   271d0:	ldr	r0, [fp, #-16]
   271d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   271d8:	add	r0, r0, r1, lsl #2
   271dc:	ldr	r1, [fp, #8]
   271e0:	ldr	r2, [fp, #12]
   271e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   271e8:	bl	1b9a8 <__assert_fail@plt+0xa624>
   271ec:	ldr	r1, [fp, #-16]
   271f0:	ldr	r2, [fp, #12]
   271f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   271f8:	add	r2, r2, r3
   271fc:	sub	r2, r2, #1
   27200:	add	r1, r1, r2, lsl #2
   27204:	ldr	r1, [r1]
   27208:	str	r1, [fp, #-24]	; 0xffffffe8
   2720c:	b	27748 <__assert_fail@plt+0x163c4>
   27210:	b	27214 <__assert_fail@plt+0x15e90>
   27214:	b	27218 <__assert_fail@plt+0x15e94>
   27218:	movw	r0, #32
   2721c:	str	r0, [fp, #-72]	; 0xffffffb8
   27220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27224:	str	r0, [sp, #76]	; 0x4c
   27228:	ldr	r0, [fp, #16]
   2722c:	str	r0, [sp, #72]	; 0x48
   27230:	ldr	r0, [sp, #76]	; 0x4c
   27234:	movw	r1, #65535	; 0xffff
   27238:	and	r0, r0, r1
   2723c:	str	r0, [sp, #92]	; 0x5c
   27240:	ldr	r0, [sp, #76]	; 0x4c
   27244:	lsr	r0, r0, #16
   27248:	str	r0, [sp, #84]	; 0x54
   2724c:	ldr	r0, [sp, #72]	; 0x48
   27250:	and	r0, r0, r1
   27254:	str	r0, [sp, #88]	; 0x58
   27258:	ldr	r0, [sp, #72]	; 0x48
   2725c:	lsr	r0, r0, #16
   27260:	str	r0, [sp, #80]	; 0x50
   27264:	ldr	r0, [sp, #92]	; 0x5c
   27268:	ldr	r1, [sp, #88]	; 0x58
   2726c:	mul	r0, r0, r1
   27270:	str	r0, [fp, #-76]	; 0xffffffb4
   27274:	ldr	r0, [sp, #92]	; 0x5c
   27278:	ldr	r1, [sp, #80]	; 0x50
   2727c:	mul	r0, r0, r1
   27280:	str	r0, [fp, #-80]	; 0xffffffb0
   27284:	ldr	r0, [sp, #84]	; 0x54
   27288:	ldr	r1, [sp, #88]	; 0x58
   2728c:	mul	r0, r0, r1
   27290:	str	r0, [fp, #-84]	; 0xffffffac
   27294:	ldr	r0, [sp, #84]	; 0x54
   27298:	ldr	r1, [sp, #80]	; 0x50
   2729c:	mul	r0, r0, r1
   272a0:	str	r0, [fp, #-88]	; 0xffffffa8
   272a4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   272a8:	lsr	r0, r0, #16
   272ac:	ldr	r1, [fp, #-80]	; 0xffffffb0
   272b0:	add	r0, r1, r0
   272b4:	str	r0, [fp, #-80]	; 0xffffffb0
   272b8:	ldr	r0, [fp, #-84]	; 0xffffffac
   272bc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   272c0:	add	r0, r1, r0
   272c4:	str	r0, [fp, #-80]	; 0xffffffb0
   272c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   272cc:	ldr	r1, [fp, #-84]	; 0xffffffac
   272d0:	cmp	r0, r1
   272d4:	bcs	272e4 <__assert_fail@plt+0x15f60>
   272d8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   272dc:	add	r0, r0, #65536	; 0x10000
   272e0:	str	r0, [fp, #-88]	; 0xffffffa8
   272e4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   272e8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   272ec:	lsr	r1, r1, #16
   272f0:	add	r0, r0, r1
   272f4:	str	r0, [fp, #-48]	; 0xffffffd0
   272f8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   272fc:	lsl	r0, r0, #16
   27300:	ldr	r1, [fp, #-76]	; 0xffffffb4
   27304:	movw	r2, #65535	; 0xffff
   27308:	and	r1, r1, r2
   2730c:	add	r0, r0, r1
   27310:	str	r0, [fp, #-56]	; 0xffffffc8
   27314:	b	27318 <__assert_fail@plt+0x15f94>
   27318:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2731c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   27320:	add	r0, r0, r1
   27324:	str	r0, [sp, #68]	; 0x44
   27328:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2732c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27330:	add	r0, r0, r1
   27334:	ldr	r1, [sp, #68]	; 0x44
   27338:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2733c:	cmp	r1, r2
   27340:	movw	r1, #0
   27344:	movcc	r1, #1
   27348:	and	r1, r1, #1
   2734c:	add	r0, r0, r1
   27350:	str	r0, [fp, #-48]	; 0xffffffd0
   27354:	ldr	r0, [sp, #68]	; 0x44
   27358:	str	r0, [fp, #-56]	; 0xffffffc8
   2735c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27360:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27364:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27368:	mul	r1, r1, r2
   2736c:	sub	r0, r0, r1
   27370:	str	r0, [fp, #-24]	; 0xffffffe8
   27374:	ldr	r0, [fp, #-16]
   27378:	ldr	r1, [fp, #12]
   2737c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27380:	add	r1, r1, r2
   27384:	add	r0, r0, r1, lsl #2
   27388:	ldr	r0, [r0, #-8]
   2738c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27390:	sub	r0, r0, r1
   27394:	str	r0, [sp, #64]	; 0x40
   27398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2739c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   273a0:	sub	r0, r0, r1
   273a4:	ldr	r1, [fp, #-16]
   273a8:	ldr	r2, [fp, #12]
   273ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   273b0:	add	r2, r2, r3
   273b4:	sub	r2, r2, #2
   273b8:	add	r1, r1, r2, lsl #2
   273bc:	ldr	r1, [r1]
   273c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   273c4:	cmp	r1, r2
   273c8:	movw	r1, #0
   273cc:	movcc	r1, #1
   273d0:	and	r1, r1, #1
   273d4:	sub	r0, r0, r1
   273d8:	str	r0, [fp, #-24]	; 0xffffffe8
   273dc:	ldr	r0, [sp, #64]	; 0x40
   273e0:	str	r0, [fp, #-52]	; 0xffffffcc
   273e4:	b	273e8 <__assert_fail@plt+0x16064>
   273e8:	movw	r0, #32
   273ec:	str	r0, [sp, #60]	; 0x3c
   273f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   273f4:	str	r0, [sp, #24]
   273f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   273fc:	str	r0, [sp, #20]
   27400:	ldr	r0, [sp, #24]
   27404:	movw	r1, #65535	; 0xffff
   27408:	and	r0, r0, r1
   2740c:	str	r0, [sp, #40]	; 0x28
   27410:	ldr	r0, [sp, #24]
   27414:	lsr	r0, r0, #16
   27418:	str	r0, [sp, #32]
   2741c:	ldr	r0, [sp, #20]
   27420:	and	r0, r0, r1
   27424:	str	r0, [sp, #36]	; 0x24
   27428:	ldr	r0, [sp, #20]
   2742c:	lsr	r0, r0, #16
   27430:	str	r0, [sp, #28]
   27434:	ldr	r0, [sp, #40]	; 0x28
   27438:	ldr	r1, [sp, #36]	; 0x24
   2743c:	mul	r0, r0, r1
   27440:	str	r0, [sp, #56]	; 0x38
   27444:	ldr	r0, [sp, #40]	; 0x28
   27448:	ldr	r1, [sp, #28]
   2744c:	mul	r0, r0, r1
   27450:	str	r0, [sp, #52]	; 0x34
   27454:	ldr	r0, [sp, #32]
   27458:	ldr	r1, [sp, #36]	; 0x24
   2745c:	mul	r0, r0, r1
   27460:	str	r0, [sp, #48]	; 0x30
   27464:	ldr	r0, [sp, #32]
   27468:	ldr	r1, [sp, #28]
   2746c:	mul	r0, r0, r1
   27470:	str	r0, [sp, #44]	; 0x2c
   27474:	ldr	r0, [sp, #56]	; 0x38
   27478:	lsr	r0, r0, #16
   2747c:	ldr	r1, [sp, #52]	; 0x34
   27480:	add	r0, r1, r0
   27484:	str	r0, [sp, #52]	; 0x34
   27488:	ldr	r0, [sp, #48]	; 0x30
   2748c:	ldr	r1, [sp, #52]	; 0x34
   27490:	add	r0, r1, r0
   27494:	str	r0, [sp, #52]	; 0x34
   27498:	ldr	r0, [sp, #52]	; 0x34
   2749c:	ldr	r1, [sp, #48]	; 0x30
   274a0:	cmp	r0, r1
   274a4:	bcs	274b4 <__assert_fail@plt+0x16130>
   274a8:	ldr	r0, [sp, #44]	; 0x2c
   274ac:	add	r0, r0, #65536	; 0x10000
   274b0:	str	r0, [sp, #44]	; 0x2c
   274b4:	ldr	r0, [sp, #44]	; 0x2c
   274b8:	ldr	r1, [sp, #52]	; 0x34
   274bc:	lsr	r1, r1, #16
   274c0:	add	r0, r0, r1
   274c4:	str	r0, [fp, #-60]	; 0xffffffc4
   274c8:	ldr	r0, [sp, #52]	; 0x34
   274cc:	lsl	r0, r0, #16
   274d0:	ldr	r1, [sp, #56]	; 0x38
   274d4:	movw	r2, #65535	; 0xffff
   274d8:	and	r1, r1, r2
   274dc:	add	r0, r0, r1
   274e0:	str	r0, [fp, #-64]	; 0xffffffc0
   274e4:	b	274e8 <__assert_fail@plt+0x16164>
   274e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   274ec:	ldr	r1, [fp, #-64]	; 0xffffffc0
   274f0:	sub	r0, r0, r1
   274f4:	str	r0, [sp, #16]
   274f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   274fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   27500:	sub	r0, r0, r1
   27504:	ldr	r1, [fp, #-52]	; 0xffffffcc
   27508:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2750c:	cmp	r1, r2
   27510:	movw	r1, #0
   27514:	movcc	r1, #1
   27518:	and	r1, r1, #1
   2751c:	sub	r0, r0, r1
   27520:	str	r0, [fp, #-24]	; 0xffffffe8
   27524:	ldr	r0, [sp, #16]
   27528:	str	r0, [fp, #-52]	; 0xffffffcc
   2752c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27530:	add	r0, r0, #1
   27534:	str	r0, [fp, #-48]	; 0xffffffd0
   27538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2753c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   27540:	cmp	r0, r1
   27544:	movw	r0, #0
   27548:	movcs	r0, #1
   2754c:	and	r0, r0, #1
   27550:	movw	r1, #0
   27554:	sub	r0, r1, r0
   27558:	str	r0, [fp, #-68]	; 0xffffffbc
   2755c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   27560:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27564:	add	r0, r1, r0
   27568:	str	r0, [fp, #-48]	; 0xffffffd0
   2756c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27570:	ldr	r1, [fp, #-68]	; 0xffffffbc
   27574:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27578:	and	r1, r1, r2
   2757c:	add	r0, r0, r1
   27580:	str	r0, [sp, #12]
   27584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27588:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2758c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27590:	and	r1, r1, r2
   27594:	add	r0, r0, r1
   27598:	ldr	r1, [sp, #12]
   2759c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   275a0:	cmp	r1, r2
   275a4:	movw	r1, #0
   275a8:	movcc	r1, #1
   275ac:	and	r1, r1, #1
   275b0:	add	r0, r0, r1
   275b4:	str	r0, [fp, #-24]	; 0xffffffe8
   275b8:	ldr	r0, [sp, #12]
   275bc:	str	r0, [fp, #-52]	; 0xffffffcc
   275c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   275c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   275c8:	cmp	r0, r1
   275cc:	bcc	27648 <__assert_fail@plt+0x162c4>
   275d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   275d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   275d8:	cmp	r0, r1
   275dc:	bhi	275f0 <__assert_fail@plt+0x1626c>
   275e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   275e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   275e8:	cmp	r0, r1
   275ec:	bcc	27644 <__assert_fail@plt+0x162c0>
   275f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   275f4:	add	r0, r0, #1
   275f8:	str	r0, [fp, #-48]	; 0xffffffd0
   275fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27600:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27604:	sub	r0, r0, r1
   27608:	str	r0, [sp, #8]
   2760c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27610:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27614:	sub	r0, r0, r1
   27618:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2761c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27620:	cmp	r1, r2
   27624:	movw	r1, #0
   27628:	movcc	r1, #1
   2762c:	and	r1, r1, #1
   27630:	sub	r0, r0, r1
   27634:	str	r0, [fp, #-24]	; 0xffffffe8
   27638:	ldr	r0, [sp, #8]
   2763c:	str	r0, [fp, #-52]	; 0xffffffcc
   27640:	b	27644 <__assert_fail@plt+0x162c0>
   27644:	b	27648 <__assert_fail@plt+0x162c4>
   27648:	b	2764c <__assert_fail@plt+0x162c8>
   2764c:	ldr	r0, [fp, #-16]
   27650:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27654:	add	r0, r0, r1, lsl #2
   27658:	ldr	r1, [fp, #8]
   2765c:	ldr	r2, [fp, #12]
   27660:	sub	r2, r2, #2
   27664:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27668:	bl	1b9a8 <__assert_fail@plt+0xa624>
   2766c:	str	r0, [fp, #-40]	; 0xffffffd8
   27670:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27674:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27678:	mov	r2, #0
   2767c:	cmp	r0, r1
   27680:	mov	r0, r2
   27684:	movwcc	r0, #1
   27688:	str	r0, [fp, #-44]	; 0xffffffd4
   2768c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27690:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27694:	sub	r0, r0, r1
   27698:	str	r0, [fp, #-52]	; 0xffffffcc
   2769c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   276a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   276a4:	cmp	r0, r1
   276a8:	movwcc	r2, #1
   276ac:	str	r2, [fp, #-40]	; 0xffffffd8
   276b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   276b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   276b8:	sub	r0, r0, r1
   276bc:	str	r0, [fp, #-24]	; 0xffffffe8
   276c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   276c4:	ldr	r1, [fp, #-16]
   276c8:	ldr	r2, [fp, #12]
   276cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   276d0:	add	r2, r2, r3
   276d4:	sub	r2, r2, #2
   276d8:	add	r1, r1, r2, lsl #2
   276dc:	str	r0, [r1]
   276e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   276e4:	cmp	r0, #0
   276e8:	beq	27744 <__assert_fail@plt+0x163c0>
   276ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   276f0:	ldr	r1, [fp, #-16]
   276f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   276f8:	add	r1, r1, r2, lsl #2
   276fc:	mov	r2, r1
   27700:	ldr	r3, [fp, #8]
   27704:	ldr	ip, [fp, #12]
   27708:	sub	ip, ip, #1
   2770c:	str	r0, [sp, #4]
   27710:	mov	r0, r2
   27714:	mov	r2, r3
   27718:	mov	r3, ip
   2771c:	bl	1b1fc <__assert_fail@plt+0x9e78>
   27720:	ldr	r1, [sp, #4]
   27724:	add	r0, r1, r0
   27728:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2772c:	add	r0, r1, r0
   27730:	str	r0, [fp, #-24]	; 0xffffffe8
   27734:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27738:	mvn	r1, #0
   2773c:	add	r0, r0, r1
   27740:	str	r0, [fp, #-48]	; 0xffffffd0
   27744:	b	27748 <__assert_fail@plt+0x163c4>
   27748:	ldr	r0, [fp, #-12]
   2774c:	movw	r1, #0
   27750:	cmp	r0, r1
   27754:	beq	2776c <__assert_fail@plt+0x163e8>
   27758:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2775c:	ldr	r1, [fp, #-12]
   27760:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27764:	add	r1, r1, r2, lsl #2
   27768:	str	r0, [r1]
   2776c:	b	27770 <__assert_fail@plt+0x163ec>
   27770:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27774:	mvn	r1, #0
   27778:	add	r0, r0, r1
   2777c:	str	r0, [fp, #-28]	; 0xffffffe4
   27780:	cmp	r0, #0
   27784:	bge	27188 <__assert_fail@plt+0x15e04>
   27788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2778c:	ldr	r1, [fp, #-16]
   27790:	ldr	r2, [fp, #12]
   27794:	sub	r2, r2, #1
   27798:	add	r1, r1, r2, lsl #2
   2779c:	str	r0, [r1]
   277a0:	sub	sp, fp, #8
   277a4:	pop	{r4, sl, fp, pc}
   277a8:	push	{fp, lr}
   277ac:	mov	fp, sp
   277b0:	sub	sp, sp, #56	; 0x38
   277b4:	str	r0, [fp, #-4]
   277b8:	str	r1, [fp, #-8]
   277bc:	movw	r0, #0
   277c0:	str	r0, [fp, #-16]
   277c4:	ldr	r0, [fp, #-8]
   277c8:	and	r0, r0, #1
   277cc:	cmp	r0, #0
   277d0:	beq	277d8 <__assert_fail@plt+0x16454>
   277d4:	b	277f8 <__assert_fail@plt+0x16474>
   277d8:	movw	r0, #33432	; 0x8298
   277dc:	movt	r0, #3
   277e0:	movw	r1, #28968	; 0x7128
   277e4:	movt	r1, #3
   277e8:	movw	r2, #3383	; 0xd37
   277ec:	movw	r3, #33438	; 0x829e
   277f0:	movt	r3, #3
   277f4:	bl	11384 <__assert_fail@plt>
   277f8:	ldr	r0, [fp, #-4]
   277fc:	cmp	r0, #0
   27800:	beq	27808 <__assert_fail@plt+0x16484>
   27804:	b	27828 <__assert_fail@plt+0x164a4>
   27808:	movw	r0, #33483	; 0x82cb
   2780c:	movt	r0, #3
   27810:	movw	r1, #28968	; 0x7128
   27814:	movt	r1, #3
   27818:	movw	r2, #3384	; 0xd38
   2781c:	movw	r3, #33438	; 0x829e
   27820:	movt	r3, #3
   27824:	bl	11384 <__assert_fail@plt>
   27828:	ldr	r0, [fp, #-8]
   2782c:	lsr	r0, r0, #1
   27830:	str	r0, [fp, #-8]
   27834:	ldr	r0, [fp, #-4]
   27838:	str	r0, [fp, #-20]	; 0xffffffec
   2783c:	movw	r0, #0
   27840:	str	r0, [fp, #-24]	; 0xffffffe8
   27844:	ldr	r0, [fp, #-20]	; 0xffffffec
   27848:	ldr	r1, [fp, #-20]	; 0xffffffec
   2784c:	movw	r2, #0
   27850:	sub	r1, r2, r1
   27854:	and	r0, r0, r1
   27858:	str	r0, [sp, #28]
   2785c:	str	r2, [sp, #24]
   27860:	movw	r0, #8
   27864:	str	r0, [sp, #20]
   27868:	ldr	r0, [sp, #20]
   2786c:	movw	r1, #32
   27870:	cmp	r1, r0
   27874:	bls	278b0 <__assert_fail@plt+0x1652c>
   27878:	b	2787c <__assert_fail@plt+0x164f8>
   2787c:	ldr	r0, [sp, #28]
   27880:	and	r0, r0, #-16777216	; 0xff000000
   27884:	cmp	r0, #0
   27888:	bne	278ac <__assert_fail@plt+0x16528>
   2788c:	ldr	r0, [sp, #20]
   27890:	ldr	r1, [sp, #28]
   27894:	lsl	r0, r1, r0
   27898:	str	r0, [sp, #28]
   2789c:	ldr	r0, [sp, #24]
   278a0:	add	r0, r0, #8
   278a4:	str	r0, [sp, #24]
   278a8:	b	2787c <__assert_fail@plt+0x164f8>
   278ac:	b	278b0 <__assert_fail@plt+0x1652c>
   278b0:	b	278b4 <__assert_fail@plt+0x16530>
   278b4:	ldr	r0, [sp, #28]
   278b8:	and	r0, r0, #-2147483648	; 0x80000000
   278bc:	cmp	r0, #0
   278c0:	bne	278e0 <__assert_fail@plt+0x1655c>
   278c4:	ldr	r0, [sp, #28]
   278c8:	lsl	r0, r0, #1
   278cc:	str	r0, [sp, #28]
   278d0:	ldr	r0, [sp, #24]
   278d4:	add	r0, r0, #1
   278d8:	str	r0, [sp, #24]
   278dc:	b	278b4 <__assert_fail@plt+0x16530>
   278e0:	ldr	r0, [sp, #24]
   278e4:	str	r0, [fp, #-24]	; 0xffffffe8
   278e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   278ec:	movw	r1, #31
   278f0:	sub	r0, r1, r0
   278f4:	str	r0, [fp, #-12]
   278f8:	ldr	r0, [fp, #-4]
   278fc:	lsr	r0, r0, #1
   27900:	str	r0, [fp, #-4]
   27904:	ldr	r0, [fp, #-12]
   27908:	ldr	r1, [fp, #-4]
   2790c:	lsr	r0, r1, r0
   27910:	str	r0, [fp, #-4]
   27914:	ldr	r0, [fp, #-12]
   27918:	ldr	r1, [fp, #-8]
   2791c:	ldr	r2, [fp, #-8]
   27920:	lsr	r2, r2, #1
   27924:	eor	r1, r1, r2
   27928:	and	r0, r0, r1
   2792c:	ldr	r1, [fp, #-16]
   27930:	eor	r0, r1, r0
   27934:	str	r0, [fp, #-16]
   27938:	ldr	r0, [fp, #-4]
   2793c:	ldr	r1, [fp, #-8]
   27940:	cmp	r0, r1
   27944:	bcs	279b8 <__assert_fail@plt+0x16634>
   27948:	ldr	r0, [fp, #-4]
   2794c:	cmp	r0, #0
   27950:	bne	2797c <__assert_fail@plt+0x165f8>
   27954:	ldr	r0, [fp, #-16]
   27958:	and	r0, r0, #1
   2795c:	cmp	r0, #0
   27960:	movw	r0, #0
   27964:	movne	r0, #1
   27968:	tst	r0, #1
   2796c:	mvn	r0, #0
   27970:	moveq	r0, #1
   27974:	mov	sp, fp
   27978:	pop	{fp, pc}
   2797c:	ldr	r0, [fp, #-4]
   27980:	ldr	r1, [fp, #-8]
   27984:	and	r0, r0, r1
   27988:	ldr	r1, [fp, #-16]
   2798c:	eor	r0, r1, r0
   27990:	str	r0, [fp, #-16]
   27994:	ldr	r0, [fp, #-8]
   27998:	ldr	r1, [fp, #-4]
   2799c:	sub	r0, r0, r1
   279a0:	str	r0, [fp, #-4]
   279a4:	ldr	r0, [fp, #-4]
   279a8:	ldr	r1, [fp, #-8]
   279ac:	sub	r0, r1, r0
   279b0:	str	r0, [fp, #-8]
   279b4:	b	279fc <__assert_fail@plt+0x16678>
   279b8:	ldr	r0, [fp, #-8]
   279bc:	ldr	r1, [fp, #-4]
   279c0:	sub	r0, r1, r0
   279c4:	str	r0, [fp, #-4]
   279c8:	ldr	r0, [fp, #-4]
   279cc:	cmp	r0, #0
   279d0:	beq	279d8 <__assert_fail@plt+0x16654>
   279d4:	b	279f8 <__assert_fail@plt+0x16674>
   279d8:	movw	r0, #33483	; 0x82cb
   279dc:	movt	r0, #3
   279e0:	movw	r1, #28968	; 0x7128
   279e4:	movt	r1, #3
   279e8:	movw	r2, #3410	; 0xd52
   279ec:	movw	r3, #33438	; 0x829e
   279f0:	movt	r3, #3
   279f4:	bl	11384 <__assert_fail@plt>
   279f8:	b	279fc <__assert_fail@plt+0x16678>
   279fc:	b	27a00 <__assert_fail@plt+0x1667c>
   27a00:	ldr	r0, [fp, #-4]
   27a04:	str	r0, [sp, #16]
   27a08:	movw	r0, #0
   27a0c:	str	r0, [sp, #12]
   27a10:	ldr	r0, [sp, #16]
   27a14:	ldr	r1, [sp, #16]
   27a18:	movw	r2, #0
   27a1c:	sub	r1, r2, r1
   27a20:	and	r0, r0, r1
   27a24:	str	r0, [sp, #8]
   27a28:	str	r2, [sp, #4]
   27a2c:	movw	r0, #8
   27a30:	str	r0, [sp]
   27a34:	ldr	r0, [sp]
   27a38:	movw	r1, #32
   27a3c:	cmp	r1, r0
   27a40:	bls	27a7c <__assert_fail@plt+0x166f8>
   27a44:	b	27a48 <__assert_fail@plt+0x166c4>
   27a48:	ldr	r0, [sp, #8]
   27a4c:	and	r0, r0, #-16777216	; 0xff000000
   27a50:	cmp	r0, #0
   27a54:	bne	27a78 <__assert_fail@plt+0x166f4>
   27a58:	ldr	r0, [sp]
   27a5c:	ldr	r1, [sp, #8]
   27a60:	lsl	r0, r1, r0
   27a64:	str	r0, [sp, #8]
   27a68:	ldr	r0, [sp, #4]
   27a6c:	add	r0, r0, #8
   27a70:	str	r0, [sp, #4]
   27a74:	b	27a48 <__assert_fail@plt+0x166c4>
   27a78:	b	27a7c <__assert_fail@plt+0x166f8>
   27a7c:	b	27a80 <__assert_fail@plt+0x166fc>
   27a80:	ldr	r0, [sp, #8]
   27a84:	and	r0, r0, #-2147483648	; 0x80000000
   27a88:	cmp	r0, #0
   27a8c:	bne	27aac <__assert_fail@plt+0x16728>
   27a90:	ldr	r0, [sp, #8]
   27a94:	lsl	r0, r0, #1
   27a98:	str	r0, [sp, #8]
   27a9c:	ldr	r0, [sp, #4]
   27aa0:	add	r0, r0, #1
   27aa4:	str	r0, [sp, #4]
   27aa8:	b	27a80 <__assert_fail@plt+0x166fc>
   27aac:	ldr	r0, [sp, #4]
   27ab0:	str	r0, [sp, #12]
   27ab4:	ldr	r0, [sp, #12]
   27ab8:	movw	r1, #31
   27abc:	sub	r0, r1, r0
   27ac0:	str	r0, [fp, #-12]
   27ac4:	ldr	r0, [fp, #-12]
   27ac8:	add	r0, r0, #1
   27acc:	str	r0, [fp, #-12]
   27ad0:	b	27904 <__assert_fail@plt+0x16580>
   27ad4:	push	{fp, lr}
   27ad8:	mov	fp, sp
   27adc:	sub	sp, sp, #56	; 0x38
   27ae0:	ldr	ip, [fp, #8]
   27ae4:	str	r0, [fp, #-4]
   27ae8:	str	r1, [fp, #-8]
   27aec:	str	r2, [fp, #-12]
   27af0:	str	r3, [fp, #-16]
   27af4:	ldr	r0, [fp, #-16]
   27af8:	cmp	r0, #0
   27afc:	bls	27b04 <__assert_fail@plt+0x16780>
   27b00:	b	27b24 <__assert_fail@plt+0x167a0>
   27b04:	movw	r0, #33490	; 0x82d2
   27b08:	movt	r0, #3
   27b0c:	movw	r1, #28968	; 0x7128
   27b10:	movt	r1, #3
   27b14:	movw	r2, #3442	; 0xd72
   27b18:	movw	r3, #33497	; 0x82d9
   27b1c:	movt	r3, #3
   27b20:	bl	11384 <__assert_fail@plt>
   27b24:	ldr	r0, [fp, #-12]
   27b28:	cmp	r0, #1073741824	; 0x40000000
   27b2c:	bgt	27b34 <__assert_fail@plt+0x167b0>
   27b30:	b	27b54 <__assert_fail@plt+0x167d0>
   27b34:	movw	r0, #33588	; 0x8334
   27b38:	movt	r0, #3
   27b3c:	movw	r1, #28968	; 0x7128
   27b40:	movt	r1, #3
   27b44:	movw	r2, #3443	; 0xd73
   27b48:	movw	r3, #33497	; 0x82d9
   27b4c:	movt	r3, #3
   27b50:	bl	11384 <__assert_fail@plt>
   27b54:	ldr	r0, [pc, #592]	; 27dac <__assert_fail@plt+0x16a28>
   27b58:	ldr	r1, [fp, #-12]
   27b5c:	cmp	r1, r0
   27b60:	blt	27b68 <__assert_fail@plt+0x167e4>
   27b64:	b	27b88 <__assert_fail@plt+0x16804>
   27b68:	movw	r0, #33610	; 0x834a
   27b6c:	movt	r0, #3
   27b70:	movw	r1, #28968	; 0x7128
   27b74:	movt	r1, #3
   27b78:	movw	r2, #3444	; 0xd74
   27b7c:	movw	r3, #33497	; 0x82d9
   27b80:	movt	r3, #3
   27b84:	bl	11384 <__assert_fail@plt>
   27b88:	ldr	r0, [fp, #8]
   27b8c:	movw	r1, #4
   27b90:	bl	1e708 <__assert_fail@plt+0xd384>
   27b94:	cmp	r0, #0
   27b98:	ble	27ba0 <__assert_fail@plt+0x1681c>
   27b9c:	b	27bc0 <__assert_fail@plt+0x1683c>
   27ba0:	movw	r0, #33632	; 0x8360
   27ba4:	movt	r0, #3
   27ba8:	movw	r1, #28968	; 0x7128
   27bac:	movt	r1, #3
   27bb0:	movw	r2, #3445	; 0xd75
   27bb4:	movw	r3, #33497	; 0x82d9
   27bb8:	movt	r3, #3
   27bbc:	bl	11384 <__assert_fail@plt>
   27bc0:	ldr	r0, [fp, #8]
   27bc4:	ldr	r0, [r0, #4]
   27bc8:	cmp	r0, #0
   27bcc:	movw	r0, #0
   27bd0:	movne	r0, #1
   27bd4:	and	r0, r0, #1
   27bd8:	ldr	r1, [fp, #8]
   27bdc:	ldr	r1, [r1, #8]
   27be0:	ldr	r1, [r1]
   27be4:	and	r0, r0, r1
   27be8:	cmp	r0, #0
   27bec:	beq	27bf4 <__assert_fail@plt+0x16870>
   27bf0:	b	27c14 <__assert_fail@plt+0x16890>
   27bf4:	movw	r0, #33360	; 0x8250
   27bf8:	movt	r0, #3
   27bfc:	movw	r1, #28968	; 0x7128
   27c00:	movt	r1, #3
   27c04:	movw	r2, #3446	; 0xd76
   27c08:	movw	r3, #33497	; 0x82d9
   27c0c:	movt	r3, #3
   27c10:	bl	11384 <__assert_fail@plt>
   27c14:	add	r0, sp, #24
   27c18:	movw	r1, #1
   27c1c:	bl	1d714 <__assert_fail@plt+0xc390>
   27c20:	ldr	r0, [fp, #-4]
   27c24:	movw	r1, #1
   27c28:	bl	1d4a4 <__assert_fail@plt+0xc120>
   27c2c:	ldr	r0, [fp, #-8]
   27c30:	ldr	r1, [fp, #-12]
   27c34:	bl	1d408 <__assert_fail@plt+0xc084>
   27c38:	ldr	r0, [fp, #8]
   27c3c:	movw	r1, #2
   27c40:	bl	22598 <__assert_fail@plt+0x11214>
   27c44:	sub	r0, r0, #1
   27c48:	str	r0, [fp, #-20]	; 0xffffffec
   27c4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27c50:	mvn	r1, #0
   27c54:	add	r0, r0, r1
   27c58:	str	r0, [fp, #-20]	; 0xffffffec
   27c5c:	ldr	r1, [fp, #-16]
   27c60:	cmp	r0, r1
   27c64:	bcc	27d80 <__assert_fail@plt+0x169fc>
   27c68:	add	r0, sp, #24
   27c6c:	ldr	r2, [fp, #-4]
   27c70:	str	r0, [sp, #16]
   27c74:	ldr	r1, [sp, #16]
   27c78:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   27c7c:	ldr	r0, [fp, #-4]
   27c80:	ldr	r1, [fp, #-8]
   27c84:	ldr	r2, [fp, #8]
   27c88:	bl	27db0 <__assert_fail@plt+0x16a2c>
   27c8c:	ldr	r0, [fp, #-16]
   27c90:	ldr	r1, [fp, #-20]	; 0xffffffec
   27c94:	cmp	r0, r1
   27c98:	beq	27cb0 <__assert_fail@plt+0x1692c>
   27c9c:	ldr	r0, [fp, #8]
   27ca0:	ldr	r1, [fp, #-20]	; 0xffffffec
   27ca4:	bl	2344c <__assert_fail@plt+0x120c8>
   27ca8:	cmp	r0, #0
   27cac:	beq	27d68 <__assert_fail@plt+0x169e4>
   27cb0:	ldr	r0, [fp, #-8]
   27cb4:	ldr	r1, [fp, #-8]
   27cb8:	ldr	r2, [fp, #-12]
   27cbc:	bl	1f040 <__assert_fail@plt+0xdcbc>
   27cc0:	add	r0, sp, #24
   27cc4:	ldr	r1, [fp, #-4]
   27cc8:	bl	1e9fc <__assert_fail@plt+0xd678>
   27ccc:	add	r0, sp, #24
   27cd0:	ldr	r2, [fp, #-4]
   27cd4:	str	r0, [sp, #12]
   27cd8:	ldr	r1, [sp, #12]
   27cdc:	bl	1ead8 <__assert_fail@plt+0xd754>
   27ce0:	ldr	r0, [sp, #28]
   27ce4:	cmp	r0, #0
   27ce8:	movw	r0, #0
   27cec:	movne	r0, #1
   27cf0:	and	r0, r0, #1
   27cf4:	ldr	r1, [sp, #32]
   27cf8:	ldr	r1, [r1]
   27cfc:	and	r0, r0, r1
   27d00:	cmp	r0, #0
   27d04:	beq	27d1c <__assert_fail@plt+0x16998>
   27d08:	add	r0, sp, #24
   27d0c:	ldr	r2, [fp, #8]
   27d10:	str	r0, [sp, #8]
   27d14:	ldr	r1, [sp, #8]
   27d18:	bl	1ead8 <__assert_fail@plt+0xd754>
   27d1c:	add	r0, sp, #24
   27d20:	str	r0, [sp, #4]
   27d24:	ldr	r1, [sp, #4]
   27d28:	movw	r2, #1
   27d2c:	bl	1ffd8 <__assert_fail@plt+0xec54>
   27d30:	ldr	r0, [fp, #-4]
   27d34:	ldr	r1, [fp, #-4]
   27d38:	ldr	r2, [fp, #-12]
   27d3c:	mvn	r3, #1
   27d40:	mul	r2, r2, r3
   27d44:	bl	1f040 <__assert_fail@plt+0xdcbc>
   27d48:	add	r1, sp, #24
   27d4c:	ldr	r0, [fp, #-4]
   27d50:	ldr	r2, [fp, #-4]
   27d54:	bl	1ead8 <__assert_fail@plt+0xd754>
   27d58:	ldr	r0, [fp, #-4]
   27d5c:	ldr	r1, [fp, #-4]
   27d60:	ldr	r2, [fp, #8]
   27d64:	bl	1fc80 <__assert_fail@plt+0xe8fc>
   27d68:	add	r0, sp, #24
   27d6c:	ldr	r2, [fp, #8]
   27d70:	str	r0, [sp]
   27d74:	ldr	r1, [sp]
   27d78:	bl	1fc80 <__assert_fail@plt+0xe8fc>
   27d7c:	b	27c4c <__assert_fail@plt+0x168c8>
   27d80:	add	r0, sp, #24
   27d84:	ldr	r1, [sp, #28]
   27d88:	cmp	r1, #0
   27d8c:	movw	r1, #0
   27d90:	moveq	r1, #1
   27d94:	and	r1, r1, #1
   27d98:	str	r1, [sp, #20]
   27d9c:	bl	1d384 <__assert_fail@plt+0xc000>
   27da0:	ldr	r0, [sp, #20]
   27da4:	mov	sp, fp
   27da8:	pop	{fp, pc}
   27dac:	andgt	r0, r0, r1
   27db0:	push	{fp, lr}
   27db4:	mov	fp, sp
   27db8:	sub	sp, sp, #16
   27dbc:	str	r0, [fp, #-4]
   27dc0:	str	r1, [sp, #8]
   27dc4:	str	r2, [sp, #4]
   27dc8:	ldr	r0, [sp, #8]
   27dcc:	ldr	r1, [sp, #8]
   27dd0:	ldr	r2, [sp, #4]
   27dd4:	bl	1fcbc <__assert_fail@plt+0xe938>
   27dd8:	ldr	r0, [fp, #-4]
   27ddc:	ldr	r1, [fp, #-4]
   27de0:	ldr	r2, [fp, #-4]
   27de4:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   27de8:	ldr	r0, [fp, #-4]
   27dec:	ldr	r1, [sp, #8]
   27df0:	movw	r2, #2
   27df4:	bl	1f4f0 <__assert_fail@plt+0xe16c>
   27df8:	ldr	r0, [fp, #-4]
   27dfc:	ldr	r1, [fp, #-4]
   27e00:	ldr	r2, [sp, #4]
   27e04:	bl	1fc80 <__assert_fail@plt+0xe8fc>
   27e08:	ldr	r0, [sp, #8]
   27e0c:	ldr	r1, [sp, #8]
   27e10:	ldr	r2, [sp, #8]
   27e14:	bl	1f0f4 <__assert_fail@plt+0xdd70>
   27e18:	mov	sp, fp
   27e1c:	pop	{fp, pc}
   27e20:	push	{fp, lr}
   27e24:	mov	fp, sp
   27e28:	sub	sp, sp, #24
   27e2c:	str	r0, [fp, #-4]
   27e30:	ldr	r0, [fp, #-4]
   27e34:	movw	r1, #0
   27e38:	cmp	r0, r1
   27e3c:	bne	27e60 <__assert_fail@plt+0x16adc>
   27e40:	movw	r0, #37248	; 0x9180
   27e44:	movt	r0, #4
   27e48:	ldr	r1, [r0]
   27e4c:	movw	r0, #33841	; 0x8431
   27e50:	movt	r0, #3
   27e54:	bl	11354 <fputs@plt>
   27e58:	str	r0, [sp, #8]
   27e5c:	bl	1136c <abort@plt>
   27e60:	ldr	r0, [fp, #-4]
   27e64:	movw	r1, #47	; 0x2f
   27e68:	bl	11318 <strrchr@plt>
   27e6c:	str	r0, [fp, #-8]
   27e70:	ldr	r0, [fp, #-8]
   27e74:	movw	r1, #0
   27e78:	cmp	r0, r1
   27e7c:	beq	27e90 <__assert_fail@plt+0x16b0c>
   27e80:	ldr	r0, [fp, #-8]
   27e84:	add	r0, r0, #1
   27e88:	str	r0, [sp, #4]
   27e8c:	b	27e98 <__assert_fail@plt+0x16b14>
   27e90:	ldr	r0, [fp, #-4]
   27e94:	str	r0, [sp, #4]
   27e98:	ldr	r0, [sp, #4]
   27e9c:	str	r0, [sp, #12]
   27ea0:	ldr	r0, [sp, #12]
   27ea4:	ldr	r1, [fp, #-4]
   27ea8:	sub	r0, r0, r1
   27eac:	cmp	r0, #7
   27eb0:	blt	27f1c <__assert_fail@plt+0x16b98>
   27eb4:	ldr	r0, [sp, #12]
   27eb8:	mvn	r1, #6
   27ebc:	add	r0, r0, r1
   27ec0:	movw	r1, #33897	; 0x8469
   27ec4:	movt	r1, #3
   27ec8:	movw	r2, #7
   27ecc:	bl	11360 <strncmp@plt>
   27ed0:	cmp	r0, #0
   27ed4:	bne	27f1c <__assert_fail@plt+0x16b98>
   27ed8:	ldr	r0, [sp, #12]
   27edc:	str	r0, [fp, #-4]
   27ee0:	ldr	r0, [sp, #12]
   27ee4:	movw	r1, #33905	; 0x8471
   27ee8:	movt	r1, #3
   27eec:	movw	r2, #3
   27ef0:	bl	11360 <strncmp@plt>
   27ef4:	cmp	r0, #0
   27ef8:	bne	27f18 <__assert_fail@plt+0x16b94>
   27efc:	ldr	r0, [sp, #12]
   27f00:	add	r0, r0, #3
   27f04:	str	r0, [fp, #-4]
   27f08:	ldr	r0, [fp, #-4]
   27f0c:	movw	r1, #37232	; 0x9170
   27f10:	movt	r1, #4
   27f14:	str	r0, [r1]
   27f18:	b	27f1c <__assert_fail@plt+0x16b98>
   27f1c:	ldr	r0, [fp, #-4]
   27f20:	movw	r1, #37288	; 0x91a8
   27f24:	movt	r1, #4
   27f28:	str	r0, [r1]
   27f2c:	ldr	r0, [fp, #-4]
   27f30:	movw	r1, #37236	; 0x9174
   27f34:	movt	r1, #4
   27f38:	str	r0, [r1]
   27f3c:	mov	sp, fp
   27f40:	pop	{fp, pc}
   27f44:	push	{fp, lr}
   27f48:	mov	fp, sp
   27f4c:	sub	sp, sp, #24
   27f50:	str	r0, [fp, #-8]
   27f54:	ldr	r0, [fp, #-8]
   27f58:	bl	11264 <gettext@plt>
   27f5c:	str	r0, [sp, #12]
   27f60:	ldr	r0, [sp, #12]
   27f64:	ldr	r1, [fp, #-8]
   27f68:	cmp	r0, r1
   27f6c:	beq	27fe8 <__assert_fail@plt+0x16c64>
   27f70:	ldr	r0, [sp, #12]
   27f74:	ldr	r1, [fp, #-8]
   27f78:	bl	27ffc <__assert_fail@plt+0x16c78>
   27f7c:	tst	r0, #1
   27f80:	beq	27f90 <__assert_fail@plt+0x16c0c>
   27f84:	ldr	r0, [sp, #12]
   27f88:	str	r0, [fp, #-4]
   27f8c:	b	27ff0 <__assert_fail@plt+0x16c6c>
   27f90:	ldr	r0, [sp, #12]
   27f94:	bl	11270 <strlen@plt>
   27f98:	add	r0, r0, #2
   27f9c:	ldr	r1, [fp, #-8]
   27fa0:	str	r0, [sp, #4]
   27fa4:	mov	r0, r1
   27fa8:	bl	11270 <strlen@plt>
   27fac:	ldr	r1, [sp, #4]
   27fb0:	add	r0, r1, r0
   27fb4:	add	r0, r0, #1
   27fb8:	add	r0, r0, #1
   27fbc:	bl	2c164 <__assert_fail@plt+0x1ade0>
   27fc0:	str	r0, [sp, #8]
   27fc4:	ldr	r0, [sp, #8]
   27fc8:	ldr	r2, [sp, #12]
   27fcc:	ldr	r3, [fp, #-8]
   27fd0:	movw	r1, #33909	; 0x8475
   27fd4:	movt	r1, #3
   27fd8:	bl	11330 <sprintf@plt>
   27fdc:	ldr	r1, [sp, #8]
   27fe0:	str	r1, [fp, #-4]
   27fe4:	b	27ff0 <__assert_fail@plt+0x16c6c>
   27fe8:	ldr	r0, [fp, #-8]
   27fec:	str	r0, [fp, #-4]
   27ff0:	ldr	r0, [fp, #-4]
   27ff4:	mov	sp, fp
   27ff8:	pop	{fp, pc}
   27ffc:	push	{r4, r5, fp, lr}
   28000:	add	fp, sp, #8
   28004:	sub	sp, sp, #280	; 0x118
   28008:	str	r0, [fp, #-12]
   2800c:	str	r1, [fp, #-16]
   28010:	ldr	r0, [fp, #-16]
   28014:	movw	r1, #2
   28018:	bl	2b400 <__assert_fail@plt+0x1a07c>
   2801c:	str	r0, [fp, #-20]	; 0xffffffec
   28020:	movw	r0, #0
   28024:	strb	r0, [fp, #-21]	; 0xffffffeb
   28028:	ldr	r0, [fp, #-12]
   2802c:	ldrb	r0, [r0]
   28030:	cmp	r0, #0
   28034:	beq	284f8 <__assert_fail@plt+0x17174>
   28038:	ldr	r0, [fp, #-12]
   2803c:	ldr	r1, [fp, #-20]	; 0xffffffec
   28040:	bl	2fbe4 <__assert_fail@plt+0x1e860>
   28044:	str	r0, [fp, #-28]	; 0xffffffe4
   28048:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2804c:	movw	r1, #0
   28050:	cmp	r0, r1
   28054:	bne	2805c <__assert_fail@plt+0x16cd8>
   28058:	b	284f8 <__assert_fail@plt+0x17174>
   2805c:	bl	111bc <__ctype_get_mb_cur_max@plt>
   28060:	cmp	r0, #1
   28064:	bls	283f4 <__assert_fail@plt+0x17070>
   28068:	ldr	r0, [fp, #-12]
   2806c:	str	r0, [fp, #-68]	; 0xffffffbc
   28070:	movw	r0, #0
   28074:	strb	r0, [fp, #-84]	; 0xffffffac
   28078:	sub	r1, fp, #84	; 0x54
   2807c:	add	r1, r1, #4
   28080:	str	r0, [sp, #48]	; 0x30
   28084:	mov	r0, r1
   28088:	ldr	r1, [sp, #48]	; 0x30
   2808c:	and	r1, r1, #255	; 0xff
   28090:	movw	r2, #8
   28094:	bl	112b8 <memset@plt>
   28098:	ldr	r0, [sp, #48]	; 0x30
   2809c:	strb	r0, [fp, #-72]	; 0xffffffb8
   280a0:	movw	r1, #1
   280a4:	strb	r1, [fp, #-85]	; 0xffffffab
   280a8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   280ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   280b0:	cmp	r1, r2
   280b4:	bcs	28174 <__assert_fail@plt+0x16df0>
   280b8:	b	280bc <__assert_fail@plt+0x16d38>
   280bc:	sub	r0, fp, #84	; 0x54
   280c0:	bl	30ca8 <__assert_fail@plt+0x1f924>
   280c4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   280c8:	tst	r0, #1
   280cc:	movw	r0, #0
   280d0:	str	r0, [sp, #44]	; 0x2c
   280d4:	beq	280ec <__assert_fail@plt+0x16d68>
   280d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   280dc:	cmp	r0, #0
   280e0:	movw	r0, #0
   280e4:	moveq	r0, #1
   280e8:	str	r0, [sp, #44]	; 0x2c
   280ec:	ldr	r0, [sp, #44]	; 0x2c
   280f0:	mvn	r1, #0
   280f4:	eor	r0, r0, r1
   280f8:	tst	r0, #1
   280fc:	bne	28104 <__assert_fail@plt+0x16d80>
   28100:	bl	1136c <abort@plt>
   28104:	sub	r0, fp, #84	; 0x54
   28108:	add	r0, r0, #16
   2810c:	sub	r1, fp, #128	; 0x80
   28110:	str	r0, [sp, #40]	; 0x28
   28114:	mov	r0, r1
   28118:	ldr	r1, [sp, #40]	; 0x28
   2811c:	movw	r2, #40	; 0x28
   28120:	bl	1112c <memcpy@plt>
   28124:	ldr	r0, [fp, #-64]	; 0xffffffc0
   28128:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2812c:	add	r0, r1, r0
   28130:	str	r0, [fp, #-68]	; 0xffffffbc
   28134:	movw	r0, #0
   28138:	strb	r0, [fp, #-72]	; 0xffffffb8
   2813c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   28140:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28144:	cmp	r0, r1
   28148:	bcc	280bc <__assert_fail@plt+0x16d38>
   2814c:	ldrb	r0, [fp, #-120]	; 0xffffff88
   28150:	tst	r0, #1
   28154:	beq	28170 <__assert_fail@plt+0x16dec>
   28158:	ldr	r0, [fp, #-116]	; 0xffffff8c
   2815c:	bl	112a0 <iswalnum@plt>
   28160:	cmp	r0, #0
   28164:	beq	28170 <__assert_fail@plt+0x16dec>
   28168:	movw	r0, #0
   2816c:	strb	r0, [fp, #-85]	; 0xffffffab
   28170:	b	28174 <__assert_fail@plt+0x16df0>
   28174:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28178:	str	r0, [fp, #-68]	; 0xffffffbc
   2817c:	movw	r0, #0
   28180:	strb	r0, [fp, #-84]	; 0xffffffac
   28184:	sub	r1, fp, #84	; 0x54
   28188:	add	r1, r1, #4
   2818c:	str	r0, [sp, #36]	; 0x24
   28190:	mov	r0, r1
   28194:	ldr	r1, [sp, #36]	; 0x24
   28198:	and	r1, r1, #255	; 0xff
   2819c:	movw	r2, #8
   281a0:	str	r2, [sp, #32]
   281a4:	bl	112b8 <memset@plt>
   281a8:	ldr	r0, [sp, #36]	; 0x24
   281ac:	strb	r0, [fp, #-72]	; 0xffffffb8
   281b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   281b4:	str	r1, [sp, #120]	; 0x78
   281b8:	strb	r0, [sp, #104]	; 0x68
   281bc:	add	r1, sp, #104	; 0x68
   281c0:	add	r1, r1, #4
   281c4:	mov	r0, r1
   281c8:	ldr	r1, [sp, #36]	; 0x24
   281cc:	and	r1, r1, #255	; 0xff
   281d0:	ldr	r2, [sp, #32]
   281d4:	bl	112b8 <memset@plt>
   281d8:	ldr	r0, [sp, #36]	; 0x24
   281dc:	strb	r0, [sp, #116]	; 0x74
   281e0:	add	r0, sp, #104	; 0x68
   281e4:	bl	30ca8 <__assert_fail@plt+0x1f924>
   281e8:	ldrb	r0, [sp, #128]	; 0x80
   281ec:	tst	r0, #1
   281f0:	movw	r0, #0
   281f4:	str	r0, [sp, #28]
   281f8:	beq	28210 <__assert_fail@plt+0x16e8c>
   281fc:	ldr	r0, [sp, #132]	; 0x84
   28200:	cmp	r0, #0
   28204:	movw	r0, #0
   28208:	moveq	r0, #1
   2820c:	str	r0, [sp, #28]
   28210:	ldr	r0, [sp, #28]
   28214:	mvn	r1, #0
   28218:	eor	r0, r0, r1
   2821c:	tst	r0, #1
   28220:	beq	282a0 <__assert_fail@plt+0x16f1c>
   28224:	sub	r0, fp, #84	; 0x54
   28228:	bl	30ca8 <__assert_fail@plt+0x1f924>
   2822c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   28230:	tst	r0, #1
   28234:	movw	r0, #0
   28238:	str	r0, [sp, #24]
   2823c:	beq	28254 <__assert_fail@plt+0x16ed0>
   28240:	ldr	r0, [fp, #-56]	; 0xffffffc8
   28244:	cmp	r0, #0
   28248:	movw	r0, #0
   2824c:	moveq	r0, #1
   28250:	str	r0, [sp, #24]
   28254:	ldr	r0, [sp, #24]
   28258:	mvn	r1, #0
   2825c:	eor	r0, r0, r1
   28260:	tst	r0, #1
   28264:	bne	2826c <__assert_fail@plt+0x16ee8>
   28268:	bl	1136c <abort@plt>
   2826c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   28270:	ldr	r1, [fp, #-68]	; 0xffffffbc
   28274:	add	r0, r1, r0
   28278:	str	r0, [fp, #-68]	; 0xffffffbc
   2827c:	movw	r0, #0
   28280:	strb	r0, [fp, #-72]	; 0xffffffb8
   28284:	ldr	r0, [sp, #124]	; 0x7c
   28288:	ldr	r1, [sp, #120]	; 0x78
   2828c:	add	r0, r1, r0
   28290:	str	r0, [sp, #120]	; 0x78
   28294:	movw	r0, #0
   28298:	strb	r0, [sp, #116]	; 0x74
   2829c:	b	281e0 <__assert_fail@plt+0x16e5c>
   282a0:	movw	r0, #1
   282a4:	strb	r0, [fp, #-86]	; 0xffffffaa
   282a8:	sub	r0, fp, #84	; 0x54
   282ac:	bl	30ca8 <__assert_fail@plt+0x1f924>
   282b0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   282b4:	tst	r0, #1
   282b8:	movw	r0, #0
   282bc:	str	r0, [sp, #20]
   282c0:	beq	282d8 <__assert_fail@plt+0x16f54>
   282c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   282c8:	cmp	r0, #0
   282cc:	movw	r0, #0
   282d0:	moveq	r0, #1
   282d4:	str	r0, [sp, #20]
   282d8:	ldr	r0, [sp, #20]
   282dc:	mvn	r1, #0
   282e0:	eor	r0, r0, r1
   282e4:	tst	r0, #1
   282e8:	beq	28334 <__assert_fail@plt+0x16fb0>
   282ec:	sub	r0, fp, #84	; 0x54
   282f0:	add	r0, r0, #16
   282f4:	add	r1, sp, #64	; 0x40
   282f8:	str	r0, [sp, #16]
   282fc:	mov	r0, r1
   28300:	ldr	r1, [sp, #16]
   28304:	movw	r2, #40	; 0x28
   28308:	bl	1112c <memcpy@plt>
   2830c:	ldrb	r0, [sp, #72]	; 0x48
   28310:	tst	r0, #1
   28314:	beq	28330 <__assert_fail@plt+0x16fac>
   28318:	ldr	r0, [sp, #76]	; 0x4c
   2831c:	bl	112a0 <iswalnum@plt>
   28320:	cmp	r0, #0
   28324:	beq	28330 <__assert_fail@plt+0x16fac>
   28328:	movw	r0, #0
   2832c:	strb	r0, [fp, #-86]	; 0xffffffaa
   28330:	b	28334 <__assert_fail@plt+0x16fb0>
   28334:	ldrb	r0, [fp, #-85]	; 0xffffffab
   28338:	tst	r0, #1
   2833c:	beq	28358 <__assert_fail@plt+0x16fd4>
   28340:	ldrb	r0, [fp, #-86]	; 0xffffffaa
   28344:	tst	r0, #1
   28348:	beq	28358 <__assert_fail@plt+0x16fd4>
   2834c:	movw	r0, #1
   28350:	strb	r0, [fp, #-21]	; 0xffffffeb
   28354:	b	284f8 <__assert_fail@plt+0x17174>
   28358:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2835c:	str	r0, [fp, #-68]	; 0xffffffbc
   28360:	movw	r0, #0
   28364:	strb	r0, [fp, #-84]	; 0xffffffac
   28368:	sub	r1, fp, #84	; 0x54
   2836c:	add	r2, r1, #4
   28370:	str	r0, [sp, #12]
   28374:	mov	r0, r2
   28378:	ldr	r2, [sp, #12]
   2837c:	and	r3, r2, #255	; 0xff
   28380:	str	r1, [sp, #8]
   28384:	mov	r1, r3
   28388:	movw	r2, #8
   2838c:	bl	112b8 <memset@plt>
   28390:	ldr	r0, [sp, #12]
   28394:	strb	r0, [fp, #-72]	; 0xffffffb8
   28398:	ldr	r0, [sp, #8]
   2839c:	bl	30ca8 <__assert_fail@plt+0x1f924>
   283a0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   283a4:	tst	r0, #1
   283a8:	movw	r0, #0
   283ac:	str	r0, [sp, #4]
   283b0:	beq	283c8 <__assert_fail@plt+0x17044>
   283b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   283b8:	cmp	r0, #0
   283bc:	movw	r0, #0
   283c0:	moveq	r0, #1
   283c4:	str	r0, [sp, #4]
   283c8:	ldr	r0, [sp, #4]
   283cc:	mvn	r1, #0
   283d0:	eor	r0, r0, r1
   283d4:	tst	r0, #1
   283d8:	bne	283e0 <__assert_fail@plt+0x1705c>
   283dc:	b	284f8 <__assert_fail@plt+0x17174>
   283e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   283e4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   283e8:	add	r0, r0, r1
   283ec:	str	r0, [fp, #-12]
   283f0:	b	284f0 <__assert_fail@plt+0x1716c>
   283f4:	movw	r0, #1
   283f8:	strb	r0, [sp, #63]	; 0x3f
   283fc:	ldr	r0, [fp, #-12]
   28400:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28404:	cmp	r0, r1
   28408:	bcs	28440 <__assert_fail@plt+0x170bc>
   2840c:	bl	11240 <__ctype_b_loc@plt>
   28410:	ldr	r0, [r0]
   28414:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28418:	ldrb	r1, [r1, #-1]
   2841c:	mov	r2, r1
   28420:	add	r0, r0, r1, lsl #1
   28424:	ldrh	r0, [r0]
   28428:	and	r0, r0, #8
   2842c:	cmp	r0, #0
   28430:	beq	2843c <__assert_fail@plt+0x170b8>
   28434:	movw	r0, #0
   28438:	strb	r0, [sp, #63]	; 0x3f
   2843c:	b	28440 <__assert_fail@plt+0x170bc>
   28440:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28444:	ldr	r1, [fp, #-20]	; 0xffffffec
   28448:	str	r0, [sp]
   2844c:	mov	r0, r1
   28450:	bl	11270 <strlen@plt>
   28454:	ldr	r1, [sp]
   28458:	add	r0, r1, r0
   2845c:	str	r0, [sp, #56]	; 0x38
   28460:	movw	r0, #1
   28464:	strb	r0, [sp, #55]	; 0x37
   28468:	ldr	r0, [sp, #56]	; 0x38
   2846c:	ldrb	r0, [r0]
   28470:	cmp	r0, #0
   28474:	beq	284ac <__assert_fail@plt+0x17128>
   28478:	bl	11240 <__ctype_b_loc@plt>
   2847c:	ldr	r0, [r0]
   28480:	ldr	r1, [sp, #56]	; 0x38
   28484:	ldrb	r1, [r1]
   28488:	mov	r2, r1
   2848c:	add	r0, r0, r1, lsl #1
   28490:	ldrh	r0, [r0]
   28494:	and	r0, r0, #8
   28498:	cmp	r0, #0
   2849c:	beq	284a8 <__assert_fail@plt+0x17124>
   284a0:	movw	r0, #0
   284a4:	strb	r0, [sp, #55]	; 0x37
   284a8:	b	284ac <__assert_fail@plt+0x17128>
   284ac:	ldrb	r0, [sp, #63]	; 0x3f
   284b0:	tst	r0, #1
   284b4:	beq	284d0 <__assert_fail@plt+0x1714c>
   284b8:	ldrb	r0, [sp, #55]	; 0x37
   284bc:	tst	r0, #1
   284c0:	beq	284d0 <__assert_fail@plt+0x1714c>
   284c4:	movw	r0, #1
   284c8:	strb	r0, [fp, #-21]	; 0xffffffeb
   284cc:	b	284f8 <__assert_fail@plt+0x17174>
   284d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   284d4:	ldrb	r0, [r0]
   284d8:	cmp	r0, #0
   284dc:	bne	284e4 <__assert_fail@plt+0x17160>
   284e0:	b	284f8 <__assert_fail@plt+0x17174>
   284e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   284e8:	add	r0, r0, #1
   284ec:	str	r0, [fp, #-12]
   284f0:	b	284f4 <__assert_fail@plt+0x17170>
   284f4:	b	28028 <__assert_fail@plt+0x16ca4>
   284f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   284fc:	bl	1aaec <__assert_fail@plt+0x9768>
   28500:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   28504:	and	r0, r0, #1
   28508:	sub	sp, fp, #8
   2850c:	pop	{r4, r5, fp, pc}
   28510:	push	{fp, lr}
   28514:	mov	fp, sp
   28518:	sub	sp, sp, #72	; 0x48
   2851c:	str	r0, [fp, #-8]
   28520:	str	r1, [fp, #-12]
   28524:	ldr	r0, [fp, #-8]
   28528:	bl	11264 <gettext@plt>
   2852c:	str	r0, [fp, #-16]
   28530:	bl	2f7b8 <__assert_fail@plt+0x1e434>
   28534:	str	r0, [fp, #-20]	; 0xffffffec
   28538:	movw	r0, #0
   2853c:	str	r0, [fp, #-24]	; 0xffffffe8
   28540:	str	r0, [fp, #-28]	; 0xffffffe4
   28544:	str	r0, [fp, #-32]	; 0xffffffe0
   28548:	str	r0, [sp, #36]	; 0x24
   2854c:	ldr	r0, [fp, #-20]	; 0xffffffec
   28550:	movw	r1, #33917	; 0x847d
   28554:	movt	r1, #3
   28558:	bl	2f1bc <__assert_fail@plt+0x1de38>
   2855c:	cmp	r0, #0
   28560:	beq	28684 <__assert_fail@plt+0x17300>
   28564:	ldr	r0, [fp, #-12]
   28568:	ldr	r2, [fp, #-20]	; 0xffffffec
   2856c:	movw	r1, #33917	; 0x847d
   28570:	movt	r1, #3
   28574:	bl	2efb0 <__assert_fail@plt+0x1dc2c>
   28578:	str	r0, [fp, #-24]	; 0xffffffe8
   2857c:	str	r0, [fp, #-32]	; 0xffffffe0
   28580:	ldr	r0, [fp, #-20]	; 0xffffffec
   28584:	bl	11270 <strlen@plt>
   28588:	str	r0, [sp, #24]
   2858c:	ldr	r0, [sp, #24]
   28590:	add	r0, r0, #10
   28594:	add	r0, r0, #1
   28598:	bl	2c164 <__assert_fail@plt+0x1ade0>
   2859c:	str	r0, [sp, #20]
   285a0:	ldr	r0, [sp, #20]
   285a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   285a8:	ldr	r2, [sp, #24]
   285ac:	bl	1112c <memcpy@plt>
   285b0:	ldr	r0, [sp, #20]
   285b4:	ldr	r1, [sp, #24]
   285b8:	add	r0, r0, r1
   285bc:	movw	r1, #33923	; 0x8483
   285c0:	movt	r1, #3
   285c4:	ldrb	r2, [r1]
   285c8:	strb	r2, [r0]
   285cc:	ldrb	r2, [r1, #1]
   285d0:	strb	r2, [r0, #1]
   285d4:	ldrb	r2, [r1, #2]
   285d8:	strb	r2, [r0, #2]
   285dc:	ldrb	r2, [r1, #3]
   285e0:	strb	r2, [r0, #3]
   285e4:	ldrb	r2, [r1, #4]
   285e8:	strb	r2, [r0, #4]
   285ec:	ldrb	r2, [r1, #5]
   285f0:	strb	r2, [r0, #5]
   285f4:	ldrb	r2, [r1, #6]
   285f8:	strb	r2, [r0, #6]
   285fc:	ldrb	r2, [r1, #7]
   28600:	strb	r2, [r0, #7]
   28604:	ldrb	r2, [r1, #8]
   28608:	strb	r2, [r0, #8]
   2860c:	ldrb	r2, [r1, #9]
   28610:	strb	r2, [r0, #9]
   28614:	ldrb	r1, [r1, #10]
   28618:	strb	r1, [r0, #10]
   2861c:	ldr	r0, [fp, #-12]
   28620:	ldr	r2, [sp, #20]
   28624:	movw	r1, #33917	; 0x847d
   28628:	movt	r1, #3
   2862c:	bl	2efb0 <__assert_fail@plt+0x1dc2c>
   28630:	str	r0, [sp, #28]
   28634:	ldr	r0, [sp, #20]
   28638:	bl	1aaec <__assert_fail@plt+0x9768>
   2863c:	ldr	r0, [sp, #28]
   28640:	movw	r1, #0
   28644:	cmp	r0, r1
   28648:	beq	28680 <__assert_fail@plt+0x172fc>
   2864c:	ldr	r0, [sp, #28]
   28650:	movw	r1, #63	; 0x3f
   28654:	bl	1127c <strchr@plt>
   28658:	movw	r1, #0
   2865c:	cmp	r0, r1
   28660:	beq	28670 <__assert_fail@plt+0x172ec>
   28664:	ldr	r0, [sp, #28]
   28668:	bl	1aaec <__assert_fail@plt+0x9768>
   2866c:	b	2867c <__assert_fail@plt+0x172f8>
   28670:	ldr	r0, [sp, #28]
   28674:	str	r0, [fp, #-28]	; 0xffffffe4
   28678:	str	r0, [sp, #36]	; 0x24
   2867c:	b	28680 <__assert_fail@plt+0x172fc>
   28680:	b	28694 <__assert_fail@plt+0x17310>
   28684:	ldr	r0, [fp, #-12]
   28688:	str	r0, [fp, #-32]	; 0xffffffe0
   2868c:	ldr	r0, [fp, #-12]
   28690:	str	r0, [sp, #36]	; 0x24
   28694:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28698:	movw	r1, #0
   2869c:	cmp	r0, r1
   286a0:	beq	286b0 <__assert_fail@plt+0x1732c>
   286a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   286a8:	str	r0, [sp, #12]
   286ac:	b	286dc <__assert_fail@plt+0x17358>
   286b0:	ldr	r0, [sp, #36]	; 0x24
   286b4:	movw	r1, #0
   286b8:	cmp	r0, r1
   286bc:	beq	286cc <__assert_fail@plt+0x17348>
   286c0:	ldr	r0, [sp, #36]	; 0x24
   286c4:	str	r0, [sp, #8]
   286c8:	b	286d4 <__assert_fail@plt+0x17350>
   286cc:	ldr	r0, [fp, #-8]
   286d0:	str	r0, [sp, #8]
   286d4:	ldr	r0, [sp, #8]
   286d8:	str	r0, [sp, #12]
   286dc:	ldr	r0, [sp, #12]
   286e0:	str	r0, [sp, #32]
   286e4:	ldr	r0, [fp, #-16]
   286e8:	ldr	r1, [fp, #-8]
   286ec:	bl	110d8 <strcmp@plt>
   286f0:	cmp	r0, #0
   286f4:	beq	28818 <__assert_fail@plt+0x17494>
   286f8:	ldr	r0, [fp, #-16]
   286fc:	ldr	r1, [fp, #-8]
   28700:	bl	27ffc <__assert_fail@plt+0x16c78>
   28704:	tst	r0, #1
   28708:	bne	28754 <__assert_fail@plt+0x173d0>
   2870c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28710:	movw	r1, #0
   28714:	cmp	r0, r1
   28718:	beq	28730 <__assert_fail@plt+0x173ac>
   2871c:	ldr	r0, [fp, #-16]
   28720:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28724:	bl	27ffc <__assert_fail@plt+0x16c78>
   28728:	tst	r0, #1
   2872c:	bne	28754 <__assert_fail@plt+0x173d0>
   28730:	ldr	r0, [sp, #36]	; 0x24
   28734:	movw	r1, #0
   28738:	cmp	r0, r1
   2873c:	beq	28790 <__assert_fail@plt+0x1740c>
   28740:	ldr	r0, [fp, #-16]
   28744:	ldr	r1, [sp, #36]	; 0x24
   28748:	bl	27ffc <__assert_fail@plt+0x16c78>
   2874c:	tst	r0, #1
   28750:	beq	28790 <__assert_fail@plt+0x1740c>
   28754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28758:	movw	r1, #0
   2875c:	cmp	r0, r1
   28760:	beq	2876c <__assert_fail@plt+0x173e8>
   28764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28768:	bl	1aaec <__assert_fail@plt+0x9768>
   2876c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28770:	movw	r1, #0
   28774:	cmp	r0, r1
   28778:	beq	28784 <__assert_fail@plt+0x17400>
   2877c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28780:	bl	1aaec <__assert_fail@plt+0x9768>
   28784:	ldr	r0, [fp, #-16]
   28788:	str	r0, [fp, #-4]
   2878c:	b	28870 <__assert_fail@plt+0x174ec>
   28790:	ldr	r0, [fp, #-16]
   28794:	bl	11270 <strlen@plt>
   28798:	add	r0, r0, #2
   2879c:	ldr	r1, [sp, #32]
   287a0:	str	r0, [sp, #4]
   287a4:	mov	r0, r1
   287a8:	bl	11270 <strlen@plt>
   287ac:	ldr	r1, [sp, #4]
   287b0:	add	r0, r1, r0
   287b4:	add	r0, r0, #1
   287b8:	add	r0, r0, #1
   287bc:	bl	2c164 <__assert_fail@plt+0x1ade0>
   287c0:	str	r0, [sp, #16]
   287c4:	ldr	r0, [sp, #16]
   287c8:	ldr	r2, [fp, #-16]
   287cc:	ldr	r3, [sp, #32]
   287d0:	movw	r1, #33909	; 0x8475
   287d4:	movt	r1, #3
   287d8:	bl	11330 <sprintf@plt>
   287dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   287e0:	movw	r2, #0
   287e4:	cmp	r1, r2
   287e8:	beq	287f4 <__assert_fail@plt+0x17470>
   287ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   287f0:	bl	1aaec <__assert_fail@plt+0x9768>
   287f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   287f8:	movw	r1, #0
   287fc:	cmp	r0, r1
   28800:	beq	2880c <__assert_fail@plt+0x17488>
   28804:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28808:	bl	1aaec <__assert_fail@plt+0x9768>
   2880c:	ldr	r0, [sp, #16]
   28810:	str	r0, [fp, #-4]
   28814:	b	28870 <__assert_fail@plt+0x174ec>
   28818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2881c:	movw	r1, #0
   28820:	cmp	r0, r1
   28824:	beq	28840 <__assert_fail@plt+0x174bc>
   28828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2882c:	ldr	r1, [sp, #32]
   28830:	cmp	r0, r1
   28834:	beq	28840 <__assert_fail@plt+0x174bc>
   28838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2883c:	bl	1aaec <__assert_fail@plt+0x9768>
   28840:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28844:	movw	r1, #0
   28848:	cmp	r0, r1
   2884c:	beq	28868 <__assert_fail@plt+0x174e4>
   28850:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28854:	ldr	r1, [sp, #32]
   28858:	cmp	r0, r1
   2885c:	beq	28868 <__assert_fail@plt+0x174e4>
   28860:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28864:	bl	1aaec <__assert_fail@plt+0x9768>
   28868:	ldr	r0, [sp, #32]
   2886c:	str	r0, [fp, #-4]
   28870:	ldr	r0, [fp, #-4]
   28874:	mov	sp, fp
   28878:	pop	{fp, pc}
   2887c:	push	{fp, lr}
   28880:	mov	fp, sp
   28884:	sub	sp, sp, #24
   28888:	str	r0, [fp, #-4]
   2888c:	bl	11294 <__errno_location@plt>
   28890:	ldr	r0, [r0]
   28894:	str	r0, [fp, #-8]
   28898:	ldr	r0, [fp, #-4]
   2889c:	movw	r1, #0
   288a0:	cmp	r0, r1
   288a4:	beq	288b4 <__assert_fail@plt+0x17530>
   288a8:	ldr	r0, [fp, #-4]
   288ac:	str	r0, [sp, #8]
   288b0:	b	288c4 <__assert_fail@plt+0x17540>
   288b4:	movw	r0, #37292	; 0x91ac
   288b8:	movt	r0, #4
   288bc:	str	r0, [sp, #8]
   288c0:	b	288c4 <__assert_fail@plt+0x17540>
   288c4:	ldr	r0, [sp, #8]
   288c8:	movw	r1, #48	; 0x30
   288cc:	bl	2ed9c <__assert_fail@plt+0x1da18>
   288d0:	str	r0, [sp, #12]
   288d4:	ldr	r0, [fp, #-8]
   288d8:	str	r0, [sp, #4]
   288dc:	bl	11294 <__errno_location@plt>
   288e0:	ldr	r1, [sp, #4]
   288e4:	str	r1, [r0]
   288e8:	ldr	r0, [sp, #12]
   288ec:	mov	sp, fp
   288f0:	pop	{fp, pc}
   288f4:	sub	sp, sp, #8
   288f8:	str	r0, [sp, #4]
   288fc:	ldr	r0, [sp, #4]
   28900:	movw	r1, #0
   28904:	cmp	r0, r1
   28908:	beq	28918 <__assert_fail@plt+0x17594>
   2890c:	ldr	r0, [sp, #4]
   28910:	str	r0, [sp]
   28914:	b	28928 <__assert_fail@plt+0x175a4>
   28918:	movw	r0, #37292	; 0x91ac
   2891c:	movt	r0, #4
   28920:	str	r0, [sp]
   28924:	b	28928 <__assert_fail@plt+0x175a4>
   28928:	ldr	r0, [sp]
   2892c:	ldr	r0, [r0]
   28930:	add	sp, sp, #8
   28934:	bx	lr
   28938:	sub	sp, sp, #16
   2893c:	str	r0, [sp, #12]
   28940:	str	r1, [sp, #8]
   28944:	ldr	r0, [sp, #8]
   28948:	ldr	r1, [sp, #12]
   2894c:	movw	r2, #0
   28950:	cmp	r1, r2
   28954:	str	r0, [sp, #4]
   28958:	beq	28968 <__assert_fail@plt+0x175e4>
   2895c:	ldr	r0, [sp, #12]
   28960:	str	r0, [sp]
   28964:	b	28978 <__assert_fail@plt+0x175f4>
   28968:	movw	r0, #37292	; 0x91ac
   2896c:	movt	r0, #4
   28970:	str	r0, [sp]
   28974:	b	28978 <__assert_fail@plt+0x175f4>
   28978:	ldr	r0, [sp]
   2897c:	ldr	r1, [sp, #4]
   28980:	str	r1, [r0]
   28984:	add	sp, sp, #16
   28988:	bx	lr
   2898c:	sub	sp, sp, #32
   28990:	str	r0, [sp, #28]
   28994:	strb	r1, [sp, #27]
   28998:	str	r2, [sp, #20]
   2899c:	ldrb	r0, [sp, #27]
   289a0:	strb	r0, [sp, #19]
   289a4:	ldr	r0, [sp, #28]
   289a8:	movw	r1, #0
   289ac:	cmp	r0, r1
   289b0:	beq	289c0 <__assert_fail@plt+0x1763c>
   289b4:	ldr	r0, [sp, #28]
   289b8:	str	r0, [sp]
   289bc:	b	289d0 <__assert_fail@plt+0x1764c>
   289c0:	movw	r0, #37292	; 0x91ac
   289c4:	movt	r0, #4
   289c8:	str	r0, [sp]
   289cc:	b	289d0 <__assert_fail@plt+0x1764c>
   289d0:	ldr	r0, [sp]
   289d4:	add	r0, r0, #8
   289d8:	ldrb	r1, [sp, #19]
   289dc:	lsr	r1, r1, #5
   289e0:	add	r0, r0, r1, lsl #2
   289e4:	str	r0, [sp, #12]
   289e8:	ldrb	r0, [sp, #19]
   289ec:	and	r0, r0, #31
   289f0:	str	r0, [sp, #8]
   289f4:	ldr	r0, [sp, #12]
   289f8:	ldr	r0, [r0]
   289fc:	ldr	r1, [sp, #8]
   28a00:	lsr	r0, r0, r1
   28a04:	and	r0, r0, #1
   28a08:	str	r0, [sp, #4]
   28a0c:	ldr	r0, [sp, #20]
   28a10:	and	r0, r0, #1
   28a14:	ldr	r1, [sp, #4]
   28a18:	eor	r0, r0, r1
   28a1c:	ldr	r1, [sp, #8]
   28a20:	lsl	r0, r0, r1
   28a24:	ldr	r1, [sp, #12]
   28a28:	ldr	r2, [r1]
   28a2c:	eor	r0, r2, r0
   28a30:	str	r0, [r1]
   28a34:	ldr	r0, [sp, #4]
   28a38:	add	sp, sp, #32
   28a3c:	bx	lr
   28a40:	sub	sp, sp, #12
   28a44:	str	r0, [sp, #8]
   28a48:	str	r1, [sp, #4]
   28a4c:	ldr	r0, [sp, #8]
   28a50:	movw	r1, #0
   28a54:	cmp	r0, r1
   28a58:	bne	28a68 <__assert_fail@plt+0x176e4>
   28a5c:	movw	r0, #37292	; 0x91ac
   28a60:	movt	r0, #4
   28a64:	str	r0, [sp, #8]
   28a68:	ldr	r0, [sp, #8]
   28a6c:	ldr	r0, [r0, #4]
   28a70:	str	r0, [sp]
   28a74:	ldr	r0, [sp, #4]
   28a78:	ldr	r1, [sp, #8]
   28a7c:	str	r0, [r1, #4]
   28a80:	ldr	r0, [sp]
   28a84:	add	sp, sp, #12
   28a88:	bx	lr
   28a8c:	push	{fp, lr}
   28a90:	mov	fp, sp
   28a94:	sub	sp, sp, #16
   28a98:	str	r0, [fp, #-4]
   28a9c:	str	r1, [sp, #8]
   28aa0:	str	r2, [sp, #4]
   28aa4:	ldr	r0, [fp, #-4]
   28aa8:	movw	r1, #0
   28aac:	cmp	r0, r1
   28ab0:	bne	28ac0 <__assert_fail@plt+0x1773c>
   28ab4:	movw	r0, #37292	; 0x91ac
   28ab8:	movt	r0, #4
   28abc:	str	r0, [fp, #-4]
   28ac0:	ldr	r0, [fp, #-4]
   28ac4:	movw	r1, #10
   28ac8:	str	r1, [r0]
   28acc:	ldr	r0, [sp, #8]
   28ad0:	movw	r1, #0
   28ad4:	cmp	r0, r1
   28ad8:	beq	28aec <__assert_fail@plt+0x17768>
   28adc:	ldr	r0, [sp, #4]
   28ae0:	movw	r1, #0
   28ae4:	cmp	r0, r1
   28ae8:	bne	28af0 <__assert_fail@plt+0x1776c>
   28aec:	bl	1136c <abort@plt>
   28af0:	ldr	r0, [sp, #8]
   28af4:	ldr	r1, [fp, #-4]
   28af8:	str	r0, [r1, #40]	; 0x28
   28afc:	ldr	r0, [sp, #4]
   28b00:	ldr	r1, [fp, #-4]
   28b04:	str	r0, [r1, #44]	; 0x2c
   28b08:	mov	sp, fp
   28b0c:	pop	{fp, pc}
   28b10:	push	{r4, r5, r6, sl, fp, lr}
   28b14:	add	fp, sp, #16
   28b18:	sub	sp, sp, #56	; 0x38
   28b1c:	ldr	ip, [fp, #8]
   28b20:	str	r0, [fp, #-20]	; 0xffffffec
   28b24:	str	r1, [fp, #-24]	; 0xffffffe8
   28b28:	str	r2, [fp, #-28]	; 0xffffffe4
   28b2c:	str	r3, [fp, #-32]	; 0xffffffe0
   28b30:	ldr	r0, [fp, #8]
   28b34:	movw	r1, #0
   28b38:	cmp	r0, r1
   28b3c:	beq	28b4c <__assert_fail@plt+0x177c8>
   28b40:	ldr	r0, [fp, #8]
   28b44:	str	r0, [sp, #24]
   28b48:	b	28b5c <__assert_fail@plt+0x177d8>
   28b4c:	movw	r0, #37292	; 0x91ac
   28b50:	movt	r0, #4
   28b54:	str	r0, [sp, #24]
   28b58:	b	28b5c <__assert_fail@plt+0x177d8>
   28b5c:	ldr	r0, [sp, #24]
   28b60:	str	r0, [sp, #36]	; 0x24
   28b64:	bl	11294 <__errno_location@plt>
   28b68:	ldr	r0, [r0]
   28b6c:	str	r0, [sp, #32]
   28b70:	ldr	r0, [fp, #-20]	; 0xffffffec
   28b74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28b78:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28b7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28b80:	ldr	ip, [sp, #36]	; 0x24
   28b84:	ldr	ip, [ip]
   28b88:	ldr	lr, [sp, #36]	; 0x24
   28b8c:	ldr	lr, [lr, #4]
   28b90:	ldr	r4, [sp, #36]	; 0x24
   28b94:	add	r4, r4, #8
   28b98:	ldr	r5, [sp, #36]	; 0x24
   28b9c:	ldr	r5, [r5, #40]	; 0x28
   28ba0:	ldr	r6, [sp, #36]	; 0x24
   28ba4:	ldr	r6, [r6, #44]	; 0x2c
   28ba8:	str	ip, [sp]
   28bac:	str	lr, [sp, #4]
   28bb0:	str	r4, [sp, #8]
   28bb4:	str	r5, [sp, #12]
   28bb8:	str	r6, [sp, #16]
   28bbc:	bl	28be4 <__assert_fail@plt+0x17860>
   28bc0:	str	r0, [sp, #28]
   28bc4:	ldr	r0, [sp, #32]
   28bc8:	str	r0, [sp, #20]
   28bcc:	bl	11294 <__errno_location@plt>
   28bd0:	ldr	r1, [sp, #20]
   28bd4:	str	r1, [r0]
   28bd8:	ldr	r0, [sp, #28]
   28bdc:	sub	sp, fp, #16
   28be0:	pop	{r4, r5, r6, sl, fp, pc}
   28be4:	push	{r4, r5, r6, sl, fp, lr}
   28be8:	add	fp, sp, #16
   28bec:	sub	sp, sp, #160	; 0xa0
   28bf0:	ldr	ip, [fp, #24]
   28bf4:	ldr	lr, [fp, #20]
   28bf8:	ldr	r4, [fp, #16]
   28bfc:	ldr	r5, [fp, #12]
   28c00:	ldr	r6, [fp, #8]
   28c04:	str	r0, [fp, #-24]	; 0xffffffe8
   28c08:	str	r1, [fp, #-28]	; 0xffffffe4
   28c0c:	str	r2, [fp, #-32]	; 0xffffffe0
   28c10:	str	r3, [fp, #-36]	; 0xffffffdc
   28c14:	movw	r0, #0
   28c18:	str	r0, [fp, #-44]	; 0xffffffd4
   28c1c:	str	r0, [fp, #-48]	; 0xffffffd0
   28c20:	str	r0, [fp, #-52]	; 0xffffffcc
   28c24:	str	r0, [fp, #-56]	; 0xffffffc8
   28c28:	movw	r0, #0
   28c2c:	strb	r0, [fp, #-57]	; 0xffffffc7
   28c30:	str	ip, [sp, #72]	; 0x48
   28c34:	str	lr, [sp, #68]	; 0x44
   28c38:	str	r4, [sp, #64]	; 0x40
   28c3c:	str	r5, [sp, #60]	; 0x3c
   28c40:	str	r6, [sp, #56]	; 0x38
   28c44:	bl	111bc <__ctype_get_mb_cur_max@plt>
   28c48:	cmp	r0, #1
   28c4c:	movw	r0, #0
   28c50:	moveq	r0, #1
   28c54:	and	r0, r0, #1
   28c58:	strb	r0, [fp, #-58]	; 0xffffffc6
   28c5c:	ldr	r0, [fp, #12]
   28c60:	and	r0, r0, #2
   28c64:	cmp	r0, #0
   28c68:	movw	r0, #0
   28c6c:	movne	r0, #1
   28c70:	and	r0, r0, #1
   28c74:	strb	r0, [fp, #-59]	; 0xffffffc5
   28c78:	movw	r0, #0
   28c7c:	strb	r0, [fp, #-60]	; 0xffffffc4
   28c80:	strb	r0, [fp, #-61]	; 0xffffffc3
   28c84:	movw	r0, #1
   28c88:	strb	r0, [fp, #-62]	; 0xffffffc2
   28c8c:	ldr	r0, [fp, #8]
   28c90:	cmp	r0, #10
   28c94:	str	r0, [sp, #52]	; 0x34
   28c98:	bhi	28ec0 <__assert_fail@plt+0x17b3c>
   28c9c:	add	r0, pc, #8
   28ca0:	ldr	r1, [sp, #52]	; 0x34
   28ca4:	ldr	r0, [r0, r1, lsl #2]
   28ca8:	mov	pc, r0
   28cac:			; <UNDEFINED> instruction: 0x00028eb4
   28cb0:	andeq	r8, r2, r0, lsr lr
   28cb4:	andeq	r8, r2, r0, asr lr
   28cb8:	andeq	r8, r2, r8, lsr #28
   28cbc:	andeq	r8, r2, r8, lsr lr
   28cc0:	andeq	r8, r2, r8, ror #25
   28cc4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   28cc8:	andeq	r8, r2, ip, asr #26
   28ccc:	andeq	r8, r2, r0, ror #26
   28cd0:	andeq	r8, r2, r0, ror #26
   28cd4:	andeq	r8, r2, r0, ror #26
   28cd8:	movw	r0, #5
   28cdc:	str	r0, [fp, #8]
   28ce0:	movw	r0, #1
   28ce4:	strb	r0, [fp, #-59]	; 0xffffffc5
   28ce8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   28cec:	tst	r0, #1
   28cf0:	bne	28d2c <__assert_fail@plt+0x179a8>
   28cf4:	b	28cf8 <__assert_fail@plt+0x17974>
   28cf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28cfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28d00:	cmp	r0, r1
   28d04:	bcs	28d1c <__assert_fail@plt+0x17998>
   28d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28d0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28d10:	add	r0, r0, r1
   28d14:	movw	r1, #34	; 0x22
   28d18:	strb	r1, [r0]
   28d1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28d20:	add	r0, r0, #1
   28d24:	str	r0, [fp, #-44]	; 0xffffffd4
   28d28:	b	28d2c <__assert_fail@plt+0x179a8>
   28d2c:	movw	r0, #1
   28d30:	strb	r0, [fp, #-57]	; 0xffffffc7
   28d34:	movw	r0, #34010	; 0x84da
   28d38:	movt	r0, #3
   28d3c:	str	r0, [fp, #-52]	; 0xffffffcc
   28d40:	movw	r0, #1
   28d44:	str	r0, [fp, #-56]	; 0xffffffc8
   28d48:	b	28ec4 <__assert_fail@plt+0x17b40>
   28d4c:	movw	r0, #1
   28d50:	strb	r0, [fp, #-57]	; 0xffffffc7
   28d54:	movw	r0, #0
   28d58:	strb	r0, [fp, #-59]	; 0xffffffc5
   28d5c:	b	28ec4 <__assert_fail@plt+0x17b40>
   28d60:	ldr	r0, [fp, #8]
   28d64:	cmp	r0, #10
   28d68:	beq	28d94 <__assert_fail@plt+0x17a10>
   28d6c:	ldr	r1, [fp, #8]
   28d70:	movw	r0, #34012	; 0x84dc
   28d74:	movt	r0, #3
   28d78:	bl	2add8 <__assert_fail@plt+0x19a54>
   28d7c:	str	r0, [fp, #20]
   28d80:	ldr	r1, [fp, #8]
   28d84:	movw	r0, #35036	; 0x88dc
   28d88:	movt	r0, #3
   28d8c:	bl	2add8 <__assert_fail@plt+0x19a54>
   28d90:	str	r0, [fp, #24]
   28d94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   28d98:	tst	r0, #1
   28d9c:	bne	28e08 <__assert_fail@plt+0x17a84>
   28da0:	ldr	r0, [fp, #20]
   28da4:	str	r0, [fp, #-52]	; 0xffffffcc
   28da8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   28dac:	ldrsb	r0, [r0]
   28db0:	cmp	r0, #0
   28db4:	beq	28e04 <__assert_fail@plt+0x17a80>
   28db8:	b	28dbc <__assert_fail@plt+0x17a38>
   28dbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28dc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28dc4:	cmp	r0, r1
   28dc8:	bcs	28de4 <__assert_fail@plt+0x17a60>
   28dcc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   28dd0:	ldrb	r0, [r0]
   28dd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28dd8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   28ddc:	add	r1, r1, r2
   28de0:	strb	r0, [r1]
   28de4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28de8:	add	r0, r0, #1
   28dec:	str	r0, [fp, #-44]	; 0xffffffd4
   28df0:	b	28df4 <__assert_fail@plt+0x17a70>
   28df4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   28df8:	add	r0, r0, #1
   28dfc:	str	r0, [fp, #-52]	; 0xffffffcc
   28e00:	b	28da8 <__assert_fail@plt+0x17a24>
   28e04:	b	28e08 <__assert_fail@plt+0x17a84>
   28e08:	movw	r0, #1
   28e0c:	strb	r0, [fp, #-57]	; 0xffffffc7
   28e10:	ldr	r0, [fp, #24]
   28e14:	str	r0, [fp, #-52]	; 0xffffffcc
   28e18:	ldr	r0, [fp, #-52]	; 0xffffffcc
   28e1c:	bl	11270 <strlen@plt>
   28e20:	str	r0, [fp, #-56]	; 0xffffffc8
   28e24:	b	28ec4 <__assert_fail@plt+0x17b40>
   28e28:	movw	r0, #1
   28e2c:	strb	r0, [fp, #-57]	; 0xffffffc7
   28e30:	movw	r0, #1
   28e34:	strb	r0, [fp, #-59]	; 0xffffffc5
   28e38:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   28e3c:	tst	r0, #1
   28e40:	bne	28e4c <__assert_fail@plt+0x17ac8>
   28e44:	movw	r0, #1
   28e48:	strb	r0, [fp, #-57]	; 0xffffffc7
   28e4c:	b	28e50 <__assert_fail@plt+0x17acc>
   28e50:	movw	r0, #2
   28e54:	str	r0, [fp, #8]
   28e58:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   28e5c:	tst	r0, #1
   28e60:	bne	28e9c <__assert_fail@plt+0x17b18>
   28e64:	b	28e68 <__assert_fail@plt+0x17ae4>
   28e68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28e6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28e70:	cmp	r0, r1
   28e74:	bcs	28e8c <__assert_fail@plt+0x17b08>
   28e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28e7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28e80:	add	r0, r0, r1
   28e84:	movw	r1, #39	; 0x27
   28e88:	strb	r1, [r0]
   28e8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28e90:	add	r0, r0, #1
   28e94:	str	r0, [fp, #-44]	; 0xffffffd4
   28e98:	b	28e9c <__assert_fail@plt+0x17b18>
   28e9c:	movw	r0, #35036	; 0x88dc
   28ea0:	movt	r0, #3
   28ea4:	str	r0, [fp, #-52]	; 0xffffffcc
   28ea8:	movw	r0, #1
   28eac:	str	r0, [fp, #-56]	; 0xffffffc8
   28eb0:	b	28ec4 <__assert_fail@plt+0x17b40>
   28eb4:	movw	r0, #0
   28eb8:	strb	r0, [fp, #-59]	; 0xffffffc5
   28ebc:	b	28ec4 <__assert_fail@plt+0x17b40>
   28ec0:	bl	1136c <abort@plt>
   28ec4:	movw	r0, #0
   28ec8:	str	r0, [fp, #-40]	; 0xffffffd8
   28ecc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28ed0:	cmn	r0, #1
   28ed4:	bne	28f00 <__assert_fail@plt+0x17b7c>
   28ed8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28edc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28ee0:	add	r0, r0, r1
   28ee4:	ldrb	r0, [r0]
   28ee8:	cmp	r0, #0
   28eec:	movw	r0, #0
   28ef0:	moveq	r0, #1
   28ef4:	and	r0, r0, #1
   28ef8:	str	r0, [sp, #48]	; 0x30
   28efc:	b	28f1c <__assert_fail@plt+0x17b98>
   28f00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   28f04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28f08:	cmp	r0, r1
   28f0c:	movw	r0, #0
   28f10:	moveq	r0, #1
   28f14:	and	r0, r0, #1
   28f18:	str	r0, [sp, #48]	; 0x30
   28f1c:	ldr	r0, [sp, #48]	; 0x30
   28f20:	cmp	r0, #0
   28f24:	movw	r0, #0
   28f28:	movne	r0, #1
   28f2c:	mvn	r1, #0
   28f30:	eor	r0, r0, r1
   28f34:	tst	r0, #1
   28f38:	beq	2a124 <__assert_fail@plt+0x18da0>
   28f3c:	movw	r0, #0
   28f40:	strb	r0, [fp, #-65]	; 0xffffffbf
   28f44:	strb	r0, [fp, #-66]	; 0xffffffbe
   28f48:	strb	r0, [fp, #-67]	; 0xffffffbd
   28f4c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   28f50:	tst	r0, #1
   28f54:	beq	29000 <__assert_fail@plt+0x17c7c>
   28f58:	ldr	r0, [fp, #8]
   28f5c:	cmp	r0, #2
   28f60:	beq	29000 <__assert_fail@plt+0x17c7c>
   28f64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   28f68:	cmp	r0, #0
   28f6c:	beq	29000 <__assert_fail@plt+0x17c7c>
   28f70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   28f74:	ldr	r1, [fp, #-56]	; 0xffffffc8
   28f78:	add	r0, r0, r1
   28f7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28f80:	cmn	r1, #1
   28f84:	str	r0, [sp, #44]	; 0x2c
   28f88:	bne	28fb0 <__assert_fail@plt+0x17c2c>
   28f8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   28f90:	movw	r1, #1
   28f94:	cmp	r1, r0
   28f98:	bcs	28fb0 <__assert_fail@plt+0x17c2c>
   28f9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28fa0:	bl	11270 <strlen@plt>
   28fa4:	str	r0, [fp, #-36]	; 0xffffffdc
   28fa8:	str	r0, [sp, #40]	; 0x28
   28fac:	b	28fb8 <__assert_fail@plt+0x17c34>
   28fb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28fb4:	str	r0, [sp, #40]	; 0x28
   28fb8:	ldr	r0, [sp, #40]	; 0x28
   28fbc:	ldr	r1, [sp, #44]	; 0x2c
   28fc0:	cmp	r1, r0
   28fc4:	bhi	29000 <__assert_fail@plt+0x17c7c>
   28fc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28fcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28fd0:	add	r0, r0, r1
   28fd4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   28fd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   28fdc:	bl	11144 <memcmp@plt>
   28fe0:	cmp	r0, #0
   28fe4:	bne	29000 <__assert_fail@plt+0x17c7c>
   28fe8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   28fec:	tst	r0, #1
   28ff0:	beq	28ff8 <__assert_fail@plt+0x17c74>
   28ff4:	b	2a2a4 <__assert_fail@plt+0x18f20>
   28ff8:	movw	r0, #1
   28ffc:	strb	r0, [fp, #-65]	; 0xffffffbf
   29000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29004:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29008:	ldrb	r0, [r0, r1]
   2900c:	strb	r0, [fp, #-63]	; 0xffffffc1
   29010:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   29014:	mov	r1, r0
   29018:	cmp	r0, #126	; 0x7e
   2901c:	str	r1, [sp, #36]	; 0x24
   29020:	bhi	29890 <__assert_fail@plt+0x1850c>
   29024:	add	r0, pc, #8
   29028:	ldr	r1, [sp, #36]	; 0x24
   2902c:	ldr	r0, [r0, r1, lsl #2]
   29030:	mov	pc, r0
   29034:	andeq	r9, r2, r0, lsr r2
   29038:	muleq	r2, r0, r8
   2903c:	muleq	r2, r0, r8
   29040:	muleq	r2, r0, r8
   29044:	muleq	r2, r0, r8
   29048:	muleq	r2, r0, r8
   2904c:	muleq	r2, r0, r8
   29050:	andeq	r9, r2, r8, lsr r6
   29054:	andeq	r9, r2, r4, asr #12
   29058:	andeq	r9, r2, r4, ror r6
   2905c:	andeq	r9, r2, ip, asr r6
   29060:	andeq	r9, r2, r0, lsl #13
   29064:	andeq	r9, r2, r0, asr r6
   29068:	andeq	r9, r2, r8, ror #12
   2906c:	muleq	r2, r0, r8
   29070:	muleq	r2, r0, r8
   29074:	muleq	r2, r0, r8
   29078:	muleq	r2, r0, r8
   2907c:	muleq	r2, r0, r8
   29080:	muleq	r2, r0, r8
   29084:	muleq	r2, r0, r8
   29088:	muleq	r2, r0, r8
   2908c:	muleq	r2, r0, r8
   29090:	muleq	r2, r0, r8
   29094:	muleq	r2, r0, r8
   29098:	muleq	r2, r0, r8
   2909c:	muleq	r2, r0, r8
   290a0:	muleq	r2, r0, r8
   290a4:	muleq	r2, r0, r8
   290a8:	muleq	r2, r0, r8
   290ac:	muleq	r2, r0, r8
   290b0:	muleq	r2, r0, r8
   290b4:	andeq	r9, r2, r4, ror #14
   290b8:	andeq	r9, r2, ip, ror #14
   290bc:	andeq	r9, r2, ip, ror #14
   290c0:	andeq	r9, r2, r0, asr r7
   290c4:	andeq	r9, r2, ip, ror #14
   290c8:	andeq	r9, r2, r4, lsl #17
   290cc:	andeq	r9, r2, ip, ror #14
   290d0:	andeq	r9, r2, ip, lsl #15
   290d4:	andeq	r9, r2, ip, ror #14
   290d8:	andeq	r9, r2, ip, ror #14
   290dc:	andeq	r9, r2, ip, ror #14
   290e0:	andeq	r9, r2, r4, lsl #17
   290e4:	andeq	r9, r2, r4, lsl #17
   290e8:	andeq	r9, r2, r4, lsl #17
   290ec:	andeq	r9, r2, r4, lsl #17
   290f0:	andeq	r9, r2, r4, lsl #17
   290f4:	andeq	r9, r2, r4, lsl #17
   290f8:	andeq	r9, r2, r4, lsl #17
   290fc:	andeq	r9, r2, r4, lsl #17
   29100:	andeq	r9, r2, r4, lsl #17
   29104:	andeq	r9, r2, r4, lsl #17
   29108:	andeq	r9, r2, r4, lsl #17
   2910c:	andeq	r9, r2, r4, lsl #17
   29110:	andeq	r9, r2, r4, lsl #17
   29114:	andeq	r9, r2, r4, lsl #17
   29118:	andeq	r9, r2, r4, lsl #17
   2911c:	andeq	r9, r2, r4, lsl #17
   29120:	andeq	r9, r2, ip, ror #14
   29124:	andeq	r9, r2, ip, ror #14
   29128:	andeq	r9, r2, ip, ror #14
   2912c:	andeq	r9, r2, ip, ror #14
   29130:	andeq	r9, r2, ip, lsr r4
   29134:	muleq	r2, r0, r8
   29138:	andeq	r9, r2, r4, lsl #17
   2913c:	andeq	r9, r2, r4, lsl #17
   29140:	andeq	r9, r2, r4, lsl #17
   29144:	andeq	r9, r2, r4, lsl #17
   29148:	andeq	r9, r2, r4, lsl #17
   2914c:	andeq	r9, r2, r4, lsl #17
   29150:	andeq	r9, r2, r4, lsl #17
   29154:	andeq	r9, r2, r4, lsl #17
   29158:	andeq	r9, r2, r4, lsl #17
   2915c:	andeq	r9, r2, r4, lsl #17
   29160:	andeq	r9, r2, r4, lsl #17
   29164:	andeq	r9, r2, r4, lsl #17
   29168:	andeq	r9, r2, r4, lsl #17
   2916c:	andeq	r9, r2, r4, lsl #17
   29170:	andeq	r9, r2, r4, lsl #17
   29174:	andeq	r9, r2, r4, lsl #17
   29178:	andeq	r9, r2, r4, lsl #17
   2917c:	andeq	r9, r2, r4, lsl #17
   29180:	andeq	r9, r2, r4, lsl #17
   29184:	andeq	r9, r2, r4, lsl #17
   29188:	andeq	r9, r2, r4, lsl #17
   2918c:	andeq	r9, r2, r4, lsl #17
   29190:	andeq	r9, r2, r4, lsl #17
   29194:	andeq	r9, r2, r4, lsl #17
   29198:	andeq	r9, r2, r4, lsl #17
   2919c:	andeq	r9, r2, r4, lsl #17
   291a0:	andeq	r9, r2, ip, ror #14
   291a4:	andeq	r9, r2, ip, lsl #13
   291a8:	andeq	r9, r2, r4, lsl #17
   291ac:	andeq	r9, r2, ip, ror #14
   291b0:	andeq	r9, r2, r4, lsl #17
   291b4:	andeq	r9, r2, ip, ror #14
   291b8:	andeq	r9, r2, r4, lsl #17
   291bc:	andeq	r9, r2, r4, lsl #17
   291c0:	andeq	r9, r2, r4, lsl #17
   291c4:	andeq	r9, r2, r4, lsl #17
   291c8:	andeq	r9, r2, r4, lsl #17
   291cc:	andeq	r9, r2, r4, lsl #17
   291d0:	andeq	r9, r2, r4, lsl #17
   291d4:	andeq	r9, r2, r4, lsl #17
   291d8:	andeq	r9, r2, r4, lsl #17
   291dc:	andeq	r9, r2, r4, lsl #17
   291e0:	andeq	r9, r2, r4, lsl #17
   291e4:	andeq	r9, r2, r4, lsl #17
   291e8:	andeq	r9, r2, r4, lsl #17
   291ec:	andeq	r9, r2, r4, lsl #17
   291f0:	andeq	r9, r2, r4, lsl #17
   291f4:	andeq	r9, r2, r4, lsl #17
   291f8:	andeq	r9, r2, r4, lsl #17
   291fc:	andeq	r9, r2, r4, lsl #17
   29200:	andeq	r9, r2, r4, lsl #17
   29204:	andeq	r9, r2, r4, lsl #17
   29208:	andeq	r9, r2, r4, lsl #17
   2920c:	andeq	r9, r2, r4, lsl #17
   29210:	andeq	r9, r2, r4, lsl #17
   29214:	andeq	r9, r2, r4, lsl #17
   29218:	andeq	r9, r2, r4, lsl #17
   2921c:	andeq	r9, r2, r4, lsl #17
   29220:	andeq	r9, r2, ip, lsl r7
   29224:	andeq	r9, r2, ip, ror #14
   29228:	andeq	r9, r2, ip, lsl r7
   2922c:	andeq	r9, r2, r0, asr r7
   29230:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   29234:	tst	r0, #1
   29238:	beq	29420 <__assert_fail@plt+0x1809c>
   2923c:	b	29240 <__assert_fail@plt+0x17ebc>
   29240:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29244:	tst	r0, #1
   29248:	beq	29250 <__assert_fail@plt+0x17ecc>
   2924c:	b	2a2a4 <__assert_fail@plt+0x18f20>
   29250:	movw	r0, #1
   29254:	strb	r0, [fp, #-66]	; 0xffffffbe
   29258:	ldr	r0, [fp, #8]
   2925c:	cmp	r0, #2
   29260:	bne	29314 <__assert_fail@plt+0x17f90>
   29264:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   29268:	tst	r0, #1
   2926c:	bne	29314 <__assert_fail@plt+0x17f90>
   29270:	b	29274 <__assert_fail@plt+0x17ef0>
   29274:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29278:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2927c:	cmp	r0, r1
   29280:	bcs	29298 <__assert_fail@plt+0x17f14>
   29284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29288:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2928c:	add	r0, r0, r1
   29290:	movw	r1, #39	; 0x27
   29294:	strb	r1, [r0]
   29298:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2929c:	add	r0, r0, #1
   292a0:	str	r0, [fp, #-44]	; 0xffffffd4
   292a4:	b	292a8 <__assert_fail@plt+0x17f24>
   292a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   292ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   292b0:	cmp	r0, r1
   292b4:	bcs	292cc <__assert_fail@plt+0x17f48>
   292b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   292bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   292c0:	add	r0, r0, r1
   292c4:	movw	r1, #36	; 0x24
   292c8:	strb	r1, [r0]
   292cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   292d0:	add	r0, r0, #1
   292d4:	str	r0, [fp, #-44]	; 0xffffffd4
   292d8:	b	292dc <__assert_fail@plt+0x17f58>
   292dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   292e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   292e4:	cmp	r0, r1
   292e8:	bcs	29300 <__assert_fail@plt+0x17f7c>
   292ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   292f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   292f4:	add	r0, r0, r1
   292f8:	movw	r1, #39	; 0x27
   292fc:	strb	r1, [r0]
   29300:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29304:	add	r0, r0, #1
   29308:	str	r0, [fp, #-44]	; 0xffffffd4
   2930c:	movw	r0, #1
   29310:	strb	r0, [fp, #-60]	; 0xffffffc4
   29314:	b	29318 <__assert_fail@plt+0x17f94>
   29318:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2931c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29320:	cmp	r0, r1
   29324:	bcs	2933c <__assert_fail@plt+0x17fb8>
   29328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2932c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29330:	add	r0, r0, r1
   29334:	movw	r1, #92	; 0x5c
   29338:	strb	r1, [r0]
   2933c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29340:	add	r0, r0, #1
   29344:	str	r0, [fp, #-44]	; 0xffffffd4
   29348:	b	2934c <__assert_fail@plt+0x17fc8>
   2934c:	ldr	r0, [fp, #8]
   29350:	cmp	r0, #2
   29354:	beq	29414 <__assert_fail@plt+0x18090>
   29358:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2935c:	add	r0, r0, #1
   29360:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29364:	cmp	r0, r1
   29368:	bcs	29414 <__assert_fail@plt+0x18090>
   2936c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29370:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29374:	add	r1, r1, #1
   29378:	add	r0, r0, r1
   2937c:	ldrb	r0, [r0]
   29380:	movw	r1, #48	; 0x30
   29384:	cmp	r1, r0
   29388:	bgt	29414 <__assert_fail@plt+0x18090>
   2938c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29390:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29394:	add	r1, r1, #1
   29398:	add	r0, r0, r1
   2939c:	ldrb	r0, [r0]
   293a0:	cmp	r0, #57	; 0x39
   293a4:	bgt	29414 <__assert_fail@plt+0x18090>
   293a8:	b	293ac <__assert_fail@plt+0x18028>
   293ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   293b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   293b4:	cmp	r0, r1
   293b8:	bcs	293d0 <__assert_fail@plt+0x1804c>
   293bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   293c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   293c4:	add	r0, r0, r1
   293c8:	movw	r1, #48	; 0x30
   293cc:	strb	r1, [r0]
   293d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   293d4:	add	r0, r0, #1
   293d8:	str	r0, [fp, #-44]	; 0xffffffd4
   293dc:	b	293e0 <__assert_fail@plt+0x1805c>
   293e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   293e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   293e8:	cmp	r0, r1
   293ec:	bcs	29404 <__assert_fail@plt+0x18080>
   293f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   293f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   293f8:	add	r0, r0, r1
   293fc:	movw	r1, #48	; 0x30
   29400:	strb	r1, [r0]
   29404:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29408:	add	r0, r0, #1
   2940c:	str	r0, [fp, #-44]	; 0xffffffd4
   29410:	b	29414 <__assert_fail@plt+0x18090>
   29414:	movw	r0, #48	; 0x30
   29418:	strb	r0, [fp, #-63]	; 0xffffffc1
   2941c:	b	29438 <__assert_fail@plt+0x180b4>
   29420:	ldr	r0, [fp, #12]
   29424:	and	r0, r0, #1
   29428:	cmp	r0, #0
   2942c:	beq	29434 <__assert_fail@plt+0x180b0>
   29430:	b	2a114 <__assert_fail@plt+0x18d90>
   29434:	b	29438 <__assert_fail@plt+0x180b4>
   29438:	b	29eb0 <__assert_fail@plt+0x18b2c>
   2943c:	ldr	r0, [fp, #8]
   29440:	cmp	r0, #2
   29444:	str	r0, [sp, #32]
   29448:	beq	29460 <__assert_fail@plt+0x180dc>
   2944c:	b	29450 <__assert_fail@plt+0x180cc>
   29450:	ldr	r0, [sp, #32]
   29454:	cmp	r0, #5
   29458:	beq	29474 <__assert_fail@plt+0x180f0>
   2945c:	b	29630 <__assert_fail@plt+0x182ac>
   29460:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29464:	tst	r0, #1
   29468:	beq	29470 <__assert_fail@plt+0x180ec>
   2946c:	b	2a2a4 <__assert_fail@plt+0x18f20>
   29470:	b	29634 <__assert_fail@plt+0x182b0>
   29474:	ldr	r0, [fp, #12]
   29478:	and	r0, r0, #4
   2947c:	cmp	r0, #0
   29480:	beq	2962c <__assert_fail@plt+0x182a8>
   29484:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29488:	add	r0, r0, #2
   2948c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29490:	cmp	r0, r1
   29494:	bcs	2962c <__assert_fail@plt+0x182a8>
   29498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2949c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   294a0:	add	r1, r1, #1
   294a4:	add	r0, r0, r1
   294a8:	ldrb	r0, [r0]
   294ac:	cmp	r0, #63	; 0x3f
   294b0:	bne	2962c <__assert_fail@plt+0x182a8>
   294b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   294b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   294bc:	add	r0, r1, r0
   294c0:	ldrb	r0, [r0, #2]
   294c4:	mov	r1, r0
   294c8:	cmp	r0, #33	; 0x21
   294cc:	str	r1, [sp, #28]
   294d0:	beq	29520 <__assert_fail@plt+0x1819c>
   294d4:	b	294d8 <__assert_fail@plt+0x18154>
   294d8:	ldr	r0, [sp, #28]
   294dc:	sub	r1, r0, #39	; 0x27
   294e0:	cmp	r1, #3
   294e4:	bcc	29520 <__assert_fail@plt+0x1819c>
   294e8:	b	294ec <__assert_fail@plt+0x18168>
   294ec:	ldr	r0, [sp, #28]
   294f0:	cmp	r0, #45	; 0x2d
   294f4:	beq	29520 <__assert_fail@plt+0x1819c>
   294f8:	b	294fc <__assert_fail@plt+0x18178>
   294fc:	ldr	r0, [sp, #28]
   29500:	cmp	r0, #47	; 0x2f
   29504:	beq	29520 <__assert_fail@plt+0x1819c>
   29508:	b	2950c <__assert_fail@plt+0x18188>
   2950c:	ldr	r0, [sp, #28]
   29510:	sub	r1, r0, #60	; 0x3c
   29514:	cmp	r1, #2
   29518:	bhi	29624 <__assert_fail@plt+0x182a0>
   2951c:	b	29520 <__assert_fail@plt+0x1819c>
   29520:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29524:	tst	r0, #1
   29528:	beq	29530 <__assert_fail@plt+0x181ac>
   2952c:	b	2a2a4 <__assert_fail@plt+0x18f20>
   29530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29534:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29538:	add	r1, r1, #2
   2953c:	add	r0, r0, r1
   29540:	ldrb	r0, [r0]
   29544:	strb	r0, [fp, #-63]	; 0xffffffc1
   29548:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2954c:	add	r0, r0, #2
   29550:	str	r0, [fp, #-40]	; 0xffffffd8
   29554:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29558:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2955c:	cmp	r0, r1
   29560:	bcs	29578 <__assert_fail@plt+0x181f4>
   29564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29568:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2956c:	add	r0, r0, r1
   29570:	movw	r1, #63	; 0x3f
   29574:	strb	r1, [r0]
   29578:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2957c:	add	r0, r0, #1
   29580:	str	r0, [fp, #-44]	; 0xffffffd4
   29584:	b	29588 <__assert_fail@plt+0x18204>
   29588:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2958c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29590:	cmp	r0, r1
   29594:	bcs	295ac <__assert_fail@plt+0x18228>
   29598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2959c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   295a0:	add	r0, r0, r1
   295a4:	movw	r1, #34	; 0x22
   295a8:	strb	r1, [r0]
   295ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   295b0:	add	r0, r0, #1
   295b4:	str	r0, [fp, #-44]	; 0xffffffd4
   295b8:	b	295bc <__assert_fail@plt+0x18238>
   295bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   295c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   295c4:	cmp	r0, r1
   295c8:	bcs	295e0 <__assert_fail@plt+0x1825c>
   295cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   295d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   295d4:	add	r0, r0, r1
   295d8:	movw	r1, #34	; 0x22
   295dc:	strb	r1, [r0]
   295e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   295e4:	add	r0, r0, #1
   295e8:	str	r0, [fp, #-44]	; 0xffffffd4
   295ec:	b	295f0 <__assert_fail@plt+0x1826c>
   295f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   295f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   295f8:	cmp	r0, r1
   295fc:	bcs	29614 <__assert_fail@plt+0x18290>
   29600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29604:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29608:	add	r0, r0, r1
   2960c:	movw	r1, #63	; 0x3f
   29610:	strb	r1, [r0]
   29614:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29618:	add	r0, r0, #1
   2961c:	str	r0, [fp, #-44]	; 0xffffffd4
   29620:	b	29628 <__assert_fail@plt+0x182a4>
   29624:	b	29628 <__assert_fail@plt+0x182a4>
   29628:	b	2962c <__assert_fail@plt+0x182a8>
   2962c:	b	29634 <__assert_fail@plt+0x182b0>
   29630:	b	29634 <__assert_fail@plt+0x182b0>
   29634:	b	29eb0 <__assert_fail@plt+0x18b2c>
   29638:	movw	r0, #97	; 0x61
   2963c:	strb	r0, [fp, #-64]	; 0xffffffc0
   29640:	b	29700 <__assert_fail@plt+0x1837c>
   29644:	movw	r0, #98	; 0x62
   29648:	strb	r0, [fp, #-64]	; 0xffffffc0
   2964c:	b	29700 <__assert_fail@plt+0x1837c>
   29650:	movw	r0, #102	; 0x66
   29654:	strb	r0, [fp, #-64]	; 0xffffffc0
   29658:	b	29700 <__assert_fail@plt+0x1837c>
   2965c:	movw	r0, #110	; 0x6e
   29660:	strb	r0, [fp, #-64]	; 0xffffffc0
   29664:	b	296e0 <__assert_fail@plt+0x1835c>
   29668:	movw	r0, #114	; 0x72
   2966c:	strb	r0, [fp, #-64]	; 0xffffffc0
   29670:	b	296e0 <__assert_fail@plt+0x1835c>
   29674:	movw	r0, #116	; 0x74
   29678:	strb	r0, [fp, #-64]	; 0xffffffc0
   2967c:	b	296e0 <__assert_fail@plt+0x1835c>
   29680:	movw	r0, #118	; 0x76
   29684:	strb	r0, [fp, #-64]	; 0xffffffc0
   29688:	b	29700 <__assert_fail@plt+0x1837c>
   2968c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   29690:	strb	r0, [fp, #-64]	; 0xffffffc0
   29694:	ldr	r0, [fp, #8]
   29698:	cmp	r0, #2
   2969c:	bne	296b4 <__assert_fail@plt+0x18330>
   296a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   296a4:	tst	r0, #1
   296a8:	beq	296b0 <__assert_fail@plt+0x1832c>
   296ac:	b	2a2a4 <__assert_fail@plt+0x18f20>
   296b0:	b	2a038 <__assert_fail@plt+0x18cb4>
   296b4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   296b8:	tst	r0, #1
   296bc:	beq	296dc <__assert_fail@plt+0x18358>
   296c0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   296c4:	tst	r0, #1
   296c8:	beq	296dc <__assert_fail@plt+0x18358>
   296cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   296d0:	cmp	r0, #0
   296d4:	beq	296dc <__assert_fail@plt+0x18358>
   296d8:	b	2a038 <__assert_fail@plt+0x18cb4>
   296dc:	b	296e0 <__assert_fail@plt+0x1835c>
   296e0:	ldr	r0, [fp, #8]
   296e4:	cmp	r0, #2
   296e8:	bne	296fc <__assert_fail@plt+0x18378>
   296ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   296f0:	tst	r0, #1
   296f4:	beq	296fc <__assert_fail@plt+0x18378>
   296f8:	b	2a2a4 <__assert_fail@plt+0x18f20>
   296fc:	b	29700 <__assert_fail@plt+0x1837c>
   29700:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   29704:	tst	r0, #1
   29708:	beq	29718 <__assert_fail@plt+0x18394>
   2970c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   29710:	strb	r0, [fp, #-63]	; 0xffffffc1
   29714:	b	29f24 <__assert_fail@plt+0x18ba0>
   29718:	b	29eb0 <__assert_fail@plt+0x18b2c>
   2971c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29720:	cmn	r0, #1
   29724:	bne	2973c <__assert_fail@plt+0x183b8>
   29728:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2972c:	ldrb	r0, [r0, #1]
   29730:	cmp	r0, #0
   29734:	beq	2974c <__assert_fail@plt+0x183c8>
   29738:	b	29748 <__assert_fail@plt+0x183c4>
   2973c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29740:	cmp	r0, #1
   29744:	beq	2974c <__assert_fail@plt+0x183c8>
   29748:	b	29eb0 <__assert_fail@plt+0x18b2c>
   2974c:	b	29750 <__assert_fail@plt+0x183cc>
   29750:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29754:	cmp	r0, #0
   29758:	beq	29760 <__assert_fail@plt+0x183dc>
   2975c:	b	29eb0 <__assert_fail@plt+0x18b2c>
   29760:	b	29764 <__assert_fail@plt+0x183e0>
   29764:	movw	r0, #1
   29768:	strb	r0, [fp, #-67]	; 0xffffffbd
   2976c:	ldr	r0, [fp, #8]
   29770:	cmp	r0, #2
   29774:	bne	29788 <__assert_fail@plt+0x18404>
   29778:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2977c:	tst	r0, #1
   29780:	beq	29788 <__assert_fail@plt+0x18404>
   29784:	b	2a2a4 <__assert_fail@plt+0x18f20>
   29788:	b	29eb0 <__assert_fail@plt+0x18b2c>
   2978c:	movw	r0, #1
   29790:	strb	r0, [fp, #-61]	; 0xffffffc3
   29794:	strb	r0, [fp, #-67]	; 0xffffffbd
   29798:	ldr	r0, [fp, #8]
   2979c:	cmp	r0, #2
   297a0:	bne	29880 <__assert_fail@plt+0x184fc>
   297a4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   297a8:	tst	r0, #1
   297ac:	beq	297b4 <__assert_fail@plt+0x18430>
   297b0:	b	2a2a4 <__assert_fail@plt+0x18f20>
   297b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   297b8:	cmp	r0, #0
   297bc:	beq	297dc <__assert_fail@plt+0x18458>
   297c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   297c4:	cmp	r0, #0
   297c8:	bne	297dc <__assert_fail@plt+0x18458>
   297cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   297d0:	str	r0, [fp, #-48]	; 0xffffffd0
   297d4:	movw	r0, #0
   297d8:	str	r0, [fp, #-28]	; 0xffffffe4
   297dc:	b	297e0 <__assert_fail@plt+0x1845c>
   297e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   297e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   297e8:	cmp	r0, r1
   297ec:	bcs	29804 <__assert_fail@plt+0x18480>
   297f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   297f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   297f8:	add	r0, r0, r1
   297fc:	movw	r1, #39	; 0x27
   29800:	strb	r1, [r0]
   29804:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29808:	add	r0, r0, #1
   2980c:	str	r0, [fp, #-44]	; 0xffffffd4
   29810:	b	29814 <__assert_fail@plt+0x18490>
   29814:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29818:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2981c:	cmp	r0, r1
   29820:	bcs	29838 <__assert_fail@plt+0x184b4>
   29824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29828:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2982c:	add	r0, r0, r1
   29830:	movw	r1, #92	; 0x5c
   29834:	strb	r1, [r0]
   29838:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2983c:	add	r0, r0, #1
   29840:	str	r0, [fp, #-44]	; 0xffffffd4
   29844:	b	29848 <__assert_fail@plt+0x184c4>
   29848:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2984c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29850:	cmp	r0, r1
   29854:	bcs	2986c <__assert_fail@plt+0x184e8>
   29858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2985c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29860:	add	r0, r0, r1
   29864:	movw	r1, #39	; 0x27
   29868:	strb	r1, [r0]
   2986c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29870:	add	r0, r0, #1
   29874:	str	r0, [fp, #-44]	; 0xffffffd4
   29878:	movw	r0, #0
   2987c:	strb	r0, [fp, #-60]	; 0xffffffc4
   29880:	b	29eb0 <__assert_fail@plt+0x18b2c>
   29884:	movw	r0, #1
   29888:	strb	r0, [fp, #-67]	; 0xffffffbd
   2988c:	b	29eb0 <__assert_fail@plt+0x18b2c>
   29890:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   29894:	tst	r0, #1
   29898:	beq	298d8 <__assert_fail@plt+0x18554>
   2989c:	mov	r0, #1
   298a0:	str	r0, [fp, #-72]	; 0xffffffb8
   298a4:	bl	11240 <__ctype_b_loc@plt>
   298a8:	ldr	r0, [r0]
   298ac:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   298b0:	mov	r2, r1
   298b4:	add	r0, r0, r1, lsl #1
   298b8:	ldrh	r0, [r0]
   298bc:	and	r0, r0, #16384	; 0x4000
   298c0:	cmp	r0, #0
   298c4:	movw	r0, #0
   298c8:	movne	r0, #1
   298cc:	and	r0, r0, #1
   298d0:	strb	r0, [fp, #-73]	; 0xffffffb7
   298d4:	b	29b64 <__assert_fail@plt+0x187e0>
   298d8:	sub	r0, fp, #84	; 0x54
   298dc:	movw	r1, #0
   298e0:	and	r1, r1, #255	; 0xff
   298e4:	movw	r2, #8
   298e8:	bl	112b8 <memset@plt>
   298ec:	movw	r0, #0
   298f0:	str	r0, [fp, #-72]	; 0xffffffb8
   298f4:	movw	r0, #1
   298f8:	strb	r0, [fp, #-73]	; 0xffffffb7
   298fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29900:	cmn	r0, #1
   29904:	bne	29914 <__assert_fail@plt+0x18590>
   29908:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2990c:	bl	11270 <strlen@plt>
   29910:	str	r0, [fp, #-36]	; 0xffffffdc
   29914:	b	29918 <__assert_fail@plt+0x18594>
   29918:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2991c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29920:	ldr	r2, [fp, #-72]	; 0xffffffb8
   29924:	add	r1, r1, r2
   29928:	add	r1, r0, r1
   2992c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29930:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29934:	ldr	r3, [fp, #-72]	; 0xffffffb8
   29938:	add	r2, r2, r3
   2993c:	sub	r2, r0, r2
   29940:	add	r0, sp, #88	; 0x58
   29944:	sub	r3, fp, #84	; 0x54
   29948:	bl	2fb34 <__assert_fail@plt+0x1e7b0>
   2994c:	str	r0, [sp, #84]	; 0x54
   29950:	ldr	r0, [sp, #84]	; 0x54
   29954:	cmp	r0, #0
   29958:	bne	29960 <__assert_fail@plt+0x185dc>
   2995c:	b	29b60 <__assert_fail@plt+0x187dc>
   29960:	ldr	r0, [sp, #84]	; 0x54
   29964:	cmn	r0, #1
   29968:	bne	29978 <__assert_fail@plt+0x185f4>
   2996c:	movw	r0, #0
   29970:	strb	r0, [fp, #-73]	; 0xffffffb7
   29974:	b	29b60 <__assert_fail@plt+0x187dc>
   29978:	ldr	r0, [sp, #84]	; 0x54
   2997c:	cmn	r0, #2
   29980:	bne	299f4 <__assert_fail@plt+0x18670>
   29984:	movw	r0, #0
   29988:	strb	r0, [fp, #-73]	; 0xffffffb7
   2998c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29990:	ldr	r1, [fp, #-72]	; 0xffffffb8
   29994:	add	r0, r0, r1
   29998:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2999c:	cmp	r0, r1
   299a0:	movw	r0, #0
   299a4:	str	r0, [sp, #24]
   299a8:	bcs	299d4 <__assert_fail@plt+0x18650>
   299ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   299b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   299b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   299b8:	add	r1, r1, r2
   299bc:	add	r0, r0, r1
   299c0:	ldrb	r0, [r0]
   299c4:	cmp	r0, #0
   299c8:	movw	r0, #0
   299cc:	movne	r0, #1
   299d0:	str	r0, [sp, #24]
   299d4:	ldr	r0, [sp, #24]
   299d8:	tst	r0, #1
   299dc:	beq	299f0 <__assert_fail@plt+0x1866c>
   299e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   299e4:	add	r0, r0, #1
   299e8:	str	r0, [fp, #-72]	; 0xffffffb8
   299ec:	b	2998c <__assert_fail@plt+0x18608>
   299f0:	b	29b60 <__assert_fail@plt+0x187dc>
   299f4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   299f8:	tst	r0, #1
   299fc:	beq	29b08 <__assert_fail@plt+0x18784>
   29a00:	ldr	r0, [fp, #8]
   29a04:	cmp	r0, #2
   29a08:	bne	29b08 <__assert_fail@plt+0x18784>
   29a0c:	movw	r0, #1
   29a10:	str	r0, [sp, #80]	; 0x50
   29a14:	ldr	r0, [sp, #80]	; 0x50
   29a18:	ldr	r1, [sp, #84]	; 0x54
   29a1c:	cmp	r0, r1
   29a20:	bcs	29b04 <__assert_fail@plt+0x18780>
   29a24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29a28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29a2c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   29a30:	add	r1, r1, r2
   29a34:	ldr	r2, [sp, #80]	; 0x50
   29a38:	add	r1, r1, r2
   29a3c:	ldrb	r0, [r0, r1]
   29a40:	sub	r0, r0, #91	; 0x5b
   29a44:	cmp	r0, #33	; 0x21
   29a48:	str	r0, [sp, #20]
   29a4c:	bhi	29aec <__assert_fail@plt+0x18768>
   29a50:	add	r0, pc, #8
   29a54:	ldr	r1, [sp, #20]
   29a58:	ldr	r0, [r0, r1, lsl #2]
   29a5c:	mov	pc, r0
   29a60:	andeq	r9, r2, r8, ror #21
   29a64:	andeq	r9, r2, r8, ror #21
   29a68:	andeq	r9, r2, ip, ror #21
   29a6c:	andeq	r9, r2, r8, ror #21
   29a70:	andeq	r9, r2, ip, ror #21
   29a74:	andeq	r9, r2, r8, ror #21
   29a78:	andeq	r9, r2, ip, ror #21
   29a7c:	andeq	r9, r2, ip, ror #21
   29a80:	andeq	r9, r2, ip, ror #21
   29a84:	andeq	r9, r2, ip, ror #21
   29a88:	andeq	r9, r2, ip, ror #21
   29a8c:	andeq	r9, r2, ip, ror #21
   29a90:	andeq	r9, r2, ip, ror #21
   29a94:	andeq	r9, r2, ip, ror #21
   29a98:	andeq	r9, r2, ip, ror #21
   29a9c:	andeq	r9, r2, ip, ror #21
   29aa0:	andeq	r9, r2, ip, ror #21
   29aa4:	andeq	r9, r2, ip, ror #21
   29aa8:	andeq	r9, r2, ip, ror #21
   29aac:	andeq	r9, r2, ip, ror #21
   29ab0:	andeq	r9, r2, ip, ror #21
   29ab4:	andeq	r9, r2, ip, ror #21
   29ab8:	andeq	r9, r2, ip, ror #21
   29abc:	andeq	r9, r2, ip, ror #21
   29ac0:	andeq	r9, r2, ip, ror #21
   29ac4:	andeq	r9, r2, ip, ror #21
   29ac8:	andeq	r9, r2, ip, ror #21
   29acc:	andeq	r9, r2, ip, ror #21
   29ad0:	andeq	r9, r2, ip, ror #21
   29ad4:	andeq	r9, r2, ip, ror #21
   29ad8:	andeq	r9, r2, ip, ror #21
   29adc:	andeq	r9, r2, ip, ror #21
   29ae0:	andeq	r9, r2, ip, ror #21
   29ae4:	andeq	r9, r2, r8, ror #21
   29ae8:	b	2a2a4 <__assert_fail@plt+0x18f20>
   29aec:	b	29af0 <__assert_fail@plt+0x1876c>
   29af0:	b	29af4 <__assert_fail@plt+0x18770>
   29af4:	ldr	r0, [sp, #80]	; 0x50
   29af8:	add	r0, r0, #1
   29afc:	str	r0, [sp, #80]	; 0x50
   29b00:	b	29a14 <__assert_fail@plt+0x18690>
   29b04:	b	29b08 <__assert_fail@plt+0x18784>
   29b08:	ldr	r0, [sp, #88]	; 0x58
   29b0c:	bl	11198 <iswprint@plt>
   29b10:	cmp	r0, #0
   29b14:	bne	29b20 <__assert_fail@plt+0x1879c>
   29b18:	movw	r0, #0
   29b1c:	strb	r0, [fp, #-73]	; 0xffffffb7
   29b20:	ldr	r0, [sp, #84]	; 0x54
   29b24:	ldr	r1, [fp, #-72]	; 0xffffffb8
   29b28:	add	r0, r1, r0
   29b2c:	str	r0, [fp, #-72]	; 0xffffffb8
   29b30:	b	29b34 <__assert_fail@plt+0x187b0>
   29b34:	b	29b38 <__assert_fail@plt+0x187b4>
   29b38:	b	29b3c <__assert_fail@plt+0x187b8>
   29b3c:	sub	r0, fp, #84	; 0x54
   29b40:	bl	11138 <mbsinit@plt>
   29b44:	cmp	r0, #0
   29b48:	movw	r0, #0
   29b4c:	movne	r0, #1
   29b50:	mvn	r1, #0
   29b54:	eor	r0, r0, r1
   29b58:	tst	r0, #1
   29b5c:	bne	29918 <__assert_fail@plt+0x18594>
   29b60:	b	29b64 <__assert_fail@plt+0x187e0>
   29b64:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   29b68:	and	r0, r0, #1
   29b6c:	strb	r0, [fp, #-67]	; 0xffffffbd
   29b70:	ldr	r0, [fp, #-72]	; 0xffffffb8
   29b74:	movw	r1, #1
   29b78:	cmp	r1, r0
   29b7c:	bcc	29b98 <__assert_fail@plt+0x18814>
   29b80:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   29b84:	tst	r0, #1
   29b88:	beq	29eac <__assert_fail@plt+0x18b28>
   29b8c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   29b90:	tst	r0, #1
   29b94:	bne	29eac <__assert_fail@plt+0x18b28>
   29b98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29b9c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   29ba0:	add	r0, r0, r1
   29ba4:	str	r0, [sp, #76]	; 0x4c
   29ba8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   29bac:	tst	r0, #1
   29bb0:	beq	29d60 <__assert_fail@plt+0x189dc>
   29bb4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   29bb8:	tst	r0, #1
   29bbc:	bne	29d60 <__assert_fail@plt+0x189dc>
   29bc0:	b	29bc4 <__assert_fail@plt+0x18840>
   29bc4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29bc8:	tst	r0, #1
   29bcc:	beq	29bd4 <__assert_fail@plt+0x18850>
   29bd0:	b	2a2a4 <__assert_fail@plt+0x18f20>
   29bd4:	movw	r0, #1
   29bd8:	strb	r0, [fp, #-66]	; 0xffffffbe
   29bdc:	ldr	r0, [fp, #8]
   29be0:	cmp	r0, #2
   29be4:	bne	29c98 <__assert_fail@plt+0x18914>
   29be8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   29bec:	tst	r0, #1
   29bf0:	bne	29c98 <__assert_fail@plt+0x18914>
   29bf4:	b	29bf8 <__assert_fail@plt+0x18874>
   29bf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29bfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29c00:	cmp	r0, r1
   29c04:	bcs	29c1c <__assert_fail@plt+0x18898>
   29c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29c0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29c10:	add	r0, r0, r1
   29c14:	movw	r1, #39	; 0x27
   29c18:	strb	r1, [r0]
   29c1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29c20:	add	r0, r0, #1
   29c24:	str	r0, [fp, #-44]	; 0xffffffd4
   29c28:	b	29c2c <__assert_fail@plt+0x188a8>
   29c2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29c30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29c34:	cmp	r0, r1
   29c38:	bcs	29c50 <__assert_fail@plt+0x188cc>
   29c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29c40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29c44:	add	r0, r0, r1
   29c48:	movw	r1, #36	; 0x24
   29c4c:	strb	r1, [r0]
   29c50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29c54:	add	r0, r0, #1
   29c58:	str	r0, [fp, #-44]	; 0xffffffd4
   29c5c:	b	29c60 <__assert_fail@plt+0x188dc>
   29c60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29c64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29c68:	cmp	r0, r1
   29c6c:	bcs	29c84 <__assert_fail@plt+0x18900>
   29c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29c74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29c78:	add	r0, r0, r1
   29c7c:	movw	r1, #39	; 0x27
   29c80:	strb	r1, [r0]
   29c84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29c88:	add	r0, r0, #1
   29c8c:	str	r0, [fp, #-44]	; 0xffffffd4
   29c90:	movw	r0, #1
   29c94:	strb	r0, [fp, #-60]	; 0xffffffc4
   29c98:	b	29c9c <__assert_fail@plt+0x18918>
   29c9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29ca0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29ca4:	cmp	r0, r1
   29ca8:	bcs	29cc0 <__assert_fail@plt+0x1893c>
   29cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29cb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29cb4:	add	r0, r0, r1
   29cb8:	movw	r1, #92	; 0x5c
   29cbc:	strb	r1, [r0]
   29cc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29cc4:	add	r0, r0, #1
   29cc8:	str	r0, [fp, #-44]	; 0xffffffd4
   29ccc:	b	29cd0 <__assert_fail@plt+0x1894c>
   29cd0:	b	29cd4 <__assert_fail@plt+0x18950>
   29cd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29cd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29cdc:	cmp	r0, r1
   29ce0:	bcs	29d00 <__assert_fail@plt+0x1897c>
   29ce4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   29ce8:	asr	r0, r0, #6
   29cec:	add	r0, r0, #48	; 0x30
   29cf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29cf4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   29cf8:	add	r1, r1, r2
   29cfc:	strb	r0, [r1]
   29d00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d04:	add	r0, r0, #1
   29d08:	str	r0, [fp, #-44]	; 0xffffffd4
   29d0c:	b	29d10 <__assert_fail@plt+0x1898c>
   29d10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29d18:	cmp	r0, r1
   29d1c:	bcs	29d40 <__assert_fail@plt+0x189bc>
   29d20:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   29d24:	asr	r0, r0, #3
   29d28:	and	r0, r0, #7
   29d2c:	add	r0, r0, #48	; 0x30
   29d30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29d34:	ldr	r2, [fp, #-44]	; 0xffffffd4
   29d38:	add	r1, r1, r2
   29d3c:	strb	r0, [r1]
   29d40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d44:	add	r0, r0, #1
   29d48:	str	r0, [fp, #-44]	; 0xffffffd4
   29d4c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   29d50:	and	r0, r0, #7
   29d54:	add	r0, r0, #48	; 0x30
   29d58:	strb	r0, [fp, #-63]	; 0xffffffc1
   29d5c:	b	29dac <__assert_fail@plt+0x18a28>
   29d60:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   29d64:	tst	r0, #1
   29d68:	beq	29da8 <__assert_fail@plt+0x18a24>
   29d6c:	b	29d70 <__assert_fail@plt+0x189ec>
   29d70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29d78:	cmp	r0, r1
   29d7c:	bcs	29d94 <__assert_fail@plt+0x18a10>
   29d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29d84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29d88:	add	r0, r0, r1
   29d8c:	movw	r1, #92	; 0x5c
   29d90:	strb	r1, [r0]
   29d94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d98:	add	r0, r0, #1
   29d9c:	str	r0, [fp, #-44]	; 0xffffffd4
   29da0:	movw	r0, #0
   29da4:	strb	r0, [fp, #-65]	; 0xffffffbf
   29da8:	b	29dac <__assert_fail@plt+0x18a28>
   29dac:	ldr	r0, [sp, #76]	; 0x4c
   29db0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29db4:	add	r1, r1, #1
   29db8:	cmp	r0, r1
   29dbc:	bhi	29dc4 <__assert_fail@plt+0x18a40>
   29dc0:	b	29ea8 <__assert_fail@plt+0x18b24>
   29dc4:	b	29dc8 <__assert_fail@plt+0x18a44>
   29dc8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   29dcc:	tst	r0, #1
   29dd0:	beq	29e50 <__assert_fail@plt+0x18acc>
   29dd4:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   29dd8:	tst	r0, #1
   29ddc:	bne	29e50 <__assert_fail@plt+0x18acc>
   29de0:	b	29de4 <__assert_fail@plt+0x18a60>
   29de4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29de8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29dec:	cmp	r0, r1
   29df0:	bcs	29e08 <__assert_fail@plt+0x18a84>
   29df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29df8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29dfc:	add	r0, r0, r1
   29e00:	movw	r1, #39	; 0x27
   29e04:	strb	r1, [r0]
   29e08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29e0c:	add	r0, r0, #1
   29e10:	str	r0, [fp, #-44]	; 0xffffffd4
   29e14:	b	29e18 <__assert_fail@plt+0x18a94>
   29e18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29e1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29e20:	cmp	r0, r1
   29e24:	bcs	29e3c <__assert_fail@plt+0x18ab8>
   29e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29e2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29e30:	add	r0, r0, r1
   29e34:	movw	r1, #39	; 0x27
   29e38:	strb	r1, [r0]
   29e3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29e40:	add	r0, r0, #1
   29e44:	str	r0, [fp, #-44]	; 0xffffffd4
   29e48:	movw	r0, #0
   29e4c:	strb	r0, [fp, #-60]	; 0xffffffc4
   29e50:	b	29e54 <__assert_fail@plt+0x18ad0>
   29e54:	b	29e58 <__assert_fail@plt+0x18ad4>
   29e58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29e5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29e60:	cmp	r0, r1
   29e64:	bcs	29e7c <__assert_fail@plt+0x18af8>
   29e68:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   29e6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29e70:	ldr	r2, [fp, #-44]	; 0xffffffd4
   29e74:	add	r1, r1, r2
   29e78:	strb	r0, [r1]
   29e7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29e80:	add	r0, r0, #1
   29e84:	str	r0, [fp, #-44]	; 0xffffffd4
   29e88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29e8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29e90:	add	r1, r1, #1
   29e94:	str	r1, [fp, #-40]	; 0xffffffd8
   29e98:	add	r0, r0, r1
   29e9c:	ldrb	r0, [r0]
   29ea0:	strb	r0, [fp, #-63]	; 0xffffffc1
   29ea4:	b	29ba8 <__assert_fail@plt+0x18824>
   29ea8:	b	2a038 <__assert_fail@plt+0x18cb4>
   29eac:	b	29eb0 <__assert_fail@plt+0x18b2c>
   29eb0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   29eb4:	tst	r0, #1
   29eb8:	beq	29ec8 <__assert_fail@plt+0x18b44>
   29ebc:	ldr	r0, [fp, #8]
   29ec0:	cmp	r0, #2
   29ec4:	bne	29ed4 <__assert_fail@plt+0x18b50>
   29ec8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29ecc:	tst	r0, #1
   29ed0:	beq	29f10 <__assert_fail@plt+0x18b8c>
   29ed4:	ldr	r0, [fp, #16]
   29ed8:	movw	r1, #0
   29edc:	cmp	r0, r1
   29ee0:	beq	29f10 <__assert_fail@plt+0x18b8c>
   29ee4:	ldr	r0, [fp, #16]
   29ee8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   29eec:	lsr	r1, r1, #5
   29ef0:	add	r0, r0, r1, lsl #2
   29ef4:	ldr	r0, [r0]
   29ef8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   29efc:	and	r1, r1, #31
   29f00:	lsr	r0, r0, r1
   29f04:	and	r0, r0, #1
   29f08:	cmp	r0, #0
   29f0c:	bne	29f20 <__assert_fail@plt+0x18b9c>
   29f10:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   29f14:	tst	r0, #1
   29f18:	bne	29f20 <__assert_fail@plt+0x18b9c>
   29f1c:	b	2a038 <__assert_fail@plt+0x18cb4>
   29f20:	b	29f24 <__assert_fail@plt+0x18ba0>
   29f24:	b	29f28 <__assert_fail@plt+0x18ba4>
   29f28:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29f2c:	tst	r0, #1
   29f30:	beq	29f38 <__assert_fail@plt+0x18bb4>
   29f34:	b	2a2a4 <__assert_fail@plt+0x18f20>
   29f38:	movw	r0, #1
   29f3c:	strb	r0, [fp, #-66]	; 0xffffffbe
   29f40:	ldr	r0, [fp, #8]
   29f44:	cmp	r0, #2
   29f48:	bne	29ffc <__assert_fail@plt+0x18c78>
   29f4c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   29f50:	tst	r0, #1
   29f54:	bne	29ffc <__assert_fail@plt+0x18c78>
   29f58:	b	29f5c <__assert_fail@plt+0x18bd8>
   29f5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29f60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29f64:	cmp	r0, r1
   29f68:	bcs	29f80 <__assert_fail@plt+0x18bfc>
   29f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29f70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29f74:	add	r0, r0, r1
   29f78:	movw	r1, #39	; 0x27
   29f7c:	strb	r1, [r0]
   29f80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29f84:	add	r0, r0, #1
   29f88:	str	r0, [fp, #-44]	; 0xffffffd4
   29f8c:	b	29f90 <__assert_fail@plt+0x18c0c>
   29f90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29f94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29f98:	cmp	r0, r1
   29f9c:	bcs	29fb4 <__assert_fail@plt+0x18c30>
   29fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29fa4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29fa8:	add	r0, r0, r1
   29fac:	movw	r1, #36	; 0x24
   29fb0:	strb	r1, [r0]
   29fb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29fb8:	add	r0, r0, #1
   29fbc:	str	r0, [fp, #-44]	; 0xffffffd4
   29fc0:	b	29fc4 <__assert_fail@plt+0x18c40>
   29fc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29fc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29fcc:	cmp	r0, r1
   29fd0:	bcs	29fe8 <__assert_fail@plt+0x18c64>
   29fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29fd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29fdc:	add	r0, r0, r1
   29fe0:	movw	r1, #39	; 0x27
   29fe4:	strb	r1, [r0]
   29fe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29fec:	add	r0, r0, #1
   29ff0:	str	r0, [fp, #-44]	; 0xffffffd4
   29ff4:	movw	r0, #1
   29ff8:	strb	r0, [fp, #-60]	; 0xffffffc4
   29ffc:	b	2a000 <__assert_fail@plt+0x18c7c>
   2a000:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a004:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a008:	cmp	r0, r1
   2a00c:	bcs	2a024 <__assert_fail@plt+0x18ca0>
   2a010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a014:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a018:	add	r0, r0, r1
   2a01c:	movw	r1, #92	; 0x5c
   2a020:	strb	r1, [r0]
   2a024:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a028:	add	r0, r0, #1
   2a02c:	str	r0, [fp, #-44]	; 0xffffffd4
   2a030:	b	2a034 <__assert_fail@plt+0x18cb0>
   2a034:	b	2a038 <__assert_fail@plt+0x18cb4>
   2a038:	b	2a03c <__assert_fail@plt+0x18cb8>
   2a03c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   2a040:	tst	r0, #1
   2a044:	beq	2a0c4 <__assert_fail@plt+0x18d40>
   2a048:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   2a04c:	tst	r0, #1
   2a050:	bne	2a0c4 <__assert_fail@plt+0x18d40>
   2a054:	b	2a058 <__assert_fail@plt+0x18cd4>
   2a058:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a05c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a060:	cmp	r0, r1
   2a064:	bcs	2a07c <__assert_fail@plt+0x18cf8>
   2a068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a06c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a070:	add	r0, r0, r1
   2a074:	movw	r1, #39	; 0x27
   2a078:	strb	r1, [r0]
   2a07c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a080:	add	r0, r0, #1
   2a084:	str	r0, [fp, #-44]	; 0xffffffd4
   2a088:	b	2a08c <__assert_fail@plt+0x18d08>
   2a08c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a090:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a094:	cmp	r0, r1
   2a098:	bcs	2a0b0 <__assert_fail@plt+0x18d2c>
   2a09c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a0a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a0a4:	add	r0, r0, r1
   2a0a8:	movw	r1, #39	; 0x27
   2a0ac:	strb	r1, [r0]
   2a0b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a0b4:	add	r0, r0, #1
   2a0b8:	str	r0, [fp, #-44]	; 0xffffffd4
   2a0bc:	movw	r0, #0
   2a0c0:	strb	r0, [fp, #-60]	; 0xffffffc4
   2a0c4:	b	2a0c8 <__assert_fail@plt+0x18d44>
   2a0c8:	b	2a0cc <__assert_fail@plt+0x18d48>
   2a0cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a0d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a0d4:	cmp	r0, r1
   2a0d8:	bcs	2a0f0 <__assert_fail@plt+0x18d6c>
   2a0dc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   2a0e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a0e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a0e8:	add	r1, r1, r2
   2a0ec:	strb	r0, [r1]
   2a0f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a0f4:	add	r0, r0, #1
   2a0f8:	str	r0, [fp, #-44]	; 0xffffffd4
   2a0fc:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   2a100:	tst	r0, #1
   2a104:	bne	2a110 <__assert_fail@plt+0x18d8c>
   2a108:	movw	r0, #0
   2a10c:	strb	r0, [fp, #-62]	; 0xffffffc2
   2a110:	b	2a114 <__assert_fail@plt+0x18d90>
   2a114:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a118:	add	r0, r0, #1
   2a11c:	str	r0, [fp, #-40]	; 0xffffffd8
   2a120:	b	28ecc <__assert_fail@plt+0x17b48>
   2a124:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a128:	cmp	r0, #0
   2a12c:	bne	2a14c <__assert_fail@plt+0x18dc8>
   2a130:	ldr	r0, [fp, #8]
   2a134:	cmp	r0, #2
   2a138:	bne	2a14c <__assert_fail@plt+0x18dc8>
   2a13c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2a140:	tst	r0, #1
   2a144:	beq	2a14c <__assert_fail@plt+0x18dc8>
   2a148:	b	2a2a4 <__assert_fail@plt+0x18f20>
   2a14c:	ldr	r0, [fp, #8]
   2a150:	cmp	r0, #2
   2a154:	bne	2a1f4 <__assert_fail@plt+0x18e70>
   2a158:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2a15c:	tst	r0, #1
   2a160:	bne	2a1f4 <__assert_fail@plt+0x18e70>
   2a164:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   2a168:	tst	r0, #1
   2a16c:	beq	2a1f4 <__assert_fail@plt+0x18e70>
   2a170:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   2a174:	tst	r0, #1
   2a178:	beq	2a1c0 <__assert_fail@plt+0x18e3c>
   2a17c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a180:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a184:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a188:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a18c:	ldr	ip, [fp, #12]
   2a190:	ldr	lr, [fp, #16]
   2a194:	ldr	r4, [fp, #20]
   2a198:	ldr	r5, [fp, #24]
   2a19c:	movw	r6, #5
   2a1a0:	str	r6, [sp]
   2a1a4:	str	ip, [sp, #4]
   2a1a8:	str	lr, [sp, #8]
   2a1ac:	str	r4, [sp, #12]
   2a1b0:	str	r5, [sp, #16]
   2a1b4:	bl	28be4 <__assert_fail@plt+0x17860>
   2a1b8:	str	r0, [fp, #-20]	; 0xffffffec
   2a1bc:	b	2a30c <__assert_fail@plt+0x18f88>
   2a1c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a1c4:	cmp	r0, #0
   2a1c8:	bne	2a1ec <__assert_fail@plt+0x18e68>
   2a1cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a1d0:	cmp	r0, #0
   2a1d4:	beq	2a1ec <__assert_fail@plt+0x18e68>
   2a1d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a1dc:	str	r0, [fp, #-28]	; 0xffffffe4
   2a1e0:	movw	r0, #0
   2a1e4:	str	r0, [fp, #-44]	; 0xffffffd4
   2a1e8:	b	28c8c <__assert_fail@plt+0x17908>
   2a1ec:	b	2a1f0 <__assert_fail@plt+0x18e6c>
   2a1f0:	b	2a1f4 <__assert_fail@plt+0x18e70>
   2a1f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a1f8:	movw	r1, #0
   2a1fc:	cmp	r0, r1
   2a200:	beq	2a274 <__assert_fail@plt+0x18ef0>
   2a204:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2a208:	tst	r0, #1
   2a20c:	bne	2a274 <__assert_fail@plt+0x18ef0>
   2a210:	b	2a214 <__assert_fail@plt+0x18e90>
   2a214:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a218:	ldrsb	r0, [r0]
   2a21c:	cmp	r0, #0
   2a220:	beq	2a270 <__assert_fail@plt+0x18eec>
   2a224:	b	2a228 <__assert_fail@plt+0x18ea4>
   2a228:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a22c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a230:	cmp	r0, r1
   2a234:	bcs	2a250 <__assert_fail@plt+0x18ecc>
   2a238:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a23c:	ldrb	r0, [r0]
   2a240:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a244:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a248:	add	r1, r1, r2
   2a24c:	strb	r0, [r1]
   2a250:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a254:	add	r0, r0, #1
   2a258:	str	r0, [fp, #-44]	; 0xffffffd4
   2a25c:	b	2a260 <__assert_fail@plt+0x18edc>
   2a260:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a264:	add	r0, r0, #1
   2a268:	str	r0, [fp, #-52]	; 0xffffffcc
   2a26c:	b	2a214 <__assert_fail@plt+0x18e90>
   2a270:	b	2a274 <__assert_fail@plt+0x18ef0>
   2a274:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a278:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a27c:	cmp	r0, r1
   2a280:	bcs	2a298 <__assert_fail@plt+0x18f14>
   2a284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a288:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a28c:	add	r0, r0, r1
   2a290:	movw	r1, #0
   2a294:	strb	r1, [r0]
   2a298:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a29c:	str	r0, [fp, #-20]	; 0xffffffec
   2a2a0:	b	2a30c <__assert_fail@plt+0x18f88>
   2a2a4:	ldr	r0, [fp, #8]
   2a2a8:	cmp	r0, #2
   2a2ac:	bne	2a2c4 <__assert_fail@plt+0x18f40>
   2a2b0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   2a2b4:	tst	r0, #1
   2a2b8:	beq	2a2c4 <__assert_fail@plt+0x18f40>
   2a2bc:	movw	r0, #4
   2a2c0:	str	r0, [fp, #8]
   2a2c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a2c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a2cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a2d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a2d4:	ldr	ip, [fp, #8]
   2a2d8:	ldr	lr, [fp, #12]
   2a2dc:	mvn	r4, #2
   2a2e0:	and	lr, lr, r4
   2a2e4:	ldr	r4, [fp, #20]
   2a2e8:	ldr	r5, [fp, #24]
   2a2ec:	str	ip, [sp]
   2a2f0:	str	lr, [sp, #4]
   2a2f4:	movw	ip, #0
   2a2f8:	str	ip, [sp, #8]
   2a2fc:	str	r4, [sp, #12]
   2a300:	str	r5, [sp, #16]
   2a304:	bl	28be4 <__assert_fail@plt+0x17860>
   2a308:	str	r0, [fp, #-20]	; 0xffffffec
   2a30c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a310:	sub	sp, fp, #16
   2a314:	pop	{r4, r5, r6, sl, fp, pc}
   2a318:	push	{fp, lr}
   2a31c:	mov	fp, sp
   2a320:	sub	sp, sp, #16
   2a324:	str	r0, [fp, #-4]
   2a328:	str	r1, [sp, #8]
   2a32c:	str	r2, [sp, #4]
   2a330:	ldr	r0, [fp, #-4]
   2a334:	ldr	r1, [sp, #8]
   2a338:	ldr	r3, [sp, #4]
   2a33c:	movw	r2, #0
   2a340:	bl	2a34c <__assert_fail@plt+0x18fc8>
   2a344:	mov	sp, fp
   2a348:	pop	{fp, pc}
   2a34c:	push	{r4, r5, r6, sl, fp, lr}
   2a350:	add	fp, sp, #16
   2a354:	sub	sp, sp, #80	; 0x50
   2a358:	str	r0, [fp, #-20]	; 0xffffffec
   2a35c:	str	r1, [fp, #-24]	; 0xffffffe8
   2a360:	str	r2, [fp, #-28]	; 0xffffffe4
   2a364:	str	r3, [fp, #-32]	; 0xffffffe0
   2a368:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a36c:	movw	r1, #0
   2a370:	cmp	r0, r1
   2a374:	beq	2a384 <__assert_fail@plt+0x19000>
   2a378:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a37c:	str	r0, [sp, #40]	; 0x28
   2a380:	b	2a394 <__assert_fail@plt+0x19010>
   2a384:	movw	r0, #37292	; 0x91ac
   2a388:	movt	r0, #4
   2a38c:	str	r0, [sp, #40]	; 0x28
   2a390:	b	2a394 <__assert_fail@plt+0x19010>
   2a394:	ldr	r0, [sp, #40]	; 0x28
   2a398:	str	r0, [fp, #-36]	; 0xffffffdc
   2a39c:	bl	11294 <__errno_location@plt>
   2a3a0:	ldr	r0, [r0]
   2a3a4:	str	r0, [fp, #-40]	; 0xffffffd8
   2a3a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a3ac:	ldr	r0, [r0, #4]
   2a3b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a3b4:	movw	r2, #0
   2a3b8:	cmp	r1, r2
   2a3bc:	movw	r1, #0
   2a3c0:	movne	r1, #1
   2a3c4:	tst	r1, #1
   2a3c8:	mov	r1, r2
   2a3cc:	moveq	r1, #1
   2a3d0:	orr	r0, r0, r1
   2a3d4:	str	r0, [fp, #-44]	; 0xffffffd4
   2a3d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a3dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a3e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a3e4:	ldr	r1, [r1]
   2a3e8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   2a3ec:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2a3f0:	add	lr, lr, #8
   2a3f4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   2a3f8:	ldr	r4, [r4, #40]	; 0x28
   2a3fc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   2a400:	ldr	r5, [r5, #44]	; 0x2c
   2a404:	str	r0, [sp, #36]	; 0x24
   2a408:	mov	r0, r2
   2a40c:	str	r1, [sp, #32]
   2a410:	mov	r1, r2
   2a414:	ldr	r2, [sp, #36]	; 0x24
   2a418:	ldr	r6, [sp, #32]
   2a41c:	str	r6, [sp]
   2a420:	str	ip, [sp, #4]
   2a424:	str	lr, [sp, #8]
   2a428:	str	r4, [sp, #12]
   2a42c:	str	r5, [sp, #16]
   2a430:	bl	28be4 <__assert_fail@plt+0x17860>
   2a434:	add	r0, r0, #1
   2a438:	str	r0, [sp, #48]	; 0x30
   2a43c:	ldr	r0, [sp, #48]	; 0x30
   2a440:	bl	2c1dc <__assert_fail@plt+0x1ae58>
   2a444:	str	r0, [sp, #44]	; 0x2c
   2a448:	ldr	r0, [sp, #44]	; 0x2c
   2a44c:	ldr	r1, [sp, #48]	; 0x30
   2a450:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a458:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2a45c:	ldr	ip, [ip]
   2a460:	ldr	lr, [fp, #-44]	; 0xffffffd4
   2a464:	ldr	r4, [fp, #-36]	; 0xffffffdc
   2a468:	add	r4, r4, #8
   2a46c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   2a470:	ldr	r5, [r5, #40]	; 0x28
   2a474:	ldr	r6, [fp, #-36]	; 0xffffffdc
   2a478:	ldr	r6, [r6, #44]	; 0x2c
   2a47c:	str	ip, [sp]
   2a480:	str	lr, [sp, #4]
   2a484:	str	r4, [sp, #8]
   2a488:	str	r5, [sp, #12]
   2a48c:	str	r6, [sp, #16]
   2a490:	bl	28be4 <__assert_fail@plt+0x17860>
   2a494:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2a498:	str	r0, [sp, #28]
   2a49c:	str	r1, [sp, #24]
   2a4a0:	bl	11294 <__errno_location@plt>
   2a4a4:	ldr	r1, [sp, #24]
   2a4a8:	str	r1, [r0]
   2a4ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a4b0:	movw	r2, #0
   2a4b4:	cmp	r0, r2
   2a4b8:	beq	2a4cc <__assert_fail@plt+0x19148>
   2a4bc:	ldr	r0, [sp, #48]	; 0x30
   2a4c0:	sub	r0, r0, #1
   2a4c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a4c8:	str	r0, [r1]
   2a4cc:	ldr	r0, [sp, #44]	; 0x2c
   2a4d0:	sub	sp, fp, #16
   2a4d4:	pop	{r4, r5, r6, sl, fp, pc}
   2a4d8:	push	{fp, lr}
   2a4dc:	mov	fp, sp
   2a4e0:	sub	sp, sp, #8
   2a4e4:	movw	r0, #37168	; 0x9130
   2a4e8:	movt	r0, #4
   2a4ec:	ldr	r0, [r0]
   2a4f0:	str	r0, [sp, #4]
   2a4f4:	movw	r0, #1
   2a4f8:	str	r0, [sp]
   2a4fc:	ldr	r0, [sp]
   2a500:	movw	r1, #37172	; 0x9134
   2a504:	movt	r1, #4
   2a508:	ldr	r1, [r1]
   2a50c:	cmp	r0, r1
   2a510:	bge	2a538 <__assert_fail@plt+0x191b4>
   2a514:	ldr	r0, [sp, #4]
   2a518:	ldr	r1, [sp]
   2a51c:	add	r0, r0, r1, lsl #3
   2a520:	ldr	r0, [r0, #4]
   2a524:	bl	1aaec <__assert_fail@plt+0x9768>
   2a528:	ldr	r0, [sp]
   2a52c:	add	r0, r0, #1
   2a530:	str	r0, [sp]
   2a534:	b	2a4fc <__assert_fail@plt+0x19178>
   2a538:	ldr	r0, [sp, #4]
   2a53c:	ldr	r0, [r0, #4]
   2a540:	movw	r1, #37340	; 0x91dc
   2a544:	movt	r1, #4
   2a548:	cmp	r0, r1
   2a54c:	beq	2a578 <__assert_fail@plt+0x191f4>
   2a550:	ldr	r0, [sp, #4]
   2a554:	ldr	r0, [r0, #4]
   2a558:	bl	1aaec <__assert_fail@plt+0x9768>
   2a55c:	movw	r0, #256	; 0x100
   2a560:	movw	r1, #37176	; 0x9138
   2a564:	movt	r1, #4
   2a568:	str	r0, [r1]
   2a56c:	movw	r0, #37340	; 0x91dc
   2a570:	movt	r0, #4
   2a574:	str	r0, [r1, #4]
   2a578:	ldr	r0, [sp, #4]
   2a57c:	movw	r1, #37176	; 0x9138
   2a580:	movt	r1, #4
   2a584:	cmp	r0, r1
   2a588:	beq	2a5a8 <__assert_fail@plt+0x19224>
   2a58c:	ldr	r0, [sp, #4]
   2a590:	bl	1aaec <__assert_fail@plt+0x9768>
   2a594:	movw	r0, #37168	; 0x9130
   2a598:	movt	r0, #4
   2a59c:	movw	r1, #37176	; 0x9138
   2a5a0:	movt	r1, #4
   2a5a4:	str	r1, [r0]
   2a5a8:	movw	r0, #37172	; 0x9134
   2a5ac:	movt	r0, #4
   2a5b0:	movw	r1, #1
   2a5b4:	str	r1, [r0]
   2a5b8:	mov	sp, fp
   2a5bc:	pop	{fp, pc}
   2a5c0:	push	{fp, lr}
   2a5c4:	mov	fp, sp
   2a5c8:	sub	sp, sp, #8
   2a5cc:	str	r0, [sp, #4]
   2a5d0:	str	r1, [sp]
   2a5d4:	ldr	r0, [sp, #4]
   2a5d8:	ldr	r1, [sp]
   2a5dc:	mvn	r2, #0
   2a5e0:	movw	r3, #37292	; 0x91ac
   2a5e4:	movt	r3, #4
   2a5e8:	bl	2a5f4 <__assert_fail@plt+0x19270>
   2a5ec:	mov	sp, fp
   2a5f0:	pop	{fp, pc}
   2a5f4:	push	{r4, r5, r6, sl, fp, lr}
   2a5f8:	add	fp, sp, #16
   2a5fc:	sub	sp, sp, #80	; 0x50
   2a600:	str	r0, [fp, #-20]	; 0xffffffec
   2a604:	str	r1, [fp, #-24]	; 0xffffffe8
   2a608:	str	r2, [fp, #-28]	; 0xffffffe4
   2a60c:	str	r3, [fp, #-32]	; 0xffffffe0
   2a610:	bl	11294 <__errno_location@plt>
   2a614:	ldr	r1, [pc, #672]	; 2a8bc <__assert_fail@plt+0x19538>
   2a618:	ldr	r0, [r0]
   2a61c:	str	r0, [fp, #-36]	; 0xffffffdc
   2a620:	movw	r0, #37168	; 0x9130
   2a624:	movt	r0, #4
   2a628:	ldr	r0, [r0]
   2a62c:	str	r0, [fp, #-40]	; 0xffffffd8
   2a630:	str	r1, [fp, #-44]	; 0xffffffd4
   2a634:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a638:	movw	r1, #0
   2a63c:	cmp	r1, r0
   2a640:	bgt	2a654 <__assert_fail@plt+0x192d0>
   2a644:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a648:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a64c:	cmp	r0, r1
   2a650:	blt	2a658 <__assert_fail@plt+0x192d4>
   2a654:	bl	1136c <abort@plt>
   2a658:	movw	r0, #37172	; 0x9134
   2a65c:	movt	r0, #4
   2a660:	ldr	r0, [r0]
   2a664:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a668:	cmp	r0, r1
   2a66c:	bgt	2a764 <__assert_fail@plt+0x193e0>
   2a670:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a674:	movw	r1, #37176	; 0x9138
   2a678:	movt	r1, #4
   2a67c:	cmp	r0, r1
   2a680:	movw	r0, #0
   2a684:	moveq	r0, #1
   2a688:	and	r0, r0, #1
   2a68c:	strb	r0, [fp, #-45]	; 0xffffffd3
   2a690:	movw	r0, #37172	; 0x9134
   2a694:	movt	r0, #4
   2a698:	ldr	r0, [r0]
   2a69c:	str	r0, [sp, #44]	; 0x2c
   2a6a0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   2a6a4:	tst	r0, #1
   2a6a8:	beq	2a6b8 <__assert_fail@plt+0x19334>
   2a6ac:	movw	r0, #0
   2a6b0:	str	r0, [sp, #24]
   2a6b4:	b	2a6c0 <__assert_fail@plt+0x1933c>
   2a6b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a6bc:	str	r0, [sp, #24]
   2a6c0:	ldr	r0, [sp, #24]
   2a6c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a6c8:	movw	r2, #37172	; 0x9134
   2a6cc:	movt	r2, #4
   2a6d0:	ldr	r2, [r2]
   2a6d4:	sub	r1, r1, r2
   2a6d8:	add	r2, r1, #1
   2a6dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a6e0:	add	r1, sp, #44	; 0x2c
   2a6e4:	movw	ip, #8
   2a6e8:	str	ip, [sp]
   2a6ec:	bl	2c418 <__assert_fail@plt+0x1b094>
   2a6f0:	str	r0, [fp, #-40]	; 0xffffffd8
   2a6f4:	movw	r1, #37168	; 0x9130
   2a6f8:	movt	r1, #4
   2a6fc:	str	r0, [r1]
   2a700:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   2a704:	tst	r0, #1
   2a708:	beq	2a728 <__assert_fail@plt+0x193a4>
   2a70c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a710:	movw	r1, #37176	; 0x9138
   2a714:	movt	r1, #4
   2a718:	ldr	r2, [r1]
   2a71c:	str	r2, [r0]
   2a720:	ldr	r1, [r1, #4]
   2a724:	str	r1, [r0, #4]
   2a728:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a72c:	movw	r1, #37172	; 0x9134
   2a730:	movt	r1, #4
   2a734:	ldr	r1, [r1]
   2a738:	add	r0, r0, r1, lsl #3
   2a73c:	ldr	r2, [sp, #44]	; 0x2c
   2a740:	sub	r1, r2, r1
   2a744:	lsl	r2, r1, #3
   2a748:	movw	r1, #0
   2a74c:	and	r1, r1, #255	; 0xff
   2a750:	bl	112b8 <memset@plt>
   2a754:	ldr	r0, [sp, #44]	; 0x2c
   2a758:	movw	r1, #37172	; 0x9134
   2a75c:	movt	r1, #4
   2a760:	str	r0, [r1]
   2a764:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a768:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a76c:	ldr	r0, [r0, r1, lsl #3]
   2a770:	str	r0, [sp, #40]	; 0x28
   2a774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a778:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a77c:	add	r0, r0, r1, lsl #3
   2a780:	ldr	r0, [r0, #4]
   2a784:	str	r0, [sp, #36]	; 0x24
   2a788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a78c:	ldr	r0, [r0, #4]
   2a790:	orr	r0, r0, #1
   2a794:	str	r0, [sp, #32]
   2a798:	ldr	r0, [sp, #36]	; 0x24
   2a79c:	ldr	r1, [sp, #40]	; 0x28
   2a7a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a7a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a7a8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   2a7ac:	ldr	ip, [ip]
   2a7b0:	ldr	lr, [sp, #32]
   2a7b4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2a7b8:	add	r4, r4, #8
   2a7bc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   2a7c0:	ldr	r5, [r5, #40]	; 0x28
   2a7c4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   2a7c8:	ldr	r6, [r6, #44]	; 0x2c
   2a7cc:	str	ip, [sp]
   2a7d0:	str	lr, [sp, #4]
   2a7d4:	str	r4, [sp, #8]
   2a7d8:	str	r5, [sp, #12]
   2a7dc:	str	r6, [sp, #16]
   2a7e0:	bl	28be4 <__assert_fail@plt+0x17860>
   2a7e4:	str	r0, [sp, #28]
   2a7e8:	ldr	r0, [sp, #40]	; 0x28
   2a7ec:	ldr	r1, [sp, #28]
   2a7f0:	cmp	r0, r1
   2a7f4:	bhi	2a89c <__assert_fail@plt+0x19518>
   2a7f8:	ldr	r0, [sp, #28]
   2a7fc:	add	r0, r0, #1
   2a800:	str	r0, [sp, #40]	; 0x28
   2a804:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2a808:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a80c:	add	r1, r1, r2, lsl #3
   2a810:	str	r0, [r1]
   2a814:	ldr	r0, [sp, #36]	; 0x24
   2a818:	movw	r1, #37340	; 0x91dc
   2a81c:	movt	r1, #4
   2a820:	cmp	r0, r1
   2a824:	beq	2a830 <__assert_fail@plt+0x194ac>
   2a828:	ldr	r0, [sp, #36]	; 0x24
   2a82c:	bl	1aaec <__assert_fail@plt+0x9768>
   2a830:	ldr	r0, [sp, #40]	; 0x28
   2a834:	bl	2c1dc <__assert_fail@plt+0x1ae58>
   2a838:	mov	r1, r0
   2a83c:	str	r0, [sp, #36]	; 0x24
   2a840:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a844:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a848:	add	r0, r0, r2, lsl #3
   2a84c:	str	r1, [r0, #4]
   2a850:	ldr	r0, [sp, #36]	; 0x24
   2a854:	ldr	r1, [sp, #40]	; 0x28
   2a858:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a85c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a860:	ldr	ip, [fp, #-32]	; 0xffffffe0
   2a864:	ldr	ip, [ip]
   2a868:	ldr	lr, [sp, #32]
   2a86c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2a870:	add	r4, r4, #8
   2a874:	ldr	r5, [fp, #-32]	; 0xffffffe0
   2a878:	ldr	r5, [r5, #40]	; 0x28
   2a87c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   2a880:	ldr	r6, [r6, #44]	; 0x2c
   2a884:	str	ip, [sp]
   2a888:	str	lr, [sp, #4]
   2a88c:	str	r4, [sp, #8]
   2a890:	str	r5, [sp, #12]
   2a894:	str	r6, [sp, #16]
   2a898:	bl	28be4 <__assert_fail@plt+0x17860>
   2a89c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a8a0:	str	r0, [sp, #20]
   2a8a4:	bl	11294 <__errno_location@plt>
   2a8a8:	ldr	r1, [sp, #20]
   2a8ac:	str	r1, [r0]
   2a8b0:	ldr	r0, [sp, #36]	; 0x24
   2a8b4:	sub	sp, fp, #16
   2a8b8:	pop	{r4, r5, r6, sl, fp, pc}
   2a8bc:	svcvc	0x00ffffff
   2a8c0:	push	{fp, lr}
   2a8c4:	mov	fp, sp
   2a8c8:	sub	sp, sp, #16
   2a8cc:	str	r0, [fp, #-4]
   2a8d0:	str	r1, [sp, #8]
   2a8d4:	str	r2, [sp, #4]
   2a8d8:	ldr	r0, [fp, #-4]
   2a8dc:	ldr	r1, [sp, #8]
   2a8e0:	ldr	r2, [sp, #4]
   2a8e4:	movw	r3, #37292	; 0x91ac
   2a8e8:	movt	r3, #4
   2a8ec:	bl	2a5f4 <__assert_fail@plt+0x19270>
   2a8f0:	mov	sp, fp
   2a8f4:	pop	{fp, pc}
   2a8f8:	push	{fp, lr}
   2a8fc:	mov	fp, sp
   2a900:	sub	sp, sp, #8
   2a904:	str	r0, [sp, #4]
   2a908:	ldr	r1, [sp, #4]
   2a90c:	movw	r0, #0
   2a910:	bl	2a5c0 <__assert_fail@plt+0x1923c>
   2a914:	mov	sp, fp
   2a918:	pop	{fp, pc}
   2a91c:	push	{fp, lr}
   2a920:	mov	fp, sp
   2a924:	sub	sp, sp, #8
   2a928:	str	r0, [sp, #4]
   2a92c:	str	r1, [sp]
   2a930:	ldr	r1, [sp, #4]
   2a934:	ldr	r2, [sp]
   2a938:	movw	r0, #0
   2a93c:	bl	2a8c0 <__assert_fail@plt+0x1953c>
   2a940:	mov	sp, fp
   2a944:	pop	{fp, pc}
   2a948:	push	{fp, lr}
   2a94c:	mov	fp, sp
   2a950:	sub	sp, sp, #64	; 0x40
   2a954:	str	r0, [fp, #-4]
   2a958:	str	r1, [fp, #-8]
   2a95c:	str	r2, [fp, #-12]
   2a960:	ldr	r1, [fp, #-8]
   2a964:	add	r0, sp, #4
   2a968:	bl	2a988 <__assert_fail@plt+0x19604>
   2a96c:	ldr	r0, [fp, #-4]
   2a970:	ldr	r1, [fp, #-12]
   2a974:	mvn	r2, #0
   2a978:	add	r3, sp, #4
   2a97c:	bl	2a5f4 <__assert_fail@plt+0x19270>
   2a980:	mov	sp, fp
   2a984:	pop	{fp, pc}
   2a988:	push	{fp, lr}
   2a98c:	mov	fp, sp
   2a990:	sub	sp, sp, #8
   2a994:	str	r1, [sp, #4]
   2a998:	mov	r1, r0
   2a99c:	str	r0, [sp]
   2a9a0:	mov	r0, r1
   2a9a4:	movw	r1, #0
   2a9a8:	and	r1, r1, #255	; 0xff
   2a9ac:	movw	r2, #48	; 0x30
   2a9b0:	bl	112b8 <memset@plt>
   2a9b4:	ldr	r0, [sp, #4]
   2a9b8:	cmp	r0, #10
   2a9bc:	bne	2a9c4 <__assert_fail@plt+0x19640>
   2a9c0:	bl	1136c <abort@plt>
   2a9c4:	ldr	r0, [sp, #4]
   2a9c8:	ldr	r1, [sp]
   2a9cc:	str	r0, [r1]
   2a9d0:	mov	sp, fp
   2a9d4:	pop	{fp, pc}
   2a9d8:	push	{fp, lr}
   2a9dc:	mov	fp, sp
   2a9e0:	sub	sp, sp, #64	; 0x40
   2a9e4:	str	r0, [fp, #-4]
   2a9e8:	str	r1, [fp, #-8]
   2a9ec:	str	r2, [fp, #-12]
   2a9f0:	str	r3, [fp, #-16]
   2a9f4:	ldr	r1, [fp, #-8]
   2a9f8:	mov	r0, sp
   2a9fc:	bl	2a988 <__assert_fail@plt+0x19604>
   2aa00:	ldr	r0, [fp, #-4]
   2aa04:	ldr	r1, [fp, #-12]
   2aa08:	ldr	r2, [fp, #-16]
   2aa0c:	mov	r3, sp
   2aa10:	bl	2a5f4 <__assert_fail@plt+0x19270>
   2aa14:	mov	sp, fp
   2aa18:	pop	{fp, pc}
   2aa1c:	push	{fp, lr}
   2aa20:	mov	fp, sp
   2aa24:	sub	sp, sp, #8
   2aa28:	str	r0, [sp, #4]
   2aa2c:	str	r1, [sp]
   2aa30:	ldr	r1, [sp, #4]
   2aa34:	ldr	r2, [sp]
   2aa38:	movw	r0, #0
   2aa3c:	bl	2a948 <__assert_fail@plt+0x195c4>
   2aa40:	mov	sp, fp
   2aa44:	pop	{fp, pc}
   2aa48:	push	{fp, lr}
   2aa4c:	mov	fp, sp
   2aa50:	sub	sp, sp, #16
   2aa54:	str	r0, [fp, #-4]
   2aa58:	str	r1, [sp, #8]
   2aa5c:	str	r2, [sp, #4]
   2aa60:	ldr	r1, [fp, #-4]
   2aa64:	ldr	r2, [sp, #8]
   2aa68:	ldr	r3, [sp, #4]
   2aa6c:	movw	r0, #0
   2aa70:	bl	2a9d8 <__assert_fail@plt+0x19654>
   2aa74:	mov	sp, fp
   2aa78:	pop	{fp, pc}
   2aa7c:	push	{fp, lr}
   2aa80:	mov	fp, sp
   2aa84:	sub	sp, sp, #72	; 0x48
   2aa88:	movw	r3, #37292	; 0x91ac
   2aa8c:	movt	r3, #4
   2aa90:	str	r0, [fp, #-4]
   2aa94:	str	r1, [fp, #-8]
   2aa98:	strb	r2, [fp, #-9]
   2aa9c:	add	r0, sp, #12
   2aaa0:	mov	r1, r0
   2aaa4:	str	r0, [sp, #8]
   2aaa8:	mov	r0, r1
   2aaac:	mov	r1, r3
   2aab0:	movw	r2, #48	; 0x30
   2aab4:	bl	1112c <memcpy@plt>
   2aab8:	ldr	r0, [sp, #8]
   2aabc:	ldrb	r1, [fp, #-9]
   2aac0:	movw	r2, #1
   2aac4:	bl	2898c <__assert_fail@plt+0x17608>
   2aac8:	ldr	r1, [fp, #-4]
   2aacc:	ldr	r2, [fp, #-8]
   2aad0:	movw	r3, #0
   2aad4:	str	r0, [sp, #4]
   2aad8:	mov	r0, r3
   2aadc:	add	r3, sp, #12
   2aae0:	bl	2a5f4 <__assert_fail@plt+0x19270>
   2aae4:	mov	sp, fp
   2aae8:	pop	{fp, pc}
   2aaec:	push	{fp, lr}
   2aaf0:	mov	fp, sp
   2aaf4:	sub	sp, sp, #8
   2aaf8:	str	r0, [sp, #4]
   2aafc:	strb	r1, [sp, #3]
   2ab00:	ldr	r0, [sp, #4]
   2ab04:	mvn	r1, #0
   2ab08:	ldrb	r2, [sp, #3]
   2ab0c:	bl	2aa7c <__assert_fail@plt+0x196f8>
   2ab10:	mov	sp, fp
   2ab14:	pop	{fp, pc}
   2ab18:	push	{fp, lr}
   2ab1c:	mov	fp, sp
   2ab20:	sub	sp, sp, #8
   2ab24:	str	r0, [sp, #4]
   2ab28:	ldr	r0, [sp, #4]
   2ab2c:	movw	r1, #58	; 0x3a
   2ab30:	and	r1, r1, #255	; 0xff
   2ab34:	bl	2aaec <__assert_fail@plt+0x19768>
   2ab38:	mov	sp, fp
   2ab3c:	pop	{fp, pc}
   2ab40:	push	{fp, lr}
   2ab44:	mov	fp, sp
   2ab48:	sub	sp, sp, #8
   2ab4c:	str	r0, [sp, #4]
   2ab50:	str	r1, [sp]
   2ab54:	ldr	r0, [sp, #4]
   2ab58:	ldr	r1, [sp]
   2ab5c:	movw	r2, #58	; 0x3a
   2ab60:	and	r2, r2, #255	; 0xff
   2ab64:	bl	2aa7c <__assert_fail@plt+0x196f8>
   2ab68:	mov	sp, fp
   2ab6c:	pop	{fp, pc}
   2ab70:	push	{fp, lr}
   2ab74:	mov	fp, sp
   2ab78:	sub	sp, sp, #120	; 0x78
   2ab7c:	str	r0, [fp, #-4]
   2ab80:	str	r1, [fp, #-8]
   2ab84:	str	r2, [fp, #-12]
   2ab88:	ldr	r1, [fp, #-8]
   2ab8c:	add	r0, sp, #12
   2ab90:	bl	2a988 <__assert_fail@plt+0x19604>
   2ab94:	add	r0, sp, #60	; 0x3c
   2ab98:	mov	r1, r0
   2ab9c:	add	r2, sp, #12
   2aba0:	str	r0, [sp, #8]
   2aba4:	mov	r0, r1
   2aba8:	mov	r1, r2
   2abac:	movw	r2, #48	; 0x30
   2abb0:	bl	1112c <memcpy@plt>
   2abb4:	ldr	r0, [sp, #8]
   2abb8:	movw	r1, #58	; 0x3a
   2abbc:	and	r1, r1, #255	; 0xff
   2abc0:	movw	r2, #1
   2abc4:	bl	2898c <__assert_fail@plt+0x17608>
   2abc8:	ldr	r1, [fp, #-4]
   2abcc:	ldr	r2, [fp, #-12]
   2abd0:	str	r0, [sp, #4]
   2abd4:	mov	r0, r1
   2abd8:	mov	r1, r2
   2abdc:	mvn	r2, #0
   2abe0:	add	r3, sp, #60	; 0x3c
   2abe4:	bl	2a5f4 <__assert_fail@plt+0x19270>
   2abe8:	mov	sp, fp
   2abec:	pop	{fp, pc}
   2abf0:	push	{fp, lr}
   2abf4:	mov	fp, sp
   2abf8:	sub	sp, sp, #24
   2abfc:	str	r0, [fp, #-4]
   2ac00:	str	r1, [fp, #-8]
   2ac04:	str	r2, [sp, #12]
   2ac08:	str	r3, [sp, #8]
   2ac0c:	ldr	r0, [fp, #-4]
   2ac10:	ldr	r1, [fp, #-8]
   2ac14:	ldr	r2, [sp, #12]
   2ac18:	ldr	r3, [sp, #8]
   2ac1c:	mvn	ip, #0
   2ac20:	str	ip, [sp]
   2ac24:	bl	2ac30 <__assert_fail@plt+0x198ac>
   2ac28:	mov	sp, fp
   2ac2c:	pop	{fp, pc}
   2ac30:	push	{fp, lr}
   2ac34:	mov	fp, sp
   2ac38:	sub	sp, sp, #72	; 0x48
   2ac3c:	ldr	ip, [fp, #8]
   2ac40:	movw	lr, #37292	; 0x91ac
   2ac44:	movt	lr, #4
   2ac48:	str	r0, [fp, #-4]
   2ac4c:	str	r1, [fp, #-8]
   2ac50:	str	r2, [fp, #-12]
   2ac54:	str	r3, [fp, #-16]
   2ac58:	add	r0, sp, #8
   2ac5c:	mov	r1, r0
   2ac60:	str	r0, [sp, #4]
   2ac64:	mov	r0, r1
   2ac68:	mov	r1, lr
   2ac6c:	movw	r2, #48	; 0x30
   2ac70:	str	ip, [sp]
   2ac74:	bl	1112c <memcpy@plt>
   2ac78:	ldr	r1, [fp, #-8]
   2ac7c:	ldr	r2, [fp, #-12]
   2ac80:	ldr	r0, [sp, #4]
   2ac84:	bl	28a8c <__assert_fail@plt+0x17708>
   2ac88:	ldr	r0, [fp, #-4]
   2ac8c:	ldr	r1, [fp, #-16]
   2ac90:	ldr	r2, [fp, #8]
   2ac94:	add	r3, sp, #8
   2ac98:	bl	2a5f4 <__assert_fail@plt+0x19270>
   2ac9c:	mov	sp, fp
   2aca0:	pop	{fp, pc}
   2aca4:	push	{fp, lr}
   2aca8:	mov	fp, sp
   2acac:	sub	sp, sp, #16
   2acb0:	str	r0, [fp, #-4]
   2acb4:	str	r1, [sp, #8]
   2acb8:	str	r2, [sp, #4]
   2acbc:	ldr	r1, [fp, #-4]
   2acc0:	ldr	r2, [sp, #8]
   2acc4:	ldr	r3, [sp, #4]
   2acc8:	movw	r0, #0
   2accc:	bl	2abf0 <__assert_fail@plt+0x1986c>
   2acd0:	mov	sp, fp
   2acd4:	pop	{fp, pc}
   2acd8:	push	{fp, lr}
   2acdc:	mov	fp, sp
   2ace0:	sub	sp, sp, #24
   2ace4:	str	r0, [fp, #-4]
   2ace8:	str	r1, [fp, #-8]
   2acec:	str	r2, [sp, #12]
   2acf0:	str	r3, [sp, #8]
   2acf4:	ldr	r1, [fp, #-4]
   2acf8:	ldr	r2, [fp, #-8]
   2acfc:	ldr	r3, [sp, #12]
   2ad00:	ldr	r0, [sp, #8]
   2ad04:	movw	ip, #0
   2ad08:	str	r0, [sp, #4]
   2ad0c:	mov	r0, ip
   2ad10:	ldr	ip, [sp, #4]
   2ad14:	str	ip, [sp]
   2ad18:	bl	2ac30 <__assert_fail@plt+0x198ac>
   2ad1c:	mov	sp, fp
   2ad20:	pop	{fp, pc}
   2ad24:	push	{fp, lr}
   2ad28:	mov	fp, sp
   2ad2c:	sub	sp, sp, #16
   2ad30:	str	r0, [fp, #-4]
   2ad34:	str	r1, [sp, #8]
   2ad38:	str	r2, [sp, #4]
   2ad3c:	ldr	r0, [fp, #-4]
   2ad40:	ldr	r1, [sp, #8]
   2ad44:	ldr	r2, [sp, #4]
   2ad48:	movw	r3, #37184	; 0x9140
   2ad4c:	movt	r3, #4
   2ad50:	bl	2a5f4 <__assert_fail@plt+0x19270>
   2ad54:	mov	sp, fp
   2ad58:	pop	{fp, pc}
   2ad5c:	push	{fp, lr}
   2ad60:	mov	fp, sp
   2ad64:	sub	sp, sp, #8
   2ad68:	str	r0, [sp, #4]
   2ad6c:	str	r1, [sp]
   2ad70:	ldr	r1, [sp, #4]
   2ad74:	ldr	r2, [sp]
   2ad78:	movw	r0, #0
   2ad7c:	bl	2ad24 <__assert_fail@plt+0x199a0>
   2ad80:	mov	sp, fp
   2ad84:	pop	{fp, pc}
   2ad88:	push	{fp, lr}
   2ad8c:	mov	fp, sp
   2ad90:	sub	sp, sp, #8
   2ad94:	str	r0, [sp, #4]
   2ad98:	str	r1, [sp]
   2ad9c:	ldr	r0, [sp, #4]
   2ada0:	ldr	r1, [sp]
   2ada4:	mvn	r2, #0
   2ada8:	bl	2ad24 <__assert_fail@plt+0x199a0>
   2adac:	mov	sp, fp
   2adb0:	pop	{fp, pc}
   2adb4:	push	{fp, lr}
   2adb8:	mov	fp, sp
   2adbc:	sub	sp, sp, #8
   2adc0:	str	r0, [sp, #4]
   2adc4:	ldr	r1, [sp, #4]
   2adc8:	movw	r0, #0
   2adcc:	bl	2ad88 <__assert_fail@plt+0x19a04>
   2add0:	mov	sp, fp
   2add4:	pop	{fp, pc}
   2add8:	push	{fp, lr}
   2addc:	mov	fp, sp
   2ade0:	sub	sp, sp, #24
   2ade4:	str	r0, [fp, #-8]
   2ade8:	str	r1, [sp, #12]
   2adec:	ldr	r0, [fp, #-8]
   2adf0:	bl	11264 <gettext@plt>
   2adf4:	str	r0, [sp, #8]
   2adf8:	ldr	r0, [sp, #8]
   2adfc:	ldr	r1, [fp, #-8]
   2ae00:	cmp	r0, r1
   2ae04:	beq	2ae14 <__assert_fail@plt+0x19a90>
   2ae08:	ldr	r0, [sp, #8]
   2ae0c:	str	r0, [fp, #-4]
   2ae10:	b	2aee0 <__assert_fail@plt+0x19b5c>
   2ae14:	bl	2f7b8 <__assert_fail@plt+0x1e434>
   2ae18:	str	r0, [sp, #4]
   2ae1c:	ldr	r0, [sp, #4]
   2ae20:	movw	r1, #33917	; 0x847d
   2ae24:	movt	r1, #3
   2ae28:	bl	2f1bc <__assert_fail@plt+0x1de38>
   2ae2c:	cmp	r0, #0
   2ae30:	bne	2ae68 <__assert_fail@plt+0x19ae4>
   2ae34:	ldr	r0, [fp, #-8]
   2ae38:	ldrb	r0, [r0]
   2ae3c:	cmp	r0, #96	; 0x60
   2ae40:	movw	r0, #0
   2ae44:	moveq	r0, #1
   2ae48:	tst	r0, #1
   2ae4c:	movw	r0, #34018	; 0x84e2
   2ae50:	movt	r0, #3
   2ae54:	movw	r1, #34014	; 0x84de
   2ae58:	movt	r1, #3
   2ae5c:	movne	r0, r1
   2ae60:	str	r0, [fp, #-4]
   2ae64:	b	2aee0 <__assert_fail@plt+0x19b5c>
   2ae68:	ldr	r0, [sp, #4]
   2ae6c:	movw	r1, #34022	; 0x84e6
   2ae70:	movt	r1, #3
   2ae74:	bl	2f1bc <__assert_fail@plt+0x1de38>
   2ae78:	cmp	r0, #0
   2ae7c:	bne	2aeb4 <__assert_fail@plt+0x19b30>
   2ae80:	ldr	r0, [fp, #-8]
   2ae84:	ldrb	r0, [r0]
   2ae88:	cmp	r0, #96	; 0x60
   2ae8c:	movw	r0, #0
   2ae90:	moveq	r0, #1
   2ae94:	tst	r0, #1
   2ae98:	movw	r0, #34034	; 0x84f2
   2ae9c:	movt	r0, #3
   2aea0:	movw	r1, #34030	; 0x84ee
   2aea4:	movt	r1, #3
   2aea8:	movne	r0, r1
   2aeac:	str	r0, [fp, #-4]
   2aeb0:	b	2aee0 <__assert_fail@plt+0x19b5c>
   2aeb4:	ldr	r0, [sp, #12]
   2aeb8:	cmp	r0, #9
   2aebc:	movw	r0, #0
   2aec0:	moveq	r0, #1
   2aec4:	tst	r0, #1
   2aec8:	movw	r0, #35036	; 0x88dc
   2aecc:	movt	r0, #3
   2aed0:	movw	r1, #34010	; 0x84da
   2aed4:	movt	r1, #3
   2aed8:	movne	r0, r1
   2aedc:	str	r0, [fp, #-4]
   2aee0:	ldr	r0, [fp, #-4]
   2aee4:	mov	sp, fp
   2aee8:	pop	{fp, pc}
   2aeec:	sub	sp, sp, #4
   2aef0:	str	r0, [sp]
   2aef4:	ldr	r0, [sp]
   2aef8:	movw	r1, #0
   2aefc:	str	r1, [r0]
   2af00:	ldr	r0, [sp]
   2af04:	str	r1, [r0, #4]
   2af08:	add	sp, sp, #4
   2af0c:	bx	lr
   2af10:	push	{fp, lr}
   2af14:	mov	fp, sp
   2af18:	sub	sp, sp, #88	; 0x58
   2af1c:	add	ip, sp, #28
   2af20:	str	r0, [fp, #-8]
   2af24:	str	r1, [fp, #-12]
   2af28:	str	r2, [fp, #-16]
   2af2c:	str	r3, [fp, #-20]	; 0xffffffec
   2af30:	mov	r0, ip
   2af34:	movw	r1, #0
   2af38:	and	r1, r1, #255	; 0xff
   2af3c:	movw	r2, #32
   2af40:	bl	112b8 <memset@plt>
   2af44:	movw	r0, #0
   2af48:	str	r0, [fp, #-28]	; 0xffffffe4
   2af4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2af50:	ldr	r1, [fp, #-16]
   2af54:	cmp	r0, r1
   2af58:	bcs	2af8c <__assert_fail@plt+0x19c08>
   2af5c:	add	r1, sp, #28
   2af60:	ldr	r0, [fp, #-12]
   2af64:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2af68:	add	r0, r0, r2
   2af6c:	ldrb	r0, [r0]
   2af70:	strb	r0, [sp, #27]
   2af74:	ldrb	r0, [sp, #27]
   2af78:	bl	2b0fc <__assert_fail@plt+0x19d78>
   2af7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2af80:	add	r0, r0, #1
   2af84:	str	r0, [fp, #-28]	; 0xffffffe4
   2af88:	b	2af4c <__assert_fail@plt+0x19bc8>
   2af8c:	ldr	r0, [fp, #-8]
   2af90:	bl	11150 <getc_unlocked@plt>
   2af94:	str	r0, [fp, #-24]	; 0xffffffe8
   2af98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2af9c:	cmp	r0, #0
   2afa0:	movw	r0, #0
   2afa4:	str	r0, [sp, #12]
   2afa8:	blt	2afbc <__assert_fail@plt+0x19c38>
   2afac:	add	r1, sp, #28
   2afb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2afb4:	bl	2b140 <__assert_fail@plt+0x19dbc>
   2afb8:	str	r0, [sp, #12]
   2afbc:	ldr	r0, [sp, #12]
   2afc0:	tst	r0, #1
   2afc4:	beq	2afdc <__assert_fail@plt+0x19c58>
   2afc8:	b	2afcc <__assert_fail@plt+0x19c48>
   2afcc:	ldr	r0, [fp, #-8]
   2afd0:	bl	11150 <getc_unlocked@plt>
   2afd4:	str	r0, [fp, #-24]	; 0xffffffe8
   2afd8:	b	2af98 <__assert_fail@plt+0x19c14>
   2afdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2afe0:	ldr	r0, [r0, #4]
   2afe4:	str	r0, [sp, #20]
   2afe8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2afec:	ldr	r0, [r0]
   2aff0:	str	r0, [sp, #16]
   2aff4:	movw	r0, #0
   2aff8:	str	r0, [fp, #-28]	; 0xffffffe4
   2affc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b000:	cmp	r0, #0
   2b004:	bge	2b020 <__assert_fail@plt+0x19c9c>
   2b008:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b00c:	cmp	r0, #0
   2b010:	bne	2b020 <__assert_fail@plt+0x19c9c>
   2b014:	mvn	r0, #0
   2b018:	str	r0, [fp, #-4]
   2b01c:	b	2b0f0 <__assert_fail@plt+0x19d6c>
   2b020:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b024:	ldr	r1, [sp, #16]
   2b028:	cmp	r0, r1
   2b02c:	bne	2b054 <__assert_fail@plt+0x19cd0>
   2b030:	ldr	r0, [sp, #20]
   2b034:	add	r1, sp, #16
   2b038:	movw	r2, #1
   2b03c:	str	r2, [sp, #8]
   2b040:	mvn	r3, #0
   2b044:	ldr	ip, [sp, #8]
   2b048:	str	ip, [sp]
   2b04c:	bl	2c418 <__assert_fail@plt+0x1b094>
   2b050:	str	r0, [sp, #20]
   2b054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b058:	cmp	r0, #0
   2b05c:	bge	2b078 <__assert_fail@plt+0x19cf4>
   2b060:	ldr	r0, [sp, #20]
   2b064:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b068:	add	r0, r0, r1
   2b06c:	movw	r1, #0
   2b070:	strb	r1, [r0]
   2b074:	b	2b0d0 <__assert_fail@plt+0x19d4c>
   2b078:	add	r1, sp, #28
   2b07c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b080:	bl	2b140 <__assert_fail@plt+0x19dbc>
   2b084:	tst	r0, #1
   2b088:	beq	2b0a4 <__assert_fail@plt+0x19d20>
   2b08c:	ldr	r0, [sp, #20]
   2b090:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b094:	add	r0, r0, r1
   2b098:	movw	r1, #0
   2b09c:	strb	r1, [r0]
   2b0a0:	b	2b0d0 <__assert_fail@plt+0x19d4c>
   2b0a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b0a8:	ldr	r1, [sp, #20]
   2b0ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b0b0:	add	r3, r2, #1
   2b0b4:	str	r3, [fp, #-28]	; 0xffffffe4
   2b0b8:	add	r1, r1, r2
   2b0bc:	strb	r0, [r1]
   2b0c0:	ldr	r0, [fp, #-8]
   2b0c4:	bl	11150 <getc_unlocked@plt>
   2b0c8:	str	r0, [fp, #-24]	; 0xffffffe8
   2b0cc:	b	2affc <__assert_fail@plt+0x19c78>
   2b0d0:	ldr	r0, [sp, #20]
   2b0d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b0d8:	str	r0, [r1, #4]
   2b0dc:	ldr	r0, [sp, #16]
   2b0e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b0e4:	str	r0, [r1]
   2b0e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b0ec:	str	r0, [fp, #-4]
   2b0f0:	ldr	r0, [fp, #-4]
   2b0f4:	mov	sp, fp
   2b0f8:	pop	{fp, pc}
   2b0fc:	sub	sp, sp, #12
   2b100:	str	r0, [sp, #8]
   2b104:	str	r1, [sp, #4]
   2b108:	mov	r0, #1
   2b10c:	str	r0, [sp]
   2b110:	ldr	r0, [sp]
   2b114:	ldr	r1, [sp, #8]
   2b118:	lsr	r2, r1, #5
   2b11c:	sub	r1, r1, r2, lsl #5
   2b120:	lsl	r0, r0, r1
   2b124:	ldr	r1, [sp, #4]
   2b128:	add	r1, r1, r2, lsl #2
   2b12c:	ldr	r2, [r1]
   2b130:	orr	r0, r2, r0
   2b134:	str	r0, [r1]
   2b138:	add	sp, sp, #12
   2b13c:	bx	lr
   2b140:	sub	sp, sp, #8
   2b144:	str	r0, [sp, #4]
   2b148:	str	r1, [sp]
   2b14c:	ldr	r0, [sp]
   2b150:	ldr	r1, [sp, #4]
   2b154:	lsr	r1, r1, #5
   2b158:	add	r0, r0, r1, lsl #2
   2b15c:	ldr	r0, [r0]
   2b160:	ldr	r1, [sp, #4]
   2b164:	and	r1, r1, #31
   2b168:	lsr	r0, r0, r1
   2b16c:	and	r0, r0, #1
   2b170:	cmp	r0, #0
   2b174:	movw	r0, #0
   2b178:	movne	r0, #1
   2b17c:	and	r0, r0, #1
   2b180:	add	sp, sp, #8
   2b184:	bx	lr
   2b188:	push	{fp, lr}
   2b18c:	mov	fp, sp
   2b190:	sub	sp, sp, #64	; 0x40
   2b194:	ldr	ip, [fp, #12]
   2b198:	ldr	lr, [fp, #8]
   2b19c:	str	r0, [fp, #-4]
   2b1a0:	str	r1, [fp, #-8]
   2b1a4:	str	r2, [fp, #-12]
   2b1a8:	str	r3, [fp, #-16]
   2b1ac:	sub	r0, fp, #24
   2b1b0:	str	r0, [fp, #-28]	; 0xffffffe4
   2b1b4:	ldr	r0, [fp, #-8]
   2b1b8:	cmp	r0, #0
   2b1bc:	bne	2b1cc <__assert_fail@plt+0x19e48>
   2b1c0:	movw	r0, #64	; 0x40
   2b1c4:	str	r0, [fp, #-8]
   2b1c8:	b	2b1d8 <__assert_fail@plt+0x19e54>
   2b1cc:	ldr	r0, [fp, #-8]
   2b1d0:	add	r0, r0, #1
   2b1d4:	str	r0, [fp, #-8]
   2b1d8:	ldr	r0, [fp, #-8]
   2b1dc:	str	r0, [sp, #24]
   2b1e0:	ldr	r0, [sp, #24]
   2b1e4:	movw	r1, #4
   2b1e8:	bl	2c2bc <__assert_fail@plt+0x1af38>
   2b1ec:	str	r0, [sp, #32]
   2b1f0:	ldr	r0, [sp, #24]
   2b1f4:	movw	r1, #4
   2b1f8:	bl	2c2bc <__assert_fail@plt+0x1af38>
   2b1fc:	str	r0, [sp, #28]
   2b200:	movw	r0, #0
   2b204:	str	r0, [sp, #20]
   2b208:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b20c:	bl	2aeec <__assert_fail@plt+0x19b68>
   2b210:	ldr	r0, [fp, #-4]
   2b214:	ldr	r1, [fp, #-12]
   2b218:	ldr	r2, [fp, #-16]
   2b21c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b220:	bl	2af10 <__assert_fail@plt+0x19b8c>
   2b224:	str	r0, [sp, #12]
   2b228:	ldr	r0, [sp, #20]
   2b22c:	ldr	r1, [sp, #24]
   2b230:	cmp	r0, r1
   2b234:	blt	2b26c <__assert_fail@plt+0x19ee8>
   2b238:	ldr	r0, [sp, #32]
   2b23c:	add	r1, sp, #24
   2b240:	movw	r2, #1
   2b244:	mvn	r3, #0
   2b248:	movw	ip, #4
   2b24c:	str	ip, [sp]
   2b250:	bl	2c418 <__assert_fail@plt+0x1b094>
   2b254:	str	r0, [sp, #32]
   2b258:	ldr	r0, [sp, #28]
   2b25c:	ldr	r1, [sp, #24]
   2b260:	movw	r2, #4
   2b264:	bl	2c0f0 <__assert_fail@plt+0x1ad6c>
   2b268:	str	r0, [sp, #28]
   2b26c:	ldr	r0, [sp, #12]
   2b270:	cmn	r0, #1
   2b274:	bne	2b2a0 <__assert_fail@plt+0x19f1c>
   2b278:	ldr	r0, [sp, #32]
   2b27c:	ldr	r1, [sp, #20]
   2b280:	mov	r2, #0
   2b284:	str	r2, [r0, r1, lsl #2]
   2b288:	ldr	r0, [sp, #28]
   2b28c:	ldr	r1, [sp, #20]
   2b290:	add	r0, r0, r1, lsl #2
   2b294:	movw	r1, #0
   2b298:	str	r1, [r0]
   2b29c:	b	2b304 <__assert_fail@plt+0x19f80>
   2b2a0:	ldr	r0, [sp, #12]
   2b2a4:	add	r0, r0, #1
   2b2a8:	mov	r1, #1
   2b2ac:	bl	2c2bc <__assert_fail@plt+0x1af38>
   2b2b0:	str	r0, [sp, #16]
   2b2b4:	ldr	r0, [sp, #12]
   2b2b8:	ldr	r1, [sp, #28]
   2b2bc:	ldr	r2, [sp, #20]
   2b2c0:	str	r0, [r1, r2, lsl #2]
   2b2c4:	ldr	r0, [sp, #16]
   2b2c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b2cc:	ldr	r1, [r1, #4]
   2b2d0:	ldr	r2, [sp, #12]
   2b2d4:	add	r2, r2, #1
   2b2d8:	str	r0, [sp, #8]
   2b2dc:	bl	1112c <memcpy@plt>
   2b2e0:	ldr	r1, [sp, #32]
   2b2e4:	ldr	r2, [sp, #20]
   2b2e8:	add	r1, r1, r2, lsl #2
   2b2ec:	ldr	r2, [sp, #8]
   2b2f0:	str	r2, [r1]
   2b2f4:	ldr	r1, [sp, #20]
   2b2f8:	add	r1, r1, #1
   2b2fc:	str	r1, [sp, #20]
   2b300:	b	2b210 <__assert_fail@plt+0x19e8c>
   2b304:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b308:	ldr	r0, [r0, #4]
   2b30c:	bl	1aaec <__assert_fail@plt+0x9768>
   2b310:	ldr	r0, [sp, #32]
   2b314:	ldr	r1, [fp, #8]
   2b318:	str	r0, [r1]
   2b31c:	ldr	r0, [fp, #12]
   2b320:	movw	r1, #0
   2b324:	cmp	r0, r1
   2b328:	beq	2b33c <__assert_fail@plt+0x19fb8>
   2b32c:	ldr	r0, [sp, #28]
   2b330:	ldr	r1, [fp, #12]
   2b334:	str	r0, [r1]
   2b338:	b	2b344 <__assert_fail@plt+0x19fc0>
   2b33c:	ldr	r0, [sp, #28]
   2b340:	bl	1aaec <__assert_fail@plt+0x9768>
   2b344:	ldr	r0, [sp, #20]
   2b348:	mov	sp, fp
   2b34c:	pop	{fp, pc}
   2b350:	push	{fp, lr}
   2b354:	mov	fp, sp
   2b358:	sub	sp, sp, #24
   2b35c:	str	r0, [fp, #-8]
   2b360:	str	r1, [sp, #12]
   2b364:	str	r2, [sp, #8]
   2b368:	ldr	r0, [fp, #-8]
   2b36c:	ldr	r1, [sp, #12]
   2b370:	ldr	r2, [sp, #8]
   2b374:	bl	112c4 <write@plt>
   2b378:	str	r0, [sp, #4]
   2b37c:	ldr	r0, [sp, #4]
   2b380:	movw	r1, #0
   2b384:	cmp	r1, r0
   2b388:	bgt	2b398 <__assert_fail@plt+0x1a014>
   2b38c:	ldr	r0, [sp, #4]
   2b390:	str	r0, [fp, #-4]
   2b394:	b	2b3f0 <__assert_fail@plt+0x1a06c>
   2b398:	bl	11294 <__errno_location@plt>
   2b39c:	ldr	r0, [r0]
   2b3a0:	cmp	r0, #4
   2b3a4:	bne	2b3ac <__assert_fail@plt+0x1a028>
   2b3a8:	b	2b368 <__assert_fail@plt+0x19fe4>
   2b3ac:	bl	11294 <__errno_location@plt>
   2b3b0:	ldr	r0, [r0]
   2b3b4:	cmp	r0, #22
   2b3b8:	bne	2b3d8 <__assert_fail@plt+0x1a054>
   2b3bc:	ldr	r0, [pc, #56]	; 2b3fc <__assert_fail@plt+0x1a078>
   2b3c0:	ldr	r1, [sp, #8]
   2b3c4:	cmp	r0, r1
   2b3c8:	bcs	2b3d8 <__assert_fail@plt+0x1a054>
   2b3cc:	ldr	r0, [pc, #40]	; 2b3fc <__assert_fail@plt+0x1a078>
   2b3d0:	str	r0, [sp, #8]
   2b3d4:	b	2b3e4 <__assert_fail@plt+0x1a060>
   2b3d8:	ldr	r0, [sp, #4]
   2b3dc:	str	r0, [fp, #-4]
   2b3e0:	b	2b3f0 <__assert_fail@plt+0x1a06c>
   2b3e4:	b	2b3e8 <__assert_fail@plt+0x1a064>
   2b3e8:	b	2b3ec <__assert_fail@plt+0x1a068>
   2b3ec:	b	2b368 <__assert_fail@plt+0x19fe4>
   2b3f0:	ldr	r0, [fp, #-4]
   2b3f4:	mov	sp, fp
   2b3f8:	pop	{fp, pc}
   2b3fc:	svcvc	0x00f00000	; IMB
   2b400:	push	{fp, lr}
   2b404:	mov	fp, sp
   2b408:	sub	sp, sp, #144	; 0x90
   2b40c:	str	r0, [fp, #-4]
   2b410:	str	r1, [fp, #-8]
   2b414:	ldr	r0, [fp, #-4]
   2b418:	bl	1115c <strdup@plt>
   2b41c:	str	r0, [fp, #-12]
   2b420:	ldr	r0, [fp, #-12]
   2b424:	movw	r1, #0
   2b428:	cmp	r0, r1
   2b42c:	bne	2b434 <__assert_fail@plt+0x1a0b0>
   2b430:	bl	2ee9c <__assert_fail@plt+0x1db18>
   2b434:	bl	111bc <__ctype_get_mb_cur_max@plt>
   2b438:	cmp	r0, #1
   2b43c:	bls	2b734 <__assert_fail@plt+0x1a3b0>
   2b440:	ldr	r0, [fp, #-8]
   2b444:	cmp	r0, #0
   2b448:	beq	2b554 <__assert_fail@plt+0x1a1d0>
   2b44c:	ldr	r0, [fp, #-12]
   2b450:	str	r0, [sp, #92]	; 0x5c
   2b454:	ldr	r0, [sp, #92]	; 0x5c
   2b458:	ldr	r1, [fp, #-12]
   2b45c:	str	r0, [sp, #56]	; 0x38
   2b460:	mov	r0, r1
   2b464:	bl	11270 <strlen@plt>
   2b468:	ldr	r1, [sp, #56]	; 0x38
   2b46c:	add	r0, r1, r0
   2b470:	str	r0, [sp, #72]	; 0x48
   2b474:	movw	r0, #0
   2b478:	strb	r0, [sp, #76]	; 0x4c
   2b47c:	add	r1, sp, #72	; 0x48
   2b480:	add	r1, r1, #8
   2b484:	str	r0, [sp, #52]	; 0x34
   2b488:	mov	r0, r1
   2b48c:	ldr	r1, [sp, #52]	; 0x34
   2b490:	and	r1, r1, #255	; 0xff
   2b494:	movw	r2, #8
   2b498:	bl	112b8 <memset@plt>
   2b49c:	ldr	r0, [sp, #52]	; 0x34
   2b4a0:	strb	r0, [sp, #88]	; 0x58
   2b4a4:	ldr	r0, [sp, #92]	; 0x5c
   2b4a8:	ldr	r1, [sp, #72]	; 0x48
   2b4ac:	cmp	r0, r1
   2b4b0:	movw	r0, #0
   2b4b4:	str	r0, [sp, #48]	; 0x30
   2b4b8:	bcs	2b4fc <__assert_fail@plt+0x1a178>
   2b4bc:	add	r0, sp, #72	; 0x48
   2b4c0:	bl	2f814 <__assert_fail@plt+0x1e490>
   2b4c4:	movw	r0, #0
   2b4c8:	ldrb	r0, [sp, #100]	; 0x64
   2b4cc:	tst	r0, #1
   2b4d0:	movw	r0, #0
   2b4d4:	str	r0, [sp, #44]	; 0x2c
   2b4d8:	beq	2b4f4 <__assert_fail@plt+0x1a170>
   2b4dc:	ldr	r0, [sp, #104]	; 0x68
   2b4e0:	bl	11258 <iswspace@plt>
   2b4e4:	cmp	r0, #0
   2b4e8:	movw	r0, #0
   2b4ec:	movne	r0, #1
   2b4f0:	str	r0, [sp, #44]	; 0x2c
   2b4f4:	ldr	r0, [sp, #44]	; 0x2c
   2b4f8:	str	r0, [sp, #48]	; 0x30
   2b4fc:	ldr	r0, [sp, #48]	; 0x30
   2b500:	tst	r0, #1
   2b504:	beq	2b528 <__assert_fail@plt+0x1a1a4>
   2b508:	b	2b50c <__assert_fail@plt+0x1a188>
   2b50c:	ldr	r0, [sp, #96]	; 0x60
   2b510:	ldr	r1, [sp, #92]	; 0x5c
   2b514:	add	r0, r1, r0
   2b518:	str	r0, [sp, #92]	; 0x5c
   2b51c:	movw	r0, #0
   2b520:	strb	r0, [sp, #88]	; 0x58
   2b524:	b	2b4a4 <__assert_fail@plt+0x1a120>
   2b528:	ldr	r0, [fp, #-12]
   2b52c:	ldr	r1, [sp, #92]	; 0x5c
   2b530:	ldr	r2, [sp, #92]	; 0x5c
   2b534:	str	r0, [sp, #40]	; 0x28
   2b538:	mov	r0, r2
   2b53c:	str	r1, [sp, #36]	; 0x24
   2b540:	bl	11270 <strlen@plt>
   2b544:	add	r2, r0, #1
   2b548:	ldr	r0, [sp, #40]	; 0x28
   2b54c:	ldr	r1, [sp, #36]	; 0x24
   2b550:	bl	11108 <memmove@plt>
   2b554:	ldr	r0, [fp, #-8]
   2b558:	cmp	r0, #1
   2b55c:	beq	2b730 <__assert_fail@plt+0x1a3ac>
   2b560:	movw	r0, #0
   2b564:	str	r0, [sp, #68]	; 0x44
   2b568:	ldr	r0, [fp, #-12]
   2b56c:	str	r0, [sp, #92]	; 0x5c
   2b570:	ldr	r0, [sp, #92]	; 0x5c
   2b574:	ldr	r1, [fp, #-12]
   2b578:	str	r0, [sp, #32]
   2b57c:	mov	r0, r1
   2b580:	bl	11270 <strlen@plt>
   2b584:	ldr	r1, [sp, #32]
   2b588:	add	r0, r1, r0
   2b58c:	str	r0, [sp, #72]	; 0x48
   2b590:	movw	r0, #0
   2b594:	strb	r0, [sp, #76]	; 0x4c
   2b598:	add	r1, sp, #72	; 0x48
   2b59c:	add	r1, r1, #8
   2b5a0:	str	r0, [sp, #28]
   2b5a4:	mov	r0, r1
   2b5a8:	ldr	r1, [sp, #28]
   2b5ac:	and	r1, r1, #255	; 0xff
   2b5b0:	movw	r2, #8
   2b5b4:	bl	112b8 <memset@plt>
   2b5b8:	ldr	r0, [sp, #28]
   2b5bc:	strb	r0, [sp, #88]	; 0x58
   2b5c0:	ldr	r0, [sp, #92]	; 0x5c
   2b5c4:	ldr	r1, [sp, #72]	; 0x48
   2b5c8:	cmp	r0, r1
   2b5cc:	movw	r0, #0
   2b5d0:	str	r0, [sp, #24]
   2b5d4:	bcs	2b5e8 <__assert_fail@plt+0x1a264>
   2b5d8:	add	r0, sp, #72	; 0x48
   2b5dc:	bl	2f814 <__assert_fail@plt+0x1e490>
   2b5e0:	movw	r0, #1
   2b5e4:	str	r0, [sp, #24]
   2b5e8:	ldr	r0, [sp, #24]
   2b5ec:	tst	r0, #1
   2b5f0:	beq	2b714 <__assert_fail@plt+0x1a390>
   2b5f4:	ldr	r0, [sp, #68]	; 0x44
   2b5f8:	cmp	r0, #0
   2b5fc:	bne	2b620 <__assert_fail@plt+0x1a29c>
   2b600:	ldrb	r0, [sp, #100]	; 0x64
   2b604:	tst	r0, #1
   2b608:	beq	2b620 <__assert_fail@plt+0x1a29c>
   2b60c:	ldr	r0, [sp, #104]	; 0x68
   2b610:	bl	11258 <iswspace@plt>
   2b614:	cmp	r0, #0
   2b618:	beq	2b620 <__assert_fail@plt+0x1a29c>
   2b61c:	b	2b6f8 <__assert_fail@plt+0x1a374>
   2b620:	ldr	r0, [sp, #68]	; 0x44
   2b624:	cmp	r0, #0
   2b628:	bne	2b654 <__assert_fail@plt+0x1a2d0>
   2b62c:	ldrb	r0, [sp, #100]	; 0x64
   2b630:	tst	r0, #1
   2b634:	beq	2b648 <__assert_fail@plt+0x1a2c4>
   2b638:	ldr	r0, [sp, #104]	; 0x68
   2b63c:	bl	11258 <iswspace@plt>
   2b640:	cmp	r0, #0
   2b644:	bne	2b654 <__assert_fail@plt+0x1a2d0>
   2b648:	movw	r0, #1
   2b64c:	str	r0, [sp, #68]	; 0x44
   2b650:	b	2b6f8 <__assert_fail@plt+0x1a374>
   2b654:	ldr	r0, [sp, #68]	; 0x44
   2b658:	cmp	r0, #1
   2b65c:	bne	2b680 <__assert_fail@plt+0x1a2fc>
   2b660:	ldrb	r0, [sp, #100]	; 0x64
   2b664:	tst	r0, #1
   2b668:	beq	2b67c <__assert_fail@plt+0x1a2f8>
   2b66c:	ldr	r0, [sp, #104]	; 0x68
   2b670:	bl	11258 <iswspace@plt>
   2b674:	cmp	r0, #0
   2b678:	bne	2b680 <__assert_fail@plt+0x1a2fc>
   2b67c:	b	2b6f8 <__assert_fail@plt+0x1a374>
   2b680:	ldr	r0, [sp, #68]	; 0x44
   2b684:	cmp	r0, #1
   2b688:	bne	2b6bc <__assert_fail@plt+0x1a338>
   2b68c:	ldrb	r0, [sp, #100]	; 0x64
   2b690:	tst	r0, #1
   2b694:	beq	2b6bc <__assert_fail@plt+0x1a338>
   2b698:	ldr	r0, [sp, #104]	; 0x68
   2b69c:	bl	11258 <iswspace@plt>
   2b6a0:	cmp	r0, #0
   2b6a4:	beq	2b6bc <__assert_fail@plt+0x1a338>
   2b6a8:	movw	r0, #2
   2b6ac:	str	r0, [sp, #68]	; 0x44
   2b6b0:	ldr	r0, [sp, #92]	; 0x5c
   2b6b4:	str	r0, [sp, #64]	; 0x40
   2b6b8:	b	2b6f4 <__assert_fail@plt+0x1a370>
   2b6bc:	ldr	r0, [sp, #68]	; 0x44
   2b6c0:	cmp	r0, #2
   2b6c4:	bne	2b6e8 <__assert_fail@plt+0x1a364>
   2b6c8:	ldrb	r0, [sp, #100]	; 0x64
   2b6cc:	tst	r0, #1
   2b6d0:	beq	2b6e8 <__assert_fail@plt+0x1a364>
   2b6d4:	ldr	r0, [sp, #104]	; 0x68
   2b6d8:	bl	11258 <iswspace@plt>
   2b6dc:	cmp	r0, #0
   2b6e0:	beq	2b6e8 <__assert_fail@plt+0x1a364>
   2b6e4:	b	2b6f0 <__assert_fail@plt+0x1a36c>
   2b6e8:	movw	r0, #1
   2b6ec:	str	r0, [sp, #68]	; 0x44
   2b6f0:	b	2b6f4 <__assert_fail@plt+0x1a370>
   2b6f4:	b	2b6f8 <__assert_fail@plt+0x1a374>
   2b6f8:	ldr	r0, [sp, #96]	; 0x60
   2b6fc:	ldr	r1, [sp, #92]	; 0x5c
   2b700:	add	r0, r1, r0
   2b704:	str	r0, [sp, #92]	; 0x5c
   2b708:	movw	r0, #0
   2b70c:	strb	r0, [sp, #88]	; 0x58
   2b710:	b	2b5c0 <__assert_fail@plt+0x1a23c>
   2b714:	ldr	r0, [sp, #68]	; 0x44
   2b718:	cmp	r0, #2
   2b71c:	bne	2b72c <__assert_fail@plt+0x1a3a8>
   2b720:	ldr	r0, [sp, #64]	; 0x40
   2b724:	movw	r1, #0
   2b728:	strb	r1, [r0]
   2b72c:	b	2b730 <__assert_fail@plt+0x1a3ac>
   2b730:	b	2b88c <__assert_fail@plt+0x1a508>
   2b734:	ldr	r0, [fp, #-8]
   2b738:	cmp	r0, #0
   2b73c:	beq	2b7dc <__assert_fail@plt+0x1a458>
   2b740:	ldr	r0, [fp, #-12]
   2b744:	str	r0, [sp, #60]	; 0x3c
   2b748:	ldr	r0, [sp, #60]	; 0x3c
   2b74c:	ldrb	r0, [r0]
   2b750:	cmp	r0, #0
   2b754:	movw	r0, #0
   2b758:	str	r0, [sp, #20]
   2b75c:	beq	2b790 <__assert_fail@plt+0x1a40c>
   2b760:	bl	11240 <__ctype_b_loc@plt>
   2b764:	ldr	r0, [r0]
   2b768:	ldr	r1, [sp, #60]	; 0x3c
   2b76c:	ldrb	r1, [r1]
   2b770:	mov	r2, r1
   2b774:	add	r0, r0, r1, lsl #1
   2b778:	ldrh	r0, [r0]
   2b77c:	and	r0, r0, #8192	; 0x2000
   2b780:	cmp	r0, #0
   2b784:	movw	r0, #0
   2b788:	movne	r0, #1
   2b78c:	str	r0, [sp, #20]
   2b790:	ldr	r0, [sp, #20]
   2b794:	tst	r0, #1
   2b798:	beq	2b7b0 <__assert_fail@plt+0x1a42c>
   2b79c:	b	2b7a0 <__assert_fail@plt+0x1a41c>
   2b7a0:	ldr	r0, [sp, #60]	; 0x3c
   2b7a4:	add	r0, r0, #1
   2b7a8:	str	r0, [sp, #60]	; 0x3c
   2b7ac:	b	2b748 <__assert_fail@plt+0x1a3c4>
   2b7b0:	ldr	r0, [fp, #-12]
   2b7b4:	ldr	r1, [sp, #60]	; 0x3c
   2b7b8:	ldr	r2, [sp, #60]	; 0x3c
   2b7bc:	str	r0, [sp, #16]
   2b7c0:	mov	r0, r2
   2b7c4:	str	r1, [sp, #12]
   2b7c8:	bl	11270 <strlen@plt>
   2b7cc:	add	r2, r0, #1
   2b7d0:	ldr	r0, [sp, #16]
   2b7d4:	ldr	r1, [sp, #12]
   2b7d8:	bl	11108 <memmove@plt>
   2b7dc:	ldr	r0, [fp, #-8]
   2b7e0:	cmp	r0, #1
   2b7e4:	beq	2b888 <__assert_fail@plt+0x1a504>
   2b7e8:	ldr	r0, [fp, #-12]
   2b7ec:	ldr	r1, [fp, #-12]
   2b7f0:	str	r0, [sp, #8]
   2b7f4:	mov	r0, r1
   2b7f8:	bl	11270 <strlen@plt>
   2b7fc:	ldr	r1, [sp, #8]
   2b800:	add	r0, r1, r0
   2b804:	mvn	r1, #0
   2b808:	add	r0, r0, r1
   2b80c:	str	r0, [sp, #60]	; 0x3c
   2b810:	ldr	r0, [sp, #60]	; 0x3c
   2b814:	ldr	r1, [fp, #-12]
   2b818:	cmp	r0, r1
   2b81c:	movw	r0, #0
   2b820:	str	r0, [sp, #4]
   2b824:	bcc	2b858 <__assert_fail@plt+0x1a4d4>
   2b828:	bl	11240 <__ctype_b_loc@plt>
   2b82c:	ldr	r0, [r0]
   2b830:	ldr	r1, [sp, #60]	; 0x3c
   2b834:	ldrb	r1, [r1]
   2b838:	mov	r2, r1
   2b83c:	add	r0, r0, r1, lsl #1
   2b840:	ldrh	r0, [r0]
   2b844:	and	r0, r0, #8192	; 0x2000
   2b848:	cmp	r0, #0
   2b84c:	movw	r0, #0
   2b850:	movne	r0, #1
   2b854:	str	r0, [sp, #4]
   2b858:	ldr	r0, [sp, #4]
   2b85c:	tst	r0, #1
   2b860:	beq	2b884 <__assert_fail@plt+0x1a500>
   2b864:	ldr	r0, [sp, #60]	; 0x3c
   2b868:	movw	r1, #0
   2b86c:	strb	r1, [r0]
   2b870:	ldr	r0, [sp, #60]	; 0x3c
   2b874:	mvn	r1, #0
   2b878:	add	r0, r0, r1
   2b87c:	str	r0, [sp, #60]	; 0x3c
   2b880:	b	2b810 <__assert_fail@plt+0x1a48c>
   2b884:	b	2b888 <__assert_fail@plt+0x1a504>
   2b888:	b	2b88c <__assert_fail@plt+0x1a508>
   2b88c:	ldr	r0, [fp, #-12]
   2b890:	mov	sp, fp
   2b894:	pop	{fp, pc}
   2b898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b89c:	add	fp, sp, #28
   2b8a0:	sub	sp, sp, #196	; 0xc4
   2b8a4:	ldr	ip, [fp, #12]
   2b8a8:	ldr	lr, [fp, #8]
   2b8ac:	str	r0, [fp, #-32]	; 0xffffffe0
   2b8b0:	str	r1, [fp, #-36]	; 0xffffffdc
   2b8b4:	str	r2, [fp, #-40]	; 0xffffffd8
   2b8b8:	str	r3, [fp, #-44]	; 0xffffffd4
   2b8bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b8c0:	movw	r1, #0
   2b8c4:	cmp	r0, r1
   2b8c8:	beq	2b8fc <__assert_fail@plt+0x1a578>
   2b8cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b8d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b8d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b8d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b8dc:	movw	ip, #34124	; 0x854c
   2b8e0:	movt	ip, #3
   2b8e4:	str	r1, [fp, #-48]	; 0xffffffd0
   2b8e8:	mov	r1, ip
   2b8ec:	ldr	ip, [fp, #-48]	; 0xffffffd0
   2b8f0:	str	ip, [sp]
   2b8f4:	bl	11288 <fprintf@plt>
   2b8f8:	b	2b914 <__assert_fail@plt+0x1a590>
   2b8fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b900:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b904:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b908:	movw	r1, #34136	; 0x8558
   2b90c:	movt	r1, #3
   2b910:	bl	11288 <fprintf@plt>
   2b914:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b918:	movw	r1, #34143	; 0x855f
   2b91c:	movt	r1, #3
   2b920:	str	r0, [fp, #-52]	; 0xffffffcc
   2b924:	mov	r0, r1
   2b928:	bl	11264 <gettext@plt>
   2b92c:	movw	r1, #34861	; 0x882d
   2b930:	movt	r1, #3
   2b934:	movw	r3, #2022	; 0x7e6
   2b938:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2b93c:	str	r0, [fp, #-56]	; 0xffffffc8
   2b940:	mov	r0, r2
   2b944:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2b948:	bl	11288 <fprintf@plt>
   2b94c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b950:	movw	r2, #15048	; 0x3ac8
   2b954:	movt	r2, #3
   2b958:	str	r0, [fp, #-60]	; 0xffffffc4
   2b95c:	mov	r0, r2
   2b960:	str	r2, [fp, #-64]	; 0xffffffc0
   2b964:	bl	110a8 <fputs_unlocked@plt>
   2b968:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b96c:	movw	r2, #34147	; 0x8563
   2b970:	movt	r2, #3
   2b974:	str	r0, [fp, #-68]	; 0xffffffbc
   2b978:	mov	r0, r2
   2b97c:	str	r1, [fp, #-72]	; 0xffffffb8
   2b980:	bl	11264 <gettext@plt>
   2b984:	movw	r2, #34318	; 0x860e
   2b988:	movt	r2, #3
   2b98c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2b990:	str	r0, [fp, #-76]	; 0xffffffb4
   2b994:	mov	r0, r1
   2b998:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2b99c:	bl	11288 <fprintf@plt>
   2b9a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b9a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2b9a8:	str	r0, [fp, #-80]	; 0xffffffb0
   2b9ac:	mov	r0, r2
   2b9b0:	bl	110a8 <fputs_unlocked@plt>
   2b9b4:	ldr	r1, [fp, #12]
   2b9b8:	cmp	r1, #9
   2b9bc:	str	r1, [fp, #-84]	; 0xffffffac
   2b9c0:	bhi	2bddc <__assert_fail@plt+0x1aa58>
   2b9c4:	add	r0, pc, #8
   2b9c8:	ldr	r1, [fp, #-84]	; 0xffffffac
   2b9cc:	ldr	r0, [r0, r1, lsl #2]
   2b9d0:	mov	pc, r0
   2b9d4:	strdeq	fp, [r2], -ip
   2b9d8:	andeq	fp, r2, r0, lsl #20
   2b9dc:	andeq	fp, r2, r8, lsr sl
   2b9e0:	andeq	fp, r2, r8, ror sl
   2b9e4:	ldrdeq	fp, [r2], -r0
   2b9e8:	andeq	fp, r2, r4, lsr fp
   2b9ec:	andeq	fp, r2, r4, lsr #23
   2b9f0:	andeq	fp, r2, r0, lsr #24
   2b9f4:	andeq	fp, r2, r8, lsr #25
   2b9f8:	andeq	fp, r2, ip, lsr sp
   2b9fc:	b	2be78 <__assert_fail@plt+0x1aaf4>
   2ba00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ba04:	movw	r1, #34352	; 0x8630
   2ba08:	movt	r1, #3
   2ba0c:	str	r0, [fp, #-88]	; 0xffffffa8
   2ba10:	mov	r0, r1
   2ba14:	bl	11264 <gettext@plt>
   2ba18:	ldr	r1, [fp, #8]
   2ba1c:	ldr	r2, [r1]
   2ba20:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2ba24:	str	r0, [fp, #-92]	; 0xffffffa4
   2ba28:	mov	r0, r1
   2ba2c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   2ba30:	bl	11288 <fprintf@plt>
   2ba34:	b	2be78 <__assert_fail@plt+0x1aaf4>
   2ba38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ba3c:	movw	r1, #34368	; 0x8640
   2ba40:	movt	r1, #3
   2ba44:	str	r0, [fp, #-96]	; 0xffffffa0
   2ba48:	mov	r0, r1
   2ba4c:	bl	11264 <gettext@plt>
   2ba50:	ldr	r1, [fp, #8]
   2ba54:	ldr	r2, [r1]
   2ba58:	ldr	r1, [fp, #8]
   2ba5c:	ldr	r3, [r1, #4]
   2ba60:	ldr	r1, [fp, #-96]	; 0xffffffa0
   2ba64:	str	r0, [fp, #-100]	; 0xffffff9c
   2ba68:	mov	r0, r1
   2ba6c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   2ba70:	bl	11288 <fprintf@plt>
   2ba74:	b	2be78 <__assert_fail@plt+0x1aaf4>
   2ba78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ba7c:	movw	r1, #34391	; 0x8657
   2ba80:	movt	r1, #3
   2ba84:	str	r0, [fp, #-104]	; 0xffffff98
   2ba88:	mov	r0, r1
   2ba8c:	bl	11264 <gettext@plt>
   2ba90:	ldr	r1, [fp, #8]
   2ba94:	ldr	r2, [r1]
   2ba98:	ldr	r1, [fp, #8]
   2ba9c:	ldr	r3, [r1, #4]
   2baa0:	ldr	r1, [fp, #8]
   2baa4:	ldr	r1, [r1, #8]
   2baa8:	ldr	ip, [fp, #-104]	; 0xffffff98
   2baac:	str	r0, [fp, #-108]	; 0xffffff94
   2bab0:	mov	r0, ip
   2bab4:	ldr	lr, [fp, #-108]	; 0xffffff94
   2bab8:	str	r1, [sp, #112]	; 0x70
   2babc:	mov	r1, lr
   2bac0:	ldr	r4, [sp, #112]	; 0x70
   2bac4:	str	r4, [sp]
   2bac8:	bl	11288 <fprintf@plt>
   2bacc:	b	2be78 <__assert_fail@plt+0x1aaf4>
   2bad0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bad4:	movw	r1, #34419	; 0x8673
   2bad8:	movt	r1, #3
   2badc:	str	r0, [sp, #108]	; 0x6c
   2bae0:	mov	r0, r1
   2bae4:	bl	11264 <gettext@plt>
   2bae8:	ldr	r1, [fp, #8]
   2baec:	ldr	r2, [r1]
   2baf0:	ldr	r1, [fp, #8]
   2baf4:	ldr	r3, [r1, #4]
   2baf8:	ldr	r1, [fp, #8]
   2bafc:	ldr	r1, [r1, #8]
   2bb00:	ldr	ip, [fp, #8]
   2bb04:	ldr	ip, [ip, #12]
   2bb08:	ldr	lr, [sp, #108]	; 0x6c
   2bb0c:	str	r0, [sp, #104]	; 0x68
   2bb10:	mov	r0, lr
   2bb14:	ldr	r4, [sp, #104]	; 0x68
   2bb18:	str	r1, [sp, #100]	; 0x64
   2bb1c:	mov	r1, r4
   2bb20:	ldr	r5, [sp, #100]	; 0x64
   2bb24:	str	r5, [sp]
   2bb28:	str	ip, [sp, #4]
   2bb2c:	bl	11288 <fprintf@plt>
   2bb30:	b	2be78 <__assert_fail@plt+0x1aaf4>
   2bb34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bb38:	movw	r1, #34451	; 0x8693
   2bb3c:	movt	r1, #3
   2bb40:	str	r0, [sp, #96]	; 0x60
   2bb44:	mov	r0, r1
   2bb48:	bl	11264 <gettext@plt>
   2bb4c:	ldr	r1, [fp, #8]
   2bb50:	ldr	r2, [r1]
   2bb54:	ldr	r1, [fp, #8]
   2bb58:	ldr	r3, [r1, #4]
   2bb5c:	ldr	r1, [fp, #8]
   2bb60:	ldr	r1, [r1, #8]
   2bb64:	ldr	ip, [fp, #8]
   2bb68:	ldr	ip, [ip, #12]
   2bb6c:	ldr	lr, [fp, #8]
   2bb70:	ldr	lr, [lr, #16]
   2bb74:	ldr	r4, [sp, #96]	; 0x60
   2bb78:	str	r0, [sp, #92]	; 0x5c
   2bb7c:	mov	r0, r4
   2bb80:	ldr	r5, [sp, #92]	; 0x5c
   2bb84:	str	r1, [sp, #88]	; 0x58
   2bb88:	mov	r1, r5
   2bb8c:	ldr	r6, [sp, #88]	; 0x58
   2bb90:	str	r6, [sp]
   2bb94:	str	ip, [sp, #4]
   2bb98:	str	lr, [sp, #8]
   2bb9c:	bl	11288 <fprintf@plt>
   2bba0:	b	2be78 <__assert_fail@plt+0x1aaf4>
   2bba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bba8:	movw	r1, #34487	; 0x86b7
   2bbac:	movt	r1, #3
   2bbb0:	str	r0, [sp, #84]	; 0x54
   2bbb4:	mov	r0, r1
   2bbb8:	bl	11264 <gettext@plt>
   2bbbc:	ldr	r1, [fp, #8]
   2bbc0:	ldr	r2, [r1]
   2bbc4:	ldr	r1, [fp, #8]
   2bbc8:	ldr	r3, [r1, #4]
   2bbcc:	ldr	r1, [fp, #8]
   2bbd0:	ldr	r1, [r1, #8]
   2bbd4:	ldr	ip, [fp, #8]
   2bbd8:	ldr	ip, [ip, #12]
   2bbdc:	ldr	lr, [fp, #8]
   2bbe0:	ldr	lr, [lr, #16]
   2bbe4:	ldr	r4, [fp, #8]
   2bbe8:	ldr	r4, [r4, #20]
   2bbec:	ldr	r5, [sp, #84]	; 0x54
   2bbf0:	str	r0, [sp, #80]	; 0x50
   2bbf4:	mov	r0, r5
   2bbf8:	ldr	r6, [sp, #80]	; 0x50
   2bbfc:	str	r1, [sp, #76]	; 0x4c
   2bc00:	mov	r1, r6
   2bc04:	ldr	r7, [sp, #76]	; 0x4c
   2bc08:	str	r7, [sp]
   2bc0c:	str	ip, [sp, #4]
   2bc10:	str	lr, [sp, #8]
   2bc14:	str	r4, [sp, #12]
   2bc18:	bl	11288 <fprintf@plt>
   2bc1c:	b	2be78 <__assert_fail@plt+0x1aaf4>
   2bc20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bc24:	movw	r1, #34527	; 0x86df
   2bc28:	movt	r1, #3
   2bc2c:	str	r0, [sp, #72]	; 0x48
   2bc30:	mov	r0, r1
   2bc34:	bl	11264 <gettext@plt>
   2bc38:	ldr	r1, [fp, #8]
   2bc3c:	ldr	r2, [r1]
   2bc40:	ldr	r1, [fp, #8]
   2bc44:	ldr	r3, [r1, #4]
   2bc48:	ldr	r1, [fp, #8]
   2bc4c:	ldr	r1, [r1, #8]
   2bc50:	ldr	ip, [fp, #8]
   2bc54:	ldr	ip, [ip, #12]
   2bc58:	ldr	lr, [fp, #8]
   2bc5c:	ldr	lr, [lr, #16]
   2bc60:	ldr	r4, [fp, #8]
   2bc64:	ldr	r4, [r4, #20]
   2bc68:	ldr	r5, [fp, #8]
   2bc6c:	ldr	r5, [r5, #24]
   2bc70:	ldr	r6, [sp, #72]	; 0x48
   2bc74:	str	r0, [sp, #68]	; 0x44
   2bc78:	mov	r0, r6
   2bc7c:	ldr	r7, [sp, #68]	; 0x44
   2bc80:	str	r1, [sp, #64]	; 0x40
   2bc84:	mov	r1, r7
   2bc88:	ldr	r8, [sp, #64]	; 0x40
   2bc8c:	str	r8, [sp]
   2bc90:	str	ip, [sp, #4]
   2bc94:	str	lr, [sp, #8]
   2bc98:	str	r4, [sp, #12]
   2bc9c:	str	r5, [sp, #16]
   2bca0:	bl	11288 <fprintf@plt>
   2bca4:	b	2be78 <__assert_fail@plt+0x1aaf4>
   2bca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bcac:	movw	r1, #34571	; 0x870b
   2bcb0:	movt	r1, #3
   2bcb4:	str	r0, [sp, #60]	; 0x3c
   2bcb8:	mov	r0, r1
   2bcbc:	bl	11264 <gettext@plt>
   2bcc0:	ldr	r1, [fp, #8]
   2bcc4:	ldr	r2, [r1]
   2bcc8:	ldr	r1, [fp, #8]
   2bccc:	ldr	r3, [r1, #4]
   2bcd0:	ldr	r1, [fp, #8]
   2bcd4:	ldr	r1, [r1, #8]
   2bcd8:	ldr	ip, [fp, #8]
   2bcdc:	ldr	ip, [ip, #12]
   2bce0:	ldr	lr, [fp, #8]
   2bce4:	ldr	lr, [lr, #16]
   2bce8:	ldr	r4, [fp, #8]
   2bcec:	ldr	r4, [r4, #20]
   2bcf0:	ldr	r5, [fp, #8]
   2bcf4:	ldr	r5, [r5, #24]
   2bcf8:	ldr	r6, [fp, #8]
   2bcfc:	ldr	r6, [r6, #28]
   2bd00:	ldr	r7, [sp, #60]	; 0x3c
   2bd04:	str	r0, [sp, #56]	; 0x38
   2bd08:	mov	r0, r7
   2bd0c:	ldr	r8, [sp, #56]	; 0x38
   2bd10:	str	r1, [sp, #52]	; 0x34
   2bd14:	mov	r1, r8
   2bd18:	ldr	r9, [sp, #52]	; 0x34
   2bd1c:	str	r9, [sp]
   2bd20:	str	ip, [sp, #4]
   2bd24:	str	lr, [sp, #8]
   2bd28:	str	r4, [sp, #12]
   2bd2c:	str	r5, [sp, #16]
   2bd30:	str	r6, [sp, #20]
   2bd34:	bl	11288 <fprintf@plt>
   2bd38:	b	2be78 <__assert_fail@plt+0x1aaf4>
   2bd3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bd40:	movw	r1, #34619	; 0x873b
   2bd44:	movt	r1, #3
   2bd48:	str	r0, [sp, #48]	; 0x30
   2bd4c:	mov	r0, r1
   2bd50:	bl	11264 <gettext@plt>
   2bd54:	ldr	r1, [fp, #8]
   2bd58:	ldr	r2, [r1]
   2bd5c:	ldr	r1, [fp, #8]
   2bd60:	ldr	r3, [r1, #4]
   2bd64:	ldr	r1, [fp, #8]
   2bd68:	ldr	r1, [r1, #8]
   2bd6c:	ldr	ip, [fp, #8]
   2bd70:	ldr	ip, [ip, #12]
   2bd74:	ldr	lr, [fp, #8]
   2bd78:	ldr	lr, [lr, #16]
   2bd7c:	ldr	r4, [fp, #8]
   2bd80:	ldr	r4, [r4, #20]
   2bd84:	ldr	r5, [fp, #8]
   2bd88:	ldr	r5, [r5, #24]
   2bd8c:	ldr	r6, [fp, #8]
   2bd90:	ldr	r6, [r6, #28]
   2bd94:	ldr	r7, [fp, #8]
   2bd98:	ldr	r7, [r7, #32]
   2bd9c:	ldr	r8, [sp, #48]	; 0x30
   2bda0:	str	r0, [sp, #44]	; 0x2c
   2bda4:	mov	r0, r8
   2bda8:	ldr	r9, [sp, #44]	; 0x2c
   2bdac:	str	r1, [sp, #40]	; 0x28
   2bdb0:	mov	r1, r9
   2bdb4:	ldr	sl, [sp, #40]	; 0x28
   2bdb8:	str	sl, [sp]
   2bdbc:	str	ip, [sp, #4]
   2bdc0:	str	lr, [sp, #8]
   2bdc4:	str	r4, [sp, #12]
   2bdc8:	str	r5, [sp, #16]
   2bdcc:	str	r6, [sp, #20]
   2bdd0:	str	r7, [sp, #24]
   2bdd4:	bl	11288 <fprintf@plt>
   2bdd8:	b	2be78 <__assert_fail@plt+0x1aaf4>
   2bddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bde0:	movw	r1, #34671	; 0x876f
   2bde4:	movt	r1, #3
   2bde8:	str	r0, [sp, #36]	; 0x24
   2bdec:	mov	r0, r1
   2bdf0:	bl	11264 <gettext@plt>
   2bdf4:	ldr	r1, [fp, #8]
   2bdf8:	ldr	r2, [r1]
   2bdfc:	ldr	r1, [fp, #8]
   2be00:	ldr	r3, [r1, #4]
   2be04:	ldr	r1, [fp, #8]
   2be08:	ldr	r1, [r1, #8]
   2be0c:	ldr	ip, [fp, #8]
   2be10:	ldr	ip, [ip, #12]
   2be14:	ldr	lr, [fp, #8]
   2be18:	ldr	lr, [lr, #16]
   2be1c:	ldr	r4, [fp, #8]
   2be20:	ldr	r4, [r4, #20]
   2be24:	ldr	r5, [fp, #8]
   2be28:	ldr	r5, [r5, #24]
   2be2c:	ldr	r6, [fp, #8]
   2be30:	ldr	r6, [r6, #28]
   2be34:	ldr	r7, [fp, #8]
   2be38:	ldr	r7, [r7, #32]
   2be3c:	ldr	r8, [sp, #36]	; 0x24
   2be40:	str	r0, [sp, #32]
   2be44:	mov	r0, r8
   2be48:	ldr	r9, [sp, #32]
   2be4c:	str	r1, [sp, #28]
   2be50:	mov	r1, r9
   2be54:	ldr	sl, [sp, #28]
   2be58:	str	sl, [sp]
   2be5c:	str	ip, [sp, #4]
   2be60:	str	lr, [sp, #8]
   2be64:	str	r4, [sp, #12]
   2be68:	str	r5, [sp, #16]
   2be6c:	str	r6, [sp, #20]
   2be70:	str	r7, [sp, #24]
   2be74:	bl	11288 <fprintf@plt>
   2be78:	sub	sp, fp, #28
   2be7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2be80:	push	{fp, lr}
   2be84:	mov	fp, sp
   2be88:	sub	sp, sp, #32
   2be8c:	ldr	ip, [fp, #8]
   2be90:	str	r0, [fp, #-4]
   2be94:	str	r1, [fp, #-8]
   2be98:	str	r2, [fp, #-12]
   2be9c:	str	r3, [sp, #16]
   2bea0:	movw	r0, #0
   2bea4:	str	r0, [sp, #12]
   2bea8:	ldr	r0, [fp, #8]
   2beac:	ldr	r1, [sp, #12]
   2beb0:	add	r0, r0, r1, lsl #2
   2beb4:	ldr	r0, [r0]
   2beb8:	movw	r1, #0
   2bebc:	cmp	r0, r1
   2bec0:	beq	2bed8 <__assert_fail@plt+0x1ab54>
   2bec4:	b	2bec8 <__assert_fail@plt+0x1ab44>
   2bec8:	ldr	r0, [sp, #12]
   2becc:	add	r0, r0, #1
   2bed0:	str	r0, [sp, #12]
   2bed4:	b	2bea8 <__assert_fail@plt+0x1ab24>
   2bed8:	ldr	r0, [fp, #-4]
   2bedc:	ldr	r1, [fp, #-8]
   2bee0:	ldr	r2, [fp, #-12]
   2bee4:	ldr	r3, [sp, #16]
   2bee8:	ldr	ip, [fp, #8]
   2beec:	ldr	lr, [sp, #12]
   2bef0:	str	ip, [sp]
   2bef4:	str	lr, [sp, #4]
   2bef8:	bl	2b898 <__assert_fail@plt+0x1a514>
   2befc:	mov	sp, fp
   2bf00:	pop	{fp, pc}
   2bf04:	push	{fp, lr}
   2bf08:	mov	fp, sp
   2bf0c:	sub	sp, sp, #80	; 0x50
   2bf10:	ldr	ip, [fp, #8]
   2bf14:	str	ip, [fp, #-4]
   2bf18:	str	r0, [fp, #-8]
   2bf1c:	str	r1, [fp, #-12]
   2bf20:	str	r2, [fp, #-16]
   2bf24:	str	r3, [fp, #-20]	; 0xffffffec
   2bf28:	movw	r0, #0
   2bf2c:	str	r0, [fp, #-24]	; 0xffffffe8
   2bf30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bf34:	cmp	r0, #10
   2bf38:	movw	r0, #0
   2bf3c:	str	r0, [sp, #12]
   2bf40:	bcs	2bf78 <__assert_fail@plt+0x1abf4>
   2bf44:	ldr	r0, [fp, #-4]
   2bf48:	add	r1, r0, #4
   2bf4c:	str	r1, [fp, #-4]
   2bf50:	ldr	r0, [r0]
   2bf54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bf58:	add	r2, sp, #16
   2bf5c:	add	r1, r2, r1, lsl #2
   2bf60:	str	r0, [r1]
   2bf64:	movw	r1, #0
   2bf68:	cmp	r0, r1
   2bf6c:	movw	r0, #0
   2bf70:	movne	r0, #1
   2bf74:	str	r0, [sp, #12]
   2bf78:	ldr	r0, [sp, #12]
   2bf7c:	tst	r0, #1
   2bf80:	beq	2bf98 <__assert_fail@plt+0x1ac14>
   2bf84:	b	2bf88 <__assert_fail@plt+0x1ac04>
   2bf88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bf8c:	add	r0, r0, #1
   2bf90:	str	r0, [fp, #-24]	; 0xffffffe8
   2bf94:	b	2bf30 <__assert_fail@plt+0x1abac>
   2bf98:	add	r0, sp, #16
   2bf9c:	ldr	r1, [fp, #-8]
   2bfa0:	ldr	r2, [fp, #-12]
   2bfa4:	ldr	r3, [fp, #-16]
   2bfa8:	ldr	ip, [fp, #-20]	; 0xffffffec
   2bfac:	ldr	lr, [fp, #-24]	; 0xffffffe8
   2bfb0:	str	r0, [sp, #8]
   2bfb4:	mov	r0, r1
   2bfb8:	mov	r1, r2
   2bfbc:	mov	r2, r3
   2bfc0:	mov	r3, ip
   2bfc4:	ldr	ip, [sp, #8]
   2bfc8:	str	ip, [sp]
   2bfcc:	str	lr, [sp, #4]
   2bfd0:	bl	2b898 <__assert_fail@plt+0x1a514>
   2bfd4:	mov	sp, fp
   2bfd8:	pop	{fp, pc}
   2bfdc:	push	{fp, lr}
   2bfe0:	mov	fp, sp
   2bfe4:	sub	sp, sp, #24
   2bfe8:	str	r0, [fp, #-4]
   2bfec:	str	r1, [fp, #-8]
   2bff0:	str	r2, [sp, #12]
   2bff4:	str	r3, [sp, #8]
   2bff8:	add	r0, fp, #8
   2bffc:	str	r0, [sp, #4]
   2c000:	ldr	r0, [fp, #-4]
   2c004:	ldr	r1, [fp, #-8]
   2c008:	ldr	r2, [sp, #12]
   2c00c:	ldr	r3, [sp, #8]
   2c010:	ldr	ip, [sp, #4]
   2c014:	mov	lr, sp
   2c018:	str	ip, [lr]
   2c01c:	bl	2bf04 <__assert_fail@plt+0x1ab80>
   2c020:	add	r0, sp, #4
   2c024:	mov	sp, fp
   2c028:	pop	{fp, pc}
   2c02c:	push	{fp, lr}
   2c030:	mov	fp, sp
   2c034:	sub	sp, sp, #16
   2c038:	movw	r0, #37260	; 0x918c
   2c03c:	movt	r0, #4
   2c040:	ldr	r1, [r0]
   2c044:	movw	r0, #15048	; 0x3ac8
   2c048:	movt	r0, #3
   2c04c:	bl	110a8 <fputs_unlocked@plt>
   2c050:	movw	r1, #34731	; 0x87ab
   2c054:	movt	r1, #3
   2c058:	str	r0, [fp, #-4]
   2c05c:	mov	r0, r1
   2c060:	bl	11264 <gettext@plt>
   2c064:	movw	r1, #34751	; 0x87bf
   2c068:	movt	r1, #3
   2c06c:	bl	110e4 <printf@plt>
   2c070:	movw	r1, #34773	; 0x87d5
   2c074:	movt	r1, #3
   2c078:	str	r0, [sp, #8]
   2c07c:	mov	r0, r1
   2c080:	bl	11264 <gettext@plt>
   2c084:	movw	r1, #15180	; 0x3b4c
   2c088:	movt	r1, #3
   2c08c:	movw	r2, #15387	; 0x3c1b
   2c090:	movt	r2, #3
   2c094:	bl	110e4 <printf@plt>
   2c098:	movw	r1, #34793	; 0x87e9
   2c09c:	movt	r1, #3
   2c0a0:	str	r0, [sp, #4]
   2c0a4:	mov	r0, r1
   2c0a8:	bl	11264 <gettext@plt>
   2c0ac:	movw	r1, #34832	; 0x8810
   2c0b0:	movt	r1, #3
   2c0b4:	bl	110e4 <printf@plt>
   2c0b8:	mov	sp, fp
   2c0bc:	pop	{fp, pc}
   2c0c0:	push	{fp, lr}
   2c0c4:	mov	fp, sp
   2c0c8:	sub	sp, sp, #16
   2c0cc:	str	r0, [fp, #-4]
   2c0d0:	str	r1, [sp, #8]
   2c0d4:	str	r2, [sp, #4]
   2c0d8:	ldr	r0, [fp, #-4]
   2c0dc:	ldr	r1, [sp, #8]
   2c0e0:	ldr	r2, [sp, #4]
   2c0e4:	bl	2c0f0 <__assert_fail@plt+0x1ad6c>
   2c0e8:	mov	sp, fp
   2c0ec:	pop	{fp, pc}
   2c0f0:	push	{fp, lr}
   2c0f4:	mov	fp, sp
   2c0f8:	sub	sp, sp, #16
   2c0fc:	str	r0, [fp, #-4]
   2c100:	str	r1, [sp, #8]
   2c104:	str	r2, [sp, #4]
   2c108:	ldr	r0, [fp, #-4]
   2c10c:	ldr	r1, [sp, #8]
   2c110:	ldr	r2, [sp, #4]
   2c114:	bl	30fc8 <__assert_fail@plt+0x1fc44>
   2c118:	str	r0, [sp]
   2c11c:	ldr	r0, [sp]
   2c120:	movw	r1, #0
   2c124:	cmp	r0, r1
   2c128:	bne	2c158 <__assert_fail@plt+0x1add4>
   2c12c:	ldr	r0, [fp, #-4]
   2c130:	movw	r1, #0
   2c134:	cmp	r0, r1
   2c138:	beq	2c154 <__assert_fail@plt+0x1add0>
   2c13c:	ldr	r0, [sp, #8]
   2c140:	cmp	r0, #0
   2c144:	beq	2c158 <__assert_fail@plt+0x1add4>
   2c148:	ldr	r0, [sp, #4]
   2c14c:	cmp	r0, #0
   2c150:	beq	2c158 <__assert_fail@plt+0x1add4>
   2c154:	bl	2ee9c <__assert_fail@plt+0x1db18>
   2c158:	ldr	r0, [sp]
   2c15c:	mov	sp, fp
   2c160:	pop	{fp, pc}
   2c164:	push	{fp, lr}
   2c168:	mov	fp, sp
   2c16c:	sub	sp, sp, #8
   2c170:	str	r0, [sp, #4]
   2c174:	ldr	r0, [sp, #4]
   2c178:	bl	2f0a8 <__assert_fail@plt+0x1dd24>
   2c17c:	bl	2c188 <__assert_fail@plt+0x1ae04>
   2c180:	mov	sp, fp
   2c184:	pop	{fp, pc}
   2c188:	push	{fp, lr}
   2c18c:	mov	fp, sp
   2c190:	sub	sp, sp, #8
   2c194:	str	r0, [sp, #4]
   2c198:	ldr	r0, [sp, #4]
   2c19c:	movw	r1, #0
   2c1a0:	cmp	r0, r1
   2c1a4:	bne	2c1ac <__assert_fail@plt+0x1ae28>
   2c1a8:	bl	2ee9c <__assert_fail@plt+0x1db18>
   2c1ac:	ldr	r0, [sp, #4]
   2c1b0:	mov	sp, fp
   2c1b4:	pop	{fp, pc}
   2c1b8:	push	{fp, lr}
   2c1bc:	mov	fp, sp
   2c1c0:	sub	sp, sp, #8
   2c1c4:	str	r0, [sp, #4]
   2c1c8:	ldr	r0, [sp, #4]
   2c1cc:	bl	2f600 <__assert_fail@plt+0x1e27c>
   2c1d0:	bl	2c188 <__assert_fail@plt+0x1ae04>
   2c1d4:	mov	sp, fp
   2c1d8:	pop	{fp, pc}
   2c1dc:	push	{fp, lr}
   2c1e0:	mov	fp, sp
   2c1e4:	sub	sp, sp, #8
   2c1e8:	str	r0, [sp, #4]
   2c1ec:	ldr	r0, [sp, #4]
   2c1f0:	bl	2c164 <__assert_fail@plt+0x1ade0>
   2c1f4:	mov	sp, fp
   2c1f8:	pop	{fp, pc}
   2c1fc:	push	{fp, lr}
   2c200:	mov	fp, sp
   2c204:	sub	sp, sp, #16
   2c208:	str	r0, [fp, #-4]
   2c20c:	str	r1, [sp, #8]
   2c210:	ldr	r0, [fp, #-4]
   2c214:	ldr	r1, [sp, #8]
   2c218:	bl	2f118 <__assert_fail@plt+0x1dd94>
   2c21c:	str	r0, [sp, #4]
   2c220:	ldr	r0, [sp, #4]
   2c224:	movw	r1, #0
   2c228:	cmp	r0, r1
   2c22c:	bne	2c250 <__assert_fail@plt+0x1aecc>
   2c230:	ldr	r0, [fp, #-4]
   2c234:	movw	r1, #0
   2c238:	cmp	r0, r1
   2c23c:	beq	2c24c <__assert_fail@plt+0x1aec8>
   2c240:	ldr	r0, [sp, #8]
   2c244:	cmp	r0, #0
   2c248:	beq	2c250 <__assert_fail@plt+0x1aecc>
   2c24c:	bl	2ee9c <__assert_fail@plt+0x1db18>
   2c250:	ldr	r0, [sp, #4]
   2c254:	mov	sp, fp
   2c258:	pop	{fp, pc}
   2c25c:	push	{fp, lr}
   2c260:	mov	fp, sp
   2c264:	sub	sp, sp, #8
   2c268:	str	r0, [sp, #4]
   2c26c:	str	r1, [sp]
   2c270:	ldr	r0, [sp, #4]
   2c274:	ldr	r1, [sp]
   2c278:	bl	2f640 <__assert_fail@plt+0x1e2bc>
   2c27c:	bl	2c188 <__assert_fail@plt+0x1ae04>
   2c280:	mov	sp, fp
   2c284:	pop	{fp, pc}
   2c288:	push	{fp, lr}
   2c28c:	mov	fp, sp
   2c290:	sub	sp, sp, #16
   2c294:	str	r0, [fp, #-4]
   2c298:	str	r1, [sp, #8]
   2c29c:	str	r2, [sp, #4]
   2c2a0:	ldr	r0, [fp, #-4]
   2c2a4:	ldr	r1, [sp, #8]
   2c2a8:	ldr	r2, [sp, #4]
   2c2ac:	bl	2f738 <__assert_fail@plt+0x1e3b4>
   2c2b0:	bl	2c188 <__assert_fail@plt+0x1ae04>
   2c2b4:	mov	sp, fp
   2c2b8:	pop	{fp, pc}
   2c2bc:	push	{fp, lr}
   2c2c0:	mov	fp, sp
   2c2c4:	sub	sp, sp, #8
   2c2c8:	str	r0, [sp, #4]
   2c2cc:	str	r1, [sp]
   2c2d0:	ldr	r1, [sp, #4]
   2c2d4:	ldr	r2, [sp]
   2c2d8:	movw	r0, #0
   2c2dc:	bl	2c0f0 <__assert_fail@plt+0x1ad6c>
   2c2e0:	mov	sp, fp
   2c2e4:	pop	{fp, pc}
   2c2e8:	push	{fp, lr}
   2c2ec:	mov	fp, sp
   2c2f0:	sub	sp, sp, #8
   2c2f4:	str	r0, [sp, #4]
   2c2f8:	str	r1, [sp]
   2c2fc:	ldr	r1, [sp, #4]
   2c300:	ldr	r2, [sp]
   2c304:	movw	r0, #0
   2c308:	bl	2c288 <__assert_fail@plt+0x1af04>
   2c30c:	mov	sp, fp
   2c310:	pop	{fp, pc}
   2c314:	push	{fp, lr}
   2c318:	mov	fp, sp
   2c31c:	sub	sp, sp, #8
   2c320:	str	r0, [sp, #4]
   2c324:	str	r1, [sp]
   2c328:	ldr	r0, [sp, #4]
   2c32c:	ldr	r1, [sp]
   2c330:	movw	r2, #1
   2c334:	bl	2c340 <__assert_fail@plt+0x1afbc>
   2c338:	mov	sp, fp
   2c33c:	pop	{fp, pc}
   2c340:	push	{fp, lr}
   2c344:	mov	fp, sp
   2c348:	sub	sp, sp, #16
   2c34c:	str	r0, [fp, #-4]
   2c350:	str	r1, [sp, #8]
   2c354:	str	r2, [sp, #4]
   2c358:	ldr	r0, [sp, #8]
   2c35c:	ldr	r0, [r0]
   2c360:	str	r0, [sp]
   2c364:	ldr	r0, [fp, #-4]
   2c368:	movw	r1, #0
   2c36c:	cmp	r0, r1
   2c370:	bne	2c3bc <__assert_fail@plt+0x1b038>
   2c374:	ldr	r0, [sp]
   2c378:	cmp	r0, #0
   2c37c:	bne	2c3b8 <__assert_fail@plt+0x1b034>
   2c380:	ldr	r0, [sp, #4]
   2c384:	movw	r1, #64	; 0x40
   2c388:	udiv	r0, r1, r0
   2c38c:	str	r0, [sp]
   2c390:	ldr	r0, [sp]
   2c394:	cmp	r0, #0
   2c398:	movw	r0, #0
   2c39c:	movne	r0, #1
   2c3a0:	mvn	r1, #0
   2c3a4:	eor	r0, r0, r1
   2c3a8:	and	r0, r0, #1
   2c3ac:	ldr	r1, [sp]
   2c3b0:	add	r0, r1, r0
   2c3b4:	str	r0, [sp]
   2c3b8:	b	2c3ec <__assert_fail@plt+0x1b068>
   2c3bc:	ldr	r0, [sp]
   2c3c0:	ldr	r1, [sp]
   2c3c4:	lsr	r1, r1, #1
   2c3c8:	add	r1, r1, #1
   2c3cc:	adds	r0, r0, r1
   2c3d0:	mov	r1, #0
   2c3d4:	adc	r1, r1, #0
   2c3d8:	str	r0, [sp]
   2c3dc:	tst	r1, #1
   2c3e0:	beq	2c3e8 <__assert_fail@plt+0x1b064>
   2c3e4:	bl	2ee9c <__assert_fail@plt+0x1db18>
   2c3e8:	b	2c3ec <__assert_fail@plt+0x1b068>
   2c3ec:	ldr	r0, [fp, #-4]
   2c3f0:	ldr	r1, [sp]
   2c3f4:	ldr	r2, [sp, #4]
   2c3f8:	bl	2c0f0 <__assert_fail@plt+0x1ad6c>
   2c3fc:	str	r0, [fp, #-4]
   2c400:	ldr	r0, [sp]
   2c404:	ldr	r1, [sp, #8]
   2c408:	str	r0, [r1]
   2c40c:	ldr	r0, [fp, #-4]
   2c410:	mov	sp, fp
   2c414:	pop	{fp, pc}
   2c418:	push	{fp, lr}
   2c41c:	mov	fp, sp
   2c420:	sub	sp, sp, #216	; 0xd8
   2c424:	ldr	ip, [fp, #8]
   2c428:	str	r0, [fp, #-4]
   2c42c:	str	r1, [fp, #-8]
   2c430:	str	r2, [fp, #-12]
   2c434:	str	r3, [fp, #-16]
   2c438:	ldr	r0, [fp, #-8]
   2c43c:	ldr	r0, [r0]
   2c440:	str	r0, [fp, #-20]	; 0xffffffec
   2c444:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c448:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c44c:	asr	r1, r1, #1
   2c450:	add	r1, r0, r1
   2c454:	mov	r2, #1
   2c458:	cmp	r1, r0
   2c45c:	movwvc	r2, #0
   2c460:	str	r1, [fp, #-24]	; 0xffffffe8
   2c464:	tst	r2, #1
   2c468:	beq	2c474 <__assert_fail@plt+0x1b0f0>
   2c46c:	ldr	r0, [pc, #4036]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2c470:	str	r0, [fp, #-24]	; 0xffffffe8
   2c474:	ldr	r0, [fp, #-16]
   2c478:	movw	r1, #0
   2c47c:	cmp	r1, r0
   2c480:	bgt	2c49c <__assert_fail@plt+0x1b118>
   2c484:	ldr	r0, [fp, #-16]
   2c488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c48c:	cmp	r0, r1
   2c490:	bge	2c49c <__assert_fail@plt+0x1b118>
   2c494:	ldr	r0, [fp, #-16]
   2c498:	str	r0, [fp, #-24]	; 0xffffffe8
   2c49c:	b	2c874 <__assert_fail@plt+0x1b4f0>
   2c4a0:	b	2c4a4 <__assert_fail@plt+0x1b120>
   2c4a4:	ldr	r0, [fp, #8]
   2c4a8:	cmp	r0, #0
   2c4ac:	bge	2c5c0 <__assert_fail@plt+0x1b23c>
   2c4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c4b4:	cmp	r0, #0
   2c4b8:	bge	2c544 <__assert_fail@plt+0x1b1c0>
   2c4bc:	b	2c4c0 <__assert_fail@plt+0x1b13c>
   2c4c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c4c4:	ldr	r1, [fp, #8]
   2c4c8:	movw	r2, #127	; 0x7f
   2c4cc:	sdiv	r1, r2, r1
   2c4d0:	cmp	r0, r1
   2c4d4:	blt	2c660 <__assert_fail@plt+0x1b2dc>
   2c4d8:	b	2c678 <__assert_fail@plt+0x1b2f4>
   2c4dc:	b	2c4e0 <__assert_fail@plt+0x1b15c>
   2c4e0:	ldr	r0, [pc, #4084]	; 2d4dc <__assert_fail@plt+0x1c158>
   2c4e4:	ldr	r1, [fp, #8]
   2c4e8:	cmp	r1, r0
   2c4ec:	blt	2c504 <__assert_fail@plt+0x1b180>
   2c4f0:	b	2c510 <__assert_fail@plt+0x1b18c>
   2c4f4:	ldr	r0, [fp, #8]
   2c4f8:	movw	r1, #0
   2c4fc:	cmp	r1, r0
   2c500:	bge	2c510 <__assert_fail@plt+0x1b18c>
   2c504:	movw	r0, #0
   2c508:	str	r0, [fp, #-36]	; 0xffffffdc
   2c50c:	b	2c528 <__assert_fail@plt+0x1b1a4>
   2c510:	ldr	r0, [fp, #8]
   2c514:	movw	r1, #0
   2c518:	sub	r0, r1, r0
   2c51c:	movw	r1, #127	; 0x7f
   2c520:	sdiv	r0, r1, r0
   2c524:	str	r0, [fp, #-36]	; 0xffffffdc
   2c528:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c52c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c530:	mvn	r2, #0
   2c534:	sub	r1, r2, r1
   2c538:	cmp	r0, r1
   2c53c:	ble	2c660 <__assert_fail@plt+0x1b2dc>
   2c540:	b	2c678 <__assert_fail@plt+0x1b2f4>
   2c544:	b	2c548 <__assert_fail@plt+0x1b1c4>
   2c548:	b	2c5a4 <__assert_fail@plt+0x1b220>
   2c54c:	b	2c5a4 <__assert_fail@plt+0x1b220>
   2c550:	ldr	r0, [fp, #8]
   2c554:	cmn	r0, #1
   2c558:	bne	2c5a4 <__assert_fail@plt+0x1b220>
   2c55c:	b	2c560 <__assert_fail@plt+0x1b1dc>
   2c560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c564:	mvn	r1, #127	; 0x7f
   2c568:	add	r0, r0, r1
   2c56c:	movw	r1, #0
   2c570:	cmp	r1, r0
   2c574:	blt	2c660 <__assert_fail@plt+0x1b2dc>
   2c578:	b	2c678 <__assert_fail@plt+0x1b2f4>
   2c57c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c580:	movw	r1, #0
   2c584:	cmp	r1, r0
   2c588:	bge	2c678 <__assert_fail@plt+0x1b2f4>
   2c58c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c590:	sub	r0, r0, #1
   2c594:	movw	r1, #127	; 0x7f
   2c598:	cmp	r1, r0
   2c59c:	blt	2c660 <__assert_fail@plt+0x1b2dc>
   2c5a0:	b	2c678 <__assert_fail@plt+0x1b2f4>
   2c5a4:	ldr	r0, [fp, #8]
   2c5a8:	mvn	r1, #127	; 0x7f
   2c5ac:	sdiv	r0, r1, r0
   2c5b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c5b4:	cmp	r0, r1
   2c5b8:	blt	2c660 <__assert_fail@plt+0x1b2dc>
   2c5bc:	b	2c678 <__assert_fail@plt+0x1b2f4>
   2c5c0:	ldr	r0, [fp, #8]
   2c5c4:	cmp	r0, #0
   2c5c8:	bne	2c5d0 <__assert_fail@plt+0x1b24c>
   2c5cc:	b	2c678 <__assert_fail@plt+0x1b2f4>
   2c5d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c5d4:	cmp	r0, #0
   2c5d8:	bge	2c648 <__assert_fail@plt+0x1b2c4>
   2c5dc:	b	2c5e0 <__assert_fail@plt+0x1b25c>
   2c5e0:	b	2c62c <__assert_fail@plt+0x1b2a8>
   2c5e4:	b	2c62c <__assert_fail@plt+0x1b2a8>
   2c5e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c5ec:	cmn	r0, #1
   2c5f0:	bne	2c62c <__assert_fail@plt+0x1b2a8>
   2c5f4:	b	2c5f8 <__assert_fail@plt+0x1b274>
   2c5f8:	ldr	r0, [fp, #8]
   2c5fc:	mvn	r1, #127	; 0x7f
   2c600:	add	r0, r0, r1
   2c604:	movw	r1, #0
   2c608:	cmp	r1, r0
   2c60c:	blt	2c660 <__assert_fail@plt+0x1b2dc>
   2c610:	b	2c678 <__assert_fail@plt+0x1b2f4>
   2c614:	ldr	r0, [fp, #8]
   2c618:	sub	r0, r0, #1
   2c61c:	movw	r1, #127	; 0x7f
   2c620:	cmp	r1, r0
   2c624:	blt	2c660 <__assert_fail@plt+0x1b2dc>
   2c628:	b	2c678 <__assert_fail@plt+0x1b2f4>
   2c62c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c630:	mvn	r1, #127	; 0x7f
   2c634:	sdiv	r0, r1, r0
   2c638:	ldr	r1, [fp, #8]
   2c63c:	cmp	r0, r1
   2c640:	blt	2c660 <__assert_fail@plt+0x1b2dc>
   2c644:	b	2c678 <__assert_fail@plt+0x1b2f4>
   2c648:	ldr	r0, [fp, #8]
   2c64c:	movw	r1, #127	; 0x7f
   2c650:	sdiv	r0, r1, r0
   2c654:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c658:	cmp	r0, r1
   2c65c:	bge	2c678 <__assert_fail@plt+0x1b2f4>
   2c660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c664:	ldr	r1, [fp, #8]
   2c668:	mul	r0, r0, r1
   2c66c:	sxtb	r0, r0
   2c670:	str	r0, [fp, #-28]	; 0xffffffe4
   2c674:	b	2d83c <__assert_fail@plt+0x1c4b8>
   2c678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c67c:	ldr	r1, [fp, #8]
   2c680:	mul	r0, r0, r1
   2c684:	sxtb	r0, r0
   2c688:	str	r0, [fp, #-28]	; 0xffffffe4
   2c68c:	b	2d848 <__assert_fail@plt+0x1c4c4>
   2c690:	ldr	r0, [fp, #8]
   2c694:	cmp	r0, #0
   2c698:	bge	2c7a8 <__assert_fail@plt+0x1b424>
   2c69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c6a0:	cmp	r0, #0
   2c6a4:	bge	2c730 <__assert_fail@plt+0x1b3ac>
   2c6a8:	b	2c6ac <__assert_fail@plt+0x1b328>
   2c6ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c6b0:	ldr	r1, [fp, #8]
   2c6b4:	movw	r2, #255	; 0xff
   2c6b8:	sdiv	r1, r2, r1
   2c6bc:	cmp	r0, r1
   2c6c0:	blt	2c844 <__assert_fail@plt+0x1b4c0>
   2c6c4:	b	2c85c <__assert_fail@plt+0x1b4d8>
   2c6c8:	b	2c6cc <__assert_fail@plt+0x1b348>
   2c6cc:	ldr	r0, [pc, #3592]	; 2d4dc <__assert_fail@plt+0x1c158>
   2c6d0:	ldr	r1, [fp, #8]
   2c6d4:	cmp	r1, r0
   2c6d8:	blt	2c6f0 <__assert_fail@plt+0x1b36c>
   2c6dc:	b	2c6fc <__assert_fail@plt+0x1b378>
   2c6e0:	ldr	r0, [fp, #8]
   2c6e4:	movw	r1, #0
   2c6e8:	cmp	r1, r0
   2c6ec:	bge	2c6fc <__assert_fail@plt+0x1b378>
   2c6f0:	movw	r0, #0
   2c6f4:	str	r0, [fp, #-40]	; 0xffffffd8
   2c6f8:	b	2c714 <__assert_fail@plt+0x1b390>
   2c6fc:	ldr	r0, [fp, #8]
   2c700:	movw	r1, #0
   2c704:	sub	r0, r1, r0
   2c708:	movw	r1, #255	; 0xff
   2c70c:	sdiv	r0, r1, r0
   2c710:	str	r0, [fp, #-40]	; 0xffffffd8
   2c714:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c718:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c71c:	mvn	r2, #0
   2c720:	sub	r1, r2, r1
   2c724:	cmp	r0, r1
   2c728:	ble	2c844 <__assert_fail@plt+0x1b4c0>
   2c72c:	b	2c85c <__assert_fail@plt+0x1b4d8>
   2c730:	b	2c734 <__assert_fail@plt+0x1b3b0>
   2c734:	b	2c78c <__assert_fail@plt+0x1b408>
   2c738:	b	2c78c <__assert_fail@plt+0x1b408>
   2c73c:	ldr	r0, [fp, #8]
   2c740:	cmn	r0, #1
   2c744:	bne	2c78c <__assert_fail@plt+0x1b408>
   2c748:	b	2c74c <__assert_fail@plt+0x1b3c8>
   2c74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c750:	add	r0, r0, #0
   2c754:	movw	r1, #0
   2c758:	cmp	r1, r0
   2c75c:	blt	2c844 <__assert_fail@plt+0x1b4c0>
   2c760:	b	2c85c <__assert_fail@plt+0x1b4d8>
   2c764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c768:	movw	r1, #0
   2c76c:	cmp	r1, r0
   2c770:	bge	2c85c <__assert_fail@plt+0x1b4d8>
   2c774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c778:	sub	r0, r0, #1
   2c77c:	mvn	r1, #0
   2c780:	cmp	r1, r0
   2c784:	blt	2c844 <__assert_fail@plt+0x1b4c0>
   2c788:	b	2c85c <__assert_fail@plt+0x1b4d8>
   2c78c:	ldr	r0, [fp, #8]
   2c790:	movw	r1, #0
   2c794:	sdiv	r0, r1, r0
   2c798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c79c:	cmp	r0, r1
   2c7a0:	blt	2c844 <__assert_fail@plt+0x1b4c0>
   2c7a4:	b	2c85c <__assert_fail@plt+0x1b4d8>
   2c7a8:	ldr	r0, [fp, #8]
   2c7ac:	cmp	r0, #0
   2c7b0:	bne	2c7b8 <__assert_fail@plt+0x1b434>
   2c7b4:	b	2c85c <__assert_fail@plt+0x1b4d8>
   2c7b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c7bc:	cmp	r0, #0
   2c7c0:	bge	2c82c <__assert_fail@plt+0x1b4a8>
   2c7c4:	b	2c7c8 <__assert_fail@plt+0x1b444>
   2c7c8:	b	2c810 <__assert_fail@plt+0x1b48c>
   2c7cc:	b	2c810 <__assert_fail@plt+0x1b48c>
   2c7d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c7d4:	cmn	r0, #1
   2c7d8:	bne	2c810 <__assert_fail@plt+0x1b48c>
   2c7dc:	b	2c7e0 <__assert_fail@plt+0x1b45c>
   2c7e0:	ldr	r0, [fp, #8]
   2c7e4:	add	r0, r0, #0
   2c7e8:	movw	r1, #0
   2c7ec:	cmp	r1, r0
   2c7f0:	blt	2c844 <__assert_fail@plt+0x1b4c0>
   2c7f4:	b	2c85c <__assert_fail@plt+0x1b4d8>
   2c7f8:	ldr	r0, [fp, #8]
   2c7fc:	sub	r0, r0, #1
   2c800:	mvn	r1, #0
   2c804:	cmp	r1, r0
   2c808:	blt	2c844 <__assert_fail@plt+0x1b4c0>
   2c80c:	b	2c85c <__assert_fail@plt+0x1b4d8>
   2c810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c814:	movw	r1, #0
   2c818:	sdiv	r0, r1, r0
   2c81c:	ldr	r1, [fp, #8]
   2c820:	cmp	r0, r1
   2c824:	blt	2c844 <__assert_fail@plt+0x1b4c0>
   2c828:	b	2c85c <__assert_fail@plt+0x1b4d8>
   2c82c:	ldr	r0, [fp, #8]
   2c830:	movw	r1, #255	; 0xff
   2c834:	sdiv	r0, r1, r0
   2c838:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c83c:	cmp	r0, r1
   2c840:	bge	2c85c <__assert_fail@plt+0x1b4d8>
   2c844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c848:	ldr	r1, [fp, #8]
   2c84c:	mul	r0, r0, r1
   2c850:	and	r0, r0, #255	; 0xff
   2c854:	str	r0, [fp, #-28]	; 0xffffffe4
   2c858:	b	2d83c <__assert_fail@plt+0x1c4b8>
   2c85c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c860:	ldr	r1, [fp, #8]
   2c864:	mul	r0, r0, r1
   2c868:	and	r0, r0, #255	; 0xff
   2c86c:	str	r0, [fp, #-28]	; 0xffffffe4
   2c870:	b	2d848 <__assert_fail@plt+0x1c4c4>
   2c874:	b	2cc4c <__assert_fail@plt+0x1b8c8>
   2c878:	b	2c87c <__assert_fail@plt+0x1b4f8>
   2c87c:	ldr	r0, [fp, #8]
   2c880:	cmp	r0, #0
   2c884:	bge	2c998 <__assert_fail@plt+0x1b614>
   2c888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c88c:	cmp	r0, #0
   2c890:	bge	2c91c <__assert_fail@plt+0x1b598>
   2c894:	b	2c898 <__assert_fail@plt+0x1b514>
   2c898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c89c:	ldr	r1, [fp, #8]
   2c8a0:	movw	r2, #32767	; 0x7fff
   2c8a4:	sdiv	r1, r2, r1
   2c8a8:	cmp	r0, r1
   2c8ac:	blt	2ca38 <__assert_fail@plt+0x1b6b4>
   2c8b0:	b	2ca50 <__assert_fail@plt+0x1b6cc>
   2c8b4:	b	2c8b8 <__assert_fail@plt+0x1b534>
   2c8b8:	ldr	r0, [pc, #3100]	; 2d4dc <__assert_fail@plt+0x1c158>
   2c8bc:	ldr	r1, [fp, #8]
   2c8c0:	cmp	r1, r0
   2c8c4:	blt	2c8dc <__assert_fail@plt+0x1b558>
   2c8c8:	b	2c8e8 <__assert_fail@plt+0x1b564>
   2c8cc:	ldr	r0, [fp, #8]
   2c8d0:	movw	r1, #0
   2c8d4:	cmp	r1, r0
   2c8d8:	bge	2c8e8 <__assert_fail@plt+0x1b564>
   2c8dc:	movw	r0, #0
   2c8e0:	str	r0, [fp, #-44]	; 0xffffffd4
   2c8e4:	b	2c900 <__assert_fail@plt+0x1b57c>
   2c8e8:	ldr	r0, [fp, #8]
   2c8ec:	movw	r1, #0
   2c8f0:	sub	r0, r1, r0
   2c8f4:	movw	r1, #32767	; 0x7fff
   2c8f8:	sdiv	r0, r1, r0
   2c8fc:	str	r0, [fp, #-44]	; 0xffffffd4
   2c900:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2c904:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c908:	mvn	r2, #0
   2c90c:	sub	r1, r2, r1
   2c910:	cmp	r0, r1
   2c914:	ble	2ca38 <__assert_fail@plt+0x1b6b4>
   2c918:	b	2ca50 <__assert_fail@plt+0x1b6cc>
   2c91c:	b	2c920 <__assert_fail@plt+0x1b59c>
   2c920:	b	2c97c <__assert_fail@plt+0x1b5f8>
   2c924:	b	2c97c <__assert_fail@plt+0x1b5f8>
   2c928:	ldr	r0, [fp, #8]
   2c92c:	cmn	r0, #1
   2c930:	bne	2c97c <__assert_fail@plt+0x1b5f8>
   2c934:	b	2c938 <__assert_fail@plt+0x1b5b4>
   2c938:	ldr	r0, [pc, #4068]	; 2d924 <__assert_fail@plt+0x1c5a0>
   2c93c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c940:	add	r0, r1, r0
   2c944:	movw	r1, #0
   2c948:	cmp	r1, r0
   2c94c:	blt	2ca38 <__assert_fail@plt+0x1b6b4>
   2c950:	b	2ca50 <__assert_fail@plt+0x1b6cc>
   2c954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c958:	movw	r1, #0
   2c95c:	cmp	r1, r0
   2c960:	bge	2ca50 <__assert_fail@plt+0x1b6cc>
   2c964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c968:	sub	r0, r0, #1
   2c96c:	movw	r1, #32767	; 0x7fff
   2c970:	cmp	r1, r0
   2c974:	blt	2ca38 <__assert_fail@plt+0x1b6b4>
   2c978:	b	2ca50 <__assert_fail@plt+0x1b6cc>
   2c97c:	ldr	r0, [pc, #4000]	; 2d924 <__assert_fail@plt+0x1c5a0>
   2c980:	ldr	r1, [fp, #8]
   2c984:	sdiv	r0, r0, r1
   2c988:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c98c:	cmp	r0, r1
   2c990:	blt	2ca38 <__assert_fail@plt+0x1b6b4>
   2c994:	b	2ca50 <__assert_fail@plt+0x1b6cc>
   2c998:	ldr	r0, [fp, #8]
   2c99c:	cmp	r0, #0
   2c9a0:	bne	2c9a8 <__assert_fail@plt+0x1b624>
   2c9a4:	b	2ca50 <__assert_fail@plt+0x1b6cc>
   2c9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c9ac:	cmp	r0, #0
   2c9b0:	bge	2ca20 <__assert_fail@plt+0x1b69c>
   2c9b4:	b	2c9b8 <__assert_fail@plt+0x1b634>
   2c9b8:	b	2ca04 <__assert_fail@plt+0x1b680>
   2c9bc:	b	2ca04 <__assert_fail@plt+0x1b680>
   2c9c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c9c4:	cmn	r0, #1
   2c9c8:	bne	2ca04 <__assert_fail@plt+0x1b680>
   2c9cc:	b	2c9d0 <__assert_fail@plt+0x1b64c>
   2c9d0:	ldr	r0, [pc, #3916]	; 2d924 <__assert_fail@plt+0x1c5a0>
   2c9d4:	ldr	r1, [fp, #8]
   2c9d8:	add	r0, r1, r0
   2c9dc:	movw	r1, #0
   2c9e0:	cmp	r1, r0
   2c9e4:	blt	2ca38 <__assert_fail@plt+0x1b6b4>
   2c9e8:	b	2ca50 <__assert_fail@plt+0x1b6cc>
   2c9ec:	ldr	r0, [fp, #8]
   2c9f0:	sub	r0, r0, #1
   2c9f4:	movw	r1, #32767	; 0x7fff
   2c9f8:	cmp	r1, r0
   2c9fc:	blt	2ca38 <__assert_fail@plt+0x1b6b4>
   2ca00:	b	2ca50 <__assert_fail@plt+0x1b6cc>
   2ca04:	ldr	r0, [pc, #3864]	; 2d924 <__assert_fail@plt+0x1c5a0>
   2ca08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ca0c:	sdiv	r0, r0, r1
   2ca10:	ldr	r1, [fp, #8]
   2ca14:	cmp	r0, r1
   2ca18:	blt	2ca38 <__assert_fail@plt+0x1b6b4>
   2ca1c:	b	2ca50 <__assert_fail@plt+0x1b6cc>
   2ca20:	ldr	r0, [fp, #8]
   2ca24:	movw	r1, #32767	; 0x7fff
   2ca28:	sdiv	r0, r1, r0
   2ca2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ca30:	cmp	r0, r1
   2ca34:	bge	2ca50 <__assert_fail@plt+0x1b6cc>
   2ca38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ca3c:	ldr	r1, [fp, #8]
   2ca40:	mul	r0, r0, r1
   2ca44:	sxth	r0, r0
   2ca48:	str	r0, [fp, #-28]	; 0xffffffe4
   2ca4c:	b	2d83c <__assert_fail@plt+0x1c4b8>
   2ca50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ca54:	ldr	r1, [fp, #8]
   2ca58:	mul	r0, r0, r1
   2ca5c:	sxth	r0, r0
   2ca60:	str	r0, [fp, #-28]	; 0xffffffe4
   2ca64:	b	2d848 <__assert_fail@plt+0x1c4c4>
   2ca68:	ldr	r0, [fp, #8]
   2ca6c:	cmp	r0, #0
   2ca70:	bge	2cb80 <__assert_fail@plt+0x1b7fc>
   2ca74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ca78:	cmp	r0, #0
   2ca7c:	bge	2cb08 <__assert_fail@plt+0x1b784>
   2ca80:	b	2ca84 <__assert_fail@plt+0x1b700>
   2ca84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ca88:	ldr	r1, [fp, #8]
   2ca8c:	movw	r2, #65535	; 0xffff
   2ca90:	sdiv	r1, r2, r1
   2ca94:	cmp	r0, r1
   2ca98:	blt	2cc1c <__assert_fail@plt+0x1b898>
   2ca9c:	b	2cc34 <__assert_fail@plt+0x1b8b0>
   2caa0:	b	2caa4 <__assert_fail@plt+0x1b720>
   2caa4:	ldr	r0, [pc, #2608]	; 2d4dc <__assert_fail@plt+0x1c158>
   2caa8:	ldr	r1, [fp, #8]
   2caac:	cmp	r1, r0
   2cab0:	blt	2cac8 <__assert_fail@plt+0x1b744>
   2cab4:	b	2cad4 <__assert_fail@plt+0x1b750>
   2cab8:	ldr	r0, [fp, #8]
   2cabc:	movw	r1, #0
   2cac0:	cmp	r1, r0
   2cac4:	bge	2cad4 <__assert_fail@plt+0x1b750>
   2cac8:	movw	r0, #0
   2cacc:	str	r0, [fp, #-48]	; 0xffffffd0
   2cad0:	b	2caec <__assert_fail@plt+0x1b768>
   2cad4:	ldr	r0, [fp, #8]
   2cad8:	movw	r1, #0
   2cadc:	sub	r0, r1, r0
   2cae0:	movw	r1, #65535	; 0xffff
   2cae4:	sdiv	r0, r1, r0
   2cae8:	str	r0, [fp, #-48]	; 0xffffffd0
   2caec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2caf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2caf4:	mvn	r2, #0
   2caf8:	sub	r1, r2, r1
   2cafc:	cmp	r0, r1
   2cb00:	ble	2cc1c <__assert_fail@plt+0x1b898>
   2cb04:	b	2cc34 <__assert_fail@plt+0x1b8b0>
   2cb08:	b	2cb0c <__assert_fail@plt+0x1b788>
   2cb0c:	b	2cb64 <__assert_fail@plt+0x1b7e0>
   2cb10:	b	2cb64 <__assert_fail@plt+0x1b7e0>
   2cb14:	ldr	r0, [fp, #8]
   2cb18:	cmn	r0, #1
   2cb1c:	bne	2cb64 <__assert_fail@plt+0x1b7e0>
   2cb20:	b	2cb24 <__assert_fail@plt+0x1b7a0>
   2cb24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb28:	add	r0, r0, #0
   2cb2c:	movw	r1, #0
   2cb30:	cmp	r1, r0
   2cb34:	blt	2cc1c <__assert_fail@plt+0x1b898>
   2cb38:	b	2cc34 <__assert_fail@plt+0x1b8b0>
   2cb3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb40:	movw	r1, #0
   2cb44:	cmp	r1, r0
   2cb48:	bge	2cc34 <__assert_fail@plt+0x1b8b0>
   2cb4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb50:	sub	r0, r0, #1
   2cb54:	mvn	r1, #0
   2cb58:	cmp	r1, r0
   2cb5c:	blt	2cc1c <__assert_fail@plt+0x1b898>
   2cb60:	b	2cc34 <__assert_fail@plt+0x1b8b0>
   2cb64:	ldr	r0, [fp, #8]
   2cb68:	movw	r1, #0
   2cb6c:	sdiv	r0, r1, r0
   2cb70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cb74:	cmp	r0, r1
   2cb78:	blt	2cc1c <__assert_fail@plt+0x1b898>
   2cb7c:	b	2cc34 <__assert_fail@plt+0x1b8b0>
   2cb80:	ldr	r0, [fp, #8]
   2cb84:	cmp	r0, #0
   2cb88:	bne	2cb90 <__assert_fail@plt+0x1b80c>
   2cb8c:	b	2cc34 <__assert_fail@plt+0x1b8b0>
   2cb90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb94:	cmp	r0, #0
   2cb98:	bge	2cc04 <__assert_fail@plt+0x1b880>
   2cb9c:	b	2cba0 <__assert_fail@plt+0x1b81c>
   2cba0:	b	2cbe8 <__assert_fail@plt+0x1b864>
   2cba4:	b	2cbe8 <__assert_fail@plt+0x1b864>
   2cba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cbac:	cmn	r0, #1
   2cbb0:	bne	2cbe8 <__assert_fail@plt+0x1b864>
   2cbb4:	b	2cbb8 <__assert_fail@plt+0x1b834>
   2cbb8:	ldr	r0, [fp, #8]
   2cbbc:	add	r0, r0, #0
   2cbc0:	movw	r1, #0
   2cbc4:	cmp	r1, r0
   2cbc8:	blt	2cc1c <__assert_fail@plt+0x1b898>
   2cbcc:	b	2cc34 <__assert_fail@plt+0x1b8b0>
   2cbd0:	ldr	r0, [fp, #8]
   2cbd4:	sub	r0, r0, #1
   2cbd8:	mvn	r1, #0
   2cbdc:	cmp	r1, r0
   2cbe0:	blt	2cc1c <__assert_fail@plt+0x1b898>
   2cbe4:	b	2cc34 <__assert_fail@plt+0x1b8b0>
   2cbe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cbec:	movw	r1, #0
   2cbf0:	sdiv	r0, r1, r0
   2cbf4:	ldr	r1, [fp, #8]
   2cbf8:	cmp	r0, r1
   2cbfc:	blt	2cc1c <__assert_fail@plt+0x1b898>
   2cc00:	b	2cc34 <__assert_fail@plt+0x1b8b0>
   2cc04:	ldr	r0, [fp, #8]
   2cc08:	movw	r1, #65535	; 0xffff
   2cc0c:	sdiv	r0, r1, r0
   2cc10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cc14:	cmp	r0, r1
   2cc18:	bge	2cc34 <__assert_fail@plt+0x1b8b0>
   2cc1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cc20:	ldr	r1, [fp, #8]
   2cc24:	mul	r0, r0, r1
   2cc28:	uxth	r0, r0
   2cc2c:	str	r0, [fp, #-28]	; 0xffffffe4
   2cc30:	b	2d83c <__assert_fail@plt+0x1c4b8>
   2cc34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cc38:	ldr	r1, [fp, #8]
   2cc3c:	mul	r0, r0, r1
   2cc40:	uxth	r0, r0
   2cc44:	str	r0, [fp, #-28]	; 0xffffffe4
   2cc48:	b	2d848 <__assert_fail@plt+0x1c4c4>
   2cc4c:	b	2cc50 <__assert_fail@plt+0x1b8cc>
   2cc50:	b	2cc54 <__assert_fail@plt+0x1b8d0>
   2cc54:	ldr	r0, [fp, #8]
   2cc58:	cmp	r0, #0
   2cc5c:	bge	2cd60 <__assert_fail@plt+0x1b9dc>
   2cc60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cc64:	cmp	r0, #0
   2cc68:	bge	2ccf4 <__assert_fail@plt+0x1b970>
   2cc6c:	b	2cc70 <__assert_fail@plt+0x1b8ec>
   2cc70:	ldr	r0, [pc, #1984]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2cc74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cc78:	ldr	r2, [fp, #8]
   2cc7c:	sdiv	r0, r0, r2
   2cc80:	cmp	r1, r0
   2cc84:	blt	2cdf0 <__assert_fail@plt+0x1ba6c>
   2cc88:	b	2ce04 <__assert_fail@plt+0x1ba80>
   2cc8c:	b	2cc90 <__assert_fail@plt+0x1b90c>
   2cc90:	ldr	r0, [pc, #2116]	; 2d4dc <__assert_fail@plt+0x1c158>
   2cc94:	ldr	r1, [fp, #8]
   2cc98:	cmp	r1, r0
   2cc9c:	blt	2ccb4 <__assert_fail@plt+0x1b930>
   2cca0:	b	2ccc0 <__assert_fail@plt+0x1b93c>
   2cca4:	ldr	r0, [fp, #8]
   2cca8:	movw	r1, #0
   2ccac:	cmp	r1, r0
   2ccb0:	bge	2ccc0 <__assert_fail@plt+0x1b93c>
   2ccb4:	movw	r0, #0
   2ccb8:	str	r0, [fp, #-52]	; 0xffffffcc
   2ccbc:	b	2ccd8 <__assert_fail@plt+0x1b954>
   2ccc0:	ldr	r0, [pc, #1904]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2ccc4:	ldr	r1, [fp, #8]
   2ccc8:	movw	r2, #0
   2cccc:	sub	r1, r2, r1
   2ccd0:	sdiv	r0, r0, r1
   2ccd4:	str	r0, [fp, #-52]	; 0xffffffcc
   2ccd8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2ccdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cce0:	mvn	r2, #0
   2cce4:	sub	r1, r2, r1
   2cce8:	cmp	r0, r1
   2ccec:	ble	2cdf0 <__assert_fail@plt+0x1ba6c>
   2ccf0:	b	2ce04 <__assert_fail@plt+0x1ba80>
   2ccf4:	ldr	r0, [fp, #8]
   2ccf8:	cmn	r0, #1
   2ccfc:	bne	2cd44 <__assert_fail@plt+0x1b9c0>
   2cd00:	b	2cd04 <__assert_fail@plt+0x1b980>
   2cd04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd08:	add	r0, r0, #-2147483648	; 0x80000000
   2cd0c:	movw	r1, #0
   2cd10:	cmp	r1, r0
   2cd14:	blt	2cdf0 <__assert_fail@plt+0x1ba6c>
   2cd18:	b	2ce04 <__assert_fail@plt+0x1ba80>
   2cd1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd20:	movw	r1, #0
   2cd24:	cmp	r1, r0
   2cd28:	bge	2ce04 <__assert_fail@plt+0x1ba80>
   2cd2c:	ldr	r0, [pc, #1796]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2cd30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cd34:	sub	r1, r1, #1
   2cd38:	cmp	r0, r1
   2cd3c:	blt	2cdf0 <__assert_fail@plt+0x1ba6c>
   2cd40:	b	2ce04 <__assert_fail@plt+0x1ba80>
   2cd44:	ldr	r0, [pc, #4080]	; 2dd3c <__assert_fail@plt+0x1c9b8>
   2cd48:	ldr	r1, [fp, #8]
   2cd4c:	sdiv	r0, r0, r1
   2cd50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cd54:	cmp	r0, r1
   2cd58:	blt	2cdf0 <__assert_fail@plt+0x1ba6c>
   2cd5c:	b	2ce04 <__assert_fail@plt+0x1ba80>
   2cd60:	ldr	r0, [fp, #8]
   2cd64:	cmp	r0, #0
   2cd68:	bne	2cd70 <__assert_fail@plt+0x1b9ec>
   2cd6c:	b	2ce04 <__assert_fail@plt+0x1ba80>
   2cd70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd74:	cmp	r0, #0
   2cd78:	bge	2cdd8 <__assert_fail@plt+0x1ba54>
   2cd7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd80:	cmn	r0, #1
   2cd84:	bne	2cdbc <__assert_fail@plt+0x1ba38>
   2cd88:	b	2cd8c <__assert_fail@plt+0x1ba08>
   2cd8c:	ldr	r0, [fp, #8]
   2cd90:	add	r0, r0, #-2147483648	; 0x80000000
   2cd94:	movw	r1, #0
   2cd98:	cmp	r1, r0
   2cd9c:	blt	2cdf0 <__assert_fail@plt+0x1ba6c>
   2cda0:	b	2ce04 <__assert_fail@plt+0x1ba80>
   2cda4:	ldr	r0, [pc, #1676]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2cda8:	ldr	r1, [fp, #8]
   2cdac:	sub	r1, r1, #1
   2cdb0:	cmp	r0, r1
   2cdb4:	blt	2cdf0 <__assert_fail@plt+0x1ba6c>
   2cdb8:	b	2ce04 <__assert_fail@plt+0x1ba80>
   2cdbc:	ldr	r0, [pc, #3960]	; 2dd3c <__assert_fail@plt+0x1c9b8>
   2cdc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cdc4:	sdiv	r0, r0, r1
   2cdc8:	ldr	r1, [fp, #8]
   2cdcc:	cmp	r0, r1
   2cdd0:	blt	2cdf0 <__assert_fail@plt+0x1ba6c>
   2cdd4:	b	2ce04 <__assert_fail@plt+0x1ba80>
   2cdd8:	ldr	r0, [pc, #1624]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2cddc:	ldr	r1, [fp, #8]
   2cde0:	sdiv	r0, r0, r1
   2cde4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cde8:	cmp	r0, r1
   2cdec:	bge	2ce04 <__assert_fail@plt+0x1ba80>
   2cdf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cdf4:	ldr	r1, [fp, #8]
   2cdf8:	mul	r0, r0, r1
   2cdfc:	str	r0, [fp, #-28]	; 0xffffffe4
   2ce00:	b	2d83c <__assert_fail@plt+0x1c4b8>
   2ce04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ce08:	ldr	r1, [fp, #8]
   2ce0c:	mul	r0, r0, r1
   2ce10:	str	r0, [fp, #-28]	; 0xffffffe4
   2ce14:	b	2d848 <__assert_fail@plt+0x1c4c4>
   2ce18:	ldr	r0, [fp, #8]
   2ce1c:	cmp	r0, #0
   2ce20:	bge	2cf30 <__assert_fail@plt+0x1bbac>
   2ce24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ce28:	cmp	r0, #0
   2ce2c:	bge	2ceb8 <__assert_fail@plt+0x1bb34>
   2ce30:	b	2ce50 <__assert_fail@plt+0x1bacc>
   2ce34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ce38:	ldr	r1, [fp, #8]
   2ce3c:	mvn	r2, #0
   2ce40:	udiv	r1, r2, r1
   2ce44:	cmp	r0, r1
   2ce48:	bcc	2cfcc <__assert_fail@plt+0x1bc48>
   2ce4c:	b	2cfe0 <__assert_fail@plt+0x1bc5c>
   2ce50:	b	2ce54 <__assert_fail@plt+0x1bad0>
   2ce54:	ldr	r0, [pc, #1664]	; 2d4dc <__assert_fail@plt+0x1c158>
   2ce58:	ldr	r1, [fp, #8]
   2ce5c:	cmp	r1, r0
   2ce60:	blt	2ce78 <__assert_fail@plt+0x1baf4>
   2ce64:	b	2ce84 <__assert_fail@plt+0x1bb00>
   2ce68:	ldr	r0, [fp, #8]
   2ce6c:	movw	r1, #0
   2ce70:	cmp	r1, r0
   2ce74:	bge	2ce84 <__assert_fail@plt+0x1bb00>
   2ce78:	movw	r0, #1
   2ce7c:	str	r0, [fp, #-56]	; 0xffffffc8
   2ce80:	b	2ce9c <__assert_fail@plt+0x1bb18>
   2ce84:	ldr	r0, [fp, #8]
   2ce88:	movw	r1, #0
   2ce8c:	sub	r0, r1, r0
   2ce90:	mvn	r1, #0
   2ce94:	udiv	r0, r1, r0
   2ce98:	str	r0, [fp, #-56]	; 0xffffffc8
   2ce9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2cea0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cea4:	mvn	r2, #0
   2cea8:	sub	r1, r2, r1
   2ceac:	cmp	r0, r1
   2ceb0:	bls	2cfcc <__assert_fail@plt+0x1bc48>
   2ceb4:	b	2cfe0 <__assert_fail@plt+0x1bc5c>
   2ceb8:	b	2cebc <__assert_fail@plt+0x1bb38>
   2cebc:	b	2cf14 <__assert_fail@plt+0x1bb90>
   2cec0:	b	2cf14 <__assert_fail@plt+0x1bb90>
   2cec4:	ldr	r0, [fp, #8]
   2cec8:	cmn	r0, #1
   2cecc:	bne	2cf14 <__assert_fail@plt+0x1bb90>
   2ced0:	b	2ced4 <__assert_fail@plt+0x1bb50>
   2ced4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ced8:	add	r0, r0, #0
   2cedc:	movw	r1, #0
   2cee0:	cmp	r1, r0
   2cee4:	blt	2cfcc <__assert_fail@plt+0x1bc48>
   2cee8:	b	2cfe0 <__assert_fail@plt+0x1bc5c>
   2ceec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cef0:	movw	r1, #0
   2cef4:	cmp	r1, r0
   2cef8:	bge	2cfe0 <__assert_fail@plt+0x1bc5c>
   2cefc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cf00:	sub	r0, r0, #1
   2cf04:	mvn	r1, #0
   2cf08:	cmp	r1, r0
   2cf0c:	blt	2cfcc <__assert_fail@plt+0x1bc48>
   2cf10:	b	2cfe0 <__assert_fail@plt+0x1bc5c>
   2cf14:	ldr	r0, [fp, #8]
   2cf18:	movw	r1, #0
   2cf1c:	sdiv	r0, r1, r0
   2cf20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cf24:	cmp	r0, r1
   2cf28:	blt	2cfcc <__assert_fail@plt+0x1bc48>
   2cf2c:	b	2cfe0 <__assert_fail@plt+0x1bc5c>
   2cf30:	ldr	r0, [fp, #8]
   2cf34:	cmp	r0, #0
   2cf38:	bne	2cf40 <__assert_fail@plt+0x1bbbc>
   2cf3c:	b	2cfe0 <__assert_fail@plt+0x1bc5c>
   2cf40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cf44:	cmp	r0, #0
   2cf48:	bge	2cfb4 <__assert_fail@plt+0x1bc30>
   2cf4c:	b	2cf50 <__assert_fail@plt+0x1bbcc>
   2cf50:	b	2cf98 <__assert_fail@plt+0x1bc14>
   2cf54:	b	2cf98 <__assert_fail@plt+0x1bc14>
   2cf58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cf5c:	cmn	r0, #1
   2cf60:	bne	2cf98 <__assert_fail@plt+0x1bc14>
   2cf64:	b	2cf68 <__assert_fail@plt+0x1bbe4>
   2cf68:	ldr	r0, [fp, #8]
   2cf6c:	add	r0, r0, #0
   2cf70:	movw	r1, #0
   2cf74:	cmp	r1, r0
   2cf78:	blt	2cfcc <__assert_fail@plt+0x1bc48>
   2cf7c:	b	2cfe0 <__assert_fail@plt+0x1bc5c>
   2cf80:	ldr	r0, [fp, #8]
   2cf84:	sub	r0, r0, #1
   2cf88:	mvn	r1, #0
   2cf8c:	cmp	r1, r0
   2cf90:	blt	2cfcc <__assert_fail@plt+0x1bc48>
   2cf94:	b	2cfe0 <__assert_fail@plt+0x1bc5c>
   2cf98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cf9c:	movw	r1, #0
   2cfa0:	sdiv	r0, r1, r0
   2cfa4:	ldr	r1, [fp, #8]
   2cfa8:	cmp	r0, r1
   2cfac:	blt	2cfcc <__assert_fail@plt+0x1bc48>
   2cfb0:	b	2cfe0 <__assert_fail@plt+0x1bc5c>
   2cfb4:	ldr	r0, [fp, #8]
   2cfb8:	mvn	r1, #0
   2cfbc:	udiv	r0, r1, r0
   2cfc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cfc4:	cmp	r0, r1
   2cfc8:	bcs	2cfe0 <__assert_fail@plt+0x1bc5c>
   2cfcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cfd0:	ldr	r1, [fp, #8]
   2cfd4:	mul	r0, r0, r1
   2cfd8:	str	r0, [fp, #-28]	; 0xffffffe4
   2cfdc:	b	2d83c <__assert_fail@plt+0x1c4b8>
   2cfe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cfe4:	ldr	r1, [fp, #8]
   2cfe8:	mul	r0, r0, r1
   2cfec:	str	r0, [fp, #-28]	; 0xffffffe4
   2cff0:	b	2d848 <__assert_fail@plt+0x1c4c4>
   2cff4:	b	2cff8 <__assert_fail@plt+0x1bc74>
   2cff8:	b	2cffc <__assert_fail@plt+0x1bc78>
   2cffc:	ldr	r0, [fp, #8]
   2d000:	cmp	r0, #0
   2d004:	bge	2d108 <__assert_fail@plt+0x1bd84>
   2d008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d00c:	cmp	r0, #0
   2d010:	bge	2d09c <__assert_fail@plt+0x1bd18>
   2d014:	b	2d018 <__assert_fail@plt+0x1bc94>
   2d018:	ldr	r0, [pc, #1048]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2d01c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d020:	ldr	r2, [fp, #8]
   2d024:	sdiv	r0, r0, r2
   2d028:	cmp	r1, r0
   2d02c:	blt	2d198 <__assert_fail@plt+0x1be14>
   2d030:	b	2d1ac <__assert_fail@plt+0x1be28>
   2d034:	b	2d038 <__assert_fail@plt+0x1bcb4>
   2d038:	ldr	r0, [pc, #1180]	; 2d4dc <__assert_fail@plt+0x1c158>
   2d03c:	ldr	r1, [fp, #8]
   2d040:	cmp	r1, r0
   2d044:	blt	2d05c <__assert_fail@plt+0x1bcd8>
   2d048:	b	2d068 <__assert_fail@plt+0x1bce4>
   2d04c:	ldr	r0, [fp, #8]
   2d050:	movw	r1, #0
   2d054:	cmp	r1, r0
   2d058:	bge	2d068 <__assert_fail@plt+0x1bce4>
   2d05c:	movw	r0, #0
   2d060:	str	r0, [fp, #-60]	; 0xffffffc4
   2d064:	b	2d080 <__assert_fail@plt+0x1bcfc>
   2d068:	ldr	r0, [pc, #968]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2d06c:	ldr	r1, [fp, #8]
   2d070:	movw	r2, #0
   2d074:	sub	r1, r2, r1
   2d078:	sdiv	r0, r0, r1
   2d07c:	str	r0, [fp, #-60]	; 0xffffffc4
   2d080:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2d084:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d088:	mvn	r2, #0
   2d08c:	sub	r1, r2, r1
   2d090:	cmp	r0, r1
   2d094:	ble	2d198 <__assert_fail@plt+0x1be14>
   2d098:	b	2d1ac <__assert_fail@plt+0x1be28>
   2d09c:	ldr	r0, [fp, #8]
   2d0a0:	cmn	r0, #1
   2d0a4:	bne	2d0ec <__assert_fail@plt+0x1bd68>
   2d0a8:	b	2d0ac <__assert_fail@plt+0x1bd28>
   2d0ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d0b0:	add	r0, r0, #-2147483648	; 0x80000000
   2d0b4:	movw	r1, #0
   2d0b8:	cmp	r1, r0
   2d0bc:	blt	2d198 <__assert_fail@plt+0x1be14>
   2d0c0:	b	2d1ac <__assert_fail@plt+0x1be28>
   2d0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d0c8:	movw	r1, #0
   2d0cc:	cmp	r1, r0
   2d0d0:	bge	2d1ac <__assert_fail@plt+0x1be28>
   2d0d4:	ldr	r0, [pc, #860]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2d0d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d0dc:	sub	r1, r1, #1
   2d0e0:	cmp	r0, r1
   2d0e4:	blt	2d198 <__assert_fail@plt+0x1be14>
   2d0e8:	b	2d1ac <__assert_fail@plt+0x1be28>
   2d0ec:	ldr	r0, [pc, #3144]	; 2dd3c <__assert_fail@plt+0x1c9b8>
   2d0f0:	ldr	r1, [fp, #8]
   2d0f4:	sdiv	r0, r0, r1
   2d0f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d0fc:	cmp	r0, r1
   2d100:	blt	2d198 <__assert_fail@plt+0x1be14>
   2d104:	b	2d1ac <__assert_fail@plt+0x1be28>
   2d108:	ldr	r0, [fp, #8]
   2d10c:	cmp	r0, #0
   2d110:	bne	2d118 <__assert_fail@plt+0x1bd94>
   2d114:	b	2d1ac <__assert_fail@plt+0x1be28>
   2d118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d11c:	cmp	r0, #0
   2d120:	bge	2d180 <__assert_fail@plt+0x1bdfc>
   2d124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d128:	cmn	r0, #1
   2d12c:	bne	2d164 <__assert_fail@plt+0x1bde0>
   2d130:	b	2d134 <__assert_fail@plt+0x1bdb0>
   2d134:	ldr	r0, [fp, #8]
   2d138:	add	r0, r0, #-2147483648	; 0x80000000
   2d13c:	movw	r1, #0
   2d140:	cmp	r1, r0
   2d144:	blt	2d198 <__assert_fail@plt+0x1be14>
   2d148:	b	2d1ac <__assert_fail@plt+0x1be28>
   2d14c:	ldr	r0, [pc, #740]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2d150:	ldr	r1, [fp, #8]
   2d154:	sub	r1, r1, #1
   2d158:	cmp	r0, r1
   2d15c:	blt	2d198 <__assert_fail@plt+0x1be14>
   2d160:	b	2d1ac <__assert_fail@plt+0x1be28>
   2d164:	ldr	r0, [pc, #3024]	; 2dd3c <__assert_fail@plt+0x1c9b8>
   2d168:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d16c:	sdiv	r0, r0, r1
   2d170:	ldr	r1, [fp, #8]
   2d174:	cmp	r0, r1
   2d178:	blt	2d198 <__assert_fail@plt+0x1be14>
   2d17c:	b	2d1ac <__assert_fail@plt+0x1be28>
   2d180:	ldr	r0, [pc, #688]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2d184:	ldr	r1, [fp, #8]
   2d188:	sdiv	r0, r0, r1
   2d18c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d190:	cmp	r0, r1
   2d194:	bge	2d1ac <__assert_fail@plt+0x1be28>
   2d198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d19c:	ldr	r1, [fp, #8]
   2d1a0:	mul	r0, r0, r1
   2d1a4:	str	r0, [fp, #-28]	; 0xffffffe4
   2d1a8:	b	2d83c <__assert_fail@plt+0x1c4b8>
   2d1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d1b0:	ldr	r1, [fp, #8]
   2d1b4:	mul	r0, r0, r1
   2d1b8:	str	r0, [fp, #-28]	; 0xffffffe4
   2d1bc:	b	2d848 <__assert_fail@plt+0x1c4c4>
   2d1c0:	ldr	r0, [fp, #8]
   2d1c4:	cmp	r0, #0
   2d1c8:	bge	2d2d8 <__assert_fail@plt+0x1bf54>
   2d1cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d1d0:	cmp	r0, #0
   2d1d4:	bge	2d260 <__assert_fail@plt+0x1bedc>
   2d1d8:	b	2d1f8 <__assert_fail@plt+0x1be74>
   2d1dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d1e0:	ldr	r1, [fp, #8]
   2d1e4:	mvn	r2, #0
   2d1e8:	udiv	r1, r2, r1
   2d1ec:	cmp	r0, r1
   2d1f0:	bcc	2d374 <__assert_fail@plt+0x1bff0>
   2d1f4:	b	2d388 <__assert_fail@plt+0x1c004>
   2d1f8:	b	2d1fc <__assert_fail@plt+0x1be78>
   2d1fc:	ldr	r0, [pc, #728]	; 2d4dc <__assert_fail@plt+0x1c158>
   2d200:	ldr	r1, [fp, #8]
   2d204:	cmp	r1, r0
   2d208:	blt	2d220 <__assert_fail@plt+0x1be9c>
   2d20c:	b	2d22c <__assert_fail@plt+0x1bea8>
   2d210:	ldr	r0, [fp, #8]
   2d214:	movw	r1, #0
   2d218:	cmp	r1, r0
   2d21c:	bge	2d22c <__assert_fail@plt+0x1bea8>
   2d220:	movw	r0, #1
   2d224:	str	r0, [fp, #-64]	; 0xffffffc0
   2d228:	b	2d244 <__assert_fail@plt+0x1bec0>
   2d22c:	ldr	r0, [fp, #8]
   2d230:	movw	r1, #0
   2d234:	sub	r0, r1, r0
   2d238:	mvn	r1, #0
   2d23c:	udiv	r0, r1, r0
   2d240:	str	r0, [fp, #-64]	; 0xffffffc0
   2d244:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2d248:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d24c:	mvn	r2, #0
   2d250:	sub	r1, r2, r1
   2d254:	cmp	r0, r1
   2d258:	bls	2d374 <__assert_fail@plt+0x1bff0>
   2d25c:	b	2d388 <__assert_fail@plt+0x1c004>
   2d260:	b	2d264 <__assert_fail@plt+0x1bee0>
   2d264:	b	2d2bc <__assert_fail@plt+0x1bf38>
   2d268:	b	2d2bc <__assert_fail@plt+0x1bf38>
   2d26c:	ldr	r0, [fp, #8]
   2d270:	cmn	r0, #1
   2d274:	bne	2d2bc <__assert_fail@plt+0x1bf38>
   2d278:	b	2d27c <__assert_fail@plt+0x1bef8>
   2d27c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d280:	add	r0, r0, #0
   2d284:	movw	r1, #0
   2d288:	cmp	r1, r0
   2d28c:	blt	2d374 <__assert_fail@plt+0x1bff0>
   2d290:	b	2d388 <__assert_fail@plt+0x1c004>
   2d294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d298:	movw	r1, #0
   2d29c:	cmp	r1, r0
   2d2a0:	bge	2d388 <__assert_fail@plt+0x1c004>
   2d2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d2a8:	sub	r0, r0, #1
   2d2ac:	mvn	r1, #0
   2d2b0:	cmp	r1, r0
   2d2b4:	blt	2d374 <__assert_fail@plt+0x1bff0>
   2d2b8:	b	2d388 <__assert_fail@plt+0x1c004>
   2d2bc:	ldr	r0, [fp, #8]
   2d2c0:	movw	r1, #0
   2d2c4:	sdiv	r0, r1, r0
   2d2c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d2cc:	cmp	r0, r1
   2d2d0:	blt	2d374 <__assert_fail@plt+0x1bff0>
   2d2d4:	b	2d388 <__assert_fail@plt+0x1c004>
   2d2d8:	ldr	r0, [fp, #8]
   2d2dc:	cmp	r0, #0
   2d2e0:	bne	2d2e8 <__assert_fail@plt+0x1bf64>
   2d2e4:	b	2d388 <__assert_fail@plt+0x1c004>
   2d2e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d2ec:	cmp	r0, #0
   2d2f0:	bge	2d35c <__assert_fail@plt+0x1bfd8>
   2d2f4:	b	2d2f8 <__assert_fail@plt+0x1bf74>
   2d2f8:	b	2d340 <__assert_fail@plt+0x1bfbc>
   2d2fc:	b	2d340 <__assert_fail@plt+0x1bfbc>
   2d300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d304:	cmn	r0, #1
   2d308:	bne	2d340 <__assert_fail@plt+0x1bfbc>
   2d30c:	b	2d310 <__assert_fail@plt+0x1bf8c>
   2d310:	ldr	r0, [fp, #8]
   2d314:	add	r0, r0, #0
   2d318:	movw	r1, #0
   2d31c:	cmp	r1, r0
   2d320:	blt	2d374 <__assert_fail@plt+0x1bff0>
   2d324:	b	2d388 <__assert_fail@plt+0x1c004>
   2d328:	ldr	r0, [fp, #8]
   2d32c:	sub	r0, r0, #1
   2d330:	mvn	r1, #0
   2d334:	cmp	r1, r0
   2d338:	blt	2d374 <__assert_fail@plt+0x1bff0>
   2d33c:	b	2d388 <__assert_fail@plt+0x1c004>
   2d340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d344:	movw	r1, #0
   2d348:	sdiv	r0, r1, r0
   2d34c:	ldr	r1, [fp, #8]
   2d350:	cmp	r0, r1
   2d354:	blt	2d374 <__assert_fail@plt+0x1bff0>
   2d358:	b	2d388 <__assert_fail@plt+0x1c004>
   2d35c:	ldr	r0, [fp, #8]
   2d360:	mvn	r1, #0
   2d364:	udiv	r0, r1, r0
   2d368:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d36c:	cmp	r0, r1
   2d370:	bcs	2d388 <__assert_fail@plt+0x1c004>
   2d374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d378:	ldr	r1, [fp, #8]
   2d37c:	mul	r0, r0, r1
   2d380:	str	r0, [fp, #-28]	; 0xffffffe4
   2d384:	b	2d83c <__assert_fail@plt+0x1c4b8>
   2d388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d38c:	ldr	r1, [fp, #8]
   2d390:	mul	r0, r0, r1
   2d394:	str	r0, [fp, #-28]	; 0xffffffe4
   2d398:	b	2d848 <__assert_fail@plt+0x1c4c4>
   2d39c:	b	2d3a0 <__assert_fail@plt+0x1c01c>
   2d3a0:	ldr	r0, [fp, #8]
   2d3a4:	cmp	r0, #0
   2d3a8:	bge	2d518 <__assert_fail@plt+0x1c194>
   2d3ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d3b0:	cmp	r0, #0
   2d3b4:	bge	2d490 <__assert_fail@plt+0x1c10c>
   2d3b8:	b	2d3bc <__assert_fail@plt+0x1c038>
   2d3bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d3c0:	ldr	r1, [fp, #8]
   2d3c4:	asr	r3, r1, #31
   2d3c8:	mvn	r2, #0
   2d3cc:	mvn	ip, #-2147483648	; 0x80000000
   2d3d0:	str	r0, [fp, #-68]	; 0xffffffbc
   2d3d4:	mov	r0, r2
   2d3d8:	str	r1, [fp, #-72]	; 0xffffffb8
   2d3dc:	mov	r1, ip
   2d3e0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2d3e4:	bl	33720 <__assert_fail@plt+0x2239c>
   2d3e8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2d3ec:	subs	r0, r2, r0
   2d3f0:	rscs	r1, r1, r2, asr #31
   2d3f4:	blt	2d5e0 <__assert_fail@plt+0x1c25c>
   2d3f8:	b	2d5f4 <__assert_fail@plt+0x1c270>
   2d3fc:	b	2d400 <__assert_fail@plt+0x1c07c>
   2d400:	ldr	r0, [pc, #212]	; 2d4dc <__assert_fail@plt+0x1c158>
   2d404:	ldr	r1, [fp, #8]
   2d408:	cmp	r1, r0
   2d40c:	blt	2d424 <__assert_fail@plt+0x1c0a0>
   2d410:	b	2d43c <__assert_fail@plt+0x1c0b8>
   2d414:	ldr	r0, [fp, #8]
   2d418:	movw	r1, #0
   2d41c:	cmp	r1, r0
   2d420:	bge	2d43c <__assert_fail@plt+0x1c0b8>
   2d424:	mov	r0, #0
   2d428:	mvn	r1, #0
   2d42c:	str	r1, [fp, #-76]	; 0xffffffb4
   2d430:	str	r0, [fp, #-80]	; 0xffffffb0
   2d434:	b	2d470 <__assert_fail@plt+0x1c0ec>
   2d438:	svcvc	0x00ffffff
   2d43c:	ldr	r0, [fp, #8]
   2d440:	rsb	r0, r0, #0
   2d444:	asr	r3, r0, #31
   2d448:	mvn	r1, #0
   2d44c:	mvn	r2, #-2147483648	; 0x80000000
   2d450:	str	r0, [fp, #-84]	; 0xffffffac
   2d454:	mov	r0, r1
   2d458:	mov	r1, r2
   2d45c:	ldr	r2, [fp, #-84]	; 0xffffffac
   2d460:	bl	33720 <__assert_fail@plt+0x2239c>
   2d464:	str	r0, [fp, #-76]	; 0xffffffb4
   2d468:	str	r1, [fp, #-80]	; 0xffffffb0
   2d46c:	b	2d470 <__assert_fail@plt+0x1c0ec>
   2d470:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2d474:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2d478:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d47c:	mvn	r2, r2
   2d480:	subs	r1, r2, r1
   2d484:	rscs	r0, r0, r2, asr #31
   2d488:	bge	2d5e0 <__assert_fail@plt+0x1c25c>
   2d48c:	b	2d5f4 <__assert_fail@plt+0x1c270>
   2d490:	ldr	r0, [fp, #8]
   2d494:	cmn	r0, #1
   2d498:	bne	2d4e0 <__assert_fail@plt+0x1c15c>
   2d49c:	b	2d4a0 <__assert_fail@plt+0x1c11c>
   2d4a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d4a4:	mov	r1, #-2147483648	; 0x80000000
   2d4a8:	add	r1, r1, r0, asr #31
   2d4ac:	rsbs	r0, r0, #0
   2d4b0:	rscs	r1, r1, #0
   2d4b4:	blt	2d5e0 <__assert_fail@plt+0x1c25c>
   2d4b8:	b	2d5f4 <__assert_fail@plt+0x1c270>
   2d4bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d4c0:	movw	r1, #0
   2d4c4:	cmp	r1, r0
   2d4c8:	bge	2d5f4 <__assert_fail@plt+0x1c270>
   2d4cc:	mov	r0, #0
   2d4d0:	cmp	r0, #0
   2d4d4:	bne	2d5e0 <__assert_fail@plt+0x1c25c>
   2d4d8:	b	2d5f4 <__assert_fail@plt+0x1c270>
   2d4dc:	andhi	r0, r0, r1
   2d4e0:	ldr	r0, [fp, #8]
   2d4e4:	asr	r3, r0, #31
   2d4e8:	mov	r1, #0
   2d4ec:	mov	r2, #-2147483648	; 0x80000000
   2d4f0:	str	r0, [fp, #-88]	; 0xffffffa8
   2d4f4:	mov	r0, r1
   2d4f8:	mov	r1, r2
   2d4fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2d500:	bl	33720 <__assert_fail@plt+0x2239c>
   2d504:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d508:	subs	r0, r0, r2
   2d50c:	sbcs	r1, r1, r2, asr #31
   2d510:	blt	2d5e0 <__assert_fail@plt+0x1c25c>
   2d514:	b	2d5f4 <__assert_fail@plt+0x1c270>
   2d518:	ldr	r0, [fp, #8]
   2d51c:	cmp	r0, #0
   2d520:	bne	2d528 <__assert_fail@plt+0x1c1a4>
   2d524:	b	2d5f4 <__assert_fail@plt+0x1c270>
   2d528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d52c:	cmp	r0, #0
   2d530:	bge	2d5a8 <__assert_fail@plt+0x1c224>
   2d534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d538:	cmn	r0, #1
   2d53c:	bne	2d570 <__assert_fail@plt+0x1c1ec>
   2d540:	b	2d544 <__assert_fail@plt+0x1c1c0>
   2d544:	ldr	r0, [fp, #8]
   2d548:	mov	r1, #-2147483648	; 0x80000000
   2d54c:	add	r1, r1, r0, asr #31
   2d550:	rsbs	r0, r0, #0
   2d554:	rscs	r1, r1, #0
   2d558:	blt	2d5e0 <__assert_fail@plt+0x1c25c>
   2d55c:	b	2d5f4 <__assert_fail@plt+0x1c270>
   2d560:	mov	r0, #0
   2d564:	cmp	r0, #0
   2d568:	bne	2d5e0 <__assert_fail@plt+0x1c25c>
   2d56c:	b	2d5f4 <__assert_fail@plt+0x1c270>
   2d570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d574:	asr	r3, r0, #31
   2d578:	mov	r1, #0
   2d57c:	mov	r2, #-2147483648	; 0x80000000
   2d580:	str	r0, [fp, #-92]	; 0xffffffa4
   2d584:	mov	r0, r1
   2d588:	mov	r1, r2
   2d58c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2d590:	bl	33720 <__assert_fail@plt+0x2239c>
   2d594:	ldr	r2, [fp, #8]
   2d598:	subs	r0, r0, r2
   2d59c:	sbcs	r1, r1, r2, asr #31
   2d5a0:	blt	2d5e0 <__assert_fail@plt+0x1c25c>
   2d5a4:	b	2d5f4 <__assert_fail@plt+0x1c270>
   2d5a8:	ldr	r0, [fp, #8]
   2d5ac:	asr	r3, r0, #31
   2d5b0:	mvn	r1, #0
   2d5b4:	mvn	r2, #-2147483648	; 0x80000000
   2d5b8:	str	r0, [fp, #-96]	; 0xffffffa0
   2d5bc:	mov	r0, r1
   2d5c0:	mov	r1, r2
   2d5c4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2d5c8:	bl	33720 <__assert_fail@plt+0x2239c>
   2d5cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d5d0:	subs	r0, r0, r2
   2d5d4:	sbcs	r1, r1, r2, asr #31
   2d5d8:	bge	2d5f4 <__assert_fail@plt+0x1c270>
   2d5dc:	b	2d5e0 <__assert_fail@plt+0x1c25c>
   2d5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d5e4:	ldr	r1, [fp, #8]
   2d5e8:	mul	r0, r0, r1
   2d5ec:	str	r0, [fp, #-28]	; 0xffffffe4
   2d5f0:	b	2d83c <__assert_fail@plt+0x1c4b8>
   2d5f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d5f8:	ldr	r1, [fp, #8]
   2d5fc:	mul	r0, r0, r1
   2d600:	str	r0, [fp, #-28]	; 0xffffffe4
   2d604:	b	2d848 <__assert_fail@plt+0x1c4c4>
   2d608:	ldr	r0, [fp, #8]
   2d60c:	cmp	r0, #0
   2d610:	bge	2d760 <__assert_fail@plt+0x1c3dc>
   2d614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d618:	cmp	r0, #0
   2d61c:	bge	2d6e8 <__assert_fail@plt+0x1c364>
   2d620:	b	2d660 <__assert_fail@plt+0x1c2dc>
   2d624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d628:	ldr	r1, [fp, #8]
   2d62c:	asr	r3, r1, #31
   2d630:	mvn	r2, #0
   2d634:	str	r0, [fp, #-100]	; 0xffffff9c
   2d638:	mov	r0, r2
   2d63c:	str	r1, [fp, #-104]	; 0xffffff98
   2d640:	mov	r1, r2
   2d644:	ldr	r2, [fp, #-104]	; 0xffffff98
   2d648:	bl	337f4 <__assert_fail@plt+0x22470>
   2d64c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2d650:	subs	r0, r2, r0
   2d654:	rscs	r1, r1, r2, asr #31
   2d658:	bcc	2d814 <__assert_fail@plt+0x1c490>
   2d65c:	b	2d828 <__assert_fail@plt+0x1c4a4>
   2d660:	b	2d664 <__assert_fail@plt+0x1c2e0>
   2d664:	ldr	r0, [pc, #-400]	; 2d4dc <__assert_fail@plt+0x1c158>
   2d668:	ldr	r1, [fp, #8]
   2d66c:	cmp	r1, r0
   2d670:	blt	2d688 <__assert_fail@plt+0x1c304>
   2d674:	b	2d69c <__assert_fail@plt+0x1c318>
   2d678:	ldr	r0, [fp, #8]
   2d67c:	movw	r1, #0
   2d680:	cmp	r1, r0
   2d684:	bge	2d69c <__assert_fail@plt+0x1c318>
   2d688:	mov	r0, #1
   2d68c:	mvn	r1, #0
   2d690:	str	r1, [sp, #108]	; 0x6c
   2d694:	str	r0, [sp, #104]	; 0x68
   2d698:	b	2d6c8 <__assert_fail@plt+0x1c344>
   2d69c:	ldr	r0, [fp, #8]
   2d6a0:	rsb	r0, r0, #0
   2d6a4:	asr	r3, r0, #31
   2d6a8:	mvn	r1, #0
   2d6ac:	str	r0, [sp, #100]	; 0x64
   2d6b0:	mov	r0, r1
   2d6b4:	ldr	r2, [sp, #100]	; 0x64
   2d6b8:	bl	337f4 <__assert_fail@plt+0x22470>
   2d6bc:	str	r0, [sp, #108]	; 0x6c
   2d6c0:	str	r1, [sp, #104]	; 0x68
   2d6c4:	b	2d6c8 <__assert_fail@plt+0x1c344>
   2d6c8:	ldr	r0, [sp, #104]	; 0x68
   2d6cc:	ldr	r1, [sp, #108]	; 0x6c
   2d6d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d6d4:	mvn	r2, r2
   2d6d8:	subs	r1, r2, r1
   2d6dc:	rscs	r0, r0, r2, asr #31
   2d6e0:	bcs	2d814 <__assert_fail@plt+0x1c490>
   2d6e4:	b	2d828 <__assert_fail@plt+0x1c4a4>
   2d6e8:	b	2d6ec <__assert_fail@plt+0x1c368>
   2d6ec:	b	2d744 <__assert_fail@plt+0x1c3c0>
   2d6f0:	b	2d744 <__assert_fail@plt+0x1c3c0>
   2d6f4:	ldr	r0, [fp, #8]
   2d6f8:	cmn	r0, #1
   2d6fc:	bne	2d744 <__assert_fail@plt+0x1c3c0>
   2d700:	b	2d704 <__assert_fail@plt+0x1c380>
   2d704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d708:	add	r0, r0, #0
   2d70c:	movw	r1, #0
   2d710:	cmp	r1, r0
   2d714:	blt	2d814 <__assert_fail@plt+0x1c490>
   2d718:	b	2d828 <__assert_fail@plt+0x1c4a4>
   2d71c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d720:	movw	r1, #0
   2d724:	cmp	r1, r0
   2d728:	bge	2d828 <__assert_fail@plt+0x1c4a4>
   2d72c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d730:	sub	r0, r0, #1
   2d734:	mvn	r1, #0
   2d738:	cmp	r1, r0
   2d73c:	blt	2d814 <__assert_fail@plt+0x1c490>
   2d740:	b	2d828 <__assert_fail@plt+0x1c4a4>
   2d744:	ldr	r0, [fp, #8]
   2d748:	movw	r1, #0
   2d74c:	sdiv	r0, r1, r0
   2d750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d754:	cmp	r0, r1
   2d758:	blt	2d814 <__assert_fail@plt+0x1c490>
   2d75c:	b	2d828 <__assert_fail@plt+0x1c4a4>
   2d760:	ldr	r0, [fp, #8]
   2d764:	cmp	r0, #0
   2d768:	bne	2d770 <__assert_fail@plt+0x1c3ec>
   2d76c:	b	2d828 <__assert_fail@plt+0x1c4a4>
   2d770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d774:	cmp	r0, #0
   2d778:	bge	2d7e4 <__assert_fail@plt+0x1c460>
   2d77c:	b	2d780 <__assert_fail@plt+0x1c3fc>
   2d780:	b	2d7c8 <__assert_fail@plt+0x1c444>
   2d784:	b	2d7c8 <__assert_fail@plt+0x1c444>
   2d788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d78c:	cmn	r0, #1
   2d790:	bne	2d7c8 <__assert_fail@plt+0x1c444>
   2d794:	b	2d798 <__assert_fail@plt+0x1c414>
   2d798:	ldr	r0, [fp, #8]
   2d79c:	add	r0, r0, #0
   2d7a0:	movw	r1, #0
   2d7a4:	cmp	r1, r0
   2d7a8:	blt	2d814 <__assert_fail@plt+0x1c490>
   2d7ac:	b	2d828 <__assert_fail@plt+0x1c4a4>
   2d7b0:	ldr	r0, [fp, #8]
   2d7b4:	sub	r0, r0, #1
   2d7b8:	mvn	r1, #0
   2d7bc:	cmp	r1, r0
   2d7c0:	blt	2d814 <__assert_fail@plt+0x1c490>
   2d7c4:	b	2d828 <__assert_fail@plt+0x1c4a4>
   2d7c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d7cc:	movw	r1, #0
   2d7d0:	sdiv	r0, r1, r0
   2d7d4:	ldr	r1, [fp, #8]
   2d7d8:	cmp	r0, r1
   2d7dc:	blt	2d814 <__assert_fail@plt+0x1c490>
   2d7e0:	b	2d828 <__assert_fail@plt+0x1c4a4>
   2d7e4:	ldr	r0, [fp, #8]
   2d7e8:	asr	r3, r0, #31
   2d7ec:	mvn	r1, #0
   2d7f0:	str	r0, [sp, #96]	; 0x60
   2d7f4:	mov	r0, r1
   2d7f8:	ldr	r2, [sp, #96]	; 0x60
   2d7fc:	bl	337f4 <__assert_fail@plt+0x22470>
   2d800:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d804:	subs	r0, r0, r2
   2d808:	sbcs	r1, r1, r2, asr #31
   2d80c:	bcs	2d828 <__assert_fail@plt+0x1c4a4>
   2d810:	b	2d814 <__assert_fail@plt+0x1c490>
   2d814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d818:	ldr	r1, [fp, #8]
   2d81c:	mul	r0, r0, r1
   2d820:	str	r0, [fp, #-28]	; 0xffffffe4
   2d824:	b	2d83c <__assert_fail@plt+0x1c4b8>
   2d828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d82c:	ldr	r1, [fp, #8]
   2d830:	mul	r0, r0, r1
   2d834:	str	r0, [fp, #-28]	; 0xffffffe4
   2d838:	b	2d848 <__assert_fail@plt+0x1c4c4>
   2d83c:	ldr	r0, [pc, #-1036]	; 2d438 <__assert_fail@plt+0x1c0b4>
   2d840:	str	r0, [sp, #92]	; 0x5c
   2d844:	b	2d868 <__assert_fail@plt+0x1c4e4>
   2d848:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d84c:	cmp	r0, #64	; 0x40
   2d850:	movw	r0, #0
   2d854:	movlt	r0, #1
   2d858:	tst	r0, #1
   2d85c:	movw	r0, #64	; 0x40
   2d860:	moveq	r0, #0
   2d864:	str	r0, [sp, #92]	; 0x5c
   2d868:	ldr	r0, [sp, #92]	; 0x5c
   2d86c:	str	r0, [fp, #-32]	; 0xffffffe0
   2d870:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d874:	cmp	r0, #0
   2d878:	beq	2d8a8 <__assert_fail@plt+0x1c524>
   2d87c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d880:	ldr	r1, [fp, #8]
   2d884:	sdiv	r0, r0, r1
   2d888:	str	r0, [fp, #-24]	; 0xffffffe8
   2d88c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d890:	mov	r1, r0
   2d894:	ldr	r2, [fp, #8]
   2d898:	sdiv	r3, r0, r2
   2d89c:	mls	r0, r3, r2, r0
   2d8a0:	sub	r0, r1, r0
   2d8a4:	str	r0, [fp, #-28]	; 0xffffffe4
   2d8a8:	ldr	r0, [fp, #-4]
   2d8ac:	movw	r1, #0
   2d8b0:	cmp	r0, r1
   2d8b4:	bne	2d8c4 <__assert_fail@plt+0x1c540>
   2d8b8:	ldr	r0, [fp, #-8]
   2d8bc:	movw	r1, #0
   2d8c0:	str	r1, [r0]
   2d8c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d8c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d8cc:	sub	r0, r0, r1
   2d8d0:	ldr	r1, [fp, #-12]
   2d8d4:	cmp	r0, r1
   2d8d8:	bge	2ecc4 <__assert_fail@plt+0x1d940>
   2d8dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d8e0:	ldr	r1, [fp, #-12]
   2d8e4:	add	r1, r0, r1
   2d8e8:	mov	r2, #1
   2d8ec:	cmp	r1, r0
   2d8f0:	movwvc	r2, #0
   2d8f4:	str	r1, [fp, #-24]	; 0xffffffe8
   2d8f8:	tst	r2, #1
   2d8fc:	bne	2ecc0 <__assert_fail@plt+0x1d93c>
   2d900:	ldr	r0, [fp, #-16]
   2d904:	movw	r1, #0
   2d908:	cmp	r1, r0
   2d90c:	bgt	2d920 <__assert_fail@plt+0x1c59c>
   2d910:	ldr	r0, [fp, #-16]
   2d914:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d918:	cmp	r0, r1
   2d91c:	blt	2ecc0 <__assert_fail@plt+0x1d93c>
   2d920:	b	2dcfc <__assert_fail@plt+0x1c978>
   2d924:			; <UNDEFINED> instruction: 0xffff8000
   2d928:	b	2d92c <__assert_fail@plt+0x1c5a8>
   2d92c:	ldr	r0, [fp, #8]
   2d930:	cmp	r0, #0
   2d934:	bge	2da48 <__assert_fail@plt+0x1c6c4>
   2d938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d93c:	cmp	r0, #0
   2d940:	bge	2d9cc <__assert_fail@plt+0x1c648>
   2d944:	b	2d948 <__assert_fail@plt+0x1c5c4>
   2d948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d94c:	ldr	r1, [fp, #8]
   2d950:	movw	r2, #127	; 0x7f
   2d954:	sdiv	r1, r2, r1
   2d958:	cmp	r0, r1
   2d95c:	blt	2dae8 <__assert_fail@plt+0x1c764>
   2d960:	b	2db00 <__assert_fail@plt+0x1c77c>
   2d964:	b	2d968 <__assert_fail@plt+0x1c5e4>
   2d968:	ldr	r0, [pc, #-1172]	; 2d4dc <__assert_fail@plt+0x1c158>
   2d96c:	ldr	r1, [fp, #8]
   2d970:	cmp	r1, r0
   2d974:	blt	2d98c <__assert_fail@plt+0x1c608>
   2d978:	b	2d998 <__assert_fail@plt+0x1c614>
   2d97c:	ldr	r0, [fp, #8]
   2d980:	movw	r1, #0
   2d984:	cmp	r1, r0
   2d988:	bge	2d998 <__assert_fail@plt+0x1c614>
   2d98c:	movw	r0, #0
   2d990:	str	r0, [sp, #88]	; 0x58
   2d994:	b	2d9b0 <__assert_fail@plt+0x1c62c>
   2d998:	ldr	r0, [fp, #8]
   2d99c:	movw	r1, #0
   2d9a0:	sub	r0, r1, r0
   2d9a4:	movw	r1, #127	; 0x7f
   2d9a8:	sdiv	r0, r1, r0
   2d9ac:	str	r0, [sp, #88]	; 0x58
   2d9b0:	ldr	r0, [sp, #88]	; 0x58
   2d9b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d9b8:	mvn	r2, #0
   2d9bc:	sub	r1, r2, r1
   2d9c0:	cmp	r0, r1
   2d9c4:	ble	2dae8 <__assert_fail@plt+0x1c764>
   2d9c8:	b	2db00 <__assert_fail@plt+0x1c77c>
   2d9cc:	b	2d9d0 <__assert_fail@plt+0x1c64c>
   2d9d0:	b	2da2c <__assert_fail@plt+0x1c6a8>
   2d9d4:	b	2da2c <__assert_fail@plt+0x1c6a8>
   2d9d8:	ldr	r0, [fp, #8]
   2d9dc:	cmn	r0, #1
   2d9e0:	bne	2da2c <__assert_fail@plt+0x1c6a8>
   2d9e4:	b	2d9e8 <__assert_fail@plt+0x1c664>
   2d9e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d9ec:	mvn	r1, #127	; 0x7f
   2d9f0:	add	r0, r0, r1
   2d9f4:	movw	r1, #0
   2d9f8:	cmp	r1, r0
   2d9fc:	blt	2dae8 <__assert_fail@plt+0x1c764>
   2da00:	b	2db00 <__assert_fail@plt+0x1c77c>
   2da04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da08:	movw	r1, #0
   2da0c:	cmp	r1, r0
   2da10:	bge	2db00 <__assert_fail@plt+0x1c77c>
   2da14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da18:	sub	r0, r0, #1
   2da1c:	movw	r1, #127	; 0x7f
   2da20:	cmp	r1, r0
   2da24:	blt	2dae8 <__assert_fail@plt+0x1c764>
   2da28:	b	2db00 <__assert_fail@plt+0x1c77c>
   2da2c:	ldr	r0, [fp, #8]
   2da30:	mvn	r1, #127	; 0x7f
   2da34:	sdiv	r0, r1, r0
   2da38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2da3c:	cmp	r0, r1
   2da40:	blt	2dae8 <__assert_fail@plt+0x1c764>
   2da44:	b	2db00 <__assert_fail@plt+0x1c77c>
   2da48:	ldr	r0, [fp, #8]
   2da4c:	cmp	r0, #0
   2da50:	bne	2da58 <__assert_fail@plt+0x1c6d4>
   2da54:	b	2db00 <__assert_fail@plt+0x1c77c>
   2da58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da5c:	cmp	r0, #0
   2da60:	bge	2dad0 <__assert_fail@plt+0x1c74c>
   2da64:	b	2da68 <__assert_fail@plt+0x1c6e4>
   2da68:	b	2dab4 <__assert_fail@plt+0x1c730>
   2da6c:	b	2dab4 <__assert_fail@plt+0x1c730>
   2da70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da74:	cmn	r0, #1
   2da78:	bne	2dab4 <__assert_fail@plt+0x1c730>
   2da7c:	b	2da80 <__assert_fail@plt+0x1c6fc>
   2da80:	ldr	r0, [fp, #8]
   2da84:	mvn	r1, #127	; 0x7f
   2da88:	add	r0, r0, r1
   2da8c:	movw	r1, #0
   2da90:	cmp	r1, r0
   2da94:	blt	2dae8 <__assert_fail@plt+0x1c764>
   2da98:	b	2db00 <__assert_fail@plt+0x1c77c>
   2da9c:	ldr	r0, [fp, #8]
   2daa0:	sub	r0, r0, #1
   2daa4:	movw	r1, #127	; 0x7f
   2daa8:	cmp	r1, r0
   2daac:	blt	2dae8 <__assert_fail@plt+0x1c764>
   2dab0:	b	2db00 <__assert_fail@plt+0x1c77c>
   2dab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dab8:	mvn	r1, #127	; 0x7f
   2dabc:	sdiv	r0, r1, r0
   2dac0:	ldr	r1, [fp, #8]
   2dac4:	cmp	r0, r1
   2dac8:	blt	2dae8 <__assert_fail@plt+0x1c764>
   2dacc:	b	2db00 <__assert_fail@plt+0x1c77c>
   2dad0:	ldr	r0, [fp, #8]
   2dad4:	movw	r1, #127	; 0x7f
   2dad8:	sdiv	r0, r1, r0
   2dadc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dae0:	cmp	r0, r1
   2dae4:	bge	2db00 <__assert_fail@plt+0x1c77c>
   2dae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2daec:	ldr	r1, [fp, #8]
   2daf0:	mul	r0, r0, r1
   2daf4:	sxtb	r0, r0
   2daf8:	str	r0, [fp, #-28]	; 0xffffffe4
   2dafc:	b	2ecc0 <__assert_fail@plt+0x1d93c>
   2db00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2db04:	ldr	r1, [fp, #8]
   2db08:	mul	r0, r0, r1
   2db0c:	sxtb	r0, r0
   2db10:	str	r0, [fp, #-28]	; 0xffffffe4
   2db14:	b	2ecc4 <__assert_fail@plt+0x1d940>
   2db18:	ldr	r0, [fp, #8]
   2db1c:	cmp	r0, #0
   2db20:	bge	2dc30 <__assert_fail@plt+0x1c8ac>
   2db24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2db28:	cmp	r0, #0
   2db2c:	bge	2dbb8 <__assert_fail@plt+0x1c834>
   2db30:	b	2db34 <__assert_fail@plt+0x1c7b0>
   2db34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2db38:	ldr	r1, [fp, #8]
   2db3c:	movw	r2, #255	; 0xff
   2db40:	sdiv	r1, r2, r1
   2db44:	cmp	r0, r1
   2db48:	blt	2dccc <__assert_fail@plt+0x1c948>
   2db4c:	b	2dce4 <__assert_fail@plt+0x1c960>
   2db50:	b	2db54 <__assert_fail@plt+0x1c7d0>
   2db54:	ldr	r0, [pc, #-1664]	; 2d4dc <__assert_fail@plt+0x1c158>
   2db58:	ldr	r1, [fp, #8]
   2db5c:	cmp	r1, r0
   2db60:	blt	2db78 <__assert_fail@plt+0x1c7f4>
   2db64:	b	2db84 <__assert_fail@plt+0x1c800>
   2db68:	ldr	r0, [fp, #8]
   2db6c:	movw	r1, #0
   2db70:	cmp	r1, r0
   2db74:	bge	2db84 <__assert_fail@plt+0x1c800>
   2db78:	movw	r0, #0
   2db7c:	str	r0, [sp, #84]	; 0x54
   2db80:	b	2db9c <__assert_fail@plt+0x1c818>
   2db84:	ldr	r0, [fp, #8]
   2db88:	movw	r1, #0
   2db8c:	sub	r0, r1, r0
   2db90:	movw	r1, #255	; 0xff
   2db94:	sdiv	r0, r1, r0
   2db98:	str	r0, [sp, #84]	; 0x54
   2db9c:	ldr	r0, [sp, #84]	; 0x54
   2dba0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dba4:	mvn	r2, #0
   2dba8:	sub	r1, r2, r1
   2dbac:	cmp	r0, r1
   2dbb0:	ble	2dccc <__assert_fail@plt+0x1c948>
   2dbb4:	b	2dce4 <__assert_fail@plt+0x1c960>
   2dbb8:	b	2dbbc <__assert_fail@plt+0x1c838>
   2dbbc:	b	2dc14 <__assert_fail@plt+0x1c890>
   2dbc0:	b	2dc14 <__assert_fail@plt+0x1c890>
   2dbc4:	ldr	r0, [fp, #8]
   2dbc8:	cmn	r0, #1
   2dbcc:	bne	2dc14 <__assert_fail@plt+0x1c890>
   2dbd0:	b	2dbd4 <__assert_fail@plt+0x1c850>
   2dbd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dbd8:	add	r0, r0, #0
   2dbdc:	movw	r1, #0
   2dbe0:	cmp	r1, r0
   2dbe4:	blt	2dccc <__assert_fail@plt+0x1c948>
   2dbe8:	b	2dce4 <__assert_fail@plt+0x1c960>
   2dbec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dbf0:	movw	r1, #0
   2dbf4:	cmp	r1, r0
   2dbf8:	bge	2dce4 <__assert_fail@plt+0x1c960>
   2dbfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dc00:	sub	r0, r0, #1
   2dc04:	mvn	r1, #0
   2dc08:	cmp	r1, r0
   2dc0c:	blt	2dccc <__assert_fail@plt+0x1c948>
   2dc10:	b	2dce4 <__assert_fail@plt+0x1c960>
   2dc14:	ldr	r0, [fp, #8]
   2dc18:	movw	r1, #0
   2dc1c:	sdiv	r0, r1, r0
   2dc20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dc24:	cmp	r0, r1
   2dc28:	blt	2dccc <__assert_fail@plt+0x1c948>
   2dc2c:	b	2dce4 <__assert_fail@plt+0x1c960>
   2dc30:	ldr	r0, [fp, #8]
   2dc34:	cmp	r0, #0
   2dc38:	bne	2dc40 <__assert_fail@plt+0x1c8bc>
   2dc3c:	b	2dce4 <__assert_fail@plt+0x1c960>
   2dc40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dc44:	cmp	r0, #0
   2dc48:	bge	2dcb4 <__assert_fail@plt+0x1c930>
   2dc4c:	b	2dc50 <__assert_fail@plt+0x1c8cc>
   2dc50:	b	2dc98 <__assert_fail@plt+0x1c914>
   2dc54:	b	2dc98 <__assert_fail@plt+0x1c914>
   2dc58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dc5c:	cmn	r0, #1
   2dc60:	bne	2dc98 <__assert_fail@plt+0x1c914>
   2dc64:	b	2dc68 <__assert_fail@plt+0x1c8e4>
   2dc68:	ldr	r0, [fp, #8]
   2dc6c:	add	r0, r0, #0
   2dc70:	movw	r1, #0
   2dc74:	cmp	r1, r0
   2dc78:	blt	2dccc <__assert_fail@plt+0x1c948>
   2dc7c:	b	2dce4 <__assert_fail@plt+0x1c960>
   2dc80:	ldr	r0, [fp, #8]
   2dc84:	sub	r0, r0, #1
   2dc88:	mvn	r1, #0
   2dc8c:	cmp	r1, r0
   2dc90:	blt	2dccc <__assert_fail@plt+0x1c948>
   2dc94:	b	2dce4 <__assert_fail@plt+0x1c960>
   2dc98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dc9c:	movw	r1, #0
   2dca0:	sdiv	r0, r1, r0
   2dca4:	ldr	r1, [fp, #8]
   2dca8:	cmp	r0, r1
   2dcac:	blt	2dccc <__assert_fail@plt+0x1c948>
   2dcb0:	b	2dce4 <__assert_fail@plt+0x1c960>
   2dcb4:	ldr	r0, [fp, #8]
   2dcb8:	movw	r1, #255	; 0xff
   2dcbc:	sdiv	r0, r1, r0
   2dcc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dcc4:	cmp	r0, r1
   2dcc8:	bge	2dce4 <__assert_fail@plt+0x1c960>
   2dccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dcd0:	ldr	r1, [fp, #8]
   2dcd4:	mul	r0, r0, r1
   2dcd8:	and	r0, r0, #255	; 0xff
   2dcdc:	str	r0, [fp, #-28]	; 0xffffffe4
   2dce0:	b	2ecc0 <__assert_fail@plt+0x1d93c>
   2dce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dce8:	ldr	r1, [fp, #8]
   2dcec:	mul	r0, r0, r1
   2dcf0:	and	r0, r0, #255	; 0xff
   2dcf4:	str	r0, [fp, #-28]	; 0xffffffe4
   2dcf8:	b	2ecc4 <__assert_fail@plt+0x1d940>
   2dcfc:	b	2e0d8 <__assert_fail@plt+0x1cd54>
   2dd00:	b	2dd04 <__assert_fail@plt+0x1c980>
   2dd04:	ldr	r0, [fp, #8]
   2dd08:	cmp	r0, #0
   2dd0c:	bge	2de24 <__assert_fail@plt+0x1caa0>
   2dd10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dd14:	cmp	r0, #0
   2dd18:	bge	2dda8 <__assert_fail@plt+0x1ca24>
   2dd1c:	b	2dd20 <__assert_fail@plt+0x1c99c>
   2dd20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dd24:	ldr	r1, [fp, #8]
   2dd28:	movw	r2, #32767	; 0x7fff
   2dd2c:	sdiv	r1, r2, r1
   2dd30:	cmp	r0, r1
   2dd34:	blt	2dec4 <__assert_fail@plt+0x1cb40>
   2dd38:	b	2dedc <__assert_fail@plt+0x1cb58>
   2dd3c:	andhi	r0, r0, r0
   2dd40:	b	2dd44 <__assert_fail@plt+0x1c9c0>
   2dd44:	ldr	r0, [pc, #4004]	; 2ecf0 <__assert_fail@plt+0x1d96c>
   2dd48:	ldr	r1, [fp, #8]
   2dd4c:	cmp	r1, r0
   2dd50:	blt	2dd68 <__assert_fail@plt+0x1c9e4>
   2dd54:	b	2dd74 <__assert_fail@plt+0x1c9f0>
   2dd58:	ldr	r0, [fp, #8]
   2dd5c:	movw	r1, #0
   2dd60:	cmp	r1, r0
   2dd64:	bge	2dd74 <__assert_fail@plt+0x1c9f0>
   2dd68:	movw	r0, #0
   2dd6c:	str	r0, [sp, #80]	; 0x50
   2dd70:	b	2dd8c <__assert_fail@plt+0x1ca08>
   2dd74:	ldr	r0, [fp, #8]
   2dd78:	movw	r1, #0
   2dd7c:	sub	r0, r1, r0
   2dd80:	movw	r1, #32767	; 0x7fff
   2dd84:	sdiv	r0, r1, r0
   2dd88:	str	r0, [sp, #80]	; 0x50
   2dd8c:	ldr	r0, [sp, #80]	; 0x50
   2dd90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dd94:	mvn	r2, #0
   2dd98:	sub	r1, r2, r1
   2dd9c:	cmp	r0, r1
   2dda0:	ble	2dec4 <__assert_fail@plt+0x1cb40>
   2dda4:	b	2dedc <__assert_fail@plt+0x1cb58>
   2dda8:	b	2ddac <__assert_fail@plt+0x1ca28>
   2ddac:	b	2de08 <__assert_fail@plt+0x1ca84>
   2ddb0:	b	2de08 <__assert_fail@plt+0x1ca84>
   2ddb4:	ldr	r0, [fp, #8]
   2ddb8:	cmn	r0, #1
   2ddbc:	bne	2de08 <__assert_fail@plt+0x1ca84>
   2ddc0:	b	2ddc4 <__assert_fail@plt+0x1ca40>
   2ddc4:	ldr	r0, [pc, #3884]	; 2ecf8 <__assert_fail@plt+0x1d974>
   2ddc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ddcc:	add	r0, r1, r0
   2ddd0:	movw	r1, #0
   2ddd4:	cmp	r1, r0
   2ddd8:	blt	2dec4 <__assert_fail@plt+0x1cb40>
   2dddc:	b	2dedc <__assert_fail@plt+0x1cb58>
   2dde0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dde4:	movw	r1, #0
   2dde8:	cmp	r1, r0
   2ddec:	bge	2dedc <__assert_fail@plt+0x1cb58>
   2ddf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ddf4:	sub	r0, r0, #1
   2ddf8:	movw	r1, #32767	; 0x7fff
   2ddfc:	cmp	r1, r0
   2de00:	blt	2dec4 <__assert_fail@plt+0x1cb40>
   2de04:	b	2dedc <__assert_fail@plt+0x1cb58>
   2de08:	ldr	r0, [pc, #3816]	; 2ecf8 <__assert_fail@plt+0x1d974>
   2de0c:	ldr	r1, [fp, #8]
   2de10:	sdiv	r0, r0, r1
   2de14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2de18:	cmp	r0, r1
   2de1c:	blt	2dec4 <__assert_fail@plt+0x1cb40>
   2de20:	b	2dedc <__assert_fail@plt+0x1cb58>
   2de24:	ldr	r0, [fp, #8]
   2de28:	cmp	r0, #0
   2de2c:	bne	2de34 <__assert_fail@plt+0x1cab0>
   2de30:	b	2dedc <__assert_fail@plt+0x1cb58>
   2de34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2de38:	cmp	r0, #0
   2de3c:	bge	2deac <__assert_fail@plt+0x1cb28>
   2de40:	b	2de44 <__assert_fail@plt+0x1cac0>
   2de44:	b	2de90 <__assert_fail@plt+0x1cb0c>
   2de48:	b	2de90 <__assert_fail@plt+0x1cb0c>
   2de4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2de50:	cmn	r0, #1
   2de54:	bne	2de90 <__assert_fail@plt+0x1cb0c>
   2de58:	b	2de5c <__assert_fail@plt+0x1cad8>
   2de5c:	ldr	r0, [pc, #3732]	; 2ecf8 <__assert_fail@plt+0x1d974>
   2de60:	ldr	r1, [fp, #8]
   2de64:	add	r0, r1, r0
   2de68:	movw	r1, #0
   2de6c:	cmp	r1, r0
   2de70:	blt	2dec4 <__assert_fail@plt+0x1cb40>
   2de74:	b	2dedc <__assert_fail@plt+0x1cb58>
   2de78:	ldr	r0, [fp, #8]
   2de7c:	sub	r0, r0, #1
   2de80:	movw	r1, #32767	; 0x7fff
   2de84:	cmp	r1, r0
   2de88:	blt	2dec4 <__assert_fail@plt+0x1cb40>
   2de8c:	b	2dedc <__assert_fail@plt+0x1cb58>
   2de90:	ldr	r0, [pc, #3680]	; 2ecf8 <__assert_fail@plt+0x1d974>
   2de94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2de98:	sdiv	r0, r0, r1
   2de9c:	ldr	r1, [fp, #8]
   2dea0:	cmp	r0, r1
   2dea4:	blt	2dec4 <__assert_fail@plt+0x1cb40>
   2dea8:	b	2dedc <__assert_fail@plt+0x1cb58>
   2deac:	ldr	r0, [fp, #8]
   2deb0:	movw	r1, #32767	; 0x7fff
   2deb4:	sdiv	r0, r1, r0
   2deb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2debc:	cmp	r0, r1
   2dec0:	bge	2dedc <__assert_fail@plt+0x1cb58>
   2dec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dec8:	ldr	r1, [fp, #8]
   2decc:	mul	r0, r0, r1
   2ded0:	sxth	r0, r0
   2ded4:	str	r0, [fp, #-28]	; 0xffffffe4
   2ded8:	b	2ecc0 <__assert_fail@plt+0x1d93c>
   2dedc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dee0:	ldr	r1, [fp, #8]
   2dee4:	mul	r0, r0, r1
   2dee8:	sxth	r0, r0
   2deec:	str	r0, [fp, #-28]	; 0xffffffe4
   2def0:	b	2ecc4 <__assert_fail@plt+0x1d940>
   2def4:	ldr	r0, [fp, #8]
   2def8:	cmp	r0, #0
   2defc:	bge	2e00c <__assert_fail@plt+0x1cc88>
   2df00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2df04:	cmp	r0, #0
   2df08:	bge	2df94 <__assert_fail@plt+0x1cc10>
   2df0c:	b	2df10 <__assert_fail@plt+0x1cb8c>
   2df10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2df14:	ldr	r1, [fp, #8]
   2df18:	movw	r2, #65535	; 0xffff
   2df1c:	sdiv	r1, r2, r1
   2df20:	cmp	r0, r1
   2df24:	blt	2e0a8 <__assert_fail@plt+0x1cd24>
   2df28:	b	2e0c0 <__assert_fail@plt+0x1cd3c>
   2df2c:	b	2df30 <__assert_fail@plt+0x1cbac>
   2df30:	ldr	r0, [pc, #3512]	; 2ecf0 <__assert_fail@plt+0x1d96c>
   2df34:	ldr	r1, [fp, #8]
   2df38:	cmp	r1, r0
   2df3c:	blt	2df54 <__assert_fail@plt+0x1cbd0>
   2df40:	b	2df60 <__assert_fail@plt+0x1cbdc>
   2df44:	ldr	r0, [fp, #8]
   2df48:	movw	r1, #0
   2df4c:	cmp	r1, r0
   2df50:	bge	2df60 <__assert_fail@plt+0x1cbdc>
   2df54:	movw	r0, #0
   2df58:	str	r0, [sp, #76]	; 0x4c
   2df5c:	b	2df78 <__assert_fail@plt+0x1cbf4>
   2df60:	ldr	r0, [fp, #8]
   2df64:	movw	r1, #0
   2df68:	sub	r0, r1, r0
   2df6c:	movw	r1, #65535	; 0xffff
   2df70:	sdiv	r0, r1, r0
   2df74:	str	r0, [sp, #76]	; 0x4c
   2df78:	ldr	r0, [sp, #76]	; 0x4c
   2df7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2df80:	mvn	r2, #0
   2df84:	sub	r1, r2, r1
   2df88:	cmp	r0, r1
   2df8c:	ble	2e0a8 <__assert_fail@plt+0x1cd24>
   2df90:	b	2e0c0 <__assert_fail@plt+0x1cd3c>
   2df94:	b	2df98 <__assert_fail@plt+0x1cc14>
   2df98:	b	2dff0 <__assert_fail@plt+0x1cc6c>
   2df9c:	b	2dff0 <__assert_fail@plt+0x1cc6c>
   2dfa0:	ldr	r0, [fp, #8]
   2dfa4:	cmn	r0, #1
   2dfa8:	bne	2dff0 <__assert_fail@plt+0x1cc6c>
   2dfac:	b	2dfb0 <__assert_fail@plt+0x1cc2c>
   2dfb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dfb4:	add	r0, r0, #0
   2dfb8:	movw	r1, #0
   2dfbc:	cmp	r1, r0
   2dfc0:	blt	2e0a8 <__assert_fail@plt+0x1cd24>
   2dfc4:	b	2e0c0 <__assert_fail@plt+0x1cd3c>
   2dfc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dfcc:	movw	r1, #0
   2dfd0:	cmp	r1, r0
   2dfd4:	bge	2e0c0 <__assert_fail@plt+0x1cd3c>
   2dfd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dfdc:	sub	r0, r0, #1
   2dfe0:	mvn	r1, #0
   2dfe4:	cmp	r1, r0
   2dfe8:	blt	2e0a8 <__assert_fail@plt+0x1cd24>
   2dfec:	b	2e0c0 <__assert_fail@plt+0x1cd3c>
   2dff0:	ldr	r0, [fp, #8]
   2dff4:	movw	r1, #0
   2dff8:	sdiv	r0, r1, r0
   2dffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e000:	cmp	r0, r1
   2e004:	blt	2e0a8 <__assert_fail@plt+0x1cd24>
   2e008:	b	2e0c0 <__assert_fail@plt+0x1cd3c>
   2e00c:	ldr	r0, [fp, #8]
   2e010:	cmp	r0, #0
   2e014:	bne	2e01c <__assert_fail@plt+0x1cc98>
   2e018:	b	2e0c0 <__assert_fail@plt+0x1cd3c>
   2e01c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e020:	cmp	r0, #0
   2e024:	bge	2e090 <__assert_fail@plt+0x1cd0c>
   2e028:	b	2e02c <__assert_fail@plt+0x1cca8>
   2e02c:	b	2e074 <__assert_fail@plt+0x1ccf0>
   2e030:	b	2e074 <__assert_fail@plt+0x1ccf0>
   2e034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e038:	cmn	r0, #1
   2e03c:	bne	2e074 <__assert_fail@plt+0x1ccf0>
   2e040:	b	2e044 <__assert_fail@plt+0x1ccc0>
   2e044:	ldr	r0, [fp, #8]
   2e048:	add	r0, r0, #0
   2e04c:	movw	r1, #0
   2e050:	cmp	r1, r0
   2e054:	blt	2e0a8 <__assert_fail@plt+0x1cd24>
   2e058:	b	2e0c0 <__assert_fail@plt+0x1cd3c>
   2e05c:	ldr	r0, [fp, #8]
   2e060:	sub	r0, r0, #1
   2e064:	mvn	r1, #0
   2e068:	cmp	r1, r0
   2e06c:	blt	2e0a8 <__assert_fail@plt+0x1cd24>
   2e070:	b	2e0c0 <__assert_fail@plt+0x1cd3c>
   2e074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e078:	movw	r1, #0
   2e07c:	sdiv	r0, r1, r0
   2e080:	ldr	r1, [fp, #8]
   2e084:	cmp	r0, r1
   2e088:	blt	2e0a8 <__assert_fail@plt+0x1cd24>
   2e08c:	b	2e0c0 <__assert_fail@plt+0x1cd3c>
   2e090:	ldr	r0, [fp, #8]
   2e094:	movw	r1, #65535	; 0xffff
   2e098:	sdiv	r0, r1, r0
   2e09c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e0a0:	cmp	r0, r1
   2e0a4:	bge	2e0c0 <__assert_fail@plt+0x1cd3c>
   2e0a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e0ac:	ldr	r1, [fp, #8]
   2e0b0:	mul	r0, r0, r1
   2e0b4:	uxth	r0, r0
   2e0b8:	str	r0, [fp, #-28]	; 0xffffffe4
   2e0bc:	b	2ecc0 <__assert_fail@plt+0x1d93c>
   2e0c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e0c4:	ldr	r1, [fp, #8]
   2e0c8:	mul	r0, r0, r1
   2e0cc:	uxth	r0, r0
   2e0d0:	str	r0, [fp, #-28]	; 0xffffffe4
   2e0d4:	b	2ecc4 <__assert_fail@plt+0x1d940>
   2e0d8:	b	2e0dc <__assert_fail@plt+0x1cd58>
   2e0dc:	b	2e0e0 <__assert_fail@plt+0x1cd5c>
   2e0e0:	ldr	r0, [fp, #8]
   2e0e4:	cmp	r0, #0
   2e0e8:	bge	2e1ec <__assert_fail@plt+0x1ce68>
   2e0ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e0f0:	cmp	r0, #0
   2e0f4:	bge	2e180 <__assert_fail@plt+0x1cdfc>
   2e0f8:	b	2e0fc <__assert_fail@plt+0x1cd78>
   2e0fc:	ldr	r0, [pc, #3048]	; 2ecec <__assert_fail@plt+0x1d968>
   2e100:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e104:	ldr	r2, [fp, #8]
   2e108:	sdiv	r0, r0, r2
   2e10c:	cmp	r1, r0
   2e110:	blt	2e27c <__assert_fail@plt+0x1cef8>
   2e114:	b	2e290 <__assert_fail@plt+0x1cf0c>
   2e118:	b	2e11c <__assert_fail@plt+0x1cd98>
   2e11c:	ldr	r0, [pc, #3020]	; 2ecf0 <__assert_fail@plt+0x1d96c>
   2e120:	ldr	r1, [fp, #8]
   2e124:	cmp	r1, r0
   2e128:	blt	2e140 <__assert_fail@plt+0x1cdbc>
   2e12c:	b	2e14c <__assert_fail@plt+0x1cdc8>
   2e130:	ldr	r0, [fp, #8]
   2e134:	movw	r1, #0
   2e138:	cmp	r1, r0
   2e13c:	bge	2e14c <__assert_fail@plt+0x1cdc8>
   2e140:	movw	r0, #0
   2e144:	str	r0, [sp, #72]	; 0x48
   2e148:	b	2e164 <__assert_fail@plt+0x1cde0>
   2e14c:	ldr	r0, [pc, #2968]	; 2ecec <__assert_fail@plt+0x1d968>
   2e150:	ldr	r1, [fp, #8]
   2e154:	movw	r2, #0
   2e158:	sub	r1, r2, r1
   2e15c:	sdiv	r0, r0, r1
   2e160:	str	r0, [sp, #72]	; 0x48
   2e164:	ldr	r0, [sp, #72]	; 0x48
   2e168:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e16c:	mvn	r2, #0
   2e170:	sub	r1, r2, r1
   2e174:	cmp	r0, r1
   2e178:	ble	2e27c <__assert_fail@plt+0x1cef8>
   2e17c:	b	2e290 <__assert_fail@plt+0x1cf0c>
   2e180:	ldr	r0, [fp, #8]
   2e184:	cmn	r0, #1
   2e188:	bne	2e1d0 <__assert_fail@plt+0x1ce4c>
   2e18c:	b	2e190 <__assert_fail@plt+0x1ce0c>
   2e190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e194:	add	r0, r0, #-2147483648	; 0x80000000
   2e198:	movw	r1, #0
   2e19c:	cmp	r1, r0
   2e1a0:	blt	2e27c <__assert_fail@plt+0x1cef8>
   2e1a4:	b	2e290 <__assert_fail@plt+0x1cf0c>
   2e1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e1ac:	movw	r1, #0
   2e1b0:	cmp	r1, r0
   2e1b4:	bge	2e290 <__assert_fail@plt+0x1cf0c>
   2e1b8:	ldr	r0, [pc, #2860]	; 2ecec <__assert_fail@plt+0x1d968>
   2e1bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e1c0:	sub	r1, r1, #1
   2e1c4:	cmp	r0, r1
   2e1c8:	blt	2e27c <__assert_fail@plt+0x1cef8>
   2e1cc:	b	2e290 <__assert_fail@plt+0x1cf0c>
   2e1d0:	ldr	r0, [pc, #2844]	; 2ecf4 <__assert_fail@plt+0x1d970>
   2e1d4:	ldr	r1, [fp, #8]
   2e1d8:	sdiv	r0, r0, r1
   2e1dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e1e0:	cmp	r0, r1
   2e1e4:	blt	2e27c <__assert_fail@plt+0x1cef8>
   2e1e8:	b	2e290 <__assert_fail@plt+0x1cf0c>
   2e1ec:	ldr	r0, [fp, #8]
   2e1f0:	cmp	r0, #0
   2e1f4:	bne	2e1fc <__assert_fail@plt+0x1ce78>
   2e1f8:	b	2e290 <__assert_fail@plt+0x1cf0c>
   2e1fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e200:	cmp	r0, #0
   2e204:	bge	2e264 <__assert_fail@plt+0x1cee0>
   2e208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e20c:	cmn	r0, #1
   2e210:	bne	2e248 <__assert_fail@plt+0x1cec4>
   2e214:	b	2e218 <__assert_fail@plt+0x1ce94>
   2e218:	ldr	r0, [fp, #8]
   2e21c:	add	r0, r0, #-2147483648	; 0x80000000
   2e220:	movw	r1, #0
   2e224:	cmp	r1, r0
   2e228:	blt	2e27c <__assert_fail@plt+0x1cef8>
   2e22c:	b	2e290 <__assert_fail@plt+0x1cf0c>
   2e230:	ldr	r0, [pc, #2740]	; 2ecec <__assert_fail@plt+0x1d968>
   2e234:	ldr	r1, [fp, #8]
   2e238:	sub	r1, r1, #1
   2e23c:	cmp	r0, r1
   2e240:	blt	2e27c <__assert_fail@plt+0x1cef8>
   2e244:	b	2e290 <__assert_fail@plt+0x1cf0c>
   2e248:	ldr	r0, [pc, #2724]	; 2ecf4 <__assert_fail@plt+0x1d970>
   2e24c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e250:	sdiv	r0, r0, r1
   2e254:	ldr	r1, [fp, #8]
   2e258:	cmp	r0, r1
   2e25c:	blt	2e27c <__assert_fail@plt+0x1cef8>
   2e260:	b	2e290 <__assert_fail@plt+0x1cf0c>
   2e264:	ldr	r0, [pc, #2688]	; 2ecec <__assert_fail@plt+0x1d968>
   2e268:	ldr	r1, [fp, #8]
   2e26c:	sdiv	r0, r0, r1
   2e270:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e274:	cmp	r0, r1
   2e278:	bge	2e290 <__assert_fail@plt+0x1cf0c>
   2e27c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e280:	ldr	r1, [fp, #8]
   2e284:	mul	r0, r0, r1
   2e288:	str	r0, [fp, #-28]	; 0xffffffe4
   2e28c:	b	2ecc0 <__assert_fail@plt+0x1d93c>
   2e290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e294:	ldr	r1, [fp, #8]
   2e298:	mul	r0, r0, r1
   2e29c:	str	r0, [fp, #-28]	; 0xffffffe4
   2e2a0:	b	2ecc4 <__assert_fail@plt+0x1d940>
   2e2a4:	ldr	r0, [fp, #8]
   2e2a8:	cmp	r0, #0
   2e2ac:	bge	2e3bc <__assert_fail@plt+0x1d038>
   2e2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e2b4:	cmp	r0, #0
   2e2b8:	bge	2e344 <__assert_fail@plt+0x1cfc0>
   2e2bc:	b	2e2dc <__assert_fail@plt+0x1cf58>
   2e2c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e2c4:	ldr	r1, [fp, #8]
   2e2c8:	mvn	r2, #0
   2e2cc:	udiv	r1, r2, r1
   2e2d0:	cmp	r0, r1
   2e2d4:	bcc	2e458 <__assert_fail@plt+0x1d0d4>
   2e2d8:	b	2e46c <__assert_fail@plt+0x1d0e8>
   2e2dc:	b	2e2e0 <__assert_fail@plt+0x1cf5c>
   2e2e0:	ldr	r0, [pc, #2568]	; 2ecf0 <__assert_fail@plt+0x1d96c>
   2e2e4:	ldr	r1, [fp, #8]
   2e2e8:	cmp	r1, r0
   2e2ec:	blt	2e304 <__assert_fail@plt+0x1cf80>
   2e2f0:	b	2e310 <__assert_fail@plt+0x1cf8c>
   2e2f4:	ldr	r0, [fp, #8]
   2e2f8:	movw	r1, #0
   2e2fc:	cmp	r1, r0
   2e300:	bge	2e310 <__assert_fail@plt+0x1cf8c>
   2e304:	movw	r0, #1
   2e308:	str	r0, [sp, #68]	; 0x44
   2e30c:	b	2e328 <__assert_fail@plt+0x1cfa4>
   2e310:	ldr	r0, [fp, #8]
   2e314:	movw	r1, #0
   2e318:	sub	r0, r1, r0
   2e31c:	mvn	r1, #0
   2e320:	udiv	r0, r1, r0
   2e324:	str	r0, [sp, #68]	; 0x44
   2e328:	ldr	r0, [sp, #68]	; 0x44
   2e32c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e330:	mvn	r2, #0
   2e334:	sub	r1, r2, r1
   2e338:	cmp	r0, r1
   2e33c:	bls	2e458 <__assert_fail@plt+0x1d0d4>
   2e340:	b	2e46c <__assert_fail@plt+0x1d0e8>
   2e344:	b	2e348 <__assert_fail@plt+0x1cfc4>
   2e348:	b	2e3a0 <__assert_fail@plt+0x1d01c>
   2e34c:	b	2e3a0 <__assert_fail@plt+0x1d01c>
   2e350:	ldr	r0, [fp, #8]
   2e354:	cmn	r0, #1
   2e358:	bne	2e3a0 <__assert_fail@plt+0x1d01c>
   2e35c:	b	2e360 <__assert_fail@plt+0x1cfdc>
   2e360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e364:	add	r0, r0, #0
   2e368:	movw	r1, #0
   2e36c:	cmp	r1, r0
   2e370:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e374:	b	2e46c <__assert_fail@plt+0x1d0e8>
   2e378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e37c:	movw	r1, #0
   2e380:	cmp	r1, r0
   2e384:	bge	2e46c <__assert_fail@plt+0x1d0e8>
   2e388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e38c:	sub	r0, r0, #1
   2e390:	mvn	r1, #0
   2e394:	cmp	r1, r0
   2e398:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e39c:	b	2e46c <__assert_fail@plt+0x1d0e8>
   2e3a0:	ldr	r0, [fp, #8]
   2e3a4:	movw	r1, #0
   2e3a8:	sdiv	r0, r1, r0
   2e3ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e3b0:	cmp	r0, r1
   2e3b4:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e3b8:	b	2e46c <__assert_fail@plt+0x1d0e8>
   2e3bc:	ldr	r0, [fp, #8]
   2e3c0:	cmp	r0, #0
   2e3c4:	bne	2e3cc <__assert_fail@plt+0x1d048>
   2e3c8:	b	2e46c <__assert_fail@plt+0x1d0e8>
   2e3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e3d0:	cmp	r0, #0
   2e3d4:	bge	2e440 <__assert_fail@plt+0x1d0bc>
   2e3d8:	b	2e3dc <__assert_fail@plt+0x1d058>
   2e3dc:	b	2e424 <__assert_fail@plt+0x1d0a0>
   2e3e0:	b	2e424 <__assert_fail@plt+0x1d0a0>
   2e3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e3e8:	cmn	r0, #1
   2e3ec:	bne	2e424 <__assert_fail@plt+0x1d0a0>
   2e3f0:	b	2e3f4 <__assert_fail@plt+0x1d070>
   2e3f4:	ldr	r0, [fp, #8]
   2e3f8:	add	r0, r0, #0
   2e3fc:	movw	r1, #0
   2e400:	cmp	r1, r0
   2e404:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e408:	b	2e46c <__assert_fail@plt+0x1d0e8>
   2e40c:	ldr	r0, [fp, #8]
   2e410:	sub	r0, r0, #1
   2e414:	mvn	r1, #0
   2e418:	cmp	r1, r0
   2e41c:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e420:	b	2e46c <__assert_fail@plt+0x1d0e8>
   2e424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e428:	movw	r1, #0
   2e42c:	sdiv	r0, r1, r0
   2e430:	ldr	r1, [fp, #8]
   2e434:	cmp	r0, r1
   2e438:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e43c:	b	2e46c <__assert_fail@plt+0x1d0e8>
   2e440:	ldr	r0, [fp, #8]
   2e444:	mvn	r1, #0
   2e448:	udiv	r0, r1, r0
   2e44c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e450:	cmp	r0, r1
   2e454:	bcs	2e46c <__assert_fail@plt+0x1d0e8>
   2e458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e45c:	ldr	r1, [fp, #8]
   2e460:	mul	r0, r0, r1
   2e464:	str	r0, [fp, #-28]	; 0xffffffe4
   2e468:	b	2ecc0 <__assert_fail@plt+0x1d93c>
   2e46c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e470:	ldr	r1, [fp, #8]
   2e474:	mul	r0, r0, r1
   2e478:	str	r0, [fp, #-28]	; 0xffffffe4
   2e47c:	b	2ecc4 <__assert_fail@plt+0x1d940>
   2e480:	b	2e484 <__assert_fail@plt+0x1d100>
   2e484:	b	2e488 <__assert_fail@plt+0x1d104>
   2e488:	ldr	r0, [fp, #8]
   2e48c:	cmp	r0, #0
   2e490:	bge	2e594 <__assert_fail@plt+0x1d210>
   2e494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e498:	cmp	r0, #0
   2e49c:	bge	2e528 <__assert_fail@plt+0x1d1a4>
   2e4a0:	b	2e4a4 <__assert_fail@plt+0x1d120>
   2e4a4:	ldr	r0, [pc, #2112]	; 2ecec <__assert_fail@plt+0x1d968>
   2e4a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e4ac:	ldr	r2, [fp, #8]
   2e4b0:	sdiv	r0, r0, r2
   2e4b4:	cmp	r1, r0
   2e4b8:	blt	2e624 <__assert_fail@plt+0x1d2a0>
   2e4bc:	b	2e638 <__assert_fail@plt+0x1d2b4>
   2e4c0:	b	2e4c4 <__assert_fail@plt+0x1d140>
   2e4c4:	ldr	r0, [pc, #2084]	; 2ecf0 <__assert_fail@plt+0x1d96c>
   2e4c8:	ldr	r1, [fp, #8]
   2e4cc:	cmp	r1, r0
   2e4d0:	blt	2e4e8 <__assert_fail@plt+0x1d164>
   2e4d4:	b	2e4f4 <__assert_fail@plt+0x1d170>
   2e4d8:	ldr	r0, [fp, #8]
   2e4dc:	movw	r1, #0
   2e4e0:	cmp	r1, r0
   2e4e4:	bge	2e4f4 <__assert_fail@plt+0x1d170>
   2e4e8:	movw	r0, #0
   2e4ec:	str	r0, [sp, #64]	; 0x40
   2e4f0:	b	2e50c <__assert_fail@plt+0x1d188>
   2e4f4:	ldr	r0, [pc, #2032]	; 2ecec <__assert_fail@plt+0x1d968>
   2e4f8:	ldr	r1, [fp, #8]
   2e4fc:	movw	r2, #0
   2e500:	sub	r1, r2, r1
   2e504:	sdiv	r0, r0, r1
   2e508:	str	r0, [sp, #64]	; 0x40
   2e50c:	ldr	r0, [sp, #64]	; 0x40
   2e510:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e514:	mvn	r2, #0
   2e518:	sub	r1, r2, r1
   2e51c:	cmp	r0, r1
   2e520:	ble	2e624 <__assert_fail@plt+0x1d2a0>
   2e524:	b	2e638 <__assert_fail@plt+0x1d2b4>
   2e528:	ldr	r0, [fp, #8]
   2e52c:	cmn	r0, #1
   2e530:	bne	2e578 <__assert_fail@plt+0x1d1f4>
   2e534:	b	2e538 <__assert_fail@plt+0x1d1b4>
   2e538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e53c:	add	r0, r0, #-2147483648	; 0x80000000
   2e540:	movw	r1, #0
   2e544:	cmp	r1, r0
   2e548:	blt	2e624 <__assert_fail@plt+0x1d2a0>
   2e54c:	b	2e638 <__assert_fail@plt+0x1d2b4>
   2e550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e554:	movw	r1, #0
   2e558:	cmp	r1, r0
   2e55c:	bge	2e638 <__assert_fail@plt+0x1d2b4>
   2e560:	ldr	r0, [pc, #1924]	; 2ecec <__assert_fail@plt+0x1d968>
   2e564:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e568:	sub	r1, r1, #1
   2e56c:	cmp	r0, r1
   2e570:	blt	2e624 <__assert_fail@plt+0x1d2a0>
   2e574:	b	2e638 <__assert_fail@plt+0x1d2b4>
   2e578:	ldr	r0, [pc, #1908]	; 2ecf4 <__assert_fail@plt+0x1d970>
   2e57c:	ldr	r1, [fp, #8]
   2e580:	sdiv	r0, r0, r1
   2e584:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e588:	cmp	r0, r1
   2e58c:	blt	2e624 <__assert_fail@plt+0x1d2a0>
   2e590:	b	2e638 <__assert_fail@plt+0x1d2b4>
   2e594:	ldr	r0, [fp, #8]
   2e598:	cmp	r0, #0
   2e59c:	bne	2e5a4 <__assert_fail@plt+0x1d220>
   2e5a0:	b	2e638 <__assert_fail@plt+0x1d2b4>
   2e5a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e5a8:	cmp	r0, #0
   2e5ac:	bge	2e60c <__assert_fail@plt+0x1d288>
   2e5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e5b4:	cmn	r0, #1
   2e5b8:	bne	2e5f0 <__assert_fail@plt+0x1d26c>
   2e5bc:	b	2e5c0 <__assert_fail@plt+0x1d23c>
   2e5c0:	ldr	r0, [fp, #8]
   2e5c4:	add	r0, r0, #-2147483648	; 0x80000000
   2e5c8:	movw	r1, #0
   2e5cc:	cmp	r1, r0
   2e5d0:	blt	2e624 <__assert_fail@plt+0x1d2a0>
   2e5d4:	b	2e638 <__assert_fail@plt+0x1d2b4>
   2e5d8:	ldr	r0, [pc, #1804]	; 2ecec <__assert_fail@plt+0x1d968>
   2e5dc:	ldr	r1, [fp, #8]
   2e5e0:	sub	r1, r1, #1
   2e5e4:	cmp	r0, r1
   2e5e8:	blt	2e624 <__assert_fail@plt+0x1d2a0>
   2e5ec:	b	2e638 <__assert_fail@plt+0x1d2b4>
   2e5f0:	ldr	r0, [pc, #1788]	; 2ecf4 <__assert_fail@plt+0x1d970>
   2e5f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e5f8:	sdiv	r0, r0, r1
   2e5fc:	ldr	r1, [fp, #8]
   2e600:	cmp	r0, r1
   2e604:	blt	2e624 <__assert_fail@plt+0x1d2a0>
   2e608:	b	2e638 <__assert_fail@plt+0x1d2b4>
   2e60c:	ldr	r0, [pc, #1752]	; 2ecec <__assert_fail@plt+0x1d968>
   2e610:	ldr	r1, [fp, #8]
   2e614:	sdiv	r0, r0, r1
   2e618:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e61c:	cmp	r0, r1
   2e620:	bge	2e638 <__assert_fail@plt+0x1d2b4>
   2e624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e628:	ldr	r1, [fp, #8]
   2e62c:	mul	r0, r0, r1
   2e630:	str	r0, [fp, #-28]	; 0xffffffe4
   2e634:	b	2ecc0 <__assert_fail@plt+0x1d93c>
   2e638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e63c:	ldr	r1, [fp, #8]
   2e640:	mul	r0, r0, r1
   2e644:	str	r0, [fp, #-28]	; 0xffffffe4
   2e648:	b	2ecc4 <__assert_fail@plt+0x1d940>
   2e64c:	ldr	r0, [fp, #8]
   2e650:	cmp	r0, #0
   2e654:	bge	2e764 <__assert_fail@plt+0x1d3e0>
   2e658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e65c:	cmp	r0, #0
   2e660:	bge	2e6ec <__assert_fail@plt+0x1d368>
   2e664:	b	2e684 <__assert_fail@plt+0x1d300>
   2e668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e66c:	ldr	r1, [fp, #8]
   2e670:	mvn	r2, #0
   2e674:	udiv	r1, r2, r1
   2e678:	cmp	r0, r1
   2e67c:	bcc	2e800 <__assert_fail@plt+0x1d47c>
   2e680:	b	2e814 <__assert_fail@plt+0x1d490>
   2e684:	b	2e688 <__assert_fail@plt+0x1d304>
   2e688:	ldr	r0, [pc, #1632]	; 2ecf0 <__assert_fail@plt+0x1d96c>
   2e68c:	ldr	r1, [fp, #8]
   2e690:	cmp	r1, r0
   2e694:	blt	2e6ac <__assert_fail@plt+0x1d328>
   2e698:	b	2e6b8 <__assert_fail@plt+0x1d334>
   2e69c:	ldr	r0, [fp, #8]
   2e6a0:	movw	r1, #0
   2e6a4:	cmp	r1, r0
   2e6a8:	bge	2e6b8 <__assert_fail@plt+0x1d334>
   2e6ac:	movw	r0, #1
   2e6b0:	str	r0, [sp, #60]	; 0x3c
   2e6b4:	b	2e6d0 <__assert_fail@plt+0x1d34c>
   2e6b8:	ldr	r0, [fp, #8]
   2e6bc:	movw	r1, #0
   2e6c0:	sub	r0, r1, r0
   2e6c4:	mvn	r1, #0
   2e6c8:	udiv	r0, r1, r0
   2e6cc:	str	r0, [sp, #60]	; 0x3c
   2e6d0:	ldr	r0, [sp, #60]	; 0x3c
   2e6d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e6d8:	mvn	r2, #0
   2e6dc:	sub	r1, r2, r1
   2e6e0:	cmp	r0, r1
   2e6e4:	bls	2e800 <__assert_fail@plt+0x1d47c>
   2e6e8:	b	2e814 <__assert_fail@plt+0x1d490>
   2e6ec:	b	2e6f0 <__assert_fail@plt+0x1d36c>
   2e6f0:	b	2e748 <__assert_fail@plt+0x1d3c4>
   2e6f4:	b	2e748 <__assert_fail@plt+0x1d3c4>
   2e6f8:	ldr	r0, [fp, #8]
   2e6fc:	cmn	r0, #1
   2e700:	bne	2e748 <__assert_fail@plt+0x1d3c4>
   2e704:	b	2e708 <__assert_fail@plt+0x1d384>
   2e708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e70c:	add	r0, r0, #0
   2e710:	movw	r1, #0
   2e714:	cmp	r1, r0
   2e718:	blt	2e800 <__assert_fail@plt+0x1d47c>
   2e71c:	b	2e814 <__assert_fail@plt+0x1d490>
   2e720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e724:	movw	r1, #0
   2e728:	cmp	r1, r0
   2e72c:	bge	2e814 <__assert_fail@plt+0x1d490>
   2e730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e734:	sub	r0, r0, #1
   2e738:	mvn	r1, #0
   2e73c:	cmp	r1, r0
   2e740:	blt	2e800 <__assert_fail@plt+0x1d47c>
   2e744:	b	2e814 <__assert_fail@plt+0x1d490>
   2e748:	ldr	r0, [fp, #8]
   2e74c:	movw	r1, #0
   2e750:	sdiv	r0, r1, r0
   2e754:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e758:	cmp	r0, r1
   2e75c:	blt	2e800 <__assert_fail@plt+0x1d47c>
   2e760:	b	2e814 <__assert_fail@plt+0x1d490>
   2e764:	ldr	r0, [fp, #8]
   2e768:	cmp	r0, #0
   2e76c:	bne	2e774 <__assert_fail@plt+0x1d3f0>
   2e770:	b	2e814 <__assert_fail@plt+0x1d490>
   2e774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e778:	cmp	r0, #0
   2e77c:	bge	2e7e8 <__assert_fail@plt+0x1d464>
   2e780:	b	2e784 <__assert_fail@plt+0x1d400>
   2e784:	b	2e7cc <__assert_fail@plt+0x1d448>
   2e788:	b	2e7cc <__assert_fail@plt+0x1d448>
   2e78c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e790:	cmn	r0, #1
   2e794:	bne	2e7cc <__assert_fail@plt+0x1d448>
   2e798:	b	2e79c <__assert_fail@plt+0x1d418>
   2e79c:	ldr	r0, [fp, #8]
   2e7a0:	add	r0, r0, #0
   2e7a4:	movw	r1, #0
   2e7a8:	cmp	r1, r0
   2e7ac:	blt	2e800 <__assert_fail@plt+0x1d47c>
   2e7b0:	b	2e814 <__assert_fail@plt+0x1d490>
   2e7b4:	ldr	r0, [fp, #8]
   2e7b8:	sub	r0, r0, #1
   2e7bc:	mvn	r1, #0
   2e7c0:	cmp	r1, r0
   2e7c4:	blt	2e800 <__assert_fail@plt+0x1d47c>
   2e7c8:	b	2e814 <__assert_fail@plt+0x1d490>
   2e7cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e7d0:	movw	r1, #0
   2e7d4:	sdiv	r0, r1, r0
   2e7d8:	ldr	r1, [fp, #8]
   2e7dc:	cmp	r0, r1
   2e7e0:	blt	2e800 <__assert_fail@plt+0x1d47c>
   2e7e4:	b	2e814 <__assert_fail@plt+0x1d490>
   2e7e8:	ldr	r0, [fp, #8]
   2e7ec:	mvn	r1, #0
   2e7f0:	udiv	r0, r1, r0
   2e7f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e7f8:	cmp	r0, r1
   2e7fc:	bcs	2e814 <__assert_fail@plt+0x1d490>
   2e800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e804:	ldr	r1, [fp, #8]
   2e808:	mul	r0, r0, r1
   2e80c:	str	r0, [fp, #-28]	; 0xffffffe4
   2e810:	b	2ecc0 <__assert_fail@plt+0x1d93c>
   2e814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e818:	ldr	r1, [fp, #8]
   2e81c:	mul	r0, r0, r1
   2e820:	str	r0, [fp, #-28]	; 0xffffffe4
   2e824:	b	2ecc4 <__assert_fail@plt+0x1d940>
   2e828:	b	2e82c <__assert_fail@plt+0x1d4a8>
   2e82c:	ldr	r0, [fp, #8]
   2e830:	cmp	r0, #0
   2e834:	bge	2e99c <__assert_fail@plt+0x1d618>
   2e838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e83c:	cmp	r0, #0
   2e840:	bge	2e918 <__assert_fail@plt+0x1d594>
   2e844:	b	2e848 <__assert_fail@plt+0x1d4c4>
   2e848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e84c:	ldr	r1, [fp, #8]
   2e850:	asr	r3, r1, #31
   2e854:	mvn	r2, #0
   2e858:	mvn	ip, #-2147483648	; 0x80000000
   2e85c:	str	r0, [sp, #56]	; 0x38
   2e860:	mov	r0, r2
   2e864:	str	r1, [sp, #52]	; 0x34
   2e868:	mov	r1, ip
   2e86c:	ldr	r2, [sp, #52]	; 0x34
   2e870:	bl	33720 <__assert_fail@plt+0x2239c>
   2e874:	ldr	r2, [sp, #56]	; 0x38
   2e878:	subs	r0, r2, r0
   2e87c:	rscs	r1, r1, r2, asr #31
   2e880:	blt	2ea64 <__assert_fail@plt+0x1d6e0>
   2e884:	b	2ea78 <__assert_fail@plt+0x1d6f4>
   2e888:	b	2e88c <__assert_fail@plt+0x1d508>
   2e88c:	ldr	r0, [pc, #1116]	; 2ecf0 <__assert_fail@plt+0x1d96c>
   2e890:	ldr	r1, [fp, #8]
   2e894:	cmp	r1, r0
   2e898:	blt	2e8b0 <__assert_fail@plt+0x1d52c>
   2e89c:	b	2e8c4 <__assert_fail@plt+0x1d540>
   2e8a0:	ldr	r0, [fp, #8]
   2e8a4:	movw	r1, #0
   2e8a8:	cmp	r1, r0
   2e8ac:	bge	2e8c4 <__assert_fail@plt+0x1d540>
   2e8b0:	mov	r0, #0
   2e8b4:	mvn	r1, #0
   2e8b8:	str	r1, [sp, #48]	; 0x30
   2e8bc:	str	r0, [sp, #44]	; 0x2c
   2e8c0:	b	2e8f8 <__assert_fail@plt+0x1d574>
   2e8c4:	ldr	r0, [fp, #8]
   2e8c8:	rsb	r0, r0, #0
   2e8cc:	asr	r3, r0, #31
   2e8d0:	mvn	r1, #0
   2e8d4:	mvn	r2, #-2147483648	; 0x80000000
   2e8d8:	str	r0, [sp, #40]	; 0x28
   2e8dc:	mov	r0, r1
   2e8e0:	mov	r1, r2
   2e8e4:	ldr	r2, [sp, #40]	; 0x28
   2e8e8:	bl	33720 <__assert_fail@plt+0x2239c>
   2e8ec:	str	r0, [sp, #48]	; 0x30
   2e8f0:	str	r1, [sp, #44]	; 0x2c
   2e8f4:	b	2e8f8 <__assert_fail@plt+0x1d574>
   2e8f8:	ldr	r0, [sp, #44]	; 0x2c
   2e8fc:	ldr	r1, [sp, #48]	; 0x30
   2e900:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e904:	mvn	r2, r2
   2e908:	subs	r1, r2, r1
   2e90c:	rscs	r0, r0, r2, asr #31
   2e910:	bge	2ea64 <__assert_fail@plt+0x1d6e0>
   2e914:	b	2ea78 <__assert_fail@plt+0x1d6f4>
   2e918:	ldr	r0, [fp, #8]
   2e91c:	cmn	r0, #1
   2e920:	bne	2e964 <__assert_fail@plt+0x1d5e0>
   2e924:	b	2e928 <__assert_fail@plt+0x1d5a4>
   2e928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e92c:	mov	r1, #-2147483648	; 0x80000000
   2e930:	add	r1, r1, r0, asr #31
   2e934:	rsbs	r0, r0, #0
   2e938:	rscs	r1, r1, #0
   2e93c:	blt	2ea64 <__assert_fail@plt+0x1d6e0>
   2e940:	b	2ea78 <__assert_fail@plt+0x1d6f4>
   2e944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e948:	movw	r1, #0
   2e94c:	cmp	r1, r0
   2e950:	bge	2ea78 <__assert_fail@plt+0x1d6f4>
   2e954:	mov	r0, #0
   2e958:	cmp	r0, #0
   2e95c:	bne	2ea64 <__assert_fail@plt+0x1d6e0>
   2e960:	b	2ea78 <__assert_fail@plt+0x1d6f4>
   2e964:	ldr	r0, [fp, #8]
   2e968:	asr	r3, r0, #31
   2e96c:	mov	r1, #0
   2e970:	mov	r2, #-2147483648	; 0x80000000
   2e974:	str	r0, [sp, #36]	; 0x24
   2e978:	mov	r0, r1
   2e97c:	mov	r1, r2
   2e980:	ldr	r2, [sp, #36]	; 0x24
   2e984:	bl	33720 <__assert_fail@plt+0x2239c>
   2e988:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e98c:	subs	r0, r0, r2
   2e990:	sbcs	r1, r1, r2, asr #31
   2e994:	blt	2ea64 <__assert_fail@plt+0x1d6e0>
   2e998:	b	2ea78 <__assert_fail@plt+0x1d6f4>
   2e99c:	ldr	r0, [fp, #8]
   2e9a0:	cmp	r0, #0
   2e9a4:	bne	2e9ac <__assert_fail@plt+0x1d628>
   2e9a8:	b	2ea78 <__assert_fail@plt+0x1d6f4>
   2e9ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9b0:	cmp	r0, #0
   2e9b4:	bge	2ea2c <__assert_fail@plt+0x1d6a8>
   2e9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9bc:	cmn	r0, #1
   2e9c0:	bne	2e9f4 <__assert_fail@plt+0x1d670>
   2e9c4:	b	2e9c8 <__assert_fail@plt+0x1d644>
   2e9c8:	ldr	r0, [fp, #8]
   2e9cc:	mov	r1, #-2147483648	; 0x80000000
   2e9d0:	add	r1, r1, r0, asr #31
   2e9d4:	rsbs	r0, r0, #0
   2e9d8:	rscs	r1, r1, #0
   2e9dc:	blt	2ea64 <__assert_fail@plt+0x1d6e0>
   2e9e0:	b	2ea78 <__assert_fail@plt+0x1d6f4>
   2e9e4:	mov	r0, #0
   2e9e8:	cmp	r0, #0
   2e9ec:	bne	2ea64 <__assert_fail@plt+0x1d6e0>
   2e9f0:	b	2ea78 <__assert_fail@plt+0x1d6f4>
   2e9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9f8:	asr	r3, r0, #31
   2e9fc:	mov	r1, #0
   2ea00:	mov	r2, #-2147483648	; 0x80000000
   2ea04:	str	r0, [sp, #32]
   2ea08:	mov	r0, r1
   2ea0c:	mov	r1, r2
   2ea10:	ldr	r2, [sp, #32]
   2ea14:	bl	33720 <__assert_fail@plt+0x2239c>
   2ea18:	ldr	r2, [fp, #8]
   2ea1c:	subs	r0, r0, r2
   2ea20:	sbcs	r1, r1, r2, asr #31
   2ea24:	blt	2ea64 <__assert_fail@plt+0x1d6e0>
   2ea28:	b	2ea78 <__assert_fail@plt+0x1d6f4>
   2ea2c:	ldr	r0, [fp, #8]
   2ea30:	asr	r3, r0, #31
   2ea34:	mvn	r1, #0
   2ea38:	mvn	r2, #-2147483648	; 0x80000000
   2ea3c:	str	r0, [sp, #28]
   2ea40:	mov	r0, r1
   2ea44:	mov	r1, r2
   2ea48:	ldr	r2, [sp, #28]
   2ea4c:	bl	33720 <__assert_fail@plt+0x2239c>
   2ea50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ea54:	subs	r0, r0, r2
   2ea58:	sbcs	r1, r1, r2, asr #31
   2ea5c:	bge	2ea78 <__assert_fail@plt+0x1d6f4>
   2ea60:	b	2ea64 <__assert_fail@plt+0x1d6e0>
   2ea64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea68:	ldr	r1, [fp, #8]
   2ea6c:	mul	r0, r0, r1
   2ea70:	str	r0, [fp, #-28]	; 0xffffffe4
   2ea74:	b	2ecc0 <__assert_fail@plt+0x1d93c>
   2ea78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea7c:	ldr	r1, [fp, #8]
   2ea80:	mul	r0, r0, r1
   2ea84:	str	r0, [fp, #-28]	; 0xffffffe4
   2ea88:	b	2ecc4 <__assert_fail@plt+0x1d940>
   2ea8c:	ldr	r0, [fp, #8]
   2ea90:	cmp	r0, #0
   2ea94:	bge	2ebe4 <__assert_fail@plt+0x1d860>
   2ea98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea9c:	cmp	r0, #0
   2eaa0:	bge	2eb6c <__assert_fail@plt+0x1d7e8>
   2eaa4:	b	2eae4 <__assert_fail@plt+0x1d760>
   2eaa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eaac:	ldr	r1, [fp, #8]
   2eab0:	asr	r3, r1, #31
   2eab4:	mvn	r2, #0
   2eab8:	str	r0, [sp, #24]
   2eabc:	mov	r0, r2
   2eac0:	str	r1, [sp, #20]
   2eac4:	mov	r1, r2
   2eac8:	ldr	r2, [sp, #20]
   2eacc:	bl	337f4 <__assert_fail@plt+0x22470>
   2ead0:	ldr	r2, [sp, #24]
   2ead4:	subs	r0, r2, r0
   2ead8:	rscs	r1, r1, r2, asr #31
   2eadc:	bcc	2ec98 <__assert_fail@plt+0x1d914>
   2eae0:	b	2ecac <__assert_fail@plt+0x1d928>
   2eae4:	b	2eae8 <__assert_fail@plt+0x1d764>
   2eae8:	ldr	r0, [pc, #512]	; 2ecf0 <__assert_fail@plt+0x1d96c>
   2eaec:	ldr	r1, [fp, #8]
   2eaf0:	cmp	r1, r0
   2eaf4:	blt	2eb0c <__assert_fail@plt+0x1d788>
   2eaf8:	b	2eb20 <__assert_fail@plt+0x1d79c>
   2eafc:	ldr	r0, [fp, #8]
   2eb00:	movw	r1, #0
   2eb04:	cmp	r1, r0
   2eb08:	bge	2eb20 <__assert_fail@plt+0x1d79c>
   2eb0c:	mov	r0, #1
   2eb10:	mvn	r1, #0
   2eb14:	str	r1, [sp, #16]
   2eb18:	str	r0, [sp, #12]
   2eb1c:	b	2eb4c <__assert_fail@plt+0x1d7c8>
   2eb20:	ldr	r0, [fp, #8]
   2eb24:	rsb	r0, r0, #0
   2eb28:	asr	r3, r0, #31
   2eb2c:	mvn	r1, #0
   2eb30:	str	r0, [sp, #8]
   2eb34:	mov	r0, r1
   2eb38:	ldr	r2, [sp, #8]
   2eb3c:	bl	337f4 <__assert_fail@plt+0x22470>
   2eb40:	str	r0, [sp, #16]
   2eb44:	str	r1, [sp, #12]
   2eb48:	b	2eb4c <__assert_fail@plt+0x1d7c8>
   2eb4c:	ldr	r0, [sp, #12]
   2eb50:	ldr	r1, [sp, #16]
   2eb54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eb58:	mvn	r2, r2
   2eb5c:	subs	r1, r2, r1
   2eb60:	rscs	r0, r0, r2, asr #31
   2eb64:	bcs	2ec98 <__assert_fail@plt+0x1d914>
   2eb68:	b	2ecac <__assert_fail@plt+0x1d928>
   2eb6c:	b	2eb70 <__assert_fail@plt+0x1d7ec>
   2eb70:	b	2ebc8 <__assert_fail@plt+0x1d844>
   2eb74:	b	2ebc8 <__assert_fail@plt+0x1d844>
   2eb78:	ldr	r0, [fp, #8]
   2eb7c:	cmn	r0, #1
   2eb80:	bne	2ebc8 <__assert_fail@plt+0x1d844>
   2eb84:	b	2eb88 <__assert_fail@plt+0x1d804>
   2eb88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb8c:	add	r0, r0, #0
   2eb90:	movw	r1, #0
   2eb94:	cmp	r1, r0
   2eb98:	blt	2ec98 <__assert_fail@plt+0x1d914>
   2eb9c:	b	2ecac <__assert_fail@plt+0x1d928>
   2eba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eba4:	movw	r1, #0
   2eba8:	cmp	r1, r0
   2ebac:	bge	2ecac <__assert_fail@plt+0x1d928>
   2ebb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ebb4:	sub	r0, r0, #1
   2ebb8:	mvn	r1, #0
   2ebbc:	cmp	r1, r0
   2ebc0:	blt	2ec98 <__assert_fail@plt+0x1d914>
   2ebc4:	b	2ecac <__assert_fail@plt+0x1d928>
   2ebc8:	ldr	r0, [fp, #8]
   2ebcc:	movw	r1, #0
   2ebd0:	sdiv	r0, r1, r0
   2ebd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ebd8:	cmp	r0, r1
   2ebdc:	blt	2ec98 <__assert_fail@plt+0x1d914>
   2ebe0:	b	2ecac <__assert_fail@plt+0x1d928>
   2ebe4:	ldr	r0, [fp, #8]
   2ebe8:	cmp	r0, #0
   2ebec:	bne	2ebf4 <__assert_fail@plt+0x1d870>
   2ebf0:	b	2ecac <__assert_fail@plt+0x1d928>
   2ebf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ebf8:	cmp	r0, #0
   2ebfc:	bge	2ec68 <__assert_fail@plt+0x1d8e4>
   2ec00:	b	2ec04 <__assert_fail@plt+0x1d880>
   2ec04:	b	2ec4c <__assert_fail@plt+0x1d8c8>
   2ec08:	b	2ec4c <__assert_fail@plt+0x1d8c8>
   2ec0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec10:	cmn	r0, #1
   2ec14:	bne	2ec4c <__assert_fail@plt+0x1d8c8>
   2ec18:	b	2ec1c <__assert_fail@plt+0x1d898>
   2ec1c:	ldr	r0, [fp, #8]
   2ec20:	add	r0, r0, #0
   2ec24:	movw	r1, #0
   2ec28:	cmp	r1, r0
   2ec2c:	blt	2ec98 <__assert_fail@plt+0x1d914>
   2ec30:	b	2ecac <__assert_fail@plt+0x1d928>
   2ec34:	ldr	r0, [fp, #8]
   2ec38:	sub	r0, r0, #1
   2ec3c:	mvn	r1, #0
   2ec40:	cmp	r1, r0
   2ec44:	blt	2ec98 <__assert_fail@plt+0x1d914>
   2ec48:	b	2ecac <__assert_fail@plt+0x1d928>
   2ec4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec50:	movw	r1, #0
   2ec54:	sdiv	r0, r1, r0
   2ec58:	ldr	r1, [fp, #8]
   2ec5c:	cmp	r0, r1
   2ec60:	blt	2ec98 <__assert_fail@plt+0x1d914>
   2ec64:	b	2ecac <__assert_fail@plt+0x1d928>
   2ec68:	ldr	r0, [fp, #8]
   2ec6c:	asr	r3, r0, #31
   2ec70:	mvn	r1, #0
   2ec74:	str	r0, [sp, #4]
   2ec78:	mov	r0, r1
   2ec7c:	ldr	r2, [sp, #4]
   2ec80:	bl	337f4 <__assert_fail@plt+0x22470>
   2ec84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ec88:	subs	r0, r0, r2
   2ec8c:	sbcs	r1, r1, r2, asr #31
   2ec90:	bcs	2ecac <__assert_fail@plt+0x1d928>
   2ec94:	b	2ec98 <__assert_fail@plt+0x1d914>
   2ec98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec9c:	ldr	r1, [fp, #8]
   2eca0:	mul	r0, r0, r1
   2eca4:	str	r0, [fp, #-28]	; 0xffffffe4
   2eca8:	b	2ecc0 <__assert_fail@plt+0x1d93c>
   2ecac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ecb0:	ldr	r1, [fp, #8]
   2ecb4:	mul	r0, r0, r1
   2ecb8:	str	r0, [fp, #-28]	; 0xffffffe4
   2ecbc:	b	2ecc4 <__assert_fail@plt+0x1d940>
   2ecc0:	bl	2ee9c <__assert_fail@plt+0x1db18>
   2ecc4:	ldr	r0, [fp, #-4]
   2ecc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2eccc:	bl	2c1fc <__assert_fail@plt+0x1ae78>
   2ecd0:	str	r0, [fp, #-4]
   2ecd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ecd8:	ldr	r1, [fp, #-8]
   2ecdc:	str	r0, [r1]
   2ece0:	ldr	r0, [fp, #-4]
   2ece4:	mov	sp, fp
   2ece8:	pop	{fp, pc}
   2ecec:	svcvc	0x00ffffff
   2ecf0:	andhi	r0, r0, r1
   2ecf4:	andhi	r0, r0, r0
   2ecf8:			; <UNDEFINED> instruction: 0xffff8000
   2ecfc:	push	{fp, lr}
   2ed00:	mov	fp, sp
   2ed04:	sub	sp, sp, #8
   2ed08:	str	r0, [sp, #4]
   2ed0c:	ldr	r0, [sp, #4]
   2ed10:	movw	r1, #1
   2ed14:	bl	2ed20 <__assert_fail@plt+0x1d99c>
   2ed18:	mov	sp, fp
   2ed1c:	pop	{fp, pc}
   2ed20:	push	{fp, lr}
   2ed24:	mov	fp, sp
   2ed28:	sub	sp, sp, #8
   2ed2c:	str	r0, [sp, #4]
   2ed30:	str	r1, [sp]
   2ed34:	ldr	r0, [sp, #4]
   2ed38:	ldr	r1, [sp]
   2ed3c:	bl	2f00c <__assert_fail@plt+0x1dc88>
   2ed40:	bl	2c188 <__assert_fail@plt+0x1ae04>
   2ed44:	mov	sp, fp
   2ed48:	pop	{fp, pc}
   2ed4c:	push	{fp, lr}
   2ed50:	mov	fp, sp
   2ed54:	sub	sp, sp, #8
   2ed58:	str	r0, [sp, #4]
   2ed5c:	ldr	r0, [sp, #4]
   2ed60:	movw	r1, #1
   2ed64:	bl	2ed70 <__assert_fail@plt+0x1d9ec>
   2ed68:	mov	sp, fp
   2ed6c:	pop	{fp, pc}
   2ed70:	push	{fp, lr}
   2ed74:	mov	fp, sp
   2ed78:	sub	sp, sp, #8
   2ed7c:	str	r0, [sp, #4]
   2ed80:	str	r1, [sp]
   2ed84:	ldr	r0, [sp, #4]
   2ed88:	ldr	r1, [sp]
   2ed8c:	bl	2f6a8 <__assert_fail@plt+0x1e324>
   2ed90:	bl	2c188 <__assert_fail@plt+0x1ae04>
   2ed94:	mov	sp, fp
   2ed98:	pop	{fp, pc}
   2ed9c:	push	{fp, lr}
   2eda0:	mov	fp, sp
   2eda4:	sub	sp, sp, #16
   2eda8:	str	r0, [fp, #-4]
   2edac:	str	r1, [sp, #8]
   2edb0:	ldr	r0, [sp, #8]
   2edb4:	bl	2c164 <__assert_fail@plt+0x1ade0>
   2edb8:	ldr	r1, [fp, #-4]
   2edbc:	ldr	r2, [sp, #8]
   2edc0:	str	r0, [sp, #4]
   2edc4:	bl	1112c <memcpy@plt>
   2edc8:	ldr	r0, [sp, #4]
   2edcc:	mov	sp, fp
   2edd0:	pop	{fp, pc}
   2edd4:	push	{fp, lr}
   2edd8:	mov	fp, sp
   2eddc:	sub	sp, sp, #16
   2ede0:	str	r0, [fp, #-4]
   2ede4:	str	r1, [sp, #8]
   2ede8:	ldr	r0, [sp, #8]
   2edec:	bl	2c1b8 <__assert_fail@plt+0x1ae34>
   2edf0:	ldr	r1, [fp, #-4]
   2edf4:	ldr	r2, [sp, #8]
   2edf8:	str	r0, [sp, #4]
   2edfc:	bl	1112c <memcpy@plt>
   2ee00:	ldr	r0, [sp, #4]
   2ee04:	mov	sp, fp
   2ee08:	pop	{fp, pc}
   2ee0c:	push	{fp, lr}
   2ee10:	mov	fp, sp
   2ee14:	sub	sp, sp, #16
   2ee18:	str	r0, [fp, #-4]
   2ee1c:	str	r1, [sp, #8]
   2ee20:	ldr	r0, [sp, #8]
   2ee24:	add	r0, r0, #1
   2ee28:	bl	2c1b8 <__assert_fail@plt+0x1ae34>
   2ee2c:	str	r0, [sp, #4]
   2ee30:	ldr	r0, [sp, #4]
   2ee34:	ldr	r1, [sp, #8]
   2ee38:	add	r0, r0, r1
   2ee3c:	movw	r1, #0
   2ee40:	strb	r1, [r0]
   2ee44:	ldr	r0, [sp, #4]
   2ee48:	ldr	r1, [fp, #-4]
   2ee4c:	ldr	r2, [sp, #8]
   2ee50:	str	r0, [sp]
   2ee54:	bl	1112c <memcpy@plt>
   2ee58:	ldr	r0, [sp]
   2ee5c:	mov	sp, fp
   2ee60:	pop	{fp, pc}
   2ee64:	push	{fp, lr}
   2ee68:	mov	fp, sp
   2ee6c:	sub	sp, sp, #8
   2ee70:	str	r0, [sp, #4]
   2ee74:	ldr	r0, [sp, #4]
   2ee78:	ldr	r1, [sp, #4]
   2ee7c:	str	r0, [sp]
   2ee80:	mov	r0, r1
   2ee84:	bl	11270 <strlen@plt>
   2ee88:	add	r1, r0, #1
   2ee8c:	ldr	r0, [sp]
   2ee90:	bl	2ed9c <__assert_fail@plt+0x1da18>
   2ee94:	mov	sp, fp
   2ee98:	pop	{fp, pc}
   2ee9c:	push	{fp, lr}
   2eea0:	mov	fp, sp
   2eea4:	sub	sp, sp, #8
   2eea8:	movw	r0, #37152	; 0x9120
   2eeac:	movt	r0, #4
   2eeb0:	ldr	r0, [r0]
   2eeb4:	movw	r1, #34908	; 0x885c
   2eeb8:	movt	r1, #3
   2eebc:	str	r0, [sp, #4]
   2eec0:	mov	r0, r1
   2eec4:	bl	11264 <gettext@plt>
   2eec8:	ldr	r1, [sp, #4]
   2eecc:	str	r0, [sp]
   2eed0:	mov	r0, r1
   2eed4:	movw	r1, #0
   2eed8:	movw	r2, #28953	; 0x7119
   2eedc:	movt	r2, #3
   2eee0:	ldr	r3, [sp]
   2eee4:	bl	111ec <error@plt>
   2eee8:	bl	1136c <abort@plt>
   2eeec:	push	{fp, lr}
   2eef0:	mov	fp, sp
   2eef4:	sub	sp, sp, #32
   2eef8:	ldr	ip, [fp, #8]
   2eefc:	str	r0, [fp, #-4]
   2ef00:	str	r1, [fp, #-8]
   2ef04:	str	r2, [fp, #-12]
   2ef08:	str	r3, [sp, #16]
   2ef0c:	ldr	r0, [fp, #-4]
   2ef10:	ldr	r1, [fp, #-8]
   2ef14:	ldr	r2, [fp, #-12]
   2ef18:	ldr	r3, [sp, #16]
   2ef1c:	ldr	lr, [fp, #8]
   2ef20:	str	lr, [sp]
   2ef24:	str	ip, [sp, #8]
   2ef28:	bl	32308 <__assert_fail@plt+0x20f84>
   2ef2c:	str	r0, [sp, #12]
   2ef30:	ldr	r0, [sp, #12]
   2ef34:	cmp	r0, #0
   2ef38:	bge	2ef50 <__assert_fail@plt+0x1dbcc>
   2ef3c:	bl	11294 <__errno_location@plt>
   2ef40:	ldr	r0, [r0]
   2ef44:	cmp	r0, #12
   2ef48:	bne	2ef50 <__assert_fail@plt+0x1dbcc>
   2ef4c:	bl	2ee9c <__assert_fail@plt+0x1db18>
   2ef50:	ldr	r0, [sp, #12]
   2ef54:	mov	sp, fp
   2ef58:	pop	{fp, pc}
   2ef5c:	push	{fp, lr}
   2ef60:	mov	fp, sp
   2ef64:	sub	sp, sp, #16
   2ef68:	str	r0, [fp, #-4]
   2ef6c:	str	r1, [sp, #8]
   2ef70:	ldr	r0, [fp, #-4]
   2ef74:	ldr	r1, [sp, #8]
   2ef78:	bl	3262c <__assert_fail@plt+0x212a8>
   2ef7c:	str	r0, [sp, #4]
   2ef80:	ldr	r0, [sp, #4]
   2ef84:	movw	r1, #0
   2ef88:	cmp	r0, r1
   2ef8c:	bne	2efa4 <__assert_fail@plt+0x1dc20>
   2ef90:	bl	11294 <__errno_location@plt>
   2ef94:	ldr	r0, [r0]
   2ef98:	cmp	r0, #12
   2ef9c:	bne	2efa4 <__assert_fail@plt+0x1dc20>
   2efa0:	bl	2ee9c <__assert_fail@plt+0x1db18>
   2efa4:	ldr	r0, [sp, #4]
   2efa8:	mov	sp, fp
   2efac:	pop	{fp, pc}
   2efb0:	push	{fp, lr}
   2efb4:	mov	fp, sp
   2efb8:	sub	sp, sp, #16
   2efbc:	str	r0, [fp, #-4]
   2efc0:	str	r1, [sp, #8]
   2efc4:	str	r2, [sp, #4]
   2efc8:	ldr	r0, [fp, #-4]
   2efcc:	ldr	r1, [sp, #8]
   2efd0:	ldr	r2, [sp, #4]
   2efd4:	bl	32980 <__assert_fail@plt+0x215fc>
   2efd8:	str	r0, [sp]
   2efdc:	ldr	r0, [sp]
   2efe0:	movw	r1, #0
   2efe4:	cmp	r0, r1
   2efe8:	bne	2f000 <__assert_fail@plt+0x1dc7c>
   2efec:	bl	11294 <__errno_location@plt>
   2eff0:	ldr	r0, [r0]
   2eff4:	cmp	r0, #12
   2eff8:	bne	2f000 <__assert_fail@plt+0x1dc7c>
   2effc:	bl	2ee9c <__assert_fail@plt+0x1db18>
   2f000:	ldr	r0, [sp]
   2f004:	mov	sp, fp
   2f008:	pop	{fp, pc}
   2f00c:	push	{fp, lr}
   2f010:	mov	fp, sp
   2f014:	sub	sp, sp, #16
   2f018:	str	r0, [sp, #8]
   2f01c:	str	r1, [sp, #4]
   2f020:	ldr	r0, [sp, #8]
   2f024:	cmp	r0, #0
   2f028:	beq	2f038 <__assert_fail@plt+0x1dcb4>
   2f02c:	ldr	r0, [sp, #4]
   2f030:	cmp	r0, #0
   2f034:	bne	2f044 <__assert_fail@plt+0x1dcc0>
   2f038:	movw	r0, #1
   2f03c:	str	r0, [sp, #4]
   2f040:	str	r0, [sp, #8]
   2f044:	ldr	r0, [sp, #4]
   2f048:	cmp	r0, #0
   2f04c:	beq	2f080 <__assert_fail@plt+0x1dcfc>
   2f050:	ldr	r0, [pc, #76]	; 2f0a4 <__assert_fail@plt+0x1dd20>
   2f054:	ldr	r1, [sp, #4]
   2f058:	udiv	r0, r0, r1
   2f05c:	ldr	r1, [sp, #8]
   2f060:	cmp	r0, r1
   2f064:	bcs	2f080 <__assert_fail@plt+0x1dcfc>
   2f068:	bl	11294 <__errno_location@plt>
   2f06c:	movw	r1, #12
   2f070:	str	r1, [r0]
   2f074:	movw	r0, #0
   2f078:	str	r0, [fp, #-4]
   2f07c:	b	2f098 <__assert_fail@plt+0x1dd14>
   2f080:	ldr	r0, [sp, #8]
   2f084:	ldr	r1, [sp, #4]
   2f088:	bl	1109c <calloc@plt>
   2f08c:	str	r0, [sp]
   2f090:	ldr	r0, [sp]
   2f094:	str	r0, [fp, #-4]
   2f098:	ldr	r0, [fp, #-4]
   2f09c:	mov	sp, fp
   2f0a0:	pop	{fp, pc}
   2f0a4:	svcvc	0x00ffffff
   2f0a8:	push	{fp, lr}
   2f0ac:	mov	fp, sp
   2f0b0:	sub	sp, sp, #16
   2f0b4:	str	r0, [sp, #8]
   2f0b8:	ldr	r0, [sp, #8]
   2f0bc:	cmp	r0, #0
   2f0c0:	bne	2f0cc <__assert_fail@plt+0x1dd48>
   2f0c4:	movw	r0, #1
   2f0c8:	str	r0, [sp, #8]
   2f0cc:	ldr	r0, [pc, #64]	; 2f114 <__assert_fail@plt+0x1dd90>
   2f0d0:	ldr	r1, [sp, #8]
   2f0d4:	cmp	r0, r1
   2f0d8:	bcs	2f0f4 <__assert_fail@plt+0x1dd70>
   2f0dc:	bl	11294 <__errno_location@plt>
   2f0e0:	movw	r1, #12
   2f0e4:	str	r1, [r0]
   2f0e8:	movw	r0, #0
   2f0ec:	str	r0, [fp, #-4]
   2f0f0:	b	2f108 <__assert_fail@plt+0x1dd84>
   2f0f4:	ldr	r0, [sp, #8]
   2f0f8:	bl	111f8 <malloc@plt>
   2f0fc:	str	r0, [sp, #4]
   2f100:	ldr	r0, [sp, #4]
   2f104:	str	r0, [fp, #-4]
   2f108:	ldr	r0, [fp, #-4]
   2f10c:	mov	sp, fp
   2f110:	pop	{fp, pc}
   2f114:	svcvc	0x00ffffff
   2f118:	push	{fp, lr}
   2f11c:	mov	fp, sp
   2f120:	sub	sp, sp, #16
   2f124:	str	r0, [sp, #8]
   2f128:	str	r1, [sp, #4]
   2f12c:	ldr	r0, [sp, #8]
   2f130:	movw	r1, #0
   2f134:	cmp	r0, r1
   2f138:	bne	2f14c <__assert_fail@plt+0x1ddc8>
   2f13c:	ldr	r0, [sp, #4]
   2f140:	bl	2f0a8 <__assert_fail@plt+0x1dd24>
   2f144:	str	r0, [fp, #-4]
   2f148:	b	2f1ac <__assert_fail@plt+0x1de28>
   2f14c:	ldr	r0, [sp, #4]
   2f150:	cmp	r0, #0
   2f154:	bne	2f16c <__assert_fail@plt+0x1dde8>
   2f158:	ldr	r0, [sp, #8]
   2f15c:	bl	1aaec <__assert_fail@plt+0x9768>
   2f160:	movw	r0, #0
   2f164:	str	r0, [fp, #-4]
   2f168:	b	2f1ac <__assert_fail@plt+0x1de28>
   2f16c:	ldr	r0, [pc, #68]	; 2f1b8 <__assert_fail@plt+0x1de34>
   2f170:	ldr	r1, [sp, #4]
   2f174:	cmp	r0, r1
   2f178:	bcs	2f194 <__assert_fail@plt+0x1de10>
   2f17c:	bl	11294 <__errno_location@plt>
   2f180:	movw	r1, #12
   2f184:	str	r1, [r0]
   2f188:	movw	r0, #0
   2f18c:	str	r0, [fp, #-4]
   2f190:	b	2f1ac <__assert_fail@plt+0x1de28>
   2f194:	ldr	r0, [sp, #8]
   2f198:	ldr	r1, [sp, #4]
   2f19c:	bl	11168 <realloc@plt>
   2f1a0:	str	r0, [sp]
   2f1a4:	ldr	r0, [sp]
   2f1a8:	str	r0, [fp, #-4]
   2f1ac:	ldr	r0, [fp, #-4]
   2f1b0:	mov	sp, fp
   2f1b4:	pop	{fp, pc}
   2f1b8:	svcvc	0x00ffffff
   2f1bc:	push	{fp, lr}
   2f1c0:	mov	fp, sp
   2f1c4:	sub	sp, sp, #24
   2f1c8:	str	r0, [fp, #-8]
   2f1cc:	str	r1, [sp, #12]
   2f1d0:	ldr	r0, [fp, #-8]
   2f1d4:	str	r0, [sp, #8]
   2f1d8:	ldr	r0, [sp, #12]
   2f1dc:	str	r0, [sp, #4]
   2f1e0:	ldr	r0, [sp, #8]
   2f1e4:	ldr	r1, [sp, #4]
   2f1e8:	cmp	r0, r1
   2f1ec:	bne	2f1fc <__assert_fail@plt+0x1de78>
   2f1f0:	movw	r0, #0
   2f1f4:	str	r0, [fp, #-4]
   2f1f8:	b	2f268 <__assert_fail@plt+0x1dee4>
   2f1fc:	b	2f200 <__assert_fail@plt+0x1de7c>
   2f200:	ldr	r0, [sp, #8]
   2f204:	ldrb	r0, [r0]
   2f208:	bl	330c4 <__assert_fail@plt+0x21d40>
   2f20c:	strb	r0, [sp, #3]
   2f210:	ldr	r0, [sp, #4]
   2f214:	ldrb	r0, [r0]
   2f218:	bl	330c4 <__assert_fail@plt+0x21d40>
   2f21c:	strb	r0, [sp, #2]
   2f220:	ldrb	r0, [sp, #3]
   2f224:	cmp	r0, #0
   2f228:	bne	2f230 <__assert_fail@plt+0x1deac>
   2f22c:	b	2f258 <__assert_fail@plt+0x1ded4>
   2f230:	ldr	r0, [sp, #8]
   2f234:	add	r0, r0, #1
   2f238:	str	r0, [sp, #8]
   2f23c:	ldr	r0, [sp, #4]
   2f240:	add	r0, r0, #1
   2f244:	str	r0, [sp, #4]
   2f248:	ldrb	r0, [sp, #3]
   2f24c:	ldrb	r1, [sp, #2]
   2f250:	cmp	r0, r1
   2f254:	beq	2f200 <__assert_fail@plt+0x1de7c>
   2f258:	ldrb	r0, [sp, #3]
   2f25c:	ldrb	r1, [sp, #2]
   2f260:	sub	r0, r0, r1
   2f264:	str	r0, [fp, #-4]
   2f268:	ldr	r0, [fp, #-4]
   2f26c:	mov	sp, fp
   2f270:	pop	{fp, pc}
   2f274:	push	{fp, lr}
   2f278:	mov	fp, sp
   2f27c:	sub	sp, sp, #16
   2f280:	str	r0, [sp, #8]
   2f284:	ldr	r0, [sp, #8]
   2f288:	bl	111c8 <__fpending@plt>
   2f28c:	cmp	r0, #0
   2f290:	movw	r0, #0
   2f294:	movne	r0, #1
   2f298:	and	r0, r0, #1
   2f29c:	strb	r0, [sp, #7]
   2f2a0:	ldr	r0, [sp, #8]
   2f2a4:	bl	111d4 <ferror_unlocked@plt>
   2f2a8:	cmp	r0, #0
   2f2ac:	movw	r0, #0
   2f2b0:	movne	r0, #1
   2f2b4:	and	r0, r0, #1
   2f2b8:	strb	r0, [sp, #6]
   2f2bc:	ldr	r0, [sp, #8]
   2f2c0:	bl	2f344 <__assert_fail@plt+0x1dfc0>
   2f2c4:	cmp	r0, #0
   2f2c8:	movw	r0, #0
   2f2cc:	movne	r0, #1
   2f2d0:	and	r0, r0, #1
   2f2d4:	strb	r0, [sp, #5]
   2f2d8:	ldrb	r0, [sp, #6]
   2f2dc:	tst	r0, #1
   2f2e0:	bne	2f30c <__assert_fail@plt+0x1df88>
   2f2e4:	ldrb	r0, [sp, #5]
   2f2e8:	tst	r0, #1
   2f2ec:	beq	2f330 <__assert_fail@plt+0x1dfac>
   2f2f0:	ldrb	r0, [sp, #7]
   2f2f4:	tst	r0, #1
   2f2f8:	bne	2f30c <__assert_fail@plt+0x1df88>
   2f2fc:	bl	11294 <__errno_location@plt>
   2f300:	ldr	r0, [r0]
   2f304:	cmp	r0, #9
   2f308:	beq	2f330 <__assert_fail@plt+0x1dfac>
   2f30c:	ldrb	r0, [sp, #5]
   2f310:	tst	r0, #1
   2f314:	bne	2f324 <__assert_fail@plt+0x1dfa0>
   2f318:	bl	11294 <__errno_location@plt>
   2f31c:	movw	r1, #0
   2f320:	str	r1, [r0]
   2f324:	mvn	r0, #0
   2f328:	str	r0, [fp, #-4]
   2f32c:	b	2f338 <__assert_fail@plt+0x1dfb4>
   2f330:	movw	r0, #0
   2f334:	str	r0, [fp, #-4]
   2f338:	ldr	r0, [fp, #-4]
   2f33c:	mov	sp, fp
   2f340:	pop	{fp, pc}
   2f344:	push	{fp, lr}
   2f348:	mov	fp, sp
   2f34c:	sub	sp, sp, #32
   2f350:	str	r0, [fp, #-8]
   2f354:	movw	r0, #0
   2f358:	str	r0, [fp, #-12]
   2f35c:	str	r0, [sp, #12]
   2f360:	ldr	r0, [fp, #-8]
   2f364:	bl	112d0 <fileno@plt>
   2f368:	str	r0, [sp, #16]
   2f36c:	ldr	r0, [sp, #16]
   2f370:	cmp	r0, #0
   2f374:	bge	2f388 <__assert_fail@plt+0x1e004>
   2f378:	ldr	r0, [fp, #-8]
   2f37c:	bl	112e8 <fclose@plt>
   2f380:	str	r0, [fp, #-4]
   2f384:	b	2f424 <__assert_fail@plt+0x1e0a0>
   2f388:	ldr	r0, [fp, #-8]
   2f38c:	bl	1121c <__freading@plt>
   2f390:	cmp	r0, #0
   2f394:	beq	2f3cc <__assert_fail@plt+0x1e048>
   2f398:	ldr	r0, [fp, #-8]
   2f39c:	bl	112d0 <fileno@plt>
   2f3a0:	mov	r1, sp
   2f3a4:	mov	r2, #1
   2f3a8:	str	r2, [r1]
   2f3ac:	mov	r1, #0
   2f3b0:	mov	r2, r1
   2f3b4:	mov	r3, r1
   2f3b8:	bl	111b0 <lseek64@plt>
   2f3bc:	and	r0, r0, r1
   2f3c0:	cmn	r0, #1
   2f3c4:	beq	2f3e8 <__assert_fail@plt+0x1e064>
   2f3c8:	b	2f3cc <__assert_fail@plt+0x1e048>
   2f3cc:	ldr	r0, [fp, #-8]
   2f3d0:	bl	2f430 <__assert_fail@plt+0x1e0ac>
   2f3d4:	cmp	r0, #0
   2f3d8:	beq	2f3e8 <__assert_fail@plt+0x1e064>
   2f3dc:	bl	11294 <__errno_location@plt>
   2f3e0:	ldr	r0, [r0]
   2f3e4:	str	r0, [fp, #-12]
   2f3e8:	ldr	r0, [fp, #-8]
   2f3ec:	bl	112e8 <fclose@plt>
   2f3f0:	str	r0, [sp, #12]
   2f3f4:	ldr	r0, [fp, #-12]
   2f3f8:	cmp	r0, #0
   2f3fc:	beq	2f41c <__assert_fail@plt+0x1e098>
   2f400:	ldr	r0, [fp, #-12]
   2f404:	str	r0, [sp, #8]
   2f408:	bl	11294 <__errno_location@plt>
   2f40c:	ldr	r1, [sp, #8]
   2f410:	str	r1, [r0]
   2f414:	mvn	r0, #0
   2f418:	str	r0, [sp, #12]
   2f41c:	ldr	r0, [sp, #12]
   2f420:	str	r0, [fp, #-4]
   2f424:	ldr	r0, [fp, #-4]
   2f428:	mov	sp, fp
   2f42c:	pop	{fp, pc}
   2f430:	push	{fp, lr}
   2f434:	mov	fp, sp
   2f438:	sub	sp, sp, #8
   2f43c:	str	r0, [sp]
   2f440:	ldr	r0, [sp]
   2f444:	movw	r1, #0
   2f448:	cmp	r0, r1
   2f44c:	beq	2f460 <__assert_fail@plt+0x1e0dc>
   2f450:	ldr	r0, [sp]
   2f454:	bl	1121c <__freading@plt>
   2f458:	cmp	r0, #0
   2f45c:	bne	2f470 <__assert_fail@plt+0x1e0ec>
   2f460:	ldr	r0, [sp]
   2f464:	bl	110f0 <fflush@plt>
   2f468:	str	r0, [sp, #4]
   2f46c:	b	2f484 <__assert_fail@plt+0x1e100>
   2f470:	ldr	r0, [sp]
   2f474:	bl	2f490 <__assert_fail@plt+0x1e10c>
   2f478:	ldr	r0, [sp]
   2f47c:	bl	110f0 <fflush@plt>
   2f480:	str	r0, [sp, #4]
   2f484:	ldr	r0, [sp, #4]
   2f488:	mov	sp, fp
   2f48c:	pop	{fp, pc}
   2f490:	push	{fp, lr}
   2f494:	mov	fp, sp
   2f498:	sub	sp, sp, #8
   2f49c:	str	r0, [sp, #4]
   2f4a0:	ldr	r0, [sp, #4]
   2f4a4:	ldr	r0, [r0]
   2f4a8:	and	r0, r0, #256	; 0x100
   2f4ac:	cmp	r0, #0
   2f4b0:	beq	2f4d4 <__assert_fail@plt+0x1e150>
   2f4b4:	ldr	r0, [sp, #4]
   2f4b8:	mov	r1, sp
   2f4bc:	mov	r2, #1
   2f4c0:	str	r2, [r1]
   2f4c4:	mov	r1, #0
   2f4c8:	mov	r2, r1
   2f4cc:	mov	r3, r1
   2f4d0:	bl	2f4dc <__assert_fail@plt+0x1e158>
   2f4d4:	mov	sp, fp
   2f4d8:	pop	{fp, pc}
   2f4dc:	push	{fp, lr}
   2f4e0:	mov	fp, sp
   2f4e4:	sub	sp, sp, #32
   2f4e8:	ldr	r1, [fp, #8]
   2f4ec:	str	r0, [fp, #-8]
   2f4f0:	str	r3, [sp, #20]
   2f4f4:	str	r2, [sp, #16]
   2f4f8:	ldr	r0, [fp, #-8]
   2f4fc:	ldr	r0, [r0, #8]
   2f500:	ldr	r2, [fp, #-8]
   2f504:	ldr	r2, [r2, #4]
   2f508:	cmp	r0, r2
   2f50c:	bne	2f5b8 <__assert_fail@plt+0x1e234>
   2f510:	ldr	r0, [fp, #-8]
   2f514:	ldr	r0, [r0, #20]
   2f518:	ldr	r1, [fp, #-8]
   2f51c:	ldr	r1, [r1, #16]
   2f520:	cmp	r0, r1
   2f524:	bne	2f5b8 <__assert_fail@plt+0x1e234>
   2f528:	ldr	r0, [fp, #-8]
   2f52c:	ldr	r0, [r0, #36]	; 0x24
   2f530:	movw	r1, #0
   2f534:	cmp	r0, r1
   2f538:	bne	2f5b8 <__assert_fail@plt+0x1e234>
   2f53c:	ldr	r0, [fp, #-8]
   2f540:	bl	112d0 <fileno@plt>
   2f544:	ldr	r2, [sp, #16]
   2f548:	ldr	r3, [sp, #20]
   2f54c:	ldr	r1, [fp, #8]
   2f550:	mov	ip, sp
   2f554:	str	r1, [ip]
   2f558:	bl	111b0 <lseek64@plt>
   2f55c:	str	r1, [sp, #12]
   2f560:	str	r0, [sp, #8]
   2f564:	ldr	r0, [sp, #8]
   2f568:	ldr	r1, [sp, #12]
   2f56c:	and	r0, r0, r1
   2f570:	cmn	r0, #1
   2f574:	bne	2f588 <__assert_fail@plt+0x1e204>
   2f578:	b	2f57c <__assert_fail@plt+0x1e1f8>
   2f57c:	mvn	r0, #0
   2f580:	str	r0, [fp, #-4]
   2f584:	b	2f5d8 <__assert_fail@plt+0x1e254>
   2f588:	ldr	r0, [fp, #-8]
   2f58c:	ldr	r1, [r0]
   2f590:	bic	r1, r1, #16
   2f594:	str	r1, [r0]
   2f598:	ldr	r0, [sp, #8]
   2f59c:	ldr	r1, [sp, #12]
   2f5a0:	ldr	r2, [fp, #-8]
   2f5a4:	str	r1, [r2, #84]	; 0x54
   2f5a8:	str	r0, [r2, #80]	; 0x50
   2f5ac:	movw	r0, #0
   2f5b0:	str	r0, [fp, #-4]
   2f5b4:	b	2f5d8 <__assert_fail@plt+0x1e254>
   2f5b8:	ldr	r0, [fp, #-8]
   2f5bc:	ldr	r2, [sp, #16]
   2f5c0:	ldr	r3, [sp, #20]
   2f5c4:	ldr	r1, [fp, #8]
   2f5c8:	mov	ip, sp
   2f5cc:	str	r1, [ip]
   2f5d0:	bl	11300 <fseeko64@plt>
   2f5d4:	str	r0, [fp, #-4]
   2f5d8:	ldr	r0, [fp, #-4]
   2f5dc:	mov	sp, fp
   2f5e0:	pop	{fp, pc}
   2f5e4:	push	{fp, lr}
   2f5e8:	mov	fp, sp
   2f5ec:	bl	11294 <__errno_location@plt>
   2f5f0:	movw	r1, #12
   2f5f4:	str	r1, [r0]
   2f5f8:	movw	r0, #0
   2f5fc:	pop	{fp, pc}
   2f600:	push	{fp, lr}
   2f604:	mov	fp, sp
   2f608:	sub	sp, sp, #8
   2f60c:	str	r0, [sp, #4]
   2f610:	ldr	r0, [sp, #4]
   2f614:	cmn	r0, #1
   2f618:	bhi	2f62c <__assert_fail@plt+0x1e2a8>
   2f61c:	ldr	r0, [sp, #4]
   2f620:	bl	2f0a8 <__assert_fail@plt+0x1dd24>
   2f624:	str	r0, [sp]
   2f628:	b	2f634 <__assert_fail@plt+0x1e2b0>
   2f62c:	bl	2f5e4 <__assert_fail@plt+0x1e260>
   2f630:	str	r0, [sp]
   2f634:	ldr	r0, [sp]
   2f638:	mov	sp, fp
   2f63c:	pop	{fp, pc}
   2f640:	push	{fp, lr}
   2f644:	mov	fp, sp
   2f648:	sub	sp, sp, #16
   2f64c:	str	r0, [fp, #-4]
   2f650:	str	r1, [sp, #8]
   2f654:	ldr	r0, [sp, #8]
   2f658:	cmn	r0, #1
   2f65c:	bhi	2f694 <__assert_fail@plt+0x1e310>
   2f660:	ldr	r0, [fp, #-4]
   2f664:	ldr	r1, [sp, #8]
   2f668:	ldr	r2, [sp, #8]
   2f66c:	cmp	r2, #0
   2f670:	movw	r2, #0
   2f674:	movne	r2, #1
   2f678:	mvn	r3, #0
   2f67c:	eor	r2, r2, r3
   2f680:	and	r2, r2, #1
   2f684:	orr	r1, r1, r2
   2f688:	bl	2f118 <__assert_fail@plt+0x1dd94>
   2f68c:	str	r0, [sp, #4]
   2f690:	b	2f69c <__assert_fail@plt+0x1e318>
   2f694:	bl	2f5e4 <__assert_fail@plt+0x1e260>
   2f698:	str	r0, [sp, #4]
   2f69c:	ldr	r0, [sp, #4]
   2f6a0:	mov	sp, fp
   2f6a4:	pop	{fp, pc}
   2f6a8:	push	{fp, lr}
   2f6ac:	mov	fp, sp
   2f6b0:	sub	sp, sp, #16
   2f6b4:	str	r0, [sp, #8]
   2f6b8:	str	r1, [sp, #4]
   2f6bc:	ldr	r0, [sp, #8]
   2f6c0:	mvn	r1, #0
   2f6c4:	cmp	r1, r0
   2f6c8:	bcs	2f6ec <__assert_fail@plt+0x1e368>
   2f6cc:	ldr	r0, [sp, #4]
   2f6d0:	cmp	r0, #0
   2f6d4:	beq	2f6e4 <__assert_fail@plt+0x1e360>
   2f6d8:	bl	2f5e4 <__assert_fail@plt+0x1e260>
   2f6dc:	str	r0, [fp, #-4]
   2f6e0:	b	2f72c <__assert_fail@plt+0x1e3a8>
   2f6e4:	movw	r0, #0
   2f6e8:	str	r0, [sp, #8]
   2f6ec:	ldr	r0, [sp, #4]
   2f6f0:	mvn	r1, #0
   2f6f4:	cmp	r1, r0
   2f6f8:	bcs	2f71c <__assert_fail@plt+0x1e398>
   2f6fc:	ldr	r0, [sp, #8]
   2f700:	cmp	r0, #0
   2f704:	beq	2f714 <__assert_fail@plt+0x1e390>
   2f708:	bl	2f5e4 <__assert_fail@plt+0x1e260>
   2f70c:	str	r0, [fp, #-4]
   2f710:	b	2f72c <__assert_fail@plt+0x1e3a8>
   2f714:	movw	r0, #0
   2f718:	str	r0, [sp, #4]
   2f71c:	ldr	r0, [sp, #8]
   2f720:	ldr	r1, [sp, #4]
   2f724:	bl	2f00c <__assert_fail@plt+0x1dc88>
   2f728:	str	r0, [fp, #-4]
   2f72c:	ldr	r0, [fp, #-4]
   2f730:	mov	sp, fp
   2f734:	pop	{fp, pc}
   2f738:	push	{fp, lr}
   2f73c:	mov	fp, sp
   2f740:	sub	sp, sp, #16
   2f744:	str	r0, [fp, #-4]
   2f748:	str	r1, [sp, #8]
   2f74c:	str	r2, [sp, #4]
   2f750:	ldr	r0, [sp, #8]
   2f754:	cmp	r0, #0
   2f758:	beq	2f768 <__assert_fail@plt+0x1e3e4>
   2f75c:	ldr	r0, [sp, #4]
   2f760:	cmp	r0, #0
   2f764:	bne	2f774 <__assert_fail@plt+0x1e3f0>
   2f768:	movw	r0, #1
   2f76c:	str	r0, [sp, #4]
   2f770:	str	r0, [sp, #8]
   2f774:	ldr	r0, [sp, #8]
   2f778:	cmn	r0, #1
   2f77c:	bhi	2f7a4 <__assert_fail@plt+0x1e420>
   2f780:	ldr	r0, [sp, #4]
   2f784:	cmn	r0, #1
   2f788:	bhi	2f7a4 <__assert_fail@plt+0x1e420>
   2f78c:	ldr	r0, [fp, #-4]
   2f790:	ldr	r1, [sp, #8]
   2f794:	ldr	r2, [sp, #4]
   2f798:	bl	30fc8 <__assert_fail@plt+0x1fc44>
   2f79c:	str	r0, [sp]
   2f7a0:	b	2f7ac <__assert_fail@plt+0x1e428>
   2f7a4:	bl	2f5e4 <__assert_fail@plt+0x1e260>
   2f7a8:	str	r0, [sp]
   2f7ac:	ldr	r0, [sp]
   2f7b0:	mov	sp, fp
   2f7b4:	pop	{fp, pc}
   2f7b8:	push	{fp, lr}
   2f7bc:	mov	fp, sp
   2f7c0:	sub	sp, sp, #8
   2f7c4:	movw	r0, #14
   2f7c8:	bl	11324 <nl_langinfo@plt>
   2f7cc:	str	r0, [sp, #4]
   2f7d0:	ldr	r0, [sp, #4]
   2f7d4:	movw	r1, #0
   2f7d8:	cmp	r0, r1
   2f7dc:	bne	2f7ec <__assert_fail@plt+0x1e468>
   2f7e0:	movw	r0, #15049	; 0x3ac9
   2f7e4:	movt	r0, #3
   2f7e8:	str	r0, [sp, #4]
   2f7ec:	ldr	r0, [sp, #4]
   2f7f0:	ldrb	r0, [r0]
   2f7f4:	cmp	r0, #0
   2f7f8:	bne	2f808 <__assert_fail@plt+0x1e484>
   2f7fc:	movw	r0, #34925	; 0x886d
   2f800:	movt	r0, #3
   2f804:	str	r0, [sp, #4]
   2f808:	ldr	r0, [sp, #4]
   2f80c:	mov	sp, fp
   2f810:	pop	{fp, pc}
   2f814:	push	{fp, lr}
   2f818:	mov	fp, sp
   2f81c:	sub	sp, sp, #8
   2f820:	str	r0, [sp, #4]
   2f824:	ldr	r0, [sp, #4]
   2f828:	ldrb	r0, [r0, #16]
   2f82c:	tst	r0, #1
   2f830:	beq	2f838 <__assert_fail@plt+0x1e4b4>
   2f834:	b	2fa4c <__assert_fail@plt+0x1e6c8>
   2f838:	ldr	r0, [sp, #4]
   2f83c:	ldrb	r0, [r0, #4]
   2f840:	tst	r0, #1
   2f844:	beq	2f84c <__assert_fail@plt+0x1e4c8>
   2f848:	b	2f8d8 <__assert_fail@plt+0x1e554>
   2f84c:	ldr	r0, [sp, #4]
   2f850:	ldr	r0, [r0, #20]
   2f854:	ldrb	r0, [r0]
   2f858:	bl	33488 <__assert_fail@plt+0x22104>
   2f85c:	tst	r0, #1
   2f860:	beq	2f894 <__assert_fail@plt+0x1e510>
   2f864:	ldr	r0, [sp, #4]
   2f868:	movw	r1, #1
   2f86c:	str	r1, [r0, #24]
   2f870:	ldr	r0, [sp, #4]
   2f874:	ldr	r0, [r0, #20]
   2f878:	ldrb	r0, [r0]
   2f87c:	ldr	r1, [sp, #4]
   2f880:	str	r0, [r1, #32]
   2f884:	ldr	r0, [sp, #4]
   2f888:	movw	r1, #1
   2f88c:	strb	r1, [r0, #28]
   2f890:	b	2fa40 <__assert_fail@plt+0x1e6bc>
   2f894:	ldr	r0, [sp, #4]
   2f898:	add	r0, r0, #8
   2f89c:	bl	11138 <mbsinit@plt>
   2f8a0:	cmp	r0, #0
   2f8a4:	beq	2f8ac <__assert_fail@plt+0x1e528>
   2f8a8:	b	2f8cc <__assert_fail@plt+0x1e548>
   2f8ac:	movw	r0, #34931	; 0x8873
   2f8b0:	movt	r0, #3
   2f8b4:	movw	r1, #34954	; 0x888a
   2f8b8:	movt	r1, #3
   2f8bc:	movw	r2, #135	; 0x87
   2f8c0:	movw	r3, #34969	; 0x8899
   2f8c4:	movt	r3, #3
   2f8c8:	bl	11384 <__assert_fail@plt>
   2f8cc:	ldr	r0, [sp, #4]
   2f8d0:	movw	r1, #1
   2f8d4:	strb	r1, [r0, #4]
   2f8d8:	ldr	r0, [sp, #4]
   2f8dc:	add	r0, r0, #20
   2f8e0:	add	r0, r0, #12
   2f8e4:	ldr	r1, [sp, #4]
   2f8e8:	ldr	r1, [r1, #20]
   2f8ec:	ldr	r2, [sp, #4]
   2f8f0:	ldr	r2, [r2]
   2f8f4:	ldr	r3, [sp, #4]
   2f8f8:	ldr	r3, [r3, #20]
   2f8fc:	sub	r2, r2, r3
   2f900:	ldr	r3, [sp, #4]
   2f904:	add	r3, r3, #8
   2f908:	bl	2fb34 <__assert_fail@plt+0x1e7b0>
   2f90c:	ldr	r1, [sp, #4]
   2f910:	str	r0, [r1, #24]
   2f914:	ldr	r0, [sp, #4]
   2f918:	ldr	r0, [r0, #24]
   2f91c:	cmn	r0, #1
   2f920:	bne	2f940 <__assert_fail@plt+0x1e5bc>
   2f924:	ldr	r0, [sp, #4]
   2f928:	movw	r1, #1
   2f92c:	str	r1, [r0, #24]
   2f930:	ldr	r0, [sp, #4]
   2f934:	movw	r1, #0
   2f938:	strb	r1, [r0, #28]
   2f93c:	b	2fa3c <__assert_fail@plt+0x1e6b8>
   2f940:	ldr	r0, [sp, #4]
   2f944:	ldr	r0, [r0, #24]
   2f948:	cmn	r0, #2
   2f94c:	bne	2f97c <__assert_fail@plt+0x1e5f8>
   2f950:	ldr	r0, [sp, #4]
   2f954:	ldr	r0, [r0]
   2f958:	ldr	r1, [sp, #4]
   2f95c:	ldr	r1, [r1, #20]
   2f960:	sub	r0, r0, r1
   2f964:	ldr	r1, [sp, #4]
   2f968:	str	r0, [r1, #24]
   2f96c:	ldr	r0, [sp, #4]
   2f970:	movw	r1, #0
   2f974:	strb	r1, [r0, #28]
   2f978:	b	2fa38 <__assert_fail@plt+0x1e6b4>
   2f97c:	ldr	r0, [sp, #4]
   2f980:	ldr	r0, [r0, #24]
   2f984:	cmp	r0, #0
   2f988:	bne	2fa08 <__assert_fail@plt+0x1e684>
   2f98c:	ldr	r0, [sp, #4]
   2f990:	movw	r1, #1
   2f994:	str	r1, [r0, #24]
   2f998:	ldr	r0, [sp, #4]
   2f99c:	ldr	r0, [r0, #20]
   2f9a0:	ldrb	r0, [r0]
   2f9a4:	cmp	r0, #0
   2f9a8:	bne	2f9b0 <__assert_fail@plt+0x1e62c>
   2f9ac:	b	2f9d0 <__assert_fail@plt+0x1e64c>
   2f9b0:	movw	r0, #35015	; 0x88c7
   2f9b4:	movt	r0, #3
   2f9b8:	movw	r1, #34954	; 0x888a
   2f9bc:	movt	r1, #3
   2f9c0:	movw	r2, #162	; 0xa2
   2f9c4:	movw	r3, #34969	; 0x8899
   2f9c8:	movt	r3, #3
   2f9cc:	bl	11384 <__assert_fail@plt>
   2f9d0:	ldr	r0, [sp, #4]
   2f9d4:	ldr	r0, [r0, #32]
   2f9d8:	cmp	r0, #0
   2f9dc:	bne	2f9e4 <__assert_fail@plt+0x1e660>
   2f9e0:	b	2fa04 <__assert_fail@plt+0x1e680>
   2f9e4:	movw	r0, #35038	; 0x88de
   2f9e8:	movt	r0, #3
   2f9ec:	movw	r1, #34954	; 0x888a
   2f9f0:	movt	r1, #3
   2f9f4:	movw	r2, #163	; 0xa3
   2f9f8:	movw	r3, #34969	; 0x8899
   2f9fc:	movt	r3, #3
   2fa00:	bl	11384 <__assert_fail@plt>
   2fa04:	b	2fa08 <__assert_fail@plt+0x1e684>
   2fa08:	ldr	r0, [sp, #4]
   2fa0c:	movw	r1, #1
   2fa10:	strb	r1, [r0, #28]
   2fa14:	ldr	r0, [sp, #4]
   2fa18:	add	r0, r0, #8
   2fa1c:	bl	11138 <mbsinit@plt>
   2fa20:	cmp	r0, #0
   2fa24:	beq	2fa34 <__assert_fail@plt+0x1e6b0>
   2fa28:	ldr	r0, [sp, #4]
   2fa2c:	movw	r1, #0
   2fa30:	strb	r1, [r0, #4]
   2fa34:	b	2fa38 <__assert_fail@plt+0x1e6b4>
   2fa38:	b	2fa3c <__assert_fail@plt+0x1e6b8>
   2fa3c:	b	2fa40 <__assert_fail@plt+0x1e6bc>
   2fa40:	ldr	r0, [sp, #4]
   2fa44:	movw	r1, #1
   2fa48:	strb	r1, [r0, #16]
   2fa4c:	mov	sp, fp
   2fa50:	pop	{fp, pc}
   2fa54:	sub	sp, sp, #8
   2fa58:	str	r0, [sp, #4]
   2fa5c:	str	r1, [sp]
   2fa60:	ldr	r0, [sp]
   2fa64:	ldr	r1, [sp, #4]
   2fa68:	ldr	r2, [r1, #20]
   2fa6c:	add	r0, r2, r0
   2fa70:	str	r0, [r1, #20]
   2fa74:	ldr	r0, [sp]
   2fa78:	ldr	r1, [sp, #4]
   2fa7c:	ldr	r2, [r1]
   2fa80:	add	r0, r2, r0
   2fa84:	str	r0, [r1]
   2fa88:	add	sp, sp, #8
   2fa8c:	bx	lr
   2fa90:	push	{fp, lr}
   2fa94:	mov	fp, sp
   2fa98:	sub	sp, sp, #8
   2fa9c:	str	r0, [sp, #4]
   2faa0:	str	r1, [sp]
   2faa4:	ldr	r0, [sp]
   2faa8:	ldr	r0, [r0]
   2faac:	ldr	r1, [sp, #4]
   2fab0:	str	r0, [r1]
   2fab4:	ldr	r0, [sp]
   2fab8:	ldrb	r0, [r0, #4]
   2fabc:	ldr	r1, [sp, #4]
   2fac0:	and	r2, r0, #1
   2fac4:	strb	r2, [r1, #4]
   2fac8:	tst	r0, #1
   2facc:	beq	2faec <__assert_fail@plt+0x1e768>
   2fad0:	ldr	r0, [sp, #4]
   2fad4:	ldr	r1, [sp]
   2fad8:	ldr	r2, [r1, #8]
   2fadc:	str	r2, [r0, #8]
   2fae0:	ldr	r1, [r1, #12]
   2fae4:	str	r1, [r0, #12]
   2fae8:	b	2fb04 <__assert_fail@plt+0x1e780>
   2faec:	ldr	r0, [sp, #4]
   2faf0:	add	r0, r0, #8
   2faf4:	movw	r1, #0
   2faf8:	and	r1, r1, #255	; 0xff
   2fafc:	movw	r2, #8
   2fb00:	bl	112b8 <memset@plt>
   2fb04:	ldr	r0, [sp]
   2fb08:	ldrb	r0, [r0, #16]
   2fb0c:	ldr	r1, [sp, #4]
   2fb10:	and	r0, r0, #1
   2fb14:	strb	r0, [r1, #16]
   2fb18:	ldr	r0, [sp, #4]
   2fb1c:	add	r0, r0, #20
   2fb20:	ldr	r1, [sp]
   2fb24:	add	r1, r1, #20
   2fb28:	bl	333d8 <__assert_fail@plt+0x22054>
   2fb2c:	mov	sp, fp
   2fb30:	pop	{fp, pc}
   2fb34:	push	{fp, lr}
   2fb38:	mov	fp, sp
   2fb3c:	sub	sp, sp, #32
   2fb40:	str	r0, [fp, #-8]
   2fb44:	str	r1, [fp, #-12]
   2fb48:	str	r2, [sp, #16]
   2fb4c:	str	r3, [sp, #12]
   2fb50:	ldr	r0, [fp, #-8]
   2fb54:	movw	r1, #0
   2fb58:	cmp	r0, r1
   2fb5c:	bne	2fb68 <__assert_fail@plt+0x1e7e4>
   2fb60:	add	r0, sp, #4
   2fb64:	str	r0, [fp, #-8]
   2fb68:	ldr	r0, [fp, #-8]
   2fb6c:	ldr	r1, [fp, #-12]
   2fb70:	ldr	r2, [sp, #16]
   2fb74:	ldr	r3, [sp, #12]
   2fb78:	bl	111e0 <mbrtowc@plt>
   2fb7c:	str	r0, [sp, #8]
   2fb80:	ldr	r0, [sp, #8]
   2fb84:	mvn	r1, #1
   2fb88:	cmp	r1, r0
   2fb8c:	bhi	2fbd0 <__assert_fail@plt+0x1e84c>
   2fb90:	ldr	r0, [sp, #16]
   2fb94:	cmp	r0, #0
   2fb98:	beq	2fbd0 <__assert_fail@plt+0x1e84c>
   2fb9c:	movw	r0, #0
   2fba0:	bl	3314c <__assert_fail@plt+0x21dc8>
   2fba4:	tst	r0, #1
   2fba8:	bne	2fbd0 <__assert_fail@plt+0x1e84c>
   2fbac:	ldr	r0, [fp, #-12]
   2fbb0:	ldrb	r0, [r0]
   2fbb4:	strb	r0, [sp, #3]
   2fbb8:	ldrb	r0, [sp, #3]
   2fbbc:	ldr	r1, [fp, #-8]
   2fbc0:	str	r0, [r1]
   2fbc4:	movw	r0, #1
   2fbc8:	str	r0, [fp, #-4]
   2fbcc:	b	2fbd8 <__assert_fail@plt+0x1e854>
   2fbd0:	ldr	r0, [sp, #8]
   2fbd4:	str	r0, [fp, #-4]
   2fbd8:	ldr	r0, [fp, #-4]
   2fbdc:	mov	sp, fp
   2fbe0:	pop	{fp, pc}
   2fbe4:	push	{r4, r5, fp, lr}
   2fbe8:	add	fp, sp, #8
   2fbec:	sub	sp, sp, #432	; 0x1b0
   2fbf0:	str	r0, [fp, #-16]
   2fbf4:	str	r1, [fp, #-20]	; 0xffffffec
   2fbf8:	bl	111bc <__ctype_get_mb_cur_max@plt>
   2fbfc:	cmp	r0, #1
   2fc00:	bls	30148 <__assert_fail@plt+0x1edc4>
   2fc04:	ldr	r0, [fp, #-20]	; 0xffffffec
   2fc08:	str	r0, [fp, #-60]	; 0xffffffc4
   2fc0c:	movw	r0, #0
   2fc10:	strb	r0, [fp, #-76]	; 0xffffffb4
   2fc14:	sub	r1, fp, #76	; 0x4c
   2fc18:	add	r2, r1, #4
   2fc1c:	str	r0, [sp, #68]	; 0x44
   2fc20:	mov	r0, r2
   2fc24:	ldr	r2, [sp, #68]	; 0x44
   2fc28:	and	r3, r2, #255	; 0xff
   2fc2c:	str	r1, [sp, #64]	; 0x40
   2fc30:	mov	r1, r3
   2fc34:	movw	r2, #8
   2fc38:	bl	112b8 <memset@plt>
   2fc3c:	ldr	r0, [sp, #68]	; 0x44
   2fc40:	strb	r0, [fp, #-64]	; 0xffffffc0
   2fc44:	ldr	r0, [sp, #64]	; 0x40
   2fc48:	bl	30ca8 <__assert_fail@plt+0x1f924>
   2fc4c:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   2fc50:	tst	r0, #1
   2fc54:	movw	r0, #0
   2fc58:	str	r0, [sp, #60]	; 0x3c
   2fc5c:	beq	2fc74 <__assert_fail@plt+0x1e8f0>
   2fc60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2fc64:	cmp	r0, #0
   2fc68:	movw	r0, #0
   2fc6c:	moveq	r0, #1
   2fc70:	str	r0, [sp, #60]	; 0x3c
   2fc74:	ldr	r0, [sp, #60]	; 0x3c
   2fc78:	mvn	r1, #0
   2fc7c:	eor	r0, r0, r1
   2fc80:	tst	r0, #1
   2fc84:	beq	3013c <__assert_fail@plt+0x1edb8>
   2fc88:	movw	r0, #1
   2fc8c:	strb	r0, [fp, #-77]	; 0xffffffb3
   2fc90:	movw	r0, #0
   2fc94:	str	r0, [fp, #-84]	; 0xffffffac
   2fc98:	str	r0, [fp, #-88]	; 0xffffffa8
   2fc9c:	str	r0, [fp, #-92]	; 0xffffffa4
   2fca0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2fca4:	str	r0, [fp, #-132]	; 0xffffff7c
   2fca8:	movw	r0, #0
   2fcac:	strb	r0, [fp, #-148]	; 0xffffff6c
   2fcb0:	sub	r1, fp, #148	; 0x94
   2fcb4:	add	r1, r1, #4
   2fcb8:	str	r0, [sp, #56]	; 0x38
   2fcbc:	mov	r0, r1
   2fcc0:	ldr	r1, [sp, #56]	; 0x38
   2fcc4:	and	r1, r1, #255	; 0xff
   2fcc8:	movw	r2, #8
   2fccc:	str	r2, [sp, #52]	; 0x34
   2fcd0:	bl	112b8 <memset@plt>
   2fcd4:	ldr	r0, [sp, #56]	; 0x38
   2fcd8:	strb	r0, [fp, #-136]	; 0xffffff78
   2fcdc:	ldr	r1, [fp, #-16]
   2fce0:	str	r1, [fp, #-188]	; 0xffffff44
   2fce4:	strb	r0, [fp, #-204]	; 0xffffff34
   2fce8:	sub	r1, fp, #204	; 0xcc
   2fcec:	add	r1, r1, #4
   2fcf0:	mov	r0, r1
   2fcf4:	ldr	r1, [sp, #56]	; 0x38
   2fcf8:	and	r1, r1, #255	; 0xff
   2fcfc:	ldr	r2, [sp, #52]	; 0x34
   2fd00:	bl	112b8 <memset@plt>
   2fd04:	ldr	r0, [sp, #56]	; 0x38
   2fd08:	strb	r0, [fp, #-192]	; 0xffffff40
   2fd0c:	sub	r0, fp, #204	; 0xcc
   2fd10:	bl	30ca8 <__assert_fail@plt+0x1f924>
   2fd14:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   2fd18:	tst	r0, #1
   2fd1c:	movw	r0, #0
   2fd20:	str	r0, [sp, #48]	; 0x30
   2fd24:	beq	2fd3c <__assert_fail@plt+0x1e9b8>
   2fd28:	ldr	r0, [fp, #-176]	; 0xffffff50
   2fd2c:	cmp	r0, #0
   2fd30:	movw	r0, #0
   2fd34:	moveq	r0, #1
   2fd38:	str	r0, [sp, #48]	; 0x30
   2fd3c:	ldr	r0, [sp, #48]	; 0x30
   2fd40:	mvn	r1, #0
   2fd44:	eor	r0, r0, r1
   2fd48:	tst	r0, #1
   2fd4c:	bne	2fd5c <__assert_fail@plt+0x1e9d8>
   2fd50:	movw	r0, #0
   2fd54:	str	r0, [fp, #-12]
   2fd58:	b	30388 <__assert_fail@plt+0x1f004>
   2fd5c:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   2fd60:	tst	r0, #1
   2fd64:	beq	2feb0 <__assert_fail@plt+0x1eb2c>
   2fd68:	ldr	r0, [fp, #-84]	; 0xffffffac
   2fd6c:	cmp	r0, #10
   2fd70:	bcc	2feb0 <__assert_fail@plt+0x1eb2c>
   2fd74:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2fd78:	ldr	r1, [fp, #-84]	; 0xffffffac
   2fd7c:	movw	r2, #5
   2fd80:	mul	r1, r1, r2
   2fd84:	cmp	r0, r1
   2fd88:	bcc	2feb0 <__assert_fail@plt+0x1eb2c>
   2fd8c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2fd90:	ldr	r1, [fp, #-92]	; 0xffffffa4
   2fd94:	sub	r0, r0, r1
   2fd98:	str	r0, [fp, #-208]	; 0xffffff30
   2fd9c:	ldr	r0, [fp, #-208]	; 0xffffff30
   2fda0:	cmp	r0, #0
   2fda4:	movw	r0, #0
   2fda8:	str	r0, [sp, #44]	; 0x2c
   2fdac:	bls	2fdf0 <__assert_fail@plt+0x1ea6c>
   2fdb0:	sub	r0, fp, #148	; 0x94
   2fdb4:	bl	30ca8 <__assert_fail@plt+0x1f924>
   2fdb8:	ldrb	r0, [fp, #-124]	; 0xffffff84
   2fdbc:	tst	r0, #1
   2fdc0:	movw	r0, #0
   2fdc4:	str	r0, [sp, #40]	; 0x28
   2fdc8:	beq	2fde0 <__assert_fail@plt+0x1ea5c>
   2fdcc:	ldr	r0, [fp, #-120]	; 0xffffff88
   2fdd0:	cmp	r0, #0
   2fdd4:	movw	r0, #0
   2fdd8:	moveq	r0, #1
   2fddc:	str	r0, [sp, #40]	; 0x28
   2fde0:	ldr	r0, [sp, #40]	; 0x28
   2fde4:	mvn	r1, #0
   2fde8:	eor	r0, r0, r1
   2fdec:	str	r0, [sp, #44]	; 0x2c
   2fdf0:	ldr	r0, [sp, #44]	; 0x2c
   2fdf4:	tst	r0, #1
   2fdf8:	beq	2fe28 <__assert_fail@plt+0x1eaa4>
   2fdfc:	ldr	r0, [fp, #-128]	; 0xffffff80
   2fe00:	ldr	r1, [fp, #-132]	; 0xffffff7c
   2fe04:	add	r0, r1, r0
   2fe08:	str	r0, [fp, #-132]	; 0xffffff7c
   2fe0c:	movw	r0, #0
   2fe10:	strb	r0, [fp, #-136]	; 0xffffff78
   2fe14:	ldr	r0, [fp, #-208]	; 0xffffff30
   2fe18:	mvn	r1, #0
   2fe1c:	add	r0, r0, r1
   2fe20:	str	r0, [fp, #-208]	; 0xffffff30
   2fe24:	b	2fd9c <__assert_fail@plt+0x1ea18>
   2fe28:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2fe2c:	str	r0, [fp, #-92]	; 0xffffffa4
   2fe30:	sub	r0, fp, #148	; 0x94
   2fe34:	bl	30ca8 <__assert_fail@plt+0x1f924>
   2fe38:	ldrb	r0, [fp, #-124]	; 0xffffff84
   2fe3c:	tst	r0, #1
   2fe40:	movw	r0, #0
   2fe44:	str	r0, [sp, #36]	; 0x24
   2fe48:	beq	2fe60 <__assert_fail@plt+0x1eadc>
   2fe4c:	ldr	r0, [fp, #-120]	; 0xffffff88
   2fe50:	cmp	r0, #0
   2fe54:	movw	r0, #0
   2fe58:	moveq	r0, #1
   2fe5c:	str	r0, [sp, #36]	; 0x24
   2fe60:	ldr	r0, [sp, #36]	; 0x24
   2fe64:	mvn	r1, #0
   2fe68:	eor	r0, r0, r1
   2fe6c:	tst	r0, #1
   2fe70:	bne	2feac <__assert_fail@plt+0x1eb28>
   2fe74:	ldr	r0, [fp, #-16]
   2fe78:	ldr	r1, [fp, #-20]	; 0xffffffec
   2fe7c:	sub	r2, fp, #212	; 0xd4
   2fe80:	bl	30394 <__assert_fail@plt+0x1f010>
   2fe84:	and	r0, r0, #1
   2fe88:	strb	r0, [fp, #-213]	; 0xffffff2b
   2fe8c:	ldrb	r0, [fp, #-213]	; 0xffffff2b
   2fe90:	tst	r0, #1
   2fe94:	beq	2fea4 <__assert_fail@plt+0x1eb20>
   2fe98:	ldr	r0, [fp, #-212]	; 0xffffff2c
   2fe9c:	str	r0, [fp, #-12]
   2fea0:	b	30388 <__assert_fail@plt+0x1f004>
   2fea4:	movw	r0, #0
   2fea8:	strb	r0, [fp, #-77]	; 0xffffffb3
   2feac:	b	2feb0 <__assert_fail@plt+0x1eb2c>
   2feb0:	ldr	r0, [fp, #-84]	; 0xffffffac
   2feb4:	add	r0, r0, #1
   2feb8:	str	r0, [fp, #-84]	; 0xffffffac
   2febc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2fec0:	add	r0, r0, #1
   2fec4:	str	r0, [fp, #-88]	; 0xffffffa8
   2fec8:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   2fecc:	tst	r0, #1
   2fed0:	beq	2fef4 <__assert_fail@plt+0x1eb70>
   2fed4:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   2fed8:	tst	r0, #1
   2fedc:	beq	2fef4 <__assert_fail@plt+0x1eb70>
   2fee0:	ldr	r0, [fp, #-176]	; 0xffffff50
   2fee4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2fee8:	cmp	r0, r1
   2feec:	beq	2ff1c <__assert_fail@plt+0x1eb98>
   2fef0:	b	3011c <__assert_fail@plt+0x1ed98>
   2fef4:	ldr	r0, [fp, #-184]	; 0xffffff48
   2fef8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2fefc:	cmp	r0, r1
   2ff00:	bne	3011c <__assert_fail@plt+0x1ed98>
   2ff04:	ldr	r0, [fp, #-188]	; 0xffffff44
   2ff08:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2ff0c:	ldr	r2, [fp, #-184]	; 0xffffff48
   2ff10:	bl	11144 <memcmp@plt>
   2ff14:	cmp	r0, #0
   2ff18:	bne	3011c <__assert_fail@plt+0x1ed98>
   2ff1c:	add	r0, sp, #168	; 0xa8
   2ff20:	sub	r1, fp, #204	; 0xcc
   2ff24:	movw	r2, #56	; 0x38
   2ff28:	bl	1112c <memcpy@plt>
   2ff2c:	ldr	r0, [sp, #188]	; 0xbc
   2ff30:	ldr	r1, [sp, #184]	; 0xb8
   2ff34:	add	r0, r1, r0
   2ff38:	str	r0, [sp, #184]	; 0xb8
   2ff3c:	movw	r0, #0
   2ff40:	strb	r0, [sp, #180]	; 0xb4
   2ff44:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ff48:	str	r1, [sp, #128]	; 0x80
   2ff4c:	strb	r0, [sp, #112]	; 0x70
   2ff50:	add	r1, sp, #112	; 0x70
   2ff54:	add	r2, r1, #4
   2ff58:	str	r0, [sp, #32]
   2ff5c:	mov	r0, r2
   2ff60:	ldr	r2, [sp, #32]
   2ff64:	and	r3, r2, #255	; 0xff
   2ff68:	str	r1, [sp, #28]
   2ff6c:	mov	r1, r3
   2ff70:	movw	r2, #8
   2ff74:	bl	112b8 <memset@plt>
   2ff78:	ldr	r0, [sp, #32]
   2ff7c:	strb	r0, [sp, #124]	; 0x7c
   2ff80:	ldr	r0, [sp, #28]
   2ff84:	bl	30ca8 <__assert_fail@plt+0x1f924>
   2ff88:	ldrb	r0, [sp, #136]	; 0x88
   2ff8c:	tst	r0, #1
   2ff90:	movw	r0, #0
   2ff94:	str	r0, [sp, #24]
   2ff98:	beq	2ffb0 <__assert_fail@plt+0x1ec2c>
   2ff9c:	ldr	r0, [sp, #140]	; 0x8c
   2ffa0:	cmp	r0, #0
   2ffa4:	movw	r0, #0
   2ffa8:	moveq	r0, #1
   2ffac:	str	r0, [sp, #24]
   2ffb0:	ldr	r0, [sp, #24]
   2ffb4:	mvn	r1, #0
   2ffb8:	eor	r0, r0, r1
   2ffbc:	tst	r0, #1
   2ffc0:	bne	2ffc8 <__assert_fail@plt+0x1ec44>
   2ffc4:	bl	1136c <abort@plt>
   2ffc8:	ldr	r0, [sp, #132]	; 0x84
   2ffcc:	ldr	r1, [sp, #128]	; 0x80
   2ffd0:	add	r0, r1, r0
   2ffd4:	str	r0, [sp, #128]	; 0x80
   2ffd8:	movw	r0, #0
   2ffdc:	strb	r0, [sp, #124]	; 0x7c
   2ffe0:	add	r0, sp, #112	; 0x70
   2ffe4:	bl	30ca8 <__assert_fail@plt+0x1f924>
   2ffe8:	ldrb	r0, [sp, #136]	; 0x88
   2ffec:	tst	r0, #1
   2fff0:	movw	r0, #0
   2fff4:	str	r0, [sp, #20]
   2fff8:	beq	30010 <__assert_fail@plt+0x1ec8c>
   2fffc:	ldr	r0, [sp, #140]	; 0x8c
   30000:	cmp	r0, #0
   30004:	movw	r0, #0
   30008:	moveq	r0, #1
   3000c:	str	r0, [sp, #20]
   30010:	ldr	r0, [sp, #20]
   30014:	mvn	r1, #0
   30018:	eor	r0, r0, r1
   3001c:	tst	r0, #1
   30020:	bne	30030 <__assert_fail@plt+0x1ecac>
   30024:	ldr	r0, [fp, #-188]	; 0xffffff44
   30028:	str	r0, [fp, #-12]
   3002c:	b	30388 <__assert_fail@plt+0x1f004>
   30030:	add	r0, sp, #168	; 0xa8
   30034:	bl	30ca8 <__assert_fail@plt+0x1f924>
   30038:	ldrb	r0, [sp, #192]	; 0xc0
   3003c:	tst	r0, #1
   30040:	movw	r0, #0
   30044:	str	r0, [sp, #16]
   30048:	beq	30060 <__assert_fail@plt+0x1ecdc>
   3004c:	ldr	r0, [sp, #196]	; 0xc4
   30050:	cmp	r0, #0
   30054:	movw	r0, #0
   30058:	moveq	r0, #1
   3005c:	str	r0, [sp, #16]
   30060:	ldr	r0, [sp, #16]
   30064:	mvn	r1, #0
   30068:	eor	r0, r0, r1
   3006c:	tst	r0, #1
   30070:	bne	30080 <__assert_fail@plt+0x1ecfc>
   30074:	movw	r0, #0
   30078:	str	r0, [fp, #-12]
   3007c:	b	30388 <__assert_fail@plt+0x1f004>
   30080:	ldr	r0, [fp, #-88]	; 0xffffffa8
   30084:	add	r0, r0, #1
   30088:	str	r0, [fp, #-88]	; 0xffffffa8
   3008c:	ldrb	r0, [sp, #192]	; 0xc0
   30090:	tst	r0, #1
   30094:	beq	300b8 <__assert_fail@plt+0x1ed34>
   30098:	ldrb	r0, [sp, #136]	; 0x88
   3009c:	tst	r0, #1
   300a0:	beq	300b8 <__assert_fail@plt+0x1ed34>
   300a4:	ldr	r0, [sp, #196]	; 0xc4
   300a8:	ldr	r1, [sp, #140]	; 0x8c
   300ac:	cmp	r0, r1
   300b0:	beq	300e4 <__assert_fail@plt+0x1ed60>
   300b4:	b	300e0 <__assert_fail@plt+0x1ed5c>
   300b8:	ldr	r0, [sp, #188]	; 0xbc
   300bc:	ldr	r1, [sp, #132]	; 0x84
   300c0:	cmp	r0, r1
   300c4:	bne	300e0 <__assert_fail@plt+0x1ed5c>
   300c8:	ldr	r0, [sp, #184]	; 0xb8
   300cc:	ldr	r1, [sp, #128]	; 0x80
   300d0:	ldr	r2, [sp, #188]	; 0xbc
   300d4:	bl	11144 <memcmp@plt>
   300d8:	cmp	r0, #0
   300dc:	beq	300e4 <__assert_fail@plt+0x1ed60>
   300e0:	b	30118 <__assert_fail@plt+0x1ed94>
   300e4:	b	300e8 <__assert_fail@plt+0x1ed64>
   300e8:	ldr	r0, [sp, #188]	; 0xbc
   300ec:	ldr	r1, [sp, #184]	; 0xb8
   300f0:	add	r0, r1, r0
   300f4:	str	r0, [sp, #184]	; 0xb8
   300f8:	movw	r0, #0
   300fc:	strb	r0, [sp, #180]	; 0xb4
   30100:	ldr	r1, [sp, #132]	; 0x84
   30104:	ldr	r2, [sp, #128]	; 0x80
   30108:	add	r1, r2, r1
   3010c:	str	r1, [sp, #128]	; 0x80
   30110:	strb	r0, [sp, #124]	; 0x7c
   30114:	b	2ffe0 <__assert_fail@plt+0x1ec5c>
   30118:	b	3011c <__assert_fail@plt+0x1ed98>
   3011c:	b	30120 <__assert_fail@plt+0x1ed9c>
   30120:	ldr	r0, [fp, #-184]	; 0xffffff48
   30124:	ldr	r1, [fp, #-188]	; 0xffffff44
   30128:	add	r0, r1, r0
   3012c:	str	r0, [fp, #-188]	; 0xffffff44
   30130:	movw	r0, #0
   30134:	strb	r0, [fp, #-192]	; 0xffffff40
   30138:	b	2fd0c <__assert_fail@plt+0x1e988>
   3013c:	ldr	r0, [fp, #-16]
   30140:	str	r0, [fp, #-12]
   30144:	b	30388 <__assert_fail@plt+0x1f004>
   30148:	ldr	r0, [fp, #-20]	; 0xffffffec
   3014c:	ldrb	r0, [r0]
   30150:	cmp	r0, #0
   30154:	beq	30380 <__assert_fail@plt+0x1effc>
   30158:	movw	r0, #1
   3015c:	strb	r0, [sp, #111]	; 0x6f
   30160:	movw	r0, #0
   30164:	str	r0, [sp, #104]	; 0x68
   30168:	str	r0, [sp, #100]	; 0x64
   3016c:	str	r0, [sp, #96]	; 0x60
   30170:	ldr	r0, [fp, #-20]	; 0xffffffec
   30174:	str	r0, [sp, #92]	; 0x5c
   30178:	ldr	r0, [fp, #-20]	; 0xffffffec
   3017c:	add	r1, r0, #1
   30180:	str	r1, [fp, #-20]	; 0xffffffec
   30184:	ldrb	r0, [r0]
   30188:	strb	r0, [sp, #91]	; 0x5b
   3018c:	ldr	r0, [fp, #-16]
   30190:	ldrb	r0, [r0]
   30194:	cmp	r0, #0
   30198:	bne	301a8 <__assert_fail@plt+0x1ee24>
   3019c:	movw	r0, #0
   301a0:	str	r0, [fp, #-12]
   301a4:	b	30388 <__assert_fail@plt+0x1f004>
   301a8:	ldrb	r0, [sp, #111]	; 0x6f
   301ac:	tst	r0, #1
   301b0:	beq	302a8 <__assert_fail@plt+0x1ef24>
   301b4:	ldr	r0, [sp, #104]	; 0x68
   301b8:	cmp	r0, #10
   301bc:	bcc	302a8 <__assert_fail@plt+0x1ef24>
   301c0:	ldr	r0, [sp, #100]	; 0x64
   301c4:	ldr	r1, [sp, #104]	; 0x68
   301c8:	movw	r2, #5
   301cc:	mul	r1, r1, r2
   301d0:	cmp	r0, r1
   301d4:	bcc	302a8 <__assert_fail@plt+0x1ef24>
   301d8:	ldr	r0, [sp, #92]	; 0x5c
   301dc:	movw	r1, #0
   301e0:	cmp	r0, r1
   301e4:	beq	30228 <__assert_fail@plt+0x1eea4>
   301e8:	ldr	r0, [sp, #92]	; 0x5c
   301ec:	ldr	r1, [sp, #100]	; 0x64
   301f0:	ldr	r2, [sp, #96]	; 0x60
   301f4:	sub	r1, r1, r2
   301f8:	bl	112f4 <strnlen@plt>
   301fc:	ldr	r1, [sp, #92]	; 0x5c
   30200:	add	r0, r1, r0
   30204:	str	r0, [sp, #92]	; 0x5c
   30208:	ldr	r0, [sp, #92]	; 0x5c
   3020c:	ldrb	r0, [r0]
   30210:	cmp	r0, #0
   30214:	bne	30220 <__assert_fail@plt+0x1ee9c>
   30218:	movw	r0, #0
   3021c:	str	r0, [sp, #92]	; 0x5c
   30220:	ldr	r0, [sp, #100]	; 0x64
   30224:	str	r0, [sp, #96]	; 0x60
   30228:	ldr	r0, [sp, #92]	; 0x5c
   3022c:	movw	r1, #0
   30230:	cmp	r0, r1
   30234:	bne	302a4 <__assert_fail@plt+0x1ef20>
   30238:	ldr	r0, [fp, #-16]
   3023c:	ldr	r1, [fp, #-20]	; 0xffffffec
   30240:	mvn	r2, #0
   30244:	add	r1, r1, r2
   30248:	ldr	r3, [fp, #-20]	; 0xffffffec
   3024c:	add	r2, r3, r2
   30250:	str	r0, [sp, #12]
   30254:	mov	r0, r2
   30258:	str	r1, [sp, #8]
   3025c:	bl	11270 <strlen@plt>
   30260:	ldr	r1, [sp, #12]
   30264:	str	r0, [sp, #4]
   30268:	mov	r0, r1
   3026c:	ldr	r1, [sp, #8]
   30270:	ldr	r2, [sp, #4]
   30274:	add	r3, sp, #84	; 0x54
   30278:	bl	309ec <__assert_fail@plt+0x1f668>
   3027c:	and	r0, r0, #1
   30280:	strb	r0, [sp, #83]	; 0x53
   30284:	ldrb	r0, [sp, #83]	; 0x53
   30288:	tst	r0, #1
   3028c:	beq	3029c <__assert_fail@plt+0x1ef18>
   30290:	ldr	r0, [sp, #84]	; 0x54
   30294:	str	r0, [fp, #-12]
   30298:	b	30388 <__assert_fail@plt+0x1f004>
   3029c:	movw	r0, #0
   302a0:	strb	r0, [sp, #111]	; 0x6f
   302a4:	b	302a8 <__assert_fail@plt+0x1ef24>
   302a8:	ldr	r0, [sp, #104]	; 0x68
   302ac:	add	r0, r0, #1
   302b0:	str	r0, [sp, #104]	; 0x68
   302b4:	ldr	r0, [sp, #100]	; 0x64
   302b8:	add	r0, r0, #1
   302bc:	str	r0, [sp, #100]	; 0x64
   302c0:	ldr	r0, [fp, #-16]
   302c4:	ldrb	r0, [r0]
   302c8:	ldrb	r1, [sp, #91]	; 0x5b
   302cc:	cmp	r0, r1
   302d0:	bne	3036c <__assert_fail@plt+0x1efe8>
   302d4:	ldr	r0, [fp, #-16]
   302d8:	add	r0, r0, #1
   302dc:	str	r0, [sp, #76]	; 0x4c
   302e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   302e4:	str	r0, [sp, #72]	; 0x48
   302e8:	ldr	r0, [sp, #72]	; 0x48
   302ec:	ldrb	r0, [r0]
   302f0:	cmp	r0, #0
   302f4:	bne	30304 <__assert_fail@plt+0x1ef80>
   302f8:	ldr	r0, [fp, #-16]
   302fc:	str	r0, [fp, #-12]
   30300:	b	30388 <__assert_fail@plt+0x1f004>
   30304:	ldr	r0, [sp, #76]	; 0x4c
   30308:	ldrb	r0, [r0]
   3030c:	cmp	r0, #0
   30310:	bne	30320 <__assert_fail@plt+0x1ef9c>
   30314:	movw	r0, #0
   30318:	str	r0, [fp, #-12]
   3031c:	b	30388 <__assert_fail@plt+0x1f004>
   30320:	ldr	r0, [sp, #100]	; 0x64
   30324:	add	r0, r0, #1
   30328:	str	r0, [sp, #100]	; 0x64
   3032c:	ldr	r0, [sp, #76]	; 0x4c
   30330:	ldrb	r0, [r0]
   30334:	ldr	r1, [sp, #72]	; 0x48
   30338:	ldrb	r1, [r1]
   3033c:	cmp	r0, r1
   30340:	beq	30348 <__assert_fail@plt+0x1efc4>
   30344:	b	30368 <__assert_fail@plt+0x1efe4>
   30348:	b	3034c <__assert_fail@plt+0x1efc8>
   3034c:	ldr	r0, [sp, #76]	; 0x4c
   30350:	add	r0, r0, #1
   30354:	str	r0, [sp, #76]	; 0x4c
   30358:	ldr	r0, [sp, #72]	; 0x48
   3035c:	add	r0, r0, #1
   30360:	str	r0, [sp, #72]	; 0x48
   30364:	b	302e8 <__assert_fail@plt+0x1ef64>
   30368:	b	3036c <__assert_fail@plt+0x1efe8>
   3036c:	b	30370 <__assert_fail@plt+0x1efec>
   30370:	ldr	r0, [fp, #-16]
   30374:	add	r0, r0, #1
   30378:	str	r0, [fp, #-16]
   3037c:	b	3018c <__assert_fail@plt+0x1ee08>
   30380:	ldr	r0, [fp, #-16]
   30384:	str	r0, [fp, #-12]
   30388:	ldr	r0, [fp, #-12]
   3038c:	sub	sp, fp, #8
   30390:	pop	{r4, r5, fp, pc}
   30394:	push	{r4, r5, fp, lr}
   30398:	add	fp, sp, #8
   3039c:	sub	sp, sp, #264	; 0x108
   303a0:	str	r0, [fp, #-16]
   303a4:	str	r1, [fp, #-20]	; 0xffffffec
   303a8:	str	r2, [fp, #-24]	; 0xffffffe8
   303ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   303b0:	bl	334d8 <__assert_fail@plt+0x22154>
   303b4:	ldr	r1, [pc, #1580]	; 309e8 <__assert_fail@plt+0x1f664>
   303b8:	str	r0, [fp, #-28]	; 0xffffffe4
   303bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   303c0:	cmp	r1, r0
   303c4:	bcs	303d4 <__assert_fail@plt+0x1f050>
   303c8:	movw	r0, #0
   303cc:	str	r0, [fp, #-240]	; 0xffffff10
   303d0:	b	3043c <__assert_fail@plt+0x1f0b8>
   303d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   303d8:	movw	r1, #44	; 0x2c
   303dc:	mul	r0, r0, r1
   303e0:	movw	r1, #4017	; 0xfb1
   303e4:	cmp	r0, r1
   303e8:	bcs	30420 <__assert_fail@plt+0x1f09c>
   303ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   303f0:	mov	r1, #44	; 0x2c
   303f4:	mul	r0, r0, r1
   303f8:	add	r0, r0, #22
   303fc:	bic	r0, r0, #6
   30400:	mov	r1, sp
   30404:	sub	r0, r1, r0
   30408:	mov	sp, r0
   3040c:	add	r0, r0, #15
   30410:	mvn	r1, #15
   30414:	and	r0, r0, r1
   30418:	str	r0, [fp, #-244]	; 0xffffff0c
   3041c:	b	30434 <__assert_fail@plt+0x1f0b0>
   30420:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30424:	movw	r1, #44	; 0x2c
   30428:	mul	r0, r0, r1
   3042c:	bl	331e8 <__assert_fail@plt+0x21e64>
   30430:	str	r0, [fp, #-244]	; 0xffffff0c
   30434:	ldr	r0, [fp, #-244]	; 0xffffff0c
   30438:	str	r0, [fp, #-240]	; 0xffffff10
   3043c:	ldr	r0, [fp, #-240]	; 0xffffff10
   30440:	str	r0, [fp, #-40]	; 0xffffffd8
   30444:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30448:	movw	r1, #0
   3044c:	cmp	r0, r1
   30450:	bne	30464 <__assert_fail@plt+0x1f0e0>
   30454:	movw	r0, #0
   30458:	and	r0, r0, #1
   3045c:	strb	r0, [fp, #-9]
   30460:	b	309d8 <__assert_fail@plt+0x1f654>
   30464:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30468:	str	r0, [fp, #-32]	; 0xffffffe0
   3046c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30470:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30474:	movw	r2, #40	; 0x28
   30478:	mul	r1, r1, r2
   3047c:	add	r0, r0, r1
   30480:	str	r0, [fp, #-44]	; 0xffffffd4
   30484:	ldr	r0, [fp, #-44]	; 0xffffffd4
   30488:	str	r0, [fp, #-36]	; 0xffffffdc
   3048c:	movw	r0, #0
   30490:	str	r0, [fp, #-104]	; 0xffffff98
   30494:	ldr	r0, [fp, #-20]	; 0xffffffec
   30498:	str	r0, [fp, #-84]	; 0xffffffac
   3049c:	movw	r0, #0
   304a0:	strb	r0, [fp, #-100]	; 0xffffff9c
   304a4:	sub	r1, fp, #100	; 0x64
   304a8:	add	r1, r1, #4
   304ac:	str	r0, [fp, #-248]	; 0xffffff08
   304b0:	mov	r0, r1
   304b4:	ldr	r1, [fp, #-248]	; 0xffffff08
   304b8:	and	r1, r1, #255	; 0xff
   304bc:	movw	r2, #8
   304c0:	bl	112b8 <memset@plt>
   304c4:	ldr	r0, [fp, #-248]	; 0xffffff08
   304c8:	strb	r0, [fp, #-88]	; 0xffffffa8
   304cc:	sub	r0, fp, #100	; 0x64
   304d0:	bl	30ca8 <__assert_fail@plt+0x1f924>
   304d4:	ldrb	r0, [fp, #-76]	; 0xffffffb4
   304d8:	tst	r0, #1
   304dc:	movw	r0, #0
   304e0:	str	r0, [fp, #-252]	; 0xffffff04
   304e4:	beq	304fc <__assert_fail@plt+0x1f178>
   304e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   304ec:	cmp	r0, #0
   304f0:	movw	r0, #0
   304f4:	moveq	r0, #1
   304f8:	str	r0, [fp, #-252]	; 0xffffff04
   304fc:	ldr	r0, [fp, #-252]	; 0xffffff04
   30500:	mvn	r1, #0
   30504:	eor	r0, r0, r1
   30508:	tst	r0, #1
   3050c:	beq	30558 <__assert_fail@plt+0x1f1d4>
   30510:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30514:	ldr	r1, [fp, #-104]	; 0xffffff98
   30518:	movw	r2, #40	; 0x28
   3051c:	mul	r1, r1, r2
   30520:	add	r0, r0, r1
   30524:	sub	r1, fp, #100	; 0x64
   30528:	add	r1, r1, #16
   3052c:	bl	333d8 <__assert_fail@plt+0x22054>
   30530:	ldr	r0, [fp, #-80]	; 0xffffffb0
   30534:	ldr	r1, [fp, #-84]	; 0xffffffac
   30538:	add	r0, r1, r0
   3053c:	str	r0, [fp, #-84]	; 0xffffffac
   30540:	movw	r0, #0
   30544:	strb	r0, [fp, #-88]	; 0xffffffa8
   30548:	ldr	r0, [fp, #-104]	; 0xffffff98
   3054c:	add	r0, r0, #1
   30550:	str	r0, [fp, #-104]	; 0xffffff98
   30554:	b	304cc <__assert_fail@plt+0x1f148>
   30558:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3055c:	movw	r1, #1
   30560:	str	r1, [r0, #4]
   30564:	movw	r0, #0
   30568:	str	r0, [fp, #-112]	; 0xffffff90
   3056c:	movw	r0, #2
   30570:	str	r0, [fp, #-108]	; 0xffffff94
   30574:	ldr	r0, [fp, #-108]	; 0xffffff94
   30578:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3057c:	cmp	r0, r1
   30580:	bcs	306d8 <__assert_fail@plt+0x1f354>
   30584:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30588:	ldr	r1, [fp, #-108]	; 0xffffff94
   3058c:	sub	r1, r1, #1
   30590:	movw	r2, #40	; 0x28
   30594:	mul	r1, r1, r2
   30598:	add	r0, r0, r1
   3059c:	str	r0, [fp, #-116]	; 0xffffff8c
   305a0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   305a4:	ldrb	r0, [r0, #8]
   305a8:	tst	r0, #1
   305ac:	beq	305fc <__assert_fail@plt+0x1f278>
   305b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   305b4:	ldr	r1, [fp, #-112]	; 0xffffff90
   305b8:	movw	r2, #40	; 0x28
   305bc:	mul	r1, r1, r2
   305c0:	add	r0, r0, r1
   305c4:	ldrb	r0, [r0, #8]
   305c8:	tst	r0, #1
   305cc:	beq	305fc <__assert_fail@plt+0x1f278>
   305d0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   305d4:	ldr	r0, [r0, #12]
   305d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   305dc:	ldr	r2, [fp, #-112]	; 0xffffff90
   305e0:	movw	r3, #40	; 0x28
   305e4:	mul	r2, r2, r3
   305e8:	add	r1, r1, r2
   305ec:	ldr	r1, [r1, #12]
   305f0:	cmp	r0, r1
   305f4:	beq	30658 <__assert_fail@plt+0x1f2d4>
   305f8:	b	30680 <__assert_fail@plt+0x1f2fc>
   305fc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30600:	ldr	r0, [r0, #4]
   30604:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30608:	ldr	r2, [fp, #-112]	; 0xffffff90
   3060c:	movw	r3, #40	; 0x28
   30610:	mul	r2, r2, r3
   30614:	add	r1, r1, r2
   30618:	ldr	r1, [r1, #4]
   3061c:	cmp	r0, r1
   30620:	bne	30680 <__assert_fail@plt+0x1f2fc>
   30624:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30628:	ldr	r0, [r0]
   3062c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30630:	ldr	r2, [fp, #-112]	; 0xffffff90
   30634:	movw	r3, #40	; 0x28
   30638:	mul	r2, r2, r3
   3063c:	add	r1, r1, r2
   30640:	ldr	r1, [r1]
   30644:	ldr	r2, [fp, #-116]	; 0xffffff8c
   30648:	ldr	r2, [r2, #4]
   3064c:	bl	11144 <memcmp@plt>
   30650:	cmp	r0, #0
   30654:	bne	30680 <__assert_fail@plt+0x1f2fc>
   30658:	ldr	r0, [fp, #-108]	; 0xffffff94
   3065c:	ldr	r1, [fp, #-112]	; 0xffffff90
   30660:	add	r1, r1, #1
   30664:	str	r1, [fp, #-112]	; 0xffffff90
   30668:	sub	r0, r0, r1
   3066c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30670:	ldr	r2, [fp, #-108]	; 0xffffff94
   30674:	add	r1, r1, r2, lsl #2
   30678:	str	r0, [r1]
   3067c:	b	306c4 <__assert_fail@plt+0x1f340>
   30680:	ldr	r0, [fp, #-112]	; 0xffffff90
   30684:	cmp	r0, #0
   30688:	bne	306a4 <__assert_fail@plt+0x1f320>
   3068c:	ldr	r0, [fp, #-108]	; 0xffffff94
   30690:	mov	r1, r0
   30694:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30698:	add	r0, r2, r0, lsl #2
   3069c:	str	r1, [r0]
   306a0:	b	306c4 <__assert_fail@plt+0x1f340>
   306a4:	ldr	r0, [fp, #-112]	; 0xffffff90
   306a8:	mov	r1, r0
   306ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   306b0:	add	r0, r2, r0, lsl #2
   306b4:	ldr	r0, [r0]
   306b8:	sub	r0, r1, r0
   306bc:	str	r0, [fp, #-112]	; 0xffffff90
   306c0:	b	305a0 <__assert_fail@plt+0x1f21c>
   306c4:	b	306c8 <__assert_fail@plt+0x1f344>
   306c8:	ldr	r0, [fp, #-108]	; 0xffffff94
   306cc:	add	r0, r0, #1
   306d0:	str	r0, [fp, #-108]	; 0xffffff94
   306d4:	b	30574 <__assert_fail@plt+0x1f1f0>
   306d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   306dc:	movw	r1, #0
   306e0:	str	r1, [r0]
   306e4:	str	r1, [fp, #-120]	; 0xffffff88
   306e8:	ldr	r0, [fp, #-16]
   306ec:	str	r0, [fp, #-160]	; 0xffffff60
   306f0:	movw	r0, #0
   306f4:	strb	r0, [fp, #-176]	; 0xffffff50
   306f8:	sub	r1, fp, #176	; 0xb0
   306fc:	add	r1, r1, #4
   30700:	str	r0, [fp, #-256]	; 0xffffff00
   30704:	mov	r0, r1
   30708:	ldr	r1, [fp, #-256]	; 0xffffff00
   3070c:	and	r1, r1, #255	; 0xff
   30710:	movw	r2, #8
   30714:	str	r2, [fp, #-260]	; 0xfffffefc
   30718:	bl	112b8 <memset@plt>
   3071c:	ldr	r0, [fp, #-256]	; 0xffffff00
   30720:	strb	r0, [fp, #-164]	; 0xffffff5c
   30724:	ldr	r1, [fp, #-16]
   30728:	str	r1, [fp, #-216]	; 0xffffff28
   3072c:	strb	r0, [fp, #-232]	; 0xffffff18
   30730:	sub	r1, fp, #232	; 0xe8
   30734:	add	r1, r1, #4
   30738:	mov	r0, r1
   3073c:	ldr	r1, [fp, #-256]	; 0xffffff00
   30740:	and	r1, r1, #255	; 0xff
   30744:	ldr	r2, [fp, #-260]	; 0xfffffefc
   30748:	bl	112b8 <memset@plt>
   3074c:	ldr	r0, [fp, #-256]	; 0xffffff00
   30750:	strb	r0, [fp, #-220]	; 0xffffff24
   30754:	sub	r0, fp, #232	; 0xe8
   30758:	bl	30ca8 <__assert_fail@plt+0x1f924>
   3075c:	ldrb	r0, [fp, #-208]	; 0xffffff30
   30760:	tst	r0, #1
   30764:	movw	r0, #0
   30768:	str	r0, [fp, #-264]	; 0xfffffef8
   3076c:	beq	30784 <__assert_fail@plt+0x1f400>
   30770:	ldr	r0, [fp, #-204]	; 0xffffff34
   30774:	cmp	r0, #0
   30778:	movw	r0, #0
   3077c:	moveq	r0, #1
   30780:	str	r0, [fp, #-264]	; 0xfffffef8
   30784:	ldr	r0, [fp, #-264]	; 0xfffffef8
   30788:	mvn	r1, #0
   3078c:	eor	r0, r0, r1
   30790:	tst	r0, #1
   30794:	beq	309c4 <__assert_fail@plt+0x1f640>
   30798:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3079c:	ldr	r1, [fp, #-120]	; 0xffffff88
   307a0:	movw	r2, #40	; 0x28
   307a4:	mul	r1, r1, r2
   307a8:	add	r0, r0, r1
   307ac:	ldrb	r0, [r0, #8]
   307b0:	tst	r0, #1
   307b4:	beq	307ec <__assert_fail@plt+0x1f468>
   307b8:	ldrb	r0, [fp, #-208]	; 0xffffff30
   307bc:	tst	r0, #1
   307c0:	beq	307ec <__assert_fail@plt+0x1f468>
   307c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   307c8:	ldr	r1, [fp, #-120]	; 0xffffff88
   307cc:	movw	r2, #40	; 0x28
   307d0:	mul	r1, r1, r2
   307d4:	add	r0, r0, r1
   307d8:	ldr	r0, [r0, #12]
   307dc:	ldr	r1, [fp, #-204]	; 0xffffff34
   307e0:	cmp	r0, r1
   307e4:	beq	3084c <__assert_fail@plt+0x1f4c8>
   307e8:	b	30894 <__assert_fail@plt+0x1f510>
   307ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   307f0:	ldr	r1, [fp, #-120]	; 0xffffff88
   307f4:	movw	r2, #40	; 0x28
   307f8:	mul	r1, r1, r2
   307fc:	add	r0, r0, r1
   30800:	ldr	r0, [r0, #4]
   30804:	ldr	r1, [fp, #-212]	; 0xffffff2c
   30808:	cmp	r0, r1
   3080c:	bne	30894 <__assert_fail@plt+0x1f510>
   30810:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30814:	ldr	r1, [fp, #-120]	; 0xffffff88
   30818:	movw	r2, #40	; 0x28
   3081c:	mul	r1, r1, r2
   30820:	add	r0, r0, r1
   30824:	ldr	r0, [r0]
   30828:	ldr	r1, [fp, #-216]	; 0xffffff28
   3082c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30830:	ldr	ip, [fp, #-120]	; 0xffffff88
   30834:	mul	r2, ip, r2
   30838:	add	r2, r3, r2
   3083c:	ldr	r2, [r2, #4]
   30840:	bl	11144 <memcmp@plt>
   30844:	cmp	r0, #0
   30848:	bne	30894 <__assert_fail@plt+0x1f510>
   3084c:	ldr	r0, [fp, #-120]	; 0xffffff88
   30850:	add	r0, r0, #1
   30854:	str	r0, [fp, #-120]	; 0xffffff88
   30858:	ldr	r0, [fp, #-212]	; 0xffffff2c
   3085c:	ldr	r1, [fp, #-216]	; 0xffffff28
   30860:	add	r0, r1, r0
   30864:	str	r0, [fp, #-216]	; 0xffffff28
   30868:	movw	r0, #0
   3086c:	strb	r0, [fp, #-220]	; 0xffffff24
   30870:	ldr	r0, [fp, #-120]	; 0xffffff88
   30874:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30878:	cmp	r0, r1
   3087c:	bne	30890 <__assert_fail@plt+0x1f50c>
   30880:	ldr	r0, [fp, #-160]	; 0xffffff60
   30884:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30888:	str	r0, [r1]
   3088c:	b	309c4 <__assert_fail@plt+0x1f640>
   30890:	b	309c0 <__assert_fail@plt+0x1f63c>
   30894:	ldr	r0, [fp, #-120]	; 0xffffff88
   30898:	cmp	r0, #0
   3089c:	bls	30948 <__assert_fail@plt+0x1f5c4>
   308a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   308a4:	ldr	r1, [fp, #-120]	; 0xffffff88
   308a8:	add	r0, r0, r1, lsl #2
   308ac:	ldr	r0, [r0]
   308b0:	str	r0, [fp, #-236]	; 0xffffff14
   308b4:	ldr	r0, [fp, #-236]	; 0xffffff14
   308b8:	ldr	r1, [fp, #-120]	; 0xffffff88
   308bc:	sub	r0, r1, r0
   308c0:	str	r0, [fp, #-120]	; 0xffffff88
   308c4:	ldr	r0, [fp, #-236]	; 0xffffff14
   308c8:	cmp	r0, #0
   308cc:	bls	30944 <__assert_fail@plt+0x1f5c0>
   308d0:	sub	r0, fp, #176	; 0xb0
   308d4:	bl	30ca8 <__assert_fail@plt+0x1f924>
   308d8:	ldrb	r0, [fp, #-152]	; 0xffffff68
   308dc:	tst	r0, #1
   308e0:	movw	r0, #0
   308e4:	str	r0, [fp, #-268]	; 0xfffffef4
   308e8:	beq	30900 <__assert_fail@plt+0x1f57c>
   308ec:	ldr	r0, [fp, #-148]	; 0xffffff6c
   308f0:	cmp	r0, #0
   308f4:	movw	r0, #0
   308f8:	moveq	r0, #1
   308fc:	str	r0, [fp, #-268]	; 0xfffffef4
   30900:	ldr	r0, [fp, #-268]	; 0xfffffef4
   30904:	mvn	r1, #0
   30908:	eor	r0, r0, r1
   3090c:	tst	r0, #1
   30910:	bne	30918 <__assert_fail@plt+0x1f594>
   30914:	bl	1136c <abort@plt>
   30918:	ldr	r0, [fp, #-156]	; 0xffffff64
   3091c:	ldr	r1, [fp, #-160]	; 0xffffff60
   30920:	add	r0, r1, r0
   30924:	str	r0, [fp, #-160]	; 0xffffff60
   30928:	movw	r0, #0
   3092c:	strb	r0, [fp, #-164]	; 0xffffff5c
   30930:	ldr	r0, [fp, #-236]	; 0xffffff14
   30934:	mvn	r1, #0
   30938:	add	r0, r0, r1
   3093c:	str	r0, [fp, #-236]	; 0xffffff14
   30940:	b	308c4 <__assert_fail@plt+0x1f540>
   30944:	b	309bc <__assert_fail@plt+0x1f638>
   30948:	sub	r0, fp, #176	; 0xb0
   3094c:	bl	30ca8 <__assert_fail@plt+0x1f924>
   30950:	ldrb	r0, [fp, #-152]	; 0xffffff68
   30954:	tst	r0, #1
   30958:	movw	r0, #0
   3095c:	str	r0, [fp, #-272]	; 0xfffffef0
   30960:	beq	30978 <__assert_fail@plt+0x1f5f4>
   30964:	ldr	r0, [fp, #-148]	; 0xffffff6c
   30968:	cmp	r0, #0
   3096c:	movw	r0, #0
   30970:	moveq	r0, #1
   30974:	str	r0, [fp, #-272]	; 0xfffffef0
   30978:	ldr	r0, [fp, #-272]	; 0xfffffef0
   3097c:	mvn	r1, #0
   30980:	eor	r0, r0, r1
   30984:	tst	r0, #1
   30988:	bne	30990 <__assert_fail@plt+0x1f60c>
   3098c:	bl	1136c <abort@plt>
   30990:	ldr	r0, [fp, #-156]	; 0xffffff64
   30994:	ldr	r1, [fp, #-160]	; 0xffffff60
   30998:	add	r0, r1, r0
   3099c:	str	r0, [fp, #-160]	; 0xffffff60
   309a0:	movw	r0, #0
   309a4:	strb	r0, [fp, #-164]	; 0xffffff5c
   309a8:	ldr	r1, [fp, #-212]	; 0xffffff2c
   309ac:	ldr	r2, [fp, #-216]	; 0xffffff28
   309b0:	add	r1, r2, r1
   309b4:	str	r1, [fp, #-216]	; 0xffffff28
   309b8:	strb	r0, [fp, #-220]	; 0xffffff24
   309bc:	b	309c0 <__assert_fail@plt+0x1f63c>
   309c0:	b	30754 <__assert_fail@plt+0x1f3d0>
   309c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   309c8:	bl	3330c <__assert_fail@plt+0x21f88>
   309cc:	movw	r0, #1
   309d0:	and	r0, r0, #1
   309d4:	strb	r0, [fp, #-9]
   309d8:	ldrb	r0, [fp, #-9]
   309dc:	and	r0, r0, #1
   309e0:	sub	sp, fp, #8
   309e4:	pop	{r4, r5, fp, pc}
   309e8:	rsceq	fp, r8, #188416	; 0x2e000
   309ec:	push	{r4, r5, fp, lr}
   309f0:	add	fp, sp, #8
   309f4:	sub	sp, sp, #64	; 0x40
   309f8:	ldr	ip, [pc, #676]	; 30ca4 <__assert_fail@plt+0x1f920>
   309fc:	str	r0, [fp, #-16]
   30a00:	str	r1, [fp, #-20]	; 0xffffffec
   30a04:	str	r2, [fp, #-24]	; 0xffffffe8
   30a08:	str	r3, [fp, #-28]	; 0xffffffe4
   30a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30a10:	str	r0, [fp, #-32]	; 0xffffffe0
   30a14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30a18:	cmp	ip, r0
   30a1c:	bcs	30a2c <__assert_fail@plt+0x1f6a8>
   30a20:	movw	r0, #0
   30a24:	str	r0, [fp, #-64]	; 0xffffffc0
   30a28:	b	30a88 <__assert_fail@plt+0x1f704>
   30a2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30a30:	lsl	r0, r0, #2
   30a34:	movw	r1, #4017	; 0xfb1
   30a38:	cmp	r0, r1
   30a3c:	bcs	30a70 <__assert_fail@plt+0x1f6ec>
   30a40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30a44:	mov	r1, #22
   30a48:	add	r0, r1, r0, lsl #2
   30a4c:	bic	r0, r0, #6
   30a50:	mov	r1, sp
   30a54:	sub	r0, r1, r0
   30a58:	mov	sp, r0
   30a5c:	add	r0, r0, #15
   30a60:	mvn	r1, #15
   30a64:	and	r0, r0, r1
   30a68:	str	r0, [fp, #-68]	; 0xffffffbc
   30a6c:	b	30a80 <__assert_fail@plt+0x1f6fc>
   30a70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30a74:	lsl	r0, r0, #2
   30a78:	bl	331e8 <__assert_fail@plt+0x21e64>
   30a7c:	str	r0, [fp, #-68]	; 0xffffffbc
   30a80:	ldr	r0, [fp, #-68]	; 0xffffffbc
   30a84:	str	r0, [fp, #-64]	; 0xffffffc0
   30a88:	ldr	r0, [fp, #-64]	; 0xffffffc0
   30a8c:	str	r0, [fp, #-36]	; 0xffffffdc
   30a90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30a94:	movw	r1, #0
   30a98:	cmp	r0, r1
   30a9c:	bne	30ab0 <__assert_fail@plt+0x1f72c>
   30aa0:	movw	r0, #0
   30aa4:	and	r0, r0, #1
   30aa8:	strb	r0, [fp, #-9]
   30aac:	b	30c94 <__assert_fail@plt+0x1f910>
   30ab0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30ab4:	movw	r1, #1
   30ab8:	str	r1, [r0, #4]
   30abc:	movw	r0, #0
   30ac0:	str	r0, [fp, #-44]	; 0xffffffd4
   30ac4:	movw	r0, #2
   30ac8:	str	r0, [fp, #-40]	; 0xffffffd8
   30acc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30ad0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30ad4:	cmp	r0, r1
   30ad8:	bcs	30b90 <__assert_fail@plt+0x1f80c>
   30adc:	ldr	r0, [fp, #-20]	; 0xffffffec
   30ae0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   30ae4:	sub	r1, r1, #1
   30ae8:	add	r0, r0, r1
   30aec:	ldrb	r0, [r0]
   30af0:	strb	r0, [fp, #-45]	; 0xffffffd3
   30af4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   30af8:	ldr	r1, [fp, #-20]	; 0xffffffec
   30afc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30b00:	add	r1, r1, r2
   30b04:	ldrb	r1, [r1]
   30b08:	cmp	r0, r1
   30b0c:	bne	30b38 <__assert_fail@plt+0x1f7b4>
   30b10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30b14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   30b18:	add	r1, r1, #1
   30b1c:	str	r1, [fp, #-44]	; 0xffffffd4
   30b20:	sub	r0, r0, r1
   30b24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30b28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   30b2c:	add	r1, r1, r2, lsl #2
   30b30:	str	r0, [r1]
   30b34:	b	30b7c <__assert_fail@plt+0x1f7f8>
   30b38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   30b3c:	cmp	r0, #0
   30b40:	bne	30b5c <__assert_fail@plt+0x1f7d8>
   30b44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30b48:	mov	r1, r0
   30b4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30b50:	add	r0, r2, r0, lsl #2
   30b54:	str	r1, [r0]
   30b58:	b	30b7c <__assert_fail@plt+0x1f7f8>
   30b5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   30b60:	mov	r1, r0
   30b64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30b68:	add	r0, r2, r0, lsl #2
   30b6c:	ldr	r0, [r0]
   30b70:	sub	r0, r1, r0
   30b74:	str	r0, [fp, #-44]	; 0xffffffd4
   30b78:	b	30af4 <__assert_fail@plt+0x1f770>
   30b7c:	b	30b80 <__assert_fail@plt+0x1f7fc>
   30b80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30b84:	add	r0, r0, #1
   30b88:	str	r0, [fp, #-40]	; 0xffffffd8
   30b8c:	b	30acc <__assert_fail@plt+0x1f748>
   30b90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30b94:	movw	r1, #0
   30b98:	str	r1, [r0]
   30b9c:	str	r1, [fp, #-52]	; 0xffffffcc
   30ba0:	ldr	r0, [fp, #-16]
   30ba4:	str	r0, [fp, #-56]	; 0xffffffc8
   30ba8:	ldr	r0, [fp, #-16]
   30bac:	str	r0, [fp, #-60]	; 0xffffffc4
   30bb0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   30bb4:	ldrb	r0, [r0]
   30bb8:	cmp	r0, #0
   30bbc:	beq	30c80 <__assert_fail@plt+0x1f8fc>
   30bc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   30bc4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30bc8:	add	r0, r0, r1
   30bcc:	ldrb	r0, [r0]
   30bd0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   30bd4:	ldrb	r1, [r1]
   30bd8:	cmp	r0, r1
   30bdc:	bne	30c1c <__assert_fail@plt+0x1f898>
   30be0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   30be4:	add	r0, r0, #1
   30be8:	str	r0, [fp, #-52]	; 0xffffffcc
   30bec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   30bf0:	add	r0, r0, #1
   30bf4:	str	r0, [fp, #-60]	; 0xffffffc4
   30bf8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   30bfc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30c00:	cmp	r0, r1
   30c04:	bne	30c18 <__assert_fail@plt+0x1f894>
   30c08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   30c0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30c10:	str	r0, [r1]
   30c14:	b	30c80 <__assert_fail@plt+0x1f8fc>
   30c18:	b	30c7c <__assert_fail@plt+0x1f8f8>
   30c1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   30c20:	cmp	r0, #0
   30c24:	bls	30c60 <__assert_fail@plt+0x1f8dc>
   30c28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30c2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30c30:	ldr	r0, [r0, r1, lsl #2]
   30c34:	ldr	r1, [fp, #-56]	; 0xffffffc8
   30c38:	add	r0, r1, r0
   30c3c:	str	r0, [fp, #-56]	; 0xffffffc8
   30c40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30c44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30c48:	add	r0, r0, r1, lsl #2
   30c4c:	ldr	r0, [r0]
   30c50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30c54:	sub	r0, r1, r0
   30c58:	str	r0, [fp, #-52]	; 0xffffffcc
   30c5c:	b	30c78 <__assert_fail@plt+0x1f8f4>
   30c60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   30c64:	add	r0, r0, #1
   30c68:	str	r0, [fp, #-56]	; 0xffffffc8
   30c6c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   30c70:	add	r0, r0, #1
   30c74:	str	r0, [fp, #-60]	; 0xffffffc4
   30c78:	b	30c7c <__assert_fail@plt+0x1f8f8>
   30c7c:	b	30bb0 <__assert_fail@plt+0x1f82c>
   30c80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30c84:	bl	3330c <__assert_fail@plt+0x21f88>
   30c88:	movw	r0, #1
   30c8c:	and	r0, r0, #1
   30c90:	strb	r0, [fp, #-9]
   30c94:	ldrb	r0, [fp, #-9]
   30c98:	and	r0, r0, #1
   30c9c:	sub	sp, fp, #8
   30ca0:	pop	{r4, r5, fp, pc}
   30ca4:	svcne	0x00ffffff
   30ca8:	push	{fp, lr}
   30cac:	mov	fp, sp
   30cb0:	sub	sp, sp, #24
   30cb4:	str	r0, [fp, #-4]
   30cb8:	ldr	r0, [fp, #-4]
   30cbc:	ldrb	r0, [r0, #12]
   30cc0:	tst	r0, #1
   30cc4:	beq	30ccc <__assert_fail@plt+0x1f948>
   30cc8:	b	30f04 <__assert_fail@plt+0x1fb80>
   30ccc:	ldr	r0, [fp, #-4]
   30cd0:	ldrb	r0, [r0]
   30cd4:	tst	r0, #1
   30cd8:	beq	30ce0 <__assert_fail@plt+0x1f95c>
   30cdc:	b	30d6c <__assert_fail@plt+0x1f9e8>
   30ce0:	ldr	r0, [fp, #-4]
   30ce4:	ldr	r0, [r0, #16]
   30ce8:	ldrb	r0, [r0]
   30cec:	bl	33488 <__assert_fail@plt+0x22104>
   30cf0:	tst	r0, #1
   30cf4:	beq	30d28 <__assert_fail@plt+0x1f9a4>
   30cf8:	ldr	r0, [fp, #-4]
   30cfc:	movw	r1, #1
   30d00:	str	r1, [r0, #20]
   30d04:	ldr	r0, [fp, #-4]
   30d08:	ldr	r0, [r0, #16]
   30d0c:	ldrb	r0, [r0]
   30d10:	ldr	r1, [fp, #-4]
   30d14:	str	r0, [r1, #28]
   30d18:	ldr	r0, [fp, #-4]
   30d1c:	movw	r1, #1
   30d20:	strb	r1, [r0, #24]
   30d24:	b	30ef8 <__assert_fail@plt+0x1fb74>
   30d28:	ldr	r0, [fp, #-4]
   30d2c:	add	r0, r0, #4
   30d30:	bl	11138 <mbsinit@plt>
   30d34:	cmp	r0, #0
   30d38:	beq	30d40 <__assert_fail@plt+0x1f9bc>
   30d3c:	b	30d60 <__assert_fail@plt+0x1f9dc>
   30d40:	movw	r0, #34931	; 0x8873
   30d44:	movt	r0, #3
   30d48:	movw	r1, #35056	; 0x88f0
   30d4c:	movt	r1, #3
   30d50:	movw	r2, #143	; 0x8f
   30d54:	movw	r3, #35072	; 0x8900
   30d58:	movt	r3, #3
   30d5c:	bl	11384 <__assert_fail@plt>
   30d60:	ldr	r0, [fp, #-4]
   30d64:	movw	r1, #1
   30d68:	strb	r1, [r0]
   30d6c:	ldr	r0, [fp, #-4]
   30d70:	add	r0, r0, #16
   30d74:	add	r0, r0, #12
   30d78:	ldr	r1, [fp, #-4]
   30d7c:	ldr	r1, [r1, #16]
   30d80:	ldr	r2, [fp, #-4]
   30d84:	ldr	r2, [r2, #16]
   30d88:	str	r0, [fp, #-8]
   30d8c:	str	r1, [sp, #12]
   30d90:	str	r2, [sp, #8]
   30d94:	bl	111bc <__ctype_get_mb_cur_max@plt>
   30d98:	ldr	r1, [sp, #8]
   30d9c:	str	r0, [sp, #4]
   30da0:	mov	r0, r1
   30da4:	ldr	r1, [sp, #4]
   30da8:	bl	32aa8 <__assert_fail@plt+0x21724>
   30dac:	ldr	r1, [fp, #-4]
   30db0:	add	r3, r1, #4
   30db4:	ldr	r1, [fp, #-8]
   30db8:	str	r0, [sp]
   30dbc:	mov	r0, r1
   30dc0:	ldr	r1, [sp, #12]
   30dc4:	ldr	r2, [sp]
   30dc8:	bl	2fb34 <__assert_fail@plt+0x1e7b0>
   30dcc:	ldr	r1, [fp, #-4]
   30dd0:	str	r0, [r1, #20]
   30dd4:	ldr	r0, [fp, #-4]
   30dd8:	ldr	r0, [r0, #20]
   30ddc:	cmn	r0, #1
   30de0:	bne	30e00 <__assert_fail@plt+0x1fa7c>
   30de4:	ldr	r0, [fp, #-4]
   30de8:	movw	r1, #1
   30dec:	str	r1, [r0, #20]
   30df0:	ldr	r0, [fp, #-4]
   30df4:	movw	r1, #0
   30df8:	strb	r1, [r0, #24]
   30dfc:	b	30ef4 <__assert_fail@plt+0x1fb70>
   30e00:	ldr	r0, [fp, #-4]
   30e04:	ldr	r0, [r0, #20]
   30e08:	cmn	r0, #2
   30e0c:	bne	30e34 <__assert_fail@plt+0x1fab0>
   30e10:	ldr	r0, [fp, #-4]
   30e14:	ldr	r0, [r0, #16]
   30e18:	bl	11270 <strlen@plt>
   30e1c:	ldr	r1, [fp, #-4]
   30e20:	str	r0, [r1, #20]
   30e24:	ldr	r0, [fp, #-4]
   30e28:	movw	r1, #0
   30e2c:	strb	r1, [r0, #24]
   30e30:	b	30ef0 <__assert_fail@plt+0x1fb6c>
   30e34:	ldr	r0, [fp, #-4]
   30e38:	ldr	r0, [r0, #20]
   30e3c:	cmp	r0, #0
   30e40:	bne	30ec0 <__assert_fail@plt+0x1fb3c>
   30e44:	ldr	r0, [fp, #-4]
   30e48:	movw	r1, #1
   30e4c:	str	r1, [r0, #20]
   30e50:	ldr	r0, [fp, #-4]
   30e54:	ldr	r0, [r0, #16]
   30e58:	ldrb	r0, [r0]
   30e5c:	cmp	r0, #0
   30e60:	bne	30e68 <__assert_fail@plt+0x1fae4>
   30e64:	b	30e88 <__assert_fail@plt+0x1fb04>
   30e68:	movw	r0, #35015	; 0x88c7
   30e6c:	movt	r0, #3
   30e70:	movw	r1, #35056	; 0x88f0
   30e74:	movt	r1, #3
   30e78:	movw	r2, #171	; 0xab
   30e7c:	movw	r3, #35072	; 0x8900
   30e80:	movt	r3, #3
   30e84:	bl	11384 <__assert_fail@plt>
   30e88:	ldr	r0, [fp, #-4]
   30e8c:	ldr	r0, [r0, #28]
   30e90:	cmp	r0, #0
   30e94:	bne	30e9c <__assert_fail@plt+0x1fb18>
   30e98:	b	30ebc <__assert_fail@plt+0x1fb38>
   30e9c:	movw	r0, #35038	; 0x88de
   30ea0:	movt	r0, #3
   30ea4:	movw	r1, #35056	; 0x88f0
   30ea8:	movt	r1, #3
   30eac:	movw	r2, #172	; 0xac
   30eb0:	movw	r3, #35072	; 0x8900
   30eb4:	movt	r3, #3
   30eb8:	bl	11384 <__assert_fail@plt>
   30ebc:	b	30ec0 <__assert_fail@plt+0x1fb3c>
   30ec0:	ldr	r0, [fp, #-4]
   30ec4:	movw	r1, #1
   30ec8:	strb	r1, [r0, #24]
   30ecc:	ldr	r0, [fp, #-4]
   30ed0:	add	r0, r0, #4
   30ed4:	bl	11138 <mbsinit@plt>
   30ed8:	cmp	r0, #0
   30edc:	beq	30eec <__assert_fail@plt+0x1fb68>
   30ee0:	ldr	r0, [fp, #-4]
   30ee4:	movw	r1, #0
   30ee8:	strb	r1, [r0]
   30eec:	b	30ef0 <__assert_fail@plt+0x1fb6c>
   30ef0:	b	30ef4 <__assert_fail@plt+0x1fb70>
   30ef4:	b	30ef8 <__assert_fail@plt+0x1fb74>
   30ef8:	ldr	r0, [fp, #-4]
   30efc:	movw	r1, #1
   30f00:	strb	r1, [r0, #12]
   30f04:	mov	sp, fp
   30f08:	pop	{fp, pc}
   30f0c:	sub	sp, sp, #8
   30f10:	str	r0, [sp, #4]
   30f14:	str	r1, [sp]
   30f18:	ldr	r0, [sp]
   30f1c:	ldr	r1, [sp, #4]
   30f20:	ldr	r2, [r1, #16]
   30f24:	add	r0, r2, r0
   30f28:	str	r0, [r1, #16]
   30f2c:	add	sp, sp, #8
   30f30:	bx	lr
   30f34:	push	{fp, lr}
   30f38:	mov	fp, sp
   30f3c:	sub	sp, sp, #8
   30f40:	str	r0, [sp, #4]
   30f44:	str	r1, [sp]
   30f48:	ldr	r0, [sp]
   30f4c:	ldrb	r0, [r0]
   30f50:	ldr	r1, [sp, #4]
   30f54:	and	r2, r0, #1
   30f58:	strb	r2, [r1]
   30f5c:	tst	r0, #1
   30f60:	beq	30f80 <__assert_fail@plt+0x1fbfc>
   30f64:	ldr	r0, [sp, #4]
   30f68:	ldr	r1, [sp]
   30f6c:	ldr	r2, [r1, #4]
   30f70:	str	r2, [r0, #4]
   30f74:	ldr	r1, [r1, #8]
   30f78:	str	r1, [r0, #8]
   30f7c:	b	30f98 <__assert_fail@plt+0x1fc14>
   30f80:	ldr	r0, [sp, #4]
   30f84:	add	r0, r0, #4
   30f88:	movw	r1, #0
   30f8c:	and	r1, r1, #255	; 0xff
   30f90:	movw	r2, #8
   30f94:	bl	112b8 <memset@plt>
   30f98:	ldr	r0, [sp]
   30f9c:	ldrb	r0, [r0, #12]
   30fa0:	ldr	r1, [sp, #4]
   30fa4:	and	r0, r0, #1
   30fa8:	strb	r0, [r1, #12]
   30fac:	ldr	r0, [sp, #4]
   30fb0:	add	r0, r0, #16
   30fb4:	ldr	r1, [sp]
   30fb8:	add	r1, r1, #16
   30fbc:	bl	333d8 <__assert_fail@plt+0x22054>
   30fc0:	mov	sp, fp
   30fc4:	pop	{fp, pc}
   30fc8:	push	{fp, lr}
   30fcc:	mov	fp, sp
   30fd0:	sub	sp, sp, #96	; 0x60
   30fd4:	str	r0, [fp, #-8]
   30fd8:	str	r1, [fp, #-12]
   30fdc:	str	r2, [fp, #-16]
   30fe0:	b	31398 <__assert_fail@plt+0x20014>
   30fe4:	b	311b8 <__assert_fail@plt+0x1fe34>
   30fe8:	ldr	r0, [fp, #-16]
   30fec:	cmp	r0, #0
   30ff0:	bcs	310f4 <__assert_fail@plt+0x1fd70>
   30ff4:	ldr	r0, [fp, #-12]
   30ff8:	cmp	r0, #0
   30ffc:	bcs	31084 <__assert_fail@plt+0x1fd00>
   31000:	b	31020 <__assert_fail@plt+0x1fc9c>
   31004:	ldr	r0, [fp, #-12]
   31008:	ldr	r1, [fp, #-16]
   3100c:	movw	r2, #127	; 0x7f
   31010:	udiv	r1, r2, r1
   31014:	cmp	r0, r1
   31018:	bcc	31188 <__assert_fail@plt+0x1fe04>
   3101c:	b	311a0 <__assert_fail@plt+0x1fe1c>
   31020:	b	31034 <__assert_fail@plt+0x1fcb0>
   31024:	ldr	r0, [fp, #-16]
   31028:	cmp	r0, #1
   3102c:	bcc	31044 <__assert_fail@plt+0x1fcc0>
   31030:	b	31050 <__assert_fail@plt+0x1fccc>
   31034:	ldr	r0, [fp, #-16]
   31038:	movw	r1, #0
   3103c:	cmp	r1, r0
   31040:	bcs	31050 <__assert_fail@plt+0x1fccc>
   31044:	movw	r0, #0
   31048:	str	r0, [fp, #-24]	; 0xffffffe8
   3104c:	b	31068 <__assert_fail@plt+0x1fce4>
   31050:	ldr	r0, [fp, #-16]
   31054:	movw	r1, #0
   31058:	sub	r0, r1, r0
   3105c:	movw	r1, #127	; 0x7f
   31060:	udiv	r0, r1, r0
   31064:	str	r0, [fp, #-24]	; 0xffffffe8
   31068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3106c:	ldr	r1, [fp, #-12]
   31070:	mvn	r2, #0
   31074:	sub	r1, r2, r1
   31078:	cmp	r0, r1
   3107c:	bls	31188 <__assert_fail@plt+0x1fe04>
   31080:	b	311a0 <__assert_fail@plt+0x1fe1c>
   31084:	ldr	r0, [fp, #-16]
   31088:	cmn	r0, #1
   3108c:	bne	310d8 <__assert_fail@plt+0x1fd54>
   31090:	b	310b0 <__assert_fail@plt+0x1fd2c>
   31094:	ldr	r0, [fp, #-12]
   31098:	mvn	r1, #127	; 0x7f
   3109c:	add	r0, r0, r1
   310a0:	movw	r1, #0
   310a4:	cmp	r1, r0
   310a8:	bcc	31188 <__assert_fail@plt+0x1fe04>
   310ac:	b	311a0 <__assert_fail@plt+0x1fe1c>
   310b0:	ldr	r0, [fp, #-12]
   310b4:	movw	r1, #0
   310b8:	cmp	r1, r0
   310bc:	bcs	311a0 <__assert_fail@plt+0x1fe1c>
   310c0:	ldr	r0, [fp, #-12]
   310c4:	sub	r0, r0, #1
   310c8:	movw	r1, #127	; 0x7f
   310cc:	cmp	r1, r0
   310d0:	bcc	31188 <__assert_fail@plt+0x1fe04>
   310d4:	b	311a0 <__assert_fail@plt+0x1fe1c>
   310d8:	ldr	r0, [fp, #-16]
   310dc:	mvn	r1, #127	; 0x7f
   310e0:	udiv	r0, r1, r0
   310e4:	ldr	r1, [fp, #-12]
   310e8:	cmp	r0, r1
   310ec:	bcc	31188 <__assert_fail@plt+0x1fe04>
   310f0:	b	311a0 <__assert_fail@plt+0x1fe1c>
   310f4:	ldr	r0, [fp, #-16]
   310f8:	cmp	r0, #0
   310fc:	bne	31104 <__assert_fail@plt+0x1fd80>
   31100:	b	311a0 <__assert_fail@plt+0x1fe1c>
   31104:	ldr	r0, [fp, #-12]
   31108:	cmp	r0, #0
   3110c:	bcs	31170 <__assert_fail@plt+0x1fdec>
   31110:	ldr	r0, [fp, #-12]
   31114:	cmn	r0, #1
   31118:	bne	31154 <__assert_fail@plt+0x1fdd0>
   3111c:	b	3113c <__assert_fail@plt+0x1fdb8>
   31120:	ldr	r0, [fp, #-16]
   31124:	mvn	r1, #127	; 0x7f
   31128:	add	r0, r0, r1
   3112c:	movw	r1, #0
   31130:	cmp	r1, r0
   31134:	bcc	31188 <__assert_fail@plt+0x1fe04>
   31138:	b	311a0 <__assert_fail@plt+0x1fe1c>
   3113c:	ldr	r0, [fp, #-16]
   31140:	sub	r0, r0, #1
   31144:	movw	r1, #127	; 0x7f
   31148:	cmp	r1, r0
   3114c:	bcc	31188 <__assert_fail@plt+0x1fe04>
   31150:	b	311a0 <__assert_fail@plt+0x1fe1c>
   31154:	ldr	r0, [fp, #-12]
   31158:	mvn	r1, #127	; 0x7f
   3115c:	udiv	r0, r1, r0
   31160:	ldr	r1, [fp, #-16]
   31164:	cmp	r0, r1
   31168:	bcc	31188 <__assert_fail@plt+0x1fe04>
   3116c:	b	311a0 <__assert_fail@plt+0x1fe1c>
   31170:	ldr	r0, [fp, #-16]
   31174:	movw	r1, #127	; 0x7f
   31178:	udiv	r0, r1, r0
   3117c:	ldr	r1, [fp, #-12]
   31180:	cmp	r0, r1
   31184:	bcs	311a0 <__assert_fail@plt+0x1fe1c>
   31188:	ldr	r0, [fp, #-12]
   3118c:	ldr	r1, [fp, #-16]
   31190:	mul	r0, r0, r1
   31194:	sxtb	r0, r0
   31198:	str	r0, [fp, #-20]	; 0xffffffec
   3119c:	b	322c8 <__assert_fail@plt+0x20f44>
   311a0:	ldr	r0, [fp, #-12]
   311a4:	ldr	r1, [fp, #-16]
   311a8:	mul	r0, r0, r1
   311ac:	sxtb	r0, r0
   311b0:	str	r0, [fp, #-20]	; 0xffffffec
   311b4:	b	322e0 <__assert_fail@plt+0x20f5c>
   311b8:	ldr	r0, [fp, #-16]
   311bc:	cmp	r0, #0
   311c0:	bcs	312cc <__assert_fail@plt+0x1ff48>
   311c4:	ldr	r0, [fp, #-12]
   311c8:	cmp	r0, #0
   311cc:	bcs	31254 <__assert_fail@plt+0x1fed0>
   311d0:	b	311f0 <__assert_fail@plt+0x1fe6c>
   311d4:	ldr	r0, [fp, #-12]
   311d8:	ldr	r1, [fp, #-16]
   311dc:	movw	r2, #255	; 0xff
   311e0:	udiv	r1, r2, r1
   311e4:	cmp	r0, r1
   311e8:	bcc	31368 <__assert_fail@plt+0x1ffe4>
   311ec:	b	31380 <__assert_fail@plt+0x1fffc>
   311f0:	b	31204 <__assert_fail@plt+0x1fe80>
   311f4:	ldr	r0, [fp, #-16]
   311f8:	cmp	r0, #1
   311fc:	bcc	31214 <__assert_fail@plt+0x1fe90>
   31200:	b	31220 <__assert_fail@plt+0x1fe9c>
   31204:	ldr	r0, [fp, #-16]
   31208:	movw	r1, #0
   3120c:	cmp	r1, r0
   31210:	bcs	31220 <__assert_fail@plt+0x1fe9c>
   31214:	movw	r0, #0
   31218:	str	r0, [fp, #-28]	; 0xffffffe4
   3121c:	b	31238 <__assert_fail@plt+0x1feb4>
   31220:	ldr	r0, [fp, #-16]
   31224:	movw	r1, #0
   31228:	sub	r0, r1, r0
   3122c:	movw	r1, #255	; 0xff
   31230:	udiv	r0, r1, r0
   31234:	str	r0, [fp, #-28]	; 0xffffffe4
   31238:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3123c:	ldr	r1, [fp, #-12]
   31240:	mvn	r2, #0
   31244:	sub	r1, r2, r1
   31248:	cmp	r0, r1
   3124c:	bls	31368 <__assert_fail@plt+0x1ffe4>
   31250:	b	31380 <__assert_fail@plt+0x1fffc>
   31254:	b	3125c <__assert_fail@plt+0x1fed8>
   31258:	b	31260 <__assert_fail@plt+0x1fedc>
   3125c:	b	312b0 <__assert_fail@plt+0x1ff2c>
   31260:	ldr	r0, [fp, #-16]
   31264:	cmn	r0, #1
   31268:	bne	312b0 <__assert_fail@plt+0x1ff2c>
   3126c:	b	31288 <__assert_fail@plt+0x1ff04>
   31270:	ldr	r0, [fp, #-12]
   31274:	add	r0, r0, #0
   31278:	movw	r1, #0
   3127c:	cmp	r1, r0
   31280:	bcc	31368 <__assert_fail@plt+0x1ffe4>
   31284:	b	31380 <__assert_fail@plt+0x1fffc>
   31288:	ldr	r0, [fp, #-12]
   3128c:	movw	r1, #0
   31290:	cmp	r1, r0
   31294:	bcs	31380 <__assert_fail@plt+0x1fffc>
   31298:	ldr	r0, [fp, #-12]
   3129c:	sub	r0, r0, #1
   312a0:	mvn	r1, #0
   312a4:	cmp	r1, r0
   312a8:	bcc	31368 <__assert_fail@plt+0x1ffe4>
   312ac:	b	31380 <__assert_fail@plt+0x1fffc>
   312b0:	ldr	r0, [fp, #-16]
   312b4:	movw	r1, #0
   312b8:	udiv	r0, r1, r0
   312bc:	ldr	r1, [fp, #-12]
   312c0:	cmp	r0, r1
   312c4:	bcc	31368 <__assert_fail@plt+0x1ffe4>
   312c8:	b	31380 <__assert_fail@plt+0x1fffc>
   312cc:	ldr	r0, [fp, #-16]
   312d0:	cmp	r0, #0
   312d4:	bne	312dc <__assert_fail@plt+0x1ff58>
   312d8:	b	31380 <__assert_fail@plt+0x1fffc>
   312dc:	ldr	r0, [fp, #-12]
   312e0:	cmp	r0, #0
   312e4:	bcs	31350 <__assert_fail@plt+0x1ffcc>
   312e8:	b	312f0 <__assert_fail@plt+0x1ff6c>
   312ec:	b	312f4 <__assert_fail@plt+0x1ff70>
   312f0:	b	31334 <__assert_fail@plt+0x1ffb0>
   312f4:	ldr	r0, [fp, #-12]
   312f8:	cmn	r0, #1
   312fc:	bne	31334 <__assert_fail@plt+0x1ffb0>
   31300:	b	3131c <__assert_fail@plt+0x1ff98>
   31304:	ldr	r0, [fp, #-16]
   31308:	add	r0, r0, #0
   3130c:	movw	r1, #0
   31310:	cmp	r1, r0
   31314:	bcc	31368 <__assert_fail@plt+0x1ffe4>
   31318:	b	31380 <__assert_fail@plt+0x1fffc>
   3131c:	ldr	r0, [fp, #-16]
   31320:	sub	r0, r0, #1
   31324:	mvn	r1, #0
   31328:	cmp	r1, r0
   3132c:	bcc	31368 <__assert_fail@plt+0x1ffe4>
   31330:	b	31380 <__assert_fail@plt+0x1fffc>
   31334:	ldr	r0, [fp, #-12]
   31338:	movw	r1, #0
   3133c:	udiv	r0, r1, r0
   31340:	ldr	r1, [fp, #-16]
   31344:	cmp	r0, r1
   31348:	bcc	31368 <__assert_fail@plt+0x1ffe4>
   3134c:	b	31380 <__assert_fail@plt+0x1fffc>
   31350:	ldr	r0, [fp, #-16]
   31354:	movw	r1, #255	; 0xff
   31358:	udiv	r0, r1, r0
   3135c:	ldr	r1, [fp, #-12]
   31360:	cmp	r0, r1
   31364:	bcs	31380 <__assert_fail@plt+0x1fffc>
   31368:	ldr	r0, [fp, #-12]
   3136c:	ldr	r1, [fp, #-16]
   31370:	mul	r0, r0, r1
   31374:	and	r0, r0, #255	; 0xff
   31378:	str	r0, [fp, #-20]	; 0xffffffec
   3137c:	b	322c8 <__assert_fail@plt+0x20f44>
   31380:	ldr	r0, [fp, #-12]
   31384:	ldr	r1, [fp, #-16]
   31388:	mul	r0, r0, r1
   3138c:	and	r0, r0, #255	; 0xff
   31390:	str	r0, [fp, #-20]	; 0xffffffec
   31394:	b	322e0 <__assert_fail@plt+0x20f5c>
   31398:	b	31750 <__assert_fail@plt+0x203cc>
   3139c:	b	31570 <__assert_fail@plt+0x201ec>
   313a0:	ldr	r0, [fp, #-16]
   313a4:	cmp	r0, #0
   313a8:	bcs	314ac <__assert_fail@plt+0x20128>
   313ac:	ldr	r0, [fp, #-12]
   313b0:	cmp	r0, #0
   313b4:	bcs	3143c <__assert_fail@plt+0x200b8>
   313b8:	b	313d8 <__assert_fail@plt+0x20054>
   313bc:	ldr	r0, [fp, #-12]
   313c0:	ldr	r1, [fp, #-16]
   313c4:	movw	r2, #32767	; 0x7fff
   313c8:	udiv	r1, r2, r1
   313cc:	cmp	r0, r1
   313d0:	bcc	31540 <__assert_fail@plt+0x201bc>
   313d4:	b	31558 <__assert_fail@plt+0x201d4>
   313d8:	b	313ec <__assert_fail@plt+0x20068>
   313dc:	ldr	r0, [fp, #-16]
   313e0:	cmp	r0, #1
   313e4:	bcc	313fc <__assert_fail@plt+0x20078>
   313e8:	b	31408 <__assert_fail@plt+0x20084>
   313ec:	ldr	r0, [fp, #-16]
   313f0:	movw	r1, #0
   313f4:	cmp	r1, r0
   313f8:	bcs	31408 <__assert_fail@plt+0x20084>
   313fc:	movw	r0, #0
   31400:	str	r0, [fp, #-32]	; 0xffffffe0
   31404:	b	31420 <__assert_fail@plt+0x2009c>
   31408:	ldr	r0, [fp, #-16]
   3140c:	movw	r1, #0
   31410:	sub	r0, r1, r0
   31414:	movw	r1, #32767	; 0x7fff
   31418:	udiv	r0, r1, r0
   3141c:	str	r0, [fp, #-32]	; 0xffffffe0
   31420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31424:	ldr	r1, [fp, #-12]
   31428:	mvn	r2, #0
   3142c:	sub	r1, r2, r1
   31430:	cmp	r0, r1
   31434:	bls	31540 <__assert_fail@plt+0x201bc>
   31438:	b	31558 <__assert_fail@plt+0x201d4>
   3143c:	ldr	r0, [fp, #-16]
   31440:	cmn	r0, #1
   31444:	bne	31490 <__assert_fail@plt+0x2010c>
   31448:	b	31468 <__assert_fail@plt+0x200e4>
   3144c:	ldr	r0, [pc, #3760]	; 32304 <__assert_fail@plt+0x20f80>
   31450:	ldr	r1, [fp, #-12]
   31454:	add	r0, r1, r0
   31458:	movw	r1, #0
   3145c:	cmp	r1, r0
   31460:	bcc	31540 <__assert_fail@plt+0x201bc>
   31464:	b	31558 <__assert_fail@plt+0x201d4>
   31468:	ldr	r0, [fp, #-12]
   3146c:	movw	r1, #0
   31470:	cmp	r1, r0
   31474:	bcs	31558 <__assert_fail@plt+0x201d4>
   31478:	ldr	r0, [fp, #-12]
   3147c:	sub	r0, r0, #1
   31480:	movw	r1, #32767	; 0x7fff
   31484:	cmp	r1, r0
   31488:	bcc	31540 <__assert_fail@plt+0x201bc>
   3148c:	b	31558 <__assert_fail@plt+0x201d4>
   31490:	ldr	r0, [pc, #3692]	; 32304 <__assert_fail@plt+0x20f80>
   31494:	ldr	r1, [fp, #-16]
   31498:	udiv	r0, r0, r1
   3149c:	ldr	r1, [fp, #-12]
   314a0:	cmp	r0, r1
   314a4:	bcc	31540 <__assert_fail@plt+0x201bc>
   314a8:	b	31558 <__assert_fail@plt+0x201d4>
   314ac:	ldr	r0, [fp, #-16]
   314b0:	cmp	r0, #0
   314b4:	bne	314bc <__assert_fail@plt+0x20138>
   314b8:	b	31558 <__assert_fail@plt+0x201d4>
   314bc:	ldr	r0, [fp, #-12]
   314c0:	cmp	r0, #0
   314c4:	bcs	31528 <__assert_fail@plt+0x201a4>
   314c8:	ldr	r0, [fp, #-12]
   314cc:	cmn	r0, #1
   314d0:	bne	3150c <__assert_fail@plt+0x20188>
   314d4:	b	314f4 <__assert_fail@plt+0x20170>
   314d8:	ldr	r0, [pc, #3620]	; 32304 <__assert_fail@plt+0x20f80>
   314dc:	ldr	r1, [fp, #-16]
   314e0:	add	r0, r1, r0
   314e4:	movw	r1, #0
   314e8:	cmp	r1, r0
   314ec:	bcc	31540 <__assert_fail@plt+0x201bc>
   314f0:	b	31558 <__assert_fail@plt+0x201d4>
   314f4:	ldr	r0, [fp, #-16]
   314f8:	sub	r0, r0, #1
   314fc:	movw	r1, #32767	; 0x7fff
   31500:	cmp	r1, r0
   31504:	bcc	31540 <__assert_fail@plt+0x201bc>
   31508:	b	31558 <__assert_fail@plt+0x201d4>
   3150c:	ldr	r0, [pc, #3568]	; 32304 <__assert_fail@plt+0x20f80>
   31510:	ldr	r1, [fp, #-12]
   31514:	udiv	r0, r0, r1
   31518:	ldr	r1, [fp, #-16]
   3151c:	cmp	r0, r1
   31520:	bcc	31540 <__assert_fail@plt+0x201bc>
   31524:	b	31558 <__assert_fail@plt+0x201d4>
   31528:	ldr	r0, [fp, #-16]
   3152c:	movw	r1, #32767	; 0x7fff
   31530:	udiv	r0, r1, r0
   31534:	ldr	r1, [fp, #-12]
   31538:	cmp	r0, r1
   3153c:	bcs	31558 <__assert_fail@plt+0x201d4>
   31540:	ldr	r0, [fp, #-12]
   31544:	ldr	r1, [fp, #-16]
   31548:	mul	r0, r0, r1
   3154c:	sxth	r0, r0
   31550:	str	r0, [fp, #-20]	; 0xffffffec
   31554:	b	322c8 <__assert_fail@plt+0x20f44>
   31558:	ldr	r0, [fp, #-12]
   3155c:	ldr	r1, [fp, #-16]
   31560:	mul	r0, r0, r1
   31564:	sxth	r0, r0
   31568:	str	r0, [fp, #-20]	; 0xffffffec
   3156c:	b	322e0 <__assert_fail@plt+0x20f5c>
   31570:	ldr	r0, [fp, #-16]
   31574:	cmp	r0, #0
   31578:	bcs	31684 <__assert_fail@plt+0x20300>
   3157c:	ldr	r0, [fp, #-12]
   31580:	cmp	r0, #0
   31584:	bcs	3160c <__assert_fail@plt+0x20288>
   31588:	b	315a8 <__assert_fail@plt+0x20224>
   3158c:	ldr	r0, [fp, #-12]
   31590:	ldr	r1, [fp, #-16]
   31594:	movw	r2, #65535	; 0xffff
   31598:	udiv	r1, r2, r1
   3159c:	cmp	r0, r1
   315a0:	bcc	31720 <__assert_fail@plt+0x2039c>
   315a4:	b	31738 <__assert_fail@plt+0x203b4>
   315a8:	b	315bc <__assert_fail@plt+0x20238>
   315ac:	ldr	r0, [fp, #-16]
   315b0:	cmp	r0, #1
   315b4:	bcc	315cc <__assert_fail@plt+0x20248>
   315b8:	b	315d8 <__assert_fail@plt+0x20254>
   315bc:	ldr	r0, [fp, #-16]
   315c0:	movw	r1, #0
   315c4:	cmp	r1, r0
   315c8:	bcs	315d8 <__assert_fail@plt+0x20254>
   315cc:	movw	r0, #0
   315d0:	str	r0, [fp, #-36]	; 0xffffffdc
   315d4:	b	315f0 <__assert_fail@plt+0x2026c>
   315d8:	ldr	r0, [fp, #-16]
   315dc:	movw	r1, #0
   315e0:	sub	r0, r1, r0
   315e4:	movw	r1, #65535	; 0xffff
   315e8:	udiv	r0, r1, r0
   315ec:	str	r0, [fp, #-36]	; 0xffffffdc
   315f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   315f4:	ldr	r1, [fp, #-12]
   315f8:	mvn	r2, #0
   315fc:	sub	r1, r2, r1
   31600:	cmp	r0, r1
   31604:	bls	31720 <__assert_fail@plt+0x2039c>
   31608:	b	31738 <__assert_fail@plt+0x203b4>
   3160c:	b	31614 <__assert_fail@plt+0x20290>
   31610:	b	31618 <__assert_fail@plt+0x20294>
   31614:	b	31668 <__assert_fail@plt+0x202e4>
   31618:	ldr	r0, [fp, #-16]
   3161c:	cmn	r0, #1
   31620:	bne	31668 <__assert_fail@plt+0x202e4>
   31624:	b	31640 <__assert_fail@plt+0x202bc>
   31628:	ldr	r0, [fp, #-12]
   3162c:	add	r0, r0, #0
   31630:	movw	r1, #0
   31634:	cmp	r1, r0
   31638:	bcc	31720 <__assert_fail@plt+0x2039c>
   3163c:	b	31738 <__assert_fail@plt+0x203b4>
   31640:	ldr	r0, [fp, #-12]
   31644:	movw	r1, #0
   31648:	cmp	r1, r0
   3164c:	bcs	31738 <__assert_fail@plt+0x203b4>
   31650:	ldr	r0, [fp, #-12]
   31654:	sub	r0, r0, #1
   31658:	mvn	r1, #0
   3165c:	cmp	r1, r0
   31660:	bcc	31720 <__assert_fail@plt+0x2039c>
   31664:	b	31738 <__assert_fail@plt+0x203b4>
   31668:	ldr	r0, [fp, #-16]
   3166c:	movw	r1, #0
   31670:	udiv	r0, r1, r0
   31674:	ldr	r1, [fp, #-12]
   31678:	cmp	r0, r1
   3167c:	bcc	31720 <__assert_fail@plt+0x2039c>
   31680:	b	31738 <__assert_fail@plt+0x203b4>
   31684:	ldr	r0, [fp, #-16]
   31688:	cmp	r0, #0
   3168c:	bne	31694 <__assert_fail@plt+0x20310>
   31690:	b	31738 <__assert_fail@plt+0x203b4>
   31694:	ldr	r0, [fp, #-12]
   31698:	cmp	r0, #0
   3169c:	bcs	31708 <__assert_fail@plt+0x20384>
   316a0:	b	316a8 <__assert_fail@plt+0x20324>
   316a4:	b	316ac <__assert_fail@plt+0x20328>
   316a8:	b	316ec <__assert_fail@plt+0x20368>
   316ac:	ldr	r0, [fp, #-12]
   316b0:	cmn	r0, #1
   316b4:	bne	316ec <__assert_fail@plt+0x20368>
   316b8:	b	316d4 <__assert_fail@plt+0x20350>
   316bc:	ldr	r0, [fp, #-16]
   316c0:	add	r0, r0, #0
   316c4:	movw	r1, #0
   316c8:	cmp	r1, r0
   316cc:	bcc	31720 <__assert_fail@plt+0x2039c>
   316d0:	b	31738 <__assert_fail@plt+0x203b4>
   316d4:	ldr	r0, [fp, #-16]
   316d8:	sub	r0, r0, #1
   316dc:	mvn	r1, #0
   316e0:	cmp	r1, r0
   316e4:	bcc	31720 <__assert_fail@plt+0x2039c>
   316e8:	b	31738 <__assert_fail@plt+0x203b4>
   316ec:	ldr	r0, [fp, #-12]
   316f0:	movw	r1, #0
   316f4:	udiv	r0, r1, r0
   316f8:	ldr	r1, [fp, #-16]
   316fc:	cmp	r0, r1
   31700:	bcc	31720 <__assert_fail@plt+0x2039c>
   31704:	b	31738 <__assert_fail@plt+0x203b4>
   31708:	ldr	r0, [fp, #-16]
   3170c:	movw	r1, #65535	; 0xffff
   31710:	udiv	r0, r1, r0
   31714:	ldr	r1, [fp, #-12]
   31718:	cmp	r0, r1
   3171c:	bcs	31738 <__assert_fail@plt+0x203b4>
   31720:	ldr	r0, [fp, #-12]
   31724:	ldr	r1, [fp, #-16]
   31728:	mul	r0, r0, r1
   3172c:	uxth	r0, r0
   31730:	str	r0, [fp, #-20]	; 0xffffffec
   31734:	b	322c8 <__assert_fail@plt+0x20f44>
   31738:	ldr	r0, [fp, #-12]
   3173c:	ldr	r1, [fp, #-16]
   31740:	mul	r0, r0, r1
   31744:	uxth	r0, r0
   31748:	str	r0, [fp, #-20]	; 0xffffffec
   3174c:	b	322e0 <__assert_fail@plt+0x20f5c>
   31750:	b	31754 <__assert_fail@plt+0x203d0>
   31754:	b	31918 <__assert_fail@plt+0x20594>
   31758:	ldr	r0, [fp, #-16]
   3175c:	cmp	r0, #0
   31760:	bcs	31860 <__assert_fail@plt+0x204dc>
   31764:	ldr	r0, [fp, #-12]
   31768:	cmp	r0, #0
   3176c:	bcs	317f4 <__assert_fail@plt+0x20470>
   31770:	b	31790 <__assert_fail@plt+0x2040c>
   31774:	ldr	r0, [pc, #2944]	; 322fc <__assert_fail@plt+0x20f78>
   31778:	ldr	r1, [fp, #-12]
   3177c:	ldr	r2, [fp, #-16]
   31780:	udiv	r0, r0, r2
   31784:	cmp	r1, r0
   31788:	bcc	318f0 <__assert_fail@plt+0x2056c>
   3178c:	b	31904 <__assert_fail@plt+0x20580>
   31790:	b	317a4 <__assert_fail@plt+0x20420>
   31794:	ldr	r0, [fp, #-16]
   31798:	cmp	r0, #1
   3179c:	bcc	317b4 <__assert_fail@plt+0x20430>
   317a0:	b	317c0 <__assert_fail@plt+0x2043c>
   317a4:	ldr	r0, [fp, #-16]
   317a8:	movw	r1, #0
   317ac:	cmp	r1, r0
   317b0:	bcs	317c0 <__assert_fail@plt+0x2043c>
   317b4:	movw	r0, #0
   317b8:	str	r0, [fp, #-40]	; 0xffffffd8
   317bc:	b	317d8 <__assert_fail@plt+0x20454>
   317c0:	ldr	r0, [pc, #2868]	; 322fc <__assert_fail@plt+0x20f78>
   317c4:	ldr	r1, [fp, #-16]
   317c8:	movw	r2, #0
   317cc:	sub	r1, r2, r1
   317d0:	udiv	r0, r0, r1
   317d4:	str	r0, [fp, #-40]	; 0xffffffd8
   317d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   317dc:	ldr	r1, [fp, #-12]
   317e0:	mvn	r2, #0
   317e4:	sub	r1, r2, r1
   317e8:	cmp	r0, r1
   317ec:	bls	318f0 <__assert_fail@plt+0x2056c>
   317f0:	b	31904 <__assert_fail@plt+0x20580>
   317f4:	ldr	r0, [fp, #-16]
   317f8:	cmn	r0, #1
   317fc:	bne	31844 <__assert_fail@plt+0x204c0>
   31800:	b	3181c <__assert_fail@plt+0x20498>
   31804:	ldr	r0, [fp, #-12]
   31808:	add	r0, r0, #-2147483648	; 0x80000000
   3180c:	movw	r1, #0
   31810:	cmp	r1, r0
   31814:	bcc	318f0 <__assert_fail@plt+0x2056c>
   31818:	b	31904 <__assert_fail@plt+0x20580>
   3181c:	ldr	r0, [fp, #-12]
   31820:	movw	r1, #0
   31824:	cmp	r1, r0
   31828:	bcs	31904 <__assert_fail@plt+0x20580>
   3182c:	ldr	r0, [pc, #2760]	; 322fc <__assert_fail@plt+0x20f78>
   31830:	ldr	r1, [fp, #-12]
   31834:	sub	r1, r1, #1
   31838:	cmp	r0, r1
   3183c:	bcc	318f0 <__assert_fail@plt+0x2056c>
   31840:	b	31904 <__assert_fail@plt+0x20580>
   31844:	ldr	r0, [pc, #2740]	; 32300 <__assert_fail@plt+0x20f7c>
   31848:	ldr	r1, [fp, #-16]
   3184c:	udiv	r0, r0, r1
   31850:	ldr	r1, [fp, #-12]
   31854:	cmp	r0, r1
   31858:	bcc	318f0 <__assert_fail@plt+0x2056c>
   3185c:	b	31904 <__assert_fail@plt+0x20580>
   31860:	ldr	r0, [fp, #-16]
   31864:	cmp	r0, #0
   31868:	bne	31870 <__assert_fail@plt+0x204ec>
   3186c:	b	31904 <__assert_fail@plt+0x20580>
   31870:	ldr	r0, [fp, #-12]
   31874:	cmp	r0, #0
   31878:	bcs	318d8 <__assert_fail@plt+0x20554>
   3187c:	ldr	r0, [fp, #-12]
   31880:	cmn	r0, #1
   31884:	bne	318bc <__assert_fail@plt+0x20538>
   31888:	b	318a4 <__assert_fail@plt+0x20520>
   3188c:	ldr	r0, [fp, #-16]
   31890:	add	r0, r0, #-2147483648	; 0x80000000
   31894:	movw	r1, #0
   31898:	cmp	r1, r0
   3189c:	bcc	318f0 <__assert_fail@plt+0x2056c>
   318a0:	b	31904 <__assert_fail@plt+0x20580>
   318a4:	ldr	r0, [pc, #2640]	; 322fc <__assert_fail@plt+0x20f78>
   318a8:	ldr	r1, [fp, #-16]
   318ac:	sub	r1, r1, #1
   318b0:	cmp	r0, r1
   318b4:	bcc	318f0 <__assert_fail@plt+0x2056c>
   318b8:	b	31904 <__assert_fail@plt+0x20580>
   318bc:	ldr	r0, [pc, #2620]	; 32300 <__assert_fail@plt+0x20f7c>
   318c0:	ldr	r1, [fp, #-12]
   318c4:	udiv	r0, r0, r1
   318c8:	ldr	r1, [fp, #-16]
   318cc:	cmp	r0, r1
   318d0:	bcc	318f0 <__assert_fail@plt+0x2056c>
   318d4:	b	31904 <__assert_fail@plt+0x20580>
   318d8:	ldr	r0, [pc, #2588]	; 322fc <__assert_fail@plt+0x20f78>
   318dc:	ldr	r1, [fp, #-16]
   318e0:	udiv	r0, r0, r1
   318e4:	ldr	r1, [fp, #-12]
   318e8:	cmp	r0, r1
   318ec:	bcs	31904 <__assert_fail@plt+0x20580>
   318f0:	ldr	r0, [fp, #-12]
   318f4:	ldr	r1, [fp, #-16]
   318f8:	mul	r0, r0, r1
   318fc:	str	r0, [fp, #-20]	; 0xffffffec
   31900:	b	322c8 <__assert_fail@plt+0x20f44>
   31904:	ldr	r0, [fp, #-12]
   31908:	ldr	r1, [fp, #-16]
   3190c:	mul	r0, r0, r1
   31910:	str	r0, [fp, #-20]	; 0xffffffec
   31914:	b	322e0 <__assert_fail@plt+0x20f5c>
   31918:	ldr	r0, [fp, #-16]
   3191c:	cmp	r0, #0
   31920:	bcs	31a2c <__assert_fail@plt+0x206a8>
   31924:	ldr	r0, [fp, #-12]
   31928:	cmp	r0, #0
   3192c:	bcs	319b4 <__assert_fail@plt+0x20630>
   31930:	b	31950 <__assert_fail@plt+0x205cc>
   31934:	ldr	r0, [fp, #-12]
   31938:	ldr	r1, [fp, #-16]
   3193c:	mvn	r2, #0
   31940:	udiv	r1, r2, r1
   31944:	cmp	r0, r1
   31948:	bcc	31ac8 <__assert_fail@plt+0x20744>
   3194c:	b	31adc <__assert_fail@plt+0x20758>
   31950:	b	31964 <__assert_fail@plt+0x205e0>
   31954:	ldr	r0, [fp, #-16]
   31958:	cmp	r0, #1
   3195c:	bcc	31974 <__assert_fail@plt+0x205f0>
   31960:	b	31980 <__assert_fail@plt+0x205fc>
   31964:	ldr	r0, [fp, #-16]
   31968:	movw	r1, #0
   3196c:	cmp	r1, r0
   31970:	bcs	31980 <__assert_fail@plt+0x205fc>
   31974:	movw	r0, #1
   31978:	str	r0, [fp, #-44]	; 0xffffffd4
   3197c:	b	31998 <__assert_fail@plt+0x20614>
   31980:	ldr	r0, [fp, #-16]
   31984:	movw	r1, #0
   31988:	sub	r0, r1, r0
   3198c:	mvn	r1, #0
   31990:	udiv	r0, r1, r0
   31994:	str	r0, [fp, #-44]	; 0xffffffd4
   31998:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3199c:	ldr	r1, [fp, #-12]
   319a0:	mvn	r2, #0
   319a4:	sub	r1, r2, r1
   319a8:	cmp	r0, r1
   319ac:	bls	31ac8 <__assert_fail@plt+0x20744>
   319b0:	b	31adc <__assert_fail@plt+0x20758>
   319b4:	b	319bc <__assert_fail@plt+0x20638>
   319b8:	b	319c0 <__assert_fail@plt+0x2063c>
   319bc:	b	31a10 <__assert_fail@plt+0x2068c>
   319c0:	ldr	r0, [fp, #-16]
   319c4:	cmn	r0, #1
   319c8:	bne	31a10 <__assert_fail@plt+0x2068c>
   319cc:	b	319e8 <__assert_fail@plt+0x20664>
   319d0:	ldr	r0, [fp, #-12]
   319d4:	add	r0, r0, #0
   319d8:	movw	r1, #0
   319dc:	cmp	r1, r0
   319e0:	bcc	31ac8 <__assert_fail@plt+0x20744>
   319e4:	b	31adc <__assert_fail@plt+0x20758>
   319e8:	ldr	r0, [fp, #-12]
   319ec:	movw	r1, #0
   319f0:	cmp	r1, r0
   319f4:	bcs	31adc <__assert_fail@plt+0x20758>
   319f8:	ldr	r0, [fp, #-12]
   319fc:	sub	r0, r0, #1
   31a00:	mvn	r1, #0
   31a04:	cmp	r1, r0
   31a08:	bcc	31ac8 <__assert_fail@plt+0x20744>
   31a0c:	b	31adc <__assert_fail@plt+0x20758>
   31a10:	ldr	r0, [fp, #-16]
   31a14:	movw	r1, #0
   31a18:	udiv	r0, r1, r0
   31a1c:	ldr	r1, [fp, #-12]
   31a20:	cmp	r0, r1
   31a24:	bcc	31ac8 <__assert_fail@plt+0x20744>
   31a28:	b	31adc <__assert_fail@plt+0x20758>
   31a2c:	ldr	r0, [fp, #-16]
   31a30:	cmp	r0, #0
   31a34:	bne	31a3c <__assert_fail@plt+0x206b8>
   31a38:	b	31adc <__assert_fail@plt+0x20758>
   31a3c:	ldr	r0, [fp, #-12]
   31a40:	cmp	r0, #0
   31a44:	bcs	31ab0 <__assert_fail@plt+0x2072c>
   31a48:	b	31a50 <__assert_fail@plt+0x206cc>
   31a4c:	b	31a54 <__assert_fail@plt+0x206d0>
   31a50:	b	31a94 <__assert_fail@plt+0x20710>
   31a54:	ldr	r0, [fp, #-12]
   31a58:	cmn	r0, #1
   31a5c:	bne	31a94 <__assert_fail@plt+0x20710>
   31a60:	b	31a7c <__assert_fail@plt+0x206f8>
   31a64:	ldr	r0, [fp, #-16]
   31a68:	add	r0, r0, #0
   31a6c:	movw	r1, #0
   31a70:	cmp	r1, r0
   31a74:	bcc	31ac8 <__assert_fail@plt+0x20744>
   31a78:	b	31adc <__assert_fail@plt+0x20758>
   31a7c:	ldr	r0, [fp, #-16]
   31a80:	sub	r0, r0, #1
   31a84:	mvn	r1, #0
   31a88:	cmp	r1, r0
   31a8c:	bcc	31ac8 <__assert_fail@plt+0x20744>
   31a90:	b	31adc <__assert_fail@plt+0x20758>
   31a94:	ldr	r0, [fp, #-12]
   31a98:	movw	r1, #0
   31a9c:	udiv	r0, r1, r0
   31aa0:	ldr	r1, [fp, #-16]
   31aa4:	cmp	r0, r1
   31aa8:	bcc	31ac8 <__assert_fail@plt+0x20744>
   31aac:	b	31adc <__assert_fail@plt+0x20758>
   31ab0:	ldr	r0, [fp, #-16]
   31ab4:	mvn	r1, #0
   31ab8:	udiv	r0, r1, r0
   31abc:	ldr	r1, [fp, #-12]
   31ac0:	cmp	r0, r1
   31ac4:	bcs	31adc <__assert_fail@plt+0x20758>
   31ac8:	ldr	r0, [fp, #-12]
   31acc:	ldr	r1, [fp, #-16]
   31ad0:	mul	r0, r0, r1
   31ad4:	str	r0, [fp, #-20]	; 0xffffffec
   31ad8:	b	322c8 <__assert_fail@plt+0x20f44>
   31adc:	ldr	r0, [fp, #-12]
   31ae0:	ldr	r1, [fp, #-16]
   31ae4:	mul	r0, r0, r1
   31ae8:	str	r0, [fp, #-20]	; 0xffffffec
   31aec:	b	322e0 <__assert_fail@plt+0x20f5c>
   31af0:	b	31af4 <__assert_fail@plt+0x20770>
   31af4:	b	31cb8 <__assert_fail@plt+0x20934>
   31af8:	ldr	r0, [fp, #-16]
   31afc:	cmp	r0, #0
   31b00:	bcs	31c00 <__assert_fail@plt+0x2087c>
   31b04:	ldr	r0, [fp, #-12]
   31b08:	cmp	r0, #0
   31b0c:	bcs	31b94 <__assert_fail@plt+0x20810>
   31b10:	b	31b30 <__assert_fail@plt+0x207ac>
   31b14:	ldr	r0, [pc, #2016]	; 322fc <__assert_fail@plt+0x20f78>
   31b18:	ldr	r1, [fp, #-12]
   31b1c:	ldr	r2, [fp, #-16]
   31b20:	udiv	r0, r0, r2
   31b24:	cmp	r1, r0
   31b28:	bcc	31c90 <__assert_fail@plt+0x2090c>
   31b2c:	b	31ca4 <__assert_fail@plt+0x20920>
   31b30:	b	31b44 <__assert_fail@plt+0x207c0>
   31b34:	ldr	r0, [fp, #-16]
   31b38:	cmp	r0, #1
   31b3c:	bcc	31b54 <__assert_fail@plt+0x207d0>
   31b40:	b	31b60 <__assert_fail@plt+0x207dc>
   31b44:	ldr	r0, [fp, #-16]
   31b48:	movw	r1, #0
   31b4c:	cmp	r1, r0
   31b50:	bcs	31b60 <__assert_fail@plt+0x207dc>
   31b54:	movw	r0, #0
   31b58:	str	r0, [sp, #48]	; 0x30
   31b5c:	b	31b78 <__assert_fail@plt+0x207f4>
   31b60:	ldr	r0, [pc, #1940]	; 322fc <__assert_fail@plt+0x20f78>
   31b64:	ldr	r1, [fp, #-16]
   31b68:	movw	r2, #0
   31b6c:	sub	r1, r2, r1
   31b70:	udiv	r0, r0, r1
   31b74:	str	r0, [sp, #48]	; 0x30
   31b78:	ldr	r0, [sp, #48]	; 0x30
   31b7c:	ldr	r1, [fp, #-12]
   31b80:	mvn	r2, #0
   31b84:	sub	r1, r2, r1
   31b88:	cmp	r0, r1
   31b8c:	bls	31c90 <__assert_fail@plt+0x2090c>
   31b90:	b	31ca4 <__assert_fail@plt+0x20920>
   31b94:	ldr	r0, [fp, #-16]
   31b98:	cmn	r0, #1
   31b9c:	bne	31be4 <__assert_fail@plt+0x20860>
   31ba0:	b	31bbc <__assert_fail@plt+0x20838>
   31ba4:	ldr	r0, [fp, #-12]
   31ba8:	add	r0, r0, #-2147483648	; 0x80000000
   31bac:	movw	r1, #0
   31bb0:	cmp	r1, r0
   31bb4:	bcc	31c90 <__assert_fail@plt+0x2090c>
   31bb8:	b	31ca4 <__assert_fail@plt+0x20920>
   31bbc:	ldr	r0, [fp, #-12]
   31bc0:	movw	r1, #0
   31bc4:	cmp	r1, r0
   31bc8:	bcs	31ca4 <__assert_fail@plt+0x20920>
   31bcc:	ldr	r0, [pc, #1832]	; 322fc <__assert_fail@plt+0x20f78>
   31bd0:	ldr	r1, [fp, #-12]
   31bd4:	sub	r1, r1, #1
   31bd8:	cmp	r0, r1
   31bdc:	bcc	31c90 <__assert_fail@plt+0x2090c>
   31be0:	b	31ca4 <__assert_fail@plt+0x20920>
   31be4:	ldr	r0, [pc, #1812]	; 32300 <__assert_fail@plt+0x20f7c>
   31be8:	ldr	r1, [fp, #-16]
   31bec:	udiv	r0, r0, r1
   31bf0:	ldr	r1, [fp, #-12]
   31bf4:	cmp	r0, r1
   31bf8:	bcc	31c90 <__assert_fail@plt+0x2090c>
   31bfc:	b	31ca4 <__assert_fail@plt+0x20920>
   31c00:	ldr	r0, [fp, #-16]
   31c04:	cmp	r0, #0
   31c08:	bne	31c10 <__assert_fail@plt+0x2088c>
   31c0c:	b	31ca4 <__assert_fail@plt+0x20920>
   31c10:	ldr	r0, [fp, #-12]
   31c14:	cmp	r0, #0
   31c18:	bcs	31c78 <__assert_fail@plt+0x208f4>
   31c1c:	ldr	r0, [fp, #-12]
   31c20:	cmn	r0, #1
   31c24:	bne	31c5c <__assert_fail@plt+0x208d8>
   31c28:	b	31c44 <__assert_fail@plt+0x208c0>
   31c2c:	ldr	r0, [fp, #-16]
   31c30:	add	r0, r0, #-2147483648	; 0x80000000
   31c34:	movw	r1, #0
   31c38:	cmp	r1, r0
   31c3c:	bcc	31c90 <__assert_fail@plt+0x2090c>
   31c40:	b	31ca4 <__assert_fail@plt+0x20920>
   31c44:	ldr	r0, [pc, #1712]	; 322fc <__assert_fail@plt+0x20f78>
   31c48:	ldr	r1, [fp, #-16]
   31c4c:	sub	r1, r1, #1
   31c50:	cmp	r0, r1
   31c54:	bcc	31c90 <__assert_fail@plt+0x2090c>
   31c58:	b	31ca4 <__assert_fail@plt+0x20920>
   31c5c:	ldr	r0, [pc, #1692]	; 32300 <__assert_fail@plt+0x20f7c>
   31c60:	ldr	r1, [fp, #-12]
   31c64:	udiv	r0, r0, r1
   31c68:	ldr	r1, [fp, #-16]
   31c6c:	cmp	r0, r1
   31c70:	bcc	31c90 <__assert_fail@plt+0x2090c>
   31c74:	b	31ca4 <__assert_fail@plt+0x20920>
   31c78:	ldr	r0, [pc, #1660]	; 322fc <__assert_fail@plt+0x20f78>
   31c7c:	ldr	r1, [fp, #-16]
   31c80:	udiv	r0, r0, r1
   31c84:	ldr	r1, [fp, #-12]
   31c88:	cmp	r0, r1
   31c8c:	bcs	31ca4 <__assert_fail@plt+0x20920>
   31c90:	ldr	r0, [fp, #-12]
   31c94:	ldr	r1, [fp, #-16]
   31c98:	mul	r0, r0, r1
   31c9c:	str	r0, [fp, #-20]	; 0xffffffec
   31ca0:	b	322c8 <__assert_fail@plt+0x20f44>
   31ca4:	ldr	r0, [fp, #-12]
   31ca8:	ldr	r1, [fp, #-16]
   31cac:	mul	r0, r0, r1
   31cb0:	str	r0, [fp, #-20]	; 0xffffffec
   31cb4:	b	322e0 <__assert_fail@plt+0x20f5c>
   31cb8:	ldr	r0, [fp, #-16]
   31cbc:	cmp	r0, #0
   31cc0:	bcs	31dcc <__assert_fail@plt+0x20a48>
   31cc4:	ldr	r0, [fp, #-12]
   31cc8:	cmp	r0, #0
   31ccc:	bcs	31d54 <__assert_fail@plt+0x209d0>
   31cd0:	b	31cf0 <__assert_fail@plt+0x2096c>
   31cd4:	ldr	r0, [fp, #-12]
   31cd8:	ldr	r1, [fp, #-16]
   31cdc:	mvn	r2, #0
   31ce0:	udiv	r1, r2, r1
   31ce4:	cmp	r0, r1
   31ce8:	bcc	31e68 <__assert_fail@plt+0x20ae4>
   31cec:	b	31e7c <__assert_fail@plt+0x20af8>
   31cf0:	b	31d04 <__assert_fail@plt+0x20980>
   31cf4:	ldr	r0, [fp, #-16]
   31cf8:	cmp	r0, #1
   31cfc:	bcc	31d14 <__assert_fail@plt+0x20990>
   31d00:	b	31d20 <__assert_fail@plt+0x2099c>
   31d04:	ldr	r0, [fp, #-16]
   31d08:	movw	r1, #0
   31d0c:	cmp	r1, r0
   31d10:	bcs	31d20 <__assert_fail@plt+0x2099c>
   31d14:	movw	r0, #1
   31d18:	str	r0, [sp, #44]	; 0x2c
   31d1c:	b	31d38 <__assert_fail@plt+0x209b4>
   31d20:	ldr	r0, [fp, #-16]
   31d24:	movw	r1, #0
   31d28:	sub	r0, r1, r0
   31d2c:	mvn	r1, #0
   31d30:	udiv	r0, r1, r0
   31d34:	str	r0, [sp, #44]	; 0x2c
   31d38:	ldr	r0, [sp, #44]	; 0x2c
   31d3c:	ldr	r1, [fp, #-12]
   31d40:	mvn	r2, #0
   31d44:	sub	r1, r2, r1
   31d48:	cmp	r0, r1
   31d4c:	bls	31e68 <__assert_fail@plt+0x20ae4>
   31d50:	b	31e7c <__assert_fail@plt+0x20af8>
   31d54:	b	31d5c <__assert_fail@plt+0x209d8>
   31d58:	b	31d60 <__assert_fail@plt+0x209dc>
   31d5c:	b	31db0 <__assert_fail@plt+0x20a2c>
   31d60:	ldr	r0, [fp, #-16]
   31d64:	cmn	r0, #1
   31d68:	bne	31db0 <__assert_fail@plt+0x20a2c>
   31d6c:	b	31d88 <__assert_fail@plt+0x20a04>
   31d70:	ldr	r0, [fp, #-12]
   31d74:	add	r0, r0, #0
   31d78:	movw	r1, #0
   31d7c:	cmp	r1, r0
   31d80:	bcc	31e68 <__assert_fail@plt+0x20ae4>
   31d84:	b	31e7c <__assert_fail@plt+0x20af8>
   31d88:	ldr	r0, [fp, #-12]
   31d8c:	movw	r1, #0
   31d90:	cmp	r1, r0
   31d94:	bcs	31e7c <__assert_fail@plt+0x20af8>
   31d98:	ldr	r0, [fp, #-12]
   31d9c:	sub	r0, r0, #1
   31da0:	mvn	r1, #0
   31da4:	cmp	r1, r0
   31da8:	bcc	31e68 <__assert_fail@plt+0x20ae4>
   31dac:	b	31e7c <__assert_fail@plt+0x20af8>
   31db0:	ldr	r0, [fp, #-16]
   31db4:	movw	r1, #0
   31db8:	udiv	r0, r1, r0
   31dbc:	ldr	r1, [fp, #-12]
   31dc0:	cmp	r0, r1
   31dc4:	bcc	31e68 <__assert_fail@plt+0x20ae4>
   31dc8:	b	31e7c <__assert_fail@plt+0x20af8>
   31dcc:	ldr	r0, [fp, #-16]
   31dd0:	cmp	r0, #0
   31dd4:	bne	31ddc <__assert_fail@plt+0x20a58>
   31dd8:	b	31e7c <__assert_fail@plt+0x20af8>
   31ddc:	ldr	r0, [fp, #-12]
   31de0:	cmp	r0, #0
   31de4:	bcs	31e50 <__assert_fail@plt+0x20acc>
   31de8:	b	31df0 <__assert_fail@plt+0x20a6c>
   31dec:	b	31df4 <__assert_fail@plt+0x20a70>
   31df0:	b	31e34 <__assert_fail@plt+0x20ab0>
   31df4:	ldr	r0, [fp, #-12]
   31df8:	cmn	r0, #1
   31dfc:	bne	31e34 <__assert_fail@plt+0x20ab0>
   31e00:	b	31e1c <__assert_fail@plt+0x20a98>
   31e04:	ldr	r0, [fp, #-16]
   31e08:	add	r0, r0, #0
   31e0c:	movw	r1, #0
   31e10:	cmp	r1, r0
   31e14:	bcc	31e68 <__assert_fail@plt+0x20ae4>
   31e18:	b	31e7c <__assert_fail@plt+0x20af8>
   31e1c:	ldr	r0, [fp, #-16]
   31e20:	sub	r0, r0, #1
   31e24:	mvn	r1, #0
   31e28:	cmp	r1, r0
   31e2c:	bcc	31e68 <__assert_fail@plt+0x20ae4>
   31e30:	b	31e7c <__assert_fail@plt+0x20af8>
   31e34:	ldr	r0, [fp, #-12]
   31e38:	movw	r1, #0
   31e3c:	udiv	r0, r1, r0
   31e40:	ldr	r1, [fp, #-16]
   31e44:	cmp	r0, r1
   31e48:	bcc	31e68 <__assert_fail@plt+0x20ae4>
   31e4c:	b	31e7c <__assert_fail@plt+0x20af8>
   31e50:	ldr	r0, [fp, #-16]
   31e54:	mvn	r1, #0
   31e58:	udiv	r0, r1, r0
   31e5c:	ldr	r1, [fp, #-12]
   31e60:	cmp	r0, r1
   31e64:	bcs	31e7c <__assert_fail@plt+0x20af8>
   31e68:	ldr	r0, [fp, #-12]
   31e6c:	ldr	r1, [fp, #-16]
   31e70:	mul	r0, r0, r1
   31e74:	str	r0, [fp, #-20]	; 0xffffffec
   31e78:	b	322c8 <__assert_fail@plt+0x20f44>
   31e7c:	ldr	r0, [fp, #-12]
   31e80:	ldr	r1, [fp, #-16]
   31e84:	mul	r0, r0, r1
   31e88:	str	r0, [fp, #-20]	; 0xffffffec
   31e8c:	b	322e0 <__assert_fail@plt+0x20f5c>
   31e90:	b	320ac <__assert_fail@plt+0x20d28>
   31e94:	ldr	r0, [fp, #-16]
   31e98:	cmp	r0, #0
   31e9c:	bcs	31fdc <__assert_fail@plt+0x20c58>
   31ea0:	ldr	r0, [fp, #-12]
   31ea4:	cmp	r0, #0
   31ea8:	bcs	31f68 <__assert_fail@plt+0x20be4>
   31eac:	b	31eb0 <__assert_fail@plt+0x20b2c>
   31eb0:	ldr	r0, [fp, #-12]
   31eb4:	ldr	r2, [fp, #-16]
   31eb8:	mvn	r1, #0
   31ebc:	mvn	r3, #-2147483648	; 0x80000000
   31ec0:	mov	ip, #0
   31ec4:	str	r0, [sp, #40]	; 0x28
   31ec8:	mov	r0, r1
   31ecc:	mov	r1, r3
   31ed0:	mov	r3, ip
   31ed4:	bl	337f4 <__assert_fail@plt+0x22470>
   31ed8:	ldr	r2, [sp, #40]	; 0x28
   31edc:	subs	r0, r2, r0
   31ee0:	rscs	r1, r1, #0
   31ee4:	blt	32084 <__assert_fail@plt+0x20d00>
   31ee8:	b	32098 <__assert_fail@plt+0x20d14>
   31eec:	b	31f00 <__assert_fail@plt+0x20b7c>
   31ef0:	ldr	r0, [fp, #-16]
   31ef4:	cmp	r0, #1
   31ef8:	bcc	31f10 <__assert_fail@plt+0x20b8c>
   31efc:	b	31f24 <__assert_fail@plt+0x20ba0>
   31f00:	ldr	r0, [fp, #-16]
   31f04:	movw	r1, #0
   31f08:	cmp	r1, r0
   31f0c:	bcs	31f24 <__assert_fail@plt+0x20ba0>
   31f10:	mov	r0, #0
   31f14:	mvn	r1, #0
   31f18:	str	r1, [sp, #36]	; 0x24
   31f1c:	str	r0, [sp, #32]
   31f20:	b	31f48 <__assert_fail@plt+0x20bc4>
   31f24:	ldr	r0, [fp, #-16]
   31f28:	rsb	r2, r0, #0
   31f2c:	mvn	r0, #0
   31f30:	mvn	r1, #-2147483648	; 0x80000000
   31f34:	mov	r3, #0
   31f38:	bl	337f4 <__assert_fail@plt+0x22470>
   31f3c:	str	r0, [sp, #36]	; 0x24
   31f40:	str	r1, [sp, #32]
   31f44:	b	31f48 <__assert_fail@plt+0x20bc4>
   31f48:	ldr	r0, [sp, #32]
   31f4c:	ldr	r1, [sp, #36]	; 0x24
   31f50:	ldr	r2, [fp, #-12]
   31f54:	mvn	r2, r2
   31f58:	subs	r1, r2, r1
   31f5c:	rscs	r0, r0, #0
   31f60:	bge	32084 <__assert_fail@plt+0x20d00>
   31f64:	b	32098 <__assert_fail@plt+0x20d14>
   31f68:	ldr	r0, [fp, #-16]
   31f6c:	cmn	r0, #1
   31f70:	bne	31fb0 <__assert_fail@plt+0x20c2c>
   31f74:	b	31f90 <__assert_fail@plt+0x20c0c>
   31f78:	ldr	r0, [fp, #-12]
   31f7c:	rsbs	r0, r0, #0
   31f80:	mov	r1, #0
   31f84:	sbcs	r1, r1, #-2147483648	; 0x80000000
   31f88:	blt	32084 <__assert_fail@plt+0x20d00>
   31f8c:	b	32098 <__assert_fail@plt+0x20d14>
   31f90:	ldr	r0, [fp, #-12]
   31f94:	movw	r1, #0
   31f98:	cmp	r1, r0
   31f9c:	bcs	32098 <__assert_fail@plt+0x20d14>
   31fa0:	mov	r0, #0
   31fa4:	cmp	r0, #0
   31fa8:	bne	32084 <__assert_fail@plt+0x20d00>
   31fac:	b	32098 <__assert_fail@plt+0x20d14>
   31fb0:	ldr	r2, [fp, #-16]
   31fb4:	mov	r1, #-2147483648	; 0x80000000
   31fb8:	mov	r0, #0
   31fbc:	str	r0, [sp, #28]
   31fc0:	ldr	r3, [sp, #28]
   31fc4:	bl	33720 <__assert_fail@plt+0x2239c>
   31fc8:	ldr	r2, [fp, #-12]
   31fcc:	subs	r0, r0, r2
   31fd0:	sbcs	r1, r1, #0
   31fd4:	blt	32084 <__assert_fail@plt+0x20d00>
   31fd8:	b	32098 <__assert_fail@plt+0x20d14>
   31fdc:	ldr	r0, [fp, #-16]
   31fe0:	cmp	r0, #0
   31fe4:	bne	31fec <__assert_fail@plt+0x20c68>
   31fe8:	b	32098 <__assert_fail@plt+0x20d14>
   31fec:	ldr	r0, [fp, #-12]
   31ff0:	cmp	r0, #0
   31ff4:	bcs	3205c <__assert_fail@plt+0x20cd8>
   31ff8:	ldr	r0, [fp, #-12]
   31ffc:	cmn	r0, #1
   32000:	bne	32030 <__assert_fail@plt+0x20cac>
   32004:	b	32020 <__assert_fail@plt+0x20c9c>
   32008:	ldr	r0, [fp, #-16]
   3200c:	rsbs	r0, r0, #0
   32010:	mov	r1, #0
   32014:	sbcs	r1, r1, #-2147483648	; 0x80000000
   32018:	blt	32084 <__assert_fail@plt+0x20d00>
   3201c:	b	32098 <__assert_fail@plt+0x20d14>
   32020:	mov	r0, #0
   32024:	cmp	r0, #0
   32028:	bne	32084 <__assert_fail@plt+0x20d00>
   3202c:	b	32098 <__assert_fail@plt+0x20d14>
   32030:	ldr	r2, [fp, #-12]
   32034:	mov	r1, #-2147483648	; 0x80000000
   32038:	mov	r0, #0
   3203c:	str	r0, [sp, #24]
   32040:	ldr	r3, [sp, #24]
   32044:	bl	33720 <__assert_fail@plt+0x2239c>
   32048:	ldr	r2, [fp, #-16]
   3204c:	subs	r0, r0, r2
   32050:	sbcs	r1, r1, #0
   32054:	blt	32084 <__assert_fail@plt+0x20d00>
   32058:	b	32098 <__assert_fail@plt+0x20d14>
   3205c:	ldr	r2, [fp, #-16]
   32060:	mvn	r0, #0
   32064:	mvn	r1, #-2147483648	; 0x80000000
   32068:	mov	r3, #0
   3206c:	bl	337f4 <__assert_fail@plt+0x22470>
   32070:	ldr	r2, [fp, #-12]
   32074:	subs	r0, r0, r2
   32078:	sbcs	r1, r1, #0
   3207c:	bge	32098 <__assert_fail@plt+0x20d14>
   32080:	b	32084 <__assert_fail@plt+0x20d00>
   32084:	ldr	r0, [fp, #-12]
   32088:	ldr	r1, [fp, #-16]
   3208c:	mul	r0, r0, r1
   32090:	str	r0, [fp, #-20]	; 0xffffffec
   32094:	b	322c8 <__assert_fail@plt+0x20f44>
   32098:	ldr	r0, [fp, #-12]
   3209c:	ldr	r1, [fp, #-16]
   320a0:	mul	r0, r0, r1
   320a4:	str	r0, [fp, #-20]	; 0xffffffec
   320a8:	b	322e0 <__assert_fail@plt+0x20f5c>
   320ac:	ldr	r0, [fp, #-16]
   320b0:	cmp	r0, #0
   320b4:	bcs	321f0 <__assert_fail@plt+0x20e6c>
   320b8:	ldr	r0, [fp, #-12]
   320bc:	cmp	r0, #0
   320c0:	bcs	32178 <__assert_fail@plt+0x20df4>
   320c4:	b	320f8 <__assert_fail@plt+0x20d74>
   320c8:	ldr	r0, [fp, #-12]
   320cc:	ldr	r2, [fp, #-16]
   320d0:	mvn	r1, #0
   320d4:	mov	r3, #0
   320d8:	str	r0, [sp, #20]
   320dc:	mov	r0, r1
   320e0:	bl	337f4 <__assert_fail@plt+0x22470>
   320e4:	ldr	r2, [sp, #20]
   320e8:	subs	r0, r2, r0
   320ec:	rscs	r1, r1, #0
   320f0:	bcc	322a0 <__assert_fail@plt+0x20f1c>
   320f4:	b	322b4 <__assert_fail@plt+0x20f30>
   320f8:	b	3210c <__assert_fail@plt+0x20d88>
   320fc:	ldr	r0, [fp, #-16]
   32100:	cmp	r0, #1
   32104:	bcc	3211c <__assert_fail@plt+0x20d98>
   32108:	b	32130 <__assert_fail@plt+0x20dac>
   3210c:	ldr	r0, [fp, #-16]
   32110:	movw	r1, #0
   32114:	cmp	r1, r0
   32118:	bcs	32130 <__assert_fail@plt+0x20dac>
   3211c:	mov	r0, #1
   32120:	mvn	r1, #0
   32124:	str	r1, [sp, #16]
   32128:	str	r0, [sp, #12]
   3212c:	b	32158 <__assert_fail@plt+0x20dd4>
   32130:	ldr	r0, [fp, #-16]
   32134:	rsb	r2, r0, #0
   32138:	mvn	r0, #0
   3213c:	mov	r3, #0
   32140:	str	r0, [sp, #8]
   32144:	ldr	r1, [sp, #8]
   32148:	bl	337f4 <__assert_fail@plt+0x22470>
   3214c:	str	r0, [sp, #16]
   32150:	str	r1, [sp, #12]
   32154:	b	32158 <__assert_fail@plt+0x20dd4>
   32158:	ldr	r0, [sp, #12]
   3215c:	ldr	r1, [sp, #16]
   32160:	ldr	r2, [fp, #-12]
   32164:	mvn	r2, r2
   32168:	subs	r1, r2, r1
   3216c:	rscs	r0, r0, #0
   32170:	bcs	322a0 <__assert_fail@plt+0x20f1c>
   32174:	b	322b4 <__assert_fail@plt+0x20f30>
   32178:	b	32180 <__assert_fail@plt+0x20dfc>
   3217c:	b	32184 <__assert_fail@plt+0x20e00>
   32180:	b	321d4 <__assert_fail@plt+0x20e50>
   32184:	ldr	r0, [fp, #-16]
   32188:	cmn	r0, #1
   3218c:	bne	321d4 <__assert_fail@plt+0x20e50>
   32190:	b	321ac <__assert_fail@plt+0x20e28>
   32194:	ldr	r0, [fp, #-12]
   32198:	add	r0, r0, #0
   3219c:	movw	r1, #0
   321a0:	cmp	r1, r0
   321a4:	bcc	322a0 <__assert_fail@plt+0x20f1c>
   321a8:	b	322b4 <__assert_fail@plt+0x20f30>
   321ac:	ldr	r0, [fp, #-12]
   321b0:	movw	r1, #0
   321b4:	cmp	r1, r0
   321b8:	bcs	322b4 <__assert_fail@plt+0x20f30>
   321bc:	ldr	r0, [fp, #-12]
   321c0:	sub	r0, r0, #1
   321c4:	mvn	r1, #0
   321c8:	cmp	r1, r0
   321cc:	bcc	322a0 <__assert_fail@plt+0x20f1c>
   321d0:	b	322b4 <__assert_fail@plt+0x20f30>
   321d4:	ldr	r0, [fp, #-16]
   321d8:	movw	r1, #0
   321dc:	udiv	r0, r1, r0
   321e0:	ldr	r1, [fp, #-12]
   321e4:	cmp	r0, r1
   321e8:	bcc	322a0 <__assert_fail@plt+0x20f1c>
   321ec:	b	322b4 <__assert_fail@plt+0x20f30>
   321f0:	ldr	r0, [fp, #-16]
   321f4:	cmp	r0, #0
   321f8:	bne	32200 <__assert_fail@plt+0x20e7c>
   321fc:	b	322b4 <__assert_fail@plt+0x20f30>
   32200:	ldr	r0, [fp, #-12]
   32204:	cmp	r0, #0
   32208:	bcs	32274 <__assert_fail@plt+0x20ef0>
   3220c:	b	32214 <__assert_fail@plt+0x20e90>
   32210:	b	32218 <__assert_fail@plt+0x20e94>
   32214:	b	32258 <__assert_fail@plt+0x20ed4>
   32218:	ldr	r0, [fp, #-12]
   3221c:	cmn	r0, #1
   32220:	bne	32258 <__assert_fail@plt+0x20ed4>
   32224:	b	32240 <__assert_fail@plt+0x20ebc>
   32228:	ldr	r0, [fp, #-16]
   3222c:	add	r0, r0, #0
   32230:	movw	r1, #0
   32234:	cmp	r1, r0
   32238:	bcc	322a0 <__assert_fail@plt+0x20f1c>
   3223c:	b	322b4 <__assert_fail@plt+0x20f30>
   32240:	ldr	r0, [fp, #-16]
   32244:	sub	r0, r0, #1
   32248:	mvn	r1, #0
   3224c:	cmp	r1, r0
   32250:	bcc	322a0 <__assert_fail@plt+0x20f1c>
   32254:	b	322b4 <__assert_fail@plt+0x20f30>
   32258:	ldr	r0, [fp, #-12]
   3225c:	movw	r1, #0
   32260:	udiv	r0, r1, r0
   32264:	ldr	r1, [fp, #-16]
   32268:	cmp	r0, r1
   3226c:	bcc	322a0 <__assert_fail@plt+0x20f1c>
   32270:	b	322b4 <__assert_fail@plt+0x20f30>
   32274:	ldr	r2, [fp, #-16]
   32278:	mvn	r0, #0
   3227c:	mov	r3, #0
   32280:	str	r0, [sp, #4]
   32284:	ldr	r1, [sp, #4]
   32288:	bl	337f4 <__assert_fail@plt+0x22470>
   3228c:	ldr	r2, [fp, #-12]
   32290:	subs	r0, r0, r2
   32294:	sbcs	r1, r1, #0
   32298:	bcs	322b4 <__assert_fail@plt+0x20f30>
   3229c:	b	322a0 <__assert_fail@plt+0x20f1c>
   322a0:	ldr	r0, [fp, #-12]
   322a4:	ldr	r1, [fp, #-16]
   322a8:	mul	r0, r0, r1
   322ac:	str	r0, [fp, #-20]	; 0xffffffec
   322b0:	b	322c8 <__assert_fail@plt+0x20f44>
   322b4:	ldr	r0, [fp, #-12]
   322b8:	ldr	r1, [fp, #-16]
   322bc:	mul	r0, r0, r1
   322c0:	str	r0, [fp, #-20]	; 0xffffffec
   322c4:	b	322e0 <__assert_fail@plt+0x20f5c>
   322c8:	bl	11294 <__errno_location@plt>
   322cc:	movw	r1, #12
   322d0:	str	r1, [r0]
   322d4:	movw	r0, #0
   322d8:	str	r0, [fp, #-4]
   322dc:	b	322f0 <__assert_fail@plt+0x20f6c>
   322e0:	ldr	r0, [fp, #-8]
   322e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   322e8:	bl	2f118 <__assert_fail@plt+0x1dd94>
   322ec:	str	r0, [fp, #-4]
   322f0:	ldr	r0, [fp, #-4]
   322f4:	mov	sp, fp
   322f8:	pop	{fp, pc}
   322fc:	svcvc	0x00ffffff
   32300:	andhi	r0, r0, r0
   32304:			; <UNDEFINED> instruction: 0xffff8000
   32308:	push	{r4, r5, fp, lr}
   3230c:	add	fp, sp, #8
   32310:	sub	sp, sp, #112	; 0x70
   32314:	sub	sp, sp, #4096	; 0x1000
   32318:	ldr	ip, [fp, #8]
   3231c:	str	r0, [fp, #-16]
   32320:	str	r1, [fp, #-20]	; 0xffffffec
   32324:	str	r2, [fp, #-24]	; 0xffffffe8
   32328:	str	r3, [fp, #-28]	; 0xffffffe4
   3232c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32330:	movw	r1, #0
   32334:	str	r1, [sp, #20]
   32338:	ldr	r2, [sp, #20]
   3233c:	ldr	r3, [sp, #20]
   32340:	ldr	lr, [sp, #20]
   32344:	str	lr, [sp]
   32348:	str	ip, [sp, #16]
   3234c:	bl	110cc <iconv@plt>
   32350:	movw	r1, #0
   32354:	str	r1, [fp, #-40]	; 0xffffffd8
   32358:	ldr	r1, [fp, #-16]
   3235c:	str	r1, [sp, #76]	; 0x4c
   32360:	ldr	r1, [fp, #-20]	; 0xffffffec
   32364:	str	r1, [sp, #72]	; 0x48
   32368:	ldr	r0, [sp, #72]	; 0x48
   3236c:	cmp	r0, #0
   32370:	bls	32404 <__assert_fail@plt+0x21080>
   32374:	add	r0, sp, #80	; 0x50
   32378:	str	r0, [sp, #68]	; 0x44
   3237c:	movw	r0, #4096	; 0x1000
   32380:	str	r0, [sp, #64]	; 0x40
   32384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32388:	add	r1, sp, #76	; 0x4c
   3238c:	add	r2, sp, #72	; 0x48
   32390:	add	r3, sp, #68	; 0x44
   32394:	add	ip, sp, #64	; 0x40
   32398:	str	ip, [sp]
   3239c:	bl	110cc <iconv@plt>
   323a0:	str	r0, [sp, #60]	; 0x3c
   323a4:	ldr	r0, [sp, #60]	; 0x3c
   323a8:	cmn	r0, #1
   323ac:	bne	323e8 <__assert_fail@plt+0x21064>
   323b0:	bl	11294 <__errno_location@plt>
   323b4:	ldr	r0, [r0]
   323b8:	cmp	r0, #7
   323bc:	bne	323c4 <__assert_fail@plt+0x21040>
   323c0:	b	323e4 <__assert_fail@plt+0x21060>
   323c4:	bl	11294 <__errno_location@plt>
   323c8:	ldr	r0, [r0]
   323cc:	cmp	r0, #22
   323d0:	bne	323d8 <__assert_fail@plt+0x21054>
   323d4:	b	32404 <__assert_fail@plt+0x21080>
   323d8:	mvn	r0, #0
   323dc:	str	r0, [fp, #-12]
   323e0:	b	32620 <__assert_fail@plt+0x2129c>
   323e4:	b	323e8 <__assert_fail@plt+0x21064>
   323e8:	ldr	r0, [sp, #68]	; 0x44
   323ec:	add	r1, sp, #80	; 0x50
   323f0:	sub	r0, r0, r1
   323f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   323f8:	add	r0, r1, r0
   323fc:	str	r0, [fp, #-40]	; 0xffffffd8
   32400:	b	32368 <__assert_fail@plt+0x20fe4>
   32404:	add	r0, sp, #80	; 0x50
   32408:	str	r0, [sp, #56]	; 0x38
   3240c:	movw	r0, #4096	; 0x1000
   32410:	str	r0, [sp, #52]	; 0x34
   32414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32418:	movw	r1, #0
   3241c:	str	r1, [sp, #12]
   32420:	ldr	r2, [sp, #12]
   32424:	add	r3, sp, #56	; 0x38
   32428:	add	ip, sp, #52	; 0x34
   3242c:	str	ip, [sp]
   32430:	bl	110cc <iconv@plt>
   32434:	str	r0, [sp, #48]	; 0x30
   32438:	ldr	r0, [sp, #48]	; 0x30
   3243c:	cmn	r0, #1
   32440:	bne	32450 <__assert_fail@plt+0x210cc>
   32444:	mvn	r0, #0
   32448:	str	r0, [fp, #-12]
   3244c:	b	32620 <__assert_fail@plt+0x2129c>
   32450:	ldr	r0, [sp, #56]	; 0x38
   32454:	add	r1, sp, #80	; 0x50
   32458:	sub	r0, r0, r1
   3245c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   32460:	add	r0, r1, r0
   32464:	str	r0, [fp, #-40]	; 0xffffffd8
   32468:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3246c:	str	r0, [fp, #-32]	; 0xffffffe0
   32470:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32474:	cmp	r0, #0
   32478:	bne	32490 <__assert_fail@plt+0x2110c>
   3247c:	ldr	r0, [fp, #8]
   32480:	movw	r1, #0
   32484:	str	r1, [r0]
   32488:	str	r1, [fp, #-12]
   3248c:	b	32620 <__assert_fail@plt+0x2129c>
   32490:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32494:	ldr	r0, [r0]
   32498:	movw	r1, #0
   3249c:	cmp	r0, r1
   324a0:	beq	324c8 <__assert_fail@plt+0x21144>
   324a4:	ldr	r0, [fp, #8]
   324a8:	ldr	r0, [r0]
   324ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   324b0:	cmp	r0, r1
   324b4:	bcc	324c8 <__assert_fail@plt+0x21144>
   324b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   324bc:	ldr	r0, [r0]
   324c0:	str	r0, [fp, #-36]	; 0xffffffdc
   324c4:	b	32500 <__assert_fail@plt+0x2117c>
   324c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   324cc:	bl	2f0a8 <__assert_fail@plt+0x1dd24>
   324d0:	str	r0, [fp, #-36]	; 0xffffffdc
   324d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   324d8:	movw	r1, #0
   324dc:	cmp	r0, r1
   324e0:	bne	324fc <__assert_fail@plt+0x21178>
   324e4:	bl	11294 <__errno_location@plt>
   324e8:	movw	r1, #12
   324ec:	str	r1, [r0]
   324f0:	mvn	r0, #0
   324f4:	str	r0, [fp, #-12]
   324f8:	b	32620 <__assert_fail@plt+0x2129c>
   324fc:	b	32500 <__assert_fail@plt+0x2117c>
   32500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32504:	movw	r1, #0
   32508:	str	r1, [sp, #8]
   3250c:	ldr	r2, [sp, #8]
   32510:	ldr	r3, [sp, #8]
   32514:	ldr	ip, [sp, #8]
   32518:	str	ip, [sp]
   3251c:	bl	110cc <iconv@plt>
   32520:	ldr	r1, [fp, #-16]
   32524:	str	r1, [sp, #44]	; 0x2c
   32528:	ldr	r1, [fp, #-20]	; 0xffffffec
   3252c:	str	r1, [sp, #40]	; 0x28
   32530:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32534:	str	r1, [sp, #36]	; 0x24
   32538:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3253c:	str	r1, [sp, #32]
   32540:	ldr	r0, [sp, #40]	; 0x28
   32544:	cmp	r0, #0
   32548:	bls	32594 <__assert_fail@plt+0x21210>
   3254c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32550:	add	r1, sp, #44	; 0x2c
   32554:	add	r2, sp, #40	; 0x28
   32558:	add	r3, sp, #36	; 0x24
   3255c:	add	ip, sp, #32
   32560:	str	ip, [sp]
   32564:	bl	110cc <iconv@plt>
   32568:	str	r0, [sp, #28]
   3256c:	ldr	r0, [sp, #28]
   32570:	cmn	r0, #1
   32574:	bne	32590 <__assert_fail@plt+0x2120c>
   32578:	bl	11294 <__errno_location@plt>
   3257c:	ldr	r0, [r0]
   32580:	cmp	r0, #22
   32584:	bne	3258c <__assert_fail@plt+0x21208>
   32588:	b	32594 <__assert_fail@plt+0x21210>
   3258c:	b	325fc <__assert_fail@plt+0x21278>
   32590:	b	32540 <__assert_fail@plt+0x211bc>
   32594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32598:	movw	r1, #0
   3259c:	str	r1, [sp, #4]
   325a0:	ldr	r2, [sp, #4]
   325a4:	add	r3, sp, #36	; 0x24
   325a8:	add	ip, sp, #32
   325ac:	str	ip, [sp]
   325b0:	bl	110cc <iconv@plt>
   325b4:	str	r0, [sp, #24]
   325b8:	ldr	r0, [sp, #24]
   325bc:	cmn	r0, #1
   325c0:	bne	325c8 <__assert_fail@plt+0x21244>
   325c4:	b	325fc <__assert_fail@plt+0x21278>
   325c8:	ldr	r0, [sp, #32]
   325cc:	cmp	r0, #0
   325d0:	beq	325d8 <__assert_fail@plt+0x21254>
   325d4:	bl	1136c <abort@plt>
   325d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   325dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   325e0:	str	r0, [r1]
   325e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   325e8:	ldr	r1, [fp, #8]
   325ec:	str	r0, [r1]
   325f0:	movw	r0, #0
   325f4:	str	r0, [fp, #-12]
   325f8:	b	32620 <__assert_fail@plt+0x2129c>
   325fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32600:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32604:	ldr	r1, [r1]
   32608:	cmp	r0, r1
   3260c:	beq	32618 <__assert_fail@plt+0x21294>
   32610:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32614:	bl	1aaec <__assert_fail@plt+0x9768>
   32618:	mvn	r0, #0
   3261c:	str	r0, [fp, #-12]
   32620:	ldr	r0, [fp, #-12]
   32624:	sub	sp, fp, #8
   32628:	pop	{r4, r5, fp, pc}
   3262c:	push	{fp, lr}
   32630:	mov	fp, sp
   32634:	sub	sp, sp, #96	; 0x60
   32638:	str	r0, [fp, #-8]
   3263c:	str	r1, [fp, #-12]
   32640:	ldr	r0, [fp, #-8]
   32644:	str	r0, [fp, #-28]	; 0xffffffe4
   32648:	ldr	r0, [fp, #-8]
   3264c:	bl	11270 <strlen@plt>
   32650:	str	r0, [fp, #-32]	; 0xffffffe0
   32654:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32658:	str	r0, [fp, #-20]	; 0xffffffec
   3265c:	movw	r0, #65535	; 0xffff
   32660:	str	r0, [fp, #-36]	; 0xffffffdc
   32664:	ldr	r0, [fp, #-20]	; 0xffffffec
   32668:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3266c:	lsr	r1, r1, #4
   32670:	cmp	r0, r1
   32674:	bhi	32684 <__assert_fail@plt+0x21300>
   32678:	ldr	r0, [fp, #-20]	; 0xffffffec
   3267c:	lsl	r0, r0, #4
   32680:	str	r0, [fp, #-20]	; 0xffffffec
   32684:	ldr	r0, [fp, #-20]	; 0xffffffec
   32688:	add	r0, r0, #1
   3268c:	str	r0, [fp, #-20]	; 0xffffffec
   32690:	ldr	r0, [fp, #-20]	; 0xffffffec
   32694:	bl	2f0a8 <__assert_fail@plt+0x1dd24>
   32698:	str	r0, [fp, #-16]
   3269c:	ldr	r0, [fp, #-16]
   326a0:	movw	r1, #0
   326a4:	cmp	r0, r1
   326a8:	bne	326c4 <__assert_fail@plt+0x21340>
   326ac:	bl	11294 <__errno_location@plt>
   326b0:	movw	r1, #12
   326b4:	str	r1, [r0]
   326b8:	movw	r0, #0
   326bc:	str	r0, [fp, #-4]
   326c0:	b	32974 <__assert_fail@plt+0x215f0>
   326c4:	ldr	r0, [fp, #-12]
   326c8:	movw	r1, #0
   326cc:	str	r1, [sp, #12]
   326d0:	ldr	r2, [sp, #12]
   326d4:	ldr	r3, [sp, #12]
   326d8:	ldr	ip, [sp, #12]
   326dc:	str	ip, [sp]
   326e0:	bl	110cc <iconv@plt>
   326e4:	ldr	r1, [fp, #-16]
   326e8:	str	r1, [fp, #-40]	; 0xffffffd8
   326ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   326f0:	sub	r1, r1, #1
   326f4:	str	r1, [fp, #-44]	; 0xffffffd4
   326f8:	ldr	r0, [fp, #-12]
   326fc:	sub	r1, fp, #28
   32700:	sub	r2, fp, #32
   32704:	sub	r3, fp, #40	; 0x28
   32708:	sub	ip, fp, #44	; 0x2c
   3270c:	str	ip, [sp]
   32710:	bl	110cc <iconv@plt>
   32714:	str	r0, [sp, #48]	; 0x30
   32718:	ldr	r0, [sp, #48]	; 0x30
   3271c:	cmn	r0, #1
   32720:	bne	327f8 <__assert_fail@plt+0x21474>
   32724:	bl	11294 <__errno_location@plt>
   32728:	ldr	r0, [r0]
   3272c:	cmp	r0, #22
   32730:	bne	32738 <__assert_fail@plt+0x213b4>
   32734:	b	32800 <__assert_fail@plt+0x2147c>
   32738:	bl	11294 <__errno_location@plt>
   3273c:	ldr	r0, [r0]
   32740:	cmp	r0, #7
   32744:	bne	327ec <__assert_fail@plt+0x21468>
   32748:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3274c:	ldr	r1, [fp, #-16]
   32750:	sub	r0, r0, r1
   32754:	str	r0, [sp, #44]	; 0x2c
   32758:	ldr	r0, [fp, #-20]	; 0xffffffec
   3275c:	lsl	r0, r0, #1
   32760:	str	r0, [sp, #40]	; 0x28
   32764:	ldr	r0, [sp, #40]	; 0x28
   32768:	ldr	r1, [fp, #-20]	; 0xffffffec
   3276c:	cmp	r0, r1
   32770:	bhi	32784 <__assert_fail@plt+0x21400>
   32774:	bl	11294 <__errno_location@plt>
   32778:	movw	r1, #12
   3277c:	str	r1, [r0]
   32780:	b	32964 <__assert_fail@plt+0x215e0>
   32784:	ldr	r0, [fp, #-16]
   32788:	ldr	r1, [sp, #40]	; 0x28
   3278c:	bl	2f118 <__assert_fail@plt+0x1dd94>
   32790:	str	r0, [sp, #36]	; 0x24
   32794:	ldr	r0, [sp, #36]	; 0x24
   32798:	movw	r1, #0
   3279c:	cmp	r0, r1
   327a0:	bne	327b4 <__assert_fail@plt+0x21430>
   327a4:	bl	11294 <__errno_location@plt>
   327a8:	movw	r1, #12
   327ac:	str	r1, [r0]
   327b0:	b	32964 <__assert_fail@plt+0x215e0>
   327b4:	ldr	r0, [sp, #36]	; 0x24
   327b8:	str	r0, [fp, #-16]
   327bc:	ldr	r0, [sp, #40]	; 0x28
   327c0:	str	r0, [fp, #-20]	; 0xffffffec
   327c4:	ldr	r0, [fp, #-16]
   327c8:	ldr	r1, [sp, #44]	; 0x2c
   327cc:	add	r0, r0, r1
   327d0:	str	r0, [fp, #-40]	; 0xffffffd8
   327d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   327d8:	sub	r0, r0, #1
   327dc:	ldr	r1, [sp, #44]	; 0x2c
   327e0:	sub	r0, r0, r1
   327e4:	str	r0, [fp, #-44]	; 0xffffffd4
   327e8:	b	327f0 <__assert_fail@plt+0x2146c>
   327ec:	b	32964 <__assert_fail@plt+0x215e0>
   327f0:	b	327f4 <__assert_fail@plt+0x21470>
   327f4:	b	327fc <__assert_fail@plt+0x21478>
   327f8:	b	32800 <__assert_fail@plt+0x2147c>
   327fc:	b	326f8 <__assert_fail@plt+0x21374>
   32800:	b	32804 <__assert_fail@plt+0x21480>
   32804:	ldr	r0, [fp, #-12]
   32808:	movw	r1, #0
   3280c:	str	r1, [sp, #8]
   32810:	ldr	r2, [sp, #8]
   32814:	sub	r3, fp, #40	; 0x28
   32818:	sub	ip, fp, #44	; 0x2c
   3281c:	str	ip, [sp]
   32820:	bl	110cc <iconv@plt>
   32824:	str	r0, [sp, #32]
   32828:	ldr	r0, [sp, #32]
   3282c:	cmn	r0, #1
   32830:	bne	328f0 <__assert_fail@plt+0x2156c>
   32834:	bl	11294 <__errno_location@plt>
   32838:	ldr	r0, [r0]
   3283c:	cmp	r0, #7
   32840:	bne	328e8 <__assert_fail@plt+0x21564>
   32844:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32848:	ldr	r1, [fp, #-16]
   3284c:	sub	r0, r0, r1
   32850:	str	r0, [sp, #28]
   32854:	ldr	r0, [fp, #-20]	; 0xffffffec
   32858:	lsl	r0, r0, #1
   3285c:	str	r0, [sp, #24]
   32860:	ldr	r0, [sp, #24]
   32864:	ldr	r1, [fp, #-20]	; 0xffffffec
   32868:	cmp	r0, r1
   3286c:	bhi	32880 <__assert_fail@plt+0x214fc>
   32870:	bl	11294 <__errno_location@plt>
   32874:	movw	r1, #12
   32878:	str	r1, [r0]
   3287c:	b	32964 <__assert_fail@plt+0x215e0>
   32880:	ldr	r0, [fp, #-16]
   32884:	ldr	r1, [sp, #24]
   32888:	bl	2f118 <__assert_fail@plt+0x1dd94>
   3288c:	str	r0, [sp, #20]
   32890:	ldr	r0, [sp, #20]
   32894:	movw	r1, #0
   32898:	cmp	r0, r1
   3289c:	bne	328b0 <__assert_fail@plt+0x2152c>
   328a0:	bl	11294 <__errno_location@plt>
   328a4:	movw	r1, #12
   328a8:	str	r1, [r0]
   328ac:	b	32964 <__assert_fail@plt+0x215e0>
   328b0:	ldr	r0, [sp, #20]
   328b4:	str	r0, [fp, #-16]
   328b8:	ldr	r0, [sp, #24]
   328bc:	str	r0, [fp, #-20]	; 0xffffffec
   328c0:	ldr	r0, [fp, #-16]
   328c4:	ldr	r1, [sp, #28]
   328c8:	add	r0, r0, r1
   328cc:	str	r0, [fp, #-40]	; 0xffffffd8
   328d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   328d4:	sub	r0, r0, #1
   328d8:	ldr	r1, [sp, #28]
   328dc:	sub	r0, r0, r1
   328e0:	str	r0, [fp, #-44]	; 0xffffffd4
   328e4:	b	328ec <__assert_fail@plt+0x21568>
   328e8:	b	32964 <__assert_fail@plt+0x215e0>
   328ec:	b	328f4 <__assert_fail@plt+0x21570>
   328f0:	b	328f8 <__assert_fail@plt+0x21574>
   328f4:	b	32804 <__assert_fail@plt+0x21480>
   328f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   328fc:	add	r1, r0, #1
   32900:	str	r1, [fp, #-40]	; 0xffffffd8
   32904:	movw	r1, #0
   32908:	strb	r1, [r0]
   3290c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32910:	ldr	r1, [fp, #-16]
   32914:	sub	r0, r0, r1
   32918:	str	r0, [fp, #-24]	; 0xffffffe8
   3291c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32920:	ldr	r1, [fp, #-20]	; 0xffffffec
   32924:	cmp	r0, r1
   32928:	bcs	32958 <__assert_fail@plt+0x215d4>
   3292c:	ldr	r0, [fp, #-16]
   32930:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32934:	bl	2f118 <__assert_fail@plt+0x1dd94>
   32938:	str	r0, [sp, #16]
   3293c:	ldr	r0, [sp, #16]
   32940:	movw	r1, #0
   32944:	cmp	r0, r1
   32948:	beq	32954 <__assert_fail@plt+0x215d0>
   3294c:	ldr	r0, [sp, #16]
   32950:	str	r0, [fp, #-16]
   32954:	b	32958 <__assert_fail@plt+0x215d4>
   32958:	ldr	r0, [fp, #-16]
   3295c:	str	r0, [fp, #-4]
   32960:	b	32974 <__assert_fail@plt+0x215f0>
   32964:	ldr	r0, [fp, #-16]
   32968:	bl	1aaec <__assert_fail@plt+0x9768>
   3296c:	movw	r0, #0
   32970:	str	r0, [fp, #-4]
   32974:	ldr	r0, [fp, #-4]
   32978:	mov	sp, fp
   3297c:	pop	{fp, pc}
   32980:	push	{fp, lr}
   32984:	mov	fp, sp
   32988:	sub	sp, sp, #40	; 0x28
   3298c:	str	r0, [fp, #-8]
   32990:	str	r1, [fp, #-12]
   32994:	str	r2, [fp, #-16]
   32998:	ldr	r0, [fp, #-8]
   3299c:	ldrb	r0, [r0]
   329a0:	cmp	r0, #0
   329a4:	beq	329bc <__assert_fail@plt+0x21638>
   329a8:	ldr	r0, [fp, #-12]
   329ac:	ldr	r1, [fp, #-16]
   329b0:	bl	2f1bc <__assert_fail@plt+0x1de38>
   329b4:	cmp	r0, #0
   329b8:	bne	329f0 <__assert_fail@plt+0x2166c>
   329bc:	ldr	r0, [fp, #-8]
   329c0:	bl	1115c <strdup@plt>
   329c4:	str	r0, [sp, #20]
   329c8:	ldr	r0, [sp, #20]
   329cc:	movw	r1, #0
   329d0:	cmp	r0, r1
   329d4:	bne	329e4 <__assert_fail@plt+0x21660>
   329d8:	bl	11294 <__errno_location@plt>
   329dc:	movw	r1, #12
   329e0:	str	r1, [r0]
   329e4:	ldr	r0, [sp, #20]
   329e8:	str	r0, [fp, #-4]
   329ec:	b	32a9c <__assert_fail@plt+0x21718>
   329f0:	ldr	r0, [fp, #-16]
   329f4:	ldr	r1, [fp, #-12]
   329f8:	bl	11204 <iconv_open@plt>
   329fc:	str	r0, [sp, #16]
   32a00:	ldr	r0, [sp, #16]
   32a04:	mvn	r1, #0
   32a08:	cmp	r0, r1
   32a0c:	bne	32a1c <__assert_fail@plt+0x21698>
   32a10:	movw	r0, #0
   32a14:	str	r0, [fp, #-4]
   32a18:	b	32a9c <__assert_fail@plt+0x21718>
   32a1c:	ldr	r0, [fp, #-8]
   32a20:	ldr	r1, [sp, #16]
   32a24:	bl	3262c <__assert_fail@plt+0x212a8>
   32a28:	str	r0, [sp, #12]
   32a2c:	ldr	r0, [sp, #12]
   32a30:	movw	r1, #0
   32a34:	cmp	r0, r1
   32a38:	bne	32a6c <__assert_fail@plt+0x216e8>
   32a3c:	bl	11294 <__errno_location@plt>
   32a40:	ldr	r0, [r0]
   32a44:	str	r0, [sp, #8]
   32a48:	ldr	r0, [sp, #16]
   32a4c:	bl	110c0 <iconv_close@plt>
   32a50:	ldr	r1, [sp, #8]
   32a54:	str	r0, [sp, #4]
   32a58:	str	r1, [sp]
   32a5c:	bl	11294 <__errno_location@plt>
   32a60:	ldr	r1, [sp]
   32a64:	str	r1, [r0]
   32a68:	b	32a94 <__assert_fail@plt+0x21710>
   32a6c:	ldr	r0, [sp, #16]
   32a70:	bl	110c0 <iconv_close@plt>
   32a74:	cmp	r0, #0
   32a78:	bge	32a90 <__assert_fail@plt+0x2170c>
   32a7c:	ldr	r0, [sp, #12]
   32a80:	bl	1aaec <__assert_fail@plt+0x9768>
   32a84:	movw	r0, #0
   32a88:	str	r0, [fp, #-4]
   32a8c:	b	32a9c <__assert_fail@plt+0x21718>
   32a90:	b	32a94 <__assert_fail@plt+0x21710>
   32a94:	ldr	r0, [sp, #12]
   32a98:	str	r0, [fp, #-4]
   32a9c:	ldr	r0, [fp, #-4]
   32aa0:	mov	sp, fp
   32aa4:	pop	{fp, pc}
   32aa8:	push	{fp, lr}
   32aac:	mov	fp, sp
   32ab0:	sub	sp, sp, #16
   32ab4:	str	r0, [sp, #8]
   32ab8:	str	r1, [sp, #4]
   32abc:	ldr	r0, [sp, #8]
   32ac0:	ldr	r2, [sp, #4]
   32ac4:	mov	r1, #0
   32ac8:	bl	112dc <memchr@plt>
   32acc:	str	r0, [sp]
   32ad0:	ldr	r0, [sp]
   32ad4:	movw	r1, #0
   32ad8:	cmp	r0, r1
   32adc:	beq	32af8 <__assert_fail@plt+0x21774>
   32ae0:	ldr	r0, [sp]
   32ae4:	ldr	r1, [sp, #8]
   32ae8:	sub	r0, r0, r1
   32aec:	add	r0, r0, #1
   32af0:	str	r0, [fp, #-4]
   32af4:	b	32b00 <__assert_fail@plt+0x2177c>
   32af8:	ldr	r0, [sp, #4]
   32afc:	str	r0, [fp, #-4]
   32b00:	ldr	r0, [fp, #-4]
   32b04:	mov	sp, fp
   32b08:	pop	{fp, pc}
   32b0c:	sub	sp, sp, #12
   32b10:	str	r0, [sp, #4]
   32b14:	ldr	r0, [sp, #4]
   32b18:	sub	r1, r0, #48	; 0x30
   32b1c:	cmp	r1, #10
   32b20:	str	r0, [sp]
   32b24:	bcc	32b54 <__assert_fail@plt+0x217d0>
   32b28:	b	32b2c <__assert_fail@plt+0x217a8>
   32b2c:	ldr	r0, [sp]
   32b30:	sub	r1, r0, #65	; 0x41
   32b34:	cmp	r1, #26
   32b38:	bcc	32b54 <__assert_fail@plt+0x217d0>
   32b3c:	b	32b40 <__assert_fail@plt+0x217bc>
   32b40:	ldr	r0, [sp]
   32b44:	sub	r1, r0, #97	; 0x61
   32b48:	cmp	r1, #25
   32b4c:	bhi	32b64 <__assert_fail@plt+0x217e0>
   32b50:	b	32b54 <__assert_fail@plt+0x217d0>
   32b54:	movw	r0, #1
   32b58:	and	r0, r0, #1
   32b5c:	strb	r0, [sp, #11]
   32b60:	b	32b70 <__assert_fail@plt+0x217ec>
   32b64:	movw	r0, #0
   32b68:	and	r0, r0, #1
   32b6c:	strb	r0, [sp, #11]
   32b70:	ldrb	r0, [sp, #11]
   32b74:	and	r0, r0, #1
   32b78:	add	sp, sp, #12
   32b7c:	bx	lr
   32b80:	sub	sp, sp, #12
   32b84:	str	r0, [sp, #4]
   32b88:	ldr	r0, [sp, #4]
   32b8c:	sub	r1, r0, #65	; 0x41
   32b90:	cmp	r1, #26
   32b94:	str	r0, [sp]
   32b98:	bcc	32bb4 <__assert_fail@plt+0x21830>
   32b9c:	b	32ba0 <__assert_fail@plt+0x2181c>
   32ba0:	ldr	r0, [sp]
   32ba4:	sub	r1, r0, #97	; 0x61
   32ba8:	cmp	r1, #25
   32bac:	bhi	32bc4 <__assert_fail@plt+0x21840>
   32bb0:	b	32bb4 <__assert_fail@plt+0x21830>
   32bb4:	movw	r0, #1
   32bb8:	and	r0, r0, #1
   32bbc:	strb	r0, [sp, #11]
   32bc0:	b	32bd0 <__assert_fail@plt+0x2184c>
   32bc4:	movw	r0, #0
   32bc8:	and	r0, r0, #1
   32bcc:	strb	r0, [sp, #11]
   32bd0:	ldrb	r0, [sp, #11]
   32bd4:	and	r0, r0, #1
   32bd8:	add	sp, sp, #12
   32bdc:	bx	lr
   32be0:	sub	sp, sp, #8
   32be4:	str	r0, [sp]
   32be8:	ldr	r0, [sp]
   32bec:	cmp	r0, #127	; 0x7f
   32bf0:	bhi	32c08 <__assert_fail@plt+0x21884>
   32bf4:	b	32bf8 <__assert_fail@plt+0x21874>
   32bf8:	movw	r0, #1
   32bfc:	and	r0, r0, #1
   32c00:	strb	r0, [sp, #7]
   32c04:	b	32c14 <__assert_fail@plt+0x21890>
   32c08:	movw	r0, #0
   32c0c:	and	r0, r0, #1
   32c10:	strb	r0, [sp, #7]
   32c14:	ldrb	r0, [sp, #7]
   32c18:	and	r0, r0, #1
   32c1c:	add	sp, sp, #8
   32c20:	bx	lr
   32c24:	sub	sp, sp, #8
   32c28:	str	r0, [sp, #4]
   32c2c:	ldr	r0, [sp, #4]
   32c30:	cmp	r0, #32
   32c34:	movw	r0, #1
   32c38:	str	r0, [sp]
   32c3c:	beq	32c54 <__assert_fail@plt+0x218d0>
   32c40:	ldr	r0, [sp, #4]
   32c44:	cmp	r0, #9
   32c48:	movw	r0, #0
   32c4c:	moveq	r0, #1
   32c50:	str	r0, [sp]
   32c54:	ldr	r0, [sp]
   32c58:	and	r0, r0, #1
   32c5c:	add	sp, sp, #8
   32c60:	bx	lr
   32c64:	sub	sp, sp, #12
   32c68:	str	r0, [sp, #4]
   32c6c:	ldr	r0, [sp, #4]
   32c70:	cmp	r0, #32
   32c74:	str	r0, [sp]
   32c78:	bcc	32c90 <__assert_fail@plt+0x2190c>
   32c7c:	b	32c80 <__assert_fail@plt+0x218fc>
   32c80:	ldr	r0, [sp]
   32c84:	cmp	r0, #127	; 0x7f
   32c88:	bne	32ca0 <__assert_fail@plt+0x2191c>
   32c8c:	b	32c90 <__assert_fail@plt+0x2190c>
   32c90:	movw	r0, #1
   32c94:	and	r0, r0, #1
   32c98:	strb	r0, [sp, #11]
   32c9c:	b	32cac <__assert_fail@plt+0x21928>
   32ca0:	movw	r0, #0
   32ca4:	and	r0, r0, #1
   32ca8:	strb	r0, [sp, #11]
   32cac:	ldrb	r0, [sp, #11]
   32cb0:	and	r0, r0, #1
   32cb4:	add	sp, sp, #12
   32cb8:	bx	lr
   32cbc:	sub	sp, sp, #8
   32cc0:	str	r0, [sp]
   32cc4:	ldr	r0, [sp]
   32cc8:	sub	r0, r0, #48	; 0x30
   32ccc:	cmp	r0, #9
   32cd0:	bhi	32ce8 <__assert_fail@plt+0x21964>
   32cd4:	b	32cd8 <__assert_fail@plt+0x21954>
   32cd8:	movw	r0, #1
   32cdc:	and	r0, r0, #1
   32ce0:	strb	r0, [sp, #7]
   32ce4:	b	32cf4 <__assert_fail@plt+0x21970>
   32ce8:	movw	r0, #0
   32cec:	and	r0, r0, #1
   32cf0:	strb	r0, [sp, #7]
   32cf4:	ldrb	r0, [sp, #7]
   32cf8:	and	r0, r0, #1
   32cfc:	add	sp, sp, #8
   32d00:	bx	lr
   32d04:	sub	sp, sp, #8
   32d08:	str	r0, [sp]
   32d0c:	ldr	r0, [sp]
   32d10:	sub	r0, r0, #33	; 0x21
   32d14:	cmp	r0, #93	; 0x5d
   32d18:	bhi	32d30 <__assert_fail@plt+0x219ac>
   32d1c:	b	32d20 <__assert_fail@plt+0x2199c>
   32d20:	movw	r0, #1
   32d24:	and	r0, r0, #1
   32d28:	strb	r0, [sp, #7]
   32d2c:	b	32d3c <__assert_fail@plt+0x219b8>
   32d30:	movw	r0, #0
   32d34:	and	r0, r0, #1
   32d38:	strb	r0, [sp, #7]
   32d3c:	ldrb	r0, [sp, #7]
   32d40:	and	r0, r0, #1
   32d44:	add	sp, sp, #8
   32d48:	bx	lr
   32d4c:	sub	sp, sp, #8
   32d50:	str	r0, [sp]
   32d54:	ldr	r0, [sp]
   32d58:	sub	r0, r0, #97	; 0x61
   32d5c:	cmp	r0, #25
   32d60:	bhi	32d78 <__assert_fail@plt+0x219f4>
   32d64:	b	32d68 <__assert_fail@plt+0x219e4>
   32d68:	movw	r0, #1
   32d6c:	and	r0, r0, #1
   32d70:	strb	r0, [sp, #7]
   32d74:	b	32d84 <__assert_fail@plt+0x21a00>
   32d78:	movw	r0, #0
   32d7c:	and	r0, r0, #1
   32d80:	strb	r0, [sp, #7]
   32d84:	ldrb	r0, [sp, #7]
   32d88:	and	r0, r0, #1
   32d8c:	add	sp, sp, #8
   32d90:	bx	lr
   32d94:	sub	sp, sp, #8
   32d98:	str	r0, [sp]
   32d9c:	ldr	r0, [sp]
   32da0:	sub	r0, r0, #32
   32da4:	cmp	r0, #94	; 0x5e
   32da8:	bhi	32dc0 <__assert_fail@plt+0x21a3c>
   32dac:	b	32db0 <__assert_fail@plt+0x21a2c>
   32db0:	movw	r0, #1
   32db4:	and	r0, r0, #1
   32db8:	strb	r0, [sp, #7]
   32dbc:	b	32dcc <__assert_fail@plt+0x21a48>
   32dc0:	movw	r0, #0
   32dc4:	and	r0, r0, #1
   32dc8:	strb	r0, [sp, #7]
   32dcc:	ldrb	r0, [sp, #7]
   32dd0:	and	r0, r0, #1
   32dd4:	add	sp, sp, #8
   32dd8:	bx	lr
   32ddc:	sub	sp, sp, #12
   32de0:	str	r0, [sp, #4]
   32de4:	ldr	r0, [sp, #4]
   32de8:	sub	r0, r0, #33	; 0x21
   32dec:	cmp	r0, #93	; 0x5d
   32df0:	str	r0, [sp]
   32df4:	bhi	32f90 <__assert_fail@plt+0x21c0c>
   32df8:	add	r0, pc, #8
   32dfc:	ldr	r1, [sp]
   32e00:	ldr	r0, [r0, r1, lsl #2]
   32e04:	mov	pc, r0
   32e08:	andeq	r2, r3, r0, lsl #31
   32e0c:	andeq	r2, r3, r0, lsl #31
   32e10:	andeq	r2, r3, r0, lsl #31
   32e14:	andeq	r2, r3, r0, lsl #31
   32e18:	andeq	r2, r3, r0, lsl #31
   32e1c:	andeq	r2, r3, r0, lsl #31
   32e20:	andeq	r2, r3, r0, lsl #31
   32e24:	andeq	r2, r3, r0, lsl #31
   32e28:	andeq	r2, r3, r0, lsl #31
   32e2c:	andeq	r2, r3, r0, lsl #31
   32e30:	andeq	r2, r3, r0, lsl #31
   32e34:	andeq	r2, r3, r0, lsl #31
   32e38:	andeq	r2, r3, r0, lsl #31
   32e3c:	andeq	r2, r3, r0, lsl #31
   32e40:	andeq	r2, r3, r0, lsl #31
   32e44:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e48:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e4c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e50:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e54:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e58:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e5c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e60:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e64:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e68:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e6c:	andeq	r2, r3, r0, lsl #31
   32e70:	andeq	r2, r3, r0, lsl #31
   32e74:	andeq	r2, r3, r0, lsl #31
   32e78:	andeq	r2, r3, r0, lsl #31
   32e7c:	andeq	r2, r3, r0, lsl #31
   32e80:	andeq	r2, r3, r0, lsl #31
   32e84:	andeq	r2, r3, r0, lsl #31
   32e88:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e8c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e90:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e94:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e98:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32e9c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ea0:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ea4:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ea8:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32eac:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32eb0:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32eb4:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32eb8:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ebc:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ec0:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ec4:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ec8:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ecc:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ed0:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ed4:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ed8:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32edc:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ee0:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ee4:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ee8:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32eec:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32ef0:	andeq	r2, r3, r0, lsl #31
   32ef4:	andeq	r2, r3, r0, lsl #31
   32ef8:	andeq	r2, r3, r0, lsl #31
   32efc:	andeq	r2, r3, r0, lsl #31
   32f00:	andeq	r2, r3, r0, lsl #31
   32f04:	andeq	r2, r3, r0, lsl #31
   32f08:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f0c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f10:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f14:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f18:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f1c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f20:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f24:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f28:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f2c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f30:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f34:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f38:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f3c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f40:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f44:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f48:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f4c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f50:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f54:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f58:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f5c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f60:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f64:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f68:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f6c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32f70:	andeq	r2, r3, r0, lsl #31
   32f74:	andeq	r2, r3, r0, lsl #31
   32f78:	andeq	r2, r3, r0, lsl #31
   32f7c:	andeq	r2, r3, r0, lsl #31
   32f80:	movw	r0, #1
   32f84:	and	r0, r0, #1
   32f88:	strb	r0, [sp, #11]
   32f8c:	b	32f9c <__assert_fail@plt+0x21c18>
   32f90:	movw	r0, #0
   32f94:	and	r0, r0, #1
   32f98:	strb	r0, [sp, #11]
   32f9c:	ldrb	r0, [sp, #11]
   32fa0:	and	r0, r0, #1
   32fa4:	add	sp, sp, #12
   32fa8:	bx	lr
   32fac:	sub	sp, sp, #12
   32fb0:	str	r0, [sp, #4]
   32fb4:	ldr	r0, [sp, #4]
   32fb8:	sub	r1, r0, #9
   32fbc:	cmp	r1, #5
   32fc0:	str	r0, [sp]
   32fc4:	bcc	32fdc <__assert_fail@plt+0x21c58>
   32fc8:	b	32fcc <__assert_fail@plt+0x21c48>
   32fcc:	ldr	r0, [sp]
   32fd0:	cmp	r0, #32
   32fd4:	bne	32fec <__assert_fail@plt+0x21c68>
   32fd8:	b	32fdc <__assert_fail@plt+0x21c58>
   32fdc:	movw	r0, #1
   32fe0:	and	r0, r0, #1
   32fe4:	strb	r0, [sp, #11]
   32fe8:	b	32ff8 <__assert_fail@plt+0x21c74>
   32fec:	movw	r0, #0
   32ff0:	and	r0, r0, #1
   32ff4:	strb	r0, [sp, #11]
   32ff8:	ldrb	r0, [sp, #11]
   32ffc:	and	r0, r0, #1
   33000:	add	sp, sp, #12
   33004:	bx	lr
   33008:	sub	sp, sp, #8
   3300c:	str	r0, [sp]
   33010:	ldr	r0, [sp]
   33014:	sub	r0, r0, #65	; 0x41
   33018:	cmp	r0, #25
   3301c:	bhi	33034 <__assert_fail@plt+0x21cb0>
   33020:	b	33024 <__assert_fail@plt+0x21ca0>
   33024:	movw	r0, #1
   33028:	and	r0, r0, #1
   3302c:	strb	r0, [sp, #7]
   33030:	b	33040 <__assert_fail@plt+0x21cbc>
   33034:	movw	r0, #0
   33038:	and	r0, r0, #1
   3303c:	strb	r0, [sp, #7]
   33040:	ldrb	r0, [sp, #7]
   33044:	and	r0, r0, #1
   33048:	add	sp, sp, #8
   3304c:	bx	lr
   33050:	sub	sp, sp, #12
   33054:	str	r0, [sp, #4]
   33058:	ldr	r0, [sp, #4]
   3305c:	sub	r1, r0, #48	; 0x30
   33060:	cmp	r1, #10
   33064:	str	r0, [sp]
   33068:	bcc	33098 <__assert_fail@plt+0x21d14>
   3306c:	b	33070 <__assert_fail@plt+0x21cec>
   33070:	ldr	r0, [sp]
   33074:	sub	r1, r0, #65	; 0x41
   33078:	cmp	r1, #6
   3307c:	bcc	33098 <__assert_fail@plt+0x21d14>
   33080:	b	33084 <__assert_fail@plt+0x21d00>
   33084:	ldr	r0, [sp]
   33088:	sub	r1, r0, #97	; 0x61
   3308c:	cmp	r1, #5
   33090:	bhi	330a8 <__assert_fail@plt+0x21d24>
   33094:	b	33098 <__assert_fail@plt+0x21d14>
   33098:	movw	r0, #1
   3309c:	and	r0, r0, #1
   330a0:	strb	r0, [sp, #11]
   330a4:	b	330b4 <__assert_fail@plt+0x21d30>
   330a8:	movw	r0, #0
   330ac:	and	r0, r0, #1
   330b0:	strb	r0, [sp, #11]
   330b4:	ldrb	r0, [sp, #11]
   330b8:	and	r0, r0, #1
   330bc:	add	sp, sp, #12
   330c0:	bx	lr
   330c4:	sub	sp, sp, #8
   330c8:	str	r0, [sp]
   330cc:	ldr	r0, [sp]
   330d0:	sub	r0, r0, #65	; 0x41
   330d4:	cmp	r0, #25
   330d8:	bhi	330f4 <__assert_fail@plt+0x21d70>
   330dc:	b	330e0 <__assert_fail@plt+0x21d5c>
   330e0:	ldr	r0, [sp]
   330e4:	sub	r0, r0, #65	; 0x41
   330e8:	add	r0, r0, #97	; 0x61
   330ec:	str	r0, [sp, #4]
   330f0:	b	330fc <__assert_fail@plt+0x21d78>
   330f4:	ldr	r0, [sp]
   330f8:	str	r0, [sp, #4]
   330fc:	ldr	r0, [sp, #4]
   33100:	add	sp, sp, #8
   33104:	bx	lr
   33108:	sub	sp, sp, #8
   3310c:	str	r0, [sp]
   33110:	ldr	r0, [sp]
   33114:	sub	r0, r0, #97	; 0x61
   33118:	cmp	r0, #25
   3311c:	bhi	33138 <__assert_fail@plt+0x21db4>
   33120:	b	33124 <__assert_fail@plt+0x21da0>
   33124:	ldr	r0, [sp]
   33128:	sub	r0, r0, #97	; 0x61
   3312c:	add	r0, r0, #65	; 0x41
   33130:	str	r0, [sp, #4]
   33134:	b	33140 <__assert_fail@plt+0x21dbc>
   33138:	ldr	r0, [sp]
   3313c:	str	r0, [sp, #4]
   33140:	ldr	r0, [sp, #4]
   33144:	add	sp, sp, #8
   33148:	bx	lr
   3314c:	push	{r4, r5, fp, lr}
   33150:	add	fp, sp, #8
   33154:	sub	sp, sp, #272	; 0x110
   33158:	add	r1, sp, #7
   3315c:	str	r0, [fp, #-16]
   33160:	ldr	r0, [fp, #-16]
   33164:	movw	r2, #257	; 0x101
   33168:	bl	335c4 <__assert_fail@plt+0x22240>
   3316c:	cmp	r0, #0
   33170:	beq	33184 <__assert_fail@plt+0x21e00>
   33174:	movw	r0, #0
   33178:	and	r0, r0, #1
   3317c:	strb	r0, [fp, #-9]
   33180:	b	331d8 <__assert_fail@plt+0x21e54>
   33184:	add	r0, sp, #7
   33188:	movw	r1, #35120	; 0x8930
   3318c:	movt	r1, #3
   33190:	bl	110d8 <strcmp@plt>
   33194:	cmp	r0, #0
   33198:	movw	r0, #1
   3319c:	str	r0, [sp]
   331a0:	beq	331c4 <__assert_fail@plt+0x21e40>
   331a4:	add	r0, sp, #7
   331a8:	movw	r1, #35122	; 0x8932
   331ac:	movt	r1, #3
   331b0:	bl	110d8 <strcmp@plt>
   331b4:	cmp	r0, #0
   331b8:	movw	r0, #0
   331bc:	moveq	r0, #1
   331c0:	str	r0, [sp]
   331c4:	ldr	r0, [sp]
   331c8:	mvn	r1, #0
   331cc:	eor	r0, r0, r1
   331d0:	and	r0, r0, #1
   331d4:	strb	r0, [fp, #-9]
   331d8:	ldrb	r0, [fp, #-9]
   331dc:	and	r0, r0, #1
   331e0:	sub	sp, fp, #8
   331e4:	pop	{r4, r5, fp, pc}
   331e8:	push	{fp, lr}
   331ec:	mov	fp, sp
   331f0:	sub	sp, sp, #48	; 0x30
   331f4:	str	r0, [fp, #-8]
   331f8:	mov	r0, #15
   331fc:	str	r0, [fp, #-12]
   33200:	ldr	r0, [fp, #-12]
   33204:	add	r0, r0, #1
   33208:	str	r0, [fp, #-16]
   3320c:	ldr	r0, [fp, #-8]
   33210:	ldr	r1, [fp, #-16]
   33214:	asr	r2, r1, #31
   33218:	adds	r0, r0, r1
   3321c:	adc	r1, r2, #0
   33220:	and	r2, r1, #1
   33224:	rsb	r3, r2, #0
   33228:	eor	r1, r3, r1
   3322c:	cmp	r1, #0
   33230:	movwne	r1, #1
   33234:	eor	r2, r2, r0, lsr #31
   33238:	cmp	r2, #0
   3323c:	movwne	r2, #1
   33240:	orr	r1, r1, r2
   33244:	str	r0, [fp, #-20]	; 0xffffffec
   33248:	tst	r1, #1
   3324c:	bne	332f4 <__assert_fail@plt+0x21f70>
   33250:	ldr	r0, [pc, #176]	; 33308 <__assert_fail@plt+0x21f84>
   33254:	ldr	r1, [fp, #-20]	; 0xffffffec
   33258:	cmp	r0, r1
   3325c:	bcc	332f4 <__assert_fail@plt+0x21f70>
   33260:	ldr	r0, [fp, #-20]	; 0xffffffec
   33264:	bl	111f8 <malloc@plt>
   33268:	str	r0, [sp, #24]
   3326c:	ldr	r0, [sp, #24]
   33270:	movw	r1, #0
   33274:	cmp	r0, r1
   33278:	beq	332f0 <__assert_fail@plt+0x21f6c>
   3327c:	ldr	r0, [sp, #24]
   33280:	str	r0, [sp, #20]
   33284:	ldr	r0, [sp, #20]
   33288:	adds	r0, r0, #8
   3328c:	mov	r1, #0
   33290:	adc	r1, r1, #0
   33294:	str	r0, [sp, #16]
   33298:	ldr	r0, [sp, #16]
   3329c:	ldr	r2, [fp, #-12]
   332a0:	mvn	r3, #0
   332a4:	eor	r2, r2, r3
   332a8:	and	r0, r0, r2
   332ac:	add	r0, r0, #8
   332b0:	ldr	r2, [sp, #20]
   332b4:	sub	r0, r0, r2
   332b8:	str	r0, [sp, #12]
   332bc:	ldr	r0, [sp, #24]
   332c0:	ldr	r2, [sp, #12]
   332c4:	add	r0, r0, r2
   332c8:	str	r0, [sp, #8]
   332cc:	ldr	r0, [sp, #8]
   332d0:	str	r0, [sp, #4]
   332d4:	ldr	r0, [sp, #12]
   332d8:	ldr	r2, [sp, #4]
   332dc:	add	r2, r2, r3
   332e0:	strb	r0, [r2]
   332e4:	ldr	r0, [sp, #4]
   332e8:	str	r0, [fp, #-4]
   332ec:	b	332fc <__assert_fail@plt+0x21f78>
   332f0:	b	332f4 <__assert_fail@plt+0x21f70>
   332f4:	movw	r0, #0
   332f8:	str	r0, [fp, #-4]
   332fc:	ldr	r0, [fp, #-4]
   33300:	mov	sp, fp
   33304:	pop	{fp, pc}
   33308:	svcvc	0x00ffffff
   3330c:	push	{fp, lr}
   33310:	mov	fp, sp
   33314:	sub	sp, sp, #8
   33318:	str	r0, [sp, #4]
   3331c:	ldr	r0, [sp, #4]
   33320:	and	r0, r0, #7
   33324:	cmp	r0, #0
   33328:	beq	33330 <__assert_fail@plt+0x21fac>
   3332c:	bl	1136c <abort@plt>
   33330:	ldr	r0, [sp, #4]
   33334:	and	r0, r0, #8
   33338:	cmp	r0, #0
   3333c:	beq	3336c <__assert_fail@plt+0x21fe8>
   33340:	ldr	r0, [sp, #4]
   33344:	ldr	r1, [sp, #4]
   33348:	mvn	r2, #0
   3334c:	add	r1, r1, r2
   33350:	ldrb	r1, [r1]
   33354:	movw	r2, #0
   33358:	sub	r1, r2, r1
   3335c:	add	r0, r0, r1
   33360:	str	r0, [sp]
   33364:	ldr	r0, [sp]
   33368:	bl	1aaec <__assert_fail@plt+0x9768>
   3336c:	mov	sp, fp
   33370:	pop	{fp, pc}
   33374:	push	{fp, lr}
   33378:	mov	fp, sp
   3337c:	sub	sp, sp, #16
   33380:	str	r0, [fp, #-4]
   33384:	ldr	r0, [fp, #-4]
   33388:	bl	110fc <wcwidth@plt>
   3338c:	str	r0, [sp, #8]
   33390:	ldr	r0, [sp, #8]
   33394:	cmp	r0, #0
   33398:	blt	333a8 <__assert_fail@plt+0x22024>
   3339c:	ldr	r0, [sp, #8]
   333a0:	str	r0, [sp, #4]
   333a4:	b	333cc <__assert_fail@plt+0x22048>
   333a8:	ldr	r0, [fp, #-4]
   333ac:	bl	11180 <iswcntrl@plt>
   333b0:	cmp	r0, #0
   333b4:	movw	r0, #0
   333b8:	movne	r0, #1
   333bc:	tst	r0, #1
   333c0:	movw	r0, #0
   333c4:	moveq	r0, #1
   333c8:	str	r0, [sp, #4]
   333cc:	ldr	r0, [sp, #4]
   333d0:	mov	sp, fp
   333d4:	pop	{fp, pc}
   333d8:	push	{fp, lr}
   333dc:	mov	fp, sp
   333e0:	sub	sp, sp, #8
   333e4:	str	r0, [sp, #4]
   333e8:	str	r1, [sp]
   333ec:	ldr	r0, [sp]
   333f0:	ldr	r0, [r0]
   333f4:	ldr	r1, [sp]
   333f8:	add	r1, r1, #16
   333fc:	cmp	r0, r1
   33400:	bne	33434 <__assert_fail@plt+0x220b0>
   33404:	ldr	r0, [sp, #4]
   33408:	add	r0, r0, #16
   3340c:	ldr	r1, [sp]
   33410:	add	r1, r1, #16
   33414:	ldr	r2, [sp]
   33418:	ldr	r2, [r2, #4]
   3341c:	bl	1112c <memcpy@plt>
   33420:	ldr	r0, [sp, #4]
   33424:	add	r0, r0, #16
   33428:	ldr	r1, [sp, #4]
   3342c:	str	r0, [r1]
   33430:	b	33444 <__assert_fail@plt+0x220c0>
   33434:	ldr	r0, [sp]
   33438:	ldr	r0, [r0]
   3343c:	ldr	r1, [sp, #4]
   33440:	str	r0, [r1]
   33444:	ldr	r0, [sp]
   33448:	ldr	r0, [r0, #4]
   3344c:	ldr	r1, [sp, #4]
   33450:	str	r0, [r1, #4]
   33454:	ldr	r0, [sp]
   33458:	ldrb	r0, [r0, #8]
   3345c:	ldr	r1, [sp, #4]
   33460:	and	r2, r0, #1
   33464:	strb	r2, [r1, #8]
   33468:	tst	r0, #1
   3346c:	beq	33480 <__assert_fail@plt+0x220fc>
   33470:	ldr	r0, [sp]
   33474:	ldr	r0, [r0, #12]
   33478:	ldr	r1, [sp, #4]
   3347c:	str	r0, [r1, #12]
   33480:	mov	sp, fp
   33484:	pop	{fp, pc}
   33488:	sub	sp, sp, #4
   3348c:	movw	r1, #35128	; 0x8938
   33490:	movt	r1, #3
   33494:	strb	r0, [sp, #3]
   33498:	ldrb	r0, [sp, #3]
   3349c:	lsr	r0, r0, #5
   334a0:	movw	r2, #35128	; 0x8938
   334a4:	movt	r2, #3
   334a8:	add	r0, r2, r0, lsl #2
   334ac:	ldr	r0, [r0]
   334b0:	ldrb	r2, [sp, #3]
   334b4:	and	r2, r2, #31
   334b8:	lsr	r0, r0, r2
   334bc:	and	r0, r0, #1
   334c0:	cmp	r0, #0
   334c4:	movw	r0, #0
   334c8:	movne	r0, #1
   334cc:	and	r0, r0, #1
   334d0:	add	sp, sp, #4
   334d4:	bx	lr
   334d8:	push	{fp, lr}
   334dc:	mov	fp, sp
   334e0:	sub	sp, sp, #80	; 0x50
   334e4:	str	r0, [fp, #-8]
   334e8:	bl	111bc <__ctype_get_mb_cur_max@plt>
   334ec:	cmp	r0, #1
   334f0:	bls	335ac <__assert_fail@plt+0x22228>
   334f4:	movw	r0, #0
   334f8:	str	r0, [fp, #-12]
   334fc:	ldr	r0, [fp, #-8]
   33500:	str	r0, [sp, #28]
   33504:	movw	r0, #0
   33508:	strb	r0, [sp, #12]
   3350c:	add	r1, sp, #12
   33510:	add	r1, r1, #4
   33514:	str	r0, [sp, #8]
   33518:	mov	r0, r1
   3351c:	ldr	r1, [sp, #8]
   33520:	and	r1, r1, #255	; 0xff
   33524:	movw	r2, #8
   33528:	bl	112b8 <memset@plt>
   3352c:	ldr	r0, [sp, #8]
   33530:	strb	r0, [sp, #24]
   33534:	add	r0, sp, #12
   33538:	bl	30ca8 <__assert_fail@plt+0x1f924>
   3353c:	ldrb	r0, [sp, #36]	; 0x24
   33540:	tst	r0, #1
   33544:	movw	r0, #0
   33548:	str	r0, [sp, #4]
   3354c:	beq	33564 <__assert_fail@plt+0x221e0>
   33550:	ldr	r0, [sp, #40]	; 0x28
   33554:	cmp	r0, #0
   33558:	movw	r0, #0
   3355c:	moveq	r0, #1
   33560:	str	r0, [sp, #4]
   33564:	ldr	r0, [sp, #4]
   33568:	mvn	r1, #0
   3356c:	eor	r0, r0, r1
   33570:	tst	r0, #1
   33574:	beq	335a0 <__assert_fail@plt+0x2221c>
   33578:	ldr	r0, [fp, #-12]
   3357c:	add	r0, r0, #1
   33580:	str	r0, [fp, #-12]
   33584:	ldr	r0, [sp, #32]
   33588:	ldr	r1, [sp, #28]
   3358c:	add	r0, r1, r0
   33590:	str	r0, [sp, #28]
   33594:	movw	r0, #0
   33598:	strb	r0, [sp, #24]
   3359c:	b	33534 <__assert_fail@plt+0x221b0>
   335a0:	ldr	r0, [fp, #-12]
   335a4:	str	r0, [fp, #-4]
   335a8:	b	335b8 <__assert_fail@plt+0x22234>
   335ac:	ldr	r0, [fp, #-8]
   335b0:	bl	11270 <strlen@plt>
   335b4:	str	r0, [fp, #-4]
   335b8:	ldr	r0, [fp, #-4]
   335bc:	mov	sp, fp
   335c0:	pop	{fp, pc}
   335c4:	push	{fp, lr}
   335c8:	mov	fp, sp
   335cc:	sub	sp, sp, #16
   335d0:	str	r0, [fp, #-4]
   335d4:	str	r1, [sp, #8]
   335d8:	str	r2, [sp, #4]
   335dc:	ldr	r0, [fp, #-4]
   335e0:	ldr	r1, [sp, #8]
   335e4:	ldr	r2, [sp, #4]
   335e8:	bl	335f4 <__assert_fail@plt+0x22270>
   335ec:	mov	sp, fp
   335f0:	pop	{fp, pc}
   335f4:	push	{fp, lr}
   335f8:	mov	fp, sp
   335fc:	sub	sp, sp, #24
   33600:	str	r0, [fp, #-8]
   33604:	str	r1, [sp, #12]
   33608:	str	r2, [sp, #8]
   3360c:	ldr	r0, [fp, #-8]
   33610:	bl	336f4 <__assert_fail@plt+0x22370>
   33614:	str	r0, [sp, #4]
   33618:	ldr	r0, [sp, #4]
   3361c:	movw	r1, #0
   33620:	cmp	r0, r1
   33624:	bne	3364c <__assert_fail@plt+0x222c8>
   33628:	ldr	r0, [sp, #8]
   3362c:	cmp	r0, #0
   33630:	bls	33640 <__assert_fail@plt+0x222bc>
   33634:	ldr	r0, [sp, #12]
   33638:	movw	r1, #0
   3363c:	strb	r1, [r0]
   33640:	movw	r0, #22
   33644:	str	r0, [fp, #-4]
   33648:	b	336c8 <__assert_fail@plt+0x22344>
   3364c:	ldr	r0, [sp, #4]
   33650:	bl	11270 <strlen@plt>
   33654:	str	r0, [sp]
   33658:	ldr	r0, [sp]
   3365c:	ldr	r1, [sp, #8]
   33660:	cmp	r0, r1
   33664:	bcs	33688 <__assert_fail@plt+0x22304>
   33668:	ldr	r0, [sp, #12]
   3366c:	ldr	r1, [sp, #4]
   33670:	ldr	r2, [sp]
   33674:	add	r2, r2, #1
   33678:	bl	1112c <memcpy@plt>
   3367c:	movw	r0, #0
   33680:	str	r0, [fp, #-4]
   33684:	b	336c8 <__assert_fail@plt+0x22344>
   33688:	ldr	r0, [sp, #8]
   3368c:	cmp	r0, #0
   33690:	bls	336c0 <__assert_fail@plt+0x2233c>
   33694:	ldr	r0, [sp, #12]
   33698:	ldr	r1, [sp, #4]
   3369c:	ldr	r2, [sp, #8]
   336a0:	sub	r2, r2, #1
   336a4:	bl	1112c <memcpy@plt>
   336a8:	ldr	r0, [sp, #12]
   336ac:	ldr	r1, [sp, #8]
   336b0:	sub	r1, r1, #1
   336b4:	add	r0, r0, r1
   336b8:	movw	r1, #0
   336bc:	strb	r1, [r0]
   336c0:	movw	r0, #34	; 0x22
   336c4:	str	r0, [fp, #-4]
   336c8:	ldr	r0, [fp, #-4]
   336cc:	mov	sp, fp
   336d0:	pop	{fp, pc}
   336d4:	push	{fp, lr}
   336d8:	mov	fp, sp
   336dc:	sub	sp, sp, #8
   336e0:	str	r0, [sp, #4]
   336e4:	ldr	r0, [sp, #4]
   336e8:	bl	336f4 <__assert_fail@plt+0x22370>
   336ec:	mov	sp, fp
   336f0:	pop	{fp, pc}
   336f4:	push	{fp, lr}
   336f8:	mov	fp, sp
   336fc:	sub	sp, sp, #8
   33700:	str	r0, [sp, #4]
   33704:	ldr	r0, [sp, #4]
   33708:	movw	r1, #0
   3370c:	bl	1130c <setlocale@plt>
   33710:	str	r0, [sp]
   33714:	ldr	r0, [sp]
   33718:	mov	sp, fp
   3371c:	pop	{fp, pc}
   33720:	cmp	r3, #0
   33724:	cmpeq	r2, #0
   33728:	bne	3374c <__assert_fail@plt+0x223c8>
   3372c:	cmp	r1, #0
   33730:	movlt	r1, #-2147483648	; 0x80000000
   33734:	movlt	r0, #0
   33738:	blt	33748 <__assert_fail@plt+0x223c4>
   3373c:	cmpeq	r0, #0
   33740:	mvnne	r1, #-2147483648	; 0x80000000
   33744:	mvnne	r0, #0
   33748:	b	33830 <__assert_fail@plt+0x224ac>
   3374c:	sub	sp, sp, #8
   33750:	push	{sp, lr}
   33754:	cmp	r1, #0
   33758:	blt	33778 <__assert_fail@plt+0x223f4>
   3375c:	cmp	r3, #0
   33760:	blt	337ac <__assert_fail@plt+0x22428>
   33764:	bl	33840 <__assert_fail@plt+0x224bc>
   33768:	ldr	lr, [sp, #4]
   3376c:	add	sp, sp, #8
   33770:	pop	{r2, r3}
   33774:	bx	lr
   33778:	rsbs	r0, r0, #0
   3377c:	sbc	r1, r1, r1, lsl #1
   33780:	cmp	r3, #0
   33784:	blt	337d0 <__assert_fail@plt+0x2244c>
   33788:	bl	33840 <__assert_fail@plt+0x224bc>
   3378c:	ldr	lr, [sp, #4]
   33790:	add	sp, sp, #8
   33794:	pop	{r2, r3}
   33798:	rsbs	r0, r0, #0
   3379c:	sbc	r1, r1, r1, lsl #1
   337a0:	rsbs	r2, r2, #0
   337a4:	sbc	r3, r3, r3, lsl #1
   337a8:	bx	lr
   337ac:	rsbs	r2, r2, #0
   337b0:	sbc	r3, r3, r3, lsl #1
   337b4:	bl	33840 <__assert_fail@plt+0x224bc>
   337b8:	ldr	lr, [sp, #4]
   337bc:	add	sp, sp, #8
   337c0:	pop	{r2, r3}
   337c4:	rsbs	r0, r0, #0
   337c8:	sbc	r1, r1, r1, lsl #1
   337cc:	bx	lr
   337d0:	rsbs	r2, r2, #0
   337d4:	sbc	r3, r3, r3, lsl #1
   337d8:	bl	33840 <__assert_fail@plt+0x224bc>
   337dc:	ldr	lr, [sp, #4]
   337e0:	add	sp, sp, #8
   337e4:	pop	{r2, r3}
   337e8:	rsbs	r2, r2, #0
   337ec:	sbc	r3, r3, r3, lsl #1
   337f0:	bx	lr
   337f4:	cmp	r3, #0
   337f8:	cmpeq	r2, #0
   337fc:	bne	33814 <__assert_fail@plt+0x22490>
   33800:	cmp	r1, #0
   33804:	cmpeq	r0, #0
   33808:	mvnne	r1, #0
   3380c:	mvnne	r0, #0
   33810:	b	33830 <__assert_fail@plt+0x224ac>
   33814:	sub	sp, sp, #8
   33818:	push	{sp, lr}
   3381c:	bl	33840 <__assert_fail@plt+0x224bc>
   33820:	ldr	lr, [sp, #4]
   33824:	add	sp, sp, #8
   33828:	pop	{r2, r3}
   3382c:	bx	lr
   33830:	push	{r1, lr}
   33834:	mov	r0, #8
   33838:	bl	110b4 <raise@plt>
   3383c:	pop	{r1, pc}
   33840:	cmp	r1, r3
   33844:	cmpeq	r0, r2
   33848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3384c:	mov	r4, r0
   33850:	movcc	r0, #0
   33854:	mov	r5, r1
   33858:	ldr	lr, [sp, #36]	; 0x24
   3385c:	movcc	r1, r0
   33860:	bcc	3395c <__assert_fail@plt+0x225d8>
   33864:	cmp	r3, #0
   33868:	clzeq	ip, r2
   3386c:	clzne	ip, r3
   33870:	addeq	ip, ip, #32
   33874:	cmp	r5, #0
   33878:	clzeq	r1, r4
   3387c:	addeq	r1, r1, #32
   33880:	clzne	r1, r5
   33884:	sub	ip, ip, r1
   33888:	sub	sl, ip, #32
   3388c:	lsl	r9, r3, ip
   33890:	rsb	fp, ip, #32
   33894:	orr	r9, r9, r2, lsl sl
   33898:	orr	r9, r9, r2, lsr fp
   3389c:	lsl	r8, r2, ip
   338a0:	cmp	r5, r9
   338a4:	cmpeq	r4, r8
   338a8:	movcc	r0, #0
   338ac:	movcc	r1, r0
   338b0:	bcc	338cc <__assert_fail@plt+0x22548>
   338b4:	mov	r0, #1
   338b8:	subs	r4, r4, r8
   338bc:	lsl	r1, r0, sl
   338c0:	orr	r1, r1, r0, lsr fp
   338c4:	lsl	r0, r0, ip
   338c8:	sbc	r5, r5, r9
   338cc:	cmp	ip, #0
   338d0:	beq	3395c <__assert_fail@plt+0x225d8>
   338d4:	lsr	r6, r8, #1
   338d8:	orr	r6, r6, r9, lsl #31
   338dc:	lsr	r7, r9, #1
   338e0:	mov	r2, ip
   338e4:	b	33908 <__assert_fail@plt+0x22584>
   338e8:	subs	r3, r4, r6
   338ec:	sbc	r8, r5, r7
   338f0:	adds	r3, r3, r3
   338f4:	adc	r8, r8, r8
   338f8:	adds	r4, r3, #1
   338fc:	adc	r5, r8, #0
   33900:	subs	r2, r2, #1
   33904:	beq	33924 <__assert_fail@plt+0x225a0>
   33908:	cmp	r5, r7
   3390c:	cmpeq	r4, r6
   33910:	bcs	338e8 <__assert_fail@plt+0x22564>
   33914:	adds	r4, r4, r4
   33918:	adc	r5, r5, r5
   3391c:	subs	r2, r2, #1
   33920:	bne	33908 <__assert_fail@plt+0x22584>
   33924:	lsr	r3, r4, ip
   33928:	orr	r3, r3, r5, lsl fp
   3392c:	lsr	r2, r5, ip
   33930:	orr	r3, r3, r5, lsr sl
   33934:	adds	r0, r0, r4
   33938:	mov	r4, r3
   3393c:	lsl	r3, r2, ip
   33940:	orr	r3, r3, r4, lsl sl
   33944:	lsl	ip, r4, ip
   33948:	orr	r3, r3, r4, lsr fp
   3394c:	adc	r1, r1, r5
   33950:	subs	r0, r0, ip
   33954:	mov	r5, r2
   33958:	sbc	r1, r1, r3
   3395c:	cmp	lr, #0
   33960:	strdne	r4, [lr]
   33964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33968:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3396c:	mov	r7, r0
   33970:	ldr	r6, [pc, #72]	; 339c0 <__assert_fail@plt+0x2263c>
   33974:	ldr	r5, [pc, #72]	; 339c4 <__assert_fail@plt+0x22640>
   33978:	add	r6, pc, r6
   3397c:	add	r5, pc, r5
   33980:	sub	r6, r6, r5
   33984:	mov	r8, r1
   33988:	mov	r9, r2
   3398c:	bl	1107c <calloc@plt-0x20>
   33990:	asrs	r6, r6, #2
   33994:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   33998:	mov	r4, #0
   3399c:	add	r4, r4, #1
   339a0:	ldr	r3, [r5], #4
   339a4:	mov	r2, r9
   339a8:	mov	r1, r8
   339ac:	mov	r0, r7
   339b0:	blx	r3
   339b4:	cmp	r6, r4
   339b8:	bne	3399c <__assert_fail@plt+0x22618>
   339bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   339c0:	andeq	r5, r1, ip, lsl #11
   339c4:	andeq	r5, r1, r4, lsl #11
   339c8:	bx	lr
   339cc:	ldr	r3, [pc, #12]	; 339e0 <__assert_fail@plt+0x2265c>
   339d0:	mov	r1, #0
   339d4:	add	r3, pc, r3
   339d8:	ldr	r2, [r3]
   339dc:	b	112ac <__cxa_atexit@plt>
   339e0:	andeq	r5, r1, r4, lsr r7

Disassembly of section .fini:

000339e4 <.fini>:
   339e4:	push	{r3, lr}
   339e8:	pop	{r3, pc}
