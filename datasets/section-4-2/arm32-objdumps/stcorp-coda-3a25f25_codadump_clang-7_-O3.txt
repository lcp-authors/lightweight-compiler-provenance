
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

000125fc <.init>:
   125fc:	push	{r3, lr}
   12600:	bl	12b08 <_start@@Base+0x3c>
   12604:	pop	{r3, pc}

Disassembly of section .plt:

00012608 <coda_cursor_get_byte_size@plt-0x14>:
   12608:	push	{lr}		; (str lr, [sp, #-4]!)
   1260c:	ldr	lr, [pc, #4]	; 12618 <coda_cursor_get_byte_size@plt-0x4>
   12610:	add	lr, pc, lr
   12614:	ldr	pc, [lr, #8]!
   12618:	andeq	r9, r1, r8, ror #19

0001261c <coda_cursor_get_byte_size@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #102400	; 0x19000
   12624:	ldr	pc, [ip, #2536]!	; 0x9e8

00012628 <coda_type_get_special_type_name@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #102400	; 0x19000
   12630:	ldr	pc, [ip, #2528]!	; 0x9e0

00012634 <coda_set_option_use_fast_size_expressions@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #102400	; 0x19000
   1263c:	ldr	pc, [ip, #2520]!	; 0x9d8

00012640 <raise@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #102400	; 0x19000
   12648:	ldr	pc, [ip, #2512]!	; 0x9d0

0001264c <coda_get_option_bypass_special_types@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #102400	; 0x19000
   12654:	ldr	pc, [ip, #2504]!	; 0x9c8

00012658 <coda_set_option_perform_boundary_checks@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #102400	; 0x19000
   12660:	ldr	pc, [ip, #2496]!	; 0x9c0

00012664 <strcmp@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #102400	; 0x19000
   1266c:	ldr	pc, [ip, #2488]!	; 0x9b8

00012670 <strtol@plt>:
   12670:	add	ip, pc, #0, 12
   12674:	add	ip, ip, #102400	; 0x19000
   12678:	ldr	pc, [ip, #2480]!	; 0x9b0

0001267c <coda_type_get_record_field_hidden_status@plt>:
   1267c:	add	ip, pc, #0, 12
   12680:	add	ip, ip, #102400	; 0x19000
   12684:	ldr	pc, [ip, #2472]!	; 0x9a8

00012688 <printf@plt>:
   12688:	add	ip, pc, #0, 12
   1268c:	add	ip, ip, #102400	; 0x19000
   12690:	ldr	pc, [ip, #2464]!	; 0x9a0

00012694 <coda_cursor_get_record_field_available_status@plt>:
   12694:	add	ip, pc, #0, 12
   12698:	add	ip, ip, #102400	; 0x19000
   1269c:	ldr	pc, [ip, #2456]!	; 0x998

000126a0 <fopen@plt>:
   126a0:	add	ip, pc, #0, 12
   126a4:	add	ip, ip, #102400	; 0x19000
   126a8:	ldr	pc, [ip, #2448]!	; 0x990

000126ac <coda_set_error@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #102400	; 0x19000
   126b4:	ldr	pc, [ip, #2440]!	; 0x988

000126b8 <coda_open@plt>:
   126b8:	add	ip, pc, #0, 12
   126bc:	add	ip, ip, #102400	; 0x19000
   126c0:	ldr	pc, [ip, #2432]!	; 0x980

000126c4 <fflush@plt>:
   126c4:	add	ip, pc, #0, 12
   126c8:	add	ip, ip, #102400	; 0x19000
   126cc:	ldr	pc, [ip, #2424]!	; 0x978

000126d0 <coda_time_double_to_string@plt>:
   126d0:	add	ip, pc, #0, 12
   126d4:	add	ip, ip, #102400	; 0x19000
   126d8:	ldr	pc, [ip, #2416]!	; 0x970

000126dc <coda_cursor_get_num_elements@plt>:
   126dc:	add	ip, pc, #0, 12
   126e0:	add	ip, ip, #102400	; 0x19000
   126e4:	ldr	pc, [ip, #2408]!	; 0x968

000126e8 <coda_str64u@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #102400	; 0x19000
   126f0:	ldr	pc, [ip, #2400]!	; 0x960

000126f4 <free@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #102400	; 0x19000
   126fc:	ldr	pc, [ip, #2392]!	; 0x958

00012700 <coda_set_option_use_mmap@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #102400	; 0x19000
   12708:	ldr	pc, [ip, #2384]!	; 0x950

0001270c <coda_set_definition_path_conditional@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #102400	; 0x19000
   12714:	ldr	pc, [ip, #2376]!	; 0x948

00012718 <coda_cursor_read_uint32@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #102400	; 0x19000
   12720:	ldr	pc, [ip, #2368]!	; 0x940

00012724 <coda_set_option_bypass_special_types@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #102400	; 0x19000
   1272c:	ldr	pc, [ip, #2360]!	; 0x938

00012730 <coda_type_get_record_field_type@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #102400	; 0x19000
   12738:	ldr	pc, [ip, #2352]!	; 0x930

0001273c <coda_cursor_get_type@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #102400	; 0x19000
   12744:	ldr	pc, [ip, #2344]!	; 0x928

00012748 <memcpy@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #102400	; 0x19000
   12750:	ldr	pc, [ip, #2336]!	; 0x920

00012754 <coda_isInf@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #102400	; 0x19000
   1275c:	ldr	pc, [ip, #2328]!	; 0x918

00012760 <coda_type_get_bit_size@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #102400	; 0x19000
   12768:	ldr	pc, [ip, #2320]!	; 0x910

0001276c <coda_type_get_record_field_available_status@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #102400	; 0x19000
   12774:	ldr	pc, [ip, #2312]!	; 0x908

00012778 <coda_cursor_has_attributes@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #102400	; 0x19000
   12780:	ldr	pc, [ip, #2304]!	; 0x900

00012784 <coda_cursor_get_type_class@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #102400	; 0x19000
   1278c:	ldr	pc, [ip, #2296]!	; 0x8f8

00012790 <coda_set_definition_path@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #102400	; 0x19000
   12798:	ldr	pc, [ip, #2288]!	; 0x8f0

0001279c <coda_get_product_format@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #102400	; 0x19000
   127a4:	ldr	pc, [ip, #2280]!	; 0x8e8

000127a8 <coda_type_get_unit@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #102400	; 0x19000
   127b0:	ldr	pc, [ip, #2272]!	; 0x8e0

000127b4 <coda_type_get_description@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #102400	; 0x19000
   127bc:	ldr	pc, [ip, #2264]!	; 0x8d8

000127c0 <coda_cursor_get_special_type@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #102400	; 0x19000
   127c8:	ldr	pc, [ip, #2256]!	; 0x8d0

000127cc <coda_cursor_goto_first_array_element@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #102400	; 0x19000
   127d4:	ldr	pc, [ip, #2248]!	; 0x8c8

000127d8 <fwrite@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #102400	; 0x19000
   127e0:	ldr	pc, [ip, #2240]!	; 0x8c0

000127e4 <coda_cursor_set_product@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #102400	; 0x19000
   127ec:	ldr	pc, [ip, #2232]!	; 0x8b8

000127f0 <coda_cursor_goto_first_record_field@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #102400	; 0x19000
   127f8:	ldr	pc, [ip, #2224]!	; 0x8b0

000127fc <coda_cursor_goto_record_field_by_index@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #102400	; 0x19000
   12804:	ldr	pc, [ip, #2216]!	; 0x8a8

00012808 <coda_done@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #102400	; 0x19000
   12810:	ldr	pc, [ip, #2208]!	; 0x8a0

00012814 <puts@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #102400	; 0x19000
   1281c:	ldr	pc, [ip, #2200]!	; 0x898

00012820 <coda_cursor_get_read_type@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #102400	; 0x19000
   12828:	ldr	pc, [ip, #2192]!	; 0x890

0001282c <malloc@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #102400	; 0x19000
   12834:	ldr	pc, [ip, #2184]!	; 0x888

00012838 <__libc_start_main@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #102400	; 0x19000
   12840:	ldr	pc, [ip, #2176]!	; 0x880

00012844 <__gmon_start__@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #102400	; 0x19000
   1284c:	ldr	pc, [ip, #2168]!	; 0x878

00012850 <coda_cursor_read_string@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #102400	; 0x19000
   12858:	ldr	pc, [ip, #2160]!	; 0x870

0001285c <coda_cursor_goto_parent@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #102400	; 0x19000
   12864:	ldr	pc, [ip, #2152]!	; 0x868

00012868 <coda_type_get_num_record_fields@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #102400	; 0x19000
   12870:	ldr	pc, [ip, #2144]!	; 0x860

00012874 <exit@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #102400	; 0x19000
   1287c:	ldr	pc, [ip, #2136]!	; 0x858

00012880 <coda_type_get_read_type@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #102400	; 0x19000
   12888:	ldr	pc, [ip, #2128]!	; 0x850

0001288c <coda_cursor_get_string_length@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #102400	; 0x19000
   12894:	ldr	pc, [ip, #2120]!	; 0x848

00012898 <coda_cursor_read_uint64@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #102400	; 0x19000
   128a0:	ldr	pc, [ip, #2112]!	; 0x840

000128a4 <coda_cursor_read_double@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #102400	; 0x19000
   128ac:	ldr	pc, [ip, #2104]!	; 0x838

000128b0 <coda_isNaN@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #102400	; 0x19000
   128b8:	ldr	pc, [ip, #2096]!	; 0x830

000128bc <fprintf@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #102400	; 0x19000
   128c4:	ldr	pc, [ip, #2088]!	; 0x828

000128c8 <coda_cursor_goto_next_array_element@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #102400	; 0x19000
   128d0:	ldr	pc, [ip, #2080]!	; 0x820

000128d4 <coda_open_as@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #102400	; 0x19000
   128dc:	ldr	pc, [ip, #2072]!	; 0x818

000128e0 <coda_init@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #102400	; 0x19000
   128e8:	ldr	pc, [ip, #2064]!	; 0x810

000128ec <coda_set_option_perform_conversions@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #102400	; 0x19000
   128f4:	ldr	pc, [ip, #2056]!	; 0x808

000128f8 <coda_cursor_goto_attributes@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #102400	; 0x19000
   12900:	ldr	pc, [ip, #2048]!	; 0x800

00012904 <coda_cursor_read_char@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #102400	; 0x19000
   1290c:	ldr	pc, [ip, #2040]!	; 0x7f8

00012910 <memset@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #102400	; 0x19000
   12918:	ldr	pc, [ip, #2032]!	; 0x7f0

0001291c <putchar@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #102400	; 0x19000
   12924:	ldr	pc, [ip, #2024]!	; 0x7e8

00012928 <strncpy@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #102400	; 0x19000
   12930:	ldr	pc, [ip, #2016]!	; 0x7e0

00012934 <coda_type_get_special_type@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #102400	; 0x19000
   1293c:	ldr	pc, [ip, #2008]!	; 0x7d8

00012940 <coda_type_get_record_union_status@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #102400	; 0x19000
   12948:	ldr	pc, [ip, #2000]!	; 0x7d0

0001294c <coda_cursor_read_complex_double_split@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #102400	; 0x19000
   12954:	ldr	pc, [ip, #1992]!	; 0x7c8

00012958 <coda_type_get_array_base_type@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #102400	; 0x19000
   12960:	ldr	pc, [ip, #1984]!	; 0x7c0

00012964 <fclose@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #102400	; 0x19000
   1296c:	ldr	pc, [ip, #1976]!	; 0x7b8

00012970 <coda_type_get_string_length@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #102400	; 0x19000
   12978:	ldr	pc, [ip, #1968]!	; 0x7b0

0001297c <coda_type_get_native_type_name@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #102400	; 0x19000
   12984:	ldr	pc, [ip, #1960]!	; 0x7a8

00012988 <coda_cursor_get_array_dim@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #102400	; 0x19000
   12990:	ldr	pc, [ip, #1952]!	; 0x7a0

00012994 <coda_cursor_has_ascii_content@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #102400	; 0x19000
   1299c:	ldr	pc, [ip, #1944]!	; 0x798

000129a0 <coda_close@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #102400	; 0x19000
   129a8:	ldr	pc, [ip, #1936]!	; 0x790

000129ac <coda_cursor_read_int64@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #102400	; 0x19000
   129b4:	ldr	pc, [ip, #1928]!	; 0x788

000129b8 <vfprintf@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #102400	; 0x19000
   129c0:	ldr	pc, [ip, #1920]!	; 0x780

000129c4 <coda_cursor_goto@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #102400	; 0x19000
   129cc:	ldr	pc, [ip, #1912]!	; 0x778

000129d0 <coda_type_get_record_field_index_from_name@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #102400	; 0x19000
   129d8:	ldr	pc, [ip, #1904]!	; 0x770

000129dc <coda_cursor_read_complex_double_pair@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #102400	; 0x19000
   129e4:	ldr	pc, [ip, #1896]!	; 0x768

000129e8 <coda_cursor_goto_next_record_field@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #102400	; 0x19000
   129f0:	ldr	pc, [ip, #1888]!	; 0x760

000129f4 <fputc@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #102400	; 0x19000
   129fc:	ldr	pc, [ip, #1880]!	; 0x758

00012a00 <coda_type_get_array_dim@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #102400	; 0x19000
   12a08:	ldr	pc, [ip, #1872]!	; 0x750

00012a0c <coda_cursor_get_bit_size@plt>:
   12a0c:	add	ip, pc, #0, 12
   12a10:	add	ip, ip, #102400	; 0x19000
   12a14:	ldr	pc, [ip, #1864]!	; 0x748

00012a18 <coda_errno_to_string@plt>:
   12a18:	add	ip, pc, #0, 12
   12a1c:	add	ip, ip, #102400	; 0x19000
   12a20:	ldr	pc, [ip, #1856]!	; 0x740

00012a24 <coda_cursor_use_base_type_of_special_type@plt>:
   12a24:	add	ip, pc, #0, 12
   12a28:	add	ip, ip, #102400	; 0x19000
   12a2c:	ldr	pc, [ip, #1848]!	; 0x738

00012a30 <coda_cursor_get_available_union_field_index@plt>:
   12a30:	add	ip, pc, #0, 12
   12a34:	add	ip, ip, #102400	; 0x19000
   12a38:	ldr	pc, [ip, #1840]!	; 0x730

00012a3c <coda_cursor_read_int32@plt>:
   12a3c:	add	ip, pc, #0, 12
   12a40:	add	ip, ip, #102400	; 0x19000
   12a44:	ldr	pc, [ip, #1832]!	; 0x728

00012a48 <coda_cursor_get_file_bit_offset@plt>:
   12a48:	add	ip, pc, #0, 12
   12a4c:	add	ip, ip, #102400	; 0x19000
   12a50:	ldr	pc, [ip, #1824]!	; 0x720

00012a54 <coda_get_libcoda_version@plt>:
   12a54:	add	ip, pc, #0, 12
   12a58:	add	ip, ip, #102400	; 0x19000
   12a5c:	ldr	pc, [ip, #1816]!	; 0x718

00012a60 <coda_get_errno@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #102400	; 0x19000
   12a68:	ldr	pc, [ip, #1808]!	; 0x710

00012a6c <coda_type_get_special_base_type@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #102400	; 0x19000
   12a74:	ldr	pc, [ip, #1800]!	; 0x708

00012a78 <coda_type_get_record_field_name@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #102400	; 0x19000
   12a80:	ldr	pc, [ip, #1792]!	; 0x700

00012a84 <fputs@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #102400	; 0x19000
   12a8c:	ldr	pc, [ip, #1784]!	; 0x6f8

00012a90 <abort@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #102400	; 0x19000
   12a98:	ldr	pc, [ip, #1776]!	; 0x6f0

00012a9c <coda_cursor_read_bits@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #102400	; 0x19000
   12aa4:	ldr	pc, [ip, #1768]!	; 0x6e8

00012aa8 <coda_str64@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #102400	; 0x19000
   12ab0:	ldr	pc, [ip, #1760]!	; 0x6e0

00012ab4 <__assert_fail@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #102400	; 0x19000
   12abc:	ldr	pc, [ip, #1752]!	; 0x6d8

00012ac0 <coda_type_get_class@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #102400	; 0x19000
   12ac8:	ldr	pc, [ip, #1744]!	; 0x6d0

Disassembly of section .text:

00012acc <_start@@Base>:
   12acc:	mov	fp, #0
   12ad0:	mov	lr, #0
   12ad4:	pop	{r1}		; (ldr r1, [sp], #4)
   12ad8:	mov	r2, sp
   12adc:	push	{r2}		; (str r2, [sp, #-4]!)
   12ae0:	push	{r0}		; (str r0, [sp, #-4]!)
   12ae4:	ldr	ip, [pc, #16]	; 12afc <_start@@Base+0x30>
   12ae8:	push	{ip}		; (str ip, [sp, #-4]!)
   12aec:	ldr	r0, [pc, #12]	; 12b00 <_start@@Base+0x34>
   12af0:	ldr	r3, [pc, #12]	; 12b04 <_start@@Base+0x38>
   12af4:	bl	12838 <__libc_start_main@plt>
   12af8:	bl	12a90 <abort@plt>
   12afc:	andeq	sl, r1, r0, ror #1
   12b00:	andeq	r8, r1, ip, lsr r5
   12b04:	andeq	sl, r1, r0, lsl #1
   12b08:	ldr	r3, [pc, #20]	; 12b24 <_start@@Base+0x58>
   12b0c:	ldr	r2, [pc, #20]	; 12b28 <_start@@Base+0x5c>
   12b10:	add	r3, pc, r3
   12b14:	ldr	r2, [r3, r2]
   12b18:	cmp	r2, #0
   12b1c:	bxeq	lr
   12b20:	b	12844 <__gmon_start__@plt>
   12b24:	andeq	r9, r1, r8, ror #9
   12b28:	muleq	r0, ip, r1
   12b2c:	ldr	r0, [pc, #24]	; 12b4c <_start@@Base+0x80>
   12b30:	ldr	r3, [pc, #24]	; 12b50 <_start@@Base+0x84>
   12b34:	cmp	r3, r0
   12b38:	bxeq	lr
   12b3c:	ldr	r3, [pc, #16]	; 12b54 <_start@@Base+0x88>
   12b40:	cmp	r3, #0
   12b44:	bxeq	lr
   12b48:	bx	r3
   12b4c:			; <UNDEFINED> instruction: 0x0002c1b0
   12b50:			; <UNDEFINED> instruction: 0x0002c1b0
   12b54:	andeq	r0, r0, r0
   12b58:	ldr	r0, [pc, #36]	; 12b84 <_start@@Base+0xb8>
   12b5c:	ldr	r1, [pc, #36]	; 12b88 <_start@@Base+0xbc>
   12b60:	sub	r1, r1, r0
   12b64:	asr	r1, r1, #2
   12b68:	add	r1, r1, r1, lsr #31
   12b6c:	asrs	r1, r1, #1
   12b70:	bxeq	lr
   12b74:	ldr	r3, [pc, #16]	; 12b8c <_start@@Base+0xc0>
   12b78:	cmp	r3, #0
   12b7c:	bxeq	lr
   12b80:	bx	r3
   12b84:			; <UNDEFINED> instruction: 0x0002c1b0
   12b88:			; <UNDEFINED> instruction: 0x0002c1b0
   12b8c:	andeq	r0, r0, r0
   12b90:	push	{r4, lr}
   12b94:	ldr	r4, [pc, #24]	; 12bb4 <_start@@Base+0xe8>
   12b98:	ldrb	r3, [r4]
   12b9c:	cmp	r3, #0
   12ba0:	popne	{r4, pc}
   12ba4:	bl	12b2c <_start@@Base+0x60>
   12ba8:	mov	r3, #1
   12bac:	strb	r3, [r4]
   12bb0:	pop	{r4, pc}
   12bb4:			; <UNDEFINED> instruction: 0x0002c1b8
   12bb8:	b	12b58 <_start@@Base+0x8c>

00012bbc <export_data_element_to_ascii@@Base>:
   12bbc:	push	{r4, sl, fp, lr}
   12bc0:	add	fp, sp, #8
   12bc4:	movw	r0, #49596	; 0xc1bc
   12bc8:	movt	r0, #2
   12bcc:	ldrb	r1, [r0]
   12bd0:	cmp	r1, #0
   12bd4:	beq	12bf0 <export_data_element_to_ascii@@Base+0x34>
   12bd8:	movw	r0, #53392	; 0xd090
   12bdc:	movt	r0, #2
   12be0:	ldr	r1, [r0]
   12be4:	mov	r0, #10
   12be8:	bl	129f4 <fputc@plt>
   12bec:	b	12bf8 <export_data_element_to_ascii@@Base+0x3c>
   12bf0:	mov	r1, #1
   12bf4:	strb	r1, [r0]
   12bf8:	movw	r0, #53792	; 0xd220
   12bfc:	movt	r0, #2
   12c00:	ldr	r0, [r0]
   12c04:	cmp	r0, #0
   12c08:	beq	12c30 <export_data_element_to_ascii@@Base+0x74>
   12c0c:	movw	r4, #53392	; 0xd090
   12c10:	mov	r1, #2
   12c14:	mov	r2, #0
   12c18:	movt	r4, #2
   12c1c:	ldr	r0, [r4]
   12c20:	bl	16b2c <print_full_field_name@@Base>
   12c24:	ldr	r1, [r4]
   12c28:	mov	r0, #10
   12c2c:	bl	129f4 <fputc@plt>
   12c30:	movw	r0, #53424	; 0xd0b0
   12c34:	movt	r0, #2
   12c38:	ldr	r1, [r0]
   12c3c:	cmp	r1, #1
   12c40:	blt	12c58 <export_data_element_to_ascii@@Base+0x9c>
   12c44:	add	r0, r0, r1, lsl #3
   12c48:	ldr	r1, [r0, #296]	; 0x128
   12c4c:	ldr	r0, [r0, #300]	; 0x12c
   12c50:	orrs	r0, r1, r0
   12c54:	popeq	{r4, sl, fp, pc}
   12c58:	movw	r0, #53392	; 0xd090
   12c5c:	mov	r1, #0
   12c60:	mov	r2, #0
   12c64:	mov	r3, #0
   12c68:	movt	r0, #2
   12c6c:	ldr	r0, [r0]
   12c70:	pop	{r4, sl, fp, lr}
   12c74:	b	12c78 <export_data_element_to_ascii@@Base+0xbc>
   12c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c7c:	add	fp, sp, #28
   12c80:	sub	sp, sp, #116	; 0x74
   12c84:	movw	r9, #49640	; 0xc1e8
   12c88:	mov	r5, r0
   12c8c:	mov	r7, r1
   12c90:	str	r3, [sp, #48]	; 0x30
   12c94:	mov	r8, r2
   12c98:	movt	r9, #2
   12c9c:	add	r6, r9, r1, lsl #2
   12ca0:	sub	r1, fp, #52	; 0x34
   12ca4:	ldr	r0, [r6, #8]!
   12ca8:	bl	12ac0 <coda_type_get_class@plt>
   12cac:	cmp	r0, #0
   12cb0:	beq	12cb8 <export_data_element_to_ascii@@Base+0xfc>
   12cb4:	bl	184f8 <handle_coda_error@@Base>
   12cb8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12cbc:	cmp	r0, #0
   12cc0:	beq	12db0 <export_data_element_to_ascii@@Base+0x1f4>
   12cc4:	cmp	r0, #1
   12cc8:	str	r5, [sp, #52]	; 0x34
   12ccc:	bne	12e24 <export_data_element_to_ascii@@Base+0x268>
   12cd0:	add	r0, r8, r8, lsl #2
   12cd4:	cmp	r8, #0
   12cd8:	str	r7, [sp, #40]	; 0x28
   12cdc:	add	r6, r9, r0, lsl #4
   12ce0:	moveq	r0, #0
   12ce4:	ldr	r1, [r6, #800]	; 0x320
   12ce8:	streq	r0, [r9, #844]	; 0x34c
   12cec:	mov	r2, r6
   12cf0:	ldr	r0, [r2, #804]!	; 0x324
   12cf4:	str	r2, [sp, #28]
   12cf8:	movw	r2, #53424	; 0xd0b0
   12cfc:	add	r5, r0, r1
   12d00:	movt	r2, #2
   12d04:	ldr	r4, [r2, #104]	; 0x68
   12d08:	cmp	r4, r5
   12d0c:	blt	12d2c <export_data_element_to_ascii@@Base+0x170>
   12d10:	ldr	r3, [r9, #3360]	; 0xd20
   12d14:	sub	r3, r3, #1
   12d18:	cmp	r3, r8
   12d1c:	ldrgt	r3, [r6, #840]	; 0x348
   12d20:	ldrgt	r7, [r6, #844]	; 0x34c
   12d24:	mulgt	r3, r3, r7
   12d28:	strgt	r3, [r6, #924]	; 0x39c
   12d2c:	cmp	r0, #1
   12d30:	str	r4, [sp, #36]	; 0x24
   12d34:	blt	12fbc <export_data_element_to_ascii@@Base+0x400>
   12d38:	mov	lr, r5
   12d3c:	add	r1, r2, r1, lsl #2
   12d40:	add	r2, r6, #848	; 0x350
   12d44:	add	r3, r6, #844	; 0x34c
   12d48:	mov	sl, #1
   12d4c:	mov	ip, #0
   12d50:	add	r9, sp, #56	; 0x38
   12d54:	mov	r5, #0
   12d58:	add	r4, r1, r5
   12d5c:	ldr	r7, [r4, #72]	; 0x48
   12d60:	cmp	r7, #0
   12d64:	beq	12d78 <export_data_element_to_ascii@@Base+0x1bc>
   12d68:	ldr	r7, [r4, #108]	; 0x6c
   12d6c:	ldr	r4, [r3]
   12d70:	add	r4, r7, r4, lsl #2
   12d74:	b	12d7c <export_data_element_to_ascii@@Base+0x1c0>
   12d78:	add	r4, r4, #4
   12d7c:	ldr	r7, [r4]
   12d80:	str	ip, [r2, r5]
   12d84:	subs	r0, r0, #1
   12d88:	str	r7, [r9, r5]
   12d8c:	mul	sl, r7, sl
   12d90:	add	r5, r5, #4
   12d94:	bne	12d58 <export_data_element_to_ascii@@Base+0x19c>
   12d98:	movw	r9, #49640	; 0xc1e8
   12d9c:	cmp	sl, #0
   12da0:	mov	r5, lr
   12da4:	movt	r9, #2
   12da8:	bne	12fc0 <export_data_element_to_ascii@@Base+0x404>
   12dac:	b	136d4 <export_data_element_to_ascii@@Base+0xb18>
   12db0:	ldr	r1, [sp, #48]	; 0x30
   12db4:	add	r6, r9, #144	; 0x90
   12db8:	add	r2, sp, #56	; 0x38
   12dbc:	mov	r0, r6
   12dc0:	add	r4, r9, r1, lsl #2
   12dc4:	ldr	r1, [r4, #3492]!	; 0xda4
   12dc8:	bl	12694 <coda_cursor_get_record_field_available_status@plt>
   12dcc:	cmp	r0, #0
   12dd0:	beq	12dd8 <export_data_element_to_ascii@@Base+0x21c>
   12dd4:	bl	184f8 <handle_coda_error@@Base>
   12dd8:	ldr	r0, [sp, #56]	; 0x38
   12ddc:	cmp	r0, #0
   12de0:	beq	136d4 <export_data_element_to_ascii@@Base+0xb18>
   12de4:	ldr	r1, [r4]
   12de8:	mov	r0, r6
   12dec:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   12df0:	cmp	r0, #0
   12df4:	beq	12dfc <export_data_element_to_ascii@@Base+0x240>
   12df8:	bl	184f8 <handle_coda_error@@Base>
   12dfc:	ldr	r0, [sp, #48]	; 0x30
   12e00:	add	r1, r7, #1
   12e04:	mov	r2, r8
   12e08:	add	r3, r0, #1
   12e0c:	mov	r0, r5
   12e10:	bl	12c78 <export_data_element_to_ascii@@Base+0xbc>
   12e14:	mov	r0, r6
   12e18:	bl	1285c <coda_cursor_goto_parent@plt>
   12e1c:	sub	sp, fp, #28
   12e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e24:	movw	r0, #53408	; 0xd0a0
   12e28:	str	r6, [sp, #44]	; 0x2c
   12e2c:	movt	r0, #2
   12e30:	ldr	r0, [r0]
   12e34:	cmp	r0, #0
   12e38:	beq	12efc <export_data_element_to_ascii@@Base+0x340>
   12e3c:	ldr	r0, [r9, #136]	; 0x88
   12e40:	cmp	r0, #1
   12e44:	blt	12efc <export_data_element_to_ascii@@Base+0x340>
   12e48:	ldr	sl, [sp, #52]	; 0x34
   12e4c:	movw	r5, #53396	; 0xd094
   12e50:	movw	r6, #41451	; 0xa1eb
   12e54:	mov	r7, #0
   12e58:	add	r4, sp, #56	; 0x38
   12e5c:	mov	r8, #0
   12e60:	movt	r5, #2
   12e64:	movt	r6, #1
   12e68:	add	r0, r9, r7, lsl #2
   12e6c:	mov	r1, r4
   12e70:	ldr	r0, [r0, #8]
   12e74:	bl	12ac0 <coda_type_get_class@plt>
   12e78:	cmp	r0, #0
   12e7c:	beq	12e84 <export_data_element_to_ascii@@Base+0x2c8>
   12e80:	bl	184f8 <handle_coda_error@@Base>
   12e84:	ldr	r0, [sp, #56]	; 0x38
   12e88:	cmp	r0, #1
   12e8c:	bne	12eec <export_data_element_to_ascii@@Base+0x330>
   12e90:	add	r0, r8, r8, lsl #2
   12e94:	str	r8, [sp, #48]	; 0x30
   12e98:	add	r0, r9, r0, lsl #4
   12e9c:	mov	r4, r0
   12ea0:	ldr	r1, [r4, #804]!	; 0x324
   12ea4:	cmp	r1, #1
   12ea8:	blt	12ed8 <export_data_element_to_ascii@@Base+0x31c>
   12eac:	add	r8, r0, #848	; 0x350
   12eb0:	mov	r9, #0
   12eb4:	ldr	r2, [r8, r9, lsl #2]
   12eb8:	ldr	r3, [r5]
   12ebc:	mov	r0, sl
   12ec0:	mov	r1, r6
   12ec4:	bl	128bc <fprintf@plt>
   12ec8:	ldr	r0, [r4]
   12ecc:	add	r9, r9, #1
   12ed0:	cmp	r9, r0
   12ed4:	blt	12eb4 <export_data_element_to_ascii@@Base+0x2f8>
   12ed8:	ldr	r8, [sp, #48]	; 0x30
   12edc:	movw	r9, #49640	; 0xc1e8
   12ee0:	add	r4, sp, #56	; 0x38
   12ee4:	movt	r9, #2
   12ee8:	add	r8, r8, #1
   12eec:	ldr	r0, [r9, #136]	; 0x88
   12ef0:	add	r7, r7, #1
   12ef4:	cmp	r7, r0
   12ef8:	blt	12e68 <export_data_element_to_ascii@@Base+0x2ac>
   12efc:	ldr	r6, [sp, #44]	; 0x2c
   12f00:	sub	r1, fp, #32
   12f04:	ldr	r0, [r6]
   12f08:	bl	12ac0 <coda_type_get_class@plt>
   12f0c:	cmp	r0, #0
   12f10:	beq	12f18 <export_data_element_to_ascii@@Base+0x35c>
   12f14:	bl	184f8 <handle_coda_error@@Base>
   12f18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f1c:	ldr	r4, [sp, #52]	; 0x34
   12f20:	sub	r1, r0, #2
   12f24:	cmp	r1, #4
   12f28:	bcs	130e8 <export_data_element_to_ascii@@Base+0x52c>
   12f2c:	ldr	r0, [r6]
   12f30:	sub	r1, fp, #36	; 0x24
   12f34:	bl	12880 <coda_type_get_read_type@plt>
   12f38:	cmp	r0, #0
   12f3c:	beq	12f44 <export_data_element_to_ascii@@Base+0x388>
   12f40:	bl	184f8 <handle_coda_error@@Base>
   12f44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f48:	add	r0, r0, #1
   12f4c:	cmp	r0, #13
   12f50:	bhi	136c8 <export_data_element_to_ascii@@Base+0xb0c>
   12f54:	add	r1, pc, #0
   12f58:	ldr	pc, [r1, r0, lsl #2]
   12f5c:	andeq	r3, r1, r8, lsl #14
   12f60:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12f64:	muleq	r1, r0, r2
   12f68:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12f6c:	muleq	r1, r0, r2
   12f70:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12f74:	muleq	r1, r0, r2
   12f78:	andeq	r3, r1, r4, asr #6
   12f7c:	andeq	r3, r1, r0, lsl r6
   12f80:	andeq	r3, r1, r0, asr #5
   12f84:	andeq	r3, r1, r0, asr #5
   12f88:	andeq	r3, r1, ip, asr #12
   12f8c:	andeq	r3, r1, r4, ror r3
   12f90:	andeq	r3, r1, r4, lsr #8
   12f94:	add	r0, r9, #144	; 0x90
   12f98:	add	r1, sp, #56	; 0x38
   12f9c:	bl	12a3c <coda_cursor_read_int32@plt>
   12fa0:	cmp	r0, #0
   12fa4:	beq	12fac <export_data_element_to_ascii@@Base+0x3f0>
   12fa8:	bl	184f8 <handle_coda_error@@Base>
   12fac:	ldr	r2, [sp, #56]	; 0x38
   12fb0:	movw	r1, #43016	; 0xa808
   12fb4:	movt	r1, #1
   12fb8:	b	132b4 <export_data_element_to_ascii@@Base+0x6f8>
   12fbc:	mov	sl, #1
   12fc0:	add	r0, r9, #144	; 0x90
   12fc4:	str	r8, [sp, #24]
   12fc8:	str	r0, [sp, #32]
   12fcc:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   12fd0:	cmp	r0, #0
   12fd4:	beq	12fdc <export_data_element_to_ascii@@Base+0x420>
   12fd8:	bl	184f8 <handle_coda_error@@Base>
   12fdc:	cmp	sl, #1
   12fe0:	blt	131bc <export_data_element_to_ascii@@Base+0x600>
   12fe4:	ldr	r0, [sp, #24]
   12fe8:	add	r2, r0, #1
   12fec:	sub	r0, sl, #1
   12ff0:	str	r0, [sp, #44]	; 0x2c
   12ff4:	ldr	r0, [sp, #40]	; 0x28
   12ff8:	add	r0, r0, #1
   12ffc:	str	r0, [sp, #40]	; 0x28
   13000:	ldr	r0, [sp, #36]	; 0x24
   13004:	str	r2, [sp, #36]	; 0x24
   13008:	cmp	r0, r5
   1300c:	blt	13118 <export_data_element_to_ascii@@Base+0x55c>
   13010:	add	r0, r2, r2, lsl #2
   13014:	mov	r5, #0
   13018:	mov	r7, #0
   1301c:	add	r0, r9, r0, lsl #4
   13020:	add	r0, r0, #844	; 0x34c
   13024:	str	r0, [sp, #20]
   13028:	add	r0, sp, #56	; 0x38
   1302c:	sub	r8, r0, #4
   13030:	ldr	r0, [sp, #52]	; 0x34
   13034:	ldr	r1, [sp, #40]	; 0x28
   13038:	ldr	r3, [sp, #48]	; 0x30
   1303c:	bl	12c78 <export_data_element_to_ascii@@Base+0xbc>
   13040:	ldr	r0, [sp, #44]	; 0x2c
   13044:	cmp	r7, r0
   13048:	bge	130d4 <export_data_element_to_ascii@@Base+0x518>
   1304c:	ldr	r0, [sp, #32]
   13050:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   13054:	cmp	r0, #0
   13058:	beq	13060 <export_data_element_to_ascii@@Base+0x4a4>
   1305c:	bl	184f8 <handle_coda_error@@Base>
   13060:	ldr	r0, [r9, #3360]	; 0xd20
   13064:	ldr	r1, [sp, #24]
   13068:	sub	r0, r0, #1
   1306c:	cmp	r0, r1
   13070:	ldrgt	r1, [sp, #20]
   13074:	ldrgt	r0, [r1]
   13078:	addgt	r0, r0, #1
   1307c:	strgt	r0, [r1]
   13080:	movw	r0, #53408	; 0xd0a0
   13084:	movt	r0, #2
   13088:	ldr	r0, [r0]
   1308c:	cmp	r0, #0
   13090:	beq	130d4 <export_data_element_to_ascii@@Base+0x518>
   13094:	ldr	r0, [sp, #28]
   13098:	ldr	r0, [r0]
   1309c:	cmp	r0, #1
   130a0:	blt	130d4 <export_data_element_to_ascii@@Base+0x518>
   130a4:	add	r1, r6, r0, lsl #2
   130a8:	ldr	r3, [r8, r0, lsl #2]
   130ac:	ldr	r2, [r1, #844]	; 0x34c
   130b0:	add	r2, r2, #1
   130b4:	cmp	r2, r3
   130b8:	str	r2, [r1, #844]	; 0x34c
   130bc:	bne	130d4 <export_data_element_to_ascii@@Base+0x518>
   130c0:	sub	r0, r0, #1
   130c4:	str	r5, [r1, #844]	; 0x34c
   130c8:	add	r1, r0, #1
   130cc:	cmp	r1, #1
   130d0:	bgt	130a4 <export_data_element_to_ascii@@Base+0x4e8>
   130d4:	ldr	r2, [sp, #36]	; 0x24
   130d8:	add	r7, r7, #1
   130dc:	cmp	r7, sl
   130e0:	bne	13030 <export_data_element_to_ascii@@Base+0x474>
   130e4:	b	131bc <export_data_element_to_ascii@@Base+0x600>
   130e8:	cmp	r0, #6
   130ec:	beq	131cc <export_data_element_to_ascii@@Base+0x610>
   130f0:	cmp	r0, #2
   130f4:	bcs	136c8 <export_data_element_to_ascii@@Base+0xb0c>
   130f8:	movw	r0, #41754	; 0xa31a
   130fc:	movw	r1, #41262	; 0xa12e
   13100:	movw	r3, #41382	; 0xa1a6
   13104:	mov	r2, #368	; 0x170
   13108:	movt	r0, #1
   1310c:	movt	r1, #1
   13110:	movt	r3, #1
   13114:	bl	12ab4 <__assert_fail@plt>
   13118:	movw	r8, #53408	; 0xd0a0
   1311c:	add	r0, sp, #56	; 0x38
   13120:	mov	r5, #0
   13124:	mov	r7, #0
   13128:	sub	r4, r0, #4
   1312c:	movt	r8, #2
   13130:	ldr	r0, [sp, #52]	; 0x34
   13134:	ldr	r1, [sp, #40]	; 0x28
   13138:	ldr	r3, [sp, #48]	; 0x30
   1313c:	bl	12c78 <export_data_element_to_ascii@@Base+0xbc>
   13140:	ldr	r0, [sp, #44]	; 0x2c
   13144:	cmp	r7, r0
   13148:	bge	131ac <export_data_element_to_ascii@@Base+0x5f0>
   1314c:	ldr	r0, [sp, #32]
   13150:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   13154:	cmp	r0, #0
   13158:	beq	13160 <export_data_element_to_ascii@@Base+0x5a4>
   1315c:	bl	184f8 <handle_coda_error@@Base>
   13160:	ldr	r0, [r8]
   13164:	cmp	r0, #0
   13168:	beq	131ac <export_data_element_to_ascii@@Base+0x5f0>
   1316c:	ldr	r0, [sp, #28]
   13170:	ldr	r0, [r0]
   13174:	cmp	r0, #1
   13178:	blt	131ac <export_data_element_to_ascii@@Base+0x5f0>
   1317c:	add	r1, r6, r0, lsl #2
   13180:	ldr	r3, [r4, r0, lsl #2]
   13184:	ldr	r2, [r1, #844]	; 0x34c
   13188:	add	r2, r2, #1
   1318c:	cmp	r2, r3
   13190:	str	r2, [r1, #844]	; 0x34c
   13194:	bne	131ac <export_data_element_to_ascii@@Base+0x5f0>
   13198:	sub	r0, r0, #1
   1319c:	str	r5, [r1, #844]	; 0x34c
   131a0:	add	r1, r0, #1
   131a4:	cmp	r1, #1
   131a8:	bgt	1317c <export_data_element_to_ascii@@Base+0x5c0>
   131ac:	ldr	r2, [sp, #36]	; 0x24
   131b0:	add	r7, r7, #1
   131b4:	cmp	r7, sl
   131b8:	bne	13130 <export_data_element_to_ascii@@Base+0x574>
   131bc:	ldr	r0, [sp, #32]
   131c0:	bl	1285c <coda_cursor_goto_parent@plt>
   131c4:	sub	sp, fp, #28
   131c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131cc:	ldr	r0, [r6]
   131d0:	sub	r1, fp, #36	; 0x24
   131d4:	bl	12934 <coda_type_get_special_type@plt>
   131d8:	cmp	r0, #0
   131dc:	beq	131e4 <export_data_element_to_ascii@@Base+0x628>
   131e0:	bl	184f8 <handle_coda_error@@Base>
   131e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   131e8:	sub	r1, r0, #1
   131ec:	cmp	r1, #2
   131f0:	bcs	132f8 <export_data_element_to_ascii@@Base+0x73c>
   131f4:	add	r0, r9, #144	; 0x90
   131f8:	sub	r1, fp, #48	; 0x30
   131fc:	bl	128a4 <coda_cursor_read_double@plt>
   13200:	cmp	r0, #0
   13204:	beq	1320c <export_data_element_to_ascii@@Base+0x650>
   13208:	bl	184f8 <handle_coda_error@@Base>
   1320c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13210:	cmp	r0, #2
   13214:	bne	13688 <export_data_element_to_ascii@@Base+0xacc>
   13218:	movw	r0, #49628	; 0xc1dc
   1321c:	movt	r0, #2
   13220:	ldr	r0, [r0]
   13224:	cmp	r0, #0
   13228:	beq	13688 <export_data_element_to_ascii@@Base+0xacc>
   1322c:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13230:	bl	128b0 <coda_isNaN@plt>
   13234:	cmp	r0, #0
   13238:	bne	1324c <export_data_element_to_ascii@@Base+0x690>
   1323c:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13240:	bl	12754 <coda_isInf@plt>
   13244:	cmp	r0, #0
   13248:	beq	136e4 <export_data_element_to_ascii@@Base+0xb28>
   1324c:	movw	r1, #41464	; 0xa1f8
   13250:	mov	r0, #11
   13254:	movt	r1, #1
   13258:	vld1.64	{d16-d17}, [r1], r0
   1325c:	vld1.8	{d18-d19}, [r1]
   13260:	add	r1, sp, #56	; 0x38
   13264:	vst1.64	{d16-d17}, [r1], r0
   13268:	vst1.8	{d18-d19}, [r1]
   1326c:	movw	r0, #53796	; 0xd224
   13270:	movt	r0, #2
   13274:	ldr	r0, [r0]
   13278:	cmp	r0, #0
   1327c:	beq	136dc <export_data_element_to_ascii@@Base+0xb20>
   13280:	movw	r1, #43251	; 0xa8f3
   13284:	add	r2, sp, #56	; 0x38
   13288:	movt	r1, #1
   1328c:	b	132b4 <export_data_element_to_ascii@@Base+0x6f8>
   13290:	add	r0, r9, #144	; 0x90
   13294:	add	r1, sp, #56	; 0x38
   13298:	bl	12718 <coda_cursor_read_uint32@plt>
   1329c:	cmp	r0, #0
   132a0:	beq	132a8 <export_data_element_to_ascii@@Base+0x6ec>
   132a4:	bl	184f8 <handle_coda_error@@Base>
   132a8:	ldr	r2, [sp, #56]	; 0x38
   132ac:	movw	r1, #41367	; 0xa197
   132b0:	movt	r1, #1
   132b4:	mov	r0, r4
   132b8:	bl	128bc <fprintf@plt>
   132bc:	b	136c8 <export_data_element_to_ascii@@Base+0xb0c>
   132c0:	add	r0, r9, #144	; 0x90
   132c4:	add	r1, sp, #56	; 0x38
   132c8:	bl	128a4 <coda_cursor_read_double@plt>
   132cc:	cmp	r0, #0
   132d0:	beq	132d8 <export_data_element_to_ascii@@Base+0x71c>
   132d4:	bl	184f8 <handle_coda_error@@Base>
   132d8:	vldr	d16, [sp, #56]	; 0x38
   132dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   132e0:	vmov	r2, r3, d16
   132e4:	cmp	r0, #8
   132e8:	bne	13690 <export_data_element_to_ascii@@Base+0xad4>
   132ec:	movw	r1, #41371	; 0xa19b
   132f0:	movt	r1, #1
   132f4:	b	13698 <export_data_element_to_ascii@@Base+0xadc>
   132f8:	cmp	r0, #3
   132fc:	bne	136c8 <export_data_element_to_ascii@@Base+0xb0c>
   13300:	add	r0, r9, #144	; 0x90
   13304:	add	r1, sp, #56	; 0x38
   13308:	bl	129dc <coda_cursor_read_complex_double_pair@plt>
   1330c:	cmp	r0, #0
   13310:	beq	13318 <export_data_element_to_ascii@@Base+0x75c>
   13314:	bl	184f8 <handle_coda_error@@Base>
   13318:	movw	r0, #53396	; 0xd094
   1331c:	vldr	d16, [sp, #56]	; 0x38
   13320:	vldr	d17, [sp, #64]	; 0x40
   13324:	movw	r1, #41444	; 0xa1e4
   13328:	movt	r0, #2
   1332c:	movt	r1, #1
   13330:	ldr	r0, [r0]
   13334:	vstr	d17, [sp, #8]
   13338:	vmov	r2, r3, d16
   1333c:	str	r0, [sp]
   13340:	b	13698 <export_data_element_to_ascii@@Base+0xadc>
   13344:	add	r0, r9, #144	; 0x90
   13348:	sub	r1, fp, #48	; 0x30
   1334c:	bl	129ac <coda_cursor_read_int64@plt>
   13350:	cmp	r0, #0
   13354:	beq	1335c <export_data_element_to_ascii@@Base+0x7a0>
   13358:	bl	184f8 <handle_coda_error@@Base>
   1335c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13360:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13364:	add	r5, sp, #56	; 0x38
   13368:	mov	r2, r5
   1336c:	bl	12aa8 <coda_str64@plt>
   13370:	b	1363c <export_data_element_to_ascii@@Base+0xa80>
   13374:	add	r6, r9, #144	; 0x90
   13378:	add	r1, sp, #56	; 0x38
   1337c:	mov	r0, r6
   13380:	bl	1288c <coda_cursor_get_string_length@plt>
   13384:	cmp	r0, #0
   13388:	beq	13390 <export_data_element_to_ascii@@Base+0x7d4>
   1338c:	bl	184f8 <handle_coda_error@@Base>
   13390:	ldr	r0, [sp, #56]	; 0x38
   13394:	add	r7, r0, #1
   13398:	mov	r0, r7
   1339c:	bl	1282c <malloc@plt>
   133a0:	mov	r5, r0
   133a4:	cmp	r0, #0
   133a8:	bne	133dc <export_data_element_to_ascii@@Base+0x820>
   133ac:	movw	r1, #41209	; 0xa0f9
   133b0:	movw	r3, #41262	; 0xa12e
   133b4:	mov	r0, #126	; 0x7e
   133b8:	mov	r2, r7
   133bc:	str	r0, [sp]
   133c0:	movt	r1, #1
   133c4:	movt	r3, #1
   133c8:	mvn	r0, #0
   133cc:	bl	126ac <coda_set_error@plt>
   133d0:	bl	184f8 <handle_coda_error@@Base>
   133d4:	ldr	r0, [sp, #56]	; 0x38
   133d8:	add	r7, r0, #1
   133dc:	mov	r0, r6
   133e0:	mov	r1, r5
   133e4:	mov	r2, r7
   133e8:	bl	12850 <coda_cursor_read_string@plt>
   133ec:	cmp	r0, #0
   133f0:	beq	133f8 <export_data_element_to_ascii@@Base+0x83c>
   133f4:	bl	184f8 <handle_coda_error@@Base>
   133f8:	movw	r0, #53796	; 0xd224
   133fc:	movt	r0, #2
   13400:	ldr	r0, [r0]
   13404:	cmp	r0, #0
   13408:	beq	136a4 <export_data_element_to_ascii@@Base+0xae8>
   1340c:	movw	r1, #43251	; 0xa8f3
   13410:	mov	r0, r4
   13414:	mov	r2, r5
   13418:	movt	r1, #1
   1341c:	bl	128bc <fprintf@plt>
   13420:	b	136b0 <export_data_element_to_ascii@@Base+0xaf4>
   13424:	add	r0, r9, #144	; 0x90
   13428:	add	r1, sp, #56	; 0x38
   1342c:	str	r0, [sp, #48]	; 0x30
   13430:	bl	12a0c <coda_cursor_get_bit_size@plt>
   13434:	cmp	r0, #0
   13438:	beq	13440 <export_data_element_to_ascii@@Base+0x884>
   1343c:	bl	184f8 <handle_coda_error@@Base>
   13440:	ldr	sl, [sp, #56]	; 0x38
   13444:	ldr	r7, [sp, #60]	; 0x3c
   13448:	lsr	r0, sl, #3
   1344c:	asr	r4, r7, #3
   13450:	orr	r0, r0, r7, lsl #29
   13454:	adds	r5, r0, #1
   13458:	adc	r9, r4, #0
   1345c:	ands	r8, sl, #7
   13460:	moveq	r5, r0
   13464:	mov	r0, r5
   13468:	bl	1282c <malloc@plt>
   1346c:	cmp	r8, #0
   13470:	mov	r6, r0
   13474:	moveq	r9, r4
   13478:	cmp	r0, #0
   1347c:	bne	134b0 <export_data_element_to_ascii@@Base+0x8f4>
   13480:	movw	r1, #41209	; 0xa0f9
   13484:	movw	r3, #41262	; 0xa12e
   13488:	mov	r0, #163	; 0xa3
   1348c:	mov	r2, r5
   13490:	str	r0, [sp]
   13494:	movt	r1, #1
   13498:	movt	r3, #1
   1349c:	mvn	r0, #0
   134a0:	bl	126ac <coda_set_error@plt>
   134a4:	bl	184f8 <handle_coda_error@@Base>
   134a8:	ldr	sl, [sp, #56]	; 0x38
   134ac:	ldr	r7, [sp, #60]	; 0x3c
   134b0:	ldr	r0, [sp, #48]	; 0x30
   134b4:	mov	r1, r6
   134b8:	mov	r2, #0
   134bc:	mov	r3, #0
   134c0:	str	sl, [sp]
   134c4:	str	r7, [sp, #4]
   134c8:	bl	12a9c <coda_cursor_read_bits@plt>
   134cc:	cmp	r0, #0
   134d0:	beq	134d8 <export_data_element_to_ascii@@Base+0x91c>
   134d4:	bl	184f8 <handle_coda_error@@Base>
   134d8:	subs	r0, r5, #1
   134dc:	sbcs	r0, r9, #0
   134e0:	blt	13600 <export_data_element_to_ascii@@Base+0xa44>
   134e4:	movw	r4, #41358	; 0xa18e
   134e8:	movw	r7, #41352	; 0xa188
   134ec:	movw	r8, #41355	; 0xa18b
   134f0:	mov	sl, #0
   134f4:	movt	r4, #1
   134f8:	movt	r7, #1
   134fc:	movt	r8, #1
   13500:	ldrb	r2, [r6, sl]
   13504:	sub	r0, r2, #7
   13508:	cmp	r0, #6
   1350c:	bhi	13540 <export_data_element_to_ascii@@Base+0x984>
   13510:	add	r1, pc, #0
   13514:	ldr	pc, [r1, r0, lsl #2]
   13518:	andeq	r3, r1, r4, lsr r5
   1351c:	andeq	r3, r1, r8, ror #10
   13520:	andeq	r3, r1, ip, asr r5
   13524:	andeq	r3, r1, r4, ror r5
   13528:	andeq	r3, r1, r0, asr r5
   1352c:	andeq	r3, r1, r0, lsl #11
   13530:	andeq	r3, r1, r8, lsl #11
   13534:	movw	r0, #41337	; 0xa179
   13538:	movt	r0, #1
   1353c:	b	1358c <export_data_element_to_ascii@@Base+0x9d0>
   13540:	cmp	r2, #92	; 0x5c
   13544:	bne	135b0 <export_data_element_to_ascii@@Base+0x9f4>
   13548:	mov	r0, r4
   1354c:	b	1358c <export_data_element_to_ascii@@Base+0x9d0>
   13550:	movw	r0, #41349	; 0xa185
   13554:	movt	r0, #1
   13558:	b	1358c <export_data_element_to_ascii@@Base+0x9d0>
   1355c:	movw	r0, #41343	; 0xa17f
   13560:	movt	r0, #1
   13564:	b	1358c <export_data_element_to_ascii@@Base+0x9d0>
   13568:	movw	r0, #41340	; 0xa17c
   1356c:	movt	r0, #1
   13570:	b	1358c <export_data_element_to_ascii@@Base+0x9d0>
   13574:	movw	r0, #41346	; 0xa182
   13578:	movt	r0, #1
   1357c:	b	1358c <export_data_element_to_ascii@@Base+0x9d0>
   13580:	mov	r0, r7
   13584:	b	1358c <export_data_element_to_ascii@@Base+0x9d0>
   13588:	mov	r0, r8
   1358c:	ldr	r3, [sp, #52]	; 0x34
   13590:	mov	r1, #2
   13594:	mov	r2, #1
   13598:	bl	127d8 <fwrite@plt>
   1359c:	add	sl, sl, #1
   135a0:	subs	r0, sl, r5
   135a4:	rscs	r0, r9, #0
   135a8:	blt	13500 <export_data_element_to_ascii@@Base+0x944>
   135ac:	b	13600 <export_data_element_to_ascii@@Base+0xa44>
   135b0:	sub	r0, r2, #32
   135b4:	uxtb	r0, r0
   135b8:	cmp	r0, #94	; 0x5e
   135bc:	bhi	135e0 <export_data_element_to_ascii@@Base+0xa24>
   135c0:	ldr	r1, [sp, #52]	; 0x34
   135c4:	mov	r0, r2
   135c8:	bl	129f4 <fputc@plt>
   135cc:	add	sl, sl, #1
   135d0:	subs	r0, sl, r5
   135d4:	rscs	r0, r9, #0
   135d8:	blt	13500 <export_data_element_to_ascii@@Base+0x944>
   135dc:	b	13600 <export_data_element_to_ascii@@Base+0xa44>
   135e0:	ldr	r0, [sp, #52]	; 0x34
   135e4:	movw	r1, #41361	; 0xa191
   135e8:	movt	r1, #1
   135ec:	bl	128bc <fprintf@plt>
   135f0:	add	sl, sl, #1
   135f4:	subs	r0, sl, r5
   135f8:	rscs	r0, r9, #0
   135fc:	blt	13500 <export_data_element_to_ascii@@Base+0x944>
   13600:	mov	r0, r6
   13604:	bl	126f4 <free@plt>
   13608:	ldr	r4, [sp, #52]	; 0x34
   1360c:	b	136c8 <export_data_element_to_ascii@@Base+0xb0c>
   13610:	add	r0, r9, #144	; 0x90
   13614:	sub	r1, fp, #48	; 0x30
   13618:	bl	12898 <coda_cursor_read_uint64@plt>
   1361c:	cmp	r0, #0
   13620:	beq	13628 <export_data_element_to_ascii@@Base+0xa6c>
   13624:	bl	184f8 <handle_coda_error@@Base>
   13628:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1362c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13630:	add	r5, sp, #56	; 0x38
   13634:	mov	r2, r5
   13638:	bl	126e8 <coda_str64u@plt>
   1363c:	mov	r0, r5
   13640:	mov	r1, r4
   13644:	bl	12a84 <fputs@plt>
   13648:	b	136c8 <export_data_element_to_ascii@@Base+0xb0c>
   1364c:	add	r0, r9, #144	; 0x90
   13650:	add	r1, sp, #56	; 0x38
   13654:	bl	12904 <coda_cursor_read_char@plt>
   13658:	cmp	r0, #0
   1365c:	beq	13664 <export_data_element_to_ascii@@Base+0xaa8>
   13660:	bl	184f8 <handle_coda_error@@Base>
   13664:	movw	r0, #53796	; 0xd224
   13668:	ldrb	r2, [sp, #56]	; 0x38
   1366c:	movt	r0, #2
   13670:	ldr	r0, [r0]
   13674:	cmp	r0, #0
   13678:	beq	136bc <export_data_element_to_ascii@@Base+0xb00>
   1367c:	movw	r1, #41204	; 0xa0f4
   13680:	movt	r1, #1
   13684:	b	132b4 <export_data_element_to_ascii@@Base+0x6f8>
   13688:	vldr	d16, [fp, #-48]	; 0xffffffd0
   1368c:	vmov	r2, r3, d16
   13690:	movw	r1, #41376	; 0xa1a0
   13694:	movt	r1, #1
   13698:	mov	r0, r4
   1369c:	bl	128bc <fprintf@plt>
   136a0:	b	136c8 <export_data_element_to_ascii@@Base+0xb0c>
   136a4:	mov	r0, r5
   136a8:	mov	r1, r4
   136ac:	bl	12a84 <fputs@plt>
   136b0:	mov	r0, r5
   136b4:	bl	126f4 <free@plt>
   136b8:	b	136c8 <export_data_element_to_ascii@@Base+0xb0c>
   136bc:	mov	r0, r2
   136c0:	mov	r1, r4
   136c4:	bl	129f4 <fputc@plt>
   136c8:	mov	r0, #10
   136cc:	mov	r1, r4
   136d0:	bl	129f4 <fputc@plt>
   136d4:	sub	sp, fp, #28
   136d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136dc:	add	r0, sp, #56	; 0x38
   136e0:	b	13640 <export_data_element_to_ascii@@Base+0xa84>
   136e4:	vldr	d0, [fp, #-48]	; 0xffffffd0
   136e8:	movw	r0, #41417	; 0xa1c9
   136ec:	add	r1, sp, #56	; 0x38
   136f0:	movt	r0, #1
   136f4:	bl	126d0 <coda_time_double_to_string@plt>
   136f8:	cmp	r0, #0
   136fc:	beq	1326c <export_data_element_to_ascii@@Base+0x6b0>
   13700:	bl	184f8 <handle_coda_error@@Base>
   13704:	b	1326c <export_data_element_to_ascii@@Base+0x6b0>
   13708:	movw	r0, #41754	; 0xa31a
   1370c:	movw	r1, #41262	; 0xa12e
   13710:	movw	r3, #41382	; 0xa1a6
   13714:	movw	r2, #294	; 0x126
   13718:	movt	r0, #1
   1371c:	movt	r1, #1
   13720:	movt	r3, #1
   13724:	bl	12ab4 <__assert_fail@plt>

00013728 <print_debug_data@@Base>:
   13728:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1372c:	add	fp, sp, #24
   13730:	sub	sp, sp, #536	; 0x218
   13734:	movw	r7, #49640	; 0xc1e8
   13738:	mov	r6, r0
   1373c:	mov	r5, r1
   13740:	mov	r4, r2
   13744:	sub	r1, fp, #28
   13748:	movt	r7, #2
   1374c:	cmp	r6, #0
   13750:	ldr	r0, [r7]
   13754:	beq	137b4 <print_debug_data@@Base+0x8c>
   13758:	str	r1, [sp]
   1375c:	mov	r1, r6
   13760:	mov	r2, r5
   13764:	mov	r3, r4
   13768:	bl	128d4 <coda_open_as@plt>
   1376c:	cmp	r0, #0
   13770:	beq	137e0 <print_debug_data@@Base+0xb8>
   13774:	bl	12a60 <coda_get_errno@plt>
   13778:	ldr	r0, [r0]
   1377c:	cmn	r0, #21
   13780:	bne	137dc <print_debug_data@@Base+0xb4>
   13784:	mov	r0, #0
   13788:	bl	12700 <coda_set_option_use_mmap@plt>
   1378c:	ldr	r0, [r7]
   13790:	sub	r1, fp, #28
   13794:	cmp	r6, #0
   13798:	beq	137c4 <print_debug_data@@Base+0x9c>
   1379c:	str	r1, [sp]
   137a0:	mov	r1, r6
   137a4:	mov	r2, r5
   137a8:	mov	r3, r4
   137ac:	bl	128d4 <coda_open_as@plt>
   137b0:	b	137c8 <print_debug_data@@Base+0xa0>
   137b4:	bl	126b8 <coda_open@plt>
   137b8:	cmp	r0, #0
   137bc:	bne	13774 <print_debug_data@@Base+0x4c>
   137c0:	b	137e0 <print_debug_data@@Base+0xb8>
   137c4:	bl	126b8 <coda_open@plt>
   137c8:	mov	r4, r0
   137cc:	mov	r0, #1
   137d0:	bl	12700 <coda_set_option_use_mmap@plt>
   137d4:	cmp	r4, #0
   137d8:	beq	137e0 <print_debug_data@@Base+0xb8>
   137dc:	bl	184f8 <handle_coda_error@@Base>
   137e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137e4:	add	r1, sp, #4
   137e8:	bl	1279c <coda_get_product_format@plt>
   137ec:	cmp	r0, #0
   137f0:	beq	137f8 <print_debug_data@@Base+0xd0>
   137f4:	bl	184f8 <handle_coda_error@@Base>
   137f8:	ldr	r0, [sp, #4]
   137fc:	mov	r1, #0
   13800:	cmp	r0, #3
   13804:	movw	r0, #49576	; 0xc1a8
   13808:	movwcc	r1, #1
   1380c:	movt	r0, #2
   13810:	str	r1, [r0]
   13814:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13818:	add	r0, sp, #8
   1381c:	bl	127e4 <coda_cursor_set_product@plt>
   13820:	cmp	r0, #0
   13824:	beq	1382c <print_debug_data@@Base+0x104>
   13828:	bl	184f8 <handle_coda_error@@Base>
   1382c:	movw	r0, #53416	; 0xd0a8
   13830:	movt	r0, #2
   13834:	ldr	r1, [r0]
   13838:	cmp	r1, #0
   1383c:	beq	13854 <print_debug_data@@Base+0x12c>
   13840:	add	r0, sp, #8
   13844:	bl	129c4 <coda_cursor_goto@plt>
   13848:	cmp	r0, #0
   1384c:	beq	13854 <print_debug_data@@Base+0x12c>
   13850:	bl	184f8 <handle_coda_error@@Base>
   13854:	mov	r0, #0
   13858:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   1385c:	add	r0, sp, #8
   13860:	mov	r1, #0
   13864:	bl	13878 <print_debug_data@@Base+0x150>
   13868:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1386c:	bl	129a0 <coda_close@plt>
   13870:	sub	sp, fp, #24
   13874:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13878:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1387c:	add	fp, sp, #28
   13880:	sub	sp, sp, #644	; 0x284
   13884:	str	r1, [sp, #24]
   13888:	sub	r1, fp, #40	; 0x28
   1388c:	mov	r7, r0
   13890:	bl	12778 <coda_cursor_has_attributes@plt>
   13894:	cmp	r0, #0
   13898:	beq	138a0 <print_debug_data@@Base+0x178>
   1389c:	bl	184f8 <handle_coda_error@@Base>
   138a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   138a4:	cmp	r0, #0
   138a8:	beq	13900 <print_debug_data@@Base+0x1d8>
   138ac:	mov	r0, r7
   138b0:	bl	128f8 <coda_cursor_goto_attributes@plt>
   138b4:	cmp	r0, #0
   138b8:	beq	138c0 <print_debug_data@@Base+0x198>
   138bc:	bl	184f8 <handle_coda_error@@Base>
   138c0:	movw	r0, #41496	; 0xa218
   138c4:	movt	r0, #1
   138c8:	bl	144d0 <print_debug_data@@Base+0xda8>
   138cc:	movw	r4, #49600	; 0xc1c0
   138d0:	ldr	r1, [sp, #24]
   138d4:	movt	r4, #2
   138d8:	ldr	r0, [r4]
   138dc:	add	r0, r0, #1
   138e0:	str	r0, [r4]
   138e4:	mov	r0, r7
   138e8:	bl	13878 <print_debug_data@@Base+0x150>
   138ec:	ldr	r0, [r4]
   138f0:	sub	r0, r0, #1
   138f4:	str	r0, [r4]
   138f8:	mov	r0, r7
   138fc:	bl	1285c <coda_cursor_goto_parent@plt>
   13900:	sub	r1, fp, #36	; 0x24
   13904:	mov	r0, r7
   13908:	bl	12784 <coda_cursor_get_type_class@plt>
   1390c:	cmp	r0, #0
   13910:	beq	13918 <print_debug_data@@Base+0x1f0>
   13914:	bl	184f8 <handle_coda_error@@Base>
   13918:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1391c:	cmp	r0, #6
   13920:	bhi	14454 <print_debug_data@@Base+0xd2c>
   13924:	add	r1, pc, #4
   13928:	str	r7, [sp, #28]
   1392c:	ldr	pc, [r1, r0, lsl #2]
   13930:			; <UNDEFINED> instruction: 0x00013ab4
   13934:	andeq	r3, r1, ip, lsr ip
   13938:	andeq	r3, r1, ip, asr #18
   1393c:	andeq	r3, r1, ip, asr #18
   13940:	andeq	r3, r1, ip, asr #18
   13944:	andeq	r3, r1, ip, asr #18
   13948:	andeq	r3, r1, r8, ror #25
   1394c:	sub	r1, fp, #96	; 0x60
   13950:	mov	r0, r7
   13954:	bl	12994 <coda_cursor_has_ascii_content@plt>
   13958:	cmp	r0, #0
   1395c:	beq	13964 <print_debug_data@@Base+0x23c>
   13960:	bl	184f8 <handle_coda_error@@Base>
   13964:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13968:	cmp	r0, #0
   1396c:	beq	13a20 <print_debug_data@@Base+0x2f8>
   13970:	add	r1, sp, #32
   13974:	mov	r0, r7
   13978:	bl	1288c <coda_cursor_get_string_length@plt>
   1397c:	cmp	r0, #0
   13980:	beq	13988 <print_debug_data@@Base+0x260>
   13984:	bl	184f8 <handle_coda_error@@Base>
   13988:	ldr	r0, [sp, #32]
   1398c:	add	r6, r0, #1
   13990:	mov	r0, r6
   13994:	bl	1282c <malloc@plt>
   13998:	mov	r5, r0
   1399c:	cmp	r0, #0
   139a0:	bne	139d4 <print_debug_data@@Base+0x2ac>
   139a4:	movw	r1, #41209	; 0xa0f9
   139a8:	movw	r3, #41523	; 0xa233
   139ac:	movw	r0, #410	; 0x19a
   139b0:	mov	r2, r6
   139b4:	str	r0, [sp]
   139b8:	movt	r1, #1
   139bc:	movt	r3, #1
   139c0:	mvn	r0, #0
   139c4:	bl	126ac <coda_set_error@plt>
   139c8:	bl	184f8 <handle_coda_error@@Base>
   139cc:	ldr	r0, [sp, #32]
   139d0:	add	r6, r0, #1
   139d4:	mov	r0, r7
   139d8:	mov	r1, r5
   139dc:	mov	r2, r6
   139e0:	bl	12850 <coda_cursor_read_string@plt>
   139e4:	cmp	r0, #0
   139e8:	beq	139f0 <print_debug_data@@Base+0x2c8>
   139ec:	bl	184f8 <handle_coda_error@@Base>
   139f0:	movw	r0, #42996	; 0xa7f4
   139f4:	movt	r0, #1
   139f8:	bl	144d0 <print_debug_data@@Base+0xda8>
   139fc:	ldr	r1, [sp, #32]
   13a00:	mov	r0, r5
   13a04:	bl	145cc <print_debug_data@@Base+0xea4>
   13a08:	ldr	r1, [sp, #32]
   13a0c:	movw	r0, #41598	; 0xa27e
   13a10:	movt	r0, #1
   13a14:	bl	14584 <print_debug_data@@Base+0xe5c>
   13a18:	mov	r0, r5
   13a1c:	bl	126f4 <free@plt>
   13a20:	sub	r1, fp, #120	; 0x78
   13a24:	mov	r0, r7
   13a28:	bl	12820 <coda_cursor_get_read_type@plt>
   13a2c:	cmp	r0, #0
   13a30:	beq	13a38 <print_debug_data@@Base+0x310>
   13a34:	bl	184f8 <handle_coda_error@@Base>
   13a38:	ldr	r0, [fp, #-120]	; 0xffffff88
   13a3c:	add	r0, r0, #1
   13a40:	cmp	r0, #13
   13a44:	bhi	14454 <print_debug_data@@Base+0xd2c>
   13a48:	add	r1, pc, #0
   13a4c:	ldr	pc, [r1, r0, lsl #2]
   13a50:	andeq	r3, r1, r8, lsl #21
   13a54:	andeq	r3, r1, r8, ror sp
   13a58:	andeq	r3, r1, r8, asr #26
   13a5c:	andeq	r3, r1, r8, ror sp
   13a60:	andeq	r3, r1, r8, asr #26
   13a64:	andeq	r3, r1, r8, ror sp
   13a68:	andeq	r3, r1, r8, asr #26
   13a6c:	andeq	r3, r1, r8, lsr lr
   13a70:	andeq	r3, r1, ip, ror lr
   13a74:	andeq	r3, r1, r8, lsr #27
   13a78:	andeq	r3, r1, r8, lsr #27
   13a7c:	andeq	r3, r1, r8, lsl #21
   13a80:	andeq	r3, r1, r8, lsl #21
   13a84:	andeq	r3, r1, r0, asr #29
   13a88:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a8c:	cmp	r0, #0
   13a90:	bne	14454 <print_debug_data@@Base+0xd2c>
   13a94:	movw	r0, #41639	; 0xa2a7
   13a98:	movw	r1, #41523	; 0xa233
   13a9c:	movw	r3, #41657	; 0xa2b9
   13aa0:	mov	r2, #548	; 0x224
   13aa4:	movt	r0, #1
   13aa8:	movt	r1, #1
   13aac:	movt	r3, #1
   13ab0:	bl	12ab4 <__assert_fail@plt>
   13ab4:	sub	r1, fp, #120	; 0x78
   13ab8:	mov	r0, r7
   13abc:	bl	126dc <coda_cursor_get_num_elements@plt>
   13ac0:	cmp	r0, #0
   13ac4:	beq	13acc <print_debug_data@@Base+0x3a4>
   13ac8:	bl	184f8 <handle_coda_error@@Base>
   13acc:	ldr	r0, [fp, #-120]	; 0xffffff88
   13ad0:	cmp	r0, #1
   13ad4:	blt	14454 <print_debug_data@@Base+0xd2c>
   13ad8:	sub	r1, fp, #96	; 0x60
   13adc:	mov	r0, r7
   13ae0:	bl	1273c <coda_cursor_get_type@plt>
   13ae4:	cmp	r0, #0
   13ae8:	beq	13af0 <print_debug_data@@Base+0x3c8>
   13aec:	bl	184f8 <handle_coda_error@@Base>
   13af0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13af4:	sub	r1, fp, #44	; 0x2c
   13af8:	bl	12940 <coda_type_get_record_union_status@plt>
   13afc:	cmp	r0, #0
   13b00:	beq	13b08 <print_debug_data@@Base+0x3e0>
   13b04:	bl	184f8 <handle_coda_error@@Base>
   13b08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b0c:	cmp	r0, #0
   13b10:	beq	13fe0 <print_debug_data@@Base+0x8b8>
   13b14:	sub	r1, fp, #48	; 0x30
   13b18:	mov	r0, r7
   13b1c:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   13b20:	cmp	r0, #0
   13b24:	beq	13b2c <print_debug_data@@Base+0x404>
   13b28:	bl	184f8 <handle_coda_error@@Base>
   13b2c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13b30:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13b34:	sub	r2, fp, #52	; 0x34
   13b38:	bl	12a78 <coda_type_get_record_field_name@plt>
   13b3c:	cmp	r0, #0
   13b40:	beq	13b48 <print_debug_data@@Base+0x420>
   13b44:	bl	184f8 <handle_coda_error@@Base>
   13b48:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13b4c:	mov	r0, r7
   13b50:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   13b54:	cmp	r0, #0
   13b58:	beq	13b60 <print_debug_data@@Base+0x438>
   13b5c:	bl	184f8 <handle_coda_error@@Base>
   13b60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13b64:	movw	r0, #43245	; 0xa8ed
   13b68:	movt	r0, #1
   13b6c:	bl	144d0 <print_debug_data@@Base+0xda8>
   13b70:	movw	r0, #49576	; 0xc1a8
   13b74:	movt	r0, #2
   13b78:	ldr	r0, [r0]
   13b7c:	cmp	r0, #0
   13b80:	beq	13bec <print_debug_data@@Base+0x4c4>
   13b84:	sub	r1, fp, #88	; 0x58
   13b88:	mov	r0, r7
   13b8c:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   13b90:	cmp	r0, #0
   13b94:	beq	13b9c <print_debug_data@@Base+0x474>
   13b98:	bl	184f8 <handle_coda_error@@Base>
   13b9c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13ba0:	cmp	r1, #0
   13ba4:	blt	13bec <print_debug_data@@Base+0x4c4>
   13ba8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13bac:	add	r5, sp, #32
   13bb0:	mov	r2, r5
   13bb4:	lsr	r0, r0, #3
   13bb8:	orr	r0, r0, r1, lsl #29
   13bbc:	lsr	r1, r1, #3
   13bc0:	bl	12aa8 <coda_str64@plt>
   13bc4:	movw	r0, #41510	; 0xa226
   13bc8:	mov	r1, r5
   13bcc:	movt	r0, #1
   13bd0:	bl	14584 <print_debug_data@@Base+0xe5c>
   13bd4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13bd8:	ands	r1, r0, #7
   13bdc:	beq	13bec <print_debug_data@@Base+0x4c4>
   13be0:	movw	r0, #41514	; 0xa22a
   13be4:	movt	r0, #1
   13be8:	bl	14584 <print_debug_data@@Base+0xe5c>
   13bec:	movw	r0, #43795	; 0xab13
   13bf0:	movt	r0, #1
   13bf4:	bl	14584 <print_debug_data@@Base+0xe5c>
   13bf8:	movw	r4, #49600	; 0xc1c0
   13bfc:	movt	r4, #2
   13c00:	ldr	r0, [r4]
   13c04:	add	r0, r0, #1
   13c08:	str	r0, [r4]
   13c0c:	movw	r0, #49580	; 0xc1ac
   13c10:	movt	r0, #2
   13c14:	ldr	r0, [r0]
   13c18:	cmp	r0, #0
   13c1c:	blt	1445c <print_debug_data@@Base+0xd34>
   13c20:	ldr	r1, [sp, #24]
   13c24:	cmp	r0, r1
   13c28:	bgt	1445c <print_debug_data@@Base+0xd34>
   13c2c:	movw	r0, #41518	; 0xa22e
   13c30:	movt	r0, #1
   13c34:	bl	144d0 <print_debug_data@@Base+0xda8>
   13c38:	b	1446c <print_debug_data@@Base+0xd44>
   13c3c:	add	r5, sp, #32
   13c40:	sub	r1, fp, #44	; 0x2c
   13c44:	mov	r0, r7
   13c48:	mov	r2, r5
   13c4c:	bl	12988 <coda_cursor_get_array_dim@plt>
   13c50:	cmp	r0, #0
   13c54:	beq	13c5c <print_debug_data@@Base+0x534>
   13c58:	bl	184f8 <handle_coda_error@@Base>
   13c5c:	ldr	r4, [fp, #-44]	; 0xffffffd4
   13c60:	cmp	r4, #0
   13c64:	blt	14454 <print_debug_data@@Base+0xd2c>
   13c68:	beq	14180 <print_debug_data@@Base+0xa58>
   13c6c:	lsl	r2, r4, #2
   13c70:	sub	r0, fp, #88	; 0x58
   13c74:	mov	r1, #0
   13c78:	mov	r8, #0
   13c7c:	bl	12910 <memset@plt>
   13c80:	mov	r6, #1
   13c84:	cmp	r4, #4
   13c88:	bcc	13cc0 <print_debug_data@@Base+0x598>
   13c8c:	bic	r8, r4, #3
   13c90:	vmov.i32	q8, #1	; 0x00000001
   13c94:	mov	r0, r8
   13c98:	vld1.32	{d18-d19}, [r5]!
   13c9c:	subs	r0, r0, #4
   13ca0:	vmul.i32	q8, q9, q8
   13ca4:	bne	13c98 <print_debug_data@@Base+0x570>
   13ca8:	vext.8	q9, q8, q8, #8
   13cac:	cmp	r4, r8
   13cb0:	vmul.i32	q0, q8, q9
   13cb4:	vmul.i32	q8, q0, d0[1]
   13cb8:	vmov.32	r6, d16[0]
   13cbc:	beq	13cdc <print_debug_data@@Base+0x5b4>
   13cc0:	add	r1, sp, #32
   13cc4:	sub	r0, r4, r8
   13cc8:	add	r1, r1, r8, lsl #2
   13ccc:	ldr	r2, [r1], #4
   13cd0:	subs	r0, r0, #1
   13cd4:	mul	r6, r2, r6
   13cd8:	bne	13ccc <print_debug_data@@Base+0x5a4>
   13cdc:	cmp	r6, #1
   13ce0:	bge	14184 <print_debug_data@@Base+0xa5c>
   13ce4:	b	14454 <print_debug_data@@Base+0xd2c>
   13ce8:	sub	r1, fp, #120	; 0x78
   13cec:	mov	r0, r7
   13cf0:	bl	127c0 <coda_cursor_get_special_type@plt>
   13cf4:	cmp	r0, #0
   13cf8:	beq	13d00 <print_debug_data@@Base+0x5d8>
   13cfc:	bl	184f8 <handle_coda_error@@Base>
   13d00:	ldr	r0, [fp, #-120]	; 0xffffff88
   13d04:	cmp	r0, #0
   13d08:	beq	13de8 <print_debug_data@@Base+0x6c0>
   13d0c:	add	r5, sp, #32
   13d10:	mov	r1, r7
   13d14:	mov	r2, #520	; 0x208
   13d18:	mov	r0, r5
   13d1c:	bl	12748 <memcpy@plt>
   13d20:	mov	r0, r5
   13d24:	bl	12a24 <coda_cursor_use_base_type_of_special_type@plt>
   13d28:	cmp	r0, #0
   13d2c:	beq	13d34 <print_debug_data@@Base+0x60c>
   13d30:	bl	184f8 <handle_coda_error@@Base>
   13d34:	ldr	r1, [sp, #24]
   13d38:	add	r0, sp, #32
   13d3c:	bl	13878 <print_debug_data@@Base+0x150>
   13d40:	ldr	r0, [fp, #-120]	; 0xffffff88
   13d44:	b	13dec <print_debug_data@@Base+0x6c4>
   13d48:	add	r1, sp, #32
   13d4c:	mov	r0, r7
   13d50:	bl	12718 <coda_cursor_read_uint32@plt>
   13d54:	cmp	r0, #0
   13d58:	beq	13d60 <print_debug_data@@Base+0x638>
   13d5c:	bl	184f8 <handle_coda_error@@Base>
   13d60:	ldr	r1, [sp, #32]
   13d64:	movw	r0, #41628	; 0xa29c
   13d68:	movt	r0, #1
   13d6c:	bl	144d0 <print_debug_data@@Base+0xda8>
   13d70:	sub	sp, fp, #28
   13d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d78:	add	r1, sp, #32
   13d7c:	mov	r0, r7
   13d80:	bl	12a3c <coda_cursor_read_int32@plt>
   13d84:	cmp	r0, #0
   13d88:	beq	13d90 <print_debug_data@@Base+0x668>
   13d8c:	bl	184f8 <handle_coda_error@@Base>
   13d90:	ldr	r1, [sp, #32]
   13d94:	movw	r0, #41623	; 0xa297
   13d98:	movt	r0, #1
   13d9c:	bl	144d0 <print_debug_data@@Base+0xda8>
   13da0:	sub	sp, fp, #28
   13da4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13da8:	add	r1, sp, #32
   13dac:	mov	r0, r7
   13db0:	bl	128a4 <coda_cursor_read_double@plt>
   13db4:	cmp	r0, #0
   13db8:	beq	13dc0 <print_debug_data@@Base+0x698>
   13dbc:	bl	184f8 <handle_coda_error@@Base>
   13dc0:	vldr	d16, [sp, #32]
   13dc4:	ldr	r0, [fp, #-120]	; 0xffffff88
   13dc8:	vmov	r2, r3, d16
   13dcc:	cmp	r0, #8
   13dd0:	bne	13e68 <print_debug_data@@Base+0x740>
   13dd4:	movw	r0, #41633	; 0xa2a1
   13dd8:	movt	r0, #1
   13ddc:	bl	144d0 <print_debug_data@@Base+0xda8>
   13de0:	sub	sp, fp, #28
   13de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13de8:	mov	r0, #0
   13dec:	bl	12628 <coda_type_get_special_type_name@plt>
   13df0:	mov	r1, r0
   13df4:	movw	r0, #41693	; 0xa2dd
   13df8:	movt	r0, #1
   13dfc:	bl	144d0 <print_debug_data@@Base+0xda8>
   13e00:	ldr	r0, [fp, #-120]	; 0xffffff88
   13e04:	cmp	r0, #3
   13e08:	bhi	14454 <print_debug_data@@Base+0xd2c>
   13e0c:	add	r1, pc, #0
   13e10:	ldr	pc, [r1, r0, lsl #2]
   13e14:	andeq	r3, r1, r4, lsr #28
   13e18:	andeq	r4, r1, r8, lsr #8
   13e1c:	andeq	r4, r1, r8, lsr #7
   13e20:	strdeq	r4, [r1], -r0
   13e24:	movw	r0, #43795	; 0xab13
   13e28:	movt	r0, #1
   13e2c:	bl	14584 <print_debug_data@@Base+0xe5c>
   13e30:	sub	sp, fp, #28
   13e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e38:	sub	r1, fp, #88	; 0x58
   13e3c:	mov	r0, r7
   13e40:	bl	129ac <coda_cursor_read_int64@plt>
   13e44:	cmp	r0, #0
   13e48:	beq	13e50 <print_debug_data@@Base+0x728>
   13e4c:	bl	184f8 <handle_coda_error@@Base>
   13e50:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e54:	ldr	r1, [fp, #-84]	; 0xffffffac
   13e58:	add	r4, sp, #32
   13e5c:	mov	r2, r4
   13e60:	bl	12aa8 <coda_str64@plt>
   13e64:	b	13ea8 <print_debug_data@@Base+0x780>
   13e68:	movw	r0, #41699	; 0xa2e3
   13e6c:	movt	r0, #1
   13e70:	bl	144d0 <print_debug_data@@Base+0xda8>
   13e74:	sub	sp, fp, #28
   13e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e7c:	sub	r1, fp, #88	; 0x58
   13e80:	mov	r0, r7
   13e84:	bl	12898 <coda_cursor_read_uint64@plt>
   13e88:	cmp	r0, #0
   13e8c:	beq	13e94 <print_debug_data@@Base+0x76c>
   13e90:	bl	184f8 <handle_coda_error@@Base>
   13e94:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e98:	ldr	r1, [fp, #-84]	; 0xffffffac
   13e9c:	add	r4, sp, #32
   13ea0:	mov	r2, r4
   13ea4:	bl	126e8 <coda_str64u@plt>
   13ea8:	movw	r0, #43373	; 0xa96d
   13eac:	mov	r1, r4
   13eb0:	movt	r0, #1
   13eb4:	bl	144d0 <print_debug_data@@Base+0xda8>
   13eb8:	sub	sp, fp, #28
   13ebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ec0:	sub	r1, fp, #88	; 0x58
   13ec4:	mov	r0, r7
   13ec8:	bl	12a0c <coda_cursor_get_bit_size@plt>
   13ecc:	cmp	r0, #0
   13ed0:	beq	13ed8 <print_debug_data@@Base+0x7b0>
   13ed4:	bl	184f8 <handle_coda_error@@Base>
   13ed8:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13edc:	ldr	r5, [fp, #-84]	; 0xffffffac
   13ee0:	lsr	r0, r4, #3
   13ee4:	tst	r4, #7
   13ee8:	orr	r6, r0, r5, lsl #29
   13eec:	addne	r6, r6, #1
   13ef0:	mov	r0, r6
   13ef4:	bl	1282c <malloc@plt>
   13ef8:	mov	r8, r0
   13efc:	cmp	r0, #0
   13f00:	bne	13f34 <print_debug_data@@Base+0x80c>
   13f04:	movw	r1, #41209	; 0xa0f9
   13f08:	movw	r3, #41523	; 0xa233
   13f0c:	movw	r0, #447	; 0x1bf
   13f10:	mov	r2, r6
   13f14:	str	r0, [sp]
   13f18:	movt	r1, #1
   13f1c:	movt	r3, #1
   13f20:	mvn	r0, #0
   13f24:	bl	126ac <coda_set_error@plt>
   13f28:	bl	184f8 <handle_coda_error@@Base>
   13f2c:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13f30:	ldr	r5, [fp, #-84]	; 0xffffffac
   13f34:	mov	r0, r7
   13f38:	mov	r1, r8
   13f3c:	mov	r2, #0
   13f40:	mov	r3, #0
   13f44:	stm	sp, {r4, r5}
   13f48:	bl	12a9c <coda_cursor_read_bits@plt>
   13f4c:	cmp	r0, #0
   13f50:	beq	13f58 <print_debug_data@@Base+0x830>
   13f54:	bl	184f8 <handle_coda_error@@Base>
   13f58:	movw	r0, #42996	; 0xa7f4
   13f5c:	movt	r0, #1
   13f60:	bl	144d0 <print_debug_data@@Base+0xda8>
   13f64:	mov	r0, r8
   13f68:	mov	r1, r6
   13f6c:	bl	145cc <print_debug_data@@Base+0xea4>
   13f70:	movw	r0, #41614	; 0xa28e
   13f74:	movt	r0, #1
   13f78:	bl	14584 <print_debug_data@@Base+0xe5c>
   13f7c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13f80:	ldr	r1, [fp, #-84]	; 0xffffffac
   13f84:	add	r4, sp, #32
   13f88:	mov	r2, r4
   13f8c:	lsr	r0, r0, #3
   13f90:	orr	r0, r0, r1, lsl #29
   13f94:	asr	r1, r1, #3
   13f98:	bl	12aa8 <coda_str64@plt>
   13f9c:	movw	r0, #43185	; 0xa8b1
   13fa0:	mov	r1, r4
   13fa4:	movt	r0, #1
   13fa8:	bl	14584 <print_debug_data@@Base+0xe5c>
   13fac:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13fb0:	ands	r1, r0, #7
   13fb4:	beq	13fc4 <print_debug_data@@Base+0x89c>
   13fb8:	movw	r0, #41514	; 0xa22a
   13fbc:	movt	r0, #1
   13fc0:	bl	14584 <print_debug_data@@Base+0xe5c>
   13fc4:	movw	r0, #41611	; 0xa28b
   13fc8:	movt	r0, #1
   13fcc:	bl	14584 <print_debug_data@@Base+0xe5c>
   13fd0:	mov	r0, r8
   13fd4:	bl	126f4 <free@plt>
   13fd8:	sub	sp, fp, #28
   13fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fe0:	mov	r0, r7
   13fe4:	bl	127f0 <coda_cursor_goto_first_record_field@plt>
   13fe8:	cmp	r0, #0
   13fec:	beq	13ff4 <print_debug_data@@Base+0x8cc>
   13ff0:	bl	184f8 <handle_coda_error@@Base>
   13ff4:	ldr	r0, [fp, #-120]	; 0xffffff88
   13ff8:	mov	r1, #0
   13ffc:	str	r1, [fp, #-48]	; 0xffffffd0
   14000:	cmp	r0, #1
   14004:	blt	14170 <print_debug_data@@Base+0xa48>
   14008:	ldr	r0, [sp, #24]
   1400c:	movw	r6, #43245	; 0xa8ed
   14010:	movw	r7, #49576	; 0xc1a8
   14014:	movw	r5, #43795	; 0xab13
   14018:	movw	r9, #49600	; 0xc1c0
   1401c:	movw	r8, #49580	; 0xc1ac
   14020:	mvn	r4, #0
   14024:	movt	r6, #1
   14028:	movt	r7, #2
   1402c:	movt	r5, #1
   14030:	movt	r9, #2
   14034:	movt	r8, #2
   14038:	add	r0, r0, #1
   1403c:	str	r0, [sp, #20]
   14040:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14044:	sub	r2, fp, #52	; 0x34
   14048:	bl	12a78 <coda_type_get_record_field_name@plt>
   1404c:	cmp	r0, #0
   14050:	beq	14058 <print_debug_data@@Base+0x930>
   14054:	bl	184f8 <handle_coda_error@@Base>
   14058:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1405c:	mov	r0, r6
   14060:	bl	144d0 <print_debug_data@@Base+0xda8>
   14064:	ldr	r0, [r7]
   14068:	cmp	r0, #0
   1406c:	beq	140dc <print_debug_data@@Base+0x9b4>
   14070:	ldr	r0, [sp, #28]
   14074:	sub	r1, fp, #88	; 0x58
   14078:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   1407c:	cmp	r0, #0
   14080:	beq	14088 <print_debug_data@@Base+0x960>
   14084:	bl	184f8 <handle_coda_error@@Base>
   14088:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1408c:	ldr	r1, [fp, #-84]	; 0xffffffac
   14090:	subs	r2, r4, r0
   14094:	sbcs	r2, r4, r1
   14098:	bge	140dc <print_debug_data@@Base+0x9b4>
   1409c:	lsr	r0, r0, #3
   140a0:	add	sl, sp, #32
   140a4:	orr	r0, r0, r1, lsl #29
   140a8:	lsr	r1, r1, #3
   140ac:	mov	r2, sl
   140b0:	bl	12aa8 <coda_str64@plt>
   140b4:	movw	r0, #41510	; 0xa226
   140b8:	mov	r1, sl
   140bc:	movt	r0, #1
   140c0:	bl	14584 <print_debug_data@@Base+0xe5c>
   140c4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   140c8:	ands	r1, r0, #7
   140cc:	beq	140dc <print_debug_data@@Base+0x9b4>
   140d0:	movw	r0, #41514	; 0xa22a
   140d4:	movt	r0, #1
   140d8:	bl	14584 <print_debug_data@@Base+0xe5c>
   140dc:	mov	r0, r5
   140e0:	bl	14584 <print_debug_data@@Base+0xe5c>
   140e4:	ldr	r0, [r9]
   140e8:	add	r0, r0, #1
   140ec:	str	r0, [r9]
   140f0:	ldr	r0, [r8]
   140f4:	cmp	r0, #0
   140f8:	blt	14118 <print_debug_data@@Base+0x9f0>
   140fc:	ldr	r1, [sp, #24]
   14100:	cmp	r0, r1
   14104:	bgt	14118 <print_debug_data@@Base+0x9f0>
   14108:	movw	r0, #41518	; 0xa22e
   1410c:	movt	r0, #1
   14110:	bl	144d0 <print_debug_data@@Base+0xda8>
   14114:	b	14124 <print_debug_data@@Base+0x9fc>
   14118:	ldr	r0, [sp, #28]
   1411c:	ldr	r1, [sp, #20]
   14120:	bl	13878 <print_debug_data@@Base+0x150>
   14124:	ldr	r0, [r9]
   14128:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1412c:	sub	r0, r0, #1
   14130:	str	r0, [r9]
   14134:	ldr	r0, [fp, #-120]	; 0xffffff88
   14138:	sub	r0, r0, #1
   1413c:	cmp	r1, r0
   14140:	bge	14158 <print_debug_data@@Base+0xa30>
   14144:	ldr	r0, [sp, #28]
   14148:	bl	129e8 <coda_cursor_goto_next_record_field@plt>
   1414c:	cmp	r0, #0
   14150:	beq	14158 <print_debug_data@@Base+0xa30>
   14154:	bl	184f8 <handle_coda_error@@Base>
   14158:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1415c:	add	r1, r0, #1
   14160:	ldr	r0, [fp, #-120]	; 0xffffff88
   14164:	str	r1, [fp, #-48]	; 0xffffffd0
   14168:	cmp	r1, r0
   1416c:	blt	14040 <print_debug_data@@Base+0x918>
   14170:	ldr	r0, [sp, #28]
   14174:	bl	1285c <coda_cursor_goto_parent@plt>
   14178:	sub	sp, fp, #28
   1417c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14180:	mov	r6, #1
   14184:	mov	r0, r7
   14188:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   1418c:	cmp	r0, #0
   14190:	beq	14198 <print_debug_data@@Base+0xa70>
   14194:	bl	184f8 <handle_coda_error@@Base>
   14198:	sub	r0, r6, #1
   1419c:	movw	r5, #41515	; 0xa22b
   141a0:	movw	r7, #41928	; 0xa3c8
   141a4:	str	r6, [sp, #20]
   141a8:	mov	r8, #0
   141ac:	sub	r6, fp, #88	; 0x58
   141b0:	add	r4, sp, #32
   141b4:	mov	sl, #0
   141b8:	str	r0, [sp, #16]
   141bc:	ldr	r0, [sp, #24]
   141c0:	movt	r5, #1
   141c4:	movt	r7, #1
   141c8:	add	r0, r0, #1
   141cc:	str	r0, [sp, #12]
   141d0:	movw	r0, #41940	; 0xa3d4
   141d4:	movt	r0, #1
   141d8:	bl	144d0 <print_debug_data@@Base+0xda8>
   141dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141e0:	cmp	r0, #1
   141e4:	blt	14220 <print_debug_data@@Base+0xaf8>
   141e8:	mov	r9, #0
   141ec:	ldr	r1, [r6, r9, lsl #2]
   141f0:	mov	r0, r5
   141f4:	bl	14584 <print_debug_data@@Base+0xe5c>
   141f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141fc:	sub	r1, r0, #1
   14200:	cmp	r9, r1
   14204:	bge	14214 <print_debug_data@@Base+0xaec>
   14208:	mov	r0, r7
   1420c:	bl	14584 <print_debug_data@@Base+0xe5c>
   14210:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14214:	add	r9, r9, #1
   14218:	cmp	r9, r0
   1421c:	blt	141ec <print_debug_data@@Base+0xac4>
   14220:	movw	r0, #43130	; 0xa87a
   14224:	movt	r0, #1
   14228:	bl	14584 <print_debug_data@@Base+0xe5c>
   1422c:	movw	r0, #49576	; 0xc1a8
   14230:	ldr	r9, [sp, #28]
   14234:	movt	r0, #2
   14238:	ldr	r0, [r0]
   1423c:	cmp	r0, #0
   14240:	beq	142b0 <print_debug_data@@Base+0xb88>
   14244:	mov	r0, r9
   14248:	sub	r1, fp, #96	; 0x60
   1424c:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   14250:	cmp	r0, #0
   14254:	beq	1425c <print_debug_data@@Base+0xb34>
   14258:	bl	184f8 <handle_coda_error@@Base>
   1425c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14260:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14264:	mvn	r3, #0
   14268:	subs	r2, r3, r0
   1426c:	sbcs	r2, r3, r1
   14270:	bge	142b0 <print_debug_data@@Base+0xb88>
   14274:	lsr	r0, r0, #3
   14278:	sub	r2, fp, #120	; 0x78
   1427c:	orr	r0, r0, r1, lsl #29
   14280:	lsr	r1, r1, #3
   14284:	bl	12aa8 <coda_str64@plt>
   14288:	movw	r0, #41510	; 0xa226
   1428c:	sub	r1, fp, #120	; 0x78
   14290:	movt	r0, #1
   14294:	bl	14584 <print_debug_data@@Base+0xe5c>
   14298:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1429c:	ands	r1, r0, #7
   142a0:	beq	142b0 <print_debug_data@@Base+0xb88>
   142a4:	movw	r0, #41514	; 0xa22a
   142a8:	movt	r0, #1
   142ac:	bl	14584 <print_debug_data@@Base+0xe5c>
   142b0:	movw	r0, #43795	; 0xab13
   142b4:	movt	r0, #1
   142b8:	bl	14584 <print_debug_data@@Base+0xe5c>
   142bc:	movw	r0, #49600	; 0xc1c0
   142c0:	movt	r0, #2
   142c4:	mov	r1, r0
   142c8:	ldr	r0, [r0]
   142cc:	add	r0, r0, #1
   142d0:	str	r0, [r1]
   142d4:	movw	r0, #49580	; 0xc1ac
   142d8:	movt	r0, #2
   142dc:	ldr	r0, [r0]
   142e0:	cmp	r0, #0
   142e4:	blt	14304 <print_debug_data@@Base+0xbdc>
   142e8:	ldr	r1, [sp, #24]
   142ec:	cmp	r0, r1
   142f0:	bgt	14304 <print_debug_data@@Base+0xbdc>
   142f4:	movw	r0, #41518	; 0xa22e
   142f8:	movt	r0, #1
   142fc:	bl	144d0 <print_debug_data@@Base+0xda8>
   14300:	b	14310 <print_debug_data@@Base+0xbe8>
   14304:	ldr	r1, [sp, #12]
   14308:	mov	r0, r9
   1430c:	bl	13878 <print_debug_data@@Base+0x150>
   14310:	movw	r0, #49600	; 0xc1c0
   14314:	movt	r0, #2
   14318:	mov	r1, r0
   1431c:	ldr	r0, [r0]
   14320:	sub	r0, r0, #1
   14324:	str	r0, [r1]
   14328:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1432c:	cmp	r0, #1
   14330:	blt	14368 <print_debug_data@@Base+0xc40>
   14334:	sub	r0, r0, #1
   14338:	ldr	r1, [r6, r0, lsl #2]
   1433c:	ldr	r2, [r4, r0, lsl #2]
   14340:	add	r1, r1, #1
   14344:	cmp	r1, r2
   14348:	str	r1, [r6, r0, lsl #2]
   1434c:	bne	14368 <print_debug_data@@Base+0xc40>
   14350:	str	r8, [r6, r0, lsl #2]
   14354:	sub	r1, r0, #1
   14358:	add	r0, r0, #1
   1435c:	cmp	r0, #1
   14360:	mov	r0, r1
   14364:	bgt	14338 <print_debug_data@@Base+0xc10>
   14368:	ldr	r0, [sp, #16]
   1436c:	cmp	sl, r0
   14370:	bge	14388 <print_debug_data@@Base+0xc60>
   14374:	mov	r0, r9
   14378:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   1437c:	cmp	r0, #0
   14380:	beq	14388 <print_debug_data@@Base+0xc60>
   14384:	bl	184f8 <handle_coda_error@@Base>
   14388:	ldr	r0, [sp, #20]
   1438c:	add	sl, sl, #1
   14390:	cmp	sl, r0
   14394:	bne	141d0 <print_debug_data@@Base+0xaa8>
   14398:	mov	r0, r9
   1439c:	bl	1285c <coda_cursor_goto_parent@plt>
   143a0:	sub	sp, fp, #28
   143a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143a8:	sub	r1, fp, #88	; 0x58
   143ac:	mov	r0, r7
   143b0:	bl	128a4 <coda_cursor_read_double@plt>
   143b4:	cmp	r0, #0
   143b8:	beq	143c0 <print_debug_data@@Base+0xc98>
   143bc:	bl	184f8 <handle_coda_error@@Base>
   143c0:	vldr	d0, [fp, #-88]	; 0xffffffa8
   143c4:	bl	128b0 <coda_isNaN@plt>
   143c8:	cmp	r0, #0
   143cc:	bne	143e0 <print_debug_data@@Base+0xcb8>
   143d0:	vldr	d0, [fp, #-88]	; 0xffffffa8
   143d4:	bl	12754 <coda_isInf@plt>
   143d8:	cmp	r0, #0
   143dc:	beq	14488 <print_debug_data@@Base+0xd60>
   143e0:	vldr	d16, [fp, #-88]	; 0xffffffa8
   143e4:	movw	r0, #41698	; 0xa2e2
   143e8:	movt	r0, #1
   143ec:	b	1444c <print_debug_data@@Base+0xd24>
   143f0:	add	r1, sp, #32
   143f4:	sub	r2, fp, #88	; 0x58
   143f8:	mov	r0, r7
   143fc:	bl	1294c <coda_cursor_read_complex_double_split@plt>
   14400:	cmp	r0, #0
   14404:	beq	1440c <print_debug_data@@Base+0xce4>
   14408:	bl	184f8 <handle_coda_error@@Base>
   1440c:	vldr	d16, [sp, #32]
   14410:	vldr	d17, [fp, #-88]	; 0xffffffa8
   14414:	movw	r0, #41733	; 0xa305
   14418:	movt	r0, #1
   1441c:	vmov	r2, r3, d16
   14420:	vstr	d17, [sp]
   14424:	b	14450 <print_debug_data@@Base+0xd28>
   14428:	add	r1, sp, #32
   1442c:	mov	r0, r7
   14430:	bl	128a4 <coda_cursor_read_double@plt>
   14434:	cmp	r0, #0
   14438:	beq	14440 <print_debug_data@@Base+0xd18>
   1443c:	bl	184f8 <handle_coda_error@@Base>
   14440:	vldr	d16, [sp, #32]
   14444:	movw	r0, #41699	; 0xa2e3
   14448:	movt	r0, #1
   1444c:	vmov	r2, r3, d16
   14450:	bl	14584 <print_debug_data@@Base+0xe5c>
   14454:	sub	sp, fp, #28
   14458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1445c:	ldr	r0, [sp, #24]
   14460:	add	r1, r0, #1
   14464:	mov	r0, r7
   14468:	bl	13878 <print_debug_data@@Base+0x150>
   1446c:	ldr	r0, [r4]
   14470:	sub	r0, r0, #1
   14474:	str	r0, [r4]
   14478:	mov	r0, r7
   1447c:	bl	1285c <coda_cursor_goto_parent@plt>
   14480:	sub	sp, fp, #28
   14484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14488:	vldr	d0, [fp, #-88]	; 0xffffffa8
   1448c:	movw	r0, #41417	; 0xa1c9
   14490:	add	r1, sp, #32
   14494:	movt	r0, #1
   14498:	bl	126d0 <coda_time_double_to_string@plt>
   1449c:	cmp	r0, #0
   144a0:	beq	144b8 <print_debug_data@@Base+0xd90>
   144a4:	movw	r0, #41706	; 0xa2ea
   144a8:	movt	r0, #1
   144ac:	bl	14584 <print_debug_data@@Base+0xe5c>
   144b0:	sub	sp, fp, #28
   144b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144b8:	movw	r0, #43372	; 0xa96c
   144bc:	add	r1, sp, #32
   144c0:	movt	r0, #1
   144c4:	bl	14584 <print_debug_data@@Base+0xe5c>
   144c8:	sub	sp, fp, #28
   144cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144d0:	sub	sp, sp, #12
   144d4:	push	{r4, r5, r6, r7, fp, lr}
   144d8:	add	fp, sp, #16
   144dc:	sub	sp, sp, #4
   144e0:	mov	r4, r0
   144e4:	add	r0, fp, #8
   144e8:	stm	r0, {r1, r2, r3}
   144ec:	movw	r0, #49600	; 0xc1c0
   144f0:	movt	r0, #2
   144f4:	ldr	r0, [r0]
   144f8:	cmp	r0, #0
   144fc:	blt	14564 <print_debug_data@@Base+0xe3c>
   14500:	beq	14538 <print_debug_data@@Base+0xe10>
   14504:	movw	r7, #53392	; 0xd090
   14508:	movw	r5, #41774	; 0xa32e
   1450c:	add	r6, r0, #1
   14510:	movt	r7, #2
   14514:	movt	r5, #1
   14518:	ldr	r3, [r7]
   1451c:	mov	r0, r5
   14520:	mov	r1, #2
   14524:	mov	r2, #1
   14528:	bl	127d8 <fwrite@plt>
   1452c:	sub	r6, r6, #1
   14530:	cmp	r6, #1
   14534:	bgt	14518 <print_debug_data@@Base+0xdf0>
   14538:	movw	r0, #53392	; 0xd090
   1453c:	add	r2, fp, #8
   14540:	mov	r1, r4
   14544:	movt	r0, #2
   14548:	str	r2, [sp]
   1454c:	ldr	r0, [r0]
   14550:	bl	129b8 <vfprintf@plt>
   14554:	sub	sp, fp, #16
   14558:	pop	{r4, r5, r6, r7, fp, lr}
   1455c:	add	sp, sp, #12
   14560:	bx	lr
   14564:	movw	r0, #41744	; 0xa310
   14568:	movw	r1, #41523	; 0xa233
   1456c:	movw	r3, #41756	; 0xa31c
   14570:	mov	r2, #44	; 0x2c
   14574:	movt	r0, #1
   14578:	movt	r1, #1
   1457c:	movt	r3, #1
   14580:	bl	12ab4 <__assert_fail@plt>
   14584:	sub	sp, sp, #12
   14588:	push	{fp, lr}
   1458c:	mov	fp, sp
   14590:	sub	sp, sp, #4
   14594:	mov	ip, r0
   14598:	add	r0, fp, #8
   1459c:	stm	r0, {r1, r2, r3}
   145a0:	movw	r0, #53392	; 0xd090
   145a4:	add	r2, fp, #8
   145a8:	mov	r1, ip
   145ac:	movt	r0, #2
   145b0:	str	r2, [sp]
   145b4:	ldr	r0, [r0]
   145b8:	bl	129b8 <vfprintf@plt>
   145bc:	mov	sp, fp
   145c0:	pop	{fp, lr}
   145c4:	add	sp, sp, #12
   145c8:	bx	lr
   145cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145d0:	add	fp, sp, #28
   145d4:	sub	sp, sp, #4
   145d8:	cmp	r1, #1
   145dc:	blt	1475c <print_debug_data@@Base+0x1034>
   145e0:	movw	r8, #41343	; 0xa17f
   145e4:	movw	r9, #41346	; 0xa182
   145e8:	movw	sl, #41349	; 0xa185
   145ec:	movw	r7, #41352	; 0xa188
   145f0:	movw	r6, #41355	; 0xa18b
   145f4:	mov	r4, r1
   145f8:	mov	r5, r0
   145fc:	movt	r8, #1
   14600:	movt	r9, #1
   14604:	movt	sl, #1
   14608:	movt	r7, #1
   1460c:	movt	r6, #1
   14610:	ldrb	r1, [r5]
   14614:	sub	r0, r1, #7
   14618:	cmp	r0, #6
   1461c:	bhi	14660 <print_debug_data@@Base+0xf38>
   14620:	add	r1, pc, #0
   14624:	ldr	pc, [r1, r0, lsl #2]
   14628:	andeq	r4, r1, r4, asr #12
   1462c:	andeq	r4, r1, r4, lsl #13
   14630:	andeq	r4, r1, r0, lsr #13
   14634:			; <UNDEFINED> instruction: 0x000146b8
   14638:	ldrdeq	r4, [r1], -r0
   1463c:	andeq	r4, r1, r8, ror #13
   14640:	andeq	r4, r1, r0, lsl #14
   14644:	movw	r0, #41337	; 0xa179
   14648:	movt	r0, #1
   1464c:	bl	14584 <print_debug_data@@Base+0xe5c>
   14650:	subs	r4, r4, #1
   14654:	add	r5, r5, #1
   14658:	bne	14610 <print_debug_data@@Base+0xee8>
   1465c:	b	1475c <print_debug_data@@Base+0x1034>
   14660:	cmp	r1, #92	; 0x5c
   14664:	bne	14718 <print_debug_data@@Base+0xff0>
   14668:	movw	r0, #41358	; 0xa18e
   1466c:	movt	r0, #1
   14670:	bl	14584 <print_debug_data@@Base+0xe5c>
   14674:	subs	r4, r4, #1
   14678:	add	r5, r5, #1
   1467c:	bne	14610 <print_debug_data@@Base+0xee8>
   14680:	b	1475c <print_debug_data@@Base+0x1034>
   14684:	movw	r0, #41340	; 0xa17c
   14688:	movt	r0, #1
   1468c:	bl	14584 <print_debug_data@@Base+0xe5c>
   14690:	subs	r4, r4, #1
   14694:	add	r5, r5, #1
   14698:	bne	14610 <print_debug_data@@Base+0xee8>
   1469c:	b	1475c <print_debug_data@@Base+0x1034>
   146a0:	mov	r0, r8
   146a4:	bl	14584 <print_debug_data@@Base+0xe5c>
   146a8:	subs	r4, r4, #1
   146ac:	add	r5, r5, #1
   146b0:	bne	14610 <print_debug_data@@Base+0xee8>
   146b4:	b	1475c <print_debug_data@@Base+0x1034>
   146b8:	mov	r0, r9
   146bc:	bl	14584 <print_debug_data@@Base+0xe5c>
   146c0:	subs	r4, r4, #1
   146c4:	add	r5, r5, #1
   146c8:	bne	14610 <print_debug_data@@Base+0xee8>
   146cc:	b	1475c <print_debug_data@@Base+0x1034>
   146d0:	mov	r0, sl
   146d4:	bl	14584 <print_debug_data@@Base+0xe5c>
   146d8:	subs	r4, r4, #1
   146dc:	add	r5, r5, #1
   146e0:	bne	14610 <print_debug_data@@Base+0xee8>
   146e4:	b	1475c <print_debug_data@@Base+0x1034>
   146e8:	mov	r0, r7
   146ec:	bl	14584 <print_debug_data@@Base+0xe5c>
   146f0:	subs	r4, r4, #1
   146f4:	add	r5, r5, #1
   146f8:	bne	14610 <print_debug_data@@Base+0xee8>
   146fc:	b	1475c <print_debug_data@@Base+0x1034>
   14700:	mov	r0, r6
   14704:	bl	14584 <print_debug_data@@Base+0xe5c>
   14708:	subs	r4, r4, #1
   1470c:	add	r5, r5, #1
   14710:	bne	14610 <print_debug_data@@Base+0xee8>
   14714:	b	1475c <print_debug_data@@Base+0x1034>
   14718:	sub	r0, r1, #32
   1471c:	uxtb	r0, r0
   14720:	cmp	r0, #94	; 0x5e
   14724:	bhi	14744 <print_debug_data@@Base+0x101c>
   14728:	movw	r0, #41777	; 0xa331
   1472c:	movt	r0, #1
   14730:	bl	14584 <print_debug_data@@Base+0xe5c>
   14734:	subs	r4, r4, #1
   14738:	add	r5, r5, #1
   1473c:	bne	14610 <print_debug_data@@Base+0xee8>
   14740:	b	1475c <print_debug_data@@Base+0x1034>
   14744:	movw	r0, #41361	; 0xa191
   14748:	movt	r0, #1
   1474c:	bl	14584 <print_debug_data@@Base+0xe5c>
   14750:	subs	r4, r4, #1
   14754:	add	r5, r5, #1
   14758:	bne	14610 <print_debug_data@@Base+0xee8>
   1475c:	sub	sp, fp, #28
   14760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014764 <dim_info_init@@Base>:
   14764:	movw	r0, #53424	; 0xd0b0
   14768:	mov	r1, #0
   1476c:	movt	r0, #2
   14770:	str	r1, [r0, #68]	; 0x44
   14774:	str	r1, [r0]
   14778:	mvn	r1, #0
   1477c:	str	r1, [r0, #104]	; 0x68
   14780:	bx	lr

00014784 <dim_info_done@@Base>:
   14784:	bx	lr

00014788 <print_all_distinct_dims@@Base>:
   14788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1478c:	add	fp, sp, #28
   14790:	sub	sp, sp, #4
   14794:	movw	r9, #53424	; 0xd0b0
   14798:	mov	sl, r0
   1479c:	movt	r9, #2
   147a0:	ldr	r0, [r9]
   147a4:	cmp	r0, sl
   147a8:	ble	14934 <print_all_distinct_dims@@Base+0x1ac>
   147ac:	add	r8, r9, sl, lsl #2
   147b0:	ldr	r0, [r8, #72]	; 0x48
   147b4:	cmp	r0, #0
   147b8:	subeq	sp, fp, #28
   147bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147c0:	mov	r7, r8
   147c4:	mov	r5, #4
   147c8:	ldr	r0, [r7, #4]!
   147cc:	add	r6, r5, r0, lsl #2
   147d0:	mov	r0, r6
   147d4:	bl	1282c <malloc@plt>
   147d8:	mov	r4, r0
   147dc:	cmp	r0, #0
   147e0:	bne	14814 <print_all_distinct_dims@@Base+0x8c>
   147e4:	movw	r1, #41209	; 0xa0f9
   147e8:	movw	r3, #41807	; 0xa34f
   147ec:	mov	r0, #61	; 0x3d
   147f0:	mov	r2, r6
   147f4:	str	r0, [sp]
   147f8:	movt	r1, #1
   147fc:	movt	r3, #1
   14800:	mvn	r0, #0
   14804:	bl	126ac <coda_set_error@plt>
   14808:	bl	184f8 <handle_coda_error@@Base>
   1480c:	ldr	r0, [r7]
   14810:	add	r6, r5, r0, lsl #2
   14814:	mov	r0, r4
   14818:	mov	r1, #0
   1481c:	mov	r2, r6
   14820:	mov	r5, #0
   14824:	bl	12910 <memset@plt>
   14828:	ldr	r0, [r8, #140]	; 0x8c
   1482c:	add	r0, r9, r0, lsl #3
   14830:	ldrd	r0, [r0, #232]	; 0xe8
   14834:	subs	r2, r0, #1
   14838:	sbcs	r2, r1, #0
   1483c:	blt	14868 <print_all_distinct_dims@@Base+0xe0>
   14840:	ldr	r2, [r8, #108]	; 0x6c
   14844:	ldr	r3, [r2, r5, lsl #2]
   14848:	add	r5, r5, #1
   1484c:	cmp	r3, #0
   14850:	ldrge	r6, [r4, r3, lsl #2]
   14854:	addge	r6, r6, #1
   14858:	strge	r6, [r4, r3, lsl #2]
   1485c:	subs	r3, r5, r0
   14860:	rscs	r3, r1, #0
   14864:	blt	14844 <print_all_distinct_dims@@Base+0xbc>
   14868:	movw	r0, #41914	; 0xa3ba
   1486c:	add	r1, sl, #1
   14870:	movt	r0, #1
   14874:	bl	12688 <printf@plt>
   14878:	ldr	r5, [r8, #36]!	; 0x24
   1487c:	ldr	r1, [r7]
   14880:	cmp	r5, r1
   14884:	bge	148b8 <print_all_distinct_dims@@Base+0x130>
   14888:	movw	r6, #41926	; 0xa3c6
   1488c:	movt	r6, #1
   14890:	ldr	r0, [r4, r5, lsl #2]
   14894:	cmp	r0, #1
   14898:	blt	148ac <print_all_distinct_dims@@Base+0x124>
   1489c:	mov	r0, r6
   148a0:	mov	r1, r5
   148a4:	bl	12688 <printf@plt>
   148a8:	ldr	r1, [r7]
   148ac:	add	r5, r5, #1
   148b0:	cmp	r5, r1
   148b4:	blt	14890 <print_all_distinct_dims@@Base+0x108>
   148b8:	movw	r0, #41930	; 0xa3ca
   148bc:	movt	r0, #1
   148c0:	bl	12688 <printf@plt>
   148c4:	movw	r0, #41934	; 0xa3ce
   148c8:	movt	r0, #1
   148cc:	bl	12688 <printf@plt>
   148d0:	ldr	r0, [r7]
   148d4:	ldr	r6, [r8]
   148d8:	cmp	r6, r0
   148dc:	bge	1490c <print_all_distinct_dims@@Base+0x184>
   148e0:	movw	r5, #41926	; 0xa3c6
   148e4:	movt	r5, #1
   148e8:	ldr	r1, [r4, r6, lsl #2]
   148ec:	cmp	r1, #1
   148f0:	blt	14900 <print_all_distinct_dims@@Base+0x178>
   148f4:	mov	r0, r5
   148f8:	bl	12688 <printf@plt>
   148fc:	ldr	r0, [r7]
   14900:	add	r6, r6, #1
   14904:	cmp	r6, r0
   14908:	blt	148e8 <print_all_distinct_dims@@Base+0x160>
   1490c:	ldr	r1, [r4, r0, lsl #2]
   14910:	movw	r0, #41930	; 0xa3ca
   14914:	movt	r0, #1
   14918:	bl	12688 <printf@plt>
   1491c:	mov	r0, #10
   14920:	bl	1291c <putchar@plt>
   14924:	mov	r0, r4
   14928:	sub	sp, fp, #28
   1492c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14930:	b	126f4 <free@plt>
   14934:	movw	r0, #41780	; 0xa334
   14938:	movw	r1, #41807	; 0xa34f
   1493c:	movw	r3, #41880	; 0xa398
   14940:	mov	r2, #50	; 0x32
   14944:	movt	r0, #1
   14948:	movt	r1, #1
   1494c:	movt	r3, #1
   14950:	bl	12ab4 <__assert_fail@plt>

00014954 <dim_enter_array@@Base>:
   14954:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14958:	add	fp, sp, #28
   1495c:	sub	sp, sp, #76	; 0x4c
   14960:	movw	r4, #49640	; 0xc1e8
   14964:	sub	r1, fp, #32
   14968:	movt	r4, #2
   1496c:	ldr	r0, [r4, #136]	; 0x88
   14970:	ldr	r5, [r4, #3360]	; 0xd20
   14974:	add	r0, r4, r0, lsl #2
   14978:	ldr	r0, [r0, #8]
   1497c:	bl	12ac0 <coda_type_get_class@plt>
   14980:	cmp	r0, #0
   14984:	beq	1498c <dim_enter_array@@Base+0x38>
   14988:	bl	184f8 <handle_coda_error@@Base>
   1498c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14990:	sub	r0, r0, #1
   14994:	cmp	r0, #5
   14998:	bhi	1518c <dim_enter_array@@Base+0x838>
   1499c:	add	r1, r5, r5, lsl #2
   149a0:	add	r5, r4, r1, lsl #4
   149a4:	add	r1, pc, #0
   149a8:	ldr	pc, [r1, r0, lsl #2]
   149ac:	andeq	r4, r1, r4, asr #19
   149b0:	andeq	r5, r1, ip, lsl #3
   149b4:	andeq	r5, r1, ip, lsl #3
   149b8:	andeq	r4, r1, r8, asr #20
   149bc:	andeq	r4, r1, r8, ror sl
   149c0:	andeq	r4, r1, ip, lsl #20
   149c4:	ldr	r0, [r4, #136]	; 0x88
   149c8:	add	r1, sp, #36	; 0x24
   149cc:	add	r2, sp, #40	; 0x28
   149d0:	add	r0, r4, r0, lsl #2
   149d4:	ldr	r0, [r0, #8]
   149d8:	bl	12a00 <coda_type_get_array_dim@plt>
   149dc:	cmp	r0, #0
   149e0:	beq	149e8 <dim_enter_array@@Base+0x94>
   149e4:	bl	184f8 <handle_coda_error@@Base>
   149e8:	ldr	sl, [sp, #36]	; 0x24
   149ec:	cmp	sl, #1
   149f0:	str	sl, [r5, #804]	; 0x324
   149f4:	blt	14acc <dim_enter_array@@Base+0x178>
   149f8:	add	r0, r5, #808	; 0x328
   149fc:	lsl	r2, sl, #2
   14a00:	add	r1, sp, #40	; 0x28
   14a04:	bl	12748 <memcpy@plt>
   14a08:	b	14acc <dim_enter_array@@Base+0x178>
   14a0c:	ldr	r0, [r4, #136]	; 0x88
   14a10:	add	r1, sp, #40	; 0x28
   14a14:	add	r0, r4, r0, lsl #2
   14a18:	ldr	r0, [r0, #8]
   14a1c:	bl	12934 <coda_type_get_special_type@plt>
   14a20:	cmp	r0, #0
   14a24:	beq	14a2c <dim_enter_array@@Base+0xd8>
   14a28:	bl	184f8 <handle_coda_error@@Base>
   14a2c:	ldr	r0, [sp, #40]	; 0x28
   14a30:	cmp	r0, #3
   14a34:	bne	151cc <dim_enter_array@@Base+0x878>
   14a38:	mov	sl, #1
   14a3c:	mov	r0, #2
   14a40:	str	sl, [r5, #804]	; 0x324
   14a44:	b	14ac8 <dim_enter_array@@Base+0x174>
   14a48:	ldr	r0, [r4, #136]	; 0x88
   14a4c:	add	r1, sp, #40	; 0x28
   14a50:	add	r0, r4, r0, lsl #2
   14a54:	ldr	r0, [r0, #8]
   14a58:	bl	12970 <coda_type_get_string_length@plt>
   14a5c:	cmp	r0, #0
   14a60:	beq	14a68 <dim_enter_array@@Base+0x114>
   14a64:	bl	184f8 <handle_coda_error@@Base>
   14a68:	ldr	r0, [sp, #40]	; 0x28
   14a6c:	mov	sl, #1
   14a70:	str	sl, [r5, #804]	; 0x324
   14a74:	b	14ac8 <dim_enter_array@@Base+0x174>
   14a78:	ldr	r0, [r4, #136]	; 0x88
   14a7c:	add	r1, sp, #40	; 0x28
   14a80:	add	r0, r4, r0, lsl #2
   14a84:	ldr	r0, [r0, #8]
   14a88:	bl	12760 <coda_type_get_bit_size@plt>
   14a8c:	cmp	r0, #0
   14a90:	beq	14a98 <dim_enter_array@@Base+0x144>
   14a94:	bl	184f8 <handle_coda_error@@Base>
   14a98:	ldr	r0, [sp, #44]	; 0x2c
   14a9c:	mov	sl, #1
   14aa0:	str	sl, [r5, #804]	; 0x324
   14aa4:	cmp	r0, #0
   14aa8:	blt	14ac4 <dim_enter_array@@Base+0x170>
   14aac:	ldr	r1, [sp, #40]	; 0x28
   14ab0:	lsr	r2, r1, #3
   14ab4:	tst	r1, #7
   14ab8:	orr	r0, r2, r0, lsl #29
   14abc:	addne	r0, r0, #1
   14ac0:	b	14ac8 <dim_enter_array@@Base+0x174>
   14ac4:	mvn	r0, #0
   14ac8:	str	r0, [r5, #808]	; 0x328
   14acc:	movw	r1, #49636	; 0xc1e4
   14ad0:	add	r0, r5, #800	; 0x320
   14ad4:	movt	r1, #2
   14ad8:	ldr	r1, [r1]
   14adc:	cmp	r1, #0
   14ae0:	beq	14b54 <dim_enter_array@@Base+0x200>
   14ae4:	movw	r8, #53424	; 0xd0b0
   14ae8:	str	r5, [sp, #16]
   14aec:	movt	r8, #2
   14af0:	ldr	ip, [r8]
   14af4:	add	r3, sl, ip
   14af8:	str	ip, [r0]
   14afc:	cmp	r3, #9
   14b00:	bge	151ac <dim_enter_array@@Base+0x858>
   14b04:	cmp	ip, #0
   14b08:	str	r3, [r8]
   14b0c:	str	ip, [sp, #24]
   14b10:	ble	14b70 <dim_enter_array@@Base+0x21c>
   14b14:	add	r0, r8, ip, lsl #3
   14b18:	ldr	r1, [r0, #232]	; 0xe8
   14b1c:	ldr	r2, [r0, #236]	; 0xec
   14b20:	str	r2, [sp, #28]
   14b24:	ldr	r2, [r0, #296]	; 0x128
   14b28:	str	r1, [sp, #32]
   14b2c:	ldr	r1, [r0, #300]	; 0x12c
   14b30:	rsbs	r0, r2, #0
   14b34:	str	r2, [sp, #8]
   14b38:	str	r1, [sp, #12]
   14b3c:	mov	r0, r1
   14b40:	rscs	r0, r1, #0
   14b44:	bge	14de4 <dim_enter_array@@Base+0x490>
   14b48:	cmp	sl, #1
   14b4c:	bge	14b98 <dim_enter_array@@Base+0x244>
   14b50:	b	14e6c <dim_enter_array@@Base+0x518>
   14b54:	mvn	r1, #0
   14b58:	str	r1, [r0]
   14b5c:	mov	r0, #0
   14b60:	str	r0, [r5, #840]	; 0x348
   14b64:	str	r0, [r5, #844]	; 0x34c
   14b68:	sub	sp, fp, #28
   14b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b70:	mov	r0, #0
   14b74:	cmp	sl, #0
   14b78:	str	r0, [sp, #12]
   14b7c:	mov	r0, #1
   14b80:	str	r0, [sp, #8]
   14b84:	mov	r0, #1
   14b88:	str	r0, [sp, #32]
   14b8c:	mov	r0, #0
   14b90:	str	r0, [sp, #28]
   14b94:	ble	14e50 <dim_enter_array@@Base+0x4fc>
   14b98:	ldr	r0, [sp, #16]
   14b9c:	add	r7, r8, ip, lsl #2
   14ba0:	mov	r2, #0
   14ba4:	add	r1, r0, #804	; 0x324
   14ba8:	add	r9, r0, #808	; 0x328
   14bac:	mov	r0, #0
   14bb0:	str	r1, [sp, #20]
   14bb4:	mov	r1, #0
   14bb8:	ldr	r3, [r9, r2, lsl #2]
   14bbc:	add	r6, r7, r2, lsl #2
   14bc0:	add	r2, r2, #1
   14bc4:	str	r0, [r6, #72]	; 0x48
   14bc8:	cmn	r3, #1
   14bcc:	str	r3, [r6, #4]
   14bd0:	movweq	r1, #1
   14bd4:	cmp	sl, r2
   14bd8:	bne	14bb8 <dim_enter_array@@Base+0x264>
   14bdc:	cmp	r1, #0
   14be0:	beq	14e6c <dim_enter_array@@Base+0x518>
   14be4:	ldr	r0, [sp, #32]
   14be8:	mov	r5, sl
   14bec:	mov	sl, #0
   14bf0:	lsl	r4, r0, #2
   14bf4:	rsbs	r0, r0, #0
   14bf8:	ldr	r0, [sp, #28]
   14bfc:	rscs	r0, r0, #0
   14c00:	bge	14c98 <dim_enter_array@@Base+0x344>
   14c04:	ldr	r0, [r9, sl, lsl #2]
   14c08:	add	r6, r7, sl, lsl #2
   14c0c:	cmn	r0, #1
   14c10:	beq	14c28 <dim_enter_array@@Base+0x2d4>
   14c14:	mov	r0, #0
   14c18:	str	r0, [r6, #140]	; 0x8c
   14c1c:	str	r0, [r6, #108]	; 0x6c
   14c20:	mov	r0, r5
   14c24:	b	14c84 <dim_enter_array@@Base+0x330>
   14c28:	mov	r0, r4
   14c2c:	str	ip, [r6, #140]	; 0x8c
   14c30:	bl	1282c <malloc@plt>
   14c34:	cmp	r0, #0
   14c38:	str	r0, [r6, #108]	; 0x6c
   14c3c:	bne	14c6c <dim_enter_array@@Base+0x318>
   14c40:	movw	r1, #41209	; 0xa0f9
   14c44:	movw	r3, #41807	; 0xa34f
   14c48:	mov	r0, #456	; 0x1c8
   14c4c:	mov	r2, r4
   14c50:	str	r0, [sp]
   14c54:	mvn	r0, #0
   14c58:	movt	r1, #1
   14c5c:	movt	r3, #1
   14c60:	bl	126ac <coda_set_error@plt>
   14c64:	bl	184f8 <handle_coda_error@@Base>
   14c68:	ldr	r0, [r6, #108]	; 0x6c
   14c6c:	mov	r1, #255	; 0xff
   14c70:	mov	r2, r4
   14c74:	bl	12910 <memset@plt>
   14c78:	ldr	r0, [sp, #20]
   14c7c:	ldr	ip, [sp, #24]
   14c80:	ldr	r0, [r0]
   14c84:	add	sl, sl, #1
   14c88:	mov	r5, r0
   14c8c:	cmp	sl, r0
   14c90:	blt	14c04 <dim_enter_array@@Base+0x2b0>
   14c94:	b	14d30 <dim_enter_array@@Base+0x3dc>
   14c98:	ldr	r0, [r9, sl, lsl #2]
   14c9c:	add	r6, r7, sl, lsl #2
   14ca0:	cmn	r0, #1
   14ca4:	beq	14cc4 <dim_enter_array@@Base+0x370>
   14ca8:	mov	r0, #0
   14cac:	str	r0, [r6, #140]	; 0x8c
   14cb0:	str	r0, [r6, #108]	; 0x6c
   14cb4:	add	sl, sl, #1
   14cb8:	cmp	sl, r5
   14cbc:	blt	14c98 <dim_enter_array@@Base+0x344>
   14cc0:	b	14d30 <dim_enter_array@@Base+0x3dc>
   14cc4:	mov	r0, r4
   14cc8:	str	ip, [r6, #140]	; 0x8c
   14ccc:	bl	1282c <malloc@plt>
   14cd0:	ldr	ip, [sp, #24]
   14cd4:	cmp	r0, #0
   14cd8:	str	r0, [r6, #108]	; 0x6c
   14cdc:	beq	14cf0 <dim_enter_array@@Base+0x39c>
   14ce0:	add	sl, sl, #1
   14ce4:	cmp	sl, r5
   14ce8:	blt	14c98 <dim_enter_array@@Base+0x344>
   14cec:	b	14d30 <dim_enter_array@@Base+0x3dc>
   14cf0:	movw	r1, #41209	; 0xa0f9
   14cf4:	movw	r3, #41807	; 0xa34f
   14cf8:	mov	r0, #456	; 0x1c8
   14cfc:	mov	r2, r4
   14d00:	str	r0, [sp]
   14d04:	mvn	r0, #0
   14d08:	movt	r1, #1
   14d0c:	movt	r3, #1
   14d10:	bl	126ac <coda_set_error@plt>
   14d14:	bl	184f8 <handle_coda_error@@Base>
   14d18:	ldr	r0, [sp, #20]
   14d1c:	ldr	ip, [sp, #24]
   14d20:	ldr	r5, [r0]
   14d24:	add	sl, sl, #1
   14d28:	cmp	sl, r5
   14d2c:	blt	14c98 <dim_enter_array@@Base+0x344>
   14d30:	ldr	r0, [sp, #16]
   14d34:	mov	r1, #0
   14d38:	mov	r2, #0
   14d3c:	str	r1, [r0, #844]	; 0x34c
   14d40:	mov	r0, #0
   14d44:	mov	r1, #0
   14d48:	bl	151ec <dim_enter_array@@Base+0x898>
   14d4c:	ldr	r0, [sp, #20]
   14d50:	ldr	sl, [r0]
   14d54:	cmp	sl, #1
   14d58:	blt	14e68 <dim_enter_array@@Base+0x514>
   14d5c:	ldr	ip, [sp, #24]
   14d60:	mov	r4, #0
   14d64:	mov	r5, #0
   14d68:	ldr	r0, [r9, r4, lsl #2]
   14d6c:	cmn	r0, #1
   14d70:	beq	14d84 <dim_enter_array@@Base+0x430>
   14d74:	add	r4, r4, #1
   14d78:	cmp	r4, sl
   14d7c:	blt	14d68 <dim_enter_array@@Base+0x414>
   14d80:	b	14e70 <dim_enter_array@@Base+0x51c>
   14d84:	add	r6, r7, r4, lsl #2
   14d88:	ldr	r0, [r6, #4]
   14d8c:	ldr	r1, [r6, #36]	; 0x24
   14d90:	cmp	r0, r1
   14d94:	bne	14dcc <dim_enter_array@@Base+0x478>
   14d98:	mov	sl, #0
   14d9c:	str	sl, [r6, #72]	; 0x48
   14da0:	ldr	r0, [r6, #108]	; 0x6c
   14da4:	bl	126f4 <free@plt>
   14da8:	ldr	r0, [sp, #20]
   14dac:	str	sl, [r6, #140]	; 0x8c
   14db0:	str	sl, [r6, #108]	; 0x6c
   14db4:	ldr	ip, [sp, #24]
   14db8:	ldr	sl, [r0]
   14dbc:	add	r4, r4, #1
   14dc0:	cmp	r4, sl
   14dc4:	blt	14d68 <dim_enter_array@@Base+0x414>
   14dc8:	b	14e70 <dim_enter_array@@Base+0x51c>
   14dcc:	mov	r5, #1
   14dd0:	str	r5, [r6, #72]	; 0x48
   14dd4:	add	r4, r4, #1
   14dd8:	cmp	r4, sl
   14ddc:	blt	14d68 <dim_enter_array@@Base+0x414>
   14de0:	b	14e70 <dim_enter_array@@Base+0x51c>
   14de4:	cmp	sl, #1
   14de8:	blt	14e6c <dim_enter_array@@Base+0x518>
   14dec:	mov	r0, #0
   14df0:	cmp	sl, #3
   14df4:	bls	14e2c <dim_enter_array@@Base+0x4d8>
   14df8:	add	r0, r8, ip, lsl #2
   14dfc:	vmov.i32	q8, #0	; 0x00000000
   14e00:	add	r1, r0, #72	; 0x48
   14e04:	bic	r0, sl, #3
   14e08:	mov	r2, r0
   14e0c:	sub	r3, r1, #68	; 0x44
   14e10:	subs	r2, r2, #4
   14e14:	vst1.32	{d16-d17}, [r3]
   14e18:	vst1.32	{d16-d17}, [r1]!
   14e1c:	bne	14e0c <dim_enter_array@@Base+0x4b8>
   14e20:	mov	r5, #0
   14e24:	cmp	sl, r0
   14e28:	beq	14e70 <dim_enter_array@@Base+0x51c>
   14e2c:	add	r1, r8, ip, lsl #2
   14e30:	mov	r5, #0
   14e34:	add	r2, r1, r0, lsl #2
   14e38:	add	r0, r0, #1
   14e3c:	cmp	sl, r0
   14e40:	str	r5, [r2, #72]	; 0x48
   14e44:	str	r5, [r2, #4]
   14e48:	bne	14e34 <dim_enter_array@@Base+0x4e0>
   14e4c:	b	14e70 <dim_enter_array@@Base+0x51c>
   14e50:	mov	r0, #1
   14e54:	mov	r5, #0
   14e58:	str	r0, [sp, #32]
   14e5c:	mov	r0, #0
   14e60:	str	r0, [sp, #28]
   14e64:	b	14e74 <dim_enter_array@@Base+0x520>
   14e68:	ldr	ip, [sp, #24]
   14e6c:	mov	r5, #0
   14e70:	ldr	r3, [r8]
   14e74:	mvn	r0, #0
   14e78:	cmp	r3, #1
   14e7c:	str	r0, [r8, #104]	; 0x68
   14e80:	mov	r0, #0
   14e84:	str	r0, [r8, #68]	; 0x44
   14e88:	blt	14eb0 <dim_enter_array@@Base+0x55c>
   14e8c:	mov	r1, #1
   14e90:	add	r2, r8, r0, lsl #2
   14e94:	ldr	r2, [r2, #72]	; 0x48
   14e98:	cmp	r2, #0
   14e9c:	strne	r0, [r8, #104]	; 0x68
   14ea0:	add	r0, r0, #1
   14ea4:	strne	r1, [r8, #68]	; 0x44
   14ea8:	cmp	r0, r3
   14eac:	blt	14e90 <dim_enter_array@@Base+0x53c>
   14eb0:	ldr	r1, [sp, #16]
   14eb4:	mov	r0, #1
   14eb8:	cmp	sl, #1
   14ebc:	str	r3, [sp, #20]
   14ec0:	str	r0, [r1, #840]!	; 0x348
   14ec4:	str	r1, [sp, #16]
   14ec8:	blt	14f78 <dim_enter_array@@Base+0x624>
   14ecc:	add	r2, r8, ip, lsl #3
   14ed0:	add	r1, r8, ip, lsl #2
   14ed4:	mov	r3, #0
   14ed8:	str	r5, [sp, #4]
   14edc:	add	ip, r2, #240	; 0xf0
   14ee0:	add	lr, r1, #4
   14ee4:	mov	r2, ip
   14ee8:	ldr	r6, [lr, r3, lsl #2]
   14eec:	cmp	r3, #0
   14ef0:	mul	r0, r0, r6
   14ef4:	beq	14f34 <dim_enter_array@@Base+0x5e0>
   14ef8:	ldr	r4, [r2, #-8]
   14efc:	ldr	r1, [r2, #-4]
   14f00:	mov	r5, sl
   14f04:	asr	sl, r6, #31
   14f08:	umull	r7, r9, r4, r6
   14f0c:	mla	r4, r4, sl, r9
   14f10:	mov	sl, r5
   14f14:	str	r7, [r2]
   14f18:	mla	r1, r1, r6, r4
   14f1c:	str	r1, [r2, #4]
   14f20:	add	r3, r3, #1
   14f24:	add	r2, r2, #8
   14f28:	cmp	r3, sl
   14f2c:	blt	14ee8 <dim_enter_array@@Base+0x594>
   14f30:	b	14f68 <dim_enter_array@@Base+0x614>
   14f34:	ldr	r6, [lr]
   14f38:	ldr	r5, [sp, #32]
   14f3c:	umull	r4, r7, r5, r6
   14f40:	asr	r1, r6, #31
   14f44:	mla	r1, r5, r1, r7
   14f48:	ldr	r5, [sp, #28]
   14f4c:	str	r4, [ip]
   14f50:	mla	r1, r5, r6, r1
   14f54:	str	r1, [ip, #4]
   14f58:	add	r3, r3, #1
   14f5c:	add	r2, r2, #8
   14f60:	cmp	r3, sl
   14f64:	blt	14ee8 <dim_enter_array@@Base+0x594>
   14f68:	ldr	r1, [sp, #16]
   14f6c:	ldr	ip, [sp, #24]
   14f70:	ldr	r5, [sp, #4]
   14f74:	str	r0, [r1]
   14f78:	cmp	r5, #0
   14f7c:	beq	15048 <dim_enter_array@@Base+0x6f4>
   14f80:	cmp	sl, #1
   14f84:	blt	14fa0 <dim_enter_array@@Base+0x64c>
   14f88:	ldr	r0, [sp, #24]
   14f8c:	lsl	r2, sl, #3
   14f90:	mov	r1, #0
   14f94:	add	r0, r8, r0, lsl #3
   14f98:	add	r0, r0, #304	; 0x130
   14f9c:	bl	12910 <memset@plt>
   14fa0:	ldr	r0, [sp, #32]
   14fa4:	subs	r0, r0, #1
   14fa8:	ldr	r0, [sp, #28]
   14fac:	sbcs	r0, r0, #0
   14fb0:	cmpge	sl, #1
   14fb4:	blt	150bc <dim_enter_array@@Base+0x768>
   14fb8:	ldr	r1, [sp, #24]
   14fbc:	movw	r0, #65232	; 0xfed0
   14fc0:	mov	r2, #0
   14fc4:	movt	r0, #65535	; 0xffff
   14fc8:	sub	ip, r0, r1, lsl #3
   14fcc:	lsl	lr, r1, #2
   14fd0:	mov	r3, #1
   14fd4:	mov	r1, lr
   14fd8:	mov	r0, ip
   14fdc:	mov	r6, sl
   14fe0:	add	r4, r8, r1
   14fe4:	add	r1, r1, #4
   14fe8:	ldr	r7, [r4, #72]	; 0x48
   14fec:	cmp	r7, #0
   14ff0:	mov	r7, r8
   14ff4:	addeq	r4, r4, #4
   14ff8:	ldr	r5, [r7, -r0]!
   14ffc:	sub	r0, r0, #8
   15000:	ldrne	r4, [r4, #108]	; 0x6c
   15004:	addne	r4, r4, r2, lsl #2
   15008:	ldr	r4, [r4]
   1500c:	mul	r3, r4, r3
   15010:	adds	r4, r5, r3
   15014:	str	r4, [r7]
   15018:	ldr	r4, [r7, #4]
   1501c:	adc	r4, r4, r3, asr #31
   15020:	subs	r6, r6, #1
   15024:	str	r4, [r7, #4]
   15028:	bne	14fe0 <dim_enter_array@@Base+0x68c>
   1502c:	ldr	r0, [sp, #32]
   15030:	add	r2, r2, #1
   15034:	subs	r0, r2, r0
   15038:	ldr	r0, [sp, #28]
   1503c:	rscs	r0, r0, #0
   15040:	blt	14fd0 <dim_enter_array@@Base+0x67c>
   15044:	b	150bc <dim_enter_array@@Base+0x768>
   15048:	add	r0, r8, ip, lsl #2
   1504c:	ldr	r5, [sp, #8]
   15050:	add	r2, r8, ip, lsl #3
   15054:	cmp	sl, #2
   15058:	ldr	r1, [r0, #4]
   1505c:	umull	r3, r7, r5, r1
   15060:	asr	r6, r1, #31
   15064:	mla	r7, r5, r6, r7
   15068:	ldr	r6, [sp, #12]
   1506c:	str	r3, [r2, #304]	; 0x130
   15070:	mla	r1, r6, r1, r7
   15074:	str	r1, [r2, #308]	; 0x134
   15078:	blt	150bc <dim_enter_array@@Base+0x768>
   1507c:	ldr	r7, [r2, #304]	; 0x130
   15080:	ldr	r3, [r2, #308]	; 0x134
   15084:	add	r1, r2, #312	; 0x138
   15088:	add	r0, r0, #8
   1508c:	sub	r2, sl, #1
   15090:	ldr	r6, [r0], #4
   15094:	subs	r2, r2, #1
   15098:	umull	r4, ip, r7, r6
   1509c:	asr	r5, r6, #31
   150a0:	mla	r7, r7, r5, ip
   150a4:	str	r4, [r1]
   150a8:	mla	r3, r3, r6, r7
   150ac:	mov	r7, r4
   150b0:	str	r3, [r1, #4]
   150b4:	add	r1, r1, #8
   150b8:	bne	15090 <dim_enter_array@@Base+0x73c>
   150bc:	ldr	ip, [sp, #24]
   150c0:	add	r0, ip, sl
   150c4:	add	r1, r8, r0, lsl #3
   150c8:	ldr	r0, [r1, #296]	; 0x128
   150cc:	ldr	r2, [r1, #300]	; 0x12c
   150d0:	subs	r0, r0, #1
   150d4:	sbcs	r0, r2, #0
   150d8:	blt	15184 <dim_enter_array@@Base+0x830>
   150dc:	ldr	r0, [sp, #20]
   150e0:	cmp	sl, #2
   150e4:	sub	r0, r0, #1
   150e8:	add	r2, r8, r0, lsl #3
   150ec:	add	r0, r8, r0, lsl #2
   150f0:	ldr	r0, [r0, #4]
   150f4:	asr	r3, r0, #31
   150f8:	str	r0, [r2, #176]	; 0xb0
   150fc:	str	r3, [r2, #180]	; 0xb4
   15100:	blt	15144 <dim_enter_array@@Base+0x7f0>
   15104:	add	r0, r8, ip, lsl #2
   15108:	add	r1, r1, #160	; 0xa0
   1510c:	sub	r0, r0, #4
   15110:	ldr	r2, [r0, sl, lsl #2]
   15114:	ldrd	r4, [r1, #8]
   15118:	umull	r6, r3, r4, r2
   1511c:	asr	r7, r2, #31
   15120:	mla	r3, r4, r7, r3
   15124:	mla	r7, r5, r2, r3
   15128:	sub	r3, sl, #2
   1512c:	sub	r2, sl, #1
   15130:	strd	r6, [r1]
   15134:	sub	r1, r1, #8
   15138:	cmp	r3, #0
   1513c:	mov	sl, r2
   15140:	bgt	15110 <dim_enter_array@@Base+0x7bc>
   15144:	cmp	ip, #1
   15148:	blt	15184 <dim_enter_array@@Base+0x830>
   1514c:	add	r1, r8, ip, lsl #3
   15150:	add	r2, ip, #1
   15154:	add	r0, r1, #168	; 0xa8
   15158:	add	r1, r1, #176	; 0xb0
   1515c:	ldrd	r4, [r1]
   15160:	ldrd	r6, [r0]
   15164:	sub	r2, r2, #1
   15168:	cmp	r2, #1
   1516c:	umull	r8, r3, r6, r4
   15170:	mla	r3, r6, r5, r3
   15174:	mla	r9, r7, r4, r3
   15178:	strd	r8, [r0]
   1517c:	sub	r0, r0, #8
   15180:	bgt	1515c <dim_enter_array@@Base+0x808>
   15184:	sub	sp, fp, #28
   15188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1518c:	movw	r0, #41754	; 0xa31a
   15190:	movw	r1, #41807	; 0xa34f
   15194:	movw	r3, #41942	; 0xa3d6
   15198:	movw	r2, #386	; 0x182
   1519c:	movt	r0, #1
   151a0:	movt	r1, #1
   151a4:	movt	r3, #1
   151a8:	bl	12ab4 <__assert_fail@plt>
   151ac:	movw	r0, #41965	; 0xa3ed
   151b0:	movw	r1, #41807	; 0xa34f
   151b4:	movw	r3, #41942	; 0xa3d6
   151b8:	movw	r2, #402	; 0x192
   151bc:	movt	r0, #1
   151c0:	movt	r1, #1
   151c4:	movt	r3, #1
   151c8:	bl	12ab4 <__assert_fail@plt>
   151cc:	movw	r0, #41754	; 0xa31a
   151d0:	movw	r1, #41807	; 0xa34f
   151d4:	movw	r3, #41942	; 0xa3d6
   151d8:	movw	r2, #349	; 0x15d
   151dc:	movt	r0, #1
   151e0:	movt	r1, #1
   151e4:	movt	r3, #1
   151e8:	bl	12ab4 <__assert_fail@plt>
   151ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151f0:	add	fp, sp, #28
   151f4:	sub	sp, sp, #44	; 0x2c
   151f8:	movw	r7, #49640	; 0xc1e8
   151fc:	mov	r5, r1
   15200:	mov	sl, r0
   15204:	sub	r1, fp, #32
   15208:	str	r2, [sp]
   1520c:	movt	r7, #2
   15210:	add	r6, r7, #144	; 0x90
   15214:	mov	r0, r6
   15218:	bl	12784 <coda_cursor_get_type_class@plt>
   1521c:	cmp	r0, #0
   15220:	beq	15228 <dim_enter_array@@Base+0x8d4>
   15224:	bl	184f8 <handle_coda_error@@Base>
   15228:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1522c:	sub	r1, r0, #4
   15230:	cmp	r1, #2
   15234:	bcc	15314 <dim_enter_array@@Base+0x9c0>
   15238:	cmp	r0, #0
   1523c:	beq	15354 <dim_enter_array@@Base+0xa00>
   15240:	cmp	r0, #1
   15244:	bne	155e4 <dim_enter_array@@Base+0xc90>
   15248:	add	r0, r5, r5, lsl #2
   1524c:	add	r9, r7, r0, lsl #4
   15250:	ldr	r0, [r7, #3360]	; 0xd20
   15254:	ldr	r4, [r9, #800]	; 0x320
   15258:	cmp	r0, r5
   1525c:	bne	1544c <dim_enter_array@@Base+0xaf8>
   15260:	add	r8, sp, #8
   15264:	add	r1, sp, #4
   15268:	mov	r0, r6
   1526c:	mov	r2, r8
   15270:	bl	12988 <coda_cursor_get_array_dim@plt>
   15274:	cmp	r0, #0
   15278:	beq	15280 <dim_enter_array@@Base+0x92c>
   1527c:	bl	184f8 <handle_coda_error@@Base>
   15280:	mov	r0, r9
   15284:	ldr	r1, [sp, #4]
   15288:	ldr	r2, [r0, #804]!	; 0x324
   1528c:	cmp	r1, r2
   15290:	bne	15624 <dim_enter_array@@Base+0xcd0>
   15294:	cmp	r1, #1
   15298:	blt	15558 <dim_enter_array@@Base+0xc04>
   1529c:	movw	r1, #53424	; 0xd0b0
   152a0:	add	r2, r9, #808	; 0x328
   152a4:	add	r3, r9, #844	; 0x34c
   152a8:	mov	r7, #0
   152ac:	movt	r1, #2
   152b0:	add	ip, r1, r4, lsl #2
   152b4:	ldr	r6, [r2, r7, lsl #2]
   152b8:	cmn	r6, #1
   152bc:	bne	15300 <dim_enter_array@@Base+0x9ac>
   152c0:	add	r4, ip, r7, lsl #2
   152c4:	ldr	r6, [r8, r7, lsl #2]
   152c8:	ldr	r1, [r3]
   152cc:	ldr	r5, [r4, #108]	; 0x6c
   152d0:	str	r6, [r5, r1, lsl #2]
   152d4:	ldr	r5, [r4, #4]
   152d8:	cmn	r5, #1
   152dc:	beq	152f8 <dim_enter_array@@Base+0x9a4>
   152e0:	cmp	r5, r6
   152e4:	strlt	r6, [r4, #4]
   152e8:	ldr	r1, [r4, #36]	; 0x24
   152ec:	cmp	r1, r6
   152f0:	strgt	r6, [r4, #36]	; 0x24
   152f4:	b	15300 <dim_enter_array@@Base+0x9ac>
   152f8:	str	r6, [r4, #4]
   152fc:	str	r6, [r4, #36]	; 0x24
   15300:	ldr	r1, [r0]
   15304:	add	r7, r7, #1
   15308:	cmp	r7, r1
   1530c:	blt	152b4 <dim_enter_array@@Base+0x960>
   15310:	b	15558 <dim_enter_array@@Base+0xc04>
   15314:	ldr	r1, [r7, #3360]	; 0xd20
   15318:	cmp	r1, r5
   1531c:	bne	15604 <dim_enter_array@@Base+0xcb0>
   15320:	cmp	r0, #4
   15324:	bne	153c0 <dim_enter_array@@Base+0xa6c>
   15328:	add	r1, sp, #4
   1532c:	mov	r0, r6
   15330:	bl	1288c <coda_cursor_get_string_length@plt>
   15334:	cmp	r0, #0
   15338:	beq	15340 <dim_enter_array@@Base+0x9ec>
   1533c:	bl	184f8 <handle_coda_error@@Base>
   15340:	ldr	r0, [sp, #4]
   15344:	str	r0, [sp, #8]
   15348:	asr	r0, r0, #31
   1534c:	str	r0, [sp, #12]
   15350:	b	153d8 <dim_enter_array@@Base+0xa84>
   15354:	ldr	r0, [sp]
   15358:	add	r2, sp, #8
   1535c:	add	r4, r7, r0, lsl #2
   15360:	mov	r0, r6
   15364:	ldr	r1, [r4, #3492]!	; 0xda4
   15368:	bl	12694 <coda_cursor_get_record_field_available_status@plt>
   1536c:	cmp	r0, #0
   15370:	beq	15378 <dim_enter_array@@Base+0xa24>
   15374:	bl	184f8 <handle_coda_error@@Base>
   15378:	ldr	r0, [sp, #8]
   1537c:	cmp	r0, #0
   15380:	beq	154d0 <dim_enter_array@@Base+0xb7c>
   15384:	ldr	r1, [r4]
   15388:	mov	r0, r6
   1538c:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   15390:	cmp	r0, #0
   15394:	beq	1539c <dim_enter_array@@Base+0xa48>
   15398:	bl	184f8 <handle_coda_error@@Base>
   1539c:	ldr	r1, [sp]
   153a0:	add	r0, sl, #1
   153a4:	add	r2, r1, #1
   153a8:	mov	r1, r5
   153ac:	bl	151ec <dim_enter_array@@Base+0x898>
   153b0:	mov	r0, r6
   153b4:	bl	1285c <coda_cursor_goto_parent@plt>
   153b8:	sub	sp, fp, #28
   153bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153c0:	add	r1, sp, #8
   153c4:	mov	r0, r6
   153c8:	bl	1261c <coda_cursor_get_byte_size@plt>
   153cc:	cmp	r0, #0
   153d0:	beq	153d8 <dim_enter_array@@Base+0xa84>
   153d4:	bl	184f8 <handle_coda_error@@Base>
   153d8:	add	r0, r5, r5, lsl #2
   153dc:	ldr	r2, [sp, #12]
   153e0:	add	r0, r7, r0, lsl #4
   153e4:	ldr	r1, [r0, #800]	; 0x320
   153e8:	ldr	r3, [r0, #844]	; 0x34c
   153ec:	movw	r0, #53424	; 0xd0b0
   153f0:	movt	r0, #2
   153f4:	add	r0, r0, r1, lsl #2
   153f8:	ldr	r1, [sp, #8]
   153fc:	ldr	r7, [r0, #108]	; 0x6c
   15400:	str	r1, [r7, r3, lsl #2]
   15404:	mov	r3, r0
   15408:	ldr	r7, [r3, #4]!
   1540c:	cmn	r7, #1
   15410:	beq	15438 <dim_enter_array@@Base+0xae4>
   15414:	subs	r6, r7, r1
   15418:	rscs	r7, r2, r7, asr #31
   1541c:	strlt	r1, [r3]
   15420:	ldr	r3, [r0, #36]!	; 0x24
   15424:	subs	r7, r1, r3
   15428:	sbcs	r2, r2, r3, asr #31
   1542c:	strlt	r1, [r0]
   15430:	sub	sp, fp, #28
   15434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15438:	add	r0, r0, #36	; 0x24
   1543c:	str	r1, [r3]
   15440:	str	r1, [r0]
   15444:	sub	sp, fp, #28
   15448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1544c:	cmp	r5, #0
   15450:	moveq	r0, #0
   15454:	streq	r0, [r7, #844]	; 0x34c
   15458:	ldr	r1, [r9, #804]	; 0x324
   1545c:	ldr	r2, [r9, #840]	; 0x348
   15460:	ldr	r0, [r9, #844]	; 0x34c
   15464:	mul	r2, r2, r0
   15468:	cmp	r1, #1
   1546c:	str	r2, [r9, #924]	; 0x39c
   15470:	blt	15560 <dim_enter_array@@Base+0xc0c>
   15474:	movw	r2, #53424	; 0xd0b0
   15478:	add	r1, r1, r4
   1547c:	add	r3, r4, #27
   15480:	movt	r2, #2
   15484:	add	r2, r2, r4, lsl #2
   15488:	mov	r4, #1
   1548c:	add	r2, r2, #72	; 0x48
   15490:	ldr	r7, [r2]
   15494:	cmp	r7, #0
   15498:	subeq	r7, r2, #68	; 0x44
   1549c:	ldrne	r7, [r2, #36]	; 0x24
   154a0:	add	r2, r2, #4
   154a4:	addne	r7, r7, r0, lsl #2
   154a8:	ldr	r7, [r7]
   154ac:	mul	r4, r7, r4
   154b0:	add	r7, r3, #1
   154b4:	sub	r3, r3, #26
   154b8:	cmp	r3, r1
   154bc:	mov	r3, r7
   154c0:	blt	15490 <dim_enter_array@@Base+0xb3c>
   154c4:	cmp	r4, #1
   154c8:	bge	15564 <dim_enter_array@@Base+0xc10>
   154cc:	b	15558 <dim_enter_array@@Base+0xc04>
   154d0:	ldr	r0, [r7, #3360]	; 0xd20
   154d4:	add	r0, r0, r0, lsl #2
   154d8:	add	r3, r7, r0, lsl #4
   154dc:	mov	r0, r3
   154e0:	ldr	r5, [r0, #804]!	; 0x324
   154e4:	cmp	r5, #1
   154e8:	blt	15558 <dim_enter_array@@Base+0xc04>
   154ec:	ldr	r1, [r0, #-4]
   154f0:	movw	r2, #53424	; 0xd0b0
   154f4:	mov	r7, #0
   154f8:	mov	r6, #0
   154fc:	movt	r2, #2
   15500:	add	ip, r2, r1, lsl #2
   15504:	add	r2, r3, #808	; 0x328
   15508:	add	r3, r3, #844	; 0x34c
   1550c:	ldr	r4, [r2, r6, lsl #2]
   15510:	cmn	r4, #1
   15514:	beq	15528 <dim_enter_array@@Base+0xbd4>
   15518:	add	r6, r6, #1
   1551c:	cmp	r6, r5
   15520:	blt	1550c <dim_enter_array@@Base+0xbb8>
   15524:	b	15558 <dim_enter_array@@Base+0xc04>
   15528:	add	r5, ip, r6, lsl #2
   1552c:	ldr	r1, [r3]
   15530:	ldr	r4, [r5, #108]	; 0x6c
   15534:	str	r7, [r4, r1, lsl #2]
   15538:	ldr	r1, [r5, #4]
   1553c:	cmn	r1, #1
   15540:	streq	r7, [r5, #4]
   15544:	str	r7, [r5, #36]	; 0x24
   15548:	ldr	r5, [r0]
   1554c:	add	r6, r6, #1
   15550:	cmp	r6, r5
   15554:	blt	1550c <dim_enter_array@@Base+0xbb8>
   15558:	sub	sp, fp, #28
   1555c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15560:	mov	r4, #1
   15564:	mov	r0, r6
   15568:	mov	r8, r6
   1556c:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   15570:	cmp	r0, #0
   15574:	beq	1557c <dim_enter_array@@Base+0xc28>
   15578:	bl	184f8 <handle_coda_error@@Base>
   1557c:	add	r7, sl, #1
   15580:	add	r9, r9, #924	; 0x39c
   15584:	add	r5, r5, #1
   15588:	sub	r6, r4, #1
   1558c:	mov	sl, #0
   15590:	ldr	r2, [sp]
   15594:	mov	r0, r7
   15598:	mov	r1, r5
   1559c:	bl	151ec <dim_enter_array@@Base+0x898>
   155a0:	cmp	sl, r6
   155a4:	bge	155c8 <dim_enter_array@@Base+0xc74>
   155a8:	mov	r0, r8
   155ac:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   155b0:	cmp	r0, #0
   155b4:	beq	155bc <dim_enter_array@@Base+0xc68>
   155b8:	bl	184f8 <handle_coda_error@@Base>
   155bc:	ldr	r0, [r9]
   155c0:	add	r0, r0, #1
   155c4:	str	r0, [r9]
   155c8:	add	sl, sl, #1
   155cc:	cmp	r4, sl
   155d0:	bne	15590 <dim_enter_array@@Base+0xc3c>
   155d4:	mov	r0, r8
   155d8:	bl	1285c <coda_cursor_goto_parent@plt>
   155dc:	sub	sp, fp, #28
   155e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155e4:	movw	r0, #41754	; 0xa31a
   155e8:	movw	r1, #41807	; 0xa34f
   155ec:	movw	r3, #42108	; 0xa47c
   155f0:	movw	r2, #294	; 0x126
   155f4:	movt	r0, #1
   155f8:	movt	r1, #1
   155fc:	movt	r3, #1
   15600:	bl	12ab4 <__assert_fail@plt>
   15604:	movw	r0, #42151	; 0xa4a7
   15608:	movw	r1, #41807	; 0xa34f
   1560c:	movw	r3, #42108	; 0xa47c
   15610:	mov	r2, #252	; 0xfc
   15614:	movt	r0, #1
   15618:	movt	r1, #1
   1561c:	movt	r3, #1
   15620:	bl	12ab4 <__assert_fail@plt>
   15624:	movw	r0, #42075	; 0xa45b
   15628:	movw	r1, #41807	; 0xa34f
   1562c:	movw	r3, #42108	; 0xa47c
   15630:	mov	r2, #125	; 0x7d
   15634:	movt	r0, #1
   15638:	movt	r1, #1
   1563c:	movt	r3, #1
   15640:	bl	12ab4 <__assert_fail@plt>

00015644 <dim_leave_array@@Base>:
   15644:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15648:	add	fp, sp, #24
   1564c:	movw	r0, #49640	; 0xc1e8
   15650:	movt	r0, #2
   15654:	ldr	r1, [r0, #3360]	; 0xd20
   15658:	cmn	r1, #1
   1565c:	ble	15750 <dim_leave_array@@Base+0x10c>
   15660:	add	r1, r1, r1, lsl #2
   15664:	movw	r5, #53424	; 0xd0b0
   15668:	add	r6, r0, r1, lsl #4
   1566c:	movt	r5, #2
   15670:	ldr	r0, [r6, #804]!	; 0x324
   15674:	ldr	r1, [r5]
   15678:	ldr	r8, [r6, #-4]
   1567c:	sub	r1, r1, r0
   15680:	cmp	r0, #1
   15684:	str	r1, [r5]
   15688:	blt	156c0 <dim_leave_array@@Base+0x7c>
   1568c:	add	r7, r5, r8, lsl #2
   15690:	mov	r4, #0
   15694:	add	r1, r7, r4, lsl #2
   15698:	ldr	r2, [r1, #72]	; 0x48
   1569c:	cmp	r2, #0
   156a0:	beq	156b0 <dim_leave_array@@Base+0x6c>
   156a4:	ldr	r0, [r1, #108]	; 0x6c
   156a8:	bl	126f4 <free@plt>
   156ac:	ldr	r0, [r6]
   156b0:	add	r4, r4, #1
   156b4:	cmp	r4, r0
   156b8:	blt	15694 <dim_leave_array@@Base+0x50>
   156bc:	ldr	r1, [r5]
   156c0:	mvn	r2, #0
   156c4:	cmp	r1, #1
   156c8:	str	r2, [r5, #104]	; 0x68
   156cc:	mov	r2, #0
   156d0:	str	r2, [r5, #68]	; 0x44
   156d4:	blt	156fc <dim_leave_array@@Base+0xb8>
   156d8:	mov	r3, #1
   156dc:	add	r7, r5, r2, lsl #2
   156e0:	ldr	r7, [r7, #72]	; 0x48
   156e4:	cmp	r7, #0
   156e8:	strne	r2, [r5, #104]	; 0x68
   156ec:	add	r2, r2, #1
   156f0:	strne	r3, [r5, #68]	; 0x44
   156f4:	cmp	r2, r1
   156f8:	blt	156dc <dim_leave_array@@Base+0x98>
   156fc:	add	r0, r8, r0
   15700:	add	r0, r5, r0, lsl #3
   15704:	ldr	r1, [r0, #296]	; 0x128
   15708:	ldr	r0, [r0, #300]	; 0x12c
   1570c:	subs	r1, r1, #1
   15710:	sbcs	r0, r0, #0
   15714:	cmpge	r8, #1
   15718:	blt	1574c <dim_leave_array@@Base+0x108>
   1571c:	add	r0, r5, r8, lsl #3
   15720:	add	r6, r8, #1
   15724:	add	r4, r0, #168	; 0xa8
   15728:	add	r5, r0, #176	; 0xb0
   1572c:	ldrd	r0, [r4]
   15730:	ldrd	r2, [r5]
   15734:	bl	19e74 <main@@Base+0x1938>
   15738:	sub	r6, r6, #1
   1573c:	strd	r0, [r4]
   15740:	sub	r4, r4, #8
   15744:	cmp	r6, #1
   15748:	bgt	1572c <dim_leave_array@@Base+0xe8>
   1574c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15750:	movw	r0, #42022	; 0xa426
   15754:	movw	r1, #41807	; 0xa34f
   15758:	movw	r3, #42052	; 0xa444
   1575c:	movw	r2, #579	; 0x243
   15760:	movt	r0, #1
   15764:	movt	r1, #1
   15768:	movt	r3, #1
   1576c:	bl	12ab4 <__assert_fail@plt>

00015770 <dim_record_field_available@@Base>:
   15770:	mov	r0, #0
   15774:	mov	r1, #0
   15778:	mov	r2, #0
   1577c:	b	15780 <dim_record_field_available@@Base+0x10>
   15780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15784:	add	fp, sp, #28
   15788:	sub	sp, sp, #12
   1578c:	movw	r4, #49640	; 0xc1e8
   15790:	mov	r6, r1
   15794:	mov	r8, r0
   15798:	add	r1, sp, #8
   1579c:	mov	sl, r2
   157a0:	movt	r4, #2
   157a4:	add	r0, r4, #144	; 0x90
   157a8:	str	r0, [sp]
   157ac:	bl	12784 <coda_cursor_get_type_class@plt>
   157b0:	cmp	r0, #0
   157b4:	beq	157bc <dim_record_field_available@@Base+0x4c>
   157b8:	bl	184f8 <handle_coda_error@@Base>
   157bc:	ldr	r0, [sp, #8]
   157c0:	cmp	r0, #0
   157c4:	beq	158e8 <dim_record_field_available@@Base+0x178>
   157c8:	cmp	r0, #1
   157cc:	bne	159a8 <dim_record_field_available@@Base+0x238>
   157d0:	ldr	r0, [r4, #3360]	; 0xd20
   157d4:	cmp	r0, r6
   157d8:	ble	159c8 <dim_record_field_available@@Base+0x258>
   157dc:	add	r0, r6, r6, lsl #2
   157e0:	cmp	r6, #0
   157e4:	add	r7, r4, r0, lsl #4
   157e8:	moveq	r0, #0
   157ec:	ldr	r3, [r7, #800]	; 0x320
   157f0:	streq	r0, [r4, #844]	; 0x34c
   157f4:	ldr	r1, [r7, #804]	; 0x324
   157f8:	ldr	r2, [r7, #840]	; 0x348
   157fc:	ldr	r0, [r7, #844]	; 0x34c
   15800:	mul	r2, r2, r0
   15804:	cmp	r1, #1
   15808:	str	r2, [r7, #924]	; 0x39c
   1580c:	blt	15990 <dim_record_field_available@@Base+0x220>
   15810:	movw	r2, #53424	; 0xd0b0
   15814:	add	r1, r1, r3
   15818:	mov	r4, #1
   1581c:	movt	r2, #2
   15820:	add	r2, r2, r3, lsl #2
   15824:	add	r3, r3, #27
   15828:	add	r2, r2, #72	; 0x48
   1582c:	ldr	r5, [r2]
   15830:	cmp	r5, #0
   15834:	subeq	r5, r2, #68	; 0x44
   15838:	ldrne	r5, [r2, #36]	; 0x24
   1583c:	add	r2, r2, #4
   15840:	addne	r5, r5, r0, lsl #2
   15844:	ldr	r5, [r5]
   15848:	mul	r4, r5, r4
   1584c:	add	r5, r3, #1
   15850:	sub	r3, r3, #26
   15854:	cmp	r3, r1
   15858:	mov	r3, r5
   1585c:	blt	1582c <dim_record_field_available@@Base+0xbc>
   15860:	cmp	r4, #1
   15864:	blt	15970 <dim_record_field_available@@Base+0x200>
   15868:	ldr	r0, [sp]
   1586c:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   15870:	cmp	r0, #0
   15874:	beq	1587c <dim_record_field_available@@Base+0x10c>
   15878:	bl	184f8 <handle_coda_error@@Base>
   1587c:	add	r5, r7, #924	; 0x39c
   15880:	add	r7, r8, #1
   15884:	add	r6, r6, #1
   15888:	sub	r9, r4, #1
   1588c:	mov	r8, #0
   15890:	mov	r0, r7
   15894:	mov	r1, r6
   15898:	mov	r2, sl
   1589c:	bl	15780 <dim_record_field_available@@Base+0x10>
   158a0:	cmp	r0, #0
   158a4:	bne	1597c <dim_record_field_available@@Base+0x20c>
   158a8:	cmp	r8, r9
   158ac:	bge	158d0 <dim_record_field_available@@Base+0x160>
   158b0:	ldr	r0, [sp]
   158b4:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   158b8:	cmp	r0, #0
   158bc:	beq	158c4 <dim_record_field_available@@Base+0x154>
   158c0:	bl	184f8 <handle_coda_error@@Base>
   158c4:	ldr	r0, [r5]
   158c8:	add	r0, r0, #1
   158cc:	str	r0, [r5]
   158d0:	add	r8, r8, #1
   158d4:	cmp	r8, r4
   158d8:	blt	15890 <dim_record_field_available@@Base+0x120>
   158dc:	ldr	r0, [sp]
   158e0:	bl	1285c <coda_cursor_goto_parent@plt>
   158e4:	b	15970 <dim_record_field_available@@Base+0x200>
   158e8:	add	r5, r4, sl, lsl #2
   158ec:	ldr	r0, [sp]
   158f0:	add	r2, sp, #4
   158f4:	ldr	r1, [r5, #3492]!	; 0xda4
   158f8:	bl	12694 <coda_cursor_get_record_field_available_status@plt>
   158fc:	cmp	r0, #0
   15900:	beq	15908 <dim_record_field_available@@Base+0x198>
   15904:	bl	184f8 <handle_coda_error@@Base>
   15908:	ldr	r0, [sp, #4]
   1590c:	cmp	r0, #0
   15910:	beq	15970 <dim_record_field_available@@Base+0x200>
   15914:	ldr	r0, [r4, #3748]	; 0xea4
   15918:	sub	r0, r0, #1
   1591c:	cmp	r0, sl
   15920:	beq	15964 <dim_record_field_available@@Base+0x1f4>
   15924:	ldr	r1, [r5]
   15928:	ldr	r0, [sp]
   1592c:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   15930:	cmp	r0, #0
   15934:	beq	1593c <dim_record_field_available@@Base+0x1cc>
   15938:	bl	184f8 <handle_coda_error@@Base>
   1593c:	add	r0, r8, #1
   15940:	add	r2, sl, #1
   15944:	mov	r1, r6
   15948:	bl	15780 <dim_record_field_available@@Base+0x10>
   1594c:	str	r0, [sp, #4]
   15950:	ldr	r0, [sp]
   15954:	bl	1285c <coda_cursor_goto_parent@plt>
   15958:	ldr	r0, [sp, #4]
   1595c:	cmp	r0, #0
   15960:	beq	15970 <dim_record_field_available@@Base+0x200>
   15964:	mov	r0, #1
   15968:	sub	sp, fp, #28
   1596c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15970:	mov	r0, #0
   15974:	sub	sp, fp, #28
   15978:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1597c:	ldr	r0, [sp]
   15980:	bl	1285c <coda_cursor_goto_parent@plt>
   15984:	mov	r0, #1
   15988:	sub	sp, fp, #28
   1598c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15990:	mov	r4, #1
   15994:	ldr	r0, [sp]
   15998:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   1599c:	cmp	r0, #0
   159a0:	bne	15878 <dim_record_field_available@@Base+0x108>
   159a4:	b	1587c <dim_record_field_available@@Base+0x10c>
   159a8:	movw	r0, #41754	; 0xa31a
   159ac:	movw	r1, #41807	; 0xa34f
   159b0:	movw	r3, #42230	; 0xa4f6
   159b4:	movw	r2, #729	; 0x2d9
   159b8:	movt	r0, #1
   159bc:	movt	r1, #1
   159c0:	movt	r3, #1
   159c4:	bl	12ab4 <__assert_fail@plt>
   159c8:	movw	r0, #42191	; 0xa4cf
   159cc:	movw	r1, #41807	; 0xa34f
   159d0:	movw	r3, #42230	; 0xa4f6
   159d4:	movw	r2, #638	; 0x27e
   159d8:	movt	r0, #1
   159dc:	movt	r1, #1
   159e0:	movt	r3, #1
   159e4:	bl	12ab4 <__assert_fail@plt>

000159e8 <codadump_filter_create@@Base>:
   159e8:	push	{r4, r5, r6, r7, fp, lr}
   159ec:	add	fp, sp, #16
   159f0:	sub	sp, sp, #16
   159f4:	mov	r1, #0
   159f8:	str	r0, [sp, #8]
   159fc:	cmp	r0, #0
   15a00:	str	r1, [sp, #4]
   15a04:	str	r1, [sp, #12]
   15a08:	ldrbne	r1, [r0]
   15a0c:	cmpne	r1, #0
   15a10:	bne	15a20 <codadump_filter_create@@Base+0x38>
   15a14:	ldr	r0, [sp, #4]
   15a18:	sub	sp, fp, #16
   15a1c:	pop	{r4, r5, r6, r7, fp, pc}
   15a20:	add	r4, sp, #12
   15a24:	add	r5, sp, #8
   15a28:	add	r6, sp, #4
   15a2c:	mov	r7, #0
   15a30:	mov	r1, r4
   15a34:	mov	r2, r5
   15a38:	bl	15bc4 <codadump_filter_get_next_filter@@Base+0x34>
   15a3c:	ldr	r1, [sp, #12]
   15a40:	cmp	r1, #0
   15a44:	beq	15a68 <codadump_filter_create@@Base+0x80>
   15a48:	mov	r0, r6
   15a4c:	bl	15e5c <codadump_filter_get_next_filter@@Base+0x2cc>
   15a50:	ldr	r0, [sp, #8]
   15a54:	str	r7, [sp, #12]
   15a58:	ldrb	r1, [r0]
   15a5c:	cmp	r1, #0
   15a60:	bne	15a30 <codadump_filter_create@@Base+0x48>
   15a64:	b	15a14 <codadump_filter_create@@Base+0x2c>
   15a68:	add	r0, sp, #4
   15a6c:	bl	15a7c <codadump_filter_remove@@Base>
   15a70:	ldr	r0, [sp, #4]
   15a74:	sub	sp, fp, #16
   15a78:	pop	{r4, r5, r6, r7, fp, pc}

00015a7c <codadump_filter_remove@@Base>:
   15a7c:	push	{r4, sl, fp, lr}
   15a80:	add	fp, sp, #8
   15a84:	cmp	r0, #0
   15a88:	beq	15b08 <codadump_filter_remove@@Base+0x8c>
   15a8c:	mov	r4, r0
   15a90:	ldr	r0, [r0]
   15a94:	cmp	r0, #0
   15a98:	popeq	{r4, sl, fp, pc}
   15a9c:	mov	r1, r0
   15aa0:	ldr	r2, [r1, #8]!
   15aa4:	cmp	r2, #0
   15aa8:	beq	15ab8 <codadump_filter_remove@@Base+0x3c>
   15aac:	mov	r0, r1
   15ab0:	bl	15a7c <codadump_filter_remove@@Base>
   15ab4:	ldr	r0, [r4]
   15ab8:	mov	r1, r0
   15abc:	ldr	r2, [r1, #4]!
   15ac0:	cmp	r2, #0
   15ac4:	beq	15ad4 <codadump_filter_remove@@Base+0x58>
   15ac8:	mov	r0, r1
   15acc:	bl	15a7c <codadump_filter_remove@@Base>
   15ad0:	ldr	r0, [r4]
   15ad4:	ldr	r1, [r0]
   15ad8:	cmp	r1, #0
   15adc:	beq	15af8 <codadump_filter_remove@@Base+0x7c>
   15ae0:	mov	r0, r1
   15ae4:	bl	126f4 <free@plt>
   15ae8:	ldr	r0, [r4]
   15aec:	mov	r1, #0
   15af0:	str	r1, [r0]
   15af4:	ldr	r0, [r4]
   15af8:	bl	126f4 <free@plt>
   15afc:	mov	r0, #0
   15b00:	str	r0, [r4]
   15b04:	pop	{r4, sl, fp, pc}
   15b08:	movw	r0, #42283	; 0xa52b
   15b0c:	movw	r1, #42298	; 0xa53a
   15b10:	movw	r3, #42374	; 0xa586
   15b14:	mov	r2, #192	; 0xc0
   15b18:	movt	r0, #1
   15b1c:	movt	r1, #1
   15b20:	movt	r3, #1
   15b24:	bl	12ab4 <__assert_fail@plt>

00015b28 <codadump_filter_get_fieldname@@Base>:
   15b28:	cmp	r0, #0
   15b2c:	ldrne	r0, [r0]
   15b30:	bxne	lr
   15b34:	push	{fp, lr}
   15b38:	mov	fp, sp
   15b3c:	movw	r0, #42283	; 0xa52b
   15b40:	movw	r1, #42298	; 0xa53a
   15b44:	movw	r3, #42422	; 0xa5b6
   15b48:	mov	r2, #216	; 0xd8
   15b4c:	movt	r0, #1
   15b50:	movt	r1, #1
   15b54:	movt	r3, #1
   15b58:	bl	12ab4 <__assert_fail@plt>

00015b5c <codadump_filter_get_subfilter@@Base>:
   15b5c:	cmp	r0, #0
   15b60:	ldrne	r0, [r0, #4]
   15b64:	bxne	lr
   15b68:	push	{fp, lr}
   15b6c:	mov	fp, sp
   15b70:	movw	r0, #42283	; 0xa52b
   15b74:	movw	r1, #42298	; 0xa53a
   15b78:	movw	r3, #42483	; 0xa5f3
   15b7c:	mov	r2, #223	; 0xdf
   15b80:	movt	r0, #1
   15b84:	movt	r1, #1
   15b88:	movt	r3, #1
   15b8c:	bl	12ab4 <__assert_fail@plt>

00015b90 <codadump_filter_get_next_filter@@Base>:
   15b90:	cmp	r0, #0
   15b94:	ldrne	r0, [r0, #8]
   15b98:	bxne	lr
   15b9c:	push	{fp, lr}
   15ba0:	mov	fp, sp
   15ba4:	movw	r0, #42283	; 0xa52b
   15ba8:	movw	r1, #42298	; 0xa53a
   15bac:	movw	r3, #42549	; 0xa635
   15bb0:	mov	r2, #230	; 0xe6
   15bb4:	movt	r0, #1
   15bb8:	movt	r1, #1
   15bbc:	movt	r3, #1
   15bc0:	bl	12ab4 <__assert_fail@plt>
   15bc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15bc8:	add	fp, sp, #24
   15bcc:	sub	sp, sp, #8
   15bd0:	cmp	r0, #0
   15bd4:	beq	15dfc <codadump_filter_get_next_filter@@Base+0x26c>
   15bd8:	mov	r9, r1
   15bdc:	cmp	r1, #0
   15be0:	beq	15e1c <codadump_filter_get_next_filter@@Base+0x28c>
   15be4:	mov	r8, r2
   15be8:	cmp	r2, #0
   15bec:	beq	15e3c <codadump_filter_get_next_filter@@Base+0x2ac>
   15bf0:	movw	r4, #3
   15bf4:	mov	r6, r0
   15bf8:	mov	r1, #1
   15bfc:	movt	r4, #128	; 0x80
   15c00:	ldrb	r0, [r6]
   15c04:	sub	r2, r0, #9
   15c08:	cmp	r2, #23
   15c0c:	bls	15c28 <codadump_filter_get_next_filter@@Base+0x98>
   15c10:	b	15c30 <codadump_filter_get_next_filter@@Base+0xa0>
   15c14:	add	r6, r6, #1
   15c18:	ldrb	r0, [r6]
   15c1c:	sub	r2, r0, #9
   15c20:	cmp	r2, #23
   15c24:	bhi	15c30 <codadump_filter_get_next_filter@@Base+0xa0>
   15c28:	tst	r4, r1, lsl r2
   15c2c:	bne	15c14 <codadump_filter_get_next_filter@@Base+0x84>
   15c30:	mov	r7, #0
   15c34:	mvn	r1, #43	; 0x2b
   15c38:	mov	r2, #1
   15c3c:	movw	r3, #32773	; 0x8005
   15c40:	uxtab	r5, r1, r0
   15c44:	cmp	r5, #15
   15c48:	bls	15c68 <codadump_filter_get_next_filter@@Base+0xd8>
   15c4c:	b	15c70 <codadump_filter_get_next_filter@@Base+0xe0>
   15c50:	add	r0, r6, r7
   15c54:	add	r7, r7, #1
   15c58:	ldrb	r0, [r0, #1]
   15c5c:	uxtab	r5, r1, r0
   15c60:	cmp	r5, #15
   15c64:	bhi	15c70 <codadump_filter_get_next_filter@@Base+0xe0>
   15c68:	tst	r3, r2, lsl r5
   15c6c:	bne	15c7c <codadump_filter_get_next_filter@@Base+0xec>
   15c70:	uxtb	r0, r0
   15c74:	cmp	r0, #0
   15c78:	bne	15c50 <codadump_filter_get_next_filter@@Base+0xc0>
   15c7c:	cmp	r7, #0
   15c80:	beq	15da0 <codadump_filter_get_next_filter@@Base+0x210>
   15c84:	mov	r0, #12
   15c88:	bl	1282c <malloc@plt>
   15c8c:	cmp	r0, #0
   15c90:	str	r0, [r9]
   15c94:	bne	15cc0 <codadump_filter_get_next_filter@@Base+0x130>
   15c98:	movw	r1, #41209	; 0xa0f9
   15c9c:	movw	r3, #42298	; 0xa53a
   15ca0:	mov	r0, #69	; 0x45
   15ca4:	mov	r2, #12
   15ca8:	str	r0, [sp]
   15cac:	movt	r1, #1
   15cb0:	movt	r3, #1
   15cb4:	mvn	r0, #0
   15cb8:	bl	126ac <coda_set_error@plt>
   15cbc:	bl	184f8 <handle_coda_error@@Base>
   15cc0:	add	r5, r7, #1
   15cc4:	mov	r0, r5
   15cc8:	bl	1282c <malloc@plt>
   15ccc:	ldr	r1, [r9]
   15cd0:	str	r0, [r1]
   15cd4:	ldr	r0, [r9]
   15cd8:	ldr	r0, [r0]
   15cdc:	cmp	r0, #0
   15ce0:	bne	15d14 <codadump_filter_get_next_filter@@Base+0x184>
   15ce4:	movw	r1, #42714	; 0xa6da
   15ce8:	movw	r3, #42298	; 0xa53a
   15cec:	mov	r0, #76	; 0x4c
   15cf0:	mov	r2, r5
   15cf4:	str	r0, [sp]
   15cf8:	movt	r1, #1
   15cfc:	movt	r3, #1
   15d00:	mvn	r0, #0
   15d04:	bl	126ac <coda_set_error@plt>
   15d08:	bl	184f8 <handle_coda_error@@Base>
   15d0c:	ldr	r0, [r9]
   15d10:	ldr	r0, [r0]
   15d14:	mov	r1, r6
   15d18:	mov	r2, r7
   15d1c:	add	r5, r6, r7
   15d20:	bl	12928 <strncpy@plt>
   15d24:	ldr	r0, [r9]
   15d28:	mov	r1, #0
   15d2c:	str	r1, [r0, #4]
   15d30:	ldr	r0, [r9]
   15d34:	str	r1, [r0, #8]
   15d38:	mov	r1, #1
   15d3c:	ldr	r0, [r9]
   15d40:	ldr	r0, [r0]
   15d44:	add	r0, r0, r7
   15d48:	ldrb	r2, [r0, #-1]
   15d4c:	sub	r2, r2, #9
   15d50:	cmp	r2, #23
   15d54:	bls	15d70 <codadump_filter_get_next_filter@@Base+0x1e0>
   15d58:	b	15d78 <codadump_filter_get_next_filter@@Base+0x1e8>
   15d5c:	sub	r0, r0, #1
   15d60:	ldrb	r2, [r0, #-1]
   15d64:	sub	r2, r2, #9
   15d68:	cmp	r2, #23
   15d6c:	bhi	15d78 <codadump_filter_get_next_filter@@Base+0x1e8>
   15d70:	tst	r4, r1, lsl r2
   15d74:	bne	15d5c <codadump_filter_get_next_filter@@Base+0x1cc>
   15d78:	mov	r1, #0
   15d7c:	strb	r1, [r0]
   15d80:	ldrb	r0, [r6, r7]
   15d84:	cmp	r0, #44	; 0x2c
   15d88:	cmpne	r0, #59	; 0x3b
   15d8c:	bne	15db0 <codadump_filter_get_next_filter@@Base+0x220>
   15d90:	add	r0, r5, #1
   15d94:	str	r0, [r8]
   15d98:	sub	sp, fp, #24
   15d9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15da0:	mov	r0, #0
   15da4:	str	r0, [r9]
   15da8:	sub	sp, fp, #24
   15dac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15db0:	cmp	r0, #46	; 0x2e
   15db4:	strne	r5, [r8]
   15db8:	subne	sp, fp, #24
   15dbc:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   15dc0:	ldr	r1, [r9]
   15dc4:	add	r0, r5, #1
   15dc8:	mov	r2, r8
   15dcc:	add	r1, r1, #4
   15dd0:	bl	15bc4 <codadump_filter_get_next_filter@@Base+0x34>
   15dd4:	ldr	r0, [r9]
   15dd8:	ldr	r0, [r0, #4]
   15ddc:	cmp	r0, #0
   15de0:	beq	15dec <codadump_filter_get_next_filter@@Base+0x25c>
   15de4:	sub	sp, fp, #24
   15de8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15dec:	mov	r0, r9
   15df0:	sub	sp, fp, #24
   15df4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   15df8:	b	15a7c <codadump_filter_remove@@Base>
   15dfc:	movw	r0, #42617	; 0xa679
   15e00:	movw	r1, #42298	; 0xa53a
   15e04:	movw	r3, #42637	; 0xa68d
   15e08:	mov	r2, #44	; 0x2c
   15e0c:	movt	r0, #1
   15e10:	movt	r1, #1
   15e14:	movt	r3, #1
   15e18:	bl	12ab4 <__assert_fail@plt>
   15e1c:	movw	r0, #42283	; 0xa52b
   15e20:	movw	r1, #42298	; 0xa53a
   15e24:	movw	r3, #42637	; 0xa68d
   15e28:	mov	r2, #45	; 0x2d
   15e2c:	movt	r0, #1
   15e30:	movt	r1, #1
   15e34:	movt	r3, #1
   15e38:	bl	12ab4 <__assert_fail@plt>
   15e3c:	movw	r0, #42701	; 0xa6cd
   15e40:	movw	r1, #42298	; 0xa53a
   15e44:	movw	r3, #42637	; 0xa68d
   15e48:	mov	r2, #46	; 0x2e
   15e4c:	movt	r0, #1
   15e50:	movt	r1, #1
   15e54:	movt	r3, #1
   15e58:	bl	12ab4 <__assert_fail@plt>
   15e5c:	push	{r4, r5, fp, lr}
   15e60:	add	fp, sp, #8
   15e64:	sub	sp, sp, #8
   15e68:	cmp	r0, #0
   15e6c:	str	r1, [sp, #4]
   15e70:	beq	15f20 <codadump_filter_get_next_filter@@Base+0x390>
   15e74:	mov	r4, r1
   15e78:	cmp	r1, #0
   15e7c:	beq	15f04 <codadump_filter_get_next_filter@@Base+0x374>
   15e80:	ldr	r5, [r0]
   15e84:	cmp	r5, #0
   15e88:	streq	r4, [r0]
   15e8c:	subeq	sp, fp, #8
   15e90:	popeq	{r4, r5, fp, pc}
   15e94:	ldr	r1, [r4]
   15e98:	ldr	r0, [r5]
   15e9c:	bl	12664 <strcmp@plt>
   15ea0:	cmp	r0, #0
   15ea4:	beq	15ec8 <codadump_filter_get_next_filter@@Base+0x338>
   15ea8:	ldr	r0, [r5, #8]!
   15eac:	cmp	r0, #0
   15eb0:	beq	15f00 <codadump_filter_get_next_filter@@Base+0x370>
   15eb4:	mov	r0, r5
   15eb8:	mov	r1, r4
   15ebc:	sub	sp, fp, #8
   15ec0:	pop	{r4, r5, fp, lr}
   15ec4:	b	15e5c <codadump_filter_get_next_filter@@Base+0x2cc>
   15ec8:	ldr	r0, [r5, #4]!
   15ecc:	cmp	r0, #0
   15ed0:	beq	15ef0 <codadump_filter_get_next_filter@@Base+0x360>
   15ed4:	ldr	r1, [r4, #4]
   15ed8:	mov	r0, r5
   15edc:	cmp	r1, #0
   15ee0:	beq	15f0c <codadump_filter_get_next_filter@@Base+0x37c>
   15ee4:	bl	15e5c <codadump_filter_get_next_filter@@Base+0x2cc>
   15ee8:	mov	r0, #0
   15eec:	str	r0, [r4, #4]
   15ef0:	add	r0, sp, #4
   15ef4:	bl	15a7c <codadump_filter_remove@@Base>
   15ef8:	sub	sp, fp, #8
   15efc:	pop	{r4, r5, fp, pc}
   15f00:	str	r4, [r5]
   15f04:	sub	sp, fp, #8
   15f08:	pop	{r4, r5, fp, pc}
   15f0c:	bl	15a7c <codadump_filter_remove@@Base>
   15f10:	add	r0, sp, #4
   15f14:	bl	15a7c <codadump_filter_remove@@Base>
   15f18:	sub	sp, fp, #8
   15f1c:	pop	{r4, r5, fp, pc}
   15f20:	movw	r0, #42283	; 0xa52b
   15f24:	movw	r1, #42298	; 0xa53a
   15f28:	movw	r3, #42766	; 0xa70e
   15f2c:	mov	r2, #117	; 0x75
   15f30:	movt	r0, #1
   15f34:	movt	r1, #1
   15f38:	movt	r3, #1
   15f3c:	bl	12ab4 <__assert_fail@plt>

00015f40 <print_json_data@@Base>:
   15f40:	push	{r4, sl, fp, lr}
   15f44:	add	fp, sp, #8
   15f48:	sub	sp, sp, #528	; 0x210
   15f4c:	movw	r1, #49604	; 0xc1c4
   15f50:	movw	r4, #49640	; 0xc1e8
   15f54:	movt	r1, #2
   15f58:	movt	r4, #2
   15f5c:	str	r0, [r1]
   15f60:	ldr	r0, [r4]
   15f64:	sub	r1, fp, #12
   15f68:	bl	126b8 <coda_open@plt>
   15f6c:	cmp	r0, #0
   15f70:	beq	15fb0 <print_json_data@@Base+0x70>
   15f74:	bl	12a60 <coda_get_errno@plt>
   15f78:	ldr	r0, [r0]
   15f7c:	cmn	r0, #21
   15f80:	bne	15fac <print_json_data@@Base+0x6c>
   15f84:	mov	r0, #0
   15f88:	bl	12700 <coda_set_option_use_mmap@plt>
   15f8c:	ldr	r0, [r4]
   15f90:	sub	r1, fp, #12
   15f94:	bl	126b8 <coda_open@plt>
   15f98:	mov	r4, r0
   15f9c:	mov	r0, #1
   15fa0:	bl	12700 <coda_set_option_use_mmap@plt>
   15fa4:	cmp	r4, #0
   15fa8:	beq	15fb0 <print_json_data@@Base+0x70>
   15fac:	bl	184f8 <handle_coda_error@@Base>
   15fb0:	ldr	r1, [fp, #-12]
   15fb4:	mov	r0, sp
   15fb8:	bl	127e4 <coda_cursor_set_product@plt>
   15fbc:	cmp	r0, #0
   15fc0:	beq	15fc8 <print_json_data@@Base+0x88>
   15fc4:	bl	184f8 <handle_coda_error@@Base>
   15fc8:	movw	r0, #53416	; 0xd0a8
   15fcc:	movt	r0, #2
   15fd0:	ldr	r1, [r0]
   15fd4:	cmp	r1, #0
   15fd8:	beq	15ff0 <print_json_data@@Base+0xb0>
   15fdc:	mov	r0, sp
   15fe0:	bl	129c4 <coda_cursor_goto@plt>
   15fe4:	cmp	r0, #0
   15fe8:	beq	15ff0 <print_json_data@@Base+0xb0>
   15fec:	bl	184f8 <handle_coda_error@@Base>
   15ff0:	mov	r0, #0
   15ff4:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   15ff8:	mov	r0, sp
   15ffc:	bl	1601c <print_json_data@@Base+0xdc>
   16000:	movw	r0, #43795	; 0xab13
   16004:	movt	r0, #1
   16008:	bl	16918 <print_json_data@@Base+0x9d8>
   1600c:	ldr	r0, [fp, #-12]
   16010:	bl	129a0 <coda_close@plt>
   16014:	sub	sp, fp, #8
   16018:	pop	{r4, sl, fp, pc}
   1601c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16020:	add	fp, sp, #24
   16024:	sub	sp, sp, #72	; 0x48
   16028:	mov	r4, r0
   1602c:	mov	r0, #0
   16030:	str	r0, [fp, #-32]	; 0xffffffe0
   16034:	movw	r0, #49604	; 0xc1c4
   16038:	movt	r0, #2
   1603c:	ldr	r0, [r0]
   16040:	cmp	r0, #0
   16044:	beq	160a8 <print_json_data@@Base+0x168>
   16048:	sub	r1, fp, #32
   1604c:	mov	r0, r4
   16050:	bl	12778 <coda_cursor_has_attributes@plt>
   16054:	cmp	r0, #0
   16058:	beq	16060 <print_json_data@@Base+0x120>
   1605c:	bl	184f8 <handle_coda_error@@Base>
   16060:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16064:	cmp	r0, #0
   16068:	beq	160a8 <print_json_data@@Base+0x168>
   1606c:	movw	r0, #42821	; 0xa745
   16070:	movt	r0, #1
   16074:	bl	16918 <print_json_data@@Base+0x9d8>
   16078:	mov	r0, r4
   1607c:	bl	128f8 <coda_cursor_goto_attributes@plt>
   16080:	cmp	r0, #0
   16084:	beq	1608c <print_json_data@@Base+0x14c>
   16088:	bl	184f8 <handle_coda_error@@Base>
   1608c:	mov	r0, r4
   16090:	bl	1601c <print_json_data@@Base+0xdc>
   16094:	mov	r0, r4
   16098:	bl	1285c <coda_cursor_goto_parent@plt>
   1609c:	movw	r0, #42830	; 0xa74e
   160a0:	movt	r0, #1
   160a4:	bl	16918 <print_json_data@@Base+0x9d8>
   160a8:	sub	r1, fp, #28
   160ac:	mov	r0, r4
   160b0:	bl	12784 <coda_cursor_get_type_class@plt>
   160b4:	cmp	r0, #0
   160b8:	beq	160c0 <print_json_data@@Base+0x180>
   160bc:	bl	184f8 <handle_coda_error@@Base>
   160c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   160c4:	cmp	r0, #6
   160c8:	bhi	166ec <print_json_data@@Base+0x7ac>
   160cc:	add	r1, pc, #0
   160d0:	ldr	pc, [r1, r0, lsl #2]
   160d4:	muleq	r1, r0, r1
   160d8:	andeq	r6, r1, r4, ror #4
   160dc:	strdeq	r6, [r1], -r0
   160e0:	strdeq	r6, [r1], -r0
   160e4:	strdeq	r6, [r1], -r0
   160e8:	strdeq	r6, [r1], -r0
   160ec:			; <UNDEFINED> instruction: 0x000162b4
   160f0:	sub	r1, fp, #36	; 0x24
   160f4:	mov	r0, r4
   160f8:	bl	12820 <coda_cursor_get_read_type@plt>
   160fc:	cmp	r0, #0
   16100:	beq	16108 <print_json_data@@Base+0x1c8>
   16104:	bl	184f8 <handle_coda_error@@Base>
   16108:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1610c:	add	r0, r0, #1
   16110:	cmp	r0, #13
   16114:	bhi	166ec <print_json_data@@Base+0x7ac>
   16118:	add	r1, pc, #0
   1611c:	ldr	pc, [r1, r0, lsl #2]
   16120:	strdeq	r6, [r1], -r0
   16124:	andeq	r6, r1, r8, asr r1
   16128:	andeq	r6, r1, ip, lsl #6
   1612c:	andeq	r6, r1, r8, asr r1
   16130:	andeq	r6, r1, ip, lsl #6
   16134:	andeq	r6, r1, r8, asr r1
   16138:	andeq	r6, r1, ip, lsl #6
   1613c:	andeq	r6, r1, ip, lsl #7
   16140:			; <UNDEFINED> instruction: 0x000163bc
   16144:	andeq	r6, r1, r4, asr #6
   16148:	andeq	r6, r1, r4, asr #6
   1614c:	andeq	r6, r1, r8, lsl #8
   16150:	andeq	r6, r1, r4, asr r4
   16154:	andeq	r6, r1, r4, lsl r5
   16158:	add	r1, sp, #16
   1615c:	mov	r0, r4
   16160:	bl	12a3c <coda_cursor_read_int32@plt>
   16164:	cmp	r0, #0
   16168:	beq	16170 <print_json_data@@Base+0x230>
   1616c:	bl	184f8 <handle_coda_error@@Base>
   16170:	ldr	r1, [sp, #16]
   16174:	movw	r0, #43016	; 0xa808
   16178:	movt	r0, #1
   1617c:	bl	16918 <print_json_data@@Base+0x9d8>
   16180:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16184:	cmp	r0, #0
   16188:	bne	166f8 <print_json_data@@Base+0x7b8>
   1618c:	b	16704 <print_json_data@@Base+0x7c4>
   16190:	movw	r0, #42839	; 0xa757
   16194:	movt	r0, #1
   16198:	bl	16918 <print_json_data@@Base+0x9d8>
   1619c:	add	r1, sp, #16
   161a0:	mov	r0, r4
   161a4:	bl	126dc <coda_cursor_get_num_elements@plt>
   161a8:	cmp	r0, #0
   161ac:	beq	161b4 <print_json_data@@Base+0x274>
   161b0:	bl	184f8 <handle_coda_error@@Base>
   161b4:	ldr	r0, [sp, #16]
   161b8:	cmp	r0, #1
   161bc:	blt	166e0 <print_json_data@@Base+0x7a0>
   161c0:	add	r1, sp, #8
   161c4:	mov	r0, r4
   161c8:	bl	1273c <coda_cursor_get_type@plt>
   161cc:	cmp	r0, #0
   161d0:	beq	161d8 <print_json_data@@Base+0x298>
   161d4:	bl	184f8 <handle_coda_error@@Base>
   161d8:	ldr	r0, [sp, #8]
   161dc:	sub	r1, fp, #36	; 0x24
   161e0:	bl	12940 <coda_type_get_record_union_status@plt>
   161e4:	cmp	r0, #0
   161e8:	beq	161f0 <print_json_data@@Base+0x2b0>
   161ec:	bl	184f8 <handle_coda_error@@Base>
   161f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   161f4:	cmp	r0, #0
   161f8:	beq	165ec <print_json_data@@Base+0x6ac>
   161fc:	sub	r1, fp, #40	; 0x28
   16200:	mov	r0, r4
   16204:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   16208:	cmp	r0, #0
   1620c:	beq	16214 <print_json_data@@Base+0x2d4>
   16210:	bl	184f8 <handle_coda_error@@Base>
   16214:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16218:	ldr	r0, [sp, #8]
   1621c:	sub	r2, fp, #44	; 0x2c
   16220:	bl	12a78 <coda_type_get_record_field_name@plt>
   16224:	cmp	r0, #0
   16228:	beq	16230 <print_json_data@@Base+0x2f0>
   1622c:	bl	184f8 <handle_coda_error@@Base>
   16230:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16234:	mov	r0, r4
   16238:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   1623c:	cmp	r0, #0
   16240:	beq	16248 <print_json_data@@Base+0x308>
   16244:	bl	184f8 <handle_coda_error@@Base>
   16248:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1624c:	movw	r0, #42841	; 0xa759
   16250:	movt	r0, #1
   16254:	bl	16918 <print_json_data@@Base+0x9d8>
   16258:	mov	r0, r4
   1625c:	bl	1601c <print_json_data@@Base+0xdc>
   16260:	b	166d8 <print_json_data@@Base+0x798>
   16264:	movw	r0, #43010	; 0xa802
   16268:	movt	r0, #1
   1626c:	bl	16918 <print_json_data@@Base+0x9d8>
   16270:	add	r5, sp, #16
   16274:	add	r1, sp, #8
   16278:	mov	r0, r4
   1627c:	mov	r2, r5
   16280:	bl	12988 <coda_cursor_get_array_dim@plt>
   16284:	cmp	r0, #0
   16288:	beq	16290 <print_json_data@@Base+0x350>
   1628c:	bl	184f8 <handle_coda_error@@Base>
   16290:	ldr	r0, [sp, #8]
   16294:	cmp	r0, #0
   16298:	blt	168a4 <print_json_data@@Base+0x964>
   1629c:	beq	1670c <print_json_data@@Base+0x7cc>
   162a0:	cmp	r0, #4
   162a4:	bcs	167e8 <print_json_data@@Base+0x8a8>
   162a8:	mov	r1, #0
   162ac:	mov	r6, #1
   162b0:	b	1681c <print_json_data@@Base+0x8dc>
   162b4:	sub	r1, fp, #36	; 0x24
   162b8:	mov	r0, r4
   162bc:	bl	127c0 <coda_cursor_get_special_type@plt>
   162c0:	cmp	r0, #0
   162c4:	beq	162cc <print_json_data@@Base+0x38c>
   162c8:	bl	184f8 <handle_coda_error@@Base>
   162cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   162d0:	cmp	r0, #3
   162d4:	bhi	166ec <print_json_data@@Base+0x7ac>
   162d8:	add	r1, pc, #0
   162dc:	ldr	pc, [r1, r0, lsl #2]
   162e0:	strdeq	r6, [r1], -r0
   162e4:	andeq	r6, r1, r4, lsr #14
   162e8:	andeq	r6, r1, r4, asr #14
   162ec:	andeq	r6, r1, r0, lsr #15
   162f0:	movw	r0, #42923	; 0xa7ab
   162f4:	movt	r0, #1
   162f8:	bl	16918 <print_json_data@@Base+0x9d8>
   162fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16300:	cmp	r0, #0
   16304:	bne	166f8 <print_json_data@@Base+0x7b8>
   16308:	b	16704 <print_json_data@@Base+0x7c4>
   1630c:	add	r1, sp, #16
   16310:	mov	r0, r4
   16314:	bl	12718 <coda_cursor_read_uint32@plt>
   16318:	cmp	r0, #0
   1631c:	beq	16324 <print_json_data@@Base+0x3e4>
   16320:	bl	184f8 <handle_coda_error@@Base>
   16324:	ldr	r1, [sp, #16]
   16328:	movw	r0, #41367	; 0xa197
   1632c:	movt	r0, #1
   16330:	bl	16918 <print_json_data@@Base+0x9d8>
   16334:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16338:	cmp	r0, #0
   1633c:	bne	166f8 <print_json_data@@Base+0x7b8>
   16340:	b	16704 <print_json_data@@Base+0x7c4>
   16344:	add	r1, sp, #16
   16348:	mov	r0, r4
   1634c:	bl	128a4 <coda_cursor_read_double@plt>
   16350:	cmp	r0, #0
   16354:	beq	1635c <print_json_data@@Base+0x41c>
   16358:	bl	184f8 <handle_coda_error@@Base>
   1635c:	vldr	d16, [sp, #16]
   16360:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16364:	vmov	r2, r3, d16
   16368:	cmp	r0, #8
   1636c:	bne	16784 <print_json_data@@Base+0x844>
   16370:	movw	r0, #41371	; 0xa19b
   16374:	movt	r0, #1
   16378:	bl	16918 <print_json_data@@Base+0x9d8>
   1637c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16380:	cmp	r0, #0
   16384:	bne	166f8 <print_json_data@@Base+0x7b8>
   16388:	b	16704 <print_json_data@@Base+0x7c4>
   1638c:	add	r1, sp, #8
   16390:	mov	r0, r4
   16394:	bl	129ac <coda_cursor_read_int64@plt>
   16398:	cmp	r0, #0
   1639c:	beq	163a4 <print_json_data@@Base+0x464>
   163a0:	bl	184f8 <handle_coda_error@@Base>
   163a4:	ldr	r0, [sp, #8]
   163a8:	ldr	r1, [sp, #12]
   163ac:	add	r4, sp, #16
   163b0:	mov	r2, r4
   163b4:	bl	12aa8 <coda_str64@plt>
   163b8:	b	163e8 <print_json_data@@Base+0x4a8>
   163bc:	add	r1, sp, #8
   163c0:	mov	r0, r4
   163c4:	bl	12898 <coda_cursor_read_uint64@plt>
   163c8:	cmp	r0, #0
   163cc:	beq	163d4 <print_json_data@@Base+0x494>
   163d0:	bl	184f8 <handle_coda_error@@Base>
   163d4:	ldr	r0, [sp, #8]
   163d8:	ldr	r1, [sp, #12]
   163dc:	add	r4, sp, #16
   163e0:	mov	r2, r4
   163e4:	bl	126e8 <coda_str64u@plt>
   163e8:	movw	r0, #43185	; 0xa8b1
   163ec:	mov	r1, r4
   163f0:	movt	r0, #1
   163f4:	bl	16918 <print_json_data@@Base+0x9d8>
   163f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163fc:	cmp	r0, #0
   16400:	bne	166f8 <print_json_data@@Base+0x7b8>
   16404:	b	16704 <print_json_data@@Base+0x7c4>
   16408:	add	r1, sp, #16
   1640c:	mov	r0, r4
   16410:	bl	12904 <coda_cursor_read_char@plt>
   16414:	cmp	r0, #0
   16418:	beq	16420 <print_json_data@@Base+0x4e0>
   1641c:	bl	184f8 <handle_coda_error@@Base>
   16420:	movw	r4, #42996	; 0xa7f4
   16424:	movt	r4, #1
   16428:	mov	r0, r4
   1642c:	bl	16918 <print_json_data@@Base+0x9d8>
   16430:	add	r0, sp, #16
   16434:	mov	r1, #1
   16438:	bl	16960 <print_json_data@@Base+0xa20>
   1643c:	mov	r0, r4
   16440:	bl	16918 <print_json_data@@Base+0x9d8>
   16444:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16448:	cmp	r0, #0
   1644c:	bne	166f8 <print_json_data@@Base+0x7b8>
   16450:	b	16704 <print_json_data@@Base+0x7c4>
   16454:	add	r1, sp, #16
   16458:	mov	r0, r4
   1645c:	bl	1288c <coda_cursor_get_string_length@plt>
   16460:	cmp	r0, #0
   16464:	beq	1646c <print_json_data@@Base+0x52c>
   16468:	bl	184f8 <handle_coda_error@@Base>
   1646c:	ldr	r0, [sp, #16]
   16470:	add	r6, r0, #1
   16474:	mov	r0, r6
   16478:	bl	1282c <malloc@plt>
   1647c:	mov	r5, r0
   16480:	cmp	r0, #0
   16484:	bne	164b8 <print_json_data@@Base+0x578>
   16488:	movw	r1, #41209	; 0xa0f9
   1648c:	movw	r3, #42849	; 0xa761
   16490:	movw	r0, #303	; 0x12f
   16494:	mov	r2, r6
   16498:	str	r0, [sp]
   1649c:	movt	r1, #1
   164a0:	movt	r3, #1
   164a4:	mvn	r0, #0
   164a8:	bl	126ac <coda_set_error@plt>
   164ac:	bl	184f8 <handle_coda_error@@Base>
   164b0:	ldr	r0, [sp, #16]
   164b4:	add	r6, r0, #1
   164b8:	mov	r0, r4
   164bc:	mov	r1, r5
   164c0:	mov	r2, r6
   164c4:	bl	12850 <coda_cursor_read_string@plt>
   164c8:	cmp	r0, #0
   164cc:	beq	164d4 <print_json_data@@Base+0x594>
   164d0:	bl	184f8 <handle_coda_error@@Base>
   164d4:	movw	r4, #42996	; 0xa7f4
   164d8:	movt	r4, #1
   164dc:	mov	r0, r4
   164e0:	bl	16918 <print_json_data@@Base+0x9d8>
   164e4:	ldr	r1, [sp, #16]
   164e8:	mov	r0, r5
   164ec:	bl	16960 <print_json_data@@Base+0xa20>
   164f0:	ldr	r1, [sp, #16]
   164f4:	mov	r0, r4
   164f8:	bl	16918 <print_json_data@@Base+0x9d8>
   164fc:	mov	r0, r5
   16500:	bl	126f4 <free@plt>
   16504:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16508:	cmp	r0, #0
   1650c:	bne	166f8 <print_json_data@@Base+0x7b8>
   16510:	b	16704 <print_json_data@@Base+0x7c4>
   16514:	add	r1, sp, #16
   16518:	mov	r0, r4
   1651c:	bl	12a0c <coda_cursor_get_bit_size@plt>
   16520:	cmp	r0, #0
   16524:	beq	1652c <print_json_data@@Base+0x5ec>
   16528:	bl	184f8 <handle_coda_error@@Base>
   1652c:	ldr	r7, [sp, #16]
   16530:	ldr	r6, [sp, #20]
   16534:	lsr	r0, r7, #3
   16538:	tst	r7, #7
   1653c:	orr	r5, r0, r6, lsl #29
   16540:	addne	r5, r5, #1
   16544:	mov	r0, r5
   16548:	bl	1282c <malloc@plt>
   1654c:	mov	r8, r0
   16550:	cmp	r0, #0
   16554:	bne	16588 <print_json_data@@Base+0x648>
   16558:	movw	r1, #41209	; 0xa0f9
   1655c:	movw	r3, #42849	; 0xa761
   16560:	movw	r0, #334	; 0x14e
   16564:	mov	r2, r5
   16568:	str	r0, [sp]
   1656c:	movt	r1, #1
   16570:	movt	r3, #1
   16574:	mvn	r0, #0
   16578:	bl	126ac <coda_set_error@plt>
   1657c:	bl	184f8 <handle_coda_error@@Base>
   16580:	ldr	r7, [sp, #16]
   16584:	ldr	r6, [sp, #20]
   16588:	mov	r0, r4
   1658c:	mov	r1, r8
   16590:	mov	r2, #0
   16594:	mov	r3, #0
   16598:	str	r7, [sp]
   1659c:	str	r6, [sp, #4]
   165a0:	bl	12a9c <coda_cursor_read_bits@plt>
   165a4:	cmp	r0, #0
   165a8:	beq	165b0 <print_json_data@@Base+0x670>
   165ac:	bl	184f8 <handle_coda_error@@Base>
   165b0:	movw	r4, #42996	; 0xa7f4
   165b4:	movt	r4, #1
   165b8:	mov	r0, r4
   165bc:	bl	16918 <print_json_data@@Base+0x9d8>
   165c0:	mov	r0, r8
   165c4:	mov	r1, r5
   165c8:	bl	16960 <print_json_data@@Base+0xa20>
   165cc:	mov	r0, r4
   165d0:	bl	16918 <print_json_data@@Base+0x9d8>
   165d4:	mov	r0, r8
   165d8:	bl	126f4 <free@plt>
   165dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   165e0:	cmp	r0, #0
   165e4:	bne	166f8 <print_json_data@@Base+0x7b8>
   165e8:	b	16704 <print_json_data@@Base+0x7c4>
   165ec:	mov	r0, r4
   165f0:	bl	127f0 <coda_cursor_goto_first_record_field@plt>
   165f4:	cmp	r0, #0
   165f8:	beq	16600 <print_json_data@@Base+0x6c0>
   165fc:	bl	184f8 <handle_coda_error@@Base>
   16600:	ldr	r0, [sp, #16]
   16604:	mov	r1, #0
   16608:	str	r1, [fp, #-40]	; 0xffffffd8
   1660c:	cmp	r0, #1
   16610:	blt	166d8 <print_json_data@@Base+0x798>
   16614:	movw	r8, #41928	; 0xa3c8
   16618:	movw	r6, #42841	; 0xa759
   1661c:	mov	r7, #1
   16620:	add	r5, sp, #48	; 0x30
   16624:	sub	r9, fp, #44	; 0x2c
   16628:	movt	r8, #1
   1662c:	movt	r6, #1
   16630:	ldr	r0, [sp, #8]
   16634:	mov	r2, r5
   16638:	bl	1267c <coda_type_get_record_field_hidden_status@plt>
   1663c:	cmp	r0, #0
   16640:	beq	16648 <print_json_data@@Base+0x708>
   16644:	bl	184f8 <handle_coda_error@@Base>
   16648:	ldr	r0, [sp, #48]	; 0x30
   1664c:	cmp	r0, #0
   16650:	bne	16698 <print_json_data@@Base+0x758>
   16654:	cmp	r7, #0
   16658:	bne	16664 <print_json_data@@Base+0x724>
   1665c:	mov	r0, r8
   16660:	bl	16918 <print_json_data@@Base+0x9d8>
   16664:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16668:	ldr	r0, [sp, #8]
   1666c:	mov	r2, r9
   16670:	bl	12a78 <coda_type_get_record_field_name@plt>
   16674:	cmp	r0, #0
   16678:	beq	16680 <print_json_data@@Base+0x740>
   1667c:	bl	184f8 <handle_coda_error@@Base>
   16680:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16684:	mov	r0, r6
   16688:	bl	16918 <print_json_data@@Base+0x9d8>
   1668c:	mov	r0, r4
   16690:	bl	1601c <print_json_data@@Base+0xdc>
   16694:	mov	r7, #0
   16698:	ldr	r0, [sp, #16]
   1669c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   166a0:	sub	r0, r0, #1
   166a4:	cmp	r1, r0
   166a8:	bge	166c0 <print_json_data@@Base+0x780>
   166ac:	mov	r0, r4
   166b0:	bl	129e8 <coda_cursor_goto_next_record_field@plt>
   166b4:	cmp	r0, #0
   166b8:	beq	166c0 <print_json_data@@Base+0x780>
   166bc:	bl	184f8 <handle_coda_error@@Base>
   166c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   166c4:	add	r1, r0, #1
   166c8:	ldr	r0, [sp, #16]
   166cc:	str	r1, [fp, #-40]	; 0xffffffd8
   166d0:	cmp	r1, r0
   166d4:	blt	16630 <print_json_data@@Base+0x6f0>
   166d8:	mov	r0, r4
   166dc:	bl	1285c <coda_cursor_goto_parent@plt>
   166e0:	movw	r0, #42847	; 0xa75f
   166e4:	movt	r0, #1
   166e8:	bl	16918 <print_json_data@@Base+0x9d8>
   166ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   166f0:	cmp	r0, #0
   166f4:	beq	16704 <print_json_data@@Base+0x7c4>
   166f8:	movw	r0, #42847	; 0xa75f
   166fc:	movt	r0, #1
   16700:	bl	16918 <print_json_data@@Base+0x9d8>
   16704:	sub	sp, fp, #24
   16708:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1670c:	mov	r6, #1
   16710:	mov	r0, r4
   16714:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   16718:	cmp	r0, #0
   1671c:	bne	16850 <print_json_data@@Base+0x910>
   16720:	b	16854 <print_json_data@@Base+0x914>
   16724:	add	r1, sp, #16
   16728:	mov	r0, r4
   1672c:	bl	128a4 <coda_cursor_read_double@plt>
   16730:	cmp	r0, #0
   16734:	beq	1673c <print_json_data@@Base+0x7fc>
   16738:	bl	184f8 <handle_coda_error@@Base>
   1673c:	vldr	d16, [sp, #16]
   16740:	b	16780 <print_json_data@@Base+0x840>
   16744:	add	r1, sp, #8
   16748:	mov	r0, r4
   1674c:	bl	128a4 <coda_cursor_read_double@plt>
   16750:	cmp	r0, #0
   16754:	beq	1675c <print_json_data@@Base+0x81c>
   16758:	bl	184f8 <handle_coda_error@@Base>
   1675c:	vldr	d0, [sp, #8]
   16760:	bl	128b0 <coda_isNaN@plt>
   16764:	cmp	r0, #0
   16768:	bne	1677c <print_json_data@@Base+0x83c>
   1676c:	vldr	d0, [sp, #8]
   16770:	bl	12754 <coda_isInf@plt>
   16774:	cmp	r0, #0
   16778:	beq	168c0 <print_json_data@@Base+0x980>
   1677c:	vldr	d16, [sp, #8]
   16780:	vmov	r2, r3, d16
   16784:	movw	r0, #41376	; 0xa1a0
   16788:	movt	r0, #1
   1678c:	bl	16918 <print_json_data@@Base+0x9d8>
   16790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16794:	cmp	r0, #0
   16798:	bne	166f8 <print_json_data@@Base+0x7b8>
   1679c:	b	16704 <print_json_data@@Base+0x7c4>
   167a0:	add	r1, sp, #16
   167a4:	add	r2, sp, #8
   167a8:	mov	r0, r4
   167ac:	bl	1294c <coda_cursor_read_complex_double_split@plt>
   167b0:	cmp	r0, #0
   167b4:	beq	167bc <print_json_data@@Base+0x87c>
   167b8:	bl	184f8 <handle_coda_error@@Base>
   167bc:	vldr	d16, [sp, #16]
   167c0:	vldr	d17, [sp, #8]
   167c4:	movw	r0, #42984	; 0xa7e8
   167c8:	movt	r0, #1
   167cc:	vmov	r2, r3, d16
   167d0:	vstr	d17, [sp]
   167d4:	bl	16918 <print_json_data@@Base+0x9d8>
   167d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   167dc:	cmp	r0, #0
   167e0:	bne	166f8 <print_json_data@@Base+0x7b8>
   167e4:	b	16704 <print_json_data@@Base+0x7c4>
   167e8:	bic	r1, r0, #3
   167ec:	vmov.i32	q8, #1	; 0x00000001
   167f0:	mov	r2, r1
   167f4:	vld1.32	{d18-d19}, [r5]!
   167f8:	subs	r2, r2, #4
   167fc:	vmul.i32	q8, q9, q8
   16800:	bne	167f4 <print_json_data@@Base+0x8b4>
   16804:	vext.8	q9, q8, q8, #8
   16808:	cmp	r0, r1
   1680c:	vmul.i32	q0, q8, q9
   16810:	vmul.i32	q8, q0, d0[1]
   16814:	vmov.32	r6, d16[0]
   16818:	beq	16838 <print_json_data@@Base+0x8f8>
   1681c:	add	r2, sp, #16
   16820:	sub	r0, r0, r1
   16824:	add	r1, r2, r1, lsl #2
   16828:	ldr	r2, [r1], #4
   1682c:	subs	r0, r0, #1
   16830:	mul	r6, r2, r6
   16834:	bne	16828 <print_json_data@@Base+0x8e8>
   16838:	cmp	r6, #1
   1683c:	blt	168a4 <print_json_data@@Base+0x964>
   16840:	mov	r0, r4
   16844:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   16848:	cmp	r0, #0
   1684c:	beq	16854 <print_json_data@@Base+0x914>
   16850:	bl	184f8 <handle_coda_error@@Base>
   16854:	movw	r8, #41928	; 0xa3c8
   16858:	sub	r7, r6, #1
   1685c:	mov	r5, #0
   16860:	movt	r8, #1
   16864:	mov	r0, r4
   16868:	bl	1601c <print_json_data@@Base+0xdc>
   1686c:	cmp	r5, r7
   16870:	bge	16890 <print_json_data@@Base+0x950>
   16874:	mov	r0, r8
   16878:	bl	16918 <print_json_data@@Base+0x9d8>
   1687c:	mov	r0, r4
   16880:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   16884:	cmp	r0, #0
   16888:	beq	16890 <print_json_data@@Base+0x950>
   1688c:	bl	184f8 <handle_coda_error@@Base>
   16890:	add	r5, r5, #1
   16894:	cmp	r6, r5
   16898:	bne	16864 <print_json_data@@Base+0x924>
   1689c:	mov	r0, r4
   168a0:	bl	1285c <coda_cursor_goto_parent@plt>
   168a4:	movw	r0, #43248	; 0xa8f0
   168a8:	movt	r0, #1
   168ac:	bl	16918 <print_json_data@@Base+0x9d8>
   168b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   168b4:	cmp	r0, #0
   168b8:	bne	166f8 <print_json_data@@Base+0x7b8>
   168bc:	b	16704 <print_json_data@@Base+0x7c4>
   168c0:	vldr	d0, [sp, #8]
   168c4:	movw	r0, #42928	; 0xa7b0
   168c8:	add	r1, sp, #16
   168cc:	movt	r0, #1
   168d0:	bl	126d0 <coda_time_double_to_string@plt>
   168d4:	cmp	r0, #0
   168d8:	beq	168f8 <print_json_data@@Base+0x9b8>
   168dc:	movw	r0, #42957	; 0xa7cd
   168e0:	movt	r0, #1
   168e4:	bl	16918 <print_json_data@@Base+0x9d8>
   168e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   168ec:	cmp	r0, #0
   168f0:	bne	166f8 <print_json_data@@Base+0x7b8>
   168f4:	b	16704 <print_json_data@@Base+0x7c4>
   168f8:	movw	r0, #43251	; 0xa8f3
   168fc:	add	r1, sp, #16
   16900:	movt	r0, #1
   16904:	bl	16918 <print_json_data@@Base+0x9d8>
   16908:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1690c:	cmp	r0, #0
   16910:	bne	166f8 <print_json_data@@Base+0x7b8>
   16914:	b	16704 <print_json_data@@Base+0x7c4>
   16918:	sub	sp, sp, #12
   1691c:	push	{fp, lr}
   16920:	mov	fp, sp
   16924:	sub	sp, sp, #4
   16928:	mov	ip, r0
   1692c:	add	r0, fp, #8
   16930:	stm	r0, {r1, r2, r3}
   16934:	movw	r0, #53392	; 0xd090
   16938:	add	r2, fp, #8
   1693c:	mov	r1, ip
   16940:	movt	r0, #2
   16944:	str	r2, [sp]
   16948:	ldr	r0, [r0]
   1694c:	bl	129b8 <vfprintf@plt>
   16950:	mov	sp, fp
   16954:	pop	{fp, lr}
   16958:	add	sp, sp, #12
   1695c:	bx	lr
   16960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16964:	add	fp, sp, #28
   16968:	sub	sp, sp, #4
   1696c:	cmp	r1, #1
   16970:	blt	16b24 <print_json_data@@Base+0xbe4>
   16974:	movw	r6, #41343	; 0xa17f
   16978:	movw	r8, #41346	; 0xa182
   1697c:	movw	r9, #41352	; 0xa188
   16980:	movw	sl, #41355	; 0xa18b
   16984:	movw	r7, #42995	; 0xa7f3
   16988:	mov	r4, r1
   1698c:	mov	r5, r0
   16990:	movt	r6, #1
   16994:	movt	r8, #1
   16998:	movt	r9, #1
   1699c:	movt	sl, #1
   169a0:	movt	r7, #1
   169a4:	ldrb	r1, [r5]
   169a8:	sub	r0, r1, #8
   169ac:	cmp	r0, #26
   169b0:	bhi	16a44 <print_json_data@@Base+0xb04>
   169b4:	add	r2, pc, #0
   169b8:	ldr	pc, [r2, r0, lsl #2]
   169bc:	andeq	r6, r1, r8, lsr #20
   169c0:	muleq	r1, r4, sl
   169c4:	andeq	r6, r1, ip, lsr #21
   169c8:	andeq	r6, r1, r8, ror #20
   169cc:	andeq	r6, r1, r4, asr #21
   169d0:	ldrdeq	r6, [r1], -ip
   169d4:	andeq	r6, r1, r8, ror #20
   169d8:	andeq	r6, r1, r8, ror #20
   169dc:	andeq	r6, r1, r8, ror #20
   169e0:	andeq	r6, r1, r8, ror #20
   169e4:	andeq	r6, r1, r8, ror #20
   169e8:	andeq	r6, r1, r8, ror #20
   169ec:	andeq	r6, r1, r8, ror #20
   169f0:	andeq	r6, r1, r8, ror #20
   169f4:	andeq	r6, r1, r8, ror #20
   169f8:	andeq	r6, r1, r8, ror #20
   169fc:	andeq	r6, r1, r8, ror #20
   16a00:	andeq	r6, r1, r8, ror #20
   16a04:	andeq	r6, r1, r8, ror #20
   16a08:	andeq	r6, r1, r8, ror #20
   16a0c:	andeq	r6, r1, r8, ror #20
   16a10:	andeq	r6, r1, r8, ror #20
   16a14:	andeq	r6, r1, r8, ror #20
   16a18:	andeq	r6, r1, r8, ror #20
   16a1c:	andeq	r6, r1, r8, ror #20
   16a20:	andeq	r6, r1, r8, ror #20
   16a24:	strdeq	r6, [r1], -r4
   16a28:	movw	r0, #41340	; 0xa17c
   16a2c:	movt	r0, #1
   16a30:	bl	16918 <print_json_data@@Base+0x9d8>
   16a34:	subs	r4, r4, #1
   16a38:	add	r5, r5, #1
   16a3c:	bne	169a4 <print_json_data@@Base+0xa64>
   16a40:	b	16b24 <print_json_data@@Base+0xbe4>
   16a44:	cmp	r1, #92	; 0x5c
   16a48:	bne	16a68 <print_json_data@@Base+0xb28>
   16a4c:	movw	r0, #41358	; 0xa18e
   16a50:	movt	r0, #1
   16a54:	bl	16918 <print_json_data@@Base+0x9d8>
   16a58:	subs	r4, r4, #1
   16a5c:	add	r5, r5, #1
   16a60:	bne	169a4 <print_json_data@@Base+0xa64>
   16a64:	b	16b24 <print_json_data@@Base+0xbe4>
   16a68:	sub	r0, r1, #32
   16a6c:	uxtb	r0, r0
   16a70:	cmp	r0, #94	; 0x5e
   16a74:	bhi	16b0c <print_json_data@@Base+0xbcc>
   16a78:	movw	r0, #41777	; 0xa331
   16a7c:	movt	r0, #1
   16a80:	bl	16918 <print_json_data@@Base+0x9d8>
   16a84:	subs	r4, r4, #1
   16a88:	add	r5, r5, #1
   16a8c:	bne	169a4 <print_json_data@@Base+0xa64>
   16a90:	b	16b24 <print_json_data@@Base+0xbe4>
   16a94:	mov	r0, r6
   16a98:	bl	16918 <print_json_data@@Base+0x9d8>
   16a9c:	subs	r4, r4, #1
   16aa0:	add	r5, r5, #1
   16aa4:	bne	169a4 <print_json_data@@Base+0xa64>
   16aa8:	b	16b24 <print_json_data@@Base+0xbe4>
   16aac:	mov	r0, r8
   16ab0:	bl	16918 <print_json_data@@Base+0x9d8>
   16ab4:	subs	r4, r4, #1
   16ab8:	add	r5, r5, #1
   16abc:	bne	169a4 <print_json_data@@Base+0xa64>
   16ac0:	b	16b24 <print_json_data@@Base+0xbe4>
   16ac4:	mov	r0, r9
   16ac8:	bl	16918 <print_json_data@@Base+0x9d8>
   16acc:	subs	r4, r4, #1
   16ad0:	add	r5, r5, #1
   16ad4:	bne	169a4 <print_json_data@@Base+0xa64>
   16ad8:	b	16b24 <print_json_data@@Base+0xbe4>
   16adc:	mov	r0, sl
   16ae0:	bl	16918 <print_json_data@@Base+0x9d8>
   16ae4:	subs	r4, r4, #1
   16ae8:	add	r5, r5, #1
   16aec:	bne	169a4 <print_json_data@@Base+0xa64>
   16af0:	b	16b24 <print_json_data@@Base+0xbe4>
   16af4:	mov	r0, r7
   16af8:	bl	16918 <print_json_data@@Base+0x9d8>
   16afc:	subs	r4, r4, #1
   16b00:	add	r5, r5, #1
   16b04:	bne	169a4 <print_json_data@@Base+0xa64>
   16b08:	b	16b24 <print_json_data@@Base+0xbe4>
   16b0c:	movw	r0, #42998	; 0xa7f6
   16b10:	movt	r0, #1
   16b14:	bl	16918 <print_json_data@@Base+0x9d8>
   16b18:	subs	r4, r4, #1
   16b1c:	add	r5, r5, #1
   16b20:	bne	169a4 <print_json_data@@Base+0xa64>
   16b24:	sub	sp, fp, #28
   16b28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016b2c <print_full_field_name@@Base>:
   16b2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b30:	add	fp, sp, #28
   16b34:	sub	sp, sp, #12
   16b38:	mov	sl, r2
   16b3c:	mov	r4, r0
   16b40:	cmp	r1, #1
   16b44:	bne	16c68 <print_full_field_name@@Base+0x13c>
   16b48:	movw	r5, #49640	; 0xc1e8
   16b4c:	mov	r6, #0
   16b50:	str	sl, [sp]
   16b54:	movt	r5, #2
   16b58:	ldr	r0, [r5, #136]	; 0x88
   16b5c:	cmp	r0, #1
   16b60:	blt	16c34 <print_full_field_name@@Base+0x108>
   16b64:	movw	r9, #43005	; 0xa7fd
   16b68:	add	sl, sp, #8
   16b6c:	mov	r7, #0
   16b70:	mov	r8, #0
   16b74:	movt	r9, #1
   16b78:	add	r0, r5, r8, lsl #2
   16b7c:	mov	r1, sl
   16b80:	ldr	r0, [r0, #8]
   16b84:	bl	12ac0 <coda_type_get_class@plt>
   16b88:	cmp	r0, #0
   16b8c:	beq	16b94 <print_full_field_name@@Base+0x68>
   16b90:	bl	184f8 <handle_coda_error@@Base>
   16b94:	ldr	r0, [sp, #8]
   16b98:	cmp	r0, #1
   16b9c:	beq	16bd4 <print_full_field_name@@Base+0xa8>
   16ba0:	cmp	r0, #0
   16ba4:	bne	16bc0 <print_full_field_name@@Base+0x94>
   16ba8:	add	r0, r5, r7, lsl #2
   16bac:	mov	r1, r9
   16bb0:	ldr	r2, [r0, #3620]	; 0xe24
   16bb4:	mov	r0, r4
   16bb8:	bl	128bc <fprintf@plt>
   16bbc:	add	r7, r7, #1
   16bc0:	ldr	r0, [r5, #136]	; 0x88
   16bc4:	add	r8, r8, #1
   16bc8:	cmp	r8, r0
   16bcc:	blt	16b78 <print_full_field_name@@Base+0x4c>
   16bd0:	b	16c34 <print_full_field_name@@Base+0x108>
   16bd4:	cmp	r8, #0
   16bd8:	bne	16be8 <print_full_field_name@@Base+0xbc>
   16bdc:	mov	r0, #47	; 0x2f
   16be0:	mov	r1, r4
   16be4:	bl	129f4 <fputc@plt>
   16be8:	add	r0, r6, r6, lsl #2
   16bec:	add	r0, r5, r0, lsl #4
   16bf0:	ldr	r0, [r0, #804]	; 0x324
   16bf4:	cmp	r0, #1
   16bf8:	blt	16c20 <print_full_field_name@@Base+0xf4>
   16bfc:	mov	r0, #91	; 0x5b
   16c00:	mov	r1, r4
   16c04:	bl	129f4 <fputc@plt>
   16c08:	mov	r0, r4
   16c0c:	mov	r1, r6
   16c10:	bl	16de8 <print_full_field_name@@Base+0x2bc>
   16c14:	mov	r0, #93	; 0x5d
   16c18:	mov	r1, r4
   16c1c:	bl	129f4 <fputc@plt>
   16c20:	add	r6, r6, #1
   16c24:	ldr	r0, [r5, #136]	; 0x88
   16c28:	add	r8, r8, #1
   16c2c:	cmp	r8, r0
   16c30:	blt	16b78 <print_full_field_name@@Base+0x4c>
   16c34:	ldr	r0, [sp]
   16c38:	cmp	r0, #0
   16c3c:	beq	16de0 <print_full_field_name@@Base+0x2b4>
   16c40:	ldr	r0, [r5, #3360]	; 0xd20
   16c44:	cmp	r6, r0
   16c48:	bge	16de0 <print_full_field_name@@Base+0x2b4>
   16c4c:	mov	r0, #91	; 0x5b
   16c50:	mov	r1, r4
   16c54:	bl	129f4 <fputc@plt>
   16c58:	mov	r0, r4
   16c5c:	mov	r1, r6
   16c60:	bl	16de8 <print_full_field_name@@Base+0x2bc>
   16c64:	b	16dd4 <print_full_field_name@@Base+0x2a8>
   16c68:	movw	r7, #49640	; 0xc1e8
   16c6c:	mov	r5, r1
   16c70:	movt	r7, #2
   16c74:	ldr	r0, [r7, #3748]	; 0xea4
   16c78:	cmp	r0, #1
   16c7c:	blt	16cb8 <print_full_field_name@@Base+0x18c>
   16c80:	mov	r6, #0
   16c84:	cmp	r6, #0
   16c88:	beq	16c98 <print_full_field_name@@Base+0x16c>
   16c8c:	mov	r0, #46	; 0x2e
   16c90:	mov	r1, r4
   16c94:	bl	129f4 <fputc@plt>
   16c98:	add	r0, r7, r6, lsl #2
   16c9c:	mov	r1, r4
   16ca0:	ldr	r0, [r0, #3620]	; 0xe24
   16ca4:	bl	12a84 <fputs@plt>
   16ca8:	ldr	r0, [r7, #3748]	; 0xea4
   16cac:	add	r6, r6, #1
   16cb0:	cmp	r6, r0
   16cb4:	blt	16c84 <print_full_field_name@@Base+0x158>
   16cb8:	cmp	r5, #2
   16cbc:	bne	16de0 <print_full_field_name@@Base+0x2b4>
   16cc0:	ldr	r0, [r7, #136]	; 0x88
   16cc4:	mov	r6, #0
   16cc8:	cmp	r0, #1
   16ccc:	blt	16d6c <print_full_field_name@@Base+0x240>
   16cd0:	movw	r9, #43009	; 0xa801
   16cd4:	add	r8, sp, #4
   16cd8:	mov	r5, #0
   16cdc:	movt	r9, #1
   16ce0:	add	r0, r7, r5, lsl #2
   16ce4:	mov	r1, r8
   16ce8:	ldr	r0, [r0, #8]
   16cec:	bl	12ac0 <coda_type_get_class@plt>
   16cf0:	cmp	r0, #0
   16cf4:	beq	16cfc <print_full_field_name@@Base+0x1d0>
   16cf8:	bl	184f8 <handle_coda_error@@Base>
   16cfc:	ldr	r0, [sp, #4]
   16d00:	cmp	r0, #1
   16d04:	bne	16d5c <print_full_field_name@@Base+0x230>
   16d08:	add	r0, r6, r6, lsl #2
   16d0c:	add	r0, r7, r0, lsl #4
   16d10:	ldr	r1, [r0, #804]	; 0x324
   16d14:	cmp	r1, #1
   16d18:	blt	16d5c <print_full_field_name@@Base+0x230>
   16d1c:	ldr	r0, [r0, #800]	; 0x320
   16d20:	cmp	r0, #0
   16d24:	beq	16d38 <print_full_field_name@@Base+0x20c>
   16d28:	mov	r0, #44	; 0x2c
   16d2c:	mov	r1, r4
   16d30:	bl	129f4 <fputc@plt>
   16d34:	b	16d4c <print_full_field_name@@Base+0x220>
   16d38:	mov	r0, r9
   16d3c:	mov	r1, #2
   16d40:	mov	r2, #1
   16d44:	mov	r3, r4
   16d48:	bl	127d8 <fwrite@plt>
   16d4c:	mov	r0, r4
   16d50:	mov	r1, r6
   16d54:	bl	16de8 <print_full_field_name@@Base+0x2bc>
   16d58:	add	r6, r6, #1
   16d5c:	ldr	r0, [r7, #136]	; 0x88
   16d60:	add	r5, r5, #1
   16d64:	cmp	r5, r0
   16d68:	blt	16ce0 <print_full_field_name@@Base+0x1b4>
   16d6c:	cmp	sl, #0
   16d70:	beq	16dcc <print_full_field_name@@Base+0x2a0>
   16d74:	ldr	r0, [r7, #3360]	; 0xd20
   16d78:	cmp	r6, r0
   16d7c:	bge	16dcc <print_full_field_name@@Base+0x2a0>
   16d80:	add	r0, r6, r6, lsl #2
   16d84:	add	r0, r7, r0, lsl #4
   16d88:	ldr	r0, [r0, #800]	; 0x320
   16d8c:	cmp	r0, #0
   16d90:	beq	16da4 <print_full_field_name@@Base+0x278>
   16d94:	mov	r0, #44	; 0x2c
   16d98:	mov	r1, r4
   16d9c:	bl	129f4 <fputc@plt>
   16da0:	b	16dbc <print_full_field_name@@Base+0x290>
   16da4:	movw	r0, #43009	; 0xa801
   16da8:	mov	r1, #2
   16dac:	mov	r2, #1
   16db0:	mov	r3, r4
   16db4:	movt	r0, #1
   16db8:	bl	127d8 <fwrite@plt>
   16dbc:	mov	r0, r4
   16dc0:	mov	r1, r6
   16dc4:	bl	16de8 <print_full_field_name@@Base+0x2bc>
   16dc8:	add	r6, r6, #1
   16dcc:	cmp	r6, #1
   16dd0:	blt	16de0 <print_full_field_name@@Base+0x2b4>
   16dd4:	mov	r0, #93	; 0x5d
   16dd8:	mov	r1, r4
   16ddc:	bl	129f4 <fputc@plt>
   16de0:	sub	sp, fp, #28
   16de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16de8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16dec:	add	fp, sp, #28
   16df0:	sub	sp, sp, #4
   16df4:	mov	r4, r0
   16df8:	add	r0, r1, r1, lsl #2
   16dfc:	movw	r1, #49640	; 0xc1e8
   16e00:	movt	r1, #2
   16e04:	add	r0, r1, r0, lsl #4
   16e08:	mov	r7, r0
   16e0c:	ldr	r1, [r7, #804]!	; 0x324
   16e10:	cmp	r1, #1
   16e14:	blt	16ee8 <print_full_field_name@@Base+0x3bc>
   16e18:	movw	r8, #49636	; 0xc1e4
   16e1c:	movw	r9, #53424	; 0xd0b0
   16e20:	add	sl, r0, #808	; 0x328
   16e24:	add	r5, r0, #800	; 0x320
   16e28:	mov	r6, #0
   16e2c:	movt	r8, #2
   16e30:	movt	r9, #2
   16e34:	cmp	r6, #0
   16e38:	beq	16e48 <print_full_field_name@@Base+0x31c>
   16e3c:	mov	r0, #44	; 0x2c
   16e40:	mov	r1, r4
   16e44:	bl	129f4 <fputc@plt>
   16e48:	ldr	r0, [r8]
   16e4c:	cmp	r0, #0
   16e50:	beq	16e98 <print_full_field_name@@Base+0x36c>
   16e54:	ldr	r0, [r5]
   16e58:	add	r0, r6, r0
   16e5c:	add	r0, r9, r0, lsl #2
   16e60:	ldr	r1, [r0, #72]	; 0x48
   16e64:	cmp	r1, #0
   16e68:	beq	16ec4 <print_full_field_name@@Base+0x398>
   16e6c:	ldr	r3, [r0, #4]
   16e70:	ldr	r2, [r0, #36]	; 0x24
   16e74:	movw	r1, #43012	; 0xa804
   16e78:	mov	r0, r4
   16e7c:	movt	r1, #1
   16e80:	bl	128bc <fprintf@plt>
   16e84:	ldr	r0, [r7]
   16e88:	add	r6, r6, #1
   16e8c:	cmp	r6, r0
   16e90:	blt	16e34 <print_full_field_name@@Base+0x308>
   16e94:	b	16ee8 <print_full_field_name@@Base+0x3bc>
   16e98:	ldr	r2, [sl, r6, lsl #2]
   16e9c:	cmn	r2, #1
   16ea0:	bne	16ec8 <print_full_field_name@@Base+0x39c>
   16ea4:	mov	r0, #63	; 0x3f
   16ea8:	mov	r1, r4
   16eac:	bl	129f4 <fputc@plt>
   16eb0:	ldr	r0, [r7]
   16eb4:	add	r6, r6, #1
   16eb8:	cmp	r6, r0
   16ebc:	blt	16e34 <print_full_field_name@@Base+0x308>
   16ec0:	b	16ee8 <print_full_field_name@@Base+0x3bc>
   16ec4:	ldr	r2, [r0, #4]
   16ec8:	movw	r1, #43016	; 0xa808
   16ecc:	mov	r0, r4
   16ed0:	movt	r1, #1
   16ed4:	bl	128bc <fprintf@plt>
   16ed8:	ldr	r0, [r7]
   16edc:	add	r6, r6, #1
   16ee0:	cmp	r6, r0
   16ee4:	blt	16e34 <print_full_field_name@@Base+0x308>
   16ee8:	sub	sp, fp, #28
   16eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016ef0 <traverse_info_init@@Base>:
   16ef0:	movw	r0, #49640	; 0xc1e8
   16ef4:	mov	r1, #0
   16ef8:	movt	r0, #2
   16efc:	str	r1, [r0, #136]	; 0x88
   16f00:	str	r1, [r0, #4]
   16f04:	str	r1, [r0, #3360]	; 0xd20
   16f08:	str	r1, [r0, #3748]	; 0xea4
   16f0c:	bx	lr

00016f10 <traverse_info_done@@Base>:
   16f10:	push	{r4, sl, fp, lr}
   16f14:	add	fp, sp, #8
   16f18:	movw	r4, #49640	; 0xc1e8
   16f1c:	movt	r4, #2
   16f20:	ldr	r0, [r4, #4]
   16f24:	cmp	r0, #0
   16f28:	beq	16f30 <traverse_info_done@@Base+0x20>
   16f2c:	bl	129a0 <coda_close@plt>
   16f30:	ldr	r0, [r4, #664]	; 0x298
   16f34:	cmp	r0, #0
   16f38:	popeq	{r4, sl, fp, pc}
   16f3c:	add	r0, r4, #664	; 0x298
   16f40:	pop	{r4, sl, fp, lr}
   16f44:	b	15a7c <codadump_filter_remove@@Base>

00016f48 <traverse_product@@Base>:
   16f48:	push	{r4, r5, fp, lr}
   16f4c:	add	fp, sp, #8
   16f50:	movw	r5, #49640	; 0xc1e8
   16f54:	movt	r5, #2
   16f58:	mov	r1, r5
   16f5c:	ldr	r0, [r1], #4
   16f60:	bl	126b8 <coda_open@plt>
   16f64:	cmp	r0, #0
   16f68:	beq	16fa8 <traverse_product@@Base+0x60>
   16f6c:	bl	12a60 <coda_get_errno@plt>
   16f70:	ldr	r0, [r0]
   16f74:	cmn	r0, #21
   16f78:	bne	16fa4 <traverse_product@@Base+0x5c>
   16f7c:	mov	r0, #0
   16f80:	bl	12700 <coda_set_option_use_mmap@plt>
   16f84:	mov	r1, r5
   16f88:	ldr	r0, [r1], #4
   16f8c:	bl	126b8 <coda_open@plt>
   16f90:	mov	r4, r0
   16f94:	mov	r0, #1
   16f98:	bl	12700 <coda_set_option_use_mmap@plt>
   16f9c:	cmp	r4, #0
   16fa0:	beq	16fa8 <traverse_product@@Base+0x60>
   16fa4:	bl	184f8 <handle_coda_error@@Base>
   16fa8:	ldr	r1, [r5, #4]
   16fac:	add	r4, r5, #144	; 0x90
   16fb0:	mov	r0, r4
   16fb4:	bl	127e4 <coda_cursor_set_product@plt>
   16fb8:	cmp	r0, #0
   16fbc:	beq	16fc4 <traverse_product@@Base+0x7c>
   16fc0:	bl	184f8 <handle_coda_error@@Base>
   16fc4:	ldr	r0, [r5, #136]	; 0x88
   16fc8:	add	r0, r5, r0, lsl #2
   16fcc:	add	r1, r0, #8
   16fd0:	mov	r0, r4
   16fd4:	bl	1273c <coda_cursor_get_type@plt>
   16fd8:	cmp	r0, #0
   16fdc:	beq	16fe4 <traverse_product@@Base+0x9c>
   16fe0:	bl	184f8 <handle_coda_error@@Base>
   16fe4:	bl	16ffc <traverse_product@@Base+0xb4>
   16fe8:	ldr	r0, [r5, #4]
   16fec:	bl	129a0 <coda_close@plt>
   16ff0:	mov	r0, #0
   16ff4:	str	r0, [r5, #4]
   16ff8:	pop	{r4, r5, fp, pc}
   16ffc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17000:	add	fp, sp, #24
   17004:	sub	sp, sp, #16
   17008:	movw	r6, #49640	; 0xc1e8
   1700c:	add	r1, sp, #12
   17010:	movt	r6, #2
   17014:	ldr	r0, [r6, #136]	; 0x88
   17018:	add	r0, r6, r0, lsl #2
   1701c:	ldr	r0, [r0, #8]
   17020:	bl	12ac0 <coda_type_get_class@plt>
   17024:	cmp	r0, #0
   17028:	beq	17030 <traverse_product@@Base+0xe8>
   1702c:	bl	184f8 <handle_coda_error@@Base>
   17030:	ldr	r0, [sp, #12]
   17034:	cmp	r0, #6
   17038:	bhi	17284 <traverse_product@@Base+0x33c>
   1703c:	add	r1, pc, #0
   17040:	ldr	pc, [r1, r0, lsl #2]
   17044:	strheq	r7, [r1], -ip
   17048:			; <UNDEFINED> instruction: 0x000171b8
   1704c:	andeq	r7, r1, r0, rrx
   17050:	andeq	r7, r1, r0, rrx
   17054:	andeq	r7, r1, r0, rrx
   17058:	andeq	r7, r1, r0, rrx
   1705c:	andeq	r7, r1, r0, lsl r2
   17060:	ldr	r0, [r6, #136]	; 0x88
   17064:	add	r1, sp, #8
   17068:	add	r0, r6, r0, lsl #2
   1706c:	ldr	r0, [r0, #8]
   17070:	bl	12880 <coda_type_get_read_type@plt>
   17074:	cmp	r0, #0
   17078:	beq	17080 <traverse_product@@Base+0x138>
   1707c:	bl	184f8 <handle_coda_error@@Base>
   17080:	ldr	r0, [sp, #8]
   17084:	sub	r0, r0, #11
   17088:	cmp	r0, #1
   1708c:	bhi	17280 <traverse_product@@Base+0x338>
   17090:	bl	14954 <dim_enter_array@@Base>
   17094:	ldr	r0, [r6, #3360]	; 0xd20
   17098:	add	r0, r0, #1
   1709c:	str	r0, [r6, #3360]	; 0xd20
   170a0:	bl	17440 <traverse_product@@Base+0x4f8>
   170a4:	ldr	r0, [r6, #3360]	; 0xd20
   170a8:	sub	r0, r0, #1
   170ac:	str	r0, [r6, #3360]	; 0xd20
   170b0:	bl	15644 <dim_leave_array@@Base>
   170b4:	sub	sp, fp, #24
   170b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   170bc:	ldr	r0, [r6, #136]	; 0x88
   170c0:	cmp	r0, #30
   170c4:	bgt	17284 <traverse_product@@Base+0x33c>
   170c8:	ldr	r1, [r6, #3748]	; 0xea4
   170cc:	add	r0, r6, r0, lsl #2
   170d0:	add	r1, r1, #1
   170d4:	str	r1, [r6, #3748]	; 0xea4
   170d8:	add	r1, sp, #8
   170dc:	ldr	r0, [r0, #8]
   170e0:	bl	12868 <coda_type_get_num_record_fields@plt>
   170e4:	cmp	r0, #0
   170e8:	beq	170f0 <traverse_product@@Base+0x1a8>
   170ec:	bl	184f8 <handle_coda_error@@Base>
   170f0:	ldr	r0, [r6, #136]	; 0x88
   170f4:	add	r0, r0, #1
   170f8:	str	r0, [r6, #136]	; 0x88
   170fc:	ldr	r0, [r6, #796]	; 0x31c
   17100:	add	r0, r6, r0, lsl #2
   17104:	ldr	r8, [r0, #664]	; 0x298
   17108:	cmp	r8, #0
   1710c:	beq	1728c <traverse_product@@Base+0x344>
   17110:	add	r4, sp, #4
   17114:	add	r7, r6, #664	; 0x298
   17118:	mov	r0, r8
   1711c:	bl	15b28 <codadump_filter_get_fieldname@@Base>
   17120:	cmp	r0, #0
   17124:	beq	172e0 <traverse_product@@Base+0x398>
   17128:	mov	r5, r0
   1712c:	ldr	r0, [r6, #136]	; 0x88
   17130:	mov	r2, r4
   17134:	mov	r1, r5
   17138:	add	r0, r6, r0, lsl #2
   1713c:	ldr	r0, [r0, #4]
   17140:	bl	129d0 <coda_type_get_record_field_index_from_name@plt>
   17144:	cmp	r0, #0
   17148:	beq	17160 <traverse_product@@Base+0x218>
   1714c:	bl	12a60 <coda_get_errno@plt>
   17150:	ldr	r0, [r0]
   17154:	cmn	r0, #102	; 0x66
   17158:	beq	17300 <traverse_product@@Base+0x3b8>
   1715c:	bl	184f8 <handle_coda_error@@Base>
   17160:	ldr	r0, [r6, #796]	; 0x31c
   17164:	ldr	r0, [r7, r0, lsl #2]
   17168:	bl	15b5c <codadump_filter_get_subfilter@@Base>
   1716c:	ldr	r1, [r6, #796]	; 0x31c
   17170:	add	r1, r1, #1
   17174:	str	r0, [r7, r1, lsl #2]
   17178:	ldr	r0, [sp, #4]
   1717c:	str	r1, [r6, #796]	; 0x31c
   17180:	mov	r1, #1
   17184:	bl	17324 <traverse_product@@Base+0x3dc>
   17188:	ldr	r0, [r6, #796]	; 0x31c
   1718c:	sub	r0, r0, #1
   17190:	str	r0, [r6, #796]	; 0x31c
   17194:	ldr	r0, [r7, r0, lsl #2]
   17198:	bl	15b90 <codadump_filter_get_next_filter@@Base>
   1719c:	ldr	r1, [r6, #796]	; 0x31c
   171a0:	cmp	r0, #0
   171a4:	str	r0, [r7, r1, lsl #2]
   171a8:	bne	1711c <traverse_product@@Base+0x1d4>
   171ac:	add	r0, r7, r1, lsl #2
   171b0:	str	r8, [r0]
   171b4:	b	172c0 <traverse_product@@Base+0x378>
   171b8:	ldr	r0, [r6, #136]	; 0x88
   171bc:	cmp	r0, #30
   171c0:	bgt	17284 <traverse_product@@Base+0x33c>
   171c4:	bl	14954 <dim_enter_array@@Base>
   171c8:	ldr	r0, [r6, #3360]	; 0xd20
   171cc:	add	r2, r6, #8
   171d0:	add	r0, r0, #1
   171d4:	str	r0, [r6, #3360]	; 0xd20
   171d8:	ldr	r0, [r6, #136]	; 0x88
   171dc:	add	r1, r0, #1
   171e0:	str	r1, [r6, #136]	; 0x88
   171e4:	add	r1, r2, r1, lsl #2
   171e8:	ldr	r0, [r2, r0, lsl #2]
   171ec:	bl	12958 <coda_type_get_array_base_type@plt>
   171f0:	cmp	r0, #0
   171f4:	beq	171fc <traverse_product@@Base+0x2b4>
   171f8:	bl	184f8 <handle_coda_error@@Base>
   171fc:	bl	16ffc <traverse_product@@Base+0xb4>
   17200:	ldr	r0, [r6, #136]	; 0x88
   17204:	sub	r0, r0, #1
   17208:	str	r0, [r6, #136]	; 0x88
   1720c:	b	170a4 <traverse_product@@Base+0x15c>
   17210:	bl	1264c <coda_get_option_bypass_special_types@plt>
   17214:	mov	r2, r0
   17218:	ldr	r0, [r6, #136]	; 0x88
   1721c:	cmp	r2, #0
   17220:	add	r1, r6, r0, lsl #2
   17224:	ldr	r0, [r1, #8]!
   17228:	beq	17248 <traverse_product@@Base+0x300>
   1722c:	bl	12a6c <coda_type_get_special_base_type@plt>
   17230:	cmp	r0, #0
   17234:	beq	1723c <traverse_product@@Base+0x2f4>
   17238:	bl	184f8 <handle_coda_error@@Base>
   1723c:	bl	16ffc <traverse_product@@Base+0xb4>
   17240:	sub	sp, fp, #24
   17244:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17248:	add	r1, sp, #8
   1724c:	bl	12934 <coda_type_get_special_type@plt>
   17250:	cmp	r0, #0
   17254:	beq	1725c <traverse_product@@Base+0x314>
   17258:	bl	184f8 <handle_coda_error@@Base>
   1725c:	ldr	r0, [sp, #8]
   17260:	sub	r1, r0, #1
   17264:	cmp	r1, #2
   17268:	bcc	17280 <traverse_product@@Base+0x338>
   1726c:	cmp	r0, #0
   17270:	beq	17284 <traverse_product@@Base+0x33c>
   17274:	cmp	r0, #3
   17278:	beq	17090 <traverse_product@@Base+0x148>
   1727c:	b	17284 <traverse_product@@Base+0x33c>
   17280:	bl	17440 <traverse_product@@Base+0x4f8>
   17284:	sub	sp, fp, #24
   17288:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1728c:	ldr	r1, [sp, #8]
   17290:	mov	r0, #0
   17294:	str	r0, [sp, #4]
   17298:	cmp	r1, #1
   1729c:	blt	172c0 <traverse_product@@Base+0x378>
   172a0:	mov	r1, #0
   172a4:	bl	17324 <traverse_product@@Base+0x3dc>
   172a8:	ldr	r0, [sp, #4]
   172ac:	ldr	r1, [sp, #8]
   172b0:	add	r0, r0, #1
   172b4:	cmp	r0, r1
   172b8:	str	r0, [sp, #4]
   172bc:	blt	172a0 <traverse_product@@Base+0x358>
   172c0:	ldr	r0, [r6, #136]	; 0x88
   172c4:	sub	r0, r0, #1
   172c8:	str	r0, [r6, #136]	; 0x88
   172cc:	ldr	r0, [r6, #3748]	; 0xea4
   172d0:	sub	r0, r0, #1
   172d4:	str	r0, [r6, #3748]	; 0xea4
   172d8:	sub	sp, fp, #24
   172dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   172e0:	movw	r0, #43020	; 0xa80c
   172e4:	movw	r1, #43033	; 0xa819
   172e8:	movw	r3, #43111	; 0xa867
   172ec:	movw	r2, #393	; 0x189
   172f0:	movt	r0, #1
   172f4:	movt	r1, #1
   172f8:	movt	r3, #1
   172fc:	bl	12ab4 <__assert_fail@plt>
   17300:	movw	r0, #49584	; 0xc1b0
   17304:	movw	r1, #43132	; 0xa87c
   17308:	mov	r2, r5
   1730c:	movt	r0, #2
   17310:	movt	r1, #1
   17314:	ldr	r0, [r0]
   17318:	bl	128bc <fprintf@plt>
   1731c:	mov	r0, #1
   17320:	bl	12874 <exit@plt>
   17324:	push	{r4, r5, r6, sl, fp, lr}
   17328:	add	fp, sp, #16
   1732c:	sub	sp, sp, #8
   17330:	movw	r6, #49640	; 0xc1e8
   17334:	mov	r4, r0
   17338:	mov	r5, r1
   1733c:	add	r2, sp, #4
   17340:	movt	r6, #2
   17344:	mov	r1, r4
   17348:	ldr	r0, [r6, #3748]	; 0xea4
   1734c:	add	r0, r6, r0, lsl #2
   17350:	str	r4, [r0, #3488]	; 0xda0
   17354:	ldr	r0, [r6, #136]	; 0x88
   17358:	add	r0, r6, r0, lsl #2
   1735c:	ldr	r0, [r0, #4]
   17360:	bl	1267c <coda_type_get_record_field_hidden_status@plt>
   17364:	cmp	r0, #0
   17368:	beq	17370 <traverse_product@@Base+0x428>
   1736c:	bl	184f8 <handle_coda_error@@Base>
   17370:	cmp	r5, #0
   17374:	bne	17384 <traverse_product@@Base+0x43c>
   17378:	ldr	r0, [sp, #4]
   1737c:	cmp	r0, #0
   17380:	bne	17438 <traverse_product@@Base+0x4f0>
   17384:	movw	r0, #49636	; 0xc1e4
   17388:	movt	r0, #2
   1738c:	ldr	r0, [r0]
   17390:	cmp	r0, #0
   17394:	beq	173e4 <traverse_product@@Base+0x49c>
   17398:	ldr	r0, [r6, #136]	; 0x88
   1739c:	mov	r2, sp
   173a0:	mov	r1, r4
   173a4:	add	r0, r6, r0, lsl #2
   173a8:	ldr	r0, [r0, #4]
   173ac:	bl	1276c <coda_type_get_record_field_available_status@plt>
   173b0:	cmp	r0, #0
   173b4:	beq	173bc <traverse_product@@Base+0x474>
   173b8:	bl	184f8 <handle_coda_error@@Base>
   173bc:	ldr	r0, [sp]
   173c0:	cmn	r0, #1
   173c4:	bne	173d8 <traverse_product@@Base+0x490>
   173c8:	bl	15770 <dim_record_field_available@@Base>
   173cc:	cmp	r0, #0
   173d0:	beq	17438 <traverse_product@@Base+0x4f0>
   173d4:	ldr	r0, [sp]
   173d8:	ldr	r1, [r6, #136]	; 0x88
   173dc:	add	r1, r6, r1, lsl #2
   173e0:	str	r0, [r1, #3360]	; 0xd20
   173e4:	ldr	r0, [r6, #136]	; 0x88
   173e8:	ldr	r1, [r6, #3748]	; 0xea4
   173ec:	add	r0, r6, r0, lsl #2
   173f0:	add	r1, r6, r1, lsl #2
   173f4:	ldr	r0, [r0, #4]
   173f8:	add	r2, r1, #3616	; 0xe20
   173fc:	mov	r1, r4
   17400:	bl	12a78 <coda_type_get_record_field_name@plt>
   17404:	cmp	r0, #0
   17408:	beq	17410 <traverse_product@@Base+0x4c8>
   1740c:	bl	184f8 <handle_coda_error@@Base>
   17410:	ldr	r0, [r6, #136]	; 0x88
   17414:	add	r1, r6, r0, lsl #2
   17418:	ldr	r0, [r1, #4]
   1741c:	add	r2, r1, #8
   17420:	mov	r1, r4
   17424:	bl	12730 <coda_type_get_record_field_type@plt>
   17428:	cmp	r0, #0
   1742c:	beq	17434 <traverse_product@@Base+0x4ec>
   17430:	bl	184f8 <handle_coda_error@@Base>
   17434:	bl	16ffc <traverse_product@@Base+0xb4>
   17438:	sub	sp, fp, #16
   1743c:	pop	{r4, r5, r6, sl, fp, pc}
   17440:	push	{r4, r5, fp, lr}
   17444:	add	fp, sp, #8
   17448:	sub	sp, sp, #8
   1744c:	movw	r0, #53412	; 0xd0a4
   17450:	movt	r0, #2
   17454:	ldr	r0, [r0]
   17458:	cmp	r0, #1
   1745c:	beq	17504 <traverse_product@@Base+0x5bc>
   17460:	cmp	r0, #0
   17464:	bne	17684 <traverse_product@@Base+0x73c>
   17468:	movw	r4, #49588	; 0xc1b4
   1746c:	mov	r1, #1
   17470:	mov	r2, #0
   17474:	movt	r4, #2
   17478:	ldr	r0, [r4]
   1747c:	bl	16b2c <print_full_field_name@@Base>
   17480:	movw	r0, #53400	; 0xd098
   17484:	movt	r0, #2
   17488:	ldr	r0, [r0]
   1748c:	cmp	r0, #0
   17490:	beq	17580 <traverse_product@@Base+0x638>
   17494:	movw	r5, #49640	; 0xc1e8
   17498:	add	r1, sp, #4
   1749c:	movt	r5, #2
   174a0:	ldr	r0, [r5, #136]	; 0x88
   174a4:	add	r0, r5, r0, lsl #2
   174a8:	ldr	r0, [r0, #8]
   174ac:	bl	12ac0 <coda_type_get_class@plt>
   174b0:	cmp	r0, #0
   174b4:	beq	174bc <traverse_product@@Base+0x574>
   174b8:	bl	184f8 <handle_coda_error@@Base>
   174bc:	ldr	r0, [sp, #4]
   174c0:	cmp	r0, #6
   174c4:	bne	17510 <traverse_product@@Base+0x5c8>
   174c8:	ldr	r0, [r5, #136]	; 0x88
   174cc:	mov	r1, sp
   174d0:	add	r0, r5, r0, lsl #2
   174d4:	ldr	r0, [r0, #8]
   174d8:	bl	12934 <coda_type_get_special_type@plt>
   174dc:	cmp	r0, #0
   174e0:	beq	174e8 <traverse_product@@Base+0x5a0>
   174e4:	bl	184f8 <handle_coda_error@@Base>
   174e8:	ldr	r0, [sp]
   174ec:	bl	12628 <coda_type_get_special_type_name@plt>
   174f0:	mov	r1, r0
   174f4:	movw	r0, #43184	; 0xa8b0
   174f8:	movt	r0, #1
   174fc:	bl	12688 <printf@plt>
   17500:	b	17580 <traverse_product@@Base+0x638>
   17504:	sub	sp, fp, #8
   17508:	pop	{r4, r5, fp, lr}
   1750c:	b	12bbc <export_data_element_to_ascii@@Base>
   17510:	ldr	r0, [r5, #136]	; 0x88
   17514:	mov	r1, sp
   17518:	add	r0, r5, r0, lsl #2
   1751c:	ldr	r0, [r0, #8]
   17520:	bl	12880 <coda_type_get_read_type@plt>
   17524:	cmp	r0, #0
   17528:	beq	17530 <traverse_product@@Base+0x5e8>
   1752c:	bl	184f8 <handle_coda_error@@Base>
   17530:	ldr	r0, [sp]
   17534:	bl	1297c <coda_type_get_native_type_name@plt>
   17538:	mov	r1, r0
   1753c:	movw	r0, #43184	; 0xa8b0
   17540:	movt	r0, #1
   17544:	bl	12688 <printf@plt>
   17548:	ldr	r0, [sp]
   1754c:	sub	r0, r0, #11
   17550:	cmp	r0, #1
   17554:	bhi	17580 <traverse_product@@Base+0x638>
   17558:	mov	r0, #40	; 0x28
   1755c:	bl	1291c <putchar@plt>
   17560:	ldr	r1, [r5, #3360]	; 0xd20
   17564:	cmp	r1, #0
   17568:	ble	1768c <traverse_product@@Base+0x744>
   1756c:	ldr	r0, [r4]
   17570:	sub	r1, r1, #1
   17574:	bl	16de8 <print_full_field_name@@Base+0x2bc>
   17578:	mov	r0, #41	; 0x29
   1757c:	bl	1291c <putchar@plt>
   17580:	movw	r0, #49632	; 0xc1e0
   17584:	movt	r0, #2
   17588:	ldr	r0, [r0]
   1758c:	cmp	r0, #0
   17590:	beq	175dc <traverse_product@@Base+0x694>
   17594:	movw	r0, #49640	; 0xc1e8
   17598:	movt	r0, #2
   1759c:	ldr	r1, [r0, #136]	; 0x88
   175a0:	add	r0, r0, r1, lsl #2
   175a4:	add	r1, sp, #4
   175a8:	ldr	r0, [r0, #8]
   175ac:	bl	127a8 <coda_type_get_unit@plt>
   175b0:	cmp	r0, #0
   175b4:	beq	175bc <traverse_product@@Base+0x674>
   175b8:	bl	184f8 <handle_coda_error@@Base>
   175bc:	ldr	r1, [sp, #4]
   175c0:	cmp	r1, #0
   175c4:	ldrbne	r0, [r1]
   175c8:	cmpne	r0, #0
   175cc:	beq	175dc <traverse_product@@Base+0x694>
   175d0:	movw	r0, #43244	; 0xa8ec
   175d4:	movt	r0, #1
   175d8:	bl	12688 <printf@plt>
   175dc:	movw	r0, #53404	; 0xd09c
   175e0:	movt	r0, #2
   175e4:	ldr	r0, [r0]
   175e8:	cmp	r0, #0
   175ec:	beq	17638 <traverse_product@@Base+0x6f0>
   175f0:	movw	r0, #49640	; 0xc1e8
   175f4:	movt	r0, #2
   175f8:	ldr	r1, [r0, #136]	; 0x88
   175fc:	add	r0, r0, r1, lsl #2
   17600:	add	r1, sp, #4
   17604:	ldr	r0, [r0, #8]
   17608:	bl	127b4 <coda_type_get_description@plt>
   1760c:	cmp	r0, #0
   17610:	beq	17618 <traverse_product@@Base+0x6d0>
   17614:	bl	184f8 <handle_coda_error@@Base>
   17618:	ldr	r1, [sp, #4]
   1761c:	cmp	r1, #0
   17620:	ldrbne	r0, [r1]
   17624:	cmpne	r0, #0
   17628:	beq	17638 <traverse_product@@Base+0x6f0>
   1762c:	movw	r0, #43250	; 0xa8f2
   17630:	movt	r0, #1
   17634:	bl	12688 <printf@plt>
   17638:	mov	r0, #10
   1763c:	bl	1291c <putchar@plt>
   17640:	movw	r0, #49620	; 0xc1d4
   17644:	movt	r0, #2
   17648:	ldr	r0, [r0]
   1764c:	cmp	r0, #0
   17650:	beq	17684 <traverse_product@@Base+0x73c>
   17654:	movw	r5, #53424	; 0xd0b0
   17658:	movt	r5, #2
   1765c:	ldr	r0, [r5]
   17660:	cmp	r0, #1
   17664:	blt	17684 <traverse_product@@Base+0x73c>
   17668:	mov	r4, #0
   1766c:	mov	r0, r4
   17670:	bl	14788 <print_all_distinct_dims@@Base>
   17674:	ldr	r0, [r5]
   17678:	add	r4, r4, #1
   1767c:	cmp	r4, r0
   17680:	blt	1766c <traverse_product@@Base+0x724>
   17684:	sub	sp, fp, #8
   17688:	pop	{r4, r5, fp, pc}
   1768c:	movw	r0, #43188	; 0xa8b4
   17690:	movw	r1, #43033	; 0xa819
   17694:	movw	r3, #43217	; 0xa8d1
   17698:	mov	r2, #238	; 0xee
   1769c:	movt	r0, #1
   176a0:	movt	r1, #1
   176a4:	movt	r3, #1
   176a8:	bl	12ab4 <__assert_fail@plt>

000176ac <print_yaml_data@@Base>:
   176ac:	push	{r4, sl, fp, lr}
   176b0:	add	fp, sp, #8
   176b4:	sub	sp, sp, #528	; 0x210
   176b8:	movw	r1, #49608	; 0xc1c8
   176bc:	movw	r4, #49640	; 0xc1e8
   176c0:	movt	r1, #2
   176c4:	movt	r4, #2
   176c8:	str	r0, [r1]
   176cc:	ldr	r0, [r4]
   176d0:	sub	r1, fp, #12
   176d4:	bl	126b8 <coda_open@plt>
   176d8:	cmp	r0, #0
   176dc:	beq	1771c <print_yaml_data@@Base+0x70>
   176e0:	bl	12a60 <coda_get_errno@plt>
   176e4:	ldr	r0, [r0]
   176e8:	cmn	r0, #21
   176ec:	bne	17718 <print_yaml_data@@Base+0x6c>
   176f0:	mov	r0, #0
   176f4:	bl	12700 <coda_set_option_use_mmap@plt>
   176f8:	ldr	r0, [r4]
   176fc:	sub	r1, fp, #12
   17700:	bl	126b8 <coda_open@plt>
   17704:	mov	r4, r0
   17708:	mov	r0, #1
   1770c:	bl	12700 <coda_set_option_use_mmap@plt>
   17710:	cmp	r4, #0
   17714:	beq	1771c <print_yaml_data@@Base+0x70>
   17718:	bl	184f8 <handle_coda_error@@Base>
   1771c:	ldr	r1, [fp, #-12]
   17720:	mov	r0, sp
   17724:	bl	127e4 <coda_cursor_set_product@plt>
   17728:	cmp	r0, #0
   1772c:	beq	17734 <print_yaml_data@@Base+0x88>
   17730:	bl	184f8 <handle_coda_error@@Base>
   17734:	movw	r0, #53416	; 0xd0a8
   17738:	movt	r0, #2
   1773c:	ldr	r1, [r0]
   17740:	cmp	r1, #0
   17744:	beq	1775c <print_yaml_data@@Base+0xb0>
   17748:	mov	r0, sp
   1774c:	bl	129c4 <coda_cursor_goto@plt>
   17750:	cmp	r0, #0
   17754:	beq	1775c <print_yaml_data@@Base+0xb0>
   17758:	bl	184f8 <handle_coda_error@@Base>
   1775c:	mov	r0, #0
   17760:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   17764:	mov	r0, sp
   17768:	mov	r1, #0
   1776c:	bl	17780 <print_yaml_data@@Base+0xd4>
   17770:	ldr	r0, [fp, #-12]
   17774:	bl	129a0 <coda_close@plt>
   17778:	sub	sp, fp, #8
   1777c:	pop	{r4, sl, fp, pc}
   17780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17784:	add	fp, sp, #28
   17788:	sub	sp, sp, #76	; 0x4c
   1778c:	movw	r9, #49608	; 0xc1c8
   17790:	mov	sl, r0
   17794:	mov	r0, #0
   17798:	mov	r5, r1
   1779c:	movt	r9, #2
   177a0:	str	r0, [fp, #-36]	; 0xffffffdc
   177a4:	ldr	r0, [r9]
   177a8:	cmp	r0, #0
   177ac:	beq	17890 <print_yaml_data@@Base+0x1e4>
   177b0:	sub	r1, fp, #36	; 0x24
   177b4:	mov	r0, sl
   177b8:	bl	12778 <coda_cursor_has_attributes@plt>
   177bc:	cmp	r0, #0
   177c0:	beq	177c8 <print_yaml_data@@Base+0x11c>
   177c4:	bl	184f8 <handle_coda_error@@Base>
   177c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   177cc:	cmp	r0, #0
   177d0:	beq	17890 <print_yaml_data@@Base+0x1e4>
   177d4:	cmp	r5, #0
   177d8:	beq	1782c <print_yaml_data@@Base+0x180>
   177dc:	movw	r0, #43795	; 0xab13
   177e0:	movt	r0, #1
   177e4:	bl	18230 <print_yaml_data@@Base+0xb84>
   177e8:	ldr	r0, [r9, #4]
   177ec:	cmp	r0, #0
   177f0:	blt	18210 <print_yaml_data@@Base+0xb64>
   177f4:	beq	1782c <print_yaml_data@@Base+0x180>
   177f8:	movw	r7, #53392	; 0xd090
   177fc:	movw	r6, #41774	; 0xa32e
   17800:	add	r4, r0, #1
   17804:	movt	r7, #2
   17808:	movt	r6, #1
   1780c:	ldr	r3, [r7]
   17810:	mov	r0, r6
   17814:	mov	r1, #2
   17818:	mov	r2, #1
   1781c:	bl	127d8 <fwrite@plt>
   17820:	sub	r4, r4, #1
   17824:	cmp	r4, #1
   17828:	bgt	1780c <print_yaml_data@@Base+0x160>
   1782c:	movw	r0, #43256	; 0xa8f8
   17830:	movt	r0, #1
   17834:	bl	18230 <print_yaml_data@@Base+0xb84>
   17838:	mov	r0, sl
   1783c:	bl	128f8 <coda_cursor_goto_attributes@plt>
   17840:	cmp	r0, #0
   17844:	beq	1784c <print_yaml_data@@Base+0x1a0>
   17848:	bl	184f8 <handle_coda_error@@Base>
   1784c:	ldr	r0, [r9, #4]
   17850:	mov	r1, #1
   17854:	add	r0, r0, #1
   17858:	str	r0, [r9, #4]
   1785c:	mov	r0, sl
   17860:	bl	17780 <print_yaml_data@@Base+0xd4>
   17864:	ldr	r0, [r9, #4]
   17868:	sub	r0, r0, #1
   1786c:	str	r0, [r9, #4]
   17870:	mov	r0, sl
   17874:	bl	1285c <coda_cursor_goto_parent@plt>
   17878:	movw	r0, #43263	; 0xa8ff
   1787c:	movt	r0, #1
   17880:	bl	18278 <print_yaml_data@@Base+0xbcc>
   17884:	ldr	r0, [r9, #4]
   17888:	add	r0, r0, #1
   1788c:	str	r0, [r9, #4]
   17890:	sub	r1, fp, #32
   17894:	mov	r0, sl
   17898:	bl	12784 <coda_cursor_get_type_class@plt>
   1789c:	cmp	r0, #0
   178a0:	beq	178a8 <print_yaml_data@@Base+0x1fc>
   178a4:	bl	184f8 <handle_coda_error@@Base>
   178a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   178ac:	cmp	r0, #6
   178b0:	bhi	180a8 <print_yaml_data@@Base+0x9fc>
   178b4:	add	r1, pc, #0
   178b8:	ldr	pc, [r1, r0, lsl #2]
   178bc:	andeq	r7, r1, ip, ror #18
   178c0:			; <UNDEFINED> instruction: 0x00017ab0
   178c4:	ldrdeq	r7, [r1], -r8
   178c8:	ldrdeq	r7, [r1], -r8
   178cc:	ldrdeq	r7, [r1], -r8
   178d0:	ldrdeq	r7, [r1], -r8
   178d4:	strdeq	r7, [r1], -r4
   178d8:	sub	r1, fp, #40	; 0x28
   178dc:	mov	r0, sl
   178e0:	bl	12820 <coda_cursor_get_read_type@plt>
   178e4:	cmp	r0, #0
   178e8:	beq	178f0 <print_yaml_data@@Base+0x244>
   178ec:	bl	184f8 <handle_coda_error@@Base>
   178f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   178f4:	add	r0, r0, #1
   178f8:	cmp	r0, #13
   178fc:	bhi	180a8 <print_yaml_data@@Base+0x9fc>
   17900:	add	r1, pc, #0
   17904:	ldr	pc, [r1, r0, lsl #2]
   17908:	andeq	r7, r1, r0, lsr fp
   1790c:	andeq	r7, r1, r0, asr #18
   17910:	andeq	r7, r1, ip, lsr fp
   17914:	andeq	r7, r1, r0, asr #18
   17918:	andeq	r7, r1, ip, lsr fp
   1791c:	andeq	r7, r1, r0, asr #18
   17920:	andeq	r7, r1, ip, lsr fp
   17924:	muleq	r1, r4, ip
   17928:	andeq	r7, r1, r4, asr #25
   1792c:	andeq	r7, r1, r8, ror #22
   17930:	andeq	r7, r1, r8, ror #22
   17934:	andeq	r7, r1, ip, lsr #23
   17938:	andeq	r7, r1, r8, ror #23
   1793c:	andeq	r7, r1, r4, lsl #26
   17940:	add	r1, sp, #16
   17944:	mov	r0, sl
   17948:	bl	12a3c <coda_cursor_read_int32@plt>
   1794c:	cmp	r0, #0
   17950:	beq	17958 <print_yaml_data@@Base+0x2ac>
   17954:	bl	184f8 <handle_coda_error@@Base>
   17958:	ldr	r1, [sp, #16]
   1795c:	movw	r0, #41623	; 0xa297
   17960:	movt	r0, #1
   17964:	bl	18230 <print_yaml_data@@Base+0xb84>
   17968:	b	180a8 <print_yaml_data@@Base+0x9fc>
   1796c:	add	r1, sp, #16
   17970:	mov	r0, sl
   17974:	bl	126dc <coda_cursor_get_num_elements@plt>
   17978:	cmp	r0, #0
   1797c:	beq	17984 <print_yaml_data@@Base+0x2d8>
   17980:	bl	184f8 <handle_coda_error@@Base>
   17984:	ldr	r0, [sp, #16]
   17988:	cmp	r0, #1
   1798c:	blt	17ba0 <print_yaml_data@@Base+0x4f4>
   17990:	cmp	r5, #0
   17994:	beq	179a4 <print_yaml_data@@Base+0x2f8>
   17998:	movw	r0, #43795	; 0xab13
   1799c:	movt	r0, #1
   179a0:	bl	18230 <print_yaml_data@@Base+0xb84>
   179a4:	add	r1, sp, #8
   179a8:	mov	r0, sl
   179ac:	bl	1273c <coda_cursor_get_type@plt>
   179b0:	cmp	r0, #0
   179b4:	beq	179bc <print_yaml_data@@Base+0x310>
   179b8:	bl	184f8 <handle_coda_error@@Base>
   179bc:	ldr	r0, [sp, #8]
   179c0:	sub	r1, fp, #40	; 0x28
   179c4:	bl	12940 <coda_type_get_record_union_status@plt>
   179c8:	cmp	r0, #0
   179cc:	beq	179d4 <print_yaml_data@@Base+0x328>
   179d0:	bl	184f8 <handle_coda_error@@Base>
   179d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   179d8:	cmp	r0, #0
   179dc:	beq	17dcc <print_yaml_data@@Base+0x720>
   179e0:	sub	r1, fp, #44	; 0x2c
   179e4:	mov	r0, sl
   179e8:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   179ec:	cmp	r0, #0
   179f0:	beq	179f8 <print_yaml_data@@Base+0x34c>
   179f4:	bl	184f8 <handle_coda_error@@Base>
   179f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   179fc:	ldr	r0, [sp, #8]
   17a00:	sub	r2, fp, #48	; 0x30
   17a04:	bl	12a78 <coda_type_get_record_field_name@plt>
   17a08:	cmp	r0, #0
   17a0c:	beq	17a14 <print_yaml_data@@Base+0x368>
   17a10:	bl	184f8 <handle_coda_error@@Base>
   17a14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17a18:	mov	r0, sl
   17a1c:	bl	127fc <coda_cursor_goto_record_field_by_index@plt>
   17a20:	cmp	r0, #0
   17a24:	beq	17a2c <print_yaml_data@@Base+0x380>
   17a28:	bl	184f8 <handle_coda_error@@Base>
   17a2c:	cmp	r5, #0
   17a30:	beq	17a78 <print_yaml_data@@Base+0x3cc>
   17a34:	ldr	r0, [r9, #4]
   17a38:	cmp	r0, #0
   17a3c:	blt	18210 <print_yaml_data@@Base+0xb64>
   17a40:	beq	17a78 <print_yaml_data@@Base+0x3cc>
   17a44:	movw	r6, #53392	; 0xd090
   17a48:	movw	r5, #41774	; 0xa32e
   17a4c:	add	r4, r0, #1
   17a50:	movt	r6, #2
   17a54:	movt	r5, #1
   17a58:	ldr	r3, [r6]
   17a5c:	mov	r0, r5
   17a60:	mov	r1, #2
   17a64:	mov	r2, #1
   17a68:	bl	127d8 <fwrite@plt>
   17a6c:	sub	r4, r4, #1
   17a70:	cmp	r4, #1
   17a74:	bgt	17a58 <print_yaml_data@@Base+0x3ac>
   17a78:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17a7c:	movw	r0, #43270	; 0xa906
   17a80:	movt	r0, #1
   17a84:	bl	18230 <print_yaml_data@@Base+0xb84>
   17a88:	ldr	r0, [r9, #4]
   17a8c:	mov	r1, #1
   17a90:	add	r0, r0, #1
   17a94:	str	r0, [r9, #4]
   17a98:	mov	r0, sl
   17a9c:	bl	17780 <print_yaml_data@@Base+0xd4>
   17aa0:	ldr	r0, [r9, #4]
   17aa4:	sub	r0, r0, #1
   17aa8:	str	r0, [r9, #4]
   17aac:	b	18090 <print_yaml_data@@Base+0x9e4>
   17ab0:	add	r5, sp, #16
   17ab4:	add	r1, sp, #8
   17ab8:	mov	r0, sl
   17abc:	mov	r2, r5
   17ac0:	bl	12988 <coda_cursor_get_array_dim@plt>
   17ac4:	cmp	r0, #0
   17ac8:	beq	17ad0 <print_yaml_data@@Base+0x424>
   17acc:	bl	184f8 <handle_coda_error@@Base>
   17ad0:	ldr	r0, [sp, #8]
   17ad4:	cmp	r0, #0
   17ad8:	blt	1809c <print_yaml_data@@Base+0x9f0>
   17adc:	beq	17f04 <print_yaml_data@@Base+0x858>
   17ae0:	cmp	r0, #4
   17ae4:	bcs	17fb4 <print_yaml_data@@Base+0x908>
   17ae8:	mov	r1, #0
   17aec:	mov	r6, #1
   17af0:	b	17fe8 <print_yaml_data@@Base+0x93c>
   17af4:	sub	r1, fp, #40	; 0x28
   17af8:	mov	r0, sl
   17afc:	bl	127c0 <coda_cursor_get_special_type@plt>
   17b00:	cmp	r0, #0
   17b04:	beq	17b0c <print_yaml_data@@Base+0x460>
   17b08:	bl	184f8 <handle_coda_error@@Base>
   17b0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17b10:	cmp	r0, #3
   17b14:	bhi	180a8 <print_yaml_data@@Base+0x9fc>
   17b18:	add	r1, pc, #0
   17b1c:	ldr	pc, [r1, r0, lsl #2]
   17b20:	andeq	r7, r1, r0, lsr fp
   17b24:	andeq	r7, r1, ip, lsl #30
   17b28:	andeq	r7, r1, ip, lsr #30
   17b2c:	andeq	r7, r1, r8, ror pc
   17b30:	movw	r0, #43360	; 0xa960
   17b34:	movt	r0, #1
   17b38:	b	180a4 <print_yaml_data@@Base+0x9f8>
   17b3c:	add	r1, sp, #16
   17b40:	mov	r0, sl
   17b44:	bl	12718 <coda_cursor_read_uint32@plt>
   17b48:	cmp	r0, #0
   17b4c:	beq	17b54 <print_yaml_data@@Base+0x4a8>
   17b50:	bl	184f8 <handle_coda_error@@Base>
   17b54:	ldr	r1, [sp, #16]
   17b58:	movw	r0, #41628	; 0xa29c
   17b5c:	movt	r0, #1
   17b60:	bl	18230 <print_yaml_data@@Base+0xb84>
   17b64:	b	180a8 <print_yaml_data@@Base+0x9fc>
   17b68:	add	r1, sp, #16
   17b6c:	mov	r0, sl
   17b70:	bl	128a4 <coda_cursor_read_double@plt>
   17b74:	cmp	r0, #0
   17b78:	beq	17b80 <print_yaml_data@@Base+0x4d4>
   17b7c:	bl	184f8 <handle_coda_error@@Base>
   17b80:	vldr	d16, [sp, #16]
   17b84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17b88:	vmov	r2, r3, d16
   17b8c:	cmp	r0, #8
   17b90:	bne	17f6c <print_yaml_data@@Base+0x8c0>
   17b94:	movw	r0, #41633	; 0xa2a1
   17b98:	movt	r0, #1
   17b9c:	b	17fac <print_yaml_data@@Base+0x900>
   17ba0:	movw	r0, #43275	; 0xa90b
   17ba4:	movt	r0, #1
   17ba8:	b	180a4 <print_yaml_data@@Base+0x9f8>
   17bac:	add	r1, sp, #16
   17bb0:	mov	r0, sl
   17bb4:	bl	12904 <coda_cursor_read_char@plt>
   17bb8:	cmp	r0, #0
   17bbc:	beq	17bc4 <print_yaml_data@@Base+0x518>
   17bc0:	bl	184f8 <handle_coda_error@@Base>
   17bc4:	movw	r0, #42996	; 0xa7f4
   17bc8:	movt	r0, #1
   17bcc:	bl	18230 <print_yaml_data@@Base+0xb84>
   17bd0:	add	r0, sp, #16
   17bd4:	mov	r1, #1
   17bd8:	bl	1832c <print_yaml_data@@Base+0xc80>
   17bdc:	movw	r0, #43794	; 0xab12
   17be0:	movt	r0, #1
   17be4:	b	180a4 <print_yaml_data@@Base+0x9f8>
   17be8:	add	r1, sp, #16
   17bec:	mov	r0, sl
   17bf0:	bl	1288c <coda_cursor_get_string_length@plt>
   17bf4:	cmp	r0, #0
   17bf8:	beq	17c00 <print_yaml_data@@Base+0x554>
   17bfc:	bl	184f8 <handle_coda_error@@Base>
   17c00:	ldr	r0, [sp, #16]
   17c04:	add	r6, r0, #1
   17c08:	mov	r0, r6
   17c0c:	bl	1282c <malloc@plt>
   17c10:	mov	r5, r0
   17c14:	cmp	r0, #0
   17c18:	bne	17c4c <print_yaml_data@@Base+0x5a0>
   17c1c:	movw	r1, #41209	; 0xa0f9
   17c20:	movw	r3, #43286	; 0xa916
   17c24:	movw	r0, #361	; 0x169
   17c28:	mov	r2, r6
   17c2c:	str	r0, [sp]
   17c30:	movt	r1, #1
   17c34:	movt	r3, #1
   17c38:	mvn	r0, #0
   17c3c:	bl	126ac <coda_set_error@plt>
   17c40:	bl	184f8 <handle_coda_error@@Base>
   17c44:	ldr	r0, [sp, #16]
   17c48:	add	r6, r0, #1
   17c4c:	mov	r0, sl
   17c50:	mov	r1, r5
   17c54:	mov	r2, r6
   17c58:	bl	12850 <coda_cursor_read_string@plt>
   17c5c:	cmp	r0, #0
   17c60:	beq	17c68 <print_yaml_data@@Base+0x5bc>
   17c64:	bl	184f8 <handle_coda_error@@Base>
   17c68:	movw	r0, #42996	; 0xa7f4
   17c6c:	movt	r0, #1
   17c70:	bl	18230 <print_yaml_data@@Base+0xb84>
   17c74:	ldr	r1, [sp, #16]
   17c78:	mov	r0, r5
   17c7c:	bl	1832c <print_yaml_data@@Base+0xc80>
   17c80:	ldr	r1, [sp, #16]
   17c84:	movw	r0, #43794	; 0xab12
   17c88:	movt	r0, #1
   17c8c:	bl	18230 <print_yaml_data@@Base+0xb84>
   17c90:	b	17dc0 <print_yaml_data@@Base+0x714>
   17c94:	add	r1, sp, #8
   17c98:	mov	r0, sl
   17c9c:	bl	129ac <coda_cursor_read_int64@plt>
   17ca0:	cmp	r0, #0
   17ca4:	beq	17cac <print_yaml_data@@Base+0x600>
   17ca8:	bl	184f8 <handle_coda_error@@Base>
   17cac:	ldr	r0, [sp, #8]
   17cb0:	ldr	r1, [sp, #12]
   17cb4:	add	r4, sp, #16
   17cb8:	mov	r2, r4
   17cbc:	bl	12aa8 <coda_str64@plt>
   17cc0:	b	17cf0 <print_yaml_data@@Base+0x644>
   17cc4:	add	r1, sp, #8
   17cc8:	mov	r0, sl
   17ccc:	bl	12898 <coda_cursor_read_uint64@plt>
   17cd0:	cmp	r0, #0
   17cd4:	beq	17cdc <print_yaml_data@@Base+0x630>
   17cd8:	bl	184f8 <handle_coda_error@@Base>
   17cdc:	ldr	r0, [sp, #8]
   17ce0:	ldr	r1, [sp, #12]
   17ce4:	add	r4, sp, #16
   17ce8:	mov	r2, r4
   17cec:	bl	126e8 <coda_str64u@plt>
   17cf0:	movw	r0, #43373	; 0xa96d
   17cf4:	mov	r1, r4
   17cf8:	movt	r0, #1
   17cfc:	bl	18230 <print_yaml_data@@Base+0xb84>
   17d00:	b	180a8 <print_yaml_data@@Base+0x9fc>
   17d04:	add	r1, sp, #16
   17d08:	mov	r0, sl
   17d0c:	bl	12a0c <coda_cursor_get_bit_size@plt>
   17d10:	cmp	r0, #0
   17d14:	beq	17d1c <print_yaml_data@@Base+0x670>
   17d18:	bl	184f8 <handle_coda_error@@Base>
   17d1c:	ldr	r4, [sp, #16]
   17d20:	ldr	r7, [sp, #20]
   17d24:	lsr	r0, r4, #3
   17d28:	tst	r4, #7
   17d2c:	orr	r6, r0, r7, lsl #29
   17d30:	addne	r6, r6, #1
   17d34:	mov	r0, r6
   17d38:	bl	1282c <malloc@plt>
   17d3c:	mov	r5, r0
   17d40:	cmp	r0, #0
   17d44:	bne	17d78 <print_yaml_data@@Base+0x6cc>
   17d48:	movw	r1, #41209	; 0xa0f9
   17d4c:	movw	r3, #43286	; 0xa916
   17d50:	mov	r0, #392	; 0x188
   17d54:	mov	r2, r6
   17d58:	str	r0, [sp]
   17d5c:	movt	r1, #1
   17d60:	movt	r3, #1
   17d64:	mvn	r0, #0
   17d68:	bl	126ac <coda_set_error@plt>
   17d6c:	bl	184f8 <handle_coda_error@@Base>
   17d70:	ldr	r4, [sp, #16]
   17d74:	ldr	r7, [sp, #20]
   17d78:	mov	r0, sl
   17d7c:	mov	r1, r5
   17d80:	mov	r2, #0
   17d84:	mov	r3, #0
   17d88:	stm	sp, {r4, r7}
   17d8c:	bl	12a9c <coda_cursor_read_bits@plt>
   17d90:	cmp	r0, #0
   17d94:	beq	17d9c <print_yaml_data@@Base+0x6f0>
   17d98:	bl	184f8 <handle_coda_error@@Base>
   17d9c:	movw	r0, #42996	; 0xa7f4
   17da0:	movt	r0, #1
   17da4:	bl	18230 <print_yaml_data@@Base+0xb84>
   17da8:	mov	r0, r5
   17dac:	mov	r1, r6
   17db0:	bl	1832c <print_yaml_data@@Base+0xc80>
   17db4:	movw	r0, #43794	; 0xab12
   17db8:	movt	r0, #1
   17dbc:	bl	18230 <print_yaml_data@@Base+0xb84>
   17dc0:	mov	r0, r5
   17dc4:	bl	126f4 <free@plt>
   17dc8:	b	180a8 <print_yaml_data@@Base+0x9fc>
   17dcc:	mov	r0, sl
   17dd0:	bl	127f0 <coda_cursor_goto_first_record_field@plt>
   17dd4:	cmp	r0, #0
   17dd8:	beq	17de0 <print_yaml_data@@Base+0x734>
   17ddc:	bl	184f8 <handle_coda_error@@Base>
   17de0:	mov	r0, #0
   17de4:	str	r0, [fp, #-44]	; 0xffffffd4
   17de8:	ldr	r0, [sp, #16]
   17dec:	cmp	r0, #1
   17df0:	blt	18090 <print_yaml_data@@Base+0x9e4>
   17df4:	mov	r1, #0
   17df8:	cmp	r5, #0
   17dfc:	beq	180c4 <print_yaml_data@@Base+0xa18>
   17e00:	movw	r7, #43270	; 0xa906
   17e04:	movw	r5, #53392	; 0xd090
   17e08:	movw	r6, #41774	; 0xa32e
   17e0c:	add	r4, sp, #52	; 0x34
   17e10:	movt	r7, #1
   17e14:	movt	r5, #2
   17e18:	movt	r6, #1
   17e1c:	ldr	r0, [sp, #8]
   17e20:	mov	r2, r4
   17e24:	bl	1267c <coda_type_get_record_field_hidden_status@plt>
   17e28:	cmp	r0, #0
   17e2c:	beq	17e34 <print_yaml_data@@Base+0x788>
   17e30:	bl	184f8 <handle_coda_error@@Base>
   17e34:	ldr	r0, [sp, #52]	; 0x34
   17e38:	cmp	r0, #0
   17e3c:	bne	17ec0 <print_yaml_data@@Base+0x814>
   17e40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17e44:	ldr	r0, [sp, #8]
   17e48:	sub	r2, fp, #48	; 0x30
   17e4c:	bl	12a78 <coda_type_get_record_field_name@plt>
   17e50:	cmp	r0, #0
   17e54:	beq	17e5c <print_yaml_data@@Base+0x7b0>
   17e58:	bl	184f8 <handle_coda_error@@Base>
   17e5c:	ldr	r0, [r9, #4]
   17e60:	cmp	r0, #0
   17e64:	blt	18210 <print_yaml_data@@Base+0xb64>
   17e68:	beq	17e90 <print_yaml_data@@Base+0x7e4>
   17e6c:	add	r8, r0, #1
   17e70:	ldr	r3, [r5]
   17e74:	mov	r0, r6
   17e78:	mov	r1, #2
   17e7c:	mov	r2, #1
   17e80:	bl	127d8 <fwrite@plt>
   17e84:	sub	r8, r8, #1
   17e88:	cmp	r8, #1
   17e8c:	bgt	17e70 <print_yaml_data@@Base+0x7c4>
   17e90:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17e94:	mov	r0, r7
   17e98:	bl	18230 <print_yaml_data@@Base+0xb84>
   17e9c:	ldr	r0, [r9, #4]
   17ea0:	mov	r1, #1
   17ea4:	add	r0, r0, #1
   17ea8:	str	r0, [r9, #4]
   17eac:	mov	r0, sl
   17eb0:	bl	17780 <print_yaml_data@@Base+0xd4>
   17eb4:	ldr	r0, [r9, #4]
   17eb8:	sub	r0, r0, #1
   17ebc:	str	r0, [r9, #4]
   17ec0:	ldr	r0, [sp, #16]
   17ec4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17ec8:	sub	r0, r0, #1
   17ecc:	cmp	r1, r0
   17ed0:	bge	17ee8 <print_yaml_data@@Base+0x83c>
   17ed4:	mov	r0, sl
   17ed8:	bl	129e8 <coda_cursor_goto_next_record_field@plt>
   17edc:	cmp	r0, #0
   17ee0:	beq	17ee8 <print_yaml_data@@Base+0x83c>
   17ee4:	bl	184f8 <handle_coda_error@@Base>
   17ee8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17eec:	add	r1, r0, #1
   17ef0:	ldr	r0, [sp, #16]
   17ef4:	str	r1, [fp, #-44]	; 0xffffffd4
   17ef8:	cmp	r1, r0
   17efc:	blt	17e1c <print_yaml_data@@Base+0x770>
   17f00:	b	18090 <print_yaml_data@@Base+0x9e4>
   17f04:	mov	r6, #1
   17f08:	b	1800c <print_yaml_data@@Base+0x960>
   17f0c:	add	r1, sp, #16
   17f10:	mov	r0, sl
   17f14:	bl	128a4 <coda_cursor_read_double@plt>
   17f18:	cmp	r0, #0
   17f1c:	beq	17f24 <print_yaml_data@@Base+0x878>
   17f20:	bl	184f8 <handle_coda_error@@Base>
   17f24:	vldr	d16, [sp, #16]
   17f28:	b	17f68 <print_yaml_data@@Base+0x8bc>
   17f2c:	add	r1, sp, #8
   17f30:	mov	r0, sl
   17f34:	bl	128a4 <coda_cursor_read_double@plt>
   17f38:	cmp	r0, #0
   17f3c:	beq	17f44 <print_yaml_data@@Base+0x898>
   17f40:	bl	184f8 <handle_coda_error@@Base>
   17f44:	vldr	d0, [sp, #8]
   17f48:	bl	128b0 <coda_isNaN@plt>
   17f4c:	cmp	r0, #0
   17f50:	bne	17f64 <print_yaml_data@@Base+0x8b8>
   17f54:	vldr	d0, [sp, #8]
   17f58:	bl	12754 <coda_isInf@plt>
   17f5c:	cmp	r0, #0
   17f60:	beq	181d4 <print_yaml_data@@Base+0xb28>
   17f64:	vldr	d16, [sp, #8]
   17f68:	vmov	r2, r3, d16
   17f6c:	movw	r0, #41699	; 0xa2e3
   17f70:	movt	r0, #1
   17f74:	b	17fac <print_yaml_data@@Base+0x900>
   17f78:	add	r1, sp, #16
   17f7c:	add	r2, sp, #8
   17f80:	mov	r0, sl
   17f84:	bl	1294c <coda_cursor_read_complex_double_split@plt>
   17f88:	cmp	r0, #0
   17f8c:	beq	17f94 <print_yaml_data@@Base+0x8e8>
   17f90:	bl	184f8 <handle_coda_error@@Base>
   17f94:	vldr	d16, [sp, #16]
   17f98:	vldr	d17, [sp, #8]
   17f9c:	movw	r0, #41734	; 0xa306
   17fa0:	movt	r0, #1
   17fa4:	vmov	r2, r3, d16
   17fa8:	vstr	d17, [sp]
   17fac:	bl	18230 <print_yaml_data@@Base+0xb84>
   17fb0:	b	180a8 <print_yaml_data@@Base+0x9fc>
   17fb4:	bic	r1, r0, #3
   17fb8:	vmov.i32	q8, #1	; 0x00000001
   17fbc:	mov	r2, r1
   17fc0:	vld1.32	{d18-d19}, [r5]!
   17fc4:	subs	r2, r2, #4
   17fc8:	vmul.i32	q8, q9, q8
   17fcc:	bne	17fc0 <print_yaml_data@@Base+0x914>
   17fd0:	vext.8	q9, q8, q8, #8
   17fd4:	cmp	r0, r1
   17fd8:	vmul.i32	q0, q8, q9
   17fdc:	vmul.i32	q8, q0, d0[1]
   17fe0:	vmov.32	r6, d16[0]
   17fe4:	beq	18004 <print_yaml_data@@Base+0x958>
   17fe8:	add	r2, sp, #16
   17fec:	sub	r0, r0, r1
   17ff0:	add	r1, r2, r1, lsl #2
   17ff4:	ldr	r2, [r1], #4
   17ff8:	subs	r0, r0, #1
   17ffc:	mul	r6, r2, r6
   18000:	bne	17ff4 <print_yaml_data@@Base+0x948>
   18004:	cmp	r6, #1
   18008:	blt	1809c <print_yaml_data@@Base+0x9f0>
   1800c:	movw	r0, #43795	; 0xab13
   18010:	movt	r0, #1
   18014:	bl	18230 <print_yaml_data@@Base+0xb84>
   18018:	mov	r0, sl
   1801c:	bl	127cc <coda_cursor_goto_first_array_element@plt>
   18020:	cmp	r0, #0
   18024:	beq	1802c <print_yaml_data@@Base+0x980>
   18028:	bl	184f8 <handle_coda_error@@Base>
   1802c:	movw	r5, #43279	; 0xa90f
   18030:	sub	r7, r6, #1
   18034:	mov	r4, #0
   18038:	movt	r5, #1
   1803c:	mov	r0, r5
   18040:	bl	18278 <print_yaml_data@@Base+0xbcc>
   18044:	ldr	r0, [r9, #4]
   18048:	mov	r1, #0
   1804c:	add	r0, r0, #1
   18050:	str	r0, [r9, #4]
   18054:	mov	r0, sl
   18058:	bl	17780 <print_yaml_data@@Base+0xd4>
   1805c:	ldr	r0, [r9, #4]
   18060:	cmp	r4, r7
   18064:	sub	r0, r0, #1
   18068:	str	r0, [r9, #4]
   1806c:	bge	18084 <print_yaml_data@@Base+0x9d8>
   18070:	mov	r0, sl
   18074:	bl	128c8 <coda_cursor_goto_next_array_element@plt>
   18078:	cmp	r0, #0
   1807c:	beq	18084 <print_yaml_data@@Base+0x9d8>
   18080:	bl	184f8 <handle_coda_error@@Base>
   18084:	add	r4, r4, #1
   18088:	cmp	r6, r4
   1808c:	bne	1803c <print_yaml_data@@Base+0x990>
   18090:	mov	r0, sl
   18094:	bl	1285c <coda_cursor_goto_parent@plt>
   18098:	b	180a8 <print_yaml_data@@Base+0x9fc>
   1809c:	movw	r0, #43282	; 0xa912
   180a0:	movt	r0, #1
   180a4:	bl	18230 <print_yaml_data@@Base+0xb84>
   180a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   180ac:	cmp	r0, #0
   180b0:	ldrne	r0, [r9, #4]
   180b4:	subne	r0, r0, #1
   180b8:	strne	r0, [r9, #4]
   180bc:	sub	sp, fp, #28
   180c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180c4:	movw	r5, #53392	; 0xd090
   180c8:	movw	r6, #41774	; 0xa32e
   180cc:	mov	r8, #1
   180d0:	add	r4, sp, #52	; 0x34
   180d4:	movt	r5, #2
   180d8:	movt	r6, #1
   180dc:	ldr	r0, [sp, #8]
   180e0:	mov	r2, r4
   180e4:	bl	1267c <coda_type_get_record_field_hidden_status@plt>
   180e8:	cmp	r0, #0
   180ec:	beq	180f4 <print_yaml_data@@Base+0xa48>
   180f0:	bl	184f8 <handle_coda_error@@Base>
   180f4:	ldr	r0, [sp, #52]	; 0x34
   180f8:	cmp	r0, #0
   180fc:	bne	18190 <print_yaml_data@@Base+0xae4>
   18100:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18104:	ldr	r0, [sp, #8]
   18108:	sub	r2, fp, #48	; 0x30
   1810c:	bl	12a78 <coda_type_get_record_field_name@plt>
   18110:	cmp	r0, #0
   18114:	beq	1811c <print_yaml_data@@Base+0xa70>
   18118:	bl	184f8 <handle_coda_error@@Base>
   1811c:	cmp	r8, #0
   18120:	bne	18158 <print_yaml_data@@Base+0xaac>
   18124:	ldr	r0, [r9, #4]
   18128:	cmp	r0, #0
   1812c:	blt	18210 <print_yaml_data@@Base+0xb64>
   18130:	beq	18158 <print_yaml_data@@Base+0xaac>
   18134:	add	r7, r0, #1
   18138:	ldr	r3, [r5]
   1813c:	mov	r0, r6
   18140:	mov	r1, #2
   18144:	mov	r2, #1
   18148:	bl	127d8 <fwrite@plt>
   1814c:	sub	r7, r7, #1
   18150:	cmp	r7, #1
   18154:	bgt	18138 <print_yaml_data@@Base+0xa8c>
   18158:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1815c:	movw	r0, #43270	; 0xa906
   18160:	movt	r0, #1
   18164:	bl	18230 <print_yaml_data@@Base+0xb84>
   18168:	ldr	r0, [r9, #4]
   1816c:	mov	r1, #1
   18170:	add	r0, r0, #1
   18174:	str	r0, [r9, #4]
   18178:	mov	r0, sl
   1817c:	bl	17780 <print_yaml_data@@Base+0xd4>
   18180:	ldr	r0, [r9, #4]
   18184:	mov	r8, #0
   18188:	sub	r0, r0, #1
   1818c:	str	r0, [r9, #4]
   18190:	ldr	r0, [sp, #16]
   18194:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18198:	sub	r0, r0, #1
   1819c:	cmp	r1, r0
   181a0:	bge	181b8 <print_yaml_data@@Base+0xb0c>
   181a4:	mov	r0, sl
   181a8:	bl	129e8 <coda_cursor_goto_next_record_field@plt>
   181ac:	cmp	r0, #0
   181b0:	beq	181b8 <print_yaml_data@@Base+0xb0c>
   181b4:	bl	184f8 <handle_coda_error@@Base>
   181b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   181bc:	add	r1, r0, #1
   181c0:	ldr	r0, [sp, #16]
   181c4:	str	r1, [fp, #-44]	; 0xffffffd4
   181c8:	cmp	r1, r0
   181cc:	blt	180dc <print_yaml_data@@Base+0xa30>
   181d0:	b	18090 <print_yaml_data@@Base+0x9e4>
   181d4:	vldr	d0, [sp, #8]
   181d8:	movw	r0, #42928	; 0xa7b0
   181dc:	add	r1, sp, #16
   181e0:	movt	r0, #1
   181e4:	bl	126d0 <coda_time_double_to_string@plt>
   181e8:	cmp	r0, #0
   181ec:	beq	181fc <print_yaml_data@@Base+0xb50>
   181f0:	movw	r0, #42957	; 0xa7cd
   181f4:	movt	r0, #1
   181f8:	b	180a4 <print_yaml_data@@Base+0x9f8>
   181fc:	movw	r0, #43373	; 0xa96d
   18200:	add	r1, sp, #16
   18204:	movt	r0, #1
   18208:	bl	18230 <print_yaml_data@@Base+0xb84>
   1820c:	b	180a8 <print_yaml_data@@Base+0x9fc>
   18210:	movw	r0, #41744	; 0xa310
   18214:	movw	r1, #43286	; 0xa916
   18218:	movw	r3, #41756	; 0xa31c
   1821c:	mov	r2, #44	; 0x2c
   18220:	movt	r0, #1
   18224:	movt	r1, #1
   18228:	movt	r3, #1
   1822c:	bl	12ab4 <__assert_fail@plt>
   18230:	sub	sp, sp, #12
   18234:	push	{fp, lr}
   18238:	mov	fp, sp
   1823c:	sub	sp, sp, #4
   18240:	mov	ip, r0
   18244:	add	r0, fp, #8
   18248:	stm	r0, {r1, r2, r3}
   1824c:	movw	r0, #53392	; 0xd090
   18250:	add	r2, fp, #8
   18254:	mov	r1, ip
   18258:	movt	r0, #2
   1825c:	str	r2, [sp]
   18260:	ldr	r0, [r0]
   18264:	bl	129b8 <vfprintf@plt>
   18268:	mov	sp, fp
   1826c:	pop	{fp, lr}
   18270:	add	sp, sp, #12
   18274:	bx	lr
   18278:	sub	sp, sp, #12
   1827c:	push	{r4, r5, r6, r7, fp, lr}
   18280:	add	fp, sp, #16
   18284:	sub	sp, sp, #4
   18288:	mov	r4, r0
   1828c:	add	r0, fp, #8
   18290:	stm	r0, {r1, r2, r3}
   18294:	movw	r0, #49608	; 0xc1c8
   18298:	movt	r0, #2
   1829c:	ldr	r0, [r0, #4]
   182a0:	cmp	r0, #0
   182a4:	blt	1830c <print_yaml_data@@Base+0xc60>
   182a8:	beq	182e0 <print_yaml_data@@Base+0xc34>
   182ac:	movw	r7, #53392	; 0xd090
   182b0:	movw	r5, #41774	; 0xa32e
   182b4:	add	r6, r0, #1
   182b8:	movt	r7, #2
   182bc:	movt	r5, #1
   182c0:	ldr	r3, [r7]
   182c4:	mov	r0, r5
   182c8:	mov	r1, #2
   182cc:	mov	r2, #1
   182d0:	bl	127d8 <fwrite@plt>
   182d4:	sub	r6, r6, #1
   182d8:	cmp	r6, #1
   182dc:	bgt	182c0 <print_yaml_data@@Base+0xc14>
   182e0:	movw	r0, #53392	; 0xd090
   182e4:	add	r2, fp, #8
   182e8:	mov	r1, r4
   182ec:	movt	r0, #2
   182f0:	str	r2, [sp]
   182f4:	ldr	r0, [r0]
   182f8:	bl	129b8 <vfprintf@plt>
   182fc:	sub	sp, fp, #16
   18300:	pop	{r4, r5, r6, r7, fp, lr}
   18304:	add	sp, sp, #12
   18308:	bx	lr
   1830c:	movw	r0, #41744	; 0xa310
   18310:	movw	r1, #43286	; 0xa916
   18314:	movw	r3, #41756	; 0xa31c
   18318:	mov	r2, #44	; 0x2c
   1831c:	movt	r0, #1
   18320:	movt	r1, #1
   18324:	movt	r3, #1
   18328:	bl	12ab4 <__assert_fail@plt>
   1832c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18330:	add	fp, sp, #28
   18334:	sub	sp, sp, #4
   18338:	cmp	r1, #1
   1833c:	blt	184f0 <print_yaml_data@@Base+0xe44>
   18340:	movw	r6, #41343	; 0xa17f
   18344:	movw	r8, #41346	; 0xa182
   18348:	movw	r9, #41352	; 0xa188
   1834c:	movw	sl, #41355	; 0xa18b
   18350:	movw	r7, #42995	; 0xa7f3
   18354:	mov	r4, r1
   18358:	mov	r5, r0
   1835c:	movt	r6, #1
   18360:	movt	r8, #1
   18364:	movt	r9, #1
   18368:	movt	sl, #1
   1836c:	movt	r7, #1
   18370:	ldrb	r1, [r5]
   18374:	sub	r0, r1, #8
   18378:	cmp	r0, #26
   1837c:	bhi	18410 <print_yaml_data@@Base+0xd64>
   18380:	add	r2, pc, #0
   18384:	ldr	pc, [r2, r0, lsl #2]
   18388:	strdeq	r8, [r1], -r4
   1838c:	andeq	r8, r1, r0, ror #8
   18390:	andeq	r8, r1, r8, ror r4
   18394:	andeq	r8, r1, r4, lsr r4
   18398:	muleq	r1, r0, r4
   1839c:	andeq	r8, r1, r8, lsr #9
   183a0:	andeq	r8, r1, r4, lsr r4
   183a4:	andeq	r8, r1, r4, lsr r4
   183a8:	andeq	r8, r1, r4, lsr r4
   183ac:	andeq	r8, r1, r4, lsr r4
   183b0:	andeq	r8, r1, r4, lsr r4
   183b4:	andeq	r8, r1, r4, lsr r4
   183b8:	andeq	r8, r1, r4, lsr r4
   183bc:	andeq	r8, r1, r4, lsr r4
   183c0:	andeq	r8, r1, r4, lsr r4
   183c4:	andeq	r8, r1, r4, lsr r4
   183c8:	andeq	r8, r1, r4, lsr r4
   183cc:	andeq	r8, r1, r4, lsr r4
   183d0:	andeq	r8, r1, r4, lsr r4
   183d4:	andeq	r8, r1, r4, lsr r4
   183d8:	andeq	r8, r1, r4, lsr r4
   183dc:	andeq	r8, r1, r4, lsr r4
   183e0:	andeq	r8, r1, r4, lsr r4
   183e4:	andeq	r8, r1, r4, lsr r4
   183e8:	andeq	r8, r1, r4, lsr r4
   183ec:	andeq	r8, r1, r4, lsr r4
   183f0:	andeq	r8, r1, r0, asr #9
   183f4:	movw	r0, #41340	; 0xa17c
   183f8:	movt	r0, #1
   183fc:	bl	18230 <print_yaml_data@@Base+0xb84>
   18400:	subs	r4, r4, #1
   18404:	add	r5, r5, #1
   18408:	bne	18370 <print_yaml_data@@Base+0xcc4>
   1840c:	b	184f0 <print_yaml_data@@Base+0xe44>
   18410:	cmp	r1, #92	; 0x5c
   18414:	bne	18434 <print_yaml_data@@Base+0xd88>
   18418:	movw	r0, #41358	; 0xa18e
   1841c:	movt	r0, #1
   18420:	bl	18230 <print_yaml_data@@Base+0xb84>
   18424:	subs	r4, r4, #1
   18428:	add	r5, r5, #1
   1842c:	bne	18370 <print_yaml_data@@Base+0xcc4>
   18430:	b	184f0 <print_yaml_data@@Base+0xe44>
   18434:	sub	r0, r1, #32
   18438:	uxtb	r0, r0
   1843c:	cmp	r0, #94	; 0x5e
   18440:	bhi	184d8 <print_yaml_data@@Base+0xe2c>
   18444:	movw	r0, #41777	; 0xa331
   18448:	movt	r0, #1
   1844c:	bl	18230 <print_yaml_data@@Base+0xb84>
   18450:	subs	r4, r4, #1
   18454:	add	r5, r5, #1
   18458:	bne	18370 <print_yaml_data@@Base+0xcc4>
   1845c:	b	184f0 <print_yaml_data@@Base+0xe44>
   18460:	mov	r0, r6
   18464:	bl	18230 <print_yaml_data@@Base+0xb84>
   18468:	subs	r4, r4, #1
   1846c:	add	r5, r5, #1
   18470:	bne	18370 <print_yaml_data@@Base+0xcc4>
   18474:	b	184f0 <print_yaml_data@@Base+0xe44>
   18478:	mov	r0, r8
   1847c:	bl	18230 <print_yaml_data@@Base+0xb84>
   18480:	subs	r4, r4, #1
   18484:	add	r5, r5, #1
   18488:	bne	18370 <print_yaml_data@@Base+0xcc4>
   1848c:	b	184f0 <print_yaml_data@@Base+0xe44>
   18490:	mov	r0, r9
   18494:	bl	18230 <print_yaml_data@@Base+0xb84>
   18498:	subs	r4, r4, #1
   1849c:	add	r5, r5, #1
   184a0:	bne	18370 <print_yaml_data@@Base+0xcc4>
   184a4:	b	184f0 <print_yaml_data@@Base+0xe44>
   184a8:	mov	r0, sl
   184ac:	bl	18230 <print_yaml_data@@Base+0xb84>
   184b0:	subs	r4, r4, #1
   184b4:	add	r5, r5, #1
   184b8:	bne	18370 <print_yaml_data@@Base+0xcc4>
   184bc:	b	184f0 <print_yaml_data@@Base+0xe44>
   184c0:	mov	r0, r7
   184c4:	bl	18230 <print_yaml_data@@Base+0xb84>
   184c8:	subs	r4, r4, #1
   184cc:	add	r5, r5, #1
   184d0:	bne	18370 <print_yaml_data@@Base+0xcc4>
   184d4:	b	184f0 <print_yaml_data@@Base+0xe44>
   184d8:	movw	r0, #42998	; 0xa7f6
   184dc:	movt	r0, #1
   184e0:	bl	18230 <print_yaml_data@@Base+0xb84>
   184e4:	subs	r4, r4, #1
   184e8:	add	r5, r5, #1
   184ec:	bne	18370 <print_yaml_data@@Base+0xcc4>
   184f0:	sub	sp, fp, #28
   184f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000184f8 <handle_coda_error@@Base>:
   184f8:	push	{fp, lr}
   184fc:	mov	fp, sp
   18500:	movw	r5, #49584	; 0xc1b0
   18504:	movt	r5, #2
   18508:	ldr	r4, [r5]
   1850c:	bl	12a60 <coda_get_errno@plt>
   18510:	ldr	r0, [r0]
   18514:	bl	12a18 <coda_errno_to_string@plt>
   18518:	movw	r1, #43366	; 0xa966
   1851c:	mov	r2, r0
   18520:	mov	r0, r4
   18524:	movt	r1, #1
   18528:	bl	128bc <fprintf@plt>
   1852c:	ldr	r0, [r5]
   18530:	bl	126c4 <fflush@plt>
   18534:	mov	r0, #1
   18538:	bl	12874 <exit@plt>

0001853c <main@@Base>:
   1853c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18540:	add	fp, sp, #28
   18544:	sub	sp, sp, #20
   18548:	cmp	r0, #1
   1854c:	beq	19838 <main@@Base+0x12fc>
   18550:	ldr	r6, [r1, #4]
   18554:	mov	r9, r1
   18558:	movw	r1, #43377	; 0xa971
   1855c:	mov	sl, r0
   18560:	movt	r1, #1
   18564:	mov	r0, r6
   18568:	bl	12664 <strcmp@plt>
   1856c:	cmp	r0, #0
   18570:	beq	19838 <main@@Base+0x12fc>
   18574:	movw	r1, #43380	; 0xa974
   18578:	mov	r0, r6
   1857c:	movt	r1, #1
   18580:	bl	12664 <strcmp@plt>
   18584:	cmp	r0, #0
   18588:	beq	19838 <main@@Base+0x12fc>
   1858c:	movw	r1, #43387	; 0xa97b
   18590:	mov	r0, r6
   18594:	movt	r1, #1
   18598:	bl	12664 <strcmp@plt>
   1859c:	cmp	r0, #0
   185a0:	beq	19844 <main@@Base+0x1308>
   185a4:	movw	r1, #43390	; 0xa97e
   185a8:	mov	r0, r6
   185ac:	movt	r1, #1
   185b0:	bl	12664 <strcmp@plt>
   185b4:	cmp	r0, #0
   185b8:	beq	19844 <main@@Base+0x1308>
   185bc:	cmp	sl, #3
   185c0:	blt	185dc <main@@Base+0xa0>
   185c4:	movw	r1, #43400	; 0xa988
   185c8:	mov	r0, r6
   185cc:	movt	r1, #1
   185d0:	bl	12664 <strcmp@plt>
   185d4:	cmp	r0, #0
   185d8:	beq	19174 <main@@Base+0xc38>
   185dc:	ldr	r0, [r9]
   185e0:	movw	r2, #43403	; 0xa98b
   185e4:	mov	r1, #0
   185e8:	movt	r2, #1
   185ec:	bl	1270c <coda_set_definition_path_conditional@plt>
   185f0:	mov	r7, #1
   185f4:	cmp	r0, #0
   185f8:	bne	19850 <main@@Base+0x1314>
   185fc:	ldr	r6, [r9, r7, lsl #2]
   18600:	movw	r1, #43429	; 0xa9a5
   18604:	movt	r1, #1
   18608:	mov	r0, r6
   1860c:	bl	12664 <strcmp@plt>
   18610:	cmp	r0, #0
   18614:	beq	1895c <main@@Base+0x420>
   18618:	movw	r1, #43434	; 0xa9aa
   1861c:	mov	r0, r6
   18620:	movt	r1, #1
   18624:	bl	12664 <strcmp@plt>
   18628:	cmp	r0, #0
   1862c:	beq	18ce4 <main@@Base+0x7a8>
   18630:	movw	r1, #43440	; 0xa9b0
   18634:	mov	r0, r6
   18638:	movt	r1, #1
   1863c:	bl	12664 <strcmp@plt>
   18640:	cmp	r0, #0
   18644:	beq	19214 <main@@Base+0xcd8>
   18648:	movw	r1, #43445	; 0xa9b5
   1864c:	mov	r0, r6
   18650:	movt	r1, #1
   18654:	bl	12664 <strcmp@plt>
   18658:	cmp	r0, #0
   1865c:	beq	1950c <main@@Base+0xfd0>
   18660:	movw	r1, #43450	; 0xa9ba
   18664:	mov	r0, r6
   18668:	movt	r1, #1
   1866c:	bl	12664 <strcmp@plt>
   18670:	cmp	r0, #0
   18674:	bne	19788 <main@@Base+0x124c>
   18678:	movw	r0, #49640	; 0xc1e8
   1867c:	mov	r6, #0
   18680:	mov	r1, #5
   18684:	movt	r0, #2
   18688:	str	r6, [r0]
   1868c:	movw	r0, #53412	; 0xd0a4
   18690:	movt	r0, #2
   18694:	str	r1, [r0]
   18698:	movw	r0, #49624	; 0xc1d8
   1869c:	movw	r1, #53392	; 0xd090
   186a0:	movt	r0, #2
   186a4:	movt	r1, #2
   186a8:	str	r6, [r0]
   186ac:	movw	r0, #53416	; 0xd0a8
   186b0:	movt	r0, #2
   186b4:	str	r6, [r0]
   186b8:	movw	r0, #49588	; 0xc1b4
   186bc:	movt	r0, #2
   186c0:	ldr	r0, [r0]
   186c4:	str	r0, [r1]
   186c8:	add	r0, r7, #1
   186cc:	sub	r4, sl, r0
   186d0:	cmp	r4, #1
   186d4:	blt	19788 <main@@Base+0x124c>
   186d8:	add	r7, r9, r0, lsl #2
   186dc:	sub	r0, r4, #1
   186e0:	movw	r9, #43517	; 0xa9fd
   186e4:	movw	r8, #43823	; 0xab2f
   186e8:	str	r0, [sp, #12]
   186ec:	mov	r0, #1
   186f0:	movt	r9, #1
   186f4:	movt	r8, #1
   186f8:	str	r0, [sp, #16]
   186fc:	mov	r0, #0
   18700:	str	r0, [sp, #8]
   18704:	mov	r0, #0
   18708:	str	r0, [sp, #4]
   1870c:	mov	r0, #0
   18710:	str	r0, [sp]
   18714:	ldr	sl, [r7, r6, lsl #2]
   18718:	mov	r1, r9
   1871c:	mov	r0, sl
   18720:	bl	12664 <strcmp@plt>
   18724:	cmp	r0, #0
   18728:	beq	188bc <main@@Base+0x380>
   1872c:	mov	r0, sl
   18730:	mov	r1, r8
   18734:	bl	12664 <strcmp@plt>
   18738:	cmp	r0, #0
   1873c:	beq	188bc <main@@Base+0x380>
   18740:	movw	r1, #43683	; 0xaaa3
   18744:	mov	r0, sl
   18748:	movt	r1, #1
   1874c:	bl	12664 <strcmp@plt>
   18750:	cmp	r0, #0
   18754:	beq	18770 <main@@Base+0x234>
   18758:	movw	r1, #43686	; 0xaaa6
   1875c:	mov	r0, sl
   18760:	movt	r1, #1
   18764:	bl	12664 <strcmp@plt>
   18768:	cmp	r0, #0
   1876c:	bne	1878c <main@@Base+0x250>
   18770:	add	r5, r6, #1
   18774:	cmp	r5, r4
   18778:	bge	1878c <main@@Base+0x250>
   1877c:	ldr	r0, [r7, r5, lsl #2]
   18780:	ldrb	r1, [r0]
   18784:	cmp	r1, #45	; 0x2d
   18788:	bne	188d8 <main@@Base+0x39c>
   1878c:	movw	r1, #43813	; 0xab25
   18790:	mov	r0, sl
   18794:	movt	r1, #1
   18798:	bl	12664 <strcmp@plt>
   1879c:	cmp	r0, #0
   187a0:	beq	187bc <main@@Base+0x280>
   187a4:	movw	r1, #43816	; 0xab28
   187a8:	mov	r0, sl
   187ac:	movt	r1, #1
   187b0:	bl	12664 <strcmp@plt>
   187b4:	cmp	r0, #0
   187b8:	bne	187d8 <main@@Base+0x29c>
   187bc:	add	r5, r6, #1
   187c0:	cmp	r5, r4
   187c4:	bge	187d8 <main@@Base+0x29c>
   187c8:	ldr	r0, [r7, r5, lsl #2]
   187cc:	ldrb	r1, [r0]
   187d0:	cmp	r1, #45	; 0x2d
   187d4:	bne	188f4 <main@@Base+0x3b8>
   187d8:	movw	r1, #43855	; 0xab4f
   187dc:	mov	r0, sl
   187e0:	movt	r1, #1
   187e4:	bl	12664 <strcmp@plt>
   187e8:	cmp	r0, #0
   187ec:	bne	1880c <main@@Base+0x2d0>
   187f0:	add	r5, r6, #1
   187f4:	cmp	r5, r4
   187f8:	bge	1880c <main@@Base+0x2d0>
   187fc:	ldr	r0, [r7, r5, lsl #2]
   18800:	ldrb	r1, [r0]
   18804:	cmp	r1, #45	; 0x2d
   18808:	bne	18910 <main@@Base+0x3d4>
   1880c:	mov	r9, r7
   18810:	ldr	r7, [sp, #12]
   18814:	movw	r1, #43867	; 0xab5b
   18818:	mov	r0, sl
   1881c:	mov	r8, r4
   18820:	movt	r1, #1
   18824:	bl	12664 <strcmp@plt>
   18828:	cmp	r0, #0
   1882c:	bne	18870 <main@@Base+0x334>
   18830:	add	r5, r6, #3
   18834:	cmp	r5, r8
   18838:	bge	18870 <main@@Base+0x334>
   1883c:	add	r0, r9, r6, lsl #2
   18840:	ldr	r4, [r0, #4]
   18844:	ldrb	r1, [r4]
   18848:	cmp	r1, #45	; 0x2d
   1884c:	beq	18870 <main@@Base+0x334>
   18850:	ldr	r2, [r0, #8]
   18854:	ldrb	r0, [r2]
   18858:	cmp	r0, #45	; 0x2d
   1885c:	beq	18870 <main@@Base+0x334>
   18860:	ldr	r0, [r9, r5, lsl #2]
   18864:	ldrb	r1, [r0]
   18868:	cmp	r1, #45	; 0x2d
   1886c:	bne	18938 <main@@Base+0x3fc>
   18870:	cmp	r6, r7
   18874:	bne	19788 <main@@Base+0x124c>
   18878:	ldrb	r0, [sl]
   1887c:	cmp	r0, #45	; 0x2d
   18880:	beq	19788 <main@@Base+0x124c>
   18884:	movw	r0, #49640	; 0xc1e8
   18888:	mov	r5, r7
   1888c:	movt	r0, #2
   18890:	str	sl, [r0]
   18894:	mov	r7, r9
   18898:	movw	r9, #43517	; 0xa9fd
   1889c:	mov	r4, r8
   188a0:	movw	r8, #43823	; 0xab2f
   188a4:	movt	r9, #1
   188a8:	movt	r8, #1
   188ac:	add	r6, r5, #1
   188b0:	cmp	r6, r4
   188b4:	blt	18714 <main@@Base+0x1d8>
   188b8:	b	19184 <main@@Base+0xc48>
   188bc:	mov	r0, #0
   188c0:	mov	r5, r6
   188c4:	str	r0, [sp, #16]
   188c8:	add	r6, r5, #1
   188cc:	cmp	r6, r4
   188d0:	blt	18714 <main@@Base+0x1d8>
   188d4:	b	19184 <main@@Base+0xc48>
   188d8:	movw	r1, #49624	; 0xc1d8
   188dc:	movt	r1, #2
   188e0:	str	r0, [r1]
   188e4:	add	r6, r5, #1
   188e8:	cmp	r6, r4
   188ec:	blt	18714 <main@@Base+0x1d8>
   188f0:	b	19184 <main@@Base+0xc48>
   188f4:	movw	r1, #53416	; 0xd0a8
   188f8:	movt	r1, #2
   188fc:	str	r0, [r1]
   18900:	add	r6, r5, #1
   18904:	cmp	r6, r4
   18908:	blt	18714 <main@@Base+0x1d8>
   1890c:	b	19184 <main@@Base+0xc48>
   18910:	mov	r1, #0
   18914:	mov	r2, #10
   18918:	bl	12670 <strtol@plt>
   1891c:	movw	r1, #49580	; 0xc1ac
   18920:	movt	r1, #2
   18924:	str	r0, [r1]
   18928:	add	r6, r5, #1
   1892c:	cmp	r6, r4
   18930:	blt	18714 <main@@Base+0x1d8>
   18934:	b	19184 <main@@Base+0xc48>
   18938:	mov	r6, r2
   1893c:	mov	r1, #0
   18940:	mov	r2, #10
   18944:	bl	12670 <strtol@plt>
   18948:	str	r0, [sp, #8]
   1894c:	str	r4, [sp]
   18950:	mov	r0, r6
   18954:	str	r6, [sp, #4]
   18958:	b	18894 <main@@Base+0x358>
   1895c:	movw	r0, #53412	; 0xd0a4
   18960:	mov	r8, #0
   18964:	mov	r5, #1
   18968:	movw	r1, #49640	; 0xc1e8
   1896c:	movw	r6, #49636	; 0xc1e4
   18970:	movt	r0, #2
   18974:	movt	r1, #2
   18978:	movt	r6, #2
   1897c:	str	r8, [r0]
   18980:	movw	r0, #49616	; 0xc1d0
   18984:	str	r8, [r1]
   18988:	str	r8, [r1, #664]	; 0x298
   1898c:	str	r8, [r6]
   18990:	movt	r0, #2
   18994:	str	r5, [r0]
   18998:	movw	r0, #49620	; 0xc1d4
   1899c:	movt	r0, #2
   189a0:	str	r8, [r0]
   189a4:	movw	r0, #53400	; 0xd098
   189a8:	movt	r0, #2
   189ac:	str	r8, [r0]
   189b0:	movw	r0, #49632	; 0xc1e0
   189b4:	movt	r0, #2
   189b8:	str	r8, [r0]
   189bc:	movw	r0, #53404	; 0xd09c
   189c0:	movt	r0, #2
   189c4:	str	r8, [r0]
   189c8:	add	r0, r7, #1
   189cc:	sub	r7, sl, r0
   189d0:	cmp	r7, #1
   189d4:	blt	19788 <main@@Base+0x124c>
   189d8:	add	r9, r9, r0, lsl #2
   189dc:	sub	r0, r7, #1
   189e0:	movw	r4, #43503	; 0xa9ef
   189e4:	str	r0, [sp, #8]
   189e8:	mov	r0, #1
   189ec:	movt	r4, #1
   189f0:	str	r0, [sp, #16]
   189f4:	mov	r0, #1
   189f8:	str	r0, [sp, #12]
   189fc:	ldr	sl, [r9, r8, lsl #2]
   18a00:	mov	r1, r4
   18a04:	mov	r0, sl
   18a08:	bl	12664 <strcmp@plt>
   18a0c:	cmp	r0, #0
   18a10:	beq	18b9c <main@@Base+0x660>
   18a14:	movw	r1, #43506	; 0xa9f2
   18a18:	mov	r0, sl
   18a1c:	movt	r1, #1
   18a20:	bl	12664 <strcmp@plt>
   18a24:	cmp	r0, #0
   18a28:	beq	18b9c <main@@Base+0x660>
   18a2c:	movw	r1, #43517	; 0xa9fd
   18a30:	mov	r0, sl
   18a34:	movt	r1, #1
   18a38:	bl	12664 <strcmp@plt>
   18a3c:	cmp	r0, #0
   18a40:	beq	18bb0 <main@@Base+0x674>
   18a44:	movw	r1, #43520	; 0xaa00
   18a48:	mov	r0, sl
   18a4c:	movt	r1, #1
   18a50:	bl	12664 <strcmp@plt>
   18a54:	cmp	r0, #0
   18a58:	beq	18bb0 <main@@Base+0x674>
   18a5c:	movw	r1, #43542	; 0xaa16
   18a60:	mov	r0, sl
   18a64:	mov	r4, r6
   18a68:	movt	r1, #1
   18a6c:	bl	12664 <strcmp@plt>
   18a70:	cmp	r0, #0
   18a74:	beq	18a90 <main@@Base+0x554>
   18a78:	movw	r1, #43545	; 0xaa19
   18a7c:	mov	r0, sl
   18a80:	movt	r1, #1
   18a84:	bl	12664 <strcmp@plt>
   18a88:	cmp	r0, #0
   18a8c:	bne	18aac <main@@Base+0x570>
   18a90:	add	r6, r8, #1
   18a94:	cmp	r6, r7
   18a98:	bge	18aac <main@@Base+0x570>
   18a9c:	ldr	r0, [r9, r6, lsl #2]
   18aa0:	ldrb	r1, [r0]
   18aa4:	cmp	r1, #45	; 0x2d
   18aa8:	bne	18c0c <main@@Base+0x6d0>
   18aac:	movw	r1, #43595	; 0xaa4b
   18ab0:	mov	r0, sl
   18ab4:	movt	r1, #1
   18ab8:	bl	12664 <strcmp@plt>
   18abc:	cmp	r0, #0
   18ac0:	beq	18bc8 <main@@Base+0x68c>
   18ac4:	movw	r1, #43598	; 0xaa4e
   18ac8:	mov	r0, sl
   18acc:	movt	r1, #1
   18ad0:	bl	12664 <strcmp@plt>
   18ad4:	cmp	r0, #0
   18ad8:	beq	18bc8 <main@@Base+0x68c>
   18adc:	movw	r1, #43605	; 0xaa55
   18ae0:	mov	r0, sl
   18ae4:	movt	r1, #1
   18ae8:	bl	12664 <strcmp@plt>
   18aec:	cmp	r0, #0
   18af0:	mov	r6, r4
   18af4:	beq	18be4 <main@@Base+0x6a8>
   18af8:	movw	r1, #43608	; 0xaa58
   18afc:	mov	r0, sl
   18b00:	movt	r1, #1
   18b04:	bl	12664 <strcmp@plt>
   18b08:	cmp	r0, #0
   18b0c:	beq	18be4 <main@@Base+0x6a8>
   18b10:	movw	r1, #43615	; 0xaa5f
   18b14:	mov	r0, sl
   18b18:	movt	r1, #1
   18b1c:	bl	12664 <strcmp@plt>
   18b20:	movw	r4, #43503	; 0xa9ef
   18b24:	cmp	r0, #0
   18b28:	mov	r5, #1
   18b2c:	movt	r4, #1
   18b30:	beq	18c3c <main@@Base+0x700>
   18b34:	movw	r1, #43629	; 0xaa6d
   18b38:	mov	r0, sl
   18b3c:	movt	r1, #1
   18b40:	bl	12664 <strcmp@plt>
   18b44:	cmp	r0, #0
   18b48:	beq	18c58 <main@@Base+0x71c>
   18b4c:	movw	r1, #43642	; 0xaa7a
   18b50:	mov	r0, sl
   18b54:	movt	r1, #1
   18b58:	bl	12664 <strcmp@plt>
   18b5c:	cmp	r0, #0
   18b60:	beq	18c78 <main@@Base+0x73c>
   18b64:	ldr	r0, [sp, #8]
   18b68:	cmp	r8, r0
   18b6c:	bne	19788 <main@@Base+0x124c>
   18b70:	ldrb	r0, [sl]
   18b74:	cmp	r0, #45	; 0x2d
   18b78:	beq	19788 <main@@Base+0x124c>
   18b7c:	ldr	r8, [sp, #8]
   18b80:	movw	r0, #49640	; 0xc1e8
   18b84:	movt	r0, #2
   18b88:	str	sl, [r0]
   18b8c:	add	r8, r8, #1
   18b90:	cmp	r8, r7
   18b94:	blt	189fc <main@@Base+0x4c0>
   18b98:	b	18c8c <main@@Base+0x750>
   18b9c:	str	r5, [r6]
   18ba0:	add	r8, r8, #1
   18ba4:	cmp	r8, r7
   18ba8:	blt	189fc <main@@Base+0x4c0>
   18bac:	b	18c8c <main@@Base+0x750>
   18bb0:	mov	r0, #0
   18bb4:	str	r0, [sp, #16]
   18bb8:	add	r8, r8, #1
   18bbc:	cmp	r8, r7
   18bc0:	blt	189fc <main@@Base+0x4c0>
   18bc4:	b	18c8c <main@@Base+0x750>
   18bc8:	movw	r1, #53400	; 0xd098
   18bcc:	mov	r0, #1
   18bd0:	mov	r6, r4
   18bd4:	mov	r5, #1
   18bd8:	movt	r1, #2
   18bdc:	str	r0, [r1]
   18be0:	b	18bf4 <main@@Base+0x6b8>
   18be4:	movw	r0, #49632	; 0xc1e0
   18be8:	mov	r5, #1
   18bec:	movt	r0, #2
   18bf0:	str	r5, [r0]
   18bf4:	movw	r4, #43503	; 0xa9ef
   18bf8:	movt	r4, #1
   18bfc:	add	r8, r8, #1
   18c00:	cmp	r8, r7
   18c04:	blt	189fc <main@@Base+0x4c0>
   18c08:	b	18c8c <main@@Base+0x750>
   18c0c:	bl	159e8 <codadump_filter_create@@Base>
   18c10:	movw	r1, #49640	; 0xc1e8
   18c14:	mov	r8, r6
   18c18:	mov	r6, r4
   18c1c:	movw	r4, #43503	; 0xa9ef
   18c20:	cmp	r0, #0
   18c24:	mov	r5, #1
   18c28:	movt	r1, #2
   18c2c:	movt	r4, #1
   18c30:	str	r0, [r1, #664]	; 0x298
   18c34:	bne	18bfc <main@@Base+0x6c0>
   18c38:	b	19884 <main@@Base+0x1348>
   18c3c:	movw	r0, #53404	; 0xd09c
   18c40:	movt	r0, #2
   18c44:	str	r5, [r0]
   18c48:	add	r8, r8, #1
   18c4c:	cmp	r8, r7
   18c50:	blt	189fc <main@@Base+0x4c0>
   18c54:	b	18c8c <main@@Base+0x750>
   18c58:	movw	r0, #49620	; 0xc1d4
   18c5c:	str	r5, [r6]
   18c60:	movt	r0, #2
   18c64:	str	r5, [r0]
   18c68:	add	r8, r8, #1
   18c6c:	cmp	r8, r7
   18c70:	blt	189fc <main@@Base+0x4c0>
   18c74:	b	18c8c <main@@Base+0x750>
   18c78:	mov	r0, #0
   18c7c:	str	r0, [sp, #12]
   18c80:	add	r8, r8, #1
   18c84:	cmp	r8, r7
   18c88:	blt	189fc <main@@Base+0x4c0>
   18c8c:	movw	r0, #49640	; 0xc1e8
   18c90:	movt	r0, #2
   18c94:	ldr	r0, [r0]
   18c98:	cmp	r0, #0
   18c9c:	ldrbne	r0, [r0]
   18ca0:	cmpne	r0, #0
   18ca4:	beq	19788 <main@@Base+0x124c>
   18ca8:	bl	128e0 <coda_init@plt>
   18cac:	cmp	r0, #0
   18cb0:	bne	19850 <main@@Base+0x1314>
   18cb4:	ldr	r0, [sp, #12]
   18cb8:	clz	r0, r0
   18cbc:	lsr	r0, r0, #5
   18cc0:	bl	12724 <coda_set_option_bypass_special_types@plt>
   18cc4:	mov	r0, #0
   18cc8:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   18ccc:	ldr	r0, [sp, #16]
   18cd0:	bl	128ec <coda_set_option_perform_conversions@plt>
   18cd4:	bl	16ef0 <traverse_info_init@@Base>
   18cd8:	bl	14764 <dim_info_init@@Base>
   18cdc:	bl	16f48 <traverse_product@@Base>
   18ce0:	b	1915c <main@@Base+0xc20>
   18ce4:	movw	r0, #53412	; 0xd0a4
   18ce8:	mov	r2, #1
   18cec:	movw	r1, #49640	; 0xc1e8
   18cf0:	mov	r6, #0
   18cf4:	movt	r0, #2
   18cf8:	movt	r1, #2
   18cfc:	str	r2, [r0]
   18d00:	movw	r0, #49624	; 0xc1d8
   18d04:	str	r6, [r1]
   18d08:	str	r6, [r1, #664]	; 0x298
   18d0c:	movw	r1, #53396	; 0xd094
   18d10:	movt	r0, #2
   18d14:	movt	r1, #2
   18d18:	str	r6, [r0]
   18d1c:	movw	r0, #41775	; 0xa32f
   18d20:	movt	r0, #1
   18d24:	str	r0, [r1]
   18d28:	movw	r0, #49616	; 0xc1d0
   18d2c:	movw	r1, #53392	; 0xd090
   18d30:	movt	r0, #2
   18d34:	movt	r1, #2
   18d38:	str	r2, [r0]
   18d3c:	movw	r0, #49636	; 0xc1e4
   18d40:	movt	r0, #2
   18d44:	str	r2, [r0]
   18d48:	movw	r0, #53408	; 0xd0a0
   18d4c:	movt	r0, #2
   18d50:	str	r6, [r0]
   18d54:	movw	r0, #53792	; 0xd220
   18d58:	movt	r0, #2
   18d5c:	str	r6, [r0]
   18d60:	movw	r0, #53796	; 0xd224
   18d64:	movt	r0, #2
   18d68:	str	r6, [r0]
   18d6c:	movw	r0, #49628	; 0xc1dc
   18d70:	movt	r0, #2
   18d74:	str	r6, [r0]
   18d78:	movw	r0, #49588	; 0xc1b4
   18d7c:	movt	r0, #2
   18d80:	ldr	r0, [r0]
   18d84:	str	r0, [r1]
   18d88:	add	r0, r7, #1
   18d8c:	sub	r8, sl, r0
   18d90:	cmp	r8, #1
   18d94:	blt	19788 <main@@Base+0x124c>
   18d98:	movw	r5, #43517	; 0xa9fd
   18d9c:	add	sl, r9, r0, lsl #2
   18da0:	sub	r0, r8, #1
   18da4:	mov	r4, #1
   18da8:	str	r0, [sp, #12]
   18dac:	movt	r5, #1
   18db0:	mov	r0, #1
   18db4:	str	r0, [sp, #16]
   18db8:	ldr	r9, [sl, r6, lsl #2]
   18dbc:	mov	r1, r5
   18dc0:	mov	r0, r9
   18dc4:	bl	12664 <strcmp@plt>
   18dc8:	cmp	r0, #0
   18dcc:	beq	18fdc <main@@Base+0xaa0>
   18dd0:	movw	r1, #43520	; 0xaa00
   18dd4:	mov	r0, r9
   18dd8:	movt	r1, #1
   18ddc:	bl	12664 <strcmp@plt>
   18de0:	cmp	r0, #0
   18de4:	beq	18fdc <main@@Base+0xaa0>
   18de8:	movw	r1, #43542	; 0xaa16
   18dec:	mov	r0, r9
   18df0:	movt	r1, #1
   18df4:	bl	12664 <strcmp@plt>
   18df8:	cmp	r0, #0
   18dfc:	beq	18e18 <main@@Base+0x8dc>
   18e00:	movw	r1, #43545	; 0xaa19
   18e04:	mov	r0, r9
   18e08:	movt	r1, #1
   18e0c:	bl	12664 <strcmp@plt>
   18e10:	cmp	r0, #0
   18e14:	bne	18e34 <main@@Base+0x8f8>
   18e18:	add	r7, r6, #1
   18e1c:	cmp	r7, r8
   18e20:	bge	18e34 <main@@Base+0x8f8>
   18e24:	ldr	r0, [sl, r7, lsl #2]
   18e28:	ldrb	r1, [r0]
   18e2c:	cmp	r1, #45	; 0x2d
   18e30:	bne	19014 <main@@Base+0xad8>
   18e34:	movw	r1, #43661	; 0xaa8d
   18e38:	mov	r0, r9
   18e3c:	movt	r1, #1
   18e40:	bl	12664 <strcmp@plt>
   18e44:	cmp	r0, #0
   18e48:	beq	18ff4 <main@@Base+0xab8>
   18e4c:	movw	r1, #43664	; 0xaa90
   18e50:	mov	r0, r9
   18e54:	movt	r1, #1
   18e58:	bl	12664 <strcmp@plt>
   18e5c:	cmp	r0, #0
   18e60:	beq	18ff4 <main@@Base+0xab8>
   18e64:	movw	r1, #43672	; 0xaa98
   18e68:	mov	r0, r9
   18e6c:	movt	r1, #1
   18e70:	bl	12664 <strcmp@plt>
   18e74:	cmp	r0, #0
   18e78:	beq	19004 <main@@Base+0xac8>
   18e7c:	movw	r1, #43675	; 0xaa9b
   18e80:	mov	r0, r9
   18e84:	movt	r1, #1
   18e88:	bl	12664 <strcmp@plt>
   18e8c:	cmp	r0, #0
   18e90:	beq	19004 <main@@Base+0xac8>
   18e94:	movw	r1, #43683	; 0xaaa3
   18e98:	mov	r0, r9
   18e9c:	movt	r1, #1
   18ea0:	bl	12664 <strcmp@plt>
   18ea4:	cmp	r0, #0
   18ea8:	beq	18ec4 <main@@Base+0x988>
   18eac:	movw	r1, #43686	; 0xaaa6
   18eb0:	mov	r0, r9
   18eb4:	movt	r1, #1
   18eb8:	bl	12664 <strcmp@plt>
   18ebc:	cmp	r0, #0
   18ec0:	bne	18ee0 <main@@Base+0x9a4>
   18ec4:	add	r7, r6, #1
   18ec8:	cmp	r7, r8
   18ecc:	bge	18ee0 <main@@Base+0x9a4>
   18ed0:	ldr	r0, [sl, r7, lsl #2]
   18ed4:	ldrb	r1, [r0]
   18ed8:	cmp	r1, #45	; 0x2d
   18edc:	bne	19070 <main@@Base+0xb34>
   18ee0:	movw	r1, #43695	; 0xaaaf
   18ee4:	mov	r0, r9
   18ee8:	movt	r1, #1
   18eec:	bl	12664 <strcmp@plt>
   18ef0:	cmp	r0, #0
   18ef4:	beq	1903c <main@@Base+0xb00>
   18ef8:	movw	r1, #43698	; 0xaab2
   18efc:	mov	r0, r9
   18f00:	movt	r1, #1
   18f04:	bl	12664 <strcmp@plt>
   18f08:	cmp	r0, #0
   18f0c:	beq	1903c <main@@Base+0xb00>
   18f10:	movw	r1, #43714	; 0xaac2
   18f14:	mov	r0, r9
   18f18:	movt	r1, #1
   18f1c:	bl	12664 <strcmp@plt>
   18f20:	cmp	r0, #0
   18f24:	beq	18f40 <main@@Base+0xa04>
   18f28:	movw	r1, #43717	; 0xaac5
   18f2c:	mov	r0, r9
   18f30:	movt	r1, #1
   18f34:	bl	12664 <strcmp@plt>
   18f38:	cmp	r0, #0
   18f3c:	bne	18f5c <main@@Base+0xa20>
   18f40:	add	r7, r6, #1
   18f44:	cmp	r7, r8
   18f48:	bge	18f5c <main@@Base+0xa20>
   18f4c:	ldr	r0, [sl, r7, lsl #2]
   18f50:	ldrb	r1, [r0]
   18f54:	cmp	r1, #45	; 0x2d
   18f58:	bne	1908c <main@@Base+0xb50>
   18f5c:	movw	r1, #43595	; 0xaa4b
   18f60:	mov	r0, r9
   18f64:	movt	r1, #1
   18f68:	bl	12664 <strcmp@plt>
   18f6c:	cmp	r0, #0
   18f70:	beq	1904c <main@@Base+0xb10>
   18f74:	movw	r1, #43736	; 0xaad8
   18f78:	mov	r0, r9
   18f7c:	movt	r1, #1
   18f80:	bl	12664 <strcmp@plt>
   18f84:	cmp	r0, #0
   18f88:	beq	1904c <main@@Base+0xb10>
   18f8c:	movw	r1, #43642	; 0xaa7a
   18f90:	mov	r0, r9
   18f94:	movt	r1, #1
   18f98:	bl	12664 <strcmp@plt>
   18f9c:	cmp	r0, #0
   18fa0:	beq	190a8 <main@@Base+0xb6c>
   18fa4:	ldr	r0, [sp, #12]
   18fa8:	cmp	r6, r0
   18fac:	bne	19788 <main@@Base+0x124c>
   18fb0:	ldrb	r0, [r9]
   18fb4:	cmp	r0, #45	; 0x2d
   18fb8:	beq	19788 <main@@Base+0x124c>
   18fbc:	ldr	r7, [sp, #12]
   18fc0:	movw	r0, #49640	; 0xc1e8
   18fc4:	movt	r0, #2
   18fc8:	str	r9, [r0]
   18fcc:	add	r6, r7, #1
   18fd0:	cmp	r6, r8
   18fd4:	blt	18db8 <main@@Base+0x87c>
   18fd8:	b	190c0 <main@@Base+0xb84>
   18fdc:	mov	r4, #0
   18fe0:	mov	r7, r6
   18fe4:	add	r6, r7, #1
   18fe8:	cmp	r6, r8
   18fec:	blt	18db8 <main@@Base+0x87c>
   18ff0:	b	190c0 <main@@Base+0xb84>
   18ff4:	movw	r1, #53408	; 0xd0a0
   18ff8:	mov	r0, #1
   18ffc:	movt	r1, #2
   19000:	b	19058 <main@@Base+0xb1c>
   19004:	movw	r1, #53792	; 0xd220
   19008:	mov	r0, #1
   1900c:	movt	r1, #2
   19010:	b	19058 <main@@Base+0xb1c>
   19014:	bl	159e8 <codadump_filter_create@@Base>
   19018:	movw	r1, #49640	; 0xc1e8
   1901c:	cmp	r0, #0
   19020:	movt	r1, #2
   19024:	str	r0, [r1, #664]	; 0x298
   19028:	beq	19884 <main@@Base+0x1348>
   1902c:	add	r6, r7, #1
   19030:	cmp	r6, r8
   19034:	blt	18db8 <main@@Base+0x87c>
   19038:	b	190c0 <main@@Base+0xb84>
   1903c:	movw	r1, #53796	; 0xd224
   19040:	mov	r0, #1
   19044:	movt	r1, #2
   19048:	b	19058 <main@@Base+0xb1c>
   1904c:	movw	r1, #49628	; 0xc1dc
   19050:	mov	r0, #1
   19054:	movt	r1, #2
   19058:	str	r0, [r1]
   1905c:	mov	r7, r6
   19060:	add	r6, r7, #1
   19064:	cmp	r6, r8
   19068:	blt	18db8 <main@@Base+0x87c>
   1906c:	b	190c0 <main@@Base+0xb84>
   19070:	movw	r1, #49624	; 0xc1d8
   19074:	movt	r1, #2
   19078:	str	r0, [r1]
   1907c:	add	r6, r7, #1
   19080:	cmp	r6, r8
   19084:	blt	18db8 <main@@Base+0x87c>
   19088:	b	190c0 <main@@Base+0xb84>
   1908c:	movw	r1, #53396	; 0xd094
   19090:	movt	r1, #2
   19094:	str	r0, [r1]
   19098:	add	r6, r7, #1
   1909c:	cmp	r6, r8
   190a0:	blt	18db8 <main@@Base+0x87c>
   190a4:	b	190c0 <main@@Base+0xb84>
   190a8:	mov	r0, #0
   190ac:	mov	r7, r6
   190b0:	str	r0, [sp, #16]
   190b4:	add	r6, r7, #1
   190b8:	cmp	r6, r8
   190bc:	blt	18db8 <main@@Base+0x87c>
   190c0:	movw	r0, #49640	; 0xc1e8
   190c4:	movt	r0, #2
   190c8:	ldr	r0, [r0]
   190cc:	cmp	r0, #0
   190d0:	ldrbne	r0, [r0]
   190d4:	cmpne	r0, #0
   190d8:	beq	19788 <main@@Base+0x124c>
   190dc:	bl	128e0 <coda_init@plt>
   190e0:	cmp	r0, #0
   190e4:	bne	19850 <main@@Base+0x1314>
   190e8:	ldr	r0, [sp, #16]
   190ec:	clz	r0, r0
   190f0:	lsr	r0, r0, #5
   190f4:	bl	12724 <coda_set_option_bypass_special_types@plt>
   190f8:	mov	r0, #0
   190fc:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   19100:	mov	r0, r4
   19104:	bl	128ec <coda_set_option_perform_conversions@plt>
   19108:	bl	16ef0 <traverse_info_init@@Base>
   1910c:	bl	14764 <dim_info_init@@Base>
   19110:	movw	r4, #49624	; 0xc1d8
   19114:	movw	r5, #53392	; 0xd090
   19118:	movt	r4, #2
   1911c:	movt	r5, #2
   19120:	ldr	r0, [r4]
   19124:	cmp	r0, #0
   19128:	beq	19144 <main@@Base+0xc08>
   1912c:	movw	r1, #43753	; 0xaae9
   19130:	movt	r1, #1
   19134:	bl	126a0 <fopen@plt>
   19138:	cmp	r0, #0
   1913c:	str	r0, [r5]
   19140:	beq	198a0 <main@@Base+0x1364>
   19144:	bl	16f48 <traverse_product@@Base>
   19148:	ldr	r0, [r4]
   1914c:	cmp	r0, #0
   19150:	beq	1915c <main@@Base+0xc20>
   19154:	ldr	r0, [r5]
   19158:	bl	12964 <fclose@plt>
   1915c:	bl	14784 <dim_info_done@@Base>
   19160:	bl	16f10 <traverse_info_done@@Base>
   19164:	bl	12808 <coda_done@plt>
   19168:	mov	r0, #0
   1916c:	sub	sp, fp, #28
   19170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19174:	ldr	r0, [r9, #8]
   19178:	bl	12790 <coda_set_definition_path@plt>
   1917c:	mov	r7, #3
   19180:	b	185fc <main@@Base+0xc0>
   19184:	movw	r0, #49640	; 0xc1e8
   19188:	movt	r0, #2
   1918c:	ldr	r0, [r0]
   19190:	cmp	r0, #0
   19194:	ldrbne	r0, [r0]
   19198:	cmpne	r0, #0
   1919c:	beq	19788 <main@@Base+0x124c>
   191a0:	bl	128e0 <coda_init@plt>
   191a4:	cmp	r0, #0
   191a8:	bne	19850 <main@@Base+0x1314>
   191ac:	mov	r0, #0
   191b0:	bl	128ec <coda_set_option_perform_conversions@plt>
   191b4:	ldr	r0, [sp, #16]
   191b8:	bl	12634 <coda_set_option_use_fast_size_expressions@plt>
   191bc:	movw	r0, #49624	; 0xc1d8
   191c0:	movw	r4, #53392	; 0xd090
   191c4:	movt	r0, #2
   191c8:	movt	r4, #2
   191cc:	ldr	r0, [r0]
   191d0:	cmp	r0, #0
   191d4:	beq	191f0 <main@@Base+0xcb4>
   191d8:	movw	r1, #43753	; 0xaae9
   191dc:	movt	r1, #1
   191e0:	bl	126a0 <fopen@plt>
   191e4:	cmp	r0, #0
   191e8:	str	r0, [r4]
   191ec:	beq	198b0 <main@@Base+0x1374>
   191f0:	ldm	sp, {r0, r1, r2}
   191f4:	bl	13728 <print_debug_data@@Base>
   191f8:	movw	r0, #49624	; 0xc1d8
   191fc:	movt	r0, #2
   19200:	ldr	r0, [r0]
   19204:	cmp	r0, #0
   19208:	beq	194fc <main@@Base+0xfc0>
   1920c:	ldr	r0, [r4]
   19210:	b	19824 <main@@Base+0x12e8>
   19214:	movw	r0, #49640	; 0xc1e8
   19218:	mov	r2, #0
   1921c:	mov	r1, #3
   19220:	movt	r0, #2
   19224:	str	r2, [r0]
   19228:	movw	r0, #53412	; 0xd0a4
   1922c:	movt	r0, #2
   19230:	str	r1, [r0]
   19234:	movw	r0, #49624	; 0xc1d8
   19238:	movw	r1, #53392	; 0xd090
   1923c:	movt	r0, #2
   19240:	movt	r1, #2
   19244:	str	r2, [r0]
   19248:	movw	r0, #53416	; 0xd0a8
   1924c:	movt	r0, #2
   19250:	str	r2, [r0]
   19254:	movw	r0, #49588	; 0xc1b4
   19258:	movt	r0, #2
   1925c:	ldr	r0, [r0]
   19260:	str	r0, [r1]
   19264:	add	r0, r7, #1
   19268:	sub	r8, sl, r0
   1926c:	cmp	r8, #1
   19270:	blt	19788 <main@@Base+0x124c>
   19274:	add	r9, r9, r0, lsl #2
   19278:	sub	r0, r8, #1
   1927c:	movw	r6, #43797	; 0xab15
   19280:	movw	r7, #43800	; 0xab18
   19284:	mov	r1, #0
   19288:	mov	r5, #0
   1928c:	mov	r4, #0
   19290:	str	r0, [sp, #12]
   19294:	mov	r0, #1
   19298:	movt	r6, #1
   1929c:	movt	r7, #1
   192a0:	str	r1, [sp, #8]
   192a4:	str	r0, [sp, #16]
   192a8:	mov	r0, #1
   192ac:	str	r0, [sp, #4]
   192b0:	ldr	sl, [r9, r5, lsl #2]
   192b4:	mov	r1, r6
   192b8:	mov	r0, sl
   192bc:	bl	12664 <strcmp@plt>
   192c0:	cmp	r0, #0
   192c4:	beq	193f8 <main@@Base+0xebc>
   192c8:	mov	r0, sl
   192cc:	mov	r1, r7
   192d0:	bl	12664 <strcmp@plt>
   192d4:	cmp	r0, #0
   192d8:	beq	193f8 <main@@Base+0xebc>
   192dc:	movw	r1, #43517	; 0xa9fd
   192e0:	mov	r0, sl
   192e4:	movt	r1, #1
   192e8:	bl	12664 <strcmp@plt>
   192ec:	cmp	r0, #0
   192f0:	beq	19410 <main@@Base+0xed4>
   192f4:	movw	r1, #43520	; 0xaa00
   192f8:	mov	r0, sl
   192fc:	movt	r1, #1
   19300:	bl	12664 <strcmp@plt>
   19304:	cmp	r0, #0
   19308:	beq	19410 <main@@Base+0xed4>
   1930c:	movw	r1, #43683	; 0xaaa3
   19310:	mov	r0, sl
   19314:	movt	r1, #1
   19318:	bl	12664 <strcmp@plt>
   1931c:	cmp	r0, #0
   19320:	beq	1933c <main@@Base+0xe00>
   19324:	movw	r1, #43686	; 0xaaa6
   19328:	mov	r0, sl
   1932c:	movt	r1, #1
   19330:	bl	12664 <strcmp@plt>
   19334:	cmp	r0, #0
   19338:	bne	19358 <main@@Base+0xe1c>
   1933c:	add	r0, r5, #1
   19340:	cmp	r0, r8
   19344:	bge	19358 <main@@Base+0xe1c>
   19348:	ldr	r1, [r9, r0, lsl #2]
   1934c:	ldrb	r2, [r1]
   19350:	cmp	r2, #45	; 0x2d
   19354:	bne	19448 <main@@Base+0xf0c>
   19358:	movw	r1, #43813	; 0xab25
   1935c:	mov	r0, sl
   19360:	movt	r1, #1
   19364:	bl	12664 <strcmp@plt>
   19368:	cmp	r0, #0
   1936c:	beq	19388 <main@@Base+0xe4c>
   19370:	movw	r1, #43816	; 0xab28
   19374:	mov	r0, sl
   19378:	movt	r1, #1
   1937c:	bl	12664 <strcmp@plt>
   19380:	cmp	r0, #0
   19384:	bne	193a4 <main@@Base+0xe68>
   19388:	add	r0, r5, #1
   1938c:	cmp	r0, r8
   19390:	bge	193a4 <main@@Base+0xe68>
   19394:	ldr	r1, [r9, r0, lsl #2]
   19398:	ldrb	r2, [r1]
   1939c:	cmp	r2, #45	; 0x2d
   193a0:	bne	19464 <main@@Base+0xf28>
   193a4:	movw	r1, #43642	; 0xaa7a
   193a8:	mov	r0, sl
   193ac:	movt	r1, #1
   193b0:	bl	12664 <strcmp@plt>
   193b4:	cmp	r0, #0
   193b8:	beq	1942c <main@@Base+0xef0>
   193bc:	ldr	r0, [sp, #12]
   193c0:	cmp	r5, r0
   193c4:	bne	19788 <main@@Base+0x124c>
   193c8:	ldrb	r0, [sl]
   193cc:	cmp	r0, #45	; 0x2d
   193d0:	beq	19788 <main@@Base+0x124c>
   193d4:	movw	r0, #49640	; 0xc1e8
   193d8:	str	sl, [sp, #8]
   193dc:	movt	r0, #2
   193e0:	str	sl, [r0]
   193e4:	ldr	r0, [sp, #12]
   193e8:	add	r5, r0, #1
   193ec:	cmp	r5, r8
   193f0:	blt	192b0 <main@@Base+0xd74>
   193f4:	b	1947c <main@@Base+0xf40>
   193f8:	mov	r4, #1
   193fc:	mov	r0, r5
   19400:	add	r5, r0, #1
   19404:	cmp	r5, r8
   19408:	blt	192b0 <main@@Base+0xd74>
   1940c:	b	1947c <main@@Base+0xf40>
   19410:	mov	r0, #0
   19414:	str	r0, [sp, #16]
   19418:	mov	r0, r5
   1941c:	add	r5, r0, #1
   19420:	cmp	r5, r8
   19424:	blt	192b0 <main@@Base+0xd74>
   19428:	b	1947c <main@@Base+0xf40>
   1942c:	mov	r0, #0
   19430:	str	r0, [sp, #4]
   19434:	mov	r0, r5
   19438:	add	r5, r0, #1
   1943c:	cmp	r5, r8
   19440:	blt	192b0 <main@@Base+0xd74>
   19444:	b	1947c <main@@Base+0xf40>
   19448:	movw	r2, #49624	; 0xc1d8
   1944c:	movt	r2, #2
   19450:	str	r1, [r2]
   19454:	add	r5, r0, #1
   19458:	cmp	r5, r8
   1945c:	blt	192b0 <main@@Base+0xd74>
   19460:	b	1947c <main@@Base+0xf40>
   19464:	movw	r2, #53416	; 0xd0a8
   19468:	movt	r2, #2
   1946c:	str	r1, [r2]
   19470:	add	r5, r0, #1
   19474:	cmp	r5, r8
   19478:	blt	192b0 <main@@Base+0xd74>
   1947c:	ldr	r0, [sp, #8]
   19480:	cmp	r0, #0
   19484:	ldrbne	r0, [r0]
   19488:	cmpne	r0, #0
   1948c:	beq	19788 <main@@Base+0x124c>
   19490:	bl	128e0 <coda_init@plt>
   19494:	cmp	r0, #0
   19498:	bne	19850 <main@@Base+0x1314>
   1949c:	ldr	r0, [sp, #4]
   194a0:	clz	r0, r0
   194a4:	lsr	r0, r0, #5
   194a8:	bl	12724 <coda_set_option_bypass_special_types@plt>
   194ac:	ldr	r0, [sp, #16]
   194b0:	bl	128ec <coda_set_option_perform_conversions@plt>
   194b4:	movw	r5, #49624	; 0xc1d8
   194b8:	movw	r6, #53392	; 0xd090
   194bc:	movt	r5, #2
   194c0:	movt	r6, #2
   194c4:	ldr	r0, [r5]
   194c8:	cmp	r0, #0
   194cc:	beq	194e8 <main@@Base+0xfac>
   194d0:	movw	r1, #43753	; 0xaae9
   194d4:	movt	r1, #1
   194d8:	bl	126a0 <fopen@plt>
   194dc:	cmp	r0, #0
   194e0:	str	r0, [r6]
   194e4:	beq	198a8 <main@@Base+0x136c>
   194e8:	mov	r0, r4
   194ec:	bl	15f40 <print_json_data@@Base>
   194f0:	ldr	r0, [r5]
   194f4:	cmp	r0, #0
   194f8:	bne	19820 <main@@Base+0x12e4>
   194fc:	bl	12808 <coda_done@plt>
   19500:	mov	r0, #0
   19504:	sub	sp, fp, #28
   19508:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1950c:	movw	r0, #49640	; 0xc1e8
   19510:	mov	r2, #0
   19514:	mov	r1, #4
   19518:	movt	r0, #2
   1951c:	str	r2, [r0]
   19520:	movw	r0, #53412	; 0xd0a4
   19524:	movt	r0, #2
   19528:	str	r1, [r0]
   1952c:	movw	r0, #49624	; 0xc1d8
   19530:	movw	r1, #53392	; 0xd090
   19534:	movt	r0, #2
   19538:	movt	r1, #2
   1953c:	str	r2, [r0]
   19540:	movw	r0, #53416	; 0xd0a8
   19544:	movt	r0, #2
   19548:	str	r2, [r0]
   1954c:	movw	r0, #49588	; 0xc1b4
   19550:	movt	r0, #2
   19554:	ldr	r0, [r0]
   19558:	str	r0, [r1]
   1955c:	add	r0, r7, #1
   19560:	sub	r8, sl, r0
   19564:	cmp	r8, #1
   19568:	blt	19788 <main@@Base+0x124c>
   1956c:	add	r9, r9, r0, lsl #2
   19570:	sub	r0, r8, #1
   19574:	movw	r6, #43797	; 0xab15
   19578:	movw	r7, #43800	; 0xab18
   1957c:	mov	r1, #0
   19580:	mov	r5, #0
   19584:	mov	r4, #0
   19588:	str	r0, [sp, #12]
   1958c:	mov	r0, #1
   19590:	movt	r6, #1
   19594:	movt	r7, #1
   19598:	str	r1, [sp, #8]
   1959c:	str	r0, [sp, #16]
   195a0:	mov	r0, #1
   195a4:	str	r0, [sp, #4]
   195a8:	ldr	sl, [r9, r5, lsl #2]
   195ac:	mov	r1, r6
   195b0:	mov	r0, sl
   195b4:	bl	12664 <strcmp@plt>
   195b8:	cmp	r0, #0
   195bc:	beq	196f0 <main@@Base+0x11b4>
   195c0:	mov	r0, sl
   195c4:	mov	r1, r7
   195c8:	bl	12664 <strcmp@plt>
   195cc:	cmp	r0, #0
   195d0:	beq	196f0 <main@@Base+0x11b4>
   195d4:	movw	r1, #43517	; 0xa9fd
   195d8:	mov	r0, sl
   195dc:	movt	r1, #1
   195e0:	bl	12664 <strcmp@plt>
   195e4:	cmp	r0, #0
   195e8:	beq	19708 <main@@Base+0x11cc>
   195ec:	movw	r1, #43520	; 0xaa00
   195f0:	mov	r0, sl
   195f4:	movt	r1, #1
   195f8:	bl	12664 <strcmp@plt>
   195fc:	cmp	r0, #0
   19600:	beq	19708 <main@@Base+0x11cc>
   19604:	movw	r1, #43683	; 0xaaa3
   19608:	mov	r0, sl
   1960c:	movt	r1, #1
   19610:	bl	12664 <strcmp@plt>
   19614:	cmp	r0, #0
   19618:	beq	19634 <main@@Base+0x10f8>
   1961c:	movw	r1, #43686	; 0xaaa6
   19620:	mov	r0, sl
   19624:	movt	r1, #1
   19628:	bl	12664 <strcmp@plt>
   1962c:	cmp	r0, #0
   19630:	bne	19650 <main@@Base+0x1114>
   19634:	add	r0, r5, #1
   19638:	cmp	r0, r8
   1963c:	bge	19650 <main@@Base+0x1114>
   19640:	ldr	r1, [r9, r0, lsl #2]
   19644:	ldrb	r2, [r1]
   19648:	cmp	r2, #45	; 0x2d
   1964c:	bne	19740 <main@@Base+0x1204>
   19650:	movw	r1, #43813	; 0xab25
   19654:	mov	r0, sl
   19658:	movt	r1, #1
   1965c:	bl	12664 <strcmp@plt>
   19660:	cmp	r0, #0
   19664:	beq	19680 <main@@Base+0x1144>
   19668:	movw	r1, #43816	; 0xab28
   1966c:	mov	r0, sl
   19670:	movt	r1, #1
   19674:	bl	12664 <strcmp@plt>
   19678:	cmp	r0, #0
   1967c:	bne	1969c <main@@Base+0x1160>
   19680:	add	r0, r5, #1
   19684:	cmp	r0, r8
   19688:	bge	1969c <main@@Base+0x1160>
   1968c:	ldr	r1, [r9, r0, lsl #2]
   19690:	ldrb	r2, [r1]
   19694:	cmp	r2, #45	; 0x2d
   19698:	bne	1975c <main@@Base+0x1220>
   1969c:	movw	r1, #43642	; 0xaa7a
   196a0:	mov	r0, sl
   196a4:	movt	r1, #1
   196a8:	bl	12664 <strcmp@plt>
   196ac:	cmp	r0, #0
   196b0:	beq	19724 <main@@Base+0x11e8>
   196b4:	ldr	r0, [sp, #12]
   196b8:	cmp	r5, r0
   196bc:	bne	19788 <main@@Base+0x124c>
   196c0:	ldrb	r0, [sl]
   196c4:	cmp	r0, #45	; 0x2d
   196c8:	beq	19788 <main@@Base+0x124c>
   196cc:	movw	r0, #49640	; 0xc1e8
   196d0:	str	sl, [sp, #8]
   196d4:	movt	r0, #2
   196d8:	str	sl, [r0]
   196dc:	ldr	r0, [sp, #12]
   196e0:	add	r5, r0, #1
   196e4:	cmp	r5, r8
   196e8:	blt	195a8 <main@@Base+0x106c>
   196ec:	b	19774 <main@@Base+0x1238>
   196f0:	mov	r4, #1
   196f4:	mov	r0, r5
   196f8:	add	r5, r0, #1
   196fc:	cmp	r5, r8
   19700:	blt	195a8 <main@@Base+0x106c>
   19704:	b	19774 <main@@Base+0x1238>
   19708:	mov	r0, #0
   1970c:	str	r0, [sp, #16]
   19710:	mov	r0, r5
   19714:	add	r5, r0, #1
   19718:	cmp	r5, r8
   1971c:	blt	195a8 <main@@Base+0x106c>
   19720:	b	19774 <main@@Base+0x1238>
   19724:	mov	r0, #0
   19728:	str	r0, [sp, #4]
   1972c:	mov	r0, r5
   19730:	add	r5, r0, #1
   19734:	cmp	r5, r8
   19738:	blt	195a8 <main@@Base+0x106c>
   1973c:	b	19774 <main@@Base+0x1238>
   19740:	movw	r2, #49624	; 0xc1d8
   19744:	movt	r2, #2
   19748:	str	r1, [r2]
   1974c:	add	r5, r0, #1
   19750:	cmp	r5, r8
   19754:	blt	195a8 <main@@Base+0x106c>
   19758:	b	19774 <main@@Base+0x1238>
   1975c:	movw	r2, #53416	; 0xd0a8
   19760:	movt	r2, #2
   19764:	str	r1, [r2]
   19768:	add	r5, r0, #1
   1976c:	cmp	r5, r8
   19770:	blt	195a8 <main@@Base+0x106c>
   19774:	ldr	r0, [sp, #8]
   19778:	cmp	r0, #0
   1977c:	ldrbne	r0, [r0]
   19780:	cmpne	r0, #0
   19784:	bne	197b4 <main@@Base+0x1278>
   19788:	movw	r0, #49584	; 0xc1b0
   1978c:	mov	r1, #25
   19790:	movt	r0, #2
   19794:	ldr	r3, [r0]
   19798:	movw	r0, #43456	; 0xa9c0
   1979c:	movt	r0, #1
   197a0:	mov	r2, #1
   197a4:	bl	127d8 <fwrite@plt>
   197a8:	bl	198dc <main@@Base+0x13a0>
   197ac:	mov	r0, #1
   197b0:	bl	12874 <exit@plt>
   197b4:	bl	128e0 <coda_init@plt>
   197b8:	cmp	r0, #0
   197bc:	bne	19850 <main@@Base+0x1314>
   197c0:	ldr	r0, [sp, #4]
   197c4:	clz	r0, r0
   197c8:	lsr	r0, r0, #5
   197cc:	bl	12724 <coda_set_option_bypass_special_types@plt>
   197d0:	ldr	r0, [sp, #16]
   197d4:	bl	128ec <coda_set_option_perform_conversions@plt>
   197d8:	movw	r5, #49624	; 0xc1d8
   197dc:	movw	r6, #53392	; 0xd090
   197e0:	movt	r5, #2
   197e4:	movt	r6, #2
   197e8:	ldr	r0, [r5]
   197ec:	cmp	r0, #0
   197f0:	beq	1980c <main@@Base+0x12d0>
   197f4:	movw	r1, #43753	; 0xaae9
   197f8:	movt	r1, #1
   197fc:	bl	126a0 <fopen@plt>
   19800:	cmp	r0, #0
   19804:	str	r0, [r6]
   19808:	beq	198a8 <main@@Base+0x136c>
   1980c:	mov	r0, r4
   19810:	bl	176ac <print_yaml_data@@Base>
   19814:	ldr	r0, [r5]
   19818:	cmp	r0, #0
   1981c:	beq	194fc <main@@Base+0xfc0>
   19820:	ldr	r0, [r6]
   19824:	bl	12964 <fclose@plt>
   19828:	bl	12808 <coda_done@plt>
   1982c:	mov	r0, #0
   19830:	sub	sp, fp, #28
   19834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19838:	bl	198dc <main@@Base+0x13a0>
   1983c:	mov	r0, #0
   19840:	bl	12874 <exit@plt>
   19844:	bl	19e40 <main@@Base+0x1904>
   19848:	mov	r0, #0
   1984c:	bl	12874 <exit@plt>
   19850:	movw	r0, #49584	; 0xc1b0
   19854:	movt	r0, #2
   19858:	ldr	r4, [r0]
   1985c:	bl	12a60 <coda_get_errno@plt>
   19860:	ldr	r0, [r0]
   19864:	bl	12a18 <coda_errno_to_string@plt>
   19868:	movw	r1, #43366	; 0xa966
   1986c:	mov	r2, r0
   19870:	mov	r0, r4
   19874:	movt	r1, #1
   19878:	bl	128bc <fprintf@plt>
   1987c:	mov	r0, #1
   19880:	bl	12874 <exit@plt>
   19884:	movw	r0, #49584	; 0xc1b0
   19888:	mov	r1, #40	; 0x28
   1988c:	movt	r0, #2
   19890:	ldr	r3, [r0]
   19894:	movw	r0, #43554	; 0xaa22
   19898:	movt	r0, #1
   1989c:	b	197a0 <main@@Base+0x1264>
   198a0:	ldr	r2, [r4]
   198a4:	b	198bc <main@@Base+0x1380>
   198a8:	ldr	r2, [r5]
   198ac:	b	198bc <main@@Base+0x1380>
   198b0:	movw	r0, #49624	; 0xc1d8
   198b4:	movt	r0, #2
   198b8:	ldr	r2, [r0]
   198bc:	movw	r0, #49584	; 0xc1b0
   198c0:	movw	r1, #43755	; 0xaaeb
   198c4:	movt	r0, #2
   198c8:	movt	r1, #1
   198cc:	ldr	r0, [r0]
   198d0:	bl	128bc <fprintf@plt>
   198d4:	mov	r0, #1
   198d8:	bl	12874 <exit@plt>
   198dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198e0:	add	fp, sp, #28
   198e4:	sub	sp, sp, #4
   198e8:	movw	r0, #43877	; 0xab65
   198ec:	movt	r0, #1
   198f0:	bl	12814 <puts@plt>
   198f4:	movw	r0, #43888	; 0xab70
   198f8:	movt	r0, #1
   198fc:	bl	12814 <puts@plt>
   19900:	movw	r0, #43968	; 0xabc0
   19904:	movt	r0, #1
   19908:	bl	12814 <puts@plt>
   1990c:	movw	r8, #44672	; 0xae80
   19910:	movt	r8, #1
   19914:	mov	r0, r8
   19918:	bl	12814 <puts@plt>
   1991c:	movw	r0, #44016	; 0xabf0
   19920:	movt	r0, #1
   19924:	bl	12814 <puts@plt>
   19928:	movw	r0, #44048	; 0xac10
   1992c:	movt	r0, #1
   19930:	bl	12814 <puts@plt>
   19934:	movw	r5, #46096	; 0xb410
   19938:	movt	r5, #1
   1993c:	mov	r0, r5
   19940:	bl	12814 <puts@plt>
   19944:	movw	r6, #46144	; 0xb440
   19948:	movt	r6, #1
   1994c:	mov	r0, r6
   19950:	bl	12814 <puts@plt>
   19954:	movw	r7, #44704	; 0xaea0
   19958:	movt	r7, #1
   1995c:	mov	r0, r7
   19960:	bl	12814 <puts@plt>
   19964:	movw	r4, #44752	; 0xaed0
   19968:	movt	r4, #1
   1996c:	mov	r0, r4
   19970:	bl	12814 <puts@plt>
   19974:	movw	r0, #44112	; 0xac50
   19978:	movt	r0, #1
   1997c:	bl	12814 <puts@plt>
   19980:	movw	r0, #44144	; 0xac70
   19984:	movt	r0, #1
   19988:	bl	12814 <puts@plt>
   1998c:	movw	r0, #44192	; 0xaca0
   19990:	movt	r0, #1
   19994:	bl	12814 <puts@plt>
   19998:	movw	r0, #44224	; 0xacc0
   1999c:	movt	r0, #1
   199a0:	bl	12814 <puts@plt>
   199a4:	movw	r0, #44272	; 0xacf0
   199a8:	movt	r0, #1
   199ac:	bl	12814 <puts@plt>
   199b0:	movw	r0, #44304	; 0xad10
   199b4:	movt	r0, #1
   199b8:	bl	12814 <puts@plt>
   199bc:	movw	r0, #44368	; 0xad50
   199c0:	movt	r0, #1
   199c4:	bl	12814 <puts@plt>
   199c8:	movw	r0, #44400	; 0xad70
   199cc:	movt	r0, #1
   199d0:	bl	12814 <puts@plt>
   199d4:	movw	r0, #44480	; 0xadc0
   199d8:	movt	r0, #1
   199dc:	bl	12814 <puts@plt>
   199e0:	movw	sl, #46208	; 0xb480
   199e4:	movt	sl, #1
   199e8:	mov	r0, sl
   199ec:	bl	12814 <puts@plt>
   199f0:	movw	r0, #46240	; 0xb4a0
   199f4:	movt	r0, #1
   199f8:	bl	12814 <puts@plt>
   199fc:	movw	r0, #46320	; 0xb4f0
   19a00:	movt	r0, #1
   19a04:	bl	12814 <puts@plt>
   19a08:	movw	r0, #46400	; 0xb540
   19a0c:	movt	r0, #1
   19a10:	bl	12814 <puts@plt>
   19a14:	mov	r0, #10
   19a18:	bl	1291c <putchar@plt>
   19a1c:	movw	r0, #44528	; 0xadf0
   19a20:	movt	r0, #1
   19a24:	bl	12814 <puts@plt>
   19a28:	movw	r0, #44608	; 0xae40
   19a2c:	movt	r0, #1
   19a30:	bl	12814 <puts@plt>
   19a34:	mov	r0, r8
   19a38:	bl	12814 <puts@plt>
   19a3c:	mov	r0, r5
   19a40:	bl	12814 <puts@plt>
   19a44:	mov	r0, r6
   19a48:	bl	12814 <puts@plt>
   19a4c:	mov	r0, r7
   19a50:	bl	12814 <puts@plt>
   19a54:	mov	r0, r4
   19a58:	bl	12814 <puts@plt>
   19a5c:	movw	r0, #44832	; 0xaf20
   19a60:	movt	r0, #1
   19a64:	bl	12814 <puts@plt>
   19a68:	movw	r0, #44864	; 0xaf40
   19a6c:	movt	r0, #1
   19a70:	bl	12814 <puts@plt>
   19a74:	movw	r0, #44944	; 0xaf90
   19a78:	movt	r0, #1
   19a7c:	bl	12814 <puts@plt>
   19a80:	movw	r0, #44976	; 0xafb0
   19a84:	movt	r0, #1
   19a88:	bl	12814 <puts@plt>
   19a8c:	movw	r6, #46864	; 0xb710
   19a90:	movt	r6, #1
   19a94:	mov	r0, r6
   19a98:	bl	12814 <puts@plt>
   19a9c:	movw	r0, #46912	; 0xb740
   19aa0:	movt	r0, #1
   19aa4:	bl	12814 <puts@plt>
   19aa8:	movw	r0, #45056	; 0xb000
   19aac:	movt	r0, #1
   19ab0:	bl	12814 <puts@plt>
   19ab4:	movw	r0, #45088	; 0xb020
   19ab8:	movt	r0, #1
   19abc:	bl	12814 <puts@plt>
   19ac0:	movw	r0, #45168	; 0xb070
   19ac4:	movt	r0, #1
   19ac8:	bl	12814 <puts@plt>
   19acc:	movw	r0, #45232	; 0xb0b0
   19ad0:	movt	r0, #1
   19ad4:	bl	12814 <puts@plt>
   19ad8:	movw	r0, #45312	; 0xb100
   19adc:	movt	r0, #1
   19ae0:	bl	12814 <puts@plt>
   19ae4:	movw	r0, #45360	; 0xb130
   19ae8:	movt	r0, #1
   19aec:	bl	12814 <puts@plt>
   19af0:	mov	r0, sl
   19af4:	bl	12814 <puts@plt>
   19af8:	movw	r0, #46240	; 0xb4a0
   19afc:	movt	r0, #1
   19b00:	mov	r9, r0
   19b04:	bl	12814 <puts@plt>
   19b08:	movw	r0, #46320	; 0xb4f0
   19b0c:	movt	r0, #1
   19b10:	mov	r8, r0
   19b14:	bl	12814 <puts@plt>
   19b18:	movw	r0, #46400	; 0xb540
   19b1c:	movt	r0, #1
   19b20:	mov	r7, r0
   19b24:	bl	12814 <puts@plt>
   19b28:	mov	r0, #10
   19b2c:	bl	1291c <putchar@plt>
   19b30:	movw	r0, #45440	; 0xb180
   19b34:	movt	r0, #1
   19b38:	bl	12814 <puts@plt>
   19b3c:	movw	r0, #45520	; 0xb1d0
   19b40:	movt	r0, #1
   19b44:	bl	12814 <puts@plt>
   19b48:	movw	r0, #45584	; 0xb210
   19b4c:	movt	r0, #1
   19b50:	bl	12814 <puts@plt>
   19b54:	movw	r4, #45872	; 0xb330
   19b58:	movt	r4, #1
   19b5c:	mov	r0, r4
   19b60:	bl	12814 <puts@plt>
   19b64:	movw	r5, #45904	; 0xb350
   19b68:	movt	r5, #1
   19b6c:	mov	r0, r5
   19b70:	bl	12814 <puts@plt>
   19b74:	movw	r0, #45616	; 0xb230
   19b78:	movt	r0, #1
   19b7c:	bl	12814 <puts@plt>
   19b80:	movw	r0, #46096	; 0xb410
   19b84:	movt	r0, #1
   19b88:	bl	12814 <puts@plt>
   19b8c:	movw	r0, #46144	; 0xb440
   19b90:	movt	r0, #1
   19b94:	bl	12814 <puts@plt>
   19b98:	mov	r0, r6
   19b9c:	bl	12814 <puts@plt>
   19ba0:	movw	r0, #46912	; 0xb740
   19ba4:	movt	r0, #1
   19ba8:	bl	12814 <puts@plt>
   19bac:	movw	r0, #46976	; 0xb780
   19bb0:	movt	r0, #1
   19bb4:	bl	12814 <puts@plt>
   19bb8:	movw	r0, #47008	; 0xb7a0
   19bbc:	movt	r0, #1
   19bc0:	bl	12814 <puts@plt>
   19bc4:	movw	r6, #47088	; 0xb7f0
   19bc8:	movt	r6, #1
   19bcc:	mov	r0, r6
   19bd0:	bl	12814 <puts@plt>
   19bd4:	mov	r0, sl
   19bd8:	bl	12814 <puts@plt>
   19bdc:	mov	r0, r9
   19be0:	bl	12814 <puts@plt>
   19be4:	mov	r0, r8
   19be8:	bl	12814 <puts@plt>
   19bec:	mov	r0, r7
   19bf0:	bl	12814 <puts@plt>
   19bf4:	mov	r0, #10
   19bf8:	bl	1291c <putchar@plt>
   19bfc:	movw	r0, #45696	; 0xb280
   19c00:	movt	r0, #1
   19c04:	bl	12814 <puts@plt>
   19c08:	movw	r0, #45776	; 0xb2d0
   19c0c:	movt	r0, #1
   19c10:	bl	12814 <puts@plt>
   19c14:	movw	r0, #45840	; 0xb310
   19c18:	movt	r0, #1
   19c1c:	bl	12814 <puts@plt>
   19c20:	mov	r0, r4
   19c24:	bl	12814 <puts@plt>
   19c28:	mov	r0, r5
   19c2c:	bl	12814 <puts@plt>
   19c30:	movw	r0, #45984	; 0xb3a0
   19c34:	movt	r0, #1
   19c38:	bl	12814 <puts@plt>
   19c3c:	movw	r0, #46064	; 0xb3f0
   19c40:	movt	r0, #1
   19c44:	bl	12814 <puts@plt>
   19c48:	movw	r0, #46096	; 0xb410
   19c4c:	movt	r0, #1
   19c50:	bl	12814 <puts@plt>
   19c54:	movw	r0, #46144	; 0xb440
   19c58:	movt	r0, #1
   19c5c:	bl	12814 <puts@plt>
   19c60:	movw	r0, #46864	; 0xb710
   19c64:	movt	r0, #1
   19c68:	bl	12814 <puts@plt>
   19c6c:	movw	r0, #46912	; 0xb740
   19c70:	movt	r0, #1
   19c74:	bl	12814 <puts@plt>
   19c78:	movw	r0, #46976	; 0xb780
   19c7c:	movt	r0, #1
   19c80:	bl	12814 <puts@plt>
   19c84:	movw	r0, #47008	; 0xb7a0
   19c88:	movt	r0, #1
   19c8c:	bl	12814 <puts@plt>
   19c90:	mov	r0, r6
   19c94:	bl	12814 <puts@plt>
   19c98:	mov	r0, sl
   19c9c:	bl	12814 <puts@plt>
   19ca0:	mov	r0, r9
   19ca4:	bl	12814 <puts@plt>
   19ca8:	mov	r0, r8
   19cac:	bl	12814 <puts@plt>
   19cb0:	mov	r0, r7
   19cb4:	bl	12814 <puts@plt>
   19cb8:	mov	r0, #10
   19cbc:	bl	1291c <putchar@plt>
   19cc0:	movw	r0, #46432	; 0xb560
   19cc4:	movt	r0, #1
   19cc8:	bl	12814 <puts@plt>
   19ccc:	movw	r0, #46512	; 0xb5b0
   19cd0:	movt	r0, #1
   19cd4:	bl	12814 <puts@plt>
   19cd8:	movw	r0, #46592	; 0xb600
   19cdc:	movt	r0, #1
   19ce0:	bl	12814 <puts@plt>
   19ce4:	movw	r0, #46672	; 0xb650
   19ce8:	movt	r0, #1
   19cec:	bl	12814 <puts@plt>
   19cf0:	movw	r0, #46720	; 0xb680
   19cf4:	movt	r0, #1
   19cf8:	bl	12814 <puts@plt>
   19cfc:	movw	r0, #46752	; 0xb6a0
   19d00:	movt	r0, #1
   19d04:	bl	12814 <puts@plt>
   19d08:	movw	r0, #46800	; 0xb6d0
   19d0c:	movt	r0, #1
   19d10:	bl	12814 <puts@plt>
   19d14:	movw	r0, #46864	; 0xb710
   19d18:	movt	r0, #1
   19d1c:	bl	12814 <puts@plt>
   19d20:	movw	r0, #46912	; 0xb740
   19d24:	movt	r0, #1
   19d28:	bl	12814 <puts@plt>
   19d2c:	movw	r0, #46976	; 0xb780
   19d30:	movt	r0, #1
   19d34:	bl	12814 <puts@plt>
   19d38:	movw	r0, #47008	; 0xb7a0
   19d3c:	movt	r0, #1
   19d40:	bl	12814 <puts@plt>
   19d44:	mov	r0, r6
   19d48:	bl	12814 <puts@plt>
   19d4c:	movw	r0, #47168	; 0xb840
   19d50:	movt	r0, #1
   19d54:	bl	12814 <puts@plt>
   19d58:	movw	r0, #47200	; 0xb860
   19d5c:	movt	r0, #1
   19d60:	bl	12814 <puts@plt>
   19d64:	movw	r0, #47280	; 0xb8b0
   19d68:	movt	r0, #1
   19d6c:	bl	12814 <puts@plt>
   19d70:	movw	r0, #47360	; 0xb900
   19d74:	movt	r0, #1
   19d78:	bl	12814 <puts@plt>
   19d7c:	movw	r0, #47424	; 0xb940
   19d80:	movt	r0, #1
   19d84:	bl	12814 <puts@plt>
   19d88:	movw	r0, #47504	; 0xb990
   19d8c:	movt	r0, #1
   19d90:	bl	12814 <puts@plt>
   19d94:	mov	r0, #10
   19d98:	bl	1291c <putchar@plt>
   19d9c:	movw	r0, #47568	; 0xb9d0
   19da0:	movt	r0, #1
   19da4:	bl	12814 <puts@plt>
   19da8:	movw	r0, #47600	; 0xb9f0
   19dac:	movt	r0, #1
   19db0:	bl	12814 <puts@plt>
   19db4:	mov	r0, #10
   19db8:	bl	1291c <putchar@plt>
   19dbc:	movw	r0, #47632	; 0xba10
   19dc0:	movt	r0, #1
   19dc4:	bl	12814 <puts@plt>
   19dc8:	movw	r0, #47664	; 0xba30
   19dcc:	movt	r0, #1
   19dd0:	bl	12814 <puts@plt>
   19dd4:	mov	r0, #10
   19dd8:	bl	1291c <putchar@plt>
   19ddc:	movw	r0, #47728	; 0xba70
   19de0:	movt	r0, #1
   19de4:	bl	12814 <puts@plt>
   19de8:	movw	r0, #47808	; 0xbac0
   19dec:	movt	r0, #1
   19df0:	bl	12814 <puts@plt>
   19df4:	movw	r0, #47888	; 0xbb10
   19df8:	movt	r0, #1
   19dfc:	bl	12814 <puts@plt>
   19e00:	movw	r0, #47936	; 0xbb40
   19e04:	movt	r0, #1
   19e08:	bl	12814 <puts@plt>
   19e0c:	movw	r0, #48016	; 0xbb90
   19e10:	movt	r0, #1
   19e14:	bl	12814 <puts@plt>
   19e18:	movw	r0, #48096	; 0xbbe0
   19e1c:	movt	r0, #1
   19e20:	bl	12814 <puts@plt>
   19e24:	movw	r0, #48160	; 0xbc20
   19e28:	movt	r0, #1
   19e2c:	bl	12814 <puts@plt>
   19e30:	mov	r0, #10
   19e34:	sub	sp, fp, #28
   19e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e3c:	b	1291c <putchar@plt>
   19e40:	push	{fp, lr}
   19e44:	mov	fp, sp
   19e48:	bl	12a54 <coda_get_libcoda_version@plt>
   19e4c:	mov	r1, r0
   19e50:	movw	r0, #43482	; 0xa9da
   19e54:	movt	r0, #1
   19e58:	bl	12688 <printf@plt>
   19e5c:	movw	r0, #48224	; 0xbc60
   19e60:	movt	r0, #1
   19e64:	bl	12814 <puts@plt>
   19e68:	mov	r0, #10
   19e6c:	pop	{fp, lr}
   19e70:	b	1291c <putchar@plt>
   19e74:	cmp	r3, #0
   19e78:	cmpeq	r2, #0
   19e7c:	bne	19ea0 <main@@Base+0x1964>
   19e80:	cmp	r1, #0
   19e84:	movlt	r1, #-2147483648	; 0x80000000
   19e88:	movlt	r0, #0
   19e8c:	blt	19e9c <main@@Base+0x1960>
   19e90:	cmpeq	r0, #0
   19e94:	mvnne	r1, #-2147483648	; 0x80000000
   19e98:	mvnne	r0, #0
   19e9c:	b	19f48 <main@@Base+0x1a0c>
   19ea0:	sub	sp, sp, #8
   19ea4:	push	{sp, lr}
   19ea8:	cmp	r1, #0
   19eac:	blt	19ecc <main@@Base+0x1990>
   19eb0:	cmp	r3, #0
   19eb4:	blt	19f00 <main@@Base+0x19c4>
   19eb8:	bl	19f58 <main@@Base+0x1a1c>
   19ebc:	ldr	lr, [sp, #4]
   19ec0:	add	sp, sp, #8
   19ec4:	pop	{r2, r3}
   19ec8:	bx	lr
   19ecc:	rsbs	r0, r0, #0
   19ed0:	sbc	r1, r1, r1, lsl #1
   19ed4:	cmp	r3, #0
   19ed8:	blt	19f24 <main@@Base+0x19e8>
   19edc:	bl	19f58 <main@@Base+0x1a1c>
   19ee0:	ldr	lr, [sp, #4]
   19ee4:	add	sp, sp, #8
   19ee8:	pop	{r2, r3}
   19eec:	rsbs	r0, r0, #0
   19ef0:	sbc	r1, r1, r1, lsl #1
   19ef4:	rsbs	r2, r2, #0
   19ef8:	sbc	r3, r3, r3, lsl #1
   19efc:	bx	lr
   19f00:	rsbs	r2, r2, #0
   19f04:	sbc	r3, r3, r3, lsl #1
   19f08:	bl	19f58 <main@@Base+0x1a1c>
   19f0c:	ldr	lr, [sp, #4]
   19f10:	add	sp, sp, #8
   19f14:	pop	{r2, r3}
   19f18:	rsbs	r0, r0, #0
   19f1c:	sbc	r1, r1, r1, lsl #1
   19f20:	bx	lr
   19f24:	rsbs	r2, r2, #0
   19f28:	sbc	r3, r3, r3, lsl #1
   19f2c:	bl	19f58 <main@@Base+0x1a1c>
   19f30:	ldr	lr, [sp, #4]
   19f34:	add	sp, sp, #8
   19f38:	pop	{r2, r3}
   19f3c:	rsbs	r2, r2, #0
   19f40:	sbc	r3, r3, r3, lsl #1
   19f44:	bx	lr
   19f48:	push	{r1, lr}
   19f4c:	mov	r0, #8
   19f50:	bl	12640 <raise@plt>
   19f54:	pop	{r1, pc}
   19f58:	cmp	r1, r3
   19f5c:	cmpeq	r0, r2
   19f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f64:	mov	r4, r0
   19f68:	movcc	r0, #0
   19f6c:	mov	r5, r1
   19f70:	ldr	lr, [sp, #36]	; 0x24
   19f74:	movcc	r1, r0
   19f78:	bcc	1a074 <main@@Base+0x1b38>
   19f7c:	cmp	r3, #0
   19f80:	clzeq	ip, r2
   19f84:	clzne	ip, r3
   19f88:	addeq	ip, ip, #32
   19f8c:	cmp	r5, #0
   19f90:	clzeq	r1, r4
   19f94:	addeq	r1, r1, #32
   19f98:	clzne	r1, r5
   19f9c:	sub	ip, ip, r1
   19fa0:	sub	sl, ip, #32
   19fa4:	lsl	r9, r3, ip
   19fa8:	rsb	fp, ip, #32
   19fac:	orr	r9, r9, r2, lsl sl
   19fb0:	orr	r9, r9, r2, lsr fp
   19fb4:	lsl	r8, r2, ip
   19fb8:	cmp	r5, r9
   19fbc:	cmpeq	r4, r8
   19fc0:	movcc	r0, #0
   19fc4:	movcc	r1, r0
   19fc8:	bcc	19fe4 <main@@Base+0x1aa8>
   19fcc:	mov	r0, #1
   19fd0:	subs	r4, r4, r8
   19fd4:	lsl	r1, r0, sl
   19fd8:	orr	r1, r1, r0, lsr fp
   19fdc:	lsl	r0, r0, ip
   19fe0:	sbc	r5, r5, r9
   19fe4:	cmp	ip, #0
   19fe8:	beq	1a074 <main@@Base+0x1b38>
   19fec:	lsr	r6, r8, #1
   19ff0:	orr	r6, r6, r9, lsl #31
   19ff4:	lsr	r7, r9, #1
   19ff8:	mov	r2, ip
   19ffc:	b	1a020 <main@@Base+0x1ae4>
   1a000:	subs	r3, r4, r6
   1a004:	sbc	r8, r5, r7
   1a008:	adds	r3, r3, r3
   1a00c:	adc	r8, r8, r8
   1a010:	adds	r4, r3, #1
   1a014:	adc	r5, r8, #0
   1a018:	subs	r2, r2, #1
   1a01c:	beq	1a03c <main@@Base+0x1b00>
   1a020:	cmp	r5, r7
   1a024:	cmpeq	r4, r6
   1a028:	bcs	1a000 <main@@Base+0x1ac4>
   1a02c:	adds	r4, r4, r4
   1a030:	adc	r5, r5, r5
   1a034:	subs	r2, r2, #1
   1a038:	bne	1a020 <main@@Base+0x1ae4>
   1a03c:	lsr	r3, r4, ip
   1a040:	orr	r3, r3, r5, lsl fp
   1a044:	lsr	r2, r5, ip
   1a048:	orr	r3, r3, r5, lsr sl
   1a04c:	adds	r0, r0, r4
   1a050:	mov	r4, r3
   1a054:	lsl	r3, r2, ip
   1a058:	orr	r3, r3, r4, lsl sl
   1a05c:	lsl	ip, r4, ip
   1a060:	orr	r3, r3, r4, lsr fp
   1a064:	adc	r1, r1, r5
   1a068:	subs	r0, r0, ip
   1a06c:	mov	r5, r2
   1a070:	sbc	r1, r1, r3
   1a074:	cmp	lr, #0
   1a078:	strdne	r4, [lr]
   1a07c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a080 <__libc_csu_init@@Base>:
   1a080:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a084:	mov	r7, r0
   1a088:	ldr	r6, [pc, #72]	; 1a0d8 <__libc_csu_init@@Base+0x58>
   1a08c:	ldr	r5, [pc, #72]	; 1a0dc <__libc_csu_init@@Base+0x5c>
   1a090:	add	r6, pc, r6
   1a094:	add	r5, pc, r5
   1a098:	sub	r6, r6, r5
   1a09c:	mov	r8, r1
   1a0a0:	mov	r9, r2
   1a0a4:	bl	125fc <coda_cursor_get_byte_size@plt-0x20>
   1a0a8:	asrs	r6, r6, #2
   1a0ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a0b0:	mov	r4, #0
   1a0b4:	add	r4, r4, #1
   1a0b8:	ldr	r3, [r5], #4
   1a0bc:	mov	r2, r9
   1a0c0:	mov	r1, r8
   1a0c4:	mov	r0, r7
   1a0c8:	blx	r3
   1a0cc:	cmp	r6, r4
   1a0d0:	bne	1a0b4 <__libc_csu_init@@Base+0x34>
   1a0d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a0d8:	andeq	r1, r1, ip, asr lr
   1a0dc:	andeq	r1, r1, r4, asr lr

0001a0e0 <__libc_csu_fini@@Base>:
   1a0e0:	bx	lr

Disassembly of section .fini:

0001a0e4 <.fini>:
   1a0e4:	push	{r3, lr}
   1a0e8:	pop	{r3, pc}
