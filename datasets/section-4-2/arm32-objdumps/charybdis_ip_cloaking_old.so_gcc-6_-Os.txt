
../repos/charybdis/extensions/.libs/ip_cloaking_old.so:     file format elf32-littlearm


Disassembly of section .init:

00000660 <_init>:
 660:	push	{r3, lr}
 664:	bl	74c <call_weak_fn>
 668:	pop	{r3, pc}

Disassembly of section .plt:

0000066c <.plt>:
 66c:	push	{lr}		; (str lr, [sp, #-4]!)
 670:	ldr	lr, [pc, #4]	; 67c <.plt+0x10>
 674:	add	lr, pc, lr
 678:	ldr	pc, [lr, #8]!
 67c:	.word	0x00011984

00000680 <calloc@plt>:
 680:	add	ip, pc, #0, 12
 684:	add	ip, ip, #69632	; 0x11000
 688:	ldr	pc, [ip, #2436]!	; 0x984

0000068c <raise@plt>:
 68c:	add	ip, pc, #0, 12
 690:	add	ip, ip, #69632	; 0x11000
 694:	ldr	pc, [ip, #2428]!	; 0x97c

00000698 <strcmp@plt>:
 698:	add	ip, pc, #0, 12
 69c:	add	ip, ip, #69632	; 0x11000
 6a0:	ldr	pc, [ip, #2420]!	; 0x974

000006a4 <__cxa_finalize@plt>:
 6a4:	add	ip, pc, #0, 12
 6a8:	add	ip, ip, #69632	; 0x11000
 6ac:	ldr	pc, [ip, #2412]!	; 0x96c

000006b0 <rb_outofmemory@plt>:
 6b0:	add	ip, pc, #0, 12
 6b4:	add	ip, ip, #69632	; 0x11000
 6b8:	ldr	pc, [ip, #2404]!	; 0x964

000006bc <find_umode_slot@plt>:
 6bc:	add	ip, pc, #0, 12
 6c0:	add	ip, ip, #69632	; 0x11000
 6c4:	ldr	pc, [ip, #2396]!	; 0x95c

000006c8 <sendto_server@plt>:
 6c8:	add	ip, pc, #0, 12
 6cc:	add	ip, ip, #69632	; 0x11000
 6d0:	ldr	pc, [ip, #2388]!	; 0x954

000006d4 <__gmon_start__@plt>:
 6d4:	add	ip, pc, #0, 12
 6d8:	add	ip, ip, #69632	; 0x11000
 6dc:	ldr	pc, [ip, #2380]!	; 0x94c

000006e0 <sendto_one_numeric@plt>:
 6e0:	add	ip, pc, #0, 12
 6e4:	add	ip, ip, #69632	; 0x11000
 6e8:	ldr	pc, [ip, #2372]!	; 0x944

000006ec <strlen@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2364]!	; 0x93c

000006f8 <strchr@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2356]!	; 0x934

00000704 <snprintf@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2348]!	; 0x92c

00000710 <change_nick_user_host@plt>:
 710:	add	ip, pc, #0, 12
 714:	add	ip, ip, #69632	; 0x11000
 718:	ldr	pc, [ip, #2340]!	; 0x924

0000071c <rb_strlcpy@plt>:
 71c:	add	ip, pc, #0, 12
 720:	add	ip, ip, #69632	; 0x11000
 724:	ldr	pc, [ip, #2332]!	; 0x91c

00000728 <irccmp@plt>:
 728:	add	ip, pc, #0, 12
 72c:	add	ip, ip, #69632	; 0x11000
 730:	ldr	pc, [ip, #2324]!	; 0x914

00000734 <rb_strlcat@plt>:
 734:	add	ip, pc, #0, 12
 738:	add	ip, ip, #69632	; 0x11000
 73c:	ldr	pc, [ip, #2316]!	; 0x90c

00000740 <construct_umodebuf@plt>:
 740:	add	ip, pc, #0, 12
 744:	add	ip, ip, #69632	; 0x11000
 748:	ldr	pc, [ip, #2308]!	; 0x904

Disassembly of section .text:

0000074c <call_weak_fn>:
     74c:	ldr	r3, [pc, #20]	; 768 <call_weak_fn+0x1c>
     750:	ldr	r2, [pc, #20]	; 76c <call_weak_fn+0x20>
     754:	add	r3, pc, r3
     758:	ldr	r2, [r3, r2]
     75c:	cmp	r2, #0
     760:	bxeq	lr
     764:	b	6d4 <__gmon_start__@plt>
     768:	.word	0x000118a4
     76c:	.word	0x00000064

00000770 <deregister_tm_clones>:
     770:	ldr	r3, [pc, #52]	; 7ac <deregister_tm_clones+0x3c>
     774:	ldr	r0, [pc, #52]	; 7b0 <deregister_tm_clones+0x40>
     778:	add	r3, pc, r3
     77c:	add	r0, pc, r0
     780:	add	r3, r3, #3
     784:	sub	r3, r3, r0
     788:	cmp	r3, #6
     78c:	ldr	r3, [pc, #32]	; 7b4 <deregister_tm_clones+0x44>
     790:	add	r3, pc, r3
     794:	bxls	lr
     798:	ldr	r2, [pc, #24]	; 7b8 <deregister_tm_clones+0x48>
     79c:	ldr	r3, [r3, r2]
     7a0:	cmp	r3, #0
     7a4:	bxeq	lr
     7a8:	bx	r3
     7ac:	.word	0x00011948
     7b0:	.word	0x00011944
     7b4:	.word	0x00011868
     7b8:	.word	0x00000054

000007bc <register_tm_clones>:
     7bc:	ldr	r1, [pc, #56]	; 7fc <register_tm_clones+0x40>
     7c0:	ldr	r0, [pc, #56]	; 800 <register_tm_clones+0x44>
     7c4:	add	r1, pc, r1
     7c8:	add	r0, pc, r0
     7cc:	sub	r1, r1, r0
     7d0:	ldr	r3, [pc, #44]	; 804 <register_tm_clones+0x48>
     7d4:	asr	r1, r1, #2
     7d8:	add	r3, pc, r3
     7dc:	add	r1, r1, r1, lsr #31
     7e0:	asrs	r1, r1, #1
     7e4:	bxeq	lr
     7e8:	ldr	r2, [pc, #24]	; 808 <register_tm_clones+0x4c>
     7ec:	ldr	r3, [r3, r2]
     7f0:	cmp	r3, #0
     7f4:	bxeq	lr
     7f8:	bx	r3
     7fc:	.word	0x000118fc
     800:	.word	0x000118f8
     804:	.word	0x00011820
     808:	.word	0x00000070

0000080c <__do_global_dtors_aux>:
     80c:	ldr	r3, [pc, #76]	; 860 <__do_global_dtors_aux+0x54>
     810:	ldr	r2, [pc, #76]	; 864 <__do_global_dtors_aux+0x58>
     814:	add	r3, pc, r3
     818:	add	r2, pc, r2
     81c:	ldrb	r3, [r3]
     820:	cmp	r3, #0
     824:	bxne	lr
     828:	ldr	r3, [pc, #56]	; 868 <__do_global_dtors_aux+0x5c>
     82c:	push	{r4, lr}
     830:	ldr	r3, [r2, r3]
     834:	cmp	r3, #0
     838:	beq	848 <__do_global_dtors_aux+0x3c>
     83c:	ldr	r3, [pc, #40]	; 86c <__do_global_dtors_aux+0x60>
     840:	ldr	r0, [pc, r3]
     844:	bl	6a4 <__cxa_finalize@plt>
     848:	bl	770 <deregister_tm_clones>
     84c:	ldr	r3, [pc, #28]	; 870 <__do_global_dtors_aux+0x64>
     850:	mov	r2, #1
     854:	add	r3, pc, r3
     858:	strb	r2, [r3]
     85c:	pop	{r4, pc}
     860:	.word	0x000118ac
     864:	.word	0x000117e0
     868:	.word	0x00000050
     86c:	.word	0x00011830
     870:	.word	0x0001186c

00000874 <frame_dummy>:
     874:	ldr	r0, [pc, #56]	; 8b4 <frame_dummy+0x40>
     878:	ldr	r3, [pc, #56]	; 8b8 <frame_dummy+0x44>
     87c:	add	r0, pc, r0
     880:	ldr	r2, [r0]
     884:	add	r3, pc, r3
     888:	cmp	r2, #0
     88c:	bne	894 <frame_dummy+0x20>
     890:	b	7bc <register_tm_clones>
     894:	ldr	r2, [pc, #32]	; 8bc <frame_dummy+0x48>
     898:	ldr	r3, [r3, r2]
     89c:	cmp	r3, #0
     8a0:	beq	890 <frame_dummy+0x1c>
     8a4:	push	{r4, lr}
     8a8:	blx	r3
     8ac:	pop	{r4, lr}
     8b0:	b	7bc <register_tm_clones>
     8b4:	.word	0x00011678
     8b8:	.word	0x00011774
     8bc:	.word	0x0000006c

000008c0 <do_host_cloak>:
     8c0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
     8c4:	mov	r9, r2
     8c8:	mov	r7, r0
     8cc:	mov	r6, r1
     8d0:	bl	6ec <strlen@plt>
     8d4:	ldr	r8, [pc, #296]	; a04 <do_host_cloak+0x144>
     8d8:	mov	r5, #1
     8dc:	mov	r3, #0
     8e0:	add	r8, pc, r8
     8e4:	sub	r2, r0, #2
     8e8:	cmp	r3, r2
     8ec:	bcc	9a0 <do_host_cloak+0xe0>
     8f0:	sub	r0, r0, #1
     8f4:	mov	r4, #1
     8f8:	cmp	r0, #0
     8fc:	bne	9b0 <do_host_cloak+0xf0>
     900:	ldr	r1, [pc, #256]	; a08 <do_host_cloak+0x148>
     904:	mov	r0, r4
     908:	bl	df4 <__udivsi3>
     90c:	ldr	r1, [pc, #244]	; a08 <do_host_cloak+0x148>
     910:	add	r5, r0, r5
     914:	mov	r0, r5
     918:	bl	df4 <__udivsi3>
     91c:	ldr	r2, [pc, #232]	; a0c <do_host_cloak+0x14c>
     920:	cmp	r9, #0
     924:	ldr	r2, [r8, r2]
     928:	add	r3, r0, r4
     92c:	bne	9dc <do_host_cloak+0x11c>
     930:	stm	sp, {r3, r5}
     934:	ldr	r3, [r2, #12]
     938:	ldr	r2, [pc, #208]	; a10 <do_host_cloak+0x150>
     93c:	mov	r1, #63	; 0x3f
     940:	add	r2, pc, r2
     944:	mov	r0, r6
     948:	bl	704 <snprintf@plt>
     94c:	mov	r0, r6
     950:	bl	6ec <strlen@plt>
     954:	mov	r1, #46	; 0x2e
     958:	mov	r8, r0
     95c:	mov	r0, r7
     960:	bl	6f8 <strchr@plt>
     964:	subs	r4, r0, #0
     968:	ldreq	r4, [pc, #164]	; a14 <do_host_cloak+0x154>
     96c:	addeq	r4, pc, r4
     970:	mov	r5, #46	; 0x2e
     974:	mov	r0, r4
     978:	bl	6ec <strlen@plt>
     97c:	add	r0, r8, r0
     980:	cmp	r0, #62	; 0x3e
     984:	bhi	9c0 <do_host_cloak+0x100>
     988:	mov	r2, #63	; 0x3f
     98c:	mov	r1, r4
     990:	mov	r0, r6
     994:	add	sp, sp, #12
     998:	pop	{r4, r5, r6, r7, r8, r9, lr}
     99c:	b	734 <rb_strlcat@plt>
     9a0:	ldrb	r1, [r7, r3]
     9a4:	add	r3, r3, #2
     9a8:	mul	r5, r1, r5
     9ac:	b	8e8 <do_host_cloak+0x28>
     9b0:	ldrb	r3, [r7, r0]
     9b4:	sub	r0, r0, #2
     9b8:	mul	r4, r3, r4
     9bc:	b	8f8 <do_host_cloak+0x38>
     9c0:	mov	r1, r5
     9c4:	add	r0, r4, #1
     9c8:	bl	6f8 <strchr@plt>
     9cc:	cmp	r0, #0
     9d0:	beq	988 <do_host_cloak+0xc8>
     9d4:	mov	r4, r0
     9d8:	b	974 <do_host_cloak+0xb4>
     9dc:	ldr	r2, [r2, #12]
     9e0:	mov	r1, #63	; 0x3f
     9e4:	str	r2, [sp, #4]
     9e8:	ldr	r2, [pc, #40]	; a18 <do_host_cloak+0x158>
     9ec:	str	r5, [sp]
     9f0:	add	r2, pc, r2
     9f4:	mov	r0, r6
     9f8:	bl	704 <snprintf@plt>
     9fc:	add	sp, sp, #12
     a00:	pop	{r4, r5, r6, r7, r8, r9, pc}
     a04:	.word	0x00011718
     a08:	.word	0x13748cfa
     a0c:	.word	0x0000005c
     a10:	.word	0x000006f1
     a14:	.word	0x000006c3
     a18:	.word	0x00000649

00000a1c <distribute_hostchange>:
     a1c:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
     a20:	add	r7, r0, #227	; 0xe3
     a24:	ldr	r5, [pc, #308]	; b60 <distribute_hostchange+0x144>
     a28:	cmp	r7, r1
     a2c:	add	r5, pc, r5
     a30:	mov	r4, r0
     a34:	mov	r6, r1
     a38:	beq	b50 <distribute_hostchange+0x134>
     a3c:	ldr	r2, [pc, #288]	; b64 <distribute_hostchange+0x148>
     a40:	mov	r3, r1
     a44:	add	r2, pc, r2
     a48:	mov	r1, #396	; 0x18c
     a4c:	bl	6e0 <sendto_one_numeric@plt>
     a50:	ldr	r3, [pc, #272]	; b68 <distribute_hostchange+0x14c>
     a54:	ldrb	r1, [r4, #396]	; 0x18c
     a58:	add	r8, r4, #88	; 0x58
     a5c:	ldr	r9, [r5, r3]
     a60:	ldr	r3, [pc, #260]	; b6c <distribute_hostchange+0x150>
     a64:	ldr	sl, [r5, r3]
     a68:	ldr	r3, [r9]
     a6c:	ldr	r2, [sl]
     a70:	orr	r2, r3, r2
     a74:	ldr	r3, [pc, #244]	; b70 <distribute_hostchange+0x154>
     a78:	ldr	r5, [r5, r3]
     a7c:	ldrb	r3, [r5, #396]	; 0x18c
     a80:	str	r6, [sp, #12]
     a84:	cmp	r3, #0
     a88:	addeq	r3, r5, #88	; 0x58
     a8c:	addne	r3, r5, #396	; 0x18c
     a90:	str	r3, [sp, #4]
     a94:	ldr	r3, [pc, #216]	; b74 <distribute_hostchange+0x158>
     a98:	cmp	r1, #0
     a9c:	add	r3, pc, r3
     aa0:	addne	r1, r4, #396	; 0x18c
     aa4:	moveq	r1, r8
     aa8:	str	r3, [sp]
     aac:	mov	r3, #0
     ab0:	str	r1, [sp, #8]
     ab4:	mov	r0, r3
     ab8:	mov	r1, r3
     abc:	bl	6c8 <sendto_server@plt>
     ac0:	ldrb	r1, [r5, #396]	; 0x18c
     ac4:	ldr	r2, [sl]
     ac8:	ldr	r3, [r9]
     acc:	cmp	r1, #0
     ad0:	ldrb	r1, [r4, #396]	; 0x18c
     ad4:	addeq	r5, r5, #88	; 0x58
     ad8:	addne	r5, r5, #396	; 0x18c
     adc:	cmp	r1, #0
     ae0:	addne	r1, r4, #396	; 0x18c
     ae4:	moveq	r1, r8
     ae8:	str	r1, [sp, #8]
     aec:	ldr	r1, [pc, #132]	; b78 <distribute_hostchange+0x15c>
     af0:	str	r6, [sp, #12]
     af4:	add	r1, pc, r1
     af8:	str	r1, [sp]
     afc:	mov	r1, #0
     b00:	mov	r0, r1
     b04:	str	r5, [sp, #4]
     b08:	bl	6c8 <sendto_server@plt>
     b0c:	ldr	r3, [pc, #104]	; b7c <distribute_hostchange+0x160>
     b10:	add	r2, r4, #152	; 0x98
     b14:	add	r3, pc, r3
     b18:	str	r3, [sp, #4]
     b1c:	mov	r3, #0
     b20:	str	r3, [sp]
     b24:	mov	r1, r8
     b28:	mov	r3, r6
     b2c:	mov	r0, r4
     b30:	bl	710 <change_nick_user_host@plt>
     b34:	ldrd	r2, [r4, #64]	; 0x40
     b38:	cmp	r7, r6
     b3c:	orrne	r2, r2, #131072	; 0x20000
     b40:	biceq	r2, r2, #131072	; 0x20000
     b44:	strd	r2, [r4, #64]	; 0x40
     b48:	add	sp, sp, #16
     b4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     b50:	ldr	r2, [pc, #40]	; b80 <distribute_hostchange+0x164>
     b54:	mov	r3, r7
     b58:	add	r2, pc, r2
     b5c:	b	a48 <distribute_hostchange+0x2c>
     b60:	.word	0x000115cc
     b64:	.word	0x000005fd
     b68:	.word	0x00000068
     b6c:	.word	0x00000058
     b70:	.word	0x00000074
     b74:	.word	0x000005d4
     b78:	.word	0x0000058f
     b7c:	.word	0x0000058a
     b80:	.word	0x00000505

00000b84 <check_umode_change>:
     b84:	push	{r4, r5, r6, r7, r8, lr}
     b88:	mov	r7, #0
     b8c:	ldr	r4, [r0]
     b90:	ldr	r1, [pc, #252]	; c94 <check_umode_change+0x110>
     b94:	ldrd	r2, [r4, #64]	; 0x40
     b98:	add	r1, pc, r1
     b9c:	and	r6, r2, #8192	; 0x2000
     ba0:	orrs	ip, r6, r7
     ba4:	popeq	{r4, r5, r6, r7, r8, pc}
     ba8:	ldrh	ip, [r4, #80]	; 0x50
     bac:	cmp	ip, #64	; 0x40
     bb0:	popne	{r4, r5, r6, r7, r8, pc}
     bb4:	ldr	ip, [pc, #220]	; c98 <check_umode_change+0x114>
     bb8:	ldr	r5, [r4, #56]	; 0x38
     bbc:	ldr	r1, [r1, ip]
     bc0:	ldr	r8, [r1, #416]	; 0x1a0
     bc4:	ldr	r1, [r0, #4]
     bc8:	eor	r1, r1, r5
     bcc:	tst	r1, r8
     bd0:	popeq	{r4, r5, r6, r7, r8, pc}
     bd4:	tst	r5, r8
     bd8:	beq	c64 <check_umode_change+0xe0>
     bdc:	and	r0, r2, #16777216	; 0x1000000
     be0:	mov	r1, #0
     be4:	orrs	r1, r0, r1
     be8:	bne	c24 <check_umode_change+0xa0>
     bec:	ldr	r1, [r4, #432]	; 0x1b0
     bf0:	ldr	r6, [r1, #432]	; 0x1b0
     bf4:	cmp	r6, #0
     bf8:	beq	c24 <check_umode_change+0xa0>
     bfc:	and	r2, r2, #131072	; 0x20000
     c00:	mov	r3, #0
     c04:	orrs	r3, r2, r3
     c08:	add	r7, r4, #163	; 0xa3
     c0c:	beq	c30 <check_umode_change+0xac>
     c10:	mov	r1, r6
     c14:	mov	r0, r7
     c18:	bl	698 <strcmp@plt>
     c1c:	cmp	r0, #0
     c20:	beq	c30 <check_umode_change+0xac>
     c24:	bic	r5, r5, r8
     c28:	str	r5, [r4, #56]	; 0x38
     c2c:	pop	{r4, r5, r6, r7, r8, pc}
     c30:	mov	r1, r6
     c34:	mov	r0, r7
     c38:	bl	698 <strcmp@plt>
     c3c:	cmp	r0, #0
     c40:	movne	r1, r6
     c44:	bne	c88 <check_umode_change+0x104>
     c48:	ldr	r2, [pc, #76]	; c9c <check_umode_change+0x118>
     c4c:	mov	r3, r7
     c50:	mov	r0, r4
     c54:	add	r2, pc, r2
     c58:	mov	r1, #396	; 0x18c
     c5c:	pop	{r4, r5, r6, r7, r8, lr}
     c60:	b	6e0 <sendto_one_numeric@plt>
     c64:	ldr	r3, [r4, #432]	; 0x1b0
     c68:	ldr	r1, [r3, #432]	; 0x1b0
     c6c:	cmp	r1, #0
     c70:	popeq	{r4, r5, r6, r7, r8, pc}
     c74:	add	r0, r4, #163	; 0xa3
     c78:	bl	698 <strcmp@plt>
     c7c:	cmp	r0, #0
     c80:	popne	{r4, r5, r6, r7, r8, pc}
     c84:	add	r1, r4, #227	; 0xe3
     c88:	mov	r0, r4
     c8c:	pop	{r4, r5, r6, r7, r8, lr}
     c90:	b	a1c <distribute_hostchange>
     c94:	.word	0x00011460
     c98:	.word	0x00000060
     c9c:	.word	0x000003ed

00000ca0 <_moddeinit>:
     ca0:	ldr	r3, [pc, #20]	; cbc <_moddeinit+0x1c>
     ca4:	ldr	r2, [pc, #20]	; cc0 <_moddeinit+0x20>
     ca8:	add	r3, pc, r3
     cac:	ldr	r3, [r3, r2]
     cb0:	mov	r2, #0
     cb4:	str	r2, [r3, #416]	; 0x1a0
     cb8:	b	740 <construct_umodebuf@plt>
     cbc:	.word	0x00011350
     cc0:	.word	0x00000060

00000cc4 <_modinit>:
     cc4:	push	{r4, lr}
     cc8:	bl	6bc <find_umode_slot@plt>
     ccc:	ldr	r4, [pc, #24]	; cec <_modinit+0x28>
     cd0:	ldr	r3, [pc, #24]	; cf0 <_modinit+0x2c>
     cd4:	add	r4, pc, r4
     cd8:	ldr	r3, [r4, r3]
     cdc:	str	r0, [r3, #416]	; 0x1a0
     ce0:	bl	740 <construct_umodebuf@plt>
     ce4:	mov	r0, #0
     ce8:	pop	{r4, pc}
     cec:	.word	0x00011324
     cf0:	.word	0x00000060

00000cf4 <check_new_user>:
     cf4:	ldrd	r2, [r0, #64]	; 0x40
     cf8:	ldr	r1, [pc, #236]	; dec <check_new_user+0xf8>
     cfc:	mov	r3, #0
     d00:	and	r2, r2, #16777216	; 0x1000000
     d04:	orrs	r3, r2, r3
     d08:	ldr	r3, [pc, #224]	; df0 <check_new_user+0xfc>
     d0c:	add	r1, pc, r1
     d10:	push	{r4, r5, r6, lr}
     d14:	ldr	r5, [r1, r3]
     d18:	beq	d30 <check_new_user+0x3c>
     d1c:	ldr	r2, [r5, #416]	; 0x1a0
     d20:	ldr	r3, [r0, #56]	; 0x38
     d24:	bic	r3, r3, r2
     d28:	str	r3, [r0, #56]	; 0x38
     d2c:	pop	{r4, r5, r6, pc}
     d30:	ldr	r6, [r0, #432]	; 0x1b0
     d34:	mov	r4, r0
     d38:	mov	r1, #64	; 0x40
     d3c:	mov	r0, #1
     d40:	bl	680 <calloc@plt>
     d44:	cmp	r0, #0
     d48:	bne	d50 <check_new_user+0x5c>
     d4c:	bl	6b0 <rb_outofmemory@plt>
     d50:	str	r0, [r6, #432]	; 0x1b0
     d54:	add	r1, r4, #288	; 0x120
     d58:	add	r6, r4, #227	; 0xe3
     d5c:	add	r1, r1, #3
     d60:	mov	r0, r6
     d64:	bl	728 <irccmp@plt>
     d68:	ldr	r3, [r4, #432]	; 0x1b0
     d6c:	ldr	r1, [r3, #432]	; 0x1b0
     d70:	cmp	r0, #0
     d74:	moveq	r2, #1
     d78:	movne	r2, #0
     d7c:	mov	r0, r6
     d80:	bl	8c0 <do_host_cloak>
     d84:	ldrd	r2, [r4, #64]	; 0x40
     d88:	mov	r3, #0
     d8c:	and	r2, r2, #131072	; 0x20000
     d90:	orrs	r3, r2, r3
     d94:	ldrne	r2, [r5, #416]	; 0x1a0
     d98:	ldrne	r3, [r4, #56]	; 0x38
     d9c:	bicne	r3, r3, r2
     da0:	strne	r3, [r4, #56]	; 0x38
     da4:	ldr	r2, [r4, #56]	; 0x38
     da8:	ldr	r3, [r5, #416]	; 0x1a0
     dac:	tst	r2, r3
     db0:	popeq	{r4, r5, r6, pc}
     db4:	ldr	r3, [r4, #432]	; 0x1b0
     db8:	add	r5, r4, #163	; 0xa3
     dbc:	mov	r2, #64	; 0x40
     dc0:	ldr	r1, [r3, #432]	; 0x1b0
     dc4:	mov	r0, r5
     dc8:	bl	71c <rb_strlcpy@plt>
     dcc:	mov	r1, r6
     dd0:	mov	r0, r5
     dd4:	bl	728 <irccmp@plt>
     dd8:	cmp	r0, #0
     ddc:	ldrdne	r2, [r4, #64]	; 0x40
     de0:	orrne	r2, r2, #131072	; 0x20000
     de4:	strdne	r2, [r4, #64]	; 0x40
     de8:	pop	{r4, r5, r6, pc}
     dec:	.word	0x000112ec
     df0:	.word	0x00000060

00000df4 <__udivsi3>:
     df4:	subs	r2, r1, #1
     df8:	bxeq	lr
     dfc:	bcc	fd4 <__udivsi3+0x1e0>
     e00:	cmp	r0, r1
     e04:	bls	fb8 <__udivsi3+0x1c4>
     e08:	tst	r1, r2
     e0c:	beq	fc4 <__udivsi3+0x1d0>
     e10:	clz	r3, r0
     e14:	clz	r2, r1
     e18:	sub	r3, r2, r3
     e1c:	rsbs	r3, r3, #31
     e20:	addne	r3, r3, r3, lsl #1
     e24:	mov	r2, #0
     e28:	addne	pc, pc, r3, lsl #2
     e2c:	nop			; (mov r0, r0)
     e30:	cmp	r0, r1, lsl #31
     e34:	adc	r2, r2, r2
     e38:	subcs	r0, r0, r1, lsl #31
     e3c:	cmp	r0, r1, lsl #30
     e40:	adc	r2, r2, r2
     e44:	subcs	r0, r0, r1, lsl #30
     e48:	cmp	r0, r1, lsl #29
     e4c:	adc	r2, r2, r2
     e50:	subcs	r0, r0, r1, lsl #29
     e54:	cmp	r0, r1, lsl #28
     e58:	adc	r2, r2, r2
     e5c:	subcs	r0, r0, r1, lsl #28
     e60:	cmp	r0, r1, lsl #27
     e64:	adc	r2, r2, r2
     e68:	subcs	r0, r0, r1, lsl #27
     e6c:	cmp	r0, r1, lsl #26
     e70:	adc	r2, r2, r2
     e74:	subcs	r0, r0, r1, lsl #26
     e78:	cmp	r0, r1, lsl #25
     e7c:	adc	r2, r2, r2
     e80:	subcs	r0, r0, r1, lsl #25
     e84:	cmp	r0, r1, lsl #24
     e88:	adc	r2, r2, r2
     e8c:	subcs	r0, r0, r1, lsl #24
     e90:	cmp	r0, r1, lsl #23
     e94:	adc	r2, r2, r2
     e98:	subcs	r0, r0, r1, lsl #23
     e9c:	cmp	r0, r1, lsl #22
     ea0:	adc	r2, r2, r2
     ea4:	subcs	r0, r0, r1, lsl #22
     ea8:	cmp	r0, r1, lsl #21
     eac:	adc	r2, r2, r2
     eb0:	subcs	r0, r0, r1, lsl #21
     eb4:	cmp	r0, r1, lsl #20
     eb8:	adc	r2, r2, r2
     ebc:	subcs	r0, r0, r1, lsl #20
     ec0:	cmp	r0, r1, lsl #19
     ec4:	adc	r2, r2, r2
     ec8:	subcs	r0, r0, r1, lsl #19
     ecc:	cmp	r0, r1, lsl #18
     ed0:	adc	r2, r2, r2
     ed4:	subcs	r0, r0, r1, lsl #18
     ed8:	cmp	r0, r1, lsl #17
     edc:	adc	r2, r2, r2
     ee0:	subcs	r0, r0, r1, lsl #17
     ee4:	cmp	r0, r1, lsl #16
     ee8:	adc	r2, r2, r2
     eec:	subcs	r0, r0, r1, lsl #16
     ef0:	cmp	r0, r1, lsl #15
     ef4:	adc	r2, r2, r2
     ef8:	subcs	r0, r0, r1, lsl #15
     efc:	cmp	r0, r1, lsl #14
     f00:	adc	r2, r2, r2
     f04:	subcs	r0, r0, r1, lsl #14
     f08:	cmp	r0, r1, lsl #13
     f0c:	adc	r2, r2, r2
     f10:	subcs	r0, r0, r1, lsl #13
     f14:	cmp	r0, r1, lsl #12
     f18:	adc	r2, r2, r2
     f1c:	subcs	r0, r0, r1, lsl #12
     f20:	cmp	r0, r1, lsl #11
     f24:	adc	r2, r2, r2
     f28:	subcs	r0, r0, r1, lsl #11
     f2c:	cmp	r0, r1, lsl #10
     f30:	adc	r2, r2, r2
     f34:	subcs	r0, r0, r1, lsl #10
     f38:	cmp	r0, r1, lsl #9
     f3c:	adc	r2, r2, r2
     f40:	subcs	r0, r0, r1, lsl #9
     f44:	cmp	r0, r1, lsl #8
     f48:	adc	r2, r2, r2
     f4c:	subcs	r0, r0, r1, lsl #8
     f50:	cmp	r0, r1, lsl #7
     f54:	adc	r2, r2, r2
     f58:	subcs	r0, r0, r1, lsl #7
     f5c:	cmp	r0, r1, lsl #6
     f60:	adc	r2, r2, r2
     f64:	subcs	r0, r0, r1, lsl #6
     f68:	cmp	r0, r1, lsl #5
     f6c:	adc	r2, r2, r2
     f70:	subcs	r0, r0, r1, lsl #5
     f74:	cmp	r0, r1, lsl #4
     f78:	adc	r2, r2, r2
     f7c:	subcs	r0, r0, r1, lsl #4
     f80:	cmp	r0, r1, lsl #3
     f84:	adc	r2, r2, r2
     f88:	subcs	r0, r0, r1, lsl #3
     f8c:	cmp	r0, r1, lsl #2
     f90:	adc	r2, r2, r2
     f94:	subcs	r0, r0, r1, lsl #2
     f98:	cmp	r0, r1, lsl #1
     f9c:	adc	r2, r2, r2
     fa0:	subcs	r0, r0, r1, lsl #1
     fa4:	cmp	r0, r1
     fa8:	adc	r2, r2, r2
     fac:	subcs	r0, r0, r1
     fb0:	mov	r0, r2
     fb4:	bx	lr
     fb8:	moveq	r0, #1
     fbc:	movne	r0, #0
     fc0:	bx	lr
     fc4:	clz	r2, r1
     fc8:	rsb	r2, r2, #31
     fcc:	lsr	r0, r0, r2
     fd0:	bx	lr
     fd4:	cmp	r0, #0
     fd8:	mvnne	r0, #0
     fdc:	b	1000 <__aeabi_idiv0>

00000fe0 <__aeabi_uidivmod>:
     fe0:	cmp	r1, #0
     fe4:	beq	fd4 <__udivsi3+0x1e0>
     fe8:	push	{r0, r1, lr}
     fec:	bl	df4 <__udivsi3>
     ff0:	pop	{r1, r2, lr}
     ff4:	mul	r3, r2, r0
     ff8:	sub	r1, r1, r3
     ffc:	bx	lr

00001000 <__aeabi_idiv0>:
    1000:	push	{r1, lr}
    1004:	mov	r0, #8
    1008:	bl	68c <raise@plt>
    100c:	pop	{r1, pc}

Disassembly of section .fini:

00001010 <_fini>:
    1010:	push	{r3, lr}
    1014:	pop	{r3, pc}
