
../repos/sgerbino-table-2fdd8d0/bin/table_row_test:     file format elf32-littlearm


Disassembly of section .init:

00011a8c <.init>:
   11a8c:	push	{r3, lr}
   11a90:	bl	11c24 <_start@@Base+0x3c>
   11a94:	pop	{r3, pc}

Disassembly of section .plt:

00011a98 <strcmp@plt-0x14>:
   11a98:	push	{lr}		; (str lr, [sp, #-4]!)
   11a9c:	ldr	lr, [pc, #4]	; 11aa8 <strcmp@plt-0x4>
   11aa0:	add	lr, pc, lr
   11aa4:	ldr	pc, [lr, #8]!
   11aa8:	andeq	r3, r1, r8, asr r5

00011aac <strcmp@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #77824	; 0x13000
   11ab4:	ldr	pc, [ip, #1368]!	; 0x558

00011ab8 <printf@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #77824	; 0x13000
   11ac0:	ldr	pc, [ip, #1360]!	; 0x550

00011ac4 <free@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #77824	; 0x13000
   11acc:	ldr	pc, [ip, #1352]!	; 0x548

00011ad0 <time@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #77824	; 0x13000
   11ad8:	ldr	pc, [ip, #1344]!	; 0x540

00011adc <realloc@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #77824	; 0x13000
   11ae4:	ldr	pc, [ip, #1336]!	; 0x538

00011ae8 <strcpy@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #77824	; 0x13000
   11af0:	ldr	pc, [ip, #1328]!	; 0x530

00011af4 <malloc@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #77824	; 0x13000
   11afc:	ldr	pc, [ip, #1320]!	; 0x528

00011b00 <__libc_start_main@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #77824	; 0x13000
   11b08:	ldr	pc, [ip, #1312]!	; 0x520

00011b0c <__gmon_start__@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #77824	; 0x13000
   11b14:	ldr	pc, [ip, #1304]!	; 0x518

00011b18 <strlen@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #77824	; 0x13000
   11b20:	ldr	pc, [ip, #1296]!	; 0x510

00011b24 <srand@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #77824	; 0x13000
   11b2c:	ldr	pc, [ip, #1288]!	; 0x508

00011b30 <snprintf@plt>:
   11b30:	add	ip, pc, #0, 12
   11b34:	add	ip, ip, #77824	; 0x13000
   11b38:	ldr	pc, [ip, #1280]!	; 0x500

00011b3c <__isoc99_sscanf@plt>:
   11b3c:	add	ip, pc, #0, 12
   11b40:	add	ip, ip, #77824	; 0x13000
   11b44:	ldr	pc, [ip, #1272]!	; 0x4f8

00011b48 <rand@plt>:
   11b48:	add	ip, pc, #0, 12
   11b4c:	add	ip, ip, #77824	; 0x13000
   11b50:	ldr	pc, [ip, #1264]!	; 0x4f0

00011b54 <abort@plt>:
   11b54:	add	ip, pc, #0, 12
   11b58:	add	ip, ip, #77824	; 0x13000
   11b5c:	ldr	pc, [ip, #1256]!	; 0x4e8

Disassembly of section .text:

00011b60 <main@@Base>:
   11b60:	push	{r4, r5, lr}
   11b64:	sub	sp, sp, #68	; 0x44
   11b68:	mov	r4, #100	; 0x64
   11b6c:	add	r0, sp, #4
   11b70:	mov	r5, #0
   11b74:	bl	11ad0 <time@plt>
   11b78:	bl	11b24 <srand@plt>
   11b7c:	bl	11b48 <rand@plt>
   11b80:	udiv	r3, r0, r4
   11b84:	mls	r4, r3, r4, r0
   11b88:	add	r0, sp, #8
   11b8c:	bl	11cd8 <table_init@@Base>
   11b90:	add	r4, r4, #100	; 0x64
   11b94:	add	r0, sp, #8
   11b98:	add	r5, r5, #1
   11b9c:	bl	13100 <table_add_row@@Base>
   11ba0:	cmp	r4, r5
   11ba4:	bgt	11b94 <main@@Base+0x34>
   11ba8:	add	r0, sp, #8
   11bac:	bl	130f8 <table_get_row_length@@Base>
   11bb0:	cmp	r4, r0
   11bb4:	mov	r2, r0
   11bb8:	moveq	r4, #0
   11bbc:	beq	11bd0 <main@@Base+0x70>
   11bc0:	mov	r1, r4
   11bc4:	ldr	r0, [pc, #24]	; 11be4 <main@@Base+0x84>
   11bc8:	mvn	r4, #0
   11bcc:	bl	11ab8 <printf@plt>
   11bd0:	add	r0, sp, #8
   11bd4:	bl	11d30 <table_destroy@@Base>
   11bd8:	mov	r0, r4
   11bdc:	add	sp, sp, #68	; 0x44
   11be0:	pop	{r4, r5, pc}
   11be4:	strdeq	r4, [r1], -ip

00011be8 <_start@@Base>:
   11be8:	mov	fp, #0
   11bec:	mov	lr, #0
   11bf0:	pop	{r1}		; (ldr r1, [sp], #4)
   11bf4:	mov	r2, sp
   11bf8:	push	{r2}		; (str r2, [sp, #-4]!)
   11bfc:	push	{r0}		; (str r0, [sp, #-4]!)
   11c00:	ldr	ip, [pc, #16]	; 11c18 <_start@@Base+0x30>
   11c04:	push	{ip}		; (str ip, [sp, #-4]!)
   11c08:	ldr	r0, [pc, #12]	; 11c1c <_start@@Base+0x34>
   11c0c:	ldr	r3, [pc, #12]	; 11c20 <_start@@Base+0x38>
   11c10:	bl	11b00 <__libc_start_main@plt>
   11c14:	bl	11b54 <abort@plt>
   11c18:	andeq	r4, r1, ip, ror #3
   11c1c:	andeq	r1, r1, r0, ror #22
   11c20:	andeq	r4, r1, ip, lsl #3
   11c24:	ldr	r3, [pc, #20]	; 11c40 <_start@@Base+0x58>
   11c28:	ldr	r2, [pc, #20]	; 11c44 <_start@@Base+0x5c>
   11c2c:	add	r3, pc, r3
   11c30:	ldr	r2, [r3, r2]
   11c34:	cmp	r2, #0
   11c38:	bxeq	lr
   11c3c:	b	11b0c <__gmon_start__@plt>
   11c40:	andeq	r3, r1, ip, asr #7
   11c44:	andeq	r0, r0, r8, asr #32
   11c48:	ldr	r0, [pc, #24]	; 11c68 <_start@@Base+0x80>
   11c4c:	ldr	r3, [pc, #24]	; 11c6c <_start@@Base+0x84>
   11c50:	cmp	r3, r0
   11c54:	bxeq	lr
   11c58:	ldr	r3, [pc, #16]	; 11c70 <_start@@Base+0x88>
   11c5c:	cmp	r3, #0
   11c60:	bxeq	lr
   11c64:	bx	r3
   11c68:	andeq	r5, r2, r4, asr r0
   11c6c:	andeq	r5, r2, r4, asr r0
   11c70:	andeq	r0, r0, r0
   11c74:	ldr	r0, [pc, #36]	; 11ca0 <_start@@Base+0xb8>
   11c78:	ldr	r1, [pc, #36]	; 11ca4 <_start@@Base+0xbc>
   11c7c:	sub	r1, r1, r0
   11c80:	asr	r1, r1, #2
   11c84:	add	r1, r1, r1, lsr #31
   11c88:	asrs	r1, r1, #1
   11c8c:	bxeq	lr
   11c90:	ldr	r3, [pc, #16]	; 11ca8 <_start@@Base+0xc0>
   11c94:	cmp	r3, #0
   11c98:	bxeq	lr
   11c9c:	bx	r3
   11ca0:	andeq	r5, r2, r4, asr r0
   11ca4:	andeq	r5, r2, r4, asr r0
   11ca8:	andeq	r0, r0, r0
   11cac:	push	{r4, lr}
   11cb0:	ldr	r4, [pc, #24]	; 11cd0 <_start@@Base+0xe8>
   11cb4:	ldrb	r3, [r4]
   11cb8:	cmp	r3, #0
   11cbc:	popne	{r4, pc}
   11cc0:	bl	11c48 <_start@@Base+0x60>
   11cc4:	mov	r3, #1
   11cc8:	strb	r3, [r4]
   11ccc:	pop	{r4, pc}
   11cd0:	andeq	r5, r2, r4, asr r0
   11cd4:	b	11c74 <_start@@Base+0x8c>

00011cd8 <table_init@@Base>:
   11cd8:	mov	r3, #0
   11cdc:	mov	r2, #10
   11ce0:	mov	r1, #20
   11ce4:	str	r3, [r0]
   11ce8:	str	r3, [r0, #4]
   11cec:	strd	r2, [r0, #8]
   11cf0:	str	r3, [r0, #16]
   11cf4:	str	r3, [r0, #20]
   11cf8:	str	r1, [r0, #24]
   11cfc:	str	r3, [r0, #28]
   11d00:	str	r3, [r0, #32]
   11d04:	str	r3, [r0, #36]	; 0x24
   11d08:	str	r3, [r0, #40]	; 0x28
   11d0c:	str	r3, [r0, #44]	; 0x2c
   11d10:	strd	r2, [r0, #48]	; 0x30
   11d14:	bx	lr

00011d18 <table_new@@Base>:
   11d18:	push	{r4, lr}
   11d1c:	mov	r0, #56	; 0x38
   11d20:	bl	11af4 <malloc@plt>
   11d24:	mov	r4, r0
   11d28:	bl	11cd8 <table_init@@Base>
   11d2c:	pop	{r4, pc}

00011d30 <table_destroy@@Base>:
   11d30:	push	{r4, r5, r6, lr}
   11d34:	subs	r4, r0, #0
   11d38:	popeq	{r4, r5, r6, pc}
   11d3c:	mvn	r2, #0
   11d40:	mov	r3, #64	; 0x40
   11d44:	mov	r1, r2
   11d48:	mov	r5, #0
   11d4c:	bl	12504 <table_notify@@Base>
   11d50:	mov	r0, r4
   11d54:	bl	130f8 <table_get_row_length@@Base>
   11d58:	mov	r6, r0
   11d5c:	cmp	r6, r5
   11d60:	bgt	11dd0 <table_destroy@@Base+0xa0>
   11d64:	ldr	r0, [r4, #16]
   11d68:	cmp	r0, #0
   11d6c:	beq	11d74 <table_destroy@@Base+0x44>
   11d70:	bl	11ac4 <free@plt>
   11d74:	mov	r0, r4
   11d78:	mov	r5, #0
   11d7c:	bl	125dc <table_get_column_length@@Base>
   11d80:	mov	r6, r0
   11d84:	cmp	r6, r5
   11d88:	bgt	11de4 <table_destroy@@Base+0xb4>
   11d8c:	ldr	r0, [r4]
   11d90:	cmp	r0, #0
   11d94:	beq	11d9c <table_destroy@@Base+0x6c>
   11d98:	bl	11ac4 <free@plt>
   11d9c:	ldr	r0, [r4, #36]	; 0x24
   11da0:	cmp	r0, #0
   11da4:	beq	11dac <table_destroy@@Base+0x7c>
   11da8:	bl	11ac4 <free@plt>
   11dac:	ldr	r0, [r4, #40]	; 0x28
   11db0:	cmp	r0, #0
   11db4:	beq	11dbc <table_destroy@@Base+0x8c>
   11db8:	bl	11ac4 <free@plt>
   11dbc:	ldr	r0, [r4, #44]	; 0x2c
   11dc0:	cmp	r0, #0
   11dc4:	popeq	{r4, r5, r6, pc}
   11dc8:	pop	{r4, r5, r6, lr}
   11dcc:	b	11ac4 <free@plt>
   11dd0:	mov	r1, r5
   11dd4:	mov	r0, r4
   11dd8:	bl	130a8 <table_row_destroy@@Base>
   11ddc:	add	r5, r5, #1
   11de0:	b	11d5c <table_destroy@@Base+0x2c>
   11de4:	mov	r1, r5
   11de8:	mov	r0, r4
   11dec:	bl	125c0 <table_column_destroy@@Base>
   11df0:	add	r5, r5, #1
   11df4:	b	11d84 <table_destroy@@Base+0x54>

00011df8 <table_delete@@Base>:
   11df8:	push	{r4, lr}
   11dfc:	mov	r4, r0
   11e00:	bl	11d30 <table_destroy@@Base>
   11e04:	mov	r0, r4
   11e08:	pop	{r4, lr}
   11e0c:	b	11ac4 <free@plt>

00011e10 <table_dupe@@Base>:
   11e10:	push	{r4, r5, r6, r7, r8, r9, lr}
   11e14:	sub	sp, sp, #20
   11e18:	mov	r6, r0
   11e1c:	mov	r4, #0
   11e20:	bl	130f8 <table_get_row_length@@Base>
   11e24:	mov	r9, r0
   11e28:	mov	r0, r6
   11e2c:	bl	125dc <table_get_column_length@@Base>
   11e30:	mov	r8, r0
   11e34:	bl	11d18 <table_new@@Base>
   11e38:	mov	r7, r0
   11e3c:	cmp	r4, r8
   11e40:	blt	11e5c <table_dupe@@Base+0x4c>
   11e44:	mov	r5, #0
   11e48:	cmp	r5, r9
   11e4c:	mov	r0, r7
   11e50:	blt	11e90 <table_dupe@@Base+0x80>
   11e54:	add	sp, sp, #20
   11e58:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11e5c:	mov	r1, r4
   11e60:	mov	r0, r6
   11e64:	bl	128a0 <table_get_column_name@@Base>
   11e68:	mov	r5, r0
   11e6c:	mov	r1, r4
   11e70:	mov	r0, r6
   11e74:	add	r4, r4, #1
   11e78:	bl	12634 <table_get_column_data_type@@Base>
   11e7c:	mov	r2, r0
   11e80:	mov	r1, r5
   11e84:	mov	r0, r7
   11e88:	bl	12648 <table_add_column@@Base>
   11e8c:	b	11e3c <table_dupe@@Base+0x2c>
   11e90:	mov	r4, #0
   11e94:	bl	13100 <table_add_row@@Base>
   11e98:	cmp	r4, r8
   11e9c:	addge	r5, r5, #1
   11ea0:	bge	11e48 <table_dupe@@Base+0x38>
   11ea4:	mov	r1, r4
   11ea8:	mov	r0, r6
   11eac:	bl	12634 <table_get_column_data_type@@Base>
   11eb0:	cmp	r0, #23
   11eb4:	ldrls	pc, [pc, r0, lsl #2]
   11eb8:	b	11f40 <table_dupe@@Base+0x130>
   11ebc:	andeq	r1, r1, ip, lsl pc
   11ec0:	andeq	r1, r1, r8, asr #30
   11ec4:	andeq	r1, r1, r0, ror pc
   11ec8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11ecc:	andeq	r1, r1, r0, asr #31
   11ed0:	andeq	r1, r1, r8, ror #31
   11ed4:	andeq	r2, r1, r0, lsl r0
   11ed8:	andeq	r2, r1, r8, lsr r0
   11edc:	andeq	r2, r1, r0, rrx
   11ee0:	andeq	r2, r1, r8, lsl #1
   11ee4:	strheq	r2, [r1], -r0
   11ee8:	ldrdeq	r2, [r1], -r8
   11eec:	andeq	r2, r1, r0, lsl #2
   11ef0:	andeq	r2, r1, r8, lsr #2
   11ef4:	andeq	r2, r1, r0, asr r1
   11ef8:	andeq	r2, r1, r8, ror r1
   11efc:	andeq	r2, r1, r8, asr #3
   11f00:	andeq	r2, r1, ip, ror #3
   11f04:	andeq	r2, r1, r0, lsl r2
   11f08:	andeq	r2, r1, ip, asr r2
   11f0c:	andeq	r2, r1, r4, lsl #5
   11f10:	andeq	r2, r1, r0, lsr #3
   11f14:	andeq	r2, r1, r4, lsr r2
   11f18:	andeq	r2, r1, ip, lsr #5
   11f1c:	mov	r2, r4
   11f20:	mov	r1, r5
   11f24:	mov	r0, r6
   11f28:	bl	12f90 <table_get_int@@Base>
   11f2c:	mov	r3, r0
   11f30:	mov	r2, r4
   11f34:	mov	r1, r5
   11f38:	mov	r0, r7
   11f3c:	bl	135b0 <table_set_int@@Base>
   11f40:	add	r4, r4, #1
   11f44:	b	11e98 <table_dupe@@Base+0x88>
   11f48:	mov	r2, r4
   11f4c:	mov	r1, r5
   11f50:	mov	r0, r6
   11f54:	bl	12fa0 <table_get_uint@@Base>
   11f58:	mov	r3, r0
   11f5c:	mov	r2, r4
   11f60:	mov	r1, r5
   11f64:	mov	r0, r7
   11f68:	bl	135d0 <table_set_uint@@Base>
   11f6c:	b	11f40 <table_dupe@@Base+0x130>
   11f70:	mov	r2, r4
   11f74:	mov	r1, r5
   11f78:	mov	r0, r6
   11f7c:	bl	12fb0 <table_get_int8@@Base>
   11f80:	mov	r3, r0
   11f84:	mov	r2, r4
   11f88:	mov	r1, r5
   11f8c:	mov	r0, r7
   11f90:	bl	135f0 <table_set_int8@@Base>
   11f94:	b	11f40 <table_dupe@@Base+0x130>
   11f98:	mov	r2, r4
   11f9c:	mov	r1, r5
   11fa0:	mov	r0, r6
   11fa4:	bl	12fc0 <table_get_uint8@@Base>
   11fa8:	mov	r3, r0
   11fac:	mov	r2, r4
   11fb0:	mov	r1, r5
   11fb4:	mov	r0, r7
   11fb8:	bl	13610 <table_set_uint8@@Base>
   11fbc:	b	11f40 <table_dupe@@Base+0x130>
   11fc0:	mov	r2, r4
   11fc4:	mov	r1, r5
   11fc8:	mov	r0, r6
   11fcc:	bl	12fd0 <table_get_int16@@Base>
   11fd0:	mov	r3, r0
   11fd4:	mov	r2, r4
   11fd8:	mov	r1, r5
   11fdc:	mov	r0, r7
   11fe0:	bl	13630 <table_set_int16@@Base>
   11fe4:	b	11f40 <table_dupe@@Base+0x130>
   11fe8:	mov	r2, r4
   11fec:	mov	r1, r5
   11ff0:	mov	r0, r6
   11ff4:	bl	12fe0 <table_get_uint16@@Base>
   11ff8:	mov	r3, r0
   11ffc:	mov	r2, r4
   12000:	mov	r1, r5
   12004:	mov	r0, r7
   12008:	bl	13650 <table_set_uint16@@Base>
   1200c:	b	11f40 <table_dupe@@Base+0x130>
   12010:	mov	r2, r4
   12014:	mov	r1, r5
   12018:	mov	r0, r6
   1201c:	bl	12ff0 <table_get_int32@@Base>
   12020:	mov	r3, r0
   12024:	mov	r2, r4
   12028:	mov	r1, r5
   1202c:	mov	r0, r7
   12030:	bl	13670 <table_set_int32@@Base>
   12034:	b	11f40 <table_dupe@@Base+0x130>
   12038:	mov	r2, r4
   1203c:	mov	r1, r5
   12040:	mov	r0, r6
   12044:	bl	12ff4 <table_get_uint32@@Base>
   12048:	mov	r3, r0
   1204c:	mov	r2, r4
   12050:	mov	r1, r5
   12054:	mov	r0, r7
   12058:	bl	13690 <table_set_uint32@@Base>
   1205c:	b	11f40 <table_dupe@@Base+0x130>
   12060:	mov	r2, r4
   12064:	mov	r1, r5
   12068:	mov	r0, r6
   1206c:	bl	12ff8 <table_get_int64@@Base>
   12070:	mov	r2, r4
   12074:	strd	r0, [sp]
   12078:	mov	r1, r5
   1207c:	mov	r0, r7
   12080:	bl	136b0 <table_set_int64@@Base>
   12084:	b	11f40 <table_dupe@@Base+0x130>
   12088:	mov	r2, r4
   1208c:	mov	r1, r5
   12090:	mov	r0, r6
   12094:	bl	13008 <table_get_uint64@@Base>
   12098:	mov	r2, r4
   1209c:	strd	r0, [sp]
   120a0:	mov	r1, r5
   120a4:	mov	r0, r7
   120a8:	bl	136cc <table_set_uint64@@Base>
   120ac:	b	11f40 <table_dupe@@Base+0x130>
   120b0:	mov	r2, r4
   120b4:	mov	r1, r5
   120b8:	mov	r0, r6
   120bc:	bl	13018 <table_get_short@@Base>
   120c0:	mov	r3, r0
   120c4:	mov	r2, r4
   120c8:	mov	r1, r5
   120cc:	mov	r0, r7
   120d0:	bl	136e8 <table_set_short@@Base>
   120d4:	b	11f40 <table_dupe@@Base+0x130>
   120d8:	mov	r2, r4
   120dc:	mov	r1, r5
   120e0:	mov	r0, r6
   120e4:	bl	1301c <table_get_ushort@@Base>
   120e8:	mov	r3, r0
   120ec:	mov	r2, r4
   120f0:	mov	r1, r5
   120f4:	mov	r0, r7
   120f8:	bl	13708 <table_set_ushort@@Base>
   120fc:	b	11f40 <table_dupe@@Base+0x130>
   12100:	mov	r2, r4
   12104:	mov	r1, r5
   12108:	mov	r0, r6
   1210c:	bl	13020 <table_get_long@@Base>
   12110:	mov	r3, r0
   12114:	mov	r2, r4
   12118:	mov	r1, r5
   1211c:	mov	r0, r7
   12120:	bl	13728 <table_set_long@@Base>
   12124:	b	11f40 <table_dupe@@Base+0x130>
   12128:	mov	r2, r4
   1212c:	mov	r1, r5
   12130:	mov	r0, r6
   12134:	bl	13030 <table_get_ulong@@Base>
   12138:	mov	r3, r0
   1213c:	mov	r2, r4
   12140:	mov	r1, r5
   12144:	mov	r0, r7
   12148:	bl	13748 <table_set_ulong@@Base>
   1214c:	b	11f40 <table_dupe@@Base+0x130>
   12150:	mov	r2, r4
   12154:	mov	r1, r5
   12158:	mov	r0, r6
   1215c:	bl	13040 <table_get_llong@@Base>
   12160:	mov	r2, r4
   12164:	strd	r0, [sp]
   12168:	mov	r1, r5
   1216c:	mov	r0, r7
   12170:	bl	13768 <table_set_llong@@Base>
   12174:	b	11f40 <table_dupe@@Base+0x130>
   12178:	mov	r2, r4
   1217c:	mov	r1, r5
   12180:	mov	r0, r6
   12184:	bl	13044 <table_get_ullong@@Base>
   12188:	mov	r2, r4
   1218c:	strd	r0, [sp]
   12190:	mov	r1, r5
   12194:	mov	r0, r7
   12198:	bl	13784 <table_set_ullong@@Base>
   1219c:	b	11f40 <table_dupe@@Base+0x130>
   121a0:	mov	r2, r4
   121a4:	mov	r1, r5
   121a8:	mov	r0, r6
   121ac:	bl	13080 <table_get_string@@Base>
   121b0:	mov	r3, r0
   121b4:	mov	r2, r4
   121b8:	mov	r1, r5
   121bc:	mov	r0, r7
   121c0:	bl	13800 <table_set_string@@Base>
   121c4:	b	11f40 <table_dupe@@Base+0x130>
   121c8:	mov	r2, r4
   121cc:	mov	r1, r5
   121d0:	mov	r0, r6
   121d4:	bl	13048 <table_get_float@@Base>
   121d8:	mov	r2, r4
   121dc:	mov	r1, r5
   121e0:	mov	r0, r7
   121e4:	bl	137a0 <table_set_float@@Base>
   121e8:	b	11f40 <table_dupe@@Base+0x130>
   121ec:	mov	r2, r4
   121f0:	mov	r1, r5
   121f4:	mov	r0, r6
   121f8:	bl	13058 <table_get_double@@Base>
   121fc:	mov	r2, r4
   12200:	mov	r1, r5
   12204:	mov	r0, r7
   12208:	bl	137c0 <table_set_double@@Base>
   1220c:	b	11f40 <table_dupe@@Base+0x130>
   12210:	mov	r2, r4
   12214:	mov	r1, r5
   12218:	mov	r0, r6
   1221c:	bl	13068 <table_get_ldouble@@Base>
   12220:	mov	r2, r4
   12224:	mov	r1, r5
   12228:	mov	r0, r7
   1222c:	bl	137e0 <table_set_ldouble@@Base>
   12230:	b	11f40 <table_dupe@@Base+0x130>
   12234:	mov	r2, r4
   12238:	mov	r1, r5
   1223c:	mov	r0, r6
   12240:	bl	12f80 <table_get_bool@@Base>
   12244:	mov	r3, r0
   12248:	mov	r2, r4
   1224c:	mov	r1, r5
   12250:	mov	r0, r7
   12254:	bl	13590 <table_set_bool@@Base>
   12258:	b	11f40 <table_dupe@@Base+0x130>
   1225c:	mov	r2, r4
   12260:	mov	r1, r5
   12264:	mov	r0, r6
   12268:	bl	13078 <table_get_char@@Base>
   1226c:	mov	r3, r0
   12270:	mov	r2, r4
   12274:	mov	r1, r5
   12278:	mov	r0, r7
   1227c:	bl	13818 <table_set_char@@Base>
   12280:	b	11f40 <table_dupe@@Base+0x130>
   12284:	mov	r2, r4
   12288:	mov	r1, r5
   1228c:	mov	r0, r6
   12290:	bl	1307c <table_get_uchar@@Base>
   12294:	mov	r3, r0
   12298:	mov	r2, r4
   1229c:	mov	r1, r5
   122a0:	mov	r0, r7
   122a4:	bl	13838 <table_set_uchar@@Base>
   122a8:	b	11f40 <table_dupe@@Base+0x130>
   122ac:	mov	r2, r4
   122b0:	mov	r1, r5
   122b4:	mov	r0, r6
   122b8:	bl	13084 <table_get_ptr@@Base>
   122bc:	add	r3, sp, #12
   122c0:	mov	r2, r4
   122c4:	str	r0, [sp, #12]
   122c8:	mov	r1, r5
   122cc:	mov	r0, r7
   122d0:	bl	13858 <table_set_ptr@@Base>
   122d4:	b	11f40 <table_dupe@@Base+0x130>

000122d8 <table_get_major_version@@Base>:
   122d8:	mov	r0, #0
   122dc:	bx	lr

000122e0 <table_get_minor_version@@Base>:
   122e0:	mov	r0, #0
   122e4:	bx	lr

000122e8 <table_get_patch_version@@Base>:
   122e8:	mov	r0, #0
   122ec:	bx	lr

000122f0 <table_get_version@@Base>:
   122f0:	ldr	r0, [pc]	; 122f8 <table_get_version@@Base+0x8>
   122f4:	bx	lr
   122f8:	andeq	r4, r1, r5, asr #5

000122fc <table_get_callback_length@@Base>:
   122fc:	ldr	r0, [r0, #32]
   12300:	bx	lr

00012304 <table_register_callback@@Base>:
   12304:	push	{r4, r5, r6, r7, r8, lr}
   12308:	mov	r4, r0
   1230c:	mov	ip, #0
   12310:	ldr	lr, [r0, #32]
   12314:	ldr	r0, [r0, #36]	; 0x24
   12318:	cmp	ip, lr
   1231c:	blt	123ac <table_register_callback@@Base+0xa8>
   12320:	ldr	ip, [r4, #48]	; 0x30
   12324:	mov	r5, r3
   12328:	mov	r6, r2
   1232c:	mov	r7, r1
   12330:	udiv	r3, lr, ip
   12334:	mls	r3, ip, r3, lr
   12338:	cmp	r3, #0
   1233c:	bne	12380 <table_register_callback@@Base+0x7c>
   12340:	ldr	r1, [r4, #52]	; 0x34
   12344:	add	r1, ip, r1
   12348:	str	r1, [r4, #52]	; 0x34
   1234c:	lsl	r1, r1, #2
   12350:	bl	11adc <realloc@plt>
   12354:	ldr	r1, [r4, #52]	; 0x34
   12358:	str	r0, [r4, #36]	; 0x24
   1235c:	ldr	r0, [r4, #40]	; 0x28
   12360:	lsl	r1, r1, #2
   12364:	bl	11adc <realloc@plt>
   12368:	ldr	r1, [r4, #52]	; 0x34
   1236c:	str	r0, [r4, #40]	; 0x28
   12370:	ldr	r0, [r4, #44]	; 0x2c
   12374:	lsl	r1, r1, #2
   12378:	bl	11adc <realloc@plt>
   1237c:	str	r0, [r4, #44]	; 0x2c
   12380:	ldr	r3, [r4, #32]
   12384:	ldr	r2, [r4, #36]	; 0x24
   12388:	str	r7, [r2, r3, lsl #2]
   1238c:	ldr	r2, [r4, #40]	; 0x28
   12390:	str	r6, [r2, r3, lsl #2]
   12394:	ldr	r2, [r4, #44]	; 0x2c
   12398:	str	r5, [r2, r3, lsl #2]
   1239c:	ldr	r3, [r4, #32]
   123a0:	add	r3, r3, #1
   123a4:	str	r3, [r4, #32]
   123a8:	pop	{r4, r5, r6, r7, r8, pc}
   123ac:	ldr	r6, [r0, ip, lsl #2]
   123b0:	lsl	r5, ip, #2
   123b4:	cmp	r1, r6
   123b8:	bne	123cc <table_register_callback@@Base+0xc8>
   123bc:	ldr	r6, [r4, #40]	; 0x28
   123c0:	ldr	r6, [r6, ip, lsl #2]
   123c4:	cmp	r2, r6
   123c8:	beq	123d4 <table_register_callback@@Base+0xd0>
   123cc:	add	ip, ip, #1
   123d0:	b	12318 <table_register_callback@@Base+0x14>
   123d4:	cmp	ip, #0
   123d8:	ble	12320 <table_register_callback@@Base+0x1c>
   123dc:	ldr	r1, [r4, #44]	; 0x2c
   123e0:	ldr	r2, [r1, r5]
   123e4:	orr	r2, r2, r3
   123e8:	str	r2, [r1, r5]
   123ec:	pop	{r4, r5, r6, r7, r8, pc}

000123f0 <table_unregister_callback@@Base>:
   123f0:	ldr	ip, [r0, #32]
   123f4:	mov	r3, #0
   123f8:	cmp	r3, ip
   123fc:	bxge	lr
   12400:	push	{r4, r5, r6, lr}
   12404:	ldr	lr, [r0, #36]	; 0x24
   12408:	ldr	lr, [lr, r3, lsl #2]
   1240c:	cmp	r1, lr
   12410:	bne	12424 <table_unregister_callback@@Base+0x34>
   12414:	ldr	lr, [r0, #40]	; 0x28
   12418:	ldr	lr, [lr, r3, lsl #2]
   1241c:	cmp	r2, lr
   12420:	beq	12464 <table_unregister_callback@@Base+0x74>
   12424:	add	r3, r3, #1
   12428:	cmp	r3, ip
   1242c:	blt	12404 <table_unregister_callback@@Base+0x14>
   12430:	pop	{r4, r5, r6, pc}
   12434:	ldr	r1, [r0, #36]	; 0x24
   12438:	add	r2, r3, #1
   1243c:	lsl	r3, r3, #2
   12440:	ldr	ip, [r1, r2, lsl #2]
   12444:	str	ip, [r1, r3]
   12448:	ldr	r1, [r0, #40]	; 0x28
   1244c:	ldr	ip, [r1, r2, lsl #2]
   12450:	str	ip, [r1, r3]
   12454:	ldr	r1, [r0, #44]	; 0x2c
   12458:	ldr	ip, [r1, r2, lsl #2]
   1245c:	str	ip, [r1, r3]
   12460:	mov	r3, r2
   12464:	ldr	r2, [r0, #32]
   12468:	sub	r2, r2, #1
   1246c:	cmp	r2, r3
   12470:	bgt	12434 <table_unregister_callback@@Base+0x44>
   12474:	ldr	r1, [r0, #48]	; 0x30
   12478:	str	r2, [r0, #32]
   1247c:	udiv	r3, r2, r1
   12480:	mls	r2, r1, r3, r2
   12484:	cmp	r2, #0
   12488:	popne	{r4, r5, r6, pc}
   1248c:	mov	r4, r0
   12490:	ldr	r5, [r4, #52]	; 0x34
   12494:	ldr	r0, [r0, #36]	; 0x24
   12498:	sub	r5, r5, r1
   1249c:	cmp	r5, #0
   124a0:	str	r5, [r4, #52]	; 0x34
   124a4:	beq	124e0 <table_unregister_callback@@Base+0xf0>
   124a8:	lsl	r1, r5, #2
   124ac:	bl	11adc <realloc@plt>
   124b0:	ldr	r1, [r4, #52]	; 0x34
   124b4:	str	r0, [r4, #36]	; 0x24
   124b8:	ldr	r0, [r4, #40]	; 0x28
   124bc:	lsl	r1, r1, #2
   124c0:	bl	11adc <realloc@plt>
   124c4:	ldr	r1, [r4, #52]	; 0x34
   124c8:	str	r0, [r4, #40]	; 0x28
   124cc:	ldr	r0, [r4, #44]	; 0x2c
   124d0:	lsl	r1, r1, #2
   124d4:	bl	11adc <realloc@plt>
   124d8:	str	r0, [r4, #44]	; 0x2c
   124dc:	pop	{r4, r5, r6, pc}
   124e0:	bl	11ac4 <free@plt>
   124e4:	ldr	r0, [r4, #40]	; 0x28
   124e8:	bl	11ac4 <free@plt>
   124ec:	ldr	r0, [r4, #44]	; 0x2c
   124f0:	bl	11ac4 <free@plt>
   124f4:	str	r5, [r4, #36]	; 0x24
   124f8:	str	r5, [r4, #40]	; 0x28
   124fc:	str	r5, [r4, #44]	; 0x2c
   12500:	pop	{r4, r5, r6, pc}

00012504 <table_notify@@Base>:
   12504:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12508:	mov	r5, r0
   1250c:	mov	r7, r1
   12510:	mov	r8, r2
   12514:	mov	r6, r3
   12518:	mov	r4, #0
   1251c:	ldr	r3, [r5, #32]
   12520:	cmp	r3, r4
   12524:	bgt	12530 <table_notify@@Base+0x2c>
   12528:	add	sp, sp, #12
   1252c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12530:	ldr	r3, [r5, #44]	; 0x2c
   12534:	ldr	r3, [r3, r4, lsl #2]
   12538:	tst	r6, r3
   1253c:	beq	12568 <table_notify@@Base+0x64>
   12540:	ldr	r3, [r5, #36]	; 0x24
   12544:	mov	r1, r7
   12548:	mov	r0, r5
   1254c:	ldr	r2, [r5, #40]	; 0x28
   12550:	ldr	r2, [r2, r4, lsl #2]
   12554:	str	r2, [sp]
   12558:	mov	r2, r8
   1255c:	ldr	r9, [r3, r4, lsl #2]
   12560:	mov	r3, r6
   12564:	blx	r9
   12568:	add	r4, r4, #1
   1256c:	b	1251c <table_notify@@Base+0x18>

00012570 <table_column_init@@Base>:
   12570:	push	{r4, r5, r6, r7, r8, lr}
   12574:	mov	r4, #12
   12578:	mov	r6, r2
   1257c:	mov	r8, r3
   12580:	mul	r4, r4, r1
   12584:	ldr	r7, [r0]
   12588:	mov	r0, r2
   1258c:	bl	11b18 <strlen@plt>
   12590:	add	r0, r0, #1
   12594:	bl	11af4 <malloc@plt>
   12598:	cmp	r0, #0
   1259c:	add	r5, r7, r4
   125a0:	str	r0, [r7, r4]
   125a4:	beq	125b0 <table_column_init@@Base+0x40>
   125a8:	mov	r1, r6
   125ac:	bl	11ae8 <strcpy@plt>
   125b0:	ldr	r3, [sp, #24]
   125b4:	str	r8, [r5, #4]
   125b8:	str	r3, [r5, #8]
   125bc:	pop	{r4, r5, r6, r7, r8, pc}

000125c0 <table_column_destroy@@Base>:
   125c0:	mov	r3, #12
   125c4:	ldr	r2, [r0]
   125c8:	mul	r1, r3, r1
   125cc:	ldr	r0, [r2, r1]
   125d0:	cmp	r0, #0
   125d4:	bxeq	lr
   125d8:	b	11ac4 <free@plt>

000125dc <table_get_column_length@@Base>:
   125dc:	ldr	r0, [r0, #4]
   125e0:	bx	lr

000125e4 <table_get_column@@Base>:
   125e4:	push	{r4, r5, r6, r7, r8, lr}
   125e8:	mov	r5, r0
   125ec:	mov	r7, r1
   125f0:	mov	r4, #0
   125f4:	mov	r8, #12
   125f8:	ldr	r6, [r0, #4]
   125fc:	cmp	r4, r6
   12600:	blt	12610 <table_get_column@@Base+0x2c>
   12604:	mvneq	r4, #0
   12608:	mov	r0, r4
   1260c:	pop	{r4, r5, r6, r7, r8, pc}
   12610:	ldr	r2, [r5]
   12614:	mul	r3, r8, r4
   12618:	mov	r1, r7
   1261c:	ldr	r0, [r2, r3]
   12620:	bl	11aac <strcmp@plt>
   12624:	cmp	r0, #0
   12628:	beq	12608 <table_get_column@@Base+0x24>
   1262c:	add	r4, r4, #1
   12630:	b	125fc <table_get_column@@Base+0x18>

00012634 <table_get_column_data_type@@Base>:
   12634:	ldr	r2, [r0]
   12638:	mov	r3, #12
   1263c:	mla	r1, r3, r1, r2
   12640:	ldr	r0, [r1, #4]
   12644:	bx	lr

00012648 <table_add_column@@Base>:
   12648:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1264c:	mov	r7, r1
   12650:	mov	r4, r0
   12654:	mov	r6, r2
   12658:	ldr	r3, [r0, #4]
   1265c:	ldr	r1, [r0, #8]
   12660:	udiv	r5, r3, r1
   12664:	mls	r5, r1, r5, r3
   12668:	cmp	r5, #0
   1266c:	beq	126d4 <table_add_column@@Base+0x8c>
   12670:	mov	r0, r4
   12674:	mov	r5, #0
   12678:	bl	130f8 <table_get_row_length@@Base>
   1267c:	ldr	r8, [r4, #4]
   12680:	mov	r9, r0
   12684:	mov	r0, r6
   12688:	bl	12f58 <table_get_default_compare_function_for_data_type@@Base>
   1268c:	mov	r3, r6
   12690:	mov	r2, r7
   12694:	str	r0, [sp]
   12698:	mov	r0, r4
   1269c:	mov	r1, r8
   126a0:	bl	12570 <table_column_init@@Base>
   126a4:	cmp	r9, r5
   126a8:	bgt	12734 <table_add_column@@Base+0xec>
   126ac:	mov	r0, r4
   126b0:	mov	r3, #8
   126b4:	ldr	r2, [r4, #4]
   126b8:	mvn	r1, #0
   126bc:	bl	12504 <table_notify@@Base>
   126c0:	ldr	r0, [r4, #4]
   126c4:	add	r3, r0, #1
   126c8:	str	r3, [r4, #4]
   126cc:	add	sp, sp, #12
   126d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   126d4:	ldr	r3, [r4, #12]
   126d8:	ldr	r0, [r0]
   126dc:	add	r1, r1, r3
   126e0:	mov	r3, #12
   126e4:	str	r1, [r4, #12]
   126e8:	mul	r1, r3, r1
   126ec:	bl	11adc <realloc@plt>
   126f0:	str	r0, [r4]
   126f4:	mov	r0, r4
   126f8:	bl	130f8 <table_get_row_length@@Base>
   126fc:	mov	r9, r0
   12700:	cmp	r9, r5
   12704:	ble	12670 <table_add_column@@Base+0x28>
   12708:	mov	r1, r5
   1270c:	mov	r0, r4
   12710:	bl	13294 <table_get_row_ptr@@Base>
   12714:	ldr	r1, [r4, #12]
   12718:	mov	r8, r0
   1271c:	add	r5, r5, #1
   12720:	ldr	r0, [r0]
   12724:	lsl	r1, r1, #2
   12728:	bl	11adc <realloc@plt>
   1272c:	str	r0, [r8]
   12730:	b	12700 <table_add_column@@Base+0xb8>
   12734:	mov	r1, r5
   12738:	mov	r2, r8
   1273c:	mov	r0, r4
   12740:	add	r5, r5, #1
   12744:	bl	14108 <table_cell_init@@Base>
   12748:	b	126a4 <table_add_column@@Base+0x5c>

0001274c <table_remove_column@@Base>:
   1274c:	push	{r4, r5, r6, r7, r8, lr}
   12750:	mov	r4, r0
   12754:	mov	r6, r1
   12758:	mov	r5, #12
   1275c:	bl	125c0 <table_column_destroy@@Base>
   12760:	ldr	r7, [r4, #4]
   12764:	mov	r1, r6
   12768:	sub	r7, r7, #1
   1276c:	cmp	r1, r7
   12770:	blt	127fc <table_remove_column@@Base+0xb0>
   12774:	mov	r0, r4
   12778:	mov	r5, #0
   1277c:	bl	130f8 <table_get_row_length@@Base>
   12780:	mov	r8, r0
   12784:	cmp	r8, r5
   12788:	bgt	12830 <table_remove_column@@Base+0xe4>
   1278c:	ldr	r5, [r4, #4]
   12790:	ldr	r1, [r4, #8]
   12794:	sub	r3, r5, #1
   12798:	udiv	r5, r3, r1
   1279c:	str	r3, [r4, #4]
   127a0:	mls	r5, r1, r5, r3
   127a4:	cmp	r5, #0
   127a8:	bne	127e0 <table_remove_column@@Base+0x94>
   127ac:	ldr	r0, [r4]
   127b0:	ldr	r3, [r4, #12]
   127b4:	sub	r3, r3, r1
   127b8:	mov	r1, #12
   127bc:	mul	r1, r1, r3
   127c0:	str	r3, [r4, #12]
   127c4:	bl	11adc <realloc@plt>
   127c8:	str	r0, [r4]
   127cc:	mov	r0, r4
   127d0:	bl	130f8 <table_get_row_length@@Base>
   127d4:	mov	r8, r0
   127d8:	cmp	r8, r5
   127dc:	bgt	12874 <table_remove_column@@Base+0x128>
   127e0:	mov	r0, r4
   127e4:	mov	r3, #16
   127e8:	mov	r2, r6
   127ec:	mvn	r1, #0
   127f0:	bl	12504 <table_notify@@Base>
   127f4:	mov	r0, #0
   127f8:	pop	{r4, r5, r6, r7, r8, pc}
   127fc:	ldr	ip, [r4]
   12800:	mul	r0, r5, r1
   12804:	add	r1, r1, #1
   12808:	add	r2, r0, #12
   1280c:	add	r2, ip, r2
   12810:	add	lr, ip, r0
   12814:	ldr	r3, [r2]
   12818:	str	r3, [ip, r0]
   1281c:	ldr	r3, [r2, #4]
   12820:	str	r3, [lr, #4]
   12824:	ldr	r3, [r2, #8]
   12828:	str	r3, [lr, #8]
   1282c:	b	1276c <table_remove_column@@Base+0x20>
   12830:	mov	r2, r6
   12834:	mov	r1, r5
   12838:	mov	r0, r4
   1283c:	bl	1411c <table_cell_destroy@@Base>
   12840:	mov	r1, r5
   12844:	mov	r0, r4
   12848:	bl	13294 <table_get_row_ptr@@Base>
   1284c:	mov	r3, r6
   12850:	cmp	r7, r3
   12854:	addle	r5, r5, #1
   12858:	ble	12784 <table_remove_column@@Base+0x38>
   1285c:	ldr	r2, [r0]
   12860:	add	r1, r2, r3, lsl #2
   12864:	ldr	r1, [r1, #4]
   12868:	str	r1, [r2, r3, lsl #2]
   1286c:	add	r3, r3, #1
   12870:	b	12850 <table_remove_column@@Base+0x104>
   12874:	mov	r1, r5
   12878:	mov	r0, r4
   1287c:	bl	13294 <table_get_row_ptr@@Base>
   12880:	ldr	r1, [r4, #12]
   12884:	mov	r7, r0
   12888:	add	r5, r5, #1
   1288c:	ldr	r0, [r0]
   12890:	lsl	r1, r1, #2
   12894:	bl	11adc <realloc@plt>
   12898:	str	r0, [r7]
   1289c:	b	127d8 <table_remove_column@@Base+0x8c>

000128a0 <table_get_column_name@@Base>:
   128a0:	mov	r3, #12
   128a4:	ldr	r2, [r0]
   128a8:	mul	r1, r3, r1
   128ac:	ldr	r0, [r2, r1]
   128b0:	bx	lr

000128b4 <table_get_col_ptr@@Base>:
   128b4:	ldr	r3, [r0]
   128b8:	mov	r0, #12
   128bc:	mla	r0, r0, r1, r3
   128c0:	bx	lr

000128c4 <table_get_column_compare_function@@Base>:
   128c4:	ldr	r2, [r0]
   128c8:	mov	r3, #12
   128cc:	mla	r1, r3, r1, r2
   128d0:	ldr	r0, [r1, #8]
   128d4:	bx	lr

000128d8 <table_set_column_compare_function@@Base>:
   128d8:	ldr	r0, [r0]
   128dc:	mov	r3, #12
   128e0:	mla	r1, r3, r1, r0
   128e4:	str	r2, [r1, #8]
   128e8:	bx	lr

000128ec <table_compare_ptr@@Base>:
   128ec:	cmp	r0, r1
   128f0:	bhi	12900 <table_compare_ptr@@Base+0x14>
   128f4:	mvncc	r0, #0
   128f8:	movcs	r0, #0
   128fc:	bx	lr
   12900:	mov	r0, #1
   12904:	bx	lr

00012908 <table_compare_string@@Base>:
   12908:	cmp	r0, #0
   1290c:	bne	12920 <table_compare_string@@Base+0x18>
   12910:	adds	r0, r1, #0
   12914:	movne	r0, #1
   12918:	rsb	r0, r0, #0
   1291c:	bx	lr
   12920:	cmp	r1, #0
   12924:	beq	1292c <table_compare_string@@Base+0x24>
   12928:	b	11aac <strcmp@plt>
   1292c:	mov	r0, #1
   12930:	bx	lr

00012934 <table_compare_bool@@Base>:
   12934:	cmp	r0, #0
   12938:	bne	1294c <table_compare_bool@@Base+0x18>
   1293c:	adds	r0, r1, #0
   12940:	movne	r0, #1
   12944:	rsb	r0, r0, #0
   12948:	bx	lr
   1294c:	cmp	r1, #0
   12950:	beq	12970 <table_compare_bool@@Base+0x3c>
   12954:	ldrb	r2, [r0]
   12958:	ldrb	r3, [r1]
   1295c:	cmp	r2, r3
   12960:	bhi	12970 <table_compare_bool@@Base+0x3c>
   12964:	mvncc	r0, #0
   12968:	movcs	r0, #0
   1296c:	bx	lr
   12970:	mov	r0, #1
   12974:	bx	lr

00012978 <table_compare_int32@@Base>:
   12978:	cmp	r0, #0
   1297c:	bne	12990 <table_compare_int32@@Base+0x18>
   12980:	adds	r0, r1, #0
   12984:	movne	r0, #1
   12988:	rsb	r0, r0, #0
   1298c:	bx	lr
   12990:	cmp	r1, #0
   12994:	beq	129b4 <table_compare_int32@@Base+0x3c>
   12998:	ldr	r2, [r0]
   1299c:	ldr	r3, [r1]
   129a0:	cmp	r2, r3
   129a4:	bgt	129b4 <table_compare_int32@@Base+0x3c>
   129a8:	mvnlt	r0, #0
   129ac:	movge	r0, #0
   129b0:	bx	lr
   129b4:	mov	r0, #1
   129b8:	bx	lr

000129bc <table_compare_uint32@@Base>:
   129bc:	cmp	r0, #0
   129c0:	bne	129d4 <table_compare_uint32@@Base+0x18>
   129c4:	adds	r0, r1, #0
   129c8:	movne	r0, #1
   129cc:	rsb	r0, r0, #0
   129d0:	bx	lr
   129d4:	cmp	r1, #0
   129d8:	beq	129f8 <table_compare_uint32@@Base+0x3c>
   129dc:	ldr	r2, [r0]
   129e0:	ldr	r3, [r1]
   129e4:	cmp	r2, r3
   129e8:	bhi	129f8 <table_compare_uint32@@Base+0x3c>
   129ec:	mvncc	r0, #0
   129f0:	movcs	r0, #0
   129f4:	bx	lr
   129f8:	mov	r0, #1
   129fc:	bx	lr

00012a00 <table_compare_int8@@Base>:
   12a00:	cmp	r0, #0
   12a04:	bne	12a18 <table_compare_int8@@Base+0x18>
   12a08:	adds	r0, r1, #0
   12a0c:	movne	r0, #1
   12a10:	rsb	r0, r0, #0
   12a14:	bx	lr
   12a18:	cmp	r1, #0
   12a1c:	beq	12a3c <table_compare_int8@@Base+0x3c>
   12a20:	ldrsb	r2, [r0]
   12a24:	ldrsb	r3, [r1]
   12a28:	cmp	r2, r3
   12a2c:	bgt	12a3c <table_compare_int8@@Base+0x3c>
   12a30:	mvnlt	r0, #0
   12a34:	movge	r0, #0
   12a38:	bx	lr
   12a3c:	mov	r0, #1
   12a40:	bx	lr

00012a44 <table_compare_char@@Base>:
   12a44:	cmp	r0, #0
   12a48:	bne	12a5c <table_compare_char@@Base+0x18>
   12a4c:	adds	r0, r1, #0
   12a50:	movne	r0, #1
   12a54:	rsb	r0, r0, #0
   12a58:	bx	lr
   12a5c:	cmp	r1, #0
   12a60:	beq	12a80 <table_compare_char@@Base+0x3c>
   12a64:	ldrb	r2, [r0]
   12a68:	ldrb	r3, [r1]
   12a6c:	cmp	r2, r3
   12a70:	bhi	12a80 <table_compare_char@@Base+0x3c>
   12a74:	mvncc	r0, #0
   12a78:	movcs	r0, #0
   12a7c:	bx	lr
   12a80:	mov	r0, #1
   12a84:	bx	lr

00012a88 <table_compare_short@@Base>:
   12a88:	cmp	r0, #0
   12a8c:	bne	12aa0 <table_compare_short@@Base+0x18>
   12a90:	adds	r0, r1, #0
   12a94:	movne	r0, #1
   12a98:	rsb	r0, r0, #0
   12a9c:	bx	lr
   12aa0:	cmp	r1, #0
   12aa4:	beq	12ac4 <table_compare_short@@Base+0x3c>
   12aa8:	ldrsh	r2, [r0]
   12aac:	ldrsh	r3, [r1]
   12ab0:	cmp	r2, r3
   12ab4:	bgt	12ac4 <table_compare_short@@Base+0x3c>
   12ab8:	mvnlt	r0, #0
   12abc:	movge	r0, #0
   12ac0:	bx	lr
   12ac4:	mov	r0, #1
   12ac8:	bx	lr

00012acc <table_compare_ushort@@Base>:
   12acc:	cmp	r0, #0
   12ad0:	bne	12ae4 <table_compare_ushort@@Base+0x18>
   12ad4:	adds	r0, r1, #0
   12ad8:	movne	r0, #1
   12adc:	rsb	r0, r0, #0
   12ae0:	bx	lr
   12ae4:	cmp	r1, #0
   12ae8:	beq	12b08 <table_compare_ushort@@Base+0x3c>
   12aec:	ldrh	r2, [r0]
   12af0:	ldrh	r3, [r1]
   12af4:	cmp	r2, r3
   12af8:	bhi	12b08 <table_compare_ushort@@Base+0x3c>
   12afc:	mvncc	r0, #0
   12b00:	movcs	r0, #0
   12b04:	bx	lr
   12b08:	mov	r0, #1
   12b0c:	bx	lr

00012b10 <table_compare_llong@@Base>:
   12b10:	cmp	r0, #0
   12b14:	bne	12b28 <table_compare_llong@@Base+0x18>
   12b18:	adds	r0, r1, #0
   12b1c:	movne	r0, #1
   12b20:	rsb	r0, r0, #0
   12b24:	bx	lr
   12b28:	cmp	r1, #0
   12b2c:	beq	12b5c <table_compare_llong@@Base+0x4c>
   12b30:	push	{r4, r5, lr}
   12b34:	ldrd	r2, [r1]
   12b38:	ldrd	r4, [r0]
   12b3c:	cmp	r2, r4
   12b40:	sbcs	r1, r3, r5
   12b44:	blt	12b64 <table_compare_llong@@Base+0x54>
   12b48:	cmp	r4, r2
   12b4c:	sbcs	r3, r5, r3
   12b50:	mvnlt	r0, #0
   12b54:	movge	r0, #0
   12b58:	pop	{r4, r5, pc}
   12b5c:	mov	r0, #1
   12b60:	bx	lr
   12b64:	mov	r0, #1
   12b68:	pop	{r4, r5, pc}

00012b6c <table_compare_uint64@@Base>:
   12b6c:	cmp	r0, #0
   12b70:	bne	12b84 <table_compare_uint64@@Base+0x18>
   12b74:	adds	r0, r1, #0
   12b78:	movne	r0, #1
   12b7c:	rsb	r0, r0, #0
   12b80:	bx	lr
   12b84:	cmp	r1, #0
   12b88:	beq	12bb0 <table_compare_uint64@@Base+0x44>
   12b8c:	push	{r4, r5, lr}
   12b90:	ldrd	r2, [r1]
   12b94:	ldrd	r4, [r0]
   12b98:	cmp	r5, r3
   12b9c:	cmpeq	r4, r2
   12ba0:	bhi	12bb8 <table_compare_uint64@@Base+0x4c>
   12ba4:	mvncc	r0, #0
   12ba8:	movcs	r0, #0
   12bac:	pop	{r4, r5, pc}
   12bb0:	mov	r0, #1
   12bb4:	bx	lr
   12bb8:	mov	r0, #1
   12bbc:	pop	{r4, r5, pc}

00012bc0 <table_compare_long@@Base>:
   12bc0:	cmp	r0, #0
   12bc4:	bne	12bd8 <table_compare_long@@Base+0x18>
   12bc8:	adds	r0, r1, #0
   12bcc:	movne	r0, #1
   12bd0:	rsb	r0, r0, #0
   12bd4:	bx	lr
   12bd8:	cmp	r1, #0
   12bdc:	beq	12bfc <table_compare_long@@Base+0x3c>
   12be0:	ldr	r2, [r0]
   12be4:	ldr	r3, [r1]
   12be8:	cmp	r2, r3
   12bec:	bgt	12bfc <table_compare_long@@Base+0x3c>
   12bf0:	mvnlt	r0, #0
   12bf4:	movge	r0, #0
   12bf8:	bx	lr
   12bfc:	mov	r0, #1
   12c00:	bx	lr

00012c04 <table_compare_ullong@@Base>:
   12c04:	cmp	r0, #0
   12c08:	bne	12c1c <table_compare_ullong@@Base+0x18>
   12c0c:	adds	r0, r1, #0
   12c10:	movne	r0, #1
   12c14:	rsb	r0, r0, #0
   12c18:	bx	lr
   12c1c:	cmp	r1, #0
   12c20:	beq	12c40 <table_compare_ullong@@Base+0x3c>
   12c24:	ldr	r2, [r0]
   12c28:	ldr	r3, [r1]
   12c2c:	cmp	r2, r3
   12c30:	bhi	12c40 <table_compare_ullong@@Base+0x3c>
   12c34:	mvncc	r0, #0
   12c38:	movcs	r0, #0
   12c3c:	bx	lr
   12c40:	mov	r0, #1
   12c44:	bx	lr

00012c48 <table_compare_float@@Base>:
   12c48:	cmp	r0, #0
   12c4c:	bne	12c60 <table_compare_float@@Base+0x18>
   12c50:	adds	r0, r1, #0
   12c54:	movne	r0, #1
   12c58:	rsb	r0, r0, #0
   12c5c:	bx	lr
   12c60:	cmp	r1, #0
   12c64:	beq	12c88 <table_compare_float@@Base+0x40>
   12c68:	vldr	s14, [r0]
   12c6c:	vldr	s15, [r1]
   12c70:	vcmpe.f32	s14, s15
   12c74:	vmrs	APSR_nzcv, fpscr
   12c78:	bgt	12c88 <table_compare_float@@Base+0x40>
   12c7c:	mvnmi	r0, #0
   12c80:	movpl	r0, #0
   12c84:	bx	lr
   12c88:	mov	r0, #1
   12c8c:	bx	lr

00012c90 <table_compare_double@@Base>:
   12c90:	cmp	r0, #0
   12c94:	bne	12ca8 <table_compare_double@@Base+0x18>
   12c98:	adds	r0, r1, #0
   12c9c:	movne	r0, #1
   12ca0:	rsb	r0, r0, #0
   12ca4:	bx	lr
   12ca8:	cmp	r1, #0
   12cac:	beq	12cd0 <table_compare_double@@Base+0x40>
   12cb0:	vldr	d6, [r0]
   12cb4:	vldr	d7, [r1]
   12cb8:	vcmpe.f64	d6, d7
   12cbc:	vmrs	APSR_nzcv, fpscr
   12cc0:	bgt	12cd0 <table_compare_double@@Base+0x40>
   12cc4:	mvnmi	r0, #0
   12cc8:	movpl	r0, #0
   12ccc:	bx	lr
   12cd0:	mov	r0, #1
   12cd4:	bx	lr

00012cd8 <table_compare_ldouble@@Base>:
   12cd8:	cmp	r0, #0
   12cdc:	bne	12cf0 <table_compare_ldouble@@Base+0x18>
   12ce0:	adds	r0, r1, #0
   12ce4:	movne	r0, #1
   12ce8:	rsb	r0, r0, #0
   12cec:	bx	lr
   12cf0:	cmp	r1, #0
   12cf4:	beq	12d18 <table_compare_ldouble@@Base+0x40>
   12cf8:	vldr	d6, [r0]
   12cfc:	vldr	d7, [r1]
   12d00:	vcmpe.f64	d6, d7
   12d04:	vmrs	APSR_nzcv, fpscr
   12d08:	bgt	12d18 <table_compare_ldouble@@Base+0x40>
   12d0c:	mvnmi	r0, #0
   12d10:	movpl	r0, #0
   12d14:	bx	lr
   12d18:	mov	r0, #1
   12d1c:	bx	lr

00012d20 <table_compare_uchar@@Base>:
   12d20:	cmp	r0, #0
   12d24:	bne	12d38 <table_compare_uchar@@Base+0x18>
   12d28:	adds	r0, r1, #0
   12d2c:	movne	r0, #1
   12d30:	rsb	r0, r0, #0
   12d34:	bx	lr
   12d38:	cmp	r1, #0
   12d3c:	beq	12d5c <table_compare_uchar@@Base+0x3c>
   12d40:	ldrb	r2, [r0]
   12d44:	ldrb	r3, [r1]
   12d48:	cmp	r2, r3
   12d4c:	bhi	12d5c <table_compare_uchar@@Base+0x3c>
   12d50:	mvncc	r0, #0
   12d54:	movcs	r0, #0
   12d58:	bx	lr
   12d5c:	mov	r0, #1
   12d60:	bx	lr

00012d64 <table_compare_int@@Base>:
   12d64:	cmp	r0, #0
   12d68:	bne	12d7c <table_compare_int@@Base+0x18>
   12d6c:	adds	r0, r1, #0
   12d70:	movne	r0, #1
   12d74:	rsb	r0, r0, #0
   12d78:	bx	lr
   12d7c:	cmp	r1, #0
   12d80:	beq	12da0 <table_compare_int@@Base+0x3c>
   12d84:	ldr	r2, [r0]
   12d88:	ldr	r3, [r1]
   12d8c:	cmp	r2, r3
   12d90:	bgt	12da0 <table_compare_int@@Base+0x3c>
   12d94:	mvnlt	r0, #0
   12d98:	movge	r0, #0
   12d9c:	bx	lr
   12da0:	mov	r0, #1
   12da4:	bx	lr

00012da8 <table_compare_uint@@Base>:
   12da8:	cmp	r0, #0
   12dac:	bne	12dc0 <table_compare_uint@@Base+0x18>
   12db0:	adds	r0, r1, #0
   12db4:	movne	r0, #1
   12db8:	rsb	r0, r0, #0
   12dbc:	bx	lr
   12dc0:	cmp	r1, #0
   12dc4:	beq	12de4 <table_compare_uint@@Base+0x3c>
   12dc8:	ldr	r2, [r0]
   12dcc:	ldr	r3, [r1]
   12dd0:	cmp	r2, r3
   12dd4:	bhi	12de4 <table_compare_uint@@Base+0x3c>
   12dd8:	mvncc	r0, #0
   12ddc:	movcs	r0, #0
   12de0:	bx	lr
   12de4:	mov	r0, #1
   12de8:	bx	lr

00012dec <table_compare_uint8@@Base>:
   12dec:	cmp	r0, #0
   12df0:	bne	12e04 <table_compare_uint8@@Base+0x18>
   12df4:	adds	r0, r1, #0
   12df8:	movne	r0, #1
   12dfc:	rsb	r0, r0, #0
   12e00:	bx	lr
   12e04:	cmp	r1, #0
   12e08:	beq	12e28 <table_compare_uint8@@Base+0x3c>
   12e0c:	ldrb	r2, [r0]
   12e10:	ldrb	r3, [r1]
   12e14:	cmp	r2, r3
   12e18:	bhi	12e28 <table_compare_uint8@@Base+0x3c>
   12e1c:	mvncc	r0, #0
   12e20:	movcs	r0, #0
   12e24:	bx	lr
   12e28:	mov	r0, #1
   12e2c:	bx	lr

00012e30 <table_compare_int16@@Base>:
   12e30:	cmp	r0, #0
   12e34:	bne	12e48 <table_compare_int16@@Base+0x18>
   12e38:	adds	r0, r1, #0
   12e3c:	movne	r0, #1
   12e40:	rsb	r0, r0, #0
   12e44:	bx	lr
   12e48:	cmp	r1, #0
   12e4c:	beq	12e6c <table_compare_int16@@Base+0x3c>
   12e50:	ldrsh	r2, [r0]
   12e54:	ldrsh	r3, [r1]
   12e58:	cmp	r2, r3
   12e5c:	bgt	12e6c <table_compare_int16@@Base+0x3c>
   12e60:	mvnlt	r0, #0
   12e64:	movge	r0, #0
   12e68:	bx	lr
   12e6c:	mov	r0, #1
   12e70:	bx	lr

00012e74 <table_compare_uint16@@Base>:
   12e74:	cmp	r0, #0
   12e78:	bne	12e8c <table_compare_uint16@@Base+0x18>
   12e7c:	adds	r0, r1, #0
   12e80:	movne	r0, #1
   12e84:	rsb	r0, r0, #0
   12e88:	bx	lr
   12e8c:	cmp	r1, #0
   12e90:	beq	12eb0 <table_compare_uint16@@Base+0x3c>
   12e94:	ldrh	r2, [r0]
   12e98:	ldrh	r3, [r1]
   12e9c:	cmp	r2, r3
   12ea0:	bhi	12eb0 <table_compare_uint16@@Base+0x3c>
   12ea4:	mvncc	r0, #0
   12ea8:	movcs	r0, #0
   12eac:	bx	lr
   12eb0:	mov	r0, #1
   12eb4:	bx	lr

00012eb8 <table_compare_ulong@@Base>:
   12eb8:	cmp	r0, #0
   12ebc:	bne	12ed0 <table_compare_ulong@@Base+0x18>
   12ec0:	adds	r0, r1, #0
   12ec4:	movne	r0, #1
   12ec8:	rsb	r0, r0, #0
   12ecc:	bx	lr
   12ed0:	cmp	r1, #0
   12ed4:	beq	12ef4 <table_compare_ulong@@Base+0x3c>
   12ed8:	ldr	r2, [r0]
   12edc:	ldr	r3, [r1]
   12ee0:	cmp	r2, r3
   12ee4:	bhi	12ef4 <table_compare_ulong@@Base+0x3c>
   12ee8:	mvncc	r0, #0
   12eec:	movcs	r0, #0
   12ef0:	bx	lr
   12ef4:	mov	r0, #1
   12ef8:	bx	lr

00012efc <table_compare_int64@@Base>:
   12efc:	cmp	r0, #0
   12f00:	bne	12f14 <table_compare_int64@@Base+0x18>
   12f04:	adds	r0, r1, #0
   12f08:	movne	r0, #1
   12f0c:	rsb	r0, r0, #0
   12f10:	bx	lr
   12f14:	cmp	r1, #0
   12f18:	beq	12f48 <table_compare_int64@@Base+0x4c>
   12f1c:	push	{r4, r5, lr}
   12f20:	ldrd	r2, [r1]
   12f24:	ldrd	r4, [r0]
   12f28:	cmp	r2, r4
   12f2c:	sbcs	r1, r3, r5
   12f30:	blt	12f50 <table_compare_int64@@Base+0x54>
   12f34:	cmp	r4, r2
   12f38:	sbcs	r3, r5, r3
   12f3c:	mvnlt	r0, #0
   12f40:	movge	r0, #0
   12f44:	pop	{r4, r5, pc}
   12f48:	mov	r0, #1
   12f4c:	bx	lr
   12f50:	mov	r0, #1
   12f54:	pop	{r4, r5, pc}

00012f58 <table_get_default_compare_function_for_data_type@@Base>:
   12f58:	cmp	r0, #23
   12f5c:	ldrls	r3, [pc, #8]	; 12f6c <table_get_default_compare_function_for_data_type@@Base+0x14>
   12f60:	ldrls	r0, [r3, r0, lsl #2]
   12f64:	movhi	r0, #0
   12f68:	bx	lr
   12f6c:	andeq	r4, r1, r8, lsr r2

00012f70 <table_get@@Base>:
   12f70:	push	{r4, lr}
   12f74:	bl	140f0 <table_get_cell_ptr@@Base>
   12f78:	ldr	r0, [r0]
   12f7c:	pop	{r4, pc}

00012f80 <table_get_bool@@Base>:
   12f80:	push	{r4, lr}
   12f84:	bl	12f70 <table_get@@Base>
   12f88:	ldrb	r0, [r0]
   12f8c:	pop	{r4, pc}

00012f90 <table_get_int@@Base>:
   12f90:	push	{r4, lr}
   12f94:	bl	12f70 <table_get@@Base>
   12f98:	ldr	r0, [r0]
   12f9c:	pop	{r4, pc}

00012fa0 <table_get_uint@@Base>:
   12fa0:	push	{r4, lr}
   12fa4:	bl	12f70 <table_get@@Base>
   12fa8:	ldr	r0, [r0]
   12fac:	pop	{r4, pc}

00012fb0 <table_get_int8@@Base>:
   12fb0:	push	{r4, lr}
   12fb4:	bl	12f70 <table_get@@Base>
   12fb8:	ldrsb	r0, [r0]
   12fbc:	pop	{r4, pc}

00012fc0 <table_get_uint8@@Base>:
   12fc0:	push	{r4, lr}
   12fc4:	bl	12f70 <table_get@@Base>
   12fc8:	ldrb	r0, [r0]
   12fcc:	pop	{r4, pc}

00012fd0 <table_get_int16@@Base>:
   12fd0:	push	{r4, lr}
   12fd4:	bl	12f70 <table_get@@Base>
   12fd8:	ldrsh	r0, [r0]
   12fdc:	pop	{r4, pc}

00012fe0 <table_get_uint16@@Base>:
   12fe0:	push	{r4, lr}
   12fe4:	bl	12f70 <table_get@@Base>
   12fe8:	ldrh	r0, [r0]
   12fec:	pop	{r4, pc}

00012ff0 <table_get_int32@@Base>:
   12ff0:	b	12f90 <table_get_int@@Base>

00012ff4 <table_get_uint32@@Base>:
   12ff4:	b	12fa0 <table_get_uint@@Base>

00012ff8 <table_get_int64@@Base>:
   12ff8:	push	{r4, lr}
   12ffc:	bl	12f70 <table_get@@Base>
   13000:	ldrd	r0, [r0]
   13004:	pop	{r4, pc}

00013008 <table_get_uint64@@Base>:
   13008:	push	{r4, lr}
   1300c:	bl	12f70 <table_get@@Base>
   13010:	ldrd	r0, [r0]
   13014:	pop	{r4, pc}

00013018 <table_get_short@@Base>:
   13018:	b	12fd0 <table_get_int16@@Base>

0001301c <table_get_ushort@@Base>:
   1301c:	b	12fe0 <table_get_uint16@@Base>

00013020 <table_get_long@@Base>:
   13020:	push	{r4, lr}
   13024:	bl	12f70 <table_get@@Base>
   13028:	ldr	r0, [r0]
   1302c:	pop	{r4, pc}

00013030 <table_get_ulong@@Base>:
   13030:	push	{r4, lr}
   13034:	bl	12f70 <table_get@@Base>
   13038:	ldr	r0, [r0]
   1303c:	pop	{r4, pc}

00013040 <table_get_llong@@Base>:
   13040:	b	12ff8 <table_get_int64@@Base>

00013044 <table_get_ullong@@Base>:
   13044:	b	13008 <table_get_uint64@@Base>

00013048 <table_get_float@@Base>:
   13048:	push	{r4, lr}
   1304c:	bl	12f70 <table_get@@Base>
   13050:	vldr	s0, [r0]
   13054:	pop	{r4, pc}

00013058 <table_get_double@@Base>:
   13058:	push	{r4, lr}
   1305c:	bl	12f70 <table_get@@Base>
   13060:	vldr	d0, [r0]
   13064:	pop	{r4, pc}

00013068 <table_get_ldouble@@Base>:
   13068:	push	{r4, lr}
   1306c:	bl	12f70 <table_get@@Base>
   13070:	vldr	d0, [r0]
   13074:	pop	{r4, pc}

00013078 <table_get_char@@Base>:
   13078:	b	12fc0 <table_get_uint8@@Base>

0001307c <table_get_uchar@@Base>:
   1307c:	b	12fc0 <table_get_uint8@@Base>

00013080 <table_get_string@@Base>:
   13080:	b	12f70 <table_get@@Base>

00013084 <table_get_ptr@@Base>:
   13084:	b	12f70 <table_get@@Base>

00013088 <table_row_init@@Base>:
   13088:	push	{r4, r5, r6, lr}
   1308c:	mov	r5, r1
   13090:	ldr	r4, [r0, #16]
   13094:	ldr	r0, [r0, #12]
   13098:	lsl	r0, r0, #2
   1309c:	bl	11af4 <malloc@plt>
   130a0:	str	r0, [r4, r5, lsl #2]
   130a4:	pop	{r4, r5, r6, pc}

000130a8 <table_row_destroy@@Base>:
   130a8:	push	{r4, r5, r6, r7, r8, lr}
   130ac:	mov	r6, r0
   130b0:	mov	r5, r1
   130b4:	mov	r4, #0
   130b8:	bl	125dc <table_get_column_length@@Base>
   130bc:	ldr	r7, [r6, #16]
   130c0:	mov	r8, r0
   130c4:	cmp	r4, r8
   130c8:	blt	130e0 <table_row_destroy@@Base+0x38>
   130cc:	ldr	r0, [r7, r5, lsl #2]
   130d0:	cmp	r0, #0
   130d4:	popeq	{r4, r5, r6, r7, r8, pc}
   130d8:	pop	{r4, r5, r6, r7, r8, lr}
   130dc:	b	11ac4 <free@plt>
   130e0:	mov	r2, r4
   130e4:	mov	r1, r5
   130e8:	mov	r0, r6
   130ec:	add	r4, r4, #1
   130f0:	bl	1411c <table_cell_destroy@@Base>
   130f4:	b	130c4 <table_row_destroy@@Base+0x1c>

000130f8 <table_get_row_length@@Base>:
   130f8:	ldr	r0, [r0, #20]
   130fc:	bx	lr

00013100 <table_add_row@@Base>:
   13100:	ldr	r2, [r0, #20]
   13104:	push	{r4, r5, r6, r7, r8, lr}
   13108:	mov	r4, r0
   1310c:	ldr	r1, [r0, #24]
   13110:	udiv	r3, r2, r1
   13114:	mls	r3, r1, r3, r2
   13118:	cmp	r3, #0
   1311c:	bne	1313c <table_add_row@@Base+0x3c>
   13120:	ldr	r3, [r4, #28]
   13124:	ldr	r0, [r0, #16]
   13128:	add	r1, r1, r3
   1312c:	str	r1, [r4, #28]
   13130:	lsl	r1, r1, #2
   13134:	bl	11adc <realloc@plt>
   13138:	str	r0, [r4, #16]
   1313c:	ldr	r6, [r4, #20]
   13140:	mov	r0, r4
   13144:	mov	r5, #0
   13148:	bl	125dc <table_get_column_length@@Base>
   1314c:	mov	r7, r0
   13150:	mov	r0, r4
   13154:	mov	r1, r6
   13158:	bl	13088 <table_row_init@@Base>
   1315c:	cmp	r7, r5
   13160:	bgt	13188 <table_add_row@@Base+0x88>
   13164:	mov	r0, r4
   13168:	mov	r3, #2
   1316c:	ldr	r1, [r4, #20]
   13170:	mvn	r2, #0
   13174:	bl	12504 <table_notify@@Base>
   13178:	ldr	r0, [r4, #20]
   1317c:	add	r3, r0, #1
   13180:	str	r3, [r4, #20]
   13184:	pop	{r4, r5, r6, r7, r8, pc}
   13188:	mov	r2, r5
   1318c:	mov	r1, r6
   13190:	mov	r0, r4
   13194:	add	r5, r5, #1
   13198:	bl	14108 <table_cell_init@@Base>
   1319c:	b	1315c <table_add_row@@Base+0x5c>

000131a0 <table_remove_row@@Base>:
   131a0:	push	{r4, r5, r6, r7, r8, lr}
   131a4:	mov	r4, r0
   131a8:	mov	r6, r1
   131ac:	mov	r5, #0
   131b0:	ldr	r7, [r0, #20]
   131b4:	bl	125dc <table_get_column_length@@Base>
   131b8:	mov	r8, r0
   131bc:	cmp	r8, r5
   131c0:	bgt	13240 <table_remove_row@@Base+0xa0>
   131c4:	ldr	r3, [r4, #16]
   131c8:	ldr	r0, [r3, r6, lsl #2]
   131cc:	cmp	r0, #0
   131d0:	beq	131d8 <table_remove_row@@Base+0x38>
   131d4:	bl	11ac4 <free@plt>
   131d8:	mov	r3, r6
   131dc:	sub	r7, r7, #1
   131e0:	cmp	r3, r7
   131e4:	blt	1327c <table_remove_row@@Base+0xdc>
   131e8:	ldr	r3, [r4, #20]
   131ec:	ldr	r2, [r4, #24]
   131f0:	sub	r3, r3, #1
   131f4:	udiv	r1, r3, r2
   131f8:	str	r3, [r4, #20]
   131fc:	mls	r3, r2, r1, r3
   13200:	cmp	r3, #0
   13204:	bne	13224 <table_remove_row@@Base+0x84>
   13208:	ldr	r0, [r4, #16]
   1320c:	ldr	r1, [r4, #28]
   13210:	sub	r1, r1, r2
   13214:	str	r1, [r4, #28]
   13218:	lsl	r1, r1, #2
   1321c:	bl	11adc <realloc@plt>
   13220:	str	r0, [r4, #16]
   13224:	mov	r0, r4
   13228:	mov	r3, #4
   1322c:	mvn	r2, #0
   13230:	mov	r1, r6
   13234:	bl	12504 <table_notify@@Base>
   13238:	mov	r0, #0
   1323c:	pop	{r4, r5, r6, r7, r8, pc}
   13240:	mov	r1, r5
   13244:	mov	r0, r4
   13248:	bl	12634 <table_get_column_data_type@@Base>
   1324c:	cmp	r0, #23
   13250:	beq	13274 <table_remove_row@@Base+0xd4>
   13254:	mov	r2, r5
   13258:	mov	r1, r6
   1325c:	mov	r0, r4
   13260:	bl	140f0 <table_get_cell_ptr@@Base>
   13264:	ldr	r0, [r0]
   13268:	cmp	r0, #0
   1326c:	beq	13274 <table_remove_row@@Base+0xd4>
   13270:	bl	11ac4 <free@plt>
   13274:	add	r5, r5, #1
   13278:	b	131bc <table_remove_row@@Base+0x1c>
   1327c:	ldr	r2, [r4, #16]
   13280:	add	r1, r2, r3, lsl #2
   13284:	ldr	r1, [r1, #4]
   13288:	str	r1, [r2, r3, lsl #2]
   1328c:	add	r3, r3, #1
   13290:	b	131e0 <table_remove_row@@Base+0x40>

00013294 <table_get_row_ptr@@Base>:
   13294:	ldr	r0, [r0, #16]
   13298:	add	r0, r0, r1, lsl #2
   1329c:	bx	lr

000132a0 <table_set_row_ptr@@Base>:
   132a0:	ldr	r2, [r2]
   132a4:	ldr	r3, [r0, #16]
   132a8:	str	r2, [r3, r1, lsl #2]
   132ac:	bx	lr

000132b0 <table_set@@Base>:
   132b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   132b4:	mov	r6, r0
   132b8:	mov	r8, r1
   132bc:	mov	r7, r2
   132c0:	mov	r5, r3
   132c4:	ldr	r9, [sp, #32]
   132c8:	bl	140f0 <table_get_cell_ptr@@Base>
   132cc:	mov	r4, r0
   132d0:	mov	r1, r7
   132d4:	mov	r0, r6
   132d8:	bl	128b4 <table_get_col_ptr@@Base>
   132dc:	cmp	r9, #23
   132e0:	ldrls	pc, [pc, r9, lsl #2]
   132e4:	b	13434 <table_set@@Base+0x184>
   132e8:	andeq	r3, r1, r4, lsl #7
   132ec:	ldrdeq	r3, [r1], -r8
   132f0:	andeq	r3, r1, r4, ror #7
   132f4:	strdeq	r3, [r1], -r0
   132f8:	strdeq	r3, [r1], -ip
   132fc:	andeq	r3, r1, ip, lsr r4
   13300:	andeq	r3, r1, r8, asr #8
   13304:	andeq	r3, r1, r4, asr r4
   13308:	andeq	r3, r1, r0, ror #8
   1330c:	andeq	r3, r1, r0, lsr #9
   13310:	andeq	r3, r1, r0, asr #9
   13314:	andeq	r3, r1, ip, asr #9
   13318:	ldrdeq	r3, [r1], -r8
   1331c:	andeq	r3, r1, r4, ror #9
   13320:	strdeq	r3, [r1], -r0
   13324:	strdeq	r3, [r1], -ip
   13328:	andeq	r3, r1, r8, lsl #10
   1332c:	andeq	r3, r1, r4, lsl r5
   13330:	andeq	r3, r1, r0, lsr #10
   13334:	andeq	r3, r1, r4, ror #10
   13338:	andeq	r3, r1, r0, ror r5
   1333c:	andeq	r3, r1, ip, lsr #10
   13340:	andeq	r3, r1, r8, asr #6
   13344:	andeq	r3, r1, ip, ror r5
   13348:	ldr	r3, [r0, #4]
   1334c:	cmp	r3, #22
   13350:	bne	13434 <table_set@@Base+0x184>
   13354:	ldr	r3, [r4]
   13358:	cmp	r3, #0
   1335c:	bne	1336c <table_set@@Base+0xbc>
   13360:	mov	r0, #1
   13364:	bl	11af4 <malloc@plt>
   13368:	str	r0, [r4]
   1336c:	ldr	r3, [r4]
   13370:	cmp	r3, #0
   13374:	ldrbne	r2, [r5]
   13378:	strbne	r2, [r3]
   1337c:	bne	133bc <table_set@@Base+0x10c>
   13380:	b	13434 <table_set@@Base+0x184>
   13384:	ldr	r3, [r0, #4]
   13388:	cmp	r3, #0
   1338c:	bne	13434 <table_set@@Base+0x184>
   13390:	ldr	r3, [r4]
   13394:	cmp	r3, #0
   13398:	bne	133a8 <table_set@@Base+0xf8>
   1339c:	mov	r0, #4
   133a0:	bl	11af4 <malloc@plt>
   133a4:	str	r0, [r4]
   133a8:	ldr	r3, [r4]
   133ac:	cmp	r3, #0
   133b0:	ldrne	r2, [r5]
   133b4:	strne	r2, [r3]
   133b8:	beq	13434 <table_set@@Base+0x184>
   133bc:	mov	r0, r6
   133c0:	mov	r3, #1
   133c4:	mov	r2, r7
   133c8:	mov	r1, r8
   133cc:	bl	12504 <table_notify@@Base>
   133d0:	mov	r0, #0
   133d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133d8:	ldr	r3, [r0, #4]
   133dc:	cmp	r3, #1
   133e0:	b	1338c <table_set@@Base+0xdc>
   133e4:	ldr	r3, [r0, #4]
   133e8:	cmp	r3, #2
   133ec:	b	13350 <table_set@@Base+0xa0>
   133f0:	ldr	r3, [r0, #4]
   133f4:	cmp	r3, #3
   133f8:	b	13350 <table_set@@Base+0xa0>
   133fc:	ldr	r3, [r0, #4]
   13400:	cmp	r3, #4
   13404:	bne	13434 <table_set@@Base+0x184>
   13408:	ldr	r3, [r4]
   1340c:	cmp	r3, #0
   13410:	bne	13420 <table_set@@Base+0x170>
   13414:	mov	r0, #2
   13418:	bl	11af4 <malloc@plt>
   1341c:	str	r0, [r4]
   13420:	ldr	r3, [r4]
   13424:	cmp	r3, #0
   13428:	ldrhne	r2, [r5]
   1342c:	strhne	r2, [r3]
   13430:	bne	133bc <table_set@@Base+0x10c>
   13434:	mvn	r0, #0
   13438:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1343c:	ldr	r3, [r0, #4]
   13440:	cmp	r3, #5
   13444:	b	13404 <table_set@@Base+0x154>
   13448:	ldr	r3, [r0, #4]
   1344c:	cmp	r3, #6
   13450:	b	1338c <table_set@@Base+0xdc>
   13454:	ldr	r3, [r0, #4]
   13458:	cmp	r3, #7
   1345c:	b	1338c <table_set@@Base+0xdc>
   13460:	ldr	r0, [r0, #4]
   13464:	cmp	r0, #8
   13468:	bne	13434 <table_set@@Base+0x184>
   1346c:	ldr	r3, [r4]
   13470:	cmp	r3, #0
   13474:	bne	13480 <table_set@@Base+0x1d0>
   13478:	bl	11af4 <malloc@plt>
   1347c:	str	r0, [r4]
   13480:	ldr	r3, [r4]
   13484:	cmp	r3, #0
   13488:	beq	13434 <table_set@@Base+0x184>
   1348c:	ldr	r2, [r5]
   13490:	str	r2, [r3]
   13494:	ldr	r2, [r5, #4]
   13498:	str	r2, [r3, #4]
   1349c:	b	133bc <table_set@@Base+0x10c>
   134a0:	ldr	r3, [r0, #4]
   134a4:	cmp	r3, #9
   134a8:	bne	13434 <table_set@@Base+0x184>
   134ac:	ldr	r3, [r4]
   134b0:	cmp	r3, #0
   134b4:	bne	13480 <table_set@@Base+0x1d0>
   134b8:	mov	r0, #8
   134bc:	b	13478 <table_set@@Base+0x1c8>
   134c0:	ldr	r3, [r0, #4]
   134c4:	cmp	r3, #10
   134c8:	b	13404 <table_set@@Base+0x154>
   134cc:	ldr	r3, [r0, #4]
   134d0:	cmp	r3, #11
   134d4:	b	13404 <table_set@@Base+0x154>
   134d8:	ldr	r3, [r0, #4]
   134dc:	cmp	r3, #12
   134e0:	b	1338c <table_set@@Base+0xdc>
   134e4:	ldr	r3, [r0, #4]
   134e8:	cmp	r3, #13
   134ec:	b	1338c <table_set@@Base+0xdc>
   134f0:	ldr	r3, [r0, #4]
   134f4:	cmp	r3, #14
   134f8:	b	134a8 <table_set@@Base+0x1f8>
   134fc:	ldr	r3, [r0, #4]
   13500:	cmp	r3, #15
   13504:	b	134a8 <table_set@@Base+0x1f8>
   13508:	ldr	r3, [r0, #4]
   1350c:	cmp	r3, #16
   13510:	b	1338c <table_set@@Base+0xdc>
   13514:	ldr	r3, [r0, #4]
   13518:	cmp	r3, #17
   1351c:	b	134a8 <table_set@@Base+0x1f8>
   13520:	ldr	r3, [r0, #4]
   13524:	cmp	r3, #18
   13528:	b	134a8 <table_set@@Base+0x1f8>
   1352c:	ldr	r3, [r0, #4]
   13530:	cmp	r3, #21
   13534:	bne	13434 <table_set@@Base+0x184>
   13538:	mov	r0, r5
   1353c:	bl	11b18 <strlen@plt>
   13540:	add	r1, r0, #1
   13544:	ldr	r0, [r4]
   13548:	bl	11adc <realloc@plt>
   1354c:	cmp	r0, #0
   13550:	str	r0, [r4]
   13554:	beq	13434 <table_set@@Base+0x184>
   13558:	mov	r1, r5
   1355c:	bl	11ae8 <strcpy@plt>
   13560:	b	133bc <table_set@@Base+0x10c>
   13564:	ldr	r3, [r0, #4]
   13568:	cmp	r3, #19
   1356c:	b	13350 <table_set@@Base+0xa0>
   13570:	ldr	r3, [r0, #4]
   13574:	cmp	r3, #20
   13578:	b	13350 <table_set@@Base+0xa0>
   1357c:	ldr	r3, [r0, #4]
   13580:	cmp	r3, #23
   13584:	bne	13434 <table_set@@Base+0x184>
   13588:	str	r5, [r4]
   1358c:	b	133bc <table_set@@Base+0x10c>

00013590 <table_set_bool@@Base>:
   13590:	push	{r0, r1, r2, r3, r4, lr}
   13594:	strb	r3, [sp, #15]
   13598:	mov	r3, #22
   1359c:	str	r3, [sp]
   135a0:	add	r3, sp, #15
   135a4:	bl	132b0 <table_set@@Base>
   135a8:	add	sp, sp, #20
   135ac:	pop	{pc}		; (ldr pc, [sp], #4)

000135b0 <table_set_int@@Base>:
   135b0:	push	{r0, r1, r2, r3, r4, lr}
   135b4:	str	r3, [sp, #12]
   135b8:	mov	r3, #0
   135bc:	str	r3, [sp]
   135c0:	add	r3, sp, #12
   135c4:	bl	132b0 <table_set@@Base>
   135c8:	add	sp, sp, #20
   135cc:	pop	{pc}		; (ldr pc, [sp], #4)

000135d0 <table_set_uint@@Base>:
   135d0:	push	{r0, r1, r2, r3, r4, lr}
   135d4:	str	r3, [sp, #12]
   135d8:	mov	r3, #1
   135dc:	str	r3, [sp]
   135e0:	add	r3, sp, #12
   135e4:	bl	132b0 <table_set@@Base>
   135e8:	add	sp, sp, #20
   135ec:	pop	{pc}		; (ldr pc, [sp], #4)

000135f0 <table_set_int8@@Base>:
   135f0:	push	{r0, r1, r2, r3, r4, lr}
   135f4:	strb	r3, [sp, #15]
   135f8:	mov	r3, #2
   135fc:	str	r3, [sp]
   13600:	add	r3, sp, #15
   13604:	bl	132b0 <table_set@@Base>
   13608:	add	sp, sp, #20
   1360c:	pop	{pc}		; (ldr pc, [sp], #4)

00013610 <table_set_uint8@@Base>:
   13610:	push	{r0, r1, r2, r3, r4, lr}
   13614:	strb	r3, [sp, #15]
   13618:	mov	r3, #3
   1361c:	str	r3, [sp]
   13620:	add	r3, sp, #15
   13624:	bl	132b0 <table_set@@Base>
   13628:	add	sp, sp, #20
   1362c:	pop	{pc}		; (ldr pc, [sp], #4)

00013630 <table_set_int16@@Base>:
   13630:	push	{r0, r1, r2, r3, r4, lr}
   13634:	strh	r3, [sp, #14]
   13638:	mov	r3, #4
   1363c:	str	r3, [sp]
   13640:	add	r3, sp, #14
   13644:	bl	132b0 <table_set@@Base>
   13648:	add	sp, sp, #20
   1364c:	pop	{pc}		; (ldr pc, [sp], #4)

00013650 <table_set_uint16@@Base>:
   13650:	push	{r0, r1, r2, r3, r4, lr}
   13654:	strh	r3, [sp, #14]
   13658:	mov	r3, #5
   1365c:	str	r3, [sp]
   13660:	add	r3, sp, #14
   13664:	bl	132b0 <table_set@@Base>
   13668:	add	sp, sp, #20
   1366c:	pop	{pc}		; (ldr pc, [sp], #4)

00013670 <table_set_int32@@Base>:
   13670:	push	{r0, r1, r2, r3, r4, lr}
   13674:	str	r3, [sp, #12]
   13678:	mov	r3, #6
   1367c:	str	r3, [sp]
   13680:	add	r3, sp, #12
   13684:	bl	132b0 <table_set@@Base>
   13688:	add	sp, sp, #20
   1368c:	pop	{pc}		; (ldr pc, [sp], #4)

00013690 <table_set_uint32@@Base>:
   13690:	push	{r0, r1, r2, r3, r4, lr}
   13694:	str	r3, [sp, #12]
   13698:	mov	r3, #7
   1369c:	str	r3, [sp]
   136a0:	add	r3, sp, #12
   136a4:	bl	132b0 <table_set@@Base>
   136a8:	add	sp, sp, #20
   136ac:	pop	{pc}		; (ldr pc, [sp], #4)

000136b0 <table_set_int64@@Base>:
   136b0:	mov	r3, #8
   136b4:	push	{r0, r1, r2, lr}
   136b8:	str	r3, [sp]
   136bc:	add	r3, sp, #16
   136c0:	bl	132b0 <table_set@@Base>
   136c4:	add	sp, sp, #12
   136c8:	pop	{pc}		; (ldr pc, [sp], #4)

000136cc <table_set_uint64@@Base>:
   136cc:	mov	r3, #9
   136d0:	push	{r0, r1, r2, lr}
   136d4:	str	r3, [sp]
   136d8:	add	r3, sp, #16
   136dc:	bl	132b0 <table_set@@Base>
   136e0:	add	sp, sp, #12
   136e4:	pop	{pc}		; (ldr pc, [sp], #4)

000136e8 <table_set_short@@Base>:
   136e8:	push	{r0, r1, r2, r3, r4, lr}
   136ec:	strh	r3, [sp, #14]
   136f0:	mov	r3, #10
   136f4:	str	r3, [sp]
   136f8:	add	r3, sp, #14
   136fc:	bl	132b0 <table_set@@Base>
   13700:	add	sp, sp, #20
   13704:	pop	{pc}		; (ldr pc, [sp], #4)

00013708 <table_set_ushort@@Base>:
   13708:	push	{r0, r1, r2, r3, r4, lr}
   1370c:	strh	r3, [sp, #14]
   13710:	mov	r3, #11
   13714:	str	r3, [sp]
   13718:	add	r3, sp, #14
   1371c:	bl	132b0 <table_set@@Base>
   13720:	add	sp, sp, #20
   13724:	pop	{pc}		; (ldr pc, [sp], #4)

00013728 <table_set_long@@Base>:
   13728:	push	{r0, r1, r2, r3, r4, lr}
   1372c:	str	r3, [sp, #12]
   13730:	mov	r3, #12
   13734:	str	r3, [sp]
   13738:	add	r3, sp, r3
   1373c:	bl	132b0 <table_set@@Base>
   13740:	add	sp, sp, #20
   13744:	pop	{pc}		; (ldr pc, [sp], #4)

00013748 <table_set_ulong@@Base>:
   13748:	push	{r0, r1, r2, r3, r4, lr}
   1374c:	str	r3, [sp, #12]
   13750:	mov	r3, #13
   13754:	str	r3, [sp]
   13758:	add	r3, sp, #12
   1375c:	bl	132b0 <table_set@@Base>
   13760:	add	sp, sp, #20
   13764:	pop	{pc}		; (ldr pc, [sp], #4)

00013768 <table_set_llong@@Base>:
   13768:	mov	r3, #14
   1376c:	push	{r0, r1, r2, lr}
   13770:	str	r3, [sp]
   13774:	add	r3, sp, #16
   13778:	bl	132b0 <table_set@@Base>
   1377c:	add	sp, sp, #12
   13780:	pop	{pc}		; (ldr pc, [sp], #4)

00013784 <table_set_ullong@@Base>:
   13784:	mov	r3, #15
   13788:	push	{r0, r1, r2, lr}
   1378c:	str	r3, [sp]
   13790:	add	r3, sp, #16
   13794:	bl	132b0 <table_set@@Base>
   13798:	add	sp, sp, #12
   1379c:	pop	{pc}		; (ldr pc, [sp], #4)

000137a0 <table_set_float@@Base>:
   137a0:	push	{r0, r1, r2, r3, r4, lr}
   137a4:	mov	r3, #16
   137a8:	str	r3, [sp]
   137ac:	add	r3, sp, #12
   137b0:	vstr	s0, [sp, #12]
   137b4:	bl	132b0 <table_set@@Base>
   137b8:	add	sp, sp, #20
   137bc:	pop	{pc}		; (ldr pc, [sp], #4)

000137c0 <table_set_double@@Base>:
   137c0:	push	{r0, r1, r2, r3, r4, lr}
   137c4:	mov	r3, #17
   137c8:	str	r3, [sp]
   137cc:	add	r3, sp, #8
   137d0:	vstr	d0, [sp, #8]
   137d4:	bl	132b0 <table_set@@Base>
   137d8:	add	sp, sp, #20
   137dc:	pop	{pc}		; (ldr pc, [sp], #4)

000137e0 <table_set_ldouble@@Base>:
   137e0:	push	{r0, r1, r2, r3, r4, lr}
   137e4:	mov	r3, #18
   137e8:	str	r3, [sp]
   137ec:	add	r3, sp, #8
   137f0:	vstr	d0, [sp, #8]
   137f4:	bl	132b0 <table_set@@Base>
   137f8:	add	sp, sp, #20
   137fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013800 <table_set_string@@Base>:
   13800:	mov	ip, #21
   13804:	push	{r0, r1, r2, lr}
   13808:	str	ip, [sp]
   1380c:	bl	132b0 <table_set@@Base>
   13810:	add	sp, sp, #12
   13814:	pop	{pc}		; (ldr pc, [sp], #4)

00013818 <table_set_char@@Base>:
   13818:	push	{r0, r1, r2, r3, r4, lr}
   1381c:	strb	r3, [sp, #15]
   13820:	mov	r3, #19
   13824:	str	r3, [sp]
   13828:	add	r3, sp, #15
   1382c:	bl	132b0 <table_set@@Base>
   13830:	add	sp, sp, #20
   13834:	pop	{pc}		; (ldr pc, [sp], #4)

00013838 <table_set_uchar@@Base>:
   13838:	push	{r0, r1, r2, r3, r4, lr}
   1383c:	strb	r3, [sp, #15]
   13840:	mov	r3, #20
   13844:	str	r3, [sp]
   13848:	add	r3, sp, #15
   1384c:	bl	132b0 <table_set@@Base>
   13850:	add	sp, sp, #20
   13854:	pop	{pc}		; (ldr pc, [sp], #4)

00013858 <table_set_ptr@@Base>:
   13858:	mov	ip, #23
   1385c:	push	{r0, r1, r2, lr}
   13860:	str	ip, [sp]
   13864:	bl	132b0 <table_set@@Base>
   13868:	add	sp, sp, #12
   1386c:	pop	{pc}		; (ldr pc, [sp], #4)

00013870 <table_cell_to_buffer@@Base>:
   13870:	push	{r4, r5, r6, r7, lr}
   13874:	sub	sp, sp, #20
   13878:	mov	r7, r1
   1387c:	mov	r1, r2
   13880:	mov	r6, r0
   13884:	mov	r4, r3
   13888:	str	r2, [sp, #12]
   1388c:	ldr	r5, [sp, #40]	; 0x28
   13890:	bl	12634 <table_get_column_data_type@@Base>
   13894:	ldr	r2, [sp, #12]
   13898:	cmp	r0, #23
   1389c:	ldrls	pc, [pc, r0, lsl #2]
   138a0:	b	139c0 <table_cell_to_buffer@@Base+0x150>
   138a4:	andeq	r3, r1, r4, lsl #18
   138a8:	andeq	r3, r1, ip, lsl r9
   138ac:	andeq	r3, r1, r0, asr #18
   138b0:	andeq	r3, r1, r0, asr r9
   138b4:	andeq	r3, r1, r0, ror #18
   138b8:	andeq	r3, r1, r0, ror r9
   138bc:	andeq	r3, r1, r0, lsl #19
   138c0:	muleq	r1, r0, r9
   138c4:	andeq	r3, r1, r0, lsr #19
   138c8:	andeq	r3, r1, ip, asr #19
   138cc:	andeq	r3, r1, r4, ror #19
   138d0:	strdeq	r3, [r1], -ip
   138d4:	andeq	r3, r1, r4, lsl sl
   138d8:	andeq	r3, r1, ip, lsr #20
   138dc:	andeq	r3, r1, r4, asr #20
   138e0:	andeq	r3, r1, r4, asr sl
   138e4:	andeq	r3, r1, ip, ror sl
   138e8:	andeq	r3, r1, r4, lsr #21
   138ec:			; <UNDEFINED> instruction: 0x00013abc
   138f0:	andeq	r3, r1, r4, ror #21
   138f4:	strdeq	r3, [r1], -ip
   138f8:	andeq	r3, r1, r4, ror #20
   138fc:	ldrdeq	r3, [r1], -r4
   13900:	andeq	r3, r1, ip, lsl #22
   13904:	mov	r1, r7
   13908:	mov	r0, r6
   1390c:	bl	12f90 <table_get_int@@Base>
   13910:	mov	r3, r0
   13914:	ldr	r2, [pc, #520]	; 13b24 <table_cell_to_buffer@@Base+0x2b4>
   13918:	b	13930 <table_cell_to_buffer@@Base+0xc0>
   1391c:	mov	r1, r7
   13920:	mov	r0, r6
   13924:	bl	12fa0 <table_get_uint@@Base>
   13928:	ldr	r2, [pc, #504]	; 13b28 <table_cell_to_buffer@@Base+0x2b8>
   1392c:	mov	r3, r0
   13930:	mov	r1, r5
   13934:	mov	r0, r4
   13938:	bl	11b30 <snprintf@plt>
   1393c:	b	139c0 <table_cell_to_buffer@@Base+0x150>
   13940:	mov	r1, r7
   13944:	mov	r0, r6
   13948:	bl	12fb0 <table_get_int8@@Base>
   1394c:	b	13910 <table_cell_to_buffer@@Base+0xa0>
   13950:	mov	r1, r7
   13954:	mov	r0, r6
   13958:	bl	12fc0 <table_get_uint8@@Base>
   1395c:	b	13928 <table_cell_to_buffer@@Base+0xb8>
   13960:	mov	r1, r7
   13964:	mov	r0, r6
   13968:	bl	12fd0 <table_get_int16@@Base>
   1396c:	b	13910 <table_cell_to_buffer@@Base+0xa0>
   13970:	mov	r1, r7
   13974:	mov	r0, r6
   13978:	bl	12fe0 <table_get_uint16@@Base>
   1397c:	b	13928 <table_cell_to_buffer@@Base+0xb8>
   13980:	mov	r1, r7
   13984:	mov	r0, r6
   13988:	bl	12ff0 <table_get_int32@@Base>
   1398c:	b	13910 <table_cell_to_buffer@@Base+0xa0>
   13990:	mov	r1, r7
   13994:	mov	r0, r6
   13998:	bl	12ff4 <table_get_uint32@@Base>
   1399c:	b	13928 <table_cell_to_buffer@@Base+0xb8>
   139a0:	mov	r1, r7
   139a4:	mov	r0, r6
   139a8:	bl	12ff8 <table_get_int64@@Base>
   139ac:	ldr	r2, [pc, #376]	; 13b2c <table_cell_to_buffer@@Base+0x2bc>
   139b0:	strd	r0, [sp]
   139b4:	mov	r1, r5
   139b8:	mov	r0, r4
   139bc:	bl	11b30 <snprintf@plt>
   139c0:	mov	r0, #0
   139c4:	add	sp, sp, #20
   139c8:	pop	{r4, r5, r6, r7, pc}
   139cc:	mov	r1, r7
   139d0:	mov	r0, r6
   139d4:	bl	13008 <table_get_uint64@@Base>
   139d8:	ldr	r2, [pc, #336]	; 13b30 <table_cell_to_buffer@@Base+0x2c0>
   139dc:	strd	r0, [sp]
   139e0:	b	139b4 <table_cell_to_buffer@@Base+0x144>
   139e4:	mov	r1, r7
   139e8:	mov	r0, r6
   139ec:	bl	13018 <table_get_short@@Base>
   139f0:	mov	r3, r0
   139f4:	ldr	r2, [pc, #312]	; 13b34 <table_cell_to_buffer@@Base+0x2c4>
   139f8:	b	13930 <table_cell_to_buffer@@Base+0xc0>
   139fc:	mov	r1, r7
   13a00:	mov	r0, r6
   13a04:	bl	1301c <table_get_ushort@@Base>
   13a08:	mov	r3, r0
   13a0c:	ldr	r2, [pc, #292]	; 13b38 <table_cell_to_buffer@@Base+0x2c8>
   13a10:	b	13930 <table_cell_to_buffer@@Base+0xc0>
   13a14:	mov	r1, r7
   13a18:	mov	r0, r6
   13a1c:	bl	13020 <table_get_long@@Base>
   13a20:	mov	r3, r0
   13a24:	ldr	r2, [pc, #272]	; 13b3c <table_cell_to_buffer@@Base+0x2cc>
   13a28:	b	13930 <table_cell_to_buffer@@Base+0xc0>
   13a2c:	mov	r1, r7
   13a30:	mov	r0, r6
   13a34:	bl	13030 <table_get_ulong@@Base>
   13a38:	mov	r3, r0
   13a3c:	ldr	r2, [pc, #252]	; 13b40 <table_cell_to_buffer@@Base+0x2d0>
   13a40:	b	13930 <table_cell_to_buffer@@Base+0xc0>
   13a44:	mov	r1, r7
   13a48:	mov	r0, r6
   13a4c:	bl	13040 <table_get_llong@@Base>
   13a50:	b	139ac <table_cell_to_buffer@@Base+0x13c>
   13a54:	mov	r1, r7
   13a58:	mov	r0, r6
   13a5c:	bl	13044 <table_get_ullong@@Base>
   13a60:	b	139d8 <table_cell_to_buffer@@Base+0x168>
   13a64:	mov	r1, r7
   13a68:	mov	r0, r6
   13a6c:	bl	13080 <table_get_string@@Base>
   13a70:	mov	r3, r0
   13a74:	ldr	r2, [pc, #200]	; 13b44 <table_cell_to_buffer@@Base+0x2d4>
   13a78:	b	13930 <table_cell_to_buffer@@Base+0xc0>
   13a7c:	mov	r1, r7
   13a80:	mov	r0, r6
   13a84:	bl	13048 <table_get_float@@Base>
   13a88:	vcvt.f64.f32	d0, s0
   13a8c:	ldr	r2, [pc, #180]	; 13b48 <table_cell_to_buffer@@Base+0x2d8>
   13a90:	vstr	d0, [sp]
   13a94:	mov	r1, r5
   13a98:	mov	r0, r4
   13a9c:	bl	11b30 <snprintf@plt>
   13aa0:	b	139c0 <table_cell_to_buffer@@Base+0x150>
   13aa4:	mov	r1, r7
   13aa8:	mov	r0, r6
   13aac:	bl	13058 <table_get_double@@Base>
   13ab0:	ldr	r2, [pc, #148]	; 13b4c <table_cell_to_buffer@@Base+0x2dc>
   13ab4:	vstr	d0, [sp]
   13ab8:	b	13a94 <table_cell_to_buffer@@Base+0x224>
   13abc:	mov	r1, r7
   13ac0:	mov	r0, r6
   13ac4:	bl	13068 <table_get_ldouble@@Base>
   13ac8:	ldr	r2, [pc, #128]	; 13b50 <table_cell_to_buffer@@Base+0x2e0>
   13acc:	vstr	d0, [sp]
   13ad0:	b	13a94 <table_cell_to_buffer@@Base+0x224>
   13ad4:	mov	r1, r7
   13ad8:	mov	r0, r6
   13adc:	bl	12f80 <table_get_bool@@Base>
   13ae0:	b	13910 <table_cell_to_buffer@@Base+0xa0>
   13ae4:	mov	r1, r7
   13ae8:	mov	r0, r6
   13aec:	bl	13078 <table_get_char@@Base>
   13af0:	mov	r3, r0
   13af4:	ldr	r2, [pc, #88]	; 13b54 <table_cell_to_buffer@@Base+0x2e4>
   13af8:	b	13930 <table_cell_to_buffer@@Base+0xc0>
   13afc:	mov	r1, r7
   13b00:	mov	r0, r6
   13b04:	bl	1307c <table_get_uchar@@Base>
   13b08:	b	13af0 <table_cell_to_buffer@@Base+0x280>
   13b0c:	mov	r1, r7
   13b10:	mov	r0, r6
   13b14:	bl	13084 <table_get_ptr@@Base>
   13b18:	mov	r3, r0
   13b1c:	ldr	r2, [pc, #52]	; 13b58 <table_cell_to_buffer@@Base+0x2e8>
   13b20:	b	13930 <table_cell_to_buffer@@Base+0xc0>
   13b24:	andeq	r4, r1, r4, lsr r2
   13b28:	muleq	r1, r8, r2
   13b2c:	muleq	r1, fp, r2
   13b30:	andeq	r4, r1, r0, lsr #5
   13b34:	andeq	r4, r1, r5, lsr #5
   13b38:	andeq	r4, r1, r9, lsr #5
   13b3c:	andeq	r4, r1, sp, lsr #5
   13b40:			; <UNDEFINED> instruction: 0x000142b1
   13b44:			; <UNDEFINED> instruction: 0x000142b5
   13b48:			; <UNDEFINED> instruction: 0x000142b8
   13b4c:			; <UNDEFINED> instruction: 0x000142bb
   13b50:			; <UNDEFINED> instruction: 0x000142bf
   13b54:	andeq	r4, r1, r3, asr #5
   13b58:	andeq	r4, r1, r6, asr #5

00013b5c <table_cell_from_buffer@@Base>:
   13b5c:	push	{r4, r5, r6, r7, lr}
   13b60:	mov	r7, r1
   13b64:	sub	sp, sp, #268	; 0x10c
   13b68:	mov	r1, r2
   13b6c:	mov	r6, r0
   13b70:	mov	r5, r2
   13b74:	mov	r4, r3
   13b78:	bl	12634 <table_get_column_data_type@@Base>
   13b7c:	cmp	r0, #23
   13b80:	ldrls	pc, [pc, r0, lsl #2]
   13b84:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13b88:	andeq	r3, r1, r8, ror #23
   13b8c:	andeq	r3, r1, ip, lsl ip
   13b90:	andeq	r3, r1, ip, asr #24
   13b94:	andeq	r3, r1, ip, ror ip
   13b98:	andeq	r3, r1, ip, lsr #25
   13b9c:	ldrdeq	r3, [r1], -ip
   13ba0:	andeq	r3, r1, ip, lsl #26
   13ba4:	andeq	r3, r1, ip, lsr sp
   13ba8:	andeq	r3, r1, ip, ror #26
   13bac:	andeq	r3, r1, r0, lsr #27
   13bb0:	ldrdeq	r3, [r1], -r4
   13bb4:	andeq	r3, r1, r4, lsl #28
   13bb8:	andeq	r3, r1, r4, lsr lr
   13bbc:	andeq	r3, r1, r4, ror #28
   13bc0:	muleq	r1, r4, lr
   13bc4:	andeq	r3, r1, r8, asr #29
   13bc8:	andeq	r3, r1, ip, lsr #30
   13bcc:	andeq	r3, r1, ip, asr pc
   13bd0:	andeq	r3, r1, ip, lsl #31
   13bd4:	andeq	r4, r1, r8, lsl r0
   13bd8:	andeq	r4, r1, r8, asr #32
   13bdc:	strdeq	r3, [r1], -ip
   13be0:			; <UNDEFINED> instruction: 0x00013fbc
   13be4:	andeq	r4, r1, r8, ror r0
   13be8:	add	r2, sp, #8
   13bec:	ldr	r1, [pc, #1212]	; 140b0 <table_cell_from_buffer@@Base+0x554>
   13bf0:	mov	r0, r4
   13bf4:	bl	11b3c <__isoc99_sscanf@plt>
   13bf8:	cmp	r0, #1
   13bfc:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13c00:	mov	r2, r5
   13c04:	mov	r1, r7
   13c08:	ldr	r3, [sp, #8]
   13c0c:	mov	r0, r6
   13c10:	bl	135b0 <table_set_int@@Base>
   13c14:	mov	r4, #0
   13c18:	b	1400c <table_cell_from_buffer@@Base+0x4b0>
   13c1c:	add	r2, sp, #8
   13c20:	ldr	r1, [pc, #1164]	; 140b4 <table_cell_from_buffer@@Base+0x558>
   13c24:	mov	r0, r4
   13c28:	bl	11b3c <__isoc99_sscanf@plt>
   13c2c:	cmp	r0, #1
   13c30:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13c34:	mov	r2, r5
   13c38:	mov	r1, r7
   13c3c:	ldr	r3, [sp, #8]
   13c40:	mov	r0, r6
   13c44:	bl	135d0 <table_set_uint@@Base>
   13c48:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13c4c:	add	r2, sp, #8
   13c50:	ldr	r1, [pc, #1120]	; 140b8 <table_cell_from_buffer@@Base+0x55c>
   13c54:	mov	r0, r4
   13c58:	bl	11b3c <__isoc99_sscanf@plt>
   13c5c:	cmp	r0, #1
   13c60:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13c64:	ldrsb	r3, [sp, #8]
   13c68:	mov	r2, r5
   13c6c:	mov	r1, r7
   13c70:	mov	r0, r6
   13c74:	bl	135f0 <table_set_int8@@Base>
   13c78:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13c7c:	add	r2, sp, #8
   13c80:	ldr	r1, [pc, #1076]	; 140bc <table_cell_from_buffer@@Base+0x560>
   13c84:	mov	r0, r4
   13c88:	bl	11b3c <__isoc99_sscanf@plt>
   13c8c:	cmp	r0, #1
   13c90:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13c94:	ldrb	r3, [sp, #8]
   13c98:	mov	r2, r5
   13c9c:	mov	r1, r7
   13ca0:	mov	r0, r6
   13ca4:	bl	13610 <table_set_uint8@@Base>
   13ca8:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13cac:	add	r2, sp, #8
   13cb0:	ldr	r1, [pc, #1032]	; 140c0 <table_cell_from_buffer@@Base+0x564>
   13cb4:	mov	r0, r4
   13cb8:	bl	11b3c <__isoc99_sscanf@plt>
   13cbc:	cmp	r0, #1
   13cc0:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13cc4:	ldrsh	r3, [sp, #8]
   13cc8:	mov	r2, r5
   13ccc:	mov	r1, r7
   13cd0:	mov	r0, r6
   13cd4:	bl	13630 <table_set_int16@@Base>
   13cd8:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13cdc:	add	r2, sp, #8
   13ce0:	ldr	r1, [pc, #988]	; 140c4 <table_cell_from_buffer@@Base+0x568>
   13ce4:	mov	r0, r4
   13ce8:	bl	11b3c <__isoc99_sscanf@plt>
   13cec:	cmp	r0, #1
   13cf0:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13cf4:	ldrh	r3, [sp, #8]
   13cf8:	mov	r2, r5
   13cfc:	mov	r1, r7
   13d00:	mov	r0, r6
   13d04:	bl	13650 <table_set_uint16@@Base>
   13d08:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13d0c:	add	r2, sp, #8
   13d10:	ldr	r1, [pc, #920]	; 140b0 <table_cell_from_buffer@@Base+0x554>
   13d14:	mov	r0, r4
   13d18:	bl	11b3c <__isoc99_sscanf@plt>
   13d1c:	cmp	r0, #1
   13d20:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13d24:	mov	r2, r5
   13d28:	mov	r1, r7
   13d2c:	ldr	r3, [sp, #8]
   13d30:	mov	r0, r6
   13d34:	bl	13670 <table_set_int32@@Base>
   13d38:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13d3c:	add	r2, sp, #8
   13d40:	ldr	r1, [pc, #876]	; 140b4 <table_cell_from_buffer@@Base+0x558>
   13d44:	mov	r0, r4
   13d48:	bl	11b3c <__isoc99_sscanf@plt>
   13d4c:	cmp	r0, #1
   13d50:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13d54:	mov	r2, r5
   13d58:	mov	r1, r7
   13d5c:	ldr	r3, [sp, #8]
   13d60:	mov	r0, r6
   13d64:	bl	13690 <table_set_uint32@@Base>
   13d68:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13d6c:	add	r2, sp, #8
   13d70:	ldr	r1, [pc, #848]	; 140c8 <table_cell_from_buffer@@Base+0x56c>
   13d74:	mov	r0, r4
   13d78:	bl	11b3c <__isoc99_sscanf@plt>
   13d7c:	cmp	r0, #1
   13d80:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13d84:	ldrd	r2, [sp, #8]
   13d88:	mov	r1, r7
   13d8c:	mov	r0, r6
   13d90:	strd	r2, [sp]
   13d94:	mov	r2, r5
   13d98:	bl	136b0 <table_set_int64@@Base>
   13d9c:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13da0:	add	r2, sp, #8
   13da4:	ldr	r1, [pc, #800]	; 140cc <table_cell_from_buffer@@Base+0x570>
   13da8:	mov	r0, r4
   13dac:	bl	11b3c <__isoc99_sscanf@plt>
   13db0:	cmp	r0, #1
   13db4:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13db8:	ldrd	r2, [sp, #8]
   13dbc:	mov	r1, r7
   13dc0:	mov	r0, r6
   13dc4:	strd	r2, [sp]
   13dc8:	mov	r2, r5
   13dcc:	bl	136cc <table_set_uint64@@Base>
   13dd0:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13dd4:	add	r2, sp, #8
   13dd8:	ldr	r1, [pc, #736]	; 140c0 <table_cell_from_buffer@@Base+0x564>
   13ddc:	mov	r0, r4
   13de0:	bl	11b3c <__isoc99_sscanf@plt>
   13de4:	cmp	r0, #1
   13de8:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13dec:	ldrsh	r3, [sp, #8]
   13df0:	mov	r2, r5
   13df4:	mov	r1, r7
   13df8:	mov	r0, r6
   13dfc:	bl	136e8 <table_set_short@@Base>
   13e00:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13e04:	add	r2, sp, #8
   13e08:	ldr	r1, [pc, #692]	; 140c4 <table_cell_from_buffer@@Base+0x568>
   13e0c:	mov	r0, r4
   13e10:	bl	11b3c <__isoc99_sscanf@plt>
   13e14:	cmp	r0, #1
   13e18:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13e1c:	ldrh	r3, [sp, #8]
   13e20:	mov	r2, r5
   13e24:	mov	r1, r7
   13e28:	mov	r0, r6
   13e2c:	bl	13708 <table_set_ushort@@Base>
   13e30:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13e34:	add	r2, sp, #8
   13e38:	ldr	r1, [pc, #656]	; 140d0 <table_cell_from_buffer@@Base+0x574>
   13e3c:	mov	r0, r4
   13e40:	bl	11b3c <__isoc99_sscanf@plt>
   13e44:	cmp	r0, #1
   13e48:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13e4c:	mov	r2, r5
   13e50:	mov	r1, r7
   13e54:	ldr	r3, [sp, #8]
   13e58:	mov	r0, r6
   13e5c:	bl	13728 <table_set_long@@Base>
   13e60:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13e64:	add	r2, sp, #8
   13e68:	ldr	r1, [pc, #612]	; 140d4 <table_cell_from_buffer@@Base+0x578>
   13e6c:	mov	r0, r4
   13e70:	bl	11b3c <__isoc99_sscanf@plt>
   13e74:	cmp	r0, #1
   13e78:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13e7c:	mov	r2, r5
   13e80:	mov	r1, r7
   13e84:	ldr	r3, [sp, #8]
   13e88:	mov	r0, r6
   13e8c:	bl	13748 <table_set_ulong@@Base>
   13e90:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13e94:	add	r2, sp, #8
   13e98:	ldr	r1, [pc, #552]	; 140c8 <table_cell_from_buffer@@Base+0x56c>
   13e9c:	mov	r0, r4
   13ea0:	bl	11b3c <__isoc99_sscanf@plt>
   13ea4:	cmp	r0, #1
   13ea8:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13eac:	ldrd	r2, [sp, #8]
   13eb0:	mov	r1, r7
   13eb4:	mov	r0, r6
   13eb8:	strd	r2, [sp]
   13ebc:	mov	r2, r5
   13ec0:	bl	13768 <table_set_llong@@Base>
   13ec4:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13ec8:	add	r2, sp, #8
   13ecc:	ldr	r1, [pc, #504]	; 140cc <table_cell_from_buffer@@Base+0x570>
   13ed0:	mov	r0, r4
   13ed4:	bl	11b3c <__isoc99_sscanf@plt>
   13ed8:	cmp	r0, #1
   13edc:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13ee0:	ldrd	r2, [sp, #8]
   13ee4:	mov	r1, r7
   13ee8:	mov	r0, r6
   13eec:	strd	r2, [sp]
   13ef0:	mov	r2, r5
   13ef4:	bl	13784 <table_set_ullong@@Base>
   13ef8:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13efc:	add	r2, sp, #8
   13f00:	ldr	r1, [pc, #464]	; 140d8 <table_cell_from_buffer@@Base+0x57c>
   13f04:	mov	r0, r4
   13f08:	bl	11b3c <__isoc99_sscanf@plt>
   13f0c:	cmp	r0, #1
   13f10:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13f14:	add	r3, sp, #8
   13f18:	mov	r2, r5
   13f1c:	mov	r1, r7
   13f20:	mov	r0, r6
   13f24:	bl	13800 <table_set_string@@Base>
   13f28:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13f2c:	add	r2, sp, #8
   13f30:	ldr	r1, [pc, #420]	; 140dc <table_cell_from_buffer@@Base+0x580>
   13f34:	mov	r0, r4
   13f38:	bl	11b3c <__isoc99_sscanf@plt>
   13f3c:	cmp	r0, #1
   13f40:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13f44:	mov	r2, r5
   13f48:	mov	r1, r7
   13f4c:	vldr	s0, [sp, #8]
   13f50:	mov	r0, r6
   13f54:	bl	137a0 <table_set_float@@Base>
   13f58:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13f5c:	add	r2, sp, #8
   13f60:	ldr	r1, [pc, #376]	; 140e0 <table_cell_from_buffer@@Base+0x584>
   13f64:	mov	r0, r4
   13f68:	bl	11b3c <__isoc99_sscanf@plt>
   13f6c:	cmp	r0, #1
   13f70:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13f74:	mov	r2, r5
   13f78:	mov	r1, r7
   13f7c:	vldr	d0, [sp, #8]
   13f80:	mov	r0, r6
   13f84:	bl	137c0 <table_set_double@@Base>
   13f88:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13f8c:	add	r2, sp, #8
   13f90:	ldr	r1, [pc, #332]	; 140e4 <table_cell_from_buffer@@Base+0x588>
   13f94:	mov	r0, r4
   13f98:	bl	11b3c <__isoc99_sscanf@plt>
   13f9c:	cmp	r0, #1
   13fa0:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13fa4:	mov	r2, r5
   13fa8:	mov	r1, r7
   13fac:	vldr	d0, [sp, #8]
   13fb0:	mov	r0, r6
   13fb4:	bl	137e0 <table_set_ldouble@@Base>
   13fb8:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13fbc:	add	r2, sp, #8
   13fc0:	ldr	r1, [pc, #232]	; 140b0 <table_cell_from_buffer@@Base+0x554>
   13fc4:	mov	r0, r4
   13fc8:	bl	11b3c <__isoc99_sscanf@plt>
   13fcc:	cmp	r0, #1
   13fd0:	mov	r3, r0
   13fd4:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   13fd8:	ldr	r4, [sp, #8]
   13fdc:	cmp	r4, #0
   13fe0:	beq	13ff8 <table_cell_from_buffer@@Base+0x49c>
   13fe4:	mov	r2, r5
   13fe8:	mov	r1, r7
   13fec:	mov	r0, r6
   13ff0:	bl	13590 <table_set_bool@@Base>
   13ff4:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   13ff8:	mov	r3, r4
   13ffc:	mov	r2, r5
   14000:	mov	r1, r7
   14004:	mov	r0, r6
   14008:	bl	13590 <table_set_bool@@Base>
   1400c:	mov	r0, r4
   14010:	add	sp, sp, #268	; 0x10c
   14014:	pop	{r4, r5, r6, r7, pc}
   14018:	add	r2, sp, #8
   1401c:	ldr	r1, [pc, #196]	; 140e8 <table_cell_from_buffer@@Base+0x58c>
   14020:	mov	r0, r4
   14024:	bl	11b3c <__isoc99_sscanf@plt>
   14028:	cmp	r0, #1
   1402c:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   14030:	ldrb	r3, [sp, #8]
   14034:	mov	r2, r5
   14038:	mov	r1, r7
   1403c:	mov	r0, r6
   14040:	bl	13818 <table_set_char@@Base>
   14044:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   14048:	add	r2, sp, #8
   1404c:	ldr	r1, [pc, #148]	; 140e8 <table_cell_from_buffer@@Base+0x58c>
   14050:	mov	r0, r4
   14054:	bl	11b3c <__isoc99_sscanf@plt>
   14058:	cmp	r0, #1
   1405c:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   14060:	ldrb	r3, [sp, #8]
   14064:	mov	r2, r5
   14068:	mov	r1, r7
   1406c:	mov	r0, r6
   14070:	bl	13838 <table_set_uchar@@Base>
   14074:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   14078:	add	r2, sp, #8
   1407c:	ldr	r1, [pc, #104]	; 140ec <table_cell_from_buffer@@Base+0x590>
   14080:	mov	r0, r4
   14084:	bl	11b3c <__isoc99_sscanf@plt>
   14088:	cmp	r0, #1
   1408c:	bne	140a8 <table_cell_from_buffer@@Base+0x54c>
   14090:	mov	r2, r5
   14094:	mov	r1, r7
   14098:	ldr	r3, [sp, #8]
   1409c:	mov	r0, r6
   140a0:	bl	13858 <table_set_ptr@@Base>
   140a4:	b	13c14 <table_cell_from_buffer@@Base+0xb8>
   140a8:	mvn	r4, #0
   140ac:	b	1400c <table_cell_from_buffer@@Base+0x4b0>
   140b0:	andeq	r4, r1, r4, lsr r2
   140b4:	muleq	r1, r8, r2
   140b8:	andeq	r4, r1, r9, asr #5
   140bc:	andeq	r4, r1, lr, asr #5
   140c0:	andeq	r4, r1, r5, lsr #5
   140c4:	andeq	r4, r1, r9, lsr #5
   140c8:	muleq	r1, fp, r2
   140cc:	andeq	r4, r1, r0, lsr #5
   140d0:	andeq	r4, r1, sp, lsr #5
   140d4:			; <UNDEFINED> instruction: 0x000142b1
   140d8:			; <UNDEFINED> instruction: 0x000142b5
   140dc:			; <UNDEFINED> instruction: 0x000142b8
   140e0:			; <UNDEFINED> instruction: 0x000142bb
   140e4:			; <UNDEFINED> instruction: 0x000142bf
   140e8:	andeq	r4, r1, r3, asr #5
   140ec:	andeq	r4, r1, r6, asr #5

000140f0 <table_get_cell_ptr@@Base>:
   140f0:	push	{r4, lr}
   140f4:	mov	r4, r2
   140f8:	bl	13294 <table_get_row_ptr@@Base>
   140fc:	ldr	r0, [r0]
   14100:	add	r0, r0, r4, lsl #2
   14104:	pop	{r4, pc}

00014108 <table_cell_init@@Base>:
   14108:	push	{r4, lr}
   1410c:	bl	140f0 <table_get_cell_ptr@@Base>
   14110:	mov	r3, #0
   14114:	str	r3, [r0]
   14118:	pop	{r4, pc}

0001411c <table_cell_destroy@@Base>:
   1411c:	push	{r4, r5, r6, lr}
   14120:	mov	r6, r1
   14124:	mov	r1, r2
   14128:	mov	r5, r0
   1412c:	mov	r4, r2
   14130:	bl	12634 <table_get_column_data_type@@Base>
   14134:	cmp	r0, #23
   14138:	popeq	{r4, r5, r6, pc}
   1413c:	mov	r2, r4
   14140:	mov	r1, r6
   14144:	mov	r0, r5
   14148:	bl	140f0 <table_get_cell_ptr@@Base>
   1414c:	ldr	r0, [r0]
   14150:	cmp	r0, #0
   14154:	popeq	{r4, r5, r6, pc}
   14158:	pop	{r4, r5, r6, lr}
   1415c:	b	11ac4 <free@plt>

00014160 <table_cell_nullify@@Base>:
   14160:	push	{r4, lr}
   14164:	bl	140f0 <table_get_cell_ptr@@Base>
   14168:	mov	r4, r0
   1416c:	ldr	r0, [r0]
   14170:	cmp	r0, #0
   14174:	beq	14184 <table_cell_nullify@@Base+0x24>
   14178:	bl	11ac4 <free@plt>
   1417c:	mov	r3, #0
   14180:	str	r3, [r4]
   14184:	mov	r0, #0
   14188:	pop	{r4, pc}

0001418c <__libc_csu_init@@Base>:
   1418c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14190:	mov	r7, r0
   14194:	ldr	r6, [pc, #72]	; 141e4 <__libc_csu_init@@Base+0x58>
   14198:	ldr	r5, [pc, #72]	; 141e8 <__libc_csu_init@@Base+0x5c>
   1419c:	add	r6, pc, r6
   141a0:	add	r5, pc, r5
   141a4:	sub	r6, r6, r5
   141a8:	mov	r8, r1
   141ac:	mov	r9, r2
   141b0:	bl	11a8c <strcmp@plt-0x20>
   141b4:	asrs	r6, r6, #2
   141b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   141bc:	mov	r4, #0
   141c0:	add	r4, r4, #1
   141c4:	ldr	r3, [r5], #4
   141c8:	mov	r2, r9
   141cc:	mov	r1, r8
   141d0:	mov	r0, r7
   141d4:	blx	r3
   141d8:	cmp	r6, r4
   141dc:	bne	141c0 <__libc_csu_init@@Base+0x34>
   141e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141e4:	andeq	r0, r1, r0, ror sp
   141e8:	andeq	r0, r1, r8, ror #26

000141ec <__libc_csu_fini@@Base>:
   141ec:	bx	lr

Disassembly of section .fini:

000141f0 <.fini>:
   141f0:	push	{r3, lr}
   141f4:	pop	{r3, pc}
