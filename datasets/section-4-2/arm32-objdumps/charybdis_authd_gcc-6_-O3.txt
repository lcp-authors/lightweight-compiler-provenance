
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

00011208 <.init>:
   11208:	push	{r3, lr}
   1120c:	bl	117b8 <sprintf@plt+0x1b8>
   11210:	pop	{r3, pc}

Disassembly of section .plt:

00011214 <sigemptyset@plt-0x14>:
   11214:	push	{lr}		; (str lr, [sp, #-4]!)
   11218:	ldr	lr, [pc, #4]	; 11224 <sigemptyset@plt-0x4>
   1121c:	add	lr, pc, lr
   11220:	ldr	pc, [lr, #8]!
   11224:	ldrdeq	r9, [r1], -ip

00011228 <sigemptyset@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #102400	; 0x19000
   11230:	ldr	pc, [ip, #3548]!	; 0xddc

00011234 <strerror@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #102400	; 0x19000
   1123c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011240 <rb_helper_loop@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #102400	; 0x19000
   11248:	ldr	pc, [ip, #3532]!	; 0xdcc

0001124c <abort@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #102400	; 0x19000
   11254:	ldr	pc, [ip, #3524]!	; 0xdc4

00011258 <rb_event_addish@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #102400	; 0x19000
   11260:	ldr	pc, [ip, #3516]!	; 0xdbc

00011264 <getsockname@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #102400	; 0x19000
   1126c:	ldr	pc, [ip, #3508]!	; 0xdb4

00011270 <rb_ignore_errno@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #102400	; 0x19000
   11278:	ldr	pc, [ip, #3500]!	; 0xdac

0001127c <rb_connect_tcp_ssl@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #102400	; 0x19000
   11284:	ldr	pc, [ip, #3492]!	; 0xda4

00011288 <rb_connect_tcp@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #102400	; 0x19000
   11290:	ldr	pc, [ip, #3484]!	; 0xd9c

00011294 <memcmp@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #102400	; 0x19000
   1129c:	ldr	pc, [ip, #3476]!	; 0xd94

000112a0 <__libc_start_main@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #102400	; 0x19000
   112a8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112ac <rb_event_delete@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #102400	; 0x19000
   112b4:	ldr	pc, [ip, #3460]!	; 0xd84

000112b8 <rb_setselect@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #102400	; 0x19000
   112c0:	ldr	pc, [ip, #3452]!	; 0xd7c

000112c4 <rb_get_fd@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #102400	; 0x19000
   112cc:	ldr	pc, [ip, #3444]!	; 0xd74

000112d0 <__gmon_start__@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #102400	; 0x19000
   112d8:	ldr	pc, [ip, #3436]!	; 0xd6c

000112dc <vsnprintf@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #102400	; 0x19000
   112e4:	ldr	pc, [ip, #3428]!	; 0xd64

000112e8 <rb_socket@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #102400	; 0x19000
   112f0:	ldr	pc, [ip, #3420]!	; 0xd5c

000112f4 <fclose@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #102400	; 0x19000
   112fc:	ldr	pc, [ip, #3412]!	; 0xd54

00011300 <fgets@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #102400	; 0x19000
   11308:	ldr	pc, [ip, #3404]!	; 0xd4c

0001130c <rb_strtok_r@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #102400	; 0x19000
   11314:	ldr	pc, [ip, #3396]!	; 0xd44

00011318 <strchr@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #102400	; 0x19000
   11320:	ldr	pc, [ip, #3388]!	; 0xd3c

00011324 <rb_dictionary_foreach_cur@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #102400	; 0x19000
   1132c:	ldr	pc, [ip, #3380]!	; 0xd34

00011330 <strcasecmp@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #102400	; 0x19000
   11338:	ldr	pc, [ip, #3372]!	; 0xd2c

0001133c <calloc@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #102400	; 0x19000
   11344:	ldr	pc, [ip, #3364]!	; 0xd24

00011348 <rb_helper_child@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #102400	; 0x19000
   11350:	ldr	pc, [ip, #3356]!	; 0xd1c

00011354 <sendto@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #102400	; 0x19000
   1135c:	ldr	pc, [ip, #3348]!	; 0xd14

00011360 <fopen@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #102400	; 0x19000
   11368:	ldr	pc, [ip, #3340]!	; 0xd0c

0001136c <memset@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #102400	; 0x19000
   11374:	ldr	pc, [ip, #3332]!	; 0xd04

00011378 <freeaddrinfo@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #102400	; 0x19000
   11380:	ldr	pc, [ip, #3324]!	; 0xcfc

00011384 <strrchr@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #102400	; 0x19000
   1138c:	ldr	pc, [ip, #3316]!	; 0xcf4

00011390 <rb_write@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #102400	; 0x19000
   11398:	ldr	pc, [ip, #3308]!	; 0xcec

0001139c <__assert_fail@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #102400	; 0x19000
   113a4:	ldr	pc, [ip, #3300]!	; 0xce4

000113a8 <rb_strlcpy@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #102400	; 0x19000
   113b0:	ldr	pc, [ip, #3292]!	; 0xcdc

000113b4 <strtoull@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #102400	; 0x19000
   113bc:	ldr	pc, [ip, #3284]!	; 0xcd4

000113c0 <rb_dictionary_foreach_next@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #102400	; 0x19000
   113c8:	ldr	pc, [ip, #3276]!	; 0xccc

000113cc <free@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #102400	; 0x19000
   113d4:	ldr	pc, [ip, #3268]!	; 0xcc4

000113d8 <rb_string_to_array@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #102400	; 0x19000
   113e0:	ldr	pc, [ip, #3260]!	; 0xcbc

000113e4 <rb_read@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #102400	; 0x19000
   113ec:	ldr	pc, [ip, #3252]!	; 0xcb4

000113f0 <rb_strcasecmp@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #102400	; 0x19000
   113f8:	ldr	pc, [ip, #3244]!	; 0xcac

000113fc <getaddrinfo@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #102400	; 0x19000
   11404:	ldr	pc, [ip, #3236]!	; 0xca4

00011408 <rb_dictionary_foreach_start@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #102400	; 0x19000
   11410:	ldr	pc, [ip, #3228]!	; 0xc9c

00011414 <rb_inet_pton_sock@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #102400	; 0x19000
   1141c:	ldr	pc, [ip, #3220]!	; 0xc94

00011420 <strlen@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #102400	; 0x19000
   11428:	ldr	pc, [ip, #3212]!	; 0xc8c

0001142c <rb_current_time@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #102400	; 0x19000
   11434:	ldr	pc, [ip, #3204]!	; 0xc84

00011438 <rb_dictionary_delete@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #102400	; 0x19000
   11440:	ldr	pc, [ip, #3196]!	; 0xc7c

00011444 <memcpy@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #102400	; 0x19000
   1144c:	ldr	pc, [ip, #3188]!	; 0xc74

00011450 <rb_free_rb_dlink_node@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #102400	; 0x19000
   11458:	ldr	pc, [ip, #3180]!	; 0xc6c

0001145c <rb_close@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #102400	; 0x19000
   11464:	ldr	pc, [ip, #3172]!	; 0xc64

00011468 <strtol@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #102400	; 0x19000
   11470:	ldr	pc, [ip, #3164]!	; 0xc5c

00011474 <sigaddset@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #102400	; 0x19000
   1147c:	ldr	pc, [ip, #3156]!	; 0xc54

00011480 <raise@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #102400	; 0x19000
   11488:	ldr	pc, [ip, #3148]!	; 0xc4c

0001148c <rb_dictionary_destroy@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #102400	; 0x19000
   11494:	ldr	pc, [ip, #3140]!	; 0xc44

00011498 <bind@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #102400	; 0x19000
   114a0:	ldr	pc, [ip, #3132]!	; 0xc3c

000114a4 <strstr@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #102400	; 0x19000
   114ac:	ldr	pc, [ip, #3124]!	; 0xc34

000114b0 <fwrite@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #102400	; 0x19000
   114b8:	ldr	pc, [ip, #3116]!	; 0xc2c

000114bc <rb_init_prng@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #102400	; 0x19000
   114c4:	ldr	pc, [ip, #3108]!	; 0xc24

000114c8 <rb_dictionary_retrieve@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #102400	; 0x19000
   114d0:	ldr	pc, [ip, #3100]!	; 0xc1c

000114d4 <rb_outofmemory@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #102400	; 0x19000
   114dc:	ldr	pc, [ip, #3092]!	; 0xc14

000114e0 <__ctype_b_loc@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #102400	; 0x19000
   114e8:	ldr	pc, [ip, #3084]!	; 0xc0c

000114ec <rb_dictionary_add@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #102400	; 0x19000
   114f4:	ldr	pc, [ip, #3076]!	; 0xc04

000114f8 <rb_set_time@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #102400	; 0x19000
   11500:	ldr	pc, [ip, #3068]!	; 0xbfc

00011504 <malloc@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #102400	; 0x19000
   1150c:	ldr	pc, [ip, #3060]!	; 0xbf4

00011510 <sigaction@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #102400	; 0x19000
   11518:	ldr	pc, [ip, #3052]!	; 0xbec

0001151c <rb_helper_read@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #102400	; 0x19000
   11524:	ldr	pc, [ip, #3044]!	; 0xbe4

00011528 <rb_inet_ntop_sock@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #102400	; 0x19000
   11530:	ldr	pc, [ip, #3036]!	; 0xbdc

00011534 <rb_dictionary_find@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #102400	; 0x19000
   1153c:	ldr	pc, [ip, #3028]!	; 0xbd4

00011540 <rb_dictionary_create@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #102400	; 0x19000
   11548:	ldr	pc, [ip, #3020]!	; 0xbcc

0001154c <memmove@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #102400	; 0x19000
   11554:	ldr	pc, [ip, #3012]!	; 0xbc4

00011558 <rb_accept_tcp@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #102400	; 0x19000
   11560:	ldr	pc, [ip, #3004]!	; 0xbbc

00011564 <rb_helper_write@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #102400	; 0x19000
   1156c:	ldr	pc, [ip, #2996]!	; 0xbb4

00011570 <rb_event_add@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #102400	; 0x19000
   11578:	ldr	pc, [ip, #2988]!	; 0xbac

0001157c <rb_get_random@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #102400	; 0x19000
   11584:	ldr	pc, [ip, #2980]!	; 0xba4

00011588 <rb_make_rb_dlink_node@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #102400	; 0x19000
   11590:	ldr	pc, [ip, #2972]!	; 0xb9c

00011594 <snprintf@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #102400	; 0x19000
   1159c:	ldr	pc, [ip, #2964]!	; 0xb94

000115a0 <rb_listen@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #102400	; 0x19000
   115a8:	ldr	pc, [ip, #2956]!	; 0xb8c

000115ac <strncmp@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #102400	; 0x19000
   115b4:	ldr	pc, [ip, #2948]!	; 0xb84

000115b8 <recvfrom@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #102400	; 0x19000
   115c0:	ldr	pc, [ip, #2940]!	; 0xb7c

000115c4 <setsockopt@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #102400	; 0x19000
   115cc:	ldr	pc, [ip, #2932]!	; 0xb74

000115d0 <strpbrk@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #102400	; 0x19000
   115d8:	ldr	pc, [ip, #2924]!	; 0xb6c

000115dc <strcmp@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #102400	; 0x19000
   115e4:	ldr	pc, [ip, #2916]!	; 0xb64

000115e8 <exit@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #102400	; 0x19000
   115f0:	ldr	pc, [ip, #2908]!	; 0xb5c

000115f4 <__errno_location@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #102400	; 0x19000
   115fc:	ldr	pc, [ip, #2900]!	; 0xb54

00011600 <sprintf@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #102400	; 0x19000
   11608:	ldr	pc, [ip, #2892]!	; 0xb4c

Disassembly of section .text:

0001160c <.text>:
   1160c:	mov	r0, #67	; 0x43
   11610:	push	{r4, lr}
   11614:	ldr	r1, [pc, #8]	; 11624 <sprintf@plt+0x24>
   11618:	bl	122d8 <sprintf@plt+0xcd8>
   1161c:	mov	r0, #2
   11620:	bl	115e8 <exit@plt>
   11624:	andeq	r9, r1, r8, lsl #4
   11628:	push	{r4, lr}
   1162c:	mov	r2, #145	; 0x91
   11630:	ldr	r3, [pc, #8]	; 11640 <sprintf@plt+0x40>
   11634:	ldr	r1, [pc, #8]	; 11644 <sprintf@plt+0x44>
   11638:	ldr	r0, [pc, #8]	; 11648 <sprintf@plt+0x48>
   1163c:	bl	1139c <__assert_fail@plt>
   11640:	muleq	r1, r0, r7
   11644:	andeq	r9, r1, r4, ror #7
   11648:	andeq	r9, r1, r8, ror #15
   1164c:	push	{r4, lr}
   11650:	mov	r2, #236	; 0xec
   11654:	ldr	r3, [pc, #8]	; 11664 <sprintf@plt+0x64>
   11658:	ldr	r1, [pc, #8]	; 11668 <sprintf@plt+0x68>
   1165c:	ldr	r0, [pc, #8]	; 1166c <sprintf@plt+0x6c>
   11660:	bl	1139c <__assert_fail@plt>
   11664:	muleq	r1, ip, r7
   11668:	andeq	r9, r1, r4, ror #7
   1166c:	andeq	r9, r1, r8, ror #15
   11670:	push	{r4, lr}
   11674:	mov	r2, #288	; 0x120
   11678:	ldr	r3, [pc, #8]	; 11688 <sprintf@plt+0x88>
   1167c:	ldr	r1, [pc, #8]	; 1168c <sprintf@plt+0x8c>
   11680:	ldr	r0, [pc, #8]	; 11690 <sprintf@plt+0x90>
   11684:	bl	1139c <__assert_fail@plt>
   11688:	andeq	r9, r1, ip, lsr #15
   1168c:	andeq	r9, r1, r4, ror #7
   11690:	andeq	r9, r1, r0, lsl #8
   11694:	push	{r4, lr}
   11698:	mov	r2, #236	; 0xec
   1169c:	ldr	r3, [pc, #8]	; 116ac <sprintf@plt+0xac>
   116a0:	ldr	r1, [pc, #8]	; 116b0 <sprintf@plt+0xb0>
   116a4:	ldr	r0, [pc, #8]	; 116b4 <sprintf@plt+0xb4>
   116a8:	bl	1139c <__assert_fail@plt>
   116ac:	andeq	r9, r1, r8, asr ip
   116b0:	andeq	r9, r1, r4, ror #7
   116b4:	andeq	r9, r1, r8, ror #15
   116b8:	push	{lr}		; (str lr, [sp, #-4]!)
   116bc:	sub	sp, sp, #20
   116c0:	bl	11934 <sprintf@plt+0x334>
   116c4:	mov	r4, #0
   116c8:	mov	r3, #256	; 0x100
   116cc:	str	r3, [sp, #12]
   116d0:	str	r3, [sp, #8]
   116d4:	str	r3, [sp, #4]
   116d8:	str	r4, [sp]
   116dc:	mov	r3, r4
   116e0:	mov	r2, r4
   116e4:	ldr	r1, [pc, #112]	; 1175c <sprintf@plt+0x15c>
   116e8:	ldr	r0, [pc, #112]	; 11760 <sprintf@plt+0x160>
   116ec:	bl	11348 <rb_helper_child@plt>
   116f0:	ldr	r5, [pc, #108]	; 11764 <sprintf@plt+0x164>
   116f4:	cmp	r0, r4
   116f8:	str	r0, [r5, #60]	; 0x3c
   116fc:	beq	1173c <sprintf@plt+0x13c>
   11700:	bl	114f8 <rb_set_time@plt>
   11704:	bl	11934 <sprintf@plt+0x334>
   11708:	ldr	r1, [pc, #88]	; 11768 <sprintf@plt+0x168>
   1170c:	ldr	r0, [pc, #88]	; 1176c <sprintf@plt+0x16c>
   11710:	bl	11540 <rb_dictionary_create@plt>
   11714:	ldr	r3, [pc, #84]	; 11770 <sprintf@plt+0x170>
   11718:	str	r0, [r3]
   1171c:	bl	1366c <sprintf@plt+0x206c>
   11720:	bl	128ec <sprintf@plt+0x12ec>
   11724:	mov	r1, #1
   11728:	mov	r0, r4
   1172c:	bl	114bc <rb_init_prng@plt>
   11730:	mov	r1, r4
   11734:	ldr	r0, [r5, #60]	; 0x3c
   11738:	bl	11240 <rb_helper_loop@plt>
   1173c:	ldr	r3, [pc, #48]	; 11774 <sprintf@plt+0x174>
   11740:	mov	r2, #46	; 0x2e
   11744:	mov	r1, #1
   11748:	ldr	r3, [r3]
   1174c:	ldr	r0, [pc, #36]	; 11778 <sprintf@plt+0x178>
   11750:	bl	114b0 <fwrite@plt>
   11754:	mov	r0, #1
   11758:	bl	115e8 <exit@plt>
   1175c:	andeq	r1, r1, r8, lsr #17
   11760:			; <UNDEFINED> instruction: 0x000118b4
   11764:	andeq	pc, r2, r8, lsr pc	; <UNPREDICTABLE>
   11768:	strdeq	r1, [r1], -r0
   1176c:	andeq	r9, r1, r0, lsr #2
   11770:	andeq	r0, r3, ip, ror #2
   11774:	andeq	fp, r2, r0, asr #30
   11778:	strdeq	r9, [r1], -r0
   1177c:	mov	fp, #0
   11780:	mov	lr, #0
   11784:	pop	{r1}		; (ldr r1, [sp], #4)
   11788:	mov	r2, sp
   1178c:	push	{r2}		; (str r2, [sp, #-4]!)
   11790:	push	{r0}		; (str r0, [sp, #-4]!)
   11794:	ldr	ip, [pc, #16]	; 117ac <sprintf@plt+0x1ac>
   11798:	push	{ip}		; (str ip, [sp, #-4]!)
   1179c:	ldr	r0, [pc, #12]	; 117b0 <sprintf@plt+0x1b0>
   117a0:	ldr	r3, [pc, #12]	; 117b4 <sprintf@plt+0x1b4>
   117a4:	bl	112a0 <__libc_start_main@plt>
   117a8:	bl	1124c <abort@plt>
   117ac:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   117b0:			; <UNDEFINED> instruction: 0x000116b8
   117b4:	andeq	r8, r1, r0, lsr pc
   117b8:	ldr	r3, [pc, #20]	; 117d4 <sprintf@plt+0x1d4>
   117bc:	ldr	r2, [pc, #20]	; 117d8 <sprintf@plt+0x1d8>
   117c0:	add	r3, pc, r3
   117c4:	ldr	r2, [r3, r2]
   117c8:	cmp	r2, #0
   117cc:	bxeq	lr
   117d0:	b	112d0 <__gmon_start__@plt>
   117d4:	andeq	r9, r1, r8, lsr r8
   117d8:	andeq	r0, r0, r8, asr r1
   117dc:	ldr	r3, [pc, #28]	; 11800 <sprintf@plt+0x200>
   117e0:	ldr	r0, [pc, #28]	; 11804 <sprintf@plt+0x204>
   117e4:	sub	r3, r3, r0
   117e8:	cmp	r3, #6
   117ec:	bxls	lr
   117f0:	ldr	r3, [pc, #16]	; 11808 <sprintf@plt+0x208>
   117f4:	cmp	r3, #0
   117f8:	bxeq	lr
   117fc:	bx	r3
   11800:	andeq	fp, r2, r3, asr #30
   11804:	andeq	fp, r2, r0, asr #30
   11808:	andeq	r0, r0, r0
   1180c:	ldr	r1, [pc, #36]	; 11838 <sprintf@plt+0x238>
   11810:	ldr	r0, [pc, #36]	; 1183c <sprintf@plt+0x23c>
   11814:	sub	r1, r1, r0
   11818:	asr	r1, r1, #2
   1181c:	add	r1, r1, r1, lsr #31
   11820:	asrs	r1, r1, #1
   11824:	bxeq	lr
   11828:	ldr	r3, [pc, #16]	; 11840 <sprintf@plt+0x240>
   1182c:	cmp	r3, #0
   11830:	bxeq	lr
   11834:	bx	r3
   11838:	andeq	fp, r2, r0, asr #30
   1183c:	andeq	fp, r2, r0, asr #30
   11840:	andeq	r0, r0, r0
   11844:	push	{r4, lr}
   11848:	ldr	r4, [pc, #24]	; 11868 <sprintf@plt+0x268>
   1184c:	ldrb	r3, [r4]
   11850:	cmp	r3, #0
   11854:	popne	{r4, pc}
   11858:	bl	117dc <sprintf@plt+0x1dc>
   1185c:	mov	r3, #1
   11860:	strb	r3, [r4]
   11864:	pop	{r4, pc}
   11868:	andeq	fp, r2, r4, asr #30
   1186c:	ldr	r0, [pc, #40]	; 1189c <sprintf@plt+0x29c>
   11870:	ldr	r3, [r0]
   11874:	cmp	r3, #0
   11878:	bne	11880 <sprintf@plt+0x280>
   1187c:	b	1180c <sprintf@plt+0x20c>
   11880:	ldr	r3, [pc, #24]	; 118a0 <sprintf@plt+0x2a0>
   11884:	cmp	r3, #0
   11888:	beq	1187c <sprintf@plt+0x27c>
   1188c:	push	{r4, lr}
   11890:	blx	r3
   11894:	pop	{r4, lr}
   11898:	b	1180c <sprintf@plt+0x20c>
   1189c:	andeq	sl, r2, ip, ror #29
   118a0:	andeq	r0, r0, r0
   118a4:	bx	lr
   118a8:	push	{r4, lr}
   118ac:	mov	r0, #1
   118b0:	bl	115e8 <exit@plt>
   118b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118b8:	mov	r8, r0
   118bc:	ldr	r9, [pc, #100]	; 11928 <sprintf@plt+0x328>
   118c0:	ldr	sl, [pc, #100]	; 1192c <sprintf@plt+0x32c>
   118c4:	add	r7, r9, #44	; 0x2c
   118c8:	mov	r4, r9
   118cc:	mov	r6, #16384	; 0x4000
   118d0:	mov	r5, #10
   118d4:	mov	r2, r6
   118d8:	mov	r1, r7
   118dc:	mov	r0, r8
   118e0:	bl	1151c <rb_helper_read@plt>
   118e4:	mov	r2, r5
   118e8:	mov	r1, r4
   118ec:	cmp	r0, #0
   118f0:	ldr	r0, [pc, #56]	; 11930 <sprintf@plt+0x330>
   118f4:	ble	11924 <sprintf@plt+0x324>
   118f8:	bl	113d8 <rb_string_to_array@plt>
   118fc:	mov	r1, r4
   11900:	cmp	r0, #0
   11904:	ble	118d4 <sprintf@plt+0x2d4>
   11908:	ldr	r3, [r9]
   1190c:	ldrb	r3, [r3]
   11910:	ldr	r3, [sl, r3, lsl #2]
   11914:	cmp	r3, #0
   11918:	beq	118d4 <sprintf@plt+0x2d4>
   1191c:	blx	r3
   11920:	b	118d4 <sprintf@plt+0x2d4>
   11924:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11928:	andeq	fp, r2, r8, asr #30
   1192c:	andeq	fp, r2, r4, ror #2
   11930:	andeq	fp, r2, r4, ror pc
   11934:	push	{r4, r5, lr}
   11938:	sub	sp, sp, #148	; 0x94
   1193c:	add	r4, sp, #144	; 0x90
   11940:	mov	r3, #1
   11944:	mov	r5, #0
   11948:	add	r0, sp, #8
   1194c:	str	r3, [r4, #-140]!	; 0xffffff74
   11950:	str	r5, [sp, #136]	; 0x88
   11954:	bl	11228 <sigemptyset@plt>
   11958:	add	r0, sp, #8
   1195c:	mov	r1, #13
   11960:	bl	11474 <sigaddset@plt>
   11964:	add	r0, sp, #8
   11968:	mov	r1, #14
   1196c:	bl	11474 <sigaddset@plt>
   11970:	add	r0, sp, #8
   11974:	mov	r1, #5
   11978:	bl	11474 <sigaddset@plt>
   1197c:	add	r0, sp, #8
   11980:	mov	r1, #28
   11984:	bl	11474 <sigaddset@plt>
   11988:	mov	r2, r5
   1198c:	mov	r1, r4
   11990:	mov	r0, #28
   11994:	bl	11510 <sigaction@plt>
   11998:	mov	r2, r5
   1199c:	mov	r1, r4
   119a0:	mov	r0, #13
   119a4:	bl	11510 <sigaction@plt>
   119a8:	mov	r2, r5
   119ac:	mov	r1, r4
   119b0:	mov	r0, #5
   119b4:	bl	11510 <sigaction@plt>
   119b8:	ldr	r3, [pc, #24]	; 119d8 <sprintf@plt+0x3d8>
   119bc:	mov	r1, r4
   119c0:	mov	r2, r5
   119c4:	mov	r0, #14
   119c8:	str	r3, [sp, #4]
   119cc:	bl	11510 <sigaction@plt>
   119d0:	add	sp, sp, #148	; 0x94
   119d4:	pop	{r4, r5, pc}
   119d8:	andeq	r1, r1, r4, lsr #17
   119dc:	cmp	r0, #2
   119e0:	bgt	11a14 <sprintf@plt+0x414>
   119e4:	push	{r4, r5, r6, lr}
   119e8:	mov	r6, #0
   119ec:	ldr	r4, [pc, #64]	; 11a34 <sprintf@plt+0x434>
   119f0:	add	r5, r4, #1024	; 0x400
   119f4:	ldr	r3, [r4, #4]!
   119f8:	mov	r0, r6
   119fc:	cmp	r3, #0
   11a00:	beq	11a08 <sprintf@plt+0x408>
   11a04:	blx	r3
   11a08:	cmp	r4, r5
   11a0c:	bne	119f4 <sprintf@plt+0x3f4>
   11a10:	pop	{r4, r5, r6, pc}
   11a14:	ldr	r2, [r1, #4]
   11a18:	ldr	r3, [pc, #24]	; 11a38 <sprintf@plt+0x438>
   11a1c:	ldrb	r0, [r2]
   11a20:	add	r3, r3, r0, lsl #2
   11a24:	ldr	r3, [r3, #1024]	; 0x400
   11a28:	cmp	r3, #0
   11a2c:	bxeq	lr
   11a30:	bx	r3
   11a34:	andeq	fp, r2, r0, ror #10
   11a38:	andeq	fp, r2, r4, ror #2
   11a3c:	cmp	r0, #2
   11a40:	ble	11a98 <sprintf@plt+0x498>
   11a44:	push	{r4, lr}
   11a48:	mov	r4, r1
   11a4c:	mov	r2, #16
   11a50:	mov	r1, #0
   11a54:	ldr	r0, [r4, #4]
   11a58:	bl	113b4 <strtoull@plt>
   11a5c:	mov	r3, #0
   11a60:	mvn	r2, #0
   11a64:	cmp	r1, r3
   11a68:	cmpeq	r0, r2
   11a6c:	bhi	11aa8 <sprintf@plt+0x4a8>
   11a70:	ldr	r2, [r4, #8]
   11a74:	ldr	r3, [pc, #64]	; 11abc <sprintf@plt+0x4bc>
   11a78:	ldrb	r2, [r2]
   11a7c:	add	r3, r3, r2, lsl #2
   11a80:	ldr	r3, [r3, #2048]	; 0x800
   11a84:	cmp	r3, #0
   11a88:	popeq	{r4, pc}
   11a8c:	mov	r1, r2
   11a90:	pop	{r4, lr}
   11a94:	bx	r3
   11a98:	mov	r2, r0
   11a9c:	ldr	r1, [pc, #28]	; 11ac0 <sprintf@plt+0x4c0>
   11aa0:	mov	r0, #67	; 0x43
   11aa4:	b	122d8 <sprintf@plt+0xcd8>
   11aa8:	ldr	r2, [r4, #4]
   11aac:	ldr	r1, [pc, #16]	; 11ac4 <sprintf@plt+0x4c4>
   11ab0:	mov	r0, #67	; 0x43
   11ab4:	pop	{r4, lr}
   11ab8:	b	122d8 <sprintf@plt+0xcd8>
   11abc:	andeq	fp, r2, r4, ror #2
   11ac0:	andeq	r8, r1, r0, lsr #31
   11ac4:	andeq	r8, r1, ip, ror #31
   11ac8:	cmp	r0, #1
   11acc:	ble	11b30 <sprintf@plt+0x530>
   11ad0:	ldr	r3, [pc, #124]	; 11b54 <sprintf@plt+0x554>
   11ad4:	push	{r4, r5, r6, lr}
   11ad8:	mov	r5, r1
   11adc:	mov	r4, r0
   11ae0:	ldr	r1, [r1, #4]
   11ae4:	ldr	r0, [r3]
   11ae8:	bl	114c8 <rb_dictionary_retrieve@plt>
   11aec:	cmp	r0, #0
   11af0:	beq	11b40 <sprintf@plt+0x540>
   11af4:	ldr	r2, [r0, #4]
   11af8:	sub	r3, r4, #1
   11afc:	cmp	r3, r2
   11b00:	ble	11b1c <sprintf@plt+0x51c>
   11b04:	ldr	r3, [r0, #8]
   11b08:	sub	r1, r4, #2
   11b0c:	add	r2, r5, #8
   11b10:	ldr	r0, [r5, #4]
   11b14:	pop	{r4, r5, r6, lr}
   11b18:	bx	r3
   11b1c:	mov	r3, r4
   11b20:	ldr	r1, [pc, #48]	; 11b58 <sprintf@plt+0x558>
   11b24:	mov	r0, #67	; 0x43
   11b28:	pop	{r4, r5, r6, lr}
   11b2c:	b	122d8 <sprintf@plt+0xcd8>
   11b30:	mov	r2, r0
   11b34:	ldr	r1, [pc, #32]	; 11b5c <sprintf@plt+0x55c>
   11b38:	mov	r0, #67	; 0x43
   11b3c:	b	122d8 <sprintf@plt+0xcd8>
   11b40:	ldr	r2, [r5, #4]
   11b44:	ldr	r1, [pc, #20]	; 11b60 <sprintf@plt+0x560>
   11b48:	mov	r0, #67	; 0x43
   11b4c:	pop	{r4, r5, r6, lr}
   11b50:	b	122d8 <sprintf@plt+0xcd8>
   11b54:	andeq	r0, r3, ip, ror #2
   11b58:	andeq	r9, r1, r0, lsr #1
   11b5c:	andeq	r9, r1, r0, lsr #32
   11b60:	andeq	r9, r1, r0, ror r0
   11b64:	push	{r4, r5, lr}
   11b68:	sub	sp, sp, #60	; 0x3c
   11b6c:	mov	r4, r0
   11b70:	mov	r3, #42	; 0x2a
   11b74:	mov	r5, r1
   11b78:	mov	r2, #49	; 0x31
   11b7c:	mov	r1, #0
   11b80:	add	r0, sp, #4
   11b84:	str	r3, [sp]
   11b88:	bl	1136c <memset@plt>
   11b8c:	cmp	r4, #0
   11b90:	beq	11c68 <sprintf@plt+0x668>
   11b94:	cmp	r5, #0
   11b98:	beq	11bbc <sprintf@plt+0x5bc>
   11b9c:	ldr	r2, [r4, #8]
   11ba0:	cmp	r2, #52	; 0x34
   11ba4:	beq	11c08 <sprintf@plt+0x608>
   11ba8:	cmp	r2, #54	; 0x36
   11bac:	bne	11bf4 <sprintf@plt+0x5f4>
   11bb0:	ldrh	r3, [r5, #4]
   11bb4:	cmp	r3, #10
   11bb8:	beq	11c28 <sprintf@plt+0x628>
   11bbc:	ldr	r5, [r4, #152]	; 0x98
   11bc0:	cmp	r5, #0
   11bc4:	beq	11be4 <sprintf@plt+0x5e4>
   11bc8:	add	r0, sp, #56	; 0x38
   11bcc:	ldr	r3, [r4, #156]	; 0x9c
   11bd0:	ldrb	r1, [r0, #-56]!	; 0xffffffc8
   11bd4:	ldr	r2, [r4, #8]
   11bd8:	subs	r1, r1, #42	; 0x2a
   11bdc:	movne	r1, #1
   11be0:	blx	r5
   11be4:	mov	r0, r4
   11be8:	add	sp, sp, #60	; 0x3c
   11bec:	pop	{r4, r5, lr}
   11bf0:	b	113cc <free@plt>
   11bf4:	mov	r0, #67	; 0x43
   11bf8:	ldr	r1, [pc, #124]	; 11c7c <sprintf@plt+0x67c>
   11bfc:	bl	122d8 <sprintf@plt+0xcd8>
   11c00:	mov	r0, #2
   11c04:	bl	115e8 <exit@plt>
   11c08:	ldrh	r3, [r5, #4]
   11c0c:	cmp	r3, #2
   11c10:	bne	11bbc <sprintf@plt+0x5bc>
   11c14:	add	r0, r5, #4
   11c18:	mov	r2, #53	; 0x35
   11c1c:	mov	r1, sp
   11c20:	bl	11528 <rb_inet_ntop_sock@plt>
   11c24:	b	11bbc <sprintf@plt+0x5bc>
   11c28:	add	r0, r5, #4
   11c2c:	mov	r1, sp
   11c30:	mov	r2, #53	; 0x35
   11c34:	bl	11528 <rb_inet_ntop_sock@plt>
   11c38:	ldrb	r3, [sp]
   11c3c:	cmp	r3, #58	; 0x3a
   11c40:	bne	11bbc <sprintf@plt+0x5bc>
   11c44:	mov	r0, sp
   11c48:	bl	11420 <strlen@plt>
   11c4c:	mov	r1, sp
   11c50:	mov	r2, r0
   11c54:	add	r0, sp, #1
   11c58:	bl	1154c <memmove@plt>
   11c5c:	mov	r3, #48	; 0x30
   11c60:	strb	r3, [sp]
   11c64:	b	11bbc <sprintf@plt+0x5bc>
   11c68:	mov	r0, #67	; 0x43
   11c6c:	ldr	r1, [pc, #12]	; 11c80 <sprintf@plt+0x680>
   11c70:	bl	122d8 <sprintf@plt+0xcd8>
   11c74:	mov	r0, #2
   11c78:	bl	115e8 <exit@plt>
   11c7c:	andeq	r9, r1, r4, ror #2
   11c80:	andeq	r9, r1, r8, lsr r1
   11c84:	push	{r4, r5, r6, lr}
   11c88:	subs	r4, r0, #0
   11c8c:	beq	11d10 <sprintf@plt+0x710>
   11c90:	cmp	r1, #0
   11c94:	mov	r5, r1
   11c98:	beq	11cc8 <sprintf@plt+0x6c8>
   11c9c:	ldr	r2, [r4, #8]
   11ca0:	cmp	r2, #82	; 0x52
   11ca4:	beq	11cf8 <sprintf@plt+0x6f8>
   11ca8:	cmp	r2, #83	; 0x53
   11cac:	bne	11d24 <sprintf@plt+0x724>
   11cb0:	mov	r2, #16
   11cb4:	add	r1, r1, #12
   11cb8:	add	r0, r4, #20
   11cbc:	bl	11294 <memcmp@plt>
   11cc0:	cmp	r0, #0
   11cc4:	beq	11d08 <sprintf@plt+0x708>
   11cc8:	mov	r0, #0
   11ccc:	ldr	r5, [r4, #152]	; 0x98
   11cd0:	cmp	r5, #0
   11cd4:	beq	11cec <sprintf@plt+0x6ec>
   11cd8:	adds	r1, r0, #0
   11cdc:	ldr	r3, [r4, #156]	; 0x9c
   11ce0:	ldr	r2, [r4, #8]
   11ce4:	movne	r1, #1
   11ce8:	blx	r5
   11cec:	mov	r0, r4
   11cf0:	pop	{r4, r5, r6, lr}
   11cf4:	b	113cc <free@plt>
   11cf8:	ldr	r2, [r4, #16]
   11cfc:	ldr	r3, [r1, #8]
   11d00:	cmp	r2, r3
   11d04:	bne	11cc8 <sprintf@plt+0x6c8>
   11d08:	ldr	r0, [r5]
   11d0c:	b	11ccc <sprintf@plt+0x6cc>
   11d10:	mov	r0, #67	; 0x43
   11d14:	ldr	r1, [pc, #28]	; 11d38 <sprintf@plt+0x738>
   11d18:	bl	122d8 <sprintf@plt+0xcd8>
   11d1c:	mov	r0, #2
   11d20:	bl	115e8 <exit@plt>
   11d24:	mov	r0, #67	; 0x43
   11d28:	ldr	r1, [pc, #12]	; 11d3c <sprintf@plt+0x73c>
   11d2c:	bl	122d8 <sprintf@plt+0xcd8>
   11d30:	mov	r0, #2
   11d34:	bl	115e8 <exit@plt>
   11d38:	muleq	r1, r8, r1
   11d3c:	andeq	r9, r1, ip, asr #3
   11d40:	cmp	r2, #0
   11d44:	cmpne	r3, #0
   11d48:	push	{r4, lr}
   11d4c:	sub	sp, sp, #8
   11d50:	beq	11dbc <sprintf@plt+0x7bc>
   11d54:	eor	r1, r1, #1
   11d58:	cmp	r0, #0
   11d5c:	orreq	r1, r1, #1
   11d60:	cmp	r1, #0
   11d64:	mov	r4, r3
   11d68:	ldr	r1, [pc, #80]	; 11dc0 <sprintf@plt+0x7c0>
   11d6c:	bne	11d98 <sprintf@plt+0x798>
   11d70:	str	r0, [sp]
   11d74:	mov	r3, r2
   11d78:	ldr	r0, [r1]
   11d7c:	mov	r2, r4
   11d80:	ldr	r1, [pc, #60]	; 11dc4 <sprintf@plt+0x7c4>
   11d84:	bl	11564 <rb_helper_write@plt>
   11d88:	mov	r0, r4
   11d8c:	add	sp, sp, #8
   11d90:	pop	{r4, lr}
   11d94:	b	113cc <free@plt>
   11d98:	mov	r3, r2
   11d9c:	ldr	r0, [r1]
   11da0:	mov	r2, r4
   11da4:	ldr	r1, [pc, #28]	; 11dc8 <sprintf@plt+0x7c8>
   11da8:	bl	11564 <rb_helper_write@plt>
   11dac:	mov	r0, r4
   11db0:	add	sp, sp, #8
   11db4:	pop	{r4, lr}
   11db8:	b	113cc <free@plt>
   11dbc:	bl	1160c <sprintf@plt+0xc>
   11dc0:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   11dc4:	andeq	r9, r1, r0, asr #4
   11dc8:	andeq	r9, r1, r4, lsr r2
   11dcc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11dd0:	mov	r8, r0
   11dd4:	mov	r5, r1
   11dd8:	mov	r0, #1
   11ddc:	mov	r1, #160	; 0xa0
   11de0:	mov	r6, r2
   11de4:	mov	r9, r3
   11de8:	bl	1133c <calloc@plt>
   11dec:	subs	r4, r0, #0
   11df0:	beq	11e68 <sprintf@plt+0x868>
   11df4:	cmp	r5, #2
   11df8:	moveq	r3, #52	; 0x34
   11dfc:	streq	r3, [r4, #8]
   11e00:	moveq	r2, #1
   11e04:	beq	11e28 <sprintf@plt+0x828>
   11e08:	cmp	r5, #10
   11e0c:	moveq	r3, #54	; 0x36
   11e10:	streq	r3, [r4, #8]
   11e14:	moveq	r2, #28
   11e18:	beq	11e28 <sprintf@plt+0x828>
   11e1c:	bl	113cc <free@plt>
   11e20:	mov	r0, #0
   11e24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e28:	ldr	r3, [pc, #60]	; 11e6c <sprintf@plt+0x86c>
   11e2c:	str	r6, [r4, #152]	; 0x98
   11e30:	ldr	r1, [pc, #56]	; 11e70 <sprintf@plt+0x870>
   11e34:	ldrd	r6, [r3]
   11e38:	mov	r0, r8
   11e3c:	str	r1, [r4, #4]
   11e40:	strd	r6, [r4, #144]	; 0x90
   11e44:	adds	r6, r6, #1
   11e48:	adc	r7, r7, #0
   11e4c:	str	r9, [r4, #156]	; 0x9c
   11e50:	str	r4, [r4]
   11e54:	mov	r1, r4
   11e58:	strd	r6, [r3]
   11e5c:	bl	137d0 <sprintf@plt+0x21d0>
   11e60:	mov	r0, r4
   11e64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e68:	bl	114d4 <rb_outofmemory@plt>
   11e6c:	andeq	pc, r2, r8, ror pc	; <UNPREDICTABLE>
   11e70:	andeq	r1, r1, r4, ror #22
   11e74:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e78:	mov	r5, r0
   11e7c:	mov	r8, r1
   11e80:	mov	r0, #1
   11e84:	mov	r1, #160	; 0xa0
   11e88:	mov	r7, r2
   11e8c:	bl	1133c <calloc@plt>
   11e90:	subs	r4, r0, #0
   11e94:	beq	11f24 <sprintf@plt+0x924>
   11e98:	add	r6, r4, #12
   11e9c:	mov	r0, r5
   11ea0:	mov	r1, r6
   11ea4:	bl	11414 <rb_inet_pton_sock@plt>
   11ea8:	subs	r5, r0, #0
   11eac:	beq	11ed4 <sprintf@plt+0x8d4>
   11eb0:	ldrh	r3, [r4, #12]
   11eb4:	cmp	r3, #2
   11eb8:	moveq	r3, #82	; 0x52
   11ebc:	streq	r3, [r4, #8]
   11ec0:	beq	11ee4 <sprintf@plt+0x8e4>
   11ec4:	cmp	r3, #10
   11ec8:	moveq	r3, #83	; 0x53
   11ecc:	streq	r3, [r4, #8]
   11ed0:	beq	11ee4 <sprintf@plt+0x8e4>
   11ed4:	mov	r0, r4
   11ed8:	bl	113cc <free@plt>
   11edc:	mov	r0, #0
   11ee0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ee4:	ldr	r3, [pc, #60]	; 11f28 <sprintf@plt+0x928>
   11ee8:	str	r8, [r4, #152]	; 0x98
   11eec:	ldr	r2, [pc, #56]	; 11f2c <sprintf@plt+0x92c>
   11ef0:	ldrd	r8, [r3]
   11ef4:	mov	r0, r6
   11ef8:	str	r7, [r4, #156]	; 0x9c
   11efc:	adds	sl, r8, #1
   11f00:	adc	fp, r9, #0
   11f04:	str	r4, [r4]
   11f08:	strd	r8, [r4, #144]	; 0x90
   11f0c:	str	r2, [r4, #4]
   11f10:	mov	r1, r4
   11f14:	strd	sl, [r3]
   11f18:	bl	138ec <sprintf@plt+0x22ec>
   11f1c:	mov	r0, r4
   11f20:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f24:	bl	114d4 <rb_outofmemory@plt>
   11f28:	andeq	pc, r2, r8, ror pc	; <UNPREDICTABLE>
   11f2c:	andeq	r1, r1, r4, lsl #25
   11f30:	mov	r3, #0
   11f34:	str	r3, [r0, #156]	; 0x9c
   11f38:	str	r3, [r0, #152]	; 0x98
   11f3c:	bx	lr
   11f40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f44:	mov	r4, r1
   11f48:	ldr	r5, [r1, #4]
   11f4c:	mov	r0, r5
   11f50:	bl	11420 <strlen@plt>
   11f54:	add	r6, r0, #1
   11f58:	mov	r0, r6
   11f5c:	bl	11504 <malloc@plt>
   11f60:	subs	r7, r0, #0
   11f64:	beq	12100 <sprintf@plt+0xb00>
   11f68:	mov	r2, r6
   11f6c:	mov	r1, r5
   11f70:	bl	11444 <memcpy@plt>
   11f74:	ldr	r3, [r4, #8]
   11f78:	ldr	r4, [r4, #12]
   11f7c:	ldrb	r2, [r3]
   11f80:	sub	r3, r2, #52	; 0x34
   11f84:	cmp	r3, #31
   11f88:	ldrls	pc, [pc, r3, lsl #2]
   11f8c:	b	120ec <sprintf@plt+0xaec>
   11f90:	andeq	r2, r1, r8, asr #1
   11f94:	andeq	r2, r1, ip, ror #1
   11f98:	andeq	r2, r1, ip, rrx
   11f9c:	andeq	r2, r1, ip, ror #1
   11fa0:	andeq	r2, r1, ip, ror #1
   11fa4:	andeq	r2, r1, ip, ror #1
   11fa8:	andeq	r2, r1, ip, ror #1
   11fac:	andeq	r2, r1, ip, ror #1
   11fb0:	andeq	r2, r1, ip, ror #1
   11fb4:	andeq	r2, r1, ip, ror #1
   11fb8:	andeq	r2, r1, ip, ror #1
   11fbc:	andeq	r2, r1, ip, ror #1
   11fc0:	andeq	r2, r1, ip, ror #1
   11fc4:	andeq	r2, r1, ip, ror #1
   11fc8:	andeq	r2, r1, ip, ror #1
   11fcc:	andeq	r2, r1, ip, ror #1
   11fd0:	andeq	r2, r1, ip, ror #1
   11fd4:	andeq	r2, r1, ip, ror #1
   11fd8:	andeq	r2, r1, ip, ror #1
   11fdc:	andeq	r2, r1, ip, ror #1
   11fe0:	andeq	r2, r1, ip, ror #1
   11fe4:	andeq	r2, r1, ip, ror #1
   11fe8:	andeq	r2, r1, ip, ror #1
   11fec:	andeq	r2, r1, ip, ror #1
   11ff0:	andeq	r2, r1, ip, ror #1
   11ff4:	andeq	r2, r1, ip, ror #1
   11ff8:	andeq	r2, r1, ip, ror #1
   11ffc:	andeq	r2, r1, ip, ror #1
   12000:	andeq	r2, r1, ip, ror #1
   12004:	andeq	r2, r1, ip, ror #1
   12008:	andeq	r2, r1, r0, lsl r0
   1200c:	andeq	r2, r1, r0, lsl r0
   12010:	mov	r1, #160	; 0xa0
   12014:	mov	r0, #1
   12018:	bl	1133c <calloc@plt>
   1201c:	subs	r5, r0, #0
   12020:	beq	12100 <sprintf@plt+0xb00>
   12024:	add	r6, r5, #12
   12028:	mov	r0, r4
   1202c:	mov	r1, r6
   12030:	bl	11414 <rb_inet_pton_sock@plt>
   12034:	cmp	r0, #0
   12038:	beq	12060 <sprintf@plt+0xa60>
   1203c:	ldrh	r3, [r5, #12]
   12040:	cmp	r3, #2
   12044:	moveq	r3, #82	; 0x52
   12048:	streq	r3, [r5, #8]
   1204c:	beq	12104 <sprintf@plt+0xb04>
   12050:	cmp	r3, #10
   12054:	moveq	r3, #83	; 0x53
   12058:	streq	r3, [r5, #8]
   1205c:	beq	12104 <sprintf@plt+0xb04>
   12060:	mov	r0, r5
   12064:	bl	113cc <free@plt>
   12068:	bl	1160c <sprintf@plt+0xc>
   1206c:	mov	r1, #160	; 0xa0
   12070:	mov	r0, #1
   12074:	bl	1133c <calloc@plt>
   12078:	subs	r1, r0, #0
   1207c:	movne	r3, #54	; 0x36
   12080:	movne	r2, #28
   12084:	strne	r3, [r1, #8]
   12088:	beq	12100 <sprintf@plt+0xb00>
   1208c:	ldr	r3, [pc, #176]	; 12144 <sprintf@plt+0xb44>
   12090:	ldr	lr, [pc, #176]	; 12148 <sprintf@plt+0xb48>
   12094:	ldr	ip, [pc, #176]	; 1214c <sprintf@plt+0xb4c>
   12098:	ldrd	r8, [r3]
   1209c:	str	r7, [r1, #156]	; 0x9c
   120a0:	mov	r0, r4
   120a4:	strd	r8, [r1, #144]	; 0x90
   120a8:	adds	r8, r8, #1
   120ac:	adc	r9, r9, #0
   120b0:	str	lr, [r1, #152]	; 0x98
   120b4:	strd	r8, [r3]
   120b8:	str	r1, [r1]
   120bc:	str	ip, [r1, #4]
   120c0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   120c4:	b	137d0 <sprintf@plt+0x21d0>
   120c8:	mov	r1, #160	; 0xa0
   120cc:	mov	r0, #1
   120d0:	bl	1133c <calloc@plt>
   120d4:	subs	r1, r0, #0
   120d8:	beq	12100 <sprintf@plt+0xb00>
   120dc:	mov	r3, #52	; 0x34
   120e0:	str	r3, [r1, #8]
   120e4:	mov	r2, #1
   120e8:	b	1208c <sprintf@plt+0xa8c>
   120ec:	mov	r0, #67	; 0x43
   120f0:	ldr	r1, [pc, #88]	; 12150 <sprintf@plt+0xb50>
   120f4:	bl	122d8 <sprintf@plt+0xcd8>
   120f8:	mov	r0, #2
   120fc:	bl	115e8 <exit@plt>
   12100:	bl	114d4 <rb_outofmemory@plt>
   12104:	ldr	ip, [pc, #56]	; 12144 <sprintf@plt+0xb44>
   12108:	ldr	lr, [pc, #56]	; 12148 <sprintf@plt+0xb48>
   1210c:	ldr	r1, [pc, #64]	; 12154 <sprintf@plt+0xb54>
   12110:	ldrd	r2, [ip]
   12114:	str	r1, [r5, #4]
   12118:	str	r7, [r5, #156]	; 0x9c
   1211c:	strd	r2, [r5, #144]	; 0x90
   12120:	adds	r2, r2, #1
   12124:	adc	r3, r3, #0
   12128:	str	r5, [r5]
   1212c:	mov	r0, r6
   12130:	str	lr, [r5, #152]	; 0x98
   12134:	mov	r1, r5
   12138:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1213c:	strd	r2, [ip]
   12140:	b	138ec <sprintf@plt+0x22ec>
   12144:	andeq	pc, r2, r8, ror pc	; <UNPREDICTABLE>
   12148:	andeq	r1, r1, r0, asr #26
   1214c:	andeq	r1, r1, r4, ror #22
   12150:	andeq	r9, r1, r0, asr r2
   12154:	andeq	r1, r1, r4, lsl #25
   12158:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1215c:	sub	sp, sp, #612	; 0x264
   12160:	ldr	r9, [pc, #240]	; 12258 <sprintf@plt+0xc58>
   12164:	stm	sp, {r0, r1}
   12168:	ldr	r3, [r9]
   1216c:	cmp	r3, #0
   12170:	beq	12238 <sprintf@plt+0xc38>
   12174:	addle	r8, sp, #68	; 0x44
   12178:	ble	12200 <sprintf@plt+0xc00>
   1217c:	mov	r6, #0
   12180:	ldr	r7, [pc, #212]	; 1225c <sprintf@plt+0xc5c>
   12184:	ldr	fp, [pc, #212]	; 12260 <sprintf@plt+0xc60>
   12188:	mov	r4, r6
   1218c:	mov	sl, #53	; 0x35
   12190:	mov	r2, sl
   12194:	add	r1, sp, #12
   12198:	mov	r0, r7
   1219c:	bl	11528 <rb_inet_ntop_sock@plt>
   121a0:	ldrb	r3, [sp, #12]
   121a4:	cmp	r3, #0
   121a8:	beq	12218 <sprintf@plt+0xc18>
   121ac:	add	r0, sp, #12
   121b0:	bl	11420 <strlen@plt>
   121b4:	add	r8, sp, #68	; 0x44
   121b8:	add	r3, sp, #12
   121bc:	rsb	r1, r4, #540	; 0x21c
   121c0:	mov	r2, fp
   121c4:	add	r6, r6, #1
   121c8:	add	r7, r7, #128	; 0x80
   121cc:	mov	r5, r0
   121d0:	add	r0, r8, r4
   121d4:	bl	11594 <snprintf@plt>
   121d8:	ldr	r3, [r9]
   121dc:	add	r5, r5, #1
   121e0:	cmp	r3, r6
   121e4:	add	r4, r4, r5
   121e8:	bgt	12190 <sprintf@plt+0xb90>
   121ec:	cmp	r4, #0
   121f0:	addne	r3, sp, #608	; 0x260
   121f4:	addne	r4, r3, r4
   121f8:	movne	r3, #0
   121fc:	strbne	r3, [r4, #-541]	; 0xfffffde3
   12200:	mov	r3, r8
   12204:	ldm	sp, {r0, r1}
   12208:	ldr	r2, [pc, #84]	; 12264 <sprintf@plt+0xc64>
   1220c:	bl	12334 <sprintf@plt+0xd34>
   12210:	add	sp, sp, #612	; 0x264
   12214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12218:	ldr	r1, [pc, #72]	; 12268 <sprintf@plt+0xc68>
   1221c:	mov	r0, #67	; 0x43
   12220:	bl	122d8 <sprintf@plt+0xcd8>
   12224:	ldm	sp, {r0, r1}
   12228:	ldr	r2, [pc, #60]	; 1226c <sprintf@plt+0xc6c>
   1222c:	bl	1239c <sprintf@plt+0xd9c>
   12230:	mov	r0, #2
   12234:	bl	115e8 <exit@plt>
   12238:	ldr	r1, [pc, #48]	; 12270 <sprintf@plt+0xc70>
   1223c:	mov	r0, #67	; 0x43
   12240:	bl	122d8 <sprintf@plt+0xcd8>
   12244:	ldm	sp, {r0, r1}
   12248:	ldr	r2, [pc, #36]	; 12274 <sprintf@plt+0xc74>
   1224c:	bl	1239c <sprintf@plt+0xd9c>
   12250:	mov	r0, #2
   12254:	bl	115e8 <exit@plt>
   12258:	ldrdeq	pc, [r2], -r4
   1225c:	muleq	r3, r4, r2
   12260:	ldrdeq	r9, [r1], -r8
   12264:	muleq	r1, ip, sp
   12268:	andeq	r9, r1, ip, lsr #5
   1226c:	andeq	r9, r1, r4, asr #5
   12270:	andeq	r9, r1, r4, lsl #5
   12274:	muleq	r1, ip, r2
   12278:	b	13714 <sprintf@plt+0x2114>
   1227c:	push	{r1, r2, r3}
   12280:	mov	r1, #512	; 0x200
   12284:	push	{r4, lr}
   12288:	sub	sp, sp, #524	; 0x20c
   1228c:	add	ip, sp, #536	; 0x218
   12290:	mov	r3, ip
   12294:	mov	r4, r0
   12298:	ldr	r2, [sp, #532]	; 0x214
   1229c:	add	r0, sp, #8
   122a0:	str	ip, [sp, #4]
   122a4:	bl	112dc <vsnprintf@plt>
   122a8:	ldr	r1, [pc, #32]	; 122d0 <sprintf@plt+0xcd0>
   122ac:	add	r3, sp, #8
   122b0:	mov	r2, r4
   122b4:	ldr	r0, [r1]
   122b8:	ldr	r1, [pc, #20]	; 122d4 <sprintf@plt+0xcd4>
   122bc:	bl	11564 <rb_helper_write@plt>
   122c0:	add	sp, sp, #524	; 0x20c
   122c4:	pop	{r4, lr}
   122c8:	add	sp, sp, #12
   122cc:	bx	lr
   122d0:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   122d4:	ldrdeq	r9, [r1], -ip
   122d8:	push	{r1, r2, r3}
   122dc:	mov	r1, #512	; 0x200
   122e0:	push	{r4, lr}
   122e4:	sub	sp, sp, #524	; 0x20c
   122e8:	add	ip, sp, #536	; 0x218
   122ec:	mov	r3, ip
   122f0:	mov	r4, r0
   122f4:	ldr	r2, [sp, #532]	; 0x214
   122f8:	add	r0, sp, #8
   122fc:	str	ip, [sp, #4]
   12300:	bl	112dc <vsnprintf@plt>
   12304:	ldr	r1, [pc, #32]	; 1232c <sprintf@plt+0xd2c>
   12308:	add	r3, sp, #8
   1230c:	mov	r2, r4
   12310:	ldr	r0, [r1]
   12314:	ldr	r1, [pc, #20]	; 12330 <sprintf@plt+0xd30>
   12318:	bl	11564 <rb_helper_write@plt>
   1231c:	add	sp, sp, #524	; 0x20c
   12320:	pop	{r4, lr}
   12324:	add	sp, sp, #12
   12328:	bx	lr
   1232c:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   12330:	andeq	r9, r1, r8, ror #5
   12334:	push	{r2, r3}
   12338:	push	{r4, r5, r6, lr}
   1233c:	sub	sp, sp, #528	; 0x210
   12340:	add	ip, sp, #548	; 0x224
   12344:	add	r4, sp, #16
   12348:	mov	r3, ip
   1234c:	mov	r5, r0
   12350:	mov	r6, r1
   12354:	ldr	r2, [sp, #544]	; 0x220
   12358:	mov	r0, r4
   1235c:	mov	r1, #512	; 0x200
   12360:	str	ip, [sp, #12]
   12364:	bl	112dc <vsnprintf@plt>
   12368:	ldr	r2, [pc, #36]	; 12394 <sprintf@plt+0xd94>
   1236c:	str	r4, [sp]
   12370:	mov	r3, r6
   12374:	ldr	r0, [r2]
   12378:	ldr	r1, [pc, #24]	; 12398 <sprintf@plt+0xd98>
   1237c:	mov	r2, r5
   12380:	bl	11564 <rb_helper_write@plt>
   12384:	add	sp, sp, #528	; 0x210
   12388:	pop	{r4, r5, r6, lr}
   1238c:	add	sp, sp, #8
   12390:	bx	lr
   12394:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   12398:	strdeq	r9, [r1], -r4
   1239c:	push	{r2, r3}
   123a0:	push	{r4, r5, r6, lr}
   123a4:	sub	sp, sp, #528	; 0x210
   123a8:	add	ip, sp, #548	; 0x224
   123ac:	add	r4, sp, #16
   123b0:	mov	r3, ip
   123b4:	mov	r5, r0
   123b8:	mov	r6, r1
   123bc:	ldr	r2, [sp, #544]	; 0x220
   123c0:	mov	r0, r4
   123c4:	mov	r1, #512	; 0x200
   123c8:	str	ip, [sp, #12]
   123cc:	bl	112dc <vsnprintf@plt>
   123d0:	ldr	r2, [pc, #36]	; 123fc <sprintf@plt+0xdfc>
   123d4:	str	r4, [sp]
   123d8:	mov	r3, r6
   123dc:	ldr	r0, [r2]
   123e0:	ldr	r1, [pc, #24]	; 12400 <sprintf@plt+0xe00>
   123e4:	mov	r2, r5
   123e8:	bl	11564 <rb_helper_write@plt>
   123ec:	add	sp, sp, #528	; 0x210
   123f0:	pop	{r4, r5, r6, lr}
   123f4:	add	sp, sp, #8
   123f8:	bx	lr
   123fc:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   12400:	andeq	r9, r1, r0, lsl #6
   12404:	ldr	ip, [pc, #16]	; 1241c <sprintf@plt+0xe1c>
   12408:	mov	r3, r1
   1240c:	mov	r2, r0
   12410:	ldr	r1, [pc, #8]	; 12420 <sprintf@plt+0xe20>
   12414:	ldr	r0, [ip]
   12418:	b	11564 <rb_helper_write@plt>
   1241c:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   12420:	andeq	r9, r1, ip, lsl #6
   12424:	sub	r0, r1, r0
   12428:	bx	lr
   1242c:	push	{r4, r5, r6, r7, r8, lr}
   12430:	sub	sp, sp, #8
   12434:	bl	1142c <rb_current_time@plt>
   12438:	ldr	r5, [pc, #236]	; 1252c <sprintf@plt+0xf2c>
   1243c:	mov	r1, sp
   12440:	ldr	r7, [pc, #232]	; 12530 <sprintf@plt+0xf30>
   12444:	mov	r6, r0
   12448:	ldr	r0, [r5]
   1244c:	bl	11408 <rb_dictionary_foreach_start@plt>
   12450:	mov	r1, sp
   12454:	ldr	r0, [r5]
   12458:	bl	11324 <rb_dictionary_foreach_cur@plt>
   1245c:	subs	r8, r0, #0
   12460:	beq	12524 <sprintf@plt+0xf24>
   12464:	ldr	r3, [r8, #460]	; 0x1cc
   12468:	ldr	r4, [r7]
   1246c:	add	r3, r3, #1
   12470:	cmp	r4, #0
   12474:	str	r3, [r8, #460]	; 0x1cc
   12478:	bne	1248c <sprintf@plt+0xe8c>
   1247c:	b	124dc <sprintf@plt+0xedc>
   12480:	ldr	r4, [r4, #8]
   12484:	cmp	r4, #0
   12488:	beq	124d8 <sprintf@plt+0xed8>
   1248c:	ldr	r2, [r4]
   12490:	ldr	r3, [r8, #464]	; 0x1d0
   12494:	ldr	r1, [r2, #12]
   12498:	add	r3, r3, r1, lsl #4
   1249c:	ldr	r1, [r3, #12]
   124a0:	cmp	r1, #1
   124a4:	bne	12480 <sprintf@plt+0xe80>
   124a8:	ldr	r2, [r2, #40]	; 0x28
   124ac:	cmp	r2, #0
   124b0:	beq	12480 <sprintf@plt+0xe80>
   124b4:	ldr	r3, [r3, #4]
   124b8:	cmp	r3, #0
   124bc:	cmpgt	r6, r3
   124c0:	ble	12480 <sprintf@plt+0xe80>
   124c4:	mov	r0, r8
   124c8:	blx	r2
   124cc:	ldr	r4, [r4, #8]
   124d0:	cmp	r4, #0
   124d4:	bne	1248c <sprintf@plt+0xe8c>
   124d8:	ldr	r3, [r8, #460]	; 0x1cc
   124dc:	sub	r3, r3, #1
   124e0:	cmp	r3, #0
   124e4:	str	r3, [r8, #460]	; 0x1cc
   124e8:	beq	124fc <sprintf@plt+0xefc>
   124ec:	mov	r1, sp
   124f0:	ldr	r0, [r5]
   124f4:	bl	113c0 <rb_dictionary_foreach_next@plt>
   124f8:	b	12450 <sprintf@plt+0xe50>
   124fc:	ldr	r1, [r8]
   12500:	ldr	r0, [r5]
   12504:	bl	11438 <rb_dictionary_delete@plt>
   12508:	ldr	r0, [r8, #464]	; 0x1d0
   1250c:	cmp	r0, #0
   12510:	beq	12518 <sprintf@plt+0xf18>
   12514:	bl	113cc <free@plt>
   12518:	mov	r0, r8
   1251c:	bl	113cc <free@plt>
   12520:	b	124ec <sprintf@plt+0xeec>
   12524:	add	sp, sp, #8
   12528:	pop	{r4, r5, r6, r7, r8, pc}
   1252c:	andeq	r0, r3, r0, ror r1
   12530:	andeq	r0, r3, r4, ror r1
   12534:	push	{r3}		; (str r3, [sp, #-4]!)
   12538:	mov	r1, #512	; 0x200
   1253c:	push	{r4, r5, lr}
   12540:	sub	sp, sp, #536	; 0x218
   12544:	add	ip, sp, #552	; 0x228
   12548:	add	r4, sp, #24
   1254c:	mov	r5, r0
   12550:	mov	r3, ip
   12554:	ldr	r2, [pc, #192]	; 1261c <sprintf@plt+0x101c>
   12558:	mov	r0, r4
   1255c:	str	ip, [sp, #20]
   12560:	bl	112dc <vsnprintf@plt>
   12564:	mov	r3, r5
   12568:	ldr	r0, [pc, #176]	; 12620 <sprintf@plt+0x1020>
   1256c:	ldr	r2, [r3], #376	; 0x178
   12570:	ldr	r1, [pc, #172]	; 12624 <sprintf@plt+0x1024>
   12574:	add	ip, r5, #440	; 0x1b8
   12578:	ldr	r0, [r0]
   1257c:	str	r3, [sp, #4]
   12580:	str	r1, [sp, #8]
   12584:	mov	r3, #42	; 0x2a
   12588:	str	r4, [sp, #12]
   1258c:	str	ip, [sp]
   12590:	ldr	r1, [pc, #144]	; 12628 <sprintf@plt+0x1028>
   12594:	bl	11564 <rb_helper_write@plt>
   12598:	ldrb	r3, [r5, #452]	; 0x1c4
   1259c:	cmp	r3, #0
   125a0:	bne	125b8 <sprintf@plt+0xfb8>
   125a4:	ldr	r2, [r5, #456]	; 0x1c8
   125a8:	mov	r3, #1
   125ac:	cmp	r2, #0
   125b0:	strb	r3, [r5, #452]	; 0x1c4
   125b4:	bne	125c8 <sprintf@plt+0xfc8>
   125b8:	add	sp, sp, #536	; 0x218
   125bc:	pop	{r4, r5, lr}
   125c0:	add	sp, sp, #4
   125c4:	bx	lr
   125c8:	ldr	r3, [pc, #92]	; 1262c <sprintf@plt+0x102c>
   125cc:	ldr	r4, [r3]
   125d0:	cmp	r4, #0
   125d4:	bne	125e8 <sprintf@plt+0xfe8>
   125d8:	b	125b8 <sprintf@plt+0xfb8>
   125dc:	ldr	r4, [r4, #8]
   125e0:	cmp	r4, #0
   125e4:	beq	125b8 <sprintf@plt+0xfb8>
   125e8:	ldr	r3, [r4]
   125ec:	ldr	r2, [r3, #36]	; 0x24
   125f0:	cmp	r2, #0
   125f4:	beq	125dc <sprintf@plt+0xfdc>
   125f8:	ldr	r1, [r3, #12]
   125fc:	ldr	r3, [r5, #464]	; 0x1d0
   12600:	add	r3, r3, r1, lsl #4
   12604:	ldr	r3, [r3, #12]
   12608:	cmp	r3, #1
   1260c:	bne	125dc <sprintf@plt+0xfdc>
   12610:	mov	r0, r5
   12614:	blx	r2
   12618:	b	125dc <sprintf@plt+0xfdc>
   1261c:	andeq	r9, r1, r0, lsr #6
   12620:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   12624:	andeq	r9, r1, ip, ror r3
   12628:	andeq	r9, r1, r4, ror #6
   1262c:	andeq	r0, r3, r4, ror r1
   12630:	push	{r4, r5, r6, r7, r8, lr}
   12634:	sub	sp, sp, #8
   12638:	ldr	r6, [pc, #328]	; 12788 <sprintf@plt+0x1188>
   1263c:	mov	r1, sp
   12640:	ldr	r8, [pc, #324]	; 1278c <sprintf@plt+0x118c>
   12644:	ldr	r0, [r6]
   12648:	bl	11408 <rb_dictionary_foreach_start@plt>
   1264c:	ldr	r7, [pc, #316]	; 12790 <sprintf@plt+0x1190>
   12650:	mvn	r5, #0
   12654:	b	12664 <sprintf@plt+0x1064>
   12658:	mov	r1, sp
   1265c:	ldr	r0, [r6]
   12660:	bl	113c0 <rb_dictionary_foreach_next@plt>
   12664:	mov	r1, sp
   12668:	ldr	r0, [r6]
   1266c:	bl	11324 <rb_dictionary_foreach_cur@plt>
   12670:	mov	r3, r8
   12674:	mov	r2, r7
   12678:	mov	r1, r5
   1267c:	subs	r4, r0, #0
   12680:	beq	126d0 <sprintf@plt+0x10d0>
   12684:	ldr	ip, [r4, #460]	; 0x1cc
   12688:	add	ip, ip, #1
   1268c:	str	ip, [r4, #460]	; 0x1cc
   12690:	bl	12534 <sprintf@plt+0xf34>
   12694:	ldr	r3, [r4, #460]	; 0x1cc
   12698:	sub	r3, r3, #1
   1269c:	cmp	r3, #0
   126a0:	str	r3, [r4, #460]	; 0x1cc
   126a4:	bne	12658 <sprintf@plt+0x1058>
   126a8:	ldr	r1, [r4]
   126ac:	ldr	r0, [r6]
   126b0:	bl	11438 <rb_dictionary_delete@plt>
   126b4:	ldr	r3, [r4, #464]	; 0x1d0
   126b8:	subs	r0, r3, #0
   126bc:	beq	126c4 <sprintf@plt+0x10c4>
   126c0:	bl	113cc <free@plt>
   126c4:	mov	r0, r4
   126c8:	bl	113cc <free@plt>
   126cc:	b	12658 <sprintf@plt+0x1058>
   126d0:	ldr	r8, [pc, #188]	; 12794 <sprintf@plt+0x1194>
   126d4:	ldr	r5, [r8]
   126d8:	cmp	r5, #0
   126dc:	beq	12764 <sprintf@plt+0x1164>
   126e0:	ldr	r7, [r5, #8]
   126e4:	b	1270c <sprintf@plt+0x110c>
   126e8:	sub	r1, r1, #1
   126ec:	cmp	r7, #0
   126f0:	str	r3, [r2, #8]
   126f4:	str	r4, [r5, #4]
   126f8:	str	r4, [r5, #8]
   126fc:	str	r1, [r8, #8]
   12700:	beq	12764 <sprintf@plt+0x1164>
   12704:	mov	r5, r7
   12708:	ldr	r7, [r7, #8]
   1270c:	ldr	r3, [r5]
   12710:	ldr	r3, [r3, #28]
   12714:	cmp	r3, #0
   12718:	moveq	r3, r7
   1271c:	beq	12728 <sprintf@plt+0x1128>
   12720:	blx	r3
   12724:	ldr	r3, [r5, #8]
   12728:	ldr	r2, [r5, #4]
   1272c:	cmp	r3, #0
   12730:	strne	r2, [r3, #4]
   12734:	ldrne	r2, [r5, #4]
   12738:	streq	r2, [r8, #4]
   1273c:	cmp	r2, #0
   12740:	ldr	r1, [r8, #8]
   12744:	bne	126e8 <sprintf@plt+0x10e8>
   12748:	sub	r1, r1, #1
   1274c:	cmp	r7, #0
   12750:	str	r2, [r5, #4]
   12754:	str	r2, [r5, #8]
   12758:	str	r3, [r8]
   1275c:	str	r1, [r8, #8]
   12760:	bne	12704 <sprintf@plt+0x1104>
   12764:	mov	r2, #0
   12768:	ldr	r0, [r6]
   1276c:	mov	r1, r2
   12770:	bl	1148c <rb_dictionary_destroy@plt>
   12774:	ldr	r3, [pc, #28]	; 12798 <sprintf@plt+0x1198>
   12778:	ldr	r0, [r3]
   1277c:	bl	112ac <rb_event_delete@plt>
   12780:	add	sp, sp, #8
   12784:	pop	{r4, r5, r6, r7, r8, pc}
   12788:	andeq	r0, r3, r0, ror r1
   1278c:	andeq	r9, r1, r0, lsr #6
   12790:	andeq	r9, r1, ip, ror r3
   12794:	andeq	r0, r3, r4, ror r1
   12798:	andeq	pc, r2, r0, lsl #31
   1279c:	ldr	r3, [pc, #308]	; 128d8 <sprintf@plt+0x12d8>
   127a0:	push	{r4, r5, r6, lr}
   127a4:	mov	r5, r0
   127a8:	ldr	r2, [r3, #12]
   127ac:	cmp	r2, #0
   127b0:	bne	12868 <sprintf@plt+0x1268>
   127b4:	ldr	r2, [r3, #16]
   127b8:	cmn	r2, #1
   127bc:	cmpne	r2, #32
   127c0:	addne	r1, r2, #1
   127c4:	strne	r2, [r0, #12]
   127c8:	strne	r1, [r3, #16]
   127cc:	beq	128c8 <sprintf@plt+0x12c8>
   127d0:	ldr	r4, [r5, #56]	; 0x38
   127d4:	cmp	r4, #0
   127d8:	beq	12804 <sprintf@plt+0x1204>
   127dc:	ldr	r1, [r4]
   127e0:	cmp	r1, #0
   127e4:	beq	12804 <sprintf@plt+0x1204>
   127e8:	ldr	r6, [pc, #236]	; 128dc <sprintf@plt+0x12dc>
   127ec:	mov	r2, r4
   127f0:	ldr	r0, [r6]
   127f4:	bl	114ec <rb_dictionary_add@plt>
   127f8:	ldr	r1, [r4, #12]!
   127fc:	cmp	r1, #0
   12800:	bne	127ec <sprintf@plt+0x11ec>
   12804:	ldrb	r3, [r5, #48]	; 0x30
   12808:	cmp	r3, #0
   1280c:	bne	12858 <sprintf@plt+0x1258>
   12810:	ldr	r3, [r5, #24]
   12814:	cmp	r3, #0
   12818:	beq	12820 <sprintf@plt+0x1220>
   1281c:	blx	r3
   12820:	ldr	r3, [pc, #184]	; 128e0 <sprintf@plt+0x12e0>
   12824:	mov	r1, #0
   12828:	str	r5, [r5]
   1282c:	ldr	r2, [r3]
   12830:	str	r1, [r5, #4]
   12834:	cmp	r2, r1
   12838:	str	r2, [r5, #8]
   1283c:	strne	r5, [r2, #4]
   12840:	beq	128b8 <sprintf@plt+0x12b8>
   12844:	ldr	r2, [r3, #8]
   12848:	str	r5, [r3]
   1284c:	add	r2, r2, #1
   12850:	str	r2, [r3, #8]
   12854:	pop	{r4, r5, r6, pc}
   12858:	ldr	r2, [pc, #132]	; 128e4 <sprintf@plt+0x12e4>
   1285c:	ldr	r1, [r5, #52]	; 0x34
   12860:	str	r1, [r2, r3, lsl #2]
   12864:	b	12810 <sprintf@plt+0x1210>
   12868:	ldr	r1, [r3, #4]
   1286c:	sub	r2, r2, #1
   12870:	ldr	r0, [r1, #8]
   12874:	ldr	ip, [r1]
   12878:	cmp	r0, #0
   1287c:	str	ip, [r5, #12]
   12880:	ldr	ip, [r1, #4]
   12884:	strne	ip, [r0, #4]
   12888:	ldrne	ip, [r1, #4]
   1288c:	streq	ip, [r3, #8]
   12890:	cmp	ip, #0
   12894:	strne	r0, [ip, #8]
   12898:	mov	ip, #0
   1289c:	str	ip, [r1, #4]
   128a0:	str	ip, [r1, #8]
   128a4:	movne	r0, r1
   128a8:	streq	r0, [r3, #4]
   128ac:	str	r2, [r3, #12]
   128b0:	bl	11450 <rb_free_rb_dlink_node@plt>
   128b4:	b	127d0 <sprintf@plt+0x11d0>
   128b8:	ldr	r2, [r3, #4]
   128bc:	cmp	r2, #0
   128c0:	streq	r5, [r3, #4]
   128c4:	b	12844 <sprintf@plt+0x1244>
   128c8:	ldr	r1, [pc, #24]	; 128e8 <sprintf@plt+0x12e8>
   128cc:	mov	r0, #87	; 0x57
   128d0:	pop	{r4, r5, r6, lr}
   128d4:	b	122d8 <sprintf@plt+0xcd8>
   128d8:	andeq	pc, r2, r0, lsl #31
   128dc:	andeq	r0, r3, ip, ror #2
   128e0:	andeq	r0, r3, r4, ror r1
   128e4:	andeq	fp, r2, r4, ror #18
   128e8:	andeq	r9, r1, r4, lsl #7
   128ec:	push	{r4, lr}
   128f0:	ldr	r1, [pc, #76]	; 12944 <sprintf@plt+0x1344>
   128f4:	ldr	r0, [pc, #76]	; 12948 <sprintf@plt+0x1348>
   128f8:	bl	11540 <rb_dictionary_create@plt>
   128fc:	ldr	ip, [pc, #72]	; 1294c <sprintf@plt+0x134c>
   12900:	mov	r2, #0
   12904:	ldr	r1, [pc, #68]	; 12950 <sprintf@plt+0x1350>
   12908:	mov	r3, #1
   1290c:	str	r0, [ip]
   12910:	ldr	r0, [pc, #60]	; 12954 <sprintf@plt+0x1354>
   12914:	bl	11258 <rb_event_addish@plt>
   12918:	ldr	r3, [pc, #56]	; 12958 <sprintf@plt+0x1358>
   1291c:	str	r0, [r3]
   12920:	ldr	r0, [pc, #52]	; 1295c <sprintf@plt+0x135c>
   12924:	bl	1279c <sprintf@plt+0x119c>
   12928:	ldr	r0, [pc, #48]	; 12960 <sprintf@plt+0x1360>
   1292c:	bl	1279c <sprintf@plt+0x119c>
   12930:	ldr	r0, [pc, #44]	; 12964 <sprintf@plt+0x1364>
   12934:	bl	1279c <sprintf@plt+0x119c>
   12938:	ldr	r0, [pc, #40]	; 12968 <sprintf@plt+0x1368>
   1293c:	pop	{r4, lr}
   12940:	b	1279c <sprintf@plt+0x119c>
   12944:	andeq	r2, r1, r4, lsr #8
   12948:			; <UNDEFINED> instruction: 0x000193b4
   1294c:	andeq	r0, r3, r0, ror r1
   12950:	andeq	r2, r1, ip, lsr #8
   12954:	andeq	r9, r1, ip, asr #7
   12958:	andeq	pc, r2, r0, lsl #31
   1295c:	andeq	fp, r2, r8, ror #26
   12960:	andeq	fp, r2, r0, lsr #29
   12964:	andeq	fp, r2, ip, asr #28
   12968:	andeq	fp, r2, r8, ror #27
   1296c:	push	{r4, r5, r6, lr}
   12970:	mov	r5, r0
   12974:	ldr	r4, [r0, #56]	; 0x38
   12978:	cmp	r4, #0
   1297c:	beq	129a4 <sprintf@plt+0x13a4>
   12980:	ldr	r1, [r4]
   12984:	cmp	r1, #0
   12988:	beq	129a4 <sprintf@plt+0x13a4>
   1298c:	ldr	r6, [pc, #256]	; 12a94 <sprintf@plt+0x1494>
   12990:	ldr	r0, [r6]
   12994:	bl	11438 <rb_dictionary_delete@plt>
   12998:	ldr	r1, [r4, #12]!
   1299c:	cmp	r1, #0
   129a0:	bne	12990 <sprintf@plt+0x1390>
   129a4:	ldrb	r3, [r5, #48]	; 0x30
   129a8:	cmp	r3, #0
   129ac:	ldrne	r2, [pc, #228]	; 12a98 <sprintf@plt+0x1498>
   129b0:	movne	r1, #0
   129b4:	strne	r1, [r2, r3, lsl #2]
   129b8:	ldr	r3, [r5, #28]
   129bc:	cmp	r3, #0
   129c0:	beq	129c8 <sprintf@plt+0x13c8>
   129c4:	blx	r3
   129c8:	ldr	r3, [r5, #8]
   129cc:	mov	r4, #0
   129d0:	cmp	r3, #0
   129d4:	ldr	r6, [r5, #12]
   129d8:	ldrne	r1, [r5, #4]
   129dc:	ldreq	r2, [pc, #184]	; 12a9c <sprintf@plt+0x149c>
   129e0:	strne	r1, [r3, #4]
   129e4:	ldreq	r1, [r5, #4]
   129e8:	ldrne	r1, [r5, #4]
   129ec:	ldrne	r2, [pc, #168]	; 12a9c <sprintf@plt+0x149c>
   129f0:	streq	r1, [r2, #4]
   129f4:	cmp	r1, #0
   129f8:	strne	r3, [r1, #8]
   129fc:	streq	r3, [r2]
   12a00:	ldr	r3, [r2, #8]
   12a04:	str	r4, [r5, #4]
   12a08:	sub	r3, r3, #1
   12a0c:	str	r4, [r5, #8]
   12a10:	str	r3, [r2, #8]
   12a14:	bl	11588 <rb_make_rb_dlink_node@plt>
   12a18:	cmp	r6, r4
   12a1c:	beq	12a80 <sprintf@plt+0x1480>
   12a20:	cmp	r0, #0
   12a24:	beq	12a6c <sprintf@plt+0x146c>
   12a28:	ldr	r3, [pc, #112]	; 12aa0 <sprintf@plt+0x14a0>
   12a2c:	str	r6, [r0]
   12a30:	str	r4, [r0, #4]
   12a34:	ldr	r2, [r3, #4]
   12a38:	cmp	r2, #0
   12a3c:	str	r2, [r0, #8]
   12a40:	strne	r0, [r2, #4]
   12a44:	beq	12a5c <sprintf@plt+0x145c>
   12a48:	ldr	r2, [r3, #12]
   12a4c:	str	r0, [r3, #4]
   12a50:	add	r2, r2, #1
   12a54:	str	r2, [r3, #12]
   12a58:	pop	{r4, r5, r6, pc}
   12a5c:	ldr	r2, [r3, #8]
   12a60:	cmp	r2, #0
   12a64:	streq	r0, [r3, #8]
   12a68:	b	12a48 <sprintf@plt+0x1448>
   12a6c:	ldr	r3, [pc, #48]	; 12aa4 <sprintf@plt+0x14a4>
   12a70:	mov	r2, #144	; 0x90
   12a74:	ldr	r1, [pc, #44]	; 12aa8 <sprintf@plt+0x14a8>
   12a78:	ldr	r0, [pc, #44]	; 12aac <sprintf@plt+0x14ac>
   12a7c:	bl	1139c <__assert_fail@plt>
   12a80:	ldr	r3, [pc, #28]	; 12aa4 <sprintf@plt+0x14a4>
   12a84:	mov	r2, #143	; 0x8f
   12a88:	ldr	r1, [pc, #24]	; 12aa8 <sprintf@plt+0x14a8>
   12a8c:	ldr	r0, [pc, #28]	; 12ab0 <sprintf@plt+0x14b0>
   12a90:	bl	1139c <__assert_fail@plt>
   12a94:	andeq	r0, r3, ip, ror #2
   12a98:	andeq	fp, r2, r4, ror #18
   12a9c:	andeq	r0, r3, r4, ror r1
   12aa0:	andeq	pc, r2, r0, lsl #31
   12aa4:	andeq	r9, r1, r4, lsl r3
   12aa8:	andeq	r9, r1, r4, ror #7
   12aac:	andeq	r9, r1, r0, lsl r4
   12ab0:	andeq	r9, r1, r0, lsl #8
   12ab4:	ldr	r3, [pc, #44]	; 12ae8 <sprintf@plt+0x14e8>
   12ab8:	push	{r4, lr}
   12abc:	mov	r4, r0
   12ac0:	ldr	r0, [r3]
   12ac4:	ldr	r1, [r4]
   12ac8:	bl	11438 <rb_dictionary_delete@plt>
   12acc:	ldr	r0, [r4, #464]	; 0x1d0
   12ad0:	cmp	r0, #0
   12ad4:	beq	12adc <sprintf@plt+0x14dc>
   12ad8:	bl	113cc <free@plt>
   12adc:	mov	r0, r4
   12ae0:	pop	{r4, lr}
   12ae4:	b	113cc <free@plt>
   12ae8:	andeq	r0, r3, r0, ror r1
   12aec:	ldrb	r3, [r0, #452]	; 0x1c4
   12af0:	cmp	r3, #0
   12af4:	bxne	lr
   12af8:	ldr	r2, [r0, #456]	; 0x1c8
   12afc:	mov	r3, #1
   12b00:	cmp	r2, #0
   12b04:	strb	r3, [r0, #452]	; 0x1c4
   12b08:	bxeq	lr
   12b0c:	ldr	r3, [pc, #96]	; 12b74 <sprintf@plt+0x1574>
   12b10:	push	{r4, r5, r6, lr}
   12b14:	mov	r5, r0
   12b18:	ldr	r4, [r3]
   12b1c:	cmp	r4, #0
   12b20:	bne	12b34 <sprintf@plt+0x1534>
   12b24:	pop	{r4, r5, r6, pc}
   12b28:	ldr	r4, [r4, #8]
   12b2c:	cmp	r4, #0
   12b30:	beq	12b70 <sprintf@plt+0x1570>
   12b34:	ldr	r3, [r4]
   12b38:	ldr	r2, [r3, #36]	; 0x24
   12b3c:	cmp	r2, #0
   12b40:	beq	12b28 <sprintf@plt+0x1528>
   12b44:	ldr	r1, [r3, #12]
   12b48:	ldr	r3, [r5, #464]	; 0x1d0
   12b4c:	add	r3, r3, r1, lsl #4
   12b50:	ldr	r3, [r3, #12]
   12b54:	cmp	r3, #1
   12b58:	bne	12b28 <sprintf@plt+0x1528>
   12b5c:	mov	r0, r5
   12b60:	blx	r2
   12b64:	ldr	r4, [r4, #8]
   12b68:	cmp	r4, #0
   12b6c:	bne	12b34 <sprintf@plt+0x1534>
   12b70:	pop	{r4, r5, r6, pc}
   12b74:	andeq	r0, r3, r4, ror r1
   12b78:	ldr	r3, [r0, #456]	; 0x1c8
   12b7c:	ldr	r2, [r0, #464]	; 0x1d0
   12b80:	sub	r3, r3, #1
   12b84:	add	r2, r2, r1, lsl #4
   12b88:	push	{r4, r5, r6, lr}
   12b8c:	cmp	r3, #0
   12b90:	mov	r6, r1
   12b94:	mov	r1, #2
   12b98:	str	r1, [r2, #12]
   12b9c:	sub	sp, sp, #8
   12ba0:	mov	r5, r0
   12ba4:	str	r3, [r0, #456]	; 0x1c8
   12ba8:	bne	12bb8 <sprintf@plt+0x15b8>
   12bac:	ldrb	r3, [r0, #451]	; 0x1c3
   12bb0:	cmp	r3, #0
   12bb4:	beq	12c20 <sprintf@plt+0x1620>
   12bb8:	ldr	r3, [pc, #244]	; 12cb4 <sprintf@plt+0x16b4>
   12bbc:	ldr	r4, [r3]
   12bc0:	cmp	r4, #0
   12bc4:	bne	12bd8 <sprintf@plt+0x15d8>
   12bc8:	b	12c18 <sprintf@plt+0x1618>
   12bcc:	ldr	r4, [r4, #8]
   12bd0:	cmp	r4, #0
   12bd4:	beq	12c18 <sprintf@plt+0x1618>
   12bd8:	ldr	r3, [r4]
   12bdc:	ldr	r2, [r3, #44]	; 0x2c
   12be0:	cmp	r2, #0
   12be4:	beq	12bcc <sprintf@plt+0x15cc>
   12be8:	ldr	r1, [r3, #12]
   12bec:	ldr	r3, [r5, #464]	; 0x1d0
   12bf0:	add	r3, r3, r1, lsl #4
   12bf4:	ldr	r3, [r3, #12]
   12bf8:	cmp	r3, #1
   12bfc:	bne	12bcc <sprintf@plt+0x15cc>
   12c00:	mov	r1, r6
   12c04:	mov	r0, r5
   12c08:	blx	r2
   12c0c:	ldr	r4, [r4, #8]
   12c10:	cmp	r4, #0
   12c14:	bne	12bd8 <sprintf@plt+0x15d8>
   12c18:	add	sp, sp, #8
   12c1c:	pop	{r4, r5, r6, pc}
   12c20:	ldr	r2, [pc, #144]	; 12cb8 <sprintf@plt+0x16b8>
   12c24:	mov	r1, r0
   12c28:	add	r3, r0, #440	; 0x1b8
   12c2c:	ldr	r0, [r2]
   12c30:	ldr	r2, [r1], #376	; 0x178
   12c34:	str	r1, [sp]
   12c38:	ldr	r1, [pc, #124]	; 12cbc <sprintf@plt+0x16bc>
   12c3c:	bl	11564 <rb_helper_write@plt>
   12c40:	ldrb	r3, [r5, #452]	; 0x1c4
   12c44:	cmp	r3, #0
   12c48:	bne	12c18 <sprintf@plt+0x1618>
   12c4c:	ldr	r2, [r5, #456]	; 0x1c8
   12c50:	mov	r3, #1
   12c54:	cmp	r2, #0
   12c58:	strb	r3, [r5, #452]	; 0x1c4
   12c5c:	beq	12c18 <sprintf@plt+0x1618>
   12c60:	ldr	r3, [pc, #76]	; 12cb4 <sprintf@plt+0x16b4>
   12c64:	ldr	r4, [r3]
   12c68:	cmp	r4, #0
   12c6c:	bne	12c80 <sprintf@plt+0x1680>
   12c70:	b	12c18 <sprintf@plt+0x1618>
   12c74:	ldr	r4, [r4, #8]
   12c78:	cmp	r4, #0
   12c7c:	beq	12c18 <sprintf@plt+0x1618>
   12c80:	ldr	r3, [r4]
   12c84:	ldr	r2, [r3, #36]	; 0x24
   12c88:	cmp	r2, #0
   12c8c:	beq	12c74 <sprintf@plt+0x1674>
   12c90:	ldr	r1, [r3, #12]
   12c94:	ldr	r3, [r5, #464]	; 0x1d0
   12c98:	add	r3, r3, r1, lsl #4
   12c9c:	ldr	r3, [r3, #12]
   12ca0:	cmp	r3, #1
   12ca4:	bne	12c74 <sprintf@plt+0x1674>
   12ca8:	mov	r0, r5
   12cac:	blx	r2
   12cb0:	b	12c74 <sprintf@plt+0x1674>
   12cb4:	andeq	r0, r3, r4, ror r1
   12cb8:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   12cbc:	andeq	r9, r1, ip, lsl r4
   12cc0:	push	{r3}		; (str r3, [sp, #-4]!)
   12cc4:	push	{r4, r5, r6, r7, r8, lr}
   12cc8:	sub	sp, sp, #540	; 0x21c
   12ccc:	add	ip, sp, #568	; 0x238
   12cd0:	add	r6, sp, #24
   12cd4:	mov	r4, r0
   12cd8:	mov	r5, r1
   12cdc:	mov	r3, ip
   12ce0:	mov	r7, r2
   12ce4:	mov	r0, r6
   12ce8:	ldr	r2, [sp, #564]	; 0x234
   12cec:	mov	r1, #512	; 0x200
   12cf0:	str	ip, [sp, #20]
   12cf4:	bl	112dc <vsnprintf@plt>
   12cf8:	ldr	r3, [pc, #328]	; 12e48 <sprintf@plt+0x1848>
   12cfc:	cmn	r5, #1
   12d00:	ldr	r2, [r4]
   12d04:	ldr	r0, [r3]
   12d08:	beq	12de0 <sprintf@plt+0x17e0>
   12d0c:	ldr	r3, [r4, #464]	; 0x1d0
   12d10:	cmp	r7, #0
   12d14:	lsl	r8, r5, #4
   12d18:	ldr	r3, [r3, r5, lsl #4]
   12d1c:	add	r1, r4, #440	; 0x1b8
   12d20:	add	ip, r4, #376	; 0x178
   12d24:	ldrb	r3, [r3, #20]
   12d28:	beq	12e30 <sprintf@plt+0x1830>
   12d2c:	stm	sp, {r1, ip}
   12d30:	str	r6, [sp, #12]
   12d34:	str	r7, [sp, #8]
   12d38:	ldr	r1, [pc, #268]	; 12e4c <sprintf@plt+0x184c>
   12d3c:	bl	11564 <rb_helper_write@plt>
   12d40:	ldr	r2, [r4, #464]	; 0x1d0
   12d44:	ldr	r3, [r4, #456]	; 0x1c8
   12d48:	add	r2, r2, r8
   12d4c:	mov	r1, #2
   12d50:	sub	r3, r3, #1
   12d54:	str	r1, [r2, #12]
   12d58:	str	r3, [r4, #456]	; 0x1c8
   12d5c:	ldrb	r3, [r4, #452]	; 0x1c4
   12d60:	cmp	r3, #0
   12d64:	bne	12d7c <sprintf@plt+0x177c>
   12d68:	ldr	r2, [r4, #456]	; 0x1c8
   12d6c:	mov	r3, #1
   12d70:	cmp	r2, #0
   12d74:	strb	r3, [r4, #452]	; 0x1c4
   12d78:	bne	12d8c <sprintf@plt+0x178c>
   12d7c:	add	sp, sp, #540	; 0x21c
   12d80:	pop	{r4, r5, r6, r7, r8, lr}
   12d84:	add	sp, sp, #4
   12d88:	bx	lr
   12d8c:	ldr	r3, [pc, #188]	; 12e50 <sprintf@plt+0x1850>
   12d90:	ldr	r5, [r3]
   12d94:	cmp	r5, #0
   12d98:	bne	12dac <sprintf@plt+0x17ac>
   12d9c:	b	12d7c <sprintf@plt+0x177c>
   12da0:	ldr	r5, [r5, #8]
   12da4:	cmp	r5, #0
   12da8:	beq	12d7c <sprintf@plt+0x177c>
   12dac:	ldr	r3, [r5]
   12db0:	ldr	r2, [r3, #36]	; 0x24
   12db4:	cmp	r2, #0
   12db8:	beq	12da0 <sprintf@plt+0x17a0>
   12dbc:	ldr	r1, [r3, #12]
   12dc0:	ldr	r3, [r4, #464]	; 0x1d0
   12dc4:	add	r3, r3, r1, lsl #4
   12dc8:	ldr	r3, [r3, #12]
   12dcc:	cmp	r3, #1
   12dd0:	bne	12da0 <sprintf@plt+0x17a0>
   12dd4:	mov	r0, r4
   12dd8:	blx	r2
   12ddc:	b	12da0 <sprintf@plt+0x17a0>
   12de0:	cmp	r7, #0
   12de4:	add	r3, r4, #440	; 0x1b8
   12de8:	add	r1, r4, #376	; 0x178
   12dec:	bne	12e14 <sprintf@plt+0x1814>
   12df0:	ldr	ip, [pc, #92]	; 12e54 <sprintf@plt+0x1854>
   12df4:	str	r1, [sp, #4]
   12df8:	str	r3, [sp]
   12dfc:	str	r6, [sp, #12]
   12e00:	str	ip, [sp, #8]
   12e04:	mov	r3, #42	; 0x2a
   12e08:	ldr	r1, [pc, #60]	; 12e4c <sprintf@plt+0x184c>
   12e0c:	bl	11564 <rb_helper_write@plt>
   12e10:	b	12d5c <sprintf@plt+0x175c>
   12e14:	stmib	sp, {r1, r7}
   12e18:	str	r3, [sp]
   12e1c:	str	r6, [sp, #12]
   12e20:	mov	r3, #42	; 0x2a
   12e24:	ldr	r1, [pc, #32]	; 12e4c <sprintf@plt+0x184c>
   12e28:	bl	11564 <rb_helper_write@plt>
   12e2c:	b	12d5c <sprintf@plt+0x175c>
   12e30:	ldr	lr, [pc, #28]	; 12e54 <sprintf@plt+0x1854>
   12e34:	str	r6, [sp, #12]
   12e38:	stm	sp, {r1, ip, lr}
   12e3c:	ldr	r1, [pc, #8]	; 12e4c <sprintf@plt+0x184c>
   12e40:	bl	11564 <rb_helper_write@plt>
   12e44:	b	12d40 <sprintf@plt+0x1740>
   12e48:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   12e4c:	andeq	r9, r1, r4, ror #6
   12e50:	andeq	r0, r3, r4, ror r1
   12e54:	andeq	r9, r1, r8, lsr #8
   12e58:	push	{r4, r5, lr}
   12e5c:	mov	r5, r0
   12e60:	mov	r1, r5
   12e64:	ldr	r0, [pc, #148]	; 12f00 <sprintf@plt+0x1900>
   12e68:	ldr	r2, [r1], #376	; 0x178
   12e6c:	sub	sp, sp, #12
   12e70:	add	r3, r5, #440	; 0x1b8
   12e74:	ldr	r0, [r0]
   12e78:	str	r1, [sp]
   12e7c:	ldr	r1, [pc, #128]	; 12f04 <sprintf@plt+0x1904>
   12e80:	bl	11564 <rb_helper_write@plt>
   12e84:	ldrb	r3, [r5, #452]	; 0x1c4
   12e88:	cmp	r3, #0
   12e8c:	bne	12ea4 <sprintf@plt+0x18a4>
   12e90:	ldr	r2, [r5, #456]	; 0x1c8
   12e94:	mov	r3, #1
   12e98:	cmp	r2, #0
   12e9c:	strb	r3, [r5, #452]	; 0x1c4
   12ea0:	bne	12eac <sprintf@plt+0x18ac>
   12ea4:	add	sp, sp, #12
   12ea8:	pop	{r4, r5, pc}
   12eac:	ldr	r3, [pc, #84]	; 12f08 <sprintf@plt+0x1908>
   12eb0:	ldr	r4, [r3]
   12eb4:	cmp	r4, #0
   12eb8:	bne	12ecc <sprintf@plt+0x18cc>
   12ebc:	b	12ea4 <sprintf@plt+0x18a4>
   12ec0:	ldr	r4, [r4, #8]
   12ec4:	cmp	r4, #0
   12ec8:	beq	12ea4 <sprintf@plt+0x18a4>
   12ecc:	ldr	r3, [r4]
   12ed0:	ldr	r2, [r3, #36]	; 0x24
   12ed4:	cmp	r2, #0
   12ed8:	beq	12ec0 <sprintf@plt+0x18c0>
   12edc:	ldr	r1, [r3, #12]
   12ee0:	ldr	r3, [r5, #464]	; 0x1d0
   12ee4:	add	r3, r3, r1, lsl #4
   12ee8:	ldr	r3, [r3, #12]
   12eec:	cmp	r3, #1
   12ef0:	bne	12ec0 <sprintf@plt+0x18c0>
   12ef4:	mov	r0, r5
   12ef8:	blx	r2
   12efc:	b	12ec0 <sprintf@plt+0x18c0>
   12f00:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   12f04:	andeq	r9, r1, ip, lsl r4
   12f08:	andeq	r0, r3, r4, ror r1
   12f0c:	cmp	r0, #5
   12f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f14:	sub	sp, sp, #20
   12f18:	ble	131e0 <sprintf@plt+0x1be0>
   12f1c:	ldmib	r1, {r6, r7, r9}
   12f20:	cmp	r0, #6
   12f24:	ldr	r8, [r1, #16]
   12f28:	ldrne	r3, [r1, #24]
   12f2c:	ldreq	r3, [pc, #732]	; 13210 <sprintf@plt+0x1c10>
   12f30:	ldr	sl, [r1, #20]
   12f34:	mov	r2, #16
   12f38:	mov	r1, #0
   12f3c:	mov	r0, r6
   12f40:	str	r3, [sp, #12]
   12f44:	bl	113b4 <strtoull@plt>
   12f48:	mov	r3, #0
   12f4c:	mvn	r2, #1
   12f50:	mov	r4, r0
   12f54:	subs	r0, r0, #1
   12f58:	sbc	r1, r1, #0
   12f5c:	cmp	r1, r3
   12f60:	cmpeq	r0, r2
   12f64:	bls	12f70 <sprintf@plt+0x1970>
   12f68:	add	sp, sp, #20
   12f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f70:	mov	r1, #468	; 0x1d4
   12f74:	mov	r0, #1
   12f78:	bl	1133c <calloc@plt>
   12f7c:	subs	fp, r0, #0
   12f80:	beq	131dc <sprintf@plt+0x1bdc>
   12f84:	ldr	r3, [fp, #460]	; 0x1cc
   12f88:	ldr	r5, [pc, #644]	; 13214 <sprintf@plt+0x1c14>
   12f8c:	add	r3, r3, #1
   12f90:	str	r4, [fp]
   12f94:	mov	r1, r4
   12f98:	str	r3, [fp, #460]	; 0x1cc
   12f9c:	ldr	r0, [r5]
   12fa0:	bl	11534 <rb_dictionary_find@plt>
   12fa4:	subs	r4, r0, #0
   12fa8:	bne	131f8 <sprintf@plt+0x1bf8>
   12fac:	mov	r2, fp
   12fb0:	ldr	r1, [fp]
   12fb4:	ldr	r0, [r5]
   12fb8:	bl	114ec <rb_dictionary_add@plt>
   12fbc:	mov	r2, #16
   12fc0:	ldr	r0, [sp, #12]
   12fc4:	mov	r1, r4
   12fc8:	bl	113b4 <strtoull@plt>
   12fcc:	mov	r1, r7
   12fd0:	mov	r2, #54	; 0x36
   12fd4:	add	r6, fp, #376	; 0x178
   12fd8:	str	r0, [fp, #4]
   12fdc:	add	r0, fp, #8
   12fe0:	bl	113a8 <rb_strlcpy@plt>
   12fe4:	mov	r2, #10
   12fe8:	mov	r1, r4
   12fec:	mov	r0, r9
   12ff0:	bl	11468 <strtol@plt>
   12ff4:	add	r1, fp, #64	; 0x40
   12ff8:	strh	r0, [fp, #62]	; 0x3e
   12ffc:	mov	r0, r7
   13000:	bl	11414 <rb_inet_pton_sock@plt>
   13004:	ldrh	r3, [fp, #62]	; 0x3e
   13008:	mov	r2, #54	; 0x36
   1300c:	mov	r1, r8
   13010:	rev16	r3, r3
   13014:	strh	r3, [fp, #66]	; 0x42
   13018:	add	r0, fp, #192	; 0xc0
   1301c:	bl	113a8 <rb_strlcpy@plt>
   13020:	mov	r2, #10
   13024:	mov	r1, #0
   13028:	mov	r0, sl
   1302c:	bl	11468 <strtol@plt>
   13030:	add	r1, fp, #248	; 0xf8
   13034:	add	r7, fp, #440	; 0x1b8
   13038:	strh	r0, [fp, #246]	; 0xf6
   1303c:	mov	r0, r8
   13040:	bl	11414 <rb_inet_pton_sock@plt>
   13044:	ldrh	r3, [fp, #246]	; 0xf6
   13048:	mov	r2, #64	; 0x40
   1304c:	ldr	r1, [pc, #452]	; 13218 <sprintf@plt+0x1c18>
   13050:	rev16	r3, r3
   13054:	strh	r3, [fp, #250]	; 0xfa
   13058:	mov	r0, r6
   1305c:	bl	113a8 <rb_strlcpy@plt>
   13060:	mov	r2, #11
   13064:	ldr	r1, [pc, #428]	; 13218 <sprintf@plt+0x1c18>
   13068:	mov	r0, r7
   1306c:	bl	113a8 <rb_strlcpy@plt>
   13070:	ldr	r3, [pc, #420]	; 1321c <sprintf@plt+0x1c1c>
   13074:	mov	r0, #1
   13078:	ldr	r1, [r3, #16]
   1307c:	lsl	r1, r1, #4
   13080:	bl	1133c <calloc@plt>
   13084:	subs	lr, r0, #0
   13088:	beq	131dc <sprintf@plt+0x1bdc>
   1308c:	ldr	r8, [pc, #396]	; 13220 <sprintf@plt+0x1c20>
   13090:	mov	r4, #1
   13094:	str	lr, [fp, #464]	; 0x1d0
   13098:	ldr	r9, [r8]
   1309c:	strb	r4, [fp, #451]	; 0x1c3
   130a0:	cmp	r9, #0
   130a4:	bne	130c8 <sprintf@plt+0x1ac8>
   130a8:	b	1313c <sprintf@plt+0x1b3c>
   130ac:	ldrb	r3, [fp, #452]	; 0x1c4
   130b0:	cmp	r3, #0
   130b4:	bne	1313c <sprintf@plt+0x1b3c>
   130b8:	ldr	r9, [r9, #8]
   130bc:	cmp	r9, #0
   130c0:	beq	1313c <sprintf@plt+0x1b3c>
   130c4:	ldr	lr, [fp, #464]	; 0x1d0
   130c8:	ldr	ip, [r9]
   130cc:	ldr	r2, [fp, #456]	; 0x1c8
   130d0:	mov	r0, fp
   130d4:	ldr	r3, [ip, #12]
   130d8:	ldr	r1, [ip, #32]
   130dc:	add	r2, r2, #1
   130e0:	str	ip, [lr, r3, lsl #4]
   130e4:	add	r3, lr, r3, lsl #4
   130e8:	str	r2, [fp, #456]	; 0x1c8
   130ec:	str	r4, [r3, #12]
   130f0:	blx	r1
   130f4:	cmp	r0, #0
   130f8:	bne	130ac <sprintf@plt+0x1aac>
   130fc:	ldr	r3, [fp, #460]	; 0x1cc
   13100:	sub	r3, r3, #1
   13104:	cmp	r3, #0
   13108:	str	r3, [fp, #460]	; 0x1cc
   1310c:	bne	12f68 <sprintf@plt+0x1968>
   13110:	ldr	r0, [r5]
   13114:	ldr	r1, [fp]
   13118:	bl	11438 <rb_dictionary_delete@plt>
   1311c:	ldr	r0, [fp, #464]	; 0x1d0
   13120:	cmp	r0, #0
   13124:	beq	1312c <sprintf@plt+0x1b2c>
   13128:	bl	113cc <free@plt>
   1312c:	mov	r0, fp
   13130:	add	sp, sp, #20
   13134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13138:	b	113cc <free@plt>
   1313c:	ldr	r2, [fp, #456]	; 0x1c8
   13140:	mov	r3, #0
   13144:	cmp	r2, r3
   13148:	strb	r3, [fp, #451]	; 0x1c3
   1314c:	bne	130fc <sprintf@plt+0x1afc>
   13150:	ldr	r1, [pc, #204]	; 13224 <sprintf@plt+0x1c24>
   13154:	ldr	r2, [fp]
   13158:	mov	r3, r7
   1315c:	ldr	r0, [r1]
   13160:	str	r6, [sp]
   13164:	ldr	r1, [pc, #188]	; 13228 <sprintf@plt+0x1c28>
   13168:	bl	11564 <rb_helper_write@plt>
   1316c:	ldrb	r3, [fp, #452]	; 0x1c4
   13170:	cmp	r3, #0
   13174:	bne	130fc <sprintf@plt+0x1afc>
   13178:	ldr	r2, [fp, #456]	; 0x1c8
   1317c:	mov	r3, #1
   13180:	cmp	r2, #0
   13184:	strb	r3, [fp, #452]	; 0x1c4
   13188:	beq	130fc <sprintf@plt+0x1afc>
   1318c:	ldr	r4, [r8]
   13190:	cmp	r4, #0
   13194:	bne	131a8 <sprintf@plt+0x1ba8>
   13198:	b	130fc <sprintf@plt+0x1afc>
   1319c:	ldr	r4, [r4, #8]
   131a0:	cmp	r4, #0
   131a4:	beq	130fc <sprintf@plt+0x1afc>
   131a8:	ldr	r3, [r4]
   131ac:	ldr	r2, [r3, #36]	; 0x24
   131b0:	cmp	r2, #0
   131b4:	beq	1319c <sprintf@plt+0x1b9c>
   131b8:	ldr	r1, [r3, #12]
   131bc:	ldr	r3, [fp, #464]	; 0x1d0
   131c0:	add	r3, r3, r1, lsl #4
   131c4:	ldr	r3, [r3, #12]
   131c8:	cmp	r3, #1
   131cc:	bne	1319c <sprintf@plt+0x1b9c>
   131d0:	mov	r0, fp
   131d4:	blx	r2
   131d8:	b	1319c <sprintf@plt+0x1b9c>
   131dc:	bl	114d4 <rb_outofmemory@plt>
   131e0:	mov	r2, r0
   131e4:	ldr	r1, [pc, #64]	; 1322c <sprintf@plt+0x1c2c>
   131e8:	mov	r0, #67	; 0x43
   131ec:	bl	122d8 <sprintf@plt+0xcd8>
   131f0:	mov	r0, #3
   131f4:	bl	115e8 <exit@plt>
   131f8:	mov	r0, #67	; 0x43
   131fc:	mov	r2, r6
   13200:	ldr	r1, [pc, #40]	; 13230 <sprintf@plt+0x1c30>
   13204:	bl	122d8 <sprintf@plt+0xcd8>
   13208:	mov	r0, #3
   1320c:	bl	115e8 <exit@plt>
   13210:	muleq	r1, r8, r5
   13214:	andeq	r0, r3, r0, ror r1
   13218:	andeq	r9, r1, r8, lsr #8
   1321c:	andeq	pc, r2, r0, lsl #31
   13220:	andeq	r0, r3, r4, ror r1
   13224:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   13228:	andeq	r9, r1, ip, lsl r4
   1322c:	andeq	r9, r1, ip, lsr #8
   13230:	andeq	r9, r1, r8, ror r4
   13234:	cmp	r0, #1
   13238:	push	{r4, r5, r6, r7, r8, lr}
   1323c:	ble	13350 <sprintf@plt+0x1d50>
   13240:	mov	r4, r1
   13244:	mov	r2, #16
   13248:	mov	r1, #0
   1324c:	ldr	r0, [r4, #4]
   13250:	bl	113b4 <strtoull@plt>
   13254:	mov	r3, #0
   13258:	mvn	r2, #1
   1325c:	subs	r6, r0, #1
   13260:	sbc	r7, r1, #0
   13264:	cmp	r7, r3
   13268:	cmpeq	r6, r2
   1326c:	bhi	13368 <sprintf@plt+0x1d68>
   13270:	ldr	r6, [pc, #264]	; 13380 <sprintf@plt+0x1d80>
   13274:	mov	r1, r0
   13278:	ldr	r0, [r6]
   1327c:	bl	114c8 <rb_dictionary_retrieve@plt>
   13280:	subs	r4, r0, #0
   13284:	popeq	{r4, r5, r6, r7, r8, pc}
   13288:	ldrb	r2, [r4, #452]	; 0x1c4
   1328c:	ldr	r3, [r4, #460]	; 0x1cc
   13290:	cmp	r2, #0
   13294:	add	r3, r3, #1
   13298:	str	r3, [r4, #460]	; 0x1cc
   1329c:	beq	132d8 <sprintf@plt+0x1cd8>
   132a0:	sub	r3, r3, #1
   132a4:	cmp	r3, #0
   132a8:	str	r3, [r4, #460]	; 0x1cc
   132ac:	popne	{r4, r5, r6, r7, r8, pc}
   132b0:	ldr	r0, [r6]
   132b4:	ldr	r1, [r4]
   132b8:	bl	11438 <rb_dictionary_delete@plt>
   132bc:	ldr	r0, [r4, #464]	; 0x1d0
   132c0:	cmp	r0, #0
   132c4:	beq	132cc <sprintf@plt+0x1ccc>
   132c8:	bl	113cc <free@plt>
   132cc:	mov	r0, r4
   132d0:	pop	{r4, r5, r6, r7, r8, lr}
   132d4:	b	113cc <free@plt>
   132d8:	ldr	r1, [r4, #456]	; 0x1c8
   132dc:	mov	r2, #1
   132e0:	cmp	r1, #0
   132e4:	strb	r2, [r4, #452]	; 0x1c4
   132e8:	beq	132a0 <sprintf@plt+0x1ca0>
   132ec:	ldr	r2, [pc, #144]	; 13384 <sprintf@plt+0x1d84>
   132f0:	ldr	r5, [r2]
   132f4:	cmp	r5, #0
   132f8:	bne	1330c <sprintf@plt+0x1d0c>
   132fc:	b	132a0 <sprintf@plt+0x1ca0>
   13300:	ldr	r5, [r5, #8]
   13304:	cmp	r5, #0
   13308:	beq	13348 <sprintf@plt+0x1d48>
   1330c:	ldr	r3, [r5]
   13310:	ldr	r2, [r3, #36]	; 0x24
   13314:	cmp	r2, #0
   13318:	beq	13300 <sprintf@plt+0x1d00>
   1331c:	ldr	r1, [r3, #12]
   13320:	ldr	r3, [r4, #464]	; 0x1d0
   13324:	add	r3, r3, r1, lsl #4
   13328:	ldr	r3, [r3, #12]
   1332c:	cmp	r3, #1
   13330:	bne	13300 <sprintf@plt+0x1d00>
   13334:	mov	r0, r4
   13338:	blx	r2
   1333c:	ldr	r5, [r5, #8]
   13340:	cmp	r5, #0
   13344:	bne	1330c <sprintf@plt+0x1d0c>
   13348:	ldr	r3, [r4, #460]	; 0x1cc
   1334c:	b	132a0 <sprintf@plt+0x1ca0>
   13350:	mov	r2, r0
   13354:	ldr	r1, [pc, #44]	; 13388 <sprintf@plt+0x1d88>
   13358:	mov	r0, #67	; 0x43
   1335c:	bl	122d8 <sprintf@plt+0xcd8>
   13360:	mov	r0, #3
   13364:	bl	115e8 <exit@plt>
   13368:	mov	r0, #67	; 0x43
   1336c:	ldr	r2, [r4, #4]
   13370:	ldr	r1, [pc, #20]	; 1338c <sprintf@plt+0x1d8c>
   13374:	bl	122d8 <sprintf@plt+0xcd8>
   13378:	mov	r0, #3
   1337c:	bl	115e8 <exit@plt>
   13380:	andeq	r0, r3, r0, ror r1
   13384:	andeq	r0, r3, r4, ror r1
   13388:	andeq	r9, r1, ip, lsr #9
   1338c:	strdeq	r9, [r1], -r8
   13390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13394:	sub	sp, sp, #1040	; 0x410
   13398:	sub	sp, sp, #4
   1339c:	mov	r5, r0
   133a0:	mov	r4, #1024	; 0x400
   133a4:	str	r0, [sp, #12]
   133a8:	mov	r2, r4
   133ac:	mov	r1, #0
   133b0:	add	r0, sp, #16
   133b4:	bl	1136c <memset@plt>
   133b8:	ldrb	r2, [r5, #20]
   133bc:	add	r3, sp, #16
   133c0:	str	r4, [sp]
   133c4:	add	r0, r5, #21
   133c8:	mov	r1, #1
   133cc:	bl	14f40 <sprintf@plt+0x3940>
   133d0:	subs	r9, r0, #0
   133d4:	ble	1354c <sprintf@plt+0x1f4c>
   133d8:	ldrb	r8, [r5, #278]	; 0x116
   133dc:	ldr	r6, [pc, #396]	; 13570 <sprintf@plt+0x1f70>
   133e0:	ldr	r2, [pc, #396]	; 13574 <sprintf@plt+0x1f74>
   133e4:	add	r8, r8, #1
   133e8:	ldr	r3, [r6]
   133ec:	ldr	r4, [r2]
   133f0:	ldr	r2, [r5, #12]
   133f4:	uxtb	r8, r8
   133f8:	add	r3, r3, #1
   133fc:	cmp	r4, #0
   13400:	strb	r8, [r5, #278]	; 0x116
   13404:	str	r3, [r6]
   13408:	strh	r2, [sp, #16]
   1340c:	ble	1354c <sprintf@plt+0x1f4c>
   13410:	ldr	sl, [pc, #352]	; 13578 <sprintf@plt+0x1f78>
   13414:	mov	r7, #0
   13418:	sub	r8, r8, #1
   1341c:	mov	fp, #243	; 0xf3
   13420:	mov	r1, r4
   13424:	add	r0, r7, r8
   13428:	bl	18f00 <sprintf@plt+0x7900>
   1342c:	add	r3, r6, r1, lsl #2
   13430:	mov	r5, r1
   13434:	ldr	r3, [r3, #4]
   13438:	cmp	r3, #0
   1343c:	sub	r2, r3, #1
   13440:	beq	13464 <sprintf@plt+0x1e64>
   13444:	cmp	r2, #3
   13448:	mov	r1, fp
   1344c:	ldrls	r3, [pc, #296]	; 1357c <sprintf@plt+0x1f7c>
   13450:	ldr	r0, [r6]
   13454:	ldrls	r1, [r3, r2, lsl #2]
   13458:	bl	18f00 <sprintf@plt+0x7900>
   1345c:	cmp	r1, #0
   13460:	bne	134ac <sprintf@plt+0x1eac>
   13464:	ldr	r0, [r6, #44]	; 0x2c
   13468:	bl	112c4 <rb_get_fd@plt>
   1346c:	lsl	r3, r5, #7
   13470:	add	r1, r3, sl
   13474:	ldrh	r2, [r3, sl]
   13478:	str	r1, [sp]
   1347c:	mov	r3, #0
   13480:	cmp	r2, #2
   13484:	movne	r2, #28
   13488:	moveq	r2, #16
   1348c:	str	r2, [sp, #4]
   13490:	add	r1, sp, #16
   13494:	mov	r2, r9
   13498:	bl	11354 <sendto@plt>
   1349c:	cmp	r9, r0
   134a0:	beq	13558 <sprintf@plt+0x1f58>
   134a4:	ldr	r3, [pc, #200]	; 13574 <sprintf@plt+0x1f74>
   134a8:	ldr	r4, [r3]
   134ac:	add	r7, r7, #1
   134b0:	cmp	r7, r4
   134b4:	blt	13420 <sprintf@plt+0x1e20>
   134b8:	cmp	r4, #0
   134bc:	ble	1354c <sprintf@plt+0x1f4c>
   134c0:	mov	r7, #0
   134c4:	ldr	sl, [pc, #172]	; 13578 <sprintf@plt+0x1f78>
   134c8:	mov	fp, r7
   134cc:	b	134d8 <sprintf@plt+0x1ed8>
   134d0:	cmp	r7, r4
   134d4:	bge	1354c <sprintf@plt+0x1f4c>
   134d8:	add	r0, r7, r8
   134dc:	mov	r1, r4
   134e0:	bl	18f00 <sprintf@plt+0x7900>
   134e4:	add	r7, r7, #1
   134e8:	add	r3, r6, r1, lsl #2
   134ec:	mov	r5, r1
   134f0:	ldr	r3, [r3, #4]
   134f4:	cmp	r3, #0
   134f8:	beq	134d0 <sprintf@plt+0x1ed0>
   134fc:	ldr	r0, [r6, #44]	; 0x2c
   13500:	bl	112c4 <rb_get_fd@plt>
   13504:	lsl	r3, r5, #7
   13508:	add	r1, r3, sl
   1350c:	ldrh	r2, [r3, sl]
   13510:	str	r1, [sp]
   13514:	mov	r3, fp
   13518:	cmp	r2, #2
   1351c:	movne	r2, #28
   13520:	moveq	r2, #16
   13524:	str	r2, [sp, #4]
   13528:	add	r1, sp, #16
   1352c:	mov	r2, r9
   13530:	bl	11354 <sendto@plt>
   13534:	cmp	r9, r0
   13538:	beq	13558 <sprintf@plt+0x1f58>
   1353c:	ldr	r3, [pc, #48]	; 13574 <sprintf@plt+0x1f74>
   13540:	ldr	r4, [r3]
   13544:	cmp	r7, r4
   13548:	blt	134d8 <sprintf@plt+0x1ed8>
   1354c:	add	sp, sp, #1040	; 0x410
   13550:	add	sp, sp, #4
   13554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13558:	cmn	r5, #1
   1355c:	ldrne	r3, [sp, #12]
   13560:	strne	r5, [r3, #288]	; 0x120
   13564:	add	sp, sp, #1040	; 0x410
   13568:	add	sp, sp, #4
   1356c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13570:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   13574:	ldrdeq	pc, [r2], -r4
   13578:	muleq	r3, r4, r2
   1357c:	andeq	r9, r1, ip, lsr r5
   13580:	push	{r4, r5, r6, r7, lr}
   13584:	mov	r1, #428	; 0x1ac
   13588:	sub	sp, sp, #12
   1358c:	mov	r7, r0
   13590:	mov	r0, #1
   13594:	bl	1133c <calloc@plt>
   13598:	subs	r4, r0, #0
   1359c:	beq	13664 <sprintf@plt+0x2064>
   135a0:	bl	1142c <rb_current_time@plt>
   135a4:	ldr	r5, [pc, #188]	; 13668 <sprintf@plt+0x2068>
   135a8:	mov	r6, #2
   135ac:	mov	r2, #3
   135b0:	mov	r3, #4
   135b4:	str	r7, [r4, #424]	; 0x1a8
   135b8:	strb	r2, [r4, #277]	; 0x115
   135bc:	str	r3, [r4, #284]	; 0x11c
   135c0:	str	r0, [r4, #280]	; 0x118
   135c4:	mov	r1, r6
   135c8:	add	r0, sp, #6
   135cc:	bl	1157c <rb_get_random@plt>
   135d0:	ldr	r0, [r5, #48]	; 0x30
   135d4:	ldrh	r1, [sp, #6]
   135d8:	cmp	r0, #0
   135dc:	beq	13644 <sprintf@plt+0x2044>
   135e0:	ldr	r3, [r0]
   135e4:	ldr	r3, [r3, #12]
   135e8:	cmp	r3, r1
   135ec:	beq	135c4 <sprintf@plt+0x1fc4>
   135f0:	mov	r3, r0
   135f4:	b	13608 <sprintf@plt+0x2008>
   135f8:	ldr	r2, [r3]
   135fc:	ldr	r2, [r2, #12]
   13600:	cmp	r1, r2
   13604:	beq	135c4 <sprintf@plt+0x1fc4>
   13608:	ldr	r3, [r3, #8]
   1360c:	cmp	r3, #0
   13610:	bne	135f8 <sprintf@plt+0x1ff8>
   13614:	str	r1, [r4, #12]
   13618:	str	r4, [r4]
   1361c:	str	r3, [r4, #4]
   13620:	str	r0, [r4, #8]
   13624:	str	r4, [r0, #4]
   13628:	ldr	r3, [r5, #56]	; 0x38
   1362c:	mov	r0, r4
   13630:	add	r3, r3, #1
   13634:	str	r4, [r5, #48]	; 0x30
   13638:	str	r3, [r5, #56]	; 0x38
   1363c:	add	sp, sp, #12
   13640:	pop	{r4, r5, r6, r7, pc}
   13644:	ldr	r3, [r5, #52]	; 0x34
   13648:	str	r1, [r4, #12]
   1364c:	cmp	r3, #0
   13650:	str	r4, [r4]
   13654:	str	r0, [r4, #4]
   13658:	str	r0, [r4, #8]
   1365c:	streq	r4, [r5, #52]	; 0x34
   13660:	b	13628 <sprintf@plt+0x2028>
   13664:	bl	114d4 <rb_outofmemory@plt>
   13668:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   1366c:	push	{r4, r5, r6, lr}
   13670:	bl	145cc <sprintf@plt+0x2fcc>
   13674:	ldr	r3, [pc, #120]	; 136f4 <sprintf@plt+0x20f4>
   13678:	ldr	r2, [r3]
   1367c:	cmp	r2, #0
   13680:	ble	13694 <sprintf@plt+0x2094>
   13684:	lsl	r2, r2, #2
   13688:	mov	r1, #0
   1368c:	ldr	r0, [pc, #100]	; 136f8 <sprintf@plt+0x20f8>
   13690:	bl	1136c <memset@plt>
   13694:	ldr	r5, [pc, #96]	; 136fc <sprintf@plt+0x20fc>
   13698:	ldr	r4, [r5, #44]	; 0x2c
   1369c:	cmp	r4, #0
   136a0:	popne	{r4, r5, r6, pc}
   136a4:	ldr	r1, [pc, #84]	; 13700 <sprintf@plt+0x2100>
   136a8:	ldr	r3, [pc, #84]	; 13704 <sprintf@plt+0x2104>
   136ac:	mov	r2, r4
   136b0:	ldrh	r0, [r1]
   136b4:	mov	r1, #2
   136b8:	bl	112e8 <rb_socket@plt>
   136bc:	cmp	r0, #0
   136c0:	str	r0, [r5, #44]	; 0x2c
   136c4:	popeq	{r4, r5, r6, pc}
   136c8:	mov	r3, r4
   136cc:	ldr	r2, [pc, #52]	; 13708 <sprintf@plt+0x2108>
   136d0:	mov	r1, #1
   136d4:	bl	112b8 <rb_setselect@plt>
   136d8:	mov	r2, r4
   136dc:	mov	r3, #1
   136e0:	ldr	r1, [pc, #36]	; 1370c <sprintf@plt+0x210c>
   136e4:	ldr	r0, [pc, #36]	; 13710 <sprintf@plt+0x2110>
   136e8:	bl	11570 <rb_event_add@plt>
   136ec:	str	r0, [r5, #60]	; 0x3c
   136f0:	pop	{r4, r5, r6, pc}
   136f4:	ldrdeq	pc, [r2], -r4
   136f8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   136fc:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   13700:	muleq	r3, r4, r2
   13704:	andeq	r9, r1, r0, ror #10
   13708:	andeq	r4, r1, r4, lsr r4
   1370c:	andeq	r4, r1, r4, ror #8
   13710:	andeq	r9, r1, r4, ror r5
   13714:	push	{r4, r5, r6, lr}
   13718:	mov	r5, #0
   1371c:	ldr	r4, [pc, #144]	; 137b4 <sprintf@plt+0x21b4>
   13720:	ldr	r0, [r4, #44]	; 0x2c
   13724:	bl	1145c <rb_close@plt>
   13728:	ldr	r0, [r4, #60]	; 0x3c
   1372c:	str	r5, [r4, #44]	; 0x2c
   13730:	bl	112ac <rb_event_delete@plt>
   13734:	bl	145cc <sprintf@plt+0x2fcc>
   13738:	ldr	r3, [pc, #120]	; 137b8 <sprintf@plt+0x21b8>
   1373c:	ldr	r2, [r3]
   13740:	cmp	r2, r5
   13744:	ble	13758 <sprintf@plt+0x2158>
   13748:	lsl	r2, r2, #2
   1374c:	mov	r1, r5
   13750:	add	r0, r4, #4
   13754:	bl	1136c <memset@plt>
   13758:	ldr	r5, [r4, #44]	; 0x2c
   1375c:	cmp	r5, #0
   13760:	popne	{r4, r5, r6, pc}
   13764:	ldr	r1, [pc, #80]	; 137bc <sprintf@plt+0x21bc>
   13768:	ldr	r3, [pc, #80]	; 137c0 <sprintf@plt+0x21c0>
   1376c:	mov	r2, r5
   13770:	ldrh	r0, [r1]
   13774:	mov	r1, #2
   13778:	bl	112e8 <rb_socket@plt>
   1377c:	cmp	r0, #0
   13780:	str	r0, [r4, #44]	; 0x2c
   13784:	popeq	{r4, r5, r6, pc}
   13788:	mov	r3, r5
   1378c:	ldr	r2, [pc, #48]	; 137c4 <sprintf@plt+0x21c4>
   13790:	mov	r1, #1
   13794:	bl	112b8 <rb_setselect@plt>
   13798:	mov	r2, r5
   1379c:	mov	r3, #1
   137a0:	ldr	r1, [pc, #32]	; 137c8 <sprintf@plt+0x21c8>
   137a4:	ldr	r0, [pc, #32]	; 137cc <sprintf@plt+0x21cc>
   137a8:	bl	11570 <rb_event_add@plt>
   137ac:	str	r0, [r4, #60]	; 0x3c
   137b0:	pop	{r4, r5, r6, pc}
   137b4:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   137b8:	ldrdeq	pc, [r2], -r4
   137bc:	muleq	r3, r4, r2
   137c0:	andeq	r9, r1, r0, ror #10
   137c4:	andeq	r4, r1, r4, lsr r4
   137c8:	andeq	r4, r1, r4, ror #8
   137cc:	andeq	r9, r1, r4, ror r5
   137d0:	cmp	r0, #0
   137d4:	push	{r4, r5, r6, r7, lr}
   137d8:	sub	sp, sp, #260	; 0x104
   137dc:	beq	138c8 <sprintf@plt+0x22c8>
   137e0:	mov	r4, r1
   137e4:	mov	r6, r2
   137e8:	mov	r1, r0
   137ec:	mov	r2, #256	; 0x100
   137f0:	mov	r0, sp
   137f4:	bl	113a8 <rb_strlcpy@plt>
   137f8:	mov	r0, sp
   137fc:	mov	r1, #46	; 0x2e
   13800:	bl	11318 <strchr@plt>
   13804:	cmp	r0, #0
   13808:	beq	13868 <sprintf@plt+0x2268>
   1380c:	mov	r0, r4
   13810:	bl	13580 <sprintf@plt+0x1f80>
   13814:	mov	r4, r0
   13818:	mov	r0, sp
   1381c:	bl	11420 <strlen@plt>
   13820:	add	r5, r0, #1
   13824:	mov	r0, r5
   13828:	bl	11504 <malloc@plt>
   1382c:	subs	r7, r0, #0
   13830:	beq	138c4 <sprintf@plt+0x22c4>
   13834:	mov	r2, r5
   13838:	mov	r1, sp
   1383c:	bl	11444 <memcpy@plt>
   13840:	mov	r1, sp
   13844:	mov	r2, #256	; 0x100
   13848:	str	r7, [r4, #420]	; 0x1a4
   1384c:	add	r0, r4, #21
   13850:	bl	113a8 <rb_strlcpy@plt>
   13854:	strb	r6, [r4, #20]
   13858:	mov	r0, r4
   1385c:	bl	13390 <sprintf@plt+0x1d90>
   13860:	add	sp, sp, #260	; 0x104
   13864:	pop	{r4, r5, r6, r7, pc}
   13868:	ldr	r5, [pc, #108]	; 138dc <sprintf@plt+0x22dc>
   1386c:	ldrb	r3, [r5]
   13870:	cmp	r3, #0
   13874:	beq	1380c <sprintf@plt+0x220c>
   13878:	mov	r0, sp
   1387c:	bl	11420 <strlen@plt>
   13880:	mov	r7, r0
   13884:	mov	r0, r5
   13888:	bl	11420 <strlen@plt>
   1388c:	add	r3, r7, r0
   13890:	add	r3, r3, #2
   13894:	cmp	r3, #254	; 0xfe
   13898:	bhi	1380c <sprintf@plt+0x220c>
   1389c:	add	r3, sp, #256	; 0x100
   138a0:	add	r3, r3, r7
   138a4:	mov	ip, #46	; 0x2e
   138a8:	add	r7, r7, #1
   138ac:	add	r2, r0, #1
   138b0:	mov	r1, r5
   138b4:	add	r0, sp, r7
   138b8:	strb	ip, [r3, #-256]	; 0xffffff00
   138bc:	bl	11444 <memcpy@plt>
   138c0:	b	1380c <sprintf@plt+0x220c>
   138c4:	bl	114d4 <rb_outofmemory@plt>
   138c8:	ldr	r3, [pc, #16]	; 138e0 <sprintf@plt+0x22e0>
   138cc:	mov	r2, #412	; 0x19c
   138d0:	ldr	r1, [pc, #12]	; 138e4 <sprintf@plt+0x22e4>
   138d4:	ldr	r0, [pc, #12]	; 138e8 <sprintf@plt+0x22e8>
   138d8:	bl	1139c <__assert_fail@plt>
   138dc:	muleq	r3, r4, r1
   138e0:	andeq	r9, r1, ip, asr #10
   138e4:	andeq	r9, r1, r8, lsl #11
   138e8:	muleq	r1, r0, r5
   138ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138f0:	mov	r4, r0
   138f4:	sub	sp, sp, #140	; 0x8c
   138f8:	mov	r0, r1
   138fc:	bl	13580 <sprintf@plt+0x1f80>
   13900:	mov	r1, r4
   13904:	mov	r2, #128	; 0x80
   13908:	mov	r5, r0
   1390c:	add	r0, r0, #292	; 0x124
   13910:	bl	11444 <memcpy@plt>
   13914:	mov	r1, #256	; 0x100
   13918:	mov	r0, #1
   1391c:	bl	1133c <calloc@plt>
   13920:	cmp	r0, #0
   13924:	beq	13ae0 <sprintf@plt+0x24e0>
   13928:	ldrh	r3, [r4]
   1392c:	str	r0, [r5, #420]	; 0x1a4
   13930:	add	r0, r5, #21
   13934:	cmp	r3, #2
   13938:	beq	13ab4 <sprintf@plt+0x24b4>
   1393c:	cmp	r3, #10
   13940:	beq	1395c <sprintf@plt+0x235c>
   13944:	mov	r3, #12
   13948:	strb	r3, [r5, #20]
   1394c:	mov	r0, r5
   13950:	add	sp, sp, #140	; 0x8c
   13954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13958:	b	13390 <sprintf@plt+0x1d90>
   1395c:	ldrb	fp, [r4, #15]
   13960:	ldrb	r9, [r4, #14]
   13964:	ldrb	r8, [r4, #13]
   13968:	ldrb	r2, [r4, #22]
   1396c:	ldrb	r7, [r4, #12]
   13970:	ldrb	r6, [r4, #11]
   13974:	lsr	sl, fp, #4
   13978:	ldrb	lr, [r4, #10]
   1397c:	ldrb	ip, [r4, #9]
   13980:	ldrb	r1, [r4, #8]
   13984:	ldrb	r3, [r4, #23]
   13988:	str	r2, [sp, #132]	; 0x84
   1398c:	ldrb	r2, [r4, #21]
   13990:	str	sl, [sp, #64]	; 0x40
   13994:	lsr	sl, r9, #4
   13998:	and	r9, r9, #15
   1399c:	str	sl, [sp, #72]	; 0x48
   139a0:	ldrb	sl, [r4, #20]
   139a4:	str	r9, [sp, #68]	; 0x44
   139a8:	lsr	r9, r8, #4
   139ac:	and	r8, r8, #15
   139b0:	str	r9, [sp, #80]	; 0x50
   139b4:	ldrb	r9, [r4, #19]
   139b8:	str	r8, [sp, #76]	; 0x4c
   139bc:	lsr	r8, r7, #4
   139c0:	and	r7, r7, #15
   139c4:	str	r8, [sp, #88]	; 0x58
   139c8:	ldrb	r8, [r4, #18]
   139cc:	str	r7, [sp, #84]	; 0x54
   139d0:	lsr	r7, r6, #4
   139d4:	and	r6, r6, #15
   139d8:	str	r7, [sp, #96]	; 0x60
   139dc:	ldrb	r7, [r4, #17]
   139e0:	ldrb	r4, [r4, #16]
   139e4:	str	r6, [sp, #92]	; 0x5c
   139e8:	lsr	r6, lr, #4
   139ec:	and	lr, lr, #15
   139f0:	str	lr, [sp, #100]	; 0x64
   139f4:	lsr	lr, ip, #4
   139f8:	and	ip, ip, #15
   139fc:	str	ip, [sp, #108]	; 0x6c
   13a00:	lsr	ip, r1, #4
   13a04:	and	r1, r1, #15
   13a08:	str	r1, [sp, #116]	; 0x74
   13a0c:	ldr	r1, [pc, #208]	; 13ae4 <sprintf@plt+0x24e4>
   13a10:	str	r6, [sp, #104]	; 0x68
   13a14:	str	lr, [sp, #112]	; 0x70
   13a18:	str	ip, [sp, #120]	; 0x78
   13a1c:	str	r1, [sp, #124]	; 0x7c
   13a20:	lsr	r1, r7, #4
   13a24:	str	r1, [sp, #48]	; 0x30
   13a28:	ldr	r1, [sp, #132]	; 0x84
   13a2c:	lsr	ip, r4, #4
   13a30:	and	r7, r7, #15
   13a34:	and	r4, r4, #15
   13a38:	str	ip, [sp, #56]	; 0x38
   13a3c:	str	r7, [sp, #44]	; 0x2c
   13a40:	lsr	ip, r8, #4
   13a44:	lsr	r7, r1, #4
   13a48:	and	r1, r1, #15
   13a4c:	lsr	lr, r9, #4
   13a50:	lsr	r6, r2, #4
   13a54:	and	r8, r8, #15
   13a58:	str	r4, [sp, #52]	; 0x34
   13a5c:	and	r9, r9, #15
   13a60:	lsr	r4, sl, #4
   13a64:	and	r2, r2, #15
   13a68:	and	sl, sl, #15
   13a6c:	str	ip, [sp, #40]	; 0x28
   13a70:	lsr	ip, r3, #4
   13a74:	and	fp, fp, #15
   13a78:	str	r2, [sp, #12]
   13a7c:	stmib	sp, {r1, r7}
   13a80:	str	r8, [sp, #36]	; 0x24
   13a84:	str	lr, [sp, #32]
   13a88:	str	r9, [sp, #28]
   13a8c:	str	r4, [sp, #24]
   13a90:	str	sl, [sp, #20]
   13a94:	str	r6, [sp, #16]
   13a98:	str	ip, [sp]
   13a9c:	and	r3, r3, #15
   13aa0:	ldr	r2, [pc, #64]	; 13ae8 <sprintf@plt+0x24e8>
   13aa4:	mov	r1, #256	; 0x100
   13aa8:	str	fp, [sp, #60]	; 0x3c
   13aac:	bl	11594 <snprintf@plt>
   13ab0:	b	13944 <sprintf@plt+0x2344>
   13ab4:	ldrb	r1, [r4, #6]
   13ab8:	ldrb	lr, [r4, #4]
   13abc:	ldrb	ip, [r4, #5]
   13ac0:	ldr	r2, [pc, #36]	; 13aec <sprintf@plt+0x24ec>
   13ac4:	ldrb	r3, [r4, #7]
   13ac8:	str	r2, [sp, #12]
   13acc:	stm	sp, {r1, ip, lr}
   13ad0:	mov	r1, #256	; 0x100
   13ad4:	ldr	r2, [pc, #20]	; 13af0 <sprintf@plt+0x24f0>
   13ad8:	bl	11594 <snprintf@plt>
   13adc:	b	13944 <sprintf@plt+0x2344>
   13ae0:	bl	114d4 <rb_outofmemory@plt>
   13ae4:	andeq	r9, r1, r0, lsr #12
   13ae8:			; <UNDEFINED> instruction: 0x000195bc
   13aec:	andeq	r9, r1, ip, lsr #11
   13af0:	muleq	r1, ip, r5
   13af4:	ldrh	ip, [r2]
   13af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13afc:	sub	sp, sp, #140	; 0x8c
   13b00:	cmp	ip, #2
   13b04:	beq	13c84 <sprintf@plt+0x2684>
   13b08:	cmp	ip, #10
   13b0c:	beq	13b18 <sprintf@plt+0x2518>
   13b10:	add	sp, sp, #140	; 0x8c
   13b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b18:	ldrb	sl, [r2, #15]
   13b1c:	ldrb	r6, [r2, #14]
   13b20:	ldrb	fp, [r2, #22]
   13b24:	ldrb	r5, [r2, #13]
   13b28:	ldrb	r4, [r2, #12]
   13b2c:	ldrb	lr, [r2, #11]
   13b30:	str	fp, [sp, #128]	; 0x80
   13b34:	lsr	fp, sl, #4
   13b38:	and	sl, sl, #15
   13b3c:	ldrb	ip, [r2, #10]
   13b40:	ldrb	r9, [r2, #23]
   13b44:	ldrb	r8, [r2, #9]
   13b48:	ldrb	r7, [r2, #8]
   13b4c:	str	sl, [sp, #132]	; 0x84
   13b50:	str	fp, [sp, #64]	; 0x40
   13b54:	lsr	sl, r6, #4
   13b58:	and	fp, r6, #15
   13b5c:	str	fp, [sp, #68]	; 0x44
   13b60:	and	fp, r5, #15
   13b64:	ldrb	r6, [r2, #21]
   13b68:	str	sl, [sp, #72]	; 0x48
   13b6c:	lsr	sl, r5, #4
   13b70:	str	fp, [sp, #76]	; 0x4c
   13b74:	and	fp, r4, #15
   13b78:	ldrb	r5, [r2, #20]
   13b7c:	str	sl, [sp, #80]	; 0x50
   13b80:	lsr	sl, r4, #4
   13b84:	str	fp, [sp, #84]	; 0x54
   13b88:	and	fp, lr, #15
   13b8c:	ldrb	r4, [r2, #19]
   13b90:	str	sl, [sp, #88]	; 0x58
   13b94:	lsr	sl, lr, #4
   13b98:	str	fp, [sp, #92]	; 0x5c
   13b9c:	and	fp, ip, #15
   13ba0:	ldrb	lr, [r2, #18]
   13ba4:	str	sl, [sp, #96]	; 0x60
   13ba8:	lsr	sl, ip, #4
   13bac:	str	fp, [sp, #100]	; 0x64
   13bb0:	ldrb	ip, [r2, #17]
   13bb4:	ldrb	r2, [r2, #16]
   13bb8:	str	sl, [sp, #104]	; 0x68
   13bbc:	and	sl, r8, #15
   13bc0:	lsr	r8, r8, #4
   13bc4:	str	r8, [sp, #112]	; 0x70
   13bc8:	and	r8, r7, #15
   13bcc:	lsr	r7, r7, #4
   13bd0:	str	sl, [sp, #108]	; 0x6c
   13bd4:	str	r8, [sp, #116]	; 0x74
   13bd8:	str	r7, [sp, #120]	; 0x78
   13bdc:	ldr	r7, [pc, #224]	; 13cc4 <sprintf@plt+0x26c4>
   13be0:	cmp	r3, #0
   13be4:	ldr	fp, [sp, #128]	; 0x80
   13be8:	moveq	r3, r7
   13bec:	ldr	sl, [sp, #132]	; 0x84
   13bf0:	str	r3, [sp, #124]	; 0x7c
   13bf4:	lsr	r3, r9, #4
   13bf8:	lsr	r8, fp, #4
   13bfc:	str	r3, [sp]
   13c00:	and	r7, r6, #15
   13c04:	and	r3, r9, #15
   13c08:	lsr	r6, r6, #4
   13c0c:	and	r9, r5, #15
   13c10:	str	sl, [sp, #60]	; 0x3c
   13c14:	str	r8, [sp, #8]
   13c18:	str	r7, [sp, #12]
   13c1c:	and	r8, r4, #15
   13c20:	and	r7, lr, #15
   13c24:	str	r6, [sp, #16]
   13c28:	lsr	lr, lr, #4
   13c2c:	and	r6, ip, #15
   13c30:	str	r9, [sp, #20]
   13c34:	lsr	ip, ip, #4
   13c38:	and	r9, r2, #15
   13c3c:	and	sl, fp, #15
   13c40:	lsr	r5, r5, #4
   13c44:	lsr	r4, r4, #4
   13c48:	lsr	r2, r2, #4
   13c4c:	str	r2, [sp, #56]	; 0x38
   13c50:	str	sl, [sp, #4]
   13c54:	str	r5, [sp, #24]
   13c58:	str	r8, [sp, #28]
   13c5c:	str	r4, [sp, #32]
   13c60:	str	r7, [sp, #36]	; 0x24
   13c64:	str	lr, [sp, #40]	; 0x28
   13c68:	str	r6, [sp, #44]	; 0x2c
   13c6c:	str	ip, [sp, #48]	; 0x30
   13c70:	ldr	r2, [pc, #80]	; 13cc8 <sprintf@plt+0x26c8>
   13c74:	str	r9, [sp, #52]	; 0x34
   13c78:	bl	11594 <snprintf@plt>
   13c7c:	add	sp, sp, #140	; 0x8c
   13c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c84:	ldrb	r4, [r2, #7]
   13c88:	ldrb	lr, [r2, #6]
   13c8c:	ldrb	ip, [r2, #5]
   13c90:	ldr	r5, [pc, #52]	; 13ccc <sprintf@plt+0x26cc>
   13c94:	ldrb	r2, [r2, #4]
   13c98:	cmp	r3, #0
   13c9c:	moveq	r3, r5
   13ca0:	str	r3, [sp, #12]
   13ca4:	str	r2, [sp, #8]
   13ca8:	mov	r3, r4
   13cac:	str	lr, [sp]
   13cb0:	str	ip, [sp, #4]
   13cb4:	ldr	r2, [pc, #20]	; 13cd0 <sprintf@plt+0x26d0>
   13cb8:	bl	11594 <snprintf@plt>
   13cbc:	add	sp, sp, #140	; 0x8c
   13cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cc4:	andeq	r9, r1, r0, lsr #12
   13cc8:			; <UNDEFINED> instruction: 0x000195bc
   13ccc:	andeq	r9, r1, ip, lsr #11
   13cd0:	muleq	r1, ip, r5
   13cd4:	push	{r4, r5, r6, lr}
   13cd8:	mov	r4, r0
   13cdc:	ldrb	r1, [r0, #277]	; 0x115
   13ce0:	sub	r1, r1, #1
   13ce4:	uxtb	r1, r1
   13ce8:	cmp	r1, #0
   13cec:	strb	r1, [r0, #277]	; 0x115
   13cf0:	beq	13d54 <sprintf@plt+0x2754>
   13cf4:	ldrb	r5, [r0, #20]
   13cf8:	cmp	r5, #12
   13cfc:	beq	13d30 <sprintf@plt+0x2730>
   13d00:	cmp	r5, #28
   13d04:	beq	13d10 <sprintf@plt+0x2710>
   13d08:	cmp	r5, #1
   13d0c:	popne	{r4, r5, r6, pc}
   13d10:	ldr	r1, [r4, #420]	; 0x1a4
   13d14:	add	r0, r4, #21
   13d18:	mov	r2, #256	; 0x100
   13d1c:	bl	113a8 <rb_strlcpy@plt>
   13d20:	strb	r5, [r4, #20]
   13d24:	mov	r0, r4
   13d28:	pop	{r4, r5, r6, lr}
   13d2c:	b	13390 <sprintf@plt+0x1d90>
   13d30:	add	r2, r0, #292	; 0x124
   13d34:	mov	r3, #0
   13d38:	add	r0, r0, #21
   13d3c:	mov	r1, #256	; 0x100
   13d40:	bl	13af4 <sprintf@plt+0x24f4>
   13d44:	strb	r5, [r4, #20]
   13d48:	mov	r0, r4
   13d4c:	pop	{r4, r5, r6, lr}
   13d50:	b	13390 <sprintf@plt+0x1d90>
   13d54:	ldr	r3, [r0, #424]	; 0x1a8
   13d58:	ldm	r3, {r0, r2}
   13d5c:	blx	r2
   13d60:	ldr	r3, [r4, #8]
   13d64:	ldr	r0, [r4, #420]	; 0x1a4
   13d68:	cmp	r3, #0
   13d6c:	ldrne	r1, [r4, #4]
   13d70:	ldreq	r2, [pc, #76]	; 13dc4 <sprintf@plt+0x27c4>
   13d74:	ldreq	r1, [r4, #4]
   13d78:	ldrne	r2, [pc, #68]	; 13dc4 <sprintf@plt+0x27c4>
   13d7c:	strne	r1, [r3, #4]
   13d80:	ldrne	r1, [r4, #4]
   13d84:	streq	r1, [r2, #52]	; 0x34
   13d88:	cmp	r1, #0
   13d8c:	strne	r3, [r1, #8]
   13d90:	streq	r3, [r2, #48]	; 0x30
   13d94:	ldr	r3, [r2, #56]	; 0x38
   13d98:	mov	r1, #0
   13d9c:	sub	r3, r3, #1
   13da0:	cmp	r0, r1
   13da4:	str	r1, [r4, #4]
   13da8:	str	r1, [r4, #8]
   13dac:	str	r3, [r2, #56]	; 0x38
   13db0:	beq	13db8 <sprintf@plt+0x27b8>
   13db4:	bl	113cc <free@plt>
   13db8:	mov	r0, r4
   13dbc:	pop	{r4, r5, r6, lr}
   13dc0:	b	113cc <free@plt>
   13dc4:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   13dc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dcc:	sub	sp, sp, #1536	; 0x600
   13dd0:	sub	sp, sp, #12
   13dd4:	mov	r3, #128	; 0x80
   13dd8:	add	r9, sp, #24
   13ddc:	str	r3, [sp, #20]
   13de0:	add	r7, sp, #508	; 0x1fc
   13de4:	bl	112c4 <rb_get_fd@plt>
   13de8:	sub	r3, r9, #4
   13dec:	str	r3, [sp, #4]
   13df0:	mov	r1, r7
   13df4:	mov	r3, #0
   13df8:	str	r9, [sp]
   13dfc:	ldr	r2, [pc, #1556]	; 14418 <sprintf@plt+0x2e18>
   13e00:	bl	115b8 <recvfrom@plt>
   13e04:	add	r3, r0, #1
   13e08:	cmp	r3, #1
   13e0c:	bls	14114 <sprintf@plt+0x2b14>
   13e10:	cmp	r0, #12
   13e14:	mov	sl, r0
   13e18:	ble	13f74 <sprintf@plt+0x2974>
   13e1c:	ldr	fp, [pc, #1528]	; 1441c <sprintf@plt+0x2e1c>
   13e20:	ldrh	r8, [r7, #4]
   13e24:	ldrh	r0, [r7, #6]
   13e28:	ldrh	r1, [r7, #8]
   13e2c:	ldrh	r2, [r7, #10]
   13e30:	ldr	r3, [fp, #48]	; 0x30
   13e34:	rev16	r8, r8
   13e38:	rev16	r1, r1
   13e3c:	rev16	r0, r0
   13e40:	rev16	r2, r2
   13e44:	cmp	r3, #0
   13e48:	strh	r8, [r7, #4]
   13e4c:	strh	r1, [r7, #8]
   13e50:	uxth	r8, r8
   13e54:	strh	r0, [r7, #6]
   13e58:	strh	r2, [r7, #10]
   13e5c:	ldrh	r1, [r7]
   13e60:	bne	13e74 <sprintf@plt+0x2874>
   13e64:	b	13f74 <sprintf@plt+0x2974>
   13e68:	ldr	r3, [r3, #8]
   13e6c:	cmp	r3, #0
   13e70:	beq	13f74 <sprintf@plt+0x2974>
   13e74:	ldr	r4, [r3]
   13e78:	ldr	r2, [r4, #12]
   13e7c:	cmp	r1, r2
   13e80:	bne	13e68 <sprintf@plt+0x2868>
   13e84:	ldr	r3, [pc, #1428]	; 14420 <sprintf@plt+0x2e20>
   13e88:	ldr	r6, [r3]
   13e8c:	cmp	r6, #0
   13e90:	ble	13f88 <sprintf@plt+0x2988>
   13e94:	ldrh	r2, [r9]
   13e98:	ldrh	r3, [r9, #2]
   13e9c:	ldr	ip, [sp, #28]
   13ea0:	cmp	r2, #10
   13ea4:	beq	14098 <sprintf@plt+0x2a98>
   13ea8:	cmp	r2, #2
   13eac:	bne	13f88 <sprintf@plt+0x2988>
   13eb0:	ldr	r2, [pc, #1388]	; 14424 <sprintf@plt+0x2e24>
   13eb4:	mov	r1, #0
   13eb8:	b	13ecc <sprintf@plt+0x28cc>
   13ebc:	add	r1, r1, #1
   13ec0:	cmp	r6, r1
   13ec4:	add	r2, r2, #128	; 0x80
   13ec8:	beq	13f88 <sprintf@plt+0x2988>
   13ecc:	ldrh	r0, [r2]
   13ed0:	cmp	r0, #2
   13ed4:	bne	13ebc <sprintf@plt+0x28bc>
   13ed8:	ldrh	r0, [r2, #2]
   13edc:	cmp	r0, r3
   13ee0:	bne	13ebc <sprintf@plt+0x28bc>
   13ee4:	ldr	r0, [r2, #4]
   13ee8:	cmp	r0, #0
   13eec:	beq	13ef8 <sprintf@plt+0x28f8>
   13ef0:	cmp	ip, r0
   13ef4:	bne	13ebc <sprintf@plt+0x28bc>
   13ef8:	mov	r5, #1
   13efc:	b	13f8c <sprintf@plt+0x298c>
   13f00:	ldrh	r3, [r7, #6]
   13f04:	cmp	r3, #0
   13f08:	beq	14028 <sprintf@plt+0x2a28>
   13f0c:	ldrh	r2, [r7, #4]
   13f10:	add	r6, sp, #520	; 0x208
   13f14:	cmp	r2, #0
   13f18:	movne	r3, r6
   13f1c:	subne	r7, r3, #12
   13f20:	bne	13f48 <sprintf@plt+0x2948>
   13f24:	b	14128 <sprintf@plt+0x2b28>
   13f28:	ldrh	r3, [r7, #4]
   13f2c:	add	r0, r0, #4
   13f30:	add	r6, r6, r0
   13f34:	sub	r3, r3, #1
   13f38:	uxth	r3, r3
   13f3c:	cmp	r3, #0
   13f40:	strh	r3, [r7, #4]
   13f44:	beq	14124 <sprintf@plt+0x2b24>
   13f48:	mov	r1, sl
   13f4c:	mov	r0, r6
   13f50:	bl	14e14 <sprintf@plt+0x3814>
   13f54:	cmp	r0, #0
   13f58:	bge	13f28 <sprintf@plt+0x2928>
   13f5c:	add	r5, fp, r5, lsl #2
   13f60:	mov	r0, r4
   13f64:	ldr	r3, [r5, #4]
   13f68:	add	r3, r3, #1
   13f6c:	str	r3, [r5, #4]
   13f70:	bl	13cd4 <sprintf@plt+0x26d4>
   13f74:	mov	r0, #1
   13f78:	add	sp, sp, #1536	; 0x600
   13f7c:	add	sp, sp, #12
   13f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f84:	ldr	r4, [sp, #8]
   13f88:	mov	r5, #0
   13f8c:	ldr	r3, [r4, #288]	; 0x120
   13f90:	cmp	r3, r5
   13f94:	addne	r2, fp, r5, lsl #2
   13f98:	ldrne	r3, [r2, #4]
   13f9c:	addne	r3, r3, #3
   13fa0:	strne	r3, [r2, #4]
   13fa4:	cmp	r8, #1
   13fa8:	bne	13f74 <sprintf@plt+0x2974>
   13fac:	mov	r2, #256	; 0x100
   13fb0:	add	sl, r7, sl
   13fb4:	str	r2, [sp]
   13fb8:	mov	r1, sl
   13fbc:	add	r3, sp, #152	; 0x98
   13fc0:	add	r2, sp, #520	; 0x208
   13fc4:	mov	r0, r7
   13fc8:	bl	14860 <sprintf@plt+0x3260>
   13fcc:	cmp	r0, #0
   13fd0:	ble	13f74 <sprintf@plt+0x2974>
   13fd4:	add	r1, r4, #21
   13fd8:	add	r0, sp, #152	; 0x98
   13fdc:	bl	113f0 <rb_strcasecmp@plt>
   13fe0:	cmp	r0, #0
   13fe4:	bne	13f74 <sprintf@plt+0x2974>
   13fe8:	ldrb	r3, [sp, #511]	; 0x1ff
   13fec:	ands	r3, r3, #15
   13ff0:	beq	13f00 <sprintf@plt+0x2900>
   13ff4:	sub	r2, r3, #4
   13ff8:	cmp	r3, #2
   13ffc:	cmpne	r2, #1
   14000:	bls	13f5c <sprintf@plt+0x295c>
   14004:	cmp	r3, #3
   14008:	bne	14028 <sprintf@plt+0x2a28>
   1400c:	add	r5, fp, r5, lsl #2
   14010:	ldr	r3, [r5, #4]
   14014:	add	r2, r3, #3
   14018:	cmp	r3, #0
   1401c:	movlt	r3, r2
   14020:	asr	r3, r3, #2
   14024:	str	r3, [r5, #4]
   14028:	ldr	r3, [r4, #424]	; 0x1a8
   1402c:	mov	r1, #0
   14030:	ldm	r3, {r0, r2}
   14034:	blx	r2
   14038:	ldmib	r4, {r2, r3}
   1403c:	ldr	r0, [r4, #420]	; 0x1a4
   14040:	cmp	r3, #0
   14044:	strne	r2, [r3, #4]
   14048:	ldrne	r2, [r4, #4]
   1404c:	streq	r2, [fp, #52]	; 0x34
   14050:	cmp	r2, #0
   14054:	strne	r3, [r2, #8]
   14058:	streq	r3, [fp, #48]	; 0x30
   1405c:	ldr	r3, [fp, #56]	; 0x38
   14060:	mov	r2, #0
   14064:	sub	r3, r3, #1
   14068:	cmp	r0, r2
   1406c:	str	r2, [r4, #4]
   14070:	str	r2, [r4, #8]
   14074:	str	r3, [fp, #56]	; 0x38
   14078:	beq	14080 <sprintf@plt+0x2a80>
   1407c:	bl	113cc <free@plt>
   14080:	mov	r0, r4
   14084:	bl	113cc <free@plt>
   14088:	mov	r0, #1
   1408c:	add	sp, sp, #1536	; 0x600
   14090:	add	sp, sp, #12
   14094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14098:	add	r2, r9, #8
   1409c:	str	r4, [sp, #8]
   140a0:	ldr	r5, [pc, #896]	; 14428 <sprintf@plt+0x2e28>
   140a4:	str	r2, [sp, #12]
   140a8:	mov	r9, #0
   140ac:	mov	r4, r3
   140b0:	b	140c4 <sprintf@plt+0x2ac4>
   140b4:	add	r9, r9, #1
   140b8:	cmp	r6, r9
   140bc:	add	r5, r5, #128	; 0x80
   140c0:	beq	13f84 <sprintf@plt+0x2984>
   140c4:	ldrh	r2, [r5, #-8]
   140c8:	cmp	r2, #10
   140cc:	bne	140b4 <sprintf@plt+0x2ab4>
   140d0:	ldrh	r2, [r5, #-6]
   140d4:	cmp	r2, r4
   140d8:	bne	140b4 <sprintf@plt+0x2ab4>
   140dc:	mov	r2, #16
   140e0:	ldr	r1, [sp, #12]
   140e4:	mov	r0, r5
   140e8:	bl	11294 <memcmp@plt>
   140ec:	cmp	r0, #0
   140f0:	beq	1410c <sprintf@plt+0x2b0c>
   140f4:	mov	r2, #16
   140f8:	ldr	r1, [pc, #812]	; 1442c <sprintf@plt+0x2e2c>
   140fc:	mov	r0, r5
   14100:	bl	11294 <memcmp@plt>
   14104:	cmp	r0, #0
   14108:	bne	140b4 <sprintf@plt+0x2ab4>
   1410c:	ldr	r4, [sp, #8]
   14110:	b	13ef8 <sprintf@plt+0x28f8>
   14114:	mov	r0, #0
   14118:	add	sp, sp, #1536	; 0x600
   1411c:	add	sp, sp, #12
   14120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14124:	ldrh	r3, [r7, #6]
   14128:	cmp	r3, #0
   1412c:	cmpne	sl, r6
   14130:	bls	141dc <sprintf@plt+0x2bdc>
   14134:	ldr	r8, [pc, #756]	; 14430 <sprintf@plt+0x2e30>
   14138:	add	r7, sp, #508	; 0x1fc
   1413c:	mov	r9, #0
   14140:	sub	ip, r3, #1
   14144:	str	r8, [sp]
   14148:	add	r3, sp, #152	; 0x98
   1414c:	mov	r2, r6
   14150:	mov	r1, sl
   14154:	mov	r0, r7
   14158:	strh	ip, [r7, #6]
   1415c:	bl	14860 <sprintf@plt+0x3260>
   14160:	cmp	r0, #0
   14164:	ble	13f5c <sprintf@plt+0x295c>
   14168:	add	r6, r6, r0
   1416c:	add	r2, r6, #10
   14170:	cmp	sl, r2
   14174:	strb	r9, [sp, #407]	; 0x197
   14178:	bls	141dc <sprintf@plt+0x2bdc>
   1417c:	mov	r0, r6
   14180:	str	r2, [sp, #12]
   14184:	bl	14edc <sprintf@plt+0x38dc>
   14188:	str	r0, [sp, #8]
   1418c:	add	r0, r6, #2
   14190:	bl	14edc <sprintf@plt+0x38dc>
   14194:	add	r0, r6, #4
   14198:	bl	14eec <sprintf@plt+0x38ec>
   1419c:	str	r0, [r4, #16]
   141a0:	add	r0, r6, #8
   141a4:	bl	14edc <sprintf@plt+0x38dc>
   141a8:	ldr	r3, [sp, #8]
   141ac:	ldr	r2, [sp, #12]
   141b0:	cmp	r3, #12
   141b4:	beq	14300 <sprintf@plt+0x2d00>
   141b8:	cmp	r3, #28
   141bc:	beq	142c0 <sprintf@plt+0x2cc0>
   141c0:	cmp	r3, #1
   141c4:	beq	141e4 <sprintf@plt+0x2be4>
   141c8:	ldrh	r3, [r7, #6]
   141cc:	add	r6, r2, r0
   141d0:	cmp	r3, #0
   141d4:	cmpne	sl, r6
   141d8:	bhi	14140 <sprintf@plt+0x2b40>
   141dc:	ldrb	r3, [r4, #20]
   141e0:	b	1433c <sprintf@plt+0x2d3c>
   141e4:	ldrb	r3, [r4, #20]
   141e8:	cmp	r0, #4
   141ec:	cmpeq	r3, #1
   141f0:	bne	13f5c <sprintf@plt+0x295c>
   141f4:	add	r3, r4, #292	; 0x124
   141f8:	mov	r2, #2
   141fc:	strh	r2, [r3]
   14200:	ldr	r3, [r6, #10]
   14204:	str	r3, [r4, #296]	; 0x128
   14208:	mov	r1, #132	; 0x84
   1420c:	mov	r0, #1
   14210:	bl	1133c <calloc@plt>
   14214:	subs	r6, r0, #0
   14218:	beq	143bc <sprintf@plt+0x2dbc>
   1421c:	ldr	r3, [r4, #420]	; 0x1a4
   14220:	mov	r0, r6
   14224:	mov	r2, #128	; 0x80
   14228:	str	r3, [r0], #4
   1422c:	add	r1, r4, #292	; 0x124
   14230:	bl	11444 <memcpy@plt>
   14234:	ldr	r3, [r4, #424]	; 0x1a8
   14238:	mov	r1, r6
   1423c:	ldm	r3, {r0, r2}
   14240:	blx	r2
   14244:	mov	r0, r6
   14248:	bl	113cc <free@plt>
   1424c:	ldmib	r4, {r2, r3}
   14250:	ldr	r0, [r4, #420]	; 0x1a4
   14254:	cmp	r3, #0
   14258:	strne	r2, [r3, #4]
   1425c:	ldrne	r2, [r4, #4]
   14260:	streq	r2, [fp, #52]	; 0x34
   14264:	cmp	r2, #0
   14268:	strne	r3, [r2, #8]
   1426c:	streq	r3, [fp, #48]	; 0x30
   14270:	ldr	r3, [fp, #56]	; 0x38
   14274:	mov	r2, #0
   14278:	sub	r3, r3, #1
   1427c:	cmp	r0, r2
   14280:	str	r2, [r4, #4]
   14284:	str	r2, [r4, #8]
   14288:	str	r3, [fp, #56]	; 0x38
   1428c:	beq	14294 <sprintf@plt+0x2c94>
   14290:	bl	113cc <free@plt>
   14294:	add	r5, fp, r5, lsl #2
   14298:	mov	r0, r4
   1429c:	bl	113cc <free@plt>
   142a0:	ldr	r3, [r5, #4]
   142a4:	mov	r0, #1
   142a8:	add	r2, r3, #3
   142ac:	cmp	r3, #0
   142b0:	movlt	r3, r2
   142b4:	asr	r3, r3, #2
   142b8:	str	r3, [r5, #4]
   142bc:	b	13f78 <sprintf@plt+0x2978>
   142c0:	ldrb	r3, [r4, #20]
   142c4:	cmp	r0, #16
   142c8:	cmpeq	r3, #28
   142cc:	bne	13f5c <sprintf@plt+0x295c>
   142d0:	add	r3, r4, #292	; 0x124
   142d4:	mov	r1, #10
   142d8:	strh	r1, [r3]
   142dc:	ldr	ip, [r2]
   142e0:	ldr	r0, [r2, #4]
   142e4:	ldr	r1, [r2, #8]
   142e8:	ldr	r2, [r2, #12]
   142ec:	str	ip, [r4, #300]	; 0x12c
   142f0:	str	r0, [r4, #304]	; 0x130
   142f4:	str	r1, [r4, #308]	; 0x134
   142f8:	str	r2, [r4, #312]	; 0x138
   142fc:	b	14208 <sprintf@plt+0x2c08>
   14300:	ldrb	r3, [r4, #20]
   14304:	cmp	r3, #12
   14308:	bne	13f5c <sprintf@plt+0x295c>
   1430c:	str	r8, [sp]
   14310:	mov	r1, sl
   14314:	mov	r0, r7
   14318:	add	r3, sp, #152	; 0x98
   1431c:	bl	14860 <sprintf@plt+0x3260>
   14320:	cmp	r0, #0
   14324:	ble	13f5c <sprintf@plt+0x295c>
   14328:	add	r1, sp, #152	; 0x98
   1432c:	mov	r2, #256	; 0x100
   14330:	ldr	r0, [r4, #420]	; 0x1a4
   14334:	bl	113a8 <rb_strlcpy@plt>
   14338:	ldrb	r3, [r4, #20]
   1433c:	cmp	r3, #12
   14340:	bne	14208 <sprintf@plt+0x2c08>
   14344:	ldr	r6, [r4, #420]	; 0x1a4
   14348:	cmp	r6, #0
   1434c:	beq	13f5c <sprintf@plt+0x295c>
   14350:	add	r3, r4, #292	; 0x124
   14354:	ldr	r0, [r4, #424]	; 0x1a8
   14358:	ldrh	r3, [r3]
   1435c:	cmp	r3, #10
   14360:	beq	143c0 <sprintf@plt+0x2dc0>
   14364:	bl	13580 <sprintf@plt+0x1f80>
   14368:	mov	r7, r0
   1436c:	mov	r0, r6
   14370:	bl	11420 <strlen@plt>
   14374:	add	r8, r0, #1
   14378:	mov	r0, r8
   1437c:	bl	11504 <malloc@plt>
   14380:	subs	r9, r0, #0
   14384:	beq	143bc <sprintf@plt+0x2dbc>
   14388:	mov	r2, r8
   1438c:	mov	r1, r6
   14390:	bl	11444 <memcpy@plt>
   14394:	str	r9, [r7, #420]	; 0x1a4
   14398:	mov	r1, r6
   1439c:	mov	r2, #256	; 0x100
   143a0:	add	r0, r7, #21
   143a4:	bl	113a8 <rb_strlcpy@plt>
   143a8:	mov	r3, #1
   143ac:	strb	r3, [r7, #20]
   143b0:	mov	r0, r7
   143b4:	bl	13390 <sprintf@plt+0x1d90>
   143b8:	b	1424c <sprintf@plt+0x2c4c>
   143bc:	bl	114d4 <rb_outofmemory@plt>
   143c0:	bl	13580 <sprintf@plt+0x1f80>
   143c4:	mov	r7, r0
   143c8:	mov	r0, r6
   143cc:	bl	11420 <strlen@plt>
   143d0:	add	r8, r0, #1
   143d4:	mov	r0, r8
   143d8:	bl	11504 <malloc@plt>
   143dc:	subs	r9, r0, #0
   143e0:	beq	143bc <sprintf@plt+0x2dbc>
   143e4:	mov	r2, r8
   143e8:	mov	r1, r6
   143ec:	bl	11444 <memcpy@plt>
   143f0:	str	r9, [r7, #420]	; 0x1a4
   143f4:	mov	r1, r6
   143f8:	mov	r2, #256	; 0x100
   143fc:	add	r0, r7, #21
   14400:	bl	113a8 <rb_strlcpy@plt>
   14404:	mov	r3, #28
   14408:	strb	r3, [r7, #20]
   1440c:	mov	r0, r7
   14410:	bl	13390 <sprintf@plt+0x1d90>
   14414:	b	1424c <sprintf@plt+0x2c4c>
   14418:	andeq	r0, r0, ip, lsl #8
   1441c:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   14420:	ldrdeq	pc, [r2], -r4
   14424:	muleq	r3, r4, r2
   14428:	muleq	r3, ip, r2
   1442c:	strdeq	sl, [r2], -r0
   14430:	andeq	r0, r0, r3, ror #2
   14434:	push	{r4, lr}
   14438:	mov	r4, r0
   1443c:	mov	r0, r4
   14440:	bl	13dc8 <sprintf@plt+0x27c8>
   14444:	subs	r3, r0, #0
   14448:	bne	1443c <sprintf@plt+0x2e3c>
   1444c:	mov	r0, r4
   14450:	ldr	r2, [pc, #8]	; 14460 <sprintf@plt+0x2e60>
   14454:	mov	r1, #1
   14458:	pop	{r4, lr}
   1445c:	b	112b8 <rb_setselect@plt>
   14460:	andeq	r4, r1, r4, lsr r4
   14464:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14468:	bl	1142c <rb_current_time@plt>
   1446c:	ldr	r7, [pc, #340]	; 145c8 <sprintf@plt+0x2fc8>
   14470:	ldr	r3, [r7, #48]	; 0x30
   14474:	cmp	r3, #0
   14478:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1447c:	mov	r6, r0
   14480:	ldr	r5, [r3, #8]
   14484:	mov	r8, #0
   14488:	mov	r9, #256	; 0x100
   1448c:	b	144a0 <sprintf@plt+0x2ea0>
   14490:	cmp	r5, #0
   14494:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14498:	mov	r3, r5
   1449c:	ldr	r5, [r5, #8]
   144a0:	ldr	r4, [r3]
   144a4:	ldr	r2, [r4, #284]	; 0x11c
   144a8:	ldr	r3, [r4, #280]	; 0x118
   144ac:	add	r3, r2, r3
   144b0:	cmp	r6, r3
   144b4:	blt	14490 <sprintf@plt+0x2e90>
   144b8:	ldr	r1, [r4, #288]	; 0x120
   144bc:	ldrb	r3, [r4, #277]	; 0x115
   144c0:	lsl	r2, r2, #1
   144c4:	add	r1, r7, r1, lsl #2
   144c8:	sub	r3, r3, #1
   144cc:	ldr	r0, [r1, #4]
   144d0:	uxtb	r3, r3
   144d4:	add	r0, r0, #1
   144d8:	cmp	r3, #0
   144dc:	str	r2, [r4, #284]	; 0x11c
   144e0:	str	r6, [r4, #280]	; 0x118
   144e4:	str	r0, [r1, #4]
   144e8:	strb	r3, [r4, #277]	; 0x115
   144ec:	beq	14560 <sprintf@plt+0x2f60>
   144f0:	ldrb	sl, [r4, #20]
   144f4:	cmp	sl, #12
   144f8:	beq	14534 <sprintf@plt+0x2f34>
   144fc:	cmp	sl, #28
   14500:	beq	1450c <sprintf@plt+0x2f0c>
   14504:	cmp	sl, #1
   14508:	bne	14490 <sprintf@plt+0x2e90>
   1450c:	mov	r2, r9
   14510:	ldr	r1, [r4, #420]	; 0x1a4
   14514:	add	r0, r4, #21
   14518:	bl	113a8 <rb_strlcpy@plt>
   1451c:	strb	sl, [r4, #20]
   14520:	mov	r0, r4
   14524:	bl	13390 <sprintf@plt+0x1d90>
   14528:	cmp	r5, #0
   1452c:	bne	14498 <sprintf@plt+0x2e98>
   14530:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14534:	mov	r3, r8
   14538:	add	r2, r4, #292	; 0x124
   1453c:	mov	r1, r9
   14540:	add	r0, r4, #21
   14544:	bl	13af4 <sprintf@plt+0x24f4>
   14548:	strb	sl, [r4, #20]
   1454c:	mov	r0, r4
   14550:	bl	13390 <sprintf@plt+0x1d90>
   14554:	cmp	r5, #0
   14558:	bne	14498 <sprintf@plt+0x2e98>
   1455c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14560:	ldr	r3, [r4, #424]	; 0x1a8
   14564:	mov	r1, r8
   14568:	ldm	r3, {r0, r2}
   1456c:	blx	r2
   14570:	ldmib	r4, {r2, r3}
   14574:	ldr	r0, [r4, #420]	; 0x1a4
   14578:	cmp	r3, #0
   1457c:	strne	r2, [r3, #4]
   14580:	ldrne	r2, [r4, #4]
   14584:	streq	r2, [r7, #52]	; 0x34
   14588:	cmp	r2, #0
   1458c:	strne	r3, [r2, #8]
   14590:	streq	r3, [r7, #48]	; 0x30
   14594:	ldr	r3, [r7, #56]	; 0x38
   14598:	cmp	r0, #0
   1459c:	sub	r3, r3, #1
   145a0:	str	r8, [r4, #4]
   145a4:	str	r8, [r4, #8]
   145a8:	str	r3, [r7, #56]	; 0x38
   145ac:	beq	145b4 <sprintf@plt+0x2fb4>
   145b0:	bl	113cc <free@plt>
   145b4:	mov	r0, r4
   145b8:	bl	113cc <free@plt>
   145bc:	cmp	r5, #0
   145c0:	bne	14498 <sprintf@plt+0x2e98>
   145c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   145c8:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   145cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145d0:	mov	r3, #0
   145d4:	ldr	r6, [pc, #604]	; 14838 <sprintf@plt+0x3238>
   145d8:	sub	sp, sp, #172	; 0xac
   145dc:	ldr	r1, [pc, #600]	; 1483c <sprintf@plt+0x323c>
   145e0:	ldr	r0, [pc, #600]	; 14840 <sprintf@plt+0x3240>
   145e4:	str	r3, [r6]
   145e8:	bl	11360 <fopen@plt>
   145ec:	subs	r4, r0, #0
   145f0:	beq	14720 <sprintf@plt+0x3120>
   145f4:	ldr	r5, [pc, #584]	; 14844 <sprintf@plt+0x3244>
   145f8:	ldr	r8, [pc, #584]	; 14848 <sprintf@plt+0x3248>
   145fc:	ldr	r7, [pc, #584]	; 1484c <sprintf@plt+0x324c>
   14600:	ldr	sl, [pc, #584]	; 14850 <sprintf@plt+0x3250>
   14604:	mov	r2, r4
   14608:	mov	r1, #128	; 0x80
   1460c:	add	r0, sp, #40	; 0x28
   14610:	bl	11300 <fgets@plt>
   14614:	cmp	r0, #0
   14618:	beq	14718 <sprintf@plt+0x3118>
   1461c:	mov	r1, r5
   14620:	add	r0, sp, #40	; 0x28
   14624:	bl	115d0 <strpbrk@plt>
   14628:	cmp	r0, #0
   1462c:	movne	r3, #0
   14630:	strbne	r3, [r0]
   14634:	bl	114e0 <__ctype_b_loc@plt>
   14638:	add	r3, sp, #40	; 0x28
   1463c:	ldr	r0, [r0]
   14640:	ldrb	r2, [r3]
   14644:	mov	r9, r3
   14648:	add	r3, r3, #1
   1464c:	lsl	r1, r2, #1
   14650:	ldrh	r1, [r0, r1]
   14654:	tst	r1, #8192	; 0x2000
   14658:	bne	14640 <sprintf@plt+0x3040>
   1465c:	cmp	r2, #0
   14660:	beq	14604 <sprintf@plt+0x3004>
   14664:	cmp	r2, #59	; 0x3b
   14668:	cmpne	r2, #35	; 0x23
   1466c:	beq	14604 <sprintf@plt+0x3004>
   14670:	mov	r3, r9
   14674:	b	14684 <sprintf@plt+0x3084>
   14678:	cmp	r2, #0
   1467c:	mov	r3, r1
   14680:	beq	14604 <sprintf@plt+0x3004>
   14684:	ldrb	r2, [r3, #1]
   14688:	add	r1, r3, #1
   1468c:	lsl	ip, r2, #1
   14690:	ldrh	ip, [r0, ip]
   14694:	tst	ip, #8192	; 0x2000
   14698:	beq	14678 <sprintf@plt+0x3078>
   1469c:	cmp	r2, #0
   146a0:	beq	14604 <sprintf@plt+0x3004>
   146a4:	ldrb	r2, [r1, #1]
   146a8:	add	fp, r3, #2
   146ac:	mov	ip, #0
   146b0:	strb	ip, [r1]
   146b4:	lsl	r3, r2, #1
   146b8:	ldrh	r3, [r0, r3]
   146bc:	tst	r3, #8192	; 0x2000
   146c0:	beq	146d8 <sprintf@plt+0x30d8>
   146c4:	ldrb	r3, [fp, #1]!
   146c8:	lsl	r3, r3, #1
   146cc:	ldrh	r3, [r0, r3]
   146d0:	tst	r3, #8192	; 0x2000
   146d4:	bne	146c4 <sprintf@plt+0x30c4>
   146d8:	mov	r1, r8
   146dc:	mov	r0, fp
   146e0:	bl	115d0 <strpbrk@plt>
   146e4:	mov	r1, r7
   146e8:	cmp	r0, #0
   146ec:	movne	r3, #0
   146f0:	strbne	r3, [r0]
   146f4:	mov	r0, r9
   146f8:	bl	113f0 <rb_strcasecmp@plt>
   146fc:	cmp	r0, #0
   14700:	bne	14738 <sprintf@plt+0x3138>
   14704:	mov	r1, fp
   14708:	mov	r2, #256	; 0x100
   1470c:	ldr	r0, [pc, #320]	; 14854 <sprintf@plt+0x3254>
   14710:	bl	113a8 <rb_strlcpy@plt>
   14714:	b	14604 <sprintf@plt+0x3004>
   14718:	mov	r0, r4
   1471c:	bl	112f4 <fclose@plt>
   14720:	ldr	r1, [r6]
   14724:	cmp	r1, #0
   14728:	beq	147c8 <sprintf@plt+0x31c8>
   1472c:	mov	r0, #0
   14730:	add	sp, sp, #172	; 0xac
   14734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14738:	mov	r1, sl
   1473c:	mov	r0, r9
   14740:	bl	113f0 <rb_strcasecmp@plt>
   14744:	subs	r1, r0, #0
   14748:	bne	14604 <sprintf@plt+0x3004>
   1474c:	ldr	r3, [r6]
   14750:	cmp	r3, #9
   14754:	bgt	14604 <sprintf@plt+0x3004>
   14758:	mov	r2, #32
   1475c:	add	r0, sp, #8
   14760:	bl	1136c <memset@plt>
   14764:	mov	lr, #2
   14768:	mov	ip, #5
   1476c:	add	r2, sp, #8
   14770:	mov	r0, fp
   14774:	add	r3, sp, #4
   14778:	mov	r1, r7
   1477c:	str	lr, [sp, #16]
   14780:	str	ip, [sp, #8]
   14784:	bl	113fc <getaddrinfo@plt>
   14788:	cmp	r0, #0
   1478c:	bne	14604 <sprintf@plt+0x3004>
   14790:	ldr	fp, [sp, #4]
   14794:	cmp	fp, #0
   14798:	beq	14604 <sprintf@plt+0x3004>
   1479c:	ldr	r9, [r6]
   147a0:	ldr	r3, [pc, #176]	; 14858 <sprintf@plt+0x3258>
   147a4:	ldr	r2, [fp, #16]
   147a8:	add	r0, r3, r9, lsl #7
   147ac:	ldr	r1, [fp, #20]
   147b0:	bl	11444 <memcpy@plt>
   147b4:	add	r9, r9, #1
   147b8:	mov	r0, fp
   147bc:	str	r9, [r6]
   147c0:	bl	11378 <freeaddrinfo@plt>
   147c4:	b	14604 <sprintf@plt+0x3004>
   147c8:	mov	r2, #32
   147cc:	add	r0, sp, #40	; 0x28
   147d0:	bl	1136c <memset@plt>
   147d4:	mov	lr, #2
   147d8:	mov	ip, #5
   147dc:	add	r2, sp, #40	; 0x28
   147e0:	add	r3, sp, #8
   147e4:	ldr	r1, [pc, #96]	; 1484c <sprintf@plt+0x324c>
   147e8:	ldr	r0, [pc, #108]	; 1485c <sprintf@plt+0x325c>
   147ec:	str	lr, [sp, #48]	; 0x30
   147f0:	str	ip, [sp, #40]	; 0x28
   147f4:	bl	113fc <getaddrinfo@plt>
   147f8:	cmp	r0, #0
   147fc:	bne	1472c <sprintf@plt+0x312c>
   14800:	ldr	r5, [sp, #8]
   14804:	cmp	r5, #0
   14808:	beq	1472c <sprintf@plt+0x312c>
   1480c:	ldr	r4, [r6]
   14810:	ldr	r0, [pc, #64]	; 14858 <sprintf@plt+0x3258>
   14814:	ldr	r2, [r5, #16]
   14818:	add	r0, r0, r4, lsl #7
   1481c:	ldr	r1, [r5, #20]
   14820:	bl	11444 <memcpy@plt>
   14824:	add	r4, r4, #1
   14828:	mov	r0, r5
   1482c:	str	r4, [r6]
   14830:	bl	11378 <freeaddrinfo@plt>
   14834:	b	1472c <sprintf@plt+0x312c>
   14838:	ldrdeq	pc, [r2], -r4
   1483c:	andeq	r9, r1, r8, lsr r7
   14840:	andeq	r9, r1, ip, lsr r7
   14844:	andeq	r9, r1, r0, asr r7
   14848:	andeq	r9, r1, r4, asr r7
   1484c:	andeq	r9, r1, r8, asr r7
   14850:	andeq	r9, r1, r0, ror #14
   14854:	muleq	r3, r4, r1
   14858:	muleq	r3, r4, r2
   1485c:	andeq	r9, r1, ip, ror #14
   14860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14864:	sub	sp, sp, #276	; 0x114
   14868:	cmp	r0, r2
   1486c:	cmpls	r2, r1
   14870:	movcs	r5, #1
   14874:	movcc	r5, #0
   14878:	str	r3, [sp, #4]
   1487c:	bcs	148d8 <sprintf@plt+0x32d8>
   14880:	mov	r6, r0
   14884:	add	sl, sp, #268	; 0x10c
   14888:	mov	r7, r2
   1488c:	mov	r8, r1
   14890:	add	r0, sp, #16
   14894:	mov	r4, r2
   14898:	add	sl, sl, #3
   1489c:	sub	fp, r1, r6
   148a0:	mvn	r3, #0
   148a4:	str	r3, [sp, #8]
   148a8:	ldrb	r2, [r4]
   148ac:	add	r1, r4, #1
   148b0:	cmp	r2, #0
   148b4:	mov	lr, r2
   148b8:	beq	149c4 <sprintf@plt+0x33c4>
   148bc:	and	r3, r2, #192	; 0xc0
   148c0:	cmp	r3, #64	; 0x40
   148c4:	beq	14950 <sprintf@plt+0x3350>
   148c8:	cmp	r3, #192	; 0xc0
   148cc:	beq	148f8 <sprintf@plt+0x32f8>
   148d0:	cmp	r3, #0
   148d4:	beq	14970 <sprintf@plt+0x3370>
   148d8:	bl	115f4 <__errno_location@plt>
   148dc:	mov	r3, #90	; 0x5a
   148e0:	str	r3, [r0]
   148e4:	mvn	r3, #0
   148e8:	str	r3, [sp, #8]
   148ec:	ldr	r0, [sp, #8]
   148f0:	add	sp, sp, #276	; 0x114
   148f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148f8:	cmp	r8, r1
   148fc:	bls	148d8 <sprintf@plt+0x32d8>
   14900:	ldr	r3, [sp, #8]
   14904:	cmp	r3, #0
   14908:	sublt	r1, r1, r7
   1490c:	addlt	r3, r1, #1
   14910:	strlt	r3, [sp, #8]
   14914:	ldrb	r3, [r4, #1]
   14918:	lsl	r4, r2, #8
   1491c:	and	r4, r4, #16128	; 0x3f00
   14920:	orr	r4, r4, r3
   14924:	adds	r4, r6, r4
   14928:	movcs	r3, #1
   1492c:	movcc	r3, #0
   14930:	cmp	r8, r4
   14934:	orrls	r3, r3, #1
   14938:	cmp	r3, #0
   1493c:	bne	148d8 <sprintf@plt+0x32d8>
   14940:	add	r5, r5, #2
   14944:	cmp	r5, fp
   14948:	blt	148a8 <sprintf@plt+0x32a8>
   1494c:	b	148d8 <sprintf@plt+0x32d8>
   14950:	cmp	r2, #65	; 0x41
   14954:	bne	148d8 <sprintf@plt+0x32d8>
   14958:	ldrb	r3, [r4, #1]
   1495c:	cmp	r3, #0
   14960:	beq	149b4 <sprintf@plt+0x33b4>
   14964:	add	r2, r3, #7
   14968:	asr	r2, r2, #3
   1496c:	add	r2, r2, #1
   14970:	mov	r9, r2
   14974:	add	r3, r2, #1
   14978:	add	r3, r0, r3
   1497c:	cmp	sl, r3
   14980:	bls	148d8 <sprintf@plt+0x32d8>
   14984:	add	r4, r1, r9
   14988:	cmp	r8, r4
   1498c:	bls	148d8 <sprintf@plt+0x32d8>
   14990:	add	r3, r0, #1
   14994:	add	ip, r2, #1
   14998:	strb	lr, [r0]
   1499c:	mov	r2, r9
   149a0:	mov	r0, r3
   149a4:	add	r5, r5, ip
   149a8:	bl	11444 <memcpy@plt>
   149ac:	add	r0, r0, r9
   149b0:	b	148a8 <sprintf@plt+0x32a8>
   149b4:	mov	r9, #33	; 0x21
   149b8:	mov	r3, #34	; 0x22
   149bc:	mov	r2, r9
   149c0:	b	14978 <sprintf@plt+0x3378>
   149c4:	ldr	r3, [sp, #8]
   149c8:	strb	r2, [r0]
   149cc:	cmp	r3, #0
   149d0:	blt	14d70 <sprintf@plt+0x3770>
   149d4:	ldr	r3, [sp, #4]
   149d8:	ldr	r2, [sp, #312]	; 0x138
   149dc:	ldr	fp, [pc, #1044]	; 14df8 <sprintf@plt+0x37f8>
   149e0:	ldr	r7, [pc, #1044]	; 14dfc <sprintf@plt+0x37fc>
   149e4:	add	r5, sp, #16
   149e8:	add	r6, r3, r2
   149ec:	mov	r4, r3
   149f0:	ldrb	r0, [r5]
   149f4:	cmp	r0, #0
   149f8:	beq	14d84 <sprintf@plt+0x3784>
   149fc:	and	r3, r0, #192	; 0xc0
   14a00:	cmp	r3, #192	; 0xc0
   14a04:	beq	148d8 <sprintf@plt+0x32d8>
   14a08:	ldr	r2, [sp, #4]
   14a0c:	cmp	r2, r4
   14a10:	beq	14d34 <sprintf@plt+0x3734>
   14a14:	cmp	r6, r4
   14a18:	bls	148d8 <sprintf@plt+0x32d8>
   14a1c:	mov	r2, #46	; 0x2e
   14a20:	strb	r2, [r4]
   14a24:	add	r4, r4, #1
   14a28:	cmp	r3, #64	; 0x40
   14a2c:	beq	14bf0 <sprintf@plt+0x35f0>
   14a30:	add	r3, r4, r0
   14a34:	cmp	r6, r3
   14a38:	bls	148d8 <sprintf@plt+0x32d8>
   14a3c:	add	r5, r5, #1
   14a40:	mov	r8, #92	; 0x5c
   14a44:	mov	sl, #100	; 0x64
   14a48:	ldrb	r2, [r5], #1
   14a4c:	add	ip, r4, #1
   14a50:	mov	r1, r4
   14a54:	sub	r3, r2, #34	; 0x22
   14a58:	cmp	r3, #58	; 0x3a
   14a5c:	ldrls	pc, [pc, r3, lsl #2]
   14a60:	b	14b70 <sprintf@plt+0x3570>
   14a64:	andeq	r4, r1, r0, asr fp
   14a68:	andeq	r4, r1, r0, ror fp
   14a6c:	andeq	r4, r1, r0, asr fp
   14a70:	andeq	r4, r1, r0, ror fp
   14a74:	andeq	r4, r1, r0, ror fp
   14a78:	andeq	r4, r1, r0, ror fp
   14a7c:	andeq	r4, r1, r0, asr fp
   14a80:	andeq	r4, r1, r0, asr fp
   14a84:	andeq	r4, r1, r0, ror fp
   14a88:	andeq	r4, r1, r0, ror fp
   14a8c:	andeq	r4, r1, r0, ror fp
   14a90:	andeq	r4, r1, r0, ror fp
   14a94:	andeq	r4, r1, r0, asr fp
   14a98:	andeq	r4, r1, r0, ror fp
   14a9c:	andeq	r4, r1, r0, ror fp
   14aa0:	andeq	r4, r1, r0, ror fp
   14aa4:	andeq	r4, r1, r0, ror fp
   14aa8:	andeq	r4, r1, r0, ror fp
   14aac:	andeq	r4, r1, r0, ror fp
   14ab0:	andeq	r4, r1, r0, ror fp
   14ab4:	andeq	r4, r1, r0, ror fp
   14ab8:	andeq	r4, r1, r0, ror fp
   14abc:	andeq	r4, r1, r0, ror fp
   14ac0:	andeq	r4, r1, r0, ror fp
   14ac4:	andeq	r4, r1, r0, ror fp
   14ac8:	andeq	r4, r1, r0, asr fp
   14acc:	andeq	r4, r1, r0, ror fp
   14ad0:	andeq	r4, r1, r0, ror fp
   14ad4:	andeq	r4, r1, r0, ror fp
   14ad8:	andeq	r4, r1, r0, ror fp
   14adc:	andeq	r4, r1, r0, asr fp
   14ae0:	andeq	r4, r1, r0, ror fp
   14ae4:	andeq	r4, r1, r0, ror fp
   14ae8:	andeq	r4, r1, r0, ror fp
   14aec:	andeq	r4, r1, r0, ror fp
   14af0:	andeq	r4, r1, r0, ror fp
   14af4:	andeq	r4, r1, r0, ror fp
   14af8:	andeq	r4, r1, r0, ror fp
   14afc:	andeq	r4, r1, r0, ror fp
   14b00:	andeq	r4, r1, r0, ror fp
   14b04:	andeq	r4, r1, r0, ror fp
   14b08:	andeq	r4, r1, r0, ror fp
   14b0c:	andeq	r4, r1, r0, ror fp
   14b10:	andeq	r4, r1, r0, ror fp
   14b14:	andeq	r4, r1, r0, ror fp
   14b18:	andeq	r4, r1, r0, ror fp
   14b1c:	andeq	r4, r1, r0, ror fp
   14b20:	andeq	r4, r1, r0, ror fp
   14b24:	andeq	r4, r1, r0, ror fp
   14b28:	andeq	r4, r1, r0, ror fp
   14b2c:	andeq	r4, r1, r0, ror fp
   14b30:	andeq	r4, r1, r0, ror fp
   14b34:	andeq	r4, r1, r0, ror fp
   14b38:	andeq	r4, r1, r0, ror fp
   14b3c:	andeq	r4, r1, r0, ror fp
   14b40:	andeq	r4, r1, r0, ror fp
   14b44:	andeq	r4, r1, r0, ror fp
   14b48:	andeq	r4, r1, r0, ror fp
   14b4c:	andeq	r4, r1, r0, asr fp
   14b50:	cmp	r6, ip
   14b54:	bls	148d8 <sprintf@plt+0x32d8>
   14b58:	strb	r8, [r1], #2
   14b5c:	strb	r2, [r4, #1]
   14b60:	mov	r4, r1
   14b64:	subs	r0, r0, #1
   14b68:	bne	14a48 <sprintf@plt+0x3448>
   14b6c:	b	149f0 <sprintf@plt+0x33f0>
   14b70:	ldr	r3, [pc, #648]	; 14e00 <sprintf@plt+0x3800>
   14b74:	add	r9, r4, #3
   14b78:	umull	r3, r1, r3, r2
   14b7c:	umull	ip, r3, r7, r2
   14b80:	lsr	r1, r1, #5
   14b84:	lsr	r3, r3, #3
   14b88:	mul	ip, sl, r1
   14b8c:	add	r3, r3, r3, lsl #2
   14b90:	sub	ip, r2, ip
   14b94:	sub	r3, r2, r3, lsl #1
   14b98:	uxtb	ip, ip
   14b9c:	uxtb	r3, r3
   14ba0:	umull	lr, ip, r7, ip
   14ba4:	sub	lr, r2, #33	; 0x21
   14ba8:	cmp	lr, #93	; 0x5d
   14bac:	bls	14bdc <sprintf@plt+0x35dc>
   14bb0:	cmp	r6, r9
   14bb4:	bls	148d8 <sprintf@plt+0x32d8>
   14bb8:	ldrb	r1, [fp, r1]
   14bbc:	ldrb	r2, [fp, ip, lsr #3]
   14bc0:	ldrb	r3, [fp, r3]
   14bc4:	strb	r1, [r4, #1]
   14bc8:	strb	r2, [r4, #2]
   14bcc:	strb	r3, [r4, #3]
   14bd0:	strb	r8, [r4]
   14bd4:	add	r4, r4, #4
   14bd8:	b	14b64 <sprintf@plt+0x3564>
   14bdc:	cmp	r6, r4
   14be0:	bls	148d8 <sprintf@plt+0x32d8>
   14be4:	strb	r2, [r4]
   14be8:	add	r4, r4, #1
   14bec:	b	14b64 <sprintf@plt+0x3564>
   14bf0:	cmp	r0, #65	; 0x41
   14bf4:	bne	148d8 <sprintf@plt+0x32d8>
   14bf8:	ldrb	r3, [r5, #1]
   14bfc:	cmp	r3, #0
   14c00:	str	r3, [sp, #12]
   14c04:	beq	14cfc <sprintf@plt+0x36fc>
   14c08:	add	r3, r3, #7
   14c0c:	add	r3, r4, r3, asr #3
   14c10:	add	r3, r3, #1
   14c14:	cmp	r6, r3
   14c18:	bls	148d8 <sprintf@plt+0x32d8>
   14c1c:	ldr	r2, [sp, #12]
   14c20:	add	r3, r2, #3
   14c24:	cmp	r2, #99	; 0x63
   14c28:	asr	r3, r3, #2
   14c2c:	movgt	r2, #9
   14c30:	bgt	14c40 <sprintf@plt+0x3640>
   14c34:	cmp	r2, #9
   14c38:	movle	r2, #7
   14c3c:	movgt	r2, #8
   14c40:	add	r3, r3, r2
   14c44:	add	r3, r4, r3
   14c48:	cmp	r6, r3
   14c4c:	bls	148d8 <sprintf@plt+0x32d8>
   14c50:	ldr	r3, [pc, #428]	; 14e04 <sprintf@plt+0x3804>
   14c54:	mov	r8, r4
   14c58:	add	r5, r5, #2
   14c5c:	ldr	r0, [r3]
   14c60:	ldr	r3, [sp, #12]
   14c64:	str	r0, [r8], #3
   14c68:	cmp	r3, #7
   14c6c:	ble	14d3c <sprintf@plt+0x373c>
   14c70:	ldr	r9, [sp, #12]
   14c74:	mov	sl, r5
   14c78:	ldrb	r2, [sl], #1
   14c7c:	mov	r0, r8
   14c80:	ldr	r1, [pc, #384]	; 14e08 <sprintf@plt+0x3808>
   14c84:	bl	11600 <sprintf@plt>
   14c88:	sub	r9, r9, #8
   14c8c:	cmp	r9, #7
   14c90:	mov	r5, sl
   14c94:	add	r8, r8, r0
   14c98:	bgt	14c78 <sprintf@plt+0x3678>
   14c9c:	cmp	r9, #4
   14ca0:	bgt	14d48 <sprintf@plt+0x3748>
   14ca4:	cmp	r9, #0
   14ca8:	beq	14cd4 <sprintf@plt+0x36d4>
   14cac:	ldrb	r2, [r5]
   14cb0:	rsb	r9, r9, #4
   14cb4:	mov	r3, #15
   14cb8:	mov	r0, r8
   14cbc:	lsl	r3, r3, r9
   14cc0:	ldr	r1, [pc, #324]	; 14e0c <sprintf@plt+0x380c>
   14cc4:	and	r2, r3, r2, lsr #4
   14cc8:	bl	11600 <sprintf@plt>
   14ccc:	add	r5, r5, #1
   14cd0:	add	r8, r8, r0
   14cd4:	ldr	r2, [sp, #12]
   14cd8:	ldr	r1, [pc, #304]	; 14e10 <sprintf@plt+0x3810>
   14cdc:	mov	r0, r8
   14ce0:	bl	11600 <sprintf@plt>
   14ce4:	add	r0, r8, r0
   14ce8:	sub	r4, r0, r4
   14cec:	cmp	r4, #0
   14cf0:	blt	148d8 <sprintf@plt+0x32d8>
   14cf4:	mov	r4, r0
   14cf8:	b	149f0 <sprintf@plt+0x33f0>
   14cfc:	add	r3, r4, #33	; 0x21
   14d00:	cmp	r6, r3
   14d04:	bls	148d8 <sprintf@plt+0x32d8>
   14d08:	add	r3, r4, #73	; 0x49
   14d0c:	cmp	r6, r3
   14d10:	bls	148d8 <sprintf@plt+0x32d8>
   14d14:	ldr	r3, [pc, #232]	; 14e04 <sprintf@plt+0x3804>
   14d18:	mov	r8, r4
   14d1c:	add	r5, r5, #2
   14d20:	ldr	r0, [r3]
   14d24:	mov	r3, #256	; 0x100
   14d28:	str	r0, [r8], #3
   14d2c:	str	r3, [sp, #12]
   14d30:	b	14c70 <sprintf@plt+0x3670>
   14d34:	mov	r4, r2
   14d38:	b	14a28 <sprintf@plt+0x3428>
   14d3c:	cmp	r3, #4
   14d40:	mov	r9, r3
   14d44:	ble	14cac <sprintf@plt+0x36ac>
   14d48:	ldrb	r3, [r5]
   14d4c:	rsb	r9, r9, #8
   14d50:	mov	r2, #255	; 0xff
   14d54:	mov	r0, r8
   14d58:	ldr	r1, [pc, #168]	; 14e08 <sprintf@plt+0x3808>
   14d5c:	and	r2, r3, r2, lsl r9
   14d60:	bl	11600 <sprintf@plt>
   14d64:	add	r5, r5, #1
   14d68:	add	r8, r8, r0
   14d6c:	b	14cd4 <sprintf@plt+0x36d4>
   14d70:	sub	r3, r1, r7
   14d74:	cmn	r3, #1
   14d78:	str	r3, [sp, #8]
   14d7c:	bne	149d4 <sprintf@plt+0x33d4>
   14d80:	b	148e4 <sprintf@plt+0x32e4>
   14d84:	ldr	r3, [sp, #4]
   14d88:	cmp	r3, r4
   14d8c:	beq	14ddc <sprintf@plt+0x37dc>
   14d90:	cmp	r6, r4
   14d94:	bls	148d8 <sprintf@plt+0x32d8>
   14d98:	ldr	r3, [sp, #4]
   14d9c:	mov	r2, #0
   14da0:	strb	r2, [r4], #1
   14da4:	sub	r4, r4, r3
   14da8:	cmn	r4, #1
   14dac:	beq	148e4 <sprintf@plt+0x32e4>
   14db0:	ldr	r1, [sp, #8]
   14db4:	cmp	r1, r2
   14db8:	ble	148ec <sprintf@plt+0x32ec>
   14dbc:	ldrb	r3, [r3]
   14dc0:	cmp	r3, #46	; 0x2e
   14dc4:	bne	148ec <sprintf@plt+0x32ec>
   14dc8:	ldr	r3, [sp, #4]
   14dcc:	ldr	r0, [sp, #8]
   14dd0:	strb	r2, [r3]
   14dd4:	add	sp, sp, #276	; 0x114
   14dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ddc:	cmp	r6, r3
   14de0:	bls	148d8 <sprintf@plt+0x32d8>
   14de4:	mov	r2, r3
   14de8:	add	r4, r3, #1
   14dec:	mov	r3, #46	; 0x2e
   14df0:	strb	r3, [r2]
   14df4:	b	14d90 <sprintf@plt+0x3790>
   14df8:	andeq	r9, r1, ip, lsr #12
   14dfc:	stclgt	12, cr12, [ip], {205}	; 0xcd
   14e00:	mvnpl	r8, pc, lsl r5
   14e04:	andeq	r9, r1, r8, ror r7
   14e08:	andeq	r9, r1, ip, ror r7
   14e0c:	andeq	r9, r1, r4, lsl #15
   14e10:	andeq	r9, r1, r8, lsl #15
   14e14:	cmp	r1, r0
   14e18:	push	{r4, lr}
   14e1c:	bls	14ecc <sprintf@plt+0x38cc>
   14e20:	ldrb	r2, [r0]
   14e24:	add	r3, r0, #1
   14e28:	cmp	r2, #0
   14e2c:	beq	14e70 <sprintf@plt+0x3870>
   14e30:	mov	ip, r0
   14e34:	mov	r4, #33	; 0x21
   14e38:	and	lr, r2, #192	; 0xc0
   14e3c:	cmp	lr, #64	; 0x40
   14e40:	beq	14e84 <sprintf@plt+0x3884>
   14e44:	cmp	lr, #192	; 0xc0
   14e48:	beq	14e6c <sprintf@plt+0x386c>
   14e4c:	cmp	lr, #0
   14e50:	beq	14ec4 <sprintf@plt+0x38c4>
   14e54:	bl	115f4 <__errno_location@plt>
   14e58:	mov	r2, #90	; 0x5a
   14e5c:	mvn	r3, #0
   14e60:	str	r2, [r0]
   14e64:	mov	r0, r3
   14e68:	pop	{r4, pc}
   14e6c:	add	r3, ip, #2
   14e70:	cmp	r1, r3
   14e74:	subcs	r3, r3, r0
   14e78:	bcc	14e54 <sprintf@plt+0x3854>
   14e7c:	mov	r0, r3
   14e80:	pop	{r4, pc}
   14e84:	cmp	r2, #65	; 0x41
   14e88:	bne	14e54 <sprintf@plt+0x3854>
   14e8c:	ldrb	r2, [ip, #1]
   14e90:	cmp	r2, #0
   14e94:	addne	ip, r2, #7
   14e98:	moveq	ip, r4
   14e9c:	asrne	ip, ip, #3
   14ea0:	addne	ip, ip, #1
   14ea4:	add	ip, r3, ip
   14ea8:	cmp	r1, ip
   14eac:	bls	14ed4 <sprintf@plt+0x38d4>
   14eb0:	ldrb	r2, [ip]
   14eb4:	add	r3, ip, #1
   14eb8:	cmp	r2, #0
   14ebc:	bne	14e38 <sprintf@plt+0x3838>
   14ec0:	b	14e70 <sprintf@plt+0x3870>
   14ec4:	add	ip, r3, r2
   14ec8:	b	14ea8 <sprintf@plt+0x38a8>
   14ecc:	mov	r3, r0
   14ed0:	b	14e70 <sprintf@plt+0x3870>
   14ed4:	mov	r3, ip
   14ed8:	b	14e70 <sprintf@plt+0x3870>
   14edc:	ldrb	r2, [r0]
   14ee0:	ldrb	r0, [r0, #1]
   14ee4:	orr	r0, r0, r2, lsl #8
   14ee8:	bx	lr
   14eec:	ldrb	r3, [r0, #1]
   14ef0:	ldrb	r1, [r0]
   14ef4:	ldrb	r2, [r0, #3]
   14ef8:	ldrb	r0, [r0, #2]
   14efc:	lsl	r3, r3, #16
   14f00:	orr	r3, r3, r1, lsl #24
   14f04:	orr	r3, r3, r2
   14f08:	orr	r0, r3, r0, lsl #8
   14f0c:	bx	lr
   14f10:	lsr	r3, r0, #8
   14f14:	strb	r0, [r1, #1]
   14f18:	strb	r3, [r1]
   14f1c:	bx	lr
   14f20:	lsr	ip, r0, #24
   14f24:	lsr	r2, r0, #16
   14f28:	lsr	r3, r0, #8
   14f2c:	strb	r0, [r1, #3]
   14f30:	strb	ip, [r1]
   14f34:	strb	r2, [r1, #1]
   14f38:	strb	r3, [r1, #2]
   14f3c:	bx	lr
   14f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f44:	sub	sp, sp, #388	; 0x184
   14f48:	mov	r8, r0
   14f4c:	ldr	ip, [sp, #424]	; 0x1a8
   14f50:	str	r1, [sp, #8]
   14f54:	cmp	r3, #0
   14f58:	cmpne	ip, #11
   14f5c:	movle	r0, #1
   14f60:	movgt	r0, #0
   14f64:	str	r2, [sp, #12]
   14f68:	ble	150b4 <sprintf@plt+0x3ab4>
   14f6c:	mov	sl, r3
   14f70:	str	r0, [r3]
   14f74:	ldrb	r3, [r3, #2]
   14f78:	ldrb	r2, [sl, #3]
   14f7c:	subs	r1, ip, #16
   14f80:	and	r3, r3, #135	; 0x87
   14f84:	orr	r3, r3, #1
   14f88:	bic	r2, r2, #15
   14f8c:	str	r1, [sp, #4]
   14f90:	str	r0, [sl, #4]
   14f94:	str	r0, [sl, #8]
   14f98:	strh	r0, [sl]
   14f9c:	str	sl, [sp, #48]	; 0x30
   14fa0:	str	r0, [sp, #52]	; 0x34
   14fa4:	strb	r3, [sl, #2]
   14fa8:	strb	r2, [sl, #3]
   14fac:	bmi	150b4 <sprintf@plt+0x3ab4>
   14fb0:	ldrb	r9, [r8]
   14fb4:	add	r3, sp, #129	; 0x81
   14fb8:	str	r3, [sp, #40]	; 0x28
   14fbc:	cmp	r9, #0
   14fc0:	add	r4, r8, #1
   14fc4:	beq	157cc <sprintf@plt+0x41cc>
   14fc8:	add	r7, sp, #380	; 0x17c
   14fcc:	add	r6, sp, #128	; 0x80
   14fd0:	add	r7, r7, #3
   14fd4:	ldr	r5, [pc, #2120]	; 15824 <sprintf@plt+0x4224>
   14fd8:	mov	fp, #100	; 0x64
   14fdc:	b	15014 <sprintf@plt+0x3a14>
   14fe0:	cmp	r9, #46	; 0x2e
   14fe4:	movne	r8, r4
   14fe8:	beq	15108 <sprintf@plt+0x3b08>
   14fec:	ldr	r3, [sp, #40]	; 0x28
   14ff0:	cmp	r3, r7
   14ff4:	bcs	150a8 <sprintf@plt+0x3aa8>
   14ff8:	add	r2, r3, #1
   14ffc:	str	r2, [sp, #40]	; 0x28
   15000:	strb	r9, [r3]
   15004:	ldrb	r9, [r8]
   15008:	add	r4, r8, #1
   1500c:	cmp	r9, #0
   15010:	beq	15178 <sprintf@plt+0x3b78>
   15014:	cmp	r9, #92	; 0x5c
   15018:	bne	14fe0 <sprintf@plt+0x39e0>
   1501c:	ldrb	r9, [r4]
   15020:	add	r8, r4, #1
   15024:	cmp	r9, #0
   15028:	beq	15178 <sprintf@plt+0x3b78>
   1502c:	cmp	r9, #91	; 0x5b
   15030:	beq	150c0 <sprintf@plt+0x3ac0>
   15034:	mov	r1, r9
   15038:	ldr	r0, [pc, #2020]	; 15824 <sprintf@plt+0x4224>
   1503c:	bl	11318 <strchr@plt>
   15040:	cmp	r0, #0
   15044:	beq	14fec <sprintf@plt+0x39ec>
   15048:	ldrb	r1, [r4, #1]
   1504c:	sub	r9, r0, r5
   15050:	cmp	r1, #0
   15054:	mul	r9, fp, r9
   15058:	beq	150a8 <sprintf@plt+0x3aa8>
   1505c:	mov	r0, r5
   15060:	bl	11318 <strchr@plt>
   15064:	cmp	r0, #0
   15068:	beq	150a8 <sprintf@plt+0x3aa8>
   1506c:	sub	r0, r0, r5
   15070:	ldrb	r1, [r4, #2]
   15074:	add	r0, r0, r0, lsl #2
   15078:	add	r8, r4, #3
   1507c:	cmp	r1, #0
   15080:	add	r9, r9, r0, lsl #1
   15084:	beq	150a8 <sprintf@plt+0x3aa8>
   15088:	mov	r0, r5
   1508c:	bl	11318 <strchr@plt>
   15090:	cmp	r0, #0
   15094:	beq	150a8 <sprintf@plt+0x3aa8>
   15098:	sub	r0, r0, r5
   1509c:	add	r9, r0, r9
   150a0:	cmp	r9, #255	; 0xff
   150a4:	ble	14fec <sprintf@plt+0x39ec>
   150a8:	bl	115f4 <__errno_location@plt>
   150ac:	mov	r3, #90	; 0x5a
   150b0:	str	r3, [r0]
   150b4:	mvn	r0, #0
   150b8:	add	sp, sp, #388	; 0x184
   150bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150c0:	mov	r1, #93	; 0x5d
   150c4:	mov	r0, r8
   150c8:	bl	11318 <strchr@plt>
   150cc:	cmp	r0, #0
   150d0:	beq	15168 <sprintf@plt+0x3b68>
   150d4:	add	r9, r0, #2
   150d8:	sub	r8, r9, r8
   150dc:	cmp	r8, #1
   150e0:	mov	r8, #0
   150e4:	str	r8, [sp, #44]	; 0x2c
   150e8:	ble	150f8 <sprintf@plt+0x3af8>
   150ec:	ldrb	r3, [r4, #1]
   150f0:	cmp	r3, #120	; 0x78
   150f4:	beq	15538 <sprintf@plt+0x3f38>
   150f8:	mov	r4, #22
   150fc:	bl	115f4 <__errno_location@plt>
   15100:	str	r4, [r0]
   15104:	b	150b4 <sprintf@plt+0x3ab4>
   15108:	ldr	r3, [sp, #40]	; 0x28
   1510c:	sub	r3, r3, r6
   15110:	sub	r3, r3, #1
   15114:	tst	r3, #192	; 0xc0
   15118:	bne	150a8 <sprintf@plt+0x3aa8>
   1511c:	cmp	r6, r7
   15120:	bcs	150a8 <sprintf@plt+0x3aa8>
   15124:	strb	r3, [r6]
   15128:	ldrb	r2, [r8, #1]
   1512c:	cmp	r2, #0
   15130:	beq	1575c <sprintf@plt+0x415c>
   15134:	cmp	r3, #0
   15138:	cmpne	r2, #46	; 0x2e
   1513c:	beq	150a8 <sprintf@plt+0x3aa8>
   15140:	ldrb	r9, [r4]
   15144:	ldr	r6, [sp, #40]	; 0x28
   15148:	add	r3, r4, #1
   1514c:	add	r2, r6, #1
   15150:	cmp	r9, #0
   15154:	str	r2, [sp, #40]	; 0x28
   15158:	beq	1517c <sprintf@plt+0x3b7c>
   1515c:	mov	r8, r4
   15160:	mov	r4, r3
   15164:	b	15014 <sprintf@plt+0x3a14>
   15168:	bl	115f4 <__errno_location@plt>
   1516c:	mov	r3, #22
   15170:	str	r3, [r0]
   15174:	b	150b4 <sprintf@plt+0x3ab4>
   15178:	ldr	r2, [sp, #40]	; 0x28
   1517c:	sub	r2, r2, r6
   15180:	sub	r2, r2, #1
   15184:	ands	r1, r2, #192	; 0xc0
   15188:	bne	150a8 <sprintf@plt+0x3aa8>
   1518c:	add	r3, sp, #380	; 0x17c
   15190:	add	r3, r3, #3
   15194:	cmp	r6, r3
   15198:	bcs	150a8 <sprintf@plt+0x3aa8>
   1519c:	cmp	r2, #0
   151a0:	strb	r2, [r6]
   151a4:	beq	151c0 <sprintf@plt+0x3bc0>
   151a8:	ldr	r2, [sp, #40]	; 0x28
   151ac:	cmp	r2, r3
   151b0:	bcs	150a8 <sprintf@plt+0x3aa8>
   151b4:	add	r3, r2, #1
   151b8:	str	r3, [sp, #40]	; 0x28
   151bc:	strb	r1, [r2]
   151c0:	ldr	r3, [sp, #40]	; 0x28
   151c4:	add	r2, sp, #128	; 0x80
   151c8:	sub	r3, r3, r2
   151cc:	cmp	r3, #255	; 0xff
   151d0:	bgt	150a8 <sprintf@plt+0x3aa8>
   151d4:	ldr	r3, [sp, #48]	; 0x30
   151d8:	cmp	r3, #0
   151dc:	str	r3, [sp]
   151e0:	moveq	r4, r3
   151e4:	beq	15204 <sprintf@plt+0x3c04>
   151e8:	ldr	r3, [sp, #52]	; 0x34
   151ec:	add	r4, sp, #52	; 0x34
   151f0:	cmp	r3, #0
   151f4:	beq	15204 <sprintf@plt+0x3c04>
   151f8:	ldr	r3, [r4, #4]!
   151fc:	cmp	r3, #0
   15200:	bne	151f8 <sprintf@plt+0x3bf8>
   15204:	mov	r1, #0
   15208:	add	r2, sp, #128	; 0x80
   1520c:	mov	r5, #34	; 0x22
   15210:	mov	lr, #33	; 0x21
   15214:	ldrb	r3, [r2]
   15218:	and	r0, r3, #192	; 0xc0
   1521c:	cmp	r0, #192	; 0xc0
   15220:	add	ip, r3, #1
   15224:	beq	150a8 <sprintf@plt+0x3aa8>
   15228:	cmp	r0, #64	; 0x40
   1522c:	beq	1533c <sprintf@plt+0x3d3c>
   15230:	add	r1, r1, ip
   15234:	cmp	r1, #255	; 0xff
   15238:	bgt	150a8 <sprintf@plt+0x3aa8>
   1523c:	cmp	r3, #0
   15240:	add	r2, r2, ip
   15244:	bne	15214 <sprintf@plt+0x3c14>
   15248:	str	r3, [sp, #32]
   1524c:	ldr	r3, [sp, #4]
   15250:	add	r2, sl, #12
   15254:	add	r3, r2, r3
   15258:	str	r3, [sp, #4]
   1525c:	ldr	r3, [sp]
   15260:	str	r2, [sp, #16]
   15264:	adds	fp, r3, #0
   15268:	mov	r3, #1
   1526c:	add	r5, sp, #128	; 0x80
   15270:	mov	r7, r2
   15274:	movne	fp, #1
   15278:	str	r4, [sp, #24]
   1527c:	str	r3, [sp, #28]
   15280:	str	r4, [sp, #20]
   15284:	str	sl, [sp, #36]	; 0x24
   15288:	b	152c0 <sprintf@plt+0x3cc0>
   1528c:	add	r6, r4, #1
   15290:	ldr	r3, [sp, #4]
   15294:	add	r8, r7, r6
   15298:	cmp	r3, r8
   1529c:	bls	150a8 <sprintf@plt+0x3aa8>
   152a0:	mov	r1, r5
   152a4:	mov	r0, r7
   152a8:	mov	r2, r6
   152ac:	bl	11444 <memcpy@plt>
   152b0:	cmp	r4, #0
   152b4:	add	r5, r5, r6
   152b8:	beq	15620 <sprintf@plt+0x4020>
   152bc:	mov	r7, r8
   152c0:	ldrb	r4, [r5]
   152c4:	cmp	r4, #0
   152c8:	moveq	r3, #0
   152cc:	andne	r3, fp, #1
   152d0:	cmp	r3, #0
   152d4:	bne	1537c <sprintf@plt+0x3d7c>
   152d8:	and	r3, r4, #192	; 0xc0
   152dc:	cmp	r3, #192	; 0xc0
   152e0:	beq	150a8 <sprintf@plt+0x3aa8>
   152e4:	cmp	r3, #64	; 0x40
   152e8:	bne	1528c <sprintf@plt+0x3c8c>
   152ec:	cmp	r4, #65	; 0x41
   152f0:	bne	15614 <sprintf@plt+0x4014>
   152f4:	ldrb	r3, [r5, #1]
   152f8:	cmp	r3, #0
   152fc:	addne	r2, r3, #7
   15300:	moveq	r4, #34	; 0x22
   15304:	asrne	r2, r2, #3
   15308:	addne	r2, r2, #1
   1530c:	addne	r4, r2, #1
   15310:	moveq	r2, #33	; 0x21
   15314:	ldr	r3, [sp, #4]
   15318:	add	r8, r7, r4
   1531c:	cmp	r3, r8
   15320:	bls	150a8 <sprintf@plt+0x3aa8>
   15324:	mov	r1, r5
   15328:	add	r2, r2, #1
   1532c:	mov	r0, r7
   15330:	bl	11444 <memcpy@plt>
   15334:	add	r5, r5, r4
   15338:	b	152bc <sprintf@plt+0x3cbc>
   1533c:	cmp	r3, #65	; 0x41
   15340:	mov	r6, r5
   15344:	mov	r0, lr
   15348:	bne	15168 <sprintf@plt+0x3b68>
   1534c:	ldrb	ip, [r2, #1]
   15350:	add	r3, ip, #7
   15354:	cmp	ip, #0
   15358:	asr	r3, r3, #3
   1535c:	addne	r6, r3, #2
   15360:	add	r1, r1, r6
   15364:	addne	r0, r3, #1
   15368:	cmp	r1, #255	; 0xff
   1536c:	add	r0, r0, #1
   15370:	bgt	150a8 <sprintf@plt+0x3aa8>
   15374:	add	r2, r2, r0
   15378:	b	15214 <sprintf@plt+0x3c14>
   1537c:	ldr	r3, [sp, #20]
   15380:	add	r2, sp, #52	; 0x34
   15384:	cmp	r3, r2
   15388:	bls	15428 <sprintf@plt+0x3e28>
   1538c:	mov	sl, r2
   15390:	ldr	r8, [sl], #4
   15394:	ldrb	r6, [r8]
   15398:	cmp	r6, #0
   1539c:	beq	1541c <sprintf@plt+0x3e1c>
   153a0:	tst	r6, #192	; 0xc0
   153a4:	bne	1541c <sprintf@plt+0x3e1c>
   153a8:	ldr	r3, [sp]
   153ac:	sub	r9, r8, r3
   153b0:	ldr	r3, [pc, #1136]	; 15828 <sprintf@plt+0x4228>
   153b4:	cmp	r9, r3
   153b8:	bgt	1541c <sprintf@plt+0x3e1c>
   153bc:	mov	r2, r6
   153c0:	cmp	r2, #0
   153c4:	mov	r0, r8
   153c8:	mov	r3, r5
   153cc:	mov	ip, r2
   153d0:	beq	1540c <sprintf@plt+0x3e0c>
   153d4:	ands	r1, r2, #192	; 0xc0
   153d8:	beq	15498 <sprintf@plt+0x3e98>
   153dc:	cmp	r1, #192	; 0xc0
   153e0:	bne	15438 <sprintf@plt+0x3e38>
   153e4:	ldrb	r1, [r0, #1]
   153e8:	lsl	r0, r2, #8
   153ec:	and	r0, r0, #16128	; 0x3f00
   153f0:	ldr	r2, [sp]
   153f4:	orr	r0, r0, r1
   153f8:	add	r0, r2, r0
   153fc:	ldrb	r2, [r0]
   15400:	cmp	r2, #0
   15404:	mov	ip, r2
   15408:	bne	153d4 <sprintf@plt+0x3dd4>
   1540c:	add	r6, r6, #1
   15410:	ldrb	r6, [r8, r6]!
   15414:	cmp	r6, #0
   15418:	bne	153a0 <sprintf@plt+0x3da0>
   1541c:	ldr	r3, [sp, #20]
   15420:	cmp	r3, sl
   15424:	bhi	15390 <sprintf@plt+0x3d90>
   15428:	bl	115f4 <__errno_location@plt>
   1542c:	mov	r3, #2
   15430:	str	r3, [r0]
   15434:	b	15444 <sprintf@plt+0x3e44>
   15438:	bl	115f4 <__errno_location@plt>
   1543c:	mov	r3, #90	; 0x5a
   15440:	str	r3, [r0]
   15444:	ldr	r2, [sp, #24]
   15448:	add	r1, sp, #124	; 0x7c
   1544c:	cmp	r2, r1
   15450:	bcs	152d8 <sprintf@plt+0x3cd8>
   15454:	ldr	r3, [sp]
   15458:	ldr	r1, [pc, #968]	; 15828 <sprintf@plt+0x4228>
   1545c:	sub	r3, r7, r3
   15460:	cmp	r3, r1
   15464:	bgt	152d8 <sprintf@plt+0x3cd8>
   15468:	ldr	r3, [sp, #28]
   1546c:	cmp	r3, #0
   15470:	beq	152d8 <sprintf@plt+0x3cd8>
   15474:	mov	r3, r2
   15478:	str	r7, [r2]
   1547c:	ldr	r2, [sp, #32]
   15480:	add	r3, r3, #4
   15484:	str	r2, [r3]
   15488:	mov	r2, #0
   1548c:	str	r2, [sp, #28]
   15490:	str	r3, [sp, #24]
   15494:	b	152d8 <sprintf@plt+0x3cd8>
   15498:	ldrb	r2, [r3]
   1549c:	add	r3, r3, #1
   154a0:	cmp	r2, ip
   154a4:	bne	1540c <sprintf@plt+0x3e0c>
   154a8:	add	r0, r0, #1
   154ac:	b	154b8 <sprintf@plt+0x3eb8>
   154b0:	subs	ip, ip, #1
   154b4:	beq	154e4 <sprintf@plt+0x3ee4>
   154b8:	ldrb	r2, [r3], #1
   154bc:	sub	r1, r2, #65	; 0x41
   154c0:	cmp	r1, #25
   154c4:	ldrb	r1, [r0], #1
   154c8:	addls	r2, r2, #32
   154cc:	sub	lr, r1, #65	; 0x41
   154d0:	cmp	lr, #25
   154d4:	addls	r1, r1, #32
   154d8:	cmp	r1, r2
   154dc:	beq	154b0 <sprintf@plt+0x3eb0>
   154e0:	b	1540c <sprintf@plt+0x3e0c>
   154e4:	ldrb	r2, [r3]
   154e8:	cmp	r2, #0
   154ec:	bne	153fc <sprintf@plt+0x3dfc>
   154f0:	ldrb	r3, [r0]
   154f4:	cmp	r3, #0
   154f8:	bne	1540c <sprintf@plt+0x3e0c>
   154fc:	cmp	r9, #0
   15500:	blt	15444 <sprintf@plt+0x3e44>
   15504:	ldr	r1, [sp, #4]
   15508:	add	r3, r7, #1
   1550c:	cmp	r1, r3
   15510:	ldr	sl, [sp, #36]	; 0x24
   15514:	bls	150a8 <sprintf@plt+0x3aa8>
   15518:	mvn	r3, #63	; 0x3f
   1551c:	orr	r3, r3, r9, asr #8
   15520:	strb	r3, [r7]
   15524:	ldr	r3, [sp, #16]
   15528:	add	r8, r7, #2
   1552c:	strb	r9, [r7, #1]
   15530:	sub	r8, r8, r3
   15534:	b	1562c <sprintf@plt+0x402c>
   15538:	bl	114e0 <__ctype_b_loc@plt>
   1553c:	ldrb	r3, [r4, #2]
   15540:	lsl	r3, r3, #1
   15544:	ldr	ip, [r0]
   15548:	ldrh	r3, [ip, r3]
   1554c:	tst	r3, #4096	; 0x1000
   15550:	beq	150f8 <sprintf@plt+0x3af8>
   15554:	add	r4, r4, #2
   15558:	add	r3, sp, #44	; 0x2c
   1555c:	cmp	r7, r3
   15560:	cmphi	r9, r4
   15564:	bls	15808 <sprintf@plt+0x4208>
   15568:	mov	r2, r4
   1556c:	mov	r0, r8
   15570:	str	r8, [sp]
   15574:	str	r8, [sp, #16]
   15578:	str	r8, [sp, #20]
   1557c:	mov	r4, r2
   15580:	ldrb	r1, [r2], #1
   15584:	cmp	r1, #47	; 0x2f
   15588:	beq	15674 <sprintf@plt+0x4074>
   1558c:	cmp	r1, #93	; 0x5d
   15590:	bne	15714 <sprintf@plt+0x4114>
   15594:	cmp	r0, #0
   15598:	beq	155d0 <sprintf@plt+0x3fd0>
   1559c:	str	r3, [sp, #24]
   155a0:	ldr	r3, [sp, #20]
   155a4:	cmp	r3, #0
   155a8:	beq	150f8 <sprintf@plt+0x3af8>
   155ac:	mov	r0, r3
   155b0:	mov	r2, #10
   155b4:	add	r1, sp, #44	; 0x2c
   155b8:	bl	11468 <strtol@plt>
   155bc:	ldr	r2, [sp, #44]	; 0x2c
   155c0:	ldr	r3, [sp, #24]
   155c4:	ldrb	r2, [r2]
   155c8:	cmp	r2, #93	; 0x5d
   155cc:	bne	150f8 <sprintf@plt+0x3af8>
   155d0:	ldr	r2, [sp, #16]
   155d4:	add	r4, r4, #1
   155d8:	cmp	r2, #0
   155dc:	ldrne	r2, [sp]
   155e0:	lslne	r2, r2, #4
   155e4:	strbne	r2, [r3]
   155e8:	addne	r3, r3, #1
   155ec:	cmp	r3, r7
   155f0:	movcc	r2, #0
   155f4:	movcs	r2, #1
   155f8:	cmp	r9, r4
   155fc:	movhi	r9, r2
   15600:	orrls	r9, r2, #1
   15604:	cmp	r9, #0
   15608:	beq	157d4 <sprintf@plt+0x41d4>
   1560c:	mov	r4, #90	; 0x5a
   15610:	b	150fc <sprintf@plt+0x3afc>
   15614:	ldr	r4, [sp, #32]
   15618:	mvn	r2, #0
   1561c:	b	15314 <sprintf@plt+0x3d14>
   15620:	ldr	r3, [sp, #16]
   15624:	ldr	sl, [sp, #36]	; 0x24
   15628:	sub	r8, r8, r3
   1562c:	cmp	r8, #0
   15630:	blt	150b4 <sprintf@plt+0x3ab4>
   15634:	ldr	ip, [sp, #12]
   15638:	ldr	r0, [sp, #16]
   1563c:	ldr	lr, [sp, #8]
   15640:	add	r3, r0, r8
   15644:	lsr	r2, ip, #8
   15648:	strb	r2, [r0, r8]
   1564c:	lsr	r1, lr, #8
   15650:	add	r0, r3, #4
   15654:	mov	r2, #256	; 0x100
   15658:	strb	ip, [r3, #1]
   1565c:	strb	lr, [r3, #3]
   15660:	strb	r1, [r3, #2]
   15664:	sub	r0, r0, sl
   15668:	strh	r2, [sl, #4]
   1566c:	add	sp, sp, #388	; 0x184
   15670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15674:	mov	r0, #1
   15678:	cmp	r9, r2
   1567c:	movls	r1, #0
   15680:	movhi	r1, #1
   15684:	cmp	r3, r7
   15688:	movcs	r1, #0
   1568c:	cmp	r1, #0
   15690:	mov	r4, r2
   15694:	bne	1557c <sprintf@plt+0x3f7c>
   15698:	cmp	r3, r7
   1569c:	movcc	r2, #0
   156a0:	movcs	r2, #1
   156a4:	cmp	r9, r4
   156a8:	movhi	r9, r2
   156ac:	orrls	r9, r2, #1
   156b0:	cmp	r9, #0
   156b4:	bne	1560c <sprintf@plt+0x400c>
   156b8:	mov	r0, r8
   156bc:	cmp	r0, #256	; 0x100
   156c0:	moveq	r0, #0
   156c4:	beq	156cc <sprintf@plt+0x40cc>
   156c8:	uxtb	r0, r0
   156cc:	mov	r2, #65	; 0x41
   156d0:	strb	r2, [r6]
   156d4:	ldr	r1, [sp, #40]	; 0x28
   156d8:	add	r2, r3, #1
   156dc:	add	r8, r4, #1
   156e0:	strb	r0, [r1]
   156e4:	ldrb	r1, [r4]
   156e8:	str	r2, [sp, #40]	; 0x28
   156ec:	cmp	r1, #0
   156f0:	beq	15748 <sprintf@plt+0x4148>
   156f4:	cmp	r1, #46	; 0x2e
   156f8:	bne	15168 <sprintf@plt+0x3b68>
   156fc:	ldrb	r9, [r4, #1]
   15700:	mov	r6, r3
   15704:	add	r4, r4, #2
   15708:	cmp	r9, #0
   1570c:	bne	15014 <sprintf@plt+0x3a14>
   15710:	b	1517c <sprintf@plt+0x3b7c>
   15714:	lsl	lr, r1, #1
   15718:	cmp	r0, #0
   1571c:	ldrh	lr, [ip, lr]
   15720:	beq	15780 <sprintf@plt+0x4180>
   15724:	tst	lr, #2048	; 0x800
   15728:	beq	150f8 <sprintf@plt+0x3af8>
   1572c:	ldr	lr, [sp, #20]
   15730:	cmp	lr, #0
   15734:	bne	15678 <sprintf@plt+0x4078>
   15738:	cmp	r1, #48	; 0x30
   1573c:	beq	150f8 <sprintf@plt+0x3af8>
   15740:	str	r4, [sp, #20]
   15744:	b	15678 <sprintf@plt+0x4078>
   15748:	mov	r2, r3
   1574c:	cmp	r2, r7
   15750:	strbcc	r1, [r2]
   15754:	bcc	151c0 <sprintf@plt+0x3bc0>
   15758:	b	150a8 <sprintf@plt+0x3aa8>
   1575c:	cmp	r3, #0
   15760:	beq	151c0 <sprintf@plt+0x3bc0>
   15764:	ldr	r3, [sp, #40]	; 0x28
   15768:	cmp	r3, r7
   1576c:	bcs	150a8 <sprintf@plt+0x3aa8>
   15770:	add	r1, r3, #1
   15774:	str	r1, [sp, #40]	; 0x28
   15778:	strb	r2, [r3]
   1577c:	b	151c0 <sprintf@plt+0x3bc0>
   15780:	tst	lr, #4096	; 0x1000
   15784:	beq	150f8 <sprintf@plt+0x3af8>
   15788:	add	r1, r5, r1
   1578c:	ldr	r4, [sp]
   15790:	ldrb	r1, [r1, #12]
   15794:	ldr	lr, [sp, #16]
   15798:	add	r8, r8, #4
   1579c:	add	lr, lr, #4
   157a0:	add	r1, r1, r4, lsl #4
   157a4:	cmp	r8, #256	; 0x100
   157a8:	str	lr, [sp, #16]
   157ac:	str	r1, [sp]
   157b0:	bgt	150f8 <sprintf@plt+0x3af8>
   157b4:	cmp	lr, #8
   157b8:	ldrbeq	r1, [sp]
   157bc:	streq	r0, [sp, #16]
   157c0:	addeq	r3, r3, #1
   157c4:	strbeq	r1, [r3, #-1]
   157c8:	b	15678 <sprintf@plt+0x4078>
   157cc:	strb	r9, [sp, #128]	; 0x80
   157d0:	b	151c0 <sprintf@plt+0x3bc0>
   157d4:	cmp	r0, #0
   157d8:	ble	156b8 <sprintf@plt+0x40b8>
   157dc:	add	r2, r0, #3
   157e0:	bic	r2, r2, #3
   157e4:	cmp	r2, r8
   157e8:	bne	150f8 <sprintf@plt+0x3af8>
   157ec:	sub	r2, r8, r0
   157f0:	ldr	r1, [sp]
   157f4:	rsb	r2, r2, #8
   157f8:	lsl	r2, r1, r2
   157fc:	tst	r2, #255	; 0xff
   15800:	bne	150f8 <sprintf@plt+0x3af8>
   15804:	b	156bc <sprintf@plt+0x40bc>
   15808:	add	r3, sp, #44	; 0x2c
   1580c:	cmp	r7, r3
   15810:	cmphi	r9, r4
   15814:	movls	r0, #1
   15818:	movhi	r0, #0
   1581c:	bls	1560c <sprintf@plt+0x400c>
   15820:	b	156c8 <sprintf@plt+0x40c8>
   15824:	andeq	r9, r1, ip, lsr #12
   15828:	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   1582c:	ldr	r0, [r2]
   15830:	push	{r4, lr}
   15834:	mov	r1, #0
   15838:	mov	r2, #10
   1583c:	bl	11468 <strtol@plt>
   15840:	cmp	r0, #0
   15844:	blt	15854 <sprintf@plt+0x4254>
   15848:	ldr	r3, [pc, #28]	; 1586c <sprintf@plt+0x426c>
   1584c:	str	r0, [r3]
   15850:	pop	{r4, pc}
   15854:	mov	r2, r0
   15858:	ldr	r1, [pc, #16]	; 15870 <sprintf@plt+0x4270>
   1585c:	mov	r0, #67	; 0x43
   15860:	bl	122d8 <sprintf@plt+0xcd8>
   15864:	mov	r0, #3
   15868:	bl	115e8 <exit@plt>
   1586c:	andeq	fp, r2, r4, ror #26
   15870:	andeq	r9, r1, r0, asr #15
   15874:	push	{r4, r5, r6, r7, r8, lr}
   15878:	ldr	r8, [pc, #176]	; 15930 <sprintf@plt+0x4330>
   1587c:	ldr	r3, [r8]
   15880:	cmp	r3, #0
   15884:	popeq	{r4, r5, r6, r7, r8, pc}
   15888:	ldr	r4, [r3, #8]
   1588c:	mov	r7, #0
   15890:	mov	r6, #1
   15894:	b	158a8 <sprintf@plt+0x42a8>
   15898:	cmp	r4, #0
   1589c:	popeq	{r4, r5, r6, r7, r8, pc}
   158a0:	mov	r3, r4
   158a4:	ldr	r4, [r4, #8]
   158a8:	ldr	r5, [r3]
   158ac:	ldr	r3, [r5, #788]	; 0x314
   158b0:	cmp	r3, #0
   158b4:	strbgt	r6, [r5, #784]	; 0x310
   158b8:	bgt	15898 <sprintf@plt+0x4298>
   158bc:	ldr	r0, [r8]
   158c0:	cmp	r0, #0
   158c4:	bne	158d8 <sprintf@plt+0x42d8>
   158c8:	b	1591c <sprintf@plt+0x431c>
   158cc:	ldr	r0, [r0, #8]
   158d0:	cmp	r0, #0
   158d4:	beq	1591c <sprintf@plt+0x431c>
   158d8:	ldr	r3, [r0]
   158dc:	cmp	r5, r3
   158e0:	bne	158cc <sprintf@plt+0x42cc>
   158e4:	ldmib	r0, {r2, r3}
   158e8:	cmp	r3, #0
   158ec:	strne	r2, [r3, #4]
   158f0:	ldrne	r2, [r0, #4]
   158f4:	streq	r2, [r8, #4]
   158f8:	cmp	r2, #0
   158fc:	strne	r3, [r2, #8]
   15900:	streq	r3, [r8]
   15904:	ldr	r3, [r8, #8]
   15908:	str	r7, [r0, #4]
   1590c:	str	r7, [r0, #8]
   15910:	sub	r3, r3, #1
   15914:	str	r3, [r8, #8]
   15918:	bl	11450 <rb_free_rb_dlink_node@plt>
   1591c:	mov	r0, r5
   15920:	bl	113cc <free@plt>
   15924:	cmp	r4, #0
   15928:	bne	158a0 <sprintf@plt+0x42a0>
   1592c:	pop	{r4, r5, r6, r7, r8, pc}
   15930:	ldrdeq	pc, [r2], -r8
   15934:	b	15874 <sprintf@plt+0x4274>
   15938:	push	{r4, r5, r6, r7, r8, lr}
   1593c:	ldr	r8, [pc, #208]	; 15a14 <sprintf@plt+0x4414>
   15940:	ldr	r6, [r2]
   15944:	ldr	r7, [r8]
   15948:	cmp	r7, #0
   1594c:	beq	15a00 <sprintf@plt+0x4400>
   15950:	mov	r4, r7
   15954:	b	15964 <sprintf@plt+0x4364>
   15958:	ldr	r4, [r4, #8]
   1595c:	cmp	r4, #0
   15960:	beq	15a00 <sprintf@plt+0x4400>
   15964:	ldr	r5, [r4]
   15968:	mov	r1, r6
   1596c:	mov	r0, r5
   15970:	bl	11330 <strcasecmp@plt>
   15974:	cmp	r0, #0
   15978:	bne	15958 <sprintf@plt+0x4358>
   1597c:	cmp	r5, #0
   15980:	beq	15a00 <sprintf@plt+0x4400>
   15984:	ldr	r3, [r5, #788]	; 0x314
   15988:	cmp	r3, #0
   1598c:	ble	159a8 <sprintf@plt+0x43a8>
   15990:	mov	r3, #1
   15994:	strb	r3, [r5, #784]	; 0x310
   15998:	pop	{r4, r5, r6, r7, r8, pc}
   1599c:	ldr	r7, [r7, #8]
   159a0:	cmp	r7, #0
   159a4:	beq	159f4 <sprintf@plt+0x43f4>
   159a8:	ldr	r3, [r7]
   159ac:	cmp	r5, r3
   159b0:	bne	1599c <sprintf@plt+0x439c>
   159b4:	ldmib	r7, {r2, r3}
   159b8:	mov	r0, r7
   159bc:	cmp	r3, #0
   159c0:	strne	r2, [r3, #4]
   159c4:	ldrne	r2, [r7, #4]
   159c8:	streq	r2, [r8, #4]
   159cc:	cmp	r2, #0
   159d0:	strne	r3, [r2, #8]
   159d4:	streq	r3, [r8]
   159d8:	ldr	r3, [r8, #8]
   159dc:	mov	r2, #0
   159e0:	sub	r3, r3, #1
   159e4:	str	r2, [r7, #4]
   159e8:	str	r2, [r7, #8]
   159ec:	str	r3, [r8, #8]
   159f0:	bl	11450 <rb_free_rb_dlink_node@plt>
   159f4:	mov	r0, r5
   159f8:	pop	{r4, r5, r6, r7, r8, lr}
   159fc:	b	113cc <free@plt>
   15a00:	mov	r2, r6
   15a04:	ldr	r1, [pc, #12]	; 15a18 <sprintf@plt+0x4418>
   15a08:	mov	r0, #87	; 0x57
   15a0c:	pop	{r4, r5, r6, r7, r8, lr}
   15a10:	b	122d8 <sprintf@plt+0xcd8>
   15a14:	ldrdeq	pc, [r2], -r8
   15a18:	strdeq	r9, [r1], -r8
   15a1c:	ldr	r3, [r0, #772]	; 0x304
   15a20:	push	{r4, r5, r6, lr}
   15a24:	cmp	r3, #0
   15a28:	mov	r5, r0
   15a2c:	beq	15aa4 <sprintf@plt+0x44a4>
   15a30:	ldr	r4, [r3, #8]
   15a34:	mov	r6, r4
   15a38:	b	15a64 <sprintf@plt+0x4464>
   15a3c:	ldr	r3, [r5, #780]	; 0x30c
   15a40:	str	r4, [r2, #8]
   15a44:	sub	r3, r3, #1
   15a48:	str	r3, [r5, #780]	; 0x30c
   15a4c:	bl	113cc <free@plt>
   15a50:	cmp	r4, #0
   15a54:	beq	15aa4 <sprintf@plt+0x44a4>
   15a58:	ldr	r4, [r4, #8]
   15a5c:	mov	r3, r6
   15a60:	mov	r6, r4
   15a64:	ldr	r2, [r3, #4]
   15a68:	cmp	r4, #0
   15a6c:	strne	r2, [r4, #4]
   15a70:	ldrne	r2, [r3, #4]
   15a74:	streq	r2, [r5, #776]	; 0x308
   15a78:	cmp	r2, #0
   15a7c:	mov	r0, r3
   15a80:	bne	15a3c <sprintf@plt+0x443c>
   15a84:	ldr	r2, [r5, #780]	; 0x30c
   15a88:	str	r4, [r5, #772]	; 0x304
   15a8c:	sub	r2, r2, #1
   15a90:	mov	r0, r3
   15a94:	str	r2, [r5, #780]	; 0x30c
   15a98:	bl	113cc <free@plt>
   15a9c:	cmp	r4, #0
   15aa0:	bne	15a58 <sprintf@plt+0x4458>
   15aa4:	ldr	r2, [pc, #108]	; 15b18 <sprintf@plt+0x4518>
   15aa8:	ldr	r0, [r2]
   15aac:	cmp	r0, #0
   15ab0:	bne	15ac4 <sprintf@plt+0x44c4>
   15ab4:	b	15b0c <sprintf@plt+0x450c>
   15ab8:	ldr	r0, [r0, #8]
   15abc:	cmp	r0, #0
   15ac0:	beq	15b0c <sprintf@plt+0x450c>
   15ac4:	ldr	r3, [r0]
   15ac8:	cmp	r5, r3
   15acc:	bne	15ab8 <sprintf@plt+0x44b8>
   15ad0:	ldmib	r0, {r1, r3}
   15ad4:	cmp	r3, #0
   15ad8:	strne	r1, [r3, #4]
   15adc:	ldrne	r1, [r0, #4]
   15ae0:	streq	r1, [r2, #4]
   15ae4:	cmp	r1, #0
   15ae8:	strne	r3, [r1, #8]
   15aec:	streq	r3, [r2]
   15af0:	ldr	r3, [r2, #8]
   15af4:	mov	r1, #0
   15af8:	sub	r3, r3, #1
   15afc:	str	r1, [r0, #4]
   15b00:	str	r1, [r0, #8]
   15b04:	str	r3, [r2, #8]
   15b08:	bl	11450 <rb_free_rb_dlink_node@plt>
   15b0c:	mov	r0, r5
   15b10:	pop	{r4, r5, r6, lr}
   15b14:	b	113cc <free@plt>
   15b18:	ldrdeq	pc, [r2], -r8
   15b1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b20:	sub	sp, sp, #12
   15b24:	ldr	r9, [pc, #780]	; 15e38 <sprintf@plt+0x4838>
   15b28:	ldr	r6, [r3, #4]
   15b2c:	ldr	r7, [r3]
   15b30:	ldr	sl, [r9, #16]
   15b34:	ldr	r2, [r6, #464]	; 0x1d0
   15b38:	add	r2, r2, sl, lsl #4
   15b3c:	ldr	r5, [r2, #8]
   15b40:	cmp	r5, #0
   15b44:	beq	15bd0 <sprintf@plt+0x45d0>
   15b48:	cmp	r0, #0
   15b4c:	moveq	r1, #0
   15b50:	andne	r1, r1, #1
   15b54:	cmp	r1, #0
   15b58:	mov	r8, r0
   15b5c:	mov	r4, r3
   15b60:	bne	15c3c <sprintf@plt+0x463c>
   15b64:	ldrb	r2, [r7, #784]	; 0x310
   15b68:	ldr	r3, [r7, #788]	; 0x314
   15b6c:	cmp	r2, #0
   15b70:	sub	r3, r3, #1
   15b74:	str	r3, [r7, #788]	; 0x314
   15b78:	beq	15b84 <sprintf@plt+0x4584>
   15b7c:	cmp	r3, #0
   15b80:	ble	15d34 <sprintf@plt+0x4734>
   15b84:	ldr	r0, [r4, #8]
   15b88:	bl	11f30 <sprintf@plt+0x930>
   15b8c:	ldr	r3, [r4, #20]
   15b90:	ldr	r2, [r4, #16]
   15b94:	cmp	r3, #0
   15b98:	strne	r2, [r3, #4]
   15b9c:	ldrne	r2, [r4, #16]
   15ba0:	streq	r2, [r5, #8]
   15ba4:	cmp	r2, #0
   15ba8:	strne	r3, [r2, #8]
   15bac:	streq	r3, [r5, #4]
   15bb0:	ldr	r3, [r5, #12]
   15bb4:	mov	r0, r4
   15bb8:	sub	r3, r3, #1
   15bbc:	str	r3, [r5, #12]
   15bc0:	bl	113cc <free@plt>
   15bc4:	ldr	r4, [r5, #12]
   15bc8:	cmp	r4, #0
   15bcc:	beq	15bd8 <sprintf@plt+0x45d8>
   15bd0:	add	sp, sp, #12
   15bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bd8:	ldr	r1, [pc, #604]	; 15e3c <sprintf@plt+0x483c>
   15bdc:	ldr	r0, [r6]
   15be0:	bl	1227c <sprintf@plt+0xc7c>
   15be4:	mov	r0, r5
   15be8:	bl	113cc <free@plt>
   15bec:	ldr	r3, [r9, #16]
   15bf0:	ldr	r2, [r6, #464]	; 0x1d0
   15bf4:	mov	r1, r3
   15bf8:	lsl	r3, r3, #4
   15bfc:	add	r2, r2, r3
   15c00:	mov	r0, r6
   15c04:	str	r4, [r2, #8]
   15c08:	ldr	r2, [r6, #464]	; 0x1d0
   15c0c:	add	r3, r2, r3
   15c10:	str	r4, [r3, #4]
   15c14:	bl	12b78 <sprintf@plt+0x1578>
   15c18:	ldr	r3, [r6, #460]	; 0x1cc
   15c1c:	sub	r3, r3, #1
   15c20:	cmp	r3, #0
   15c24:	str	r3, [r6, #460]	; 0x1cc
   15c28:	bne	15bd0 <sprintf@plt+0x45d0>
   15c2c:	mov	r0, r6
   15c30:	add	sp, sp, #12
   15c34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c38:	b	12ab4 <sprintf@plt+0x14b4>
   15c3c:	ldr	r3, [r7, #780]	; 0x30c
   15c40:	cmp	r3, #0
   15c44:	beq	15cbc <sprintf@plt+0x46bc>
   15c48:	mov	r1, #46	; 0x2e
   15c4c:	bl	11384 <strrchr@plt>
   15c50:	cmp	r0, #0
   15c54:	beq	15d40 <sprintf@plt+0x4740>
   15c58:	ldrb	r3, [r0, #1]
   15c5c:	cmp	r3, #0
   15c60:	beq	15d40 <sprintf@plt+0x4740>
   15c64:	ldr	fp, [r7, #772]	; 0x304
   15c68:	cmp	fp, #0
   15c6c:	beq	15b64 <sprintf@plt+0x4564>
   15c70:	add	r3, r0, #1
   15c74:	str	r3, [sp, #4]
   15c78:	b	15ca4 <sprintf@plt+0x46a4>
   15c7c:	cmp	r3, #2
   15c80:	bne	15e20 <sprintf@plt+0x4820>
   15c84:	ldr	r0, [sp, #4]
   15c88:	add	r1, r1, #4
   15c8c:	bl	115dc <strcmp@plt>
   15c90:	cmp	r0, #0
   15c94:	beq	15cbc <sprintf@plt+0x46bc>
   15c98:	ldr	fp, [fp, #8]
   15c9c:	cmp	fp, #0
   15ca0:	beq	15b64 <sprintf@plt+0x4564>
   15ca4:	ldr	r1, [fp]
   15ca8:	ldr	r3, [r1]
   15cac:	cmp	r3, #1
   15cb0:	bne	15c7c <sprintf@plt+0x467c>
   15cb4:	mov	r0, r8
   15cb8:	b	15c88 <sprintf@plt+0x4688>
   15cbc:	ldr	r3, [r7, #792]	; 0x318
   15cc0:	mov	r2, r7
   15cc4:	add	r3, r3, #1
   15cc8:	str	r3, [r7, #792]	; 0x318
   15ccc:	mov	r1, sl
   15cd0:	add	r3, r7, #256	; 0x100
   15cd4:	mov	r0, r6
   15cd8:	bl	12cc0 <sprintf@plt+0x16c0>
   15cdc:	ldr	r2, [r9, #16]
   15ce0:	ldr	r3, [r6, #464]	; 0x1d0
   15ce4:	add	r3, r3, r2, lsl #4
   15ce8:	ldr	r5, [r3, #8]
   15cec:	cmp	r5, #0
   15cf0:	beq	15bd0 <sprintf@plt+0x45d0>
   15cf4:	ldr	r3, [r5, #12]
   15cf8:	cmp	r3, #0
   15cfc:	bne	15d74 <sprintf@plt+0x4774>
   15d00:	mov	r0, r5
   15d04:	bl	113cc <free@plt>
   15d08:	ldr	r1, [r9, #16]
   15d0c:	ldr	r2, [r6, #464]	; 0x1d0
   15d10:	mov	ip, #0
   15d14:	lsl	lr, r1, #4
   15d18:	add	r2, r2, lr
   15d1c:	mov	r0, r6
   15d20:	str	ip, [r2, #8]
   15d24:	ldr	r3, [r6, #464]	; 0x1d0
   15d28:	add	r3, r3, lr
   15d2c:	str	ip, [r3, #4]
   15d30:	b	15c14 <sprintf@plt+0x4614>
   15d34:	mov	r0, r7
   15d38:	bl	15a1c <sprintf@plt+0x441c>
   15d3c:	b	15b84 <sprintf@plt+0x4584>
   15d40:	ldr	sl, [r7, #796]	; 0x31c
   15d44:	bl	1142c <rb_current_time@plt>
   15d48:	add	sl, sl, #3600	; 0xe10
   15d4c:	cmp	sl, r0
   15d50:	bge	15b64 <sprintf@plt+0x4564>
   15d54:	mov	r3, r8
   15d58:	mov	r2, r7
   15d5c:	ldr	r1, [pc, #220]	; 15e40 <sprintf@plt+0x4840>
   15d60:	mov	r0, #87	; 0x57
   15d64:	bl	122d8 <sprintf@plt+0xcd8>
   15d68:	bl	1142c <rb_current_time@plt>
   15d6c:	str	r0, [r7, #796]	; 0x31c
   15d70:	b	15b64 <sprintf@plt+0x4564>
   15d74:	ldr	r1, [pc, #200]	; 15e44 <sprintf@plt+0x4844>
   15d78:	ldr	r0, [r6]
   15d7c:	bl	1227c <sprintf@plt+0xc7c>
   15d80:	ldr	r3, [r5, #4]
   15d84:	cmp	r3, #0
   15d88:	beq	15d00 <sprintf@plt+0x4700>
   15d8c:	ldr	r7, [r3, #8]
   15d90:	b	15d9c <sprintf@plt+0x479c>
   15d94:	mov	r3, r7
   15d98:	ldr	r7, [r7, #8]
   15d9c:	ldr	r4, [r3]
   15da0:	ldr	r0, [r4, #8]
   15da4:	bl	11f30 <sprintf@plt+0x930>
   15da8:	ldr	r0, [r4]
   15dac:	ldr	r3, [r0, #788]	; 0x314
   15db0:	ldrb	r2, [r0, #784]	; 0x310
   15db4:	sub	r3, r3, #1
   15db8:	str	r3, [r0, #788]	; 0x314
   15dbc:	cmp	r3, #0
   15dc0:	movgt	r3, #0
   15dc4:	andle	r3, r2, #1
   15dc8:	cmp	r3, #0
   15dcc:	bne	15e18 <sprintf@plt+0x4818>
   15dd0:	ldr	r3, [r4, #20]
   15dd4:	mov	r0, r4
   15dd8:	cmp	r3, #0
   15ddc:	ldrne	r2, [r4, #16]
   15de0:	ldreq	r1, [r4, #16]
   15de4:	strne	r2, [r3, #4]
   15de8:	ldrne	r1, [r4, #16]
   15dec:	ldr	r2, [r5, #12]
   15df0:	streq	r1, [r5, #8]
   15df4:	cmp	r1, #0
   15df8:	strne	r3, [r1, #8]
   15dfc:	streq	r3, [r5, #4]
   15e00:	sub	r3, r2, #1
   15e04:	str	r3, [r5, #12]
   15e08:	bl	113cc <free@plt>
   15e0c:	cmp	r7, #0
   15e10:	bne	15d94 <sprintf@plt+0x4794>
   15e14:	b	15d00 <sprintf@plt+0x4700>
   15e18:	bl	15a1c <sprintf@plt+0x441c>
   15e1c:	b	15dd0 <sprintf@plt+0x47d0>
   15e20:	mov	r0, #67	; 0x43
   15e24:	mov	r2, r7
   15e28:	ldr	r1, [pc, #24]	; 15e48 <sprintf@plt+0x4848>
   15e2c:	bl	122d8 <sprintf@plt+0xcd8>
   15e30:	mov	r0, #3
   15e34:	bl	115e8 <exit@plt>
   15e38:	andeq	fp, r2, r4, ror #26
   15e3c:			; <UNDEFINED> instruction: 0x000198b0
   15e40:	andeq	r9, r1, r4, asr r8
   15e44:	muleq	r1, r4, r8
   15e48:	andeq	r9, r1, r4, lsr #16
   15e4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e50:	sub	sp, sp, #28
   15e54:	ldr	r4, [r2, #8]
   15e58:	str	r2, [sp, #12]
   15e5c:	mov	r0, r4
   15e60:	bl	11420 <strlen@plt>
   15e64:	add	r5, r0, #1
   15e68:	mov	r0, r5
   15e6c:	bl	11504 <malloc@plt>
   15e70:	subs	r3, r0, #0
   15e74:	str	r3, [sp, #4]
   15e78:	beq	160c8 <sprintf@plt+0x4ac8>
   15e7c:	mov	r2, r5
   15e80:	mov	r1, r4
   15e84:	bl	11444 <memcpy@plt>
   15e88:	ldr	r3, [sp, #4]
   15e8c:	ldrb	r3, [r3]
   15e90:	cmp	r3, #42	; 0x2a
   15e94:	beq	15fac <sprintf@plt+0x49ac>
   15e98:	add	r2, sp, #20
   15e9c:	ldr	r1, [pc, #796]	; 161c0 <sprintf@plt+0x4bc0>
   15ea0:	ldr	r0, [sp, #4]
   15ea4:	bl	1130c <rb_strtok_r@plt>
   15ea8:	subs	r8, r0, #0
   15eac:	beq	15fac <sprintf@plt+0x49ac>
   15eb0:	mov	r3, #1
   15eb4:	mov	r2, #0
   15eb8:	mov	r7, r3
   15ebc:	mov	r9, r2
   15ec0:	str	r3, [sp]
   15ec4:	str	r2, [sp, #8]
   15ec8:	mov	r1, #72	; 0x48
   15ecc:	mov	r0, r7
   15ed0:	bl	1133c <calloc@plt>
   15ed4:	subs	r6, r0, #0
   15ed8:	beq	160c8 <sprintf@plt+0x4ac8>
   15edc:	ldrb	fp, [r8]
   15ee0:	cmp	fp, #0
   15ee4:	beq	160e0 <sprintf@plt+0x4ae0>
   15ee8:	mov	sl, r8
   15eec:	mov	r5, #2
   15ef0:	mov	r4, #0
   15ef4:	b	15f1c <sprintf@plt+0x491c>
   15ef8:	bl	114e0 <__ctype_b_loc@plt>
   15efc:	lsl	r3, fp, #1
   15f00:	ldr	r2, [r0]
   15f04:	ldrh	r3, [r2, r3]
   15f08:	tst	r3, #2048	; 0x800
   15f0c:	beq	16100 <sprintf@plt+0x4b00>
   15f10:	ldrb	fp, [sl, #1]!
   15f14:	cmp	fp, #0
   15f18:	beq	15f40 <sprintf@plt+0x4940>
   15f1c:	cmp	fp, #46	; 0x2e
   15f20:	bne	15ef8 <sprintf@plt+0x48f8>
   15f24:	add	r4, r4, #1
   15f28:	cmp	r4, #3
   15f2c:	bgt	16174 <sprintf@plt+0x4b74>
   15f30:	ldrb	fp, [sl, #1]!
   15f34:	mov	r5, r7
   15f38:	cmp	fp, #0
   15f3c:	bne	15f1c <sprintf@plt+0x491c>
   15f40:	sub	r4, r4, #1
   15f44:	cmp	r4, #1
   15f48:	bls	16188 <sprintf@plt+0x4b88>
   15f4c:	mov	r0, r6
   15f50:	mov	r1, r8
   15f54:	str	r5, [r0], #4
   15f58:	mov	r2, #53	; 0x35
   15f5c:	bl	113a8 <rb_strlcpy@plt>
   15f60:	mov	r3, #0
   15f64:	str	r6, [r6, #60]	; 0x3c
   15f68:	str	r3, [r6, #64]	; 0x40
   15f6c:	str	r9, [r6, #68]	; 0x44
   15f70:	cmp	r9, #0
   15f74:	add	r6, r6, #60	; 0x3c
   15f78:	strne	r6, [r9, #4]
   15f7c:	beq	160b4 <sprintf@plt+0x4ab4>
   15f80:	add	r2, sp, #20
   15f84:	ldr	r1, [pc, #564]	; 161c0 <sprintf@plt+0x4bc0>
   15f88:	mov	r0, #0
   15f8c:	bl	1130c <rb_strtok_r@plt>
   15f90:	ldr	r3, [sp]
   15f94:	mov	r9, r6
   15f98:	add	r3, r3, #1
   15f9c:	subs	r8, r0, #0
   15fa0:	beq	15fbc <sprintf@plt+0x49bc>
   15fa4:	str	r3, [sp]
   15fa8:	b	15ec8 <sprintf@plt+0x48c8>
   15fac:	mov	r3, #0
   15fb0:	mov	r6, r3
   15fb4:	str	r3, [sp]
   15fb8:	str	r3, [sp, #8]
   15fbc:	ldr	r0, [sp, #4]
   15fc0:	bl	113cc <free@plt>
   15fc4:	ldr	r4, [sp, #12]
   15fc8:	mov	r2, #10
   15fcc:	mov	r1, #0
   15fd0:	ldr	r0, [r4, #4]
   15fd4:	bl	11468 <strtol@plt>
   15fd8:	ldr	r5, [r4]
   15fdc:	ldr	r7, [r4, #12]
   15fe0:	mov	r3, r4
   15fe4:	cmp	r7, #0
   15fe8:	cmpne	r5, #0
   15fec:	moveq	r3, #1
   15ff0:	movne	r3, #0
   15ff4:	ands	r9, r0, #3
   15ff8:	orreq	r3, r3, #1
   15ffc:	cmp	r3, #0
   16000:	bne	160cc <sprintf@plt+0x4acc>
   16004:	ldr	r8, [pc, #440]	; 161c4 <sprintf@plt+0x4bc4>
   16008:	ldr	r4, [r8]
   1600c:	cmp	r4, #0
   16010:	bne	16024 <sprintf@plt+0x4a24>
   16014:	b	16118 <sprintf@plt+0x4b18>
   16018:	ldr	r4, [r4, #8]
   1601c:	cmp	r4, #0
   16020:	beq	16118 <sprintf@plt+0x4b18>
   16024:	ldr	fp, [r4]
   16028:	mov	r1, r5
   1602c:	mov	r0, fp
   16030:	bl	11330 <strcasecmp@plt>
   16034:	mov	r3, fp
   16038:	cmp	r0, #0
   1603c:	bne	16018 <sprintf@plt+0x4a18>
   16040:	cmp	fp, #0
   16044:	strbne	r0, [fp, #784]	; 0x310
   16048:	beq	16118 <sprintf@plt+0x4b18>
   1604c:	mov	r1, r5
   16050:	mov	r0, r3
   16054:	mov	r2, #256	; 0x100
   16058:	bl	113a8 <rb_strlcpy@plt>
   1605c:	mov	r1, r7
   16060:	mov	r2, #512	; 0x200
   16064:	add	r0, fp, #256	; 0x100
   16068:	bl	113a8 <rb_strlcpy@plt>
   1606c:	cmp	r6, #0
   16070:	strb	r9, [fp, #768]	; 0x300
   16074:	beq	160a4 <sprintf@plt+0x4aa4>
   16078:	ldr	r3, [fp, #772]	; 0x304
   1607c:	cmp	r3, #0
   16080:	beq	160e8 <sprintf@plt+0x4ae8>
   16084:	ldr	r2, [fp, #780]	; 0x30c
   16088:	ldr	r1, [sp, #8]
   1608c:	ldr	r0, [sp]
   16090:	add	sl, r2, r0
   16094:	str	r3, [r1, #8]
   16098:	str	r1, [r3, #4]
   1609c:	str	r6, [fp, #772]	; 0x304
   160a0:	str	sl, [fp, #780]	; 0x30c
   160a4:	mov	r3, #0
   160a8:	str	r3, [fp, #796]	; 0x31c
   160ac:	add	sp, sp, #28
   160b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160b4:	ldr	r2, [sp, #8]
   160b8:	subs	r3, r2, #0
   160bc:	moveq	r3, r6
   160c0:	str	r3, [sp, #8]
   160c4:	b	15f80 <sprintf@plt+0x4980>
   160c8:	bl	114d4 <rb_outofmemory@plt>
   160cc:	mov	r0, #67	; 0x43
   160d0:	ldr	r1, [pc, #240]	; 161c8 <sprintf@plt+0x4bc8>
   160d4:	bl	122d8 <sprintf@plt+0xcd8>
   160d8:	mov	r0, #3
   160dc:	bl	115e8 <exit@plt>
   160e0:	mov	r5, #2
   160e4:	b	15f4c <sprintf@plt+0x494c>
   160e8:	ldr	r3, [sp, #8]
   160ec:	str	r6, [fp, #772]	; 0x304
   160f0:	str	r3, [fp, #776]	; 0x308
   160f4:	ldr	r3, [sp]
   160f8:	str	r3, [fp, #780]	; 0x30c
   160fc:	b	160a4 <sprintf@plt+0x4aa4>
   16100:	mov	r0, #67	; 0x43
   16104:	mov	r2, fp
   16108:	ldr	r1, [pc, #188]	; 161cc <sprintf@plt+0x4bcc>
   1610c:	bl	122d8 <sprintf@plt+0xcd8>
   16110:	mov	r0, #3
   16114:	bl	115e8 <exit@plt>
   16118:	mov	r1, #800	; 0x320
   1611c:	mov	r0, #1
   16120:	bl	1133c <calloc@plt>
   16124:	subs	r4, r0, #0
   16128:	beq	160c8 <sprintf@plt+0x4ac8>
   1612c:	bl	11588 <rb_make_rb_dlink_node@plt>
   16130:	cmp	r0, #0
   16134:	beq	161ac <sprintf@plt+0x4bac>
   16138:	ldr	r2, [r8]
   1613c:	mov	r3, #0
   16140:	cmp	r2, r3
   16144:	str	r4, [r0]
   16148:	str	r2, [r0, #8]
   1614c:	str	r3, [r0, #4]
   16150:	strne	r0, [r2, #4]
   16154:	beq	1619c <sprintf@plt+0x4b9c>
   16158:	ldr	r2, [r8, #8]
   1615c:	mov	r3, r4
   16160:	add	r2, r2, #1
   16164:	str	r0, [r8]
   16168:	str	r2, [r8, #8]
   1616c:	mov	fp, r4
   16170:	b	1604c <sprintf@plt+0x4a4c>
   16174:	mov	r0, #67	; 0x43
   16178:	ldr	r1, [pc, #80]	; 161d0 <sprintf@plt+0x4bd0>
   1617c:	bl	122d8 <sprintf@plt+0xcd8>
   16180:	mov	r0, #3
   16184:	bl	115e8 <exit@plt>
   16188:	mov	r0, #67	; 0x43
   1618c:	ldr	r1, [pc, #64]	; 161d4 <sprintf@plt+0x4bd4>
   16190:	bl	122d8 <sprintf@plt+0xcd8>
   16194:	mov	r0, #3
   16198:	bl	115e8 <exit@plt>
   1619c:	ldr	r3, [r8, #4]
   161a0:	cmp	r3, #0
   161a4:	streq	r0, [r8, #4]
   161a8:	b	16158 <sprintf@plt+0x4b58>
   161ac:	ldr	r3, [pc, #36]	; 161d8 <sprintf@plt+0x4bd8>
   161b0:	mov	r2, #144	; 0x90
   161b4:	ldr	r1, [pc, #32]	; 161dc <sprintf@plt+0x4bdc>
   161b8:	ldr	r0, [pc, #32]	; 161e0 <sprintf@plt+0x4be0>
   161bc:	bl	1139c <__assert_fail@plt>
   161c0:	ldrdeq	r9, [r1], -r8
   161c4:	ldrdeq	pc, [r2], -r8
   161c8:	andeq	r9, r1, r8, lsr #19
   161cc:	andeq	r9, r1, r8, lsl r9
   161d0:	ldrdeq	r9, [r1], -ip
   161d4:	andeq	r9, r1, r8, ror #18
   161d8:	muleq	r1, r0, r7
   161dc:	andeq	r9, r1, r4, ror #7
   161e0:	andeq	r9, r1, r0, lsl r4
   161e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161e8:	sub	sp, sp, #12
   161ec:	ldr	r7, [pc, #384]	; 16374 <sprintf@plt+0x4d74>
   161f0:	mov	r1, sp
   161f4:	ldr	r9, [pc, #380]	; 16378 <sprintf@plt+0x4d78>
   161f8:	ldr	r0, [r7]
   161fc:	bl	11408 <rb_dictionary_foreach_start@plt>
   16200:	mov	r8, #0
   16204:	ldr	sl, [pc, #368]	; 1637c <sprintf@plt+0x4d7c>
   16208:	b	16268 <sprintf@plt+0x4c68>
   1620c:	mov	r0, fp
   16210:	bl	113cc <free@plt>
   16214:	ldr	r3, [r9, #16]
   16218:	ldr	r2, [r6, #464]	; 0x1d0
   1621c:	mov	r1, r3
   16220:	lsl	r3, r3, #4
   16224:	add	r2, r2, r3
   16228:	mov	r0, r6
   1622c:	str	r8, [r2, #8]
   16230:	ldr	r2, [r6, #464]	; 0x1d0
   16234:	add	r3, r2, r3
   16238:	str	r8, [r3, #4]
   1623c:	bl	12b78 <sprintf@plt+0x1578>
   16240:	ldr	r3, [r6, #460]	; 0x1cc
   16244:	sub	r3, r3, #1
   16248:	cmp	r3, #0
   1624c:	str	r3, [r6, #460]	; 0x1cc
   16250:	bne	1625c <sprintf@plt+0x4c5c>
   16254:	mov	r0, r6
   16258:	bl	12ab4 <sprintf@plt+0x14b4>
   1625c:	mov	r1, sp
   16260:	ldr	r0, [r7]
   16264:	bl	113c0 <rb_dictionary_foreach_next@plt>
   16268:	mov	r1, sp
   1626c:	ldr	r0, [r7]
   16270:	bl	11324 <rb_dictionary_foreach_cur@plt>
   16274:	subs	r6, r0, #0
   16278:	beq	16368 <sprintf@plt+0x4d68>
   1627c:	ldr	r2, [r9, #16]
   16280:	ldr	r3, [r6, #464]	; 0x1d0
   16284:	add	r3, r3, r2, lsl #4
   16288:	ldr	fp, [r3, #8]
   1628c:	cmp	fp, #0
   16290:	beq	1625c <sprintf@plt+0x4c5c>
   16294:	ldr	r3, [fp, #12]
   16298:	cmp	r3, #0
   1629c:	beq	1620c <sprintf@plt+0x4c0c>
   162a0:	mov	r1, sl
   162a4:	ldr	r0, [r6]
   162a8:	bl	1227c <sprintf@plt+0xc7c>
   162ac:	ldr	r3, [fp, #4]
   162b0:	cmp	r3, #0
   162b4:	beq	1620c <sprintf@plt+0x4c0c>
   162b8:	ldr	r5, [r3, #8]
   162bc:	b	162e0 <sprintf@plt+0x4ce0>
   162c0:	str	r3, [r1, #8]
   162c4:	sub	r3, r2, #1
   162c8:	str	r3, [fp, #12]
   162cc:	bl	113cc <free@plt>
   162d0:	cmp	r5, #0
   162d4:	beq	1620c <sprintf@plt+0x4c0c>
   162d8:	mov	r3, r5
   162dc:	ldr	r5, [r5, #8]
   162e0:	ldr	r4, [r3]
   162e4:	ldr	r0, [r4, #8]
   162e8:	bl	11f30 <sprintf@plt+0x930>
   162ec:	ldr	r0, [r4]
   162f0:	ldr	r3, [r0, #788]	; 0x314
   162f4:	ldrb	r2, [r0, #784]	; 0x310
   162f8:	sub	r3, r3, #1
   162fc:	str	r3, [r0, #788]	; 0x314
   16300:	cmp	r3, #0
   16304:	movgt	r3, #0
   16308:	andle	r3, r2, #1
   1630c:	cmp	r3, #0
   16310:	bne	16360 <sprintf@plt+0x4d60>
   16314:	ldr	r3, [r4, #20]
   16318:	mov	r0, r4
   1631c:	cmp	r3, #0
   16320:	ldrne	r2, [r4, #16]
   16324:	ldreq	r1, [r4, #16]
   16328:	strne	r2, [r3, #4]
   1632c:	ldrne	r1, [r4, #16]
   16330:	streq	r1, [fp, #8]
   16334:	cmp	r1, #0
   16338:	ldr	r2, [fp, #12]
   1633c:	bne	162c0 <sprintf@plt+0x4cc0>
   16340:	str	r3, [fp, #4]
   16344:	sub	r3, r2, #1
   16348:	mov	r0, r4
   1634c:	str	r3, [fp, #12]
   16350:	bl	113cc <free@plt>
   16354:	cmp	r5, #0
   16358:	bne	162d8 <sprintf@plt+0x4cd8>
   1635c:	b	1620c <sprintf@plt+0x4c0c>
   16360:	bl	15a1c <sprintf@plt+0x441c>
   16364:	b	16314 <sprintf@plt+0x4d14>
   16368:	bl	15874 <sprintf@plt+0x4274>
   1636c:	add	sp, sp, #12
   16370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16374:	andeq	r0, r3, r0, ror r1
   16378:	andeq	fp, r2, r4, ror #26
   1637c:	muleq	r1, r4, r8
   16380:	push	{r4, r5, r6, r7, r8, lr}
   16384:	ldr	r7, [pc, #320]	; 164cc <sprintf@plt+0x4ecc>
   16388:	ldr	r3, [r0, #464]	; 0x1d0
   1638c:	ldr	r2, [r7, #16]
   16390:	add	r3, r3, r2, lsl #4
   16394:	ldr	r8, [r3, #8]
   16398:	cmp	r8, #0
   1639c:	popeq	{r4, r5, r6, r7, r8, pc}
   163a0:	ldr	r3, [r8, #12]
   163a4:	mov	r5, r0
   163a8:	cmp	r3, #0
   163ac:	bne	16404 <sprintf@plt+0x4e04>
   163b0:	mov	r0, r8
   163b4:	bl	113cc <free@plt>
   163b8:	ldr	r1, [r7, #16]
   163bc:	ldr	r2, [r5, #464]	; 0x1d0
   163c0:	mov	ip, #0
   163c4:	lsl	lr, r1, #4
   163c8:	add	r2, r2, lr
   163cc:	mov	r0, r5
   163d0:	str	ip, [r2, #8]
   163d4:	ldr	r3, [r5, #464]	; 0x1d0
   163d8:	add	r3, r3, lr
   163dc:	str	ip, [r3, #4]
   163e0:	bl	12b78 <sprintf@plt+0x1578>
   163e4:	ldr	r3, [r5, #460]	; 0x1cc
   163e8:	sub	r3, r3, #1
   163ec:	cmp	r3, #0
   163f0:	str	r3, [r5, #460]	; 0x1cc
   163f4:	popne	{r4, r5, r6, r7, r8, pc}
   163f8:	mov	r0, r5
   163fc:	pop	{r4, r5, r6, r7, r8, lr}
   16400:	b	12ab4 <sprintf@plt+0x14b4>
   16404:	ldr	r1, [pc, #196]	; 164d0 <sprintf@plt+0x4ed0>
   16408:	ldr	r0, [r0]
   1640c:	bl	1227c <sprintf@plt+0xc7c>
   16410:	ldr	r3, [r8, #4]
   16414:	cmp	r3, #0
   16418:	beq	163b0 <sprintf@plt+0x4db0>
   1641c:	ldr	r6, [r3, #8]
   16420:	b	16444 <sprintf@plt+0x4e44>
   16424:	str	r3, [r1, #8]
   16428:	sub	r3, r2, #1
   1642c:	str	r3, [r8, #12]
   16430:	bl	113cc <free@plt>
   16434:	cmp	r6, #0
   16438:	beq	163b0 <sprintf@plt+0x4db0>
   1643c:	mov	r3, r6
   16440:	ldr	r6, [r6, #8]
   16444:	ldr	r4, [r3]
   16448:	ldr	r0, [r4, #8]
   1644c:	bl	11f30 <sprintf@plt+0x930>
   16450:	ldr	r0, [r4]
   16454:	ldr	r3, [r0, #788]	; 0x314
   16458:	ldrb	r2, [r0, #784]	; 0x310
   1645c:	sub	r3, r3, #1
   16460:	str	r3, [r0, #788]	; 0x314
   16464:	cmp	r3, #0
   16468:	movgt	r3, #0
   1646c:	andle	r3, r2, #1
   16470:	cmp	r3, #0
   16474:	bne	164c4 <sprintf@plt+0x4ec4>
   16478:	ldr	r3, [r4, #20]
   1647c:	mov	r0, r4
   16480:	cmp	r3, #0
   16484:	ldrne	r2, [r4, #16]
   16488:	ldreq	r1, [r4, #16]
   1648c:	strne	r2, [r3, #4]
   16490:	ldrne	r1, [r4, #16]
   16494:	streq	r1, [r8, #8]
   16498:	cmp	r1, #0
   1649c:	ldr	r2, [r8, #12]
   164a0:	bne	16424 <sprintf@plt+0x4e24>
   164a4:	str	r3, [r8, #4]
   164a8:	sub	r3, r2, #1
   164ac:	mov	r0, r4
   164b0:	str	r3, [r8, #12]
   164b4:	bl	113cc <free@plt>
   164b8:	cmp	r6, #0
   164bc:	bne	1643c <sprintf@plt+0x4e3c>
   164c0:	b	163b0 <sprintf@plt+0x4db0>
   164c4:	bl	15a1c <sprintf@plt+0x441c>
   164c8:	b	16478 <sprintf@plt+0x4e78>
   164cc:	andeq	fp, r2, r4, ror #26
   164d0:	muleq	r1, r4, r8
   164d4:	push	{r4, r5, r6, r7, r8, lr}
   164d8:	ldr	r7, [pc, #320]	; 16620 <sprintf@plt+0x5020>
   164dc:	ldr	r3, [r0, #464]	; 0x1d0
   164e0:	ldr	r2, [r7, #16]
   164e4:	add	r3, r3, r2, lsl #4
   164e8:	ldr	r8, [r3, #8]
   164ec:	cmp	r8, #0
   164f0:	popeq	{r4, r5, r6, r7, r8, pc}
   164f4:	ldr	r3, [r8, #12]
   164f8:	mov	r5, r0
   164fc:	cmp	r3, #0
   16500:	bne	16558 <sprintf@plt+0x4f58>
   16504:	mov	r0, r8
   16508:	bl	113cc <free@plt>
   1650c:	ldr	r1, [r7, #16]
   16510:	ldr	r2, [r5, #464]	; 0x1d0
   16514:	mov	ip, #0
   16518:	lsl	lr, r1, #4
   1651c:	add	r2, r2, lr
   16520:	mov	r0, r5
   16524:	str	ip, [r2, #8]
   16528:	ldr	r3, [r5, #464]	; 0x1d0
   1652c:	add	r3, r3, lr
   16530:	str	ip, [r3, #4]
   16534:	bl	12b78 <sprintf@plt+0x1578>
   16538:	ldr	r3, [r5, #460]	; 0x1cc
   1653c:	sub	r3, r3, #1
   16540:	cmp	r3, #0
   16544:	str	r3, [r5, #460]	; 0x1cc
   16548:	popne	{r4, r5, r6, r7, r8, pc}
   1654c:	mov	r0, r5
   16550:	pop	{r4, r5, r6, r7, r8, lr}
   16554:	b	12ab4 <sprintf@plt+0x14b4>
   16558:	ldr	r1, [pc, #196]	; 16624 <sprintf@plt+0x5024>
   1655c:	ldr	r0, [r0]
   16560:	bl	1227c <sprintf@plt+0xc7c>
   16564:	ldr	r3, [r8, #4]
   16568:	cmp	r3, #0
   1656c:	beq	16504 <sprintf@plt+0x4f04>
   16570:	ldr	r6, [r3, #8]
   16574:	b	16598 <sprintf@plt+0x4f98>
   16578:	str	r3, [r1, #8]
   1657c:	sub	r3, r2, #1
   16580:	str	r3, [r8, #12]
   16584:	bl	113cc <free@plt>
   16588:	cmp	r6, #0
   1658c:	beq	16504 <sprintf@plt+0x4f04>
   16590:	mov	r3, r6
   16594:	ldr	r6, [r6, #8]
   16598:	ldr	r4, [r3]
   1659c:	ldr	r0, [r4, #8]
   165a0:	bl	11f30 <sprintf@plt+0x930>
   165a4:	ldr	r0, [r4]
   165a8:	ldr	r3, [r0, #788]	; 0x314
   165ac:	ldrb	r2, [r0, #784]	; 0x310
   165b0:	sub	r3, r3, #1
   165b4:	str	r3, [r0, #788]	; 0x314
   165b8:	cmp	r3, #0
   165bc:	movgt	r3, #0
   165c0:	andle	r3, r2, #1
   165c4:	cmp	r3, #0
   165c8:	bne	16618 <sprintf@plt+0x5018>
   165cc:	ldr	r3, [r4, #20]
   165d0:	mov	r0, r4
   165d4:	cmp	r3, #0
   165d8:	ldrne	r2, [r4, #16]
   165dc:	ldreq	r1, [r4, #16]
   165e0:	strne	r2, [r3, #4]
   165e4:	ldrne	r1, [r4, #16]
   165e8:	streq	r1, [r8, #8]
   165ec:	cmp	r1, #0
   165f0:	ldr	r2, [r8, #12]
   165f4:	bne	16578 <sprintf@plt+0x4f78>
   165f8:	str	r3, [r8, #4]
   165fc:	sub	r3, r2, #1
   16600:	mov	r0, r4
   16604:	str	r3, [r8, #12]
   16608:	bl	113cc <free@plt>
   1660c:	cmp	r6, #0
   16610:	bne	16590 <sprintf@plt+0x4f90>
   16614:	b	16504 <sprintf@plt+0x4f04>
   16618:	bl	15a1c <sprintf@plt+0x441c>
   1661c:	b	165cc <sprintf@plt+0x4fcc>
   16620:	andeq	fp, r2, r4, ror #26
   16624:	ldrdeq	r9, [r1], -r8
   16628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1662c:	mov	r6, r0
   16630:	ldr	r9, [pc, #744]	; 16920 <sprintf@plt+0x5320>
   16634:	ldr	r3, [r0, #464]	; 0x1d0
   16638:	ldrh	r2, [r0, #248]	; 0xf8
   1663c:	ldr	r1, [r9, #16]
   16640:	sub	sp, sp, #276	; 0x114
   16644:	cmp	r2, #2
   16648:	add	r3, r3, r1, lsl #4
   1664c:	ldr	r7, [r3, #8]
   16650:	beq	166c4 <sprintf@plt+0x50c4>
   16654:	cmp	r2, #10
   16658:	moveq	sl, #2
   1665c:	beq	166c8 <sprintf@plt+0x50c8>
   16660:	cmp	r7, #0
   16664:	beq	166bc <sprintf@plt+0x50bc>
   16668:	ldr	r3, [r7, #12]
   1666c:	cmp	r3, #0
   16670:	bne	16838 <sprintf@plt+0x5238>
   16674:	mov	r0, r7
   16678:	bl	113cc <free@plt>
   1667c:	ldr	r1, [r9, #16]
   16680:	ldr	r2, [r6, #464]	; 0x1d0
   16684:	mov	ip, #0
   16688:	lsl	lr, r1, #4
   1668c:	add	r2, r2, lr
   16690:	mov	r0, r6
   16694:	str	ip, [r2, #8]
   16698:	ldr	r3, [r6, #464]	; 0x1d0
   1669c:	add	r3, r3, lr
   166a0:	str	ip, [r3, #4]
   166a4:	bl	12b78 <sprintf@plt+0x1578>
   166a8:	ldr	r3, [r6, #460]	; 0x1cc
   166ac:	sub	r3, r3, #1
   166b0:	cmp	r3, #0
   166b4:	str	r3, [r6, #460]	; 0x1cc
   166b8:	beq	16814 <sprintf@plt+0x5214>
   166bc:	add	sp, sp, #276	; 0x114
   166c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166c4:	mov	sl, #1
   166c8:	mov	r5, #1
   166cc:	strb	r5, [r7]
   166d0:	ldr	r1, [pc, #588]	; 16924 <sprintf@plt+0x5324>
   166d4:	ldr	r0, [r6]
   166d8:	bl	1227c <sprintf@plt+0xc7c>
   166dc:	ldr	r3, [pc, #580]	; 16928 <sprintf@plt+0x5328>
   166e0:	ldr	r4, [r3]
   166e4:	cmp	r4, #0
   166e8:	addne	r3, r6, #248	; 0xf8
   166ec:	strne	r5, [sp, #4]
   166f0:	strne	r3, [sp, #12]
   166f4:	strne	r7, [sp, #8]
   166f8:	bne	1670c <sprintf@plt+0x510c>
   166fc:	b	167f4 <sprintf@plt+0x51f4>
   16700:	ldr	r4, [r4, #8]
   16704:	cmp	r4, #0
   16708:	beq	167f0 <sprintf@plt+0x51f0>
   1670c:	ldr	r5, [r4]
   16710:	ldrb	r3, [r5, #784]	; 0x310
   16714:	cmp	r3, #0
   16718:	bne	16700 <sprintf@plt+0x5100>
   1671c:	ldrb	r7, [r5, #768]	; 0x300
   16720:	tst	r7, sl
   16724:	beq	16700 <sprintf@plt+0x5100>
   16728:	mov	r1, #24
   1672c:	ldr	r0, [sp, #4]
   16730:	bl	1133c <calloc@plt>
   16734:	subs	r8, r0, #0
   16738:	beq	16918 <sprintf@plt+0x5318>
   1673c:	ldr	r0, [r9, #16]
   16740:	ldr	r2, [r6, #464]	; 0x1d0
   16744:	ldrh	r1, [r6, #248]	; 0xf8
   16748:	add	r2, r2, r0, lsl #4
   1674c:	cmp	r1, #2
   16750:	ldr	fp, [r2, #8]
   16754:	stm	r8, {r5, r6}
   16758:	beq	16824 <sprintf@plt+0x5224>
   1675c:	cmp	r1, #10
   16760:	bne	1676c <sprintf@plt+0x516c>
   16764:	tst	r7, #2
   16768:	beq	1682c <sprintf@plt+0x522c>
   1676c:	mov	r3, r5
   16770:	ldr	r2, [sp, #12]
   16774:	mov	r1, #256	; 0x100
   16778:	add	r0, sp, #16
   1677c:	bl	13af4 <sprintf@plt+0x24f4>
   16780:	mov	r3, r8
   16784:	mov	r1, #2
   16788:	ldr	r2, [pc, #412]	; 1692c <sprintf@plt+0x532c>
   1678c:	add	r0, sp, #16
   16790:	bl	11dcc <sprintf@plt+0x7cc>
   16794:	add	r3, fp, #4
   16798:	cmp	r3, #0
   1679c:	add	r1, r8, #12
   167a0:	str	r0, [r8, #8]
   167a4:	beq	1691c <sprintf@plt+0x531c>
   167a8:	ldr	r3, [fp, #4]
   167ac:	mov	r2, #0
   167b0:	cmp	r3, r2
   167b4:	str	r8, [r8, #12]
   167b8:	str	r3, [r8, #20]
   167bc:	str	r2, [r8, #16]
   167c0:	strne	r1, [r3, #4]
   167c4:	beq	16900 <sprintf@plt+0x5300>
   167c8:	ldr	r3, [r5, #788]	; 0x314
   167cc:	ldr	r2, [fp, #12]
   167d0:	ldr	r4, [r4, #8]
   167d4:	add	r2, r2, #1
   167d8:	add	r3, r3, #1
   167dc:	cmp	r4, #0
   167e0:	str	r1, [fp, #4]
   167e4:	str	r2, [fp, #12]
   167e8:	str	r3, [r5, #788]	; 0x314
   167ec:	bne	1670c <sprintf@plt+0x510c>
   167f0:	ldr	r7, [sp, #8]
   167f4:	ldr	r3, [r7, #12]
   167f8:	cmp	r3, #0
   167fc:	bne	168dc <sprintf@plt+0x52dc>
   16800:	ldr	r2, [r9, #16]
   16804:	ldr	r3, [r6, #464]	; 0x1d0
   16808:	add	r3, r3, r2, lsl #4
   1680c:	ldr	r7, [r3, #8]
   16810:	b	16660 <sprintf@plt+0x5060>
   16814:	mov	r0, r6
   16818:	bl	12ab4 <sprintf@plt+0x14b4>
   1681c:	add	sp, sp, #276	; 0x114
   16820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16824:	tst	r7, #1
   16828:	bne	1676c <sprintf@plt+0x516c>
   1682c:	mov	r0, r8
   16830:	bl	113cc <free@plt>
   16834:	b	16700 <sprintf@plt+0x5100>
   16838:	ldr	r1, [pc, #240]	; 16930 <sprintf@plt+0x5330>
   1683c:	ldr	r0, [r6]
   16840:	bl	1227c <sprintf@plt+0xc7c>
   16844:	ldr	r3, [r7, #4]
   16848:	cmp	r3, #0
   1684c:	beq	16674 <sprintf@plt+0x5074>
   16850:	ldr	r4, [r3, #8]
   16854:	b	16860 <sprintf@plt+0x5260>
   16858:	mov	r3, r4
   1685c:	ldr	r4, [r4, #8]
   16860:	ldr	r5, [r3]
   16864:	ldr	r0, [r5, #8]
   16868:	bl	11f30 <sprintf@plt+0x930>
   1686c:	ldr	r0, [r5]
   16870:	ldr	r3, [r0, #788]	; 0x314
   16874:	ldrb	r2, [r0, #784]	; 0x310
   16878:	sub	r3, r3, #1
   1687c:	str	r3, [r0, #788]	; 0x314
   16880:	cmp	r3, #0
   16884:	movgt	r3, #0
   16888:	andle	r3, r2, #1
   1688c:	cmp	r3, #0
   16890:	bne	16910 <sprintf@plt+0x5310>
   16894:	ldr	r3, [r5, #20]
   16898:	mov	r0, r5
   1689c:	cmp	r3, #0
   168a0:	ldrne	r2, [r5, #16]
   168a4:	ldreq	r1, [r5, #16]
   168a8:	strne	r2, [r3, #4]
   168ac:	ldrne	r1, [r5, #16]
   168b0:	ldr	r2, [r7, #12]
   168b4:	streq	r1, [r7, #8]
   168b8:	cmp	r1, #0
   168bc:	strne	r3, [r1, #8]
   168c0:	streq	r3, [r7, #4]
   168c4:	sub	r3, r2, #1
   168c8:	str	r3, [r7, #12]
   168cc:	bl	113cc <free@plt>
   168d0:	cmp	r4, #0
   168d4:	bne	16858 <sprintf@plt+0x5258>
   168d8:	b	16674 <sprintf@plt+0x5074>
   168dc:	ldr	r3, [r9, #16]
   168e0:	ldr	r4, [r6, #464]	; 0x1d0
   168e4:	ldr	r5, [r9]
   168e8:	add	r4, r4, r3, lsl #4
   168ec:	bl	1142c <rb_current_time@plt>
   168f0:	add	r0, r5, r0
   168f4:	str	r0, [r4, #4]
   168f8:	add	sp, sp, #276	; 0x114
   168fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16900:	ldr	r3, [fp, #8]
   16904:	cmp	r3, #0
   16908:	streq	r1, [fp, #8]
   1690c:	b	167c8 <sprintf@plt+0x51c8>
   16910:	bl	15a1c <sprintf@plt+0x441c>
   16914:	b	16894 <sprintf@plt+0x5294>
   16918:	bl	114d4 <rb_outofmemory@plt>
   1691c:	bl	11628 <sprintf@plt+0x28>
   16920:	andeq	fp, r2, r4, ror #26
   16924:	strdeq	r9, [r1], -r4
   16928:	ldrdeq	pc, [r2], -r8
   1692c:	andeq	r5, r1, ip, lsl fp
   16930:	andeq	r9, r1, r8, lsl sl
   16934:	ldr	r3, [pc, #204]	; 16a08 <sprintf@plt+0x5408>
   16938:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1693c:	ldr	r3, [r3, #16]
   16940:	ldr	r8, [r0, #464]	; 0x1d0
   16944:	add	r3, r8, r3, lsl #4
   16948:	ldr	r3, [r3, #8]
   1694c:	cmp	r3, #0
   16950:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16954:	ldrb	r3, [r3]
   16958:	cmp	r3, #0
   1695c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   16960:	ldr	r3, [pc, #164]	; 16a0c <sprintf@plt+0x540c>
   16964:	mov	r9, r0
   16968:	ldr	r6, [r3]
   1696c:	cmp	r6, #0
   16970:	beq	169fc <sprintf@plt+0x53fc>
   16974:	ldr	r7, [pc, #148]	; 16a10 <sprintf@plt+0x5410>
   16978:	mov	r4, r6
   1697c:	b	1698c <sprintf@plt+0x538c>
   16980:	ldr	r4, [r4, #8]
   16984:	cmp	r4, #0
   16988:	beq	169b8 <sprintf@plt+0x53b8>
   1698c:	ldr	r5, [r4]
   16990:	mov	r1, r7
   16994:	ldr	r0, [r5, #16]
   16998:	bl	11330 <strcasecmp@plt>
   1699c:	cmp	r0, #0
   169a0:	bne	16980 <sprintf@plt+0x5380>
   169a4:	ldr	r3, [r5, #12]
   169a8:	add	r3, r8, r3, lsl #4
   169ac:	ldr	r3, [r3, #12]
   169b0:	cmp	r3, #2
   169b4:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   169b8:	ldr	r5, [pc, #84]	; 16a14 <sprintf@plt+0x5414>
   169bc:	b	169cc <sprintf@plt+0x53cc>
   169c0:	ldr	r6, [r6, #8]
   169c4:	cmp	r6, #0
   169c8:	beq	169fc <sprintf@plt+0x53fc>
   169cc:	ldr	r4, [r6]
   169d0:	mov	r1, r5
   169d4:	ldr	r0, [r4, #16]
   169d8:	bl	11330 <strcasecmp@plt>
   169dc:	cmp	r0, #0
   169e0:	bne	169c0 <sprintf@plt+0x53c0>
   169e4:	ldr	r3, [r4, #12]
   169e8:	add	r8, r8, r3, lsl #4
   169ec:	ldr	r3, [r8, #12]
   169f0:	cmp	r3, #2
   169f4:	beq	169fc <sprintf@plt+0x53fc>
   169f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   169fc:	mov	r0, r9
   16a00:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16a04:	b	16628 <sprintf@plt+0x5028>
   16a08:	andeq	fp, r2, r4, ror #26
   16a0c:	andeq	r0, r3, r4, ror r1
   16a10:	andeq	r9, r1, r4, lsr sl
   16a14:	andeq	r9, r1, ip, lsr sl
   16a18:	ldr	r3, [pc, #268]	; 16b2c <sprintf@plt+0x552c>
   16a1c:	push	{r4, r5, r6, r7, r8, lr}
   16a20:	ldr	r3, [r3, #8]
   16a24:	cmp	r3, #0
   16a28:	beq	16ac4 <sprintf@plt+0x54c4>
   16a2c:	ldr	r3, [r0, #460]	; 0x1cc
   16a30:	ldr	r2, [pc, #248]	; 16b30 <sprintf@plt+0x5530>
   16a34:	add	r3, r3, #1
   16a38:	str	r3, [r0, #460]	; 0x1cc
   16a3c:	mov	r8, r0
   16a40:	mov	r1, #16
   16a44:	mov	r0, #1
   16a48:	ldr	r4, [r2, #16]
   16a4c:	bl	1133c <calloc@plt>
   16a50:	cmp	r0, #0
   16a54:	beq	16b28 <sprintf@plt+0x5528>
   16a58:	ldr	r2, [pc, #212]	; 16b34 <sprintf@plt+0x5534>
   16a5c:	ldr	r3, [r8, #464]	; 0x1d0
   16a60:	ldr	r6, [r2]
   16a64:	add	r3, r3, r4, lsl #4
   16a68:	cmp	r6, #0
   16a6c:	str	r0, [r3, #8]
   16a70:	beq	16b1c <sprintf@plt+0x551c>
   16a74:	ldr	r7, [pc, #188]	; 16b38 <sprintf@plt+0x5538>
   16a78:	mov	r4, r6
   16a7c:	b	16a8c <sprintf@plt+0x548c>
   16a80:	ldr	r4, [r4, #8]
   16a84:	cmp	r4, #0
   16a88:	beq	16ad8 <sprintf@plt+0x54d8>
   16a8c:	ldr	r5, [r4]
   16a90:	mov	r1, r7
   16a94:	ldr	r0, [r5, #16]
   16a98:	bl	11330 <strcasecmp@plt>
   16a9c:	cmp	r0, #0
   16aa0:	bne	16a80 <sprintf@plt+0x5480>
   16aa4:	ldr	r2, [r5, #12]
   16aa8:	ldr	r3, [r8, #464]	; 0x1d0
   16aac:	add	r3, r3, r2, lsl #4
   16ab0:	ldr	r3, [r3, #12]
   16ab4:	cmp	r3, #2
   16ab8:	beq	16ad8 <sprintf@plt+0x54d8>
   16abc:	mov	r0, #1
   16ac0:	pop	{r4, r5, r6, r7, r8, pc}
   16ac4:	ldr	r3, [pc, #100]	; 16b30 <sprintf@plt+0x5530>
   16ac8:	ldr	r1, [r3, #16]
   16acc:	bl	12b78 <sprintf@plt+0x1578>
   16ad0:	mov	r0, #1
   16ad4:	pop	{r4, r5, r6, r7, r8, pc}
   16ad8:	ldr	r5, [pc, #92]	; 16b3c <sprintf@plt+0x553c>
   16adc:	b	16aec <sprintf@plt+0x54ec>
   16ae0:	ldr	r6, [r6, #8]
   16ae4:	cmp	r6, #0
   16ae8:	beq	16b1c <sprintf@plt+0x551c>
   16aec:	ldr	r4, [r6]
   16af0:	mov	r1, r5
   16af4:	ldr	r0, [r4, #16]
   16af8:	bl	11330 <strcasecmp@plt>
   16afc:	cmp	r0, #0
   16b00:	bne	16ae0 <sprintf@plt+0x54e0>
   16b04:	ldr	r2, [r4, #12]
   16b08:	ldr	r3, [r8, #464]	; 0x1d0
   16b0c:	add	r3, r3, r2, lsl #4
   16b10:	ldr	r3, [r3, #12]
   16b14:	cmp	r3, #2
   16b18:	bne	16abc <sprintf@plt+0x54bc>
   16b1c:	mov	r0, r8
   16b20:	bl	16628 <sprintf@plt+0x5028>
   16b24:	b	16abc <sprintf@plt+0x54bc>
   16b28:	bl	114d4 <rb_outofmemory@plt>
   16b2c:	ldrdeq	pc, [r2], -r8
   16b30:	andeq	fp, r2, r4, ror #26
   16b34:	andeq	r0, r3, r4, ror r1
   16b38:	andeq	r9, r1, r4, lsr sl
   16b3c:	andeq	r9, r1, ip, lsr sl
   16b40:	ldr	r3, [r2]
   16b44:	ldr	r2, [pc, #20]	; 16b60 <sprintf@plt+0x5560>
   16b48:	ldrb	r3, [r3]
   16b4c:	sub	r3, r3, #49	; 0x31
   16b50:	clz	r3, r3
   16b54:	lsr	r3, r3, #5
   16b58:	strb	r3, [r2]
   16b5c:	bx	lr
   16b60:	andeq	fp, r2, r0, ror #27
   16b64:	ldr	r0, [r2]
   16b68:	push	{r4, lr}
   16b6c:	mov	r1, #0
   16b70:	mov	r2, #10
   16b74:	bl	11468 <strtol@plt>
   16b78:	cmp	r0, #0
   16b7c:	blt	16b8c <sprintf@plt+0x558c>
   16b80:	ldr	r3, [pc, #28]	; 16ba4 <sprintf@plt+0x55a4>
   16b84:	str	r0, [r3, #4]
   16b88:	pop	{r4, pc}
   16b8c:	mov	r2, r0
   16b90:	ldr	r1, [pc, #16]	; 16ba8 <sprintf@plt+0x55a8>
   16b94:	mov	r0, #67	; 0x43
   16b98:	bl	122d8 <sprintf@plt+0xcd8>
   16b9c:	mov	r0, #3
   16ba0:	bl	115e8 <exit@plt>
   16ba4:	andeq	fp, r2, r0, ror #27
   16ba8:	andeq	r9, r1, r0, ror sl
   16bac:	push	{r4, r5, r6, r7, r8, r9, lr}
   16bb0:	mov	r1, #4
   16bb4:	sub	sp, sp, #268	; 0x10c
   16bb8:	mov	r4, r0
   16bbc:	mov	r0, #1
   16bc0:	bl	1133c <calloc@plt>
   16bc4:	subs	r6, r0, #0
   16bc8:	beq	16ccc <sprintf@plt+0x56cc>
   16bcc:	ldr	r5, [pc, #428]	; 16d80 <sprintf@plt+0x5780>
   16bd0:	ldrb	r3, [r5]
   16bd4:	cmp	r3, #0
   16bd8:	bne	16c04 <sprintf@plt+0x5604>
   16bdc:	bl	113cc <free@plt>
   16be0:	ldr	r1, [pc, #412]	; 16d84 <sprintf@plt+0x5784>
   16be4:	ldr	r0, [r4]
   16be8:	bl	1227c <sprintf@plt+0xc7c>
   16bec:	ldr	r1, [r5, #20]
   16bf0:	mov	r0, r4
   16bf4:	bl	12b78 <sprintf@plt+0x1578>
   16bf8:	mov	r0, #1
   16bfc:	add	sp, sp, #268	; 0x10c
   16c00:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16c04:	ldr	r3, [r4, #460]	; 0x1cc
   16c08:	ldr	r1, [pc, #376]	; 16d88 <sprintf@plt+0x5788>
   16c0c:	add	r3, r3, #1
   16c10:	str	r3, [r4, #460]	; 0x1cc
   16c14:	ldr	r0, [r4]
   16c18:	ldrh	r9, [r4, #248]	; 0xf8
   16c1c:	bl	1227c <sprintf@plt+0xc7c>
   16c20:	ldr	r3, [r5, #20]
   16c24:	ldr	r2, [r4, #464]	; 0x1d0
   16c28:	ldr	r8, [r5, #4]
   16c2c:	lsl	r3, r3, #4
   16c30:	add	r2, r2, r3
   16c34:	str	r6, [r2, #8]
   16c38:	ldr	r7, [r4, #464]	; 0x1d0
   16c3c:	add	r7, r7, r3
   16c40:	bl	1142c <rb_current_time@plt>
   16c44:	ldr	r2, [r4, #4]
   16c48:	ldr	r3, [pc, #316]	; 16d8c <sprintf@plt+0x578c>
   16c4c:	mov	r1, #1
   16c50:	add	r0, r8, r0
   16c54:	str	r0, [r7, #4]
   16c58:	mov	r0, r9
   16c5c:	bl	112e8 <rb_socket@plt>
   16c60:	cmp	r0, #0
   16c64:	mov	r7, r0
   16c68:	str	r0, [r6]
   16c6c:	beq	16cd0 <sprintf@plt+0x56d0>
   16c70:	add	r1, r4, #64	; 0x40
   16c74:	add	r0, sp, #8
   16c78:	mov	r2, #128	; 0x80
   16c7c:	bl	11444 <memcpy@plt>
   16c80:	add	r1, r4, #248	; 0xf8
   16c84:	add	r0, sp, #136	; 0x88
   16c88:	mov	r2, #128	; 0x80
   16c8c:	bl	11444 <memcpy@plt>
   16c90:	mov	r3, #0
   16c94:	strh	r3, [sp, #10]
   16c98:	mov	r3, #28928	; 0x7100
   16c9c:	strh	r3, [sp, #138]	; 0x8a
   16ca0:	ldr	r3, [r5, #4]
   16ca4:	mov	r0, r7
   16ca8:	str	r3, [sp, #4]
   16cac:	str	r4, [sp]
   16cb0:	add	r2, sp, #8
   16cb4:	add	r1, sp, #136	; 0x88
   16cb8:	ldr	r3, [pc, #208]	; 16d90 <sprintf@plt+0x5790>
   16cbc:	bl	11288 <rb_connect_tcp@plt>
   16cc0:	mov	r0, #1
   16cc4:	add	sp, sp, #268	; 0x10c
   16cc8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16ccc:	bl	114d4 <rb_outofmemory@plt>
   16cd0:	bl	115f4 <__errno_location@plt>
   16cd4:	ldr	r0, [r0]
   16cd8:	bl	11234 <strerror@plt>
   16cdc:	ldr	r1, [pc, #176]	; 16d94 <sprintf@plt+0x5794>
   16ce0:	mov	r2, r0
   16ce4:	mov	r0, #68	; 0x44
   16ce8:	bl	122d8 <sprintf@plt+0xcd8>
   16cec:	ldr	r1, [r5, #20]
   16cf0:	ldr	r3, [r4, #464]	; 0x1d0
   16cf4:	mov	r2, #11
   16cf8:	add	r3, r3, r1, lsl #4
   16cfc:	add	r0, r4, #440	; 0x1b8
   16d00:	ldr	r6, [r3, #8]
   16d04:	ldr	r1, [pc, #140]	; 16d98 <sprintf@plt+0x5798>
   16d08:	bl	113a8 <rb_strlcpy@plt>
   16d0c:	ldr	r0, [r6]
   16d10:	cmp	r0, #0
   16d14:	beq	16d1c <sprintf@plt+0x571c>
   16d18:	bl	1145c <rb_close@plt>
   16d1c:	mov	r0, r6
   16d20:	bl	113cc <free@plt>
   16d24:	ldr	r3, [r5, #20]
   16d28:	ldr	r2, [r4, #464]	; 0x1d0
   16d2c:	mov	ip, #0
   16d30:	lsl	r3, r3, #4
   16d34:	add	r2, r2, r3
   16d38:	ldr	r0, [r4]
   16d3c:	str	ip, [r2, #8]
   16d40:	ldr	r2, [r4, #464]	; 0x1d0
   16d44:	ldr	r1, [pc, #80]	; 16d9c <sprintf@plt+0x579c>
   16d48:	add	r3, r2, r3
   16d4c:	str	ip, [r3, #4]
   16d50:	bl	1227c <sprintf@plt+0xc7c>
   16d54:	ldr	r1, [r5, #20]
   16d58:	mov	r0, r4
   16d5c:	bl	12b78 <sprintf@plt+0x1578>
   16d60:	ldr	r3, [r4, #460]	; 0x1cc
   16d64:	sub	r3, r3, #1
   16d68:	cmp	r3, #0
   16d6c:	str	r3, [r4, #460]	; 0x1cc
   16d70:	bne	16bf8 <sprintf@plt+0x55f8>
   16d74:	mov	r0, r4
   16d78:	bl	12ab4 <sprintf@plt+0x14b4>
   16d7c:	b	16bf8 <sprintf@plt+0x55f8>
   16d80:	andeq	fp, r2, r0, ror #27
   16d84:	muleq	r1, r8, sl
   16d88:	andeq	r9, r1, r0, asr #21
   16d8c:	andeq	r9, r1, ip, lsr sl
   16d90:	andeq	r7, r1, ip, lsl #4
   16d94:	ldrdeq	r9, [r1], -r4
   16d98:	andeq	r9, r1, r8, lsr #8
   16d9c:	strdeq	r9, [r1], -r8
   16da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16da4:	sub	sp, sp, #12
   16da8:	ldr	r6, [pc, #220]	; 16e8c <sprintf@plt+0x588c>
   16dac:	mov	r1, sp
   16db0:	ldr	r5, [pc, #216]	; 16e90 <sprintf@plt+0x5890>
   16db4:	ldr	r0, [r6]
   16db8:	bl	11408 <rb_dictionary_foreach_start@plt>
   16dbc:	mov	r9, #11
   16dc0:	ldr	r8, [pc, #204]	; 16e94 <sprintf@plt+0x5894>
   16dc4:	mov	r7, #0
   16dc8:	ldr	sl, [pc, #200]	; 16e98 <sprintf@plt+0x5898>
   16dcc:	b	16e64 <sprintf@plt+0x5864>
   16dd0:	ldr	ip, [r5, #20]
   16dd4:	ldr	r3, [r4, #464]	; 0x1d0
   16dd8:	add	r3, r3, ip, lsl #4
   16ddc:	ldr	fp, [r3, #8]
   16de0:	cmp	fp, #0
   16de4:	beq	16e58 <sprintf@plt+0x5858>
   16de8:	bl	113a8 <rb_strlcpy@plt>
   16dec:	ldr	r3, [fp]
   16df0:	subs	r0, r3, #0
   16df4:	beq	16dfc <sprintf@plt+0x57fc>
   16df8:	bl	1145c <rb_close@plt>
   16dfc:	mov	r0, fp
   16e00:	bl	113cc <free@plt>
   16e04:	ldr	r3, [r5, #20]
   16e08:	ldr	r2, [r4, #464]	; 0x1d0
   16e0c:	ldr	r0, [r4]
   16e10:	lsl	r3, r3, #4
   16e14:	add	r2, r2, r3
   16e18:	mov	r1, sl
   16e1c:	str	r7, [r2, #8]
   16e20:	ldr	r2, [r4, #464]	; 0x1d0
   16e24:	add	r3, r2, r3
   16e28:	str	r7, [r3, #4]
   16e2c:	bl	1227c <sprintf@plt+0xc7c>
   16e30:	ldr	r1, [r5, #20]
   16e34:	mov	r0, r4
   16e38:	bl	12b78 <sprintf@plt+0x1578>
   16e3c:	ldr	r3, [r4, #460]	; 0x1cc
   16e40:	sub	r3, r3, #1
   16e44:	cmp	r3, #0
   16e48:	str	r3, [r4, #460]	; 0x1cc
   16e4c:	bne	16e58 <sprintf@plt+0x5858>
   16e50:	mov	r0, r4
   16e54:	bl	12ab4 <sprintf@plt+0x14b4>
   16e58:	mov	r1, sp
   16e5c:	ldr	r0, [r6]
   16e60:	bl	113c0 <rb_dictionary_foreach_next@plt>
   16e64:	mov	r1, sp
   16e68:	ldr	r0, [r6]
   16e6c:	bl	11324 <rb_dictionary_foreach_cur@plt>
   16e70:	mov	r2, r9
   16e74:	mov	r1, r8
   16e78:	subs	r4, r0, #0
   16e7c:	add	r0, r4, #440	; 0x1b8
   16e80:	bne	16dd0 <sprintf@plt+0x57d0>
   16e84:	add	sp, sp, #12
   16e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e8c:	andeq	r0, r3, r0, ror r1
   16e90:	andeq	fp, r2, r0, ror #27
   16e94:	andeq	r9, r1, r8, lsr #8
   16e98:	strdeq	r9, [r1], -r8
   16e9c:	push	{r4, r5, r6, lr}
   16ea0:	ldr	r5, [pc, #156]	; 16f44 <sprintf@plt+0x5944>
   16ea4:	ldr	r3, [r0, #464]	; 0x1d0
   16ea8:	ldr	r2, [r5, #20]
   16eac:	add	r3, r3, r2, lsl #4
   16eb0:	ldr	r6, [r3, #8]
   16eb4:	cmp	r6, #0
   16eb8:	popeq	{r4, r5, r6, pc}
   16ebc:	mov	r4, r0
   16ec0:	mov	r2, #11
   16ec4:	ldr	r1, [pc, #124]	; 16f48 <sprintf@plt+0x5948>
   16ec8:	add	r0, r0, #440	; 0x1b8
   16ecc:	bl	113a8 <rb_strlcpy@plt>
   16ed0:	ldr	r0, [r6]
   16ed4:	cmp	r0, #0
   16ed8:	beq	16ee0 <sprintf@plt+0x58e0>
   16edc:	bl	1145c <rb_close@plt>
   16ee0:	mov	r0, r6
   16ee4:	bl	113cc <free@plt>
   16ee8:	ldr	r3, [r5, #20]
   16eec:	ldr	r2, [r4, #464]	; 0x1d0
   16ef0:	mov	ip, #0
   16ef4:	lsl	r3, r3, #4
   16ef8:	add	r2, r2, r3
   16efc:	ldr	r0, [r4]
   16f00:	str	ip, [r2, #8]
   16f04:	ldr	r2, [r4, #464]	; 0x1d0
   16f08:	ldr	r1, [pc, #60]	; 16f4c <sprintf@plt+0x594c>
   16f0c:	add	r3, r2, r3
   16f10:	str	ip, [r3, #4]
   16f14:	bl	1227c <sprintf@plt+0xc7c>
   16f18:	ldr	r1, [r5, #20]
   16f1c:	mov	r0, r4
   16f20:	bl	12b78 <sprintf@plt+0x1578>
   16f24:	ldr	r3, [r4, #460]	; 0x1cc
   16f28:	sub	r3, r3, #1
   16f2c:	cmp	r3, #0
   16f30:	str	r3, [r4, #460]	; 0x1cc
   16f34:	popne	{r4, r5, r6, pc}
   16f38:	mov	r0, r4
   16f3c:	pop	{r4, r5, r6, lr}
   16f40:	b	12ab4 <sprintf@plt+0x14b4>
   16f44:	andeq	fp, r2, r0, ror #27
   16f48:	andeq	r9, r1, r8, lsr #8
   16f4c:	strdeq	r9, [r1], -r8
   16f50:	push	{r4, r5, r6, r7, r8, lr}
   16f54:	sub	sp, sp, #136	; 0x88
   16f58:	mov	r5, r0
   16f5c:	mov	r2, #129	; 0x81
   16f60:	mov	r4, r1
   16f64:	add	r0, sp, #4
   16f68:	mov	r1, #0
   16f6c:	bl	1136c <memset@plt>
   16f70:	add	r1, sp, #4
   16f74:	mov	r0, r5
   16f78:	mov	r2, #128	; 0x80
   16f7c:	bl	113e4 <rb_read@plt>
   16f80:	cmp	r0, #0
   16f84:	blt	17160 <sprintf@plt+0x5b60>
   16f88:	beq	17174 <sprintf@plt+0x5b74>
   16f8c:	mov	r1, #58	; 0x3a
   16f90:	add	r0, sp, #4
   16f94:	bl	11318 <strchr@plt>
   16f98:	subs	r5, r0, #0
   16f9c:	beq	171d0 <sprintf@plt+0x5bd0>
   16fa0:	mov	r6, #0
   16fa4:	strb	r6, [r5], #1
   16fa8:	mov	r1, #58	; 0x3a
   16fac:	mov	r0, r5
   16fb0:	bl	11318 <strchr@plt>
   16fb4:	subs	r8, r0, #0
   16fb8:	beq	171d0 <sprintf@plt+0x5bd0>
   16fbc:	strb	r6, [r8]
   16fc0:	mov	r1, #44	; 0x2c
   16fc4:	add	r0, sp, #4
   16fc8:	bl	11318 <strchr@plt>
   16fcc:	subs	r7, r0, #0
   16fd0:	beq	171d0 <sprintf@plt+0x5bd0>
   16fd4:	add	r0, sp, #4
   16fd8:	strb	r6, [r7], #1
   16fdc:	mov	r2, #10
   16fe0:	mov	r1, r6
   16fe4:	bl	11468 <strtol@plt>
   16fe8:	cmp	r0, r6
   16fec:	beq	171d0 <sprintf@plt+0x5bd0>
   16ff0:	mov	r0, r7
   16ff4:	mov	r2, #10
   16ff8:	mov	r1, r6
   16ffc:	bl	11468 <strtol@plt>
   17000:	cmp	r0, r6
   17004:	beq	171d0 <sprintf@plt+0x5bd0>
   17008:	mov	r0, r5
   1700c:	ldr	r1, [pc, #476]	; 171f0 <sprintf@plt+0x5bf0>
   17010:	bl	114a4 <strstr@plt>
   17014:	cmp	r0, r6
   17018:	beq	171d0 <sprintf@plt+0x5bd0>
   1701c:	add	r0, r8, #1
   17020:	mov	r1, #58	; 0x3a
   17024:	bl	11318 <strchr@plt>
   17028:	cmp	r0, #0
   1702c:	beq	171d0 <sprintf@plt+0x5bd0>
   17030:	mov	r2, r0
   17034:	strb	r6, [r2], #1
   17038:	cmp	r2, r6
   1703c:	beq	171d0 <sprintf@plt+0x5bd0>
   17040:	ldrb	r3, [r0, #1]
   17044:	add	ip, r4, #440	; 0x1b8
   17048:	and	r1, r3, #223	; 0xdf
   1704c:	cmp	r1, #94	; 0x5e
   17050:	bne	17064 <sprintf@plt+0x5a64>
   17054:	ldrb	r3, [r2, #1]!
   17058:	and	r1, r3, #223	; 0xdf
   1705c:	cmp	r1, #94	; 0x5e
   17060:	beq	17054 <sprintf@plt+0x5a54>
   17064:	tst	r3, #191	; 0xbf
   17068:	beq	170cc <sprintf@plt+0x5acc>
   1706c:	cmp	r3, #13
   17070:	cmpne	r3, #10
   17074:	beq	170cc <sprintf@plt+0x5acc>
   17078:	mov	r0, #10
   1707c:	b	1708c <sprintf@plt+0x5a8c>
   17080:	cmp	r3, #10
   17084:	cmpne	r3, #13
   17088:	beq	170cc <sprintf@plt+0x5acc>
   1708c:	cmp	r3, #32
   17090:	cmpne	r3, #58	; 0x3a
   17094:	movne	r1, #1
   17098:	moveq	r1, #0
   1709c:	cmp	r3, #91	; 0x5b
   170a0:	moveq	r1, #0
   170a4:	andne	r1, r1, #1
   170a8:	cmp	r1, #0
   170ac:	strbne	r3, [ip]
   170b0:	ldrb	r3, [r2, #1]!
   170b4:	subne	r0, r0, #1
   170b8:	addne	ip, ip, #1
   170bc:	and	r1, r3, #191	; 0xbf
   170c0:	cmp	r0, #0
   170c4:	cmpne	r1, #0
   170c8:	bne	17080 <sprintf@plt+0x5a80>
   170cc:	ldr	r5, [pc, #288]	; 171f4 <sprintf@plt+0x5bf4>
   170d0:	mov	r3, #0
   170d4:	strb	r3, [ip]
   170d8:	ldr	r2, [r5, #20]
   170dc:	ldr	r3, [r4, #464]	; 0x1d0
   170e0:	add	r3, r3, r2, lsl #4
   170e4:	ldr	r6, [r3, #8]
   170e8:	ldr	r0, [r6]
   170ec:	cmp	r0, #0
   170f0:	beq	170f8 <sprintf@plt+0x5af8>
   170f4:	bl	1145c <rb_close@plt>
   170f8:	mov	r0, r6
   170fc:	bl	113cc <free@plt>
   17100:	ldr	r3, [r5, #20]
   17104:	ldr	r2, [r4, #464]	; 0x1d0
   17108:	ldr	r1, [pc, #232]	; 171f8 <sprintf@plt+0x5bf8>
   1710c:	lsl	r3, r3, #4
   17110:	mov	ip, #0
   17114:	add	r2, r2, r3
   17118:	str	ip, [r2, #8]
   1711c:	ldr	r2, [r4, #464]	; 0x1d0
   17120:	ldr	r0, [r4]
   17124:	add	r3, r2, r3
   17128:	str	ip, [r3, #4]
   1712c:	bl	1227c <sprintf@plt+0xc7c>
   17130:	ldr	r1, [r5, #20]
   17134:	mov	r0, r4
   17138:	bl	12b78 <sprintf@plt+0x1578>
   1713c:	ldr	r3, [r4, #460]	; 0x1cc
   17140:	sub	r3, r3, #1
   17144:	cmp	r3, #0
   17148:	str	r3, [r4, #460]	; 0x1cc
   1714c:	bne	17158 <sprintf@plt+0x5b58>
   17150:	mov	r0, r4
   17154:	bl	12ab4 <sprintf@plt+0x14b4>
   17158:	add	sp, sp, #136	; 0x88
   1715c:	pop	{r4, r5, r6, r7, r8, pc}
   17160:	bl	115f4 <__errno_location@plt>
   17164:	ldr	r0, [r0]
   17168:	bl	11270 <rb_ignore_errno@plt>
   1716c:	cmp	r0, #0
   17170:	bne	171d8 <sprintf@plt+0x5bd8>
   17174:	ldr	r6, [pc, #128]	; 171fc <sprintf@plt+0x5bfc>
   17178:	ldr	r5, [pc, #116]	; 171f4 <sprintf@plt+0x5bf4>
   1717c:	ldr	r3, [r4, #464]	; 0x1d0
   17180:	mov	r2, #11
   17184:	ldr	ip, [r5, #20]
   17188:	ldr	r1, [pc, #112]	; 17200 <sprintf@plt+0x5c00>
   1718c:	add	r0, r4, #440	; 0x1b8
   17190:	add	r3, r3, ip, lsl #4
   17194:	ldr	r7, [r3, #8]
   17198:	bl	113a8 <rb_strlcpy@plt>
   1719c:	ldr	r0, [r7]
   171a0:	cmp	r0, #0
   171a4:	beq	171ac <sprintf@plt+0x5bac>
   171a8:	bl	1145c <rb_close@plt>
   171ac:	mov	r0, r7
   171b0:	bl	113cc <free@plt>
   171b4:	ldr	r3, [r5, #20]
   171b8:	ldr	r2, [r4, #464]	; 0x1d0
   171bc:	mov	ip, #0
   171c0:	lsl	r3, r3, #4
   171c4:	add	r2, r2, r3
   171c8:	mov	r1, r6
   171cc:	b	17118 <sprintf@plt+0x5b18>
   171d0:	ldr	r6, [pc, #44]	; 17204 <sprintf@plt+0x5c04>
   171d4:	b	17178 <sprintf@plt+0x5b78>
   171d8:	mov	r3, r4
   171dc:	mov	r0, r5
   171e0:	ldr	r2, [pc, #32]	; 17208 <sprintf@plt+0x5c08>
   171e4:	mov	r1, #1
   171e8:	bl	112b8 <rb_setselect@plt>
   171ec:	b	17158 <sprintf@plt+0x5b58>
   171f0:	andeq	r9, r1, r4, asr #22
   171f4:	andeq	fp, r2, r0, ror #27
   171f8:	andeq	r9, r1, ip, asr #22
   171fc:	strdeq	r9, [r1], -r8
   17200:	andeq	r9, r1, r8, lsr #8
   17204:	andeq	r9, r1, r0, lsl fp
   17208:	andeq	r6, r1, r0, asr pc
   1720c:	push	{r4, r5, r6, r7, lr}
   17210:	mov	r4, r2
   17214:	ldr	r5, [pc, #268]	; 17328 <sprintf@plt+0x5d28>
   17218:	ldr	r3, [r4, #464]	; 0x1d0
   1721c:	cmp	r1, #0
   17220:	ldr	r2, [r5, #20]
   17224:	sub	sp, sp, #44	; 0x2c
   17228:	add	r3, r3, r2, lsl #4
   1722c:	ldr	r6, [r3, #8]
   17230:	beq	172bc <sprintf@plt+0x5cbc>
   17234:	ldr	r1, [pc, #240]	; 1732c <sprintf@plt+0x5d2c>
   17238:	mov	r2, #11
   1723c:	add	r0, r4, #440	; 0x1b8
   17240:	bl	113a8 <rb_strlcpy@plt>
   17244:	ldr	r0, [r6]
   17248:	cmp	r0, #0
   1724c:	beq	17254 <sprintf@plt+0x5c54>
   17250:	bl	1145c <rb_close@plt>
   17254:	mov	r0, r6
   17258:	bl	113cc <free@plt>
   1725c:	ldr	r3, [r5, #20]
   17260:	ldr	r2, [r4, #464]	; 0x1d0
   17264:	mov	ip, #0
   17268:	lsl	r3, r3, #4
   1726c:	add	r2, r2, r3
   17270:	ldr	r0, [r4]
   17274:	str	ip, [r2, #8]
   17278:	ldr	r2, [r4, #464]	; 0x1d0
   1727c:	ldr	r1, [pc, #172]	; 17330 <sprintf@plt+0x5d30>
   17280:	add	r3, r2, r3
   17284:	str	ip, [r3, #4]
   17288:	bl	1227c <sprintf@plt+0xc7c>
   1728c:	ldr	r1, [r5, #20]
   17290:	mov	r0, r4
   17294:	bl	12b78 <sprintf@plt+0x1578>
   17298:	ldr	r3, [r4, #460]	; 0x1cc
   1729c:	sub	r3, r3, #1
   172a0:	cmp	r3, #0
   172a4:	str	r3, [r4, #460]	; 0x1cc
   172a8:	bne	172b4 <sprintf@plt+0x5cb4>
   172ac:	mov	r0, r4
   172b0:	bl	12ab4 <sprintf@plt+0x14b4>
   172b4:	add	sp, sp, #44	; 0x2c
   172b8:	pop	{r4, r5, r6, r7, pc}
   172bc:	ldrh	r2, [r4, #62]	; 0x3e
   172c0:	ldrh	r3, [r4, #246]	; 0xf6
   172c4:	mov	r1, #32
   172c8:	str	r2, [sp]
   172cc:	add	r0, sp, #8
   172d0:	ldr	r2, [pc, #92]	; 17334 <sprintf@plt+0x5d34>
   172d4:	bl	11594 <snprintf@plt>
   172d8:	add	r0, sp, #8
   172dc:	bl	11420 <strlen@plt>
   172e0:	add	r1, sp, #8
   172e4:	mov	r7, r0
   172e8:	mov	r2, r0
   172ec:	ldr	r0, [r6]
   172f0:	bl	11390 <rb_write@plt>
   172f4:	cmp	r7, r0
   172f8:	beq	17318 <sprintf@plt+0x5d18>
   172fc:	ldr	r1, [r5, #20]
   17300:	ldr	r3, [r4, #464]	; 0x1d0
   17304:	mov	r2, #11
   17308:	add	r3, r3, r1, lsl #4
   1730c:	ldr	r1, [pc, #24]	; 1732c <sprintf@plt+0x5d2c>
   17310:	ldr	r6, [r3, #8]
   17314:	b	1723c <sprintf@plt+0x5c3c>
   17318:	mov	r1, r4
   1731c:	ldr	r0, [r6]
   17320:	bl	16f50 <sprintf@plt+0x5950>
   17324:	b	172b4 <sprintf@plt+0x5cb4>
   17328:	andeq	fp, r2, r0, ror #27
   1732c:	andeq	r9, r1, r8, lsr #8
   17330:	strdeq	r9, [r1], -r8
   17334:	andeq	r9, r1, r4, ror #22
   17338:	ldr	r0, [r2]
   1733c:	push	{r4, lr}
   17340:	mov	r1, #0
   17344:	mov	r2, #10
   17348:	bl	11468 <strtol@plt>
   1734c:	cmp	r0, #0
   17350:	blt	17360 <sprintf@plt+0x5d60>
   17354:	ldr	r3, [pc, #28]	; 17378 <sprintf@plt+0x5d78>
   17358:	str	r0, [r3]
   1735c:	pop	{r4, pc}
   17360:	mov	r2, r0
   17364:	ldr	r1, [pc, #16]	; 1737c <sprintf@plt+0x5d7c>
   17368:	mov	r0, #67	; 0x43
   1736c:	bl	122d8 <sprintf@plt+0xcd8>
   17370:	mov	r0, #3
   17374:	bl	115e8 <exit@plt>
   17378:	andeq	fp, r2, r8, asr #28
   1737c:	muleq	r1, r0, fp
   17380:	push	{r4, r5, r6, r7, r8, lr}
   17384:	mov	r1, #4
   17388:	mov	r4, r0
   1738c:	mov	r0, #1
   17390:	bl	1133c <calloc@plt>
   17394:	subs	r7, r0, #0
   17398:	beq	17400 <sprintf@plt+0x5e00>
   1739c:	ldr	r0, [pc, #96]	; 17404 <sprintf@plt+0x5e04>
   173a0:	ldr	r2, [r4, #464]	; 0x1d0
   173a4:	ldr	r1, [r4, #460]	; 0x1cc
   173a8:	ldr	r3, [r0, #16]
   173ac:	add	r1, r1, #1
   173b0:	str	r1, [r4, #460]	; 0x1cc
   173b4:	lsl	r3, r3, #4
   173b8:	add	r2, r2, r3
   173bc:	ldr	r6, [r0]
   173c0:	str	r7, [r2, #8]
   173c4:	ldr	r5, [r4, #464]	; 0x1d0
   173c8:	add	r5, r5, r3
   173cc:	bl	1142c <rb_current_time@plt>
   173d0:	mov	r2, r4
   173d4:	ldr	r1, [pc, #44]	; 17408 <sprintf@plt+0x5e08>
   173d8:	add	r0, r6, r0
   173dc:	str	r0, [r5, #4]
   173e0:	add	r0, r4, #192	; 0xc0
   173e4:	bl	11e74 <sprintf@plt+0x874>
   173e8:	ldr	r1, [pc, #28]	; 1740c <sprintf@plt+0x5e0c>
   173ec:	str	r0, [r7]
   173f0:	ldr	r0, [r4]
   173f4:	bl	1227c <sprintf@plt+0xc7c>
   173f8:	mov	r0, #1
   173fc:	pop	{r4, r5, r6, r7, r8, pc}
   17400:	bl	114d4 <rb_outofmemory@plt>
   17404:	andeq	fp, r2, r8, asr #28
   17408:	andeq	r7, r1, ip, lsr #11
   1740c:			; <UNDEFINED> instruction: 0x00019bb4
   17410:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17414:	sub	sp, sp, #12
   17418:	ldr	r5, [pc, #212]	; 174f4 <sprintf@plt+0x5ef4>
   1741c:	mov	r1, sp
   17420:	ldr	r6, [pc, #208]	; 174f8 <sprintf@plt+0x5ef8>
   17424:	ldr	r0, [r5]
   17428:	bl	11408 <rb_dictionary_foreach_start@plt>
   1742c:	mov	r9, #64	; 0x40
   17430:	ldr	r8, [pc, #196]	; 174fc <sprintf@plt+0x5efc>
   17434:	ldr	sl, [pc, #196]	; 17500 <sprintf@plt+0x5f00>
   17438:	mov	r7, #0
   1743c:	b	174cc <sprintf@plt+0x5ecc>
   17440:	ldr	ip, [r6, #16]
   17444:	ldr	r3, [r4, #464]	; 0x1d0
   17448:	add	r3, r3, ip, lsl #4
   1744c:	ldr	fp, [r3, #8]
   17450:	cmp	fp, #0
   17454:	beq	174c0 <sprintf@plt+0x5ec0>
   17458:	bl	113a8 <rb_strlcpy@plt>
   1745c:	mov	r1, sl
   17460:	ldr	r0, [r4]
   17464:	bl	1227c <sprintf@plt+0xc7c>
   17468:	ldr	r0, [fp]
   1746c:	bl	11f30 <sprintf@plt+0x930>
   17470:	mov	r0, fp
   17474:	bl	113cc <free@plt>
   17478:	ldr	r3, [r6, #16]
   1747c:	ldr	r2, [r4, #464]	; 0x1d0
   17480:	mov	r1, r3
   17484:	lsl	r3, r3, #4
   17488:	add	r2, r2, r3
   1748c:	mov	r0, r4
   17490:	str	r7, [r2, #8]
   17494:	ldr	r2, [r4, #464]	; 0x1d0
   17498:	add	r3, r2, r3
   1749c:	str	r7, [r3, #4]
   174a0:	bl	12b78 <sprintf@plt+0x1578>
   174a4:	ldr	r3, [r4, #460]	; 0x1cc
   174a8:	sub	r3, r3, #1
   174ac:	cmp	r3, #0
   174b0:	str	r3, [r4, #460]	; 0x1cc
   174b4:	bne	174c0 <sprintf@plt+0x5ec0>
   174b8:	mov	r0, r4
   174bc:	bl	12ab4 <sprintf@plt+0x14b4>
   174c0:	mov	r1, sp
   174c4:	ldr	r0, [r5]
   174c8:	bl	113c0 <rb_dictionary_foreach_next@plt>
   174cc:	mov	r1, sp
   174d0:	ldr	r0, [r5]
   174d4:	bl	11324 <rb_dictionary_foreach_cur@plt>
   174d8:	mov	r2, r9
   174dc:	mov	r1, r8
   174e0:	subs	r4, r0, #0
   174e4:	add	r0, r4, #376	; 0x178
   174e8:	bne	17440 <sprintf@plt+0x5e40>
   174ec:	add	sp, sp, #12
   174f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   174f4:	andeq	r0, r3, r0, ror r1
   174f8:	andeq	fp, r2, r8, asr #28
   174fc:	andeq	r9, r1, r8, lsr #8
   17500:	ldrdeq	r9, [r1], -r4
   17504:	push	{r4, r5, r6, lr}
   17508:	ldr	r6, [pc, #144]	; 175a0 <sprintf@plt+0x5fa0>
   1750c:	ldr	r3, [r0, #464]	; 0x1d0
   17510:	ldr	r2, [r6, #16]
   17514:	add	r3, r3, r2, lsl #4
   17518:	ldr	r5, [r3, #8]
   1751c:	cmp	r5, #0
   17520:	popeq	{r4, r5, r6, pc}
   17524:	mov	r4, r0
   17528:	mov	r2, #64	; 0x40
   1752c:	ldr	r1, [pc, #112]	; 175a4 <sprintf@plt+0x5fa4>
   17530:	add	r0, r0, #376	; 0x178
   17534:	bl	113a8 <rb_strlcpy@plt>
   17538:	ldr	r1, [pc, #104]	; 175a8 <sprintf@plt+0x5fa8>
   1753c:	ldr	r0, [r4]
   17540:	bl	1227c <sprintf@plt+0xc7c>
   17544:	ldr	r0, [r5]
   17548:	bl	11f30 <sprintf@plt+0x930>
   1754c:	mov	r0, r5
   17550:	bl	113cc <free@plt>
   17554:	ldr	r1, [r6, #16]
   17558:	ldr	r2, [r4, #464]	; 0x1d0
   1755c:	mov	ip, #0
   17560:	lsl	lr, r1, #4
   17564:	add	r2, r2, lr
   17568:	mov	r0, r4
   1756c:	str	ip, [r2, #8]
   17570:	ldr	r3, [r4, #464]	; 0x1d0
   17574:	add	r3, r3, lr
   17578:	str	ip, [r3, #4]
   1757c:	bl	12b78 <sprintf@plt+0x1578>
   17580:	ldr	r3, [r4, #460]	; 0x1cc
   17584:	sub	r3, r3, #1
   17588:	cmp	r3, #0
   1758c:	str	r3, [r4, #460]	; 0x1cc
   17590:	popne	{r4, r5, r6, pc}
   17594:	mov	r0, r4
   17598:	pop	{r4, r5, r6, lr}
   1759c:	b	12ab4 <sprintf@plt+0x14b4>
   175a0:	andeq	fp, r2, r8, asr #28
   175a4:	andeq	r9, r1, r8, lsr #8
   175a8:	ldrdeq	r9, [r1], -r4
   175ac:	eor	r1, r1, #1
   175b0:	push	{r4, r5, r6, r7, r8, lr}
   175b4:	cmp	r0, #0
   175b8:	movne	r5, r1
   175bc:	orreq	r5, r1, #1
   175c0:	cmp	r5, #0
   175c4:	mov	r4, r3
   175c8:	bne	176f4 <sprintf@plt+0x60f4>
   175cc:	mov	r7, r0
   175d0:	bl	11420 <strlen@plt>
   175d4:	cmp	r0, #63	; 0x3f
   175d8:	bhi	17668 <sprintf@plt+0x6068>
   175dc:	ldr	r8, [pc, #380]	; 17760 <sprintf@plt+0x6160>
   175e0:	add	r6, r4, #376	; 0x178
   175e4:	mov	r1, r7
   175e8:	mov	r0, r6
   175ec:	mov	r2, #64	; 0x40
   175f0:	bl	113a8 <rb_strlcpy@plt>
   175f4:	ldr	r1, [r8, #16]
   175f8:	ldr	r3, [r4, #464]	; 0x1d0
   175fc:	mov	r2, r6
   17600:	add	r3, r3, r1, lsl #4
   17604:	ldr	r0, [r4]
   17608:	ldr	r6, [r3, #8]
   1760c:	ldr	r1, [pc, #336]	; 17764 <sprintf@plt+0x6164>
   17610:	bl	1227c <sprintf@plt+0xc7c>
   17614:	ldr	r0, [r6]
   17618:	bl	11f30 <sprintf@plt+0x930>
   1761c:	mov	r0, r6
   17620:	bl	113cc <free@plt>
   17624:	ldr	r3, [r8, #16]
   17628:	ldr	r2, [r4, #464]	; 0x1d0
   1762c:	mov	r1, r3
   17630:	lsl	r3, r3, #4
   17634:	add	r2, r2, r3
   17638:	mov	r0, r4
   1763c:	str	r5, [r2, #8]
   17640:	ldr	r2, [r4, #464]	; 0x1d0
   17644:	add	r3, r2, r3
   17648:	str	r5, [r3, #4]
   1764c:	bl	12b78 <sprintf@plt+0x1578>
   17650:	ldr	r3, [r4, #460]	; 0x1cc
   17654:	sub	r3, r3, #1
   17658:	cmp	r3, #0
   1765c:	str	r3, [r4, #460]	; 0x1cc
   17660:	beq	176e8 <sprintf@plt+0x60e8>
   17664:	pop	{r4, r5, r6, r7, r8, pc}
   17668:	ldr	r6, [pc, #240]	; 17760 <sprintf@plt+0x6160>
   1766c:	ldr	r3, [r4, #464]	; 0x1d0
   17670:	mov	r2, #64	; 0x40
   17674:	ldr	ip, [r6, #16]
   17678:	ldr	r1, [pc, #232]	; 17768 <sprintf@plt+0x6168>
   1767c:	add	r0, r4, #376	; 0x178
   17680:	add	r3, r3, ip, lsl #4
   17684:	ldr	r7, [r3, #8]
   17688:	bl	113a8 <rb_strlcpy@plt>
   1768c:	ldr	r1, [pc, #216]	; 1776c <sprintf@plt+0x616c>
   17690:	ldr	r0, [r4]
   17694:	bl	1227c <sprintf@plt+0xc7c>
   17698:	ldr	r0, [r7]
   1769c:	bl	11f30 <sprintf@plt+0x930>
   176a0:	mov	r0, r7
   176a4:	bl	113cc <free@plt>
   176a8:	ldr	r3, [r6, #16]
   176ac:	ldr	r2, [r4, #464]	; 0x1d0
   176b0:	mov	r1, r3
   176b4:	lsl	r3, r3, #4
   176b8:	add	r2, r2, r3
   176bc:	mov	r0, r4
   176c0:	str	r5, [r2, #8]
   176c4:	ldr	r2, [r4, #464]	; 0x1d0
   176c8:	add	r3, r2, r3
   176cc:	str	r5, [r3, #4]
   176d0:	bl	12b78 <sprintf@plt+0x1578>
   176d4:	ldr	r3, [r4, #460]	; 0x1cc
   176d8:	sub	r3, r3, #1
   176dc:	cmp	r3, #0
   176e0:	str	r3, [r4, #460]	; 0x1cc
   176e4:	popne	{r4, r5, r6, r7, r8, pc}
   176e8:	mov	r0, r4
   176ec:	pop	{r4, r5, r6, r7, r8, lr}
   176f0:	b	12ab4 <sprintf@plt+0x14b4>
   176f4:	ldr	r5, [pc, #100]	; 17760 <sprintf@plt+0x6160>
   176f8:	ldr	r3, [r3, #464]	; 0x1d0
   176fc:	mov	r2, #64	; 0x40
   17700:	ldr	ip, [r5, #16]
   17704:	ldr	r1, [pc, #92]	; 17768 <sprintf@plt+0x6168>
   17708:	add	r0, r4, #376	; 0x178
   1770c:	add	r3, r3, ip, lsl #4
   17710:	ldr	r6, [r3, #8]
   17714:	bl	113a8 <rb_strlcpy@plt>
   17718:	ldr	r1, [pc, #80]	; 17770 <sprintf@plt+0x6170>
   1771c:	ldr	r0, [r4]
   17720:	bl	1227c <sprintf@plt+0xc7c>
   17724:	ldr	r0, [r6]
   17728:	bl	11f30 <sprintf@plt+0x930>
   1772c:	mov	r0, r6
   17730:	bl	113cc <free@plt>
   17734:	ldr	r1, [r5, #16]
   17738:	ldr	r2, [r4, #464]	; 0x1d0
   1773c:	mov	ip, #0
   17740:	lsl	lr, r1, #4
   17744:	add	r2, r2, lr
   17748:	mov	r0, r4
   1774c:	str	ip, [r2, #8]
   17750:	ldr	r3, [r4, #464]	; 0x1d0
   17754:	add	r3, r3, lr
   17758:	str	ip, [r3, #4]
   1775c:	b	176d0 <sprintf@plt+0x60d0>
   17760:	andeq	fp, r2, r8, asr #28
   17764:	andeq	r9, r1, ip, lsr #24
   17768:	andeq	r9, r1, r8, lsr #8
   1776c:	strdeq	r9, [r1], -r8
   17770:	ldrdeq	r9, [r1], -r4
   17774:	push	{r4, r5, r6, r7, r8, lr}
   17778:	ldr	r8, [pc, #176]	; 17830 <sprintf@plt+0x6230>
   1777c:	ldr	r3, [r0, #464]	; 0x1d0
   17780:	ldr	r2, [r8, #12]
   17784:	add	r3, r3, r2, lsl #4
   17788:	ldr	r7, [r3, #8]
   1778c:	cmp	r7, #0
   17790:	popeq	{r4, r5, r6, r7, r8, pc}
   17794:	mov	r6, r0
   17798:	ldr	r1, [pc, #148]	; 17834 <sprintf@plt+0x6234>
   1779c:	ldr	r0, [r0]
   177a0:	bl	1227c <sprintf@plt+0xc7c>
   177a4:	ldr	r3, [r7]
   177a8:	cmp	r3, #0
   177ac:	beq	177dc <sprintf@plt+0x61dc>
   177b0:	ldr	r4, [r3, #8]
   177b4:	b	177c0 <sprintf@plt+0x61c0>
   177b8:	mov	r3, r4
   177bc:	ldr	r4, [r4, #8]
   177c0:	ldr	r5, [r3]
   177c4:	ldr	r0, [r5, #4]
   177c8:	bl	1145c <rb_close@plt>
   177cc:	mov	r0, r5
   177d0:	bl	113cc <free@plt>
   177d4:	cmp	r4, #0
   177d8:	bne	177b8 <sprintf@plt+0x61b8>
   177dc:	mov	r0, r7
   177e0:	bl	113cc <free@plt>
   177e4:	ldr	r1, [r8, #12]
   177e8:	ldr	r2, [r6, #464]	; 0x1d0
   177ec:	mov	ip, #0
   177f0:	lsl	lr, r1, #4
   177f4:	add	r2, r2, lr
   177f8:	mov	r0, r6
   177fc:	str	ip, [r2, #8]
   17800:	ldr	r3, [r6, #464]	; 0x1d0
   17804:	add	r3, r3, lr
   17808:	str	ip, [r3, #4]
   1780c:	bl	12b78 <sprintf@plt+0x1578>
   17810:	ldr	r3, [r6, #460]	; 0x1cc
   17814:	sub	r3, r3, #1
   17818:	cmp	r3, #0
   1781c:	str	r3, [r6, #460]	; 0x1cc
   17820:	popne	{r4, r5, r6, r7, r8, pc}
   17824:	mov	r0, r6
   17828:	pop	{r4, r5, r6, r7, r8, lr}
   1782c:	b	12ab4 <sprintf@plt+0x14b4>
   17830:	andeq	fp, r2, r0, lsr #29
   17834:	andeq	r9, r1, ip, ror ip
   17838:	push	{r4, lr}
   1783c:	sub	sp, sp, #8
   17840:	ldr	r4, [pc, #56]	; 17880 <sprintf@plt+0x6280>
   17844:	mov	r1, sp
   17848:	ldr	r0, [r4]
   1784c:	bl	11408 <rb_dictionary_foreach_start@plt>
   17850:	b	17864 <sprintf@plt+0x6264>
   17854:	bl	17774 <sprintf@plt+0x6174>
   17858:	mov	r1, sp
   1785c:	ldr	r0, [r4]
   17860:	bl	113c0 <rb_dictionary_foreach_next@plt>
   17864:	mov	r1, sp
   17868:	ldr	r0, [r4]
   1786c:	bl	11324 <rb_dictionary_foreach_cur@plt>
   17870:	cmp	r0, #0
   17874:	bne	17854 <sprintf@plt+0x6254>
   17878:	add	sp, sp, #8
   1787c:	pop	{r4, pc}
   17880:	andeq	r0, r3, r0, ror r1
   17884:	ldr	r0, [r2]
   17888:	push	{r4, lr}
   1788c:	mov	r2, #10
   17890:	mov	r1, #0
   17894:	bl	11468 <strtol@plt>
   17898:	subs	r2, r0, #0
   1789c:	blt	178ac <sprintf@plt+0x62ac>
   178a0:	ldr	r3, [pc, #20]	; 178bc <sprintf@plt+0x62bc>
   178a4:	str	r2, [r3, #60]	; 0x3c
   178a8:	pop	{r4, pc}
   178ac:	ldr	r1, [pc, #12]	; 178c0 <sprintf@plt+0x62c0>
   178b0:	mov	r0, #67	; 0x43
   178b4:	pop	{r4, lr}
   178b8:	b	122d8 <sprintf@plt+0xcd8>
   178bc:	andeq	fp, r2, r0, lsr #29
   178c0:	muleq	r1, ip, ip
   178c4:	push	{r4, lr}
   178c8:	ldr	r4, [pc, #48]	; 17900 <sprintf@plt+0x6300>
   178cc:	ldr	r0, [r4, #184]	; 0xb8
   178d0:	cmp	r0, #0
   178d4:	beq	178dc <sprintf@plt+0x62dc>
   178d8:	bl	1145c <rb_close@plt>
   178dc:	ldr	r0, [r4, #372]	; 0x174
   178e0:	cmp	r0, #0
   178e4:	beq	178ec <sprintf@plt+0x62ec>
   178e8:	bl	1145c <rb_close@plt>
   178ec:	mov	r2, #376	; 0x178
   178f0:	mov	r1, #0
   178f4:	ldr	r0, [pc, #4]	; 17900 <sprintf@plt+0x6300>
   178f8:	pop	{r4, lr}
   178fc:	b	1136c <memset@plt>
   17900:	andeq	pc, r2, r4, ror #31
   17904:	push	{r4, r5, lr}
   17908:	sub	sp, sp, #148	; 0x94
   1790c:	mov	r5, r0
   17910:	ldr	r3, [sp, #160]	; 0xa0
   17914:	clz	r3, r3
   17918:	lsr	r3, r3, #5
   1791c:	cmp	r1, #0
   17920:	moveq	r1, r3
   17924:	orrne	r1, r3, #1
   17928:	cmp	r1, #0
   1792c:	mov	r3, #128	; 0x80
   17930:	str	r3, [sp, #4]
   17934:	bne	179fc <sprintf@plt+0x63fc>
   17938:	bl	112c4 <rb_get_fd@plt>
   1793c:	add	r2, sp, #4
   17940:	add	r1, sp, #16
   17944:	bl	11264 <getsockname@plt>
   17948:	cmp	r0, #0
   1794c:	bne	179fc <sprintf@plt+0x63fc>
   17950:	ldr	r4, [pc, #220]	; 17a34 <sprintf@plt+0x6434>
   17954:	add	r1, sp, #8
   17958:	ldr	r0, [r4]
   1795c:	bl	11408 <rb_dictionary_foreach_start@plt>
   17960:	b	17970 <sprintf@plt+0x6370>
   17964:	add	r1, sp, #8
   17968:	ldr	r0, [r4]
   1796c:	bl	113c0 <rb_dictionary_foreach_next@plt>
   17970:	add	r1, sp, #8
   17974:	ldr	r0, [r4]
   17978:	bl	11324 <rb_dictionary_foreach_cur@plt>
   1797c:	cmp	r0, #0
   17980:	beq	179fc <sprintf@plt+0x63fc>
   17984:	ldrh	r3, [r0, #248]	; 0xf8
   17988:	ldrh	r2, [sp, #16]
   1798c:	cmp	r2, r3
   17990:	bne	17964 <sprintf@plt+0x6364>
   17994:	cmp	r2, #2
   17998:	beq	17a20 <sprintf@plt+0x6420>
   1799c:	cmp	r2, #10
   179a0:	bne	17a0c <sprintf@plt+0x640c>
   179a4:	ldr	r2, [sp, #24]
   179a8:	ldr	r3, [r0, #256]	; 0x100
   179ac:	cmp	r2, r3
   179b0:	bne	17964 <sprintf@plt+0x6364>
   179b4:	ldr	r2, [sp, #28]
   179b8:	ldr	r3, [r0, #260]	; 0x104
   179bc:	cmp	r2, r3
   179c0:	bne	17964 <sprintf@plt+0x6364>
   179c4:	ldr	r2, [sp, #32]
   179c8:	ldr	r3, [r0, #264]	; 0x108
   179cc:	cmp	r2, r3
   179d0:	bne	17964 <sprintf@plt+0x6364>
   179d4:	ldr	r2, [sp, #36]	; 0x24
   179d8:	ldr	r3, [r0, #268]	; 0x10c
   179dc:	cmp	r2, r3
   179e0:	bne	17964 <sprintf@plt+0x6364>
   179e4:	mov	r3, r0
   179e8:	ldr	r2, [pc, #72]	; 17a38 <sprintf@plt+0x6438>
   179ec:	mov	r0, r5
   179f0:	mov	r1, #1
   179f4:	bl	112b8 <rb_setselect@plt>
   179f8:	b	17a04 <sprintf@plt+0x6404>
   179fc:	mov	r0, r5
   17a00:	bl	1145c <rb_close@plt>
   17a04:	add	sp, sp, #148	; 0x94
   17a08:	pop	{r4, r5, pc}
   17a0c:	mov	r0, #67	; 0x43
   17a10:	ldr	r1, [pc, #36]	; 17a3c <sprintf@plt+0x643c>
   17a14:	bl	122d8 <sprintf@plt+0xcd8>
   17a18:	mov	r0, #3
   17a1c:	bl	115e8 <exit@plt>
   17a20:	ldr	r2, [sp, #20]
   17a24:	ldr	r3, [r0, #252]	; 0xfc
   17a28:	cmp	r2, r3
   17a2c:	bne	17964 <sprintf@plt+0x6364>
   17a30:	b	179e4 <sprintf@plt+0x63e4>
   17a34:	andeq	r0, r3, r0, ror r1
   17a38:	andeq	r7, r1, r0, asr #20
   17a3c:	andeq	r9, r1, r0, asr #25
   17a40:	push	{r4, r5, r6, r7, r8, r9, lr}
   17a44:	sub	sp, sp, #132	; 0x84
   17a48:	ldr	r7, [pc, #256]	; 17b50 <sprintf@plt+0x6550>
   17a4c:	ldr	r3, [r1, #464]	; 0x1d0
   17a50:	mov	r6, r1
   17a54:	ldr	r2, [r7, #12]
   17a58:	mov	r1, sp
   17a5c:	mov	r9, r0
   17a60:	add	r3, r3, r2, lsl #4
   17a64:	mov	r2, #128	; 0x80
   17a68:	ldr	r8, [r3, #8]
   17a6c:	bl	113e4 <rb_read@plt>
   17a70:	cmp	r0, #0
   17a74:	blt	17b24 <sprintf@plt+0x6524>
   17a78:	beq	17b14 <sprintf@plt+0x6514>
   17a7c:	ldr	r3, [pc, #208]	; 17b54 <sprintf@plt+0x6554>
   17a80:	ldr	r4, [r3, #376]	; 0x178
   17a84:	cmp	r4, #0
   17a88:	bne	17a9c <sprintf@plt+0x649c>
   17a8c:	b	17b14 <sprintf@plt+0x6514>
   17a90:	ldr	r4, [r4, #8]
   17a94:	cmp	r4, #0
   17a98:	beq	17b14 <sprintf@plt+0x6514>
   17a9c:	ldr	r5, [r4]
   17aa0:	mov	r0, r5
   17aa4:	bl	11420 <strlen@plt>
   17aa8:	mov	r1, sp
   17aac:	mov	r2, r0
   17ab0:	mov	r0, r5
   17ab4:	bl	115ac <strncmp@plt>
   17ab8:	cmp	r0, #0
   17abc:	bne	17a90 <sprintf@plt+0x6490>
   17ac0:	ldr	r3, [r8]
   17ac4:	cmp	r3, #0
   17ac8:	beq	17af8 <sprintf@plt+0x64f8>
   17acc:	ldr	r4, [r3, #8]
   17ad0:	b	17adc <sprintf@plt+0x64dc>
   17ad4:	mov	r3, r4
   17ad8:	ldr	r4, [r4, #8]
   17adc:	ldr	r5, [r3]
   17ae0:	ldr	r0, [r5, #4]
   17ae4:	bl	1145c <rb_close@plt>
   17ae8:	mov	r0, r5
   17aec:	bl	113cc <free@plt>
   17af0:	cmp	r4, #0
   17af4:	bne	17ad4 <sprintf@plt+0x64d4>
   17af8:	mov	r0, r8
   17afc:	bl	113cc <free@plt>
   17b00:	mov	r2, sp
   17b04:	ldr	r1, [r7, #12]
   17b08:	mov	r0, r6
   17b0c:	ldr	r3, [pc, #68]	; 17b58 <sprintf@plt+0x6558>
   17b10:	bl	12cc0 <sprintf@plt+0x16c0>
   17b14:	mov	r0, r9
   17b18:	bl	1145c <rb_close@plt>
   17b1c:	add	sp, sp, #132	; 0x84
   17b20:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17b24:	bl	115f4 <__errno_location@plt>
   17b28:	ldr	r0, [r0]
   17b2c:	bl	11270 <rb_ignore_errno@plt>
   17b30:	cmp	r0, #0
   17b34:	beq	17b14 <sprintf@plt+0x6514>
   17b38:	mov	r3, r6
   17b3c:	mov	r0, r9
   17b40:	ldr	r2, [pc, #20]	; 17b5c <sprintf@plt+0x655c>
   17b44:	mov	r1, #1
   17b48:	bl	112b8 <rb_setselect@plt>
   17b4c:	b	17b1c <sprintf@plt+0x651c>
   17b50:	andeq	fp, r2, r0, lsr #29
   17b54:	andeq	pc, r2, r4, ror #31
   17b58:	strdeq	r9, [r1], -r0
   17b5c:	andeq	r7, r1, r0, asr #20
   17b60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17b64:	sub	sp, sp, #152	; 0x98
   17b68:	mov	r3, #1
   17b6c:	mov	r6, r1
   17b70:	add	r1, sp, #24
   17b74:	str	r3, [sp, #12]
   17b78:	mov	r7, r0
   17b7c:	bl	11414 <rb_inet_pton_sock@plt>
   17b80:	cmp	r0, #0
   17b84:	beq	17dd8 <sprintf@plt+0x67d8>
   17b88:	ldrh	r0, [sp, #24]
   17b8c:	cmp	r0, #2
   17b90:	beq	17d1c <sprintf@plt+0x671c>
   17b94:	rev16	r3, r6
   17b98:	cmp	r0, #10
   17b9c:	strh	r3, [sp, #26]
   17ba0:	ldr	r8, [pc, #660]	; 17e3c <sprintf@plt+0x683c>
   17ba4:	uxth	r3, r3
   17ba8:	beq	17cd4 <sprintf@plt+0x66d4>
   17bac:	ldr	r1, [sp, #28]
   17bb0:	ldr	r2, [r8, #60]	; 0x3c
   17bb4:	cmp	r1, r2
   17bb8:	beq	17d3c <sprintf@plt+0x673c>
   17bbc:	ldr	r9, [pc, #632]	; 17e3c <sprintf@plt+0x683c>
   17bc0:	ldr	r3, [pc, #632]	; 17e40 <sprintf@plt+0x6840>
   17bc4:	mov	r2, #0
   17bc8:	mov	r1, #1
   17bcc:	bl	112e8 <rb_socket@plt>
   17bd0:	subs	r5, r0, #0
   17bd4:	beq	17df4 <sprintf@plt+0x67f4>
   17bd8:	bl	112c4 <rb_get_fd@plt>
   17bdc:	mov	r3, #4
   17be0:	str	r3, [sp]
   17be4:	mov	r2, #2
   17be8:	add	r3, sp, #12
   17bec:	mov	r1, #1
   17bf0:	bl	115c4 <setsockopt@plt>
   17bf4:	subs	r4, r0, #0
   17bf8:	bne	17e18 <sprintf@plt+0x6818>
   17bfc:	mov	r0, r5
   17c00:	bl	112c4 <rb_get_fd@plt>
   17c04:	ldrh	r2, [sp, #24]
   17c08:	add	r1, sp, #24
   17c0c:	cmp	r2, #2
   17c10:	movne	r2, #28
   17c14:	moveq	r2, #16
   17c18:	bl	11498 <bind@plt>
   17c1c:	subs	sl, r0, #0
   17c20:	bne	17cec <sprintf@plt+0x66ec>
   17c24:	mov	r2, sl
   17c28:	mov	r1, #128	; 0x80
   17c2c:	mov	r0, r5
   17c30:	bl	115a0 <rb_listen@plt>
   17c34:	cmp	r0, #0
   17c38:	bne	17d5c <sprintf@plt+0x675c>
   17c3c:	ldr	r0, [r9, #184]	; 0xb8
   17c40:	cmp	r0, #0
   17c44:	beq	17c4c <sprintf@plt+0x664c>
   17c48:	bl	1145c <rb_close@plt>
   17c4c:	ldr	r4, [pc, #496]	; 17e44 <sprintf@plt+0x6844>
   17c50:	add	r1, sp, #16
   17c54:	str	r5, [r9, #184]	; 0xb8
   17c58:	ldr	r0, [r4]
   17c5c:	bl	11408 <rb_dictionary_foreach_start@plt>
   17c60:	b	17c74 <sprintf@plt+0x6674>
   17c64:	bl	17774 <sprintf@plt+0x6174>
   17c68:	add	r1, sp, #16
   17c6c:	ldr	r0, [r4]
   17c70:	bl	113c0 <rb_dictionary_foreach_next@plt>
   17c74:	add	r1, sp, #16
   17c78:	ldr	r0, [r4]
   17c7c:	bl	11324 <rb_dictionary_foreach_cur@plt>
   17c80:	subs	r5, r0, #0
   17c84:	bne	17c64 <sprintf@plt+0x6664>
   17c88:	mov	r1, r7
   17c8c:	mov	r2, #53	; 0x35
   17c90:	mov	r0, r9
   17c94:	bl	113a8 <rb_strlcpy@plt>
   17c98:	add	r1, sp, #24
   17c9c:	mov	r2, #128	; 0x80
   17ca0:	add	r0, r9, #56	; 0x38
   17ca4:	strh	r6, [r9, #54]	; 0x36
   17ca8:	bl	11444 <memcpy@plt>
   17cac:	mov	r4, #1
   17cb0:	ldr	r0, [r9, #184]	; 0xb8
   17cb4:	mov	r1, r5
   17cb8:	mov	r3, r9
   17cbc:	ldr	r2, [pc, #388]	; 17e48 <sprintf@plt+0x6848>
   17cc0:	strb	r4, [r8, #388]	; 0x184
   17cc4:	bl	11558 <rb_accept_tcp@plt>
   17cc8:	mov	r0, r4
   17ccc:	add	sp, sp, #152	; 0x98
   17cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17cd4:	ldr	r1, [sp, #32]
   17cd8:	ldr	r2, [r8, #252]	; 0xfc
   17cdc:	cmp	r1, r2
   17ce0:	beq	17d8c <sprintf@plt+0x678c>
   17ce4:	add	r9, r8, #188	; 0xbc
   17ce8:	b	17bc0 <sprintf@plt+0x65c0>
   17cec:	bl	115f4 <__errno_location@plt>
   17cf0:	ldr	r0, [r0]
   17cf4:	bl	11234 <strerror@plt>
   17cf8:	ldr	r1, [pc, #332]	; 17e4c <sprintf@plt+0x684c>
   17cfc:	mov	r2, r0
   17d00:	mov	r0, #87	; 0x57
   17d04:	bl	122d8 <sprintf@plt+0xcd8>
   17d08:	mov	r0, r5
   17d0c:	bl	1145c <rb_close@plt>
   17d10:	mov	r0, r4
   17d14:	add	sp, sp, #152	; 0x98
   17d18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d1c:	ldr	r8, [pc, #280]	; 17e3c <sprintf@plt+0x683c>
   17d20:	ldr	r2, [sp, #28]
   17d24:	rev16	r3, r6
   17d28:	ldr	r1, [r8, #60]	; 0x3c
   17d2c:	strh	r3, [sp, #26]
   17d30:	cmp	r1, r2
   17d34:	uxth	r3, r3
   17d38:	bne	17bbc <sprintf@plt+0x65bc>
   17d3c:	ldrh	r2, [r8, #58]	; 0x3a
   17d40:	cmp	r3, r2
   17d44:	bne	17bbc <sprintf@plt+0x65bc>
   17d48:	ldr	r3, [r8, #184]	; 0xb8
   17d4c:	cmp	r3, #0
   17d50:	beq	17bbc <sprintf@plt+0x65bc>
   17d54:	mov	r0, #0
   17d58:	b	17ccc <sprintf@plt+0x66cc>
   17d5c:	bl	115f4 <__errno_location@plt>
   17d60:	ldr	r0, [r0]
   17d64:	bl	11234 <strerror@plt>
   17d68:	ldr	r1, [pc, #224]	; 17e50 <sprintf@plt+0x6850>
   17d6c:	mov	r2, r0
   17d70:	mov	r0, #87	; 0x57
   17d74:	bl	122d8 <sprintf@plt+0xcd8>
   17d78:	mov	r0, r5
   17d7c:	bl	1145c <rb_close@plt>
   17d80:	mov	r0, sl
   17d84:	add	sp, sp, #152	; 0x98
   17d88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d8c:	ldr	r1, [sp, #36]	; 0x24
   17d90:	ldr	r2, [r8, #256]	; 0x100
   17d94:	cmp	r1, r2
   17d98:	bne	17ce4 <sprintf@plt+0x66e4>
   17d9c:	ldr	r1, [sp, #40]	; 0x28
   17da0:	ldr	r2, [r8, #260]	; 0x104
   17da4:	cmp	r1, r2
   17da8:	bne	17ce4 <sprintf@plt+0x66e4>
   17dac:	ldr	r1, [sp, #44]	; 0x2c
   17db0:	ldr	r2, [r8, #264]	; 0x108
   17db4:	cmp	r1, r2
   17db8:	bne	17ce4 <sprintf@plt+0x66e4>
   17dbc:	ldrh	r2, [r8, #246]	; 0xf6
   17dc0:	cmp	r2, r3
   17dc4:	bne	17ce4 <sprintf@plt+0x66e4>
   17dc8:	ldr	r3, [r8, #372]	; 0x174
   17dcc:	cmp	r3, #0
   17dd0:	bne	17d54 <sprintf@plt+0x6754>
   17dd4:	b	17ce4 <sprintf@plt+0x66e4>
   17dd8:	mov	r0, #67	; 0x43
   17ddc:	mov	r3, r6
   17de0:	mov	r2, r7
   17de4:	ldr	r1, [pc, #104]	; 17e54 <sprintf@plt+0x6854>
   17de8:	bl	122d8 <sprintf@plt+0xcd8>
   17dec:	mov	r0, #3
   17df0:	bl	115e8 <exit@plt>
   17df4:	bl	115f4 <__errno_location@plt>
   17df8:	ldr	r0, [r0]
   17dfc:	bl	11234 <strerror@plt>
   17e00:	ldr	r1, [pc, #80]	; 17e58 <sprintf@plt+0x6858>
   17e04:	mov	r2, r0
   17e08:	mov	r0, #67	; 0x43
   17e0c:	bl	122d8 <sprintf@plt+0xcd8>
   17e10:	mov	r0, #3
   17e14:	bl	115e8 <exit@plt>
   17e18:	bl	115f4 <__errno_location@plt>
   17e1c:	ldr	r0, [r0]
   17e20:	bl	11234 <strerror@plt>
   17e24:	ldr	r1, [pc, #48]	; 17e5c <sprintf@plt+0x685c>
   17e28:	mov	r2, r0
   17e2c:	mov	r0, #67	; 0x43
   17e30:	bl	122d8 <sprintf@plt+0xcd8>
   17e34:	mov	r0, #3
   17e38:	bl	115e8 <exit@plt>
   17e3c:	andeq	pc, r2, r4, ror #31
   17e40:	andeq	r9, r1, r4, lsr #26
   17e44:	andeq	r0, r3, r0, ror r1
   17e48:	andeq	r7, r1, r4, lsl #18
   17e4c:	andeq	r9, r1, r0, lsl #27
   17e50:	andeq	r9, r1, r0, lsr #27
   17e54:	andeq	r9, r1, r4, lsl #26
   17e58:	andeq	r9, r1, r8, lsr sp
   17e5c:	andeq	r9, r1, r8, asr sp
   17e60:	ldr	r3, [r2]
   17e64:	push	{r4, r5, r6, lr}
   17e68:	sub	sp, sp, #8
   17e6c:	ldrb	r3, [r3]
   17e70:	ldr	r5, [pc, #236]	; 17f64 <sprintf@plt+0x6964>
   17e74:	cmp	r3, #49	; 0x31
   17e78:	moveq	r6, #1
   17e7c:	movne	r6, #0
   17e80:	beq	17ef4 <sprintf@plt+0x68f4>
   17e84:	ldr	r0, [r5, #184]	; 0xb8
   17e88:	cmp	r0, #0
   17e8c:	beq	17f48 <sprintf@plt+0x6948>
   17e90:	bl	1145c <rb_close@plt>
   17e94:	ldr	r0, [r5, #372]	; 0x174
   17e98:	cmp	r0, #0
   17e9c:	beq	17ea4 <sprintf@plt+0x68a4>
   17ea0:	bl	1145c <rb_close@plt>
   17ea4:	ldr	r4, [pc, #188]	; 17f68 <sprintf@plt+0x6968>
   17ea8:	mov	r3, #0
   17eac:	mov	r1, sp
   17eb0:	ldr	r0, [r4]
   17eb4:	str	r3, [r5, #372]	; 0x174
   17eb8:	str	r3, [r5, #184]	; 0xb8
   17ebc:	bl	11408 <rb_dictionary_foreach_start@plt>
   17ec0:	b	17ed4 <sprintf@plt+0x68d4>
   17ec4:	bl	17774 <sprintf@plt+0x6174>
   17ec8:	mov	r1, sp
   17ecc:	ldr	r0, [r4]
   17ed0:	bl	113c0 <rb_dictionary_foreach_next@plt>
   17ed4:	mov	r1, sp
   17ed8:	ldr	r0, [r4]
   17edc:	bl	11324 <rb_dictionary_foreach_cur@plt>
   17ee0:	cmp	r0, #0
   17ee4:	bne	17ec4 <sprintf@plt+0x68c4>
   17ee8:	strb	r6, [r5, #388]	; 0x184
   17eec:	add	sp, sp, #8
   17ef0:	pop	{r4, r5, r6, pc}
   17ef4:	ldrb	r3, [r5]
   17ef8:	cmp	r3, #0
   17efc:	beq	17f18 <sprintf@plt+0x6918>
   17f00:	ldrh	r1, [r5, #54]	; 0x36
   17f04:	cmp	r1, #0
   17f08:	beq	17f18 <sprintf@plt+0x6918>
   17f0c:	ldr	r3, [r5, #184]	; 0xb8
   17f10:	cmp	r3, #0
   17f14:	beq	17f58 <sprintf@plt+0x6958>
   17f18:	ldrb	r3, [r5, #188]	; 0xbc
   17f1c:	cmp	r3, #0
   17f20:	beq	17ee8 <sprintf@plt+0x68e8>
   17f24:	ldrh	r1, [r5, #242]	; 0xf2
   17f28:	cmp	r1, #0
   17f2c:	beq	17ee8 <sprintf@plt+0x68e8>
   17f30:	ldr	r3, [r5, #372]	; 0x174
   17f34:	cmp	r3, #0
   17f38:	bne	17ee8 <sprintf@plt+0x68e8>
   17f3c:	ldr	r0, [pc, #40]	; 17f6c <sprintf@plt+0x696c>
   17f40:	bl	17b60 <sprintf@plt+0x6560>
   17f44:	b	17ee8 <sprintf@plt+0x68e8>
   17f48:	ldr	r0, [r5, #372]	; 0x174
   17f4c:	cmp	r0, #0
   17f50:	bne	17ea0 <sprintf@plt+0x68a0>
   17f54:	b	17ee8 <sprintf@plt+0x68e8>
   17f58:	mov	r0, r5
   17f5c:	bl	17b60 <sprintf@plt+0x6560>
   17f60:	b	17f18 <sprintf@plt+0x6918>
   17f64:	andeq	pc, r2, r4, ror #31
   17f68:	andeq	r0, r3, r0, ror r1
   17f6c:	andeq	r0, r3, r0, lsr #1
   17f70:	ldr	r2, [r0, #12]
   17f74:	push	{r4, r5, lr}
   17f78:	sub	sp, sp, #140	; 0x8c
   17f7c:	ldrh	ip, [r2, #54]	; 0x36
   17f80:	mov	r3, r2
   17f84:	mov	r1, #128	; 0x80
   17f88:	ldr	r2, [pc, #104]	; 17ff8 <sprintf@plt+0x69f8>
   17f8c:	str	ip, [sp]
   17f90:	mov	r4, r0
   17f94:	add	r0, sp, #8
   17f98:	bl	11594 <snprintf@plt>
   17f9c:	add	r0, sp, #8
   17fa0:	bl	11420 <strlen@plt>
   17fa4:	add	r1, sp, #8
   17fa8:	mov	r2, r0
   17fac:	ldr	r0, [r4, #4]
   17fb0:	bl	11390 <rb_write@plt>
   17fb4:	cmp	r0, #0
   17fb8:	ble	17ff0 <sprintf@plt+0x69f0>
   17fbc:	ldr	r5, [r4, #8]
   17fc0:	mov	r0, r5
   17fc4:	bl	11420 <strlen@plt>
   17fc8:	mov	r1, r5
   17fcc:	add	r2, r0, #1
   17fd0:	ldr	r0, [r4, #4]
   17fd4:	bl	11390 <rb_write@plt>
   17fd8:	cmp	r0, #0
   17fdc:	ble	17ff0 <sprintf@plt+0x69f0>
   17fe0:	ldr	r0, [r4, #4]
   17fe4:	mov	r2, #2
   17fe8:	ldr	r1, [pc, #12]	; 17ffc <sprintf@plt+0x69fc>
   17fec:	bl	11390 <rb_write@plt>
   17ff0:	add	sp, sp, #140	; 0x8c
   17ff4:	pop	{r4, r5, pc}
   17ff8:	andeq	r9, r1, r4, asr #27
   17ffc:	andeq	r9, r1, r0, asr r7
   18000:	ldr	r2, [pc, #200]	; 180d0 <sprintf@plt+0x6ad0>
   18004:	ldr	ip, [r0]
   18008:	mov	r3, r0
   1800c:	ldm	r2, {r0, r1}
   18010:	ldrh	r2, [ip, #248]	; 0xf8
   18014:	push	{r4, r5, lr}
   18018:	sub	sp, sp, #36	; 0x24
   1801c:	cmp	r2, #2
   18020:	str	r0, [sp, #4]
   18024:	strh	r1, [sp, #8]
   18028:	beq	180ac <sprintf@plt+0x6aac>
   1802c:	cmp	r2, #10
   18030:	bne	180a4 <sprintf@plt+0x6aa4>
   18034:	ldr	r1, [r3, #12]
   18038:	add	r2, sp, #29
   1803c:	mov	r0, #4
   18040:	ldrh	ip, [r1, #58]	; 0x3a
   18044:	ldr	r4, [r1, #64]!	; 0x40
   18048:	strb	r0, [sp, #10]
   1804c:	strh	ip, [sp, #27]
   18050:	ldr	lr, [r1, #4]
   18054:	ldr	ip, [r1, #8]
   18058:	ldr	r1, [r1, #12]
   1805c:	str	r4, [sp, #11]
   18060:	str	lr, [sp, #15]
   18064:	str	ip, [sp, #19]
   18068:	str	r1, [sp, #23]
   1806c:	add	r1, sp, #4
   18070:	sub	r2, r1, r2
   18074:	ldr	r0, [r3, #4]
   18078:	mov	r4, r3
   1807c:	bl	11390 <rb_write@plt>
   18080:	cmp	r0, #0
   18084:	ble	180a4 <sprintf@plt+0x6aa4>
   18088:	ldr	r5, [r4, #8]
   1808c:	mov	r0, r5
   18090:	bl	11420 <strlen@plt>
   18094:	mov	r1, r5
   18098:	add	r2, r0, #1
   1809c:	ldr	r0, [r4, #4]
   180a0:	bl	11390 <rb_write@plt>
   180a4:	add	sp, sp, #36	; 0x24
   180a8:	pop	{r4, r5, pc}
   180ac:	ldr	r2, [r3, #12]
   180b0:	mov	r1, #1
   180b4:	strb	r1, [sp, #10]
   180b8:	ldrh	r0, [r2, #58]	; 0x3a
   180bc:	ldr	r1, [r2, #60]	; 0x3c
   180c0:	add	r2, sp, #17
   180c4:	strh	r0, [sp, #15]
   180c8:	str	r1, [sp, #11]
   180cc:	b	1806c <sprintf@plt+0x6a6c>
   180d0:	andeq	r9, r1, r8, ror #24
   180d4:	ldr	r3, [r0, #12]
   180d8:	push	{r4, r5, lr}
   180dc:	sub	sp, sp, #20
   180e0:	ldrh	r5, [r3, #58]	; 0x3a
   180e4:	ldr	r3, [r3, #60]	; 0x3c
   180e8:	mov	lr, #260	; 0x104
   180ec:	mov	ip, #0
   180f0:	mov	r4, r0
   180f4:	mov	r2, #9
   180f8:	ldr	r0, [r0, #4]
   180fc:	add	r1, sp, #4
   18100:	strh	r5, [sp, #6]
   18104:	str	r3, [sp, #8]
   18108:	strh	lr, [sp, #4]
   1810c:	strb	ip, [sp, #12]
   18110:	bl	11390 <rb_write@plt>
   18114:	cmp	r0, #0
   18118:	blt	18138 <sprintf@plt+0x6b38>
   1811c:	ldr	r5, [r4, #8]
   18120:	mov	r0, r5
   18124:	bl	11420 <strlen@plt>
   18128:	mov	r1, r5
   1812c:	add	r2, r0, #1
   18130:	ldr	r0, [r4, #4]
   18134:	bl	11390 <rb_write@plt>
   18138:	add	sp, sp, #20
   1813c:	pop	{r4, r5, pc}
   18140:	push	{r4, r5, r6, lr}
   18144:	mov	r4, r2
   18148:	ldr	r0, [r2, #4]
   1814c:	mov	r1, #0
   18150:	mov	r2, #10
   18154:	ldr	r5, [r4]
   18158:	bl	11468 <strtol@plt>
   1815c:	ldr	r3, [pc, #48]	; 18194 <sprintf@plt+0x6b94>
   18160:	sub	r2, r0, #1
   18164:	cmp	r2, r3
   18168:	bhi	1817c <sprintf@plt+0x6b7c>
   1816c:	uxth	r1, r0
   18170:	mov	r0, r5
   18174:	pop	{r4, r5, r6, lr}
   18178:	b	17b60 <sprintf@plt+0x6560>
   1817c:	mov	r0, #67	; 0x43
   18180:	ldm	r4, {r2, r3}
   18184:	ldr	r1, [pc, #12]	; 18198 <sprintf@plt+0x6b98>
   18188:	bl	122d8 <sprintf@plt+0xcd8>
   1818c:	mov	r0, #3
   18190:	bl	115e8 <exit@plt>
   18194:	strdeq	pc, [r0], -lr
   18198:	andeq	r9, r1, r0, ror #27
   1819c:	push	{r4, r5, r6, r7, lr}
   181a0:	sub	sp, sp, #12
   181a4:	ldr	r6, [pc, #212]	; 18280 <sprintf@plt+0x6c80>
   181a8:	ldr	r4, [r6, #376]	; 0x178
   181ac:	cmp	r4, #0
   181b0:	beq	18234 <sprintf@plt+0x6c34>
   181b4:	ldr	r5, [r4, #8]
   181b8:	mov	r7, #0
   181bc:	b	181e4 <sprintf@plt+0x6be4>
   181c0:	sub	r1, r1, #1
   181c4:	cmp	r5, #0
   181c8:	str	r3, [r2, #8]
   181cc:	str	r7, [r4, #4]
   181d0:	str	r7, [r4, #8]
   181d4:	str	r1, [r6, #384]	; 0x180
   181d8:	beq	18234 <sprintf@plt+0x6c34>
   181dc:	mov	r4, r5
   181e0:	ldr	r5, [r5, #8]
   181e4:	ldr	r0, [r4]
   181e8:	cmp	r0, #0
   181ec:	beq	18278 <sprintf@plt+0x6c78>
   181f0:	bl	113cc <free@plt>
   181f4:	ldr	r3, [r4, #8]
   181f8:	ldr	r2, [r4, #4]
   181fc:	cmp	r3, #0
   18200:	strne	r2, [r3, #4]
   18204:	ldrne	r2, [r4, #4]
   18208:	streq	r2, [r6, #380]	; 0x17c
   1820c:	cmp	r2, #0
   18210:	ldr	r1, [r6, #384]	; 0x180
   18214:	bne	181c0 <sprintf@plt+0x6bc0>
   18218:	sub	r1, r1, #1
   1821c:	cmp	r5, #0
   18220:	str	r2, [r4, #4]
   18224:	str	r2, [r4, #8]
   18228:	str	r3, [r6, #376]	; 0x178
   1822c:	str	r1, [r6, #384]	; 0x180
   18230:	bne	181dc <sprintf@plt+0x6bdc>
   18234:	ldr	r4, [pc, #72]	; 18284 <sprintf@plt+0x6c84>
   18238:	mov	r1, sp
   1823c:	ldr	r0, [r4]
   18240:	bl	11408 <rb_dictionary_foreach_start@plt>
   18244:	b	18258 <sprintf@plt+0x6c58>
   18248:	bl	17774 <sprintf@plt+0x6174>
   1824c:	mov	r1, sp
   18250:	ldr	r0, [r4]
   18254:	bl	113c0 <rb_dictionary_foreach_next@plt>
   18258:	mov	r1, sp
   1825c:	ldr	r0, [r4]
   18260:	bl	11324 <rb_dictionary_foreach_cur@plt>
   18264:	subs	r3, r0, #0
   18268:	bne	18248 <sprintf@plt+0x6c48>
   1826c:	strb	r3, [r6, #388]	; 0x184
   18270:	add	sp, sp, #12
   18274:	pop	{r4, r5, r6, r7, pc}
   18278:	mov	r3, r5
   1827c:	b	181f8 <sprintf@plt+0x6bf8>
   18280:	andeq	pc, r2, r4, ror #31
   18284:	andeq	r0, r3, r0, ror r1
   18288:	ldr	r3, [pc, #208]	; 18360 <sprintf@plt+0x6d60>
   1828c:	push	{r4, r5, r6, lr}
   18290:	mov	r4, r2
   18294:	ldr	r2, [r2]
   18298:	cmp	r1, #0
   1829c:	ldr	r1, [r3, #12]
   182a0:	ldr	r3, [r2, #464]	; 0x1d0
   182a4:	add	r3, r3, r1, lsl #4
   182a8:	ldr	r5, [r3, #8]
   182ac:	bne	182c0 <sprintf@plt+0x6cc0>
   182b0:	ldr	r3, [pc, #172]	; 18364 <sprintf@plt+0x6d64>
   182b4:	ldrb	r1, [r3, #388]	; 0x184
   182b8:	cmp	r1, #0
   182bc:	bne	1830c <sprintf@plt+0x6d0c>
   182c0:	ldr	r0, [r4, #4]
   182c4:	bl	1145c <rb_close@plt>
   182c8:	cmp	r5, #0
   182cc:	beq	1835c <sprintf@plt+0x6d5c>
   182d0:	ldr	r3, [r4, #24]
   182d4:	ldr	r2, [r4, #20]
   182d8:	cmp	r3, #0
   182dc:	strne	r2, [r3, #4]
   182e0:	ldrne	r2, [r4, #20]
   182e4:	streq	r2, [r5, #4]
   182e8:	cmp	r2, #0
   182ec:	strne	r3, [r2, #8]
   182f0:	streq	r3, [r5]
   182f4:	ldr	r3, [r5, #8]
   182f8:	mov	r0, r4
   182fc:	sub	r3, r3, #1
   18300:	str	r3, [r5, #8]
   18304:	pop	{r4, r5, r6, lr}
   18308:	b	113cc <free@plt>
   1830c:	ldrh	r2, [r2, #248]	; 0xf8
   18310:	ldr	r1, [r4, #8]
   18314:	cmp	r2, #2
   18318:	beq	18340 <sprintf@plt+0x6d40>
   1831c:	cmp	r2, #10
   18320:	bne	182c0 <sprintf@plt+0x6cc0>
   18324:	ldrb	r2, [r1, #23]
   18328:	cmp	r2, #0
   1832c:	beq	182c0 <sprintf@plt+0x6cc0>
   18330:	ldr	r3, [r3, #372]	; 0x174
   18334:	cmp	r3, #0
   18338:	bne	1834c <sprintf@plt+0x6d4c>
   1833c:	b	182c0 <sprintf@plt+0x6cc0>
   18340:	ldr	r3, [r3, #184]	; 0xb8
   18344:	cmp	r3, #0
   18348:	beq	182c0 <sprintf@plt+0x6cc0>
   1834c:	ldr	r3, [r1, #24]
   18350:	mov	r0, r4
   18354:	blx	r3
   18358:	b	182c0 <sprintf@plt+0x6cc0>
   1835c:	bl	11694 <sprintf@plt+0x94>
   18360:	andeq	fp, r2, r0, lsr #29
   18364:	andeq	pc, r2, r4, ror #31
   18368:	push	{r4, r5, r6, r7, r8, r9, lr}
   1836c:	sub	sp, sp, #12
   18370:	ldr	r4, [r2]
   18374:	ldr	r1, [pc, #648]	; 18604 <sprintf@plt+0x7004>
   18378:	mov	r0, r4
   1837c:	mov	r5, r2
   18380:	bl	11330 <strcasecmp@plt>
   18384:	cmp	r0, #0
   18388:	beq	185e4 <sprintf@plt+0x6fe4>
   1838c:	mov	r0, r4
   18390:	ldr	r1, [pc, #624]	; 18608 <sprintf@plt+0x7008>
   18394:	bl	11330 <strcasecmp@plt>
   18398:	cmp	r0, #0
   1839c:	moveq	r4, #2
   183a0:	bne	18578 <sprintf@plt+0x6f78>
   183a4:	mov	r2, #10
   183a8:	mov	r1, #0
   183ac:	ldr	r0, [r5, #4]
   183b0:	bl	11468 <strtol@plt>
   183b4:	ldr	r3, [pc, #592]	; 1860c <sprintf@plt+0x700c>
   183b8:	sub	r2, r0, #1
   183bc:	cmp	r2, r3
   183c0:	bhi	185cc <sprintf@plt+0x6fcc>
   183c4:	ldr	r6, [pc, #580]	; 18610 <sprintf@plt+0x7010>
   183c8:	uxth	ip, r0
   183cc:	ldr	r2, [r6, #376]	; 0x178
   183d0:	cmp	r2, #0
   183d4:	bne	183e8 <sprintf@plt+0x6de8>
   183d8:	b	18550 <sprintf@plt+0x6f50>
   183dc:	ldr	r2, [r2, #8]
   183e0:	cmp	r2, #0
   183e4:	beq	18550 <sprintf@plt+0x6f50>
   183e8:	ldr	r7, [r2]
   183ec:	ldr	r1, [r7, #16]
   183f0:	cmp	r1, r4
   183f4:	bne	183dc <sprintf@plt+0x6ddc>
   183f8:	ldrh	r1, [r7, #20]
   183fc:	cmp	r1, ip
   18400:	bne	183dc <sprintf@plt+0x6ddc>
   18404:	ldr	r4, [pc, #520]	; 18614 <sprintf@plt+0x7014>
   18408:	mov	r1, sp
   1840c:	ldr	r5, [pc, #516]	; 18618 <sprintf@plt+0x7018>
   18410:	ldr	r0, [r4]
   18414:	bl	11408 <rb_dictionary_foreach_start@plt>
   18418:	mov	r1, sp
   1841c:	ldr	r0, [r4]
   18420:	bl	11324 <rb_dictionary_foreach_cur@plt>
   18424:	subs	r8, r0, #0
   18428:	beq	18504 <sprintf@plt+0x6f04>
   1842c:	ldr	r2, [r5, #12]
   18430:	ldr	r3, [r8, #464]	; 0x1d0
   18434:	add	r3, r3, r2, lsl #4
   18438:	ldr	r9, [r3, #8]
   1843c:	cmp	r9, #0
   18440:	beq	184e8 <sprintf@plt+0x6ee8>
   18444:	ldr	lr, [r8, #460]	; 0x1cc
   18448:	ldr	r3, [r9]
   1844c:	add	lr, lr, #1
   18450:	cmp	r3, #0
   18454:	str	lr, [r8, #460]	; 0x1cc
   18458:	beq	184d8 <sprintf@plt+0x6ed8>
   1845c:	ldrh	ip, [r7, #20]
   18460:	b	18470 <sprintf@plt+0x6e70>
   18464:	ldr	r3, [r3, #8]
   18468:	cmp	r3, #0
   1846c:	beq	184d8 <sprintf@plt+0x6ed8>
   18470:	ldr	r0, [r3]
   18474:	ldr	r2, [r0, #8]
   18478:	ldrh	r1, [r2, #20]
   1847c:	cmp	r1, ip
   18480:	bne	18464 <sprintf@plt+0x6e64>
   18484:	ldr	r1, [r2, #16]
   18488:	ldr	r2, [r7, #16]
   1848c:	cmp	r1, r2
   18490:	bne	18464 <sprintf@plt+0x6e64>
   18494:	ldr	r3, [r0, #24]
   18498:	ldr	r2, [r0, #20]
   1849c:	cmp	r3, #0
   184a0:	strne	r2, [r3, #4]
   184a4:	ldrne	r2, [r0, #20]
   184a8:	streq	r2, [r9, #4]
   184ac:	cmp	r2, #0
   184b0:	strne	r3, [r2, #8]
   184b4:	streq	r3, [r9]
   184b8:	ldr	r3, [r9, #8]
   184bc:	sub	r3, r3, #1
   184c0:	str	r3, [r9, #8]
   184c4:	bl	113cc <free@plt>
   184c8:	ldr	r3, [r9, #8]
   184cc:	cmp	r3, #0
   184d0:	beq	1856c <sprintf@plt+0x6f6c>
   184d4:	ldr	lr, [r8, #460]	; 0x1cc
   184d8:	sub	lr, lr, #1
   184dc:	cmp	lr, #0
   184e0:	str	lr, [r8, #460]	; 0x1cc
   184e4:	beq	184f8 <sprintf@plt+0x6ef8>
   184e8:	mov	r1, sp
   184ec:	ldr	r0, [r4]
   184f0:	bl	113c0 <rb_dictionary_foreach_next@plt>
   184f4:	b	18418 <sprintf@plt+0x6e18>
   184f8:	mov	r0, r8
   184fc:	bl	12ab4 <sprintf@plt+0x14b4>
   18500:	b	184e8 <sprintf@plt+0x6ee8>
   18504:	ldr	r3, [r7, #36]	; 0x24
   18508:	ldr	r2, [r7, #32]
   1850c:	cmp	r3, #0
   18510:	strne	r2, [r3, #4]
   18514:	ldrne	r2, [r7, #32]
   18518:	streq	r2, [r6, #380]	; 0x17c
   1851c:	cmp	r2, #0
   18520:	strne	r3, [r2, #8]
   18524:	streq	r3, [r6, #376]	; 0x178
   18528:	ldr	r3, [r6, #384]	; 0x180
   1852c:	mov	r0, r7
   18530:	sub	r3, r3, #1
   18534:	str	r3, [r6, #384]	; 0x180
   18538:	bl	113cc <free@plt>
   1853c:	ldr	r3, [r6, #384]	; 0x180
   18540:	cmp	r3, #0
   18544:	strbeq	r3, [r6, #388]	; 0x184
   18548:	add	sp, sp, #12
   1854c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18550:	mov	r3, r0
   18554:	ldr	r2, [r5]
   18558:	mov	r0, #67	; 0x43
   1855c:	ldr	r1, [pc, #184]	; 1861c <sprintf@plt+0x701c>
   18560:	bl	122d8 <sprintf@plt+0xcd8>
   18564:	mov	r0, #3
   18568:	bl	115e8 <exit@plt>
   1856c:	mov	r0, r8
   18570:	bl	17774 <sprintf@plt+0x6174>
   18574:	b	184d4 <sprintf@plt+0x6ed4>
   18578:	mov	r0, r4
   1857c:	ldr	r1, [pc, #156]	; 18620 <sprintf@plt+0x7020>
   18580:	bl	11330 <strcasecmp@plt>
   18584:	cmp	r0, #0
   18588:	moveq	r4, #3
   1858c:	beq	183a4 <sprintf@plt+0x6da4>
   18590:	mov	r0, r4
   18594:	ldr	r1, [pc, #136]	; 18624 <sprintf@plt+0x7024>
   18598:	bl	11330 <strcasecmp@plt>
   1859c:	cmp	r0, #0
   185a0:	moveq	r4, #4
   185a4:	beq	183a4 <sprintf@plt+0x6da4>
   185a8:	mov	r2, #10
   185ac:	mov	r1, #0
   185b0:	ldr	r0, [r5, #4]
   185b4:	bl	11468 <strtol@plt>
   185b8:	ldr	r2, [pc, #76]	; 1860c <sprintf@plt+0x700c>
   185bc:	sub	r1, r0, #1
   185c0:	cmp	r1, r2
   185c4:	mov	r3, r0
   185c8:	bls	185ec <sprintf@plt+0x6fec>
   185cc:	mov	r0, #67	; 0x43
   185d0:	ldm	r5, {r2, r3}
   185d4:	ldr	r1, [pc, #76]	; 18628 <sprintf@plt+0x7028>
   185d8:	bl	122d8 <sprintf@plt+0xcd8>
   185dc:	mov	r0, #3
   185e0:	bl	115e8 <exit@plt>
   185e4:	mov	r4, #1
   185e8:	b	183a4 <sprintf@plt+0x6da4>
   185ec:	mov	r0, #67	; 0x43
   185f0:	ldr	r2, [r5]
   185f4:	ldr	r1, [pc, #48]	; 1862c <sprintf@plt+0x702c>
   185f8:	bl	122d8 <sprintf@plt+0xcd8>
   185fc:	mov	r0, #3
   18600:	bl	115e8 <exit@plt>
   18604:	andeq	r9, r1, r0, lsl #28
   18608:	andeq	r9, r1, r8, lsl #28
   1860c:	strdeq	pc, [r0], -lr
   18610:	andeq	pc, r2, r4, ror #31
   18614:	andeq	r0, r3, r0, ror r1
   18618:	andeq	fp, r2, r0, lsr #29
   1861c:	muleq	r1, r4, lr
   18620:	andeq	r9, r1, r0, lsl lr
   18624:	andeq	r9, r1, ip, lsl lr
   18628:	andeq	r9, r1, ip, lsr #28
   1862c:	andeq	r9, r1, ip, asr lr
   18630:	push	{r4, r5, r6, r7, r8, lr}
   18634:	mov	r1, #0
   18638:	ldr	r0, [r2, #4]
   1863c:	mov	r5, r2
   18640:	mov	r2, #10
   18644:	bl	11468 <strtol@plt>
   18648:	mov	r1, #40	; 0x28
   1864c:	mov	r6, r0
   18650:	mov	r0, #1
   18654:	bl	1133c <calloc@plt>
   18658:	subs	r4, r0, #0
   1865c:	beq	187c0 <sprintf@plt+0x71c0>
   18660:	ldr	r3, [pc, #508]	; 18864 <sprintf@plt+0x7264>
   18664:	sub	r2, r6, #1
   18668:	cmp	r2, r3
   1866c:	bhi	1884c <sprintf@plt+0x724c>
   18670:	ldr	r7, [r5]
   18674:	strh	r6, [r4, #20]
   18678:	mov	r0, r7
   1867c:	ldr	r1, [pc, #484]	; 18868 <sprintf@plt+0x7268>
   18680:	bl	11330 <strcasecmp@plt>
   18684:	subs	r8, r0, #0
   18688:	beq	18754 <sprintf@plt+0x7154>
   1868c:	ldr	r1, [pc, #472]	; 1886c <sprintf@plt+0x726c>
   18690:	mov	r0, r7
   18694:	bl	11330 <strcasecmp@plt>
   18698:	subs	r8, r0, #0
   1869c:	bne	18780 <sprintf@plt+0x7180>
   186a0:	mov	r2, #2
   186a4:	mov	r3, r6
   186a8:	str	r2, [r4, #16]
   186ac:	mov	r1, #16
   186b0:	ldr	r2, [pc, #440]	; 18870 <sprintf@plt+0x7270>
   186b4:	mov	r0, r4
   186b8:	bl	11594 <snprintf@plt>
   186bc:	ldr	r3, [pc, #432]	; 18874 <sprintf@plt+0x7274>
   186c0:	strb	r8, [r4, #22]
   186c4:	str	r3, [r4, #24]
   186c8:	ldr	r6, [pc, #424]	; 18878 <sprintf@plt+0x7278>
   186cc:	ldr	ip, [r4, #16]
   186d0:	ldrh	r3, [r4, #20]
   186d4:	ldr	lr, [r6, #376]	; 0x178
   186d8:	cmp	lr, #0
   186dc:	beq	1882c <sprintf@plt+0x722c>
   186e0:	mov	r2, lr
   186e4:	b	186f4 <sprintf@plt+0x70f4>
   186e8:	ldr	r2, [r2, #8]
   186ec:	cmp	r2, #0
   186f0:	beq	1872c <sprintf@plt+0x712c>
   186f4:	ldr	r1, [r2]
   186f8:	ldr	r0, [r1, #16]
   186fc:	cmp	ip, r0
   18700:	bne	186e8 <sprintf@plt+0x70e8>
   18704:	ldrh	r1, [r1, #20]
   18708:	cmp	r1, r3
   1870c:	bne	186e8 <sprintf@plt+0x70e8>
   18710:	ldr	r2, [r5]
   18714:	mov	r0, #67	; 0x43
   18718:	ldr	r1, [pc, #348]	; 1887c <sprintf@plt+0x727c>
   1871c:	bl	122d8 <sprintf@plt+0xcd8>
   18720:	mov	r0, r4
   18724:	pop	{r4, r5, r6, r7, r8, lr}
   18728:	b	113cc <free@plt>
   1872c:	add	r3, r4, #28
   18730:	str	r4, [r4, #28]
   18734:	str	r2, [r4, #32]
   18738:	str	lr, [r4, #36]	; 0x24
   1873c:	str	r3, [lr, #4]
   18740:	ldr	r2, [r6, #384]	; 0x180
   18744:	str	r3, [r6, #376]	; 0x178
   18748:	add	r3, r2, #1
   1874c:	str	r3, [r6, #384]	; 0x180
   18750:	pop	{r4, r5, r6, r7, r8, pc}
   18754:	mov	r2, #1
   18758:	mov	r3, r6
   1875c:	str	r2, [r4, #16]
   18760:	mov	r1, #16
   18764:	ldr	r2, [pc, #276]	; 18880 <sprintf@plt+0x7280>
   18768:	mov	r0, r4
   1876c:	bl	11594 <snprintf@plt>
   18770:	ldr	r3, [pc, #268]	; 18884 <sprintf@plt+0x7284>
   18774:	strb	r8, [r4, #22]
   18778:	str	r3, [r4, #24]
   1877c:	b	186c8 <sprintf@plt+0x70c8>
   18780:	ldr	r1, [pc, #256]	; 18888 <sprintf@plt+0x7288>
   18784:	mov	r0, r7
   18788:	bl	11330 <strcasecmp@plt>
   1878c:	subs	r8, r0, #0
   18790:	bne	187c4 <sprintf@plt+0x71c4>
   18794:	mov	r2, #3
   18798:	mov	r3, r6
   1879c:	str	r2, [r4, #16]
   187a0:	mov	r1, #16
   187a4:	ldr	r2, [pc, #224]	; 1888c <sprintf@plt+0x728c>
   187a8:	mov	r0, r4
   187ac:	bl	11594 <snprintf@plt>
   187b0:	ldr	r3, [pc, #216]	; 18890 <sprintf@plt+0x7290>
   187b4:	strb	r8, [r4, #22]
   187b8:	str	r3, [r4, #24]
   187bc:	b	186c8 <sprintf@plt+0x70c8>
   187c0:	bl	114d4 <rb_outofmemory@plt>
   187c4:	ldr	r1, [pc, #200]	; 18894 <sprintf@plt+0x7294>
   187c8:	mov	r0, r7
   187cc:	bl	11330 <strcasecmp@plt>
   187d0:	cmp	r0, #0
   187d4:	bne	18808 <sprintf@plt+0x7208>
   187d8:	mov	r2, #4
   187dc:	mov	r3, r6
   187e0:	str	r2, [r4, #16]
   187e4:	mov	r1, #16
   187e8:	ldr	r2, [pc, #168]	; 18898 <sprintf@plt+0x7298>
   187ec:	mov	r0, r4
   187f0:	bl	11594 <snprintf@plt>
   187f4:	ldr	r2, [pc, #148]	; 18890 <sprintf@plt+0x7290>
   187f8:	mov	r3, #1
   187fc:	str	r2, [r4, #24]
   18800:	strb	r3, [r4, #22]
   18804:	b	186c8 <sprintf@plt+0x70c8>
   18808:	mov	r1, #0
   1880c:	str	r1, [r4, #16]
   18810:	mov	r0, #67	; 0x43
   18814:	mov	r3, r6
   18818:	mov	r2, r7
   1881c:	ldr	r1, [pc, #120]	; 1889c <sprintf@plt+0x729c>
   18820:	bl	122d8 <sprintf@plt+0xcd8>
   18824:	mov	r0, #3
   18828:	bl	115e8 <exit@plt>
   1882c:	ldr	r3, [r6, #380]	; 0x17c
   18830:	str	r4, [r4, #28]
   18834:	cmp	r3, #0
   18838:	str	lr, [r4, #32]
   1883c:	str	lr, [r4, #36]	; 0x24
   18840:	add	r3, r4, #28
   18844:	streq	r3, [r6, #380]	; 0x17c
   18848:	b	18740 <sprintf@plt+0x7140>
   1884c:	mov	r0, #67	; 0x43
   18850:	ldm	r5, {r2, r3}
   18854:	ldr	r1, [pc, #68]	; 188a0 <sprintf@plt+0x72a0>
   18858:	bl	122d8 <sprintf@plt+0xcd8>
   1885c:	mov	r0, #3
   18860:	bl	115e8 <exit@plt>
   18864:	strdeq	pc, [r0], -lr
   18868:	andeq	r9, r1, r0, lsl #28
   1886c:	andeq	r9, r1, r8, lsl #28
   18870:	andeq	r9, r1, ip, ror #29
   18874:	andeq	r8, r1, r0
   18878:	andeq	pc, r2, r4, ror #31
   1887c:	andeq	r9, r1, r8, asr pc
   18880:	andeq	r9, r1, ip, asr #30
   18884:	ldrdeq	r8, [r1], -r4
   18888:	andeq	r9, r1, r0, lsl lr
   1888c:	strdeq	r9, [r1], -r8
   18890:	andeq	r7, r1, r0, ror pc
   18894:	andeq	r9, r1, ip, lsl lr
   18898:	andeq	r9, r1, r8, lsl #30
   1889c:	andeq	r9, r1, ip, lsl pc
   188a0:	andeq	r9, r1, r4, asr #29
   188a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   188a8:	mov	r5, r0
   188ac:	ldr	r9, [pc, #432]	; 18a64 <sprintf@plt+0x7464>
   188b0:	ldr	r3, [r0, #464]	; 0x1d0
   188b4:	sub	sp, sp, #272	; 0x110
   188b8:	ldr	r2, [r9, #12]
   188bc:	mov	r7, r1
   188c0:	mov	r0, #1
   188c4:	add	r3, r3, r2, lsl #4
   188c8:	mov	r1, #28
   188cc:	ldr	r6, [r3, #8]
   188d0:	bl	1133c <calloc@plt>
   188d4:	subs	r4, r0, #0
   188d8:	beq	18a4c <sprintf@plt+0x744c>
   188dc:	ldrh	sl, [r5, #248]	; 0xf8
   188e0:	mov	r3, #1
   188e4:	str	r3, [sp, #12]
   188e8:	cmp	sl, #10
   188ec:	ldrne	r8, [pc, #372]	; 18a68 <sprintf@plt+0x7468>
   188f0:	beq	18a1c <sprintf@plt+0x741c>
   188f4:	ldr	r3, [r8, #184]	; 0xb8
   188f8:	cmp	r3, #0
   188fc:	beq	18a0c <sprintf@plt+0x740c>
   18900:	mov	r2, #128	; 0x80
   18904:	add	r1, r5, #248	; 0xf8
   18908:	add	r0, sp, #16
   1890c:	bl	11444 <memcpy@plt>
   18910:	mov	r2, #128	; 0x80
   18914:	add	r1, r8, #56	; 0x38
   18918:	add	r0, sp, #144	; 0x90
   1891c:	bl	11444 <memcpy@plt>
   18920:	str	r5, [r4]
   18924:	str	r7, [r4, #8]
   18928:	str	r8, [r4, #12]
   1892c:	mov	r0, sl
   18930:	mov	r3, r7
   18934:	mov	r2, #0
   18938:	mov	r1, #1
   1893c:	bl	112e8 <rb_socket@plt>
   18940:	cmp	r0, #0
   18944:	str	r0, [r4, #4]
   18948:	beq	189ec <sprintf@plt+0x73ec>
   1894c:	bl	112c4 <rb_get_fd@plt>
   18950:	mov	r3, #4
   18954:	str	r3, [sp]
   18958:	mov	r2, #1
   1895c:	add	r3, sp, #12
   18960:	mov	r1, #6
   18964:	bl	115c4 <setsockopt@plt>
   18968:	mov	r3, #0
   1896c:	strh	r3, [sp, #146]	; 0x92
   18970:	ldrh	r3, [r7, #20]
   18974:	cmp	r6, #0
   18978:	add	r2, r4, #16
   1897c:	rev16	r3, r3
   18980:	strh	r3, [sp, #18]
   18984:	beq	18a50 <sprintf@plt+0x7450>
   18988:	ldr	r3, [r6]
   1898c:	mov	r1, #0
   18990:	cmp	r3, r1
   18994:	str	r4, [r4, #16]
   18998:	str	r3, [r4, #24]
   1899c:	str	r1, [r4, #20]
   189a0:	strne	r2, [r3, #4]
   189a4:	beq	18a3c <sprintf@plt+0x743c>
   189a8:	ldr	r3, [r6, #8]
   189ac:	ldrb	r1, [r7, #22]
   189b0:	add	r3, r3, #1
   189b4:	str	r3, [r6, #8]
   189b8:	ldr	r3, [r9, #60]	; 0x3c
   189bc:	cmp	r1, #0
   189c0:	str	r2, [r6]
   189c4:	ldr	r0, [r4, #4]
   189c8:	add	r2, sp, #144	; 0x90
   189cc:	str	r3, [sp, #4]
   189d0:	add	r1, sp, #16
   189d4:	str	r4, [sp]
   189d8:	ldr	r3, [pc, #140]	; 18a6c <sprintf@plt+0x746c>
   189dc:	bne	18a30 <sprintf@plt+0x7430>
   189e0:	bl	11288 <rb_connect_tcp@plt>
   189e4:	add	sp, sp, #272	; 0x110
   189e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   189ec:	bl	115f4 <__errno_location@plt>
   189f0:	ldr	r0, [r0]
   189f4:	bl	11234 <strerror@plt>
   189f8:	mov	r2, r7
   189fc:	ldr	r1, [pc, #108]	; 18a70 <sprintf@plt+0x7470>
   18a00:	mov	r3, r0
   18a04:	mov	r0, #87	; 0x57
   18a08:	bl	122d8 <sprintf@plt+0xcd8>
   18a0c:	mov	r0, r4
   18a10:	add	sp, sp, #272	; 0x110
   18a14:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   18a18:	b	113cc <free@plt>
   18a1c:	ldr	r3, [r7, #16]
   18a20:	cmp	r3, #1
   18a24:	ldrne	r8, [pc, #72]	; 18a74 <sprintf@plt+0x7474>
   18a28:	bne	188f4 <sprintf@plt+0x72f4>
   18a2c:	b	18a10 <sprintf@plt+0x7410>
   18a30:	bl	1127c <rb_connect_tcp_ssl@plt>
   18a34:	add	sp, sp, #272	; 0x110
   18a38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18a3c:	ldr	r3, [r6, #4]
   18a40:	cmp	r3, #0
   18a44:	streq	r2, [r6, #4]
   18a48:	b	189a8 <sprintf@plt+0x73a8>
   18a4c:	bl	114d4 <rb_outofmemory@plt>
   18a50:	ldr	r3, [pc, #32]	; 18a78 <sprintf@plt+0x7478>
   18a54:	mov	r2, #145	; 0x91
   18a58:	ldr	r1, [pc, #28]	; 18a7c <sprintf@plt+0x747c>
   18a5c:	ldr	r0, [pc, #28]	; 18a80 <sprintf@plt+0x7480>
   18a60:	bl	1139c <__assert_fail@plt>
   18a64:	andeq	fp, r2, r0, lsr #29
   18a68:	andeq	pc, r2, r4, ror #31
   18a6c:	andeq	r8, r1, r8, lsl #5
   18a70:	andeq	r9, r1, r4, lsl #31
   18a74:	andeq	r0, r3, r0, lsr #1
   18a78:	andeq	r9, r1, r0, ror ip
   18a7c:	andeq	r9, r1, r4, ror #7
   18a80:	andeq	r9, r1, r8, ror #15
   18a84:	ldr	r3, [pc, #188]	; 18b48 <sprintf@plt+0x7548>
   18a88:	push	{r4, r5, r6, r7, r8, lr}
   18a8c:	mov	r7, r0
   18a90:	ldr	r4, [r3]
   18a94:	cmp	r4, #0
   18a98:	ldrne	r6, [pc, #172]	; 18b4c <sprintf@plt+0x754c>
   18a9c:	bne	18ab0 <sprintf@plt+0x74b0>
   18aa0:	b	18ae4 <sprintf@plt+0x74e4>
   18aa4:	ldr	r4, [r4, #8]
   18aa8:	cmp	r4, #0
   18aac:	beq	18ae4 <sprintf@plt+0x74e4>
   18ab0:	ldr	r5, [r4]
   18ab4:	mov	r1, r6
   18ab8:	ldr	r0, [r5, #16]
   18abc:	bl	11330 <strcasecmp@plt>
   18ac0:	cmp	r0, #0
   18ac4:	bne	18aa4 <sprintf@plt+0x74a4>
   18ac8:	ldr	r2, [r5, #12]
   18acc:	ldr	r3, [r7, #464]	; 0x1d0
   18ad0:	add	r2, r3, r2, lsl #4
   18ad4:	ldr	r2, [r2, #12]
   18ad8:	cmp	r2, #2
   18adc:	beq	18ae8 <sprintf@plt+0x74e8>
   18ae0:	pop	{r4, r5, r6, r7, r8, pc}
   18ae4:	ldr	r3, [r7, #464]	; 0x1d0
   18ae8:	ldr	r2, [pc, #96]	; 18b50 <sprintf@plt+0x7550>
   18aec:	ldr	r5, [r2, #12]
   18af0:	ldr	r6, [r2, #60]	; 0x3c
   18af4:	add	r5, r3, r5, lsl #4
   18af8:	ldr	r8, [r5, #8]
   18afc:	bl	1142c <rb_current_time@plt>
   18b00:	ldr	r2, [pc, #76]	; 18b54 <sprintf@plt+0x7554>
   18b04:	mov	r3, #1
   18b08:	ldr	r4, [r2, #376]	; 0x178
   18b0c:	cmp	r4, #0
   18b10:	add	r0, r6, r0
   18b14:	str	r0, [r5, #4]
   18b18:	strb	r3, [r8, #12]
   18b1c:	beq	18b38 <sprintf@plt+0x7538>
   18b20:	ldr	r1, [r4]
   18b24:	mov	r0, r7
   18b28:	bl	188a4 <sprintf@plt+0x72a4>
   18b2c:	ldr	r4, [r4, #8]
   18b30:	cmp	r4, #0
   18b34:	bne	18b20 <sprintf@plt+0x7520>
   18b38:	ldr	r0, [r7]
   18b3c:	ldr	r1, [pc, #20]	; 18b58 <sprintf@plt+0x7558>
   18b40:	pop	{r4, r5, r6, r7, r8, lr}
   18b44:	b	1227c <sprintf@plt+0xc7c>
   18b48:	andeq	r0, r3, r4, ror r1
   18b4c:	andeq	r9, r1, ip, lsr sl
   18b50:	andeq	fp, r2, r0, lsr #29
   18b54:	andeq	pc, r2, r4, ror #31
   18b58:			; <UNDEFINED> instruction: 0x00019fb4
   18b5c:	ldr	r3, [pc, #136]	; 18bec <sprintf@plt+0x75ec>
   18b60:	push	{r4, r5, r6, r7, r8, lr}
   18b64:	ldr	r3, [r3, #12]
   18b68:	ldr	r7, [r0, #464]	; 0x1d0
   18b6c:	add	r3, r7, r3, lsl #4
   18b70:	ldr	r3, [r3, #8]
   18b74:	cmp	r3, #0
   18b78:	popeq	{r4, r5, r6, r7, r8, pc}
   18b7c:	ldrb	r3, [r3, #12]
   18b80:	cmp	r3, #0
   18b84:	popne	{r4, r5, r6, r7, r8, pc}
   18b88:	ldr	r3, [pc, #96]	; 18bf0 <sprintf@plt+0x75f0>
   18b8c:	mov	r8, r0
   18b90:	ldr	r4, [r3]
   18b94:	cmp	r4, #0
   18b98:	beq	18be0 <sprintf@plt+0x75e0>
   18b9c:	ldr	r6, [pc, #80]	; 18bf4 <sprintf@plt+0x75f4>
   18ba0:	b	18bb0 <sprintf@plt+0x75b0>
   18ba4:	ldr	r4, [r4, #8]
   18ba8:	cmp	r4, #0
   18bac:	beq	18be0 <sprintf@plt+0x75e0>
   18bb0:	ldr	r5, [r4]
   18bb4:	mov	r1, r6
   18bb8:	ldr	r0, [r5, #16]
   18bbc:	bl	11330 <strcasecmp@plt>
   18bc0:	cmp	r0, #0
   18bc4:	bne	18ba4 <sprintf@plt+0x75a4>
   18bc8:	ldr	r3, [r5, #12]
   18bcc:	add	r7, r7, r3, lsl #4
   18bd0:	ldr	r3, [r7, #12]
   18bd4:	cmp	r3, #2
   18bd8:	beq	18be0 <sprintf@plt+0x75e0>
   18bdc:	pop	{r4, r5, r6, r7, r8, pc}
   18be0:	mov	r0, r8
   18be4:	pop	{r4, r5, r6, r7, r8, lr}
   18be8:	b	18a84 <sprintf@plt+0x7484>
   18bec:	andeq	fp, r2, r0, lsr #29
   18bf0:	andeq	r0, r3, r4, ror r1
   18bf4:	andeq	r9, r1, r4, lsr sl
   18bf8:	ldr	r3, [pc, #208]	; 18cd0 <sprintf@plt+0x76d0>
   18bfc:	push	{r4, r5, r6, r7, r8, lr}
   18c00:	mov	r7, r0
   18c04:	ldrb	r2, [r3, #388]	; 0x184
   18c08:	cmp	r2, #0
   18c0c:	beq	18c1c <sprintf@plt+0x761c>
   18c10:	ldr	r3, [r3, #384]	; 0x180
   18c14:	cmp	r3, #0
   18c18:	bne	18c34 <sprintf@plt+0x7634>
   18c1c:	ldr	r3, [pc, #176]	; 18cd4 <sprintf@plt+0x76d4>
   18c20:	mov	r0, r7
   18c24:	ldr	r1, [r3, #12]
   18c28:	bl	12b78 <sprintf@plt+0x1578>
   18c2c:	mov	r0, #1
   18c30:	pop	{r4, r5, r6, r7, r8, pc}
   18c34:	ldr	r3, [r0, #460]	; 0x1cc
   18c38:	ldr	r2, [pc, #148]	; 18cd4 <sprintf@plt+0x76d4>
   18c3c:	add	r3, r3, #1
   18c40:	str	r3, [r0, #460]	; 0x1cc
   18c44:	mov	r1, #16
   18c48:	mov	r0, #1
   18c4c:	ldr	r5, [r2, #12]
   18c50:	bl	1133c <calloc@plt>
   18c54:	cmp	r0, #0
   18c58:	beq	18ccc <sprintf@plt+0x76cc>
   18c5c:	ldr	r2, [pc, #116]	; 18cd8 <sprintf@plt+0x76d8>
   18c60:	ldr	r3, [r7, #464]	; 0x1d0
   18c64:	ldr	r4, [r2]
   18c68:	add	r3, r3, r5, lsl #4
   18c6c:	cmp	r4, #0
   18c70:	str	r0, [r3, #8]
   18c74:	beq	18cbc <sprintf@plt+0x76bc>
   18c78:	ldr	r6, [pc, #92]	; 18cdc <sprintf@plt+0x76dc>
   18c7c:	b	18c8c <sprintf@plt+0x768c>
   18c80:	ldr	r4, [r4, #8]
   18c84:	cmp	r4, #0
   18c88:	beq	18cbc <sprintf@plt+0x76bc>
   18c8c:	ldr	r5, [r4]
   18c90:	mov	r1, r6
   18c94:	ldr	r0, [r5, #16]
   18c98:	bl	11330 <strcasecmp@plt>
   18c9c:	cmp	r0, #0
   18ca0:	bne	18c80 <sprintf@plt+0x7680>
   18ca4:	ldr	r2, [r5, #12]
   18ca8:	ldr	r3, [r7, #464]	; 0x1d0
   18cac:	add	r3, r3, r2, lsl #4
   18cb0:	ldr	r3, [r3, #12]
   18cb4:	cmp	r3, #2
   18cb8:	bne	18c2c <sprintf@plt+0x762c>
   18cbc:	mov	r0, r7
   18cc0:	bl	18a84 <sprintf@plt+0x7484>
   18cc4:	mov	r0, #1
   18cc8:	pop	{r4, r5, r6, r7, r8, pc}
   18ccc:	bl	114d4 <rb_outofmemory@plt>
   18cd0:	andeq	pc, r2, r4, ror #31
   18cd4:	andeq	fp, r2, r0, lsr #29
   18cd8:	andeq	r0, r3, r4, ror r1
   18cdc:	andeq	r9, r1, r4, lsr sl
   18ce0:	cmp	r1, #0
   18ce4:	beq	18ef0 <sprintf@plt+0x78f0>
   18ce8:	eor	ip, r0, r1
   18cec:	rsbmi	r1, r1, #0
   18cf0:	subs	r2, r1, #1
   18cf4:	beq	18ebc <sprintf@plt+0x78bc>
   18cf8:	movs	r3, r0
   18cfc:	rsbmi	r3, r0, #0
   18d00:	cmp	r3, r1
   18d04:	bls	18ec8 <sprintf@plt+0x78c8>
   18d08:	tst	r1, r2
   18d0c:	beq	18ed8 <sprintf@plt+0x78d8>
   18d10:	clz	r2, r3
   18d14:	clz	r0, r1
   18d18:	sub	r2, r0, r2
   18d1c:	rsbs	r2, r2, #31
   18d20:	addne	r2, r2, r2, lsl #1
   18d24:	mov	r0, #0
   18d28:	addne	pc, pc, r2, lsl #2
   18d2c:	nop			; (mov r0, r0)
   18d30:	cmp	r3, r1, lsl #31
   18d34:	adc	r0, r0, r0
   18d38:	subcs	r3, r3, r1, lsl #31
   18d3c:	cmp	r3, r1, lsl #30
   18d40:	adc	r0, r0, r0
   18d44:	subcs	r3, r3, r1, lsl #30
   18d48:	cmp	r3, r1, lsl #29
   18d4c:	adc	r0, r0, r0
   18d50:	subcs	r3, r3, r1, lsl #29
   18d54:	cmp	r3, r1, lsl #28
   18d58:	adc	r0, r0, r0
   18d5c:	subcs	r3, r3, r1, lsl #28
   18d60:	cmp	r3, r1, lsl #27
   18d64:	adc	r0, r0, r0
   18d68:	subcs	r3, r3, r1, lsl #27
   18d6c:	cmp	r3, r1, lsl #26
   18d70:	adc	r0, r0, r0
   18d74:	subcs	r3, r3, r1, lsl #26
   18d78:	cmp	r3, r1, lsl #25
   18d7c:	adc	r0, r0, r0
   18d80:	subcs	r3, r3, r1, lsl #25
   18d84:	cmp	r3, r1, lsl #24
   18d88:	adc	r0, r0, r0
   18d8c:	subcs	r3, r3, r1, lsl #24
   18d90:	cmp	r3, r1, lsl #23
   18d94:	adc	r0, r0, r0
   18d98:	subcs	r3, r3, r1, lsl #23
   18d9c:	cmp	r3, r1, lsl #22
   18da0:	adc	r0, r0, r0
   18da4:	subcs	r3, r3, r1, lsl #22
   18da8:	cmp	r3, r1, lsl #21
   18dac:	adc	r0, r0, r0
   18db0:	subcs	r3, r3, r1, lsl #21
   18db4:	cmp	r3, r1, lsl #20
   18db8:	adc	r0, r0, r0
   18dbc:	subcs	r3, r3, r1, lsl #20
   18dc0:	cmp	r3, r1, lsl #19
   18dc4:	adc	r0, r0, r0
   18dc8:	subcs	r3, r3, r1, lsl #19
   18dcc:	cmp	r3, r1, lsl #18
   18dd0:	adc	r0, r0, r0
   18dd4:	subcs	r3, r3, r1, lsl #18
   18dd8:	cmp	r3, r1, lsl #17
   18ddc:	adc	r0, r0, r0
   18de0:	subcs	r3, r3, r1, lsl #17
   18de4:	cmp	r3, r1, lsl #16
   18de8:	adc	r0, r0, r0
   18dec:	subcs	r3, r3, r1, lsl #16
   18df0:	cmp	r3, r1, lsl #15
   18df4:	adc	r0, r0, r0
   18df8:	subcs	r3, r3, r1, lsl #15
   18dfc:	cmp	r3, r1, lsl #14
   18e00:	adc	r0, r0, r0
   18e04:	subcs	r3, r3, r1, lsl #14
   18e08:	cmp	r3, r1, lsl #13
   18e0c:	adc	r0, r0, r0
   18e10:	subcs	r3, r3, r1, lsl #13
   18e14:	cmp	r3, r1, lsl #12
   18e18:	adc	r0, r0, r0
   18e1c:	subcs	r3, r3, r1, lsl #12
   18e20:	cmp	r3, r1, lsl #11
   18e24:	adc	r0, r0, r0
   18e28:	subcs	r3, r3, r1, lsl #11
   18e2c:	cmp	r3, r1, lsl #10
   18e30:	adc	r0, r0, r0
   18e34:	subcs	r3, r3, r1, lsl #10
   18e38:	cmp	r3, r1, lsl #9
   18e3c:	adc	r0, r0, r0
   18e40:	subcs	r3, r3, r1, lsl #9
   18e44:	cmp	r3, r1, lsl #8
   18e48:	adc	r0, r0, r0
   18e4c:	subcs	r3, r3, r1, lsl #8
   18e50:	cmp	r3, r1, lsl #7
   18e54:	adc	r0, r0, r0
   18e58:	subcs	r3, r3, r1, lsl #7
   18e5c:	cmp	r3, r1, lsl #6
   18e60:	adc	r0, r0, r0
   18e64:	subcs	r3, r3, r1, lsl #6
   18e68:	cmp	r3, r1, lsl #5
   18e6c:	adc	r0, r0, r0
   18e70:	subcs	r3, r3, r1, lsl #5
   18e74:	cmp	r3, r1, lsl #4
   18e78:	adc	r0, r0, r0
   18e7c:	subcs	r3, r3, r1, lsl #4
   18e80:	cmp	r3, r1, lsl #3
   18e84:	adc	r0, r0, r0
   18e88:	subcs	r3, r3, r1, lsl #3
   18e8c:	cmp	r3, r1, lsl #2
   18e90:	adc	r0, r0, r0
   18e94:	subcs	r3, r3, r1, lsl #2
   18e98:	cmp	r3, r1, lsl #1
   18e9c:	adc	r0, r0, r0
   18ea0:	subcs	r3, r3, r1, lsl #1
   18ea4:	cmp	r3, r1
   18ea8:	adc	r0, r0, r0
   18eac:	subcs	r3, r3, r1
   18eb0:	cmp	ip, #0
   18eb4:	rsbmi	r0, r0, #0
   18eb8:	bx	lr
   18ebc:	teq	ip, r0
   18ec0:	rsbmi	r0, r0, #0
   18ec4:	bx	lr
   18ec8:	movcc	r0, #0
   18ecc:	asreq	r0, ip, #31
   18ed0:	orreq	r0, r0, #1
   18ed4:	bx	lr
   18ed8:	clz	r2, r1
   18edc:	rsb	r2, r2, #31
   18ee0:	cmp	ip, #0
   18ee4:	lsr	r0, r3, r2
   18ee8:	rsbmi	r0, r0, #0
   18eec:	bx	lr
   18ef0:	cmp	r0, #0
   18ef4:	mvngt	r0, #-2147483648	; 0x80000000
   18ef8:	movlt	r0, #-2147483648	; 0x80000000
   18efc:	b	18f20 <sprintf@plt+0x7920>
   18f00:	cmp	r1, #0
   18f04:	beq	18ef0 <sprintf@plt+0x78f0>
   18f08:	push	{r0, r1, lr}
   18f0c:	bl	18ce8 <sprintf@plt+0x76e8>
   18f10:	pop	{r1, r2, lr}
   18f14:	mul	r3, r2, r0
   18f18:	sub	r1, r1, r3
   18f1c:	bx	lr
   18f20:	push	{r1, lr}
   18f24:	mov	r0, #8
   18f28:	bl	11480 <raise@plt>
   18f2c:	pop	{r1, pc}
   18f30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18f34:	mov	r7, r0
   18f38:	ldr	r6, [pc, #72]	; 18f88 <sprintf@plt+0x7988>
   18f3c:	ldr	r5, [pc, #72]	; 18f8c <sprintf@plt+0x798c>
   18f40:	add	r6, pc, r6
   18f44:	add	r5, pc, r5
   18f48:	sub	r6, r6, r5
   18f4c:	mov	r8, r1
   18f50:	mov	r9, r2
   18f54:	bl	11208 <sigemptyset@plt-0x20>
   18f58:	asrs	r6, r6, #2
   18f5c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18f60:	mov	r4, #0
   18f64:	add	r4, r4, #1
   18f68:	ldr	r3, [r5], #4
   18f6c:	mov	r2, r9
   18f70:	mov	r1, r8
   18f74:	mov	r0, r7
   18f78:	blx	r3
   18f7c:	cmp	r6, r4
   18f80:	bne	18f64 <sprintf@plt+0x7964>
   18f84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18f88:	andeq	r1, r1, r0, lsr #31
   18f8c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   18f90:	bx	lr

Disassembly of section .fini:

00018f94 <.fini>:
   18f94:	push	{r3, lr}
   18f98:	pop	{r3, pc}
