
../repos/coreutils/src/seq:     file format elf32-littlearm


Disassembly of section .init:

00010e9c <.init>:
   10e9c:	push	{r3, lr}
   10ea0:	bl	1119c <__mempcpy_chk@plt+0x4c>
   10ea4:	pop	{r3, pc}

Disassembly of section .plt:

00010ea8 <calloc@plt-0x14>:
   10ea8:	push	{lr}		; (str lr, [sp, #-4]!)
   10eac:	ldr	lr, [pc, #4]	; 10eb8 <calloc@plt-0x4>
   10eb0:	add	lr, pc, lr
   10eb4:	ldr	pc, [lr, #8]!
   10eb8:	andeq	r6, r1, r8, asr #2

00010ebc <calloc@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #90112	; 0x16000
   10ec4:	ldr	pc, [ip, #328]!	; 0x148

00010ec8 <fputs_unlocked@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #90112	; 0x16000
   10ed0:	ldr	pc, [ip, #320]!	; 0x140

00010ed4 <uselocale@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #90112	; 0x16000
   10edc:	ldr	pc, [ip, #312]!	; 0x138

00010ee0 <strcmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #90112	; 0x16000
   10ee8:	ldr	pc, [ip, #304]!	; 0x130

00010eec <strtol@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #90112	; 0x16000
   10ef4:	ldr	pc, [ip, #296]!	; 0x128

00010ef8 <strcspn@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #90112	; 0x16000
   10f00:	ldr	pc, [ip, #288]!	; 0x120

00010f04 <fflush@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #90112	; 0x16000
   10f0c:	ldr	pc, [ip, #280]!	; 0x118

00010f10 <memmove@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #90112	; 0x16000
   10f18:	ldr	pc, [ip, #272]!	; 0x110

00010f1c <free@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #90112	; 0x16000
   10f24:	ldr	pc, [ip, #264]!	; 0x108

00010f28 <_exit@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #90112	; 0x16000
   10f30:	ldr	pc, [ip, #256]!	; 0x100

00010f34 <memcpy@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #90112	; 0x16000
   10f3c:	ldr	pc, [ip, #248]!	; 0xf8

00010f40 <mbsinit@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #90112	; 0x16000
   10f48:	ldr	pc, [ip, #240]!	; 0xf0

00010f4c <strtold@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #90112	; 0x16000
   10f54:	ldr	pc, [ip, #232]!	; 0xe8

00010f58 <fwrite_unlocked@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #90112	; 0x16000
   10f60:	ldr	pc, [ip, #224]!	; 0xe0

00010f64 <memcmp@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #90112	; 0x16000
   10f6c:	ldr	pc, [ip, #216]!	; 0xd8

00010f70 <dcgettext@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #90112	; 0x16000
   10f78:	ldr	pc, [ip, #208]!	; 0xd0

00010f7c <realloc@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #90112	; 0x16000
   10f84:	ldr	pc, [ip, #200]!	; 0xc8

00010f88 <textdomain@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #90112	; 0x16000
   10f90:	ldr	pc, [ip, #192]!	; 0xc0

00010f94 <iswprint@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #90112	; 0x16000
   10f9c:	ldr	pc, [ip, #184]!	; 0xb8

00010fa0 <fwrite@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #90112	; 0x16000
   10fa8:	ldr	pc, [ip, #176]!	; 0xb0

00010fac <lseek64@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #90112	; 0x16000
   10fb4:	ldr	pc, [ip, #168]!	; 0xa8

00010fb8 <__ctype_get_mb_cur_max@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #90112	; 0x16000
   10fc0:	ldr	pc, [ip, #160]!	; 0xa0

00010fc4 <strcpy@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #90112	; 0x16000
   10fcc:	ldr	pc, [ip, #152]!	; 0x98

00010fd0 <__fpending@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #90112	; 0x16000
   10fd8:	ldr	pc, [ip, #144]!	; 0x90

00010fdc <mbrtowc@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #90112	; 0x16000
   10fe4:	ldr	pc, [ip, #136]!	; 0x88

00010fe8 <error@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #90112	; 0x16000
   10ff0:	ldr	pc, [ip, #128]!	; 0x80

00010ff4 <__asprintf_chk@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #90112	; 0x16000
   10ffc:	ldr	pc, [ip, #120]!	; 0x78

00011000 <malloc@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #90112	; 0x16000
   11008:	ldr	pc, [ip, #112]!	; 0x70

0001100c <__libc_start_main@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #90112	; 0x16000
   11014:	ldr	pc, [ip, #104]!	; 0x68

00011018 <__freading@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #90112	; 0x16000
   11020:	ldr	pc, [ip, #96]!	; 0x60

00011024 <__gmon_start__@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #90112	; 0x16000
   1102c:	ldr	pc, [ip, #88]!	; 0x58

00011030 <getopt_long@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #90112	; 0x16000
   11038:	ldr	pc, [ip, #80]!	; 0x50

0001103c <__ctype_b_loc@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #90112	; 0x16000
   11044:	ldr	pc, [ip, #72]!	; 0x48

00011048 <exit@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #90112	; 0x16000
   11050:	ldr	pc, [ip, #64]!	; 0x40

00011054 <strlen@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #90112	; 0x16000
   1105c:	ldr	pc, [ip, #56]!	; 0x38

00011060 <strchr@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #90112	; 0x16000
   11068:	ldr	pc, [ip, #48]!	; 0x30

0001106c <__errno_location@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #90112	; 0x16000
   11074:	ldr	pc, [ip, #40]!	; 0x28

00011078 <__sprintf_chk@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #90112	; 0x16000
   11080:	ldr	pc, [ip, #32]!

00011084 <__cxa_atexit@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #90112	; 0x16000
   1108c:	ldr	pc, [ip, #24]!

00011090 <memset@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #90112	; 0x16000
   11098:	ldr	pc, [ip, #16]!

0001109c <__printf_chk@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #90112	; 0x16000
   110a4:	ldr	pc, [ip, #8]!

000110a8 <fileno@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #90112	; 0x16000
   110b0:	ldr	pc, [ip, #0]!

000110b4 <__fprintf_chk@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #86016	; 0x15000
   110bc:	ldr	pc, [ip, #4088]!	; 0xff8

000110c0 <memchr@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #86016	; 0x15000
   110c8:	ldr	pc, [ip, #4080]!	; 0xff0

000110cc <fclose@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #86016	; 0x15000
   110d4:	ldr	pc, [ip, #4072]!	; 0xfe8

000110d8 <fseeko64@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #86016	; 0x15000
   110e0:	ldr	pc, [ip, #4064]!	; 0xfe0

000110e4 <setlocale@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #86016	; 0x15000
   110ec:	ldr	pc, [ip, #4056]!	; 0xfd8

000110f0 <strrchr@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #86016	; 0x15000
   110f8:	ldr	pc, [ip, #4048]!	; 0xfd0

000110fc <nl_langinfo@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #86016	; 0x15000
   11104:	ldr	pc, [ip, #4040]!	; 0xfc8

00011108 <newlocale@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #86016	; 0x15000
   11110:	ldr	pc, [ip, #4032]!	; 0xfc0

00011114 <clearerr_unlocked@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #86016	; 0x15000
   1111c:	ldr	pc, [ip, #4024]!	; 0xfb8

00011120 <bindtextdomain@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #4016]!	; 0xfb0

0001112c <strncmp@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #4008]!	; 0xfa8

00011138 <abort@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #4000]!	; 0xfa0

00011144 <strspn@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3992]!	; 0xf98

00011150 <__mempcpy_chk@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3984]!	; 0xf90

Disassembly of section .text:

00011160 <.text>:
   11160:	mov	fp, #0
   11164:	mov	lr, #0
   11168:	pop	{r1}		; (ldr r1, [sp], #4)
   1116c:	mov	r2, sp
   11170:	push	{r2}		; (str r2, [sp, #-4]!)
   11174:	push	{r0}		; (str r0, [sp, #-4]!)
   11178:	ldr	ip, [pc, #16]	; 11190 <__mempcpy_chk@plt+0x40>
   1117c:	push	{ip}		; (str ip, [sp, #-4]!)
   11180:	ldr	r0, [pc, #12]	; 11194 <__mempcpy_chk@plt+0x44>
   11184:	ldr	r3, [pc, #12]	; 11198 <__mempcpy_chk@plt+0x48>
   11188:	bl	1100c <__libc_start_main@plt>
   1118c:	bl	11138 <abort@plt>
   11190:	andeq	r6, r1, r8, lsl #1
   11194:	andeq	r1, r1, r0, lsl r5
   11198:	andeq	r6, r1, r8, lsr #32
   1119c:	ldr	r3, [pc, #20]	; 111b8 <__mempcpy_chk@plt+0x68>
   111a0:	ldr	r2, [pc, #20]	; 111bc <__mempcpy_chk@plt+0x6c>
   111a4:	add	r3, pc, r3
   111a8:	ldr	r2, [r3, r2]
   111ac:	cmp	r2, #0
   111b0:	bxeq	lr
   111b4:	b	11024 <__gmon_start__@plt>
   111b8:	andeq	r5, r1, r4, asr lr
   111bc:	andeq	r0, r0, ip, ror #1
   111c0:	ldr	r0, [pc, #24]	; 111e0 <__mempcpy_chk@plt+0x90>
   111c4:	ldr	r3, [pc, #24]	; 111e4 <__mempcpy_chk@plt+0x94>
   111c8:	cmp	r3, r0
   111cc:	bxeq	lr
   111d0:	ldr	r3, [pc, #16]	; 111e8 <__mempcpy_chk@plt+0x98>
   111d4:	cmp	r3, #0
   111d8:	bxeq	lr
   111dc:	bx	r3
   111e0:	andeq	r7, r2, r0, asr #2
   111e4:	andeq	r7, r2, r0, asr #2
   111e8:	andeq	r0, r0, r0
   111ec:	ldr	r0, [pc, #36]	; 11218 <__mempcpy_chk@plt+0xc8>
   111f0:	ldr	r1, [pc, #36]	; 1121c <__mempcpy_chk@plt+0xcc>
   111f4:	sub	r1, r1, r0
   111f8:	asr	r1, r1, #2
   111fc:	add	r1, r1, r1, lsr #31
   11200:	asrs	r1, r1, #1
   11204:	bxeq	lr
   11208:	ldr	r3, [pc, #16]	; 11220 <__mempcpy_chk@plt+0xd0>
   1120c:	cmp	r3, #0
   11210:	bxeq	lr
   11214:	bx	r3
   11218:	andeq	r7, r2, r0, asr #2
   1121c:	andeq	r7, r2, r0, asr #2
   11220:	andeq	r0, r0, r0
   11224:	push	{r4, lr}
   11228:	ldr	r4, [pc, #24]	; 11248 <__mempcpy_chk@plt+0xf8>
   1122c:	ldrb	r3, [r4]
   11230:	cmp	r3, #0
   11234:	popne	{r4, pc}
   11238:	bl	111c0 <__mempcpy_chk@plt+0x70>
   1123c:	mov	r3, #1
   11240:	strb	r3, [r4]
   11244:	pop	{r4, pc}
   11248:	andeq	r7, r2, ip, asr r1
   1124c:	b	111ec <__mempcpy_chk@plt+0x9c>
   11250:	push	{fp, lr}
   11254:	mov	fp, sp
   11258:	sub	sp, sp, #64	; 0x40
   1125c:	mov	r4, r0
   11260:	cmp	r0, #0
   11264:	bne	114c8 <__mempcpy_chk@plt+0x378>
   11268:	movw	r1, #24795	; 0x60db
   1126c:	mov	r0, #0
   11270:	mov	r2, #5
   11274:	movt	r1, #1
   11278:	bl	10f70 <dcgettext@plt>
   1127c:	mov	r1, r0
   11280:	movw	r0, #29068	; 0x718c
   11284:	movt	r0, #2
   11288:	ldr	r2, [r0]
   1128c:	mov	r0, #1
   11290:	mov	r3, r2
   11294:	str	r2, [sp]
   11298:	bl	1109c <__printf_chk@plt>
   1129c:	movw	r1, #24899	; 0x6143
   112a0:	mov	r0, #0
   112a4:	mov	r2, #5
   112a8:	movt	r1, #1
   112ac:	bl	10f70 <dcgettext@plt>
   112b0:	movw	r7, #29012	; 0x7154
   112b4:	movt	r7, #2
   112b8:	ldr	r1, [r7]
   112bc:	bl	10ec8 <fputs_unlocked@plt>
   112c0:	movw	r1, #26200	; 0x6658
   112c4:	mov	r0, #0
   112c8:	mov	r2, #5
   112cc:	movt	r1, #1
   112d0:	bl	10f70 <dcgettext@plt>
   112d4:	ldr	r1, [r7]
   112d8:	bl	10ec8 <fputs_unlocked@plt>
   112dc:	movw	r1, #24957	; 0x617d
   112e0:	mov	r0, #0
   112e4:	mov	r2, #5
   112e8:	movt	r1, #1
   112ec:	bl	10f70 <dcgettext@plt>
   112f0:	ldr	r1, [r7]
   112f4:	bl	10ec8 <fputs_unlocked@plt>
   112f8:	movw	r1, #25169	; 0x6251
   112fc:	mov	r0, #0
   11300:	mov	r2, #5
   11304:	movt	r1, #1
   11308:	bl	10f70 <dcgettext@plt>
   1130c:	ldr	r1, [r7]
   11310:	bl	10ec8 <fputs_unlocked@plt>
   11314:	movw	r1, #25214	; 0x627e
   11318:	mov	r0, #0
   1131c:	mov	r2, #5
   11320:	movt	r1, #1
   11324:	bl	10f70 <dcgettext@plt>
   11328:	ldr	r1, [r7]
   1132c:	bl	10ec8 <fputs_unlocked@plt>
   11330:	movw	r1, #25268	; 0x62b4
   11334:	mov	r0, #0
   11338:	mov	r2, #5
   1133c:	movt	r1, #1
   11340:	bl	10f70 <dcgettext@plt>
   11344:	ldr	r1, [r7]
   11348:	bl	10ec8 <fputs_unlocked@plt>
   1134c:	movw	r1, #25781	; 0x64b5
   11350:	mov	r0, #0
   11354:	mov	r2, #5
   11358:	movt	r1, #1
   1135c:	bl	10f70 <dcgettext@plt>
   11360:	ldr	r1, [r7]
   11364:	bl	10ec8 <fputs_unlocked@plt>
   11368:	movw	r0, #27016	; 0x6988
   1136c:	mov	r2, #48	; 0x30
   11370:	add	r6, sp, #8
   11374:	movw	r5, #25989	; 0x6585
   11378:	movt	r0, #1
   1137c:	movt	r5, #1
   11380:	add	r1, r0, #32
   11384:	add	r3, r0, #16
   11388:	vld1.64	{d18-d19}, [r0], r2
   1138c:	vld1.64	{d16-d17}, [r1]
   11390:	vld1.64	{d20-d21}, [r3]
   11394:	add	r1, r6, #32
   11398:	vldr	d22, [r0]
   1139c:	add	r0, r6, #16
   113a0:	vst1.64	{d16-d17}, [r1]
   113a4:	movw	r1, #26275	; 0x66a3
   113a8:	vst1.64	{d20-d21}, [r0]
   113ac:	mov	r0, r6
   113b0:	vst1.64	{d18-d19}, [r0], r2
   113b4:	movt	r1, #1
   113b8:	vstr	d22, [r0]
   113bc:	mov	r0, r5
   113c0:	bl	10ee0 <strcmp@plt>
   113c4:	cmp	r0, #0
   113c8:	ldrne	r1, [r6, #8]!
   113cc:	cmpne	r1, #0
   113d0:	bne	113bc <__mempcpy_chk@plt+0x26c>
   113d4:	ldr	r6, [r6, #4]
   113d8:	movw	r1, #26370	; 0x6702
   113dc:	mov	r0, #0
   113e0:	mov	r2, #5
   113e4:	movt	r1, #1
   113e8:	bl	10f70 <dcgettext@plt>
   113ec:	movw	r2, #26024	; 0x65a8
   113f0:	movw	r3, #26393	; 0x6719
   113f4:	mov	r1, r0
   113f8:	mov	r0, #1
   113fc:	movt	r2, #1
   11400:	movt	r3, #1
   11404:	bl	1109c <__printf_chk@plt>
   11408:	cmp	r6, #0
   1140c:	mov	r0, #5
   11410:	mov	r1, #0
   11414:	moveq	r6, r5
   11418:	bl	110e4 <setlocale@plt>
   1141c:	cmp	r0, #0
   11420:	beq	11458 <__mempcpy_chk@plt+0x308>
   11424:	movw	r1, #26433	; 0x6741
   11428:	mov	r2, #3
   1142c:	movt	r1, #1
   11430:	bl	1112c <strncmp@plt>
   11434:	cmp	r0, #0
   11438:	beq	11458 <__mempcpy_chk@plt+0x308>
   1143c:	movw	r1, #26437	; 0x6745
   11440:	mov	r0, #0
   11444:	mov	r2, #5
   11448:	movt	r1, #1
   1144c:	bl	10f70 <dcgettext@plt>
   11450:	ldr	r1, [r7]
   11454:	bl	10ec8 <fputs_unlocked@plt>
   11458:	movw	r1, #26508	; 0x678c
   1145c:	mov	r0, #0
   11460:	mov	r2, #5
   11464:	movt	r1, #1
   11468:	bl	10f70 <dcgettext@plt>
   1146c:	movw	r2, #26393	; 0x6719
   11470:	mov	r1, r0
   11474:	mov	r0, #1
   11478:	mov	r3, r5
   1147c:	movt	r2, #1
   11480:	bl	1109c <__printf_chk@plt>
   11484:	movw	r1, #26535	; 0x67a7
   11488:	mov	r0, #0
   1148c:	mov	r2, #5
   11490:	movt	r1, #1
   11494:	bl	10f70 <dcgettext@plt>
   11498:	movw	r3, #26585	; 0x67d9
   1149c:	mov	r1, r0
   114a0:	movw	r0, #26303	; 0x66bf
   114a4:	cmp	r6, r5
   114a8:	mov	r2, r6
   114ac:	movt	r0, #1
   114b0:	movt	r3, #1
   114b4:	moveq	r3, r0
   114b8:	mov	r0, #1
   114bc:	bl	1109c <__printf_chk@plt>
   114c0:	mov	r0, r4
   114c4:	bl	11048 <exit@plt>
   114c8:	movw	r0, #29008	; 0x7150
   114cc:	movw	r1, #24756	; 0x60b4
   114d0:	mov	r2, #5
   114d4:	movt	r0, #2
   114d8:	movt	r1, #1
   114dc:	ldr	r5, [r0]
   114e0:	mov	r0, #0
   114e4:	bl	10f70 <dcgettext@plt>
   114e8:	mov	r2, r0
   114ec:	movw	r0, #29068	; 0x718c
   114f0:	mov	r1, #1
   114f4:	movt	r0, #2
   114f8:	ldr	r3, [r0]
   114fc:	mov	r0, r5
   11500:	bl	110b4 <__fprintf_chk@plt>
   11504:	mov	r0, r4
   11508:	bl	11048 <exit@plt>
   1150c:	nop	{0}
   11510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11514:	add	fp, sp, #28
   11518:	sub	sp, sp, #4
   1151c:	vpush	{d8-d14}
   11520:	sub	sp, sp, #80	; 0x50
   11524:	mov	r6, r0
   11528:	movw	r0, #26896	; 0x6910
   1152c:	str	r1, [sp, #32]
   11530:	movt	r0, #1
   11534:	vld1.64	{d16-d17}, [r0]
   11538:	add	r0, sp, #56	; 0x38
   1153c:	vst1.64	{d16-d17}, [r0]
   11540:	ldr	r0, [r1]
   11544:	bl	12dac <__mempcpy_chk@plt+0x1c5c>
   11548:	movw	r1, #26585	; 0x67d9
   1154c:	mov	r0, #6
   11550:	movt	r1, #1
   11554:	bl	110e4 <setlocale@plt>
   11558:	cmp	r0, #0
   1155c:	movw	r5, #29024	; 0x7160
   11560:	movw	r4, #26028	; 0x65ac
   11564:	movw	r1, #25993	; 0x6589
   11568:	movwne	r0, #1
   1156c:	movt	r5, #2
   11570:	movt	r4, #1
   11574:	movt	r1, #1
   11578:	strb	r0, [r5]
   1157c:	mov	r0, r4
   11580:	bl	11120 <bindtextdomain@plt>
   11584:	mov	r0, r4
   11588:	bl	10f88 <textdomain@plt>
   1158c:	movw	r0, #11416	; 0x2c98
   11590:	movt	r0, #1
   11594:	bl	1608c <__mempcpy_chk@plt+0x4f3c>
   11598:	movw	r0, #26912	; 0x6920
   1159c:	mov	r7, #0
   115a0:	movt	r0, #1
   115a4:	strb	r7, [r5, #1]
   115a8:	str	r0, [r5, #4]
   115ac:	movw	r0, #29000	; 0x7148
   115b0:	movt	r0, #2
   115b4:	ldr	r0, [r0]
   115b8:	cmp	r0, r6
   115bc:	bge	1169c <__mempcpy_chk@plt+0x54c>
   115c0:	movw	r4, #26017	; 0x65a1
   115c4:	movw	r5, #26916	; 0x6924
   115c8:	movw	sl, #29016	; 0x7158
   115cc:	mov	r8, #0
   115d0:	mov	r9, #1
   115d4:	mov	r7, #0
   115d8:	movt	r4, #1
   115dc:	movt	r5, #1
   115e0:	movt	sl, #2
   115e4:	ldr	r1, [sp, #32]
   115e8:	ldr	r1, [r1, r0, lsl #2]
   115ec:	ldrb	r2, [r1]
   115f0:	cmp	r2, #45	; 0x2d
   115f4:	bne	11610 <__mempcpy_chk@plt+0x4c0>
   115f8:	ldrb	r1, [r1, #1]
   115fc:	cmp	r1, #46	; 0x2e
   11600:	beq	1169c <__mempcpy_chk@plt+0x54c>
   11604:	sub	r1, r1, #48	; 0x30
   11608:	cmp	r1, #10
   1160c:	bcc	1169c <__mempcpy_chk@plt+0x54c>
   11610:	ldr	r1, [sp, #32]
   11614:	mov	r0, r6
   11618:	mov	r2, r4
   1161c:	mov	r3, r5
   11620:	str	r8, [sp]
   11624:	bl	11030 <getopt_long@plt>
   11628:	cmp	r0, #101	; 0x65
   1162c:	ble	11688 <__mempcpy_chk@plt+0x538>
   11630:	cmp	r0, #102	; 0x66
   11634:	beq	11654 <__mempcpy_chk@plt+0x504>
   11638:	cmp	r0, #115	; 0x73
   1163c:	bne	1165c <__mempcpy_chk@plt+0x50c>
   11640:	ldr	r0, [sl]
   11644:	movw	r1, #29024	; 0x7160
   11648:	movt	r1, #2
   1164c:	str	r0, [r1, #4]
   11650:	b	11670 <__mempcpy_chk@plt+0x520>
   11654:	ldr	r7, [sl]
   11658:	b	11670 <__mempcpy_chk@plt+0x520>
   1165c:	cmp	r0, #119	; 0x77
   11660:	bne	122ec <__mempcpy_chk@plt+0x119c>
   11664:	movw	r0, #29024	; 0x7160
   11668:	movt	r0, #2
   1166c:	strb	r9, [r0, #1]
   11670:	movw	r0, #29000	; 0x7148
   11674:	movt	r0, #2
   11678:	ldr	r0, [r0]
   1167c:	cmp	r0, r6
   11680:	blt	115e4 <__mempcpy_chk@plt+0x494>
   11684:	b	1169c <__mempcpy_chk@plt+0x54c>
   11688:	cmn	r0, #1
   1168c:	bne	12254 <__mempcpy_chk@plt+0x1104>
   11690:	movw	r0, #29000	; 0x7148
   11694:	movt	r0, #2
   11698:	ldr	r0, [r0]
   1169c:	subs	sl, r6, r0
   116a0:	beq	122b4 <__mempcpy_chk@plt+0x1164>
   116a4:	movw	r9, #29000	; 0x7148
   116a8:	cmp	sl, #4
   116ac:	movt	r9, #2
   116b0:	bcs	122c0 <__mempcpy_chk@plt+0x1170>
   116b4:	cmp	r7, #0
   116b8:	str	r6, [sp, #28]
   116bc:	beq	118f0 <__mempcpy_chk@plt+0x7a0>
   116c0:	mov	r6, #0
   116c4:	mov	r0, #0
   116c8:	ldrb	r1, [r7, r0]
   116cc:	cmp	r1, #37	; 0x25
   116d0:	bne	1170c <__mempcpy_chk@plt+0x5bc>
   116d4:	b	116f8 <__mempcpy_chk@plt+0x5a8>
   116d8:	cmp	r1, #37	; 0x25
   116dc:	mov	r1, #1
   116e0:	add	r6, r6, #1
   116e4:	movweq	r1, #2
   116e8:	add	r0, r1, r0
   116ec:	ldrb	r1, [r7, r0]
   116f0:	cmp	r1, #37	; 0x25
   116f4:	bne	1170c <__mempcpy_chk@plt+0x5bc>
   116f8:	add	r4, r0, #1
   116fc:	ldrb	r2, [r7, r4]
   11700:	cmp	r2, #37	; 0x25
   11704:	beq	116d8 <__mempcpy_chk@plt+0x588>
   11708:	b	11720 <__mempcpy_chk@plt+0x5d0>
   1170c:	cmp	r1, #0
   11710:	bne	116d8 <__mempcpy_chk@plt+0x588>
   11714:	movw	r1, #26628	; 0x6804
   11718:	movt	r1, #1
   1171c:	b	12224 <__mempcpy_chk@plt+0x10d4>
   11720:	movw	r1, #26658	; 0x6822
   11724:	add	r0, r7, r4
   11728:	movt	r1, #1
   1172c:	bl	11144 <strspn@plt>
   11730:	add	r4, r0, r4
   11734:	movw	r1, #26665	; 0x6829
   11738:	add	r0, r7, r4
   1173c:	movt	r1, #1
   11740:	bl	11144 <strspn@plt>
   11744:	add	r5, r4, r0
   11748:	mov	r9, sl
   1174c:	ldrb	r0, [r7, r5]
   11750:	cmp	r0, #46	; 0x2e
   11754:	bne	11774 <__mempcpy_chk@plt+0x624>
   11758:	movw	r1, #26665	; 0x6829
   1175c:	add	r4, r5, #1
   11760:	add	r0, r7, r4
   11764:	movt	r1, #1
   11768:	bl	11144 <strspn@plt>
   1176c:	add	r5, r0, r4
   11770:	ldrb	r0, [r7, r5]
   11774:	sub	r0, r0, #76	; 0x4c
   11778:	clz	r0, r0
   1177c:	lsr	sl, r0, #5
   11780:	add	r4, r5, sl
   11784:	ldrb	r1, [r7, r4]
   11788:	cmp	r1, #0
   1178c:	beq	122f4 <__mempcpy_chk@plt+0x11a4>
   11790:	movw	r0, #26697	; 0x6849
   11794:	mov	r2, #9
   11798:	movt	r0, #1
   1179c:	bl	110c0 <memchr@plt>
   117a0:	cmp	r0, #0
   117a4:	beq	12300 <__mempcpy_chk@plt+0x11b0>
   117a8:	add	r0, r4, #1
   117ac:	mov	r8, #0
   117b0:	ldrb	r1, [r7, r0]
   117b4:	cmp	r1, #37	; 0x25
   117b8:	bne	117f4 <__mempcpy_chk@plt+0x6a4>
   117bc:	b	117e0 <__mempcpy_chk@plt+0x690>
   117c0:	cmp	r1, #37	; 0x25
   117c4:	mov	r1, #1
   117c8:	add	r8, r8, #1
   117cc:	movweq	r1, #2
   117d0:	add	r0, r1, r0
   117d4:	ldrb	r1, [r7, r0]
   117d8:	cmp	r1, #37	; 0x25
   117dc:	bne	117f4 <__mempcpy_chk@plt+0x6a4>
   117e0:	add	r2, r7, r0
   117e4:	ldrb	r2, [r2, #1]
   117e8:	cmp	r2, #37	; 0x25
   117ec:	beq	117c0 <__mempcpy_chk@plt+0x670>
   117f0:	b	1221c <__mempcpy_chk@plt+0x10cc>
   117f4:	cmp	r1, #0
   117f8:	bne	117c0 <__mempcpy_chk@plt+0x670>
   117fc:	add	r0, r0, #2
   11800:	bl	15400 <__mempcpy_chk@plt+0x42b0>
   11804:	mov	r1, r7
   11808:	mov	r2, r5
   1180c:	mov	r4, r0
   11810:	bl	10f34 <memcpy@plt>
   11814:	mov	r0, #76	; 0x4c
   11818:	str	r4, [sp, #36]	; 0x24
   1181c:	add	r1, r7, r5
   11820:	strb	r0, [r4, r5]!
   11824:	add	r1, r1, sl
   11828:	add	r0, r4, #1
   1182c:	bl	10fc4 <strcpy@plt>
   11830:	movw	r0, #29024	; 0x7160
   11834:	movt	r0, #2
   11838:	ldrb	r0, [r0, #1]
   1183c:	cmp	r0, #1
   11840:	beq	1233c <__mempcpy_chk@plt+0x11ec>
   11844:	mov	sl, r9
   11848:	movw	r9, #29000	; 0x7148
   1184c:	mov	r0, #1
   11850:	movt	r9, #2
   11854:	str	r0, [sp, #24]
   11858:	cmp	sl, #3
   1185c:	bne	11910 <__mempcpy_chk@plt+0x7c0>
   11860:	ldr	r0, [r9]
   11864:	ldr	r1, [sp, #32]
   11868:	mov	r5, #0
   1186c:	add	r0, r1, r0, lsl #2
   11870:	ldr	r4, [r0, #4]
   11874:	ldrb	r0, [r4]
   11878:	sub	r0, r0, #48	; 0x30
   1187c:	cmp	r0, #9
   11880:	bhi	11914 <__mempcpy_chk@plt+0x7c4>
   11884:	mov	r0, r4
   11888:	bl	11054 <strlen@plt>
   1188c:	movw	r1, #26665	; 0x6829
   11890:	mov	r7, r0
   11894:	mov	r0, r4
   11898:	movt	r1, #1
   1189c:	bl	11144 <strspn@plt>
   118a0:	cmp	r7, r0
   118a4:	bne	11914 <__mempcpy_chk@plt+0x7c4>
   118a8:	movw	r3, #11252	; 0x2bf4
   118ac:	add	r2, sp, #56	; 0x38
   118b0:	mov	r0, r4
   118b4:	mov	r1, #0
   118b8:	mov	r5, #0
   118bc:	movt	r3, #1
   118c0:	bl	159a4 <__mempcpy_chk@plt+0x4854>
   118c4:	cmp	r0, #0
   118c8:	beq	11914 <__mempcpy_chk@plt+0x7c4>
   118cc:	vldr	d16, [sp, #56]	; 0x38
   118d0:	vcmpe.f64	d16, #0.0
   118d4:	vmrs	APSR_nzcv, fpscr
   118d8:	ble	11914 <__mempcpy_chk@plt+0x7c4>
   118dc:	vldr	d17, [pc, #876]	; 11c50 <__mempcpy_chk@plt+0xb00>
   118e0:	vcmpe.f64	d16, d17
   118e4:	vmrs	APSR_nzcv, fpscr
   118e8:	movls	r5, #1
   118ec:	b	11914 <__mempcpy_chk@plt+0x7c4>
   118f0:	mov	r0, #0
   118f4:	mov	r6, #0
   118f8:	mov	r8, #0
   118fc:	str	r0, [sp, #24]
   11900:	mov	r0, #0
   11904:	str	r0, [sp, #36]	; 0x24
   11908:	cmp	sl, #3
   1190c:	beq	11860 <__mempcpy_chk@plt+0x710>
   11910:	mov	r5, #1
   11914:	ldr	r9, [r9]
   11918:	ldr	r0, [sp, #32]
   1191c:	ldr	r4, [r0, r9, lsl #2]
   11920:	ldrb	r0, [r4]
   11924:	sub	r0, r0, #48	; 0x30
   11928:	cmp	r0, #9
   1192c:	bhi	11a70 <__mempcpy_chk@plt+0x920>
   11930:	mov	r0, r4
   11934:	bl	11054 <strlen@plt>
   11938:	movw	r1, #26665	; 0x6829
   1193c:	mov	r7, r0
   11940:	mov	r0, r4
   11944:	movt	r1, #1
   11948:	bl	11144 <strspn@plt>
   1194c:	cmp	r7, r0
   11950:	bne	11a70 <__mempcpy_chk@plt+0x920>
   11954:	cmp	sl, #1
   11958:	str	sl, [sp, #20]
   1195c:	bne	119e0 <__mempcpy_chk@plt+0x890>
   11960:	movw	r1, #29024	; 0x7160
   11964:	ldr	r2, [sp, #24]
   11968:	movt	r1, #2
   1196c:	ldrb	r0, [r1, #1]
   11970:	orr	r0, r2, r0
   11974:	tst	r0, #1
   11978:	bne	11a70 <__mempcpy_chk@plt+0x920>
   1197c:	ldr	r0, [r1, #4]
   11980:	bl	11054 <strlen@plt>
   11984:	cmp	r0, #1
   11988:	bne	11a70 <__mempcpy_chk@plt+0x920>
   1198c:	ldr	r1, [sp, #20]
   11990:	vldr	d16, [sp, #56]	; 0x38
   11994:	ldr	r7, [sp, #32]
   11998:	movw	r0, #26155	; 0x662b
   1199c:	movt	r0, #1
   119a0:	cmp	r1, #1
   119a4:	moveq	r4, r0
   119a8:	add	r0, r1, r9
   119ac:	add	r5, r7, r0, lsl #2
   119b0:	vmov	r0, r1, d16
   119b4:	bl	15fe8 <__mempcpy_chk@plt+0x4e98>
   119b8:	mov	r3, r1
   119bc:	ldr	r1, [r5, #-4]
   119c0:	mov	r2, r0
   119c4:	mov	r0, r4
   119c8:	bl	123b0 <__mempcpy_chk@plt+0x1260>
   119cc:	movw	r0, #29000	; 0x7148
   119d0:	movt	r0, #2
   119d4:	ldr	r9, [r0]
   119d8:	ldr	r4, [r7, r9, lsl #2]
   119dc:	b	11a70 <__mempcpy_chk@plt+0x920>
   119e0:	ldr	r0, [sp, #32]
   119e4:	add	sl, r0, r9, lsl #2
   119e8:	ldr	r7, [sl, #4]
   119ec:	ldrb	r0, [r7]
   119f0:	sub	r0, r0, #48	; 0x30
   119f4:	cmp	r0, #9
   119f8:	bhi	11a70 <__mempcpy_chk@plt+0x920>
   119fc:	mov	r0, r7
   11a00:	bl	11054 <strlen@plt>
   11a04:	movw	r1, #26665	; 0x6829
   11a08:	str	r0, [sp, #16]
   11a0c:	mov	r0, r7
   11a10:	movt	r1, #1
   11a14:	bl	11144 <strspn@plt>
   11a18:	ldr	r1, [sp, #16]
   11a1c:	cmp	r1, r0
   11a20:	bne	11a70 <__mempcpy_chk@plt+0x920>
   11a24:	ldr	r0, [sp, #20]
   11a28:	cmp	r0, #3
   11a2c:	bcc	11960 <__mempcpy_chk@plt+0x810>
   11a30:	cmp	r5, #0
   11a34:	beq	11a70 <__mempcpy_chk@plt+0x920>
   11a38:	ldr	r7, [sl, #8]
   11a3c:	ldrb	r0, [r7]
   11a40:	sub	r0, r0, #48	; 0x30
   11a44:	cmp	r0, #9
   11a48:	bhi	11a70 <__mempcpy_chk@plt+0x920>
   11a4c:	mov	r0, r7
   11a50:	bl	11054 <strlen@plt>
   11a54:	movw	r1, #26665	; 0x6829
   11a58:	mov	r5, r0
   11a5c:	mov	r0, r7
   11a60:	movt	r1, #1
   11a64:	bl	11144 <strspn@plt>
   11a68:	cmp	r5, r0
   11a6c:	beq	11960 <__mempcpy_chk@plt+0x810>
   11a70:	movw	r7, #29000	; 0x7148
   11a74:	add	r0, r9, #1
   11a78:	mov	r1, r4
   11a7c:	movt	r7, #2
   11a80:	str	r0, [r7]
   11a84:	add	r0, sp, #40	; 0x28
   11a88:	bl	1287c <__mempcpy_chk@plt+0x172c>
   11a8c:	ldr	r0, [r7]
   11a90:	ldr	r5, [sp, #28]
   11a94:	ldr	lr, [sp, #40]	; 0x28
   11a98:	ldr	r9, [sp, #44]	; 0x2c
   11a9c:	ldr	r2, [sp, #48]	; 0x30
   11aa0:	ldr	r1, [sp, #52]	; 0x34
   11aa4:	cmp	r0, r5
   11aa8:	bge	11c58 <__mempcpy_chk@plt+0xb08>
   11aac:	str	r1, [sp, #16]
   11ab0:	add	r1, r0, #1
   11ab4:	mov	r4, lr
   11ab8:	str	r2, [sp, #20]
   11abc:	str	r1, [r7]
   11ac0:	ldr	r1, [sp, #32]
   11ac4:	ldr	r1, [r1, r0, lsl #2]
   11ac8:	add	r0, sp, #40	; 0x28
   11acc:	bl	1287c <__mempcpy_chk@plt+0x172c>
   11ad0:	ldr	r0, [r7]
   11ad4:	ldr	lr, [sp, #40]	; 0x28
   11ad8:	ldr	r3, [sp, #44]	; 0x2c
   11adc:	ldr	r2, [sp, #48]	; 0x30
   11ae0:	ldr	r1, [sp, #52]	; 0x34
   11ae4:	cmp	r0, r5
   11ae8:	bge	11b34 <__mempcpy_chk@plt+0x9e4>
   11aec:	vmov	d16, lr, r3
   11af0:	str	r2, [sp, #64]	; 0x40
   11af4:	str	lr, [sp, #56]	; 0x38
   11af8:	str	r1, [sp, #68]	; 0x44
   11afc:	str	r3, [sp, #60]	; 0x3c
   11b00:	vcmp.f64	d16, #0.0
   11b04:	vmrs	APSR_nzcv, fpscr
   11b08:	beq	12368 <__mempcpy_chk@plt+0x1218>
   11b0c:	add	r1, r0, #1
   11b10:	str	r1, [r7]
   11b14:	ldr	r1, [sp, #32]
   11b18:	ldr	r1, [r1, r0, lsl #2]
   11b1c:	add	r0, sp, #40	; 0x28
   11b20:	bl	1287c <__mempcpy_chk@plt+0x172c>
   11b24:	ldr	lr, [sp, #40]	; 0x28
   11b28:	ldr	r3, [sp, #44]	; 0x2c
   11b2c:	ldr	r2, [sp, #48]	; 0x30
   11b30:	ldr	r1, [sp, #52]	; 0x34
   11b34:	ldr	ip, [sp, #16]
   11b38:	mov	r5, r4
   11b3c:	mov	r7, r4
   11b40:	mov	r4, r9
   11b44:	cmp	ip, #0
   11b48:	bne	11c8c <__mempcpy_chk@plt+0xb3c>
   11b4c:	cmp	r1, #0
   11b50:	ldreq	r0, [sp, #68]	; 0x44
   11b54:	cmpeq	r0, #0
   11b58:	bne	11c84 <__mempcpy_chk@plt+0xb34>
   11b5c:	vmov	d9, r7, r4
   11b60:	vcmpe.f64	d9, #0.0
   11b64:	vmrs	APSR_nzcv, fpscr
   11b68:	blt	11c84 <__mempcpy_chk@plt+0xb34>
   11b6c:	vmov.i32	d16, #0	; 0x00000000
   11b70:	vmul.f64	d16, d9, d16
   11b74:	vcmp.f64	d16, #0.0
   11b78:	vmrs	APSR_nzcv, fpscr
   11b7c:	bne	11c84 <__mempcpy_chk@plt+0xb34>
   11b80:	vmov	d8, lr, r3
   11b84:	vcmpe.f64	d8, #0.0
   11b88:	vmrs	APSR_nzcv, fpscr
   11b8c:	blt	11c84 <__mempcpy_chk@plt+0xb34>
   11b90:	vldr	d16, [sp, #56]	; 0x38
   11b94:	str	r1, [sp, #28]
   11b98:	movw	r1, #29024	; 0x7160
   11b9c:	movt	r1, #2
   11ba0:	vcmpe.f64	d16, #0.0
   11ba4:	vmrs	APSR_nzcv, fpscr
   11ba8:	ble	12174 <__mempcpy_chk@plt+0x1024>
   11bac:	vldr	d17, [pc, #156]	; 11c50 <__mempcpy_chk@plt+0xb00>
   11bb0:	vcmpe.f64	d16, d17
   11bb4:	vmrs	APSR_nzcv, fpscr
   11bb8:	bhi	12174 <__mempcpy_chk@plt+0x1024>
   11bbc:	str	r2, [sp, #16]
   11bc0:	ldrb	r0, [r1, #1]
   11bc4:	ldr	r2, [sp, #24]
   11bc8:	mov	r5, r7
   11bcc:	orr	r0, r2, r0
   11bd0:	tst	r0, #1
   11bd4:	bne	1216c <__mempcpy_chk@plt+0x101c>
   11bd8:	ldr	r0, [r1, #4]
   11bdc:	str	r4, [sp, #12]
   11be0:	mov	r7, ip
   11be4:	str	r3, [sp, #32]
   11be8:	str	lr, [sp, #24]
   11bec:	bl	11054 <strlen@plt>
   11bf0:	cmp	r0, #1
   11bf4:	bne	121f4 <__mempcpy_chk@plt+0x10a4>
   11bf8:	movw	r2, #26190	; 0x664e
   11bfc:	add	r0, sp, #40	; 0x28
   11c00:	mov	r1, #1
   11c04:	vstr	d9, [sp]
   11c08:	movt	r2, #1
   11c0c:	bl	10ff4 <__asprintf_chk@plt>
   11c10:	cmn	r0, #1
   11c14:	ble	12250 <__mempcpy_chk@plt+0x1100>
   11c18:	vmov.i32	d16, #0	; 0x00000000
   11c1c:	vmul.f64	d16, d8, d16
   11c20:	vcmp.f64	d16, #0.0
   11c24:	vmrs	APSR_nzcv, fpscr
   11c28:	bne	12190 <__mempcpy_chk@plt+0x1040>
   11c2c:	movw	r2, #26190	; 0x664e
   11c30:	add	r0, sp, #76	; 0x4c
   11c34:	mov	r1, #1
   11c38:	vstr	d8, [sp]
   11c3c:	movt	r2, #1
   11c40:	bl	10ff4 <__asprintf_chk@plt>
   11c44:	cmn	r0, #1
   11c48:	bgt	121a0 <__mempcpy_chk@plt+0x1050>
   11c4c:	b	12250 <__mempcpy_chk@plt+0x1100>
   11c50:	andeq	r0, r0, r0
   11c54:	rsbmi	r0, r9, r0
   11c58:	movw	r4, #0
   11c5c:	mov	r0, #1
   11c60:	mov	r7, #0
   11c64:	mov	ip, #0
   11c68:	mov	r3, r9
   11c6c:	movt	r4, #16368	; 0x3ff0
   11c70:	str	r0, [sp, #20]
   11c74:	cmp	r1, #0
   11c78:	ldreq	r0, [sp, #68]	; 0x44
   11c7c:	cmpeq	r0, #0
   11c80:	beq	11b5c <__mempcpy_chk@plt+0xa0c>
   11c84:	mov	r5, r7
   11c88:	mov	r9, r4
   11c8c:	ldr	r0, [sp, #36]	; 0x24
   11c90:	cmp	r0, #0
   11c94:	bne	11cbc <__mempcpy_chk@plt+0xb6c>
   11c98:	ldr	r0, [sp, #68]	; 0x44
   11c9c:	movw	r4, #26890	; 0x690a
   11ca0:	movt	r4, #1
   11ca4:	str	r4, [sp, #36]	; 0x24
   11ca8:	cmp	ip, r0
   11cac:	movgt	r0, ip
   11cb0:	cmn	r1, #-2147483647	; 0x80000001
   11cb4:	cmnne	r0, #-2147483647	; 0x80000001
   11cb8:	bne	12024 <__mempcpy_chk@plt+0xed4>
   11cbc:	vldr	d8, [sp, #56]	; 0x38
   11cc0:	vmov	d9, lr, r3
   11cc4:	vmov	d10, r5, r9
   11cc8:	mov	r1, #0
   11ccc:	mov	r0, #0
   11cd0:	vcmpe.f64	d10, d9
   11cd4:	vmrs	APSR_nzcv, fpscr
   11cd8:	vcmpe.f64	d9, d10
   11cdc:	movwmi	r1, #1
   11ce0:	vmrs	APSR_nzcv, fpscr
   11ce4:	vcmpe.f64	d8, #0.0
   11ce8:	movwmi	r0, #1
   11cec:	vmrs	APSR_nzcv, fpscr
   11cf0:	movmi	r0, r1
   11cf4:	cmp	r0, #0
   11cf8:	bne	12124 <__mempcpy_chk@plt+0xfd4>
   11cfc:	ldr	r7, [sp, #36]	; 0x24
   11d00:	mov	r0, #1
   11d04:	mov	r2, r5
   11d08:	mov	r3, r9
   11d0c:	str	r6, [sp, #32]
   11d10:	mov	r1, r7
   11d14:	bl	1109c <__printf_chk@plt>
   11d18:	movw	r5, #29024	; 0x7160
   11d1c:	cmp	r0, #0
   11d20:	movt	r5, #2
   11d24:	blt	12020 <__mempcpy_chk@plt+0xed0>
   11d28:	vcmpe.f64	d8, #0.0
   11d2c:	vmov.f64	d11, #112	; 0x3f800000  1.0
   11d30:	mov	r6, #0
   11d34:	vmrs	APSR_nzcv, fpscr
   11d38:	bpl	11eb0 <__mempcpy_chk@plt+0xd60>
   11d3c:	movw	sl, #29012	; 0x7154
   11d40:	mov	r4, #0
   11d44:	vorr	d14, d10, d10
   11d48:	vmov.f64	d12, d11
   11d4c:	movt	sl, #2
   11d50:	tst	r4, #1
   11d54:	bne	12104 <__mempcpy_chk@plt+0xfb4>
   11d58:	vmov.f64	d13, d10
   11d5c:	mov	r4, #0
   11d60:	vmla.f64	d13, d8, d12
   11d64:	vcmpe.f64	d13, d9
   11d68:	vmrs	APSR_nzcv, fpscr
   11d6c:	movwmi	r4, #1
   11d70:	bpl	11e78 <__mempcpy_chk@plt+0xd28>
   11d74:	ldrb	r0, [r5]
   11d78:	cmp	r0, #0
   11d7c:	beq	11d90 <__mempcpy_chk@plt+0xc40>
   11d80:	movw	r1, #26894	; 0x690e
   11d84:	mov	r0, #1
   11d88:	movt	r1, #1
   11d8c:	bl	110e4 <setlocale@plt>
   11d90:	add	r0, sp, #76	; 0x4c
   11d94:	mov	r1, #1
   11d98:	mov	r2, r7
   11d9c:	vstr	d13, [sp]
   11da0:	bl	10ff4 <__asprintf_chk@plt>
   11da4:	mov	r9, r0
   11da8:	ldrb	r0, [r5]
   11dac:	cmp	r0, #0
   11db0:	beq	11dc4 <__mempcpy_chk@plt+0xc74>
   11db4:	movw	r1, #26585	; 0x67d9
   11db8:	mov	r0, #1
   11dbc:	movt	r1, #1
   11dc0:	bl	110e4 <setlocale@plt>
   11dc4:	cmp	r9, #0
   11dc8:	blt	12250 <__mempcpy_chk@plt+0x1100>
   11dcc:	ldr	r1, [sp, #76]	; 0x4c
   11dd0:	sub	r0, r9, r8
   11dd4:	movw	r3, #11252	; 0x2bf4
   11dd8:	add	r2, sp, #40	; 0x28
   11ddc:	movt	r3, #1
   11de0:	strb	r6, [r1, r0]
   11de4:	ldr	r1, [sp, #32]
   11de8:	ldr	r0, [sp, #76]	; 0x4c
   11dec:	add	r0, r0, r1
   11df0:	mov	r1, #0
   11df4:	bl	159a4 <__mempcpy_chk@plt+0x4854>
   11df8:	cmp	r0, #0
   11dfc:	beq	120fc <__mempcpy_chk@plt+0xfac>
   11e00:	vldr	d16, [sp, #40]	; 0x28
   11e04:	vcmp.f64	d16, d9
   11e08:	vmrs	APSR_nzcv, fpscr
   11e0c:	bne	120fc <__mempcpy_chk@plt+0xfac>
   11e10:	ldr	r7, [sp, #36]	; 0x24
   11e14:	add	r0, sp, #72	; 0x48
   11e18:	mov	r1, #1
   11e1c:	str	r6, [sp, #72]	; 0x48
   11e20:	vstr	d14, [sp]
   11e24:	mov	r2, r7
   11e28:	bl	10ff4 <__asprintf_chk@plt>
   11e2c:	cmp	r0, #0
   11e30:	blt	12250 <__mempcpy_chk@plt+0x1100>
   11e34:	ldr	r1, [sp, #72]	; 0x48
   11e38:	sub	r0, r0, r8
   11e3c:	strb	r6, [r1, r0]
   11e40:	ldr	r5, [sp, #72]	; 0x48
   11e44:	ldr	r1, [sp, #76]	; 0x4c
   11e48:	mov	r0, r5
   11e4c:	bl	10ee0 <strcmp@plt>
   11e50:	mov	r6, r0
   11e54:	mov	r0, r5
   11e58:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   11e5c:	ldr	r0, [sp, #76]	; 0x4c
   11e60:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   11e64:	cmp	r6, #0
   11e68:	beq	12104 <__mempcpy_chk@plt+0xfb4>
   11e6c:	movw	r5, #29024	; 0x7160
   11e70:	mov	r6, #0
   11e74:	movt	r5, #2
   11e78:	ldr	r1, [sl]
   11e7c:	ldr	r0, [r5, #4]
   11e80:	bl	10ec8 <fputs_unlocked@plt>
   11e84:	cmn	r0, #1
   11e88:	beq	12020 <__mempcpy_chk@plt+0xed0>
   11e8c:	vmov	r2, r3, d13
   11e90:	mov	r0, #1
   11e94:	mov	r1, r7
   11e98:	bl	1109c <__printf_chk@plt>
   11e9c:	vadd.f64	d12, d12, d11
   11ea0:	cmn	r0, #1
   11ea4:	vorr	d14, d13, d13
   11ea8:	bgt	11d50 <__mempcpy_chk@plt+0xc00>
   11eac:	b	12020 <__mempcpy_chk@plt+0xed0>
   11eb0:	movw	r4, #29012	; 0x7154
   11eb4:	mov	sl, #0
   11eb8:	vorr	d14, d10, d10
   11ebc:	vmov.f64	d12, d11
   11ec0:	movt	r4, #2
   11ec4:	tst	sl, #1
   11ec8:	bne	12104 <__mempcpy_chk@plt+0xfb4>
   11ecc:	vmov.f64	d13, d10
   11ed0:	mov	sl, #0
   11ed4:	vmla.f64	d13, d8, d12
   11ed8:	vcmpe.f64	d13, d9
   11edc:	vmrs	APSR_nzcv, fpscr
   11ee0:	movwgt	sl, #1
   11ee4:	ble	11fec <__mempcpy_chk@plt+0xe9c>
   11ee8:	ldrb	r0, [r5]
   11eec:	cmp	r0, #0
   11ef0:	beq	11f04 <__mempcpy_chk@plt+0xdb4>
   11ef4:	movw	r1, #26894	; 0x690e
   11ef8:	mov	r0, #1
   11efc:	movt	r1, #1
   11f00:	bl	110e4 <setlocale@plt>
   11f04:	add	r0, sp, #76	; 0x4c
   11f08:	mov	r1, #1
   11f0c:	mov	r2, r7
   11f10:	vstr	d13, [sp]
   11f14:	bl	10ff4 <__asprintf_chk@plt>
   11f18:	mov	r9, r0
   11f1c:	ldrb	r0, [r5]
   11f20:	cmp	r0, #0
   11f24:	beq	11f38 <__mempcpy_chk@plt+0xde8>
   11f28:	movw	r1, #26585	; 0x67d9
   11f2c:	mov	r0, #1
   11f30:	movt	r1, #1
   11f34:	bl	110e4 <setlocale@plt>
   11f38:	cmn	r9, #1
   11f3c:	ble	12250 <__mempcpy_chk@plt+0x1100>
   11f40:	ldr	r1, [sp, #76]	; 0x4c
   11f44:	sub	r0, r9, r8
   11f48:	movw	r3, #11252	; 0x2bf4
   11f4c:	add	r2, sp, #40	; 0x28
   11f50:	movt	r3, #1
   11f54:	strb	r6, [r1, r0]
   11f58:	ldr	r1, [sp, #32]
   11f5c:	ldr	r0, [sp, #76]	; 0x4c
   11f60:	add	r0, r0, r1
   11f64:	mov	r1, #0
   11f68:	bl	159a4 <__mempcpy_chk@plt+0x4854>
   11f6c:	cmp	r0, #0
   11f70:	beq	120fc <__mempcpy_chk@plt+0xfac>
   11f74:	vldr	d16, [sp, #40]	; 0x28
   11f78:	vcmp.f64	d16, d9
   11f7c:	vmrs	APSR_nzcv, fpscr
   11f80:	bne	120fc <__mempcpy_chk@plt+0xfac>
   11f84:	ldr	r7, [sp, #36]	; 0x24
   11f88:	add	r0, sp, #72	; 0x48
   11f8c:	mov	r1, #1
   11f90:	str	r6, [sp, #72]	; 0x48
   11f94:	vstr	d14, [sp]
   11f98:	mov	r2, r7
   11f9c:	bl	10ff4 <__asprintf_chk@plt>
   11fa0:	cmn	r0, #1
   11fa4:	ble	12250 <__mempcpy_chk@plt+0x1100>
   11fa8:	ldr	r1, [sp, #72]	; 0x48
   11fac:	sub	r0, r0, r8
   11fb0:	strb	r6, [r1, r0]
   11fb4:	ldr	r5, [sp, #72]	; 0x48
   11fb8:	ldr	r1, [sp, #76]	; 0x4c
   11fbc:	mov	r0, r5
   11fc0:	bl	10ee0 <strcmp@plt>
   11fc4:	mov	r6, r0
   11fc8:	mov	r0, r5
   11fcc:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   11fd0:	ldr	r0, [sp, #76]	; 0x4c
   11fd4:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   11fd8:	cmp	r6, #0
   11fdc:	beq	12104 <__mempcpy_chk@plt+0xfb4>
   11fe0:	movw	r5, #29024	; 0x7160
   11fe4:	mov	r6, #0
   11fe8:	movt	r5, #2
   11fec:	ldr	r1, [r4]
   11ff0:	ldr	r0, [r5, #4]
   11ff4:	bl	10ec8 <fputs_unlocked@plt>
   11ff8:	cmn	r0, #1
   11ffc:	beq	12020 <__mempcpy_chk@plt+0xed0>
   12000:	vmov	r2, r3, d13
   12004:	mov	r0, #1
   12008:	mov	r1, r7
   1200c:	bl	1109c <__printf_chk@plt>
   12010:	vadd.f64	d12, d12, d11
   12014:	cmp	r0, #0
   12018:	vorr	d14, d13, d13
   1201c:	bge	11ec4 <__mempcpy_chk@plt+0xd74>
   12020:	bl	12bb0 <__mempcpy_chk@plt+0x1a60>
   12024:	mov	r4, r2
   12028:	movw	r2, #29024	; 0x7160
   1202c:	str	r5, [sp, #28]
   12030:	mov	r5, r1
   12034:	str	r3, [sp, #32]
   12038:	movt	r2, #2
   1203c:	ldrb	r1, [r2, #1]
   12040:	cmp	r1, #1
   12044:	bne	12138 <__mempcpy_chk@plt+0xfe8>
   12048:	ldr	r1, [sp, #20]
   1204c:	clz	r3, ip
   12050:	cmp	r0, #0
   12054:	mov	r2, r0
   12058:	mov	r7, r5
   1205c:	movwne	r2, #1
   12060:	lsr	r3, r3, #5
   12064:	cmp	r5, #0
   12068:	and	r3, r3, r2
   1206c:	movwne	r7, #1
   12070:	sub	r1, r1, ip
   12074:	add	r1, r1, r0
   12078:	add	r3, r1, r3
   1207c:	sub	r1, r4, r5
   12080:	clz	r5, r5
   12084:	add	ip, r1, r0
   12088:	clz	r1, r0
   1208c:	lsr	r5, r5, #5
   12090:	lsr	r1, r1, #5
   12094:	and	r2, r5, r2
   12098:	ldr	r5, [sp, #28]
   1209c:	and	r1, r7, r1
   120a0:	sub	r1, ip, r1
   120a4:	add	r1, r1, r2
   120a8:	cmp	r3, r1
   120ac:	movhi	r1, r3
   120b0:	ldr	r3, [sp, #32]
   120b4:	cmp	r1, #0
   120b8:	blt	11cbc <__mempcpy_chk@plt+0xb6c>
   120bc:	str	r0, [sp, #4]
   120c0:	movw	r0, #29024	; 0x7160
   120c4:	movw	r3, #26871	; 0x68f7
   120c8:	str	r1, [sp]
   120cc:	mov	r1, #1
   120d0:	mov	r2, #28
   120d4:	mov	r7, lr
   120d8:	movt	r0, #2
   120dc:	movt	r3, #1
   120e0:	add	r0, r0, #8
   120e4:	str	r0, [sp, #36]	; 0x24
   120e8:	bl	11078 <__sprintf_chk@plt>
   120ec:	ldr	r5, [sp, #28]
   120f0:	ldr	r3, [sp, #32]
   120f4:	mov	lr, r7
   120f8:	b	11cbc <__mempcpy_chk@plt+0xb6c>
   120fc:	ldr	r0, [sp, #76]	; 0x4c
   12100:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   12104:	movw	r0, #29012	; 0x7154
   12108:	movt	r0, #2
   1210c:	ldr	r1, [r0]
   12110:	movw	r0, #26912	; 0x6920
   12114:	movt	r0, #1
   12118:	bl	10ec8 <fputs_unlocked@plt>
   1211c:	cmn	r0, #1
   12120:	beq	12020 <__mempcpy_chk@plt+0xed0>
   12124:	mov	r0, #0
   12128:	sub	sp, fp, #88	; 0x58
   1212c:	vpop	{d8-d14}
   12130:	add	sp, sp, #4
   12134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12138:	movw	r3, #26882	; 0x6902
   1213c:	str	r0, [sp]
   12140:	add	r0, r2, #8
   12144:	mov	r1, #1
   12148:	mov	r2, #28
   1214c:	mov	r5, lr
   12150:	movt	r3, #1
   12154:	str	r0, [sp, #36]	; 0x24
   12158:	bl	11078 <__sprintf_chk@plt>
   1215c:	mov	lr, r5
   12160:	ldr	r3, [sp, #32]
   12164:	ldr	r5, [sp, #28]
   12168:	b	11cbc <__mempcpy_chk@plt+0xb6c>
   1216c:	mov	r9, r4
   12170:	b	12204 <__mempcpy_chk@plt+0x10b4>
   12174:	ldr	r1, [sp, #28]
   12178:	mov	r5, r7
   1217c:	mov	r9, r4
   12180:	ldr	r0, [sp, #36]	; 0x24
   12184:	cmp	r0, #0
   12188:	bne	11cbc <__mempcpy_chk@plt+0xb6c>
   1218c:	b	11c98 <__mempcpy_chk@plt+0xb48>
   12190:	movw	r0, #26196	; 0x6654
   12194:	movt	r0, #1
   12198:	bl	15920 <__mempcpy_chk@plt+0x47d0>
   1219c:	str	r0, [sp, #76]	; 0x4c
   121a0:	ldr	r4, [sp, #40]	; 0x28
   121a4:	ldrb	r0, [r4]
   121a8:	cmp	r0, #45	; 0x2d
   121ac:	beq	121e4 <__mempcpy_chk@plt+0x1094>
   121b0:	ldr	r9, [sp, #76]	; 0x4c
   121b4:	ldrb	r0, [r9]
   121b8:	cmp	r0, #45	; 0x2d
   121bc:	beq	121e4 <__mempcpy_chk@plt+0x1094>
   121c0:	vldr	d16, [sp, #56]	; 0x38
   121c4:	vmov	r0, r1, d16
   121c8:	bl	15fe8 <__mempcpy_chk@plt+0x4e98>
   121cc:	mov	r2, r0
   121d0:	mov	r3, r1
   121d4:	mov	r0, r4
   121d8:	mov	r1, r9
   121dc:	bl	123b0 <__mempcpy_chk@plt+0x1260>
   121e0:	ldr	r4, [sp, #40]	; 0x28
   121e4:	mov	r0, r4
   121e8:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   121ec:	ldr	r0, [sp, #76]	; 0x4c
   121f0:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   121f4:	ldr	r9, [sp, #12]
   121f8:	ldr	lr, [sp, #24]
   121fc:	ldr	r3, [sp, #32]
   12200:	mov	ip, r7
   12204:	ldr	r1, [sp, #28]
   12208:	ldr	r2, [sp, #16]
   1220c:	ldr	r0, [sp, #36]	; 0x24
   12210:	cmp	r0, #0
   12214:	bne	11cbc <__mempcpy_chk@plt+0xb6c>
   12218:	b	11c98 <__mempcpy_chk@plt+0xb48>
   1221c:	movw	r1, #26743	; 0x6877
   12220:	movt	r1, #1
   12224:	mov	r0, #0
   12228:	mov	r2, #5
   1222c:	bl	10f70 <dcgettext@plt>
   12230:	mov	r4, r0
   12234:	mov	r0, r7
   12238:	bl	14d28 <__mempcpy_chk@plt+0x3bd8>
   1223c:	mov	r3, r0
   12240:	mov	r0, #1
   12244:	mov	r1, #0
   12248:	mov	r2, r4
   1224c:	bl	10fe8 <error@plt>
   12250:	bl	15960 <__mempcpy_chk@plt+0x4810>
   12254:	cmn	r0, #3
   12258:	bne	122a4 <__mempcpy_chk@plt+0x1154>
   1225c:	movw	r0, #28920	; 0x70f8
   12260:	movw	r2, #26038	; 0x65b6
   12264:	mov	r1, #0
   12268:	movt	r0, #2
   1226c:	movt	r2, #1
   12270:	str	r1, [sp, #4]
   12274:	movw	r1, #25989	; 0x6585
   12278:	ldr	r3, [r0]
   1227c:	movw	r0, #29012	; 0x7154
   12280:	str	r2, [sp]
   12284:	movw	r2, #26024	; 0x65a8
   12288:	movt	r1, #1
   1228c:	movt	r0, #2
   12290:	movt	r2, #1
   12294:	ldr	r0, [r0]
   12298:	bl	151cc <__mempcpy_chk@plt+0x407c>
   1229c:	mov	r0, #0
   122a0:	bl	11048 <exit@plt>
   122a4:	cmn	r0, #2
   122a8:	bne	122ec <__mempcpy_chk@plt+0x119c>
   122ac:	mov	r0, #0
   122b0:	bl	11250 <__mempcpy_chk@plt+0x100>
   122b4:	movw	r1, #26053	; 0x65c5
   122b8:	movt	r1, #1
   122bc:	b	12344 <__mempcpy_chk@plt+0x11f4>
   122c0:	movw	r1, #26069	; 0x65d5
   122c4:	mov	r0, #0
   122c8:	mov	r2, #5
   122cc:	movt	r1, #1
   122d0:	bl	10f70 <dcgettext@plt>
   122d4:	mov	r4, r0
   122d8:	ldr	r0, [r9]
   122dc:	ldr	r1, [sp, #32]
   122e0:	add	r0, r1, r0, lsl #2
   122e4:	ldr	r0, [r0, #12]
   122e8:	b	12390 <__mempcpy_chk@plt+0x1240>
   122ec:	mov	r0, #1
   122f0:	bl	11250 <__mempcpy_chk@plt+0x100>
   122f4:	movw	r1, #26676	; 0x6834
   122f8:	movt	r1, #1
   122fc:	b	12224 <__mempcpy_chk@plt+0x10d4>
   12300:	movw	r1, #26706	; 0x6852
   12304:	mov	r0, #0
   12308:	mov	r2, #5
   1230c:	movt	r1, #1
   12310:	bl	10f70 <dcgettext@plt>
   12314:	mov	r5, r0
   12318:	mov	r0, r7
   1231c:	bl	14d28 <__mempcpy_chk@plt+0x3bd8>
   12320:	mov	r3, r0
   12324:	ldrb	r0, [r7, r4]
   12328:	mov	r1, #0
   1232c:	mov	r2, r5
   12330:	str	r0, [sp]
   12334:	mov	r0, #1
   12338:	bl	10fe8 <error@plt>
   1233c:	movw	r1, #26086	; 0x65e6
   12340:	movt	r1, #1
   12344:	mov	r0, #0
   12348:	mov	r2, #5
   1234c:	bl	10f70 <dcgettext@plt>
   12350:	mov	r2, r0
   12354:	mov	r0, #0
   12358:	mov	r1, #0
   1235c:	bl	10fe8 <error@plt>
   12360:	mov	r0, #1
   12364:	bl	11250 <__mempcpy_chk@plt+0x100>
   12368:	movw	r1, #26157	; 0x662d
   1236c:	mov	r0, #0
   12370:	mov	r2, #5
   12374:	movt	r1, #1
   12378:	bl	10f70 <dcgettext@plt>
   1237c:	mov	r4, r0
   12380:	ldr	r0, [r7]
   12384:	ldr	r1, [sp, #32]
   12388:	add	r0, r1, r0, lsl #2
   1238c:	ldr	r0, [r0, #-4]
   12390:	bl	14d28 <__mempcpy_chk@plt+0x3bd8>
   12394:	mov	r3, r0
   12398:	mov	r0, #0
   1239c:	mov	r1, #0
   123a0:	mov	r2, r4
   123a4:	bl	10fe8 <error@plt>
   123a8:	mov	r0, #1
   123ac:	bl	11250 <__mempcpy_chk@plt+0x100>
   123b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123b4:	add	fp, sp, #28
   123b8:	sub	sp, sp, #44	; 0x2c
   123bc:	mov	r7, r1
   123c0:	movw	r1, #26196	; 0x6654
   123c4:	mov	r5, r0
   123c8:	str	r3, [sp, #16]
   123cc:	str	r2, [sp, #12]
   123d0:	movt	r1, #1
   123d4:	mov	r0, r7
   123d8:	bl	10ee0 <strcmp@plt>
   123dc:	str	r0, [sp, #8]
   123e0:	mov	r0, #0
   123e4:	ldrb	r1, [r5]
   123e8:	cmp	r1, #48	; 0x30
   123ec:	bne	12404 <__mempcpy_chk@plt+0x12b4>
   123f0:	sub	r0, r0, #1
   123f4:	add	r5, r5, #1
   123f8:	ldrb	r1, [r5]
   123fc:	cmp	r1, #48	; 0x30
   12400:	beq	123f0 <__mempcpy_chk@plt+0x12a0>
   12404:	cmp	r1, #0
   12408:	bne	12414 <__mempcpy_chk@plt+0x12c4>
   1240c:	cmp	r0, #0
   12410:	subne	r5, r5, #1
   12414:	mov	r0, #0
   12418:	ldrb	r1, [r7]
   1241c:	cmp	r1, #48	; 0x30
   12420:	bne	12438 <__mempcpy_chk@plt+0x12e8>
   12424:	sub	r0, r0, #1
   12428:	add	r7, r7, #1
   1242c:	ldrb	r1, [r7]
   12430:	cmp	r1, #48	; 0x30
   12434:	beq	12424 <__mempcpy_chk@plt+0x12d4>
   12438:	cmp	r1, #0
   1243c:	bne	12448 <__mempcpy_chk@plt+0x12f8>
   12440:	cmp	r0, #0
   12444:	subne	r7, r7, #1
   12448:	mov	r0, r5
   1244c:	bl	11054 <strlen@plt>
   12450:	mov	r4, r0
   12454:	mov	r0, #0
   12458:	str	r0, [sp, #4]
   1245c:	ldr	r0, [sp, #8]
   12460:	cmp	r0, #0
   12464:	mov	r0, #0
   12468:	beq	12474 <__mempcpy_chk@plt+0x1324>
   1246c:	mov	r0, r7
   12470:	bl	11054 <strlen@plt>
   12474:	add	r9, r4, #1
   12478:	mov	r6, r0
   1247c:	str	r0, [sp, #24]
   12480:	cmp	r9, r0
   12484:	movhi	r6, r9
   12488:	cmp	r6, #31
   1248c:	movls	r6, #31
   12490:	add	sl, r6, #1
   12494:	mov	r0, sl
   12498:	bl	15400 <__mempcpy_chk@plt+0x42b0>
   1249c:	mov	r8, r0
   124a0:	add	r0, r0, r6
   124a4:	str	r6, [fp, #-32]	; 0xffffffe0
   124a8:	mov	r1, r5
   124ac:	mov	r2, r9
   124b0:	str	r9, [sp]
   124b4:	sub	r6, r0, r4
   124b8:	mov	r0, r6
   124bc:	bl	10f34 <memcpy@plt>
   124c0:	ldr	r0, [sp, #8]
   124c4:	cmp	r0, #0
   124c8:	beq	12524 <__mempcpy_chk@plt+0x13d4>
   124cc:	mov	r0, sl
   124d0:	bl	15400 <__mempcpy_chk@plt+0x42b0>
   124d4:	mov	r5, r0
   124d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   124dc:	ldr	r3, [sp, #24]
   124e0:	mov	r1, r7
   124e4:	add	r0, r5, r0
   124e8:	add	r2, r3, #1
   124ec:	mov	r7, r3
   124f0:	sub	r0, r0, r3
   124f4:	str	r0, [sp, #4]
   124f8:	bl	10f34 <memcpy@plt>
   124fc:	cmp	r4, r7
   12500:	bcc	12524 <__mempcpy_chk@plt+0x13d4>
   12504:	cmp	r7, r4
   12508:	bcc	12864 <__mempcpy_chk@plt+0x1714>
   1250c:	ldr	r1, [sp, #4]
   12510:	mov	r0, r6
   12514:	mov	r2, r4
   12518:	bl	10f64 <memcmp@plt>
   1251c:	cmp	r0, #0
   12520:	bgt	12864 <__mempcpy_chk@plt+0x1714>
   12524:	lsl	r0, sl, #1
   12528:	mov	r5, #8192	; 0x2000
   1252c:	str	r8, [sp, #32]
   12530:	cmp	r0, #8192	; 0x2000
   12534:	lslhi	r5, sl, #1
   12538:	mov	r0, r5
   1253c:	bl	15400 <__mempcpy_chk@plt+0x42b0>
   12540:	add	r1, r0, r5
   12544:	str	r5, [sp, #20]
   12548:	mov	r2, r4
   1254c:	mvn	r3, #0
   12550:	str	r1, [sp, #36]	; 0x24
   12554:	mov	r1, r6
   12558:	str	r0, [sp, #28]
   1255c:	bl	11150 <__mempcpy_chk@plt>
   12560:	mov	sl, r0
   12564:	ldr	r0, [sp, #16]
   12568:	ldr	r1, [sp, #12]
   1256c:	orrs	r0, r1, r0
   12570:	beq	126e4 <__mempcpy_chk@plt+0x1594>
   12574:	mov	r9, #48	; 0x30
   12578:	mov	r8, #49	; 0x31
   1257c:	ldr	r0, [sp, #12]
   12580:	ldr	r1, [sp, #16]
   12584:	sub	r2, r6, #1
   12588:	add	r3, r2, r4
   1258c:	ldrb	r7, [r3]
   12590:	add	r5, r7, #1
   12594:	cmp	r7, #57	; 0x39
   12598:	strb	r5, [r3]
   1259c:	bcc	125b8 <__mempcpy_chk@plt+0x1468>
   125a0:	strb	r9, [r3], #-1
   125a4:	cmp	r3, r6
   125a8:	bcs	1258c <__mempcpy_chk@plt+0x143c>
   125ac:	add	r4, r4, #1
   125b0:	mov	r6, r2
   125b4:	strb	r8, [r2]
   125b8:	subs	r0, r0, #1
   125bc:	sbc	r1, r1, #0
   125c0:	orrs	r2, r0, r1
   125c4:	bne	12584 <__mempcpy_chk@plt+0x1434>
   125c8:	ldr	r0, [sp, #8]
   125cc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   125d0:	cmp	r0, #0
   125d4:	ldr	r0, [sp, #24]
   125d8:	beq	12604 <__mempcpy_chk@plt+0x14b4>
   125dc:	cmp	r4, r0
   125e0:	bcc	12604 <__mempcpy_chk@plt+0x14b4>
   125e4:	cmp	r0, r4
   125e8:	bcc	1282c <__mempcpy_chk@plt+0x16dc>
   125ec:	ldr	r1, [sp, #4]
   125f0:	mov	r0, r6
   125f4:	mov	r2, r4
   125f8:	bl	10f64 <memcmp@plt>
   125fc:	cmp	r0, #0
   12600:	bgt	1282c <__mempcpy_chk@plt+0x16dc>
   12604:	movw	r0, #29024	; 0x7160
   12608:	cmp	r4, r5
   1260c:	movt	r0, #2
   12610:	ldr	r0, [r0, #4]
   12614:	ldrb	r0, [r0]
   12618:	strb	r0, [sl], #1
   1261c:	bne	12688 <__mempcpy_chk@plt+0x1538>
   12620:	mov	r0, #1
   12624:	orr	r7, r0, r5, lsl #1
   12628:	ldr	r0, [sp, #32]
   1262c:	mov	r1, r7
   12630:	bl	15448 <__mempcpy_chk@plt+0x42f8>
   12634:	add	r6, r0, r5
   12638:	mov	r1, r0
   1263c:	add	r2, r5, #1
   12640:	mov	r0, r6
   12644:	str	r1, [sp, #32]
   12648:	bl	10f10 <memmove@plt>
   1264c:	lsl	r5, r5, #1
   12650:	str	r5, [fp, #-32]	; 0xffffffe0
   12654:	ldr	r0, [sp, #20]
   12658:	cmp	r0, r7, lsl #1
   1265c:	bcs	12688 <__mempcpy_chk@plt+0x1538>
   12660:	ldr	r0, [sp, #28]
   12664:	lsl	r7, r7, #1
   12668:	mov	r1, r7
   1266c:	sub	r5, sl, r0
   12670:	bl	15448 <__mempcpy_chk@plt+0x42f8>
   12674:	add	sl, r0, r5
   12678:	str	r0, [sp, #28]
   1267c:	add	r0, r0, r7
   12680:	str	r7, [sp, #20]
   12684:	str	r0, [sp, #36]	; 0x24
   12688:	mov	r0, sl
   1268c:	mov	r1, r6
   12690:	mov	r2, r4
   12694:	mvn	r3, #0
   12698:	bl	11150 <__mempcpy_chk@plt>
   1269c:	ldr	r1, [sp, #36]	; 0x24
   126a0:	mov	sl, r0
   126a4:	mvn	r0, r4
   126a8:	add	r0, r1, r0
   126ac:	cmp	r0, sl
   126b0:	bcs	1257c <__mempcpy_chk@plt+0x142c>
   126b4:	movw	r0, #29012	; 0x7154
   126b8:	ldr	r5, [sp, #28]
   126bc:	mov	r2, #1
   126c0:	movt	r0, #2
   126c4:	ldr	r3, [r0]
   126c8:	sub	r1, sl, r5
   126cc:	mov	r0, r5
   126d0:	bl	10f58 <fwrite_unlocked@plt>
   126d4:	cmp	r0, #1
   126d8:	mov	sl, r5
   126dc:	beq	1257c <__mempcpy_chk@plt+0x142c>
   126e0:	b	12860 <__mempcpy_chk@plt+0x1710>
   126e4:	ldr	r1, [sp, #24]
   126e8:	mov	r0, #0
   126ec:	mvn	r9, r4
   126f0:	cmp	r4, r1
   126f4:	ldr	r1, [sp, #8]
   126f8:	movwcc	r0, #1
   126fc:	clz	r1, r1
   12700:	lsr	r1, r1, #5
   12704:	orr	r8, r1, r0
   12708:	mov	r0, #1
   1270c:	orr	r0, r0, r4, lsl #1
   12710:	lsl	r7, r0, #1
   12714:	str	r0, [sp, #16]
   12718:	lsl	r0, r4, #1
   1271c:	str	r0, [sp, #12]
   12720:	cmp	r8, #0
   12724:	bne	1274c <__mempcpy_chk@plt+0x15fc>
   12728:	ldr	r0, [sp, #24]
   1272c:	cmp	r0, r4
   12730:	bcc	1282c <__mempcpy_chk@plt+0x16dc>
   12734:	ldr	r1, [sp, #4]
   12738:	mov	r0, r6
   1273c:	mov	r2, r4
   12740:	bl	10f64 <memcmp@plt>
   12744:	cmp	r0, #0
   12748:	bgt	1282c <__mempcpy_chk@plt+0x16dc>
   1274c:	movw	r0, #29024	; 0x7160
   12750:	movt	r0, #2
   12754:	ldr	r0, [r0, #4]
   12758:	ldrb	r0, [r0]
   1275c:	strb	r0, [sl], #1
   12760:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12764:	cmp	r4, r0
   12768:	bne	127d4 <__mempcpy_chk@plt+0x1684>
   1276c:	ldr	r0, [sp, #32]
   12770:	ldr	r1, [sp, #16]
   12774:	bl	15448 <__mempcpy_chk@plt+0x42f8>
   12778:	mov	r1, r0
   1277c:	add	r6, r0, r4
   12780:	str	r1, [sp, #32]
   12784:	mov	r0, r6
   12788:	ldr	r2, [sp]
   1278c:	bl	10f10 <memmove@plt>
   12790:	ldr	r0, [sp, #20]
   12794:	cmp	r0, r7
   12798:	bcs	127cc <__mempcpy_chk@plt+0x167c>
   1279c:	ldr	r0, [sp, #28]
   127a0:	mov	r1, r7
   127a4:	sub	r5, sl, r0
   127a8:	bl	15448 <__mempcpy_chk@plt+0x42f8>
   127ac:	add	sl, r0, r5
   127b0:	str	r0, [sp, #28]
   127b4:	add	r0, r0, r7
   127b8:	str	r0, [sp, #36]	; 0x24
   127bc:	ldr	r0, [sp, #12]
   127c0:	str	r0, [fp, #-32]	; 0xffffffe0
   127c4:	str	r7, [sp, #20]
   127c8:	b	127d4 <__mempcpy_chk@plt+0x1684>
   127cc:	ldr	r0, [sp, #12]
   127d0:	str	r0, [fp, #-32]	; 0xffffffe0
   127d4:	mov	r0, sl
   127d8:	mov	r1, r6
   127dc:	mov	r2, r4
   127e0:	mvn	r3, #0
   127e4:	bl	11150 <__mempcpy_chk@plt>
   127e8:	mov	sl, r0
   127ec:	ldr	r0, [sp, #36]	; 0x24
   127f0:	add	r0, r0, r9
   127f4:	cmp	r0, sl
   127f8:	bcs	12720 <__mempcpy_chk@plt+0x15d0>
   127fc:	movw	r0, #29012	; 0x7154
   12800:	ldr	r5, [sp, #28]
   12804:	mov	r2, #1
   12808:	movt	r0, #2
   1280c:	ldr	r3, [r0]
   12810:	sub	r1, sl, r5
   12814:	mov	r0, r5
   12818:	bl	10f58 <fwrite_unlocked@plt>
   1281c:	cmp	r0, #1
   12820:	mov	sl, r5
   12824:	beq	12720 <__mempcpy_chk@plt+0x15d0>
   12828:	b	12860 <__mempcpy_chk@plt+0x1710>
   1282c:	movw	r2, #29012	; 0x7154
   12830:	mov	r0, #10
   12834:	strb	r0, [sl], #1
   12838:	ldr	r0, [sp, #28]
   1283c:	movt	r2, #2
   12840:	ldr	r3, [r2]
   12844:	mov	r2, #1
   12848:	sub	r1, sl, r0
   1284c:	bl	10f58 <fwrite_unlocked@plt>
   12850:	cmp	r0, #1
   12854:	bne	12860 <__mempcpy_chk@plt+0x1710>
   12858:	mov	r0, #0
   1285c:	bl	11048 <exit@plt>
   12860:	bl	12bb0 <__mempcpy_chk@plt+0x1a60>
   12864:	mov	r0, r8
   12868:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   1286c:	mov	r0, r5
   12870:	sub	sp, fp, #28
   12874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12878:	b	12d84 <__mempcpy_chk@plt+0x1c34>
   1287c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12880:	add	fp, sp, #28
   12884:	sub	sp, sp, #4
   12888:	vpush	{d8}
   1288c:	sub	sp, sp, #16
   12890:	mov	r4, r0
   12894:	movw	r3, #11252	; 0x2bf4
   12898:	mov	r5, r1
   1289c:	mov	r0, r1
   128a0:	mov	r1, #0
   128a4:	movt	r3, #1
   128a8:	mov	r2, r4
   128ac:	bl	159a4 <__mempcpy_chk@plt+0x4854>
   128b0:	cmp	r0, #0
   128b4:	beq	12b1c <__mempcpy_chk@plt+0x19cc>
   128b8:	vldr	d8, [r4]
   128bc:	vcmpe.f64	d8, d8
   128c0:	vmrs	APSR_nzcv, fpscr
   128c4:	bvs	12b58 <__mempcpy_chk@plt+0x1a08>
   128c8:	sub	r5, r5, #1
   128cc:	bl	1103c <__ctype_b_loc@plt>
   128d0:	ldr	r0, [r0]
   128d4:	ldrb	r2, [r5, #1]!
   128d8:	add	r1, r0, r2, lsl #1
   128dc:	cmp	r2, #43	; 0x2b
   128e0:	ldrh	r1, [r1]
   128e4:	and	r1, r1, #8192	; 0x2000
   128e8:	beq	128d4 <__mempcpy_chk@plt+0x1784>
   128ec:	cmp	r1, #0
   128f0:	bne	128d4 <__mempcpy_chk@plt+0x1784>
   128f4:	mvn	r1, #-2147483648	; 0x80000000
   128f8:	mov	r0, #0
   128fc:	strd	r0, [r4, #8]
   12900:	mov	r0, r5
   12904:	mov	r1, #46	; 0x2e
   12908:	bl	11060 <strchr@plt>
   1290c:	mov	r9, r0
   12910:	cmp	r0, #0
   12914:	bne	12930 <__mempcpy_chk@plt+0x17e0>
   12918:	mov	r0, r5
   1291c:	mov	r1, #112	; 0x70
   12920:	bl	11060 <strchr@plt>
   12924:	cmp	r0, #0
   12928:	moveq	r0, #0
   1292c:	streq	r0, [r4, #12]
   12930:	movw	r1, #26865	; 0x68f1
   12934:	mov	r0, r5
   12938:	movt	r1, #1
   1293c:	bl	10ef8 <strcspn@plt>
   12940:	vmov.i32	d16, #0	; 0x00000000
   12944:	vmul.f64	d16, d8, d16
   12948:	vcmp.f64	d16, #0.0
   1294c:	vmrs	APSR_nzcv, fpscr
   12950:	ldrbeq	r0, [r5, r0]
   12954:	cmpeq	r0, #0
   12958:	bne	12b0c <__mempcpy_chk@plt+0x19bc>
   1295c:	mov	r0, r5
   12960:	bl	11054 <strlen@plt>
   12964:	cmp	r9, #0
   12968:	str	r0, [r4, #8]
   1296c:	beq	129b8 <__mempcpy_chk@plt+0x1868>
   12970:	movw	r1, #26868	; 0x68f4
   12974:	mov	r6, r0
   12978:	add	r0, r9, #1
   1297c:	movt	r1, #1
   12980:	bl	10ef8 <strcspn@plt>
   12984:	mov	r8, r0
   12988:	cmp	r0, #0
   1298c:	blt	12998 <__mempcpy_chk@plt+0x1848>
   12990:	str	r8, [r4, #12]
   12994:	beq	129c8 <__mempcpy_chk@plt+0x1878>
   12998:	cmp	r9, r5
   1299c:	beq	129c0 <__mempcpy_chk@plt+0x1870>
   129a0:	ldrb	r0, [r9, #-1]
   129a4:	sub	r1, r0, #48	; 0x30
   129a8:	mov	r0, #0
   129ac:	cmp	r1, #9
   129b0:	movwhi	r0, #1
   129b4:	b	129cc <__mempcpy_chk@plt+0x187c>
   129b8:	mov	r8, #0
   129bc:	b	129d4 <__mempcpy_chk@plt+0x1884>
   129c0:	mov	r0, #1
   129c4:	b	129cc <__mempcpy_chk@plt+0x187c>
   129c8:	mvn	r0, #0
   129cc:	add	r0, r0, r6
   129d0:	str	r0, [r4, #8]
   129d4:	mov	r0, r5
   129d8:	mov	r1, #101	; 0x65
   129dc:	bl	11060 <strchr@plt>
   129e0:	mov	r6, r0
   129e4:	cmp	r0, #0
   129e8:	bne	12a04 <__mempcpy_chk@plt+0x18b4>
   129ec:	mov	r0, r5
   129f0:	mov	r1, #69	; 0x45
   129f4:	bl	11060 <strchr@plt>
   129f8:	mov	r6, r0
   129fc:	cmp	r0, #0
   12a00:	beq	12b0c <__mempcpy_chk@plt+0x19bc>
   12a04:	add	r7, r6, #1
   12a08:	mov	r1, #0
   12a0c:	mov	r2, #10
   12a10:	mov	r0, r7
   12a14:	bl	10eec <strtol@plt>
   12a18:	mov	sl, #-2147483647	; 0x80000001
   12a1c:	cmp	r0, #-2147483646	; 0x80000002
   12a20:	str	r8, [sp, #8]
   12a24:	blt	12a60 <__mempcpy_chk@plt+0x1910>
   12a28:	mov	r0, r7
   12a2c:	mov	r1, #0
   12a30:	mov	r2, #10
   12a34:	bl	10eec <strtol@plt>
   12a38:	mov	sl, r0
   12a3c:	cmp	r0, #0
   12a40:	blt	12a70 <__mempcpy_chk@plt+0x1920>
   12a44:	ldr	r1, [r4, #12]
   12a48:	mov	r0, sl
   12a4c:	cmp	r1, sl
   12a50:	movlt	r0, r1
   12a54:	mov	r1, #0
   12a58:	str	r1, [sp, #12]
   12a5c:	b	12a7c <__mempcpy_chk@plt+0x192c>
   12a60:	mov	r0, #1
   12a64:	str	r0, [sp, #12]
   12a68:	mov	r0, #-2147483647	; 0x80000001
   12a6c:	b	12a7c <__mempcpy_chk@plt+0x192c>
   12a70:	mov	r0, #1
   12a74:	str	r0, [sp, #12]
   12a78:	mov	r0, sl
   12a7c:	ldr	r1, [r4, #12]
   12a80:	sub	r8, r6, r5
   12a84:	sub	r7, r1, r0
   12a88:	mov	r0, r5
   12a8c:	str	r7, [r4, #12]
   12a90:	bl	11054 <strlen@plt>
   12a94:	ldr	r1, [r4, #8]
   12a98:	sub	r0, r8, r0
   12a9c:	add	r0, r0, r1
   12aa0:	ldr	r1, [sp, #12]
   12aa4:	str	r0, [r4, #8]
   12aa8:	cmp	r1, #0
   12aac:	beq	12ad0 <__mempcpy_chk@plt+0x1980>
   12ab0:	cmp	r9, #0
   12ab4:	addne	r1, r9, #1
   12ab8:	cmpne	r6, r1
   12abc:	bne	12ac8 <__mempcpy_chk@plt+0x1978>
   12ac0:	add	r0, r0, #1
   12ac4:	str	r0, [r4, #8]
   12ac8:	rsb	r1, sl, #0
   12acc:	b	12b04 <__mempcpy_chk@plt+0x19b4>
   12ad0:	cmp	r9, #0
   12ad4:	beq	12af4 <__mempcpy_chk@plt+0x19a4>
   12ad8:	ldr	r1, [sp, #8]
   12adc:	cmp	r1, #0
   12ae0:	beq	12af8 <__mempcpy_chk@plt+0x19a8>
   12ae4:	cmp	r7, #0
   12ae8:	subeq	r0, r0, #1
   12aec:	streq	r0, [r4, #8]
   12af0:	b	12af8 <__mempcpy_chk@plt+0x19a8>
   12af4:	ldr	r1, [sp, #8]
   12af8:	cmp	r1, sl
   12afc:	movcs	r1, sl
   12b00:	sub	r1, sl, r1
   12b04:	add	r0, r0, r1
   12b08:	str	r0, [r4, #8]
   12b0c:	sub	sp, fp, #40	; 0x28
   12b10:	vpop	{d8}
   12b14:	add	sp, sp, #4
   12b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b1c:	movw	r1, #26792	; 0x68a8
   12b20:	mov	r0, #0
   12b24:	mov	r2, #5
   12b28:	movt	r1, #1
   12b2c:	bl	10f70 <dcgettext@plt>
   12b30:	mov	r4, r0
   12b34:	mov	r0, r5
   12b38:	bl	14d28 <__mempcpy_chk@plt+0x3bd8>
   12b3c:	mov	r3, r0
   12b40:	mov	r0, #0
   12b44:	mov	r1, #0
   12b48:	mov	r2, r4
   12b4c:	bl	10fe8 <error@plt>
   12b50:	mov	r0, #1
   12b54:	bl	11250 <__mempcpy_chk@plt+0x100>
   12b58:	movw	r1, #26828	; 0x68cc
   12b5c:	mov	r0, #0
   12b60:	mov	r2, #5
   12b64:	movt	r1, #1
   12b68:	bl	10f70 <dcgettext@plt>
   12b6c:	movw	r1, #26852	; 0x68e4
   12b70:	mov	r4, r0
   12b74:	mov	r0, #0
   12b78:	movt	r1, #1
   12b7c:	bl	14d18 <__mempcpy_chk@plt+0x3bc8>
   12b80:	mov	r6, r0
   12b84:	mov	r0, #1
   12b88:	mov	r1, r5
   12b8c:	bl	14d18 <__mempcpy_chk@plt+0x3bc8>
   12b90:	str	r0, [sp]
   12b94:	mov	r0, #0
   12b98:	mov	r1, #0
   12b9c:	mov	r2, r4
   12ba0:	mov	r3, r6
   12ba4:	bl	10fe8 <error@plt>
   12ba8:	mov	r0, #1
   12bac:	bl	11250 <__mempcpy_chk@plt+0x100>
   12bb0:	push	{fp, lr}
   12bb4:	mov	fp, sp
   12bb8:	movw	r0, #29012	; 0x7154
   12bbc:	movt	r0, #2
   12bc0:	ldr	r0, [r0]
   12bc4:	bl	11114 <clearerr_unlocked@plt>
   12bc8:	bl	1106c <__errno_location@plt>
   12bcc:	ldr	r4, [r0]
   12bd0:	movw	r1, #26780	; 0x689c
   12bd4:	mov	r0, #0
   12bd8:	mov	r2, #5
   12bdc:	movt	r1, #1
   12be0:	bl	10f70 <dcgettext@plt>
   12be4:	mov	r2, r0
   12be8:	mov	r0, #1
   12bec:	mov	r1, r4
   12bf0:	bl	10fe8 <error@plt>
   12bf4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12bf8:	add	fp, sp, #24
   12bfc:	vpush	{d8}
   12c00:	sub	sp, sp, #8
   12c04:	mov	r4, r1
   12c08:	add	r1, sp, #4
   12c0c:	mov	r5, r0
   12c10:	bl	10f4c <strtold@plt>
   12c14:	ldr	r7, [sp, #4]
   12c18:	vmov.f64	d8, d0
   12c1c:	ldrb	r0, [r7]
   12c20:	cmp	r0, #0
   12c24:	beq	12c60 <__mempcpy_chk@plt+0x1b10>
   12c28:	bl	1106c <__errno_location@plt>
   12c2c:	ldr	r8, [r0]
   12c30:	mov	r6, r0
   12c34:	mov	r1, sp
   12c38:	mov	r0, r5
   12c3c:	bl	15b20 <__mempcpy_chk@plt+0x49d0>
   12c40:	ldr	r0, [sp]
   12c44:	cmp	r7, r0
   12c48:	bcs	12c5c <__mempcpy_chk@plt+0x1b0c>
   12c4c:	str	r0, [sp, #4]
   12c50:	mov	r7, r0
   12c54:	vmov.f64	d8, d0
   12c58:	b	12c60 <__mempcpy_chk@plt+0x1b10>
   12c5c:	str	r8, [r6]
   12c60:	cmp	r4, #0
   12c64:	vmov.f64	d0, d8
   12c68:	strne	r7, [r4]
   12c6c:	sub	sp, fp, #32
   12c70:	vpop	{d8}
   12c74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12c78:	movw	r1, #29060	; 0x7184
   12c7c:	movt	r1, #2
   12c80:	str	r0, [r1, #4]
   12c84:	bx	lr
   12c88:	movw	r1, #29060	; 0x7184
   12c8c:	movt	r1, #2
   12c90:	strb	r0, [r1]
   12c94:	bx	lr
   12c98:	push	{r4, r5, r6, sl, fp, lr}
   12c9c:	add	fp, sp, #16
   12ca0:	sub	sp, sp, #8
   12ca4:	movw	r0, #29012	; 0x7154
   12ca8:	movt	r0, #2
   12cac:	ldr	r0, [r0]
   12cb0:	bl	15be0 <__mempcpy_chk@plt+0x4a90>
   12cb4:	cmp	r0, #0
   12cb8:	beq	12ce0 <__mempcpy_chk@plt+0x1b90>
   12cbc:	movw	r5, #29060	; 0x7184
   12cc0:	movt	r5, #2
   12cc4:	ldrb	r0, [r5]
   12cc8:	cmp	r0, #0
   12ccc:	beq	12d0c <__mempcpy_chk@plt+0x1bbc>
   12cd0:	bl	1106c <__errno_location@plt>
   12cd4:	ldr	r0, [r0]
   12cd8:	cmp	r0, #32
   12cdc:	bne	12d0c <__mempcpy_chk@plt+0x1bbc>
   12ce0:	movw	r0, #29008	; 0x7150
   12ce4:	movt	r0, #2
   12ce8:	ldr	r0, [r0]
   12cec:	bl	15be0 <__mempcpy_chk@plt+0x4a90>
   12cf0:	cmp	r0, #0
   12cf4:	subeq	sp, fp, #16
   12cf8:	popeq	{r4, r5, r6, sl, fp, pc}
   12cfc:	movw	r0, #28924	; 0x70fc
   12d00:	movt	r0, #2
   12d04:	ldr	r0, [r0]
   12d08:	bl	10f28 <_exit@plt>
   12d0c:	movw	r1, #26780	; 0x689c
   12d10:	mov	r0, #0
   12d14:	mov	r2, #5
   12d18:	movt	r1, #1
   12d1c:	bl	10f70 <dcgettext@plt>
   12d20:	ldr	r6, [r5, #4]
   12d24:	mov	r4, r0
   12d28:	bl	1106c <__errno_location@plt>
   12d2c:	ldr	r5, [r0]
   12d30:	cmp	r6, #0
   12d34:	bne	12d50 <__mempcpy_chk@plt+0x1c00>
   12d38:	movw	r2, #26187	; 0x664b
   12d3c:	mov	r0, #0
   12d40:	mov	r1, r5
   12d44:	mov	r3, r4
   12d48:	movt	r2, #1
   12d4c:	b	12d70 <__mempcpy_chk@plt+0x1c20>
   12d50:	mov	r0, r6
   12d54:	bl	149a0 <__mempcpy_chk@plt+0x3850>
   12d58:	movw	r2, #27087	; 0x69cf
   12d5c:	mov	r3, r0
   12d60:	str	r4, [sp]
   12d64:	mov	r0, #0
   12d68:	mov	r1, r5
   12d6c:	movt	r2, #1
   12d70:	bl	10fe8 <error@plt>
   12d74:	movw	r0, #28924	; 0x70fc
   12d78:	movt	r0, #2
   12d7c:	ldr	r0, [r0]
   12d80:	bl	10f28 <_exit@plt>
   12d84:	push	{r4, r5, r6, sl, fp, lr}
   12d88:	add	fp, sp, #16
   12d8c:	mov	r4, r0
   12d90:	bl	1106c <__errno_location@plt>
   12d94:	ldr	r6, [r0]
   12d98:	mov	r5, r0
   12d9c:	mov	r0, r4
   12da0:	bl	10f1c <free@plt>
   12da4:	str	r6, [r5]
   12da8:	pop	{r4, r5, r6, sl, fp, pc}
   12dac:	push	{r4, r5, fp, lr}
   12db0:	add	fp, sp, #8
   12db4:	cmp	r0, #0
   12db8:	beq	12e4c <__mempcpy_chk@plt+0x1cfc>
   12dbc:	mov	r1, #47	; 0x2f
   12dc0:	mov	r4, r0
   12dc4:	bl	110f0 <strrchr@plt>
   12dc8:	cmp	r0, #0
   12dcc:	mov	r5, r4
   12dd0:	addne	r5, r0, #1
   12dd4:	sub	r0, r5, r4
   12dd8:	cmp	r0, #7
   12ddc:	blt	12e30 <__mempcpy_chk@plt+0x1ce0>
   12de0:	movw	r1, #27150	; 0x6a0e
   12de4:	sub	r0, r5, #7
   12de8:	mov	r2, #7
   12dec:	movt	r1, #1
   12df0:	bl	1112c <strncmp@plt>
   12df4:	cmp	r0, #0
   12df8:	bne	12e30 <__mempcpy_chk@plt+0x1ce0>
   12dfc:	movw	r1, #27158	; 0x6a16
   12e00:	mov	r0, r5
   12e04:	mov	r2, #3
   12e08:	movt	r1, #1
   12e0c:	bl	1112c <strncmp@plt>
   12e10:	cmp	r0, #0
   12e14:	beq	12e20 <__mempcpy_chk@plt+0x1cd0>
   12e18:	mov	r4, r5
   12e1c:	b	12e30 <__mempcpy_chk@plt+0x1ce0>
   12e20:	movw	r0, #28992	; 0x7140
   12e24:	add	r4, r5, #3
   12e28:	movt	r0, #2
   12e2c:	str	r4, [r0]
   12e30:	movw	r0, #28996	; 0x7144
   12e34:	movt	r0, #2
   12e38:	str	r4, [r0]
   12e3c:	movw	r0, #29068	; 0x718c
   12e40:	movt	r0, #2
   12e44:	str	r4, [r0]
   12e48:	pop	{r4, r5, fp, pc}
   12e4c:	movw	r0, #29008	; 0x7150
   12e50:	mov	r1, #55	; 0x37
   12e54:	mov	r2, #1
   12e58:	movt	r0, #2
   12e5c:	ldr	r3, [r0]
   12e60:	movw	r0, #27094	; 0x69d6
   12e64:	movt	r0, #1
   12e68:	bl	10fa0 <fwrite@plt>
   12e6c:	bl	11138 <abort@plt>
   12e70:	push	{r4, r5, r6, sl, fp, lr}
   12e74:	add	fp, sp, #16
   12e78:	mov	r4, r0
   12e7c:	movw	r0, #29072	; 0x7190
   12e80:	movt	r0, #2
   12e84:	cmp	r4, #0
   12e88:	moveq	r4, r0
   12e8c:	bl	1106c <__errno_location@plt>
   12e90:	ldr	r6, [r0]
   12e94:	mov	r5, r0
   12e98:	mov	r0, r4
   12e9c:	mov	r1, #48	; 0x30
   12ea0:	bl	15860 <__mempcpy_chk@plt+0x4710>
   12ea4:	str	r6, [r5]
   12ea8:	pop	{r4, r5, r6, sl, fp, pc}
   12eac:	movw	r1, #29072	; 0x7190
   12eb0:	cmp	r0, #0
   12eb4:	movt	r1, #2
   12eb8:	movne	r1, r0
   12ebc:	ldr	r0, [r1]
   12ec0:	bx	lr
   12ec4:	movw	r2, #29072	; 0x7190
   12ec8:	cmp	r0, #0
   12ecc:	movt	r2, #2
   12ed0:	movne	r2, r0
   12ed4:	str	r1, [r2]
   12ed8:	bx	lr
   12edc:	movw	r3, #29072	; 0x7190
   12ee0:	cmp	r0, #0
   12ee4:	movt	r3, #2
   12ee8:	movne	r3, r0
   12eec:	ubfx	r0, r1, #5, #3
   12ef0:	and	r1, r1, #31
   12ef4:	add	r0, r3, r0, lsl #2
   12ef8:	ldr	r3, [r0, #8]
   12efc:	eor	r2, r2, r3, lsr r1
   12f00:	and	r2, r2, #1
   12f04:	eor	r2, r3, r2, lsl r1
   12f08:	str	r2, [r0, #8]
   12f0c:	mov	r0, #1
   12f10:	and	r0, r0, r3, lsr r1
   12f14:	bx	lr
   12f18:	movw	r2, #29072	; 0x7190
   12f1c:	cmp	r0, #0
   12f20:	movt	r2, #2
   12f24:	movne	r2, r0
   12f28:	ldr	r0, [r2, #4]
   12f2c:	str	r1, [r2, #4]
   12f30:	bx	lr
   12f34:	movw	r3, #29072	; 0x7190
   12f38:	cmp	r0, #0
   12f3c:	movt	r3, #2
   12f40:	movne	r3, r0
   12f44:	cmp	r1, #0
   12f48:	mov	r0, #10
   12f4c:	cmpne	r2, #0
   12f50:	str	r0, [r3]
   12f54:	bne	12f64 <__mempcpy_chk@plt+0x1e14>
   12f58:	push	{fp, lr}
   12f5c:	mov	fp, sp
   12f60:	bl	11138 <abort@plt>
   12f64:	str	r1, [r3, #40]	; 0x28
   12f68:	str	r2, [r3, #44]	; 0x2c
   12f6c:	bx	lr
   12f70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f74:	add	fp, sp, #28
   12f78:	sub	sp, sp, #20
   12f7c:	mov	r7, r0
   12f80:	ldr	r0, [fp, #8]
   12f84:	movw	r5, #29072	; 0x7190
   12f88:	mov	r8, r3
   12f8c:	mov	r9, r2
   12f90:	mov	sl, r1
   12f94:	movt	r5, #2
   12f98:	cmp	r0, #0
   12f9c:	movne	r5, r0
   12fa0:	bl	1106c <__errno_location@plt>
   12fa4:	mov	r4, r0
   12fa8:	ldm	r5, {r0, r1}
   12fac:	ldr	r2, [r5, #40]	; 0x28
   12fb0:	ldr	r3, [r5, #44]	; 0x2c
   12fb4:	add	r5, r5, #8
   12fb8:	ldr	r6, [r4]
   12fbc:	stm	sp, {r0, r1, r5}
   12fc0:	str	r2, [sp, #12]
   12fc4:	str	r3, [sp, #16]
   12fc8:	mov	r0, r7
   12fcc:	mov	r1, sl
   12fd0:	mov	r2, r9
   12fd4:	mov	r3, r8
   12fd8:	bl	12fe8 <__mempcpy_chk@plt+0x1e98>
   12fdc:	str	r6, [r4]
   12fe0:	sub	sp, fp, #28
   12fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fec:	add	fp, sp, #28
   12ff0:	sub	sp, sp, #156	; 0x9c
   12ff4:	str	r0, [sp, #76]	; 0x4c
   12ff8:	ldr	r0, [fp, #12]
   12ffc:	mov	r6, r1
   13000:	str	r3, [sp, #84]	; 0x54
   13004:	str	r2, [fp, #-84]	; 0xffffffac
   13008:	and	r1, r0, #4
   1300c:	str	r1, [sp, #24]
   13010:	and	r1, r0, #1
   13014:	str	r1, [sp, #28]
   13018:	ubfx	r8, r0, #1, #1
   1301c:	bl	10fb8 <__ctype_get_mb_cur_max@plt>
   13020:	str	r0, [sp, #32]
   13024:	ldr	r0, [fp, #24]
   13028:	ldr	r7, [fp, #8]
   1302c:	mov	r1, #0
   13030:	mov	r2, #0
   13034:	mov	r4, #1
   13038:	str	r1, [sp, #52]	; 0x34
   1303c:	str	r0, [sp, #72]	; 0x48
   13040:	ldr	r0, [fp, #20]
   13044:	str	r0, [sp, #68]	; 0x44
   13048:	mov	r0, #0
   1304c:	str	r0, [sp, #48]	; 0x30
   13050:	mov	r0, #0
   13054:	str	r0, [sp, #92]	; 0x5c
   13058:	mov	r0, #0
   1305c:	str	r0, [fp, #-76]	; 0xffffffb4
   13060:	mov	r0, #0
   13064:	cmp	r7, #10
   13068:	bhi	14350 <__mempcpy_chk@plt+0x3200>
   1306c:	add	r1, pc, #28
   13070:	mov	sl, r6
   13074:	ldr	r6, [sp, #76]	; 0x4c
   13078:	ldr	ip, [fp, #-84]	; 0xffffffac
   1307c:	ldr	lr, [sp, #84]	; 0x54
   13080:	mov	r9, #0
   13084:	mov	r3, #1
   13088:	mov	r5, #0
   1308c:	ldr	pc, [r1, r7, lsl #2]
   13090:	andeq	r3, r1, r0, ror #2
   13094:	muleq	r1, ip, r1
   13098:	andeq	r3, r1, r0, ror r1
   1309c:	andeq	r3, r1, r8, asr r1
   130a0:	muleq	r1, r0, r1
   130a4:	andeq	r3, r1, r4, asr #3
   130a8:	andeq	r3, r1, r0, lsl #3
   130ac:	ldrdeq	r3, [r1], -r0
   130b0:	strheq	r3, [r1], -ip
   130b4:	strheq	r3, [r1], -ip
   130b8:	andeq	r3, r1, r4, ror #6
   130bc:	mov	r9, r4
   130c0:	movw	r4, #27242	; 0x6a6a
   130c4:	mov	r5, r8
   130c8:	mov	r8, r2
   130cc:	mov	r0, #0
   130d0:	mov	r2, #5
   130d4:	movt	r4, #1
   130d8:	mov	r1, r4
   130dc:	bl	10f70 <dcgettext@plt>
   130e0:	cmp	r0, r4
   130e4:	str	r0, [sp, #68]	; 0x44
   130e8:	bne	13278 <__mempcpy_chk@plt+0x2128>
   130ec:	bl	15e0c <__mempcpy_chk@plt+0x4cbc>
   130f0:	ldrb	r1, [r0]
   130f4:	and	r1, r1, #223	; 0xdf
   130f8:	cmp	r1, #71	; 0x47
   130fc:	beq	13244 <__mempcpy_chk@plt+0x20f4>
   13100:	cmp	r1, #85	; 0x55
   13104:	bne	1325c <__mempcpy_chk@plt+0x210c>
   13108:	ldrb	r1, [r0, #1]
   1310c:	and	r1, r1, #223	; 0xdf
   13110:	cmp	r1, #84	; 0x54
   13114:	bne	1325c <__mempcpy_chk@plt+0x210c>
   13118:	ldrb	r1, [r0, #2]
   1311c:	and	r1, r1, #223	; 0xdf
   13120:	cmp	r1, #70	; 0x46
   13124:	bne	1325c <__mempcpy_chk@plt+0x210c>
   13128:	ldrb	r1, [r0, #3]
   1312c:	cmp	r1, #45	; 0x2d
   13130:	ldrbeq	r1, [r0, #4]
   13134:	cmpeq	r1, #56	; 0x38
   13138:	bne	1325c <__mempcpy_chk@plt+0x210c>
   1313c:	ldrb	r0, [r0, #5]
   13140:	cmp	r0, #0
   13144:	movw	r0, #27244	; 0x6a6c
   13148:	movt	r0, #1
   1314c:	str	r0, [sp, #68]	; 0x44
   13150:	bne	1325c <__mempcpy_chk@plt+0x210c>
   13154:	b	13278 <__mempcpy_chk@plt+0x2128>
   13158:	mov	r0, #1
   1315c:	b	1319c <__mempcpy_chk@plt+0x204c>
   13160:	mov	r7, #0
   13164:	mov	r9, #0
   13168:	mov	r3, r0
   1316c:	b	1323c <__mempcpy_chk@plt+0x20ec>
   13170:	tst	r8, #1
   13174:	bne	1319c <__mempcpy_chk@plt+0x204c>
   13178:	mov	r3, r0
   1317c:	b	131f4 <__mempcpy_chk@plt+0x20a4>
   13180:	mov	r0, #1
   13184:	mov	r9, #0
   13188:	mov	r7, #5
   1318c:	b	131d8 <__mempcpy_chk@plt+0x2088>
   13190:	mov	r3, #1
   13194:	tst	r8, #1
   13198:	beq	131f4 <__mempcpy_chk@plt+0x20a4>
   1319c:	mov	r1, #1
   131a0:	mov	r9, #0
   131a4:	mov	r7, #2
   131a8:	mov	r3, r0
   131ac:	mov	r5, #1
   131b0:	str	r1, [fp, #-76]	; 0xffffffb4
   131b4:	movw	r1, #26663	; 0x6827
   131b8:	movt	r1, #1
   131bc:	str	r1, [sp, #92]	; 0x5c
   131c0:	b	133d0 <__mempcpy_chk@plt+0x2280>
   131c4:	mov	r7, #5
   131c8:	tst	r8, #1
   131cc:	beq	13214 <__mempcpy_chk@plt+0x20c4>
   131d0:	mov	r0, #1
   131d4:	mov	r9, #0
   131d8:	str	r0, [fp, #-76]	; 0xffffffb4
   131dc:	movw	r0, #27240	; 0x6a68
   131e0:	mov	r3, #1
   131e4:	mov	r5, #1
   131e8:	movt	r0, #1
   131ec:	str	r0, [sp, #92]	; 0x5c
   131f0:	b	133d0 <__mempcpy_chk@plt+0x2280>
   131f4:	cmp	sl, #0
   131f8:	mov	r9, #1
   131fc:	mov	r7, #2
   13200:	movne	r0, #39	; 0x27
   13204:	strbne	r0, [r6]
   13208:	movw	r0, #26663	; 0x6827
   1320c:	movt	r0, #1
   13210:	b	13230 <__mempcpy_chk@plt+0x20e0>
   13214:	cmp	sl, #0
   13218:	mov	r9, #1
   1321c:	mov	r3, #1
   13220:	movne	r0, #34	; 0x22
   13224:	strbne	r0, [r6]
   13228:	movw	r0, #27240	; 0x6a68
   1322c:	movt	r0, #1
   13230:	str	r0, [sp, #92]	; 0x5c
   13234:	mov	r0, #1
   13238:	str	r0, [fp, #-76]	; 0xffffffb4
   1323c:	mov	r5, #0
   13240:	b	133d0 <__mempcpy_chk@plt+0x2280>
   13244:	ldrb	r1, [r0, #1]
   13248:	and	r1, r1, #223	; 0xdf
   1324c:	cmp	r1, #66	; 0x42
   13250:	ldrbeq	r1, [r0, #2]
   13254:	cmpeq	r1, #49	; 0x31
   13258:	beq	14178 <__mempcpy_chk@plt+0x3028>
   1325c:	movw	r0, #26663	; 0x6827
   13260:	movw	r1, #27240	; 0x6a68
   13264:	cmp	r7, #9
   13268:	movt	r0, #1
   1326c:	movt	r1, #1
   13270:	moveq	r0, r1
   13274:	str	r0, [sp, #68]	; 0x44
   13278:	movw	r4, #26663	; 0x6827
   1327c:	mov	r0, #0
   13280:	mov	r2, #5
   13284:	movt	r4, #1
   13288:	mov	r1, r4
   1328c:	bl	10f70 <dcgettext@plt>
   13290:	cmp	r0, r4
   13294:	str	r0, [sp, #72]	; 0x48
   13298:	beq	132a8 <__mempcpy_chk@plt+0x2158>
   1329c:	mov	r4, r9
   132a0:	mov	r2, r8
   132a4:	b	13360 <__mempcpy_chk@plt+0x2210>
   132a8:	bl	15e0c <__mempcpy_chk@plt+0x4cbc>
   132ac:	ldrb	r1, [r0]
   132b0:	mov	r4, r9
   132b4:	and	r1, r1, #223	; 0xdf
   132b8:	cmp	r1, #71	; 0x47
   132bc:	beq	13318 <__mempcpy_chk@plt+0x21c8>
   132c0:	cmp	r1, #85	; 0x55
   132c4:	mov	r2, r8
   132c8:	bne	13340 <__mempcpy_chk@plt+0x21f0>
   132cc:	ldrb	r1, [r0, #1]
   132d0:	and	r1, r1, #223	; 0xdf
   132d4:	cmp	r1, #84	; 0x54
   132d8:	bne	13340 <__mempcpy_chk@plt+0x21f0>
   132dc:	ldrb	r1, [r0, #2]
   132e0:	and	r1, r1, #223	; 0xdf
   132e4:	cmp	r1, #70	; 0x46
   132e8:	ldrbeq	r1, [r0, #3]
   132ec:	cmpeq	r1, #45	; 0x2d
   132f0:	bne	13340 <__mempcpy_chk@plt+0x21f0>
   132f4:	ldrb	r1, [r0, #4]
   132f8:	cmp	r1, #56	; 0x38
   132fc:	ldrbeq	r0, [r0, #5]
   13300:	cmpeq	r0, #0
   13304:	bne	13340 <__mempcpy_chk@plt+0x21f0>
   13308:	movw	r0, #27248	; 0x6a70
   1330c:	movt	r0, #1
   13310:	str	r0, [sp, #72]	; 0x48
   13314:	b	13360 <__mempcpy_chk@plt+0x2210>
   13318:	ldrb	r1, [r0, #1]
   1331c:	mov	r2, r8
   13320:	and	r1, r1, #223	; 0xdf
   13324:	cmp	r1, #66	; 0x42
   13328:	bne	13340 <__mempcpy_chk@plt+0x21f0>
   1332c:	ldrb	r1, [r0, #2]
   13330:	cmp	r1, #49	; 0x31
   13334:	ldrbeq	r1, [r0, #3]
   13338:	cmpeq	r1, #56	; 0x38
   1333c:	beq	141bc <__mempcpy_chk@plt+0x306c>
   13340:	movw	r0, #26663	; 0x6827
   13344:	cmp	r7, #9
   13348:	movt	r0, #1
   1334c:	mov	r1, r0
   13350:	movw	r0, #27240	; 0x6a68
   13354:	movt	r0, #1
   13358:	moveq	r1, r0
   1335c:	str	r1, [sp, #72]	; 0x48
   13360:	mov	r8, r5
   13364:	mov	r9, #0
   13368:	tst	r8, #1
   1336c:	mov	r5, r8
   13370:	str	r2, [fp, #-48]	; 0xffffffd0
   13374:	bne	133ac <__mempcpy_chk@plt+0x225c>
   13378:	ldr	r0, [sp, #68]	; 0x44
   1337c:	ldrb	r0, [r0]
   13380:	cmp	r0, #0
   13384:	beq	133ac <__mempcpy_chk@plt+0x225c>
   13388:	ldr	r1, [sp, #68]	; 0x44
   1338c:	mov	r9, #0
   13390:	add	r1, r1, #1
   13394:	cmp	r9, sl
   13398:	strbcc	r0, [r6, r9]
   1339c:	ldrb	r0, [r1, r9]
   133a0:	add	r9, r9, #1
   133a4:	cmp	r0, #0
   133a8:	bne	13394 <__mempcpy_chk@plt+0x2244>
   133ac:	ldr	r8, [sp, #72]	; 0x48
   133b0:	mov	r0, r8
   133b4:	bl	11054 <strlen@plt>
   133b8:	ldr	ip, [fp, #-84]	; 0xffffffac
   133bc:	ldr	lr, [sp, #84]	; 0x54
   133c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   133c4:	str	r0, [fp, #-76]	; 0xffffffb4
   133c8:	str	r8, [sp, #92]	; 0x5c
   133cc:	mov	r3, #1
   133d0:	ldr	r0, [fp, #16]
   133d4:	str	r7, [fp, #-64]	; 0xffffffc0
   133d8:	str	r5, [fp, #-72]	; 0xffffffb8
   133dc:	str	r3, [sp, #80]	; 0x50
   133e0:	cmp	r0, #0
   133e4:	movwne	r0, #1
   133e8:	and	r0, r0, r5
   133ec:	str	r0, [fp, #-88]	; 0xffffffa8
   133f0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   133f4:	cmp	r0, #0
   133f8:	movwne	r0, #1
   133fc:	subs	r7, r7, #2
   13400:	and	r1, r0, r5
   13404:	str	r7, [fp, #-80]	; 0xffffffb0
   13408:	and	r1, r3, r1
   1340c:	str	r1, [sp, #40]	; 0x28
   13410:	clz	r1, r7
   13414:	lsr	r1, r1, #5
   13418:	and	r1, r1, r5
   1341c:	eor	r5, r5, #1
   13420:	str	r1, [sp, #36]	; 0x24
   13424:	mov	r1, r7
   13428:	str	r5, [sp, #88]	; 0x58
   1342c:	mov	r7, #0
   13430:	movwne	r1, #1
   13434:	orr	r5, r1, r5
   13438:	and	r1, r1, r3
   1343c:	and	r0, r0, r1
   13440:	str	r5, [sp, #60]	; 0x3c
   13444:	str	r1, [fp, #-68]	; 0xffffffbc
   13448:	str	r0, [fp, #-60]	; 0xffffffc4
   1344c:	eor	r0, r3, #1
   13450:	str	r0, [sp, #44]	; 0x2c
   13454:	cmn	lr, #1
   13458:	beq	13468 <__mempcpy_chk@plt+0x2318>
   1345c:	cmp	r7, lr
   13460:	bne	13474 <__mempcpy_chk@plt+0x2324>
   13464:	b	140ec <__mempcpy_chk@plt+0x2f9c>
   13468:	ldrb	r0, [ip, r7]
   1346c:	cmp	r0, #0
   13470:	beq	140f4 <__mempcpy_chk@plt+0x2fa4>
   13474:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13478:	mov	r8, #0
   1347c:	str	r4, [fp, #-52]	; 0xffffffcc
   13480:	str	r2, [fp, #-48]	; 0xffffffd0
   13484:	cmp	r0, #0
   13488:	beq	134bc <__mempcpy_chk@plt+0x236c>
   1348c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13490:	add	r4, r7, r0
   13494:	cmp	r0, #2
   13498:	bcc	134b4 <__mempcpy_chk@plt+0x2364>
   1349c:	cmn	lr, #1
   134a0:	bne	134b4 <__mempcpy_chk@plt+0x2364>
   134a4:	mov	r0, ip
   134a8:	bl	11054 <strlen@plt>
   134ac:	ldr	ip, [fp, #-84]	; 0xffffffac
   134b0:	mov	lr, r0
   134b4:	cmp	r4, lr
   134b8:	bls	134d4 <__mempcpy_chk@plt+0x2384>
   134bc:	mov	r0, #0
   134c0:	str	r0, [fp, #-56]	; 0xffffffc8
   134c4:	ldrb	r5, [ip, r7]
   134c8:	cmp	r5, #126	; 0x7e
   134cc:	bls	13524 <__mempcpy_chk@plt+0x23d4>
   134d0:	b	1392c <__mempcpy_chk@plt+0x27dc>
   134d4:	ldr	r1, [sp, #92]	; 0x5c
   134d8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   134dc:	add	r0, ip, r7
   134e0:	mov	r4, lr
   134e4:	bl	10f64 <memcmp@plt>
   134e8:	ldr	r2, [sp, #88]	; 0x58
   134ec:	cmp	r0, #0
   134f0:	mov	r1, r0
   134f4:	movwne	r1, #1
   134f8:	orr	r1, r1, r2
   134fc:	tst	r1, #1
   13500:	beq	14200 <__mempcpy_chk@plt+0x30b0>
   13504:	ldr	ip, [fp, #-84]	; 0xffffffac
   13508:	clz	r0, r0
   1350c:	mov	lr, r4
   13510:	lsr	r0, r0, #5
   13514:	str	r0, [fp, #-56]	; 0xffffffc8
   13518:	ldrb	r5, [ip, r7]
   1351c:	cmp	r5, #126	; 0x7e
   13520:	bhi	1392c <__mempcpy_chk@plt+0x27dc>
   13524:	add	r3, pc, #16
   13528:	mov	r4, #1
   1352c:	mov	r2, #110	; 0x6e
   13530:	mov	r0, #97	; 0x61
   13534:	mov	r1, #0
   13538:	ldr	pc, [r3, r5, lsl #2]
   1353c:	andeq	r3, r1, ip, lsl #16
   13540:	andeq	r3, r1, ip, lsr #18
   13544:	andeq	r3, r1, ip, lsr #18
   13548:	andeq	r3, r1, ip, lsr #18
   1354c:	andeq	r3, r1, ip, lsr #18
   13550:	andeq	r3, r1, ip, lsr #18
   13554:	andeq	r3, r1, ip, lsr #18
   13558:	andeq	r3, r1, r8, lsl #20
   1355c:	andeq	r3, r1, ip, ror #15
   13560:	ldrdeq	r3, [r1], -r4
   13564:	strdeq	r3, [r1], -r8
   13568:	andeq	r3, r1, r8, lsl #17
   1356c:	andeq	r3, r1, ip, asr #15
   13570:	strdeq	r3, [r1], -r4
   13574:	andeq	r3, r1, ip, lsr #18
   13578:	andeq	r3, r1, ip, lsr #18
   1357c:	andeq	r3, r1, ip, lsr #18
   13580:	andeq	r3, r1, ip, lsr #18
   13584:	andeq	r3, r1, ip, lsr #18
   13588:	andeq	r3, r1, ip, lsr #18
   1358c:	andeq	r3, r1, ip, lsr #18
   13590:	andeq	r3, r1, ip, lsr #18
   13594:	andeq	r3, r1, ip, lsr #18
   13598:	andeq	r3, r1, ip, lsr #18
   1359c:	andeq	r3, r1, ip, lsr #18
   135a0:	andeq	r3, r1, ip, lsr #18
   135a4:	andeq	r3, r1, ip, lsr #18
   135a8:	andeq	r3, r1, ip, lsr #18
   135ac:	andeq	r3, r1, ip, lsr #18
   135b0:	andeq	r3, r1, ip, lsr #18
   135b4:	andeq	r3, r1, ip, lsr #18
   135b8:	andeq	r3, r1, ip, lsr #18
   135bc:	andeq	r3, r1, r4, lsl #19
   135c0:	andeq	r3, r1, r8, lsl #19
   135c4:	andeq	r3, r1, r8, lsl #19
   135c8:	andeq	r3, r1, r8, asr r7
   135cc:	andeq	r3, r1, r8, lsl #19
   135d0:	andeq	r3, r1, r8, lsr r7
   135d4:	andeq	r3, r1, r8, lsl #19
   135d8:	muleq	r1, r0, r8
   135dc:	andeq	r3, r1, r8, lsl #19
   135e0:	andeq	r3, r1, r8, lsl #19
   135e4:	andeq	r3, r1, r8, lsl #19
   135e8:	andeq	r3, r1, r8, lsr r7
   135ec:	andeq	r3, r1, r8, lsr r7
   135f0:	andeq	r3, r1, r8, lsr r7
   135f4:	andeq	r3, r1, r8, lsr r7
   135f8:	andeq	r3, r1, r8, lsr r7
   135fc:	andeq	r3, r1, r8, lsr r7
   13600:	andeq	r3, r1, r8, lsr r7
   13604:	andeq	r3, r1, r8, lsr r7
   13608:	andeq	r3, r1, r8, lsr r7
   1360c:	andeq	r3, r1, r8, lsr r7
   13610:	andeq	r3, r1, r8, lsr r7
   13614:	andeq	r3, r1, r8, lsr r7
   13618:	andeq	r3, r1, r8, lsr r7
   1361c:	andeq	r3, r1, r8, lsr r7
   13620:	andeq	r3, r1, r8, lsr r7
   13624:	andeq	r3, r1, r8, lsr r7
   13628:	andeq	r3, r1, r8, lsl #19
   1362c:	andeq	r3, r1, r8, lsl #19
   13630:	andeq	r3, r1, r8, lsl #19
   13634:	andeq	r3, r1, r8, lsl #19
   13638:	andeq	r3, r1, ip, asr #16
   1363c:	andeq	r3, r1, ip, lsr #18
   13640:	andeq	r3, r1, r8, lsr r7
   13644:	andeq	r3, r1, r8, lsr r7
   13648:	andeq	r3, r1, r8, lsr r7
   1364c:	andeq	r3, r1, r8, lsr r7
   13650:	andeq	r3, r1, r8, lsr r7
   13654:	andeq	r3, r1, r8, lsr r7
   13658:	andeq	r3, r1, r8, lsr r7
   1365c:	andeq	r3, r1, r8, lsr r7
   13660:	andeq	r3, r1, r8, lsr r7
   13664:	andeq	r3, r1, r8, lsr r7
   13668:	andeq	r3, r1, r8, lsr r7
   1366c:	andeq	r3, r1, r8, lsr r7
   13670:	andeq	r3, r1, r8, lsr r7
   13674:	andeq	r3, r1, r8, lsr r7
   13678:	andeq	r3, r1, r8, lsr r7
   1367c:	andeq	r3, r1, r8, lsr r7
   13680:	andeq	r3, r1, r8, lsr r7
   13684:	andeq	r3, r1, r8, lsr r7
   13688:	andeq	r3, r1, r8, lsr r7
   1368c:	andeq	r3, r1, r8, lsr r7
   13690:	andeq	r3, r1, r8, lsr r7
   13694:	andeq	r3, r1, r8, lsr r7
   13698:	andeq	r3, r1, r8, lsr r7
   1369c:	andeq	r3, r1, r8, lsr r7
   136a0:	andeq	r3, r1, r8, lsr r7
   136a4:	andeq	r3, r1, r8, lsr r7
   136a8:	andeq	r3, r1, r8, lsl #19
   136ac:	muleq	r1, r8, r7
   136b0:	andeq	r3, r1, r8, lsr r7
   136b4:	andeq	r3, r1, r8, lsl #19
   136b8:	andeq	r3, r1, r8, lsr r7
   136bc:	andeq	r3, r1, r8, lsl #19
   136c0:	andeq	r3, r1, r8, lsr r7
   136c4:	andeq	r3, r1, r8, lsr r7
   136c8:	andeq	r3, r1, r8, lsr r7
   136cc:	andeq	r3, r1, r8, lsr r7
   136d0:	andeq	r3, r1, r8, lsr r7
   136d4:	andeq	r3, r1, r8, lsr r7
   136d8:	andeq	r3, r1, r8, lsr r7
   136dc:	andeq	r3, r1, r8, lsr r7
   136e0:	andeq	r3, r1, r8, lsr r7
   136e4:	andeq	r3, r1, r8, lsr r7
   136e8:	andeq	r3, r1, r8, lsr r7
   136ec:	andeq	r3, r1, r8, lsr r7
   136f0:	andeq	r3, r1, r8, lsr r7
   136f4:	andeq	r3, r1, r8, lsr r7
   136f8:	andeq	r3, r1, r8, lsr r7
   136fc:	andeq	r3, r1, r8, lsr r7
   13700:	andeq	r3, r1, r8, lsr r7
   13704:	andeq	r3, r1, r8, lsr r7
   13708:	andeq	r3, r1, r8, lsr r7
   1370c:	andeq	r3, r1, r8, lsr r7
   13710:	andeq	r3, r1, r8, lsr r7
   13714:	andeq	r3, r1, r8, lsr r7
   13718:	andeq	r3, r1, r8, lsr r7
   1371c:	andeq	r3, r1, r8, lsr r7
   13720:	andeq	r3, r1, r8, lsr r7
   13724:	andeq	r3, r1, r8, lsr r7
   13728:	andeq	r3, r1, r8, ror r7
   1372c:	andeq	r3, r1, r8, lsl #19
   13730:	andeq	r3, r1, r8, ror r7
   13734:	andeq	r3, r1, r8, asr r7
   13738:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1373c:	cmp	r0, #0
   13740:	beq	13a1c <__mempcpy_chk@plt+0x28cc>
   13744:	ldr	r0, [fp, #16]
   13748:	cmp	r0, #0
   1374c:	mov	r0, r5
   13750:	bne	13a2c <__mempcpy_chk@plt+0x28dc>
   13754:	b	13a4c <__mempcpy_chk@plt+0x28fc>
   13758:	mov	r4, #0
   1375c:	cmp	r7, #0
   13760:	beq	13984 <__mempcpy_chk@plt+0x2834>
   13764:	mov	r8, #0
   13768:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1376c:	cmp	r0, #0
   13770:	bne	13744 <__mempcpy_chk@plt+0x25f4>
   13774:	b	13a1c <__mempcpy_chk@plt+0x28cc>
   13778:	mov	r4, #0
   1377c:	cmn	lr, #1
   13780:	beq	1395c <__mempcpy_chk@plt+0x280c>
   13784:	cmp	r7, #0
   13788:	bne	13764 <__mempcpy_chk@plt+0x2614>
   1378c:	cmp	lr, #1
   13790:	beq	13984 <__mempcpy_chk@plt+0x2834>
   13794:	b	13764 <__mempcpy_chk@plt+0x2614>
   13798:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1379c:	cmp	r0, #2
   137a0:	bne	139b4 <__mempcpy_chk@plt+0x2864>
   137a4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   137a8:	tst	r0, #1
   137ac:	bne	14214 <__mempcpy_chk@plt+0x30c4>
   137b0:	mov	r8, #0
   137b4:	mov	r0, #92	; 0x5c
   137b8:	mov	r4, #0
   137bc:	cmp	r8, #0
   137c0:	beq	139d4 <__mempcpy_chk@plt+0x2884>
   137c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   137c8:	b	13ac8 <__mempcpy_chk@plt+0x2978>
   137cc:	mov	r0, #102	; 0x66
   137d0:	b	13a08 <__mempcpy_chk@plt+0x28b8>
   137d4:	mov	r2, #116	; 0x74
   137d8:	ldr	r0, [sp, #60]	; 0x3c
   137dc:	tst	r0, #1
   137e0:	mov	r0, r2
   137e4:	bne	13a08 <__mempcpy_chk@plt+0x28b8>
   137e8:	b	14214 <__mempcpy_chk@plt+0x30c4>
   137ec:	mov	r0, #98	; 0x62
   137f0:	b	13a08 <__mempcpy_chk@plt+0x28b8>
   137f4:	mov	r2, #114	; 0x72
   137f8:	ldr	r0, [sp, #60]	; 0x3c
   137fc:	tst	r0, #1
   13800:	mov	r0, r2
   13804:	bne	13a08 <__mempcpy_chk@plt+0x28b8>
   13808:	b	14214 <__mempcpy_chk@plt+0x30c4>
   1380c:	ldr	r0, [sp, #80]	; 0x50
   13810:	tst	r0, #1
   13814:	beq	13af0 <__mempcpy_chk@plt+0x29a0>
   13818:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1381c:	tst	r0, #1
   13820:	bne	1433c <__mempcpy_chk@plt+0x31ec>
   13824:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13828:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1382c:	cmp	r0, #2
   13830:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13834:	movwne	r0, #1
   13838:	orr	r0, r0, r2
   1383c:	tst	r0, #1
   13840:	beq	13de8 <__mempcpy_chk@plt+0x2c98>
   13844:	mov	r0, r9
   13848:	b	13e1c <__mempcpy_chk@plt+0x2ccc>
   1384c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13850:	mov	r8, #0
   13854:	mov	r5, #63	; 0x3f
   13858:	cmp	r0, #5
   1385c:	beq	13ca4 <__mempcpy_chk@plt+0x2b54>
   13860:	cmp	r0, #2
   13864:	bne	13d54 <__mempcpy_chk@plt+0x2c04>
   13868:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1386c:	tst	r0, #1
   13870:	bne	14214 <__mempcpy_chk@plt+0x30c4>
   13874:	mov	r4, #0
   13878:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1387c:	cmp	r0, #0
   13880:	bne	13744 <__mempcpy_chk@plt+0x25f4>
   13884:	b	13a1c <__mempcpy_chk@plt+0x28cc>
   13888:	mov	r0, #118	; 0x76
   1388c:	b	13a08 <__mempcpy_chk@plt+0x28b8>
   13890:	mov	r0, #1
   13894:	mov	r5, #39	; 0x27
   13898:	str	r0, [sp, #52]	; 0x34
   1389c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   138a0:	cmp	r0, #2
   138a4:	bne	13918 <__mempcpy_chk@plt+0x27c8>
   138a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   138ac:	tst	r0, #1
   138b0:	bne	14214 <__mempcpy_chk@plt+0x30c4>
   138b4:	ldr	r2, [sp, #48]	; 0x30
   138b8:	clz	r1, sl
   138bc:	mov	r8, #0
   138c0:	lsr	r1, r1, #5
   138c4:	cmp	r2, #0
   138c8:	mov	r0, r2
   138cc:	movwne	r0, #1
   138d0:	orrs	r0, r0, r1
   138d4:	moveq	r2, sl
   138d8:	moveq	sl, r0
   138dc:	cmp	r9, sl
   138e0:	str	r2, [sp, #48]	; 0x30
   138e4:	movcc	r0, #39	; 0x27
   138e8:	strbcc	r0, [r6, r9]
   138ec:	add	r0, r9, #1
   138f0:	cmp	r0, sl
   138f4:	movcc	r1, #92	; 0x5c
   138f8:	strbcc	r1, [r6, r0]
   138fc:	add	r0, r9, #2
   13900:	add	r9, r9, #3
   13904:	cmp	r0, sl
   13908:	movcc	r1, #39	; 0x27
   1390c:	strbcc	r1, [r6, r0]
   13910:	mov	r0, #0
   13914:	str	r0, [fp, #-48]	; 0xffffffd0
   13918:	mov	r4, #1
   1391c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13920:	cmp	r0, #0
   13924:	bne	13744 <__mempcpy_chk@plt+0x25f4>
   13928:	b	13a1c <__mempcpy_chk@plt+0x28cc>
   1392c:	ldr	r0, [sp, #32]
   13930:	cmp	r0, #1
   13934:	bne	13b20 <__mempcpy_chk@plt+0x29d0>
   13938:	str	lr, [sp, #84]	; 0x54
   1393c:	bl	1103c <__ctype_b_loc@plt>
   13940:	ldr	r0, [r0]
   13944:	ldr	ip, [fp, #-84]	; 0xffffffac
   13948:	mov	r1, #1
   1394c:	add	r0, r0, r5, lsl #1
   13950:	ldrb	r0, [r0, #1]
   13954:	ubfx	r4, r0, #6, #1
   13958:	b	13f18 <__mempcpy_chk@plt+0x2dc8>
   1395c:	cmp	r7, #0
   13960:	ldrbeq	r0, [ip, #1]
   13964:	cmpeq	r0, #0
   13968:	beq	13984 <__mempcpy_chk@plt+0x2834>
   1396c:	mvn	lr, #0
   13970:	mov	r8, #0
   13974:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13978:	cmp	r0, #0
   1397c:	bne	13744 <__mempcpy_chk@plt+0x25f4>
   13980:	b	13a1c <__mempcpy_chk@plt+0x28cc>
   13984:	mov	r1, #1
   13988:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1398c:	cmp	r0, #2
   13990:	bne	139a0 <__mempcpy_chk@plt+0x2850>
   13994:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13998:	tst	r0, #1
   1399c:	bne	14214 <__mempcpy_chk@plt+0x30c4>
   139a0:	mov	r4, r1
   139a4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   139a8:	cmp	r0, #0
   139ac:	bne	13744 <__mempcpy_chk@plt+0x25f4>
   139b0:	b	13a1c <__mempcpy_chk@plt+0x28cc>
   139b4:	ldr	r1, [sp, #40]	; 0x28
   139b8:	mov	r8, #0
   139bc:	mov	r0, #92	; 0x5c
   139c0:	cmp	r1, #0
   139c4:	beq	13a08 <__mempcpy_chk@plt+0x28b8>
   139c8:	mov	r4, #0
   139cc:	cmp	r8, #0
   139d0:	bne	137c4 <__mempcpy_chk@plt+0x2674>
   139d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   139d8:	tst	r2, #1
   139dc:	beq	13ac8 <__mempcpy_chk@plt+0x2978>
   139e0:	cmp	r9, sl
   139e4:	movcc	r1, #39	; 0x27
   139e8:	strbcc	r1, [r6, r9]
   139ec:	add	r1, r9, #1
   139f0:	add	r9, r9, #2
   139f4:	cmp	r1, sl
   139f8:	movcc	r2, #39	; 0x27
   139fc:	strbcc	r2, [r6, r1]
   13a00:	mov	r2, #0
   13a04:	b	13ac8 <__mempcpy_chk@plt+0x2978>
   13a08:	ldr	r1, [sp, #80]	; 0x50
   13a0c:	mov	r4, #0
   13a10:	mov	r8, #0
   13a14:	tst	r1, #1
   13a18:	bne	13a58 <__mempcpy_chk@plt+0x2908>
   13a1c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13a20:	cmp	r0, #0
   13a24:	mov	r0, r5
   13a28:	beq	13a4c <__mempcpy_chk@plt+0x28fc>
   13a2c:	ldr	r1, [fp, #16]
   13a30:	ubfx	r0, r5, #5, #3
   13a34:	mov	r2, #1
   13a38:	ldr	r0, [r1, r0, lsl #2]
   13a3c:	and	r1, r5, #31
   13a40:	tst	r0, r2, lsl r1
   13a44:	mov	r0, r5
   13a48:	bne	13a58 <__mempcpy_chk@plt+0x2908>
   13a4c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13a50:	cmp	r1, #0
   13a54:	beq	13eb0 <__mempcpy_chk@plt+0x2d60>
   13a58:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13a5c:	tst	r1, #1
   13a60:	bne	141f4 <__mempcpy_chk@plt+0x30a4>
   13a64:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13a68:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13a6c:	cmp	r1, #2
   13a70:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13a74:	movwne	r1, #1
   13a78:	orr	r1, r1, r2
   13a7c:	tst	r1, #1
   13a80:	bne	13ab8 <__mempcpy_chk@plt+0x2968>
   13a84:	cmp	r9, sl
   13a88:	movcc	r1, #39	; 0x27
   13a8c:	strbcc	r1, [r6, r9]
   13a90:	add	r1, r9, #1
   13a94:	cmp	r1, sl
   13a98:	movcc	r2, #36	; 0x24
   13a9c:	strbcc	r2, [r6, r1]
   13aa0:	add	r1, r9, #2
   13aa4:	add	r9, r9, #3
   13aa8:	cmp	r1, sl
   13aac:	movcc	r2, #39	; 0x27
   13ab0:	strbcc	r2, [r6, r1]
   13ab4:	mov	r2, #1
   13ab8:	cmp	r9, sl
   13abc:	movcc	r1, #92	; 0x5c
   13ac0:	strbcc	r1, [r6, r9]
   13ac4:	add	r9, r9, #1
   13ac8:	cmp	r9, sl
   13acc:	add	r7, r7, #1
   13ad0:	strbcc	r0, [r6, r9]
   13ad4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13ad8:	add	r9, r9, #1
   13adc:	and	r0, r0, r4
   13ae0:	mov	r4, r0
   13ae4:	cmn	lr, #1
   13ae8:	bne	1345c <__mempcpy_chk@plt+0x230c>
   13aec:	b	13468 <__mempcpy_chk@plt+0x2318>
   13af0:	ldr	r0, [sp, #28]
   13af4:	mov	r4, #0
   13af8:	mov	r8, #0
   13afc:	mov	r5, #0
   13b00:	cmp	r0, #0
   13b04:	beq	13a1c <__mempcpy_chk@plt+0x28cc>
   13b08:	ldr	r4, [fp, #-52]	; 0xffffffcc
   13b0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13b10:	add	r7, r7, #1
   13b14:	cmn	lr, #1
   13b18:	bne	1345c <__mempcpy_chk@plt+0x230c>
   13b1c:	b	13468 <__mempcpy_chk@plt+0x2318>
   13b20:	mov	r0, #0
   13b24:	cmn	lr, #1
   13b28:	str	r0, [fp, #-36]	; 0xffffffdc
   13b2c:	str	r0, [fp, #-40]	; 0xffffffd8
   13b30:	bne	13b44 <__mempcpy_chk@plt+0x29f4>
   13b34:	mov	r0, ip
   13b38:	bl	11054 <strlen@plt>
   13b3c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b40:	mov	lr, r0
   13b44:	ldr	r0, [sp, #36]	; 0x24
   13b48:	str	sl, [sp, #56]	; 0x38
   13b4c:	str	lr, [sp, #84]	; 0x54
   13b50:	cmp	r0, #0
   13b54:	beq	13d6c <__mempcpy_chk@plt+0x2c1c>
   13b58:	add	r0, ip, r7
   13b5c:	mov	r4, #1
   13b60:	mov	r6, #0
   13b64:	sub	sl, fp, #40	; 0x28
   13b68:	str	r0, [sp, #20]
   13b6c:	str	r6, [sp, #64]	; 0x40
   13b70:	add	r6, r6, r7
   13b74:	sub	r0, fp, #44	; 0x2c
   13b78:	mov	r3, sl
   13b7c:	add	r1, ip, r6
   13b80:	sub	r2, lr, r6
   13b84:	bl	15e44 <__mempcpy_chk@plt+0x4cf4>
   13b88:	cmn	r0, #2
   13b8c:	beq	13ec8 <__mempcpy_chk@plt+0x2d78>
   13b90:	ldr	sl, [sp, #56]	; 0x38
   13b94:	cmn	r0, #1
   13b98:	beq	13ebc <__mempcpy_chk@plt+0x2d6c>
   13b9c:	cmp	r0, #0
   13ba0:	beq	13ec0 <__mempcpy_chk@plt+0x2d70>
   13ba4:	cmp	r0, #2
   13ba8:	bcc	13c68 <__mempcpy_chk@plt+0x2b18>
   13bac:	ldr	r1, [sp, #64]	; 0x40
   13bb0:	ldr	r2, [sp, #20]
   13bb4:	add	r1, r2, r1
   13bb8:	mov	r2, #1
   13bbc:	ldrb	r3, [r1, r2]
   13bc0:	sub	r3, r3, #91	; 0x5b
   13bc4:	cmp	r3, #33	; 0x21
   13bc8:	bhi	13c5c <__mempcpy_chk@plt+0x2b0c>
   13bcc:	add	r6, pc, #0
   13bd0:	ldr	pc, [r6, r3, lsl #2]
   13bd4:	andeq	r4, r1, r0, lsr #4
   13bd8:	andeq	r4, r1, r0, lsr #4
   13bdc:	andeq	r3, r1, ip, asr ip
   13be0:	andeq	r4, r1, r0, lsr #4
   13be4:	andeq	r3, r1, ip, asr ip
   13be8:	andeq	r4, r1, r0, lsr #4
   13bec:	andeq	r3, r1, ip, asr ip
   13bf0:	andeq	r3, r1, ip, asr ip
   13bf4:	andeq	r3, r1, ip, asr ip
   13bf8:	andeq	r3, r1, ip, asr ip
   13bfc:	andeq	r3, r1, ip, asr ip
   13c00:	andeq	r3, r1, ip, asr ip
   13c04:	andeq	r3, r1, ip, asr ip
   13c08:	andeq	r3, r1, ip, asr ip
   13c0c:	andeq	r3, r1, ip, asr ip
   13c10:	andeq	r3, r1, ip, asr ip
   13c14:	andeq	r3, r1, ip, asr ip
   13c18:	andeq	r3, r1, ip, asr ip
   13c1c:	andeq	r3, r1, ip, asr ip
   13c20:	andeq	r3, r1, ip, asr ip
   13c24:	andeq	r3, r1, ip, asr ip
   13c28:	andeq	r3, r1, ip, asr ip
   13c2c:	andeq	r3, r1, ip, asr ip
   13c30:	andeq	r3, r1, ip, asr ip
   13c34:	andeq	r3, r1, ip, asr ip
   13c38:	andeq	r3, r1, ip, asr ip
   13c3c:	andeq	r3, r1, ip, asr ip
   13c40:	andeq	r3, r1, ip, asr ip
   13c44:	andeq	r3, r1, ip, asr ip
   13c48:	andeq	r3, r1, ip, asr ip
   13c4c:	andeq	r3, r1, ip, asr ip
   13c50:	andeq	r3, r1, ip, asr ip
   13c54:	andeq	r3, r1, ip, asr ip
   13c58:	andeq	r4, r1, r0, lsr #4
   13c5c:	add	r2, r2, #1
   13c60:	cmp	r2, r0
   13c64:	bcc	13bbc <__mempcpy_chk@plt+0x2a6c>
   13c68:	ldr	r6, [sp, #64]	; 0x40
   13c6c:	add	r6, r0, r6
   13c70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c74:	bl	10f94 <iswprint@plt>
   13c78:	cmp	r0, #0
   13c7c:	sub	sl, fp, #40	; 0x28
   13c80:	movwne	r0, #1
   13c84:	and	r4, r4, r0
   13c88:	mov	r0, sl
   13c8c:	bl	10f40 <mbsinit@plt>
   13c90:	ldr	ip, [fp, #-84]	; 0xffffffac
   13c94:	ldr	lr, [sp, #84]	; 0x54
   13c98:	cmp	r0, #0
   13c9c:	beq	13b6c <__mempcpy_chk@plt+0x2a1c>
   13ca0:	b	13f0c <__mempcpy_chk@plt+0x2dbc>
   13ca4:	ldr	r0, [sp, #24]
   13ca8:	cmp	r0, #0
   13cac:	beq	13d54 <__mempcpy_chk@plt+0x2c04>
   13cb0:	add	r0, r7, #2
   13cb4:	cmp	r0, lr
   13cb8:	bcs	13d54 <__mempcpy_chk@plt+0x2c04>
   13cbc:	add	r1, ip, r7
   13cc0:	ldrb	r1, [r1, #1]
   13cc4:	cmp	r1, #63	; 0x3f
   13cc8:	bne	13d54 <__mempcpy_chk@plt+0x2c04>
   13ccc:	ldrb	r5, [ip, r0]
   13cd0:	sub	r1, r5, #33	; 0x21
   13cd4:	cmp	r1, #29
   13cd8:	bhi	13d54 <__mempcpy_chk@plt+0x2c04>
   13cdc:	movw	r3, #20929	; 0x51c1
   13ce0:	mov	r2, #1
   13ce4:	movt	r3, #14336	; 0x3800
   13ce8:	tst	r3, r2, lsl r1
   13cec:	beq	13d54 <__mempcpy_chk@plt+0x2c04>
   13cf0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13cf4:	tst	r1, #1
   13cf8:	bne	14344 <__mempcpy_chk@plt+0x31f4>
   13cfc:	cmp	r9, sl
   13d00:	mov	r7, r0
   13d04:	mov	r4, #0
   13d08:	movcc	r1, #63	; 0x3f
   13d0c:	strbcc	r1, [r6, r9]
   13d10:	add	r1, r9, #1
   13d14:	cmp	r1, sl
   13d18:	movcc	r2, #34	; 0x22
   13d1c:	strbcc	r2, [r6, r1]
   13d20:	add	r1, r9, #2
   13d24:	cmp	r1, sl
   13d28:	movcc	r2, #34	; 0x22
   13d2c:	strbcc	r2, [r6, r1]
   13d30:	add	r1, r9, #3
   13d34:	add	r9, r9, #4
   13d38:	cmp	r1, sl
   13d3c:	movcc	r2, #63	; 0x3f
   13d40:	strbcc	r2, [r6, r1]
   13d44:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13d48:	cmp	r0, #0
   13d4c:	bne	13744 <__mempcpy_chk@plt+0x25f4>
   13d50:	b	13a1c <__mempcpy_chk@plt+0x28cc>
   13d54:	mov	r5, #63	; 0x3f
   13d58:	mov	r4, #0
   13d5c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13d60:	cmp	r0, #0
   13d64:	bne	13744 <__mempcpy_chk@plt+0x25f4>
   13d68:	b	13a1c <__mempcpy_chk@plt+0x28cc>
   13d6c:	mov	r4, #1
   13d70:	mov	r6, #0
   13d74:	sub	sl, fp, #40	; 0x28
   13d78:	str	r6, [sp, #64]	; 0x40
   13d7c:	add	r6, r6, r7
   13d80:	sub	r0, fp, #44	; 0x2c
   13d84:	mov	r3, sl
   13d88:	add	r1, ip, r6
   13d8c:	sub	r2, lr, r6
   13d90:	bl	15e44 <__mempcpy_chk@plt+0x4cf4>
   13d94:	cmn	r0, #2
   13d98:	beq	13ec8 <__mempcpy_chk@plt+0x2d78>
   13d9c:	cmn	r0, #1
   13da0:	beq	13ebc <__mempcpy_chk@plt+0x2d6c>
   13da4:	ldr	r6, [sp, #64]	; 0x40
   13da8:	cmp	r0, #0
   13dac:	beq	13f08 <__mempcpy_chk@plt+0x2db8>
   13db0:	add	r6, r0, r6
   13db4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13db8:	bl	10f94 <iswprint@plt>
   13dbc:	cmp	r0, #0
   13dc0:	sub	sl, fp, #40	; 0x28
   13dc4:	movwne	r0, #1
   13dc8:	and	r4, r4, r0
   13dcc:	mov	r0, sl
   13dd0:	bl	10f40 <mbsinit@plt>
   13dd4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13dd8:	ldr	lr, [sp, #84]	; 0x54
   13ddc:	cmp	r0, #0
   13de0:	beq	13d78 <__mempcpy_chk@plt+0x2c28>
   13de4:	b	13f0c <__mempcpy_chk@plt+0x2dbc>
   13de8:	cmp	r9, sl
   13dec:	mov	r2, #1
   13df0:	movcc	r0, #39	; 0x27
   13df4:	strbcc	r0, [r6, r9]
   13df8:	add	r0, r9, #1
   13dfc:	cmp	r0, sl
   13e00:	movcc	r1, #36	; 0x24
   13e04:	strbcc	r1, [r6, r0]
   13e08:	add	r0, r9, #2
   13e0c:	cmp	r0, sl
   13e10:	movcc	r1, #39	; 0x27
   13e14:	strbcc	r1, [r6, r0]
   13e18:	add	r0, r9, #3
   13e1c:	cmp	r0, sl
   13e20:	add	r9, r0, #1
   13e24:	str	r2, [fp, #-48]	; 0xffffffd0
   13e28:	movcc	r1, #92	; 0x5c
   13e2c:	strbcc	r1, [r6, r0]
   13e30:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13e34:	cmp	r1, #2
   13e38:	beq	13e98 <__mempcpy_chk@plt+0x2d48>
   13e3c:	add	r1, r7, #1
   13e40:	mov	r4, #0
   13e44:	mov	r8, #1
   13e48:	mov	r5, #48	; 0x30
   13e4c:	cmp	r1, lr
   13e50:	bcs	13738 <__mempcpy_chk@plt+0x25e8>
   13e54:	ldrb	r1, [ip, r1]
   13e58:	sub	r1, r1, #48	; 0x30
   13e5c:	uxtb	r1, r1
   13e60:	cmp	r1, #9
   13e64:	bhi	13738 <__mempcpy_chk@plt+0x25e8>
   13e68:	cmp	r9, sl
   13e6c:	movcc	r1, #48	; 0x30
   13e70:	strbcc	r1, [r6, r9]
   13e74:	add	r1, r0, #2
   13e78:	add	r9, r0, #3
   13e7c:	cmp	r1, sl
   13e80:	movcc	r2, #48	; 0x30
   13e84:	strbcc	r2, [r6, r1]
   13e88:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13e8c:	cmp	r0, #0
   13e90:	bne	13744 <__mempcpy_chk@plt+0x25f4>
   13e94:	b	13a1c <__mempcpy_chk@plt+0x28cc>
   13e98:	mov	r0, #48	; 0x30
   13e9c:	mov	r8, #1
   13ea0:	mov	r4, #0
   13ea4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13ea8:	cmp	r1, #0
   13eac:	bne	13a58 <__mempcpy_chk@plt+0x2908>
   13eb0:	cmp	r8, #0
   13eb4:	beq	139d4 <__mempcpy_chk@plt+0x2884>
   13eb8:	b	137c4 <__mempcpy_chk@plt+0x2674>
   13ebc:	mov	r4, #0
   13ec0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ec4:	b	13f00 <__mempcpy_chk@plt+0x2db0>
   13ec8:	ldr	r1, [sp, #84]	; 0x54
   13ecc:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ed0:	mov	r4, #0
   13ed4:	cmp	r6, r1
   13ed8:	bcs	13f00 <__mempcpy_chk@plt+0x2db0>
   13edc:	ldrb	r0, [ip, r6]
   13ee0:	cmp	r0, #0
   13ee4:	beq	13f00 <__mempcpy_chk@plt+0x2db0>
   13ee8:	ldr	r0, [sp, #64]	; 0x40
   13eec:	add	r0, r0, #1
   13ef0:	add	r6, r0, r7
   13ef4:	str	r0, [sp, #64]	; 0x40
   13ef8:	cmp	r6, r1
   13efc:	bcc	13edc <__mempcpy_chk@plt+0x2d8c>
   13f00:	ldr	r6, [sp, #64]	; 0x40
   13f04:	b	13f0c <__mempcpy_chk@plt+0x2dbc>
   13f08:	ldr	ip, [fp, #-84]	; 0xffffffac
   13f0c:	mov	r1, r6
   13f10:	ldr	r6, [sp, #76]	; 0x4c
   13f14:	ldr	sl, [sp, #56]	; 0x38
   13f18:	ldr	r0, [sp, #44]	; 0x2c
   13f1c:	cmp	r1, #1
   13f20:	orr	r2, r4, r0
   13f24:	mov	r0, r1
   13f28:	bhi	13f48 <__mempcpy_chk@plt+0x2df8>
   13f2c:	tst	r2, #1
   13f30:	beq	13f48 <__mempcpy_chk@plt+0x2df8>
   13f34:	ldr	lr, [sp, #84]	; 0x54
   13f38:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13f3c:	cmp	r0, #0
   13f40:	bne	13744 <__mempcpy_chk@plt+0x25f4>
   13f44:	b	13a1c <__mempcpy_chk@plt+0x28cc>
   13f48:	str	r2, [sp, #64]	; 0x40
   13f4c:	add	r0, r0, r7
   13f50:	add	r1, r7, #1
   13f54:	ldr	lr, [sp, #84]	; 0x54
   13f58:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13f5c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13f60:	mov	r3, #0
   13f64:	str	r0, [sp, #56]	; 0x38
   13f68:	ldr	r0, [sp, #64]	; 0x40
   13f6c:	tst	r0, #1
   13f70:	bne	14058 <__mempcpy_chk@plt+0x2f08>
   13f74:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13f78:	tst	r0, #1
   13f7c:	bne	141f8 <__mempcpy_chk@plt+0x30a8>
   13f80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13f84:	cmp	r7, #2
   13f88:	movwne	r3, #1
   13f8c:	orr	r3, r3, r2
   13f90:	tst	r3, #1
   13f94:	bne	13fcc <__mempcpy_chk@plt+0x2e7c>
   13f98:	cmp	r9, sl
   13f9c:	add	r3, r9, #1
   13fa0:	movcc	r2, #39	; 0x27
   13fa4:	strbcc	r2, [r6, r9]
   13fa8:	cmp	r3, sl
   13fac:	movcc	r2, #36	; 0x24
   13fb0:	strbcc	r2, [r6, r3]
   13fb4:	add	r3, r9, #2
   13fb8:	add	r9, r9, #3
   13fbc:	cmp	r3, sl
   13fc0:	movcc	r2, #39	; 0x27
   13fc4:	strbcc	r2, [r6, r3]
   13fc8:	mov	r2, #1
   13fcc:	cmp	r9, sl
   13fd0:	mov	r0, r2
   13fd4:	movcc	r3, #92	; 0x5c
   13fd8:	strbcc	r3, [r6, r9]
   13fdc:	add	r3, r9, #1
   13fe0:	cmp	r3, sl
   13fe4:	andcc	r7, r5, #192	; 0xc0
   13fe8:	movcc	r2, #48	; 0x30
   13fec:	orrcc	r7, r2, r7, lsr #6
   13ff0:	strbcc	r7, [r6, r3]
   13ff4:	add	r3, r9, #2
   13ff8:	add	r9, r9, #3
   13ffc:	cmp	r3, sl
   14000:	lsrcc	r7, r5, #3
   14004:	movcc	r2, #6
   14008:	bficc	r7, r2, #3, #29
   1400c:	mov	r2, #6
   14010:	strbcc	r7, [r6, r3]
   14014:	bfi	r5, r2, #3, #29
   14018:	mov	r3, #1
   1401c:	mov	r2, r0
   14020:	ldr	r0, [sp, #56]	; 0x38
   14024:	and	r8, r3, #1
   14028:	cmp	r0, r1
   1402c:	bhi	1408c <__mempcpy_chk@plt+0x2f3c>
   14030:	b	140cc <__mempcpy_chk@plt+0x2f7c>
   14034:	cmp	r9, sl
   14038:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1403c:	strbcc	r5, [r6, r9]
   14040:	add	r9, r9, #1
   14044:	ldrb	r5, [ip, r1]
   14048:	add	r1, r1, #1
   1404c:	ldr	r0, [sp, #64]	; 0x40
   14050:	tst	r0, #1
   14054:	beq	13f74 <__mempcpy_chk@plt+0x2e24>
   14058:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1405c:	tst	r7, #1
   14060:	beq	14074 <__mempcpy_chk@plt+0x2f24>
   14064:	cmp	r9, sl
   14068:	movcc	r7, #92	; 0x5c
   1406c:	strbcc	r7, [r6, r9]
   14070:	add	r9, r9, #1
   14074:	mov	r7, #0
   14078:	str	r7, [fp, #-56]	; 0xffffffc8
   1407c:	ldr	r0, [sp, #56]	; 0x38
   14080:	and	r8, r3, #1
   14084:	cmp	r0, r1
   14088:	bls	140cc <__mempcpy_chk@plt+0x2f7c>
   1408c:	cmp	r8, #0
   14090:	mvn	r7, r2
   14094:	movwne	r8, #1
   14098:	orr	r7, r7, r8
   1409c:	tst	r7, #1
   140a0:	bne	14034 <__mempcpy_chk@plt+0x2ee4>
   140a4:	cmp	r9, sl
   140a8:	movcc	r7, #39	; 0x27
   140ac:	strbcc	r7, [r6, r9]
   140b0:	add	r7, r9, #1
   140b4:	add	r9, r9, #2
   140b8:	cmp	r7, sl
   140bc:	movcc	r2, #39	; 0x27
   140c0:	strbcc	r2, [r6, r7]
   140c4:	mov	r2, #0
   140c8:	b	14034 <__mempcpy_chk@plt+0x2ee4>
   140cc:	cmp	r8, #0
   140d0:	sub	r7, r1, #1
   140d4:	mov	r0, r5
   140d8:	str	r2, [fp, #-48]	; 0xffffffd0
   140dc:	movwne	r8, #1
   140e0:	cmp	r8, #0
   140e4:	beq	139d4 <__mempcpy_chk@plt+0x2884>
   140e8:	b	137c4 <__mempcpy_chk@plt+0x2674>
   140ec:	mov	lr, r7
   140f0:	b	140f8 <__mempcpy_chk@plt+0x2fa8>
   140f4:	mvn	lr, #0
   140f8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   140fc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14100:	eor	r0, r7, #2
   14104:	orr	r0, r0, r9
   14108:	clz	r0, r0
   1410c:	lsr	r0, r0, #5
   14110:	tst	r1, r0
   14114:	bne	14214 <__mempcpy_chk@plt+0x30c4>
   14118:	mov	r0, r1
   1411c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14120:	cmp	r7, #2
   14124:	movwne	r1, #1
   14128:	orr	r0, r0, r1
   1412c:	tst	r0, #1
   14130:	ldreq	r0, [sp, #52]	; 0x34
   14134:	streq	lr, [sp, #84]	; 0x54
   14138:	eoreq	r0, r0, #1
   1413c:	tsteq	r0, #1
   14140:	bne	142d8 <__mempcpy_chk@plt+0x3188>
   14144:	tst	r4, #1
   14148:	bne	14294 <__mempcpy_chk@plt+0x3144>
   1414c:	ldr	r6, [sp, #48]	; 0x30
   14150:	mov	r8, #0
   14154:	cmp	r6, #0
   14158:	beq	142d0 <__mempcpy_chk@plt+0x3180>
   1415c:	ldr	r0, [sp, #80]	; 0x50
   14160:	mov	r1, #0
   14164:	cmp	sl, #0
   14168:	mov	r4, #0
   1416c:	str	r1, [fp, #-72]	; 0xffffffb8
   14170:	beq	13064 <__mempcpy_chk@plt+0x1f14>
   14174:	b	142d8 <__mempcpy_chk@plt+0x3188>
   14178:	ldrb	r1, [r0, #3]
   1417c:	cmp	r1, #56	; 0x38
   14180:	ldrbeq	r1, [r0, #4]
   14184:	cmpeq	r1, #48	; 0x30
   14188:	bne	1325c <__mempcpy_chk@plt+0x210c>
   1418c:	ldrb	r1, [r0, #5]
   14190:	cmp	r1, #51	; 0x33
   14194:	ldrbeq	r1, [r0, #6]
   14198:	cmpeq	r1, #48	; 0x30
   1419c:	bne	1325c <__mempcpy_chk@plt+0x210c>
   141a0:	ldrb	r0, [r0, #7]
   141a4:	cmp	r0, #0
   141a8:	movw	r0, #27252	; 0x6a74
   141ac:	movt	r0, #1
   141b0:	str	r0, [sp, #68]	; 0x44
   141b4:	bne	1325c <__mempcpy_chk@plt+0x210c>
   141b8:	b	13278 <__mempcpy_chk@plt+0x2128>
   141bc:	ldrb	r1, [r0, #4]
   141c0:	cmp	r1, #48	; 0x30
   141c4:	ldrbeq	r1, [r0, #5]
   141c8:	cmpeq	r1, #51	; 0x33
   141cc:	bne	13340 <__mempcpy_chk@plt+0x21f0>
   141d0:	ldrb	r1, [r0, #6]
   141d4:	cmp	r1, #48	; 0x30
   141d8:	ldrbeq	r0, [r0, #7]
   141dc:	cmpeq	r0, #0
   141e0:	bne	13340 <__mempcpy_chk@plt+0x21f0>
   141e4:	movw	r0, #27256	; 0x6a78
   141e8:	movt	r0, #1
   141ec:	str	r0, [sp, #72]	; 0x48
   141f0:	b	13360 <__mempcpy_chk@plt+0x2210>
   141f4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   141f8:	ldr	r2, [sp, #80]	; 0x50
   141fc:	b	14234 <__mempcpy_chk@plt+0x30e4>
   14200:	ldr	ip, [fp, #-84]	; 0xffffffac
   14204:	mov	r2, #1
   14208:	mov	lr, r4
   1420c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14210:	b	14234 <__mempcpy_chk@plt+0x30e4>
   14214:	ldr	r2, [sp, #80]	; 0x50
   14218:	mov	r7, #2
   1421c:	b	14234 <__mempcpy_chk@plt+0x30e4>
   14220:	ldr	r6, [sp, #76]	; 0x4c
   14224:	ldr	ip, [fp, #-84]	; 0xffffffac
   14228:	ldr	lr, [sp, #84]	; 0x54
   1422c:	ldr	r2, [sp, #80]	; 0x50
   14230:	mov	r7, #2
   14234:	mov	r0, #0
   14238:	ldr	r1, [fp, #12]
   1423c:	tst	r2, #1
   14240:	mov	r2, r7
   14244:	mov	r3, lr
   14248:	str	r0, [sp, #8]
   1424c:	ldr	r0, [sp, #68]	; 0x44
   14250:	movwne	r2, #4
   14254:	cmp	r7, #2
   14258:	movne	r2, r7
   1425c:	str	r2, [sp]
   14260:	mov	r2, ip
   14264:	bic	r1, r1, #2
   14268:	str	r0, [sp, #12]
   1426c:	ldr	r0, [sp, #72]	; 0x48
   14270:	str	r1, [sp, #4]
   14274:	mov	r1, sl
   14278:	str	r0, [sp, #16]
   1427c:	mov	r0, r6
   14280:	bl	12fe8 <__mempcpy_chk@plt+0x1e98>
   14284:	mov	r9, r0
   14288:	mov	r0, r9
   1428c:	sub	sp, fp, #28
   14290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14294:	mov	r0, #5
   14298:	ldr	r1, [sp, #48]	; 0x30
   1429c:	ldr	r2, [fp, #-84]	; 0xffffffac
   142a0:	ldr	r3, [sp, #84]	; 0x54
   142a4:	str	r0, [sp]
   142a8:	ldr	r0, [fp, #12]
   142ac:	str	r0, [sp, #4]
   142b0:	ldr	r0, [fp, #16]
   142b4:	str	r0, [sp, #8]
   142b8:	ldr	r0, [sp, #68]	; 0x44
   142bc:	str	r0, [sp, #12]
   142c0:	ldr	r0, [sp, #72]	; 0x48
   142c4:	str	r0, [sp, #16]
   142c8:	ldr	r0, [sp, #76]	; 0x4c
   142cc:	b	14280 <__mempcpy_chk@plt+0x3130>
   142d0:	mov	r0, #0
   142d4:	str	r0, [fp, #-72]	; 0xffffffb8
   142d8:	ldr	r1, [sp, #92]	; 0x5c
   142dc:	cmp	r1, #0
   142e0:	beq	14320 <__mempcpy_chk@plt+0x31d0>
   142e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   142e8:	ldr	r2, [sp, #76]	; 0x4c
   142ec:	tst	r0, #1
   142f0:	bne	14324 <__mempcpy_chk@plt+0x31d4>
   142f4:	ldrb	r0, [r1]
   142f8:	cmp	r0, #0
   142fc:	beq	14324 <__mempcpy_chk@plt+0x31d4>
   14300:	add	r1, r1, #1
   14304:	cmp	r9, sl
   14308:	strbcc	r0, [r2, r9]
   1430c:	add	r9, r9, #1
   14310:	ldrb	r0, [r1], #1
   14314:	cmp	r0, #0
   14318:	bne	14304 <__mempcpy_chk@plt+0x31b4>
   1431c:	b	14324 <__mempcpy_chk@plt+0x31d4>
   14320:	ldr	r2, [sp, #76]	; 0x4c
   14324:	cmp	r9, sl
   14328:	movcc	r0, #0
   1432c:	strbcc	r0, [r2, r9]
   14330:	mov	r0, r9
   14334:	sub	sp, fp, #28
   14338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1433c:	mov	r2, #1
   14340:	b	1420c <__mempcpy_chk@plt+0x30bc>
   14344:	ldr	r2, [sp, #80]	; 0x50
   14348:	mov	r7, #5
   1434c:	b	14234 <__mempcpy_chk@plt+0x30e4>
   14350:	bl	11138 <abort@plt>
   14354:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14358:	add	fp, sp, #28
   1435c:	sub	sp, sp, #28
   14360:	movw	r5, #29072	; 0x7190
   14364:	cmp	r2, #0
   14368:	mov	r4, r1
   1436c:	mov	r7, r0
   14370:	str	r0, [sp, #20]
   14374:	movt	r5, #2
   14378:	movne	r5, r2
   1437c:	bl	1106c <__errno_location@plt>
   14380:	mov	sl, r0
   14384:	ldm	r5, {r0, r1}
   14388:	ldr	r2, [r5, #40]	; 0x28
   1438c:	ldr	r3, [r5, #44]	; 0x2c
   14390:	add	r9, r5, #8
   14394:	ldr	r6, [sl]
   14398:	orr	r8, r1, #1
   1439c:	mov	r1, #0
   143a0:	str	r6, [sp, #24]
   143a4:	stm	sp, {r0, r8, r9}
   143a8:	str	r2, [sp, #12]
   143ac:	str	r3, [sp, #16]
   143b0:	mov	r0, #0
   143b4:	mov	r2, r7
   143b8:	mov	r3, r4
   143bc:	mov	r6, r4
   143c0:	bl	12fe8 <__mempcpy_chk@plt+0x1e98>
   143c4:	add	r7, r0, #1
   143c8:	mov	r0, r7
   143cc:	bl	15430 <__mempcpy_chk@plt+0x42e0>
   143d0:	mov	r4, r0
   143d4:	ldr	r0, [r5]
   143d8:	ldr	r2, [r5, #44]	; 0x2c
   143dc:	ldr	r1, [r5, #40]	; 0x28
   143e0:	mov	r3, r6
   143e4:	stm	sp, {r0, r8, r9}
   143e8:	str	r2, [sp, #16]
   143ec:	str	r1, [sp, #12]
   143f0:	mov	r0, r4
   143f4:	mov	r1, r7
   143f8:	ldr	r2, [sp, #20]
   143fc:	bl	12fe8 <__mempcpy_chk@plt+0x1e98>
   14400:	ldr	r0, [sp, #24]
   14404:	str	r0, [sl]
   14408:	mov	r0, r4
   1440c:	sub	sp, fp, #28
   14410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14418:	add	fp, sp, #28
   1441c:	sub	sp, sp, #36	; 0x24
   14420:	movw	r8, #29072	; 0x7190
   14424:	cmp	r3, #0
   14428:	mov	r4, r2
   1442c:	str	r2, [sp, #24]
   14430:	mov	r5, r1
   14434:	mov	r6, r0
   14438:	str	r0, [sp, #20]
   1443c:	movt	r8, #2
   14440:	movne	r8, r3
   14444:	bl	1106c <__errno_location@plt>
   14448:	str	r0, [sp, #28]
   1444c:	cmp	r4, #0
   14450:	add	sl, r8, #8
   14454:	ldm	r8, {r3, r9}
   14458:	ldr	r7, [r0]
   1445c:	ldr	r1, [r8, #40]	; 0x28
   14460:	ldr	r2, [r8, #44]	; 0x2c
   14464:	mov	r0, #0
   14468:	orreq	r9, r9, #1
   1446c:	str	r7, [sp, #32]
   14470:	mov	r7, r5
   14474:	stm	sp, {r3, r9, sl}
   14478:	str	r1, [sp, #12]
   1447c:	str	r2, [sp, #16]
   14480:	mov	r1, #0
   14484:	mov	r2, r6
   14488:	mov	r3, r5
   1448c:	bl	12fe8 <__mempcpy_chk@plt+0x1e98>
   14490:	add	r4, r0, #1
   14494:	mov	r5, r0
   14498:	mov	r0, r4
   1449c:	bl	15430 <__mempcpy_chk@plt+0x42e0>
   144a0:	mov	r6, r0
   144a4:	ldr	r0, [r8]
   144a8:	ldr	r2, [r8, #44]	; 0x2c
   144ac:	ldr	r1, [r8, #40]	; 0x28
   144b0:	mov	r3, r7
   144b4:	stm	sp, {r0, r9, sl}
   144b8:	str	r2, [sp, #16]
   144bc:	str	r1, [sp, #12]
   144c0:	mov	r0, r6
   144c4:	mov	r1, r4
   144c8:	ldr	r2, [sp, #20]
   144cc:	bl	12fe8 <__mempcpy_chk@plt+0x1e98>
   144d0:	ldr	r0, [sp, #24]
   144d4:	ldr	r1, [sp, #32]
   144d8:	ldr	r2, [sp, #28]
   144dc:	cmp	r0, #0
   144e0:	str	r1, [r2]
   144e4:	strne	r5, [r0]
   144e8:	mov	r0, r6
   144ec:	sub	sp, fp, #28
   144f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144f4:	push	{r4, r5, r6, r7, fp, lr}
   144f8:	add	fp, sp, #16
   144fc:	movw	r4, #28976	; 0x7130
   14500:	movt	r4, #2
   14504:	ldrd	r6, [r4]
   14508:	cmp	r7, #2
   1450c:	blt	14538 <__mempcpy_chk@plt+0x33e8>
   14510:	add	r5, r6, #12
   14514:	mov	r7, #0
   14518:	ldr	r0, [r5, r7, lsl #3]
   1451c:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   14520:	ldr	r1, [r4, #4]
   14524:	add	r2, r7, #2
   14528:	add	r0, r7, #1
   1452c:	mov	r7, r0
   14530:	cmp	r2, r1
   14534:	blt	14518 <__mempcpy_chk@plt+0x33c8>
   14538:	ldr	r0, [r6, #4]
   1453c:	movw	r5, #29120	; 0x71c0
   14540:	movt	r5, #2
   14544:	cmp	r0, r5
   14548:	beq	1455c <__mempcpy_chk@plt+0x340c>
   1454c:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   14550:	mov	r0, #256	; 0x100
   14554:	str	r0, [r4, #8]
   14558:	str	r5, [r4, #12]
   1455c:	add	r5, r4, #8
   14560:	cmp	r6, r5
   14564:	beq	14574 <__mempcpy_chk@plt+0x3424>
   14568:	mov	r0, r6
   1456c:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   14570:	str	r5, [r4]
   14574:	mov	r0, #1
   14578:	str	r0, [r4, #4]
   1457c:	pop	{r4, r5, r6, r7, fp, pc}
   14580:	movw	r3, #29072	; 0x7190
   14584:	mvn	r2, #0
   14588:	movt	r3, #2
   1458c:	b	14590 <__mempcpy_chk@plt+0x3440>
   14590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14594:	add	fp, sp, #28
   14598:	sub	sp, sp, #44	; 0x2c
   1459c:	mov	r7, r3
   145a0:	str	r2, [sp, #36]	; 0x24
   145a4:	str	r1, [sp, #32]
   145a8:	mov	r5, r0
   145ac:	bl	1106c <__errno_location@plt>
   145b0:	cmp	r5, #0
   145b4:	blt	14718 <__mempcpy_chk@plt+0x35c8>
   145b8:	cmn	r5, #-2147483647	; 0x80000001
   145bc:	beq	14718 <__mempcpy_chk@plt+0x35c8>
   145c0:	movw	r8, #28976	; 0x7130
   145c4:	mov	r4, r0
   145c8:	movt	r8, #2
   145cc:	ldr	r6, [r8]
   145d0:	ldr	r1, [r8, #4]
   145d4:	ldr	r0, [r0]
   145d8:	str	r4, [sp, #28]
   145dc:	cmp	r1, r5
   145e0:	str	r0, [sp, #24]
   145e4:	ble	145f0 <__mempcpy_chk@plt+0x34a0>
   145e8:	mov	sl, r6
   145ec:	b	14654 <__mempcpy_chk@plt+0x3504>
   145f0:	mov	r0, #8
   145f4:	add	r9, r8, #8
   145f8:	add	r2, r5, #1
   145fc:	str	r1, [fp, #-32]	; 0xffffffe0
   14600:	mvn	r3, #-2147483648	; 0x80000000
   14604:	str	r0, [sp]
   14608:	subs	r0, r6, r9
   1460c:	sub	r2, r2, r1
   14610:	sub	r1, fp, #32
   14614:	movne	r0, r6
   14618:	bl	15630 <__mempcpy_chk@plt+0x44e0>
   1461c:	str	r0, [r8]
   14620:	cmp	r6, r9
   14624:	mov	sl, r0
   14628:	ldrdeq	r0, [r8, #8]
   1462c:	stmeq	sl, {r0, r1}
   14630:	ldr	r1, [r8, #4]
   14634:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14638:	add	r0, sl, r1, lsl #3
   1463c:	sub	r1, r2, r1
   14640:	lsl	r2, r1, #3
   14644:	mov	r1, #0
   14648:	bl	11090 <memset@plt>
   1464c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14650:	str	r0, [r8, #4]
   14654:	mov	r9, sl
   14658:	ldr	r6, [r9, r5, lsl #3]!
   1465c:	ldr	r4, [r9, #4]!
   14660:	ldm	r7, {r0, r1}
   14664:	ldr	r2, [r7, #40]	; 0x28
   14668:	ldr	r3, [r7, #44]	; 0x2c
   1466c:	orr	r8, r1, #1
   14670:	add	r1, r7, #8
   14674:	stm	sp, {r0, r8}
   14678:	add	r0, sp, #8
   1467c:	str	r1, [sp, #20]
   14680:	stm	r0, {r1, r2, r3}
   14684:	mov	r0, r4
   14688:	mov	r1, r6
   1468c:	ldr	r2, [sp, #32]
   14690:	ldr	r3, [sp, #36]	; 0x24
   14694:	bl	12fe8 <__mempcpy_chk@plt+0x1e98>
   14698:	cmp	r6, r0
   1469c:	bhi	14700 <__mempcpy_chk@plt+0x35b0>
   146a0:	add	r6, r0, #1
   146a4:	movw	r0, #29120	; 0x71c0
   146a8:	movt	r0, #2
   146ac:	str	r6, [sl, r5, lsl #3]
   146b0:	cmp	r4, r0
   146b4:	beq	146c0 <__mempcpy_chk@plt+0x3570>
   146b8:	mov	r0, r4
   146bc:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   146c0:	mov	r0, r6
   146c4:	bl	15430 <__mempcpy_chk@plt+0x42e0>
   146c8:	str	r0, [r9]
   146cc:	mov	r4, r0
   146d0:	add	r3, sp, #8
   146d4:	ldr	r0, [r7]
   146d8:	ldr	r1, [r7, #40]	; 0x28
   146dc:	ldr	r2, [r7, #44]	; 0x2c
   146e0:	stm	sp, {r0, r8}
   146e4:	ldr	r0, [sp, #20]
   146e8:	stm	r3, {r0, r1, r2}
   146ec:	mov	r0, r4
   146f0:	mov	r1, r6
   146f4:	ldr	r2, [sp, #32]
   146f8:	ldr	r3, [sp, #36]	; 0x24
   146fc:	bl	12fe8 <__mempcpy_chk@plt+0x1e98>
   14700:	ldr	r1, [sp, #24]
   14704:	ldr	r0, [sp, #28]
   14708:	str	r1, [r0]
   1470c:	mov	r0, r4
   14710:	sub	sp, fp, #28
   14714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14718:	bl	11138 <abort@plt>
   1471c:	movw	r3, #29072	; 0x7190
   14720:	movt	r3, #2
   14724:	b	14590 <__mempcpy_chk@plt+0x3440>
   14728:	movw	r3, #29072	; 0x7190
   1472c:	mov	r1, r0
   14730:	mov	r0, #0
   14734:	mvn	r2, #0
   14738:	movt	r3, #2
   1473c:	b	14590 <__mempcpy_chk@plt+0x3440>
   14740:	movw	r3, #29072	; 0x7190
   14744:	mov	r2, r1
   14748:	mov	r1, r0
   1474c:	mov	r0, #0
   14750:	movt	r3, #2
   14754:	b	14590 <__mempcpy_chk@plt+0x3440>
   14758:	push	{fp, lr}
   1475c:	mov	fp, sp
   14760:	sub	sp, sp, #48	; 0x30
   14764:	vmov.i32	q8, #0	; 0x00000000
   14768:	mov	ip, #32
   1476c:	mov	r3, sp
   14770:	mov	lr, r2
   14774:	cmp	r1, #10
   14778:	add	r2, r3, #16
   1477c:	vst1.64	{d16-d17}, [r3], ip
   14780:	vst1.64	{d16-d17}, [r3]
   14784:	vst1.64	{d16-d17}, [r2]
   14788:	beq	147a8 <__mempcpy_chk@plt+0x3658>
   1478c:	str	r1, [sp]
   14790:	mov	r3, sp
   14794:	mov	r1, lr
   14798:	mvn	r2, #0
   1479c:	bl	14590 <__mempcpy_chk@plt+0x3440>
   147a0:	mov	sp, fp
   147a4:	pop	{fp, pc}
   147a8:	bl	11138 <abort@plt>
   147ac:	push	{r4, sl, fp, lr}
   147b0:	add	fp, sp, #8
   147b4:	sub	sp, sp, #48	; 0x30
   147b8:	mov	ip, r3
   147bc:	mov	r3, sp
   147c0:	vmov.i32	q8, #0	; 0x00000000
   147c4:	mov	lr, #32
   147c8:	cmp	r1, #10
   147cc:	add	r4, r3, #16
   147d0:	vst1.64	{d16-d17}, [r3], lr
   147d4:	vst1.64	{d16-d17}, [r3]
   147d8:	vst1.64	{d16-d17}, [r4]
   147dc:	beq	147fc <__mempcpy_chk@plt+0x36ac>
   147e0:	str	r1, [sp]
   147e4:	mov	r1, r2
   147e8:	mov	r3, sp
   147ec:	mov	r2, ip
   147f0:	bl	14590 <__mempcpy_chk@plt+0x3440>
   147f4:	sub	sp, fp, #8
   147f8:	pop	{r4, sl, fp, pc}
   147fc:	bl	11138 <abort@plt>
   14800:	push	{fp, lr}
   14804:	mov	fp, sp
   14808:	sub	sp, sp, #48	; 0x30
   1480c:	mov	r3, sp
   14810:	vmov.i32	q8, #0	; 0x00000000
   14814:	mov	ip, #32
   14818:	cmp	r0, #10
   1481c:	add	r2, r3, #16
   14820:	vst1.64	{d16-d17}, [r3], ip
   14824:	vst1.64	{d16-d17}, [r3]
   14828:	vst1.64	{d16-d17}, [r2]
   1482c:	beq	1484c <__mempcpy_chk@plt+0x36fc>
   14830:	str	r0, [sp]
   14834:	mov	r3, sp
   14838:	mov	r0, #0
   1483c:	mvn	r2, #0
   14840:	bl	14590 <__mempcpy_chk@plt+0x3440>
   14844:	mov	sp, fp
   14848:	pop	{fp, pc}
   1484c:	bl	11138 <abort@plt>
   14850:	push	{fp, lr}
   14854:	mov	fp, sp
   14858:	sub	sp, sp, #48	; 0x30
   1485c:	mov	r3, sp
   14860:	vmov.i32	q8, #0	; 0x00000000
   14864:	mov	ip, #32
   14868:	cmp	r0, #10
   1486c:	add	lr, r3, #16
   14870:	vst1.64	{d16-d17}, [r3], ip
   14874:	vst1.64	{d16-d17}, [r3]
   14878:	vst1.64	{d16-d17}, [lr]
   1487c:	beq	14898 <__mempcpy_chk@plt+0x3748>
   14880:	str	r0, [sp]
   14884:	mov	r3, sp
   14888:	mov	r0, #0
   1488c:	bl	14590 <__mempcpy_chk@plt+0x3440>
   14890:	mov	sp, fp
   14894:	pop	{fp, pc}
   14898:	bl	11138 <abort@plt>
   1489c:	push	{r4, sl, fp, lr}
   148a0:	add	fp, sp, #8
   148a4:	sub	sp, sp, #48	; 0x30
   148a8:	mov	lr, r0
   148ac:	movw	r0, #29072	; 0x7190
   148b0:	mov	r3, #32
   148b4:	mov	ip, r1
   148b8:	mov	r4, #1
   148bc:	movt	r0, #2
   148c0:	add	r1, r0, #16
   148c4:	vld1.64	{d16-d17}, [r0], r3
   148c8:	mov	r3, sp
   148cc:	vld1.64	{d18-d19}, [r1]
   148d0:	add	r1, r3, #16
   148d4:	vld1.64	{d20-d21}, [r0]
   148d8:	add	r0, r3, #32
   148dc:	vst1.64	{d18-d19}, [r1]
   148e0:	mov	r1, r3
   148e4:	vst1.64	{d20-d21}, [r0]
   148e8:	mov	r0, #28
   148ec:	and	r0, r0, r2, lsr #3
   148f0:	and	r2, r2, #31
   148f4:	vst1.64	{d16-d17}, [r1], r0
   148f8:	ldr	r0, [r1, #8]
   148fc:	bic	r4, r4, r0, lsr r2
   14900:	eor	r0, r0, r4, lsl r2
   14904:	mov	r2, ip
   14908:	str	r0, [r1, #8]
   1490c:	mov	r0, #0
   14910:	mov	r1, lr
   14914:	bl	14590 <__mempcpy_chk@plt+0x3440>
   14918:	sub	sp, fp, #8
   1491c:	pop	{r4, sl, fp, pc}
   14920:	push	{fp, lr}
   14924:	mov	fp, sp
   14928:	sub	sp, sp, #48	; 0x30
   1492c:	mov	ip, r0
   14930:	movw	r0, #29072	; 0x7190
   14934:	mov	r3, #32
   14938:	movt	r0, #2
   1493c:	add	r2, r0, #16
   14940:	vld1.64	{d16-d17}, [r0], r3
   14944:	mov	r3, sp
   14948:	vld1.64	{d18-d19}, [r2]
   1494c:	add	r2, r3, #16
   14950:	vld1.64	{d20-d21}, [r0]
   14954:	add	r0, r3, #32
   14958:	vst1.64	{d18-d19}, [r2]
   1495c:	mov	r2, r3
   14960:	vst1.64	{d20-d21}, [r0]
   14964:	mov	r0, #28
   14968:	and	r0, r0, r1, lsr #3
   1496c:	and	r1, r1, #31
   14970:	vst1.64	{d16-d17}, [r2], r0
   14974:	mov	r0, #1
   14978:	ldr	lr, [r2, #8]
   1497c:	bic	r0, r0, lr, lsr r1
   14980:	eor	r0, lr, r0, lsl r1
   14984:	mov	r1, ip
   14988:	str	r0, [r2, #8]
   1498c:	mov	r0, #0
   14990:	mvn	r2, #0
   14994:	bl	14590 <__mempcpy_chk@plt+0x3440>
   14998:	mov	sp, fp
   1499c:	pop	{fp, pc}
   149a0:	push	{fp, lr}
   149a4:	mov	fp, sp
   149a8:	sub	sp, sp, #48	; 0x30
   149ac:	movw	r2, #29072	; 0x7190
   149b0:	mov	r3, #32
   149b4:	mov	r1, r0
   149b8:	movt	r2, #2
   149bc:	add	r0, r2, #16
   149c0:	vld1.64	{d16-d17}, [r2], r3
   149c4:	mov	r3, sp
   149c8:	vld1.64	{d18-d19}, [r0]
   149cc:	add	r0, r3, #16
   149d0:	vld1.64	{d20-d21}, [r2]
   149d4:	mov	r2, r3
   149d8:	vst1.64	{d18-d19}, [r0]
   149dc:	add	r0, r3, #32
   149e0:	vst1.64	{d20-d21}, [r0]
   149e4:	mov	r0, #12
   149e8:	vst1.64	{d16-d17}, [r2], r0
   149ec:	ldr	r0, [r2]
   149f0:	orr	r0, r0, #67108864	; 0x4000000
   149f4:	str	r0, [r2]
   149f8:	mov	r0, #0
   149fc:	mvn	r2, #0
   14a00:	bl	14590 <__mempcpy_chk@plt+0x3440>
   14a04:	mov	sp, fp
   14a08:	pop	{fp, pc}
   14a0c:	push	{fp, lr}
   14a10:	mov	fp, sp
   14a14:	sub	sp, sp, #48	; 0x30
   14a18:	mov	ip, r1
   14a1c:	mov	r1, r0
   14a20:	movw	r0, #29072	; 0x7190
   14a24:	mov	r3, #32
   14a28:	movt	r0, #2
   14a2c:	add	r2, r0, #16
   14a30:	vld1.64	{d16-d17}, [r0], r3
   14a34:	mov	r3, sp
   14a38:	vld1.64	{d18-d19}, [r2]
   14a3c:	add	r2, r3, #16
   14a40:	vld1.64	{d20-d21}, [r0]
   14a44:	add	r0, r3, #32
   14a48:	vst1.64	{d18-d19}, [r2]
   14a4c:	mov	r2, r3
   14a50:	vst1.64	{d20-d21}, [r0]
   14a54:	mov	r0, #12
   14a58:	vst1.64	{d16-d17}, [r2], r0
   14a5c:	ldr	r0, [r2]
   14a60:	orr	r0, r0, #67108864	; 0x4000000
   14a64:	str	r0, [r2]
   14a68:	mov	r0, #0
   14a6c:	mov	r2, ip
   14a70:	bl	14590 <__mempcpy_chk@plt+0x3440>
   14a74:	mov	sp, fp
   14a78:	pop	{fp, pc}
   14a7c:	push	{r4, sl, fp, lr}
   14a80:	add	fp, sp, #8
   14a84:	sub	sp, sp, #96	; 0x60
   14a88:	mov	ip, r2
   14a8c:	mov	r2, sp
   14a90:	vmov.i32	q8, #0	; 0x00000000
   14a94:	mov	r4, #28
   14a98:	cmp	r1, #10
   14a9c:	mov	r3, r2
   14aa0:	add	lr, r2, #16
   14aa4:	vst1.64	{d16-d17}, [r3], r4
   14aa8:	vst1.64	{d16-d17}, [lr]
   14aac:	vst1.32	{d16-d17}, [r3]
   14ab0:	beq	14b00 <__mempcpy_chk@plt+0x39b0>
   14ab4:	vld1.64	{d16-d17}, [r2], r4
   14ab8:	vld1.64	{d18-d19}, [lr]
   14abc:	add	r3, sp, #48	; 0x30
   14ac0:	add	r4, r3, #4
   14ac4:	vld1.32	{d20-d21}, [r2]
   14ac8:	add	r2, r3, #20
   14acc:	vst1.32	{d16-d17}, [r4]
   14ad0:	vst1.32	{d18-d19}, [r2]
   14ad4:	add	r2, r3, #32
   14ad8:	vst1.32	{d20-d21}, [r2]
   14adc:	str	r1, [sp, #48]	; 0x30
   14ae0:	mvn	r2, #0
   14ae4:	ldr	r1, [sp, #60]	; 0x3c
   14ae8:	orr	r1, r1, #67108864	; 0x4000000
   14aec:	str	r1, [sp, #60]	; 0x3c
   14af0:	mov	r1, ip
   14af4:	bl	14590 <__mempcpy_chk@plt+0x3440>
   14af8:	sub	sp, fp, #8
   14afc:	pop	{r4, sl, fp, pc}
   14b00:	bl	11138 <abort@plt>
   14b04:	push	{r4, r5, fp, lr}
   14b08:	add	fp, sp, #8
   14b0c:	sub	sp, sp, #48	; 0x30
   14b10:	mov	ip, r3
   14b14:	movw	r3, #29072	; 0x7190
   14b18:	mov	lr, #32
   14b1c:	cmp	r1, #0
   14b20:	mov	r5, sp
   14b24:	movt	r3, #2
   14b28:	cmpne	r2, #0
   14b2c:	add	r4, r3, #16
   14b30:	vld1.64	{d16-d17}, [r3], lr
   14b34:	vld1.64	{d18-d19}, [r4]
   14b38:	add	r4, r5, #16
   14b3c:	vld1.64	{d20-d21}, [r3]
   14b40:	vst1.64	{d16-d17}, [r5], lr
   14b44:	mov	r3, #10
   14b48:	vst1.64	{d18-d19}, [r4]
   14b4c:	vst1.64	{d20-d21}, [r5]
   14b50:	str	r3, [sp]
   14b54:	bne	14b5c <__mempcpy_chk@plt+0x3a0c>
   14b58:	bl	11138 <abort@plt>
   14b5c:	str	r2, [sp, #44]	; 0x2c
   14b60:	str	r1, [sp, #40]	; 0x28
   14b64:	mov	r3, sp
   14b68:	mov	r1, ip
   14b6c:	mvn	r2, #0
   14b70:	bl	14590 <__mempcpy_chk@plt+0x3440>
   14b74:	sub	sp, fp, #8
   14b78:	pop	{r4, r5, fp, pc}
   14b7c:	push	{r4, r5, fp, lr}
   14b80:	add	fp, sp, #8
   14b84:	sub	sp, sp, #48	; 0x30
   14b88:	mov	lr, r3
   14b8c:	movw	r3, #29072	; 0x7190
   14b90:	mov	ip, #32
   14b94:	cmp	r1, #0
   14b98:	mov	r5, sp
   14b9c:	movt	r3, #2
   14ba0:	cmpne	r2, #0
   14ba4:	add	r4, r3, #16
   14ba8:	vld1.64	{d16-d17}, [r3], ip
   14bac:	vld1.64	{d18-d19}, [r4]
   14bb0:	add	r4, r5, #16
   14bb4:	vld1.64	{d20-d21}, [r3]
   14bb8:	vst1.64	{d16-d17}, [r5], ip
   14bbc:	mov	r3, #10
   14bc0:	vst1.64	{d18-d19}, [r4]
   14bc4:	vst1.64	{d20-d21}, [r5]
   14bc8:	str	r3, [sp]
   14bcc:	bne	14bd4 <__mempcpy_chk@plt+0x3a84>
   14bd0:	bl	11138 <abort@plt>
   14bd4:	ldr	ip, [fp, #8]
   14bd8:	str	r2, [sp, #44]	; 0x2c
   14bdc:	str	r1, [sp, #40]	; 0x28
   14be0:	mov	r3, sp
   14be4:	mov	r1, lr
   14be8:	mov	r2, ip
   14bec:	bl	14590 <__mempcpy_chk@plt+0x3440>
   14bf0:	sub	sp, fp, #8
   14bf4:	pop	{r4, r5, fp, pc}
   14bf8:	push	{r4, sl, fp, lr}
   14bfc:	add	fp, sp, #8
   14c00:	sub	sp, sp, #48	; 0x30
   14c04:	mov	ip, r2
   14c08:	movw	r2, #29072	; 0x7190
   14c0c:	mov	lr, #32
   14c10:	cmp	r0, #0
   14c14:	mov	r4, sp
   14c18:	movt	r2, #2
   14c1c:	cmpne	r1, #0
   14c20:	add	r3, r2, #16
   14c24:	vld1.64	{d16-d17}, [r2], lr
   14c28:	vld1.64	{d18-d19}, [r3]
   14c2c:	add	r3, r4, #16
   14c30:	vld1.64	{d20-d21}, [r2]
   14c34:	vst1.64	{d16-d17}, [r4], lr
   14c38:	mov	r2, #10
   14c3c:	vst1.64	{d18-d19}, [r3]
   14c40:	vst1.64	{d20-d21}, [r4]
   14c44:	str	r2, [sp]
   14c48:	bne	14c50 <__mempcpy_chk@plt+0x3b00>
   14c4c:	bl	11138 <abort@plt>
   14c50:	str	r1, [sp, #44]	; 0x2c
   14c54:	str	r0, [sp, #40]	; 0x28
   14c58:	mov	r3, sp
   14c5c:	mov	r0, #0
   14c60:	mov	r1, ip
   14c64:	mvn	r2, #0
   14c68:	bl	14590 <__mempcpy_chk@plt+0x3440>
   14c6c:	sub	sp, fp, #8
   14c70:	pop	{r4, sl, fp, pc}
   14c74:	push	{r4, r5, fp, lr}
   14c78:	add	fp, sp, #8
   14c7c:	sub	sp, sp, #48	; 0x30
   14c80:	mov	lr, r2
   14c84:	movw	r2, #29072	; 0x7190
   14c88:	mov	ip, r3
   14c8c:	mov	r3, #32
   14c90:	cmp	r0, #0
   14c94:	mov	r5, sp
   14c98:	movt	r2, #2
   14c9c:	cmpne	r1, #0
   14ca0:	add	r4, r2, #16
   14ca4:	vld1.64	{d16-d17}, [r2], r3
   14ca8:	vld1.64	{d18-d19}, [r4]
   14cac:	add	r4, r5, #16
   14cb0:	vld1.64	{d20-d21}, [r2]
   14cb4:	vst1.64	{d16-d17}, [r5], r3
   14cb8:	mov	r2, #10
   14cbc:	vst1.64	{d18-d19}, [r4]
   14cc0:	vst1.64	{d20-d21}, [r5]
   14cc4:	str	r2, [sp]
   14cc8:	bne	14cd0 <__mempcpy_chk@plt+0x3b80>
   14ccc:	bl	11138 <abort@plt>
   14cd0:	str	r1, [sp, #44]	; 0x2c
   14cd4:	str	r0, [sp, #40]	; 0x28
   14cd8:	mov	r3, sp
   14cdc:	mov	r0, #0
   14ce0:	mov	r1, lr
   14ce4:	mov	r2, ip
   14ce8:	bl	14590 <__mempcpy_chk@plt+0x3440>
   14cec:	sub	sp, fp, #8
   14cf0:	pop	{r4, r5, fp, pc}
   14cf4:	movw	r3, #28928	; 0x7100
   14cf8:	movt	r3, #2
   14cfc:	b	14590 <__mempcpy_chk@plt+0x3440>
   14d00:	movw	r3, #28928	; 0x7100
   14d04:	mov	r2, r1
   14d08:	mov	r1, r0
   14d0c:	mov	r0, #0
   14d10:	movt	r3, #2
   14d14:	b	14590 <__mempcpy_chk@plt+0x3440>
   14d18:	movw	r3, #28928	; 0x7100
   14d1c:	mvn	r2, #0
   14d20:	movt	r3, #2
   14d24:	b	14590 <__mempcpy_chk@plt+0x3440>
   14d28:	movw	r3, #28928	; 0x7100
   14d2c:	mov	r1, r0
   14d30:	mov	r0, #0
   14d34:	mvn	r2, #0
   14d38:	movt	r3, #2
   14d3c:	b	14590 <__mempcpy_chk@plt+0x3440>
   14d40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d44:	add	fp, sp, #24
   14d48:	sub	sp, sp, #32
   14d4c:	ldr	r6, [fp, #12]
   14d50:	ldr	r7, [fp, #8]
   14d54:	mov	r4, r2
   14d58:	mov	r8, r0
   14d5c:	cmp	r1, #0
   14d60:	beq	14d88 <__mempcpy_chk@plt+0x3c38>
   14d64:	movw	r2, #27344	; 0x6ad0
   14d68:	mov	r5, r1
   14d6c:	str	r3, [sp, #4]
   14d70:	str	r4, [sp]
   14d74:	mov	r0, r8
   14d78:	mov	r1, #1
   14d7c:	movt	r2, #1
   14d80:	mov	r3, r5
   14d84:	b	14da0 <__mempcpy_chk@plt+0x3c50>
   14d88:	movw	r2, #27356	; 0x6adc
   14d8c:	str	r3, [sp]
   14d90:	mov	r0, r8
   14d94:	mov	r1, #1
   14d98:	mov	r3, r4
   14d9c:	movt	r2, #1
   14da0:	bl	110b4 <__fprintf_chk@plt>
   14da4:	movw	r1, #27363	; 0x6ae3
   14da8:	mov	r0, #0
   14dac:	mov	r2, #5
   14db0:	movt	r1, #1
   14db4:	bl	10f70 <dcgettext@plt>
   14db8:	movw	r2, #28081	; 0x6db1
   14dbc:	mov	r3, r0
   14dc0:	movw	r0, #2022	; 0x7e6
   14dc4:	mov	r1, #1
   14dc8:	str	r0, [sp]
   14dcc:	movt	r2, #1
   14dd0:	mov	r0, r8
   14dd4:	bl	110b4 <__fprintf_chk@plt>
   14dd8:	movw	r4, #26584	; 0x67d8
   14ddc:	mov	r1, r8
   14de0:	movt	r4, #1
   14de4:	mov	r0, r4
   14de8:	bl	10ec8 <fputs_unlocked@plt>
   14dec:	movw	r1, #27367	; 0x6ae7
   14df0:	mov	r0, #0
   14df4:	mov	r2, #5
   14df8:	movt	r1, #1
   14dfc:	bl	10f70 <dcgettext@plt>
   14e00:	movw	r3, #27538	; 0x6b92
   14e04:	mov	r2, r0
   14e08:	mov	r0, r8
   14e0c:	mov	r1, #1
   14e10:	movt	r3, #1
   14e14:	bl	110b4 <__fprintf_chk@plt>
   14e18:	mov	r0, r4
   14e1c:	mov	r1, r8
   14e20:	bl	10ec8 <fputs_unlocked@plt>
   14e24:	cmp	r6, #9
   14e28:	bhi	14e64 <__mempcpy_chk@plt+0x3d14>
   14e2c:	add	r0, pc, #0
   14e30:	ldr	pc, [r0, r6, lsl #2]
   14e34:	andeq	r4, r1, ip, asr lr
   14e38:	andeq	r4, r1, r0, ror lr
   14e3c:	andeq	r4, r1, r0, lsr #29
   14e40:	andeq	r4, r1, r8, asr #29
   14e44:	strdeq	r4, [r1], -r0
   14e48:	andeq	r4, r1, r8, lsl pc
   14e4c:	andeq	r4, r1, r0, asr #30
   14e50:	andeq	r4, r1, r8, ror pc
   14e54:	andeq	r5, r1, r0, lsr #32
   14e58:	andeq	r4, r1, r8, asr #31
   14e5c:	sub	sp, fp, #24
   14e60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14e64:	movw	r1, #27891	; 0x6cf3
   14e68:	movt	r1, #1
   14e6c:	b	14fd0 <__mempcpy_chk@plt+0x3e80>
   14e70:	movw	r1, #27572	; 0x6bb4
   14e74:	mov	r0, #0
   14e78:	mov	r2, #5
   14e7c:	movt	r1, #1
   14e80:	bl	10f70 <dcgettext@plt>
   14e84:	ldr	r3, [r7]
   14e88:	mov	r2, r0
   14e8c:	mov	r0, r8
   14e90:	mov	r1, #1
   14e94:	sub	sp, fp, #24
   14e98:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e9c:	b	110b4 <__fprintf_chk@plt>
   14ea0:	movw	r1, #27588	; 0x6bc4
   14ea4:	mov	r0, #0
   14ea8:	mov	r2, #5
   14eac:	movt	r1, #1
   14eb0:	bl	10f70 <dcgettext@plt>
   14eb4:	mov	r2, r0
   14eb8:	ldr	r3, [r7]
   14ebc:	ldr	r0, [r7, #4]
   14ec0:	str	r0, [sp]
   14ec4:	b	14fb4 <__mempcpy_chk@plt+0x3e64>
   14ec8:	movw	r1, #27611	; 0x6bdb
   14ecc:	mov	r0, #0
   14ed0:	mov	r2, #5
   14ed4:	movt	r1, #1
   14ed8:	bl	10f70 <dcgettext@plt>
   14edc:	ldr	r3, [r7]
   14ee0:	mov	r2, r0
   14ee4:	ldmib	r7, {r0, r1}
   14ee8:	stm	sp, {r0, r1}
   14eec:	b	14fb4 <__mempcpy_chk@plt+0x3e64>
   14ef0:	movw	r1, #27639	; 0x6bf7
   14ef4:	mov	r0, #0
   14ef8:	mov	r2, #5
   14efc:	movt	r1, #1
   14f00:	bl	10f70 <dcgettext@plt>
   14f04:	ldr	r3, [r7]
   14f08:	mov	r2, r0
   14f0c:	ldmib	r7, {r0, r1, r7}
   14f10:	stm	sp, {r0, r1, r7}
   14f14:	b	14fb4 <__mempcpy_chk@plt+0x3e64>
   14f18:	movw	r1, #27671	; 0x6c17
   14f1c:	mov	r0, #0
   14f20:	mov	r2, #5
   14f24:	movt	r1, #1
   14f28:	bl	10f70 <dcgettext@plt>
   14f2c:	ldr	r3, [r7]
   14f30:	mov	r2, r0
   14f34:	ldmib	r7, {r0, r1, r6, r7}
   14f38:	stm	sp, {r0, r1, r6, r7}
   14f3c:	b	14fb4 <__mempcpy_chk@plt+0x3e64>
   14f40:	movw	r1, #27707	; 0x6c3b
   14f44:	mov	r0, #0
   14f48:	mov	r2, #5
   14f4c:	movt	r1, #1
   14f50:	bl	10f70 <dcgettext@plt>
   14f54:	ldr	r3, [r7]
   14f58:	mov	r2, r0
   14f5c:	ldmib	r7, {r0, r1, r6}
   14f60:	ldr	r5, [r7, #16]
   14f64:	ldr	r7, [r7, #20]
   14f68:	stm	sp, {r0, r1, r6}
   14f6c:	str	r5, [sp, #12]
   14f70:	str	r7, [sp, #16]
   14f74:	b	14fb4 <__mempcpy_chk@plt+0x3e64>
   14f78:	movw	r1, #27747	; 0x6c63
   14f7c:	mov	r0, #0
   14f80:	mov	r2, #5
   14f84:	movt	r1, #1
   14f88:	bl	10f70 <dcgettext@plt>
   14f8c:	ldr	r3, [r7]
   14f90:	mov	r2, r0
   14f94:	ldmib	r7, {r0, r1, r6}
   14f98:	ldr	r5, [r7, #16]
   14f9c:	ldr	r4, [r7, #20]
   14fa0:	ldr	r7, [r7, #24]
   14fa4:	stm	sp, {r0, r1, r6}
   14fa8:	str	r5, [sp, #12]
   14fac:	str	r4, [sp, #16]
   14fb0:	str	r7, [sp, #20]
   14fb4:	mov	r0, r8
   14fb8:	mov	r1, #1
   14fbc:	bl	110b4 <__fprintf_chk@plt>
   14fc0:	sub	sp, fp, #24
   14fc4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14fc8:	movw	r1, #27839	; 0x6cbf
   14fcc:	movt	r1, #1
   14fd0:	mov	r0, #0
   14fd4:	mov	r2, #5
   14fd8:	bl	10f70 <dcgettext@plt>
   14fdc:	mov	ip, r0
   14fe0:	ldr	r3, [r7]
   14fe4:	ldr	r0, [r7, #4]
   14fe8:	ldr	r1, [r7, #8]
   14fec:	ldr	r6, [r7, #12]
   14ff0:	ldr	r5, [r7, #16]
   14ff4:	ldr	r4, [r7, #20]
   14ff8:	ldr	r2, [r7, #24]
   14ffc:	ldr	lr, [r7, #28]
   15000:	ldr	r7, [r7, #32]
   15004:	stm	sp, {r0, r1, r6}
   15008:	str	r5, [sp, #12]
   1500c:	str	r4, [sp, #16]
   15010:	str	r2, [sp, #20]
   15014:	str	lr, [sp, #24]
   15018:	str	r7, [sp, #28]
   1501c:	b	15064 <__mempcpy_chk@plt+0x3f14>
   15020:	movw	r1, #27791	; 0x6c8f
   15024:	mov	r0, #0
   15028:	mov	r2, #5
   1502c:	movt	r1, #1
   15030:	bl	10f70 <dcgettext@plt>
   15034:	mov	ip, r0
   15038:	ldr	r3, [r7]
   1503c:	ldmib	r7, {r0, r1, r6}
   15040:	ldr	r5, [r7, #16]
   15044:	ldr	r4, [r7, #20]
   15048:	ldr	r2, [r7, #24]
   1504c:	ldr	r7, [r7, #28]
   15050:	stm	sp, {r0, r1, r6}
   15054:	str	r5, [sp, #12]
   15058:	str	r4, [sp, #16]
   1505c:	str	r2, [sp, #20]
   15060:	str	r7, [sp, #24]
   15064:	mov	r0, r8
   15068:	mov	r1, #1
   1506c:	mov	r2, ip
   15070:	bl	110b4 <__fprintf_chk@plt>
   15074:	sub	sp, fp, #24
   15078:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1507c:	push	{r4, sl, fp, lr}
   15080:	add	fp, sp, #8
   15084:	sub	sp, sp, #8
   15088:	ldr	ip, [fp, #8]
   1508c:	mov	lr, #0
   15090:	ldr	r4, [ip, lr, lsl #2]
   15094:	add	lr, lr, #1
   15098:	cmp	r4, #0
   1509c:	bne	15090 <__mempcpy_chk@plt+0x3f40>
   150a0:	sub	r4, lr, #1
   150a4:	str	ip, [sp]
   150a8:	str	r4, [sp, #4]
   150ac:	bl	14d40 <__mempcpy_chk@plt+0x3bf0>
   150b0:	sub	sp, fp, #8
   150b4:	pop	{r4, sl, fp, pc}
   150b8:	push	{fp, lr}
   150bc:	mov	fp, sp
   150c0:	sub	sp, sp, #48	; 0x30
   150c4:	ldr	ip, [fp, #8]
   150c8:	ldr	lr, [ip]
   150cc:	cmp	lr, #0
   150d0:	str	lr, [sp, #8]
   150d4:	beq	15170 <__mempcpy_chk@plt+0x4020>
   150d8:	ldr	lr, [ip, #4]
   150dc:	cmp	lr, #0
   150e0:	str	lr, [sp, #12]
   150e4:	beq	15178 <__mempcpy_chk@plt+0x4028>
   150e8:	ldr	lr, [ip, #8]
   150ec:	cmp	lr, #0
   150f0:	str	lr, [sp, #16]
   150f4:	beq	15180 <__mempcpy_chk@plt+0x4030>
   150f8:	ldr	lr, [ip, #12]
   150fc:	cmp	lr, #0
   15100:	str	lr, [sp, #20]
   15104:	beq	15188 <__mempcpy_chk@plt+0x4038>
   15108:	ldr	lr, [ip, #16]
   1510c:	cmp	lr, #0
   15110:	str	lr, [sp, #24]
   15114:	beq	15190 <__mempcpy_chk@plt+0x4040>
   15118:	ldr	lr, [ip, #20]
   1511c:	cmp	lr, #0
   15120:	str	lr, [sp, #28]
   15124:	beq	15198 <__mempcpy_chk@plt+0x4048>
   15128:	ldr	lr, [ip, #24]
   1512c:	cmp	lr, #0
   15130:	str	lr, [sp, #32]
   15134:	beq	151a0 <__mempcpy_chk@plt+0x4050>
   15138:	ldr	lr, [ip, #28]
   1513c:	cmp	lr, #0
   15140:	str	lr, [sp, #36]	; 0x24
   15144:	beq	151a8 <__mempcpy_chk@plt+0x4058>
   15148:	ldr	lr, [ip, #32]
   1514c:	cmp	lr, #0
   15150:	str	lr, [sp, #40]	; 0x28
   15154:	beq	151b0 <__mempcpy_chk@plt+0x4060>
   15158:	ldr	lr, [ip, #36]	; 0x24
   1515c:	mov	ip, #10
   15160:	cmp	lr, #0
   15164:	str	lr, [sp, #44]	; 0x2c
   15168:	movweq	ip, #9
   1516c:	b	151b4 <__mempcpy_chk@plt+0x4064>
   15170:	mov	ip, #0
   15174:	b	151b4 <__mempcpy_chk@plt+0x4064>
   15178:	mov	ip, #1
   1517c:	b	151b4 <__mempcpy_chk@plt+0x4064>
   15180:	mov	ip, #2
   15184:	b	151b4 <__mempcpy_chk@plt+0x4064>
   15188:	mov	ip, #3
   1518c:	b	151b4 <__mempcpy_chk@plt+0x4064>
   15190:	mov	ip, #4
   15194:	b	151b4 <__mempcpy_chk@plt+0x4064>
   15198:	mov	ip, #5
   1519c:	b	151b4 <__mempcpy_chk@plt+0x4064>
   151a0:	mov	ip, #6
   151a4:	b	151b4 <__mempcpy_chk@plt+0x4064>
   151a8:	mov	ip, #7
   151ac:	b	151b4 <__mempcpy_chk@plt+0x4064>
   151b0:	mov	ip, #8
   151b4:	add	lr, sp, #8
   151b8:	str	ip, [sp, #4]
   151bc:	str	lr, [sp]
   151c0:	bl	14d40 <__mempcpy_chk@plt+0x3bf0>
   151c4:	mov	sp, fp
   151c8:	pop	{fp, pc}
   151cc:	push	{fp, lr}
   151d0:	mov	fp, sp
   151d4:	sub	sp, sp, #56	; 0x38
   151d8:	add	ip, fp, #8
   151dc:	str	ip, [sp, #12]
   151e0:	ldr	lr, [fp, #8]
   151e4:	cmp	lr, #0
   151e8:	str	lr, [sp, #16]
   151ec:	beq	15288 <__mempcpy_chk@plt+0x4138>
   151f0:	ldr	lr, [ip, #4]
   151f4:	cmp	lr, #0
   151f8:	str	lr, [sp, #20]
   151fc:	beq	15290 <__mempcpy_chk@plt+0x4140>
   15200:	ldr	lr, [ip, #8]
   15204:	cmp	lr, #0
   15208:	str	lr, [sp, #24]
   1520c:	beq	15298 <__mempcpy_chk@plt+0x4148>
   15210:	ldr	lr, [ip, #12]
   15214:	cmp	lr, #0
   15218:	str	lr, [sp, #28]
   1521c:	beq	152a0 <__mempcpy_chk@plt+0x4150>
   15220:	ldr	lr, [ip, #16]
   15224:	cmp	lr, #0
   15228:	str	lr, [sp, #32]
   1522c:	beq	152a8 <__mempcpy_chk@plt+0x4158>
   15230:	ldr	lr, [ip, #20]
   15234:	cmp	lr, #0
   15238:	str	lr, [sp, #36]	; 0x24
   1523c:	beq	152b0 <__mempcpy_chk@plt+0x4160>
   15240:	ldr	lr, [ip, #24]
   15244:	cmp	lr, #0
   15248:	str	lr, [sp, #40]	; 0x28
   1524c:	beq	152b8 <__mempcpy_chk@plt+0x4168>
   15250:	ldr	lr, [ip, #28]
   15254:	cmp	lr, #0
   15258:	str	lr, [sp, #44]	; 0x2c
   1525c:	beq	152c0 <__mempcpy_chk@plt+0x4170>
   15260:	ldr	lr, [ip, #32]
   15264:	cmp	lr, #0
   15268:	str	lr, [sp, #48]	; 0x30
   1526c:	beq	152c8 <__mempcpy_chk@plt+0x4178>
   15270:	ldr	lr, [ip, #36]	; 0x24
   15274:	mov	ip, #10
   15278:	cmp	lr, #0
   1527c:	str	lr, [sp, #52]	; 0x34
   15280:	movweq	ip, #9
   15284:	b	152cc <__mempcpy_chk@plt+0x417c>
   15288:	mov	ip, #0
   1528c:	b	152cc <__mempcpy_chk@plt+0x417c>
   15290:	mov	ip, #1
   15294:	b	152cc <__mempcpy_chk@plt+0x417c>
   15298:	mov	ip, #2
   1529c:	b	152cc <__mempcpy_chk@plt+0x417c>
   152a0:	mov	ip, #3
   152a4:	b	152cc <__mempcpy_chk@plt+0x417c>
   152a8:	mov	ip, #4
   152ac:	b	152cc <__mempcpy_chk@plt+0x417c>
   152b0:	mov	ip, #5
   152b4:	b	152cc <__mempcpy_chk@plt+0x417c>
   152b8:	mov	ip, #6
   152bc:	b	152cc <__mempcpy_chk@plt+0x417c>
   152c0:	mov	ip, #7
   152c4:	b	152cc <__mempcpy_chk@plt+0x417c>
   152c8:	mov	ip, #8
   152cc:	add	lr, sp, #16
   152d0:	str	ip, [sp, #4]
   152d4:	str	lr, [sp]
   152d8:	bl	14d40 <__mempcpy_chk@plt+0x3bf0>
   152dc:	mov	sp, fp
   152e0:	pop	{fp, pc}
   152e4:	push	{fp, lr}
   152e8:	mov	fp, sp
   152ec:	movw	r0, #29012	; 0x7154
   152f0:	movt	r0, #2
   152f4:	ldr	r1, [r0]
   152f8:	movw	r0, #26584	; 0x67d8
   152fc:	movt	r0, #1
   15300:	bl	10ec8 <fputs_unlocked@plt>
   15304:	movw	r1, #27951	; 0x6d2f
   15308:	mov	r0, #0
   1530c:	mov	r2, #5
   15310:	movt	r1, #1
   15314:	bl	10f70 <dcgettext@plt>
   15318:	movw	r2, #27971	; 0x6d43
   1531c:	mov	r1, r0
   15320:	mov	r0, #1
   15324:	movt	r2, #1
   15328:	bl	1109c <__printf_chk@plt>
   1532c:	movw	r1, #27993	; 0x6d59
   15330:	mov	r0, #0
   15334:	mov	r2, #5
   15338:	movt	r1, #1
   1533c:	bl	10f70 <dcgettext@plt>
   15340:	movw	r2, #26024	; 0x65a8
   15344:	movw	r3, #26393	; 0x6719
   15348:	mov	r1, r0
   1534c:	mov	r0, #1
   15350:	movt	r2, #1
   15354:	movt	r3, #1
   15358:	bl	1109c <__printf_chk@plt>
   1535c:	movw	r1, #28013	; 0x6d6d
   15360:	mov	r0, #0
   15364:	mov	r2, #5
   15368:	movt	r1, #1
   1536c:	bl	10f70 <dcgettext@plt>
   15370:	movw	r2, #28052	; 0x6d94
   15374:	mov	r1, r0
   15378:	mov	r0, #1
   1537c:	movt	r2, #1
   15380:	pop	{fp, lr}
   15384:	b	1109c <__printf_chk@plt>
   15388:	push	{r4, r5, r6, sl, fp, lr}
   1538c:	add	fp, sp, #16
   15390:	mov	r4, r2
   15394:	mov	r5, r1
   15398:	mov	r6, r0
   1539c:	bl	15ea4 <__mempcpy_chk@plt+0x4d54>
   153a0:	cmp	r0, #0
   153a4:	popne	{r4, r5, r6, sl, fp, pc}
   153a8:	cmp	r6, #0
   153ac:	beq	153c0 <__mempcpy_chk@plt+0x4270>
   153b0:	cmp	r5, #0
   153b4:	cmpne	r4, #0
   153b8:	bne	153c0 <__mempcpy_chk@plt+0x4270>
   153bc:	pop	{r4, r5, r6, sl, fp, pc}
   153c0:	bl	15960 <__mempcpy_chk@plt+0x4810>
   153c4:	push	{r4, r5, r6, sl, fp, lr}
   153c8:	add	fp, sp, #16
   153cc:	mov	r4, r2
   153d0:	mov	r5, r1
   153d4:	mov	r6, r0
   153d8:	bl	15ea4 <__mempcpy_chk@plt+0x4d54>
   153dc:	cmp	r0, #0
   153e0:	popne	{r4, r5, r6, sl, fp, pc}
   153e4:	cmp	r6, #0
   153e8:	beq	153fc <__mempcpy_chk@plt+0x42ac>
   153ec:	cmp	r5, #0
   153f0:	cmpne	r4, #0
   153f4:	bne	153fc <__mempcpy_chk@plt+0x42ac>
   153f8:	pop	{r4, r5, r6, sl, fp, pc}
   153fc:	bl	15960 <__mempcpy_chk@plt+0x4810>
   15400:	push	{fp, lr}
   15404:	mov	fp, sp
   15408:	bl	15a9c <__mempcpy_chk@plt+0x494c>
   1540c:	cmp	r0, #0
   15410:	popne	{fp, pc}
   15414:	bl	15960 <__mempcpy_chk@plt+0x4810>
   15418:	push	{fp, lr}
   1541c:	mov	fp, sp
   15420:	bl	15a9c <__mempcpy_chk@plt+0x494c>
   15424:	cmp	r0, #0
   15428:	popne	{fp, pc}
   1542c:	bl	15960 <__mempcpy_chk@plt+0x4810>
   15430:	push	{fp, lr}
   15434:	mov	fp, sp
   15438:	bl	15a9c <__mempcpy_chk@plt+0x494c>
   1543c:	cmp	r0, #0
   15440:	popne	{fp, pc}
   15444:	bl	15960 <__mempcpy_chk@plt+0x4810>
   15448:	push	{r4, r5, fp, lr}
   1544c:	add	fp, sp, #8
   15450:	mov	r4, r1
   15454:	mov	r5, r0
   15458:	bl	15acc <__mempcpy_chk@plt+0x497c>
   1545c:	cmp	r0, #0
   15460:	popne	{r4, r5, fp, pc}
   15464:	cmp	r5, #0
   15468:	beq	15478 <__mempcpy_chk@plt+0x4328>
   1546c:	cmp	r4, #0
   15470:	bne	15478 <__mempcpy_chk@plt+0x4328>
   15474:	pop	{r4, r5, fp, pc}
   15478:	bl	15960 <__mempcpy_chk@plt+0x4810>
   1547c:	push	{fp, lr}
   15480:	mov	fp, sp
   15484:	cmp	r1, #0
   15488:	orreq	r1, r1, #1
   1548c:	bl	15acc <__mempcpy_chk@plt+0x497c>
   15490:	cmp	r0, #0
   15494:	popne	{fp, pc}
   15498:	bl	15960 <__mempcpy_chk@plt+0x4810>
   1549c:	push	{fp, lr}
   154a0:	mov	fp, sp
   154a4:	clz	r3, r2
   154a8:	lsr	ip, r3, #5
   154ac:	clz	r3, r1
   154b0:	lsr	r3, r3, #5
   154b4:	orrs	r3, r3, ip
   154b8:	movwne	r1, #1
   154bc:	movwne	r2, #1
   154c0:	bl	15ea4 <__mempcpy_chk@plt+0x4d54>
   154c4:	cmp	r0, #0
   154c8:	popne	{fp, pc}
   154cc:	bl	15960 <__mempcpy_chk@plt+0x4810>
   154d0:	push	{fp, lr}
   154d4:	mov	fp, sp
   154d8:	mov	r2, r1
   154dc:	mov	r1, r0
   154e0:	mov	r0, #0
   154e4:	bl	15ea4 <__mempcpy_chk@plt+0x4d54>
   154e8:	cmp	r0, #0
   154ec:	popne	{fp, pc}
   154f0:	bl	15960 <__mempcpy_chk@plt+0x4810>
   154f4:	push	{fp, lr}
   154f8:	mov	fp, sp
   154fc:	mov	r2, r1
   15500:	mov	r1, r0
   15504:	clz	r0, r2
   15508:	clz	r3, r1
   1550c:	lsr	r0, r0, #5
   15510:	lsr	r3, r3, #5
   15514:	orrs	r0, r3, r0
   15518:	movwne	r1, #1
   1551c:	movwne	r2, #1
   15520:	mov	r0, #0
   15524:	bl	15ea4 <__mempcpy_chk@plt+0x4d54>
   15528:	cmp	r0, #0
   1552c:	popne	{fp, pc}
   15530:	bl	15960 <__mempcpy_chk@plt+0x4810>
   15534:	push	{r4, r5, r6, sl, fp, lr}
   15538:	add	fp, sp, #16
   1553c:	ldr	r5, [r1]
   15540:	mov	r4, r1
   15544:	mov	r6, r0
   15548:	cmp	r0, #0
   1554c:	beq	15564 <__mempcpy_chk@plt+0x4414>
   15550:	mov	r0, #1
   15554:	add	r0, r0, r5, lsr #1
   15558:	adds	r5, r5, r0
   1555c:	bcc	1556c <__mempcpy_chk@plt+0x441c>
   15560:	b	155a8 <__mempcpy_chk@plt+0x4458>
   15564:	cmp	r5, #0
   15568:	movweq	r5, #64	; 0x40
   1556c:	mov	r0, r6
   15570:	mov	r1, r5
   15574:	mov	r2, #1
   15578:	bl	15ea4 <__mempcpy_chk@plt+0x4d54>
   1557c:	cmp	r5, #0
   15580:	mov	r1, r5
   15584:	movwne	r1, #1
   15588:	cmp	r0, #0
   1558c:	bne	155a0 <__mempcpy_chk@plt+0x4450>
   15590:	clz	r2, r6
   15594:	lsr	r2, r2, #5
   15598:	orrs	r1, r2, r1
   1559c:	bne	155a8 <__mempcpy_chk@plt+0x4458>
   155a0:	str	r5, [r4]
   155a4:	pop	{r4, r5, r6, sl, fp, pc}
   155a8:	bl	15960 <__mempcpy_chk@plt+0x4810>
   155ac:	push	{r4, r5, r6, r7, fp, lr}
   155b0:	add	fp, sp, #16
   155b4:	ldr	r5, [r1]
   155b8:	mov	r6, r2
   155bc:	mov	r4, r1
   155c0:	mov	r7, r0
   155c4:	cmp	r0, #0
   155c8:	beq	155e0 <__mempcpy_chk@plt+0x4490>
   155cc:	mov	r0, #1
   155d0:	add	r0, r0, r5, lsr #1
   155d4:	adds	r5, r5, r0
   155d8:	bcc	155f8 <__mempcpy_chk@plt+0x44a8>
   155dc:	b	1562c <__mempcpy_chk@plt+0x44dc>
   155e0:	cmp	r5, #0
   155e4:	bne	155f8 <__mempcpy_chk@plt+0x44a8>
   155e8:	mov	r0, #64	; 0x40
   155ec:	cmp	r6, #64	; 0x40
   155f0:	udiv	r5, r0, r6
   155f4:	addhi	r5, r5, #1
   155f8:	mov	r0, r7
   155fc:	mov	r1, r5
   15600:	mov	r2, r6
   15604:	bl	15ea4 <__mempcpy_chk@plt+0x4d54>
   15608:	cmp	r0, #0
   1560c:	bne	15624 <__mempcpy_chk@plt+0x44d4>
   15610:	cmp	r7, #0
   15614:	beq	1562c <__mempcpy_chk@plt+0x44dc>
   15618:	cmp	r6, #0
   1561c:	cmpne	r5, #0
   15620:	bne	1562c <__mempcpy_chk@plt+0x44dc>
   15624:	str	r5, [r4]
   15628:	pop	{r4, r5, r6, r7, fp, pc}
   1562c:	bl	15960 <__mempcpy_chk@plt+0x4810>
   15630:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15634:	add	fp, sp, #24
   15638:	mov	r8, r1
   1563c:	ldr	r1, [r1]
   15640:	mov	r5, r0
   15644:	add	r0, r1, r1, asr #1
   15648:	cmp	r0, r1
   1564c:	mvnvs	r0, #-2147483648	; 0x80000000
   15650:	cmp	r0, r3
   15654:	mov	r7, r0
   15658:	movgt	r7, r3
   1565c:	cmn	r3, #1
   15660:	movle	r7, r0
   15664:	ldr	r0, [fp, #8]
   15668:	cmn	r0, #1
   1566c:	ble	15694 <__mempcpy_chk@plt+0x4544>
   15670:	cmp	r0, #0
   15674:	beq	156e8 <__mempcpy_chk@plt+0x4598>
   15678:	cmn	r7, #1
   1567c:	ble	156bc <__mempcpy_chk@plt+0x456c>
   15680:	mvn	r4, #-2147483648	; 0x80000000
   15684:	udiv	r6, r4, r0
   15688:	cmp	r6, r7
   1568c:	bge	156e8 <__mempcpy_chk@plt+0x4598>
   15690:	b	156f8 <__mempcpy_chk@plt+0x45a8>
   15694:	cmn	r7, #1
   15698:	ble	156d8 <__mempcpy_chk@plt+0x4588>
   1569c:	cmn	r0, #1
   156a0:	beq	156e8 <__mempcpy_chk@plt+0x4598>
   156a4:	mov	r6, #-2147483648	; 0x80000000
   156a8:	mvn	r4, #-2147483648	; 0x80000000
   156ac:	sdiv	r6, r6, r0
   156b0:	cmp	r6, r7
   156b4:	bge	156e8 <__mempcpy_chk@plt+0x4598>
   156b8:	b	156f8 <__mempcpy_chk@plt+0x45a8>
   156bc:	beq	156e8 <__mempcpy_chk@plt+0x4598>
   156c0:	mov	r6, #-2147483648	; 0x80000000
   156c4:	mvn	r4, #-2147483648	; 0x80000000
   156c8:	sdiv	r6, r6, r7
   156cc:	cmp	r6, r0
   156d0:	bge	156e8 <__mempcpy_chk@plt+0x4598>
   156d4:	b	156f8 <__mempcpy_chk@plt+0x45a8>
   156d8:	mvn	r4, #-2147483648	; 0x80000000
   156dc:	sdiv	r6, r4, r0
   156e0:	cmp	r7, r6
   156e4:	blt	156f8 <__mempcpy_chk@plt+0x45a8>
   156e8:	mul	r6, r7, r0
   156ec:	mov	r4, #64	; 0x40
   156f0:	cmp	r6, #63	; 0x3f
   156f4:	bgt	15700 <__mempcpy_chk@plt+0x45b0>
   156f8:	sdiv	r7, r4, r0
   156fc:	mul	r6, r7, r0
   15700:	cmp	r5, #0
   15704:	moveq	r4, #0
   15708:	streq	r4, [r8]
   1570c:	sub	r4, r7, r1
   15710:	cmp	r4, r2
   15714:	bge	157c0 <__mempcpy_chk@plt+0x4670>
   15718:	add	r7, r1, r2
   1571c:	mov	r6, #0
   15720:	mov	r2, #0
   15724:	cmp	r7, r3
   15728:	movwgt	r6, #1
   1572c:	cmn	r3, #1
   15730:	movwgt	r2, #1
   15734:	cmp	r7, r1
   15738:	bvs	157f4 <__mempcpy_chk@plt+0x46a4>
   1573c:	ands	r1, r2, r6
   15740:	bne	157f4 <__mempcpy_chk@plt+0x46a4>
   15744:	cmn	r0, #1
   15748:	ble	15770 <__mempcpy_chk@plt+0x4620>
   1574c:	cmp	r0, #0
   15750:	beq	157bc <__mempcpy_chk@plt+0x466c>
   15754:	cmn	r7, #1
   15758:	ble	15794 <__mempcpy_chk@plt+0x4644>
   1575c:	mvn	r1, #-2147483648	; 0x80000000
   15760:	udiv	r1, r1, r0
   15764:	cmp	r1, r7
   15768:	bge	157bc <__mempcpy_chk@plt+0x466c>
   1576c:	b	157f4 <__mempcpy_chk@plt+0x46a4>
   15770:	cmn	r7, #1
   15774:	ble	157ac <__mempcpy_chk@plt+0x465c>
   15778:	cmn	r0, #1
   1577c:	beq	157bc <__mempcpy_chk@plt+0x466c>
   15780:	mov	r1, #-2147483648	; 0x80000000
   15784:	sdiv	r1, r1, r0
   15788:	cmp	r1, r7
   1578c:	bge	157bc <__mempcpy_chk@plt+0x466c>
   15790:	b	157f4 <__mempcpy_chk@plt+0x46a4>
   15794:	beq	157bc <__mempcpy_chk@plt+0x466c>
   15798:	mov	r1, #-2147483648	; 0x80000000
   1579c:	sdiv	r1, r1, r7
   157a0:	cmp	r1, r0
   157a4:	bge	157bc <__mempcpy_chk@plt+0x466c>
   157a8:	b	157f4 <__mempcpy_chk@plt+0x46a4>
   157ac:	mvn	r1, #-2147483648	; 0x80000000
   157b0:	sdiv	r1, r1, r0
   157b4:	cmp	r7, r1
   157b8:	blt	157f4 <__mempcpy_chk@plt+0x46a4>
   157bc:	mul	r6, r7, r0
   157c0:	mov	r0, r5
   157c4:	mov	r1, r6
   157c8:	bl	15acc <__mempcpy_chk@plt+0x497c>
   157cc:	cmp	r6, #0
   157d0:	movwne	r6, #1
   157d4:	cmp	r0, #0
   157d8:	bne	157ec <__mempcpy_chk@plt+0x469c>
   157dc:	clz	r1, r5
   157e0:	lsr	r1, r1, #5
   157e4:	orrs	r1, r1, r6
   157e8:	bne	157f4 <__mempcpy_chk@plt+0x46a4>
   157ec:	str	r7, [r8]
   157f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   157f4:	bl	15960 <__mempcpy_chk@plt+0x4810>
   157f8:	push	{fp, lr}
   157fc:	mov	fp, sp
   15800:	mov	r1, #1
   15804:	bl	15a48 <__mempcpy_chk@plt+0x48f8>
   15808:	cmp	r0, #0
   1580c:	popne	{fp, pc}
   15810:	bl	15960 <__mempcpy_chk@plt+0x4810>
   15814:	push	{fp, lr}
   15818:	mov	fp, sp
   1581c:	bl	15a48 <__mempcpy_chk@plt+0x48f8>
   15820:	cmp	r0, #0
   15824:	popne	{fp, pc}
   15828:	bl	15960 <__mempcpy_chk@plt+0x4810>
   1582c:	push	{fp, lr}
   15830:	mov	fp, sp
   15834:	mov	r1, #1
   15838:	bl	15a48 <__mempcpy_chk@plt+0x48f8>
   1583c:	cmp	r0, #0
   15840:	popne	{fp, pc}
   15844:	bl	15960 <__mempcpy_chk@plt+0x4810>
   15848:	push	{fp, lr}
   1584c:	mov	fp, sp
   15850:	bl	15a48 <__mempcpy_chk@plt+0x48f8>
   15854:	cmp	r0, #0
   15858:	popne	{fp, pc}
   1585c:	bl	15960 <__mempcpy_chk@plt+0x4810>
   15860:	push	{r4, r5, r6, sl, fp, lr}
   15864:	add	fp, sp, #16
   15868:	mov	r5, r0
   1586c:	mov	r0, r1
   15870:	mov	r4, r1
   15874:	bl	15a9c <__mempcpy_chk@plt+0x494c>
   15878:	cmp	r0, #0
   1587c:	beq	15898 <__mempcpy_chk@plt+0x4748>
   15880:	mov	r1, r5
   15884:	mov	r2, r4
   15888:	mov	r6, r0
   1588c:	bl	10f34 <memcpy@plt>
   15890:	mov	r0, r6
   15894:	pop	{r4, r5, r6, sl, fp, pc}
   15898:	bl	15960 <__mempcpy_chk@plt+0x4810>
   1589c:	push	{r4, r5, r6, sl, fp, lr}
   158a0:	add	fp, sp, #16
   158a4:	mov	r5, r0
   158a8:	mov	r0, r1
   158ac:	mov	r4, r1
   158b0:	bl	15a9c <__mempcpy_chk@plt+0x494c>
   158b4:	cmp	r0, #0
   158b8:	beq	158d4 <__mempcpy_chk@plt+0x4784>
   158bc:	mov	r1, r5
   158c0:	mov	r2, r4
   158c4:	mov	r6, r0
   158c8:	bl	10f34 <memcpy@plt>
   158cc:	mov	r0, r6
   158d0:	pop	{r4, r5, r6, sl, fp, pc}
   158d4:	bl	15960 <__mempcpy_chk@plt+0x4810>
   158d8:	push	{r4, r5, r6, sl, fp, lr}
   158dc:	add	fp, sp, #16
   158e0:	mov	r5, r0
   158e4:	add	r0, r1, #1
   158e8:	mov	r4, r1
   158ec:	bl	15a9c <__mempcpy_chk@plt+0x494c>
   158f0:	cmp	r0, #0
   158f4:	beq	1591c <__mempcpy_chk@plt+0x47cc>
   158f8:	mov	r6, r0
   158fc:	mov	r0, #0
   15900:	mov	r1, r5
   15904:	mov	r2, r4
   15908:	strb	r0, [r6, r4]
   1590c:	mov	r0, r6
   15910:	bl	10f34 <memcpy@plt>
   15914:	mov	r0, r6
   15918:	pop	{r4, r5, r6, sl, fp, pc}
   1591c:	bl	15960 <__mempcpy_chk@plt+0x4810>
   15920:	push	{r4, r5, r6, sl, fp, lr}
   15924:	add	fp, sp, #16
   15928:	mov	r4, r0
   1592c:	bl	11054 <strlen@plt>
   15930:	add	r5, r0, #1
   15934:	mov	r0, r5
   15938:	bl	15a9c <__mempcpy_chk@plt+0x494c>
   1593c:	cmp	r0, #0
   15940:	beq	1595c <__mempcpy_chk@plt+0x480c>
   15944:	mov	r1, r4
   15948:	mov	r2, r5
   1594c:	mov	r6, r0
   15950:	bl	10f34 <memcpy@plt>
   15954:	mov	r0, r6
   15958:	pop	{r4, r5, r6, sl, fp, pc}
   1595c:	bl	15960 <__mempcpy_chk@plt+0x4810>
   15960:	push	{fp, lr}
   15964:	mov	fp, sp
   15968:	movw	r0, #28924	; 0x70fc
   1596c:	movw	r1, #28128	; 0x6de0
   15970:	mov	r2, #5
   15974:	movt	r0, #2
   15978:	movt	r1, #1
   1597c:	ldr	r4, [r0]
   15980:	mov	r0, #0
   15984:	bl	10f70 <dcgettext@plt>
   15988:	movw	r2, #26187	; 0x664b
   1598c:	mov	r3, r0
   15990:	mov	r0, r4
   15994:	mov	r1, #0
   15998:	movt	r2, #1
   1599c:	bl	10fe8 <error@plt>
   159a0:	bl	11138 <abort@plt>
   159a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   159a8:	add	fp, sp, #24
   159ac:	sub	sp, sp, #8
   159b0:	mov	r4, r3
   159b4:	mov	r8, r2
   159b8:	mov	r9, r1
   159bc:	mov	r5, r0
   159c0:	bl	1106c <__errno_location@plt>
   159c4:	mov	r6, #0
   159c8:	mov	r7, r0
   159cc:	add	r1, sp, #4
   159d0:	str	r6, [r0]
   159d4:	mov	r0, r5
   159d8:	blx	r4
   159dc:	ldr	r0, [sp, #4]
   159e0:	cmp	r0, r5
   159e4:	beq	15a30 <__mempcpy_chk@plt+0x48e0>
   159e8:	cmp	r9, #0
   159ec:	beq	15a0c <__mempcpy_chk@plt+0x48bc>
   159f0:	vcmp.f64	d0, #0.0
   159f4:	vmrs	APSR_nzcv, fpscr
   159f8:	beq	15a2c <__mempcpy_chk@plt+0x48dc>
   159fc:	ldr	r1, [r7]
   15a00:	subs	r6, r1, #34	; 0x22
   15a04:	movwne	r6, #1
   15a08:	b	15a30 <__mempcpy_chk@plt+0x48e0>
   15a0c:	ldrb	r1, [r0]
   15a10:	mov	r6, #0
   15a14:	cmp	r1, #0
   15a18:	beq	159f0 <__mempcpy_chk@plt+0x48a0>
   15a1c:	vstr	d0, [r8]
   15a20:	mov	r0, r6
   15a24:	sub	sp, fp, #24
   15a28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15a2c:	mov	r6, #1
   15a30:	cmp	r9, #0
   15a34:	strne	r0, [r9]
   15a38:	vstr	d0, [r8]
   15a3c:	mov	r0, r6
   15a40:	sub	sp, fp, #24
   15a44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15a48:	clz	r2, r1
   15a4c:	clz	r3, r0
   15a50:	lsr	r2, r2, #5
   15a54:	lsr	r3, r3, #5
   15a58:	orrs	r2, r3, r2
   15a5c:	movwne	r1, #1
   15a60:	movwne	r0, #1
   15a64:	cmp	r1, #0
   15a68:	beq	15a98 <__mempcpy_chk@plt+0x4948>
   15a6c:	mvn	r2, #-2147483648	; 0x80000000
   15a70:	udiv	r2, r2, r1
   15a74:	cmp	r2, r0
   15a78:	bcs	15a98 <__mempcpy_chk@plt+0x4948>
   15a7c:	push	{fp, lr}
   15a80:	mov	fp, sp
   15a84:	bl	1106c <__errno_location@plt>
   15a88:	mov	r1, #12
   15a8c:	str	r1, [r0]
   15a90:	mov	r0, #0
   15a94:	pop	{fp, pc}
   15a98:	b	10ebc <calloc@plt>
   15a9c:	cmp	r0, #0
   15aa0:	movweq	r0, #1
   15aa4:	cmn	r0, #1
   15aa8:	ble	15ab0 <__mempcpy_chk@plt+0x4960>
   15aac:	b	11000 <malloc@plt>
   15ab0:	push	{fp, lr}
   15ab4:	mov	fp, sp
   15ab8:	bl	1106c <__errno_location@plt>
   15abc:	mov	r1, #12
   15ac0:	str	r1, [r0]
   15ac4:	mov	r0, #0
   15ac8:	pop	{fp, pc}
   15acc:	push	{fp, lr}
   15ad0:	mov	fp, sp
   15ad4:	cmp	r0, #0
   15ad8:	beq	15af4 <__mempcpy_chk@plt+0x49a4>
   15adc:	cmp	r1, #0
   15ae0:	beq	15b00 <__mempcpy_chk@plt+0x49b0>
   15ae4:	cmn	r1, #1
   15ae8:	ble	15b0c <__mempcpy_chk@plt+0x49bc>
   15aec:	pop	{fp, lr}
   15af0:	b	10f7c <realloc@plt>
   15af4:	mov	r0, r1
   15af8:	pop	{fp, lr}
   15afc:	b	15a9c <__mempcpy_chk@plt+0x494c>
   15b00:	bl	12d84 <__mempcpy_chk@plt+0x1c34>
   15b04:	mov	r0, #0
   15b08:	pop	{fp, pc}
   15b0c:	bl	1106c <__errno_location@plt>
   15b10:	mov	r1, #12
   15b14:	str	r1, [r0]
   15b18:	mov	r0, #0
   15b1c:	pop	{fp, pc}
   15b20:	push	{r4, r5, r6, sl, fp, lr}
   15b24:	add	fp, sp, #16
   15b28:	vpush	{d8}
   15b2c:	movw	r6, #29376	; 0x72c0
   15b30:	mov	r5, r0
   15b34:	mov	r4, r1
   15b38:	movt	r6, #2
   15b3c:	ldr	r0, [r6]
   15b40:	cmp	r0, #0
   15b44:	beq	15ba0 <__mempcpy_chk@plt+0x4a50>
   15b48:	ldr	r0, [r6]
   15b4c:	cmp	r0, #0
   15b50:	beq	15bc4 <__mempcpy_chk@plt+0x4a74>
   15b54:	bl	10ed4 <uselocale@plt>
   15b58:	cmp	r0, #0
   15b5c:	beq	15bc4 <__mempcpy_chk@plt+0x4a74>
   15b60:	mov	r6, r0
   15b64:	mov	r0, r5
   15b68:	mov	r1, r4
   15b6c:	bl	10f4c <strtold@plt>
   15b70:	vorr	d8, d0, d0
   15b74:	bl	1106c <__errno_location@plt>
   15b78:	ldr	r5, [r0]
   15b7c:	mov	r4, r0
   15b80:	mov	r0, r6
   15b84:	bl	10ed4 <uselocale@plt>
   15b88:	cmp	r0, #0
   15b8c:	beq	15bdc <__mempcpy_chk@plt+0x4a8c>
   15b90:	str	r5, [r4]
   15b94:	vorr	d0, d8, d8
   15b98:	vpop	{d8}
   15b9c:	pop	{r4, r5, r6, sl, fp, pc}
   15ba0:	movw	r1, #26894	; 0x690e
   15ba4:	movw	r0, #8127	; 0x1fbf
   15ba8:	mov	r2, #0
   15bac:	movt	r1, #1
   15bb0:	bl	11108 <newlocale@plt>
   15bb4:	str	r0, [r6]
   15bb8:	ldr	r0, [r6]
   15bbc:	cmp	r0, #0
   15bc0:	bne	15b54 <__mempcpy_chk@plt+0x4a04>
   15bc4:	cmp	r4, #0
   15bc8:	vmov.i32	d8, #0	; 0x00000000
   15bcc:	strne	r5, [r4]
   15bd0:	vorr	d0, d8, d8
   15bd4:	vpop	{d8}
   15bd8:	pop	{r4, r5, r6, sl, fp, pc}
   15bdc:	bl	11138 <abort@plt>
   15be0:	push	{r4, r5, r6, sl, fp, lr}
   15be4:	add	fp, sp, #16
   15be8:	mov	r4, r0
   15bec:	bl	10fd0 <__fpending@plt>
   15bf0:	ldr	r6, [r4]
   15bf4:	mov	r5, r0
   15bf8:	mov	r0, r4
   15bfc:	bl	15c64 <__mempcpy_chk@plt+0x4b14>
   15c00:	tst	r6, #32
   15c04:	bne	15c3c <__mempcpy_chk@plt+0x4aec>
   15c08:	cmp	r0, #0
   15c0c:	mov	r4, r0
   15c10:	mvnne	r4, #0
   15c14:	cmp	r5, #0
   15c18:	bne	15c48 <__mempcpy_chk@plt+0x4af8>
   15c1c:	cmp	r0, #0
   15c20:	beq	15c48 <__mempcpy_chk@plt+0x4af8>
   15c24:	bl	1106c <__errno_location@plt>
   15c28:	ldr	r0, [r0]
   15c2c:	subs	r4, r0, #9
   15c30:	mvnne	r4, #0
   15c34:	mov	r0, r4
   15c38:	pop	{r4, r5, r6, sl, fp, pc}
   15c3c:	mvn	r4, #0
   15c40:	cmp	r0, #0
   15c44:	beq	15c50 <__mempcpy_chk@plt+0x4b00>
   15c48:	mov	r0, r4
   15c4c:	pop	{r4, r5, r6, sl, fp, pc}
   15c50:	bl	1106c <__errno_location@plt>
   15c54:	mov	r1, #0
   15c58:	str	r1, [r0]
   15c5c:	mov	r0, r4
   15c60:	pop	{r4, r5, r6, sl, fp, pc}
   15c64:	push	{r4, r5, r6, sl, fp, lr}
   15c68:	add	fp, sp, #16
   15c6c:	sub	sp, sp, #8
   15c70:	mov	r4, r0
   15c74:	bl	110a8 <fileno@plt>
   15c78:	cmn	r0, #1
   15c7c:	ble	15cf0 <__mempcpy_chk@plt+0x4ba0>
   15c80:	mov	r0, r4
   15c84:	bl	11018 <__freading@plt>
   15c88:	cmp	r0, #0
   15c8c:	beq	15cb8 <__mempcpy_chk@plt+0x4b68>
   15c90:	mov	r0, r4
   15c94:	bl	110a8 <fileno@plt>
   15c98:	mov	r1, #1
   15c9c:	mov	r2, #0
   15ca0:	mov	r3, #0
   15ca4:	str	r1, [sp]
   15ca8:	bl	10fac <lseek64@plt>
   15cac:	and	r0, r0, r1
   15cb0:	cmn	r0, #1
   15cb4:	beq	15cf0 <__mempcpy_chk@plt+0x4ba0>
   15cb8:	mov	r0, r4
   15cbc:	bl	15d00 <__mempcpy_chk@plt+0x4bb0>
   15cc0:	cmp	r0, #0
   15cc4:	beq	15cf0 <__mempcpy_chk@plt+0x4ba0>
   15cc8:	bl	1106c <__errno_location@plt>
   15ccc:	ldr	r6, [r0]
   15cd0:	mov	r5, r0
   15cd4:	mov	r0, r4
   15cd8:	bl	110cc <fclose@plt>
   15cdc:	cmp	r6, #0
   15ce0:	strne	r6, [r5]
   15ce4:	mvnne	r0, #0
   15ce8:	sub	sp, fp, #16
   15cec:	pop	{r4, r5, r6, sl, fp, pc}
   15cf0:	mov	r0, r4
   15cf4:	sub	sp, fp, #16
   15cf8:	pop	{r4, r5, r6, sl, fp, lr}
   15cfc:	b	110cc <fclose@plt>
   15d00:	push	{r4, sl, fp, lr}
   15d04:	add	fp, sp, #8
   15d08:	sub	sp, sp, #8
   15d0c:	mov	r4, r0
   15d10:	cmp	r0, #0
   15d14:	beq	15d30 <__mempcpy_chk@plt+0x4be0>
   15d18:	mov	r0, r4
   15d1c:	bl	11018 <__freading@plt>
   15d20:	cmp	r0, #0
   15d24:	ldrbne	r0, [r4, #1]
   15d28:	tstne	r0, #1
   15d2c:	bne	15d40 <__mempcpy_chk@plt+0x4bf0>
   15d30:	mov	r0, r4
   15d34:	sub	sp, fp, #8
   15d38:	pop	{r4, sl, fp, lr}
   15d3c:	b	10f04 <fflush@plt>
   15d40:	mov	r0, #1
   15d44:	mov	r2, #0
   15d48:	mov	r3, #0
   15d4c:	str	r0, [sp]
   15d50:	mov	r0, r4
   15d54:	bl	15d68 <__mempcpy_chk@plt+0x4c18>
   15d58:	mov	r0, r4
   15d5c:	sub	sp, fp, #8
   15d60:	pop	{r4, sl, fp, lr}
   15d64:	b	10f04 <fflush@plt>
   15d68:	push	{r4, r5, r6, r7, fp, lr}
   15d6c:	add	fp, sp, #16
   15d70:	sub	sp, sp, #8
   15d74:	mov	r4, r0
   15d78:	ldr	r0, [r0, #4]
   15d7c:	mov	r5, r3
   15d80:	mov	r6, r2
   15d84:	ldr	r1, [r4, #8]
   15d88:	cmp	r1, r0
   15d8c:	bne	15da8 <__mempcpy_chk@plt+0x4c58>
   15d90:	ldrd	r0, [r4, #16]
   15d94:	cmp	r1, r0
   15d98:	bne	15da8 <__mempcpy_chk@plt+0x4c58>
   15d9c:	ldr	r0, [r4, #36]	; 0x24
   15da0:	cmp	r0, #0
   15da4:	beq	15dc0 <__mempcpy_chk@plt+0x4c70>
   15da8:	mov	r0, r4
   15dac:	mov	r2, r6
   15db0:	mov	r3, r5
   15db4:	sub	sp, fp, #16
   15db8:	pop	{r4, r5, r6, r7, fp, lr}
   15dbc:	b	110d8 <fseeko64@plt>
   15dc0:	ldr	r7, [fp, #8]
   15dc4:	mov	r0, r4
   15dc8:	bl	110a8 <fileno@plt>
   15dcc:	mov	r2, r6
   15dd0:	mov	r3, r5
   15dd4:	str	r7, [sp]
   15dd8:	bl	10fac <lseek64@plt>
   15ddc:	and	r2, r0, r1
   15de0:	cmn	r2, #1
   15de4:	mvneq	r0, #0
   15de8:	subeq	sp, fp, #16
   15dec:	popeq	{r4, r5, r6, r7, fp, pc}
   15df0:	strd	r0, [r4, #80]	; 0x50
   15df4:	ldr	r0, [r4]
   15df8:	bic	r0, r0, #16
   15dfc:	str	r0, [r4]
   15e00:	mov	r0, #0
   15e04:	sub	sp, fp, #16
   15e08:	pop	{r4, r5, r6, r7, fp, pc}
   15e0c:	push	{fp, lr}
   15e10:	mov	fp, sp
   15e14:	mov	r0, #14
   15e18:	bl	110fc <nl_langinfo@plt>
   15e1c:	movw	r1, #26585	; 0x67d9
   15e20:	cmp	r0, #0
   15e24:	movt	r1, #1
   15e28:	movne	r1, r0
   15e2c:	movw	r0, #28145	; 0x6df1
   15e30:	ldrb	r2, [r1]
   15e34:	movt	r0, #1
   15e38:	cmp	r2, #0
   15e3c:	movne	r0, r1
   15e40:	pop	{fp, pc}
   15e44:	push	{r4, r5, r6, r7, fp, lr}
   15e48:	add	fp, sp, #16
   15e4c:	sub	sp, sp, #8
   15e50:	add	r5, sp, #4
   15e54:	cmp	r0, #0
   15e58:	mov	r7, r2
   15e5c:	mov	r4, r1
   15e60:	movne	r5, r0
   15e64:	mov	r0, r5
   15e68:	bl	10fdc <mbrtowc@plt>
   15e6c:	mov	r6, r0
   15e70:	cmp	r7, #0
   15e74:	beq	15e98 <__mempcpy_chk@plt+0x4d48>
   15e78:	cmn	r6, #2
   15e7c:	bcc	15e98 <__mempcpy_chk@plt+0x4d48>
   15e80:	mov	r0, #0
   15e84:	bl	15ee0 <__mempcpy_chk@plt+0x4d90>
   15e88:	cmp	r0, #0
   15e8c:	ldrbeq	r0, [r4]
   15e90:	moveq	r6, #1
   15e94:	streq	r0, [r5]
   15e98:	mov	r0, r6
   15e9c:	sub	sp, fp, #16
   15ea0:	pop	{r4, r5, r6, r7, fp, pc}
   15ea4:	cmp	r2, #0
   15ea8:	beq	15ed8 <__mempcpy_chk@plt+0x4d88>
   15eac:	mvn	r3, #0
   15eb0:	udiv	r3, r3, r2
   15eb4:	cmp	r3, r1
   15eb8:	bcs	15ed8 <__mempcpy_chk@plt+0x4d88>
   15ebc:	push	{fp, lr}
   15ec0:	mov	fp, sp
   15ec4:	bl	1106c <__errno_location@plt>
   15ec8:	mov	r1, #12
   15ecc:	str	r1, [r0]
   15ed0:	mov	r0, #0
   15ed4:	pop	{fp, pc}
   15ed8:	mul	r1, r2, r1
   15edc:	b	15acc <__mempcpy_chk@plt+0x497c>
   15ee0:	push	{r4, sl, fp, lr}
   15ee4:	add	fp, sp, #8
   15ee8:	sub	sp, sp, #264	; 0x108
   15eec:	add	r1, sp, #7
   15ef0:	movw	r2, #257	; 0x101
   15ef4:	bl	15f44 <__mempcpy_chk@plt+0x4df4>
   15ef8:	mov	r4, #0
   15efc:	cmp	r0, #0
   15f00:	bne	15f38 <__mempcpy_chk@plt+0x4de8>
   15f04:	movw	r1, #26894	; 0x690e
   15f08:	add	r0, sp, #7
   15f0c:	movt	r1, #1
   15f10:	bl	10ee0 <strcmp@plt>
   15f14:	cmp	r0, #0
   15f18:	beq	15f38 <__mempcpy_chk@plt+0x4de8>
   15f1c:	movw	r1, #28151	; 0x6df7
   15f20:	add	r0, sp, #7
   15f24:	movt	r1, #1
   15f28:	bl	10ee0 <strcmp@plt>
   15f2c:	mov	r4, r0
   15f30:	cmp	r0, #0
   15f34:	movwne	r4, #1
   15f38:	mov	r0, r4
   15f3c:	sub	sp, fp, #8
   15f40:	pop	{r4, sl, fp, pc}
   15f44:	push	{r4, r5, r6, r7, fp, lr}
   15f48:	add	fp, sp, #16
   15f4c:	mov	r4, r1
   15f50:	mov	r1, #0
   15f54:	mov	r6, r2
   15f58:	bl	110e4 <setlocale@plt>
   15f5c:	cmp	r0, #0
   15f60:	beq	15f90 <__mempcpy_chk@plt+0x4e40>
   15f64:	mov	r7, r0
   15f68:	bl	11054 <strlen@plt>
   15f6c:	cmp	r0, r6
   15f70:	bcs	15fb0 <__mempcpy_chk@plt+0x4e60>
   15f74:	add	r2, r0, #1
   15f78:	mov	r0, r4
   15f7c:	mov	r1, r7
   15f80:	bl	10f34 <memcpy@plt>
   15f84:	mov	r5, #0
   15f88:	mov	r0, r5
   15f8c:	pop	{r4, r5, r6, r7, fp, pc}
   15f90:	cmp	r6, #0
   15f94:	mov	r5, #22
   15f98:	movne	r0, #0
   15f9c:	strbne	r0, [r4]
   15fa0:	movne	r0, r5
   15fa4:	popne	{r4, r5, r6, r7, fp, pc}
   15fa8:	mov	r0, r5
   15fac:	pop	{r4, r5, r6, r7, fp, pc}
   15fb0:	mov	r5, #34	; 0x22
   15fb4:	cmp	r6, #0
   15fb8:	beq	15fd8 <__mempcpy_chk@plt+0x4e88>
   15fbc:	sub	r6, r6, #1
   15fc0:	mov	r0, r4
   15fc4:	mov	r1, r7
   15fc8:	mov	r2, r6
   15fcc:	bl	10f34 <memcpy@plt>
   15fd0:	mov	r0, #0
   15fd4:	strb	r0, [r4, r6]
   15fd8:	mov	r0, r5
   15fdc:	pop	{r4, r5, r6, r7, fp, pc}
   15fe0:	mov	r1, #0
   15fe4:	b	110e4 <setlocale@plt>
   15fe8:	vmov	d6, r0, r1
   15fec:	vldr	d7, [pc, #36]	; 16018 <__mempcpy_chk@plt+0x4ec8>
   15ff0:	vldr	d5, [pc, #40]	; 16020 <__mempcpy_chk@plt+0x4ed0>
   15ff4:	vmul.f64	d7, d6, d7
   15ff8:	vcvt.u32.f64	s14, d7
   15ffc:	vcvt.f64.u32	d4, s14
   16000:	vmov	r1, s14
   16004:	vmls.f64	d6, d4, d5
   16008:	vcvt.u32.f64	s15, d6
   1600c:	vmov	r0, s15
   16010:	bx	lr
   16014:	nop			; (mov r0, r0)
   16018:	andeq	r0, r0, r0
   1601c:	ldclcc	0, cr0, [r0]
   16020:	andeq	r0, r0, r0
   16024:	mvnsmi	r0, r0
   16028:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1602c:	mov	r7, r0
   16030:	ldr	r6, [pc, #72]	; 16080 <__mempcpy_chk@plt+0x4f30>
   16034:	ldr	r5, [pc, #72]	; 16084 <__mempcpy_chk@plt+0x4f34>
   16038:	add	r6, pc, r6
   1603c:	add	r5, pc, r5
   16040:	sub	r6, r6, r5
   16044:	mov	r8, r1
   16048:	mov	r9, r2
   1604c:	bl	10e9c <calloc@plt-0x20>
   16050:	asrs	r6, r6, #2
   16054:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16058:	mov	r4, #0
   1605c:	add	r4, r4, #1
   16060:	ldr	r3, [r5], #4
   16064:	mov	r2, r9
   16068:	mov	r1, r8
   1606c:	mov	r0, r7
   16070:	blx	r3
   16074:	cmp	r6, r4
   16078:	bne	1605c <__mempcpy_chk@plt+0x4f0c>
   1607c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16080:	andeq	r0, r1, ip, asr #29
   16084:	andeq	r0, r1, r4, asr #29
   16088:	bx	lr
   1608c:	ldr	r3, [pc, #12]	; 160a0 <__mempcpy_chk@plt+0x4f50>
   16090:	mov	r1, #0
   16094:	add	r3, pc, r3
   16098:	ldr	r2, [r3]
   1609c:	b	11084 <__cxa_atexit@plt>
   160a0:	andeq	r1, r1, r8, asr r0

Disassembly of section .fini:

000160a4 <.fini>:
   160a4:	push	{r3, lr}
   160a8:	pop	{r3, pc}
