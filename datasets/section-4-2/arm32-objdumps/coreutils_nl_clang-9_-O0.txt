
../repos/coreutils/src/nl:     file format elf32-littlearm


Disassembly of section .init:

000111c0 <.init>:
   111c0:	push	{r3, lr}
   111c4:	bl	1154c <__assert_fail@plt+0x48>
   111c8:	pop	{r3, pc}

Disassembly of section .plt:

000111cc <pthread_mutex_unlock@plt-0x14>:
   111cc:	push	{lr}		; (str lr, [sp, #-4]!)
   111d0:	ldr	lr, [pc, #4]	; 111dc <pthread_mutex_unlock@plt-0x4>
   111d4:	add	lr, pc, lr
   111d8:	ldr	pc, [lr, #8]!
   111dc:	andeq	r7, r3, r4, lsr #28

000111e0 <pthread_mutex_unlock@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #225280	; 0x37000
   111e8:	ldr	pc, [ip, #3620]!	; 0xe24

000111ec <calloc@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #225280	; 0x37000
   111f4:	ldr	pc, [ip, #3612]!	; 0xe1c

000111f8 <fputs_unlocked@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #225280	; 0x37000
   11200:	ldr	pc, [ip, #3604]!	; 0xe14

00011204 <wctype@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #225280	; 0x37000
   1120c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011210 <raise@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #225280	; 0x37000
   11218:	ldr	pc, [ip, #3588]!	; 0xe04

0001121c <wcrtomb@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #225280	; 0x37000
   11224:	ldr	pc, [ip, #3580]!	; 0xdfc

00011228 <iswctype@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #225280	; 0x37000
   11230:	ldr	pc, [ip, #3572]!	; 0xdf4

00011234 <strcmp@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #225280	; 0x37000
   1123c:	ldr	pc, [ip, #3564]!	; 0xdec

00011240 <posix_fadvise64@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #225280	; 0x37000
   11248:	ldr	pc, [ip, #3556]!	; 0xde4

0001124c <printf@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #225280	; 0x37000
   11254:	ldr	pc, [ip, #3548]!	; 0xddc

00011258 <pthread_mutex_destroy@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #225280	; 0x37000
   11260:	ldr	pc, [ip, #3540]!	; 0xdd4

00011264 <fflush@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #225280	; 0x37000
   1126c:	ldr	pc, [ip, #3532]!	; 0xdcc

00011270 <memmove@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #225280	; 0x37000
   11278:	ldr	pc, [ip, #3524]!	; 0xdc4

0001127c <free@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #225280	; 0x37000
   11284:	ldr	pc, [ip, #3516]!	; 0xdbc

00011288 <pthread_mutex_lock@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #225280	; 0x37000
   11290:	ldr	pc, [ip, #3508]!	; 0xdb4

00011294 <_exit@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #225280	; 0x37000
   1129c:	ldr	pc, [ip, #3500]!	; 0xdac

000112a0 <memcpy@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #225280	; 0x37000
   112a8:	ldr	pc, [ip, #3492]!	; 0xda4

000112ac <tolower@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #225280	; 0x37000
   112b4:	ldr	pc, [ip, #3484]!	; 0xd9c

000112b8 <pthread_mutex_init@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #225280	; 0x37000
   112c0:	ldr	pc, [ip, #3476]!	; 0xd94

000112c4 <towlower@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #225280	; 0x37000
   112cc:	ldr	pc, [ip, #3468]!	; 0xd8c

000112d0 <mbsinit@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #225280	; 0x37000
   112d8:	ldr	pc, [ip, #3460]!	; 0xd84

000112dc <fwrite_unlocked@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #225280	; 0x37000
   112e4:	ldr	pc, [ip, #3452]!	; 0xd7c

000112e8 <memcmp@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #225280	; 0x37000
   112f0:	ldr	pc, [ip, #3444]!	; 0xd74

000112f4 <stpcpy@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #225280	; 0x37000
   112fc:	ldr	pc, [ip, #3436]!	; 0xd6c

00011300 <getc_unlocked@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #225280	; 0x37000
   11308:	ldr	pc, [ip, #3428]!	; 0xd64

0001130c <realloc@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #225280	; 0x37000
   11314:	ldr	pc, [ip, #3420]!	; 0xd5c

00011318 <textdomain@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #225280	; 0x37000
   11320:	ldr	pc, [ip, #3412]!	; 0xd54

00011324 <iswprint@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #225280	; 0x37000
   1132c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011330 <lseek64@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #225280	; 0x37000
   11338:	ldr	pc, [ip, #3396]!	; 0xd44

0001133c <__ctype_get_mb_cur_max@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #225280	; 0x37000
   11344:	ldr	pc, [ip, #3388]!	; 0xd3c

00011348 <__fpending@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #225280	; 0x37000
   11350:	ldr	pc, [ip, #3380]!	; 0xd34

00011354 <ferror_unlocked@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #225280	; 0x37000
   1135c:	ldr	pc, [ip, #3372]!	; 0xd2c

00011360 <mbrtowc@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #225280	; 0x37000
   11368:	ldr	pc, [ip, #3364]!	; 0xd24

0001136c <error@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #225280	; 0x37000
   11374:	ldr	pc, [ip, #3356]!	; 0xd1c

00011378 <malloc@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #225280	; 0x37000
   11380:	ldr	pc, [ip, #3348]!	; 0xd14

00011384 <__libc_start_main@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #225280	; 0x37000
   1138c:	ldr	pc, [ip, #3340]!	; 0xd0c

00011390 <__freading@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #225280	; 0x37000
   11398:	ldr	pc, [ip, #3332]!	; 0xd04

0001139c <__gmon_start__@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #225280	; 0x37000
   113a4:	ldr	pc, [ip, #3324]!	; 0xcfc

000113a8 <getopt_long@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #225280	; 0x37000
   113b0:	ldr	pc, [ip, #3316]!	; 0xcf4

000113b4 <__ctype_b_loc@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #225280	; 0x37000
   113bc:	ldr	pc, [ip, #3308]!	; 0xcec

000113c0 <exit@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #225280	; 0x37000
   113c8:	ldr	pc, [ip, #3300]!	; 0xce4

000113cc <gettext@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #225280	; 0x37000
   113d4:	ldr	pc, [ip, #3292]!	; 0xcdc

000113d8 <strlen@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #225280	; 0x37000
   113e0:	ldr	pc, [ip, #3284]!	; 0xcd4

000113e4 <strchr@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #225280	; 0x37000
   113ec:	ldr	pc, [ip, #3276]!	; 0xccc

000113f0 <fprintf@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #225280	; 0x37000
   113f8:	ldr	pc, [ip, #3268]!	; 0xcc4

000113fc <__errno_location@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #225280	; 0x37000
   11404:	ldr	pc, [ip, #3260]!	; 0xcbc

00011408 <iswalnum@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #225280	; 0x37000
   11410:	ldr	pc, [ip, #3252]!	; 0xcb4

00011414 <__cxa_atexit@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #225280	; 0x37000
   1141c:	ldr	pc, [ip, #3244]!	; 0xcac

00011420 <memset@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #225280	; 0x37000
   11428:	ldr	pc, [ip, #3236]!	; 0xca4

0001142c <btowc@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #225280	; 0x37000
   11434:	ldr	pc, [ip, #3228]!	; 0xc9c

00011438 <fileno@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #225280	; 0x37000
   11440:	ldr	pc, [ip, #3220]!	; 0xc94

00011444 <strtoimax@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #225280	; 0x37000
   1144c:	ldr	pc, [ip, #3212]!	; 0xc8c

00011450 <fclose@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #225280	; 0x37000
   11458:	ldr	pc, [ip, #3204]!	; 0xc84

0001145c <fseeko64@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #225280	; 0x37000
   11464:	ldr	pc, [ip, #3196]!	; 0xc7c

00011468 <setlocale@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #225280	; 0x37000
   11470:	ldr	pc, [ip, #3188]!	; 0xc74

00011474 <toupper@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #225280	; 0x37000
   1147c:	ldr	pc, [ip, #3180]!	; 0xc6c

00011480 <strrchr@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #225280	; 0x37000
   11488:	ldr	pc, [ip, #3172]!	; 0xc64

0001148c <nl_langinfo@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #225280	; 0x37000
   11494:	ldr	pc, [ip, #3164]!	; 0xc5c

00011498 <clearerr_unlocked@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #225280	; 0x37000
   114a0:	ldr	pc, [ip, #3156]!	; 0xc54

000114a4 <fopen64@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #225280	; 0x37000
   114ac:	ldr	pc, [ip, #3148]!	; 0xc4c

000114b0 <bindtextdomain@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #225280	; 0x37000
   114b8:	ldr	pc, [ip, #3140]!	; 0xc44

000114bc <towupper@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #225280	; 0x37000
   114c4:	ldr	pc, [ip, #3132]!	; 0xc3c

000114c8 <fputs@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #225280	; 0x37000
   114d0:	ldr	pc, [ip, #3124]!	; 0xc34

000114d4 <strncmp@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #225280	; 0x37000
   114dc:	ldr	pc, [ip, #3116]!	; 0xc2c

000114e0 <abort@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #225280	; 0x37000
   114e8:	ldr	pc, [ip, #3108]!	; 0xc24

000114ec <feof_unlocked@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #225280	; 0x37000
   114f4:	ldr	pc, [ip, #3100]!	; 0xc1c

000114f8 <putchar_unlocked@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #225280	; 0x37000
   11500:	ldr	pc, [ip, #3092]!	; 0xc14

00011504 <__assert_fail@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #225280	; 0x37000
   1150c:	ldr	pc, [ip, #3084]!	; 0xc0c

Disassembly of section .text:

00011510 <.text>:
   11510:	mov	fp, #0
   11514:	mov	lr, #0
   11518:	pop	{r1}		; (ldr r1, [sp], #4)
   1151c:	mov	r2, sp
   11520:	push	{r2}		; (str r2, [sp, #-4]!)
   11524:	push	{r0}		; (str r0, [sp, #-4]!)
   11528:	ldr	ip, [pc, #16]	; 11540 <__assert_fail@plt+0x3c>
   1152c:	push	{ip}		; (str ip, [sp, #-4]!)
   11530:	ldr	r0, [pc, #12]	; 11544 <__assert_fail@plt+0x40>
   11534:	ldr	r3, [pc, #12]	; 11548 <__assert_fail@plt+0x44>
   11538:	bl	11384 <__libc_start_main@plt>
   1153c:	bl	114e0 <abort@plt>
   11540:	andeq	r6, r3, r0, ror #26
   11544:	andeq	r1, r1, r0, ror #19
   11548:	andeq	r6, r3, r0, lsl #26
   1154c:	ldr	r3, [pc, #20]	; 11568 <__assert_fail@plt+0x64>
   11550:	ldr	r2, [pc, #20]	; 1156c <__assert_fail@plt+0x68>
   11554:	add	r3, pc, r3
   11558:	ldr	r2, [r3, r2]
   1155c:	cmp	r2, #0
   11560:	bxeq	lr
   11564:	b	1139c <__gmon_start__@plt>
   11568:	andeq	r7, r3, r4, lsr #21
   1156c:	andeq	r0, r0, ip, lsl r1
   11570:	ldr	r0, [pc, #24]	; 11590 <__assert_fail@plt+0x8c>
   11574:	ldr	r3, [pc, #24]	; 11594 <__assert_fail@plt+0x90>
   11578:	cmp	r3, r0
   1157c:	bxeq	lr
   11580:	ldr	r3, [pc, #16]	; 11598 <__assert_fail@plt+0x94>
   11584:	cmp	r3, #0
   11588:	bxeq	lr
   1158c:	bx	r3
   11590:			; <UNDEFINED> instruction: 0x000491b4
   11594:			; <UNDEFINED> instruction: 0x000491b4
   11598:	andeq	r0, r0, r0
   1159c:	ldr	r0, [pc, #36]	; 115c8 <__assert_fail@plt+0xc4>
   115a0:	ldr	r1, [pc, #36]	; 115cc <__assert_fail@plt+0xc8>
   115a4:	sub	r1, r1, r0
   115a8:	asr	r1, r1, #2
   115ac:	add	r1, r1, r1, lsr #31
   115b0:	asrs	r1, r1, #1
   115b4:	bxeq	lr
   115b8:	ldr	r3, [pc, #16]	; 115d0 <__assert_fail@plt+0xcc>
   115bc:	cmp	r3, #0
   115c0:	bxeq	lr
   115c4:	bx	r3
   115c8:			; <UNDEFINED> instruction: 0x000491b4
   115cc:			; <UNDEFINED> instruction: 0x000491b4
   115d0:	andeq	r0, r0, r0
   115d4:	push	{r4, lr}
   115d8:	ldr	r4, [pc, #24]	; 115f8 <__assert_fail@plt+0xf4>
   115dc:	ldrb	r3, [r4]
   115e0:	cmp	r3, #0
   115e4:	popne	{r4, pc}
   115e8:	bl	11570 <__assert_fail@plt+0x6c>
   115ec:	mov	r3, #1
   115f0:	strb	r3, [r4]
   115f4:	pop	{r4, pc}
   115f8:	ldrdeq	r9, [r4], -ip
   115fc:	b	1159c <__assert_fail@plt+0x98>
   11600:	push	{fp, lr}
   11604:	mov	fp, sp
   11608:	sub	sp, sp, #56	; 0x38
   1160c:	str	r0, [fp, #-4]
   11610:	ldr	r0, [fp, #-4]
   11614:	cmp	r0, #0
   11618:	beq	11664 <__assert_fail@plt+0x160>
   1161c:	b	11620 <__assert_fail@plt+0x11c>
   11620:	movw	r0, #37320	; 0x91c8
   11624:	movt	r0, #4
   11628:	ldr	r0, [r0]
   1162c:	movw	r1, #28040	; 0x6d88
   11630:	movt	r1, #3
   11634:	str	r0, [fp, #-8]
   11638:	mov	r0, r1
   1163c:	bl	113cc <gettext@plt>
   11640:	movw	r1, #38296	; 0x9598
   11644:	movt	r1, #4
   11648:	ldr	r2, [r1]
   1164c:	ldr	r1, [fp, #-8]
   11650:	str	r0, [fp, #-12]
   11654:	mov	r0, r1
   11658:	ldr	r1, [fp, #-12]
   1165c:	bl	113f0 <fprintf@plt>
   11660:	b	117dc <__assert_fail@plt+0x2d8>
   11664:	movw	r0, #28079	; 0x6daf
   11668:	movt	r0, #3
   1166c:	bl	113cc <gettext@plt>
   11670:	movw	r1, #38296	; 0x9598
   11674:	movt	r1, #4
   11678:	ldr	r1, [r1]
   1167c:	bl	1124c <printf@plt>
   11680:	movw	r1, #28112	; 0x6dd0
   11684:	movt	r1, #3
   11688:	str	r0, [fp, #-16]
   1168c:	mov	r0, r1
   11690:	bl	113cc <gettext@plt>
   11694:	movw	r1, #37332	; 0x91d4
   11698:	movt	r1, #4
   1169c:	ldr	r1, [r1]
   116a0:	bl	111f8 <fputs_unlocked@plt>
   116a4:	str	r0, [fp, #-20]	; 0xffffffec
   116a8:	bl	117e4 <__assert_fail@plt+0x2e0>
   116ac:	bl	1180c <__assert_fail@plt+0x308>
   116b0:	movw	r0, #28174	; 0x6e0e
   116b4:	movt	r0, #3
   116b8:	bl	113cc <gettext@plt>
   116bc:	movw	r1, #37332	; 0x91d4
   116c0:	movt	r1, #4
   116c4:	ldr	r1, [r1]
   116c8:	bl	111f8 <fputs_unlocked@plt>
   116cc:	movw	r1, #28384	; 0x6ee0
   116d0:	movt	r1, #3
   116d4:	str	r0, [fp, #-24]	; 0xffffffe8
   116d8:	mov	r0, r1
   116dc:	bl	113cc <gettext@plt>
   116e0:	movw	r1, #37332	; 0x91d4
   116e4:	movt	r1, #4
   116e8:	ldr	r1, [r1]
   116ec:	bl	111f8 <fputs_unlocked@plt>
   116f0:	movw	r1, #28827	; 0x709b
   116f4:	movt	r1, #3
   116f8:	str	r0, [sp, #28]
   116fc:	mov	r0, r1
   11700:	bl	113cc <gettext@plt>
   11704:	movw	r1, #37332	; 0x91d4
   11708:	movt	r1, #4
   1170c:	ldr	r1, [r1]
   11710:	bl	111f8 <fputs_unlocked@plt>
   11714:	movw	r1, #28970	; 0x712a
   11718:	movt	r1, #3
   1171c:	str	r0, [sp, #24]
   11720:	mov	r0, r1
   11724:	bl	113cc <gettext@plt>
   11728:	movw	r1, #37332	; 0x91d4
   1172c:	movt	r1, #4
   11730:	ldr	r1, [r1]
   11734:	bl	111f8 <fputs_unlocked@plt>
   11738:	movw	r1, #29015	; 0x7157
   1173c:	movt	r1, #3
   11740:	str	r0, [sp, #20]
   11744:	mov	r0, r1
   11748:	bl	113cc <gettext@plt>
   1174c:	movw	r1, #37332	; 0x91d4
   11750:	movt	r1, #4
   11754:	ldr	r1, [r1]
   11758:	bl	111f8 <fputs_unlocked@plt>
   1175c:	movw	r1, #29069	; 0x718d
   11760:	movt	r1, #3
   11764:	str	r0, [sp, #16]
   11768:	mov	r0, r1
   1176c:	bl	113cc <gettext@plt>
   11770:	movw	r1, #37332	; 0x91d4
   11774:	movt	r1, #4
   11778:	ldr	r1, [r1]
   1177c:	bl	111f8 <fputs_unlocked@plt>
   11780:	movw	r1, #29392	; 0x72d0
   11784:	movt	r1, #3
   11788:	str	r0, [sp, #12]
   1178c:	mov	r0, r1
   11790:	bl	113cc <gettext@plt>
   11794:	movw	r1, #37332	; 0x91d4
   11798:	movt	r1, #4
   1179c:	ldr	r1, [r1]
   117a0:	bl	111f8 <fputs_unlocked@plt>
   117a4:	movw	r1, #29594	; 0x739a
   117a8:	movt	r1, #3
   117ac:	str	r0, [sp, #8]
   117b0:	mov	r0, r1
   117b4:	bl	113cc <gettext@plt>
   117b8:	movw	r1, #37332	; 0x91d4
   117bc:	movt	r1, #4
   117c0:	ldr	r1, [r1]
   117c4:	bl	111f8 <fputs_unlocked@plt>
   117c8:	movw	r1, #29741	; 0x742d
   117cc:	movt	r1, #3
   117d0:	str	r0, [sp, #4]
   117d4:	mov	r0, r1
   117d8:	bl	11834 <__assert_fail@plt+0x330>
   117dc:	ldr	r0, [fp, #-4]
   117e0:	bl	113c0 <exit@plt>
   117e4:	push	{fp, lr}
   117e8:	mov	fp, sp
   117ec:	movw	r0, #30106	; 0x759a
   117f0:	movt	r0, #3
   117f4:	bl	113cc <gettext@plt>
   117f8:	movw	r1, #37332	; 0x91d4
   117fc:	movt	r1, #4
   11800:	ldr	r1, [r1]
   11804:	bl	111f8 <fputs_unlocked@plt>
   11808:	pop	{fp, pc}
   1180c:	push	{fp, lr}
   11810:	mov	fp, sp
   11814:	movw	r0, #30162	; 0x75d2
   11818:	movt	r0, #3
   1181c:	bl	113cc <gettext@plt>
   11820:	movw	r1, #37332	; 0x91d4
   11824:	movt	r1, #4
   11828:	ldr	r1, [r1]
   1182c:	bl	111f8 <fputs_unlocked@plt>
   11830:	pop	{fp, pc}
   11834:	push	{fp, lr}
   11838:	mov	fp, sp
   1183c:	sub	sp, sp, #88	; 0x58
   11840:	add	r1, sp, #28
   11844:	movw	r2, #31048	; 0x7948
   11848:	movt	r2, #3
   1184c:	str	r0, [fp, #-4]
   11850:	mov	r0, r1
   11854:	str	r1, [sp, #12]
   11858:	mov	r1, r2
   1185c:	movw	r2, #56	; 0x38
   11860:	bl	112a0 <memcpy@plt>
   11864:	ldr	r0, [fp, #-4]
   11868:	str	r0, [sp, #24]
   1186c:	ldr	r0, [sp, #12]
   11870:	str	r0, [sp, #20]
   11874:	ldr	r0, [sp, #20]
   11878:	ldr	r0, [r0]
   1187c:	movw	r1, #0
   11880:	cmp	r0, r1
   11884:	movw	r0, #0
   11888:	str	r0, [sp, #8]
   1188c:	beq	118b8 <__assert_fail@plt+0x3b4>
   11890:	ldr	r0, [fp, #-4]
   11894:	ldr	r1, [sp, #20]
   11898:	ldr	r1, [r1]
   1189c:	bl	11234 <strcmp@plt>
   118a0:	cmp	r0, #0
   118a4:	movw	r0, #0
   118a8:	moveq	r0, #1
   118ac:	mvn	r1, #0
   118b0:	eor	r0, r0, r1
   118b4:	str	r0, [sp, #8]
   118b8:	ldr	r0, [sp, #8]
   118bc:	tst	r0, #1
   118c0:	beq	118d4 <__assert_fail@plt+0x3d0>
   118c4:	ldr	r0, [sp, #20]
   118c8:	add	r0, r0, #8
   118cc:	str	r0, [sp, #20]
   118d0:	b	11874 <__assert_fail@plt+0x370>
   118d4:	ldr	r0, [sp, #20]
   118d8:	ldr	r0, [r0, #4]
   118dc:	movw	r1, #0
   118e0:	cmp	r0, r1
   118e4:	beq	118f4 <__assert_fail@plt+0x3f0>
   118e8:	ldr	r0, [sp, #20]
   118ec:	ldr	r0, [r0, #4]
   118f0:	str	r0, [sp, #24]
   118f4:	movw	r0, #30332	; 0x767c
   118f8:	movt	r0, #3
   118fc:	bl	113cc <gettext@plt>
   11900:	movw	r1, #30062	; 0x756e
   11904:	movt	r1, #3
   11908:	movw	r2, #30355	; 0x7693
   1190c:	movt	r2, #3
   11910:	bl	1124c <printf@plt>
   11914:	movw	r1, #5
   11918:	str	r0, [sp, #4]
   1191c:	mov	r0, r1
   11920:	movw	r1, #0
   11924:	bl	11468 <setlocale@plt>
   11928:	str	r0, [sp, #16]
   1192c:	ldr	r0, [sp, #16]
   11930:	movw	r1, #0
   11934:	cmp	r0, r1
   11938:	beq	11974 <__assert_fail@plt+0x470>
   1193c:	ldr	r0, [sp, #16]
   11940:	movw	r1, #30395	; 0x76bb
   11944:	movt	r1, #3
   11948:	movw	r2, #3
   1194c:	bl	114d4 <strncmp@plt>
   11950:	cmp	r0, #0
   11954:	beq	11974 <__assert_fail@plt+0x470>
   11958:	movw	r0, #30399	; 0x76bf
   1195c:	movt	r0, #3
   11960:	bl	113cc <gettext@plt>
   11964:	movw	r1, #37332	; 0x91d4
   11968:	movt	r1, #4
   1196c:	ldr	r1, [r1]
   11970:	bl	111f8 <fputs_unlocked@plt>
   11974:	movw	r0, #30470	; 0x7706
   11978:	movt	r0, #3
   1197c:	bl	113cc <gettext@plt>
   11980:	ldr	r2, [fp, #-4]
   11984:	movw	r1, #30355	; 0x7693
   11988:	movt	r1, #3
   1198c:	bl	1124c <printf@plt>
   11990:	movw	r1, #30497	; 0x7721
   11994:	movt	r1, #3
   11998:	str	r0, [sp]
   1199c:	mov	r0, r1
   119a0:	bl	113cc <gettext@plt>
   119a4:	ldr	r1, [sp, #24]
   119a8:	ldr	r2, [sp, #24]
   119ac:	ldr	r3, [fp, #-4]
   119b0:	cmp	r2, r3
   119b4:	movw	r2, #0
   119b8:	moveq	r2, #1
   119bc:	tst	r2, #1
   119c0:	movw	r2, #30738	; 0x7812
   119c4:	movt	r2, #3
   119c8:	movw	r3, #30265	; 0x7639
   119cc:	movt	r3, #3
   119d0:	movne	r2, r3
   119d4:	bl	1124c <printf@plt>
   119d8:	mov	sp, fp
   119dc:	pop	{fp, pc}
   119e0:	push	{fp, lr}
   119e4:	mov	fp, sp
   119e8:	sub	sp, sp, #152	; 0x98
   119ec:	movw	r2, #0
   119f0:	str	r2, [fp, #-4]
   119f4:	str	r0, [fp, #-8]
   119f8:	str	r1, [fp, #-12]
   119fc:	movw	r0, #1
   11a00:	strb	r0, [fp, #-21]	; 0xffffffeb
   11a04:	ldr	r0, [fp, #-12]
   11a08:	ldr	r0, [r0]
   11a0c:	bl	135b0 <__assert_fail@plt+0x20ac>
   11a10:	movw	r0, #6
   11a14:	movw	r1, #30738	; 0x7812
   11a18:	movt	r1, #3
   11a1c:	bl	11468 <setlocale@plt>
   11a20:	movw	r1, #30066	; 0x7572
   11a24:	movt	r1, #3
   11a28:	str	r0, [fp, #-32]	; 0xffffffe0
   11a2c:	mov	r0, r1
   11a30:	movw	r1, #29744	; 0x7430
   11a34:	movt	r1, #3
   11a38:	bl	114b0 <bindtextdomain@plt>
   11a3c:	movw	r1, #30066	; 0x7572
   11a40:	movt	r1, #3
   11a44:	str	r0, [fp, #-36]	; 0xffffffdc
   11a48:	mov	r0, r1
   11a4c:	bl	11318 <textdomain@plt>
   11a50:	movw	r1, #12072	; 0x2f28
   11a54:	movt	r1, #1
   11a58:	str	r0, [fp, #-40]	; 0xffffffd8
   11a5c:	mov	r0, r1
   11a60:	bl	36d64 <__assert_fail@plt+0x25860>
   11a64:	movw	r1, #37344	; 0x91e0
   11a68:	movt	r1, #4
   11a6c:	movw	r2, #0
   11a70:	strb	r2, [r1]
   11a74:	ldr	r0, [fp, #-8]
   11a78:	ldr	r1, [fp, #-12]
   11a7c:	movw	r2, #29768	; 0x7448
   11a80:	movt	r2, #3
   11a84:	movw	r3, #30796	; 0x784c
   11a88:	movt	r3, #3
   11a8c:	movw	ip, #0
   11a90:	str	ip, [sp]
   11a94:	bl	113a8 <getopt_long@plt>
   11a98:	str	r0, [fp, #-16]
   11a9c:	cmn	r0, #1
   11aa0:	beq	12200 <__assert_fail@plt+0xcfc>
   11aa4:	ldr	r0, [fp, #-16]
   11aa8:	add	r0, r0, #3
   11aac:	cmp	r0, #122	; 0x7a
   11ab0:	str	r0, [fp, #-44]	; 0xffffffd4
   11ab4:	bhi	121f4 <__assert_fail@plt+0xcf0>
   11ab8:	add	r0, pc, #8
   11abc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11ac0:	ldr	r0, [r0, r1, lsl #2]
   11ac4:	mov	pc, r0
   11ac8:	andeq	r2, r1, r0, lsr #3
   11acc:	muleq	r1, r8, r1
   11ad0:	strdeq	r2, [r1], -r4
   11ad4:	strdeq	r2, [r1], -r4
   11ad8:	strdeq	r2, [r1], -r4
   11adc:	strdeq	r2, [r1], -r4
   11ae0:	strdeq	r2, [r1], -r4
   11ae4:	strdeq	r2, [r1], -r4
   11ae8:	strdeq	r2, [r1], -r4
   11aec:	strdeq	r2, [r1], -r4
   11af0:	strdeq	r2, [r1], -r4
   11af4:	strdeq	r2, [r1], -r4
   11af8:	strdeq	r2, [r1], -r4
   11afc:	strdeq	r2, [r1], -r4
   11b00:	strdeq	r2, [r1], -r4
   11b04:	strdeq	r2, [r1], -r4
   11b08:	strdeq	r2, [r1], -r4
   11b0c:	strdeq	r2, [r1], -r4
   11b10:	strdeq	r2, [r1], -r4
   11b14:	strdeq	r2, [r1], -r4
   11b18:	strdeq	r2, [r1], -r4
   11b1c:	strdeq	r2, [r1], -r4
   11b20:	strdeq	r2, [r1], -r4
   11b24:	strdeq	r2, [r1], -r4
   11b28:	strdeq	r2, [r1], -r4
   11b2c:	strdeq	r2, [r1], -r4
   11b30:	strdeq	r2, [r1], -r4
   11b34:	strdeq	r2, [r1], -r4
   11b38:	strdeq	r2, [r1], -r4
   11b3c:	strdeq	r2, [r1], -r4
   11b40:	strdeq	r2, [r1], -r4
   11b44:	strdeq	r2, [r1], -r4
   11b48:	strdeq	r2, [r1], -r4
   11b4c:	strdeq	r2, [r1], -r4
   11b50:	strdeq	r2, [r1], -r4
   11b54:	strdeq	r2, [r1], -r4
   11b58:	strdeq	r2, [r1], -r4
   11b5c:	strdeq	r2, [r1], -r4
   11b60:	strdeq	r2, [r1], -r4
   11b64:	strdeq	r2, [r1], -r4
   11b68:	strdeq	r2, [r1], -r4
   11b6c:	strdeq	r2, [r1], -r4
   11b70:	strdeq	r2, [r1], -r4
   11b74:	strdeq	r2, [r1], -r4
   11b78:	strdeq	r2, [r1], -r4
   11b7c:	strdeq	r2, [r1], -r4
   11b80:	strdeq	r2, [r1], -r4
   11b84:	strdeq	r2, [r1], -r4
   11b88:	strdeq	r2, [r1], -r4
   11b8c:	strdeq	r2, [r1], -r4
   11b90:	strdeq	r2, [r1], -r4
   11b94:	strdeq	r2, [r1], -r4
   11b98:	strdeq	r2, [r1], -r4
   11b9c:	strdeq	r2, [r1], -r4
   11ba0:	strdeq	r2, [r1], -r4
   11ba4:	strdeq	r2, [r1], -r4
   11ba8:	strdeq	r2, [r1], -r4
   11bac:	strdeq	r2, [r1], -r4
   11bb0:	strdeq	r2, [r1], -r4
   11bb4:	strdeq	r2, [r1], -r4
   11bb8:	strdeq	r2, [r1], -r4
   11bbc:	strdeq	r2, [r1], -r4
   11bc0:	strdeq	r2, [r1], -r4
   11bc4:	strdeq	r2, [r1], -r4
   11bc8:	strdeq	r2, [r1], -r4
   11bcc:	strdeq	r2, [r1], -r4
   11bd0:	strdeq	r2, [r1], -r4
   11bd4:	strdeq	r2, [r1], -r4
   11bd8:	strdeq	r2, [r1], -r4
   11bdc:	strdeq	r2, [r1], -r4
   11be0:	strdeq	r2, [r1], -r4
   11be4:	strdeq	r2, [r1], -r4
   11be8:	strdeq	r2, [r1], -r4
   11bec:	strdeq	r2, [r1], -r4
   11bf0:	strdeq	r2, [r1], -r4
   11bf4:	strdeq	r2, [r1], -r4
   11bf8:	strdeq	r2, [r1], -r4
   11bfc:	strdeq	r2, [r1], -r4
   11c00:	strdeq	r2, [r1], -r4
   11c04:	strdeq	r2, [r1], -r4
   11c08:	strdeq	r2, [r1], -r4
   11c0c:	strdeq	r2, [r1], -r4
   11c10:	strdeq	r2, [r1], -r4
   11c14:	strdeq	r2, [r1], -r4
   11c18:	strdeq	r2, [r1], -r4
   11c1c:	strdeq	r2, [r1], -r4
   11c20:	strdeq	r2, [r1], -r4
   11c24:	strdeq	r2, [r1], -r4
   11c28:	strdeq	r2, [r1], -r4
   11c2c:	strdeq	r2, [r1], -r4
   11c30:	strdeq	r2, [r1], -r4
   11c34:	strdeq	r2, [r1], -r4
   11c38:	strdeq	r2, [r1], -r4
   11c3c:	strdeq	r2, [r1], -r4
   11c40:	strdeq	r2, [r1], -r4
   11c44:	strdeq	r2, [r1], -r4
   11c48:	strdeq	r2, [r1], -r4
   11c4c:	strdeq	r2, [r1], -r4
   11c50:	strdeq	r2, [r1], -r4
   11c54:	strdeq	r2, [r1], -r4
   11c58:	strdeq	r2, [r1], -r4
   11c5c:	andeq	r1, r1, r0, lsr #26
   11c60:	strdeq	r2, [r1], -r4
   11c64:	strdeq	r2, [r1], -r8
   11c68:	strdeq	r2, [r1], -r4
   11c6c:	andeq	r1, r1, ip, lsl #27
   11c70:	strdeq	r2, [r1], -r4
   11c74:			; <UNDEFINED> instruction: 0x00011cb4
   11c78:	andeq	r1, r1, r4, ror #28
   11c7c:	strdeq	r2, [r1], -r4
   11c80:	strdeq	r2, [r1], -r4
   11c84:	andeq	r1, r1, r4, ror #29
   11c88:	strdeq	r2, [r1], -r4
   11c8c:	andeq	r2, r1, r0
   11c90:	strdeq	r2, [r1], -r4
   11c94:	ldrdeq	r1, [r1], -r0
   11c98:	strdeq	r2, [r1], -r4
   11c9c:	strdeq	r2, [r1], -r4
   11ca0:	andeq	r1, r1, r8, ror #30
   11ca4:	strdeq	r2, [r1], -r4
   11ca8:	strdeq	r2, [r1], -r4
   11cac:	strdeq	r1, [r1], -r8
   11cb0:	andeq	r1, r1, r4, lsl #31
   11cb4:	movw	r0, #37160	; 0x9128
   11cb8:	movt	r0, #4
   11cbc:	movw	r1, #37348	; 0x91e4
   11cc0:	movt	r1, #4
   11cc4:	movw	r2, #37380	; 0x9204
   11cc8:	movt	r2, #4
   11ccc:	bl	124d0 <__assert_fail@plt+0xfcc>
   11cd0:	tst	r0, #1
   11cd4:	bne	11d1c <__assert_fail@plt+0x818>
   11cd8:	movw	r0, #29790	; 0x745e
   11cdc:	movt	r0, #3
   11ce0:	bl	113cc <gettext@plt>
   11ce4:	movw	r1, #37336	; 0x91d8
   11ce8:	movt	r1, #4
   11cec:	ldr	r1, [r1]
   11cf0:	str	r0, [fp, #-48]	; 0xffffffd0
   11cf4:	mov	r0, r1
   11cf8:	bl	15c0c <__assert_fail@plt+0x4708>
   11cfc:	movw	r1, #0
   11d00:	str	r0, [fp, #-52]	; 0xffffffcc
   11d04:	mov	r0, r1
   11d08:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11d0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11d10:	bl	1136c <error@plt>
   11d14:	movw	r0, #0
   11d18:	strb	r0, [fp, #-21]	; 0xffffffeb
   11d1c:	b	121fc <__assert_fail@plt+0xcf8>
   11d20:	movw	r0, #37164	; 0x912c
   11d24:	movt	r0, #4
   11d28:	movw	r1, #37636	; 0x9304
   11d2c:	movt	r1, #4
   11d30:	movw	r2, #37668	; 0x9324
   11d34:	movt	r2, #4
   11d38:	bl	124d0 <__assert_fail@plt+0xfcc>
   11d3c:	tst	r0, #1
   11d40:	bne	11d88 <__assert_fail@plt+0x884>
   11d44:	movw	r0, #29825	; 0x7481
   11d48:	movt	r0, #3
   11d4c:	bl	113cc <gettext@plt>
   11d50:	movw	r1, #37336	; 0x91d8
   11d54:	movt	r1, #4
   11d58:	ldr	r1, [r1]
   11d5c:	str	r0, [fp, #-56]	; 0xffffffc8
   11d60:	mov	r0, r1
   11d64:	bl	15c0c <__assert_fail@plt+0x4708>
   11d68:	movw	r1, #0
   11d6c:	str	r0, [fp, #-60]	; 0xffffffc4
   11d70:	mov	r0, r1
   11d74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11d78:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d7c:	bl	1136c <error@plt>
   11d80:	movw	r0, #0
   11d84:	strb	r0, [fp, #-21]	; 0xffffffeb
   11d88:	b	121fc <__assert_fail@plt+0xcf8>
   11d8c:	movw	r0, #37168	; 0x9130
   11d90:	movt	r0, #4
   11d94:	movw	r1, #37924	; 0x9424
   11d98:	movt	r1, #4
   11d9c:	movw	r2, #37956	; 0x9444
   11da0:	movt	r2, #4
   11da4:	bl	124d0 <__assert_fail@plt+0xfcc>
   11da8:	tst	r0, #1
   11dac:	bne	11df4 <__assert_fail@plt+0x8f0>
   11db0:	movw	r0, #29858	; 0x74a2
   11db4:	movt	r0, #3
   11db8:	bl	113cc <gettext@plt>
   11dbc:	movw	r1, #37336	; 0x91d8
   11dc0:	movt	r1, #4
   11dc4:	ldr	r1, [r1]
   11dc8:	str	r0, [fp, #-64]	; 0xffffffc0
   11dcc:	mov	r0, r1
   11dd0:	bl	15c0c <__assert_fail@plt+0x4708>
   11dd4:	movw	r1, #0
   11dd8:	str	r0, [fp, #-68]	; 0xffffffbc
   11ddc:	mov	r0, r1
   11de0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11de4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11de8:	bl	1136c <error@plt>
   11dec:	movw	r0, #0
   11df0:	strb	r0, [fp, #-21]	; 0xffffffeb
   11df4:	b	121fc <__assert_fail@plt+0xcf8>
   11df8:	movw	r0, #37336	; 0x91d8
   11dfc:	movt	r0, #4
   11e00:	ldr	r0, [r0]
   11e04:	movw	r1, #29893	; 0x74c5
   11e08:	movt	r1, #3
   11e0c:	str	r0, [fp, #-72]	; 0xffffffb8
   11e10:	mov	r0, r1
   11e14:	bl	113cc <gettext@plt>
   11e18:	mov	r1, sp
   11e1c:	mov	r2, #0
   11e20:	str	r2, [r1, #16]
   11e24:	str	r0, [r1, #12]
   11e28:	movw	r0, #30738	; 0x7812
   11e2c:	movt	r0, #3
   11e30:	str	r0, [r1, #8]
   11e34:	mvn	r0, #-2147483648	; 0x80000000
   11e38:	str	r0, [r1, #4]
   11e3c:	mvn	r0, #0
   11e40:	str	r0, [r1]
   11e44:	mov	r3, #-2147483648	; 0x80000000
   11e48:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11e4c:	bl	3141c <__assert_fail@plt+0x1ff18>
   11e50:	movw	r2, #37176	; 0x9138
   11e54:	movt	r2, #4
   11e58:	str	r1, [r2, #4]
   11e5c:	str	r0, [r2]
   11e60:	b	121fc <__assert_fail@plt+0xcf8>
   11e64:	movw	r0, #37336	; 0x91d8
   11e68:	movt	r0, #4
   11e6c:	ldr	r0, [r0]
   11e70:	movw	r1, #29922	; 0x74e2
   11e74:	movt	r1, #3
   11e78:	str	r0, [sp, #76]	; 0x4c
   11e7c:	mov	r0, r1
   11e80:	bl	113cc <gettext@plt>
   11e84:	mov	r1, sp
   11e88:	mov	r2, #0
   11e8c:	str	r2, [r1, #16]
   11e90:	str	r0, [r1, #12]
   11e94:	movw	r0, #30738	; 0x7812
   11e98:	movt	r0, #3
   11e9c:	str	r0, [r1, #8]
   11ea0:	mvn	r0, #-2147483648	; 0x80000000
   11ea4:	str	r0, [r1, #4]
   11ea8:	mvn	r0, #0
   11eac:	str	r0, [r1]
   11eb0:	mov	r3, #-2147483648	; 0x80000000
   11eb4:	ldr	r0, [sp, #76]	; 0x4c
   11eb8:	bl	3141c <__assert_fail@plt+0x1ff18>
   11ebc:	movw	r2, #37184	; 0x9140
   11ec0:	movt	r2, #4
   11ec4:	str	r1, [r2, #4]
   11ec8:	str	r0, [r2]
   11ecc:	b	121fc <__assert_fail@plt+0xcf8>
   11ed0:	movw	r0, #37192	; 0x9148
   11ed4:	movt	r0, #4
   11ed8:	movw	r1, #0
   11edc:	strb	r1, [r0]
   11ee0:	b	121fc <__assert_fail@plt+0xcf8>
   11ee4:	movw	r0, #37336	; 0x91d8
   11ee8:	movt	r0, #4
   11eec:	ldr	r0, [r0]
   11ef0:	movw	r1, #29952	; 0x7500
   11ef4:	movt	r1, #3
   11ef8:	str	r0, [sp, #72]	; 0x48
   11efc:	mov	r0, r1
   11f00:	bl	113cc <gettext@plt>
   11f04:	mov	r1, sp
   11f08:	mov	r2, #0
   11f0c:	str	r2, [r1, #16]
   11f10:	str	r0, [r1, #12]
   11f14:	movw	r0, #30738	; 0x7812
   11f18:	movt	r0, #3
   11f1c:	str	r0, [r1, #8]
   11f20:	mvn	r0, #-2147483648	; 0x80000000
   11f24:	str	r0, [r1, #4]
   11f28:	mvn	r0, #0
   11f2c:	str	r0, [r1]
   11f30:	mov	r0, #1
   11f34:	ldr	r1, [sp, #72]	; 0x48
   11f38:	str	r0, [sp, #68]	; 0x44
   11f3c:	mov	r0, r1
   11f40:	ldr	r3, [sp, #68]	; 0x44
   11f44:	str	r2, [sp, #64]	; 0x40
   11f48:	mov	r2, r3
   11f4c:	ldr	r3, [sp, #64]	; 0x40
   11f50:	bl	3141c <__assert_fail@plt+0x1ff18>
   11f54:	movw	r2, #37200	; 0x9150
   11f58:	movt	r2, #4
   11f5c:	str	r1, [r2, #4]
   11f60:	str	r0, [r2]
   11f64:	b	121fc <__assert_fail@plt+0xcf8>
   11f68:	movw	r0, #37336	; 0x91d8
   11f6c:	movt	r0, #4
   11f70:	ldr	r0, [r0]
   11f74:	movw	r1, #37208	; 0x9158
   11f78:	movt	r1, #4
   11f7c:	str	r0, [r1]
   11f80:	b	121fc <__assert_fail@plt+0xcf8>
   11f84:	movw	r0, #37336	; 0x91d8
   11f88:	movt	r0, #4
   11f8c:	ldr	r0, [r0]
   11f90:	movw	r1, #29987	; 0x7523
   11f94:	movt	r1, #3
   11f98:	str	r0, [sp, #60]	; 0x3c
   11f9c:	mov	r0, r1
   11fa0:	bl	113cc <gettext@plt>
   11fa4:	mov	r1, sp
   11fa8:	mov	r2, #0
   11fac:	str	r2, [r1, #16]
   11fb0:	str	r0, [r1, #12]
   11fb4:	movw	r0, #30738	; 0x7812
   11fb8:	movt	r0, #3
   11fbc:	str	r0, [r1, #8]
   11fc0:	str	r2, [r1, #4]
   11fc4:	mvn	r0, #-2147483648	; 0x80000000
   11fc8:	str	r0, [r1]
   11fcc:	mov	r0, #1
   11fd0:	ldr	r1, [sp, #60]	; 0x3c
   11fd4:	str	r0, [sp, #56]	; 0x38
   11fd8:	mov	r0, r1
   11fdc:	ldr	r3, [sp, #56]	; 0x38
   11fe0:	str	r2, [sp, #52]	; 0x34
   11fe4:	mov	r2, r3
   11fe8:	ldr	r3, [sp, #52]	; 0x34
   11fec:	bl	3141c <__assert_fail@plt+0x1ff18>
   11ff0:	movw	r2, #37212	; 0x915c
   11ff4:	movt	r2, #4
   11ff8:	str	r0, [r2]
   11ffc:	b	121fc <__assert_fail@plt+0xcf8>
   12000:	movw	r0, #37336	; 0x91d8
   12004:	movt	r0, #4
   12008:	ldr	r0, [r0]
   1200c:	movw	r1, #30019	; 0x7543
   12010:	movt	r1, #3
   12014:	bl	11234 <strcmp@plt>
   12018:	cmp	r0, #0
   1201c:	bne	12038 <__assert_fail@plt+0xb34>
   12020:	movw	r0, #37216	; 0x9160
   12024:	movt	r0, #4
   12028:	movw	r1, #31020	; 0x792c
   1202c:	movt	r1, #3
   12030:	str	r1, [r0]
   12034:	b	120f4 <__assert_fail@plt+0xbf0>
   12038:	movw	r0, #37336	; 0x91d8
   1203c:	movt	r0, #4
   12040:	ldr	r0, [r0]
   12044:	movw	r1, #30022	; 0x7546
   12048:	movt	r1, #3
   1204c:	bl	11234 <strcmp@plt>
   12050:	cmp	r0, #0
   12054:	bne	12070 <__assert_fail@plt+0xb6c>
   12058:	movw	r0, #37216	; 0x9160
   1205c:	movt	r0, #4
   12060:	movw	r1, #31029	; 0x7935
   12064:	movt	r1, #3
   12068:	str	r1, [r0]
   1206c:	b	120f0 <__assert_fail@plt+0xbec>
   12070:	movw	r0, #37336	; 0x91d8
   12074:	movt	r0, #4
   12078:	ldr	r0, [r0]
   1207c:	movw	r1, #30025	; 0x7549
   12080:	movt	r1, #3
   12084:	bl	11234 <strcmp@plt>
   12088:	cmp	r0, #0
   1208c:	bne	120a8 <__assert_fail@plt+0xba4>
   12090:	movw	r0, #37216	; 0x9160
   12094:	movt	r0, #4
   12098:	movw	r1, #31037	; 0x793d
   1209c:	movt	r1, #3
   120a0:	str	r1, [r0]
   120a4:	b	120ec <__assert_fail@plt+0xbe8>
   120a8:	movw	r0, #30028	; 0x754c
   120ac:	movt	r0, #3
   120b0:	bl	113cc <gettext@plt>
   120b4:	movw	r1, #37336	; 0x91d8
   120b8:	movt	r1, #4
   120bc:	ldr	r1, [r1]
   120c0:	str	r0, [sp, #48]	; 0x30
   120c4:	mov	r0, r1
   120c8:	bl	15c0c <__assert_fail@plt+0x4708>
   120cc:	movw	r1, #0
   120d0:	str	r0, [sp, #44]	; 0x2c
   120d4:	mov	r0, r1
   120d8:	ldr	r2, [sp, #48]	; 0x30
   120dc:	ldr	r3, [sp, #44]	; 0x2c
   120e0:	bl	1136c <error@plt>
   120e4:	movw	r0, #0
   120e8:	strb	r0, [fp, #-21]	; 0xffffffeb
   120ec:	b	120f0 <__assert_fail@plt+0xbec>
   120f0:	b	120f4 <__assert_fail@plt+0xbf0>
   120f4:	b	121fc <__assert_fail@plt+0xcf8>
   120f8:	movw	r0, #37336	; 0x91d8
   120fc:	movt	r0, #4
   12100:	ldr	r0, [r0]
   12104:	bl	113d8 <strlen@plt>
   12108:	str	r0, [fp, #-20]	; 0xffffffec
   1210c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12110:	cmp	r0, #1
   12114:	beq	12124 <__assert_fail@plt+0xc20>
   12118:	ldr	r0, [fp, #-20]	; 0xffffffec
   1211c:	cmp	r0, #2
   12120:	bne	1217c <__assert_fail@plt+0xc78>
   12124:	movw	r0, #37220	; 0x9164
   12128:	movt	r0, #4
   1212c:	ldr	r0, [r0]
   12130:	str	r0, [fp, #-28]	; 0xffffffe4
   12134:	movw	r0, #37336	; 0x91d8
   12138:	movt	r0, #4
   1213c:	ldr	r0, [r0]
   12140:	ldrsb	r0, [r0]
   12144:	cmp	r0, #0
   12148:	beq	12178 <__assert_fail@plt+0xc74>
   1214c:	movw	r0, #37336	; 0x91d8
   12150:	movt	r0, #4
   12154:	ldr	r1, [r0]
   12158:	add	r2, r1, #1
   1215c:	str	r2, [r0]
   12160:	ldrb	r0, [r1]
   12164:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12168:	add	r2, r1, #1
   1216c:	str	r2, [fp, #-28]	; 0xffffffe4
   12170:	strb	r0, [r1]
   12174:	b	12134 <__assert_fail@plt+0xc30>
   12178:	b	12194 <__assert_fail@plt+0xc90>
   1217c:	movw	r0, #37336	; 0x91d8
   12180:	movt	r0, #4
   12184:	ldr	r0, [r0]
   12188:	movw	r1, #37220	; 0x9164
   1218c:	movt	r1, #4
   12190:	str	r0, [r1]
   12194:	b	121fc <__assert_fail@plt+0xcf8>
   12198:	movw	r0, #0
   1219c:	bl	11600 <__assert_fail@plt+0xfc>
   121a0:	movw	r0, #37332	; 0x91d4
   121a4:	movt	r0, #4
   121a8:	ldr	r0, [r0]
   121ac:	movw	r1, #37228	; 0x916c
   121b0:	movt	r1, #4
   121b4:	ldr	r3, [r1]
   121b8:	movw	r1, #29741	; 0x742d
   121bc:	movt	r1, #3
   121c0:	movw	r2, #30062	; 0x756e
   121c4:	movt	r2, #3
   121c8:	movw	ip, #30076	; 0x757c
   121cc:	movt	ip, #3
   121d0:	str	ip, [sp]
   121d4:	movw	ip, #30090	; 0x758a
   121d8:	movt	ip, #3
   121dc:	str	ip, [sp, #4]
   121e0:	movw	ip, #0
   121e4:	str	ip, [sp, #8]
   121e8:	bl	2e2e8 <__assert_fail@plt+0x1cde4>
   121ec:	movw	r0, #0
   121f0:	bl	113c0 <exit@plt>
   121f4:	movw	r0, #0
   121f8:	strb	r0, [fp, #-21]	; 0xffffffeb
   121fc:	b	11a74 <__assert_fail@plt+0x570>
   12200:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   12204:	tst	r0, #1
   12208:	bne	12214 <__assert_fail@plt+0xd10>
   1220c:	movw	r0, #1
   12210:	bl	11600 <__assert_fail@plt+0xfc>
   12214:	movw	r0, #37220	; 0x9164
   12218:	movt	r0, #4
   1221c:	ldr	r1, [r0]
   12220:	str	r0, [sp, #40]	; 0x28
   12224:	mov	r0, r1
   12228:	bl	113d8 <strlen@plt>
   1222c:	str	r0, [fp, #-20]	; 0xffffffec
   12230:	ldr	r0, [fp, #-20]	; 0xffffffec
   12234:	add	r0, r0, r0, lsl #1
   12238:	movw	r1, #38212	; 0x9544
   1223c:	movt	r1, #4
   12240:	str	r0, [r1]
   12244:	ldr	r0, [r1]
   12248:	add	r0, r0, #1
   1224c:	bl	2e470 <__assert_fail@plt+0x1cf6c>
   12250:	movw	r1, #38216	; 0x9548
   12254:	movt	r1, #4
   12258:	str	r0, [r1]
   1225c:	ldr	r0, [r1]
   12260:	ldr	r2, [sp, #40]	; 0x28
   12264:	ldr	r3, [r2]
   12268:	str	r1, [sp, #36]	; 0x24
   1226c:	mov	r1, r3
   12270:	bl	112f4 <stpcpy@plt>
   12274:	ldr	r1, [sp, #40]	; 0x28
   12278:	ldr	r1, [r1]
   1227c:	bl	112f4 <stpcpy@plt>
   12280:	ldr	r1, [sp, #40]	; 0x28
   12284:	ldr	r1, [r1]
   12288:	bl	112f4 <stpcpy@plt>
   1228c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12290:	lsl	r1, r1, #1
   12294:	movw	r2, #38220	; 0x954c
   12298:	movt	r2, #4
   1229c:	str	r1, [r2]
   122a0:	ldr	r1, [sp, #36]	; 0x24
   122a4:	ldr	r2, [r1]
   122a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   122ac:	add	r2, r2, r3
   122b0:	movw	r3, #38224	; 0x9550
   122b4:	movt	r3, #4
   122b8:	str	r2, [r3]
   122bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   122c0:	movw	ip, #38228	; 0x9554
   122c4:	movt	ip, #4
   122c8:	str	r2, [ip]
   122cc:	ldr	r2, [r3]
   122d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   122d4:	add	r2, r2, r3
   122d8:	movw	r3, #38232	; 0x9558
   122dc:	movt	r3, #4
   122e0:	str	r2, [r3]
   122e4:	movw	r2, #38236	; 0x955c
   122e8:	movt	r2, #4
   122ec:	str	r0, [sp, #32]
   122f0:	mov	r0, r2
   122f4:	bl	133a4 <__assert_fail@plt+0x1ea0>
   122f8:	movw	r0, #37208	; 0x9158
   122fc:	movt	r0, #4
   12300:	ldr	r0, [r0]
   12304:	bl	113d8 <strlen@plt>
   12308:	str	r0, [fp, #-20]	; 0xffffffec
   1230c:	movw	r0, #37212	; 0x915c
   12310:	movt	r0, #4
   12314:	ldr	r1, [r0]
   12318:	ldr	r2, [fp, #-20]	; 0xffffffec
   1231c:	add	r1, r1, r2
   12320:	add	r1, r1, #1
   12324:	str	r0, [sp, #28]
   12328:	mov	r0, r1
   1232c:	bl	2e470 <__assert_fail@plt+0x1cf6c>
   12330:	movw	r1, #38248	; 0x9568
   12334:	movt	r1, #4
   12338:	str	r0, [r1]
   1233c:	ldr	r0, [r1]
   12340:	ldr	r2, [sp, #28]
   12344:	ldr	r3, [r2]
   12348:	ldr	ip, [fp, #-20]	; 0xffffffec
   1234c:	add	r2, r3, ip
   12350:	mov	r3, #32
   12354:	str	r1, [sp, #24]
   12358:	mov	r1, r3
   1235c:	bl	11420 <memset@plt>
   12360:	ldr	r1, [sp, #24]
   12364:	ldr	r2, [r1]
   12368:	ldr	r3, [sp, #28]
   1236c:	ldr	ip, [r3]
   12370:	ldr	lr, [fp, #-20]	; 0xffffffec
   12374:	add	ip, ip, lr
   12378:	mov	lr, #0
   1237c:	strb	lr, [r2, ip]
   12380:	movw	r2, #37176	; 0x9138
   12384:	movt	r2, #4
   12388:	ldr	ip, [r2]
   1238c:	ldr	r2, [r2, #4]
   12390:	movw	lr, #38256	; 0x9570
   12394:	movt	lr, #4
   12398:	str	r2, [lr, #4]
   1239c:	str	ip, [lr]
   123a0:	movw	r2, #37164	; 0x912c
   123a4:	movt	r2, #4
   123a8:	ldr	r2, [r2]
   123ac:	movw	ip, #38264	; 0x9578
   123b0:	movt	ip, #4
   123b4:	str	r2, [ip]
   123b8:	movw	r2, #38268	; 0x957c
   123bc:	movt	r2, #4
   123c0:	movw	ip, #37636	; 0x9304
   123c4:	movt	ip, #4
   123c8:	str	ip, [r2]
   123cc:	movw	r2, #37312	; 0x91c0
   123d0:	movt	r2, #4
   123d4:	ldr	r2, [r2]
   123d8:	ldr	ip, [fp, #-8]
   123dc:	cmp	r2, ip
   123e0:	bne	123fc <__assert_fail@plt+0xef8>
   123e4:	movw	r0, #31204	; 0x79e4
   123e8:	movt	r0, #3
   123ec:	bl	1264c <__assert_fail@plt+0x1148>
   123f0:	and	r0, r0, #1
   123f4:	strb	r0, [fp, #-21]	; 0xffffffeb
   123f8:	b	12474 <__assert_fail@plt+0xf70>
   123fc:	b	12400 <__assert_fail@plt+0xefc>
   12400:	movw	r0, #37312	; 0x91c0
   12404:	movt	r0, #4
   12408:	ldr	r0, [r0]
   1240c:	ldr	r1, [fp, #-8]
   12410:	cmp	r0, r1
   12414:	bge	12470 <__assert_fail@plt+0xf6c>
   12418:	ldr	r0, [fp, #-12]
   1241c:	movw	r1, #37312	; 0x91c0
   12420:	movt	r1, #4
   12424:	ldr	r1, [r1]
   12428:	add	r0, r0, r1, lsl #2
   1242c:	ldr	r0, [r0]
   12430:	bl	1264c <__assert_fail@plt+0x1148>
   12434:	and	r0, r0, #1
   12438:	ldrb	r1, [fp, #-21]	; 0xffffffeb
   1243c:	and	r1, r1, #1
   12440:	and	r0, r1, r0
   12444:	cmp	r0, #0
   12448:	movw	r0, #0
   1244c:	movne	r0, #1
   12450:	and	r0, r0, #1
   12454:	strb	r0, [fp, #-21]	; 0xffffffeb
   12458:	movw	r0, #37312	; 0x91c0
   1245c:	movt	r0, #4
   12460:	ldr	r1, [r0]
   12464:	add	r1, r1, #1
   12468:	str	r1, [r0]
   1246c:	b	12400 <__assert_fail@plt+0xefc>
   12470:	b	12474 <__assert_fail@plt+0xf70>
   12474:	movw	r0, #37344	; 0x91e0
   12478:	movt	r0, #4
   1247c:	ldrb	r0, [r0]
   12480:	tst	r0, #1
   12484:	beq	124b8 <__assert_fail@plt+0xfb4>
   12488:	movw	r0, #37328	; 0x91d0
   1248c:	movt	r0, #4
   12490:	ldr	r0, [r0]
   12494:	bl	13104 <__assert_fail@plt+0x1c00>
   12498:	cmn	r0, #1
   1249c:	bne	124b8 <__assert_fail@plt+0xfb4>
   124a0:	bl	113fc <__errno_location@plt>
   124a4:	ldr	r1, [r0]
   124a8:	movw	r0, #1
   124ac:	movw	r2, #31204	; 0x79e4
   124b0:	movt	r2, #3
   124b4:	bl	1136c <error@plt>
   124b8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   124bc:	tst	r0, #1
   124c0:	movw	r0, #0
   124c4:	moveq	r0, #1
   124c8:	mov	sp, fp
   124cc:	pop	{fp, pc}
   124d0:	push	{fp, lr}
   124d4:	mov	fp, sp
   124d8:	sub	sp, sp, #32
   124dc:	str	r0, [fp, #-4]
   124e0:	str	r1, [fp, #-8]
   124e4:	str	r2, [fp, #-12]
   124e8:	mov	r0, #1
   124ec:	strb	r0, [sp, #15]
   124f0:	movw	r0, #37336	; 0x91d8
   124f4:	movt	r0, #4
   124f8:	ldr	r0, [r0]
   124fc:	ldrb	r0, [r0]
   12500:	sub	r0, r0, #97	; 0x61
   12504:	cmp	r0, #19
   12508:	str	r0, [sp, #8]
   1250c:	bhi	12634 <__assert_fail@plt+0x1130>
   12510:	add	r0, pc, #8
   12514:	ldr	r1, [sp, #8]
   12518:	ldr	r0, [r0, r1, lsl #2]
   1251c:	mov	pc, r0
   12520:	andeq	r2, r1, r0, ror r5
   12524:	andeq	r2, r1, r4, lsr r6
   12528:	andeq	r2, r1, r4, lsr r6
   1252c:	andeq	r2, r1, r4, lsr r6
   12530:	andeq	r2, r1, r4, lsr r6
   12534:	andeq	r2, r1, r4, lsr r6
   12538:	andeq	r2, r1, r4, lsr r6
   1253c:	andeq	r2, r1, r4, lsr r6
   12540:	andeq	r2, r1, r4, lsr r6
   12544:	andeq	r2, r1, r4, lsr r6
   12548:	andeq	r2, r1, r4, lsr r6
   1254c:	andeq	r2, r1, r4, lsr r6
   12550:	andeq	r2, r1, r4, lsr r6
   12554:	andeq	r2, r1, r0, ror r5
   12558:	andeq	r2, r1, r4, lsr r6
   1255c:	andeq	r2, r1, r8, lsl #11
   12560:	andeq	r2, r1, r4, lsr r6
   12564:	andeq	r2, r1, r4, lsr r6
   12568:	andeq	r2, r1, r4, lsr r6
   1256c:	andeq	r2, r1, r0, ror r5
   12570:	movw	r0, #37336	; 0x91d8
   12574:	movt	r0, #4
   12578:	ldr	r0, [r0]
   1257c:	ldr	r1, [fp, #-4]
   12580:	str	r0, [r1]
   12584:	b	1263c <__assert_fail@plt+0x1138>
   12588:	movw	r0, #37336	; 0x91d8
   1258c:	movt	r0, #4
   12590:	ldr	r1, [r0]
   12594:	add	r2, r1, #1
   12598:	str	r2, [r0]
   1259c:	ldr	r2, [fp, #-4]
   125a0:	str	r1, [r2]
   125a4:	ldr	r1, [fp, #-8]
   125a8:	movw	r2, #0
   125ac:	str	r2, [r1]
   125b0:	ldr	r1, [fp, #-8]
   125b4:	str	r2, [r1, #4]
   125b8:	ldr	r1, [fp, #-12]
   125bc:	ldr	r3, [fp, #-8]
   125c0:	str	r1, [r3, #16]
   125c4:	ldr	r1, [fp, #-8]
   125c8:	str	r2, [r1, #20]
   125cc:	movw	r1, #38604	; 0x96cc
   125d0:	movt	r1, #4
   125d4:	movw	r2, #710	; 0x2c6
   125d8:	str	r2, [r1]
   125dc:	ldr	r1, [r0]
   125e0:	ldr	r0, [r0]
   125e4:	str	r1, [sp, #4]
   125e8:	bl	113d8 <strlen@plt>
   125ec:	ldr	r2, [fp, #-8]
   125f0:	ldr	r1, [sp, #4]
   125f4:	str	r0, [sp]
   125f8:	mov	r0, r1
   125fc:	ldr	r1, [sp]
   12600:	bl	15d44 <__assert_fail@plt+0x4840>
   12604:	str	r0, [sp, #16]
   12608:	ldr	r0, [sp, #16]
   1260c:	movw	r1, #0
   12610:	cmp	r0, r1
   12614:	beq	12630 <__assert_fail@plt+0x112c>
   12618:	ldr	r3, [sp, #16]
   1261c:	movw	r0, #1
   12620:	movw	r1, #0
   12624:	movw	r2, #29822	; 0x747e
   12628:	movt	r2, #3
   1262c:	bl	1136c <error@plt>
   12630:	b	1263c <__assert_fail@plt+0x1138>
   12634:	movw	r0, #0
   12638:	strb	r0, [sp, #15]
   1263c:	ldrb	r0, [sp, #15]
   12640:	and	r0, r0, #1
   12644:	mov	sp, fp
   12648:	pop	{fp, pc}
   1264c:	push	{fp, lr}
   12650:	mov	fp, sp
   12654:	sub	sp, sp, #32
   12658:	str	r0, [fp, #-8]
   1265c:	ldr	r0, [fp, #-8]
   12660:	movw	r1, #31204	; 0x79e4
   12664:	movt	r1, #3
   12668:	bl	11234 <strcmp@plt>
   1266c:	cmp	r0, #0
   12670:	bne	12698 <__assert_fail@plt+0x1194>
   12674:	movw	r0, #37344	; 0x91e0
   12678:	movt	r0, #4
   1267c:	movw	r1, #1
   12680:	strb	r1, [r0]
   12684:	movw	r0, #37328	; 0x91d0
   12688:	movt	r0, #4
   1268c:	ldr	r0, [r0]
   12690:	str	r0, [fp, #-12]
   12694:	b	12710 <__assert_fail@plt+0x120c>
   12698:	ldr	r0, [fp, #-8]
   1269c:	movw	r1, #29920	; 0x74e0
   126a0:	movt	r1, #3
   126a4:	bl	114a4 <fopen64@plt>
   126a8:	str	r0, [fp, #-12]
   126ac:	ldr	r0, [fp, #-12]
   126b0:	movw	r1, #0
   126b4:	cmp	r0, r1
   126b8:	bne	1270c <__assert_fail@plt+0x1208>
   126bc:	bl	113fc <__errno_location@plt>
   126c0:	ldr	r1, [r0]
   126c4:	ldr	r2, [fp, #-8]
   126c8:	movw	r0, #0
   126cc:	movw	r3, #3
   126d0:	str	r1, [sp, #12]
   126d4:	mov	r1, r3
   126d8:	bl	159c8 <__assert_fail@plt+0x44c4>
   126dc:	movw	r1, #0
   126e0:	str	r0, [sp, #8]
   126e4:	mov	r0, r1
   126e8:	ldr	r1, [sp, #12]
   126ec:	movw	r2, #29822	; 0x747e
   126f0:	movt	r2, #3
   126f4:	ldr	r3, [sp, #8]
   126f8:	bl	1136c <error@plt>
   126fc:	movw	r0, #0
   12700:	and	r0, r0, #1
   12704:	strb	r0, [fp, #-1]
   12708:	b	127fc <__assert_fail@plt+0x12f8>
   1270c:	b	12710 <__assert_fail@plt+0x120c>
   12710:	ldr	r0, [fp, #-12]
   12714:	movw	r1, #2
   12718:	bl	130ac <__assert_fail@plt+0x1ba8>
   1271c:	ldr	r0, [fp, #-12]
   12720:	bl	1280c <__assert_fail@plt+0x1308>
   12724:	bl	113fc <__errno_location@plt>
   12728:	ldr	r0, [r0]
   1272c:	str	r0, [sp, #16]
   12730:	ldr	r0, [fp, #-12]
   12734:	bl	11354 <ferror_unlocked@plt>
   12738:	cmp	r0, #0
   1273c:	bne	12748 <__assert_fail@plt+0x1244>
   12740:	movw	r0, #0
   12744:	str	r0, [sp, #16]
   12748:	ldr	r0, [fp, #-8]
   1274c:	movw	r1, #31204	; 0x79e4
   12750:	movt	r1, #3
   12754:	bl	11234 <strcmp@plt>
   12758:	cmp	r0, #0
   1275c:	bne	1276c <__assert_fail@plt+0x1268>
   12760:	ldr	r0, [fp, #-12]
   12764:	bl	11498 <clearerr_unlocked@plt>
   12768:	b	12798 <__assert_fail@plt+0x1294>
   1276c:	ldr	r0, [fp, #-12]
   12770:	bl	13104 <__assert_fail@plt+0x1c00>
   12774:	cmp	r0, #0
   12778:	beq	12794 <__assert_fail@plt+0x1290>
   1277c:	ldr	r0, [sp, #16]
   12780:	cmp	r0, #0
   12784:	bne	12794 <__assert_fail@plt+0x1290>
   12788:	bl	113fc <__errno_location@plt>
   1278c:	ldr	r0, [r0]
   12790:	str	r0, [sp, #16]
   12794:	b	12798 <__assert_fail@plt+0x1294>
   12798:	ldr	r0, [sp, #16]
   1279c:	cmp	r0, #0
   127a0:	beq	127f0 <__assert_fail@plt+0x12ec>
   127a4:	ldr	r1, [sp, #16]
   127a8:	ldr	r2, [fp, #-8]
   127ac:	movw	r0, #0
   127b0:	movw	r3, #3
   127b4:	str	r1, [sp, #4]
   127b8:	mov	r1, r3
   127bc:	bl	159c8 <__assert_fail@plt+0x44c4>
   127c0:	movw	r1, #0
   127c4:	str	r0, [sp]
   127c8:	mov	r0, r1
   127cc:	ldr	r1, [sp, #4]
   127d0:	movw	r2, #29822	; 0x747e
   127d4:	movt	r2, #3
   127d8:	ldr	r3, [sp]
   127dc:	bl	1136c <error@plt>
   127e0:	movw	r0, #0
   127e4:	and	r0, r0, #1
   127e8:	strb	r0, [fp, #-1]
   127ec:	b	127fc <__assert_fail@plt+0x12f8>
   127f0:	movw	r0, #1
   127f4:	and	r0, r0, #1
   127f8:	strb	r0, [fp, #-1]
   127fc:	ldrb	r0, [fp, #-1]
   12800:	and	r0, r0, #1
   12804:	mov	sp, fp
   12808:	pop	{fp, pc}
   1280c:	push	{fp, lr}
   12810:	mov	fp, sp
   12814:	sub	sp, sp, #8
   12818:	str	r0, [sp, #4]
   1281c:	ldr	r1, [sp, #4]
   12820:	movw	r0, #38236	; 0x955c
   12824:	movt	r0, #4
   12828:	bl	133d0 <__assert_fail@plt+0x1ecc>
   1282c:	movw	r1, #0
   12830:	cmp	r0, r1
   12834:	beq	1288c <__assert_fail@plt+0x1388>
   12838:	bl	12894 <__assert_fail@plt+0x1390>
   1283c:	mov	r1, r0
   12840:	cmp	r0, #3
   12844:	str	r1, [sp]
   12848:	bhi	12888 <__assert_fail@plt+0x1384>
   1284c:	add	r0, pc, #8
   12850:	ldr	r1, [sp]
   12854:	ldr	r0, [r0, r1, lsl #2]
   12858:	mov	pc, r0
   1285c:	andeq	r2, r1, ip, ror #16
   12860:	andeq	r2, r1, r4, ror r8
   12864:	andeq	r2, r1, ip, ror r8
   12868:	andeq	r2, r1, r4, lsl #17
   1286c:	bl	12a20 <__assert_fail@plt+0x151c>
   12870:	b	12888 <__assert_fail@plt+0x1384>
   12874:	bl	12a64 <__assert_fail@plt+0x1560>
   12878:	b	12888 <__assert_fail@plt+0x1384>
   1287c:	bl	12aa8 <__assert_fail@plt+0x15a4>
   12880:	b	12888 <__assert_fail@plt+0x1384>
   12884:	bl	12aec <__assert_fail@plt+0x15e8>
   12888:	b	1281c <__assert_fail@plt+0x1318>
   1288c:	mov	sp, fp
   12890:	pop	{fp, pc}
   12894:	push	{fp, lr}
   12898:	mov	fp, sp
   1289c:	sub	sp, sp, #8
   128a0:	movw	r0, #38236	; 0x955c
   128a4:	movt	r0, #4
   128a8:	ldr	r0, [r0, #4]
   128ac:	sub	r0, r0, #1
   128b0:	str	r0, [sp]
   128b4:	ldr	r0, [sp]
   128b8:	cmp	r0, #2
   128bc:	bcc	12904 <__assert_fail@plt+0x1400>
   128c0:	movw	r0, #38228	; 0x9554
   128c4:	movt	r0, #4
   128c8:	ldr	r0, [r0]
   128cc:	cmp	r0, #2
   128d0:	bcc	12904 <__assert_fail@plt+0x1400>
   128d4:	movw	r0, #38236	; 0x955c
   128d8:	movt	r0, #4
   128dc:	ldr	r0, [r0, #8]
   128e0:	movw	r1, #37220	; 0x9164
   128e4:	movt	r1, #4
   128e8:	ldr	r1, [r1]
   128ec:	ldrh	r1, [r1]
   128f0:	ldrh	r0, [r0]
   128f4:	subs	r0, r0, r1
   128f8:	movwne	r0, #1
   128fc:	cmp	r0, #0
   12900:	beq	12910 <__assert_fail@plt+0x140c>
   12904:	movw	r0, #3
   12908:	str	r0, [sp, #4]
   1290c:	b	12a14 <__assert_fail@plt+0x1510>
   12910:	ldr	r0, [sp]
   12914:	movw	r1, #38212	; 0x9544
   12918:	movt	r1, #4
   1291c:	ldr	r1, [r1]
   12920:	cmp	r0, r1
   12924:	bne	12964 <__assert_fail@plt+0x1460>
   12928:	movw	r0, #38236	; 0x955c
   1292c:	movt	r0, #4
   12930:	ldr	r0, [r0, #8]
   12934:	movw	r1, #38216	; 0x9548
   12938:	movt	r1, #4
   1293c:	ldr	r1, [r1]
   12940:	movw	r2, #38212	; 0x9544
   12944:	movt	r2, #4
   12948:	ldr	r2, [r2]
   1294c:	bl	112e8 <memcmp@plt>
   12950:	cmp	r0, #0
   12954:	bne	12964 <__assert_fail@plt+0x1460>
   12958:	movw	r0, #0
   1295c:	str	r0, [sp, #4]
   12960:	b	12a14 <__assert_fail@plt+0x1510>
   12964:	ldr	r0, [sp]
   12968:	movw	r1, #38220	; 0x954c
   1296c:	movt	r1, #4
   12970:	ldr	r1, [r1]
   12974:	cmp	r0, r1
   12978:	bne	129b8 <__assert_fail@plt+0x14b4>
   1297c:	movw	r0, #38236	; 0x955c
   12980:	movt	r0, #4
   12984:	ldr	r0, [r0, #8]
   12988:	movw	r1, #38224	; 0x9550
   1298c:	movt	r1, #4
   12990:	ldr	r1, [r1]
   12994:	movw	r2, #38220	; 0x954c
   12998:	movt	r2, #4
   1299c:	ldr	r2, [r2]
   129a0:	bl	112e8 <memcmp@plt>
   129a4:	cmp	r0, #0
   129a8:	bne	129b8 <__assert_fail@plt+0x14b4>
   129ac:	movw	r0, #1
   129b0:	str	r0, [sp, #4]
   129b4:	b	12a14 <__assert_fail@plt+0x1510>
   129b8:	ldr	r0, [sp]
   129bc:	movw	r1, #38228	; 0x9554
   129c0:	movt	r1, #4
   129c4:	ldr	r1, [r1]
   129c8:	cmp	r0, r1
   129cc:	bne	12a0c <__assert_fail@plt+0x1508>
   129d0:	movw	r0, #38236	; 0x955c
   129d4:	movt	r0, #4
   129d8:	ldr	r0, [r0, #8]
   129dc:	movw	r1, #38232	; 0x9558
   129e0:	movt	r1, #4
   129e4:	ldr	r1, [r1]
   129e8:	movw	r2, #38228	; 0x9554
   129ec:	movt	r2, #4
   129f0:	ldr	r2, [r2]
   129f4:	bl	112e8 <memcmp@plt>
   129f8:	cmp	r0, #0
   129fc:	bne	12a0c <__assert_fail@plt+0x1508>
   12a00:	movw	r0, #2
   12a04:	str	r0, [sp, #4]
   12a08:	b	12a14 <__assert_fail@plt+0x1510>
   12a0c:	movw	r0, #3
   12a10:	str	r0, [sp, #4]
   12a14:	ldr	r0, [sp, #4]
   12a18:	mov	sp, fp
   12a1c:	pop	{fp, pc}
   12a20:	push	{fp, lr}
   12a24:	mov	fp, sp
   12a28:	movw	r0, #37160	; 0x9128
   12a2c:	movt	r0, #4
   12a30:	ldr	r0, [r0]
   12a34:	movw	r1, #38264	; 0x9578
   12a38:	movt	r1, #4
   12a3c:	str	r0, [r1]
   12a40:	movw	r0, #38268	; 0x957c
   12a44:	movt	r0, #4
   12a48:	movw	r1, #37348	; 0x91e4
   12a4c:	movt	r1, #4
   12a50:	str	r1, [r0]
   12a54:	bl	12d80 <__assert_fail@plt+0x187c>
   12a58:	movw	r0, #10
   12a5c:	bl	114f8 <putchar_unlocked@plt>
   12a60:	pop	{fp, pc}
   12a64:	push	{fp, lr}
   12a68:	mov	fp, sp
   12a6c:	movw	r0, #37164	; 0x912c
   12a70:	movt	r0, #4
   12a74:	ldr	r0, [r0]
   12a78:	movw	r1, #38264	; 0x9578
   12a7c:	movt	r1, #4
   12a80:	str	r0, [r1]
   12a84:	movw	r0, #38268	; 0x957c
   12a88:	movt	r0, #4
   12a8c:	movw	r1, #37636	; 0x9304
   12a90:	movt	r1, #4
   12a94:	str	r1, [r0]
   12a98:	bl	12d80 <__assert_fail@plt+0x187c>
   12a9c:	movw	r0, #10
   12aa0:	bl	114f8 <putchar_unlocked@plt>
   12aa4:	pop	{fp, pc}
   12aa8:	push	{fp, lr}
   12aac:	mov	fp, sp
   12ab0:	movw	r0, #37168	; 0x9130
   12ab4:	movt	r0, #4
   12ab8:	ldr	r0, [r0]
   12abc:	movw	r1, #38264	; 0x9578
   12ac0:	movt	r1, #4
   12ac4:	str	r0, [r1]
   12ac8:	movw	r0, #38268	; 0x957c
   12acc:	movt	r0, #4
   12ad0:	movw	r1, #37924	; 0x9424
   12ad4:	movt	r1, #4
   12ad8:	str	r1, [r0]
   12adc:	bl	12d80 <__assert_fail@plt+0x187c>
   12ae0:	movw	r0, #10
   12ae4:	bl	114f8 <putchar_unlocked@plt>
   12ae8:	pop	{fp, pc}
   12aec:	push	{fp, lr}
   12af0:	mov	fp, sp
   12af4:	sub	sp, sp, #24
   12af8:	movw	r0, #38264	; 0x9578
   12afc:	movt	r0, #4
   12b00:	ldr	r0, [r0]
   12b04:	ldrb	r0, [r0]
   12b08:	sub	r0, r0, #97	; 0x61
   12b0c:	cmp	r0, #19
   12b10:	str	r0, [fp, #-4]
   12b14:	bhi	12d50 <__assert_fail@plt+0x184c>
   12b18:	add	r0, pc, #8
   12b1c:	ldr	r1, [fp, #-4]
   12b20:	ldr	r0, [r0, r1, lsl #2]
   12b24:	mov	pc, r0
   12b28:	andeq	r2, r1, r8, ror fp
   12b2c:	andeq	r2, r1, r0, asr sp
   12b30:	andeq	r2, r1, r0, asr sp
   12b34:	andeq	r2, r1, r0, asr sp
   12b38:	andeq	r2, r1, r0, asr sp
   12b3c:	andeq	r2, r1, r0, asr sp
   12b40:	andeq	r2, r1, r0, asr sp
   12b44:	andeq	r2, r1, r0, asr sp
   12b48:	andeq	r2, r1, r0, asr sp
   12b4c:	andeq	r2, r1, r0, asr sp
   12b50:	andeq	r2, r1, r0, asr sp
   12b54:	andeq	r2, r1, r0, asr sp
   12b58:	andeq	r2, r1, r0, asr sp
   12b5c:	andeq	r2, r1, ip, ror ip
   12b60:	andeq	r2, r1, r0, asr sp
   12b64:	muleq	r1, ip, ip
   12b68:	andeq	r2, r1, r0, asr sp
   12b6c:	andeq	r2, r1, r0, asr sp
   12b70:	andeq	r2, r1, r0, asr sp
   12b74:	andeq	r2, r1, ip, lsr ip
   12b78:	movw	r0, #37200	; 0x9150
   12b7c:	movt	r0, #4
   12b80:	ldr	r1, [r0]
   12b84:	ldr	r0, [r0, #4]
   12b88:	subs	r1, r1, #2
   12b8c:	sbcs	r0, r0, #0
   12b90:	blt	12c34 <__assert_fail@plt+0x1730>
   12b94:	b	12b98 <__assert_fail@plt+0x1694>
   12b98:	movw	r0, #38236	; 0x955c
   12b9c:	movt	r0, #4
   12ba0:	ldr	r0, [r0, #4]
   12ba4:	movw	r1, #1
   12ba8:	cmp	r1, r0
   12bac:	blt	12bf8 <__assert_fail@plt+0x16f4>
   12bb0:	movw	r0, #38280	; 0x9588
   12bb4:	movt	r0, #4
   12bb8:	ldr	r1, [r0]
   12bbc:	ldr	r2, [r0, #4]
   12bc0:	adds	r1, r1, #1
   12bc4:	adc	r2, r2, #0
   12bc8:	str	r1, [r0]
   12bcc:	str	r2, [r0, #4]
   12bd0:	movw	r0, #37200	; 0x9150
   12bd4:	movt	r0, #4
   12bd8:	ldr	r3, [r0]
   12bdc:	ldr	r0, [r0, #4]
   12be0:	eor	r0, r2, r0
   12be4:	eor	r1, r1, r3
   12be8:	orr	r0, r1, r0
   12bec:	cmp	r0, #0
   12bf0:	bne	12c14 <__assert_fail@plt+0x1710>
   12bf4:	b	12bf8 <__assert_fail@plt+0x16f4>
   12bf8:	bl	12dc8 <__assert_fail@plt+0x18c4>
   12bfc:	movw	r0, #38280	; 0x9588
   12c00:	movt	r0, #4
   12c04:	mov	r1, #0
   12c08:	str	r1, [r0, #4]
   12c0c:	str	r1, [r0]
   12c10:	b	12c30 <__assert_fail@plt+0x172c>
   12c14:	movw	r0, #38248	; 0x9568
   12c18:	movt	r0, #4
   12c1c:	ldr	r0, [r0]
   12c20:	movw	r1, #37332	; 0x91d4
   12c24:	movt	r1, #4
   12c28:	ldr	r1, [r1]
   12c2c:	bl	111f8 <fputs_unlocked@plt>
   12c30:	b	12c38 <__assert_fail@plt+0x1734>
   12c34:	bl	12dc8 <__assert_fail@plt+0x18c4>
   12c38:	b	12d50 <__assert_fail@plt+0x184c>
   12c3c:	movw	r0, #38236	; 0x955c
   12c40:	movt	r0, #4
   12c44:	ldr	r0, [r0, #4]
   12c48:	movw	r1, #1
   12c4c:	cmp	r1, r0
   12c50:	bge	12c5c <__assert_fail@plt+0x1758>
   12c54:	bl	12dc8 <__assert_fail@plt+0x18c4>
   12c58:	b	12c78 <__assert_fail@plt+0x1774>
   12c5c:	movw	r0, #38248	; 0x9568
   12c60:	movt	r0, #4
   12c64:	ldr	r0, [r0]
   12c68:	movw	r1, #37332	; 0x91d4
   12c6c:	movt	r1, #4
   12c70:	ldr	r1, [r1]
   12c74:	bl	111f8 <fputs_unlocked@plt>
   12c78:	b	12d50 <__assert_fail@plt+0x184c>
   12c7c:	movw	r0, #38248	; 0x9568
   12c80:	movt	r0, #4
   12c84:	ldr	r0, [r0]
   12c88:	movw	r1, #37332	; 0x91d4
   12c8c:	movt	r1, #4
   12c90:	ldr	r1, [r1]
   12c94:	bl	111f8 <fputs_unlocked@plt>
   12c98:	b	12d50 <__assert_fail@plt+0x184c>
   12c9c:	movw	r0, #38268	; 0x957c
   12ca0:	movt	r0, #4
   12ca4:	ldr	r0, [r0]
   12ca8:	movw	r1, #38236	; 0x955c
   12cac:	movt	r1, #4
   12cb0:	ldr	r2, [r1, #4]
   12cb4:	ldr	r1, [r1, #8]
   12cb8:	sub	r2, r2, #1
   12cbc:	mov	r3, sp
   12cc0:	mov	ip, #0
   12cc4:	str	ip, [r3, #4]
   12cc8:	str	r2, [r3]
   12ccc:	mov	r3, ip
   12cd0:	bl	18674 <__assert_fail@plt+0x7170>
   12cd4:	mov	r1, r0
   12cd8:	cmn	r0, #2
   12cdc:	str	r1, [fp, #-8]
   12ce0:	beq	12cf8 <__assert_fail@plt+0x17f4>
   12ce4:	b	12ce8 <__assert_fail@plt+0x17e4>
   12ce8:	ldr	r0, [fp, #-8]
   12cec:	cmn	r0, #1
   12cf0:	beq	12d28 <__assert_fail@plt+0x1824>
   12cf4:	b	12d48 <__assert_fail@plt+0x1844>
   12cf8:	bl	113fc <__errno_location@plt>
   12cfc:	ldr	r1, [r0]
   12d00:	movw	r0, #30739	; 0x7813
   12d04:	movt	r0, #3
   12d08:	str	r1, [sp, #12]
   12d0c:	bl	113cc <gettext@plt>
   12d10:	movw	r1, #1
   12d14:	str	r0, [sp, #8]
   12d18:	mov	r0, r1
   12d1c:	ldr	r1, [sp, #12]
   12d20:	ldr	r2, [sp, #8]
   12d24:	bl	1136c <error@plt>
   12d28:	movw	r0, #38248	; 0x9568
   12d2c:	movt	r0, #4
   12d30:	ldr	r0, [r0]
   12d34:	movw	r1, #37332	; 0x91d4
   12d38:	movt	r1, #4
   12d3c:	ldr	r1, [r1]
   12d40:	bl	111f8 <fputs_unlocked@plt>
   12d44:	b	12d4c <__assert_fail@plt+0x1848>
   12d48:	bl	12dc8 <__assert_fail@plt+0x18c4>
   12d4c:	b	12d50 <__assert_fail@plt+0x184c>
   12d50:	movw	r0, #38236	; 0x955c
   12d54:	movt	r0, #4
   12d58:	ldr	r1, [r0, #8]
   12d5c:	ldr	r2, [r0, #4]
   12d60:	movw	r0, #37332	; 0x91d4
   12d64:	movt	r0, #4
   12d68:	ldr	r3, [r0]
   12d6c:	mov	r0, r1
   12d70:	movw	r1, #1
   12d74:	bl	112dc <fwrite_unlocked@plt>
   12d78:	mov	sp, fp
   12d7c:	pop	{fp, pc}
   12d80:	movw	r0, #37192	; 0x9148
   12d84:	movt	r0, #4
   12d88:	ldrb	r0, [r0]
   12d8c:	tst	r0, #1
   12d90:	beq	12dc4 <__assert_fail@plt+0x18c0>
   12d94:	movw	r0, #37176	; 0x9138
   12d98:	movt	r0, #4
   12d9c:	ldr	r1, [r0]
   12da0:	ldr	r0, [r0, #4]
   12da4:	movw	r2, #38256	; 0x9570
   12da8:	movt	r2, #4
   12dac:	str	r0, [r2, #4]
   12db0:	str	r1, [r2]
   12db4:	movw	r0, #38272	; 0x9580
   12db8:	movt	r0, #4
   12dbc:	movw	r1, #0
   12dc0:	strb	r1, [r0]
   12dc4:	bx	lr
   12dc8:	push	{r4, r5, fp, lr}
   12dcc:	add	fp, sp, #8
   12dd0:	sub	sp, sp, #16
   12dd4:	movw	r0, #38272	; 0x9580
   12dd8:	movt	r0, #4
   12ddc:	ldrb	r0, [r0]
   12de0:	tst	r0, #1
   12de4:	beq	12e0c <__assert_fail@plt+0x1908>
   12de8:	movw	r0, #30774	; 0x7836
   12dec:	movt	r0, #3
   12df0:	bl	113cc <gettext@plt>
   12df4:	movw	r1, #1
   12df8:	str	r0, [sp, #12]
   12dfc:	mov	r0, r1
   12e00:	movw	r1, #0
   12e04:	ldr	r2, [sp, #12]
   12e08:	bl	1136c <error@plt>
   12e0c:	movw	r0, #37216	; 0x9160
   12e10:	movt	r0, #4
   12e14:	ldr	r0, [r0]
   12e18:	movw	r1, #37212	; 0x915c
   12e1c:	movt	r1, #4
   12e20:	ldr	r1, [r1]
   12e24:	movw	r2, #38256	; 0x9570
   12e28:	movt	r2, #4
   12e2c:	ldr	r3, [r2]
   12e30:	ldr	ip, [r2, #4]
   12e34:	movw	lr, #37208	; 0x9158
   12e38:	movt	lr, #4
   12e3c:	ldr	lr, [lr]
   12e40:	mov	r4, sp
   12e44:	str	lr, [r4]
   12e48:	str	r2, [sp, #8]
   12e4c:	mov	r2, r3
   12e50:	mov	r3, ip
   12e54:	bl	1124c <printf@plt>
   12e58:	ldr	r1, [sp, #8]
   12e5c:	ldr	r2, [r1]
   12e60:	ldr	r3, [r1, #4]
   12e64:	movw	ip, #37184	; 0x9140
   12e68:	movt	ip, #4
   12e6c:	ldr	lr, [ip]
   12e70:	ldr	ip, [ip, #4]
   12e74:	mov	r4, #0
   12e78:	cmn	r3, #1
   12e7c:	mov	r5, r4
   12e80:	movwgt	r5, #1
   12e84:	adds	r2, r2, lr
   12e88:	adc	r3, r3, ip
   12e8c:	cmn	r3, #1
   12e90:	mov	lr, r4
   12e94:	movwgt	lr, #1
   12e98:	subs	lr, r5, lr
   12e9c:	movwne	lr, #1
   12ea0:	cmn	ip, #1
   12ea4:	movwgt	r4, #1
   12ea8:	sub	ip, r5, r4
   12eac:	clz	ip, ip
   12eb0:	lsr	ip, ip, #5
   12eb4:	and	ip, ip, lr
   12eb8:	str	r2, [r1]
   12ebc:	str	r3, [r1, #4]
   12ec0:	tst	ip, #1
   12ec4:	beq	12ed8 <__assert_fail@plt+0x19d4>
   12ec8:	movw	r0, #38272	; 0x9580
   12ecc:	movt	r0, #4
   12ed0:	movw	r1, #1
   12ed4:	strb	r1, [r0]
   12ed8:	sub	sp, fp, #8
   12edc:	pop	{r4, r5, fp, pc}
   12ee0:	sub	sp, sp, #4
   12ee4:	str	r0, [sp]
   12ee8:	ldr	r0, [sp]
   12eec:	movw	r1, #38288	; 0x9590
   12ef0:	movt	r1, #4
   12ef4:	str	r0, [r1]
   12ef8:	add	sp, sp, #4
   12efc:	bx	lr
   12f00:	sub	sp, sp, #4
   12f04:	and	r0, r0, #1
   12f08:	strb	r0, [sp, #3]
   12f0c:	ldrb	r0, [sp, #3]
   12f10:	and	r0, r0, #1
   12f14:	movw	r1, #38292	; 0x9594
   12f18:	movt	r1, #4
   12f1c:	strb	r0, [r1]
   12f20:	add	sp, sp, #4
   12f24:	bx	lr
   12f28:	push	{fp, lr}
   12f2c:	mov	fp, sp
   12f30:	sub	sp, sp, #24
   12f34:	movw	r0, #37332	; 0x91d4
   12f38:	movt	r0, #4
   12f3c:	ldr	r0, [r0]
   12f40:	bl	33718 <__assert_fail@plt+0x22214>
   12f44:	cmp	r0, #0
   12f48:	beq	13018 <__assert_fail@plt+0x1b14>
   12f4c:	movw	r0, #38292	; 0x9594
   12f50:	movt	r0, #4
   12f54:	ldrb	r0, [r0]
   12f58:	tst	r0, #1
   12f5c:	beq	12f70 <__assert_fail@plt+0x1a6c>
   12f60:	bl	113fc <__errno_location@plt>
   12f64:	ldr	r0, [r0]
   12f68:	cmp	r0, #32
   12f6c:	beq	13018 <__assert_fail@plt+0x1b14>
   12f70:	movw	r0, #31119	; 0x798f
   12f74:	movt	r0, #3
   12f78:	bl	113cc <gettext@plt>
   12f7c:	str	r0, [fp, #-4]
   12f80:	movw	r0, #38288	; 0x9590
   12f84:	movt	r0, #4
   12f88:	ldr	r0, [r0]
   12f8c:	movw	r1, #0
   12f90:	cmp	r0, r1
   12f94:	beq	12fec <__assert_fail@plt+0x1ae8>
   12f98:	bl	113fc <__errno_location@plt>
   12f9c:	ldr	r1, [r0]
   12fa0:	movw	r0, #38288	; 0x9590
   12fa4:	movt	r0, #4
   12fa8:	ldr	r0, [r0]
   12fac:	str	r1, [fp, #-8]
   12fb0:	bl	15970 <__assert_fail@plt+0x446c>
   12fb4:	ldr	r1, [fp, #-4]
   12fb8:	movw	r2, #0
   12fbc:	str	r0, [sp, #12]
   12fc0:	mov	r0, r2
   12fc4:	ldr	r2, [fp, #-8]
   12fc8:	str	r1, [sp, #8]
   12fcc:	mov	r1, r2
   12fd0:	movw	r2, #31131	; 0x799b
   12fd4:	movt	r2, #3
   12fd8:	ldr	r3, [sp, #12]
   12fdc:	ldr	ip, [sp, #8]
   12fe0:	str	ip, [sp]
   12fe4:	bl	1136c <error@plt>
   12fe8:	b	13008 <__assert_fail@plt+0x1b04>
   12fec:	bl	113fc <__errno_location@plt>
   12ff0:	ldr	r1, [r0]
   12ff4:	ldr	r3, [fp, #-4]
   12ff8:	movw	r0, #0
   12ffc:	movw	r2, #29822	; 0x747e
   13000:	movt	r2, #3
   13004:	bl	1136c <error@plt>
   13008:	movw	r0, #37232	; 0x9170
   1300c:	movt	r0, #4
   13010:	ldr	r0, [r0]
   13014:	bl	11294 <_exit@plt>
   13018:	movw	r0, #37320	; 0x91c8
   1301c:	movt	r0, #4
   13020:	ldr	r0, [r0]
   13024:	bl	33718 <__assert_fail@plt+0x22214>
   13028:	cmp	r0, #0
   1302c:	beq	13040 <__assert_fail@plt+0x1b3c>
   13030:	movw	r0, #37232	; 0x9170
   13034:	movt	r0, #4
   13038:	ldr	r0, [r0]
   1303c:	bl	11294 <_exit@plt>
   13040:	mov	sp, fp
   13044:	pop	{fp, pc}
   13048:	push	{r4, r5, fp, lr}
   1304c:	add	fp, sp, #8
   13050:	sub	sp, sp, #40	; 0x28
   13054:	ldr	r1, [fp, #12]
   13058:	ldr	ip, [fp, #8]
   1305c:	ldr	lr, [fp, #16]
   13060:	str	r0, [fp, #-12]
   13064:	str	r3, [sp, #28]
   13068:	str	r2, [sp, #24]
   1306c:	str	r1, [sp, #20]
   13070:	str	ip, [sp, #16]
   13074:	ldr	r0, [fp, #-12]
   13078:	ldr	r2, [sp, #24]
   1307c:	ldr	r3, [sp, #28]
   13080:	ldr	r1, [sp, #16]
   13084:	ldr	ip, [sp, #20]
   13088:	ldr	r4, [fp, #16]
   1308c:	mov	r5, sp
   13090:	str	r4, [r5, #8]
   13094:	str	ip, [r5, #4]
   13098:	str	r1, [r5]
   1309c:	str	lr, [sp, #12]
   130a0:	bl	11240 <posix_fadvise64@plt>
   130a4:	sub	sp, fp, #8
   130a8:	pop	{r4, r5, fp, pc}
   130ac:	push	{fp, lr}
   130b0:	mov	fp, sp
   130b4:	sub	sp, sp, #24
   130b8:	str	r0, [fp, #-4]
   130bc:	str	r1, [fp, #-8]
   130c0:	ldr	r0, [fp, #-4]
   130c4:	movw	r1, #0
   130c8:	cmp	r0, r1
   130cc:	beq	130fc <__assert_fail@plt+0x1bf8>
   130d0:	ldr	r0, [fp, #-4]
   130d4:	bl	11438 <fileno@plt>
   130d8:	ldr	r1, [fp, #-8]
   130dc:	mov	r2, sp
   130e0:	str	r1, [r2, #8]
   130e4:	mov	r1, #0
   130e8:	str	r1, [r2, #4]
   130ec:	str	r1, [r2]
   130f0:	mov	r2, r1
   130f4:	mov	r3, r1
   130f8:	bl	13048 <__assert_fail@plt+0x1b44>
   130fc:	mov	sp, fp
   13100:	pop	{fp, pc}
   13104:	push	{fp, lr}
   13108:	mov	fp, sp
   1310c:	sub	sp, sp, #32
   13110:	str	r0, [fp, #-8]
   13114:	movw	r0, #0
   13118:	str	r0, [fp, #-12]
   1311c:	str	r0, [sp, #12]
   13120:	ldr	r0, [fp, #-8]
   13124:	bl	11438 <fileno@plt>
   13128:	str	r0, [sp, #16]
   1312c:	ldr	r0, [sp, #16]
   13130:	cmp	r0, #0
   13134:	bge	13148 <__assert_fail@plt+0x1c44>
   13138:	ldr	r0, [fp, #-8]
   1313c:	bl	11450 <fclose@plt>
   13140:	str	r0, [fp, #-4]
   13144:	b	131e4 <__assert_fail@plt+0x1ce0>
   13148:	ldr	r0, [fp, #-8]
   1314c:	bl	11390 <__freading@plt>
   13150:	cmp	r0, #0
   13154:	beq	1318c <__assert_fail@plt+0x1c88>
   13158:	ldr	r0, [fp, #-8]
   1315c:	bl	11438 <fileno@plt>
   13160:	mov	r1, sp
   13164:	mov	r2, #1
   13168:	str	r2, [r1]
   1316c:	mov	r1, #0
   13170:	mov	r2, r1
   13174:	mov	r3, r1
   13178:	bl	11330 <lseek64@plt>
   1317c:	and	r0, r0, r1
   13180:	cmn	r0, #1
   13184:	beq	131a8 <__assert_fail@plt+0x1ca4>
   13188:	b	1318c <__assert_fail@plt+0x1c88>
   1318c:	ldr	r0, [fp, #-8]
   13190:	bl	131f0 <__assert_fail@plt+0x1cec>
   13194:	cmp	r0, #0
   13198:	beq	131a8 <__assert_fail@plt+0x1ca4>
   1319c:	bl	113fc <__errno_location@plt>
   131a0:	ldr	r0, [r0]
   131a4:	str	r0, [fp, #-12]
   131a8:	ldr	r0, [fp, #-8]
   131ac:	bl	11450 <fclose@plt>
   131b0:	str	r0, [sp, #12]
   131b4:	ldr	r0, [fp, #-12]
   131b8:	cmp	r0, #0
   131bc:	beq	131dc <__assert_fail@plt+0x1cd8>
   131c0:	ldr	r0, [fp, #-12]
   131c4:	str	r0, [sp, #8]
   131c8:	bl	113fc <__errno_location@plt>
   131cc:	ldr	r1, [sp, #8]
   131d0:	str	r1, [r0]
   131d4:	mvn	r0, #0
   131d8:	str	r0, [sp, #12]
   131dc:	ldr	r0, [sp, #12]
   131e0:	str	r0, [fp, #-4]
   131e4:	ldr	r0, [fp, #-4]
   131e8:	mov	sp, fp
   131ec:	pop	{fp, pc}
   131f0:	push	{fp, lr}
   131f4:	mov	fp, sp
   131f8:	sub	sp, sp, #8
   131fc:	str	r0, [sp]
   13200:	ldr	r0, [sp]
   13204:	movw	r1, #0
   13208:	cmp	r0, r1
   1320c:	beq	13220 <__assert_fail@plt+0x1d1c>
   13210:	ldr	r0, [sp]
   13214:	bl	11390 <__freading@plt>
   13218:	cmp	r0, #0
   1321c:	bne	13230 <__assert_fail@plt+0x1d2c>
   13220:	ldr	r0, [sp]
   13224:	bl	11264 <fflush@plt>
   13228:	str	r0, [sp, #4]
   1322c:	b	13244 <__assert_fail@plt+0x1d40>
   13230:	ldr	r0, [sp]
   13234:	bl	13250 <__assert_fail@plt+0x1d4c>
   13238:	ldr	r0, [sp]
   1323c:	bl	11264 <fflush@plt>
   13240:	str	r0, [sp, #4]
   13244:	ldr	r0, [sp, #4]
   13248:	mov	sp, fp
   1324c:	pop	{fp, pc}
   13250:	push	{fp, lr}
   13254:	mov	fp, sp
   13258:	sub	sp, sp, #8
   1325c:	str	r0, [sp, #4]
   13260:	ldr	r0, [sp, #4]
   13264:	ldr	r0, [r0]
   13268:	and	r0, r0, #256	; 0x100
   1326c:	cmp	r0, #0
   13270:	beq	13294 <__assert_fail@plt+0x1d90>
   13274:	ldr	r0, [sp, #4]
   13278:	mov	r1, sp
   1327c:	mov	r2, #1
   13280:	str	r2, [r1]
   13284:	mov	r1, #0
   13288:	mov	r2, r1
   1328c:	mov	r3, r1
   13290:	bl	1329c <__assert_fail@plt+0x1d98>
   13294:	mov	sp, fp
   13298:	pop	{fp, pc}
   1329c:	push	{fp, lr}
   132a0:	mov	fp, sp
   132a4:	sub	sp, sp, #32
   132a8:	ldr	r1, [fp, #8]
   132ac:	str	r0, [fp, #-8]
   132b0:	str	r3, [sp, #20]
   132b4:	str	r2, [sp, #16]
   132b8:	ldr	r0, [fp, #-8]
   132bc:	ldr	r0, [r0, #8]
   132c0:	ldr	r2, [fp, #-8]
   132c4:	ldr	r2, [r2, #4]
   132c8:	cmp	r0, r2
   132cc:	bne	13378 <__assert_fail@plt+0x1e74>
   132d0:	ldr	r0, [fp, #-8]
   132d4:	ldr	r0, [r0, #20]
   132d8:	ldr	r1, [fp, #-8]
   132dc:	ldr	r1, [r1, #16]
   132e0:	cmp	r0, r1
   132e4:	bne	13378 <__assert_fail@plt+0x1e74>
   132e8:	ldr	r0, [fp, #-8]
   132ec:	ldr	r0, [r0, #36]	; 0x24
   132f0:	movw	r1, #0
   132f4:	cmp	r0, r1
   132f8:	bne	13378 <__assert_fail@plt+0x1e74>
   132fc:	ldr	r0, [fp, #-8]
   13300:	bl	11438 <fileno@plt>
   13304:	ldr	r2, [sp, #16]
   13308:	ldr	r3, [sp, #20]
   1330c:	ldr	r1, [fp, #8]
   13310:	mov	ip, sp
   13314:	str	r1, [ip]
   13318:	bl	11330 <lseek64@plt>
   1331c:	str	r1, [sp, #12]
   13320:	str	r0, [sp, #8]
   13324:	ldr	r0, [sp, #8]
   13328:	ldr	r1, [sp, #12]
   1332c:	and	r0, r0, r1
   13330:	cmn	r0, #1
   13334:	bne	13348 <__assert_fail@plt+0x1e44>
   13338:	b	1333c <__assert_fail@plt+0x1e38>
   1333c:	mvn	r0, #0
   13340:	str	r0, [fp, #-4]
   13344:	b	13398 <__assert_fail@plt+0x1e94>
   13348:	ldr	r0, [fp, #-8]
   1334c:	ldr	r1, [r0]
   13350:	bic	r1, r1, #16
   13354:	str	r1, [r0]
   13358:	ldr	r0, [sp, #8]
   1335c:	ldr	r1, [sp, #12]
   13360:	ldr	r2, [fp, #-8]
   13364:	str	r1, [r2, #84]	; 0x54
   13368:	str	r0, [r2, #80]	; 0x50
   1336c:	movw	r0, #0
   13370:	str	r0, [fp, #-4]
   13374:	b	13398 <__assert_fail@plt+0x1e94>
   13378:	ldr	r0, [fp, #-8]
   1337c:	ldr	r2, [sp, #16]
   13380:	ldr	r3, [sp, #20]
   13384:	ldr	r1, [fp, #8]
   13388:	mov	ip, sp
   1338c:	str	r1, [ip]
   13390:	bl	1145c <fseeko64@plt>
   13394:	str	r0, [fp, #-4]
   13398:	ldr	r0, [fp, #-4]
   1339c:	mov	sp, fp
   133a0:	pop	{fp, pc}
   133a4:	push	{fp, lr}
   133a8:	mov	fp, sp
   133ac:	sub	sp, sp, #8
   133b0:	str	r0, [sp, #4]
   133b4:	ldr	r0, [sp, #4]
   133b8:	movw	r1, #0
   133bc:	and	r1, r1, #255	; 0xff
   133c0:	movw	r2, #12
   133c4:	bl	11420 <memset@plt>
   133c8:	mov	sp, fp
   133cc:	pop	{fp, pc}
   133d0:	push	{fp, lr}
   133d4:	mov	fp, sp
   133d8:	sub	sp, sp, #8
   133dc:	str	r0, [sp, #4]
   133e0:	str	r1, [sp]
   133e4:	ldr	r0, [sp, #4]
   133e8:	ldr	r1, [sp]
   133ec:	movw	r2, #10
   133f0:	and	r2, r2, #255	; 0xff
   133f4:	bl	13400 <__assert_fail@plt+0x1efc>
   133f8:	mov	sp, fp
   133fc:	pop	{fp, pc}
   13400:	push	{fp, lr}
   13404:	mov	fp, sp
   13408:	sub	sp, sp, #48	; 0x30
   1340c:	str	r0, [fp, #-8]
   13410:	str	r1, [fp, #-12]
   13414:	strb	r2, [fp, #-13]
   13418:	ldr	r0, [fp, #-8]
   1341c:	ldr	r0, [r0, #8]
   13420:	str	r0, [sp, #24]
   13424:	ldr	r0, [fp, #-8]
   13428:	ldr	r0, [r0, #8]
   1342c:	str	r0, [sp, #20]
   13430:	ldr	r0, [sp, #24]
   13434:	ldr	r1, [fp, #-8]
   13438:	ldr	r1, [r1]
   1343c:	add	r0, r0, r1
   13440:	str	r0, [sp, #16]
   13444:	ldr	r0, [fp, #-12]
   13448:	bl	114ec <feof_unlocked@plt>
   1344c:	cmp	r0, #0
   13450:	beq	13460 <__assert_fail@plt+0x1f5c>
   13454:	movw	r0, #0
   13458:	str	r0, [fp, #-4]
   1345c:	b	13580 <__assert_fail@plt+0x207c>
   13460:	b	13464 <__assert_fail@plt+0x1f60>
   13464:	ldr	r0, [fp, #-12]
   13468:	bl	11300 <getc_unlocked@plt>
   1346c:	str	r0, [fp, #-20]	; 0xffffffec
   13470:	ldr	r0, [fp, #-20]	; 0xffffffec
   13474:	cmn	r0, #1
   13478:	bne	134d0 <__assert_fail@plt+0x1fcc>
   1347c:	ldr	r0, [sp, #20]
   13480:	ldr	r1, [sp, #24]
   13484:	cmp	r0, r1
   13488:	beq	1349c <__assert_fail@plt+0x1f98>
   1348c:	ldr	r0, [fp, #-12]
   13490:	bl	11354 <ferror_unlocked@plt>
   13494:	cmp	r0, #0
   13498:	beq	134a8 <__assert_fail@plt+0x1fa4>
   1349c:	movw	r0, #0
   134a0:	str	r0, [fp, #-4]
   134a4:	b	13580 <__assert_fail@plt+0x207c>
   134a8:	ldr	r0, [sp, #20]
   134ac:	mvn	r1, #0
   134b0:	add	r0, r0, r1
   134b4:	ldrb	r0, [r0]
   134b8:	ldrb	r1, [fp, #-13]
   134bc:	cmp	r0, r1
   134c0:	bne	134c8 <__assert_fail@plt+0x1fc4>
   134c4:	b	13564 <__assert_fail@plt+0x2060>
   134c8:	ldrb	r0, [fp, #-13]
   134cc:	str	r0, [fp, #-20]	; 0xffffffec
   134d0:	ldr	r0, [sp, #20]
   134d4:	ldr	r1, [sp, #16]
   134d8:	cmp	r0, r1
   134dc:	bne	13540 <__assert_fail@plt+0x203c>
   134e0:	ldr	r0, [fp, #-8]
   134e4:	ldr	r0, [r0]
   134e8:	str	r0, [sp, #12]
   134ec:	ldr	r0, [sp, #24]
   134f0:	ldr	r1, [fp, #-8]
   134f4:	movw	r2, #1
   134f8:	str	r2, [sp, #8]
   134fc:	mvn	r3, #0
   13500:	ldr	ip, [sp, #8]
   13504:	str	ip, [sp]
   13508:	bl	2e724 <__assert_fail@plt+0x1d220>
   1350c:	str	r0, [sp, #24]
   13510:	ldr	r0, [sp, #24]
   13514:	ldr	r1, [sp, #12]
   13518:	add	r0, r0, r1
   1351c:	str	r0, [sp, #20]
   13520:	ldr	r0, [sp, #24]
   13524:	ldr	r1, [fp, #-8]
   13528:	str	r0, [r1, #8]
   1352c:	ldr	r0, [sp, #24]
   13530:	ldr	r1, [fp, #-8]
   13534:	ldr	r1, [r1]
   13538:	add	r0, r0, r1
   1353c:	str	r0, [sp, #16]
   13540:	ldr	r0, [fp, #-20]	; 0xffffffec
   13544:	ldr	r1, [sp, #20]
   13548:	add	r2, r1, #1
   1354c:	str	r2, [sp, #20]
   13550:	strb	r0, [r1]
   13554:	ldr	r0, [fp, #-20]	; 0xffffffec
   13558:	ldrb	r1, [fp, #-13]
   1355c:	cmp	r0, r1
   13560:	bne	13464 <__assert_fail@plt+0x1f60>
   13564:	ldr	r0, [sp, #20]
   13568:	ldr	r1, [sp, #24]
   1356c:	sub	r0, r0, r1
   13570:	ldr	r1, [fp, #-8]
   13574:	str	r0, [r1, #4]
   13578:	ldr	r0, [fp, #-8]
   1357c:	str	r0, [fp, #-4]
   13580:	ldr	r0, [fp, #-4]
   13584:	mov	sp, fp
   13588:	pop	{fp, pc}
   1358c:	push	{fp, lr}
   13590:	mov	fp, sp
   13594:	sub	sp, sp, #8
   13598:	str	r0, [sp, #4]
   1359c:	ldr	r0, [sp, #4]
   135a0:	ldr	r0, [r0, #8]
   135a4:	bl	34c20 <__assert_fail@plt+0x2371c>
   135a8:	mov	sp, fp
   135ac:	pop	{fp, pc}
   135b0:	push	{fp, lr}
   135b4:	mov	fp, sp
   135b8:	sub	sp, sp, #24
   135bc:	str	r0, [fp, #-4]
   135c0:	ldr	r0, [fp, #-4]
   135c4:	movw	r1, #0
   135c8:	cmp	r0, r1
   135cc:	bne	135f0 <__assert_fail@plt+0x20ec>
   135d0:	movw	r0, #37320	; 0x91c8
   135d4:	movt	r0, #4
   135d8:	ldr	r1, [r0]
   135dc:	movw	r0, #31138	; 0x79a2
   135e0:	movt	r0, #3
   135e4:	bl	114c8 <fputs@plt>
   135e8:	str	r0, [sp, #8]
   135ec:	bl	114e0 <abort@plt>
   135f0:	ldr	r0, [fp, #-4]
   135f4:	movw	r1, #47	; 0x2f
   135f8:	bl	11480 <strrchr@plt>
   135fc:	str	r0, [fp, #-8]
   13600:	ldr	r0, [fp, #-8]
   13604:	movw	r1, #0
   13608:	cmp	r0, r1
   1360c:	beq	13620 <__assert_fail@plt+0x211c>
   13610:	ldr	r0, [fp, #-8]
   13614:	add	r0, r0, #1
   13618:	str	r0, [sp, #4]
   1361c:	b	13628 <__assert_fail@plt+0x2124>
   13620:	ldr	r0, [fp, #-4]
   13624:	str	r0, [sp, #4]
   13628:	ldr	r0, [sp, #4]
   1362c:	str	r0, [sp, #12]
   13630:	ldr	r0, [sp, #12]
   13634:	ldr	r1, [fp, #-4]
   13638:	sub	r0, r0, r1
   1363c:	cmp	r0, #7
   13640:	blt	136ac <__assert_fail@plt+0x21a8>
   13644:	ldr	r0, [sp, #12]
   13648:	mvn	r1, #6
   1364c:	add	r0, r0, r1
   13650:	movw	r1, #31194	; 0x79da
   13654:	movt	r1, #3
   13658:	movw	r2, #7
   1365c:	bl	114d4 <strncmp@plt>
   13660:	cmp	r0, #0
   13664:	bne	136ac <__assert_fail@plt+0x21a8>
   13668:	ldr	r0, [sp, #12]
   1366c:	str	r0, [fp, #-4]
   13670:	ldr	r0, [sp, #12]
   13674:	movw	r1, #31202	; 0x79e2
   13678:	movt	r1, #3
   1367c:	movw	r2, #3
   13680:	bl	114d4 <strncmp@plt>
   13684:	cmp	r0, #0
   13688:	bne	136a8 <__assert_fail@plt+0x21a4>
   1368c:	ldr	r0, [sp, #12]
   13690:	add	r0, r0, #3
   13694:	str	r0, [fp, #-4]
   13698:	ldr	r0, [fp, #-4]
   1369c:	movw	r1, #37304	; 0x91b8
   136a0:	movt	r1, #4
   136a4:	str	r0, [r1]
   136a8:	b	136ac <__assert_fail@plt+0x21a8>
   136ac:	ldr	r0, [fp, #-4]
   136b0:	movw	r1, #38296	; 0x9598
   136b4:	movt	r1, #4
   136b8:	str	r0, [r1]
   136bc:	ldr	r0, [fp, #-4]
   136c0:	movw	r1, #37308	; 0x91bc
   136c4:	movt	r1, #4
   136c8:	str	r0, [r1]
   136cc:	mov	sp, fp
   136d0:	pop	{fp, pc}
   136d4:	push	{fp, lr}
   136d8:	mov	fp, sp
   136dc:	sub	sp, sp, #24
   136e0:	str	r0, [fp, #-4]
   136e4:	bl	113fc <__errno_location@plt>
   136e8:	ldr	r0, [r0]
   136ec:	str	r0, [fp, #-8]
   136f0:	ldr	r0, [fp, #-4]
   136f4:	movw	r1, #0
   136f8:	cmp	r0, r1
   136fc:	beq	1370c <__assert_fail@plt+0x2208>
   13700:	ldr	r0, [fp, #-4]
   13704:	str	r0, [sp, #8]
   13708:	b	1371c <__assert_fail@plt+0x2218>
   1370c:	movw	r0, #38300	; 0x959c
   13710:	movt	r0, #4
   13714:	str	r0, [sp, #8]
   13718:	b	1371c <__assert_fail@plt+0x2218>
   1371c:	ldr	r0, [sp, #8]
   13720:	movw	r1, #48	; 0x30
   13724:	bl	310a8 <__assert_fail@plt+0x1fba4>
   13728:	str	r0, [sp, #12]
   1372c:	ldr	r0, [fp, #-8]
   13730:	str	r0, [sp, #4]
   13734:	bl	113fc <__errno_location@plt>
   13738:	ldr	r1, [sp, #4]
   1373c:	str	r1, [r0]
   13740:	ldr	r0, [sp, #12]
   13744:	mov	sp, fp
   13748:	pop	{fp, pc}
   1374c:	sub	sp, sp, #8
   13750:	str	r0, [sp, #4]
   13754:	ldr	r0, [sp, #4]
   13758:	movw	r1, #0
   1375c:	cmp	r0, r1
   13760:	beq	13770 <__assert_fail@plt+0x226c>
   13764:	ldr	r0, [sp, #4]
   13768:	str	r0, [sp]
   1376c:	b	13780 <__assert_fail@plt+0x227c>
   13770:	movw	r0, #38300	; 0x959c
   13774:	movt	r0, #4
   13778:	str	r0, [sp]
   1377c:	b	13780 <__assert_fail@plt+0x227c>
   13780:	ldr	r0, [sp]
   13784:	ldr	r0, [r0]
   13788:	add	sp, sp, #8
   1378c:	bx	lr
   13790:	sub	sp, sp, #16
   13794:	str	r0, [sp, #12]
   13798:	str	r1, [sp, #8]
   1379c:	ldr	r0, [sp, #8]
   137a0:	ldr	r1, [sp, #12]
   137a4:	movw	r2, #0
   137a8:	cmp	r1, r2
   137ac:	str	r0, [sp, #4]
   137b0:	beq	137c0 <__assert_fail@plt+0x22bc>
   137b4:	ldr	r0, [sp, #12]
   137b8:	str	r0, [sp]
   137bc:	b	137d0 <__assert_fail@plt+0x22cc>
   137c0:	movw	r0, #38300	; 0x959c
   137c4:	movt	r0, #4
   137c8:	str	r0, [sp]
   137cc:	b	137d0 <__assert_fail@plt+0x22cc>
   137d0:	ldr	r0, [sp]
   137d4:	ldr	r1, [sp, #4]
   137d8:	str	r1, [r0]
   137dc:	add	sp, sp, #16
   137e0:	bx	lr
   137e4:	sub	sp, sp, #32
   137e8:	str	r0, [sp, #28]
   137ec:	strb	r1, [sp, #27]
   137f0:	str	r2, [sp, #20]
   137f4:	ldrb	r0, [sp, #27]
   137f8:	strb	r0, [sp, #19]
   137fc:	ldr	r0, [sp, #28]
   13800:	movw	r1, #0
   13804:	cmp	r0, r1
   13808:	beq	13818 <__assert_fail@plt+0x2314>
   1380c:	ldr	r0, [sp, #28]
   13810:	str	r0, [sp]
   13814:	b	13828 <__assert_fail@plt+0x2324>
   13818:	movw	r0, #38300	; 0x959c
   1381c:	movt	r0, #4
   13820:	str	r0, [sp]
   13824:	b	13828 <__assert_fail@plt+0x2324>
   13828:	ldr	r0, [sp]
   1382c:	add	r0, r0, #8
   13830:	ldrb	r1, [sp, #19]
   13834:	lsr	r1, r1, #5
   13838:	add	r0, r0, r1, lsl #2
   1383c:	str	r0, [sp, #12]
   13840:	ldrb	r0, [sp, #19]
   13844:	and	r0, r0, #31
   13848:	str	r0, [sp, #8]
   1384c:	ldr	r0, [sp, #12]
   13850:	ldr	r0, [r0]
   13854:	ldr	r1, [sp, #8]
   13858:	lsr	r0, r0, r1
   1385c:	and	r0, r0, #1
   13860:	str	r0, [sp, #4]
   13864:	ldr	r0, [sp, #20]
   13868:	and	r0, r0, #1
   1386c:	ldr	r1, [sp, #4]
   13870:	eor	r0, r0, r1
   13874:	ldr	r1, [sp, #8]
   13878:	lsl	r0, r0, r1
   1387c:	ldr	r1, [sp, #12]
   13880:	ldr	r2, [r1]
   13884:	eor	r0, r2, r0
   13888:	str	r0, [r1]
   1388c:	ldr	r0, [sp, #4]
   13890:	add	sp, sp, #32
   13894:	bx	lr
   13898:	sub	sp, sp, #12
   1389c:	str	r0, [sp, #8]
   138a0:	str	r1, [sp, #4]
   138a4:	ldr	r0, [sp, #8]
   138a8:	movw	r1, #0
   138ac:	cmp	r0, r1
   138b0:	bne	138c0 <__assert_fail@plt+0x23bc>
   138b4:	movw	r0, #38300	; 0x959c
   138b8:	movt	r0, #4
   138bc:	str	r0, [sp, #8]
   138c0:	ldr	r0, [sp, #8]
   138c4:	ldr	r0, [r0, #4]
   138c8:	str	r0, [sp]
   138cc:	ldr	r0, [sp, #4]
   138d0:	ldr	r1, [sp, #8]
   138d4:	str	r0, [r1, #4]
   138d8:	ldr	r0, [sp]
   138dc:	add	sp, sp, #12
   138e0:	bx	lr
   138e4:	push	{fp, lr}
   138e8:	mov	fp, sp
   138ec:	sub	sp, sp, #16
   138f0:	str	r0, [fp, #-4]
   138f4:	str	r1, [sp, #8]
   138f8:	str	r2, [sp, #4]
   138fc:	ldr	r0, [fp, #-4]
   13900:	movw	r1, #0
   13904:	cmp	r0, r1
   13908:	bne	13918 <__assert_fail@plt+0x2414>
   1390c:	movw	r0, #38300	; 0x959c
   13910:	movt	r0, #4
   13914:	str	r0, [fp, #-4]
   13918:	ldr	r0, [fp, #-4]
   1391c:	movw	r1, #10
   13920:	str	r1, [r0]
   13924:	ldr	r0, [sp, #8]
   13928:	movw	r1, #0
   1392c:	cmp	r0, r1
   13930:	beq	13944 <__assert_fail@plt+0x2440>
   13934:	ldr	r0, [sp, #4]
   13938:	movw	r1, #0
   1393c:	cmp	r0, r1
   13940:	bne	13948 <__assert_fail@plt+0x2444>
   13944:	bl	114e0 <abort@plt>
   13948:	ldr	r0, [sp, #8]
   1394c:	ldr	r1, [fp, #-4]
   13950:	str	r0, [r1, #40]	; 0x28
   13954:	ldr	r0, [sp, #4]
   13958:	ldr	r1, [fp, #-4]
   1395c:	str	r0, [r1, #44]	; 0x2c
   13960:	mov	sp, fp
   13964:	pop	{fp, pc}
   13968:	push	{r4, r5, r6, sl, fp, lr}
   1396c:	add	fp, sp, #16
   13970:	sub	sp, sp, #56	; 0x38
   13974:	ldr	ip, [fp, #8]
   13978:	str	r0, [fp, #-20]	; 0xffffffec
   1397c:	str	r1, [fp, #-24]	; 0xffffffe8
   13980:	str	r2, [fp, #-28]	; 0xffffffe4
   13984:	str	r3, [fp, #-32]	; 0xffffffe0
   13988:	ldr	r0, [fp, #8]
   1398c:	movw	r1, #0
   13990:	cmp	r0, r1
   13994:	beq	139a4 <__assert_fail@plt+0x24a0>
   13998:	ldr	r0, [fp, #8]
   1399c:	str	r0, [sp, #24]
   139a0:	b	139b4 <__assert_fail@plt+0x24b0>
   139a4:	movw	r0, #38300	; 0x959c
   139a8:	movt	r0, #4
   139ac:	str	r0, [sp, #24]
   139b0:	b	139b4 <__assert_fail@plt+0x24b0>
   139b4:	ldr	r0, [sp, #24]
   139b8:	str	r0, [sp, #36]	; 0x24
   139bc:	bl	113fc <__errno_location@plt>
   139c0:	ldr	r0, [r0]
   139c4:	str	r0, [sp, #32]
   139c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   139cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   139d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   139d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   139d8:	ldr	ip, [sp, #36]	; 0x24
   139dc:	ldr	ip, [ip]
   139e0:	ldr	lr, [sp, #36]	; 0x24
   139e4:	ldr	lr, [lr, #4]
   139e8:	ldr	r4, [sp, #36]	; 0x24
   139ec:	add	r4, r4, #8
   139f0:	ldr	r5, [sp, #36]	; 0x24
   139f4:	ldr	r5, [r5, #40]	; 0x28
   139f8:	ldr	r6, [sp, #36]	; 0x24
   139fc:	ldr	r6, [r6, #44]	; 0x2c
   13a00:	str	ip, [sp]
   13a04:	str	lr, [sp, #4]
   13a08:	str	r4, [sp, #8]
   13a0c:	str	r5, [sp, #12]
   13a10:	str	r6, [sp, #16]
   13a14:	bl	13a3c <__assert_fail@plt+0x2538>
   13a18:	str	r0, [sp, #28]
   13a1c:	ldr	r0, [sp, #32]
   13a20:	str	r0, [sp, #20]
   13a24:	bl	113fc <__errno_location@plt>
   13a28:	ldr	r1, [sp, #20]
   13a2c:	str	r1, [r0]
   13a30:	ldr	r0, [sp, #28]
   13a34:	sub	sp, fp, #16
   13a38:	pop	{r4, r5, r6, sl, fp, pc}
   13a3c:	push	{r4, r5, r6, sl, fp, lr}
   13a40:	add	fp, sp, #16
   13a44:	sub	sp, sp, #160	; 0xa0
   13a48:	ldr	ip, [fp, #24]
   13a4c:	ldr	lr, [fp, #20]
   13a50:	ldr	r4, [fp, #16]
   13a54:	ldr	r5, [fp, #12]
   13a58:	ldr	r6, [fp, #8]
   13a5c:	str	r0, [fp, #-24]	; 0xffffffe8
   13a60:	str	r1, [fp, #-28]	; 0xffffffe4
   13a64:	str	r2, [fp, #-32]	; 0xffffffe0
   13a68:	str	r3, [fp, #-36]	; 0xffffffdc
   13a6c:	movw	r0, #0
   13a70:	str	r0, [fp, #-44]	; 0xffffffd4
   13a74:	str	r0, [fp, #-48]	; 0xffffffd0
   13a78:	str	r0, [fp, #-52]	; 0xffffffcc
   13a7c:	str	r0, [fp, #-56]	; 0xffffffc8
   13a80:	movw	r0, #0
   13a84:	strb	r0, [fp, #-57]	; 0xffffffc7
   13a88:	str	ip, [sp, #72]	; 0x48
   13a8c:	str	lr, [sp, #68]	; 0x44
   13a90:	str	r4, [sp, #64]	; 0x40
   13a94:	str	r5, [sp, #60]	; 0x3c
   13a98:	str	r6, [sp, #56]	; 0x38
   13a9c:	bl	1133c <__ctype_get_mb_cur_max@plt>
   13aa0:	cmp	r0, #1
   13aa4:	movw	r0, #0
   13aa8:	moveq	r0, #1
   13aac:	and	r0, r0, #1
   13ab0:	strb	r0, [fp, #-58]	; 0xffffffc6
   13ab4:	ldr	r0, [fp, #12]
   13ab8:	and	r0, r0, #2
   13abc:	cmp	r0, #0
   13ac0:	movw	r0, #0
   13ac4:	movne	r0, #1
   13ac8:	and	r0, r0, #1
   13acc:	strb	r0, [fp, #-59]	; 0xffffffc5
   13ad0:	movw	r0, #0
   13ad4:	strb	r0, [fp, #-60]	; 0xffffffc4
   13ad8:	strb	r0, [fp, #-61]	; 0xffffffc3
   13adc:	movw	r0, #1
   13ae0:	strb	r0, [fp, #-62]	; 0xffffffc2
   13ae4:	ldr	r0, [fp, #8]
   13ae8:	cmp	r0, #10
   13aec:	str	r0, [sp, #52]	; 0x34
   13af0:	bhi	13d18 <__assert_fail@plt+0x2814>
   13af4:	add	r0, pc, #8
   13af8:	ldr	r1, [sp, #52]	; 0x34
   13afc:	ldr	r0, [r0, r1, lsl #2]
   13b00:	mov	pc, r0
   13b04:	andeq	r3, r1, ip, lsl #26
   13b08:	andeq	r3, r1, r8, lsl #25
   13b0c:	andeq	r3, r1, r8, lsr #25
   13b10:	andeq	r3, r1, r0, lsl #25
   13b14:	muleq	r1, r0, ip
   13b18:	andeq	r3, r1, r0, asr #22
   13b1c:	andeq	r3, r1, r0, lsr fp
   13b20:	andeq	r3, r1, r4, lsr #23
   13b24:			; <UNDEFINED> instruction: 0x00013bb8
   13b28:			; <UNDEFINED> instruction: 0x00013bb8
   13b2c:			; <UNDEFINED> instruction: 0x00013bb8
   13b30:	movw	r0, #5
   13b34:	str	r0, [fp, #8]
   13b38:	movw	r0, #1
   13b3c:	strb	r0, [fp, #-59]	; 0xffffffc5
   13b40:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13b44:	tst	r0, #1
   13b48:	bne	13b84 <__assert_fail@plt+0x2680>
   13b4c:	b	13b50 <__assert_fail@plt+0x264c>
   13b50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b58:	cmp	r0, r1
   13b5c:	bcs	13b74 <__assert_fail@plt+0x2670>
   13b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13b68:	add	r0, r0, r1
   13b6c:	movw	r1, #34	; 0x22
   13b70:	strb	r1, [r0]
   13b74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b78:	add	r0, r0, #1
   13b7c:	str	r0, [fp, #-44]	; 0xffffffd4
   13b80:	b	13b84 <__assert_fail@plt+0x2680>
   13b84:	movw	r0, #1
   13b88:	strb	r0, [fp, #-57]	; 0xffffffc7
   13b8c:	movw	r0, #31282	; 0x7a32
   13b90:	movt	r0, #3
   13b94:	str	r0, [fp, #-52]	; 0xffffffcc
   13b98:	movw	r0, #1
   13b9c:	str	r0, [fp, #-56]	; 0xffffffc8
   13ba0:	b	13d1c <__assert_fail@plt+0x2818>
   13ba4:	movw	r0, #1
   13ba8:	strb	r0, [fp, #-57]	; 0xffffffc7
   13bac:	movw	r0, #0
   13bb0:	strb	r0, [fp, #-59]	; 0xffffffc5
   13bb4:	b	13d1c <__assert_fail@plt+0x2818>
   13bb8:	ldr	r0, [fp, #8]
   13bbc:	cmp	r0, #10
   13bc0:	beq	13bec <__assert_fail@plt+0x26e8>
   13bc4:	ldr	r1, [fp, #8]
   13bc8:	movw	r0, #31284	; 0x7a34
   13bcc:	movt	r0, #3
   13bd0:	bl	15c30 <__assert_fail@plt+0x472c>
   13bd4:	str	r0, [fp, #20]
   13bd8:	ldr	r1, [fp, #8]
   13bdc:	movw	r0, #31286	; 0x7a36
   13be0:	movt	r0, #3
   13be4:	bl	15c30 <__assert_fail@plt+0x472c>
   13be8:	str	r0, [fp, #24]
   13bec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13bf0:	tst	r0, #1
   13bf4:	bne	13c60 <__assert_fail@plt+0x275c>
   13bf8:	ldr	r0, [fp, #20]
   13bfc:	str	r0, [fp, #-52]	; 0xffffffcc
   13c00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13c04:	ldrsb	r0, [r0]
   13c08:	cmp	r0, #0
   13c0c:	beq	13c5c <__assert_fail@plt+0x2758>
   13c10:	b	13c14 <__assert_fail@plt+0x2710>
   13c14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c1c:	cmp	r0, r1
   13c20:	bcs	13c3c <__assert_fail@plt+0x2738>
   13c24:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13c28:	ldrb	r0, [r0]
   13c2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c30:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13c34:	add	r1, r1, r2
   13c38:	strb	r0, [r1]
   13c3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c40:	add	r0, r0, #1
   13c44:	str	r0, [fp, #-44]	; 0xffffffd4
   13c48:	b	13c4c <__assert_fail@plt+0x2748>
   13c4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13c50:	add	r0, r0, #1
   13c54:	str	r0, [fp, #-52]	; 0xffffffcc
   13c58:	b	13c00 <__assert_fail@plt+0x26fc>
   13c5c:	b	13c60 <__assert_fail@plt+0x275c>
   13c60:	movw	r0, #1
   13c64:	strb	r0, [fp, #-57]	; 0xffffffc7
   13c68:	ldr	r0, [fp, #24]
   13c6c:	str	r0, [fp, #-52]	; 0xffffffcc
   13c70:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13c74:	bl	113d8 <strlen@plt>
   13c78:	str	r0, [fp, #-56]	; 0xffffffc8
   13c7c:	b	13d1c <__assert_fail@plt+0x2818>
   13c80:	movw	r0, #1
   13c84:	strb	r0, [fp, #-57]	; 0xffffffc7
   13c88:	movw	r0, #1
   13c8c:	strb	r0, [fp, #-59]	; 0xffffffc5
   13c90:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c94:	tst	r0, #1
   13c98:	bne	13ca4 <__assert_fail@plt+0x27a0>
   13c9c:	movw	r0, #1
   13ca0:	strb	r0, [fp, #-57]	; 0xffffffc7
   13ca4:	b	13ca8 <__assert_fail@plt+0x27a4>
   13ca8:	movw	r0, #2
   13cac:	str	r0, [fp, #8]
   13cb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13cb4:	tst	r0, #1
   13cb8:	bne	13cf4 <__assert_fail@plt+0x27f0>
   13cbc:	b	13cc0 <__assert_fail@plt+0x27bc>
   13cc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cc8:	cmp	r0, r1
   13ccc:	bcs	13ce4 <__assert_fail@plt+0x27e0>
   13cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cd8:	add	r0, r0, r1
   13cdc:	movw	r1, #39	; 0x27
   13ce0:	strb	r1, [r0]
   13ce4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ce8:	add	r0, r0, #1
   13cec:	str	r0, [fp, #-44]	; 0xffffffd4
   13cf0:	b	13cf4 <__assert_fail@plt+0x27f0>
   13cf4:	movw	r0, #31286	; 0x7a36
   13cf8:	movt	r0, #3
   13cfc:	str	r0, [fp, #-52]	; 0xffffffcc
   13d00:	movw	r0, #1
   13d04:	str	r0, [fp, #-56]	; 0xffffffc8
   13d08:	b	13d1c <__assert_fail@plt+0x2818>
   13d0c:	movw	r0, #0
   13d10:	strb	r0, [fp, #-59]	; 0xffffffc5
   13d14:	b	13d1c <__assert_fail@plt+0x2818>
   13d18:	bl	114e0 <abort@plt>
   13d1c:	movw	r0, #0
   13d20:	str	r0, [fp, #-40]	; 0xffffffd8
   13d24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13d28:	cmn	r0, #1
   13d2c:	bne	13d58 <__assert_fail@plt+0x2854>
   13d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13d38:	add	r0, r0, r1
   13d3c:	ldrb	r0, [r0]
   13d40:	cmp	r0, #0
   13d44:	movw	r0, #0
   13d48:	moveq	r0, #1
   13d4c:	and	r0, r0, #1
   13d50:	str	r0, [sp, #48]	; 0x30
   13d54:	b	13d74 <__assert_fail@plt+0x2870>
   13d58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13d5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13d60:	cmp	r0, r1
   13d64:	movw	r0, #0
   13d68:	moveq	r0, #1
   13d6c:	and	r0, r0, #1
   13d70:	str	r0, [sp, #48]	; 0x30
   13d74:	ldr	r0, [sp, #48]	; 0x30
   13d78:	cmp	r0, #0
   13d7c:	movw	r0, #0
   13d80:	movne	r0, #1
   13d84:	mvn	r1, #0
   13d88:	eor	r0, r0, r1
   13d8c:	tst	r0, #1
   13d90:	beq	14f7c <__assert_fail@plt+0x3a78>
   13d94:	movw	r0, #0
   13d98:	strb	r0, [fp, #-65]	; 0xffffffbf
   13d9c:	strb	r0, [fp, #-66]	; 0xffffffbe
   13da0:	strb	r0, [fp, #-67]	; 0xffffffbd
   13da4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13da8:	tst	r0, #1
   13dac:	beq	13e58 <__assert_fail@plt+0x2954>
   13db0:	ldr	r0, [fp, #8]
   13db4:	cmp	r0, #2
   13db8:	beq	13e58 <__assert_fail@plt+0x2954>
   13dbc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13dc0:	cmp	r0, #0
   13dc4:	beq	13e58 <__assert_fail@plt+0x2954>
   13dc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13dcc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13dd0:	add	r0, r0, r1
   13dd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13dd8:	cmn	r1, #1
   13ddc:	str	r0, [sp, #44]	; 0x2c
   13de0:	bne	13e08 <__assert_fail@plt+0x2904>
   13de4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13de8:	movw	r1, #1
   13dec:	cmp	r1, r0
   13df0:	bcs	13e08 <__assert_fail@plt+0x2904>
   13df4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13df8:	bl	113d8 <strlen@plt>
   13dfc:	str	r0, [fp, #-36]	; 0xffffffdc
   13e00:	str	r0, [sp, #40]	; 0x28
   13e04:	b	13e10 <__assert_fail@plt+0x290c>
   13e08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e0c:	str	r0, [sp, #40]	; 0x28
   13e10:	ldr	r0, [sp, #40]	; 0x28
   13e14:	ldr	r1, [sp, #44]	; 0x2c
   13e18:	cmp	r1, r0
   13e1c:	bhi	13e58 <__assert_fail@plt+0x2954>
   13e20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e28:	add	r0, r0, r1
   13e2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13e30:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13e34:	bl	112e8 <memcmp@plt>
   13e38:	cmp	r0, #0
   13e3c:	bne	13e58 <__assert_fail@plt+0x2954>
   13e40:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13e44:	tst	r0, #1
   13e48:	beq	13e50 <__assert_fail@plt+0x294c>
   13e4c:	b	150fc <__assert_fail@plt+0x3bf8>
   13e50:	movw	r0, #1
   13e54:	strb	r0, [fp, #-65]	; 0xffffffbf
   13e58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e60:	ldrb	r0, [r0, r1]
   13e64:	strb	r0, [fp, #-63]	; 0xffffffc1
   13e68:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13e6c:	mov	r1, r0
   13e70:	cmp	r0, #126	; 0x7e
   13e74:	str	r1, [sp, #36]	; 0x24
   13e78:	bhi	146e8 <__assert_fail@plt+0x31e4>
   13e7c:	add	r0, pc, #8
   13e80:	ldr	r1, [sp, #36]	; 0x24
   13e84:	ldr	r0, [r0, r1, lsl #2]
   13e88:	mov	pc, r0
   13e8c:	andeq	r4, r1, r8, lsl #1
   13e90:	andeq	r4, r1, r8, ror #13
   13e94:	andeq	r4, r1, r8, ror #13
   13e98:	andeq	r4, r1, r8, ror #13
   13e9c:	andeq	r4, r1, r8, ror #13
   13ea0:	andeq	r4, r1, r8, ror #13
   13ea4:	andeq	r4, r1, r8, ror #13
   13ea8:	muleq	r1, r0, r4
   13eac:	muleq	r1, ip, r4
   13eb0:	andeq	r4, r1, ip, asr #9
   13eb4:			; <UNDEFINED> instruction: 0x000144b4
   13eb8:	ldrdeq	r4, [r1], -r8
   13ebc:	andeq	r4, r1, r8, lsr #9
   13ec0:	andeq	r4, r1, r0, asr #9
   13ec4:	andeq	r4, r1, r8, ror #13
   13ec8:	andeq	r4, r1, r8, ror #13
   13ecc:	andeq	r4, r1, r8, ror #13
   13ed0:	andeq	r4, r1, r8, ror #13
   13ed4:	andeq	r4, r1, r8, ror #13
   13ed8:	andeq	r4, r1, r8, ror #13
   13edc:	andeq	r4, r1, r8, ror #13
   13ee0:	andeq	r4, r1, r8, ror #13
   13ee4:	andeq	r4, r1, r8, ror #13
   13ee8:	andeq	r4, r1, r8, ror #13
   13eec:	andeq	r4, r1, r8, ror #13
   13ef0:	andeq	r4, r1, r8, ror #13
   13ef4:	andeq	r4, r1, r8, ror #13
   13ef8:	andeq	r4, r1, r8, ror #13
   13efc:	andeq	r4, r1, r8, ror #13
   13f00:	andeq	r4, r1, r8, ror #13
   13f04:	andeq	r4, r1, r8, ror #13
   13f08:	andeq	r4, r1, r8, ror #13
   13f0c:			; <UNDEFINED> instruction: 0x000145bc
   13f10:	andeq	r4, r1, r4, asr #11
   13f14:	andeq	r4, r1, r4, asr #11
   13f18:	andeq	r4, r1, r8, lsr #11
   13f1c:	andeq	r4, r1, r4, asr #11
   13f20:	ldrdeq	r4, [r1], -ip
   13f24:	andeq	r4, r1, r4, asr #11
   13f28:	andeq	r4, r1, r4, ror #11
   13f2c:	andeq	r4, r1, r4, asr #11
   13f30:	andeq	r4, r1, r4, asr #11
   13f34:	andeq	r4, r1, r4, asr #11
   13f38:	ldrdeq	r4, [r1], -ip
   13f3c:	ldrdeq	r4, [r1], -ip
   13f40:	ldrdeq	r4, [r1], -ip
   13f44:	ldrdeq	r4, [r1], -ip
   13f48:	ldrdeq	r4, [r1], -ip
   13f4c:	ldrdeq	r4, [r1], -ip
   13f50:	ldrdeq	r4, [r1], -ip
   13f54:	ldrdeq	r4, [r1], -ip
   13f58:	ldrdeq	r4, [r1], -ip
   13f5c:	ldrdeq	r4, [r1], -ip
   13f60:	ldrdeq	r4, [r1], -ip
   13f64:	ldrdeq	r4, [r1], -ip
   13f68:	ldrdeq	r4, [r1], -ip
   13f6c:	ldrdeq	r4, [r1], -ip
   13f70:	ldrdeq	r4, [r1], -ip
   13f74:	ldrdeq	r4, [r1], -ip
   13f78:	andeq	r4, r1, r4, asr #11
   13f7c:	andeq	r4, r1, r4, asr #11
   13f80:	andeq	r4, r1, r4, asr #11
   13f84:	andeq	r4, r1, r4, asr #11
   13f88:	muleq	r1, r4, r2
   13f8c:	andeq	r4, r1, r8, ror #13
   13f90:	ldrdeq	r4, [r1], -ip
   13f94:	ldrdeq	r4, [r1], -ip
   13f98:	ldrdeq	r4, [r1], -ip
   13f9c:	ldrdeq	r4, [r1], -ip
   13fa0:	ldrdeq	r4, [r1], -ip
   13fa4:	ldrdeq	r4, [r1], -ip
   13fa8:	ldrdeq	r4, [r1], -ip
   13fac:	ldrdeq	r4, [r1], -ip
   13fb0:	ldrdeq	r4, [r1], -ip
   13fb4:	ldrdeq	r4, [r1], -ip
   13fb8:	ldrdeq	r4, [r1], -ip
   13fbc:	ldrdeq	r4, [r1], -ip
   13fc0:	ldrdeq	r4, [r1], -ip
   13fc4:	ldrdeq	r4, [r1], -ip
   13fc8:	ldrdeq	r4, [r1], -ip
   13fcc:	ldrdeq	r4, [r1], -ip
   13fd0:	ldrdeq	r4, [r1], -ip
   13fd4:	ldrdeq	r4, [r1], -ip
   13fd8:	ldrdeq	r4, [r1], -ip
   13fdc:	ldrdeq	r4, [r1], -ip
   13fe0:	ldrdeq	r4, [r1], -ip
   13fe4:	ldrdeq	r4, [r1], -ip
   13fe8:	ldrdeq	r4, [r1], -ip
   13fec:	ldrdeq	r4, [r1], -ip
   13ff0:	ldrdeq	r4, [r1], -ip
   13ff4:	ldrdeq	r4, [r1], -ip
   13ff8:	andeq	r4, r1, r4, asr #11
   13ffc:	andeq	r4, r1, r4, ror #9
   14000:	ldrdeq	r4, [r1], -ip
   14004:	andeq	r4, r1, r4, asr #11
   14008:	ldrdeq	r4, [r1], -ip
   1400c:	andeq	r4, r1, r4, asr #11
   14010:	ldrdeq	r4, [r1], -ip
   14014:	ldrdeq	r4, [r1], -ip
   14018:	ldrdeq	r4, [r1], -ip
   1401c:	ldrdeq	r4, [r1], -ip
   14020:	ldrdeq	r4, [r1], -ip
   14024:	ldrdeq	r4, [r1], -ip
   14028:	ldrdeq	r4, [r1], -ip
   1402c:	ldrdeq	r4, [r1], -ip
   14030:	ldrdeq	r4, [r1], -ip
   14034:	ldrdeq	r4, [r1], -ip
   14038:	ldrdeq	r4, [r1], -ip
   1403c:	ldrdeq	r4, [r1], -ip
   14040:	ldrdeq	r4, [r1], -ip
   14044:	ldrdeq	r4, [r1], -ip
   14048:	ldrdeq	r4, [r1], -ip
   1404c:	ldrdeq	r4, [r1], -ip
   14050:	ldrdeq	r4, [r1], -ip
   14054:	ldrdeq	r4, [r1], -ip
   14058:	ldrdeq	r4, [r1], -ip
   1405c:	ldrdeq	r4, [r1], -ip
   14060:	ldrdeq	r4, [r1], -ip
   14064:	ldrdeq	r4, [r1], -ip
   14068:	ldrdeq	r4, [r1], -ip
   1406c:	ldrdeq	r4, [r1], -ip
   14070:	ldrdeq	r4, [r1], -ip
   14074:	ldrdeq	r4, [r1], -ip
   14078:	andeq	r4, r1, r4, ror r5
   1407c:	andeq	r4, r1, r4, asr #11
   14080:	andeq	r4, r1, r4, ror r5
   14084:	andeq	r4, r1, r8, lsr #11
   14088:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1408c:	tst	r0, #1
   14090:	beq	14278 <__assert_fail@plt+0x2d74>
   14094:	b	14098 <__assert_fail@plt+0x2b94>
   14098:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1409c:	tst	r0, #1
   140a0:	beq	140a8 <__assert_fail@plt+0x2ba4>
   140a4:	b	150fc <__assert_fail@plt+0x3bf8>
   140a8:	movw	r0, #1
   140ac:	strb	r0, [fp, #-66]	; 0xffffffbe
   140b0:	ldr	r0, [fp, #8]
   140b4:	cmp	r0, #2
   140b8:	bne	1416c <__assert_fail@plt+0x2c68>
   140bc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   140c0:	tst	r0, #1
   140c4:	bne	1416c <__assert_fail@plt+0x2c68>
   140c8:	b	140cc <__assert_fail@plt+0x2bc8>
   140cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   140d4:	cmp	r0, r1
   140d8:	bcs	140f0 <__assert_fail@plt+0x2bec>
   140dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   140e4:	add	r0, r0, r1
   140e8:	movw	r1, #39	; 0x27
   140ec:	strb	r1, [r0]
   140f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140f4:	add	r0, r0, #1
   140f8:	str	r0, [fp, #-44]	; 0xffffffd4
   140fc:	b	14100 <__assert_fail@plt+0x2bfc>
   14100:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14104:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14108:	cmp	r0, r1
   1410c:	bcs	14124 <__assert_fail@plt+0x2c20>
   14110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14114:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14118:	add	r0, r0, r1
   1411c:	movw	r1, #36	; 0x24
   14120:	strb	r1, [r0]
   14124:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14128:	add	r0, r0, #1
   1412c:	str	r0, [fp, #-44]	; 0xffffffd4
   14130:	b	14134 <__assert_fail@plt+0x2c30>
   14134:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14138:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1413c:	cmp	r0, r1
   14140:	bcs	14158 <__assert_fail@plt+0x2c54>
   14144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14148:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1414c:	add	r0, r0, r1
   14150:	movw	r1, #39	; 0x27
   14154:	strb	r1, [r0]
   14158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1415c:	add	r0, r0, #1
   14160:	str	r0, [fp, #-44]	; 0xffffffd4
   14164:	movw	r0, #1
   14168:	strb	r0, [fp, #-60]	; 0xffffffc4
   1416c:	b	14170 <__assert_fail@plt+0x2c6c>
   14170:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14174:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14178:	cmp	r0, r1
   1417c:	bcs	14194 <__assert_fail@plt+0x2c90>
   14180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14184:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14188:	add	r0, r0, r1
   1418c:	movw	r1, #92	; 0x5c
   14190:	strb	r1, [r0]
   14194:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14198:	add	r0, r0, #1
   1419c:	str	r0, [fp, #-44]	; 0xffffffd4
   141a0:	b	141a4 <__assert_fail@plt+0x2ca0>
   141a4:	ldr	r0, [fp, #8]
   141a8:	cmp	r0, #2
   141ac:	beq	1426c <__assert_fail@plt+0x2d68>
   141b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   141b4:	add	r0, r0, #1
   141b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   141bc:	cmp	r0, r1
   141c0:	bcs	1426c <__assert_fail@plt+0x2d68>
   141c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   141c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   141cc:	add	r1, r1, #1
   141d0:	add	r0, r0, r1
   141d4:	ldrb	r0, [r0]
   141d8:	movw	r1, #48	; 0x30
   141dc:	cmp	r1, r0
   141e0:	bgt	1426c <__assert_fail@plt+0x2d68>
   141e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   141e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   141ec:	add	r1, r1, #1
   141f0:	add	r0, r0, r1
   141f4:	ldrb	r0, [r0]
   141f8:	cmp	r0, #57	; 0x39
   141fc:	bgt	1426c <__assert_fail@plt+0x2d68>
   14200:	b	14204 <__assert_fail@plt+0x2d00>
   14204:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14208:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1420c:	cmp	r0, r1
   14210:	bcs	14228 <__assert_fail@plt+0x2d24>
   14214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14218:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1421c:	add	r0, r0, r1
   14220:	movw	r1, #48	; 0x30
   14224:	strb	r1, [r0]
   14228:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1422c:	add	r0, r0, #1
   14230:	str	r0, [fp, #-44]	; 0xffffffd4
   14234:	b	14238 <__assert_fail@plt+0x2d34>
   14238:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1423c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14240:	cmp	r0, r1
   14244:	bcs	1425c <__assert_fail@plt+0x2d58>
   14248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1424c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14250:	add	r0, r0, r1
   14254:	movw	r1, #48	; 0x30
   14258:	strb	r1, [r0]
   1425c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14260:	add	r0, r0, #1
   14264:	str	r0, [fp, #-44]	; 0xffffffd4
   14268:	b	1426c <__assert_fail@plt+0x2d68>
   1426c:	movw	r0, #48	; 0x30
   14270:	strb	r0, [fp, #-63]	; 0xffffffc1
   14274:	b	14290 <__assert_fail@plt+0x2d8c>
   14278:	ldr	r0, [fp, #12]
   1427c:	and	r0, r0, #1
   14280:	cmp	r0, #0
   14284:	beq	1428c <__assert_fail@plt+0x2d88>
   14288:	b	14f6c <__assert_fail@plt+0x3a68>
   1428c:	b	14290 <__assert_fail@plt+0x2d8c>
   14290:	b	14d08 <__assert_fail@plt+0x3804>
   14294:	ldr	r0, [fp, #8]
   14298:	cmp	r0, #2
   1429c:	str	r0, [sp, #32]
   142a0:	beq	142b8 <__assert_fail@plt+0x2db4>
   142a4:	b	142a8 <__assert_fail@plt+0x2da4>
   142a8:	ldr	r0, [sp, #32]
   142ac:	cmp	r0, #5
   142b0:	beq	142cc <__assert_fail@plt+0x2dc8>
   142b4:	b	14488 <__assert_fail@plt+0x2f84>
   142b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   142bc:	tst	r0, #1
   142c0:	beq	142c8 <__assert_fail@plt+0x2dc4>
   142c4:	b	150fc <__assert_fail@plt+0x3bf8>
   142c8:	b	1448c <__assert_fail@plt+0x2f88>
   142cc:	ldr	r0, [fp, #12]
   142d0:	and	r0, r0, #4
   142d4:	cmp	r0, #0
   142d8:	beq	14484 <__assert_fail@plt+0x2f80>
   142dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   142e0:	add	r0, r0, #2
   142e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   142e8:	cmp	r0, r1
   142ec:	bcs	14484 <__assert_fail@plt+0x2f80>
   142f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   142f8:	add	r1, r1, #1
   142fc:	add	r0, r0, r1
   14300:	ldrb	r0, [r0]
   14304:	cmp	r0, #63	; 0x3f
   14308:	bne	14484 <__assert_fail@plt+0x2f80>
   1430c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14310:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14314:	add	r0, r1, r0
   14318:	ldrb	r0, [r0, #2]
   1431c:	mov	r1, r0
   14320:	cmp	r0, #33	; 0x21
   14324:	str	r1, [sp, #28]
   14328:	beq	14378 <__assert_fail@plt+0x2e74>
   1432c:	b	14330 <__assert_fail@plt+0x2e2c>
   14330:	ldr	r0, [sp, #28]
   14334:	sub	r1, r0, #39	; 0x27
   14338:	cmp	r1, #3
   1433c:	bcc	14378 <__assert_fail@plt+0x2e74>
   14340:	b	14344 <__assert_fail@plt+0x2e40>
   14344:	ldr	r0, [sp, #28]
   14348:	cmp	r0, #45	; 0x2d
   1434c:	beq	14378 <__assert_fail@plt+0x2e74>
   14350:	b	14354 <__assert_fail@plt+0x2e50>
   14354:	ldr	r0, [sp, #28]
   14358:	cmp	r0, #47	; 0x2f
   1435c:	beq	14378 <__assert_fail@plt+0x2e74>
   14360:	b	14364 <__assert_fail@plt+0x2e60>
   14364:	ldr	r0, [sp, #28]
   14368:	sub	r1, r0, #60	; 0x3c
   1436c:	cmp	r1, #2
   14370:	bhi	1447c <__assert_fail@plt+0x2f78>
   14374:	b	14378 <__assert_fail@plt+0x2e74>
   14378:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1437c:	tst	r0, #1
   14380:	beq	14388 <__assert_fail@plt+0x2e84>
   14384:	b	150fc <__assert_fail@plt+0x3bf8>
   14388:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1438c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14390:	add	r1, r1, #2
   14394:	add	r0, r0, r1
   14398:	ldrb	r0, [r0]
   1439c:	strb	r0, [fp, #-63]	; 0xffffffc1
   143a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   143a4:	add	r0, r0, #2
   143a8:	str	r0, [fp, #-40]	; 0xffffffd8
   143ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   143b4:	cmp	r0, r1
   143b8:	bcs	143d0 <__assert_fail@plt+0x2ecc>
   143bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   143c4:	add	r0, r0, r1
   143c8:	movw	r1, #63	; 0x3f
   143cc:	strb	r1, [r0]
   143d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143d4:	add	r0, r0, #1
   143d8:	str	r0, [fp, #-44]	; 0xffffffd4
   143dc:	b	143e0 <__assert_fail@plt+0x2edc>
   143e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   143e8:	cmp	r0, r1
   143ec:	bcs	14404 <__assert_fail@plt+0x2f00>
   143f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   143f8:	add	r0, r0, r1
   143fc:	movw	r1, #34	; 0x22
   14400:	strb	r1, [r0]
   14404:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14408:	add	r0, r0, #1
   1440c:	str	r0, [fp, #-44]	; 0xffffffd4
   14410:	b	14414 <__assert_fail@plt+0x2f10>
   14414:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14418:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1441c:	cmp	r0, r1
   14420:	bcs	14438 <__assert_fail@plt+0x2f34>
   14424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14428:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1442c:	add	r0, r0, r1
   14430:	movw	r1, #34	; 0x22
   14434:	strb	r1, [r0]
   14438:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1443c:	add	r0, r0, #1
   14440:	str	r0, [fp, #-44]	; 0xffffffd4
   14444:	b	14448 <__assert_fail@plt+0x2f44>
   14448:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1444c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14450:	cmp	r0, r1
   14454:	bcs	1446c <__assert_fail@plt+0x2f68>
   14458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1445c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14460:	add	r0, r0, r1
   14464:	movw	r1, #63	; 0x3f
   14468:	strb	r1, [r0]
   1446c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14470:	add	r0, r0, #1
   14474:	str	r0, [fp, #-44]	; 0xffffffd4
   14478:	b	14480 <__assert_fail@plt+0x2f7c>
   1447c:	b	14480 <__assert_fail@plt+0x2f7c>
   14480:	b	14484 <__assert_fail@plt+0x2f80>
   14484:	b	1448c <__assert_fail@plt+0x2f88>
   14488:	b	1448c <__assert_fail@plt+0x2f88>
   1448c:	b	14d08 <__assert_fail@plt+0x3804>
   14490:	movw	r0, #97	; 0x61
   14494:	strb	r0, [fp, #-64]	; 0xffffffc0
   14498:	b	14558 <__assert_fail@plt+0x3054>
   1449c:	movw	r0, #98	; 0x62
   144a0:	strb	r0, [fp, #-64]	; 0xffffffc0
   144a4:	b	14558 <__assert_fail@plt+0x3054>
   144a8:	movw	r0, #102	; 0x66
   144ac:	strb	r0, [fp, #-64]	; 0xffffffc0
   144b0:	b	14558 <__assert_fail@plt+0x3054>
   144b4:	movw	r0, #110	; 0x6e
   144b8:	strb	r0, [fp, #-64]	; 0xffffffc0
   144bc:	b	14538 <__assert_fail@plt+0x3034>
   144c0:	movw	r0, #114	; 0x72
   144c4:	strb	r0, [fp, #-64]	; 0xffffffc0
   144c8:	b	14538 <__assert_fail@plt+0x3034>
   144cc:	movw	r0, #116	; 0x74
   144d0:	strb	r0, [fp, #-64]	; 0xffffffc0
   144d4:	b	14538 <__assert_fail@plt+0x3034>
   144d8:	movw	r0, #118	; 0x76
   144dc:	strb	r0, [fp, #-64]	; 0xffffffc0
   144e0:	b	14558 <__assert_fail@plt+0x3054>
   144e4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   144e8:	strb	r0, [fp, #-64]	; 0xffffffc0
   144ec:	ldr	r0, [fp, #8]
   144f0:	cmp	r0, #2
   144f4:	bne	1450c <__assert_fail@plt+0x3008>
   144f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   144fc:	tst	r0, #1
   14500:	beq	14508 <__assert_fail@plt+0x3004>
   14504:	b	150fc <__assert_fail@plt+0x3bf8>
   14508:	b	14e90 <__assert_fail@plt+0x398c>
   1450c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14510:	tst	r0, #1
   14514:	beq	14534 <__assert_fail@plt+0x3030>
   14518:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1451c:	tst	r0, #1
   14520:	beq	14534 <__assert_fail@plt+0x3030>
   14524:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14528:	cmp	r0, #0
   1452c:	beq	14534 <__assert_fail@plt+0x3030>
   14530:	b	14e90 <__assert_fail@plt+0x398c>
   14534:	b	14538 <__assert_fail@plt+0x3034>
   14538:	ldr	r0, [fp, #8]
   1453c:	cmp	r0, #2
   14540:	bne	14554 <__assert_fail@plt+0x3050>
   14544:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14548:	tst	r0, #1
   1454c:	beq	14554 <__assert_fail@plt+0x3050>
   14550:	b	150fc <__assert_fail@plt+0x3bf8>
   14554:	b	14558 <__assert_fail@plt+0x3054>
   14558:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1455c:	tst	r0, #1
   14560:	beq	14570 <__assert_fail@plt+0x306c>
   14564:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   14568:	strb	r0, [fp, #-63]	; 0xffffffc1
   1456c:	b	14d7c <__assert_fail@plt+0x3878>
   14570:	b	14d08 <__assert_fail@plt+0x3804>
   14574:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14578:	cmn	r0, #1
   1457c:	bne	14594 <__assert_fail@plt+0x3090>
   14580:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14584:	ldrb	r0, [r0, #1]
   14588:	cmp	r0, #0
   1458c:	beq	145a4 <__assert_fail@plt+0x30a0>
   14590:	b	145a0 <__assert_fail@plt+0x309c>
   14594:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14598:	cmp	r0, #1
   1459c:	beq	145a4 <__assert_fail@plt+0x30a0>
   145a0:	b	14d08 <__assert_fail@plt+0x3804>
   145a4:	b	145a8 <__assert_fail@plt+0x30a4>
   145a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   145ac:	cmp	r0, #0
   145b0:	beq	145b8 <__assert_fail@plt+0x30b4>
   145b4:	b	14d08 <__assert_fail@plt+0x3804>
   145b8:	b	145bc <__assert_fail@plt+0x30b8>
   145bc:	movw	r0, #1
   145c0:	strb	r0, [fp, #-67]	; 0xffffffbd
   145c4:	ldr	r0, [fp, #8]
   145c8:	cmp	r0, #2
   145cc:	bne	145e0 <__assert_fail@plt+0x30dc>
   145d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   145d4:	tst	r0, #1
   145d8:	beq	145e0 <__assert_fail@plt+0x30dc>
   145dc:	b	150fc <__assert_fail@plt+0x3bf8>
   145e0:	b	14d08 <__assert_fail@plt+0x3804>
   145e4:	movw	r0, #1
   145e8:	strb	r0, [fp, #-61]	; 0xffffffc3
   145ec:	strb	r0, [fp, #-67]	; 0xffffffbd
   145f0:	ldr	r0, [fp, #8]
   145f4:	cmp	r0, #2
   145f8:	bne	146d8 <__assert_fail@plt+0x31d4>
   145fc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14600:	tst	r0, #1
   14604:	beq	1460c <__assert_fail@plt+0x3108>
   14608:	b	150fc <__assert_fail@plt+0x3bf8>
   1460c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14610:	cmp	r0, #0
   14614:	beq	14634 <__assert_fail@plt+0x3130>
   14618:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1461c:	cmp	r0, #0
   14620:	bne	14634 <__assert_fail@plt+0x3130>
   14624:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14628:	str	r0, [fp, #-48]	; 0xffffffd0
   1462c:	movw	r0, #0
   14630:	str	r0, [fp, #-28]	; 0xffffffe4
   14634:	b	14638 <__assert_fail@plt+0x3134>
   14638:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1463c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14640:	cmp	r0, r1
   14644:	bcs	1465c <__assert_fail@plt+0x3158>
   14648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1464c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14650:	add	r0, r0, r1
   14654:	movw	r1, #39	; 0x27
   14658:	strb	r1, [r0]
   1465c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14660:	add	r0, r0, #1
   14664:	str	r0, [fp, #-44]	; 0xffffffd4
   14668:	b	1466c <__assert_fail@plt+0x3168>
   1466c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14670:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14674:	cmp	r0, r1
   14678:	bcs	14690 <__assert_fail@plt+0x318c>
   1467c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14680:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14684:	add	r0, r0, r1
   14688:	movw	r1, #92	; 0x5c
   1468c:	strb	r1, [r0]
   14690:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14694:	add	r0, r0, #1
   14698:	str	r0, [fp, #-44]	; 0xffffffd4
   1469c:	b	146a0 <__assert_fail@plt+0x319c>
   146a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146a8:	cmp	r0, r1
   146ac:	bcs	146c4 <__assert_fail@plt+0x31c0>
   146b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146b8:	add	r0, r0, r1
   146bc:	movw	r1, #39	; 0x27
   146c0:	strb	r1, [r0]
   146c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146c8:	add	r0, r0, #1
   146cc:	str	r0, [fp, #-44]	; 0xffffffd4
   146d0:	movw	r0, #0
   146d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   146d8:	b	14d08 <__assert_fail@plt+0x3804>
   146dc:	movw	r0, #1
   146e0:	strb	r0, [fp, #-67]	; 0xffffffbd
   146e4:	b	14d08 <__assert_fail@plt+0x3804>
   146e8:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   146ec:	tst	r0, #1
   146f0:	beq	14730 <__assert_fail@plt+0x322c>
   146f4:	mov	r0, #1
   146f8:	str	r0, [fp, #-72]	; 0xffffffb8
   146fc:	bl	113b4 <__ctype_b_loc@plt>
   14700:	ldr	r0, [r0]
   14704:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14708:	mov	r2, r1
   1470c:	add	r0, r0, r1, lsl #1
   14710:	ldrh	r0, [r0]
   14714:	and	r0, r0, #16384	; 0x4000
   14718:	cmp	r0, #0
   1471c:	movw	r0, #0
   14720:	movne	r0, #1
   14724:	and	r0, r0, #1
   14728:	strb	r0, [fp, #-73]	; 0xffffffb7
   1472c:	b	149bc <__assert_fail@plt+0x34b8>
   14730:	sub	r0, fp, #84	; 0x54
   14734:	movw	r1, #0
   14738:	and	r1, r1, #255	; 0xff
   1473c:	movw	r2, #8
   14740:	bl	11420 <memset@plt>
   14744:	movw	r0, #0
   14748:	str	r0, [fp, #-72]	; 0xffffffb8
   1474c:	movw	r0, #1
   14750:	strb	r0, [fp, #-73]	; 0xffffffb7
   14754:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14758:	cmn	r0, #1
   1475c:	bne	1476c <__assert_fail@plt+0x3268>
   14760:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14764:	bl	113d8 <strlen@plt>
   14768:	str	r0, [fp, #-36]	; 0xffffffdc
   1476c:	b	14770 <__assert_fail@plt+0x326c>
   14770:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14774:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14778:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1477c:	add	r1, r1, r2
   14780:	add	r1, r0, r1
   14784:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14788:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1478c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14790:	add	r2, r2, r3
   14794:	sub	r2, r0, r2
   14798:	add	r0, sp, #88	; 0x58
   1479c:	sub	r3, fp, #84	; 0x54
   147a0:	bl	34e90 <__assert_fail@plt+0x2398c>
   147a4:	str	r0, [sp, #84]	; 0x54
   147a8:	ldr	r0, [sp, #84]	; 0x54
   147ac:	cmp	r0, #0
   147b0:	bne	147b8 <__assert_fail@plt+0x32b4>
   147b4:	b	149b8 <__assert_fail@plt+0x34b4>
   147b8:	ldr	r0, [sp, #84]	; 0x54
   147bc:	cmn	r0, #1
   147c0:	bne	147d0 <__assert_fail@plt+0x32cc>
   147c4:	movw	r0, #0
   147c8:	strb	r0, [fp, #-73]	; 0xffffffb7
   147cc:	b	149b8 <__assert_fail@plt+0x34b4>
   147d0:	ldr	r0, [sp, #84]	; 0x54
   147d4:	cmn	r0, #2
   147d8:	bne	1484c <__assert_fail@plt+0x3348>
   147dc:	movw	r0, #0
   147e0:	strb	r0, [fp, #-73]	; 0xffffffb7
   147e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147e8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   147ec:	add	r0, r0, r1
   147f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   147f4:	cmp	r0, r1
   147f8:	movw	r0, #0
   147fc:	str	r0, [sp, #24]
   14800:	bcs	1482c <__assert_fail@plt+0x3328>
   14804:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14808:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1480c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14810:	add	r1, r1, r2
   14814:	add	r0, r0, r1
   14818:	ldrb	r0, [r0]
   1481c:	cmp	r0, #0
   14820:	movw	r0, #0
   14824:	movne	r0, #1
   14828:	str	r0, [sp, #24]
   1482c:	ldr	r0, [sp, #24]
   14830:	tst	r0, #1
   14834:	beq	14848 <__assert_fail@plt+0x3344>
   14838:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1483c:	add	r0, r0, #1
   14840:	str	r0, [fp, #-72]	; 0xffffffb8
   14844:	b	147e4 <__assert_fail@plt+0x32e0>
   14848:	b	149b8 <__assert_fail@plt+0x34b4>
   1484c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14850:	tst	r0, #1
   14854:	beq	14960 <__assert_fail@plt+0x345c>
   14858:	ldr	r0, [fp, #8]
   1485c:	cmp	r0, #2
   14860:	bne	14960 <__assert_fail@plt+0x345c>
   14864:	movw	r0, #1
   14868:	str	r0, [sp, #80]	; 0x50
   1486c:	ldr	r0, [sp, #80]	; 0x50
   14870:	ldr	r1, [sp, #84]	; 0x54
   14874:	cmp	r0, r1
   14878:	bcs	1495c <__assert_fail@plt+0x3458>
   1487c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14880:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14884:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14888:	add	r1, r1, r2
   1488c:	ldr	r2, [sp, #80]	; 0x50
   14890:	add	r1, r1, r2
   14894:	ldrb	r0, [r0, r1]
   14898:	sub	r0, r0, #91	; 0x5b
   1489c:	cmp	r0, #33	; 0x21
   148a0:	str	r0, [sp, #20]
   148a4:	bhi	14944 <__assert_fail@plt+0x3440>
   148a8:	add	r0, pc, #8
   148ac:	ldr	r1, [sp, #20]
   148b0:	ldr	r0, [r0, r1, lsl #2]
   148b4:	mov	pc, r0
   148b8:	andeq	r4, r1, r0, asr #18
   148bc:	andeq	r4, r1, r0, asr #18
   148c0:	andeq	r4, r1, r4, asr #18
   148c4:	andeq	r4, r1, r0, asr #18
   148c8:	andeq	r4, r1, r4, asr #18
   148cc:	andeq	r4, r1, r0, asr #18
   148d0:	andeq	r4, r1, r4, asr #18
   148d4:	andeq	r4, r1, r4, asr #18
   148d8:	andeq	r4, r1, r4, asr #18
   148dc:	andeq	r4, r1, r4, asr #18
   148e0:	andeq	r4, r1, r4, asr #18
   148e4:	andeq	r4, r1, r4, asr #18
   148e8:	andeq	r4, r1, r4, asr #18
   148ec:	andeq	r4, r1, r4, asr #18
   148f0:	andeq	r4, r1, r4, asr #18
   148f4:	andeq	r4, r1, r4, asr #18
   148f8:	andeq	r4, r1, r4, asr #18
   148fc:	andeq	r4, r1, r4, asr #18
   14900:	andeq	r4, r1, r4, asr #18
   14904:	andeq	r4, r1, r4, asr #18
   14908:	andeq	r4, r1, r4, asr #18
   1490c:	andeq	r4, r1, r4, asr #18
   14910:	andeq	r4, r1, r4, asr #18
   14914:	andeq	r4, r1, r4, asr #18
   14918:	andeq	r4, r1, r4, asr #18
   1491c:	andeq	r4, r1, r4, asr #18
   14920:	andeq	r4, r1, r4, asr #18
   14924:	andeq	r4, r1, r4, asr #18
   14928:	andeq	r4, r1, r4, asr #18
   1492c:	andeq	r4, r1, r4, asr #18
   14930:	andeq	r4, r1, r4, asr #18
   14934:	andeq	r4, r1, r4, asr #18
   14938:	andeq	r4, r1, r4, asr #18
   1493c:	andeq	r4, r1, r0, asr #18
   14940:	b	150fc <__assert_fail@plt+0x3bf8>
   14944:	b	14948 <__assert_fail@plt+0x3444>
   14948:	b	1494c <__assert_fail@plt+0x3448>
   1494c:	ldr	r0, [sp, #80]	; 0x50
   14950:	add	r0, r0, #1
   14954:	str	r0, [sp, #80]	; 0x50
   14958:	b	1486c <__assert_fail@plt+0x3368>
   1495c:	b	14960 <__assert_fail@plt+0x345c>
   14960:	ldr	r0, [sp, #88]	; 0x58
   14964:	bl	11324 <iswprint@plt>
   14968:	cmp	r0, #0
   1496c:	bne	14978 <__assert_fail@plt+0x3474>
   14970:	movw	r0, #0
   14974:	strb	r0, [fp, #-73]	; 0xffffffb7
   14978:	ldr	r0, [sp, #84]	; 0x54
   1497c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14980:	add	r0, r1, r0
   14984:	str	r0, [fp, #-72]	; 0xffffffb8
   14988:	b	1498c <__assert_fail@plt+0x3488>
   1498c:	b	14990 <__assert_fail@plt+0x348c>
   14990:	b	14994 <__assert_fail@plt+0x3490>
   14994:	sub	r0, fp, #84	; 0x54
   14998:	bl	112d0 <mbsinit@plt>
   1499c:	cmp	r0, #0
   149a0:	movw	r0, #0
   149a4:	movne	r0, #1
   149a8:	mvn	r1, #0
   149ac:	eor	r0, r0, r1
   149b0:	tst	r0, #1
   149b4:	bne	14770 <__assert_fail@plt+0x326c>
   149b8:	b	149bc <__assert_fail@plt+0x34b8>
   149bc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   149c0:	and	r0, r0, #1
   149c4:	strb	r0, [fp, #-67]	; 0xffffffbd
   149c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   149cc:	movw	r1, #1
   149d0:	cmp	r1, r0
   149d4:	bcc	149f0 <__assert_fail@plt+0x34ec>
   149d8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   149dc:	tst	r0, #1
   149e0:	beq	14d04 <__assert_fail@plt+0x3800>
   149e4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   149e8:	tst	r0, #1
   149ec:	bne	14d04 <__assert_fail@plt+0x3800>
   149f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   149f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   149f8:	add	r0, r0, r1
   149fc:	str	r0, [sp, #76]	; 0x4c
   14a00:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14a04:	tst	r0, #1
   14a08:	beq	14bb8 <__assert_fail@plt+0x36b4>
   14a0c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14a10:	tst	r0, #1
   14a14:	bne	14bb8 <__assert_fail@plt+0x36b4>
   14a18:	b	14a1c <__assert_fail@plt+0x3518>
   14a1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14a20:	tst	r0, #1
   14a24:	beq	14a2c <__assert_fail@plt+0x3528>
   14a28:	b	150fc <__assert_fail@plt+0x3bf8>
   14a2c:	movw	r0, #1
   14a30:	strb	r0, [fp, #-66]	; 0xffffffbe
   14a34:	ldr	r0, [fp, #8]
   14a38:	cmp	r0, #2
   14a3c:	bne	14af0 <__assert_fail@plt+0x35ec>
   14a40:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14a44:	tst	r0, #1
   14a48:	bne	14af0 <__assert_fail@plt+0x35ec>
   14a4c:	b	14a50 <__assert_fail@plt+0x354c>
   14a50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a58:	cmp	r0, r1
   14a5c:	bcs	14a74 <__assert_fail@plt+0x3570>
   14a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a68:	add	r0, r0, r1
   14a6c:	movw	r1, #39	; 0x27
   14a70:	strb	r1, [r0]
   14a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a78:	add	r0, r0, #1
   14a7c:	str	r0, [fp, #-44]	; 0xffffffd4
   14a80:	b	14a84 <__assert_fail@plt+0x3580>
   14a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a8c:	cmp	r0, r1
   14a90:	bcs	14aa8 <__assert_fail@plt+0x35a4>
   14a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a9c:	add	r0, r0, r1
   14aa0:	movw	r1, #36	; 0x24
   14aa4:	strb	r1, [r0]
   14aa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14aac:	add	r0, r0, #1
   14ab0:	str	r0, [fp, #-44]	; 0xffffffd4
   14ab4:	b	14ab8 <__assert_fail@plt+0x35b4>
   14ab8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14abc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ac0:	cmp	r0, r1
   14ac4:	bcs	14adc <__assert_fail@plt+0x35d8>
   14ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14acc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ad0:	add	r0, r0, r1
   14ad4:	movw	r1, #39	; 0x27
   14ad8:	strb	r1, [r0]
   14adc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ae0:	add	r0, r0, #1
   14ae4:	str	r0, [fp, #-44]	; 0xffffffd4
   14ae8:	movw	r0, #1
   14aec:	strb	r0, [fp, #-60]	; 0xffffffc4
   14af0:	b	14af4 <__assert_fail@plt+0x35f0>
   14af4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14af8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14afc:	cmp	r0, r1
   14b00:	bcs	14b18 <__assert_fail@plt+0x3614>
   14b04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b0c:	add	r0, r0, r1
   14b10:	movw	r1, #92	; 0x5c
   14b14:	strb	r1, [r0]
   14b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b1c:	add	r0, r0, #1
   14b20:	str	r0, [fp, #-44]	; 0xffffffd4
   14b24:	b	14b28 <__assert_fail@plt+0x3624>
   14b28:	b	14b2c <__assert_fail@plt+0x3628>
   14b2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b34:	cmp	r0, r1
   14b38:	bcs	14b58 <__assert_fail@plt+0x3654>
   14b3c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14b40:	asr	r0, r0, #6
   14b44:	add	r0, r0, #48	; 0x30
   14b48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14b4c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14b50:	add	r1, r1, r2
   14b54:	strb	r0, [r1]
   14b58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b5c:	add	r0, r0, #1
   14b60:	str	r0, [fp, #-44]	; 0xffffffd4
   14b64:	b	14b68 <__assert_fail@plt+0x3664>
   14b68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b70:	cmp	r0, r1
   14b74:	bcs	14b98 <__assert_fail@plt+0x3694>
   14b78:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14b7c:	asr	r0, r0, #3
   14b80:	and	r0, r0, #7
   14b84:	add	r0, r0, #48	; 0x30
   14b88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14b8c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14b90:	add	r1, r1, r2
   14b94:	strb	r0, [r1]
   14b98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b9c:	add	r0, r0, #1
   14ba0:	str	r0, [fp, #-44]	; 0xffffffd4
   14ba4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14ba8:	and	r0, r0, #7
   14bac:	add	r0, r0, #48	; 0x30
   14bb0:	strb	r0, [fp, #-63]	; 0xffffffc1
   14bb4:	b	14c04 <__assert_fail@plt+0x3700>
   14bb8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14bbc:	tst	r0, #1
   14bc0:	beq	14c00 <__assert_fail@plt+0x36fc>
   14bc4:	b	14bc8 <__assert_fail@plt+0x36c4>
   14bc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14bd0:	cmp	r0, r1
   14bd4:	bcs	14bec <__assert_fail@plt+0x36e8>
   14bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14bdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14be0:	add	r0, r0, r1
   14be4:	movw	r1, #92	; 0x5c
   14be8:	strb	r1, [r0]
   14bec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bf0:	add	r0, r0, #1
   14bf4:	str	r0, [fp, #-44]	; 0xffffffd4
   14bf8:	movw	r0, #0
   14bfc:	strb	r0, [fp, #-65]	; 0xffffffbf
   14c00:	b	14c04 <__assert_fail@plt+0x3700>
   14c04:	ldr	r0, [sp, #76]	; 0x4c
   14c08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14c0c:	add	r1, r1, #1
   14c10:	cmp	r0, r1
   14c14:	bhi	14c1c <__assert_fail@plt+0x3718>
   14c18:	b	14d00 <__assert_fail@plt+0x37fc>
   14c1c:	b	14c20 <__assert_fail@plt+0x371c>
   14c20:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14c24:	tst	r0, #1
   14c28:	beq	14ca8 <__assert_fail@plt+0x37a4>
   14c2c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14c30:	tst	r0, #1
   14c34:	bne	14ca8 <__assert_fail@plt+0x37a4>
   14c38:	b	14c3c <__assert_fail@plt+0x3738>
   14c3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c44:	cmp	r0, r1
   14c48:	bcs	14c60 <__assert_fail@plt+0x375c>
   14c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c54:	add	r0, r0, r1
   14c58:	movw	r1, #39	; 0x27
   14c5c:	strb	r1, [r0]
   14c60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c64:	add	r0, r0, #1
   14c68:	str	r0, [fp, #-44]	; 0xffffffd4
   14c6c:	b	14c70 <__assert_fail@plt+0x376c>
   14c70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c78:	cmp	r0, r1
   14c7c:	bcs	14c94 <__assert_fail@plt+0x3790>
   14c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c88:	add	r0, r0, r1
   14c8c:	movw	r1, #39	; 0x27
   14c90:	strb	r1, [r0]
   14c94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c98:	add	r0, r0, #1
   14c9c:	str	r0, [fp, #-44]	; 0xffffffd4
   14ca0:	movw	r0, #0
   14ca4:	strb	r0, [fp, #-60]	; 0xffffffc4
   14ca8:	b	14cac <__assert_fail@plt+0x37a8>
   14cac:	b	14cb0 <__assert_fail@plt+0x37ac>
   14cb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cb8:	cmp	r0, r1
   14cbc:	bcs	14cd4 <__assert_fail@plt+0x37d0>
   14cc0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14cc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14cc8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14ccc:	add	r1, r1, r2
   14cd0:	strb	r0, [r1]
   14cd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cd8:	add	r0, r0, #1
   14cdc:	str	r0, [fp, #-44]	; 0xffffffd4
   14ce0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ce4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14ce8:	add	r1, r1, #1
   14cec:	str	r1, [fp, #-40]	; 0xffffffd8
   14cf0:	add	r0, r0, r1
   14cf4:	ldrb	r0, [r0]
   14cf8:	strb	r0, [fp, #-63]	; 0xffffffc1
   14cfc:	b	14a00 <__assert_fail@plt+0x34fc>
   14d00:	b	14e90 <__assert_fail@plt+0x398c>
   14d04:	b	14d08 <__assert_fail@plt+0x3804>
   14d08:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14d0c:	tst	r0, #1
   14d10:	beq	14d20 <__assert_fail@plt+0x381c>
   14d14:	ldr	r0, [fp, #8]
   14d18:	cmp	r0, #2
   14d1c:	bne	14d2c <__assert_fail@plt+0x3828>
   14d20:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14d24:	tst	r0, #1
   14d28:	beq	14d68 <__assert_fail@plt+0x3864>
   14d2c:	ldr	r0, [fp, #16]
   14d30:	movw	r1, #0
   14d34:	cmp	r0, r1
   14d38:	beq	14d68 <__assert_fail@plt+0x3864>
   14d3c:	ldr	r0, [fp, #16]
   14d40:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14d44:	lsr	r1, r1, #5
   14d48:	add	r0, r0, r1, lsl #2
   14d4c:	ldr	r0, [r0]
   14d50:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14d54:	and	r1, r1, #31
   14d58:	lsr	r0, r0, r1
   14d5c:	and	r0, r0, #1
   14d60:	cmp	r0, #0
   14d64:	bne	14d78 <__assert_fail@plt+0x3874>
   14d68:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14d6c:	tst	r0, #1
   14d70:	bne	14d78 <__assert_fail@plt+0x3874>
   14d74:	b	14e90 <__assert_fail@plt+0x398c>
   14d78:	b	14d7c <__assert_fail@plt+0x3878>
   14d7c:	b	14d80 <__assert_fail@plt+0x387c>
   14d80:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14d84:	tst	r0, #1
   14d88:	beq	14d90 <__assert_fail@plt+0x388c>
   14d8c:	b	150fc <__assert_fail@plt+0x3bf8>
   14d90:	movw	r0, #1
   14d94:	strb	r0, [fp, #-66]	; 0xffffffbe
   14d98:	ldr	r0, [fp, #8]
   14d9c:	cmp	r0, #2
   14da0:	bne	14e54 <__assert_fail@plt+0x3950>
   14da4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14da8:	tst	r0, #1
   14dac:	bne	14e54 <__assert_fail@plt+0x3950>
   14db0:	b	14db4 <__assert_fail@plt+0x38b0>
   14db4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14db8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14dbc:	cmp	r0, r1
   14dc0:	bcs	14dd8 <__assert_fail@plt+0x38d4>
   14dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14dc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14dcc:	add	r0, r0, r1
   14dd0:	movw	r1, #39	; 0x27
   14dd4:	strb	r1, [r0]
   14dd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ddc:	add	r0, r0, #1
   14de0:	str	r0, [fp, #-44]	; 0xffffffd4
   14de4:	b	14de8 <__assert_fail@plt+0x38e4>
   14de8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14dec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14df0:	cmp	r0, r1
   14df4:	bcs	14e0c <__assert_fail@plt+0x3908>
   14df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14dfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e00:	add	r0, r0, r1
   14e04:	movw	r1, #36	; 0x24
   14e08:	strb	r1, [r0]
   14e0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e10:	add	r0, r0, #1
   14e14:	str	r0, [fp, #-44]	; 0xffffffd4
   14e18:	b	14e1c <__assert_fail@plt+0x3918>
   14e1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e24:	cmp	r0, r1
   14e28:	bcs	14e40 <__assert_fail@plt+0x393c>
   14e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e34:	add	r0, r0, r1
   14e38:	movw	r1, #39	; 0x27
   14e3c:	strb	r1, [r0]
   14e40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e44:	add	r0, r0, #1
   14e48:	str	r0, [fp, #-44]	; 0xffffffd4
   14e4c:	movw	r0, #1
   14e50:	strb	r0, [fp, #-60]	; 0xffffffc4
   14e54:	b	14e58 <__assert_fail@plt+0x3954>
   14e58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e60:	cmp	r0, r1
   14e64:	bcs	14e7c <__assert_fail@plt+0x3978>
   14e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e70:	add	r0, r0, r1
   14e74:	movw	r1, #92	; 0x5c
   14e78:	strb	r1, [r0]
   14e7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e80:	add	r0, r0, #1
   14e84:	str	r0, [fp, #-44]	; 0xffffffd4
   14e88:	b	14e8c <__assert_fail@plt+0x3988>
   14e8c:	b	14e90 <__assert_fail@plt+0x398c>
   14e90:	b	14e94 <__assert_fail@plt+0x3990>
   14e94:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14e98:	tst	r0, #1
   14e9c:	beq	14f1c <__assert_fail@plt+0x3a18>
   14ea0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14ea4:	tst	r0, #1
   14ea8:	bne	14f1c <__assert_fail@plt+0x3a18>
   14eac:	b	14eb0 <__assert_fail@plt+0x39ac>
   14eb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14eb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14eb8:	cmp	r0, r1
   14ebc:	bcs	14ed4 <__assert_fail@plt+0x39d0>
   14ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ec4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ec8:	add	r0, r0, r1
   14ecc:	movw	r1, #39	; 0x27
   14ed0:	strb	r1, [r0]
   14ed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ed8:	add	r0, r0, #1
   14edc:	str	r0, [fp, #-44]	; 0xffffffd4
   14ee0:	b	14ee4 <__assert_fail@plt+0x39e0>
   14ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ee8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14eec:	cmp	r0, r1
   14ef0:	bcs	14f08 <__assert_fail@plt+0x3a04>
   14ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ef8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14efc:	add	r0, r0, r1
   14f00:	movw	r1, #39	; 0x27
   14f04:	strb	r1, [r0]
   14f08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f0c:	add	r0, r0, #1
   14f10:	str	r0, [fp, #-44]	; 0xffffffd4
   14f14:	movw	r0, #0
   14f18:	strb	r0, [fp, #-60]	; 0xffffffc4
   14f1c:	b	14f20 <__assert_fail@plt+0x3a1c>
   14f20:	b	14f24 <__assert_fail@plt+0x3a20>
   14f24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f2c:	cmp	r0, r1
   14f30:	bcs	14f48 <__assert_fail@plt+0x3a44>
   14f34:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14f38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14f3c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14f40:	add	r1, r1, r2
   14f44:	strb	r0, [r1]
   14f48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f4c:	add	r0, r0, #1
   14f50:	str	r0, [fp, #-44]	; 0xffffffd4
   14f54:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14f58:	tst	r0, #1
   14f5c:	bne	14f68 <__assert_fail@plt+0x3a64>
   14f60:	movw	r0, #0
   14f64:	strb	r0, [fp, #-62]	; 0xffffffc2
   14f68:	b	14f6c <__assert_fail@plt+0x3a68>
   14f6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14f70:	add	r0, r0, #1
   14f74:	str	r0, [fp, #-40]	; 0xffffffd8
   14f78:	b	13d24 <__assert_fail@plt+0x2820>
   14f7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f80:	cmp	r0, #0
   14f84:	bne	14fa4 <__assert_fail@plt+0x3aa0>
   14f88:	ldr	r0, [fp, #8]
   14f8c:	cmp	r0, #2
   14f90:	bne	14fa4 <__assert_fail@plt+0x3aa0>
   14f94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14f98:	tst	r0, #1
   14f9c:	beq	14fa4 <__assert_fail@plt+0x3aa0>
   14fa0:	b	150fc <__assert_fail@plt+0x3bf8>
   14fa4:	ldr	r0, [fp, #8]
   14fa8:	cmp	r0, #2
   14fac:	bne	1504c <__assert_fail@plt+0x3b48>
   14fb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14fb4:	tst	r0, #1
   14fb8:	bne	1504c <__assert_fail@plt+0x3b48>
   14fbc:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   14fc0:	tst	r0, #1
   14fc4:	beq	1504c <__assert_fail@plt+0x3b48>
   14fc8:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   14fcc:	tst	r0, #1
   14fd0:	beq	15018 <__assert_fail@plt+0x3b14>
   14fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fd8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14fdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14fe0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14fe4:	ldr	ip, [fp, #12]
   14fe8:	ldr	lr, [fp, #16]
   14fec:	ldr	r4, [fp, #20]
   14ff0:	ldr	r5, [fp, #24]
   14ff4:	movw	r6, #5
   14ff8:	str	r6, [sp]
   14ffc:	str	ip, [sp, #4]
   15000:	str	lr, [sp, #8]
   15004:	str	r4, [sp, #12]
   15008:	str	r5, [sp, #16]
   1500c:	bl	13a3c <__assert_fail@plt+0x2538>
   15010:	str	r0, [fp, #-20]	; 0xffffffec
   15014:	b	15164 <__assert_fail@plt+0x3c60>
   15018:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1501c:	cmp	r0, #0
   15020:	bne	15044 <__assert_fail@plt+0x3b40>
   15024:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15028:	cmp	r0, #0
   1502c:	beq	15044 <__assert_fail@plt+0x3b40>
   15030:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15034:	str	r0, [fp, #-28]	; 0xffffffe4
   15038:	movw	r0, #0
   1503c:	str	r0, [fp, #-44]	; 0xffffffd4
   15040:	b	13ae4 <__assert_fail@plt+0x25e0>
   15044:	b	15048 <__assert_fail@plt+0x3b44>
   15048:	b	1504c <__assert_fail@plt+0x3b48>
   1504c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15050:	movw	r1, #0
   15054:	cmp	r0, r1
   15058:	beq	150cc <__assert_fail@plt+0x3bc8>
   1505c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15060:	tst	r0, #1
   15064:	bne	150cc <__assert_fail@plt+0x3bc8>
   15068:	b	1506c <__assert_fail@plt+0x3b68>
   1506c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15070:	ldrsb	r0, [r0]
   15074:	cmp	r0, #0
   15078:	beq	150c8 <__assert_fail@plt+0x3bc4>
   1507c:	b	15080 <__assert_fail@plt+0x3b7c>
   15080:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15084:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15088:	cmp	r0, r1
   1508c:	bcs	150a8 <__assert_fail@plt+0x3ba4>
   15090:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15094:	ldrb	r0, [r0]
   15098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1509c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   150a0:	add	r1, r1, r2
   150a4:	strb	r0, [r1]
   150a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150ac:	add	r0, r0, #1
   150b0:	str	r0, [fp, #-44]	; 0xffffffd4
   150b4:	b	150b8 <__assert_fail@plt+0x3bb4>
   150b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   150bc:	add	r0, r0, #1
   150c0:	str	r0, [fp, #-52]	; 0xffffffcc
   150c4:	b	1506c <__assert_fail@plt+0x3b68>
   150c8:	b	150cc <__assert_fail@plt+0x3bc8>
   150cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   150d4:	cmp	r0, r1
   150d8:	bcs	150f0 <__assert_fail@plt+0x3bec>
   150dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   150e4:	add	r0, r0, r1
   150e8:	movw	r1, #0
   150ec:	strb	r1, [r0]
   150f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150f4:	str	r0, [fp, #-20]	; 0xffffffec
   150f8:	b	15164 <__assert_fail@plt+0x3c60>
   150fc:	ldr	r0, [fp, #8]
   15100:	cmp	r0, #2
   15104:	bne	1511c <__assert_fail@plt+0x3c18>
   15108:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1510c:	tst	r0, #1
   15110:	beq	1511c <__assert_fail@plt+0x3c18>
   15114:	movw	r0, #4
   15118:	str	r0, [fp, #8]
   1511c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15120:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15124:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15128:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1512c:	ldr	ip, [fp, #8]
   15130:	ldr	lr, [fp, #12]
   15134:	mvn	r4, #2
   15138:	and	lr, lr, r4
   1513c:	ldr	r4, [fp, #20]
   15140:	ldr	r5, [fp, #24]
   15144:	str	ip, [sp]
   15148:	str	lr, [sp, #4]
   1514c:	movw	ip, #0
   15150:	str	ip, [sp, #8]
   15154:	str	r4, [sp, #12]
   15158:	str	r5, [sp, #16]
   1515c:	bl	13a3c <__assert_fail@plt+0x2538>
   15160:	str	r0, [fp, #-20]	; 0xffffffec
   15164:	ldr	r0, [fp, #-20]	; 0xffffffec
   15168:	sub	sp, fp, #16
   1516c:	pop	{r4, r5, r6, sl, fp, pc}
   15170:	push	{fp, lr}
   15174:	mov	fp, sp
   15178:	sub	sp, sp, #16
   1517c:	str	r0, [fp, #-4]
   15180:	str	r1, [sp, #8]
   15184:	str	r2, [sp, #4]
   15188:	ldr	r0, [fp, #-4]
   1518c:	ldr	r1, [sp, #8]
   15190:	ldr	r3, [sp, #4]
   15194:	movw	r2, #0
   15198:	bl	151a4 <__assert_fail@plt+0x3ca0>
   1519c:	mov	sp, fp
   151a0:	pop	{fp, pc}
   151a4:	push	{r4, r5, r6, sl, fp, lr}
   151a8:	add	fp, sp, #16
   151ac:	sub	sp, sp, #80	; 0x50
   151b0:	str	r0, [fp, #-20]	; 0xffffffec
   151b4:	str	r1, [fp, #-24]	; 0xffffffe8
   151b8:	str	r2, [fp, #-28]	; 0xffffffe4
   151bc:	str	r3, [fp, #-32]	; 0xffffffe0
   151c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151c4:	movw	r1, #0
   151c8:	cmp	r0, r1
   151cc:	beq	151dc <__assert_fail@plt+0x3cd8>
   151d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151d4:	str	r0, [sp, #40]	; 0x28
   151d8:	b	151ec <__assert_fail@plt+0x3ce8>
   151dc:	movw	r0, #38300	; 0x959c
   151e0:	movt	r0, #4
   151e4:	str	r0, [sp, #40]	; 0x28
   151e8:	b	151ec <__assert_fail@plt+0x3ce8>
   151ec:	ldr	r0, [sp, #40]	; 0x28
   151f0:	str	r0, [fp, #-36]	; 0xffffffdc
   151f4:	bl	113fc <__errno_location@plt>
   151f8:	ldr	r0, [r0]
   151fc:	str	r0, [fp, #-40]	; 0xffffffd8
   15200:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15204:	ldr	r0, [r0, #4]
   15208:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1520c:	movw	r2, #0
   15210:	cmp	r1, r2
   15214:	movw	r1, #0
   15218:	movne	r1, #1
   1521c:	tst	r1, #1
   15220:	mov	r1, r2
   15224:	moveq	r1, #1
   15228:	orr	r0, r0, r1
   1522c:	str	r0, [fp, #-44]	; 0xffffffd4
   15230:	ldr	r0, [fp, #-20]	; 0xffffffec
   15234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15238:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1523c:	ldr	r1, [r1]
   15240:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15244:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15248:	add	lr, lr, #8
   1524c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15250:	ldr	r4, [r4, #40]	; 0x28
   15254:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15258:	ldr	r5, [r5, #44]	; 0x2c
   1525c:	str	r0, [sp, #36]	; 0x24
   15260:	mov	r0, r2
   15264:	str	r1, [sp, #32]
   15268:	mov	r1, r2
   1526c:	ldr	r2, [sp, #36]	; 0x24
   15270:	ldr	r6, [sp, #32]
   15274:	str	r6, [sp]
   15278:	str	ip, [sp, #4]
   1527c:	str	lr, [sp, #8]
   15280:	str	r4, [sp, #12]
   15284:	str	r5, [sp, #16]
   15288:	bl	13a3c <__assert_fail@plt+0x2538>
   1528c:	add	r0, r0, #1
   15290:	str	r0, [sp, #48]	; 0x30
   15294:	ldr	r0, [sp, #48]	; 0x30
   15298:	bl	2e4e8 <__assert_fail@plt+0x1cfe4>
   1529c:	str	r0, [sp, #44]	; 0x2c
   152a0:	ldr	r0, [sp, #44]	; 0x2c
   152a4:	ldr	r1, [sp, #48]	; 0x30
   152a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   152ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152b0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   152b4:	ldr	ip, [ip]
   152b8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   152bc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   152c0:	add	r4, r4, #8
   152c4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   152c8:	ldr	r5, [r5, #40]	; 0x28
   152cc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   152d0:	ldr	r6, [r6, #44]	; 0x2c
   152d4:	str	ip, [sp]
   152d8:	str	lr, [sp, #4]
   152dc:	str	r4, [sp, #8]
   152e0:	str	r5, [sp, #12]
   152e4:	str	r6, [sp, #16]
   152e8:	bl	13a3c <__assert_fail@plt+0x2538>
   152ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   152f0:	str	r0, [sp, #28]
   152f4:	str	r1, [sp, #24]
   152f8:	bl	113fc <__errno_location@plt>
   152fc:	ldr	r1, [sp, #24]
   15300:	str	r1, [r0]
   15304:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15308:	movw	r2, #0
   1530c:	cmp	r0, r2
   15310:	beq	15324 <__assert_fail@plt+0x3e20>
   15314:	ldr	r0, [sp, #48]	; 0x30
   15318:	sub	r0, r0, #1
   1531c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15320:	str	r0, [r1]
   15324:	ldr	r0, [sp, #44]	; 0x2c
   15328:	sub	sp, fp, #16
   1532c:	pop	{r4, r5, r6, sl, fp, pc}
   15330:	push	{fp, lr}
   15334:	mov	fp, sp
   15338:	sub	sp, sp, #8
   1533c:	movw	r0, #37236	; 0x9174
   15340:	movt	r0, #4
   15344:	ldr	r0, [r0]
   15348:	str	r0, [sp, #4]
   1534c:	movw	r0, #1
   15350:	str	r0, [sp]
   15354:	ldr	r0, [sp]
   15358:	movw	r1, #37240	; 0x9178
   1535c:	movt	r1, #4
   15360:	ldr	r1, [r1]
   15364:	cmp	r0, r1
   15368:	bge	15390 <__assert_fail@plt+0x3e8c>
   1536c:	ldr	r0, [sp, #4]
   15370:	ldr	r1, [sp]
   15374:	add	r0, r0, r1, lsl #3
   15378:	ldr	r0, [r0, #4]
   1537c:	bl	34c20 <__assert_fail@plt+0x2371c>
   15380:	ldr	r0, [sp]
   15384:	add	r0, r0, #1
   15388:	str	r0, [sp]
   1538c:	b	15354 <__assert_fail@plt+0x3e50>
   15390:	ldr	r0, [sp, #4]
   15394:	ldr	r0, [r0, #4]
   15398:	movw	r1, #38348	; 0x95cc
   1539c:	movt	r1, #4
   153a0:	cmp	r0, r1
   153a4:	beq	153d0 <__assert_fail@plt+0x3ecc>
   153a8:	ldr	r0, [sp, #4]
   153ac:	ldr	r0, [r0, #4]
   153b0:	bl	34c20 <__assert_fail@plt+0x2371c>
   153b4:	movw	r0, #256	; 0x100
   153b8:	movw	r1, #37244	; 0x917c
   153bc:	movt	r1, #4
   153c0:	str	r0, [r1]
   153c4:	movw	r0, #38348	; 0x95cc
   153c8:	movt	r0, #4
   153cc:	str	r0, [r1, #4]
   153d0:	ldr	r0, [sp, #4]
   153d4:	movw	r1, #37244	; 0x917c
   153d8:	movt	r1, #4
   153dc:	cmp	r0, r1
   153e0:	beq	15400 <__assert_fail@plt+0x3efc>
   153e4:	ldr	r0, [sp, #4]
   153e8:	bl	34c20 <__assert_fail@plt+0x2371c>
   153ec:	movw	r0, #37236	; 0x9174
   153f0:	movt	r0, #4
   153f4:	movw	r1, #37244	; 0x917c
   153f8:	movt	r1, #4
   153fc:	str	r1, [r0]
   15400:	movw	r0, #37240	; 0x9178
   15404:	movt	r0, #4
   15408:	movw	r1, #1
   1540c:	str	r1, [r0]
   15410:	mov	sp, fp
   15414:	pop	{fp, pc}
   15418:	push	{fp, lr}
   1541c:	mov	fp, sp
   15420:	sub	sp, sp, #8
   15424:	str	r0, [sp, #4]
   15428:	str	r1, [sp]
   1542c:	ldr	r0, [sp, #4]
   15430:	ldr	r1, [sp]
   15434:	mvn	r2, #0
   15438:	movw	r3, #38300	; 0x959c
   1543c:	movt	r3, #4
   15440:	bl	1544c <__assert_fail@plt+0x3f48>
   15444:	mov	sp, fp
   15448:	pop	{fp, pc}
   1544c:	push	{r4, r5, r6, sl, fp, lr}
   15450:	add	fp, sp, #16
   15454:	sub	sp, sp, #80	; 0x50
   15458:	str	r0, [fp, #-20]	; 0xffffffec
   1545c:	str	r1, [fp, #-24]	; 0xffffffe8
   15460:	str	r2, [fp, #-28]	; 0xffffffe4
   15464:	str	r3, [fp, #-32]	; 0xffffffe0
   15468:	bl	113fc <__errno_location@plt>
   1546c:	ldr	r1, [pc, #672]	; 15714 <__assert_fail@plt+0x4210>
   15470:	ldr	r0, [r0]
   15474:	str	r0, [fp, #-36]	; 0xffffffdc
   15478:	movw	r0, #37236	; 0x9174
   1547c:	movt	r0, #4
   15480:	ldr	r0, [r0]
   15484:	str	r0, [fp, #-40]	; 0xffffffd8
   15488:	str	r1, [fp, #-44]	; 0xffffffd4
   1548c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15490:	movw	r1, #0
   15494:	cmp	r1, r0
   15498:	bgt	154ac <__assert_fail@plt+0x3fa8>
   1549c:	ldr	r0, [fp, #-20]	; 0xffffffec
   154a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154a4:	cmp	r0, r1
   154a8:	blt	154b0 <__assert_fail@plt+0x3fac>
   154ac:	bl	114e0 <abort@plt>
   154b0:	movw	r0, #37240	; 0x9178
   154b4:	movt	r0, #4
   154b8:	ldr	r0, [r0]
   154bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   154c0:	cmp	r0, r1
   154c4:	bgt	155bc <__assert_fail@plt+0x40b8>
   154c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   154cc:	movw	r1, #37244	; 0x917c
   154d0:	movt	r1, #4
   154d4:	cmp	r0, r1
   154d8:	movw	r0, #0
   154dc:	moveq	r0, #1
   154e0:	and	r0, r0, #1
   154e4:	strb	r0, [fp, #-45]	; 0xffffffd3
   154e8:	movw	r0, #37240	; 0x9178
   154ec:	movt	r0, #4
   154f0:	ldr	r0, [r0]
   154f4:	str	r0, [sp, #44]	; 0x2c
   154f8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   154fc:	tst	r0, #1
   15500:	beq	15510 <__assert_fail@plt+0x400c>
   15504:	movw	r0, #0
   15508:	str	r0, [sp, #24]
   1550c:	b	15518 <__assert_fail@plt+0x4014>
   15510:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15514:	str	r0, [sp, #24]
   15518:	ldr	r0, [sp, #24]
   1551c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15520:	movw	r2, #37240	; 0x9178
   15524:	movt	r2, #4
   15528:	ldr	r2, [r2]
   1552c:	sub	r1, r1, r2
   15530:	add	r2, r1, #1
   15534:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15538:	add	r1, sp, #44	; 0x2c
   1553c:	movw	ip, #8
   15540:	str	ip, [sp]
   15544:	bl	2e724 <__assert_fail@plt+0x1d220>
   15548:	str	r0, [fp, #-40]	; 0xffffffd8
   1554c:	movw	r1, #37236	; 0x9174
   15550:	movt	r1, #4
   15554:	str	r0, [r1]
   15558:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1555c:	tst	r0, #1
   15560:	beq	15580 <__assert_fail@plt+0x407c>
   15564:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15568:	movw	r1, #37244	; 0x917c
   1556c:	movt	r1, #4
   15570:	ldr	r2, [r1]
   15574:	str	r2, [r0]
   15578:	ldr	r1, [r1, #4]
   1557c:	str	r1, [r0, #4]
   15580:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15584:	movw	r1, #37240	; 0x9178
   15588:	movt	r1, #4
   1558c:	ldr	r1, [r1]
   15590:	add	r0, r0, r1, lsl #3
   15594:	ldr	r2, [sp, #44]	; 0x2c
   15598:	sub	r1, r2, r1
   1559c:	lsl	r2, r1, #3
   155a0:	movw	r1, #0
   155a4:	and	r1, r1, #255	; 0xff
   155a8:	bl	11420 <memset@plt>
   155ac:	ldr	r0, [sp, #44]	; 0x2c
   155b0:	movw	r1, #37240	; 0x9178
   155b4:	movt	r1, #4
   155b8:	str	r0, [r1]
   155bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   155c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   155c4:	ldr	r0, [r0, r1, lsl #3]
   155c8:	str	r0, [sp, #40]	; 0x28
   155cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   155d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   155d4:	add	r0, r0, r1, lsl #3
   155d8:	ldr	r0, [r0, #4]
   155dc:	str	r0, [sp, #36]	; 0x24
   155e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155e4:	ldr	r0, [r0, #4]
   155e8:	orr	r0, r0, #1
   155ec:	str	r0, [sp, #32]
   155f0:	ldr	r0, [sp, #36]	; 0x24
   155f4:	ldr	r1, [sp, #40]	; 0x28
   155f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   155fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15600:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15604:	ldr	ip, [ip]
   15608:	ldr	lr, [sp, #32]
   1560c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15610:	add	r4, r4, #8
   15614:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15618:	ldr	r5, [r5, #40]	; 0x28
   1561c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15620:	ldr	r6, [r6, #44]	; 0x2c
   15624:	str	ip, [sp]
   15628:	str	lr, [sp, #4]
   1562c:	str	r4, [sp, #8]
   15630:	str	r5, [sp, #12]
   15634:	str	r6, [sp, #16]
   15638:	bl	13a3c <__assert_fail@plt+0x2538>
   1563c:	str	r0, [sp, #28]
   15640:	ldr	r0, [sp, #40]	; 0x28
   15644:	ldr	r1, [sp, #28]
   15648:	cmp	r0, r1
   1564c:	bhi	156f4 <__assert_fail@plt+0x41f0>
   15650:	ldr	r0, [sp, #28]
   15654:	add	r0, r0, #1
   15658:	str	r0, [sp, #40]	; 0x28
   1565c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15660:	ldr	r2, [fp, #-20]	; 0xffffffec
   15664:	add	r1, r1, r2, lsl #3
   15668:	str	r0, [r1]
   1566c:	ldr	r0, [sp, #36]	; 0x24
   15670:	movw	r1, #38348	; 0x95cc
   15674:	movt	r1, #4
   15678:	cmp	r0, r1
   1567c:	beq	15688 <__assert_fail@plt+0x4184>
   15680:	ldr	r0, [sp, #36]	; 0x24
   15684:	bl	34c20 <__assert_fail@plt+0x2371c>
   15688:	ldr	r0, [sp, #40]	; 0x28
   1568c:	bl	2e4e8 <__assert_fail@plt+0x1cfe4>
   15690:	mov	r1, r0
   15694:	str	r0, [sp, #36]	; 0x24
   15698:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1569c:	ldr	r2, [fp, #-20]	; 0xffffffec
   156a0:	add	r0, r0, r2, lsl #3
   156a4:	str	r1, [r0, #4]
   156a8:	ldr	r0, [sp, #36]	; 0x24
   156ac:	ldr	r1, [sp, #40]	; 0x28
   156b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   156b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   156b8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   156bc:	ldr	ip, [ip]
   156c0:	ldr	lr, [sp, #32]
   156c4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   156c8:	add	r4, r4, #8
   156cc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   156d0:	ldr	r5, [r5, #40]	; 0x28
   156d4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   156d8:	ldr	r6, [r6, #44]	; 0x2c
   156dc:	str	ip, [sp]
   156e0:	str	lr, [sp, #4]
   156e4:	str	r4, [sp, #8]
   156e8:	str	r5, [sp, #12]
   156ec:	str	r6, [sp, #16]
   156f0:	bl	13a3c <__assert_fail@plt+0x2538>
   156f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   156f8:	str	r0, [sp, #20]
   156fc:	bl	113fc <__errno_location@plt>
   15700:	ldr	r1, [sp, #20]
   15704:	str	r1, [r0]
   15708:	ldr	r0, [sp, #36]	; 0x24
   1570c:	sub	sp, fp, #16
   15710:	pop	{r4, r5, r6, sl, fp, pc}
   15714:	svcvc	0x00ffffff
   15718:	push	{fp, lr}
   1571c:	mov	fp, sp
   15720:	sub	sp, sp, #16
   15724:	str	r0, [fp, #-4]
   15728:	str	r1, [sp, #8]
   1572c:	str	r2, [sp, #4]
   15730:	ldr	r0, [fp, #-4]
   15734:	ldr	r1, [sp, #8]
   15738:	ldr	r2, [sp, #4]
   1573c:	movw	r3, #38300	; 0x959c
   15740:	movt	r3, #4
   15744:	bl	1544c <__assert_fail@plt+0x3f48>
   15748:	mov	sp, fp
   1574c:	pop	{fp, pc}
   15750:	push	{fp, lr}
   15754:	mov	fp, sp
   15758:	sub	sp, sp, #8
   1575c:	str	r0, [sp, #4]
   15760:	ldr	r1, [sp, #4]
   15764:	movw	r0, #0
   15768:	bl	15418 <__assert_fail@plt+0x3f14>
   1576c:	mov	sp, fp
   15770:	pop	{fp, pc}
   15774:	push	{fp, lr}
   15778:	mov	fp, sp
   1577c:	sub	sp, sp, #8
   15780:	str	r0, [sp, #4]
   15784:	str	r1, [sp]
   15788:	ldr	r1, [sp, #4]
   1578c:	ldr	r2, [sp]
   15790:	movw	r0, #0
   15794:	bl	15718 <__assert_fail@plt+0x4214>
   15798:	mov	sp, fp
   1579c:	pop	{fp, pc}
   157a0:	push	{fp, lr}
   157a4:	mov	fp, sp
   157a8:	sub	sp, sp, #64	; 0x40
   157ac:	str	r0, [fp, #-4]
   157b0:	str	r1, [fp, #-8]
   157b4:	str	r2, [fp, #-12]
   157b8:	ldr	r1, [fp, #-8]
   157bc:	add	r0, sp, #4
   157c0:	bl	157e0 <__assert_fail@plt+0x42dc>
   157c4:	ldr	r0, [fp, #-4]
   157c8:	ldr	r1, [fp, #-12]
   157cc:	mvn	r2, #0
   157d0:	add	r3, sp, #4
   157d4:	bl	1544c <__assert_fail@plt+0x3f48>
   157d8:	mov	sp, fp
   157dc:	pop	{fp, pc}
   157e0:	push	{fp, lr}
   157e4:	mov	fp, sp
   157e8:	sub	sp, sp, #8
   157ec:	str	r1, [sp, #4]
   157f0:	mov	r1, r0
   157f4:	str	r0, [sp]
   157f8:	mov	r0, r1
   157fc:	movw	r1, #0
   15800:	and	r1, r1, #255	; 0xff
   15804:	movw	r2, #48	; 0x30
   15808:	bl	11420 <memset@plt>
   1580c:	ldr	r0, [sp, #4]
   15810:	cmp	r0, #10
   15814:	bne	1581c <__assert_fail@plt+0x4318>
   15818:	bl	114e0 <abort@plt>
   1581c:	ldr	r0, [sp, #4]
   15820:	ldr	r1, [sp]
   15824:	str	r0, [r1]
   15828:	mov	sp, fp
   1582c:	pop	{fp, pc}
   15830:	push	{fp, lr}
   15834:	mov	fp, sp
   15838:	sub	sp, sp, #64	; 0x40
   1583c:	str	r0, [fp, #-4]
   15840:	str	r1, [fp, #-8]
   15844:	str	r2, [fp, #-12]
   15848:	str	r3, [fp, #-16]
   1584c:	ldr	r1, [fp, #-8]
   15850:	mov	r0, sp
   15854:	bl	157e0 <__assert_fail@plt+0x42dc>
   15858:	ldr	r0, [fp, #-4]
   1585c:	ldr	r1, [fp, #-12]
   15860:	ldr	r2, [fp, #-16]
   15864:	mov	r3, sp
   15868:	bl	1544c <__assert_fail@plt+0x3f48>
   1586c:	mov	sp, fp
   15870:	pop	{fp, pc}
   15874:	push	{fp, lr}
   15878:	mov	fp, sp
   1587c:	sub	sp, sp, #8
   15880:	str	r0, [sp, #4]
   15884:	str	r1, [sp]
   15888:	ldr	r1, [sp, #4]
   1588c:	ldr	r2, [sp]
   15890:	movw	r0, #0
   15894:	bl	157a0 <__assert_fail@plt+0x429c>
   15898:	mov	sp, fp
   1589c:	pop	{fp, pc}
   158a0:	push	{fp, lr}
   158a4:	mov	fp, sp
   158a8:	sub	sp, sp, #16
   158ac:	str	r0, [fp, #-4]
   158b0:	str	r1, [sp, #8]
   158b4:	str	r2, [sp, #4]
   158b8:	ldr	r1, [fp, #-4]
   158bc:	ldr	r2, [sp, #8]
   158c0:	ldr	r3, [sp, #4]
   158c4:	movw	r0, #0
   158c8:	bl	15830 <__assert_fail@plt+0x432c>
   158cc:	mov	sp, fp
   158d0:	pop	{fp, pc}
   158d4:	push	{fp, lr}
   158d8:	mov	fp, sp
   158dc:	sub	sp, sp, #72	; 0x48
   158e0:	movw	r3, #38300	; 0x959c
   158e4:	movt	r3, #4
   158e8:	str	r0, [fp, #-4]
   158ec:	str	r1, [fp, #-8]
   158f0:	strb	r2, [fp, #-9]
   158f4:	add	r0, sp, #12
   158f8:	mov	r1, r0
   158fc:	str	r0, [sp, #8]
   15900:	mov	r0, r1
   15904:	mov	r1, r3
   15908:	movw	r2, #48	; 0x30
   1590c:	bl	112a0 <memcpy@plt>
   15910:	ldr	r0, [sp, #8]
   15914:	ldrb	r1, [fp, #-9]
   15918:	movw	r2, #1
   1591c:	bl	137e4 <__assert_fail@plt+0x22e0>
   15920:	ldr	r1, [fp, #-4]
   15924:	ldr	r2, [fp, #-8]
   15928:	movw	r3, #0
   1592c:	str	r0, [sp, #4]
   15930:	mov	r0, r3
   15934:	add	r3, sp, #12
   15938:	bl	1544c <__assert_fail@plt+0x3f48>
   1593c:	mov	sp, fp
   15940:	pop	{fp, pc}
   15944:	push	{fp, lr}
   15948:	mov	fp, sp
   1594c:	sub	sp, sp, #8
   15950:	str	r0, [sp, #4]
   15954:	strb	r1, [sp, #3]
   15958:	ldr	r0, [sp, #4]
   1595c:	mvn	r1, #0
   15960:	ldrb	r2, [sp, #3]
   15964:	bl	158d4 <__assert_fail@plt+0x43d0>
   15968:	mov	sp, fp
   1596c:	pop	{fp, pc}
   15970:	push	{fp, lr}
   15974:	mov	fp, sp
   15978:	sub	sp, sp, #8
   1597c:	str	r0, [sp, #4]
   15980:	ldr	r0, [sp, #4]
   15984:	movw	r1, #58	; 0x3a
   15988:	and	r1, r1, #255	; 0xff
   1598c:	bl	15944 <__assert_fail@plt+0x4440>
   15990:	mov	sp, fp
   15994:	pop	{fp, pc}
   15998:	push	{fp, lr}
   1599c:	mov	fp, sp
   159a0:	sub	sp, sp, #8
   159a4:	str	r0, [sp, #4]
   159a8:	str	r1, [sp]
   159ac:	ldr	r0, [sp, #4]
   159b0:	ldr	r1, [sp]
   159b4:	movw	r2, #58	; 0x3a
   159b8:	and	r2, r2, #255	; 0xff
   159bc:	bl	158d4 <__assert_fail@plt+0x43d0>
   159c0:	mov	sp, fp
   159c4:	pop	{fp, pc}
   159c8:	push	{fp, lr}
   159cc:	mov	fp, sp
   159d0:	sub	sp, sp, #120	; 0x78
   159d4:	str	r0, [fp, #-4]
   159d8:	str	r1, [fp, #-8]
   159dc:	str	r2, [fp, #-12]
   159e0:	ldr	r1, [fp, #-8]
   159e4:	add	r0, sp, #12
   159e8:	bl	157e0 <__assert_fail@plt+0x42dc>
   159ec:	add	r0, sp, #60	; 0x3c
   159f0:	mov	r1, r0
   159f4:	add	r2, sp, #12
   159f8:	str	r0, [sp, #8]
   159fc:	mov	r0, r1
   15a00:	mov	r1, r2
   15a04:	movw	r2, #48	; 0x30
   15a08:	bl	112a0 <memcpy@plt>
   15a0c:	ldr	r0, [sp, #8]
   15a10:	movw	r1, #58	; 0x3a
   15a14:	and	r1, r1, #255	; 0xff
   15a18:	movw	r2, #1
   15a1c:	bl	137e4 <__assert_fail@plt+0x22e0>
   15a20:	ldr	r1, [fp, #-4]
   15a24:	ldr	r2, [fp, #-12]
   15a28:	str	r0, [sp, #4]
   15a2c:	mov	r0, r1
   15a30:	mov	r1, r2
   15a34:	mvn	r2, #0
   15a38:	add	r3, sp, #60	; 0x3c
   15a3c:	bl	1544c <__assert_fail@plt+0x3f48>
   15a40:	mov	sp, fp
   15a44:	pop	{fp, pc}
   15a48:	push	{fp, lr}
   15a4c:	mov	fp, sp
   15a50:	sub	sp, sp, #24
   15a54:	str	r0, [fp, #-4]
   15a58:	str	r1, [fp, #-8]
   15a5c:	str	r2, [sp, #12]
   15a60:	str	r3, [sp, #8]
   15a64:	ldr	r0, [fp, #-4]
   15a68:	ldr	r1, [fp, #-8]
   15a6c:	ldr	r2, [sp, #12]
   15a70:	ldr	r3, [sp, #8]
   15a74:	mvn	ip, #0
   15a78:	str	ip, [sp]
   15a7c:	bl	15a88 <__assert_fail@plt+0x4584>
   15a80:	mov	sp, fp
   15a84:	pop	{fp, pc}
   15a88:	push	{fp, lr}
   15a8c:	mov	fp, sp
   15a90:	sub	sp, sp, #72	; 0x48
   15a94:	ldr	ip, [fp, #8]
   15a98:	movw	lr, #38300	; 0x959c
   15a9c:	movt	lr, #4
   15aa0:	str	r0, [fp, #-4]
   15aa4:	str	r1, [fp, #-8]
   15aa8:	str	r2, [fp, #-12]
   15aac:	str	r3, [fp, #-16]
   15ab0:	add	r0, sp, #8
   15ab4:	mov	r1, r0
   15ab8:	str	r0, [sp, #4]
   15abc:	mov	r0, r1
   15ac0:	mov	r1, lr
   15ac4:	movw	r2, #48	; 0x30
   15ac8:	str	ip, [sp]
   15acc:	bl	112a0 <memcpy@plt>
   15ad0:	ldr	r1, [fp, #-8]
   15ad4:	ldr	r2, [fp, #-12]
   15ad8:	ldr	r0, [sp, #4]
   15adc:	bl	138e4 <__assert_fail@plt+0x23e0>
   15ae0:	ldr	r0, [fp, #-4]
   15ae4:	ldr	r1, [fp, #-16]
   15ae8:	ldr	r2, [fp, #8]
   15aec:	add	r3, sp, #8
   15af0:	bl	1544c <__assert_fail@plt+0x3f48>
   15af4:	mov	sp, fp
   15af8:	pop	{fp, pc}
   15afc:	push	{fp, lr}
   15b00:	mov	fp, sp
   15b04:	sub	sp, sp, #16
   15b08:	str	r0, [fp, #-4]
   15b0c:	str	r1, [sp, #8]
   15b10:	str	r2, [sp, #4]
   15b14:	ldr	r1, [fp, #-4]
   15b18:	ldr	r2, [sp, #8]
   15b1c:	ldr	r3, [sp, #4]
   15b20:	movw	r0, #0
   15b24:	bl	15a48 <__assert_fail@plt+0x4544>
   15b28:	mov	sp, fp
   15b2c:	pop	{fp, pc}
   15b30:	push	{fp, lr}
   15b34:	mov	fp, sp
   15b38:	sub	sp, sp, #24
   15b3c:	str	r0, [fp, #-4]
   15b40:	str	r1, [fp, #-8]
   15b44:	str	r2, [sp, #12]
   15b48:	str	r3, [sp, #8]
   15b4c:	ldr	r1, [fp, #-4]
   15b50:	ldr	r2, [fp, #-8]
   15b54:	ldr	r3, [sp, #12]
   15b58:	ldr	r0, [sp, #8]
   15b5c:	movw	ip, #0
   15b60:	str	r0, [sp, #4]
   15b64:	mov	r0, ip
   15b68:	ldr	ip, [sp, #4]
   15b6c:	str	ip, [sp]
   15b70:	bl	15a88 <__assert_fail@plt+0x4584>
   15b74:	mov	sp, fp
   15b78:	pop	{fp, pc}
   15b7c:	push	{fp, lr}
   15b80:	mov	fp, sp
   15b84:	sub	sp, sp, #16
   15b88:	str	r0, [fp, #-4]
   15b8c:	str	r1, [sp, #8]
   15b90:	str	r2, [sp, #4]
   15b94:	ldr	r0, [fp, #-4]
   15b98:	ldr	r1, [sp, #8]
   15b9c:	ldr	r2, [sp, #4]
   15ba0:	movw	r3, #37252	; 0x9184
   15ba4:	movt	r3, #4
   15ba8:	bl	1544c <__assert_fail@plt+0x3f48>
   15bac:	mov	sp, fp
   15bb0:	pop	{fp, pc}
   15bb4:	push	{fp, lr}
   15bb8:	mov	fp, sp
   15bbc:	sub	sp, sp, #8
   15bc0:	str	r0, [sp, #4]
   15bc4:	str	r1, [sp]
   15bc8:	ldr	r1, [sp, #4]
   15bcc:	ldr	r2, [sp]
   15bd0:	movw	r0, #0
   15bd4:	bl	15b7c <__assert_fail@plt+0x4678>
   15bd8:	mov	sp, fp
   15bdc:	pop	{fp, pc}
   15be0:	push	{fp, lr}
   15be4:	mov	fp, sp
   15be8:	sub	sp, sp, #8
   15bec:	str	r0, [sp, #4]
   15bf0:	str	r1, [sp]
   15bf4:	ldr	r0, [sp, #4]
   15bf8:	ldr	r1, [sp]
   15bfc:	mvn	r2, #0
   15c00:	bl	15b7c <__assert_fail@plt+0x4678>
   15c04:	mov	sp, fp
   15c08:	pop	{fp, pc}
   15c0c:	push	{fp, lr}
   15c10:	mov	fp, sp
   15c14:	sub	sp, sp, #8
   15c18:	str	r0, [sp, #4]
   15c1c:	ldr	r1, [sp, #4]
   15c20:	movw	r0, #0
   15c24:	bl	15be0 <__assert_fail@plt+0x46dc>
   15c28:	mov	sp, fp
   15c2c:	pop	{fp, pc}
   15c30:	push	{fp, lr}
   15c34:	mov	fp, sp
   15c38:	sub	sp, sp, #24
   15c3c:	str	r0, [fp, #-8]
   15c40:	str	r1, [sp, #12]
   15c44:	ldr	r0, [fp, #-8]
   15c48:	bl	113cc <gettext@plt>
   15c4c:	str	r0, [sp, #8]
   15c50:	ldr	r0, [sp, #8]
   15c54:	ldr	r1, [fp, #-8]
   15c58:	cmp	r0, r1
   15c5c:	beq	15c6c <__assert_fail@plt+0x4768>
   15c60:	ldr	r0, [sp, #8]
   15c64:	str	r0, [fp, #-4]
   15c68:	b	15d38 <__assert_fail@plt+0x4834>
   15c6c:	bl	34e34 <__assert_fail@plt+0x23930>
   15c70:	str	r0, [sp, #4]
   15c74:	ldr	r0, [sp, #4]
   15c78:	movw	r1, #31288	; 0x7a38
   15c7c:	movt	r1, #3
   15c80:	bl	33660 <__assert_fail@plt+0x2215c>
   15c84:	cmp	r0, #0
   15c88:	bne	15cc0 <__assert_fail@plt+0x47bc>
   15c8c:	ldr	r0, [fp, #-8]
   15c90:	ldrb	r0, [r0]
   15c94:	cmp	r0, #96	; 0x60
   15c98:	movw	r0, #0
   15c9c:	moveq	r0, #1
   15ca0:	tst	r0, #1
   15ca4:	movw	r0, #31298	; 0x7a42
   15ca8:	movt	r0, #3
   15cac:	movw	r1, #31294	; 0x7a3e
   15cb0:	movt	r1, #3
   15cb4:	movne	r0, r1
   15cb8:	str	r0, [fp, #-4]
   15cbc:	b	15d38 <__assert_fail@plt+0x4834>
   15cc0:	ldr	r0, [sp, #4]
   15cc4:	movw	r1, #31302	; 0x7a46
   15cc8:	movt	r1, #3
   15ccc:	bl	33660 <__assert_fail@plt+0x2215c>
   15cd0:	cmp	r0, #0
   15cd4:	bne	15d0c <__assert_fail@plt+0x4808>
   15cd8:	ldr	r0, [fp, #-8]
   15cdc:	ldrb	r0, [r0]
   15ce0:	cmp	r0, #96	; 0x60
   15ce4:	movw	r0, #0
   15ce8:	moveq	r0, #1
   15cec:	tst	r0, #1
   15cf0:	movw	r0, #31314	; 0x7a52
   15cf4:	movt	r0, #3
   15cf8:	movw	r1, #31310	; 0x7a4e
   15cfc:	movt	r1, #3
   15d00:	movne	r0, r1
   15d04:	str	r0, [fp, #-4]
   15d08:	b	15d38 <__assert_fail@plt+0x4834>
   15d0c:	ldr	r0, [sp, #12]
   15d10:	cmp	r0, #9
   15d14:	movw	r0, #0
   15d18:	moveq	r0, #1
   15d1c:	tst	r0, #1
   15d20:	movw	r0, #31286	; 0x7a36
   15d24:	movt	r0, #3
   15d28:	movw	r1, #31282	; 0x7a32
   15d2c:	movt	r1, #3
   15d30:	movne	r0, r1
   15d34:	str	r0, [fp, #-4]
   15d38:	ldr	r0, [fp, #-4]
   15d3c:	mov	sp, fp
   15d40:	pop	{fp, pc}
   15d44:	push	{fp, lr}
   15d48:	mov	fp, sp
   15d4c:	sub	sp, sp, #24
   15d50:	str	r0, [fp, #-8]
   15d54:	str	r1, [sp, #12]
   15d58:	str	r2, [sp, #8]
   15d5c:	movw	r0, #38604	; 0x96cc
   15d60:	movt	r0, #4
   15d64:	ldr	r0, [r0]
   15d68:	and	r0, r0, #33554432	; 0x2000000
   15d6c:	ldr	r1, [sp, #8]
   15d70:	ldrb	r2, [r1, #28]
   15d74:	and	r2, r2, #239	; 0xef
   15d78:	orr	r0, r2, r0, lsr #21
   15d7c:	strb	r0, [r1, #28]
   15d80:	ldr	r0, [sp, #8]
   15d84:	ldrb	r1, [r0, #28]
   15d88:	and	r1, r1, #127	; 0x7f
   15d8c:	movw	r2, #128	; 0x80
   15d90:	orr	r1, r1, r2
   15d94:	strb	r1, [r0, #28]
   15d98:	ldr	r0, [sp, #8]
   15d9c:	ldr	r1, [fp, #-8]
   15da0:	ldr	r2, [sp, #12]
   15da4:	movw	r3, #38604	; 0x96cc
   15da8:	movt	r3, #4
   15dac:	ldr	r3, [r3]
   15db0:	bl	15e04 <__assert_fail@plt+0x4900>
   15db4:	str	r0, [sp, #4]
   15db8:	ldr	r0, [sp, #4]
   15dbc:	cmp	r0, #0
   15dc0:	bne	15dd0 <__assert_fail@plt+0x48cc>
   15dc4:	movw	r0, #0
   15dc8:	str	r0, [fp, #-4]
   15dcc:	b	15df8 <__assert_fail@plt+0x48f4>
   15dd0:	ldr	r0, [sp, #4]
   15dd4:	movw	r1, #31788	; 0x7c2c
   15dd8:	movt	r1, #3
   15ddc:	add	r0, r1, r0, lsl #2
   15de0:	ldr	r0, [r0]
   15de4:	movw	r1, #31404	; 0x7aac
   15de8:	movt	r1, #3
   15dec:	add	r0, r1, r0
   15df0:	bl	113cc <gettext@plt>
   15df4:	str	r0, [fp, #-4]
   15df8:	ldr	r0, [fp, #-4]
   15dfc:	mov	sp, fp
   15e00:	pop	{fp, pc}
   15e04:	push	{r4, sl, fp, lr}
   15e08:	add	fp, sp, #8
   15e0c:	sub	sp, sp, #136	; 0x88
   15e10:	str	r0, [fp, #-16]
   15e14:	str	r1, [fp, #-20]	; 0xffffffec
   15e18:	str	r2, [fp, #-24]	; 0xffffffe8
   15e1c:	str	r3, [fp, #-28]	; 0xffffffe4
   15e20:	mov	r0, #0
   15e24:	str	r0, [fp, #-32]	; 0xffffffe0
   15e28:	ldr	r1, [fp, #-16]
   15e2c:	ldrb	r2, [r1, #28]
   15e30:	and	r2, r2, #247	; 0xf7
   15e34:	strb	r2, [r1, #28]
   15e38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e3c:	ldr	r2, [fp, #-16]
   15e40:	str	r1, [r2, #12]
   15e44:	ldr	r1, [fp, #-16]
   15e48:	ldrb	r2, [r1, #28]
   15e4c:	and	r2, r2, #191	; 0xbf
   15e50:	strb	r2, [r1, #28]
   15e54:	ldr	r1, [fp, #-16]
   15e58:	ldrb	r2, [r1, #28]
   15e5c:	and	r2, r2, #223	; 0xdf
   15e60:	strb	r2, [r1, #28]
   15e64:	ldr	r1, [fp, #-16]
   15e68:	str	r0, [r1, #8]
   15e6c:	ldr	r1, [fp, #-16]
   15e70:	str	r0, [r1, #24]
   15e74:	ldr	r0, [fp, #-16]
   15e78:	ldrb	r1, [r0, #28]
   15e7c:	and	r1, r1, #254	; 0xfe
   15e80:	strb	r1, [r0, #28]
   15e84:	ldr	r0, [fp, #-16]
   15e88:	ldrb	r1, [r0, #28]
   15e8c:	bic	r1, r1, #6
   15e90:	strb	r1, [r0, #28]
   15e94:	ldr	r0, [fp, #-16]
   15e98:	ldr	r0, [r0]
   15e9c:	str	r0, [fp, #-36]	; 0xffffffdc
   15ea0:	ldr	r0, [fp, #-16]
   15ea4:	ldr	r0, [r0, #4]
   15ea8:	cmp	r0, #160	; 0xa0
   15eac:	bcs	15ef8 <__assert_fail@plt+0x49f4>
   15eb0:	ldr	r0, [fp, #-16]
   15eb4:	ldr	r0, [r0]
   15eb8:	movw	r1, #160	; 0xa0
   15ebc:	bl	335bc <__assert_fail@plt+0x220b8>
   15ec0:	str	r0, [fp, #-36]	; 0xffffffdc
   15ec4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ec8:	movw	r1, #0
   15ecc:	cmp	r0, r1
   15ed0:	bne	15ee0 <__assert_fail@plt+0x49dc>
   15ed4:	movw	r0, #12
   15ed8:	str	r0, [fp, #-12]
   15edc:	b	161c8 <__assert_fail@plt+0x4cc4>
   15ee0:	ldr	r0, [fp, #-16]
   15ee4:	movw	r1, #160	; 0xa0
   15ee8:	str	r1, [r0, #4]
   15eec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ef0:	ldr	r1, [fp, #-16]
   15ef4:	str	r0, [r1]
   15ef8:	ldr	r0, [fp, #-16]
   15efc:	movw	r1, #160	; 0xa0
   15f00:	str	r1, [r0, #8]
   15f04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f0c:	bl	18bb8 <__assert_fail@plt+0x76b4>
   15f10:	str	r0, [fp, #-32]	; 0xffffffe0
   15f14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f18:	cmp	r0, #0
   15f1c:	movw	r0, #0
   15f20:	str	r0, [sp, #20]
   15f24:	bne	15f88 <__assert_fail@plt+0x4a84>
   15f28:	movw	r0, #0
   15f2c:	movt	r0, #0
   15f30:	cmp	r0, #0
   15f34:	bne	15f50 <__assert_fail@plt+0x4a4c>
   15f38:	b	15f3c <__assert_fail@plt+0x4a38>
   15f3c:	movw	r0, #0
   15f40:	movt	r0, #0
   15f44:	cmp	r0, #0
   15f48:	beq	15f68 <__assert_fail@plt+0x4a64>
   15f4c:	b	15f50 <__assert_fail@plt+0x4a4c>
   15f50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f54:	add	r0, r0, #136	; 0x88
   15f58:	movw	r1, #0
   15f5c:	bl	112b8 <pthread_mutex_init@plt>
   15f60:	str	r0, [sp, #16]
   15f64:	b	15f74 <__assert_fail@plt+0x4a70>
   15f68:	movw	r0, #0
   15f6c:	str	r0, [sp, #16]
   15f70:	b	15f74 <__assert_fail@plt+0x4a70>
   15f74:	ldr	r0, [sp, #16]
   15f78:	cmp	r0, #0
   15f7c:	movw	r0, #0
   15f80:	movne	r0, #1
   15f84:	str	r0, [sp, #20]
   15f88:	ldr	r0, [sp, #20]
   15f8c:	tst	r0, #1
   15f90:	beq	15f9c <__assert_fail@plt+0x4a98>
   15f94:	movw	r0, #12
   15f98:	str	r0, [fp, #-32]	; 0xffffffe0
   15f9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fa0:	cmp	r0, #0
   15fa4:	beq	15fd0 <__assert_fail@plt+0x4acc>
   15fa8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15fac:	bl	16e08 <__assert_fail@plt+0x5904>
   15fb0:	ldr	r0, [fp, #-16]
   15fb4:	movw	r1, #0
   15fb8:	str	r1, [r0]
   15fbc:	ldr	r0, [fp, #-16]
   15fc0:	str	r1, [r0, #4]
   15fc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fc8:	str	r0, [fp, #-12]
   15fcc:	b	161c8 <__assert_fail@plt+0x4cc4>
   15fd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   15fd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15fd8:	ldr	r0, [fp, #-16]
   15fdc:	ldr	r3, [r0, #20]
   15fe0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15fe4:	and	r0, r0, #4194304	; 0x400000
   15fe8:	cmp	r0, #0
   15fec:	movw	r0, #0
   15ff0:	movne	r0, #1
   15ff4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15ff8:	add	lr, sp, #24
   15ffc:	str	r0, [sp, #12]
   16000:	mov	r0, lr
   16004:	ldr	lr, [sp, #12]
   16008:	and	r4, lr, #1
   1600c:	str	r4, [sp]
   16010:	str	ip, [sp, #4]
   16014:	bl	191c4 <__assert_fail@plt+0x7cc0>
   16018:	str	r0, [fp, #-32]	; 0xffffffe0
   1601c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16020:	cmp	r0, #0
   16024:	beq	160a0 <__assert_fail@plt+0x4b9c>
   16028:	b	1602c <__assert_fail@plt+0x4b28>
   1602c:	ldr	r0, [fp, #-16]
   16030:	bl	193d8 <__assert_fail@plt+0x7ed4>
   16034:	add	r0, sp, #24
   16038:	bl	19470 <__assert_fail@plt+0x7f6c>
   1603c:	movw	r0, #0
   16040:	movt	r0, #0
   16044:	cmp	r0, #0
   16048:	bne	16064 <__assert_fail@plt+0x4b60>
   1604c:	b	16050 <__assert_fail@plt+0x4b4c>
   16050:	movw	r0, #0
   16054:	movt	r0, #0
   16058:	cmp	r0, #0
   1605c:	beq	16074 <__assert_fail@plt+0x4b70>
   16060:	b	16064 <__assert_fail@plt+0x4b60>
   16064:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16068:	add	r0, r0, #136	; 0x88
   1606c:	bl	11258 <pthread_mutex_destroy@plt>
   16070:	b	16078 <__assert_fail@plt+0x4b74>
   16074:	b	16078 <__assert_fail@plt+0x4b74>
   16078:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1607c:	bl	16e08 <__assert_fail@plt+0x5904>
   16080:	ldr	r0, [fp, #-16]
   16084:	movw	r1, #0
   16088:	str	r1, [r0]
   1608c:	ldr	r0, [fp, #-16]
   16090:	str	r1, [r0, #4]
   16094:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16098:	str	r0, [fp, #-12]
   1609c:	b	161c8 <__assert_fail@plt+0x4cc4>
   160a0:	ldr	r0, [fp, #-16]
   160a4:	movw	r1, #0
   160a8:	str	r1, [r0, #24]
   160ac:	ldr	r1, [fp, #-16]
   160b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   160b4:	add	r0, sp, #24
   160b8:	sub	r3, fp, #32
   160bc:	bl	194bc <__assert_fail@plt+0x7fb8>
   160c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   160c4:	str	r0, [r1, #52]	; 0x34
   160c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   160cc:	ldr	r0, [r0, #52]	; 0x34
   160d0:	movw	r1, #0
   160d4:	cmp	r0, r1
   160d8:	bne	160e0 <__assert_fail@plt+0x4bdc>
   160dc:	b	1602c <__assert_fail@plt+0x4b28>
   160e0:	ldr	r0, [fp, #-16]
   160e4:	bl	19638 <__assert_fail@plt+0x8134>
   160e8:	str	r0, [fp, #-32]	; 0xffffffe0
   160ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160f0:	cmp	r0, #0
   160f4:	beq	160fc <__assert_fail@plt+0x4bf8>
   160f8:	b	1602c <__assert_fail@plt+0x4b28>
   160fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16100:	ldrb	r0, [r0, #88]	; 0x58
   16104:	ubfx	r0, r0, #2, #1
   16108:	and	r0, r0, #255	; 0xff
   1610c:	cmp	r0, #0
   16110:	beq	16140 <__assert_fail@plt+0x4c3c>
   16114:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16118:	and	r0, r0, #4194304	; 0x400000
   1611c:	cmp	r0, #0
   16120:	bne	16140 <__assert_fail@plt+0x4c3c>
   16124:	ldr	r0, [fp, #-16]
   16128:	ldr	r0, [r0, #20]
   1612c:	movw	r1, #0
   16130:	cmp	r0, r1
   16134:	bne	16140 <__assert_fail@plt+0x4c3c>
   16138:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1613c:	bl	19a0c <__assert_fail@plt+0x8508>
   16140:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16144:	bl	19d18 <__assert_fail@plt+0x8814>
   16148:	str	r0, [fp, #-32]	; 0xffffffe0
   1614c:	ldr	r0, [fp, #-16]
   16150:	bl	193d8 <__assert_fail@plt+0x7ed4>
   16154:	add	r0, sp, #24
   16158:	bl	19470 <__assert_fail@plt+0x7f6c>
   1615c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16160:	cmp	r0, #0
   16164:	beq	161c0 <__assert_fail@plt+0x4cbc>
   16168:	movw	r0, #0
   1616c:	movt	r0, #0
   16170:	cmp	r0, #0
   16174:	bne	16190 <__assert_fail@plt+0x4c8c>
   16178:	b	1617c <__assert_fail@plt+0x4c78>
   1617c:	movw	r0, #0
   16180:	movt	r0, #0
   16184:	cmp	r0, #0
   16188:	beq	161a0 <__assert_fail@plt+0x4c9c>
   1618c:	b	16190 <__assert_fail@plt+0x4c8c>
   16190:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16194:	add	r0, r0, #136	; 0x88
   16198:	bl	11258 <pthread_mutex_destroy@plt>
   1619c:	b	161a4 <__assert_fail@plt+0x4ca0>
   161a0:	b	161a4 <__assert_fail@plt+0x4ca0>
   161a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   161a8:	bl	16e08 <__assert_fail@plt+0x5904>
   161ac:	ldr	r0, [fp, #-16]
   161b0:	movw	r1, #0
   161b4:	str	r1, [r0]
   161b8:	ldr	r0, [fp, #-16]
   161bc:	str	r1, [r0, #4]
   161c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   161c4:	str	r0, [fp, #-12]
   161c8:	ldr	r0, [fp, #-12]
   161cc:	sub	sp, fp, #8
   161d0:	pop	{r4, sl, fp, pc}
   161d4:	sub	sp, sp, #8
   161d8:	str	r0, [sp, #4]
   161dc:	movw	r0, #38604	; 0x96cc
   161e0:	movt	r0, #4
   161e4:	ldr	r1, [r0]
   161e8:	str	r1, [sp]
   161ec:	ldr	r1, [sp, #4]
   161f0:	str	r1, [r0]
   161f4:	ldr	r0, [sp]
   161f8:	add	sp, sp, #8
   161fc:	bx	lr
   16200:	push	{fp, lr}
   16204:	mov	fp, sp
   16208:	sub	sp, sp, #16
   1620c:	str	r0, [fp, #-4]
   16210:	ldr	r0, [fp, #-4]
   16214:	ldr	r0, [r0]
   16218:	str	r0, [sp, #8]
   1621c:	ldr	r0, [fp, #-4]
   16220:	ldr	r0, [r0, #16]
   16224:	str	r0, [sp, #4]
   16228:	ldr	r0, [sp, #4]
   1622c:	movw	r1, #0
   16230:	and	r1, r1, #255	; 0xff
   16234:	movw	r2, #256	; 0x100
   16238:	bl	11420 <memset@plt>
   1623c:	ldr	r0, [fp, #-4]
   16240:	ldr	r1, [sp, #8]
   16244:	ldr	r1, [r1, #36]	; 0x24
   16248:	ldr	r2, [sp, #4]
   1624c:	bl	162f8 <__assert_fail@plt+0x4df4>
   16250:	ldr	r0, [sp, #8]
   16254:	ldr	r0, [r0, #36]	; 0x24
   16258:	ldr	r1, [sp, #8]
   1625c:	ldr	r1, [r1, #40]	; 0x28
   16260:	cmp	r0, r1
   16264:	beq	1627c <__assert_fail@plt+0x4d78>
   16268:	ldr	r0, [fp, #-4]
   1626c:	ldr	r1, [sp, #8]
   16270:	ldr	r1, [r1, #40]	; 0x28
   16274:	ldr	r2, [sp, #4]
   16278:	bl	162f8 <__assert_fail@plt+0x4df4>
   1627c:	ldr	r0, [sp, #8]
   16280:	ldr	r0, [r0, #36]	; 0x24
   16284:	ldr	r1, [sp, #8]
   16288:	ldr	r1, [r1, #44]	; 0x2c
   1628c:	cmp	r0, r1
   16290:	beq	162a8 <__assert_fail@plt+0x4da4>
   16294:	ldr	r0, [fp, #-4]
   16298:	ldr	r1, [sp, #8]
   1629c:	ldr	r1, [r1, #44]	; 0x2c
   162a0:	ldr	r2, [sp, #4]
   162a4:	bl	162f8 <__assert_fail@plt+0x4df4>
   162a8:	ldr	r0, [sp, #8]
   162ac:	ldr	r0, [r0, #36]	; 0x24
   162b0:	ldr	r1, [sp, #8]
   162b4:	ldr	r1, [r1, #48]	; 0x30
   162b8:	cmp	r0, r1
   162bc:	beq	162d4 <__assert_fail@plt+0x4dd0>
   162c0:	ldr	r0, [fp, #-4]
   162c4:	ldr	r1, [sp, #8]
   162c8:	ldr	r1, [r1, #48]	; 0x30
   162cc:	ldr	r2, [sp, #4]
   162d0:	bl	162f8 <__assert_fail@plt+0x4df4>
   162d4:	ldr	r0, [fp, #-4]
   162d8:	ldrb	r1, [r0, #28]
   162dc:	bic	r1, r1, #8
   162e0:	movw	r2, #8
   162e4:	orr	r1, r1, r2
   162e8:	strb	r1, [r0, #28]
   162ec:	movw	r0, #0
   162f0:	mov	sp, fp
   162f4:	pop	{fp, pc}
   162f8:	push	{r4, r5, fp, lr}
   162fc:	add	fp, sp, #8
   16300:	sub	sp, sp, #504	; 0x1f8
   16304:	str	r0, [fp, #-84]	; 0xffffffac
   16308:	str	r1, [fp, #-88]	; 0xffffffa8
   1630c:	str	r2, [fp, #-92]	; 0xffffffa4
   16310:	ldr	r0, [fp, #-84]	; 0xffffffac
   16314:	ldr	r0, [r0]
   16318:	str	r0, [fp, #-96]	; 0xffffffa0
   1631c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16320:	ldr	r0, [r0, #92]	; 0x5c
   16324:	cmp	r0, #1
   16328:	movw	r0, #0
   1632c:	str	r0, [sp, #60]	; 0x3c
   16330:	bne	16350 <__assert_fail@plt+0x4e4c>
   16334:	ldr	r0, [fp, #-84]	; 0xffffffac
   16338:	ldr	r0, [r0, #12]
   1633c:	and	r0, r0, #4194304	; 0x400000
   16340:	cmp	r0, #0
   16344:	movw	r0, #0
   16348:	movne	r0, #1
   1634c:	str	r0, [sp, #60]	; 0x3c
   16350:	ldr	r0, [sp, #60]	; 0x3c
   16354:	and	r0, r0, #1
   16358:	strb	r0, [fp, #-101]	; 0xffffff9b
   1635c:	movw	r0, #0
   16360:	str	r0, [fp, #-100]	; 0xffffff9c
   16364:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16368:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1636c:	ldr	r1, [r1, #8]
   16370:	cmp	r0, r1
   16374:	bge	16a74 <__assert_fail@plt+0x5570>
   16378:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1637c:	ldr	r0, [r0, #12]
   16380:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16384:	ldr	r0, [r0, r1, lsl #2]
   16388:	str	r0, [fp, #-108]	; 0xffffff94
   1638c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16390:	ldr	r0, [r0]
   16394:	ldr	r1, [fp, #-108]	; 0xffffff94
   16398:	add	r0, r0, r1, lsl #3
   1639c:	ldr	r0, [r0, #4]
   163a0:	and	r0, r0, #255	; 0xff
   163a4:	str	r0, [fp, #-112]	; 0xffffff90
   163a8:	ldr	r0, [fp, #-112]	; 0xffffff90
   163ac:	cmp	r0, #1
   163b0:	bne	16614 <__assert_fail@plt+0x5110>
   163b4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   163b8:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   163bc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   163c0:	ldr	r2, [r2]
   163c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   163c8:	add	r2, r2, r3, lsl #3
   163cc:	ldrb	r2, [r2]
   163d0:	str	r0, [fp, #-72]	; 0xffffffb8
   163d4:	and	r0, r1, #1
   163d8:	strb	r0, [fp, #-73]	; 0xffffffb7
   163dc:	str	r2, [fp, #-80]	; 0xffffffb0
   163e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   163e4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   163e8:	add	r0, r0, r1
   163ec:	movw	r1, #1
   163f0:	strb	r1, [r0]
   163f4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   163f8:	tst	r0, #1
   163fc:	beq	16424 <__assert_fail@plt+0x4f20>
   16400:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16404:	ldr	r1, [fp, #-80]	; 0xffffffb0
   16408:	str	r0, [sp, #56]	; 0x38
   1640c:	mov	r0, r1
   16410:	bl	112ac <tolower@plt>
   16414:	ldr	r1, [sp, #56]	; 0x38
   16418:	add	r0, r1, r0
   1641c:	movw	r1, #1
   16420:	strb	r1, [r0]
   16424:	ldr	r0, [fp, #-84]	; 0xffffffac
   16428:	ldr	r0, [r0, #12]
   1642c:	and	r0, r0, #4194304	; 0x400000
   16430:	cmp	r0, #0
   16434:	beq	16610 <__assert_fail@plt+0x510c>
   16438:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1643c:	ldr	r0, [r0, #92]	; 0x5c
   16440:	cmp	r0, #1
   16444:	ble	16610 <__assert_fail@plt+0x510c>
   16448:	sub	r0, fp, #128	; 0x80
   1644c:	str	r0, [fp, #-132]	; 0xffffff7c
   16450:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16454:	ldr	r0, [r0]
   16458:	ldr	r1, [fp, #-108]	; 0xffffff94
   1645c:	add	r0, r0, r1, lsl #3
   16460:	ldrb	r0, [r0]
   16464:	ldr	r1, [fp, #-132]	; 0xffffff7c
   16468:	add	r2, r1, #1
   1646c:	str	r2, [fp, #-132]	; 0xffffff7c
   16470:	strb	r0, [r1]
   16474:	ldr	r0, [fp, #-108]	; 0xffffff94
   16478:	add	r0, r0, #1
   1647c:	str	r0, [fp, #-108]	; 0xffffff94
   16480:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16484:	ldr	r1, [r1, #8]
   16488:	cmp	r0, r1
   1648c:	movw	r0, #0
   16490:	str	r0, [sp, #52]	; 0x34
   16494:	bcs	164ec <__assert_fail@plt+0x4fe8>
   16498:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1649c:	ldr	r0, [r0]
   164a0:	ldr	r1, [fp, #-108]	; 0xffffff94
   164a4:	add	r0, r0, r1, lsl #3
   164a8:	ldr	r0, [r0, #4]
   164ac:	and	r0, r0, #255	; 0xff
   164b0:	cmp	r0, #1
   164b4:	movw	r0, #0
   164b8:	str	r0, [sp, #52]	; 0x34
   164bc:	bne	164ec <__assert_fail@plt+0x4fe8>
   164c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   164c4:	ldr	r0, [r0]
   164c8:	ldr	r1, [fp, #-108]	; 0xffffff94
   164cc:	add	r0, r0, r1, lsl #3
   164d0:	ldr	r0, [r0, #4]
   164d4:	lsr	r0, r0, #21
   164d8:	and	r0, r0, #1
   164dc:	cmp	r0, #0
   164e0:	movw	r0, #0
   164e4:	movne	r0, #1
   164e8:	str	r0, [sp, #52]	; 0x34
   164ec:	ldr	r0, [sp, #52]	; 0x34
   164f0:	tst	r0, #1
   164f4:	beq	16520 <__assert_fail@plt+0x501c>
   164f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   164fc:	ldr	r0, [r0]
   16500:	ldr	r1, [fp, #-108]	; 0xffffff94
   16504:	add	r0, r0, r1, lsl #3
   16508:	ldrb	r0, [r0]
   1650c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   16510:	add	r2, r1, #1
   16514:	str	r2, [fp, #-132]	; 0xffffff7c
   16518:	strb	r0, [r1]
   1651c:	b	16474 <__assert_fail@plt+0x4f70>
   16520:	sub	r0, fp, #128	; 0x80
   16524:	sub	r1, fp, #144	; 0x90
   16528:	mov	r2, r1
   1652c:	str	r0, [sp, #48]	; 0x30
   16530:	mov	r0, r2
   16534:	movw	r2, #0
   16538:	and	r2, r2, #255	; 0xff
   1653c:	str	r1, [sp, #44]	; 0x2c
   16540:	mov	r1, r2
   16544:	movw	r2, #8
   16548:	bl	11420 <memset@plt>
   1654c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16550:	ldr	r1, [sp, #48]	; 0x30
   16554:	sub	r2, r0, r1
   16558:	sub	r0, fp, #136	; 0x88
   1655c:	ldr	r3, [sp, #44]	; 0x2c
   16560:	bl	34e90 <__assert_fail@plt+0x2398c>
   16564:	sub	r1, fp, #128	; 0x80
   16568:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1656c:	sub	r1, r2, r1
   16570:	cmp	r0, r1
   16574:	bne	1660c <__assert_fail@plt+0x5108>
   16578:	sub	r0, fp, #128	; 0x80
   1657c:	ldr	r1, [fp, #-136]	; 0xffffff78
   16580:	str	r0, [sp, #40]	; 0x28
   16584:	mov	r0, r1
   16588:	bl	112c4 <towlower@plt>
   1658c:	ldr	r1, [sp, #40]	; 0x28
   16590:	str	r0, [sp, #36]	; 0x24
   16594:	mov	r0, r1
   16598:	ldr	r1, [sp, #36]	; 0x24
   1659c:	sub	r2, fp, #144	; 0x90
   165a0:	bl	1121c <wcrtomb@plt>
   165a4:	cmn	r0, #1
   165a8:	beq	1660c <__assert_fail@plt+0x5108>
   165ac:	ldr	r0, [fp, #-92]	; 0xffffffa4
   165b0:	ldrb	r1, [fp, #-128]	; 0xffffff80
   165b4:	str	r0, [fp, #-60]	; 0xffffffc4
   165b8:	movw	r0, #0
   165bc:	strb	r0, [fp, #-61]	; 0xffffffc3
   165c0:	str	r1, [fp, #-68]	; 0xffffffbc
   165c4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   165c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   165cc:	add	r0, r0, r1
   165d0:	movw	r1, #1
   165d4:	strb	r1, [r0]
   165d8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   165dc:	tst	r0, #1
   165e0:	beq	16608 <__assert_fail@plt+0x5104>
   165e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   165e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   165ec:	str	r0, [sp, #32]
   165f0:	mov	r0, r1
   165f4:	bl	112ac <tolower@plt>
   165f8:	ldr	r1, [sp, #32]
   165fc:	add	r0, r1, r0
   16600:	movw	r1, #1
   16604:	strb	r1, [r0]
   16608:	b	1660c <__assert_fail@plt+0x5108>
   1660c:	b	16610 <__assert_fail@plt+0x510c>
   16610:	b	16a60 <__assert_fail@plt+0x555c>
   16614:	ldr	r0, [fp, #-112]	; 0xffffff90
   16618:	cmp	r0, #3
   1661c:	bne	16724 <__assert_fail@plt+0x5220>
   16620:	movw	r0, #0
   16624:	str	r0, [fp, #-148]	; 0xffffff6c
   16628:	str	r0, [fp, #-152]	; 0xffffff68
   1662c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16630:	cmp	r0, #8
   16634:	bge	16720 <__assert_fail@plt+0x521c>
   16638:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1663c:	ldr	r0, [r0]
   16640:	ldr	r1, [fp, #-108]	; 0xffffff94
   16644:	ldr	r0, [r0, r1, lsl #3]
   16648:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1664c:	add	r0, r0, r1, lsl #2
   16650:	ldr	r0, [r0]
   16654:	str	r0, [fp, #-160]	; 0xffffff60
   16658:	movw	r0, #0
   1665c:	str	r0, [fp, #-156]	; 0xffffff64
   16660:	ldr	r0, [fp, #-156]	; 0xffffff64
   16664:	cmp	r0, #32
   16668:	bge	1670c <__assert_fail@plt+0x5208>
   1666c:	ldr	r0, [fp, #-160]	; 0xffffff60
   16670:	ldr	r1, [fp, #-156]	; 0xffffff64
   16674:	movw	r2, #1
   16678:	lsl	r1, r2, r1
   1667c:	and	r0, r0, r1
   16680:	cmp	r0, #0
   16684:	beq	166ec <__assert_fail@plt+0x51e8>
   16688:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1668c:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   16690:	ldr	r2, [fp, #-152]	; 0xffffff68
   16694:	str	r0, [fp, #-48]	; 0xffffffd0
   16698:	and	r0, r1, #1
   1669c:	strb	r0, [fp, #-49]	; 0xffffffcf
   166a0:	str	r2, [fp, #-56]	; 0xffffffc8
   166a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   166a8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   166ac:	add	r0, r0, r1
   166b0:	movw	r1, #1
   166b4:	strb	r1, [r0]
   166b8:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   166bc:	tst	r0, #1
   166c0:	beq	166e8 <__assert_fail@plt+0x51e4>
   166c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   166c8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   166cc:	str	r0, [sp, #28]
   166d0:	mov	r0, r1
   166d4:	bl	112ac <tolower@plt>
   166d8:	ldr	r1, [sp, #28]
   166dc:	add	r0, r1, r0
   166e0:	movw	r1, #1
   166e4:	strb	r1, [r0]
   166e8:	b	166ec <__assert_fail@plt+0x51e8>
   166ec:	b	166f0 <__assert_fail@plt+0x51ec>
   166f0:	ldr	r0, [fp, #-156]	; 0xffffff64
   166f4:	add	r0, r0, #1
   166f8:	str	r0, [fp, #-156]	; 0xffffff64
   166fc:	ldr	r0, [fp, #-152]	; 0xffffff68
   16700:	add	r0, r0, #1
   16704:	str	r0, [fp, #-152]	; 0xffffff68
   16708:	b	16660 <__assert_fail@plt+0x515c>
   1670c:	b	16710 <__assert_fail@plt+0x520c>
   16710:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16714:	add	r0, r0, #1
   16718:	str	r0, [fp, #-148]	; 0xffffff6c
   1671c:	b	1662c <__assert_fail@plt+0x5128>
   16720:	b	16a5c <__assert_fail@plt+0x5558>
   16724:	ldr	r0, [fp, #-112]	; 0xffffff90
   16728:	cmp	r0, #6
   1672c:	bne	169f4 <__assert_fail@plt+0x54f0>
   16730:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16734:	ldr	r0, [r0]
   16738:	ldr	r1, [fp, #-108]	; 0xffffff94
   1673c:	add	r0, r0, r1, lsl #3
   16740:	ldr	r0, [r0]
   16744:	str	r0, [fp, #-164]	; 0xffffff5c
   16748:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1674c:	ldr	r0, [r0, #92]	; 0x5c
   16750:	cmp	r0, #1
   16754:	ble	16858 <__assert_fail@plt+0x5354>
   16758:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1675c:	ldr	r0, [r0, #36]	; 0x24
   16760:	cmp	r0, #0
   16764:	bne	16790 <__assert_fail@plt+0x528c>
   16768:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1676c:	ldrb	r0, [r0, #16]
   16770:	and	r0, r0, #1
   16774:	and	r0, r0, #255	; 0xff
   16778:	cmp	r0, #0
   1677c:	bne	16790 <__assert_fail@plt+0x528c>
   16780:	ldr	r0, [fp, #-164]	; 0xffffff5c
   16784:	ldr	r0, [r0, #32]
   16788:	cmp	r0, #0
   1678c:	beq	16858 <__assert_fail@plt+0x5354>
   16790:	movw	r0, #0
   16794:	strb	r0, [fp, #-169]	; 0xffffff57
   16798:	sub	r0, fp, #180	; 0xb4
   1679c:	mov	r1, r0
   167a0:	str	r0, [sp, #24]
   167a4:	mov	r0, r1
   167a8:	movw	r1, #0
   167ac:	and	r1, r1, #255	; 0xff
   167b0:	movw	r2, #8
   167b4:	bl	11420 <memset@plt>
   167b8:	movw	r0, #0
   167bc:	sub	r1, fp, #169	; 0xa9
   167c0:	movw	r2, #1
   167c4:	ldr	r3, [sp, #24]
   167c8:	bl	34e90 <__assert_fail@plt+0x2398c>
   167cc:	cmn	r0, #2
   167d0:	bne	16834 <__assert_fail@plt+0x5330>
   167d4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   167d8:	ldrb	r1, [fp, #-169]	; 0xffffff57
   167dc:	str	r0, [fp, #-36]	; 0xffffffdc
   167e0:	movw	r0, #0
   167e4:	strb	r0, [fp, #-37]	; 0xffffffdb
   167e8:	str	r1, [fp, #-44]	; 0xffffffd4
   167ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   167f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   167f4:	add	r0, r0, r1
   167f8:	movw	r1, #1
   167fc:	strb	r1, [r0]
   16800:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   16804:	tst	r0, #1
   16808:	beq	16830 <__assert_fail@plt+0x532c>
   1680c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16810:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16814:	str	r0, [sp, #20]
   16818:	mov	r0, r1
   1681c:	bl	112ac <tolower@plt>
   16820:	ldr	r1, [sp, #20]
   16824:	add	r0, r1, r0
   16828:	movw	r1, #1
   1682c:	strb	r1, [r0]
   16830:	b	16834 <__assert_fail@plt+0x5330>
   16834:	b	16838 <__assert_fail@plt+0x5334>
   16838:	ldrb	r0, [fp, #-169]	; 0xffffff57
   1683c:	movw	r1, #1
   16840:	add	r0, r0, r1
   16844:	strb	r0, [fp, #-169]	; 0xffffff57
   16848:	and	r0, r0, #255	; 0xff
   1684c:	cmp	r0, #0
   16850:	bne	16798 <__assert_fail@plt+0x5294>
   16854:	b	169f0 <__assert_fail@plt+0x54ec>
   16858:	movw	r0, #0
   1685c:	str	r0, [fp, #-168]	; 0xffffff58
   16860:	ldr	r0, [fp, #-168]	; 0xffffff58
   16864:	ldr	r1, [fp, #-164]	; 0xffffff5c
   16868:	ldr	r1, [r1, #20]
   1686c:	cmp	r0, r1
   16870:	bge	169ec <__assert_fail@plt+0x54e8>
   16874:	mov	r0, #0
   16878:	str	r0, [sp, #68]	; 0x44
   1687c:	str	r0, [sp, #64]	; 0x40
   16880:	add	r0, sp, #76	; 0x4c
   16884:	ldr	r1, [fp, #-164]	; 0xffffff5c
   16888:	ldr	r1, [r1]
   1688c:	ldr	r2, [fp, #-168]	; 0xffffff58
   16890:	add	r1, r1, r2, lsl #2
   16894:	ldr	r1, [r1]
   16898:	add	r2, sp, #64	; 0x40
   1689c:	bl	1121c <wcrtomb@plt>
   168a0:	cmn	r0, #1
   168a4:	beq	1690c <__assert_fail@plt+0x5408>
   168a8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   168ac:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   168b0:	ldrb	r2, [sp, #76]	; 0x4c
   168b4:	str	r0, [fp, #-24]	; 0xffffffe8
   168b8:	and	r0, r1, #1
   168bc:	strb	r0, [fp, #-25]	; 0xffffffe7
   168c0:	str	r2, [fp, #-32]	; 0xffffffe0
   168c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   168cc:	add	r0, r0, r1
   168d0:	movw	r1, #1
   168d4:	strb	r1, [r0]
   168d8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   168dc:	tst	r0, #1
   168e0:	beq	16908 <__assert_fail@plt+0x5404>
   168e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   168ec:	str	r0, [sp, #16]
   168f0:	mov	r0, r1
   168f4:	bl	112ac <tolower@plt>
   168f8:	ldr	r1, [sp, #16]
   168fc:	add	r0, r1, r0
   16900:	movw	r1, #1
   16904:	strb	r1, [r0]
   16908:	b	1690c <__assert_fail@plt+0x5408>
   1690c:	ldr	r0, [fp, #-84]	; 0xffffffac
   16910:	ldr	r0, [r0, #12]
   16914:	and	r0, r0, #4194304	; 0x400000
   16918:	cmp	r0, #0
   1691c:	beq	169d8 <__assert_fail@plt+0x54d4>
   16920:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16924:	ldr	r0, [r0, #92]	; 0x5c
   16928:	cmp	r0, #1
   1692c:	ble	169d8 <__assert_fail@plt+0x54d4>
   16930:	add	r0, sp, #76	; 0x4c
   16934:	ldr	r1, [fp, #-164]	; 0xffffff5c
   16938:	ldr	r1, [r1]
   1693c:	ldr	r2, [fp, #-168]	; 0xffffff58
   16940:	add	r1, r1, r2, lsl #2
   16944:	ldr	r1, [r1]
   16948:	str	r0, [sp, #12]
   1694c:	mov	r0, r1
   16950:	bl	112c4 <towlower@plt>
   16954:	ldr	r1, [sp, #12]
   16958:	str	r0, [sp, #8]
   1695c:	mov	r0, r1
   16960:	ldr	r1, [sp, #8]
   16964:	add	r2, sp, #64	; 0x40
   16968:	bl	1121c <wcrtomb@plt>
   1696c:	cmn	r0, #1
   16970:	beq	169d4 <__assert_fail@plt+0x54d0>
   16974:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16978:	ldrb	r1, [sp, #76]	; 0x4c
   1697c:	str	r0, [fp, #-12]
   16980:	movw	r0, #0
   16984:	strb	r0, [fp, #-13]
   16988:	str	r1, [fp, #-20]	; 0xffffffec
   1698c:	ldr	r0, [fp, #-12]
   16990:	ldr	r1, [fp, #-20]	; 0xffffffec
   16994:	add	r0, r0, r1
   16998:	movw	r1, #1
   1699c:	strb	r1, [r0]
   169a0:	ldrb	r0, [fp, #-13]
   169a4:	tst	r0, #1
   169a8:	beq	169d0 <__assert_fail@plt+0x54cc>
   169ac:	ldr	r0, [fp, #-12]
   169b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   169b4:	str	r0, [sp, #4]
   169b8:	mov	r0, r1
   169bc:	bl	112ac <tolower@plt>
   169c0:	ldr	r1, [sp, #4]
   169c4:	add	r0, r1, r0
   169c8:	movw	r1, #1
   169cc:	strb	r1, [r0]
   169d0:	b	169d4 <__assert_fail@plt+0x54d0>
   169d4:	b	169d8 <__assert_fail@plt+0x54d4>
   169d8:	b	169dc <__assert_fail@plt+0x54d8>
   169dc:	ldr	r0, [fp, #-168]	; 0xffffff58
   169e0:	add	r0, r0, #1
   169e4:	str	r0, [fp, #-168]	; 0xffffff58
   169e8:	b	16860 <__assert_fail@plt+0x535c>
   169ec:	b	169f0 <__assert_fail@plt+0x54ec>
   169f0:	b	16a58 <__assert_fail@plt+0x5554>
   169f4:	ldr	r0, [fp, #-112]	; 0xffffff90
   169f8:	cmp	r0, #5
   169fc:	beq	16a18 <__assert_fail@plt+0x5514>
   16a00:	ldr	r0, [fp, #-112]	; 0xffffff90
   16a04:	cmp	r0, #7
   16a08:	beq	16a18 <__assert_fail@plt+0x5514>
   16a0c:	ldr	r0, [fp, #-112]	; 0xffffff90
   16a10:	cmp	r0, #2
   16a14:	bne	16a54 <__assert_fail@plt+0x5550>
   16a18:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16a1c:	movw	r1, #1
   16a20:	and	r1, r1, #255	; 0xff
   16a24:	movw	r2, #256	; 0x100
   16a28:	bl	11420 <memset@plt>
   16a2c:	ldr	r0, [fp, #-112]	; 0xffffff90
   16a30:	cmp	r0, #2
   16a34:	bne	16a50 <__assert_fail@plt+0x554c>
   16a38:	ldr	r0, [fp, #-84]	; 0xffffffac
   16a3c:	ldrb	r1, [r0, #28]
   16a40:	bic	r1, r1, #1
   16a44:	movw	r2, #1
   16a48:	orr	r1, r1, r2
   16a4c:	strb	r1, [r0, #28]
   16a50:	b	16a74 <__assert_fail@plt+0x5570>
   16a54:	b	16a58 <__assert_fail@plt+0x5554>
   16a58:	b	16a5c <__assert_fail@plt+0x5558>
   16a5c:	b	16a60 <__assert_fail@plt+0x555c>
   16a60:	b	16a64 <__assert_fail@plt+0x5560>
   16a64:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16a68:	add	r0, r0, #1
   16a6c:	str	r0, [fp, #-100]	; 0xffffff9c
   16a70:	b	16364 <__assert_fail@plt+0x4e60>
   16a74:	sub	sp, fp, #8
   16a78:	pop	{r4, r5, fp, pc}
   16a7c:	push	{fp, lr}
   16a80:	mov	fp, sp
   16a84:	sub	sp, sp, #40	; 0x28
   16a88:	ldr	r3, [pc, #440]	; 16c48 <__assert_fail@plt+0x5744>
   16a8c:	ldr	ip, [pc, #440]	; 16c4c <__assert_fail@plt+0x5748>
   16a90:	str	r0, [fp, #-8]
   16a94:	str	r1, [fp, #-12]
   16a98:	str	r2, [fp, #-16]
   16a9c:	ldr	r0, [fp, #-16]
   16aa0:	and	r0, r0, #1
   16aa4:	cmp	r0, #0
   16aa8:	movw	r0, #0
   16aac:	movne	r0, #1
   16ab0:	tst	r0, #1
   16ab4:	movne	ip, r3
   16ab8:	str	ip, [sp, #16]
   16abc:	ldr	r0, [fp, #-8]
   16ac0:	movw	r1, #0
   16ac4:	str	r1, [r0]
   16ac8:	ldr	r0, [fp, #-8]
   16acc:	str	r1, [r0, #4]
   16ad0:	ldr	r0, [fp, #-8]
   16ad4:	str	r1, [r0, #8]
   16ad8:	movw	r0, #256	; 0x100
   16adc:	bl	3354c <__assert_fail@plt+0x22048>
   16ae0:	ldr	r1, [fp, #-8]
   16ae4:	str	r0, [r1, #16]
   16ae8:	ldr	r0, [fp, #-8]
   16aec:	ldr	r0, [r0, #16]
   16af0:	movw	r1, #0
   16af4:	cmp	r0, r1
   16af8:	bne	16b08 <__assert_fail@plt+0x5604>
   16afc:	movw	r0, #12
   16b00:	str	r0, [fp, #-4]
   16b04:	b	16c3c <__assert_fail@plt+0x5738>
   16b08:	ldr	r0, [pc, #320]	; 16c50 <__assert_fail@plt+0x574c>
   16b0c:	ldr	r1, [fp, #-16]
   16b10:	and	r1, r1, #2
   16b14:	cmp	r1, #0
   16b18:	movw	r1, #0
   16b1c:	movne	r1, #1
   16b20:	tst	r1, #1
   16b24:	moveq	r0, #0
   16b28:	ldr	r1, [sp, #16]
   16b2c:	orr	r0, r1, r0
   16b30:	str	r0, [sp, #16]
   16b34:	ldr	r0, [fp, #-16]
   16b38:	and	r0, r0, #4
   16b3c:	cmp	r0, #0
   16b40:	beq	16b78 <__assert_fail@plt+0x5674>
   16b44:	ldr	r0, [sp, #16]
   16b48:	bic	r0, r0, #64	; 0x40
   16b4c:	str	r0, [sp, #16]
   16b50:	ldr	r0, [sp, #16]
   16b54:	orr	r0, r0, #256	; 0x100
   16b58:	str	r0, [sp, #16]
   16b5c:	ldr	r0, [fp, #-8]
   16b60:	ldrb	r1, [r0, #28]
   16b64:	and	r1, r1, #127	; 0x7f
   16b68:	movw	r2, #128	; 0x80
   16b6c:	orr	r1, r1, r2
   16b70:	strb	r1, [r0, #28]
   16b74:	b	16b88 <__assert_fail@plt+0x5684>
   16b78:	ldr	r0, [fp, #-8]
   16b7c:	ldrb	r1, [r0, #28]
   16b80:	and	r1, r1, #127	; 0x7f
   16b84:	strb	r1, [r0, #28]
   16b88:	ldrb	r0, [fp, #-16]
   16b8c:	and	r0, r0, #8
   16b90:	ldr	r1, [fp, #-8]
   16b94:	ldrb	r2, [r1, #28]
   16b98:	lsl	r0, r0, #1
   16b9c:	bic	r2, r2, #16
   16ba0:	orr	r0, r2, r0
   16ba4:	strb	r0, [r1, #28]
   16ba8:	ldr	r0, [fp, #-8]
   16bac:	movw	r1, #0
   16bb0:	str	r1, [r0, #20]
   16bb4:	ldr	r0, [fp, #-8]
   16bb8:	ldr	r1, [fp, #-12]
   16bbc:	ldr	r2, [fp, #-12]
   16bc0:	str	r0, [sp, #12]
   16bc4:	mov	r0, r2
   16bc8:	str	r1, [sp, #8]
   16bcc:	bl	113d8 <strlen@plt>
   16bd0:	ldr	r3, [sp, #16]
   16bd4:	ldr	r1, [sp, #12]
   16bd8:	str	r0, [sp, #4]
   16bdc:	mov	r0, r1
   16be0:	ldr	r1, [sp, #8]
   16be4:	ldr	r2, [sp, #4]
   16be8:	bl	15e04 <__assert_fail@plt+0x4900>
   16bec:	str	r0, [sp, #20]
   16bf0:	ldr	r0, [sp, #20]
   16bf4:	cmp	r0, #16
   16bf8:	bne	16c04 <__assert_fail@plt+0x5700>
   16bfc:	movw	r0, #8
   16c00:	str	r0, [sp, #20]
   16c04:	ldr	r0, [sp, #20]
   16c08:	cmp	r0, #0
   16c0c:	bne	16c1c <__assert_fail@plt+0x5718>
   16c10:	ldr	r0, [fp, #-8]
   16c14:	bl	16200 <__assert_fail@plt+0x4cfc>
   16c18:	b	16c34 <__assert_fail@plt+0x5730>
   16c1c:	ldr	r0, [fp, #-8]
   16c20:	ldr	r0, [r0, #16]
   16c24:	bl	34c20 <__assert_fail@plt+0x2371c>
   16c28:	ldr	r0, [fp, #-8]
   16c2c:	movw	r1, #0
   16c30:	str	r1, [r0, #16]
   16c34:	ldr	r0, [sp, #20]
   16c38:	str	r0, [fp, #-4]
   16c3c:	ldr	r0, [fp, #-4]
   16c40:	mov	sp, fp
   16c44:	pop	{fp, pc}
   16c48:	strdeq	fp, [r3], -ip
   16c4c:	smlabteq	r1, r6, r2, r0
   16c50:	subeq	r0, r0, r0
   16c54:	push	{fp, lr}
   16c58:	mov	fp, sp
   16c5c:	sub	sp, sp, #40	; 0x28
   16c60:	str	r0, [fp, #-4]
   16c64:	str	r1, [fp, #-8]
   16c68:	str	r2, [fp, #-12]
   16c6c:	str	r3, [fp, #-16]
   16c70:	movw	r0, #17
   16c74:	str	r0, [sp, #12]
   16c78:	ldr	r0, [fp, #-4]
   16c7c:	cmp	r0, #0
   16c80:	movw	r0, #1
   16c84:	str	r0, [sp, #4]
   16c88:	blt	16ca4 <__assert_fail@plt+0x57a0>
   16c8c:	ldr	r0, [fp, #-4]
   16c90:	ldr	r1, [sp, #12]
   16c94:	cmp	r0, r1
   16c98:	movw	r0, #0
   16c9c:	movge	r0, #1
   16ca0:	str	r0, [sp, #4]
   16ca4:	ldr	r0, [sp, #4]
   16ca8:	tst	r0, #1
   16cac:	beq	16cb4 <__assert_fail@plt+0x57b0>
   16cb0:	bl	114e0 <abort@plt>
   16cb4:	ldr	r0, [fp, #-4]
   16cb8:	movw	r1, #31788	; 0x7c2c
   16cbc:	movt	r1, #3
   16cc0:	add	r0, r1, r0, lsl #2
   16cc4:	ldr	r0, [r0]
   16cc8:	movw	r1, #31404	; 0x7aac
   16ccc:	movt	r1, #3
   16cd0:	add	r0, r1, r0
   16cd4:	bl	113cc <gettext@plt>
   16cd8:	str	r0, [sp, #20]
   16cdc:	ldr	r0, [sp, #20]
   16ce0:	bl	113d8 <strlen@plt>
   16ce4:	add	r0, r0, #1
   16ce8:	str	r0, [sp, #16]
   16cec:	ldr	r0, [fp, #-16]
   16cf0:	cmp	r0, #0
   16cf4:	beq	16d40 <__assert_fail@plt+0x583c>
   16cf8:	ldr	r0, [sp, #16]
   16cfc:	str	r0, [sp, #8]
   16d00:	ldr	r0, [sp, #16]
   16d04:	ldr	r1, [fp, #-16]
   16d08:	cmp	r0, r1
   16d0c:	bls	16d30 <__assert_fail@plt+0x582c>
   16d10:	ldr	r0, [fp, #-16]
   16d14:	sub	r0, r0, #1
   16d18:	str	r0, [sp, #8]
   16d1c:	ldr	r0, [fp, #-12]
   16d20:	ldr	r1, [sp, #8]
   16d24:	add	r0, r0, r1
   16d28:	movw	r1, #0
   16d2c:	strb	r1, [r0]
   16d30:	ldr	r0, [fp, #-12]
   16d34:	ldr	r1, [sp, #20]
   16d38:	ldr	r2, [sp, #8]
   16d3c:	bl	112a0 <memcpy@plt>
   16d40:	ldr	r0, [sp, #16]
   16d44:	mov	sp, fp
   16d48:	pop	{fp, pc}
   16d4c:	push	{fp, lr}
   16d50:	mov	fp, sp
   16d54:	sub	sp, sp, #8
   16d58:	str	r0, [sp, #4]
   16d5c:	ldr	r0, [sp, #4]
   16d60:	ldr	r0, [r0]
   16d64:	str	r0, [sp]
   16d68:	ldr	r0, [sp]
   16d6c:	movw	r1, #0
   16d70:	cmp	r0, r1
   16d74:	beq	16dbc <__assert_fail@plt+0x58b8>
   16d78:	movw	r0, #0
   16d7c:	movt	r0, #0
   16d80:	cmp	r0, #0
   16d84:	bne	16da0 <__assert_fail@plt+0x589c>
   16d88:	b	16d8c <__assert_fail@plt+0x5888>
   16d8c:	movw	r0, #0
   16d90:	movt	r0, #0
   16d94:	cmp	r0, #0
   16d98:	beq	16db0 <__assert_fail@plt+0x58ac>
   16d9c:	b	16da0 <__assert_fail@plt+0x589c>
   16da0:	ldr	r0, [sp]
   16da4:	add	r0, r0, #136	; 0x88
   16da8:	bl	11258 <pthread_mutex_destroy@plt>
   16dac:	b	16db4 <__assert_fail@plt+0x58b0>
   16db0:	b	16db4 <__assert_fail@plt+0x58b0>
   16db4:	ldr	r0, [sp]
   16db8:	bl	16e08 <__assert_fail@plt+0x5904>
   16dbc:	ldr	r0, [sp, #4]
   16dc0:	movw	r1, #0
   16dc4:	str	r1, [r0]
   16dc8:	ldr	r0, [sp, #4]
   16dcc:	str	r1, [r0, #4]
   16dd0:	ldr	r0, [sp, #4]
   16dd4:	ldr	r0, [r0, #16]
   16dd8:	bl	34c20 <__assert_fail@plt+0x2371c>
   16ddc:	ldr	r0, [sp, #4]
   16de0:	movw	r1, #0
   16de4:	str	r1, [r0, #16]
   16de8:	ldr	r0, [sp, #4]
   16dec:	ldr	r0, [r0, #20]
   16df0:	bl	34c20 <__assert_fail@plt+0x2371c>
   16df4:	ldr	r0, [sp, #4]
   16df8:	movw	r1, #0
   16dfc:	str	r1, [r0, #20]
   16e00:	mov	sp, fp
   16e04:	pop	{fp, pc}
   16e08:	push	{fp, lr}
   16e0c:	mov	fp, sp
   16e10:	sub	sp, sp, #24
   16e14:	str	r0, [fp, #-4]
   16e18:	ldr	r0, [fp, #-4]
   16e1c:	ldr	r0, [r0]
   16e20:	movw	r1, #0
   16e24:	cmp	r0, r1
   16e28:	beq	16e70 <__assert_fail@plt+0x596c>
   16e2c:	movw	r0, #0
   16e30:	str	r0, [fp, #-8]
   16e34:	ldr	r0, [fp, #-8]
   16e38:	ldr	r1, [fp, #-4]
   16e3c:	ldr	r1, [r1, #8]
   16e40:	cmp	r0, r1
   16e44:	bcs	16e6c <__assert_fail@plt+0x5968>
   16e48:	ldr	r0, [fp, #-4]
   16e4c:	ldr	r0, [r0]
   16e50:	ldr	r1, [fp, #-8]
   16e54:	add	r0, r0, r1, lsl #3
   16e58:	bl	18a48 <__assert_fail@plt+0x7544>
   16e5c:	ldr	r0, [fp, #-8]
   16e60:	add	r0, r0, #1
   16e64:	str	r0, [fp, #-8]
   16e68:	b	16e34 <__assert_fail@plt+0x5930>
   16e6c:	b	16e70 <__assert_fail@plt+0x596c>
   16e70:	ldr	r0, [fp, #-4]
   16e74:	ldr	r0, [r0, #12]
   16e78:	bl	34c20 <__assert_fail@plt+0x2371c>
   16e7c:	movw	r0, #0
   16e80:	str	r0, [fp, #-8]
   16e84:	ldr	r0, [fp, #-8]
   16e88:	ldr	r1, [fp, #-4]
   16e8c:	ldr	r1, [r1, #8]
   16e90:	cmp	r0, r1
   16e94:	bcs	16f48 <__assert_fail@plt+0x5a44>
   16e98:	ldr	r0, [fp, #-4]
   16e9c:	ldr	r0, [r0, #24]
   16ea0:	movw	r1, #0
   16ea4:	cmp	r0, r1
   16ea8:	beq	16ecc <__assert_fail@plt+0x59c8>
   16eac:	ldr	r0, [fp, #-4]
   16eb0:	ldr	r0, [r0, #24]
   16eb4:	ldr	r1, [fp, #-8]
   16eb8:	movw	r2, #12
   16ebc:	mul	r1, r1, r2
   16ec0:	add	r0, r0, r1
   16ec4:	ldr	r0, [r0, #8]
   16ec8:	bl	34c20 <__assert_fail@plt+0x2371c>
   16ecc:	ldr	r0, [fp, #-4]
   16ed0:	ldr	r0, [r0, #28]
   16ed4:	movw	r1, #0
   16ed8:	cmp	r0, r1
   16edc:	beq	16f00 <__assert_fail@plt+0x59fc>
   16ee0:	ldr	r0, [fp, #-4]
   16ee4:	ldr	r0, [r0, #28]
   16ee8:	ldr	r1, [fp, #-8]
   16eec:	movw	r2, #12
   16ef0:	mul	r1, r1, r2
   16ef4:	add	r0, r0, r1
   16ef8:	ldr	r0, [r0, #8]
   16efc:	bl	34c20 <__assert_fail@plt+0x2371c>
   16f00:	ldr	r0, [fp, #-4]
   16f04:	ldr	r0, [r0, #20]
   16f08:	movw	r1, #0
   16f0c:	cmp	r0, r1
   16f10:	beq	16f34 <__assert_fail@plt+0x5a30>
   16f14:	ldr	r0, [fp, #-4]
   16f18:	ldr	r0, [r0, #20]
   16f1c:	ldr	r1, [fp, #-8]
   16f20:	movw	r2, #12
   16f24:	mul	r1, r1, r2
   16f28:	add	r0, r0, r1
   16f2c:	ldr	r0, [r0, #8]
   16f30:	bl	34c20 <__assert_fail@plt+0x2371c>
   16f34:	b	16f38 <__assert_fail@plt+0x5a34>
   16f38:	ldr	r0, [fp, #-8]
   16f3c:	add	r0, r0, #1
   16f40:	str	r0, [fp, #-8]
   16f44:	b	16e84 <__assert_fail@plt+0x5980>
   16f48:	ldr	r0, [fp, #-4]
   16f4c:	ldr	r0, [r0, #20]
   16f50:	bl	34c20 <__assert_fail@plt+0x2371c>
   16f54:	ldr	r0, [fp, #-4]
   16f58:	ldr	r0, [r0, #24]
   16f5c:	bl	34c20 <__assert_fail@plt+0x2371c>
   16f60:	ldr	r0, [fp, #-4]
   16f64:	ldr	r0, [r0, #28]
   16f68:	bl	34c20 <__assert_fail@plt+0x2371c>
   16f6c:	ldr	r0, [fp, #-4]
   16f70:	ldr	r0, [r0]
   16f74:	bl	34c20 <__assert_fail@plt+0x2371c>
   16f78:	ldr	r0, [fp, #-4]
   16f7c:	ldr	r0, [r0, #32]
   16f80:	movw	r1, #0
   16f84:	cmp	r0, r1
   16f88:	beq	17030 <__assert_fail@plt+0x5b2c>
   16f8c:	movw	r0, #0
   16f90:	str	r0, [fp, #-8]
   16f94:	ldr	r0, [fp, #-8]
   16f98:	ldr	r1, [fp, #-4]
   16f9c:	ldr	r1, [r1, #68]	; 0x44
   16fa0:	cmp	r0, r1
   16fa4:	bhi	1702c <__assert_fail@plt+0x5b28>
   16fa8:	ldr	r0, [fp, #-4]
   16fac:	ldr	r0, [r0, #32]
   16fb0:	ldr	r1, [fp, #-8]
   16fb4:	movw	r2, #12
   16fb8:	mul	r1, r1, r2
   16fbc:	add	r0, r0, r1
   16fc0:	str	r0, [sp, #8]
   16fc4:	movw	r0, #0
   16fc8:	str	r0, [sp, #12]
   16fcc:	ldr	r0, [sp, #12]
   16fd0:	ldr	r1, [sp, #8]
   16fd4:	ldr	r1, [r1]
   16fd8:	cmp	r0, r1
   16fdc:	bge	17010 <__assert_fail@plt+0x5b0c>
   16fe0:	ldr	r0, [sp, #8]
   16fe4:	ldr	r0, [r0, #8]
   16fe8:	ldr	r1, [sp, #12]
   16fec:	add	r0, r0, r1, lsl #2
   16ff0:	ldr	r0, [r0]
   16ff4:	str	r0, [sp, #4]
   16ff8:	ldr	r0, [sp, #4]
   16ffc:	bl	18ad8 <__assert_fail@plt+0x75d4>
   17000:	ldr	r0, [sp, #12]
   17004:	add	r0, r0, #1
   17008:	str	r0, [sp, #12]
   1700c:	b	16fcc <__assert_fail@plt+0x5ac8>
   17010:	ldr	r0, [sp, #8]
   17014:	ldr	r0, [r0, #8]
   17018:	bl	34c20 <__assert_fail@plt+0x2371c>
   1701c:	ldr	r0, [fp, #-8]
   17020:	add	r0, r0, #1
   17024:	str	r0, [fp, #-8]
   17028:	b	16f94 <__assert_fail@plt+0x5a90>
   1702c:	b	17030 <__assert_fail@plt+0x5b2c>
   17030:	ldr	r0, [fp, #-4]
   17034:	ldr	r0, [r0, #32]
   17038:	bl	34c20 <__assert_fail@plt+0x2371c>
   1703c:	ldr	r0, [fp, #-4]
   17040:	ldr	r0, [r0, #60]	; 0x3c
   17044:	movw	r1, #31856	; 0x7c70
   17048:	movt	r1, #3
   1704c:	cmp	r0, r1
   17050:	beq	17060 <__assert_fail@plt+0x5b5c>
   17054:	ldr	r0, [fp, #-4]
   17058:	ldr	r0, [r0, #60]	; 0x3c
   1705c:	bl	34c20 <__assert_fail@plt+0x2371c>
   17060:	ldr	r0, [fp, #-4]
   17064:	ldr	r0, [r0, #132]	; 0x84
   17068:	bl	34c20 <__assert_fail@plt+0x2371c>
   1706c:	ldr	r0, [fp, #-4]
   17070:	bl	34c20 <__assert_fail@plt+0x2371c>
   17074:	mov	sp, fp
   17078:	pop	{fp, pc}
   1707c:	push	{r4, r5, r6, sl, fp, lr}
   17080:	add	fp, sp, #16
   17084:	sub	sp, sp, #56	; 0x38
   17088:	ldr	ip, [fp, #8]
   1708c:	str	r0, [fp, #-24]	; 0xffffffe8
   17090:	str	r1, [fp, #-28]	; 0xffffffe4
   17094:	str	r2, [fp, #-32]	; 0xffffffe0
   17098:	str	r3, [sp, #36]	; 0x24
   1709c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170a0:	ldr	r0, [r0]
   170a4:	str	r0, [sp, #20]
   170a8:	ldr	r0, [fp, #8]
   170ac:	mvn	r1, #7
   170b0:	and	r0, r0, r1
   170b4:	cmp	r0, #0
   170b8:	beq	170c8 <__assert_fail@plt+0x5bc4>
   170bc:	movw	r0, #2
   170c0:	str	r0, [fp, #-20]	; 0xffffffec
   170c4:	b	17230 <__assert_fail@plt+0x5d2c>
   170c8:	ldr	r0, [fp, #8]
   170cc:	and	r0, r0, #4
   170d0:	cmp	r0, #0
   170d4:	beq	170f4 <__assert_fail@plt+0x5bf0>
   170d8:	ldr	r0, [sp, #36]	; 0x24
   170dc:	ldr	r0, [r0]
   170e0:	str	r0, [sp, #28]
   170e4:	ldr	r0, [sp, #36]	; 0x24
   170e8:	ldr	r0, [r0, #4]
   170ec:	str	r0, [sp, #24]
   170f0:	b	17108 <__assert_fail@plt+0x5c04>
   170f4:	movw	r0, #0
   170f8:	str	r0, [sp, #28]
   170fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17100:	bl	113d8 <strlen@plt>
   17104:	str	r0, [sp, #24]
   17108:	movw	r0, #0
   1710c:	movt	r0, #0
   17110:	cmp	r0, #0
   17114:	bne	17130 <__assert_fail@plt+0x5c2c>
   17118:	b	1711c <__assert_fail@plt+0x5c18>
   1711c:	movw	r0, #0
   17120:	movt	r0, #0
   17124:	cmp	r0, #0
   17128:	beq	17140 <__assert_fail@plt+0x5c3c>
   1712c:	b	17130 <__assert_fail@plt+0x5c2c>
   17130:	ldr	r0, [sp, #20]
   17134:	add	r0, r0, #136	; 0x88
   17138:	bl	11288 <pthread_mutex_lock@plt>
   1713c:	b	17144 <__assert_fail@plt+0x5c40>
   17140:	b	17144 <__assert_fail@plt+0x5c40>
   17144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17148:	ldrb	r0, [r0, #28]
   1714c:	ubfx	r0, r0, #4, #1
   17150:	and	r0, r0, #255	; 0xff
   17154:	cmp	r0, #0
   17158:	beq	1719c <__assert_fail@plt+0x5c98>
   1715c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17160:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17164:	ldr	r2, [sp, #24]
   17168:	ldr	r3, [sp, #28]
   1716c:	ldr	ip, [sp, #24]
   17170:	ldr	lr, [sp, #24]
   17174:	ldr	r4, [fp, #8]
   17178:	str	ip, [sp]
   1717c:	str	lr, [sp, #4]
   17180:	movw	ip, #0
   17184:	str	ip, [sp, #8]
   17188:	str	ip, [sp, #12]
   1718c:	str	r4, [sp, #16]
   17190:	bl	1723c <__assert_fail@plt+0x5d38>
   17194:	str	r0, [sp, #32]
   17198:	b	171dc <__assert_fail@plt+0x5cd8>
   1719c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   171a4:	ldr	r2, [sp, #24]
   171a8:	ldr	r3, [sp, #28]
   171ac:	ldr	ip, [sp, #24]
   171b0:	ldr	lr, [sp, #24]
   171b4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   171b8:	ldr	r5, [sp, #36]	; 0x24
   171bc:	ldr	r6, [fp, #8]
   171c0:	str	ip, [sp]
   171c4:	str	lr, [sp, #4]
   171c8:	str	r4, [sp, #8]
   171cc:	str	r5, [sp, #12]
   171d0:	str	r6, [sp, #16]
   171d4:	bl	1723c <__assert_fail@plt+0x5d38>
   171d8:	str	r0, [sp, #32]
   171dc:	movw	r0, #0
   171e0:	movt	r0, #0
   171e4:	cmp	r0, #0
   171e8:	bne	17204 <__assert_fail@plt+0x5d00>
   171ec:	b	171f0 <__assert_fail@plt+0x5cec>
   171f0:	movw	r0, #0
   171f4:	movt	r0, #0
   171f8:	cmp	r0, #0
   171fc:	beq	17214 <__assert_fail@plt+0x5d10>
   17200:	b	17204 <__assert_fail@plt+0x5d00>
   17204:	ldr	r0, [sp, #20]
   17208:	add	r0, r0, #136	; 0x88
   1720c:	bl	111e0 <pthread_mutex_unlock@plt>
   17210:	b	17218 <__assert_fail@plt+0x5d14>
   17214:	b	17218 <__assert_fail@plt+0x5d14>
   17218:	ldr	r0, [sp, #32]
   1721c:	cmp	r0, #0
   17220:	movw	r0, #0
   17224:	movne	r0, #1
   17228:	and	r0, r0, #1
   1722c:	str	r0, [fp, #-20]	; 0xffffffec
   17230:	ldr	r0, [fp, #-20]	; 0xffffffec
   17234:	sub	sp, fp, #16
   17238:	pop	{r4, r5, r6, sl, fp, pc}
   1723c:	push	{r4, r5, r6, sl, fp, lr}
   17240:	add	fp, sp, #16
   17244:	sub	sp, sp, #376	; 0x178
   17248:	ldr	ip, [fp, #24]
   1724c:	ldr	lr, [fp, #20]
   17250:	ldr	r4, [fp, #16]
   17254:	ldr	r5, [fp, #12]
   17258:	ldr	r6, [fp, #8]
   1725c:	str	r0, [fp, #-24]	; 0xffffffe8
   17260:	str	r1, [fp, #-28]	; 0xffffffe4
   17264:	str	r2, [fp, #-32]	; 0xffffffe0
   17268:	str	r3, [fp, #-36]	; 0xffffffdc
   1726c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17270:	ldr	r0, [r0]
   17274:	str	r0, [fp, #-44]	; 0xffffffd4
   17278:	mvn	r0, #0
   1727c:	str	r0, [fp, #-72]	; 0xffffffb8
   17280:	add	r0, sp, #172	; 0xac
   17284:	mov	r1, #0
   17288:	mov	r2, #136	; 0x88
   1728c:	str	ip, [sp, #148]	; 0x94
   17290:	str	lr, [sp, #144]	; 0x90
   17294:	str	r4, [sp, #140]	; 0x8c
   17298:	str	r5, [sp, #136]	; 0x88
   1729c:	str	r6, [sp, #132]	; 0x84
   172a0:	bl	11420 <memset@plt>
   172a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   172a8:	str	r1, [sp, #256]	; 0x100
   172ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172b0:	ldr	r1, [r1, #16]
   172b4:	movw	r2, #0
   172b8:	cmp	r1, r2
   172bc:	beq	17310 <__assert_fail@plt+0x5e0c>
   172c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172c4:	ldrb	r0, [r0, #28]
   172c8:	ubfx	r0, r0, #3, #1
   172cc:	and	r0, r0, #255	; 0xff
   172d0:	cmp	r0, #0
   172d4:	beq	17310 <__assert_fail@plt+0x5e0c>
   172d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   172dc:	ldr	r1, [fp, #8]
   172e0:	cmp	r0, r1
   172e4:	beq	17310 <__assert_fail@plt+0x5e0c>
   172e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172ec:	ldrb	r0, [r0, #28]
   172f0:	and	r0, r0, #1
   172f4:	and	r0, r0, #255	; 0xff
   172f8:	cmp	r0, #0
   172fc:	bne	17310 <__assert_fail@plt+0x5e0c>
   17300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17304:	ldr	r0, [r0, #16]
   17308:	str	r0, [sp, #128]	; 0x80
   1730c:	b	1731c <__assert_fail@plt+0x5e18>
   17310:	movw	r0, #0
   17314:	str	r0, [sp, #128]	; 0x80
   17318:	b	1731c <__assert_fail@plt+0x5e18>
   1731c:	ldr	r0, [sp, #128]	; 0x80
   17320:	str	r0, [sp, #168]	; 0xa8
   17324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17328:	ldr	r0, [r0, #20]
   1732c:	str	r0, [sp, #164]	; 0xa4
   17330:	ldr	r0, [fp, #16]
   17334:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17338:	ldr	r1, [r1, #24]
   1733c:	cmp	r0, r1
   17340:	bls	17360 <__assert_fail@plt+0x5e5c>
   17344:	ldr	r0, [fp, #16]
   17348:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1734c:	ldr	r1, [r1, #24]
   17350:	add	r1, r1, #1
   17354:	sub	r0, r0, r1
   17358:	str	r0, [sp, #124]	; 0x7c
   1735c:	b	1736c <__assert_fail@plt+0x5e68>
   17360:	movw	r0, #0
   17364:	str	r0, [sp, #124]	; 0x7c
   17368:	b	1736c <__assert_fail@plt+0x5e68>
   1736c:	ldr	r0, [sp, #124]	; 0x7c
   17370:	str	r0, [fp, #-76]	; 0xffffffb4
   17374:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17378:	ldr	r1, [fp, #16]
   1737c:	sub	r0, r1, r0
   17380:	str	r0, [fp, #16]
   17384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17388:	ldr	r0, [r0, #8]
   1738c:	cmp	r0, #0
   17390:	movw	r0, #1
   17394:	str	r0, [sp, #120]	; 0x78
   17398:	beq	1740c <__assert_fail@plt+0x5f08>
   1739c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   173a0:	ldr	r0, [r0, #36]	; 0x24
   173a4:	movw	r1, #0
   173a8:	cmp	r0, r1
   173ac:	movw	r0, #1
   173b0:	str	r0, [sp, #120]	; 0x78
   173b4:	beq	1740c <__assert_fail@plt+0x5f08>
   173b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   173bc:	ldr	r0, [r0, #40]	; 0x28
   173c0:	movw	r1, #0
   173c4:	cmp	r0, r1
   173c8:	movw	r0, #1
   173cc:	str	r0, [sp, #120]	; 0x78
   173d0:	beq	1740c <__assert_fail@plt+0x5f08>
   173d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   173d8:	ldr	r0, [r0, #44]	; 0x2c
   173dc:	movw	r1, #0
   173e0:	cmp	r0, r1
   173e4:	movw	r0, #1
   173e8:	str	r0, [sp, #120]	; 0x78
   173ec:	beq	1740c <__assert_fail@plt+0x5f08>
   173f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   173f4:	ldr	r0, [r0, #48]	; 0x30
   173f8:	movw	r1, #0
   173fc:	cmp	r0, r1
   17400:	movw	r0, #0
   17404:	moveq	r0, #1
   17408:	str	r0, [sp, #120]	; 0x78
   1740c:	ldr	r0, [sp, #120]	; 0x78
   17410:	tst	r0, #1
   17414:	beq	17424 <__assert_fail@plt+0x5f20>
   17418:	movw	r0, #1
   1741c:	str	r0, [fp, #-20]	; 0xffffffec
   17420:	b	18140 <__assert_fail@plt+0x6c3c>
   17424:	ldr	r0, [fp, #8]
   17428:	movw	r1, #0
   1742c:	cmp	r1, r0
   17430:	bgt	17448 <__assert_fail@plt+0x5f44>
   17434:	ldr	r0, [fp, #8]
   17438:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1743c:	cmp	r0, r1
   17440:	bgt	17448 <__assert_fail@plt+0x5f44>
   17444:	b	17448 <__assert_fail@plt+0x5f44>
   17448:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1744c:	ldr	r0, [r0, #36]	; 0x24
   17450:	ldr	r0, [r0, #8]
   17454:	cmp	r0, #0
   17458:	bne	174cc <__assert_fail@plt+0x5fc8>
   1745c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17460:	ldr	r0, [r0, #40]	; 0x28
   17464:	ldr	r0, [r0, #8]
   17468:	cmp	r0, #0
   1746c:	bne	174cc <__assert_fail@plt+0x5fc8>
   17470:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17474:	ldr	r0, [r0, #44]	; 0x2c
   17478:	ldr	r0, [r0, #8]
   1747c:	cmp	r0, #0
   17480:	beq	1749c <__assert_fail@plt+0x5f98>
   17484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17488:	ldrb	r0, [r0, #28]
   1748c:	lsr	r0, r0, #7
   17490:	and	r0, r0, #255	; 0xff
   17494:	cmp	r0, #0
   17498:	bne	174cc <__assert_fail@plt+0x5fc8>
   1749c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   174a0:	cmp	r0, #0
   174a4:	beq	174c0 <__assert_fail@plt+0x5fbc>
   174a8:	ldr	r0, [fp, #8]
   174ac:	cmp	r0, #0
   174b0:	beq	174c0 <__assert_fail@plt+0x5fbc>
   174b4:	movw	r0, #1
   174b8:	str	r0, [fp, #-20]	; 0xffffffec
   174bc:	b	18140 <__assert_fail@plt+0x6c3c>
   174c0:	movw	r0, #0
   174c4:	str	r0, [fp, #8]
   174c8:	str	r0, [fp, #-36]	; 0xffffffdc
   174cc:	ldr	r0, [fp, #16]
   174d0:	cmp	r0, #0
   174d4:	movw	r0, #1
   174d8:	str	r0, [sp, #116]	; 0x74
   174dc:	bne	174f8 <__assert_fail@plt+0x5ff4>
   174e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   174e4:	ldr	r0, [r0, #76]	; 0x4c
   174e8:	cmp	r0, #0
   174ec:	movw	r0, #0
   174f0:	movne	r0, #1
   174f4:	str	r0, [sp, #116]	; 0x74
   174f8:	ldr	r0, [sp, #116]	; 0x74
   174fc:	add	r1, sp, #172	; 0xac
   17500:	and	r0, r0, #1
   17504:	strb	r0, [fp, #-57]	; 0xffffffc7
   17508:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1750c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17510:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17514:	ldr	r3, [r3, #8]
   17518:	add	r3, r3, #1
   1751c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   17520:	ldr	ip, [ip, #20]
   17524:	ldr	lr, [fp, #-24]	; 0xffffffe8
   17528:	ldr	lr, [lr, #12]
   1752c:	and	lr, lr, #4194304	; 0x400000
   17530:	cmp	lr, #0
   17534:	movw	lr, #0
   17538:	movne	lr, #1
   1753c:	ldr	r4, [fp, #-44]	; 0xffffffd4
   17540:	str	r0, [sp, #112]	; 0x70
   17544:	mov	r0, r1
   17548:	ldr	r1, [sp, #112]	; 0x70
   1754c:	str	ip, [sp]
   17550:	and	ip, lr, #1
   17554:	str	ip, [sp, #4]
   17558:	str	r4, [sp, #8]
   1755c:	bl	23ca4 <__assert_fail@plt+0x127a0>
   17560:	str	r0, [fp, #-40]	; 0xffffffd8
   17564:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17568:	cmp	r0, #0
   1756c:	beq	17574 <__assert_fail@plt+0x6070>
   17570:	b	18110 <__assert_fail@plt+0x6c0c>
   17574:	ldr	r0, [fp, #12]
   17578:	str	r0, [sp, #228]	; 0xe4
   1757c:	ldr	r0, [fp, #12]
   17580:	str	r0, [sp, #224]	; 0xe0
   17584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17588:	ldrb	r0, [r0, #28]
   1758c:	lsr	r0, r0, #7
   17590:	strb	r0, [sp, #249]	; 0xf9
   17594:	ldr	r1, [fp, #24]
   17598:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1759c:	ldr	r0, [r0, #76]	; 0x4c
   175a0:	lsl	r2, r0, #1
   175a4:	add	r0, sp, #172	; 0xac
   175a8:	bl	23e38 <__assert_fail@plt+0x12934>
   175ac:	str	r0, [fp, #-40]	; 0xffffffd8
   175b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   175b4:	cmp	r0, #0
   175b8:	beq	175c0 <__assert_fail@plt+0x60bc>
   175bc:	b	18110 <__assert_fail@plt+0x6c0c>
   175c0:	ldr	r0, [fp, #16]
   175c4:	cmp	r0, #1
   175c8:	bhi	175e4 <__assert_fail@plt+0x60e0>
   175cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   175d0:	ldrb	r0, [r0, #88]	; 0x58
   175d4:	ubfx	r0, r0, #1, #1
   175d8:	and	r0, r0, #255	; 0xff
   175dc:	cmp	r0, #0
   175e0:	beq	17634 <__assert_fail@plt+0x6130>
   175e4:	ldr	r0, [pc, #2912]	; 1814c <__assert_fail@plt+0x6c48>
   175e8:	ldr	r1, [sp, #208]	; 0xd0
   175ec:	cmp	r0, r1
   175f0:	bhi	17600 <__assert_fail@plt+0x60fc>
   175f4:	movw	r0, #12
   175f8:	str	r0, [fp, #-40]	; 0xffffffd8
   175fc:	b	18110 <__assert_fail@plt+0x6c0c>
   17600:	ldr	r0, [sp, #208]	; 0xd0
   17604:	add	r0, r0, #1
   17608:	lsl	r0, r0, #2
   1760c:	bl	3354c <__assert_fail@plt+0x22048>
   17610:	str	r0, [sp, #272]	; 0x110
   17614:	ldr	r0, [sp, #272]	; 0x110
   17618:	movw	r1, #0
   1761c:	cmp	r0, r1
   17620:	bne	17630 <__assert_fail@plt+0x612c>
   17624:	movw	r0, #12
   17628:	str	r0, [fp, #-40]	; 0xffffffd8
   1762c:	b	18110 <__assert_fail@plt+0x6c0c>
   17630:	b	17634 <__assert_fail@plt+0x6130>
   17634:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17638:	str	r0, [fp, #-68]	; 0xffffffbc
   1763c:	ldr	r0, [fp, #24]
   17640:	and	r0, r0, #1
   17644:	cmp	r0, #0
   17648:	movw	r0, #0
   1764c:	movne	r0, #1
   17650:	tst	r0, #1
   17654:	movw	r0, #4
   17658:	moveq	r0, #6
   1765c:	str	r0, [sp, #232]	; 0xe8
   17660:	ldr	r0, [fp, #8]
   17664:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17668:	cmp	r0, r1
   1766c:	movw	r0, #0
   17670:	movlt	r0, #1
   17674:	tst	r0, #1
   17678:	mvn	r0, #0
   1767c:	moveq	r0, #1
   17680:	str	r0, [fp, #-56]	; 0xffffffc8
   17684:	ldr	r0, [fp, #8]
   17688:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1768c:	cmp	r0, r1
   17690:	bge	176a0 <__assert_fail@plt+0x619c>
   17694:	ldr	r0, [fp, #8]
   17698:	str	r0, [sp, #108]	; 0x6c
   1769c:	b	176a8 <__assert_fail@plt+0x61a4>
   176a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   176a4:	str	r0, [sp, #108]	; 0x6c
   176a8:	ldr	r0, [sp, #108]	; 0x6c
   176ac:	str	r0, [fp, #-48]	; 0xffffffd0
   176b0:	ldr	r0, [fp, #8]
   176b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   176b8:	cmp	r0, r1
   176bc:	bge	176cc <__assert_fail@plt+0x61c8>
   176c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   176c4:	str	r0, [sp, #104]	; 0x68
   176c8:	b	176d4 <__assert_fail@plt+0x61d0>
   176cc:	ldr	r0, [fp, #8]
   176d0:	str	r0, [sp, #104]	; 0x68
   176d4:	ldr	r0, [sp, #104]	; 0x68
   176d8:	str	r0, [fp, #-52]	; 0xffffffcc
   176dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   176e0:	ldr	r0, [r0, #92]	; 0x5c
   176e4:	cmp	r0, #1
   176e8:	movw	r0, #0
   176ec:	moveq	r0, #1
   176f0:	and	r0, r0, #1
   176f4:	strb	r0, [fp, #-77]	; 0xffffffb3
   176f8:	ldr	r0, [sp, #168]	; 0xa8
   176fc:	movw	r1, #0
   17700:	cmp	r0, r1
   17704:	beq	177c0 <__assert_fail@plt+0x62bc>
   17708:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   1770c:	tst	r0, #1
   17710:	movw	r0, #1
   17714:	str	r0, [sp, #100]	; 0x64
   17718:	bne	17760 <__assert_fail@plt+0x625c>
   1771c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17720:	ldr	r0, [r0, #12]
   17724:	and	r0, r0, #4194304	; 0x400000
   17728:	cmp	r0, #0
   1772c:	movw	r0, #1
   17730:	str	r0, [sp, #96]	; 0x60
   17734:	bne	17750 <__assert_fail@plt+0x624c>
   17738:	ldr	r0, [sp, #164]	; 0xa4
   1773c:	movw	r1, #0
   17740:	cmp	r0, r1
   17744:	movw	r0, #0
   17748:	movne	r0, #1
   1774c:	str	r0, [sp, #96]	; 0x60
   17750:	ldr	r0, [sp, #96]	; 0x60
   17754:	mvn	r1, #0
   17758:	eor	r0, r0, r1
   1775c:	str	r0, [sp, #100]	; 0x64
   17760:	ldr	r0, [sp, #100]	; 0x64
   17764:	tst	r0, #1
   17768:	movw	r0, #4
   1776c:	moveq	r0, #0
   17770:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17774:	ldr	r2, [fp, #8]
   17778:	cmp	r1, r2
   1777c:	movw	r1, #0
   17780:	movle	r1, #1
   17784:	tst	r1, #1
   17788:	movw	r1, #2
   1778c:	moveq	r1, #0
   17790:	orr	r0, r0, r1
   17794:	ldr	r1, [sp, #164]	; 0xa4
   17798:	movw	r2, #0
   1779c:	cmp	r1, r2
   177a0:	movw	r1, #0
   177a4:	movne	r1, #1
   177a8:	tst	r1, #1
   177ac:	movw	r1, #1
   177b0:	moveq	r1, #0
   177b4:	orr	r0, r0, r1
   177b8:	str	r0, [sp, #92]	; 0x5c
   177bc:	b	177cc <__assert_fail@plt+0x62c8>
   177c0:	movw	r0, #8
   177c4:	str	r0, [sp, #92]	; 0x5c
   177c8:	b	177cc <__assert_fail@plt+0x62c8>
   177cc:	ldr	r0, [sp, #92]	; 0x5c
   177d0:	str	r0, [fp, #-64]	; 0xffffffc0
   177d4:	movw	r0, #1
   177d8:	str	r0, [fp, #-40]	; 0xffffffd8
   177dc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   177e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   177e4:	cmp	r0, r1
   177e8:	blt	177fc <__assert_fail@plt+0x62f8>
   177ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   177f0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   177f4:	cmp	r0, r1
   177f8:	bge	17800 <__assert_fail@plt+0x62fc>
   177fc:	b	18110 <__assert_fail@plt+0x6c0c>
   17800:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17804:	sub	r0, r0, #4
   17808:	cmp	r0, #4
   1780c:	str	r0, [sp, #88]	; 0x58
   17810:	bhi	17a98 <__assert_fail@plt+0x6594>
   17814:	add	r0, pc, #8
   17818:	ldr	r1, [sp, #88]	; 0x58
   1781c:	ldr	r0, [r0, r1, lsl #2]
   17820:	mov	pc, r0
   17824:	andeq	r7, r1, ip, asr #19
   17828:	andeq	r7, r1, ip, asr #19
   1782c:			; <UNDEFINED> instruction: 0x000178b8
   17830:	andeq	r7, r1, ip, lsr r8
   17834:	andeq	r7, r1, r8, lsr r8
   17838:	b	17b8c <__assert_fail@plt+0x6688>
   1783c:	b	17840 <__assert_fail@plt+0x633c>
   17840:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17844:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17848:	cmp	r0, r1
   1784c:	movw	r0, #0
   17850:	str	r0, [sp, #84]	; 0x54
   17854:	bge	17898 <__assert_fail@plt+0x6394>
   17858:	ldr	r0, [sp, #168]	; 0xa8
   1785c:	ldr	r1, [sp, #164]	; 0xa4
   17860:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17864:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17868:	add	r2, r2, r3
   1786c:	ldrb	r2, [r2]
   17870:	add	r1, r1, r2
   17874:	ldrb	r1, [r1]
   17878:	add	r0, r0, r1
   1787c:	ldrsb	r0, [r0]
   17880:	cmp	r0, #0
   17884:	movw	r0, #0
   17888:	movne	r0, #1
   1788c:	mvn	r1, #0
   17890:	eor	r0, r0, r1
   17894:	str	r0, [sp, #84]	; 0x54
   17898:	ldr	r0, [sp, #84]	; 0x54
   1789c:	tst	r0, #1
   178a0:	beq	178b4 <__assert_fail@plt+0x63b0>
   178a4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   178a8:	add	r0, r0, #1
   178ac:	str	r0, [fp, #-68]	; 0xffffffbc
   178b0:	b	17840 <__assert_fail@plt+0x633c>
   178b4:	b	17928 <__assert_fail@plt+0x6424>
   178b8:	b	178bc <__assert_fail@plt+0x63b8>
   178bc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   178c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   178c4:	cmp	r0, r1
   178c8:	movw	r0, #0
   178cc:	str	r0, [sp, #80]	; 0x50
   178d0:	bge	17908 <__assert_fail@plt+0x6404>
   178d4:	ldr	r0, [sp, #168]	; 0xa8
   178d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   178dc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   178e0:	add	r1, r1, r2
   178e4:	ldrb	r1, [r1]
   178e8:	add	r0, r0, r1
   178ec:	ldrsb	r0, [r0]
   178f0:	cmp	r0, #0
   178f4:	movw	r0, #0
   178f8:	movne	r0, #1
   178fc:	mvn	r1, #0
   17900:	eor	r0, r0, r1
   17904:	str	r0, [sp, #80]	; 0x50
   17908:	ldr	r0, [sp, #80]	; 0x50
   1790c:	tst	r0, #1
   17910:	beq	17924 <__assert_fail@plt+0x6420>
   17914:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17918:	add	r0, r0, #1
   1791c:	str	r0, [fp, #-68]	; 0xffffffbc
   17920:	b	178bc <__assert_fail@plt+0x63b8>
   17924:	b	17928 <__assert_fail@plt+0x6424>
   17928:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1792c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17930:	cmp	r0, r1
   17934:	bne	179c8 <__assert_fail@plt+0x64c4>
   17938:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1793c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17940:	cmp	r0, r1
   17944:	blt	17954 <__assert_fail@plt+0x6450>
   17948:	movw	r0, #0
   1794c:	str	r0, [sp, #76]	; 0x4c
   17950:	b	17968 <__assert_fail@plt+0x6464>
   17954:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17958:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1795c:	add	r0, r0, r1
   17960:	ldrb	r0, [r0]
   17964:	str	r0, [sp, #76]	; 0x4c
   17968:	ldr	r0, [sp, #76]	; 0x4c
   1796c:	str	r0, [fp, #-84]	; 0xffffffac
   17970:	ldr	r0, [sp, #168]	; 0xa8
   17974:	ldr	r1, [sp, #164]	; 0xa4
   17978:	movw	r2, #0
   1797c:	cmp	r1, r2
   17980:	str	r0, [sp, #72]	; 0x48
   17984:	beq	179a0 <__assert_fail@plt+0x649c>
   17988:	ldr	r0, [sp, #164]	; 0xa4
   1798c:	ldr	r1, [fp, #-84]	; 0xffffffac
   17990:	add	r0, r0, r1
   17994:	ldrb	r0, [r0]
   17998:	str	r0, [sp, #68]	; 0x44
   1799c:	b	179a8 <__assert_fail@plt+0x64a4>
   179a0:	ldr	r0, [fp, #-84]	; 0xffffffac
   179a4:	str	r0, [sp, #68]	; 0x44
   179a8:	ldr	r0, [sp, #68]	; 0x44
   179ac:	ldr	r1, [sp, #72]	; 0x48
   179b0:	add	r0, r1, r0
   179b4:	ldrsb	r0, [r0]
   179b8:	cmp	r0, #0
   179bc:	bne	179c4 <__assert_fail@plt+0x64c0>
   179c0:	b	18110 <__assert_fail@plt+0x6c0c>
   179c4:	b	179c8 <__assert_fail@plt+0x64c4>
   179c8:	b	17b8c <__assert_fail@plt+0x6688>
   179cc:	b	179d0 <__assert_fail@plt+0x64cc>
   179d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   179d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   179d8:	cmp	r0, r1
   179dc:	blt	17a80 <__assert_fail@plt+0x657c>
   179e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   179e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   179e8:	cmp	r0, r1
   179ec:	blt	179fc <__assert_fail@plt+0x64f8>
   179f0:	movw	r0, #0
   179f4:	str	r0, [sp, #64]	; 0x40
   179f8:	b	17a10 <__assert_fail@plt+0x650c>
   179fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17a00:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17a04:	add	r0, r0, r1
   17a08:	ldrb	r0, [r0]
   17a0c:	str	r0, [sp, #64]	; 0x40
   17a10:	ldr	r0, [sp, #64]	; 0x40
   17a14:	str	r0, [fp, #-84]	; 0xffffffac
   17a18:	ldr	r0, [sp, #168]	; 0xa8
   17a1c:	ldr	r1, [sp, #164]	; 0xa4
   17a20:	movw	r2, #0
   17a24:	cmp	r1, r2
   17a28:	str	r0, [sp, #60]	; 0x3c
   17a2c:	beq	17a48 <__assert_fail@plt+0x6544>
   17a30:	ldr	r0, [sp, #164]	; 0xa4
   17a34:	ldr	r1, [fp, #-84]	; 0xffffffac
   17a38:	add	r0, r0, r1
   17a3c:	ldrb	r0, [r0]
   17a40:	str	r0, [sp, #56]	; 0x38
   17a44:	b	17a50 <__assert_fail@plt+0x654c>
   17a48:	ldr	r0, [fp, #-84]	; 0xffffffac
   17a4c:	str	r0, [sp, #56]	; 0x38
   17a50:	ldr	r0, [sp, #56]	; 0x38
   17a54:	ldr	r1, [sp, #60]	; 0x3c
   17a58:	add	r0, r1, r0
   17a5c:	ldrsb	r0, [r0]
   17a60:	cmp	r0, #0
   17a64:	beq	17a6c <__assert_fail@plt+0x6568>
   17a68:	b	17a80 <__assert_fail@plt+0x657c>
   17a6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17a70:	mvn	r1, #0
   17a74:	add	r0, r0, r1
   17a78:	str	r0, [fp, #-68]	; 0xffffffbc
   17a7c:	b	179d0 <__assert_fail@plt+0x64cc>
   17a80:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17a84:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17a88:	cmp	r0, r1
   17a8c:	bge	17a94 <__assert_fail@plt+0x6590>
   17a90:	b	18110 <__assert_fail@plt+0x6c0c>
   17a94:	b	17b8c <__assert_fail@plt+0x6688>
   17a98:	b	17a9c <__assert_fail@plt+0x6598>
   17a9c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17aa0:	ldr	r1, [sp, #196]	; 0xc4
   17aa4:	sub	r0, r0, r1
   17aa8:	str	r0, [sp, #160]	; 0xa0
   17aac:	ldr	r0, [sp, #160]	; 0xa0
   17ab0:	ldr	r1, [sp, #204]	; 0xcc
   17ab4:	cmp	r0, r1
   17ab8:	bcc	17af0 <__assert_fail@plt+0x65ec>
   17abc:	add	r0, sp, #172	; 0xac
   17ac0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17ac4:	ldr	r2, [fp, #24]
   17ac8:	bl	23f88 <__assert_fail@plt+0x12a84>
   17acc:	str	r0, [fp, #-40]	; 0xffffffd8
   17ad0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ad4:	cmp	r0, #0
   17ad8:	beq	17ae0 <__assert_fail@plt+0x65dc>
   17adc:	b	18110 <__assert_fail@plt+0x6c0c>
   17ae0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17ae4:	ldr	r1, [sp, #196]	; 0xc4
   17ae8:	sub	r0, r0, r1
   17aec:	str	r0, [sp, #160]	; 0xa0
   17af0:	ldr	r0, [sp, #160]	; 0xa0
   17af4:	ldr	r1, [sp, #200]	; 0xc8
   17af8:	cmp	r0, r1
   17afc:	bcs	17b18 <__assert_fail@plt+0x6614>
   17b00:	ldr	r0, [sp, #176]	; 0xb0
   17b04:	ldr	r1, [sp, #160]	; 0xa0
   17b08:	add	r0, r0, r1
   17b0c:	ldrb	r0, [r0]
   17b10:	str	r0, [sp, #52]	; 0x34
   17b14:	b	17b24 <__assert_fail@plt+0x6620>
   17b18:	movw	r0, #0
   17b1c:	str	r0, [sp, #52]	; 0x34
   17b20:	b	17b24 <__assert_fail@plt+0x6620>
   17b24:	ldr	r0, [sp, #52]	; 0x34
   17b28:	str	r0, [fp, #-84]	; 0xffffffac
   17b2c:	ldr	r0, [sp, #168]	; 0xa8
   17b30:	ldr	r1, [fp, #-84]	; 0xffffffac
   17b34:	add	r0, r0, r1
   17b38:	ldrsb	r0, [r0]
   17b3c:	cmp	r0, #0
   17b40:	beq	17b48 <__assert_fail@plt+0x6644>
   17b44:	b	17b88 <__assert_fail@plt+0x6684>
   17b48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17b4c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17b50:	add	r0, r1, r0
   17b54:	str	r0, [fp, #-68]	; 0xffffffbc
   17b58:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17b5c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17b60:	cmp	r0, r1
   17b64:	blt	17b78 <__assert_fail@plt+0x6674>
   17b68:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17b6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17b70:	cmp	r0, r1
   17b74:	ble	17b84 <__assert_fail@plt+0x6680>
   17b78:	movw	r0, #1
   17b7c:	str	r0, [fp, #-40]	; 0xffffffd8
   17b80:	b	18110 <__assert_fail@plt+0x6c0c>
   17b84:	b	17a9c <__assert_fail@plt+0x6598>
   17b88:	b	17b8c <__assert_fail@plt+0x6688>
   17b8c:	add	r0, sp, #172	; 0xac
   17b90:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17b94:	ldr	r2, [fp, #24]
   17b98:	bl	23f88 <__assert_fail@plt+0x12a84>
   17b9c:	str	r0, [fp, #-40]	; 0xffffffd8
   17ba0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ba4:	cmp	r0, #0
   17ba8:	beq	17bb0 <__assert_fail@plt+0x66ac>
   17bac:	b	18110 <__assert_fail@plt+0x6c0c>
   17bb0:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   17bb4:	tst	r0, #1
   17bb8:	bne	17be0 <__assert_fail@plt+0x66dc>
   17bbc:	ldr	r0, [sp, #200]	; 0xc8
   17bc0:	movw	r1, #0
   17bc4:	cmp	r1, r0
   17bc8:	beq	17be0 <__assert_fail@plt+0x66dc>
   17bcc:	ldr	r0, [sp, #180]	; 0xb4
   17bd0:	ldr	r0, [r0]
   17bd4:	cmn	r0, #1
   17bd8:	bne	17be0 <__assert_fail@plt+0x66dc>
   17bdc:	b	17d64 <__assert_fail@plt+0x6860>
   17be0:	movw	r0, #0
   17be4:	str	r0, [sp, #292]	; 0x124
   17be8:	str	r0, [sp, #280]	; 0x118
   17bec:	str	r0, [sp, #276]	; 0x114
   17bf0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   17bf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17bf8:	ldr	r2, [fp, #8]
   17bfc:	cmp	r1, r2
   17c00:	str	r0, [sp, #48]	; 0x30
   17c04:	bgt	17c14 <__assert_fail@plt+0x6710>
   17c08:	sub	r0, fp, #68	; 0x44
   17c0c:	str	r0, [sp, #44]	; 0x2c
   17c10:	b	17c20 <__assert_fail@plt+0x671c>
   17c14:	movw	r0, #0
   17c18:	str	r0, [sp, #44]	; 0x2c
   17c1c:	b	17c20 <__assert_fail@plt+0x671c>
   17c20:	ldr	r0, [sp, #44]	; 0x2c
   17c24:	add	r1, sp, #172	; 0xac
   17c28:	str	r0, [sp, #40]	; 0x28
   17c2c:	mov	r0, r1
   17c30:	ldr	r1, [sp, #48]	; 0x30
   17c34:	and	r1, r1, #1
   17c38:	ldr	r2, [sp, #40]	; 0x28
   17c3c:	bl	24b74 <__assert_fail@plt+0x13670>
   17c40:	str	r0, [fp, #-72]	; 0xffffffb8
   17c44:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17c48:	cmn	r0, #1
   17c4c:	beq	17d5c <__assert_fail@plt+0x6858>
   17c50:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17c54:	cmn	r0, #2
   17c58:	bne	17c68 <__assert_fail@plt+0x6764>
   17c5c:	movw	r0, #12
   17c60:	str	r0, [fp, #-40]	; 0xffffffd8
   17c64:	b	18110 <__assert_fail@plt+0x6c0c>
   17c68:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17c6c:	str	r0, [sp, #264]	; 0x108
   17c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c74:	ldrb	r0, [r0, #28]
   17c78:	ubfx	r0, r0, #4, #1
   17c7c:	and	r0, r0, #255	; 0xff
   17c80:	cmp	r0, #0
   17c84:	bne	17c94 <__assert_fail@plt+0x6790>
   17c88:	ldr	r0, [fp, #16]
   17c8c:	cmp	r0, #1
   17c90:	bhi	17ca4 <__assert_fail@plt+0x67a0>
   17c94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17c98:	ldr	r0, [r0, #76]	; 0x4c
   17c9c:	cmp	r0, #0
   17ca0:	beq	17ccc <__assert_fail@plt+0x67c8>
   17ca4:	ldr	r0, [sp, #272]	; 0x110
   17ca8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17cac:	add	r0, r0, r1, lsl #2
   17cb0:	ldr	r0, [r0]
   17cb4:	str	r0, [sp, #156]	; 0x9c
   17cb8:	ldr	r1, [sp, #156]	; 0x9c
   17cbc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17cc0:	add	r0, sp, #172	; 0xac
   17cc4:	bl	25100 <__assert_fail@plt+0x13bfc>
   17cc8:	str	r0, [sp, #268]	; 0x10c
   17ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cd0:	ldrb	r0, [r0, #28]
   17cd4:	ubfx	r0, r0, #4, #1
   17cd8:	and	r0, r0, #255	; 0xff
   17cdc:	cmp	r0, #0
   17ce0:	bne	17d08 <__assert_fail@plt+0x6804>
   17ce4:	ldr	r0, [fp, #16]
   17ce8:	cmp	r0, #1
   17cec:	bls	17d08 <__assert_fail@plt+0x6804>
   17cf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17cf4:	ldrb	r0, [r0, #88]	; 0x58
   17cf8:	and	r0, r0, #1
   17cfc:	and	r0, r0, #255	; 0xff
   17d00:	cmp	r0, #0
   17d04:	bne	17d18 <__assert_fail@plt+0x6814>
   17d08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17d0c:	ldr	r0, [r0, #76]	; 0x4c
   17d10:	cmp	r0, #0
   17d14:	beq	17d50 <__assert_fail@plt+0x684c>
   17d18:	add	r0, sp, #172	; 0xac
   17d1c:	bl	251d8 <__assert_fail@plt+0x13cd4>
   17d20:	str	r0, [fp, #-40]	; 0xffffffd8
   17d24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d28:	cmp	r0, #0
   17d2c:	bne	17d34 <__assert_fail@plt+0x6830>
   17d30:	b	17d78 <__assert_fail@plt+0x6874>
   17d34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d38:	cmp	r0, #1
   17d3c:	beq	17d44 <__assert_fail@plt+0x6840>
   17d40:	b	18110 <__assert_fail@plt+0x6c0c>
   17d44:	mvn	r0, #0
   17d48:	str	r0, [fp, #-72]	; 0xffffffb8
   17d4c:	b	17d54 <__assert_fail@plt+0x6850>
   17d50:	b	17d78 <__assert_fail@plt+0x6874>
   17d54:	b	17d58 <__assert_fail@plt+0x6854>
   17d58:	b	17d5c <__assert_fail@plt+0x6858>
   17d5c:	add	r0, sp, #172	; 0xac
   17d60:	bl	25524 <__assert_fail@plt+0x14020>
   17d64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17d68:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17d6c:	add	r0, r1, r0
   17d70:	str	r0, [fp, #-68]	; 0xffffffbc
   17d74:	b	177d4 <__assert_fail@plt+0x62d0>
   17d78:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17d7c:	cmn	r0, #1
   17d80:	beq	17d88 <__assert_fail@plt+0x6884>
   17d84:	b	17d88 <__assert_fail@plt+0x6884>
   17d88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d8c:	cmp	r0, #0
   17d90:	bne	17d98 <__assert_fail@plt+0x6894>
   17d94:	b	17d98 <__assert_fail@plt+0x6894>
   17d98:	ldr	r0, [fp, #16]
   17d9c:	cmp	r0, #0
   17da0:	bls	1810c <__assert_fail@plt+0x6c08>
   17da4:	movw	r0, #1
   17da8:	str	r0, [sp, #152]	; 0x98
   17dac:	ldr	r0, [sp, #152]	; 0x98
   17db0:	ldr	r1, [fp, #16]
   17db4:	cmp	r0, r1
   17db8:	bcs	17df4 <__assert_fail@plt+0x68f0>
   17dbc:	ldr	r0, [fp, #20]
   17dc0:	ldr	r1, [sp, #152]	; 0x98
   17dc4:	add	r0, r0, r1, lsl #3
   17dc8:	mvn	r1, #0
   17dcc:	str	r1, [r0, #4]
   17dd0:	ldr	r0, [fp, #20]
   17dd4:	ldr	r1, [sp, #152]	; 0x98
   17dd8:	add	r0, r0, r1, lsl #3
   17ddc:	mvn	r1, #0
   17de0:	str	r1, [r0]
   17de4:	ldr	r0, [sp, #152]	; 0x98
   17de8:	add	r0, r0, #1
   17dec:	str	r0, [sp, #152]	; 0x98
   17df0:	b	17dac <__assert_fail@plt+0x68a8>
   17df4:	ldr	r0, [fp, #20]
   17df8:	mov	r1, #0
   17dfc:	str	r1, [r0]
   17e00:	ldr	r0, [sp, #264]	; 0x108
   17e04:	ldr	r1, [fp, #20]
   17e08:	str	r0, [r1, #4]
   17e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e10:	ldrb	r0, [r0, #28]
   17e14:	ubfx	r0, r0, #4, #1
   17e18:	and	r0, r0, #255	; 0xff
   17e1c:	cmp	r0, #0
   17e20:	bne	17ec4 <__assert_fail@plt+0x69c0>
   17e24:	ldr	r0, [fp, #16]
   17e28:	cmp	r0, #1
   17e2c:	bls	17ec4 <__assert_fail@plt+0x69c0>
   17e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e34:	ldr	r2, [fp, #16]
   17e38:	ldr	r3, [fp, #20]
   17e3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17e40:	ldrb	r1, [r1, #88]	; 0x58
   17e44:	and	r1, r1, #1
   17e48:	and	r1, r1, #255	; 0xff
   17e4c:	cmp	r1, #0
   17e50:	movw	r1, #0
   17e54:	str	r0, [sp, #36]	; 0x24
   17e58:	str	r2, [sp, #32]
   17e5c:	str	r3, [sp, #28]
   17e60:	str	r1, [sp, #24]
   17e64:	beq	17e80 <__assert_fail@plt+0x697c>
   17e68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17e6c:	ldr	r0, [r0, #76]	; 0x4c
   17e70:	cmp	r0, #0
   17e74:	movw	r0, #0
   17e78:	movgt	r0, #1
   17e7c:	str	r0, [sp, #24]
   17e80:	ldr	r0, [sp, #24]
   17e84:	ldr	r1, [sp, #36]	; 0x24
   17e88:	str	r0, [sp, #20]
   17e8c:	mov	r0, r1
   17e90:	add	r1, sp, #172	; 0xac
   17e94:	ldr	r2, [sp, #32]
   17e98:	ldr	r3, [sp, #28]
   17e9c:	ldr	ip, [sp, #20]
   17ea0:	and	lr, ip, #1
   17ea4:	str	lr, [sp]
   17ea8:	bl	25630 <__assert_fail@plt+0x1412c>
   17eac:	str	r0, [fp, #-40]	; 0xffffffd8
   17eb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17eb4:	cmp	r0, #0
   17eb8:	beq	17ec0 <__assert_fail@plt+0x69bc>
   17ebc:	b	18110 <__assert_fail@plt+0x6c0c>
   17ec0:	b	17ec4 <__assert_fail@plt+0x69c0>
   17ec4:	movw	r0, #0
   17ec8:	str	r0, [sp, #152]	; 0x98
   17ecc:	ldr	r0, [sp, #152]	; 0x98
   17ed0:	ldr	r1, [fp, #16]
   17ed4:	cmp	r0, r1
   17ed8:	bcs	17ff8 <__assert_fail@plt+0x6af4>
   17edc:	ldr	r0, [fp, #20]
   17ee0:	ldr	r1, [sp, #152]	; 0x98
   17ee4:	add	r0, r0, r1, lsl #3
   17ee8:	ldr	r0, [r0]
   17eec:	cmn	r0, #1
   17ef0:	beq	17fe4 <__assert_fail@plt+0x6ae0>
   17ef4:	ldrb	r0, [sp, #248]	; 0xf8
   17ef8:	cmp	r0, #0
   17efc:	beq	17fb0 <__assert_fail@plt+0x6aac>
   17f00:	ldr	r0, [fp, #20]
   17f04:	ldr	r1, [sp, #152]	; 0x98
   17f08:	add	r0, r0, r1, lsl #3
   17f0c:	ldr	r0, [r0]
   17f10:	ldr	r1, [sp, #200]	; 0xc8
   17f14:	cmp	r0, r1
   17f18:	bne	17f28 <__assert_fail@plt+0x6a24>
   17f1c:	ldr	r0, [sp, #204]	; 0xcc
   17f20:	str	r0, [sp, #16]
   17f24:	b	17f44 <__assert_fail@plt+0x6a40>
   17f28:	ldr	r0, [sp, #184]	; 0xb8
   17f2c:	ldr	r1, [fp, #20]
   17f30:	ldr	r2, [sp, #152]	; 0x98
   17f34:	ldr	r1, [r1, r2, lsl #3]
   17f38:	add	r0, r0, r1, lsl #2
   17f3c:	ldr	r0, [r0]
   17f40:	str	r0, [sp, #16]
   17f44:	ldr	r0, [sp, #16]
   17f48:	ldr	r1, [fp, #20]
   17f4c:	ldr	r2, [sp, #152]	; 0x98
   17f50:	str	r0, [r1, r2, lsl #3]
   17f54:	ldr	r0, [fp, #20]
   17f58:	ldr	r1, [sp, #152]	; 0x98
   17f5c:	add	r0, r0, r1, lsl #3
   17f60:	ldr	r0, [r0, #4]
   17f64:	ldr	r1, [sp, #200]	; 0xc8
   17f68:	cmp	r0, r1
   17f6c:	bne	17f7c <__assert_fail@plt+0x6a78>
   17f70:	ldr	r0, [sp, #204]	; 0xcc
   17f74:	str	r0, [sp, #12]
   17f78:	b	17f9c <__assert_fail@plt+0x6a98>
   17f7c:	ldr	r0, [sp, #184]	; 0xb8
   17f80:	ldr	r1, [fp, #20]
   17f84:	ldr	r2, [sp, #152]	; 0x98
   17f88:	add	r1, r1, r2, lsl #3
   17f8c:	ldr	r1, [r1, #4]
   17f90:	add	r0, r0, r1, lsl #2
   17f94:	ldr	r0, [r0]
   17f98:	str	r0, [sp, #12]
   17f9c:	ldr	r0, [sp, #12]
   17fa0:	ldr	r1, [fp, #20]
   17fa4:	ldr	r2, [sp, #152]	; 0x98
   17fa8:	add	r1, r1, r2, lsl #3
   17fac:	str	r0, [r1, #4]
   17fb0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17fb4:	ldr	r1, [fp, #20]
   17fb8:	ldr	r2, [sp, #152]	; 0x98
   17fbc:	ldr	r3, [r1, r2, lsl #3]
   17fc0:	add	r0, r3, r0
   17fc4:	str	r0, [r1, r2, lsl #3]
   17fc8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17fcc:	ldr	r1, [fp, #20]
   17fd0:	ldr	r2, [sp, #152]	; 0x98
   17fd4:	add	r1, r1, r2, lsl #3
   17fd8:	ldr	r2, [r1, #4]
   17fdc:	add	r0, r2, r0
   17fe0:	str	r0, [r1, #4]
   17fe4:	b	17fe8 <__assert_fail@plt+0x6ae4>
   17fe8:	ldr	r0, [sp, #152]	; 0x98
   17fec:	add	r0, r0, #1
   17ff0:	str	r0, [sp, #152]	; 0x98
   17ff4:	b	17ecc <__assert_fail@plt+0x69c8>
   17ff8:	movw	r0, #0
   17ffc:	str	r0, [sp, #152]	; 0x98
   18000:	ldr	r0, [sp, #152]	; 0x98
   18004:	ldr	r1, [fp, #-76]	; 0xffffffb4
   18008:	cmp	r0, r1
   1800c:	bge	18054 <__assert_fail@plt+0x6b50>
   18010:	ldr	r0, [fp, #20]
   18014:	ldr	r1, [fp, #16]
   18018:	ldr	r2, [sp, #152]	; 0x98
   1801c:	add	r1, r1, r2
   18020:	mvn	r2, #0
   18024:	str	r2, [r0, r1, lsl #3]
   18028:	ldr	r0, [fp, #20]
   1802c:	ldr	r1, [fp, #16]
   18030:	ldr	r2, [sp, #152]	; 0x98
   18034:	add	r1, r1, r2
   18038:	add	r0, r0, r1, lsl #3
   1803c:	mvn	r1, #0
   18040:	str	r1, [r0, #4]
   18044:	ldr	r0, [sp, #152]	; 0x98
   18048:	add	r0, r0, #1
   1804c:	str	r0, [sp, #152]	; 0x98
   18050:	b	18000 <__assert_fail@plt+0x6afc>
   18054:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18058:	ldr	r0, [r0, #132]	; 0x84
   1805c:	movw	r1, #0
   18060:	cmp	r0, r1
   18064:	beq	18108 <__assert_fail@plt+0x6c04>
   18068:	movw	r0, #0
   1806c:	str	r0, [sp, #152]	; 0x98
   18070:	ldr	r0, [sp, #152]	; 0x98
   18074:	add	r0, r0, #1
   18078:	ldr	r1, [fp, #16]
   1807c:	cmp	r0, r1
   18080:	bcs	18104 <__assert_fail@plt+0x6c00>
   18084:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18088:	ldr	r0, [r0, #132]	; 0x84
   1808c:	ldr	r1, [sp, #152]	; 0x98
   18090:	add	r0, r0, r1, lsl #2
   18094:	ldr	r0, [r0]
   18098:	ldr	r1, [sp, #152]	; 0x98
   1809c:	cmp	r0, r1
   180a0:	beq	180f0 <__assert_fail@plt+0x6bec>
   180a4:	ldr	r0, [fp, #20]
   180a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   180ac:	ldr	r1, [r1, #132]	; 0x84
   180b0:	ldr	r2, [sp, #152]	; 0x98
   180b4:	ldr	r1, [r1, r2, lsl #2]
   180b8:	add	r1, r0, r1, lsl #3
   180bc:	ldr	r1, [r1, #8]
   180c0:	add	r0, r0, r2, lsl #3
   180c4:	str	r1, [r0, #8]
   180c8:	ldr	r0, [fp, #20]
   180cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   180d0:	ldr	r1, [r1, #132]	; 0x84
   180d4:	ldr	r2, [sp, #152]	; 0x98
   180d8:	ldr	r1, [r1, r2, lsl #2]
   180dc:	add	r1, r0, r1, lsl #3
   180e0:	ldr	r1, [r1, #12]
   180e4:	add	r2, r2, #1
   180e8:	add	r0, r0, r2, lsl #3
   180ec:	str	r1, [r0, #4]
   180f0:	b	180f4 <__assert_fail@plt+0x6bf0>
   180f4:	ldr	r0, [sp, #152]	; 0x98
   180f8:	add	r0, r0, #1
   180fc:	str	r0, [sp, #152]	; 0x98
   18100:	b	18070 <__assert_fail@plt+0x6b6c>
   18104:	b	18108 <__assert_fail@plt+0x6c04>
   18108:	b	1810c <__assert_fail@plt+0x6c08>
   1810c:	b	18110 <__assert_fail@plt+0x6c0c>
   18110:	ldr	r0, [sp, #272]	; 0x110
   18114:	bl	34c20 <__assert_fail@plt+0x2371c>
   18118:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1811c:	ldr	r0, [r0, #76]	; 0x4c
   18120:	cmp	r0, #0
   18124:	beq	18130 <__assert_fail@plt+0x6c2c>
   18128:	add	r0, sp, #172	; 0xac
   1812c:	bl	259f8 <__assert_fail@plt+0x144f4>
   18130:	add	r0, sp, #172	; 0xac
   18134:	bl	19470 <__assert_fail@plt+0x7f6c>
   18138:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1813c:	str	r0, [fp, #-20]	; 0xffffffec
   18140:	ldr	r0, [fp, #-20]	; 0xffffffec
   18144:	sub	sp, fp, #16
   18148:	pop	{r4, r5, r6, sl, fp, pc}
   1814c:	svccc	0x00ffffff
   18150:	push	{r4, r5, fp, lr}
   18154:	add	fp, sp, #8
   18158:	sub	sp, sp, #40	; 0x28
   1815c:	ldr	ip, [fp, #8]
   18160:	str	r0, [fp, #-12]
   18164:	str	r1, [fp, #-16]
   18168:	str	r2, [fp, #-20]	; 0xffffffec
   1816c:	str	r3, [sp, #24]
   18170:	ldr	r0, [fp, #-12]
   18174:	ldr	r1, [fp, #-16]
   18178:	ldr	r2, [fp, #-20]	; 0xffffffec
   1817c:	ldr	r3, [sp, #24]
   18180:	ldr	lr, [fp, #-20]	; 0xffffffec
   18184:	ldr	r4, [fp, #8]
   18188:	movw	r5, #0
   1818c:	str	r5, [sp]
   18190:	str	lr, [sp, #4]
   18194:	str	r4, [sp, #8]
   18198:	movw	lr, #1
   1819c:	and	lr, lr, #1
   181a0:	str	lr, [sp, #12]
   181a4:	str	ip, [sp, #20]
   181a8:	bl	181b4 <__assert_fail@plt+0x6cb0>
   181ac:	sub	sp, fp, #8
   181b0:	pop	{r4, r5, fp, pc}
   181b4:	push	{r4, r5, r6, sl, fp, lr}
   181b8:	add	fp, sp, #16
   181bc:	sub	sp, sp, #96	; 0x60
   181c0:	ldr	ip, [fp, #20]
   181c4:	ldr	lr, [fp, #16]
   181c8:	ldr	r4, [fp, #12]
   181cc:	ldr	r5, [fp, #8]
   181d0:	str	r0, [fp, #-24]	; 0xffffffe8
   181d4:	str	r1, [fp, #-28]	; 0xffffffe4
   181d8:	str	r2, [fp, #-32]	; 0xffffffe0
   181dc:	str	r3, [fp, #-36]	; 0xffffffdc
   181e0:	and	r0, ip, #1
   181e4:	strb	r0, [fp, #-37]	; 0xffffffdb
   181e8:	movw	r0, #0
   181ec:	str	r0, [sp, #52]	; 0x34
   181f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181f4:	ldr	r0, [r0]
   181f8:	str	r0, [sp, #48]	; 0x30
   181fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18200:	ldr	r1, [fp, #8]
   18204:	add	r0, r0, r1
   18208:	str	r0, [sp, #44]	; 0x2c
   1820c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18210:	cmp	r0, #0
   18214:	movw	r0, #1
   18218:	str	r0, [sp, #40]	; 0x28
   1821c:	blt	18238 <__assert_fail@plt+0x6d34>
   18220:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18224:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18228:	cmp	r0, r1
   1822c:	movw	r0, #0
   18230:	movgt	r0, #1
   18234:	str	r0, [sp, #40]	; 0x28
   18238:	ldr	r0, [sp, #40]	; 0x28
   1823c:	tst	r0, #1
   18240:	beq	18250 <__assert_fail@plt+0x6d4c>
   18244:	mvn	r0, #0
   18248:	str	r0, [fp, #-20]	; 0xffffffec
   1824c:	b	18668 <__assert_fail@plt+0x7164>
   18250:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18254:	ldr	r1, [sp, #44]	; 0x2c
   18258:	cmp	r0, r1
   1825c:	movw	r0, #1
   18260:	str	r0, [sp, #36]	; 0x24
   18264:	blt	182a0 <__assert_fail@plt+0x6d9c>
   18268:	ldr	r0, [fp, #8]
   1826c:	movw	r1, #0
   18270:	cmp	r1, r0
   18274:	movw	r0, #0
   18278:	str	r0, [sp, #32]
   1827c:	bgt	18298 <__assert_fail@plt+0x6d94>
   18280:	ldr	r0, [sp, #44]	; 0x2c
   18284:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18288:	cmp	r0, r1
   1828c:	movw	r0, #0
   18290:	movlt	r0, #1
   18294:	str	r0, [sp, #32]
   18298:	ldr	r0, [sp, #32]
   1829c:	str	r0, [sp, #36]	; 0x24
   182a0:	ldr	r0, [sp, #36]	; 0x24
   182a4:	tst	r0, #1
   182a8:	beq	182b8 <__assert_fail@plt+0x6db4>
   182ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   182b0:	str	r0, [sp, #44]	; 0x2c
   182b4:	b	18318 <__assert_fail@plt+0x6e14>
   182b8:	ldr	r0, [sp, #44]	; 0x2c
   182bc:	cmp	r0, #0
   182c0:	movw	r0, #1
   182c4:	str	r0, [sp, #28]
   182c8:	blt	18300 <__assert_fail@plt+0x6dfc>
   182cc:	ldr	r0, [fp, #8]
   182d0:	cmp	r0, #0
   182d4:	movw	r0, #0
   182d8:	str	r0, [sp, #24]
   182dc:	bge	182f8 <__assert_fail@plt+0x6df4>
   182e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   182e4:	ldr	r1, [sp, #44]	; 0x2c
   182e8:	cmp	r0, r1
   182ec:	movw	r0, #0
   182f0:	movle	r0, #1
   182f4:	str	r0, [sp, #24]
   182f8:	ldr	r0, [sp, #24]
   182fc:	str	r0, [sp, #28]
   18300:	ldr	r0, [sp, #28]
   18304:	tst	r0, #1
   18308:	beq	18314 <__assert_fail@plt+0x6e10>
   1830c:	movw	r0, #0
   18310:	str	r0, [sp, #44]	; 0x2c
   18314:	b	18318 <__assert_fail@plt+0x6e14>
   18318:	movw	r0, #0
   1831c:	movt	r0, #0
   18320:	cmp	r0, #0
   18324:	bne	18340 <__assert_fail@plt+0x6e3c>
   18328:	b	1832c <__assert_fail@plt+0x6e28>
   1832c:	movw	r0, #0
   18330:	movt	r0, #0
   18334:	cmp	r0, #0
   18338:	beq	18350 <__assert_fail@plt+0x6e4c>
   1833c:	b	18340 <__assert_fail@plt+0x6e3c>
   18340:	ldr	r0, [sp, #48]	; 0x30
   18344:	add	r0, r0, #136	; 0x88
   18348:	bl	11288 <pthread_mutex_lock@plt>
   1834c:	b	18354 <__assert_fail@plt+0x6e50>
   18350:	b	18354 <__assert_fail@plt+0x6e50>
   18354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18358:	ldrb	r0, [r0, #28]
   1835c:	ldr	r1, [sp, #52]	; 0x34
   18360:	orr	r2, r1, #1
   18364:	mov	r3, #1
   18368:	tst	r3, r0, lsr #5
   1836c:	movne	r1, r2
   18370:	str	r1, [sp, #52]	; 0x34
   18374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18378:	ldrb	r0, [r0, #28]
   1837c:	ubfx	r0, r0, #6, #1
   18380:	and	r0, r0, #255	; 0xff
   18384:	cmp	r0, #0
   18388:	movw	r0, #0
   1838c:	movne	r0, #1
   18390:	tst	r0, #1
   18394:	movw	r0, #2
   18398:	moveq	r0, #0
   1839c:	ldr	r1, [sp, #52]	; 0x34
   183a0:	orr	r0, r1, r0
   183a4:	str	r0, [sp, #52]	; 0x34
   183a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   183ac:	ldr	r1, [sp, #44]	; 0x2c
   183b0:	cmp	r0, r1
   183b4:	bge	183ec <__assert_fail@plt+0x6ee8>
   183b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183bc:	ldr	r0, [r0, #16]
   183c0:	movw	r1, #0
   183c4:	cmp	r0, r1
   183c8:	beq	183ec <__assert_fail@plt+0x6ee8>
   183cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183d0:	ldrb	r0, [r0, #28]
   183d4:	ubfx	r0, r0, #3, #1
   183d8:	and	r0, r0, #255	; 0xff
   183dc:	cmp	r0, #0
   183e0:	bne	183ec <__assert_fail@plt+0x6ee8>
   183e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183e8:	bl	16200 <__assert_fail@plt+0x4cfc>
   183ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183f0:	ldrb	r0, [r0, #28]
   183f4:	ubfx	r0, r0, #4, #1
   183f8:	and	r0, r0, #255	; 0xff
   183fc:	cmp	r0, #0
   18400:	beq	1840c <__assert_fail@plt+0x6f08>
   18404:	movw	r0, #0
   18408:	str	r0, [fp, #16]
   1840c:	ldr	r0, [fp, #16]
   18410:	movw	r1, #0
   18414:	cmp	r0, r1
   18418:	bne	18428 <__assert_fail@plt+0x6f24>
   1841c:	movw	r0, #1
   18420:	str	r0, [fp, #-52]	; 0xffffffcc
   18424:	b	184b4 <__assert_fail@plt+0x6fb0>
   18428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1842c:	ldrb	r0, [r0, #28]
   18430:	ubfx	r0, r0, #1, #2
   18434:	and	r0, r0, #255	; 0xff
   18438:	cmp	r0, #2
   1843c:	movw	r0, #0
   18440:	str	r0, [sp, #20]
   18444:	bne	18468 <__assert_fail@plt+0x6f64>
   18448:	ldr	r0, [fp, #16]
   1844c:	ldr	r0, [r0]
   18450:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18454:	ldr	r1, [r1, #24]
   18458:	cmp	r0, r1
   1845c:	movw	r0, #0
   18460:	movls	r0, #1
   18464:	str	r0, [sp, #20]
   18468:	ldr	r0, [sp, #20]
   1846c:	tst	r0, #1
   18470:	beq	184a0 <__assert_fail@plt+0x6f9c>
   18474:	ldr	r0, [fp, #16]
   18478:	ldr	r0, [r0]
   1847c:	str	r0, [fp, #-52]	; 0xffffffcc
   18480:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18484:	cmp	r0, #1
   18488:	bge	1849c <__assert_fail@plt+0x6f98>
   1848c:	movw	r0, #0
   18490:	str	r0, [fp, #16]
   18494:	movw	r0, #1
   18498:	str	r0, [fp, #-52]	; 0xffffffcc
   1849c:	b	184b0 <__assert_fail@plt+0x6fac>
   184a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184a4:	ldr	r0, [r0, #24]
   184a8:	add	r0, r0, #1
   184ac:	str	r0, [fp, #-52]	; 0xffffffcc
   184b0:	b	184b4 <__assert_fail@plt+0x6fb0>
   184b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   184b8:	lsl	r0, r0, #3
   184bc:	bl	3354c <__assert_fail@plt+0x22048>
   184c0:	str	r0, [fp, #-48]	; 0xffffffd0
   184c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   184c8:	movw	r1, #0
   184cc:	cmp	r0, r1
   184d0:	bne	184e0 <__assert_fail@plt+0x6fdc>
   184d4:	mvn	r0, #1
   184d8:	str	r0, [sp, #56]	; 0x38
   184dc:	b	18624 <__assert_fail@plt+0x7120>
   184e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   184e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   184ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   184f0:	ldr	ip, [sp, #44]	; 0x2c
   184f4:	ldr	lr, [fp, #12]
   184f8:	ldr	r4, [fp, #-52]	; 0xffffffcc
   184fc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   18500:	ldr	r6, [sp, #52]	; 0x34
   18504:	str	ip, [sp]
   18508:	str	lr, [sp, #4]
   1850c:	str	r4, [sp, #8]
   18510:	str	r5, [sp, #12]
   18514:	str	r6, [sp, #16]
   18518:	bl	1723c <__assert_fail@plt+0x5d38>
   1851c:	str	r0, [fp, #-44]	; 0xffffffd4
   18520:	movw	r0, #0
   18524:	str	r0, [sp, #56]	; 0x38
   18528:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1852c:	cmp	r0, #0
   18530:	beq	18558 <__assert_fail@plt+0x7054>
   18534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18538:	cmp	r0, #1
   1853c:	movw	r0, #0
   18540:	moveq	r0, #1
   18544:	tst	r0, #1
   18548:	mvn	r0, #0
   1854c:	mvneq	r0, #1
   18550:	str	r0, [sp, #56]	; 0x38
   18554:	b	185c4 <__assert_fail@plt+0x70c0>
   18558:	ldr	r0, [fp, #16]
   1855c:	movw	r1, #0
   18560:	cmp	r0, r1
   18564:	beq	185c0 <__assert_fail@plt+0x70bc>
   18568:	ldr	r0, [fp, #16]
   1856c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18570:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18578:	ldrb	r3, [r3, #28]
   1857c:	ubfx	r3, r3, #1, #2
   18580:	bl	23a30 <__assert_fail@plt+0x1252c>
   18584:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18588:	ldrb	r2, [r1, #28]
   1858c:	and	r0, r0, #3
   18590:	and	r2, r2, #249	; 0xf9
   18594:	orr	r0, r2, r0, lsl #1
   18598:	strb	r0, [r1, #28]
   1859c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185a0:	ldrb	r0, [r0, #28]
   185a4:	ubfx	r0, r0, #1, #2
   185a8:	and	r0, r0, #255	; 0xff
   185ac:	cmp	r0, #0
   185b0:	bne	185bc <__assert_fail@plt+0x70b8>
   185b4:	mvn	r0, #1
   185b8:	str	r0, [sp, #56]	; 0x38
   185bc:	b	185c0 <__assert_fail@plt+0x70bc>
   185c0:	b	185c4 <__assert_fail@plt+0x70c0>
   185c4:	ldr	r0, [sp, #56]	; 0x38
   185c8:	cmp	r0, #0
   185cc:	bne	1861c <__assert_fail@plt+0x7118>
   185d0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   185d4:	tst	r0, #1
   185d8:	beq	1860c <__assert_fail@plt+0x7108>
   185dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   185e0:	ldr	r0, [r0]
   185e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   185e8:	cmp	r0, r1
   185ec:	bne	185f4 <__assert_fail@plt+0x70f0>
   185f0:	b	185f4 <__assert_fail@plt+0x70f0>
   185f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   185f8:	ldr	r0, [r0, #4]
   185fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18600:	sub	r0, r0, r1
   18604:	str	r0, [sp, #56]	; 0x38
   18608:	b	18618 <__assert_fail@plt+0x7114>
   1860c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18610:	ldr	r0, [r0]
   18614:	str	r0, [sp, #56]	; 0x38
   18618:	b	1861c <__assert_fail@plt+0x7118>
   1861c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18620:	bl	34c20 <__assert_fail@plt+0x2371c>
   18624:	movw	r0, #0
   18628:	movt	r0, #0
   1862c:	cmp	r0, #0
   18630:	bne	1864c <__assert_fail@plt+0x7148>
   18634:	b	18638 <__assert_fail@plt+0x7134>
   18638:	movw	r0, #0
   1863c:	movt	r0, #0
   18640:	cmp	r0, #0
   18644:	beq	1865c <__assert_fail@plt+0x7158>
   18648:	b	1864c <__assert_fail@plt+0x7148>
   1864c:	ldr	r0, [sp, #48]	; 0x30
   18650:	add	r0, r0, #136	; 0x88
   18654:	bl	111e0 <pthread_mutex_unlock@plt>
   18658:	b	18660 <__assert_fail@plt+0x715c>
   1865c:	b	18660 <__assert_fail@plt+0x715c>
   18660:	ldr	r0, [sp, #56]	; 0x38
   18664:	str	r0, [fp, #-20]	; 0xffffffec
   18668:	ldr	r0, [fp, #-20]	; 0xffffffec
   1866c:	sub	sp, fp, #16
   18670:	pop	{r4, r5, r6, sl, fp, pc}
   18674:	push	{r4, r5, r6, sl, fp, lr}
   18678:	add	fp, sp, #16
   1867c:	sub	sp, sp, #40	; 0x28
   18680:	ldr	ip, [fp, #12]
   18684:	ldr	lr, [fp, #8]
   18688:	str	r0, [fp, #-20]	; 0xffffffec
   1868c:	str	r1, [fp, #-24]	; 0xffffffe8
   18690:	str	r2, [sp, #28]
   18694:	str	r3, [sp, #24]
   18698:	ldr	r0, [fp, #-20]	; 0xffffffec
   1869c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186a0:	ldr	r2, [sp, #28]
   186a4:	ldr	r3, [sp, #24]
   186a8:	ldr	r4, [fp, #8]
   186ac:	ldr	r5, [sp, #28]
   186b0:	ldr	r6, [fp, #12]
   186b4:	str	r4, [sp]
   186b8:	str	r5, [sp, #4]
   186bc:	str	r6, [sp, #8]
   186c0:	movw	r4, #0
   186c4:	and	r4, r4, #1
   186c8:	str	r4, [sp, #12]
   186cc:	str	ip, [sp, #20]
   186d0:	str	lr, [sp, #16]
   186d4:	bl	181b4 <__assert_fail@plt+0x6cb0>
   186d8:	sub	sp, fp, #16
   186dc:	pop	{r4, r5, r6, sl, fp, pc}
   186e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   186e4:	add	fp, sp, #24
   186e8:	sub	sp, sp, #56	; 0x38
   186ec:	ldr	ip, [fp, #20]
   186f0:	ldr	lr, [fp, #16]
   186f4:	ldr	r4, [fp, #12]
   186f8:	ldr	r5, [fp, #8]
   186fc:	str	r0, [fp, #-28]	; 0xffffffe4
   18700:	str	r1, [fp, #-32]	; 0xffffffe0
   18704:	str	r2, [fp, #-36]	; 0xffffffdc
   18708:	str	r3, [sp, #40]	; 0x28
   1870c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18710:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18714:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18718:	ldr	r3, [sp, #40]	; 0x28
   1871c:	ldr	r6, [fp, #8]
   18720:	ldr	r7, [fp, #12]
   18724:	ldr	r8, [fp, #16]
   18728:	ldr	r9, [fp, #20]
   1872c:	str	r6, [sp]
   18730:	str	r7, [sp, #4]
   18734:	movw	r6, #0
   18738:	str	r6, [sp, #8]
   1873c:	str	r8, [sp, #12]
   18740:	str	r9, [sp, #16]
   18744:	movw	r6, #1
   18748:	and	r6, r6, #1
   1874c:	str	r6, [sp, #20]
   18750:	str	ip, [sp, #36]	; 0x24
   18754:	str	lr, [sp, #32]
   18758:	str	r4, [sp, #28]
   1875c:	str	r5, [sp, #24]
   18760:	bl	1876c <__assert_fail@plt+0x7268>
   18764:	sub	sp, fp, #24
   18768:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1876c:	push	{r4, r5, r6, r7, fp, lr}
   18770:	add	fp, sp, #16
   18774:	sub	sp, sp, #64	; 0x40
   18778:	ldr	ip, [fp, #28]
   1877c:	ldr	lr, [fp, #24]
   18780:	ldr	r4, [fp, #20]
   18784:	ldr	r5, [fp, #16]
   18788:	ldr	r6, [fp, #12]
   1878c:	ldr	r7, [fp, #8]
   18790:	str	r0, [fp, #-24]	; 0xffffffe8
   18794:	str	r1, [fp, #-28]	; 0xffffffe4
   18798:	str	r2, [fp, #-32]	; 0xffffffe0
   1879c:	str	r3, [fp, #-36]	; 0xffffffdc
   187a0:	and	r0, ip, #1
   187a4:	strb	r0, [fp, #-37]	; 0xffffffdb
   187a8:	movw	r0, #0
   187ac:	str	r0, [sp, #24]
   187b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   187b4:	cmp	r0, #0
   187b8:	movw	r0, #1
   187bc:	str	r0, [sp, #20]
   187c0:	blt	1880c <__assert_fail@plt+0x7308>
   187c4:	ldr	r0, [fp, #8]
   187c8:	cmp	r0, #0
   187cc:	movw	r0, #1
   187d0:	str	r0, [sp, #20]
   187d4:	blt	1880c <__assert_fail@plt+0x7308>
   187d8:	ldr	r0, [fp, #24]
   187dc:	cmp	r0, #0
   187e0:	movw	r0, #1
   187e4:	str	r0, [sp, #20]
   187e8:	blt	1880c <__assert_fail@plt+0x7308>
   187ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   187f0:	ldr	r1, [fp, #8]
   187f4:	add	r1, r0, r1
   187f8:	mov	r2, #1
   187fc:	cmp	r1, r0
   18800:	movwvc	r2, #0
   18804:	str	r1, [sp, #28]
   18808:	str	r2, [sp, #20]
   1880c:	ldr	r0, [sp, #20]
   18810:	tst	r0, #1
   18814:	beq	18824 <__assert_fail@plt+0x7320>
   18818:	mvn	r0, #1
   1881c:	str	r0, [fp, #-20]	; 0xffffffec
   18820:	b	18900 <__assert_fail@plt+0x73fc>
   18824:	ldr	r0, [fp, #8]
   18828:	cmp	r0, #0
   1882c:	ble	188ac <__assert_fail@plt+0x73a8>
   18830:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18834:	cmp	r0, #0
   18838:	ble	188a0 <__assert_fail@plt+0x739c>
   1883c:	ldr	r0, [sp, #28]
   18840:	mov	r1, r0
   18844:	str	r1, [sp, #16]
   18848:	bl	3354c <__assert_fail@plt+0x22048>
   1884c:	str	r0, [sp, #24]
   18850:	ldr	r0, [sp, #24]
   18854:	movw	r1, #0
   18858:	cmp	r0, r1
   1885c:	bne	1886c <__assert_fail@plt+0x7368>
   18860:	mvn	r0, #1
   18864:	str	r0, [fp, #-20]	; 0xffffffec
   18868:	b	18900 <__assert_fail@plt+0x73fc>
   1886c:	ldr	r0, [sp, #24]
   18870:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18874:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18878:	bl	112a0 <memcpy@plt>
   1887c:	ldr	r0, [sp, #24]
   18880:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18884:	add	r0, r0, r1
   18888:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1888c:	ldr	r2, [fp, #8]
   18890:	bl	112a0 <memcpy@plt>
   18894:	ldr	r0, [sp, #24]
   18898:	str	r0, [sp, #36]	; 0x24
   1889c:	b	188a8 <__assert_fail@plt+0x73a4>
   188a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   188a4:	str	r0, [sp, #36]	; 0x24
   188a8:	b	188b4 <__assert_fail@plt+0x73b0>
   188ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   188b0:	str	r0, [sp, #36]	; 0x24
   188b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188b8:	ldr	r1, [sp, #36]	; 0x24
   188bc:	ldr	r2, [sp, #28]
   188c0:	ldr	r3, [fp, #12]
   188c4:	ldr	ip, [fp, #16]
   188c8:	ldr	lr, [fp, #24]
   188cc:	ldr	r4, [fp, #20]
   188d0:	ldrb	r5, [fp, #-37]	; 0xffffffdb
   188d4:	str	ip, [sp]
   188d8:	str	lr, [sp, #4]
   188dc:	str	r4, [sp, #8]
   188e0:	and	ip, r5, #1
   188e4:	str	ip, [sp, #12]
   188e8:	bl	181b4 <__assert_fail@plt+0x6cb0>
   188ec:	str	r0, [sp, #32]
   188f0:	ldr	r0, [sp, #24]
   188f4:	bl	34c20 <__assert_fail@plt+0x2371c>
   188f8:	ldr	r0, [sp, #32]
   188fc:	str	r0, [fp, #-20]	; 0xffffffec
   18900:	ldr	r0, [fp, #-20]	; 0xffffffec
   18904:	sub	sp, fp, #16
   18908:	pop	{r4, r5, r6, r7, fp, pc}
   1890c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18910:	add	fp, sp, #28
   18914:	sub	sp, sp, #68	; 0x44
   18918:	ldr	ip, [fp, #24]
   1891c:	ldr	lr, [fp, #20]
   18920:	ldr	r4, [fp, #16]
   18924:	ldr	r5, [fp, #12]
   18928:	ldr	r6, [fp, #8]
   1892c:	str	r0, [fp, #-32]	; 0xffffffe0
   18930:	str	r1, [fp, #-36]	; 0xffffffdc
   18934:	str	r2, [fp, #-40]	; 0xffffffd8
   18938:	str	r3, [fp, #-44]	; 0xffffffd4
   1893c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18940:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18944:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18948:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1894c:	ldr	r7, [fp, #8]
   18950:	ldr	r8, [fp, #12]
   18954:	ldr	r9, [fp, #16]
   18958:	ldr	sl, [fp, #20]
   1895c:	str	r0, [sp, #48]	; 0x30
   18960:	ldr	r0, [fp, #24]
   18964:	str	r0, [sp, #44]	; 0x2c
   18968:	ldr	r0, [sp, #48]	; 0x30
   1896c:	str	r7, [sp]
   18970:	str	r8, [sp, #4]
   18974:	str	r9, [sp, #8]
   18978:	str	sl, [sp, #12]
   1897c:	ldr	r7, [sp, #44]	; 0x2c
   18980:	str	r7, [sp, #16]
   18984:	movw	r8, #0
   18988:	and	r8, r8, #1
   1898c:	str	r8, [sp, #20]
   18990:	str	ip, [sp, #40]	; 0x28
   18994:	str	lr, [sp, #36]	; 0x24
   18998:	str	r4, [sp, #32]
   1899c:	str	r5, [sp, #28]
   189a0:	str	r6, [sp, #24]
   189a4:	bl	1876c <__assert_fail@plt+0x7268>
   189a8:	sub	sp, fp, #28
   189ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189b0:	sub	sp, sp, #16
   189b4:	ldr	ip, [sp, #16]
   189b8:	str	r0, [sp, #12]
   189bc:	str	r1, [sp, #8]
   189c0:	str	r2, [sp, #4]
   189c4:	str	r3, [sp]
   189c8:	ldr	r0, [sp, #4]
   189cc:	cmp	r0, #0
   189d0:	beq	18a14 <__assert_fail@plt+0x7510>
   189d4:	ldr	r0, [sp, #12]
   189d8:	ldrb	r1, [r0, #28]
   189dc:	bic	r1, r1, #6
   189e0:	movw	r2, #2
   189e4:	orr	r1, r1, r2
   189e8:	strb	r1, [r0, #28]
   189ec:	ldr	r0, [sp, #4]
   189f0:	ldr	r1, [sp, #8]
   189f4:	str	r0, [r1]
   189f8:	ldr	r0, [sp]
   189fc:	ldr	r1, [sp, #8]
   18a00:	str	r0, [r1, #4]
   18a04:	ldr	r0, [sp, #16]
   18a08:	ldr	r1, [sp, #8]
   18a0c:	str	r0, [r1, #8]
   18a10:	b	18a40 <__assert_fail@plt+0x753c>
   18a14:	ldr	r0, [sp, #12]
   18a18:	ldrb	r1, [r0, #28]
   18a1c:	bic	r1, r1, #6
   18a20:	strb	r1, [r0, #28]
   18a24:	ldr	r0, [sp, #8]
   18a28:	movw	r1, #0
   18a2c:	str	r1, [r0]
   18a30:	ldr	r0, [sp, #8]
   18a34:	str	r1, [r0, #8]
   18a38:	ldr	r0, [sp, #8]
   18a3c:	str	r1, [r0, #4]
   18a40:	add	sp, sp, #16
   18a44:	bx	lr
   18a48:	push	{fp, lr}
   18a4c:	mov	fp, sp
   18a50:	sub	sp, sp, #8
   18a54:	str	r0, [sp, #4]
   18a58:	ldr	r0, [sp, #4]
   18a5c:	ldr	r0, [r0, #4]
   18a60:	and	r0, r0, #255	; 0xff
   18a64:	cmp	r0, #6
   18a68:	bne	18a94 <__assert_fail@plt+0x7590>
   18a6c:	ldr	r0, [sp, #4]
   18a70:	ldr	r0, [r0, #4]
   18a74:	lsr	r0, r0, #18
   18a78:	and	r0, r0, #1
   18a7c:	cmp	r0, #0
   18a80:	bne	18a94 <__assert_fail@plt+0x7590>
   18a84:	ldr	r0, [sp, #4]
   18a88:	ldr	r0, [r0]
   18a8c:	bl	18b68 <__assert_fail@plt+0x7664>
   18a90:	b	18ad0 <__assert_fail@plt+0x75cc>
   18a94:	ldr	r0, [sp, #4]
   18a98:	ldr	r0, [r0, #4]
   18a9c:	and	r0, r0, #255	; 0xff
   18aa0:	cmp	r0, #3
   18aa4:	bne	18acc <__assert_fail@plt+0x75c8>
   18aa8:	ldr	r0, [sp, #4]
   18aac:	ldr	r0, [r0, #4]
   18ab0:	lsr	r0, r0, #18
   18ab4:	and	r0, r0, #1
   18ab8:	cmp	r0, #0
   18abc:	bne	18acc <__assert_fail@plt+0x75c8>
   18ac0:	ldr	r0, [sp, #4]
   18ac4:	ldr	r0, [r0]
   18ac8:	bl	34c20 <__assert_fail@plt+0x2371c>
   18acc:	b	18ad0 <__assert_fail@plt+0x75cc>
   18ad0:	mov	sp, fp
   18ad4:	pop	{fp, pc}
   18ad8:	push	{fp, lr}
   18adc:	mov	fp, sp
   18ae0:	sub	sp, sp, #8
   18ae4:	str	r0, [sp, #4]
   18ae8:	ldr	r0, [sp, #4]
   18aec:	ldr	r0, [r0, #24]
   18af0:	bl	34c20 <__assert_fail@plt+0x2371c>
   18af4:	ldr	r0, [sp, #4]
   18af8:	ldr	r0, [r0, #36]	; 0x24
   18afc:	bl	34c20 <__assert_fail@plt+0x2371c>
   18b00:	ldr	r0, [sp, #4]
   18b04:	ldr	r0, [r0, #40]	; 0x28
   18b08:	ldr	r1, [sp, #4]
   18b0c:	add	r1, r1, #4
   18b10:	cmp	r0, r1
   18b14:	beq	18b34 <__assert_fail@plt+0x7630>
   18b18:	ldr	r0, [sp, #4]
   18b1c:	ldr	r0, [r0, #40]	; 0x28
   18b20:	ldr	r0, [r0, #8]
   18b24:	bl	34c20 <__assert_fail@plt+0x2371c>
   18b28:	ldr	r0, [sp, #4]
   18b2c:	ldr	r0, [r0, #40]	; 0x28
   18b30:	bl	34c20 <__assert_fail@plt+0x2371c>
   18b34:	ldr	r0, [sp, #4]
   18b38:	ldr	r0, [r0, #12]
   18b3c:	bl	34c20 <__assert_fail@plt+0x2371c>
   18b40:	ldr	r0, [sp, #4]
   18b44:	ldr	r0, [r0, #48]	; 0x30
   18b48:	bl	34c20 <__assert_fail@plt+0x2371c>
   18b4c:	ldr	r0, [sp, #4]
   18b50:	ldr	r0, [r0, #44]	; 0x2c
   18b54:	bl	34c20 <__assert_fail@plt+0x2371c>
   18b58:	ldr	r0, [sp, #4]
   18b5c:	bl	34c20 <__assert_fail@plt+0x2371c>
   18b60:	mov	sp, fp
   18b64:	pop	{fp, pc}
   18b68:	push	{fp, lr}
   18b6c:	mov	fp, sp
   18b70:	sub	sp, sp, #8
   18b74:	str	r0, [sp, #4]
   18b78:	ldr	r0, [sp, #4]
   18b7c:	ldr	r0, [r0]
   18b80:	bl	34c20 <__assert_fail@plt+0x2371c>
   18b84:	ldr	r0, [sp, #4]
   18b88:	ldr	r0, [r0, #4]
   18b8c:	bl	34c20 <__assert_fail@plt+0x2371c>
   18b90:	ldr	r0, [sp, #4]
   18b94:	ldr	r0, [r0, #8]
   18b98:	bl	34c20 <__assert_fail@plt+0x2371c>
   18b9c:	ldr	r0, [sp, #4]
   18ba0:	ldr	r0, [r0, #12]
   18ba4:	bl	34c20 <__assert_fail@plt+0x2371c>
   18ba8:	ldr	r0, [sp, #4]
   18bac:	bl	34c20 <__assert_fail@plt+0x2371c>
   18bb0:	mov	sp, fp
   18bb4:	pop	{fp, pc}
   18bb8:	push	{fp, lr}
   18bbc:	mov	fp, sp
   18bc0:	sub	sp, sp, #120	; 0x78
   18bc4:	str	r0, [fp, #-8]
   18bc8:	str	r1, [fp, #-12]
   18bcc:	movw	r0, #4
   18bd0:	str	r0, [fp, #-24]	; 0xffffffe8
   18bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bd8:	movw	r1, #8
   18bdc:	cmp	r1, r0
   18be0:	bcs	18bf0 <__assert_fail@plt+0x76ec>
   18be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18be8:	str	r0, [fp, #-48]	; 0xffffffd0
   18bec:	b	18bfc <__assert_fail@plt+0x76f8>
   18bf0:	movw	r0, #8
   18bf4:	str	r0, [fp, #-48]	; 0xffffffd0
   18bf8:	b	18bfc <__assert_fail@plt+0x76f8>
   18bfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18c00:	movw	r1, #12
   18c04:	cmp	r1, r0
   18c08:	bcs	18c40 <__assert_fail@plt+0x773c>
   18c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c10:	movw	r1, #8
   18c14:	cmp	r1, r0
   18c18:	bcs	18c28 <__assert_fail@plt+0x7724>
   18c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c20:	str	r0, [fp, #-52]	; 0xffffffcc
   18c24:	b	18c34 <__assert_fail@plt+0x7730>
   18c28:	movw	r0, #8
   18c2c:	str	r0, [fp, #-52]	; 0xffffffcc
   18c30:	b	18c34 <__assert_fail@plt+0x7730>
   18c34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18c38:	str	r0, [fp, #-56]	; 0xffffffc8
   18c3c:	b	18c4c <__assert_fail@plt+0x7748>
   18c40:	movw	r0, #12
   18c44:	str	r0, [fp, #-56]	; 0xffffffc8
   18c48:	b	18c4c <__assert_fail@plt+0x7748>
   18c4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18c50:	movw	r1, #8
   18c54:	cmp	r1, r0
   18c58:	bcs	18ce0 <__assert_fail@plt+0x77dc>
   18c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c60:	movw	r1, #8
   18c64:	cmp	r1, r0
   18c68:	bcs	18c78 <__assert_fail@plt+0x7774>
   18c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c70:	str	r0, [sp, #60]	; 0x3c
   18c74:	b	18c84 <__assert_fail@plt+0x7780>
   18c78:	movw	r0, #8
   18c7c:	str	r0, [sp, #60]	; 0x3c
   18c80:	b	18c84 <__assert_fail@plt+0x7780>
   18c84:	ldr	r0, [sp, #60]	; 0x3c
   18c88:	movw	r1, #12
   18c8c:	cmp	r1, r0
   18c90:	bcs	18cc8 <__assert_fail@plt+0x77c4>
   18c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c98:	movw	r1, #8
   18c9c:	cmp	r1, r0
   18ca0:	bcs	18cb0 <__assert_fail@plt+0x77ac>
   18ca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ca8:	str	r0, [sp, #56]	; 0x38
   18cac:	b	18cbc <__assert_fail@plt+0x77b8>
   18cb0:	movw	r0, #8
   18cb4:	str	r0, [sp, #56]	; 0x38
   18cb8:	b	18cbc <__assert_fail@plt+0x77b8>
   18cbc:	ldr	r0, [sp, #56]	; 0x38
   18cc0:	str	r0, [sp, #52]	; 0x34
   18cc4:	b	18cd4 <__assert_fail@plt+0x77d0>
   18cc8:	movw	r0, #12
   18ccc:	str	r0, [sp, #52]	; 0x34
   18cd0:	b	18cd4 <__assert_fail@plt+0x77d0>
   18cd4:	ldr	r0, [sp, #52]	; 0x34
   18cd8:	str	r0, [sp, #48]	; 0x30
   18cdc:	b	18cec <__assert_fail@plt+0x77e8>
   18ce0:	movw	r0, #8
   18ce4:	str	r0, [sp, #48]	; 0x30
   18ce8:	b	18cec <__assert_fail@plt+0x77e8>
   18cec:	ldr	r0, [sp, #48]	; 0x30
   18cf0:	movw	r1, #12
   18cf4:	cmp	r1, r0
   18cf8:	bcs	18e20 <__assert_fail@plt+0x791c>
   18cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d00:	movw	r1, #8
   18d04:	cmp	r1, r0
   18d08:	bcs	18d18 <__assert_fail@plt+0x7814>
   18d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d10:	str	r0, [sp, #44]	; 0x2c
   18d14:	b	18d24 <__assert_fail@plt+0x7820>
   18d18:	movw	r0, #8
   18d1c:	str	r0, [sp, #44]	; 0x2c
   18d20:	b	18d24 <__assert_fail@plt+0x7820>
   18d24:	ldr	r0, [sp, #44]	; 0x2c
   18d28:	movw	r1, #12
   18d2c:	cmp	r1, r0
   18d30:	bcs	18d68 <__assert_fail@plt+0x7864>
   18d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d38:	movw	r1, #8
   18d3c:	cmp	r1, r0
   18d40:	bcs	18d50 <__assert_fail@plt+0x784c>
   18d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d48:	str	r0, [sp, #40]	; 0x28
   18d4c:	b	18d5c <__assert_fail@plt+0x7858>
   18d50:	movw	r0, #8
   18d54:	str	r0, [sp, #40]	; 0x28
   18d58:	b	18d5c <__assert_fail@plt+0x7858>
   18d5c:	ldr	r0, [sp, #40]	; 0x28
   18d60:	str	r0, [sp, #36]	; 0x24
   18d64:	b	18d74 <__assert_fail@plt+0x7870>
   18d68:	movw	r0, #12
   18d6c:	str	r0, [sp, #36]	; 0x24
   18d70:	b	18d74 <__assert_fail@plt+0x7870>
   18d74:	ldr	r0, [sp, #36]	; 0x24
   18d78:	movw	r1, #8
   18d7c:	cmp	r1, r0
   18d80:	bcs	18e08 <__assert_fail@plt+0x7904>
   18d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d88:	movw	r1, #8
   18d8c:	cmp	r1, r0
   18d90:	bcs	18da0 <__assert_fail@plt+0x789c>
   18d94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d98:	str	r0, [sp, #32]
   18d9c:	b	18dac <__assert_fail@plt+0x78a8>
   18da0:	movw	r0, #8
   18da4:	str	r0, [sp, #32]
   18da8:	b	18dac <__assert_fail@plt+0x78a8>
   18dac:	ldr	r0, [sp, #32]
   18db0:	movw	r1, #12
   18db4:	cmp	r1, r0
   18db8:	bcs	18df0 <__assert_fail@plt+0x78ec>
   18dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dc0:	movw	r1, #8
   18dc4:	cmp	r1, r0
   18dc8:	bcs	18dd8 <__assert_fail@plt+0x78d4>
   18dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dd0:	str	r0, [sp, #28]
   18dd4:	b	18de4 <__assert_fail@plt+0x78e0>
   18dd8:	movw	r0, #8
   18ddc:	str	r0, [sp, #28]
   18de0:	b	18de4 <__assert_fail@plt+0x78e0>
   18de4:	ldr	r0, [sp, #28]
   18de8:	str	r0, [sp, #24]
   18dec:	b	18dfc <__assert_fail@plt+0x78f8>
   18df0:	movw	r0, #12
   18df4:	str	r0, [sp, #24]
   18df8:	b	18dfc <__assert_fail@plt+0x78f8>
   18dfc:	ldr	r0, [sp, #24]
   18e00:	str	r0, [sp, #20]
   18e04:	b	18e14 <__assert_fail@plt+0x7910>
   18e08:	movw	r0, #8
   18e0c:	str	r0, [sp, #20]
   18e10:	b	18e14 <__assert_fail@plt+0x7910>
   18e14:	ldr	r0, [sp, #20]
   18e18:	str	r0, [sp, #16]
   18e1c:	b	18e2c <__assert_fail@plt+0x7928>
   18e20:	movw	r0, #12
   18e24:	str	r0, [sp, #16]
   18e28:	b	18e2c <__assert_fail@plt+0x7928>
   18e2c:	ldr	r0, [sp, #16]
   18e30:	ldr	r1, [pc, #904]	; 191c0 <__assert_fail@plt+0x7cbc>
   18e34:	str	r0, [fp, #-28]	; 0xffffffe4
   18e38:	ldr	r0, [fp, #-8]
   18e3c:	movw	r2, #0
   18e40:	and	r2, r2, #255	; 0xff
   18e44:	str	r1, [sp, #12]
   18e48:	mov	r1, r2
   18e4c:	movw	r2, #160	; 0xa0
   18e50:	bl	11420 <memset@plt>
   18e54:	ldr	r0, [fp, #-8]
   18e58:	movw	r1, #31
   18e5c:	str	r1, [r0, #64]	; 0x40
   18e60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18e64:	mvn	r1, #0
   18e68:	udiv	r0, r1, r0
   18e6c:	ldr	r1, [sp, #12]
   18e70:	cmp	r1, r0
   18e74:	bcs	18e84 <__assert_fail@plt+0x7980>
   18e78:	ldr	r0, [pc, #832]	; 191c0 <__assert_fail@plt+0x7cbc>
   18e7c:	str	r0, [sp, #8]
   18e80:	b	18e94 <__assert_fail@plt+0x7990>
   18e84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18e88:	mvn	r1, #0
   18e8c:	udiv	r0, r1, r0
   18e90:	str	r0, [sp, #8]
   18e94:	ldr	r0, [sp, #8]
   18e98:	lsr	r0, r0, #1
   18e9c:	ldr	r1, [fp, #-12]
   18ea0:	cmp	r0, r1
   18ea4:	bhi	18eb4 <__assert_fail@plt+0x79b0>
   18ea8:	movw	r0, #12
   18eac:	str	r0, [fp, #-4]
   18eb0:	b	191b4 <__assert_fail@plt+0x7cb0>
   18eb4:	ldr	r0, [fp, #-12]
   18eb8:	add	r0, r0, #1
   18ebc:	ldr	r1, [fp, #-8]
   18ec0:	str	r0, [r1, #4]
   18ec4:	ldr	r0, [fp, #-8]
   18ec8:	ldr	r0, [r0, #4]
   18ecc:	lsl	r0, r0, #3
   18ed0:	bl	3354c <__assert_fail@plt+0x22048>
   18ed4:	ldr	r1, [fp, #-8]
   18ed8:	str	r0, [r1]
   18edc:	movw	r0, #1
   18ee0:	str	r0, [fp, #-16]
   18ee4:	ldr	r0, [fp, #-16]
   18ee8:	ldr	r1, [fp, #-12]
   18eec:	cmp	r0, r1
   18ef0:	bls	18ef8 <__assert_fail@plt+0x79f4>
   18ef4:	b	18f0c <__assert_fail@plt+0x7a08>
   18ef8:	b	18efc <__assert_fail@plt+0x79f8>
   18efc:	ldr	r0, [fp, #-16]
   18f00:	lsl	r0, r0, #1
   18f04:	str	r0, [fp, #-16]
   18f08:	b	18ee4 <__assert_fail@plt+0x79e0>
   18f0c:	ldr	r1, [fp, #-16]
   18f10:	movw	r0, #12
   18f14:	bl	334b0 <__assert_fail@plt+0x21fac>
   18f18:	ldr	r1, [fp, #-8]
   18f1c:	str	r0, [r1, #32]
   18f20:	ldr	r0, [fp, #-16]
   18f24:	sub	r0, r0, #1
   18f28:	ldr	r1, [fp, #-8]
   18f2c:	str	r0, [r1, #68]	; 0x44
   18f30:	bl	1133c <__ctype_get_mb_cur_max@plt>
   18f34:	ldr	r1, [fp, #-8]
   18f38:	str	r0, [r1, #92]	; 0x5c
   18f3c:	movw	r0, #14
   18f40:	bl	1148c <nl_langinfo@plt>
   18f44:	str	r0, [fp, #-20]	; 0xffffffec
   18f48:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f4c:	ldrb	r0, [r0]
   18f50:	cmp	r0, #85	; 0x55
   18f54:	beq	18f68 <__assert_fail@plt+0x7a64>
   18f58:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f5c:	ldrb	r0, [r0]
   18f60:	cmp	r0, #117	; 0x75
   18f64:	bne	18ff8 <__assert_fail@plt+0x7af4>
   18f68:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f6c:	ldrb	r0, [r0, #1]
   18f70:	cmp	r0, #84	; 0x54
   18f74:	beq	18f88 <__assert_fail@plt+0x7a84>
   18f78:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f7c:	ldrb	r0, [r0, #1]
   18f80:	cmp	r0, #116	; 0x74
   18f84:	bne	18ff8 <__assert_fail@plt+0x7af4>
   18f88:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f8c:	ldrb	r0, [r0, #2]
   18f90:	cmp	r0, #70	; 0x46
   18f94:	beq	18fa8 <__assert_fail@plt+0x7aa4>
   18f98:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f9c:	ldrb	r0, [r0, #2]
   18fa0:	cmp	r0, #102	; 0x66
   18fa4:	bne	18ff8 <__assert_fail@plt+0x7af4>
   18fa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   18fac:	add	r0, r0, #3
   18fb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   18fb4:	ldrb	r1, [r1, #3]
   18fb8:	cmp	r1, #45	; 0x2d
   18fbc:	movw	r1, #0
   18fc0:	moveq	r1, #1
   18fc4:	and	r1, r1, #1
   18fc8:	add	r0, r0, r1
   18fcc:	movw	r1, #31292	; 0x7a3c
   18fd0:	movt	r1, #3
   18fd4:	bl	11234 <strcmp@plt>
   18fd8:	cmp	r0, #0
   18fdc:	bne	18ff8 <__assert_fail@plt+0x7af4>
   18fe0:	ldr	r0, [fp, #-8]
   18fe4:	ldrb	r1, [r0, #88]	; 0x58
   18fe8:	bic	r1, r1, #4
   18fec:	movw	r2, #4
   18ff0:	orr	r1, r1, r2
   18ff4:	strb	r1, [r0, #88]	; 0x58
   18ff8:	ldr	r0, [fp, #-8]
   18ffc:	ldrb	r1, [r0, #88]	; 0x58
   19000:	bic	r1, r1, #8
   19004:	strb	r1, [r0, #88]	; 0x58
   19008:	ldr	r0, [fp, #-8]
   1900c:	ldr	r0, [r0, #92]	; 0x5c
   19010:	cmp	r0, #1
   19014:	ble	1915c <__assert_fail@plt+0x7c58>
   19018:	ldr	r0, [fp, #-8]
   1901c:	ldrb	r0, [r0, #88]	; 0x58
   19020:	ubfx	r0, r0, #2, #1
   19024:	and	r0, r0, #255	; 0xff
   19028:	cmp	r0, #0
   1902c:	beq	19044 <__assert_fail@plt+0x7b40>
   19030:	ldr	r0, [fp, #-8]
   19034:	movw	r1, #31856	; 0x7c70
   19038:	movt	r1, #3
   1903c:	str	r1, [r0, #60]	; 0x3c
   19040:	b	19158 <__assert_fail@plt+0x7c54>
   19044:	movw	r0, #32
   19048:	movw	r1, #1
   1904c:	bl	334b0 <__assert_fail@plt+0x21fac>
   19050:	ldr	r1, [fp, #-8]
   19054:	str	r0, [r1, #60]	; 0x3c
   19058:	ldr	r0, [fp, #-8]
   1905c:	ldr	r0, [r0, #60]	; 0x3c
   19060:	movw	r1, #0
   19064:	cmp	r0, r1
   19068:	bne	19078 <__assert_fail@plt+0x7b74>
   1906c:	movw	r0, #12
   19070:	str	r0, [fp, #-4]
   19074:	b	191b4 <__assert_fail@plt+0x7cb0>
   19078:	movw	r0, #0
   1907c:	str	r0, [fp, #-32]	; 0xffffffe0
   19080:	str	r0, [fp, #-40]	; 0xffffffd8
   19084:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19088:	cmp	r0, #8
   1908c:	bge	19154 <__assert_fail@plt+0x7c50>
   19090:	movw	r0, #0
   19094:	str	r0, [fp, #-36]	; 0xffffffdc
   19098:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1909c:	cmp	r0, #32
   190a0:	bge	19140 <__assert_fail@plt+0x7c3c>
   190a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190a8:	bl	1142c <btowc@plt>
   190ac:	str	r0, [fp, #-44]	; 0xffffffd4
   190b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190b4:	cmn	r0, #1
   190b8:	beq	190e4 <__assert_fail@plt+0x7be0>
   190bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   190c0:	mov	r1, #1
   190c4:	lsl	r0, r1, r0
   190c8:	ldr	r1, [fp, #-8]
   190cc:	ldr	r1, [r1, #60]	; 0x3c
   190d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   190d4:	add	r1, r1, r2, lsl #2
   190d8:	ldr	r2, [r1]
   190dc:	orr	r0, r2, r0
   190e0:	str	r0, [r1]
   190e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190e8:	mvn	r1, #127	; 0x7f
   190ec:	and	r0, r0, r1
   190f0:	cmp	r0, #0
   190f4:	bne	19120 <__assert_fail@plt+0x7c1c>
   190f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19100:	cmp	r0, r1
   19104:	beq	19120 <__assert_fail@plt+0x7c1c>
   19108:	ldr	r0, [fp, #-8]
   1910c:	ldrb	r1, [r0, #88]	; 0x58
   19110:	bic	r1, r1, #8
   19114:	movw	r2, #8
   19118:	orr	r1, r1, r2
   1911c:	strb	r1, [r0, #88]	; 0x58
   19120:	b	19124 <__assert_fail@plt+0x7c20>
   19124:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19128:	add	r0, r0, #1
   1912c:	str	r0, [fp, #-36]	; 0xffffffdc
   19130:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19134:	add	r0, r0, #1
   19138:	str	r0, [fp, #-40]	; 0xffffffd8
   1913c:	b	19098 <__assert_fail@plt+0x7b94>
   19140:	b	19144 <__assert_fail@plt+0x7c40>
   19144:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19148:	add	r0, r0, #1
   1914c:	str	r0, [fp, #-32]	; 0xffffffe0
   19150:	b	19084 <__assert_fail@plt+0x7b80>
   19154:	b	19158 <__assert_fail@plt+0x7c54>
   19158:	b	1915c <__assert_fail@plt+0x7c58>
   1915c:	ldr	r0, [fp, #-8]
   19160:	ldr	r0, [r0]
   19164:	movw	r1, #0
   19168:	cmp	r0, r1
   1916c:	movw	r0, #1
   19170:	str	r0, [sp, #4]
   19174:	beq	19194 <__assert_fail@plt+0x7c90>
   19178:	ldr	r0, [fp, #-8]
   1917c:	ldr	r0, [r0, #32]
   19180:	movw	r1, #0
   19184:	cmp	r0, r1
   19188:	movw	r0, #0
   1918c:	moveq	r0, #1
   19190:	str	r0, [sp, #4]
   19194:	ldr	r0, [sp, #4]
   19198:	tst	r0, #1
   1919c:	beq	191ac <__assert_fail@plt+0x7ca8>
   191a0:	movw	r0, #12
   191a4:	str	r0, [fp, #-4]
   191a8:	b	191b4 <__assert_fail@plt+0x7cb0>
   191ac:	movw	r0, #0
   191b0:	str	r0, [fp, #-4]
   191b4:	ldr	r0, [fp, #-4]
   191b8:	mov	sp, fp
   191bc:	pop	{fp, pc}
   191c0:	svcvc	0x00ffffff
   191c4:	push	{fp, lr}
   191c8:	mov	fp, sp
   191cc:	sub	sp, sp, #48	; 0x30
   191d0:	ldr	ip, [fp, #12]
   191d4:	ldr	lr, [fp, #8]
   191d8:	str	r0, [fp, #-8]
   191dc:	str	r1, [fp, #-12]
   191e0:	str	r2, [fp, #-16]
   191e4:	str	r3, [fp, #-20]	; 0xffffffec
   191e8:	and	r0, lr, #1
   191ec:	strb	r0, [fp, #-21]	; 0xffffffeb
   191f0:	ldr	r0, [fp, #-8]
   191f4:	movw	r1, #0
   191f8:	and	r1, r1, #255	; 0xff
   191fc:	movw	r2, #84	; 0x54
   19200:	str	ip, [sp, #16]
   19204:	bl	11420 <memset@plt>
   19208:	ldr	r0, [fp, #-12]
   1920c:	ldr	r1, [fp, #-16]
   19210:	ldr	r2, [fp, #-8]
   19214:	ldr	r3, [fp, #-20]	; 0xffffffec
   19218:	ldrb	ip, [fp, #-21]	; 0xffffffeb
   1921c:	ldr	lr, [fp, #12]
   19220:	and	ip, ip, #1
   19224:	str	ip, [sp]
   19228:	str	lr, [sp, #4]
   1922c:	bl	1a07c <__assert_fail@plt+0x8b78>
   19230:	ldr	r0, [fp, #-16]
   19234:	cmp	r0, #0
   19238:	ble	1926c <__assert_fail@plt+0x7d68>
   1923c:	ldr	r0, [fp, #-8]
   19240:	ldr	r1, [fp, #-16]
   19244:	add	r1, r1, #1
   19248:	bl	1a17c <__assert_fail@plt+0x8c78>
   1924c:	str	r0, [sp, #20]
   19250:	ldr	r0, [sp, #20]
   19254:	cmp	r0, #0
   19258:	beq	19268 <__assert_fail@plt+0x7d64>
   1925c:	ldr	r0, [sp, #20]
   19260:	str	r0, [fp, #-4]
   19264:	b	193cc <__assert_fail@plt+0x7ec8>
   19268:	b	1926c <__assert_fail@plt+0x7d68>
   1926c:	ldr	r0, [fp, #-8]
   19270:	ldrb	r0, [r0, #75]	; 0x4b
   19274:	cmp	r0, #0
   19278:	beq	1928c <__assert_fail@plt+0x7d88>
   1927c:	ldr	r0, [fp, #-8]
   19280:	ldr	r0, [r0, #4]
   19284:	str	r0, [sp, #12]
   19288:	b	19294 <__assert_fail@plt+0x7d90>
   1928c:	ldr	r0, [fp, #-12]
   19290:	str	r0, [sp, #12]
   19294:	ldr	r0, [sp, #12]
   19298:	ldr	r1, [fp, #-8]
   1929c:	str	r0, [r1, #4]
   192a0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   192a4:	tst	r0, #1
   192a8:	beq	19364 <__assert_fail@plt+0x7e60>
   192ac:	ldr	r0, [fp, #12]
   192b0:	ldr	r0, [r0, #92]	; 0x5c
   192b4:	cmp	r0, #1
   192b8:	ble	19358 <__assert_fail@plt+0x7e54>
   192bc:	b	192c0 <__assert_fail@plt+0x7dbc>
   192c0:	ldr	r0, [fp, #-8]
   192c4:	bl	1a2d4 <__assert_fail@plt+0x8dd0>
   192c8:	str	r0, [sp, #20]
   192cc:	ldr	r0, [sp, #20]
   192d0:	cmp	r0, #0
   192d4:	beq	192e4 <__assert_fail@plt+0x7de0>
   192d8:	ldr	r0, [sp, #20]
   192dc:	str	r0, [fp, #-4]
   192e0:	b	193cc <__assert_fail@plt+0x7ec8>
   192e4:	ldr	r0, [fp, #-8]
   192e8:	ldr	r0, [r0, #32]
   192ec:	ldr	r1, [fp, #-16]
   192f0:	cmp	r0, r1
   192f4:	blt	192fc <__assert_fail@plt+0x7df8>
   192f8:	b	19354 <__assert_fail@plt+0x7e50>
   192fc:	ldr	r0, [fp, #-8]
   19300:	ldr	r0, [r0, #36]	; 0x24
   19304:	ldr	r1, [fp, #-8]
   19308:	ldr	r1, [r1, #28]
   1930c:	ldr	r2, [fp, #12]
   19310:	ldr	r2, [r2, #92]	; 0x5c
   19314:	add	r1, r1, r2
   19318:	cmp	r0, r1
   1931c:	ble	19324 <__assert_fail@plt+0x7e20>
   19320:	b	19354 <__assert_fail@plt+0x7e50>
   19324:	ldr	r0, [fp, #-8]
   19328:	ldr	r1, [r0, #36]	; 0x24
   1932c:	lsl	r1, r1, #1
   19330:	bl	1a17c <__assert_fail@plt+0x8c78>
   19334:	str	r0, [sp, #20]
   19338:	ldr	r0, [sp, #20]
   1933c:	cmp	r0, #0
   19340:	beq	19350 <__assert_fail@plt+0x7e4c>
   19344:	ldr	r0, [sp, #20]
   19348:	str	r0, [fp, #-4]
   1934c:	b	193cc <__assert_fail@plt+0x7ec8>
   19350:	b	192c0 <__assert_fail@plt+0x7dbc>
   19354:	b	19360 <__assert_fail@plt+0x7e5c>
   19358:	ldr	r0, [fp, #-8]
   1935c:	bl	1ad7c <__assert_fail@plt+0x9878>
   19360:	b	193c4 <__assert_fail@plt+0x7ec0>
   19364:	ldr	r0, [fp, #12]
   19368:	ldr	r0, [r0, #92]	; 0x5c
   1936c:	cmp	r0, #1
   19370:	ble	19380 <__assert_fail@plt+0x7e7c>
   19374:	ldr	r0, [fp, #-8]
   19378:	bl	1ae80 <__assert_fail@plt+0x997c>
   1937c:	b	193c0 <__assert_fail@plt+0x7ebc>
   19380:	ldr	r0, [fp, #-20]	; 0xffffffec
   19384:	movw	r1, #0
   19388:	cmp	r0, r1
   1938c:	beq	1939c <__assert_fail@plt+0x7e98>
   19390:	ldr	r0, [fp, #-8]
   19394:	bl	1b1c0 <__assert_fail@plt+0x9cbc>
   19398:	b	193bc <__assert_fail@plt+0x7eb8>
   1939c:	ldr	r0, [fp, #-8]
   193a0:	ldr	r0, [r0, #36]	; 0x24
   193a4:	ldr	r1, [fp, #-8]
   193a8:	str	r0, [r1, #28]
   193ac:	ldr	r0, [fp, #-8]
   193b0:	ldr	r0, [r0, #36]	; 0x24
   193b4:	ldr	r1, [fp, #-8]
   193b8:	str	r0, [r1, #32]
   193bc:	b	193c0 <__assert_fail@plt+0x7ebc>
   193c0:	b	193c4 <__assert_fail@plt+0x7ec0>
   193c4:	movw	r0, #0
   193c8:	str	r0, [fp, #-4]
   193cc:	ldr	r0, [fp, #-4]
   193d0:	mov	sp, fp
   193d4:	pop	{fp, pc}
   193d8:	push	{fp, lr}
   193dc:	mov	fp, sp
   193e0:	sub	sp, sp, #16
   193e4:	str	r0, [fp, #-4]
   193e8:	ldr	r0, [fp, #-4]
   193ec:	ldr	r0, [r0]
   193f0:	str	r0, [sp, #8]
   193f4:	ldr	r0, [sp, #8]
   193f8:	ldr	r0, [r0, #56]	; 0x38
   193fc:	str	r0, [sp, #4]
   19400:	ldr	r0, [sp, #4]
   19404:	movw	r1, #0
   19408:	cmp	r0, r1
   1940c:	beq	19430 <__assert_fail@plt+0x7f2c>
   19410:	ldr	r0, [sp, #4]
   19414:	ldr	r0, [r0]
   19418:	str	r0, [sp]
   1941c:	ldr	r0, [sp, #4]
   19420:	bl	34c20 <__assert_fail@plt+0x2371c>
   19424:	ldr	r0, [sp]
   19428:	str	r0, [sp, #4]
   1942c:	b	19400 <__assert_fail@plt+0x7efc>
   19430:	ldr	r0, [sp, #8]
   19434:	movw	r1, #0
   19438:	str	r1, [r0, #56]	; 0x38
   1943c:	ldr	r0, [sp, #8]
   19440:	movw	r2, #31
   19444:	str	r2, [r0, #64]	; 0x40
   19448:	ldr	r0, [sp, #8]
   1944c:	str	r1, [r0, #52]	; 0x34
   19450:	ldr	r0, [sp, #8]
   19454:	ldr	r0, [r0, #16]
   19458:	bl	34c20 <__assert_fail@plt+0x2371c>
   1945c:	ldr	r0, [sp, #8]
   19460:	movw	r1, #0
   19464:	str	r1, [r0, #16]
   19468:	mov	sp, fp
   1946c:	pop	{fp, pc}
   19470:	push	{fp, lr}
   19474:	mov	fp, sp
   19478:	sub	sp, sp, #8
   1947c:	str	r0, [sp, #4]
   19480:	ldr	r0, [sp, #4]
   19484:	ldr	r0, [r0, #8]
   19488:	bl	34c20 <__assert_fail@plt+0x2371c>
   1948c:	ldr	r0, [sp, #4]
   19490:	ldr	r0, [r0, #12]
   19494:	bl	34c20 <__assert_fail@plt+0x2371c>
   19498:	ldr	r0, [sp, #4]
   1949c:	ldrsb	r0, [r0, #75]	; 0x4b
   194a0:	cmp	r0, #0
   194a4:	beq	194b4 <__assert_fail@plt+0x7fb0>
   194a8:	ldr	r0, [sp, #4]
   194ac:	ldr	r0, [r0, #4]
   194b0:	bl	34c20 <__assert_fail@plt+0x2371c>
   194b4:	mov	sp, fp
   194b8:	pop	{fp, pc}
   194bc:	push	{fp, lr}
   194c0:	mov	fp, sp
   194c4:	sub	sp, sp, #72	; 0x48
   194c8:	str	r0, [fp, #-8]
   194cc:	str	r1, [fp, #-12]
   194d0:	str	r2, [fp, #-16]
   194d4:	str	r3, [fp, #-20]	; 0xffffffec
   194d8:	ldr	r0, [fp, #-12]
   194dc:	ldr	r0, [r0]
   194e0:	str	r0, [fp, #-24]	; 0xffffffe8
   194e4:	ldr	r0, [fp, #-16]
   194e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194ec:	str	r0, [r1, #128]	; 0x80
   194f0:	ldr	r1, [fp, #-8]
   194f4:	ldr	r0, [fp, #-16]
   194f8:	orr	r2, r0, #8388608	; 0x800000
   194fc:	add	r0, sp, #28
   19500:	bl	1b29c <__assert_fail@plt+0x9d98>
   19504:	ldr	r0, [fp, #-8]
   19508:	ldr	r1, [fp, #-12]
   1950c:	ldr	r3, [fp, #-16]
   19510:	ldr	r2, [fp, #-20]	; 0xffffffec
   19514:	add	ip, sp, #28
   19518:	str	r2, [sp, #24]
   1951c:	mov	r2, ip
   19520:	movw	ip, #0
   19524:	str	ip, [sp]
   19528:	ldr	ip, [sp, #24]
   1952c:	str	ip, [sp, #4]
   19530:	bl	1b2dc <__assert_fail@plt+0x9dd8>
   19534:	str	r0, [fp, #-28]	; 0xffffffe4
   19538:	ldr	r0, [fp, #-20]	; 0xffffffec
   1953c:	ldr	r0, [r0]
   19540:	cmp	r0, #0
   19544:	movw	r0, #0
   19548:	str	r0, [sp, #20]
   1954c:	beq	19568 <__assert_fail@plt+0x8064>
   19550:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19554:	movw	r1, #0
   19558:	cmp	r0, r1
   1955c:	movw	r0, #0
   19560:	moveq	r0, #1
   19564:	str	r0, [sp, #20]
   19568:	ldr	r0, [sp, #20]
   1956c:	tst	r0, #1
   19570:	beq	19580 <__assert_fail@plt+0x807c>
   19574:	movw	r0, #0
   19578:	str	r0, [fp, #-4]
   1957c:	b	1962c <__assert_fail@plt+0x8128>
   19580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19584:	movw	r1, #0
   19588:	str	r1, [sp, #16]
   1958c:	ldr	r2, [sp, #16]
   19590:	movw	r3, #2
   19594:	bl	1b530 <__assert_fail@plt+0xa02c>
   19598:	str	r0, [fp, #-32]	; 0xffffffe0
   1959c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   195a0:	movw	r1, #0
   195a4:	cmp	r0, r1
   195a8:	beq	195c8 <__assert_fail@plt+0x80c4>
   195ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   195b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   195b8:	movw	r3, #16
   195bc:	bl	1b530 <__assert_fail@plt+0xa02c>
   195c0:	str	r0, [sp, #36]	; 0x24
   195c4:	b	195d0 <__assert_fail@plt+0x80cc>
   195c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   195cc:	str	r0, [sp, #36]	; 0x24
   195d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   195d4:	movw	r1, #0
   195d8:	cmp	r0, r1
   195dc:	movw	r0, #1
   195e0:	str	r0, [sp, #12]
   195e4:	beq	19600 <__assert_fail@plt+0x80fc>
   195e8:	ldr	r0, [sp, #36]	; 0x24
   195ec:	movw	r1, #0
   195f0:	cmp	r0, r1
   195f4:	movw	r0, #0
   195f8:	moveq	r0, #1
   195fc:	str	r0, [sp, #12]
   19600:	ldr	r0, [sp, #12]
   19604:	tst	r0, #1
   19608:	beq	19624 <__assert_fail@plt+0x8120>
   1960c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19610:	movw	r1, #12
   19614:	str	r1, [r0]
   19618:	movw	r0, #0
   1961c:	str	r0, [fp, #-4]
   19620:	b	1962c <__assert_fail@plt+0x8128>
   19624:	ldr	r0, [sp, #36]	; 0x24
   19628:	str	r0, [fp, #-4]
   1962c:	ldr	r0, [fp, #-4]
   19630:	mov	sp, fp
   19634:	pop	{fp, pc}
   19638:	push	{fp, lr}
   1963c:	mov	fp, sp
   19640:	sub	sp, sp, #48	; 0x30
   19644:	str	r0, [fp, #-8]
   19648:	ldr	r0, [fp, #-8]
   1964c:	ldr	r0, [r0]
   19650:	str	r0, [fp, #-12]
   19654:	ldr	r0, [fp, #-12]
   19658:	ldr	r0, [r0, #4]
   1965c:	lsl	r0, r0, #2
   19660:	bl	3354c <__assert_fail@plt+0x22048>
   19664:	ldr	r1, [fp, #-12]
   19668:	str	r0, [r1, #12]
   1966c:	ldr	r0, [fp, #-12]
   19670:	ldr	r0, [r0, #4]
   19674:	lsl	r0, r0, #2
   19678:	bl	3354c <__assert_fail@plt+0x22048>
   1967c:	ldr	r1, [fp, #-12]
   19680:	str	r0, [r1, #16]
   19684:	ldr	r0, [fp, #-12]
   19688:	ldr	r0, [r0, #4]
   1968c:	movw	r1, #12
   19690:	mul	r0, r0, r1
   19694:	bl	3354c <__assert_fail@plt+0x22048>
   19698:	ldr	r1, [fp, #-12]
   1969c:	str	r0, [r1, #20]
   196a0:	ldr	r0, [fp, #-12]
   196a4:	ldr	r0, [r0, #4]
   196a8:	movw	r1, #12
   196ac:	mul	r0, r0, r1
   196b0:	bl	3354c <__assert_fail@plt+0x22048>
   196b4:	ldr	r1, [fp, #-12]
   196b8:	str	r0, [r1, #24]
   196bc:	ldr	r0, [fp, #-12]
   196c0:	ldr	r0, [r0, #12]
   196c4:	movw	r1, #0
   196c8:	cmp	r0, r1
   196cc:	movw	r0, #1
   196d0:	str	r0, [sp, #24]
   196d4:	beq	1972c <__assert_fail@plt+0x8228>
   196d8:	ldr	r0, [fp, #-12]
   196dc:	ldr	r0, [r0, #16]
   196e0:	movw	r1, #0
   196e4:	cmp	r0, r1
   196e8:	movw	r0, #1
   196ec:	str	r0, [sp, #24]
   196f0:	beq	1972c <__assert_fail@plt+0x8228>
   196f4:	ldr	r0, [fp, #-12]
   196f8:	ldr	r0, [r0, #20]
   196fc:	movw	r1, #0
   19700:	cmp	r0, r1
   19704:	movw	r0, #1
   19708:	str	r0, [sp, #24]
   1970c:	beq	1972c <__assert_fail@plt+0x8228>
   19710:	ldr	r0, [fp, #-12]
   19714:	ldr	r0, [r0, #24]
   19718:	movw	r1, #0
   1971c:	cmp	r0, r1
   19720:	movw	r0, #0
   19724:	moveq	r0, #1
   19728:	str	r0, [sp, #24]
   1972c:	ldr	r0, [sp, #24]
   19730:	tst	r0, #1
   19734:	beq	19744 <__assert_fail@plt+0x8240>
   19738:	movw	r0, #12
   1973c:	str	r0, [fp, #-4]
   19740:	b	19a00 <__assert_fail@plt+0x84fc>
   19744:	ldr	r0, [fp, #-8]
   19748:	ldr	r0, [r0, #24]
   1974c:	lsl	r0, r0, #2
   19750:	bl	3354c <__assert_fail@plt+0x22048>
   19754:	ldr	r1, [fp, #-12]
   19758:	str	r0, [r1, #132]	; 0x84
   1975c:	ldr	r0, [fp, #-12]
   19760:	ldr	r0, [r0, #132]	; 0x84
   19764:	movw	r1, #0
   19768:	cmp	r0, r1
   1976c:	beq	1985c <__assert_fail@plt+0x8358>
   19770:	movw	r0, #0
   19774:	str	r0, [fp, #-20]	; 0xffffffec
   19778:	ldr	r0, [fp, #-20]	; 0xffffffec
   1977c:	ldr	r1, [fp, #-8]
   19780:	ldr	r1, [r1, #24]
   19784:	cmp	r0, r1
   19788:	bcs	197b4 <__assert_fail@plt+0x82b0>
   1978c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19790:	mov	r1, r0
   19794:	ldr	r2, [fp, #-12]
   19798:	ldr	r2, [r2, #132]	; 0x84
   1979c:	add	r0, r2, r0, lsl #2
   197a0:	str	r1, [r0]
   197a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   197a8:	add	r0, r0, #1
   197ac:	str	r0, [fp, #-20]	; 0xffffffec
   197b0:	b	19778 <__assert_fail@plt+0x8274>
   197b4:	ldr	r0, [fp, #-12]
   197b8:	ldr	r0, [r0, #52]	; 0x34
   197bc:	ldr	r1, [fp, #-12]
   197c0:	movw	r2, #3524	; 0xdc4
   197c4:	movt	r2, #2
   197c8:	str	r1, [sp, #20]
   197cc:	mov	r1, r2
   197d0:	ldr	r2, [sp, #20]
   197d4:	bl	20ca8 <__assert_fail@plt+0xf7a4>
   197d8:	movw	r1, #0
   197dc:	str	r1, [fp, #-20]	; 0xffffffec
   197e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   197e4:	ldr	r1, [fp, #-8]
   197e8:	ldr	r1, [r1, #24]
   197ec:	cmp	r0, r1
   197f0:	bcs	1982c <__assert_fail@plt+0x8328>
   197f4:	ldr	r0, [fp, #-12]
   197f8:	ldr	r0, [r0, #132]	; 0x84
   197fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   19800:	add	r0, r0, r1, lsl #2
   19804:	ldr	r0, [r0]
   19808:	ldr	r1, [fp, #-20]	; 0xffffffec
   1980c:	cmp	r0, r1
   19810:	beq	19818 <__assert_fail@plt+0x8314>
   19814:	b	1982c <__assert_fail@plt+0x8328>
   19818:	b	1981c <__assert_fail@plt+0x8318>
   1981c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19820:	add	r0, r0, #1
   19824:	str	r0, [fp, #-20]	; 0xffffffec
   19828:	b	197e0 <__assert_fail@plt+0x82dc>
   1982c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19830:	ldr	r1, [fp, #-8]
   19834:	ldr	r1, [r1, #24]
   19838:	cmp	r0, r1
   1983c:	bne	19858 <__assert_fail@plt+0x8354>
   19840:	ldr	r0, [fp, #-12]
   19844:	ldr	r0, [r0, #132]	; 0x84
   19848:	bl	34c20 <__assert_fail@plt+0x2371c>
   1984c:	ldr	r0, [fp, #-12]
   19850:	movw	r1, #0
   19854:	str	r1, [r0, #132]	; 0x84
   19858:	b	1985c <__assert_fail@plt+0x8358>
   1985c:	ldr	r0, [fp, #-12]
   19860:	ldr	r0, [r0, #52]	; 0x34
   19864:	ldr	r1, [fp, #-8]
   19868:	movw	r2, #3896	; 0xf38
   1986c:	movt	r2, #2
   19870:	str	r1, [sp, #16]
   19874:	mov	r1, r2
   19878:	ldr	r2, [sp, #16]
   1987c:	bl	1c920 <__assert_fail@plt+0xb41c>
   19880:	str	r0, [fp, #-16]
   19884:	ldr	r0, [fp, #-16]
   19888:	cmp	r0, #0
   1988c:	beq	1989c <__assert_fail@plt+0x8398>
   19890:	ldr	r0, [fp, #-16]
   19894:	str	r0, [fp, #-4]
   19898:	b	19a00 <__assert_fail@plt+0x84fc>
   1989c:	ldr	r0, [fp, #-12]
   198a0:	ldr	r0, [r0, #52]	; 0x34
   198a4:	ldr	r1, [fp, #-12]
   198a8:	movw	r2, #4164	; 0x1044
   198ac:	movt	r2, #2
   198b0:	str	r1, [sp, #12]
   198b4:	mov	r1, r2
   198b8:	ldr	r2, [sp, #12]
   198bc:	bl	1c920 <__assert_fail@plt+0xb41c>
   198c0:	str	r0, [fp, #-16]
   198c4:	ldr	r0, [fp, #-16]
   198c8:	cmp	r0, #0
   198cc:	beq	198dc <__assert_fail@plt+0x83d8>
   198d0:	ldr	r0, [fp, #-16]
   198d4:	str	r0, [fp, #-4]
   198d8:	b	19a00 <__assert_fail@plt+0x84fc>
   198dc:	ldr	r0, [fp, #-12]
   198e0:	ldr	r0, [r0, #52]	; 0x34
   198e4:	ldr	r1, [fp, #-12]
   198e8:	movw	r2, #4436	; 0x1154
   198ec:	movt	r2, #2
   198f0:	str	r1, [sp, #8]
   198f4:	mov	r1, r2
   198f8:	ldr	r2, [sp, #8]
   198fc:	bl	20ca8 <__assert_fail@plt+0xf7a4>
   19900:	ldr	r1, [fp, #-12]
   19904:	ldr	r1, [r1, #52]	; 0x34
   19908:	ldr	r2, [fp, #-12]
   1990c:	str	r0, [sp, #4]
   19910:	mov	r0, r1
   19914:	movw	r1, #4656	; 0x1230
   19918:	movt	r1, #2
   1991c:	bl	20ca8 <__assert_fail@plt+0xf7a4>
   19920:	str	r0, [fp, #-16]
   19924:	ldr	r0, [fp, #-16]
   19928:	cmp	r0, #0
   1992c:	beq	1993c <__assert_fail@plt+0x8438>
   19930:	ldr	r0, [fp, #-16]
   19934:	str	r0, [fp, #-4]
   19938:	b	19a00 <__assert_fail@plt+0x84fc>
   1993c:	ldr	r0, [fp, #-12]
   19940:	bl	21498 <__assert_fail@plt+0xff94>
   19944:	str	r0, [fp, #-16]
   19948:	ldr	r0, [fp, #-16]
   1994c:	cmp	r0, #0
   19950:	beq	19960 <__assert_fail@plt+0x845c>
   19954:	ldr	r0, [fp, #-16]
   19958:	str	r0, [fp, #-4]
   1995c:	b	19a00 <__assert_fail@plt+0x84fc>
   19960:	ldr	r0, [fp, #-8]
   19964:	ldrb	r0, [r0, #28]
   19968:	ubfx	r0, r0, #4, #1
   1996c:	and	r0, r0, #255	; 0xff
   19970:	cmp	r0, #0
   19974:	bne	199a0 <__assert_fail@plt+0x849c>
   19978:	ldr	r0, [fp, #-8]
   1997c:	ldr	r0, [r0, #24]
   19980:	cmp	r0, #0
   19984:	bls	199a0 <__assert_fail@plt+0x849c>
   19988:	ldr	r0, [fp, #-12]
   1998c:	ldrb	r0, [r0, #88]	; 0x58
   19990:	and	r0, r0, #1
   19994:	and	r0, r0, #255	; 0xff
   19998:	cmp	r0, #0
   1999c:	bne	199b0 <__assert_fail@plt+0x84ac>
   199a0:	ldr	r0, [fp, #-12]
   199a4:	ldr	r0, [r0, #76]	; 0x4c
   199a8:	cmp	r0, #0
   199ac:	beq	199f8 <__assert_fail@plt+0x84f4>
   199b0:	ldr	r0, [fp, #-12]
   199b4:	ldr	r0, [r0, #8]
   199b8:	movw	r1, #12
   199bc:	mul	r0, r0, r1
   199c0:	bl	3354c <__assert_fail@plt+0x22048>
   199c4:	ldr	r1, [fp, #-12]
   199c8:	str	r0, [r1, #28]
   199cc:	ldr	r0, [fp, #-12]
   199d0:	ldr	r0, [r0, #28]
   199d4:	movw	r1, #0
   199d8:	cmp	r0, r1
   199dc:	bne	199ec <__assert_fail@plt+0x84e8>
   199e0:	movw	r0, #12
   199e4:	str	r0, [fp, #-4]
   199e8:	b	19a00 <__assert_fail@plt+0x84fc>
   199ec:	ldr	r0, [fp, #-12]
   199f0:	bl	215e0 <__assert_fail@plt+0x100dc>
   199f4:	str	r0, [fp, #-16]
   199f8:	ldr	r0, [fp, #-16]
   199fc:	str	r0, [fp, #-4]
   19a00:	ldr	r0, [fp, #-4]
   19a04:	mov	sp, fp
   19a08:	pop	{fp, pc}
   19a0c:	push	{fp, lr}
   19a10:	mov	fp, sp
   19a14:	sub	sp, sp, #32
   19a18:	str	r0, [fp, #-4]
   19a1c:	movw	r0, #0
   19a20:	strb	r0, [fp, #-13]
   19a24:	strb	r0, [fp, #-14]
   19a28:	movw	r0, #0
   19a2c:	str	r0, [fp, #-8]
   19a30:	ldr	r0, [fp, #-8]
   19a34:	ldr	r1, [fp, #-4]
   19a38:	ldr	r1, [r1, #8]
   19a3c:	cmp	r0, r1
   19a40:	bcs	19bc0 <__assert_fail@plt+0x86bc>
   19a44:	ldr	r0, [fp, #-4]
   19a48:	ldr	r0, [r0]
   19a4c:	ldr	r1, [fp, #-8]
   19a50:	add	r0, r0, r1, lsl #3
   19a54:	ldrb	r0, [r0, #4]
   19a58:	sub	r0, r0, #1
   19a5c:	cmp	r0, #11
   19a60:	str	r0, [sp, #8]
   19a64:	bhi	19ba8 <__assert_fail@plt+0x86a4>
   19a68:	add	r0, pc, #8
   19a6c:	ldr	r1, [sp, #8]
   19a70:	ldr	r0, [r0, r1, lsl #2]
   19a74:	mov	pc, r0
   19a78:	andeq	r9, r1, r8, lsr #21
   19a7c:	andeq	r9, r1, r8, lsr fp
   19a80:	andeq	r9, r1, r0, asr #22
   19a84:	andeq	r9, r1, r8, lsr fp
   19a88:	andeq	r9, r1, ip, lsr #22
   19a8c:	andeq	r9, r1, ip, lsr fp
   19a90:	andeq	r9, r1, r8, lsr #23
   19a94:	andeq	r9, r1, r8, lsr fp
   19a98:	andeq	r9, r1, r8, lsr fp
   19a9c:	andeq	r9, r1, r8, lsr fp
   19aa0:	andeq	r9, r1, r8, lsr fp
   19aa4:	ldrdeq	r9, [r1], -r0
   19aa8:	ldr	r0, [fp, #-4]
   19aac:	ldr	r0, [r0]
   19ab0:	ldr	r1, [fp, #-8]
   19ab4:	add	r0, r0, r1, lsl #3
   19ab8:	ldrb	r0, [r0]
   19abc:	cmp	r0, #128	; 0x80
   19ac0:	blt	19acc <__assert_fail@plt+0x85c8>
   19ac4:	movw	r0, #1
   19ac8:	strb	r0, [fp, #-13]
   19acc:	b	19bac <__assert_fail@plt+0x86a8>
   19ad0:	ldr	r0, [fp, #-4]
   19ad4:	ldr	r0, [r0]
   19ad8:	ldr	r1, [fp, #-8]
   19adc:	ldr	r0, [r0, r1, lsl #3]
   19ae0:	cmp	r0, #16
   19ae4:	str	r0, [sp, #4]
   19ae8:	beq	19b20 <__assert_fail@plt+0x861c>
   19aec:	b	19af0 <__assert_fail@plt+0x85ec>
   19af0:	ldr	r0, [sp, #4]
   19af4:	cmp	r0, #32
   19af8:	beq	19b20 <__assert_fail@plt+0x861c>
   19afc:	b	19b00 <__assert_fail@plt+0x85fc>
   19b00:	ldr	r0, [sp, #4]
   19b04:	cmp	r0, #64	; 0x40
   19b08:	beq	19b20 <__assert_fail@plt+0x861c>
   19b0c:	b	19b10 <__assert_fail@plt+0x860c>
   19b10:	ldr	r0, [sp, #4]
   19b14:	cmp	r0, #128	; 0x80
   19b18:	bne	19b24 <__assert_fail@plt+0x8620>
   19b1c:	b	19b20 <__assert_fail@plt+0x861c>
   19b20:	b	19b28 <__assert_fail@plt+0x8624>
   19b24:	b	19d10 <__assert_fail@plt+0x880c>
   19b28:	b	19bac <__assert_fail@plt+0x86a8>
   19b2c:	movw	r0, #1
   19b30:	strb	r0, [fp, #-14]
   19b34:	b	19bac <__assert_fail@plt+0x86a8>
   19b38:	b	19bac <__assert_fail@plt+0x86a8>
   19b3c:	b	19d10 <__assert_fail@plt+0x880c>
   19b40:	movw	r0, #0
   19b44:	str	r0, [sp, #12]
   19b48:	movw	r0, #4
   19b4c:	str	r0, [fp, #-12]
   19b50:	ldr	r0, [fp, #-12]
   19b54:	cmp	r0, #8
   19b58:	bge	19ba4 <__assert_fail@plt+0x86a0>
   19b5c:	ldr	r0, [fp, #-4]
   19b60:	ldr	r0, [r0]
   19b64:	ldr	r1, [fp, #-8]
   19b68:	ldr	r0, [r0, r1, lsl #3]
   19b6c:	ldr	r1, [fp, #-12]
   19b70:	add	r0, r0, r1, lsl #2
   19b74:	ldr	r0, [r0]
   19b78:	ldr	r1, [sp, #12]
   19b7c:	lsr	r0, r0, r1
   19b80:	cmp	r0, #0
   19b84:	beq	19b8c <__assert_fail@plt+0x8688>
   19b88:	b	19d10 <__assert_fail@plt+0x880c>
   19b8c:	movw	r0, #0
   19b90:	str	r0, [sp, #12]
   19b94:	ldr	r0, [fp, #-12]
   19b98:	add	r0, r0, #1
   19b9c:	str	r0, [fp, #-12]
   19ba0:	b	19b50 <__assert_fail@plt+0x864c>
   19ba4:	b	19bac <__assert_fail@plt+0x86a8>
   19ba8:	bl	114e0 <abort@plt>
   19bac:	b	19bb0 <__assert_fail@plt+0x86ac>
   19bb0:	ldr	r0, [fp, #-8]
   19bb4:	add	r0, r0, #1
   19bb8:	str	r0, [fp, #-8]
   19bbc:	b	19a30 <__assert_fail@plt+0x852c>
   19bc0:	ldrb	r0, [fp, #-13]
   19bc4:	tst	r0, #1
   19bc8:	bne	19bd8 <__assert_fail@plt+0x86d4>
   19bcc:	ldrb	r0, [fp, #-14]
   19bd0:	tst	r0, #1
   19bd4:	beq	19cb4 <__assert_fail@plt+0x87b0>
   19bd8:	movw	r0, #0
   19bdc:	str	r0, [fp, #-8]
   19be0:	ldr	r0, [fp, #-8]
   19be4:	ldr	r1, [fp, #-4]
   19be8:	ldr	r1, [r1, #8]
   19bec:	cmp	r0, r1
   19bf0:	bcs	19cb0 <__assert_fail@plt+0x87ac>
   19bf4:	ldr	r0, [fp, #-4]
   19bf8:	ldr	r0, [r0]
   19bfc:	ldr	r1, [fp, #-8]
   19c00:	add	r0, r0, r1, lsl #3
   19c04:	ldr	r0, [r0, #4]
   19c08:	and	r0, r0, #255	; 0xff
   19c0c:	cmp	r0, #1
   19c10:	bne	19c54 <__assert_fail@plt+0x8750>
   19c14:	ldr	r0, [fp, #-4]
   19c18:	ldr	r0, [r0]
   19c1c:	ldr	r1, [fp, #-8]
   19c20:	add	r0, r0, r1, lsl #3
   19c24:	ldrb	r0, [r0]
   19c28:	cmp	r0, #128	; 0x80
   19c2c:	blt	19c54 <__assert_fail@plt+0x8750>
   19c30:	ldr	r0, [fp, #-4]
   19c34:	ldr	r0, [r0]
   19c38:	ldr	r1, [fp, #-8]
   19c3c:	add	r0, r0, r1, lsl #3
   19c40:	ldr	r1, [r0, #4]
   19c44:	mvn	r2, #2097152	; 0x200000
   19c48:	and	r1, r1, r2
   19c4c:	str	r1, [r0, #4]
   19c50:	b	19c9c <__assert_fail@plt+0x8798>
   19c54:	ldr	r0, [fp, #-4]
   19c58:	ldr	r0, [r0]
   19c5c:	ldr	r1, [fp, #-8]
   19c60:	add	r0, r0, r1, lsl #3
   19c64:	ldr	r0, [r0, #4]
   19c68:	and	r0, r0, #255	; 0xff
   19c6c:	cmp	r0, #5
   19c70:	bne	19c98 <__assert_fail@plt+0x8794>
   19c74:	ldr	r0, [fp, #-4]
   19c78:	ldr	r0, [r0]
   19c7c:	ldr	r1, [fp, #-8]
   19c80:	add	r0, r0, r1, lsl #3
   19c84:	ldr	r1, [r0, #4]
   19c88:	mvn	r2, #255	; 0xff
   19c8c:	and	r1, r1, r2
   19c90:	orr	r1, r1, #7
   19c94:	str	r1, [r0, #4]
   19c98:	b	19c9c <__assert_fail@plt+0x8798>
   19c9c:	b	19ca0 <__assert_fail@plt+0x879c>
   19ca0:	ldr	r0, [fp, #-8]
   19ca4:	add	r0, r0, #1
   19ca8:	str	r0, [fp, #-8]
   19cac:	b	19be0 <__assert_fail@plt+0x86dc>
   19cb0:	b	19cb4 <__assert_fail@plt+0x87b0>
   19cb4:	ldr	r0, [fp, #-4]
   19cb8:	mov	r1, #1
   19cbc:	str	r1, [r0, #92]	; 0x5c
   19cc0:	ldr	r0, [fp, #-4]
   19cc4:	ldrb	r1, [r0, #88]	; 0x58
   19cc8:	bic	r1, r1, #4
   19ccc:	strb	r1, [r0, #88]	; 0x58
   19cd0:	ldr	r0, [fp, #-4]
   19cd4:	ldr	r0, [r0, #76]	; 0x4c
   19cd8:	cmp	r0, #0
   19cdc:	movw	r0, #1
   19ce0:	str	r0, [sp]
   19ce4:	bgt	19cf0 <__assert_fail@plt+0x87ec>
   19ce8:	ldrb	r0, [fp, #-14]
   19cec:	str	r0, [sp]
   19cf0:	ldr	r0, [sp]
   19cf4:	ldr	r1, [fp, #-4]
   19cf8:	and	r0, r0, #1
   19cfc:	ldrb	r2, [r1, #88]	; 0x58
   19d00:	lsl	r0, r0, #1
   19d04:	bic	r2, r2, #2
   19d08:	orr	r0, r2, r0
   19d0c:	strb	r0, [r1, #88]	; 0x58
   19d10:	mov	sp, fp
   19d14:	pop	{fp, pc}
   19d18:	push	{fp, lr}
   19d1c:	mov	fp, sp
   19d20:	sub	sp, sp, #64	; 0x40
   19d24:	str	r0, [fp, #-8]
   19d28:	ldr	r0, [fp, #-8]
   19d2c:	ldr	r0, [r0, #52]	; 0x34
   19d30:	ldr	r0, [r0, #12]
   19d34:	ldr	r0, [r0, #28]
   19d38:	str	r0, [fp, #-12]
   19d3c:	ldr	r0, [fp, #-12]
   19d40:	ldr	r1, [fp, #-8]
   19d44:	str	r0, [r1, #72]	; 0x48
   19d48:	ldr	r0, [fp, #-8]
   19d4c:	ldr	r0, [r0, #24]
   19d50:	ldr	r1, [fp, #-12]
   19d54:	movw	r2, #12
   19d58:	mul	r1, r1, r2
   19d5c:	add	r1, r0, r1
   19d60:	add	r0, sp, #32
   19d64:	bl	23030 <__assert_fail@plt+0x11b2c>
   19d68:	str	r0, [fp, #-20]	; 0xffffffec
   19d6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19d70:	cmp	r0, #0
   19d74:	beq	19d84 <__assert_fail@plt+0x8880>
   19d78:	ldr	r0, [fp, #-20]	; 0xffffffec
   19d7c:	str	r0, [fp, #-4]
   19d80:	b	1a070 <__assert_fail@plt+0x8b6c>
   19d84:	ldr	r0, [fp, #-8]
   19d88:	ldr	r0, [r0, #76]	; 0x4c
   19d8c:	cmp	r0, #0
   19d90:	ble	19f24 <__assert_fail@plt+0x8a20>
   19d94:	movw	r0, #0
   19d98:	str	r0, [fp, #-16]
   19d9c:	ldr	r0, [fp, #-16]
   19da0:	ldr	r1, [sp, #36]	; 0x24
   19da4:	cmp	r0, r1
   19da8:	bge	19f20 <__assert_fail@plt+0x8a1c>
   19dac:	ldr	r0, [sp, #40]	; 0x28
   19db0:	ldr	r1, [fp, #-16]
   19db4:	ldr	r0, [r0, r1, lsl #2]
   19db8:	str	r0, [sp, #28]
   19dbc:	ldr	r0, [fp, #-8]
   19dc0:	ldr	r0, [r0]
   19dc4:	ldr	r1, [sp, #28]
   19dc8:	add	r0, r0, r1, lsl #3
   19dcc:	ldr	r0, [r0, #4]
   19dd0:	and	r0, r0, #255	; 0xff
   19dd4:	str	r0, [sp, #24]
   19dd8:	ldr	r0, [sp, #24]
   19ddc:	cmp	r0, #4
   19de0:	beq	19de8 <__assert_fail@plt+0x88e4>
   19de4:	b	19f10 <__assert_fail@plt+0x8a0c>
   19de8:	movw	r0, #0
   19dec:	str	r0, [sp, #20]
   19df0:	ldr	r0, [sp, #20]
   19df4:	ldr	r1, [sp, #36]	; 0x24
   19df8:	cmp	r0, r1
   19dfc:	bge	19e6c <__assert_fail@plt+0x8968>
   19e00:	ldr	r0, [fp, #-8]
   19e04:	ldr	r0, [r0]
   19e08:	ldr	r1, [sp, #40]	; 0x28
   19e0c:	ldr	r2, [sp, #20]
   19e10:	ldr	r1, [r1, r2, lsl #2]
   19e14:	add	r0, r0, r1, lsl #3
   19e18:	str	r0, [sp, #16]
   19e1c:	ldr	r0, [sp, #16]
   19e20:	ldr	r0, [r0, #4]
   19e24:	and	r0, r0, #255	; 0xff
   19e28:	cmp	r0, #9
   19e2c:	bne	19e58 <__assert_fail@plt+0x8954>
   19e30:	ldr	r0, [sp, #16]
   19e34:	ldr	r0, [r0]
   19e38:	ldr	r1, [fp, #-8]
   19e3c:	ldr	r1, [r1]
   19e40:	ldr	r2, [sp, #28]
   19e44:	add	r1, r1, r2, lsl #3
   19e48:	ldr	r1, [r1]
   19e4c:	cmp	r0, r1
   19e50:	bne	19e58 <__assert_fail@plt+0x8954>
   19e54:	b	19e6c <__assert_fail@plt+0x8968>
   19e58:	b	19e5c <__assert_fail@plt+0x8958>
   19e5c:	ldr	r0, [sp, #20]
   19e60:	add	r0, r0, #1
   19e64:	str	r0, [sp, #20]
   19e68:	b	19df0 <__assert_fail@plt+0x88ec>
   19e6c:	ldr	r0, [sp, #20]
   19e70:	ldr	r1, [sp, #36]	; 0x24
   19e74:	cmp	r0, r1
   19e78:	bne	19e80 <__assert_fail@plt+0x897c>
   19e7c:	b	19f10 <__assert_fail@plt+0x8a0c>
   19e80:	ldr	r0, [sp, #24]
   19e84:	cmp	r0, #4
   19e88:	bne	19f0c <__assert_fail@plt+0x8a08>
   19e8c:	ldr	r0, [fp, #-8]
   19e90:	ldr	r0, [r0, #20]
   19e94:	ldr	r1, [sp, #28]
   19e98:	movw	r2, #12
   19e9c:	mul	r1, r1, r2
   19ea0:	add	r0, r0, r1
   19ea4:	ldr	r0, [r0, #8]
   19ea8:	ldr	r0, [r0]
   19eac:	str	r0, [sp, #12]
   19eb0:	ldr	r1, [sp, #12]
   19eb4:	add	r0, sp, #32
   19eb8:	bl	23104 <__assert_fail@plt+0x11c00>
   19ebc:	cmp	r0, #0
   19ec0:	bne	19f08 <__assert_fail@plt+0x8a04>
   19ec4:	ldr	r0, [fp, #-8]
   19ec8:	ldr	r0, [r0, #24]
   19ecc:	ldr	r1, [sp, #12]
   19ed0:	movw	r2, #12
   19ed4:	mul	r1, r1, r2
   19ed8:	add	r1, r0, r1
   19edc:	add	r0, sp, #32
   19ee0:	bl	22758 <__assert_fail@plt+0x11254>
   19ee4:	str	r0, [sp, #8]
   19ee8:	ldr	r0, [sp, #8]
   19eec:	cmp	r0, #0
   19ef0:	beq	19f00 <__assert_fail@plt+0x89fc>
   19ef4:	ldr	r0, [sp, #8]
   19ef8:	str	r0, [fp, #-4]
   19efc:	b	1a070 <__assert_fail@plt+0x8b6c>
   19f00:	movw	r0, #0
   19f04:	str	r0, [fp, #-16]
   19f08:	b	19f0c <__assert_fail@plt+0x8a08>
   19f0c:	b	19f10 <__assert_fail@plt+0x8a0c>
   19f10:	ldr	r0, [fp, #-16]
   19f14:	add	r0, r0, #1
   19f18:	str	r0, [fp, #-16]
   19f1c:	b	19d9c <__assert_fail@plt+0x8898>
   19f20:	b	19f24 <__assert_fail@plt+0x8a20>
   19f24:	ldr	r1, [fp, #-8]
   19f28:	sub	r0, fp, #20
   19f2c:	add	r2, sp, #32
   19f30:	movw	r3, #0
   19f34:	bl	231f4 <__assert_fail@plt+0x11cf0>
   19f38:	ldr	r1, [fp, #-8]
   19f3c:	str	r0, [r1, #36]	; 0x24
   19f40:	ldr	r0, [fp, #-8]
   19f44:	ldr	r0, [r0, #36]	; 0x24
   19f48:	movw	r1, #0
   19f4c:	cmp	r0, r1
   19f50:	bne	19f60 <__assert_fail@plt+0x8a5c>
   19f54:	ldr	r0, [fp, #-20]	; 0xffffffec
   19f58:	str	r0, [fp, #-4]
   19f5c:	b	1a070 <__assert_fail@plt+0x8b6c>
   19f60:	ldr	r0, [fp, #-8]
   19f64:	ldr	r0, [r0, #36]	; 0x24
   19f68:	ldrb	r0, [r0, #52]	; 0x34
   19f6c:	lsr	r0, r0, #7
   19f70:	and	r0, r0, #255	; 0xff
   19f74:	cmp	r0, #0
   19f78:	beq	1a040 <__assert_fail@plt+0x8b3c>
   19f7c:	ldr	r1, [fp, #-8]
   19f80:	sub	r0, fp, #20
   19f84:	add	r2, sp, #32
   19f88:	movw	r3, #1
   19f8c:	bl	231f4 <__assert_fail@plt+0x11cf0>
   19f90:	ldr	r1, [fp, #-8]
   19f94:	str	r0, [r1, #40]	; 0x28
   19f98:	ldr	r1, [fp, #-8]
   19f9c:	sub	r0, fp, #20
   19fa0:	add	r2, sp, #32
   19fa4:	movw	r3, #2
   19fa8:	bl	231f4 <__assert_fail@plt+0x11cf0>
   19fac:	ldr	r1, [fp, #-8]
   19fb0:	str	r0, [r1, #44]	; 0x2c
   19fb4:	ldr	r1, [fp, #-8]
   19fb8:	sub	r0, fp, #20
   19fbc:	add	r2, sp, #32
   19fc0:	movw	r3, #6
   19fc4:	bl	231f4 <__assert_fail@plt+0x11cf0>
   19fc8:	ldr	r1, [fp, #-8]
   19fcc:	str	r0, [r1, #48]	; 0x30
   19fd0:	ldr	r0, [fp, #-8]
   19fd4:	ldr	r0, [r0, #40]	; 0x28
   19fd8:	movw	r1, #0
   19fdc:	cmp	r0, r1
   19fe0:	movw	r0, #1
   19fe4:	str	r0, [sp, #4]
   19fe8:	beq	1a024 <__assert_fail@plt+0x8b20>
   19fec:	ldr	r0, [fp, #-8]
   19ff0:	ldr	r0, [r0, #44]	; 0x2c
   19ff4:	movw	r1, #0
   19ff8:	cmp	r0, r1
   19ffc:	movw	r0, #1
   1a000:	str	r0, [sp, #4]
   1a004:	beq	1a024 <__assert_fail@plt+0x8b20>
   1a008:	ldr	r0, [fp, #-8]
   1a00c:	ldr	r0, [r0, #48]	; 0x30
   1a010:	movw	r1, #0
   1a014:	cmp	r0, r1
   1a018:	movw	r0, #0
   1a01c:	moveq	r0, #1
   1a020:	str	r0, [sp, #4]
   1a024:	ldr	r0, [sp, #4]
   1a028:	tst	r0, #1
   1a02c:	beq	1a03c <__assert_fail@plt+0x8b38>
   1a030:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a034:	str	r0, [fp, #-4]
   1a038:	b	1a070 <__assert_fail@plt+0x8b6c>
   1a03c:	b	1a060 <__assert_fail@plt+0x8b5c>
   1a040:	ldr	r0, [fp, #-8]
   1a044:	ldr	r0, [r0, #36]	; 0x24
   1a048:	ldr	r1, [fp, #-8]
   1a04c:	str	r0, [r1, #48]	; 0x30
   1a050:	ldr	r1, [fp, #-8]
   1a054:	str	r0, [r1, #44]	; 0x2c
   1a058:	ldr	r1, [fp, #-8]
   1a05c:	str	r0, [r1, #40]	; 0x28
   1a060:	ldr	r0, [sp, #40]	; 0x28
   1a064:	bl	34c20 <__assert_fail@plt+0x2371c>
   1a068:	movw	r0, #0
   1a06c:	str	r0, [fp, #-4]
   1a070:	ldr	r0, [fp, #-4]
   1a074:	mov	sp, fp
   1a078:	pop	{fp, pc}
   1a07c:	push	{fp, lr}
   1a080:	mov	fp, sp
   1a084:	sub	sp, sp, #24
   1a088:	ldr	ip, [fp, #12]
   1a08c:	ldr	lr, [fp, #8]
   1a090:	str	r0, [fp, #-4]
   1a094:	str	r1, [fp, #-8]
   1a098:	str	r2, [sp, #12]
   1a09c:	str	r3, [sp, #8]
   1a0a0:	and	r0, lr, #1
   1a0a4:	strb	r0, [sp, #7]
   1a0a8:	ldr	r0, [fp, #-4]
   1a0ac:	ldr	r1, [sp, #12]
   1a0b0:	str	r0, [r1]
   1a0b4:	ldr	r0, [fp, #-8]
   1a0b8:	ldr	r1, [sp, #12]
   1a0bc:	str	r0, [r1, #48]	; 0x30
   1a0c0:	ldr	r0, [fp, #-8]
   1a0c4:	ldr	r1, [sp, #12]
   1a0c8:	str	r0, [r1, #44]	; 0x2c
   1a0cc:	ldr	r0, [sp, #8]
   1a0d0:	ldr	r1, [sp, #12]
   1a0d4:	str	r0, [r1, #64]	; 0x40
   1a0d8:	ldrb	r0, [sp, #7]
   1a0dc:	and	r0, r0, #1
   1a0e0:	ldr	r1, [sp, #12]
   1a0e4:	strb	r0, [r1, #72]	; 0x48
   1a0e8:	ldr	r0, [sp, #8]
   1a0ec:	movw	r1, #0
   1a0f0:	cmp	r0, r1
   1a0f4:	movw	r0, #1
   1a0f8:	str	r0, [sp]
   1a0fc:	bne	1a108 <__assert_fail@plt+0x8c04>
   1a100:	ldrb	r0, [sp, #7]
   1a104:	str	r0, [sp]
   1a108:	ldr	r0, [sp]
   1a10c:	and	r0, r0, #1
   1a110:	ldr	r1, [sp, #12]
   1a114:	strb	r0, [r1, #75]	; 0x4b
   1a118:	ldr	r0, [fp, #12]
   1a11c:	ldr	r0, [r0, #92]	; 0x5c
   1a120:	ldr	r1, [sp, #12]
   1a124:	str	r0, [r1, #80]	; 0x50
   1a128:	ldr	r0, [fp, #12]
   1a12c:	ldrb	r0, [r0, #88]	; 0x58
   1a130:	ubfx	r0, r0, #2, #1
   1a134:	ldr	r1, [sp, #12]
   1a138:	strb	r0, [r1, #73]	; 0x49
   1a13c:	ldr	r0, [fp, #12]
   1a140:	ldrb	r0, [r0, #88]	; 0x58
   1a144:	ubfx	r0, r0, #3, #1
   1a148:	and	r0, r0, #255	; 0xff
   1a14c:	ldr	r1, [sp, #12]
   1a150:	strb	r0, [r1, #74]	; 0x4a
   1a154:	ldr	r0, [sp, #12]
   1a158:	ldr	r0, [r0, #48]	; 0x30
   1a15c:	ldr	r1, [sp, #12]
   1a160:	str	r0, [r1, #56]	; 0x38
   1a164:	ldr	r0, [sp, #12]
   1a168:	ldr	r0, [r0, #56]	; 0x38
   1a16c:	ldr	r1, [sp, #12]
   1a170:	str	r0, [r1, #52]	; 0x34
   1a174:	mov	sp, fp
   1a178:	pop	{fp, pc}
   1a17c:	push	{fp, lr}
   1a180:	mov	fp, sp
   1a184:	sub	sp, sp, #32
   1a188:	str	r0, [fp, #-8]
   1a18c:	str	r1, [fp, #-12]
   1a190:	ldr	r0, [fp, #-8]
   1a194:	ldr	r0, [r0, #80]	; 0x50
   1a198:	cmp	r0, #1
   1a19c:	ble	1a25c <__assert_fail@plt+0x8d58>
   1a1a0:	ldr	r0, [pc, #296]	; 1a2d0 <__assert_fail@plt+0x8dcc>
   1a1a4:	movw	r1, #4
   1a1a8:	str	r1, [sp, #12]
   1a1ac:	ldr	r1, [fp, #-12]
   1a1b0:	cmp	r0, r1
   1a1b4:	bcs	1a1c4 <__assert_fail@plt+0x8cc0>
   1a1b8:	movw	r0, #12
   1a1bc:	str	r0, [fp, #-4]
   1a1c0:	b	1a2c4 <__assert_fail@plt+0x8dc0>
   1a1c4:	ldr	r0, [fp, #-8]
   1a1c8:	ldr	r0, [r0, #8]
   1a1cc:	ldr	r1, [fp, #-12]
   1a1d0:	lsl	r1, r1, #2
   1a1d4:	bl	335bc <__assert_fail@plt+0x220b8>
   1a1d8:	str	r0, [sp, #16]
   1a1dc:	ldr	r0, [sp, #16]
   1a1e0:	movw	r1, #0
   1a1e4:	cmp	r0, r1
   1a1e8:	bne	1a1f8 <__assert_fail@plt+0x8cf4>
   1a1ec:	movw	r0, #12
   1a1f0:	str	r0, [fp, #-4]
   1a1f4:	b	1a2c4 <__assert_fail@plt+0x8dc0>
   1a1f8:	ldr	r0, [sp, #16]
   1a1fc:	ldr	r1, [fp, #-8]
   1a200:	str	r0, [r1, #8]
   1a204:	ldr	r0, [fp, #-8]
   1a208:	ldr	r0, [r0, #12]
   1a20c:	movw	r1, #0
   1a210:	cmp	r0, r1
   1a214:	beq	1a258 <__assert_fail@plt+0x8d54>
   1a218:	ldr	r0, [fp, #-8]
   1a21c:	ldr	r0, [r0, #12]
   1a220:	ldr	r1, [fp, #-12]
   1a224:	lsl	r1, r1, #2
   1a228:	bl	335bc <__assert_fail@plt+0x220b8>
   1a22c:	str	r0, [sp, #8]
   1a230:	ldr	r0, [sp, #8]
   1a234:	movw	r1, #0
   1a238:	cmp	r0, r1
   1a23c:	bne	1a24c <__assert_fail@plt+0x8d48>
   1a240:	movw	r0, #12
   1a244:	str	r0, [fp, #-4]
   1a248:	b	1a2c4 <__assert_fail@plt+0x8dc0>
   1a24c:	ldr	r0, [sp, #8]
   1a250:	ldr	r1, [fp, #-8]
   1a254:	str	r0, [r1, #12]
   1a258:	b	1a25c <__assert_fail@plt+0x8d58>
   1a25c:	ldr	r0, [fp, #-8]
   1a260:	ldrsb	r0, [r0, #75]	; 0x4b
   1a264:	cmp	r0, #0
   1a268:	beq	1a2b0 <__assert_fail@plt+0x8dac>
   1a26c:	ldr	r0, [fp, #-8]
   1a270:	ldr	r0, [r0, #4]
   1a274:	ldr	r1, [fp, #-12]
   1a278:	mov	r2, r1
   1a27c:	str	r2, [sp]
   1a280:	bl	335bc <__assert_fail@plt+0x220b8>
   1a284:	str	r0, [sp, #4]
   1a288:	ldr	r0, [sp, #4]
   1a28c:	movw	r1, #0
   1a290:	cmp	r0, r1
   1a294:	bne	1a2a4 <__assert_fail@plt+0x8da0>
   1a298:	movw	r0, #12
   1a29c:	str	r0, [fp, #-4]
   1a2a0:	b	1a2c4 <__assert_fail@plt+0x8dc0>
   1a2a4:	ldr	r0, [sp, #4]
   1a2a8:	ldr	r1, [fp, #-8]
   1a2ac:	str	r0, [r1, #4]
   1a2b0:	ldr	r0, [fp, #-12]
   1a2b4:	ldr	r1, [fp, #-8]
   1a2b8:	str	r0, [r1, #36]	; 0x24
   1a2bc:	movw	r0, #0
   1a2c0:	str	r0, [fp, #-4]
   1a2c4:	ldr	r0, [fp, #-4]
   1a2c8:	mov	sp, fp
   1a2cc:	pop	{fp, pc}
   1a2d0:	svccc	0x00ffffff
   1a2d4:	push	{fp, lr}
   1a2d8:	mov	fp, sp
   1a2dc:	sub	sp, sp, #184	; 0xb8
   1a2e0:	str	r0, [fp, #-8]
   1a2e4:	ldr	r0, [fp, #-8]
   1a2e8:	ldr	r0, [r0, #28]
   1a2ec:	str	r0, [fp, #-24]	; 0xffffffe8
   1a2f0:	ldr	r0, [fp, #-8]
   1a2f4:	ldr	r0, [r0, #36]	; 0x24
   1a2f8:	ldr	r1, [fp, #-8]
   1a2fc:	ldr	r1, [r1, #48]	; 0x30
   1a300:	cmp	r0, r1
   1a304:	ble	1a318 <__assert_fail@plt+0x8e14>
   1a308:	ldr	r0, [fp, #-8]
   1a30c:	ldr	r0, [r0, #48]	; 0x30
   1a310:	str	r0, [sp, #24]
   1a314:	b	1a324 <__assert_fail@plt+0x8e20>
   1a318:	ldr	r0, [fp, #-8]
   1a31c:	ldr	r0, [r0, #36]	; 0x24
   1a320:	str	r0, [sp, #24]
   1a324:	ldr	r0, [sp, #24]
   1a328:	str	r0, [fp, #-28]	; 0xffffffe4
   1a32c:	ldr	r0, [fp, #-8]
   1a330:	ldrsb	r0, [r0, #74]	; 0x4a
   1a334:	cmp	r0, #0
   1a338:	bne	1a698 <__assert_fail@plt+0x9194>
   1a33c:	ldr	r0, [fp, #-8]
   1a340:	ldr	r0, [r0, #64]	; 0x40
   1a344:	movw	r1, #0
   1a348:	cmp	r0, r1
   1a34c:	bne	1a698 <__assert_fail@plt+0x9194>
   1a350:	ldr	r0, [fp, #-8]
   1a354:	ldrsb	r0, [r0, #76]	; 0x4c
   1a358:	cmp	r0, #0
   1a35c:	bne	1a698 <__assert_fail@plt+0x9194>
   1a360:	b	1a364 <__assert_fail@plt+0x8e60>
   1a364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a368:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a36c:	cmp	r0, r1
   1a370:	bge	1a674 <__assert_fail@plt+0x9170>
   1a374:	ldr	r0, [fp, #-8]
   1a378:	ldr	r0, [r0]
   1a37c:	ldr	r1, [fp, #-8]
   1a380:	ldr	r1, [r1, #24]
   1a384:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a388:	add	r1, r1, r2
   1a38c:	add	r0, r0, r1
   1a390:	ldrb	r0, [r0]
   1a394:	strb	r0, [sp, #79]	; 0x4f
   1a398:	ldrb	r0, [sp, #79]	; 0x4f
   1a39c:	mvn	r1, #127	; 0x7f
   1a3a0:	and	r0, r0, r1
   1a3a4:	cmp	r0, #0
   1a3a8:	bne	1a420 <__assert_fail@plt+0x8f1c>
   1a3ac:	ldr	r0, [fp, #-8]
   1a3b0:	add	r0, r0, #16
   1a3b4:	bl	112d0 <mbsinit@plt>
   1a3b8:	cmp	r0, #0
   1a3bc:	beq	1a420 <__assert_fail@plt+0x8f1c>
   1a3c0:	ldrb	r0, [sp, #79]	; 0x4f
   1a3c4:	bl	114bc <towupper@plt>
   1a3c8:	str	r0, [sp, #72]	; 0x48
   1a3cc:	ldr	r0, [sp, #72]	; 0x48
   1a3d0:	mvn	r1, #127	; 0x7f
   1a3d4:	and	r0, r0, r1
   1a3d8:	cmp	r0, #0
   1a3dc:	bne	1a41c <__assert_fail@plt+0x8f18>
   1a3e0:	ldr	r0, [sp, #72]	; 0x48
   1a3e4:	ldr	r1, [fp, #-8]
   1a3e8:	ldr	r1, [r1, #4]
   1a3ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a3f0:	strb	r0, [r1, r2]
   1a3f4:	ldr	r0, [sp, #72]	; 0x48
   1a3f8:	ldr	r1, [fp, #-8]
   1a3fc:	ldr	r1, [r1, #8]
   1a400:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a404:	add	r1, r1, r2, lsl #2
   1a408:	str	r0, [r1]
   1a40c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a410:	add	r0, r0, #1
   1a414:	str	r0, [fp, #-24]	; 0xffffffe8
   1a418:	b	1a364 <__assert_fail@plt+0x8e60>
   1a41c:	b	1a420 <__assert_fail@plt+0x8f1c>
   1a420:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a428:	sub	r0, r0, r1
   1a42c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a430:	ldr	r0, [fp, #-8]
   1a434:	ldr	r1, [r0, #16]
   1a438:	str	r1, [fp, #-16]
   1a43c:	ldr	r0, [r0, #20]
   1a440:	str	r0, [fp, #-12]
   1a444:	ldr	r0, [fp, #-8]
   1a448:	ldr	r0, [r0]
   1a44c:	ldr	r1, [fp, #-8]
   1a450:	ldr	r1, [r1, #24]
   1a454:	add	r0, r0, r1
   1a458:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a45c:	add	r1, r0, r1
   1a460:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a464:	ldr	r0, [fp, #-8]
   1a468:	add	r3, r0, #16
   1a46c:	add	r0, sp, #80	; 0x50
   1a470:	bl	34e90 <__assert_fail@plt+0x2398c>
   1a474:	str	r0, [fp, #-36]	; 0xffffffdc
   1a478:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a47c:	movw	r1, #0
   1a480:	cmp	r1, r0
   1a484:	movw	r0, #0
   1a488:	str	r0, [sp, #20]
   1a48c:	bcs	1a4a4 <__assert_fail@plt+0x8fa0>
   1a490:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a494:	cmn	r0, #2
   1a498:	movw	r0, #0
   1a49c:	movcc	r0, #1
   1a4a0:	str	r0, [sp, #20]
   1a4a4:	ldr	r0, [sp, #20]
   1a4a8:	tst	r0, #1
   1a4ac:	beq	1a5c0 <__assert_fail@plt+0x90bc>
   1a4b0:	ldr	r0, [sp, #80]	; 0x50
   1a4b4:	bl	114bc <towupper@plt>
   1a4b8:	str	r0, [sp, #68]	; 0x44
   1a4bc:	ldr	r0, [sp, #68]	; 0x44
   1a4c0:	ldr	r1, [sp, #80]	; 0x50
   1a4c4:	cmp	r0, r1
   1a4c8:	beq	1a520 <__assert_fail@plt+0x901c>
   1a4cc:	add	r0, sp, #84	; 0x54
   1a4d0:	ldr	r1, [sp, #68]	; 0x44
   1a4d4:	sub	r2, fp, #16
   1a4d8:	bl	1121c <wcrtomb@plt>
   1a4dc:	str	r0, [sp, #64]	; 0x40
   1a4e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a4e4:	ldr	r1, [sp, #64]	; 0x40
   1a4e8:	cmp	r0, r1
   1a4ec:	bne	1a510 <__assert_fail@plt+0x900c>
   1a4f0:	add	r1, sp, #84	; 0x54
   1a4f4:	ldr	r0, [fp, #-8]
   1a4f8:	ldr	r0, [r0, #4]
   1a4fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a500:	add	r0, r0, r2
   1a504:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a508:	bl	112a0 <memcpy@plt>
   1a50c:	b	1a51c <__assert_fail@plt+0x9018>
   1a510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a514:	str	r0, [fp, #-20]	; 0xffffffec
   1a518:	b	1a6b8 <__assert_fail@plt+0x91b4>
   1a51c:	b	1a554 <__assert_fail@plt+0x9050>
   1a520:	ldr	r0, [fp, #-8]
   1a524:	ldr	r0, [r0, #4]
   1a528:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a52c:	add	r0, r0, r1
   1a530:	ldr	r1, [fp, #-8]
   1a534:	ldr	r1, [r1]
   1a538:	ldr	r2, [fp, #-8]
   1a53c:	ldr	r2, [r2, #24]
   1a540:	add	r1, r1, r2
   1a544:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a548:	add	r1, r1, r2
   1a54c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a550:	bl	112a0 <memcpy@plt>
   1a554:	ldr	r0, [sp, #68]	; 0x44
   1a558:	ldr	r1, [fp, #-8]
   1a55c:	ldr	r1, [r1, #8]
   1a560:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a564:	add	r3, r2, #1
   1a568:	str	r3, [fp, #-24]	; 0xffffffe8
   1a56c:	add	r1, r1, r2, lsl #2
   1a570:	str	r0, [r1]
   1a574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a578:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a57c:	add	r0, r0, r1
   1a580:	sub	r0, r0, #1
   1a584:	str	r0, [fp, #-32]	; 0xffffffe0
   1a588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a58c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a590:	cmp	r0, r1
   1a594:	bge	1a5bc <__assert_fail@plt+0x90b8>
   1a598:	ldr	r0, [fp, #-8]
   1a59c:	ldr	r0, [r0, #8]
   1a5a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a5a4:	add	r2, r1, #1
   1a5a8:	str	r2, [fp, #-24]	; 0xffffffe8
   1a5ac:	add	r0, r0, r1, lsl #2
   1a5b0:	mvn	r1, #0
   1a5b4:	str	r1, [r0]
   1a5b8:	b	1a588 <__assert_fail@plt+0x9084>
   1a5bc:	b	1a670 <__assert_fail@plt+0x916c>
   1a5c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a5c4:	cmn	r0, #1
   1a5c8:	beq	1a5fc <__assert_fail@plt+0x90f8>
   1a5cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a5d0:	cmp	r0, #0
   1a5d4:	beq	1a5fc <__assert_fail@plt+0x90f8>
   1a5d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a5dc:	cmn	r0, #2
   1a5e0:	bne	1a654 <__assert_fail@plt+0x9150>
   1a5e4:	ldr	r0, [fp, #-8]
   1a5e8:	ldr	r0, [r0, #36]	; 0x24
   1a5ec:	ldr	r1, [fp, #-8]
   1a5f0:	ldr	r1, [r1, #48]	; 0x30
   1a5f4:	cmp	r0, r1
   1a5f8:	blt	1a654 <__assert_fail@plt+0x9150>
   1a5fc:	ldrb	r0, [sp, #79]	; 0x4f
   1a600:	ldr	r1, [fp, #-8]
   1a604:	ldr	r1, [r1, #4]
   1a608:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a60c:	strb	r0, [r1, r2]
   1a610:	ldrb	r0, [sp, #79]	; 0x4f
   1a614:	ldr	r1, [fp, #-8]
   1a618:	ldr	r1, [r1, #8]
   1a61c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a620:	add	r3, r2, #1
   1a624:	str	r3, [fp, #-24]	; 0xffffffe8
   1a628:	add	r1, r1, r2, lsl #2
   1a62c:	str	r0, [r1]
   1a630:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a634:	cmn	r0, #1
   1a638:	bne	1a650 <__assert_fail@plt+0x914c>
   1a63c:	ldr	r0, [fp, #-8]
   1a640:	ldr	r1, [fp, #-16]
   1a644:	str	r1, [r0, #16]
   1a648:	ldr	r1, [fp, #-12]
   1a64c:	str	r1, [r0, #20]
   1a650:	b	1a66c <__assert_fail@plt+0x9168>
   1a654:	ldr	r0, [fp, #-8]
   1a658:	ldr	r1, [fp, #-16]
   1a65c:	str	r1, [r0, #16]
   1a660:	ldr	r1, [fp, #-12]
   1a664:	str	r1, [r0, #20]
   1a668:	b	1a674 <__assert_fail@plt+0x9170>
   1a66c:	b	1a670 <__assert_fail@plt+0x916c>
   1a670:	b	1a364 <__assert_fail@plt+0x8e60>
   1a674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a678:	ldr	r1, [fp, #-8]
   1a67c:	str	r0, [r1, #28]
   1a680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a684:	ldr	r1, [fp, #-8]
   1a688:	str	r0, [r1, #32]
   1a68c:	movw	r0, #0
   1a690:	str	r0, [fp, #-4]
   1a694:	b	1ad70 <__assert_fail@plt+0x986c>
   1a698:	ldr	r0, [fp, #-8]
   1a69c:	ldr	r0, [r0, #32]
   1a6a0:	str	r0, [fp, #-20]	; 0xffffffec
   1a6a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a6ac:	cmp	r0, r1
   1a6b0:	bge	1ad4c <__assert_fail@plt+0x9848>
   1a6b4:	b	1a6b8 <__assert_fail@plt+0x91b4>
   1a6b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a6bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a6c0:	sub	r0, r0, r1
   1a6c4:	str	r0, [fp, #-32]	; 0xffffffe0
   1a6c8:	ldr	r0, [fp, #-8]
   1a6cc:	ldr	r1, [r0, #16]
   1a6d0:	str	r1, [fp, #-16]
   1a6d4:	ldr	r0, [r0, #20]
   1a6d8:	str	r0, [fp, #-12]
   1a6dc:	ldr	r0, [fp, #-8]
   1a6e0:	ldr	r0, [r0, #64]	; 0x40
   1a6e4:	movw	r1, #0
   1a6e8:	cmp	r0, r1
   1a6ec:	beq	1a7a4 <__assert_fail@plt+0x92a0>
   1a6f0:	movw	r0, #0
   1a6f4:	str	r0, [sp, #52]	; 0x34
   1a6f8:	ldr	r0, [sp, #52]	; 0x34
   1a6fc:	ldr	r1, [fp, #-8]
   1a700:	ldr	r1, [r1, #80]	; 0x50
   1a704:	cmp	r0, r1
   1a708:	movw	r0, #0
   1a70c:	str	r0, [sp, #16]
   1a710:	bge	1a72c <__assert_fail@plt+0x9228>
   1a714:	ldr	r0, [sp, #52]	; 0x34
   1a718:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a71c:	cmp	r0, r1
   1a720:	movw	r0, #0
   1a724:	movlt	r0, #1
   1a728:	str	r0, [sp, #16]
   1a72c:	ldr	r0, [sp, #16]
   1a730:	tst	r0, #1
   1a734:	beq	1a798 <__assert_fail@plt+0x9294>
   1a738:	ldr	r0, [fp, #-8]
   1a73c:	ldr	r0, [r0]
   1a740:	ldr	r1, [fp, #-8]
   1a744:	ldr	r1, [r1, #24]
   1a748:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a74c:	add	r1, r1, r2
   1a750:	ldr	r2, [sp, #52]	; 0x34
   1a754:	add	r1, r1, r2
   1a758:	add	r0, r0, r1
   1a75c:	ldrb	r0, [r0]
   1a760:	str	r0, [sp, #48]	; 0x30
   1a764:	ldr	r0, [fp, #-8]
   1a768:	ldr	r0, [r0, #64]	; 0x40
   1a76c:	ldr	r1, [sp, #48]	; 0x30
   1a770:	add	r0, r0, r1
   1a774:	ldrb	r0, [r0]
   1a778:	ldr	r1, [sp, #52]	; 0x34
   1a77c:	add	r2, sp, #84	; 0x54
   1a780:	add	r1, r2, r1
   1a784:	strb	r0, [r1]
   1a788:	ldr	r0, [sp, #52]	; 0x34
   1a78c:	add	r0, r0, #1
   1a790:	str	r0, [sp, #52]	; 0x34
   1a794:	b	1a6f8 <__assert_fail@plt+0x91f4>
   1a798:	add	r0, sp, #84	; 0x54
   1a79c:	str	r0, [sp, #56]	; 0x38
   1a7a0:	b	1a7c4 <__assert_fail@plt+0x92c0>
   1a7a4:	ldr	r0, [fp, #-8]
   1a7a8:	ldr	r0, [r0]
   1a7ac:	ldr	r1, [fp, #-8]
   1a7b0:	ldr	r1, [r1, #24]
   1a7b4:	add	r0, r0, r1
   1a7b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a7bc:	add	r0, r0, r1
   1a7c0:	str	r0, [sp, #56]	; 0x38
   1a7c4:	ldr	r1, [sp, #56]	; 0x38
   1a7c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a7cc:	ldr	r0, [fp, #-8]
   1a7d0:	add	r3, r0, #16
   1a7d4:	add	r0, sp, #60	; 0x3c
   1a7d8:	bl	34e90 <__assert_fail@plt+0x2398c>
   1a7dc:	str	r0, [fp, #-36]	; 0xffffffdc
   1a7e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a7e4:	movw	r1, #0
   1a7e8:	cmp	r1, r0
   1a7ec:	movw	r0, #0
   1a7f0:	str	r0, [sp, #12]
   1a7f4:	bcs	1a80c <__assert_fail@plt+0x9308>
   1a7f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a7fc:	cmn	r0, #2
   1a800:	movw	r0, #0
   1a804:	movcc	r0, #1
   1a808:	str	r0, [sp, #12]
   1a80c:	ldr	r0, [sp, #12]
   1a810:	tst	r0, #1
   1a814:	beq	1ac10 <__assert_fail@plt+0x970c>
   1a818:	ldr	r0, [sp, #60]	; 0x3c
   1a81c:	bl	114bc <towupper@plt>
   1a820:	str	r0, [sp, #44]	; 0x2c
   1a824:	ldr	r0, [sp, #44]	; 0x2c
   1a828:	ldr	r1, [sp, #60]	; 0x3c
   1a82c:	cmp	r0, r1
   1a830:	beq	1ab18 <__assert_fail@plt+0x9614>
   1a834:	add	r0, sp, #84	; 0x54
   1a838:	ldr	r1, [sp, #44]	; 0x2c
   1a83c:	sub	r2, fp, #16
   1a840:	bl	1121c <wcrtomb@plt>
   1a844:	str	r0, [sp, #40]	; 0x28
   1a848:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a84c:	ldr	r1, [sp, #40]	; 0x28
   1a850:	cmp	r0, r1
   1a854:	bne	1a878 <__assert_fail@plt+0x9374>
   1a858:	add	r1, sp, #84	; 0x54
   1a85c:	ldr	r0, [fp, #-8]
   1a860:	ldr	r0, [r0, #4]
   1a864:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a868:	add	r0, r0, r2
   1a86c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a870:	bl	112a0 <memcpy@plt>
   1a874:	b	1ab14 <__assert_fail@plt+0x9610>
   1a878:	ldr	r0, [sp, #40]	; 0x28
   1a87c:	cmn	r0, #1
   1a880:	beq	1aaf4 <__assert_fail@plt+0x95f0>
   1a884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a888:	ldr	r1, [sp, #40]	; 0x28
   1a88c:	add	r0, r0, r1
   1a890:	ldr	r1, [fp, #-8]
   1a894:	ldr	r1, [r1, #36]	; 0x24
   1a898:	cmp	r0, r1
   1a89c:	bls	1a8b8 <__assert_fail@plt+0x93b4>
   1a8a0:	ldr	r0, [fp, #-8]
   1a8a4:	ldr	r1, [fp, #-16]
   1a8a8:	str	r1, [r0, #16]
   1a8ac:	ldr	r1, [fp, #-12]
   1a8b0:	str	r1, [r0, #20]
   1a8b4:	b	1ad4c <__assert_fail@plt+0x9848>
   1a8b8:	ldr	r0, [fp, #-8]
   1a8bc:	ldr	r0, [r0, #12]
   1a8c0:	movw	r1, #0
   1a8c4:	cmp	r0, r1
   1a8c8:	bne	1a908 <__assert_fail@plt+0x9404>
   1a8cc:	ldr	r0, [fp, #-8]
   1a8d0:	ldr	r0, [r0, #36]	; 0x24
   1a8d4:	lsl	r0, r0, #2
   1a8d8:	bl	3354c <__assert_fail@plt+0x22048>
   1a8dc:	ldr	r1, [fp, #-8]
   1a8e0:	str	r0, [r1, #12]
   1a8e4:	ldr	r0, [fp, #-8]
   1a8e8:	ldr	r0, [r0, #12]
   1a8ec:	movw	r1, #0
   1a8f0:	cmp	r0, r1
   1a8f4:	bne	1a904 <__assert_fail@plt+0x9400>
   1a8f8:	movw	r0, #12
   1a8fc:	str	r0, [fp, #-4]
   1a900:	b	1ad70 <__assert_fail@plt+0x986c>
   1a904:	b	1a908 <__assert_fail@plt+0x9404>
   1a908:	ldr	r0, [fp, #-8]
   1a90c:	ldrsb	r0, [r0, #76]	; 0x4c
   1a910:	cmp	r0, #0
   1a914:	bne	1a964 <__assert_fail@plt+0x9460>
   1a918:	movw	r0, #0
   1a91c:	str	r0, [sp, #36]	; 0x24
   1a920:	ldr	r0, [sp, #36]	; 0x24
   1a924:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a928:	cmp	r0, r1
   1a92c:	bcs	1a958 <__assert_fail@plt+0x9454>
   1a930:	ldr	r0, [sp, #36]	; 0x24
   1a934:	mov	r1, r0
   1a938:	ldr	r2, [fp, #-8]
   1a93c:	ldr	r2, [r2, #12]
   1a940:	add	r0, r2, r0, lsl #2
   1a944:	str	r1, [r0]
   1a948:	ldr	r0, [sp, #36]	; 0x24
   1a94c:	add	r0, r0, #1
   1a950:	str	r0, [sp, #36]	; 0x24
   1a954:	b	1a920 <__assert_fail@plt+0x941c>
   1a958:	ldr	r0, [fp, #-8]
   1a95c:	movw	r1, #1
   1a960:	strb	r1, [r0, #76]	; 0x4c
   1a964:	ldr	r0, [fp, #-8]
   1a968:	ldr	r0, [r0, #4]
   1a96c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a970:	add	r0, r0, r1
   1a974:	ldr	r2, [sp, #40]	; 0x28
   1a978:	add	r1, sp, #84	; 0x54
   1a97c:	bl	112a0 <memcpy@plt>
   1a980:	ldr	r1, [sp, #44]	; 0x2c
   1a984:	ldr	r2, [fp, #-8]
   1a988:	ldr	r2, [r2, #8]
   1a98c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a990:	str	r1, [r2, r3, lsl #2]
   1a994:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a998:	ldr	r2, [fp, #-8]
   1a99c:	ldr	r2, [r2, #12]
   1a9a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a9a4:	add	r2, r2, r3, lsl #2
   1a9a8:	str	r1, [r2]
   1a9ac:	movw	r1, #1
   1a9b0:	str	r1, [sp, #36]	; 0x24
   1a9b4:	ldr	r0, [sp, #36]	; 0x24
   1a9b8:	ldr	r1, [sp, #40]	; 0x28
   1a9bc:	cmp	r0, r1
   1a9c0:	bcs	1aa48 <__assert_fail@plt+0x9544>
   1a9c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a9c8:	ldr	r1, [sp, #36]	; 0x24
   1a9cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a9d0:	cmp	r1, r2
   1a9d4:	str	r0, [sp, #8]
   1a9d8:	bcs	1a9e8 <__assert_fail@plt+0x94e4>
   1a9dc:	ldr	r0, [sp, #36]	; 0x24
   1a9e0:	str	r0, [sp, #4]
   1a9e4:	b	1a9f4 <__assert_fail@plt+0x94f0>
   1a9e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a9ec:	sub	r0, r0, #1
   1a9f0:	str	r0, [sp, #4]
   1a9f4:	ldr	r0, [sp, #4]
   1a9f8:	ldr	r1, [sp, #8]
   1a9fc:	add	r0, r1, r0
   1aa00:	ldr	r2, [fp, #-8]
   1aa04:	ldr	r2, [r2, #12]
   1aa08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa0c:	ldr	ip, [sp, #36]	; 0x24
   1aa10:	add	r3, r3, ip
   1aa14:	str	r0, [r2, r3, lsl #2]
   1aa18:	ldr	r0, [fp, #-8]
   1aa1c:	ldr	r0, [r0, #8]
   1aa20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aa24:	ldr	r3, [sp, #36]	; 0x24
   1aa28:	add	r2, r2, r3
   1aa2c:	add	r0, r0, r2, lsl #2
   1aa30:	mvn	r2, #0
   1aa34:	str	r2, [r0]
   1aa38:	ldr	r0, [sp, #36]	; 0x24
   1aa3c:	add	r0, r0, #1
   1aa40:	str	r0, [sp, #36]	; 0x24
   1aa44:	b	1a9b4 <__assert_fail@plt+0x94b0>
   1aa48:	ldr	r0, [sp, #40]	; 0x28
   1aa4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1aa50:	sub	r0, r0, r1
   1aa54:	ldr	r1, [fp, #-8]
   1aa58:	ldr	r2, [r1, #48]	; 0x30
   1aa5c:	add	r0, r2, r0
   1aa60:	str	r0, [r1, #48]	; 0x30
   1aa64:	ldr	r0, [fp, #-8]
   1aa68:	ldr	r0, [r0, #52]	; 0x34
   1aa6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aa70:	cmp	r0, r1
   1aa74:	ble	1aa94 <__assert_fail@plt+0x9590>
   1aa78:	ldr	r0, [sp, #40]	; 0x28
   1aa7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1aa80:	sub	r0, r0, r1
   1aa84:	ldr	r1, [fp, #-8]
   1aa88:	ldr	r2, [r1, #56]	; 0x38
   1aa8c:	add	r0, r2, r0
   1aa90:	str	r0, [r1, #56]	; 0x38
   1aa94:	ldr	r0, [fp, #-8]
   1aa98:	ldr	r0, [r0, #36]	; 0x24
   1aa9c:	ldr	r1, [fp, #-8]
   1aaa0:	ldr	r1, [r1, #48]	; 0x30
   1aaa4:	cmp	r0, r1
   1aaa8:	ble	1aabc <__assert_fail@plt+0x95b8>
   1aaac:	ldr	r0, [fp, #-8]
   1aab0:	ldr	r0, [r0, #48]	; 0x30
   1aab4:	str	r0, [sp]
   1aab8:	b	1aac8 <__assert_fail@plt+0x95c4>
   1aabc:	ldr	r0, [fp, #-8]
   1aac0:	ldr	r0, [r0, #36]	; 0x24
   1aac4:	str	r0, [sp]
   1aac8:	ldr	r0, [sp]
   1aacc:	str	r0, [fp, #-28]	; 0xffffffe4
   1aad0:	ldr	r0, [sp, #40]	; 0x28
   1aad4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aad8:	add	r0, r1, r0
   1aadc:	str	r0, [fp, #-24]	; 0xffffffe8
   1aae0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aae4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aae8:	add	r0, r1, r0
   1aaec:	str	r0, [fp, #-20]	; 0xffffffec
   1aaf0:	b	1a6a4 <__assert_fail@plt+0x91a0>
   1aaf4:	ldr	r0, [fp, #-8]
   1aaf8:	ldr	r0, [r0, #4]
   1aafc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab00:	add	r0, r0, r1
   1ab04:	ldr	r1, [sp, #56]	; 0x38
   1ab08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ab0c:	bl	112a0 <memcpy@plt>
   1ab10:	b	1ab14 <__assert_fail@plt+0x9610>
   1ab14:	b	1ab34 <__assert_fail@plt+0x9630>
   1ab18:	ldr	r0, [fp, #-8]
   1ab1c:	ldr	r0, [r0, #4]
   1ab20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab24:	add	r0, r0, r1
   1ab28:	ldr	r1, [sp, #56]	; 0x38
   1ab2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ab30:	bl	112a0 <memcpy@plt>
   1ab34:	ldr	r0, [fp, #-8]
   1ab38:	ldrb	r0, [r0, #76]	; 0x4c
   1ab3c:	cmp	r0, #0
   1ab40:	beq	1ab94 <__assert_fail@plt+0x9690>
   1ab44:	movw	r0, #0
   1ab48:	str	r0, [sp, #32]
   1ab4c:	ldr	r0, [sp, #32]
   1ab50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ab54:	cmp	r0, r1
   1ab58:	bcs	1ab90 <__assert_fail@plt+0x968c>
   1ab5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ab60:	ldr	r1, [sp, #32]
   1ab64:	add	r0, r0, r1
   1ab68:	ldr	r2, [fp, #-8]
   1ab6c:	ldr	r2, [r2, #12]
   1ab70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab74:	add	r1, r3, r1
   1ab78:	add	r1, r2, r1, lsl #2
   1ab7c:	str	r0, [r1]
   1ab80:	ldr	r0, [sp, #32]
   1ab84:	add	r0, r0, #1
   1ab88:	str	r0, [sp, #32]
   1ab8c:	b	1ab4c <__assert_fail@plt+0x9648>
   1ab90:	b	1ab94 <__assert_fail@plt+0x9690>
   1ab94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ab98:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ab9c:	add	r0, r1, r0
   1aba0:	str	r0, [fp, #-20]	; 0xffffffec
   1aba4:	ldr	r0, [sp, #44]	; 0x2c
   1aba8:	ldr	r1, [fp, #-8]
   1abac:	ldr	r1, [r1, #8]
   1abb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1abb4:	add	r3, r2, #1
   1abb8:	str	r3, [fp, #-24]	; 0xffffffe8
   1abbc:	add	r1, r1, r2, lsl #2
   1abc0:	str	r0, [r1]
   1abc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1abcc:	add	r0, r0, r1
   1abd0:	sub	r0, r0, #1
   1abd4:	str	r0, [fp, #-32]	; 0xffffffe0
   1abd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1abe0:	cmp	r0, r1
   1abe4:	bge	1ac0c <__assert_fail@plt+0x9708>
   1abe8:	ldr	r0, [fp, #-8]
   1abec:	ldr	r0, [r0, #8]
   1abf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abf4:	add	r2, r1, #1
   1abf8:	str	r2, [fp, #-24]	; 0xffffffe8
   1abfc:	add	r0, r0, r1, lsl #2
   1ac00:	mvn	r1, #0
   1ac04:	str	r1, [r0]
   1ac08:	b	1abd8 <__assert_fail@plt+0x96d4>
   1ac0c:	b	1ad48 <__assert_fail@plt+0x9844>
   1ac10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ac14:	cmn	r0, #1
   1ac18:	beq	1ac4c <__assert_fail@plt+0x9748>
   1ac1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ac20:	cmp	r0, #0
   1ac24:	beq	1ac4c <__assert_fail@plt+0x9748>
   1ac28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ac2c:	cmn	r0, #2
   1ac30:	bne	1ad2c <__assert_fail@plt+0x9828>
   1ac34:	ldr	r0, [fp, #-8]
   1ac38:	ldr	r0, [r0, #36]	; 0x24
   1ac3c:	ldr	r1, [fp, #-8]
   1ac40:	ldr	r1, [r1, #48]	; 0x30
   1ac44:	cmp	r0, r1
   1ac48:	blt	1ad2c <__assert_fail@plt+0x9828>
   1ac4c:	ldr	r0, [fp, #-8]
   1ac50:	ldr	r0, [r0]
   1ac54:	ldr	r1, [fp, #-8]
   1ac58:	ldr	r1, [r1, #24]
   1ac5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ac60:	add	r1, r1, r2
   1ac64:	add	r0, r0, r1
   1ac68:	ldrb	r0, [r0]
   1ac6c:	str	r0, [sp, #28]
   1ac70:	ldr	r0, [fp, #-8]
   1ac74:	ldr	r0, [r0, #64]	; 0x40
   1ac78:	movw	r1, #0
   1ac7c:	cmp	r0, r1
   1ac80:	beq	1ac9c <__assert_fail@plt+0x9798>
   1ac84:	ldr	r0, [fp, #-8]
   1ac88:	ldr	r0, [r0, #64]	; 0x40
   1ac8c:	ldr	r1, [sp, #28]
   1ac90:	add	r0, r0, r1
   1ac94:	ldrb	r0, [r0]
   1ac98:	str	r0, [sp, #28]
   1ac9c:	ldr	r0, [sp, #28]
   1aca0:	ldr	r1, [fp, #-8]
   1aca4:	ldr	r1, [r1, #4]
   1aca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1acac:	add	r1, r1, r2
   1acb0:	strb	r0, [r1]
   1acb4:	ldr	r0, [fp, #-8]
   1acb8:	ldrb	r0, [r0, #76]	; 0x4c
   1acbc:	cmp	r0, #0
   1acc0:	beq	1acdc <__assert_fail@plt+0x97d8>
   1acc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1acc8:	ldr	r1, [fp, #-8]
   1accc:	ldr	r1, [r1, #12]
   1acd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1acd4:	add	r1, r1, r2, lsl #2
   1acd8:	str	r0, [r1]
   1acdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ace0:	add	r0, r0, #1
   1ace4:	str	r0, [fp, #-20]	; 0xffffffec
   1ace8:	ldr	r0, [sp, #28]
   1acec:	ldr	r1, [fp, #-8]
   1acf0:	ldr	r1, [r1, #8]
   1acf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1acf8:	add	r3, r2, #1
   1acfc:	str	r3, [fp, #-24]	; 0xffffffe8
   1ad00:	add	r1, r1, r2, lsl #2
   1ad04:	str	r0, [r1]
   1ad08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ad0c:	cmn	r0, #1
   1ad10:	bne	1ad28 <__assert_fail@plt+0x9824>
   1ad14:	ldr	r0, [fp, #-8]
   1ad18:	ldr	r1, [fp, #-16]
   1ad1c:	str	r1, [r0, #16]
   1ad20:	ldr	r1, [fp, #-12]
   1ad24:	str	r1, [r0, #20]
   1ad28:	b	1ad44 <__assert_fail@plt+0x9840>
   1ad2c:	ldr	r0, [fp, #-8]
   1ad30:	ldr	r1, [fp, #-16]
   1ad34:	str	r1, [r0, #16]
   1ad38:	ldr	r1, [fp, #-12]
   1ad3c:	str	r1, [r0, #20]
   1ad40:	b	1ad4c <__assert_fail@plt+0x9848>
   1ad44:	b	1ad48 <__assert_fail@plt+0x9844>
   1ad48:	b	1a6a4 <__assert_fail@plt+0x91a0>
   1ad4c:	b	1ad50 <__assert_fail@plt+0x984c>
   1ad50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad54:	ldr	r1, [fp, #-8]
   1ad58:	str	r0, [r1, #28]
   1ad5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad60:	ldr	r1, [fp, #-8]
   1ad64:	str	r0, [r1, #32]
   1ad68:	movw	r0, #0
   1ad6c:	str	r0, [fp, #-4]
   1ad70:	ldr	r0, [fp, #-4]
   1ad74:	mov	sp, fp
   1ad78:	pop	{fp, pc}
   1ad7c:	push	{fp, lr}
   1ad80:	mov	fp, sp
   1ad84:	sub	sp, sp, #24
   1ad88:	str	r0, [fp, #-4]
   1ad8c:	ldr	r0, [fp, #-4]
   1ad90:	ldr	r0, [r0, #36]	; 0x24
   1ad94:	ldr	r1, [fp, #-4]
   1ad98:	ldr	r1, [r1, #48]	; 0x30
   1ad9c:	cmp	r0, r1
   1ada0:	ble	1adb4 <__assert_fail@plt+0x98b0>
   1ada4:	ldr	r0, [fp, #-4]
   1ada8:	ldr	r0, [r0, #48]	; 0x30
   1adac:	str	r0, [sp, #4]
   1adb0:	b	1adc0 <__assert_fail@plt+0x98bc>
   1adb4:	ldr	r0, [fp, #-4]
   1adb8:	ldr	r0, [r0, #36]	; 0x24
   1adbc:	str	r0, [sp, #4]
   1adc0:	ldr	r0, [sp, #4]
   1adc4:	str	r0, [sp, #12]
   1adc8:	ldr	r0, [fp, #-4]
   1adcc:	ldr	r0, [r0, #28]
   1add0:	str	r0, [fp, #-8]
   1add4:	ldr	r0, [fp, #-8]
   1add8:	ldr	r1, [sp, #12]
   1addc:	cmp	r0, r1
   1ade0:	bge	1ae60 <__assert_fail@plt+0x995c>
   1ade4:	ldr	r0, [fp, #-4]
   1ade8:	ldr	r0, [r0]
   1adec:	ldr	r1, [fp, #-4]
   1adf0:	ldr	r1, [r1, #24]
   1adf4:	ldr	r2, [fp, #-8]
   1adf8:	add	r1, r1, r2
   1adfc:	add	r0, r0, r1
   1ae00:	ldrb	r0, [r0]
   1ae04:	str	r0, [sp, #8]
   1ae08:	ldr	r0, [fp, #-4]
   1ae0c:	ldr	r0, [r0, #64]	; 0x40
   1ae10:	movw	r1, #0
   1ae14:	cmp	r0, r1
   1ae18:	beq	1ae34 <__assert_fail@plt+0x9930>
   1ae1c:	ldr	r0, [fp, #-4]
   1ae20:	ldr	r0, [r0, #64]	; 0x40
   1ae24:	ldr	r1, [sp, #8]
   1ae28:	add	r0, r0, r1
   1ae2c:	ldrb	r0, [r0]
   1ae30:	str	r0, [sp, #8]
   1ae34:	ldr	r0, [sp, #8]
   1ae38:	bl	11474 <toupper@plt>
   1ae3c:	ldr	r1, [fp, #-4]
   1ae40:	ldr	r1, [r1, #4]
   1ae44:	ldr	r2, [fp, #-8]
   1ae48:	add	r1, r1, r2
   1ae4c:	strb	r0, [r1]
   1ae50:	ldr	r0, [fp, #-8]
   1ae54:	add	r0, r0, #1
   1ae58:	str	r0, [fp, #-8]
   1ae5c:	b	1add4 <__assert_fail@plt+0x98d0>
   1ae60:	ldr	r0, [fp, #-8]
   1ae64:	ldr	r1, [fp, #-4]
   1ae68:	str	r0, [r1, #28]
   1ae6c:	ldr	r0, [fp, #-8]
   1ae70:	ldr	r1, [fp, #-4]
   1ae74:	str	r0, [r1, #32]
   1ae78:	mov	sp, fp
   1ae7c:	pop	{fp, pc}
   1ae80:	push	{fp, lr}
   1ae84:	mov	fp, sp
   1ae88:	sub	sp, sp, #128	; 0x80
   1ae8c:	str	r0, [fp, #-4]
   1ae90:	ldr	r0, [fp, #-4]
   1ae94:	ldr	r0, [r0, #36]	; 0x24
   1ae98:	ldr	r1, [fp, #-4]
   1ae9c:	ldr	r1, [r1, #48]	; 0x30
   1aea0:	cmp	r0, r1
   1aea4:	ble	1aeb8 <__assert_fail@plt+0x99b4>
   1aea8:	ldr	r0, [fp, #-4]
   1aeac:	ldr	r0, [r0, #48]	; 0x30
   1aeb0:	str	r0, [sp, #16]
   1aeb4:	b	1aec4 <__assert_fail@plt+0x99c0>
   1aeb8:	ldr	r0, [fp, #-4]
   1aebc:	ldr	r0, [r0, #36]	; 0x24
   1aec0:	str	r0, [sp, #16]
   1aec4:	ldr	r0, [sp, #16]
   1aec8:	str	r0, [sp, #44]	; 0x2c
   1aecc:	ldr	r0, [fp, #-4]
   1aed0:	ldr	r0, [r0, #28]
   1aed4:	str	r0, [sp, #48]	; 0x30
   1aed8:	ldr	r0, [sp, #48]	; 0x30
   1aedc:	ldr	r1, [sp, #44]	; 0x2c
   1aee0:	cmp	r0, r1
   1aee4:	bge	1b1a0 <__assert_fail@plt+0x9c9c>
   1aee8:	ldr	r0, [sp, #44]	; 0x2c
   1aeec:	ldr	r1, [sp, #48]	; 0x30
   1aef0:	sub	r0, r0, r1
   1aef4:	str	r0, [sp, #40]	; 0x28
   1aef8:	ldr	r0, [fp, #-4]
   1aefc:	ldr	r1, [r0, #16]
   1af00:	str	r1, [sp, #52]	; 0x34
   1af04:	ldr	r0, [r0, #20]
   1af08:	str	r0, [sp, #56]	; 0x38
   1af0c:	ldr	r0, [fp, #-4]
   1af10:	ldr	r0, [r0, #64]	; 0x40
   1af14:	movw	r1, #0
   1af18:	cmp	r0, r1
   1af1c:	beq	1aff0 <__assert_fail@plt+0x9aec>
   1af20:	movw	r0, #0
   1af24:	str	r0, [sp, #24]
   1af28:	ldr	r0, [sp, #24]
   1af2c:	ldr	r1, [fp, #-4]
   1af30:	ldr	r1, [r1, #80]	; 0x50
   1af34:	cmp	r0, r1
   1af38:	movw	r0, #0
   1af3c:	str	r0, [sp, #12]
   1af40:	bge	1af5c <__assert_fail@plt+0x9a58>
   1af44:	ldr	r0, [sp, #24]
   1af48:	ldr	r1, [sp, #40]	; 0x28
   1af4c:	cmp	r0, r1
   1af50:	movw	r0, #0
   1af54:	movlt	r0, #1
   1af58:	str	r0, [sp, #12]
   1af5c:	ldr	r0, [sp, #12]
   1af60:	tst	r0, #1
   1af64:	beq	1afe4 <__assert_fail@plt+0x9ae0>
   1af68:	ldr	r0, [fp, #-4]
   1af6c:	ldr	r0, [r0]
   1af70:	ldr	r1, [fp, #-4]
   1af74:	ldr	r1, [r1, #24]
   1af78:	ldr	r2, [sp, #48]	; 0x30
   1af7c:	add	r1, r1, r2
   1af80:	ldr	r2, [sp, #24]
   1af84:	add	r1, r1, r2
   1af88:	add	r0, r0, r1
   1af8c:	ldrb	r0, [r0]
   1af90:	str	r0, [sp, #20]
   1af94:	ldr	r0, [fp, #-4]
   1af98:	ldr	r0, [r0, #64]	; 0x40
   1af9c:	ldr	r1, [sp, #20]
   1afa0:	add	r0, r0, r1
   1afa4:	ldrb	r0, [r0]
   1afa8:	ldr	r1, [fp, #-4]
   1afac:	ldr	r1, [r1, #4]
   1afb0:	ldr	r2, [sp, #48]	; 0x30
   1afb4:	ldr	r3, [sp, #24]
   1afb8:	add	r2, r2, r3
   1afbc:	add	r1, r1, r2
   1afc0:	strb	r0, [r1]
   1afc4:	ldr	r1, [sp, #24]
   1afc8:	add	r2, sp, #60	; 0x3c
   1afcc:	add	r1, r2, r1
   1afd0:	strb	r0, [r1]
   1afd4:	ldr	r0, [sp, #24]
   1afd8:	add	r0, r0, #1
   1afdc:	str	r0, [sp, #24]
   1afe0:	b	1af28 <__assert_fail@plt+0x9a24>
   1afe4:	add	r0, sp, #60	; 0x3c
   1afe8:	str	r0, [sp, #28]
   1afec:	b	1b010 <__assert_fail@plt+0x9b0c>
   1aff0:	ldr	r0, [fp, #-4]
   1aff4:	ldr	r0, [r0]
   1aff8:	ldr	r1, [fp, #-4]
   1affc:	ldr	r1, [r1, #24]
   1b000:	add	r0, r0, r1
   1b004:	ldr	r1, [sp, #48]	; 0x30
   1b008:	add	r0, r0, r1
   1b00c:	str	r0, [sp, #28]
   1b010:	ldr	r1, [sp, #28]
   1b014:	ldr	r2, [sp, #40]	; 0x28
   1b018:	ldr	r0, [fp, #-4]
   1b01c:	add	r3, r0, #16
   1b020:	add	r0, sp, #32
   1b024:	bl	34e90 <__assert_fail@plt+0x2398c>
   1b028:	str	r0, [sp, #36]	; 0x24
   1b02c:	ldr	r0, [sp, #36]	; 0x24
   1b030:	cmn	r0, #1
   1b034:	movw	r0, #1
   1b038:	str	r0, [sp, #8]
   1b03c:	beq	1b090 <__assert_fail@plt+0x9b8c>
   1b040:	ldr	r0, [sp, #36]	; 0x24
   1b044:	cmp	r0, #0
   1b048:	movw	r0, #1
   1b04c:	str	r0, [sp, #8]
   1b050:	beq	1b090 <__assert_fail@plt+0x9b8c>
   1b054:	ldr	r0, [sp, #36]	; 0x24
   1b058:	cmn	r0, #2
   1b05c:	movw	r0, #0
   1b060:	str	r0, [sp, #4]
   1b064:	bne	1b088 <__assert_fail@plt+0x9b84>
   1b068:	ldr	r0, [fp, #-4]
   1b06c:	ldr	r0, [r0, #36]	; 0x24
   1b070:	ldr	r1, [fp, #-4]
   1b074:	ldr	r1, [r1, #48]	; 0x30
   1b078:	cmp	r0, r1
   1b07c:	movw	r0, #0
   1b080:	movge	r0, #1
   1b084:	str	r0, [sp, #4]
   1b088:	ldr	r0, [sp, #4]
   1b08c:	str	r0, [sp, #8]
   1b090:	ldr	r0, [sp, #8]
   1b094:	tst	r0, #1
   1b098:	beq	1b10c <__assert_fail@plt+0x9c08>
   1b09c:	movw	r0, #1
   1b0a0:	str	r0, [sp, #36]	; 0x24
   1b0a4:	ldr	r0, [fp, #-4]
   1b0a8:	ldr	r0, [r0]
   1b0ac:	ldr	r1, [fp, #-4]
   1b0b0:	ldr	r1, [r1, #24]
   1b0b4:	ldr	r2, [sp, #48]	; 0x30
   1b0b8:	add	r1, r1, r2
   1b0bc:	add	r0, r0, r1
   1b0c0:	ldrb	r0, [r0]
   1b0c4:	str	r0, [sp, #32]
   1b0c8:	ldr	r0, [fp, #-4]
   1b0cc:	ldr	r0, [r0, #64]	; 0x40
   1b0d0:	movw	r1, #0
   1b0d4:	cmp	r0, r1
   1b0d8:	beq	1b0f4 <__assert_fail@plt+0x9bf0>
   1b0dc:	ldr	r0, [fp, #-4]
   1b0e0:	ldr	r0, [r0, #64]	; 0x40
   1b0e4:	ldr	r1, [sp, #32]
   1b0e8:	add	r0, r0, r1
   1b0ec:	ldrb	r0, [r0]
   1b0f0:	str	r0, [sp, #32]
   1b0f4:	ldr	r0, [fp, #-4]
   1b0f8:	ldr	r1, [sp, #52]	; 0x34
   1b0fc:	str	r1, [r0, #16]
   1b100:	ldr	r1, [sp, #56]	; 0x38
   1b104:	str	r1, [r0, #20]
   1b108:	b	1b134 <__assert_fail@plt+0x9c30>
   1b10c:	ldr	r0, [sp, #36]	; 0x24
   1b110:	cmn	r0, #2
   1b114:	bne	1b130 <__assert_fail@plt+0x9c2c>
   1b118:	ldr	r0, [fp, #-4]
   1b11c:	ldr	r1, [sp, #52]	; 0x34
   1b120:	str	r1, [r0, #16]
   1b124:	ldr	r1, [sp, #56]	; 0x38
   1b128:	str	r1, [r0, #20]
   1b12c:	b	1b1a0 <__assert_fail@plt+0x9c9c>
   1b130:	b	1b134 <__assert_fail@plt+0x9c30>
   1b134:	ldr	r0, [sp, #32]
   1b138:	ldr	r1, [fp, #-4]
   1b13c:	ldr	r1, [r1, #8]
   1b140:	ldr	r2, [sp, #48]	; 0x30
   1b144:	add	r3, r2, #1
   1b148:	str	r3, [sp, #48]	; 0x30
   1b14c:	add	r1, r1, r2, lsl #2
   1b150:	str	r0, [r1]
   1b154:	ldr	r0, [sp, #48]	; 0x30
   1b158:	ldr	r1, [sp, #36]	; 0x24
   1b15c:	add	r0, r0, r1
   1b160:	sub	r0, r0, #1
   1b164:	str	r0, [sp, #40]	; 0x28
   1b168:	ldr	r0, [sp, #48]	; 0x30
   1b16c:	ldr	r1, [sp, #40]	; 0x28
   1b170:	cmp	r0, r1
   1b174:	bge	1b19c <__assert_fail@plt+0x9c98>
   1b178:	ldr	r0, [fp, #-4]
   1b17c:	ldr	r0, [r0, #8]
   1b180:	ldr	r1, [sp, #48]	; 0x30
   1b184:	add	r2, r1, #1
   1b188:	str	r2, [sp, #48]	; 0x30
   1b18c:	add	r0, r0, r1, lsl #2
   1b190:	mvn	r1, #0
   1b194:	str	r1, [r0]
   1b198:	b	1b168 <__assert_fail@plt+0x9c64>
   1b19c:	b	1aed8 <__assert_fail@plt+0x99d4>
   1b1a0:	ldr	r0, [sp, #48]	; 0x30
   1b1a4:	ldr	r1, [fp, #-4]
   1b1a8:	str	r0, [r1, #28]
   1b1ac:	ldr	r0, [sp, #48]	; 0x30
   1b1b0:	ldr	r1, [fp, #-4]
   1b1b4:	str	r0, [r1, #32]
   1b1b8:	mov	sp, fp
   1b1bc:	pop	{fp, pc}
   1b1c0:	sub	sp, sp, #20
   1b1c4:	str	r0, [sp, #16]
   1b1c8:	ldr	r0, [sp, #16]
   1b1cc:	ldr	r0, [r0, #36]	; 0x24
   1b1d0:	ldr	r1, [sp, #16]
   1b1d4:	ldr	r1, [r1, #48]	; 0x30
   1b1d8:	cmp	r0, r1
   1b1dc:	ble	1b1f0 <__assert_fail@plt+0x9cec>
   1b1e0:	ldr	r0, [sp, #16]
   1b1e4:	ldr	r0, [r0, #48]	; 0x30
   1b1e8:	str	r0, [sp]
   1b1ec:	b	1b1fc <__assert_fail@plt+0x9cf8>
   1b1f0:	ldr	r0, [sp, #16]
   1b1f4:	ldr	r0, [r0, #36]	; 0x24
   1b1f8:	str	r0, [sp]
   1b1fc:	ldr	r0, [sp]
   1b200:	str	r0, [sp, #8]
   1b204:	ldr	r0, [sp, #16]
   1b208:	ldr	r0, [r0, #28]
   1b20c:	str	r0, [sp, #12]
   1b210:	ldr	r0, [sp, #12]
   1b214:	ldr	r1, [sp, #8]
   1b218:	cmp	r0, r1
   1b21c:	bge	1b27c <__assert_fail@plt+0x9d78>
   1b220:	ldr	r0, [sp, #16]
   1b224:	ldr	r0, [r0]
   1b228:	ldr	r1, [sp, #16]
   1b22c:	ldr	r1, [r1, #24]
   1b230:	ldr	r2, [sp, #12]
   1b234:	add	r1, r1, r2
   1b238:	add	r0, r0, r1
   1b23c:	ldrb	r0, [r0]
   1b240:	str	r0, [sp, #4]
   1b244:	ldr	r0, [sp, #16]
   1b248:	ldr	r0, [r0, #64]	; 0x40
   1b24c:	ldr	r1, [sp, #4]
   1b250:	add	r0, r0, r1
   1b254:	ldrb	r0, [r0]
   1b258:	ldr	r1, [sp, #16]
   1b25c:	ldr	r1, [r1, #4]
   1b260:	ldr	r2, [sp, #12]
   1b264:	add	r1, r1, r2
   1b268:	strb	r0, [r1]
   1b26c:	ldr	r0, [sp, #12]
   1b270:	add	r0, r0, #1
   1b274:	str	r0, [sp, #12]
   1b278:	b	1b210 <__assert_fail@plt+0x9d0c>
   1b27c:	ldr	r0, [sp, #12]
   1b280:	ldr	r1, [sp, #16]
   1b284:	str	r0, [r1, #28]
   1b288:	ldr	r0, [sp, #12]
   1b28c:	ldr	r1, [sp, #16]
   1b290:	str	r0, [r1, #32]
   1b294:	add	sp, sp, #20
   1b298:	bx	lr
   1b29c:	push	{fp, lr}
   1b2a0:	mov	fp, sp
   1b2a4:	sub	sp, sp, #16
   1b2a8:	str	r0, [fp, #-4]
   1b2ac:	str	r1, [sp, #8]
   1b2b0:	str	r2, [sp, #4]
   1b2b4:	ldr	r0, [fp, #-4]
   1b2b8:	ldr	r1, [sp, #8]
   1b2bc:	ldr	r2, [sp, #4]
   1b2c0:	bl	1b60c <__assert_fail@plt+0xa108>
   1b2c4:	ldr	r1, [sp, #8]
   1b2c8:	ldr	r2, [r1, #40]	; 0x28
   1b2cc:	add	r0, r2, r0
   1b2d0:	str	r0, [r1, #40]	; 0x28
   1b2d4:	mov	sp, fp
   1b2d8:	pop	{fp, pc}
   1b2dc:	push	{r4, r5, fp, lr}
   1b2e0:	add	fp, sp, #8
   1b2e4:	sub	sp, sp, #64	; 0x40
   1b2e8:	ldr	ip, [fp, #12]
   1b2ec:	ldr	lr, [fp, #8]
   1b2f0:	str	r0, [fp, #-16]
   1b2f4:	str	r1, [fp, #-20]	; 0xffffffec
   1b2f8:	str	r2, [fp, #-24]	; 0xffffffe8
   1b2fc:	str	r3, [fp, #-28]	; 0xffffffe4
   1b300:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b304:	ldr	r0, [r0]
   1b308:	str	r0, [fp, #-32]	; 0xffffffe0
   1b30c:	movw	r0, #0
   1b310:	str	r0, [sp, #32]
   1b314:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b318:	ldr	r0, [r0, #84]	; 0x54
   1b31c:	str	r0, [sp, #28]
   1b320:	ldr	r0, [fp, #-16]
   1b324:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b328:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b32c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b330:	ldr	r4, [fp, #8]
   1b334:	ldr	r5, [fp, #12]
   1b338:	str	r4, [sp]
   1b33c:	str	r5, [sp, #4]
   1b340:	str	ip, [sp, #20]
   1b344:	str	lr, [sp, #16]
   1b348:	bl	1c694 <__assert_fail@plt+0xb190>
   1b34c:	str	r0, [sp, #36]	; 0x24
   1b350:	ldr	r0, [fp, #12]
   1b354:	ldr	r0, [r0]
   1b358:	cmp	r0, #0
   1b35c:	movw	r0, #0
   1b360:	str	r0, [sp, #12]
   1b364:	beq	1b380 <__assert_fail@plt+0x9e7c>
   1b368:	ldr	r0, [sp, #36]	; 0x24
   1b36c:	movw	r1, #0
   1b370:	cmp	r0, r1
   1b374:	movw	r0, #0
   1b378:	moveq	r0, #1
   1b37c:	str	r0, [sp, #12]
   1b380:	ldr	r0, [sp, #12]
   1b384:	tst	r0, #1
   1b388:	beq	1b398 <__assert_fail@plt+0x9e94>
   1b38c:	movw	r0, #0
   1b390:	str	r0, [fp, #-12]
   1b394:	b	1b524 <__assert_fail@plt+0xa020>
   1b398:	b	1b39c <__assert_fail@plt+0x9e98>
   1b39c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3a0:	ldr	r0, [r0, #4]
   1b3a4:	and	r0, r0, #255	; 0xff
   1b3a8:	cmp	r0, #10
   1b3ac:	bne	1b51c <__assert_fail@plt+0xa018>
   1b3b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3b4:	ldr	r1, [fp, #-16]
   1b3b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b3bc:	orr	r2, r2, #8388608	; 0x800000
   1b3c0:	bl	1b29c <__assert_fail@plt+0x9d98>
   1b3c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3c8:	ldr	r0, [r0, #4]
   1b3cc:	and	r0, r0, #255	; 0xff
   1b3d0:	cmp	r0, #10
   1b3d4:	beq	1b4d0 <__assert_fail@plt+0x9fcc>
   1b3d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3dc:	ldr	r0, [r0, #4]
   1b3e0:	and	r0, r0, #255	; 0xff
   1b3e4:	cmp	r0, #2
   1b3e8:	beq	1b4d0 <__assert_fail@plt+0x9fcc>
   1b3ec:	ldr	r0, [fp, #8]
   1b3f0:	cmp	r0, #0
   1b3f4:	beq	1b40c <__assert_fail@plt+0x9f08>
   1b3f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3fc:	ldr	r0, [r0, #4]
   1b400:	and	r0, r0, #255	; 0xff
   1b404:	cmp	r0, #9
   1b408:	beq	1b4d0 <__assert_fail@plt+0x9fcc>
   1b40c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b410:	ldr	r0, [r0, #84]	; 0x54
   1b414:	str	r0, [sp, #24]
   1b418:	ldr	r0, [sp, #28]
   1b41c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b420:	str	r0, [r1, #84]	; 0x54
   1b424:	ldr	r0, [fp, #-16]
   1b428:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b42c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b430:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b434:	ldr	ip, [fp, #8]
   1b438:	ldr	lr, [fp, #12]
   1b43c:	str	ip, [sp]
   1b440:	str	lr, [sp, #4]
   1b444:	bl	1c694 <__assert_fail@plt+0xb190>
   1b448:	str	r0, [sp, #32]
   1b44c:	ldr	r0, [fp, #12]
   1b450:	ldr	r0, [r0]
   1b454:	cmp	r0, #0
   1b458:	movw	r0, #0
   1b45c:	str	r0, [sp, #8]
   1b460:	beq	1b47c <__assert_fail@plt+0x9f78>
   1b464:	ldr	r0, [sp, #32]
   1b468:	movw	r1, #0
   1b46c:	cmp	r0, r1
   1b470:	movw	r0, #0
   1b474:	moveq	r0, #1
   1b478:	str	r0, [sp, #8]
   1b47c:	ldr	r0, [sp, #8]
   1b480:	tst	r0, #1
   1b484:	beq	1b4b8 <__assert_fail@plt+0x9fb4>
   1b488:	ldr	r0, [sp, #36]	; 0x24
   1b48c:	movw	r1, #0
   1b490:	cmp	r0, r1
   1b494:	beq	1b4ac <__assert_fail@plt+0x9fa8>
   1b498:	ldr	r0, [sp, #36]	; 0x24
   1b49c:	movw	r1, #51856	; 0xca90
   1b4a0:	movt	r1, #1
   1b4a4:	movw	r2, #0
   1b4a8:	bl	1c920 <__assert_fail@plt+0xb41c>
   1b4ac:	movw	r0, #0
   1b4b0:	str	r0, [fp, #-12]
   1b4b4:	b	1b524 <__assert_fail@plt+0xa020>
   1b4b8:	ldr	r0, [sp, #24]
   1b4bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b4c0:	ldr	r2, [r1, #84]	; 0x54
   1b4c4:	orr	r0, r2, r0
   1b4c8:	str	r0, [r1, #84]	; 0x54
   1b4cc:	b	1b4d8 <__assert_fail@plt+0x9fd4>
   1b4d0:	movw	r0, #0
   1b4d4:	str	r0, [sp, #32]
   1b4d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b4dc:	ldr	r1, [sp, #36]	; 0x24
   1b4e0:	ldr	r2, [sp, #32]
   1b4e4:	movw	r3, #10
   1b4e8:	bl	1b530 <__assert_fail@plt+0xa02c>
   1b4ec:	str	r0, [sp, #36]	; 0x24
   1b4f0:	ldr	r0, [sp, #36]	; 0x24
   1b4f4:	movw	r1, #0
   1b4f8:	cmp	r0, r1
   1b4fc:	bne	1b518 <__assert_fail@plt+0xa014>
   1b500:	ldr	r0, [fp, #12]
   1b504:	movw	r1, #12
   1b508:	str	r1, [r0]
   1b50c:	movw	r0, #0
   1b510:	str	r0, [fp, #-12]
   1b514:	b	1b524 <__assert_fail@plt+0xa020>
   1b518:	b	1b39c <__assert_fail@plt+0x9e98>
   1b51c:	ldr	r0, [sp, #36]	; 0x24
   1b520:	str	r0, [fp, #-12]
   1b524:	ldr	r0, [fp, #-12]
   1b528:	sub	sp, fp, #8
   1b52c:	pop	{r4, r5, fp, pc}
   1b530:	push	{fp, lr}
   1b534:	mov	fp, sp
   1b538:	sub	sp, sp, #32
   1b53c:	add	ip, sp, #8
   1b540:	ldr	lr, [pc, #192]	; 1b608 <__assert_fail@plt+0xa104>
   1b544:	str	r0, [fp, #-4]
   1b548:	str	r1, [fp, #-8]
   1b54c:	str	r2, [fp, #-12]
   1b550:	str	r3, [sp, #16]
   1b554:	mov	r0, ip
   1b558:	movw	r1, #0
   1b55c:	and	r1, r1, #255	; 0xff
   1b560:	movw	r2, #4
   1b564:	str	ip, [sp, #4]
   1b568:	str	lr, [sp]
   1b56c:	bl	11420 <memset@plt>
   1b570:	ldr	r0, [sp, #16]
   1b574:	ldr	r1, [sp, #12]
   1b578:	and	r0, r0, #255	; 0xff
   1b57c:	mvn	r2, #255	; 0xff
   1b580:	and	r1, r1, r2
   1b584:	orr	r0, r1, r0
   1b588:	str	r0, [sp, #12]
   1b58c:	ldr	r0, [sp, #12]
   1b590:	ldr	r1, [sp]
   1b594:	and	r0, r0, r1
   1b598:	str	r0, [sp, #12]
   1b59c:	ldr	r0, [sp, #12]
   1b5a0:	mvn	r2, #262144	; 0x40000
   1b5a4:	and	r0, r0, r2
   1b5a8:	str	r0, [sp, #12]
   1b5ac:	ldr	r0, [sp, #12]
   1b5b0:	mvn	r2, #524288	; 0x80000
   1b5b4:	and	r0, r0, r2
   1b5b8:	str	r0, [sp, #12]
   1b5bc:	ldr	r0, [sp, #12]
   1b5c0:	mvn	r2, #1048576	; 0x100000
   1b5c4:	and	r0, r0, r2
   1b5c8:	str	r0, [sp, #12]
   1b5cc:	ldr	r0, [sp, #12]
   1b5d0:	mvn	r2, #2097152	; 0x200000
   1b5d4:	and	r0, r0, r2
   1b5d8:	str	r0, [sp, #12]
   1b5dc:	ldr	r0, [sp, #12]
   1b5e0:	mvn	r2, #4194304	; 0x400000
   1b5e4:	and	r0, r0, r2
   1b5e8:	str	r0, [sp, #12]
   1b5ec:	ldr	r0, [fp, #-4]
   1b5f0:	ldr	r1, [fp, #-8]
   1b5f4:	ldr	r2, [fp, #-12]
   1b5f8:	ldr	r3, [sp, #4]
   1b5fc:	bl	1d594 <__assert_fail@plt+0xc090>
   1b600:	mov	sp, fp
   1b604:	pop	{fp, pc}
   1b608:			; <UNDEFINED> instruction: 0xfffc00ff
   1b60c:	push	{fp, lr}
   1b610:	mov	fp, sp
   1b614:	sub	sp, sp, #64	; 0x40
   1b618:	str	r0, [fp, #-8]
   1b61c:	str	r1, [fp, #-12]
   1b620:	str	r2, [fp, #-16]
   1b624:	ldr	r0, [fp, #-12]
   1b628:	ldr	r0, [r0, #56]	; 0x38
   1b62c:	ldr	r1, [fp, #-12]
   1b630:	ldr	r1, [r1, #40]	; 0x28
   1b634:	cmp	r0, r1
   1b638:	bgt	1b660 <__assert_fail@plt+0xa15c>
   1b63c:	ldr	r0, [fp, #-8]
   1b640:	ldr	r1, [r0, #4]
   1b644:	mvn	r2, #255	; 0xff
   1b648:	and	r1, r1, r2
   1b64c:	orr	r1, r1, #2
   1b650:	str	r1, [r0, #4]
   1b654:	movw	r0, #0
   1b658:	str	r0, [fp, #-4]
   1b65c:	b	1c468 <__assert_fail@plt+0xaf64>
   1b660:	ldr	r0, [fp, #-12]
   1b664:	ldr	r0, [r0, #4]
   1b668:	ldr	r1, [fp, #-12]
   1b66c:	ldr	r1, [r1, #40]	; 0x28
   1b670:	add	r1, r1, #0
   1b674:	add	r0, r0, r1
   1b678:	ldrb	r0, [r0]
   1b67c:	strb	r0, [fp, #-17]	; 0xffffffef
   1b680:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1b684:	ldr	r1, [fp, #-8]
   1b688:	strb	r0, [r1]
   1b68c:	ldr	r0, [fp, #-8]
   1b690:	ldr	r1, [r0, #4]
   1b694:	mvn	r2, #4194304	; 0x400000
   1b698:	and	r1, r1, r2
   1b69c:	str	r1, [r0, #4]
   1b6a0:	ldr	r0, [fp, #-8]
   1b6a4:	ldr	r1, [r0, #4]
   1b6a8:	mvn	r2, #2097152	; 0x200000
   1b6ac:	and	r1, r1, r2
   1b6b0:	str	r1, [r0, #4]
   1b6b4:	ldr	r0, [fp, #-12]
   1b6b8:	ldr	r0, [r0, #80]	; 0x50
   1b6bc:	cmp	r0, #1
   1b6c0:	ble	1b734 <__assert_fail@plt+0xa230>
   1b6c4:	ldr	r0, [fp, #-12]
   1b6c8:	ldr	r0, [r0, #40]	; 0x28
   1b6cc:	ldr	r1, [fp, #-12]
   1b6d0:	ldr	r1, [r1, #28]
   1b6d4:	cmp	r0, r1
   1b6d8:	beq	1b734 <__assert_fail@plt+0xa230>
   1b6dc:	ldr	r0, [fp, #-12]
   1b6e0:	ldr	r1, [r0, #8]
   1b6e4:	ldr	r0, [r0, #40]	; 0x28
   1b6e8:	add	r0, r1, r0, lsl #2
   1b6ec:	ldr	r0, [r0]
   1b6f0:	cmn	r0, #1
   1b6f4:	bne	1b734 <__assert_fail@plt+0xa230>
   1b6f8:	ldr	r0, [fp, #-8]
   1b6fc:	ldr	r1, [r0, #4]
   1b700:	mvn	r2, #255	; 0xff
   1b704:	and	r1, r1, r2
   1b708:	orr	r1, r1, #1
   1b70c:	str	r1, [r0, #4]
   1b710:	ldr	r0, [fp, #-8]
   1b714:	ldr	r1, [r0, #4]
   1b718:	mvn	r2, #2097152	; 0x200000
   1b71c:	and	r1, r1, r2
   1b720:	orr	r1, r1, #2097152	; 0x200000
   1b724:	str	r1, [r0, #4]
   1b728:	movw	r0, #1
   1b72c:	str	r0, [fp, #-4]
   1b730:	b	1c468 <__assert_fail@plt+0xaf64>
   1b734:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1b738:	cmp	r0, #92	; 0x5c
   1b73c:	bne	1be0c <__assert_fail@plt+0xa908>
   1b740:	ldr	r0, [fp, #-12]
   1b744:	ldr	r0, [r0, #40]	; 0x28
   1b748:	add	r0, r0, #1
   1b74c:	ldr	r1, [fp, #-12]
   1b750:	ldr	r1, [r1, #48]	; 0x30
   1b754:	cmp	r0, r1
   1b758:	blt	1b780 <__assert_fail@plt+0xa27c>
   1b75c:	ldr	r0, [fp, #-8]
   1b760:	ldr	r1, [r0, #4]
   1b764:	mvn	r2, #255	; 0xff
   1b768:	and	r1, r1, r2
   1b76c:	orr	r1, r1, #36	; 0x24
   1b770:	str	r1, [r0, #4]
   1b774:	movw	r0, #1
   1b778:	str	r0, [fp, #-4]
   1b77c:	b	1c468 <__assert_fail@plt+0xaf64>
   1b780:	ldr	r0, [fp, #-12]
   1b784:	movw	r1, #1
   1b788:	bl	1c478 <__assert_fail@plt+0xaf74>
   1b78c:	strb	r0, [fp, #-18]	; 0xffffffee
   1b790:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1b794:	ldr	r1, [fp, #-8]
   1b798:	strb	r0, [r1]
   1b79c:	ldr	r0, [fp, #-8]
   1b7a0:	ldr	r1, [r0, #4]
   1b7a4:	mvn	r2, #255	; 0xff
   1b7a8:	and	r1, r1, r2
   1b7ac:	orr	r1, r1, #1
   1b7b0:	str	r1, [r0, #4]
   1b7b4:	ldr	r0, [fp, #-12]
   1b7b8:	ldr	r0, [r0, #80]	; 0x50
   1b7bc:	cmp	r0, #1
   1b7c0:	ble	1b844 <__assert_fail@plt+0xa340>
   1b7c4:	ldr	r0, [fp, #-12]
   1b7c8:	ldr	r1, [fp, #-12]
   1b7cc:	ldr	r1, [r1, #40]	; 0x28
   1b7d0:	add	r1, r1, #1
   1b7d4:	bl	1c638 <__assert_fail@plt+0xb134>
   1b7d8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b7dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b7e0:	bl	11408 <iswalnum@plt>
   1b7e4:	cmp	r0, #0
   1b7e8:	movw	r0, #1
   1b7ec:	str	r0, [sp, #20]
   1b7f0:	bne	1b808 <__assert_fail@plt+0xa304>
   1b7f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b7f8:	cmp	r0, #95	; 0x5f
   1b7fc:	movw	r0, #0
   1b800:	moveq	r0, #1
   1b804:	str	r0, [sp, #20]
   1b808:	ldr	r0, [sp, #20]
   1b80c:	and	r0, r0, #1
   1b810:	cmp	r0, #0
   1b814:	movw	r0, #0
   1b818:	movne	r0, #1
   1b81c:	and	r0, r0, #1
   1b820:	ldr	r1, [fp, #-8]
   1b824:	ldr	r2, [r1, #4]
   1b828:	and	r0, r0, #1
   1b82c:	lsl	r0, r0, #22
   1b830:	mvn	r3, #4194304	; 0x400000
   1b834:	and	r2, r2, r3
   1b838:	orr	r0, r2, r0
   1b83c:	str	r0, [r1, #4]
   1b840:	b	1b8bc <__assert_fail@plt+0xa3b8>
   1b844:	bl	113b4 <__ctype_b_loc@plt>
   1b848:	ldr	r0, [r0]
   1b84c:	ldrb	r1, [fp, #-18]	; 0xffffffee
   1b850:	mov	r2, r1
   1b854:	add	r0, r0, r1, lsl #1
   1b858:	ldrh	r0, [r0]
   1b85c:	and	r0, r0, #8
   1b860:	cmp	r0, #0
   1b864:	movw	r0, #1
   1b868:	str	r0, [sp, #16]
   1b86c:	bne	1b884 <__assert_fail@plt+0xa380>
   1b870:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1b874:	cmp	r0, #95	; 0x5f
   1b878:	movw	r0, #0
   1b87c:	moveq	r0, #1
   1b880:	str	r0, [sp, #16]
   1b884:	ldr	r0, [sp, #16]
   1b888:	and	r0, r0, #1
   1b88c:	cmp	r0, #0
   1b890:	movw	r0, #0
   1b894:	movne	r0, #1
   1b898:	and	r0, r0, #1
   1b89c:	ldr	r1, [fp, #-8]
   1b8a0:	ldr	r2, [r1, #4]
   1b8a4:	and	r0, r0, #1
   1b8a8:	lsl	r0, r0, #22
   1b8ac:	mvn	r3, #4194304	; 0x400000
   1b8b0:	and	r2, r2, r3
   1b8b4:	orr	r0, r2, r0
   1b8b8:	str	r0, [r1, #4]
   1b8bc:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1b8c0:	sub	r0, r0, #39	; 0x27
   1b8c4:	cmp	r0, #86	; 0x56
   1b8c8:	str	r0, [sp, #12]
   1b8cc:	bhi	1bdfc <__assert_fail@plt+0xa8f8>
   1b8d0:	add	r0, pc, #8
   1b8d4:	ldr	r1, [sp, #12]
   1b8d8:	ldr	r0, [r0, r1, lsl #2]
   1b8dc:	mov	pc, r0
   1b8e0:	andeq	fp, r1, ip, ror ip
   1b8e4:			; <UNDEFINED> instruction: 0x0001bcb4
   1b8e8:	andeq	fp, r1, r0, ror #25
   1b8ec:	strdeq	fp, [r1], -ip
   1b8f0:	andeq	fp, r1, ip, lsl #26
   1b8f4:	strdeq	fp, [r1], -ip
   1b8f8:	strdeq	fp, [r1], -ip
   1b8fc:	strdeq	fp, [r1], -ip
   1b900:	strdeq	fp, [r1], -ip
   1b904:	strdeq	fp, [r1], -ip
   1b908:	andeq	fp, r1, r8, ror sl
   1b90c:	andeq	fp, r1, r8, ror sl
   1b910:	andeq	fp, r1, r8, ror sl
   1b914:	andeq	fp, r1, r8, ror sl
   1b918:	andeq	fp, r1, r8, ror sl
   1b91c:	andeq	fp, r1, r8, ror sl
   1b920:	andeq	fp, r1, r8, ror sl
   1b924:	andeq	fp, r1, r8, ror sl
   1b928:	andeq	fp, r1, r8, ror sl
   1b92c:	strdeq	fp, [r1], -ip
   1b930:	strdeq	fp, [r1], -ip
   1b934:			; <UNDEFINED> instruction: 0x0001bab4
   1b938:	strdeq	fp, [r1], -ip
   1b93c:	andeq	fp, r1, ip, ror #21
   1b940:	andeq	fp, r1, r8, asr #26
   1b944:	strdeq	fp, [r1], -ip
   1b948:	strdeq	fp, [r1], -ip
   1b94c:	andeq	fp, r1, ip, asr fp
   1b950:	strdeq	fp, [r1], -ip
   1b954:	strdeq	fp, [r1], -ip
   1b958:	strdeq	fp, [r1], -ip
   1b95c:	strdeq	fp, [r1], -ip
   1b960:	strdeq	fp, [r1], -ip
   1b964:	strdeq	fp, [r1], -ip
   1b968:	strdeq	fp, [r1], -ip
   1b96c:	strdeq	fp, [r1], -ip
   1b970:	strdeq	fp, [r1], -ip
   1b974:	strdeq	fp, [r1], -ip
   1b978:	strdeq	fp, [r1], -ip
   1b97c:	strdeq	fp, [r1], -ip
   1b980:	strdeq	fp, [r1], -ip
   1b984:	strdeq	fp, [r1], -ip
   1b988:	strdeq	fp, [r1], -ip
   1b98c:	strdeq	fp, [r1], -ip
   1b990:	andeq	fp, r1, r8, lsl ip
   1b994:	strdeq	fp, [r1], -ip
   1b998:	strdeq	fp, [r1], -ip
   1b99c:	strdeq	fp, [r1], -ip
   1b9a0:	andeq	fp, r1, r0, asr #23
   1b9a4:	strdeq	fp, [r1], -ip
   1b9a8:	strdeq	fp, [r1], -ip
   1b9ac:	strdeq	fp, [r1], -ip
   1b9b0:	strdeq	fp, [r1], -ip
   1b9b4:	strdeq	fp, [r1], -ip
   1b9b8:	strdeq	fp, [r1], -ip
   1b9bc:	strdeq	fp, [r1], -ip
   1b9c0:	strdeq	fp, [r1], -ip
   1b9c4:	andeq	fp, r1, r4, asr #24
   1b9c8:	strdeq	fp, [r1], -ip
   1b9cc:	andeq	fp, r1, r4, lsr #22
   1b9d0:	strdeq	fp, [r1], -ip
   1b9d4:	strdeq	fp, [r1], -ip
   1b9d8:	strdeq	fp, [r1], -ip
   1b9dc:	strdeq	fp, [r1], -ip
   1b9e0:	strdeq	fp, [r1], -ip
   1b9e4:	strdeq	fp, [r1], -ip
   1b9e8:	strdeq	fp, [r1], -ip
   1b9ec:	strdeq	fp, [r1], -ip
   1b9f0:	strdeq	fp, [r1], -ip
   1b9f4:	strdeq	fp, [r1], -ip
   1b9f8:	strdeq	fp, [r1], -ip
   1b9fc:	strdeq	fp, [r1], -ip
   1ba00:	strdeq	fp, [r1], -ip
   1ba04:	strdeq	fp, [r1], -ip
   1ba08:	strdeq	fp, [r1], -ip
   1ba0c:	strdeq	fp, [r1], -ip
   1ba10:	andeq	fp, r1, ip, ror #23
   1ba14:	strdeq	fp, [r1], -ip
   1ba18:	strdeq	fp, [r1], -ip
   1ba1c:	strdeq	fp, [r1], -ip
   1ba20:	muleq	r1, r4, fp
   1ba24:	strdeq	fp, [r1], -ip
   1ba28:	strdeq	fp, [r1], -ip
   1ba2c:	strdeq	fp, [r1], -ip
   1ba30:	andeq	fp, r1, r4, lsl #27
   1ba34:	andeq	fp, r1, ip, lsr sl
   1ba38:	andeq	fp, r1, r0, asr #27
   1ba3c:	ldr	r0, [fp, #-16]
   1ba40:	and	r0, r0, #1024	; 0x400
   1ba44:	cmp	r0, #0
   1ba48:	bne	1ba74 <__assert_fail@plt+0xa570>
   1ba4c:	ldr	r0, [fp, #-16]
   1ba50:	and	r0, r0, #32768	; 0x8000
   1ba54:	cmp	r0, #0
   1ba58:	bne	1ba74 <__assert_fail@plt+0xa570>
   1ba5c:	ldr	r0, [fp, #-8]
   1ba60:	ldr	r1, [r0, #4]
   1ba64:	mvn	r2, #255	; 0xff
   1ba68:	and	r1, r1, r2
   1ba6c:	orr	r1, r1, #10
   1ba70:	str	r1, [r0, #4]
   1ba74:	b	1be00 <__assert_fail@plt+0xa8fc>
   1ba78:	ldr	r0, [fp, #-16]
   1ba7c:	and	r0, r0, #16384	; 0x4000
   1ba80:	cmp	r0, #0
   1ba84:	bne	1bab0 <__assert_fail@plt+0xa5ac>
   1ba88:	ldr	r0, [fp, #-8]
   1ba8c:	ldr	r1, [r0, #4]
   1ba90:	mvn	r2, #255	; 0xff
   1ba94:	and	r1, r1, r2
   1ba98:	orr	r1, r1, #4
   1ba9c:	str	r1, [r0, #4]
   1baa0:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1baa4:	sub	r0, r0, #49	; 0x31
   1baa8:	ldr	r1, [fp, #-8]
   1baac:	str	r0, [r1]
   1bab0:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bab4:	ldr	r0, [fp, #-16]
   1bab8:	and	r0, r0, #524288	; 0x80000
   1babc:	cmp	r0, #0
   1bac0:	bne	1bae8 <__assert_fail@plt+0xa5e4>
   1bac4:	ldr	r0, [fp, #-8]
   1bac8:	ldr	r1, [r0, #4]
   1bacc:	mvn	r2, #255	; 0xff
   1bad0:	and	r1, r1, r2
   1bad4:	orr	r1, r1, #12
   1bad8:	str	r1, [r0, #4]
   1badc:	ldr	r0, [fp, #-8]
   1bae0:	movw	r1, #6
   1bae4:	str	r1, [r0]
   1bae8:	b	1be00 <__assert_fail@plt+0xa8fc>
   1baec:	ldr	r0, [fp, #-16]
   1baf0:	and	r0, r0, #524288	; 0x80000
   1baf4:	cmp	r0, #0
   1baf8:	bne	1bb20 <__assert_fail@plt+0xa61c>
   1bafc:	ldr	r0, [fp, #-8]
   1bb00:	ldr	r1, [r0, #4]
   1bb04:	mvn	r2, #255	; 0xff
   1bb08:	and	r1, r1, r2
   1bb0c:	orr	r1, r1, #12
   1bb10:	str	r1, [r0, #4]
   1bb14:	ldr	r0, [fp, #-8]
   1bb18:	movw	r1, #9
   1bb1c:	str	r1, [r0]
   1bb20:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bb24:	ldr	r0, [fp, #-16]
   1bb28:	and	r0, r0, #524288	; 0x80000
   1bb2c:	cmp	r0, #0
   1bb30:	bne	1bb58 <__assert_fail@plt+0xa654>
   1bb34:	ldr	r0, [fp, #-8]
   1bb38:	ldr	r1, [r0, #4]
   1bb3c:	mvn	r2, #255	; 0xff
   1bb40:	and	r1, r1, r2
   1bb44:	orr	r1, r1, #12
   1bb48:	str	r1, [r0, #4]
   1bb4c:	ldr	r0, [fp, #-8]
   1bb50:	movw	r1, #256	; 0x100
   1bb54:	str	r1, [r0]
   1bb58:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bb5c:	ldr	r0, [fp, #-16]
   1bb60:	and	r0, r0, #524288	; 0x80000
   1bb64:	cmp	r0, #0
   1bb68:	bne	1bb90 <__assert_fail@plt+0xa68c>
   1bb6c:	ldr	r0, [fp, #-8]
   1bb70:	ldr	r1, [r0, #4]
   1bb74:	mvn	r2, #255	; 0xff
   1bb78:	and	r1, r1, r2
   1bb7c:	orr	r1, r1, #12
   1bb80:	str	r1, [r0, #4]
   1bb84:	ldr	r0, [fp, #-8]
   1bb88:	movw	r1, #512	; 0x200
   1bb8c:	str	r1, [r0]
   1bb90:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bb94:	ldr	r0, [fp, #-16]
   1bb98:	and	r0, r0, #524288	; 0x80000
   1bb9c:	cmp	r0, #0
   1bba0:	bne	1bbbc <__assert_fail@plt+0xa6b8>
   1bba4:	ldr	r0, [fp, #-8]
   1bba8:	ldr	r1, [r0, #4]
   1bbac:	mvn	r2, #255	; 0xff
   1bbb0:	and	r1, r1, r2
   1bbb4:	orr	r1, r1, #32
   1bbb8:	str	r1, [r0, #4]
   1bbbc:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bbc0:	ldr	r0, [fp, #-16]
   1bbc4:	and	r0, r0, #524288	; 0x80000
   1bbc8:	cmp	r0, #0
   1bbcc:	bne	1bbe8 <__assert_fail@plt+0xa6e4>
   1bbd0:	ldr	r0, [fp, #-8]
   1bbd4:	ldr	r1, [r0, #4]
   1bbd8:	mvn	r2, #255	; 0xff
   1bbdc:	and	r1, r1, r2
   1bbe0:	orr	r1, r1, #33	; 0x21
   1bbe4:	str	r1, [r0, #4]
   1bbe8:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bbec:	ldr	r0, [fp, #-16]
   1bbf0:	and	r0, r0, #524288	; 0x80000
   1bbf4:	cmp	r0, #0
   1bbf8:	bne	1bc14 <__assert_fail@plt+0xa710>
   1bbfc:	ldr	r0, [fp, #-8]
   1bc00:	ldr	r1, [r0, #4]
   1bc04:	mvn	r2, #255	; 0xff
   1bc08:	and	r1, r1, r2
   1bc0c:	orr	r1, r1, #34	; 0x22
   1bc10:	str	r1, [r0, #4]
   1bc14:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bc18:	ldr	r0, [fp, #-16]
   1bc1c:	and	r0, r0, #524288	; 0x80000
   1bc20:	cmp	r0, #0
   1bc24:	bne	1bc40 <__assert_fail@plt+0xa73c>
   1bc28:	ldr	r0, [fp, #-8]
   1bc2c:	ldr	r1, [r0, #4]
   1bc30:	mvn	r2, #255	; 0xff
   1bc34:	and	r1, r1, r2
   1bc38:	orr	r1, r1, #35	; 0x23
   1bc3c:	str	r1, [r0, #4]
   1bc40:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bc44:	ldr	r0, [fp, #-16]
   1bc48:	and	r0, r0, #524288	; 0x80000
   1bc4c:	cmp	r0, #0
   1bc50:	bne	1bc78 <__assert_fail@plt+0xa774>
   1bc54:	ldr	r0, [fp, #-8]
   1bc58:	ldr	r1, [r0, #4]
   1bc5c:	mvn	r2, #255	; 0xff
   1bc60:	and	r1, r1, r2
   1bc64:	orr	r1, r1, #12
   1bc68:	str	r1, [r0, #4]
   1bc6c:	ldr	r0, [fp, #-8]
   1bc70:	movw	r1, #64	; 0x40
   1bc74:	str	r1, [r0]
   1bc78:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bc7c:	ldr	r0, [fp, #-16]
   1bc80:	and	r0, r0, #524288	; 0x80000
   1bc84:	cmp	r0, #0
   1bc88:	bne	1bcb0 <__assert_fail@plt+0xa7ac>
   1bc8c:	ldr	r0, [fp, #-8]
   1bc90:	ldr	r1, [r0, #4]
   1bc94:	mvn	r2, #255	; 0xff
   1bc98:	and	r1, r1, r2
   1bc9c:	orr	r1, r1, #12
   1bca0:	str	r1, [r0, #4]
   1bca4:	ldr	r0, [fp, #-8]
   1bca8:	movw	r1, #128	; 0x80
   1bcac:	str	r1, [r0]
   1bcb0:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bcb4:	ldr	r0, [fp, #-16]
   1bcb8:	and	r0, r0, #8192	; 0x2000
   1bcbc:	cmp	r0, #0
   1bcc0:	bne	1bcdc <__assert_fail@plt+0xa7d8>
   1bcc4:	ldr	r0, [fp, #-8]
   1bcc8:	ldr	r1, [r0, #4]
   1bccc:	mvn	r2, #255	; 0xff
   1bcd0:	and	r1, r1, r2
   1bcd4:	orr	r1, r1, #8
   1bcd8:	str	r1, [r0, #4]
   1bcdc:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bce0:	ldr	r0, [fp, #-16]
   1bce4:	and	r0, r0, #8192	; 0x2000
   1bce8:	cmp	r0, #0
   1bcec:	bne	1bd08 <__assert_fail@plt+0xa804>
   1bcf0:	ldr	r0, [fp, #-8]
   1bcf4:	ldr	r1, [r0, #4]
   1bcf8:	mvn	r2, #255	; 0xff
   1bcfc:	and	r1, r1, r2
   1bd00:	orr	r1, r1, #9
   1bd04:	str	r1, [r0, #4]
   1bd08:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bd0c:	ldr	r0, [fp, #-16]
   1bd10:	and	r0, r0, #1024	; 0x400
   1bd14:	cmp	r0, #0
   1bd18:	bne	1bd44 <__assert_fail@plt+0xa840>
   1bd1c:	ldr	r0, [fp, #-16]
   1bd20:	and	r0, r0, #2
   1bd24:	cmp	r0, #0
   1bd28:	beq	1bd44 <__assert_fail@plt+0xa840>
   1bd2c:	ldr	r0, [fp, #-8]
   1bd30:	ldr	r1, [r0, #4]
   1bd34:	mvn	r2, #255	; 0xff
   1bd38:	and	r1, r1, r2
   1bd3c:	orr	r1, r1, #18
   1bd40:	str	r1, [r0, #4]
   1bd44:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bd48:	ldr	r0, [fp, #-16]
   1bd4c:	and	r0, r0, #1024	; 0x400
   1bd50:	cmp	r0, #0
   1bd54:	bne	1bd80 <__assert_fail@plt+0xa87c>
   1bd58:	ldr	r0, [fp, #-16]
   1bd5c:	and	r0, r0, #2
   1bd60:	cmp	r0, #0
   1bd64:	beq	1bd80 <__assert_fail@plt+0xa87c>
   1bd68:	ldr	r0, [fp, #-8]
   1bd6c:	ldr	r1, [r0, #4]
   1bd70:	mvn	r2, #255	; 0xff
   1bd74:	and	r1, r1, r2
   1bd78:	orr	r1, r1, #19
   1bd7c:	str	r1, [r0, #4]
   1bd80:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bd84:	ldr	r0, [fp, #-16]
   1bd88:	and	r0, r0, #512	; 0x200
   1bd8c:	cmp	r0, #0
   1bd90:	beq	1bdbc <__assert_fail@plt+0xa8b8>
   1bd94:	ldr	r0, [fp, #-16]
   1bd98:	and	r0, r0, #4096	; 0x1000
   1bd9c:	cmp	r0, #0
   1bda0:	bne	1bdbc <__assert_fail@plt+0xa8b8>
   1bda4:	ldr	r0, [fp, #-8]
   1bda8:	ldr	r1, [r0, #4]
   1bdac:	mvn	r2, #255	; 0xff
   1bdb0:	and	r1, r1, r2
   1bdb4:	orr	r1, r1, #23
   1bdb8:	str	r1, [r0, #4]
   1bdbc:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bdc0:	ldr	r0, [fp, #-16]
   1bdc4:	and	r0, r0, #512	; 0x200
   1bdc8:	cmp	r0, #0
   1bdcc:	beq	1bdf8 <__assert_fail@plt+0xa8f4>
   1bdd0:	ldr	r0, [fp, #-16]
   1bdd4:	and	r0, r0, #4096	; 0x1000
   1bdd8:	cmp	r0, #0
   1bddc:	bne	1bdf8 <__assert_fail@plt+0xa8f4>
   1bde0:	ldr	r0, [fp, #-8]
   1bde4:	ldr	r1, [r0, #4]
   1bde8:	mvn	r2, #255	; 0xff
   1bdec:	and	r1, r1, r2
   1bdf0:	orr	r1, r1, #24
   1bdf4:	str	r1, [r0, #4]
   1bdf8:	b	1be00 <__assert_fail@plt+0xa8fc>
   1bdfc:	b	1be00 <__assert_fail@plt+0xa8fc>
   1be00:	movw	r0, #2
   1be04:	str	r0, [fp, #-4]
   1be08:	b	1c468 <__assert_fail@plt+0xaf64>
   1be0c:	ldr	r0, [fp, #-8]
   1be10:	ldr	r1, [r0, #4]
   1be14:	mvn	r2, #255	; 0xff
   1be18:	and	r1, r1, r2
   1be1c:	orr	r1, r1, #1
   1be20:	str	r1, [r0, #4]
   1be24:	ldr	r0, [fp, #-12]
   1be28:	ldr	r0, [r0, #80]	; 0x50
   1be2c:	cmp	r0, #1
   1be30:	ble	1beb0 <__assert_fail@plt+0xa9ac>
   1be34:	ldr	r0, [fp, #-12]
   1be38:	ldr	r1, [fp, #-12]
   1be3c:	ldr	r1, [r1, #40]	; 0x28
   1be40:	bl	1c638 <__assert_fail@plt+0xb134>
   1be44:	str	r0, [fp, #-28]	; 0xffffffe4
   1be48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1be4c:	bl	11408 <iswalnum@plt>
   1be50:	cmp	r0, #0
   1be54:	movw	r0, #1
   1be58:	str	r0, [sp, #8]
   1be5c:	bne	1be74 <__assert_fail@plt+0xa970>
   1be60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1be64:	cmp	r0, #95	; 0x5f
   1be68:	movw	r0, #0
   1be6c:	moveq	r0, #1
   1be70:	str	r0, [sp, #8]
   1be74:	ldr	r0, [sp, #8]
   1be78:	and	r0, r0, #1
   1be7c:	cmp	r0, #0
   1be80:	movw	r0, #0
   1be84:	movne	r0, #1
   1be88:	and	r0, r0, #1
   1be8c:	ldr	r1, [fp, #-8]
   1be90:	ldr	r2, [r1, #4]
   1be94:	and	r0, r0, #1
   1be98:	lsl	r0, r0, #22
   1be9c:	mvn	r3, #4194304	; 0x400000
   1bea0:	and	r2, r2, r3
   1bea4:	orr	r0, r2, r0
   1bea8:	str	r0, [r1, #4]
   1beac:	b	1bf20 <__assert_fail@plt+0xaa1c>
   1beb0:	bl	113b4 <__ctype_b_loc@plt>
   1beb4:	ldr	r0, [r0]
   1beb8:	ldr	r1, [fp, #-8]
   1bebc:	ldrb	r1, [r1]
   1bec0:	mov	r2, r1
   1bec4:	add	r0, r0, r1, lsl #1
   1bec8:	ldrh	r0, [r0]
   1becc:	and	r0, r0, #8
   1bed0:	cmp	r0, #0
   1bed4:	movw	r0, #1
   1bed8:	str	r0, [sp, #4]
   1bedc:	bne	1bef8 <__assert_fail@plt+0xa9f4>
   1bee0:	ldr	r0, [fp, #-8]
   1bee4:	ldrb	r0, [r0]
   1bee8:	cmp	r0, #95	; 0x5f
   1beec:	movw	r0, #0
   1bef0:	moveq	r0, #1
   1bef4:	str	r0, [sp, #4]
   1bef8:	ldr	r0, [sp, #4]
   1befc:	and	r0, r0, #1
   1bf00:	ldr	r1, [fp, #-8]
   1bf04:	ldr	r2, [r1, #4]
   1bf08:	and	r0, r0, #1
   1bf0c:	lsl	r0, r0, #22
   1bf10:	mvn	r3, #4194304	; 0x400000
   1bf14:	and	r2, r2, r3
   1bf18:	orr	r0, r2, r0
   1bf1c:	str	r0, [r1, #4]
   1bf20:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1bf24:	sub	r0, r0, #10
   1bf28:	cmp	r0, #115	; 0x73
   1bf2c:	str	r0, [sp]
   1bf30:	bhi	1c45c <__assert_fail@plt+0xaf58>
   1bf34:	add	r0, pc, #8
   1bf38:	ldr	r1, [sp]
   1bf3c:	ldr	r0, [r0, r1, lsl #2]
   1bf40:	mov	pc, r0
   1bf44:	andeq	ip, r1, r4, lsl r1
   1bf48:	andeq	ip, r1, ip, asr r4
   1bf4c:	andeq	ip, r1, ip, asr r4
   1bf50:	andeq	ip, r1, ip, asr r4
   1bf54:	andeq	ip, r1, ip, asr r4
   1bf58:	andeq	ip, r1, ip, asr r4
   1bf5c:	andeq	ip, r1, ip, asr r4
   1bf60:	andeq	ip, r1, ip, asr r4
   1bf64:	andeq	ip, r1, ip, asr r4
   1bf68:	andeq	ip, r1, ip, asr r4
   1bf6c:	andeq	ip, r1, ip, asr r4
   1bf70:	andeq	ip, r1, ip, asr r4
   1bf74:	andeq	ip, r1, ip, asr r4
   1bf78:	andeq	ip, r1, ip, asr r4
   1bf7c:	andeq	ip, r1, ip, asr r4
   1bf80:	andeq	ip, r1, ip, asr r4
   1bf84:	andeq	ip, r1, ip, asr r4
   1bf88:	andeq	ip, r1, ip, asr r4
   1bf8c:	andeq	ip, r1, ip, asr r4
   1bf90:	andeq	ip, r1, ip, asr r4
   1bf94:	andeq	ip, r1, ip, asr r4
   1bf98:	andeq	ip, r1, ip, asr r4
   1bf9c:	andeq	ip, r1, ip, asr r4
   1bfa0:	andeq	ip, r1, ip, asr r4
   1bfa4:	andeq	ip, r1, ip, asr r4
   1bfa8:	andeq	ip, r1, ip, asr r4
   1bfac:	andeq	ip, r1, ip, lsr #7
   1bfb0:	andeq	ip, r1, ip, asr r4
   1bfb4:	andeq	ip, r1, ip, asr r4
   1bfb8:	andeq	ip, r1, ip, asr r4
   1bfbc:	andeq	ip, r1, r8, lsl #5
   1bfc0:			; <UNDEFINED> instruction: 0x0001c2b4
   1bfc4:	andeq	ip, r1, ip, ror r1
   1bfc8:	muleq	r1, r8, r1
   1bfcc:	andeq	ip, r1, ip, asr r4
   1bfd0:	andeq	ip, r1, ip, asr r4
   1bfd4:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1bfd8:	andeq	ip, r1, ip, asr r4
   1bfdc:	andeq	ip, r1, ip, asr r4
   1bfe0:	andeq	ip, r1, ip, asr r4
   1bfe4:	andeq	ip, r1, ip, asr r4
   1bfe8:	andeq	ip, r1, ip, asr r4
   1bfec:	andeq	ip, r1, ip, asr r4
   1bff0:	andeq	ip, r1, ip, asr r4
   1bff4:	andeq	ip, r1, ip, asr r4
   1bff8:	andeq	ip, r1, ip, asr r4
   1bffc:	andeq	ip, r1, ip, asr r4
   1c000:	andeq	ip, r1, ip, asr r4
   1c004:	andeq	ip, r1, ip, asr r4
   1c008:	andeq	ip, r1, ip, asr r4
   1c00c:	andeq	ip, r1, ip, asr r4
   1c010:	andeq	ip, r1, ip, asr r4
   1c014:	andeq	ip, r1, ip, asr r4
   1c018:	ldrdeq	ip, [r1], -r4
   1c01c:	andeq	ip, r1, ip, asr r4
   1c020:	andeq	ip, r1, ip, asr r4
   1c024:	andeq	ip, r1, ip, asr r4
   1c028:	andeq	ip, r1, ip, asr r4
   1c02c:	andeq	ip, r1, ip, asr r4
   1c030:	andeq	ip, r1, ip, asr r4
   1c034:	andeq	ip, r1, ip, asr r4
   1c038:	andeq	ip, r1, ip, asr r4
   1c03c:	andeq	ip, r1, ip, asr r4
   1c040:	andeq	ip, r1, ip, asr r4
   1c044:	andeq	ip, r1, ip, asr r4
   1c048:	andeq	ip, r1, ip, asr r4
   1c04c:	andeq	ip, r1, ip, asr r4
   1c050:	andeq	ip, r1, ip, asr r4
   1c054:	andeq	ip, r1, ip, asr r4
   1c058:	andeq	ip, r1, ip, asr r4
   1c05c:	andeq	ip, r1, ip, asr r4
   1c060:	andeq	ip, r1, ip, asr r4
   1c064:	andeq	ip, r1, ip, asr r4
   1c068:	andeq	ip, r1, ip, asr r4
   1c06c:	andeq	ip, r1, ip, asr r4
   1c070:	andeq	ip, r1, ip, asr r4
   1c074:	andeq	ip, r1, ip, asr r4
   1c078:	andeq	ip, r1, ip, asr r4
   1c07c:	andeq	ip, r1, ip, asr r4
   1c080:	andeq	ip, r1, ip, asr r4
   1c084:	andeq	ip, r1, ip, asr r4
   1c088:	andeq	ip, r1, r0, ror #5
   1c08c:	andeq	ip, r1, ip, asr r4
   1c090:	andeq	ip, r1, ip, asr r4
   1c094:	andeq	ip, r1, r8, lsl r3
   1c098:	andeq	ip, r1, ip, asr r4
   1c09c:	andeq	ip, r1, ip, asr r4
   1c0a0:	andeq	ip, r1, ip, asr r4
   1c0a4:	andeq	ip, r1, ip, asr r4
   1c0a8:	andeq	ip, r1, ip, asr r4
   1c0ac:	andeq	ip, r1, ip, asr r4
   1c0b0:	andeq	ip, r1, ip, asr r4
   1c0b4:	andeq	ip, r1, ip, asr r4
   1c0b8:	andeq	ip, r1, ip, asr r4
   1c0bc:	andeq	ip, r1, ip, asr r4
   1c0c0:	andeq	ip, r1, ip, asr r4
   1c0c4:	andeq	ip, r1, ip, asr r4
   1c0c8:	andeq	ip, r1, ip, asr r4
   1c0cc:	andeq	ip, r1, ip, asr r4
   1c0d0:	andeq	ip, r1, ip, asr r4
   1c0d4:	andeq	ip, r1, ip, asr r4
   1c0d8:	andeq	ip, r1, ip, asr r4
   1c0dc:	andeq	ip, r1, ip, asr r4
   1c0e0:	andeq	ip, r1, ip, asr r4
   1c0e4:	andeq	ip, r1, ip, asr r4
   1c0e8:	andeq	ip, r1, ip, asr r4
   1c0ec:	andeq	ip, r1, ip, asr r4
   1c0f0:	andeq	ip, r1, ip, asr r4
   1c0f4:	andeq	ip, r1, ip, asr r4
   1c0f8:	andeq	ip, r1, ip, asr r4
   1c0fc:	andeq	ip, r1, ip, asr r4
   1c100:	andeq	ip, r1, ip, asr r4
   1c104:	andeq	ip, r1, ip, asr r4
   1c108:	andeq	ip, r1, r0, lsl r2
   1c10c:	andeq	ip, r1, r0, asr #2
   1c110:	andeq	ip, r1, ip, asr #4
   1c114:	ldr	r0, [fp, #-16]
   1c118:	and	r0, r0, #2048	; 0x800
   1c11c:	cmp	r0, #0
   1c120:	beq	1c13c <__assert_fail@plt+0xac38>
   1c124:	ldr	r0, [fp, #-8]
   1c128:	ldr	r1, [r0, #4]
   1c12c:	mvn	r2, #255	; 0xff
   1c130:	and	r1, r1, r2
   1c134:	orr	r1, r1, #10
   1c138:	str	r1, [r0, #4]
   1c13c:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c140:	ldr	r0, [fp, #-16]
   1c144:	and	r0, r0, #1024	; 0x400
   1c148:	cmp	r0, #0
   1c14c:	bne	1c178 <__assert_fail@plt+0xac74>
   1c150:	ldr	r0, [fp, #-16]
   1c154:	and	r0, r0, #32768	; 0x8000
   1c158:	cmp	r0, #0
   1c15c:	beq	1c178 <__assert_fail@plt+0xac74>
   1c160:	ldr	r0, [fp, #-8]
   1c164:	ldr	r1, [r0, #4]
   1c168:	mvn	r2, #255	; 0xff
   1c16c:	and	r1, r1, r2
   1c170:	orr	r1, r1, #10
   1c174:	str	r1, [r0, #4]
   1c178:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c17c:	ldr	r0, [fp, #-8]
   1c180:	ldr	r1, [r0, #4]
   1c184:	mvn	r2, #255	; 0xff
   1c188:	and	r1, r1, r2
   1c18c:	orr	r1, r1, #11
   1c190:	str	r1, [r0, #4]
   1c194:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c198:	ldr	r0, [fp, #-16]
   1c19c:	and	r0, r0, #1024	; 0x400
   1c1a0:	cmp	r0, #0
   1c1a4:	bne	1c1d0 <__assert_fail@plt+0xaccc>
   1c1a8:	ldr	r0, [fp, #-16]
   1c1ac:	and	r0, r0, #2
   1c1b0:	cmp	r0, #0
   1c1b4:	bne	1c1d0 <__assert_fail@plt+0xaccc>
   1c1b8:	ldr	r0, [fp, #-8]
   1c1bc:	ldr	r1, [r0, #4]
   1c1c0:	mvn	r2, #255	; 0xff
   1c1c4:	and	r1, r1, r2
   1c1c8:	orr	r1, r1, #18
   1c1cc:	str	r1, [r0, #4]
   1c1d0:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c1d4:	ldr	r0, [fp, #-16]
   1c1d8:	and	r0, r0, #1024	; 0x400
   1c1dc:	cmp	r0, #0
   1c1e0:	bne	1c20c <__assert_fail@plt+0xad08>
   1c1e4:	ldr	r0, [fp, #-16]
   1c1e8:	and	r0, r0, #2
   1c1ec:	cmp	r0, #0
   1c1f0:	bne	1c20c <__assert_fail@plt+0xad08>
   1c1f4:	ldr	r0, [fp, #-8]
   1c1f8:	ldr	r1, [r0, #4]
   1c1fc:	mvn	r2, #255	; 0xff
   1c200:	and	r1, r1, r2
   1c204:	orr	r1, r1, #19
   1c208:	str	r1, [r0, #4]
   1c20c:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c210:	ldr	r0, [fp, #-16]
   1c214:	and	r0, r0, #512	; 0x200
   1c218:	cmp	r0, #0
   1c21c:	beq	1c248 <__assert_fail@plt+0xad44>
   1c220:	ldr	r0, [fp, #-16]
   1c224:	and	r0, r0, #4096	; 0x1000
   1c228:	cmp	r0, #0
   1c22c:	beq	1c248 <__assert_fail@plt+0xad44>
   1c230:	ldr	r0, [fp, #-8]
   1c234:	ldr	r1, [r0, #4]
   1c238:	mvn	r2, #255	; 0xff
   1c23c:	and	r1, r1, r2
   1c240:	orr	r1, r1, #23
   1c244:	str	r1, [r0, #4]
   1c248:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c24c:	ldr	r0, [fp, #-16]
   1c250:	and	r0, r0, #512	; 0x200
   1c254:	cmp	r0, #0
   1c258:	beq	1c284 <__assert_fail@plt+0xad80>
   1c25c:	ldr	r0, [fp, #-16]
   1c260:	and	r0, r0, #4096	; 0x1000
   1c264:	cmp	r0, #0
   1c268:	beq	1c284 <__assert_fail@plt+0xad80>
   1c26c:	ldr	r0, [fp, #-8]
   1c270:	ldr	r1, [r0, #4]
   1c274:	mvn	r2, #255	; 0xff
   1c278:	and	r1, r1, r2
   1c27c:	orr	r1, r1, #24
   1c280:	str	r1, [r0, #4]
   1c284:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c288:	ldr	r0, [fp, #-16]
   1c28c:	and	r0, r0, #8192	; 0x2000
   1c290:	cmp	r0, #0
   1c294:	beq	1c2b0 <__assert_fail@plt+0xadac>
   1c298:	ldr	r0, [fp, #-8]
   1c29c:	ldr	r1, [r0, #4]
   1c2a0:	mvn	r2, #255	; 0xff
   1c2a4:	and	r1, r1, r2
   1c2a8:	orr	r1, r1, #8
   1c2ac:	str	r1, [r0, #4]
   1c2b0:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c2b4:	ldr	r0, [fp, #-16]
   1c2b8:	and	r0, r0, #8192	; 0x2000
   1c2bc:	cmp	r0, #0
   1c2c0:	beq	1c2dc <__assert_fail@plt+0xadd8>
   1c2c4:	ldr	r0, [fp, #-8]
   1c2c8:	ldr	r1, [r0, #4]
   1c2cc:	mvn	r2, #255	; 0xff
   1c2d0:	and	r1, r1, r2
   1c2d4:	orr	r1, r1, #9
   1c2d8:	str	r1, [r0, #4]
   1c2dc:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c2e0:	ldr	r0, [fp, #-8]
   1c2e4:	ldr	r1, [r0, #4]
   1c2e8:	mvn	r2, #255	; 0xff
   1c2ec:	and	r1, r1, r2
   1c2f0:	orr	r1, r1, #20
   1c2f4:	str	r1, [r0, #4]
   1c2f8:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c2fc:	ldr	r0, [fp, #-8]
   1c300:	ldr	r1, [r0, #4]
   1c304:	mvn	r2, #255	; 0xff
   1c308:	and	r1, r1, r2
   1c30c:	orr	r1, r1, #5
   1c310:	str	r1, [r0, #4]
   1c314:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c318:	ldr	r0, [pc, #340]	; 1c474 <__assert_fail@plt+0xaf70>
   1c31c:	ldr	r1, [fp, #-16]
   1c320:	and	r0, r1, r0
   1c324:	cmp	r0, #0
   1c328:	bne	1c384 <__assert_fail@plt+0xae80>
   1c32c:	ldr	r0, [fp, #-12]
   1c330:	ldr	r0, [r0, #40]	; 0x28
   1c334:	cmp	r0, #0
   1c338:	beq	1c384 <__assert_fail@plt+0xae80>
   1c33c:	ldr	r0, [fp, #-12]
   1c340:	ldr	r0, [r0, #4]
   1c344:	ldr	r1, [fp, #-12]
   1c348:	ldr	r1, [r1, #40]	; 0x28
   1c34c:	mvn	r2, #0
   1c350:	add	r1, r1, r2
   1c354:	add	r0, r0, r1
   1c358:	ldrb	r0, [r0]
   1c35c:	strb	r0, [fp, #-29]	; 0xffffffe3
   1c360:	ldr	r0, [fp, #-16]
   1c364:	and	r0, r0, #2048	; 0x800
   1c368:	cmp	r0, #0
   1c36c:	beq	1c37c <__assert_fail@plt+0xae78>
   1c370:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   1c374:	cmp	r0, #10
   1c378:	beq	1c380 <__assert_fail@plt+0xae7c>
   1c37c:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c380:	b	1c384 <__assert_fail@plt+0xae80>
   1c384:	ldr	r0, [fp, #-8]
   1c388:	ldr	r1, [r0, #4]
   1c38c:	mvn	r2, #255	; 0xff
   1c390:	and	r1, r1, r2
   1c394:	orr	r1, r1, #12
   1c398:	str	r1, [r0, #4]
   1c39c:	ldr	r0, [fp, #-8]
   1c3a0:	movw	r1, #16
   1c3a4:	str	r1, [r0]
   1c3a8:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c3ac:	ldr	r0, [fp, #-16]
   1c3b0:	and	r0, r0, #8
   1c3b4:	cmp	r0, #0
   1c3b8:	bne	1c434 <__assert_fail@plt+0xaf30>
   1c3bc:	ldr	r0, [fp, #-12]
   1c3c0:	ldr	r0, [r0, #40]	; 0x28
   1c3c4:	add	r0, r0, #1
   1c3c8:	ldr	r1, [fp, #-12]
   1c3cc:	ldr	r1, [r1, #48]	; 0x30
   1c3d0:	cmp	r0, r1
   1c3d4:	beq	1c434 <__assert_fail@plt+0xaf30>
   1c3d8:	ldr	r0, [fp, #-12]
   1c3dc:	ldr	r1, [r0, #40]	; 0x28
   1c3e0:	add	r1, r1, #1
   1c3e4:	str	r1, [r0, #40]	; 0x28
   1c3e8:	ldr	r1, [fp, #-12]
   1c3ec:	ldr	r2, [fp, #-16]
   1c3f0:	add	r0, sp, #24
   1c3f4:	bl	1b60c <__assert_fail@plt+0xa108>
   1c3f8:	ldr	r1, [fp, #-12]
   1c3fc:	ldr	r2, [r1, #40]	; 0x28
   1c400:	mvn	r3, #0
   1c404:	add	r2, r2, r3
   1c408:	str	r2, [r1, #40]	; 0x28
   1c40c:	ldr	r1, [sp, #28]
   1c410:	and	r1, r1, #255	; 0xff
   1c414:	cmp	r1, #10
   1c418:	beq	1c430 <__assert_fail@plt+0xaf2c>
   1c41c:	ldr	r0, [sp, #28]
   1c420:	and	r0, r0, #255	; 0xff
   1c424:	cmp	r0, #9
   1c428:	beq	1c430 <__assert_fail@plt+0xaf2c>
   1c42c:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c430:	b	1c434 <__assert_fail@plt+0xaf30>
   1c434:	ldr	r0, [fp, #-8]
   1c438:	ldr	r1, [r0, #4]
   1c43c:	mvn	r2, #255	; 0xff
   1c440:	and	r1, r1, r2
   1c444:	orr	r1, r1, #12
   1c448:	str	r1, [r0, #4]
   1c44c:	ldr	r0, [fp, #-8]
   1c450:	movw	r1, #32
   1c454:	str	r1, [r0]
   1c458:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c45c:	b	1c460 <__assert_fail@plt+0xaf5c>
   1c460:	movw	r0, #1
   1c464:	str	r0, [fp, #-4]
   1c468:	ldr	r0, [fp, #-4]
   1c46c:	mov	sp, fp
   1c470:	pop	{fp, pc}
   1c474:	addeq	r0, r0, r8
   1c478:	sub	sp, sp, #20
   1c47c:	str	r0, [sp, #12]
   1c480:	str	r1, [sp, #8]
   1c484:	ldr	r0, [sp, #12]
   1c488:	ldrsb	r0, [r0, #75]	; 0x4b
   1c48c:	cmp	r0, #0
   1c490:	movw	r0, #0
   1c494:	movne	r0, #1
   1c498:	mvn	r1, #0
   1c49c:	eor	r0, r0, r1
   1c4a0:	tst	r0, #1
   1c4a4:	beq	1c4d0 <__assert_fail@plt+0xafcc>
   1c4a8:	ldr	r0, [sp, #12]
   1c4ac:	ldr	r0, [r0, #4]
   1c4b0:	ldr	r1, [sp, #12]
   1c4b4:	ldr	r1, [r1, #40]	; 0x28
   1c4b8:	ldr	r2, [sp, #8]
   1c4bc:	add	r1, r1, r2
   1c4c0:	add	r0, r0, r1
   1c4c4:	ldrb	r0, [r0]
   1c4c8:	strb	r0, [sp, #19]
   1c4cc:	b	1c62c <__assert_fail@plt+0xb128>
   1c4d0:	ldr	r0, [sp, #12]
   1c4d4:	ldr	r0, [r0, #80]	; 0x50
   1c4d8:	cmp	r0, #1
   1c4dc:	ble	1c578 <__assert_fail@plt+0xb074>
   1c4e0:	ldr	r0, [sp, #12]
   1c4e4:	ldr	r1, [r0, #8]
   1c4e8:	ldr	r0, [r0, #40]	; 0x28
   1c4ec:	ldr	r2, [sp, #8]
   1c4f0:	add	r0, r0, r2
   1c4f4:	add	r0, r1, r0, lsl #2
   1c4f8:	ldr	r0, [r0]
   1c4fc:	cmn	r0, #1
   1c500:	beq	1c550 <__assert_fail@plt+0xb04c>
   1c504:	ldr	r0, [sp, #12]
   1c508:	ldr	r0, [r0, #28]
   1c50c:	ldr	r1, [sp, #12]
   1c510:	ldr	r1, [r1, #40]	; 0x28
   1c514:	ldr	r2, [sp, #8]
   1c518:	add	r1, r1, r2
   1c51c:	add	r1, r1, #1
   1c520:	cmp	r0, r1
   1c524:	beq	1c578 <__assert_fail@plt+0xb074>
   1c528:	ldr	r0, [sp, #12]
   1c52c:	ldr	r1, [r0, #8]
   1c530:	ldr	r0, [r0, #40]	; 0x28
   1c534:	ldr	r2, [sp, #8]
   1c538:	add	r0, r0, r2
   1c53c:	add	r0, r0, #1
   1c540:	add	r0, r1, r0, lsl #2
   1c544:	ldr	r0, [r0]
   1c548:	cmn	r0, #1
   1c54c:	bne	1c578 <__assert_fail@plt+0xb074>
   1c550:	ldr	r0, [sp, #12]
   1c554:	ldr	r0, [r0, #4]
   1c558:	ldr	r1, [sp, #12]
   1c55c:	ldr	r1, [r1, #40]	; 0x28
   1c560:	ldr	r2, [sp, #8]
   1c564:	add	r1, r1, r2
   1c568:	add	r0, r0, r1
   1c56c:	ldrb	r0, [r0]
   1c570:	strb	r0, [sp, #19]
   1c574:	b	1c62c <__assert_fail@plt+0xb128>
   1c578:	ldr	r0, [sp, #12]
   1c57c:	ldr	r0, [r0, #40]	; 0x28
   1c580:	ldr	r1, [sp, #8]
   1c584:	add	r0, r0, r1
   1c588:	str	r0, [sp]
   1c58c:	ldr	r0, [sp, #12]
   1c590:	ldrsb	r0, [r0, #76]	; 0x4c
   1c594:	cmp	r0, #0
   1c598:	beq	1c5b4 <__assert_fail@plt+0xb0b0>
   1c59c:	ldr	r0, [sp, #12]
   1c5a0:	ldr	r0, [r0, #12]
   1c5a4:	ldr	r1, [sp]
   1c5a8:	add	r0, r0, r1, lsl #2
   1c5ac:	ldr	r0, [r0]
   1c5b0:	str	r0, [sp]
   1c5b4:	ldr	r0, [sp, #12]
   1c5b8:	ldr	r0, [r0]
   1c5bc:	ldr	r1, [sp, #12]
   1c5c0:	ldr	r1, [r1, #24]
   1c5c4:	ldr	r2, [sp]
   1c5c8:	add	r1, r1, r2
   1c5cc:	add	r0, r0, r1
   1c5d0:	ldrb	r0, [r0]
   1c5d4:	str	r0, [sp, #4]
   1c5d8:	ldr	r0, [sp, #12]
   1c5dc:	ldrb	r0, [r0, #76]	; 0x4c
   1c5e0:	cmp	r0, #0
   1c5e4:	beq	1c624 <__assert_fail@plt+0xb120>
   1c5e8:	ldr	r0, [sp, #4]
   1c5ec:	mvn	r1, #127	; 0x7f
   1c5f0:	and	r0, r0, r1
   1c5f4:	cmp	r0, #0
   1c5f8:	beq	1c624 <__assert_fail@plt+0xb120>
   1c5fc:	ldr	r0, [sp, #12]
   1c600:	ldr	r0, [r0, #4]
   1c604:	ldr	r1, [sp, #12]
   1c608:	ldr	r1, [r1, #40]	; 0x28
   1c60c:	ldr	r2, [sp, #8]
   1c610:	add	r1, r1, r2
   1c614:	add	r0, r0, r1
   1c618:	ldrb	r0, [r0]
   1c61c:	strb	r0, [sp, #19]
   1c620:	b	1c62c <__assert_fail@plt+0xb128>
   1c624:	ldr	r0, [sp, #4]
   1c628:	strb	r0, [sp, #19]
   1c62c:	ldrb	r0, [sp, #19]
   1c630:	add	sp, sp, #20
   1c634:	bx	lr
   1c638:	sub	sp, sp, #12
   1c63c:	str	r0, [sp, #4]
   1c640:	str	r1, [sp]
   1c644:	ldr	r0, [sp, #4]
   1c648:	ldr	r0, [r0, #80]	; 0x50
   1c64c:	cmp	r0, #1
   1c650:	bne	1c670 <__assert_fail@plt+0xb16c>
   1c654:	ldr	r0, [sp, #4]
   1c658:	ldr	r0, [r0, #4]
   1c65c:	ldr	r1, [sp]
   1c660:	add	r0, r0, r1
   1c664:	ldrb	r0, [r0]
   1c668:	str	r0, [sp, #8]
   1c66c:	b	1c688 <__assert_fail@plt+0xb184>
   1c670:	ldr	r0, [sp, #4]
   1c674:	ldr	r0, [r0, #8]
   1c678:	ldr	r1, [sp]
   1c67c:	add	r0, r0, r1, lsl #2
   1c680:	ldr	r0, [r0]
   1c684:	str	r0, [sp, #8]
   1c688:	ldr	r0, [sp, #8]
   1c68c:	add	sp, sp, #12
   1c690:	bx	lr
   1c694:	push	{r4, r5, fp, lr}
   1c698:	add	fp, sp, #8
   1c69c:	sub	sp, sp, #72	; 0x48
   1c6a0:	ldr	ip, [fp, #12]
   1c6a4:	ldr	lr, [fp, #8]
   1c6a8:	str	r0, [fp, #-16]
   1c6ac:	str	r1, [fp, #-20]	; 0xffffffec
   1c6b0:	str	r2, [fp, #-24]	; 0xffffffe8
   1c6b4:	str	r3, [fp, #-28]	; 0xffffffe4
   1c6b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6bc:	ldr	r0, [r0]
   1c6c0:	str	r0, [sp, #40]	; 0x28
   1c6c4:	ldr	r0, [fp, #-16]
   1c6c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c6cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c6d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c6d4:	ldr	r4, [fp, #8]
   1c6d8:	ldr	r5, [fp, #12]
   1c6dc:	str	r4, [sp]
   1c6e0:	str	r5, [sp, #4]
   1c6e4:	str	ip, [sp, #32]
   1c6e8:	str	lr, [sp, #28]
   1c6ec:	bl	1cabc <__assert_fail@plt+0xb5b8>
   1c6f0:	str	r0, [fp, #-32]	; 0xffffffe0
   1c6f4:	ldr	r0, [fp, #12]
   1c6f8:	ldr	r0, [r0]
   1c6fc:	cmp	r0, #0
   1c700:	movw	r0, #0
   1c704:	str	r0, [sp, #24]
   1c708:	beq	1c724 <__assert_fail@plt+0xb220>
   1c70c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c710:	movw	r1, #0
   1c714:	cmp	r0, r1
   1c718:	movw	r0, #0
   1c71c:	moveq	r0, #1
   1c720:	str	r0, [sp, #24]
   1c724:	ldr	r0, [sp, #24]
   1c728:	tst	r0, #1
   1c72c:	beq	1c73c <__assert_fail@plt+0xb238>
   1c730:	movw	r0, #0
   1c734:	str	r0, [fp, #-12]
   1c738:	b	1c914 <__assert_fail@plt+0xb410>
   1c73c:	b	1c740 <__assert_fail@plt+0xb23c>
   1c740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c744:	ldr	r0, [r0, #4]
   1c748:	and	r0, r0, #255	; 0xff
   1c74c:	cmp	r0, #10
   1c750:	movw	r0, #0
   1c754:	str	r0, [sp, #20]
   1c758:	beq	1c7b0 <__assert_fail@plt+0xb2ac>
   1c75c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c760:	ldr	r0, [r0, #4]
   1c764:	and	r0, r0, #255	; 0xff
   1c768:	cmp	r0, #2
   1c76c:	movw	r0, #0
   1c770:	str	r0, [sp, #20]
   1c774:	beq	1c7b0 <__assert_fail@plt+0xb2ac>
   1c778:	ldr	r0, [fp, #8]
   1c77c:	cmp	r0, #0
   1c780:	movw	r0, #1
   1c784:	str	r0, [sp, #16]
   1c788:	beq	1c7a8 <__assert_fail@plt+0xb2a4>
   1c78c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c790:	ldr	r0, [r0, #4]
   1c794:	and	r0, r0, #255	; 0xff
   1c798:	cmp	r0, #9
   1c79c:	movw	r0, #0
   1c7a0:	movne	r0, #1
   1c7a4:	str	r0, [sp, #16]
   1c7a8:	ldr	r0, [sp, #16]
   1c7ac:	str	r0, [sp, #20]
   1c7b0:	ldr	r0, [sp, #20]
   1c7b4:	tst	r0, #1
   1c7b8:	beq	1c90c <__assert_fail@plt+0xb408>
   1c7bc:	ldr	r0, [fp, #-16]
   1c7c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c7c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c7c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c7cc:	ldr	ip, [fp, #8]
   1c7d0:	ldr	lr, [fp, #12]
   1c7d4:	str	ip, [sp]
   1c7d8:	str	lr, [sp, #4]
   1c7dc:	bl	1cabc <__assert_fail@plt+0xb5b8>
   1c7e0:	str	r0, [fp, #-36]	; 0xffffffdc
   1c7e4:	ldr	r0, [fp, #12]
   1c7e8:	ldr	r0, [r0]
   1c7ec:	cmp	r0, #0
   1c7f0:	movw	r0, #0
   1c7f4:	str	r0, [sp, #12]
   1c7f8:	beq	1c814 <__assert_fail@plt+0xb310>
   1c7fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c800:	movw	r1, #0
   1c804:	cmp	r0, r1
   1c808:	movw	r0, #0
   1c80c:	moveq	r0, #1
   1c810:	str	r0, [sp, #12]
   1c814:	ldr	r0, [sp, #12]
   1c818:	tst	r0, #1
   1c81c:	beq	1c850 <__assert_fail@plt+0xb34c>
   1c820:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c824:	movw	r1, #0
   1c828:	cmp	r0, r1
   1c82c:	beq	1c844 <__assert_fail@plt+0xb340>
   1c830:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c834:	movw	r1, #51856	; 0xca90
   1c838:	movt	r1, #1
   1c83c:	movw	r2, #0
   1c840:	bl	1c920 <__assert_fail@plt+0xb41c>
   1c844:	movw	r0, #0
   1c848:	str	r0, [fp, #-12]
   1c84c:	b	1c914 <__assert_fail@plt+0xb410>
   1c850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c854:	movw	r1, #0
   1c858:	cmp	r0, r1
   1c85c:	beq	1c8ec <__assert_fail@plt+0xb3e8>
   1c860:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c864:	movw	r1, #0
   1c868:	cmp	r0, r1
   1c86c:	beq	1c8ec <__assert_fail@plt+0xb3e8>
   1c870:	ldr	r0, [sp, #40]	; 0x28
   1c874:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c878:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c87c:	movw	r3, #16
   1c880:	bl	1b530 <__assert_fail@plt+0xa02c>
   1c884:	str	r0, [sp, #36]	; 0x24
   1c888:	ldr	r0, [sp, #36]	; 0x24
   1c88c:	movw	r1, #0
   1c890:	cmp	r0, r1
   1c894:	bne	1c8e0 <__assert_fail@plt+0xb3dc>
   1c898:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c89c:	movw	r1, #51856	; 0xca90
   1c8a0:	movt	r1, #1
   1c8a4:	movw	r2, #0
   1c8a8:	bl	1c920 <__assert_fail@plt+0xb41c>
   1c8ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c8b0:	str	r0, [sp, #8]
   1c8b4:	mov	r0, r1
   1c8b8:	movw	r1, #51856	; 0xca90
   1c8bc:	movt	r1, #1
   1c8c0:	movw	r2, #0
   1c8c4:	bl	1c920 <__assert_fail@plt+0xb41c>
   1c8c8:	ldr	r1, [fp, #12]
   1c8cc:	movw	r2, #12
   1c8d0:	str	r2, [r1]
   1c8d4:	movw	r1, #0
   1c8d8:	str	r1, [fp, #-12]
   1c8dc:	b	1c914 <__assert_fail@plt+0xb410>
   1c8e0:	ldr	r0, [sp, #36]	; 0x24
   1c8e4:	str	r0, [fp, #-32]	; 0xffffffe0
   1c8e8:	b	1c908 <__assert_fail@plt+0xb404>
   1c8ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c8f0:	movw	r1, #0
   1c8f4:	cmp	r0, r1
   1c8f8:	bne	1c904 <__assert_fail@plt+0xb400>
   1c8fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c900:	str	r0, [fp, #-32]	; 0xffffffe0
   1c904:	b	1c908 <__assert_fail@plt+0xb404>
   1c908:	b	1c740 <__assert_fail@plt+0xb23c>
   1c90c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c910:	str	r0, [fp, #-12]
   1c914:	ldr	r0, [fp, #-12]
   1c918:	sub	sp, fp, #8
   1c91c:	pop	{r4, r5, fp, pc}
   1c920:	push	{fp, lr}
   1c924:	mov	fp, sp
   1c928:	sub	sp, sp, #40	; 0x28
   1c92c:	str	r0, [fp, #-8]
   1c930:	str	r1, [fp, #-12]
   1c934:	str	r2, [fp, #-16]
   1c938:	ldr	r0, [fp, #-8]
   1c93c:	str	r0, [sp, #20]
   1c940:	b	1c944 <__assert_fail@plt+0xb440>
   1c944:	ldr	r0, [sp, #20]
   1c948:	ldr	r0, [r0, #4]
   1c94c:	movw	r1, #0
   1c950:	cmp	r0, r1
   1c954:	movw	r0, #1
   1c958:	str	r0, [sp, #8]
   1c95c:	bne	1c97c <__assert_fail@plt+0xb478>
   1c960:	ldr	r0, [sp, #20]
   1c964:	ldr	r0, [r0, #8]
   1c968:	movw	r1, #0
   1c96c:	cmp	r0, r1
   1c970:	movw	r0, #0
   1c974:	movne	r0, #1
   1c978:	str	r0, [sp, #8]
   1c97c:	ldr	r0, [sp, #8]
   1c980:	tst	r0, #1
   1c984:	beq	1c9bc <__assert_fail@plt+0xb4b8>
   1c988:	ldr	r0, [sp, #20]
   1c98c:	ldr	r0, [r0, #4]
   1c990:	movw	r1, #0
   1c994:	cmp	r0, r1
   1c998:	beq	1c9ac <__assert_fail@plt+0xb4a8>
   1c99c:	ldr	r0, [sp, #20]
   1c9a0:	ldr	r0, [r0, #4]
   1c9a4:	str	r0, [sp, #20]
   1c9a8:	b	1c9b8 <__assert_fail@plt+0xb4b4>
   1c9ac:	ldr	r0, [sp, #20]
   1c9b0:	ldr	r0, [r0, #8]
   1c9b4:	str	r0, [sp, #20]
   1c9b8:	b	1c944 <__assert_fail@plt+0xb440>
   1c9bc:	b	1c9c0 <__assert_fail@plt+0xb4bc>
   1c9c0:	ldr	r0, [fp, #-12]
   1c9c4:	ldr	r1, [fp, #-16]
   1c9c8:	ldr	r2, [sp, #20]
   1c9cc:	str	r0, [sp, #4]
   1c9d0:	mov	r0, r1
   1c9d4:	mov	r1, r2
   1c9d8:	ldr	r2, [sp, #4]
   1c9dc:	blx	r2
   1c9e0:	str	r0, [sp, #12]
   1c9e4:	ldr	r0, [sp, #12]
   1c9e8:	cmp	r0, #0
   1c9ec:	beq	1c9fc <__assert_fail@plt+0xb4f8>
   1c9f0:	ldr	r0, [sp, #12]
   1c9f4:	str	r0, [fp, #-4]
   1c9f8:	b	1ca84 <__assert_fail@plt+0xb580>
   1c9fc:	ldr	r0, [sp, #20]
   1ca00:	ldr	r0, [r0]
   1ca04:	movw	r1, #0
   1ca08:	cmp	r0, r1
   1ca0c:	bne	1ca1c <__assert_fail@plt+0xb518>
   1ca10:	movw	r0, #0
   1ca14:	str	r0, [fp, #-4]
   1ca18:	b	1ca84 <__assert_fail@plt+0xb580>
   1ca1c:	ldr	r0, [sp, #20]
   1ca20:	str	r0, [sp, #16]
   1ca24:	ldr	r0, [sp, #20]
   1ca28:	ldr	r0, [r0]
   1ca2c:	str	r0, [sp, #20]
   1ca30:	ldr	r0, [sp, #20]
   1ca34:	ldr	r0, [r0, #8]
   1ca38:	ldr	r1, [sp, #16]
   1ca3c:	cmp	r0, r1
   1ca40:	movw	r0, #1
   1ca44:	str	r0, [sp]
   1ca48:	beq	1ca68 <__assert_fail@plt+0xb564>
   1ca4c:	ldr	r0, [sp, #20]
   1ca50:	ldr	r0, [r0, #8]
   1ca54:	movw	r1, #0
   1ca58:	cmp	r0, r1
   1ca5c:	movw	r0, #0
   1ca60:	moveq	r0, #1
   1ca64:	str	r0, [sp]
   1ca68:	ldr	r0, [sp]
   1ca6c:	tst	r0, #1
   1ca70:	bne	1c9c0 <__assert_fail@plt+0xb4bc>
   1ca74:	ldr	r0, [sp, #20]
   1ca78:	ldr	r0, [r0, #8]
   1ca7c:	str	r0, [sp, #20]
   1ca80:	b	1c940 <__assert_fail@plt+0xb43c>
   1ca84:	ldr	r0, [fp, #-4]
   1ca88:	mov	sp, fp
   1ca8c:	pop	{fp, pc}
   1ca90:	push	{fp, lr}
   1ca94:	mov	fp, sp
   1ca98:	sub	sp, sp, #8
   1ca9c:	str	r0, [sp, #4]
   1caa0:	str	r1, [sp]
   1caa4:	ldr	r0, [sp]
   1caa8:	add	r0, r0, #20
   1caac:	bl	18a48 <__assert_fail@plt+0x7544>
   1cab0:	movw	r0, #0
   1cab4:	mov	sp, fp
   1cab8:	pop	{fp, pc}
   1cabc:	push	{fp, lr}
   1cac0:	mov	fp, sp
   1cac4:	sub	sp, sp, #152	; 0x98
   1cac8:	ldr	ip, [fp, #12]
   1cacc:	ldr	lr, [fp, #8]
   1cad0:	str	r0, [fp, #-8]
   1cad4:	str	r1, [fp, #-12]
   1cad8:	str	r2, [fp, #-16]
   1cadc:	str	r3, [fp, #-20]	; 0xffffffec
   1cae0:	ldr	r0, [fp, #-12]
   1cae4:	ldr	r0, [r0]
   1cae8:	str	r0, [fp, #-24]	; 0xffffffe8
   1caec:	ldr	r0, [fp, #-16]
   1caf0:	ldrb	r0, [r0, #4]
   1caf4:	sub	r0, r0, #1
   1caf8:	str	r0, [fp, #-48]	; 0xffffffd0
   1cafc:	add	r0, pc, #8
   1cb00:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1cb04:	ldr	r0, [r0, r1, lsl #2]
   1cb08:	mov	pc, r0
   1cb0c:	muleq	r1, ip, fp
   1cb10:			; <UNDEFINED> instruction: 0x0001d3bc
   1cb14:	andeq	sp, r1, r0, ror #7
   1cb18:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1cb1c:	andeq	sp, r1, ip, ror #3
   1cb20:	andeq	sp, r1, r0, ror #7
   1cb24:	andeq	sp, r1, r0, ror #7
   1cb28:	andeq	ip, r1, r8, lsl sp
   1cb2c:	andeq	ip, r1, r0, ror pc
   1cb30:			; <UNDEFINED> instruction: 0x0001d3bc
   1cb34:	strdeq	ip, [r1], -r4
   1cb38:	andeq	sp, r1, r0, lsl r0
   1cb3c:	andeq	sp, r1, r0, ror #7
   1cb40:	andeq	sp, r1, r0, ror #7
   1cb44:	andeq	sp, r1, r0, ror #7
   1cb48:	andeq	sp, r1, r0, ror #7
   1cb4c:	andeq	sp, r1, r0, ror #7
   1cb50:	strdeq	ip, [r1], -r4
   1cb54:	strdeq	ip, [r1], -r4
   1cb58:	muleq	r1, r0, sp
   1cb5c:	andeq	sp, r1, r0, ror #7
   1cb60:	andeq	sp, r1, r0, ror #7
   1cb64:	andeq	ip, r1, r8, asr #29
   1cb68:			; <UNDEFINED> instruction: 0x0001cfb0
   1cb6c:	andeq	sp, r1, r0, ror #7
   1cb70:	andeq	sp, r1, r0, ror #7
   1cb74:	andeq	sp, r1, r0, ror #7
   1cb78:	andeq	sp, r1, r0, ror #7
   1cb7c:	andeq	sp, r1, r0, ror #7
   1cb80:	andeq	sp, r1, r0, ror #7
   1cb84:	andeq	sp, r1, r0, ror #7
   1cb88:	andeq	sp, r1, ip, asr r2
   1cb8c:	andeq	sp, r1, ip, asr r2
   1cb90:	andeq	sp, r1, ip, lsl #6
   1cb94:	andeq	sp, r1, ip, lsl #6
   1cb98:	andeq	sp, r1, r8, asr #7
   1cb9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cba0:	ldr	r3, [fp, #-16]
   1cba4:	movw	r1, #0
   1cba8:	str	r1, [fp, #-52]	; 0xffffffcc
   1cbac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1cbb0:	bl	1d594 <__assert_fail@plt+0xc090>
   1cbb4:	str	r0, [fp, #-28]	; 0xffffffe4
   1cbb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cbbc:	movw	r1, #0
   1cbc0:	cmp	r0, r1
   1cbc4:	bne	1cbe0 <__assert_fail@plt+0xb6dc>
   1cbc8:	ldr	r0, [fp, #12]
   1cbcc:	movw	r1, #12
   1cbd0:	str	r1, [r0]
   1cbd4:	movw	r0, #0
   1cbd8:	str	r0, [fp, #-4]
   1cbdc:	b	1d588 <__assert_fail@plt+0xc084>
   1cbe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbe4:	ldr	r0, [r0, #92]	; 0x5c
   1cbe8:	cmp	r0, #1
   1cbec:	ble	1cd14 <__assert_fail@plt+0xb810>
   1cbf0:	b	1cbf4 <__assert_fail@plt+0xb6f0>
   1cbf4:	ldr	r0, [fp, #-8]
   1cbf8:	ldr	r0, [r0, #56]	; 0x38
   1cbfc:	ldr	r1, [fp, #-8]
   1cc00:	ldr	r1, [r1, #40]	; 0x28
   1cc04:	cmp	r0, r1
   1cc08:	movw	r0, #0
   1cc0c:	str	r0, [fp, #-56]	; 0xffffffc8
   1cc10:	ble	1cc68 <__assert_fail@plt+0xb764>
   1cc14:	ldr	r0, [fp, #-8]
   1cc18:	ldr	r0, [r0, #40]	; 0x28
   1cc1c:	ldr	r1, [fp, #-8]
   1cc20:	ldr	r1, [r1, #28]
   1cc24:	cmp	r0, r1
   1cc28:	movw	r0, #1
   1cc2c:	str	r0, [fp, #-60]	; 0xffffffc4
   1cc30:	beq	1cc58 <__assert_fail@plt+0xb754>
   1cc34:	ldr	r0, [fp, #-8]
   1cc38:	ldr	r1, [r0, #8]
   1cc3c:	ldr	r0, [r0, #40]	; 0x28
   1cc40:	add	r0, r1, r0, lsl #2
   1cc44:	ldr	r0, [r0]
   1cc48:	cmn	r0, #1
   1cc4c:	movw	r0, #0
   1cc50:	movne	r0, #1
   1cc54:	str	r0, [fp, #-60]	; 0xffffffc4
   1cc58:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1cc5c:	mvn	r1, #0
   1cc60:	eor	r0, r0, r1
   1cc64:	str	r0, [fp, #-56]	; 0xffffffc8
   1cc68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cc6c:	tst	r0, #1
   1cc70:	beq	1cd10 <__assert_fail@plt+0xb80c>
   1cc74:	ldr	r0, [fp, #-16]
   1cc78:	ldr	r1, [fp, #-8]
   1cc7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cc80:	bl	1b29c <__assert_fail@plt+0x9d98>
   1cc84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc88:	ldr	r3, [fp, #-16]
   1cc8c:	movw	r1, #0
   1cc90:	str	r1, [fp, #-64]	; 0xffffffc0
   1cc94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cc98:	bl	1d594 <__assert_fail@plt+0xc090>
   1cc9c:	str	r0, [fp, #-32]	; 0xffffffe0
   1cca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cca8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ccac:	movw	r3, #16
   1ccb0:	bl	1b530 <__assert_fail@plt+0xa02c>
   1ccb4:	str	r0, [fp, #-28]	; 0xffffffe4
   1ccb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ccbc:	movw	r1, #0
   1ccc0:	cmp	r0, r1
   1ccc4:	movw	r0, #1
   1ccc8:	str	r0, [fp, #-68]	; 0xffffffbc
   1cccc:	beq	1cce8 <__assert_fail@plt+0xb7e4>
   1ccd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ccd4:	movw	r1, #0
   1ccd8:	cmp	r0, r1
   1ccdc:	movw	r0, #0
   1cce0:	moveq	r0, #1
   1cce4:	str	r0, [fp, #-68]	; 0xffffffbc
   1cce8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1ccec:	tst	r0, #1
   1ccf0:	beq	1cd0c <__assert_fail@plt+0xb808>
   1ccf4:	ldr	r0, [fp, #12]
   1ccf8:	movw	r1, #12
   1ccfc:	str	r1, [r0]
   1cd00:	movw	r0, #0
   1cd04:	str	r0, [fp, #-4]
   1cd08:	b	1d588 <__assert_fail@plt+0xc084>
   1cd0c:	b	1cbf4 <__assert_fail@plt+0xb6f0>
   1cd10:	b	1cd14 <__assert_fail@plt+0xb810>
   1cd14:	b	1d3e0 <__assert_fail@plt+0xbedc>
   1cd18:	ldr	r0, [fp, #-8]
   1cd1c:	ldr	r1, [fp, #-12]
   1cd20:	ldr	r2, [fp, #-16]
   1cd24:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd28:	ldr	ip, [fp, #8]
   1cd2c:	add	ip, ip, #1
   1cd30:	ldr	lr, [fp, #12]
   1cd34:	str	ip, [sp]
   1cd38:	str	lr, [sp, #4]
   1cd3c:	bl	1d6f8 <__assert_fail@plt+0xc1f4>
   1cd40:	str	r0, [fp, #-28]	; 0xffffffe4
   1cd44:	ldr	r0, [fp, #12]
   1cd48:	ldr	r0, [r0]
   1cd4c:	cmp	r0, #0
   1cd50:	movw	r0, #0
   1cd54:	str	r0, [fp, #-72]	; 0xffffffb8
   1cd58:	beq	1cd74 <__assert_fail@plt+0xb870>
   1cd5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cd60:	movw	r1, #0
   1cd64:	cmp	r0, r1
   1cd68:	movw	r0, #0
   1cd6c:	moveq	r0, #1
   1cd70:	str	r0, [fp, #-72]	; 0xffffffb8
   1cd74:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1cd78:	tst	r0, #1
   1cd7c:	beq	1cd8c <__assert_fail@plt+0xb888>
   1cd80:	movw	r0, #0
   1cd84:	str	r0, [fp, #-4]
   1cd88:	b	1d588 <__assert_fail@plt+0xc084>
   1cd8c:	b	1d3e0 <__assert_fail@plt+0xbedc>
   1cd90:	ldr	r0, [fp, #-8]
   1cd94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd98:	ldr	r2, [fp, #-16]
   1cd9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cda0:	ldr	ip, [fp, #12]
   1cda4:	str	ip, [sp]
   1cda8:	bl	1d8b8 <__assert_fail@plt+0xc3b4>
   1cdac:	str	r0, [fp, #-28]	; 0xffffffe4
   1cdb0:	ldr	r0, [fp, #12]
   1cdb4:	ldr	r0, [r0]
   1cdb8:	cmp	r0, #0
   1cdbc:	movw	r0, #0
   1cdc0:	str	r0, [sp, #76]	; 0x4c
   1cdc4:	beq	1cde0 <__assert_fail@plt+0xb8dc>
   1cdc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cdcc:	movw	r1, #0
   1cdd0:	cmp	r0, r1
   1cdd4:	movw	r0, #0
   1cdd8:	moveq	r0, #1
   1cddc:	str	r0, [sp, #76]	; 0x4c
   1cde0:	ldr	r0, [sp, #76]	; 0x4c
   1cde4:	tst	r0, #1
   1cde8:	beq	1cdf8 <__assert_fail@plt+0xb8f4>
   1cdec:	movw	r0, #0
   1cdf0:	str	r0, [fp, #-4]
   1cdf4:	b	1d588 <__assert_fail@plt+0xc084>
   1cdf8:	b	1d3e0 <__assert_fail@plt+0xbedc>
   1cdfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce00:	ldr	r0, [r0, #84]	; 0x54
   1ce04:	ldr	r1, [fp, #-16]
   1ce08:	ldr	r1, [r1]
   1ce0c:	movw	r2, #1
   1ce10:	lsl	r1, r2, r1
   1ce14:	and	r0, r0, r1
   1ce18:	cmp	r0, #0
   1ce1c:	bne	1ce38 <__assert_fail@plt+0xb934>
   1ce20:	ldr	r0, [fp, #12]
   1ce24:	movw	r1, #6
   1ce28:	str	r1, [r0]
   1ce2c:	movw	r0, #0
   1ce30:	str	r0, [fp, #-4]
   1ce34:	b	1d588 <__assert_fail@plt+0xc084>
   1ce38:	ldr	r0, [fp, #-16]
   1ce3c:	ldr	r0, [r0]
   1ce40:	movw	r1, #1
   1ce44:	lsl	r0, r1, r0
   1ce48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce4c:	ldr	r2, [r1, #80]	; 0x50
   1ce50:	orr	r0, r2, r0
   1ce54:	str	r0, [r1, #80]	; 0x50
   1ce58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce5c:	ldr	r3, [fp, #-16]
   1ce60:	movw	r1, #0
   1ce64:	str	r1, [sp, #72]	; 0x48
   1ce68:	ldr	r2, [sp, #72]	; 0x48
   1ce6c:	bl	1d594 <__assert_fail@plt+0xc090>
   1ce70:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce78:	movw	r1, #0
   1ce7c:	cmp	r0, r1
   1ce80:	bne	1ce9c <__assert_fail@plt+0xb998>
   1ce84:	ldr	r0, [fp, #12]
   1ce88:	movw	r1, #12
   1ce8c:	str	r1, [r0]
   1ce90:	movw	r0, #0
   1ce94:	str	r0, [fp, #-4]
   1ce98:	b	1d588 <__assert_fail@plt+0xc084>
   1ce9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cea0:	ldr	r1, [r0, #76]	; 0x4c
   1cea4:	add	r1, r1, #1
   1cea8:	str	r1, [r0, #76]	; 0x4c
   1ceac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ceb0:	ldrb	r1, [r0, #88]	; 0x58
   1ceb4:	bic	r1, r1, #2
   1ceb8:	movw	r2, #2
   1cebc:	orr	r1, r1, r2
   1cec0:	strb	r1, [r0, #88]	; 0x58
   1cec4:	b	1d3e0 <__assert_fail@plt+0xbedc>
   1cec8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cecc:	and	r0, r0, #16777216	; 0x1000000
   1ced0:	cmp	r0, #0
   1ced4:	beq	1cef0 <__assert_fail@plt+0xb9ec>
   1ced8:	ldr	r0, [fp, #12]
   1cedc:	movw	r1, #13
   1cee0:	str	r1, [r0]
   1cee4:	movw	r0, #0
   1cee8:	str	r0, [fp, #-4]
   1ceec:	b	1d588 <__assert_fail@plt+0xc084>
   1cef0:	b	1cef4 <__assert_fail@plt+0xb9f0>
   1cef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cef8:	and	r0, r0, #32
   1cefc:	cmp	r0, #0
   1cf00:	beq	1cf1c <__assert_fail@plt+0xba18>
   1cf04:	ldr	r0, [fp, #12]
   1cf08:	movw	r1, #13
   1cf0c:	str	r1, [r0]
   1cf10:	movw	r0, #0
   1cf14:	str	r0, [fp, #-4]
   1cf18:	b	1d588 <__assert_fail@plt+0xc084>
   1cf1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf20:	and	r0, r0, #16
   1cf24:	cmp	r0, #0
   1cf28:	beq	1cf68 <__assert_fail@plt+0xba64>
   1cf2c:	ldr	r0, [fp, #-16]
   1cf30:	ldr	r1, [fp, #-8]
   1cf34:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cf38:	bl	1b29c <__assert_fail@plt+0x9d98>
   1cf3c:	ldr	r0, [fp, #-8]
   1cf40:	ldr	r1, [fp, #-12]
   1cf44:	ldr	r2, [fp, #-16]
   1cf48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf4c:	ldr	ip, [fp, #8]
   1cf50:	ldr	lr, [fp, #12]
   1cf54:	str	ip, [sp]
   1cf58:	str	lr, [sp, #4]
   1cf5c:	bl	1cabc <__assert_fail@plt+0xb5b8>
   1cf60:	str	r0, [fp, #-4]
   1cf64:	b	1d588 <__assert_fail@plt+0xc084>
   1cf68:	b	1cf6c <__assert_fail@plt+0xba68>
   1cf6c:	b	1cf70 <__assert_fail@plt+0xba6c>
   1cf70:	ldr	r0, [fp, #-16]
   1cf74:	ldr	r0, [r0, #4]
   1cf78:	and	r0, r0, #255	; 0xff
   1cf7c:	cmp	r0, #9
   1cf80:	bne	1cfac <__assert_fail@plt+0xbaa8>
   1cf84:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf88:	and	r0, r0, #131072	; 0x20000
   1cf8c:	cmp	r0, #0
   1cf90:	bne	1cfac <__assert_fail@plt+0xbaa8>
   1cf94:	ldr	r0, [fp, #12]
   1cf98:	movw	r1, #16
   1cf9c:	str	r1, [r0]
   1cfa0:	movw	r0, #0
   1cfa4:	str	r0, [fp, #-4]
   1cfa8:	b	1d588 <__assert_fail@plt+0xc084>
   1cfac:	b	1cfb0 <__assert_fail@plt+0xbaac>
   1cfb0:	ldr	r0, [fp, #-16]
   1cfb4:	ldr	r1, [r0, #4]
   1cfb8:	mvn	r2, #255	; 0xff
   1cfbc:	and	r1, r1, r2
   1cfc0:	orr	r1, r1, #1
   1cfc4:	str	r1, [r0, #4]
   1cfc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfcc:	ldr	r3, [fp, #-16]
   1cfd0:	movw	r1, #0
   1cfd4:	str	r1, [sp, #68]	; 0x44
   1cfd8:	ldr	r2, [sp, #68]	; 0x44
   1cfdc:	bl	1d594 <__assert_fail@plt+0xc090>
   1cfe0:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfe4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cfe8:	movw	r1, #0
   1cfec:	cmp	r0, r1
   1cff0:	bne	1d00c <__assert_fail@plt+0xbb08>
   1cff4:	ldr	r0, [fp, #12]
   1cff8:	movw	r1, #12
   1cffc:	str	r1, [r0]
   1d000:	movw	r0, #0
   1d004:	str	r0, [fp, #-4]
   1d008:	b	1d588 <__assert_fail@plt+0xc084>
   1d00c:	b	1d3e0 <__assert_fail@plt+0xbedc>
   1d010:	ldr	r0, [fp, #-16]
   1d014:	ldr	r0, [r0]
   1d018:	movw	r1, #783	; 0x30f
   1d01c:	and	r0, r0, r1
   1d020:	cmp	r0, #0
   1d024:	beq	1d048 <__assert_fail@plt+0xbb44>
   1d028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d02c:	ldrb	r0, [r0, #88]	; 0x58
   1d030:	ubfx	r0, r0, #4, #1
   1d034:	and	r0, r0, #255	; 0xff
   1d038:	cmp	r0, #0
   1d03c:	bne	1d048 <__assert_fail@plt+0xbb44>
   1d040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d044:	bl	1e1e0 <__assert_fail@plt+0xccdc>
   1d048:	ldr	r0, [fp, #-16]
   1d04c:	ldr	r0, [r0]
   1d050:	cmp	r0, #256	; 0x100
   1d054:	beq	1d068 <__assert_fail@plt+0xbb64>
   1d058:	ldr	r0, [fp, #-16]
   1d05c:	ldr	r0, [r0]
   1d060:	cmp	r0, #512	; 0x200
   1d064:	bne	1d188 <__assert_fail@plt+0xbc84>
   1d068:	ldr	r0, [fp, #-16]
   1d06c:	ldr	r0, [r0]
   1d070:	cmp	r0, #256	; 0x100
   1d074:	bne	1d0b0 <__assert_fail@plt+0xbbac>
   1d078:	ldr	r0, [fp, #-16]
   1d07c:	movw	r1, #6
   1d080:	str	r1, [r0]
   1d084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d088:	ldr	r3, [fp, #-16]
   1d08c:	movw	r1, #0
   1d090:	str	r1, [sp, #64]	; 0x40
   1d094:	ldr	r2, [sp, #64]	; 0x40
   1d098:	bl	1d594 <__assert_fail@plt+0xc090>
   1d09c:	str	r0, [fp, #-36]	; 0xffffffdc
   1d0a0:	ldr	r0, [fp, #-16]
   1d0a4:	movw	r1, #9
   1d0a8:	str	r1, [r0]
   1d0ac:	b	1d0e4 <__assert_fail@plt+0xbbe0>
   1d0b0:	ldr	r0, [fp, #-16]
   1d0b4:	movw	r1, #5
   1d0b8:	str	r1, [r0]
   1d0bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0c0:	ldr	r3, [fp, #-16]
   1d0c4:	movw	r1, #0
   1d0c8:	str	r1, [sp, #60]	; 0x3c
   1d0cc:	ldr	r2, [sp, #60]	; 0x3c
   1d0d0:	bl	1d594 <__assert_fail@plt+0xc090>
   1d0d4:	str	r0, [fp, #-36]	; 0xffffffdc
   1d0d8:	ldr	r0, [fp, #-16]
   1d0dc:	movw	r1, #10
   1d0e0:	str	r1, [r0]
   1d0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0e8:	ldr	r3, [fp, #-16]
   1d0ec:	movw	r1, #0
   1d0f0:	str	r1, [sp, #56]	; 0x38
   1d0f4:	ldr	r2, [sp, #56]	; 0x38
   1d0f8:	bl	1d594 <__assert_fail@plt+0xc090>
   1d0fc:	str	r0, [fp, #-40]	; 0xffffffd8
   1d100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d104:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d108:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d10c:	movw	r3, #10
   1d110:	bl	1b530 <__assert_fail@plt+0xa02c>
   1d114:	str	r0, [fp, #-28]	; 0xffffffe4
   1d118:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d11c:	movw	r1, #0
   1d120:	cmp	r0, r1
   1d124:	movw	r0, #1
   1d128:	str	r0, [sp, #52]	; 0x34
   1d12c:	beq	1d160 <__assert_fail@plt+0xbc5c>
   1d130:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d134:	movw	r1, #0
   1d138:	cmp	r0, r1
   1d13c:	movw	r0, #1
   1d140:	str	r0, [sp, #52]	; 0x34
   1d144:	beq	1d160 <__assert_fail@plt+0xbc5c>
   1d148:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d14c:	movw	r1, #0
   1d150:	cmp	r0, r1
   1d154:	movw	r0, #0
   1d158:	moveq	r0, #1
   1d15c:	str	r0, [sp, #52]	; 0x34
   1d160:	ldr	r0, [sp, #52]	; 0x34
   1d164:	tst	r0, #1
   1d168:	beq	1d184 <__assert_fail@plt+0xbc80>
   1d16c:	ldr	r0, [fp, #12]
   1d170:	movw	r1, #12
   1d174:	str	r1, [r0]
   1d178:	movw	r0, #0
   1d17c:	str	r0, [fp, #-4]
   1d180:	b	1d588 <__assert_fail@plt+0xc084>
   1d184:	b	1d1d0 <__assert_fail@plt+0xbccc>
   1d188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d18c:	ldr	r3, [fp, #-16]
   1d190:	movw	r1, #0
   1d194:	str	r1, [sp, #48]	; 0x30
   1d198:	ldr	r2, [sp, #48]	; 0x30
   1d19c:	bl	1d594 <__assert_fail@plt+0xc090>
   1d1a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d1a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d1a8:	movw	r1, #0
   1d1ac:	cmp	r0, r1
   1d1b0:	bne	1d1cc <__assert_fail@plt+0xbcc8>
   1d1b4:	ldr	r0, [fp, #12]
   1d1b8:	movw	r1, #12
   1d1bc:	str	r1, [r0]
   1d1c0:	movw	r0, #0
   1d1c4:	str	r0, [fp, #-4]
   1d1c8:	b	1d588 <__assert_fail@plt+0xc084>
   1d1cc:	b	1d1d0 <__assert_fail@plt+0xbccc>
   1d1d0:	ldr	r0, [fp, #-16]
   1d1d4:	ldr	r1, [fp, #-8]
   1d1d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d1dc:	bl	1b29c <__assert_fail@plt+0x9d98>
   1d1e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d1e4:	str	r0, [fp, #-4]
   1d1e8:	b	1d588 <__assert_fail@plt+0xc084>
   1d1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1f0:	ldr	r3, [fp, #-16]
   1d1f4:	movw	r1, #0
   1d1f8:	str	r1, [sp, #44]	; 0x2c
   1d1fc:	ldr	r2, [sp, #44]	; 0x2c
   1d200:	bl	1d594 <__assert_fail@plt+0xc090>
   1d204:	str	r0, [fp, #-28]	; 0xffffffe4
   1d208:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d20c:	movw	r1, #0
   1d210:	cmp	r0, r1
   1d214:	bne	1d230 <__assert_fail@plt+0xbd2c>
   1d218:	ldr	r0, [fp, #12]
   1d21c:	movw	r1, #12
   1d220:	str	r1, [r0]
   1d224:	movw	r0, #0
   1d228:	str	r0, [fp, #-4]
   1d22c:	b	1d588 <__assert_fail@plt+0xc084>
   1d230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d234:	ldr	r0, [r0, #92]	; 0x5c
   1d238:	cmp	r0, #1
   1d23c:	ble	1d258 <__assert_fail@plt+0xbd54>
   1d240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d244:	ldrb	r1, [r0, #88]	; 0x58
   1d248:	bic	r1, r1, #2
   1d24c:	movw	r2, #2
   1d250:	orr	r1, r1, r2
   1d254:	strb	r1, [r0, #88]	; 0x58
   1d258:	b	1d3e0 <__assert_fail@plt+0xbedc>
   1d25c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d260:	ldr	r1, [fp, #-8]
   1d264:	ldr	r1, [r1, #64]	; 0x40
   1d268:	ldr	r2, [fp, #-16]
   1d26c:	ldr	r2, [r2, #4]
   1d270:	and	r2, r2, #255	; 0xff
   1d274:	cmp	r2, #33	; 0x21
   1d278:	movw	r2, #0
   1d27c:	moveq	r2, #1
   1d280:	ldr	r3, [fp, #12]
   1d284:	movw	ip, #31900	; 0x7c9c
   1d288:	movt	ip, #3
   1d28c:	str	r2, [sp, #40]	; 0x28
   1d290:	mov	r2, ip
   1d294:	movw	ip, #30397	; 0x76bd
   1d298:	movt	ip, #3
   1d29c:	str	r3, [sp, #36]	; 0x24
   1d2a0:	mov	r3, ip
   1d2a4:	ldr	ip, [sp, #40]	; 0x28
   1d2a8:	and	lr, ip, #1
   1d2ac:	str	lr, [sp]
   1d2b0:	ldr	lr, [sp, #36]	; 0x24
   1d2b4:	str	lr, [sp, #4]
   1d2b8:	bl	1e390 <__assert_fail@plt+0xce8c>
   1d2bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2c0:	ldr	r0, [fp, #12]
   1d2c4:	ldr	r0, [r0]
   1d2c8:	cmp	r0, #0
   1d2cc:	movw	r0, #0
   1d2d0:	str	r0, [sp, #32]
   1d2d4:	beq	1d2f0 <__assert_fail@plt+0xbdec>
   1d2d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d2dc:	movw	r1, #0
   1d2e0:	cmp	r0, r1
   1d2e4:	movw	r0, #0
   1d2e8:	moveq	r0, #1
   1d2ec:	str	r0, [sp, #32]
   1d2f0:	ldr	r0, [sp, #32]
   1d2f4:	tst	r0, #1
   1d2f8:	beq	1d308 <__assert_fail@plt+0xbe04>
   1d2fc:	movw	r0, #0
   1d300:	str	r0, [fp, #-4]
   1d304:	b	1d588 <__assert_fail@plt+0xc084>
   1d308:	b	1d3e0 <__assert_fail@plt+0xbedc>
   1d30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d310:	ldr	r1, [fp, #-8]
   1d314:	ldr	r1, [r1, #64]	; 0x40
   1d318:	ldr	r2, [fp, #-16]
   1d31c:	ldr	r2, [r2, #4]
   1d320:	and	r2, r2, #255	; 0xff
   1d324:	cmp	r2, #35	; 0x23
   1d328:	movw	r2, #0
   1d32c:	moveq	r2, #1
   1d330:	ldr	r3, [fp, #12]
   1d334:	movw	ip, #31906	; 0x7ca2
   1d338:	movt	ip, #3
   1d33c:	str	r2, [sp, #28]
   1d340:	mov	r2, ip
   1d344:	movw	ip, #30738	; 0x7812
   1d348:	movt	ip, #3
   1d34c:	str	r3, [sp, #24]
   1d350:	mov	r3, ip
   1d354:	ldr	ip, [sp, #28]
   1d358:	and	lr, ip, #1
   1d35c:	str	lr, [sp]
   1d360:	ldr	lr, [sp, #24]
   1d364:	str	lr, [sp, #4]
   1d368:	bl	1e390 <__assert_fail@plt+0xce8c>
   1d36c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d370:	ldr	r0, [fp, #12]
   1d374:	ldr	r0, [r0]
   1d378:	cmp	r0, #0
   1d37c:	movw	r0, #0
   1d380:	str	r0, [sp, #20]
   1d384:	beq	1d3a0 <__assert_fail@plt+0xbe9c>
   1d388:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d38c:	movw	r1, #0
   1d390:	cmp	r0, r1
   1d394:	movw	r0, #0
   1d398:	moveq	r0, #1
   1d39c:	str	r0, [sp, #20]
   1d3a0:	ldr	r0, [sp, #20]
   1d3a4:	tst	r0, #1
   1d3a8:	beq	1d3b8 <__assert_fail@plt+0xbeb4>
   1d3ac:	movw	r0, #0
   1d3b0:	str	r0, [fp, #-4]
   1d3b4:	b	1d588 <__assert_fail@plt+0xc084>
   1d3b8:	b	1d3e0 <__assert_fail@plt+0xbedc>
   1d3bc:	movw	r0, #0
   1d3c0:	str	r0, [fp, #-4]
   1d3c4:	b	1d588 <__assert_fail@plt+0xc084>
   1d3c8:	ldr	r0, [fp, #12]
   1d3cc:	movw	r1, #5
   1d3d0:	str	r1, [r0]
   1d3d4:	movw	r0, #0
   1d3d8:	str	r0, [fp, #-4]
   1d3dc:	b	1d588 <__assert_fail@plt+0xc084>
   1d3e0:	ldr	r0, [fp, #-16]
   1d3e4:	ldr	r1, [fp, #-8]
   1d3e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d3ec:	bl	1b29c <__assert_fail@plt+0x9d98>
   1d3f0:	ldr	r0, [fp, #-16]
   1d3f4:	ldr	r0, [r0, #4]
   1d3f8:	and	r0, r0, #255	; 0xff
   1d3fc:	cmp	r0, #11
   1d400:	movw	r0, #1
   1d404:	str	r0, [sp, #16]
   1d408:	beq	1d460 <__assert_fail@plt+0xbf5c>
   1d40c:	ldr	r0, [fp, #-16]
   1d410:	ldr	r0, [r0, #4]
   1d414:	and	r0, r0, #255	; 0xff
   1d418:	cmp	r0, #18
   1d41c:	movw	r0, #1
   1d420:	str	r0, [sp, #16]
   1d424:	beq	1d460 <__assert_fail@plt+0xbf5c>
   1d428:	ldr	r0, [fp, #-16]
   1d42c:	ldr	r0, [r0, #4]
   1d430:	and	r0, r0, #255	; 0xff
   1d434:	cmp	r0, #19
   1d438:	movw	r0, #1
   1d43c:	str	r0, [sp, #16]
   1d440:	beq	1d460 <__assert_fail@plt+0xbf5c>
   1d444:	ldr	r0, [fp, #-16]
   1d448:	ldr	r0, [r0, #4]
   1d44c:	and	r0, r0, #255	; 0xff
   1d450:	cmp	r0, #23
   1d454:	movw	r0, #0
   1d458:	moveq	r0, #1
   1d45c:	str	r0, [sp, #16]
   1d460:	ldr	r0, [sp, #16]
   1d464:	tst	r0, #1
   1d468:	beq	1d580 <__assert_fail@plt+0xc07c>
   1d46c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d470:	ldr	r1, [fp, #-8]
   1d474:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d478:	ldr	r3, [fp, #-16]
   1d47c:	ldr	ip, [fp, #-20]	; 0xffffffec
   1d480:	ldr	lr, [fp, #12]
   1d484:	str	ip, [sp]
   1d488:	str	lr, [sp, #4]
   1d48c:	bl	1e6c4 <__assert_fail@plt+0xd1c0>
   1d490:	str	r0, [fp, #-44]	; 0xffffffd4
   1d494:	ldr	r0, [fp, #12]
   1d498:	ldr	r0, [r0]
   1d49c:	cmp	r0, #0
   1d4a0:	movw	r0, #0
   1d4a4:	str	r0, [sp, #12]
   1d4a8:	beq	1d4c4 <__assert_fail@plt+0xbfc0>
   1d4ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d4b0:	movw	r1, #0
   1d4b4:	cmp	r0, r1
   1d4b8:	movw	r0, #0
   1d4bc:	moveq	r0, #1
   1d4c0:	str	r0, [sp, #12]
   1d4c4:	ldr	r0, [sp, #12]
   1d4c8:	tst	r0, #1
   1d4cc:	beq	1d500 <__assert_fail@plt+0xbffc>
   1d4d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d4d4:	movw	r1, #0
   1d4d8:	cmp	r0, r1
   1d4dc:	beq	1d4f4 <__assert_fail@plt+0xbff0>
   1d4e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d4e4:	movw	r1, #51856	; 0xca90
   1d4e8:	movt	r1, #1
   1d4ec:	movw	r2, #0
   1d4f0:	bl	1c920 <__assert_fail@plt+0xb41c>
   1d4f4:	movw	r0, #0
   1d4f8:	str	r0, [fp, #-4]
   1d4fc:	b	1d588 <__assert_fail@plt+0xc084>
   1d500:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d504:	str	r0, [fp, #-28]	; 0xffffffe4
   1d508:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d50c:	and	r0, r0, #16777216	; 0x1000000
   1d510:	cmp	r0, #0
   1d514:	beq	1d57c <__assert_fail@plt+0xc078>
   1d518:	ldr	r0, [fp, #-16]
   1d51c:	ldr	r0, [r0, #4]
   1d520:	and	r0, r0, #255	; 0xff
   1d524:	cmp	r0, #11
   1d528:	beq	1d540 <__assert_fail@plt+0xc03c>
   1d52c:	ldr	r0, [fp, #-16]
   1d530:	ldr	r0, [r0, #4]
   1d534:	and	r0, r0, #255	; 0xff
   1d538:	cmp	r0, #23
   1d53c:	bne	1d57c <__assert_fail@plt+0xc078>
   1d540:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d544:	movw	r1, #0
   1d548:	cmp	r0, r1
   1d54c:	beq	1d564 <__assert_fail@plt+0xc060>
   1d550:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d554:	movw	r1, #51856	; 0xca90
   1d558:	movt	r1, #1
   1d55c:	movw	r2, #0
   1d560:	bl	1c920 <__assert_fail@plt+0xb41c>
   1d564:	ldr	r0, [fp, #12]
   1d568:	movw	r1, #13
   1d56c:	str	r1, [r0]
   1d570:	movw	r0, #0
   1d574:	str	r0, [fp, #-4]
   1d578:	b	1d588 <__assert_fail@plt+0xc084>
   1d57c:	b	1d3f0 <__assert_fail@plt+0xbeec>
   1d580:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d584:	str	r0, [fp, #-4]
   1d588:	ldr	r0, [fp, #-4]
   1d58c:	mov	sp, fp
   1d590:	pop	{fp, pc}
   1d594:	push	{fp, lr}
   1d598:	mov	fp, sp
   1d59c:	sub	sp, sp, #32
   1d5a0:	str	r0, [fp, #-8]
   1d5a4:	str	r1, [fp, #-12]
   1d5a8:	str	r2, [sp, #16]
   1d5ac:	str	r3, [sp, #12]
   1d5b0:	ldr	r0, [fp, #-8]
   1d5b4:	ldr	r0, [r0, #64]	; 0x40
   1d5b8:	cmp	r0, #31
   1d5bc:	bne	1d610 <__assert_fail@plt+0xc10c>
   1d5c0:	movw	r0, #996	; 0x3e4
   1d5c4:	bl	3354c <__assert_fail@plt+0x22048>
   1d5c8:	str	r0, [sp, #4]
   1d5cc:	ldr	r0, [sp, #4]
   1d5d0:	movw	r1, #0
   1d5d4:	cmp	r0, r1
   1d5d8:	bne	1d5e8 <__assert_fail@plt+0xc0e4>
   1d5dc:	movw	r0, #0
   1d5e0:	str	r0, [fp, #-4]
   1d5e4:	b	1d6ec <__assert_fail@plt+0xc1e8>
   1d5e8:	ldr	r0, [fp, #-8]
   1d5ec:	ldr	r0, [r0, #56]	; 0x38
   1d5f0:	ldr	r1, [sp, #4]
   1d5f4:	str	r0, [r1]
   1d5f8:	ldr	r0, [sp, #4]
   1d5fc:	ldr	r1, [fp, #-8]
   1d600:	str	r0, [r1, #56]	; 0x38
   1d604:	ldr	r0, [fp, #-8]
   1d608:	movw	r1, #0
   1d60c:	str	r1, [r0, #64]	; 0x40
   1d610:	ldr	r0, [fp, #-8]
   1d614:	ldr	r1, [r0, #56]	; 0x38
   1d618:	ldr	r2, [r0, #64]	; 0x40
   1d61c:	add	r1, r1, #4
   1d620:	add	r3, r2, #1
   1d624:	str	r3, [r0, #64]	; 0x40
   1d628:	add	r0, r1, r2, lsl #5
   1d62c:	str	r0, [sp, #8]
   1d630:	ldr	r0, [sp, #8]
   1d634:	movw	r1, #0
   1d638:	str	r1, [r0]
   1d63c:	ldr	r0, [fp, #-12]
   1d640:	ldr	r2, [sp, #8]
   1d644:	str	r0, [r2, #4]
   1d648:	ldr	r0, [sp, #16]
   1d64c:	ldr	r2, [sp, #8]
   1d650:	str	r0, [r2, #8]
   1d654:	ldr	r0, [sp, #8]
   1d658:	ldr	r2, [sp, #12]
   1d65c:	ldr	r3, [r2]
   1d660:	str	r3, [r0, #20]
   1d664:	ldr	r2, [r2, #4]
   1d668:	str	r2, [r0, #24]
   1d66c:	ldr	r0, [sp, #8]
   1d670:	ldr	r2, [r0, #24]
   1d674:	mvn	r3, #262144	; 0x40000
   1d678:	and	r2, r2, r3
   1d67c:	str	r2, [r0, #24]
   1d680:	ldr	r0, [sp, #8]
   1d684:	ldr	r2, [r0, #24]
   1d688:	mvn	r3, #524288	; 0x80000
   1d68c:	and	r2, r2, r3
   1d690:	str	r2, [r0, #24]
   1d694:	ldr	r0, [sp, #8]
   1d698:	str	r1, [r0, #12]
   1d69c:	ldr	r0, [sp, #8]
   1d6a0:	str	r1, [r0, #16]
   1d6a4:	ldr	r0, [sp, #8]
   1d6a8:	mvn	r2, #0
   1d6ac:	str	r2, [r0, #28]
   1d6b0:	ldr	r0, [fp, #-12]
   1d6b4:	cmp	r0, r1
   1d6b8:	beq	1d6c8 <__assert_fail@plt+0xc1c4>
   1d6bc:	ldr	r0, [sp, #8]
   1d6c0:	ldr	r1, [fp, #-12]
   1d6c4:	str	r0, [r1]
   1d6c8:	ldr	r0, [sp, #16]
   1d6cc:	movw	r1, #0
   1d6d0:	cmp	r0, r1
   1d6d4:	beq	1d6e4 <__assert_fail@plt+0xc1e0>
   1d6d8:	ldr	r0, [sp, #8]
   1d6dc:	ldr	r1, [sp, #16]
   1d6e0:	str	r0, [r1]
   1d6e4:	ldr	r0, [sp, #8]
   1d6e8:	str	r0, [fp, #-4]
   1d6ec:	ldr	r0, [fp, #-4]
   1d6f0:	mov	sp, fp
   1d6f4:	pop	{fp, pc}
   1d6f8:	push	{fp, lr}
   1d6fc:	mov	fp, sp
   1d700:	sub	sp, sp, #56	; 0x38
   1d704:	ldr	ip, [fp, #12]
   1d708:	ldr	lr, [fp, #8]
   1d70c:	str	r0, [fp, #-8]
   1d710:	str	r1, [fp, #-12]
   1d714:	str	r2, [fp, #-16]
   1d718:	str	r3, [fp, #-20]	; 0xffffffec
   1d71c:	ldr	r0, [fp, #-12]
   1d720:	ldr	r0, [r0]
   1d724:	str	r0, [fp, #-24]	; 0xffffffe8
   1d728:	ldr	r0, [fp, #-12]
   1d72c:	ldr	r1, [r0, #24]
   1d730:	add	r2, r1, #1
   1d734:	str	r2, [r0, #24]
   1d738:	str	r1, [sp, #24]
   1d73c:	ldr	r0, [fp, #-16]
   1d740:	ldr	r1, [fp, #-8]
   1d744:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d748:	orr	r2, r2, #8388608	; 0x800000
   1d74c:	str	ip, [sp, #20]
   1d750:	str	lr, [sp, #16]
   1d754:	bl	1b29c <__assert_fail@plt+0x9d98>
   1d758:	ldr	r0, [fp, #-16]
   1d75c:	ldr	r0, [r0, #4]
   1d760:	and	r0, r0, #255	; 0xff
   1d764:	cmp	r0, #9
   1d768:	bne	1d778 <__assert_fail@plt+0xc274>
   1d76c:	movw	r0, #0
   1d770:	str	r0, [sp, #28]
   1d774:	b	1d830 <__assert_fail@plt+0xc32c>
   1d778:	ldr	r0, [fp, #-8]
   1d77c:	ldr	r1, [fp, #-12]
   1d780:	ldr	r2, [fp, #-16]
   1d784:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d788:	ldr	ip, [fp, #8]
   1d78c:	ldr	lr, [fp, #12]
   1d790:	str	ip, [sp]
   1d794:	str	lr, [sp, #4]
   1d798:	bl	1b2dc <__assert_fail@plt+0x9dd8>
   1d79c:	str	r0, [sp, #28]
   1d7a0:	ldr	r0, [fp, #12]
   1d7a4:	ldr	r0, [r0]
   1d7a8:	cmp	r0, #0
   1d7ac:	movw	r0, #0
   1d7b0:	str	r0, [sp, #12]
   1d7b4:	bne	1d7d4 <__assert_fail@plt+0xc2d0>
   1d7b8:	ldr	r0, [fp, #-16]
   1d7bc:	ldr	r0, [r0, #4]
   1d7c0:	and	r0, r0, #255	; 0xff
   1d7c4:	cmp	r0, #9
   1d7c8:	movw	r0, #0
   1d7cc:	movne	r0, #1
   1d7d0:	str	r0, [sp, #12]
   1d7d4:	ldr	r0, [sp, #12]
   1d7d8:	tst	r0, #1
   1d7dc:	beq	1d810 <__assert_fail@plt+0xc30c>
   1d7e0:	ldr	r0, [sp, #28]
   1d7e4:	movw	r1, #0
   1d7e8:	cmp	r0, r1
   1d7ec:	beq	1d804 <__assert_fail@plt+0xc300>
   1d7f0:	ldr	r0, [sp, #28]
   1d7f4:	movw	r1, #51856	; 0xca90
   1d7f8:	movt	r1, #1
   1d7fc:	movw	r2, #0
   1d800:	bl	1c920 <__assert_fail@plt+0xb41c>
   1d804:	ldr	r0, [fp, #12]
   1d808:	movw	r1, #8
   1d80c:	str	r1, [r0]
   1d810:	ldr	r0, [fp, #12]
   1d814:	ldr	r0, [r0]
   1d818:	cmp	r0, #0
   1d81c:	beq	1d82c <__assert_fail@plt+0xc328>
   1d820:	movw	r0, #0
   1d824:	str	r0, [fp, #-4]
   1d828:	b	1d8ac <__assert_fail@plt+0xc3a8>
   1d82c:	b	1d830 <__assert_fail@plt+0xc32c>
   1d830:	ldr	r0, [sp, #24]
   1d834:	cmp	r0, #8
   1d838:	bhi	1d858 <__assert_fail@plt+0xc354>
   1d83c:	ldr	r0, [sp, #24]
   1d840:	movw	r1, #1
   1d844:	lsl	r0, r1, r0
   1d848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d84c:	ldr	r2, [r1, #84]	; 0x54
   1d850:	orr	r0, r2, r0
   1d854:	str	r0, [r1, #84]	; 0x54
   1d858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d85c:	ldr	r1, [sp, #28]
   1d860:	movw	r2, #0
   1d864:	movw	r3, #17
   1d868:	bl	1b530 <__assert_fail@plt+0xa02c>
   1d86c:	str	r0, [sp, #28]
   1d870:	ldr	r0, [sp, #28]
   1d874:	movw	r1, #0
   1d878:	cmp	r0, r1
   1d87c:	bne	1d898 <__assert_fail@plt+0xc394>
   1d880:	ldr	r0, [fp, #12]
   1d884:	movw	r1, #12
   1d888:	str	r1, [r0]
   1d88c:	movw	r0, #0
   1d890:	str	r0, [fp, #-4]
   1d894:	b	1d8ac <__assert_fail@plt+0xc3a8>
   1d898:	ldr	r0, [sp, #24]
   1d89c:	ldr	r1, [sp, #28]
   1d8a0:	str	r0, [r1, #20]
   1d8a4:	ldr	r0, [sp, #28]
   1d8a8:	str	r0, [fp, #-4]
   1d8ac:	ldr	r0, [fp, #-4]
   1d8b0:	mov	sp, fp
   1d8b4:	pop	{fp, pc}
   1d8b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d8bc:	add	fp, sp, #24
   1d8c0:	sub	sp, sp, #304	; 0x130
   1d8c4:	ldr	ip, [fp, #8]
   1d8c8:	str	r0, [fp, #-36]	; 0xffffffdc
   1d8cc:	str	r1, [fp, #-40]	; 0xffffffd8
   1d8d0:	str	r2, [fp, #-44]	; 0xffffffd4
   1d8d4:	str	r3, [fp, #-48]	; 0xffffffd0
   1d8d8:	movw	r0, #0
   1d8dc:	str	r0, [fp, #-52]	; 0xffffffcc
   1d8e0:	str	r0, [fp, #-56]	; 0xffffffc8
   1d8e4:	str	r0, [fp, #-60]	; 0xffffffc4
   1d8e8:	str	r0, [fp, #-64]	; 0xffffffc0
   1d8ec:	str	r0, [fp, #-68]	; 0xffffffbc
   1d8f0:	str	r0, [fp, #-72]	; 0xffffffb8
   1d8f4:	str	r0, [fp, #-92]	; 0xffffffa4
   1d8f8:	str	r0, [fp, #-96]	; 0xffffffa0
   1d8fc:	str	r0, [fp, #-100]	; 0xffffff9c
   1d900:	str	r0, [fp, #-104]	; 0xffffff98
   1d904:	str	r0, [fp, #-108]	; 0xffffff94
   1d908:	movw	r0, #0
   1d90c:	strb	r0, [fp, #-109]	; 0xffffff93
   1d910:	movw	r0, #1
   1d914:	strb	r0, [fp, #-121]	; 0xffffff87
   1d918:	movw	r0, #32
   1d91c:	movw	r1, #1
   1d920:	str	ip, [sp, #88]	; 0x58
   1d924:	bl	334b0 <__assert_fail@plt+0x21fac>
   1d928:	str	r0, [fp, #-84]	; 0xffffffac
   1d92c:	movw	r0, #40	; 0x28
   1d930:	movw	r1, #1
   1d934:	bl	334b0 <__assert_fail@plt+0x21fac>
   1d938:	str	r0, [fp, #-88]	; 0xffffffa8
   1d93c:	ldr	r0, [fp, #-84]	; 0xffffffac
   1d940:	movw	r1, #0
   1d944:	cmp	r0, r1
   1d948:	movw	r0, #1
   1d94c:	str	r0, [sp, #84]	; 0x54
   1d950:	beq	1d96c <__assert_fail@plt+0xc468>
   1d954:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1d958:	movw	r1, #0
   1d95c:	cmp	r0, r1
   1d960:	movw	r0, #0
   1d964:	moveq	r0, #1
   1d968:	str	r0, [sp, #84]	; 0x54
   1d96c:	ldr	r0, [sp, #84]	; 0x54
   1d970:	tst	r0, #1
   1d974:	beq	1d9a0 <__assert_fail@plt+0xc49c>
   1d978:	ldr	r0, [fp, #-84]	; 0xffffffac
   1d97c:	bl	34c20 <__assert_fail@plt+0x2371c>
   1d980:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1d984:	bl	34c20 <__assert_fail@plt+0x2371c>
   1d988:	ldr	r0, [fp, #8]
   1d98c:	movw	r1, #12
   1d990:	str	r1, [r0]
   1d994:	movw	r0, #0
   1d998:	str	r0, [fp, #-32]	; 0xffffffe0
   1d99c:	b	1e1d4 <__assert_fail@plt+0xccd0>
   1d9a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d9a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d9a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1d9ac:	bl	1ed10 <__assert_fail@plt+0xd80c>
   1d9b0:	str	r0, [fp, #-120]	; 0xffffff88
   1d9b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d9b8:	ldr	r0, [r0, #4]
   1d9bc:	and	r0, r0, #255	; 0xff
   1d9c0:	cmp	r0, #2
   1d9c4:	bne	1d9d8 <__assert_fail@plt+0xc4d4>
   1d9c8:	ldr	r0, [fp, #8]
   1d9cc:	movw	r1, #2
   1d9d0:	str	r1, [r0]
   1d9d4:	b	1e1bc <__assert_fail@plt+0xccb8>
   1d9d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d9dc:	ldr	r0, [r0, #4]
   1d9e0:	and	r0, r0, #255	; 0xff
   1d9e4:	cmp	r0, #25
   1d9e8:	bne	1da74 <__assert_fail@plt+0xc570>
   1d9ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1d9f0:	ldrb	r1, [r0, #16]
   1d9f4:	bic	r1, r1, #1
   1d9f8:	movw	r2, #1
   1d9fc:	orr	r1, r1, r2
   1da00:	strb	r1, [r0, #16]
   1da04:	strb	r2, [fp, #-109]	; 0xffffff93
   1da08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1da0c:	and	r0, r0, #256	; 0x100
   1da10:	cmp	r0, #0
   1da14:	beq	1da24 <__assert_fail@plt+0xc520>
   1da18:	ldr	r0, [fp, #-84]	; 0xffffffac
   1da1c:	movw	r1, #10
   1da20:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1da24:	ldr	r0, [fp, #-120]	; 0xffffff88
   1da28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1da2c:	ldr	r2, [r1, #40]	; 0x28
   1da30:	add	r0, r2, r0
   1da34:	str	r0, [r1, #40]	; 0x28
   1da38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1da3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1da40:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1da44:	bl	1ed10 <__assert_fail@plt+0xd80c>
   1da48:	str	r0, [fp, #-120]	; 0xffffff88
   1da4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1da50:	ldr	r0, [r0, #4]
   1da54:	and	r0, r0, #255	; 0xff
   1da58:	cmp	r0, #2
   1da5c:	bne	1da70 <__assert_fail@plt+0xc56c>
   1da60:	ldr	r0, [fp, #8]
   1da64:	movw	r1, #2
   1da68:	str	r1, [r0]
   1da6c:	b	1e1bc <__assert_fail@plt+0xccb8>
   1da70:	b	1da74 <__assert_fail@plt+0xc570>
   1da74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1da78:	ldr	r0, [r0, #4]
   1da7c:	and	r0, r0, #255	; 0xff
   1da80:	cmp	r0, #21
   1da84:	bne	1daa0 <__assert_fail@plt+0xc59c>
   1da88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1da8c:	ldr	r1, [r0, #4]
   1da90:	mvn	r2, #255	; 0xff
   1da94:	and	r1, r1, r2
   1da98:	orr	r1, r1, #1
   1da9c:	str	r1, [r0, #4]
   1daa0:	b	1daa4 <__assert_fail@plt+0xc5a0>
   1daa4:	add	r0, sp, #156	; 0x9c
   1daa8:	movw	r1, #0
   1daac:	str	r1, [sp, #116]	; 0x74
   1dab0:	movw	r1, #0
   1dab4:	strb	r1, [sp, #115]	; 0x73
   1dab8:	str	r0, [fp, #-128]	; 0xffffff80
   1dabc:	movw	r0, #3
   1dac0:	str	r0, [fp, #-132]	; 0xffffff7c
   1dac4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dac8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dacc:	ldr	r3, [fp, #-120]	; 0xffffff88
   1dad0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dad4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1dad8:	ldrb	lr, [fp, #-121]	; 0xffffff87
   1dadc:	sub	r4, fp, #132	; 0x84
   1dae0:	str	r0, [sp, #80]	; 0x50
   1dae4:	mov	r0, r4
   1dae8:	ldr	r4, [sp, #80]	; 0x50
   1daec:	str	r4, [sp]
   1daf0:	str	ip, [sp, #4]
   1daf4:	and	ip, lr, #1
   1daf8:	str	ip, [sp, #8]
   1dafc:	bl	1f0c8 <__assert_fail@plt+0xdbc4>
   1db00:	str	r0, [sp, #120]	; 0x78
   1db04:	ldr	r0, [sp, #120]	; 0x78
   1db08:	cmp	r0, #0
   1db0c:	beq	1db20 <__assert_fail@plt+0xc61c>
   1db10:	ldr	r0, [sp, #120]	; 0x78
   1db14:	ldr	r1, [fp, #8]
   1db18:	str	r0, [r1]
   1db1c:	b	1e1bc <__assert_fail@plt+0xccb8>
   1db20:	movw	r0, #0
   1db24:	strb	r0, [fp, #-121]	; 0xffffff87
   1db28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1db2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1db30:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1db34:	bl	1ed10 <__assert_fail@plt+0xd80c>
   1db38:	str	r0, [fp, #-120]	; 0xffffff88
   1db3c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1db40:	cmp	r0, #4
   1db44:	beq	1dc2c <__assert_fail@plt+0xc728>
   1db48:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1db4c:	cmp	r0, #2
   1db50:	beq	1dc2c <__assert_fail@plt+0xc728>
   1db54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1db58:	ldr	r0, [r0, #4]
   1db5c:	and	r0, r0, #255	; 0xff
   1db60:	cmp	r0, #2
   1db64:	bne	1db78 <__assert_fail@plt+0xc674>
   1db68:	ldr	r0, [fp, #8]
   1db6c:	movw	r1, #7
   1db70:	str	r1, [r0]
   1db74:	b	1e1bc <__assert_fail@plt+0xccb8>
   1db78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1db7c:	ldr	r0, [r0, #4]
   1db80:	and	r0, r0, #255	; 0xff
   1db84:	cmp	r0, #22
   1db88:	bne	1dc28 <__assert_fail@plt+0xc724>
   1db8c:	ldr	r0, [fp, #-120]	; 0xffffff88
   1db90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1db94:	ldr	r2, [r1, #40]	; 0x28
   1db98:	add	r0, r2, r0
   1db9c:	str	r0, [r1, #40]	; 0x28
   1dba0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dba4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dba8:	add	r0, sp, #104	; 0x68
   1dbac:	bl	1ed10 <__assert_fail@plt+0xd80c>
   1dbb0:	str	r0, [sp, #116]	; 0x74
   1dbb4:	ldr	r0, [sp, #108]	; 0x6c
   1dbb8:	and	r0, r0, #255	; 0xff
   1dbbc:	cmp	r0, #2
   1dbc0:	bne	1dbd4 <__assert_fail@plt+0xc6d0>
   1dbc4:	ldr	r0, [fp, #8]
   1dbc8:	movw	r1, #7
   1dbcc:	str	r1, [r0]
   1dbd0:	b	1e1bc <__assert_fail@plt+0xccb8>
   1dbd4:	ldr	r0, [sp, #108]	; 0x6c
   1dbd8:	and	r0, r0, #255	; 0xff
   1dbdc:	cmp	r0, #21
   1dbe0:	bne	1dc1c <__assert_fail@plt+0xc718>
   1dbe4:	ldr	r0, [fp, #-120]	; 0xffffff88
   1dbe8:	movw	r1, #0
   1dbec:	sub	r0, r1, r0
   1dbf0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dbf4:	ldr	r2, [r1, #40]	; 0x28
   1dbf8:	add	r0, r2, r0
   1dbfc:	str	r0, [r1, #40]	; 0x28
   1dc00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dc04:	ldr	r1, [r0, #4]
   1dc08:	mvn	r2, #255	; 0xff
   1dc0c:	and	r1, r1, r2
   1dc10:	orr	r1, r1, #1
   1dc14:	str	r1, [r0, #4]
   1dc18:	b	1dc24 <__assert_fail@plt+0xc720>
   1dc1c:	movw	r0, #1
   1dc20:	strb	r0, [sp, #115]	; 0x73
   1dc24:	b	1dc28 <__assert_fail@plt+0xc724>
   1dc28:	b	1dc2c <__assert_fail@plt+0xc728>
   1dc2c:	ldrb	r0, [sp, #115]	; 0x73
   1dc30:	and	r0, r0, #1
   1dc34:	cmp	r0, #1
   1dc38:	bne	1dd5c <__assert_fail@plt+0xc858>
   1dc3c:	add	r0, sp, #124	; 0x7c
   1dc40:	str	r0, [fp, #-136]	; 0xffffff78
   1dc44:	movw	r0, #3
   1dc48:	str	r0, [fp, #-140]	; 0xffffff74
   1dc4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dc50:	ldr	r3, [sp, #116]	; 0x74
   1dc54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dc58:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dc5c:	sub	ip, fp, #140	; 0x8c
   1dc60:	str	r0, [sp, #76]	; 0x4c
   1dc64:	mov	r0, ip
   1dc68:	add	ip, sp, #104	; 0x68
   1dc6c:	str	r2, [sp, #72]	; 0x48
   1dc70:	mov	r2, ip
   1dc74:	ldr	ip, [sp, #76]	; 0x4c
   1dc78:	str	ip, [sp]
   1dc7c:	ldr	lr, [sp, #72]	; 0x48
   1dc80:	str	lr, [sp, #4]
   1dc84:	movw	r4, #1
   1dc88:	and	r4, r4, #1
   1dc8c:	str	r4, [sp, #8]
   1dc90:	bl	1f0c8 <__assert_fail@plt+0xdbc4>
   1dc94:	str	r0, [sp, #120]	; 0x78
   1dc98:	ldr	r0, [sp, #120]	; 0x78
   1dc9c:	cmp	r0, #0
   1dca0:	beq	1dcb4 <__assert_fail@plt+0xc7b0>
   1dca4:	ldr	r0, [sp, #120]	; 0x78
   1dca8:	ldr	r1, [fp, #8]
   1dcac:	str	r0, [r1]
   1dcb0:	b	1e1bc <__assert_fail@plt+0xccb8>
   1dcb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dcb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dcbc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dcc0:	bl	1ed10 <__assert_fail@plt+0xd80c>
   1dcc4:	str	r0, [fp, #-120]	; 0xffffff88
   1dcc8:	ldr	r0, [fp, #-84]	; 0xffffffac
   1dccc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1dcd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dcd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dcd8:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1dcdc:	ldr	lr, [fp, #-52]	; 0xffffffcc
   1dce0:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1dce4:	ldr	r5, [fp, #-64]	; 0xffffffc0
   1dce8:	ldr	r6, [fp, #-68]	; 0xffffffbc
   1dcec:	ldr	r7, [fp, #-72]	; 0xffffffb8
   1dcf0:	sub	r8, fp, #96	; 0x60
   1dcf4:	str	r2, [sp, #68]	; 0x44
   1dcf8:	mov	r2, r8
   1dcfc:	sub	r8, fp, #132	; 0x84
   1dd00:	str	r3, [sp, #64]	; 0x40
   1dd04:	mov	r3, r8
   1dd08:	sub	r8, fp, #140	; 0x8c
   1dd0c:	str	r8, [sp]
   1dd10:	ldr	r8, [sp, #68]	; 0x44
   1dd14:	str	r8, [sp, #4]
   1dd18:	ldr	r9, [sp, #64]	; 0x40
   1dd1c:	str	r9, [sp, #8]
   1dd20:	str	ip, [sp, #12]
   1dd24:	str	lr, [sp, #16]
   1dd28:	str	r4, [sp, #20]
   1dd2c:	str	r5, [sp, #24]
   1dd30:	str	r6, [sp, #28]
   1dd34:	str	r7, [sp, #32]
   1dd38:	bl	1f248 <__assert_fail@plt+0xdd44>
   1dd3c:	ldr	r1, [fp, #8]
   1dd40:	str	r0, [r1]
   1dd44:	ldr	r0, [fp, #8]
   1dd48:	ldr	r0, [r0]
   1dd4c:	cmp	r0, #0
   1dd50:	beq	1dd58 <__assert_fail@plt+0xc854>
   1dd54:	b	1e1bc <__assert_fail@plt+0xccb8>
   1dd58:	b	1df08 <__assert_fail@plt+0xca04>
   1dd5c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1dd60:	str	r0, [sp, #60]	; 0x3c
   1dd64:	add	r0, pc, #8
   1dd68:	ldr	r1, [sp, #60]	; 0x3c
   1dd6c:	ldr	r0, [r0, r1, lsl #2]
   1dd70:	mov	pc, r0
   1dd74:	andeq	sp, r1, r8, lsl #27
   1dd78:	muleq	r1, r8, sp
   1dd7c:	andeq	sp, r1, ip, lsl lr
   1dd80:	andeq	sp, r1, r0, asr lr
   1dd84:			; <UNDEFINED> instruction: 0x0001deb0
   1dd88:	ldr	r0, [fp, #-84]	; 0xffffffac
   1dd8c:	ldrb	r1, [fp, #-128]	; 0xffffff80
   1dd90:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1dd94:	b	1df04 <__assert_fail@plt+0xca00>
   1dd98:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1dd9c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1dda0:	ldr	r1, [r1, #20]
   1dda4:	cmp	r0, r1
   1dda8:	bne	1ddf8 <__assert_fail@plt+0xc8f4>
   1ddac:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1ddb0:	ldr	r0, [r0, #20]
   1ddb4:	mov	r1, #1
   1ddb8:	orr	r0, r1, r0, lsl #1
   1ddbc:	str	r0, [fp, #-100]	; 0xffffff9c
   1ddc0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1ddc4:	ldr	r0, [r0]
   1ddc8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1ddcc:	lsl	r1, r1, #2
   1ddd0:	bl	335bc <__assert_fail@plt+0x220b8>
   1ddd4:	str	r0, [sp, #100]	; 0x64
   1ddd8:	ldr	r0, [sp, #100]	; 0x64
   1dddc:	movw	r1, #0
   1dde0:	cmp	r0, r1
   1dde4:	bne	1ddec <__assert_fail@plt+0xc8e8>
   1dde8:	b	1e1b0 <__assert_fail@plt+0xccac>
   1ddec:	ldr	r0, [sp, #100]	; 0x64
   1ddf0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1ddf4:	str	r0, [r1]
   1ddf8:	ldr	r0, [fp, #-128]	; 0xffffff80
   1ddfc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1de00:	ldr	r2, [r1]
   1de04:	ldr	r3, [r1, #20]
   1de08:	add	ip, r3, #1
   1de0c:	str	ip, [r1, #20]
   1de10:	add	r1, r2, r3, lsl #2
   1de14:	str	r0, [r1]
   1de18:	b	1df04 <__assert_fail@plt+0xca00>
   1de1c:	ldr	r0, [fp, #-84]	; 0xffffffac
   1de20:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1de24:	ldr	r3, [fp, #-128]	; 0xffffff80
   1de28:	sub	r2, fp, #104	; 0x68
   1de2c:	bl	1f6cc <__assert_fail@plt+0xe1c8>
   1de30:	ldr	r1, [fp, #8]
   1de34:	str	r0, [r1]
   1de38:	ldr	r0, [fp, #8]
   1de3c:	ldr	r0, [r0]
   1de40:	cmp	r0, #0
   1de44:	beq	1de4c <__assert_fail@plt+0xc948>
   1de48:	b	1e1bc <__assert_fail@plt+0xccb8>
   1de4c:	b	1df04 <__assert_fail@plt+0xca00>
   1de50:	ldr	r0, [fp, #-84]	; 0xffffffac
   1de54:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1de58:	ldr	r3, [fp, #-128]	; 0xffffff80
   1de5c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1de60:	ldr	ip, [fp, #-64]	; 0xffffffc0
   1de64:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1de68:	ldr	r4, [fp, #-72]	; 0xffffffb8
   1de6c:	sub	r5, fp, #92	; 0x5c
   1de70:	str	r2, [sp, #56]	; 0x38
   1de74:	mov	r2, r5
   1de78:	ldr	r5, [sp, #56]	; 0x38
   1de7c:	str	r5, [sp]
   1de80:	str	ip, [sp, #4]
   1de84:	str	lr, [sp, #8]
   1de88:	str	r4, [sp, #12]
   1de8c:	bl	1f728 <__assert_fail@plt+0xe224>
   1de90:	ldr	r1, [fp, #8]
   1de94:	str	r0, [r1]
   1de98:	ldr	r0, [fp, #8]
   1de9c:	ldr	r0, [r0]
   1dea0:	cmp	r0, #0
   1dea4:	beq	1deac <__assert_fail@plt+0xc9a8>
   1dea8:	b	1e1bc <__assert_fail@plt+0xccb8>
   1deac:	b	1df04 <__assert_fail@plt+0xca00>
   1deb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1deb4:	ldr	r0, [r0, #64]	; 0x40
   1deb8:	ldr	r1, [fp, #-84]	; 0xffffffac
   1debc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1dec0:	ldr	r3, [fp, #-128]	; 0xffffff80
   1dec4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1dec8:	sub	lr, fp, #108	; 0x6c
   1decc:	str	r3, [sp, #52]	; 0x34
   1ded0:	mov	r3, lr
   1ded4:	ldr	lr, [sp, #52]	; 0x34
   1ded8:	str	lr, [sp]
   1dedc:	str	ip, [sp, #4]
   1dee0:	bl	1f7ac <__assert_fail@plt+0xe2a8>
   1dee4:	ldr	r1, [fp, #8]
   1dee8:	str	r0, [r1]
   1deec:	ldr	r0, [fp, #8]
   1def0:	ldr	r0, [r0]
   1def4:	cmp	r0, #0
   1def8:	beq	1df00 <__assert_fail@plt+0xc9fc>
   1defc:	b	1e1bc <__assert_fail@plt+0xccb8>
   1df00:	b	1df04 <__assert_fail@plt+0xca00>
   1df04:	b	1df08 <__assert_fail@plt+0xca04>
   1df08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1df0c:	ldr	r0, [r0, #4]
   1df10:	and	r0, r0, #255	; 0xff
   1df14:	cmp	r0, #2
   1df18:	bne	1df2c <__assert_fail@plt+0xca28>
   1df1c:	ldr	r0, [fp, #8]
   1df20:	movw	r1, #7
   1df24:	str	r1, [r0]
   1df28:	b	1e1bc <__assert_fail@plt+0xccb8>
   1df2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1df30:	ldr	r0, [r0, #4]
   1df34:	and	r0, r0, #255	; 0xff
   1df38:	cmp	r0, #21
   1df3c:	bne	1df44 <__assert_fail@plt+0xca40>
   1df40:	b	1df48 <__assert_fail@plt+0xca44>
   1df44:	b	1daa4 <__assert_fail@plt+0xc5a0>
   1df48:	ldr	r0, [fp, #-120]	; 0xffffff88
   1df4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1df50:	ldr	r2, [r1, #40]	; 0x28
   1df54:	add	r0, r2, r0
   1df58:	str	r0, [r1, #40]	; 0x28
   1df5c:	ldrb	r0, [fp, #-109]	; 0xffffff93
   1df60:	tst	r0, #1
   1df64:	beq	1df70 <__assert_fail@plt+0xca6c>
   1df68:	ldr	r0, [fp, #-84]	; 0xffffffac
   1df6c:	bl	2044c <__assert_fail@plt+0xef48>
   1df70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1df74:	ldr	r0, [r0, #92]	; 0x5c
   1df78:	cmp	r0, #1
   1df7c:	ble	1df90 <__assert_fail@plt+0xca8c>
   1df80:	ldr	r0, [fp, #-84]	; 0xffffffac
   1df84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1df88:	ldr	r1, [r1, #60]	; 0x3c
   1df8c:	bl	20494 <__assert_fail@plt+0xef90>
   1df90:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1df94:	ldr	r0, [r0, #20]
   1df98:	cmp	r0, #0
   1df9c:	bne	1e008 <__assert_fail@plt+0xcb04>
   1dfa0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1dfa4:	ldr	r0, [r0, #24]
   1dfa8:	cmp	r0, #0
   1dfac:	bne	1e008 <__assert_fail@plt+0xcb04>
   1dfb0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1dfb4:	ldr	r0, [r0, #28]
   1dfb8:	cmp	r0, #0
   1dfbc:	bne	1e008 <__assert_fail@plt+0xcb04>
   1dfc0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1dfc4:	ldr	r0, [r0, #32]
   1dfc8:	cmp	r0, #0
   1dfcc:	bne	1e008 <__assert_fail@plt+0xcb04>
   1dfd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dfd4:	ldr	r0, [r0, #92]	; 0x5c
   1dfd8:	cmp	r0, #1
   1dfdc:	ble	1e14c <__assert_fail@plt+0xcc48>
   1dfe0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1dfe4:	ldr	r0, [r0, #36]	; 0x24
   1dfe8:	cmp	r0, #0
   1dfec:	bne	1e008 <__assert_fail@plt+0xcb04>
   1dff0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1dff4:	ldrb	r0, [r0, #16]
   1dff8:	and	r0, r0, #1
   1dffc:	and	r0, r0, #255	; 0xff
   1e000:	cmp	r0, #0
   1e004:	beq	1e14c <__assert_fail@plt+0xcc48>
   1e008:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e00c:	ldrb	r1, [r0, #88]	; 0x58
   1e010:	bic	r1, r1, #2
   1e014:	movw	r2, #2
   1e018:	orr	r1, r1, r2
   1e01c:	strb	r1, [r0, #88]	; 0x58
   1e020:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1e024:	mvn	r1, #255	; 0xff
   1e028:	and	r0, r0, r1
   1e02c:	orr	r0, r0, #6
   1e030:	str	r0, [fp, #-76]	; 0xffffffb4
   1e034:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1e038:	str	r0, [fp, #-80]	; 0xffffffb0
   1e03c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e040:	movw	r1, #0
   1e044:	str	r1, [sp, #48]	; 0x30
   1e048:	ldr	r2, [sp, #48]	; 0x30
   1e04c:	sub	r3, fp, #80	; 0x50
   1e050:	bl	1d594 <__assert_fail@plt+0xc090>
   1e054:	str	r0, [sp, #96]	; 0x60
   1e058:	ldr	r0, [sp, #96]	; 0x60
   1e05c:	movw	r1, #0
   1e060:	cmp	r0, r1
   1e064:	bne	1e06c <__assert_fail@plt+0xcb68>
   1e068:	b	1e1b0 <__assert_fail@plt+0xccac>
   1e06c:	movw	r0, #0
   1e070:	str	r0, [sp, #92]	; 0x5c
   1e074:	ldr	r0, [sp, #92]	; 0x5c
   1e078:	cmp	r0, #8
   1e07c:	bge	1e0b0 <__assert_fail@plt+0xcbac>
   1e080:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e084:	ldr	r1, [sp, #92]	; 0x5c
   1e088:	add	r0, r0, r1, lsl #2
   1e08c:	ldr	r0, [r0]
   1e090:	cmp	r0, #0
   1e094:	beq	1e09c <__assert_fail@plt+0xcb98>
   1e098:	b	1e0b0 <__assert_fail@plt+0xcbac>
   1e09c:	b	1e0a0 <__assert_fail@plt+0xcb9c>
   1e0a0:	ldr	r0, [sp, #92]	; 0x5c
   1e0a4:	add	r0, r0, #1
   1e0a8:	str	r0, [sp, #92]	; 0x5c
   1e0ac:	b	1e074 <__assert_fail@plt+0xcb70>
   1e0b0:	ldr	r0, [sp, #92]	; 0x5c
   1e0b4:	cmp	r0, #8
   1e0b8:	bge	1e138 <__assert_fail@plt+0xcc34>
   1e0bc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1e0c0:	mvn	r1, #255	; 0xff
   1e0c4:	and	r0, r0, r1
   1e0c8:	orr	r0, r0, #3
   1e0cc:	str	r0, [fp, #-76]	; 0xffffffb4
   1e0d0:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e0d4:	str	r0, [fp, #-80]	; 0xffffffb0
   1e0d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e0dc:	movw	r1, #0
   1e0e0:	str	r1, [sp, #44]	; 0x2c
   1e0e4:	ldr	r2, [sp, #44]	; 0x2c
   1e0e8:	sub	r3, fp, #80	; 0x50
   1e0ec:	bl	1d594 <__assert_fail@plt+0xc090>
   1e0f0:	str	r0, [fp, #-116]	; 0xffffff8c
   1e0f4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1e0f8:	movw	r1, #0
   1e0fc:	cmp	r0, r1
   1e100:	bne	1e108 <__assert_fail@plt+0xcc04>
   1e104:	b	1e1b0 <__assert_fail@plt+0xccac>
   1e108:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e10c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1e110:	ldr	r2, [sp, #96]	; 0x60
   1e114:	movw	r3, #10
   1e118:	bl	1b530 <__assert_fail@plt+0xa02c>
   1e11c:	str	r0, [fp, #-116]	; 0xffffff8c
   1e120:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1e124:	movw	r1, #0
   1e128:	cmp	r0, r1
   1e12c:	bne	1e134 <__assert_fail@plt+0xcc30>
   1e130:	b	1e1b0 <__assert_fail@plt+0xccac>
   1e134:	b	1e148 <__assert_fail@plt+0xcc44>
   1e138:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e13c:	bl	34c20 <__assert_fail@plt+0x2371c>
   1e140:	ldr	r0, [sp, #96]	; 0x60
   1e144:	str	r0, [fp, #-116]	; 0xffffff8c
   1e148:	b	1e1a4 <__assert_fail@plt+0xcca0>
   1e14c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1e150:	bl	18b68 <__assert_fail@plt+0x7664>
   1e154:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1e158:	mvn	r1, #255	; 0xff
   1e15c:	and	r0, r0, r1
   1e160:	orr	r0, r0, #3
   1e164:	str	r0, [fp, #-76]	; 0xffffffb4
   1e168:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e16c:	str	r0, [fp, #-80]	; 0xffffffb0
   1e170:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e174:	movw	r1, #0
   1e178:	str	r1, [sp, #40]	; 0x28
   1e17c:	ldr	r2, [sp, #40]	; 0x28
   1e180:	sub	r3, fp, #80	; 0x50
   1e184:	bl	1d594 <__assert_fail@plt+0xc090>
   1e188:	str	r0, [fp, #-116]	; 0xffffff8c
   1e18c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1e190:	movw	r1, #0
   1e194:	cmp	r0, r1
   1e198:	bne	1e1a0 <__assert_fail@plt+0xcc9c>
   1e19c:	b	1e1b0 <__assert_fail@plt+0xccac>
   1e1a0:	b	1e1a4 <__assert_fail@plt+0xcca0>
   1e1a4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1e1a8:	str	r0, [fp, #-32]	; 0xffffffe0
   1e1ac:	b	1e1d4 <__assert_fail@plt+0xccd0>
   1e1b0:	ldr	r0, [fp, #8]
   1e1b4:	movw	r1, #12
   1e1b8:	str	r1, [r0]
   1e1bc:	ldr	r0, [fp, #-84]	; 0xffffffac
   1e1c0:	bl	34c20 <__assert_fail@plt+0x2371c>
   1e1c4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1e1c8:	bl	18b68 <__assert_fail@plt+0x7664>
   1e1cc:	movw	r0, #0
   1e1d0:	str	r0, [fp, #-32]	; 0xffffffe0
   1e1d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e1d8:	sub	sp, fp, #24
   1e1dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e1e0:	push	{fp, lr}
   1e1e4:	mov	fp, sp
   1e1e8:	sub	sp, sp, #32
   1e1ec:	str	r0, [fp, #-4]
   1e1f0:	mov	r0, #0
   1e1f4:	str	r0, [fp, #-8]
   1e1f8:	str	r0, [sp, #16]
   1e1fc:	ldr	r0, [fp, #-4]
   1e200:	ldrb	r1, [r0, #88]	; 0x58
   1e204:	orr	r1, r1, #16
   1e208:	strb	r1, [r0, #88]	; 0x58
   1e20c:	ldr	r0, [fp, #-4]
   1e210:	ldrb	r0, [r0, #88]	; 0x58
   1e214:	ubfx	r0, r0, #3, #1
   1e218:	and	r0, r0, #255	; 0xff
   1e21c:	cmp	r0, #0
   1e220:	bne	1e2d8 <__assert_fail@plt+0xcdd4>
   1e224:	mov	r0, #0
   1e228:	str	r0, [sp, #12]
   1e22c:	movw	r0, #0
   1e230:	movt	r0, #1023	; 0x3ff
   1e234:	str	r0, [sp, #8]
   1e238:	mvn	r0, #2013265921	; 0x78000001
   1e23c:	str	r0, [sp, #4]
   1e240:	mvn	r0, #-134217727	; 0xf8000001
   1e244:	str	r0, [sp]
   1e248:	ldr	r0, [sp, #12]
   1e24c:	ldr	r1, [fp, #-4]
   1e250:	str	r0, [r1, #96]	; 0x60
   1e254:	ldr	r0, [sp, #8]
   1e258:	ldr	r1, [fp, #-4]
   1e25c:	str	r0, [r1, #100]	; 0x64
   1e260:	ldr	r0, [sp, #4]
   1e264:	ldr	r1, [fp, #-4]
   1e268:	str	r0, [r1, #104]	; 0x68
   1e26c:	ldr	r0, [sp]
   1e270:	ldr	r1, [fp, #-4]
   1e274:	str	r0, [r1, #108]	; 0x6c
   1e278:	mov	r0, #4
   1e27c:	str	r0, [fp, #-8]
   1e280:	mov	r0, #128	; 0x80
   1e284:	str	r0, [sp, #16]
   1e288:	ldr	r0, [fp, #-4]
   1e28c:	ldrb	r0, [r0, #88]	; 0x58
   1e290:	ubfx	r0, r0, #2, #1
   1e294:	and	r0, r0, #255	; 0xff
   1e298:	cmp	r0, #0
   1e29c:	beq	1e2d4 <__assert_fail@plt+0xcdd0>
   1e2a0:	ldr	r0, [fp, #-4]
   1e2a4:	add	r0, r0, #96	; 0x60
   1e2a8:	ldr	r1, [fp, #-8]
   1e2ac:	add	r0, r0, r1, lsl #2
   1e2b0:	ldr	r1, [sp, #16]
   1e2b4:	movw	r2, #256	; 0x100
   1e2b8:	sub	r1, r2, r1
   1e2bc:	movw	r2, #8
   1e2c0:	sdiv	r2, r1, r2
   1e2c4:	movw	r1, #0
   1e2c8:	and	r1, r1, #255	; 0xff
   1e2cc:	bl	11420 <memset@plt>
   1e2d0:	b	1e388 <__assert_fail@plt+0xce84>
   1e2d4:	b	1e2d8 <__assert_fail@plt+0xcdd4>
   1e2d8:	b	1e2dc <__assert_fail@plt+0xcdd8>
   1e2dc:	b	1e2e0 <__assert_fail@plt+0xcddc>
   1e2e0:	ldr	r0, [fp, #-8]
   1e2e4:	cmp	r0, #8
   1e2e8:	bge	1e388 <__assert_fail@plt+0xce84>
   1e2ec:	movw	r0, #0
   1e2f0:	str	r0, [fp, #-12]
   1e2f4:	ldr	r0, [fp, #-12]
   1e2f8:	cmp	r0, #32
   1e2fc:	bge	1e374 <__assert_fail@plt+0xce70>
   1e300:	bl	113b4 <__ctype_b_loc@plt>
   1e304:	ldr	r0, [r0]
   1e308:	ldr	r1, [sp, #16]
   1e30c:	add	r0, r0, r1, lsl #1
   1e310:	ldrh	r0, [r0]
   1e314:	and	r0, r0, #8
   1e318:	cmp	r0, #0
   1e31c:	bne	1e32c <__assert_fail@plt+0xce28>
   1e320:	ldr	r0, [sp, #16]
   1e324:	cmp	r0, #95	; 0x5f
   1e328:	bne	1e354 <__assert_fail@plt+0xce50>
   1e32c:	ldr	r0, [fp, #-12]
   1e330:	mov	r1, #1
   1e334:	lsl	r0, r1, r0
   1e338:	ldr	r1, [fp, #-4]
   1e33c:	add	r1, r1, #96	; 0x60
   1e340:	ldr	r2, [fp, #-8]
   1e344:	add	r1, r1, r2, lsl #2
   1e348:	ldr	r2, [r1]
   1e34c:	orr	r0, r2, r0
   1e350:	str	r0, [r1]
   1e354:	b	1e358 <__assert_fail@plt+0xce54>
   1e358:	ldr	r0, [fp, #-12]
   1e35c:	add	r0, r0, #1
   1e360:	str	r0, [fp, #-12]
   1e364:	ldr	r0, [sp, #16]
   1e368:	add	r0, r0, #1
   1e36c:	str	r0, [sp, #16]
   1e370:	b	1e2f4 <__assert_fail@plt+0xcdf0>
   1e374:	b	1e378 <__assert_fail@plt+0xce74>
   1e378:	ldr	r0, [fp, #-8]
   1e37c:	add	r0, r0, #1
   1e380:	str	r0, [fp, #-8]
   1e384:	b	1e2e0 <__assert_fail@plt+0xcddc>
   1e388:	mov	sp, fp
   1e38c:	pop	{fp, pc}
   1e390:	push	{fp, lr}
   1e394:	mov	fp, sp
   1e398:	sub	sp, sp, #80	; 0x50
   1e39c:	ldr	ip, [fp, #12]
   1e3a0:	ldr	lr, [fp, #8]
   1e3a4:	str	r0, [fp, #-8]
   1e3a8:	str	r1, [fp, #-12]
   1e3ac:	str	r2, [fp, #-16]
   1e3b0:	str	r3, [fp, #-20]	; 0xffffffec
   1e3b4:	and	r0, lr, #1
   1e3b8:	strb	r0, [fp, #-21]	; 0xffffffeb
   1e3bc:	movw	r0, #0
   1e3c0:	str	r0, [fp, #-36]	; 0xffffffdc
   1e3c4:	movw	r0, #32
   1e3c8:	movw	r1, #1
   1e3cc:	str	ip, [sp, #20]
   1e3d0:	bl	334b0 <__assert_fail@plt+0x21fac>
   1e3d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e3d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e3dc:	movw	r1, #0
   1e3e0:	cmp	r0, r1
   1e3e4:	bne	1e400 <__assert_fail@plt+0xcefc>
   1e3e8:	ldr	r0, [fp, #12]
   1e3ec:	movw	r1, #12
   1e3f0:	str	r1, [r0]
   1e3f4:	movw	r0, #0
   1e3f8:	str	r0, [fp, #-4]
   1e3fc:	b	1e6b4 <__assert_fail@plt+0xd1b0>
   1e400:	movw	r0, #40	; 0x28
   1e404:	movw	r1, #1
   1e408:	bl	334b0 <__assert_fail@plt+0x21fac>
   1e40c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e410:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e414:	movw	r1, #0
   1e418:	cmp	r0, r1
   1e41c:	bne	1e440 <__assert_fail@plt+0xcf3c>
   1e420:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e424:	bl	34c20 <__assert_fail@plt+0x2371c>
   1e428:	ldr	r0, [fp, #12]
   1e42c:	movw	r1, #12
   1e430:	str	r1, [r0]
   1e434:	movw	r0, #0
   1e438:	str	r0, [fp, #-4]
   1e43c:	b	1e6b4 <__assert_fail@plt+0xd1b0>
   1e440:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e444:	ldrb	r1, [r0, #16]
   1e448:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   1e44c:	and	r2, r2, #1
   1e450:	bic	r1, r1, #1
   1e454:	orr	r1, r1, r2
   1e458:	strb	r1, [r0, #16]
   1e45c:	ldr	r0, [fp, #-12]
   1e460:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e464:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e468:	ldr	r3, [fp, #-16]
   1e46c:	sub	ip, fp, #36	; 0x24
   1e470:	str	r3, [sp, #16]
   1e474:	mov	r3, ip
   1e478:	ldr	ip, [sp, #16]
   1e47c:	str	ip, [sp]
   1e480:	movw	lr, #0
   1e484:	str	lr, [sp, #4]
   1e488:	bl	1f7ac <__assert_fail@plt+0xe2a8>
   1e48c:	str	r0, [sp, #40]	; 0x28
   1e490:	ldr	r0, [sp, #40]	; 0x28
   1e494:	cmp	r0, #0
   1e498:	beq	1e4c4 <__assert_fail@plt+0xcfc0>
   1e49c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e4a0:	bl	34c20 <__assert_fail@plt+0x2371c>
   1e4a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e4a8:	bl	18b68 <__assert_fail@plt+0x7664>
   1e4ac:	ldr	r0, [sp, #40]	; 0x28
   1e4b0:	ldr	r1, [fp, #12]
   1e4b4:	str	r0, [r1]
   1e4b8:	movw	r0, #0
   1e4bc:	str	r0, [fp, #-4]
   1e4c0:	b	1e6b4 <__assert_fail@plt+0xd1b0>
   1e4c4:	b	1e4c8 <__assert_fail@plt+0xcfc4>
   1e4c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e4cc:	ldrsb	r0, [r0]
   1e4d0:	cmp	r0, #0
   1e4d4:	beq	1e4f8 <__assert_fail@plt+0xcff4>
   1e4d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e4dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e4e0:	ldrb	r1, [r1]
   1e4e4:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1e4e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e4ec:	add	r0, r0, #1
   1e4f0:	str	r0, [fp, #-20]	; 0xffffffec
   1e4f4:	b	1e4c8 <__assert_fail@plt+0xcfc4>
   1e4f8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   1e4fc:	tst	r0, #1
   1e500:	beq	1e50c <__assert_fail@plt+0xd008>
   1e504:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e508:	bl	2044c <__assert_fail@plt+0xef48>
   1e50c:	ldr	r0, [fp, #-8]
   1e510:	ldr	r0, [r0, #92]	; 0x5c
   1e514:	cmp	r0, #1
   1e518:	ble	1e52c <__assert_fail@plt+0xd028>
   1e51c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e520:	ldr	r1, [fp, #-8]
   1e524:	ldr	r1, [r1, #60]	; 0x3c
   1e528:	bl	20494 <__assert_fail@plt+0xef90>
   1e52c:	ldr	r0, [pc, #396]	; 1e6c0 <__assert_fail@plt+0xd1bc>
   1e530:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e534:	str	r1, [sp, #28]
   1e538:	ldr	r1, [sp, #32]
   1e53c:	mvn	r2, #255	; 0xff
   1e540:	and	r1, r1, r2
   1e544:	orr	r1, r1, #3
   1e548:	str	r1, [sp, #32]
   1e54c:	ldr	r1, [sp, #32]
   1e550:	and	r0, r1, r0
   1e554:	str	r0, [sp, #32]
   1e558:	ldr	r0, [sp, #32]
   1e55c:	mvn	r1, #262144	; 0x40000
   1e560:	and	r0, r0, r1
   1e564:	str	r0, [sp, #32]
   1e568:	ldr	r0, [sp, #32]
   1e56c:	mvn	r1, #524288	; 0x80000
   1e570:	and	r0, r0, r1
   1e574:	str	r0, [sp, #32]
   1e578:	ldr	r0, [sp, #32]
   1e57c:	mvn	r1, #1048576	; 0x100000
   1e580:	and	r0, r0, r1
   1e584:	str	r0, [sp, #32]
   1e588:	ldr	r0, [sp, #32]
   1e58c:	mvn	r1, #2097152	; 0x200000
   1e590:	and	r0, r0, r1
   1e594:	str	r0, [sp, #32]
   1e598:	ldr	r0, [sp, #32]
   1e59c:	mvn	r1, #4194304	; 0x400000
   1e5a0:	and	r0, r0, r1
   1e5a4:	str	r0, [sp, #32]
   1e5a8:	ldr	r0, [fp, #-8]
   1e5ac:	movw	r1, #0
   1e5b0:	str	r1, [sp, #12]
   1e5b4:	ldr	r2, [sp, #12]
   1e5b8:	add	r3, sp, #28
   1e5bc:	bl	1d594 <__assert_fail@plt+0xc090>
   1e5c0:	str	r0, [sp, #36]	; 0x24
   1e5c4:	ldr	r0, [sp, #36]	; 0x24
   1e5c8:	movw	r1, #0
   1e5cc:	cmp	r0, r1
   1e5d0:	bne	1e5d8 <__assert_fail@plt+0xd0d4>
   1e5d4:	b	1e690 <__assert_fail@plt+0xd18c>
   1e5d8:	ldr	r0, [fp, #-8]
   1e5dc:	ldr	r0, [r0, #92]	; 0x5c
   1e5e0:	cmp	r0, #1
   1e5e4:	ble	1e678 <__assert_fail@plt+0xd174>
   1e5e8:	mov	r0, #6
   1e5ec:	strb	r0, [sp, #32]
   1e5f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e5f4:	str	r0, [sp, #28]
   1e5f8:	ldr	r0, [fp, #-8]
   1e5fc:	ldrb	r1, [r0, #88]	; 0x58
   1e600:	bic	r1, r1, #2
   1e604:	movw	r2, #2
   1e608:	orr	r1, r1, r2
   1e60c:	strb	r1, [r0, #88]	; 0x58
   1e610:	ldr	r0, [fp, #-8]
   1e614:	movw	r1, #0
   1e618:	str	r1, [sp, #8]
   1e61c:	ldr	r2, [sp, #8]
   1e620:	add	r3, sp, #28
   1e624:	bl	1d594 <__assert_fail@plt+0xc090>
   1e628:	str	r0, [sp, #24]
   1e62c:	ldr	r0, [sp, #24]
   1e630:	movw	r1, #0
   1e634:	cmp	r0, r1
   1e638:	bne	1e640 <__assert_fail@plt+0xd13c>
   1e63c:	b	1e690 <__assert_fail@plt+0xd18c>
   1e640:	ldr	r0, [fp, #-8]
   1e644:	ldr	r1, [sp, #36]	; 0x24
   1e648:	ldr	r2, [sp, #24]
   1e64c:	movw	r3, #10
   1e650:	bl	1b530 <__assert_fail@plt+0xa02c>
   1e654:	str	r0, [sp, #36]	; 0x24
   1e658:	ldr	r0, [sp, #24]
   1e65c:	movw	r1, #0
   1e660:	cmp	r0, r1
   1e664:	beq	1e674 <__assert_fail@plt+0xd170>
   1e668:	ldr	r0, [sp, #36]	; 0x24
   1e66c:	str	r0, [fp, #-4]
   1e670:	b	1e6b4 <__assert_fail@plt+0xd1b0>
   1e674:	b	1e68c <__assert_fail@plt+0xd188>
   1e678:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e67c:	bl	18b68 <__assert_fail@plt+0x7664>
   1e680:	ldr	r0, [sp, #36]	; 0x24
   1e684:	str	r0, [fp, #-4]
   1e688:	b	1e6b4 <__assert_fail@plt+0xd1b0>
   1e68c:	b	1e690 <__assert_fail@plt+0xd18c>
   1e690:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e694:	bl	34c20 <__assert_fail@plt+0x2371c>
   1e698:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e69c:	bl	18b68 <__assert_fail@plt+0x7664>
   1e6a0:	ldr	r0, [fp, #12]
   1e6a4:	movw	r1, #12
   1e6a8:	str	r1, [r0]
   1e6ac:	movw	r0, #0
   1e6b0:	str	r0, [fp, #-4]
   1e6b4:	ldr	r0, [fp, #-4]
   1e6b8:	mov	sp, fp
   1e6bc:	pop	{fp, pc}
   1e6c0:			; <UNDEFINED> instruction: 0xfffc00ff
   1e6c4:	push	{fp, lr}
   1e6c8:	mov	fp, sp
   1e6cc:	sub	sp, sp, #96	; 0x60
   1e6d0:	ldr	ip, [fp, #12]
   1e6d4:	ldr	lr, [fp, #8]
   1e6d8:	str	r0, [fp, #-8]
   1e6dc:	str	r1, [fp, #-12]
   1e6e0:	str	r2, [fp, #-16]
   1e6e4:	str	r3, [fp, #-20]	; 0xffffffec
   1e6e8:	movw	r0, #0
   1e6ec:	str	r0, [fp, #-24]	; 0xffffffe8
   1e6f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e6f4:	ldr	r0, [fp, #-12]
   1e6f8:	ldr	r0, [r0, #40]	; 0x28
   1e6fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1e700:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e704:	ldr	r1, [r0]
   1e708:	str	r1, [sp, #44]	; 0x2c
   1e70c:	ldr	r0, [r0, #4]
   1e710:	str	r0, [sp, #48]	; 0x30
   1e714:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e718:	ldr	r0, [r0, #4]
   1e71c:	and	r0, r0, #255	; 0xff
   1e720:	cmp	r0, #23
   1e724:	bne	1e9a8 <__assert_fail@plt+0xd4a4>
   1e728:	movw	r0, #0
   1e72c:	str	r0, [fp, #-40]	; 0xffffffd8
   1e730:	ldr	r0, [fp, #-12]
   1e734:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e738:	ldr	r2, [fp, #8]
   1e73c:	bl	20958 <__assert_fail@plt+0xf454>
   1e740:	str	r0, [fp, #-36]	; 0xffffffdc
   1e744:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e748:	cmn	r0, #1
   1e74c:	bne	1e79c <__assert_fail@plt+0xd298>
   1e750:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e754:	ldr	r0, [r0, #4]
   1e758:	and	r0, r0, #255	; 0xff
   1e75c:	cmp	r0, #1
   1e760:	bne	1e780 <__assert_fail@plt+0xd27c>
   1e764:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e768:	ldrb	r0, [r0]
   1e76c:	cmp	r0, #44	; 0x2c
   1e770:	bne	1e780 <__assert_fail@plt+0xd27c>
   1e774:	movw	r0, #0
   1e778:	str	r0, [fp, #-36]	; 0xffffffdc
   1e77c:	b	1e798 <__assert_fail@plt+0xd294>
   1e780:	ldr	r0, [fp, #12]
   1e784:	movw	r1, #10
   1e788:	str	r1, [r0]
   1e78c:	movw	r0, #0
   1e790:	str	r0, [fp, #-4]
   1e794:	b	1ed04 <__assert_fail@plt+0xd800>
   1e798:	b	1e79c <__assert_fail@plt+0xd298>
   1e79c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e7a0:	cmn	r0, #2
   1e7a4:	beq	1e820 <__assert_fail@plt+0xd31c>
   1e7a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e7ac:	ldr	r0, [r0, #4]
   1e7b0:	and	r0, r0, #255	; 0xff
   1e7b4:	cmp	r0, #24
   1e7b8:	bne	1e7c8 <__assert_fail@plt+0xd2c4>
   1e7bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e7c0:	str	r0, [sp, #36]	; 0x24
   1e7c4:	b	1e818 <__assert_fail@plt+0xd314>
   1e7c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e7cc:	ldr	r0, [r0, #4]
   1e7d0:	and	r0, r0, #255	; 0xff
   1e7d4:	cmp	r0, #1
   1e7d8:	bne	1e804 <__assert_fail@plt+0xd300>
   1e7dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e7e0:	ldrb	r0, [r0]
   1e7e4:	cmp	r0, #44	; 0x2c
   1e7e8:	bne	1e804 <__assert_fail@plt+0xd300>
   1e7ec:	ldr	r0, [fp, #-12]
   1e7f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e7f4:	ldr	r2, [fp, #8]
   1e7f8:	bl	20958 <__assert_fail@plt+0xf454>
   1e7fc:	str	r0, [sp, #32]
   1e800:	b	1e810 <__assert_fail@plt+0xd30c>
   1e804:	mvn	r0, #1
   1e808:	str	r0, [sp, #32]
   1e80c:	b	1e810 <__assert_fail@plt+0xd30c>
   1e810:	ldr	r0, [sp, #32]
   1e814:	str	r0, [sp, #36]	; 0x24
   1e818:	ldr	r0, [sp, #36]	; 0x24
   1e81c:	str	r0, [fp, #-40]	; 0xffffffd8
   1e820:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e824:	cmn	r0, #2
   1e828:	movw	r0, #1
   1e82c:	str	r0, [sp, #28]
   1e830:	beq	1e848 <__assert_fail@plt+0xd344>
   1e834:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e838:	cmn	r0, #2
   1e83c:	movw	r0, #0
   1e840:	moveq	r0, #1
   1e844:	str	r0, [sp, #28]
   1e848:	ldr	r0, [sp, #28]
   1e84c:	tst	r0, #1
   1e850:	beq	1e8f8 <__assert_fail@plt+0xd3f4>
   1e854:	ldr	r0, [fp, #8]
   1e858:	and	r0, r0, #2097152	; 0x200000
   1e85c:	cmp	r0, #0
   1e860:	movw	r0, #0
   1e864:	movne	r0, #1
   1e868:	mvn	r1, #0
   1e86c:	eor	r0, r0, r1
   1e870:	tst	r0, #1
   1e874:	beq	1e8b4 <__assert_fail@plt+0xd3b0>
   1e878:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e87c:	ldr	r0, [r0, #4]
   1e880:	and	r0, r0, #255	; 0xff
   1e884:	cmp	r0, #2
   1e888:	bne	1e89c <__assert_fail@plt+0xd398>
   1e88c:	ldr	r0, [fp, #12]
   1e890:	movw	r1, #9
   1e894:	str	r1, [r0]
   1e898:	b	1e8a8 <__assert_fail@plt+0xd3a4>
   1e89c:	ldr	r0, [fp, #12]
   1e8a0:	movw	r1, #10
   1e8a4:	str	r1, [r0]
   1e8a8:	movw	r0, #0
   1e8ac:	str	r0, [fp, #-4]
   1e8b0:	b	1ed04 <__assert_fail@plt+0xd800>
   1e8b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e8b8:	ldr	r1, [fp, #-12]
   1e8bc:	str	r0, [r1, #40]	; 0x28
   1e8c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e8c4:	ldr	r1, [sp, #44]	; 0x2c
   1e8c8:	str	r1, [r0]
   1e8cc:	ldr	r1, [sp, #48]	; 0x30
   1e8d0:	str	r1, [r0, #4]
   1e8d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e8d8:	ldr	r1, [r0, #4]
   1e8dc:	mvn	r2, #255	; 0xff
   1e8e0:	and	r1, r1, r2
   1e8e4:	orr	r1, r1, #1
   1e8e8:	str	r1, [r0, #4]
   1e8ec:	ldr	r0, [fp, #-8]
   1e8f0:	str	r0, [fp, #-4]
   1e8f4:	b	1ed04 <__assert_fail@plt+0xd800>
   1e8f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e8fc:	cmn	r0, #1
   1e900:	beq	1e91c <__assert_fail@plt+0xd418>
   1e904:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e908:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e90c:	cmp	r0, r1
   1e910:	movw	r0, #1
   1e914:	str	r0, [sp, #24]
   1e918:	bgt	1e938 <__assert_fail@plt+0xd434>
   1e91c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e920:	ldr	r0, [r0, #4]
   1e924:	and	r0, r0, #255	; 0xff
   1e928:	cmp	r0, #24
   1e92c:	movw	r0, #0
   1e930:	movne	r0, #1
   1e934:	str	r0, [sp, #24]
   1e938:	ldr	r0, [sp, #24]
   1e93c:	tst	r0, #1
   1e940:	beq	1e95c <__assert_fail@plt+0xd458>
   1e944:	ldr	r0, [fp, #12]
   1e948:	movw	r1, #10
   1e94c:	str	r1, [r0]
   1e950:	movw	r0, #0
   1e954:	str	r0, [fp, #-4]
   1e958:	b	1ed04 <__assert_fail@plt+0xd800>
   1e95c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e960:	cmn	r0, #1
   1e964:	bne	1e974 <__assert_fail@plt+0xd470>
   1e968:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e96c:	str	r0, [sp, #20]
   1e970:	b	1e97c <__assert_fail@plt+0xd478>
   1e974:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e978:	str	r0, [sp, #20]
   1e97c:	ldr	r0, [sp, #20]
   1e980:	movw	r1, #32767	; 0x7fff
   1e984:	cmp	r1, r0
   1e988:	bge	1e9a4 <__assert_fail@plt+0xd4a0>
   1e98c:	ldr	r0, [fp, #12]
   1e990:	movw	r1, #15
   1e994:	str	r1, [r0]
   1e998:	movw	r0, #0
   1e99c:	str	r0, [fp, #-4]
   1e9a0:	b	1ed04 <__assert_fail@plt+0xd800>
   1e9a4:	b	1e9f8 <__assert_fail@plt+0xd4f4>
   1e9a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e9ac:	ldr	r0, [r0, #4]
   1e9b0:	and	r0, r0, #255	; 0xff
   1e9b4:	cmp	r0, #18
   1e9b8:	movw	r0, #0
   1e9bc:	moveq	r0, #1
   1e9c0:	tst	r0, #1
   1e9c4:	movw	r0, #1
   1e9c8:	mov	r1, r0
   1e9cc:	moveq	r1, #0
   1e9d0:	str	r1, [fp, #-36]	; 0xffffffdc
   1e9d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e9d8:	ldr	r1, [r1, #4]
   1e9dc:	and	r1, r1, #255	; 0xff
   1e9e0:	cmp	r1, #19
   1e9e4:	movw	r1, #0
   1e9e8:	moveq	r1, #1
   1e9ec:	tst	r1, #1
   1e9f0:	mvneq	r0, #0
   1e9f4:	str	r0, [fp, #-40]	; 0xffffffd8
   1e9f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e9fc:	ldr	r1, [fp, #-12]
   1ea00:	ldr	r2, [fp, #8]
   1ea04:	bl	1b29c <__assert_fail@plt+0x9d98>
   1ea08:	ldr	r0, [fp, #-8]
   1ea0c:	movw	r1, #0
   1ea10:	cmp	r0, r1
   1ea14:	bne	1ea24 <__assert_fail@plt+0xd520>
   1ea18:	movw	r0, #0
   1ea1c:	str	r0, [fp, #-4]
   1ea20:	b	1ed04 <__assert_fail@plt+0xd800>
   1ea24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ea28:	cmp	r0, #0
   1ea2c:	movw	r0, #0
   1ea30:	str	r0, [sp, #16]
   1ea34:	bne	1ea4c <__assert_fail@plt+0xd548>
   1ea38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ea3c:	cmp	r0, #0
   1ea40:	movw	r0, #0
   1ea44:	moveq	r0, #1
   1ea48:	str	r0, [sp, #16]
   1ea4c:	ldr	r0, [sp, #16]
   1ea50:	tst	r0, #1
   1ea54:	beq	1ea78 <__assert_fail@plt+0xd574>
   1ea58:	ldr	r0, [fp, #-8]
   1ea5c:	movw	r1, #51856	; 0xca90
   1ea60:	movt	r1, #1
   1ea64:	movw	r2, #0
   1ea68:	bl	1c920 <__assert_fail@plt+0xb41c>
   1ea6c:	movw	r1, #0
   1ea70:	str	r1, [fp, #-4]
   1ea74:	b	1ed04 <__assert_fail@plt+0xd800>
   1ea78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ea7c:	cmp	r0, #0
   1ea80:	ble	1eb6c <__assert_fail@plt+0xd668>
   1ea84:	ldr	r0, [fp, #-8]
   1ea88:	str	r0, [fp, #-24]	; 0xffffffe8
   1ea8c:	movw	r0, #2
   1ea90:	str	r0, [fp, #-32]	; 0xffffffe0
   1ea94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ea98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ea9c:	cmp	r0, r1
   1eaa0:	bgt	1eb20 <__assert_fail@plt+0xd61c>
   1eaa4:	ldr	r0, [fp, #-8]
   1eaa8:	ldr	r1, [fp, #-16]
   1eaac:	bl	20ab8 <__assert_fail@plt+0xf5b4>
   1eab0:	str	r0, [fp, #-8]
   1eab4:	ldr	r0, [fp, #-16]
   1eab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eabc:	ldr	r2, [fp, #-8]
   1eac0:	movw	r3, #16
   1eac4:	bl	1b530 <__assert_fail@plt+0xa02c>
   1eac8:	str	r0, [fp, #-24]	; 0xffffffe8
   1eacc:	ldr	r0, [fp, #-8]
   1ead0:	movw	r1, #0
   1ead4:	cmp	r0, r1
   1ead8:	movw	r0, #1
   1eadc:	str	r0, [sp, #12]
   1eae0:	beq	1eafc <__assert_fail@plt+0xd5f8>
   1eae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eae8:	movw	r1, #0
   1eaec:	cmp	r0, r1
   1eaf0:	movw	r0, #0
   1eaf4:	moveq	r0, #1
   1eaf8:	str	r0, [sp, #12]
   1eafc:	ldr	r0, [sp, #12]
   1eb00:	tst	r0, #1
   1eb04:	beq	1eb0c <__assert_fail@plt+0xd608>
   1eb08:	b	1ecf0 <__assert_fail@plt+0xd7ec>
   1eb0c:	b	1eb10 <__assert_fail@plt+0xd60c>
   1eb10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eb14:	add	r0, r0, #1
   1eb18:	str	r0, [fp, #-32]	; 0xffffffe0
   1eb1c:	b	1ea94 <__assert_fail@plt+0xd590>
   1eb20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1eb24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1eb28:	cmp	r0, r1
   1eb2c:	bne	1eb3c <__assert_fail@plt+0xd638>
   1eb30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb34:	str	r0, [fp, #-4]
   1eb38:	b	1ed04 <__assert_fail@plt+0xd800>
   1eb3c:	ldr	r0, [fp, #-8]
   1eb40:	ldr	r1, [fp, #-16]
   1eb44:	bl	20ab8 <__assert_fail@plt+0xf5b4>
   1eb48:	str	r0, [fp, #-8]
   1eb4c:	ldr	r0, [fp, #-8]
   1eb50:	movw	r1, #0
   1eb54:	cmp	r0, r1
   1eb58:	bne	1eb60 <__assert_fail@plt+0xd65c>
   1eb5c:	b	1ecf0 <__assert_fail@plt+0xd7ec>
   1eb60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb64:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb68:	b	1eb74 <__assert_fail@plt+0xd670>
   1eb6c:	movw	r0, #0
   1eb70:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb74:	ldr	r0, [fp, #-8]
   1eb78:	ldr	r0, [r0, #24]
   1eb7c:	and	r0, r0, #255	; 0xff
   1eb80:	cmp	r0, #17
   1eb84:	bne	1eba8 <__assert_fail@plt+0xd6a4>
   1eb88:	ldr	r0, [fp, #-8]
   1eb8c:	ldr	r0, [r0, #20]
   1eb90:	str	r0, [sp, #40]	; 0x28
   1eb94:	ldr	r0, [fp, #-8]
   1eb98:	ldr	r2, [sp, #40]	; 0x28
   1eb9c:	movw	r1, #3144	; 0xc48
   1eba0:	movt	r1, #2
   1eba4:	bl	1c920 <__assert_fail@plt+0xb41c>
   1eba8:	ldr	r0, [fp, #-16]
   1ebac:	ldr	r1, [fp, #-8]
   1ebb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ebb4:	cmn	r2, #1
   1ebb8:	movw	r2, #0
   1ebbc:	moveq	r2, #1
   1ebc0:	tst	r2, #1
   1ebc4:	movw	r2, #11
   1ebc8:	moveq	r2, #10
   1ebcc:	movw	r3, #0
   1ebd0:	str	r2, [sp, #8]
   1ebd4:	mov	r2, r3
   1ebd8:	ldr	r3, [sp, #8]
   1ebdc:	bl	1b530 <__assert_fail@plt+0xa02c>
   1ebe0:	str	r0, [fp, #-24]	; 0xffffffe8
   1ebe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebe8:	movw	r1, #0
   1ebec:	cmp	r0, r1
   1ebf0:	bne	1ebf8 <__assert_fail@plt+0xd6f4>
   1ebf4:	b	1ecf0 <__assert_fail@plt+0xd7ec>
   1ebf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ebfc:	add	r0, r0, #2
   1ec00:	str	r0, [fp, #-32]	; 0xffffffe0
   1ec04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ec08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ec0c:	cmp	r0, r1
   1ec10:	bgt	1ecbc <__assert_fail@plt+0xd7b8>
   1ec14:	ldr	r0, [fp, #-8]
   1ec18:	ldr	r1, [fp, #-16]
   1ec1c:	bl	20ab8 <__assert_fail@plt+0xf5b4>
   1ec20:	str	r0, [fp, #-8]
   1ec24:	ldr	r0, [fp, #-16]
   1ec28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec2c:	ldr	r2, [fp, #-8]
   1ec30:	movw	r3, #16
   1ec34:	bl	1b530 <__assert_fail@plt+0xa02c>
   1ec38:	str	r0, [fp, #-24]	; 0xffffffe8
   1ec3c:	ldr	r0, [fp, #-8]
   1ec40:	movw	r1, #0
   1ec44:	cmp	r0, r1
   1ec48:	movw	r0, #1
   1ec4c:	str	r0, [sp, #4]
   1ec50:	beq	1ec6c <__assert_fail@plt+0xd768>
   1ec54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec58:	movw	r1, #0
   1ec5c:	cmp	r0, r1
   1ec60:	movw	r0, #0
   1ec64:	moveq	r0, #1
   1ec68:	str	r0, [sp, #4]
   1ec6c:	ldr	r0, [sp, #4]
   1ec70:	tst	r0, #1
   1ec74:	beq	1ec7c <__assert_fail@plt+0xd778>
   1ec78:	b	1ecf0 <__assert_fail@plt+0xd7ec>
   1ec7c:	ldr	r0, [fp, #-16]
   1ec80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec84:	movw	r2, #0
   1ec88:	movw	r3, #10
   1ec8c:	bl	1b530 <__assert_fail@plt+0xa02c>
   1ec90:	str	r0, [fp, #-24]	; 0xffffffe8
   1ec94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec98:	movw	r1, #0
   1ec9c:	cmp	r0, r1
   1eca0:	bne	1eca8 <__assert_fail@plt+0xd7a4>
   1eca4:	b	1ecf0 <__assert_fail@plt+0xd7ec>
   1eca8:	b	1ecac <__assert_fail@plt+0xd7a8>
   1ecac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ecb0:	add	r0, r0, #1
   1ecb4:	str	r0, [fp, #-32]	; 0xffffffe0
   1ecb8:	b	1ec04 <__assert_fail@plt+0xd700>
   1ecbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ecc0:	movw	r1, #0
   1ecc4:	cmp	r0, r1
   1ecc8:	beq	1ece4 <__assert_fail@plt+0xd7e0>
   1eccc:	ldr	r0, [fp, #-16]
   1ecd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ecd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ecd8:	movw	r3, #16
   1ecdc:	bl	1b530 <__assert_fail@plt+0xa02c>
   1ece0:	str	r0, [fp, #-24]	; 0xffffffe8
   1ece4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ece8:	str	r0, [fp, #-4]
   1ecec:	b	1ed04 <__assert_fail@plt+0xd800>
   1ecf0:	ldr	r0, [fp, #12]
   1ecf4:	movw	r1, #12
   1ecf8:	str	r1, [r0]
   1ecfc:	movw	r0, #0
   1ed00:	str	r0, [fp, #-4]
   1ed04:	ldr	r0, [fp, #-4]
   1ed08:	mov	sp, fp
   1ed0c:	pop	{fp, pc}
   1ed10:	sub	sp, sp, #32
   1ed14:	str	r0, [sp, #24]
   1ed18:	str	r1, [sp, #20]
   1ed1c:	str	r2, [sp, #16]
   1ed20:	ldr	r0, [sp, #20]
   1ed24:	ldr	r0, [r0, #56]	; 0x38
   1ed28:	ldr	r1, [sp, #20]
   1ed2c:	ldr	r1, [r1, #40]	; 0x28
   1ed30:	cmp	r0, r1
   1ed34:	bgt	1ed5c <__assert_fail@plt+0xd858>
   1ed38:	ldr	r0, [sp, #24]
   1ed3c:	ldr	r1, [r0, #4]
   1ed40:	mvn	r2, #255	; 0xff
   1ed44:	and	r1, r1, r2
   1ed48:	orr	r1, r1, #2
   1ed4c:	str	r1, [r0, #4]
   1ed50:	movw	r0, #0
   1ed54:	str	r0, [sp, #28]
   1ed58:	b	1f074 <__assert_fail@plt+0xdb70>
   1ed5c:	ldr	r0, [sp, #20]
   1ed60:	ldr	r0, [r0, #4]
   1ed64:	ldr	r1, [sp, #20]
   1ed68:	ldr	r1, [r1, #40]	; 0x28
   1ed6c:	add	r1, r1, #0
   1ed70:	add	r0, r0, r1
   1ed74:	ldrb	r0, [r0]
   1ed78:	strb	r0, [sp, #15]
   1ed7c:	ldrb	r0, [sp, #15]
   1ed80:	ldr	r1, [sp, #24]
   1ed84:	strb	r0, [r1]
   1ed88:	ldr	r0, [sp, #20]
   1ed8c:	ldr	r0, [r0, #80]	; 0x50
   1ed90:	cmp	r0, #1
   1ed94:	ble	1edf0 <__assert_fail@plt+0xd8ec>
   1ed98:	ldr	r0, [sp, #20]
   1ed9c:	ldr	r0, [r0, #40]	; 0x28
   1eda0:	ldr	r1, [sp, #20]
   1eda4:	ldr	r1, [r1, #28]
   1eda8:	cmp	r0, r1
   1edac:	beq	1edf0 <__assert_fail@plt+0xd8ec>
   1edb0:	ldr	r0, [sp, #20]
   1edb4:	ldr	r1, [r0, #8]
   1edb8:	ldr	r0, [r0, #40]	; 0x28
   1edbc:	add	r0, r1, r0, lsl #2
   1edc0:	ldr	r0, [r0]
   1edc4:	cmn	r0, #1
   1edc8:	bne	1edf0 <__assert_fail@plt+0xd8ec>
   1edcc:	ldr	r0, [sp, #24]
   1edd0:	ldr	r1, [r0, #4]
   1edd4:	mvn	r2, #255	; 0xff
   1edd8:	and	r1, r1, r2
   1eddc:	orr	r1, r1, #1
   1ede0:	str	r1, [r0, #4]
   1ede4:	movw	r0, #1
   1ede8:	str	r0, [sp, #28]
   1edec:	b	1f074 <__assert_fail@plt+0xdb70>
   1edf0:	ldrb	r0, [sp, #15]
   1edf4:	cmp	r0, #92	; 0x5c
   1edf8:	bne	1ee88 <__assert_fail@plt+0xd984>
   1edfc:	ldr	r0, [sp, #16]
   1ee00:	and	r0, r0, #1
   1ee04:	cmp	r0, #0
   1ee08:	beq	1ee88 <__assert_fail@plt+0xd984>
   1ee0c:	ldr	r0, [sp, #20]
   1ee10:	ldr	r0, [r0, #40]	; 0x28
   1ee14:	add	r0, r0, #1
   1ee18:	ldr	r1, [sp, #20]
   1ee1c:	ldr	r1, [r1, #48]	; 0x30
   1ee20:	cmp	r0, r1
   1ee24:	bge	1ee88 <__assert_fail@plt+0xd984>
   1ee28:	ldr	r0, [sp, #20]
   1ee2c:	ldr	r1, [r0, #40]	; 0x28
   1ee30:	add	r1, r1, #1
   1ee34:	str	r1, [r0, #40]	; 0x28
   1ee38:	ldr	r0, [sp, #20]
   1ee3c:	ldr	r0, [r0, #4]
   1ee40:	ldr	r1, [sp, #20]
   1ee44:	ldr	r1, [r1, #40]	; 0x28
   1ee48:	add	r1, r1, #0
   1ee4c:	add	r0, r0, r1
   1ee50:	ldrb	r0, [r0]
   1ee54:	strb	r0, [sp, #14]
   1ee58:	ldrb	r0, [sp, #14]
   1ee5c:	ldr	r1, [sp, #24]
   1ee60:	strb	r0, [r1]
   1ee64:	ldr	r0, [sp, #24]
   1ee68:	ldr	r1, [r0, #4]
   1ee6c:	mvn	r2, #255	; 0xff
   1ee70:	and	r1, r1, r2
   1ee74:	orr	r1, r1, #1
   1ee78:	str	r1, [r0, #4]
   1ee7c:	movw	r0, #1
   1ee80:	str	r0, [sp, #28]
   1ee84:	b	1f074 <__assert_fail@plt+0xdb70>
   1ee88:	ldrb	r0, [sp, #15]
   1ee8c:	cmp	r0, #91	; 0x5b
   1ee90:	bne	1efc8 <__assert_fail@plt+0xdac4>
   1ee94:	ldr	r0, [sp, #20]
   1ee98:	ldr	r0, [r0, #40]	; 0x28
   1ee9c:	add	r0, r0, #1
   1eea0:	ldr	r1, [sp, #20]
   1eea4:	ldr	r1, [r1, #48]	; 0x30
   1eea8:	cmp	r0, r1
   1eeac:	bge	1eed4 <__assert_fail@plt+0xd9d0>
   1eeb0:	ldr	r0, [sp, #20]
   1eeb4:	ldr	r0, [r0, #4]
   1eeb8:	ldr	r1, [sp, #20]
   1eebc:	ldr	r1, [r1, #40]	; 0x28
   1eec0:	add	r1, r1, #1
   1eec4:	add	r0, r0, r1
   1eec8:	ldrb	r0, [r0]
   1eecc:	strb	r0, [sp, #13]
   1eed0:	b	1eedc <__assert_fail@plt+0xd9d8>
   1eed4:	movw	r0, #0
   1eed8:	strb	r0, [sp, #13]
   1eedc:	ldrb	r0, [sp, #13]
   1eee0:	ldr	r1, [sp, #24]
   1eee4:	strb	r0, [r1]
   1eee8:	mov	r0, #2
   1eeec:	str	r0, [sp, #8]
   1eef0:	ldrb	r0, [sp, #13]
   1eef4:	mov	r1, r0
   1eef8:	cmp	r0, #46	; 0x2e
   1eefc:	str	r1, [sp, #4]
   1ef00:	beq	1ef28 <__assert_fail@plt+0xda24>
   1ef04:	b	1ef08 <__assert_fail@plt+0xda04>
   1ef08:	ldr	r0, [sp, #4]
   1ef0c:	cmp	r0, #58	; 0x3a
   1ef10:	beq	1ef60 <__assert_fail@plt+0xda5c>
   1ef14:	b	1ef18 <__assert_fail@plt+0xda14>
   1ef18:	ldr	r0, [sp, #4]
   1ef1c:	cmp	r0, #61	; 0x3d
   1ef20:	beq	1ef44 <__assert_fail@plt+0xda40>
   1ef24:	b	1ef90 <__assert_fail@plt+0xda8c>
   1ef28:	ldr	r0, [sp, #24]
   1ef2c:	ldr	r1, [r0, #4]
   1ef30:	mvn	r2, #255	; 0xff
   1ef34:	and	r1, r1, r2
   1ef38:	orr	r1, r1, #26
   1ef3c:	str	r1, [r0, #4]
   1ef40:	b	1efbc <__assert_fail@plt+0xdab8>
   1ef44:	ldr	r0, [sp, #24]
   1ef48:	ldr	r1, [r0, #4]
   1ef4c:	mvn	r2, #255	; 0xff
   1ef50:	and	r1, r1, r2
   1ef54:	orr	r1, r1, #28
   1ef58:	str	r1, [r0, #4]
   1ef5c:	b	1efbc <__assert_fail@plt+0xdab8>
   1ef60:	ldr	r0, [sp, #16]
   1ef64:	and	r0, r0, #4
   1ef68:	cmp	r0, #0
   1ef6c:	beq	1ef8c <__assert_fail@plt+0xda88>
   1ef70:	ldr	r0, [sp, #24]
   1ef74:	ldr	r1, [r0, #4]
   1ef78:	mvn	r2, #255	; 0xff
   1ef7c:	and	r1, r1, r2
   1ef80:	orr	r1, r1, #30
   1ef84:	str	r1, [r0, #4]
   1ef88:	b	1efbc <__assert_fail@plt+0xdab8>
   1ef8c:	b	1ef90 <__assert_fail@plt+0xda8c>
   1ef90:	ldr	r0, [sp, #24]
   1ef94:	ldr	r1, [r0, #4]
   1ef98:	mvn	r2, #255	; 0xff
   1ef9c:	and	r1, r1, r2
   1efa0:	orr	r1, r1, #1
   1efa4:	str	r1, [r0, #4]
   1efa8:	ldrb	r0, [sp, #15]
   1efac:	ldr	r1, [sp, #24]
   1efb0:	strb	r0, [r1]
   1efb4:	movw	r0, #1
   1efb8:	str	r0, [sp, #8]
   1efbc:	ldr	r0, [sp, #8]
   1efc0:	str	r0, [sp, #28]
   1efc4:	b	1f074 <__assert_fail@plt+0xdb70>
   1efc8:	ldrb	r0, [sp, #15]
   1efcc:	mov	r1, r0
   1efd0:	cmp	r0, #45	; 0x2d
   1efd4:	str	r1, [sp]
   1efd8:	beq	1f000 <__assert_fail@plt+0xdafc>
   1efdc:	b	1efe0 <__assert_fail@plt+0xdadc>
   1efe0:	ldr	r0, [sp]
   1efe4:	cmp	r0, #93	; 0x5d
   1efe8:	beq	1f01c <__assert_fail@plt+0xdb18>
   1efec:	b	1eff0 <__assert_fail@plt+0xdaec>
   1eff0:	ldr	r0, [sp]
   1eff4:	cmp	r0, #94	; 0x5e
   1eff8:	beq	1f038 <__assert_fail@plt+0xdb34>
   1effc:	b	1f054 <__assert_fail@plt+0xdb50>
   1f000:	ldr	r0, [sp, #24]
   1f004:	ldr	r1, [r0, #4]
   1f008:	mvn	r2, #255	; 0xff
   1f00c:	and	r1, r1, r2
   1f010:	orr	r1, r1, #22
   1f014:	str	r1, [r0, #4]
   1f018:	b	1f06c <__assert_fail@plt+0xdb68>
   1f01c:	ldr	r0, [sp, #24]
   1f020:	ldr	r1, [r0, #4]
   1f024:	mvn	r2, #255	; 0xff
   1f028:	and	r1, r1, r2
   1f02c:	orr	r1, r1, #21
   1f030:	str	r1, [r0, #4]
   1f034:	b	1f06c <__assert_fail@plt+0xdb68>
   1f038:	ldr	r0, [sp, #24]
   1f03c:	ldr	r1, [r0, #4]
   1f040:	mvn	r2, #255	; 0xff
   1f044:	and	r1, r1, r2
   1f048:	orr	r1, r1, #25
   1f04c:	str	r1, [r0, #4]
   1f050:	b	1f06c <__assert_fail@plt+0xdb68>
   1f054:	ldr	r0, [sp, #24]
   1f058:	ldr	r1, [r0, #4]
   1f05c:	mvn	r2, #255	; 0xff
   1f060:	and	r1, r1, r2
   1f064:	orr	r1, r1, #1
   1f068:	str	r1, [r0, #4]
   1f06c:	movw	r0, #1
   1f070:	str	r0, [sp, #28]
   1f074:	ldr	r0, [sp, #28]
   1f078:	add	sp, sp, #32
   1f07c:	bx	lr
   1f080:	sub	sp, sp, #8
   1f084:	str	r0, [sp, #4]
   1f088:	str	r1, [sp]
   1f08c:	ldr	r0, [sp]
   1f090:	asr	r1, r0, #31
   1f094:	add	r1, r0, r1, lsr #27
   1f098:	bic	r2, r1, #31
   1f09c:	sub	r0, r0, r2
   1f0a0:	mov	r2, #1
   1f0a4:	lsl	r0, r2, r0
   1f0a8:	ldr	r2, [sp, #4]
   1f0ac:	asr	r1, r1, #5
   1f0b0:	add	r1, r2, r1, lsl #2
   1f0b4:	ldr	r2, [r1]
   1f0b8:	orr	r0, r2, r0
   1f0bc:	str	r0, [r1]
   1f0c0:	add	sp, sp, #8
   1f0c4:	bx	lr
   1f0c8:	push	{r4, sl, fp, lr}
   1f0cc:	add	fp, sp, #8
   1f0d0:	sub	sp, sp, #48	; 0x30
   1f0d4:	ldr	ip, [fp, #16]
   1f0d8:	ldr	lr, [fp, #12]
   1f0dc:	ldr	r4, [fp, #8]
   1f0e0:	str	r0, [fp, #-16]
   1f0e4:	str	r1, [fp, #-20]	; 0xffffffec
   1f0e8:	str	r2, [fp, #-24]	; 0xffffffe8
   1f0ec:	str	r3, [sp, #28]
   1f0f0:	and	r0, ip, #1
   1f0f4:	strb	r0, [sp, #27]
   1f0f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f0fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f100:	ldr	r1, [r1, #40]	; 0x28
   1f104:	str	lr, [sp, #8]
   1f108:	str	r4, [sp, #4]
   1f10c:	bl	204ec <__assert_fail@plt+0xefe8>
   1f110:	str	r0, [sp, #20]
   1f114:	ldr	r0, [sp, #20]
   1f118:	cmp	r0, #1
   1f11c:	ble	1f164 <__assert_fail@plt+0xdc60>
   1f120:	ldr	r0, [fp, #-16]
   1f124:	movw	r1, #1
   1f128:	str	r1, [r0]
   1f12c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f130:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f134:	ldr	r1, [r1, #40]	; 0x28
   1f138:	bl	1c638 <__assert_fail@plt+0xb134>
   1f13c:	ldr	r1, [fp, #-16]
   1f140:	str	r0, [r1, #4]
   1f144:	ldr	r0, [sp, #20]
   1f148:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f14c:	ldr	r2, [r1, #40]	; 0x28
   1f150:	add	r0, r2, r0
   1f154:	str	r0, [r1, #40]	; 0x28
   1f158:	movw	r0, #0
   1f15c:	str	r0, [fp, #-12]
   1f160:	b	1f23c <__assert_fail@plt+0xdd38>
   1f164:	ldr	r0, [sp, #28]
   1f168:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f16c:	ldr	r2, [r1, #40]	; 0x28
   1f170:	add	r0, r2, r0
   1f174:	str	r0, [r1, #40]	; 0x28
   1f178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f17c:	ldr	r0, [r0, #4]
   1f180:	and	r0, r0, #255	; 0xff
   1f184:	cmp	r0, #26
   1f188:	beq	1f1b4 <__assert_fail@plt+0xdcb0>
   1f18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f190:	ldr	r0, [r0, #4]
   1f194:	and	r0, r0, #255	; 0xff
   1f198:	cmp	r0, #30
   1f19c:	beq	1f1b4 <__assert_fail@plt+0xdcb0>
   1f1a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1a4:	ldr	r0, [r0, #4]
   1f1a8:	and	r0, r0, #255	; 0xff
   1f1ac:	cmp	r0, #28
   1f1b0:	bne	1f1cc <__assert_fail@plt+0xdcc8>
   1f1b4:	ldr	r0, [fp, #-16]
   1f1b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f1bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f1c0:	bl	20588 <__assert_fail@plt+0xf084>
   1f1c4:	str	r0, [fp, #-12]
   1f1c8:	b	1f23c <__assert_fail@plt+0xdd38>
   1f1cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1d0:	ldr	r0, [r0, #4]
   1f1d4:	and	r0, r0, #255	; 0xff
   1f1d8:	cmp	r0, #22
   1f1dc:	bne	1f21c <__assert_fail@plt+0xdd18>
   1f1e0:	ldrb	r0, [sp, #27]
   1f1e4:	tst	r0, #1
   1f1e8:	bne	1f21c <__assert_fail@plt+0xdd18>
   1f1ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f1f0:	ldr	r2, [fp, #12]
   1f1f4:	add	r0, sp, #12
   1f1f8:	bl	1ed10 <__assert_fail@plt+0xd80c>
   1f1fc:	ldr	r1, [sp, #16]
   1f200:	and	r1, r1, #255	; 0xff
   1f204:	cmp	r1, #21
   1f208:	beq	1f218 <__assert_fail@plt+0xdd14>
   1f20c:	movw	r0, #11
   1f210:	str	r0, [fp, #-12]
   1f214:	b	1f23c <__assert_fail@plt+0xdd38>
   1f218:	b	1f21c <__assert_fail@plt+0xdd18>
   1f21c:	ldr	r0, [fp, #-16]
   1f220:	movw	r1, #0
   1f224:	str	r1, [r0]
   1f228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f22c:	ldrb	r0, [r0]
   1f230:	ldr	r2, [fp, #-16]
   1f234:	strb	r0, [r2, #4]
   1f238:	str	r1, [fp, #-12]
   1f23c:	ldr	r0, [fp, #-12]
   1f240:	sub	sp, fp, #8
   1f244:	pop	{r4, sl, fp, pc}
   1f248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f24c:	add	fp, sp, #28
   1f250:	sub	sp, sp, #100	; 0x64
   1f254:	ldr	ip, [fp, #40]	; 0x28
   1f258:	ldr	lr, [fp, #36]	; 0x24
   1f25c:	ldr	r4, [fp, #32]
   1f260:	ldr	r5, [fp, #28]
   1f264:	ldr	r6, [fp, #24]
   1f268:	ldr	r7, [fp, #20]
   1f26c:	ldr	r8, [fp, #16]
   1f270:	ldr	r9, [fp, #12]
   1f274:	ldr	sl, [fp, #8]
   1f278:	str	r0, [fp, #-36]	; 0xffffffdc
   1f27c:	str	r1, [fp, #-40]	; 0xffffffd8
   1f280:	str	r2, [fp, #-44]	; 0xffffffd4
   1f284:	str	r3, [fp, #-48]	; 0xffffffd0
   1f288:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f28c:	ldr	r0, [r0]
   1f290:	cmp	r0, #2
   1f294:	movw	r0, #1
   1f298:	str	r0, [sp, #44]	; 0x2c
   1f29c:	beq	1f2e8 <__assert_fail@plt+0xdde4>
   1f2a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f2a4:	ldr	r0, [r0]
   1f2a8:	cmp	r0, #4
   1f2ac:	movw	r0, #1
   1f2b0:	str	r0, [sp, #44]	; 0x2c
   1f2b4:	beq	1f2e8 <__assert_fail@plt+0xdde4>
   1f2b8:	ldr	r0, [fp, #8]
   1f2bc:	ldr	r0, [r0]
   1f2c0:	cmp	r0, #2
   1f2c4:	movw	r0, #1
   1f2c8:	str	r0, [sp, #44]	; 0x2c
   1f2cc:	beq	1f2e8 <__assert_fail@plt+0xdde4>
   1f2d0:	ldr	r0, [fp, #8]
   1f2d4:	ldr	r0, [r0]
   1f2d8:	cmp	r0, #4
   1f2dc:	movw	r0, #0
   1f2e0:	moveq	r0, #1
   1f2e4:	str	r0, [sp, #44]	; 0x2c
   1f2e8:	ldr	r0, [sp, #44]	; 0x2c
   1f2ec:	tst	r0, #1
   1f2f0:	beq	1f300 <__assert_fail@plt+0xddfc>
   1f2f4:	movw	r0, #11
   1f2f8:	str	r0, [fp, #-32]	; 0xffffffe0
   1f2fc:	b	1f6c0 <__assert_fail@plt+0xe1bc>
   1f300:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f304:	ldr	r0, [r0]
   1f308:	cmp	r0, #3
   1f30c:	bne	1f32c <__assert_fail@plt+0xde28>
   1f310:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f314:	ldr	r0, [r0, #4]
   1f318:	bl	113d8 <strlen@plt>
   1f31c:	cmp	r0, #1
   1f320:	movw	r0, #1
   1f324:	str	r0, [sp, #40]	; 0x28
   1f328:	bhi	1f368 <__assert_fail@plt+0xde64>
   1f32c:	ldr	r0, [fp, #8]
   1f330:	ldr	r0, [r0]
   1f334:	cmp	r0, #3
   1f338:	movw	r0, #0
   1f33c:	str	r0, [sp, #36]	; 0x24
   1f340:	bne	1f360 <__assert_fail@plt+0xde5c>
   1f344:	ldr	r0, [fp, #8]
   1f348:	ldr	r0, [r0, #4]
   1f34c:	bl	113d8 <strlen@plt>
   1f350:	cmp	r0, #1
   1f354:	movw	r0, #0
   1f358:	movhi	r0, #1
   1f35c:	str	r0, [sp, #36]	; 0x24
   1f360:	ldr	r0, [sp, #36]	; 0x24
   1f364:	str	r0, [sp, #40]	; 0x28
   1f368:	ldr	r0, [sp, #40]	; 0x28
   1f36c:	tst	r0, #1
   1f370:	beq	1f380 <__assert_fail@plt+0xde7c>
   1f374:	movw	r0, #3
   1f378:	str	r0, [fp, #-32]	; 0xffffffe0
   1f37c:	b	1f6c0 <__assert_fail@plt+0xe1bc>
   1f380:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f384:	ldr	r0, [r0]
   1f388:	cmp	r0, #0
   1f38c:	bne	1f3a0 <__assert_fail@plt+0xde9c>
   1f390:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f394:	ldrb	r0, [r0, #4]
   1f398:	str	r0, [sp, #32]
   1f39c:	b	1f3d8 <__assert_fail@plt+0xded4>
   1f3a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f3a4:	ldr	r0, [r0]
   1f3a8:	cmp	r0, #3
   1f3ac:	bne	1f3c4 <__assert_fail@plt+0xdec0>
   1f3b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f3b4:	ldr	r0, [r0, #4]
   1f3b8:	ldrb	r0, [r0]
   1f3bc:	str	r0, [sp, #28]
   1f3c0:	b	1f3d0 <__assert_fail@plt+0xdecc>
   1f3c4:	movw	r0, #0
   1f3c8:	str	r0, [sp, #28]
   1f3cc:	b	1f3d0 <__assert_fail@plt+0xdecc>
   1f3d0:	ldr	r0, [sp, #28]
   1f3d4:	str	r0, [sp, #32]
   1f3d8:	ldr	r0, [sp, #32]
   1f3dc:	str	r0, [fp, #-52]	; 0xffffffcc
   1f3e0:	ldr	r0, [fp, #8]
   1f3e4:	ldr	r0, [r0]
   1f3e8:	cmp	r0, #0
   1f3ec:	bne	1f400 <__assert_fail@plt+0xdefc>
   1f3f0:	ldr	r0, [fp, #8]
   1f3f4:	ldrb	r0, [r0, #4]
   1f3f8:	str	r0, [sp, #24]
   1f3fc:	b	1f438 <__assert_fail@plt+0xdf34>
   1f400:	ldr	r0, [fp, #8]
   1f404:	ldr	r0, [r0]
   1f408:	cmp	r0, #3
   1f40c:	bne	1f424 <__assert_fail@plt+0xdf20>
   1f410:	ldr	r0, [fp, #8]
   1f414:	ldr	r0, [r0, #4]
   1f418:	ldrb	r0, [r0]
   1f41c:	str	r0, [sp, #20]
   1f420:	b	1f430 <__assert_fail@plt+0xdf2c>
   1f424:	movw	r0, #0
   1f428:	str	r0, [sp, #20]
   1f42c:	b	1f430 <__assert_fail@plt+0xdf2c>
   1f430:	ldr	r0, [sp, #20]
   1f434:	str	r0, [sp, #24]
   1f438:	ldr	r0, [sp, #24]
   1f43c:	str	r0, [fp, #-56]	; 0xffffffc8
   1f440:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f444:	ldr	r0, [r0]
   1f448:	cmp	r0, #0
   1f44c:	beq	1f460 <__assert_fail@plt+0xdf5c>
   1f450:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f454:	ldr	r0, [r0]
   1f458:	cmp	r0, #3
   1f45c:	bne	1f478 <__assert_fail@plt+0xdf74>
   1f460:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f464:	ldr	r1, [fp, #12]
   1f468:	and	r0, r0, #255	; 0xff
   1f46c:	bl	20910 <__assert_fail@plt+0xf40c>
   1f470:	str	r0, [sp, #16]
   1f474:	b	1f484 <__assert_fail@plt+0xdf80>
   1f478:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f47c:	ldr	r0, [r0, #4]
   1f480:	str	r0, [sp, #16]
   1f484:	ldr	r0, [sp, #16]
   1f488:	str	r0, [fp, #-60]	; 0xffffffc4
   1f48c:	ldr	r0, [fp, #8]
   1f490:	ldr	r0, [r0]
   1f494:	cmp	r0, #0
   1f498:	beq	1f4ac <__assert_fail@plt+0xdfa8>
   1f49c:	ldr	r0, [fp, #8]
   1f4a0:	ldr	r0, [r0]
   1f4a4:	cmp	r0, #3
   1f4a8:	bne	1f4c4 <__assert_fail@plt+0xdfc0>
   1f4ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f4b0:	ldr	r1, [fp, #12]
   1f4b4:	and	r0, r0, #255	; 0xff
   1f4b8:	bl	20910 <__assert_fail@plt+0xf40c>
   1f4bc:	str	r0, [sp, #12]
   1f4c0:	b	1f4d0 <__assert_fail@plt+0xdfcc>
   1f4c4:	ldr	r0, [fp, #8]
   1f4c8:	ldr	r0, [r0, #4]
   1f4cc:	str	r0, [sp, #12]
   1f4d0:	ldr	r0, [sp, #12]
   1f4d4:	str	r0, [sp, #64]	; 0x40
   1f4d8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f4dc:	cmn	r0, #1
   1f4e0:	beq	1f4f0 <__assert_fail@plt+0xdfec>
   1f4e4:	ldr	r0, [sp, #64]	; 0x40
   1f4e8:	cmn	r0, #1
   1f4ec:	bne	1f4fc <__assert_fail@plt+0xdff8>
   1f4f0:	movw	r0, #3
   1f4f4:	str	r0, [fp, #-32]	; 0xffffffe0
   1f4f8:	b	1f6c0 <__assert_fail@plt+0xe1bc>
   1f4fc:	ldr	r0, [fp, #16]
   1f500:	and	r0, r0, #65536	; 0x10000
   1f504:	cmp	r0, #0
   1f508:	movw	r0, #0
   1f50c:	str	r0, [sp, #8]
   1f510:	beq	1f52c <__assert_fail@plt+0xe028>
   1f514:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f518:	ldr	r1, [sp, #64]	; 0x40
   1f51c:	cmp	r0, r1
   1f520:	movw	r0, #0
   1f524:	movhi	r0, #1
   1f528:	str	r0, [sp, #8]
   1f52c:	ldr	r0, [sp, #8]
   1f530:	tst	r0, #1
   1f534:	beq	1f544 <__assert_fail@plt+0xe040>
   1f538:	movw	r0, #11
   1f53c:	str	r0, [fp, #-32]	; 0xffffffe0
   1f540:	b	1f6c0 <__assert_fail@plt+0xe1bc>
   1f544:	b	1f548 <__assert_fail@plt+0xe044>
   1f548:	ldr	r0, [fp, #12]
   1f54c:	ldr	r0, [r0, #92]	; 0x5c
   1f550:	cmp	r0, #1
   1f554:	ble	1f664 <__assert_fail@plt+0xe160>
   1f558:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f55c:	ldr	r0, [r0]
   1f560:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f564:	ldr	r1, [r1, #32]
   1f568:	cmp	r0, r1
   1f56c:	bne	1f630 <__assert_fail@plt+0xe12c>
   1f570:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f574:	ldr	r0, [r0, #32]
   1f578:	mov	r1, #1
   1f57c:	orr	r0, r1, r0, lsl #1
   1f580:	str	r0, [sp, #52]	; 0x34
   1f584:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f588:	ldr	r0, [r0, #4]
   1f58c:	ldr	r1, [sp, #52]	; 0x34
   1f590:	lsl	r1, r1, #2
   1f594:	bl	335bc <__assert_fail@plt+0x220b8>
   1f598:	str	r0, [sp, #60]	; 0x3c
   1f59c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f5a0:	ldr	r0, [r0, #8]
   1f5a4:	ldr	r1, [sp, #52]	; 0x34
   1f5a8:	lsl	r1, r1, #2
   1f5ac:	bl	335bc <__assert_fail@plt+0x220b8>
   1f5b0:	str	r0, [sp, #56]	; 0x38
   1f5b4:	ldr	r0, [sp, #60]	; 0x3c
   1f5b8:	movw	r1, #0
   1f5bc:	cmp	r0, r1
   1f5c0:	movw	r0, #1
   1f5c4:	str	r0, [sp, #4]
   1f5c8:	beq	1f5e4 <__assert_fail@plt+0xe0e0>
   1f5cc:	ldr	r0, [sp, #56]	; 0x38
   1f5d0:	movw	r1, #0
   1f5d4:	cmp	r0, r1
   1f5d8:	movw	r0, #0
   1f5dc:	moveq	r0, #1
   1f5e0:	str	r0, [sp, #4]
   1f5e4:	ldr	r0, [sp, #4]
   1f5e8:	tst	r0, #1
   1f5ec:	beq	1f60c <__assert_fail@plt+0xe108>
   1f5f0:	ldr	r0, [sp, #60]	; 0x3c
   1f5f4:	bl	34c20 <__assert_fail@plt+0x2371c>
   1f5f8:	ldr	r0, [sp, #56]	; 0x38
   1f5fc:	bl	34c20 <__assert_fail@plt+0x2371c>
   1f600:	movw	r0, #12
   1f604:	str	r0, [fp, #-32]	; 0xffffffe0
   1f608:	b	1f6c0 <__assert_fail@plt+0xe1bc>
   1f60c:	ldr	r0, [sp, #60]	; 0x3c
   1f610:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f614:	str	r0, [r1, #4]
   1f618:	ldr	r0, [sp, #56]	; 0x38
   1f61c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f620:	str	r0, [r1, #8]
   1f624:	ldr	r0, [sp, #52]	; 0x34
   1f628:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f62c:	str	r0, [r1]
   1f630:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f634:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f638:	ldr	r2, [r1, #4]
   1f63c:	ldr	r1, [r1, #32]
   1f640:	str	r0, [r2, r1, lsl #2]
   1f644:	ldr	r0, [sp, #64]	; 0x40
   1f648:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f64c:	ldr	r2, [r1, #8]
   1f650:	ldr	r3, [r1, #32]
   1f654:	add	ip, r3, #1
   1f658:	str	ip, [r1, #32]
   1f65c:	add	r1, r2, r3, lsl #2
   1f660:	str	r0, [r1]
   1f664:	movw	r0, #0
   1f668:	str	r0, [sp, #48]	; 0x30
   1f66c:	ldr	r0, [sp, #48]	; 0x30
   1f670:	cmp	r0, #256	; 0x100
   1f674:	bcs	1f6b8 <__assert_fail@plt+0xe1b4>
   1f678:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f67c:	ldr	r1, [sp, #48]	; 0x30
   1f680:	cmp	r0, r1
   1f684:	bhi	1f6a4 <__assert_fail@plt+0xe1a0>
   1f688:	ldr	r0, [sp, #48]	; 0x30
   1f68c:	ldr	r1, [sp, #64]	; 0x40
   1f690:	cmp	r0, r1
   1f694:	bhi	1f6a4 <__assert_fail@plt+0xe1a0>
   1f698:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f69c:	ldr	r1, [sp, #48]	; 0x30
   1f6a0:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1f6a4:	b	1f6a8 <__assert_fail@plt+0xe1a4>
   1f6a8:	ldr	r0, [sp, #48]	; 0x30
   1f6ac:	add	r0, r0, #1
   1f6b0:	str	r0, [sp, #48]	; 0x30
   1f6b4:	b	1f66c <__assert_fail@plt+0xe168>
   1f6b8:	movw	r0, #0
   1f6bc:	str	r0, [fp, #-32]	; 0xffffffe0
   1f6c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f6c4:	sub	sp, fp, #28
   1f6c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f6cc:	push	{fp, lr}
   1f6d0:	mov	fp, sp
   1f6d4:	sub	sp, sp, #24
   1f6d8:	str	r0, [fp, #-8]
   1f6dc:	str	r1, [sp, #12]
   1f6e0:	str	r2, [sp, #8]
   1f6e4:	str	r3, [sp, #4]
   1f6e8:	ldr	r0, [sp, #4]
   1f6ec:	bl	113d8 <strlen@plt>
   1f6f0:	cmp	r0, #1
   1f6f4:	beq	1f704 <__assert_fail@plt+0xe200>
   1f6f8:	movw	r0, #3
   1f6fc:	str	r0, [fp, #-4]
   1f700:	b	1f71c <__assert_fail@plt+0xe218>
   1f704:	ldr	r0, [fp, #-8]
   1f708:	ldr	r1, [sp, #4]
   1f70c:	ldrb	r1, [r1]
   1f710:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1f714:	movw	r0, #0
   1f718:	str	r0, [fp, #-4]
   1f71c:	ldr	r0, [fp, #-4]
   1f720:	mov	sp, fp
   1f724:	pop	{fp, pc}
   1f728:	push	{r4, r5, fp, lr}
   1f72c:	add	fp, sp, #8
   1f730:	sub	sp, sp, #40	; 0x28
   1f734:	ldr	ip, [fp, #20]
   1f738:	ldr	lr, [fp, #16]
   1f73c:	ldr	r4, [fp, #12]
   1f740:	ldr	r5, [fp, #8]
   1f744:	str	r0, [fp, #-16]
   1f748:	str	r1, [fp, #-20]	; 0xffffffec
   1f74c:	str	r2, [sp, #24]
   1f750:	str	r3, [sp, #20]
   1f754:	ldr	r0, [sp, #20]
   1f758:	str	ip, [sp, #12]
   1f75c:	str	lr, [sp, #8]
   1f760:	str	r4, [sp, #4]
   1f764:	str	r5, [sp]
   1f768:	bl	113d8 <strlen@plt>
   1f76c:	str	r0, [sp, #16]
   1f770:	ldr	r0, [sp, #16]
   1f774:	cmp	r0, #1
   1f778:	beq	1f788 <__assert_fail@plt+0xe284>
   1f77c:	movw	r0, #3
   1f780:	str	r0, [fp, #-12]
   1f784:	b	1f7a0 <__assert_fail@plt+0xe29c>
   1f788:	ldr	r0, [fp, #-16]
   1f78c:	ldr	r1, [sp, #20]
   1f790:	ldrb	r1, [r1]
   1f794:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1f798:	movw	r0, #0
   1f79c:	str	r0, [fp, #-12]
   1f7a0:	ldr	r0, [fp, #-12]
   1f7a4:	sub	sp, fp, #8
   1f7a8:	pop	{r4, r5, fp, pc}
   1f7ac:	push	{fp, lr}
   1f7b0:	mov	fp, sp
   1f7b4:	sub	sp, sp, #40	; 0x28
   1f7b8:	ldr	ip, [fp, #12]
   1f7bc:	ldr	lr, [fp, #8]
   1f7c0:	str	r0, [fp, #-8]
   1f7c4:	str	r1, [fp, #-12]
   1f7c8:	str	r2, [fp, #-16]
   1f7cc:	str	r3, [sp, #20]
   1f7d0:	ldr	r0, [fp, #8]
   1f7d4:	str	r0, [sp, #12]
   1f7d8:	ldr	r0, [fp, #12]
   1f7dc:	and	r0, r0, #4194304	; 0x400000
   1f7e0:	cmp	r0, #0
   1f7e4:	beq	1f824 <__assert_fail@plt+0xe320>
   1f7e8:	ldr	r0, [sp, #12]
   1f7ec:	movw	r1, #31912	; 0x7ca8
   1f7f0:	movt	r1, #3
   1f7f4:	bl	11234 <strcmp@plt>
   1f7f8:	cmp	r0, #0
   1f7fc:	beq	1f818 <__assert_fail@plt+0xe314>
   1f800:	ldr	r0, [sp, #12]
   1f804:	movw	r1, #31918	; 0x7cae
   1f808:	movt	r1, #3
   1f80c:	bl	11234 <strcmp@plt>
   1f810:	cmp	r0, #0
   1f814:	bne	1f824 <__assert_fail@plt+0xe320>
   1f818:	movw	r0, #31924	; 0x7cb4
   1f81c:	movt	r0, #3
   1f820:	str	r0, [sp, #12]
   1f824:	ldr	r0, [sp, #20]
   1f828:	ldr	r0, [r0]
   1f82c:	ldr	r1, [fp, #-16]
   1f830:	ldr	r1, [r1, #36]	; 0x24
   1f834:	cmp	r0, r1
   1f838:	bne	1f89c <__assert_fail@plt+0xe398>
   1f83c:	ldr	r0, [fp, #-16]
   1f840:	ldr	r0, [r0, #36]	; 0x24
   1f844:	mov	r1, #1
   1f848:	orr	r0, r1, r0, lsl #1
   1f84c:	str	r0, [sp, #8]
   1f850:	ldr	r0, [fp, #-16]
   1f854:	ldr	r0, [r0, #12]
   1f858:	ldr	r1, [sp, #8]
   1f85c:	lsl	r1, r1, #2
   1f860:	bl	335bc <__assert_fail@plt+0x220b8>
   1f864:	str	r0, [sp, #4]
   1f868:	ldr	r0, [sp, #4]
   1f86c:	movw	r1, #0
   1f870:	cmp	r0, r1
   1f874:	bne	1f884 <__assert_fail@plt+0xe380>
   1f878:	movw	r0, #12
   1f87c:	str	r0, [fp, #-4]
   1f880:	b	20440 <__assert_fail@plt+0xef3c>
   1f884:	ldr	r0, [sp, #4]
   1f888:	ldr	r1, [fp, #-16]
   1f88c:	str	r0, [r1, #12]
   1f890:	ldr	r0, [sp, #8]
   1f894:	ldr	r1, [sp, #20]
   1f898:	str	r0, [r1]
   1f89c:	ldr	r0, [sp, #12]
   1f8a0:	bl	11204 <wctype@plt>
   1f8a4:	ldr	r1, [fp, #-16]
   1f8a8:	ldr	r2, [r1, #12]
   1f8ac:	ldr	r3, [r1, #36]	; 0x24
   1f8b0:	add	ip, r3, #1
   1f8b4:	str	ip, [r1, #36]	; 0x24
   1f8b8:	add	r1, r2, r3, lsl #2
   1f8bc:	str	r0, [r1]
   1f8c0:	ldr	r0, [sp, #12]
   1f8c4:	movw	r1, #31900	; 0x7c9c
   1f8c8:	movt	r1, #3
   1f8cc:	bl	11234 <strcmp@plt>
   1f8d0:	cmp	r0, #0
   1f8d4:	bne	1f9b0 <__assert_fail@plt+0xe4ac>
   1f8d8:	b	1f8dc <__assert_fail@plt+0xe3d8>
   1f8dc:	ldr	r0, [fp, #-8]
   1f8e0:	movw	r1, #0
   1f8e4:	cmp	r0, r1
   1f8e8:	beq	1f950 <__assert_fail@plt+0xe44c>
   1f8ec:	movw	r0, #0
   1f8f0:	str	r0, [sp, #16]
   1f8f4:	ldr	r0, [sp, #16]
   1f8f8:	cmp	r0, #256	; 0x100
   1f8fc:	bge	1f94c <__assert_fail@plt+0xe448>
   1f900:	bl	113b4 <__ctype_b_loc@plt>
   1f904:	ldr	r0, [r0]
   1f908:	ldr	r1, [sp, #16]
   1f90c:	add	r0, r0, r1, lsl #1
   1f910:	ldrh	r0, [r0]
   1f914:	and	r0, r0, #8
   1f918:	cmp	r0, #0
   1f91c:	beq	1f938 <__assert_fail@plt+0xe434>
   1f920:	ldr	r0, [fp, #-12]
   1f924:	ldr	r1, [fp, #-8]
   1f928:	ldr	r2, [sp, #16]
   1f92c:	add	r1, r1, r2
   1f930:	ldrb	r1, [r1]
   1f934:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1f938:	b	1f93c <__assert_fail@plt+0xe438>
   1f93c:	ldr	r0, [sp, #16]
   1f940:	add	r0, r0, #1
   1f944:	str	r0, [sp, #16]
   1f948:	b	1f8f4 <__assert_fail@plt+0xe3f0>
   1f94c:	b	1f9a8 <__assert_fail@plt+0xe4a4>
   1f950:	movw	r0, #0
   1f954:	str	r0, [sp, #16]
   1f958:	ldr	r0, [sp, #16]
   1f95c:	cmp	r0, #256	; 0x100
   1f960:	bge	1f9a4 <__assert_fail@plt+0xe4a0>
   1f964:	bl	113b4 <__ctype_b_loc@plt>
   1f968:	ldr	r0, [r0]
   1f96c:	ldr	r1, [sp, #16]
   1f970:	add	r0, r0, r1, lsl #1
   1f974:	ldrh	r0, [r0]
   1f978:	and	r0, r0, #8
   1f97c:	cmp	r0, #0
   1f980:	beq	1f990 <__assert_fail@plt+0xe48c>
   1f984:	ldr	r0, [fp, #-12]
   1f988:	ldr	r1, [sp, #16]
   1f98c:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1f990:	b	1f994 <__assert_fail@plt+0xe490>
   1f994:	ldr	r0, [sp, #16]
   1f998:	add	r0, r0, #1
   1f99c:	str	r0, [sp, #16]
   1f9a0:	b	1f958 <__assert_fail@plt+0xe454>
   1f9a4:	b	1f9a8 <__assert_fail@plt+0xe4a4>
   1f9a8:	b	1f9ac <__assert_fail@plt+0xe4a8>
   1f9ac:	b	20438 <__assert_fail@plt+0xef34>
   1f9b0:	ldr	r0, [sp, #12]
   1f9b4:	movw	r1, #31930	; 0x7cba
   1f9b8:	movt	r1, #3
   1f9bc:	bl	11234 <strcmp@plt>
   1f9c0:	cmp	r0, #0
   1f9c4:	bne	1faa0 <__assert_fail@plt+0xe59c>
   1f9c8:	b	1f9cc <__assert_fail@plt+0xe4c8>
   1f9cc:	ldr	r0, [fp, #-8]
   1f9d0:	movw	r1, #0
   1f9d4:	cmp	r0, r1
   1f9d8:	beq	1fa40 <__assert_fail@plt+0xe53c>
   1f9dc:	movw	r0, #0
   1f9e0:	str	r0, [sp, #16]
   1f9e4:	ldr	r0, [sp, #16]
   1f9e8:	cmp	r0, #256	; 0x100
   1f9ec:	bge	1fa3c <__assert_fail@plt+0xe538>
   1f9f0:	bl	113b4 <__ctype_b_loc@plt>
   1f9f4:	ldr	r0, [r0]
   1f9f8:	ldr	r1, [sp, #16]
   1f9fc:	add	r0, r0, r1, lsl #1
   1fa00:	ldrh	r0, [r0]
   1fa04:	and	r0, r0, #2
   1fa08:	cmp	r0, #0
   1fa0c:	beq	1fa28 <__assert_fail@plt+0xe524>
   1fa10:	ldr	r0, [fp, #-12]
   1fa14:	ldr	r1, [fp, #-8]
   1fa18:	ldr	r2, [sp, #16]
   1fa1c:	add	r1, r1, r2
   1fa20:	ldrb	r1, [r1]
   1fa24:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1fa28:	b	1fa2c <__assert_fail@plt+0xe528>
   1fa2c:	ldr	r0, [sp, #16]
   1fa30:	add	r0, r0, #1
   1fa34:	str	r0, [sp, #16]
   1fa38:	b	1f9e4 <__assert_fail@plt+0xe4e0>
   1fa3c:	b	1fa98 <__assert_fail@plt+0xe594>
   1fa40:	movw	r0, #0
   1fa44:	str	r0, [sp, #16]
   1fa48:	ldr	r0, [sp, #16]
   1fa4c:	cmp	r0, #256	; 0x100
   1fa50:	bge	1fa94 <__assert_fail@plt+0xe590>
   1fa54:	bl	113b4 <__ctype_b_loc@plt>
   1fa58:	ldr	r0, [r0]
   1fa5c:	ldr	r1, [sp, #16]
   1fa60:	add	r0, r0, r1, lsl #1
   1fa64:	ldrh	r0, [r0]
   1fa68:	and	r0, r0, #2
   1fa6c:	cmp	r0, #0
   1fa70:	beq	1fa80 <__assert_fail@plt+0xe57c>
   1fa74:	ldr	r0, [fp, #-12]
   1fa78:	ldr	r1, [sp, #16]
   1fa7c:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1fa80:	b	1fa84 <__assert_fail@plt+0xe580>
   1fa84:	ldr	r0, [sp, #16]
   1fa88:	add	r0, r0, #1
   1fa8c:	str	r0, [sp, #16]
   1fa90:	b	1fa48 <__assert_fail@plt+0xe544>
   1fa94:	b	1fa98 <__assert_fail@plt+0xe594>
   1fa98:	b	1fa9c <__assert_fail@plt+0xe598>
   1fa9c:	b	20434 <__assert_fail@plt+0xef30>
   1faa0:	ldr	r0, [sp, #12]
   1faa4:	movw	r1, #31918	; 0x7cae
   1faa8:	movt	r1, #3
   1faac:	bl	11234 <strcmp@plt>
   1fab0:	cmp	r0, #0
   1fab4:	bne	1fb90 <__assert_fail@plt+0xe68c>
   1fab8:	b	1fabc <__assert_fail@plt+0xe5b8>
   1fabc:	ldr	r0, [fp, #-8]
   1fac0:	movw	r1, #0
   1fac4:	cmp	r0, r1
   1fac8:	beq	1fb30 <__assert_fail@plt+0xe62c>
   1facc:	movw	r0, #0
   1fad0:	str	r0, [sp, #16]
   1fad4:	ldr	r0, [sp, #16]
   1fad8:	cmp	r0, #256	; 0x100
   1fadc:	bge	1fb2c <__assert_fail@plt+0xe628>
   1fae0:	bl	113b4 <__ctype_b_loc@plt>
   1fae4:	ldr	r0, [r0]
   1fae8:	ldr	r1, [sp, #16]
   1faec:	add	r0, r0, r1, lsl #1
   1faf0:	ldrh	r0, [r0]
   1faf4:	and	r0, r0, #512	; 0x200
   1faf8:	cmp	r0, #0
   1fafc:	beq	1fb18 <__assert_fail@plt+0xe614>
   1fb00:	ldr	r0, [fp, #-12]
   1fb04:	ldr	r1, [fp, #-8]
   1fb08:	ldr	r2, [sp, #16]
   1fb0c:	add	r1, r1, r2
   1fb10:	ldrb	r1, [r1]
   1fb14:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1fb18:	b	1fb1c <__assert_fail@plt+0xe618>
   1fb1c:	ldr	r0, [sp, #16]
   1fb20:	add	r0, r0, #1
   1fb24:	str	r0, [sp, #16]
   1fb28:	b	1fad4 <__assert_fail@plt+0xe5d0>
   1fb2c:	b	1fb88 <__assert_fail@plt+0xe684>
   1fb30:	movw	r0, #0
   1fb34:	str	r0, [sp, #16]
   1fb38:	ldr	r0, [sp, #16]
   1fb3c:	cmp	r0, #256	; 0x100
   1fb40:	bge	1fb84 <__assert_fail@plt+0xe680>
   1fb44:	bl	113b4 <__ctype_b_loc@plt>
   1fb48:	ldr	r0, [r0]
   1fb4c:	ldr	r1, [sp, #16]
   1fb50:	add	r0, r0, r1, lsl #1
   1fb54:	ldrh	r0, [r0]
   1fb58:	and	r0, r0, #512	; 0x200
   1fb5c:	cmp	r0, #0
   1fb60:	beq	1fb70 <__assert_fail@plt+0xe66c>
   1fb64:	ldr	r0, [fp, #-12]
   1fb68:	ldr	r1, [sp, #16]
   1fb6c:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1fb70:	b	1fb74 <__assert_fail@plt+0xe670>
   1fb74:	ldr	r0, [sp, #16]
   1fb78:	add	r0, r0, #1
   1fb7c:	str	r0, [sp, #16]
   1fb80:	b	1fb38 <__assert_fail@plt+0xe634>
   1fb84:	b	1fb88 <__assert_fail@plt+0xe684>
   1fb88:	b	1fb8c <__assert_fail@plt+0xe688>
   1fb8c:	b	20430 <__assert_fail@plt+0xef2c>
   1fb90:	ldr	r0, [sp, #12]
   1fb94:	movw	r1, #31906	; 0x7ca2
   1fb98:	movt	r1, #3
   1fb9c:	bl	11234 <strcmp@plt>
   1fba0:	cmp	r0, #0
   1fba4:	bne	1fc80 <__assert_fail@plt+0xe77c>
   1fba8:	b	1fbac <__assert_fail@plt+0xe6a8>
   1fbac:	ldr	r0, [fp, #-8]
   1fbb0:	movw	r1, #0
   1fbb4:	cmp	r0, r1
   1fbb8:	beq	1fc20 <__assert_fail@plt+0xe71c>
   1fbbc:	movw	r0, #0
   1fbc0:	str	r0, [sp, #16]
   1fbc4:	ldr	r0, [sp, #16]
   1fbc8:	cmp	r0, #256	; 0x100
   1fbcc:	bge	1fc1c <__assert_fail@plt+0xe718>
   1fbd0:	bl	113b4 <__ctype_b_loc@plt>
   1fbd4:	ldr	r0, [r0]
   1fbd8:	ldr	r1, [sp, #16]
   1fbdc:	add	r0, r0, r1, lsl #1
   1fbe0:	ldrh	r0, [r0]
   1fbe4:	and	r0, r0, #8192	; 0x2000
   1fbe8:	cmp	r0, #0
   1fbec:	beq	1fc08 <__assert_fail@plt+0xe704>
   1fbf0:	ldr	r0, [fp, #-12]
   1fbf4:	ldr	r1, [fp, #-8]
   1fbf8:	ldr	r2, [sp, #16]
   1fbfc:	add	r1, r1, r2
   1fc00:	ldrb	r1, [r1]
   1fc04:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1fc08:	b	1fc0c <__assert_fail@plt+0xe708>
   1fc0c:	ldr	r0, [sp, #16]
   1fc10:	add	r0, r0, #1
   1fc14:	str	r0, [sp, #16]
   1fc18:	b	1fbc4 <__assert_fail@plt+0xe6c0>
   1fc1c:	b	1fc78 <__assert_fail@plt+0xe774>
   1fc20:	movw	r0, #0
   1fc24:	str	r0, [sp, #16]
   1fc28:	ldr	r0, [sp, #16]
   1fc2c:	cmp	r0, #256	; 0x100
   1fc30:	bge	1fc74 <__assert_fail@plt+0xe770>
   1fc34:	bl	113b4 <__ctype_b_loc@plt>
   1fc38:	ldr	r0, [r0]
   1fc3c:	ldr	r1, [sp, #16]
   1fc40:	add	r0, r0, r1, lsl #1
   1fc44:	ldrh	r0, [r0]
   1fc48:	and	r0, r0, #8192	; 0x2000
   1fc4c:	cmp	r0, #0
   1fc50:	beq	1fc60 <__assert_fail@plt+0xe75c>
   1fc54:	ldr	r0, [fp, #-12]
   1fc58:	ldr	r1, [sp, #16]
   1fc5c:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1fc60:	b	1fc64 <__assert_fail@plt+0xe760>
   1fc64:	ldr	r0, [sp, #16]
   1fc68:	add	r0, r0, #1
   1fc6c:	str	r0, [sp, #16]
   1fc70:	b	1fc28 <__assert_fail@plt+0xe724>
   1fc74:	b	1fc78 <__assert_fail@plt+0xe774>
   1fc78:	b	1fc7c <__assert_fail@plt+0xe778>
   1fc7c:	b	2042c <__assert_fail@plt+0xef28>
   1fc80:	ldr	r0, [sp, #12]
   1fc84:	movw	r1, #31924	; 0x7cb4
   1fc88:	movt	r1, #3
   1fc8c:	bl	11234 <strcmp@plt>
   1fc90:	cmp	r0, #0
   1fc94:	bne	1fd70 <__assert_fail@plt+0xe86c>
   1fc98:	b	1fc9c <__assert_fail@plt+0xe798>
   1fc9c:	ldr	r0, [fp, #-8]
   1fca0:	movw	r1, #0
   1fca4:	cmp	r0, r1
   1fca8:	beq	1fd10 <__assert_fail@plt+0xe80c>
   1fcac:	movw	r0, #0
   1fcb0:	str	r0, [sp, #16]
   1fcb4:	ldr	r0, [sp, #16]
   1fcb8:	cmp	r0, #256	; 0x100
   1fcbc:	bge	1fd0c <__assert_fail@plt+0xe808>
   1fcc0:	bl	113b4 <__ctype_b_loc@plt>
   1fcc4:	ldr	r0, [r0]
   1fcc8:	ldr	r1, [sp, #16]
   1fccc:	add	r0, r0, r1, lsl #1
   1fcd0:	ldrh	r0, [r0]
   1fcd4:	and	r0, r0, #1024	; 0x400
   1fcd8:	cmp	r0, #0
   1fcdc:	beq	1fcf8 <__assert_fail@plt+0xe7f4>
   1fce0:	ldr	r0, [fp, #-12]
   1fce4:	ldr	r1, [fp, #-8]
   1fce8:	ldr	r2, [sp, #16]
   1fcec:	add	r1, r1, r2
   1fcf0:	ldrb	r1, [r1]
   1fcf4:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1fcf8:	b	1fcfc <__assert_fail@plt+0xe7f8>
   1fcfc:	ldr	r0, [sp, #16]
   1fd00:	add	r0, r0, #1
   1fd04:	str	r0, [sp, #16]
   1fd08:	b	1fcb4 <__assert_fail@plt+0xe7b0>
   1fd0c:	b	1fd68 <__assert_fail@plt+0xe864>
   1fd10:	movw	r0, #0
   1fd14:	str	r0, [sp, #16]
   1fd18:	ldr	r0, [sp, #16]
   1fd1c:	cmp	r0, #256	; 0x100
   1fd20:	bge	1fd64 <__assert_fail@plt+0xe860>
   1fd24:	bl	113b4 <__ctype_b_loc@plt>
   1fd28:	ldr	r0, [r0]
   1fd2c:	ldr	r1, [sp, #16]
   1fd30:	add	r0, r0, r1, lsl #1
   1fd34:	ldrh	r0, [r0]
   1fd38:	and	r0, r0, #1024	; 0x400
   1fd3c:	cmp	r0, #0
   1fd40:	beq	1fd50 <__assert_fail@plt+0xe84c>
   1fd44:	ldr	r0, [fp, #-12]
   1fd48:	ldr	r1, [sp, #16]
   1fd4c:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1fd50:	b	1fd54 <__assert_fail@plt+0xe850>
   1fd54:	ldr	r0, [sp, #16]
   1fd58:	add	r0, r0, #1
   1fd5c:	str	r0, [sp, #16]
   1fd60:	b	1fd18 <__assert_fail@plt+0xe814>
   1fd64:	b	1fd68 <__assert_fail@plt+0xe864>
   1fd68:	b	1fd6c <__assert_fail@plt+0xe868>
   1fd6c:	b	20428 <__assert_fail@plt+0xef24>
   1fd70:	ldr	r0, [sp, #12]
   1fd74:	movw	r1, #31961	; 0x7cd9
   1fd78:	movt	r1, #3
   1fd7c:	bl	11234 <strcmp@plt>
   1fd80:	cmp	r0, #0
   1fd84:	bne	1fe60 <__assert_fail@plt+0xe95c>
   1fd88:	b	1fd8c <__assert_fail@plt+0xe888>
   1fd8c:	ldr	r0, [fp, #-8]
   1fd90:	movw	r1, #0
   1fd94:	cmp	r0, r1
   1fd98:	beq	1fe00 <__assert_fail@plt+0xe8fc>
   1fd9c:	movw	r0, #0
   1fda0:	str	r0, [sp, #16]
   1fda4:	ldr	r0, [sp, #16]
   1fda8:	cmp	r0, #256	; 0x100
   1fdac:	bge	1fdfc <__assert_fail@plt+0xe8f8>
   1fdb0:	bl	113b4 <__ctype_b_loc@plt>
   1fdb4:	ldr	r0, [r0]
   1fdb8:	ldr	r1, [sp, #16]
   1fdbc:	add	r0, r0, r1, lsl #1
   1fdc0:	ldrh	r0, [r0]
   1fdc4:	and	r0, r0, #2048	; 0x800
   1fdc8:	cmp	r0, #0
   1fdcc:	beq	1fde8 <__assert_fail@plt+0xe8e4>
   1fdd0:	ldr	r0, [fp, #-12]
   1fdd4:	ldr	r1, [fp, #-8]
   1fdd8:	ldr	r2, [sp, #16]
   1fddc:	add	r1, r1, r2
   1fde0:	ldrb	r1, [r1]
   1fde4:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1fde8:	b	1fdec <__assert_fail@plt+0xe8e8>
   1fdec:	ldr	r0, [sp, #16]
   1fdf0:	add	r0, r0, #1
   1fdf4:	str	r0, [sp, #16]
   1fdf8:	b	1fda4 <__assert_fail@plt+0xe8a0>
   1fdfc:	b	1fe58 <__assert_fail@plt+0xe954>
   1fe00:	movw	r0, #0
   1fe04:	str	r0, [sp, #16]
   1fe08:	ldr	r0, [sp, #16]
   1fe0c:	cmp	r0, #256	; 0x100
   1fe10:	bge	1fe54 <__assert_fail@plt+0xe950>
   1fe14:	bl	113b4 <__ctype_b_loc@plt>
   1fe18:	ldr	r0, [r0]
   1fe1c:	ldr	r1, [sp, #16]
   1fe20:	add	r0, r0, r1, lsl #1
   1fe24:	ldrh	r0, [r0]
   1fe28:	and	r0, r0, #2048	; 0x800
   1fe2c:	cmp	r0, #0
   1fe30:	beq	1fe40 <__assert_fail@plt+0xe93c>
   1fe34:	ldr	r0, [fp, #-12]
   1fe38:	ldr	r1, [sp, #16]
   1fe3c:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1fe40:	b	1fe44 <__assert_fail@plt+0xe940>
   1fe44:	ldr	r0, [sp, #16]
   1fe48:	add	r0, r0, #1
   1fe4c:	str	r0, [sp, #16]
   1fe50:	b	1fe08 <__assert_fail@plt+0xe904>
   1fe54:	b	1fe58 <__assert_fail@plt+0xe954>
   1fe58:	b	1fe5c <__assert_fail@plt+0xe958>
   1fe5c:	b	20424 <__assert_fail@plt+0xef20>
   1fe60:	ldr	r0, [sp, #12]
   1fe64:	movw	r1, #31936	; 0x7cc0
   1fe68:	movt	r1, #3
   1fe6c:	bl	11234 <strcmp@plt>
   1fe70:	cmp	r0, #0
   1fe74:	bne	1ff50 <__assert_fail@plt+0xea4c>
   1fe78:	b	1fe7c <__assert_fail@plt+0xe978>
   1fe7c:	ldr	r0, [fp, #-8]
   1fe80:	movw	r1, #0
   1fe84:	cmp	r0, r1
   1fe88:	beq	1fef0 <__assert_fail@plt+0xe9ec>
   1fe8c:	movw	r0, #0
   1fe90:	str	r0, [sp, #16]
   1fe94:	ldr	r0, [sp, #16]
   1fe98:	cmp	r0, #256	; 0x100
   1fe9c:	bge	1feec <__assert_fail@plt+0xe9e8>
   1fea0:	bl	113b4 <__ctype_b_loc@plt>
   1fea4:	ldr	r0, [r0]
   1fea8:	ldr	r1, [sp, #16]
   1feac:	add	r0, r0, r1, lsl #1
   1feb0:	ldrh	r0, [r0]
   1feb4:	and	r0, r0, #16384	; 0x4000
   1feb8:	cmp	r0, #0
   1febc:	beq	1fed8 <__assert_fail@plt+0xe9d4>
   1fec0:	ldr	r0, [fp, #-12]
   1fec4:	ldr	r1, [fp, #-8]
   1fec8:	ldr	r2, [sp, #16]
   1fecc:	add	r1, r1, r2
   1fed0:	ldrb	r1, [r1]
   1fed4:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1fed8:	b	1fedc <__assert_fail@plt+0xe9d8>
   1fedc:	ldr	r0, [sp, #16]
   1fee0:	add	r0, r0, #1
   1fee4:	str	r0, [sp, #16]
   1fee8:	b	1fe94 <__assert_fail@plt+0xe990>
   1feec:	b	1ff48 <__assert_fail@plt+0xea44>
   1fef0:	movw	r0, #0
   1fef4:	str	r0, [sp, #16]
   1fef8:	ldr	r0, [sp, #16]
   1fefc:	cmp	r0, #256	; 0x100
   1ff00:	bge	1ff44 <__assert_fail@plt+0xea40>
   1ff04:	bl	113b4 <__ctype_b_loc@plt>
   1ff08:	ldr	r0, [r0]
   1ff0c:	ldr	r1, [sp, #16]
   1ff10:	add	r0, r0, r1, lsl #1
   1ff14:	ldrh	r0, [r0]
   1ff18:	and	r0, r0, #16384	; 0x4000
   1ff1c:	cmp	r0, #0
   1ff20:	beq	1ff30 <__assert_fail@plt+0xea2c>
   1ff24:	ldr	r0, [fp, #-12]
   1ff28:	ldr	r1, [sp, #16]
   1ff2c:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1ff30:	b	1ff34 <__assert_fail@plt+0xea30>
   1ff34:	ldr	r0, [sp, #16]
   1ff38:	add	r0, r0, #1
   1ff3c:	str	r0, [sp, #16]
   1ff40:	b	1fef8 <__assert_fail@plt+0xe9f4>
   1ff44:	b	1ff48 <__assert_fail@plt+0xea44>
   1ff48:	b	1ff4c <__assert_fail@plt+0xea48>
   1ff4c:	b	20420 <__assert_fail@plt+0xef1c>
   1ff50:	ldr	r0, [sp, #12]
   1ff54:	movw	r1, #31912	; 0x7ca8
   1ff58:	movt	r1, #3
   1ff5c:	bl	11234 <strcmp@plt>
   1ff60:	cmp	r0, #0
   1ff64:	bne	20040 <__assert_fail@plt+0xeb3c>
   1ff68:	b	1ff6c <__assert_fail@plt+0xea68>
   1ff6c:	ldr	r0, [fp, #-8]
   1ff70:	movw	r1, #0
   1ff74:	cmp	r0, r1
   1ff78:	beq	1ffe0 <__assert_fail@plt+0xeadc>
   1ff7c:	movw	r0, #0
   1ff80:	str	r0, [sp, #16]
   1ff84:	ldr	r0, [sp, #16]
   1ff88:	cmp	r0, #256	; 0x100
   1ff8c:	bge	1ffdc <__assert_fail@plt+0xead8>
   1ff90:	bl	113b4 <__ctype_b_loc@plt>
   1ff94:	ldr	r0, [r0]
   1ff98:	ldr	r1, [sp, #16]
   1ff9c:	add	r0, r0, r1, lsl #1
   1ffa0:	ldrh	r0, [r0]
   1ffa4:	and	r0, r0, #256	; 0x100
   1ffa8:	cmp	r0, #0
   1ffac:	beq	1ffc8 <__assert_fail@plt+0xeac4>
   1ffb0:	ldr	r0, [fp, #-12]
   1ffb4:	ldr	r1, [fp, #-8]
   1ffb8:	ldr	r2, [sp, #16]
   1ffbc:	add	r1, r1, r2
   1ffc0:	ldrb	r1, [r1]
   1ffc4:	bl	1f080 <__assert_fail@plt+0xdb7c>
   1ffc8:	b	1ffcc <__assert_fail@plt+0xeac8>
   1ffcc:	ldr	r0, [sp, #16]
   1ffd0:	add	r0, r0, #1
   1ffd4:	str	r0, [sp, #16]
   1ffd8:	b	1ff84 <__assert_fail@plt+0xea80>
   1ffdc:	b	20038 <__assert_fail@plt+0xeb34>
   1ffe0:	movw	r0, #0
   1ffe4:	str	r0, [sp, #16]
   1ffe8:	ldr	r0, [sp, #16]
   1ffec:	cmp	r0, #256	; 0x100
   1fff0:	bge	20034 <__assert_fail@plt+0xeb30>
   1fff4:	bl	113b4 <__ctype_b_loc@plt>
   1fff8:	ldr	r0, [r0]
   1fffc:	ldr	r1, [sp, #16]
   20000:	add	r0, r0, r1, lsl #1
   20004:	ldrh	r0, [r0]
   20008:	and	r0, r0, #256	; 0x100
   2000c:	cmp	r0, #0
   20010:	beq	20020 <__assert_fail@plt+0xeb1c>
   20014:	ldr	r0, [fp, #-12]
   20018:	ldr	r1, [sp, #16]
   2001c:	bl	1f080 <__assert_fail@plt+0xdb7c>
   20020:	b	20024 <__assert_fail@plt+0xeb20>
   20024:	ldr	r0, [sp, #16]
   20028:	add	r0, r0, #1
   2002c:	str	r0, [sp, #16]
   20030:	b	1ffe8 <__assert_fail@plt+0xeae4>
   20034:	b	20038 <__assert_fail@plt+0xeb34>
   20038:	b	2003c <__assert_fail@plt+0xeb38>
   2003c:	b	2041c <__assert_fail@plt+0xef18>
   20040:	ldr	r0, [sp, #12]
   20044:	movw	r1, #31942	; 0x7cc6
   20048:	movt	r1, #3
   2004c:	bl	11234 <strcmp@plt>
   20050:	cmp	r0, #0
   20054:	bne	20130 <__assert_fail@plt+0xec2c>
   20058:	b	2005c <__assert_fail@plt+0xeb58>
   2005c:	ldr	r0, [fp, #-8]
   20060:	movw	r1, #0
   20064:	cmp	r0, r1
   20068:	beq	200d0 <__assert_fail@plt+0xebcc>
   2006c:	movw	r0, #0
   20070:	str	r0, [sp, #16]
   20074:	ldr	r0, [sp, #16]
   20078:	cmp	r0, #256	; 0x100
   2007c:	bge	200cc <__assert_fail@plt+0xebc8>
   20080:	bl	113b4 <__ctype_b_loc@plt>
   20084:	ldr	r0, [r0]
   20088:	ldr	r1, [sp, #16]
   2008c:	add	r0, r0, r1, lsl #1
   20090:	ldrh	r0, [r0]
   20094:	and	r0, r0, #1
   20098:	cmp	r0, #0
   2009c:	beq	200b8 <__assert_fail@plt+0xebb4>
   200a0:	ldr	r0, [fp, #-12]
   200a4:	ldr	r1, [fp, #-8]
   200a8:	ldr	r2, [sp, #16]
   200ac:	add	r1, r1, r2
   200b0:	ldrb	r1, [r1]
   200b4:	bl	1f080 <__assert_fail@plt+0xdb7c>
   200b8:	b	200bc <__assert_fail@plt+0xebb8>
   200bc:	ldr	r0, [sp, #16]
   200c0:	add	r0, r0, #1
   200c4:	str	r0, [sp, #16]
   200c8:	b	20074 <__assert_fail@plt+0xeb70>
   200cc:	b	20128 <__assert_fail@plt+0xec24>
   200d0:	movw	r0, #0
   200d4:	str	r0, [sp, #16]
   200d8:	ldr	r0, [sp, #16]
   200dc:	cmp	r0, #256	; 0x100
   200e0:	bge	20124 <__assert_fail@plt+0xec20>
   200e4:	bl	113b4 <__ctype_b_loc@plt>
   200e8:	ldr	r0, [r0]
   200ec:	ldr	r1, [sp, #16]
   200f0:	add	r0, r0, r1, lsl #1
   200f4:	ldrh	r0, [r0]
   200f8:	and	r0, r0, #1
   200fc:	cmp	r0, #0
   20100:	beq	20110 <__assert_fail@plt+0xec0c>
   20104:	ldr	r0, [fp, #-12]
   20108:	ldr	r1, [sp, #16]
   2010c:	bl	1f080 <__assert_fail@plt+0xdb7c>
   20110:	b	20114 <__assert_fail@plt+0xec10>
   20114:	ldr	r0, [sp, #16]
   20118:	add	r0, r0, #1
   2011c:	str	r0, [sp, #16]
   20120:	b	200d8 <__assert_fail@plt+0xebd4>
   20124:	b	20128 <__assert_fail@plt+0xec24>
   20128:	b	2012c <__assert_fail@plt+0xec28>
   2012c:	b	20418 <__assert_fail@plt+0xef14>
   20130:	ldr	r0, [sp, #12]
   20134:	movw	r1, #31948	; 0x7ccc
   20138:	movt	r1, #3
   2013c:	bl	11234 <strcmp@plt>
   20140:	cmp	r0, #0
   20144:	bne	20220 <__assert_fail@plt+0xed1c>
   20148:	b	2014c <__assert_fail@plt+0xec48>
   2014c:	ldr	r0, [fp, #-8]
   20150:	movw	r1, #0
   20154:	cmp	r0, r1
   20158:	beq	201c0 <__assert_fail@plt+0xecbc>
   2015c:	movw	r0, #0
   20160:	str	r0, [sp, #16]
   20164:	ldr	r0, [sp, #16]
   20168:	cmp	r0, #256	; 0x100
   2016c:	bge	201bc <__assert_fail@plt+0xecb8>
   20170:	bl	113b4 <__ctype_b_loc@plt>
   20174:	ldr	r0, [r0]
   20178:	ldr	r1, [sp, #16]
   2017c:	add	r0, r0, r1, lsl #1
   20180:	ldrh	r0, [r0]
   20184:	and	r0, r0, #32768	; 0x8000
   20188:	cmp	r0, #0
   2018c:	beq	201a8 <__assert_fail@plt+0xeca4>
   20190:	ldr	r0, [fp, #-12]
   20194:	ldr	r1, [fp, #-8]
   20198:	ldr	r2, [sp, #16]
   2019c:	add	r1, r1, r2
   201a0:	ldrb	r1, [r1]
   201a4:	bl	1f080 <__assert_fail@plt+0xdb7c>
   201a8:	b	201ac <__assert_fail@plt+0xeca8>
   201ac:	ldr	r0, [sp, #16]
   201b0:	add	r0, r0, #1
   201b4:	str	r0, [sp, #16]
   201b8:	b	20164 <__assert_fail@plt+0xec60>
   201bc:	b	20218 <__assert_fail@plt+0xed14>
   201c0:	movw	r0, #0
   201c4:	str	r0, [sp, #16]
   201c8:	ldr	r0, [sp, #16]
   201cc:	cmp	r0, #256	; 0x100
   201d0:	bge	20214 <__assert_fail@plt+0xed10>
   201d4:	bl	113b4 <__ctype_b_loc@plt>
   201d8:	ldr	r0, [r0]
   201dc:	ldr	r1, [sp, #16]
   201e0:	add	r0, r0, r1, lsl #1
   201e4:	ldrh	r0, [r0]
   201e8:	and	r0, r0, #32768	; 0x8000
   201ec:	cmp	r0, #0
   201f0:	beq	20200 <__assert_fail@plt+0xecfc>
   201f4:	ldr	r0, [fp, #-12]
   201f8:	ldr	r1, [sp, #16]
   201fc:	bl	1f080 <__assert_fail@plt+0xdb7c>
   20200:	b	20204 <__assert_fail@plt+0xed00>
   20204:	ldr	r0, [sp, #16]
   20208:	add	r0, r0, #1
   2020c:	str	r0, [sp, #16]
   20210:	b	201c8 <__assert_fail@plt+0xecc4>
   20214:	b	20218 <__assert_fail@plt+0xed14>
   20218:	b	2021c <__assert_fail@plt+0xed18>
   2021c:	b	20414 <__assert_fail@plt+0xef10>
   20220:	ldr	r0, [sp, #12]
   20224:	movw	r1, #31954	; 0x7cd2
   20228:	movt	r1, #3
   2022c:	bl	11234 <strcmp@plt>
   20230:	cmp	r0, #0
   20234:	bne	20310 <__assert_fail@plt+0xee0c>
   20238:	b	2023c <__assert_fail@plt+0xed38>
   2023c:	ldr	r0, [fp, #-8]
   20240:	movw	r1, #0
   20244:	cmp	r0, r1
   20248:	beq	202b0 <__assert_fail@plt+0xedac>
   2024c:	movw	r0, #0
   20250:	str	r0, [sp, #16]
   20254:	ldr	r0, [sp, #16]
   20258:	cmp	r0, #256	; 0x100
   2025c:	bge	202ac <__assert_fail@plt+0xeda8>
   20260:	bl	113b4 <__ctype_b_loc@plt>
   20264:	ldr	r0, [r0]
   20268:	ldr	r1, [sp, #16]
   2026c:	add	r0, r0, r1, lsl #1
   20270:	ldrh	r0, [r0]
   20274:	and	r0, r0, #4
   20278:	cmp	r0, #0
   2027c:	beq	20298 <__assert_fail@plt+0xed94>
   20280:	ldr	r0, [fp, #-12]
   20284:	ldr	r1, [fp, #-8]
   20288:	ldr	r2, [sp, #16]
   2028c:	add	r1, r1, r2
   20290:	ldrb	r1, [r1]
   20294:	bl	1f080 <__assert_fail@plt+0xdb7c>
   20298:	b	2029c <__assert_fail@plt+0xed98>
   2029c:	ldr	r0, [sp, #16]
   202a0:	add	r0, r0, #1
   202a4:	str	r0, [sp, #16]
   202a8:	b	20254 <__assert_fail@plt+0xed50>
   202ac:	b	20308 <__assert_fail@plt+0xee04>
   202b0:	movw	r0, #0
   202b4:	str	r0, [sp, #16]
   202b8:	ldr	r0, [sp, #16]
   202bc:	cmp	r0, #256	; 0x100
   202c0:	bge	20304 <__assert_fail@plt+0xee00>
   202c4:	bl	113b4 <__ctype_b_loc@plt>
   202c8:	ldr	r0, [r0]
   202cc:	ldr	r1, [sp, #16]
   202d0:	add	r0, r0, r1, lsl #1
   202d4:	ldrh	r0, [r0]
   202d8:	and	r0, r0, #4
   202dc:	cmp	r0, #0
   202e0:	beq	202f0 <__assert_fail@plt+0xedec>
   202e4:	ldr	r0, [fp, #-12]
   202e8:	ldr	r1, [sp, #16]
   202ec:	bl	1f080 <__assert_fail@plt+0xdb7c>
   202f0:	b	202f4 <__assert_fail@plt+0xedf0>
   202f4:	ldr	r0, [sp, #16]
   202f8:	add	r0, r0, #1
   202fc:	str	r0, [sp, #16]
   20300:	b	202b8 <__assert_fail@plt+0xedb4>
   20304:	b	20308 <__assert_fail@plt+0xee04>
   20308:	b	2030c <__assert_fail@plt+0xee08>
   2030c:	b	20410 <__assert_fail@plt+0xef0c>
   20310:	ldr	r0, [sp, #12]
   20314:	movw	r1, #31960	; 0x7cd8
   20318:	movt	r1, #3
   2031c:	bl	11234 <strcmp@plt>
   20320:	cmp	r0, #0
   20324:	bne	20400 <__assert_fail@plt+0xeefc>
   20328:	b	2032c <__assert_fail@plt+0xee28>
   2032c:	ldr	r0, [fp, #-8]
   20330:	movw	r1, #0
   20334:	cmp	r0, r1
   20338:	beq	203a0 <__assert_fail@plt+0xee9c>
   2033c:	movw	r0, #0
   20340:	str	r0, [sp, #16]
   20344:	ldr	r0, [sp, #16]
   20348:	cmp	r0, #256	; 0x100
   2034c:	bge	2039c <__assert_fail@plt+0xee98>
   20350:	bl	113b4 <__ctype_b_loc@plt>
   20354:	ldr	r0, [r0]
   20358:	ldr	r1, [sp, #16]
   2035c:	add	r0, r0, r1, lsl #1
   20360:	ldrh	r0, [r0]
   20364:	and	r0, r0, #4096	; 0x1000
   20368:	cmp	r0, #0
   2036c:	beq	20388 <__assert_fail@plt+0xee84>
   20370:	ldr	r0, [fp, #-12]
   20374:	ldr	r1, [fp, #-8]
   20378:	ldr	r2, [sp, #16]
   2037c:	add	r1, r1, r2
   20380:	ldrb	r1, [r1]
   20384:	bl	1f080 <__assert_fail@plt+0xdb7c>
   20388:	b	2038c <__assert_fail@plt+0xee88>
   2038c:	ldr	r0, [sp, #16]
   20390:	add	r0, r0, #1
   20394:	str	r0, [sp, #16]
   20398:	b	20344 <__assert_fail@plt+0xee40>
   2039c:	b	203f8 <__assert_fail@plt+0xeef4>
   203a0:	movw	r0, #0
   203a4:	str	r0, [sp, #16]
   203a8:	ldr	r0, [sp, #16]
   203ac:	cmp	r0, #256	; 0x100
   203b0:	bge	203f4 <__assert_fail@plt+0xeef0>
   203b4:	bl	113b4 <__ctype_b_loc@plt>
   203b8:	ldr	r0, [r0]
   203bc:	ldr	r1, [sp, #16]
   203c0:	add	r0, r0, r1, lsl #1
   203c4:	ldrh	r0, [r0]
   203c8:	and	r0, r0, #4096	; 0x1000
   203cc:	cmp	r0, #0
   203d0:	beq	203e0 <__assert_fail@plt+0xeedc>
   203d4:	ldr	r0, [fp, #-12]
   203d8:	ldr	r1, [sp, #16]
   203dc:	bl	1f080 <__assert_fail@plt+0xdb7c>
   203e0:	b	203e4 <__assert_fail@plt+0xeee0>
   203e4:	ldr	r0, [sp, #16]
   203e8:	add	r0, r0, #1
   203ec:	str	r0, [sp, #16]
   203f0:	b	203a8 <__assert_fail@plt+0xeea4>
   203f4:	b	203f8 <__assert_fail@plt+0xeef4>
   203f8:	b	203fc <__assert_fail@plt+0xeef8>
   203fc:	b	2040c <__assert_fail@plt+0xef08>
   20400:	movw	r0, #4
   20404:	str	r0, [fp, #-4]
   20408:	b	20440 <__assert_fail@plt+0xef3c>
   2040c:	b	20410 <__assert_fail@plt+0xef0c>
   20410:	b	20414 <__assert_fail@plt+0xef10>
   20414:	b	20418 <__assert_fail@plt+0xef14>
   20418:	b	2041c <__assert_fail@plt+0xef18>
   2041c:	b	20420 <__assert_fail@plt+0xef1c>
   20420:	b	20424 <__assert_fail@plt+0xef20>
   20424:	b	20428 <__assert_fail@plt+0xef24>
   20428:	b	2042c <__assert_fail@plt+0xef28>
   2042c:	b	20430 <__assert_fail@plt+0xef2c>
   20430:	b	20434 <__assert_fail@plt+0xef30>
   20434:	b	20438 <__assert_fail@plt+0xef34>
   20438:	movw	r0, #0
   2043c:	str	r0, [fp, #-4]
   20440:	ldr	r0, [fp, #-4]
   20444:	mov	sp, fp
   20448:	pop	{fp, pc}
   2044c:	sub	sp, sp, #8
   20450:	str	r0, [sp, #4]
   20454:	movw	r0, #0
   20458:	str	r0, [sp]
   2045c:	ldr	r0, [sp]
   20460:	cmp	r0, #8
   20464:	bge	2048c <__assert_fail@plt+0xef88>
   20468:	ldr	r0, [sp, #4]
   2046c:	ldr	r1, [sp]
   20470:	ldr	r1, [r0, r1, lsl #2]!
   20474:	mvn	r1, r1
   20478:	str	r1, [r0]
   2047c:	ldr	r0, [sp]
   20480:	add	r0, r0, #1
   20484:	str	r0, [sp]
   20488:	b	2045c <__assert_fail@plt+0xef58>
   2048c:	add	sp, sp, #8
   20490:	bx	lr
   20494:	sub	sp, sp, #12
   20498:	str	r0, [sp, #8]
   2049c:	str	r1, [sp, #4]
   204a0:	movw	r0, #0
   204a4:	str	r0, [sp]
   204a8:	ldr	r0, [sp]
   204ac:	cmp	r0, #8
   204b0:	bge	204e4 <__assert_fail@plt+0xefe0>
   204b4:	ldr	r0, [sp, #4]
   204b8:	ldr	r1, [sp]
   204bc:	ldr	r0, [r0, r1, lsl #2]
   204c0:	ldr	r2, [sp, #8]
   204c4:	add	r1, r2, r1, lsl #2
   204c8:	ldr	r2, [r1]
   204cc:	and	r0, r2, r0
   204d0:	str	r0, [r1]
   204d4:	ldr	r0, [sp]
   204d8:	add	r0, r0, #1
   204dc:	str	r0, [sp]
   204e0:	b	204a8 <__assert_fail@plt+0xefa4>
   204e4:	add	sp, sp, #12
   204e8:	bx	lr
   204ec:	sub	sp, sp, #16
   204f0:	str	r0, [sp, #8]
   204f4:	str	r1, [sp, #4]
   204f8:	ldr	r0, [sp, #8]
   204fc:	ldr	r0, [r0, #80]	; 0x50
   20500:	cmp	r0, #1
   20504:	bne	20514 <__assert_fail@plt+0xf010>
   20508:	movw	r0, #1
   2050c:	str	r0, [sp, #12]
   20510:	b	2057c <__assert_fail@plt+0xf078>
   20514:	movw	r0, #1
   20518:	str	r0, [sp]
   2051c:	ldr	r0, [sp, #4]
   20520:	ldr	r1, [sp]
   20524:	add	r0, r0, r1
   20528:	ldr	r1, [sp, #8]
   2052c:	ldr	r1, [r1, #28]
   20530:	cmp	r0, r1
   20534:	bge	20574 <__assert_fail@plt+0xf070>
   20538:	ldr	r0, [sp, #8]
   2053c:	ldr	r0, [r0, #8]
   20540:	ldr	r1, [sp, #4]
   20544:	ldr	r2, [sp]
   20548:	add	r1, r1, r2
   2054c:	add	r0, r0, r1, lsl #2
   20550:	ldr	r0, [r0]
   20554:	cmn	r0, #1
   20558:	beq	20560 <__assert_fail@plt+0xf05c>
   2055c:	b	20574 <__assert_fail@plt+0xf070>
   20560:	b	20564 <__assert_fail@plt+0xf060>
   20564:	ldr	r0, [sp]
   20568:	add	r0, r0, #1
   2056c:	str	r0, [sp]
   20570:	b	2051c <__assert_fail@plt+0xf018>
   20574:	ldr	r0, [sp]
   20578:	str	r0, [sp, #12]
   2057c:	ldr	r0, [sp, #12]
   20580:	add	sp, sp, #16
   20584:	bx	lr
   20588:	push	{fp, lr}
   2058c:	mov	fp, sp
   20590:	sub	sp, sp, #32
   20594:	str	r0, [fp, #-8]
   20598:	str	r1, [fp, #-12]
   2059c:	str	r2, [sp, #16]
   205a0:	ldr	r0, [sp, #16]
   205a4:	ldrb	r0, [r0]
   205a8:	strb	r0, [sp, #14]
   205ac:	movw	r0, #0
   205b0:	str	r0, [sp, #8]
   205b4:	ldr	r0, [fp, #-12]
   205b8:	ldr	r0, [r0, #56]	; 0x38
   205bc:	ldr	r1, [fp, #-12]
   205c0:	ldr	r1, [r1, #40]	; 0x28
   205c4:	cmp	r0, r1
   205c8:	bgt	205d8 <__assert_fail@plt+0xf0d4>
   205cc:	movw	r0, #7
   205d0:	str	r0, [fp, #-4]
   205d4:	b	2075c <__assert_fail@plt+0xf258>
   205d8:	b	205dc <__assert_fail@plt+0xf0d8>
   205dc:	ldr	r0, [sp, #8]
   205e0:	cmp	r0, #32
   205e4:	blt	205f4 <__assert_fail@plt+0xf0f0>
   205e8:	movw	r0, #7
   205ec:	str	r0, [fp, #-4]
   205f0:	b	2075c <__assert_fail@plt+0xf258>
   205f4:	ldr	r0, [sp, #16]
   205f8:	ldr	r0, [r0, #4]
   205fc:	and	r0, r0, #255	; 0xff
   20600:	cmp	r0, #30
   20604:	bne	20618 <__assert_fail@plt+0xf114>
   20608:	ldr	r0, [fp, #-12]
   2060c:	bl	20768 <__assert_fail@plt+0xf264>
   20610:	strb	r0, [sp, #15]
   20614:	b	2063c <__assert_fail@plt+0xf138>
   20618:	ldr	r0, [fp, #-12]
   2061c:	ldr	r0, [r0, #4]
   20620:	ldr	r1, [fp, #-12]
   20624:	ldr	r2, [r1, #40]	; 0x28
   20628:	add	r3, r2, #1
   2062c:	str	r3, [r1, #40]	; 0x28
   20630:	add	r0, r0, r2
   20634:	ldrb	r0, [r0]
   20638:	strb	r0, [sp, #15]
   2063c:	ldr	r0, [fp, #-12]
   20640:	ldr	r0, [r0, #56]	; 0x38
   20644:	ldr	r1, [fp, #-12]
   20648:	ldr	r1, [r1, #40]	; 0x28
   2064c:	cmp	r0, r1
   20650:	bgt	20660 <__assert_fail@plt+0xf15c>
   20654:	movw	r0, #7
   20658:	str	r0, [fp, #-4]
   2065c:	b	2075c <__assert_fail@plt+0xf258>
   20660:	ldrb	r0, [sp, #15]
   20664:	ldrb	r1, [sp, #14]
   20668:	cmp	r0, r1
   2066c:	bne	20698 <__assert_fail@plt+0xf194>
   20670:	ldr	r0, [fp, #-12]
   20674:	ldr	r0, [r0, #4]
   20678:	ldr	r1, [fp, #-12]
   2067c:	ldr	r1, [r1, #40]	; 0x28
   20680:	add	r1, r1, #0
   20684:	add	r0, r0, r1
   20688:	ldrb	r0, [r0]
   2068c:	cmp	r0, #93	; 0x5d
   20690:	bne	20698 <__assert_fail@plt+0xf194>
   20694:	b	206c0 <__assert_fail@plt+0xf1bc>
   20698:	ldrb	r0, [sp, #15]
   2069c:	ldr	r1, [fp, #-8]
   206a0:	ldr	r1, [r1, #4]
   206a4:	ldr	r2, [sp, #8]
   206a8:	add	r1, r1, r2
   206ac:	strb	r0, [r1]
   206b0:	ldr	r0, [sp, #8]
   206b4:	add	r0, r0, #1
   206b8:	str	r0, [sp, #8]
   206bc:	b	205dc <__assert_fail@plt+0xf0d8>
   206c0:	ldr	r0, [fp, #-12]
   206c4:	ldr	r1, [r0, #40]	; 0x28
   206c8:	add	r1, r1, #1
   206cc:	str	r1, [r0, #40]	; 0x28
   206d0:	ldr	r0, [fp, #-8]
   206d4:	ldr	r0, [r0, #4]
   206d8:	ldr	r1, [sp, #8]
   206dc:	mov	r2, #0
   206e0:	strb	r2, [r0, r1]
   206e4:	ldr	r0, [sp, #16]
   206e8:	ldrb	r0, [r0, #4]
   206ec:	mov	r1, r0
   206f0:	cmp	r0, #26
   206f4:	str	r1, [sp, #4]
   206f8:	beq	20720 <__assert_fail@plt+0xf21c>
   206fc:	b	20700 <__assert_fail@plt+0xf1fc>
   20700:	ldr	r0, [sp, #4]
   20704:	cmp	r0, #28
   20708:	beq	20730 <__assert_fail@plt+0xf22c>
   2070c:	b	20710 <__assert_fail@plt+0xf20c>
   20710:	ldr	r0, [sp, #4]
   20714:	cmp	r0, #30
   20718:	beq	20740 <__assert_fail@plt+0xf23c>
   2071c:	b	20750 <__assert_fail@plt+0xf24c>
   20720:	ldr	r0, [fp, #-8]
   20724:	movw	r1, #3
   20728:	str	r1, [r0]
   2072c:	b	20754 <__assert_fail@plt+0xf250>
   20730:	ldr	r0, [fp, #-8]
   20734:	movw	r1, #2
   20738:	str	r1, [r0]
   2073c:	b	20754 <__assert_fail@plt+0xf250>
   20740:	ldr	r0, [fp, #-8]
   20744:	movw	r1, #4
   20748:	str	r1, [r0]
   2074c:	b	20754 <__assert_fail@plt+0xf250>
   20750:	b	20754 <__assert_fail@plt+0xf250>
   20754:	movw	r0, #0
   20758:	str	r0, [fp, #-4]
   2075c:	ldr	r0, [fp, #-4]
   20760:	mov	sp, fp
   20764:	pop	{fp, pc}
   20768:	push	{fp, lr}
   2076c:	mov	fp, sp
   20770:	sub	sp, sp, #16
   20774:	str	r0, [sp, #8]
   20778:	ldr	r0, [sp, #8]
   2077c:	ldrsb	r0, [r0, #75]	; 0x4b
   20780:	cmp	r0, #0
   20784:	movw	r0, #0
   20788:	movne	r0, #1
   2078c:	mvn	r1, #0
   20790:	eor	r0, r0, r1
   20794:	tst	r0, #1
   20798:	beq	207c4 <__assert_fail@plt+0xf2c0>
   2079c:	ldr	r0, [sp, #8]
   207a0:	ldr	r0, [r0, #4]
   207a4:	ldr	r1, [sp, #8]
   207a8:	ldr	r2, [r1, #40]	; 0x28
   207ac:	add	r3, r2, #1
   207b0:	str	r3, [r1, #40]	; 0x28
   207b4:	add	r0, r0, r2
   207b8:	ldrb	r0, [r0]
   207bc:	strb	r0, [fp, #-1]
   207c0:	b	20904 <__assert_fail@plt+0xf400>
   207c4:	ldr	r0, [sp, #8]
   207c8:	ldrsb	r0, [r0, #76]	; 0x4c
   207cc:	cmp	r0, #0
   207d0:	beq	208d4 <__assert_fail@plt+0xf3d0>
   207d4:	ldr	r0, [sp, #8]
   207d8:	ldr	r0, [r0, #40]	; 0x28
   207dc:	ldr	r1, [sp, #8]
   207e0:	ldr	r1, [r1, #28]
   207e4:	cmp	r0, r1
   207e8:	beq	20830 <__assert_fail@plt+0xf32c>
   207ec:	ldr	r0, [sp, #8]
   207f0:	ldr	r1, [r0, #8]
   207f4:	ldr	r0, [r0, #40]	; 0x28
   207f8:	add	r0, r1, r0, lsl #2
   207fc:	ldr	r0, [r0]
   20800:	cmn	r0, #1
   20804:	bne	20830 <__assert_fail@plt+0xf32c>
   20808:	ldr	r0, [sp, #8]
   2080c:	ldr	r0, [r0, #4]
   20810:	ldr	r1, [sp, #8]
   20814:	ldr	r2, [r1, #40]	; 0x28
   20818:	add	r3, r2, #1
   2081c:	str	r3, [r1, #40]	; 0x28
   20820:	add	r0, r0, r2
   20824:	ldrb	r0, [r0]
   20828:	strb	r0, [fp, #-1]
   2082c:	b	20904 <__assert_fail@plt+0xf400>
   20830:	ldr	r0, [sp, #8]
   20834:	ldr	r1, [r0, #12]
   20838:	ldr	r0, [r0, #40]	; 0x28
   2083c:	add	r0, r1, r0, lsl #2
   20840:	ldr	r0, [r0]
   20844:	str	r0, [sp, #4]
   20848:	ldr	r0, [sp, #8]
   2084c:	ldr	r0, [r0]
   20850:	ldr	r1, [sp, #8]
   20854:	ldr	r1, [r1, #24]
   20858:	ldr	r2, [sp, #4]
   2085c:	add	r1, r1, r2
   20860:	add	r0, r0, r1
   20864:	ldrb	r0, [r0]
   20868:	str	r0, [sp]
   2086c:	ldr	r0, [sp]
   20870:	mvn	r1, #127	; 0x7f
   20874:	and	r0, r0, r1
   20878:	cmp	r0, #0
   2087c:	beq	208a8 <__assert_fail@plt+0xf3a4>
   20880:	ldr	r0, [sp, #8]
   20884:	ldr	r0, [r0, #4]
   20888:	ldr	r1, [sp, #8]
   2088c:	ldr	r2, [r1, #40]	; 0x28
   20890:	add	r3, r2, #1
   20894:	str	r3, [r1, #40]	; 0x28
   20898:	add	r0, r0, r2
   2089c:	ldrb	r0, [r0]
   208a0:	strb	r0, [fp, #-1]
   208a4:	b	20904 <__assert_fail@plt+0xf400>
   208a8:	ldr	r0, [sp, #8]
   208ac:	ldr	r1, [sp, #8]
   208b0:	ldr	r1, [r1, #40]	; 0x28
   208b4:	bl	204ec <__assert_fail@plt+0xefe8>
   208b8:	ldr	r1, [sp, #8]
   208bc:	ldr	r2, [r1, #40]	; 0x28
   208c0:	add	r0, r2, r0
   208c4:	str	r0, [r1, #40]	; 0x28
   208c8:	ldr	r0, [sp]
   208cc:	strb	r0, [fp, #-1]
   208d0:	b	20904 <__assert_fail@plt+0xf400>
   208d4:	ldr	r0, [sp, #8]
   208d8:	ldr	r0, [r0]
   208dc:	ldr	r1, [sp, #8]
   208e0:	ldr	r1, [r1, #24]
   208e4:	ldr	r2, [sp, #8]
   208e8:	ldr	r3, [r2, #40]	; 0x28
   208ec:	add	ip, r3, #1
   208f0:	str	ip, [r2, #40]	; 0x28
   208f4:	add	r1, r1, r3
   208f8:	add	r0, r0, r1
   208fc:	ldrb	r0, [r0]
   20900:	strb	r0, [fp, #-1]
   20904:	ldrb	r0, [fp, #-1]
   20908:	mov	sp, fp
   2090c:	pop	{fp, pc}
   20910:	push	{fp, lr}
   20914:	mov	fp, sp
   20918:	sub	sp, sp, #16
   2091c:	strb	r0, [fp, #-1]
   20920:	str	r1, [sp, #8]
   20924:	ldr	r0, [sp, #8]
   20928:	ldr	r0, [r0, #92]	; 0x5c
   2092c:	cmp	r0, #1
   20930:	ble	20944 <__assert_fail@plt+0xf440>
   20934:	ldrb	r0, [fp, #-1]
   20938:	bl	1142c <btowc@plt>
   2093c:	str	r0, [sp, #4]
   20940:	b	2094c <__assert_fail@plt+0xf448>
   20944:	ldrb	r0, [fp, #-1]
   20948:	str	r0, [sp, #4]
   2094c:	ldr	r0, [sp, #4]
   20950:	mov	sp, fp
   20954:	pop	{fp, pc}
   20958:	push	{fp, lr}
   2095c:	mov	fp, sp
   20960:	sub	sp, sp, #40	; 0x28
   20964:	str	r0, [fp, #-8]
   20968:	str	r1, [fp, #-12]
   2096c:	str	r2, [fp, #-16]
   20970:	mvn	r0, #0
   20974:	str	r0, [sp, #20]
   20978:	ldr	r0, [fp, #-12]
   2097c:	ldr	r1, [fp, #-8]
   20980:	ldr	r2, [fp, #-16]
   20984:	bl	1b29c <__assert_fail@plt+0x9d98>
   20988:	ldr	r0, [fp, #-12]
   2098c:	ldrb	r0, [r0]
   20990:	strb	r0, [sp, #19]
   20994:	ldr	r0, [fp, #-12]
   20998:	ldr	r0, [r0, #4]
   2099c:	and	r0, r0, #255	; 0xff
   209a0:	cmp	r0, #2
   209a4:	bne	209b4 <__assert_fail@plt+0xf4b0>
   209a8:	mvn	r0, #1
   209ac:	str	r0, [fp, #-4]
   209b0:	b	20aac <__assert_fail@plt+0xf5a8>
   209b4:	ldr	r0, [fp, #-12]
   209b8:	ldr	r0, [r0, #4]
   209bc:	and	r0, r0, #255	; 0xff
   209c0:	cmp	r0, #24
   209c4:	beq	209d4 <__assert_fail@plt+0xf4d0>
   209c8:	ldrb	r0, [sp, #19]
   209cc:	cmp	r0, #44	; 0x2c
   209d0:	bne	209d8 <__assert_fail@plt+0xf4d4>
   209d4:	b	20aa4 <__assert_fail@plt+0xf5a0>
   209d8:	ldr	r0, [fp, #-12]
   209dc:	ldr	r0, [r0, #4]
   209e0:	and	r0, r0, #255	; 0xff
   209e4:	cmp	r0, #1
   209e8:	bne	20a14 <__assert_fail@plt+0xf510>
   209ec:	ldrb	r0, [sp, #19]
   209f0:	cmp	r0, #48	; 0x30
   209f4:	blt	20a14 <__assert_fail@plt+0xf510>
   209f8:	ldrb	r0, [sp, #19]
   209fc:	movw	r1, #57	; 0x39
   20a00:	cmp	r1, r0
   20a04:	blt	20a14 <__assert_fail@plt+0xf510>
   20a08:	ldr	r0, [sp, #20]
   20a0c:	cmn	r0, #2
   20a10:	bne	20a20 <__assert_fail@plt+0xf51c>
   20a14:	mvn	r0, #1
   20a18:	str	r0, [sp, #12]
   20a1c:	b	20a98 <__assert_fail@plt+0xf594>
   20a20:	ldr	r0, [sp, #20]
   20a24:	cmn	r0, #1
   20a28:	bne	20a3c <__assert_fail@plt+0xf538>
   20a2c:	ldrb	r0, [sp, #19]
   20a30:	sub	r0, r0, #48	; 0x30
   20a34:	str	r0, [sp, #8]
   20a38:	b	20a90 <__assert_fail@plt+0xf58c>
   20a3c:	ldr	r0, [sp, #20]
   20a40:	movw	r1, #10
   20a44:	mul	r0, r0, r1
   20a48:	ldrb	r1, [sp, #19]
   20a4c:	add	r0, r0, r1
   20a50:	sub	r0, r0, #48	; 0x30
   20a54:	movw	r1, #32768	; 0x8000
   20a58:	cmp	r1, r0
   20a5c:	bge	20a6c <__assert_fail@plt+0xf568>
   20a60:	movw	r0, #32768	; 0x8000
   20a64:	str	r0, [sp, #4]
   20a68:	b	20a88 <__assert_fail@plt+0xf584>
   20a6c:	ldr	r0, [sp, #20]
   20a70:	movw	r1, #10
   20a74:	mul	r0, r0, r1
   20a78:	ldrb	r1, [sp, #19]
   20a7c:	add	r0, r0, r1
   20a80:	sub	r0, r0, #48	; 0x30
   20a84:	str	r0, [sp, #4]
   20a88:	ldr	r0, [sp, #4]
   20a8c:	str	r0, [sp, #8]
   20a90:	ldr	r0, [sp, #8]
   20a94:	str	r0, [sp, #12]
   20a98:	ldr	r0, [sp, #12]
   20a9c:	str	r0, [sp, #20]
   20aa0:	b	20978 <__assert_fail@plt+0xf474>
   20aa4:	ldr	r0, [sp, #20]
   20aa8:	str	r0, [fp, #-4]
   20aac:	ldr	r0, [fp, #-4]
   20ab0:	mov	sp, fp
   20ab4:	pop	{fp, pc}
   20ab8:	push	{fp, lr}
   20abc:	mov	fp, sp
   20ac0:	sub	sp, sp, #40	; 0x28
   20ac4:	str	r0, [fp, #-8]
   20ac8:	str	r1, [fp, #-12]
   20acc:	add	r0, sp, #20
   20ad0:	str	r0, [sp, #16]
   20ad4:	ldr	r0, [fp, #-8]
   20ad8:	ldr	r0, [r0]
   20adc:	str	r0, [sp, #12]
   20ae0:	ldr	r0, [fp, #-8]
   20ae4:	str	r0, [fp, #-16]
   20ae8:	ldr	r0, [fp, #-12]
   20aec:	ldr	r1, [fp, #-16]
   20af0:	add	r3, r1, #20
   20af4:	movw	r1, #0
   20af8:	str	r1, [sp, #4]
   20afc:	ldr	r2, [sp, #4]
   20b00:	bl	1d594 <__assert_fail@plt+0xc090>
   20b04:	ldr	r1, [sp, #16]
   20b08:	str	r0, [r1]
   20b0c:	ldr	r0, [sp, #16]
   20b10:	ldr	r0, [r0]
   20b14:	movw	r1, #0
   20b18:	cmp	r0, r1
   20b1c:	bne	20b2c <__assert_fail@plt+0xf628>
   20b20:	movw	r0, #0
   20b24:	str	r0, [fp, #-4]
   20b28:	b	20c3c <__assert_fail@plt+0xf738>
   20b2c:	ldr	r0, [sp, #12]
   20b30:	ldr	r1, [sp, #16]
   20b34:	ldr	r1, [r1]
   20b38:	str	r0, [r1]
   20b3c:	ldr	r0, [sp, #16]
   20b40:	ldr	r0, [r0]
   20b44:	ldr	r1, [r0, #24]
   20b48:	mvn	r2, #262144	; 0x40000
   20b4c:	and	r1, r1, r2
   20b50:	orr	r1, r1, #262144	; 0x40000
   20b54:	str	r1, [r0, #24]
   20b58:	ldr	r0, [sp, #16]
   20b5c:	ldr	r0, [r0]
   20b60:	str	r0, [sp, #12]
   20b64:	ldr	r0, [fp, #-16]
   20b68:	ldr	r0, [r0, #4]
   20b6c:	movw	r1, #0
   20b70:	cmp	r0, r1
   20b74:	beq	20b94 <__assert_fail@plt+0xf690>
   20b78:	ldr	r0, [fp, #-16]
   20b7c:	ldr	r0, [r0, #4]
   20b80:	str	r0, [fp, #-16]
   20b84:	ldr	r0, [sp, #12]
   20b88:	add	r0, r0, #4
   20b8c:	str	r0, [sp, #16]
   20b90:	b	20c38 <__assert_fail@plt+0xf734>
   20b94:	movw	r0, #0
   20b98:	str	r0, [sp, #8]
   20b9c:	ldr	r0, [fp, #-16]
   20ba0:	ldr	r0, [r0, #8]
   20ba4:	ldr	r1, [sp, #8]
   20ba8:	cmp	r0, r1
   20bac:	movw	r0, #1
   20bb0:	str	r0, [sp]
   20bb4:	beq	20bd4 <__assert_fail@plt+0xf6d0>
   20bb8:	ldr	r0, [fp, #-16]
   20bbc:	ldr	r0, [r0, #8]
   20bc0:	movw	r1, #0
   20bc4:	cmp	r0, r1
   20bc8:	movw	r0, #0
   20bcc:	moveq	r0, #1
   20bd0:	str	r0, [sp]
   20bd4:	ldr	r0, [sp]
   20bd8:	tst	r0, #1
   20bdc:	beq	20c20 <__assert_fail@plt+0xf71c>
   20be0:	ldr	r0, [fp, #-16]
   20be4:	str	r0, [sp, #8]
   20be8:	ldr	r0, [fp, #-16]
   20bec:	ldr	r0, [r0]
   20bf0:	str	r0, [fp, #-16]
   20bf4:	ldr	r0, [sp, #12]
   20bf8:	ldr	r0, [r0]
   20bfc:	str	r0, [sp, #12]
   20c00:	ldr	r0, [fp, #-16]
   20c04:	movw	r1, #0
   20c08:	cmp	r0, r1
   20c0c:	bne	20c1c <__assert_fail@plt+0xf718>
   20c10:	ldr	r0, [sp, #20]
   20c14:	str	r0, [fp, #-4]
   20c18:	b	20c3c <__assert_fail@plt+0xf738>
   20c1c:	b	20b9c <__assert_fail@plt+0xf698>
   20c20:	ldr	r0, [fp, #-16]
   20c24:	ldr	r0, [r0, #8]
   20c28:	str	r0, [fp, #-16]
   20c2c:	ldr	r0, [sp, #12]
   20c30:	add	r0, r0, #8
   20c34:	str	r0, [sp, #16]
   20c38:	b	20ae8 <__assert_fail@plt+0xf5e4>
   20c3c:	ldr	r0, [fp, #-4]
   20c40:	mov	sp, fp
   20c44:	pop	{fp, pc}
   20c48:	sub	sp, sp, #12
   20c4c:	str	r0, [sp, #8]
   20c50:	str	r1, [sp, #4]
   20c54:	ldr	r0, [sp, #8]
   20c58:	str	r0, [sp]
   20c5c:	ldr	r0, [sp, #4]
   20c60:	ldr	r0, [r0, #24]
   20c64:	and	r0, r0, #255	; 0xff
   20c68:	cmp	r0, #17
   20c6c:	bne	20c9c <__assert_fail@plt+0xf798>
   20c70:	ldr	r0, [sp, #4]
   20c74:	ldr	r0, [r0, #20]
   20c78:	ldr	r1, [sp]
   20c7c:	cmp	r0, r1
   20c80:	bne	20c9c <__assert_fail@plt+0xf798>
   20c84:	ldr	r0, [sp, #4]
   20c88:	ldr	r1, [r0, #24]
   20c8c:	mvn	r2, #524288	; 0x80000
   20c90:	and	r1, r1, r2
   20c94:	orr	r1, r1, #524288	; 0x80000
   20c98:	str	r1, [r0, #24]
   20c9c:	movw	r0, #0
   20ca0:	add	sp, sp, #12
   20ca4:	bx	lr
   20ca8:	push	{fp, lr}
   20cac:	mov	fp, sp
   20cb0:	sub	sp, sp, #40	; 0x28
   20cb4:	str	r0, [fp, #-8]
   20cb8:	str	r1, [fp, #-12]
   20cbc:	str	r2, [fp, #-16]
   20cc0:	ldr	r0, [fp, #-8]
   20cc4:	str	r0, [sp, #20]
   20cc8:	ldr	r0, [fp, #-12]
   20ccc:	ldr	r1, [fp, #-16]
   20cd0:	ldr	r2, [sp, #20]
   20cd4:	str	r0, [sp, #8]
   20cd8:	mov	r0, r1
   20cdc:	mov	r1, r2
   20ce0:	ldr	r2, [sp, #8]
   20ce4:	blx	r2
   20ce8:	str	r0, [sp, #16]
   20cec:	ldr	r0, [sp, #16]
   20cf0:	cmp	r0, #0
   20cf4:	beq	20d04 <__assert_fail@plt+0xf800>
   20cf8:	ldr	r0, [sp, #16]
   20cfc:	str	r0, [fp, #-4]
   20d00:	b	20db8 <__assert_fail@plt+0xf8b4>
   20d04:	ldr	r0, [sp, #20]
   20d08:	ldr	r0, [r0, #4]
   20d0c:	movw	r1, #0
   20d10:	cmp	r0, r1
   20d14:	beq	20d28 <__assert_fail@plt+0xf824>
   20d18:	ldr	r0, [sp, #20]
   20d1c:	ldr	r0, [r0, #4]
   20d20:	str	r0, [sp, #20]
   20d24:	b	20db4 <__assert_fail@plt+0xf8b0>
   20d28:	movw	r0, #0
   20d2c:	str	r0, [sp, #12]
   20d30:	ldr	r0, [sp, #20]
   20d34:	ldr	r0, [r0, #8]
   20d38:	ldr	r1, [sp, #12]
   20d3c:	cmp	r0, r1
   20d40:	movw	r0, #1
   20d44:	str	r0, [sp, #4]
   20d48:	beq	20d68 <__assert_fail@plt+0xf864>
   20d4c:	ldr	r0, [sp, #20]
   20d50:	ldr	r0, [r0, #8]
   20d54:	movw	r1, #0
   20d58:	cmp	r0, r1
   20d5c:	movw	r0, #0
   20d60:	moveq	r0, #1
   20d64:	str	r0, [sp, #4]
   20d68:	ldr	r0, [sp, #4]
   20d6c:	tst	r0, #1
   20d70:	beq	20da8 <__assert_fail@plt+0xf8a4>
   20d74:	ldr	r0, [sp, #20]
   20d78:	str	r0, [sp, #12]
   20d7c:	ldr	r0, [sp, #20]
   20d80:	ldr	r0, [r0]
   20d84:	str	r0, [sp, #20]
   20d88:	ldr	r0, [sp, #20]
   20d8c:	movw	r1, #0
   20d90:	cmp	r0, r1
   20d94:	bne	20da4 <__assert_fail@plt+0xf8a0>
   20d98:	movw	r0, #0
   20d9c:	str	r0, [fp, #-4]
   20da0:	b	20db8 <__assert_fail@plt+0xf8b4>
   20da4:	b	20d30 <__assert_fail@plt+0xf82c>
   20da8:	ldr	r0, [sp, #20]
   20dac:	ldr	r0, [r0, #8]
   20db0:	str	r0, [sp, #20]
   20db4:	b	20cc8 <__assert_fail@plt+0xf7c4>
   20db8:	ldr	r0, [fp, #-4]
   20dbc:	mov	sp, fp
   20dc0:	pop	{fp, pc}
   20dc4:	sub	sp, sp, #20
   20dc8:	str	r0, [sp, #16]
   20dcc:	str	r1, [sp, #12]
   20dd0:	ldr	r0, [sp, #16]
   20dd4:	str	r0, [sp, #8]
   20dd8:	ldr	r0, [sp, #12]
   20ddc:	ldr	r0, [r0, #24]
   20de0:	and	r0, r0, #255	; 0xff
   20de4:	cmp	r0, #4
   20de8:	bne	20e4c <__assert_fail@plt+0xf948>
   20dec:	ldr	r0, [sp, #8]
   20df0:	ldr	r0, [r0, #132]	; 0x84
   20df4:	movw	r1, #0
   20df8:	cmp	r0, r1
   20dfc:	beq	20e4c <__assert_fail@plt+0xf948>
   20e00:	ldr	r0, [sp, #12]
   20e04:	ldr	r0, [r0, #20]
   20e08:	str	r0, [sp, #4]
   20e0c:	ldr	r0, [sp, #8]
   20e10:	ldr	r0, [r0, #132]	; 0x84
   20e14:	ldr	r1, [sp, #4]
   20e18:	add	r0, r0, r1, lsl #2
   20e1c:	ldr	r0, [r0]
   20e20:	ldr	r1, [sp, #12]
   20e24:	str	r0, [r1, #20]
   20e28:	ldr	r0, [sp, #12]
   20e2c:	ldr	r0, [r0, #20]
   20e30:	movw	r1, #1
   20e34:	lsl	r0, r1, r0
   20e38:	ldr	r1, [sp, #8]
   20e3c:	ldr	r2, [r1, #80]	; 0x50
   20e40:	orr	r0, r2, r0
   20e44:	str	r0, [r1, #80]	; 0x50
   20e48:	b	20f2c <__assert_fail@plt+0xfa28>
   20e4c:	ldr	r0, [sp, #12]
   20e50:	ldr	r0, [r0, #24]
   20e54:	and	r0, r0, #255	; 0xff
   20e58:	cmp	r0, #17
   20e5c:	bne	20f28 <__assert_fail@plt+0xfa24>
   20e60:	ldr	r0, [sp, #12]
   20e64:	ldr	r0, [r0, #4]
   20e68:	movw	r1, #0
   20e6c:	cmp	r0, r1
   20e70:	beq	20f28 <__assert_fail@plt+0xfa24>
   20e74:	ldr	r0, [sp, #12]
   20e78:	ldr	r0, [r0, #4]
   20e7c:	ldr	r0, [r0, #24]
   20e80:	and	r0, r0, #255	; 0xff
   20e84:	cmp	r0, #17
   20e88:	bne	20f28 <__assert_fail@plt+0xfa24>
   20e8c:	ldr	r0, [sp, #12]
   20e90:	ldr	r0, [r0, #4]
   20e94:	ldr	r0, [r0, #20]
   20e98:	str	r0, [sp]
   20e9c:	ldr	r0, [sp, #12]
   20ea0:	ldr	r0, [r0, #4]
   20ea4:	ldr	r0, [r0, #4]
   20ea8:	ldr	r1, [sp, #12]
   20eac:	str	r0, [r1, #4]
   20eb0:	ldr	r0, [sp, #12]
   20eb4:	ldr	r0, [r0, #4]
   20eb8:	movw	r1, #0
   20ebc:	cmp	r0, r1
   20ec0:	beq	20ed4 <__assert_fail@plt+0xf9d0>
   20ec4:	ldr	r0, [sp, #12]
   20ec8:	ldr	r1, [sp, #12]
   20ecc:	ldr	r1, [r1, #4]
   20ed0:	str	r0, [r1]
   20ed4:	ldr	r0, [sp, #8]
   20ed8:	ldr	r0, [r0, #132]	; 0x84
   20edc:	ldr	r1, [sp, #12]
   20ee0:	ldr	r1, [r1, #20]
   20ee4:	ldr	r1, [r0, r1, lsl #2]
   20ee8:	ldr	r2, [sp]
   20eec:	add	r0, r0, r2, lsl #2
   20ef0:	str	r1, [r0]
   20ef4:	ldr	r0, [sp]
   20ef8:	cmp	r0, #32
   20efc:	bge	20f24 <__assert_fail@plt+0xfa20>
   20f00:	ldr	r0, [sp]
   20f04:	movw	r1, #1
   20f08:	lsl	r0, r1, r0
   20f0c:	mvn	r1, #0
   20f10:	eor	r0, r0, r1
   20f14:	ldr	r1, [sp, #8]
   20f18:	ldr	r2, [r1, #80]	; 0x50
   20f1c:	and	r0, r2, r0
   20f20:	str	r0, [r1, #80]	; 0x50
   20f24:	b	20f28 <__assert_fail@plt+0xfa24>
   20f28:	b	20f2c <__assert_fail@plt+0xfa28>
   20f2c:	movw	r0, #0
   20f30:	add	sp, sp, #20
   20f34:	bx	lr
   20f38:	push	{fp, lr}
   20f3c:	mov	fp, sp
   20f40:	sub	sp, sp, #16
   20f44:	str	r0, [fp, #-4]
   20f48:	str	r1, [sp, #8]
   20f4c:	ldr	r0, [fp, #-4]
   20f50:	str	r0, [sp, #4]
   20f54:	movw	r0, #0
   20f58:	str	r0, [sp]
   20f5c:	ldr	r1, [sp, #8]
   20f60:	ldr	r1, [r1, #4]
   20f64:	cmp	r1, r0
   20f68:	beq	20fc8 <__assert_fail@plt+0xfac4>
   20f6c:	ldr	r0, [sp, #8]
   20f70:	ldr	r0, [r0, #4]
   20f74:	ldr	r0, [r0, #24]
   20f78:	and	r0, r0, #255	; 0xff
   20f7c:	cmp	r0, #17
   20f80:	bne	20fc8 <__assert_fail@plt+0xfac4>
   20f84:	ldr	r1, [sp, #4]
   20f88:	ldr	r0, [sp, #8]
   20f8c:	ldr	r2, [r0, #4]
   20f90:	mov	r0, sp
   20f94:	bl	2173c <__assert_fail@plt+0x10238>
   20f98:	ldr	r1, [sp, #8]
   20f9c:	str	r0, [r1, #4]
   20fa0:	ldr	r0, [sp, #8]
   20fa4:	ldr	r0, [r0, #4]
   20fa8:	movw	r1, #0
   20fac:	cmp	r0, r1
   20fb0:	beq	20fc4 <__assert_fail@plt+0xfac0>
   20fb4:	ldr	r0, [sp, #8]
   20fb8:	ldr	r1, [sp, #8]
   20fbc:	ldr	r1, [r1, #4]
   20fc0:	str	r0, [r1]
   20fc4:	b	20fc8 <__assert_fail@plt+0xfac4>
   20fc8:	ldr	r0, [sp, #8]
   20fcc:	ldr	r0, [r0, #8]
   20fd0:	movw	r1, #0
   20fd4:	cmp	r0, r1
   20fd8:	beq	21038 <__assert_fail@plt+0xfb34>
   20fdc:	ldr	r0, [sp, #8]
   20fe0:	ldr	r0, [r0, #8]
   20fe4:	ldr	r0, [r0, #24]
   20fe8:	and	r0, r0, #255	; 0xff
   20fec:	cmp	r0, #17
   20ff0:	bne	21038 <__assert_fail@plt+0xfb34>
   20ff4:	ldr	r1, [sp, #4]
   20ff8:	ldr	r0, [sp, #8]
   20ffc:	ldr	r2, [r0, #8]
   21000:	mov	r0, sp
   21004:	bl	2173c <__assert_fail@plt+0x10238>
   21008:	ldr	r1, [sp, #8]
   2100c:	str	r0, [r1, #8]
   21010:	ldr	r0, [sp, #8]
   21014:	ldr	r0, [r0, #8]
   21018:	movw	r1, #0
   2101c:	cmp	r0, r1
   21020:	beq	21034 <__assert_fail@plt+0xfb30>
   21024:	ldr	r0, [sp, #8]
   21028:	ldr	r1, [sp, #8]
   2102c:	ldr	r1, [r1, #8]
   21030:	str	r0, [r1]
   21034:	b	21038 <__assert_fail@plt+0xfb34>
   21038:	ldr	r0, [sp]
   2103c:	mov	sp, fp
   21040:	pop	{fp, pc}
   21044:	push	{fp, lr}
   21048:	mov	fp, sp
   2104c:	sub	sp, sp, #24
   21050:	str	r0, [fp, #-8]
   21054:	str	r1, [sp, #12]
   21058:	ldr	r0, [fp, #-8]
   2105c:	str	r0, [sp, #8]
   21060:	ldr	r0, [sp, #12]
   21064:	ldr	r0, [r0, #24]
   21068:	and	r0, r0, #255	; 0xff
   2106c:	cmp	r0, #16
   21070:	bne	210a0 <__assert_fail@plt+0xfb9c>
   21074:	ldr	r0, [sp, #12]
   21078:	ldr	r0, [r0, #4]
   2107c:	ldr	r0, [r0, #12]
   21080:	ldr	r1, [sp, #12]
   21084:	str	r0, [r1, #12]
   21088:	ldr	r0, [sp, #12]
   2108c:	ldr	r0, [r0, #4]
   21090:	ldr	r0, [r0, #28]
   21094:	ldr	r1, [sp, #12]
   21098:	str	r0, [r1, #28]
   2109c:	b	2113c <__assert_fail@plt+0xfc38>
   210a0:	ldr	r0, [sp, #12]
   210a4:	str	r0, [r0, #12]
   210a8:	ldr	r0, [sp, #8]
   210ac:	ldr	r1, [sp, #12]
   210b0:	ldr	r2, [r1, #20]
   210b4:	ldr	r1, [r1, #24]
   210b8:	str	r1, [sp, #4]
   210bc:	mov	r1, r2
   210c0:	ldr	r2, [sp, #4]
   210c4:	bl	21964 <__assert_fail@plt+0x10460>
   210c8:	ldr	r1, [sp, #12]
   210cc:	str	r0, [r1, #28]
   210d0:	ldr	r0, [sp, #12]
   210d4:	ldr	r0, [r0, #28]
   210d8:	cmn	r0, #1
   210dc:	bne	210ec <__assert_fail@plt+0xfbe8>
   210e0:	movw	r0, #12
   210e4:	str	r0, [fp, #-4]
   210e8:	b	21144 <__assert_fail@plt+0xfc40>
   210ec:	ldr	r0, [sp, #12]
   210f0:	ldr	r0, [r0, #24]
   210f4:	and	r0, r0, #255	; 0xff
   210f8:	cmp	r0, #12
   210fc:	bne	21138 <__assert_fail@plt+0xfc34>
   21100:	ldr	r0, [pc, #72]	; 21150 <__assert_fail@plt+0xfc4c>
   21104:	ldr	r1, [sp, #12]
   21108:	ldr	r2, [r1, #20]
   2110c:	ldr	r1, [r1, #28]
   21110:	ldr	r3, [sp, #8]
   21114:	ldr	r3, [r3]
   21118:	add	r1, r3, r1, lsl #3
   2111c:	ldr	r3, [r1, #4]
   21120:	movw	ip, #1023	; 0x3ff
   21124:	and	r2, r2, ip
   21128:	lsl	r2, r2, #8
   2112c:	and	r0, r3, r0
   21130:	orr	r0, r0, r2
   21134:	str	r0, [r1, #4]
   21138:	b	2113c <__assert_fail@plt+0xfc38>
   2113c:	movw	r0, #0
   21140:	str	r0, [fp, #-4]
   21144:	ldr	r0, [fp, #-4]
   21148:	mov	sp, fp
   2114c:	pop	{fp, pc}
   21150:			; <UNDEFINED> instruction: 0xfffc00ff
   21154:	sub	sp, sp, #12
   21158:	str	r0, [sp, #8]
   2115c:	str	r1, [sp, #4]
   21160:	ldr	r0, [sp, #4]
   21164:	ldrb	r0, [r0, #24]
   21168:	mov	r1, r0
   2116c:	cmp	r0, #11
   21170:	str	r1, [sp]
   21174:	beq	2118c <__assert_fail@plt+0xfc88>
   21178:	b	2117c <__assert_fail@plt+0xfc78>
   2117c:	ldr	r0, [sp]
   21180:	cmp	r0, #16
   21184:	beq	211a0 <__assert_fail@plt+0xfc9c>
   21188:	b	211d0 <__assert_fail@plt+0xfccc>
   2118c:	ldr	r0, [sp, #4]
   21190:	ldr	r1, [sp, #4]
   21194:	ldr	r1, [r1, #4]
   21198:	str	r0, [r1, #16]
   2119c:	b	21224 <__assert_fail@plt+0xfd20>
   211a0:	ldr	r0, [sp, #4]
   211a4:	ldr	r0, [r0, #8]
   211a8:	ldr	r0, [r0, #12]
   211ac:	ldr	r1, [sp, #4]
   211b0:	ldr	r1, [r1, #4]
   211b4:	str	r0, [r1, #16]
   211b8:	ldr	r0, [sp, #4]
   211bc:	ldr	r0, [r0, #16]
   211c0:	ldr	r1, [sp, #4]
   211c4:	ldr	r1, [r1, #8]
   211c8:	str	r0, [r1, #16]
   211cc:	b	21224 <__assert_fail@plt+0xfd20>
   211d0:	ldr	r0, [sp, #4]
   211d4:	ldr	r0, [r0, #4]
   211d8:	movw	r1, #0
   211dc:	cmp	r0, r1
   211e0:	beq	211f8 <__assert_fail@plt+0xfcf4>
   211e4:	ldr	r0, [sp, #4]
   211e8:	ldr	r0, [r0, #16]
   211ec:	ldr	r1, [sp, #4]
   211f0:	ldr	r1, [r1, #4]
   211f4:	str	r0, [r1, #16]
   211f8:	ldr	r0, [sp, #4]
   211fc:	ldr	r0, [r0, #8]
   21200:	movw	r1, #0
   21204:	cmp	r0, r1
   21208:	beq	21220 <__assert_fail@plt+0xfd1c>
   2120c:	ldr	r0, [sp, #4]
   21210:	ldr	r0, [r0, #16]
   21214:	ldr	r1, [sp, #4]
   21218:	ldr	r1, [r1, #8]
   2121c:	str	r0, [r1, #16]
   21220:	b	21224 <__assert_fail@plt+0xfd20>
   21224:	movw	r0, #0
   21228:	add	sp, sp, #12
   2122c:	bx	lr
   21230:	push	{fp, lr}
   21234:	mov	fp, sp
   21238:	sub	sp, sp, #32
   2123c:	str	r0, [fp, #-4]
   21240:	str	r1, [fp, #-8]
   21244:	ldr	r0, [fp, #-4]
   21248:	str	r0, [fp, #-12]
   2124c:	ldr	r0, [fp, #-8]
   21250:	ldr	r0, [r0, #28]
   21254:	str	r0, [sp, #16]
   21258:	mov	r0, #0
   2125c:	str	r0, [sp, #12]
   21260:	ldr	r0, [fp, #-8]
   21264:	ldrb	r0, [r0, #24]
   21268:	sub	r0, r0, #2
   2126c:	cmp	r0, #14
   21270:	str	r0, [sp]
   21274:	bhi	21450 <__assert_fail@plt+0xff4c>
   21278:	add	r0, pc, #8
   2127c:	ldr	r1, [sp]
   21280:	ldr	r0, [r0, r1, lsl #2]
   21284:	mov	pc, r0
   21288:	andeq	r1, r2, r8, asr #5
   2128c:	andeq	r1, r2, r0, asr r4
   21290:	strdeq	r1, [r2], -r0
   21294:	andeq	r1, r2, r0, asr r4
   21298:	andeq	r1, r2, r0, asr r4
   2129c:	andeq	r1, r2, r0, asr r4
   212a0:	andeq	r1, r2, r0, asr #7
   212a4:	andeq	r1, r2, r0, asr #7
   212a8:	andeq	r1, r2, r4, ror #5
   212ac:	andeq	r1, r2, r4, ror #5
   212b0:	andeq	r1, r2, r0, asr #7
   212b4:	andeq	r1, r2, r0, asr r4
   212b8:	andeq	r1, r2, r0, asr r4
   212bc:	andeq	r1, r2, r0, asr r4
   212c0:	andeq	r1, r2, r4, asr #5
   212c4:	b	2148c <__assert_fail@plt+0xff88>
   212c8:	ldr	r0, [fp, #-8]
   212cc:	ldr	r0, [r0, #16]
   212d0:	movw	r1, #0
   212d4:	cmp	r0, r1
   212d8:	bne	212e0 <__assert_fail@plt+0xfddc>
   212dc:	b	212e0 <__assert_fail@plt+0xfddc>
   212e0:	b	2148c <__assert_fail@plt+0xff88>
   212e4:	ldr	r0, [fp, #-12]
   212e8:	ldrb	r1, [r0, #88]	; 0x58
   212ec:	bic	r1, r1, #1
   212f0:	movw	r2, #1
   212f4:	orr	r1, r1, r2
   212f8:	strb	r1, [r0, #88]	; 0x58
   212fc:	ldr	r0, [fp, #-8]
   21300:	ldr	r0, [r0, #4]
   21304:	movw	r1, #0
   21308:	cmp	r0, r1
   2130c:	beq	21328 <__assert_fail@plt+0xfe24>
   21310:	ldr	r0, [fp, #-8]
   21314:	ldr	r0, [r0, #4]
   21318:	ldr	r0, [r0, #12]
   2131c:	ldr	r0, [r0, #28]
   21320:	str	r0, [sp, #8]
   21324:	b	21338 <__assert_fail@plt+0xfe34>
   21328:	ldr	r0, [fp, #-8]
   2132c:	ldr	r0, [r0, #16]
   21330:	ldr	r0, [r0, #28]
   21334:	str	r0, [sp, #8]
   21338:	ldr	r0, [fp, #-8]
   2133c:	ldr	r0, [r0, #8]
   21340:	movw	r1, #0
   21344:	cmp	r0, r1
   21348:	beq	21364 <__assert_fail@plt+0xfe60>
   2134c:	ldr	r0, [fp, #-8]
   21350:	ldr	r0, [r0, #8]
   21354:	ldr	r0, [r0, #12]
   21358:	ldr	r0, [r0, #28]
   2135c:	str	r0, [sp, #4]
   21360:	b	21374 <__assert_fail@plt+0xfe70>
   21364:	ldr	r0, [fp, #-8]
   21368:	ldr	r0, [r0, #16]
   2136c:	ldr	r0, [r0, #28]
   21370:	str	r0, [sp, #4]
   21374:	ldr	r0, [sp, #8]
   21378:	cmn	r0, #1
   2137c:	ble	21384 <__assert_fail@plt+0xfe80>
   21380:	b	21384 <__assert_fail@plt+0xfe80>
   21384:	ldr	r0, [sp, #4]
   21388:	cmn	r0, #1
   2138c:	ble	21394 <__assert_fail@plt+0xfe90>
   21390:	b	21394 <__assert_fail@plt+0xfe90>
   21394:	ldr	r0, [fp, #-12]
   21398:	ldr	r0, [r0, #20]
   2139c:	ldr	r1, [sp, #16]
   213a0:	movw	r2, #12
   213a4:	mul	r1, r1, r2
   213a8:	add	r0, r0, r1
   213ac:	ldr	r1, [sp, #8]
   213b0:	ldr	r2, [sp, #4]
   213b4:	bl	21c80 <__assert_fail@plt+0x1077c>
   213b8:	str	r0, [sp, #12]
   213bc:	b	2148c <__assert_fail@plt+0xff88>
   213c0:	ldr	r0, [fp, #-12]
   213c4:	ldr	r0, [r0, #20]
   213c8:	ldr	r1, [sp, #16]
   213cc:	movw	r2, #12
   213d0:	mul	r1, r1, r2
   213d4:	add	r0, r0, r1
   213d8:	ldr	r1, [fp, #-8]
   213dc:	ldr	r1, [r1, #16]
   213e0:	ldr	r1, [r1, #28]
   213e4:	bl	21d7c <__assert_fail@plt+0x10878>
   213e8:	str	r0, [sp, #12]
   213ec:	b	2148c <__assert_fail@plt+0xff88>
   213f0:	ldr	r0, [fp, #-8]
   213f4:	ldr	r0, [r0, #16]
   213f8:	ldr	r0, [r0, #28]
   213fc:	ldr	r1, [fp, #-12]
   21400:	ldr	r1, [r1, #12]
   21404:	ldr	r2, [sp, #16]
   21408:	add	r1, r1, r2, lsl #2
   2140c:	str	r0, [r1]
   21410:	ldr	r0, [fp, #-8]
   21414:	ldr	r0, [r0, #24]
   21418:	and	r0, r0, #255	; 0xff
   2141c:	cmp	r0, #4
   21420:	bne	2144c <__assert_fail@plt+0xff48>
   21424:	ldr	r0, [fp, #-12]
   21428:	ldr	r1, [r0, #12]
   2142c:	ldr	r0, [r0, #20]
   21430:	ldr	r2, [sp, #16]
   21434:	add	r3, r2, r2, lsl #1
   21438:	add	r0, r0, r3, lsl #2
   2143c:	add	r1, r1, r2, lsl #2
   21440:	ldr	r1, [r1]
   21444:	bl	21d7c <__assert_fail@plt+0x10878>
   21448:	str	r0, [sp, #12]
   2144c:	b	2148c <__assert_fail@plt+0xff88>
   21450:	ldr	r0, [fp, #-8]
   21454:	ldr	r0, [r0, #24]
   21458:	and	r0, r0, #255	; 0xff
   2145c:	and	r0, r0, #8
   21460:	cmp	r0, #0
   21464:	bne	2146c <__assert_fail@plt+0xff68>
   21468:	b	2146c <__assert_fail@plt+0xff68>
   2146c:	ldr	r0, [fp, #-8]
   21470:	ldr	r0, [r0, #16]
   21474:	ldr	r0, [r0, #28]
   21478:	ldr	r1, [fp, #-12]
   2147c:	ldr	r1, [r1, #12]
   21480:	ldr	r2, [sp, #16]
   21484:	add	r1, r1, r2, lsl #2
   21488:	str	r0, [r1]
   2148c:	ldr	r0, [sp, #12]
   21490:	mov	sp, fp
   21494:	pop	{fp, pc}
   21498:	push	{fp, lr}
   2149c:	mov	fp, sp
   214a0:	sub	sp, sp, #32
   214a4:	str	r0, [fp, #-8]
   214a8:	ldr	r0, [fp, #-8]
   214ac:	ldr	r0, [r0, #8]
   214b0:	cmp	r0, #0
   214b4:	bls	214bc <__assert_fail@plt+0xffb8>
   214b8:	b	214bc <__assert_fail@plt+0xffb8>
   214bc:	movw	r0, #0
   214c0:	strb	r0, [fp, #-13]
   214c4:	movw	r0, #0
   214c8:	str	r0, [fp, #-12]
   214cc:	ldr	r0, [fp, #-12]
   214d0:	ldr	r1, [fp, #-8]
   214d4:	ldr	r1, [r1, #8]
   214d8:	cmp	r0, r1
   214dc:	bne	21500 <__assert_fail@plt+0xfffc>
   214e0:	ldrb	r0, [fp, #-13]
   214e4:	tst	r0, #1
   214e8:	bne	214f0 <__assert_fail@plt+0xffec>
   214ec:	b	215cc <__assert_fail@plt+0x100c8>
   214f0:	movw	r0, #0
   214f4:	strb	r0, [fp, #-13]
   214f8:	movw	r0, #0
   214fc:	str	r0, [fp, #-12]
   21500:	ldr	r0, [fp, #-8]
   21504:	ldr	r0, [r0, #24]
   21508:	ldr	r1, [fp, #-12]
   2150c:	movw	r2, #12
   21510:	mul	r1, r1, r2
   21514:	add	r0, r0, r1
   21518:	ldr	r0, [r0, #4]
   2151c:	cmn	r0, #1
   21520:	beq	21528 <__assert_fail@plt+0x10024>
   21524:	b	21528 <__assert_fail@plt+0x10024>
   21528:	ldr	r0, [fp, #-8]
   2152c:	ldr	r0, [r0, #24]
   21530:	ldr	r1, [fp, #-12]
   21534:	movw	r2, #12
   21538:	mul	r1, r1, r2
   2153c:	add	r0, r0, r1
   21540:	ldr	r0, [r0, #4]
   21544:	cmp	r0, #0
   21548:	beq	21550 <__assert_fail@plt+0x1004c>
   2154c:	b	215bc <__assert_fail@plt+0x100b8>
   21550:	ldr	r1, [fp, #-8]
   21554:	ldr	r2, [fp, #-12]
   21558:	mov	r0, sp
   2155c:	movw	r3, #1
   21560:	and	r3, r3, #1
   21564:	bl	21e0c <__assert_fail@plt+0x10908>
   21568:	str	r0, [sp, #12]
   2156c:	ldr	r0, [sp, #12]
   21570:	cmp	r0, #0
   21574:	beq	21584 <__assert_fail@plt+0x10080>
   21578:	ldr	r0, [sp, #12]
   2157c:	str	r0, [fp, #-4]
   21580:	b	215d4 <__assert_fail@plt+0x100d0>
   21584:	ldr	r0, [fp, #-8]
   21588:	ldr	r0, [r0, #24]
   2158c:	ldr	r1, [fp, #-12]
   21590:	movw	r2, #12
   21594:	mul	r1, r1, r2
   21598:	add	r0, r0, r1
   2159c:	ldr	r0, [r0, #4]
   215a0:	cmp	r0, #0
   215a4:	bne	215b8 <__assert_fail@plt+0x100b4>
   215a8:	movw	r0, #1
   215ac:	strb	r0, [fp, #-13]
   215b0:	ldr	r0, [sp, #8]
   215b4:	bl	34c20 <__assert_fail@plt+0x2371c>
   215b8:	b	215bc <__assert_fail@plt+0x100b8>
   215bc:	ldr	r0, [fp, #-12]
   215c0:	add	r0, r0, #1
   215c4:	str	r0, [fp, #-12]
   215c8:	b	214cc <__assert_fail@plt+0xffc8>
   215cc:	movw	r0, #0
   215d0:	str	r0, [fp, #-4]
   215d4:	ldr	r0, [fp, #-4]
   215d8:	mov	sp, fp
   215dc:	pop	{fp, pc}
   215e0:	push	{fp, lr}
   215e4:	mov	fp, sp
   215e8:	sub	sp, sp, #24
   215ec:	str	r0, [fp, #-8]
   215f0:	movw	r0, #0
   215f4:	str	r0, [sp, #8]
   215f8:	ldr	r0, [sp, #8]
   215fc:	ldr	r1, [fp, #-8]
   21600:	ldr	r1, [r1, #8]
   21604:	cmp	r0, r1
   21608:	bcs	21640 <__assert_fail@plt+0x1013c>
   2160c:	ldr	r0, [fp, #-8]
   21610:	ldr	r0, [r0, #28]
   21614:	ldr	r1, [sp, #8]
   21618:	movw	r2, #12
   2161c:	mul	r1, r1, r2
   21620:	add	r0, r0, r1
   21624:	movw	r1, #0
   21628:	and	r1, r1, #255	; 0xff
   2162c:	bl	11420 <memset@plt>
   21630:	ldr	r0, [sp, #8]
   21634:	add	r0, r0, #1
   21638:	str	r0, [sp, #8]
   2163c:	b	215f8 <__assert_fail@plt+0x100f4>
   21640:	movw	r0, #0
   21644:	str	r0, [sp, #12]
   21648:	ldr	r0, [sp, #12]
   2164c:	ldr	r1, [fp, #-8]
   21650:	ldr	r1, [r1, #8]
   21654:	cmp	r0, r1
   21658:	bcs	21728 <__assert_fail@plt+0x10224>
   2165c:	ldr	r0, [fp, #-8]
   21660:	ldr	r0, [r0, #24]
   21664:	ldr	r1, [sp, #12]
   21668:	movw	r2, #12
   2166c:	mul	r1, r1, r2
   21670:	add	r0, r0, r1
   21674:	ldr	r0, [r0, #8]
   21678:	str	r0, [sp]
   2167c:	movw	r0, #0
   21680:	str	r0, [sp, #8]
   21684:	ldr	r0, [sp, #8]
   21688:	ldr	r1, [fp, #-8]
   2168c:	ldr	r1, [r1, #24]
   21690:	ldr	r2, [sp, #12]
   21694:	movw	r3, #12
   21698:	mul	r2, r2, r3
   2169c:	add	r1, r1, r2
   216a0:	ldr	r1, [r1, #4]
   216a4:	cmp	r0, r1
   216a8:	bge	21714 <__assert_fail@plt+0x10210>
   216ac:	ldr	r0, [fp, #-8]
   216b0:	ldr	r0, [r0, #28]
   216b4:	ldr	r1, [sp]
   216b8:	ldr	r2, [sp, #8]
   216bc:	add	r1, r1, r2, lsl #2
   216c0:	ldr	r1, [r1]
   216c4:	movw	r2, #12
   216c8:	mul	r1, r1, r2
   216cc:	add	r0, r0, r1
   216d0:	ldr	r1, [sp, #12]
   216d4:	bl	22f70 <__assert_fail@plt+0x11a6c>
   216d8:	and	r0, r0, #1
   216dc:	strb	r0, [sp, #7]
   216e0:	ldrb	r0, [sp, #7]
   216e4:	mvn	r1, #0
   216e8:	eor	r0, r0, r1
   216ec:	tst	r0, #1
   216f0:	beq	21700 <__assert_fail@plt+0x101fc>
   216f4:	movw	r0, #12
   216f8:	str	r0, [fp, #-4]
   216fc:	b	21730 <__assert_fail@plt+0x1022c>
   21700:	b	21704 <__assert_fail@plt+0x10200>
   21704:	ldr	r0, [sp, #8]
   21708:	add	r0, r0, #1
   2170c:	str	r0, [sp, #8]
   21710:	b	21684 <__assert_fail@plt+0x10180>
   21714:	b	21718 <__assert_fail@plt+0x10214>
   21718:	ldr	r0, [sp, #12]
   2171c:	add	r0, r0, #1
   21720:	str	r0, [sp, #12]
   21724:	b	21648 <__assert_fail@plt+0x10144>
   21728:	movw	r0, #0
   2172c:	str	r0, [fp, #-4]
   21730:	ldr	r0, [fp, #-4]
   21734:	mov	sp, fp
   21738:	pop	{fp, pc}
   2173c:	push	{fp, lr}
   21740:	mov	fp, sp
   21744:	sub	sp, sp, #56	; 0x38
   21748:	str	r0, [fp, #-8]
   2174c:	str	r1, [fp, #-12]
   21750:	str	r2, [fp, #-16]
   21754:	ldr	r0, [fp, #-12]
   21758:	ldr	r0, [r0]
   2175c:	str	r0, [fp, #-20]	; 0xffffffec
   21760:	ldr	r0, [fp, #-16]
   21764:	ldr	r0, [r0, #4]
   21768:	str	r0, [fp, #-24]	; 0xffffffe8
   2176c:	ldr	r0, [fp, #-12]
   21770:	ldrb	r0, [r0, #28]
   21774:	ubfx	r0, r0, #4, #1
   21778:	and	r0, r0, #255	; 0xff
   2177c:	cmp	r0, #0
   21780:	beq	217dc <__assert_fail@plt+0x102d8>
   21784:	ldr	r0, [fp, #-16]
   21788:	ldr	r0, [r0, #4]
   2178c:	movw	r1, #0
   21790:	cmp	r0, r1
   21794:	beq	217dc <__assert_fail@plt+0x102d8>
   21798:	ldr	r0, [fp, #-16]
   2179c:	ldr	r0, [r0, #20]
   217a0:	cmp	r0, #32
   217a4:	bge	217cc <__assert_fail@plt+0x102c8>
   217a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   217ac:	ldr	r0, [r0, #80]	; 0x50
   217b0:	ldr	r1, [fp, #-16]
   217b4:	ldr	r1, [r1, #20]
   217b8:	movw	r2, #1
   217bc:	lsl	r1, r2, r1
   217c0:	and	r0, r0, r1
   217c4:	cmp	r0, #0
   217c8:	bne	217dc <__assert_fail@plt+0x102d8>
   217cc:	ldr	r0, [fp, #-16]
   217d0:	ldr	r0, [r0, #4]
   217d4:	str	r0, [fp, #-4]
   217d8:	b	21958 <__assert_fail@plt+0x10454>
   217dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   217e0:	movw	r1, #0
   217e4:	str	r1, [sp, #12]
   217e8:	ldr	r2, [sp, #12]
   217ec:	movw	r3, #8
   217f0:	bl	1b530 <__assert_fail@plt+0xa02c>
   217f4:	str	r0, [sp, #28]
   217f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   217fc:	movw	r1, #0
   21800:	str	r1, [sp, #8]
   21804:	ldr	r2, [sp, #8]
   21808:	movw	r3, #9
   2180c:	bl	1b530 <__assert_fail@plt+0xa02c>
   21810:	str	r0, [sp, #24]
   21814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21818:	movw	r1, #0
   2181c:	cmp	r0, r1
   21820:	beq	21840 <__assert_fail@plt+0x1033c>
   21824:	ldr	r0, [fp, #-20]	; 0xffffffec
   21828:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2182c:	ldr	r2, [sp, #24]
   21830:	movw	r3, #16
   21834:	bl	1b530 <__assert_fail@plt+0xa02c>
   21838:	str	r0, [sp, #4]
   2183c:	b	21848 <__assert_fail@plt+0x10344>
   21840:	ldr	r0, [sp, #24]
   21844:	str	r0, [sp, #4]
   21848:	ldr	r0, [sp, #4]
   2184c:	str	r0, [sp, #20]
   21850:	ldr	r0, [fp, #-20]	; 0xffffffec
   21854:	ldr	r1, [sp, #28]
   21858:	ldr	r2, [sp, #20]
   2185c:	movw	r3, #16
   21860:	bl	1b530 <__assert_fail@plt+0xa02c>
   21864:	str	r0, [sp, #16]
   21868:	ldr	r0, [sp, #16]
   2186c:	movw	r1, #0
   21870:	cmp	r0, r1
   21874:	movw	r0, #1
   21878:	str	r0, [sp]
   2187c:	beq	218c8 <__assert_fail@plt+0x103c4>
   21880:	ldr	r0, [sp, #20]
   21884:	movw	r1, #0
   21888:	cmp	r0, r1
   2188c:	movw	r0, #1
   21890:	str	r0, [sp]
   21894:	beq	218c8 <__assert_fail@plt+0x103c4>
   21898:	ldr	r0, [sp, #28]
   2189c:	movw	r1, #0
   218a0:	cmp	r0, r1
   218a4:	movw	r0, #1
   218a8:	str	r0, [sp]
   218ac:	beq	218c8 <__assert_fail@plt+0x103c4>
   218b0:	ldr	r0, [sp, #24]
   218b4:	movw	r1, #0
   218b8:	cmp	r0, r1
   218bc:	movw	r0, #0
   218c0:	moveq	r0, #1
   218c4:	str	r0, [sp]
   218c8:	ldr	r0, [sp]
   218cc:	tst	r0, #1
   218d0:	beq	218ec <__assert_fail@plt+0x103e8>
   218d4:	ldr	r0, [fp, #-8]
   218d8:	movw	r1, #12
   218dc:	str	r1, [r0]
   218e0:	movw	r0, #0
   218e4:	str	r0, [fp, #-4]
   218e8:	b	21958 <__assert_fail@plt+0x10454>
   218ec:	ldr	r0, [fp, #-16]
   218f0:	ldr	r0, [r0, #20]
   218f4:	ldr	r1, [sp, #24]
   218f8:	str	r0, [r1, #20]
   218fc:	ldr	r1, [sp, #28]
   21900:	str	r0, [r1, #20]
   21904:	ldr	r0, [fp, #-16]
   21908:	ldr	r0, [r0, #24]
   2190c:	lsr	r0, r0, #19
   21910:	and	r0, r0, #1
   21914:	ldr	r1, [sp, #24]
   21918:	ldr	r2, [r1, #24]
   2191c:	and	r0, r0, #1
   21920:	lsl	r3, r0, #19
   21924:	mvn	ip, #524288	; 0x80000
   21928:	and	r2, r2, ip
   2192c:	orr	r2, r2, r3
   21930:	str	r2, [r1, #24]
   21934:	ldr	r1, [sp, #28]
   21938:	ldr	r2, [r1, #24]
   2193c:	and	r0, r0, #1
   21940:	lsl	r0, r0, #19
   21944:	and	r2, r2, ip
   21948:	orr	r0, r2, r0
   2194c:	str	r0, [r1, #24]
   21950:	ldr	r0, [sp, #16]
   21954:	str	r0, [fp, #-4]
   21958:	ldr	r0, [fp, #-4]
   2195c:	mov	sp, fp
   21960:	pop	{fp, pc}
   21964:	push	{fp, lr}
   21968:	mov	fp, sp
   2196c:	sub	sp, sp, #64	; 0x40
   21970:	str	r1, [fp, #-12]
   21974:	str	r2, [fp, #-8]
   21978:	str	r0, [fp, #-16]
   2197c:	ldr	r0, [fp, #-16]
   21980:	ldr	r0, [r0, #8]
   21984:	ldr	r1, [fp, #-16]
   21988:	ldr	r1, [r1, #4]
   2198c:	cmp	r0, r1
   21990:	bcc	21b44 <__assert_fail@plt+0x10640>
   21994:	ldr	r0, [pc, #732]	; 21c78 <__assert_fail@plt+0x10774>
   21998:	ldr	r1, [fp, #-16]
   2199c:	ldr	r1, [r1, #4]
   219a0:	lsl	r1, r1, #1
   219a4:	str	r1, [fp, #-20]	; 0xffffffec
   219a8:	movw	r1, #12
   219ac:	str	r1, [sp, #20]
   219b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   219b4:	cmp	r0, r1
   219b8:	bcs	219c8 <__assert_fail@plt+0x104c4>
   219bc:	mvn	r0, #0
   219c0:	str	r0, [fp, #-4]
   219c4:	b	21c6c <__assert_fail@plt+0x10768>
   219c8:	ldr	r0, [fp, #-16]
   219cc:	ldr	r0, [r0]
   219d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   219d4:	lsl	r1, r1, #3
   219d8:	bl	335bc <__assert_fail@plt+0x220b8>
   219dc:	str	r0, [sp, #24]
   219e0:	ldr	r0, [sp, #24]
   219e4:	movw	r1, #0
   219e8:	cmp	r0, r1
   219ec:	bne	219fc <__assert_fail@plt+0x104f8>
   219f0:	mvn	r0, #0
   219f4:	str	r0, [fp, #-4]
   219f8:	b	21c6c <__assert_fail@plt+0x10768>
   219fc:	ldr	r0, [sp, #24]
   21a00:	ldr	r1, [fp, #-16]
   21a04:	str	r0, [r1]
   21a08:	ldr	r0, [fp, #-16]
   21a0c:	ldr	r0, [r0, #12]
   21a10:	ldr	r1, [fp, #-20]	; 0xffffffec
   21a14:	lsl	r1, r1, #2
   21a18:	bl	335bc <__assert_fail@plt+0x220b8>
   21a1c:	str	r0, [fp, #-24]	; 0xffffffe8
   21a20:	ldr	r0, [fp, #-16]
   21a24:	ldr	r0, [r0, #16]
   21a28:	ldr	r1, [fp, #-20]	; 0xffffffec
   21a2c:	lsl	r1, r1, #2
   21a30:	bl	335bc <__assert_fail@plt+0x220b8>
   21a34:	str	r0, [fp, #-28]	; 0xffffffe4
   21a38:	ldr	r0, [fp, #-16]
   21a3c:	ldr	r0, [r0, #20]
   21a40:	ldr	r1, [fp, #-20]	; 0xffffffec
   21a44:	movw	r2, #12
   21a48:	mul	r1, r1, r2
   21a4c:	bl	335bc <__assert_fail@plt+0x220b8>
   21a50:	str	r0, [sp, #32]
   21a54:	ldr	r0, [fp, #-16]
   21a58:	ldr	r0, [r0, #24]
   21a5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   21a60:	movw	r2, #12
   21a64:	mul	r1, r1, r2
   21a68:	bl	335bc <__assert_fail@plt+0x220b8>
   21a6c:	str	r0, [sp, #28]
   21a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21a74:	movw	r1, #0
   21a78:	cmp	r0, r1
   21a7c:	movw	r0, #1
   21a80:	str	r0, [sp, #16]
   21a84:	beq	21ad0 <__assert_fail@plt+0x105cc>
   21a88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21a8c:	movw	r1, #0
   21a90:	cmp	r0, r1
   21a94:	movw	r0, #1
   21a98:	str	r0, [sp, #16]
   21a9c:	beq	21ad0 <__assert_fail@plt+0x105cc>
   21aa0:	ldr	r0, [sp, #32]
   21aa4:	movw	r1, #0
   21aa8:	cmp	r0, r1
   21aac:	movw	r0, #1
   21ab0:	str	r0, [sp, #16]
   21ab4:	beq	21ad0 <__assert_fail@plt+0x105cc>
   21ab8:	ldr	r0, [sp, #28]
   21abc:	movw	r1, #0
   21ac0:	cmp	r0, r1
   21ac4:	movw	r0, #0
   21ac8:	moveq	r0, #1
   21acc:	str	r0, [sp, #16]
   21ad0:	ldr	r0, [sp, #16]
   21ad4:	tst	r0, #1
   21ad8:	beq	21b08 <__assert_fail@plt+0x10604>
   21adc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ae0:	bl	34c20 <__assert_fail@plt+0x2371c>
   21ae4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21ae8:	bl	34c20 <__assert_fail@plt+0x2371c>
   21aec:	ldr	r0, [sp, #32]
   21af0:	bl	34c20 <__assert_fail@plt+0x2371c>
   21af4:	ldr	r0, [sp, #28]
   21af8:	bl	34c20 <__assert_fail@plt+0x2371c>
   21afc:	mvn	r0, #0
   21b00:	str	r0, [fp, #-4]
   21b04:	b	21c6c <__assert_fail@plt+0x10768>
   21b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21b0c:	ldr	r1, [fp, #-16]
   21b10:	str	r0, [r1, #12]
   21b14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21b18:	ldr	r1, [fp, #-16]
   21b1c:	str	r0, [r1, #16]
   21b20:	ldr	r0, [sp, #32]
   21b24:	ldr	r1, [fp, #-16]
   21b28:	str	r0, [r1, #20]
   21b2c:	ldr	r0, [sp, #28]
   21b30:	ldr	r1, [fp, #-16]
   21b34:	str	r0, [r1, #24]
   21b38:	ldr	r0, [fp, #-20]	; 0xffffffec
   21b3c:	ldr	r1, [fp, #-16]
   21b40:	str	r0, [r1, #4]
   21b44:	ldr	r0, [pc, #304]	; 21c7c <__assert_fail@plt+0x10778>
   21b48:	ldr	r1, [fp, #-16]
   21b4c:	ldr	r2, [r1]
   21b50:	ldr	r1, [r1, #8]
   21b54:	add	r1, r2, r1, lsl #3
   21b58:	vldr	d16, [fp, #-12]
   21b5c:	vstr	d16, [r1]
   21b60:	ldr	r1, [fp, #-16]
   21b64:	ldr	r2, [r1]
   21b68:	ldr	r1, [r1, #8]
   21b6c:	add	r1, r2, r1, lsl #3
   21b70:	ldr	r2, [r1, #4]
   21b74:	and	r0, r2, r0
   21b78:	str	r0, [r1, #4]
   21b7c:	ldr	r0, [fp, #-8]
   21b80:	and	r0, r0, #255	; 0xff
   21b84:	cmp	r0, #5
   21b88:	bne	21ba4 <__assert_fail@plt+0x106a0>
   21b8c:	ldr	r0, [fp, #-16]
   21b90:	ldr	r0, [r0, #92]	; 0x5c
   21b94:	cmp	r0, #1
   21b98:	movw	r0, #1
   21b9c:	str	r0, [sp, #12]
   21ba0:	bgt	21bbc <__assert_fail@plt+0x106b8>
   21ba4:	ldr	r0, [fp, #-8]
   21ba8:	and	r0, r0, #255	; 0xff
   21bac:	cmp	r0, #6
   21bb0:	movw	r0, #0
   21bb4:	moveq	r0, #1
   21bb8:	str	r0, [sp, #12]
   21bbc:	ldr	r0, [sp, #12]
   21bc0:	and	r0, r0, #1
   21bc4:	ldr	r1, [fp, #-16]
   21bc8:	ldr	r2, [r1]
   21bcc:	ldr	r1, [r1, #8]
   21bd0:	add	r1, r2, r1, lsl #3
   21bd4:	ldr	r2, [r1, #4]
   21bd8:	bic	r2, r2, #1048576	; 0x100000
   21bdc:	orr	r0, r2, r0, lsl #20
   21be0:	str	r0, [r1, #4]
   21be4:	ldr	r0, [fp, #-16]
   21be8:	ldr	r1, [r0, #8]
   21bec:	ldr	r0, [r0, #12]
   21bf0:	add	r0, r0, r1, lsl #2
   21bf4:	mvn	r1, #0
   21bf8:	str	r1, [r0]
   21bfc:	ldr	r0, [fp, #-16]
   21c00:	ldr	r0, [r0, #20]
   21c04:	ldr	r1, [fp, #-16]
   21c08:	ldr	r1, [r1, #8]
   21c0c:	movw	r2, #12
   21c10:	mul	r1, r1, r2
   21c14:	add	r0, r0, r1
   21c18:	movw	r1, #0
   21c1c:	and	r3, r1, #255	; 0xff
   21c20:	str	r1, [sp, #8]
   21c24:	mov	r1, r3
   21c28:	str	r2, [sp, #4]
   21c2c:	bl	11420 <memset@plt>
   21c30:	ldr	r0, [fp, #-16]
   21c34:	ldr	r0, [r0, #24]
   21c38:	ldr	r1, [fp, #-16]
   21c3c:	ldr	r1, [r1, #8]
   21c40:	ldr	r2, [sp, #4]
   21c44:	mul	r1, r1, r2
   21c48:	add	r0, r0, r1
   21c4c:	ldr	r1, [sp, #8]
   21c50:	and	r1, r1, #255	; 0xff
   21c54:	bl	11420 <memset@plt>
   21c58:	ldr	r0, [fp, #-16]
   21c5c:	ldr	r1, [r0, #8]
   21c60:	add	r2, r1, #1
   21c64:	str	r2, [r0, #8]
   21c68:	str	r1, [fp, #-4]
   21c6c:	ldr	r0, [fp, #-4]
   21c70:	mov	sp, fp
   21c74:	pop	{fp, pc}
   21c78:	ldrbne	r5, [r5, #-1365]	; 0xfffffaab
   21c7c:			; <UNDEFINED> instruction: 0xfffc00ff
   21c80:	push	{fp, lr}
   21c84:	mov	fp, sp
   21c88:	sub	sp, sp, #16
   21c8c:	str	r0, [sp, #8]
   21c90:	str	r1, [sp, #4]
   21c94:	str	r2, [sp]
   21c98:	ldr	r0, [sp, #8]
   21c9c:	movw	r1, #2
   21ca0:	str	r1, [r0]
   21ca4:	movw	r0, #8
   21ca8:	bl	3354c <__assert_fail@plt+0x22048>
   21cac:	ldr	r1, [sp, #8]
   21cb0:	str	r0, [r1, #8]
   21cb4:	ldr	r0, [sp, #8]
   21cb8:	ldr	r0, [r0, #8]
   21cbc:	movw	r1, #0
   21cc0:	cmp	r0, r1
   21cc4:	bne	21cd4 <__assert_fail@plt+0x107d0>
   21cc8:	movw	r0, #12
   21ccc:	str	r0, [fp, #-4]
   21cd0:	b	21d70 <__assert_fail@plt+0x1086c>
   21cd4:	ldr	r0, [sp, #4]
   21cd8:	ldr	r1, [sp]
   21cdc:	cmp	r0, r1
   21ce0:	bne	21d04 <__assert_fail@plt+0x10800>
   21ce4:	ldr	r0, [sp, #8]
   21ce8:	movw	r1, #1
   21cec:	str	r1, [r0, #4]
   21cf0:	ldr	r0, [sp, #4]
   21cf4:	ldr	r1, [sp, #8]
   21cf8:	ldr	r1, [r1, #8]
   21cfc:	str	r0, [r1]
   21d00:	b	21d68 <__assert_fail@plt+0x10864>
   21d04:	ldr	r0, [sp, #8]
   21d08:	movw	r1, #2
   21d0c:	str	r1, [r0, #4]
   21d10:	ldr	r0, [sp, #4]
   21d14:	ldr	r1, [sp]
   21d18:	cmp	r0, r1
   21d1c:	bge	21d44 <__assert_fail@plt+0x10840>
   21d20:	ldr	r0, [sp, #4]
   21d24:	ldr	r1, [sp, #8]
   21d28:	ldr	r1, [r1, #8]
   21d2c:	str	r0, [r1]
   21d30:	ldr	r0, [sp]
   21d34:	ldr	r1, [sp, #8]
   21d38:	ldr	r1, [r1, #8]
   21d3c:	str	r0, [r1, #4]
   21d40:	b	21d64 <__assert_fail@plt+0x10860>
   21d44:	ldr	r0, [sp]
   21d48:	ldr	r1, [sp, #8]
   21d4c:	ldr	r1, [r1, #8]
   21d50:	str	r0, [r1]
   21d54:	ldr	r0, [sp, #4]
   21d58:	ldr	r1, [sp, #8]
   21d5c:	ldr	r1, [r1, #8]
   21d60:	str	r0, [r1, #4]
   21d64:	b	21d68 <__assert_fail@plt+0x10864>
   21d68:	movw	r0, #0
   21d6c:	str	r0, [fp, #-4]
   21d70:	ldr	r0, [fp, #-4]
   21d74:	mov	sp, fp
   21d78:	pop	{fp, pc}
   21d7c:	push	{fp, lr}
   21d80:	mov	fp, sp
   21d84:	sub	sp, sp, #16
   21d88:	str	r0, [sp, #8]
   21d8c:	str	r1, [sp, #4]
   21d90:	ldr	r0, [sp, #8]
   21d94:	movw	r1, #1
   21d98:	str	r1, [r0]
   21d9c:	ldr	r0, [sp, #8]
   21da0:	str	r1, [r0, #4]
   21da4:	movw	r0, #4
   21da8:	bl	3354c <__assert_fail@plt+0x22048>
   21dac:	ldr	r1, [sp, #8]
   21db0:	str	r0, [r1, #8]
   21db4:	ldr	r0, [sp, #8]
   21db8:	ldr	r0, [r0, #8]
   21dbc:	movw	r1, #0
   21dc0:	cmp	r0, r1
   21dc4:	bne	21de8 <__assert_fail@plt+0x108e4>
   21dc8:	ldr	r0, [sp, #8]
   21dcc:	movw	r1, #0
   21dd0:	str	r1, [r0, #4]
   21dd4:	ldr	r0, [sp, #8]
   21dd8:	str	r1, [r0]
   21ddc:	movw	r0, #12
   21de0:	str	r0, [fp, #-4]
   21de4:	b	21e00 <__assert_fail@plt+0x108fc>
   21de8:	ldr	r0, [sp, #4]
   21dec:	ldr	r1, [sp, #8]
   21df0:	ldr	r1, [r1, #8]
   21df4:	str	r0, [r1]
   21df8:	movw	r0, #0
   21dfc:	str	r0, [fp, #-4]
   21e00:	ldr	r0, [fp, #-4]
   21e04:	mov	sp, fp
   21e08:	pop	{fp, pc}
   21e0c:	push	{fp, lr}
   21e10:	mov	fp, sp
   21e14:	sub	sp, sp, #72	; 0x48
   21e18:	str	r0, [fp, #-8]
   21e1c:	str	r1, [fp, #-12]
   21e20:	str	r2, [fp, #-16]
   21e24:	and	r0, r3, #1
   21e28:	strb	r0, [fp, #-17]	; 0xffffffef
   21e2c:	movw	r0, #0
   21e30:	strb	r0, [sp, #31]
   21e34:	ldr	r0, [fp, #-12]
   21e38:	ldr	r0, [r0, #20]
   21e3c:	ldr	r1, [fp, #-16]
   21e40:	movw	r2, #12
   21e44:	mul	r1, r1, r2
   21e48:	add	r0, r0, r1
   21e4c:	ldr	r0, [r0, #4]
   21e50:	add	r1, r0, #1
   21e54:	add	r0, sp, #32
   21e58:	bl	221e0 <__assert_fail@plt+0x10cdc>
   21e5c:	str	r0, [fp, #-24]	; 0xffffffe8
   21e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21e64:	cmp	r0, #0
   21e68:	beq	21e78 <__assert_fail@plt+0x10974>
   21e6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21e70:	str	r0, [fp, #-4]
   21e74:	b	221d4 <__assert_fail@plt+0x10cd0>
   21e78:	ldr	r0, [fp, #-16]
   21e7c:	ldr	r1, [sp, #36]	; 0x24
   21e80:	ldr	r2, [sp, #40]	; 0x28
   21e84:	add	r3, r1, #1
   21e88:	str	r3, [sp, #36]	; 0x24
   21e8c:	str	r0, [r2, r1, lsl #2]
   21e90:	ldr	r0, [fp, #-12]
   21e94:	ldr	r0, [r0, #24]
   21e98:	ldr	r1, [fp, #-16]
   21e9c:	add	r1, r1, r1, lsl #1
   21ea0:	add	r0, r0, r1, lsl #2
   21ea4:	mvn	r1, #0
   21ea8:	str	r1, [r0, #4]
   21eac:	ldr	r0, [fp, #-12]
   21eb0:	ldr	r0, [r0]
   21eb4:	ldr	r1, [fp, #-16]
   21eb8:	add	r0, r0, r1, lsl #3
   21ebc:	ldr	r0, [r0, #4]
   21ec0:	lsr	r0, r0, #8
   21ec4:	movw	r1, #1023	; 0x3ff
   21ec8:	and	r0, r0, r1
   21ecc:	cmp	r0, #0
   21ed0:	beq	21f98 <__assert_fail@plt+0x10a94>
   21ed4:	ldr	r0, [fp, #-12]
   21ed8:	ldr	r0, [r0, #20]
   21edc:	ldr	r1, [fp, #-16]
   21ee0:	movw	r2, #12
   21ee4:	mul	r1, r1, r2
   21ee8:	add	r0, r0, r1
   21eec:	ldr	r0, [r0, #4]
   21ef0:	cmp	r0, #0
   21ef4:	beq	21f98 <__assert_fail@plt+0x10a94>
   21ef8:	ldr	r0, [fp, #-12]
   21efc:	ldr	r1, [r0]
   21f00:	ldr	r0, [r0, #20]
   21f04:	ldr	r2, [fp, #-16]
   21f08:	add	r2, r2, r2, lsl #1
   21f0c:	add	r0, r0, r2, lsl #2
   21f10:	ldr	r0, [r0, #8]
   21f14:	ldr	r0, [r0]
   21f18:	add	r0, r1, r0, lsl #3
   21f1c:	ldr	r0, [r0, #4]
   21f20:	lsr	r0, r0, #18
   21f24:	and	r0, r0, #1
   21f28:	cmp	r0, #0
   21f2c:	bne	21f98 <__assert_fail@plt+0x10a94>
   21f30:	ldr	r0, [fp, #-12]
   21f34:	ldr	r1, [fp, #-16]
   21f38:	mov	r2, r1
   21f3c:	mov	r3, r1
   21f40:	mov	ip, r1
   21f44:	ldr	lr, [r0]
   21f48:	add	r1, lr, r1, lsl #3
   21f4c:	ldr	r1, [r1, #4]
   21f50:	lsr	r1, r1, #8
   21f54:	movw	lr, #1023	; 0x3ff
   21f58:	and	r1, r1, lr
   21f5c:	str	r1, [sp, #8]
   21f60:	mov	r1, r2
   21f64:	mov	r2, r3
   21f68:	mov	r3, ip
   21f6c:	ldr	ip, [sp, #8]
   21f70:	str	ip, [sp]
   21f74:	bl	22254 <__assert_fail@plt+0x10d50>
   21f78:	str	r0, [fp, #-24]	; 0xffffffe8
   21f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f80:	cmp	r0, #0
   21f84:	beq	21f94 <__assert_fail@plt+0x10a90>
   21f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f8c:	str	r0, [fp, #-4]
   21f90:	b	221d4 <__assert_fail@plt+0x10cd0>
   21f94:	b	21f98 <__assert_fail@plt+0x10a94>
   21f98:	ldr	r0, [fp, #-12]
   21f9c:	ldr	r0, [r0]
   21fa0:	ldr	r1, [fp, #-16]
   21fa4:	add	r0, r0, r1, lsl #3
   21fa8:	ldr	r0, [r0, #4]
   21fac:	and	r0, r0, #255	; 0xff
   21fb0:	and	r0, r0, #8
   21fb4:	cmp	r0, #0
   21fb8:	beq	22144 <__assert_fail@plt+0x10c40>
   21fbc:	movw	r0, #0
   21fc0:	str	r0, [fp, #-28]	; 0xffffffe4
   21fc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21fc8:	ldr	r1, [fp, #-12]
   21fcc:	ldr	r1, [r1, #20]
   21fd0:	ldr	r2, [fp, #-16]
   21fd4:	movw	r3, #12
   21fd8:	mul	r2, r2, r3
   21fdc:	add	r1, r1, r2
   21fe0:	ldr	r1, [r1, #4]
   21fe4:	cmp	r0, r1
   21fe8:	bge	22140 <__assert_fail@plt+0x10c3c>
   21fec:	ldr	r0, [fp, #-12]
   21ff0:	ldr	r0, [r0, #20]
   21ff4:	ldr	r1, [fp, #-16]
   21ff8:	add	r1, r1, r1, lsl #1
   21ffc:	add	r0, r0, r1, lsl #2
   22000:	ldr	r0, [r0, #8]
   22004:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22008:	add	r0, r0, r1, lsl #2
   2200c:	ldr	r0, [r0]
   22010:	str	r0, [sp, #12]
   22014:	ldr	r0, [fp, #-12]
   22018:	ldr	r0, [r0, #24]
   2201c:	ldr	r1, [sp, #12]
   22020:	movw	r2, #12
   22024:	mul	r1, r1, r2
   22028:	add	r0, r0, r1
   2202c:	ldr	r0, [r0, #4]
   22030:	cmn	r0, #1
   22034:	bne	22044 <__assert_fail@plt+0x10b40>
   22038:	movw	r0, #1
   2203c:	strb	r0, [sp, #31]
   22040:	b	22130 <__assert_fail@plt+0x10c2c>
   22044:	ldr	r0, [fp, #-12]
   22048:	ldr	r0, [r0, #24]
   2204c:	ldr	r1, [sp, #12]
   22050:	movw	r2, #12
   22054:	mul	r1, r1, r2
   22058:	add	r0, r0, r1
   2205c:	ldr	r0, [r0, #4]
   22060:	cmp	r0, #0
   22064:	bne	220a0 <__assert_fail@plt+0x10b9c>
   22068:	ldr	r1, [fp, #-12]
   2206c:	ldr	r2, [sp, #12]
   22070:	add	r0, sp, #16
   22074:	movw	r3, #0
   22078:	and	r3, r3, #1
   2207c:	bl	21e0c <__assert_fail@plt+0x10908>
   22080:	str	r0, [fp, #-24]	; 0xffffffe8
   22084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22088:	cmp	r0, #0
   2208c:	beq	2209c <__assert_fail@plt+0x10b98>
   22090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22094:	str	r0, [fp, #-4]
   22098:	b	221d4 <__assert_fail@plt+0x10cd0>
   2209c:	b	220d0 <__assert_fail@plt+0x10bcc>
   220a0:	ldr	r0, [fp, #-12]
   220a4:	ldr	r0, [r0, #24]
   220a8:	ldr	r1, [sp, #12]
   220ac:	movw	r2, #12
   220b0:	mul	r1, r1, r2
   220b4:	add	r0, r0, r1
   220b8:	ldr	r1, [r0]
   220bc:	str	r1, [sp, #16]
   220c0:	ldr	r1, [r0, #4]
   220c4:	str	r1, [sp, #20]
   220c8:	ldr	r0, [r0, #8]
   220cc:	str	r0, [sp, #24]
   220d0:	add	r0, sp, #32
   220d4:	add	r1, sp, #16
   220d8:	bl	22758 <__assert_fail@plt+0x11254>
   220dc:	str	r0, [fp, #-24]	; 0xffffffe8
   220e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   220e4:	cmp	r0, #0
   220e8:	beq	220f8 <__assert_fail@plt+0x10bf4>
   220ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   220f0:	str	r0, [fp, #-4]
   220f4:	b	221d4 <__assert_fail@plt+0x10cd0>
   220f8:	ldr	r0, [fp, #-12]
   220fc:	ldr	r0, [r0, #24]
   22100:	ldr	r1, [sp, #12]
   22104:	movw	r2, #12
   22108:	mul	r1, r1, r2
   2210c:	add	r0, r0, r1
   22110:	ldr	r0, [r0, #4]
   22114:	cmp	r0, #0
   22118:	bne	2212c <__assert_fail@plt+0x10c28>
   2211c:	movw	r0, #1
   22120:	strb	r0, [sp, #31]
   22124:	ldr	r0, [sp, #24]
   22128:	bl	34c20 <__assert_fail@plt+0x2371c>
   2212c:	b	22130 <__assert_fail@plt+0x10c2c>
   22130:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22134:	add	r0, r0, #1
   22138:	str	r0, [fp, #-28]	; 0xffffffe4
   2213c:	b	21fc4 <__assert_fail@plt+0x10ac0>
   22140:	b	22144 <__assert_fail@plt+0x10c40>
   22144:	ldrb	r0, [sp, #31]
   22148:	tst	r0, #1
   2214c:	beq	22180 <__assert_fail@plt+0x10c7c>
   22150:	ldrb	r0, [fp, #-17]	; 0xffffffef
   22154:	tst	r0, #1
   22158:	bne	22180 <__assert_fail@plt+0x10c7c>
   2215c:	ldr	r0, [fp, #-12]
   22160:	ldr	r0, [r0, #24]
   22164:	ldr	r1, [fp, #-16]
   22168:	movw	r2, #12
   2216c:	mul	r1, r1, r2
   22170:	add	r0, r0, r1
   22174:	movw	r1, #0
   22178:	str	r1, [r0, #4]
   2217c:	b	221b0 <__assert_fail@plt+0x10cac>
   22180:	ldr	r0, [fp, #-12]
   22184:	ldr	r0, [r0, #24]
   22188:	ldr	r1, [fp, #-16]
   2218c:	movw	r2, #12
   22190:	mul	r1, r1, r2
   22194:	add	r0, r0, r1
   22198:	ldr	r1, [sp, #32]
   2219c:	str	r1, [r0]
   221a0:	ldr	r1, [sp, #36]	; 0x24
   221a4:	str	r1, [r0, #4]
   221a8:	ldr	r1, [sp, #40]	; 0x28
   221ac:	str	r1, [r0, #8]
   221b0:	ldr	r0, [fp, #-8]
   221b4:	ldr	r1, [sp, #32]
   221b8:	str	r1, [r0]
   221bc:	ldr	r1, [sp, #36]	; 0x24
   221c0:	str	r1, [r0, #4]
   221c4:	ldr	r1, [sp, #40]	; 0x28
   221c8:	str	r1, [r0, #8]
   221cc:	movw	r0, #0
   221d0:	str	r0, [fp, #-4]
   221d4:	ldr	r0, [fp, #-4]
   221d8:	mov	sp, fp
   221dc:	pop	{fp, pc}
   221e0:	push	{fp, lr}
   221e4:	mov	fp, sp
   221e8:	sub	sp, sp, #16
   221ec:	str	r0, [sp, #8]
   221f0:	str	r1, [sp, #4]
   221f4:	ldr	r0, [sp, #4]
   221f8:	ldr	r1, [sp, #8]
   221fc:	str	r0, [r1]
   22200:	ldr	r0, [sp, #8]
   22204:	mov	r1, #0
   22208:	str	r1, [r0, #4]
   2220c:	ldr	r0, [sp, #4]
   22210:	lsl	r0, r0, #2
   22214:	bl	3354c <__assert_fail@plt+0x22048>
   22218:	ldr	r1, [sp, #8]
   2221c:	str	r0, [r1, #8]
   22220:	ldr	r0, [sp, #8]
   22224:	ldr	r0, [r0, #8]
   22228:	movw	r1, #0
   2222c:	cmp	r0, r1
   22230:	bne	22240 <__assert_fail@plt+0x10d3c>
   22234:	movw	r0, #12
   22238:	str	r0, [fp, #-4]
   2223c:	b	22248 <__assert_fail@plt+0x10d44>
   22240:	movw	r0, #0
   22244:	str	r0, [fp, #-4]
   22248:	ldr	r0, [fp, #-4]
   2224c:	mov	sp, fp
   22250:	pop	{fp, pc}
   22254:	push	{fp, lr}
   22258:	mov	fp, sp
   2225c:	sub	sp, sp, #56	; 0x38
   22260:	ldr	ip, [fp, #8]
   22264:	str	r0, [fp, #-8]
   22268:	str	r1, [fp, #-12]
   2226c:	str	r2, [fp, #-16]
   22270:	str	r3, [fp, #-20]	; 0xffffffec
   22274:	ldr	r0, [fp, #8]
   22278:	str	r0, [sp, #20]
   2227c:	ldr	r0, [fp, #-12]
   22280:	str	r0, [fp, #-24]	; 0xffffffe8
   22284:	ldr	r0, [fp, #-16]
   22288:	str	r0, [sp, #28]
   2228c:	ldr	r0, [fp, #-8]
   22290:	ldr	r0, [r0]
   22294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22298:	add	r0, r0, r1, lsl #3
   2229c:	ldr	r0, [r0, #4]
   222a0:	and	r0, r0, #255	; 0xff
   222a4:	cmp	r0, #4
   222a8:	bne	22378 <__assert_fail@plt+0x10e74>
   222ac:	ldr	r0, [fp, #-8]
   222b0:	ldr	r0, [r0, #12]
   222b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   222b8:	add	r0, r0, r1, lsl #2
   222bc:	ldr	r0, [r0]
   222c0:	str	r0, [sp, #16]
   222c4:	ldr	r0, [fp, #-8]
   222c8:	ldr	r0, [r0, #20]
   222cc:	ldr	r1, [sp, #28]
   222d0:	movw	r2, #12
   222d4:	mul	r1, r1, r2
   222d8:	add	r0, r0, r1
   222dc:	movw	r1, #0
   222e0:	str	r1, [r0, #4]
   222e4:	ldr	r0, [fp, #-8]
   222e8:	ldr	r1, [sp, #16]
   222ec:	ldr	r2, [sp, #20]
   222f0:	bl	22b60 <__assert_fail@plt+0x1165c>
   222f4:	str	r0, [sp, #12]
   222f8:	ldr	r0, [sp, #12]
   222fc:	cmn	r0, #1
   22300:	bne	22310 <__assert_fail@plt+0x10e0c>
   22304:	movw	r0, #12
   22308:	str	r0, [fp, #-4]
   2230c:	b	2274c <__assert_fail@plt+0x11248>
   22310:	ldr	r0, [fp, #-8]
   22314:	ldr	r0, [r0, #12]
   22318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2231c:	ldr	r1, [r0, r1, lsl #2]
   22320:	ldr	r2, [sp, #28]
   22324:	add	r0, r0, r2, lsl #2
   22328:	str	r1, [r0]
   2232c:	ldr	r0, [fp, #-8]
   22330:	ldr	r0, [r0, #20]
   22334:	ldr	r1, [sp, #28]
   22338:	movw	r2, #12
   2233c:	mul	r1, r1, r2
   22340:	add	r0, r0, r1
   22344:	ldr	r1, [sp, #12]
   22348:	bl	22c48 <__assert_fail@plt+0x11744>
   2234c:	and	r0, r0, #1
   22350:	strb	r0, [sp, #27]
   22354:	ldrb	r0, [sp, #27]
   22358:	mvn	r1, #0
   2235c:	eor	r0, r0, r1
   22360:	tst	r0, #1
   22364:	beq	22374 <__assert_fail@plt+0x10e70>
   22368:	movw	r0, #12
   2236c:	str	r0, [fp, #-4]
   22370:	b	2274c <__assert_fail@plt+0x11248>
   22374:	b	22730 <__assert_fail@plt+0x1122c>
   22378:	ldr	r0, [fp, #-8]
   2237c:	ldr	r0, [r0, #20]
   22380:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22384:	movw	r2, #12
   22388:	mul	r1, r1, r2
   2238c:	add	r0, r0, r1
   22390:	ldr	r0, [r0, #4]
   22394:	cmp	r0, #0
   22398:	bne	223bc <__assert_fail@plt+0x10eb8>
   2239c:	ldr	r0, [fp, #-8]
   223a0:	ldr	r0, [r0, #12]
   223a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   223a8:	ldr	r1, [r0, r1, lsl #2]
   223ac:	ldr	r2, [sp, #28]
   223b0:	add	r0, r0, r2, lsl #2
   223b4:	str	r1, [r0]
   223b8:	b	22744 <__assert_fail@plt+0x11240>
   223bc:	ldr	r0, [fp, #-8]
   223c0:	ldr	r0, [r0, #20]
   223c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   223c8:	movw	r2, #12
   223cc:	mul	r1, r1, r2
   223d0:	add	r0, r0, r1
   223d4:	ldr	r0, [r0, #4]
   223d8:	cmp	r0, #1
   223dc:	bne	22530 <__assert_fail@plt+0x1102c>
   223e0:	ldr	r0, [fp, #-8]
   223e4:	ldr	r0, [r0, #20]
   223e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   223ec:	movw	r2, #12
   223f0:	mul	r1, r1, r2
   223f4:	add	r0, r0, r1
   223f8:	ldr	r0, [r0, #8]
   223fc:	ldr	r0, [r0]
   22400:	str	r0, [sp, #16]
   22404:	ldr	r0, [fp, #-8]
   22408:	ldr	r0, [r0, #20]
   2240c:	ldr	r1, [sp, #28]
   22410:	mul	r1, r1, r2
   22414:	add	r0, r0, r1
   22418:	movw	r1, #0
   2241c:	str	r1, [r0, #4]
   22420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22424:	ldr	r1, [fp, #-20]	; 0xffffffec
   22428:	cmp	r0, r1
   2242c:	bne	2248c <__assert_fail@plt+0x10f88>
   22430:	ldr	r0, [sp, #28]
   22434:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22438:	cmp	r0, r1
   2243c:	beq	2248c <__assert_fail@plt+0x10f88>
   22440:	ldr	r0, [fp, #-8]
   22444:	ldr	r0, [r0, #20]
   22448:	ldr	r1, [sp, #28]
   2244c:	movw	r2, #12
   22450:	mul	r1, r1, r2
   22454:	add	r0, r0, r1
   22458:	ldr	r1, [sp, #16]
   2245c:	bl	22c48 <__assert_fail@plt+0x11744>
   22460:	and	r0, r0, #1
   22464:	strb	r0, [sp, #27]
   22468:	ldrb	r0, [sp, #27]
   2246c:	mvn	r1, #0
   22470:	eor	r0, r0, r1
   22474:	tst	r0, #1
   22478:	beq	22488 <__assert_fail@plt+0x10f84>
   2247c:	movw	r0, #12
   22480:	str	r0, [fp, #-4]
   22484:	b	2274c <__assert_fail@plt+0x11248>
   22488:	b	22744 <__assert_fail@plt+0x11240>
   2248c:	ldr	r0, [fp, #-8]
   22490:	ldr	r0, [r0]
   22494:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22498:	add	r0, r0, r1, lsl #3
   2249c:	ldr	r0, [r0, #4]
   224a0:	lsr	r0, r0, #8
   224a4:	movw	r1, #1023	; 0x3ff
   224a8:	and	r0, r0, r1
   224ac:	ldr	r1, [sp, #20]
   224b0:	orr	r0, r1, r0
   224b4:	str	r0, [sp, #20]
   224b8:	ldr	r0, [fp, #-8]
   224bc:	ldr	r1, [sp, #16]
   224c0:	ldr	r2, [sp, #20]
   224c4:	bl	22b60 <__assert_fail@plt+0x1165c>
   224c8:	str	r0, [sp, #12]
   224cc:	ldr	r0, [sp, #12]
   224d0:	cmn	r0, #1
   224d4:	bne	224e4 <__assert_fail@plt+0x10fe0>
   224d8:	movw	r0, #12
   224dc:	str	r0, [fp, #-4]
   224e0:	b	2274c <__assert_fail@plt+0x11248>
   224e4:	ldr	r0, [fp, #-8]
   224e8:	ldr	r0, [r0, #20]
   224ec:	ldr	r1, [sp, #28]
   224f0:	movw	r2, #12
   224f4:	mul	r1, r1, r2
   224f8:	add	r0, r0, r1
   224fc:	ldr	r1, [sp, #12]
   22500:	bl	22c48 <__assert_fail@plt+0x11744>
   22504:	and	r0, r0, #1
   22508:	strb	r0, [sp, #27]
   2250c:	ldrb	r0, [sp, #27]
   22510:	mvn	r1, #0
   22514:	eor	r0, r0, r1
   22518:	tst	r0, #1
   2251c:	beq	2252c <__assert_fail@plt+0x11028>
   22520:	movw	r0, #12
   22524:	str	r0, [fp, #-4]
   22528:	b	2274c <__assert_fail@plt+0x11248>
   2252c:	b	22728 <__assert_fail@plt+0x11224>
   22530:	ldr	r0, [fp, #-8]
   22534:	ldr	r0, [r0, #20]
   22538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2253c:	movw	r2, #12
   22540:	mul	r1, r1, r2
   22544:	add	r0, r0, r1
   22548:	ldr	r0, [r0, #8]
   2254c:	ldr	r0, [r0]
   22550:	str	r0, [sp, #16]
   22554:	ldr	r0, [fp, #-8]
   22558:	ldr	r0, [r0, #20]
   2255c:	ldr	r1, [sp, #28]
   22560:	mul	r1, r1, r2
   22564:	add	r0, r0, r1
   22568:	movw	r1, #0
   2256c:	str	r1, [r0, #4]
   22570:	ldr	r0, [fp, #-8]
   22574:	ldr	r1, [sp, #16]
   22578:	ldr	r2, [sp, #20]
   2257c:	bl	22e80 <__assert_fail@plt+0x1197c>
   22580:	str	r0, [sp, #12]
   22584:	ldr	r0, [sp, #12]
   22588:	cmn	r0, #1
   2258c:	bne	22640 <__assert_fail@plt+0x1113c>
   22590:	ldr	r0, [fp, #-8]
   22594:	ldr	r1, [sp, #16]
   22598:	ldr	r2, [sp, #20]
   2259c:	bl	22b60 <__assert_fail@plt+0x1165c>
   225a0:	str	r0, [sp, #12]
   225a4:	ldr	r0, [sp, #12]
   225a8:	cmn	r0, #1
   225ac:	bne	225bc <__assert_fail@plt+0x110b8>
   225b0:	movw	r0, #12
   225b4:	str	r0, [fp, #-4]
   225b8:	b	2274c <__assert_fail@plt+0x11248>
   225bc:	ldr	r0, [fp, #-8]
   225c0:	ldr	r0, [r0, #20]
   225c4:	ldr	r1, [sp, #28]
   225c8:	movw	r2, #12
   225cc:	mul	r1, r1, r2
   225d0:	add	r0, r0, r1
   225d4:	ldr	r1, [sp, #12]
   225d8:	bl	22c48 <__assert_fail@plt+0x11744>
   225dc:	and	r0, r0, #1
   225e0:	strb	r0, [sp, #27]
   225e4:	ldrb	r0, [sp, #27]
   225e8:	mvn	r1, #0
   225ec:	eor	r0, r0, r1
   225f0:	tst	r0, #1
   225f4:	beq	22604 <__assert_fail@plt+0x11100>
   225f8:	movw	r0, #12
   225fc:	str	r0, [fp, #-4]
   22600:	b	2274c <__assert_fail@plt+0x11248>
   22604:	ldr	r0, [fp, #-8]
   22608:	ldr	r1, [sp, #16]
   2260c:	ldr	r2, [sp, #12]
   22610:	ldr	r3, [fp, #-20]	; 0xffffffec
   22614:	ldr	ip, [sp, #20]
   22618:	str	ip, [sp]
   2261c:	bl	22254 <__assert_fail@plt+0x10d50>
   22620:	str	r0, [sp, #8]
   22624:	ldr	r0, [sp, #8]
   22628:	cmp	r0, #0
   2262c:	beq	2263c <__assert_fail@plt+0x11138>
   22630:	ldr	r0, [sp, #8]
   22634:	str	r0, [fp, #-4]
   22638:	b	2274c <__assert_fail@plt+0x11248>
   2263c:	b	2268c <__assert_fail@plt+0x11188>
   22640:	ldr	r0, [fp, #-8]
   22644:	ldr	r0, [r0, #20]
   22648:	ldr	r1, [sp, #28]
   2264c:	movw	r2, #12
   22650:	mul	r1, r1, r2
   22654:	add	r0, r0, r1
   22658:	ldr	r1, [sp, #12]
   2265c:	bl	22c48 <__assert_fail@plt+0x11744>
   22660:	and	r0, r0, #1
   22664:	strb	r0, [sp, #27]
   22668:	ldrb	r0, [sp, #27]
   2266c:	mvn	r1, #0
   22670:	eor	r0, r0, r1
   22674:	tst	r0, #1
   22678:	beq	22688 <__assert_fail@plt+0x11184>
   2267c:	movw	r0, #12
   22680:	str	r0, [fp, #-4]
   22684:	b	2274c <__assert_fail@plt+0x11248>
   22688:	b	2268c <__assert_fail@plt+0x11188>
   2268c:	ldr	r0, [fp, #-8]
   22690:	ldr	r0, [r0, #20]
   22694:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22698:	movw	r2, #12
   2269c:	mul	r1, r1, r2
   226a0:	add	r0, r0, r1
   226a4:	ldr	r0, [r0, #8]
   226a8:	ldr	r0, [r0, #4]
   226ac:	str	r0, [sp, #16]
   226b0:	ldr	r0, [fp, #-8]
   226b4:	ldr	r1, [sp, #16]
   226b8:	ldr	r2, [sp, #20]
   226bc:	bl	22b60 <__assert_fail@plt+0x1165c>
   226c0:	str	r0, [sp, #12]
   226c4:	ldr	r0, [sp, #12]
   226c8:	cmn	r0, #1
   226cc:	bne	226dc <__assert_fail@plt+0x111d8>
   226d0:	movw	r0, #12
   226d4:	str	r0, [fp, #-4]
   226d8:	b	2274c <__assert_fail@plt+0x11248>
   226dc:	ldr	r0, [fp, #-8]
   226e0:	ldr	r0, [r0, #20]
   226e4:	ldr	r1, [sp, #28]
   226e8:	movw	r2, #12
   226ec:	mul	r1, r1, r2
   226f0:	add	r0, r0, r1
   226f4:	ldr	r1, [sp, #12]
   226f8:	bl	22c48 <__assert_fail@plt+0x11744>
   226fc:	and	r0, r0, #1
   22700:	strb	r0, [sp, #27]
   22704:	ldrb	r0, [sp, #27]
   22708:	mvn	r1, #0
   2270c:	eor	r0, r0, r1
   22710:	tst	r0, #1
   22714:	beq	22724 <__assert_fail@plt+0x11220>
   22718:	movw	r0, #12
   2271c:	str	r0, [fp, #-4]
   22720:	b	2274c <__assert_fail@plt+0x11248>
   22724:	b	22728 <__assert_fail@plt+0x11224>
   22728:	b	2272c <__assert_fail@plt+0x11228>
   2272c:	b	22730 <__assert_fail@plt+0x1122c>
   22730:	ldr	r0, [sp, #16]
   22734:	str	r0, [fp, #-24]	; 0xffffffe8
   22738:	ldr	r0, [sp, #12]
   2273c:	str	r0, [sp, #28]
   22740:	b	2228c <__assert_fail@plt+0x10d88>
   22744:	movw	r0, #0
   22748:	str	r0, [fp, #-4]
   2274c:	ldr	r0, [fp, #-4]
   22750:	mov	sp, fp
   22754:	pop	{fp, pc}
   22758:	push	{fp, lr}
   2275c:	mov	fp, sp
   22760:	sub	sp, sp, #40	; 0x28
   22764:	str	r0, [fp, #-8]
   22768:	str	r1, [fp, #-12]
   2276c:	ldr	r0, [fp, #-12]
   22770:	movw	r1, #0
   22774:	cmp	r0, r1
   22778:	beq	2278c <__assert_fail@plt+0x11288>
   2277c:	ldr	r0, [fp, #-12]
   22780:	ldr	r0, [r0, #4]
   22784:	cmp	r0, #0
   22788:	bne	22798 <__assert_fail@plt+0x11294>
   2278c:	movw	r0, #0
   22790:	str	r0, [fp, #-4]
   22794:	b	22b54 <__assert_fail@plt+0x11650>
   22798:	ldr	r0, [fp, #-8]
   2279c:	ldr	r0, [r0]
   227a0:	ldr	r1, [fp, #-12]
   227a4:	ldr	r1, [r1, #4]
   227a8:	lsl	r1, r1, #1
   227ac:	ldr	r2, [fp, #-8]
   227b0:	ldr	r2, [r2, #4]
   227b4:	add	r1, r1, r2
   227b8:	cmp	r0, r1
   227bc:	bge	22828 <__assert_fail@plt+0x11324>
   227c0:	ldr	r0, [fp, #-12]
   227c4:	ldr	r0, [r0, #4]
   227c8:	ldr	r1, [fp, #-8]
   227cc:	ldr	r1, [r1]
   227d0:	add	r0, r0, r1
   227d4:	lsl	r0, r0, #1
   227d8:	str	r0, [sp, #8]
   227dc:	ldr	r0, [fp, #-8]
   227e0:	ldr	r0, [r0, #8]
   227e4:	ldr	r1, [sp, #8]
   227e8:	lsl	r1, r1, #2
   227ec:	bl	335bc <__assert_fail@plt+0x220b8>
   227f0:	str	r0, [sp, #4]
   227f4:	ldr	r0, [sp, #4]
   227f8:	movw	r1, #0
   227fc:	cmp	r0, r1
   22800:	bne	22810 <__assert_fail@plt+0x1130c>
   22804:	movw	r0, #12
   22808:	str	r0, [fp, #-4]
   2280c:	b	22b54 <__assert_fail@plt+0x11650>
   22810:	ldr	r0, [sp, #4]
   22814:	ldr	r1, [fp, #-8]
   22818:	str	r0, [r1, #8]
   2281c:	ldr	r0, [sp, #8]
   22820:	ldr	r1, [fp, #-8]
   22824:	str	r0, [r1]
   22828:	ldr	r0, [fp, #-8]
   2282c:	ldr	r0, [r0, #4]
   22830:	cmp	r0, #0
   22834:	bne	22888 <__assert_fail@plt+0x11384>
   22838:	ldr	r0, [fp, #-8]
   2283c:	ldr	r0, [r0, #8]
   22840:	movw	r1, #0
   22844:	cmp	r0, r1
   22848:	beq	22850 <__assert_fail@plt+0x1134c>
   2284c:	b	22850 <__assert_fail@plt+0x1134c>
   22850:	ldr	r0, [fp, #-12]
   22854:	ldr	r0, [r0, #4]
   22858:	ldr	r1, [fp, #-8]
   2285c:	str	r0, [r1, #4]
   22860:	ldr	r0, [fp, #-8]
   22864:	ldr	r0, [r0, #8]
   22868:	ldr	r1, [fp, #-12]
   2286c:	ldr	r2, [r1, #4]
   22870:	ldr	r1, [r1, #8]
   22874:	lsl	r2, r2, #2
   22878:	bl	112a0 <memcpy@plt>
   2287c:	movw	r0, #0
   22880:	str	r0, [fp, #-4]
   22884:	b	22b54 <__assert_fail@plt+0x11650>
   22888:	ldr	r0, [fp, #-8]
   2288c:	ldr	r0, [r0, #4]
   22890:	ldr	r1, [fp, #-12]
   22894:	ldr	r1, [r1, #4]
   22898:	lsl	r1, r1, #1
   2289c:	add	r0, r0, r1
   228a0:	str	r0, [sp, #16]
   228a4:	ldr	r0, [fp, #-12]
   228a8:	ldr	r0, [r0, #4]
   228ac:	sub	r0, r0, #1
   228b0:	str	r0, [fp, #-16]
   228b4:	ldr	r0, [fp, #-8]
   228b8:	ldr	r0, [r0, #4]
   228bc:	sub	r0, r0, #1
   228c0:	str	r0, [sp, #20]
   228c4:	ldr	r0, [fp, #-16]
   228c8:	cmp	r0, #0
   228cc:	movw	r0, #0
   228d0:	str	r0, [sp]
   228d4:	blt	228ec <__assert_fail@plt+0x113e8>
   228d8:	ldr	r0, [sp, #20]
   228dc:	cmp	r0, #0
   228e0:	movw	r0, #0
   228e4:	movge	r0, #1
   228e8:	str	r0, [sp]
   228ec:	ldr	r0, [sp]
   228f0:	tst	r0, #1
   228f4:	beq	229c0 <__assert_fail@plt+0x114bc>
   228f8:	ldr	r0, [fp, #-8]
   228fc:	ldr	r0, [r0, #8]
   22900:	ldr	r1, [sp, #20]
   22904:	ldr	r0, [r0, r1, lsl #2]
   22908:	ldr	r1, [fp, #-12]
   2290c:	ldr	r1, [r1, #8]
   22910:	ldr	r2, [fp, #-16]
   22914:	add	r1, r1, r2, lsl #2
   22918:	ldr	r1, [r1]
   2291c:	cmp	r0, r1
   22920:	bne	22944 <__assert_fail@plt+0x11440>
   22924:	ldr	r0, [fp, #-16]
   22928:	mvn	r1, #0
   2292c:	add	r0, r0, r1
   22930:	str	r0, [fp, #-16]
   22934:	ldr	r0, [sp, #20]
   22938:	add	r0, r0, r1
   2293c:	str	r0, [sp, #20]
   22940:	b	229bc <__assert_fail@plt+0x114b8>
   22944:	ldr	r0, [fp, #-8]
   22948:	ldr	r0, [r0, #8]
   2294c:	ldr	r1, [sp, #20]
   22950:	ldr	r0, [r0, r1, lsl #2]
   22954:	ldr	r1, [fp, #-12]
   22958:	ldr	r1, [r1, #8]
   2295c:	ldr	r2, [fp, #-16]
   22960:	add	r1, r1, r2, lsl #2
   22964:	ldr	r1, [r1]
   22968:	cmp	r0, r1
   2296c:	bge	229a8 <__assert_fail@plt+0x114a4>
   22970:	ldr	r0, [fp, #-12]
   22974:	ldr	r0, [r0, #8]
   22978:	ldr	r1, [fp, #-16]
   2297c:	sub	r2, r1, #1
   22980:	str	r2, [fp, #-16]
   22984:	ldr	r0, [r0, r1, lsl #2]
   22988:	ldr	r1, [fp, #-8]
   2298c:	ldr	r1, [r1, #8]
   22990:	ldr	r2, [sp, #16]
   22994:	sub	r2, r2, #1
   22998:	str	r2, [sp, #16]
   2299c:	add	r1, r1, r2, lsl #2
   229a0:	str	r0, [r1]
   229a4:	b	229b8 <__assert_fail@plt+0x114b4>
   229a8:	ldr	r0, [sp, #20]
   229ac:	mvn	r1, #0
   229b0:	add	r0, r0, r1
   229b4:	str	r0, [sp, #20]
   229b8:	b	229bc <__assert_fail@plt+0x114b8>
   229bc:	b	228c4 <__assert_fail@plt+0x113c0>
   229c0:	ldr	r0, [fp, #-16]
   229c4:	cmp	r0, #0
   229c8:	blt	22a08 <__assert_fail@plt+0x11504>
   229cc:	ldr	r0, [fp, #-16]
   229d0:	ldr	r1, [sp, #16]
   229d4:	mvn	r0, r0
   229d8:	add	r0, r0, r1
   229dc:	str	r0, [sp, #16]
   229e0:	ldr	r0, [fp, #-8]
   229e4:	ldr	r0, [r0, #8]
   229e8:	ldr	r1, [sp, #16]
   229ec:	add	r0, r0, r1, lsl #2
   229f0:	ldr	r1, [fp, #-12]
   229f4:	ldr	r1, [r1, #8]
   229f8:	ldr	r2, [fp, #-16]
   229fc:	add	r2, r2, #1
   22a00:	lsl	r2, r2, #2
   22a04:	bl	112a0 <memcpy@plt>
   22a08:	ldr	r0, [fp, #-8]
   22a0c:	ldr	r0, [r0, #4]
   22a10:	sub	r0, r0, #1
   22a14:	str	r0, [sp, #20]
   22a18:	ldr	r0, [fp, #-8]
   22a1c:	ldr	r0, [r0, #4]
   22a20:	ldr	r1, [fp, #-12]
   22a24:	ldr	r1, [r1, #4]
   22a28:	lsl	r1, r1, #1
   22a2c:	add	r0, r0, r1
   22a30:	sub	r0, r0, #1
   22a34:	str	r0, [fp, #-16]
   22a38:	ldr	r0, [fp, #-16]
   22a3c:	ldr	r1, [sp, #16]
   22a40:	sub	r0, r0, r1
   22a44:	add	r0, r0, #1
   22a48:	str	r0, [sp, #12]
   22a4c:	ldr	r0, [sp, #12]
   22a50:	cmp	r0, #0
   22a54:	bne	22a64 <__assert_fail@plt+0x11560>
   22a58:	movw	r0, #0
   22a5c:	str	r0, [fp, #-4]
   22a60:	b	22b54 <__assert_fail@plt+0x11650>
   22a64:	ldr	r0, [sp, #12]
   22a68:	ldr	r1, [fp, #-8]
   22a6c:	ldr	r2, [r1, #4]
   22a70:	add	r0, r2, r0
   22a74:	str	r0, [r1, #4]
   22a78:	ldr	r0, [fp, #-8]
   22a7c:	ldr	r0, [r0, #8]
   22a80:	ldr	r1, [fp, #-16]
   22a84:	ldr	r1, [r0, r1, lsl #2]
   22a88:	ldr	r2, [sp, #20]
   22a8c:	add	r0, r0, r2, lsl #2
   22a90:	ldr	r0, [r0]
   22a94:	cmp	r1, r0
   22a98:	ble	22aec <__assert_fail@plt+0x115e8>
   22a9c:	ldr	r0, [fp, #-8]
   22aa0:	ldr	r0, [r0, #8]
   22aa4:	ldr	r1, [fp, #-16]
   22aa8:	sub	r2, r1, #1
   22aac:	str	r2, [fp, #-16]
   22ab0:	ldr	r0, [r0, r1, lsl #2]
   22ab4:	ldr	r1, [fp, #-8]
   22ab8:	ldr	r1, [r1, #8]
   22abc:	ldr	r2, [sp, #20]
   22ac0:	ldr	r3, [sp, #12]
   22ac4:	sub	ip, r3, #1
   22ac8:	str	ip, [sp, #12]
   22acc:	add	r2, r2, r3
   22ad0:	add	r1, r1, r2, lsl #2
   22ad4:	str	r0, [r1]
   22ad8:	ldr	r0, [sp, #12]
   22adc:	cmp	r0, #0
   22ae0:	bne	22ae8 <__assert_fail@plt+0x115e4>
   22ae4:	b	22b4c <__assert_fail@plt+0x11648>
   22ae8:	b	22b48 <__assert_fail@plt+0x11644>
   22aec:	ldr	r0, [fp, #-8]
   22af0:	ldr	r0, [r0, #8]
   22af4:	ldr	r1, [sp, #20]
   22af8:	ldr	r2, [r0, r1, lsl #2]
   22afc:	ldr	r3, [sp, #12]
   22b00:	add	r1, r1, r3
   22b04:	add	r0, r0, r1, lsl #2
   22b08:	str	r2, [r0]
   22b0c:	ldr	r0, [sp, #20]
   22b10:	mvn	r1, #0
   22b14:	add	r0, r0, r1
   22b18:	str	r0, [sp, #20]
   22b1c:	cmp	r0, #0
   22b20:	bge	22b44 <__assert_fail@plt+0x11640>
   22b24:	ldr	r0, [fp, #-8]
   22b28:	ldr	r0, [r0, #8]
   22b2c:	ldr	r1, [sp, #16]
   22b30:	add	r1, r0, r1, lsl #2
   22b34:	ldr	r2, [sp, #12]
   22b38:	lsl	r2, r2, #2
   22b3c:	bl	112a0 <memcpy@plt>
   22b40:	b	22b4c <__assert_fail@plt+0x11648>
   22b44:	b	22b48 <__assert_fail@plt+0x11644>
   22b48:	b	22a78 <__assert_fail@plt+0x11574>
   22b4c:	movw	r0, #0
   22b50:	str	r0, [fp, #-4]
   22b54:	ldr	r0, [fp, #-4]
   22b58:	mov	sp, fp
   22b5c:	pop	{fp, pc}
   22b60:	push	{fp, lr}
   22b64:	mov	fp, sp
   22b68:	sub	sp, sp, #24
   22b6c:	str	r0, [fp, #-4]
   22b70:	str	r1, [fp, #-8]
   22b74:	str	r2, [sp, #12]
   22b78:	ldr	r0, [fp, #-4]
   22b7c:	ldr	r1, [r0]
   22b80:	ldr	r2, [fp, #-8]
   22b84:	ldr	r2, [r1, r2, lsl #3]!
   22b88:	ldr	r1, [r1, #4]
   22b8c:	str	r1, [sp, #4]
   22b90:	mov	r1, r2
   22b94:	ldr	r2, [sp, #4]
   22b98:	bl	21964 <__assert_fail@plt+0x10460>
   22b9c:	str	r0, [sp, #8]
   22ba0:	ldr	r0, [sp, #8]
   22ba4:	cmn	r0, #1
   22ba8:	beq	22c3c <__assert_fail@plt+0x11738>
   22bac:	ldr	r0, [sp, #12]
   22bb0:	ldr	r1, [fp, #-4]
   22bb4:	ldr	r1, [r1]
   22bb8:	ldr	r2, [sp, #8]
   22bbc:	add	r1, r1, r2, lsl #3
   22bc0:	ldr	r2, [r1, #4]
   22bc4:	bfc	r0, #10, #22
   22bc8:	bfc	r2, #8, #10
   22bcc:	orr	r0, r2, r0, lsl #8
   22bd0:	str	r0, [r1, #4]
   22bd4:	ldr	r0, [fp, #-4]
   22bd8:	ldr	r0, [r0]
   22bdc:	ldr	r1, [fp, #-8]
   22be0:	add	r1, r0, r1, lsl #3
   22be4:	ldr	r1, [r1, #4]
   22be8:	ldr	r2, [sp, #8]
   22bec:	add	r0, r0, r2, lsl #3
   22bf0:	ldr	r2, [r0, #4]
   22bf4:	orr	r1, r2, r1
   22bf8:	ubfx	r1, r1, #8, #10
   22bfc:	bfc	r2, #8, #10
   22c00:	orr	r1, r2, r1, lsl #8
   22c04:	str	r1, [r0, #4]
   22c08:	ldr	r0, [fp, #-4]
   22c0c:	ldr	r0, [r0]
   22c10:	ldr	r1, [sp, #8]
   22c14:	add	r0, r0, r1, lsl #3
   22c18:	ldr	r1, [r0, #4]
   22c1c:	orr	r1, r1, #262144	; 0x40000
   22c20:	str	r1, [r0, #4]
   22c24:	ldr	r0, [fp, #-8]
   22c28:	ldr	r1, [fp, #-4]
   22c2c:	ldr	r1, [r1, #16]
   22c30:	ldr	r2, [sp, #8]
   22c34:	add	r1, r1, r2, lsl #2
   22c38:	str	r0, [r1]
   22c3c:	ldr	r0, [sp, #8]
   22c40:	mov	sp, fp
   22c44:	pop	{fp, pc}
   22c48:	push	{fp, lr}
   22c4c:	mov	fp, sp
   22c50:	sub	sp, sp, #24
   22c54:	str	r0, [fp, #-8]
   22c58:	str	r1, [sp, #12]
   22c5c:	ldr	r0, [fp, #-8]
   22c60:	ldr	r0, [r0]
   22c64:	cmp	r0, #0
   22c68:	bne	22c90 <__assert_fail@plt+0x1178c>
   22c6c:	ldr	r0, [fp, #-8]
   22c70:	ldr	r1, [sp, #12]
   22c74:	bl	21d7c <__assert_fail@plt+0x10878>
   22c78:	cmp	r0, #0
   22c7c:	movw	r0, #0
   22c80:	moveq	r0, #1
   22c84:	and	r0, r0, #1
   22c88:	strb	r0, [fp, #-1]
   22c8c:	b	22e70 <__assert_fail@plt+0x1196c>
   22c90:	ldr	r0, [fp, #-8]
   22c94:	ldr	r0, [r0, #4]
   22c98:	cmp	r0, #0
   22c9c:	bne	22ce8 <__assert_fail@plt+0x117e4>
   22ca0:	ldr	r0, [fp, #-8]
   22ca4:	ldr	r0, [r0, #8]
   22ca8:	movw	r1, #0
   22cac:	cmp	r0, r1
   22cb0:	beq	22cb8 <__assert_fail@plt+0x117b4>
   22cb4:	b	22cb8 <__assert_fail@plt+0x117b4>
   22cb8:	ldr	r0, [sp, #12]
   22cbc:	ldr	r1, [fp, #-8]
   22cc0:	ldr	r1, [r1, #8]
   22cc4:	str	r0, [r1]
   22cc8:	ldr	r0, [fp, #-8]
   22ccc:	ldr	r1, [r0, #4]
   22cd0:	add	r1, r1, #1
   22cd4:	str	r1, [r0, #4]
   22cd8:	movw	r0, #1
   22cdc:	and	r0, r0, #1
   22ce0:	strb	r0, [fp, #-1]
   22ce4:	b	22e70 <__assert_fail@plt+0x1196c>
   22ce8:	ldr	r0, [fp, #-8]
   22cec:	ldr	r0, [r0]
   22cf0:	ldr	r1, [fp, #-8]
   22cf4:	ldr	r1, [r1, #4]
   22cf8:	cmp	r0, r1
   22cfc:	bne	22d54 <__assert_fail@plt+0x11850>
   22d00:	ldr	r0, [fp, #-8]
   22d04:	ldr	r1, [r0]
   22d08:	lsl	r1, r1, #1
   22d0c:	str	r1, [r0]
   22d10:	ldr	r0, [fp, #-8]
   22d14:	ldr	r1, [r0]
   22d18:	ldr	r0, [r0, #8]
   22d1c:	lsl	r1, r1, #2
   22d20:	bl	335bc <__assert_fail@plt+0x220b8>
   22d24:	str	r0, [sp, #4]
   22d28:	ldr	r0, [sp, #4]
   22d2c:	movw	r1, #0
   22d30:	cmp	r0, r1
   22d34:	bne	22d48 <__assert_fail@plt+0x11844>
   22d38:	movw	r0, #0
   22d3c:	and	r0, r0, #1
   22d40:	strb	r0, [fp, #-1]
   22d44:	b	22e70 <__assert_fail@plt+0x1196c>
   22d48:	ldr	r0, [sp, #4]
   22d4c:	ldr	r1, [fp, #-8]
   22d50:	str	r0, [r1, #8]
   22d54:	ldr	r0, [sp, #12]
   22d58:	ldr	r1, [fp, #-8]
   22d5c:	ldr	r1, [r1, #8]
   22d60:	ldr	r1, [r1]
   22d64:	cmp	r0, r1
   22d68:	bge	22db4 <__assert_fail@plt+0x118b0>
   22d6c:	ldr	r0, [fp, #-8]
   22d70:	ldr	r0, [r0, #4]
   22d74:	str	r0, [sp, #8]
   22d78:	ldr	r0, [sp, #8]
   22d7c:	cmp	r0, #0
   22d80:	ble	22db0 <__assert_fail@plt+0x118ac>
   22d84:	ldr	r0, [fp, #-8]
   22d88:	ldr	r0, [r0, #8]
   22d8c:	ldr	r1, [sp, #8]
   22d90:	add	r0, r0, r1, lsl #2
   22d94:	ldr	r1, [r0, #-4]
   22d98:	str	r1, [r0]
   22d9c:	ldr	r0, [sp, #8]
   22da0:	mvn	r1, #0
   22da4:	add	r0, r0, r1
   22da8:	str	r0, [sp, #8]
   22dac:	b	22d78 <__assert_fail@plt+0x11874>
   22db0:	b	22e3c <__assert_fail@plt+0x11938>
   22db4:	ldr	r0, [fp, #-8]
   22db8:	ldr	r0, [r0, #4]
   22dbc:	str	r0, [sp, #8]
   22dc0:	ldr	r0, [fp, #-8]
   22dc4:	ldr	r0, [r0, #8]
   22dc8:	ldr	r1, [sp, #8]
   22dcc:	sub	r1, r1, #1
   22dd0:	add	r0, r0, r1, lsl #2
   22dd4:	ldr	r0, [r0]
   22dd8:	ldr	r1, [sp, #12]
   22ddc:	cmp	r0, r1
   22de0:	ble	22e10 <__assert_fail@plt+0x1190c>
   22de4:	ldr	r0, [fp, #-8]
   22de8:	ldr	r0, [r0, #8]
   22dec:	ldr	r1, [sp, #8]
   22df0:	add	r0, r0, r1, lsl #2
   22df4:	ldr	r1, [r0, #-4]
   22df8:	str	r1, [r0]
   22dfc:	ldr	r0, [sp, #8]
   22e00:	mvn	r1, #0
   22e04:	add	r0, r0, r1
   22e08:	str	r0, [sp, #8]
   22e0c:	b	22dc0 <__assert_fail@plt+0x118bc>
   22e10:	ldr	r0, [fp, #-8]
   22e14:	ldr	r0, [r0, #8]
   22e18:	ldr	r1, [sp, #8]
   22e1c:	sub	r1, r1, #1
   22e20:	add	r0, r0, r1, lsl #2
   22e24:	ldr	r0, [r0]
   22e28:	ldr	r1, [sp, #12]
   22e2c:	cmp	r0, r1
   22e30:	bge	22e38 <__assert_fail@plt+0x11934>
   22e34:	b	22e38 <__assert_fail@plt+0x11934>
   22e38:	b	22e3c <__assert_fail@plt+0x11938>
   22e3c:	ldr	r0, [sp, #12]
   22e40:	ldr	r1, [fp, #-8]
   22e44:	ldr	r1, [r1, #8]
   22e48:	ldr	r2, [sp, #8]
   22e4c:	add	r1, r1, r2, lsl #2
   22e50:	str	r0, [r1]
   22e54:	ldr	r0, [fp, #-8]
   22e58:	ldr	r1, [r0, #4]
   22e5c:	add	r1, r1, #1
   22e60:	str	r1, [r0, #4]
   22e64:	movw	r0, #1
   22e68:	and	r0, r0, #1
   22e6c:	strb	r0, [fp, #-1]
   22e70:	ldrb	r0, [fp, #-1]
   22e74:	and	r0, r0, #1
   22e78:	mov	sp, fp
   22e7c:	pop	{fp, pc}
   22e80:	sub	sp, sp, #24
   22e84:	str	r0, [sp, #16]
   22e88:	str	r1, [sp, #12]
   22e8c:	str	r2, [sp, #8]
   22e90:	ldr	r0, [sp, #16]
   22e94:	ldr	r0, [r0, #8]
   22e98:	sub	r0, r0, #1
   22e9c:	str	r0, [sp, #4]
   22ea0:	ldr	r0, [sp, #16]
   22ea4:	ldr	r0, [r0]
   22ea8:	ldr	r1, [sp, #4]
   22eac:	add	r0, r0, r1, lsl #3
   22eb0:	ldr	r0, [r0, #4]
   22eb4:	lsr	r0, r0, #18
   22eb8:	and	r0, r0, #1
   22ebc:	cmp	r0, #0
   22ec0:	movw	r0, #0
   22ec4:	str	r0, [sp]
   22ec8:	beq	22ee0 <__assert_fail@plt+0x119dc>
   22ecc:	ldr	r0, [sp, #4]
   22ed0:	cmp	r0, #0
   22ed4:	movw	r0, #0
   22ed8:	movgt	r0, #1
   22edc:	str	r0, [sp]
   22ee0:	ldr	r0, [sp]
   22ee4:	tst	r0, #1
   22ee8:	beq	22f5c <__assert_fail@plt+0x11a58>
   22eec:	ldr	r0, [sp, #12]
   22ef0:	ldr	r1, [sp, #16]
   22ef4:	ldr	r1, [r1, #16]
   22ef8:	ldr	r2, [sp, #4]
   22efc:	add	r1, r1, r2, lsl #2
   22f00:	ldr	r1, [r1]
   22f04:	cmp	r0, r1
   22f08:	bne	22f44 <__assert_fail@plt+0x11a40>
   22f0c:	ldr	r0, [sp, #8]
   22f10:	ldr	r1, [sp, #16]
   22f14:	ldr	r1, [r1]
   22f18:	ldr	r2, [sp, #4]
   22f1c:	add	r1, r1, r2, lsl #3
   22f20:	ldr	r1, [r1, #4]
   22f24:	lsr	r1, r1, #8
   22f28:	movw	r2, #1023	; 0x3ff
   22f2c:	and	r1, r1, r2
   22f30:	cmp	r0, r1
   22f34:	bne	22f44 <__assert_fail@plt+0x11a40>
   22f38:	ldr	r0, [sp, #4]
   22f3c:	str	r0, [sp, #20]
   22f40:	b	22f64 <__assert_fail@plt+0x11a60>
   22f44:	b	22f48 <__assert_fail@plt+0x11a44>
   22f48:	ldr	r0, [sp, #4]
   22f4c:	mvn	r1, #0
   22f50:	add	r0, r0, r1
   22f54:	str	r0, [sp, #4]
   22f58:	b	22ea0 <__assert_fail@plt+0x1199c>
   22f5c:	mvn	r0, #0
   22f60:	str	r0, [sp, #20]
   22f64:	ldr	r0, [sp, #20]
   22f68:	add	sp, sp, #24
   22f6c:	bx	lr
   22f70:	push	{fp, lr}
   22f74:	mov	fp, sp
   22f78:	sub	sp, sp, #16
   22f7c:	str	r0, [sp, #8]
   22f80:	str	r1, [sp, #4]
   22f84:	ldr	r0, [sp, #8]
   22f88:	ldr	r0, [r0]
   22f8c:	ldr	r1, [sp, #8]
   22f90:	ldr	r1, [r1, #4]
   22f94:	cmp	r0, r1
   22f98:	bne	22ff4 <__assert_fail@plt+0x11af0>
   22f9c:	ldr	r0, [sp, #8]
   22fa0:	ldr	r1, [r0]
   22fa4:	mov	r2, #2
   22fa8:	add	r1, r2, r1, lsl #1
   22fac:	str	r1, [r0]
   22fb0:	ldr	r0, [sp, #8]
   22fb4:	ldr	r1, [r0]
   22fb8:	ldr	r0, [r0, #8]
   22fbc:	lsl	r1, r1, #2
   22fc0:	bl	335bc <__assert_fail@plt+0x220b8>
   22fc4:	str	r0, [sp]
   22fc8:	ldr	r0, [sp]
   22fcc:	movw	r1, #0
   22fd0:	cmp	r0, r1
   22fd4:	bne	22fe8 <__assert_fail@plt+0x11ae4>
   22fd8:	movw	r0, #0
   22fdc:	and	r0, r0, #1
   22fe0:	strb	r0, [fp, #-1]
   22fe4:	b	23020 <__assert_fail@plt+0x11b1c>
   22fe8:	ldr	r0, [sp]
   22fec:	ldr	r1, [sp, #8]
   22ff0:	str	r0, [r1, #8]
   22ff4:	ldr	r0, [sp, #4]
   22ff8:	ldr	r1, [sp, #8]
   22ffc:	ldr	r2, [r1, #4]
   23000:	ldr	r3, [r1, #8]
   23004:	add	ip, r2, #1
   23008:	str	ip, [r1, #4]
   2300c:	add	r1, r3, r2, lsl #2
   23010:	str	r0, [r1]
   23014:	movw	r0, #1
   23018:	and	r0, r0, #1
   2301c:	strb	r0, [fp, #-1]
   23020:	ldrb	r0, [fp, #-1]
   23024:	and	r0, r0, #1
   23028:	mov	sp, fp
   2302c:	pop	{fp, pc}
   23030:	push	{fp, lr}
   23034:	mov	fp, sp
   23038:	sub	sp, sp, #16
   2303c:	str	r0, [sp, #8]
   23040:	str	r1, [sp, #4]
   23044:	ldr	r0, [sp, #4]
   23048:	ldr	r0, [r0, #4]
   2304c:	ldr	r1, [sp, #8]
   23050:	str	r0, [r1, #4]
   23054:	ldr	r0, [sp, #4]
   23058:	ldr	r0, [r0, #4]
   2305c:	cmp	r0, #0
   23060:	ble	230dc <__assert_fail@plt+0x11bd8>
   23064:	ldr	r0, [sp, #8]
   23068:	ldr	r1, [r0, #4]
   2306c:	str	r1, [r0]
   23070:	ldr	r0, [sp, #8]
   23074:	ldr	r0, [r0]
   23078:	lsl	r0, r0, #2
   2307c:	bl	3354c <__assert_fail@plt+0x22048>
   23080:	ldr	r1, [sp, #8]
   23084:	str	r0, [r1, #8]
   23088:	ldr	r0, [sp, #8]
   2308c:	ldr	r0, [r0, #8]
   23090:	movw	r1, #0
   23094:	cmp	r0, r1
   23098:	bne	230bc <__assert_fail@plt+0x11bb8>
   2309c:	ldr	r0, [sp, #8]
   230a0:	movw	r1, #0
   230a4:	str	r1, [r0, #4]
   230a8:	ldr	r0, [sp, #8]
   230ac:	str	r1, [r0]
   230b0:	movw	r0, #12
   230b4:	str	r0, [fp, #-4]
   230b8:	b	230f8 <__assert_fail@plt+0x11bf4>
   230bc:	ldr	r0, [sp, #8]
   230c0:	ldr	r0, [r0, #8]
   230c4:	ldr	r1, [sp, #4]
   230c8:	ldr	r2, [r1, #4]
   230cc:	ldr	r1, [r1, #8]
   230d0:	lsl	r2, r2, #2
   230d4:	bl	112a0 <memcpy@plt>
   230d8:	b	230f0 <__assert_fail@plt+0x11bec>
   230dc:	ldr	r0, [sp, #8]
   230e0:	movw	r1, #0
   230e4:	and	r1, r1, #255	; 0xff
   230e8:	movw	r2, #12
   230ec:	bl	11420 <memset@plt>
   230f0:	movw	r0, #0
   230f4:	str	r0, [fp, #-4]
   230f8:	ldr	r0, [fp, #-4]
   230fc:	mov	sp, fp
   23100:	pop	{fp, pc}
   23104:	sub	sp, sp, #28
   23108:	str	r0, [sp, #20]
   2310c:	str	r1, [sp, #16]
   23110:	ldr	r0, [sp, #20]
   23114:	ldr	r0, [r0, #4]
   23118:	cmp	r0, #0
   2311c:	bgt	2312c <__assert_fail@plt+0x11c28>
   23120:	movw	r0, #0
   23124:	str	r0, [sp, #24]
   23128:	b	231e8 <__assert_fail@plt+0x11ce4>
   2312c:	movw	r0, #0
   23130:	str	r0, [sp, #12]
   23134:	ldr	r0, [sp, #20]
   23138:	ldr	r0, [r0, #4]
   2313c:	sub	r0, r0, #1
   23140:	str	r0, [sp, #8]
   23144:	ldr	r0, [sp, #12]
   23148:	ldr	r1, [sp, #8]
   2314c:	cmp	r0, r1
   23150:	bcs	231a4 <__assert_fail@plt+0x11ca0>
   23154:	ldr	r0, [sp, #12]
   23158:	ldr	r1, [sp, #8]
   2315c:	add	r0, r0, r1
   23160:	lsr	r0, r0, #1
   23164:	str	r0, [sp, #4]
   23168:	ldr	r0, [sp, #20]
   2316c:	ldr	r0, [r0, #8]
   23170:	ldr	r1, [sp, #4]
   23174:	add	r0, r0, r1, lsl #2
   23178:	ldr	r0, [r0]
   2317c:	ldr	r1, [sp, #16]
   23180:	cmp	r0, r1
   23184:	bge	23198 <__assert_fail@plt+0x11c94>
   23188:	ldr	r0, [sp, #4]
   2318c:	add	r0, r0, #1
   23190:	str	r0, [sp, #12]
   23194:	b	231a0 <__assert_fail@plt+0x11c9c>
   23198:	ldr	r0, [sp, #4]
   2319c:	str	r0, [sp, #8]
   231a0:	b	23144 <__assert_fail@plt+0x11c40>
   231a4:	ldr	r0, [sp, #20]
   231a8:	ldr	r0, [r0, #8]
   231ac:	ldr	r1, [sp, #12]
   231b0:	add	r0, r0, r1, lsl #2
   231b4:	ldr	r0, [r0]
   231b8:	ldr	r1, [sp, #16]
   231bc:	cmp	r0, r1
   231c0:	bne	231d4 <__assert_fail@plt+0x11cd0>
   231c4:	ldr	r0, [sp, #12]
   231c8:	add	r0, r0, #1
   231cc:	str	r0, [sp]
   231d0:	b	231e0 <__assert_fail@plt+0x11cdc>
   231d4:	movw	r0, #0
   231d8:	str	r0, [sp]
   231dc:	b	231e0 <__assert_fail@plt+0x11cdc>
   231e0:	ldr	r0, [sp]
   231e4:	str	r0, [sp, #24]
   231e8:	ldr	r0, [sp, #24]
   231ec:	add	sp, sp, #28
   231f0:	bx	lr
   231f4:	push	{fp, lr}
   231f8:	mov	fp, sp
   231fc:	sub	sp, sp, #40	; 0x28
   23200:	str	r0, [fp, #-8]
   23204:	str	r1, [fp, #-12]
   23208:	str	r2, [fp, #-16]
   2320c:	str	r3, [sp, #20]
   23210:	ldr	r0, [fp, #-16]
   23214:	ldr	r0, [r0, #4]
   23218:	cmp	r0, #0
   2321c:	bne	23234 <__assert_fail@plt+0x11d30>
   23220:	ldr	r0, [fp, #-8]
   23224:	movw	r1, #0
   23228:	str	r1, [r0]
   2322c:	str	r1, [fp, #-4]
   23230:	b	23344 <__assert_fail@plt+0x11e40>
   23234:	ldr	r0, [fp, #-16]
   23238:	ldr	r1, [sp, #20]
   2323c:	bl	23350 <__assert_fail@plt+0x11e4c>
   23240:	str	r0, [sp, #16]
   23244:	ldr	r0, [fp, #-12]
   23248:	ldr	r0, [r0, #32]
   2324c:	ldr	r1, [sp, #16]
   23250:	ldr	r2, [fp, #-12]
   23254:	ldr	r2, [r2, #68]	; 0x44
   23258:	and	r1, r1, r2
   2325c:	movw	r2, #12
   23260:	mul	r1, r1, r2
   23264:	add	r0, r0, r1
   23268:	str	r0, [sp, #8]
   2326c:	movw	r0, #0
   23270:	str	r0, [sp, #4]
   23274:	ldr	r0, [sp, #4]
   23278:	ldr	r1, [sp, #8]
   2327c:	ldr	r1, [r1]
   23280:	cmp	r0, r1
   23284:	bge	23308 <__assert_fail@plt+0x11e04>
   23288:	ldr	r0, [sp, #8]
   2328c:	ldr	r0, [r0, #8]
   23290:	ldr	r1, [sp, #4]
   23294:	add	r0, r0, r1, lsl #2
   23298:	ldr	r0, [r0]
   2329c:	str	r0, [sp]
   232a0:	ldr	r0, [sp]
   232a4:	ldr	r0, [r0]
   232a8:	ldr	r1, [sp, #16]
   232ac:	cmp	r0, r1
   232b0:	bne	232f4 <__assert_fail@plt+0x11df0>
   232b4:	ldr	r0, [sp]
   232b8:	ldrb	r0, [r0, #52]	; 0x34
   232bc:	and	r0, r0, #15
   232c0:	and	r0, r0, #255	; 0xff
   232c4:	ldr	r1, [sp, #20]
   232c8:	cmp	r0, r1
   232cc:	bne	232f4 <__assert_fail@plt+0x11df0>
   232d0:	ldr	r0, [sp]
   232d4:	ldr	r0, [r0, #40]	; 0x28
   232d8:	ldr	r1, [fp, #-16]
   232dc:	bl	233c8 <__assert_fail@plt+0x11ec4>
   232e0:	tst	r0, #1
   232e4:	beq	232f4 <__assert_fail@plt+0x11df0>
   232e8:	ldr	r0, [sp]
   232ec:	str	r0, [fp, #-4]
   232f0:	b	23344 <__assert_fail@plt+0x11e40>
   232f4:	b	232f8 <__assert_fail@plt+0x11df4>
   232f8:	ldr	r0, [sp, #4]
   232fc:	add	r0, r0, #1
   23300:	str	r0, [sp, #4]
   23304:	b	23274 <__assert_fail@plt+0x11d70>
   23308:	ldr	r0, [fp, #-12]
   2330c:	ldr	r1, [fp, #-16]
   23310:	ldr	r2, [sp, #20]
   23314:	ldr	r3, [sp, #16]
   23318:	bl	23498 <__assert_fail@plt+0x11f94>
   2331c:	str	r0, [sp, #12]
   23320:	ldr	r0, [sp, #12]
   23324:	movw	r1, #0
   23328:	cmp	r0, r1
   2332c:	bne	2333c <__assert_fail@plt+0x11e38>
   23330:	ldr	r0, [fp, #-8]
   23334:	movw	r1, #12
   23338:	str	r1, [r0]
   2333c:	ldr	r0, [sp, #12]
   23340:	str	r0, [fp, #-4]
   23344:	ldr	r0, [fp, #-4]
   23348:	mov	sp, fp
   2334c:	pop	{fp, pc}
   23350:	sub	sp, sp, #16
   23354:	str	r0, [sp, #12]
   23358:	str	r1, [sp, #8]
   2335c:	ldr	r0, [sp, #12]
   23360:	ldr	r0, [r0, #4]
   23364:	ldr	r1, [sp, #8]
   23368:	add	r0, r0, r1
   2336c:	str	r0, [sp, #4]
   23370:	movw	r0, #0
   23374:	str	r0, [sp]
   23378:	ldr	r0, [sp]
   2337c:	ldr	r1, [sp, #12]
   23380:	ldr	r1, [r1, #4]
   23384:	cmp	r0, r1
   23388:	bge	233bc <__assert_fail@plt+0x11eb8>
   2338c:	ldr	r0, [sp, #12]
   23390:	ldr	r0, [r0, #8]
   23394:	ldr	r1, [sp]
   23398:	add	r0, r0, r1, lsl #2
   2339c:	ldr	r0, [r0]
   233a0:	ldr	r1, [sp, #4]
   233a4:	add	r0, r1, r0
   233a8:	str	r0, [sp, #4]
   233ac:	ldr	r0, [sp]
   233b0:	add	r0, r0, #1
   233b4:	str	r0, [sp]
   233b8:	b	23378 <__assert_fail@plt+0x11e74>
   233bc:	ldr	r0, [sp, #4]
   233c0:	add	sp, sp, #16
   233c4:	bx	lr
   233c8:	sub	sp, sp, #16
   233cc:	str	r0, [sp, #8]
   233d0:	str	r1, [sp, #4]
   233d4:	ldr	r0, [sp, #8]
   233d8:	movw	r1, #0
   233dc:	cmp	r0, r1
   233e0:	beq	2340c <__assert_fail@plt+0x11f08>
   233e4:	ldr	r0, [sp, #4]
   233e8:	movw	r1, #0
   233ec:	cmp	r0, r1
   233f0:	beq	2340c <__assert_fail@plt+0x11f08>
   233f4:	ldr	r0, [sp, #8]
   233f8:	ldr	r0, [r0, #4]
   233fc:	ldr	r1, [sp, #4]
   23400:	ldr	r1, [r1, #4]
   23404:	cmp	r0, r1
   23408:	beq	2341c <__assert_fail@plt+0x11f18>
   2340c:	movw	r0, #0
   23410:	and	r0, r0, #1
   23414:	strb	r0, [sp, #15]
   23418:	b	23488 <__assert_fail@plt+0x11f84>
   2341c:	ldr	r0, [sp, #8]
   23420:	ldr	r0, [r0, #4]
   23424:	str	r0, [sp]
   23428:	ldr	r0, [sp]
   2342c:	mvn	r1, #0
   23430:	add	r0, r0, r1
   23434:	str	r0, [sp]
   23438:	cmp	r0, #0
   2343c:	blt	2347c <__assert_fail@plt+0x11f78>
   23440:	ldr	r0, [sp, #8]
   23444:	ldr	r0, [r0, #8]
   23448:	ldr	r1, [sp]
   2344c:	ldr	r0, [r0, r1, lsl #2]
   23450:	ldr	r2, [sp, #4]
   23454:	ldr	r2, [r2, #8]
   23458:	add	r1, r2, r1, lsl #2
   2345c:	ldr	r1, [r1]
   23460:	cmp	r0, r1
   23464:	beq	23478 <__assert_fail@plt+0x11f74>
   23468:	movw	r0, #0
   2346c:	and	r0, r0, #1
   23470:	strb	r0, [sp, #15]
   23474:	b	23488 <__assert_fail@plt+0x11f84>
   23478:	b	23428 <__assert_fail@plt+0x11f24>
   2347c:	movw	r0, #1
   23480:	and	r0, r0, #1
   23484:	strb	r0, [sp, #15]
   23488:	ldrb	r0, [sp, #15]
   2348c:	and	r0, r0, #1
   23490:	add	sp, sp, #16
   23494:	bx	lr
   23498:	push	{fp, lr}
   2349c:	mov	fp, sp
   234a0:	sub	sp, sp, #56	; 0x38
   234a4:	str	r0, [fp, #-8]
   234a8:	str	r1, [fp, #-12]
   234ac:	str	r2, [fp, #-16]
   234b0:	str	r3, [fp, #-20]	; 0xffffffec
   234b4:	movw	r0, #0
   234b8:	str	r0, [sp, #28]
   234bc:	movw	r0, #56	; 0x38
   234c0:	movw	r1, #1
   234c4:	bl	334b0 <__assert_fail@plt+0x21fac>
   234c8:	str	r0, [sp, #20]
   234cc:	ldr	r0, [sp, #20]
   234d0:	movw	r1, #0
   234d4:	cmp	r0, r1
   234d8:	bne	234e8 <__assert_fail@plt+0x11fe4>
   234dc:	movw	r0, #0
   234e0:	str	r0, [fp, #-4]
   234e4:	b	237e4 <__assert_fail@plt+0x122e0>
   234e8:	ldr	r0, [sp, #20]
   234ec:	add	r0, r0, #4
   234f0:	ldr	r1, [fp, #-12]
   234f4:	bl	23030 <__assert_fail@plt+0x11b2c>
   234f8:	str	r0, [sp, #24]
   234fc:	ldr	r0, [sp, #24]
   23500:	cmp	r0, #0
   23504:	beq	2351c <__assert_fail@plt+0x12018>
   23508:	ldr	r0, [sp, #20]
   2350c:	bl	34c20 <__assert_fail@plt+0x2371c>
   23510:	movw	r0, #0
   23514:	str	r0, [fp, #-4]
   23518:	b	237e4 <__assert_fail@plt+0x122e0>
   2351c:	ldr	r0, [fp, #-16]
   23520:	ldr	r1, [sp, #20]
   23524:	ldrb	r2, [r1, #52]	; 0x34
   23528:	and	r0, r0, #15
   2352c:	bic	r2, r2, #15
   23530:	orr	r0, r2, r0
   23534:	strb	r0, [r1, #52]	; 0x34
   23538:	ldr	r0, [sp, #20]
   2353c:	add	r0, r0, #4
   23540:	ldr	r1, [sp, #20]
   23544:	str	r0, [r1, #40]	; 0x28
   23548:	movw	r0, #0
   2354c:	str	r0, [fp, #-24]	; 0xffffffe8
   23550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23554:	ldr	r1, [fp, #-12]
   23558:	ldr	r1, [r1, #4]
   2355c:	cmp	r0, r1
   23560:	bge	237ac <__assert_fail@plt+0x122a8>
   23564:	ldr	r0, [fp, #-8]
   23568:	ldr	r0, [r0]
   2356c:	ldr	r1, [fp, #-12]
   23570:	ldr	r1, [r1, #8]
   23574:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23578:	ldr	r1, [r1, r2, lsl #2]
   2357c:	add	r0, r0, r1, lsl #3
   23580:	str	r0, [sp, #16]
   23584:	ldr	r0, [sp, #16]
   23588:	ldr	r0, [r0, #4]
   2358c:	and	r0, r0, #255	; 0xff
   23590:	str	r0, [sp, #12]
   23594:	ldr	r0, [sp, #16]
   23598:	ldr	r0, [r0, #4]
   2359c:	lsr	r0, r0, #8
   235a0:	movw	r1, #1023	; 0x3ff
   235a4:	and	r0, r0, r1
   235a8:	str	r0, [sp, #8]
   235ac:	ldr	r0, [sp, #12]
   235b0:	cmp	r0, #1
   235b4:	bne	235c8 <__assert_fail@plt+0x120c4>
   235b8:	ldr	r0, [sp, #8]
   235bc:	cmp	r0, #0
   235c0:	bne	235c8 <__assert_fail@plt+0x120c4>
   235c4:	b	2379c <__assert_fail@plt+0x12298>
   235c8:	ldr	r0, [sp, #16]
   235cc:	ldr	r0, [r0, #4]
   235d0:	ldr	r1, [sp, #20]
   235d4:	ldrb	r2, [r1, #52]	; 0x34
   235d8:	lsr	r3, r2, #5
   235dc:	orr	r0, r3, r0, lsr #20
   235e0:	and	r0, r0, #1
   235e4:	lsl	r0, r0, #5
   235e8:	bic	r2, r2, #32
   235ec:	orr	r0, r2, r0
   235f0:	strb	r0, [r1, #52]	; 0x34
   235f4:	ldr	r0, [sp, #12]
   235f8:	cmp	r0, #2
   235fc:	bne	2361c <__assert_fail@plt+0x12118>
   23600:	ldr	r0, [sp, #20]
   23604:	ldrb	r1, [r0, #52]	; 0x34
   23608:	bic	r1, r1, #16
   2360c:	movw	r2, #16
   23610:	orr	r1, r1, r2
   23614:	strb	r1, [r0, #52]	; 0x34
   23618:	b	23644 <__assert_fail@plt+0x12140>
   2361c:	ldr	r0, [sp, #12]
   23620:	cmp	r0, #4
   23624:	bne	23640 <__assert_fail@plt+0x1213c>
   23628:	ldr	r0, [sp, #20]
   2362c:	ldrb	r1, [r0, #52]	; 0x34
   23630:	bic	r1, r1, #64	; 0x40
   23634:	movw	r2, #64	; 0x40
   23638:	orr	r1, r1, r2
   2363c:	strb	r1, [r0, #52]	; 0x34
   23640:	b	23644 <__assert_fail@plt+0x12140>
   23644:	ldr	r0, [sp, #8]
   23648:	cmp	r0, #0
   2364c:	beq	23798 <__assert_fail@plt+0x12294>
   23650:	ldr	r0, [sp, #20]
   23654:	ldr	r0, [r0, #40]	; 0x28
   23658:	ldr	r1, [sp, #20]
   2365c:	add	r1, r1, #4
   23660:	cmp	r0, r1
   23664:	bne	236f0 <__assert_fail@plt+0x121ec>
   23668:	movw	r0, #12
   2366c:	bl	3354c <__assert_fail@plt+0x22048>
   23670:	str	r0, [sp, #4]
   23674:	ldr	r0, [sp, #4]
   23678:	movw	r1, #0
   2367c:	cmp	r0, r1
   23680:	bne	23698 <__assert_fail@plt+0x12194>
   23684:	ldr	r0, [sp, #20]
   23688:	bl	18ad8 <__assert_fail@plt+0x75d4>
   2368c:	movw	r0, #0
   23690:	str	r0, [fp, #-4]
   23694:	b	237e4 <__assert_fail@plt+0x122e0>
   23698:	ldr	r0, [sp, #4]
   2369c:	ldr	r1, [sp, #20]
   236a0:	str	r0, [r1, #40]	; 0x28
   236a4:	ldr	r0, [sp, #20]
   236a8:	ldr	r0, [r0, #40]	; 0x28
   236ac:	ldr	r1, [fp, #-12]
   236b0:	bl	23030 <__assert_fail@plt+0x11b2c>
   236b4:	cmp	r0, #0
   236b8:	beq	236d0 <__assert_fail@plt+0x121cc>
   236bc:	ldr	r0, [sp, #20]
   236c0:	bl	18ad8 <__assert_fail@plt+0x75d4>
   236c4:	movw	r0, #0
   236c8:	str	r0, [fp, #-4]
   236cc:	b	237e4 <__assert_fail@plt+0x122e0>
   236d0:	mov	r0, #0
   236d4:	str	r0, [sp, #28]
   236d8:	ldr	r0, [sp, #20]
   236dc:	ldrb	r1, [r0, #52]	; 0x34
   236e0:	and	r1, r1, #127	; 0x7f
   236e4:	movw	r2, #128	; 0x80
   236e8:	orr	r1, r1, r2
   236ec:	strb	r1, [r0, #52]	; 0x34
   236f0:	ldr	r0, [sp, #8]
   236f4:	and	r0, r0, #1
   236f8:	cmp	r0, #0
   236fc:	beq	23710 <__assert_fail@plt+0x1220c>
   23700:	ldr	r0, [fp, #-16]
   23704:	and	r0, r0, #1
   23708:	cmp	r0, #0
   2370c:	beq	23770 <__assert_fail@plt+0x1226c>
   23710:	ldr	r0, [sp, #8]
   23714:	and	r0, r0, #2
   23718:	cmp	r0, #0
   2371c:	beq	23730 <__assert_fail@plt+0x1222c>
   23720:	ldr	r0, [fp, #-16]
   23724:	and	r0, r0, #1
   23728:	cmp	r0, #0
   2372c:	bne	23770 <__assert_fail@plt+0x1226c>
   23730:	ldr	r0, [sp, #8]
   23734:	and	r0, r0, #16
   23738:	cmp	r0, #0
   2373c:	beq	23750 <__assert_fail@plt+0x1224c>
   23740:	ldr	r0, [fp, #-16]
   23744:	and	r0, r0, #2
   23748:	cmp	r0, #0
   2374c:	beq	23770 <__assert_fail@plt+0x1226c>
   23750:	ldr	r0, [sp, #8]
   23754:	and	r0, r0, #64	; 0x40
   23758:	cmp	r0, #0
   2375c:	beq	23794 <__assert_fail@plt+0x12290>
   23760:	ldr	r0, [fp, #-16]
   23764:	and	r0, r0, #4
   23768:	cmp	r0, #0
   2376c:	bne	23794 <__assert_fail@plt+0x12290>
   23770:	ldr	r0, [sp, #20]
   23774:	add	r0, r0, #4
   23778:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2377c:	ldr	r2, [sp, #28]
   23780:	sub	r1, r1, r2
   23784:	bl	237f0 <__assert_fail@plt+0x122ec>
   23788:	ldr	r0, [sp, #28]
   2378c:	add	r0, r0, #1
   23790:	str	r0, [sp, #28]
   23794:	b	23798 <__assert_fail@plt+0x12294>
   23798:	b	2379c <__assert_fail@plt+0x12298>
   2379c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   237a0:	add	r0, r0, #1
   237a4:	str	r0, [fp, #-24]	; 0xffffffe8
   237a8:	b	23550 <__assert_fail@plt+0x1204c>
   237ac:	ldr	r0, [fp, #-8]
   237b0:	ldr	r1, [sp, #20]
   237b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   237b8:	bl	23878 <__assert_fail@plt+0x12374>
   237bc:	str	r0, [sp, #24]
   237c0:	ldr	r0, [sp, #24]
   237c4:	cmp	r0, #0
   237c8:	beq	237dc <__assert_fail@plt+0x122d8>
   237cc:	ldr	r0, [sp, #20]
   237d0:	bl	18ad8 <__assert_fail@plt+0x75d4>
   237d4:	movw	r0, #0
   237d8:	str	r0, [sp, #20]
   237dc:	ldr	r0, [sp, #20]
   237e0:	str	r0, [fp, #-4]
   237e4:	ldr	r0, [fp, #-4]
   237e8:	mov	sp, fp
   237ec:	pop	{fp, pc}
   237f0:	sub	sp, sp, #8
   237f4:	str	r0, [sp, #4]
   237f8:	str	r1, [sp]
   237fc:	ldr	r0, [sp]
   23800:	cmp	r0, #0
   23804:	blt	2381c <__assert_fail@plt+0x12318>
   23808:	ldr	r0, [sp]
   2380c:	ldr	r1, [sp, #4]
   23810:	ldr	r1, [r1, #4]
   23814:	cmp	r0, r1
   23818:	blt	23820 <__assert_fail@plt+0x1231c>
   2381c:	b	23870 <__assert_fail@plt+0x1236c>
   23820:	ldr	r0, [sp, #4]
   23824:	ldr	r1, [r0, #4]
   23828:	mvn	r2, #0
   2382c:	add	r1, r1, r2
   23830:	str	r1, [r0, #4]
   23834:	ldr	r0, [sp]
   23838:	ldr	r1, [sp, #4]
   2383c:	ldr	r1, [r1, #4]
   23840:	cmp	r0, r1
   23844:	bge	23870 <__assert_fail@plt+0x1236c>
   23848:	ldr	r0, [sp, #4]
   2384c:	ldr	r0, [r0, #8]
   23850:	ldr	r1, [sp]
   23854:	add	r0, r0, r1, lsl #2
   23858:	ldr	r1, [r0, #4]
   2385c:	str	r1, [r0]
   23860:	ldr	r0, [sp]
   23864:	add	r0, r0, #1
   23868:	str	r0, [sp]
   2386c:	b	23834 <__assert_fail@plt+0x12330>
   23870:	add	sp, sp, #8
   23874:	bx	lr
   23878:	push	{fp, lr}
   2387c:	mov	fp, sp
   23880:	sub	sp, sp, #40	; 0x28
   23884:	str	r0, [fp, #-8]
   23888:	str	r1, [fp, #-12]
   2388c:	str	r2, [fp, #-16]
   23890:	ldr	r0, [fp, #-16]
   23894:	ldr	r1, [fp, #-12]
   23898:	str	r0, [r1]
   2389c:	ldr	r0, [fp, #-12]
   238a0:	add	r0, r0, #16
   238a4:	ldr	r1, [fp, #-12]
   238a8:	ldr	r1, [r1, #8]
   238ac:	bl	221e0 <__assert_fail@plt+0x10cdc>
   238b0:	str	r0, [sp, #16]
   238b4:	ldr	r0, [sp, #16]
   238b8:	cmp	r0, #0
   238bc:	beq	238cc <__assert_fail@plt+0x123c8>
   238c0:	movw	r0, #12
   238c4:	str	r0, [fp, #-4]
   238c8:	b	23a24 <__assert_fail@plt+0x12520>
   238cc:	movw	r0, #0
   238d0:	str	r0, [sp, #12]
   238d4:	ldr	r0, [sp, #12]
   238d8:	ldr	r1, [fp, #-12]
   238dc:	ldr	r1, [r1, #8]
   238e0:	cmp	r0, r1
   238e4:	bge	2395c <__assert_fail@plt+0x12458>
   238e8:	ldr	r0, [fp, #-12]
   238ec:	ldr	r0, [r0, #12]
   238f0:	ldr	r1, [sp, #12]
   238f4:	ldr	r0, [r0, r1, lsl #2]
   238f8:	str	r0, [sp, #8]
   238fc:	ldr	r0, [fp, #-8]
   23900:	ldr	r0, [r0]
   23904:	ldr	r1, [sp, #8]
   23908:	add	r0, r0, r1, lsl #3
   2390c:	ldr	r0, [r0, #4]
   23910:	and	r0, r0, #255	; 0xff
   23914:	and	r0, r0, #8
   23918:	cmp	r0, #0
   2391c:	bne	23948 <__assert_fail@plt+0x12444>
   23920:	ldr	r0, [fp, #-12]
   23924:	add	r0, r0, #16
   23928:	ldr	r1, [sp, #8]
   2392c:	bl	22f70 <__assert_fail@plt+0x11a6c>
   23930:	tst	r0, #1
   23934:	bne	23944 <__assert_fail@plt+0x12440>
   23938:	movw	r0, #12
   2393c:	str	r0, [fp, #-4]
   23940:	b	23a24 <__assert_fail@plt+0x12520>
   23944:	b	23948 <__assert_fail@plt+0x12444>
   23948:	b	2394c <__assert_fail@plt+0x12448>
   2394c:	ldr	r0, [sp, #12]
   23950:	add	r0, r0, #1
   23954:	str	r0, [sp, #12]
   23958:	b	238d4 <__assert_fail@plt+0x123d0>
   2395c:	ldr	r0, [fp, #-8]
   23960:	ldr	r0, [r0, #32]
   23964:	ldr	r1, [fp, #-16]
   23968:	ldr	r2, [fp, #-8]
   2396c:	ldr	r2, [r2, #68]	; 0x44
   23970:	and	r1, r1, r2
   23974:	movw	r2, #12
   23978:	mul	r1, r1, r2
   2397c:	add	r0, r0, r1
   23980:	str	r0, [sp, #20]
   23984:	ldr	r0, [sp, #20]
   23988:	ldr	r0, [r0, #4]
   2398c:	ldr	r1, [sp, #20]
   23990:	ldr	r1, [r1]
   23994:	cmp	r0, r1
   23998:	bgt	239fc <__assert_fail@plt+0x124f8>
   2399c:	ldr	r0, [sp, #20]
   239a0:	ldr	r0, [r0]
   239a4:	mov	r1, #2
   239a8:	add	r0, r1, r0, lsl #1
   239ac:	str	r0, [sp, #4]
   239b0:	ldr	r0, [sp, #20]
   239b4:	ldr	r0, [r0, #8]
   239b8:	ldr	r1, [sp, #4]
   239bc:	lsl	r1, r1, #2
   239c0:	bl	335bc <__assert_fail@plt+0x220b8>
   239c4:	str	r0, [sp]
   239c8:	ldr	r0, [sp]
   239cc:	movw	r1, #0
   239d0:	cmp	r0, r1
   239d4:	bne	239e4 <__assert_fail@plt+0x124e0>
   239d8:	movw	r0, #12
   239dc:	str	r0, [fp, #-4]
   239e0:	b	23a24 <__assert_fail@plt+0x12520>
   239e4:	ldr	r0, [sp]
   239e8:	ldr	r1, [sp, #20]
   239ec:	str	r0, [r1, #8]
   239f0:	ldr	r0, [sp, #4]
   239f4:	ldr	r1, [sp, #20]
   239f8:	str	r0, [r1, #4]
   239fc:	ldr	r0, [fp, #-12]
   23a00:	ldr	r1, [sp, #20]
   23a04:	ldr	r2, [r1]
   23a08:	ldr	r3, [r1, #8]
   23a0c:	add	ip, r2, #1
   23a10:	str	ip, [r1]
   23a14:	add	r1, r3, r2, lsl #2
   23a18:	str	r0, [r1]
   23a1c:	movw	r0, #0
   23a20:	str	r0, [fp, #-4]
   23a24:	ldr	r0, [fp, #-4]
   23a28:	mov	sp, fp
   23a2c:	pop	{fp, pc}
   23a30:	push	{fp, lr}
   23a34:	mov	fp, sp
   23a38:	sub	sp, sp, #40	; 0x28
   23a3c:	str	r0, [fp, #-8]
   23a40:	str	r1, [fp, #-12]
   23a44:	str	r2, [fp, #-16]
   23a48:	str	r3, [sp, #20]
   23a4c:	movw	r0, #1
   23a50:	str	r0, [sp, #16]
   23a54:	ldr	r0, [fp, #-16]
   23a58:	add	r0, r0, #1
   23a5c:	str	r0, [sp, #8]
   23a60:	ldr	r0, [sp, #20]
   23a64:	cmp	r0, #0
   23a68:	bne	23af0 <__assert_fail@plt+0x125ec>
   23a6c:	ldr	r0, [sp, #8]
   23a70:	lsl	r0, r0, #2
   23a74:	bl	3354c <__assert_fail@plt+0x22048>
   23a78:	ldr	r1, [fp, #-8]
   23a7c:	str	r0, [r1, #4]
   23a80:	ldr	r0, [fp, #-8]
   23a84:	ldr	r0, [r0, #4]
   23a88:	movw	r1, #0
   23a8c:	cmp	r0, r1
   23a90:	bne	23aa0 <__assert_fail@plt+0x1259c>
   23a94:	movw	r0, #0
   23a98:	str	r0, [fp, #-4]
   23a9c:	b	23c98 <__assert_fail@plt+0x12794>
   23aa0:	ldr	r0, [sp, #8]
   23aa4:	lsl	r0, r0, #2
   23aa8:	bl	3354c <__assert_fail@plt+0x22048>
   23aac:	ldr	r1, [fp, #-8]
   23ab0:	str	r0, [r1, #8]
   23ab4:	ldr	r0, [fp, #-8]
   23ab8:	ldr	r0, [r0, #8]
   23abc:	movw	r1, #0
   23ac0:	cmp	r0, r1
   23ac4:	bne	23ae0 <__assert_fail@plt+0x125dc>
   23ac8:	ldr	r0, [fp, #-8]
   23acc:	ldr	r0, [r0, #4]
   23ad0:	bl	34c20 <__assert_fail@plt+0x2371c>
   23ad4:	movw	r0, #0
   23ad8:	str	r0, [fp, #-4]
   23adc:	b	23c98 <__assert_fail@plt+0x12794>
   23ae0:	ldr	r0, [sp, #8]
   23ae4:	ldr	r1, [fp, #-8]
   23ae8:	str	r0, [r1]
   23aec:	b	23bdc <__assert_fail@plt+0x126d8>
   23af0:	ldr	r0, [sp, #20]
   23af4:	cmp	r0, #1
   23af8:	bne	23ba8 <__assert_fail@plt+0x126a4>
   23afc:	ldr	r0, [sp, #8]
   23b00:	ldr	r1, [fp, #-8]
   23b04:	ldr	r1, [r1]
   23b08:	cmp	r0, r1
   23b0c:	bls	23ba4 <__assert_fail@plt+0x126a0>
   23b10:	ldr	r0, [fp, #-8]
   23b14:	ldr	r0, [r0, #4]
   23b18:	ldr	r1, [sp, #8]
   23b1c:	lsl	r1, r1, #2
   23b20:	bl	335bc <__assert_fail@plt+0x220b8>
   23b24:	str	r0, [sp, #4]
   23b28:	ldr	r0, [sp, #4]
   23b2c:	movw	r1, #0
   23b30:	cmp	r0, r1
   23b34:	bne	23b44 <__assert_fail@plt+0x12640>
   23b38:	movw	r0, #0
   23b3c:	str	r0, [fp, #-4]
   23b40:	b	23c98 <__assert_fail@plt+0x12794>
   23b44:	ldr	r0, [fp, #-8]
   23b48:	ldr	r0, [r0, #8]
   23b4c:	ldr	r1, [sp, #8]
   23b50:	lsl	r1, r1, #2
   23b54:	bl	335bc <__assert_fail@plt+0x220b8>
   23b58:	str	r0, [sp]
   23b5c:	ldr	r0, [sp]
   23b60:	movw	r1, #0
   23b64:	cmp	r0, r1
   23b68:	bne	23b80 <__assert_fail@plt+0x1267c>
   23b6c:	ldr	r0, [sp, #4]
   23b70:	bl	34c20 <__assert_fail@plt+0x2371c>
   23b74:	movw	r0, #0
   23b78:	str	r0, [fp, #-4]
   23b7c:	b	23c98 <__assert_fail@plt+0x12794>
   23b80:	ldr	r0, [sp, #4]
   23b84:	ldr	r1, [fp, #-8]
   23b88:	str	r0, [r1, #4]
   23b8c:	ldr	r0, [sp]
   23b90:	ldr	r1, [fp, #-8]
   23b94:	str	r0, [r1, #8]
   23b98:	ldr	r0, [sp, #8]
   23b9c:	ldr	r1, [fp, #-8]
   23ba0:	str	r0, [r1]
   23ba4:	b	23bd8 <__assert_fail@plt+0x126d4>
   23ba8:	ldr	r0, [sp, #20]
   23bac:	cmp	r0, #2
   23bb0:	bne	23bb8 <__assert_fail@plt+0x126b4>
   23bb4:	b	23bb8 <__assert_fail@plt+0x126b4>
   23bb8:	ldr	r0, [fp, #-16]
   23bbc:	ldr	r1, [fp, #-8]
   23bc0:	ldr	r1, [r1]
   23bc4:	cmp	r0, r1
   23bc8:	bhi	23bd0 <__assert_fail@plt+0x126cc>
   23bcc:	b	23bd0 <__assert_fail@plt+0x126cc>
   23bd0:	movw	r0, #2
   23bd4:	str	r0, [sp, #16]
   23bd8:	b	23bdc <__assert_fail@plt+0x126d8>
   23bdc:	movw	r0, #0
   23be0:	str	r0, [sp, #12]
   23be4:	ldr	r0, [sp, #12]
   23be8:	ldr	r1, [fp, #-16]
   23bec:	cmp	r0, r1
   23bf0:	bge	23c3c <__assert_fail@plt+0x12738>
   23bf4:	ldr	r0, [fp, #-12]
   23bf8:	ldr	r1, [sp, #12]
   23bfc:	ldr	r0, [r0, r1, lsl #3]
   23c00:	ldr	r2, [fp, #-8]
   23c04:	ldr	r2, [r2, #4]
   23c08:	str	r0, [r2, r1, lsl #2]
   23c0c:	ldr	r0, [fp, #-12]
   23c10:	ldr	r1, [sp, #12]
   23c14:	add	r0, r0, r1, lsl #3
   23c18:	ldr	r0, [r0, #4]
   23c1c:	ldr	r2, [fp, #-8]
   23c20:	ldr	r2, [r2, #8]
   23c24:	add	r1, r2, r1, lsl #2
   23c28:	str	r0, [r1]
   23c2c:	ldr	r0, [sp, #12]
   23c30:	add	r0, r0, #1
   23c34:	str	r0, [sp, #12]
   23c38:	b	23be4 <__assert_fail@plt+0x126e0>
   23c3c:	b	23c40 <__assert_fail@plt+0x1273c>
   23c40:	ldr	r0, [sp, #12]
   23c44:	ldr	r1, [fp, #-8]
   23c48:	ldr	r1, [r1]
   23c4c:	cmp	r0, r1
   23c50:	bcs	23c90 <__assert_fail@plt+0x1278c>
   23c54:	ldr	r0, [fp, #-8]
   23c58:	ldr	r0, [r0, #8]
   23c5c:	ldr	r1, [sp, #12]
   23c60:	mvn	r2, #0
   23c64:	str	r2, [r0, r1, lsl #2]
   23c68:	ldr	r0, [fp, #-8]
   23c6c:	ldr	r0, [r0, #4]
   23c70:	ldr	r1, [sp, #12]
   23c74:	add	r0, r0, r1, lsl #2
   23c78:	mvn	r1, #0
   23c7c:	str	r1, [r0]
   23c80:	ldr	r0, [sp, #12]
   23c84:	add	r0, r0, #1
   23c88:	str	r0, [sp, #12]
   23c8c:	b	23c40 <__assert_fail@plt+0x1273c>
   23c90:	ldr	r0, [sp, #16]
   23c94:	str	r0, [fp, #-4]
   23c98:	ldr	r0, [fp, #-4]
   23c9c:	mov	sp, fp
   23ca0:	pop	{fp, pc}
   23ca4:	push	{r4, sl, fp, lr}
   23ca8:	add	fp, sp, #8
   23cac:	sub	sp, sp, #56	; 0x38
   23cb0:	ldr	ip, [fp, #16]
   23cb4:	ldr	lr, [fp, #12]
   23cb8:	ldr	r4, [fp, #8]
   23cbc:	str	r0, [fp, #-16]
   23cc0:	str	r1, [fp, #-20]	; 0xffffffec
   23cc4:	str	r2, [fp, #-24]	; 0xffffffe8
   23cc8:	str	r3, [fp, #-28]	; 0xffffffe4
   23ccc:	and	r0, lr, #1
   23cd0:	strb	r0, [fp, #-29]	; 0xffffffe3
   23cd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23cd8:	ldr	r1, [fp, #16]
   23cdc:	ldr	r1, [r1, #92]	; 0x5c
   23ce0:	cmp	r0, r1
   23ce4:	bge	23cf4 <__assert_fail@plt+0x127f0>
   23ce8:	ldr	r0, [fp, #16]
   23cec:	ldr	r0, [r0, #92]	; 0x5c
   23cf0:	str	r0, [fp, #-28]	; 0xffffffe4
   23cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23cf8:	add	r0, r0, #1
   23cfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23d00:	cmp	r0, r1
   23d04:	bge	23d18 <__assert_fail@plt+0x12814>
   23d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23d0c:	add	r0, r0, #1
   23d10:	str	r0, [sp, #20]
   23d14:	b	23d20 <__assert_fail@plt+0x1281c>
   23d18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23d1c:	str	r0, [sp, #20]
   23d20:	ldr	r0, [sp, #20]
   23d24:	str	r0, [sp, #24]
   23d28:	ldr	r0, [fp, #-20]	; 0xffffffec
   23d2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23d30:	ldr	r2, [fp, #-16]
   23d34:	ldr	r3, [fp, #8]
   23d38:	ldrb	ip, [fp, #-29]	; 0xffffffe3
   23d3c:	ldr	lr, [fp, #16]
   23d40:	and	ip, ip, #1
   23d44:	str	ip, [sp]
   23d48:	str	lr, [sp, #4]
   23d4c:	bl	1a07c <__assert_fail@plt+0x8b78>
   23d50:	ldr	r0, [fp, #-16]
   23d54:	ldr	r1, [sp, #24]
   23d58:	bl	1a17c <__assert_fail@plt+0x8c78>
   23d5c:	str	r0, [sp, #28]
   23d60:	ldr	r0, [sp, #28]
   23d64:	cmp	r0, #0
   23d68:	beq	23d78 <__assert_fail@plt+0x12874>
   23d6c:	ldr	r0, [sp, #28]
   23d70:	str	r0, [fp, #-12]
   23d74:	b	23e2c <__assert_fail@plt+0x12928>
   23d78:	ldr	r0, [fp, #16]
   23d7c:	add	r0, r0, #96	; 0x60
   23d80:	ldr	r1, [fp, #-16]
   23d84:	str	r0, [r1, #68]	; 0x44
   23d88:	ldr	r0, [fp, #16]
   23d8c:	ldrb	r0, [r0, #88]	; 0x58
   23d90:	ubfx	r0, r0, #4, #1
   23d94:	and	r0, r0, #255	; 0xff
   23d98:	ldr	r1, [fp, #-16]
   23d9c:	strb	r0, [r1, #78]	; 0x4e
   23da0:	ldr	r0, [fp, #-16]
   23da4:	ldrb	r0, [r0, #75]	; 0x4b
   23da8:	cmp	r0, #0
   23dac:	beq	23dc0 <__assert_fail@plt+0x128bc>
   23db0:	ldr	r0, [fp, #-16]
   23db4:	ldr	r0, [r0, #4]
   23db8:	str	r0, [sp, #16]
   23dbc:	b	23dc8 <__assert_fail@plt+0x128c4>
   23dc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   23dc4:	str	r0, [sp, #16]
   23dc8:	ldr	r0, [sp, #16]
   23dcc:	ldr	r1, [fp, #-16]
   23dd0:	str	r0, [r1, #4]
   23dd4:	ldr	r0, [fp, #-16]
   23dd8:	ldrb	r0, [r0, #75]	; 0x4b
   23ddc:	cmp	r0, #0
   23de0:	bne	23df4 <__assert_fail@plt+0x128f0>
   23de4:	ldr	r0, [fp, #16]
   23de8:	ldr	r0, [r0, #92]	; 0x5c
   23dec:	cmp	r0, #1
   23df0:	ble	23e00 <__assert_fail@plt+0x128fc>
   23df4:	movw	r0, #0
   23df8:	str	r0, [sp, #12]
   23dfc:	b	23e08 <__assert_fail@plt+0x12904>
   23e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23e04:	str	r0, [sp, #12]
   23e08:	ldr	r0, [sp, #12]
   23e0c:	ldr	r1, [fp, #-16]
   23e10:	str	r0, [r1, #28]
   23e14:	ldr	r0, [fp, #-16]
   23e18:	ldr	r0, [r0, #28]
   23e1c:	ldr	r1, [fp, #-16]
   23e20:	str	r0, [r1, #32]
   23e24:	movw	r0, #0
   23e28:	str	r0, [fp, #-12]
   23e2c:	ldr	r0, [fp, #-12]
   23e30:	sub	sp, fp, #8
   23e34:	pop	{r4, sl, fp, pc}
   23e38:	push	{fp, lr}
   23e3c:	mov	fp, sp
   23e40:	sub	sp, sp, #32
   23e44:	str	r0, [fp, #-8]
   23e48:	str	r1, [fp, #-12]
   23e4c:	str	r2, [sp, #16]
   23e50:	ldr	r0, [fp, #-12]
   23e54:	ldr	r1, [fp, #-8]
   23e58:	str	r0, [r1, #88]	; 0x58
   23e5c:	ldr	r0, [fp, #-8]
   23e60:	mvn	r1, #0
   23e64:	str	r1, [r0, #92]	; 0x5c
   23e68:	ldr	r0, [sp, #16]
   23e6c:	cmp	r0, #0
   23e70:	ble	23f4c <__assert_fail@plt+0x12a48>
   23e74:	ldr	r0, [pc, #264]	; 23f84 <__assert_fail@plt+0x12a80>
   23e78:	movw	r1, #24
   23e7c:	str	r1, [sp, #12]
   23e80:	ldr	r1, [sp, #12]
   23e84:	mvn	r2, #0
   23e88:	udiv	r1, r2, r1
   23e8c:	cmp	r0, r1
   23e90:	bcs	23ea0 <__assert_fail@plt+0x1299c>
   23e94:	ldr	r0, [pc, #232]	; 23f84 <__assert_fail@plt+0x12a80>
   23e98:	str	r0, [sp, #8]
   23e9c:	b	23eb0 <__assert_fail@plt+0x129ac>
   23ea0:	ldr	r0, [sp, #12]
   23ea4:	mvn	r1, #0
   23ea8:	udiv	r0, r1, r0
   23eac:	str	r0, [sp, #8]
   23eb0:	ldr	r0, [sp, #8]
   23eb4:	ldr	r1, [sp, #16]
   23eb8:	cmp	r0, r1
   23ebc:	bcs	23ecc <__assert_fail@plt+0x129c8>
   23ec0:	movw	r0, #12
   23ec4:	str	r0, [fp, #-4]
   23ec8:	b	23f78 <__assert_fail@plt+0x12a74>
   23ecc:	ldr	r0, [sp, #16]
   23ed0:	add	r0, r0, r0, lsl #1
   23ed4:	lsl	r0, r0, #3
   23ed8:	bl	3354c <__assert_fail@plt+0x22048>
   23edc:	ldr	r1, [fp, #-8]
   23ee0:	str	r0, [r1, #116]	; 0x74
   23ee4:	ldr	r0, [sp, #16]
   23ee8:	lsl	r0, r0, #2
   23eec:	bl	3354c <__assert_fail@plt+0x22048>
   23ef0:	ldr	r1, [fp, #-8]
   23ef4:	str	r0, [r1, #132]	; 0x84
   23ef8:	ldr	r0, [fp, #-8]
   23efc:	ldr	r0, [r0, #116]	; 0x74
   23f00:	movw	r1, #0
   23f04:	cmp	r0, r1
   23f08:	movw	r0, #1
   23f0c:	str	r0, [sp, #4]
   23f10:	beq	23f30 <__assert_fail@plt+0x12a2c>
   23f14:	ldr	r0, [fp, #-8]
   23f18:	ldr	r0, [r0, #132]	; 0x84
   23f1c:	movw	r1, #0
   23f20:	cmp	r0, r1
   23f24:	movw	r0, #0
   23f28:	moveq	r0, #1
   23f2c:	str	r0, [sp, #4]
   23f30:	ldr	r0, [sp, #4]
   23f34:	tst	r0, #1
   23f38:	beq	23f48 <__assert_fail@plt+0x12a44>
   23f3c:	movw	r0, #12
   23f40:	str	r0, [fp, #-4]
   23f44:	b	23f78 <__assert_fail@plt+0x12a74>
   23f48:	b	23f4c <__assert_fail@plt+0x12a48>
   23f4c:	ldr	r0, [sp, #16]
   23f50:	ldr	r1, [fp, #-8]
   23f54:	str	r0, [r1, #112]	; 0x70
   23f58:	ldr	r0, [fp, #-8]
   23f5c:	movw	r1, #1
   23f60:	str	r1, [r0, #120]	; 0x78
   23f64:	ldr	r0, [sp, #16]
   23f68:	ldr	r1, [fp, #-8]
   23f6c:	str	r0, [r1, #128]	; 0x80
   23f70:	movw	r0, #0
   23f74:	str	r0, [fp, #-4]
   23f78:	ldr	r0, [fp, #-4]
   23f7c:	mov	sp, fp
   23f80:	pop	{fp, pc}
   23f84:	svcvc	0x00ffffff
   23f88:	push	{fp, lr}
   23f8c:	mov	fp, sp
   23f90:	sub	sp, sp, #128	; 0x80
   23f94:	str	r0, [fp, #-8]
   23f98:	str	r1, [fp, #-12]
   23f9c:	str	r2, [fp, #-16]
   23fa0:	ldr	r0, [fp, #-8]
   23fa4:	ldr	r0, [r0, #24]
   23fa8:	ldr	r1, [fp, #-12]
   23fac:	cmp	r0, r1
   23fb0:	bgt	23fcc <__assert_fail@plt+0x12ac8>
   23fb4:	ldr	r0, [fp, #-12]
   23fb8:	ldr	r1, [fp, #-8]
   23fbc:	ldr	r1, [r1, #24]
   23fc0:	sub	r0, r0, r1
   23fc4:	str	r0, [fp, #-20]	; 0xffffffec
   23fc8:	b	2408c <__assert_fail@plt+0x12b88>
   23fcc:	ldr	r0, [fp, #-8]
   23fd0:	ldr	r0, [r0, #80]	; 0x50
   23fd4:	cmp	r0, #1
   23fd8:	ble	23ff4 <__assert_fail@plt+0x12af0>
   23fdc:	ldr	r0, [fp, #-8]
   23fe0:	add	r0, r0, #16
   23fe4:	movw	r1, #0
   23fe8:	and	r1, r1, #255	; 0xff
   23fec:	movw	r2, #8
   23ff0:	bl	11420 <memset@plt>
   23ff4:	ldr	r0, [fp, #-8]
   23ff8:	ldr	r0, [r0, #44]	; 0x2c
   23ffc:	ldr	r1, [fp, #-8]
   24000:	str	r0, [r1, #48]	; 0x30
   24004:	ldr	r0, [fp, #-8]
   24008:	ldr	r0, [r0, #52]	; 0x34
   2400c:	ldr	r1, [fp, #-8]
   24010:	str	r0, [r1, #56]	; 0x38
   24014:	ldr	r0, [fp, #-8]
   24018:	movw	r1, #0
   2401c:	str	r1, [r0, #28]
   24020:	ldr	r0, [fp, #-8]
   24024:	str	r1, [r0, #24]
   24028:	ldr	r0, [fp, #-8]
   2402c:	str	r1, [r0, #32]
   24030:	ldr	r0, [fp, #-8]
   24034:	movw	r1, #0
   24038:	strb	r1, [r0, #76]	; 0x4c
   2403c:	ldr	r0, [fp, #-16]
   24040:	and	r0, r0, #1
   24044:	cmp	r0, #0
   24048:	movw	r0, #0
   2404c:	movne	r0, #1
   24050:	tst	r0, #1
   24054:	movw	r0, #4
   24058:	moveq	r0, #6
   2405c:	ldr	r1, [fp, #-8]
   24060:	str	r0, [r1, #60]	; 0x3c
   24064:	ldr	r0, [fp, #-8]
   24068:	ldrsb	r0, [r0, #75]	; 0x4b
   2406c:	cmp	r0, #0
   24070:	bne	24084 <__assert_fail@plt+0x12b80>
   24074:	ldr	r0, [fp, #-8]
   24078:	ldr	r0, [r0]
   2407c:	ldr	r1, [fp, #-8]
   24080:	str	r0, [r1, #4]
   24084:	ldr	r0, [fp, #-12]
   24088:	str	r0, [fp, #-20]	; 0xffffffec
   2408c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24090:	cmp	r0, #0
   24094:	beq	24a6c <__assert_fail@plt+0x13568>
   24098:	ldr	r0, [fp, #-20]	; 0xffffffec
   2409c:	ldr	r1, [fp, #-8]
   240a0:	ldr	r1, [r1, #32]
   240a4:	cmp	r0, r1
   240a8:	bge	24554 <__assert_fail@plt+0x13050>
   240ac:	ldr	r0, [fp, #-8]
   240b0:	ldrb	r0, [r0, #76]	; 0x4c
   240b4:	cmp	r0, #0
   240b8:	beq	24480 <__assert_fail@plt+0x12f7c>
   240bc:	movw	r0, #0
   240c0:	str	r0, [fp, #-24]	; 0xffffffe8
   240c4:	ldr	r0, [fp, #-8]
   240c8:	ldr	r0, [r0, #28]
   240cc:	str	r0, [fp, #-28]	; 0xffffffe4
   240d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   240d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   240d8:	add	r0, r0, r1
   240dc:	add	r0, r0, r0, lsr #31
   240e0:	asr	r0, r0, #1
   240e4:	str	r0, [fp, #-32]	; 0xffffffe0
   240e8:	ldr	r0, [fp, #-8]
   240ec:	ldr	r0, [r0, #12]
   240f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   240f4:	add	r0, r0, r1, lsl #2
   240f8:	ldr	r0, [r0]
   240fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   24100:	cmp	r0, r1
   24104:	ble	24114 <__assert_fail@plt+0x12c10>
   24108:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2410c:	str	r0, [fp, #-28]	; 0xffffffe4
   24110:	b	2414c <__assert_fail@plt+0x12c48>
   24114:	ldr	r0, [fp, #-8]
   24118:	ldr	r0, [r0, #12]
   2411c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24120:	add	r0, r0, r1, lsl #2
   24124:	ldr	r0, [r0]
   24128:	ldr	r1, [fp, #-20]	; 0xffffffec
   2412c:	cmp	r0, r1
   24130:	bge	24144 <__assert_fail@plt+0x12c40>
   24134:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24138:	add	r0, r0, #1
   2413c:	str	r0, [fp, #-24]	; 0xffffffe8
   24140:	b	24148 <__assert_fail@plt+0x12c44>
   24144:	b	24160 <__assert_fail@plt+0x12c5c>
   24148:	b	2414c <__assert_fail@plt+0x12c48>
   2414c:	b	24150 <__assert_fail@plt+0x12c4c>
   24150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24154:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24158:	cmp	r0, r1
   2415c:	blt	240d0 <__assert_fail@plt+0x12bcc>
   24160:	ldr	r0, [fp, #-8]
   24164:	ldr	r0, [r0, #12]
   24168:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2416c:	add	r0, r0, r1, lsl #2
   24170:	ldr	r0, [r0]
   24174:	ldr	r1, [fp, #-20]	; 0xffffffec
   24178:	cmp	r0, r1
   2417c:	bge	2418c <__assert_fail@plt+0x12c88>
   24180:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24184:	add	r0, r0, #1
   24188:	str	r0, [fp, #-32]	; 0xffffffe0
   2418c:	ldr	r0, [fp, #-8]
   24190:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24194:	sub	r1, r1, #1
   24198:	ldr	r2, [fp, #-16]
   2419c:	bl	25a30 <__assert_fail@plt+0x1452c>
   241a0:	ldr	r1, [fp, #-8]
   241a4:	str	r0, [r1, #60]	; 0x3c
   241a8:	ldr	r0, [fp, #-8]
   241ac:	ldr	r0, [r0, #28]
   241b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   241b4:	cmp	r0, r1
   241b8:	ble	242bc <__assert_fail@plt+0x12db8>
   241bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   241c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   241c4:	cmp	r0, r1
   241c8:	bne	242bc <__assert_fail@plt+0x12db8>
   241cc:	ldr	r0, [fp, #-8]
   241d0:	ldr	r0, [r0, #12]
   241d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   241d8:	add	r0, r0, r1, lsl #2
   241dc:	ldr	r0, [r0]
   241e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   241e4:	cmp	r0, r1
   241e8:	bne	242bc <__assert_fail@plt+0x12db8>
   241ec:	ldr	r0, [fp, #-8]
   241f0:	ldr	r1, [r0, #8]
   241f4:	ldr	r0, [r0, #28]
   241f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   241fc:	add	r3, r1, r2, lsl #2
   24200:	sub	r0, r0, r2
   24204:	lsl	r2, r0, #2
   24208:	mov	r0, r1
   2420c:	mov	r1, r3
   24210:	bl	11270 <memmove@plt>
   24214:	ldr	r0, [fp, #-8]
   24218:	ldr	r0, [r0, #4]
   2421c:	ldr	r1, [fp, #-8]
   24220:	ldr	r1, [r1, #4]
   24224:	ldr	r2, [fp, #-20]	; 0xffffffec
   24228:	add	r1, r1, r2
   2422c:	ldr	r2, [fp, #-8]
   24230:	ldr	r2, [r2, #28]
   24234:	ldr	r3, [fp, #-20]	; 0xffffffec
   24238:	sub	r2, r2, r3
   2423c:	bl	11270 <memmove@plt>
   24240:	ldr	r0, [fp, #-20]	; 0xffffffec
   24244:	ldr	r1, [fp, #-8]
   24248:	ldr	r2, [r1, #28]
   2424c:	sub	r0, r2, r0
   24250:	str	r0, [r1, #28]
   24254:	ldr	r0, [fp, #-20]	; 0xffffffec
   24258:	ldr	r1, [fp, #-8]
   2425c:	ldr	r2, [r1, #32]
   24260:	sub	r0, r2, r0
   24264:	str	r0, [r1, #32]
   24268:	movw	r0, #0
   2426c:	str	r0, [fp, #-24]	; 0xffffffe8
   24270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24274:	ldr	r1, [fp, #-8]
   24278:	ldr	r1, [r1, #28]
   2427c:	cmp	r0, r1
   24280:	bge	242b8 <__assert_fail@plt+0x12db4>
   24284:	ldr	r0, [fp, #-8]
   24288:	ldr	r0, [r0, #12]
   2428c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24290:	ldr	r2, [fp, #-20]	; 0xffffffec
   24294:	add	r3, r1, r2
   24298:	ldr	r3, [r0, r3, lsl #2]
   2429c:	sub	r2, r3, r2
   242a0:	add	r0, r0, r1, lsl #2
   242a4:	str	r2, [r0]
   242a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   242ac:	add	r0, r0, #1
   242b0:	str	r0, [fp, #-24]	; 0xffffffe8
   242b4:	b	24270 <__assert_fail@plt+0x12d6c>
   242b8:	b	2447c <__assert_fail@plt+0x12f78>
   242bc:	ldr	r0, [fp, #-8]
   242c0:	ldr	r0, [r0, #44]	; 0x2c
   242c4:	ldr	r1, [fp, #-12]
   242c8:	sub	r0, r0, r1
   242cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   242d0:	add	r0, r0, r1
   242d4:	ldr	r1, [fp, #-8]
   242d8:	str	r0, [r1, #48]	; 0x30
   242dc:	ldr	r0, [fp, #-8]
   242e0:	ldr	r0, [r0, #52]	; 0x34
   242e4:	ldr	r1, [fp, #-12]
   242e8:	sub	r0, r0, r1
   242ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   242f0:	add	r0, r0, r1
   242f4:	ldr	r1, [fp, #-8]
   242f8:	str	r0, [r1, #56]	; 0x38
   242fc:	ldr	r0, [fp, #-8]
   24300:	movw	r1, #0
   24304:	strb	r1, [r0, #76]	; 0x4c
   24308:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2430c:	cmp	r0, #0
   24310:	movw	r0, #0
   24314:	str	r0, [sp, #24]
   24318:	ble	24348 <__assert_fail@plt+0x12e44>
   2431c:	ldr	r0, [fp, #-8]
   24320:	ldr	r0, [r0, #12]
   24324:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24328:	sub	r1, r1, #1
   2432c:	add	r0, r0, r1, lsl #2
   24330:	ldr	r0, [r0]
   24334:	ldr	r1, [fp, #-20]	; 0xffffffec
   24338:	cmp	r0, r1
   2433c:	movw	r0, #0
   24340:	moveq	r0, #1
   24344:	str	r0, [sp, #24]
   24348:	ldr	r0, [sp, #24]
   2434c:	tst	r0, #1
   24350:	beq	24368 <__assert_fail@plt+0x12e64>
   24354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24358:	mvn	r1, #0
   2435c:	add	r0, r0, r1
   24360:	str	r0, [fp, #-32]	; 0xffffffe0
   24364:	b	24308 <__assert_fail@plt+0x12e04>
   24368:	b	2436c <__assert_fail@plt+0x12e68>
   2436c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24370:	ldr	r1, [fp, #-8]
   24374:	ldr	r1, [r1, #28]
   24378:	cmp	r0, r1
   2437c:	bge	243b0 <__assert_fail@plt+0x12eac>
   24380:	ldr	r0, [fp, #-8]
   24384:	ldr	r0, [r0, #8]
   24388:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2438c:	add	r0, r0, r1, lsl #2
   24390:	ldr	r0, [r0]
   24394:	cmn	r0, #1
   24398:	beq	243a0 <__assert_fail@plt+0x12e9c>
   2439c:	b	243b0 <__assert_fail@plt+0x12eac>
   243a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   243a4:	add	r0, r0, #1
   243a8:	str	r0, [fp, #-32]	; 0xffffffe0
   243ac:	b	2436c <__assert_fail@plt+0x12e68>
   243b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   243b4:	ldr	r1, [fp, #-8]
   243b8:	ldr	r1, [r1, #28]
   243bc:	cmp	r0, r1
   243c0:	bne	243d4 <__assert_fail@plt+0x12ed0>
   243c4:	ldr	r0, [fp, #-8]
   243c8:	movw	r1, #0
   243cc:	str	r1, [r0, #28]
   243d0:	b	2446c <__assert_fail@plt+0x12f68>
   243d4:	ldr	r0, [fp, #-8]
   243d8:	ldr	r0, [r0, #12]
   243dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   243e0:	add	r0, r0, r1, lsl #2
   243e4:	ldr	r0, [r0]
   243e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   243ec:	sub	r0, r0, r1
   243f0:	ldr	r1, [fp, #-8]
   243f4:	str	r0, [r1, #28]
   243f8:	ldr	r0, [fp, #-8]
   243fc:	ldr	r0, [r0, #28]
   24400:	cmp	r0, #0
   24404:	beq	24468 <__assert_fail@plt+0x12f64>
   24408:	movw	r0, #0
   2440c:	str	r0, [fp, #-24]	; 0xffffffe8
   24410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24414:	ldr	r1, [fp, #-8]
   24418:	ldr	r1, [r1, #28]
   2441c:	cmp	r0, r1
   24420:	bge	2444c <__assert_fail@plt+0x12f48>
   24424:	ldr	r0, [fp, #-8]
   24428:	ldr	r0, [r0, #8]
   2442c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24430:	add	r0, r0, r1, lsl #2
   24434:	mvn	r1, #0
   24438:	str	r1, [r0]
   2443c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24440:	add	r0, r0, #1
   24444:	str	r0, [fp, #-24]	; 0xffffffe8
   24448:	b	24410 <__assert_fail@plt+0x12f0c>
   2444c:	ldr	r0, [fp, #-8]
   24450:	ldr	r0, [r0, #4]
   24454:	ldr	r1, [fp, #-8]
   24458:	ldr	r2, [r1, #28]
   2445c:	movw	r1, #255	; 0xff
   24460:	and	r1, r1, #255	; 0xff
   24464:	bl	11420 <memset@plt>
   24468:	b	2446c <__assert_fail@plt+0x12f68>
   2446c:	ldr	r0, [fp, #-8]
   24470:	ldr	r0, [r0, #28]
   24474:	ldr	r1, [fp, #-8]
   24478:	str	r0, [r1, #32]
   2447c:	b	24550 <__assert_fail@plt+0x1304c>
   24480:	ldr	r0, [fp, #-8]
   24484:	ldr	r1, [fp, #-20]	; 0xffffffec
   24488:	sub	r1, r1, #1
   2448c:	ldr	r2, [fp, #-16]
   24490:	bl	25a30 <__assert_fail@plt+0x1452c>
   24494:	ldr	r1, [fp, #-8]
   24498:	str	r0, [r1, #60]	; 0x3c
   2449c:	ldr	r0, [fp, #-8]
   244a0:	ldr	r0, [r0, #80]	; 0x50
   244a4:	cmp	r0, #1
   244a8:	ble	244d4 <__assert_fail@plt+0x12fd0>
   244ac:	ldr	r0, [fp, #-8]
   244b0:	ldr	r1, [r0, #8]
   244b4:	ldr	r0, [r0, #28]
   244b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   244bc:	add	r3, r1, r2, lsl #2
   244c0:	sub	r0, r0, r2
   244c4:	lsl	r2, r0, #2
   244c8:	mov	r0, r1
   244cc:	mov	r1, r3
   244d0:	bl	11270 <memmove@plt>
   244d4:	ldr	r0, [fp, #-8]
   244d8:	ldrb	r0, [r0, #75]	; 0x4b
   244dc:	cmp	r0, #0
   244e0:	beq	24510 <__assert_fail@plt+0x1300c>
   244e4:	ldr	r0, [fp, #-8]
   244e8:	ldr	r0, [r0, #4]
   244ec:	ldr	r1, [fp, #-8]
   244f0:	ldr	r1, [r1, #4]
   244f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   244f8:	add	r1, r1, r2
   244fc:	ldr	r2, [fp, #-8]
   24500:	ldr	r2, [r2, #28]
   24504:	ldr	r3, [fp, #-20]	; 0xffffffec
   24508:	sub	r2, r2, r3
   2450c:	bl	11270 <memmove@plt>
   24510:	ldr	r0, [fp, #-20]	; 0xffffffec
   24514:	ldr	r1, [fp, #-8]
   24518:	ldr	r2, [r1, #28]
   2451c:	sub	r0, r2, r0
   24520:	str	r0, [r1, #28]
   24524:	ldr	r0, [fp, #-20]	; 0xffffffec
   24528:	ldr	r1, [fp, #-8]
   2452c:	ldr	r2, [r1, #32]
   24530:	sub	r0, r2, r0
   24534:	str	r0, [r1, #32]
   24538:	ldr	r0, [fp, #-8]
   2453c:	ldr	r0, [r0, #28]
   24540:	cmp	r0, #0
   24544:	ble	2454c <__assert_fail@plt+0x13048>
   24548:	b	2454c <__assert_fail@plt+0x13048>
   2454c:	b	24550 <__assert_fail@plt+0x1304c>
   24550:	b	24a44 <__assert_fail@plt+0x13540>
   24554:	ldr	r0, [fp, #-8]
   24558:	ldr	r0, [r0, #28]
   2455c:	str	r0, [fp, #-36]	; 0xffffffdc
   24560:	ldr	r0, [fp, #-8]
   24564:	ldrb	r0, [r0, #76]	; 0x4c
   24568:	cmp	r0, #0
   2456c:	beq	245bc <__assert_fail@plt+0x130b8>
   24570:	ldr	r0, [fp, #-8]
   24574:	ldr	r0, [r0, #44]	; 0x2c
   24578:	ldr	r1, [fp, #-12]
   2457c:	sub	r0, r0, r1
   24580:	ldr	r1, [fp, #-20]	; 0xffffffec
   24584:	add	r0, r0, r1
   24588:	ldr	r1, [fp, #-8]
   2458c:	str	r0, [r1, #48]	; 0x30
   24590:	ldr	r0, [fp, #-8]
   24594:	ldr	r0, [r0, #52]	; 0x34
   24598:	ldr	r1, [fp, #-12]
   2459c:	sub	r0, r0, r1
   245a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   245a4:	add	r0, r0, r1
   245a8:	ldr	r1, [fp, #-8]
   245ac:	str	r0, [r1, #56]	; 0x38
   245b0:	ldr	r0, [fp, #-8]
   245b4:	movw	r1, #0
   245b8:	strb	r1, [r0, #76]	; 0x4c
   245bc:	ldr	r0, [fp, #-8]
   245c0:	movw	r1, #0
   245c4:	str	r1, [r0, #28]
   245c8:	ldr	r0, [fp, #-8]
   245cc:	ldr	r0, [r0, #80]	; 0x50
   245d0:	cmp	r0, #1
   245d4:	ble	24974 <__assert_fail@plt+0x13470>
   245d8:	mvn	r0, #0
   245dc:	str	r0, [fp, #-44]	; 0xffffffd4
   245e0:	ldr	r0, [fp, #-8]
   245e4:	ldrsb	r0, [r0, #73]	; 0x49
   245e8:	cmp	r0, #0
   245ec:	beq	24800 <__assert_fail@plt+0x132fc>
   245f0:	ldr	r0, [fp, #-8]
   245f4:	ldr	r0, [r0]
   245f8:	ldr	r1, [fp, #-8]
   245fc:	ldr	r1, [r1, #24]
   24600:	add	r0, r0, r1
   24604:	str	r0, [fp, #-48]	; 0xffffffd0
   24608:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2460c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24610:	ldr	r2, [fp, #-8]
   24614:	ldr	r2, [r2, #80]	; 0x50
   24618:	sub	r1, r1, r2
   2461c:	add	r0, r0, r1
   24620:	str	r0, [fp, #-56]	; 0xffffffc8
   24624:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24628:	ldr	r1, [fp, #-8]
   2462c:	ldr	r1, [r1]
   24630:	cmp	r0, r1
   24634:	bcs	24644 <__assert_fail@plt+0x13140>
   24638:	ldr	r0, [fp, #-8]
   2463c:	ldr	r0, [r0]
   24640:	str	r0, [fp, #-56]	; 0xffffffc8
   24644:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24648:	ldr	r1, [fp, #-20]	; 0xffffffec
   2464c:	add	r0, r0, r1
   24650:	mvn	r1, #0
   24654:	add	r0, r0, r1
   24658:	str	r0, [fp, #-52]	; 0xffffffcc
   2465c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24660:	ldr	r1, [fp, #-56]	; 0xffffffc8
   24664:	cmp	r0, r1
   24668:	bcc	247fc <__assert_fail@plt+0x132f8>
   2466c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24670:	ldrb	r0, [r0]
   24674:	and	r0, r0, #192	; 0xc0
   24678:	cmp	r0, #128	; 0x80
   2467c:	beq	247e4 <__assert_fail@plt+0x132e0>
   24680:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24684:	ldr	r1, [fp, #-8]
   24688:	ldr	r1, [r1, #48]	; 0x30
   2468c:	add	r0, r0, r1
   24690:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24694:	sub	r0, r0, r1
   24698:	str	r0, [sp, #56]	; 0x38
   2469c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   246a0:	str	r0, [sp, #40]	; 0x28
   246a4:	ldr	r0, [fp, #-8]
   246a8:	ldr	r0, [r0, #64]	; 0x40
   246ac:	movw	r1, #0
   246b0:	cmp	r0, r1
   246b4:	beq	24738 <__assert_fail@plt+0x13234>
   246b8:	ldr	r0, [sp, #56]	; 0x38
   246bc:	cmp	r0, #6
   246c0:	bge	246d0 <__assert_fail@plt+0x131cc>
   246c4:	ldr	r0, [sp, #56]	; 0x38
   246c8:	str	r0, [sp, #20]
   246cc:	b	246dc <__assert_fail@plt+0x131d8>
   246d0:	movw	r0, #6
   246d4:	str	r0, [sp, #20]
   246d8:	b	246dc <__assert_fail@plt+0x131d8>
   246dc:	ldr	r0, [sp, #20]
   246e0:	str	r0, [sp, #36]	; 0x24
   246e4:	ldr	r0, [sp, #36]	; 0x24
   246e8:	mvn	r1, #0
   246ec:	add	r0, r0, r1
   246f0:	str	r0, [sp, #36]	; 0x24
   246f4:	cmp	r0, #0
   246f8:	blt	24730 <__assert_fail@plt+0x1322c>
   246fc:	ldr	r0, [fp, #-8]
   24700:	ldr	r0, [r0, #64]	; 0x40
   24704:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24708:	ldr	r2, [sp, #36]	; 0x24
   2470c:	add	r1, r1, r2
   24710:	ldrb	r1, [r1]
   24714:	add	r0, r0, r1
   24718:	ldrb	r0, [r0]
   2471c:	ldr	r1, [sp, #36]	; 0x24
   24720:	add	r2, sp, #50	; 0x32
   24724:	add	r1, r2, r1
   24728:	strb	r0, [r1]
   2472c:	b	246e4 <__assert_fail@plt+0x131e0>
   24730:	add	r0, sp, #50	; 0x32
   24734:	str	r0, [sp, #40]	; 0x28
   24738:	add	r0, sp, #64	; 0x40
   2473c:	mov	r1, r0
   24740:	str	r0, [sp, #16]
   24744:	mov	r0, r1
   24748:	movw	r1, #0
   2474c:	and	r1, r1, #255	; 0xff
   24750:	movw	r2, #8
   24754:	bl	11420 <memset@plt>
   24758:	ldr	r1, [sp, #40]	; 0x28
   2475c:	ldr	r2, [sp, #56]	; 0x38
   24760:	add	r0, sp, #60	; 0x3c
   24764:	ldr	r3, [sp, #16]
   24768:	bl	34e90 <__assert_fail@plt+0x2398c>
   2476c:	str	r0, [sp, #44]	; 0x2c
   24770:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24774:	ldr	r1, [fp, #-20]	; 0xffffffec
   24778:	add	r0, r0, r1
   2477c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24780:	sub	r0, r0, r1
   24784:	ldr	r1, [sp, #44]	; 0x2c
   24788:	cmp	r0, r1
   2478c:	bhi	247e0 <__assert_fail@plt+0x132dc>
   24790:	ldr	r0, [sp, #44]	; 0x2c
   24794:	cmn	r0, #2
   24798:	bcs	247e0 <__assert_fail@plt+0x132dc>
   2479c:	ldr	r0, [fp, #-8]
   247a0:	add	r0, r0, #16
   247a4:	movw	r1, #0
   247a8:	and	r1, r1, #255	; 0xff
   247ac:	movw	r2, #8
   247b0:	bl	11420 <memset@plt>
   247b4:	ldr	r0, [sp, #44]	; 0x2c
   247b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   247bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   247c0:	add	r1, r1, r2
   247c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   247c8:	sub	r1, r1, r2
   247cc:	sub	r0, r0, r1
   247d0:	ldr	r1, [fp, #-8]
   247d4:	str	r0, [r1, #28]
   247d8:	ldr	r0, [sp, #60]	; 0x3c
   247dc:	str	r0, [fp, #-44]	; 0xffffffd4
   247e0:	b	247fc <__assert_fail@plt+0x132f8>
   247e4:	b	247e8 <__assert_fail@plt+0x132e4>
   247e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   247ec:	mvn	r1, #0
   247f0:	add	r0, r0, r1
   247f4:	str	r0, [fp, #-52]	; 0xffffffcc
   247f8:	b	2465c <__assert_fail@plt+0x13158>
   247fc:	b	24800 <__assert_fail@plt+0x132fc>
   24800:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24804:	cmn	r0, #1
   24808:	bne	2482c <__assert_fail@plt+0x13328>
   2480c:	ldr	r0, [fp, #-8]
   24810:	ldr	r1, [fp, #-12]
   24814:	sub	r2, fp, #44	; 0x2c
   24818:	bl	25c30 <__assert_fail@plt+0x1472c>
   2481c:	ldr	r1, [fp, #-12]
   24820:	sub	r0, r0, r1
   24824:	ldr	r1, [fp, #-8]
   24828:	str	r0, [r1, #28]
   2482c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24830:	cmn	r0, #1
   24834:	bne	24858 <__assert_fail@plt+0x13354>
   24838:	ldr	r0, [fp, #-8]
   2483c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24840:	sub	r1, r1, #1
   24844:	ldr	r2, [fp, #-16]
   24848:	bl	25a30 <__assert_fail@plt+0x1452c>
   2484c:	ldr	r1, [fp, #-8]
   24850:	str	r0, [r1, #60]	; 0x3c
   24854:	b	248dc <__assert_fail@plt+0x133d8>
   24858:	ldr	r0, [fp, #-8]
   2485c:	ldrb	r0, [r0, #78]	; 0x4e
   24860:	cmp	r0, #0
   24864:	beq	24890 <__assert_fail@plt+0x1338c>
   24868:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2486c:	bl	11408 <iswalnum@plt>
   24870:	cmp	r0, #0
   24874:	bne	24884 <__assert_fail@plt+0x13380>
   24878:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2487c:	cmp	r0, #95	; 0x5f
   24880:	bne	24890 <__assert_fail@plt+0x1338c>
   24884:	movw	r0, #1
   24888:	str	r0, [sp, #12]
   2488c:	b	248d0 <__assert_fail@plt+0x133cc>
   24890:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24894:	cmp	r0, #10
   24898:	movw	r0, #0
   2489c:	str	r0, [sp, #8]
   248a0:	bne	248bc <__assert_fail@plt+0x133b8>
   248a4:	ldr	r0, [fp, #-8]
   248a8:	ldrb	r0, [r0, #77]	; 0x4d
   248ac:	cmp	r0, #0
   248b0:	movw	r0, #0
   248b4:	movne	r0, #1
   248b8:	str	r0, [sp, #8]
   248bc:	ldr	r0, [sp, #8]
   248c0:	tst	r0, #1
   248c4:	movw	r0, #2
   248c8:	moveq	r0, #0
   248cc:	str	r0, [sp, #12]
   248d0:	ldr	r0, [sp, #12]
   248d4:	ldr	r1, [fp, #-8]
   248d8:	str	r0, [r1, #60]	; 0x3c
   248dc:	ldr	r0, [fp, #-8]
   248e0:	ldr	r0, [r0, #28]
   248e4:	cmp	r0, #0
   248e8:	beq	24960 <__assert_fail@plt+0x1345c>
   248ec:	movw	r0, #0
   248f0:	str	r0, [fp, #-40]	; 0xffffffd8
   248f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   248f8:	ldr	r1, [fp, #-8]
   248fc:	ldr	r1, [r1, #28]
   24900:	cmp	r0, r1
   24904:	bge	24930 <__assert_fail@plt+0x1342c>
   24908:	ldr	r0, [fp, #-8]
   2490c:	ldr	r0, [r0, #8]
   24910:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24914:	add	r0, r0, r1, lsl #2
   24918:	mvn	r1, #0
   2491c:	str	r1, [r0]
   24920:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24924:	add	r0, r0, #1
   24928:	str	r0, [fp, #-40]	; 0xffffffd8
   2492c:	b	248f4 <__assert_fail@plt+0x133f0>
   24930:	ldr	r0, [fp, #-8]
   24934:	ldrsb	r0, [r0, #75]	; 0x4b
   24938:	cmp	r0, #0
   2493c:	beq	2495c <__assert_fail@plt+0x13458>
   24940:	ldr	r0, [fp, #-8]
   24944:	ldr	r0, [r0, #4]
   24948:	ldr	r1, [fp, #-8]
   2494c:	ldr	r2, [r1, #28]
   24950:	movw	r1, #255	; 0xff
   24954:	and	r1, r1, #255	; 0xff
   24958:	bl	11420 <memset@plt>
   2495c:	b	24960 <__assert_fail@plt+0x1345c>
   24960:	ldr	r0, [fp, #-8]
   24964:	ldr	r0, [r0, #28]
   24968:	ldr	r1, [fp, #-8]
   2496c:	str	r0, [r1, #32]
   24970:	b	24a40 <__assert_fail@plt+0x1353c>
   24974:	ldr	r0, [fp, #-8]
   24978:	ldr	r0, [r0]
   2497c:	ldr	r1, [fp, #-8]
   24980:	ldr	r1, [r1, #24]
   24984:	ldr	r2, [fp, #-20]	; 0xffffffec
   24988:	add	r1, r1, r2
   2498c:	sub	r1, r1, #1
   24990:	add	r0, r0, r1
   24994:	ldrb	r0, [r0]
   24998:	str	r0, [sp, #32]
   2499c:	ldr	r0, [fp, #-8]
   249a0:	movw	r1, #0
   249a4:	str	r1, [r0, #32]
   249a8:	ldr	r0, [fp, #-8]
   249ac:	ldr	r0, [r0, #64]	; 0x40
   249b0:	cmp	r0, r1
   249b4:	beq	249d0 <__assert_fail@plt+0x134cc>
   249b8:	ldr	r0, [fp, #-8]
   249bc:	ldr	r0, [r0, #64]	; 0x40
   249c0:	ldr	r1, [sp, #32]
   249c4:	add	r0, r0, r1
   249c8:	ldrb	r0, [r0]
   249cc:	str	r0, [sp, #32]
   249d0:	ldr	r0, [fp, #-8]
   249d4:	ldr	r0, [r0, #68]	; 0x44
   249d8:	ldr	r1, [sp, #32]
   249dc:	bl	25da0 <__assert_fail@plt+0x1489c>
   249e0:	tst	r0, #1
   249e4:	beq	249f4 <__assert_fail@plt+0x134f0>
   249e8:	movw	r0, #1
   249ec:	str	r0, [sp, #4]
   249f0:	b	24a34 <__assert_fail@plt+0x13530>
   249f4:	ldr	r0, [sp, #32]
   249f8:	cmp	r0, #10
   249fc:	movw	r0, #0
   24a00:	str	r0, [sp]
   24a04:	bne	24a20 <__assert_fail@plt+0x1351c>
   24a08:	ldr	r0, [fp, #-8]
   24a0c:	ldrb	r0, [r0, #77]	; 0x4d
   24a10:	cmp	r0, #0
   24a14:	movw	r0, #0
   24a18:	movne	r0, #1
   24a1c:	str	r0, [sp]
   24a20:	ldr	r0, [sp]
   24a24:	tst	r0, #1
   24a28:	movw	r0, #2
   24a2c:	moveq	r0, #0
   24a30:	str	r0, [sp, #4]
   24a34:	ldr	r0, [sp, #4]
   24a38:	ldr	r1, [fp, #-8]
   24a3c:	str	r0, [r1, #60]	; 0x3c
   24a40:	b	24a44 <__assert_fail@plt+0x13540>
   24a44:	ldr	r0, [fp, #-8]
   24a48:	ldrb	r0, [r0, #75]	; 0x4b
   24a4c:	cmp	r0, #0
   24a50:	bne	24a68 <__assert_fail@plt+0x13564>
   24a54:	ldr	r0, [fp, #-20]	; 0xffffffec
   24a58:	ldr	r1, [fp, #-8]
   24a5c:	ldr	r2, [r1, #4]
   24a60:	add	r0, r2, r0
   24a64:	str	r0, [r1, #4]
   24a68:	b	24a6c <__assert_fail@plt+0x13568>
   24a6c:	ldr	r0, [fp, #-12]
   24a70:	ldr	r1, [fp, #-8]
   24a74:	str	r0, [r1, #24]
   24a78:	ldr	r0, [fp, #-20]	; 0xffffffec
   24a7c:	ldr	r1, [fp, #-8]
   24a80:	ldr	r2, [r1, #48]	; 0x30
   24a84:	sub	r0, r2, r0
   24a88:	str	r0, [r1, #48]	; 0x30
   24a8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24a90:	ldr	r1, [fp, #-8]
   24a94:	ldr	r2, [r1, #56]	; 0x38
   24a98:	sub	r0, r2, r0
   24a9c:	str	r0, [r1, #56]	; 0x38
   24aa0:	ldr	r0, [fp, #-8]
   24aa4:	ldr	r0, [r0, #80]	; 0x50
   24aa8:	cmp	r0, #1
   24aac:	ble	24af4 <__assert_fail@plt+0x135f0>
   24ab0:	ldr	r0, [fp, #-8]
   24ab4:	ldrsb	r0, [r0, #72]	; 0x48
   24ab8:	cmp	r0, #0
   24abc:	beq	24ae8 <__assert_fail@plt+0x135e4>
   24ac0:	ldr	r0, [fp, #-8]
   24ac4:	bl	1a2d4 <__assert_fail@plt+0x8dd0>
   24ac8:	str	r0, [sp, #28]
   24acc:	ldr	r0, [sp, #28]
   24ad0:	cmp	r0, #0
   24ad4:	beq	24ae4 <__assert_fail@plt+0x135e0>
   24ad8:	ldr	r0, [sp, #28]
   24adc:	str	r0, [fp, #-4]
   24ae0:	b	24b68 <__assert_fail@plt+0x13664>
   24ae4:	b	24af0 <__assert_fail@plt+0x135ec>
   24ae8:	ldr	r0, [fp, #-8]
   24aec:	bl	1ae80 <__assert_fail@plt+0x997c>
   24af0:	b	24b58 <__assert_fail@plt+0x13654>
   24af4:	ldr	r0, [fp, #-8]
   24af8:	ldrb	r0, [r0, #75]	; 0x4b
   24afc:	cmp	r0, #0
   24b00:	beq	24b44 <__assert_fail@plt+0x13640>
   24b04:	ldr	r0, [fp, #-8]
   24b08:	ldrsb	r0, [r0, #72]	; 0x48
   24b0c:	cmp	r0, #0
   24b10:	beq	24b20 <__assert_fail@plt+0x1361c>
   24b14:	ldr	r0, [fp, #-8]
   24b18:	bl	1ad7c <__assert_fail@plt+0x9878>
   24b1c:	b	24b40 <__assert_fail@plt+0x1363c>
   24b20:	ldr	r0, [fp, #-8]
   24b24:	ldr	r0, [r0, #64]	; 0x40
   24b28:	movw	r1, #0
   24b2c:	cmp	r0, r1
   24b30:	beq	24b3c <__assert_fail@plt+0x13638>
   24b34:	ldr	r0, [fp, #-8]
   24b38:	bl	1b1c0 <__assert_fail@plt+0x9cbc>
   24b3c:	b	24b40 <__assert_fail@plt+0x1363c>
   24b40:	b	24b54 <__assert_fail@plt+0x13650>
   24b44:	ldr	r0, [fp, #-8]
   24b48:	ldr	r0, [r0, #48]	; 0x30
   24b4c:	ldr	r1, [fp, #-8]
   24b50:	str	r0, [r1, #28]
   24b54:	b	24b58 <__assert_fail@plt+0x13654>
   24b58:	ldr	r0, [fp, #-8]
   24b5c:	movw	r1, #0
   24b60:	str	r1, [r0, #40]	; 0x28
   24b64:	str	r1, [fp, #-4]
   24b68:	ldr	r0, [fp, #-4]
   24b6c:	mov	sp, fp
   24b70:	pop	{fp, pc}
   24b74:	push	{fp, lr}
   24b78:	mov	fp, sp
   24b7c:	sub	sp, sp, #80	; 0x50
   24b80:	str	r0, [fp, #-32]	; 0xffffffe0
   24b84:	and	r0, r1, #1
   24b88:	strb	r0, [fp, #-33]	; 0xffffffdf
   24b8c:	str	r2, [sp, #40]	; 0x28
   24b90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24b94:	ldr	r0, [r0, #84]	; 0x54
   24b98:	str	r0, [sp, #36]	; 0x24
   24b9c:	mov	r0, #0
   24ba0:	str	r0, [sp, #28]
   24ba4:	mvn	r1, #0
   24ba8:	str	r1, [sp, #24]
   24bac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24bb0:	ldr	r1, [r1, #40]	; 0x28
   24bb4:	str	r1, [sp, #20]
   24bb8:	ldr	r1, [sp, #40]	; 0x28
   24bbc:	cmp	r1, #0
   24bc0:	movwne	r1, #1
   24bc4:	strb	r1, [sp, #15]
   24bc8:	ldr	r1, [sp, #20]
   24bcc:	str	r1, [sp, #8]
   24bd0:	str	r0, [sp, #32]
   24bd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24bd8:	ldr	r1, [sp, #20]
   24bdc:	add	r2, sp, #32
   24be0:	str	r2, [fp, #-8]
   24be4:	str	r0, [fp, #-12]
   24be8:	str	r1, [fp, #-16]
   24bec:	ldr	r0, [fp, #-12]
   24bf0:	ldr	r0, [r0, #84]	; 0x54
   24bf4:	str	r0, [fp, #-20]	; 0xffffffec
   24bf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   24bfc:	ldr	r0, [r0, #36]	; 0x24
   24c00:	ldrb	r0, [r0, #52]	; 0x34
   24c04:	lsr	r0, r0, #7
   24c08:	and	r0, r0, #255	; 0xff
   24c0c:	cmp	r0, #0
   24c10:	beq	24d00 <__assert_fail@plt+0x137fc>
   24c14:	ldr	r0, [fp, #-12]
   24c18:	ldr	r1, [fp, #-16]
   24c1c:	sub	r1, r1, #1
   24c20:	ldr	r2, [fp, #-12]
   24c24:	ldr	r2, [r2, #88]	; 0x58
   24c28:	bl	25a30 <__assert_fail@plt+0x1452c>
   24c2c:	str	r0, [fp, #-24]	; 0xffffffe8
   24c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24c34:	and	r0, r0, #1
   24c38:	cmp	r0, #0
   24c3c:	beq	24c50 <__assert_fail@plt+0x1374c>
   24c40:	ldr	r0, [fp, #-20]	; 0xffffffec
   24c44:	ldr	r0, [r0, #40]	; 0x28
   24c48:	str	r0, [fp, #-4]
   24c4c:	b	24d0c <__assert_fail@plt+0x13808>
   24c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24c54:	cmp	r0, #0
   24c58:	bne	24c6c <__assert_fail@plt+0x13768>
   24c5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24c60:	ldr	r0, [r0, #36]	; 0x24
   24c64:	str	r0, [fp, #-4]
   24c68:	b	24d0c <__assert_fail@plt+0x13808>
   24c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24c70:	and	r0, r0, #4
   24c74:	cmp	r0, #0
   24c78:	beq	24c9c <__assert_fail@plt+0x13798>
   24c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24c80:	and	r0, r0, #2
   24c84:	cmp	r0, #0
   24c88:	beq	24c9c <__assert_fail@plt+0x13798>
   24c8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24c90:	ldr	r0, [r0, #48]	; 0x30
   24c94:	str	r0, [fp, #-4]
   24c98:	b	24d0c <__assert_fail@plt+0x13808>
   24c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24ca0:	and	r0, r0, #2
   24ca4:	cmp	r0, #0
   24ca8:	beq	24cbc <__assert_fail@plt+0x137b8>
   24cac:	ldr	r0, [fp, #-20]	; 0xffffffec
   24cb0:	ldr	r0, [r0, #44]	; 0x2c
   24cb4:	str	r0, [fp, #-4]
   24cb8:	b	24d0c <__assert_fail@plt+0x13808>
   24cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24cc0:	and	r0, r0, #4
   24cc4:	cmp	r0, #0
   24cc8:	beq	24cf0 <__assert_fail@plt+0x137ec>
   24ccc:	ldr	r0, [fp, #-8]
   24cd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   24cd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   24cd8:	ldr	r2, [r2, #36]	; 0x24
   24cdc:	ldr	r2, [r2, #40]	; 0x28
   24ce0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24ce4:	bl	231f4 <__assert_fail@plt+0x11cf0>
   24ce8:	str	r0, [fp, #-4]
   24cec:	b	24d0c <__assert_fail@plt+0x13808>
   24cf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   24cf4:	ldr	r0, [r0, #36]	; 0x24
   24cf8:	str	r0, [fp, #-4]
   24cfc:	b	24d0c <__assert_fail@plt+0x13808>
   24d00:	ldr	r0, [fp, #-20]	; 0xffffffec
   24d04:	ldr	r0, [r0, #36]	; 0x24
   24d08:	str	r0, [fp, #-4]
   24d0c:	ldr	r0, [fp, #-4]
   24d10:	str	r0, [sp, #16]
   24d14:	ldr	r0, [sp, #16]
   24d18:	movw	r1, #0
   24d1c:	cmp	r0, r1
   24d20:	bne	24d40 <__assert_fail@plt+0x1383c>
   24d24:	ldr	r0, [sp, #32]
   24d28:	cmp	r0, #12
   24d2c:	bne	24d34 <__assert_fail@plt+0x13830>
   24d30:	b	24d34 <__assert_fail@plt+0x13830>
   24d34:	mvn	r0, #1
   24d38:	str	r0, [fp, #-28]	; 0xffffffe4
   24d3c:	b	250f4 <__assert_fail@plt+0x13bf0>
   24d40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24d44:	ldr	r0, [r0, #100]	; 0x64
   24d48:	movw	r1, #0
   24d4c:	cmp	r0, r1
   24d50:	beq	24e04 <__assert_fail@plt+0x13900>
   24d54:	ldr	r0, [sp, #16]
   24d58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24d5c:	ldr	r1, [r1, #100]	; 0x64
   24d60:	ldr	r2, [sp, #20]
   24d64:	add	r1, r1, r2, lsl #2
   24d68:	str	r0, [r1]
   24d6c:	ldr	r0, [sp, #36]	; 0x24
   24d70:	ldr	r0, [r0, #76]	; 0x4c
   24d74:	cmp	r0, #0
   24d78:	beq	24e00 <__assert_fail@plt+0x138fc>
   24d7c:	movw	r0, #0
   24d80:	strb	r0, [sp, #15]
   24d84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24d88:	ldr	r1, [sp, #16]
   24d8c:	add	r1, r1, #4
   24d90:	movw	r2, #0
   24d94:	bl	25dec <__assert_fail@plt+0x148e8>
   24d98:	str	r0, [sp, #32]
   24d9c:	ldr	r0, [sp, #32]
   24da0:	cmp	r0, #0
   24da4:	beq	24db4 <__assert_fail@plt+0x138b0>
   24da8:	ldr	r0, [sp, #32]
   24dac:	str	r0, [fp, #-28]	; 0xffffffe4
   24db0:	b	250f4 <__assert_fail@plt+0x13bf0>
   24db4:	ldr	r0, [sp, #16]
   24db8:	ldrb	r0, [r0, #52]	; 0x34
   24dbc:	ubfx	r0, r0, #6, #1
   24dc0:	and	r0, r0, #255	; 0xff
   24dc4:	cmp	r0, #0
   24dc8:	beq	24dfc <__assert_fail@plt+0x138f8>
   24dcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24dd0:	ldr	r1, [sp, #16]
   24dd4:	add	r1, r1, #4
   24dd8:	bl	25f00 <__assert_fail@plt+0x149fc>
   24ddc:	str	r0, [sp, #32]
   24de0:	ldr	r0, [sp, #32]
   24de4:	cmp	r0, #0
   24de8:	beq	24df8 <__assert_fail@plt+0x138f4>
   24dec:	ldr	r0, [sp, #32]
   24df0:	str	r0, [fp, #-28]	; 0xffffffe4
   24df4:	b	250f4 <__assert_fail@plt+0x13bf0>
   24df8:	b	24dfc <__assert_fail@plt+0x138f8>
   24dfc:	b	24e00 <__assert_fail@plt+0x138fc>
   24e00:	b	24e04 <__assert_fail@plt+0x13900>
   24e04:	ldr	r0, [sp, #16]
   24e08:	ldrb	r0, [r0, #52]	; 0x34
   24e0c:	ubfx	r0, r0, #4, #1
   24e10:	and	r0, r0, #255	; 0xff
   24e14:	cmp	r0, #0
   24e18:	beq	24e7c <__assert_fail@plt+0x13978>
   24e1c:	ldr	r0, [sp, #16]
   24e20:	ldrb	r0, [r0, #52]	; 0x34
   24e24:	lsr	r0, r0, #7
   24e28:	and	r0, r0, #255	; 0xff
   24e2c:	cmp	r0, #0
   24e30:	beq	24e4c <__assert_fail@plt+0x13948>
   24e34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24e38:	ldr	r1, [sp, #16]
   24e3c:	ldr	r2, [sp, #20]
   24e40:	bl	25100 <__assert_fail@plt+0x13bfc>
   24e44:	cmp	r0, #0
   24e48:	beq	24e78 <__assert_fail@plt+0x13974>
   24e4c:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   24e50:	tst	r0, #1
   24e54:	bne	24e64 <__assert_fail@plt+0x13960>
   24e58:	ldr	r0, [sp, #20]
   24e5c:	str	r0, [fp, #-28]	; 0xffffffe4
   24e60:	b	250f4 <__assert_fail@plt+0x13bf0>
   24e64:	ldr	r0, [sp, #20]
   24e68:	str	r0, [sp, #24]
   24e6c:	movw	r0, #1
   24e70:	str	r0, [sp, #28]
   24e74:	b	24e78 <__assert_fail@plt+0x13974>
   24e78:	b	24e7c <__assert_fail@plt+0x13978>
   24e7c:	b	24e80 <__assert_fail@plt+0x1397c>
   24e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24e84:	ldr	r0, [r0, #56]	; 0x38
   24e88:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24e8c:	ldr	r1, [r1, #40]	; 0x28
   24e90:	cmp	r0, r1
   24e94:	movw	r0, #0
   24e98:	movle	r0, #1
   24e9c:	mvn	r1, #0
   24ea0:	eor	r0, r0, r1
   24ea4:	tst	r0, #1
   24ea8:	beq	250c8 <__assert_fail@plt+0x13bc4>
   24eac:	ldr	r0, [sp, #16]
   24eb0:	str	r0, [sp, #4]
   24eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24eb8:	ldr	r0, [r0, #40]	; 0x28
   24ebc:	add	r0, r0, #1
   24ec0:	str	r0, [sp]
   24ec4:	ldr	r0, [sp]
   24ec8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24ecc:	ldr	r1, [r1, #36]	; 0x24
   24ed0:	cmp	r0, r1
   24ed4:	blt	24ef0 <__assert_fail@plt+0x139ec>
   24ed8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24edc:	ldr	r0, [r0, #36]	; 0x24
   24ee0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24ee4:	ldr	r1, [r1, #48]	; 0x30
   24ee8:	cmp	r0, r1
   24eec:	blt	24f1c <__assert_fail@plt+0x13a18>
   24ef0:	ldr	r0, [sp]
   24ef4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24ef8:	ldr	r1, [r1, #28]
   24efc:	cmp	r0, r1
   24f00:	blt	24f5c <__assert_fail@plt+0x13a58>
   24f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f08:	ldr	r0, [r0, #28]
   24f0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24f10:	ldr	r1, [r1, #48]	; 0x30
   24f14:	cmp	r0, r1
   24f18:	bge	24f5c <__assert_fail@plt+0x13a58>
   24f1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f20:	ldr	r1, [sp]
   24f24:	add	r1, r1, #1
   24f28:	bl	2643c <__assert_fail@plt+0x14f38>
   24f2c:	str	r0, [sp, #32]
   24f30:	ldr	r0, [sp, #32]
   24f34:	cmp	r0, #0
   24f38:	beq	24f58 <__assert_fail@plt+0x13a54>
   24f3c:	ldr	r0, [sp, #32]
   24f40:	cmp	r0, #12
   24f44:	bne	24f4c <__assert_fail@plt+0x13a48>
   24f48:	b	24f4c <__assert_fail@plt+0x13a48>
   24f4c:	mvn	r0, #1
   24f50:	str	r0, [fp, #-28]	; 0xffffffe4
   24f54:	b	250f4 <__assert_fail@plt+0x13bf0>
   24f58:	b	24f5c <__assert_fail@plt+0x13a58>
   24f5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24f60:	ldr	r2, [sp, #16]
   24f64:	add	r0, sp, #32
   24f68:	bl	26654 <__assert_fail@plt+0x15150>
   24f6c:	str	r0, [sp, #16]
   24f70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f74:	ldr	r0, [r0, #100]	; 0x64
   24f78:	movw	r1, #0
   24f7c:	cmp	r0, r1
   24f80:	beq	24f98 <__assert_fail@plt+0x13a94>
   24f84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24f88:	ldr	r2, [sp, #16]
   24f8c:	add	r0, sp, #32
   24f90:	bl	267d8 <__assert_fail@plt+0x152d4>
   24f94:	str	r0, [sp, #16]
   24f98:	ldr	r0, [sp, #16]
   24f9c:	movw	r1, #0
   24fa0:	cmp	r0, r1
   24fa4:	bne	25010 <__assert_fail@plt+0x13b0c>
   24fa8:	ldr	r0, [sp, #32]
   24fac:	cmp	r0, #0
   24fb0:	beq	24fc0 <__assert_fail@plt+0x13abc>
   24fb4:	mvn	r0, #1
   24fb8:	str	r0, [fp, #-28]	; 0xffffffe4
   24fbc:	b	250f4 <__assert_fail@plt+0x13bf0>
   24fc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24fc4:	ldr	r0, [r0, #100]	; 0x64
   24fc8:	movw	r1, #0
   24fcc:	cmp	r0, r1
   24fd0:	beq	25008 <__assert_fail@plt+0x13b04>
   24fd4:	ldr	r0, [sp, #28]
   24fd8:	cmp	r0, #0
   24fdc:	beq	24fec <__assert_fail@plt+0x13ae8>
   24fe0:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   24fe4:	tst	r0, #1
   24fe8:	beq	25008 <__assert_fail@plt+0x13b04>
   24fec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24ff0:	add	r0, sp, #32
   24ff4:	bl	26a54 <__assert_fail@plt+0x15550>
   24ff8:	str	r0, [sp, #16]
   24ffc:	movw	r1, #0
   25000:	cmp	r0, r1
   25004:	bne	2500c <__assert_fail@plt+0x13b08>
   25008:	b	250c8 <__assert_fail@plt+0x13bc4>
   2500c:	b	25010 <__assert_fail@plt+0x13b0c>
   25010:	ldrb	r0, [sp, #15]
   25014:	tst	r0, #1
   25018:	beq	25044 <__assert_fail@plt+0x13b40>
   2501c:	ldr	r0, [sp, #4]
   25020:	ldr	r1, [sp, #16]
   25024:	cmp	r0, r1
   25028:	bne	25038 <__assert_fail@plt+0x13b34>
   2502c:	ldr	r0, [sp]
   25030:	str	r0, [sp, #8]
   25034:	b	25040 <__assert_fail@plt+0x13b3c>
   25038:	movw	r0, #0
   2503c:	strb	r0, [sp, #15]
   25040:	b	25044 <__assert_fail@plt+0x13b40>
   25044:	ldr	r0, [sp, #16]
   25048:	ldrb	r0, [r0, #52]	; 0x34
   2504c:	ubfx	r0, r0, #4, #1
   25050:	and	r0, r0, #255	; 0xff
   25054:	cmp	r0, #0
   25058:	beq	250c4 <__assert_fail@plt+0x13bc0>
   2505c:	ldr	r0, [sp, #16]
   25060:	ldrb	r0, [r0, #52]	; 0x34
   25064:	lsr	r0, r0, #7
   25068:	and	r0, r0, #255	; 0xff
   2506c:	cmp	r0, #0
   25070:	beq	25090 <__assert_fail@plt+0x13b8c>
   25074:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25078:	ldr	r1, [sp, #16]
   2507c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25080:	ldr	r2, [r2, #40]	; 0x28
   25084:	bl	25100 <__assert_fail@plt+0x13bfc>
   25088:	cmp	r0, #0
   2508c:	beq	250c0 <__assert_fail@plt+0x13bbc>
   25090:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25094:	ldr	r0, [r0, #40]	; 0x28
   25098:	str	r0, [sp, #24]
   2509c:	movw	r0, #1
   250a0:	str	r0, [sp, #28]
   250a4:	movw	r0, #0
   250a8:	str	r0, [sp, #40]	; 0x28
   250ac:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   250b0:	tst	r0, #1
   250b4:	bne	250bc <__assert_fail@plt+0x13bb8>
   250b8:	b	250c8 <__assert_fail@plt+0x13bc4>
   250bc:	b	250c0 <__assert_fail@plt+0x13bbc>
   250c0:	b	250c4 <__assert_fail@plt+0x13bc0>
   250c4:	b	24e80 <__assert_fail@plt+0x1397c>
   250c8:	ldr	r0, [sp, #40]	; 0x28
   250cc:	movw	r1, #0
   250d0:	cmp	r0, r1
   250d4:	beq	250ec <__assert_fail@plt+0x13be8>
   250d8:	ldr	r0, [sp, #8]
   250dc:	ldr	r1, [sp, #40]	; 0x28
   250e0:	ldr	r2, [r1]
   250e4:	add	r0, r2, r0
   250e8:	str	r0, [r1]
   250ec:	ldr	r0, [sp, #24]
   250f0:	str	r0, [fp, #-28]	; 0xffffffe4
   250f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   250f8:	mov	sp, fp
   250fc:	pop	{fp, pc}
   25100:	push	{fp, lr}
   25104:	mov	fp, sp
   25108:	sub	sp, sp, #24
   2510c:	str	r0, [fp, #-8]
   25110:	str	r1, [sp, #12]
   25114:	str	r2, [sp, #8]
   25118:	ldr	r0, [sp, #12]
   2511c:	ldrb	r0, [r0, #52]	; 0x34
   25120:	ubfx	r0, r0, #4, #1
   25124:	and	r0, r0, #255	; 0xff
   25128:	cmp	r0, #0
   2512c:	beq	25134 <__assert_fail@plt+0x13c30>
   25130:	b	25134 <__assert_fail@plt+0x13c30>
   25134:	ldr	r0, [fp, #-8]
   25138:	ldr	r1, [sp, #8]
   2513c:	ldr	r2, [fp, #-8]
   25140:	ldr	r2, [r2, #88]	; 0x58
   25144:	bl	25a30 <__assert_fail@plt+0x1452c>
   25148:	str	r0, [sp]
   2514c:	movw	r0, #0
   25150:	str	r0, [sp, #4]
   25154:	ldr	r0, [sp, #4]
   25158:	ldr	r1, [sp, #12]
   2515c:	ldr	r1, [r1, #8]
   25160:	cmp	r0, r1
   25164:	bge	251c4 <__assert_fail@plt+0x13cc0>
   25168:	ldr	r0, [fp, #-8]
   2516c:	ldr	r0, [r0, #84]	; 0x54
   25170:	ldr	r1, [sp, #12]
   25174:	ldr	r1, [r1, #12]
   25178:	ldr	r2, [sp, #4]
   2517c:	add	r1, r1, r2, lsl #2
   25180:	ldr	r1, [r1]
   25184:	ldr	r2, [sp]
   25188:	bl	2aed8 <__assert_fail@plt+0x199d4>
   2518c:	tst	r0, #1
   25190:	beq	251b0 <__assert_fail@plt+0x13cac>
   25194:	ldr	r0, [sp, #12]
   25198:	ldr	r0, [r0, #12]
   2519c:	ldr	r1, [sp, #4]
   251a0:	add	r0, r0, r1, lsl #2
   251a4:	ldr	r0, [r0]
   251a8:	str	r0, [fp, #-4]
   251ac:	b	251cc <__assert_fail@plt+0x13cc8>
   251b0:	b	251b4 <__assert_fail@plt+0x13cb0>
   251b4:	ldr	r0, [sp, #4]
   251b8:	add	r0, r0, #1
   251bc:	str	r0, [sp, #4]
   251c0:	b	25154 <__assert_fail@plt+0x13c50>
   251c4:	movw	r0, #0
   251c8:	str	r0, [fp, #-4]
   251cc:	ldr	r0, [fp, #-4]
   251d0:	mov	sp, fp
   251d4:	pop	{fp, pc}
   251d8:	push	{fp, lr}
   251dc:	mov	fp, sp
   251e0:	sub	sp, sp, #80	; 0x50
   251e4:	str	r0, [fp, #-8]
   251e8:	ldr	r0, [fp, #-8]
   251ec:	ldr	r0, [r0, #84]	; 0x54
   251f0:	str	r0, [fp, #-12]
   251f4:	movw	r0, #0
   251f8:	str	r0, [fp, #-32]	; 0xffffffe0
   251fc:	ldr	r1, [fp, #-8]
   25200:	ldr	r1, [r1, #100]	; 0x64
   25204:	cmp	r1, r0
   25208:	beq	25210 <__assert_fail@plt+0x13d0c>
   2520c:	b	25210 <__assert_fail@plt+0x13d0c>
   25210:	ldr	r0, [pc, #776]	; 25520 <__assert_fail@plt+0x1401c>
   25214:	ldr	r1, [fp, #-8]
   25218:	ldr	r1, [r1, #92]	; 0x5c
   2521c:	str	r1, [fp, #-20]	; 0xffffffec
   25220:	ldr	r1, [fp, #-8]
   25224:	ldr	r1, [r1, #96]	; 0x60
   25228:	str	r1, [fp, #-16]
   2522c:	ldr	r1, [fp, #-20]	; 0xffffffec
   25230:	cmp	r0, r1
   25234:	bhi	25244 <__assert_fail@plt+0x13d40>
   25238:	movw	r0, #12
   2523c:	str	r0, [fp, #-4]
   25240:	b	25514 <__assert_fail@plt+0x14010>
   25244:	ldr	r0, [fp, #-20]	; 0xffffffec
   25248:	add	r0, r0, #1
   2524c:	lsl	r0, r0, #2
   25250:	bl	3354c <__assert_fail@plt+0x22048>
   25254:	str	r0, [fp, #-28]	; 0xffffffe4
   25258:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2525c:	movw	r1, #0
   25260:	cmp	r0, r1
   25264:	bne	25274 <__assert_fail@plt+0x13d70>
   25268:	movw	r0, #12
   2526c:	str	r0, [fp, #-24]	; 0xffffffe8
   25270:	b	254fc <__assert_fail@plt+0x13ff8>
   25274:	ldr	r0, [fp, #-12]
   25278:	ldr	r0, [r0, #76]	; 0x4c
   2527c:	cmp	r0, #0
   25280:	beq	2544c <__assert_fail@plt+0x13f48>
   25284:	ldr	r0, [fp, #-20]	; 0xffffffec
   25288:	add	r0, r0, #1
   2528c:	lsl	r0, r0, #2
   25290:	bl	3354c <__assert_fail@plt+0x22048>
   25294:	str	r0, [fp, #-32]	; 0xffffffe0
   25298:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2529c:	movw	r1, #0
   252a0:	cmp	r0, r1
   252a4:	bne	252b4 <__assert_fail@plt+0x13db0>
   252a8:	movw	r0, #12
   252ac:	str	r0, [fp, #-24]	; 0xffffffe8
   252b0:	b	254fc <__assert_fail@plt+0x13ff8>
   252b4:	b	252b8 <__assert_fail@plt+0x13db4>
   252b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   252bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   252c0:	add	r1, r1, #1
   252c4:	lsl	r2, r1, #2
   252c8:	movw	r1, #0
   252cc:	and	r1, r1, #255	; 0xff
   252d0:	bl	11420 <memset@plt>
   252d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   252d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   252dc:	ldr	r3, [fp, #-16]
   252e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   252e4:	add	ip, sp, #20
   252e8:	str	r0, [sp, #16]
   252ec:	mov	r0, ip
   252f0:	ldr	ip, [sp, #16]
   252f4:	str	ip, [sp]
   252f8:	bl	2b008 <__assert_fail@plt+0x19b04>
   252fc:	ldr	r0, [fp, #-8]
   25300:	add	r1, sp, #20
   25304:	bl	2b07c <__assert_fail@plt+0x19b78>
   25308:	str	r0, [fp, #-24]	; 0xffffffe8
   2530c:	ldr	r0, [sp, #44]	; 0x2c
   25310:	bl	34c20 <__assert_fail@plt+0x2371c>
   25314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25318:	cmp	r0, #0
   2531c:	beq	25324 <__assert_fail@plt+0x13e20>
   25320:	b	254fc <__assert_fail@plt+0x13ff8>
   25324:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25328:	ldr	r0, [r0]
   2532c:	movw	r1, #0
   25330:	cmp	r0, r1
   25334:	bne	2534c <__assert_fail@plt+0x13e48>
   25338:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2533c:	ldr	r0, [r0]
   25340:	movw	r1, #0
   25344:	cmp	r0, r1
   25348:	beq	25350 <__assert_fail@plt+0x13e4c>
   2534c:	b	2540c <__assert_fail@plt+0x13f08>
   25350:	b	25354 <__assert_fail@plt+0x13e50>
   25354:	ldr	r0, [fp, #-20]	; 0xffffffec
   25358:	mvn	r1, #0
   2535c:	add	r0, r0, r1
   25360:	str	r0, [fp, #-20]	; 0xffffffec
   25364:	ldr	r0, [fp, #-20]	; 0xffffffec
   25368:	cmp	r0, #0
   2536c:	bge	2537c <__assert_fail@plt+0x13e78>
   25370:	movw	r0, #1
   25374:	str	r0, [fp, #-24]	; 0xffffffe8
   25378:	b	254fc <__assert_fail@plt+0x13ff8>
   2537c:	b	25380 <__assert_fail@plt+0x13e7c>
   25380:	ldr	r0, [fp, #-8]
   25384:	ldr	r0, [r0, #100]	; 0x64
   25388:	ldr	r1, [fp, #-20]	; 0xffffffec
   2538c:	add	r0, r0, r1, lsl #2
   25390:	ldr	r0, [r0]
   25394:	movw	r1, #0
   25398:	cmp	r0, r1
   2539c:	movw	r0, #1
   253a0:	str	r0, [sp, #12]
   253a4:	beq	253dc <__assert_fail@plt+0x13ed8>
   253a8:	ldr	r0, [fp, #-8]
   253ac:	ldr	r0, [r0, #100]	; 0x64
   253b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   253b4:	ldr	r0, [r0, r1, lsl #2]
   253b8:	ldrb	r0, [r0, #52]	; 0x34
   253bc:	ubfx	r0, r0, #4, #1
   253c0:	and	r0, r0, #255	; 0xff
   253c4:	cmp	r0, #0
   253c8:	movw	r0, #0
   253cc:	movne	r0, #1
   253d0:	mvn	r1, #0
   253d4:	eor	r0, r0, r1
   253d8:	str	r0, [sp, #12]
   253dc:	ldr	r0, [sp, #12]
   253e0:	tst	r0, #1
   253e4:	bne	25354 <__assert_fail@plt+0x13e50>
   253e8:	ldr	r0, [fp, #-8]
   253ec:	ldr	r1, [r0, #100]	; 0x64
   253f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   253f4:	add	r1, r1, r2, lsl #2
   253f8:	ldr	r1, [r1]
   253fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   25400:	bl	25100 <__assert_fail@plt+0x13bfc>
   25404:	str	r0, [fp, #-16]
   25408:	b	252b8 <__assert_fail@plt+0x13db4>
   2540c:	ldr	r0, [fp, #-12]
   25410:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25414:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25418:	ldr	r3, [fp, #-20]	; 0xffffffec
   2541c:	add	r3, r3, #1
   25420:	bl	2b274 <__assert_fail@plt+0x19d70>
   25424:	str	r0, [fp, #-24]	; 0xffffffe8
   25428:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2542c:	bl	34c20 <__assert_fail@plt+0x2371c>
   25430:	movw	r0, #0
   25434:	str	r0, [fp, #-32]	; 0xffffffe0
   25438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2543c:	cmp	r0, #0
   25440:	beq	25448 <__assert_fail@plt+0x13f44>
   25444:	b	254fc <__assert_fail@plt+0x13ff8>
   25448:	b	254c0 <__assert_fail@plt+0x13fbc>
   2544c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25450:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25454:	ldr	r3, [fp, #-16]
   25458:	ldr	r0, [fp, #-20]	; 0xffffffec
   2545c:	add	ip, sp, #20
   25460:	str	r0, [sp, #8]
   25464:	mov	r0, ip
   25468:	ldr	ip, [sp, #8]
   2546c:	str	ip, [sp]
   25470:	bl	2b008 <__assert_fail@plt+0x19b04>
   25474:	ldr	r0, [fp, #-8]
   25478:	add	r1, sp, #20
   2547c:	bl	2b07c <__assert_fail@plt+0x19b78>
   25480:	str	r0, [fp, #-24]	; 0xffffffe8
   25484:	ldr	r0, [sp, #44]	; 0x2c
   25488:	bl	34c20 <__assert_fail@plt+0x2371c>
   2548c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25490:	cmp	r0, #0
   25494:	beq	2549c <__assert_fail@plt+0x13f98>
   25498:	b	254fc <__assert_fail@plt+0x13ff8>
   2549c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   254a0:	ldr	r0, [r0]
   254a4:	movw	r1, #0
   254a8:	cmp	r0, r1
   254ac:	bne	254bc <__assert_fail@plt+0x13fb8>
   254b0:	movw	r0, #1
   254b4:	str	r0, [fp, #-24]	; 0xffffffe8
   254b8:	b	254fc <__assert_fail@plt+0x13ff8>
   254bc:	b	254c0 <__assert_fail@plt+0x13fbc>
   254c0:	ldr	r0, [fp, #-8]
   254c4:	ldr	r0, [r0, #100]	; 0x64
   254c8:	bl	34c20 <__assert_fail@plt+0x2371c>
   254cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   254d0:	ldr	r1, [fp, #-8]
   254d4:	str	r0, [r1, #100]	; 0x64
   254d8:	movw	r0, #0
   254dc:	str	r0, [fp, #-28]	; 0xffffffe4
   254e0:	ldr	r1, [fp, #-16]
   254e4:	ldr	r2, [fp, #-8]
   254e8:	str	r1, [r2, #96]	; 0x60
   254ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   254f0:	ldr	r2, [fp, #-8]
   254f4:	str	r1, [r2, #92]	; 0x5c
   254f8:	str	r0, [fp, #-24]	; 0xffffffe8
   254fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25500:	bl	34c20 <__assert_fail@plt+0x2371c>
   25504:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25508:	bl	34c20 <__assert_fail@plt+0x2371c>
   2550c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25510:	str	r0, [fp, #-4]
   25514:	ldr	r0, [fp, #-4]
   25518:	mov	sp, fp
   2551c:	pop	{fp, pc}
   25520:	svccc	0x00ffffff
   25524:	push	{fp, lr}
   25528:	mov	fp, sp
   2552c:	sub	sp, sp, #24
   25530:	str	r0, [fp, #-4]
   25534:	movw	r0, #0
   25538:	str	r0, [fp, #-8]
   2553c:	ldr	r0, [fp, #-8]
   25540:	ldr	r1, [fp, #-4]
   25544:	ldr	r1, [r1, #124]	; 0x7c
   25548:	cmp	r0, r1
   2554c:	bge	25614 <__assert_fail@plt+0x14110>
   25550:	ldr	r0, [fp, #-4]
   25554:	ldr	r0, [r0, #132]	; 0x84
   25558:	ldr	r1, [fp, #-8]
   2555c:	add	r0, r0, r1, lsl #2
   25560:	ldr	r0, [r0]
   25564:	str	r0, [sp, #8]
   25568:	movw	r0, #0
   2556c:	str	r0, [sp, #12]
   25570:	ldr	r0, [sp, #12]
   25574:	ldr	r1, [sp, #8]
   25578:	ldr	r1, [r1, #16]
   2557c:	cmp	r0, r1
   25580:	bge	255c0 <__assert_fail@plt+0x140bc>
   25584:	ldr	r0, [sp, #8]
   25588:	ldr	r0, [r0, #20]
   2558c:	ldr	r1, [sp, #12]
   25590:	add	r0, r0, r1, lsl #2
   25594:	ldr	r0, [r0]
   25598:	str	r0, [sp, #4]
   2559c:	ldr	r0, [sp, #4]
   255a0:	ldr	r0, [r0, #16]
   255a4:	bl	34c20 <__assert_fail@plt+0x2371c>
   255a8:	ldr	r0, [sp, #4]
   255ac:	bl	34c20 <__assert_fail@plt+0x2371c>
   255b0:	ldr	r0, [sp, #12]
   255b4:	add	r0, r0, #1
   255b8:	str	r0, [sp, #12]
   255bc:	b	25570 <__assert_fail@plt+0x1406c>
   255c0:	ldr	r0, [sp, #8]
   255c4:	ldr	r0, [r0, #20]
   255c8:	bl	34c20 <__assert_fail@plt+0x2371c>
   255cc:	ldr	r0, [sp, #8]
   255d0:	ldr	r0, [r0, #8]
   255d4:	movw	r1, #0
   255d8:	cmp	r0, r1
   255dc:	beq	255fc <__assert_fail@plt+0x140f8>
   255e0:	ldr	r0, [sp, #8]
   255e4:	ldr	r0, [r0, #8]
   255e8:	ldr	r0, [r0, #8]
   255ec:	bl	34c20 <__assert_fail@plt+0x2371c>
   255f0:	ldr	r0, [sp, #8]
   255f4:	ldr	r0, [r0, #8]
   255f8:	bl	34c20 <__assert_fail@plt+0x2371c>
   255fc:	ldr	r0, [sp, #8]
   25600:	bl	34c20 <__assert_fail@plt+0x2371c>
   25604:	ldr	r0, [fp, #-8]
   25608:	add	r0, r0, #1
   2560c:	str	r0, [fp, #-8]
   25610:	b	2553c <__assert_fail@plt+0x14038>
   25614:	ldr	r0, [fp, #-4]
   25618:	movw	r1, #0
   2561c:	str	r1, [r0, #124]	; 0x7c
   25620:	ldr	r0, [fp, #-4]
   25624:	str	r1, [r0, #108]	; 0x6c
   25628:	mov	sp, fp
   2562c:	pop	{fp, pc}
   25630:	push	{r4, sl, fp, lr}
   25634:	add	fp, sp, #8
   25638:	sub	sp, sp, #240	; 0xf0
   2563c:	ldr	ip, [fp, #8]
   25640:	str	r0, [fp, #-16]
   25644:	str	r1, [fp, #-20]	; 0xffffffec
   25648:	str	r2, [fp, #-24]	; 0xffffffe8
   2564c:	str	r3, [fp, #-28]	; 0xffffffe4
   25650:	and	r0, ip, #1
   25654:	strb	r0, [fp, #-29]	; 0xffffffe3
   25658:	ldr	r0, [fp, #-16]
   2565c:	ldr	r0, [r0]
   25660:	str	r0, [fp, #-36]	; 0xffffffdc
   25664:	movw	r0, #31888	; 0x7c90
   25668:	movt	r0, #3
   2566c:	ldr	r1, [r0]
   25670:	str	r1, [fp, #-72]	; 0xffffffb8
   25674:	ldr	r1, [r0, #4]
   25678:	str	r1, [fp, #-68]	; 0xffffffbc
   2567c:	ldr	r0, [r0, #8]
   25680:	str	r0, [fp, #-64]	; 0xffffffc0
   25684:	add	r0, sp, #36	; 0x24
   25688:	bl	2ce80 <__assert_fail@plt+0x1b97c>
   2568c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25690:	cmp	r0, #1
   25694:	bls	2569c <__assert_fail@plt+0x14198>
   25698:	b	2569c <__assert_fail@plt+0x14198>
   2569c:	ldr	r0, [fp, #-20]	; 0xffffffec
   256a0:	ldr	r0, [r0, #100]	; 0x64
   256a4:	movw	r1, #0
   256a8:	cmp	r0, r1
   256ac:	beq	256b4 <__assert_fail@plt+0x141b0>
   256b0:	b	256b4 <__assert_fail@plt+0x141b0>
   256b4:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   256b8:	tst	r0, #1
   256bc:	beq	25708 <__assert_fail@plt+0x14204>
   256c0:	sub	r0, fp, #72	; 0x48
   256c4:	str	r0, [fp, #-60]	; 0xffffffc4
   256c8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   256cc:	ldr	r0, [r0, #4]
   256d0:	movw	r1, #24
   256d4:	mul	r0, r0, r1
   256d8:	bl	3354c <__assert_fail@plt+0x22048>
   256dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   256e0:	str	r0, [r1, #8]
   256e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   256e8:	ldr	r0, [r0, #8]
   256ec:	movw	r1, #0
   256f0:	cmp	r0, r1
   256f4:	bne	25704 <__assert_fail@plt+0x14200>
   256f8:	movw	r0, #12
   256fc:	str	r0, [fp, #-12]
   25700:	b	259ec <__assert_fail@plt+0x144e8>
   25704:	b	25710 <__assert_fail@plt+0x1420c>
   25708:	movw	r0, #0
   2570c:	str	r0, [fp, #-60]	; 0xffffffc4
   25710:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25714:	ldr	r0, [r0, #72]	; 0x48
   25718:	str	r0, [fp, #-44]	; 0xffffffd4
   2571c:	sub	r0, fp, #56	; 0x38
   25720:	movw	r1, #0
   25724:	and	r1, r1, #255	; 0xff
   25728:	movw	r2, #12
   2572c:	bl	11420 <memset@plt>
   25730:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25734:	add	r0, sp, #36	; 0x24
   25738:	bl	2ceb8 <__assert_fail@plt+0x1b9b4>
   2573c:	tst	r0, #1
   25740:	bne	25760 <__assert_fail@plt+0x1425c>
   25744:	add	r0, sp, #36	; 0x24
   25748:	bl	2cf78 <__assert_fail@plt+0x1ba74>
   2574c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25750:	bl	2cfb4 <__assert_fail@plt+0x1bab0>
   25754:	movw	r1, #12
   25758:	str	r1, [fp, #-12]
   2575c:	b	259ec <__assert_fail@plt+0x144e8>
   25760:	add	r0, sp, #36	; 0x24
   25764:	bl	2d058 <__assert_fail@plt+0x1bb54>
   25768:	str	r0, [sp, #32]
   2576c:	ldr	r0, [sp, #32]
   25770:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25774:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25778:	lsl	r2, r2, #3
   2577c:	bl	112a0 <memcpy@plt>
   25780:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25784:	ldr	r0, [r0]
   25788:	str	r0, [fp, #-40]	; 0xffffffd8
   2578c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25790:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25794:	ldr	r1, [r1, #4]
   25798:	cmp	r0, r1
   2579c:	bgt	259d0 <__assert_fail@plt+0x144cc>
   257a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   257a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   257a8:	ldr	r2, [sp, #32]
   257ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   257b0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   257b4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   257b8:	str	ip, [sp]
   257bc:	str	lr, [sp, #4]
   257c0:	bl	2d070 <__assert_fail@plt+0x1bb6c>
   257c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   257c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   257cc:	ldr	r1, [r1, #4]
   257d0:	cmp	r0, r1
   257d4:	bne	257ec <__assert_fail@plt+0x142e8>
   257d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   257dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   257e0:	ldr	r1, [r1, #96]	; 0x60
   257e4:	cmp	r0, r1
   257e8:	beq	25810 <__assert_fail@plt+0x1430c>
   257ec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   257f0:	movw	r1, #0
   257f4:	cmp	r0, r1
   257f8:	beq	258f0 <__assert_fail@plt+0x143ec>
   257fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   25800:	sub	r0, fp, #56	; 0x38
   25804:	bl	23104 <__assert_fail@plt+0x11c00>
   25808:	cmp	r0, #0
   2580c:	beq	258f0 <__assert_fail@plt+0x143ec>
   25810:	mvn	r0, #0
   25814:	str	r0, [fp, #-44]	; 0xffffffd4
   25818:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2581c:	movw	r1, #0
   25820:	cmp	r0, r1
   25824:	beq	258c0 <__assert_fail@plt+0x143bc>
   25828:	movw	r0, #0
   2582c:	str	r0, [sp, #28]
   25830:	ldr	r0, [sp, #28]
   25834:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25838:	cmp	r0, r1
   2583c:	bcs	258bc <__assert_fail@plt+0x143b8>
   25840:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25844:	ldr	r1, [sp, #28]
   25848:	add	r0, r0, r1, lsl #3
   2584c:	ldr	r0, [r0]
   25850:	cmn	r0, #1
   25854:	ble	258a8 <__assert_fail@plt+0x143a4>
   25858:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2585c:	ldr	r1, [sp, #28]
   25860:	add	r0, r0, r1, lsl #3
   25864:	ldr	r0, [r0, #4]
   25868:	cmn	r0, #1
   2586c:	bne	258a8 <__assert_fail@plt+0x143a4>
   25870:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25874:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25878:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2587c:	ldr	r1, [sp, #32]
   25880:	sub	ip, fp, #40	; 0x28
   25884:	str	r1, [sp, #24]
   25888:	mov	r1, ip
   2588c:	ldr	ip, [sp, #24]
   25890:	str	ip, [sp]
   25894:	sub	lr, fp, #56	; 0x38
   25898:	str	lr, [sp, #4]
   2589c:	bl	2d210 <__assert_fail@plt+0x1bd0c>
   258a0:	str	r0, [fp, #-44]	; 0xffffffd4
   258a4:	b	258bc <__assert_fail@plt+0x143b8>
   258a8:	b	258ac <__assert_fail@plt+0x143a8>
   258ac:	ldr	r0, [sp, #28]
   258b0:	add	r0, r0, #1
   258b4:	str	r0, [sp, #28]
   258b8:	b	25830 <__assert_fail@plt+0x1432c>
   258bc:	b	258c0 <__assert_fail@plt+0x143bc>
   258c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   258c4:	cmp	r0, #0
   258c8:	bge	258ec <__assert_fail@plt+0x143e8>
   258cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   258d0:	bl	34c20 <__assert_fail@plt+0x2371c>
   258d4:	add	r0, sp, #36	; 0x24
   258d8:	bl	2cf78 <__assert_fail@plt+0x1ba74>
   258dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   258e0:	bl	2cfb4 <__assert_fail@plt+0x1bab0>
   258e4:	str	r0, [fp, #-12]
   258e8:	b	259ec <__assert_fail@plt+0x144e8>
   258ec:	b	258f0 <__assert_fail@plt+0x143ec>
   258f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   258f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   258f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   258fc:	ldr	r3, [sp, #32]
   25900:	ldr	ip, [fp, #-44]	; 0xffffffd4
   25904:	ldr	lr, [fp, #-60]	; 0xffffffc4
   25908:	sub	r4, fp, #40	; 0x28
   2590c:	str	r4, [sp]
   25910:	str	ip, [sp, #4]
   25914:	sub	ip, fp, #56	; 0x38
   25918:	str	ip, [sp, #8]
   2591c:	str	lr, [sp, #12]
   25920:	bl	2d3a8 <__assert_fail@plt+0x1bea4>
   25924:	str	r0, [fp, #-44]	; 0xffffffd4
   25928:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2592c:	cmp	r0, #0
   25930:	bge	259cc <__assert_fail@plt+0x144c8>
   25934:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25938:	cmn	r0, #2
   2593c:	bne	25964 <__assert_fail@plt+0x14460>
   25940:	ldr	r0, [fp, #-48]	; 0xffffffd0
   25944:	bl	34c20 <__assert_fail@plt+0x2371c>
   25948:	add	r0, sp, #36	; 0x24
   2594c:	bl	2cf78 <__assert_fail@plt+0x1ba74>
   25950:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25954:	bl	2cfb4 <__assert_fail@plt+0x1bab0>
   25958:	movw	r1, #12
   2595c:	str	r1, [fp, #-12]
   25960:	b	259ec <__assert_fail@plt+0x144e8>
   25964:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25968:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2596c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25970:	ldr	r1, [sp, #32]
   25974:	sub	ip, fp, #40	; 0x28
   25978:	str	r1, [sp, #20]
   2597c:	mov	r1, ip
   25980:	ldr	ip, [sp, #20]
   25984:	str	ip, [sp]
   25988:	sub	lr, fp, #56	; 0x38
   2598c:	str	lr, [sp, #4]
   25990:	bl	2d210 <__assert_fail@plt+0x1bd0c>
   25994:	str	r0, [fp, #-44]	; 0xffffffd4
   25998:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2599c:	cmp	r0, #0
   259a0:	bge	259c8 <__assert_fail@plt+0x144c4>
   259a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   259a8:	bl	34c20 <__assert_fail@plt+0x2371c>
   259ac:	add	r0, sp, #36	; 0x24
   259b0:	bl	2cf78 <__assert_fail@plt+0x1ba74>
   259b4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   259b8:	bl	2cfb4 <__assert_fail@plt+0x1bab0>
   259bc:	movw	r1, #1
   259c0:	str	r1, [fp, #-12]
   259c4:	b	259ec <__assert_fail@plt+0x144e8>
   259c8:	b	259cc <__assert_fail@plt+0x144c8>
   259cc:	b	2578c <__assert_fail@plt+0x14288>
   259d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   259d4:	bl	34c20 <__assert_fail@plt+0x2371c>
   259d8:	add	r0, sp, #36	; 0x24
   259dc:	bl	2cf78 <__assert_fail@plt+0x1ba74>
   259e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   259e4:	bl	2cfb4 <__assert_fail@plt+0x1bab0>
   259e8:	str	r0, [fp, #-12]
   259ec:	ldr	r0, [fp, #-12]
   259f0:	sub	sp, fp, #8
   259f4:	pop	{r4, sl, fp, pc}
   259f8:	push	{fp, lr}
   259fc:	mov	fp, sp
   25a00:	sub	sp, sp, #8
   25a04:	str	r0, [sp, #4]
   25a08:	ldr	r0, [sp, #4]
   25a0c:	bl	25524 <__assert_fail@plt+0x14020>
   25a10:	ldr	r0, [sp, #4]
   25a14:	ldr	r0, [r0, #132]	; 0x84
   25a18:	bl	34c20 <__assert_fail@plt+0x2371c>
   25a1c:	ldr	r0, [sp, #4]
   25a20:	ldr	r0, [r0, #116]	; 0x74
   25a24:	bl	34c20 <__assert_fail@plt+0x2371c>
   25a28:	mov	sp, fp
   25a2c:	pop	{fp, pc}
   25a30:	push	{fp, lr}
   25a34:	mov	fp, sp
   25a38:	sub	sp, sp, #40	; 0x28
   25a3c:	str	r0, [fp, #-8]
   25a40:	str	r1, [fp, #-12]
   25a44:	str	r2, [fp, #-16]
   25a48:	ldr	r0, [fp, #-12]
   25a4c:	cmp	r0, #0
   25a50:	bge	25a64 <__assert_fail@plt+0x14560>
   25a54:	ldr	r0, [fp, #-8]
   25a58:	ldr	r0, [r0, #60]	; 0x3c
   25a5c:	str	r0, [fp, #-4]
   25a60:	b	25c24 <__assert_fail@plt+0x14720>
   25a64:	ldr	r0, [fp, #-12]
   25a68:	ldr	r1, [fp, #-8]
   25a6c:	ldr	r1, [r1, #48]	; 0x30
   25a70:	cmp	r0, r1
   25a74:	bne	25aa0 <__assert_fail@plt+0x1459c>
   25a78:	ldr	r0, [fp, #-16]
   25a7c:	and	r0, r0, #2
   25a80:	cmp	r0, #0
   25a84:	movw	r0, #0
   25a88:	movne	r0, #1
   25a8c:	tst	r0, #1
   25a90:	movw	r0, #8
   25a94:	moveq	r0, #10
   25a98:	str	r0, [fp, #-4]
   25a9c:	b	25c24 <__assert_fail@plt+0x14720>
   25aa0:	ldr	r0, [fp, #-8]
   25aa4:	ldr	r0, [r0, #80]	; 0x50
   25aa8:	cmp	r0, #1
   25aac:	ble	25ba8 <__assert_fail@plt+0x146a4>
   25ab0:	ldr	r0, [fp, #-12]
   25ab4:	str	r0, [sp, #12]
   25ab8:	ldr	r0, [fp, #-8]
   25abc:	ldr	r0, [r0, #8]
   25ac0:	ldr	r1, [sp, #12]
   25ac4:	add	r0, r0, r1, lsl #2
   25ac8:	ldr	r0, [r0]
   25acc:	cmn	r0, #1
   25ad0:	bne	25b14 <__assert_fail@plt+0x14610>
   25ad4:	ldr	r0, [sp, #12]
   25ad8:	cmp	r0, #0
   25adc:	blt	25ae4 <__assert_fail@plt+0x145e0>
   25ae0:	b	25ae4 <__assert_fail@plt+0x145e0>
   25ae4:	ldr	r0, [sp, #12]
   25ae8:	mvn	r1, #0
   25aec:	add	r0, r0, r1
   25af0:	str	r0, [sp, #12]
   25af4:	ldr	r0, [sp, #12]
   25af8:	cmp	r0, #0
   25afc:	bge	25b10 <__assert_fail@plt+0x1460c>
   25b00:	ldr	r0, [fp, #-8]
   25b04:	ldr	r0, [r0, #60]	; 0x3c
   25b08:	str	r0, [fp, #-4]
   25b0c:	b	25c24 <__assert_fail@plt+0x14720>
   25b10:	b	25ab8 <__assert_fail@plt+0x145b4>
   25b14:	ldr	r0, [fp, #-8]
   25b18:	ldr	r0, [r0, #8]
   25b1c:	ldr	r1, [sp, #12]
   25b20:	add	r0, r0, r1, lsl #2
   25b24:	ldr	r0, [r0]
   25b28:	str	r0, [sp, #16]
   25b2c:	ldr	r0, [fp, #-8]
   25b30:	ldrb	r0, [r0, #78]	; 0x4e
   25b34:	cmp	r0, #0
   25b38:	beq	25b64 <__assert_fail@plt+0x14660>
   25b3c:	ldr	r0, [sp, #16]
   25b40:	bl	11408 <iswalnum@plt>
   25b44:	cmp	r0, #0
   25b48:	bne	25b58 <__assert_fail@plt+0x14654>
   25b4c:	ldr	r0, [sp, #16]
   25b50:	cmp	r0, #95	; 0x5f
   25b54:	bne	25b64 <__assert_fail@plt+0x14660>
   25b58:	movw	r0, #1
   25b5c:	str	r0, [fp, #-4]
   25b60:	b	25c24 <__assert_fail@plt+0x14720>
   25b64:	ldr	r0, [sp, #16]
   25b68:	cmp	r0, #10
   25b6c:	movw	r0, #0
   25b70:	str	r0, [sp, #8]
   25b74:	bne	25b90 <__assert_fail@plt+0x1468c>
   25b78:	ldr	r0, [fp, #-8]
   25b7c:	ldrb	r0, [r0, #77]	; 0x4d
   25b80:	cmp	r0, #0
   25b84:	movw	r0, #0
   25b88:	movne	r0, #1
   25b8c:	str	r0, [sp, #8]
   25b90:	ldr	r0, [sp, #8]
   25b94:	tst	r0, #1
   25b98:	movw	r0, #2
   25b9c:	moveq	r0, #0
   25ba0:	str	r0, [fp, #-4]
   25ba4:	b	25c24 <__assert_fail@plt+0x14720>
   25ba8:	ldr	r0, [fp, #-8]
   25bac:	ldr	r0, [r0, #4]
   25bb0:	ldr	r1, [fp, #-12]
   25bb4:	add	r0, r0, r1
   25bb8:	ldrb	r0, [r0]
   25bbc:	str	r0, [sp, #20]
   25bc0:	ldr	r0, [fp, #-8]
   25bc4:	ldr	r0, [r0, #68]	; 0x44
   25bc8:	ldr	r1, [sp, #20]
   25bcc:	bl	25da0 <__assert_fail@plt+0x1489c>
   25bd0:	tst	r0, #1
   25bd4:	beq	25be4 <__assert_fail@plt+0x146e0>
   25bd8:	movw	r0, #1
   25bdc:	str	r0, [fp, #-4]
   25be0:	b	25c24 <__assert_fail@plt+0x14720>
   25be4:	ldr	r0, [sp, #20]
   25be8:	cmp	r0, #10
   25bec:	movw	r0, #0
   25bf0:	str	r0, [sp, #4]
   25bf4:	bne	25c10 <__assert_fail@plt+0x1470c>
   25bf8:	ldr	r0, [fp, #-8]
   25bfc:	ldrb	r0, [r0, #77]	; 0x4d
   25c00:	cmp	r0, #0
   25c04:	movw	r0, #0
   25c08:	movne	r0, #1
   25c0c:	str	r0, [sp, #4]
   25c10:	ldr	r0, [sp, #4]
   25c14:	tst	r0, #1
   25c18:	movw	r0, #2
   25c1c:	moveq	r0, #0
   25c20:	str	r0, [fp, #-4]
   25c24:	ldr	r0, [fp, #-4]
   25c28:	mov	sp, fp
   25c2c:	pop	{fp, pc}
   25c30:	push	{fp, lr}
   25c34:	mov	fp, sp
   25c38:	sub	sp, sp, #48	; 0x30
   25c3c:	str	r0, [fp, #-4]
   25c40:	str	r1, [fp, #-8]
   25c44:	str	r2, [fp, #-12]
   25c48:	mvn	r0, #0
   25c4c:	str	r0, [sp, #16]
   25c50:	ldr	r0, [fp, #-4]
   25c54:	ldr	r0, [r0, #24]
   25c58:	ldr	r1, [fp, #-4]
   25c5c:	ldr	r1, [r1, #32]
   25c60:	add	r0, r0, r1
   25c64:	str	r0, [sp, #24]
   25c68:	ldr	r0, [sp, #24]
   25c6c:	ldr	r1, [fp, #-8]
   25c70:	cmp	r0, r1
   25c74:	bge	25d88 <__assert_fail@plt+0x14884>
   25c78:	ldr	r0, [fp, #-4]
   25c7c:	ldr	r0, [r0, #44]	; 0x2c
   25c80:	ldr	r1, [sp, #24]
   25c84:	sub	r0, r0, r1
   25c88:	str	r0, [sp, #8]
   25c8c:	ldr	r0, [fp, #-4]
   25c90:	ldr	r1, [r0, #16]
   25c94:	str	r1, [fp, #-20]	; 0xffffffec
   25c98:	ldr	r0, [r0, #20]
   25c9c:	str	r0, [fp, #-16]
   25ca0:	ldr	r0, [fp, #-4]
   25ca4:	ldr	r0, [r0]
   25ca8:	ldr	r1, [sp, #24]
   25cac:	add	r1, r0, r1
   25cb0:	ldr	r2, [sp, #8]
   25cb4:	ldr	r0, [fp, #-4]
   25cb8:	add	r3, r0, #16
   25cbc:	add	r0, sp, #12
   25cc0:	bl	34e90 <__assert_fail@plt+0x2398c>
   25cc4:	str	r0, [sp, #20]
   25cc8:	ldr	r0, [sp, #20]
   25ccc:	cmn	r0, #2
   25cd0:	movw	r0, #1
   25cd4:	str	r0, [sp, #4]
   25cd8:	beq	25d04 <__assert_fail@plt+0x14800>
   25cdc:	ldr	r0, [sp, #20]
   25ce0:	cmn	r0, #1
   25ce4:	movw	r0, #1
   25ce8:	str	r0, [sp, #4]
   25cec:	beq	25d04 <__assert_fail@plt+0x14800>
   25cf0:	ldr	r0, [sp, #20]
   25cf4:	cmp	r0, #0
   25cf8:	movw	r0, #0
   25cfc:	moveq	r0, #1
   25d00:	str	r0, [sp, #4]
   25d04:	ldr	r0, [sp, #4]
   25d08:	tst	r0, #1
   25d0c:	beq	25d6c <__assert_fail@plt+0x14868>
   25d10:	ldr	r0, [sp, #20]
   25d14:	cmp	r0, #0
   25d18:	beq	25d28 <__assert_fail@plt+0x14824>
   25d1c:	ldr	r0, [sp, #8]
   25d20:	cmp	r0, #0
   25d24:	bne	25d34 <__assert_fail@plt+0x14830>
   25d28:	movw	r0, #0
   25d2c:	str	r0, [sp, #16]
   25d30:	b	25d4c <__assert_fail@plt+0x14848>
   25d34:	ldr	r0, [fp, #-4]
   25d38:	ldr	r0, [r0]
   25d3c:	ldr	r1, [sp, #24]
   25d40:	add	r0, r0, r1
   25d44:	ldrb	r0, [r0]
   25d48:	str	r0, [sp, #16]
   25d4c:	movw	r0, #1
   25d50:	str	r0, [sp, #20]
   25d54:	ldr	r0, [fp, #-4]
   25d58:	ldr	r1, [fp, #-20]	; 0xffffffec
   25d5c:	str	r1, [r0, #16]
   25d60:	ldr	r1, [fp, #-16]
   25d64:	str	r1, [r0, #20]
   25d68:	b	25d74 <__assert_fail@plt+0x14870>
   25d6c:	ldr	r0, [sp, #12]
   25d70:	str	r0, [sp, #16]
   25d74:	ldr	r0, [sp, #20]
   25d78:	ldr	r1, [sp, #24]
   25d7c:	add	r0, r1, r0
   25d80:	str	r0, [sp, #24]
   25d84:	b	25c68 <__assert_fail@plt+0x14764>
   25d88:	ldr	r0, [sp, #16]
   25d8c:	ldr	r1, [fp, #-12]
   25d90:	str	r0, [r1]
   25d94:	ldr	r0, [sp, #24]
   25d98:	mov	sp, fp
   25d9c:	pop	{fp, pc}
   25da0:	sub	sp, sp, #8
   25da4:	str	r0, [sp, #4]
   25da8:	str	r1, [sp]
   25dac:	ldr	r0, [sp, #4]
   25db0:	ldr	r1, [sp]
   25db4:	asr	r2, r1, #31
   25db8:	add	r2, r1, r2, lsr #27
   25dbc:	asr	r3, r2, #5
   25dc0:	ldr	r0, [r0, r3, lsl #2]
   25dc4:	bic	r2, r2, #31
   25dc8:	sub	r1, r1, r2
   25dcc:	lsr	r0, r0, r1
   25dd0:	and	r0, r0, #1
   25dd4:	cmp	r0, #0
   25dd8:	movw	r0, #0
   25ddc:	movne	r0, #1
   25de0:	and	r0, r0, #1
   25de4:	add	sp, sp, #8
   25de8:	bx	lr
   25dec:	push	{fp, lr}
   25df0:	mov	fp, sp
   25df4:	sub	sp, sp, #32
   25df8:	str	r0, [fp, #-8]
   25dfc:	str	r1, [fp, #-12]
   25e00:	str	r2, [sp, #16]
   25e04:	ldr	r0, [fp, #-8]
   25e08:	ldr	r0, [r0, #84]	; 0x54
   25e0c:	str	r0, [sp, #12]
   25e10:	movw	r0, #0
   25e14:	str	r0, [sp, #8]
   25e18:	ldr	r0, [sp, #8]
   25e1c:	ldr	r1, [fp, #-12]
   25e20:	ldr	r1, [r1, #4]
   25e24:	cmp	r0, r1
   25e28:	bge	25eec <__assert_fail@plt+0x149e8>
   25e2c:	ldr	r0, [fp, #-12]
   25e30:	ldr	r0, [r0, #8]
   25e34:	ldr	r1, [sp, #8]
   25e38:	ldr	r0, [r0, r1, lsl #2]
   25e3c:	str	r0, [sp]
   25e40:	ldr	r0, [sp, #12]
   25e44:	ldr	r0, [r0]
   25e48:	ldr	r1, [sp]
   25e4c:	add	r0, r0, r1, lsl #3
   25e50:	ldr	r0, [r0, #4]
   25e54:	and	r0, r0, #255	; 0xff
   25e58:	cmp	r0, #8
   25e5c:	bne	25ed8 <__assert_fail@plt+0x149d4>
   25e60:	ldr	r0, [sp, #12]
   25e64:	ldr	r0, [r0]
   25e68:	ldr	r1, [sp]
   25e6c:	add	r0, r0, r1, lsl #3
   25e70:	ldr	r0, [r0]
   25e74:	cmp	r0, #32
   25e78:	bge	25ed8 <__assert_fail@plt+0x149d4>
   25e7c:	ldr	r0, [sp, #12]
   25e80:	ldr	r1, [r0]
   25e84:	ldr	r0, [r0, #80]	; 0x50
   25e88:	ldr	r2, [sp]
   25e8c:	add	r1, r1, r2, lsl #3
   25e90:	ldr	r1, [r1]
   25e94:	movw	r2, #1
   25e98:	lsl	r1, r2, r1
   25e9c:	and	r0, r0, r1
   25ea0:	cmp	r0, #0
   25ea4:	beq	25ed8 <__assert_fail@plt+0x149d4>
   25ea8:	ldr	r0, [fp, #-8]
   25eac:	ldr	r1, [sp]
   25eb0:	ldr	r2, [sp, #16]
   25eb4:	bl	26b38 <__assert_fail@plt+0x15634>
   25eb8:	str	r0, [sp, #4]
   25ebc:	ldr	r0, [sp, #4]
   25ec0:	cmp	r0, #0
   25ec4:	beq	25ed4 <__assert_fail@plt+0x149d0>
   25ec8:	ldr	r0, [sp, #4]
   25ecc:	str	r0, [fp, #-4]
   25ed0:	b	25ef4 <__assert_fail@plt+0x149f0>
   25ed4:	b	25ed8 <__assert_fail@plt+0x149d4>
   25ed8:	b	25edc <__assert_fail@plt+0x149d8>
   25edc:	ldr	r0, [sp, #8]
   25ee0:	add	r0, r0, #1
   25ee4:	str	r0, [sp, #8]
   25ee8:	b	25e18 <__assert_fail@plt+0x14914>
   25eec:	movw	r0, #0
   25ef0:	str	r0, [fp, #-4]
   25ef4:	ldr	r0, [fp, #-4]
   25ef8:	mov	sp, fp
   25efc:	pop	{fp, pc}
   25f00:	push	{fp, lr}
   25f04:	mov	fp, sp
   25f08:	sub	sp, sp, #96	; 0x60
   25f0c:	str	r0, [fp, #-4]
   25f10:	str	r1, [fp, #-8]
   25f14:	ldr	r0, [fp, #-4]
   25f18:	ldr	r0, [r0, #84]	; 0x54
   25f1c:	str	r0, [fp, #-12]
   25f20:	ldr	r0, [fp, #-4]
   25f24:	ldr	r0, [r0, #40]	; 0x28
   25f28:	str	r0, [fp, #-24]	; 0xffffffe8
   25f2c:	movw	r0, #0
   25f30:	str	r0, [fp, #-20]	; 0xffffffec
   25f34:	ldr	r0, [fp, #-20]	; 0xffffffec
   25f38:	ldr	r1, [fp, #-8]
   25f3c:	ldr	r1, [r1, #4]
   25f40:	cmp	r0, r1
   25f44:	bge	26428 <__assert_fail@plt+0x14f24>
   25f48:	ldr	r0, [fp, #-8]
   25f4c:	ldr	r0, [r0, #8]
   25f50:	ldr	r1, [fp, #-20]	; 0xffffffec
   25f54:	ldr	r0, [r0, r1, lsl #2]
   25f58:	str	r0, [fp, #-40]	; 0xffffffd8
   25f5c:	ldr	r0, [fp, #-12]
   25f60:	ldr	r0, [r0]
   25f64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25f68:	add	r0, r0, r1, lsl #3
   25f6c:	str	r0, [sp, #48]	; 0x30
   25f70:	ldr	r0, [sp, #48]	; 0x30
   25f74:	ldr	r0, [r0, #4]
   25f78:	and	r0, r0, #255	; 0xff
   25f7c:	cmp	r0, #4
   25f80:	beq	25f88 <__assert_fail@plt+0x14a84>
   25f84:	b	26418 <__assert_fail@plt+0x14f14>
   25f88:	ldr	r0, [sp, #48]	; 0x30
   25f8c:	ldr	r0, [r0, #4]
   25f90:	lsr	r0, r0, #8
   25f94:	movw	r1, #1023	; 0x3ff
   25f98:	and	r0, r0, r1
   25f9c:	cmp	r0, #0
   25fa0:	beq	26084 <__assert_fail@plt+0x14b80>
   25fa4:	ldr	r0, [fp, #-4]
   25fa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25fac:	ldr	r2, [fp, #-4]
   25fb0:	ldr	r2, [r2, #88]	; 0x58
   25fb4:	bl	25a30 <__assert_fail@plt+0x1452c>
   25fb8:	str	r0, [fp, #-44]	; 0xffffffd4
   25fbc:	ldr	r0, [sp, #48]	; 0x30
   25fc0:	ldr	r0, [r0, #4]
   25fc4:	lsr	r0, r0, #8
   25fc8:	movw	r1, #1023	; 0x3ff
   25fcc:	and	r0, r0, r1
   25fd0:	and	r0, r0, #4
   25fd4:	cmp	r0, #0
   25fd8:	beq	25fec <__assert_fail@plt+0x14ae8>
   25fdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25fe0:	and	r0, r0, #1
   25fe4:	cmp	r0, #0
   25fe8:	beq	2607c <__assert_fail@plt+0x14b78>
   25fec:	ldr	r0, [sp, #48]	; 0x30
   25ff0:	ldr	r0, [r0, #4]
   25ff4:	lsr	r0, r0, #8
   25ff8:	movw	r1, #1023	; 0x3ff
   25ffc:	and	r0, r0, r1
   26000:	and	r0, r0, #8
   26004:	cmp	r0, #0
   26008:	beq	2601c <__assert_fail@plt+0x14b18>
   2600c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26010:	and	r0, r0, #1
   26014:	cmp	r0, #0
   26018:	bne	2607c <__assert_fail@plt+0x14b78>
   2601c:	ldr	r0, [sp, #48]	; 0x30
   26020:	ldr	r0, [r0, #4]
   26024:	lsr	r0, r0, #8
   26028:	movw	r1, #1023	; 0x3ff
   2602c:	and	r0, r0, r1
   26030:	and	r0, r0, #32
   26034:	cmp	r0, #0
   26038:	beq	2604c <__assert_fail@plt+0x14b48>
   2603c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26040:	and	r0, r0, #2
   26044:	cmp	r0, #0
   26048:	beq	2607c <__assert_fail@plt+0x14b78>
   2604c:	ldr	r0, [sp, #48]	; 0x30
   26050:	ldr	r0, [r0, #4]
   26054:	lsr	r0, r0, #8
   26058:	movw	r1, #1023	; 0x3ff
   2605c:	and	r0, r0, r1
   26060:	and	r0, r0, #128	; 0x80
   26064:	cmp	r0, #0
   26068:	beq	26080 <__assert_fail@plt+0x14b7c>
   2606c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26070:	and	r0, r0, #8
   26074:	cmp	r0, #0
   26078:	bne	26080 <__assert_fail@plt+0x14b7c>
   2607c:	b	26418 <__assert_fail@plt+0x14f14>
   26080:	b	26084 <__assert_fail@plt+0x14b80>
   26084:	ldr	r0, [fp, #-4]
   26088:	ldr	r0, [r0, #108]	; 0x6c
   2608c:	str	r0, [fp, #-36]	; 0xffffffdc
   26090:	ldr	r0, [fp, #-4]
   26094:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26098:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2609c:	bl	26c88 <__assert_fail@plt+0x15784>
   260a0:	str	r0, [fp, #-16]
   260a4:	ldr	r0, [fp, #-16]
   260a8:	cmp	r0, #0
   260ac:	beq	260b4 <__assert_fail@plt+0x14bb0>
   260b0:	b	26430 <__assert_fail@plt+0x14f2c>
   260b4:	ldr	r0, [fp, #-12]
   260b8:	ldr	r0, [r0, #12]
   260bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   260c0:	add	r0, r0, r1, lsl #2
   260c4:	ldr	r0, [r0]
   260c8:	cmn	r0, #1
   260cc:	beq	260d4 <__assert_fail@plt+0x14bd0>
   260d0:	b	260d4 <__assert_fail@plt+0x14bd0>
   260d4:	b	260d8 <__assert_fail@plt+0x14bd4>
   260d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   260dc:	ldr	r1, [fp, #-4]
   260e0:	ldr	r1, [r1, #108]	; 0x6c
   260e4:	cmp	r0, r1
   260e8:	bge	26414 <__assert_fail@plt+0x14f10>
   260ec:	ldr	r0, [fp, #-4]
   260f0:	ldr	r0, [r0, #116]	; 0x74
   260f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   260f8:	movw	r2, #24
   260fc:	mul	r1, r1, r2
   26100:	add	r0, r0, r1
   26104:	str	r0, [sp, #32]
   26108:	ldr	r0, [sp, #32]
   2610c:	ldr	r0, [r0]
   26110:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26114:	cmp	r0, r1
   26118:	bne	26130 <__assert_fail@plt+0x14c2c>
   2611c:	ldr	r0, [sp, #32]
   26120:	ldr	r0, [r0, #4]
   26124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26128:	cmp	r0, r1
   2612c:	beq	26134 <__assert_fail@plt+0x14c30>
   26130:	b	26404 <__assert_fail@plt+0x14f00>
   26134:	ldr	r0, [sp, #32]
   26138:	ldr	r0, [r0, #12]
   2613c:	ldr	r1, [sp, #32]
   26140:	ldr	r1, [r1, #8]
   26144:	sub	r0, r0, r1
   26148:	str	r0, [sp, #40]	; 0x28
   2614c:	ldr	r0, [sp, #40]	; 0x28
   26150:	cmp	r0, #0
   26154:	bne	26190 <__assert_fail@plt+0x14c8c>
   26158:	ldr	r0, [fp, #-12]
   2615c:	ldr	r0, [r0, #24]
   26160:	ldr	r1, [fp, #-12]
   26164:	ldr	r1, [r1, #20]
   26168:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2616c:	movw	r3, #12
   26170:	mul	r2, r2, r3
   26174:	add	r1, r1, r2
   26178:	ldr	r1, [r1, #8]
   2617c:	ldr	r1, [r1]
   26180:	mul	r1, r1, r3
   26184:	add	r0, r0, r1
   26188:	str	r0, [sp, #16]
   2618c:	b	261b8 <__assert_fail@plt+0x14cb4>
   26190:	ldr	r0, [fp, #-12]
   26194:	ldr	r1, [r0, #12]
   26198:	ldr	r0, [r0, #24]
   2619c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   261a0:	add	r1, r1, r2, lsl #2
   261a4:	ldr	r1, [r1]
   261a8:	movw	r2, #12
   261ac:	mul	r1, r1, r2
   261b0:	add	r0, r0, r1
   261b4:	str	r0, [sp, #16]
   261b8:	ldr	r0, [sp, #16]
   261bc:	str	r0, [sp, #44]	; 0x2c
   261c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   261c4:	ldr	r1, [sp, #32]
   261c8:	ldr	r2, [r1, #8]
   261cc:	ldr	r1, [r1, #12]
   261d0:	add	r0, r0, r1
   261d4:	sub	r0, r0, r2
   261d8:	str	r0, [fp, #-28]	; 0xffffffe4
   261dc:	ldr	r0, [fp, #-4]
   261e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   261e4:	sub	r1, r1, #1
   261e8:	ldr	r2, [r0, #88]	; 0x58
   261ec:	bl	25a30 <__assert_fail@plt+0x1452c>
   261f0:	str	r0, [fp, #-44]	; 0xffffffd4
   261f4:	ldr	r0, [fp, #-4]
   261f8:	ldr	r0, [r0, #100]	; 0x64
   261fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26200:	ldr	r0, [r0, r1, lsl #2]
   26204:	str	r0, [sp, #36]	; 0x24
   26208:	ldr	r0, [fp, #-4]
   2620c:	ldr	r0, [r0, #100]	; 0x64
   26210:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26214:	add	r0, r0, r1, lsl #2
   26218:	ldr	r0, [r0]
   2621c:	movw	r1, #0
   26220:	cmp	r0, r1
   26224:	bne	26234 <__assert_fail@plt+0x14d30>
   26228:	movw	r0, #0
   2622c:	str	r0, [sp, #12]
   26230:	b	26250 <__assert_fail@plt+0x14d4c>
   26234:	ldr	r0, [fp, #-4]
   26238:	ldr	r0, [r0, #100]	; 0x64
   2623c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26240:	add	r0, r0, r1, lsl #2
   26244:	ldr	r0, [r0]
   26248:	ldr	r0, [r0, #8]
   2624c:	str	r0, [sp, #12]
   26250:	ldr	r0, [sp, #12]
   26254:	str	r0, [fp, #-32]	; 0xffffffe0
   26258:	ldr	r0, [sp, #36]	; 0x24
   2625c:	movw	r1, #0
   26260:	cmp	r0, r1
   26264:	bne	262dc <__assert_fail@plt+0x14dd8>
   26268:	ldr	r1, [fp, #-12]
   2626c:	ldr	r2, [sp, #44]	; 0x2c
   26270:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26274:	sub	r0, fp, #16
   26278:	bl	231f4 <__assert_fail@plt+0x11cf0>
   2627c:	ldr	r1, [fp, #-4]
   26280:	ldr	r1, [r1, #100]	; 0x64
   26284:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26288:	str	r0, [r1, r2, lsl #2]
   2628c:	ldr	r0, [fp, #-4]
   26290:	ldr	r0, [r0, #100]	; 0x64
   26294:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26298:	add	r0, r0, r1, lsl #2
   2629c:	ldr	r0, [r0]
   262a0:	movw	r1, #0
   262a4:	cmp	r0, r1
   262a8:	movw	r0, #0
   262ac:	str	r0, [sp, #8]
   262b0:	bne	262c8 <__assert_fail@plt+0x14dc4>
   262b4:	ldr	r0, [fp, #-16]
   262b8:	cmp	r0, #0
   262bc:	movw	r0, #0
   262c0:	movne	r0, #1
   262c4:	str	r0, [sp, #8]
   262c8:	ldr	r0, [sp, #8]
   262cc:	tst	r0, #1
   262d0:	beq	262d8 <__assert_fail@plt+0x14dd4>
   262d4:	b	26430 <__assert_fail@plt+0x14f2c>
   262d8:	b	26388 <__assert_fail@plt+0x14e84>
   262dc:	ldr	r0, [sp, #36]	; 0x24
   262e0:	ldr	r1, [r0, #40]	; 0x28
   262e4:	ldr	r2, [sp, #44]	; 0x2c
   262e8:	add	r0, sp, #20
   262ec:	bl	27224 <__assert_fail@plt+0x15d20>
   262f0:	str	r0, [fp, #-16]
   262f4:	ldr	r0, [fp, #-16]
   262f8:	cmp	r0, #0
   262fc:	beq	2630c <__assert_fail@plt+0x14e08>
   26300:	ldr	r0, [sp, #28]
   26304:	bl	34c20 <__assert_fail@plt+0x2371c>
   26308:	b	26430 <__assert_fail@plt+0x14f2c>
   2630c:	ldr	r1, [fp, #-12]
   26310:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26314:	sub	r0, fp, #16
   26318:	add	r2, sp, #20
   2631c:	bl	231f4 <__assert_fail@plt+0x11cf0>
   26320:	ldr	r1, [fp, #-4]
   26324:	ldr	r1, [r1, #100]	; 0x64
   26328:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2632c:	str	r0, [r1, r2, lsl #2]
   26330:	ldr	r0, [sp, #28]
   26334:	bl	34c20 <__assert_fail@plt+0x2371c>
   26338:	ldr	r0, [fp, #-4]
   2633c:	ldr	r0, [r0, #100]	; 0x64
   26340:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26344:	add	r0, r0, r1, lsl #2
   26348:	ldr	r0, [r0]
   2634c:	movw	r1, #0
   26350:	cmp	r0, r1
   26354:	movw	r0, #0
   26358:	str	r0, [sp, #4]
   2635c:	bne	26374 <__assert_fail@plt+0x14e70>
   26360:	ldr	r0, [fp, #-16]
   26364:	cmp	r0, #0
   26368:	movw	r0, #0
   2636c:	movne	r0, #1
   26370:	str	r0, [sp, #4]
   26374:	ldr	r0, [sp, #4]
   26378:	tst	r0, #1
   2637c:	beq	26384 <__assert_fail@plt+0x14e80>
   26380:	b	26430 <__assert_fail@plt+0x14f2c>
   26384:	b	26388 <__assert_fail@plt+0x14e84>
   26388:	ldr	r0, [sp, #40]	; 0x28
   2638c:	cmp	r0, #0
   26390:	bne	26400 <__assert_fail@plt+0x14efc>
   26394:	ldr	r0, [fp, #-4]
   26398:	ldr	r0, [r0, #100]	; 0x64
   2639c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   263a0:	add	r0, r0, r1, lsl #2
   263a4:	ldr	r0, [r0]
   263a8:	ldr	r0, [r0, #8]
   263ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   263b0:	cmp	r0, r1
   263b4:	ble	26400 <__assert_fail@plt+0x14efc>
   263b8:	ldr	r0, [fp, #-4]
   263bc:	ldr	r1, [sp, #44]	; 0x2c
   263c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   263c4:	bl	25dec <__assert_fail@plt+0x148e8>
   263c8:	str	r0, [fp, #-16]
   263cc:	ldr	r0, [fp, #-16]
   263d0:	cmp	r0, #0
   263d4:	beq	263dc <__assert_fail@plt+0x14ed8>
   263d8:	b	26430 <__assert_fail@plt+0x14f2c>
   263dc:	ldr	r0, [fp, #-4]
   263e0:	ldr	r1, [sp, #44]	; 0x2c
   263e4:	bl	25f00 <__assert_fail@plt+0x149fc>
   263e8:	str	r0, [fp, #-16]
   263ec:	ldr	r0, [fp, #-16]
   263f0:	cmp	r0, #0
   263f4:	beq	263fc <__assert_fail@plt+0x14ef8>
   263f8:	b	26430 <__assert_fail@plt+0x14f2c>
   263fc:	b	26400 <__assert_fail@plt+0x14efc>
   26400:	b	26404 <__assert_fail@plt+0x14f00>
   26404:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26408:	add	r0, r0, #1
   2640c:	str	r0, [fp, #-36]	; 0xffffffdc
   26410:	b	260d8 <__assert_fail@plt+0x14bd4>
   26414:	b	26418 <__assert_fail@plt+0x14f14>
   26418:	ldr	r0, [fp, #-20]	; 0xffffffec
   2641c:	add	r0, r0, #1
   26420:	str	r0, [fp, #-20]	; 0xffffffec
   26424:	b	25f34 <__assert_fail@plt+0x14a30>
   26428:	movw	r0, #0
   2642c:	str	r0, [fp, #-16]
   26430:	ldr	r0, [fp, #-16]
   26434:	mov	sp, fp
   26438:	pop	{fp, pc}
   2643c:	push	{fp, lr}
   26440:	mov	fp, sp
   26444:	sub	sp, sp, #48	; 0x30
   26448:	ldr	r2, [pc, #512]	; 26650 <__assert_fail@plt+0x1514c>
   2644c:	str	r0, [fp, #-8]
   26450:	str	r1, [fp, #-12]
   26454:	ldr	r0, [fp, #-8]
   26458:	str	r0, [fp, #-20]	; 0xffffffec
   2645c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26460:	ldr	r0, [r0, #36]	; 0x24
   26464:	cmp	r2, r0
   26468:	bhi	26478 <__assert_fail@plt+0x14f74>
   2646c:	movw	r0, #12
   26470:	str	r0, [fp, #-4]
   26474:	b	26644 <__assert_fail@plt+0x15140>
   26478:	ldr	r0, [fp, #-20]	; 0xffffffec
   2647c:	ldr	r1, [fp, #-12]
   26480:	ldr	r2, [r0, #36]	; 0x24
   26484:	ldr	r3, [r0, #48]	; 0x30
   26488:	lsl	r2, r2, #1
   2648c:	cmp	r3, r2
   26490:	str	r0, [sp, #20]
   26494:	str	r1, [sp, #16]
   26498:	bge	264ac <__assert_fail@plt+0x14fa8>
   2649c:	ldr	r0, [fp, #-20]	; 0xffffffec
   264a0:	ldr	r0, [r0, #48]	; 0x30
   264a4:	str	r0, [sp, #12]
   264a8:	b	264bc <__assert_fail@plt+0x14fb8>
   264ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   264b0:	ldr	r0, [r0, #36]	; 0x24
   264b4:	lsl	r0, r0, #1
   264b8:	str	r0, [sp, #12]
   264bc:	ldr	r0, [sp, #12]
   264c0:	ldr	r1, [sp, #16]
   264c4:	cmp	r1, r0
   264c8:	bge	26510 <__assert_fail@plt+0x1500c>
   264cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   264d0:	ldr	r1, [r0, #36]	; 0x24
   264d4:	ldr	r0, [r0, #48]	; 0x30
   264d8:	lsl	r1, r1, #1
   264dc:	cmp	r0, r1
   264e0:	bge	264f4 <__assert_fail@plt+0x14ff0>
   264e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   264e8:	ldr	r0, [r0, #48]	; 0x30
   264ec:	str	r0, [sp, #8]
   264f0:	b	26504 <__assert_fail@plt+0x15000>
   264f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   264f8:	ldr	r0, [r0, #36]	; 0x24
   264fc:	lsl	r0, r0, #1
   26500:	str	r0, [sp, #8]
   26504:	ldr	r0, [sp, #8]
   26508:	str	r0, [sp, #4]
   2650c:	b	26518 <__assert_fail@plt+0x15014>
   26510:	ldr	r0, [fp, #-12]
   26514:	str	r0, [sp, #4]
   26518:	ldr	r0, [sp, #4]
   2651c:	ldr	r1, [sp, #20]
   26520:	str	r0, [sp]
   26524:	mov	r0, r1
   26528:	ldr	r1, [sp]
   2652c:	bl	1a17c <__assert_fail@plt+0x8c78>
   26530:	str	r0, [fp, #-16]
   26534:	ldr	r0, [fp, #-16]
   26538:	cmp	r0, #0
   2653c:	beq	2654c <__assert_fail@plt+0x15048>
   26540:	ldr	r0, [fp, #-16]
   26544:	str	r0, [fp, #-4]
   26548:	b	26644 <__assert_fail@plt+0x15140>
   2654c:	ldr	r0, [fp, #-8]
   26550:	ldr	r0, [r0, #100]	; 0x64
   26554:	movw	r1, #0
   26558:	cmp	r0, r1
   2655c:	beq	265a8 <__assert_fail@plt+0x150a4>
   26560:	ldr	r0, [fp, #-8]
   26564:	ldr	r0, [r0, #100]	; 0x64
   26568:	ldr	r1, [fp, #-20]	; 0xffffffec
   2656c:	ldr	r1, [r1, #36]	; 0x24
   26570:	add	r1, r1, #1
   26574:	lsl	r1, r1, #2
   26578:	bl	335bc <__assert_fail@plt+0x220b8>
   2657c:	str	r0, [sp, #24]
   26580:	ldr	r0, [sp, #24]
   26584:	movw	r1, #0
   26588:	cmp	r0, r1
   2658c:	bne	2659c <__assert_fail@plt+0x15098>
   26590:	movw	r0, #12
   26594:	str	r0, [fp, #-4]
   26598:	b	26644 <__assert_fail@plt+0x15140>
   2659c:	ldr	r0, [sp, #24]
   265a0:	ldr	r1, [fp, #-8]
   265a4:	str	r0, [r1, #100]	; 0x64
   265a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   265ac:	ldrsb	r0, [r0, #72]	; 0x48
   265b0:	cmp	r0, #0
   265b4:	beq	265fc <__assert_fail@plt+0x150f8>
   265b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   265bc:	ldr	r0, [r0, #80]	; 0x50
   265c0:	cmp	r0, #1
   265c4:	ble	265f0 <__assert_fail@plt+0x150ec>
   265c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   265cc:	bl	1a2d4 <__assert_fail@plt+0x8dd0>
   265d0:	str	r0, [fp, #-16]
   265d4:	ldr	r0, [fp, #-16]
   265d8:	cmp	r0, #0
   265dc:	beq	265ec <__assert_fail@plt+0x150e8>
   265e0:	ldr	r0, [fp, #-16]
   265e4:	str	r0, [fp, #-4]
   265e8:	b	26644 <__assert_fail@plt+0x15140>
   265ec:	b	265f8 <__assert_fail@plt+0x150f4>
   265f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   265f4:	bl	1ad7c <__assert_fail@plt+0x9878>
   265f8:	b	2663c <__assert_fail@plt+0x15138>
   265fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   26600:	ldr	r0, [r0, #80]	; 0x50
   26604:	cmp	r0, #1
   26608:	ble	26618 <__assert_fail@plt+0x15114>
   2660c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26610:	bl	1ae80 <__assert_fail@plt+0x997c>
   26614:	b	26638 <__assert_fail@plt+0x15134>
   26618:	ldr	r0, [fp, #-20]	; 0xffffffec
   2661c:	ldr	r0, [r0, #64]	; 0x40
   26620:	movw	r1, #0
   26624:	cmp	r0, r1
   26628:	beq	26634 <__assert_fail@plt+0x15130>
   2662c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26630:	bl	1b1c0 <__assert_fail@plt+0x9cbc>
   26634:	b	26638 <__assert_fail@plt+0x15134>
   26638:	b	2663c <__assert_fail@plt+0x15138>
   2663c:	movw	r0, #0
   26640:	str	r0, [fp, #-4]
   26644:	ldr	r0, [fp, #-4]
   26648:	mov	sp, fp
   2664c:	pop	{fp, pc}
   26650:	svcne	0x00ffffff
   26654:	push	{fp, lr}
   26658:	mov	fp, sp
   2665c:	sub	sp, sp, #32
   26660:	str	r0, [fp, #-8]
   26664:	str	r1, [fp, #-12]
   26668:	str	r2, [sp, #16]
   2666c:	ldr	r0, [sp, #16]
   26670:	ldrb	r0, [r0, #52]	; 0x34
   26674:	ubfx	r0, r0, #5, #1
   26678:	and	r0, r0, #255	; 0xff
   2667c:	cmp	r0, #0
   26680:	beq	266b8 <__assert_fail@plt+0x151b4>
   26684:	ldr	r0, [fp, #-12]
   26688:	ldr	r1, [sp, #16]
   2668c:	bl	299d0 <__assert_fail@plt+0x184cc>
   26690:	ldr	r1, [fp, #-8]
   26694:	str	r0, [r1]
   26698:	ldr	r0, [fp, #-8]
   2669c:	ldr	r0, [r0]
   266a0:	cmp	r0, #0
   266a4:	beq	266b4 <__assert_fail@plt+0x151b0>
   266a8:	movw	r0, #0
   266ac:	str	r0, [fp, #-4]
   266b0:	b	267cc <__assert_fail@plt+0x152c8>
   266b4:	b	266b8 <__assert_fail@plt+0x151b4>
   266b8:	ldr	r0, [fp, #-12]
   266bc:	ldr	r0, [r0, #4]
   266c0:	ldr	r1, [fp, #-12]
   266c4:	ldr	r2, [r1, #40]	; 0x28
   266c8:	add	r3, r2, #1
   266cc:	str	r3, [r1, #40]	; 0x28
   266d0:	add	r0, r0, r2
   266d4:	ldrb	r0, [r0]
   266d8:	strb	r0, [sp, #11]
   266dc:	ldr	r0, [sp, #16]
   266e0:	ldr	r0, [r0, #44]	; 0x2c
   266e4:	str	r0, [sp, #12]
   266e8:	ldr	r0, [sp, #12]
   266ec:	movw	r1, #0
   266f0:	cmp	r0, r1
   266f4:	beq	26714 <__assert_fail@plt+0x15210>
   266f8:	ldr	r0, [sp, #12]
   266fc:	ldrb	r1, [sp, #11]
   26700:	mov	r2, r1
   26704:	add	r0, r0, r1, lsl #2
   26708:	ldr	r0, [r0]
   2670c:	str	r0, [fp, #-4]
   26710:	b	267cc <__assert_fail@plt+0x152c8>
   26714:	ldr	r0, [sp, #16]
   26718:	ldr	r0, [r0, #48]	; 0x30
   2671c:	str	r0, [sp, #12]
   26720:	ldr	r0, [sp, #12]
   26724:	movw	r1, #0
   26728:	cmp	r0, r1
   2672c:	beq	26798 <__assert_fail@plt+0x15294>
   26730:	ldr	r0, [fp, #-12]
   26734:	ldr	r1, [fp, #-12]
   26738:	ldr	r1, [r1, #40]	; 0x28
   2673c:	sub	r1, r1, #1
   26740:	ldr	r2, [fp, #-12]
   26744:	ldr	r2, [r2, #88]	; 0x58
   26748:	bl	25a30 <__assert_fail@plt+0x1452c>
   2674c:	str	r0, [sp, #4]
   26750:	ldr	r0, [sp, #4]
   26754:	and	r0, r0, #1
   26758:	cmp	r0, #0
   2675c:	beq	2677c <__assert_fail@plt+0x15278>
   26760:	ldr	r0, [sp, #12]
   26764:	ldrb	r1, [sp, #11]
   26768:	orr	r1, r1, #256	; 0x100
   2676c:	add	r0, r0, r1, lsl #2
   26770:	ldr	r0, [r0]
   26774:	str	r0, [fp, #-4]
   26778:	b	267cc <__assert_fail@plt+0x152c8>
   2677c:	ldr	r0, [sp, #12]
   26780:	ldrb	r1, [sp, #11]
   26784:	mov	r2, r1
   26788:	add	r0, r0, r1, lsl #2
   2678c:	ldr	r0, [r0]
   26790:	str	r0, [fp, #-4]
   26794:	b	267cc <__assert_fail@plt+0x152c8>
   26798:	ldr	r0, [fp, #-12]
   2679c:	ldr	r0, [r0, #84]	; 0x54
   267a0:	ldr	r1, [sp, #16]
   267a4:	bl	29dac <__assert_fail@plt+0x188a8>
   267a8:	tst	r0, #1
   267ac:	bne	267c8 <__assert_fail@plt+0x152c4>
   267b0:	ldr	r0, [fp, #-8]
   267b4:	movw	r1, #12
   267b8:	str	r1, [r0]
   267bc:	movw	r0, #0
   267c0:	str	r0, [fp, #-4]
   267c4:	b	267cc <__assert_fail@plt+0x152c8>
   267c8:	b	266dc <__assert_fail@plt+0x151d8>
   267cc:	ldr	r0, [fp, #-4]
   267d0:	mov	sp, fp
   267d4:	pop	{fp, pc}
   267d8:	push	{fp, lr}
   267dc:	mov	fp, sp
   267e0:	sub	sp, sp, #56	; 0x38
   267e4:	str	r0, [fp, #-8]
   267e8:	str	r1, [fp, #-12]
   267ec:	str	r2, [fp, #-16]
   267f0:	ldr	r0, [fp, #-12]
   267f4:	ldr	r0, [r0, #84]	; 0x54
   267f8:	str	r0, [fp, #-20]	; 0xffffffec
   267fc:	ldr	r0, [fp, #-12]
   26800:	ldr	r0, [r0, #40]	; 0x28
   26804:	str	r0, [fp, #-24]	; 0xffffffe8
   26808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2680c:	ldr	r1, [fp, #-12]
   26810:	ldr	r1, [r1, #104]	; 0x68
   26814:	cmp	r0, r1
   26818:	ble	26844 <__assert_fail@plt+0x15340>
   2681c:	ldr	r0, [fp, #-16]
   26820:	ldr	r1, [fp, #-12]
   26824:	ldr	r1, [r1, #100]	; 0x64
   26828:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2682c:	add	r1, r1, r2, lsl #2
   26830:	str	r0, [r1]
   26834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26838:	ldr	r1, [fp, #-12]
   2683c:	str	r0, [r1, #104]	; 0x68
   26840:	b	26980 <__assert_fail@plt+0x1547c>
   26844:	ldr	r0, [fp, #-12]
   26848:	ldr	r0, [r0, #100]	; 0x64
   2684c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26850:	add	r0, r0, r1, lsl #2
   26854:	ldr	r0, [r0]
   26858:	movw	r1, #0
   2685c:	cmp	r0, r1
   26860:	bne	26880 <__assert_fail@plt+0x1537c>
   26864:	ldr	r0, [fp, #-16]
   26868:	ldr	r1, [fp, #-12]
   2686c:	ldr	r1, [r1, #100]	; 0x64
   26870:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26874:	add	r1, r1, r2, lsl #2
   26878:	str	r0, [r1]
   2687c:	b	2697c <__assert_fail@plt+0x15478>
   26880:	mov	r0, #0
   26884:	str	r0, [sp, #4]
   26888:	ldr	r0, [fp, #-12]
   2688c:	ldr	r0, [r0, #100]	; 0x64
   26890:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26894:	add	r0, r0, r1, lsl #2
   26898:	ldr	r0, [r0]
   2689c:	str	r0, [sp, #28]
   268a0:	ldr	r0, [sp, #28]
   268a4:	ldr	r0, [r0, #40]	; 0x28
   268a8:	str	r0, [sp, #8]
   268ac:	ldr	r0, [fp, #-16]
   268b0:	movw	r1, #0
   268b4:	cmp	r0, r1
   268b8:	beq	26900 <__assert_fail@plt+0x153fc>
   268bc:	ldr	r0, [fp, #-16]
   268c0:	ldr	r0, [r0, #40]	; 0x28
   268c4:	str	r0, [sp, #4]
   268c8:	ldr	r1, [sp, #4]
   268cc:	ldr	r2, [sp, #8]
   268d0:	add	r0, sp, #12
   268d4:	bl	27224 <__assert_fail@plt+0x15d20>
   268d8:	ldr	r1, [fp, #-8]
   268dc:	str	r0, [r1]
   268e0:	ldr	r0, [fp, #-8]
   268e4:	ldr	r0, [r0]
   268e8:	cmp	r0, #0
   268ec:	beq	268fc <__assert_fail@plt+0x153f8>
   268f0:	movw	r0, #0
   268f4:	str	r0, [fp, #-4]
   268f8:	b	26a48 <__assert_fail@plt+0x15544>
   268fc:	b	2691c <__assert_fail@plt+0x15418>
   26900:	ldr	r0, [sp, #8]
   26904:	ldr	r1, [r0]
   26908:	str	r1, [sp, #12]
   2690c:	ldr	r1, [r0, #4]
   26910:	str	r1, [sp, #16]
   26914:	ldr	r0, [r0, #8]
   26918:	str	r0, [sp, #20]
   2691c:	ldr	r0, [fp, #-12]
   26920:	ldr	r1, [r0, #40]	; 0x28
   26924:	ldr	r2, [r0, #88]	; 0x58
   26928:	sub	r1, r1, #1
   2692c:	bl	25a30 <__assert_fail@plt+0x1452c>
   26930:	str	r0, [sp, #24]
   26934:	ldr	r0, [fp, #-8]
   26938:	ldr	r1, [fp, #-20]	; 0xffffffec
   2693c:	ldr	r3, [sp, #24]
   26940:	add	r2, sp, #12
   26944:	bl	231f4 <__assert_fail@plt+0x11cf0>
   26948:	ldr	r1, [fp, #-12]
   2694c:	ldr	r1, [r1, #100]	; 0x64
   26950:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26954:	add	r1, r1, r2, lsl #2
   26958:	str	r0, [r1]
   2695c:	str	r0, [fp, #-16]
   26960:	ldr	r0, [sp, #4]
   26964:	movw	r1, #0
   26968:	cmp	r0, r1
   2696c:	beq	26978 <__assert_fail@plt+0x15474>
   26970:	ldr	r0, [sp, #20]
   26974:	bl	34c20 <__assert_fail@plt+0x2371c>
   26978:	b	2697c <__assert_fail@plt+0x15478>
   2697c:	b	26980 <__assert_fail@plt+0x1547c>
   26980:	ldr	r0, [fp, #-20]	; 0xffffffec
   26984:	ldr	r0, [r0, #76]	; 0x4c
   26988:	cmp	r0, #0
   2698c:	beq	26a40 <__assert_fail@plt+0x1553c>
   26990:	ldr	r0, [fp, #-16]
   26994:	movw	r1, #0
   26998:	cmp	r0, r1
   2699c:	beq	26a40 <__assert_fail@plt+0x1553c>
   269a0:	ldr	r0, [fp, #-12]
   269a4:	ldr	r1, [fp, #-16]
   269a8:	add	r1, r1, #4
   269ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   269b0:	bl	25dec <__assert_fail@plt+0x148e8>
   269b4:	ldr	r1, [fp, #-8]
   269b8:	str	r0, [r1]
   269bc:	ldr	r0, [fp, #-8]
   269c0:	ldr	r0, [r0]
   269c4:	cmp	r0, #0
   269c8:	beq	269d8 <__assert_fail@plt+0x154d4>
   269cc:	movw	r0, #0
   269d0:	str	r0, [fp, #-4]
   269d4:	b	26a48 <__assert_fail@plt+0x15544>
   269d8:	ldr	r0, [fp, #-16]
   269dc:	ldrb	r0, [r0, #52]	; 0x34
   269e0:	ubfx	r0, r0, #6, #1
   269e4:	and	r0, r0, #255	; 0xff
   269e8:	cmp	r0, #0
   269ec:	beq	26a3c <__assert_fail@plt+0x15538>
   269f0:	ldr	r0, [fp, #-12]
   269f4:	ldr	r1, [fp, #-16]
   269f8:	add	r1, r1, #4
   269fc:	bl	25f00 <__assert_fail@plt+0x149fc>
   26a00:	ldr	r1, [fp, #-8]
   26a04:	str	r0, [r1]
   26a08:	ldr	r0, [fp, #-8]
   26a0c:	ldr	r0, [r0]
   26a10:	cmp	r0, #0
   26a14:	beq	26a24 <__assert_fail@plt+0x15520>
   26a18:	movw	r0, #0
   26a1c:	str	r0, [fp, #-4]
   26a20:	b	26a48 <__assert_fail@plt+0x15544>
   26a24:	ldr	r0, [fp, #-12]
   26a28:	ldr	r0, [r0, #100]	; 0x64
   26a2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26a30:	add	r0, r0, r1, lsl #2
   26a34:	ldr	r0, [r0]
   26a38:	str	r0, [fp, #-16]
   26a3c:	b	26a40 <__assert_fail@plt+0x1553c>
   26a40:	ldr	r0, [fp, #-16]
   26a44:	str	r0, [fp, #-4]
   26a48:	ldr	r0, [fp, #-4]
   26a4c:	mov	sp, fp
   26a50:	pop	{fp, pc}
   26a54:	push	{fp, lr}
   26a58:	mov	fp, sp
   26a5c:	sub	sp, sp, #32
   26a60:	str	r0, [fp, #-8]
   26a64:	str	r1, [fp, #-12]
   26a68:	ldr	r0, [fp, #-12]
   26a6c:	ldr	r0, [r0, #104]	; 0x68
   26a70:	str	r0, [sp, #12]
   26a74:	ldr	r0, [fp, #-12]
   26a78:	ldr	r0, [r0, #40]	; 0x28
   26a7c:	str	r0, [sp, #8]
   26a80:	ldr	r0, [sp, #8]
   26a84:	add	r0, r0, #1
   26a88:	str	r0, [sp, #8]
   26a8c:	ldr	r1, [sp, #12]
   26a90:	cmp	r0, r1
   26a94:	ble	26aa4 <__assert_fail@plt+0x155a0>
   26a98:	movw	r0, #0
   26a9c:	str	r0, [fp, #-4]
   26aa0:	b	26b2c <__assert_fail@plt+0x15628>
   26aa4:	ldr	r0, [fp, #-12]
   26aa8:	ldr	r1, [r0, #40]	; 0x28
   26aac:	add	r1, r1, #1
   26ab0:	str	r1, [r0, #40]	; 0x28
   26ab4:	ldr	r0, [fp, #-12]
   26ab8:	ldr	r0, [r0, #100]	; 0x64
   26abc:	ldr	r1, [sp, #8]
   26ac0:	add	r0, r0, r1, lsl #2
   26ac4:	ldr	r0, [r0]
   26ac8:	movw	r1, #0
   26acc:	cmp	r0, r1
   26ad0:	beq	26a80 <__assert_fail@plt+0x1557c>
   26ad4:	ldr	r0, [fp, #-8]
   26ad8:	ldr	r1, [fp, #-12]
   26adc:	movw	r2, #0
   26ae0:	bl	267d8 <__assert_fail@plt+0x152d4>
   26ae4:	str	r0, [sp, #16]
   26ae8:	ldr	r0, [fp, #-8]
   26aec:	ldr	r0, [r0]
   26af0:	cmp	r0, #0
   26af4:	movw	r0, #0
   26af8:	str	r0, [sp, #4]
   26afc:	bne	26b18 <__assert_fail@plt+0x15614>
   26b00:	ldr	r0, [sp, #16]
   26b04:	movw	r1, #0
   26b08:	cmp	r0, r1
   26b0c:	movw	r0, #0
   26b10:	moveq	r0, #1
   26b14:	str	r0, [sp, #4]
   26b18:	ldr	r0, [sp, #4]
   26b1c:	tst	r0, #1
   26b20:	bne	26a68 <__assert_fail@plt+0x15564>
   26b24:	ldr	r0, [sp, #16]
   26b28:	str	r0, [fp, #-4]
   26b2c:	ldr	r0, [fp, #-4]
   26b30:	mov	sp, fp
   26b34:	pop	{fp, pc}
   26b38:	push	{fp, lr}
   26b3c:	mov	fp, sp
   26b40:	sub	sp, sp, #24
   26b44:	str	r0, [fp, #-8]
   26b48:	str	r1, [sp, #12]
   26b4c:	str	r2, [sp, #8]
   26b50:	ldr	r0, [fp, #-8]
   26b54:	ldr	r0, [r0, #132]	; 0x84
   26b58:	movw	r1, #0
   26b5c:	cmp	r0, r1
   26b60:	beq	26b68 <__assert_fail@plt+0x15664>
   26b64:	b	26b68 <__assert_fail@plt+0x15664>
   26b68:	ldr	r0, [fp, #-8]
   26b6c:	ldr	r0, [r0, #128]	; 0x80
   26b70:	cmp	r0, #0
   26b74:	ble	26b7c <__assert_fail@plt+0x15678>
   26b78:	b	26b7c <__assert_fail@plt+0x15678>
   26b7c:	ldr	r0, [fp, #-8]
   26b80:	ldr	r0, [r0, #124]	; 0x7c
   26b84:	ldr	r1, [fp, #-8]
   26b88:	ldr	r1, [r1, #128]	; 0x80
   26b8c:	cmp	r0, r1
   26b90:	bne	26bf0 <__assert_fail@plt+0x156ec>
   26b94:	ldr	r0, [fp, #-8]
   26b98:	ldr	r0, [r0, #128]	; 0x80
   26b9c:	lsl	r0, r0, #1
   26ba0:	str	r0, [sp, #4]
   26ba4:	ldr	r0, [fp, #-8]
   26ba8:	ldr	r0, [r0, #132]	; 0x84
   26bac:	ldr	r1, [sp, #4]
   26bb0:	lsl	r1, r1, #2
   26bb4:	bl	335bc <__assert_fail@plt+0x220b8>
   26bb8:	str	r0, [sp]
   26bbc:	ldr	r0, [sp]
   26bc0:	movw	r1, #0
   26bc4:	cmp	r0, r1
   26bc8:	bne	26bd8 <__assert_fail@plt+0x156d4>
   26bcc:	movw	r0, #12
   26bd0:	str	r0, [fp, #-4]
   26bd4:	b	26c7c <__assert_fail@plt+0x15778>
   26bd8:	ldr	r0, [sp]
   26bdc:	ldr	r1, [fp, #-8]
   26be0:	str	r0, [r1, #132]	; 0x84
   26be4:	ldr	r0, [sp, #4]
   26be8:	ldr	r1, [fp, #-8]
   26bec:	str	r0, [r1, #128]	; 0x80
   26bf0:	mov	r0, #1
   26bf4:	mov	r1, #24
   26bf8:	bl	334b0 <__assert_fail@plt+0x21fac>
   26bfc:	ldr	r1, [fp, #-8]
   26c00:	ldr	r2, [r1, #124]	; 0x7c
   26c04:	ldr	r1, [r1, #132]	; 0x84
   26c08:	str	r0, [r1, r2, lsl #2]
   26c0c:	ldr	r0, [fp, #-8]
   26c10:	ldr	r1, [r0, #124]	; 0x7c
   26c14:	ldr	r0, [r0, #132]	; 0x84
   26c18:	add	r0, r0, r1, lsl #2
   26c1c:	ldr	r0, [r0]
   26c20:	movw	r1, #0
   26c24:	cmp	r0, r1
   26c28:	bne	26c38 <__assert_fail@plt+0x15734>
   26c2c:	movw	r0, #12
   26c30:	str	r0, [fp, #-4]
   26c34:	b	26c7c <__assert_fail@plt+0x15778>
   26c38:	ldr	r0, [sp, #12]
   26c3c:	ldr	r1, [fp, #-8]
   26c40:	ldr	r2, [r1, #124]	; 0x7c
   26c44:	ldr	r1, [r1, #132]	; 0x84
   26c48:	ldr	r1, [r1, r2, lsl #2]
   26c4c:	str	r0, [r1, #4]
   26c50:	ldr	r0, [sp, #8]
   26c54:	ldr	r1, [fp, #-8]
   26c58:	ldr	r2, [r1, #124]	; 0x7c
   26c5c:	ldr	r3, [r1, #132]	; 0x84
   26c60:	add	ip, r2, #1
   26c64:	str	ip, [r1, #124]	; 0x7c
   26c68:	add	r1, r3, r2, lsl #2
   26c6c:	ldr	r1, [r1]
   26c70:	str	r0, [r1]
   26c74:	movw	r0, #0
   26c78:	str	r0, [fp, #-4]
   26c7c:	ldr	r0, [fp, #-4]
   26c80:	mov	sp, fp
   26c84:	pop	{fp, pc}
   26c88:	push	{fp, lr}
   26c8c:	mov	fp, sp
   26c90:	sub	sp, sp, #96	; 0x60
   26c94:	str	r0, [fp, #-8]
   26c98:	str	r1, [fp, #-12]
   26c9c:	str	r2, [fp, #-16]
   26ca0:	ldr	r0, [fp, #-8]
   26ca4:	ldr	r0, [r0, #84]	; 0x54
   26ca8:	str	r0, [fp, #-20]	; 0xffffffec
   26cac:	ldr	r0, [fp, #-8]
   26cb0:	ldr	r0, [r0, #4]
   26cb4:	str	r0, [fp, #-32]	; 0xffffffe0
   26cb8:	ldr	r0, [fp, #-8]
   26cbc:	ldr	r1, [fp, #-16]
   26cc0:	bl	27570 <__assert_fail@plt+0x1606c>
   26cc4:	str	r0, [fp, #-36]	; 0xffffffdc
   26cc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26ccc:	cmn	r0, #1
   26cd0:	beq	26d30 <__assert_fail@plt+0x1582c>
   26cd4:	ldr	r0, [fp, #-8]
   26cd8:	ldr	r0, [r0, #116]	; 0x74
   26cdc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26ce0:	movw	r2, #24
   26ce4:	mul	r1, r1, r2
   26ce8:	add	r0, r0, r1
   26cec:	str	r0, [fp, #-40]	; 0xffffffd8
   26cf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26cf4:	ldr	r0, [r0]
   26cf8:	ldr	r1, [fp, #-12]
   26cfc:	cmp	r0, r1
   26d00:	bne	26d10 <__assert_fail@plt+0x1580c>
   26d04:	movw	r0, #0
   26d08:	str	r0, [fp, #-4]
   26d0c:	b	27218 <__assert_fail@plt+0x15d14>
   26d10:	b	26d14 <__assert_fail@plt+0x15810>
   26d14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26d18:	add	r1, r0, #24
   26d1c:	str	r1, [fp, #-40]	; 0xffffffd8
   26d20:	ldrsb	r0, [r0, #20]
   26d24:	cmp	r0, #0
   26d28:	bne	26cf0 <__assert_fail@plt+0x157ec>
   26d2c:	b	26d30 <__assert_fail@plt+0x1582c>
   26d30:	ldr	r0, [fp, #-20]	; 0xffffffec
   26d34:	ldr	r0, [r0]
   26d38:	ldr	r1, [fp, #-12]
   26d3c:	add	r0, r0, r1, lsl #3
   26d40:	ldr	r0, [r0]
   26d44:	str	r0, [fp, #-24]	; 0xffffffe8
   26d48:	movw	r0, #0
   26d4c:	str	r0, [fp, #-28]	; 0xffffffe4
   26d50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26d54:	ldr	r1, [fp, #-8]
   26d58:	ldr	r1, [r1, #124]	; 0x7c
   26d5c:	cmp	r0, r1
   26d60:	bge	27210 <__assert_fail@plt+0x15d0c>
   26d64:	ldr	r0, [fp, #-8]
   26d68:	ldr	r0, [r0, #132]	; 0x84
   26d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26d70:	ldr	r0, [r0, r1, lsl #2]
   26d74:	str	r0, [sp, #48]	; 0x30
   26d78:	ldr	r0, [fp, #-20]	; 0xffffffec
   26d7c:	ldr	r0, [r0]
   26d80:	ldr	r1, [sp, #48]	; 0x30
   26d84:	ldr	r1, [r1, #4]
   26d88:	add	r0, r0, r1, lsl #3
   26d8c:	ldr	r0, [r0]
   26d90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26d94:	cmp	r0, r1
   26d98:	beq	26da0 <__assert_fail@plt+0x1589c>
   26d9c:	b	27200 <__assert_fail@plt+0x15cfc>
   26da0:	ldr	r0, [sp, #48]	; 0x30
   26da4:	ldr	r0, [r0]
   26da8:	str	r0, [sp, #36]	; 0x24
   26dac:	ldr	r0, [fp, #-16]
   26db0:	str	r0, [sp, #32]
   26db4:	movw	r0, #0
   26db8:	str	r0, [sp, #40]	; 0x28
   26dbc:	ldr	r0, [sp, #40]	; 0x28
   26dc0:	ldr	r1, [sp, #48]	; 0x30
   26dc4:	ldr	r1, [r1, #16]
   26dc8:	cmp	r0, r1
   26dcc:	bge	26f38 <__assert_fail@plt+0x15a34>
   26dd0:	ldr	r0, [sp, #48]	; 0x30
   26dd4:	ldr	r0, [r0, #20]
   26dd8:	ldr	r1, [sp, #40]	; 0x28
   26ddc:	add	r0, r0, r1, lsl #2
   26de0:	ldr	r0, [r0]
   26de4:	str	r0, [sp, #44]	; 0x2c
   26de8:	ldr	r0, [sp, #44]	; 0x2c
   26dec:	ldr	r0, [r0, #4]
   26df0:	ldr	r1, [sp, #36]	; 0x24
   26df4:	sub	r0, r0, r1
   26df8:	str	r0, [sp, #28]
   26dfc:	ldr	r0, [sp, #28]
   26e00:	cmp	r0, #0
   26e04:	ble	26eb0 <__assert_fail@plt+0x159ac>
   26e08:	ldr	r0, [sp, #32]
   26e0c:	ldr	r1, [sp, #28]
   26e10:	add	r0, r0, r1
   26e14:	ldr	r1, [fp, #-8]
   26e18:	ldr	r1, [r1, #28]
   26e1c:	cmp	r0, r1
   26e20:	ble	26e80 <__assert_fail@plt+0x1597c>
   26e24:	ldr	r0, [sp, #32]
   26e28:	ldr	r1, [sp, #28]
   26e2c:	add	r0, r0, r1
   26e30:	ldr	r1, [fp, #-8]
   26e34:	ldr	r1, [r1, #48]	; 0x30
   26e38:	cmp	r0, r1
   26e3c:	ble	26e44 <__assert_fail@plt+0x15940>
   26e40:	b	26f38 <__assert_fail@plt+0x15a34>
   26e44:	ldr	r0, [fp, #-8]
   26e48:	ldr	r1, [sp, #32]
   26e4c:	ldr	r2, [sp, #28]
   26e50:	add	r1, r1, r2
   26e54:	bl	27658 <__assert_fail@plt+0x16154>
   26e58:	str	r0, [fp, #-44]	; 0xffffffd4
   26e5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26e60:	cmp	r0, #0
   26e64:	beq	26e74 <__assert_fail@plt+0x15970>
   26e68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26e6c:	str	r0, [fp, #-4]
   26e70:	b	27218 <__assert_fail@plt+0x15d14>
   26e74:	ldr	r0, [fp, #-8]
   26e78:	ldr	r0, [r0, #4]
   26e7c:	str	r0, [fp, #-32]	; 0xffffffe0
   26e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26e84:	ldr	r1, [sp, #32]
   26e88:	add	r0, r0, r1
   26e8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26e90:	ldr	r2, [sp, #36]	; 0x24
   26e94:	add	r1, r1, r2
   26e98:	ldr	r2, [sp, #28]
   26e9c:	bl	112e8 <memcmp@plt>
   26ea0:	cmp	r0, #0
   26ea4:	beq	26eac <__assert_fail@plt+0x159a8>
   26ea8:	b	26f38 <__assert_fail@plt+0x15a34>
   26eac:	b	26eb0 <__assert_fail@plt+0x159ac>
   26eb0:	ldr	r0, [sp, #28]
   26eb4:	ldr	r1, [sp, #32]
   26eb8:	add	r0, r1, r0
   26ebc:	str	r0, [sp, #32]
   26ec0:	ldr	r0, [sp, #28]
   26ec4:	ldr	r1, [sp, #36]	; 0x24
   26ec8:	add	r0, r1, r0
   26ecc:	str	r0, [sp, #36]	; 0x24
   26ed0:	ldr	r0, [fp, #-8]
   26ed4:	ldr	r1, [sp, #48]	; 0x30
   26ed8:	ldr	r2, [sp, #44]	; 0x2c
   26edc:	ldr	r3, [fp, #-12]
   26ee0:	ldr	ip, [fp, #-16]
   26ee4:	str	ip, [sp]
   26ee8:	bl	27774 <__assert_fail@plt+0x16270>
   26eec:	str	r0, [fp, #-44]	; 0xffffffd4
   26ef0:	ldr	r0, [fp, #-8]
   26ef4:	ldr	r0, [r0, #4]
   26ef8:	str	r0, [fp, #-32]	; 0xffffffe0
   26efc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26f00:	cmp	r0, #1
   26f04:	bne	26f0c <__assert_fail@plt+0x15a08>
   26f08:	b	26f28 <__assert_fail@plt+0x15a24>
   26f0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26f10:	cmp	r0, #0
   26f14:	beq	26f24 <__assert_fail@plt+0x15a20>
   26f18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26f1c:	str	r0, [fp, #-4]
   26f20:	b	27218 <__assert_fail@plt+0x15d14>
   26f24:	b	26f28 <__assert_fail@plt+0x15a24>
   26f28:	ldr	r0, [sp, #40]	; 0x28
   26f2c:	add	r0, r0, #1
   26f30:	str	r0, [sp, #40]	; 0x28
   26f34:	b	26dbc <__assert_fail@plt+0x158b8>
   26f38:	ldr	r0, [sp, #40]	; 0x28
   26f3c:	ldr	r1, [sp, #48]	; 0x30
   26f40:	ldr	r1, [r1, #16]
   26f44:	cmp	r0, r1
   26f48:	bge	26f50 <__assert_fail@plt+0x15a4c>
   26f4c:	b	27200 <__assert_fail@plt+0x15cfc>
   26f50:	ldr	r0, [sp, #40]	; 0x28
   26f54:	cmp	r0, #0
   26f58:	ble	26f68 <__assert_fail@plt+0x15a64>
   26f5c:	ldr	r0, [sp, #36]	; 0x24
   26f60:	add	r0, r0, #1
   26f64:	str	r0, [sp, #36]	; 0x24
   26f68:	b	26f6c <__assert_fail@plt+0x15a68>
   26f6c:	ldr	r0, [sp, #36]	; 0x24
   26f70:	ldr	r1, [fp, #-16]
   26f74:	cmp	r0, r1
   26f78:	bgt	271fc <__assert_fail@plt+0x15cf8>
   26f7c:	ldr	r0, [sp, #36]	; 0x24
   26f80:	ldr	r1, [sp, #48]	; 0x30
   26f84:	ldr	r1, [r1]
   26f88:	sub	r0, r0, r1
   26f8c:	str	r0, [sp, #20]
   26f90:	ldr	r0, [sp, #20]
   26f94:	cmp	r0, #0
   26f98:	ble	2703c <__assert_fail@plt+0x15b38>
   26f9c:	ldr	r0, [sp, #32]
   26fa0:	ldr	r1, [fp, #-8]
   26fa4:	ldr	r1, [r1, #28]
   26fa8:	cmp	r0, r1
   26fac:	blt	27000 <__assert_fail@plt+0x15afc>
   26fb0:	ldr	r0, [sp, #32]
   26fb4:	ldr	r1, [fp, #-8]
   26fb8:	ldr	r1, [r1, #48]	; 0x30
   26fbc:	cmp	r0, r1
   26fc0:	blt	26fc8 <__assert_fail@plt+0x15ac4>
   26fc4:	b	271fc <__assert_fail@plt+0x15cf8>
   26fc8:	ldr	r0, [fp, #-8]
   26fcc:	ldr	r1, [sp, #32]
   26fd0:	add	r1, r1, #1
   26fd4:	bl	2643c <__assert_fail@plt+0x14f38>
   26fd8:	str	r0, [fp, #-44]	; 0xffffffd4
   26fdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26fe0:	cmp	r0, #0
   26fe4:	beq	26ff4 <__assert_fail@plt+0x15af0>
   26fe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26fec:	str	r0, [fp, #-4]
   26ff0:	b	27218 <__assert_fail@plt+0x15d14>
   26ff4:	ldr	r0, [fp, #-8]
   26ff8:	ldr	r0, [r0, #4]
   26ffc:	str	r0, [fp, #-32]	; 0xffffffe0
   27000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27004:	ldr	r1, [sp, #32]
   27008:	add	r2, r1, #1
   2700c:	str	r2, [sp, #32]
   27010:	add	r0, r0, r1
   27014:	ldrb	r0, [r0]
   27018:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2701c:	ldr	r2, [sp, #36]	; 0x24
   27020:	sub	r2, r2, #1
   27024:	add	r1, r1, r2
   27028:	ldrb	r1, [r1]
   2702c:	cmp	r0, r1
   27030:	beq	27038 <__assert_fail@plt+0x15b34>
   27034:	b	271fc <__assert_fail@plt+0x15cf8>
   27038:	b	2703c <__assert_fail@plt+0x15b38>
   2703c:	ldr	r0, [fp, #-8]
   27040:	ldr	r0, [r0, #100]	; 0x64
   27044:	ldr	r1, [sp, #36]	; 0x24
   27048:	add	r0, r0, r1, lsl #2
   2704c:	ldr	r0, [r0]
   27050:	movw	r1, #0
   27054:	cmp	r0, r1
   27058:	bne	27060 <__assert_fail@plt+0x15b5c>
   2705c:	b	271ec <__assert_fail@plt+0x15ce8>
   27060:	ldr	r0, [fp, #-8]
   27064:	ldr	r0, [r0, #100]	; 0x64
   27068:	ldr	r1, [sp, #36]	; 0x24
   2706c:	add	r0, r0, r1, lsl #2
   27070:	ldr	r0, [r0]
   27074:	add	r0, r0, #4
   27078:	str	r0, [sp, #16]
   2707c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27080:	ldr	r1, [sp, #16]
   27084:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27088:	movw	r3, #9
   2708c:	bl	27868 <__assert_fail@plt+0x16364>
   27090:	str	r0, [sp, #24]
   27094:	ldr	r0, [sp, #24]
   27098:	cmn	r0, #1
   2709c:	bne	270a4 <__assert_fail@plt+0x15ba0>
   270a0:	b	271ec <__assert_fail@plt+0x15ce8>
   270a4:	ldr	r0, [sp, #48]	; 0x30
   270a8:	ldr	r0, [r0, #8]
   270ac:	movw	r1, #0
   270b0:	cmp	r0, r1
   270b4:	bne	27100 <__assert_fail@plt+0x15bfc>
   270b8:	ldr	r0, [sp, #36]	; 0x24
   270bc:	ldr	r1, [sp, #48]	; 0x30
   270c0:	ldr	r1, [r1]
   270c4:	sub	r0, r0, r1
   270c8:	add	r1, r0, #1
   270cc:	movw	r0, #12
   270d0:	bl	334b0 <__assert_fail@plt+0x21fac>
   270d4:	ldr	r1, [sp, #48]	; 0x30
   270d8:	str	r0, [r1, #8]
   270dc:	ldr	r0, [sp, #48]	; 0x30
   270e0:	ldr	r0, [r0, #8]
   270e4:	movw	r1, #0
   270e8:	cmp	r0, r1
   270ec:	bne	270fc <__assert_fail@plt+0x15bf8>
   270f0:	movw	r0, #12
   270f4:	str	r0, [fp, #-4]
   270f8:	b	27218 <__assert_fail@plt+0x15d14>
   270fc:	b	27100 <__assert_fail@plt+0x15bfc>
   27100:	ldr	r0, [fp, #-8]
   27104:	ldr	r1, [sp, #48]	; 0x30
   27108:	ldr	r1, [r1, #8]
   2710c:	ldr	r2, [sp, #48]	; 0x30
   27110:	ldr	r2, [r2, #4]
   27114:	ldr	r3, [sp, #48]	; 0x30
   27118:	ldr	r3, [r3]
   2711c:	ldr	ip, [sp, #24]
   27120:	ldr	lr, [sp, #36]	; 0x24
   27124:	str	ip, [sp]
   27128:	str	lr, [sp, #4]
   2712c:	movw	ip, #9
   27130:	str	ip, [sp, #8]
   27134:	bl	27920 <__assert_fail@plt+0x1641c>
   27138:	str	r0, [fp, #-44]	; 0xffffffd4
   2713c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27140:	cmp	r0, #1
   27144:	bne	2714c <__assert_fail@plt+0x15c48>
   27148:	b	271ec <__assert_fail@plt+0x15ce8>
   2714c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27150:	cmp	r0, #0
   27154:	beq	27164 <__assert_fail@plt+0x15c60>
   27158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2715c:	str	r0, [fp, #-4]
   27160:	b	27218 <__assert_fail@plt+0x15d14>
   27164:	ldr	r0, [sp, #48]	; 0x30
   27168:	ldr	r1, [sp, #24]
   2716c:	ldr	r2, [sp, #36]	; 0x24
   27170:	bl	28058 <__assert_fail@plt+0x16b54>
   27174:	str	r0, [sp, #44]	; 0x2c
   27178:	ldr	r0, [sp, #44]	; 0x2c
   2717c:	movw	r1, #0
   27180:	cmp	r0, r1
   27184:	bne	27194 <__assert_fail@plt+0x15c90>
   27188:	movw	r0, #12
   2718c:	str	r0, [fp, #-4]
   27190:	b	27218 <__assert_fail@plt+0x15d14>
   27194:	ldr	r0, [fp, #-8]
   27198:	ldr	r1, [sp, #48]	; 0x30
   2719c:	ldr	r2, [sp, #44]	; 0x2c
   271a0:	ldr	r3, [fp, #-12]
   271a4:	ldr	ip, [fp, #-16]
   271a8:	str	ip, [sp]
   271ac:	bl	27774 <__assert_fail@plt+0x16270>
   271b0:	str	r0, [fp, #-44]	; 0xffffffd4
   271b4:	ldr	r0, [fp, #-8]
   271b8:	ldr	r0, [r0, #4]
   271bc:	str	r0, [fp, #-32]	; 0xffffffe0
   271c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   271c4:	cmp	r0, #1
   271c8:	bne	271d0 <__assert_fail@plt+0x15ccc>
   271cc:	b	271ec <__assert_fail@plt+0x15ce8>
   271d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   271d4:	cmp	r0, #0
   271d8:	beq	271e8 <__assert_fail@plt+0x15ce4>
   271dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   271e0:	str	r0, [fp, #-4]
   271e4:	b	27218 <__assert_fail@plt+0x15d14>
   271e8:	b	271ec <__assert_fail@plt+0x15ce8>
   271ec:	ldr	r0, [sp, #36]	; 0x24
   271f0:	add	r0, r0, #1
   271f4:	str	r0, [sp, #36]	; 0x24
   271f8:	b	26f6c <__assert_fail@plt+0x15a68>
   271fc:	b	27200 <__assert_fail@plt+0x15cfc>
   27200:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27204:	add	r0, r0, #1
   27208:	str	r0, [fp, #-28]	; 0xffffffe4
   2720c:	b	26d50 <__assert_fail@plt+0x1584c>
   27210:	movw	r0, #0
   27214:	str	r0, [fp, #-4]
   27218:	ldr	r0, [fp, #-4]
   2721c:	mov	sp, fp
   27220:	pop	{fp, pc}
   27224:	push	{fp, lr}
   27228:	mov	fp, sp
   2722c:	sub	sp, sp, #32
   27230:	str	r0, [fp, #-8]
   27234:	str	r1, [fp, #-12]
   27238:	str	r2, [sp, #16]
   2723c:	ldr	r0, [fp, #-12]
   27240:	movw	r1, #0
   27244:	cmp	r0, r1
   27248:	beq	272d4 <__assert_fail@plt+0x15dd0>
   2724c:	ldr	r0, [fp, #-12]
   27250:	ldr	r0, [r0, #4]
   27254:	cmp	r0, #0
   27258:	ble	272d4 <__assert_fail@plt+0x15dd0>
   2725c:	ldr	r0, [sp, #16]
   27260:	movw	r1, #0
   27264:	cmp	r0, r1
   27268:	beq	272d4 <__assert_fail@plt+0x15dd0>
   2726c:	ldr	r0, [sp, #16]
   27270:	ldr	r0, [r0, #4]
   27274:	cmp	r0, #0
   27278:	ble	272d4 <__assert_fail@plt+0x15dd0>
   2727c:	ldr	r0, [fp, #-12]
   27280:	ldr	r0, [r0, #4]
   27284:	ldr	r1, [sp, #16]
   27288:	ldr	r1, [r1, #4]
   2728c:	add	r0, r0, r1
   27290:	ldr	r1, [fp, #-8]
   27294:	str	r0, [r1]
   27298:	ldr	r0, [fp, #-8]
   2729c:	ldr	r0, [r0]
   272a0:	lsl	r0, r0, #2
   272a4:	bl	3354c <__assert_fail@plt+0x22048>
   272a8:	ldr	r1, [fp, #-8]
   272ac:	str	r0, [r1, #8]
   272b0:	ldr	r0, [fp, #-8]
   272b4:	ldr	r0, [r0, #8]
   272b8:	movw	r1, #0
   272bc:	cmp	r0, r1
   272c0:	bne	272d0 <__assert_fail@plt+0x15dcc>
   272c4:	movw	r0, #12
   272c8:	str	r0, [fp, #-4]
   272cc:	b	27564 <__assert_fail@plt+0x16060>
   272d0:	b	27360 <__assert_fail@plt+0x15e5c>
   272d4:	ldr	r0, [fp, #-12]
   272d8:	movw	r1, #0
   272dc:	cmp	r0, r1
   272e0:	beq	27308 <__assert_fail@plt+0x15e04>
   272e4:	ldr	r0, [fp, #-12]
   272e8:	ldr	r0, [r0, #4]
   272ec:	cmp	r0, #0
   272f0:	ble	27308 <__assert_fail@plt+0x15e04>
   272f4:	ldr	r0, [fp, #-8]
   272f8:	ldr	r1, [fp, #-12]
   272fc:	bl	23030 <__assert_fail@plt+0x11b2c>
   27300:	str	r0, [fp, #-4]
   27304:	b	27564 <__assert_fail@plt+0x16060>
   27308:	ldr	r0, [sp, #16]
   2730c:	movw	r1, #0
   27310:	cmp	r0, r1
   27314:	beq	2733c <__assert_fail@plt+0x15e38>
   27318:	ldr	r0, [sp, #16]
   2731c:	ldr	r0, [r0, #4]
   27320:	cmp	r0, #0
   27324:	ble	2733c <__assert_fail@plt+0x15e38>
   27328:	ldr	r0, [fp, #-8]
   2732c:	ldr	r1, [sp, #16]
   27330:	bl	23030 <__assert_fail@plt+0x11b2c>
   27334:	str	r0, [fp, #-4]
   27338:	b	27564 <__assert_fail@plt+0x16060>
   2733c:	ldr	r0, [fp, #-8]
   27340:	movw	r1, #0
   27344:	and	r1, r1, #255	; 0xff
   27348:	movw	r2, #12
   2734c:	bl	11420 <memset@plt>
   27350:	b	27354 <__assert_fail@plt+0x15e50>
   27354:	movw	r0, #0
   27358:	str	r0, [fp, #-4]
   2735c:	b	27564 <__assert_fail@plt+0x16060>
   27360:	movw	r0, #0
   27364:	str	r0, [sp, #4]
   27368:	str	r0, [sp, #8]
   2736c:	str	r0, [sp, #12]
   27370:	ldr	r0, [sp, #12]
   27374:	ldr	r1, [fp, #-12]
   27378:	ldr	r1, [r1, #4]
   2737c:	cmp	r0, r1
   27380:	movw	r0, #0
   27384:	str	r0, [sp]
   27388:	bge	273a8 <__assert_fail@plt+0x15ea4>
   2738c:	ldr	r0, [sp, #8]
   27390:	ldr	r1, [sp, #16]
   27394:	ldr	r1, [r1, #4]
   27398:	cmp	r0, r1
   2739c:	movw	r0, #0
   273a0:	movlt	r0, #1
   273a4:	str	r0, [sp]
   273a8:	ldr	r0, [sp]
   273ac:	tst	r0, #1
   273b0:	beq	27488 <__assert_fail@plt+0x15f84>
   273b4:	ldr	r0, [fp, #-12]
   273b8:	ldr	r0, [r0, #8]
   273bc:	ldr	r1, [sp, #12]
   273c0:	ldr	r0, [r0, r1, lsl #2]
   273c4:	ldr	r1, [sp, #16]
   273c8:	ldr	r1, [r1, #8]
   273cc:	ldr	r2, [sp, #8]
   273d0:	add	r1, r1, r2, lsl #2
   273d4:	ldr	r1, [r1]
   273d8:	cmp	r0, r1
   273dc:	ble	27418 <__assert_fail@plt+0x15f14>
   273e0:	ldr	r0, [sp, #16]
   273e4:	ldr	r0, [r0, #8]
   273e8:	ldr	r1, [sp, #8]
   273ec:	add	r2, r1, #1
   273f0:	str	r2, [sp, #8]
   273f4:	ldr	r0, [r0, r1, lsl #2]
   273f8:	ldr	r1, [fp, #-8]
   273fc:	ldr	r1, [r1, #8]
   27400:	ldr	r2, [sp, #4]
   27404:	add	r3, r2, #1
   27408:	str	r3, [sp, #4]
   2740c:	add	r1, r1, r2, lsl #2
   27410:	str	r0, [r1]
   27414:	b	27370 <__assert_fail@plt+0x15e6c>
   27418:	ldr	r0, [fp, #-12]
   2741c:	ldr	r0, [r0, #8]
   27420:	ldr	r1, [sp, #12]
   27424:	ldr	r0, [r0, r1, lsl #2]
   27428:	ldr	r1, [sp, #16]
   2742c:	ldr	r1, [r1, #8]
   27430:	ldr	r2, [sp, #8]
   27434:	add	r1, r1, r2, lsl #2
   27438:	ldr	r1, [r1]
   2743c:	cmp	r0, r1
   27440:	bne	27450 <__assert_fail@plt+0x15f4c>
   27444:	ldr	r0, [sp, #8]
   27448:	add	r0, r0, #1
   2744c:	str	r0, [sp, #8]
   27450:	ldr	r0, [fp, #-12]
   27454:	ldr	r0, [r0, #8]
   27458:	ldr	r1, [sp, #12]
   2745c:	add	r2, r1, #1
   27460:	str	r2, [sp, #12]
   27464:	ldr	r0, [r0, r1, lsl #2]
   27468:	ldr	r1, [fp, #-8]
   2746c:	ldr	r1, [r1, #8]
   27470:	ldr	r2, [sp, #4]
   27474:	add	r3, r2, #1
   27478:	str	r3, [sp, #4]
   2747c:	add	r1, r1, r2, lsl #2
   27480:	str	r0, [r1]
   27484:	b	27370 <__assert_fail@plt+0x15e6c>
   27488:	ldr	r0, [sp, #12]
   2748c:	ldr	r1, [fp, #-12]
   27490:	ldr	r1, [r1, #4]
   27494:	cmp	r0, r1
   27498:	bge	274ec <__assert_fail@plt+0x15fe8>
   2749c:	ldr	r0, [fp, #-8]
   274a0:	ldr	r0, [r0, #8]
   274a4:	ldr	r1, [sp, #4]
   274a8:	add	r0, r0, r1, lsl #2
   274ac:	ldr	r1, [fp, #-12]
   274b0:	ldr	r2, [r1, #4]
   274b4:	ldr	r1, [r1, #8]
   274b8:	ldr	r3, [sp, #12]
   274bc:	add	r1, r1, r3, lsl #2
   274c0:	sub	r2, r2, r3
   274c4:	lsl	r2, r2, #2
   274c8:	bl	112a0 <memcpy@plt>
   274cc:	ldr	r0, [fp, #-12]
   274d0:	ldr	r0, [r0, #4]
   274d4:	ldr	r1, [sp, #12]
   274d8:	sub	r0, r0, r1
   274dc:	ldr	r1, [sp, #4]
   274e0:	add	r0, r1, r0
   274e4:	str	r0, [sp, #4]
   274e8:	b	27550 <__assert_fail@plt+0x1604c>
   274ec:	ldr	r0, [sp, #8]
   274f0:	ldr	r1, [sp, #16]
   274f4:	ldr	r1, [r1, #4]
   274f8:	cmp	r0, r1
   274fc:	bge	2754c <__assert_fail@plt+0x16048>
   27500:	ldr	r0, [fp, #-8]
   27504:	ldr	r0, [r0, #8]
   27508:	ldr	r1, [sp, #4]
   2750c:	add	r0, r0, r1, lsl #2
   27510:	ldr	r1, [sp, #16]
   27514:	ldr	r2, [r1, #4]
   27518:	ldr	r1, [r1, #8]
   2751c:	ldr	r3, [sp, #8]
   27520:	add	r1, r1, r3, lsl #2
   27524:	sub	r2, r2, r3
   27528:	lsl	r2, r2, #2
   2752c:	bl	112a0 <memcpy@plt>
   27530:	ldr	r0, [sp, #16]
   27534:	ldr	r0, [r0, #4]
   27538:	ldr	r1, [sp, #8]
   2753c:	sub	r0, r0, r1
   27540:	ldr	r1, [sp, #4]
   27544:	add	r0, r1, r0
   27548:	str	r0, [sp, #4]
   2754c:	b	27550 <__assert_fail@plt+0x1604c>
   27550:	ldr	r0, [sp, #4]
   27554:	ldr	r1, [fp, #-8]
   27558:	str	r0, [r1, #4]
   2755c:	movw	r0, #0
   27560:	str	r0, [fp, #-4]
   27564:	ldr	r0, [fp, #-4]
   27568:	mov	sp, fp
   2756c:	pop	{fp, pc}
   27570:	sub	sp, sp, #28
   27574:	str	r0, [sp, #20]
   27578:	str	r1, [sp, #16]
   2757c:	ldr	r0, [sp, #20]
   27580:	ldr	r0, [r0, #108]	; 0x6c
   27584:	str	r0, [sp, #8]
   27588:	str	r0, [sp]
   2758c:	movw	r0, #0
   27590:	str	r0, [sp, #12]
   27594:	ldr	r0, [sp, #12]
   27598:	ldr	r1, [sp, #8]
   2759c:	cmp	r0, r1
   275a0:	bge	27600 <__assert_fail@plt+0x160fc>
   275a4:	ldr	r0, [sp, #12]
   275a8:	ldr	r1, [sp, #8]
   275ac:	add	r0, r0, r1
   275b0:	movw	r1, #2
   275b4:	sdiv	r0, r0, r1
   275b8:	str	r0, [sp, #4]
   275bc:	ldr	r0, [sp, #20]
   275c0:	ldr	r0, [r0, #116]	; 0x74
   275c4:	ldr	r1, [sp, #4]
   275c8:	movw	r2, #24
   275cc:	mul	r1, r1, r2
   275d0:	add	r0, r0, r1
   275d4:	ldr	r0, [r0, #4]
   275d8:	ldr	r1, [sp, #16]
   275dc:	cmp	r0, r1
   275e0:	bge	275f4 <__assert_fail@plt+0x160f0>
   275e4:	ldr	r0, [sp, #4]
   275e8:	add	r0, r0, #1
   275ec:	str	r0, [sp, #12]
   275f0:	b	275fc <__assert_fail@plt+0x160f8>
   275f4:	ldr	r0, [sp, #4]
   275f8:	str	r0, [sp, #8]
   275fc:	b	27594 <__assert_fail@plt+0x16090>
   27600:	ldr	r0, [sp, #12]
   27604:	ldr	r1, [sp]
   27608:	cmp	r0, r1
   2760c:	bge	27644 <__assert_fail@plt+0x16140>
   27610:	ldr	r0, [sp, #20]
   27614:	ldr	r0, [r0, #116]	; 0x74
   27618:	ldr	r1, [sp, #12]
   2761c:	movw	r2, #24
   27620:	mul	r1, r1, r2
   27624:	add	r0, r0, r1
   27628:	ldr	r0, [r0, #4]
   2762c:	ldr	r1, [sp, #16]
   27630:	cmp	r0, r1
   27634:	bne	27644 <__assert_fail@plt+0x16140>
   27638:	ldr	r0, [sp, #12]
   2763c:	str	r0, [sp, #24]
   27640:	b	2764c <__assert_fail@plt+0x16148>
   27644:	mvn	r0, #0
   27648:	str	r0, [sp, #24]
   2764c:	ldr	r0, [sp, #24]
   27650:	add	sp, sp, #28
   27654:	bx	lr
   27658:	push	{fp, lr}
   2765c:	mov	fp, sp
   27660:	sub	sp, sp, #24
   27664:	str	r0, [fp, #-8]
   27668:	str	r1, [sp, #12]
   2766c:	ldr	r0, [fp, #-8]
   27670:	ldr	r0, [r0, #104]	; 0x68
   27674:	str	r0, [sp, #8]
   27678:	ldr	r0, [sp, #12]
   2767c:	ldr	r1, [fp, #-8]
   27680:	ldr	r1, [r1, #36]	; 0x24
   27684:	cmp	r0, r1
   27688:	blt	276a4 <__assert_fail@plt+0x161a0>
   2768c:	ldr	r0, [fp, #-8]
   27690:	ldr	r0, [r0, #36]	; 0x24
   27694:	ldr	r1, [fp, #-8]
   27698:	ldr	r1, [r1, #48]	; 0x30
   2769c:	cmp	r0, r1
   276a0:	blt	276d0 <__assert_fail@plt+0x161cc>
   276a4:	ldr	r0, [sp, #12]
   276a8:	ldr	r1, [fp, #-8]
   276ac:	ldr	r1, [r1, #28]
   276b0:	cmp	r0, r1
   276b4:	blt	27700 <__assert_fail@plt+0x161fc>
   276b8:	ldr	r0, [fp, #-8]
   276bc:	ldr	r0, [r0, #28]
   276c0:	ldr	r1, [fp, #-8]
   276c4:	ldr	r1, [r1, #48]	; 0x30
   276c8:	cmp	r0, r1
   276cc:	bge	27700 <__assert_fail@plt+0x161fc>
   276d0:	ldr	r0, [fp, #-8]
   276d4:	ldr	r1, [sp, #12]
   276d8:	add	r1, r1, #1
   276dc:	bl	2643c <__assert_fail@plt+0x14f38>
   276e0:	str	r0, [sp, #4]
   276e4:	ldr	r0, [sp, #4]
   276e8:	cmp	r0, #0
   276ec:	beq	276fc <__assert_fail@plt+0x161f8>
   276f0:	ldr	r0, [sp, #4]
   276f4:	str	r0, [fp, #-4]
   276f8:	b	27768 <__assert_fail@plt+0x16264>
   276fc:	b	27700 <__assert_fail@plt+0x161fc>
   27700:	ldr	r0, [sp, #8]
   27704:	ldr	r1, [sp, #12]
   27708:	cmp	r0, r1
   2770c:	bge	27760 <__assert_fail@plt+0x1625c>
   27710:	ldr	r0, [fp, #-8]
   27714:	ldr	r0, [r0, #100]	; 0x64
   27718:	movw	r1, #0
   2771c:	cmp	r0, r1
   27720:	beq	27728 <__assert_fail@plt+0x16224>
   27724:	b	27728 <__assert_fail@plt+0x16224>
   27728:	ldr	r0, [fp, #-8]
   2772c:	ldr	r0, [r0, #100]	; 0x64
   27730:	ldr	r1, [sp, #8]
   27734:	add	r0, r0, r1, lsl #2
   27738:	add	r0, r0, #4
   2773c:	ldr	r2, [sp, #12]
   27740:	sub	r1, r2, r1
   27744:	lsl	r2, r1, #2
   27748:	movw	r1, #0
   2774c:	and	r1, r1, #255	; 0xff
   27750:	bl	11420 <memset@plt>
   27754:	ldr	r0, [sp, #12]
   27758:	ldr	r1, [fp, #-8]
   2775c:	str	r0, [r1, #104]	; 0x68
   27760:	movw	r0, #0
   27764:	str	r0, [fp, #-4]
   27768:	ldr	r0, [fp, #-4]
   2776c:	mov	sp, fp
   27770:	pop	{fp, pc}
   27774:	push	{r4, sl, fp, lr}
   27778:	add	fp, sp, #8
   2777c:	sub	sp, sp, #48	; 0x30
   27780:	ldr	ip, [fp, #8]
   27784:	str	r0, [fp, #-16]
   27788:	str	r1, [fp, #-20]	; 0xffffffec
   2778c:	str	r2, [fp, #-24]	; 0xffffffe8
   27790:	str	r3, [sp, #28]
   27794:	ldr	r0, [fp, #-16]
   27798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2779c:	add	r1, r1, #8
   277a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   277a4:	ldr	r2, [r2]
   277a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   277ac:	ldr	r3, [r3, #4]
   277b0:	ldr	lr, [sp, #28]
   277b4:	ldr	r4, [fp, #8]
   277b8:	str	lr, [sp]
   277bc:	str	r4, [sp, #4]
   277c0:	movw	lr, #8
   277c4:	str	lr, [sp, #8]
   277c8:	str	ip, [sp, #16]
   277cc:	bl	27920 <__assert_fail@plt+0x1641c>
   277d0:	str	r0, [sp, #24]
   277d4:	ldr	r0, [sp, #24]
   277d8:	cmp	r0, #0
   277dc:	beq	277ec <__assert_fail@plt+0x162e8>
   277e0:	ldr	r0, [sp, #24]
   277e4:	str	r0, [fp, #-12]
   277e8:	b	2785c <__assert_fail@plt+0x16358>
   277ec:	ldr	r0, [fp, #-16]
   277f0:	ldr	r1, [sp, #28]
   277f4:	ldr	r2, [fp, #8]
   277f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   277fc:	ldr	r3, [r3]
   27800:	ldr	ip, [fp, #-24]	; 0xffffffe8
   27804:	ldr	ip, [ip, #4]
   27808:	str	ip, [sp]
   2780c:	bl	2815c <__assert_fail@plt+0x16c58>
   27810:	str	r0, [sp, #24]
   27814:	ldr	r0, [sp, #24]
   27818:	cmp	r0, #0
   2781c:	beq	2782c <__assert_fail@plt+0x16328>
   27820:	ldr	r0, [sp, #24]
   27824:	str	r0, [fp, #-12]
   27828:	b	2785c <__assert_fail@plt+0x16358>
   2782c:	ldr	r0, [fp, #8]
   27830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27834:	ldr	r1, [r1, #4]
   27838:	add	r0, r0, r1
   2783c:	ldr	r1, [fp, #-20]	; 0xffffffec
   27840:	ldr	r1, [r1]
   27844:	sub	r0, r0, r1
   27848:	str	r0, [sp, #20]
   2784c:	ldr	r0, [fp, #-16]
   27850:	ldr	r1, [sp, #20]
   27854:	bl	27658 <__assert_fail@plt+0x16154>
   27858:	str	r0, [fp, #-12]
   2785c:	ldr	r0, [fp, #-12]
   27860:	sub	sp, fp, #8
   27864:	pop	{r4, sl, fp, pc}
   27868:	sub	sp, sp, #32
   2786c:	str	r0, [sp, #24]
   27870:	str	r1, [sp, #20]
   27874:	str	r2, [sp, #16]
   27878:	str	r3, [sp, #12]
   2787c:	movw	r0, #0
   27880:	str	r0, [sp, #8]
   27884:	ldr	r0, [sp, #8]
   27888:	ldr	r1, [sp, #20]
   2788c:	ldr	r1, [r1, #4]
   27890:	cmp	r0, r1
   27894:	bge	2790c <__assert_fail@plt+0x16408>
   27898:	ldr	r0, [sp, #20]
   2789c:	ldr	r0, [r0, #8]
   278a0:	ldr	r1, [sp, #8]
   278a4:	ldr	r0, [r0, r1, lsl #2]
   278a8:	str	r0, [sp, #4]
   278ac:	ldr	r0, [sp, #24]
   278b0:	ldr	r0, [r0]
   278b4:	ldr	r1, [sp, #4]
   278b8:	add	r0, r0, r1, lsl #3
   278bc:	str	r0, [sp]
   278c0:	ldr	r0, [sp]
   278c4:	ldr	r0, [r0, #4]
   278c8:	and	r0, r0, #255	; 0xff
   278cc:	ldr	r1, [sp, #12]
   278d0:	cmp	r0, r1
   278d4:	bne	278f8 <__assert_fail@plt+0x163f4>
   278d8:	ldr	r0, [sp]
   278dc:	ldr	r0, [r0]
   278e0:	ldr	r1, [sp, #16]
   278e4:	cmp	r0, r1
   278e8:	bne	278f8 <__assert_fail@plt+0x163f4>
   278ec:	ldr	r0, [sp, #4]
   278f0:	str	r0, [sp, #28]
   278f4:	b	27914 <__assert_fail@plt+0x16410>
   278f8:	b	278fc <__assert_fail@plt+0x163f8>
   278fc:	ldr	r0, [sp, #8]
   27900:	add	r0, r0, #1
   27904:	str	r0, [sp, #8]
   27908:	b	27884 <__assert_fail@plt+0x16380>
   2790c:	mvn	r0, #0
   27910:	str	r0, [sp, #28]
   27914:	ldr	r0, [sp, #28]
   27918:	add	sp, sp, #32
   2791c:	bx	lr
   27920:	push	{r4, sl, fp, lr}
   27924:	add	fp, sp, #8
   27928:	sub	sp, sp, #128	; 0x80
   2792c:	ldr	ip, [fp, #16]
   27930:	ldr	lr, [fp, #12]
   27934:	ldr	r4, [fp, #8]
   27938:	str	r0, [fp, #-16]
   2793c:	str	r1, [fp, #-20]	; 0xffffffec
   27940:	str	r2, [fp, #-24]	; 0xffffffe8
   27944:	str	r3, [fp, #-28]	; 0xffffffe4
   27948:	ldr	r0, [fp, #-16]
   2794c:	ldr	r0, [r0, #84]	; 0x54
   27950:	str	r0, [fp, #-32]	; 0xffffffe0
   27954:	mov	r0, #0
   27958:	str	r0, [fp, #-36]	; 0xffffffdc
   2795c:	str	r0, [fp, #-56]	; 0xffffffc8
   27960:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27964:	ldr	r0, [r0]
   27968:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2796c:	add	r0, r0, r1, lsl #3
   27970:	ldr	r0, [r0]
   27974:	str	r0, [fp, #-40]	; 0xffffffd8
   27978:	ldr	r0, [fp, #-20]	; 0xffffffec
   2797c:	ldr	r0, [r0, #4]
   27980:	ldr	r1, [fp, #12]
   27984:	ldr	r2, [fp, #-16]
   27988:	ldr	r2, [r2, #120]	; 0x78
   2798c:	add	r1, r1, r2
   27990:	add	r1, r1, #1
   27994:	cmp	r0, r1
   27998:	bge	27a84 <__assert_fail@plt+0x16580>
   2799c:	ldr	r0, [pc, #1708]	; 28050 <__assert_fail@plt+0x16b4c>
   279a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   279a4:	ldr	r1, [r1, #4]
   279a8:	str	r1, [sp, #48]	; 0x30
   279ac:	ldr	r1, [fp, #12]
   279b0:	ldr	r2, [fp, #-16]
   279b4:	ldr	r2, [r2, #120]	; 0x78
   279b8:	add	r1, r1, r2
   279bc:	add	r1, r1, #1
   279c0:	str	r1, [sp, #44]	; 0x2c
   279c4:	ldr	r1, [sp, #48]	; 0x30
   279c8:	sub	r0, r0, r1
   279cc:	ldr	r1, [sp, #44]	; 0x2c
   279d0:	cmp	r0, r1
   279d4:	bge	279e4 <__assert_fail@plt+0x164e0>
   279d8:	movw	r0, #12
   279dc:	str	r0, [fp, #-12]
   279e0:	b	28044 <__assert_fail@plt+0x16b40>
   279e4:	ldr	r0, [pc, #1640]	; 28054 <__assert_fail@plt+0x16b50>
   279e8:	ldr	r1, [sp, #48]	; 0x30
   279ec:	ldr	r2, [sp, #44]	; 0x2c
   279f0:	add	r1, r1, r2
   279f4:	str	r1, [sp, #40]	; 0x28
   279f8:	ldr	r1, [sp, #40]	; 0x28
   279fc:	cmp	r0, r1
   27a00:	bcs	27a10 <__assert_fail@plt+0x1650c>
   27a04:	movw	r0, #12
   27a08:	str	r0, [fp, #-12]
   27a0c:	b	28044 <__assert_fail@plt+0x16b40>
   27a10:	ldr	r0, [fp, #-20]	; 0xffffffec
   27a14:	ldr	r0, [r0, #8]
   27a18:	ldr	r1, [sp, #40]	; 0x28
   27a1c:	lsl	r1, r1, #2
   27a20:	bl	335bc <__assert_fail@plt+0x220b8>
   27a24:	str	r0, [sp, #52]	; 0x34
   27a28:	ldr	r0, [sp, #52]	; 0x34
   27a2c:	movw	r1, #0
   27a30:	cmp	r0, r1
   27a34:	bne	27a44 <__assert_fail@plt+0x16540>
   27a38:	movw	r0, #12
   27a3c:	str	r0, [fp, #-12]
   27a40:	b	28044 <__assert_fail@plt+0x16b40>
   27a44:	ldr	r0, [sp, #52]	; 0x34
   27a48:	ldr	r1, [fp, #-20]	; 0xffffffec
   27a4c:	str	r0, [r1, #8]
   27a50:	ldr	r0, [sp, #40]	; 0x28
   27a54:	ldr	r1, [fp, #-20]	; 0xffffffec
   27a58:	str	r0, [r1, #4]
   27a5c:	ldr	r0, [sp, #52]	; 0x34
   27a60:	ldr	r1, [sp, #48]	; 0x30
   27a64:	add	r0, r0, r1, lsl #2
   27a68:	ldr	r2, [fp, #-20]	; 0xffffffec
   27a6c:	ldr	r2, [r2, #4]
   27a70:	sub	r1, r2, r1
   27a74:	lsl	r2, r1, #2
   27a78:	movw	r1, #0
   27a7c:	and	r1, r1, #255	; 0xff
   27a80:	bl	11420 <memset@plt>
   27a84:	ldr	r0, [fp, #-20]	; 0xffffffec
   27a88:	ldr	r0, [r0]
   27a8c:	cmp	r0, #0
   27a90:	beq	27aa4 <__assert_fail@plt+0x165a0>
   27a94:	ldr	r0, [fp, #-20]	; 0xffffffec
   27a98:	ldr	r0, [r0]
   27a9c:	str	r0, [sp, #36]	; 0x24
   27aa0:	b	27aac <__assert_fail@plt+0x165a8>
   27aa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27aa8:	str	r0, [sp, #36]	; 0x24
   27aac:	ldr	r0, [sp, #36]	; 0x24
   27ab0:	str	r0, [fp, #-48]	; 0xffffffd0
   27ab4:	ldr	r0, [fp, #-16]
   27ab8:	ldr	r0, [r0, #100]	; 0x64
   27abc:	str	r0, [sp, #60]	; 0x3c
   27ac0:	ldr	r0, [fp, #-16]
   27ac4:	ldr	r0, [r0, #40]	; 0x28
   27ac8:	str	r0, [fp, #-44]	; 0xffffffd4
   27acc:	ldr	r0, [fp, #-20]	; 0xffffffec
   27ad0:	ldr	r0, [r0, #8]
   27ad4:	ldr	r1, [fp, #-16]
   27ad8:	str	r0, [r1, #100]	; 0x64
   27adc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27ae0:	ldr	r1, [fp, #-16]
   27ae4:	str	r0, [r1, #40]	; 0x28
   27ae8:	ldr	r0, [fp, #-16]
   27aec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27af0:	sub	r1, r1, #1
   27af4:	ldr	r2, [fp, #-16]
   27af8:	ldr	r2, [r2, #88]	; 0x58
   27afc:	bl	25a30 <__assert_fail@plt+0x1452c>
   27b00:	str	r0, [sp, #56]	; 0x38
   27b04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27b08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27b0c:	cmp	r0, r1
   27b10:	bne	27b78 <__assert_fail@plt+0x16674>
   27b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27b18:	add	r0, sp, #64	; 0x40
   27b1c:	bl	21d7c <__assert_fail@plt+0x10878>
   27b20:	str	r0, [fp, #-36]	; 0xffffffdc
   27b24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27b28:	cmp	r0, #0
   27b2c:	beq	27b3c <__assert_fail@plt+0x16638>
   27b30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27b34:	str	r0, [fp, #-12]
   27b38:	b	28044 <__assert_fail@plt+0x16b40>
   27b3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27b40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   27b44:	ldr	r3, [fp, #16]
   27b48:	add	r1, sp, #64	; 0x40
   27b4c:	bl	283b4 <__assert_fail@plt+0x16eb0>
   27b50:	str	r0, [fp, #-36]	; 0xffffffdc
   27b54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27b58:	cmp	r0, #0
   27b5c:	beq	27b74 <__assert_fail@plt+0x16670>
   27b60:	ldr	r0, [sp, #72]	; 0x48
   27b64:	bl	34c20 <__assert_fail@plt+0x2371c>
   27b68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27b6c:	str	r0, [fp, #-12]
   27b70:	b	28044 <__assert_fail@plt+0x16b40>
   27b74:	b	27c00 <__assert_fail@plt+0x166fc>
   27b78:	ldr	r0, [fp, #-16]
   27b7c:	ldr	r0, [r0, #100]	; 0x64
   27b80:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27b84:	add	r0, r0, r1, lsl #2
   27b88:	ldr	r0, [r0]
   27b8c:	str	r0, [fp, #-56]	; 0xffffffc8
   27b90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27b94:	movw	r1, #0
   27b98:	cmp	r0, r1
   27b9c:	beq	27be8 <__assert_fail@plt+0x166e4>
   27ba0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27ba4:	ldrb	r0, [r0, #52]	; 0x34
   27ba8:	ubfx	r0, r0, #6, #1
   27bac:	and	r0, r0, #255	; 0xff
   27bb0:	cmp	r0, #0
   27bb4:	beq	27be8 <__assert_fail@plt+0x166e4>
   27bb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27bbc:	add	r1, r0, #4
   27bc0:	add	r0, sp, #64	; 0x40
   27bc4:	bl	23030 <__assert_fail@plt+0x11b2c>
   27bc8:	str	r0, [fp, #-36]	; 0xffffffdc
   27bcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27bd0:	cmp	r0, #0
   27bd4:	beq	27be4 <__assert_fail@plt+0x166e0>
   27bd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27bdc:	str	r0, [fp, #-12]
   27be0:	b	28044 <__assert_fail@plt+0x16b40>
   27be4:	b	27bfc <__assert_fail@plt+0x166f8>
   27be8:	add	r0, sp, #64	; 0x40
   27bec:	movw	r1, #0
   27bf0:	and	r1, r1, #255	; 0xff
   27bf4:	movw	r2, #12
   27bf8:	bl	11420 <memset@plt>
   27bfc:	b	27c00 <__assert_fail@plt+0x166fc>
   27c00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27c04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27c08:	cmp	r0, r1
   27c0c:	beq	27c38 <__assert_fail@plt+0x16734>
   27c10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27c14:	movw	r1, #0
   27c18:	cmp	r0, r1
   27c1c:	beq	27d10 <__assert_fail@plt+0x1680c>
   27c20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27c24:	ldrb	r0, [r0, #52]	; 0x34
   27c28:	ubfx	r0, r0, #6, #1
   27c2c:	and	r0, r0, #255	; 0xff
   27c30:	cmp	r0, #0
   27c34:	beq	27d10 <__assert_fail@plt+0x1680c>
   27c38:	ldr	r0, [sp, #68]	; 0x44
   27c3c:	cmp	r0, #0
   27c40:	beq	27c94 <__assert_fail@plt+0x16790>
   27c44:	ldr	r0, [fp, #-16]
   27c48:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27c4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27c50:	ldr	r1, [fp, #16]
   27c54:	add	ip, sp, #64	; 0x40
   27c58:	str	r1, [sp, #32]
   27c5c:	mov	r1, ip
   27c60:	ldr	ip, [sp, #32]
   27c64:	str	ip, [sp]
   27c68:	bl	28558 <__assert_fail@plt+0x17054>
   27c6c:	str	r0, [fp, #-36]	; 0xffffffdc
   27c70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27c74:	cmp	r0, #0
   27c78:	beq	27c90 <__assert_fail@plt+0x1678c>
   27c7c:	ldr	r0, [sp, #72]	; 0x48
   27c80:	bl	34c20 <__assert_fail@plt+0x2371c>
   27c84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27c88:	str	r0, [fp, #-12]
   27c8c:	b	28044 <__assert_fail@plt+0x16b40>
   27c90:	b	27c94 <__assert_fail@plt+0x16790>
   27c94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27c98:	ldr	r3, [sp, #56]	; 0x38
   27c9c:	sub	r0, fp, #36	; 0x24
   27ca0:	add	r2, sp, #64	; 0x40
   27ca4:	bl	231f4 <__assert_fail@plt+0x11cf0>
   27ca8:	str	r0, [fp, #-56]	; 0xffffffc8
   27cac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27cb0:	movw	r1, #0
   27cb4:	cmp	r0, r1
   27cb8:	movw	r0, #0
   27cbc:	str	r0, [sp, #28]
   27cc0:	bne	27cd8 <__assert_fail@plt+0x167d4>
   27cc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27cc8:	cmp	r0, #0
   27ccc:	movw	r0, #0
   27cd0:	movne	r0, #1
   27cd4:	str	r0, [sp, #28]
   27cd8:	ldr	r0, [sp, #28]
   27cdc:	tst	r0, #1
   27ce0:	beq	27cf8 <__assert_fail@plt+0x167f4>
   27ce4:	ldr	r0, [sp, #72]	; 0x48
   27ce8:	bl	34c20 <__assert_fail@plt+0x2371c>
   27cec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27cf0:	str	r0, [fp, #-12]
   27cf4:	b	28044 <__assert_fail@plt+0x16b40>
   27cf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27cfc:	ldr	r1, [fp, #-16]
   27d00:	ldr	r1, [r1, #100]	; 0x64
   27d04:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27d08:	add	r1, r1, r2, lsl #2
   27d0c:	str	r0, [r1]
   27d10:	movw	r0, #0
   27d14:	str	r0, [fp, #-52]	; 0xffffffcc
   27d18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27d1c:	ldr	r1, [fp, #12]
   27d20:	cmp	r0, r1
   27d24:	movw	r0, #0
   27d28:	str	r0, [sp, #24]
   27d2c:	bge	27d4c <__assert_fail@plt+0x16848>
   27d30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27d34:	ldr	r1, [fp, #-16]
   27d38:	ldr	r1, [r1, #120]	; 0x78
   27d3c:	cmp	r0, r1
   27d40:	movw	r0, #0
   27d44:	movle	r0, #1
   27d48:	str	r0, [sp, #24]
   27d4c:	ldr	r0, [sp, #24]
   27d50:	tst	r0, #1
   27d54:	beq	27f90 <__assert_fail@plt+0x16a8c>
   27d58:	mov	r0, #0
   27d5c:	str	r0, [sp, #68]	; 0x44
   27d60:	ldr	r0, [fp, #-16]
   27d64:	ldr	r0, [r0, #100]	; 0x64
   27d68:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27d6c:	add	r1, r1, #1
   27d70:	add	r0, r0, r1, lsl #2
   27d74:	ldr	r0, [r0]
   27d78:	movw	r1, #0
   27d7c:	cmp	r0, r1
   27d80:	beq	27dd0 <__assert_fail@plt+0x168cc>
   27d84:	ldr	r0, [fp, #-16]
   27d88:	ldr	r0, [r0, #100]	; 0x64
   27d8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27d90:	add	r1, r1, #1
   27d94:	add	r0, r0, r1, lsl #2
   27d98:	ldr	r0, [r0]
   27d9c:	add	r1, r0, #4
   27da0:	add	r0, sp, #64	; 0x40
   27da4:	bl	22758 <__assert_fail@plt+0x11254>
   27da8:	str	r0, [fp, #-36]	; 0xffffffdc
   27dac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27db0:	cmp	r0, #0
   27db4:	beq	27dcc <__assert_fail@plt+0x168c8>
   27db8:	ldr	r0, [sp, #72]	; 0x48
   27dbc:	bl	34c20 <__assert_fail@plt+0x2371c>
   27dc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27dc4:	str	r0, [fp, #-12]
   27dc8:	b	28044 <__assert_fail@plt+0x16b40>
   27dcc:	b	27dd0 <__assert_fail@plt+0x168cc>
   27dd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27dd4:	movw	r1, #0
   27dd8:	cmp	r0, r1
   27ddc:	beq	27e20 <__assert_fail@plt+0x1691c>
   27de0:	ldr	r0, [fp, #-16]
   27de4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27de8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27dec:	add	r2, r2, #16
   27df0:	add	r3, sp, #64	; 0x40
   27df4:	bl	28928 <__assert_fail@plt+0x17424>
   27df8:	str	r0, [fp, #-36]	; 0xffffffdc
   27dfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27e00:	cmp	r0, #0
   27e04:	beq	27e1c <__assert_fail@plt+0x16918>
   27e08:	ldr	r0, [sp, #72]	; 0x48
   27e0c:	bl	34c20 <__assert_fail@plt+0x2371c>
   27e10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27e14:	str	r0, [fp, #-12]
   27e18:	b	28044 <__assert_fail@plt+0x16b40>
   27e1c:	b	27e20 <__assert_fail@plt+0x1691c>
   27e20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27e24:	add	r0, r0, #1
   27e28:	str	r0, [fp, #-48]	; 0xffffffd0
   27e2c:	ldr	r0, [sp, #68]	; 0x44
   27e30:	cmp	r0, #0
   27e34:	beq	27ec0 <__assert_fail@plt+0x169bc>
   27e38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27e3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   27e40:	ldr	r3, [fp, #16]
   27e44:	add	r1, sp, #64	; 0x40
   27e48:	bl	283b4 <__assert_fail@plt+0x16eb0>
   27e4c:	str	r0, [fp, #-36]	; 0xffffffdc
   27e50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27e54:	cmp	r0, #0
   27e58:	beq	27e70 <__assert_fail@plt+0x1696c>
   27e5c:	ldr	r0, [sp, #72]	; 0x48
   27e60:	bl	34c20 <__assert_fail@plt+0x2371c>
   27e64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27e68:	str	r0, [fp, #-12]
   27e6c:	b	28044 <__assert_fail@plt+0x16b40>
   27e70:	ldr	r0, [fp, #-16]
   27e74:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27e78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27e7c:	ldr	r1, [fp, #16]
   27e80:	add	ip, sp, #64	; 0x40
   27e84:	str	r1, [sp, #20]
   27e88:	mov	r1, ip
   27e8c:	ldr	ip, [sp, #20]
   27e90:	str	ip, [sp]
   27e94:	bl	28558 <__assert_fail@plt+0x17054>
   27e98:	str	r0, [fp, #-36]	; 0xffffffdc
   27e9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27ea0:	cmp	r0, #0
   27ea4:	beq	27ebc <__assert_fail@plt+0x169b8>
   27ea8:	ldr	r0, [sp, #72]	; 0x48
   27eac:	bl	34c20 <__assert_fail@plt+0x2371c>
   27eb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27eb4:	str	r0, [fp, #-12]
   27eb8:	b	28044 <__assert_fail@plt+0x16b40>
   27ebc:	b	27ec0 <__assert_fail@plt+0x169bc>
   27ec0:	ldr	r0, [fp, #-16]
   27ec4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27ec8:	sub	r1, r1, #1
   27ecc:	ldr	r2, [fp, #-16]
   27ed0:	ldr	r2, [r2, #88]	; 0x58
   27ed4:	bl	25a30 <__assert_fail@plt+0x1452c>
   27ed8:	str	r0, [sp, #56]	; 0x38
   27edc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27ee0:	ldr	r3, [sp, #56]	; 0x38
   27ee4:	sub	r0, fp, #36	; 0x24
   27ee8:	add	r2, sp, #64	; 0x40
   27eec:	bl	231f4 <__assert_fail@plt+0x11cf0>
   27ef0:	str	r0, [fp, #-56]	; 0xffffffc8
   27ef4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27ef8:	movw	r1, #0
   27efc:	cmp	r0, r1
   27f00:	movw	r0, #0
   27f04:	str	r0, [sp, #16]
   27f08:	bne	27f20 <__assert_fail@plt+0x16a1c>
   27f0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27f10:	cmp	r0, #0
   27f14:	movw	r0, #0
   27f18:	movne	r0, #1
   27f1c:	str	r0, [sp, #16]
   27f20:	ldr	r0, [sp, #16]
   27f24:	tst	r0, #1
   27f28:	beq	27f40 <__assert_fail@plt+0x16a3c>
   27f2c:	ldr	r0, [sp, #72]	; 0x48
   27f30:	bl	34c20 <__assert_fail@plt+0x2371c>
   27f34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27f38:	str	r0, [fp, #-12]
   27f3c:	b	28044 <__assert_fail@plt+0x16b40>
   27f40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27f44:	ldr	r1, [fp, #-16]
   27f48:	ldr	r1, [r1, #100]	; 0x64
   27f4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27f50:	add	r1, r1, r2, lsl #2
   27f54:	str	r0, [r1]
   27f58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27f5c:	movw	r1, #0
   27f60:	cmp	r0, r1
   27f64:	bne	27f78 <__assert_fail@plt+0x16a74>
   27f68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27f6c:	add	r0, r0, #1
   27f70:	str	r0, [sp, #12]
   27f74:	b	27f84 <__assert_fail@plt+0x16a80>
   27f78:	movw	r0, #0
   27f7c:	str	r0, [sp, #12]
   27f80:	b	27f84 <__assert_fail@plt+0x16a80>
   27f84:	ldr	r0, [sp, #12]
   27f88:	str	r0, [fp, #-52]	; 0xffffffcc
   27f8c:	b	27d18 <__assert_fail@plt+0x16814>
   27f90:	ldr	r0, [sp, #72]	; 0x48
   27f94:	bl	34c20 <__assert_fail@plt+0x2371c>
   27f98:	ldr	r0, [fp, #-16]
   27f9c:	ldr	r0, [r0, #100]	; 0x64
   27fa0:	ldr	r1, [fp, #12]
   27fa4:	add	r0, r0, r1, lsl #2
   27fa8:	ldr	r0, [r0]
   27fac:	movw	r1, #0
   27fb0:	cmp	r0, r1
   27fb4:	bne	27fc4 <__assert_fail@plt+0x16ac0>
   27fb8:	movw	r0, #0
   27fbc:	str	r0, [sp, #8]
   27fc0:	b	27fe0 <__assert_fail@plt+0x16adc>
   27fc4:	ldr	r0, [fp, #-16]
   27fc8:	ldr	r0, [r0, #100]	; 0x64
   27fcc:	ldr	r1, [fp, #12]
   27fd0:	add	r0, r0, r1, lsl #2
   27fd4:	ldr	r0, [r0]
   27fd8:	add	r0, r0, #4
   27fdc:	str	r0, [sp, #8]
   27fe0:	ldr	r0, [sp, #8]
   27fe4:	str	r0, [fp, #-60]	; 0xffffffc4
   27fe8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27fec:	ldr	r1, [fp, #-20]	; 0xffffffec
   27ff0:	str	r0, [r1]
   27ff4:	ldr	r0, [sp, #60]	; 0x3c
   27ff8:	ldr	r1, [fp, #-16]
   27ffc:	str	r0, [r1, #100]	; 0x64
   28000:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28004:	ldr	r1, [fp, #-16]
   28008:	str	r0, [r1, #40]	; 0x28
   2800c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28010:	movw	r1, #0
   28014:	cmp	r0, r1
   28018:	beq	2803c <__assert_fail@plt+0x16b38>
   2801c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28020:	ldr	r1, [fp, #8]
   28024:	bl	23104 <__assert_fail@plt+0x11c00>
   28028:	cmp	r0, #0
   2802c:	beq	2803c <__assert_fail@plt+0x16b38>
   28030:	movw	r0, #0
   28034:	str	r0, [fp, #-12]
   28038:	b	28044 <__assert_fail@plt+0x16b40>
   2803c:	movw	r0, #1
   28040:	str	r0, [fp, #-12]
   28044:	ldr	r0, [fp, #-12]
   28048:	sub	sp, fp, #8
   2804c:	pop	{r4, sl, fp, pc}
   28050:	svcvc	0x00ffffff
   28054:	svccc	0x00ffffff
   28058:	push	{fp, lr}
   2805c:	mov	fp, sp
   28060:	sub	sp, sp, #32
   28064:	str	r0, [fp, #-8]
   28068:	str	r1, [fp, #-12]
   2806c:	str	r2, [sp, #16]
   28070:	ldr	r0, [fp, #-8]
   28074:	ldr	r0, [r0, #16]
   28078:	ldr	r1, [fp, #-8]
   2807c:	ldr	r1, [r1, #12]
   28080:	cmp	r0, r1
   28084:	bne	280e8 <__assert_fail@plt+0x16be4>
   28088:	ldr	r0, [fp, #-8]
   2808c:	ldr	r0, [r0, #12]
   28090:	mov	r1, #1
   28094:	orr	r0, r1, r0, lsl #1
   28098:	str	r0, [sp, #8]
   2809c:	ldr	r0, [fp, #-8]
   280a0:	ldr	r0, [r0, #20]
   280a4:	ldr	r1, [sp, #8]
   280a8:	lsl	r1, r1, #2
   280ac:	bl	335bc <__assert_fail@plt+0x220b8>
   280b0:	str	r0, [sp, #4]
   280b4:	ldr	r0, [sp, #4]
   280b8:	movw	r1, #0
   280bc:	cmp	r0, r1
   280c0:	bne	280d0 <__assert_fail@plt+0x16bcc>
   280c4:	movw	r0, #0
   280c8:	str	r0, [fp, #-4]
   280cc:	b	28150 <__assert_fail@plt+0x16c4c>
   280d0:	ldr	r0, [sp, #4]
   280d4:	ldr	r1, [fp, #-8]
   280d8:	str	r0, [r1, #20]
   280dc:	ldr	r0, [sp, #8]
   280e0:	ldr	r1, [fp, #-8]
   280e4:	str	r0, [r1, #12]
   280e8:	movw	r0, #1
   280ec:	movw	r1, #20
   280f0:	bl	334b0 <__assert_fail@plt+0x21fac>
   280f4:	str	r0, [sp, #12]
   280f8:	ldr	r0, [sp, #12]
   280fc:	movw	r1, #0
   28100:	cmp	r0, r1
   28104:	beq	28148 <__assert_fail@plt+0x16c44>
   28108:	ldr	r0, [sp, #12]
   2810c:	ldr	r1, [fp, #-8]
   28110:	ldr	r2, [r1, #16]
   28114:	ldr	r1, [r1, #20]
   28118:	add	r1, r1, r2, lsl #2
   2811c:	str	r0, [r1]
   28120:	ldr	r0, [fp, #-12]
   28124:	ldr	r1, [sp, #12]
   28128:	str	r0, [r1]
   2812c:	ldr	r0, [sp, #16]
   28130:	ldr	r1, [sp, #12]
   28134:	str	r0, [r1, #4]
   28138:	ldr	r0, [fp, #-8]
   2813c:	ldr	r1, [r0, #16]
   28140:	add	r1, r1, #1
   28144:	str	r1, [r0, #16]
   28148:	ldr	r0, [sp, #12]
   2814c:	str	r0, [fp, #-4]
   28150:	ldr	r0, [fp, #-4]
   28154:	mov	sp, fp
   28158:	pop	{fp, pc}
   2815c:	push	{fp, lr}
   28160:	mov	fp, sp
   28164:	sub	sp, sp, #24
   28168:	ldr	ip, [fp, #8]
   2816c:	str	r0, [fp, #-8]
   28170:	str	r1, [sp, #12]
   28174:	str	r2, [sp, #8]
   28178:	str	r3, [sp, #4]
   2817c:	ldr	r0, [fp, #-8]
   28180:	ldr	r0, [r0, #108]	; 0x6c
   28184:	ldr	r1, [fp, #-8]
   28188:	ldr	r1, [r1, #112]	; 0x70
   2818c:	cmp	r0, r1
   28190:	blt	28220 <__assert_fail@plt+0x16d1c>
   28194:	ldr	r0, [fp, #-8]
   28198:	ldr	r1, [r0, #112]	; 0x70
   2819c:	ldr	r0, [r0, #116]	; 0x74
   281a0:	lsl	r1, r1, #1
   281a4:	movw	r2, #24
   281a8:	mul	r1, r1, r2
   281ac:	bl	335bc <__assert_fail@plt+0x220b8>
   281b0:	str	r0, [sp]
   281b4:	ldr	r0, [sp]
   281b8:	movw	r1, #0
   281bc:	cmp	r0, r1
   281c0:	bne	281dc <__assert_fail@plt+0x16cd8>
   281c4:	ldr	r0, [fp, #-8]
   281c8:	ldr	r0, [r0, #116]	; 0x74
   281cc:	bl	34c20 <__assert_fail@plt+0x2371c>
   281d0:	movw	r0, #12
   281d4:	str	r0, [fp, #-4]
   281d8:	b	283a8 <__assert_fail@plt+0x16ea4>
   281dc:	ldr	r0, [sp]
   281e0:	ldr	r1, [fp, #-8]
   281e4:	str	r0, [r1, #116]	; 0x74
   281e8:	ldr	r0, [fp, #-8]
   281ec:	ldr	r1, [r0, #108]	; 0x6c
   281f0:	ldr	r2, [r0, #112]	; 0x70
   281f4:	ldr	r0, [r0, #116]	; 0x74
   281f8:	add	r1, r1, r1, lsl #1
   281fc:	add	r0, r0, r1, lsl #3
   28200:	add	r1, r2, r2, lsl #1
   28204:	lsl	r2, r1, #3
   28208:	mov	r1, #0
   2820c:	bl	11420 <memset@plt>
   28210:	ldr	r1, [fp, #-8]
   28214:	ldr	r2, [r1, #112]	; 0x70
   28218:	lsl	r2, r2, #1
   2821c:	str	r2, [r1, #112]	; 0x70
   28220:	ldr	r0, [fp, #-8]
   28224:	ldr	r0, [r0, #108]	; 0x6c
   28228:	cmp	r0, #0
   2822c:	ble	28288 <__assert_fail@plt+0x16d84>
   28230:	ldr	r0, [fp, #-8]
   28234:	ldr	r0, [r0, #116]	; 0x74
   28238:	ldr	r1, [fp, #-8]
   2823c:	ldr	r1, [r1, #108]	; 0x6c
   28240:	sub	r1, r1, #1
   28244:	movw	r2, #24
   28248:	mul	r1, r1, r2
   2824c:	add	r0, r0, r1
   28250:	ldr	r0, [r0, #4]
   28254:	ldr	r1, [sp, #8]
   28258:	cmp	r0, r1
   2825c:	bne	28288 <__assert_fail@plt+0x16d84>
   28260:	ldr	r0, [fp, #-8]
   28264:	ldr	r0, [r0, #116]	; 0x74
   28268:	ldr	r1, [fp, #-8]
   2826c:	ldr	r1, [r1, #108]	; 0x6c
   28270:	sub	r1, r1, #1
   28274:	movw	r2, #24
   28278:	mul	r1, r1, r2
   2827c:	add	r0, r0, r1
   28280:	movw	r1, #1
   28284:	strb	r1, [r0, #20]
   28288:	ldr	r0, [sp, #12]
   2828c:	ldr	r1, [fp, #-8]
   28290:	ldr	r1, [r1, #116]	; 0x74
   28294:	ldr	r2, [fp, #-8]
   28298:	ldr	r2, [r2, #108]	; 0x6c
   2829c:	movw	r3, #24
   282a0:	mul	r2, r2, r3
   282a4:	add	r1, r1, r2
   282a8:	str	r0, [r1]
   282ac:	ldr	r0, [sp, #8]
   282b0:	ldr	r1, [fp, #-8]
   282b4:	ldr	r1, [r1, #116]	; 0x74
   282b8:	ldr	r2, [fp, #-8]
   282bc:	ldr	r2, [r2, #108]	; 0x6c
   282c0:	mul	r2, r2, r3
   282c4:	add	r1, r1, r2
   282c8:	str	r0, [r1, #4]
   282cc:	ldr	r0, [sp, #4]
   282d0:	ldr	r1, [fp, #-8]
   282d4:	ldr	r1, [r1, #116]	; 0x74
   282d8:	ldr	r2, [fp, #-8]
   282dc:	ldr	r2, [r2, #108]	; 0x6c
   282e0:	mul	r2, r2, r3
   282e4:	add	r1, r1, r2
   282e8:	str	r0, [r1, #8]
   282ec:	ldr	r0, [fp, #8]
   282f0:	ldr	r1, [fp, #-8]
   282f4:	ldr	r1, [r1, #116]	; 0x74
   282f8:	ldr	r2, [fp, #-8]
   282fc:	ldr	r2, [r2, #108]	; 0x6c
   28300:	mul	r2, r2, r3
   28304:	add	r1, r1, r2
   28308:	str	r0, [r1, #12]
   2830c:	ldr	r0, [sp, #4]
   28310:	ldr	r1, [fp, #8]
   28314:	cmp	r0, r1
   28318:	movw	r0, #0
   2831c:	moveq	r0, #1
   28320:	tst	r0, #1
   28324:	mvn	r0, #0
   28328:	moveq	r0, #0
   2832c:	ldr	r1, [fp, #-8]
   28330:	ldr	r1, [r1, #116]	; 0x74
   28334:	ldr	r2, [fp, #-8]
   28338:	ldr	r2, [r2, #108]	; 0x6c
   2833c:	mul	r2, r2, r3
   28340:	add	r1, r1, r2
   28344:	str	r0, [r1, #16]
   28348:	ldr	r0, [fp, #-8]
   2834c:	ldr	r0, [r0, #116]	; 0x74
   28350:	ldr	r1, [fp, #-8]
   28354:	ldr	r2, [r1, #108]	; 0x6c
   28358:	add	ip, r2, #1
   2835c:	str	ip, [r1, #108]	; 0x6c
   28360:	mul	r1, r2, r3
   28364:	add	r0, r0, r1
   28368:	movw	r1, #0
   2836c:	strb	r1, [r0, #20]
   28370:	ldr	r0, [fp, #-8]
   28374:	ldr	r0, [r0, #120]	; 0x78
   28378:	ldr	r1, [fp, #8]
   2837c:	ldr	r2, [sp, #4]
   28380:	sub	r1, r1, r2
   28384:	cmp	r0, r1
   28388:	bge	283a0 <__assert_fail@plt+0x16e9c>
   2838c:	ldr	r0, [fp, #8]
   28390:	ldr	r1, [sp, #4]
   28394:	sub	r0, r0, r1
   28398:	ldr	r1, [fp, #-8]
   2839c:	str	r0, [r1, #120]	; 0x78
   283a0:	movw	r0, #0
   283a4:	str	r0, [fp, #-4]
   283a8:	ldr	r0, [fp, #-4]
   283ac:	mov	sp, fp
   283b0:	pop	{fp, pc}
   283b4:	push	{fp, lr}
   283b8:	mov	fp, sp
   283bc:	sub	sp, sp, #64	; 0x40
   283c0:	str	r0, [fp, #-8]
   283c4:	str	r1, [fp, #-12]
   283c8:	str	r2, [fp, #-16]
   283cc:	str	r3, [fp, #-20]	; 0xffffffec
   283d0:	ldr	r0, [fp, #-12]
   283d4:	ldr	r0, [r0, #4]
   283d8:	cmp	r0, #0
   283dc:	beq	283e4 <__assert_fail@plt+0x16ee0>
   283e0:	b	283e4 <__assert_fail@plt+0x16ee0>
   283e4:	ldr	r0, [fp, #-12]
   283e8:	ldr	r1, [r0, #4]
   283ec:	add	r0, sp, #20
   283f0:	bl	221e0 <__assert_fail@plt+0x10cdc>
   283f4:	str	r0, [fp, #-24]	; 0xffffffe8
   283f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   283fc:	cmp	r0, #0
   28400:	beq	28410 <__assert_fail@plt+0x16f0c>
   28404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28408:	str	r0, [fp, #-4]
   2840c:	b	2854c <__assert_fail@plt+0x17048>
   28410:	movw	r0, #0
   28414:	str	r0, [fp, #-28]	; 0xffffffe4
   28418:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2841c:	ldr	r1, [fp, #-12]
   28420:	ldr	r1, [r1, #4]
   28424:	cmp	r0, r1
   28428:	bge	2851c <__assert_fail@plt+0x17018>
   2842c:	ldr	r0, [fp, #-12]
   28430:	ldr	r0, [r0, #8]
   28434:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28438:	add	r0, r0, r1, lsl #2
   2843c:	ldr	r0, [r0]
   28440:	str	r0, [sp, #16]
   28444:	ldr	r0, [fp, #-8]
   28448:	ldr	r0, [r0, #24]
   2844c:	ldr	r1, [sp, #16]
   28450:	movw	r2, #12
   28454:	mul	r1, r1, r2
   28458:	add	r0, r0, r1
   2845c:	str	r0, [sp, #12]
   28460:	ldr	r0, [fp, #-8]
   28464:	ldr	r1, [sp, #12]
   28468:	ldr	r2, [fp, #-16]
   2846c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28470:	bl	27868 <__assert_fail@plt+0x16364>
   28474:	str	r0, [sp, #32]
   28478:	ldr	r0, [sp, #32]
   2847c:	cmn	r0, #1
   28480:	bne	284b8 <__assert_fail@plt+0x16fb4>
   28484:	ldr	r1, [sp, #12]
   28488:	add	r0, sp, #20
   2848c:	bl	22758 <__assert_fail@plt+0x11254>
   28490:	str	r0, [fp, #-24]	; 0xffffffe8
   28494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28498:	cmp	r0, #0
   2849c:	beq	284b4 <__assert_fail@plt+0x16fb0>
   284a0:	ldr	r0, [sp, #28]
   284a4:	bl	34c20 <__assert_fail@plt+0x2371c>
   284a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   284ac:	str	r0, [fp, #-4]
   284b0:	b	2854c <__assert_fail@plt+0x17048>
   284b4:	b	28508 <__assert_fail@plt+0x17004>
   284b8:	ldr	r0, [fp, #-8]
   284bc:	ldr	r2, [sp, #16]
   284c0:	ldr	r3, [fp, #-16]
   284c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   284c8:	add	ip, sp, #20
   284cc:	str	r1, [sp, #8]
   284d0:	mov	r1, ip
   284d4:	ldr	ip, [sp, #8]
   284d8:	str	ip, [sp]
   284dc:	bl	28c14 <__assert_fail@plt+0x17710>
   284e0:	str	r0, [fp, #-24]	; 0xffffffe8
   284e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   284e8:	cmp	r0, #0
   284ec:	beq	28504 <__assert_fail@plt+0x17000>
   284f0:	ldr	r0, [sp, #28]
   284f4:	bl	34c20 <__assert_fail@plt+0x2371c>
   284f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   284fc:	str	r0, [fp, #-4]
   28500:	b	2854c <__assert_fail@plt+0x17048>
   28504:	b	28508 <__assert_fail@plt+0x17004>
   28508:	b	2850c <__assert_fail@plt+0x17008>
   2850c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28510:	add	r0, r0, #1
   28514:	str	r0, [fp, #-28]	; 0xffffffe4
   28518:	b	28418 <__assert_fail@plt+0x16f14>
   2851c:	ldr	r0, [fp, #-12]
   28520:	ldr	r0, [r0, #8]
   28524:	bl	34c20 <__assert_fail@plt+0x2371c>
   28528:	ldr	r0, [fp, #-12]
   2852c:	ldr	r1, [sp, #20]
   28530:	str	r1, [r0]
   28534:	ldr	r1, [sp, #24]
   28538:	str	r1, [r0, #4]
   2853c:	ldr	r1, [sp, #28]
   28540:	str	r1, [r0, #8]
   28544:	movw	r0, #0
   28548:	str	r0, [fp, #-4]
   2854c:	ldr	r0, [fp, #-4]
   28550:	mov	sp, fp
   28554:	pop	{fp, pc}
   28558:	push	{fp, lr}
   2855c:	mov	fp, sp
   28560:	sub	sp, sp, #112	; 0x70
   28564:	ldr	ip, [fp, #8]
   28568:	str	r0, [fp, #-8]
   2856c:	str	r1, [fp, #-12]
   28570:	str	r2, [fp, #-16]
   28574:	str	r3, [fp, #-20]	; 0xffffffec
   28578:	ldr	r0, [fp, #-8]
   2857c:	ldr	r0, [r0, #84]	; 0x54
   28580:	str	r0, [fp, #-24]	; 0xffffffe8
   28584:	ldr	r0, [fp, #-8]
   28588:	ldr	r1, [fp, #-16]
   2858c:	str	ip, [sp, #28]
   28590:	bl	27570 <__assert_fail@plt+0x1606c>
   28594:	str	r0, [fp, #-32]	; 0xffffffe0
   28598:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2859c:	cmn	r0, #1
   285a0:	bne	285b0 <__assert_fail@plt+0x170ac>
   285a4:	movw	r0, #0
   285a8:	str	r0, [fp, #-4]
   285ac:	b	2891c <__assert_fail@plt+0x17418>
   285b0:	b	285b4 <__assert_fail@plt+0x170b0>
   285b4:	ldr	r0, [fp, #-8]
   285b8:	ldr	r0, [r0, #116]	; 0x74
   285bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   285c0:	movw	r2, #24
   285c4:	mul	r1, r1, r2
   285c8:	add	r0, r0, r1
   285cc:	str	r0, [fp, #-36]	; 0xffffffdc
   285d0:	ldr	r0, [fp, #-12]
   285d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   285d8:	ldr	r1, [r1]
   285dc:	bl	23104 <__assert_fail@plt+0x11c00>
   285e0:	cmp	r0, #0
   285e4:	bne	285ec <__assert_fail@plt+0x170e8>
   285e8:	b	288fc <__assert_fail@plt+0x173f8>
   285ec:	ldr	r0, [fp, #-16]
   285f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   285f4:	ldr	r1, [r1, #12]
   285f8:	add	r0, r0, r1
   285fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28600:	ldr	r1, [r1, #8]
   28604:	sub	r0, r0, r1
   28608:	str	r0, [fp, #-40]	; 0xffffffd8
   2860c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   28610:	ldr	r1, [fp, #-16]
   28614:	cmp	r0, r1
   28618:	bne	2873c <__assert_fail@plt+0x17238>
   2861c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28620:	ldr	r0, [r0, #20]
   28624:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28628:	ldr	r1, [r1]
   2862c:	movw	r2, #12
   28630:	mul	r1, r1, r2
   28634:	add	r0, r0, r1
   28638:	ldr	r0, [r0, #8]
   2863c:	ldr	r0, [r0]
   28640:	str	r0, [fp, #-44]	; 0xffffffd4
   28644:	ldr	r0, [fp, #-12]
   28648:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2864c:	bl	23104 <__assert_fail@plt+0x11c00>
   28650:	cmp	r0, #0
   28654:	beq	2865c <__assert_fail@plt+0x17158>
   28658:	b	288fc <__assert_fail@plt+0x173f8>
   2865c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28660:	add	r0, sp, #56	; 0x38
   28664:	bl	21d7c <__assert_fail@plt+0x10878>
   28668:	str	r0, [fp, #-28]	; 0xffffffe4
   2866c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28670:	ldr	r2, [fp, #-20]	; 0xffffffec
   28674:	ldr	r3, [fp, #8]
   28678:	add	r1, sp, #56	; 0x38
   2867c:	bl	283b4 <__assert_fail@plt+0x16eb0>
   28680:	str	r0, [sp, #52]	; 0x34
   28684:	ldr	r0, [fp, #-12]
   28688:	add	r1, sp, #56	; 0x38
   2868c:	bl	22758 <__assert_fail@plt+0x11254>
   28690:	str	r0, [sp, #48]	; 0x30
   28694:	ldr	r0, [sp, #64]	; 0x40
   28698:	bl	34c20 <__assert_fail@plt+0x2371c>
   2869c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   286a0:	cmp	r0, #0
   286a4:	movw	r0, #1
   286a8:	str	r0, [sp, #24]
   286ac:	bne	286d8 <__assert_fail@plt+0x171d4>
   286b0:	ldr	r0, [sp, #52]	; 0x34
   286b4:	cmp	r0, #0
   286b8:	movw	r0, #1
   286bc:	str	r0, [sp, #24]
   286c0:	bne	286d8 <__assert_fail@plt+0x171d4>
   286c4:	ldr	r0, [sp, #48]	; 0x30
   286c8:	cmp	r0, #0
   286cc:	movw	r0, #0
   286d0:	movne	r0, #1
   286d4:	str	r0, [sp, #24]
   286d8:	ldr	r0, [sp, #24]
   286dc:	tst	r0, #1
   286e0:	beq	28738 <__assert_fail@plt+0x17234>
   286e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   286e8:	cmp	r0, #0
   286ec:	beq	286fc <__assert_fail@plt+0x171f8>
   286f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   286f4:	str	r0, [sp, #20]
   286f8:	b	28724 <__assert_fail@plt+0x17220>
   286fc:	ldr	r0, [sp, #52]	; 0x34
   28700:	cmp	r0, #0
   28704:	beq	28714 <__assert_fail@plt+0x17210>
   28708:	ldr	r0, [sp, #52]	; 0x34
   2870c:	str	r0, [sp, #16]
   28710:	b	2871c <__assert_fail@plt+0x17218>
   28714:	ldr	r0, [sp, #48]	; 0x30
   28718:	str	r0, [sp, #16]
   2871c:	ldr	r0, [sp, #16]
   28720:	str	r0, [sp, #20]
   28724:	ldr	r0, [sp, #20]
   28728:	str	r0, [fp, #-28]	; 0xffffffe4
   2872c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28730:	str	r0, [fp, #-4]
   28734:	b	2891c <__assert_fail@plt+0x17418>
   28738:	b	285b4 <__assert_fail@plt+0x170b0>
   2873c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28740:	ldr	r0, [r0, #12]
   28744:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28748:	ldr	r1, [r1]
   2874c:	ldr	r0, [r0, r1, lsl #2]
   28750:	str	r0, [fp, #-44]	; 0xffffffd4
   28754:	ldr	r0, [fp, #-8]
   28758:	ldr	r0, [r0, #100]	; 0x64
   2875c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28760:	add	r0, r0, r1, lsl #2
   28764:	ldr	r0, [r0]
   28768:	movw	r1, #0
   2876c:	cmp	r0, r1
   28770:	beq	2884c <__assert_fail@plt+0x17348>
   28774:	ldr	r0, [fp, #-8]
   28778:	ldr	r0, [r0, #100]	; 0x64
   2877c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28780:	add	r0, r0, r1, lsl #2
   28784:	ldr	r0, [r0]
   28788:	add	r0, r0, #4
   2878c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28790:	bl	23104 <__assert_fail@plt+0x11c00>
   28794:	cmp	r0, #0
   28798:	beq	287a0 <__assert_fail@plt+0x1729c>
   2879c:	b	288fc <__assert_fail@plt+0x173f8>
   287a0:	ldr	r0, [fp, #-8]
   287a4:	ldr	r0, [r0, #100]	; 0x64
   287a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   287ac:	add	r0, r0, r1, lsl #2
   287b0:	ldr	r0, [r0]
   287b4:	add	r1, r0, #4
   287b8:	add	r0, sp, #36	; 0x24
   287bc:	bl	23030 <__assert_fail@plt+0x11b2c>
   287c0:	str	r0, [fp, #-28]	; 0xffffffe4
   287c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   287c8:	add	r0, sp, #36	; 0x24
   287cc:	bl	22c48 <__assert_fail@plt+0x11744>
   287d0:	and	r0, r0, #1
   287d4:	strb	r0, [sp, #35]	; 0x23
   287d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   287dc:	cmp	r0, #0
   287e0:	movw	r0, #1
   287e4:	str	r0, [sp, #12]
   287e8:	bne	287fc <__assert_fail@plt+0x172f8>
   287ec:	ldrb	r0, [sp, #35]	; 0x23
   287f0:	mvn	r1, #0
   287f4:	eor	r0, r0, r1
   287f8:	str	r0, [sp, #12]
   287fc:	ldr	r0, [sp, #12]
   28800:	tst	r0, #1
   28804:	beq	28848 <__assert_fail@plt+0x17344>
   28808:	ldr	r0, [sp, #44]	; 0x2c
   2880c:	bl	34c20 <__assert_fail@plt+0x2371c>
   28810:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28814:	cmp	r0, #0
   28818:	beq	28828 <__assert_fail@plt+0x17324>
   2881c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28820:	str	r0, [sp, #8]
   28824:	b	28834 <__assert_fail@plt+0x17330>
   28828:	movw	r0, #12
   2882c:	str	r0, [sp, #8]
   28830:	b	28834 <__assert_fail@plt+0x17330>
   28834:	ldr	r0, [sp, #8]
   28838:	str	r0, [fp, #-28]	; 0xffffffe4
   2883c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28840:	str	r0, [fp, #-4]
   28844:	b	2891c <__assert_fail@plt+0x17418>
   28848:	b	28878 <__assert_fail@plt+0x17374>
   2884c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28850:	add	r0, sp, #36	; 0x24
   28854:	bl	21d7c <__assert_fail@plt+0x10878>
   28858:	str	r0, [fp, #-28]	; 0xffffffe4
   2885c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28860:	cmp	r0, #0
   28864:	beq	28874 <__assert_fail@plt+0x17370>
   28868:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2886c:	str	r0, [fp, #-4]
   28870:	b	2891c <__assert_fail@plt+0x17418>
   28874:	b	28878 <__assert_fail@plt+0x17374>
   28878:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2887c:	sub	r0, fp, #28
   28880:	add	r2, sp, #36	; 0x24
   28884:	bl	28e04 <__assert_fail@plt+0x17900>
   28888:	ldr	r1, [fp, #-8]
   2888c:	ldr	r1, [r1, #100]	; 0x64
   28890:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28894:	str	r0, [r1, r2, lsl #2]
   28898:	ldr	r0, [sp, #44]	; 0x2c
   2889c:	bl	34c20 <__assert_fail@plt+0x2371c>
   288a0:	ldr	r0, [fp, #-8]
   288a4:	ldr	r0, [r0, #100]	; 0x64
   288a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   288ac:	add	r0, r0, r1, lsl #2
   288b0:	ldr	r0, [r0]
   288b4:	movw	r1, #0
   288b8:	cmp	r0, r1
   288bc:	movw	r0, #0
   288c0:	str	r0, [sp, #4]
   288c4:	bne	288dc <__assert_fail@plt+0x173d8>
   288c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   288cc:	cmp	r0, #0
   288d0:	movw	r0, #0
   288d4:	movne	r0, #1
   288d8:	str	r0, [sp, #4]
   288dc:	ldr	r0, [sp, #4]
   288e0:	tst	r0, #1
   288e4:	beq	288f4 <__assert_fail@plt+0x173f0>
   288e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   288ec:	str	r0, [fp, #-4]
   288f0:	b	2891c <__assert_fail@plt+0x17418>
   288f4:	b	288f8 <__assert_fail@plt+0x173f4>
   288f8:	b	288fc <__assert_fail@plt+0x173f8>
   288fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28900:	add	r1, r0, #24
   28904:	str	r1, [fp, #-36]	; 0xffffffdc
   28908:	ldrsb	r0, [r0, #20]
   2890c:	cmp	r0, #0
   28910:	bne	285d0 <__assert_fail@plt+0x170cc>
   28914:	movw	r0, #0
   28918:	str	r0, [fp, #-4]
   2891c:	ldr	r0, [fp, #-4]
   28920:	mov	sp, fp
   28924:	pop	{fp, pc}
   28928:	push	{fp, lr}
   2892c:	mov	fp, sp
   28930:	sub	sp, sp, #80	; 0x50
   28934:	str	r0, [fp, #-8]
   28938:	str	r1, [fp, #-12]
   2893c:	str	r2, [fp, #-16]
   28940:	str	r3, [fp, #-20]	; 0xffffffec
   28944:	ldr	r0, [fp, #-8]
   28948:	ldr	r0, [r0, #84]	; 0x54
   2894c:	str	r0, [fp, #-24]	; 0xffffffe8
   28950:	movw	r0, #0
   28954:	str	r0, [fp, #-36]	; 0xffffffdc
   28958:	add	r1, sp, #32
   2895c:	str	r0, [sp, #8]
   28960:	mov	r0, r1
   28964:	movw	r1, #0
   28968:	and	r1, r1, #255	; 0xff
   2896c:	movw	r2, #12
   28970:	bl	11420 <memset@plt>
   28974:	ldr	r0, [sp, #8]
   28978:	str	r0, [fp, #-32]	; 0xffffffe0
   2897c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28980:	ldr	r1, [fp, #-16]
   28984:	ldr	r1, [r1, #4]
   28988:	cmp	r0, r1
   2898c:	bge	28bf8 <__assert_fail@plt+0x176f4>
   28990:	mov	r0, #0
   28994:	str	r0, [sp, #28]
   28998:	ldr	r0, [fp, #-16]
   2899c:	ldr	r0, [r0, #8]
   289a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   289a4:	ldr	r0, [r0, r1, lsl #2]
   289a8:	str	r0, [sp, #24]
   289ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   289b0:	ldr	r0, [r0]
   289b4:	ldr	r1, [sp, #24]
   289b8:	add	r0, r0, r1, lsl #3
   289bc:	ldr	r0, [r0, #4]
   289c0:	and	r0, r0, #255	; 0xff
   289c4:	and	r0, r0, #8
   289c8:	cmp	r0, #0
   289cc:	bne	289d4 <__assert_fail@plt+0x174d0>
   289d0:	b	289d4 <__assert_fail@plt+0x174d0>
   289d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   289d8:	ldr	r0, [r0]
   289dc:	ldr	r1, [sp, #24]
   289e0:	add	r0, r0, r1, lsl #3
   289e4:	ldr	r0, [r0, #4]
   289e8:	lsr	r0, r0, #20
   289ec:	and	r0, r0, #1
   289f0:	cmp	r0, #0
   289f4:	beq	28b64 <__assert_fail@plt+0x17660>
   289f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   289fc:	ldr	r1, [sp, #24]
   28a00:	ldr	r2, [fp, #-8]
   28a04:	ldr	r3, [fp, #-12]
   28a08:	bl	2915c <__assert_fail@plt+0x17c58>
   28a0c:	str	r0, [sp, #28]
   28a10:	ldr	r0, [sp, #28]
   28a14:	cmp	r0, #1
   28a18:	ble	28b60 <__assert_fail@plt+0x1765c>
   28a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28a20:	ldr	r0, [r0, #12]
   28a24:	ldr	r1, [sp, #24]
   28a28:	ldr	r0, [r0, r1, lsl #2]
   28a2c:	str	r0, [sp, #16]
   28a30:	ldr	r0, [fp, #-12]
   28a34:	ldr	r1, [sp, #28]
   28a38:	add	r0, r0, r1
   28a3c:	str	r0, [sp, #12]
   28a40:	ldr	r0, [fp, #-8]
   28a44:	ldr	r0, [r0, #100]	; 0x64
   28a48:	ldr	r1, [sp, #12]
   28a4c:	add	r0, r0, r1, lsl #2
   28a50:	ldr	r0, [r0]
   28a54:	str	r0, [sp, #20]
   28a58:	movw	r0, #0
   28a5c:	str	r0, [sp, #36]	; 0x24
   28a60:	ldr	r1, [sp, #20]
   28a64:	cmp	r1, r0
   28a68:	beq	28aa4 <__assert_fail@plt+0x175a0>
   28a6c:	ldr	r0, [sp, #20]
   28a70:	add	r1, r0, #4
   28a74:	add	r0, sp, #32
   28a78:	bl	22758 <__assert_fail@plt+0x11254>
   28a7c:	str	r0, [fp, #-36]	; 0xffffffdc
   28a80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28a84:	cmp	r0, #0
   28a88:	beq	28aa0 <__assert_fail@plt+0x1759c>
   28a8c:	ldr	r0, [sp, #40]	; 0x28
   28a90:	bl	34c20 <__assert_fail@plt+0x2371c>
   28a94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28a98:	str	r0, [fp, #-4]
   28a9c:	b	28c08 <__assert_fail@plt+0x17704>
   28aa0:	b	28aa4 <__assert_fail@plt+0x175a0>
   28aa4:	ldr	r1, [sp, #16]
   28aa8:	add	r0, sp, #32
   28aac:	bl	22c48 <__assert_fail@plt+0x11744>
   28ab0:	and	r0, r0, #1
   28ab4:	strb	r0, [fp, #-25]	; 0xffffffe7
   28ab8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   28abc:	mvn	r1, #0
   28ac0:	eor	r0, r0, r1
   28ac4:	tst	r0, #1
   28ac8:	beq	28ae0 <__assert_fail@plt+0x175dc>
   28acc:	ldr	r0, [sp, #40]	; 0x28
   28ad0:	bl	34c20 <__assert_fail@plt+0x2371c>
   28ad4:	movw	r0, #12
   28ad8:	str	r0, [fp, #-4]
   28adc:	b	28c08 <__assert_fail@plt+0x17704>
   28ae0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28ae4:	sub	r0, fp, #36	; 0x24
   28ae8:	add	r2, sp, #32
   28aec:	bl	28e04 <__assert_fail@plt+0x17900>
   28af0:	ldr	r1, [fp, #-8]
   28af4:	ldr	r1, [r1, #100]	; 0x64
   28af8:	ldr	r2, [sp, #12]
   28afc:	str	r0, [r1, r2, lsl #2]
   28b00:	ldr	r0, [fp, #-8]
   28b04:	ldr	r0, [r0, #100]	; 0x64
   28b08:	ldr	r1, [sp, #12]
   28b0c:	add	r0, r0, r1, lsl #2
   28b10:	ldr	r0, [r0]
   28b14:	movw	r1, #0
   28b18:	cmp	r0, r1
   28b1c:	movw	r0, #0
   28b20:	str	r0, [sp, #4]
   28b24:	bne	28b3c <__assert_fail@plt+0x17638>
   28b28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28b2c:	cmp	r0, #0
   28b30:	movw	r0, #0
   28b34:	movne	r0, #1
   28b38:	str	r0, [sp, #4]
   28b3c:	ldr	r0, [sp, #4]
   28b40:	tst	r0, #1
   28b44:	beq	28b5c <__assert_fail@plt+0x17658>
   28b48:	ldr	r0, [sp, #40]	; 0x28
   28b4c:	bl	34c20 <__assert_fail@plt+0x2371c>
   28b50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28b54:	str	r0, [fp, #-4]
   28b58:	b	28c08 <__assert_fail@plt+0x17704>
   28b5c:	b	28b60 <__assert_fail@plt+0x1765c>
   28b60:	b	28b64 <__assert_fail@plt+0x17660>
   28b64:	ldr	r0, [sp, #28]
   28b68:	cmp	r0, #0
   28b6c:	bne	28b94 <__assert_fail@plt+0x17690>
   28b70:	ldr	r0, [fp, #-8]
   28b74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28b78:	ldr	r1, [r1]
   28b7c:	ldr	r2, [sp, #24]
   28b80:	add	r1, r1, r2, lsl #3
   28b84:	ldr	r2, [fp, #-12]
   28b88:	bl	29744 <__assert_fail@plt+0x18240>
   28b8c:	tst	r0, #1
   28b90:	beq	28be4 <__assert_fail@plt+0x176e0>
   28b94:	ldr	r0, [fp, #-20]	; 0xffffffec
   28b98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28b9c:	ldr	r1, [r1, #12]
   28ba0:	ldr	r2, [sp, #24]
   28ba4:	add	r1, r1, r2, lsl #2
   28ba8:	ldr	r1, [r1]
   28bac:	bl	22c48 <__assert_fail@plt+0x11744>
   28bb0:	and	r0, r0, #1
   28bb4:	strb	r0, [fp, #-25]	; 0xffffffe7
   28bb8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   28bbc:	mvn	r1, #0
   28bc0:	eor	r0, r0, r1
   28bc4:	tst	r0, #1
   28bc8:	beq	28be0 <__assert_fail@plt+0x176dc>
   28bcc:	ldr	r0, [sp, #40]	; 0x28
   28bd0:	bl	34c20 <__assert_fail@plt+0x2371c>
   28bd4:	movw	r0, #12
   28bd8:	str	r0, [fp, #-4]
   28bdc:	b	28c08 <__assert_fail@plt+0x17704>
   28be0:	b	28be4 <__assert_fail@plt+0x176e0>
   28be4:	b	28be8 <__assert_fail@plt+0x176e4>
   28be8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28bec:	add	r0, r0, #1
   28bf0:	str	r0, [fp, #-32]	; 0xffffffe0
   28bf4:	b	2897c <__assert_fail@plt+0x17478>
   28bf8:	ldr	r0, [sp, #40]	; 0x28
   28bfc:	bl	34c20 <__assert_fail@plt+0x2371c>
   28c00:	movw	r0, #0
   28c04:	str	r0, [fp, #-4]
   28c08:	ldr	r0, [fp, #-4]
   28c0c:	mov	sp, fp
   28c10:	pop	{fp, pc}
   28c14:	push	{fp, lr}
   28c18:	mov	fp, sp
   28c1c:	sub	sp, sp, #40	; 0x28
   28c20:	ldr	ip, [fp, #8]
   28c24:	str	r0, [fp, #-8]
   28c28:	str	r1, [fp, #-12]
   28c2c:	str	r2, [fp, #-16]
   28c30:	str	r3, [sp, #20]
   28c34:	ldr	r0, [fp, #-16]
   28c38:	str	r0, [sp, #16]
   28c3c:	ldr	r0, [fp, #-12]
   28c40:	ldr	r1, [sp, #16]
   28c44:	bl	23104 <__assert_fail@plt+0x11c00>
   28c48:	cmp	r0, #0
   28c4c:	movw	r0, #0
   28c50:	movne	r0, #1
   28c54:	mvn	r1, #0
   28c58:	eor	r0, r0, r1
   28c5c:	tst	r0, #1
   28c60:	beq	28df0 <__assert_fail@plt+0x178ec>
   28c64:	ldr	r0, [fp, #-8]
   28c68:	ldr	r0, [r0]
   28c6c:	ldr	r1, [sp, #16]
   28c70:	add	r0, r0, r1, lsl #3
   28c74:	ldr	r0, [r0, #4]
   28c78:	and	r0, r0, #255	; 0xff
   28c7c:	ldr	r1, [fp, #8]
   28c80:	cmp	r0, r1
   28c84:	bne	28cf0 <__assert_fail@plt+0x177ec>
   28c88:	ldr	r0, [fp, #-8]
   28c8c:	ldr	r0, [r0]
   28c90:	ldr	r1, [sp, #16]
   28c94:	add	r0, r0, r1, lsl #3
   28c98:	ldr	r0, [r0]
   28c9c:	ldr	r1, [sp, #20]
   28ca0:	cmp	r0, r1
   28ca4:	bne	28cf0 <__assert_fail@plt+0x177ec>
   28ca8:	ldr	r0, [fp, #8]
   28cac:	cmp	r0, #9
   28cb0:	bne	28cec <__assert_fail@plt+0x177e8>
   28cb4:	ldr	r0, [fp, #-12]
   28cb8:	ldr	r1, [sp, #16]
   28cbc:	bl	22c48 <__assert_fail@plt+0x11744>
   28cc0:	and	r0, r0, #1
   28cc4:	strb	r0, [sp, #15]
   28cc8:	ldrb	r0, [sp, #15]
   28ccc:	mvn	r1, #0
   28cd0:	eor	r0, r0, r1
   28cd4:	tst	r0, #1
   28cd8:	beq	28ce8 <__assert_fail@plt+0x177e4>
   28cdc:	movw	r0, #12
   28ce0:	str	r0, [fp, #-4]
   28ce4:	b	28df8 <__assert_fail@plt+0x178f4>
   28ce8:	b	28cec <__assert_fail@plt+0x177e8>
   28cec:	b	28df0 <__assert_fail@plt+0x178ec>
   28cf0:	ldr	r0, [fp, #-12]
   28cf4:	ldr	r1, [sp, #16]
   28cf8:	bl	22c48 <__assert_fail@plt+0x11744>
   28cfc:	and	r0, r0, #1
   28d00:	strb	r0, [sp, #15]
   28d04:	ldrb	r0, [sp, #15]
   28d08:	mvn	r1, #0
   28d0c:	eor	r0, r0, r1
   28d10:	tst	r0, #1
   28d14:	beq	28d24 <__assert_fail@plt+0x17820>
   28d18:	movw	r0, #12
   28d1c:	str	r0, [fp, #-4]
   28d20:	b	28df8 <__assert_fail@plt+0x178f4>
   28d24:	ldr	r0, [fp, #-8]
   28d28:	ldr	r0, [r0, #20]
   28d2c:	ldr	r1, [sp, #16]
   28d30:	movw	r2, #12
   28d34:	mul	r1, r1, r2
   28d38:	add	r0, r0, r1
   28d3c:	ldr	r0, [r0, #4]
   28d40:	cmp	r0, #0
   28d44:	bne	28d4c <__assert_fail@plt+0x17848>
   28d48:	b	28df0 <__assert_fail@plt+0x178ec>
   28d4c:	ldr	r0, [fp, #-8]
   28d50:	ldr	r0, [r0, #20]
   28d54:	ldr	r1, [sp, #16]
   28d58:	movw	r2, #12
   28d5c:	mul	r1, r1, r2
   28d60:	add	r0, r0, r1
   28d64:	ldr	r0, [r0, #4]
   28d68:	cmp	r0, #2
   28d6c:	bne	28dc8 <__assert_fail@plt+0x178c4>
   28d70:	ldr	r0, [fp, #-8]
   28d74:	ldr	r1, [fp, #-12]
   28d78:	ldr	r2, [fp, #-8]
   28d7c:	ldr	r2, [r2, #20]
   28d80:	ldr	r3, [sp, #16]
   28d84:	movw	ip, #12
   28d88:	mul	r3, r3, ip
   28d8c:	add	r2, r2, r3
   28d90:	ldr	r2, [r2, #8]
   28d94:	ldr	r2, [r2, #4]
   28d98:	ldr	r3, [sp, #20]
   28d9c:	ldr	ip, [fp, #8]
   28da0:	str	ip, [sp]
   28da4:	bl	28c14 <__assert_fail@plt+0x17710>
   28da8:	str	r0, [sp, #8]
   28dac:	ldr	r0, [sp, #8]
   28db0:	cmp	r0, #0
   28db4:	beq	28dc4 <__assert_fail@plt+0x178c0>
   28db8:	ldr	r0, [sp, #8]
   28dbc:	str	r0, [fp, #-4]
   28dc0:	b	28df8 <__assert_fail@plt+0x178f4>
   28dc4:	b	28dc8 <__assert_fail@plt+0x178c4>
   28dc8:	ldr	r0, [fp, #-8]
   28dcc:	ldr	r0, [r0, #20]
   28dd0:	ldr	r1, [sp, #16]
   28dd4:	movw	r2, #12
   28dd8:	mul	r1, r1, r2
   28ddc:	add	r0, r0, r1
   28de0:	ldr	r0, [r0, #8]
   28de4:	ldr	r0, [r0]
   28de8:	str	r0, [sp, #16]
   28dec:	b	28c3c <__assert_fail@plt+0x17738>
   28df0:	movw	r0, #0
   28df4:	str	r0, [fp, #-4]
   28df8:	ldr	r0, [fp, #-4]
   28dfc:	mov	sp, fp
   28e00:	pop	{fp, pc}
   28e04:	push	{fp, lr}
   28e08:	mov	fp, sp
   28e0c:	sub	sp, sp, #40	; 0x28
   28e10:	str	r0, [fp, #-8]
   28e14:	str	r1, [fp, #-12]
   28e18:	str	r2, [fp, #-16]
   28e1c:	ldr	r0, [fp, #-16]
   28e20:	ldr	r0, [r0, #4]
   28e24:	cmp	r0, #0
   28e28:	bne	28e40 <__assert_fail@plt+0x1793c>
   28e2c:	ldr	r0, [fp, #-8]
   28e30:	movw	r1, #0
   28e34:	str	r1, [r0]
   28e38:	str	r1, [fp, #-4]
   28e3c:	b	28f34 <__assert_fail@plt+0x17a30>
   28e40:	ldr	r0, [fp, #-16]
   28e44:	movw	r1, #0
   28e48:	bl	23350 <__assert_fail@plt+0x11e4c>
   28e4c:	str	r0, [sp, #20]
   28e50:	ldr	r0, [fp, #-12]
   28e54:	ldr	r0, [r0, #32]
   28e58:	ldr	r1, [sp, #20]
   28e5c:	ldr	r2, [fp, #-12]
   28e60:	ldr	r2, [r2, #68]	; 0x44
   28e64:	and	r1, r1, r2
   28e68:	movw	r2, #12
   28e6c:	mul	r1, r1, r2
   28e70:	add	r0, r0, r1
   28e74:	str	r0, [sp, #12]
   28e78:	movw	r0, #0
   28e7c:	str	r0, [sp, #8]
   28e80:	ldr	r0, [sp, #8]
   28e84:	ldr	r1, [sp, #12]
   28e88:	ldr	r1, [r1]
   28e8c:	cmp	r0, r1
   28e90:	bge	28efc <__assert_fail@plt+0x179f8>
   28e94:	ldr	r0, [sp, #12]
   28e98:	ldr	r0, [r0, #8]
   28e9c:	ldr	r1, [sp, #8]
   28ea0:	add	r0, r0, r1, lsl #2
   28ea4:	ldr	r0, [r0]
   28ea8:	str	r0, [sp, #4]
   28eac:	ldr	r0, [sp, #20]
   28eb0:	ldr	r1, [sp, #4]
   28eb4:	ldr	r1, [r1]
   28eb8:	cmp	r0, r1
   28ebc:	beq	28ec4 <__assert_fail@plt+0x179c0>
   28ec0:	b	28eec <__assert_fail@plt+0x179e8>
   28ec4:	ldr	r0, [sp, #4]
   28ec8:	add	r0, r0, #4
   28ecc:	ldr	r1, [fp, #-16]
   28ed0:	bl	233c8 <__assert_fail@plt+0x11ec4>
   28ed4:	tst	r0, #1
   28ed8:	beq	28ee8 <__assert_fail@plt+0x179e4>
   28edc:	ldr	r0, [sp, #4]
   28ee0:	str	r0, [fp, #-4]
   28ee4:	b	28f34 <__assert_fail@plt+0x17a30>
   28ee8:	b	28eec <__assert_fail@plt+0x179e8>
   28eec:	ldr	r0, [sp, #8]
   28ef0:	add	r0, r0, #1
   28ef4:	str	r0, [sp, #8]
   28ef8:	b	28e80 <__assert_fail@plt+0x1797c>
   28efc:	ldr	r0, [fp, #-12]
   28f00:	ldr	r1, [fp, #-16]
   28f04:	ldr	r2, [sp, #20]
   28f08:	bl	28f40 <__assert_fail@plt+0x17a3c>
   28f0c:	str	r0, [sp, #16]
   28f10:	ldr	r0, [sp, #16]
   28f14:	movw	r1, #0
   28f18:	cmp	r0, r1
   28f1c:	bne	28f2c <__assert_fail@plt+0x17a28>
   28f20:	ldr	r0, [fp, #-8]
   28f24:	movw	r1, #12
   28f28:	str	r1, [r0]
   28f2c:	ldr	r0, [sp, #16]
   28f30:	str	r0, [fp, #-4]
   28f34:	ldr	r0, [fp, #-4]
   28f38:	mov	sp, fp
   28f3c:	pop	{fp, pc}
   28f40:	push	{fp, lr}
   28f44:	mov	fp, sp
   28f48:	sub	sp, sp, #40	; 0x28
   28f4c:	str	r0, [fp, #-8]
   28f50:	str	r1, [fp, #-12]
   28f54:	str	r2, [fp, #-16]
   28f58:	movw	r0, #56	; 0x38
   28f5c:	movw	r1, #1
   28f60:	bl	334b0 <__assert_fail@plt+0x21fac>
   28f64:	str	r0, [sp, #12]
   28f68:	ldr	r0, [sp, #12]
   28f6c:	movw	r1, #0
   28f70:	cmp	r0, r1
   28f74:	bne	28f84 <__assert_fail@plt+0x17a80>
   28f78:	movw	r0, #0
   28f7c:	str	r0, [fp, #-4]
   28f80:	b	29150 <__assert_fail@plt+0x17c4c>
   28f84:	ldr	r0, [sp, #12]
   28f88:	add	r0, r0, #4
   28f8c:	ldr	r1, [fp, #-12]
   28f90:	bl	23030 <__assert_fail@plt+0x11b2c>
   28f94:	str	r0, [sp, #16]
   28f98:	ldr	r0, [sp, #16]
   28f9c:	cmp	r0, #0
   28fa0:	beq	28fb8 <__assert_fail@plt+0x17ab4>
   28fa4:	ldr	r0, [sp, #12]
   28fa8:	bl	34c20 <__assert_fail@plt+0x2371c>
   28fac:	movw	r0, #0
   28fb0:	str	r0, [fp, #-4]
   28fb4:	b	29150 <__assert_fail@plt+0x17c4c>
   28fb8:	ldr	r0, [sp, #12]
   28fbc:	add	r0, r0, #4
   28fc0:	ldr	r1, [sp, #12]
   28fc4:	str	r0, [r1, #40]	; 0x28
   28fc8:	movw	r0, #0
   28fcc:	str	r0, [sp, #20]
   28fd0:	ldr	r0, [sp, #20]
   28fd4:	ldr	r1, [fp, #-12]
   28fd8:	ldr	r1, [r1, #4]
   28fdc:	cmp	r0, r1
   28fe0:	bge	29118 <__assert_fail@plt+0x17c14>
   28fe4:	ldr	r0, [fp, #-8]
   28fe8:	ldr	r0, [r0]
   28fec:	ldr	r1, [fp, #-12]
   28ff0:	ldr	r1, [r1, #8]
   28ff4:	ldr	r2, [sp, #20]
   28ff8:	ldr	r1, [r1, r2, lsl #2]
   28ffc:	add	r0, r0, r1, lsl #3
   29000:	str	r0, [sp, #8]
   29004:	ldr	r0, [sp, #8]
   29008:	ldr	r0, [r0, #4]
   2900c:	and	r0, r0, #255	; 0xff
   29010:	str	r0, [sp, #4]
   29014:	ldr	r0, [sp, #4]
   29018:	cmp	r0, #1
   2901c:	bne	29040 <__assert_fail@plt+0x17b3c>
   29020:	ldr	r0, [sp, #8]
   29024:	ldr	r0, [r0, #4]
   29028:	lsr	r0, r0, #8
   2902c:	movw	r1, #1023	; 0x3ff
   29030:	and	r0, r0, r1
   29034:	cmp	r0, #0
   29038:	bne	29040 <__assert_fail@plt+0x17b3c>
   2903c:	b	29108 <__assert_fail@plt+0x17c04>
   29040:	ldr	r0, [sp, #8]
   29044:	ldr	r0, [r0, #4]
   29048:	ldr	r1, [sp, #12]
   2904c:	ldrb	r2, [r1, #52]	; 0x34
   29050:	lsr	r3, r2, #5
   29054:	orr	r0, r3, r0, lsr #20
   29058:	and	r0, r0, #1
   2905c:	lsl	r0, r0, #5
   29060:	bic	r2, r2, #32
   29064:	orr	r0, r2, r0
   29068:	strb	r0, [r1, #52]	; 0x34
   2906c:	ldr	r0, [sp, #4]
   29070:	cmp	r0, #2
   29074:	bne	29094 <__assert_fail@plt+0x17b90>
   29078:	ldr	r0, [sp, #12]
   2907c:	ldrb	r1, [r0, #52]	; 0x34
   29080:	bic	r1, r1, #16
   29084:	movw	r2, #16
   29088:	orr	r1, r1, r2
   2908c:	strb	r1, [r0, #52]	; 0x34
   29090:	b	29104 <__assert_fail@plt+0x17c00>
   29094:	ldr	r0, [sp, #4]
   29098:	cmp	r0, #4
   2909c:	bne	290bc <__assert_fail@plt+0x17bb8>
   290a0:	ldr	r0, [sp, #12]
   290a4:	ldrb	r1, [r0, #52]	; 0x34
   290a8:	bic	r1, r1, #64	; 0x40
   290ac:	movw	r2, #64	; 0x40
   290b0:	orr	r1, r1, r2
   290b4:	strb	r1, [r0, #52]	; 0x34
   290b8:	b	29100 <__assert_fail@plt+0x17bfc>
   290bc:	ldr	r0, [sp, #4]
   290c0:	cmp	r0, #12
   290c4:	beq	290e4 <__assert_fail@plt+0x17be0>
   290c8:	ldr	r0, [sp, #8]
   290cc:	ldr	r0, [r0, #4]
   290d0:	lsr	r0, r0, #8
   290d4:	movw	r1, #1023	; 0x3ff
   290d8:	and	r0, r0, r1
   290dc:	cmp	r0, #0
   290e0:	beq	290fc <__assert_fail@plt+0x17bf8>
   290e4:	ldr	r0, [sp, #12]
   290e8:	ldrb	r1, [r0, #52]	; 0x34
   290ec:	and	r1, r1, #127	; 0x7f
   290f0:	movw	r2, #128	; 0x80
   290f4:	orr	r1, r1, r2
   290f8:	strb	r1, [r0, #52]	; 0x34
   290fc:	b	29100 <__assert_fail@plt+0x17bfc>
   29100:	b	29104 <__assert_fail@plt+0x17c00>
   29104:	b	29108 <__assert_fail@plt+0x17c04>
   29108:	ldr	r0, [sp, #20]
   2910c:	add	r0, r0, #1
   29110:	str	r0, [sp, #20]
   29114:	b	28fd0 <__assert_fail@plt+0x17acc>
   29118:	ldr	r0, [fp, #-8]
   2911c:	ldr	r1, [sp, #12]
   29120:	ldr	r2, [fp, #-16]
   29124:	bl	23878 <__assert_fail@plt+0x12374>
   29128:	str	r0, [sp, #16]
   2912c:	ldr	r0, [sp, #16]
   29130:	cmp	r0, #0
   29134:	beq	29148 <__assert_fail@plt+0x17c44>
   29138:	ldr	r0, [sp, #12]
   2913c:	bl	18ad8 <__assert_fail@plt+0x75d4>
   29140:	movw	r0, #0
   29144:	str	r0, [sp, #12]
   29148:	ldr	r0, [sp, #12]
   2914c:	str	r0, [fp, #-4]
   29150:	ldr	r0, [fp, #-4]
   29154:	mov	sp, fp
   29158:	pop	{fp, pc}
   2915c:	push	{fp, lr}
   29160:	mov	fp, sp
   29164:	sub	sp, sp, #72	; 0x48
   29168:	str	r0, [fp, #-8]
   2916c:	str	r1, [fp, #-12]
   29170:	str	r2, [fp, #-16]
   29174:	str	r3, [fp, #-20]	; 0xffffffec
   29178:	ldr	r0, [fp, #-8]
   2917c:	ldr	r0, [r0]
   29180:	ldr	r1, [fp, #-12]
   29184:	add	r0, r0, r1, lsl #3
   29188:	str	r0, [fp, #-24]	; 0xffffffe8
   2918c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29190:	ldr	r0, [r0, #4]
   29194:	and	r0, r0, #255	; 0xff
   29198:	cmp	r0, #7
   2919c:	bne	2940c <__assert_fail@plt+0x17f08>
   291a0:	ldr	r0, [fp, #-16]
   291a4:	ldr	r0, [r0, #4]
   291a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   291ac:	add	r0, r0, r1
   291b0:	ldrb	r0, [r0]
   291b4:	strb	r0, [sp, #35]	; 0x23
   291b8:	ldrb	r0, [sp, #35]	; 0x23
   291bc:	cmp	r0, #194	; 0xc2
   291c0:	bge	291d0 <__assert_fail@plt+0x17ccc>
   291c4:	movw	r0, #0
   291c8:	str	r0, [fp, #-4]
   291cc:	b	29738 <__assert_fail@plt+0x18234>
   291d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   291d4:	add	r0, r0, #2
   291d8:	ldr	r1, [fp, #-16]
   291dc:	ldr	r1, [r1, #48]	; 0x30
   291e0:	cmp	r0, r1
   291e4:	ble	291f4 <__assert_fail@plt+0x17cf0>
   291e8:	movw	r0, #0
   291ec:	str	r0, [fp, #-4]
   291f0:	b	29738 <__assert_fail@plt+0x18234>
   291f4:	ldr	r0, [fp, #-16]
   291f8:	ldr	r0, [r0, #4]
   291fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   29200:	add	r1, r1, #1
   29204:	add	r0, r0, r1
   29208:	ldrb	r0, [r0]
   2920c:	strb	r0, [sp, #34]	; 0x22
   29210:	ldrb	r0, [sp, #35]	; 0x23
   29214:	cmp	r0, #224	; 0xe0
   29218:	bge	2925c <__assert_fail@plt+0x17d58>
   2921c:	ldrb	r0, [sp, #34]	; 0x22
   29220:	cmp	r0, #128	; 0x80
   29224:	movw	r0, #1
   29228:	str	r0, [sp, #12]
   2922c:	blt	29244 <__assert_fail@plt+0x17d40>
   29230:	ldrb	r0, [sp, #34]	; 0x22
   29234:	cmp	r0, #191	; 0xbf
   29238:	movw	r0, #0
   2923c:	movgt	r0, #1
   29240:	str	r0, [sp, #12]
   29244:	ldr	r0, [sp, #12]
   29248:	tst	r0, #1
   2924c:	movw	r0, #0
   29250:	moveq	r0, #2
   29254:	str	r0, [fp, #-4]
   29258:	b	29738 <__assert_fail@plt+0x18234>
   2925c:	ldrb	r0, [sp, #35]	; 0x23
   29260:	cmp	r0, #240	; 0xf0
   29264:	bge	29298 <__assert_fail@plt+0x17d94>
   29268:	movw	r0, #3
   2926c:	str	r0, [fp, #-28]	; 0xffffffe4
   29270:	ldrb	r0, [sp, #35]	; 0x23
   29274:	cmp	r0, #224	; 0xe0
   29278:	bne	29294 <__assert_fail@plt+0x17d90>
   2927c:	ldrb	r0, [sp, #34]	; 0x22
   29280:	cmp	r0, #160	; 0xa0
   29284:	bge	29294 <__assert_fail@plt+0x17d90>
   29288:	movw	r0, #0
   2928c:	str	r0, [fp, #-4]
   29290:	b	29738 <__assert_fail@plt+0x18234>
   29294:	b	29364 <__assert_fail@plt+0x17e60>
   29298:	ldrb	r0, [sp, #35]	; 0x23
   2929c:	cmp	r0, #248	; 0xf8
   292a0:	bge	292d4 <__assert_fail@plt+0x17dd0>
   292a4:	movw	r0, #4
   292a8:	str	r0, [fp, #-28]	; 0xffffffe4
   292ac:	ldrb	r0, [sp, #35]	; 0x23
   292b0:	cmp	r0, #240	; 0xf0
   292b4:	bne	292d0 <__assert_fail@plt+0x17dcc>
   292b8:	ldrb	r0, [sp, #34]	; 0x22
   292bc:	cmp	r0, #144	; 0x90
   292c0:	bge	292d0 <__assert_fail@plt+0x17dcc>
   292c4:	movw	r0, #0
   292c8:	str	r0, [fp, #-4]
   292cc:	b	29738 <__assert_fail@plt+0x18234>
   292d0:	b	29360 <__assert_fail@plt+0x17e5c>
   292d4:	ldrb	r0, [sp, #35]	; 0x23
   292d8:	cmp	r0, #252	; 0xfc
   292dc:	bge	29310 <__assert_fail@plt+0x17e0c>
   292e0:	movw	r0, #5
   292e4:	str	r0, [fp, #-28]	; 0xffffffe4
   292e8:	ldrb	r0, [sp, #35]	; 0x23
   292ec:	cmp	r0, #248	; 0xf8
   292f0:	bne	2930c <__assert_fail@plt+0x17e08>
   292f4:	ldrb	r0, [sp, #34]	; 0x22
   292f8:	cmp	r0, #136	; 0x88
   292fc:	bge	2930c <__assert_fail@plt+0x17e08>
   29300:	movw	r0, #0
   29304:	str	r0, [fp, #-4]
   29308:	b	29738 <__assert_fail@plt+0x18234>
   2930c:	b	2935c <__assert_fail@plt+0x17e58>
   29310:	ldrb	r0, [sp, #35]	; 0x23
   29314:	cmp	r0, #254	; 0xfe
   29318:	bge	2934c <__assert_fail@plt+0x17e48>
   2931c:	movw	r0, #6
   29320:	str	r0, [fp, #-28]	; 0xffffffe4
   29324:	ldrb	r0, [sp, #35]	; 0x23
   29328:	cmp	r0, #252	; 0xfc
   2932c:	bne	29348 <__assert_fail@plt+0x17e44>
   29330:	ldrb	r0, [sp, #34]	; 0x22
   29334:	cmp	r0, #132	; 0x84
   29338:	bge	29348 <__assert_fail@plt+0x17e44>
   2933c:	movw	r0, #0
   29340:	str	r0, [fp, #-4]
   29344:	b	29738 <__assert_fail@plt+0x18234>
   29348:	b	29358 <__assert_fail@plt+0x17e54>
   2934c:	movw	r0, #0
   29350:	str	r0, [fp, #-4]
   29354:	b	29738 <__assert_fail@plt+0x18234>
   29358:	b	2935c <__assert_fail@plt+0x17e58>
   2935c:	b	29360 <__assert_fail@plt+0x17e5c>
   29360:	b	29364 <__assert_fail@plt+0x17e60>
   29364:	b	29368 <__assert_fail@plt+0x17e64>
   29368:	ldr	r0, [fp, #-20]	; 0xffffffec
   2936c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29370:	add	r0, r0, r1
   29374:	ldr	r1, [fp, #-16]
   29378:	ldr	r1, [r1, #48]	; 0x30
   2937c:	cmp	r0, r1
   29380:	ble	29390 <__assert_fail@plt+0x17e8c>
   29384:	movw	r0, #0
   29388:	str	r0, [fp, #-4]
   2938c:	b	29738 <__assert_fail@plt+0x18234>
   29390:	movw	r0, #1
   29394:	str	r0, [sp, #36]	; 0x24
   29398:	ldr	r0, [sp, #36]	; 0x24
   2939c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   293a0:	cmp	r0, r1
   293a4:	bge	29400 <__assert_fail@plt+0x17efc>
   293a8:	ldr	r0, [fp, #-16]
   293ac:	ldr	r0, [r0, #4]
   293b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   293b4:	ldr	r2, [sp, #36]	; 0x24
   293b8:	add	r1, r1, r2
   293bc:	add	r0, r0, r1
   293c0:	ldrb	r0, [r0]
   293c4:	strb	r0, [sp, #34]	; 0x22
   293c8:	ldrb	r0, [sp, #34]	; 0x22
   293cc:	cmp	r0, #128	; 0x80
   293d0:	blt	293e0 <__assert_fail@plt+0x17edc>
   293d4:	ldrb	r0, [sp, #34]	; 0x22
   293d8:	cmp	r0, #191	; 0xbf
   293dc:	ble	293ec <__assert_fail@plt+0x17ee8>
   293e0:	movw	r0, #0
   293e4:	str	r0, [fp, #-4]
   293e8:	b	29738 <__assert_fail@plt+0x18234>
   293ec:	b	293f0 <__assert_fail@plt+0x17eec>
   293f0:	ldr	r0, [sp, #36]	; 0x24
   293f4:	add	r0, r0, #1
   293f8:	str	r0, [sp, #36]	; 0x24
   293fc:	b	29398 <__assert_fail@plt+0x17e94>
   29400:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29404:	str	r0, [fp, #-4]
   29408:	b	29738 <__assert_fail@plt+0x18234>
   2940c:	ldr	r0, [fp, #-16]
   29410:	ldr	r1, [fp, #-20]	; 0xffffffec
   29414:	bl	204ec <__assert_fail@plt+0xefe8>
   29418:	str	r0, [fp, #-28]	; 0xffffffe4
   2941c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29420:	ldr	r0, [r0, #4]
   29424:	and	r0, r0, #255	; 0xff
   29428:	cmp	r0, #5
   2942c:	bne	294c0 <__assert_fail@plt+0x17fbc>
   29430:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29434:	cmp	r0, #1
   29438:	bgt	29448 <__assert_fail@plt+0x17f44>
   2943c:	movw	r0, #0
   29440:	str	r0, [fp, #-4]
   29444:	b	29738 <__assert_fail@plt+0x18234>
   29448:	ldr	r0, [fp, #-8]
   2944c:	ldr	r0, [r0, #128]	; 0x80
   29450:	and	r0, r0, #64	; 0x40
   29454:	cmp	r0, #0
   29458:	bne	29478 <__assert_fail@plt+0x17f74>
   2945c:	ldr	r0, [fp, #-16]
   29460:	ldr	r0, [r0, #4]
   29464:	ldr	r1, [fp, #-20]	; 0xffffffec
   29468:	add	r0, r0, r1
   2946c:	ldrb	r0, [r0]
   29470:	cmp	r0, #10
   29474:	beq	294a8 <__assert_fail@plt+0x17fa4>
   29478:	ldr	r0, [fp, #-8]
   2947c:	ldr	r0, [r0, #128]	; 0x80
   29480:	and	r0, r0, #128	; 0x80
   29484:	cmp	r0, #0
   29488:	beq	294b4 <__assert_fail@plt+0x17fb0>
   2948c:	ldr	r0, [fp, #-16]
   29490:	ldr	r0, [r0, #4]
   29494:	ldr	r1, [fp, #-20]	; 0xffffffec
   29498:	add	r0, r0, r1
   2949c:	ldrb	r0, [r0]
   294a0:	cmp	r0, #0
   294a4:	bne	294b4 <__assert_fail@plt+0x17fb0>
   294a8:	movw	r0, #0
   294ac:	str	r0, [fp, #-4]
   294b0:	b	29738 <__assert_fail@plt+0x18234>
   294b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   294b8:	str	r0, [fp, #-4]
   294bc:	b	29738 <__assert_fail@plt+0x18234>
   294c0:	ldr	r0, [fp, #-16]
   294c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   294c8:	bl	299b8 <__assert_fail@plt+0x184b4>
   294cc:	str	r0, [fp, #-32]	; 0xffffffe0
   294d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   294d4:	cmp	r0, #1
   294d8:	bgt	294e8 <__assert_fail@plt+0x17fe4>
   294dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   294e0:	cmp	r0, #1
   294e4:	ble	294f4 <__assert_fail@plt+0x17ff0>
   294e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   294ec:	cmp	r0, #0
   294f0:	bne	29500 <__assert_fail@plt+0x17ffc>
   294f4:	movw	r0, #0
   294f8:	str	r0, [fp, #-4]
   294fc:	b	29738 <__assert_fail@plt+0x18234>
   29500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29504:	ldr	r0, [r0, #4]
   29508:	and	r0, r0, #255	; 0xff
   2950c:	cmp	r0, #6
   29510:	bne	29730 <__assert_fail@plt+0x1822c>
   29514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29518:	ldr	r0, [r0]
   2951c:	str	r0, [sp, #28]
   29520:	movw	r0, #0
   29524:	str	r0, [sp, #24]
   29528:	ldr	r0, [sp, #28]
   2952c:	ldr	r0, [r0, #32]
   29530:	cmp	r0, #0
   29534:	bne	29558 <__assert_fail@plt+0x18054>
   29538:	ldr	r0, [sp, #28]
   2953c:	ldr	r0, [r0, #36]	; 0x24
   29540:	cmp	r0, #0
   29544:	bne	29558 <__assert_fail@plt+0x18054>
   29548:	ldr	r0, [sp, #28]
   2954c:	ldr	r0, [r0, #20]
   29550:	cmp	r0, #0
   29554:	beq	2956c <__assert_fail@plt+0x18068>
   29558:	ldr	r0, [fp, #-16]
   2955c:	ldr	r1, [fp, #-20]	; 0xffffffec
   29560:	bl	1c638 <__assert_fail@plt+0xb134>
   29564:	str	r0, [sp, #8]
   29568:	b	29578 <__assert_fail@plt+0x18074>
   2956c:	movw	r0, #0
   29570:	str	r0, [sp, #8]
   29574:	b	29578 <__assert_fail@plt+0x18074>
   29578:	ldr	r0, [sp, #8]
   2957c:	str	r0, [sp, #20]
   29580:	movw	r0, #0
   29584:	str	r0, [sp, #36]	; 0x24
   29588:	ldr	r0, [sp, #36]	; 0x24
   2958c:	ldr	r1, [sp, #28]
   29590:	ldr	r1, [r1, #20]
   29594:	cmp	r0, r1
   29598:	bge	295dc <__assert_fail@plt+0x180d8>
   2959c:	ldr	r0, [sp, #20]
   295a0:	ldr	r1, [sp, #28]
   295a4:	ldr	r1, [r1]
   295a8:	ldr	r2, [sp, #36]	; 0x24
   295ac:	add	r1, r1, r2, lsl #2
   295b0:	ldr	r1, [r1]
   295b4:	cmp	r0, r1
   295b8:	bne	295c8 <__assert_fail@plt+0x180c4>
   295bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   295c0:	str	r0, [sp, #24]
   295c4:	b	296c4 <__assert_fail@plt+0x181c0>
   295c8:	b	295cc <__assert_fail@plt+0x180c8>
   295cc:	ldr	r0, [sp, #36]	; 0x24
   295d0:	add	r0, r0, #1
   295d4:	str	r0, [sp, #36]	; 0x24
   295d8:	b	29588 <__assert_fail@plt+0x18084>
   295dc:	movw	r0, #0
   295e0:	str	r0, [sp, #36]	; 0x24
   295e4:	ldr	r0, [sp, #36]	; 0x24
   295e8:	ldr	r1, [sp, #28]
   295ec:	ldr	r1, [r1, #36]	; 0x24
   295f0:	cmp	r0, r1
   295f4:	bge	29644 <__assert_fail@plt+0x18140>
   295f8:	ldr	r0, [sp, #28]
   295fc:	ldr	r0, [r0, #12]
   29600:	ldr	r1, [sp, #36]	; 0x24
   29604:	add	r0, r0, r1, lsl #2
   29608:	ldr	r0, [r0]
   2960c:	str	r0, [sp, #16]
   29610:	ldr	r0, [sp, #20]
   29614:	ldr	r1, [sp, #16]
   29618:	bl	11228 <iswctype@plt>
   2961c:	cmp	r0, #0
   29620:	beq	29630 <__assert_fail@plt+0x1812c>
   29624:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29628:	str	r0, [sp, #24]
   2962c:	b	296c4 <__assert_fail@plt+0x181c0>
   29630:	b	29634 <__assert_fail@plt+0x18130>
   29634:	ldr	r0, [sp, #36]	; 0x24
   29638:	add	r0, r0, #1
   2963c:	str	r0, [sp, #36]	; 0x24
   29640:	b	295e4 <__assert_fail@plt+0x180e0>
   29644:	movw	r0, #0
   29648:	str	r0, [sp, #36]	; 0x24
   2964c:	ldr	r0, [sp, #36]	; 0x24
   29650:	ldr	r1, [sp, #28]
   29654:	ldr	r1, [r1, #32]
   29658:	cmp	r0, r1
   2965c:	bge	296c0 <__assert_fail@plt+0x181bc>
   29660:	ldr	r0, [sp, #28]
   29664:	ldr	r0, [r0, #4]
   29668:	ldr	r1, [sp, #36]	; 0x24
   2966c:	add	r0, r0, r1, lsl #2
   29670:	ldr	r0, [r0]
   29674:	ldr	r1, [sp, #20]
   29678:	cmp	r0, r1
   2967c:	bhi	296ac <__assert_fail@plt+0x181a8>
   29680:	ldr	r0, [sp, #20]
   29684:	ldr	r1, [sp, #28]
   29688:	ldr	r1, [r1, #8]
   2968c:	ldr	r2, [sp, #36]	; 0x24
   29690:	add	r1, r1, r2, lsl #2
   29694:	ldr	r1, [r1]
   29698:	cmp	r0, r1
   2969c:	bhi	296ac <__assert_fail@plt+0x181a8>
   296a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   296a4:	str	r0, [sp, #24]
   296a8:	b	296c4 <__assert_fail@plt+0x181c0>
   296ac:	b	296b0 <__assert_fail@plt+0x181ac>
   296b0:	ldr	r0, [sp, #36]	; 0x24
   296b4:	add	r0, r0, #1
   296b8:	str	r0, [sp, #36]	; 0x24
   296bc:	b	2964c <__assert_fail@plt+0x18148>
   296c0:	b	296c4 <__assert_fail@plt+0x181c0>
   296c4:	ldr	r0, [sp, #28]
   296c8:	ldrb	r0, [r0, #16]
   296cc:	and	r0, r0, #1
   296d0:	and	r0, r0, #255	; 0xff
   296d4:	cmp	r0, #0
   296d8:	bne	296e8 <__assert_fail@plt+0x181e4>
   296dc:	ldr	r0, [sp, #24]
   296e0:	str	r0, [fp, #-4]
   296e4:	b	29738 <__assert_fail@plt+0x18234>
   296e8:	ldr	r0, [sp, #24]
   296ec:	cmp	r0, #0
   296f0:	ble	29700 <__assert_fail@plt+0x181fc>
   296f4:	movw	r0, #0
   296f8:	str	r0, [fp, #-4]
   296fc:	b	29738 <__assert_fail@plt+0x18234>
   29700:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29704:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29708:	cmp	r0, r1
   2970c:	ble	2971c <__assert_fail@plt+0x18218>
   29710:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29714:	str	r0, [sp, #4]
   29718:	b	29724 <__assert_fail@plt+0x18220>
   2971c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29720:	str	r0, [sp, #4]
   29724:	ldr	r0, [sp, #4]
   29728:	str	r0, [fp, #-4]
   2972c:	b	29738 <__assert_fail@plt+0x18234>
   29730:	movw	r0, #0
   29734:	str	r0, [fp, #-4]
   29738:	ldr	r0, [fp, #-4]
   2973c:	mov	sp, fp
   29740:	pop	{fp, pc}
   29744:	push	{fp, lr}
   29748:	mov	fp, sp
   2974c:	sub	sp, sp, #32
   29750:	str	r0, [fp, #-8]
   29754:	str	r1, [fp, #-12]
   29758:	str	r2, [sp, #16]
   2975c:	ldr	r0, [fp, #-8]
   29760:	ldr	r0, [r0, #4]
   29764:	ldr	r1, [sp, #16]
   29768:	ldrb	r0, [r0, r1]
   2976c:	strb	r0, [sp, #15]
   29770:	ldr	r0, [fp, #-12]
   29774:	ldrb	r0, [r0, #4]
   29778:	sub	r0, r0, #1
   2977c:	cmp	r0, #6
   29780:	str	r0, [sp, #4]
   29784:	bhi	29884 <__assert_fail@plt+0x18380>
   29788:	add	r0, pc, #8
   2978c:	ldr	r1, [sp, #4]
   29790:	ldr	r0, [r0, r1, lsl #2]
   29794:	mov	pc, r0
   29798:			; <UNDEFINED> instruction: 0x000297b4
   2979c:	andeq	r9, r2, r4, lsl #17
   297a0:	ldrdeq	r9, [r2], -ip
   297a4:	andeq	r9, r2, r4, lsl #17
   297a8:	andeq	r9, r2, r8, lsr #16
   297ac:	andeq	r9, r2, r4, lsl #17
   297b0:	andeq	r9, r2, r8, lsl #16
   297b4:	ldr	r0, [fp, #-12]
   297b8:	ldrb	r0, [r0]
   297bc:	ldrb	r1, [sp, #15]
   297c0:	cmp	r0, r1
   297c4:	beq	297d8 <__assert_fail@plt+0x182d4>
   297c8:	movw	r0, #0
   297cc:	and	r0, r0, #1
   297d0:	strb	r0, [fp, #-1]
   297d4:	b	299a8 <__assert_fail@plt+0x184a4>
   297d8:	b	29894 <__assert_fail@plt+0x18390>
   297dc:	ldr	r0, [fp, #-12]
   297e0:	ldr	r0, [r0]
   297e4:	ldrb	r1, [sp, #15]
   297e8:	bl	25da0 <__assert_fail@plt+0x1489c>
   297ec:	tst	r0, #1
   297f0:	bne	29804 <__assert_fail@plt+0x18300>
   297f4:	movw	r0, #0
   297f8:	and	r0, r0, #1
   297fc:	strb	r0, [fp, #-1]
   29800:	b	299a8 <__assert_fail@plt+0x184a4>
   29804:	b	29894 <__assert_fail@plt+0x18390>
   29808:	ldrb	r0, [sp, #15]
   2980c:	cmp	r0, #128	; 0x80
   29810:	blt	29824 <__assert_fail@plt+0x18320>
   29814:	movw	r0, #0
   29818:	and	r0, r0, #1
   2981c:	strb	r0, [fp, #-1]
   29820:	b	299a8 <__assert_fail@plt+0x184a4>
   29824:	b	29828 <__assert_fail@plt+0x18324>
   29828:	ldrb	r0, [sp, #15]
   2982c:	cmp	r0, #10
   29830:	bne	2984c <__assert_fail@plt+0x18348>
   29834:	ldr	r0, [fp, #-8]
   29838:	ldr	r0, [r0, #84]	; 0x54
   2983c:	ldr	r0, [r0, #128]	; 0x80
   29840:	and	r0, r0, #64	; 0x40
   29844:	cmp	r0, #0
   29848:	beq	29870 <__assert_fail@plt+0x1836c>
   2984c:	ldrb	r0, [sp, #15]
   29850:	cmp	r0, #0
   29854:	bne	29880 <__assert_fail@plt+0x1837c>
   29858:	ldr	r0, [fp, #-8]
   2985c:	ldr	r0, [r0, #84]	; 0x54
   29860:	ldr	r0, [r0, #128]	; 0x80
   29864:	and	r0, r0, #128	; 0x80
   29868:	cmp	r0, #0
   2986c:	beq	29880 <__assert_fail@plt+0x1837c>
   29870:	movw	r0, #0
   29874:	and	r0, r0, #1
   29878:	strb	r0, [fp, #-1]
   2987c:	b	299a8 <__assert_fail@plt+0x184a4>
   29880:	b	29894 <__assert_fail@plt+0x18390>
   29884:	movw	r0, #0
   29888:	and	r0, r0, #1
   2988c:	strb	r0, [fp, #-1]
   29890:	b	299a8 <__assert_fail@plt+0x184a4>
   29894:	ldr	r0, [fp, #-12]
   29898:	ldr	r0, [r0, #4]
   2989c:	lsr	r0, r0, #8
   298a0:	movw	r1, #1023	; 0x3ff
   298a4:	and	r0, r0, r1
   298a8:	cmp	r0, #0
   298ac:	beq	2999c <__assert_fail@plt+0x18498>
   298b0:	ldr	r0, [fp, #-8]
   298b4:	ldr	r1, [sp, #16]
   298b8:	ldr	r2, [fp, #-8]
   298bc:	ldr	r2, [r2, #88]	; 0x58
   298c0:	bl	25a30 <__assert_fail@plt+0x1452c>
   298c4:	str	r0, [sp, #8]
   298c8:	ldr	r0, [fp, #-12]
   298cc:	ldr	r0, [r0, #4]
   298d0:	lsr	r0, r0, #8
   298d4:	movw	r1, #1023	; 0x3ff
   298d8:	and	r0, r0, r1
   298dc:	and	r0, r0, #4
   298e0:	cmp	r0, #0
   298e4:	beq	298f8 <__assert_fail@plt+0x183f4>
   298e8:	ldr	r0, [sp, #8]
   298ec:	and	r0, r0, #1
   298f0:	cmp	r0, #0
   298f4:	beq	29988 <__assert_fail@plt+0x18484>
   298f8:	ldr	r0, [fp, #-12]
   298fc:	ldr	r0, [r0, #4]
   29900:	lsr	r0, r0, #8
   29904:	movw	r1, #1023	; 0x3ff
   29908:	and	r0, r0, r1
   2990c:	and	r0, r0, #8
   29910:	cmp	r0, #0
   29914:	beq	29928 <__assert_fail@plt+0x18424>
   29918:	ldr	r0, [sp, #8]
   2991c:	and	r0, r0, #1
   29920:	cmp	r0, #0
   29924:	bne	29988 <__assert_fail@plt+0x18484>
   29928:	ldr	r0, [fp, #-12]
   2992c:	ldr	r0, [r0, #4]
   29930:	lsr	r0, r0, #8
   29934:	movw	r1, #1023	; 0x3ff
   29938:	and	r0, r0, r1
   2993c:	and	r0, r0, #32
   29940:	cmp	r0, #0
   29944:	beq	29958 <__assert_fail@plt+0x18454>
   29948:	ldr	r0, [sp, #8]
   2994c:	and	r0, r0, #2
   29950:	cmp	r0, #0
   29954:	beq	29988 <__assert_fail@plt+0x18484>
   29958:	ldr	r0, [fp, #-12]
   2995c:	ldr	r0, [r0, #4]
   29960:	lsr	r0, r0, #8
   29964:	movw	r1, #1023	; 0x3ff
   29968:	and	r0, r0, r1
   2996c:	and	r0, r0, #128	; 0x80
   29970:	cmp	r0, #0
   29974:	beq	29998 <__assert_fail@plt+0x18494>
   29978:	ldr	r0, [sp, #8]
   2997c:	and	r0, r0, #8
   29980:	cmp	r0, #0
   29984:	bne	29998 <__assert_fail@plt+0x18494>
   29988:	movw	r0, #0
   2998c:	and	r0, r0, #1
   29990:	strb	r0, [fp, #-1]
   29994:	b	299a8 <__assert_fail@plt+0x184a4>
   29998:	b	2999c <__assert_fail@plt+0x18498>
   2999c:	movw	r0, #1
   299a0:	and	r0, r0, #1
   299a4:	strb	r0, [fp, #-1]
   299a8:	ldrb	r0, [fp, #-1]
   299ac:	and	r0, r0, #1
   299b0:	mov	sp, fp
   299b4:	pop	{fp, pc}
   299b8:	sub	sp, sp, #8
   299bc:	str	r0, [sp, #4]
   299c0:	str	r1, [sp]
   299c4:	movw	r0, #1
   299c8:	add	sp, sp, #8
   299cc:	bx	lr
   299d0:	push	{fp, lr}
   299d4:	mov	fp, sp
   299d8:	sub	sp, sp, #72	; 0x48
   299dc:	str	r0, [fp, #-8]
   299e0:	str	r1, [fp, #-12]
   299e4:	ldr	r0, [fp, #-8]
   299e8:	ldr	r0, [r0, #84]	; 0x54
   299ec:	str	r0, [fp, #-16]
   299f0:	movw	r0, #0
   299f4:	str	r0, [fp, #-24]	; 0xffffffe8
   299f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   299fc:	ldr	r1, [fp, #-12]
   29a00:	ldr	r1, [r1, #8]
   29a04:	cmp	r0, r1
   29a08:	bge	29d98 <__assert_fail@plt+0x18894>
   29a0c:	ldr	r0, [fp, #-12]
   29a10:	ldr	r0, [r0, #12]
   29a14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29a18:	ldr	r0, [r0, r1, lsl #2]
   29a1c:	str	r0, [sp, #28]
   29a20:	ldr	r0, [fp, #-16]
   29a24:	ldr	r0, [r0]
   29a28:	ldr	r1, [sp, #28]
   29a2c:	add	r0, r0, r1, lsl #3
   29a30:	ldr	r0, [r0, #4]
   29a34:	lsr	r0, r0, #20
   29a38:	and	r0, r0, #1
   29a3c:	cmp	r0, #0
   29a40:	bne	29a48 <__assert_fail@plt+0x18544>
   29a44:	b	29d88 <__assert_fail@plt+0x18884>
   29a48:	ldr	r0, [fp, #-16]
   29a4c:	ldr	r0, [r0]
   29a50:	ldr	r1, [sp, #28]
   29a54:	add	r0, r0, r1, lsl #3
   29a58:	ldr	r0, [r0, #4]
   29a5c:	lsr	r0, r0, #8
   29a60:	movw	r1, #1023	; 0x3ff
   29a64:	and	r0, r0, r1
   29a68:	cmp	r0, #0
   29a6c:	beq	29b7c <__assert_fail@plt+0x18678>
   29a70:	ldr	r0, [fp, #-8]
   29a74:	ldr	r1, [r0, #40]	; 0x28
   29a78:	ldr	r2, [r0, #88]	; 0x58
   29a7c:	bl	25a30 <__assert_fail@plt+0x1452c>
   29a80:	str	r0, [sp, #16]
   29a84:	ldr	r0, [fp, #-16]
   29a88:	ldr	r0, [r0]
   29a8c:	ldr	r1, [sp, #28]
   29a90:	add	r0, r0, r1, lsl #3
   29a94:	ldr	r0, [r0, #4]
   29a98:	lsr	r0, r0, #8
   29a9c:	movw	r1, #1023	; 0x3ff
   29aa0:	and	r0, r0, r1
   29aa4:	and	r0, r0, #4
   29aa8:	cmp	r0, #0
   29aac:	beq	29ac0 <__assert_fail@plt+0x185bc>
   29ab0:	ldr	r0, [sp, #16]
   29ab4:	and	r0, r0, #1
   29ab8:	cmp	r0, #0
   29abc:	beq	29b74 <__assert_fail@plt+0x18670>
   29ac0:	ldr	r0, [fp, #-16]
   29ac4:	ldr	r0, [r0]
   29ac8:	ldr	r1, [sp, #28]
   29acc:	add	r0, r0, r1, lsl #3
   29ad0:	ldr	r0, [r0, #4]
   29ad4:	lsr	r0, r0, #8
   29ad8:	movw	r1, #1023	; 0x3ff
   29adc:	and	r0, r0, r1
   29ae0:	and	r0, r0, #8
   29ae4:	cmp	r0, #0
   29ae8:	beq	29afc <__assert_fail@plt+0x185f8>
   29aec:	ldr	r0, [sp, #16]
   29af0:	and	r0, r0, #1
   29af4:	cmp	r0, #0
   29af8:	bne	29b74 <__assert_fail@plt+0x18670>
   29afc:	ldr	r0, [fp, #-16]
   29b00:	ldr	r0, [r0]
   29b04:	ldr	r1, [sp, #28]
   29b08:	add	r0, r0, r1, lsl #3
   29b0c:	ldr	r0, [r0, #4]
   29b10:	lsr	r0, r0, #8
   29b14:	movw	r1, #1023	; 0x3ff
   29b18:	and	r0, r0, r1
   29b1c:	and	r0, r0, #32
   29b20:	cmp	r0, #0
   29b24:	beq	29b38 <__assert_fail@plt+0x18634>
   29b28:	ldr	r0, [sp, #16]
   29b2c:	and	r0, r0, #2
   29b30:	cmp	r0, #0
   29b34:	beq	29b74 <__assert_fail@plt+0x18670>
   29b38:	ldr	r0, [fp, #-16]
   29b3c:	ldr	r0, [r0]
   29b40:	ldr	r1, [sp, #28]
   29b44:	add	r0, r0, r1, lsl #3
   29b48:	ldr	r0, [r0, #4]
   29b4c:	lsr	r0, r0, #8
   29b50:	movw	r1, #1023	; 0x3ff
   29b54:	and	r0, r0, r1
   29b58:	and	r0, r0, #128	; 0x80
   29b5c:	cmp	r0, #0
   29b60:	beq	29b78 <__assert_fail@plt+0x18674>
   29b64:	ldr	r0, [sp, #16]
   29b68:	and	r0, r0, #8
   29b6c:	cmp	r0, #0
   29b70:	bne	29b78 <__assert_fail@plt+0x18674>
   29b74:	b	29d88 <__assert_fail@plt+0x18884>
   29b78:	b	29b7c <__assert_fail@plt+0x18678>
   29b7c:	ldr	r0, [fp, #-16]
   29b80:	ldr	r1, [sp, #28]
   29b84:	ldr	r2, [fp, #-8]
   29b88:	ldr	r3, [fp, #-8]
   29b8c:	ldr	r3, [r3, #40]	; 0x28
   29b90:	bl	2915c <__assert_fail@plt+0x17c58>
   29b94:	str	r0, [sp, #24]
   29b98:	ldr	r0, [sp, #24]
   29b9c:	cmp	r0, #0
   29ba0:	bne	29ba8 <__assert_fail@plt+0x186a4>
   29ba4:	b	29d88 <__assert_fail@plt+0x18884>
   29ba8:	ldr	r0, [fp, #-8]
   29bac:	ldr	r0, [r0, #40]	; 0x28
   29bb0:	ldr	r1, [sp, #24]
   29bb4:	add	r0, r0, r1
   29bb8:	str	r0, [sp, #20]
   29bbc:	ldr	r0, [fp, #-8]
   29bc0:	ldr	r0, [r0, #120]	; 0x78
   29bc4:	ldr	r1, [sp, #24]
   29bc8:	cmp	r0, r1
   29bcc:	bge	29bdc <__assert_fail@plt+0x186d8>
   29bd0:	ldr	r0, [sp, #24]
   29bd4:	str	r0, [sp, #8]
   29bd8:	b	29be8 <__assert_fail@plt+0x186e4>
   29bdc:	ldr	r0, [fp, #-8]
   29be0:	ldr	r0, [r0, #120]	; 0x78
   29be4:	str	r0, [sp, #8]
   29be8:	ldr	r0, [sp, #8]
   29bec:	ldr	r1, [fp, #-8]
   29bf0:	str	r0, [r1, #120]	; 0x78
   29bf4:	ldr	r0, [fp, #-8]
   29bf8:	ldr	r1, [sp, #20]
   29bfc:	bl	27658 <__assert_fail@plt+0x16154>
   29c00:	str	r0, [fp, #-20]	; 0xffffffec
   29c04:	ldr	r0, [fp, #-20]	; 0xffffffec
   29c08:	cmp	r0, #0
   29c0c:	beq	29c1c <__assert_fail@plt+0x18718>
   29c10:	ldr	r0, [fp, #-20]	; 0xffffffec
   29c14:	str	r0, [fp, #-4]
   29c18:	b	29da0 <__assert_fail@plt+0x1889c>
   29c1c:	ldr	r0, [fp, #-16]
   29c20:	ldr	r0, [r0, #12]
   29c24:	ldr	r1, [sp, #28]
   29c28:	add	r0, r0, r1, lsl #2
   29c2c:	ldr	r0, [r0]
   29c30:	cmn	r0, #1
   29c34:	beq	29c3c <__assert_fail@plt+0x18738>
   29c38:	b	29c3c <__assert_fail@plt+0x18738>
   29c3c:	ldr	r0, [fp, #-16]
   29c40:	ldr	r1, [r0, #12]
   29c44:	ldr	r0, [r0, #24]
   29c48:	ldr	r2, [sp, #28]
   29c4c:	ldr	r1, [r1, r2, lsl #2]
   29c50:	add	r1, r1, r1, lsl #1
   29c54:	add	r0, r0, r1, lsl #2
   29c58:	str	r0, [sp, #32]
   29c5c:	ldr	r0, [fp, #-8]
   29c60:	ldr	r0, [r0, #100]	; 0x64
   29c64:	ldr	r1, [sp, #20]
   29c68:	add	r0, r0, r1, lsl #2
   29c6c:	ldr	r0, [r0]
   29c70:	str	r0, [sp, #12]
   29c74:	ldr	r0, [sp, #12]
   29c78:	movw	r1, #0
   29c7c:	cmp	r0, r1
   29c80:	bne	29ca4 <__assert_fail@plt+0x187a0>
   29c84:	ldr	r0, [sp, #32]
   29c88:	ldr	r1, [r0]
   29c8c:	str	r1, [sp, #36]	; 0x24
   29c90:	ldr	r1, [r0, #4]
   29c94:	str	r1, [sp, #40]	; 0x28
   29c98:	ldr	r0, [r0, #8]
   29c9c:	str	r0, [sp, #44]	; 0x2c
   29ca0:	b	29cd8 <__assert_fail@plt+0x187d4>
   29ca4:	ldr	r0, [sp, #12]
   29ca8:	ldr	r1, [r0, #40]	; 0x28
   29cac:	ldr	r2, [sp, #32]
   29cb0:	add	r0, sp, #36	; 0x24
   29cb4:	bl	27224 <__assert_fail@plt+0x15d20>
   29cb8:	str	r0, [fp, #-20]	; 0xffffffec
   29cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   29cc0:	cmp	r0, #0
   29cc4:	beq	29cd4 <__assert_fail@plt+0x187d0>
   29cc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   29ccc:	str	r0, [fp, #-4]
   29cd0:	b	29da0 <__assert_fail@plt+0x1889c>
   29cd4:	b	29cd8 <__assert_fail@plt+0x187d4>
   29cd8:	ldr	r0, [fp, #-8]
   29cdc:	ldr	r1, [sp, #20]
   29ce0:	sub	r1, r1, #1
   29ce4:	ldr	r2, [r0, #88]	; 0x58
   29ce8:	bl	25a30 <__assert_fail@plt+0x1452c>
   29cec:	str	r0, [sp, #16]
   29cf0:	ldr	r1, [fp, #-16]
   29cf4:	ldr	r3, [sp, #16]
   29cf8:	sub	r0, fp, #20
   29cfc:	add	r2, sp, #36	; 0x24
   29d00:	bl	231f4 <__assert_fail@plt+0x11cf0>
   29d04:	ldr	r1, [fp, #-8]
   29d08:	ldr	r1, [r1, #100]	; 0x64
   29d0c:	ldr	r2, [sp, #20]
   29d10:	add	r1, r1, r2, lsl #2
   29d14:	str	r0, [r1]
   29d18:	ldr	r0, [sp, #12]
   29d1c:	movw	r1, #0
   29d20:	cmp	r0, r1
   29d24:	beq	29d30 <__assert_fail@plt+0x1882c>
   29d28:	ldr	r0, [sp, #44]	; 0x2c
   29d2c:	bl	34c20 <__assert_fail@plt+0x2371c>
   29d30:	ldr	r0, [fp, #-8]
   29d34:	ldr	r0, [r0, #100]	; 0x64
   29d38:	ldr	r1, [sp, #20]
   29d3c:	add	r0, r0, r1, lsl #2
   29d40:	ldr	r0, [r0]
   29d44:	movw	r1, #0
   29d48:	cmp	r0, r1
   29d4c:	movw	r0, #0
   29d50:	str	r0, [sp, #4]
   29d54:	bne	29d6c <__assert_fail@plt+0x18868>
   29d58:	ldr	r0, [fp, #-20]	; 0xffffffec
   29d5c:	cmp	r0, #0
   29d60:	movw	r0, #0
   29d64:	movne	r0, #1
   29d68:	str	r0, [sp, #4]
   29d6c:	ldr	r0, [sp, #4]
   29d70:	tst	r0, #1
   29d74:	beq	29d84 <__assert_fail@plt+0x18880>
   29d78:	ldr	r0, [fp, #-20]	; 0xffffffec
   29d7c:	str	r0, [fp, #-4]
   29d80:	b	29da0 <__assert_fail@plt+0x1889c>
   29d84:	b	29d88 <__assert_fail@plt+0x18884>
   29d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29d8c:	add	r0, r0, #1
   29d90:	str	r0, [fp, #-24]	; 0xffffffe8
   29d94:	b	299f8 <__assert_fail@plt+0x184f4>
   29d98:	movw	r0, #0
   29d9c:	str	r0, [fp, #-4]
   29da0:	ldr	r0, [fp, #-4]
   29da4:	mov	sp, fp
   29da8:	pop	{fp, pc}
   29dac:	push	{r4, r5, fp, lr}
   29db0:	add	fp, sp, #8
   29db4:	sub	sp, sp, #2160	; 0x870
   29db8:	sub	sp, sp, #12288	; 0x3000
   29dbc:	add	r3, sp, #20
   29dc0:	sub	lr, fp, #6144	; 0x1800
   29dc4:	sub	r2, lr, #100	; 0x64
   29dc8:	str	r0, [fp, #-16]
   29dcc:	str	r1, [fp, #-20]	; 0xffffffec
   29dd0:	movw	r0, #0
   29dd4:	strb	r0, [fp, #-37]	; 0xffffffdb
   29dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   29ddc:	movw	r1, #0
   29de0:	str	r1, [r0, #44]	; 0x2c
   29de4:	ldr	r0, [fp, #-20]	; 0xffffffec
   29de8:	str	r1, [r0, #48]	; 0x30
   29dec:	ldr	r0, [fp, #-16]
   29df0:	ldr	r1, [fp, #-20]	; 0xffffffec
   29df4:	bl	2a5d4 <__assert_fail@plt+0x190d0>
   29df8:	str	r0, [fp, #-52]	; 0xffffffcc
   29dfc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29e00:	cmp	r0, #0
   29e04:	bgt	29e6c <__assert_fail@plt+0x18968>
   29e08:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29e0c:	cmp	r0, #0
   29e10:	bne	29e5c <__assert_fail@plt+0x18958>
   29e14:	movw	r0, #4
   29e18:	movw	r1, #256	; 0x100
   29e1c:	bl	334b0 <__assert_fail@plt+0x21fac>
   29e20:	ldr	r1, [fp, #-20]	; 0xffffffec
   29e24:	str	r0, [r1, #44]	; 0x2c
   29e28:	ldr	r0, [fp, #-20]	; 0xffffffec
   29e2c:	ldr	r0, [r0, #44]	; 0x2c
   29e30:	movw	r1, #0
   29e34:	cmp	r0, r1
   29e38:	bne	29e4c <__assert_fail@plt+0x18948>
   29e3c:	movw	r0, #0
   29e40:	and	r0, r0, #1
   29e44:	strb	r0, [fp, #-9]
   29e48:	b	2a5c4 <__assert_fail@plt+0x190c0>
   29e4c:	movw	r0, #1
   29e50:	and	r0, r0, #1
   29e54:	strb	r0, [fp, #-9]
   29e58:	b	2a5c4 <__assert_fail@plt+0x190c0>
   29e5c:	movw	r0, #0
   29e60:	and	r0, r0, #1
   29e64:	strb	r0, [fp, #-9]
   29e68:	b	2a5c4 <__assert_fail@plt+0x190c0>
   29e6c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29e70:	add	r1, r0, #1
   29e74:	sub	lr, fp, #3072	; 0xc00
   29e78:	sub	r0, lr, #68	; 0x44
   29e7c:	bl	221e0 <__assert_fail@plt+0x10cdc>
   29e80:	str	r0, [fp, #-24]	; 0xffffffe8
   29e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29e88:	cmp	r0, #0
   29e8c:	beq	29ef4 <__assert_fail@plt+0x189f0>
   29e90:	b	29e94 <__assert_fail@plt+0x18990>
   29e94:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   29e98:	bl	34c20 <__assert_fail@plt+0x2371c>
   29e9c:	movw	r0, #0
   29ea0:	str	r0, [fp, #-28]	; 0xffffffe4
   29ea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29ea8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   29eac:	cmp	r0, r1
   29eb0:	bge	29ee4 <__assert_fail@plt+0x189e0>
   29eb4:	sub	lr, fp, #6144	; 0x1800
   29eb8:	sub	r0, lr, #100	; 0x64
   29ebc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29ec0:	movw	r2, #12
   29ec4:	mul	r1, r1, r2
   29ec8:	add	r0, r0, r1
   29ecc:	ldr	r0, [r0, #8]
   29ed0:	bl	34c20 <__assert_fail@plt+0x2371c>
   29ed4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29ed8:	add	r0, r0, #1
   29edc:	str	r0, [fp, #-28]	; 0xffffffe4
   29ee0:	b	29ea4 <__assert_fail@plt+0x189a0>
   29ee4:	movw	r0, #0
   29ee8:	and	r0, r0, #1
   29eec:	strb	r0, [fp, #-9]
   29ef0:	b	2a5c4 <__assert_fail@plt+0x190c0>
   29ef4:	sub	lr, fp, #3072	; 0xc00
   29ef8:	sub	r0, lr, #100	; 0x64
   29efc:	bl	2adb4 <__assert_fail@plt+0x198b0>
   29f00:	movw	r0, #0
   29f04:	str	r0, [fp, #-28]	; 0xffffffe4
   29f08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29f0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   29f10:	cmp	r0, r1
   29f14:	bge	2a1e4 <__assert_fail@plt+0x18ce0>
   29f18:	movw	r0, #0
   29f1c:	str	r0, [fp, #-3136]	; 0xfffff3c0
   29f20:	str	r0, [fp, #-32]	; 0xffffffe0
   29f24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29f28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29f2c:	movw	r2, #12
   29f30:	mul	r1, r1, r2
   29f34:	sub	lr, fp, #6144	; 0x1800
   29f38:	sub	r2, lr, #100	; 0x64
   29f3c:	add	r1, r2, r1
   29f40:	ldr	r1, [r1, #4]
   29f44:	cmp	r0, r1
   29f48:	bge	29fdc <__assert_fail@plt+0x18ad8>
   29f4c:	ldr	r0, [fp, #-16]
   29f50:	ldr	r0, [r0, #12]
   29f54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29f58:	add	r1, r1, r1, lsl #1
   29f5c:	sub	lr, fp, #6144	; 0x1800
   29f60:	sub	r2, lr, #100	; 0x64
   29f64:	add	r1, r2, r1, lsl #2
   29f68:	ldr	r1, [r1, #8]
   29f6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29f70:	ldr	r1, [r1, r2, lsl #2]
   29f74:	add	r0, r0, r1, lsl #2
   29f78:	ldr	r0, [r0]
   29f7c:	str	r0, [sp, #16]
   29f80:	ldr	r0, [sp, #16]
   29f84:	cmn	r0, #1
   29f88:	beq	29fc8 <__assert_fail@plt+0x18ac4>
   29f8c:	ldr	r0, [fp, #-16]
   29f90:	ldr	r0, [r0, #24]
   29f94:	ldr	r1, [sp, #16]
   29f98:	movw	r2, #12
   29f9c:	mul	r1, r1, r2
   29fa0:	add	r1, r0, r1
   29fa4:	sub	lr, fp, #3072	; 0xc00
   29fa8:	sub	r0, lr, #68	; 0x44
   29fac:	bl	22758 <__assert_fail@plt+0x11254>
   29fb0:	str	r0, [fp, #-24]	; 0xffffffe8
   29fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29fb8:	cmp	r0, #0
   29fbc:	beq	29fc4 <__assert_fail@plt+0x18ac0>
   29fc0:	b	29e94 <__assert_fail@plt+0x18990>
   29fc4:	b	29fc8 <__assert_fail@plt+0x18ac4>
   29fc8:	b	29fcc <__assert_fail@plt+0x18ac8>
   29fcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29fd0:	add	r0, r0, #1
   29fd4:	str	r0, [fp, #-32]	; 0xffffffe0
   29fd8:	b	29f24 <__assert_fail@plt+0x18a20>
   29fdc:	ldr	r1, [fp, #-16]
   29fe0:	sub	r0, fp, #24
   29fe4:	sub	lr, fp, #3072	; 0xc00
   29fe8:	sub	r2, lr, #68	; 0x44
   29fec:	mov	r3, #0
   29ff0:	bl	231f4 <__assert_fail@plt+0x11cf0>
   29ff4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29ff8:	sub	lr, fp, #1024	; 0x400
   29ffc:	sub	r2, lr, #56	; 0x38
   2a000:	str	r0, [r2, r1, lsl #2]
   2a004:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a008:	add	r0, r2, r0, lsl #2
   2a00c:	ldr	r0, [r0]
   2a010:	movw	r1, #0
   2a014:	cmp	r0, r1
   2a018:	movw	r0, #0
   2a01c:	str	r0, [sp, #12]
   2a020:	bne	2a038 <__assert_fail@plt+0x18b34>
   2a024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a028:	cmp	r0, #0
   2a02c:	movw	r0, #0
   2a030:	movne	r0, #1
   2a034:	str	r0, [sp, #12]
   2a038:	ldr	r0, [sp, #12]
   2a03c:	tst	r0, #1
   2a040:	beq	2a048 <__assert_fail@plt+0x18b44>
   2a044:	b	29e94 <__assert_fail@plt+0x18990>
   2a048:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a04c:	sub	lr, fp, #1024	; 0x400
   2a050:	sub	r1, lr, #56	; 0x38
   2a054:	ldr	r0, [r1, r0, lsl #2]
   2a058:	ldrb	r0, [r0, #52]	; 0x34
   2a05c:	lsr	r0, r0, #7
   2a060:	and	r0, r0, #255	; 0xff
   2a064:	cmp	r0, #0
   2a068:	beq	2a188 <__assert_fail@plt+0x18c84>
   2a06c:	ldr	r1, [fp, #-16]
   2a070:	sub	r0, fp, #24
   2a074:	sub	lr, fp, #3072	; 0xc00
   2a078:	sub	r2, lr, #68	; 0x44
   2a07c:	mov	r3, #1
   2a080:	bl	231f4 <__assert_fail@plt+0x11cf0>
   2a084:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a088:	sub	lr, fp, #2048	; 0x800
   2a08c:	sub	r2, lr, #56	; 0x38
   2a090:	str	r0, [r2, r1, lsl #2]
   2a094:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a098:	add	r0, r2, r0, lsl #2
   2a09c:	ldr	r0, [r0]
   2a0a0:	movw	r1, #0
   2a0a4:	cmp	r0, r1
   2a0a8:	movw	r0, #0
   2a0ac:	str	r0, [sp, #8]
   2a0b0:	bne	2a0c8 <__assert_fail@plt+0x18bc4>
   2a0b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a0b8:	cmp	r0, #0
   2a0bc:	movw	r0, #0
   2a0c0:	movne	r0, #1
   2a0c4:	str	r0, [sp, #8]
   2a0c8:	ldr	r0, [sp, #8]
   2a0cc:	tst	r0, #1
   2a0d0:	beq	2a0d8 <__assert_fail@plt+0x18bd4>
   2a0d4:	b	29e94 <__assert_fail@plt+0x18990>
   2a0d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a0dc:	sub	lr, fp, #1024	; 0x400
   2a0e0:	sub	r1, lr, #56	; 0x38
   2a0e4:	ldr	r1, [r1, r0, lsl #2]
   2a0e8:	sub	lr, fp, #2048	; 0x800
   2a0ec:	sub	r2, lr, #56	; 0x38
   2a0f0:	add	r0, r2, r0, lsl #2
   2a0f4:	ldr	r0, [r0]
   2a0f8:	cmp	r1, r0
   2a0fc:	beq	2a118 <__assert_fail@plt+0x18c14>
   2a100:	ldr	r0, [fp, #-16]
   2a104:	ldr	r0, [r0, #92]	; 0x5c
   2a108:	cmp	r0, #1
   2a10c:	ble	2a118 <__assert_fail@plt+0x18c14>
   2a110:	movw	r0, #1
   2a114:	strb	r0, [fp, #-37]	; 0xffffffdb
   2a118:	ldr	r1, [fp, #-16]
   2a11c:	sub	r0, fp, #24
   2a120:	sub	lr, fp, #3072	; 0xc00
   2a124:	sub	r2, lr, #68	; 0x44
   2a128:	mov	r3, #2
   2a12c:	bl	231f4 <__assert_fail@plt+0x11cf0>
   2a130:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a134:	sub	lr, fp, #3072	; 0xc00
   2a138:	sub	r2, lr, #56	; 0x38
   2a13c:	str	r0, [r2, r1, lsl #2]
   2a140:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a144:	add	r0, r2, r0, lsl #2
   2a148:	ldr	r0, [r0]
   2a14c:	movw	r1, #0
   2a150:	cmp	r0, r1
   2a154:	movw	r0, #0
   2a158:	str	r0, [sp, #4]
   2a15c:	bne	2a174 <__assert_fail@plt+0x18c70>
   2a160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a164:	cmp	r0, #0
   2a168:	movw	r0, #0
   2a16c:	movne	r0, #1
   2a170:	str	r0, [sp, #4]
   2a174:	ldr	r0, [sp, #4]
   2a178:	tst	r0, #1
   2a17c:	beq	2a184 <__assert_fail@plt+0x18c80>
   2a180:	b	29e94 <__assert_fail@plt+0x18990>
   2a184:	b	2a1bc <__assert_fail@plt+0x18cb8>
   2a188:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a18c:	sub	lr, fp, #1024	; 0x400
   2a190:	sub	r1, lr, #56	; 0x38
   2a194:	ldr	r2, [r1, r0, lsl #2]
   2a198:	sub	lr, fp, #2048	; 0x800
   2a19c:	sub	r3, lr, #56	; 0x38
   2a1a0:	str	r2, [r3, r0, lsl #2]
   2a1a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a1a8:	ldr	r1, [r1, r0, lsl #2]
   2a1ac:	sub	lr, fp, #3072	; 0xc00
   2a1b0:	sub	r2, lr, #56	; 0x38
   2a1b4:	add	r0, r2, r0, lsl #2
   2a1b8:	str	r1, [r0]
   2a1bc:	sub	lr, fp, #3072	; 0xc00
   2a1c0:	sub	r0, lr, #100	; 0x64
   2a1c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a1c8:	add	r2, sp, #20
   2a1cc:	add	r1, r2, r1, lsl #5
   2a1d0:	bl	2ade0 <__assert_fail@plt+0x198dc>
   2a1d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a1d8:	add	r0, r0, #1
   2a1dc:	str	r0, [fp, #-28]	; 0xffffffe4
   2a1e0:	b	29f08 <__assert_fail@plt+0x18a04>
   2a1e4:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   2a1e8:	tst	r0, #1
   2a1ec:	bne	2a36c <__assert_fail@plt+0x18e68>
   2a1f0:	movw	r0, #4
   2a1f4:	movw	r1, #256	; 0x100
   2a1f8:	bl	334b0 <__assert_fail@plt+0x21fac>
   2a1fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a200:	str	r0, [r1, #44]	; 0x2c
   2a204:	str	r0, [fp, #-56]	; 0xffffffc8
   2a208:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a20c:	movw	r1, #0
   2a210:	cmp	r0, r1
   2a214:	bne	2a21c <__assert_fail@plt+0x18d18>
   2a218:	b	29e94 <__assert_fail@plt+0x18990>
   2a21c:	movw	r0, #0
   2a220:	str	r0, [fp, #-28]	; 0xffffffe4
   2a224:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a228:	cmp	r0, #8
   2a22c:	bge	2a368 <__assert_fail@plt+0x18e64>
   2a230:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a234:	lsl	r0, r0, #5
   2a238:	str	r0, [fp, #-36]	; 0xffffffdc
   2a23c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a240:	sub	lr, fp, #3072	; 0xc00
   2a244:	sub	r1, lr, #100	; 0x64
   2a248:	add	r0, r1, r0, lsl #2
   2a24c:	ldr	r0, [r0]
   2a250:	str	r0, [fp, #-44]	; 0xffffffd4
   2a254:	movw	r0, #1
   2a258:	str	r0, [fp, #-48]	; 0xffffffd0
   2a25c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a260:	cmp	r0, #0
   2a264:	beq	2a354 <__assert_fail@plt+0x18e50>
   2a268:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a26c:	and	r0, r0, #1
   2a270:	cmp	r0, #0
   2a274:	beq	2a328 <__assert_fail@plt+0x18e24>
   2a278:	movw	r0, #0
   2a27c:	str	r0, [fp, #-32]	; 0xffffffe0
   2a280:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a284:	add	r1, sp, #20
   2a288:	add	r0, r1, r0, lsl #5
   2a28c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a290:	add	r0, r0, r1, lsl #2
   2a294:	ldr	r0, [r0]
   2a298:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a29c:	and	r0, r0, r1
   2a2a0:	cmp	r0, #0
   2a2a4:	bne	2a2bc <__assert_fail@plt+0x18db8>
   2a2a8:	b	2a2ac <__assert_fail@plt+0x18da8>
   2a2ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a2b0:	add	r0, r0, #1
   2a2b4:	str	r0, [fp, #-32]	; 0xffffffe0
   2a2b8:	b	2a280 <__assert_fail@plt+0x18d7c>
   2a2bc:	ldr	r0, [fp, #-16]
   2a2c0:	add	r0, r0, #96	; 0x60
   2a2c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a2c8:	add	r0, r0, r1, lsl #2
   2a2cc:	ldr	r0, [r0]
   2a2d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a2d4:	and	r0, r0, r1
   2a2d8:	cmp	r0, #0
   2a2dc:	beq	2a304 <__assert_fail@plt+0x18e00>
   2a2e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a2e4:	sub	lr, fp, #2048	; 0x800
   2a2e8:	sub	r1, lr, #56	; 0x38
   2a2ec:	ldr	r0, [r1, r0, lsl #2]
   2a2f0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a2f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a2f8:	add	r1, r1, r2, lsl #2
   2a2fc:	str	r0, [r1]
   2a300:	b	2a324 <__assert_fail@plt+0x18e20>
   2a304:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a308:	sub	lr, fp, #1024	; 0x400
   2a30c:	sub	r1, lr, #56	; 0x38
   2a310:	ldr	r0, [r1, r0, lsl #2]
   2a314:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a318:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a31c:	add	r1, r1, r2, lsl #2
   2a320:	str	r0, [r1]
   2a324:	b	2a328 <__assert_fail@plt+0x18e24>
   2a328:	b	2a32c <__assert_fail@plt+0x18e28>
   2a32c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a330:	lsl	r0, r0, #1
   2a334:	str	r0, [fp, #-48]	; 0xffffffd0
   2a338:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a33c:	lsr	r0, r0, #1
   2a340:	str	r0, [fp, #-44]	; 0xffffffd4
   2a344:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a348:	add	r0, r0, #1
   2a34c:	str	r0, [fp, #-36]	; 0xffffffdc
   2a350:	b	2a25c <__assert_fail@plt+0x18d58>
   2a354:	b	2a358 <__assert_fail@plt+0x18e54>
   2a358:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a35c:	add	r0, r0, #1
   2a360:	str	r0, [fp, #-28]	; 0xffffffe4
   2a364:	b	2a224 <__assert_fail@plt+0x18d20>
   2a368:	b	2a4bc <__assert_fail@plt+0x18fb8>
   2a36c:	movw	r0, #4
   2a370:	movw	r1, #512	; 0x200
   2a374:	bl	334b0 <__assert_fail@plt+0x21fac>
   2a378:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a37c:	str	r0, [r1, #48]	; 0x30
   2a380:	str	r0, [fp, #-56]	; 0xffffffc8
   2a384:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a388:	movw	r1, #0
   2a38c:	cmp	r0, r1
   2a390:	bne	2a398 <__assert_fail@plt+0x18e94>
   2a394:	b	29e94 <__assert_fail@plt+0x18990>
   2a398:	movw	r0, #0
   2a39c:	str	r0, [fp, #-28]	; 0xffffffe4
   2a3a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a3a4:	cmp	r0, #8
   2a3a8:	bge	2a4b8 <__assert_fail@plt+0x18fb4>
   2a3ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a3b0:	lsl	r0, r0, #5
   2a3b4:	str	r0, [fp, #-36]	; 0xffffffdc
   2a3b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a3bc:	sub	lr, fp, #3072	; 0xc00
   2a3c0:	sub	r1, lr, #100	; 0x64
   2a3c4:	add	r0, r1, r0, lsl #2
   2a3c8:	ldr	r0, [r0]
   2a3cc:	str	r0, [fp, #-44]	; 0xffffffd4
   2a3d0:	movw	r0, #1
   2a3d4:	str	r0, [fp, #-48]	; 0xffffffd0
   2a3d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a3dc:	cmp	r0, #0
   2a3e0:	beq	2a4a4 <__assert_fail@plt+0x18fa0>
   2a3e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a3e8:	and	r0, r0, #1
   2a3ec:	cmp	r0, #0
   2a3f0:	beq	2a478 <__assert_fail@plt+0x18f74>
   2a3f4:	movw	r0, #0
   2a3f8:	str	r0, [fp, #-32]	; 0xffffffe0
   2a3fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a400:	add	r1, sp, #20
   2a404:	add	r0, r1, r0, lsl #5
   2a408:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a40c:	add	r0, r0, r1, lsl #2
   2a410:	ldr	r0, [r0]
   2a414:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a418:	and	r0, r0, r1
   2a41c:	cmp	r0, #0
   2a420:	bne	2a438 <__assert_fail@plt+0x18f34>
   2a424:	b	2a428 <__assert_fail@plt+0x18f24>
   2a428:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a42c:	add	r0, r0, #1
   2a430:	str	r0, [fp, #-32]	; 0xffffffe0
   2a434:	b	2a3fc <__assert_fail@plt+0x18ef8>
   2a438:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a43c:	sub	lr, fp, #1024	; 0x400
   2a440:	sub	r1, lr, #56	; 0x38
   2a444:	ldr	r0, [r1, r0, lsl #2]
   2a448:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a44c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a450:	str	r0, [r1, r2, lsl #2]
   2a454:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a458:	sub	lr, fp, #2048	; 0x800
   2a45c:	sub	r1, lr, #56	; 0x38
   2a460:	ldr	r0, [r1, r0, lsl #2]
   2a464:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a468:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a46c:	add	r2, r2, #256	; 0x100
   2a470:	add	r1, r1, r2, lsl #2
   2a474:	str	r0, [r1]
   2a478:	b	2a47c <__assert_fail@plt+0x18f78>
   2a47c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a480:	lsl	r0, r0, #1
   2a484:	str	r0, [fp, #-48]	; 0xffffffd0
   2a488:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a48c:	lsr	r0, r0, #1
   2a490:	str	r0, [fp, #-44]	; 0xffffffd4
   2a494:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a498:	add	r0, r0, #1
   2a49c:	str	r0, [fp, #-36]	; 0xffffffdc
   2a4a0:	b	2a3d8 <__assert_fail@plt+0x18ed4>
   2a4a4:	b	2a4a8 <__assert_fail@plt+0x18fa4>
   2a4a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a4ac:	add	r0, r0, #1
   2a4b0:	str	r0, [fp, #-28]	; 0xffffffe4
   2a4b4:	b	2a3a0 <__assert_fail@plt+0x18e9c>
   2a4b8:	b	2a4bc <__assert_fail@plt+0x18fb8>
   2a4bc:	sub	lr, fp, #3072	; 0xc00
   2a4c0:	sub	r0, lr, #100	; 0x64
   2a4c4:	movw	r1, #10
   2a4c8:	bl	25da0 <__assert_fail@plt+0x1489c>
   2a4cc:	tst	r0, #1
   2a4d0:	beq	2a568 <__assert_fail@plt+0x19064>
   2a4d4:	movw	r0, #0
   2a4d8:	str	r0, [fp, #-32]	; 0xffffffe0
   2a4dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a4e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2a4e4:	cmp	r0, r1
   2a4e8:	bge	2a564 <__assert_fail@plt+0x19060>
   2a4ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a4f0:	add	r1, sp, #20
   2a4f4:	add	r0, r1, r0, lsl #5
   2a4f8:	movw	r1, #10
   2a4fc:	bl	25da0 <__assert_fail@plt+0x1489c>
   2a500:	tst	r0, #1
   2a504:	beq	2a550 <__assert_fail@plt+0x1904c>
   2a508:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a50c:	sub	lr, fp, #3072	; 0xc00
   2a510:	sub	r1, lr, #56	; 0x38
   2a514:	add	r0, r1, r0, lsl #2
   2a518:	ldr	r0, [r0]
   2a51c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a520:	str	r0, [r1, #40]	; 0x28
   2a524:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   2a528:	tst	r0, #1
   2a52c:	beq	2a54c <__assert_fail@plt+0x19048>
   2a530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a534:	sub	lr, fp, #3072	; 0xc00
   2a538:	sub	r1, lr, #56	; 0x38
   2a53c:	add	r0, r1, r0, lsl #2
   2a540:	ldr	r0, [r0]
   2a544:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a548:	str	r0, [r1, #1064]	; 0x428
   2a54c:	b	2a564 <__assert_fail@plt+0x19060>
   2a550:	b	2a554 <__assert_fail@plt+0x19050>
   2a554:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a558:	add	r0, r0, #1
   2a55c:	str	r0, [fp, #-32]	; 0xffffffe0
   2a560:	b	2a4dc <__assert_fail@plt+0x18fd8>
   2a564:	b	2a568 <__assert_fail@plt+0x19064>
   2a568:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   2a56c:	bl	34c20 <__assert_fail@plt+0x2371c>
   2a570:	movw	r0, #0
   2a574:	str	r0, [fp, #-28]	; 0xffffffe4
   2a578:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a57c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2a580:	cmp	r0, r1
   2a584:	bge	2a5b8 <__assert_fail@plt+0x190b4>
   2a588:	sub	lr, fp, #6144	; 0x1800
   2a58c:	sub	r0, lr, #100	; 0x64
   2a590:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a594:	movw	r2, #12
   2a598:	mul	r1, r1, r2
   2a59c:	add	r0, r0, r1
   2a5a0:	ldr	r0, [r0, #8]
   2a5a4:	bl	34c20 <__assert_fail@plt+0x2371c>
   2a5a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a5ac:	add	r0, r0, #1
   2a5b0:	str	r0, [fp, #-28]	; 0xffffffe4
   2a5b4:	b	2a578 <__assert_fail@plt+0x19074>
   2a5b8:	movw	r0, #1
   2a5bc:	and	r0, r0, #1
   2a5c0:	strb	r0, [fp, #-9]
   2a5c4:	ldrb	r0, [fp, #-9]
   2a5c8:	and	r0, r0, #1
   2a5cc:	sub	sp, fp, #8
   2a5d0:	pop	{r4, r5, fp, pc}
   2a5d4:	push	{fp, lr}
   2a5d8:	mov	fp, sp
   2a5dc:	sub	sp, sp, #184	; 0xb8
   2a5e0:	sub	ip, fp, #76	; 0x4c
   2a5e4:	str	r0, [fp, #-8]
   2a5e8:	str	r1, [fp, #-12]
   2a5ec:	str	r2, [fp, #-16]
   2a5f0:	str	r3, [fp, #-20]	; 0xffffffec
   2a5f4:	ldr	r0, [fp, #-12]
   2a5f8:	add	r0, r0, #4
   2a5fc:	str	r0, [fp, #-80]	; 0xffffffb0
   2a600:	mov	r0, ip
   2a604:	bl	2adb4 <__assert_fail@plt+0x198b0>
   2a608:	movw	r0, #0
   2a60c:	str	r0, [fp, #-44]	; 0xffffffd4
   2a610:	str	r0, [fp, #-32]	; 0xffffffe0
   2a614:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a618:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2a61c:	ldr	r1, [r1, #4]
   2a620:	cmp	r0, r1
   2a624:	bge	2ad40 <__assert_fail@plt+0x1983c>
   2a628:	ldr	r0, [fp, #-8]
   2a62c:	ldr	r0, [r0]
   2a630:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2a634:	ldr	r1, [r1, #8]
   2a638:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a63c:	ldr	r1, [r1, r2, lsl #2]
   2a640:	add	r0, r0, r1, lsl #3
   2a644:	str	r0, [fp, #-84]	; 0xffffffac
   2a648:	ldr	r0, [fp, #-84]	; 0xffffffac
   2a64c:	ldr	r0, [r0, #4]
   2a650:	and	r0, r0, #255	; 0xff
   2a654:	str	r0, [fp, #-88]	; 0xffffffa8
   2a658:	ldr	r0, [fp, #-84]	; 0xffffffac
   2a65c:	ldr	r0, [r0, #4]
   2a660:	lsr	r0, r0, #8
   2a664:	movw	r1, #1023	; 0x3ff
   2a668:	and	r0, r0, r1
   2a66c:	str	r0, [sp, #92]	; 0x5c
   2a670:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a674:	cmp	r0, #1
   2a678:	bne	2a690 <__assert_fail@plt+0x1918c>
   2a67c:	sub	r0, fp, #76	; 0x4c
   2a680:	ldr	r1, [fp, #-84]	; 0xffffffac
   2a684:	ldrb	r1, [r1]
   2a688:	bl	1f080 <__assert_fail@plt+0xdb7c>
   2a68c:	b	2a7a0 <__assert_fail@plt+0x1929c>
   2a690:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a694:	cmp	r0, #3
   2a698:	bne	2a6b0 <__assert_fail@plt+0x191ac>
   2a69c:	sub	r0, fp, #76	; 0x4c
   2a6a0:	ldr	r1, [fp, #-84]	; 0xffffffac
   2a6a4:	ldr	r1, [r1]
   2a6a8:	bl	2ade0 <__assert_fail@plt+0x198dc>
   2a6ac:	b	2a79c <__assert_fail@plt+0x19298>
   2a6b0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a6b4:	cmp	r0, #5
   2a6b8:	bne	2a72c <__assert_fail@plt+0x19228>
   2a6bc:	ldr	r0, [fp, #-8]
   2a6c0:	ldr	r0, [r0, #92]	; 0x5c
   2a6c4:	cmp	r0, #1
   2a6c8:	ble	2a6e0 <__assert_fail@plt+0x191dc>
   2a6cc:	sub	r0, fp, #76	; 0x4c
   2a6d0:	ldr	r1, [fp, #-8]
   2a6d4:	ldr	r1, [r1, #60]	; 0x3c
   2a6d8:	bl	2ade0 <__assert_fail@plt+0x198dc>
   2a6dc:	b	2a6e8 <__assert_fail@plt+0x191e4>
   2a6e0:	sub	r0, fp, #76	; 0x4c
   2a6e4:	bl	2ae38 <__assert_fail@plt+0x19934>
   2a6e8:	ldr	r0, [fp, #-8]
   2a6ec:	ldr	r0, [r0, #128]	; 0x80
   2a6f0:	and	r0, r0, #64	; 0x40
   2a6f4:	cmp	r0, #0
   2a6f8:	bne	2a708 <__assert_fail@plt+0x19204>
   2a6fc:	sub	r0, fp, #76	; 0x4c
   2a700:	movw	r1, #10
   2a704:	bl	2ae64 <__assert_fail@plt+0x19960>
   2a708:	ldr	r0, [fp, #-8]
   2a70c:	ldr	r0, [r0, #128]	; 0x80
   2a710:	and	r0, r0, #128	; 0x80
   2a714:	cmp	r0, #0
   2a718:	beq	2a728 <__assert_fail@plt+0x19224>
   2a71c:	sub	r0, fp, #76	; 0x4c
   2a720:	movw	r1, #0
   2a724:	bl	2ae64 <__assert_fail@plt+0x19960>
   2a728:	b	2a798 <__assert_fail@plt+0x19294>
   2a72c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a730:	cmp	r0, #7
   2a734:	bne	2a790 <__assert_fail@plt+0x1928c>
   2a738:	sub	r0, fp, #76	; 0x4c
   2a73c:	movw	r1, #255	; 0xff
   2a740:	and	r1, r1, #255	; 0xff
   2a744:	movw	r2, #16
   2a748:	bl	11420 <memset@plt>
   2a74c:	ldr	r0, [fp, #-8]
   2a750:	ldr	r0, [r0, #128]	; 0x80
   2a754:	and	r0, r0, #64	; 0x40
   2a758:	cmp	r0, #0
   2a75c:	bne	2a76c <__assert_fail@plt+0x19268>
   2a760:	sub	r0, fp, #76	; 0x4c
   2a764:	movw	r1, #10
   2a768:	bl	2ae64 <__assert_fail@plt+0x19960>
   2a76c:	ldr	r0, [fp, #-8]
   2a770:	ldr	r0, [r0, #128]	; 0x80
   2a774:	and	r0, r0, #128	; 0x80
   2a778:	cmp	r0, #0
   2a77c:	beq	2a78c <__assert_fail@plt+0x19288>
   2a780:	sub	r0, fp, #76	; 0x4c
   2a784:	movw	r1, #0
   2a788:	bl	2ae64 <__assert_fail@plt+0x19960>
   2a78c:	b	2a794 <__assert_fail@plt+0x19290>
   2a790:	b	2ad30 <__assert_fail@plt+0x1982c>
   2a794:	b	2a798 <__assert_fail@plt+0x19294>
   2a798:	b	2a79c <__assert_fail@plt+0x19298>
   2a79c:	b	2a7a0 <__assert_fail@plt+0x1929c>
   2a7a0:	ldr	r0, [sp, #92]	; 0x5c
   2a7a4:	cmp	r0, #0
   2a7a8:	beq	2aa7c <__assert_fail@plt+0x19578>
   2a7ac:	ldr	r0, [sp, #92]	; 0x5c
   2a7b0:	and	r0, r0, #32
   2a7b4:	cmp	r0, #0
   2a7b8:	beq	2a800 <__assert_fail@plt+0x192fc>
   2a7bc:	sub	r0, fp, #76	; 0x4c
   2a7c0:	movw	r1, #10
   2a7c4:	bl	25da0 <__assert_fail@plt+0x1489c>
   2a7c8:	sub	r1, fp, #76	; 0x4c
   2a7cc:	and	r0, r0, #1
   2a7d0:	strb	r0, [sp, #91]	; 0x5b
   2a7d4:	mov	r0, r1
   2a7d8:	bl	2adb4 <__assert_fail@plt+0x198b0>
   2a7dc:	ldrb	r0, [sp, #91]	; 0x5b
   2a7e0:	tst	r0, #1
   2a7e4:	beq	2a7f8 <__assert_fail@plt+0x192f4>
   2a7e8:	sub	r0, fp, #76	; 0x4c
   2a7ec:	movw	r1, #10
   2a7f0:	bl	1f080 <__assert_fail@plt+0xdb7c>
   2a7f4:	b	2a7fc <__assert_fail@plt+0x192f8>
   2a7f8:	b	2ad30 <__assert_fail@plt+0x1982c>
   2a7fc:	b	2a800 <__assert_fail@plt+0x192fc>
   2a800:	ldr	r0, [sp, #92]	; 0x5c
   2a804:	and	r0, r0, #128	; 0x80
   2a808:	cmp	r0, #0
   2a80c:	beq	2a81c <__assert_fail@plt+0x19318>
   2a810:	sub	r0, fp, #76	; 0x4c
   2a814:	bl	2adb4 <__assert_fail@plt+0x198b0>
   2a818:	b	2ad30 <__assert_fail@plt+0x1982c>
   2a81c:	ldr	r0, [sp, #92]	; 0x5c
   2a820:	and	r0, r0, #4
   2a824:	cmp	r0, #0
   2a828:	beq	2a948 <__assert_fail@plt+0x19444>
   2a82c:	movw	r0, #0
   2a830:	str	r0, [sp, #84]	; 0x54
   2a834:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a838:	cmp	r0, #1
   2a83c:	bne	2a864 <__assert_fail@plt+0x19360>
   2a840:	ldr	r0, [fp, #-84]	; 0xffffffac
   2a844:	ldr	r0, [r0, #4]
   2a848:	lsr	r0, r0, #22
   2a84c:	and	r0, r0, #1
   2a850:	cmp	r0, #0
   2a854:	bne	2a864 <__assert_fail@plt+0x19360>
   2a858:	sub	r0, fp, #76	; 0x4c
   2a85c:	bl	2adb4 <__assert_fail@plt+0x198b0>
   2a860:	b	2ad30 <__assert_fail@plt+0x1982c>
   2a864:	ldr	r0, [fp, #-8]
   2a868:	ldr	r0, [r0, #92]	; 0x5c
   2a86c:	cmp	r0, #1
   2a870:	ble	2a8dc <__assert_fail@plt+0x193d8>
   2a874:	movw	r0, #0
   2a878:	str	r0, [fp, #-36]	; 0xffffffdc
   2a87c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a880:	cmp	r0, #8
   2a884:	bge	2a8d8 <__assert_fail@plt+0x193d4>
   2a888:	ldr	r0, [fp, #-8]
   2a88c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a890:	add	r2, r0, r1, lsl #2
   2a894:	ldr	r2, [r2, #96]	; 0x60
   2a898:	ldr	r0, [r0, #60]	; 0x3c
   2a89c:	ldr	r0, [r0, r1, lsl #2]
   2a8a0:	mvn	r0, r0
   2a8a4:	orr	r0, r2, r0
   2a8a8:	sub	r2, fp, #76	; 0x4c
   2a8ac:	add	r1, r2, r1, lsl #2
   2a8b0:	ldr	r2, [r1]
   2a8b4:	and	r0, r2, r0
   2a8b8:	str	r0, [r1]
   2a8bc:	ldr	r1, [sp, #84]	; 0x54
   2a8c0:	orr	r0, r1, r0
   2a8c4:	str	r0, [sp, #84]	; 0x54
   2a8c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a8cc:	add	r0, r0, #1
   2a8d0:	str	r0, [fp, #-36]	; 0xffffffdc
   2a8d4:	b	2a87c <__assert_fail@plt+0x19378>
   2a8d8:	b	2a934 <__assert_fail@plt+0x19430>
   2a8dc:	movw	r0, #0
   2a8e0:	str	r0, [fp, #-36]	; 0xffffffdc
   2a8e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a8e8:	cmp	r0, #8
   2a8ec:	bge	2a930 <__assert_fail@plt+0x1942c>
   2a8f0:	ldr	r0, [fp, #-8]
   2a8f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a8f8:	add	r0, r0, r1, lsl #2
   2a8fc:	ldr	r0, [r0, #96]	; 0x60
   2a900:	sub	r2, fp, #76	; 0x4c
   2a904:	add	r1, r2, r1, lsl #2
   2a908:	ldr	r2, [r1]
   2a90c:	and	r0, r2, r0
   2a910:	str	r0, [r1]
   2a914:	ldr	r1, [sp, #84]	; 0x54
   2a918:	orr	r0, r1, r0
   2a91c:	str	r0, [sp, #84]	; 0x54
   2a920:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a924:	add	r0, r0, #1
   2a928:	str	r0, [fp, #-36]	; 0xffffffdc
   2a92c:	b	2a8e4 <__assert_fail@plt+0x193e0>
   2a930:	b	2a934 <__assert_fail@plt+0x19430>
   2a934:	ldr	r0, [sp, #84]	; 0x54
   2a938:	cmp	r0, #0
   2a93c:	bne	2a944 <__assert_fail@plt+0x19440>
   2a940:	b	2ad30 <__assert_fail@plt+0x1982c>
   2a944:	b	2a948 <__assert_fail@plt+0x19444>
   2a948:	ldr	r0, [sp, #92]	; 0x5c
   2a94c:	and	r0, r0, #8
   2a950:	cmp	r0, #0
   2a954:	beq	2aa78 <__assert_fail@plt+0x19574>
   2a958:	movw	r0, #0
   2a95c:	str	r0, [sp, #80]	; 0x50
   2a960:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a964:	cmp	r0, #1
   2a968:	bne	2a990 <__assert_fail@plt+0x1948c>
   2a96c:	ldr	r0, [fp, #-84]	; 0xffffffac
   2a970:	ldr	r0, [r0, #4]
   2a974:	lsr	r0, r0, #22
   2a978:	and	r0, r0, #1
   2a97c:	cmp	r0, #0
   2a980:	beq	2a990 <__assert_fail@plt+0x1948c>
   2a984:	sub	r0, fp, #76	; 0x4c
   2a988:	bl	2adb4 <__assert_fail@plt+0x198b0>
   2a98c:	b	2ad30 <__assert_fail@plt+0x1982c>
   2a990:	ldr	r0, [fp, #-8]
   2a994:	ldr	r0, [r0, #92]	; 0x5c
   2a998:	cmp	r0, #1
   2a99c:	ble	2aa08 <__assert_fail@plt+0x19504>
   2a9a0:	movw	r0, #0
   2a9a4:	str	r0, [fp, #-36]	; 0xffffffdc
   2a9a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a9ac:	cmp	r0, #8
   2a9b0:	bge	2aa04 <__assert_fail@plt+0x19500>
   2a9b4:	ldr	r0, [fp, #-8]
   2a9b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a9bc:	add	r2, r0, r1, lsl #2
   2a9c0:	ldr	r2, [r2, #96]	; 0x60
   2a9c4:	ldr	r0, [r0, #60]	; 0x3c
   2a9c8:	ldr	r0, [r0, r1, lsl #2]
   2a9cc:	and	r0, r2, r0
   2a9d0:	mvn	r0, r0
   2a9d4:	sub	r2, fp, #76	; 0x4c
   2a9d8:	add	r1, r2, r1, lsl #2
   2a9dc:	ldr	r2, [r1]
   2a9e0:	and	r0, r2, r0
   2a9e4:	str	r0, [r1]
   2a9e8:	ldr	r1, [sp, #80]	; 0x50
   2a9ec:	orr	r0, r1, r0
   2a9f0:	str	r0, [sp, #80]	; 0x50
   2a9f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a9f8:	add	r0, r0, #1
   2a9fc:	str	r0, [fp, #-36]	; 0xffffffdc
   2aa00:	b	2a9a8 <__assert_fail@plt+0x194a4>
   2aa04:	b	2aa64 <__assert_fail@plt+0x19560>
   2aa08:	movw	r0, #0
   2aa0c:	str	r0, [fp, #-36]	; 0xffffffdc
   2aa10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa14:	cmp	r0, #8
   2aa18:	bge	2aa60 <__assert_fail@plt+0x1955c>
   2aa1c:	ldr	r0, [fp, #-8]
   2aa20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2aa24:	add	r0, r0, r1, lsl #2
   2aa28:	ldr	r0, [r0, #96]	; 0x60
   2aa2c:	mvn	r0, r0
   2aa30:	sub	r2, fp, #76	; 0x4c
   2aa34:	add	r1, r2, r1, lsl #2
   2aa38:	ldr	r2, [r1]
   2aa3c:	and	r0, r2, r0
   2aa40:	str	r0, [r1]
   2aa44:	ldr	r1, [sp, #80]	; 0x50
   2aa48:	orr	r0, r1, r0
   2aa4c:	str	r0, [sp, #80]	; 0x50
   2aa50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa54:	add	r0, r0, #1
   2aa58:	str	r0, [fp, #-36]	; 0xffffffdc
   2aa5c:	b	2aa10 <__assert_fail@plt+0x1950c>
   2aa60:	b	2aa64 <__assert_fail@plt+0x19560>
   2aa64:	ldr	r0, [sp, #80]	; 0x50
   2aa68:	cmp	r0, #0
   2aa6c:	bne	2aa74 <__assert_fail@plt+0x19570>
   2aa70:	b	2ad30 <__assert_fail@plt+0x1982c>
   2aa74:	b	2aa78 <__assert_fail@plt+0x19574>
   2aa78:	b	2aa7c <__assert_fail@plt+0x19578>
   2aa7c:	movw	r0, #0
   2aa80:	str	r0, [fp, #-36]	; 0xffffffdc
   2aa84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2aa8c:	cmp	r0, r1
   2aa90:	bge	2acb8 <__assert_fail@plt+0x197b4>
   2aa94:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2aa98:	cmp	r0, #1
   2aa9c:	bne	2aac4 <__assert_fail@plt+0x195c0>
   2aaa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2aaa4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2aaa8:	add	r0, r0, r1, lsl #5
   2aaac:	ldr	r1, [fp, #-84]	; 0xffffffac
   2aab0:	ldrb	r1, [r1]
   2aab4:	bl	25da0 <__assert_fail@plt+0x1489c>
   2aab8:	tst	r0, #1
   2aabc:	bne	2aac4 <__assert_fail@plt+0x195c0>
   2aac0:	b	2aca8 <__assert_fail@plt+0x197a4>
   2aac4:	movw	r0, #0
   2aac8:	str	r0, [sp, #12]
   2aacc:	str	r0, [fp, #-40]	; 0xffffffd8
   2aad0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2aad4:	cmp	r0, #8
   2aad8:	bge	2ab24 <__assert_fail@plt+0x19620>
   2aadc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2aae0:	sub	r1, fp, #76	; 0x4c
   2aae4:	ldr	r1, [r1, r0, lsl #2]
   2aae8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2aaec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2aaf0:	add	r2, r2, r3, lsl #5
   2aaf4:	ldr	r2, [r2, r0, lsl #2]
   2aaf8:	and	r1, r1, r2
   2aafc:	add	r2, sp, #48	; 0x30
   2ab00:	add	r0, r2, r0, lsl #2
   2ab04:	str	r1, [r0]
   2ab08:	ldr	r0, [sp, #12]
   2ab0c:	orr	r0, r0, r1
   2ab10:	str	r0, [sp, #12]
   2ab14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ab18:	add	r0, r0, #1
   2ab1c:	str	r0, [fp, #-40]	; 0xffffffd8
   2ab20:	b	2aad0 <__assert_fail@plt+0x195cc>
   2ab24:	ldr	r0, [sp, #12]
   2ab28:	cmp	r0, #0
   2ab2c:	bne	2ab34 <__assert_fail@plt+0x19630>
   2ab30:	b	2aca8 <__assert_fail@plt+0x197a4>
   2ab34:	movw	r0, #0
   2ab38:	str	r0, [sp, #4]
   2ab3c:	str	r0, [sp, #8]
   2ab40:	str	r0, [fp, #-40]	; 0xffffffd8
   2ab44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ab48:	cmp	r0, #8
   2ab4c:	bge	2abc4 <__assert_fail@plt+0x196c0>
   2ab50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ab54:	sub	r1, fp, #76	; 0x4c
   2ab58:	ldr	r2, [r1, r0, lsl #2]
   2ab5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ab60:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2ab64:	add	r3, r3, ip, lsl #5
   2ab68:	ldr	r3, [r3, r0, lsl #2]
   2ab6c:	bic	r2, r3, r2
   2ab70:	add	r3, sp, #16
   2ab74:	str	r2, [r3, r0, lsl #2]
   2ab78:	ldr	r0, [sp, #8]
   2ab7c:	orr	r0, r0, r2
   2ab80:	str	r0, [sp, #8]
   2ab84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ab88:	add	r2, r1, r0, lsl #2
   2ab8c:	ldr	r1, [r1, r0, lsl #2]
   2ab90:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ab94:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2ab98:	add	r3, r3, ip, lsl #5
   2ab9c:	ldr	r0, [r3, r0, lsl #2]
   2aba0:	bic	r0, r1, r0
   2aba4:	str	r0, [r2]
   2aba8:	ldr	r1, [sp, #4]
   2abac:	orr	r0, r1, r0
   2abb0:	str	r0, [sp, #4]
   2abb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2abb8:	add	r0, r0, #1
   2abbc:	str	r0, [fp, #-40]	; 0xffffffd8
   2abc0:	b	2ab44 <__assert_fail@plt+0x19640>
   2abc4:	ldr	r0, [sp, #8]
   2abc8:	cmp	r0, #0
   2abcc:	beq	2ac4c <__assert_fail@plt+0x19748>
   2abd0:	add	r1, sp, #48	; 0x30
   2abd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2abd8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2abdc:	add	r0, r0, r2, lsl #5
   2abe0:	add	r2, sp, #16
   2abe4:	str	r1, [sp]
   2abe8:	mov	r1, r2
   2abec:	bl	2aeac <__assert_fail@plt+0x199a8>
   2abf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2abf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2abf8:	add	r0, r0, r1, lsl #5
   2abfc:	ldr	r1, [sp]
   2ac00:	bl	2aeac <__assert_fail@plt+0x199a8>
   2ac04:	ldr	r0, [fp, #-16]
   2ac08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ac0c:	movw	r2, #12
   2ac10:	mul	r1, r1, r2
   2ac14:	add	r0, r0, r1
   2ac18:	ldr	r1, [fp, #-16]
   2ac1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ac20:	mul	r2, r3, r2
   2ac24:	add	r1, r1, r2
   2ac28:	bl	23030 <__assert_fail@plt+0x11b2c>
   2ac2c:	str	r0, [fp, #-24]	; 0xffffffe8
   2ac30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ac34:	cmp	r0, #0
   2ac38:	beq	2ac40 <__assert_fail@plt+0x1973c>
   2ac3c:	b	2ad5c <__assert_fail@plt+0x19858>
   2ac40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ac44:	add	r0, r0, #1
   2ac48:	str	r0, [fp, #-44]	; 0xffffffd4
   2ac4c:	ldr	r0, [fp, #-16]
   2ac50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ac54:	add	r1, r1, r1, lsl #1
   2ac58:	add	r0, r0, r1, lsl #2
   2ac5c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2ac60:	ldr	r1, [r1, #8]
   2ac64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ac68:	add	r1, r1, r2, lsl #2
   2ac6c:	ldr	r1, [r1]
   2ac70:	bl	22c48 <__assert_fail@plt+0x11744>
   2ac74:	and	r0, r0, #1
   2ac78:	strb	r0, [fp, #-25]	; 0xffffffe7
   2ac7c:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   2ac80:	mvn	r1, #0
   2ac84:	eor	r0, r0, r1
   2ac88:	tst	r0, #1
   2ac8c:	beq	2ac94 <__assert_fail@plt+0x19790>
   2ac90:	b	2ad5c <__assert_fail@plt+0x19858>
   2ac94:	ldr	r0, [sp, #4]
   2ac98:	cmp	r0, #0
   2ac9c:	bne	2aca4 <__assert_fail@plt+0x197a0>
   2aca0:	b	2acb8 <__assert_fail@plt+0x197b4>
   2aca4:	b	2aca8 <__assert_fail@plt+0x197a4>
   2aca8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2acac:	add	r0, r0, #1
   2acb0:	str	r0, [fp, #-36]	; 0xffffffdc
   2acb4:	b	2aa84 <__assert_fail@plt+0x19580>
   2acb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2acbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2acc0:	cmp	r0, r1
   2acc4:	bne	2ad2c <__assert_fail@plt+0x19828>
   2acc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2accc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2acd0:	add	r0, r0, r1, lsl #5
   2acd4:	sub	r1, fp, #76	; 0x4c
   2acd8:	bl	2aeac <__assert_fail@plt+0x199a8>
   2acdc:	ldr	r0, [fp, #-16]
   2ace0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ace4:	add	r1, r1, r1, lsl #1
   2ace8:	add	r0, r0, r1, lsl #2
   2acec:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2acf0:	ldr	r1, [r1, #8]
   2acf4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2acf8:	add	r1, r1, r2, lsl #2
   2acfc:	ldr	r1, [r1]
   2ad00:	bl	21d7c <__assert_fail@plt+0x10878>
   2ad04:	str	r0, [fp, #-24]	; 0xffffffe8
   2ad08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ad0c:	cmp	r0, #0
   2ad10:	beq	2ad18 <__assert_fail@plt+0x19814>
   2ad14:	b	2ad5c <__assert_fail@plt+0x19858>
   2ad18:	sub	r0, fp, #76	; 0x4c
   2ad1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ad20:	add	r1, r1, #1
   2ad24:	str	r1, [fp, #-44]	; 0xffffffd4
   2ad28:	bl	2adb4 <__assert_fail@plt+0x198b0>
   2ad2c:	b	2ad30 <__assert_fail@plt+0x1982c>
   2ad30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ad34:	add	r0, r0, #1
   2ad38:	str	r0, [fp, #-32]	; 0xffffffe0
   2ad3c:	b	2a614 <__assert_fail@plt+0x19110>
   2ad40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ad44:	cmp	r0, #256	; 0x100
   2ad48:	bgt	2ad50 <__assert_fail@plt+0x1984c>
   2ad4c:	b	2ad50 <__assert_fail@plt+0x1984c>
   2ad50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ad54:	str	r0, [fp, #-4]
   2ad58:	b	2ada8 <__assert_fail@plt+0x198a4>
   2ad5c:	movw	r0, #0
   2ad60:	str	r0, [fp, #-36]	; 0xffffffdc
   2ad64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ad68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ad6c:	cmp	r0, r1
   2ad70:	bge	2ada0 <__assert_fail@plt+0x1989c>
   2ad74:	ldr	r0, [fp, #-16]
   2ad78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ad7c:	movw	r2, #12
   2ad80:	mul	r1, r1, r2
   2ad84:	add	r0, r0, r1
   2ad88:	ldr	r0, [r0, #8]
   2ad8c:	bl	34c20 <__assert_fail@plt+0x2371c>
   2ad90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ad94:	add	r0, r0, #1
   2ad98:	str	r0, [fp, #-36]	; 0xffffffdc
   2ad9c:	b	2ad64 <__assert_fail@plt+0x19860>
   2ada0:	mvn	r0, #0
   2ada4:	str	r0, [fp, #-4]
   2ada8:	ldr	r0, [fp, #-4]
   2adac:	mov	sp, fp
   2adb0:	pop	{fp, pc}
   2adb4:	push	{fp, lr}
   2adb8:	mov	fp, sp
   2adbc:	sub	sp, sp, #8
   2adc0:	str	r0, [sp, #4]
   2adc4:	ldr	r0, [sp, #4]
   2adc8:	movw	r1, #0
   2adcc:	and	r1, r1, #255	; 0xff
   2add0:	movw	r2, #32
   2add4:	bl	11420 <memset@plt>
   2add8:	mov	sp, fp
   2addc:	pop	{fp, pc}
   2ade0:	sub	sp, sp, #12
   2ade4:	str	r0, [sp, #8]
   2ade8:	str	r1, [sp, #4]
   2adec:	movw	r0, #0
   2adf0:	str	r0, [sp]
   2adf4:	ldr	r0, [sp]
   2adf8:	cmp	r0, #8
   2adfc:	bge	2ae30 <__assert_fail@plt+0x1992c>
   2ae00:	ldr	r0, [sp, #4]
   2ae04:	ldr	r1, [sp]
   2ae08:	ldr	r0, [r0, r1, lsl #2]
   2ae0c:	ldr	r2, [sp, #8]
   2ae10:	add	r1, r2, r1, lsl #2
   2ae14:	ldr	r2, [r1]
   2ae18:	orr	r0, r2, r0
   2ae1c:	str	r0, [r1]
   2ae20:	ldr	r0, [sp]
   2ae24:	add	r0, r0, #1
   2ae28:	str	r0, [sp]
   2ae2c:	b	2adf4 <__assert_fail@plt+0x198f0>
   2ae30:	add	sp, sp, #12
   2ae34:	bx	lr
   2ae38:	push	{fp, lr}
   2ae3c:	mov	fp, sp
   2ae40:	sub	sp, sp, #8
   2ae44:	str	r0, [sp, #4]
   2ae48:	ldr	r0, [sp, #4]
   2ae4c:	movw	r1, #255	; 0xff
   2ae50:	and	r1, r1, #255	; 0xff
   2ae54:	movw	r2, #32
   2ae58:	bl	11420 <memset@plt>
   2ae5c:	mov	sp, fp
   2ae60:	pop	{fp, pc}
   2ae64:	sub	sp, sp, #8
   2ae68:	str	r0, [sp, #4]
   2ae6c:	str	r1, [sp]
   2ae70:	ldr	r0, [sp]
   2ae74:	asr	r1, r0, #31
   2ae78:	add	r1, r0, r1, lsr #27
   2ae7c:	bic	r2, r1, #31
   2ae80:	sub	r0, r0, r2
   2ae84:	mov	r2, #1
   2ae88:	mvn	r0, r2, lsl r0
   2ae8c:	ldr	r2, [sp, #4]
   2ae90:	asr	r1, r1, #5
   2ae94:	add	r1, r2, r1, lsl #2
   2ae98:	ldr	r2, [r1]
   2ae9c:	and	r0, r2, r0
   2aea0:	str	r0, [r1]
   2aea4:	add	sp, sp, #8
   2aea8:	bx	lr
   2aeac:	push	{fp, lr}
   2aeb0:	mov	fp, sp
   2aeb4:	sub	sp, sp, #8
   2aeb8:	str	r0, [sp, #4]
   2aebc:	str	r1, [sp]
   2aec0:	ldr	r0, [sp, #4]
   2aec4:	ldr	r1, [sp]
   2aec8:	movw	r2, #32
   2aecc:	bl	112a0 <memcpy@plt>
   2aed0:	mov	sp, fp
   2aed4:	pop	{fp, pc}
   2aed8:	sub	sp, sp, #24
   2aedc:	str	r0, [sp, #16]
   2aee0:	str	r1, [sp, #12]
   2aee4:	str	r2, [sp, #8]
   2aee8:	ldr	r0, [sp, #16]
   2aeec:	ldr	r0, [r0]
   2aef0:	ldr	r1, [sp, #12]
   2aef4:	add	r0, r0, r1, lsl #3
   2aef8:	ldrb	r0, [r0, #4]
   2aefc:	str	r0, [sp, #4]
   2af00:	ldr	r0, [sp, #16]
   2af04:	ldr	r0, [r0]
   2af08:	ldr	r1, [sp, #12]
   2af0c:	add	r0, r0, r1, lsl #3
   2af10:	ldr	r0, [r0, #4]
   2af14:	lsr	r0, r0, #8
   2af18:	movw	r1, #1023	; 0x3ff
   2af1c:	and	r0, r0, r1
   2af20:	str	r0, [sp]
   2af24:	ldr	r0, [sp, #4]
   2af28:	cmp	r0, #2
   2af2c:	beq	2af40 <__assert_fail@plt+0x19a3c>
   2af30:	movw	r0, #0
   2af34:	and	r0, r0, #1
   2af38:	strb	r0, [sp, #23]
   2af3c:	b	2aff8 <__assert_fail@plt+0x19af4>
   2af40:	ldr	r0, [sp]
   2af44:	cmp	r0, #0
   2af48:	bne	2af5c <__assert_fail@plt+0x19a58>
   2af4c:	movw	r0, #1
   2af50:	and	r0, r0, #1
   2af54:	strb	r0, [sp, #23]
   2af58:	b	2aff8 <__assert_fail@plt+0x19af4>
   2af5c:	ldr	r0, [sp]
   2af60:	and	r0, r0, #4
   2af64:	cmp	r0, #0
   2af68:	beq	2af7c <__assert_fail@plt+0x19a78>
   2af6c:	ldr	r0, [sp, #8]
   2af70:	and	r0, r0, #1
   2af74:	cmp	r0, #0
   2af78:	beq	2afdc <__assert_fail@plt+0x19ad8>
   2af7c:	ldr	r0, [sp]
   2af80:	and	r0, r0, #8
   2af84:	cmp	r0, #0
   2af88:	beq	2af9c <__assert_fail@plt+0x19a98>
   2af8c:	ldr	r0, [sp, #8]
   2af90:	and	r0, r0, #1
   2af94:	cmp	r0, #0
   2af98:	bne	2afdc <__assert_fail@plt+0x19ad8>
   2af9c:	ldr	r0, [sp]
   2afa0:	and	r0, r0, #32
   2afa4:	cmp	r0, #0
   2afa8:	beq	2afbc <__assert_fail@plt+0x19ab8>
   2afac:	ldr	r0, [sp, #8]
   2afb0:	and	r0, r0, #2
   2afb4:	cmp	r0, #0
   2afb8:	beq	2afdc <__assert_fail@plt+0x19ad8>
   2afbc:	ldr	r0, [sp]
   2afc0:	and	r0, r0, #128	; 0x80
   2afc4:	cmp	r0, #0
   2afc8:	beq	2afec <__assert_fail@plt+0x19ae8>
   2afcc:	ldr	r0, [sp, #8]
   2afd0:	and	r0, r0, #8
   2afd4:	cmp	r0, #0
   2afd8:	bne	2afec <__assert_fail@plt+0x19ae8>
   2afdc:	movw	r0, #0
   2afe0:	and	r0, r0, #1
   2afe4:	strb	r0, [sp, #23]
   2afe8:	b	2aff8 <__assert_fail@plt+0x19af4>
   2afec:	movw	r0, #1
   2aff0:	and	r0, r0, #1
   2aff4:	strb	r0, [sp, #23]
   2aff8:	ldrb	r0, [sp, #23]
   2affc:	and	r0, r0, #1
   2b000:	add	sp, sp, #24
   2b004:	bx	lr
   2b008:	push	{fp, lr}
   2b00c:	mov	fp, sp
   2b010:	sub	sp, sp, #24
   2b014:	ldr	ip, [fp, #8]
   2b018:	str	r0, [fp, #-4]
   2b01c:	str	r1, [fp, #-8]
   2b020:	str	r2, [sp, #12]
   2b024:	str	r3, [sp, #8]
   2b028:	ldr	r0, [fp, #-8]
   2b02c:	ldr	r1, [fp, #-4]
   2b030:	str	r0, [r1]
   2b034:	ldr	r0, [sp, #12]
   2b038:	ldr	r1, [fp, #-4]
   2b03c:	str	r0, [r1, #4]
   2b040:	ldr	r0, [sp, #8]
   2b044:	ldr	r1, [fp, #-4]
   2b048:	str	r0, [r1, #8]
   2b04c:	ldr	r0, [fp, #8]
   2b050:	ldr	r1, [fp, #-4]
   2b054:	str	r0, [r1, #12]
   2b058:	ldr	r0, [fp, #-4]
   2b05c:	add	r0, r0, #16
   2b060:	movw	r1, #0
   2b064:	and	r1, r1, #255	; 0xff
   2b068:	movw	r2, #12
   2b06c:	str	ip, [sp, #4]
   2b070:	bl	11420 <memset@plt>
   2b074:	mov	sp, fp
   2b078:	pop	{fp, pc}
   2b07c:	push	{fp, lr}
   2b080:	mov	fp, sp
   2b084:	sub	sp, sp, #40	; 0x28
   2b088:	str	r0, [fp, #-8]
   2b08c:	str	r1, [fp, #-12]
   2b090:	movw	r0, #0
   2b094:	str	r0, [sp, #20]
   2b098:	ldr	r1, [fp, #-12]
   2b09c:	ldr	r1, [r1, #12]
   2b0a0:	str	r1, [sp, #16]
   2b0a4:	ldr	r1, [fp, #-8]
   2b0a8:	ldr	r1, [r1, #100]	; 0x64
   2b0ac:	cmp	r1, r0
   2b0b0:	beq	2b0d8 <__assert_fail@plt+0x19bd4>
   2b0b4:	ldr	r0, [fp, #-8]
   2b0b8:	ldr	r0, [r0, #100]	; 0x64
   2b0bc:	ldr	r1, [sp, #16]
   2b0c0:	add	r0, r0, r1, lsl #2
   2b0c4:	ldr	r0, [r0]
   2b0c8:	movw	r1, #0
   2b0cc:	cmp	r0, r1
   2b0d0:	beq	2b0d8 <__assert_fail@plt+0x19bd4>
   2b0d4:	b	2b0d8 <__assert_fail@plt+0x19bd4>
   2b0d8:	ldr	r0, [fp, #-12]
   2b0dc:	ldr	r1, [r0, #8]
   2b0e0:	add	r0, sp, #4
   2b0e4:	bl	21d7c <__assert_fail@plt+0x10878>
   2b0e8:	str	r0, [fp, #-16]
   2b0ec:	ldr	r0, [fp, #-16]
   2b0f0:	cmp	r0, #0
   2b0f4:	beq	2b104 <__assert_fail@plt+0x19c00>
   2b0f8:	ldr	r0, [fp, #-16]
   2b0fc:	str	r0, [fp, #-4]
   2b100:	b	2b268 <__assert_fail@plt+0x19d64>
   2b104:	ldr	r0, [fp, #-8]
   2b108:	ldr	r1, [fp, #-12]
   2b10c:	ldr	r2, [sp, #16]
   2b110:	add	r3, sp, #4
   2b114:	bl	2b3bc <__assert_fail@plt+0x19eb8>
   2b118:	str	r0, [fp, #-16]
   2b11c:	ldr	r0, [fp, #-16]
   2b120:	cmp	r0, #0
   2b124:	beq	2b12c <__assert_fail@plt+0x19c28>
   2b128:	b	2b258 <__assert_fail@plt+0x19d54>
   2b12c:	b	2b130 <__assert_fail@plt+0x19c2c>
   2b130:	ldr	r0, [sp, #16]
   2b134:	cmp	r0, #0
   2b138:	ble	2b250 <__assert_fail@plt+0x19d4c>
   2b13c:	ldr	r0, [fp, #-12]
   2b140:	ldr	r0, [r0]
   2b144:	ldr	r1, [sp, #16]
   2b148:	add	r0, r0, r1, lsl #2
   2b14c:	ldr	r0, [r0]
   2b150:	movw	r1, #0
   2b154:	cmp	r0, r1
   2b158:	bne	2b16c <__assert_fail@plt+0x19c68>
   2b15c:	ldr	r0, [sp, #20]
   2b160:	add	r0, r0, #1
   2b164:	str	r0, [sp]
   2b168:	b	2b178 <__assert_fail@plt+0x19c74>
   2b16c:	movw	r0, #0
   2b170:	str	r0, [sp]
   2b174:	b	2b178 <__assert_fail@plt+0x19c74>
   2b178:	ldr	r0, [sp]
   2b17c:	str	r0, [sp, #20]
   2b180:	ldr	r0, [sp, #20]
   2b184:	ldr	r1, [fp, #-8]
   2b188:	ldr	r1, [r1, #120]	; 0x78
   2b18c:	cmp	r0, r1
   2b190:	ble	2b1c4 <__assert_fail@plt+0x19cc0>
   2b194:	ldr	r0, [fp, #-12]
   2b198:	ldr	r0, [r0]
   2b19c:	ldr	r1, [sp, #16]
   2b1a0:	lsl	r2, r1, #2
   2b1a4:	movw	r1, #0
   2b1a8:	and	r1, r1, #255	; 0xff
   2b1ac:	bl	11420 <memset@plt>
   2b1b0:	ldr	r0, [sp, #12]
   2b1b4:	bl	34c20 <__assert_fail@plt+0x2371c>
   2b1b8:	movw	r0, #0
   2b1bc:	str	r0, [fp, #-4]
   2b1c0:	b	2b268 <__assert_fail@plt+0x19d64>
   2b1c4:	mov	r0, #0
   2b1c8:	str	r0, [sp, #8]
   2b1cc:	ldr	r0, [sp, #16]
   2b1d0:	sub	r0, r0, #1
   2b1d4:	str	r0, [sp, #16]
   2b1d8:	ldr	r0, [fp, #-8]
   2b1dc:	ldr	r0, [r0, #100]	; 0x64
   2b1e0:	ldr	r1, [sp, #16]
   2b1e4:	add	r0, r0, r1, lsl #2
   2b1e8:	ldr	r0, [r0]
   2b1ec:	movw	r1, #0
   2b1f0:	cmp	r0, r1
   2b1f4:	beq	2b224 <__assert_fail@plt+0x19d20>
   2b1f8:	ldr	r0, [fp, #-8]
   2b1fc:	ldr	r1, [fp, #-12]
   2b200:	ldr	r2, [sp, #16]
   2b204:	add	r3, sp, #4
   2b208:	bl	2b5c0 <__assert_fail@plt+0x1a0bc>
   2b20c:	str	r0, [fp, #-16]
   2b210:	ldr	r0, [fp, #-16]
   2b214:	cmp	r0, #0
   2b218:	beq	2b220 <__assert_fail@plt+0x19d1c>
   2b21c:	b	2b258 <__assert_fail@plt+0x19d54>
   2b220:	b	2b224 <__assert_fail@plt+0x19d20>
   2b224:	ldr	r0, [fp, #-8]
   2b228:	ldr	r1, [fp, #-12]
   2b22c:	ldr	r2, [sp, #16]
   2b230:	add	r3, sp, #4
   2b234:	bl	2b3bc <__assert_fail@plt+0x19eb8>
   2b238:	str	r0, [fp, #-16]
   2b23c:	ldr	r0, [fp, #-16]
   2b240:	cmp	r0, #0
   2b244:	beq	2b24c <__assert_fail@plt+0x19d48>
   2b248:	b	2b258 <__assert_fail@plt+0x19d54>
   2b24c:	b	2b130 <__assert_fail@plt+0x19c2c>
   2b250:	movw	r0, #0
   2b254:	str	r0, [fp, #-16]
   2b258:	ldr	r0, [sp, #12]
   2b25c:	bl	34c20 <__assert_fail@plt+0x2371c>
   2b260:	ldr	r0, [fp, #-16]
   2b264:	str	r0, [fp, #-4]
   2b268:	ldr	r0, [fp, #-4]
   2b26c:	mov	sp, fp
   2b270:	pop	{fp, pc}
   2b274:	push	{fp, lr}
   2b278:	mov	fp, sp
   2b27c:	sub	sp, sp, #48	; 0x30
   2b280:	str	r0, [fp, #-8]
   2b284:	str	r1, [fp, #-12]
   2b288:	str	r2, [fp, #-16]
   2b28c:	str	r3, [fp, #-20]	; 0xffffffec
   2b290:	movw	r0, #0
   2b294:	str	r0, [sp, #24]
   2b298:	ldr	r0, [sp, #24]
   2b29c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b2a0:	cmp	r0, r1
   2b2a4:	bge	2b3a8 <__assert_fail@plt+0x19ea4>
   2b2a8:	ldr	r0, [fp, #-12]
   2b2ac:	ldr	r1, [sp, #24]
   2b2b0:	add	r0, r0, r1, lsl #2
   2b2b4:	ldr	r0, [r0]
   2b2b8:	movw	r1, #0
   2b2bc:	cmp	r0, r1
   2b2c0:	bne	2b2e0 <__assert_fail@plt+0x19ddc>
   2b2c4:	ldr	r0, [fp, #-16]
   2b2c8:	ldr	r1, [sp, #24]
   2b2cc:	ldr	r0, [r0, r1, lsl #2]
   2b2d0:	ldr	r2, [fp, #-12]
   2b2d4:	add	r1, r2, r1, lsl #2
   2b2d8:	str	r0, [r1]
   2b2dc:	b	2b394 <__assert_fail@plt+0x19e90>
   2b2e0:	ldr	r0, [fp, #-16]
   2b2e4:	ldr	r1, [sp, #24]
   2b2e8:	add	r0, r0, r1, lsl #2
   2b2ec:	ldr	r0, [r0]
   2b2f0:	movw	r1, #0
   2b2f4:	cmp	r0, r1
   2b2f8:	beq	2b390 <__assert_fail@plt+0x19e8c>
   2b2fc:	ldr	r0, [fp, #-12]
   2b300:	ldr	r1, [sp, #24]
   2b304:	ldr	r0, [r0, r1, lsl #2]
   2b308:	add	r0, r0, #4
   2b30c:	ldr	r2, [fp, #-16]
   2b310:	add	r1, r2, r1, lsl #2
   2b314:	ldr	r1, [r1]
   2b318:	add	r2, r1, #4
   2b31c:	add	r1, sp, #8
   2b320:	str	r0, [sp, #4]
   2b324:	mov	r0, r1
   2b328:	ldr	r1, [sp, #4]
   2b32c:	bl	27224 <__assert_fail@plt+0x15d20>
   2b330:	str	r0, [sp, #20]
   2b334:	ldr	r0, [sp, #20]
   2b338:	cmp	r0, #0
   2b33c:	beq	2b34c <__assert_fail@plt+0x19e48>
   2b340:	ldr	r0, [sp, #20]
   2b344:	str	r0, [fp, #-4]
   2b348:	b	2b3b0 <__assert_fail@plt+0x19eac>
   2b34c:	ldr	r1, [fp, #-8]
   2b350:	add	r0, sp, #20
   2b354:	add	r2, sp, #8
   2b358:	bl	28e04 <__assert_fail@plt+0x17900>
   2b35c:	ldr	r1, [fp, #-12]
   2b360:	ldr	r2, [sp, #24]
   2b364:	add	r1, r1, r2, lsl #2
   2b368:	str	r0, [r1]
   2b36c:	ldr	r0, [sp, #16]
   2b370:	bl	34c20 <__assert_fail@plt+0x2371c>
   2b374:	ldr	r0, [sp, #20]
   2b378:	cmp	r0, #0
   2b37c:	beq	2b38c <__assert_fail@plt+0x19e88>
   2b380:	ldr	r0, [sp, #20]
   2b384:	str	r0, [fp, #-4]
   2b388:	b	2b3b0 <__assert_fail@plt+0x19eac>
   2b38c:	b	2b390 <__assert_fail@plt+0x19e8c>
   2b390:	b	2b394 <__assert_fail@plt+0x19e90>
   2b394:	b	2b398 <__assert_fail@plt+0x19e94>
   2b398:	ldr	r0, [sp, #24]
   2b39c:	add	r0, r0, #1
   2b3a0:	str	r0, [sp, #24]
   2b3a4:	b	2b298 <__assert_fail@plt+0x19d94>
   2b3a8:	movw	r0, #0
   2b3ac:	str	r0, [fp, #-4]
   2b3b0:	ldr	r0, [fp, #-4]
   2b3b4:	mov	sp, fp
   2b3b8:	pop	{fp, pc}
   2b3bc:	push	{fp, lr}
   2b3c0:	mov	fp, sp
   2b3c4:	sub	sp, sp, #48	; 0x30
   2b3c8:	str	r0, [fp, #-8]
   2b3cc:	str	r1, [fp, #-12]
   2b3d0:	str	r2, [fp, #-16]
   2b3d4:	str	r3, [fp, #-20]	; 0xffffffec
   2b3d8:	ldr	r0, [fp, #-8]
   2b3dc:	ldr	r0, [r0, #84]	; 0x54
   2b3e0:	str	r0, [sp, #24]
   2b3e4:	mov	r0, #0
   2b3e8:	str	r0, [sp, #20]
   2b3ec:	ldr	r0, [fp, #-8]
   2b3f0:	ldr	r0, [r0, #100]	; 0x64
   2b3f4:	ldr	r1, [fp, #-16]
   2b3f8:	add	r0, r0, r1, lsl #2
   2b3fc:	ldr	r0, [r0]
   2b400:	movw	r1, #0
   2b404:	cmp	r0, r1
   2b408:	bne	2b418 <__assert_fail@plt+0x19f14>
   2b40c:	movw	r0, #0
   2b410:	str	r0, [sp, #12]
   2b414:	b	2b434 <__assert_fail@plt+0x19f30>
   2b418:	ldr	r0, [fp, #-8]
   2b41c:	ldr	r0, [r0, #100]	; 0x64
   2b420:	ldr	r1, [fp, #-16]
   2b424:	add	r0, r0, r1, lsl #2
   2b428:	ldr	r0, [r0]
   2b42c:	add	r0, r0, #4
   2b430:	str	r0, [sp, #12]
   2b434:	ldr	r0, [sp, #12]
   2b438:	str	r0, [sp, #16]
   2b43c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b440:	ldr	r0, [r0, #4]
   2b444:	cmp	r0, #0
   2b448:	bne	2b468 <__assert_fail@plt+0x19f64>
   2b44c:	ldr	r0, [fp, #-12]
   2b450:	ldr	r0, [r0]
   2b454:	ldr	r1, [fp, #-16]
   2b458:	add	r0, r0, r1, lsl #2
   2b45c:	movw	r1, #0
   2b460:	str	r1, [r0]
   2b464:	b	2b544 <__assert_fail@plt+0x1a040>
   2b468:	ldr	r0, [sp, #16]
   2b46c:	movw	r1, #0
   2b470:	cmp	r0, r1
   2b474:	beq	2b504 <__assert_fail@plt+0x1a000>
   2b478:	ldr	r0, [sp, #24]
   2b47c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b480:	ldr	r2, [sp, #16]
   2b484:	bl	2b814 <__assert_fail@plt+0x1a310>
   2b488:	str	r0, [sp, #20]
   2b48c:	ldr	r0, [sp, #20]
   2b490:	cmp	r0, #0
   2b494:	beq	2b4a4 <__assert_fail@plt+0x19fa0>
   2b498:	ldr	r0, [sp, #20]
   2b49c:	str	r0, [fp, #-4]
   2b4a0:	b	2b5b4 <__assert_fail@plt+0x1a0b0>
   2b4a4:	ldr	r0, [fp, #-12]
   2b4a8:	ldr	r0, [r0, #20]
   2b4ac:	cmp	r0, #0
   2b4b0:	beq	2b500 <__assert_fail@plt+0x19ffc>
   2b4b4:	ldr	r0, [sp, #24]
   2b4b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b4bc:	ldr	r2, [sp, #16]
   2b4c0:	ldr	r3, [fp, #-12]
   2b4c4:	add	r3, r3, #16
   2b4c8:	ldr	ip, [fp, #-8]
   2b4cc:	ldr	ip, [ip, #116]	; 0x74
   2b4d0:	ldr	lr, [fp, #-16]
   2b4d4:	str	ip, [sp]
   2b4d8:	str	lr, [sp, #4]
   2b4dc:	bl	2b948 <__assert_fail@plt+0x1a444>
   2b4e0:	str	r0, [sp, #20]
   2b4e4:	ldr	r0, [sp, #20]
   2b4e8:	cmp	r0, #0
   2b4ec:	beq	2b4fc <__assert_fail@plt+0x19ff8>
   2b4f0:	ldr	r0, [sp, #20]
   2b4f4:	str	r0, [fp, #-4]
   2b4f8:	b	2b5b4 <__assert_fail@plt+0x1a0b0>
   2b4fc:	b	2b500 <__assert_fail@plt+0x19ffc>
   2b500:	b	2b504 <__assert_fail@plt+0x1a000>
   2b504:	ldr	r1, [sp, #24]
   2b508:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b50c:	add	r0, sp, #20
   2b510:	bl	28e04 <__assert_fail@plt+0x17900>
   2b514:	ldr	r1, [fp, #-12]
   2b518:	ldr	r1, [r1]
   2b51c:	ldr	r2, [fp, #-16]
   2b520:	add	r1, r1, r2, lsl #2
   2b524:	str	r0, [r1]
   2b528:	ldr	r0, [sp, #20]
   2b52c:	cmp	r0, #0
   2b530:	beq	2b540 <__assert_fail@plt+0x1a03c>
   2b534:	ldr	r0, [sp, #20]
   2b538:	str	r0, [fp, #-4]
   2b53c:	b	2b5b4 <__assert_fail@plt+0x1a0b0>
   2b540:	b	2b544 <__assert_fail@plt+0x1a040>
   2b544:	ldr	r0, [sp, #16]
   2b548:	movw	r1, #0
   2b54c:	cmp	r0, r1
   2b550:	beq	2b5ac <__assert_fail@plt+0x1a0a8>
   2b554:	ldr	r0, [fp, #-8]
   2b558:	ldr	r0, [r0, #100]	; 0x64
   2b55c:	ldr	r1, [fp, #-16]
   2b560:	ldr	r0, [r0, r1, lsl #2]
   2b564:	ldrb	r0, [r0, #52]	; 0x34
   2b568:	ubfx	r0, r0, #6, #1
   2b56c:	and	r0, r0, #255	; 0xff
   2b570:	cmp	r0, #0
   2b574:	beq	2b5ac <__assert_fail@plt+0x1a0a8>
   2b578:	ldr	r0, [fp, #-8]
   2b57c:	ldr	r1, [fp, #-12]
   2b580:	ldr	r2, [fp, #-16]
   2b584:	ldr	r3, [sp, #16]
   2b588:	bl	2bd10 <__assert_fail@plt+0x1a80c>
   2b58c:	str	r0, [sp, #20]
   2b590:	ldr	r0, [sp, #20]
   2b594:	cmp	r0, #0
   2b598:	beq	2b5a8 <__assert_fail@plt+0x1a0a4>
   2b59c:	ldr	r0, [sp, #20]
   2b5a0:	str	r0, [fp, #-4]
   2b5a4:	b	2b5b4 <__assert_fail@plt+0x1a0b0>
   2b5a8:	b	2b5ac <__assert_fail@plt+0x1a0a8>
   2b5ac:	movw	r0, #0
   2b5b0:	str	r0, [fp, #-4]
   2b5b4:	ldr	r0, [fp, #-4]
   2b5b8:	mov	sp, fp
   2b5bc:	pop	{fp, pc}
   2b5c0:	push	{fp, lr}
   2b5c4:	mov	fp, sp
   2b5c8:	sub	sp, sp, #56	; 0x38
   2b5cc:	str	r0, [fp, #-8]
   2b5d0:	str	r1, [fp, #-12]
   2b5d4:	str	r2, [fp, #-16]
   2b5d8:	str	r3, [fp, #-20]	; 0xffffffec
   2b5dc:	ldr	r0, [fp, #-8]
   2b5e0:	ldr	r0, [r0, #84]	; 0x54
   2b5e4:	str	r0, [fp, #-24]	; 0xffffffe8
   2b5e8:	ldr	r0, [fp, #-8]
   2b5ec:	ldr	r0, [r0, #100]	; 0x64
   2b5f0:	ldr	r1, [fp, #-16]
   2b5f4:	add	r0, r0, r1, lsl #2
   2b5f8:	ldr	r0, [r0]
   2b5fc:	add	r0, r0, #16
   2b600:	str	r0, [sp, #28]
   2b604:	movw	r0, #0
   2b608:	str	r0, [sp, #24]
   2b60c:	ldr	r0, [sp, #24]
   2b610:	ldr	r1, [sp, #28]
   2b614:	ldr	r1, [r1, #4]
   2b618:	cmp	r0, r1
   2b61c:	bge	2b800 <__assert_fail@plt+0x1a2fc>
   2b620:	ldr	r0, [sp, #28]
   2b624:	ldr	r0, [r0, #8]
   2b628:	ldr	r1, [sp, #24]
   2b62c:	ldr	r0, [r0, r1, lsl #2]
   2b630:	str	r0, [sp, #20]
   2b634:	mov	r0, #0
   2b638:	str	r0, [sp, #16]
   2b63c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b640:	ldr	r0, [r0]
   2b644:	ldr	r1, [sp, #20]
   2b648:	add	r0, r0, r1, lsl #3
   2b64c:	ldr	r0, [r0, #4]
   2b650:	and	r0, r0, #255	; 0xff
   2b654:	and	r0, r0, #8
   2b658:	cmp	r0, #0
   2b65c:	bne	2b664 <__assert_fail@plt+0x1a160>
   2b660:	b	2b664 <__assert_fail@plt+0x1a160>
   2b664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b668:	ldr	r0, [r0]
   2b66c:	ldr	r1, [sp, #20]
   2b670:	add	r0, r0, r1, lsl #3
   2b674:	ldr	r0, [r0, #4]
   2b678:	lsr	r0, r0, #20
   2b67c:	and	r0, r0, #1
   2b680:	cmp	r0, #0
   2b684:	beq	2b6ac <__assert_fail@plt+0x1a1a8>
   2b688:	ldr	r0, [fp, #-8]
   2b68c:	ldr	r1, [fp, #-12]
   2b690:	ldr	r2, [sp, #20]
   2b694:	ldr	r3, [fp, #-16]
   2b698:	ldr	ip, [fp, #-12]
   2b69c:	ldr	ip, [ip, #12]
   2b6a0:	str	ip, [sp]
   2b6a4:	bl	2cd9c <__assert_fail@plt+0x1b898>
   2b6a8:	str	r0, [sp, #16]
   2b6ac:	ldr	r0, [sp, #16]
   2b6b0:	cmp	r0, #0
   2b6b4:	bne	2b740 <__assert_fail@plt+0x1a23c>
   2b6b8:	ldr	r0, [fp, #-8]
   2b6bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b6c0:	ldr	r1, [r1]
   2b6c4:	ldr	r2, [sp, #20]
   2b6c8:	add	r1, r1, r2, lsl #3
   2b6cc:	ldr	r2, [fp, #-16]
   2b6d0:	bl	29744 <__assert_fail@plt+0x18240>
   2b6d4:	tst	r0, #1
   2b6d8:	beq	2b740 <__assert_fail@plt+0x1a23c>
   2b6dc:	ldr	r0, [fp, #-12]
   2b6e0:	ldr	r0, [r0]
   2b6e4:	ldr	r1, [fp, #-16]
   2b6e8:	add	r1, r1, #1
   2b6ec:	add	r0, r0, r1, lsl #2
   2b6f0:	ldr	r0, [r0]
   2b6f4:	movw	r1, #0
   2b6f8:	cmp	r0, r1
   2b6fc:	beq	2b740 <__assert_fail@plt+0x1a23c>
   2b700:	ldr	r0, [fp, #-12]
   2b704:	ldr	r0, [r0]
   2b708:	ldr	r1, [fp, #-16]
   2b70c:	add	r0, r0, r1, lsl #2
   2b710:	ldr	r0, [r0, #4]
   2b714:	add	r0, r0, #4
   2b718:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b71c:	ldr	r1, [r1, #12]
   2b720:	ldr	r2, [sp, #20]
   2b724:	add	r1, r1, r2, lsl #2
   2b728:	ldr	r1, [r1]
   2b72c:	bl	23104 <__assert_fail@plt+0x11c00>
   2b730:	cmp	r0, #0
   2b734:	beq	2b740 <__assert_fail@plt+0x1a23c>
   2b738:	movw	r0, #1
   2b73c:	str	r0, [sp, #16]
   2b740:	ldr	r0, [sp, #16]
   2b744:	cmp	r0, #0
   2b748:	bne	2b750 <__assert_fail@plt+0x1a24c>
   2b74c:	b	2b7f0 <__assert_fail@plt+0x1a2ec>
   2b750:	ldr	r0, [fp, #-12]
   2b754:	ldr	r0, [r0, #20]
   2b758:	cmp	r0, #0
   2b75c:	beq	2b7b8 <__assert_fail@plt+0x1a2b4>
   2b760:	ldr	r0, [fp, #-16]
   2b764:	ldr	r1, [sp, #16]
   2b768:	add	r0, r0, r1
   2b76c:	str	r0, [sp, #8]
   2b770:	ldr	r0, [fp, #-8]
   2b774:	ldr	r1, [fp, #-12]
   2b778:	add	r1, r1, #16
   2b77c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b780:	ldr	r2, [r2, #12]
   2b784:	ldr	r3, [sp, #20]
   2b788:	add	r2, r2, r3, lsl #2
   2b78c:	ldr	r2, [r2]
   2b790:	ldr	r3, [sp, #8]
   2b794:	ldr	ip, [sp, #20]
   2b798:	ldr	lr, [fp, #-16]
   2b79c:	str	ip, [sp]
   2b7a0:	str	lr, [sp, #4]
   2b7a4:	bl	2c814 <__assert_fail@plt+0x1b310>
   2b7a8:	tst	r0, #1
   2b7ac:	beq	2b7b4 <__assert_fail@plt+0x1a2b0>
   2b7b0:	b	2b7f0 <__assert_fail@plt+0x1a2ec>
   2b7b4:	b	2b7b8 <__assert_fail@plt+0x1a2b4>
   2b7b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b7bc:	ldr	r1, [sp, #20]
   2b7c0:	bl	22c48 <__assert_fail@plt+0x11744>
   2b7c4:	and	r0, r0, #1
   2b7c8:	strb	r0, [sp, #15]
   2b7cc:	ldrb	r0, [sp, #15]
   2b7d0:	mvn	r1, #0
   2b7d4:	eor	r0, r0, r1
   2b7d8:	tst	r0, #1
   2b7dc:	beq	2b7ec <__assert_fail@plt+0x1a2e8>
   2b7e0:	movw	r0, #12
   2b7e4:	str	r0, [fp, #-4]
   2b7e8:	b	2b808 <__assert_fail@plt+0x1a304>
   2b7ec:	b	2b7f0 <__assert_fail@plt+0x1a2ec>
   2b7f0:	ldr	r0, [sp, #24]
   2b7f4:	add	r0, r0, #1
   2b7f8:	str	r0, [sp, #24]
   2b7fc:	b	2b60c <__assert_fail@plt+0x1a108>
   2b800:	movw	r0, #0
   2b804:	str	r0, [fp, #-4]
   2b808:	ldr	r0, [fp, #-4]
   2b80c:	mov	sp, fp
   2b810:	pop	{fp, pc}
   2b814:	push	{fp, lr}
   2b818:	mov	fp, sp
   2b81c:	sub	sp, sp, #32
   2b820:	str	r0, [fp, #-8]
   2b824:	str	r1, [fp, #-12]
   2b828:	str	r2, [sp, #16]
   2b82c:	movw	r0, #0
   2b830:	str	r0, [sp, #12]
   2b834:	ldr	r1, [fp, #-8]
   2b838:	ldr	r2, [fp, #-12]
   2b83c:	add	r0, sp, #12
   2b840:	bl	28e04 <__assert_fail@plt+0x17900>
   2b844:	str	r0, [sp, #4]
   2b848:	ldr	r0, [sp, #12]
   2b84c:	cmp	r0, #0
   2b850:	beq	2b860 <__assert_fail@plt+0x1a35c>
   2b854:	ldr	r0, [sp, #12]
   2b858:	str	r0, [fp, #-4]
   2b85c:	b	2b93c <__assert_fail@plt+0x1a438>
   2b860:	ldr	r0, [sp, #4]
   2b864:	ldr	r0, [r0, #28]
   2b868:	cmp	r0, #0
   2b86c:	bne	2b924 <__assert_fail@plt+0x1a420>
   2b870:	ldr	r0, [sp, #4]
   2b874:	add	r0, r0, #28
   2b878:	ldr	r1, [fp, #-12]
   2b87c:	ldr	r1, [r1, #4]
   2b880:	bl	221e0 <__assert_fail@plt+0x10cdc>
   2b884:	str	r0, [sp, #12]
   2b888:	ldr	r0, [sp, #12]
   2b88c:	cmp	r0, #0
   2b890:	beq	2b8a0 <__assert_fail@plt+0x1a39c>
   2b894:	movw	r0, #12
   2b898:	str	r0, [fp, #-4]
   2b89c:	b	2b93c <__assert_fail@plt+0x1a438>
   2b8a0:	movw	r0, #0
   2b8a4:	str	r0, [sp, #8]
   2b8a8:	ldr	r0, [sp, #8]
   2b8ac:	ldr	r1, [fp, #-12]
   2b8b0:	ldr	r1, [r1, #4]
   2b8b4:	cmp	r0, r1
   2b8b8:	bge	2b920 <__assert_fail@plt+0x1a41c>
   2b8bc:	ldr	r0, [sp, #4]
   2b8c0:	add	r0, r0, #28
   2b8c4:	ldr	r1, [fp, #-8]
   2b8c8:	ldr	r1, [r1, #28]
   2b8cc:	ldr	r2, [fp, #-12]
   2b8d0:	ldr	r2, [r2, #8]
   2b8d4:	ldr	r3, [sp, #8]
   2b8d8:	add	r2, r2, r3, lsl #2
   2b8dc:	ldr	r2, [r2]
   2b8e0:	movw	r3, #12
   2b8e4:	mul	r2, r2, r3
   2b8e8:	add	r1, r1, r2
   2b8ec:	bl	22758 <__assert_fail@plt+0x11254>
   2b8f0:	str	r0, [sp, #12]
   2b8f4:	ldr	r0, [sp, #12]
   2b8f8:	cmp	r0, #0
   2b8fc:	beq	2b90c <__assert_fail@plt+0x1a408>
   2b900:	movw	r0, #12
   2b904:	str	r0, [fp, #-4]
   2b908:	b	2b93c <__assert_fail@plt+0x1a438>
   2b90c:	b	2b910 <__assert_fail@plt+0x1a40c>
   2b910:	ldr	r0, [sp, #8]
   2b914:	add	r0, r0, #1
   2b918:	str	r0, [sp, #8]
   2b91c:	b	2b8a8 <__assert_fail@plt+0x1a3a4>
   2b920:	b	2b924 <__assert_fail@plt+0x1a420>
   2b924:	ldr	r0, [fp, #-12]
   2b928:	ldr	r1, [sp, #16]
   2b92c:	ldr	r2, [sp, #4]
   2b930:	add	r2, r2, #28
   2b934:	bl	2c140 <__assert_fail@plt+0x1ac3c>
   2b938:	str	r0, [fp, #-4]
   2b93c:	ldr	r0, [fp, #-4]
   2b940:	mov	sp, fp
   2b944:	pop	{fp, pc}
   2b948:	push	{fp, lr}
   2b94c:	mov	fp, sp
   2b950:	sub	sp, sp, #72	; 0x48
   2b954:	ldr	ip, [fp, #12]
   2b958:	ldr	lr, [fp, #8]
   2b95c:	str	r0, [fp, #-8]
   2b960:	str	r1, [fp, #-12]
   2b964:	str	r2, [fp, #-16]
   2b968:	str	r3, [fp, #-20]	; 0xffffffec
   2b96c:	movw	r0, #0
   2b970:	str	r0, [fp, #-32]	; 0xffffffe0
   2b974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b978:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b97c:	ldr	r1, [r1, #4]
   2b980:	cmp	r0, r1
   2b984:	bge	2bcfc <__assert_fail@plt+0x1a7f8>
   2b988:	ldr	r0, [fp, #8]
   2b98c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b990:	ldr	r1, [r1, #8]
   2b994:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2b998:	add	r1, r1, r2, lsl #2
   2b99c:	ldr	r1, [r1]
   2b9a0:	movw	r2, #24
   2b9a4:	mul	r1, r1, r2
   2b9a8:	add	r0, r0, r1
   2b9ac:	str	r0, [sp, #32]
   2b9b0:	ldr	r0, [fp, #12]
   2b9b4:	ldr	r1, [sp, #32]
   2b9b8:	ldr	r1, [r1, #8]
   2b9bc:	cmp	r0, r1
   2b9c0:	ble	2b9d8 <__assert_fail@plt+0x1a4d4>
   2b9c4:	ldr	r0, [sp, #32]
   2b9c8:	ldr	r0, [r0, #4]
   2b9cc:	ldr	r1, [fp, #12]
   2b9d0:	cmp	r0, r1
   2b9d4:	bge	2b9dc <__assert_fail@plt+0x1a4d8>
   2b9d8:	b	2bcec <__assert_fail@plt+0x1a7e8>
   2b9dc:	ldr	r0, [fp, #-8]
   2b9e0:	ldr	r0, [r0]
   2b9e4:	ldr	r1, [sp, #32]
   2b9e8:	ldr	r1, [r1]
   2b9ec:	add	r0, r0, r1, lsl #3
   2b9f0:	ldr	r0, [r0]
   2b9f4:	str	r0, [sp, #36]	; 0x24
   2b9f8:	ldr	r0, [sp, #32]
   2b9fc:	ldr	r0, [r0, #12]
   2ba00:	ldr	r1, [fp, #12]
   2ba04:	cmp	r0, r1
   2ba08:	bne	2bc14 <__assert_fail@plt+0x1a710>
   2ba0c:	mvn	r0, #0
   2ba10:	str	r0, [sp, #28]
   2ba14:	str	r0, [sp, #24]
   2ba18:	movw	r0, #0
   2ba1c:	str	r0, [fp, #-28]	; 0xffffffe4
   2ba20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ba24:	ldr	r1, [fp, #-12]
   2ba28:	ldr	r1, [r1, #4]
   2ba2c:	cmp	r0, r1
   2ba30:	bge	2bae8 <__assert_fail@plt+0x1a5e4>
   2ba34:	ldr	r0, [fp, #-12]
   2ba38:	ldr	r0, [r0, #8]
   2ba3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ba40:	ldr	r0, [r0, r1, lsl #2]
   2ba44:	str	r0, [sp, #20]
   2ba48:	ldr	r0, [fp, #-8]
   2ba4c:	ldr	r0, [r0]
   2ba50:	ldr	r1, [sp, #20]
   2ba54:	add	r0, r0, r1, lsl #3
   2ba58:	ldr	r0, [r0, #4]
   2ba5c:	and	r0, r0, #255	; 0xff
   2ba60:	str	r0, [sp, #16]
   2ba64:	ldr	r0, [sp, #16]
   2ba68:	cmp	r0, #8
   2ba6c:	bne	2ba9c <__assert_fail@plt+0x1a598>
   2ba70:	ldr	r0, [sp, #36]	; 0x24
   2ba74:	ldr	r1, [fp, #-8]
   2ba78:	ldr	r1, [r1]
   2ba7c:	ldr	r2, [sp, #20]
   2ba80:	add	r1, r1, r2, lsl #3
   2ba84:	ldr	r1, [r1]
   2ba88:	cmp	r0, r1
   2ba8c:	bne	2ba9c <__assert_fail@plt+0x1a598>
   2ba90:	ldr	r0, [sp, #20]
   2ba94:	str	r0, [sp, #28]
   2ba98:	b	2bad4 <__assert_fail@plt+0x1a5d0>
   2ba9c:	ldr	r0, [sp, #16]
   2baa0:	cmp	r0, #9
   2baa4:	bne	2bad0 <__assert_fail@plt+0x1a5cc>
   2baa8:	ldr	r0, [sp, #36]	; 0x24
   2baac:	ldr	r1, [fp, #-8]
   2bab0:	ldr	r1, [r1]
   2bab4:	ldr	r2, [sp, #20]
   2bab8:	add	r1, r1, r2, lsl #3
   2babc:	ldr	r1, [r1]
   2bac0:	cmp	r0, r1
   2bac4:	bne	2bad0 <__assert_fail@plt+0x1a5cc>
   2bac8:	ldr	r0, [sp, #20]
   2bacc:	str	r0, [sp, #24]
   2bad0:	b	2bad4 <__assert_fail@plt+0x1a5d0>
   2bad4:	b	2bad8 <__assert_fail@plt+0x1a5d4>
   2bad8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2badc:	add	r0, r0, #1
   2bae0:	str	r0, [fp, #-28]	; 0xffffffe4
   2bae4:	b	2ba20 <__assert_fail@plt+0x1a51c>
   2bae8:	ldr	r0, [sp, #28]
   2baec:	cmp	r0, #0
   2baf0:	blt	2bb28 <__assert_fail@plt+0x1a624>
   2baf4:	ldr	r0, [fp, #-8]
   2baf8:	ldr	r1, [sp, #28]
   2bafc:	ldr	r2, [fp, #-12]
   2bb00:	ldr	r3, [fp, #-16]
   2bb04:	bl	2c588 <__assert_fail@plt+0x1b084>
   2bb08:	str	r0, [fp, #-24]	; 0xffffffe8
   2bb0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bb10:	cmp	r0, #0
   2bb14:	beq	2bb24 <__assert_fail@plt+0x1a620>
   2bb18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bb1c:	str	r0, [fp, #-4]
   2bb20:	b	2bd04 <__assert_fail@plt+0x1a800>
   2bb24:	b	2bb28 <__assert_fail@plt+0x1a624>
   2bb28:	ldr	r0, [sp, #24]
   2bb2c:	cmp	r0, #0
   2bb30:	blt	2bc10 <__assert_fail@plt+0x1a70c>
   2bb34:	movw	r0, #0
   2bb38:	str	r0, [fp, #-28]	; 0xffffffe4
   2bb3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bb40:	ldr	r1, [fp, #-12]
   2bb44:	ldr	r1, [r1, #4]
   2bb48:	cmp	r0, r1
   2bb4c:	bge	2bc0c <__assert_fail@plt+0x1a708>
   2bb50:	ldr	r0, [fp, #-12]
   2bb54:	ldr	r0, [r0, #8]
   2bb58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2bb5c:	add	r0, r0, r1, lsl #2
   2bb60:	ldr	r0, [r0]
   2bb64:	str	r0, [sp, #12]
   2bb68:	ldr	r0, [fp, #-8]
   2bb6c:	ldr	r0, [r0, #28]
   2bb70:	ldr	r1, [sp, #12]
   2bb74:	movw	r2, #12
   2bb78:	mul	r1, r1, r2
   2bb7c:	add	r0, r0, r1
   2bb80:	ldr	r1, [sp, #24]
   2bb84:	bl	23104 <__assert_fail@plt+0x11c00>
   2bb88:	cmp	r0, #0
   2bb8c:	bne	2bbf8 <__assert_fail@plt+0x1a6f4>
   2bb90:	ldr	r0, [fp, #-8]
   2bb94:	ldr	r0, [r0, #24]
   2bb98:	ldr	r1, [sp, #12]
   2bb9c:	movw	r2, #12
   2bba0:	mul	r1, r1, r2
   2bba4:	add	r0, r0, r1
   2bba8:	ldr	r1, [sp, #24]
   2bbac:	bl	23104 <__assert_fail@plt+0x11c00>
   2bbb0:	cmp	r0, #0
   2bbb4:	bne	2bbf8 <__assert_fail@plt+0x1a6f4>
   2bbb8:	ldr	r0, [fp, #-8]
   2bbbc:	ldr	r1, [sp, #12]
   2bbc0:	ldr	r2, [fp, #-12]
   2bbc4:	ldr	r3, [fp, #-16]
   2bbc8:	bl	2c588 <__assert_fail@plt+0x1b084>
   2bbcc:	str	r0, [fp, #-24]	; 0xffffffe8
   2bbd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bbd4:	cmp	r0, #0
   2bbd8:	beq	2bbe8 <__assert_fail@plt+0x1a6e4>
   2bbdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bbe0:	str	r0, [fp, #-4]
   2bbe4:	b	2bd04 <__assert_fail@plt+0x1a800>
   2bbe8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bbec:	mvn	r1, #0
   2bbf0:	add	r0, r0, r1
   2bbf4:	str	r0, [fp, #-28]	; 0xffffffe4
   2bbf8:	b	2bbfc <__assert_fail@plt+0x1a6f8>
   2bbfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bc00:	add	r0, r0, #1
   2bc04:	str	r0, [fp, #-28]	; 0xffffffe4
   2bc08:	b	2bb3c <__assert_fail@plt+0x1a638>
   2bc0c:	b	2bc10 <__assert_fail@plt+0x1a70c>
   2bc10:	b	2bce8 <__assert_fail@plt+0x1a7e4>
   2bc14:	movw	r0, #0
   2bc18:	str	r0, [fp, #-28]	; 0xffffffe4
   2bc1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bc20:	ldr	r1, [fp, #-12]
   2bc24:	ldr	r1, [r1, #4]
   2bc28:	cmp	r0, r1
   2bc2c:	bge	2bce4 <__assert_fail@plt+0x1a7e0>
   2bc30:	ldr	r0, [fp, #-12]
   2bc34:	ldr	r0, [r0, #8]
   2bc38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2bc3c:	ldr	r0, [r0, r1, lsl #2]
   2bc40:	str	r0, [sp, #8]
   2bc44:	ldr	r0, [fp, #-8]
   2bc48:	ldr	r0, [r0]
   2bc4c:	ldr	r1, [sp, #8]
   2bc50:	add	r0, r0, r1, lsl #3
   2bc54:	ldr	r0, [r0, #4]
   2bc58:	and	r0, r0, #255	; 0xff
   2bc5c:	str	r0, [sp, #4]
   2bc60:	ldr	r0, [sp, #4]
   2bc64:	cmp	r0, #9
   2bc68:	beq	2bc78 <__assert_fail@plt+0x1a774>
   2bc6c:	ldr	r0, [sp, #4]
   2bc70:	cmp	r0, #8
   2bc74:	bne	2bcd0 <__assert_fail@plt+0x1a7cc>
   2bc78:	ldr	r0, [sp, #36]	; 0x24
   2bc7c:	ldr	r1, [fp, #-8]
   2bc80:	ldr	r1, [r1]
   2bc84:	ldr	r2, [sp, #8]
   2bc88:	add	r1, r1, r2, lsl #3
   2bc8c:	ldr	r1, [r1]
   2bc90:	cmp	r0, r1
   2bc94:	beq	2bc9c <__assert_fail@plt+0x1a798>
   2bc98:	b	2bcd4 <__assert_fail@plt+0x1a7d0>
   2bc9c:	ldr	r0, [fp, #-8]
   2bca0:	ldr	r1, [sp, #8]
   2bca4:	ldr	r2, [fp, #-12]
   2bca8:	ldr	r3, [fp, #-16]
   2bcac:	bl	2c588 <__assert_fail@plt+0x1b084>
   2bcb0:	str	r0, [fp, #-24]	; 0xffffffe8
   2bcb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bcb8:	cmp	r0, #0
   2bcbc:	beq	2bccc <__assert_fail@plt+0x1a7c8>
   2bcc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bcc4:	str	r0, [fp, #-4]
   2bcc8:	b	2bd04 <__assert_fail@plt+0x1a800>
   2bccc:	b	2bcd0 <__assert_fail@plt+0x1a7cc>
   2bcd0:	b	2bcd4 <__assert_fail@plt+0x1a7d0>
   2bcd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bcd8:	add	r0, r0, #1
   2bcdc:	str	r0, [fp, #-28]	; 0xffffffe4
   2bce0:	b	2bc1c <__assert_fail@plt+0x1a718>
   2bce4:	b	2bce8 <__assert_fail@plt+0x1a7e4>
   2bce8:	b	2bcec <__assert_fail@plt+0x1a7e8>
   2bcec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bcf0:	add	r0, r0, #1
   2bcf4:	str	r0, [fp, #-32]	; 0xffffffe0
   2bcf8:	b	2b974 <__assert_fail@plt+0x1a470>
   2bcfc:	movw	r0, #0
   2bd00:	str	r0, [fp, #-4]
   2bd04:	ldr	r0, [fp, #-4]
   2bd08:	mov	sp, fp
   2bd0c:	pop	{fp, pc}
   2bd10:	push	{fp, lr}
   2bd14:	mov	fp, sp
   2bd18:	sub	sp, sp, #128	; 0x80
   2bd1c:	str	r0, [fp, #-8]
   2bd20:	str	r1, [fp, #-12]
   2bd24:	str	r2, [fp, #-16]
   2bd28:	str	r3, [fp, #-20]	; 0xffffffec
   2bd2c:	ldr	r0, [fp, #-8]
   2bd30:	ldr	r0, [r0, #84]	; 0x54
   2bd34:	str	r0, [fp, #-24]	; 0xffffffe8
   2bd38:	ldr	r0, [fp, #-8]
   2bd3c:	ldr	r1, [fp, #-16]
   2bd40:	bl	27570 <__assert_fail@plt+0x1606c>
   2bd44:	str	r0, [sp, #60]	; 0x3c
   2bd48:	ldr	r0, [sp, #60]	; 0x3c
   2bd4c:	cmn	r0, #1
   2bd50:	bne	2bd60 <__assert_fail@plt+0x1a85c>
   2bd54:	movw	r0, #0
   2bd58:	str	r0, [fp, #-4]
   2bd5c:	b	2c134 <__assert_fail@plt+0x1ac30>
   2bd60:	movw	r0, #0
   2bd64:	str	r0, [sp, #64]	; 0x40
   2bd68:	str	r0, [fp, #-32]	; 0xffffffe0
   2bd6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bd70:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bd74:	ldr	r1, [r1, #4]
   2bd78:	cmp	r0, r1
   2bd7c:	bge	2c10c <__assert_fail@plt+0x1ac08>
   2bd80:	ldr	r0, [fp, #-20]	; 0xffffffec
   2bd84:	ldr	r0, [r0, #8]
   2bd88:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2bd8c:	ldr	r0, [r0, r1, lsl #2]
   2bd90:	str	r0, [fp, #-36]	; 0xffffffdc
   2bd94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bd98:	ldr	r0, [r0]
   2bd9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2bda0:	add	r0, r0, r1, lsl #3
   2bda4:	ldr	r0, [r0, #4]
   2bda8:	and	r0, r0, #255	; 0xff
   2bdac:	str	r0, [sp, #52]	; 0x34
   2bdb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bdb4:	ldr	r1, [fp, #-12]
   2bdb8:	ldr	r1, [r1, #8]
   2bdbc:	cmp	r0, r1
   2bdc0:	bne	2bddc <__assert_fail@plt+0x1a8d8>
   2bdc4:	ldr	r0, [fp, #-16]
   2bdc8:	ldr	r1, [fp, #-12]
   2bdcc:	ldr	r1, [r1, #12]
   2bdd0:	cmp	r0, r1
   2bdd4:	bne	2bddc <__assert_fail@plt+0x1a8d8>
   2bdd8:	b	2c0fc <__assert_fail@plt+0x1abf8>
   2bddc:	ldr	r0, [sp, #52]	; 0x34
   2bde0:	cmp	r0, #4
   2bde4:	beq	2bdec <__assert_fail@plt+0x1a8e8>
   2bde8:	b	2c0fc <__assert_fail@plt+0x1abf8>
   2bdec:	ldr	r0, [fp, #-8]
   2bdf0:	ldr	r0, [r0, #116]	; 0x74
   2bdf4:	ldr	r1, [sp, #60]	; 0x3c
   2bdf8:	movw	r2, #24
   2bdfc:	mul	r1, r1, r2
   2be00:	add	r0, r0, r1
   2be04:	str	r0, [sp, #48]	; 0x30
   2be08:	ldr	r0, [sp, #60]	; 0x3c
   2be0c:	str	r0, [sp, #56]	; 0x38
   2be10:	ldr	r0, [sp, #48]	; 0x30
   2be14:	ldr	r0, [r0]
   2be18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2be1c:	cmp	r0, r1
   2be20:	beq	2be28 <__assert_fail@plt+0x1a924>
   2be24:	b	2c0d4 <__assert_fail@plt+0x1abd0>
   2be28:	ldr	r0, [sp, #48]	; 0x30
   2be2c:	ldr	r0, [r0, #12]
   2be30:	ldr	r1, [sp, #48]	; 0x30
   2be34:	ldr	r1, [r1, #8]
   2be38:	sub	r0, r0, r1
   2be3c:	str	r0, [sp, #44]	; 0x2c
   2be40:	ldr	r0, [fp, #-16]
   2be44:	ldr	r1, [sp, #44]	; 0x2c
   2be48:	add	r0, r0, r1
   2be4c:	str	r0, [sp, #40]	; 0x28
   2be50:	ldr	r0, [sp, #44]	; 0x2c
   2be54:	cmp	r0, #0
   2be58:	beq	2be78 <__assert_fail@plt+0x1a974>
   2be5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2be60:	ldr	r0, [r0, #12]
   2be64:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2be68:	add	r0, r0, r1, lsl #2
   2be6c:	ldr	r0, [r0]
   2be70:	str	r0, [sp, #24]
   2be74:	b	2be9c <__assert_fail@plt+0x1a998>
   2be78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2be7c:	ldr	r0, [r0, #20]
   2be80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2be84:	movw	r2, #12
   2be88:	mul	r1, r1, r2
   2be8c:	add	r0, r0, r1
   2be90:	ldr	r0, [r0, #8]
   2be94:	ldr	r0, [r0]
   2be98:	str	r0, [sp, #24]
   2be9c:	ldr	r0, [sp, #24]
   2bea0:	str	r0, [sp, #36]	; 0x24
   2bea4:	ldr	r0, [sp, #40]	; 0x28
   2bea8:	ldr	r1, [fp, #-12]
   2beac:	ldr	r1, [r1, #12]
   2beb0:	cmp	r0, r1
   2beb4:	bgt	2bf50 <__assert_fail@plt+0x1aa4c>
   2beb8:	ldr	r0, [fp, #-12]
   2bebc:	ldr	r0, [r0]
   2bec0:	ldr	r1, [sp, #40]	; 0x28
   2bec4:	add	r0, r0, r1, lsl #2
   2bec8:	ldr	r0, [r0]
   2becc:	movw	r1, #0
   2bed0:	cmp	r0, r1
   2bed4:	beq	2bf50 <__assert_fail@plt+0x1aa4c>
   2bed8:	ldr	r0, [fp, #-12]
   2bedc:	ldr	r0, [r0]
   2bee0:	ldr	r1, [sp, #40]	; 0x28
   2bee4:	add	r0, r0, r1, lsl #2
   2bee8:	ldr	r0, [r0]
   2beec:	movw	r1, #0
   2bef0:	cmp	r0, r1
   2bef4:	beq	2bf50 <__assert_fail@plt+0x1aa4c>
   2bef8:	ldr	r0, [fp, #-12]
   2befc:	ldr	r0, [r0]
   2bf00:	ldr	r1, [sp, #40]	; 0x28
   2bf04:	add	r0, r0, r1, lsl #2
   2bf08:	ldr	r0, [r0]
   2bf0c:	add	r0, r0, #4
   2bf10:	ldr	r1, [sp, #36]	; 0x24
   2bf14:	bl	23104 <__assert_fail@plt+0x11c00>
   2bf18:	cmp	r0, #0
   2bf1c:	beq	2bf50 <__assert_fail@plt+0x1aa4c>
   2bf20:	ldr	r0, [fp, #-8]
   2bf24:	ldr	r1, [fp, #-12]
   2bf28:	add	r1, r1, #16
   2bf2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2bf30:	ldr	r3, [fp, #-16]
   2bf34:	ldr	ip, [sp, #36]	; 0x24
   2bf38:	ldr	lr, [sp, #40]	; 0x28
   2bf3c:	str	ip, [sp]
   2bf40:	str	lr, [sp, #4]
   2bf44:	bl	2c814 <__assert_fail@plt+0x1b310>
   2bf48:	tst	r0, #1
   2bf4c:	beq	2bf54 <__assert_fail@plt+0x1aa50>
   2bf50:	b	2c0d4 <__assert_fail@plt+0x1abd0>
   2bf54:	ldr	r0, [sp, #64]	; 0x40
   2bf58:	movw	r1, #0
   2bf5c:	cmp	r0, r1
   2bf60:	bne	2bfb8 <__assert_fail@plt+0x1aab4>
   2bf64:	ldr	r0, [fp, #-12]
   2bf68:	add	r1, sp, #64	; 0x40
   2bf6c:	mov	r2, r1
   2bf70:	str	r0, [sp, #20]
   2bf74:	mov	r0, r2
   2bf78:	ldr	r2, [sp, #20]
   2bf7c:	str	r1, [sp, #16]
   2bf80:	mov	r1, r2
   2bf84:	movw	r2, #28
   2bf88:	bl	112a0 <memcpy@plt>
   2bf8c:	ldr	r0, [sp, #16]
   2bf90:	add	r0, r0, #16
   2bf94:	ldr	r1, [fp, #-12]
   2bf98:	add	r1, r1, #16
   2bf9c:	bl	23030 <__assert_fail@plt+0x11b2c>
   2bfa0:	str	r0, [fp, #-28]	; 0xffffffe4
   2bfa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bfa8:	cmp	r0, #0
   2bfac:	beq	2bfb4 <__assert_fail@plt+0x1aab0>
   2bfb0:	b	2c114 <__assert_fail@plt+0x1ac10>
   2bfb4:	b	2bfb8 <__assert_fail@plt+0x1aab4>
   2bfb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bfbc:	str	r0, [sp, #72]	; 0x48
   2bfc0:	ldr	r0, [fp, #-16]
   2bfc4:	str	r0, [sp, #76]	; 0x4c
   2bfc8:	add	r0, sp, #64	; 0x40
   2bfcc:	add	r0, r0, #16
   2bfd0:	ldr	r1, [sp, #56]	; 0x38
   2bfd4:	bl	22c48 <__assert_fail@plt+0x11744>
   2bfd8:	and	r0, r0, #1
   2bfdc:	strb	r0, [sp, #35]	; 0x23
   2bfe0:	ldrb	r0, [sp, #35]	; 0x23
   2bfe4:	mvn	r1, #0
   2bfe8:	eor	r0, r0, r1
   2bfec:	tst	r0, #1
   2bff0:	beq	2c000 <__assert_fail@plt+0x1aafc>
   2bff4:	movw	r0, #12
   2bff8:	str	r0, [fp, #-28]	; 0xffffffe4
   2bffc:	b	2c114 <__assert_fail@plt+0x1ac10>
   2c000:	ldr	r0, [sp, #64]	; 0x40
   2c004:	ldr	r1, [fp, #-16]
   2c008:	add	r0, r0, r1, lsl #2
   2c00c:	ldr	r0, [r0]
   2c010:	str	r0, [sp, #28]
   2c014:	ldr	r0, [fp, #-8]
   2c018:	add	r1, sp, #64	; 0x40
   2c01c:	bl	2b07c <__assert_fail@plt+0x19b78>
   2c020:	str	r0, [fp, #-28]	; 0xffffffe4
   2c024:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c028:	cmp	r0, #0
   2c02c:	beq	2c034 <__assert_fail@plt+0x1ab30>
   2c030:	b	2c114 <__assert_fail@plt+0x1ac10>
   2c034:	ldr	r0, [fp, #-12]
   2c038:	ldr	r0, [r0, #4]
   2c03c:	movw	r1, #0
   2c040:	cmp	r0, r1
   2c044:	beq	2c07c <__assert_fail@plt+0x1ab78>
   2c048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c04c:	ldr	r1, [fp, #-12]
   2c050:	ldr	r1, [r1, #4]
   2c054:	ldr	r2, [sp, #64]	; 0x40
   2c058:	ldr	r3, [fp, #-16]
   2c05c:	add	r3, r3, #1
   2c060:	bl	2b274 <__assert_fail@plt+0x19d70>
   2c064:	str	r0, [fp, #-28]	; 0xffffffe4
   2c068:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c06c:	cmp	r0, #0
   2c070:	beq	2c078 <__assert_fail@plt+0x1ab74>
   2c074:	b	2c114 <__assert_fail@plt+0x1ac10>
   2c078:	b	2c07c <__assert_fail@plt+0x1ab78>
   2c07c:	ldr	r0, [sp, #28]
   2c080:	ldr	r1, [sp, #64]	; 0x40
   2c084:	ldr	r2, [fp, #-16]
   2c088:	add	r1, r1, r2, lsl #2
   2c08c:	str	r0, [r1]
   2c090:	add	r0, sp, #64	; 0x40
   2c094:	add	r1, r0, #16
   2c098:	add	r0, r0, #16
   2c09c:	ldr	r2, [sp, #56]	; 0x38
   2c0a0:	str	r1, [sp, #12]
   2c0a4:	mov	r1, r2
   2c0a8:	bl	23104 <__assert_fail@plt+0x11c00>
   2c0ac:	sub	r1, r0, #1
   2c0b0:	ldr	r0, [sp, #12]
   2c0b4:	bl	237f0 <__assert_fail@plt+0x122ec>
   2c0b8:	ldr	r0, [fp, #-8]
   2c0bc:	ldr	r0, [r0, #116]	; 0x74
   2c0c0:	ldr	r1, [sp, #56]	; 0x38
   2c0c4:	movw	r2, #24
   2c0c8:	mul	r1, r1, r2
   2c0cc:	add	r0, r0, r1
   2c0d0:	str	r0, [sp, #48]	; 0x30
   2c0d4:	ldr	r0, [sp, #56]	; 0x38
   2c0d8:	add	r0, r0, #1
   2c0dc:	str	r0, [sp, #56]	; 0x38
   2c0e0:	ldr	r0, [sp, #48]	; 0x30
   2c0e4:	add	r1, r0, #24
   2c0e8:	str	r1, [sp, #48]	; 0x30
   2c0ec:	ldrsb	r0, [r0, #20]
   2c0f0:	cmp	r0, #0
   2c0f4:	bne	2be10 <__assert_fail@plt+0x1a90c>
   2c0f8:	b	2c0fc <__assert_fail@plt+0x1abf8>
   2c0fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c100:	add	r0, r0, #1
   2c104:	str	r0, [fp, #-32]	; 0xffffffe0
   2c108:	b	2bd6c <__assert_fail@plt+0x1a868>
   2c10c:	movw	r0, #0
   2c110:	str	r0, [fp, #-28]	; 0xffffffe4
   2c114:	ldr	r0, [sp, #64]	; 0x40
   2c118:	movw	r1, #0
   2c11c:	cmp	r0, r1
   2c120:	beq	2c12c <__assert_fail@plt+0x1ac28>
   2c124:	ldr	r0, [sp, #88]	; 0x58
   2c128:	bl	34c20 <__assert_fail@plt+0x2371c>
   2c12c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c130:	str	r0, [fp, #-4]
   2c134:	ldr	r0, [fp, #-4]
   2c138:	mov	sp, fp
   2c13c:	pop	{fp, pc}
   2c140:	push	{fp, lr}
   2c144:	mov	fp, sp
   2c148:	sub	sp, sp, #56	; 0x38
   2c14c:	str	r0, [fp, #-8]
   2c150:	str	r1, [fp, #-12]
   2c154:	str	r2, [fp, #-16]
   2c158:	ldr	r0, [fp, #-12]
   2c15c:	ldr	r0, [r0, #4]
   2c160:	cmp	r0, #0
   2c164:	beq	2c178 <__assert_fail@plt+0x1ac74>
   2c168:	ldr	r0, [fp, #-16]
   2c16c:	ldr	r0, [r0, #4]
   2c170:	cmp	r0, #0
   2c174:	bne	2c184 <__assert_fail@plt+0x1ac80>
   2c178:	movw	r0, #0
   2c17c:	str	r0, [fp, #-4]
   2c180:	b	2c57c <__assert_fail@plt+0x1b078>
   2c184:	ldr	r0, [fp, #-12]
   2c188:	ldr	r0, [r0, #4]
   2c18c:	ldr	r1, [fp, #-16]
   2c190:	ldr	r1, [r1, #4]
   2c194:	add	r0, r0, r1
   2c198:	ldr	r1, [fp, #-8]
   2c19c:	ldr	r1, [r1, #4]
   2c1a0:	add	r0, r0, r1
   2c1a4:	ldr	r1, [fp, #-8]
   2c1a8:	ldr	r1, [r1]
   2c1ac:	cmp	r0, r1
   2c1b0:	ble	2c224 <__assert_fail@plt+0x1ad20>
   2c1b4:	ldr	r0, [fp, #-12]
   2c1b8:	ldr	r0, [r0, #4]
   2c1bc:	ldr	r1, [fp, #-16]
   2c1c0:	ldr	r1, [r1, #4]
   2c1c4:	add	r0, r0, r1
   2c1c8:	ldr	r1, [fp, #-8]
   2c1cc:	ldr	r1, [r1]
   2c1d0:	add	r0, r0, r1
   2c1d4:	str	r0, [sp, #12]
   2c1d8:	ldr	r0, [fp, #-8]
   2c1dc:	ldr	r0, [r0, #8]
   2c1e0:	ldr	r1, [sp, #12]
   2c1e4:	lsl	r1, r1, #2
   2c1e8:	bl	335bc <__assert_fail@plt+0x220b8>
   2c1ec:	str	r0, [sp, #8]
   2c1f0:	ldr	r0, [sp, #8]
   2c1f4:	movw	r1, #0
   2c1f8:	cmp	r0, r1
   2c1fc:	bne	2c20c <__assert_fail@plt+0x1ad08>
   2c200:	movw	r0, #12
   2c204:	str	r0, [fp, #-4]
   2c208:	b	2c57c <__assert_fail@plt+0x1b078>
   2c20c:	ldr	r0, [sp, #8]
   2c210:	ldr	r1, [fp, #-8]
   2c214:	str	r0, [r1, #8]
   2c218:	ldr	r0, [sp, #12]
   2c21c:	ldr	r1, [fp, #-8]
   2c220:	str	r0, [r1]
   2c224:	ldr	r0, [fp, #-8]
   2c228:	ldr	r0, [r0, #4]
   2c22c:	ldr	r1, [fp, #-12]
   2c230:	ldr	r1, [r1, #4]
   2c234:	add	r0, r0, r1
   2c238:	ldr	r1, [fp, #-16]
   2c23c:	ldr	r1, [r1, #4]
   2c240:	add	r0, r0, r1
   2c244:	str	r0, [sp, #16]
   2c248:	ldr	r0, [fp, #-12]
   2c24c:	ldr	r0, [r0, #4]
   2c250:	sub	r0, r0, #1
   2c254:	str	r0, [fp, #-20]	; 0xffffffec
   2c258:	ldr	r0, [fp, #-16]
   2c25c:	ldr	r0, [r0, #4]
   2c260:	sub	r0, r0, #1
   2c264:	str	r0, [fp, #-24]	; 0xffffffe8
   2c268:	ldr	r0, [fp, #-8]
   2c26c:	ldr	r0, [r0, #4]
   2c270:	sub	r0, r0, #1
   2c274:	str	r0, [sp, #24]
   2c278:	ldr	r0, [fp, #-12]
   2c27c:	ldr	r0, [r0, #8]
   2c280:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c284:	ldr	r0, [r0, r1, lsl #2]
   2c288:	ldr	r1, [fp, #-16]
   2c28c:	ldr	r1, [r1, #8]
   2c290:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c294:	add	r1, r1, r2, lsl #2
   2c298:	ldr	r1, [r1]
   2c29c:	cmp	r0, r1
   2c2a0:	bne	2c3ac <__assert_fail@plt+0x1aea8>
   2c2a4:	b	2c2a8 <__assert_fail@plt+0x1ada4>
   2c2a8:	ldr	r0, [sp, #24]
   2c2ac:	cmp	r0, #0
   2c2b0:	movw	r0, #0
   2c2b4:	str	r0, [sp, #4]
   2c2b8:	blt	2c2f0 <__assert_fail@plt+0x1adec>
   2c2bc:	ldr	r0, [fp, #-8]
   2c2c0:	ldr	r0, [r0, #8]
   2c2c4:	ldr	r1, [sp, #24]
   2c2c8:	ldr	r0, [r0, r1, lsl #2]
   2c2cc:	ldr	r1, [fp, #-12]
   2c2d0:	ldr	r1, [r1, #8]
   2c2d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c2d8:	add	r1, r1, r2, lsl #2
   2c2dc:	ldr	r1, [r1]
   2c2e0:	cmp	r0, r1
   2c2e4:	movw	r0, #0
   2c2e8:	movgt	r0, #1
   2c2ec:	str	r0, [sp, #4]
   2c2f0:	ldr	r0, [sp, #4]
   2c2f4:	tst	r0, #1
   2c2f8:	beq	2c310 <__assert_fail@plt+0x1ae0c>
   2c2fc:	ldr	r0, [sp, #24]
   2c300:	mvn	r1, #0
   2c304:	add	r0, r0, r1
   2c308:	str	r0, [sp, #24]
   2c30c:	b	2c2a8 <__assert_fail@plt+0x1ada4>
   2c310:	ldr	r0, [sp, #24]
   2c314:	cmp	r0, #0
   2c318:	blt	2c348 <__assert_fail@plt+0x1ae44>
   2c31c:	ldr	r0, [fp, #-8]
   2c320:	ldr	r0, [r0, #8]
   2c324:	ldr	r1, [sp, #24]
   2c328:	ldr	r0, [r0, r1, lsl #2]
   2c32c:	ldr	r1, [fp, #-12]
   2c330:	ldr	r1, [r1, #8]
   2c334:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c338:	add	r1, r1, r2, lsl #2
   2c33c:	ldr	r1, [r1]
   2c340:	cmp	r0, r1
   2c344:	beq	2c374 <__assert_fail@plt+0x1ae70>
   2c348:	ldr	r0, [fp, #-12]
   2c34c:	ldr	r0, [r0, #8]
   2c350:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c354:	ldr	r0, [r0, r1, lsl #2]
   2c358:	ldr	r1, [fp, #-8]
   2c35c:	ldr	r1, [r1, #8]
   2c360:	ldr	r2, [sp, #16]
   2c364:	sub	r2, r2, #1
   2c368:	str	r2, [sp, #16]
   2c36c:	add	r1, r1, r2, lsl #2
   2c370:	str	r0, [r1]
   2c374:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c378:	mvn	r1, #0
   2c37c:	add	r0, r0, r1
   2c380:	str	r0, [fp, #-20]	; 0xffffffec
   2c384:	cmp	r0, #0
   2c388:	blt	2c3a4 <__assert_fail@plt+0x1aea0>
   2c38c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c390:	mvn	r1, #0
   2c394:	add	r0, r0, r1
   2c398:	str	r0, [fp, #-24]	; 0xffffffe8
   2c39c:	cmp	r0, #0
   2c3a0:	bge	2c3a8 <__assert_fail@plt+0x1aea4>
   2c3a4:	b	2c420 <__assert_fail@plt+0x1af1c>
   2c3a8:	b	2c41c <__assert_fail@plt+0x1af18>
   2c3ac:	ldr	r0, [fp, #-12]
   2c3b0:	ldr	r0, [r0, #8]
   2c3b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c3b8:	ldr	r0, [r0, r1, lsl #2]
   2c3bc:	ldr	r1, [fp, #-16]
   2c3c0:	ldr	r1, [r1, #8]
   2c3c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c3c8:	add	r1, r1, r2, lsl #2
   2c3cc:	ldr	r1, [r1]
   2c3d0:	cmp	r0, r1
   2c3d4:	bge	2c3f8 <__assert_fail@plt+0x1aef4>
   2c3d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c3dc:	mvn	r1, #0
   2c3e0:	add	r0, r0, r1
   2c3e4:	str	r0, [fp, #-24]	; 0xffffffe8
   2c3e8:	cmp	r0, #0
   2c3ec:	bge	2c3f4 <__assert_fail@plt+0x1aef0>
   2c3f0:	b	2c420 <__assert_fail@plt+0x1af1c>
   2c3f4:	b	2c418 <__assert_fail@plt+0x1af14>
   2c3f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c3fc:	mvn	r1, #0
   2c400:	add	r0, r0, r1
   2c404:	str	r0, [fp, #-20]	; 0xffffffec
   2c408:	cmp	r0, #0
   2c40c:	bge	2c414 <__assert_fail@plt+0x1af10>
   2c410:	b	2c420 <__assert_fail@plt+0x1af1c>
   2c414:	b	2c418 <__assert_fail@plt+0x1af14>
   2c418:	b	2c41c <__assert_fail@plt+0x1af18>
   2c41c:	b	2c278 <__assert_fail@plt+0x1ad74>
   2c420:	ldr	r0, [fp, #-8]
   2c424:	ldr	r0, [r0, #4]
   2c428:	sub	r0, r0, #1
   2c42c:	str	r0, [sp, #24]
   2c430:	ldr	r0, [fp, #-8]
   2c434:	ldr	r0, [r0, #4]
   2c438:	ldr	r1, [fp, #-12]
   2c43c:	ldr	r1, [r1, #4]
   2c440:	add	r0, r0, r1
   2c444:	ldr	r1, [fp, #-16]
   2c448:	ldr	r1, [r1, #4]
   2c44c:	add	r0, r0, r1
   2c450:	sub	r0, r0, #1
   2c454:	str	r0, [sp, #28]
   2c458:	ldr	r0, [sp, #28]
   2c45c:	ldr	r1, [sp, #16]
   2c460:	sub	r0, r0, r1
   2c464:	add	r0, r0, #1
   2c468:	str	r0, [sp, #20]
   2c46c:	ldr	r0, [sp, #20]
   2c470:	ldr	r1, [fp, #-8]
   2c474:	ldr	r2, [r1, #4]
   2c478:	add	r0, r2, r0
   2c47c:	str	r0, [r1, #4]
   2c480:	ldr	r0, [sp, #20]
   2c484:	cmp	r0, #0
   2c488:	ble	2c558 <__assert_fail@plt+0x1b054>
   2c48c:	ldr	r0, [sp, #24]
   2c490:	cmp	r0, #0
   2c494:	blt	2c558 <__assert_fail@plt+0x1b054>
   2c498:	b	2c49c <__assert_fail@plt+0x1af98>
   2c49c:	ldr	r0, [fp, #-8]
   2c4a0:	ldr	r0, [r0, #8]
   2c4a4:	ldr	r1, [sp, #28]
   2c4a8:	ldr	r1, [r0, r1, lsl #2]
   2c4ac:	ldr	r2, [sp, #24]
   2c4b0:	add	r0, r0, r2, lsl #2
   2c4b4:	ldr	r0, [r0]
   2c4b8:	cmp	r1, r0
   2c4bc:	ble	2c510 <__assert_fail@plt+0x1b00c>
   2c4c0:	ldr	r0, [fp, #-8]
   2c4c4:	ldr	r0, [r0, #8]
   2c4c8:	ldr	r1, [sp, #28]
   2c4cc:	sub	r2, r1, #1
   2c4d0:	str	r2, [sp, #28]
   2c4d4:	ldr	r0, [r0, r1, lsl #2]
   2c4d8:	ldr	r1, [fp, #-8]
   2c4dc:	ldr	r1, [r1, #8]
   2c4e0:	ldr	r2, [sp, #24]
   2c4e4:	ldr	r3, [sp, #20]
   2c4e8:	sub	ip, r3, #1
   2c4ec:	str	ip, [sp, #20]
   2c4f0:	add	r2, r2, r3
   2c4f4:	add	r1, r1, r2, lsl #2
   2c4f8:	str	r0, [r1]
   2c4fc:	ldr	r0, [sp, #20]
   2c500:	cmp	r0, #0
   2c504:	bne	2c50c <__assert_fail@plt+0x1b008>
   2c508:	b	2c554 <__assert_fail@plt+0x1b050>
   2c50c:	b	2c550 <__assert_fail@plt+0x1b04c>
   2c510:	ldr	r0, [fp, #-8]
   2c514:	ldr	r0, [r0, #8]
   2c518:	ldr	r1, [sp, #24]
   2c51c:	ldr	r2, [r0, r1, lsl #2]
   2c520:	ldr	r3, [sp, #20]
   2c524:	add	r1, r1, r3
   2c528:	add	r0, r0, r1, lsl #2
   2c52c:	str	r2, [r0]
   2c530:	ldr	r0, [sp, #24]
   2c534:	mvn	r1, #0
   2c538:	add	r0, r0, r1
   2c53c:	str	r0, [sp, #24]
   2c540:	cmp	r0, #0
   2c544:	bge	2c54c <__assert_fail@plt+0x1b048>
   2c548:	b	2c554 <__assert_fail@plt+0x1b050>
   2c54c:	b	2c550 <__assert_fail@plt+0x1b04c>
   2c550:	b	2c49c <__assert_fail@plt+0x1af98>
   2c554:	b	2c558 <__assert_fail@plt+0x1b054>
   2c558:	ldr	r0, [fp, #-8]
   2c55c:	ldr	r0, [r0, #8]
   2c560:	ldr	r1, [sp, #16]
   2c564:	add	r1, r0, r1, lsl #2
   2c568:	ldr	r2, [sp, #20]
   2c56c:	lsl	r2, r2, #2
   2c570:	bl	112a0 <memcpy@plt>
   2c574:	movw	r0, #0
   2c578:	str	r0, [fp, #-4]
   2c57c:	ldr	r0, [fp, #-4]
   2c580:	mov	sp, fp
   2c584:	pop	{fp, pc}
   2c588:	push	{fp, lr}
   2c58c:	mov	fp, sp
   2c590:	sub	sp, sp, #72	; 0x48
   2c594:	str	r0, [fp, #-8]
   2c598:	str	r1, [fp, #-12]
   2c59c:	str	r2, [fp, #-16]
   2c5a0:	str	r3, [fp, #-20]	; 0xffffffec
   2c5a4:	ldr	r0, [fp, #-8]
   2c5a8:	ldr	r0, [r0, #28]
   2c5ac:	ldr	r1, [fp, #-12]
   2c5b0:	movw	r2, #12
   2c5b4:	mul	r1, r1, r2
   2c5b8:	add	r0, r0, r1
   2c5bc:	str	r0, [fp, #-32]	; 0xffffffe0
   2c5c0:	add	r0, sp, #28
   2c5c4:	movw	r1, #0
   2c5c8:	and	r1, r1, #255	; 0xff
   2c5cc:	bl	11420 <memset@plt>
   2c5d0:	movw	r0, #0
   2c5d4:	str	r0, [fp, #-24]	; 0xffffffe8
   2c5d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c5dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c5e0:	ldr	r1, [r1, #4]
   2c5e4:	cmp	r0, r1
   2c5e8:	bge	2c77c <__assert_fail@plt+0x1b278>
   2c5ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c5f0:	ldr	r0, [r0, #8]
   2c5f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c5f8:	add	r0, r0, r1, lsl #2
   2c5fc:	ldr	r0, [r0]
   2c600:	str	r0, [sp, #24]
   2c604:	ldr	r0, [sp, #24]
   2c608:	ldr	r1, [fp, #-12]
   2c60c:	cmp	r0, r1
   2c610:	bne	2c618 <__assert_fail@plt+0x1b114>
   2c614:	b	2c76c <__assert_fail@plt+0x1b268>
   2c618:	ldr	r0, [fp, #-8]
   2c61c:	ldr	r0, [r0]
   2c620:	ldr	r1, [sp, #24]
   2c624:	add	r0, r0, r1, lsl #3
   2c628:	ldr	r0, [r0, #4]
   2c62c:	and	r0, r0, #255	; 0xff
   2c630:	and	r0, r0, #8
   2c634:	cmp	r0, #0
   2c638:	beq	2c768 <__assert_fail@plt+0x1b264>
   2c63c:	ldr	r0, [fp, #-8]
   2c640:	ldr	r0, [r0, #20]
   2c644:	ldr	r1, [sp, #24]
   2c648:	movw	r2, #12
   2c64c:	mul	r1, r1, r2
   2c650:	add	r0, r0, r1
   2c654:	ldr	r0, [r0, #8]
   2c658:	ldr	r0, [r0]
   2c65c:	str	r0, [sp, #20]
   2c660:	ldr	r0, [fp, #-8]
   2c664:	ldr	r0, [r0, #20]
   2c668:	ldr	r1, [sp, #24]
   2c66c:	mul	r1, r1, r2
   2c670:	add	r0, r0, r1
   2c674:	ldr	r0, [r0, #4]
   2c678:	cmp	r0, #1
   2c67c:	ble	2c6a8 <__assert_fail@plt+0x1b1a4>
   2c680:	ldr	r0, [fp, #-8]
   2c684:	ldr	r0, [r0, #20]
   2c688:	ldr	r1, [sp, #24]
   2c68c:	movw	r2, #12
   2c690:	mul	r1, r1, r2
   2c694:	add	r0, r0, r1
   2c698:	ldr	r0, [r0, #8]
   2c69c:	ldr	r0, [r0, #4]
   2c6a0:	str	r0, [sp, #4]
   2c6a4:	b	2c6b4 <__assert_fail@plt+0x1b1b0>
   2c6a8:	mvn	r0, #0
   2c6ac:	str	r0, [sp, #4]
   2c6b0:	b	2c6b4 <__assert_fail@plt+0x1b1b0>
   2c6b4:	ldr	r0, [sp, #4]
   2c6b8:	str	r0, [sp, #16]
   2c6bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c6c0:	ldr	r1, [sp, #20]
   2c6c4:	bl	23104 <__assert_fail@plt+0x11c00>
   2c6c8:	cmp	r0, #0
   2c6cc:	bne	2c6e4 <__assert_fail@plt+0x1b1e0>
   2c6d0:	ldr	r0, [fp, #-16]
   2c6d4:	ldr	r1, [sp, #20]
   2c6d8:	bl	23104 <__assert_fail@plt+0x11c00>
   2c6dc:	cmp	r0, #0
   2c6e0:	bne	2c718 <__assert_fail@plt+0x1b214>
   2c6e4:	ldr	r0, [sp, #16]
   2c6e8:	cmp	r0, #0
   2c6ec:	ble	2c764 <__assert_fail@plt+0x1b260>
   2c6f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c6f4:	ldr	r1, [sp, #16]
   2c6f8:	bl	23104 <__assert_fail@plt+0x11c00>
   2c6fc:	cmp	r0, #0
   2c700:	bne	2c764 <__assert_fail@plt+0x1b260>
   2c704:	ldr	r0, [fp, #-16]
   2c708:	ldr	r1, [sp, #16]
   2c70c:	bl	23104 <__assert_fail@plt+0x11c00>
   2c710:	cmp	r0, #0
   2c714:	beq	2c764 <__assert_fail@plt+0x1b260>
   2c718:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c71c:	ldr	r0, [fp, #-8]
   2c720:	ldr	r0, [r0, #28]
   2c724:	ldr	r2, [sp, #24]
   2c728:	movw	r3, #12
   2c72c:	mul	r2, r2, r3
   2c730:	add	r2, r0, r2
   2c734:	add	r0, sp, #28
   2c738:	bl	2c140 <__assert_fail@plt+0x1ac3c>
   2c73c:	str	r0, [fp, #-28]	; 0xffffffe4
   2c740:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c744:	cmp	r0, #0
   2c748:	beq	2c760 <__assert_fail@plt+0x1b25c>
   2c74c:	ldr	r0, [sp, #36]	; 0x24
   2c750:	bl	34c20 <__assert_fail@plt+0x2371c>
   2c754:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c758:	str	r0, [fp, #-4]
   2c75c:	b	2c808 <__assert_fail@plt+0x1b304>
   2c760:	b	2c764 <__assert_fail@plt+0x1b260>
   2c764:	b	2c768 <__assert_fail@plt+0x1b264>
   2c768:	b	2c76c <__assert_fail@plt+0x1b268>
   2c76c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c770:	add	r0, r0, #1
   2c774:	str	r0, [fp, #-24]	; 0xffffffe8
   2c778:	b	2c5d8 <__assert_fail@plt+0x1b0d4>
   2c77c:	movw	r0, #0
   2c780:	str	r0, [fp, #-24]	; 0xffffffe8
   2c784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c788:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c78c:	ldr	r1, [r1, #4]
   2c790:	cmp	r0, r1
   2c794:	bge	2c7f8 <__assert_fail@plt+0x1b2f4>
   2c798:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c79c:	ldr	r0, [r0, #8]
   2c7a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c7a4:	add	r0, r0, r1, lsl #2
   2c7a8:	ldr	r0, [r0]
   2c7ac:	str	r0, [sp, #12]
   2c7b0:	ldr	r1, [sp, #12]
   2c7b4:	add	r0, sp, #28
   2c7b8:	bl	23104 <__assert_fail@plt+0x11c00>
   2c7bc:	cmp	r0, #0
   2c7c0:	bne	2c7e4 <__assert_fail@plt+0x1b2e0>
   2c7c4:	ldr	r0, [fp, #-16]
   2c7c8:	ldr	r1, [sp, #12]
   2c7cc:	bl	23104 <__assert_fail@plt+0x11c00>
   2c7d0:	sub	r0, r0, #1
   2c7d4:	str	r0, [sp, #8]
   2c7d8:	ldr	r0, [fp, #-16]
   2c7dc:	ldr	r1, [sp, #8]
   2c7e0:	bl	237f0 <__assert_fail@plt+0x122ec>
   2c7e4:	b	2c7e8 <__assert_fail@plt+0x1b2e4>
   2c7e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c7ec:	add	r0, r0, #1
   2c7f0:	str	r0, [fp, #-24]	; 0xffffffe8
   2c7f4:	b	2c784 <__assert_fail@plt+0x1b280>
   2c7f8:	ldr	r0, [sp, #36]	; 0x24
   2c7fc:	bl	34c20 <__assert_fail@plt+0x2371c>
   2c800:	movw	r0, #0
   2c804:	str	r0, [fp, #-4]
   2c808:	ldr	r0, [fp, #-4]
   2c80c:	mov	sp, fp
   2c810:	pop	{fp, pc}
   2c814:	push	{r4, sl, fp, lr}
   2c818:	add	fp, sp, #8
   2c81c:	sub	sp, sp, #72	; 0x48
   2c820:	ldr	ip, [fp, #12]
   2c824:	ldr	lr, [fp, #8]
   2c828:	str	r0, [fp, #-16]
   2c82c:	str	r1, [fp, #-20]	; 0xffffffec
   2c830:	str	r2, [fp, #-24]	; 0xffffffe8
   2c834:	str	r3, [fp, #-28]	; 0xffffffe4
   2c838:	ldr	r0, [fp, #-16]
   2c83c:	ldr	r0, [r0, #84]	; 0x54
   2c840:	str	r0, [fp, #-32]	; 0xffffffe0
   2c844:	ldr	r0, [fp, #-16]
   2c848:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c84c:	str	ip, [sp, #16]
   2c850:	str	lr, [sp, #12]
   2c854:	bl	27570 <__assert_fail@plt+0x1606c>
   2c858:	str	r0, [sp, #32]
   2c85c:	ldr	r0, [fp, #-16]
   2c860:	ldr	r1, [fp, #12]
   2c864:	bl	27570 <__assert_fail@plt+0x1606c>
   2c868:	str	r0, [sp, #28]
   2c86c:	movw	r0, #0
   2c870:	str	r0, [fp, #-36]	; 0xffffffdc
   2c874:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c878:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c87c:	ldr	r1, [r1, #4]
   2c880:	cmp	r0, r1
   2c884:	bge	2c968 <__assert_fail@plt+0x1b464>
   2c888:	ldr	r0, [fp, #-16]
   2c88c:	ldr	r0, [r0, #116]	; 0x74
   2c890:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c894:	ldr	r1, [r1, #8]
   2c898:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2c89c:	ldr	r1, [r1, r2, lsl #2]
   2c8a0:	add	r1, r1, r1, lsl #1
   2c8a4:	add	r0, r0, r1, lsl #3
   2c8a8:	str	r0, [sp, #20]
   2c8ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c8b0:	ldr	r0, [r0]
   2c8b4:	ldr	r1, [sp, #20]
   2c8b8:	ldr	r1, [r1]
   2c8bc:	ldr	r0, [r0, r1, lsl #3]
   2c8c0:	str	r0, [sp, #24]
   2c8c4:	ldr	r0, [fp, #-16]
   2c8c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c8cc:	ldr	r1, [r1, #8]
   2c8d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2c8d4:	ldr	r1, [r1, r2, lsl #2]
   2c8d8:	ldr	r2, [sp, #24]
   2c8dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8e0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2c8e4:	ldr	lr, [sp, #32]
   2c8e8:	mov	r4, sp
   2c8ec:	str	lr, [r4, #4]
   2c8f0:	str	ip, [r4]
   2c8f4:	bl	2c984 <__assert_fail@plt+0x1b480>
   2c8f8:	str	r0, [sp, #36]	; 0x24
   2c8fc:	ldr	r0, [fp, #-16]
   2c900:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c904:	ldr	r1, [r1, #8]
   2c908:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2c90c:	add	r1, r1, r2, lsl #2
   2c910:	ldr	r1, [r1]
   2c914:	ldr	r2, [sp, #24]
   2c918:	ldr	r3, [fp, #8]
   2c91c:	ldr	ip, [fp, #12]
   2c920:	ldr	lr, [sp, #28]
   2c924:	str	ip, [sp]
   2c928:	str	lr, [sp, #4]
   2c92c:	bl	2c984 <__assert_fail@plt+0x1b480>
   2c930:	str	r0, [sp, #40]	; 0x28
   2c934:	ldr	r0, [sp, #40]	; 0x28
   2c938:	ldr	r1, [sp, #36]	; 0x24
   2c93c:	cmp	r0, r1
   2c940:	bne	2c948 <__assert_fail@plt+0x1b444>
   2c944:	b	2c958 <__assert_fail@plt+0x1b454>
   2c948:	movw	r0, #1
   2c94c:	and	r0, r0, #1
   2c950:	strb	r0, [fp, #-9]
   2c954:	b	2c974 <__assert_fail@plt+0x1b470>
   2c958:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c95c:	add	r0, r0, #1
   2c960:	str	r0, [fp, #-36]	; 0xffffffdc
   2c964:	b	2c874 <__assert_fail@plt+0x1b370>
   2c968:	movw	r0, #0
   2c96c:	and	r0, r0, #1
   2c970:	strb	r0, [fp, #-9]
   2c974:	ldrb	r0, [fp, #-9]
   2c978:	and	r0, r0, #1
   2c97c:	sub	sp, fp, #8
   2c980:	pop	{r4, sl, fp, pc}
   2c984:	push	{fp, lr}
   2c988:	mov	fp, sp
   2c98c:	sub	sp, sp, #32
   2c990:	ldr	ip, [fp, #12]
   2c994:	ldr	lr, [fp, #8]
   2c998:	str	r0, [fp, #-8]
   2c99c:	str	r1, [fp, #-12]
   2c9a0:	str	r2, [sp, #16]
   2c9a4:	str	r3, [sp, #12]
   2c9a8:	ldr	r0, [fp, #-8]
   2c9ac:	ldr	r0, [r0, #116]	; 0x74
   2c9b0:	ldr	r1, [fp, #-12]
   2c9b4:	movw	r2, #24
   2c9b8:	mul	r1, r1, r2
   2c9bc:	add	r0, r0, r1
   2c9c0:	str	r0, [sp, #8]
   2c9c4:	ldr	r0, [fp, #8]
   2c9c8:	ldr	r1, [sp, #8]
   2c9cc:	ldr	r1, [r1, #8]
   2c9d0:	cmp	r0, r1
   2c9d4:	bge	2c9e4 <__assert_fail@plt+0x1b4e0>
   2c9d8:	mvn	r0, #0
   2c9dc:	str	r0, [fp, #-4]
   2c9e0:	b	2ca88 <__assert_fail@plt+0x1b584>
   2c9e4:	ldr	r0, [sp, #8]
   2c9e8:	ldr	r0, [r0, #12]
   2c9ec:	ldr	r1, [fp, #8]
   2c9f0:	cmp	r0, r1
   2c9f4:	bge	2ca04 <__assert_fail@plt+0x1b500>
   2c9f8:	movw	r0, #1
   2c9fc:	str	r0, [fp, #-4]
   2ca00:	b	2ca88 <__assert_fail@plt+0x1b584>
   2ca04:	ldr	r0, [fp, #8]
   2ca08:	ldr	r1, [sp, #8]
   2ca0c:	ldr	r1, [r1, #8]
   2ca10:	cmp	r0, r1
   2ca14:	movw	r0, #0
   2ca18:	moveq	r0, #1
   2ca1c:	and	r0, r0, #1
   2ca20:	str	r0, [sp, #4]
   2ca24:	ldr	r0, [fp, #8]
   2ca28:	ldr	r1, [sp, #8]
   2ca2c:	ldr	r1, [r1, #12]
   2ca30:	cmp	r0, r1
   2ca34:	movw	r0, #0
   2ca38:	moveq	r0, #1
   2ca3c:	and	r0, r0, #1
   2ca40:	lsl	r0, r0, #1
   2ca44:	ldr	r1, [sp, #4]
   2ca48:	orr	r0, r1, r0
   2ca4c:	str	r0, [sp, #4]
   2ca50:	ldr	r0, [sp, #4]
   2ca54:	cmp	r0, #0
   2ca58:	bne	2ca68 <__assert_fail@plt+0x1b564>
   2ca5c:	movw	r0, #0
   2ca60:	str	r0, [fp, #-4]
   2ca64:	b	2ca88 <__assert_fail@plt+0x1b584>
   2ca68:	ldr	r0, [fp, #-8]
   2ca6c:	ldr	r1, [sp, #4]
   2ca70:	ldr	r2, [sp, #16]
   2ca74:	ldr	r3, [sp, #12]
   2ca78:	ldr	ip, [fp, #12]
   2ca7c:	str	ip, [sp]
   2ca80:	bl	2ca94 <__assert_fail@plt+0x1b590>
   2ca84:	str	r0, [fp, #-4]
   2ca88:	ldr	r0, [fp, #-4]
   2ca8c:	mov	sp, fp
   2ca90:	pop	{fp, pc}
   2ca94:	push	{fp, lr}
   2ca98:	mov	fp, sp
   2ca9c:	sub	sp, sp, #56	; 0x38
   2caa0:	ldr	ip, [fp, #8]
   2caa4:	str	r0, [fp, #-8]
   2caa8:	str	r1, [fp, #-12]
   2caac:	str	r2, [fp, #-16]
   2cab0:	str	r3, [fp, #-20]	; 0xffffffec
   2cab4:	ldr	r0, [fp, #-8]
   2cab8:	ldr	r0, [r0, #84]	; 0x54
   2cabc:	str	r0, [fp, #-24]	; 0xffffffe8
   2cac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cac4:	ldr	r0, [r0, #24]
   2cac8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cacc:	movw	r2, #12
   2cad0:	mul	r1, r1, r2
   2cad4:	add	r0, r0, r1
   2cad8:	str	r0, [sp, #28]
   2cadc:	movw	r0, #0
   2cae0:	str	r0, [sp, #24]
   2cae4:	ldr	r0, [sp, #24]
   2cae8:	ldr	r1, [sp, #28]
   2caec:	ldr	r1, [r1, #4]
   2caf0:	cmp	r0, r1
   2caf4:	bge	2cd6c <__assert_fail@plt+0x1b868>
   2caf8:	ldr	r0, [sp, #28]
   2cafc:	ldr	r0, [r0, #8]
   2cb00:	ldr	r1, [sp, #24]
   2cb04:	ldr	r0, [r0, r1, lsl #2]
   2cb08:	str	r0, [sp, #20]
   2cb0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb10:	ldr	r0, [r0]
   2cb14:	ldr	r1, [sp, #20]
   2cb18:	add	r0, r0, r1, lsl #3
   2cb1c:	ldrb	r0, [r0, #4]
   2cb20:	mov	r1, r0
   2cb24:	cmp	r0, #4
   2cb28:	str	r1, [sp, #4]
   2cb2c:	beq	2cb54 <__assert_fail@plt+0x1b650>
   2cb30:	b	2cb34 <__assert_fail@plt+0x1b630>
   2cb34:	ldr	r0, [sp, #4]
   2cb38:	cmp	r0, #8
   2cb3c:	beq	2ccd4 <__assert_fail@plt+0x1b7d0>
   2cb40:	b	2cb44 <__assert_fail@plt+0x1b640>
   2cb44:	ldr	r0, [sp, #4]
   2cb48:	cmp	r0, #9
   2cb4c:	beq	2cd14 <__assert_fail@plt+0x1b810>
   2cb50:	b	2cd54 <__assert_fail@plt+0x1b850>
   2cb54:	ldr	r0, [fp, #8]
   2cb58:	cmn	r0, #1
   2cb5c:	beq	2ccd0 <__assert_fail@plt+0x1b7cc>
   2cb60:	ldr	r0, [fp, #-8]
   2cb64:	ldr	r0, [r0, #116]	; 0x74
   2cb68:	ldr	r1, [fp, #8]
   2cb6c:	movw	r2, #24
   2cb70:	mul	r1, r1, r2
   2cb74:	add	r0, r0, r1
   2cb78:	str	r0, [sp, #16]
   2cb7c:	ldr	r0, [sp, #16]
   2cb80:	ldr	r0, [r0]
   2cb84:	ldr	r1, [sp, #20]
   2cb88:	cmp	r0, r1
   2cb8c:	beq	2cb94 <__assert_fail@plt+0x1b690>
   2cb90:	b	2ccb4 <__assert_fail@plt+0x1b7b0>
   2cb94:	ldr	r0, [fp, #-16]
   2cb98:	cmp	r0, #32
   2cb9c:	bge	2cbc4 <__assert_fail@plt+0x1b6c0>
   2cba0:	ldr	r0, [sp, #16]
   2cba4:	ldr	r0, [r0, #16]
   2cba8:	ldr	r1, [fp, #-16]
   2cbac:	movw	r2, #1
   2cbb0:	lsl	r1, r2, r1
   2cbb4:	and	r0, r0, r1
   2cbb8:	cmp	r0, #0
   2cbbc:	bne	2cbc4 <__assert_fail@plt+0x1b6c0>
   2cbc0:	b	2ccb4 <__assert_fail@plt+0x1b7b0>
   2cbc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cbc8:	ldr	r0, [r0, #20]
   2cbcc:	ldr	r1, [sp, #20]
   2cbd0:	movw	r2, #12
   2cbd4:	mul	r1, r1, r2
   2cbd8:	add	r0, r0, r1
   2cbdc:	ldr	r0, [r0, #8]
   2cbe0:	ldr	r0, [r0]
   2cbe4:	str	r0, [sp, #12]
   2cbe8:	ldr	r0, [sp, #12]
   2cbec:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cbf0:	cmp	r0, r1
   2cbf4:	bne	2cc20 <__assert_fail@plt+0x1b71c>
   2cbf8:	ldr	r0, [fp, #-12]
   2cbfc:	and	r0, r0, #1
   2cc00:	cmp	r0, #0
   2cc04:	beq	2cc14 <__assert_fail@plt+0x1b710>
   2cc08:	mvn	r0, #0
   2cc0c:	str	r0, [fp, #-4]
   2cc10:	b	2cd90 <__assert_fail@plt+0x1b88c>
   2cc14:	movw	r0, #0
   2cc18:	str	r0, [fp, #-4]
   2cc1c:	b	2cd90 <__assert_fail@plt+0x1b88c>
   2cc20:	ldr	r0, [fp, #-8]
   2cc24:	ldr	r1, [fp, #-12]
   2cc28:	ldr	r2, [fp, #-16]
   2cc2c:	ldr	r3, [sp, #12]
   2cc30:	ldr	ip, [fp, #8]
   2cc34:	str	ip, [sp]
   2cc38:	bl	2ca94 <__assert_fail@plt+0x1b590>
   2cc3c:	str	r0, [sp, #8]
   2cc40:	ldr	r0, [sp, #8]
   2cc44:	cmn	r0, #1
   2cc48:	bne	2cc58 <__assert_fail@plt+0x1b754>
   2cc4c:	mvn	r0, #0
   2cc50:	str	r0, [fp, #-4]
   2cc54:	b	2cd90 <__assert_fail@plt+0x1b88c>
   2cc58:	ldr	r0, [sp, #8]
   2cc5c:	cmp	r0, #0
   2cc60:	bne	2cc80 <__assert_fail@plt+0x1b77c>
   2cc64:	ldr	r0, [fp, #-12]
   2cc68:	and	r0, r0, #2
   2cc6c:	cmp	r0, #0
   2cc70:	beq	2cc80 <__assert_fail@plt+0x1b77c>
   2cc74:	movw	r0, #0
   2cc78:	str	r0, [fp, #-4]
   2cc7c:	b	2cd90 <__assert_fail@plt+0x1b88c>
   2cc80:	ldr	r0, [fp, #-16]
   2cc84:	cmp	r0, #32
   2cc88:	bge	2ccb0 <__assert_fail@plt+0x1b7ac>
   2cc8c:	ldr	r0, [fp, #-16]
   2cc90:	movw	r1, #1
   2cc94:	lsl	r0, r1, r0
   2cc98:	mvn	r1, #0
   2cc9c:	eor	r0, r0, r1
   2cca0:	ldr	r1, [sp, #16]
   2cca4:	ldr	r2, [r1, #16]
   2cca8:	and	r0, r2, r0
   2ccac:	str	r0, [r1, #16]
   2ccb0:	b	2ccb4 <__assert_fail@plt+0x1b7b0>
   2ccb4:	ldr	r0, [sp, #16]
   2ccb8:	add	r1, r0, #24
   2ccbc:	str	r1, [sp, #16]
   2ccc0:	ldrsb	r0, [r0, #20]
   2ccc4:	cmp	r0, #0
   2ccc8:	bne	2cb7c <__assert_fail@plt+0x1b678>
   2cccc:	b	2ccd0 <__assert_fail@plt+0x1b7cc>
   2ccd0:	b	2cd58 <__assert_fail@plt+0x1b854>
   2ccd4:	ldr	r0, [fp, #-12]
   2ccd8:	and	r0, r0, #1
   2ccdc:	cmp	r0, #0
   2cce0:	beq	2cd10 <__assert_fail@plt+0x1b80c>
   2cce4:	ldr	r0, [fp, #-16]
   2cce8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ccec:	ldr	r1, [r1]
   2ccf0:	ldr	r2, [sp, #20]
   2ccf4:	add	r1, r1, r2, lsl #3
   2ccf8:	ldr	r1, [r1]
   2ccfc:	cmp	r0, r1
   2cd00:	bne	2cd10 <__assert_fail@plt+0x1b80c>
   2cd04:	mvn	r0, #0
   2cd08:	str	r0, [fp, #-4]
   2cd0c:	b	2cd90 <__assert_fail@plt+0x1b88c>
   2cd10:	b	2cd58 <__assert_fail@plt+0x1b854>
   2cd14:	ldr	r0, [fp, #-12]
   2cd18:	and	r0, r0, #2
   2cd1c:	cmp	r0, #0
   2cd20:	beq	2cd50 <__assert_fail@plt+0x1b84c>
   2cd24:	ldr	r0, [fp, #-16]
   2cd28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cd2c:	ldr	r1, [r1]
   2cd30:	ldr	r2, [sp, #20]
   2cd34:	add	r1, r1, r2, lsl #3
   2cd38:	ldr	r1, [r1]
   2cd3c:	cmp	r0, r1
   2cd40:	bne	2cd50 <__assert_fail@plt+0x1b84c>
   2cd44:	movw	r0, #0
   2cd48:	str	r0, [fp, #-4]
   2cd4c:	b	2cd90 <__assert_fail@plt+0x1b88c>
   2cd50:	b	2cd58 <__assert_fail@plt+0x1b854>
   2cd54:	b	2cd58 <__assert_fail@plt+0x1b854>
   2cd58:	b	2cd5c <__assert_fail@plt+0x1b858>
   2cd5c:	ldr	r0, [sp, #24]
   2cd60:	add	r0, r0, #1
   2cd64:	str	r0, [sp, #24]
   2cd68:	b	2cae4 <__assert_fail@plt+0x1b5e0>
   2cd6c:	ldr	r0, [fp, #-12]
   2cd70:	and	r0, r0, #2
   2cd74:	cmp	r0, #0
   2cd78:	movw	r0, #0
   2cd7c:	movne	r0, #1
   2cd80:	tst	r0, #1
   2cd84:	movw	r0, #1
   2cd88:	moveq	r0, #0
   2cd8c:	str	r0, [fp, #-4]
   2cd90:	ldr	r0, [fp, #-4]
   2cd94:	mov	sp, fp
   2cd98:	pop	{fp, pc}
   2cd9c:	push	{fp, lr}
   2cda0:	mov	fp, sp
   2cda4:	sub	sp, sp, #32
   2cda8:	ldr	ip, [fp, #8]
   2cdac:	str	r0, [fp, #-4]
   2cdb0:	str	r1, [fp, #-8]
   2cdb4:	str	r2, [fp, #-12]
   2cdb8:	str	r3, [sp, #16]
   2cdbc:	ldr	r0, [fp, #-4]
   2cdc0:	ldr	r0, [r0, #84]	; 0x54
   2cdc4:	str	r0, [sp, #12]
   2cdc8:	ldr	r0, [sp, #12]
   2cdcc:	ldr	r1, [fp, #-12]
   2cdd0:	ldr	r2, [fp, #-4]
   2cdd4:	ldr	r3, [sp, #16]
   2cdd8:	str	ip, [sp, #4]
   2cddc:	bl	2915c <__assert_fail@plt+0x17c58>
   2cde0:	str	r0, [sp, #8]
   2cde4:	ldr	r0, [sp, #8]
   2cde8:	cmp	r0, #0
   2cdec:	ble	2ce74 <__assert_fail@plt+0x1b970>
   2cdf0:	ldr	r0, [sp, #16]
   2cdf4:	ldr	r1, [sp, #8]
   2cdf8:	add	r0, r0, r1
   2cdfc:	ldr	r1, [fp, #8]
   2ce00:	cmp	r0, r1
   2ce04:	bgt	2ce74 <__assert_fail@plt+0x1b970>
   2ce08:	ldr	r0, [fp, #-8]
   2ce0c:	ldr	r0, [r0]
   2ce10:	ldr	r1, [sp, #16]
   2ce14:	ldr	r2, [sp, #8]
   2ce18:	add	r1, r1, r2
   2ce1c:	add	r0, r0, r1, lsl #2
   2ce20:	ldr	r0, [r0]
   2ce24:	movw	r1, #0
   2ce28:	cmp	r0, r1
   2ce2c:	beq	2ce6c <__assert_fail@plt+0x1b968>
   2ce30:	ldr	r0, [fp, #-8]
   2ce34:	ldr	r0, [r0]
   2ce38:	ldr	r1, [sp, #16]
   2ce3c:	ldr	r2, [sp, #8]
   2ce40:	add	r1, r1, r2
   2ce44:	ldr	r0, [r0, r1, lsl #2]
   2ce48:	add	r0, r0, #4
   2ce4c:	ldr	r1, [sp, #12]
   2ce50:	ldr	r1, [r1, #12]
   2ce54:	ldr	r2, [fp, #-12]
   2ce58:	add	r1, r1, r2, lsl #2
   2ce5c:	ldr	r1, [r1]
   2ce60:	bl	23104 <__assert_fail@plt+0x11c00>
   2ce64:	cmp	r0, #0
   2ce68:	bne	2ce74 <__assert_fail@plt+0x1b970>
   2ce6c:	movw	r0, #0
   2ce70:	str	r0, [sp, #8]
   2ce74:	ldr	r0, [sp, #8]
   2ce78:	mov	sp, fp
   2ce7c:	pop	{fp, pc}
   2ce80:	sub	sp, sp, #4
   2ce84:	str	r0, [sp]
   2ce88:	ldr	r0, [sp]
   2ce8c:	movw	r1, #0
   2ce90:	str	r1, [r0]
   2ce94:	ldr	r0, [sp]
   2ce98:	movw	r1, #16
   2ce9c:	str	r1, [r0, #4]
   2cea0:	ldr	r0, [sp]
   2cea4:	add	r0, r0, #12
   2cea8:	ldr	r1, [sp]
   2ceac:	str	r0, [r1, #8]
   2ceb0:	add	sp, sp, #4
   2ceb4:	bx	lr
   2ceb8:	push	{fp, lr}
   2cebc:	mov	fp, sp
   2cec0:	sub	sp, sp, #16
   2cec4:	str	r0, [sp, #8]
   2cec8:	str	r1, [sp, #4]
   2cecc:	ldr	r0, [sp, #4]
   2ced0:	ldr	r1, [sp, #8]
   2ced4:	ldr	r1, [r1]
   2ced8:	cmp	r0, r1
   2cedc:	bls	2cf2c <__assert_fail@plt+0x1ba28>
   2cee0:	ldr	r0, [sp, #8]
   2cee4:	ldr	r1, [sp, #4]
   2cee8:	ldr	r2, [sp, #8]
   2ceec:	add	r2, r2, #12
   2cef0:	movw	r3, #8
   2cef4:	bl	337e8 <__assert_fail@plt+0x222e4>
   2cef8:	and	r0, r0, #1
   2cefc:	strb	r0, [sp, #3]
   2cf00:	ldrb	r0, [sp, #3]
   2cf04:	mvn	r1, #0
   2cf08:	eor	r0, r0, r1
   2cf0c:	tst	r0, #1
   2cf10:	beq	2cf1c <__assert_fail@plt+0x1ba18>
   2cf14:	ldr	r0, [sp, #8]
   2cf18:	bl	2d914 <__assert_fail@plt+0x1c410>
   2cf1c:	ldrb	r0, [sp, #3]
   2cf20:	and	r0, r0, #1
   2cf24:	strb	r0, [fp, #-1]
   2cf28:	b	2cf68 <__assert_fail@plt+0x1ba64>
   2cf2c:	ldr	r0, [sp, #8]
   2cf30:	ldr	r0, [r0, #8]
   2cf34:	ldr	r1, [sp, #4]
   2cf38:	add	r0, r0, r1, lsl #3
   2cf3c:	ldr	r1, [sp, #8]
   2cf40:	ldr	r1, [r1]
   2cf44:	ldr	r2, [sp, #4]
   2cf48:	sub	r1, r1, r2
   2cf4c:	bl	2d970 <__assert_fail@plt+0x1c46c>
   2cf50:	ldr	r0, [sp, #4]
   2cf54:	ldr	r1, [sp, #8]
   2cf58:	str	r0, [r1]
   2cf5c:	movw	r0, #1
   2cf60:	and	r0, r0, #1
   2cf64:	strb	r0, [fp, #-1]
   2cf68:	ldrb	r0, [fp, #-1]
   2cf6c:	and	r0, r0, #1
   2cf70:	mov	sp, fp
   2cf74:	pop	{fp, pc}
   2cf78:	push	{fp, lr}
   2cf7c:	mov	fp, sp
   2cf80:	sub	sp, sp, #8
   2cf84:	str	r0, [sp, #4]
   2cf88:	ldr	r0, [sp, #4]
   2cf8c:	ldr	r0, [r0, #8]
   2cf90:	ldr	r1, [sp, #4]
   2cf94:	ldr	r1, [r1]
   2cf98:	bl	2d970 <__assert_fail@plt+0x1c46c>
   2cf9c:	ldr	r0, [sp, #4]
   2cfa0:	bl	2d984 <__assert_fail@plt+0x1c480>
   2cfa4:	ldr	r0, [sp, #4]
   2cfa8:	bl	2ce80 <__assert_fail@plt+0x1b97c>
   2cfac:	mov	sp, fp
   2cfb0:	pop	{fp, pc}
   2cfb4:	push	{fp, lr}
   2cfb8:	mov	fp, sp
   2cfbc:	sub	sp, sp, #8
   2cfc0:	str	r0, [sp, #4]
   2cfc4:	ldr	r0, [sp, #4]
   2cfc8:	movw	r1, #0
   2cfcc:	cmp	r0, r1
   2cfd0:	beq	2d04c <__assert_fail@plt+0x1bb48>
   2cfd4:	movw	r0, #0
   2cfd8:	str	r0, [sp]
   2cfdc:	ldr	r0, [sp]
   2cfe0:	ldr	r1, [sp, #4]
   2cfe4:	ldr	r1, [r1]
   2cfe8:	cmp	r0, r1
   2cfec:	bge	2d040 <__assert_fail@plt+0x1bb3c>
   2cff0:	ldr	r0, [sp, #4]
   2cff4:	ldr	r0, [r0, #8]
   2cff8:	ldr	r1, [sp]
   2cffc:	movw	r2, #24
   2d000:	mul	r1, r1, r2
   2d004:	add	r0, r0, r1
   2d008:	ldr	r0, [r0, #20]
   2d00c:	bl	34c20 <__assert_fail@plt+0x2371c>
   2d010:	ldr	r0, [sp, #4]
   2d014:	ldr	r0, [r0, #8]
   2d018:	ldr	r1, [sp]
   2d01c:	movw	r2, #24
   2d020:	mul	r1, r1, r2
   2d024:	add	r0, r0, r1
   2d028:	ldr	r0, [r0, #8]
   2d02c:	bl	34c20 <__assert_fail@plt+0x2371c>
   2d030:	ldr	r0, [sp]
   2d034:	add	r0, r0, #1
   2d038:	str	r0, [sp]
   2d03c:	b	2cfdc <__assert_fail@plt+0x1bad8>
   2d040:	ldr	r0, [sp, #4]
   2d044:	ldr	r0, [r0, #8]
   2d048:	bl	34c20 <__assert_fail@plt+0x2371c>
   2d04c:	movw	r0, #0
   2d050:	mov	sp, fp
   2d054:	pop	{fp, pc}
   2d058:	sub	sp, sp, #4
   2d05c:	str	r0, [sp]
   2d060:	ldr	r0, [sp]
   2d064:	ldr	r0, [r0, #8]
   2d068:	add	sp, sp, #4
   2d06c:	bx	lr
   2d070:	push	{fp, lr}
   2d074:	mov	fp, sp
   2d078:	sub	sp, sp, #32
   2d07c:	ldr	ip, [fp, #12]
   2d080:	ldr	lr, [fp, #8]
   2d084:	str	r0, [fp, #-4]
   2d088:	str	r1, [fp, #-8]
   2d08c:	str	r2, [fp, #-12]
   2d090:	str	r3, [sp, #16]
   2d094:	ldr	r0, [fp, #-4]
   2d098:	ldr	r0, [r0]
   2d09c:	ldr	r1, [sp, #16]
   2d0a0:	add	r0, r0, r1, lsl #3
   2d0a4:	ldr	r0, [r0, #4]
   2d0a8:	and	r0, r0, #255	; 0xff
   2d0ac:	str	r0, [sp, #12]
   2d0b0:	ldr	r0, [sp, #12]
   2d0b4:	cmp	r0, #8
   2d0b8:	bne	2d110 <__assert_fail@plt+0x1bc0c>
   2d0bc:	ldr	r0, [fp, #-4]
   2d0c0:	ldr	r0, [r0]
   2d0c4:	ldr	r1, [sp, #16]
   2d0c8:	add	r0, r0, r1, lsl #3
   2d0cc:	ldr	r0, [r0]
   2d0d0:	add	r0, r0, #1
   2d0d4:	str	r0, [sp, #8]
   2d0d8:	ldr	r0, [sp, #8]
   2d0dc:	ldr	r1, [fp, #12]
   2d0e0:	cmp	r0, r1
   2d0e4:	bge	2d10c <__assert_fail@plt+0x1bc08>
   2d0e8:	ldr	r0, [fp, #8]
   2d0ec:	ldr	r1, [fp, #-8]
   2d0f0:	ldr	r2, [sp, #8]
   2d0f4:	str	r0, [r1, r2, lsl #3]
   2d0f8:	ldr	r0, [fp, #-8]
   2d0fc:	ldr	r1, [sp, #8]
   2d100:	add	r0, r0, r1, lsl #3
   2d104:	mvn	r1, #0
   2d108:	str	r1, [r0, #4]
   2d10c:	b	2d208 <__assert_fail@plt+0x1bd04>
   2d110:	ldr	r0, [sp, #12]
   2d114:	cmp	r0, #9
   2d118:	bne	2d204 <__assert_fail@plt+0x1bd00>
   2d11c:	ldr	r0, [fp, #-4]
   2d120:	ldr	r0, [r0]
   2d124:	ldr	r1, [sp, #16]
   2d128:	add	r0, r0, r1, lsl #3
   2d12c:	ldr	r0, [r0]
   2d130:	add	r0, r0, #1
   2d134:	str	r0, [sp, #4]
   2d138:	ldr	r0, [sp, #4]
   2d13c:	ldr	r1, [fp, #12]
   2d140:	cmp	r0, r1
   2d144:	bge	2d200 <__assert_fail@plt+0x1bcfc>
   2d148:	ldr	r0, [fp, #-8]
   2d14c:	ldr	r1, [sp, #4]
   2d150:	add	r0, r0, r1, lsl #3
   2d154:	ldr	r0, [r0]
   2d158:	ldr	r1, [fp, #8]
   2d15c:	cmp	r0, r1
   2d160:	bge	2d190 <__assert_fail@plt+0x1bc8c>
   2d164:	ldr	r0, [fp, #8]
   2d168:	ldr	r1, [fp, #-8]
   2d16c:	ldr	r2, [sp, #4]
   2d170:	add	r1, r1, r2, lsl #3
   2d174:	str	r0, [r1, #4]
   2d178:	ldr	r0, [fp, #-12]
   2d17c:	ldr	r1, [fp, #-8]
   2d180:	ldr	r2, [fp, #12]
   2d184:	lsl	r2, r2, #3
   2d188:	bl	112a0 <memcpy@plt>
   2d18c:	b	2d1fc <__assert_fail@plt+0x1bcf8>
   2d190:	ldr	r0, [fp, #-4]
   2d194:	ldr	r0, [r0]
   2d198:	ldr	r1, [sp, #16]
   2d19c:	add	r0, r0, r1, lsl #3
   2d1a0:	ldr	r0, [r0, #4]
   2d1a4:	lsr	r0, r0, #19
   2d1a8:	and	r0, r0, #1
   2d1ac:	cmp	r0, #0
   2d1b0:	beq	2d1e4 <__assert_fail@plt+0x1bce0>
   2d1b4:	ldr	r0, [fp, #-12]
   2d1b8:	ldr	r1, [sp, #4]
   2d1bc:	add	r0, r0, r1, lsl #3
   2d1c0:	ldr	r0, [r0]
   2d1c4:	cmn	r0, #1
   2d1c8:	beq	2d1e4 <__assert_fail@plt+0x1bce0>
   2d1cc:	ldr	r0, [fp, #-8]
   2d1d0:	ldr	r1, [fp, #-12]
   2d1d4:	ldr	r2, [fp, #12]
   2d1d8:	lsl	r2, r2, #3
   2d1dc:	bl	112a0 <memcpy@plt>
   2d1e0:	b	2d1f8 <__assert_fail@plt+0x1bcf4>
   2d1e4:	ldr	r0, [fp, #8]
   2d1e8:	ldr	r1, [fp, #-8]
   2d1ec:	ldr	r2, [sp, #4]
   2d1f0:	add	r1, r1, r2, lsl #3
   2d1f4:	str	r0, [r1, #4]
   2d1f8:	b	2d1fc <__assert_fail@plt+0x1bcf8>
   2d1fc:	b	2d200 <__assert_fail@plt+0x1bcfc>
   2d200:	b	2d204 <__assert_fail@plt+0x1bd00>
   2d204:	b	2d208 <__assert_fail@plt+0x1bd04>
   2d208:	mov	sp, fp
   2d20c:	pop	{fp, pc}
   2d210:	push	{fp, lr}
   2d214:	mov	fp, sp
   2d218:	sub	sp, sp, #32
   2d21c:	ldr	ip, [fp, #12]
   2d220:	ldr	lr, [fp, #8]
   2d224:	str	r0, [fp, #-8]
   2d228:	str	r1, [fp, #-12]
   2d22c:	str	r2, [sp, #16]
   2d230:	str	r3, [sp, #12]
   2d234:	ldr	r0, [fp, #-8]
   2d238:	movw	r1, #0
   2d23c:	cmp	r0, r1
   2d240:	beq	2d254 <__assert_fail@plt+0x1bd50>
   2d244:	ldr	r0, [fp, #-8]
   2d248:	ldr	r0, [r0]
   2d24c:	cmp	r0, #0
   2d250:	bne	2d260 <__assert_fail@plt+0x1bd5c>
   2d254:	mvn	r0, #0
   2d258:	str	r0, [fp, #-4]
   2d25c:	b	2d39c <__assert_fail@plt+0x1be98>
   2d260:	ldr	r0, [fp, #-8]
   2d264:	ldr	r1, [r0]
   2d268:	sub	r1, r1, #1
   2d26c:	str	r1, [r0]
   2d270:	str	r1, [sp, #8]
   2d274:	ldr	r0, [fp, #-8]
   2d278:	ldr	r0, [r0, #8]
   2d27c:	ldr	r1, [sp, #8]
   2d280:	add	r1, r1, r1, lsl #1
   2d284:	ldr	r0, [r0, r1, lsl #3]
   2d288:	ldr	r1, [fp, #-12]
   2d28c:	str	r0, [r1]
   2d290:	ldr	r0, [sp, #12]
   2d294:	ldr	r1, [fp, #-8]
   2d298:	ldr	r1, [r1, #8]
   2d29c:	ldr	r2, [sp, #8]
   2d2a0:	add	r2, r2, r2, lsl #1
   2d2a4:	add	r1, r1, r2, lsl #3
   2d2a8:	ldr	r1, [r1, #8]
   2d2ac:	ldr	r2, [sp, #16]
   2d2b0:	lsl	r2, r2, #3
   2d2b4:	bl	112a0 <memcpy@plt>
   2d2b8:	ldr	r1, [fp, #8]
   2d2bc:	ldr	r2, [fp, #-8]
   2d2c0:	ldr	r2, [r2, #8]
   2d2c4:	ldr	r3, [sp, #8]
   2d2c8:	add	r3, r3, r3, lsl #1
   2d2cc:	add	r2, r2, r3, lsl #3
   2d2d0:	ldr	r2, [r2, #8]
   2d2d4:	ldr	r3, [sp, #16]
   2d2d8:	add	r2, r2, r3, lsl #3
   2d2dc:	lsl	r3, r3, #3
   2d2e0:	str	r0, [sp, #4]
   2d2e4:	mov	r0, r1
   2d2e8:	mov	r1, r2
   2d2ec:	mov	r2, r3
   2d2f0:	bl	112a0 <memcpy@plt>
   2d2f4:	ldr	r0, [fp, #12]
   2d2f8:	ldr	r0, [r0, #8]
   2d2fc:	bl	34c20 <__assert_fail@plt+0x2371c>
   2d300:	ldr	r0, [fp, #-8]
   2d304:	ldr	r0, [r0, #8]
   2d308:	ldr	r1, [sp, #8]
   2d30c:	movw	r2, #24
   2d310:	mul	r1, r1, r2
   2d314:	add	r0, r0, r1
   2d318:	ldr	r0, [r0, #8]
   2d31c:	bl	34c20 <__assert_fail@plt+0x2371c>
   2d320:	ldr	r0, [fp, #12]
   2d324:	ldr	r1, [fp, #-8]
   2d328:	ldr	r1, [r1, #8]
   2d32c:	ldr	r2, [sp, #8]
   2d330:	movw	r3, #24
   2d334:	mul	r2, r2, r3
   2d338:	add	r1, r1, r2
   2d33c:	ldr	r2, [r1, #12]
   2d340:	str	r2, [r0]
   2d344:	ldr	r2, [r1, #16]
   2d348:	str	r2, [r0, #4]
   2d34c:	ldr	r1, [r1, #20]
   2d350:	str	r1, [r0, #8]
   2d354:	ldr	r0, [fp, #-8]
   2d358:	ldr	r0, [r0, #8]
   2d35c:	ldr	r1, [sp, #8]
   2d360:	mul	r1, r1, r3
   2d364:	add	r0, r0, r1
   2d368:	ldr	r0, [r0, #4]
   2d36c:	movw	r1, #0
   2d370:	cmp	r1, r0
   2d374:	bgt	2d37c <__assert_fail@plt+0x1be78>
   2d378:	b	2d37c <__assert_fail@plt+0x1be78>
   2d37c:	ldr	r0, [fp, #-8]
   2d380:	ldr	r0, [r0, #8]
   2d384:	ldr	r1, [sp, #8]
   2d388:	movw	r2, #24
   2d38c:	mul	r1, r1, r2
   2d390:	add	r0, r0, r1
   2d394:	ldr	r0, [r0, #4]
   2d398:	str	r0, [fp, #-4]
   2d39c:	ldr	r0, [fp, #-4]
   2d3a0:	mov	sp, fp
   2d3a4:	pop	{fp, pc}
   2d3a8:	push	{r4, r5, fp, lr}
   2d3ac:	add	fp, sp, #8
   2d3b0:	sub	sp, sp, #96	; 0x60
   2d3b4:	ldr	ip, [fp, #20]
   2d3b8:	ldr	lr, [fp, #16]
   2d3bc:	ldr	r4, [fp, #12]
   2d3c0:	ldr	r5, [fp, #8]
   2d3c4:	str	r0, [fp, #-16]
   2d3c8:	str	r1, [fp, #-20]	; 0xffffffec
   2d3cc:	str	r2, [fp, #-24]	; 0xffffffe8
   2d3d0:	str	r3, [fp, #-28]	; 0xffffffe4
   2d3d4:	ldr	r0, [fp, #-16]
   2d3d8:	ldr	r0, [r0, #84]	; 0x54
   2d3dc:	str	r0, [fp, #-32]	; 0xffffffe0
   2d3e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d3e4:	ldr	r0, [r0]
   2d3e8:	ldr	r1, [fp, #12]
   2d3ec:	add	r0, r0, r1, lsl #3
   2d3f0:	ldr	r0, [r0, #4]
   2d3f4:	and	r0, r0, #255	; 0xff
   2d3f8:	and	r0, r0, #8
   2d3fc:	cmp	r0, #0
   2d400:	beq	2d594 <__assert_fail@plt+0x1c090>
   2d404:	ldr	r0, [fp, #-16]
   2d408:	ldr	r0, [r0, #100]	; 0x64
   2d40c:	ldr	r1, [fp, #8]
   2d410:	ldr	r1, [r1]
   2d414:	add	r0, r0, r1, lsl #2
   2d418:	ldr	r0, [r0]
   2d41c:	add	r0, r0, #4
   2d420:	str	r0, [fp, #-36]	; 0xffffffdc
   2d424:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d428:	ldr	r0, [r0, #20]
   2d42c:	ldr	r1, [fp, #12]
   2d430:	movw	r2, #12
   2d434:	mul	r1, r1, r2
   2d438:	add	r0, r0, r1
   2d43c:	str	r0, [fp, #-40]	; 0xffffffd8
   2d440:	ldr	r0, [fp, #16]
   2d444:	ldr	r1, [fp, #12]
   2d448:	bl	23104 <__assert_fail@plt+0x11c00>
   2d44c:	cmp	r0, #0
   2d450:	bne	2d48c <__assert_fail@plt+0x1bf88>
   2d454:	ldr	r0, [fp, #16]
   2d458:	ldr	r1, [fp, #12]
   2d45c:	bl	22c48 <__assert_fail@plt+0x11744>
   2d460:	and	r0, r0, #1
   2d464:	strb	r0, [fp, #-41]	; 0xffffffd7
   2d468:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   2d46c:	mvn	r1, #0
   2d470:	eor	r0, r0, r1
   2d474:	tst	r0, #1
   2d478:	beq	2d488 <__assert_fail@plt+0x1bf84>
   2d47c:	mvn	r0, #1
   2d480:	str	r0, [fp, #-12]
   2d484:	b	2d908 <__assert_fail@plt+0x1c404>
   2d488:	b	2d48c <__assert_fail@plt+0x1bf88>
   2d48c:	mvn	r0, #0
   2d490:	str	r0, [fp, #-48]	; 0xffffffd0
   2d494:	movw	r0, #0
   2d498:	str	r0, [sp, #52]	; 0x34
   2d49c:	ldr	r0, [sp, #52]	; 0x34
   2d4a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2d4a4:	ldr	r1, [r1, #4]
   2d4a8:	cmp	r0, r1
   2d4ac:	bge	2d588 <__assert_fail@plt+0x1c084>
   2d4b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d4b4:	ldr	r0, [r0, #8]
   2d4b8:	ldr	r1, [sp, #52]	; 0x34
   2d4bc:	add	r0, r0, r1, lsl #2
   2d4c0:	ldr	r0, [r0]
   2d4c4:	str	r0, [sp, #48]	; 0x30
   2d4c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d4cc:	ldr	r1, [sp, #48]	; 0x30
   2d4d0:	bl	23104 <__assert_fail@plt+0x11c00>
   2d4d4:	cmp	r0, #0
   2d4d8:	bne	2d4e0 <__assert_fail@plt+0x1bfdc>
   2d4dc:	b	2d578 <__assert_fail@plt+0x1c074>
   2d4e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d4e4:	cmn	r0, #1
   2d4e8:	bne	2d4f8 <__assert_fail@plt+0x1bff4>
   2d4ec:	ldr	r0, [sp, #48]	; 0x30
   2d4f0:	str	r0, [fp, #-48]	; 0xffffffd0
   2d4f4:	b	2d574 <__assert_fail@plt+0x1c070>
   2d4f8:	ldr	r0, [fp, #16]
   2d4fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2d500:	bl	23104 <__assert_fail@plt+0x11c00>
   2d504:	cmp	r0, #0
   2d508:	beq	2d518 <__assert_fail@plt+0x1c014>
   2d50c:	ldr	r0, [sp, #48]	; 0x30
   2d510:	str	r0, [fp, #-12]
   2d514:	b	2d908 <__assert_fail@plt+0x1c404>
   2d518:	ldr	r0, [fp, #20]
   2d51c:	movw	r1, #0
   2d520:	cmp	r0, r1
   2d524:	beq	2d56c <__assert_fail@plt+0x1c068>
   2d528:	ldr	r0, [fp, #20]
   2d52c:	ldr	r1, [fp, #8]
   2d530:	ldr	r1, [r1]
   2d534:	ldr	r2, [sp, #48]	; 0x30
   2d538:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d53c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   2d540:	ldr	lr, [fp, #-28]	; 0xffffffe4
   2d544:	ldr	r4, [fp, #16]
   2d548:	str	ip, [sp]
   2d54c:	str	lr, [sp, #4]
   2d550:	str	r4, [sp, #8]
   2d554:	bl	2d9c8 <__assert_fail@plt+0x1c4c4>
   2d558:	cmp	r0, #0
   2d55c:	beq	2d56c <__assert_fail@plt+0x1c068>
   2d560:	mvn	r0, #1
   2d564:	str	r0, [fp, #-12]
   2d568:	b	2d908 <__assert_fail@plt+0x1c404>
   2d56c:	b	2d570 <__assert_fail@plt+0x1c06c>
   2d570:	b	2d588 <__assert_fail@plt+0x1c084>
   2d574:	b	2d578 <__assert_fail@plt+0x1c074>
   2d578:	ldr	r0, [sp, #52]	; 0x34
   2d57c:	add	r0, r0, #1
   2d580:	str	r0, [sp, #52]	; 0x34
   2d584:	b	2d49c <__assert_fail@plt+0x1bf98>
   2d588:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d58c:	str	r0, [fp, #-12]
   2d590:	b	2d908 <__assert_fail@plt+0x1c404>
   2d594:	mov	r0, #0
   2d598:	str	r0, [sp, #44]	; 0x2c
   2d59c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d5a0:	ldr	r0, [r0]
   2d5a4:	ldr	r1, [fp, #12]
   2d5a8:	add	r0, r0, r1, lsl #3
   2d5ac:	ldrb	r0, [r0, #4]
   2d5b0:	str	r0, [sp, #40]	; 0x28
   2d5b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d5b8:	ldr	r0, [r0]
   2d5bc:	ldr	r1, [fp, #12]
   2d5c0:	add	r0, r0, r1, lsl #3
   2d5c4:	ldr	r0, [r0, #4]
   2d5c8:	lsr	r0, r0, #20
   2d5cc:	and	r0, r0, #1
   2d5d0:	cmp	r0, #0
   2d5d4:	beq	2d5f8 <__assert_fail@plt+0x1c0f4>
   2d5d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d5dc:	ldr	r1, [fp, #12]
   2d5e0:	ldr	r2, [fp, #-16]
   2d5e4:	ldr	r3, [fp, #8]
   2d5e8:	ldr	r3, [r3]
   2d5ec:	bl	2915c <__assert_fail@plt+0x17c58>
   2d5f0:	str	r0, [sp, #44]	; 0x2c
   2d5f4:	b	2d7d4 <__assert_fail@plt+0x1c2d0>
   2d5f8:	ldr	r0, [sp, #40]	; 0x28
   2d5fc:	cmp	r0, #4
   2d600:	bne	2d7d0 <__assert_fail@plt+0x1c2cc>
   2d604:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d608:	ldr	r0, [r0]
   2d60c:	ldr	r1, [fp, #12]
   2d610:	add	r0, r0, r1, lsl #3
   2d614:	ldr	r0, [r0]
   2d618:	add	r0, r0, #1
   2d61c:	str	r0, [sp, #36]	; 0x24
   2d620:	ldr	r0, [sp, #36]	; 0x24
   2d624:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d628:	cmp	r0, r1
   2d62c:	bge	2d64c <__assert_fail@plt+0x1c148>
   2d630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d634:	ldr	r1, [sp, #36]	; 0x24
   2d638:	add	r0, r0, r1, lsl #3
   2d63c:	ldr	r1, [r0, #4]
   2d640:	ldr	r0, [r0]
   2d644:	sub	r0, r1, r0
   2d648:	str	r0, [sp, #44]	; 0x2c
   2d64c:	ldr	r0, [fp, #20]
   2d650:	movw	r1, #0
   2d654:	cmp	r0, r1
   2d658:	beq	2d730 <__assert_fail@plt+0x1c22c>
   2d65c:	ldr	r0, [sp, #36]	; 0x24
   2d660:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d664:	cmp	r0, r1
   2d668:	bge	2d69c <__assert_fail@plt+0x1c198>
   2d66c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d670:	ldr	r1, [sp, #36]	; 0x24
   2d674:	add	r0, r0, r1, lsl #3
   2d678:	ldr	r0, [r0]
   2d67c:	cmn	r0, #1
   2d680:	beq	2d69c <__assert_fail@plt+0x1c198>
   2d684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d688:	ldr	r1, [sp, #36]	; 0x24
   2d68c:	add	r0, r0, r1, lsl #3
   2d690:	ldr	r0, [r0, #4]
   2d694:	cmn	r0, #1
   2d698:	bne	2d6a8 <__assert_fail@plt+0x1c1a4>
   2d69c:	mvn	r0, #0
   2d6a0:	str	r0, [fp, #-12]
   2d6a4:	b	2d908 <__assert_fail@plt+0x1c404>
   2d6a8:	ldr	r0, [sp, #44]	; 0x2c
   2d6ac:	cmp	r0, #0
   2d6b0:	beq	2d728 <__assert_fail@plt+0x1c224>
   2d6b4:	ldr	r0, [fp, #-16]
   2d6b8:	ldr	r0, [r0, #4]
   2d6bc:	str	r0, [sp, #32]
   2d6c0:	ldr	r0, [fp, #-16]
   2d6c4:	ldr	r0, [r0, #28]
   2d6c8:	ldr	r1, [fp, #8]
   2d6cc:	ldr	r1, [r1]
   2d6d0:	sub	r0, r0, r1
   2d6d4:	ldr	r1, [sp, #44]	; 0x2c
   2d6d8:	cmp	r0, r1
   2d6dc:	blt	2d718 <__assert_fail@plt+0x1c214>
   2d6e0:	ldr	r0, [sp, #32]
   2d6e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d6e8:	ldr	r2, [sp, #36]	; 0x24
   2d6ec:	add	r1, r1, r2, lsl #3
   2d6f0:	ldr	r1, [r1]
   2d6f4:	add	r0, r0, r1
   2d6f8:	ldr	r1, [sp, #32]
   2d6fc:	ldr	r2, [fp, #8]
   2d700:	ldr	r2, [r2]
   2d704:	add	r1, r1, r2
   2d708:	ldr	r2, [sp, #44]	; 0x2c
   2d70c:	bl	112e8 <memcmp@plt>
   2d710:	cmp	r0, #0
   2d714:	beq	2d724 <__assert_fail@plt+0x1c220>
   2d718:	mvn	r0, #0
   2d71c:	str	r0, [fp, #-12]
   2d720:	b	2d908 <__assert_fail@plt+0x1c404>
   2d724:	b	2d728 <__assert_fail@plt+0x1c224>
   2d728:	b	2d72c <__assert_fail@plt+0x1c228>
   2d72c:	b	2d730 <__assert_fail@plt+0x1c22c>
   2d730:	ldr	r0, [sp, #44]	; 0x2c
   2d734:	cmp	r0, #0
   2d738:	bne	2d7cc <__assert_fail@plt+0x1c2c8>
   2d73c:	ldr	r0, [fp, #16]
   2d740:	ldr	r1, [fp, #12]
   2d744:	bl	22c48 <__assert_fail@plt+0x11744>
   2d748:	and	r0, r0, #1
   2d74c:	strb	r0, [sp, #27]
   2d750:	ldrb	r0, [sp, #27]
   2d754:	mvn	r1, #0
   2d758:	eor	r0, r0, r1
   2d75c:	tst	r0, #1
   2d760:	beq	2d770 <__assert_fail@plt+0x1c26c>
   2d764:	mvn	r0, #1
   2d768:	str	r0, [fp, #-12]
   2d76c:	b	2d908 <__assert_fail@plt+0x1c404>
   2d770:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d774:	ldr	r0, [r0, #20]
   2d778:	ldr	r1, [fp, #12]
   2d77c:	add	r1, r1, r1, lsl #1
   2d780:	add	r0, r0, r1, lsl #2
   2d784:	ldr	r0, [r0, #8]
   2d788:	ldr	r0, [r0]
   2d78c:	str	r0, [sp, #28]
   2d790:	ldr	r0, [fp, #-16]
   2d794:	ldr	r0, [r0, #100]	; 0x64
   2d798:	ldr	r1, [fp, #8]
   2d79c:	ldr	r1, [r1]
   2d7a0:	add	r0, r0, r1, lsl #2
   2d7a4:	ldr	r0, [r0]
   2d7a8:	add	r0, r0, #4
   2d7ac:	ldr	r1, [sp, #28]
   2d7b0:	bl	23104 <__assert_fail@plt+0x11c00>
   2d7b4:	cmp	r0, #0
   2d7b8:	beq	2d7c8 <__assert_fail@plt+0x1c2c4>
   2d7bc:	ldr	r0, [sp, #28]
   2d7c0:	str	r0, [fp, #-12]
   2d7c4:	b	2d908 <__assert_fail@plt+0x1c404>
   2d7c8:	b	2d7cc <__assert_fail@plt+0x1c2c8>
   2d7cc:	b	2d7d0 <__assert_fail@plt+0x1c2cc>
   2d7d0:	b	2d7d4 <__assert_fail@plt+0x1c2d0>
   2d7d4:	ldr	r0, [sp, #44]	; 0x2c
   2d7d8:	cmp	r0, #0
   2d7dc:	bne	2d808 <__assert_fail@plt+0x1c304>
   2d7e0:	ldr	r0, [fp, #-16]
   2d7e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2d7e8:	ldr	r1, [r1]
   2d7ec:	ldr	r2, [fp, #12]
   2d7f0:	add	r1, r1, r2, lsl #3
   2d7f4:	ldr	r2, [fp, #8]
   2d7f8:	ldr	r2, [r2]
   2d7fc:	bl	29744 <__assert_fail@plt+0x18240>
   2d800:	tst	r0, #1
   2d804:	beq	2d8fc <__assert_fail@plt+0x1c3f8>
   2d808:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d80c:	ldr	r0, [r0, #12]
   2d810:	ldr	r1, [fp, #12]
   2d814:	add	r0, r0, r1, lsl #2
   2d818:	ldr	r0, [r0]
   2d81c:	str	r0, [sp, #20]
   2d820:	ldr	r0, [sp, #44]	; 0x2c
   2d824:	cmp	r0, #0
   2d828:	bne	2d840 <__assert_fail@plt+0x1c33c>
   2d82c:	ldr	r0, [fp, #8]
   2d830:	ldr	r0, [r0]
   2d834:	add	r0, r0, #1
   2d838:	str	r0, [sp, #16]
   2d83c:	b	2d854 <__assert_fail@plt+0x1c350>
   2d840:	ldr	r0, [fp, #8]
   2d844:	ldr	r0, [r0]
   2d848:	ldr	r1, [sp, #44]	; 0x2c
   2d84c:	add	r0, r0, r1
   2d850:	str	r0, [sp, #16]
   2d854:	ldr	r0, [sp, #16]
   2d858:	ldr	r1, [fp, #8]
   2d85c:	str	r0, [r1]
   2d860:	ldr	r0, [fp, #20]
   2d864:	movw	r1, #0
   2d868:	cmp	r0, r1
   2d86c:	beq	2d8e4 <__assert_fail@plt+0x1c3e0>
   2d870:	ldr	r0, [fp, #8]
   2d874:	ldr	r0, [r0]
   2d878:	ldr	r1, [fp, #-16]
   2d87c:	ldr	r1, [r1, #92]	; 0x5c
   2d880:	cmp	r0, r1
   2d884:	bgt	2d8d8 <__assert_fail@plt+0x1c3d4>
   2d888:	ldr	r0, [fp, #-16]
   2d88c:	ldr	r0, [r0, #100]	; 0x64
   2d890:	ldr	r1, [fp, #8]
   2d894:	ldr	r1, [r1]
   2d898:	add	r0, r0, r1, lsl #2
   2d89c:	ldr	r0, [r0]
   2d8a0:	movw	r1, #0
   2d8a4:	cmp	r0, r1
   2d8a8:	beq	2d8d8 <__assert_fail@plt+0x1c3d4>
   2d8ac:	ldr	r0, [fp, #-16]
   2d8b0:	ldr	r0, [r0, #100]	; 0x64
   2d8b4:	ldr	r1, [fp, #8]
   2d8b8:	ldr	r1, [r1]
   2d8bc:	add	r0, r0, r1, lsl #2
   2d8c0:	ldr	r0, [r0]
   2d8c4:	add	r0, r0, #4
   2d8c8:	ldr	r1, [sp, #20]
   2d8cc:	bl	23104 <__assert_fail@plt+0x11c00>
   2d8d0:	cmp	r0, #0
   2d8d4:	bne	2d8e4 <__assert_fail@plt+0x1c3e0>
   2d8d8:	mvn	r0, #0
   2d8dc:	str	r0, [fp, #-12]
   2d8e0:	b	2d908 <__assert_fail@plt+0x1c404>
   2d8e4:	ldr	r0, [fp, #16]
   2d8e8:	movw	r1, #0
   2d8ec:	str	r1, [r0, #4]
   2d8f0:	ldr	r0, [sp, #20]
   2d8f4:	str	r0, [fp, #-12]
   2d8f8:	b	2d908 <__assert_fail@plt+0x1c404>
   2d8fc:	b	2d900 <__assert_fail@plt+0x1c3fc>
   2d900:	mvn	r0, #0
   2d904:	str	r0, [fp, #-12]
   2d908:	ldr	r0, [fp, #-12]
   2d90c:	sub	sp, fp, #8
   2d910:	pop	{r4, r5, fp, pc}
   2d914:	push	{fp, lr}
   2d918:	mov	fp, sp
   2d91c:	sub	sp, sp, #8
   2d920:	str	r0, [sp, #4]
   2d924:	ldr	r0, [sp, #4]
   2d928:	ldr	r0, [r0, #8]
   2d92c:	ldr	r1, [sp, #4]
   2d930:	ldr	r1, [r1]
   2d934:	bl	2d970 <__assert_fail@plt+0x1c46c>
   2d938:	ldr	r0, [sp, #4]
   2d93c:	bl	2d984 <__assert_fail@plt+0x1c480>
   2d940:	ldr	r0, [sp, #4]
   2d944:	add	r0, r0, #12
   2d948:	ldr	r1, [sp, #4]
   2d94c:	str	r0, [r1, #8]
   2d950:	ldr	r0, [sp, #4]
   2d954:	movw	r1, #0
   2d958:	str	r1, [r0]
   2d95c:	bl	2d9c0 <__assert_fail@plt+0x1c4bc>
   2d960:	ldr	r1, [sp, #4]
   2d964:	str	r0, [r1, #4]
   2d968:	mov	sp, fp
   2d96c:	pop	{fp, pc}
   2d970:	sub	sp, sp, #8
   2d974:	str	r0, [sp, #4]
   2d978:	str	r1, [sp]
   2d97c:	add	sp, sp, #8
   2d980:	bx	lr
   2d984:	push	{fp, lr}
   2d988:	mov	fp, sp
   2d98c:	sub	sp, sp, #8
   2d990:	str	r0, [sp, #4]
   2d994:	ldr	r0, [sp, #4]
   2d998:	ldr	r0, [r0, #8]
   2d99c:	ldr	r1, [sp, #4]
   2d9a0:	add	r1, r1, #12
   2d9a4:	cmp	r0, r1
   2d9a8:	beq	2d9b8 <__assert_fail@plt+0x1c4b4>
   2d9ac:	ldr	r0, [sp, #4]
   2d9b0:	ldr	r0, [r0, #8]
   2d9b4:	bl	34c20 <__assert_fail@plt+0x2371c>
   2d9b8:	mov	sp, fp
   2d9bc:	pop	{fp, pc}
   2d9c0:	mvn	r0, #0
   2d9c4:	bx	lr
   2d9c8:	push	{r4, sl, fp, lr}
   2d9cc:	add	fp, sp, #8
   2d9d0:	sub	sp, sp, #40	; 0x28
   2d9d4:	ldr	ip, [fp, #16]
   2d9d8:	ldr	lr, [fp, #12]
   2d9dc:	ldr	r4, [fp, #8]
   2d9e0:	str	r0, [fp, #-16]
   2d9e4:	str	r1, [fp, #-20]	; 0xffffffec
   2d9e8:	str	r2, [sp, #24]
   2d9ec:	str	r3, [sp, #20]
   2d9f0:	ldr	r0, [fp, #-16]
   2d9f4:	ldr	r1, [r0]
   2d9f8:	add	r2, r1, #1
   2d9fc:	str	r2, [r0]
   2da00:	str	r1, [sp, #12]
   2da04:	ldr	r0, [fp, #-16]
   2da08:	ldr	r0, [r0]
   2da0c:	ldr	r1, [fp, #-16]
   2da10:	ldr	r1, [r1, #4]
   2da14:	cmp	r0, r1
   2da18:	bne	2da74 <__assert_fail@plt+0x1c570>
   2da1c:	ldr	r0, [fp, #-16]
   2da20:	ldr	r1, [r0, #4]
   2da24:	ldr	r0, [r0, #8]
   2da28:	lsl	r1, r1, #1
   2da2c:	movw	r2, #24
   2da30:	mul	r1, r1, r2
   2da34:	bl	335bc <__assert_fail@plt+0x220b8>
   2da38:	str	r0, [sp, #8]
   2da3c:	ldr	r0, [sp, #8]
   2da40:	movw	r1, #0
   2da44:	cmp	r0, r1
   2da48:	bne	2da58 <__assert_fail@plt+0x1c554>
   2da4c:	movw	r0, #12
   2da50:	str	r0, [fp, #-12]
   2da54:	b	2db98 <__assert_fail@plt+0x1c694>
   2da58:	ldr	r0, [fp, #-16]
   2da5c:	ldr	r1, [r0, #4]
   2da60:	lsl	r1, r1, #1
   2da64:	str	r1, [r0, #4]
   2da68:	ldr	r0, [sp, #8]
   2da6c:	ldr	r1, [fp, #-16]
   2da70:	str	r0, [r1, #8]
   2da74:	ldr	r0, [fp, #-20]	; 0xffffffec
   2da78:	ldr	r1, [fp, #-16]
   2da7c:	ldr	r1, [r1, #8]
   2da80:	ldr	r2, [sp, #12]
   2da84:	add	r2, r2, r2, lsl #1
   2da88:	str	r0, [r1, r2, lsl #3]
   2da8c:	ldr	r0, [sp, #24]
   2da90:	ldr	r1, [fp, #-16]
   2da94:	ldr	r1, [r1, #8]
   2da98:	ldr	r2, [sp, #12]
   2da9c:	add	r2, r2, r2, lsl #1
   2daa0:	add	r1, r1, r2, lsl #3
   2daa4:	str	r0, [r1, #4]
   2daa8:	ldr	r0, [sp, #20]
   2daac:	lsl	r1, r0, #1
   2dab0:	lsl	r0, r0, #4
   2dab4:	str	r1, [sp, #4]
   2dab8:	bl	3354c <__assert_fail@plt+0x22048>
   2dabc:	ldr	r1, [fp, #-16]
   2dac0:	ldr	r1, [r1, #8]
   2dac4:	ldr	r2, [sp, #12]
   2dac8:	movw	r3, #24
   2dacc:	mul	r2, r2, r3
   2dad0:	add	r1, r1, r2
   2dad4:	str	r0, [r1, #8]
   2dad8:	ldr	r0, [fp, #-16]
   2dadc:	ldr	r0, [r0, #8]
   2dae0:	ldr	r1, [sp, #12]
   2dae4:	mul	r1, r1, r3
   2dae8:	add	r0, r0, r1
   2daec:	ldr	r0, [r0, #8]
   2daf0:	movw	r1, #0
   2daf4:	cmp	r0, r1
   2daf8:	bne	2db08 <__assert_fail@plt+0x1c604>
   2dafc:	movw	r0, #12
   2db00:	str	r0, [fp, #-12]
   2db04:	b	2db98 <__assert_fail@plt+0x1c694>
   2db08:	ldr	r0, [fp, #-16]
   2db0c:	ldr	r0, [r0, #8]
   2db10:	ldr	r1, [sp, #12]
   2db14:	add	r1, r1, r1, lsl #1
   2db18:	add	r0, r0, r1, lsl #3
   2db1c:	ldr	r0, [r0, #8]
   2db20:	ldr	r1, [fp, #8]
   2db24:	ldr	r2, [sp, #20]
   2db28:	lsl	r2, r2, #3
   2db2c:	bl	112a0 <memcpy@plt>
   2db30:	ldr	r1, [fp, #-16]
   2db34:	ldr	r1, [r1, #8]
   2db38:	ldr	r2, [sp, #12]
   2db3c:	add	r2, r2, r2, lsl #1
   2db40:	add	r1, r1, r2, lsl #3
   2db44:	ldr	r1, [r1, #8]
   2db48:	ldr	r2, [sp, #20]
   2db4c:	add	r1, r1, r2, lsl #3
   2db50:	lsl	r2, r2, #3
   2db54:	ldr	r3, [fp, #12]
   2db58:	str	r0, [sp]
   2db5c:	mov	r0, r1
   2db60:	mov	r1, r3
   2db64:	bl	112a0 <memcpy@plt>
   2db68:	ldr	r0, [fp, #-16]
   2db6c:	ldr	r0, [r0, #8]
   2db70:	ldr	r1, [sp, #12]
   2db74:	movw	r2, #24
   2db78:	mul	r1, r1, r2
   2db7c:	add	r0, r0, r1
   2db80:	add	r0, r0, #12
   2db84:	ldr	r1, [fp, #16]
   2db88:	bl	23030 <__assert_fail@plt+0x11b2c>
   2db8c:	str	r0, [sp, #16]
   2db90:	ldr	r0, [sp, #16]
   2db94:	str	r0, [fp, #-12]
   2db98:	ldr	r0, [fp, #-12]
   2db9c:	sub	sp, fp, #8
   2dba0:	pop	{r4, sl, fp, pc}
   2dba4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dba8:	add	fp, sp, #28
   2dbac:	sub	sp, sp, #196	; 0xc4
   2dbb0:	ldr	ip, [fp, #12]
   2dbb4:	ldr	lr, [fp, #8]
   2dbb8:	str	r0, [fp, #-32]	; 0xffffffe0
   2dbbc:	str	r1, [fp, #-36]	; 0xffffffdc
   2dbc0:	str	r2, [fp, #-40]	; 0xffffffd8
   2dbc4:	str	r3, [fp, #-44]	; 0xffffffd4
   2dbc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2dbcc:	movw	r1, #0
   2dbd0:	cmp	r0, r1
   2dbd4:	beq	2dc08 <__assert_fail@plt+0x1c704>
   2dbd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dbdc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2dbe0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dbe4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2dbe8:	movw	ip, #31967	; 0x7cdf
   2dbec:	movt	ip, #3
   2dbf0:	str	r1, [fp, #-48]	; 0xffffffd0
   2dbf4:	mov	r1, ip
   2dbf8:	ldr	ip, [fp, #-48]	; 0xffffffd0
   2dbfc:	str	ip, [sp]
   2dc00:	bl	113f0 <fprintf@plt>
   2dc04:	b	2dc20 <__assert_fail@plt+0x1c71c>
   2dc08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dc0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2dc10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dc14:	movw	r1, #31979	; 0x7ceb
   2dc18:	movt	r1, #3
   2dc1c:	bl	113f0 <fprintf@plt>
   2dc20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dc24:	movw	r1, #31986	; 0x7cf2
   2dc28:	movt	r1, #3
   2dc2c:	str	r0, [fp, #-52]	; 0xffffffcc
   2dc30:	mov	r0, r1
   2dc34:	bl	113cc <gettext@plt>
   2dc38:	movw	r1, #32704	; 0x7fc0
   2dc3c:	movt	r1, #3
   2dc40:	movw	r3, #2022	; 0x7e6
   2dc44:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2dc48:	str	r0, [fp, #-56]	; 0xffffffc8
   2dc4c:	mov	r0, r2
   2dc50:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2dc54:	bl	113f0 <fprintf@plt>
   2dc58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2dc5c:	movw	r2, #29739	; 0x742b
   2dc60:	movt	r2, #3
   2dc64:	str	r0, [fp, #-60]	; 0xffffffc4
   2dc68:	mov	r0, r2
   2dc6c:	str	r2, [fp, #-64]	; 0xffffffc0
   2dc70:	bl	111f8 <fputs_unlocked@plt>
   2dc74:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2dc78:	movw	r2, #31990	; 0x7cf6
   2dc7c:	movt	r2, #3
   2dc80:	str	r0, [fp, #-68]	; 0xffffffbc
   2dc84:	mov	r0, r2
   2dc88:	str	r1, [fp, #-72]	; 0xffffffb8
   2dc8c:	bl	113cc <gettext@plt>
   2dc90:	movw	r2, #32161	; 0x7da1
   2dc94:	movt	r2, #3
   2dc98:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2dc9c:	str	r0, [fp, #-76]	; 0xffffffb4
   2dca0:	mov	r0, r1
   2dca4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2dca8:	bl	113f0 <fprintf@plt>
   2dcac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2dcb0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2dcb4:	str	r0, [fp, #-80]	; 0xffffffb0
   2dcb8:	mov	r0, r2
   2dcbc:	bl	111f8 <fputs_unlocked@plt>
   2dcc0:	ldr	r1, [fp, #12]
   2dcc4:	cmp	r1, #9
   2dcc8:	str	r1, [fp, #-84]	; 0xffffffac
   2dccc:	bhi	2e0e8 <__assert_fail@plt+0x1cbe4>
   2dcd0:	add	r0, pc, #8
   2dcd4:	ldr	r1, [fp, #-84]	; 0xffffffac
   2dcd8:	ldr	r0, [r0, r1, lsl #2]
   2dcdc:	mov	pc, r0
   2dce0:	andeq	sp, r2, r8, lsl #26
   2dce4:	andeq	sp, r2, ip, lsl #26
   2dce8:	andeq	sp, r2, r4, asr #26
   2dcec:	andeq	sp, r2, r4, lsl #27
   2dcf0:	ldrdeq	sp, [r2], -ip
   2dcf4:	andeq	sp, r2, r0, asr #28
   2dcf8:			; <UNDEFINED> instruction: 0x0002deb0
   2dcfc:	andeq	sp, r2, ip, lsr #30
   2dd00:			; <UNDEFINED> instruction: 0x0002dfb4
   2dd04:	andeq	lr, r2, r8, asr #32
   2dd08:	b	2e184 <__assert_fail@plt+0x1cc80>
   2dd0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dd10:	movw	r1, #32195	; 0x7dc3
   2dd14:	movt	r1, #3
   2dd18:	str	r0, [fp, #-88]	; 0xffffffa8
   2dd1c:	mov	r0, r1
   2dd20:	bl	113cc <gettext@plt>
   2dd24:	ldr	r1, [fp, #8]
   2dd28:	ldr	r2, [r1]
   2dd2c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2dd30:	str	r0, [fp, #-92]	; 0xffffffa4
   2dd34:	mov	r0, r1
   2dd38:	ldr	r1, [fp, #-92]	; 0xffffffa4
   2dd3c:	bl	113f0 <fprintf@plt>
   2dd40:	b	2e184 <__assert_fail@plt+0x1cc80>
   2dd44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dd48:	movw	r1, #32211	; 0x7dd3
   2dd4c:	movt	r1, #3
   2dd50:	str	r0, [fp, #-96]	; 0xffffffa0
   2dd54:	mov	r0, r1
   2dd58:	bl	113cc <gettext@plt>
   2dd5c:	ldr	r1, [fp, #8]
   2dd60:	ldr	r2, [r1]
   2dd64:	ldr	r1, [fp, #8]
   2dd68:	ldr	r3, [r1, #4]
   2dd6c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   2dd70:	str	r0, [fp, #-100]	; 0xffffff9c
   2dd74:	mov	r0, r1
   2dd78:	ldr	r1, [fp, #-100]	; 0xffffff9c
   2dd7c:	bl	113f0 <fprintf@plt>
   2dd80:	b	2e184 <__assert_fail@plt+0x1cc80>
   2dd84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dd88:	movw	r1, #32234	; 0x7dea
   2dd8c:	movt	r1, #3
   2dd90:	str	r0, [fp, #-104]	; 0xffffff98
   2dd94:	mov	r0, r1
   2dd98:	bl	113cc <gettext@plt>
   2dd9c:	ldr	r1, [fp, #8]
   2dda0:	ldr	r2, [r1]
   2dda4:	ldr	r1, [fp, #8]
   2dda8:	ldr	r3, [r1, #4]
   2ddac:	ldr	r1, [fp, #8]
   2ddb0:	ldr	r1, [r1, #8]
   2ddb4:	ldr	ip, [fp, #-104]	; 0xffffff98
   2ddb8:	str	r0, [fp, #-108]	; 0xffffff94
   2ddbc:	mov	r0, ip
   2ddc0:	ldr	lr, [fp, #-108]	; 0xffffff94
   2ddc4:	str	r1, [sp, #112]	; 0x70
   2ddc8:	mov	r1, lr
   2ddcc:	ldr	r4, [sp, #112]	; 0x70
   2ddd0:	str	r4, [sp]
   2ddd4:	bl	113f0 <fprintf@plt>
   2ddd8:	b	2e184 <__assert_fail@plt+0x1cc80>
   2dddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dde0:	movw	r1, #32262	; 0x7e06
   2dde4:	movt	r1, #3
   2dde8:	str	r0, [sp, #108]	; 0x6c
   2ddec:	mov	r0, r1
   2ddf0:	bl	113cc <gettext@plt>
   2ddf4:	ldr	r1, [fp, #8]
   2ddf8:	ldr	r2, [r1]
   2ddfc:	ldr	r1, [fp, #8]
   2de00:	ldr	r3, [r1, #4]
   2de04:	ldr	r1, [fp, #8]
   2de08:	ldr	r1, [r1, #8]
   2de0c:	ldr	ip, [fp, #8]
   2de10:	ldr	ip, [ip, #12]
   2de14:	ldr	lr, [sp, #108]	; 0x6c
   2de18:	str	r0, [sp, #104]	; 0x68
   2de1c:	mov	r0, lr
   2de20:	ldr	r4, [sp, #104]	; 0x68
   2de24:	str	r1, [sp, #100]	; 0x64
   2de28:	mov	r1, r4
   2de2c:	ldr	r5, [sp, #100]	; 0x64
   2de30:	str	r5, [sp]
   2de34:	str	ip, [sp, #4]
   2de38:	bl	113f0 <fprintf@plt>
   2de3c:	b	2e184 <__assert_fail@plt+0x1cc80>
   2de40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2de44:	movw	r1, #32294	; 0x7e26
   2de48:	movt	r1, #3
   2de4c:	str	r0, [sp, #96]	; 0x60
   2de50:	mov	r0, r1
   2de54:	bl	113cc <gettext@plt>
   2de58:	ldr	r1, [fp, #8]
   2de5c:	ldr	r2, [r1]
   2de60:	ldr	r1, [fp, #8]
   2de64:	ldr	r3, [r1, #4]
   2de68:	ldr	r1, [fp, #8]
   2de6c:	ldr	r1, [r1, #8]
   2de70:	ldr	ip, [fp, #8]
   2de74:	ldr	ip, [ip, #12]
   2de78:	ldr	lr, [fp, #8]
   2de7c:	ldr	lr, [lr, #16]
   2de80:	ldr	r4, [sp, #96]	; 0x60
   2de84:	str	r0, [sp, #92]	; 0x5c
   2de88:	mov	r0, r4
   2de8c:	ldr	r5, [sp, #92]	; 0x5c
   2de90:	str	r1, [sp, #88]	; 0x58
   2de94:	mov	r1, r5
   2de98:	ldr	r6, [sp, #88]	; 0x58
   2de9c:	str	r6, [sp]
   2dea0:	str	ip, [sp, #4]
   2dea4:	str	lr, [sp, #8]
   2dea8:	bl	113f0 <fprintf@plt>
   2deac:	b	2e184 <__assert_fail@plt+0x1cc80>
   2deb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2deb4:	movw	r1, #32330	; 0x7e4a
   2deb8:	movt	r1, #3
   2debc:	str	r0, [sp, #84]	; 0x54
   2dec0:	mov	r0, r1
   2dec4:	bl	113cc <gettext@plt>
   2dec8:	ldr	r1, [fp, #8]
   2decc:	ldr	r2, [r1]
   2ded0:	ldr	r1, [fp, #8]
   2ded4:	ldr	r3, [r1, #4]
   2ded8:	ldr	r1, [fp, #8]
   2dedc:	ldr	r1, [r1, #8]
   2dee0:	ldr	ip, [fp, #8]
   2dee4:	ldr	ip, [ip, #12]
   2dee8:	ldr	lr, [fp, #8]
   2deec:	ldr	lr, [lr, #16]
   2def0:	ldr	r4, [fp, #8]
   2def4:	ldr	r4, [r4, #20]
   2def8:	ldr	r5, [sp, #84]	; 0x54
   2defc:	str	r0, [sp, #80]	; 0x50
   2df00:	mov	r0, r5
   2df04:	ldr	r6, [sp, #80]	; 0x50
   2df08:	str	r1, [sp, #76]	; 0x4c
   2df0c:	mov	r1, r6
   2df10:	ldr	r7, [sp, #76]	; 0x4c
   2df14:	str	r7, [sp]
   2df18:	str	ip, [sp, #4]
   2df1c:	str	lr, [sp, #8]
   2df20:	str	r4, [sp, #12]
   2df24:	bl	113f0 <fprintf@plt>
   2df28:	b	2e184 <__assert_fail@plt+0x1cc80>
   2df2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2df30:	movw	r1, #32370	; 0x7e72
   2df34:	movt	r1, #3
   2df38:	str	r0, [sp, #72]	; 0x48
   2df3c:	mov	r0, r1
   2df40:	bl	113cc <gettext@plt>
   2df44:	ldr	r1, [fp, #8]
   2df48:	ldr	r2, [r1]
   2df4c:	ldr	r1, [fp, #8]
   2df50:	ldr	r3, [r1, #4]
   2df54:	ldr	r1, [fp, #8]
   2df58:	ldr	r1, [r1, #8]
   2df5c:	ldr	ip, [fp, #8]
   2df60:	ldr	ip, [ip, #12]
   2df64:	ldr	lr, [fp, #8]
   2df68:	ldr	lr, [lr, #16]
   2df6c:	ldr	r4, [fp, #8]
   2df70:	ldr	r4, [r4, #20]
   2df74:	ldr	r5, [fp, #8]
   2df78:	ldr	r5, [r5, #24]
   2df7c:	ldr	r6, [sp, #72]	; 0x48
   2df80:	str	r0, [sp, #68]	; 0x44
   2df84:	mov	r0, r6
   2df88:	ldr	r7, [sp, #68]	; 0x44
   2df8c:	str	r1, [sp, #64]	; 0x40
   2df90:	mov	r1, r7
   2df94:	ldr	r8, [sp, #64]	; 0x40
   2df98:	str	r8, [sp]
   2df9c:	str	ip, [sp, #4]
   2dfa0:	str	lr, [sp, #8]
   2dfa4:	str	r4, [sp, #12]
   2dfa8:	str	r5, [sp, #16]
   2dfac:	bl	113f0 <fprintf@plt>
   2dfb0:	b	2e184 <__assert_fail@plt+0x1cc80>
   2dfb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dfb8:	movw	r1, #32414	; 0x7e9e
   2dfbc:	movt	r1, #3
   2dfc0:	str	r0, [sp, #60]	; 0x3c
   2dfc4:	mov	r0, r1
   2dfc8:	bl	113cc <gettext@plt>
   2dfcc:	ldr	r1, [fp, #8]
   2dfd0:	ldr	r2, [r1]
   2dfd4:	ldr	r1, [fp, #8]
   2dfd8:	ldr	r3, [r1, #4]
   2dfdc:	ldr	r1, [fp, #8]
   2dfe0:	ldr	r1, [r1, #8]
   2dfe4:	ldr	ip, [fp, #8]
   2dfe8:	ldr	ip, [ip, #12]
   2dfec:	ldr	lr, [fp, #8]
   2dff0:	ldr	lr, [lr, #16]
   2dff4:	ldr	r4, [fp, #8]
   2dff8:	ldr	r4, [r4, #20]
   2dffc:	ldr	r5, [fp, #8]
   2e000:	ldr	r5, [r5, #24]
   2e004:	ldr	r6, [fp, #8]
   2e008:	ldr	r6, [r6, #28]
   2e00c:	ldr	r7, [sp, #60]	; 0x3c
   2e010:	str	r0, [sp, #56]	; 0x38
   2e014:	mov	r0, r7
   2e018:	ldr	r8, [sp, #56]	; 0x38
   2e01c:	str	r1, [sp, #52]	; 0x34
   2e020:	mov	r1, r8
   2e024:	ldr	r9, [sp, #52]	; 0x34
   2e028:	str	r9, [sp]
   2e02c:	str	ip, [sp, #4]
   2e030:	str	lr, [sp, #8]
   2e034:	str	r4, [sp, #12]
   2e038:	str	r5, [sp, #16]
   2e03c:	str	r6, [sp, #20]
   2e040:	bl	113f0 <fprintf@plt>
   2e044:	b	2e184 <__assert_fail@plt+0x1cc80>
   2e048:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e04c:	movw	r1, #32462	; 0x7ece
   2e050:	movt	r1, #3
   2e054:	str	r0, [sp, #48]	; 0x30
   2e058:	mov	r0, r1
   2e05c:	bl	113cc <gettext@plt>
   2e060:	ldr	r1, [fp, #8]
   2e064:	ldr	r2, [r1]
   2e068:	ldr	r1, [fp, #8]
   2e06c:	ldr	r3, [r1, #4]
   2e070:	ldr	r1, [fp, #8]
   2e074:	ldr	r1, [r1, #8]
   2e078:	ldr	ip, [fp, #8]
   2e07c:	ldr	ip, [ip, #12]
   2e080:	ldr	lr, [fp, #8]
   2e084:	ldr	lr, [lr, #16]
   2e088:	ldr	r4, [fp, #8]
   2e08c:	ldr	r4, [r4, #20]
   2e090:	ldr	r5, [fp, #8]
   2e094:	ldr	r5, [r5, #24]
   2e098:	ldr	r6, [fp, #8]
   2e09c:	ldr	r6, [r6, #28]
   2e0a0:	ldr	r7, [fp, #8]
   2e0a4:	ldr	r7, [r7, #32]
   2e0a8:	ldr	r8, [sp, #48]	; 0x30
   2e0ac:	str	r0, [sp, #44]	; 0x2c
   2e0b0:	mov	r0, r8
   2e0b4:	ldr	r9, [sp, #44]	; 0x2c
   2e0b8:	str	r1, [sp, #40]	; 0x28
   2e0bc:	mov	r1, r9
   2e0c0:	ldr	sl, [sp, #40]	; 0x28
   2e0c4:	str	sl, [sp]
   2e0c8:	str	ip, [sp, #4]
   2e0cc:	str	lr, [sp, #8]
   2e0d0:	str	r4, [sp, #12]
   2e0d4:	str	r5, [sp, #16]
   2e0d8:	str	r6, [sp, #20]
   2e0dc:	str	r7, [sp, #24]
   2e0e0:	bl	113f0 <fprintf@plt>
   2e0e4:	b	2e184 <__assert_fail@plt+0x1cc80>
   2e0e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e0ec:	movw	r1, #32514	; 0x7f02
   2e0f0:	movt	r1, #3
   2e0f4:	str	r0, [sp, #36]	; 0x24
   2e0f8:	mov	r0, r1
   2e0fc:	bl	113cc <gettext@plt>
   2e100:	ldr	r1, [fp, #8]
   2e104:	ldr	r2, [r1]
   2e108:	ldr	r1, [fp, #8]
   2e10c:	ldr	r3, [r1, #4]
   2e110:	ldr	r1, [fp, #8]
   2e114:	ldr	r1, [r1, #8]
   2e118:	ldr	ip, [fp, #8]
   2e11c:	ldr	ip, [ip, #12]
   2e120:	ldr	lr, [fp, #8]
   2e124:	ldr	lr, [lr, #16]
   2e128:	ldr	r4, [fp, #8]
   2e12c:	ldr	r4, [r4, #20]
   2e130:	ldr	r5, [fp, #8]
   2e134:	ldr	r5, [r5, #24]
   2e138:	ldr	r6, [fp, #8]
   2e13c:	ldr	r6, [r6, #28]
   2e140:	ldr	r7, [fp, #8]
   2e144:	ldr	r7, [r7, #32]
   2e148:	ldr	r8, [sp, #36]	; 0x24
   2e14c:	str	r0, [sp, #32]
   2e150:	mov	r0, r8
   2e154:	ldr	r9, [sp, #32]
   2e158:	str	r1, [sp, #28]
   2e15c:	mov	r1, r9
   2e160:	ldr	sl, [sp, #28]
   2e164:	str	sl, [sp]
   2e168:	str	ip, [sp, #4]
   2e16c:	str	lr, [sp, #8]
   2e170:	str	r4, [sp, #12]
   2e174:	str	r5, [sp, #16]
   2e178:	str	r6, [sp, #20]
   2e17c:	str	r7, [sp, #24]
   2e180:	bl	113f0 <fprintf@plt>
   2e184:	sub	sp, fp, #28
   2e188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e18c:	push	{fp, lr}
   2e190:	mov	fp, sp
   2e194:	sub	sp, sp, #32
   2e198:	ldr	ip, [fp, #8]
   2e19c:	str	r0, [fp, #-4]
   2e1a0:	str	r1, [fp, #-8]
   2e1a4:	str	r2, [fp, #-12]
   2e1a8:	str	r3, [sp, #16]
   2e1ac:	movw	r0, #0
   2e1b0:	str	r0, [sp, #12]
   2e1b4:	ldr	r0, [fp, #8]
   2e1b8:	ldr	r1, [sp, #12]
   2e1bc:	add	r0, r0, r1, lsl #2
   2e1c0:	ldr	r0, [r0]
   2e1c4:	movw	r1, #0
   2e1c8:	cmp	r0, r1
   2e1cc:	beq	2e1e4 <__assert_fail@plt+0x1cce0>
   2e1d0:	b	2e1d4 <__assert_fail@plt+0x1ccd0>
   2e1d4:	ldr	r0, [sp, #12]
   2e1d8:	add	r0, r0, #1
   2e1dc:	str	r0, [sp, #12]
   2e1e0:	b	2e1b4 <__assert_fail@plt+0x1ccb0>
   2e1e4:	ldr	r0, [fp, #-4]
   2e1e8:	ldr	r1, [fp, #-8]
   2e1ec:	ldr	r2, [fp, #-12]
   2e1f0:	ldr	r3, [sp, #16]
   2e1f4:	ldr	ip, [fp, #8]
   2e1f8:	ldr	lr, [sp, #12]
   2e1fc:	str	ip, [sp]
   2e200:	str	lr, [sp, #4]
   2e204:	bl	2dba4 <__assert_fail@plt+0x1c6a0>
   2e208:	mov	sp, fp
   2e20c:	pop	{fp, pc}
   2e210:	push	{fp, lr}
   2e214:	mov	fp, sp
   2e218:	sub	sp, sp, #80	; 0x50
   2e21c:	ldr	ip, [fp, #8]
   2e220:	str	ip, [fp, #-4]
   2e224:	str	r0, [fp, #-8]
   2e228:	str	r1, [fp, #-12]
   2e22c:	str	r2, [fp, #-16]
   2e230:	str	r3, [fp, #-20]	; 0xffffffec
   2e234:	movw	r0, #0
   2e238:	str	r0, [fp, #-24]	; 0xffffffe8
   2e23c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e240:	cmp	r0, #10
   2e244:	movw	r0, #0
   2e248:	str	r0, [sp, #12]
   2e24c:	bcs	2e284 <__assert_fail@plt+0x1cd80>
   2e250:	ldr	r0, [fp, #-4]
   2e254:	add	r1, r0, #4
   2e258:	str	r1, [fp, #-4]
   2e25c:	ldr	r0, [r0]
   2e260:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e264:	add	r2, sp, #16
   2e268:	add	r1, r2, r1, lsl #2
   2e26c:	str	r0, [r1]
   2e270:	movw	r1, #0
   2e274:	cmp	r0, r1
   2e278:	movw	r0, #0
   2e27c:	movne	r0, #1
   2e280:	str	r0, [sp, #12]
   2e284:	ldr	r0, [sp, #12]
   2e288:	tst	r0, #1
   2e28c:	beq	2e2a4 <__assert_fail@plt+0x1cda0>
   2e290:	b	2e294 <__assert_fail@plt+0x1cd90>
   2e294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e298:	add	r0, r0, #1
   2e29c:	str	r0, [fp, #-24]	; 0xffffffe8
   2e2a0:	b	2e23c <__assert_fail@plt+0x1cd38>
   2e2a4:	add	r0, sp, #16
   2e2a8:	ldr	r1, [fp, #-8]
   2e2ac:	ldr	r2, [fp, #-12]
   2e2b0:	ldr	r3, [fp, #-16]
   2e2b4:	ldr	ip, [fp, #-20]	; 0xffffffec
   2e2b8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   2e2bc:	str	r0, [sp, #8]
   2e2c0:	mov	r0, r1
   2e2c4:	mov	r1, r2
   2e2c8:	mov	r2, r3
   2e2cc:	mov	r3, ip
   2e2d0:	ldr	ip, [sp, #8]
   2e2d4:	str	ip, [sp]
   2e2d8:	str	lr, [sp, #4]
   2e2dc:	bl	2dba4 <__assert_fail@plt+0x1c6a0>
   2e2e0:	mov	sp, fp
   2e2e4:	pop	{fp, pc}
   2e2e8:	push	{fp, lr}
   2e2ec:	mov	fp, sp
   2e2f0:	sub	sp, sp, #24
   2e2f4:	str	r0, [fp, #-4]
   2e2f8:	str	r1, [fp, #-8]
   2e2fc:	str	r2, [sp, #12]
   2e300:	str	r3, [sp, #8]
   2e304:	add	r0, fp, #8
   2e308:	str	r0, [sp, #4]
   2e30c:	ldr	r0, [fp, #-4]
   2e310:	ldr	r1, [fp, #-8]
   2e314:	ldr	r2, [sp, #12]
   2e318:	ldr	r3, [sp, #8]
   2e31c:	ldr	ip, [sp, #4]
   2e320:	mov	lr, sp
   2e324:	str	ip, [lr]
   2e328:	bl	2e210 <__assert_fail@plt+0x1cd0c>
   2e32c:	add	r0, sp, #4
   2e330:	mov	sp, fp
   2e334:	pop	{fp, pc}
   2e338:	push	{fp, lr}
   2e33c:	mov	fp, sp
   2e340:	sub	sp, sp, #16
   2e344:	movw	r0, #37332	; 0x91d4
   2e348:	movt	r0, #4
   2e34c:	ldr	r1, [r0]
   2e350:	movw	r0, #29739	; 0x742b
   2e354:	movt	r0, #3
   2e358:	bl	111f8 <fputs_unlocked@plt>
   2e35c:	movw	r1, #32574	; 0x7f3e
   2e360:	movt	r1, #3
   2e364:	str	r0, [fp, #-4]
   2e368:	mov	r0, r1
   2e36c:	bl	113cc <gettext@plt>
   2e370:	movw	r1, #32594	; 0x7f52
   2e374:	movt	r1, #3
   2e378:	bl	1124c <printf@plt>
   2e37c:	movw	r1, #32616	; 0x7f68
   2e380:	movt	r1, #3
   2e384:	str	r0, [sp, #8]
   2e388:	mov	r0, r1
   2e38c:	bl	113cc <gettext@plt>
   2e390:	movw	r1, #30062	; 0x756e
   2e394:	movt	r1, #3
   2e398:	movw	r2, #30355	; 0x7693
   2e39c:	movt	r2, #3
   2e3a0:	bl	1124c <printf@plt>
   2e3a4:	movw	r1, #32636	; 0x7f7c
   2e3a8:	movt	r1, #3
   2e3ac:	str	r0, [sp, #4]
   2e3b0:	mov	r0, r1
   2e3b4:	bl	113cc <gettext@plt>
   2e3b8:	movw	r1, #32675	; 0x7fa3
   2e3bc:	movt	r1, #3
   2e3c0:	bl	1124c <printf@plt>
   2e3c4:	mov	sp, fp
   2e3c8:	pop	{fp, pc}
   2e3cc:	push	{fp, lr}
   2e3d0:	mov	fp, sp
   2e3d4:	sub	sp, sp, #16
   2e3d8:	str	r0, [fp, #-4]
   2e3dc:	str	r1, [sp, #8]
   2e3e0:	str	r2, [sp, #4]
   2e3e4:	ldr	r0, [fp, #-4]
   2e3e8:	ldr	r1, [sp, #8]
   2e3ec:	ldr	r2, [sp, #4]
   2e3f0:	bl	2e3fc <__assert_fail@plt+0x1cef8>
   2e3f4:	mov	sp, fp
   2e3f8:	pop	{fp, pc}
   2e3fc:	push	{fp, lr}
   2e400:	mov	fp, sp
   2e404:	sub	sp, sp, #16
   2e408:	str	r0, [fp, #-4]
   2e40c:	str	r1, [sp, #8]
   2e410:	str	r2, [sp, #4]
   2e414:	ldr	r0, [fp, #-4]
   2e418:	ldr	r1, [sp, #8]
   2e41c:	ldr	r2, [sp, #4]
   2e420:	bl	34f40 <__assert_fail@plt+0x23a3c>
   2e424:	str	r0, [sp]
   2e428:	ldr	r0, [sp]
   2e42c:	movw	r1, #0
   2e430:	cmp	r0, r1
   2e434:	bne	2e464 <__assert_fail@plt+0x1cf60>
   2e438:	ldr	r0, [fp, #-4]
   2e43c:	movw	r1, #0
   2e440:	cmp	r0, r1
   2e444:	beq	2e460 <__assert_fail@plt+0x1cf5c>
   2e448:	ldr	r0, [sp, #8]
   2e44c:	cmp	r0, #0
   2e450:	beq	2e464 <__assert_fail@plt+0x1cf60>
   2e454:	ldr	r0, [sp, #4]
   2e458:	cmp	r0, #0
   2e45c:	beq	2e464 <__assert_fail@plt+0x1cf60>
   2e460:	bl	311a8 <__assert_fail@plt+0x1fca4>
   2e464:	ldr	r0, [sp]
   2e468:	mov	sp, fp
   2e46c:	pop	{fp, pc}
   2e470:	push	{fp, lr}
   2e474:	mov	fp, sp
   2e478:	sub	sp, sp, #8
   2e47c:	str	r0, [sp, #4]
   2e480:	ldr	r0, [sp, #4]
   2e484:	bl	3354c <__assert_fail@plt+0x22048>
   2e488:	bl	2e494 <__assert_fail@plt+0x1cf90>
   2e48c:	mov	sp, fp
   2e490:	pop	{fp, pc}
   2e494:	push	{fp, lr}
   2e498:	mov	fp, sp
   2e49c:	sub	sp, sp, #8
   2e4a0:	str	r0, [sp, #4]
   2e4a4:	ldr	r0, [sp, #4]
   2e4a8:	movw	r1, #0
   2e4ac:	cmp	r0, r1
   2e4b0:	bne	2e4b8 <__assert_fail@plt+0x1cfb4>
   2e4b4:	bl	311a8 <__assert_fail@plt+0x1fca4>
   2e4b8:	ldr	r0, [sp, #4]
   2e4bc:	mov	sp, fp
   2e4c0:	pop	{fp, pc}
   2e4c4:	push	{fp, lr}
   2e4c8:	mov	fp, sp
   2e4cc:	sub	sp, sp, #8
   2e4d0:	str	r0, [sp, #4]
   2e4d4:	ldr	r0, [sp, #4]
   2e4d8:	bl	34c7c <__assert_fail@plt+0x23778>
   2e4dc:	bl	2e494 <__assert_fail@plt+0x1cf90>
   2e4e0:	mov	sp, fp
   2e4e4:	pop	{fp, pc}
   2e4e8:	push	{fp, lr}
   2e4ec:	mov	fp, sp
   2e4f0:	sub	sp, sp, #8
   2e4f4:	str	r0, [sp, #4]
   2e4f8:	ldr	r0, [sp, #4]
   2e4fc:	bl	2e470 <__assert_fail@plt+0x1cf6c>
   2e500:	mov	sp, fp
   2e504:	pop	{fp, pc}
   2e508:	push	{fp, lr}
   2e50c:	mov	fp, sp
   2e510:	sub	sp, sp, #16
   2e514:	str	r0, [fp, #-4]
   2e518:	str	r1, [sp, #8]
   2e51c:	ldr	r0, [fp, #-4]
   2e520:	ldr	r1, [sp, #8]
   2e524:	bl	335bc <__assert_fail@plt+0x220b8>
   2e528:	str	r0, [sp, #4]
   2e52c:	ldr	r0, [sp, #4]
   2e530:	movw	r1, #0
   2e534:	cmp	r0, r1
   2e538:	bne	2e55c <__assert_fail@plt+0x1d058>
   2e53c:	ldr	r0, [fp, #-4]
   2e540:	movw	r1, #0
   2e544:	cmp	r0, r1
   2e548:	beq	2e558 <__assert_fail@plt+0x1d054>
   2e54c:	ldr	r0, [sp, #8]
   2e550:	cmp	r0, #0
   2e554:	beq	2e55c <__assert_fail@plt+0x1d058>
   2e558:	bl	311a8 <__assert_fail@plt+0x1fca4>
   2e55c:	ldr	r0, [sp, #4]
   2e560:	mov	sp, fp
   2e564:	pop	{fp, pc}
   2e568:	push	{fp, lr}
   2e56c:	mov	fp, sp
   2e570:	sub	sp, sp, #8
   2e574:	str	r0, [sp, #4]
   2e578:	str	r1, [sp]
   2e57c:	ldr	r0, [sp, #4]
   2e580:	ldr	r1, [sp]
   2e584:	bl	34cbc <__assert_fail@plt+0x237b8>
   2e588:	bl	2e494 <__assert_fail@plt+0x1cf90>
   2e58c:	mov	sp, fp
   2e590:	pop	{fp, pc}
   2e594:	push	{fp, lr}
   2e598:	mov	fp, sp
   2e59c:	sub	sp, sp, #16
   2e5a0:	str	r0, [fp, #-4]
   2e5a4:	str	r1, [sp, #8]
   2e5a8:	str	r2, [sp, #4]
   2e5ac:	ldr	r0, [fp, #-4]
   2e5b0:	ldr	r1, [sp, #8]
   2e5b4:	ldr	r2, [sp, #4]
   2e5b8:	bl	34db4 <__assert_fail@plt+0x238b0>
   2e5bc:	bl	2e494 <__assert_fail@plt+0x1cf90>
   2e5c0:	mov	sp, fp
   2e5c4:	pop	{fp, pc}
   2e5c8:	push	{fp, lr}
   2e5cc:	mov	fp, sp
   2e5d0:	sub	sp, sp, #8
   2e5d4:	str	r0, [sp, #4]
   2e5d8:	str	r1, [sp]
   2e5dc:	ldr	r1, [sp, #4]
   2e5e0:	ldr	r2, [sp]
   2e5e4:	movw	r0, #0
   2e5e8:	bl	2e3fc <__assert_fail@plt+0x1cef8>
   2e5ec:	mov	sp, fp
   2e5f0:	pop	{fp, pc}
   2e5f4:	push	{fp, lr}
   2e5f8:	mov	fp, sp
   2e5fc:	sub	sp, sp, #8
   2e600:	str	r0, [sp, #4]
   2e604:	str	r1, [sp]
   2e608:	ldr	r1, [sp, #4]
   2e60c:	ldr	r2, [sp]
   2e610:	movw	r0, #0
   2e614:	bl	2e594 <__assert_fail@plt+0x1d090>
   2e618:	mov	sp, fp
   2e61c:	pop	{fp, pc}
   2e620:	push	{fp, lr}
   2e624:	mov	fp, sp
   2e628:	sub	sp, sp, #8
   2e62c:	str	r0, [sp, #4]
   2e630:	str	r1, [sp]
   2e634:	ldr	r0, [sp, #4]
   2e638:	ldr	r1, [sp]
   2e63c:	movw	r2, #1
   2e640:	bl	2e64c <__assert_fail@plt+0x1d148>
   2e644:	mov	sp, fp
   2e648:	pop	{fp, pc}
   2e64c:	push	{fp, lr}
   2e650:	mov	fp, sp
   2e654:	sub	sp, sp, #16
   2e658:	str	r0, [fp, #-4]
   2e65c:	str	r1, [sp, #8]
   2e660:	str	r2, [sp, #4]
   2e664:	ldr	r0, [sp, #8]
   2e668:	ldr	r0, [r0]
   2e66c:	str	r0, [sp]
   2e670:	ldr	r0, [fp, #-4]
   2e674:	movw	r1, #0
   2e678:	cmp	r0, r1
   2e67c:	bne	2e6c8 <__assert_fail@plt+0x1d1c4>
   2e680:	ldr	r0, [sp]
   2e684:	cmp	r0, #0
   2e688:	bne	2e6c4 <__assert_fail@plt+0x1d1c0>
   2e68c:	ldr	r0, [sp, #4]
   2e690:	movw	r1, #64	; 0x40
   2e694:	udiv	r0, r1, r0
   2e698:	str	r0, [sp]
   2e69c:	ldr	r0, [sp]
   2e6a0:	cmp	r0, #0
   2e6a4:	movw	r0, #0
   2e6a8:	movne	r0, #1
   2e6ac:	mvn	r1, #0
   2e6b0:	eor	r0, r0, r1
   2e6b4:	and	r0, r0, #1
   2e6b8:	ldr	r1, [sp]
   2e6bc:	add	r0, r1, r0
   2e6c0:	str	r0, [sp]
   2e6c4:	b	2e6f8 <__assert_fail@plt+0x1d1f4>
   2e6c8:	ldr	r0, [sp]
   2e6cc:	ldr	r1, [sp]
   2e6d0:	lsr	r1, r1, #1
   2e6d4:	add	r1, r1, #1
   2e6d8:	adds	r0, r0, r1
   2e6dc:	mov	r1, #0
   2e6e0:	adc	r1, r1, #0
   2e6e4:	str	r0, [sp]
   2e6e8:	tst	r1, #1
   2e6ec:	beq	2e6f4 <__assert_fail@plt+0x1d1f0>
   2e6f0:	bl	311a8 <__assert_fail@plt+0x1fca4>
   2e6f4:	b	2e6f8 <__assert_fail@plt+0x1d1f4>
   2e6f8:	ldr	r0, [fp, #-4]
   2e6fc:	ldr	r1, [sp]
   2e700:	ldr	r2, [sp, #4]
   2e704:	bl	2e3fc <__assert_fail@plt+0x1cef8>
   2e708:	str	r0, [fp, #-4]
   2e70c:	ldr	r0, [sp]
   2e710:	ldr	r1, [sp, #8]
   2e714:	str	r0, [r1]
   2e718:	ldr	r0, [fp, #-4]
   2e71c:	mov	sp, fp
   2e720:	pop	{fp, pc}
   2e724:	push	{fp, lr}
   2e728:	mov	fp, sp
   2e72c:	sub	sp, sp, #216	; 0xd8
   2e730:	ldr	ip, [fp, #8]
   2e734:	str	r0, [fp, #-4]
   2e738:	str	r1, [fp, #-8]
   2e73c:	str	r2, [fp, #-12]
   2e740:	str	r3, [fp, #-16]
   2e744:	ldr	r0, [fp, #-8]
   2e748:	ldr	r0, [r0]
   2e74c:	str	r0, [fp, #-20]	; 0xffffffec
   2e750:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e754:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e758:	asr	r1, r1, #1
   2e75c:	add	r1, r0, r1
   2e760:	mov	r2, #1
   2e764:	cmp	r1, r0
   2e768:	movwvc	r2, #0
   2e76c:	str	r1, [fp, #-24]	; 0xffffffe8
   2e770:	tst	r2, #1
   2e774:	beq	2e780 <__assert_fail@plt+0x1d27c>
   2e778:	ldr	r0, [pc, #4036]	; 2f744 <__assert_fail@plt+0x1e240>
   2e77c:	str	r0, [fp, #-24]	; 0xffffffe8
   2e780:	ldr	r0, [fp, #-16]
   2e784:	movw	r1, #0
   2e788:	cmp	r1, r0
   2e78c:	bgt	2e7a8 <__assert_fail@plt+0x1d2a4>
   2e790:	ldr	r0, [fp, #-16]
   2e794:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e798:	cmp	r0, r1
   2e79c:	bge	2e7a8 <__assert_fail@plt+0x1d2a4>
   2e7a0:	ldr	r0, [fp, #-16]
   2e7a4:	str	r0, [fp, #-24]	; 0xffffffe8
   2e7a8:	b	2eb80 <__assert_fail@plt+0x1d67c>
   2e7ac:	b	2e7b0 <__assert_fail@plt+0x1d2ac>
   2e7b0:	ldr	r0, [fp, #8]
   2e7b4:	cmp	r0, #0
   2e7b8:	bge	2e8cc <__assert_fail@plt+0x1d3c8>
   2e7bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e7c0:	cmp	r0, #0
   2e7c4:	bge	2e850 <__assert_fail@plt+0x1d34c>
   2e7c8:	b	2e7cc <__assert_fail@plt+0x1d2c8>
   2e7cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e7d0:	ldr	r1, [fp, #8]
   2e7d4:	movw	r2, #127	; 0x7f
   2e7d8:	sdiv	r1, r2, r1
   2e7dc:	cmp	r0, r1
   2e7e0:	blt	2e96c <__assert_fail@plt+0x1d468>
   2e7e4:	b	2e984 <__assert_fail@plt+0x1d480>
   2e7e8:	b	2e7ec <__assert_fail@plt+0x1d2e8>
   2e7ec:	ldr	r0, [pc, #4084]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2e7f0:	ldr	r1, [fp, #8]
   2e7f4:	cmp	r1, r0
   2e7f8:	blt	2e810 <__assert_fail@plt+0x1d30c>
   2e7fc:	b	2e81c <__assert_fail@plt+0x1d318>
   2e800:	ldr	r0, [fp, #8]
   2e804:	movw	r1, #0
   2e808:	cmp	r1, r0
   2e80c:	bge	2e81c <__assert_fail@plt+0x1d318>
   2e810:	movw	r0, #0
   2e814:	str	r0, [fp, #-36]	; 0xffffffdc
   2e818:	b	2e834 <__assert_fail@plt+0x1d330>
   2e81c:	ldr	r0, [fp, #8]
   2e820:	movw	r1, #0
   2e824:	sub	r0, r1, r0
   2e828:	movw	r1, #127	; 0x7f
   2e82c:	sdiv	r0, r1, r0
   2e830:	str	r0, [fp, #-36]	; 0xffffffdc
   2e834:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e838:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e83c:	mvn	r2, #0
   2e840:	sub	r1, r2, r1
   2e844:	cmp	r0, r1
   2e848:	ble	2e96c <__assert_fail@plt+0x1d468>
   2e84c:	b	2e984 <__assert_fail@plt+0x1d480>
   2e850:	b	2e854 <__assert_fail@plt+0x1d350>
   2e854:	b	2e8b0 <__assert_fail@plt+0x1d3ac>
   2e858:	b	2e8b0 <__assert_fail@plt+0x1d3ac>
   2e85c:	ldr	r0, [fp, #8]
   2e860:	cmn	r0, #1
   2e864:	bne	2e8b0 <__assert_fail@plt+0x1d3ac>
   2e868:	b	2e86c <__assert_fail@plt+0x1d368>
   2e86c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e870:	mvn	r1, #127	; 0x7f
   2e874:	add	r0, r0, r1
   2e878:	movw	r1, #0
   2e87c:	cmp	r1, r0
   2e880:	blt	2e96c <__assert_fail@plt+0x1d468>
   2e884:	b	2e984 <__assert_fail@plt+0x1d480>
   2e888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e88c:	movw	r1, #0
   2e890:	cmp	r1, r0
   2e894:	bge	2e984 <__assert_fail@plt+0x1d480>
   2e898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e89c:	sub	r0, r0, #1
   2e8a0:	movw	r1, #127	; 0x7f
   2e8a4:	cmp	r1, r0
   2e8a8:	blt	2e96c <__assert_fail@plt+0x1d468>
   2e8ac:	b	2e984 <__assert_fail@plt+0x1d480>
   2e8b0:	ldr	r0, [fp, #8]
   2e8b4:	mvn	r1, #127	; 0x7f
   2e8b8:	sdiv	r0, r1, r0
   2e8bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e8c0:	cmp	r0, r1
   2e8c4:	blt	2e96c <__assert_fail@plt+0x1d468>
   2e8c8:	b	2e984 <__assert_fail@plt+0x1d480>
   2e8cc:	ldr	r0, [fp, #8]
   2e8d0:	cmp	r0, #0
   2e8d4:	bne	2e8dc <__assert_fail@plt+0x1d3d8>
   2e8d8:	b	2e984 <__assert_fail@plt+0x1d480>
   2e8dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e8e0:	cmp	r0, #0
   2e8e4:	bge	2e954 <__assert_fail@plt+0x1d450>
   2e8e8:	b	2e8ec <__assert_fail@plt+0x1d3e8>
   2e8ec:	b	2e938 <__assert_fail@plt+0x1d434>
   2e8f0:	b	2e938 <__assert_fail@plt+0x1d434>
   2e8f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e8f8:	cmn	r0, #1
   2e8fc:	bne	2e938 <__assert_fail@plt+0x1d434>
   2e900:	b	2e904 <__assert_fail@plt+0x1d400>
   2e904:	ldr	r0, [fp, #8]
   2e908:	mvn	r1, #127	; 0x7f
   2e90c:	add	r0, r0, r1
   2e910:	movw	r1, #0
   2e914:	cmp	r1, r0
   2e918:	blt	2e96c <__assert_fail@plt+0x1d468>
   2e91c:	b	2e984 <__assert_fail@plt+0x1d480>
   2e920:	ldr	r0, [fp, #8]
   2e924:	sub	r0, r0, #1
   2e928:	movw	r1, #127	; 0x7f
   2e92c:	cmp	r1, r0
   2e930:	blt	2e96c <__assert_fail@plt+0x1d468>
   2e934:	b	2e984 <__assert_fail@plt+0x1d480>
   2e938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e93c:	mvn	r1, #127	; 0x7f
   2e940:	sdiv	r0, r1, r0
   2e944:	ldr	r1, [fp, #8]
   2e948:	cmp	r0, r1
   2e94c:	blt	2e96c <__assert_fail@plt+0x1d468>
   2e950:	b	2e984 <__assert_fail@plt+0x1d480>
   2e954:	ldr	r0, [fp, #8]
   2e958:	movw	r1, #127	; 0x7f
   2e95c:	sdiv	r0, r1, r0
   2e960:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e964:	cmp	r0, r1
   2e968:	bge	2e984 <__assert_fail@plt+0x1d480>
   2e96c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e970:	ldr	r1, [fp, #8]
   2e974:	mul	r0, r0, r1
   2e978:	sxtb	r0, r0
   2e97c:	str	r0, [fp, #-28]	; 0xffffffe4
   2e980:	b	2fb48 <__assert_fail@plt+0x1e644>
   2e984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e988:	ldr	r1, [fp, #8]
   2e98c:	mul	r0, r0, r1
   2e990:	sxtb	r0, r0
   2e994:	str	r0, [fp, #-28]	; 0xffffffe4
   2e998:	b	2fb54 <__assert_fail@plt+0x1e650>
   2e99c:	ldr	r0, [fp, #8]
   2e9a0:	cmp	r0, #0
   2e9a4:	bge	2eab4 <__assert_fail@plt+0x1d5b0>
   2e9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9ac:	cmp	r0, #0
   2e9b0:	bge	2ea3c <__assert_fail@plt+0x1d538>
   2e9b4:	b	2e9b8 <__assert_fail@plt+0x1d4b4>
   2e9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9bc:	ldr	r1, [fp, #8]
   2e9c0:	movw	r2, #255	; 0xff
   2e9c4:	sdiv	r1, r2, r1
   2e9c8:	cmp	r0, r1
   2e9cc:	blt	2eb50 <__assert_fail@plt+0x1d64c>
   2e9d0:	b	2eb68 <__assert_fail@plt+0x1d664>
   2e9d4:	b	2e9d8 <__assert_fail@plt+0x1d4d4>
   2e9d8:	ldr	r0, [pc, #3592]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2e9dc:	ldr	r1, [fp, #8]
   2e9e0:	cmp	r1, r0
   2e9e4:	blt	2e9fc <__assert_fail@plt+0x1d4f8>
   2e9e8:	b	2ea08 <__assert_fail@plt+0x1d504>
   2e9ec:	ldr	r0, [fp, #8]
   2e9f0:	movw	r1, #0
   2e9f4:	cmp	r1, r0
   2e9f8:	bge	2ea08 <__assert_fail@plt+0x1d504>
   2e9fc:	movw	r0, #0
   2ea00:	str	r0, [fp, #-40]	; 0xffffffd8
   2ea04:	b	2ea20 <__assert_fail@plt+0x1d51c>
   2ea08:	ldr	r0, [fp, #8]
   2ea0c:	movw	r1, #0
   2ea10:	sub	r0, r1, r0
   2ea14:	movw	r1, #255	; 0xff
   2ea18:	sdiv	r0, r1, r0
   2ea1c:	str	r0, [fp, #-40]	; 0xffffffd8
   2ea20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ea24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ea28:	mvn	r2, #0
   2ea2c:	sub	r1, r2, r1
   2ea30:	cmp	r0, r1
   2ea34:	ble	2eb50 <__assert_fail@plt+0x1d64c>
   2ea38:	b	2eb68 <__assert_fail@plt+0x1d664>
   2ea3c:	b	2ea40 <__assert_fail@plt+0x1d53c>
   2ea40:	b	2ea98 <__assert_fail@plt+0x1d594>
   2ea44:	b	2ea98 <__assert_fail@plt+0x1d594>
   2ea48:	ldr	r0, [fp, #8]
   2ea4c:	cmn	r0, #1
   2ea50:	bne	2ea98 <__assert_fail@plt+0x1d594>
   2ea54:	b	2ea58 <__assert_fail@plt+0x1d554>
   2ea58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea5c:	add	r0, r0, #0
   2ea60:	movw	r1, #0
   2ea64:	cmp	r1, r0
   2ea68:	blt	2eb50 <__assert_fail@plt+0x1d64c>
   2ea6c:	b	2eb68 <__assert_fail@plt+0x1d664>
   2ea70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea74:	movw	r1, #0
   2ea78:	cmp	r1, r0
   2ea7c:	bge	2eb68 <__assert_fail@plt+0x1d664>
   2ea80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea84:	sub	r0, r0, #1
   2ea88:	mvn	r1, #0
   2ea8c:	cmp	r1, r0
   2ea90:	blt	2eb50 <__assert_fail@plt+0x1d64c>
   2ea94:	b	2eb68 <__assert_fail@plt+0x1d664>
   2ea98:	ldr	r0, [fp, #8]
   2ea9c:	movw	r1, #0
   2eaa0:	sdiv	r0, r1, r0
   2eaa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eaa8:	cmp	r0, r1
   2eaac:	blt	2eb50 <__assert_fail@plt+0x1d64c>
   2eab0:	b	2eb68 <__assert_fail@plt+0x1d664>
   2eab4:	ldr	r0, [fp, #8]
   2eab8:	cmp	r0, #0
   2eabc:	bne	2eac4 <__assert_fail@plt+0x1d5c0>
   2eac0:	b	2eb68 <__assert_fail@plt+0x1d664>
   2eac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eac8:	cmp	r0, #0
   2eacc:	bge	2eb38 <__assert_fail@plt+0x1d634>
   2ead0:	b	2ead4 <__assert_fail@plt+0x1d5d0>
   2ead4:	b	2eb1c <__assert_fail@plt+0x1d618>
   2ead8:	b	2eb1c <__assert_fail@plt+0x1d618>
   2eadc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eae0:	cmn	r0, #1
   2eae4:	bne	2eb1c <__assert_fail@plt+0x1d618>
   2eae8:	b	2eaec <__assert_fail@plt+0x1d5e8>
   2eaec:	ldr	r0, [fp, #8]
   2eaf0:	add	r0, r0, #0
   2eaf4:	movw	r1, #0
   2eaf8:	cmp	r1, r0
   2eafc:	blt	2eb50 <__assert_fail@plt+0x1d64c>
   2eb00:	b	2eb68 <__assert_fail@plt+0x1d664>
   2eb04:	ldr	r0, [fp, #8]
   2eb08:	sub	r0, r0, #1
   2eb0c:	mvn	r1, #0
   2eb10:	cmp	r1, r0
   2eb14:	blt	2eb50 <__assert_fail@plt+0x1d64c>
   2eb18:	b	2eb68 <__assert_fail@plt+0x1d664>
   2eb1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb20:	movw	r1, #0
   2eb24:	sdiv	r0, r1, r0
   2eb28:	ldr	r1, [fp, #8]
   2eb2c:	cmp	r0, r1
   2eb30:	blt	2eb50 <__assert_fail@plt+0x1d64c>
   2eb34:	b	2eb68 <__assert_fail@plt+0x1d664>
   2eb38:	ldr	r0, [fp, #8]
   2eb3c:	movw	r1, #255	; 0xff
   2eb40:	sdiv	r0, r1, r0
   2eb44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eb48:	cmp	r0, r1
   2eb4c:	bge	2eb68 <__assert_fail@plt+0x1d664>
   2eb50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb54:	ldr	r1, [fp, #8]
   2eb58:	mul	r0, r0, r1
   2eb5c:	and	r0, r0, #255	; 0xff
   2eb60:	str	r0, [fp, #-28]	; 0xffffffe4
   2eb64:	b	2fb48 <__assert_fail@plt+0x1e644>
   2eb68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb6c:	ldr	r1, [fp, #8]
   2eb70:	mul	r0, r0, r1
   2eb74:	and	r0, r0, #255	; 0xff
   2eb78:	str	r0, [fp, #-28]	; 0xffffffe4
   2eb7c:	b	2fb54 <__assert_fail@plt+0x1e650>
   2eb80:	b	2ef58 <__assert_fail@plt+0x1da54>
   2eb84:	b	2eb88 <__assert_fail@plt+0x1d684>
   2eb88:	ldr	r0, [fp, #8]
   2eb8c:	cmp	r0, #0
   2eb90:	bge	2eca4 <__assert_fail@plt+0x1d7a0>
   2eb94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb98:	cmp	r0, #0
   2eb9c:	bge	2ec28 <__assert_fail@plt+0x1d724>
   2eba0:	b	2eba4 <__assert_fail@plt+0x1d6a0>
   2eba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eba8:	ldr	r1, [fp, #8]
   2ebac:	movw	r2, #32767	; 0x7fff
   2ebb0:	sdiv	r1, r2, r1
   2ebb4:	cmp	r0, r1
   2ebb8:	blt	2ed44 <__assert_fail@plt+0x1d840>
   2ebbc:	b	2ed5c <__assert_fail@plt+0x1d858>
   2ebc0:	b	2ebc4 <__assert_fail@plt+0x1d6c0>
   2ebc4:	ldr	r0, [pc, #3100]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2ebc8:	ldr	r1, [fp, #8]
   2ebcc:	cmp	r1, r0
   2ebd0:	blt	2ebe8 <__assert_fail@plt+0x1d6e4>
   2ebd4:	b	2ebf4 <__assert_fail@plt+0x1d6f0>
   2ebd8:	ldr	r0, [fp, #8]
   2ebdc:	movw	r1, #0
   2ebe0:	cmp	r1, r0
   2ebe4:	bge	2ebf4 <__assert_fail@plt+0x1d6f0>
   2ebe8:	movw	r0, #0
   2ebec:	str	r0, [fp, #-44]	; 0xffffffd4
   2ebf0:	b	2ec0c <__assert_fail@plt+0x1d708>
   2ebf4:	ldr	r0, [fp, #8]
   2ebf8:	movw	r1, #0
   2ebfc:	sub	r0, r1, r0
   2ec00:	movw	r1, #32767	; 0x7fff
   2ec04:	sdiv	r0, r1, r0
   2ec08:	str	r0, [fp, #-44]	; 0xffffffd4
   2ec0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ec10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ec14:	mvn	r2, #0
   2ec18:	sub	r1, r2, r1
   2ec1c:	cmp	r0, r1
   2ec20:	ble	2ed44 <__assert_fail@plt+0x1d840>
   2ec24:	b	2ed5c <__assert_fail@plt+0x1d858>
   2ec28:	b	2ec2c <__assert_fail@plt+0x1d728>
   2ec2c:	b	2ec88 <__assert_fail@plt+0x1d784>
   2ec30:	b	2ec88 <__assert_fail@plt+0x1d784>
   2ec34:	ldr	r0, [fp, #8]
   2ec38:	cmn	r0, #1
   2ec3c:	bne	2ec88 <__assert_fail@plt+0x1d784>
   2ec40:	b	2ec44 <__assert_fail@plt+0x1d740>
   2ec44:	ldr	r0, [pc, #4068]	; 2fc30 <__assert_fail@plt+0x1e72c>
   2ec48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ec4c:	add	r0, r1, r0
   2ec50:	movw	r1, #0
   2ec54:	cmp	r1, r0
   2ec58:	blt	2ed44 <__assert_fail@plt+0x1d840>
   2ec5c:	b	2ed5c <__assert_fail@plt+0x1d858>
   2ec60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec64:	movw	r1, #0
   2ec68:	cmp	r1, r0
   2ec6c:	bge	2ed5c <__assert_fail@plt+0x1d858>
   2ec70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec74:	sub	r0, r0, #1
   2ec78:	movw	r1, #32767	; 0x7fff
   2ec7c:	cmp	r1, r0
   2ec80:	blt	2ed44 <__assert_fail@plt+0x1d840>
   2ec84:	b	2ed5c <__assert_fail@plt+0x1d858>
   2ec88:	ldr	r0, [pc, #4000]	; 2fc30 <__assert_fail@plt+0x1e72c>
   2ec8c:	ldr	r1, [fp, #8]
   2ec90:	sdiv	r0, r0, r1
   2ec94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ec98:	cmp	r0, r1
   2ec9c:	blt	2ed44 <__assert_fail@plt+0x1d840>
   2eca0:	b	2ed5c <__assert_fail@plt+0x1d858>
   2eca4:	ldr	r0, [fp, #8]
   2eca8:	cmp	r0, #0
   2ecac:	bne	2ecb4 <__assert_fail@plt+0x1d7b0>
   2ecb0:	b	2ed5c <__assert_fail@plt+0x1d858>
   2ecb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ecb8:	cmp	r0, #0
   2ecbc:	bge	2ed2c <__assert_fail@plt+0x1d828>
   2ecc0:	b	2ecc4 <__assert_fail@plt+0x1d7c0>
   2ecc4:	b	2ed10 <__assert_fail@plt+0x1d80c>
   2ecc8:	b	2ed10 <__assert_fail@plt+0x1d80c>
   2eccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ecd0:	cmn	r0, #1
   2ecd4:	bne	2ed10 <__assert_fail@plt+0x1d80c>
   2ecd8:	b	2ecdc <__assert_fail@plt+0x1d7d8>
   2ecdc:	ldr	r0, [pc, #3916]	; 2fc30 <__assert_fail@plt+0x1e72c>
   2ece0:	ldr	r1, [fp, #8]
   2ece4:	add	r0, r1, r0
   2ece8:	movw	r1, #0
   2ecec:	cmp	r1, r0
   2ecf0:	blt	2ed44 <__assert_fail@plt+0x1d840>
   2ecf4:	b	2ed5c <__assert_fail@plt+0x1d858>
   2ecf8:	ldr	r0, [fp, #8]
   2ecfc:	sub	r0, r0, #1
   2ed00:	movw	r1, #32767	; 0x7fff
   2ed04:	cmp	r1, r0
   2ed08:	blt	2ed44 <__assert_fail@plt+0x1d840>
   2ed0c:	b	2ed5c <__assert_fail@plt+0x1d858>
   2ed10:	ldr	r0, [pc, #3864]	; 2fc30 <__assert_fail@plt+0x1e72c>
   2ed14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ed18:	sdiv	r0, r0, r1
   2ed1c:	ldr	r1, [fp, #8]
   2ed20:	cmp	r0, r1
   2ed24:	blt	2ed44 <__assert_fail@plt+0x1d840>
   2ed28:	b	2ed5c <__assert_fail@plt+0x1d858>
   2ed2c:	ldr	r0, [fp, #8]
   2ed30:	movw	r1, #32767	; 0x7fff
   2ed34:	sdiv	r0, r1, r0
   2ed38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ed3c:	cmp	r0, r1
   2ed40:	bge	2ed5c <__assert_fail@plt+0x1d858>
   2ed44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed48:	ldr	r1, [fp, #8]
   2ed4c:	mul	r0, r0, r1
   2ed50:	sxth	r0, r0
   2ed54:	str	r0, [fp, #-28]	; 0xffffffe4
   2ed58:	b	2fb48 <__assert_fail@plt+0x1e644>
   2ed5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed60:	ldr	r1, [fp, #8]
   2ed64:	mul	r0, r0, r1
   2ed68:	sxth	r0, r0
   2ed6c:	str	r0, [fp, #-28]	; 0xffffffe4
   2ed70:	b	2fb54 <__assert_fail@plt+0x1e650>
   2ed74:	ldr	r0, [fp, #8]
   2ed78:	cmp	r0, #0
   2ed7c:	bge	2ee8c <__assert_fail@plt+0x1d988>
   2ed80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed84:	cmp	r0, #0
   2ed88:	bge	2ee14 <__assert_fail@plt+0x1d910>
   2ed8c:	b	2ed90 <__assert_fail@plt+0x1d88c>
   2ed90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed94:	ldr	r1, [fp, #8]
   2ed98:	movw	r2, #65535	; 0xffff
   2ed9c:	sdiv	r1, r2, r1
   2eda0:	cmp	r0, r1
   2eda4:	blt	2ef28 <__assert_fail@plt+0x1da24>
   2eda8:	b	2ef40 <__assert_fail@plt+0x1da3c>
   2edac:	b	2edb0 <__assert_fail@plt+0x1d8ac>
   2edb0:	ldr	r0, [pc, #2608]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2edb4:	ldr	r1, [fp, #8]
   2edb8:	cmp	r1, r0
   2edbc:	blt	2edd4 <__assert_fail@plt+0x1d8d0>
   2edc0:	b	2ede0 <__assert_fail@plt+0x1d8dc>
   2edc4:	ldr	r0, [fp, #8]
   2edc8:	movw	r1, #0
   2edcc:	cmp	r1, r0
   2edd0:	bge	2ede0 <__assert_fail@plt+0x1d8dc>
   2edd4:	movw	r0, #0
   2edd8:	str	r0, [fp, #-48]	; 0xffffffd0
   2eddc:	b	2edf8 <__assert_fail@plt+0x1d8f4>
   2ede0:	ldr	r0, [fp, #8]
   2ede4:	movw	r1, #0
   2ede8:	sub	r0, r1, r0
   2edec:	movw	r1, #65535	; 0xffff
   2edf0:	sdiv	r0, r1, r0
   2edf4:	str	r0, [fp, #-48]	; 0xffffffd0
   2edf8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2edfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ee00:	mvn	r2, #0
   2ee04:	sub	r1, r2, r1
   2ee08:	cmp	r0, r1
   2ee0c:	ble	2ef28 <__assert_fail@plt+0x1da24>
   2ee10:	b	2ef40 <__assert_fail@plt+0x1da3c>
   2ee14:	b	2ee18 <__assert_fail@plt+0x1d914>
   2ee18:	b	2ee70 <__assert_fail@plt+0x1d96c>
   2ee1c:	b	2ee70 <__assert_fail@plt+0x1d96c>
   2ee20:	ldr	r0, [fp, #8]
   2ee24:	cmn	r0, #1
   2ee28:	bne	2ee70 <__assert_fail@plt+0x1d96c>
   2ee2c:	b	2ee30 <__assert_fail@plt+0x1d92c>
   2ee30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee34:	add	r0, r0, #0
   2ee38:	movw	r1, #0
   2ee3c:	cmp	r1, r0
   2ee40:	blt	2ef28 <__assert_fail@plt+0x1da24>
   2ee44:	b	2ef40 <__assert_fail@plt+0x1da3c>
   2ee48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee4c:	movw	r1, #0
   2ee50:	cmp	r1, r0
   2ee54:	bge	2ef40 <__assert_fail@plt+0x1da3c>
   2ee58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee5c:	sub	r0, r0, #1
   2ee60:	mvn	r1, #0
   2ee64:	cmp	r1, r0
   2ee68:	blt	2ef28 <__assert_fail@plt+0x1da24>
   2ee6c:	b	2ef40 <__assert_fail@plt+0x1da3c>
   2ee70:	ldr	r0, [fp, #8]
   2ee74:	movw	r1, #0
   2ee78:	sdiv	r0, r1, r0
   2ee7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ee80:	cmp	r0, r1
   2ee84:	blt	2ef28 <__assert_fail@plt+0x1da24>
   2ee88:	b	2ef40 <__assert_fail@plt+0x1da3c>
   2ee8c:	ldr	r0, [fp, #8]
   2ee90:	cmp	r0, #0
   2ee94:	bne	2ee9c <__assert_fail@plt+0x1d998>
   2ee98:	b	2ef40 <__assert_fail@plt+0x1da3c>
   2ee9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eea0:	cmp	r0, #0
   2eea4:	bge	2ef10 <__assert_fail@plt+0x1da0c>
   2eea8:	b	2eeac <__assert_fail@plt+0x1d9a8>
   2eeac:	b	2eef4 <__assert_fail@plt+0x1d9f0>
   2eeb0:	b	2eef4 <__assert_fail@plt+0x1d9f0>
   2eeb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eeb8:	cmn	r0, #1
   2eebc:	bne	2eef4 <__assert_fail@plt+0x1d9f0>
   2eec0:	b	2eec4 <__assert_fail@plt+0x1d9c0>
   2eec4:	ldr	r0, [fp, #8]
   2eec8:	add	r0, r0, #0
   2eecc:	movw	r1, #0
   2eed0:	cmp	r1, r0
   2eed4:	blt	2ef28 <__assert_fail@plt+0x1da24>
   2eed8:	b	2ef40 <__assert_fail@plt+0x1da3c>
   2eedc:	ldr	r0, [fp, #8]
   2eee0:	sub	r0, r0, #1
   2eee4:	mvn	r1, #0
   2eee8:	cmp	r1, r0
   2eeec:	blt	2ef28 <__assert_fail@plt+0x1da24>
   2eef0:	b	2ef40 <__assert_fail@plt+0x1da3c>
   2eef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eef8:	movw	r1, #0
   2eefc:	sdiv	r0, r1, r0
   2ef00:	ldr	r1, [fp, #8]
   2ef04:	cmp	r0, r1
   2ef08:	blt	2ef28 <__assert_fail@plt+0x1da24>
   2ef0c:	b	2ef40 <__assert_fail@plt+0x1da3c>
   2ef10:	ldr	r0, [fp, #8]
   2ef14:	movw	r1, #65535	; 0xffff
   2ef18:	sdiv	r0, r1, r0
   2ef1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ef20:	cmp	r0, r1
   2ef24:	bge	2ef40 <__assert_fail@plt+0x1da3c>
   2ef28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef2c:	ldr	r1, [fp, #8]
   2ef30:	mul	r0, r0, r1
   2ef34:	uxth	r0, r0
   2ef38:	str	r0, [fp, #-28]	; 0xffffffe4
   2ef3c:	b	2fb48 <__assert_fail@plt+0x1e644>
   2ef40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef44:	ldr	r1, [fp, #8]
   2ef48:	mul	r0, r0, r1
   2ef4c:	uxth	r0, r0
   2ef50:	str	r0, [fp, #-28]	; 0xffffffe4
   2ef54:	b	2fb54 <__assert_fail@plt+0x1e650>
   2ef58:	b	2ef5c <__assert_fail@plt+0x1da58>
   2ef5c:	b	2ef60 <__assert_fail@plt+0x1da5c>
   2ef60:	ldr	r0, [fp, #8]
   2ef64:	cmp	r0, #0
   2ef68:	bge	2f06c <__assert_fail@plt+0x1db68>
   2ef6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef70:	cmp	r0, #0
   2ef74:	bge	2f000 <__assert_fail@plt+0x1dafc>
   2ef78:	b	2ef7c <__assert_fail@plt+0x1da78>
   2ef7c:	ldr	r0, [pc, #1984]	; 2f744 <__assert_fail@plt+0x1e240>
   2ef80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ef84:	ldr	r2, [fp, #8]
   2ef88:	sdiv	r0, r0, r2
   2ef8c:	cmp	r1, r0
   2ef90:	blt	2f0fc <__assert_fail@plt+0x1dbf8>
   2ef94:	b	2f110 <__assert_fail@plt+0x1dc0c>
   2ef98:	b	2ef9c <__assert_fail@plt+0x1da98>
   2ef9c:	ldr	r0, [pc, #2116]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2efa0:	ldr	r1, [fp, #8]
   2efa4:	cmp	r1, r0
   2efa8:	blt	2efc0 <__assert_fail@plt+0x1dabc>
   2efac:	b	2efcc <__assert_fail@plt+0x1dac8>
   2efb0:	ldr	r0, [fp, #8]
   2efb4:	movw	r1, #0
   2efb8:	cmp	r1, r0
   2efbc:	bge	2efcc <__assert_fail@plt+0x1dac8>
   2efc0:	movw	r0, #0
   2efc4:	str	r0, [fp, #-52]	; 0xffffffcc
   2efc8:	b	2efe4 <__assert_fail@plt+0x1dae0>
   2efcc:	ldr	r0, [pc, #1904]	; 2f744 <__assert_fail@plt+0x1e240>
   2efd0:	ldr	r1, [fp, #8]
   2efd4:	movw	r2, #0
   2efd8:	sub	r1, r2, r1
   2efdc:	sdiv	r0, r0, r1
   2efe0:	str	r0, [fp, #-52]	; 0xffffffcc
   2efe4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2efe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2efec:	mvn	r2, #0
   2eff0:	sub	r1, r2, r1
   2eff4:	cmp	r0, r1
   2eff8:	ble	2f0fc <__assert_fail@plt+0x1dbf8>
   2effc:	b	2f110 <__assert_fail@plt+0x1dc0c>
   2f000:	ldr	r0, [fp, #8]
   2f004:	cmn	r0, #1
   2f008:	bne	2f050 <__assert_fail@plt+0x1db4c>
   2f00c:	b	2f010 <__assert_fail@plt+0x1db0c>
   2f010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f014:	add	r0, r0, #-2147483648	; 0x80000000
   2f018:	movw	r1, #0
   2f01c:	cmp	r1, r0
   2f020:	blt	2f0fc <__assert_fail@plt+0x1dbf8>
   2f024:	b	2f110 <__assert_fail@plt+0x1dc0c>
   2f028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f02c:	movw	r1, #0
   2f030:	cmp	r1, r0
   2f034:	bge	2f110 <__assert_fail@plt+0x1dc0c>
   2f038:	ldr	r0, [pc, #1796]	; 2f744 <__assert_fail@plt+0x1e240>
   2f03c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f040:	sub	r1, r1, #1
   2f044:	cmp	r0, r1
   2f048:	blt	2f0fc <__assert_fail@plt+0x1dbf8>
   2f04c:	b	2f110 <__assert_fail@plt+0x1dc0c>
   2f050:	ldr	r0, [pc, #4080]	; 30048 <__assert_fail@plt+0x1eb44>
   2f054:	ldr	r1, [fp, #8]
   2f058:	sdiv	r0, r0, r1
   2f05c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f060:	cmp	r0, r1
   2f064:	blt	2f0fc <__assert_fail@plt+0x1dbf8>
   2f068:	b	2f110 <__assert_fail@plt+0x1dc0c>
   2f06c:	ldr	r0, [fp, #8]
   2f070:	cmp	r0, #0
   2f074:	bne	2f07c <__assert_fail@plt+0x1db78>
   2f078:	b	2f110 <__assert_fail@plt+0x1dc0c>
   2f07c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f080:	cmp	r0, #0
   2f084:	bge	2f0e4 <__assert_fail@plt+0x1dbe0>
   2f088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f08c:	cmn	r0, #1
   2f090:	bne	2f0c8 <__assert_fail@plt+0x1dbc4>
   2f094:	b	2f098 <__assert_fail@plt+0x1db94>
   2f098:	ldr	r0, [fp, #8]
   2f09c:	add	r0, r0, #-2147483648	; 0x80000000
   2f0a0:	movw	r1, #0
   2f0a4:	cmp	r1, r0
   2f0a8:	blt	2f0fc <__assert_fail@plt+0x1dbf8>
   2f0ac:	b	2f110 <__assert_fail@plt+0x1dc0c>
   2f0b0:	ldr	r0, [pc, #1676]	; 2f744 <__assert_fail@plt+0x1e240>
   2f0b4:	ldr	r1, [fp, #8]
   2f0b8:	sub	r1, r1, #1
   2f0bc:	cmp	r0, r1
   2f0c0:	blt	2f0fc <__assert_fail@plt+0x1dbf8>
   2f0c4:	b	2f110 <__assert_fail@plt+0x1dc0c>
   2f0c8:	ldr	r0, [pc, #3960]	; 30048 <__assert_fail@plt+0x1eb44>
   2f0cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f0d0:	sdiv	r0, r0, r1
   2f0d4:	ldr	r1, [fp, #8]
   2f0d8:	cmp	r0, r1
   2f0dc:	blt	2f0fc <__assert_fail@plt+0x1dbf8>
   2f0e0:	b	2f110 <__assert_fail@plt+0x1dc0c>
   2f0e4:	ldr	r0, [pc, #1624]	; 2f744 <__assert_fail@plt+0x1e240>
   2f0e8:	ldr	r1, [fp, #8]
   2f0ec:	sdiv	r0, r0, r1
   2f0f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f0f4:	cmp	r0, r1
   2f0f8:	bge	2f110 <__assert_fail@plt+0x1dc0c>
   2f0fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f100:	ldr	r1, [fp, #8]
   2f104:	mul	r0, r0, r1
   2f108:	str	r0, [fp, #-28]	; 0xffffffe4
   2f10c:	b	2fb48 <__assert_fail@plt+0x1e644>
   2f110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f114:	ldr	r1, [fp, #8]
   2f118:	mul	r0, r0, r1
   2f11c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f120:	b	2fb54 <__assert_fail@plt+0x1e650>
   2f124:	ldr	r0, [fp, #8]
   2f128:	cmp	r0, #0
   2f12c:	bge	2f23c <__assert_fail@plt+0x1dd38>
   2f130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f134:	cmp	r0, #0
   2f138:	bge	2f1c4 <__assert_fail@plt+0x1dcc0>
   2f13c:	b	2f15c <__assert_fail@plt+0x1dc58>
   2f140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f144:	ldr	r1, [fp, #8]
   2f148:	mvn	r2, #0
   2f14c:	udiv	r1, r2, r1
   2f150:	cmp	r0, r1
   2f154:	bcc	2f2d8 <__assert_fail@plt+0x1ddd4>
   2f158:	b	2f2ec <__assert_fail@plt+0x1dde8>
   2f15c:	b	2f160 <__assert_fail@plt+0x1dc5c>
   2f160:	ldr	r0, [pc, #1664]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2f164:	ldr	r1, [fp, #8]
   2f168:	cmp	r1, r0
   2f16c:	blt	2f184 <__assert_fail@plt+0x1dc80>
   2f170:	b	2f190 <__assert_fail@plt+0x1dc8c>
   2f174:	ldr	r0, [fp, #8]
   2f178:	movw	r1, #0
   2f17c:	cmp	r1, r0
   2f180:	bge	2f190 <__assert_fail@plt+0x1dc8c>
   2f184:	movw	r0, #1
   2f188:	str	r0, [fp, #-56]	; 0xffffffc8
   2f18c:	b	2f1a8 <__assert_fail@plt+0x1dca4>
   2f190:	ldr	r0, [fp, #8]
   2f194:	movw	r1, #0
   2f198:	sub	r0, r1, r0
   2f19c:	mvn	r1, #0
   2f1a0:	udiv	r0, r1, r0
   2f1a4:	str	r0, [fp, #-56]	; 0xffffffc8
   2f1a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f1ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f1b0:	mvn	r2, #0
   2f1b4:	sub	r1, r2, r1
   2f1b8:	cmp	r0, r1
   2f1bc:	bls	2f2d8 <__assert_fail@plt+0x1ddd4>
   2f1c0:	b	2f2ec <__assert_fail@plt+0x1dde8>
   2f1c4:	b	2f1c8 <__assert_fail@plt+0x1dcc4>
   2f1c8:	b	2f220 <__assert_fail@plt+0x1dd1c>
   2f1cc:	b	2f220 <__assert_fail@plt+0x1dd1c>
   2f1d0:	ldr	r0, [fp, #8]
   2f1d4:	cmn	r0, #1
   2f1d8:	bne	2f220 <__assert_fail@plt+0x1dd1c>
   2f1dc:	b	2f1e0 <__assert_fail@plt+0x1dcdc>
   2f1e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f1e4:	add	r0, r0, #0
   2f1e8:	movw	r1, #0
   2f1ec:	cmp	r1, r0
   2f1f0:	blt	2f2d8 <__assert_fail@plt+0x1ddd4>
   2f1f4:	b	2f2ec <__assert_fail@plt+0x1dde8>
   2f1f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f1fc:	movw	r1, #0
   2f200:	cmp	r1, r0
   2f204:	bge	2f2ec <__assert_fail@plt+0x1dde8>
   2f208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f20c:	sub	r0, r0, #1
   2f210:	mvn	r1, #0
   2f214:	cmp	r1, r0
   2f218:	blt	2f2d8 <__assert_fail@plt+0x1ddd4>
   2f21c:	b	2f2ec <__assert_fail@plt+0x1dde8>
   2f220:	ldr	r0, [fp, #8]
   2f224:	movw	r1, #0
   2f228:	sdiv	r0, r1, r0
   2f22c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f230:	cmp	r0, r1
   2f234:	blt	2f2d8 <__assert_fail@plt+0x1ddd4>
   2f238:	b	2f2ec <__assert_fail@plt+0x1dde8>
   2f23c:	ldr	r0, [fp, #8]
   2f240:	cmp	r0, #0
   2f244:	bne	2f24c <__assert_fail@plt+0x1dd48>
   2f248:	b	2f2ec <__assert_fail@plt+0x1dde8>
   2f24c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f250:	cmp	r0, #0
   2f254:	bge	2f2c0 <__assert_fail@plt+0x1ddbc>
   2f258:	b	2f25c <__assert_fail@plt+0x1dd58>
   2f25c:	b	2f2a4 <__assert_fail@plt+0x1dda0>
   2f260:	b	2f2a4 <__assert_fail@plt+0x1dda0>
   2f264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f268:	cmn	r0, #1
   2f26c:	bne	2f2a4 <__assert_fail@plt+0x1dda0>
   2f270:	b	2f274 <__assert_fail@plt+0x1dd70>
   2f274:	ldr	r0, [fp, #8]
   2f278:	add	r0, r0, #0
   2f27c:	movw	r1, #0
   2f280:	cmp	r1, r0
   2f284:	blt	2f2d8 <__assert_fail@plt+0x1ddd4>
   2f288:	b	2f2ec <__assert_fail@plt+0x1dde8>
   2f28c:	ldr	r0, [fp, #8]
   2f290:	sub	r0, r0, #1
   2f294:	mvn	r1, #0
   2f298:	cmp	r1, r0
   2f29c:	blt	2f2d8 <__assert_fail@plt+0x1ddd4>
   2f2a0:	b	2f2ec <__assert_fail@plt+0x1dde8>
   2f2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f2a8:	movw	r1, #0
   2f2ac:	sdiv	r0, r1, r0
   2f2b0:	ldr	r1, [fp, #8]
   2f2b4:	cmp	r0, r1
   2f2b8:	blt	2f2d8 <__assert_fail@plt+0x1ddd4>
   2f2bc:	b	2f2ec <__assert_fail@plt+0x1dde8>
   2f2c0:	ldr	r0, [fp, #8]
   2f2c4:	mvn	r1, #0
   2f2c8:	udiv	r0, r1, r0
   2f2cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f2d0:	cmp	r0, r1
   2f2d4:	bcs	2f2ec <__assert_fail@plt+0x1dde8>
   2f2d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f2dc:	ldr	r1, [fp, #8]
   2f2e0:	mul	r0, r0, r1
   2f2e4:	str	r0, [fp, #-28]	; 0xffffffe4
   2f2e8:	b	2fb48 <__assert_fail@plt+0x1e644>
   2f2ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f2f0:	ldr	r1, [fp, #8]
   2f2f4:	mul	r0, r0, r1
   2f2f8:	str	r0, [fp, #-28]	; 0xffffffe4
   2f2fc:	b	2fb54 <__assert_fail@plt+0x1e650>
   2f300:	b	2f304 <__assert_fail@plt+0x1de00>
   2f304:	b	2f308 <__assert_fail@plt+0x1de04>
   2f308:	ldr	r0, [fp, #8]
   2f30c:	cmp	r0, #0
   2f310:	bge	2f414 <__assert_fail@plt+0x1df10>
   2f314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f318:	cmp	r0, #0
   2f31c:	bge	2f3a8 <__assert_fail@plt+0x1dea4>
   2f320:	b	2f324 <__assert_fail@plt+0x1de20>
   2f324:	ldr	r0, [pc, #1048]	; 2f744 <__assert_fail@plt+0x1e240>
   2f328:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f32c:	ldr	r2, [fp, #8]
   2f330:	sdiv	r0, r0, r2
   2f334:	cmp	r1, r0
   2f338:	blt	2f4a4 <__assert_fail@plt+0x1dfa0>
   2f33c:	b	2f4b8 <__assert_fail@plt+0x1dfb4>
   2f340:	b	2f344 <__assert_fail@plt+0x1de40>
   2f344:	ldr	r0, [pc, #1180]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2f348:	ldr	r1, [fp, #8]
   2f34c:	cmp	r1, r0
   2f350:	blt	2f368 <__assert_fail@plt+0x1de64>
   2f354:	b	2f374 <__assert_fail@plt+0x1de70>
   2f358:	ldr	r0, [fp, #8]
   2f35c:	movw	r1, #0
   2f360:	cmp	r1, r0
   2f364:	bge	2f374 <__assert_fail@plt+0x1de70>
   2f368:	movw	r0, #0
   2f36c:	str	r0, [fp, #-60]	; 0xffffffc4
   2f370:	b	2f38c <__assert_fail@plt+0x1de88>
   2f374:	ldr	r0, [pc, #968]	; 2f744 <__assert_fail@plt+0x1e240>
   2f378:	ldr	r1, [fp, #8]
   2f37c:	movw	r2, #0
   2f380:	sub	r1, r2, r1
   2f384:	sdiv	r0, r0, r1
   2f388:	str	r0, [fp, #-60]	; 0xffffffc4
   2f38c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f390:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f394:	mvn	r2, #0
   2f398:	sub	r1, r2, r1
   2f39c:	cmp	r0, r1
   2f3a0:	ble	2f4a4 <__assert_fail@plt+0x1dfa0>
   2f3a4:	b	2f4b8 <__assert_fail@plt+0x1dfb4>
   2f3a8:	ldr	r0, [fp, #8]
   2f3ac:	cmn	r0, #1
   2f3b0:	bne	2f3f8 <__assert_fail@plt+0x1def4>
   2f3b4:	b	2f3b8 <__assert_fail@plt+0x1deb4>
   2f3b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f3bc:	add	r0, r0, #-2147483648	; 0x80000000
   2f3c0:	movw	r1, #0
   2f3c4:	cmp	r1, r0
   2f3c8:	blt	2f4a4 <__assert_fail@plt+0x1dfa0>
   2f3cc:	b	2f4b8 <__assert_fail@plt+0x1dfb4>
   2f3d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f3d4:	movw	r1, #0
   2f3d8:	cmp	r1, r0
   2f3dc:	bge	2f4b8 <__assert_fail@plt+0x1dfb4>
   2f3e0:	ldr	r0, [pc, #860]	; 2f744 <__assert_fail@plt+0x1e240>
   2f3e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f3e8:	sub	r1, r1, #1
   2f3ec:	cmp	r0, r1
   2f3f0:	blt	2f4a4 <__assert_fail@plt+0x1dfa0>
   2f3f4:	b	2f4b8 <__assert_fail@plt+0x1dfb4>
   2f3f8:	ldr	r0, [pc, #3144]	; 30048 <__assert_fail@plt+0x1eb44>
   2f3fc:	ldr	r1, [fp, #8]
   2f400:	sdiv	r0, r0, r1
   2f404:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f408:	cmp	r0, r1
   2f40c:	blt	2f4a4 <__assert_fail@plt+0x1dfa0>
   2f410:	b	2f4b8 <__assert_fail@plt+0x1dfb4>
   2f414:	ldr	r0, [fp, #8]
   2f418:	cmp	r0, #0
   2f41c:	bne	2f424 <__assert_fail@plt+0x1df20>
   2f420:	b	2f4b8 <__assert_fail@plt+0x1dfb4>
   2f424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f428:	cmp	r0, #0
   2f42c:	bge	2f48c <__assert_fail@plt+0x1df88>
   2f430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f434:	cmn	r0, #1
   2f438:	bne	2f470 <__assert_fail@plt+0x1df6c>
   2f43c:	b	2f440 <__assert_fail@plt+0x1df3c>
   2f440:	ldr	r0, [fp, #8]
   2f444:	add	r0, r0, #-2147483648	; 0x80000000
   2f448:	movw	r1, #0
   2f44c:	cmp	r1, r0
   2f450:	blt	2f4a4 <__assert_fail@plt+0x1dfa0>
   2f454:	b	2f4b8 <__assert_fail@plt+0x1dfb4>
   2f458:	ldr	r0, [pc, #740]	; 2f744 <__assert_fail@plt+0x1e240>
   2f45c:	ldr	r1, [fp, #8]
   2f460:	sub	r1, r1, #1
   2f464:	cmp	r0, r1
   2f468:	blt	2f4a4 <__assert_fail@plt+0x1dfa0>
   2f46c:	b	2f4b8 <__assert_fail@plt+0x1dfb4>
   2f470:	ldr	r0, [pc, #3024]	; 30048 <__assert_fail@plt+0x1eb44>
   2f474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f478:	sdiv	r0, r0, r1
   2f47c:	ldr	r1, [fp, #8]
   2f480:	cmp	r0, r1
   2f484:	blt	2f4a4 <__assert_fail@plt+0x1dfa0>
   2f488:	b	2f4b8 <__assert_fail@plt+0x1dfb4>
   2f48c:	ldr	r0, [pc, #688]	; 2f744 <__assert_fail@plt+0x1e240>
   2f490:	ldr	r1, [fp, #8]
   2f494:	sdiv	r0, r0, r1
   2f498:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f49c:	cmp	r0, r1
   2f4a0:	bge	2f4b8 <__assert_fail@plt+0x1dfb4>
   2f4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f4a8:	ldr	r1, [fp, #8]
   2f4ac:	mul	r0, r0, r1
   2f4b0:	str	r0, [fp, #-28]	; 0xffffffe4
   2f4b4:	b	2fb48 <__assert_fail@plt+0x1e644>
   2f4b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f4bc:	ldr	r1, [fp, #8]
   2f4c0:	mul	r0, r0, r1
   2f4c4:	str	r0, [fp, #-28]	; 0xffffffe4
   2f4c8:	b	2fb54 <__assert_fail@plt+0x1e650>
   2f4cc:	ldr	r0, [fp, #8]
   2f4d0:	cmp	r0, #0
   2f4d4:	bge	2f5e4 <__assert_fail@plt+0x1e0e0>
   2f4d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f4dc:	cmp	r0, #0
   2f4e0:	bge	2f56c <__assert_fail@plt+0x1e068>
   2f4e4:	b	2f504 <__assert_fail@plt+0x1e000>
   2f4e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f4ec:	ldr	r1, [fp, #8]
   2f4f0:	mvn	r2, #0
   2f4f4:	udiv	r1, r2, r1
   2f4f8:	cmp	r0, r1
   2f4fc:	bcc	2f680 <__assert_fail@plt+0x1e17c>
   2f500:	b	2f694 <__assert_fail@plt+0x1e190>
   2f504:	b	2f508 <__assert_fail@plt+0x1e004>
   2f508:	ldr	r0, [pc, #728]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2f50c:	ldr	r1, [fp, #8]
   2f510:	cmp	r1, r0
   2f514:	blt	2f52c <__assert_fail@plt+0x1e028>
   2f518:	b	2f538 <__assert_fail@plt+0x1e034>
   2f51c:	ldr	r0, [fp, #8]
   2f520:	movw	r1, #0
   2f524:	cmp	r1, r0
   2f528:	bge	2f538 <__assert_fail@plt+0x1e034>
   2f52c:	movw	r0, #1
   2f530:	str	r0, [fp, #-64]	; 0xffffffc0
   2f534:	b	2f550 <__assert_fail@plt+0x1e04c>
   2f538:	ldr	r0, [fp, #8]
   2f53c:	movw	r1, #0
   2f540:	sub	r0, r1, r0
   2f544:	mvn	r1, #0
   2f548:	udiv	r0, r1, r0
   2f54c:	str	r0, [fp, #-64]	; 0xffffffc0
   2f550:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f558:	mvn	r2, #0
   2f55c:	sub	r1, r2, r1
   2f560:	cmp	r0, r1
   2f564:	bls	2f680 <__assert_fail@plt+0x1e17c>
   2f568:	b	2f694 <__assert_fail@plt+0x1e190>
   2f56c:	b	2f570 <__assert_fail@plt+0x1e06c>
   2f570:	b	2f5c8 <__assert_fail@plt+0x1e0c4>
   2f574:	b	2f5c8 <__assert_fail@plt+0x1e0c4>
   2f578:	ldr	r0, [fp, #8]
   2f57c:	cmn	r0, #1
   2f580:	bne	2f5c8 <__assert_fail@plt+0x1e0c4>
   2f584:	b	2f588 <__assert_fail@plt+0x1e084>
   2f588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f58c:	add	r0, r0, #0
   2f590:	movw	r1, #0
   2f594:	cmp	r1, r0
   2f598:	blt	2f680 <__assert_fail@plt+0x1e17c>
   2f59c:	b	2f694 <__assert_fail@plt+0x1e190>
   2f5a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5a4:	movw	r1, #0
   2f5a8:	cmp	r1, r0
   2f5ac:	bge	2f694 <__assert_fail@plt+0x1e190>
   2f5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5b4:	sub	r0, r0, #1
   2f5b8:	mvn	r1, #0
   2f5bc:	cmp	r1, r0
   2f5c0:	blt	2f680 <__assert_fail@plt+0x1e17c>
   2f5c4:	b	2f694 <__assert_fail@plt+0x1e190>
   2f5c8:	ldr	r0, [fp, #8]
   2f5cc:	movw	r1, #0
   2f5d0:	sdiv	r0, r1, r0
   2f5d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f5d8:	cmp	r0, r1
   2f5dc:	blt	2f680 <__assert_fail@plt+0x1e17c>
   2f5e0:	b	2f694 <__assert_fail@plt+0x1e190>
   2f5e4:	ldr	r0, [fp, #8]
   2f5e8:	cmp	r0, #0
   2f5ec:	bne	2f5f4 <__assert_fail@plt+0x1e0f0>
   2f5f0:	b	2f694 <__assert_fail@plt+0x1e190>
   2f5f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5f8:	cmp	r0, #0
   2f5fc:	bge	2f668 <__assert_fail@plt+0x1e164>
   2f600:	b	2f604 <__assert_fail@plt+0x1e100>
   2f604:	b	2f64c <__assert_fail@plt+0x1e148>
   2f608:	b	2f64c <__assert_fail@plt+0x1e148>
   2f60c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f610:	cmn	r0, #1
   2f614:	bne	2f64c <__assert_fail@plt+0x1e148>
   2f618:	b	2f61c <__assert_fail@plt+0x1e118>
   2f61c:	ldr	r0, [fp, #8]
   2f620:	add	r0, r0, #0
   2f624:	movw	r1, #0
   2f628:	cmp	r1, r0
   2f62c:	blt	2f680 <__assert_fail@plt+0x1e17c>
   2f630:	b	2f694 <__assert_fail@plt+0x1e190>
   2f634:	ldr	r0, [fp, #8]
   2f638:	sub	r0, r0, #1
   2f63c:	mvn	r1, #0
   2f640:	cmp	r1, r0
   2f644:	blt	2f680 <__assert_fail@plt+0x1e17c>
   2f648:	b	2f694 <__assert_fail@plt+0x1e190>
   2f64c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f650:	movw	r1, #0
   2f654:	sdiv	r0, r1, r0
   2f658:	ldr	r1, [fp, #8]
   2f65c:	cmp	r0, r1
   2f660:	blt	2f680 <__assert_fail@plt+0x1e17c>
   2f664:	b	2f694 <__assert_fail@plt+0x1e190>
   2f668:	ldr	r0, [fp, #8]
   2f66c:	mvn	r1, #0
   2f670:	udiv	r0, r1, r0
   2f674:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f678:	cmp	r0, r1
   2f67c:	bcs	2f694 <__assert_fail@plt+0x1e190>
   2f680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f684:	ldr	r1, [fp, #8]
   2f688:	mul	r0, r0, r1
   2f68c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f690:	b	2fb48 <__assert_fail@plt+0x1e644>
   2f694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f698:	ldr	r1, [fp, #8]
   2f69c:	mul	r0, r0, r1
   2f6a0:	str	r0, [fp, #-28]	; 0xffffffe4
   2f6a4:	b	2fb54 <__assert_fail@plt+0x1e650>
   2f6a8:	b	2f6ac <__assert_fail@plt+0x1e1a8>
   2f6ac:	ldr	r0, [fp, #8]
   2f6b0:	cmp	r0, #0
   2f6b4:	bge	2f824 <__assert_fail@plt+0x1e320>
   2f6b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6bc:	cmp	r0, #0
   2f6c0:	bge	2f79c <__assert_fail@plt+0x1e298>
   2f6c4:	b	2f6c8 <__assert_fail@plt+0x1e1c4>
   2f6c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6cc:	ldr	r1, [fp, #8]
   2f6d0:	asr	r3, r1, #31
   2f6d4:	mvn	r2, #0
   2f6d8:	mvn	ip, #-2147483648	; 0x80000000
   2f6dc:	str	r0, [fp, #-68]	; 0xffffffbc
   2f6e0:	mov	r0, r2
   2f6e4:	str	r1, [fp, #-72]	; 0xffffffb8
   2f6e8:	mov	r1, ip
   2f6ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f6f0:	bl	36ab8 <__assert_fail@plt+0x255b4>
   2f6f4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2f6f8:	subs	r0, r2, r0
   2f6fc:	rscs	r1, r1, r2, asr #31
   2f700:	blt	2f8ec <__assert_fail@plt+0x1e3e8>
   2f704:	b	2f900 <__assert_fail@plt+0x1e3fc>
   2f708:	b	2f70c <__assert_fail@plt+0x1e208>
   2f70c:	ldr	r0, [pc, #212]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2f710:	ldr	r1, [fp, #8]
   2f714:	cmp	r1, r0
   2f718:	blt	2f730 <__assert_fail@plt+0x1e22c>
   2f71c:	b	2f748 <__assert_fail@plt+0x1e244>
   2f720:	ldr	r0, [fp, #8]
   2f724:	movw	r1, #0
   2f728:	cmp	r1, r0
   2f72c:	bge	2f748 <__assert_fail@plt+0x1e244>
   2f730:	mov	r0, #0
   2f734:	mvn	r1, #0
   2f738:	str	r1, [fp, #-76]	; 0xffffffb4
   2f73c:	str	r0, [fp, #-80]	; 0xffffffb0
   2f740:	b	2f77c <__assert_fail@plt+0x1e278>
   2f744:	svcvc	0x00ffffff
   2f748:	ldr	r0, [fp, #8]
   2f74c:	rsb	r0, r0, #0
   2f750:	asr	r3, r0, #31
   2f754:	mvn	r1, #0
   2f758:	mvn	r2, #-2147483648	; 0x80000000
   2f75c:	str	r0, [fp, #-84]	; 0xffffffac
   2f760:	mov	r0, r1
   2f764:	mov	r1, r2
   2f768:	ldr	r2, [fp, #-84]	; 0xffffffac
   2f76c:	bl	36ab8 <__assert_fail@plt+0x255b4>
   2f770:	str	r0, [fp, #-76]	; 0xffffffb4
   2f774:	str	r1, [fp, #-80]	; 0xffffffb0
   2f778:	b	2f77c <__assert_fail@plt+0x1e278>
   2f77c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2f780:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2f784:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f788:	mvn	r2, r2
   2f78c:	subs	r1, r2, r1
   2f790:	rscs	r0, r0, r2, asr #31
   2f794:	bge	2f8ec <__assert_fail@plt+0x1e3e8>
   2f798:	b	2f900 <__assert_fail@plt+0x1e3fc>
   2f79c:	ldr	r0, [fp, #8]
   2f7a0:	cmn	r0, #1
   2f7a4:	bne	2f7ec <__assert_fail@plt+0x1e2e8>
   2f7a8:	b	2f7ac <__assert_fail@plt+0x1e2a8>
   2f7ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7b0:	mov	r1, #-2147483648	; 0x80000000
   2f7b4:	add	r1, r1, r0, asr #31
   2f7b8:	rsbs	r0, r0, #0
   2f7bc:	rscs	r1, r1, #0
   2f7c0:	blt	2f8ec <__assert_fail@plt+0x1e3e8>
   2f7c4:	b	2f900 <__assert_fail@plt+0x1e3fc>
   2f7c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7cc:	movw	r1, #0
   2f7d0:	cmp	r1, r0
   2f7d4:	bge	2f900 <__assert_fail@plt+0x1e3fc>
   2f7d8:	mov	r0, #0
   2f7dc:	cmp	r0, #0
   2f7e0:	bne	2f8ec <__assert_fail@plt+0x1e3e8>
   2f7e4:	b	2f900 <__assert_fail@plt+0x1e3fc>
   2f7e8:	andhi	r0, r0, r1
   2f7ec:	ldr	r0, [fp, #8]
   2f7f0:	asr	r3, r0, #31
   2f7f4:	mov	r1, #0
   2f7f8:	mov	r2, #-2147483648	; 0x80000000
   2f7fc:	str	r0, [fp, #-88]	; 0xffffffa8
   2f800:	mov	r0, r1
   2f804:	mov	r1, r2
   2f808:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2f80c:	bl	36ab8 <__assert_fail@plt+0x255b4>
   2f810:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f814:	subs	r0, r0, r2
   2f818:	sbcs	r1, r1, r2, asr #31
   2f81c:	blt	2f8ec <__assert_fail@plt+0x1e3e8>
   2f820:	b	2f900 <__assert_fail@plt+0x1e3fc>
   2f824:	ldr	r0, [fp, #8]
   2f828:	cmp	r0, #0
   2f82c:	bne	2f834 <__assert_fail@plt+0x1e330>
   2f830:	b	2f900 <__assert_fail@plt+0x1e3fc>
   2f834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f838:	cmp	r0, #0
   2f83c:	bge	2f8b4 <__assert_fail@plt+0x1e3b0>
   2f840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f844:	cmn	r0, #1
   2f848:	bne	2f87c <__assert_fail@plt+0x1e378>
   2f84c:	b	2f850 <__assert_fail@plt+0x1e34c>
   2f850:	ldr	r0, [fp, #8]
   2f854:	mov	r1, #-2147483648	; 0x80000000
   2f858:	add	r1, r1, r0, asr #31
   2f85c:	rsbs	r0, r0, #0
   2f860:	rscs	r1, r1, #0
   2f864:	blt	2f8ec <__assert_fail@plt+0x1e3e8>
   2f868:	b	2f900 <__assert_fail@plt+0x1e3fc>
   2f86c:	mov	r0, #0
   2f870:	cmp	r0, #0
   2f874:	bne	2f8ec <__assert_fail@plt+0x1e3e8>
   2f878:	b	2f900 <__assert_fail@plt+0x1e3fc>
   2f87c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f880:	asr	r3, r0, #31
   2f884:	mov	r1, #0
   2f888:	mov	r2, #-2147483648	; 0x80000000
   2f88c:	str	r0, [fp, #-92]	; 0xffffffa4
   2f890:	mov	r0, r1
   2f894:	mov	r1, r2
   2f898:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2f89c:	bl	36ab8 <__assert_fail@plt+0x255b4>
   2f8a0:	ldr	r2, [fp, #8]
   2f8a4:	subs	r0, r0, r2
   2f8a8:	sbcs	r1, r1, r2, asr #31
   2f8ac:	blt	2f8ec <__assert_fail@plt+0x1e3e8>
   2f8b0:	b	2f900 <__assert_fail@plt+0x1e3fc>
   2f8b4:	ldr	r0, [fp, #8]
   2f8b8:	asr	r3, r0, #31
   2f8bc:	mvn	r1, #0
   2f8c0:	mvn	r2, #-2147483648	; 0x80000000
   2f8c4:	str	r0, [fp, #-96]	; 0xffffffa0
   2f8c8:	mov	r0, r1
   2f8cc:	mov	r1, r2
   2f8d0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2f8d4:	bl	36ab8 <__assert_fail@plt+0x255b4>
   2f8d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f8dc:	subs	r0, r0, r2
   2f8e0:	sbcs	r1, r1, r2, asr #31
   2f8e4:	bge	2f900 <__assert_fail@plt+0x1e3fc>
   2f8e8:	b	2f8ec <__assert_fail@plt+0x1e3e8>
   2f8ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8f0:	ldr	r1, [fp, #8]
   2f8f4:	mul	r0, r0, r1
   2f8f8:	str	r0, [fp, #-28]	; 0xffffffe4
   2f8fc:	b	2fb48 <__assert_fail@plt+0x1e644>
   2f900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f904:	ldr	r1, [fp, #8]
   2f908:	mul	r0, r0, r1
   2f90c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f910:	b	2fb54 <__assert_fail@plt+0x1e650>
   2f914:	ldr	r0, [fp, #8]
   2f918:	cmp	r0, #0
   2f91c:	bge	2fa6c <__assert_fail@plt+0x1e568>
   2f920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f924:	cmp	r0, #0
   2f928:	bge	2f9f4 <__assert_fail@plt+0x1e4f0>
   2f92c:	b	2f96c <__assert_fail@plt+0x1e468>
   2f930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f934:	ldr	r1, [fp, #8]
   2f938:	asr	r3, r1, #31
   2f93c:	mvn	r2, #0
   2f940:	str	r0, [fp, #-100]	; 0xffffff9c
   2f944:	mov	r0, r2
   2f948:	str	r1, [fp, #-104]	; 0xffffff98
   2f94c:	mov	r1, r2
   2f950:	ldr	r2, [fp, #-104]	; 0xffffff98
   2f954:	bl	36b8c <__assert_fail@plt+0x25688>
   2f958:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2f95c:	subs	r0, r2, r0
   2f960:	rscs	r1, r1, r2, asr #31
   2f964:	bcc	2fb20 <__assert_fail@plt+0x1e61c>
   2f968:	b	2fb34 <__assert_fail@plt+0x1e630>
   2f96c:	b	2f970 <__assert_fail@plt+0x1e46c>
   2f970:	ldr	r0, [pc, #-400]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2f974:	ldr	r1, [fp, #8]
   2f978:	cmp	r1, r0
   2f97c:	blt	2f994 <__assert_fail@plt+0x1e490>
   2f980:	b	2f9a8 <__assert_fail@plt+0x1e4a4>
   2f984:	ldr	r0, [fp, #8]
   2f988:	movw	r1, #0
   2f98c:	cmp	r1, r0
   2f990:	bge	2f9a8 <__assert_fail@plt+0x1e4a4>
   2f994:	mov	r0, #1
   2f998:	mvn	r1, #0
   2f99c:	str	r1, [sp, #108]	; 0x6c
   2f9a0:	str	r0, [sp, #104]	; 0x68
   2f9a4:	b	2f9d4 <__assert_fail@plt+0x1e4d0>
   2f9a8:	ldr	r0, [fp, #8]
   2f9ac:	rsb	r0, r0, #0
   2f9b0:	asr	r3, r0, #31
   2f9b4:	mvn	r1, #0
   2f9b8:	str	r0, [sp, #100]	; 0x64
   2f9bc:	mov	r0, r1
   2f9c0:	ldr	r2, [sp, #100]	; 0x64
   2f9c4:	bl	36b8c <__assert_fail@plt+0x25688>
   2f9c8:	str	r0, [sp, #108]	; 0x6c
   2f9cc:	str	r1, [sp, #104]	; 0x68
   2f9d0:	b	2f9d4 <__assert_fail@plt+0x1e4d0>
   2f9d4:	ldr	r0, [sp, #104]	; 0x68
   2f9d8:	ldr	r1, [sp, #108]	; 0x6c
   2f9dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f9e0:	mvn	r2, r2
   2f9e4:	subs	r1, r2, r1
   2f9e8:	rscs	r0, r0, r2, asr #31
   2f9ec:	bcs	2fb20 <__assert_fail@plt+0x1e61c>
   2f9f0:	b	2fb34 <__assert_fail@plt+0x1e630>
   2f9f4:	b	2f9f8 <__assert_fail@plt+0x1e4f4>
   2f9f8:	b	2fa50 <__assert_fail@plt+0x1e54c>
   2f9fc:	b	2fa50 <__assert_fail@plt+0x1e54c>
   2fa00:	ldr	r0, [fp, #8]
   2fa04:	cmn	r0, #1
   2fa08:	bne	2fa50 <__assert_fail@plt+0x1e54c>
   2fa0c:	b	2fa10 <__assert_fail@plt+0x1e50c>
   2fa10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa14:	add	r0, r0, #0
   2fa18:	movw	r1, #0
   2fa1c:	cmp	r1, r0
   2fa20:	blt	2fb20 <__assert_fail@plt+0x1e61c>
   2fa24:	b	2fb34 <__assert_fail@plt+0x1e630>
   2fa28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa2c:	movw	r1, #0
   2fa30:	cmp	r1, r0
   2fa34:	bge	2fb34 <__assert_fail@plt+0x1e630>
   2fa38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa3c:	sub	r0, r0, #1
   2fa40:	mvn	r1, #0
   2fa44:	cmp	r1, r0
   2fa48:	blt	2fb20 <__assert_fail@plt+0x1e61c>
   2fa4c:	b	2fb34 <__assert_fail@plt+0x1e630>
   2fa50:	ldr	r0, [fp, #8]
   2fa54:	movw	r1, #0
   2fa58:	sdiv	r0, r1, r0
   2fa5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fa60:	cmp	r0, r1
   2fa64:	blt	2fb20 <__assert_fail@plt+0x1e61c>
   2fa68:	b	2fb34 <__assert_fail@plt+0x1e630>
   2fa6c:	ldr	r0, [fp, #8]
   2fa70:	cmp	r0, #0
   2fa74:	bne	2fa7c <__assert_fail@plt+0x1e578>
   2fa78:	b	2fb34 <__assert_fail@plt+0x1e630>
   2fa7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa80:	cmp	r0, #0
   2fa84:	bge	2faf0 <__assert_fail@plt+0x1e5ec>
   2fa88:	b	2fa8c <__assert_fail@plt+0x1e588>
   2fa8c:	b	2fad4 <__assert_fail@plt+0x1e5d0>
   2fa90:	b	2fad4 <__assert_fail@plt+0x1e5d0>
   2fa94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa98:	cmn	r0, #1
   2fa9c:	bne	2fad4 <__assert_fail@plt+0x1e5d0>
   2faa0:	b	2faa4 <__assert_fail@plt+0x1e5a0>
   2faa4:	ldr	r0, [fp, #8]
   2faa8:	add	r0, r0, #0
   2faac:	movw	r1, #0
   2fab0:	cmp	r1, r0
   2fab4:	blt	2fb20 <__assert_fail@plt+0x1e61c>
   2fab8:	b	2fb34 <__assert_fail@plt+0x1e630>
   2fabc:	ldr	r0, [fp, #8]
   2fac0:	sub	r0, r0, #1
   2fac4:	mvn	r1, #0
   2fac8:	cmp	r1, r0
   2facc:	blt	2fb20 <__assert_fail@plt+0x1e61c>
   2fad0:	b	2fb34 <__assert_fail@plt+0x1e630>
   2fad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fad8:	movw	r1, #0
   2fadc:	sdiv	r0, r1, r0
   2fae0:	ldr	r1, [fp, #8]
   2fae4:	cmp	r0, r1
   2fae8:	blt	2fb20 <__assert_fail@plt+0x1e61c>
   2faec:	b	2fb34 <__assert_fail@plt+0x1e630>
   2faf0:	ldr	r0, [fp, #8]
   2faf4:	asr	r3, r0, #31
   2faf8:	mvn	r1, #0
   2fafc:	str	r0, [sp, #96]	; 0x60
   2fb00:	mov	r0, r1
   2fb04:	ldr	r2, [sp, #96]	; 0x60
   2fb08:	bl	36b8c <__assert_fail@plt+0x25688>
   2fb0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fb10:	subs	r0, r0, r2
   2fb14:	sbcs	r1, r1, r2, asr #31
   2fb18:	bcs	2fb34 <__assert_fail@plt+0x1e630>
   2fb1c:	b	2fb20 <__assert_fail@plt+0x1e61c>
   2fb20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb24:	ldr	r1, [fp, #8]
   2fb28:	mul	r0, r0, r1
   2fb2c:	str	r0, [fp, #-28]	; 0xffffffe4
   2fb30:	b	2fb48 <__assert_fail@plt+0x1e644>
   2fb34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb38:	ldr	r1, [fp, #8]
   2fb3c:	mul	r0, r0, r1
   2fb40:	str	r0, [fp, #-28]	; 0xffffffe4
   2fb44:	b	2fb54 <__assert_fail@plt+0x1e650>
   2fb48:	ldr	r0, [pc, #-1036]	; 2f744 <__assert_fail@plt+0x1e240>
   2fb4c:	str	r0, [sp, #92]	; 0x5c
   2fb50:	b	2fb74 <__assert_fail@plt+0x1e670>
   2fb54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2fb58:	cmp	r0, #64	; 0x40
   2fb5c:	movw	r0, #0
   2fb60:	movlt	r0, #1
   2fb64:	tst	r0, #1
   2fb68:	movw	r0, #64	; 0x40
   2fb6c:	moveq	r0, #0
   2fb70:	str	r0, [sp, #92]	; 0x5c
   2fb74:	ldr	r0, [sp, #92]	; 0x5c
   2fb78:	str	r0, [fp, #-32]	; 0xffffffe0
   2fb7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2fb80:	cmp	r0, #0
   2fb84:	beq	2fbb4 <__assert_fail@plt+0x1e6b0>
   2fb88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2fb8c:	ldr	r1, [fp, #8]
   2fb90:	sdiv	r0, r0, r1
   2fb94:	str	r0, [fp, #-24]	; 0xffffffe8
   2fb98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2fb9c:	mov	r1, r0
   2fba0:	ldr	r2, [fp, #8]
   2fba4:	sdiv	r3, r0, r2
   2fba8:	mls	r0, r3, r2, r0
   2fbac:	sub	r0, r1, r0
   2fbb0:	str	r0, [fp, #-28]	; 0xffffffe4
   2fbb4:	ldr	r0, [fp, #-4]
   2fbb8:	movw	r1, #0
   2fbbc:	cmp	r0, r1
   2fbc0:	bne	2fbd0 <__assert_fail@plt+0x1e6cc>
   2fbc4:	ldr	r0, [fp, #-8]
   2fbc8:	movw	r1, #0
   2fbcc:	str	r1, [r0]
   2fbd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2fbd8:	sub	r0, r0, r1
   2fbdc:	ldr	r1, [fp, #-12]
   2fbe0:	cmp	r0, r1
   2fbe4:	bge	30fd0 <__assert_fail@plt+0x1facc>
   2fbe8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2fbec:	ldr	r1, [fp, #-12]
   2fbf0:	add	r1, r0, r1
   2fbf4:	mov	r2, #1
   2fbf8:	cmp	r1, r0
   2fbfc:	movwvc	r2, #0
   2fc00:	str	r1, [fp, #-24]	; 0xffffffe8
   2fc04:	tst	r2, #1
   2fc08:	bne	30fcc <__assert_fail@plt+0x1fac8>
   2fc0c:	ldr	r0, [fp, #-16]
   2fc10:	movw	r1, #0
   2fc14:	cmp	r1, r0
   2fc18:	bgt	2fc2c <__assert_fail@plt+0x1e728>
   2fc1c:	ldr	r0, [fp, #-16]
   2fc20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fc24:	cmp	r0, r1
   2fc28:	blt	30fcc <__assert_fail@plt+0x1fac8>
   2fc2c:	b	30008 <__assert_fail@plt+0x1eb04>
   2fc30:			; <UNDEFINED> instruction: 0xffff8000
   2fc34:	b	2fc38 <__assert_fail@plt+0x1e734>
   2fc38:	ldr	r0, [fp, #8]
   2fc3c:	cmp	r0, #0
   2fc40:	bge	2fd54 <__assert_fail@plt+0x1e850>
   2fc44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc48:	cmp	r0, #0
   2fc4c:	bge	2fcd8 <__assert_fail@plt+0x1e7d4>
   2fc50:	b	2fc54 <__assert_fail@plt+0x1e750>
   2fc54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc58:	ldr	r1, [fp, #8]
   2fc5c:	movw	r2, #127	; 0x7f
   2fc60:	sdiv	r1, r2, r1
   2fc64:	cmp	r0, r1
   2fc68:	blt	2fdf4 <__assert_fail@plt+0x1e8f0>
   2fc6c:	b	2fe0c <__assert_fail@plt+0x1e908>
   2fc70:	b	2fc74 <__assert_fail@plt+0x1e770>
   2fc74:	ldr	r0, [pc, #-1172]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2fc78:	ldr	r1, [fp, #8]
   2fc7c:	cmp	r1, r0
   2fc80:	blt	2fc98 <__assert_fail@plt+0x1e794>
   2fc84:	b	2fca4 <__assert_fail@plt+0x1e7a0>
   2fc88:	ldr	r0, [fp, #8]
   2fc8c:	movw	r1, #0
   2fc90:	cmp	r1, r0
   2fc94:	bge	2fca4 <__assert_fail@plt+0x1e7a0>
   2fc98:	movw	r0, #0
   2fc9c:	str	r0, [sp, #88]	; 0x58
   2fca0:	b	2fcbc <__assert_fail@plt+0x1e7b8>
   2fca4:	ldr	r0, [fp, #8]
   2fca8:	movw	r1, #0
   2fcac:	sub	r0, r1, r0
   2fcb0:	movw	r1, #127	; 0x7f
   2fcb4:	sdiv	r0, r1, r0
   2fcb8:	str	r0, [sp, #88]	; 0x58
   2fcbc:	ldr	r0, [sp, #88]	; 0x58
   2fcc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fcc4:	mvn	r2, #0
   2fcc8:	sub	r1, r2, r1
   2fccc:	cmp	r0, r1
   2fcd0:	ble	2fdf4 <__assert_fail@plt+0x1e8f0>
   2fcd4:	b	2fe0c <__assert_fail@plt+0x1e908>
   2fcd8:	b	2fcdc <__assert_fail@plt+0x1e7d8>
   2fcdc:	b	2fd38 <__assert_fail@plt+0x1e834>
   2fce0:	b	2fd38 <__assert_fail@plt+0x1e834>
   2fce4:	ldr	r0, [fp, #8]
   2fce8:	cmn	r0, #1
   2fcec:	bne	2fd38 <__assert_fail@plt+0x1e834>
   2fcf0:	b	2fcf4 <__assert_fail@plt+0x1e7f0>
   2fcf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fcf8:	mvn	r1, #127	; 0x7f
   2fcfc:	add	r0, r0, r1
   2fd00:	movw	r1, #0
   2fd04:	cmp	r1, r0
   2fd08:	blt	2fdf4 <__assert_fail@plt+0x1e8f0>
   2fd0c:	b	2fe0c <__assert_fail@plt+0x1e908>
   2fd10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd14:	movw	r1, #0
   2fd18:	cmp	r1, r0
   2fd1c:	bge	2fe0c <__assert_fail@plt+0x1e908>
   2fd20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd24:	sub	r0, r0, #1
   2fd28:	movw	r1, #127	; 0x7f
   2fd2c:	cmp	r1, r0
   2fd30:	blt	2fdf4 <__assert_fail@plt+0x1e8f0>
   2fd34:	b	2fe0c <__assert_fail@plt+0x1e908>
   2fd38:	ldr	r0, [fp, #8]
   2fd3c:	mvn	r1, #127	; 0x7f
   2fd40:	sdiv	r0, r1, r0
   2fd44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fd48:	cmp	r0, r1
   2fd4c:	blt	2fdf4 <__assert_fail@plt+0x1e8f0>
   2fd50:	b	2fe0c <__assert_fail@plt+0x1e908>
   2fd54:	ldr	r0, [fp, #8]
   2fd58:	cmp	r0, #0
   2fd5c:	bne	2fd64 <__assert_fail@plt+0x1e860>
   2fd60:	b	2fe0c <__assert_fail@plt+0x1e908>
   2fd64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd68:	cmp	r0, #0
   2fd6c:	bge	2fddc <__assert_fail@plt+0x1e8d8>
   2fd70:	b	2fd74 <__assert_fail@plt+0x1e870>
   2fd74:	b	2fdc0 <__assert_fail@plt+0x1e8bc>
   2fd78:	b	2fdc0 <__assert_fail@plt+0x1e8bc>
   2fd7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd80:	cmn	r0, #1
   2fd84:	bne	2fdc0 <__assert_fail@plt+0x1e8bc>
   2fd88:	b	2fd8c <__assert_fail@plt+0x1e888>
   2fd8c:	ldr	r0, [fp, #8]
   2fd90:	mvn	r1, #127	; 0x7f
   2fd94:	add	r0, r0, r1
   2fd98:	movw	r1, #0
   2fd9c:	cmp	r1, r0
   2fda0:	blt	2fdf4 <__assert_fail@plt+0x1e8f0>
   2fda4:	b	2fe0c <__assert_fail@plt+0x1e908>
   2fda8:	ldr	r0, [fp, #8]
   2fdac:	sub	r0, r0, #1
   2fdb0:	movw	r1, #127	; 0x7f
   2fdb4:	cmp	r1, r0
   2fdb8:	blt	2fdf4 <__assert_fail@plt+0x1e8f0>
   2fdbc:	b	2fe0c <__assert_fail@plt+0x1e908>
   2fdc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fdc4:	mvn	r1, #127	; 0x7f
   2fdc8:	sdiv	r0, r1, r0
   2fdcc:	ldr	r1, [fp, #8]
   2fdd0:	cmp	r0, r1
   2fdd4:	blt	2fdf4 <__assert_fail@plt+0x1e8f0>
   2fdd8:	b	2fe0c <__assert_fail@plt+0x1e908>
   2fddc:	ldr	r0, [fp, #8]
   2fde0:	movw	r1, #127	; 0x7f
   2fde4:	sdiv	r0, r1, r0
   2fde8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fdec:	cmp	r0, r1
   2fdf0:	bge	2fe0c <__assert_fail@plt+0x1e908>
   2fdf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fdf8:	ldr	r1, [fp, #8]
   2fdfc:	mul	r0, r0, r1
   2fe00:	sxtb	r0, r0
   2fe04:	str	r0, [fp, #-28]	; 0xffffffe4
   2fe08:	b	30fcc <__assert_fail@plt+0x1fac8>
   2fe0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fe10:	ldr	r1, [fp, #8]
   2fe14:	mul	r0, r0, r1
   2fe18:	sxtb	r0, r0
   2fe1c:	str	r0, [fp, #-28]	; 0xffffffe4
   2fe20:	b	30fd0 <__assert_fail@plt+0x1facc>
   2fe24:	ldr	r0, [fp, #8]
   2fe28:	cmp	r0, #0
   2fe2c:	bge	2ff3c <__assert_fail@plt+0x1ea38>
   2fe30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fe34:	cmp	r0, #0
   2fe38:	bge	2fec4 <__assert_fail@plt+0x1e9c0>
   2fe3c:	b	2fe40 <__assert_fail@plt+0x1e93c>
   2fe40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fe44:	ldr	r1, [fp, #8]
   2fe48:	movw	r2, #255	; 0xff
   2fe4c:	sdiv	r1, r2, r1
   2fe50:	cmp	r0, r1
   2fe54:	blt	2ffd8 <__assert_fail@plt+0x1ead4>
   2fe58:	b	2fff0 <__assert_fail@plt+0x1eaec>
   2fe5c:	b	2fe60 <__assert_fail@plt+0x1e95c>
   2fe60:	ldr	r0, [pc, #-1664]	; 2f7e8 <__assert_fail@plt+0x1e2e4>
   2fe64:	ldr	r1, [fp, #8]
   2fe68:	cmp	r1, r0
   2fe6c:	blt	2fe84 <__assert_fail@plt+0x1e980>
   2fe70:	b	2fe90 <__assert_fail@plt+0x1e98c>
   2fe74:	ldr	r0, [fp, #8]
   2fe78:	movw	r1, #0
   2fe7c:	cmp	r1, r0
   2fe80:	bge	2fe90 <__assert_fail@plt+0x1e98c>
   2fe84:	movw	r0, #0
   2fe88:	str	r0, [sp, #84]	; 0x54
   2fe8c:	b	2fea8 <__assert_fail@plt+0x1e9a4>
   2fe90:	ldr	r0, [fp, #8]
   2fe94:	movw	r1, #0
   2fe98:	sub	r0, r1, r0
   2fe9c:	movw	r1, #255	; 0xff
   2fea0:	sdiv	r0, r1, r0
   2fea4:	str	r0, [sp, #84]	; 0x54
   2fea8:	ldr	r0, [sp, #84]	; 0x54
   2feac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2feb0:	mvn	r2, #0
   2feb4:	sub	r1, r2, r1
   2feb8:	cmp	r0, r1
   2febc:	ble	2ffd8 <__assert_fail@plt+0x1ead4>
   2fec0:	b	2fff0 <__assert_fail@plt+0x1eaec>
   2fec4:	b	2fec8 <__assert_fail@plt+0x1e9c4>
   2fec8:	b	2ff20 <__assert_fail@plt+0x1ea1c>
   2fecc:	b	2ff20 <__assert_fail@plt+0x1ea1c>
   2fed0:	ldr	r0, [fp, #8]
   2fed4:	cmn	r0, #1
   2fed8:	bne	2ff20 <__assert_fail@plt+0x1ea1c>
   2fedc:	b	2fee0 <__assert_fail@plt+0x1e9dc>
   2fee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fee4:	add	r0, r0, #0
   2fee8:	movw	r1, #0
   2feec:	cmp	r1, r0
   2fef0:	blt	2ffd8 <__assert_fail@plt+0x1ead4>
   2fef4:	b	2fff0 <__assert_fail@plt+0x1eaec>
   2fef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fefc:	movw	r1, #0
   2ff00:	cmp	r1, r0
   2ff04:	bge	2fff0 <__assert_fail@plt+0x1eaec>
   2ff08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff0c:	sub	r0, r0, #1
   2ff10:	mvn	r1, #0
   2ff14:	cmp	r1, r0
   2ff18:	blt	2ffd8 <__assert_fail@plt+0x1ead4>
   2ff1c:	b	2fff0 <__assert_fail@plt+0x1eaec>
   2ff20:	ldr	r0, [fp, #8]
   2ff24:	movw	r1, #0
   2ff28:	sdiv	r0, r1, r0
   2ff2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ff30:	cmp	r0, r1
   2ff34:	blt	2ffd8 <__assert_fail@plt+0x1ead4>
   2ff38:	b	2fff0 <__assert_fail@plt+0x1eaec>
   2ff3c:	ldr	r0, [fp, #8]
   2ff40:	cmp	r0, #0
   2ff44:	bne	2ff4c <__assert_fail@plt+0x1ea48>
   2ff48:	b	2fff0 <__assert_fail@plt+0x1eaec>
   2ff4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff50:	cmp	r0, #0
   2ff54:	bge	2ffc0 <__assert_fail@plt+0x1eabc>
   2ff58:	b	2ff5c <__assert_fail@plt+0x1ea58>
   2ff5c:	b	2ffa4 <__assert_fail@plt+0x1eaa0>
   2ff60:	b	2ffa4 <__assert_fail@plt+0x1eaa0>
   2ff64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff68:	cmn	r0, #1
   2ff6c:	bne	2ffa4 <__assert_fail@plt+0x1eaa0>
   2ff70:	b	2ff74 <__assert_fail@plt+0x1ea70>
   2ff74:	ldr	r0, [fp, #8]
   2ff78:	add	r0, r0, #0
   2ff7c:	movw	r1, #0
   2ff80:	cmp	r1, r0
   2ff84:	blt	2ffd8 <__assert_fail@plt+0x1ead4>
   2ff88:	b	2fff0 <__assert_fail@plt+0x1eaec>
   2ff8c:	ldr	r0, [fp, #8]
   2ff90:	sub	r0, r0, #1
   2ff94:	mvn	r1, #0
   2ff98:	cmp	r1, r0
   2ff9c:	blt	2ffd8 <__assert_fail@plt+0x1ead4>
   2ffa0:	b	2fff0 <__assert_fail@plt+0x1eaec>
   2ffa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ffa8:	movw	r1, #0
   2ffac:	sdiv	r0, r1, r0
   2ffb0:	ldr	r1, [fp, #8]
   2ffb4:	cmp	r0, r1
   2ffb8:	blt	2ffd8 <__assert_fail@plt+0x1ead4>
   2ffbc:	b	2fff0 <__assert_fail@plt+0x1eaec>
   2ffc0:	ldr	r0, [fp, #8]
   2ffc4:	movw	r1, #255	; 0xff
   2ffc8:	sdiv	r0, r1, r0
   2ffcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ffd0:	cmp	r0, r1
   2ffd4:	bge	2fff0 <__assert_fail@plt+0x1eaec>
   2ffd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ffdc:	ldr	r1, [fp, #8]
   2ffe0:	mul	r0, r0, r1
   2ffe4:	and	r0, r0, #255	; 0xff
   2ffe8:	str	r0, [fp, #-28]	; 0xffffffe4
   2ffec:	b	30fcc <__assert_fail@plt+0x1fac8>
   2fff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fff4:	ldr	r1, [fp, #8]
   2fff8:	mul	r0, r0, r1
   2fffc:	and	r0, r0, #255	; 0xff
   30000:	str	r0, [fp, #-28]	; 0xffffffe4
   30004:	b	30fd0 <__assert_fail@plt+0x1facc>
   30008:	b	303e4 <__assert_fail@plt+0x1eee0>
   3000c:	b	30010 <__assert_fail@plt+0x1eb0c>
   30010:	ldr	r0, [fp, #8]
   30014:	cmp	r0, #0
   30018:	bge	30130 <__assert_fail@plt+0x1ec2c>
   3001c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30020:	cmp	r0, #0
   30024:	bge	300b4 <__assert_fail@plt+0x1ebb0>
   30028:	b	3002c <__assert_fail@plt+0x1eb28>
   3002c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30030:	ldr	r1, [fp, #8]
   30034:	movw	r2, #32767	; 0x7fff
   30038:	sdiv	r1, r2, r1
   3003c:	cmp	r0, r1
   30040:	blt	301d0 <__assert_fail@plt+0x1eccc>
   30044:	b	301e8 <__assert_fail@plt+0x1ece4>
   30048:	andhi	r0, r0, r0
   3004c:	b	30050 <__assert_fail@plt+0x1eb4c>
   30050:	ldr	r0, [pc, #4004]	; 30ffc <__assert_fail@plt+0x1faf8>
   30054:	ldr	r1, [fp, #8]
   30058:	cmp	r1, r0
   3005c:	blt	30074 <__assert_fail@plt+0x1eb70>
   30060:	b	30080 <__assert_fail@plt+0x1eb7c>
   30064:	ldr	r0, [fp, #8]
   30068:	movw	r1, #0
   3006c:	cmp	r1, r0
   30070:	bge	30080 <__assert_fail@plt+0x1eb7c>
   30074:	movw	r0, #0
   30078:	str	r0, [sp, #80]	; 0x50
   3007c:	b	30098 <__assert_fail@plt+0x1eb94>
   30080:	ldr	r0, [fp, #8]
   30084:	movw	r1, #0
   30088:	sub	r0, r1, r0
   3008c:	movw	r1, #32767	; 0x7fff
   30090:	sdiv	r0, r1, r0
   30094:	str	r0, [sp, #80]	; 0x50
   30098:	ldr	r0, [sp, #80]	; 0x50
   3009c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   300a0:	mvn	r2, #0
   300a4:	sub	r1, r2, r1
   300a8:	cmp	r0, r1
   300ac:	ble	301d0 <__assert_fail@plt+0x1eccc>
   300b0:	b	301e8 <__assert_fail@plt+0x1ece4>
   300b4:	b	300b8 <__assert_fail@plt+0x1ebb4>
   300b8:	b	30114 <__assert_fail@plt+0x1ec10>
   300bc:	b	30114 <__assert_fail@plt+0x1ec10>
   300c0:	ldr	r0, [fp, #8]
   300c4:	cmn	r0, #1
   300c8:	bne	30114 <__assert_fail@plt+0x1ec10>
   300cc:	b	300d0 <__assert_fail@plt+0x1ebcc>
   300d0:	ldr	r0, [pc, #3884]	; 31004 <__assert_fail@plt+0x1fb00>
   300d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   300d8:	add	r0, r1, r0
   300dc:	movw	r1, #0
   300e0:	cmp	r1, r0
   300e4:	blt	301d0 <__assert_fail@plt+0x1eccc>
   300e8:	b	301e8 <__assert_fail@plt+0x1ece4>
   300ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   300f0:	movw	r1, #0
   300f4:	cmp	r1, r0
   300f8:	bge	301e8 <__assert_fail@plt+0x1ece4>
   300fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30100:	sub	r0, r0, #1
   30104:	movw	r1, #32767	; 0x7fff
   30108:	cmp	r1, r0
   3010c:	blt	301d0 <__assert_fail@plt+0x1eccc>
   30110:	b	301e8 <__assert_fail@plt+0x1ece4>
   30114:	ldr	r0, [pc, #3816]	; 31004 <__assert_fail@plt+0x1fb00>
   30118:	ldr	r1, [fp, #8]
   3011c:	sdiv	r0, r0, r1
   30120:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30124:	cmp	r0, r1
   30128:	blt	301d0 <__assert_fail@plt+0x1eccc>
   3012c:	b	301e8 <__assert_fail@plt+0x1ece4>
   30130:	ldr	r0, [fp, #8]
   30134:	cmp	r0, #0
   30138:	bne	30140 <__assert_fail@plt+0x1ec3c>
   3013c:	b	301e8 <__assert_fail@plt+0x1ece4>
   30140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30144:	cmp	r0, #0
   30148:	bge	301b8 <__assert_fail@plt+0x1ecb4>
   3014c:	b	30150 <__assert_fail@plt+0x1ec4c>
   30150:	b	3019c <__assert_fail@plt+0x1ec98>
   30154:	b	3019c <__assert_fail@plt+0x1ec98>
   30158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3015c:	cmn	r0, #1
   30160:	bne	3019c <__assert_fail@plt+0x1ec98>
   30164:	b	30168 <__assert_fail@plt+0x1ec64>
   30168:	ldr	r0, [pc, #3732]	; 31004 <__assert_fail@plt+0x1fb00>
   3016c:	ldr	r1, [fp, #8]
   30170:	add	r0, r1, r0
   30174:	movw	r1, #0
   30178:	cmp	r1, r0
   3017c:	blt	301d0 <__assert_fail@plt+0x1eccc>
   30180:	b	301e8 <__assert_fail@plt+0x1ece4>
   30184:	ldr	r0, [fp, #8]
   30188:	sub	r0, r0, #1
   3018c:	movw	r1, #32767	; 0x7fff
   30190:	cmp	r1, r0
   30194:	blt	301d0 <__assert_fail@plt+0x1eccc>
   30198:	b	301e8 <__assert_fail@plt+0x1ece4>
   3019c:	ldr	r0, [pc, #3680]	; 31004 <__assert_fail@plt+0x1fb00>
   301a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   301a4:	sdiv	r0, r0, r1
   301a8:	ldr	r1, [fp, #8]
   301ac:	cmp	r0, r1
   301b0:	blt	301d0 <__assert_fail@plt+0x1eccc>
   301b4:	b	301e8 <__assert_fail@plt+0x1ece4>
   301b8:	ldr	r0, [fp, #8]
   301bc:	movw	r1, #32767	; 0x7fff
   301c0:	sdiv	r0, r1, r0
   301c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   301c8:	cmp	r0, r1
   301cc:	bge	301e8 <__assert_fail@plt+0x1ece4>
   301d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   301d4:	ldr	r1, [fp, #8]
   301d8:	mul	r0, r0, r1
   301dc:	sxth	r0, r0
   301e0:	str	r0, [fp, #-28]	; 0xffffffe4
   301e4:	b	30fcc <__assert_fail@plt+0x1fac8>
   301e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   301ec:	ldr	r1, [fp, #8]
   301f0:	mul	r0, r0, r1
   301f4:	sxth	r0, r0
   301f8:	str	r0, [fp, #-28]	; 0xffffffe4
   301fc:	b	30fd0 <__assert_fail@plt+0x1facc>
   30200:	ldr	r0, [fp, #8]
   30204:	cmp	r0, #0
   30208:	bge	30318 <__assert_fail@plt+0x1ee14>
   3020c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30210:	cmp	r0, #0
   30214:	bge	302a0 <__assert_fail@plt+0x1ed9c>
   30218:	b	3021c <__assert_fail@plt+0x1ed18>
   3021c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30220:	ldr	r1, [fp, #8]
   30224:	movw	r2, #65535	; 0xffff
   30228:	sdiv	r1, r2, r1
   3022c:	cmp	r0, r1
   30230:	blt	303b4 <__assert_fail@plt+0x1eeb0>
   30234:	b	303cc <__assert_fail@plt+0x1eec8>
   30238:	b	3023c <__assert_fail@plt+0x1ed38>
   3023c:	ldr	r0, [pc, #3512]	; 30ffc <__assert_fail@plt+0x1faf8>
   30240:	ldr	r1, [fp, #8]
   30244:	cmp	r1, r0
   30248:	blt	30260 <__assert_fail@plt+0x1ed5c>
   3024c:	b	3026c <__assert_fail@plt+0x1ed68>
   30250:	ldr	r0, [fp, #8]
   30254:	movw	r1, #0
   30258:	cmp	r1, r0
   3025c:	bge	3026c <__assert_fail@plt+0x1ed68>
   30260:	movw	r0, #0
   30264:	str	r0, [sp, #76]	; 0x4c
   30268:	b	30284 <__assert_fail@plt+0x1ed80>
   3026c:	ldr	r0, [fp, #8]
   30270:	movw	r1, #0
   30274:	sub	r0, r1, r0
   30278:	movw	r1, #65535	; 0xffff
   3027c:	sdiv	r0, r1, r0
   30280:	str	r0, [sp, #76]	; 0x4c
   30284:	ldr	r0, [sp, #76]	; 0x4c
   30288:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3028c:	mvn	r2, #0
   30290:	sub	r1, r2, r1
   30294:	cmp	r0, r1
   30298:	ble	303b4 <__assert_fail@plt+0x1eeb0>
   3029c:	b	303cc <__assert_fail@plt+0x1eec8>
   302a0:	b	302a4 <__assert_fail@plt+0x1eda0>
   302a4:	b	302fc <__assert_fail@plt+0x1edf8>
   302a8:	b	302fc <__assert_fail@plt+0x1edf8>
   302ac:	ldr	r0, [fp, #8]
   302b0:	cmn	r0, #1
   302b4:	bne	302fc <__assert_fail@plt+0x1edf8>
   302b8:	b	302bc <__assert_fail@plt+0x1edb8>
   302bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   302c0:	add	r0, r0, #0
   302c4:	movw	r1, #0
   302c8:	cmp	r1, r0
   302cc:	blt	303b4 <__assert_fail@plt+0x1eeb0>
   302d0:	b	303cc <__assert_fail@plt+0x1eec8>
   302d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   302d8:	movw	r1, #0
   302dc:	cmp	r1, r0
   302e0:	bge	303cc <__assert_fail@plt+0x1eec8>
   302e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   302e8:	sub	r0, r0, #1
   302ec:	mvn	r1, #0
   302f0:	cmp	r1, r0
   302f4:	blt	303b4 <__assert_fail@plt+0x1eeb0>
   302f8:	b	303cc <__assert_fail@plt+0x1eec8>
   302fc:	ldr	r0, [fp, #8]
   30300:	movw	r1, #0
   30304:	sdiv	r0, r1, r0
   30308:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3030c:	cmp	r0, r1
   30310:	blt	303b4 <__assert_fail@plt+0x1eeb0>
   30314:	b	303cc <__assert_fail@plt+0x1eec8>
   30318:	ldr	r0, [fp, #8]
   3031c:	cmp	r0, #0
   30320:	bne	30328 <__assert_fail@plt+0x1ee24>
   30324:	b	303cc <__assert_fail@plt+0x1eec8>
   30328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3032c:	cmp	r0, #0
   30330:	bge	3039c <__assert_fail@plt+0x1ee98>
   30334:	b	30338 <__assert_fail@plt+0x1ee34>
   30338:	b	30380 <__assert_fail@plt+0x1ee7c>
   3033c:	b	30380 <__assert_fail@plt+0x1ee7c>
   30340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30344:	cmn	r0, #1
   30348:	bne	30380 <__assert_fail@plt+0x1ee7c>
   3034c:	b	30350 <__assert_fail@plt+0x1ee4c>
   30350:	ldr	r0, [fp, #8]
   30354:	add	r0, r0, #0
   30358:	movw	r1, #0
   3035c:	cmp	r1, r0
   30360:	blt	303b4 <__assert_fail@plt+0x1eeb0>
   30364:	b	303cc <__assert_fail@plt+0x1eec8>
   30368:	ldr	r0, [fp, #8]
   3036c:	sub	r0, r0, #1
   30370:	mvn	r1, #0
   30374:	cmp	r1, r0
   30378:	blt	303b4 <__assert_fail@plt+0x1eeb0>
   3037c:	b	303cc <__assert_fail@plt+0x1eec8>
   30380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30384:	movw	r1, #0
   30388:	sdiv	r0, r1, r0
   3038c:	ldr	r1, [fp, #8]
   30390:	cmp	r0, r1
   30394:	blt	303b4 <__assert_fail@plt+0x1eeb0>
   30398:	b	303cc <__assert_fail@plt+0x1eec8>
   3039c:	ldr	r0, [fp, #8]
   303a0:	movw	r1, #65535	; 0xffff
   303a4:	sdiv	r0, r1, r0
   303a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   303ac:	cmp	r0, r1
   303b0:	bge	303cc <__assert_fail@plt+0x1eec8>
   303b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   303b8:	ldr	r1, [fp, #8]
   303bc:	mul	r0, r0, r1
   303c0:	uxth	r0, r0
   303c4:	str	r0, [fp, #-28]	; 0xffffffe4
   303c8:	b	30fcc <__assert_fail@plt+0x1fac8>
   303cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   303d0:	ldr	r1, [fp, #8]
   303d4:	mul	r0, r0, r1
   303d8:	uxth	r0, r0
   303dc:	str	r0, [fp, #-28]	; 0xffffffe4
   303e0:	b	30fd0 <__assert_fail@plt+0x1facc>
   303e4:	b	303e8 <__assert_fail@plt+0x1eee4>
   303e8:	b	303ec <__assert_fail@plt+0x1eee8>
   303ec:	ldr	r0, [fp, #8]
   303f0:	cmp	r0, #0
   303f4:	bge	304f8 <__assert_fail@plt+0x1eff4>
   303f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   303fc:	cmp	r0, #0
   30400:	bge	3048c <__assert_fail@plt+0x1ef88>
   30404:	b	30408 <__assert_fail@plt+0x1ef04>
   30408:	ldr	r0, [pc, #3048]	; 30ff8 <__assert_fail@plt+0x1faf4>
   3040c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30410:	ldr	r2, [fp, #8]
   30414:	sdiv	r0, r0, r2
   30418:	cmp	r1, r0
   3041c:	blt	30588 <__assert_fail@plt+0x1f084>
   30420:	b	3059c <__assert_fail@plt+0x1f098>
   30424:	b	30428 <__assert_fail@plt+0x1ef24>
   30428:	ldr	r0, [pc, #3020]	; 30ffc <__assert_fail@plt+0x1faf8>
   3042c:	ldr	r1, [fp, #8]
   30430:	cmp	r1, r0
   30434:	blt	3044c <__assert_fail@plt+0x1ef48>
   30438:	b	30458 <__assert_fail@plt+0x1ef54>
   3043c:	ldr	r0, [fp, #8]
   30440:	movw	r1, #0
   30444:	cmp	r1, r0
   30448:	bge	30458 <__assert_fail@plt+0x1ef54>
   3044c:	movw	r0, #0
   30450:	str	r0, [sp, #72]	; 0x48
   30454:	b	30470 <__assert_fail@plt+0x1ef6c>
   30458:	ldr	r0, [pc, #2968]	; 30ff8 <__assert_fail@plt+0x1faf4>
   3045c:	ldr	r1, [fp, #8]
   30460:	movw	r2, #0
   30464:	sub	r1, r2, r1
   30468:	sdiv	r0, r0, r1
   3046c:	str	r0, [sp, #72]	; 0x48
   30470:	ldr	r0, [sp, #72]	; 0x48
   30474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30478:	mvn	r2, #0
   3047c:	sub	r1, r2, r1
   30480:	cmp	r0, r1
   30484:	ble	30588 <__assert_fail@plt+0x1f084>
   30488:	b	3059c <__assert_fail@plt+0x1f098>
   3048c:	ldr	r0, [fp, #8]
   30490:	cmn	r0, #1
   30494:	bne	304dc <__assert_fail@plt+0x1efd8>
   30498:	b	3049c <__assert_fail@plt+0x1ef98>
   3049c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   304a0:	add	r0, r0, #-2147483648	; 0x80000000
   304a4:	movw	r1, #0
   304a8:	cmp	r1, r0
   304ac:	blt	30588 <__assert_fail@plt+0x1f084>
   304b0:	b	3059c <__assert_fail@plt+0x1f098>
   304b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   304b8:	movw	r1, #0
   304bc:	cmp	r1, r0
   304c0:	bge	3059c <__assert_fail@plt+0x1f098>
   304c4:	ldr	r0, [pc, #2860]	; 30ff8 <__assert_fail@plt+0x1faf4>
   304c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   304cc:	sub	r1, r1, #1
   304d0:	cmp	r0, r1
   304d4:	blt	30588 <__assert_fail@plt+0x1f084>
   304d8:	b	3059c <__assert_fail@plt+0x1f098>
   304dc:	ldr	r0, [pc, #2844]	; 31000 <__assert_fail@plt+0x1fafc>
   304e0:	ldr	r1, [fp, #8]
   304e4:	sdiv	r0, r0, r1
   304e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   304ec:	cmp	r0, r1
   304f0:	blt	30588 <__assert_fail@plt+0x1f084>
   304f4:	b	3059c <__assert_fail@plt+0x1f098>
   304f8:	ldr	r0, [fp, #8]
   304fc:	cmp	r0, #0
   30500:	bne	30508 <__assert_fail@plt+0x1f004>
   30504:	b	3059c <__assert_fail@plt+0x1f098>
   30508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3050c:	cmp	r0, #0
   30510:	bge	30570 <__assert_fail@plt+0x1f06c>
   30514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30518:	cmn	r0, #1
   3051c:	bne	30554 <__assert_fail@plt+0x1f050>
   30520:	b	30524 <__assert_fail@plt+0x1f020>
   30524:	ldr	r0, [fp, #8]
   30528:	add	r0, r0, #-2147483648	; 0x80000000
   3052c:	movw	r1, #0
   30530:	cmp	r1, r0
   30534:	blt	30588 <__assert_fail@plt+0x1f084>
   30538:	b	3059c <__assert_fail@plt+0x1f098>
   3053c:	ldr	r0, [pc, #2740]	; 30ff8 <__assert_fail@plt+0x1faf4>
   30540:	ldr	r1, [fp, #8]
   30544:	sub	r1, r1, #1
   30548:	cmp	r0, r1
   3054c:	blt	30588 <__assert_fail@plt+0x1f084>
   30550:	b	3059c <__assert_fail@plt+0x1f098>
   30554:	ldr	r0, [pc, #2724]	; 31000 <__assert_fail@plt+0x1fafc>
   30558:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3055c:	sdiv	r0, r0, r1
   30560:	ldr	r1, [fp, #8]
   30564:	cmp	r0, r1
   30568:	blt	30588 <__assert_fail@plt+0x1f084>
   3056c:	b	3059c <__assert_fail@plt+0x1f098>
   30570:	ldr	r0, [pc, #2688]	; 30ff8 <__assert_fail@plt+0x1faf4>
   30574:	ldr	r1, [fp, #8]
   30578:	sdiv	r0, r0, r1
   3057c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30580:	cmp	r0, r1
   30584:	bge	3059c <__assert_fail@plt+0x1f098>
   30588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3058c:	ldr	r1, [fp, #8]
   30590:	mul	r0, r0, r1
   30594:	str	r0, [fp, #-28]	; 0xffffffe4
   30598:	b	30fcc <__assert_fail@plt+0x1fac8>
   3059c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   305a0:	ldr	r1, [fp, #8]
   305a4:	mul	r0, r0, r1
   305a8:	str	r0, [fp, #-28]	; 0xffffffe4
   305ac:	b	30fd0 <__assert_fail@plt+0x1facc>
   305b0:	ldr	r0, [fp, #8]
   305b4:	cmp	r0, #0
   305b8:	bge	306c8 <__assert_fail@plt+0x1f1c4>
   305bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   305c0:	cmp	r0, #0
   305c4:	bge	30650 <__assert_fail@plt+0x1f14c>
   305c8:	b	305e8 <__assert_fail@plt+0x1f0e4>
   305cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   305d0:	ldr	r1, [fp, #8]
   305d4:	mvn	r2, #0
   305d8:	udiv	r1, r2, r1
   305dc:	cmp	r0, r1
   305e0:	bcc	30764 <__assert_fail@plt+0x1f260>
   305e4:	b	30778 <__assert_fail@plt+0x1f274>
   305e8:	b	305ec <__assert_fail@plt+0x1f0e8>
   305ec:	ldr	r0, [pc, #2568]	; 30ffc <__assert_fail@plt+0x1faf8>
   305f0:	ldr	r1, [fp, #8]
   305f4:	cmp	r1, r0
   305f8:	blt	30610 <__assert_fail@plt+0x1f10c>
   305fc:	b	3061c <__assert_fail@plt+0x1f118>
   30600:	ldr	r0, [fp, #8]
   30604:	movw	r1, #0
   30608:	cmp	r1, r0
   3060c:	bge	3061c <__assert_fail@plt+0x1f118>
   30610:	movw	r0, #1
   30614:	str	r0, [sp, #68]	; 0x44
   30618:	b	30634 <__assert_fail@plt+0x1f130>
   3061c:	ldr	r0, [fp, #8]
   30620:	movw	r1, #0
   30624:	sub	r0, r1, r0
   30628:	mvn	r1, #0
   3062c:	udiv	r0, r1, r0
   30630:	str	r0, [sp, #68]	; 0x44
   30634:	ldr	r0, [sp, #68]	; 0x44
   30638:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3063c:	mvn	r2, #0
   30640:	sub	r1, r2, r1
   30644:	cmp	r0, r1
   30648:	bls	30764 <__assert_fail@plt+0x1f260>
   3064c:	b	30778 <__assert_fail@plt+0x1f274>
   30650:	b	30654 <__assert_fail@plt+0x1f150>
   30654:	b	306ac <__assert_fail@plt+0x1f1a8>
   30658:	b	306ac <__assert_fail@plt+0x1f1a8>
   3065c:	ldr	r0, [fp, #8]
   30660:	cmn	r0, #1
   30664:	bne	306ac <__assert_fail@plt+0x1f1a8>
   30668:	b	3066c <__assert_fail@plt+0x1f168>
   3066c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30670:	add	r0, r0, #0
   30674:	movw	r1, #0
   30678:	cmp	r1, r0
   3067c:	blt	30764 <__assert_fail@plt+0x1f260>
   30680:	b	30778 <__assert_fail@plt+0x1f274>
   30684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30688:	movw	r1, #0
   3068c:	cmp	r1, r0
   30690:	bge	30778 <__assert_fail@plt+0x1f274>
   30694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30698:	sub	r0, r0, #1
   3069c:	mvn	r1, #0
   306a0:	cmp	r1, r0
   306a4:	blt	30764 <__assert_fail@plt+0x1f260>
   306a8:	b	30778 <__assert_fail@plt+0x1f274>
   306ac:	ldr	r0, [fp, #8]
   306b0:	movw	r1, #0
   306b4:	sdiv	r0, r1, r0
   306b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   306bc:	cmp	r0, r1
   306c0:	blt	30764 <__assert_fail@plt+0x1f260>
   306c4:	b	30778 <__assert_fail@plt+0x1f274>
   306c8:	ldr	r0, [fp, #8]
   306cc:	cmp	r0, #0
   306d0:	bne	306d8 <__assert_fail@plt+0x1f1d4>
   306d4:	b	30778 <__assert_fail@plt+0x1f274>
   306d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   306dc:	cmp	r0, #0
   306e0:	bge	3074c <__assert_fail@plt+0x1f248>
   306e4:	b	306e8 <__assert_fail@plt+0x1f1e4>
   306e8:	b	30730 <__assert_fail@plt+0x1f22c>
   306ec:	b	30730 <__assert_fail@plt+0x1f22c>
   306f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   306f4:	cmn	r0, #1
   306f8:	bne	30730 <__assert_fail@plt+0x1f22c>
   306fc:	b	30700 <__assert_fail@plt+0x1f1fc>
   30700:	ldr	r0, [fp, #8]
   30704:	add	r0, r0, #0
   30708:	movw	r1, #0
   3070c:	cmp	r1, r0
   30710:	blt	30764 <__assert_fail@plt+0x1f260>
   30714:	b	30778 <__assert_fail@plt+0x1f274>
   30718:	ldr	r0, [fp, #8]
   3071c:	sub	r0, r0, #1
   30720:	mvn	r1, #0
   30724:	cmp	r1, r0
   30728:	blt	30764 <__assert_fail@plt+0x1f260>
   3072c:	b	30778 <__assert_fail@plt+0x1f274>
   30730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30734:	movw	r1, #0
   30738:	sdiv	r0, r1, r0
   3073c:	ldr	r1, [fp, #8]
   30740:	cmp	r0, r1
   30744:	blt	30764 <__assert_fail@plt+0x1f260>
   30748:	b	30778 <__assert_fail@plt+0x1f274>
   3074c:	ldr	r0, [fp, #8]
   30750:	mvn	r1, #0
   30754:	udiv	r0, r1, r0
   30758:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3075c:	cmp	r0, r1
   30760:	bcs	30778 <__assert_fail@plt+0x1f274>
   30764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30768:	ldr	r1, [fp, #8]
   3076c:	mul	r0, r0, r1
   30770:	str	r0, [fp, #-28]	; 0xffffffe4
   30774:	b	30fcc <__assert_fail@plt+0x1fac8>
   30778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3077c:	ldr	r1, [fp, #8]
   30780:	mul	r0, r0, r1
   30784:	str	r0, [fp, #-28]	; 0xffffffe4
   30788:	b	30fd0 <__assert_fail@plt+0x1facc>
   3078c:	b	30790 <__assert_fail@plt+0x1f28c>
   30790:	b	30794 <__assert_fail@plt+0x1f290>
   30794:	ldr	r0, [fp, #8]
   30798:	cmp	r0, #0
   3079c:	bge	308a0 <__assert_fail@plt+0x1f39c>
   307a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   307a4:	cmp	r0, #0
   307a8:	bge	30834 <__assert_fail@plt+0x1f330>
   307ac:	b	307b0 <__assert_fail@plt+0x1f2ac>
   307b0:	ldr	r0, [pc, #2112]	; 30ff8 <__assert_fail@plt+0x1faf4>
   307b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   307b8:	ldr	r2, [fp, #8]
   307bc:	sdiv	r0, r0, r2
   307c0:	cmp	r1, r0
   307c4:	blt	30930 <__assert_fail@plt+0x1f42c>
   307c8:	b	30944 <__assert_fail@plt+0x1f440>
   307cc:	b	307d0 <__assert_fail@plt+0x1f2cc>
   307d0:	ldr	r0, [pc, #2084]	; 30ffc <__assert_fail@plt+0x1faf8>
   307d4:	ldr	r1, [fp, #8]
   307d8:	cmp	r1, r0
   307dc:	blt	307f4 <__assert_fail@plt+0x1f2f0>
   307e0:	b	30800 <__assert_fail@plt+0x1f2fc>
   307e4:	ldr	r0, [fp, #8]
   307e8:	movw	r1, #0
   307ec:	cmp	r1, r0
   307f0:	bge	30800 <__assert_fail@plt+0x1f2fc>
   307f4:	movw	r0, #0
   307f8:	str	r0, [sp, #64]	; 0x40
   307fc:	b	30818 <__assert_fail@plt+0x1f314>
   30800:	ldr	r0, [pc, #2032]	; 30ff8 <__assert_fail@plt+0x1faf4>
   30804:	ldr	r1, [fp, #8]
   30808:	movw	r2, #0
   3080c:	sub	r1, r2, r1
   30810:	sdiv	r0, r0, r1
   30814:	str	r0, [sp, #64]	; 0x40
   30818:	ldr	r0, [sp, #64]	; 0x40
   3081c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30820:	mvn	r2, #0
   30824:	sub	r1, r2, r1
   30828:	cmp	r0, r1
   3082c:	ble	30930 <__assert_fail@plt+0x1f42c>
   30830:	b	30944 <__assert_fail@plt+0x1f440>
   30834:	ldr	r0, [fp, #8]
   30838:	cmn	r0, #1
   3083c:	bne	30884 <__assert_fail@plt+0x1f380>
   30840:	b	30844 <__assert_fail@plt+0x1f340>
   30844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30848:	add	r0, r0, #-2147483648	; 0x80000000
   3084c:	movw	r1, #0
   30850:	cmp	r1, r0
   30854:	blt	30930 <__assert_fail@plt+0x1f42c>
   30858:	b	30944 <__assert_fail@plt+0x1f440>
   3085c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30860:	movw	r1, #0
   30864:	cmp	r1, r0
   30868:	bge	30944 <__assert_fail@plt+0x1f440>
   3086c:	ldr	r0, [pc, #1924]	; 30ff8 <__assert_fail@plt+0x1faf4>
   30870:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30874:	sub	r1, r1, #1
   30878:	cmp	r0, r1
   3087c:	blt	30930 <__assert_fail@plt+0x1f42c>
   30880:	b	30944 <__assert_fail@plt+0x1f440>
   30884:	ldr	r0, [pc, #1908]	; 31000 <__assert_fail@plt+0x1fafc>
   30888:	ldr	r1, [fp, #8]
   3088c:	sdiv	r0, r0, r1
   30890:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30894:	cmp	r0, r1
   30898:	blt	30930 <__assert_fail@plt+0x1f42c>
   3089c:	b	30944 <__assert_fail@plt+0x1f440>
   308a0:	ldr	r0, [fp, #8]
   308a4:	cmp	r0, #0
   308a8:	bne	308b0 <__assert_fail@plt+0x1f3ac>
   308ac:	b	30944 <__assert_fail@plt+0x1f440>
   308b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   308b4:	cmp	r0, #0
   308b8:	bge	30918 <__assert_fail@plt+0x1f414>
   308bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   308c0:	cmn	r0, #1
   308c4:	bne	308fc <__assert_fail@plt+0x1f3f8>
   308c8:	b	308cc <__assert_fail@plt+0x1f3c8>
   308cc:	ldr	r0, [fp, #8]
   308d0:	add	r0, r0, #-2147483648	; 0x80000000
   308d4:	movw	r1, #0
   308d8:	cmp	r1, r0
   308dc:	blt	30930 <__assert_fail@plt+0x1f42c>
   308e0:	b	30944 <__assert_fail@plt+0x1f440>
   308e4:	ldr	r0, [pc, #1804]	; 30ff8 <__assert_fail@plt+0x1faf4>
   308e8:	ldr	r1, [fp, #8]
   308ec:	sub	r1, r1, #1
   308f0:	cmp	r0, r1
   308f4:	blt	30930 <__assert_fail@plt+0x1f42c>
   308f8:	b	30944 <__assert_fail@plt+0x1f440>
   308fc:	ldr	r0, [pc, #1788]	; 31000 <__assert_fail@plt+0x1fafc>
   30900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30904:	sdiv	r0, r0, r1
   30908:	ldr	r1, [fp, #8]
   3090c:	cmp	r0, r1
   30910:	blt	30930 <__assert_fail@plt+0x1f42c>
   30914:	b	30944 <__assert_fail@plt+0x1f440>
   30918:	ldr	r0, [pc, #1752]	; 30ff8 <__assert_fail@plt+0x1faf4>
   3091c:	ldr	r1, [fp, #8]
   30920:	sdiv	r0, r0, r1
   30924:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30928:	cmp	r0, r1
   3092c:	bge	30944 <__assert_fail@plt+0x1f440>
   30930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30934:	ldr	r1, [fp, #8]
   30938:	mul	r0, r0, r1
   3093c:	str	r0, [fp, #-28]	; 0xffffffe4
   30940:	b	30fcc <__assert_fail@plt+0x1fac8>
   30944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30948:	ldr	r1, [fp, #8]
   3094c:	mul	r0, r0, r1
   30950:	str	r0, [fp, #-28]	; 0xffffffe4
   30954:	b	30fd0 <__assert_fail@plt+0x1facc>
   30958:	ldr	r0, [fp, #8]
   3095c:	cmp	r0, #0
   30960:	bge	30a70 <__assert_fail@plt+0x1f56c>
   30964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30968:	cmp	r0, #0
   3096c:	bge	309f8 <__assert_fail@plt+0x1f4f4>
   30970:	b	30990 <__assert_fail@plt+0x1f48c>
   30974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30978:	ldr	r1, [fp, #8]
   3097c:	mvn	r2, #0
   30980:	udiv	r1, r2, r1
   30984:	cmp	r0, r1
   30988:	bcc	30b0c <__assert_fail@plt+0x1f608>
   3098c:	b	30b20 <__assert_fail@plt+0x1f61c>
   30990:	b	30994 <__assert_fail@plt+0x1f490>
   30994:	ldr	r0, [pc, #1632]	; 30ffc <__assert_fail@plt+0x1faf8>
   30998:	ldr	r1, [fp, #8]
   3099c:	cmp	r1, r0
   309a0:	blt	309b8 <__assert_fail@plt+0x1f4b4>
   309a4:	b	309c4 <__assert_fail@plt+0x1f4c0>
   309a8:	ldr	r0, [fp, #8]
   309ac:	movw	r1, #0
   309b0:	cmp	r1, r0
   309b4:	bge	309c4 <__assert_fail@plt+0x1f4c0>
   309b8:	movw	r0, #1
   309bc:	str	r0, [sp, #60]	; 0x3c
   309c0:	b	309dc <__assert_fail@plt+0x1f4d8>
   309c4:	ldr	r0, [fp, #8]
   309c8:	movw	r1, #0
   309cc:	sub	r0, r1, r0
   309d0:	mvn	r1, #0
   309d4:	udiv	r0, r1, r0
   309d8:	str	r0, [sp, #60]	; 0x3c
   309dc:	ldr	r0, [sp, #60]	; 0x3c
   309e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   309e4:	mvn	r2, #0
   309e8:	sub	r1, r2, r1
   309ec:	cmp	r0, r1
   309f0:	bls	30b0c <__assert_fail@plt+0x1f608>
   309f4:	b	30b20 <__assert_fail@plt+0x1f61c>
   309f8:	b	309fc <__assert_fail@plt+0x1f4f8>
   309fc:	b	30a54 <__assert_fail@plt+0x1f550>
   30a00:	b	30a54 <__assert_fail@plt+0x1f550>
   30a04:	ldr	r0, [fp, #8]
   30a08:	cmn	r0, #1
   30a0c:	bne	30a54 <__assert_fail@plt+0x1f550>
   30a10:	b	30a14 <__assert_fail@plt+0x1f510>
   30a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30a18:	add	r0, r0, #0
   30a1c:	movw	r1, #0
   30a20:	cmp	r1, r0
   30a24:	blt	30b0c <__assert_fail@plt+0x1f608>
   30a28:	b	30b20 <__assert_fail@plt+0x1f61c>
   30a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30a30:	movw	r1, #0
   30a34:	cmp	r1, r0
   30a38:	bge	30b20 <__assert_fail@plt+0x1f61c>
   30a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30a40:	sub	r0, r0, #1
   30a44:	mvn	r1, #0
   30a48:	cmp	r1, r0
   30a4c:	blt	30b0c <__assert_fail@plt+0x1f608>
   30a50:	b	30b20 <__assert_fail@plt+0x1f61c>
   30a54:	ldr	r0, [fp, #8]
   30a58:	movw	r1, #0
   30a5c:	sdiv	r0, r1, r0
   30a60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30a64:	cmp	r0, r1
   30a68:	blt	30b0c <__assert_fail@plt+0x1f608>
   30a6c:	b	30b20 <__assert_fail@plt+0x1f61c>
   30a70:	ldr	r0, [fp, #8]
   30a74:	cmp	r0, #0
   30a78:	bne	30a80 <__assert_fail@plt+0x1f57c>
   30a7c:	b	30b20 <__assert_fail@plt+0x1f61c>
   30a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30a84:	cmp	r0, #0
   30a88:	bge	30af4 <__assert_fail@plt+0x1f5f0>
   30a8c:	b	30a90 <__assert_fail@plt+0x1f58c>
   30a90:	b	30ad8 <__assert_fail@plt+0x1f5d4>
   30a94:	b	30ad8 <__assert_fail@plt+0x1f5d4>
   30a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30a9c:	cmn	r0, #1
   30aa0:	bne	30ad8 <__assert_fail@plt+0x1f5d4>
   30aa4:	b	30aa8 <__assert_fail@plt+0x1f5a4>
   30aa8:	ldr	r0, [fp, #8]
   30aac:	add	r0, r0, #0
   30ab0:	movw	r1, #0
   30ab4:	cmp	r1, r0
   30ab8:	blt	30b0c <__assert_fail@plt+0x1f608>
   30abc:	b	30b20 <__assert_fail@plt+0x1f61c>
   30ac0:	ldr	r0, [fp, #8]
   30ac4:	sub	r0, r0, #1
   30ac8:	mvn	r1, #0
   30acc:	cmp	r1, r0
   30ad0:	blt	30b0c <__assert_fail@plt+0x1f608>
   30ad4:	b	30b20 <__assert_fail@plt+0x1f61c>
   30ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30adc:	movw	r1, #0
   30ae0:	sdiv	r0, r1, r0
   30ae4:	ldr	r1, [fp, #8]
   30ae8:	cmp	r0, r1
   30aec:	blt	30b0c <__assert_fail@plt+0x1f608>
   30af0:	b	30b20 <__assert_fail@plt+0x1f61c>
   30af4:	ldr	r0, [fp, #8]
   30af8:	mvn	r1, #0
   30afc:	udiv	r0, r1, r0
   30b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30b04:	cmp	r0, r1
   30b08:	bcs	30b20 <__assert_fail@plt+0x1f61c>
   30b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30b10:	ldr	r1, [fp, #8]
   30b14:	mul	r0, r0, r1
   30b18:	str	r0, [fp, #-28]	; 0xffffffe4
   30b1c:	b	30fcc <__assert_fail@plt+0x1fac8>
   30b20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30b24:	ldr	r1, [fp, #8]
   30b28:	mul	r0, r0, r1
   30b2c:	str	r0, [fp, #-28]	; 0xffffffe4
   30b30:	b	30fd0 <__assert_fail@plt+0x1facc>
   30b34:	b	30b38 <__assert_fail@plt+0x1f634>
   30b38:	ldr	r0, [fp, #8]
   30b3c:	cmp	r0, #0
   30b40:	bge	30ca8 <__assert_fail@plt+0x1f7a4>
   30b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30b48:	cmp	r0, #0
   30b4c:	bge	30c24 <__assert_fail@plt+0x1f720>
   30b50:	b	30b54 <__assert_fail@plt+0x1f650>
   30b54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30b58:	ldr	r1, [fp, #8]
   30b5c:	asr	r3, r1, #31
   30b60:	mvn	r2, #0
   30b64:	mvn	ip, #-2147483648	; 0x80000000
   30b68:	str	r0, [sp, #56]	; 0x38
   30b6c:	mov	r0, r2
   30b70:	str	r1, [sp, #52]	; 0x34
   30b74:	mov	r1, ip
   30b78:	ldr	r2, [sp, #52]	; 0x34
   30b7c:	bl	36ab8 <__assert_fail@plt+0x255b4>
   30b80:	ldr	r2, [sp, #56]	; 0x38
   30b84:	subs	r0, r2, r0
   30b88:	rscs	r1, r1, r2, asr #31
   30b8c:	blt	30d70 <__assert_fail@plt+0x1f86c>
   30b90:	b	30d84 <__assert_fail@plt+0x1f880>
   30b94:	b	30b98 <__assert_fail@plt+0x1f694>
   30b98:	ldr	r0, [pc, #1116]	; 30ffc <__assert_fail@plt+0x1faf8>
   30b9c:	ldr	r1, [fp, #8]
   30ba0:	cmp	r1, r0
   30ba4:	blt	30bbc <__assert_fail@plt+0x1f6b8>
   30ba8:	b	30bd0 <__assert_fail@plt+0x1f6cc>
   30bac:	ldr	r0, [fp, #8]
   30bb0:	movw	r1, #0
   30bb4:	cmp	r1, r0
   30bb8:	bge	30bd0 <__assert_fail@plt+0x1f6cc>
   30bbc:	mov	r0, #0
   30bc0:	mvn	r1, #0
   30bc4:	str	r1, [sp, #48]	; 0x30
   30bc8:	str	r0, [sp, #44]	; 0x2c
   30bcc:	b	30c04 <__assert_fail@plt+0x1f700>
   30bd0:	ldr	r0, [fp, #8]
   30bd4:	rsb	r0, r0, #0
   30bd8:	asr	r3, r0, #31
   30bdc:	mvn	r1, #0
   30be0:	mvn	r2, #-2147483648	; 0x80000000
   30be4:	str	r0, [sp, #40]	; 0x28
   30be8:	mov	r0, r1
   30bec:	mov	r1, r2
   30bf0:	ldr	r2, [sp, #40]	; 0x28
   30bf4:	bl	36ab8 <__assert_fail@plt+0x255b4>
   30bf8:	str	r0, [sp, #48]	; 0x30
   30bfc:	str	r1, [sp, #44]	; 0x2c
   30c00:	b	30c04 <__assert_fail@plt+0x1f700>
   30c04:	ldr	r0, [sp, #44]	; 0x2c
   30c08:	ldr	r1, [sp, #48]	; 0x30
   30c0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30c10:	mvn	r2, r2
   30c14:	subs	r1, r2, r1
   30c18:	rscs	r0, r0, r2, asr #31
   30c1c:	bge	30d70 <__assert_fail@plt+0x1f86c>
   30c20:	b	30d84 <__assert_fail@plt+0x1f880>
   30c24:	ldr	r0, [fp, #8]
   30c28:	cmn	r0, #1
   30c2c:	bne	30c70 <__assert_fail@plt+0x1f76c>
   30c30:	b	30c34 <__assert_fail@plt+0x1f730>
   30c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30c38:	mov	r1, #-2147483648	; 0x80000000
   30c3c:	add	r1, r1, r0, asr #31
   30c40:	rsbs	r0, r0, #0
   30c44:	rscs	r1, r1, #0
   30c48:	blt	30d70 <__assert_fail@plt+0x1f86c>
   30c4c:	b	30d84 <__assert_fail@plt+0x1f880>
   30c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30c54:	movw	r1, #0
   30c58:	cmp	r1, r0
   30c5c:	bge	30d84 <__assert_fail@plt+0x1f880>
   30c60:	mov	r0, #0
   30c64:	cmp	r0, #0
   30c68:	bne	30d70 <__assert_fail@plt+0x1f86c>
   30c6c:	b	30d84 <__assert_fail@plt+0x1f880>
   30c70:	ldr	r0, [fp, #8]
   30c74:	asr	r3, r0, #31
   30c78:	mov	r1, #0
   30c7c:	mov	r2, #-2147483648	; 0x80000000
   30c80:	str	r0, [sp, #36]	; 0x24
   30c84:	mov	r0, r1
   30c88:	mov	r1, r2
   30c8c:	ldr	r2, [sp, #36]	; 0x24
   30c90:	bl	36ab8 <__assert_fail@plt+0x255b4>
   30c94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30c98:	subs	r0, r0, r2
   30c9c:	sbcs	r1, r1, r2, asr #31
   30ca0:	blt	30d70 <__assert_fail@plt+0x1f86c>
   30ca4:	b	30d84 <__assert_fail@plt+0x1f880>
   30ca8:	ldr	r0, [fp, #8]
   30cac:	cmp	r0, #0
   30cb0:	bne	30cb8 <__assert_fail@plt+0x1f7b4>
   30cb4:	b	30d84 <__assert_fail@plt+0x1f880>
   30cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30cbc:	cmp	r0, #0
   30cc0:	bge	30d38 <__assert_fail@plt+0x1f834>
   30cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30cc8:	cmn	r0, #1
   30ccc:	bne	30d00 <__assert_fail@plt+0x1f7fc>
   30cd0:	b	30cd4 <__assert_fail@plt+0x1f7d0>
   30cd4:	ldr	r0, [fp, #8]
   30cd8:	mov	r1, #-2147483648	; 0x80000000
   30cdc:	add	r1, r1, r0, asr #31
   30ce0:	rsbs	r0, r0, #0
   30ce4:	rscs	r1, r1, #0
   30ce8:	blt	30d70 <__assert_fail@plt+0x1f86c>
   30cec:	b	30d84 <__assert_fail@plt+0x1f880>
   30cf0:	mov	r0, #0
   30cf4:	cmp	r0, #0
   30cf8:	bne	30d70 <__assert_fail@plt+0x1f86c>
   30cfc:	b	30d84 <__assert_fail@plt+0x1f880>
   30d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30d04:	asr	r3, r0, #31
   30d08:	mov	r1, #0
   30d0c:	mov	r2, #-2147483648	; 0x80000000
   30d10:	str	r0, [sp, #32]
   30d14:	mov	r0, r1
   30d18:	mov	r1, r2
   30d1c:	ldr	r2, [sp, #32]
   30d20:	bl	36ab8 <__assert_fail@plt+0x255b4>
   30d24:	ldr	r2, [fp, #8]
   30d28:	subs	r0, r0, r2
   30d2c:	sbcs	r1, r1, r2, asr #31
   30d30:	blt	30d70 <__assert_fail@plt+0x1f86c>
   30d34:	b	30d84 <__assert_fail@plt+0x1f880>
   30d38:	ldr	r0, [fp, #8]
   30d3c:	asr	r3, r0, #31
   30d40:	mvn	r1, #0
   30d44:	mvn	r2, #-2147483648	; 0x80000000
   30d48:	str	r0, [sp, #28]
   30d4c:	mov	r0, r1
   30d50:	mov	r1, r2
   30d54:	ldr	r2, [sp, #28]
   30d58:	bl	36ab8 <__assert_fail@plt+0x255b4>
   30d5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30d60:	subs	r0, r0, r2
   30d64:	sbcs	r1, r1, r2, asr #31
   30d68:	bge	30d84 <__assert_fail@plt+0x1f880>
   30d6c:	b	30d70 <__assert_fail@plt+0x1f86c>
   30d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30d74:	ldr	r1, [fp, #8]
   30d78:	mul	r0, r0, r1
   30d7c:	str	r0, [fp, #-28]	; 0xffffffe4
   30d80:	b	30fcc <__assert_fail@plt+0x1fac8>
   30d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30d88:	ldr	r1, [fp, #8]
   30d8c:	mul	r0, r0, r1
   30d90:	str	r0, [fp, #-28]	; 0xffffffe4
   30d94:	b	30fd0 <__assert_fail@plt+0x1facc>
   30d98:	ldr	r0, [fp, #8]
   30d9c:	cmp	r0, #0
   30da0:	bge	30ef0 <__assert_fail@plt+0x1f9ec>
   30da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30da8:	cmp	r0, #0
   30dac:	bge	30e78 <__assert_fail@plt+0x1f974>
   30db0:	b	30df0 <__assert_fail@plt+0x1f8ec>
   30db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30db8:	ldr	r1, [fp, #8]
   30dbc:	asr	r3, r1, #31
   30dc0:	mvn	r2, #0
   30dc4:	str	r0, [sp, #24]
   30dc8:	mov	r0, r2
   30dcc:	str	r1, [sp, #20]
   30dd0:	mov	r1, r2
   30dd4:	ldr	r2, [sp, #20]
   30dd8:	bl	36b8c <__assert_fail@plt+0x25688>
   30ddc:	ldr	r2, [sp, #24]
   30de0:	subs	r0, r2, r0
   30de4:	rscs	r1, r1, r2, asr #31
   30de8:	bcc	30fa4 <__assert_fail@plt+0x1faa0>
   30dec:	b	30fb8 <__assert_fail@plt+0x1fab4>
   30df0:	b	30df4 <__assert_fail@plt+0x1f8f0>
   30df4:	ldr	r0, [pc, #512]	; 30ffc <__assert_fail@plt+0x1faf8>
   30df8:	ldr	r1, [fp, #8]
   30dfc:	cmp	r1, r0
   30e00:	blt	30e18 <__assert_fail@plt+0x1f914>
   30e04:	b	30e2c <__assert_fail@plt+0x1f928>
   30e08:	ldr	r0, [fp, #8]
   30e0c:	movw	r1, #0
   30e10:	cmp	r1, r0
   30e14:	bge	30e2c <__assert_fail@plt+0x1f928>
   30e18:	mov	r0, #1
   30e1c:	mvn	r1, #0
   30e20:	str	r1, [sp, #16]
   30e24:	str	r0, [sp, #12]
   30e28:	b	30e58 <__assert_fail@plt+0x1f954>
   30e2c:	ldr	r0, [fp, #8]
   30e30:	rsb	r0, r0, #0
   30e34:	asr	r3, r0, #31
   30e38:	mvn	r1, #0
   30e3c:	str	r0, [sp, #8]
   30e40:	mov	r0, r1
   30e44:	ldr	r2, [sp, #8]
   30e48:	bl	36b8c <__assert_fail@plt+0x25688>
   30e4c:	str	r0, [sp, #16]
   30e50:	str	r1, [sp, #12]
   30e54:	b	30e58 <__assert_fail@plt+0x1f954>
   30e58:	ldr	r0, [sp, #12]
   30e5c:	ldr	r1, [sp, #16]
   30e60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30e64:	mvn	r2, r2
   30e68:	subs	r1, r2, r1
   30e6c:	rscs	r0, r0, r2, asr #31
   30e70:	bcs	30fa4 <__assert_fail@plt+0x1faa0>
   30e74:	b	30fb8 <__assert_fail@plt+0x1fab4>
   30e78:	b	30e7c <__assert_fail@plt+0x1f978>
   30e7c:	b	30ed4 <__assert_fail@plt+0x1f9d0>
   30e80:	b	30ed4 <__assert_fail@plt+0x1f9d0>
   30e84:	ldr	r0, [fp, #8]
   30e88:	cmn	r0, #1
   30e8c:	bne	30ed4 <__assert_fail@plt+0x1f9d0>
   30e90:	b	30e94 <__assert_fail@plt+0x1f990>
   30e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30e98:	add	r0, r0, #0
   30e9c:	movw	r1, #0
   30ea0:	cmp	r1, r0
   30ea4:	blt	30fa4 <__assert_fail@plt+0x1faa0>
   30ea8:	b	30fb8 <__assert_fail@plt+0x1fab4>
   30eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30eb0:	movw	r1, #0
   30eb4:	cmp	r1, r0
   30eb8:	bge	30fb8 <__assert_fail@plt+0x1fab4>
   30ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30ec0:	sub	r0, r0, #1
   30ec4:	mvn	r1, #0
   30ec8:	cmp	r1, r0
   30ecc:	blt	30fa4 <__assert_fail@plt+0x1faa0>
   30ed0:	b	30fb8 <__assert_fail@plt+0x1fab4>
   30ed4:	ldr	r0, [fp, #8]
   30ed8:	movw	r1, #0
   30edc:	sdiv	r0, r1, r0
   30ee0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30ee4:	cmp	r0, r1
   30ee8:	blt	30fa4 <__assert_fail@plt+0x1faa0>
   30eec:	b	30fb8 <__assert_fail@plt+0x1fab4>
   30ef0:	ldr	r0, [fp, #8]
   30ef4:	cmp	r0, #0
   30ef8:	bne	30f00 <__assert_fail@plt+0x1f9fc>
   30efc:	b	30fb8 <__assert_fail@plt+0x1fab4>
   30f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30f04:	cmp	r0, #0
   30f08:	bge	30f74 <__assert_fail@plt+0x1fa70>
   30f0c:	b	30f10 <__assert_fail@plt+0x1fa0c>
   30f10:	b	30f58 <__assert_fail@plt+0x1fa54>
   30f14:	b	30f58 <__assert_fail@plt+0x1fa54>
   30f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30f1c:	cmn	r0, #1
   30f20:	bne	30f58 <__assert_fail@plt+0x1fa54>
   30f24:	b	30f28 <__assert_fail@plt+0x1fa24>
   30f28:	ldr	r0, [fp, #8]
   30f2c:	add	r0, r0, #0
   30f30:	movw	r1, #0
   30f34:	cmp	r1, r0
   30f38:	blt	30fa4 <__assert_fail@plt+0x1faa0>
   30f3c:	b	30fb8 <__assert_fail@plt+0x1fab4>
   30f40:	ldr	r0, [fp, #8]
   30f44:	sub	r0, r0, #1
   30f48:	mvn	r1, #0
   30f4c:	cmp	r1, r0
   30f50:	blt	30fa4 <__assert_fail@plt+0x1faa0>
   30f54:	b	30fb8 <__assert_fail@plt+0x1fab4>
   30f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30f5c:	movw	r1, #0
   30f60:	sdiv	r0, r1, r0
   30f64:	ldr	r1, [fp, #8]
   30f68:	cmp	r0, r1
   30f6c:	blt	30fa4 <__assert_fail@plt+0x1faa0>
   30f70:	b	30fb8 <__assert_fail@plt+0x1fab4>
   30f74:	ldr	r0, [fp, #8]
   30f78:	asr	r3, r0, #31
   30f7c:	mvn	r1, #0
   30f80:	str	r0, [sp, #4]
   30f84:	mov	r0, r1
   30f88:	ldr	r2, [sp, #4]
   30f8c:	bl	36b8c <__assert_fail@plt+0x25688>
   30f90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30f94:	subs	r0, r0, r2
   30f98:	sbcs	r1, r1, r2, asr #31
   30f9c:	bcs	30fb8 <__assert_fail@plt+0x1fab4>
   30fa0:	b	30fa4 <__assert_fail@plt+0x1faa0>
   30fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30fa8:	ldr	r1, [fp, #8]
   30fac:	mul	r0, r0, r1
   30fb0:	str	r0, [fp, #-28]	; 0xffffffe4
   30fb4:	b	30fcc <__assert_fail@plt+0x1fac8>
   30fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30fbc:	ldr	r1, [fp, #8]
   30fc0:	mul	r0, r0, r1
   30fc4:	str	r0, [fp, #-28]	; 0xffffffe4
   30fc8:	b	30fd0 <__assert_fail@plt+0x1facc>
   30fcc:	bl	311a8 <__assert_fail@plt+0x1fca4>
   30fd0:	ldr	r0, [fp, #-4]
   30fd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30fd8:	bl	2e508 <__assert_fail@plt+0x1d004>
   30fdc:	str	r0, [fp, #-4]
   30fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30fe4:	ldr	r1, [fp, #-8]
   30fe8:	str	r0, [r1]
   30fec:	ldr	r0, [fp, #-4]
   30ff0:	mov	sp, fp
   30ff4:	pop	{fp, pc}
   30ff8:	svcvc	0x00ffffff
   30ffc:	andhi	r0, r0, r1
   31000:	andhi	r0, r0, r0
   31004:			; <UNDEFINED> instruction: 0xffff8000
   31008:	push	{fp, lr}
   3100c:	mov	fp, sp
   31010:	sub	sp, sp, #8
   31014:	str	r0, [sp, #4]
   31018:	ldr	r0, [sp, #4]
   3101c:	movw	r1, #1
   31020:	bl	3102c <__assert_fail@plt+0x1fb28>
   31024:	mov	sp, fp
   31028:	pop	{fp, pc}
   3102c:	push	{fp, lr}
   31030:	mov	fp, sp
   31034:	sub	sp, sp, #8
   31038:	str	r0, [sp, #4]
   3103c:	str	r1, [sp]
   31040:	ldr	r0, [sp, #4]
   31044:	ldr	r1, [sp]
   31048:	bl	334b0 <__assert_fail@plt+0x21fac>
   3104c:	bl	2e494 <__assert_fail@plt+0x1cf90>
   31050:	mov	sp, fp
   31054:	pop	{fp, pc}
   31058:	push	{fp, lr}
   3105c:	mov	fp, sp
   31060:	sub	sp, sp, #8
   31064:	str	r0, [sp, #4]
   31068:	ldr	r0, [sp, #4]
   3106c:	movw	r1, #1
   31070:	bl	3107c <__assert_fail@plt+0x1fb78>
   31074:	mov	sp, fp
   31078:	pop	{fp, pc}
   3107c:	push	{fp, lr}
   31080:	mov	fp, sp
   31084:	sub	sp, sp, #8
   31088:	str	r0, [sp, #4]
   3108c:	str	r1, [sp]
   31090:	ldr	r0, [sp, #4]
   31094:	ldr	r1, [sp]
   31098:	bl	34d24 <__assert_fail@plt+0x23820>
   3109c:	bl	2e494 <__assert_fail@plt+0x1cf90>
   310a0:	mov	sp, fp
   310a4:	pop	{fp, pc}
   310a8:	push	{fp, lr}
   310ac:	mov	fp, sp
   310b0:	sub	sp, sp, #16
   310b4:	str	r0, [fp, #-4]
   310b8:	str	r1, [sp, #8]
   310bc:	ldr	r0, [sp, #8]
   310c0:	bl	2e470 <__assert_fail@plt+0x1cf6c>
   310c4:	ldr	r1, [fp, #-4]
   310c8:	ldr	r2, [sp, #8]
   310cc:	str	r0, [sp, #4]
   310d0:	bl	112a0 <memcpy@plt>
   310d4:	ldr	r0, [sp, #4]
   310d8:	mov	sp, fp
   310dc:	pop	{fp, pc}
   310e0:	push	{fp, lr}
   310e4:	mov	fp, sp
   310e8:	sub	sp, sp, #16
   310ec:	str	r0, [fp, #-4]
   310f0:	str	r1, [sp, #8]
   310f4:	ldr	r0, [sp, #8]
   310f8:	bl	2e4c4 <__assert_fail@plt+0x1cfc0>
   310fc:	ldr	r1, [fp, #-4]
   31100:	ldr	r2, [sp, #8]
   31104:	str	r0, [sp, #4]
   31108:	bl	112a0 <memcpy@plt>
   3110c:	ldr	r0, [sp, #4]
   31110:	mov	sp, fp
   31114:	pop	{fp, pc}
   31118:	push	{fp, lr}
   3111c:	mov	fp, sp
   31120:	sub	sp, sp, #16
   31124:	str	r0, [fp, #-4]
   31128:	str	r1, [sp, #8]
   3112c:	ldr	r0, [sp, #8]
   31130:	add	r0, r0, #1
   31134:	bl	2e4c4 <__assert_fail@plt+0x1cfc0>
   31138:	str	r0, [sp, #4]
   3113c:	ldr	r0, [sp, #4]
   31140:	ldr	r1, [sp, #8]
   31144:	add	r0, r0, r1
   31148:	movw	r1, #0
   3114c:	strb	r1, [r0]
   31150:	ldr	r0, [sp, #4]
   31154:	ldr	r1, [fp, #-4]
   31158:	ldr	r2, [sp, #8]
   3115c:	str	r0, [sp]
   31160:	bl	112a0 <memcpy@plt>
   31164:	ldr	r0, [sp]
   31168:	mov	sp, fp
   3116c:	pop	{fp, pc}
   31170:	push	{fp, lr}
   31174:	mov	fp, sp
   31178:	sub	sp, sp, #8
   3117c:	str	r0, [sp, #4]
   31180:	ldr	r0, [sp, #4]
   31184:	ldr	r1, [sp, #4]
   31188:	str	r0, [sp]
   3118c:	mov	r0, r1
   31190:	bl	113d8 <strlen@plt>
   31194:	add	r1, r0, #1
   31198:	ldr	r0, [sp]
   3119c:	bl	310a8 <__assert_fail@plt+0x1fba4>
   311a0:	mov	sp, fp
   311a4:	pop	{fp, pc}
   311a8:	push	{fp, lr}
   311ac:	mov	fp, sp
   311b0:	sub	sp, sp, #8
   311b4:	movw	r0, #37232	; 0x9170
   311b8:	movt	r0, #4
   311bc:	ldr	r0, [r0]
   311c0:	movw	r1, #32751	; 0x7fef
   311c4:	movt	r1, #3
   311c8:	str	r0, [sp, #4]
   311cc:	mov	r0, r1
   311d0:	bl	113cc <gettext@plt>
   311d4:	ldr	r1, [sp, #4]
   311d8:	str	r0, [sp]
   311dc:	mov	r0, r1
   311e0:	movw	r1, #0
   311e4:	movw	r2, #29822	; 0x747e
   311e8:	movt	r2, #3
   311ec:	ldr	r3, [sp]
   311f0:	bl	1136c <error@plt>
   311f4:	bl	114e0 <abort@plt>
   311f8:	push	{r4, r5, r6, sl, fp, lr}
   311fc:	add	fp, sp, #16
   31200:	sub	sp, sp, #88	; 0x58
   31204:	ldr	ip, [fp, #12]
   31208:	ldr	lr, [fp, #8]
   3120c:	ldr	r4, [fp, #24]
   31210:	ldr	r5, [fp, #20]
   31214:	ldr	r6, [fp, #16]
   31218:	str	r0, [fp, #-20]	; 0xffffffec
   3121c:	str	r1, [fp, #-24]	; 0xffffffe8
   31220:	str	r3, [fp, #-28]	; 0xffffffe4
   31224:	str	r2, [fp, #-32]	; 0xffffffe0
   31228:	str	ip, [fp, #-36]	; 0xffffffdc
   3122c:	str	lr, [fp, #-40]	; 0xffffffd8
   31230:	ldr	r0, [fp, #-20]	; 0xffffffec
   31234:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31238:	ldr	r1, [fp, #16]
   3123c:	movw	r3, #0
   31240:	str	r1, [sp, #44]	; 0x2c
   31244:	mov	r1, r3
   31248:	add	r3, sp, #48	; 0x30
   3124c:	ldr	ip, [sp, #44]	; 0x2c
   31250:	str	ip, [sp]
   31254:	str	r4, [sp, #40]	; 0x28
   31258:	str	r5, [sp, #36]	; 0x24
   3125c:	str	r6, [sp, #32]
   31260:	bl	314a4 <__assert_fail@plt+0x1ffa0>
   31264:	str	r0, [fp, #-44]	; 0xffffffd4
   31268:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3126c:	cmp	r0, #0
   31270:	bne	3132c <__assert_fail@plt+0x1fe28>
   31274:	ldr	r0, [sp, #48]	; 0x30
   31278:	ldr	r1, [sp, #52]	; 0x34
   3127c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31280:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31284:	subs	r0, r0, r2
   31288:	sbcs	r1, r1, r3
   3128c:	blt	312b4 <__assert_fail@plt+0x1fdb0>
   31290:	b	31294 <__assert_fail@plt+0x1fd90>
   31294:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31298:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3129c:	ldr	r2, [sp, #48]	; 0x30
   312a0:	ldr	r3, [sp, #52]	; 0x34
   312a4:	subs	r0, r0, r2
   312a8:	sbcs	r1, r1, r3
   312ac:	bge	31328 <__assert_fail@plt+0x1fe24>
   312b0:	b	312b4 <__assert_fail@plt+0x1fdb0>
   312b4:	mov	r0, #1
   312b8:	str	r0, [fp, #-44]	; 0xffffffd4
   312bc:	ldr	r0, [sp, #48]	; 0x30
   312c0:	ldr	r1, [sp, #52]	; 0x34
   312c4:	subs	r0, r0, #1073741824	; 0x40000000
   312c8:	sbcs	r1, r1, #0
   312cc:	blt	312e4 <__assert_fail@plt+0x1fde0>
   312d0:	b	312d4 <__assert_fail@plt+0x1fdd0>
   312d4:	bl	113fc <__errno_location@plt>
   312d8:	movw	r1, #75	; 0x4b
   312dc:	str	r1, [r0]
   312e0:	b	31324 <__assert_fail@plt+0x1fe20>
   312e4:	ldr	r0, [sp, #48]	; 0x30
   312e8:	ldr	r1, [sp, #52]	; 0x34
   312ec:	mvn	r2, #1073741824	; 0x40000000
   312f0:	subs	r0, r2, r0
   312f4:	mvn	r2, #0
   312f8:	sbcs	r1, r2, r1
   312fc:	blt	31314 <__assert_fail@plt+0x1fe10>
   31300:	b	31304 <__assert_fail@plt+0x1fe00>
   31304:	bl	113fc <__errno_location@plt>
   31308:	movw	r1, #75	; 0x4b
   3130c:	str	r1, [r0]
   31310:	b	31320 <__assert_fail@plt+0x1fe1c>
   31314:	bl	113fc <__errno_location@plt>
   31318:	movw	r1, #34	; 0x22
   3131c:	str	r1, [r0]
   31320:	b	31324 <__assert_fail@plt+0x1fe20>
   31324:	b	31328 <__assert_fail@plt+0x1fe24>
   31328:	b	31368 <__assert_fail@plt+0x1fe64>
   3132c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31330:	cmp	r0, #1
   31334:	bne	31348 <__assert_fail@plt+0x1fe44>
   31338:	bl	113fc <__errno_location@plt>
   3133c:	movw	r1, #75	; 0x4b
   31340:	str	r1, [r0]
   31344:	b	31364 <__assert_fail@plt+0x1fe60>
   31348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3134c:	cmp	r0, #3
   31350:	bne	31360 <__assert_fail@plt+0x1fe5c>
   31354:	bl	113fc <__errno_location@plt>
   31358:	movw	r1, #0
   3135c:	str	r1, [r0]
   31360:	b	31364 <__assert_fail@plt+0x1fe60>
   31364:	b	31368 <__assert_fail@plt+0x1fe64>
   31368:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3136c:	cmp	r0, #0
   31370:	beq	3140c <__assert_fail@plt+0x1ff08>
   31374:	ldr	r0, [fp, #24]
   31378:	cmp	r0, #0
   3137c:	beq	3138c <__assert_fail@plt+0x1fe88>
   31380:	ldr	r0, [fp, #24]
   31384:	str	r0, [sp, #28]
   31388:	b	31398 <__assert_fail@plt+0x1fe94>
   3138c:	movw	r0, #1
   31390:	str	r0, [sp, #28]
   31394:	b	31398 <__assert_fail@plt+0x1fe94>
   31398:	ldr	r0, [sp, #28]
   3139c:	str	r0, [sp, #24]
   313a0:	bl	113fc <__errno_location@plt>
   313a4:	ldr	r0, [r0]
   313a8:	cmp	r0, #22
   313ac:	bne	313bc <__assert_fail@plt+0x1feb8>
   313b0:	movw	r0, #0
   313b4:	str	r0, [sp, #20]
   313b8:	b	313c8 <__assert_fail@plt+0x1fec4>
   313bc:	bl	113fc <__errno_location@plt>
   313c0:	ldr	r0, [r0]
   313c4:	str	r0, [sp, #20]
   313c8:	ldr	r0, [sp, #20]
   313cc:	ldr	r3, [fp, #20]
   313d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   313d4:	str	r0, [sp, #16]
   313d8:	mov	r0, r1
   313dc:	str	r3, [sp, #12]
   313e0:	bl	15c0c <__assert_fail@plt+0x4708>
   313e4:	ldr	r1, [sp, #24]
   313e8:	str	r0, [sp, #8]
   313ec:	mov	r0, r1
   313f0:	ldr	r1, [sp, #16]
   313f4:	movw	r2, #31131	; 0x799b
   313f8:	movt	r2, #3
   313fc:	ldr	r3, [sp, #12]
   31400:	ldr	ip, [sp, #8]
   31404:	str	ip, [sp]
   31408:	bl	1136c <error@plt>
   3140c:	ldr	r0, [sp, #48]	; 0x30
   31410:	ldr	r1, [sp, #52]	; 0x34
   31414:	sub	sp, fp, #16
   31418:	pop	{r4, r5, r6, sl, fp, pc}
   3141c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31420:	add	fp, sp, #24
   31424:	sub	sp, sp, #56	; 0x38
   31428:	ldr	r1, [fp, #12]
   3142c:	ldr	ip, [fp, #8]
   31430:	ldr	lr, [fp, #24]
   31434:	ldr	r4, [fp, #20]
   31438:	ldr	r5, [fp, #16]
   3143c:	str	r0, [fp, #-28]	; 0xffffffe4
   31440:	str	r3, [sp, #44]	; 0x2c
   31444:	str	r2, [sp, #40]	; 0x28
   31448:	str	r1, [sp, #36]	; 0x24
   3144c:	str	ip, [sp, #32]
   31450:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31454:	ldr	r2, [sp, #40]	; 0x28
   31458:	ldr	r3, [sp, #44]	; 0x2c
   3145c:	ldr	r1, [sp, #32]
   31460:	ldr	ip, [sp, #36]	; 0x24
   31464:	ldr	r6, [fp, #16]
   31468:	ldr	r7, [fp, #20]
   3146c:	ldr	r8, [fp, #24]
   31470:	mov	r9, sp
   31474:	str	r8, [r9, #16]
   31478:	str	r7, [r9, #12]
   3147c:	str	r6, [r9, #8]
   31480:	str	ip, [r9, #4]
   31484:	str	r1, [r9]
   31488:	mov	r1, #10
   3148c:	str	lr, [sp, #28]
   31490:	str	r4, [sp, #24]
   31494:	str	r5, [sp, #20]
   31498:	bl	311f8 <__assert_fail@plt+0x1fcf4>
   3149c:	sub	sp, fp, #24
   314a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   314a4:	push	{fp, lr}
   314a8:	mov	fp, sp
   314ac:	sub	sp, sp, #72	; 0x48
   314b0:	ldr	ip, [fp, #8]
   314b4:	str	r0, [fp, #-8]
   314b8:	str	r1, [fp, #-12]
   314bc:	str	r2, [fp, #-16]
   314c0:	str	r3, [fp, #-20]	; 0xffffffec
   314c4:	movw	r0, #0
   314c8:	str	r0, [sp, #28]
   314cc:	ldr	r1, [fp, #-16]
   314d0:	cmp	r0, r1
   314d4:	bgt	314e8 <__assert_fail@plt+0x1ffe4>
   314d8:	ldr	r0, [fp, #-16]
   314dc:	cmp	r0, #36	; 0x24
   314e0:	bgt	314e8 <__assert_fail@plt+0x1ffe4>
   314e4:	b	31508 <__assert_fail@plt+0x20004>
   314e8:	movw	r0, #32768	; 0x8000
   314ec:	movt	r0, #3
   314f0:	movw	r1, #32806	; 0x8026
   314f4:	movt	r1, #3
   314f8:	movw	r2, #85	; 0x55
   314fc:	movw	r3, #32822	; 0x8036
   31500:	movt	r3, #3
   31504:	bl	11504 <__assert_fail@plt>
   31508:	ldr	r0, [fp, #-12]
   3150c:	movw	r1, #0
   31510:	cmp	r0, r1
   31514:	beq	31524 <__assert_fail@plt+0x20020>
   31518:	ldr	r0, [fp, #-12]
   3151c:	str	r0, [sp, #12]
   31520:	b	31530 <__assert_fail@plt+0x2002c>
   31524:	sub	r0, fp, #24
   31528:	str	r0, [sp, #12]
   3152c:	b	31530 <__assert_fail@plt+0x2002c>
   31530:	ldr	r0, [sp, #12]
   31534:	str	r0, [fp, #-28]	; 0xffffffe4
   31538:	bl	113fc <__errno_location@plt>
   3153c:	mov	r1, #0
   31540:	str	r1, [r0]
   31544:	ldr	r0, [fp, #-8]
   31548:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3154c:	ldr	r2, [fp, #-16]
   31550:	bl	11444 <strtoimax@plt>
   31554:	str	r1, [sp, #36]	; 0x24
   31558:	str	r0, [sp, #32]
   3155c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31560:	ldr	r0, [r0]
   31564:	ldr	r1, [fp, #-8]
   31568:	cmp	r0, r1
   3156c:	bne	315d8 <__assert_fail@plt+0x200d4>
   31570:	ldr	r0, [fp, #8]
   31574:	movw	r1, #0
   31578:	cmp	r0, r1
   3157c:	beq	315c8 <__assert_fail@plt+0x200c4>
   31580:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31584:	ldr	r0, [r0]
   31588:	ldrb	r0, [r0]
   3158c:	cmp	r0, #0
   31590:	beq	315c8 <__assert_fail@plt+0x200c4>
   31594:	ldr	r0, [fp, #8]
   31598:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3159c:	ldr	r1, [r1]
   315a0:	ldrb	r1, [r1]
   315a4:	bl	113e4 <strchr@plt>
   315a8:	movw	r1, #0
   315ac:	cmp	r0, r1
   315b0:	beq	315c8 <__assert_fail@plt+0x200c4>
   315b4:	mov	r0, #0
   315b8:	str	r0, [sp, #36]	; 0x24
   315bc:	mov	r0, #1
   315c0:	str	r0, [sp, #32]
   315c4:	b	315d4 <__assert_fail@plt+0x200d0>
   315c8:	movw	r0, #4
   315cc:	str	r0, [fp, #-4]
   315d0:	b	31ac0 <__assert_fail@plt+0x205bc>
   315d4:	b	31610 <__assert_fail@plt+0x2010c>
   315d8:	bl	113fc <__errno_location@plt>
   315dc:	ldr	r0, [r0]
   315e0:	cmp	r0, #0
   315e4:	beq	3160c <__assert_fail@plt+0x20108>
   315e8:	bl	113fc <__errno_location@plt>
   315ec:	ldr	r0, [r0]
   315f0:	cmp	r0, #34	; 0x22
   315f4:	beq	31604 <__assert_fail@plt+0x20100>
   315f8:	movw	r0, #4
   315fc:	str	r0, [fp, #-4]
   31600:	b	31ac0 <__assert_fail@plt+0x205bc>
   31604:	movw	r0, #1
   31608:	str	r0, [sp, #28]
   3160c:	b	31610 <__assert_fail@plt+0x2010c>
   31610:	ldr	r0, [fp, #8]
   31614:	movw	r1, #0
   31618:	cmp	r0, r1
   3161c:	bne	31640 <__assert_fail@plt+0x2013c>
   31620:	ldr	r0, [sp, #32]
   31624:	ldr	r1, [sp, #36]	; 0x24
   31628:	ldr	r2, [fp, #-20]	; 0xffffffec
   3162c:	str	r1, [r2, #4]
   31630:	str	r0, [r2]
   31634:	ldr	r0, [sp, #28]
   31638:	str	r0, [fp, #-4]
   3163c:	b	31ac0 <__assert_fail@plt+0x205bc>
   31640:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31644:	ldr	r0, [r0]
   31648:	ldrb	r0, [r0]
   3164c:	cmp	r0, #0
   31650:	beq	31aa4 <__assert_fail@plt+0x205a0>
   31654:	movw	r0, #1024	; 0x400
   31658:	str	r0, [sp, #24]
   3165c:	movw	r0, #1
   31660:	str	r0, [sp, #20]
   31664:	ldr	r0, [fp, #8]
   31668:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3166c:	ldr	r1, [r1]
   31670:	ldrb	r1, [r1]
   31674:	bl	113e4 <strchr@plt>
   31678:	movw	r1, #0
   3167c:	cmp	r0, r1
   31680:	bne	316a8 <__assert_fail@plt+0x201a4>
   31684:	ldr	r0, [sp, #32]
   31688:	ldr	r1, [sp, #36]	; 0x24
   3168c:	ldr	r2, [fp, #-20]	; 0xffffffec
   31690:	str	r1, [r2, #4]
   31694:	str	r0, [r2]
   31698:	ldr	r0, [sp, #28]
   3169c:	orr	r0, r0, #2
   316a0:	str	r0, [fp, #-4]
   316a4:	b	31ac0 <__assert_fail@plt+0x205bc>
   316a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   316ac:	ldr	r0, [r0]
   316b0:	ldrb	r0, [r0]
   316b4:	sub	r0, r0, #69	; 0x45
   316b8:	cmp	r0, #47	; 0x2f
   316bc:	str	r0, [sp, #8]
   316c0:	bhi	3182c <__assert_fail@plt+0x20328>
   316c4:	add	r0, pc, #8
   316c8:	ldr	r1, [sp, #8]
   316cc:	ldr	r0, [r0, r1, lsl #2]
   316d0:	mov	pc, r0
   316d4:	muleq	r3, r4, r7
   316d8:	andeq	r1, r3, ip, lsr #16
   316dc:	muleq	r3, r4, r7
   316e0:	andeq	r1, r3, ip, lsr #16
   316e4:	andeq	r1, r3, ip, lsr #16
   316e8:	andeq	r1, r3, ip, lsr #16
   316ec:	muleq	r3, r4, r7
   316f0:	andeq	r1, r3, ip, lsr #16
   316f4:	muleq	r3, r4, r7
   316f8:	andeq	r1, r3, ip, lsr #16
   316fc:	andeq	r1, r3, ip, lsr #16
   31700:	muleq	r3, r4, r7
   31704:	andeq	r1, r3, ip, lsr #16
   31708:	andeq	r1, r3, ip, lsr #16
   3170c:	andeq	r1, r3, ip, lsr #16
   31710:	muleq	r3, r4, r7
   31714:	andeq	r1, r3, ip, lsr #16
   31718:	andeq	r1, r3, ip, lsr #16
   3171c:	andeq	r1, r3, ip, lsr #16
   31720:	andeq	r1, r3, ip, lsr #16
   31724:	muleq	r3, r4, r7
   31728:	muleq	r3, r4, r7
   3172c:	andeq	r1, r3, ip, lsr #16
   31730:	andeq	r1, r3, ip, lsr #16
   31734:	andeq	r1, r3, ip, lsr #16
   31738:	andeq	r1, r3, ip, lsr #16
   3173c:	andeq	r1, r3, ip, lsr #16
   31740:	andeq	r1, r3, ip, lsr #16
   31744:	andeq	r1, r3, ip, lsr #16
   31748:	andeq	r1, r3, ip, lsr #16
   3174c:	andeq	r1, r3, ip, lsr #16
   31750:	andeq	r1, r3, ip, lsr #16
   31754:	andeq	r1, r3, ip, lsr #16
   31758:	andeq	r1, r3, ip, lsr #16
   3175c:	muleq	r3, r4, r7
   31760:	andeq	r1, r3, ip, lsr #16
   31764:	andeq	r1, r3, ip, lsr #16
   31768:	andeq	r1, r3, ip, lsr #16
   3176c:	muleq	r3, r4, r7
   31770:	andeq	r1, r3, ip, lsr #16
   31774:	muleq	r3, r4, r7
   31778:	andeq	r1, r3, ip, lsr #16
   3177c:	andeq	r1, r3, ip, lsr #16
   31780:	andeq	r1, r3, ip, lsr #16
   31784:	andeq	r1, r3, ip, lsr #16
   31788:	andeq	r1, r3, ip, lsr #16
   3178c:	andeq	r1, r3, ip, lsr #16
   31790:	muleq	r3, r4, r7
   31794:	ldr	r0, [fp, #8]
   31798:	movw	r1, #48	; 0x30
   3179c:	bl	113e4 <strchr@plt>
   317a0:	movw	r1, #0
   317a4:	cmp	r0, r1
   317a8:	beq	31828 <__assert_fail@plt+0x20324>
   317ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   317b0:	ldr	r0, [r0]
   317b4:	ldrb	r0, [r0, #1]
   317b8:	mov	r1, r0
   317bc:	cmp	r0, #66	; 0x42
   317c0:	str	r1, [sp, #4]
   317c4:	beq	31810 <__assert_fail@plt+0x2030c>
   317c8:	b	317cc <__assert_fail@plt+0x202c8>
   317cc:	ldr	r0, [sp, #4]
   317d0:	cmp	r0, #68	; 0x44
   317d4:	beq	31810 <__assert_fail@plt+0x2030c>
   317d8:	b	317dc <__assert_fail@plt+0x202d8>
   317dc:	ldr	r0, [sp, #4]
   317e0:	cmp	r0, #105	; 0x69
   317e4:	bne	31824 <__assert_fail@plt+0x20320>
   317e8:	b	317ec <__assert_fail@plt+0x202e8>
   317ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   317f0:	ldr	r0, [r0]
   317f4:	ldrb	r0, [r0, #2]
   317f8:	cmp	r0, #66	; 0x42
   317fc:	bne	3180c <__assert_fail@plt+0x20308>
   31800:	ldr	r0, [sp, #20]
   31804:	add	r0, r0, #2
   31808:	str	r0, [sp, #20]
   3180c:	b	31824 <__assert_fail@plt+0x20320>
   31810:	movw	r0, #1000	; 0x3e8
   31814:	str	r0, [sp, #24]
   31818:	ldr	r0, [sp, #20]
   3181c:	add	r0, r0, #1
   31820:	str	r0, [sp, #20]
   31824:	b	31828 <__assert_fail@plt+0x20324>
   31828:	b	3182c <__assert_fail@plt+0x20328>
   3182c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31830:	ldr	r0, [r0]
   31834:	ldrb	r0, [r0]
   31838:	sub	r0, r0, #66	; 0x42
   3183c:	cmp	r0, #53	; 0x35
   31840:	str	r0, [sp]
   31844:	bhi	31a38 <__assert_fail@plt+0x20534>
   31848:	add	r0, pc, #8
   3184c:	ldr	r1, [sp]
   31850:	ldr	r0, [r0, r1, lsl #2]
   31854:	mov	pc, r0
   31858:	andeq	r1, r3, r4, asr #18
   3185c:	andeq	r1, r3, r8, lsr sl
   31860:	andeq	r1, r3, r8, lsr sl
   31864:	andeq	r1, r3, r4, ror #18
   31868:	andeq	r1, r3, r8, lsr sl
   3186c:	andeq	r1, r3, ip, ror r9
   31870:	andeq	r1, r3, r8, lsr sl
   31874:	andeq	r1, r3, r8, lsr sl
   31878:	andeq	r1, r3, r8, lsr sl
   3187c:	muleq	r3, r4, r9
   31880:	andeq	r1, r3, r8, lsr sl
   31884:	andeq	r1, r3, ip, lsr #19
   31888:	andeq	r1, r3, r8, lsr sl
   3188c:	andeq	r1, r3, r8, lsr sl
   31890:	andeq	r1, r3, r4, asr #19
   31894:	andeq	r1, r3, r8, lsr sl
   31898:	andeq	r1, r3, r8, lsr sl
   3189c:	andeq	r1, r3, r8, lsr sl
   318a0:	ldrdeq	r1, [r3], -ip
   318a4:	andeq	r1, r3, r8, lsr sl
   318a8:	andeq	r1, r3, r8, lsr sl
   318ac:	andeq	r1, r3, r8, lsr sl
   318b0:	andeq	r1, r3, r8, lsr sl
   318b4:	andeq	r1, r3, r8, lsl #20
   318b8:	andeq	r1, r3, r0, lsr #20
   318bc:	andeq	r1, r3, r8, lsr sl
   318c0:	andeq	r1, r3, r8, lsr sl
   318c4:	andeq	r1, r3, r8, lsr sl
   318c8:	andeq	r1, r3, r8, lsr sl
   318cc:	andeq	r1, r3, r8, lsr sl
   318d0:	andeq	r1, r3, r8, lsr sl
   318d4:	andeq	r1, r3, r8, lsr sl
   318d8:	andeq	r1, r3, r0, lsr r9
   318dc:	andeq	r1, r3, r8, asr r9
   318e0:	andeq	r1, r3, r8, lsr sl
   318e4:	andeq	r1, r3, r8, lsr sl
   318e8:	andeq	r1, r3, r8, lsr sl
   318ec:	andeq	r1, r3, ip, ror r9
   318f0:	andeq	r1, r3, r8, lsr sl
   318f4:	andeq	r1, r3, r8, lsr sl
   318f8:	andeq	r1, r3, r8, lsr sl
   318fc:	muleq	r3, r4, r9
   31900:	andeq	r1, r3, r8, lsr sl
   31904:	andeq	r1, r3, ip, lsr #19
   31908:	andeq	r1, r3, r8, lsr sl
   3190c:	andeq	r1, r3, r8, lsr sl
   31910:	andeq	r1, r3, r8, lsr sl
   31914:	andeq	r1, r3, r8, lsr sl
   31918:	andeq	r1, r3, r8, lsr sl
   3191c:	andeq	r1, r3, r8, lsr sl
   31920:	ldrdeq	r1, [r3], -ip
   31924:	andeq	r1, r3, r8, lsr sl
   31928:	andeq	r1, r3, r8, lsr sl
   3192c:	strdeq	r1, [r3], -r4
   31930:	add	r0, sp, #32
   31934:	movw	r1, #512	; 0x200
   31938:	bl	31acc <__assert_fail@plt+0x205c8>
   3193c:	str	r0, [sp, #16]
   31940:	b	31a5c <__assert_fail@plt+0x20558>
   31944:	add	r0, sp, #32
   31948:	movw	r1, #1024	; 0x400
   3194c:	bl	31acc <__assert_fail@plt+0x205c8>
   31950:	str	r0, [sp, #16]
   31954:	b	31a5c <__assert_fail@plt+0x20558>
   31958:	movw	r0, #0
   3195c:	str	r0, [sp, #16]
   31960:	b	31a5c <__assert_fail@plt+0x20558>
   31964:	ldr	r1, [sp, #24]
   31968:	add	r0, sp, #32
   3196c:	movw	r2, #6
   31970:	bl	33450 <__assert_fail@plt+0x21f4c>
   31974:	str	r0, [sp, #16]
   31978:	b	31a5c <__assert_fail@plt+0x20558>
   3197c:	ldr	r1, [sp, #24]
   31980:	add	r0, sp, #32
   31984:	movw	r2, #3
   31988:	bl	33450 <__assert_fail@plt+0x21f4c>
   3198c:	str	r0, [sp, #16]
   31990:	b	31a5c <__assert_fail@plt+0x20558>
   31994:	ldr	r1, [sp, #24]
   31998:	add	r0, sp, #32
   3199c:	movw	r2, #1
   319a0:	bl	33450 <__assert_fail@plt+0x21f4c>
   319a4:	str	r0, [sp, #16]
   319a8:	b	31a5c <__assert_fail@plt+0x20558>
   319ac:	ldr	r1, [sp, #24]
   319b0:	add	r0, sp, #32
   319b4:	movw	r2, #2
   319b8:	bl	33450 <__assert_fail@plt+0x21f4c>
   319bc:	str	r0, [sp, #16]
   319c0:	b	31a5c <__assert_fail@plt+0x20558>
   319c4:	ldr	r1, [sp, #24]
   319c8:	add	r0, sp, #32
   319cc:	movw	r2, #5
   319d0:	bl	33450 <__assert_fail@plt+0x21f4c>
   319d4:	str	r0, [sp, #16]
   319d8:	b	31a5c <__assert_fail@plt+0x20558>
   319dc:	ldr	r1, [sp, #24]
   319e0:	add	r0, sp, #32
   319e4:	movw	r2, #4
   319e8:	bl	33450 <__assert_fail@plt+0x21f4c>
   319ec:	str	r0, [sp, #16]
   319f0:	b	31a5c <__assert_fail@plt+0x20558>
   319f4:	add	r0, sp, #32
   319f8:	movw	r1, #2
   319fc:	bl	31acc <__assert_fail@plt+0x205c8>
   31a00:	str	r0, [sp, #16]
   31a04:	b	31a5c <__assert_fail@plt+0x20558>
   31a08:	ldr	r1, [sp, #24]
   31a0c:	add	r0, sp, #32
   31a10:	movw	r2, #8
   31a14:	bl	33450 <__assert_fail@plt+0x21f4c>
   31a18:	str	r0, [sp, #16]
   31a1c:	b	31a5c <__assert_fail@plt+0x20558>
   31a20:	ldr	r1, [sp, #24]
   31a24:	add	r0, sp, #32
   31a28:	movw	r2, #7
   31a2c:	bl	33450 <__assert_fail@plt+0x21f4c>
   31a30:	str	r0, [sp, #16]
   31a34:	b	31a5c <__assert_fail@plt+0x20558>
   31a38:	ldr	r0, [sp, #32]
   31a3c:	ldr	r1, [sp, #36]	; 0x24
   31a40:	ldr	r2, [fp, #-20]	; 0xffffffec
   31a44:	str	r1, [r2, #4]
   31a48:	str	r0, [r2]
   31a4c:	ldr	r0, [sp, #28]
   31a50:	orr	r0, r0, #2
   31a54:	str	r0, [fp, #-4]
   31a58:	b	31ac0 <__assert_fail@plt+0x205bc>
   31a5c:	ldr	r0, [sp, #16]
   31a60:	ldr	r1, [sp, #28]
   31a64:	orr	r0, r1, r0
   31a68:	str	r0, [sp, #28]
   31a6c:	ldr	r0, [sp, #20]
   31a70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31a74:	ldr	r2, [r1]
   31a78:	add	r0, r2, r0
   31a7c:	str	r0, [r1]
   31a80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31a84:	ldr	r0, [r0]
   31a88:	ldrsb	r0, [r0]
   31a8c:	cmp	r0, #0
   31a90:	beq	31aa0 <__assert_fail@plt+0x2059c>
   31a94:	ldr	r0, [sp, #28]
   31a98:	orr	r0, r0, #2
   31a9c:	str	r0, [sp, #28]
   31aa0:	b	31aa4 <__assert_fail@plt+0x205a0>
   31aa4:	ldr	r0, [sp, #32]
   31aa8:	ldr	r1, [sp, #36]	; 0x24
   31aac:	ldr	r2, [fp, #-20]	; 0xffffffec
   31ab0:	str	r1, [r2, #4]
   31ab4:	str	r0, [r2]
   31ab8:	ldr	r0, [sp, #28]
   31abc:	str	r0, [fp, #-4]
   31ac0:	ldr	r0, [fp, #-4]
   31ac4:	mov	sp, fp
   31ac8:	pop	{fp, pc}
   31acc:	push	{fp, lr}
   31ad0:	mov	fp, sp
   31ad4:	sub	sp, sp, #112	; 0x70
   31ad8:	str	r0, [fp, #-8]
   31adc:	str	r1, [fp, #-12]
   31ae0:	b	31fc8 <__assert_fail@plt+0x20ac4>
   31ae4:	b	31ae8 <__assert_fail@plt+0x205e4>
   31ae8:	ldr	r0, [fp, #-12]
   31aec:	cmp	r0, #0
   31af0:	bge	31c50 <__assert_fail@plt+0x2074c>
   31af4:	ldr	r0, [fp, #-8]
   31af8:	ldr	r0, [r0, #4]
   31afc:	cmn	r0, #1
   31b00:	bgt	31ba8 <__assert_fail@plt+0x206a4>
   31b04:	b	31b08 <__assert_fail@plt+0x20604>
   31b08:	b	31b0c <__assert_fail@plt+0x20608>
   31b0c:	ldr	r0, [fp, #-8]
   31b10:	ldr	r1, [r0]
   31b14:	ldr	r0, [r0, #4]
   31b18:	ldr	r2, [fp, #-12]
   31b1c:	mov	r3, #127	; 0x7f
   31b20:	sdiv	r2, r3, r2
   31b24:	subs	r1, r1, r2
   31b28:	sbcs	r0, r0, r2, asr #31
   31b2c:	blt	31d28 <__assert_fail@plt+0x20824>
   31b30:	b	31d4c <__assert_fail@plt+0x20848>
   31b34:	b	31b38 <__assert_fail@plt+0x20634>
   31b38:	ldr	r0, [pc, #4092]	; 32b3c <__assert_fail@plt+0x21638>
   31b3c:	ldr	r1, [fp, #-12]
   31b40:	cmp	r1, r0
   31b44:	blt	31b5c <__assert_fail@plt+0x20658>
   31b48:	b	31b68 <__assert_fail@plt+0x20664>
   31b4c:	ldr	r0, [fp, #-12]
   31b50:	movw	r1, #0
   31b54:	cmp	r1, r0
   31b58:	bge	31b68 <__assert_fail@plt+0x20664>
   31b5c:	movw	r0, #0
   31b60:	str	r0, [fp, #-28]	; 0xffffffe4
   31b64:	b	31b80 <__assert_fail@plt+0x2067c>
   31b68:	ldr	r0, [fp, #-12]
   31b6c:	movw	r1, #0
   31b70:	sub	r0, r1, r0
   31b74:	movw	r1, #127	; 0x7f
   31b78:	sdiv	r0, r1, r0
   31b7c:	str	r0, [fp, #-28]	; 0xffffffe4
   31b80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31b84:	ldr	r1, [fp, #-8]
   31b88:	ldr	r2, [r1]
   31b8c:	ldr	r1, [r1, #4]
   31b90:	mvn	r1, r1
   31b94:	mvn	r2, r2
   31b98:	subs	r2, r2, r0
   31b9c:	sbcs	r0, r1, r0, asr #31
   31ba0:	bge	31d28 <__assert_fail@plt+0x20824>
   31ba4:	b	31d4c <__assert_fail@plt+0x20848>
   31ba8:	b	31bac <__assert_fail@plt+0x206a8>
   31bac:	b	31c28 <__assert_fail@plt+0x20724>
   31bb0:	b	31c28 <__assert_fail@plt+0x20724>
   31bb4:	ldr	r0, [fp, #-12]
   31bb8:	cmn	r0, #1
   31bbc:	bne	31c28 <__assert_fail@plt+0x20724>
   31bc0:	b	31bc4 <__assert_fail@plt+0x206c0>
   31bc4:	ldr	r0, [fp, #-8]
   31bc8:	ldr	r1, [r0]
   31bcc:	ldr	r0, [r0, #4]
   31bd0:	subs	r1, r1, #128	; 0x80
   31bd4:	sbc	r0, r0, #0
   31bd8:	rsbs	r1, r1, #0
   31bdc:	rscs	r0, r0, #0
   31be0:	blt	31d28 <__assert_fail@plt+0x20824>
   31be4:	b	31d4c <__assert_fail@plt+0x20848>
   31be8:	ldr	r0, [fp, #-8]
   31bec:	ldr	r1, [r0]
   31bf0:	ldr	r0, [r0, #4]
   31bf4:	subs	r1, r1, #1
   31bf8:	sbcs	r0, r0, #0
   31bfc:	blt	31d4c <__assert_fail@plt+0x20848>
   31c00:	b	31c04 <__assert_fail@plt+0x20700>
   31c04:	ldr	r0, [fp, #-8]
   31c08:	ldr	r1, [r0]
   31c0c:	ldr	r0, [r0, #4]
   31c10:	subs	r1, r1, #1
   31c14:	sbc	r0, r0, #0
   31c18:	rsbs	r1, r1, #127	; 0x7f
   31c1c:	rscs	r0, r0, #0
   31c20:	blt	31d28 <__assert_fail@plt+0x20824>
   31c24:	b	31d4c <__assert_fail@plt+0x20848>
   31c28:	ldr	r0, [fp, #-12]
   31c2c:	mvn	r1, #127	; 0x7f
   31c30:	sdiv	r0, r1, r0
   31c34:	ldr	r1, [fp, #-8]
   31c38:	ldr	r2, [r1]
   31c3c:	ldr	r1, [r1, #4]
   31c40:	subs	r2, r0, r2
   31c44:	rscs	r0, r1, r0, asr #31
   31c48:	blt	31d28 <__assert_fail@plt+0x20824>
   31c4c:	b	31d4c <__assert_fail@plt+0x20848>
   31c50:	ldr	r0, [fp, #-12]
   31c54:	cmp	r0, #0
   31c58:	bne	31c60 <__assert_fail@plt+0x2075c>
   31c5c:	b	31d4c <__assert_fail@plt+0x20848>
   31c60:	ldr	r0, [fp, #-8]
   31c64:	ldr	r0, [r0, #4]
   31c68:	cmn	r0, #1
   31c6c:	bgt	31d00 <__assert_fail@plt+0x207fc>
   31c70:	b	31c74 <__assert_fail@plt+0x20770>
   31c74:	b	31c78 <__assert_fail@plt+0x20774>
   31c78:	b	31cd4 <__assert_fail@plt+0x207d0>
   31c7c:	b	31cd4 <__assert_fail@plt+0x207d0>
   31c80:	ldr	r0, [fp, #-8]
   31c84:	ldr	r1, [r0]
   31c88:	ldr	r0, [r0, #4]
   31c8c:	and	r0, r1, r0
   31c90:	cmn	r0, #1
   31c94:	bne	31cd4 <__assert_fail@plt+0x207d0>
   31c98:	b	31c9c <__assert_fail@plt+0x20798>
   31c9c:	b	31ca0 <__assert_fail@plt+0x2079c>
   31ca0:	ldr	r0, [fp, #-12]
   31ca4:	mvn	r1, #127	; 0x7f
   31ca8:	add	r0, r0, r1
   31cac:	movw	r1, #0
   31cb0:	cmp	r1, r0
   31cb4:	blt	31d28 <__assert_fail@plt+0x20824>
   31cb8:	b	31d4c <__assert_fail@plt+0x20848>
   31cbc:	ldr	r0, [fp, #-12]
   31cc0:	sub	r0, r0, #1
   31cc4:	movw	r1, #127	; 0x7f
   31cc8:	cmp	r1, r0
   31ccc:	blt	31d28 <__assert_fail@plt+0x20824>
   31cd0:	b	31d4c <__assert_fail@plt+0x20848>
   31cd4:	ldr	r0, [fp, #-8]
   31cd8:	ldr	r2, [r0]
   31cdc:	ldr	r3, [r0, #4]
   31ce0:	mvn	r0, #127	; 0x7f
   31ce4:	mvn	r1, #0
   31ce8:	bl	36ab8 <__assert_fail@plt+0x255b4>
   31cec:	ldr	r2, [fp, #-12]
   31cf0:	subs	r0, r0, r2
   31cf4:	sbcs	r1, r1, r2, asr #31
   31cf8:	blt	31d28 <__assert_fail@plt+0x20824>
   31cfc:	b	31d4c <__assert_fail@plt+0x20848>
   31d00:	ldr	r0, [fp, #-12]
   31d04:	mov	r1, #127	; 0x7f
   31d08:	sdiv	r0, r1, r0
   31d0c:	ldr	r1, [fp, #-8]
   31d10:	ldr	r2, [r1]
   31d14:	ldr	r1, [r1, #4]
   31d18:	subs	r2, r0, r2
   31d1c:	rscs	r0, r1, r0, asr #31
   31d20:	bge	31d4c <__assert_fail@plt+0x20848>
   31d24:	b	31d28 <__assert_fail@plt+0x20824>
   31d28:	ldr	r0, [fp, #-8]
   31d2c:	ldr	r0, [r0]
   31d30:	ldr	r1, [fp, #-12]
   31d34:	mul	r0, r0, r1
   31d38:	sxtb	r0, r0
   31d3c:	asr	r1, r0, #31
   31d40:	str	r0, [fp, #-24]	; 0xffffffe8
   31d44:	str	r1, [fp, #-20]	; 0xffffffec
   31d48:	b	333ec <__assert_fail@plt+0x21ee8>
   31d4c:	ldr	r0, [fp, #-8]
   31d50:	ldr	r0, [r0]
   31d54:	ldr	r1, [fp, #-12]
   31d58:	mul	r0, r0, r1
   31d5c:	sxtb	r0, r0
   31d60:	asr	r1, r0, #31
   31d64:	str	r0, [fp, #-24]	; 0xffffffe8
   31d68:	str	r1, [fp, #-20]	; 0xffffffec
   31d6c:	b	33420 <__assert_fail@plt+0x21f1c>
   31d70:	ldr	r0, [fp, #-12]
   31d74:	cmp	r0, #0
   31d78:	bge	31ec0 <__assert_fail@plt+0x209bc>
   31d7c:	ldr	r0, [fp, #-8]
   31d80:	ldr	r0, [r0, #4]
   31d84:	cmn	r0, #1
   31d88:	bgt	31e30 <__assert_fail@plt+0x2092c>
   31d8c:	b	31d90 <__assert_fail@plt+0x2088c>
   31d90:	b	31d94 <__assert_fail@plt+0x20890>
   31d94:	ldr	r0, [fp, #-8]
   31d98:	ldr	r1, [r0]
   31d9c:	ldr	r0, [r0, #4]
   31da0:	ldr	r2, [fp, #-12]
   31da4:	mov	r3, #255	; 0xff
   31da8:	sdiv	r2, r3, r2
   31dac:	subs	r1, r1, r2
   31db0:	sbcs	r0, r0, r2, asr #31
   31db4:	blt	31f80 <__assert_fail@plt+0x20a7c>
   31db8:	b	31fa4 <__assert_fail@plt+0x20aa0>
   31dbc:	b	31dc0 <__assert_fail@plt+0x208bc>
   31dc0:	ldr	r0, [pc, #3444]	; 32b3c <__assert_fail@plt+0x21638>
   31dc4:	ldr	r1, [fp, #-12]
   31dc8:	cmp	r1, r0
   31dcc:	blt	31de4 <__assert_fail@plt+0x208e0>
   31dd0:	b	31df0 <__assert_fail@plt+0x208ec>
   31dd4:	ldr	r0, [fp, #-12]
   31dd8:	movw	r1, #0
   31ddc:	cmp	r1, r0
   31de0:	bge	31df0 <__assert_fail@plt+0x208ec>
   31de4:	movw	r0, #0
   31de8:	str	r0, [fp, #-32]	; 0xffffffe0
   31dec:	b	31e08 <__assert_fail@plt+0x20904>
   31df0:	ldr	r0, [fp, #-12]
   31df4:	movw	r1, #0
   31df8:	sub	r0, r1, r0
   31dfc:	movw	r1, #255	; 0xff
   31e00:	sdiv	r0, r1, r0
   31e04:	str	r0, [fp, #-32]	; 0xffffffe0
   31e08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31e0c:	ldr	r1, [fp, #-8]
   31e10:	ldr	r2, [r1]
   31e14:	ldr	r1, [r1, #4]
   31e18:	mvn	r1, r1
   31e1c:	mvn	r2, r2
   31e20:	subs	r2, r2, r0
   31e24:	sbcs	r0, r1, r0, asr #31
   31e28:	bge	31f80 <__assert_fail@plt+0x20a7c>
   31e2c:	b	31fa4 <__assert_fail@plt+0x20aa0>
   31e30:	b	31e34 <__assert_fail@plt+0x20930>
   31e34:	b	31ea4 <__assert_fail@plt+0x209a0>
   31e38:	b	31ea4 <__assert_fail@plt+0x209a0>
   31e3c:	ldr	r0, [fp, #-12]
   31e40:	cmn	r0, #1
   31e44:	bne	31ea4 <__assert_fail@plt+0x209a0>
   31e48:	b	31e4c <__assert_fail@plt+0x20948>
   31e4c:	ldr	r0, [fp, #-8]
   31e50:	ldr	r1, [r0]
   31e54:	ldr	r0, [r0, #4]
   31e58:	rsbs	r1, r1, #0
   31e5c:	rscs	r0, r0, #0
   31e60:	blt	31f80 <__assert_fail@plt+0x20a7c>
   31e64:	b	31fa4 <__assert_fail@plt+0x20aa0>
   31e68:	ldr	r0, [fp, #-8]
   31e6c:	ldr	r1, [r0]
   31e70:	ldr	r0, [r0, #4]
   31e74:	subs	r1, r1, #1
   31e78:	sbcs	r0, r0, #0
   31e7c:	blt	31fa4 <__assert_fail@plt+0x20aa0>
   31e80:	b	31e84 <__assert_fail@plt+0x20980>
   31e84:	ldr	r0, [fp, #-8]
   31e88:	ldr	r1, [r0]
   31e8c:	ldr	r0, [r0, #4]
   31e90:	subs	r1, r1, #1
   31e94:	sbc	r0, r0, #0
   31e98:	cmn	r0, #1
   31e9c:	bgt	31f80 <__assert_fail@plt+0x20a7c>
   31ea0:	b	31fa4 <__assert_fail@plt+0x20aa0>
   31ea4:	ldr	r0, [fp, #-8]
   31ea8:	ldr	r1, [r0]
   31eac:	ldr	r0, [r0, #4]
   31eb0:	rsbs	r1, r1, #0
   31eb4:	rscs	r0, r0, #0
   31eb8:	blt	31f80 <__assert_fail@plt+0x20a7c>
   31ebc:	b	31fa4 <__assert_fail@plt+0x20aa0>
   31ec0:	ldr	r0, [fp, #-12]
   31ec4:	cmp	r0, #0
   31ec8:	bne	31ed0 <__assert_fail@plt+0x209cc>
   31ecc:	b	31fa4 <__assert_fail@plt+0x20aa0>
   31ed0:	ldr	r0, [fp, #-8]
   31ed4:	ldr	r0, [r0, #4]
   31ed8:	cmn	r0, #1
   31edc:	bgt	31f58 <__assert_fail@plt+0x20a54>
   31ee0:	b	31ee4 <__assert_fail@plt+0x209e0>
   31ee4:	b	31ee8 <__assert_fail@plt+0x209e4>
   31ee8:	b	31f40 <__assert_fail@plt+0x20a3c>
   31eec:	b	31f40 <__assert_fail@plt+0x20a3c>
   31ef0:	ldr	r0, [fp, #-8]
   31ef4:	ldr	r1, [r0]
   31ef8:	ldr	r0, [r0, #4]
   31efc:	and	r0, r1, r0
   31f00:	cmn	r0, #1
   31f04:	bne	31f40 <__assert_fail@plt+0x20a3c>
   31f08:	b	31f0c <__assert_fail@plt+0x20a08>
   31f0c:	b	31f10 <__assert_fail@plt+0x20a0c>
   31f10:	ldr	r0, [fp, #-12]
   31f14:	add	r0, r0, #0
   31f18:	movw	r1, #0
   31f1c:	cmp	r1, r0
   31f20:	blt	31f80 <__assert_fail@plt+0x20a7c>
   31f24:	b	31fa4 <__assert_fail@plt+0x20aa0>
   31f28:	ldr	r0, [fp, #-12]
   31f2c:	sub	r0, r0, #1
   31f30:	mvn	r1, #0
   31f34:	cmp	r1, r0
   31f38:	blt	31f80 <__assert_fail@plt+0x20a7c>
   31f3c:	b	31fa4 <__assert_fail@plt+0x20aa0>
   31f40:	ldr	r0, [fp, #-12]
   31f44:	rsbs	r1, r0, #0
   31f48:	mov	r2, #0
   31f4c:	sbcs	r0, r2, r0, asr #31
   31f50:	blt	31f80 <__assert_fail@plt+0x20a7c>
   31f54:	b	31fa4 <__assert_fail@plt+0x20aa0>
   31f58:	ldr	r0, [fp, #-12]
   31f5c:	mov	r1, #255	; 0xff
   31f60:	sdiv	r0, r1, r0
   31f64:	ldr	r1, [fp, #-8]
   31f68:	ldr	r2, [r1]
   31f6c:	ldr	r1, [r1, #4]
   31f70:	subs	r2, r0, r2
   31f74:	rscs	r0, r1, r0, asr #31
   31f78:	bge	31fa4 <__assert_fail@plt+0x20aa0>
   31f7c:	b	31f80 <__assert_fail@plt+0x20a7c>
   31f80:	ldr	r0, [fp, #-8]
   31f84:	ldr	r0, [r0]
   31f88:	ldr	r1, [fp, #-12]
   31f8c:	mul	r0, r0, r1
   31f90:	uxtb	r0, r0
   31f94:	mov	r1, #0
   31f98:	str	r1, [fp, #-20]	; 0xffffffec
   31f9c:	str	r0, [fp, #-24]	; 0xffffffe8
   31fa0:	b	333ec <__assert_fail@plt+0x21ee8>
   31fa4:	ldr	r0, [fp, #-8]
   31fa8:	ldr	r0, [r0]
   31fac:	ldr	r1, [fp, #-12]
   31fb0:	mul	r0, r0, r1
   31fb4:	uxtb	r0, r0
   31fb8:	mov	r1, #0
   31fbc:	str	r1, [fp, #-20]	; 0xffffffec
   31fc0:	str	r0, [fp, #-24]	; 0xffffffe8
   31fc4:	b	33420 <__assert_fail@plt+0x21f1c>
   31fc8:	b	324bc <__assert_fail@plt+0x20fb8>
   31fcc:	b	31fd0 <__assert_fail@plt+0x20acc>
   31fd0:	ldr	r0, [fp, #-12]
   31fd4:	cmp	r0, #0
   31fd8:	bge	32140 <__assert_fail@plt+0x20c3c>
   31fdc:	ldr	r0, [fp, #-8]
   31fe0:	ldr	r0, [r0, #4]
   31fe4:	cmn	r0, #1
   31fe8:	bgt	32090 <__assert_fail@plt+0x20b8c>
   31fec:	b	31ff0 <__assert_fail@plt+0x20aec>
   31ff0:	b	31ff4 <__assert_fail@plt+0x20af0>
   31ff4:	ldr	r0, [fp, #-8]
   31ff8:	ldr	r1, [r0]
   31ffc:	ldr	r0, [r0, #4]
   32000:	ldr	r2, [fp, #-12]
   32004:	movw	r3, #32767	; 0x7fff
   32008:	sdiv	r2, r3, r2
   3200c:	subs	r1, r1, r2
   32010:	sbcs	r0, r0, r2, asr #31
   32014:	blt	3221c <__assert_fail@plt+0x20d18>
   32018:	b	32240 <__assert_fail@plt+0x20d3c>
   3201c:	b	32020 <__assert_fail@plt+0x20b1c>
   32020:	ldr	r0, [pc, #2836]	; 32b3c <__assert_fail@plt+0x21638>
   32024:	ldr	r1, [fp, #-12]
   32028:	cmp	r1, r0
   3202c:	blt	32044 <__assert_fail@plt+0x20b40>
   32030:	b	32050 <__assert_fail@plt+0x20b4c>
   32034:	ldr	r0, [fp, #-12]
   32038:	movw	r1, #0
   3203c:	cmp	r1, r0
   32040:	bge	32050 <__assert_fail@plt+0x20b4c>
   32044:	movw	r0, #0
   32048:	str	r0, [fp, #-36]	; 0xffffffdc
   3204c:	b	32068 <__assert_fail@plt+0x20b64>
   32050:	ldr	r0, [fp, #-12]
   32054:	movw	r1, #0
   32058:	sub	r0, r1, r0
   3205c:	movw	r1, #32767	; 0x7fff
   32060:	sdiv	r0, r1, r0
   32064:	str	r0, [fp, #-36]	; 0xffffffdc
   32068:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3206c:	ldr	r1, [fp, #-8]
   32070:	ldr	r2, [r1]
   32074:	ldr	r1, [r1, #4]
   32078:	mvn	r1, r1
   3207c:	mvn	r2, r2
   32080:	subs	r2, r2, r0
   32084:	sbcs	r0, r1, r0, asr #31
   32088:	bge	3221c <__assert_fail@plt+0x20d18>
   3208c:	b	32240 <__assert_fail@plt+0x20d3c>
   32090:	b	32094 <__assert_fail@plt+0x20b90>
   32094:	b	32114 <__assert_fail@plt+0x20c10>
   32098:	b	32114 <__assert_fail@plt+0x20c10>
   3209c:	ldr	r0, [fp, #-12]
   320a0:	cmn	r0, #1
   320a4:	bne	32114 <__assert_fail@plt+0x20c10>
   320a8:	b	320ac <__assert_fail@plt+0x20ba8>
   320ac:	ldr	r0, [fp, #-8]
   320b0:	ldr	r1, [r0]
   320b4:	ldr	r0, [r0, #4]
   320b8:	subs	r1, r1, #32768	; 0x8000
   320bc:	sbc	r0, r0, #0
   320c0:	rsbs	r1, r1, #0
   320c4:	rscs	r0, r0, #0
   320c8:	blt	3221c <__assert_fail@plt+0x20d18>
   320cc:	b	32240 <__assert_fail@plt+0x20d3c>
   320d0:	ldr	r0, [fp, #-8]
   320d4:	ldr	r1, [r0]
   320d8:	ldr	r0, [r0, #4]
   320dc:	subs	r1, r1, #1
   320e0:	sbcs	r0, r0, #0
   320e4:	blt	32240 <__assert_fail@plt+0x20d3c>
   320e8:	b	320ec <__assert_fail@plt+0x20be8>
   320ec:	ldr	r0, [fp, #-8]
   320f0:	ldr	r1, [r0]
   320f4:	ldr	r0, [r0, #4]
   320f8:	subs	r1, r1, #1
   320fc:	sbc	r0, r0, #0
   32100:	movw	r2, #32767	; 0x7fff
   32104:	subs	r1, r2, r1
   32108:	rscs	r0, r0, #0
   3210c:	blt	3221c <__assert_fail@plt+0x20d18>
   32110:	b	32240 <__assert_fail@plt+0x20d3c>
   32114:	ldr	r0, [fp, #-12]
   32118:	movw	r1, #32768	; 0x8000
   3211c:	movt	r1, #65535	; 0xffff
   32120:	sdiv	r0, r1, r0
   32124:	ldr	r1, [fp, #-8]
   32128:	ldr	r2, [r1]
   3212c:	ldr	r1, [r1, #4]
   32130:	subs	r2, r0, r2
   32134:	rscs	r0, r1, r0, asr #31
   32138:	blt	3221c <__assert_fail@plt+0x20d18>
   3213c:	b	32240 <__assert_fail@plt+0x20d3c>
   32140:	ldr	r0, [fp, #-12]
   32144:	cmp	r0, #0
   32148:	bne	32150 <__assert_fail@plt+0x20c4c>
   3214c:	b	32240 <__assert_fail@plt+0x20d3c>
   32150:	ldr	r0, [fp, #-8]
   32154:	ldr	r0, [r0, #4]
   32158:	cmn	r0, #1
   3215c:	bgt	321f4 <__assert_fail@plt+0x20cf0>
   32160:	b	32164 <__assert_fail@plt+0x20c60>
   32164:	b	32168 <__assert_fail@plt+0x20c64>
   32168:	b	321c4 <__assert_fail@plt+0x20cc0>
   3216c:	b	321c4 <__assert_fail@plt+0x20cc0>
   32170:	ldr	r0, [fp, #-8]
   32174:	ldr	r1, [r0]
   32178:	ldr	r0, [r0, #4]
   3217c:	and	r0, r1, r0
   32180:	cmn	r0, #1
   32184:	bne	321c4 <__assert_fail@plt+0x20cc0>
   32188:	b	3218c <__assert_fail@plt+0x20c88>
   3218c:	b	32190 <__assert_fail@plt+0x20c8c>
   32190:	ldr	r0, [pc, #4032]	; 33158 <__assert_fail@plt+0x21c54>
   32194:	ldr	r1, [fp, #-12]
   32198:	add	r0, r1, r0
   3219c:	movw	r1, #0
   321a0:	cmp	r1, r0
   321a4:	blt	3221c <__assert_fail@plt+0x20d18>
   321a8:	b	32240 <__assert_fail@plt+0x20d3c>
   321ac:	ldr	r0, [fp, #-12]
   321b0:	sub	r0, r0, #1
   321b4:	movw	r1, #32767	; 0x7fff
   321b8:	cmp	r1, r0
   321bc:	blt	3221c <__assert_fail@plt+0x20d18>
   321c0:	b	32240 <__assert_fail@plt+0x20d3c>
   321c4:	ldr	r0, [fp, #-8]
   321c8:	ldr	r2, [r0]
   321cc:	ldr	r3, [r0, #4]
   321d0:	movw	r0, #32768	; 0x8000
   321d4:	movt	r0, #65535	; 0xffff
   321d8:	mvn	r1, #0
   321dc:	bl	36ab8 <__assert_fail@plt+0x255b4>
   321e0:	ldr	r2, [fp, #-12]
   321e4:	subs	r0, r0, r2
   321e8:	sbcs	r1, r1, r2, asr #31
   321ec:	blt	3221c <__assert_fail@plt+0x20d18>
   321f0:	b	32240 <__assert_fail@plt+0x20d3c>
   321f4:	ldr	r0, [fp, #-12]
   321f8:	movw	r1, #32767	; 0x7fff
   321fc:	sdiv	r0, r1, r0
   32200:	ldr	r1, [fp, #-8]
   32204:	ldr	r2, [r1]
   32208:	ldr	r1, [r1, #4]
   3220c:	subs	r2, r0, r2
   32210:	rscs	r0, r1, r0, asr #31
   32214:	bge	32240 <__assert_fail@plt+0x20d3c>
   32218:	b	3221c <__assert_fail@plt+0x20d18>
   3221c:	ldr	r0, [fp, #-8]
   32220:	ldr	r0, [r0]
   32224:	ldr	r1, [fp, #-12]
   32228:	mul	r0, r0, r1
   3222c:	sxth	r0, r0
   32230:	asr	r1, r0, #31
   32234:	str	r0, [fp, #-24]	; 0xffffffe8
   32238:	str	r1, [fp, #-20]	; 0xffffffec
   3223c:	b	333ec <__assert_fail@plt+0x21ee8>
   32240:	ldr	r0, [fp, #-8]
   32244:	ldr	r0, [r0]
   32248:	ldr	r1, [fp, #-12]
   3224c:	mul	r0, r0, r1
   32250:	sxth	r0, r0
   32254:	asr	r1, r0, #31
   32258:	str	r0, [fp, #-24]	; 0xffffffe8
   3225c:	str	r1, [fp, #-20]	; 0xffffffec
   32260:	b	33420 <__assert_fail@plt+0x21f1c>
   32264:	ldr	r0, [fp, #-12]
   32268:	cmp	r0, #0
   3226c:	bge	323b4 <__assert_fail@plt+0x20eb0>
   32270:	ldr	r0, [fp, #-8]
   32274:	ldr	r0, [r0, #4]
   32278:	cmn	r0, #1
   3227c:	bgt	32324 <__assert_fail@plt+0x20e20>
   32280:	b	32284 <__assert_fail@plt+0x20d80>
   32284:	b	32288 <__assert_fail@plt+0x20d84>
   32288:	ldr	r0, [fp, #-8]
   3228c:	ldr	r1, [r0]
   32290:	ldr	r0, [r0, #4]
   32294:	ldr	r2, [fp, #-12]
   32298:	movw	r3, #65535	; 0xffff
   3229c:	sdiv	r2, r3, r2
   322a0:	subs	r1, r1, r2
   322a4:	sbcs	r0, r0, r2, asr #31
   322a8:	blt	32474 <__assert_fail@plt+0x20f70>
   322ac:	b	32498 <__assert_fail@plt+0x20f94>
   322b0:	b	322b4 <__assert_fail@plt+0x20db0>
   322b4:	ldr	r0, [pc, #2176]	; 32b3c <__assert_fail@plt+0x21638>
   322b8:	ldr	r1, [fp, #-12]
   322bc:	cmp	r1, r0
   322c0:	blt	322d8 <__assert_fail@plt+0x20dd4>
   322c4:	b	322e4 <__assert_fail@plt+0x20de0>
   322c8:	ldr	r0, [fp, #-12]
   322cc:	movw	r1, #0
   322d0:	cmp	r1, r0
   322d4:	bge	322e4 <__assert_fail@plt+0x20de0>
   322d8:	movw	r0, #0
   322dc:	str	r0, [fp, #-40]	; 0xffffffd8
   322e0:	b	322fc <__assert_fail@plt+0x20df8>
   322e4:	ldr	r0, [fp, #-12]
   322e8:	movw	r1, #0
   322ec:	sub	r0, r1, r0
   322f0:	movw	r1, #65535	; 0xffff
   322f4:	sdiv	r0, r1, r0
   322f8:	str	r0, [fp, #-40]	; 0xffffffd8
   322fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32300:	ldr	r1, [fp, #-8]
   32304:	ldr	r2, [r1]
   32308:	ldr	r1, [r1, #4]
   3230c:	mvn	r1, r1
   32310:	mvn	r2, r2
   32314:	subs	r2, r2, r0
   32318:	sbcs	r0, r1, r0, asr #31
   3231c:	bge	32474 <__assert_fail@plt+0x20f70>
   32320:	b	32498 <__assert_fail@plt+0x20f94>
   32324:	b	32328 <__assert_fail@plt+0x20e24>
   32328:	b	32398 <__assert_fail@plt+0x20e94>
   3232c:	b	32398 <__assert_fail@plt+0x20e94>
   32330:	ldr	r0, [fp, #-12]
   32334:	cmn	r0, #1
   32338:	bne	32398 <__assert_fail@plt+0x20e94>
   3233c:	b	32340 <__assert_fail@plt+0x20e3c>
   32340:	ldr	r0, [fp, #-8]
   32344:	ldr	r1, [r0]
   32348:	ldr	r0, [r0, #4]
   3234c:	rsbs	r1, r1, #0
   32350:	rscs	r0, r0, #0
   32354:	blt	32474 <__assert_fail@plt+0x20f70>
   32358:	b	32498 <__assert_fail@plt+0x20f94>
   3235c:	ldr	r0, [fp, #-8]
   32360:	ldr	r1, [r0]
   32364:	ldr	r0, [r0, #4]
   32368:	subs	r1, r1, #1
   3236c:	sbcs	r0, r0, #0
   32370:	blt	32498 <__assert_fail@plt+0x20f94>
   32374:	b	32378 <__assert_fail@plt+0x20e74>
   32378:	ldr	r0, [fp, #-8]
   3237c:	ldr	r1, [r0]
   32380:	ldr	r0, [r0, #4]
   32384:	subs	r1, r1, #1
   32388:	sbc	r0, r0, #0
   3238c:	cmn	r0, #1
   32390:	bgt	32474 <__assert_fail@plt+0x20f70>
   32394:	b	32498 <__assert_fail@plt+0x20f94>
   32398:	ldr	r0, [fp, #-8]
   3239c:	ldr	r1, [r0]
   323a0:	ldr	r0, [r0, #4]
   323a4:	rsbs	r1, r1, #0
   323a8:	rscs	r0, r0, #0
   323ac:	blt	32474 <__assert_fail@plt+0x20f70>
   323b0:	b	32498 <__assert_fail@plt+0x20f94>
   323b4:	ldr	r0, [fp, #-12]
   323b8:	cmp	r0, #0
   323bc:	bne	323c4 <__assert_fail@plt+0x20ec0>
   323c0:	b	32498 <__assert_fail@plt+0x20f94>
   323c4:	ldr	r0, [fp, #-8]
   323c8:	ldr	r0, [r0, #4]
   323cc:	cmn	r0, #1
   323d0:	bgt	3244c <__assert_fail@plt+0x20f48>
   323d4:	b	323d8 <__assert_fail@plt+0x20ed4>
   323d8:	b	323dc <__assert_fail@plt+0x20ed8>
   323dc:	b	32434 <__assert_fail@plt+0x20f30>
   323e0:	b	32434 <__assert_fail@plt+0x20f30>
   323e4:	ldr	r0, [fp, #-8]
   323e8:	ldr	r1, [r0]
   323ec:	ldr	r0, [r0, #4]
   323f0:	and	r0, r1, r0
   323f4:	cmn	r0, #1
   323f8:	bne	32434 <__assert_fail@plt+0x20f30>
   323fc:	b	32400 <__assert_fail@plt+0x20efc>
   32400:	b	32404 <__assert_fail@plt+0x20f00>
   32404:	ldr	r0, [fp, #-12]
   32408:	add	r0, r0, #0
   3240c:	movw	r1, #0
   32410:	cmp	r1, r0
   32414:	blt	32474 <__assert_fail@plt+0x20f70>
   32418:	b	32498 <__assert_fail@plt+0x20f94>
   3241c:	ldr	r0, [fp, #-12]
   32420:	sub	r0, r0, #1
   32424:	mvn	r1, #0
   32428:	cmp	r1, r0
   3242c:	blt	32474 <__assert_fail@plt+0x20f70>
   32430:	b	32498 <__assert_fail@plt+0x20f94>
   32434:	ldr	r0, [fp, #-12]
   32438:	rsbs	r1, r0, #0
   3243c:	mov	r2, #0
   32440:	sbcs	r0, r2, r0, asr #31
   32444:	blt	32474 <__assert_fail@plt+0x20f70>
   32448:	b	32498 <__assert_fail@plt+0x20f94>
   3244c:	ldr	r0, [fp, #-12]
   32450:	movw	r1, #65535	; 0xffff
   32454:	sdiv	r0, r1, r0
   32458:	ldr	r1, [fp, #-8]
   3245c:	ldr	r2, [r1]
   32460:	ldr	r1, [r1, #4]
   32464:	subs	r2, r0, r2
   32468:	rscs	r0, r1, r0, asr #31
   3246c:	bge	32498 <__assert_fail@plt+0x20f94>
   32470:	b	32474 <__assert_fail@plt+0x20f70>
   32474:	ldr	r0, [fp, #-8]
   32478:	ldr	r0, [r0]
   3247c:	ldr	r1, [fp, #-12]
   32480:	mul	r0, r0, r1
   32484:	uxth	r0, r0
   32488:	mov	r1, #0
   3248c:	str	r1, [fp, #-20]	; 0xffffffec
   32490:	str	r0, [fp, #-24]	; 0xffffffe8
   32494:	b	333ec <__assert_fail@plt+0x21ee8>
   32498:	ldr	r0, [fp, #-8]
   3249c:	ldr	r0, [r0]
   324a0:	ldr	r1, [fp, #-12]
   324a4:	mul	r0, r0, r1
   324a8:	uxth	r0, r0
   324ac:	mov	r1, #0
   324b0:	str	r1, [fp, #-20]	; 0xffffffec
   324b4:	str	r0, [fp, #-24]	; 0xffffffe8
   324b8:	b	33420 <__assert_fail@plt+0x21f1c>
   324bc:	b	32988 <__assert_fail@plt+0x21484>
   324c0:	b	324c4 <__assert_fail@plt+0x20fc0>
   324c4:	ldr	r0, [fp, #-12]
   324c8:	cmp	r0, #0
   324cc:	bge	32624 <__assert_fail@plt+0x21120>
   324d0:	ldr	r0, [fp, #-8]
   324d4:	ldr	r0, [r0, #4]
   324d8:	cmn	r0, #1
   324dc:	bgt	32584 <__assert_fail@plt+0x21080>
   324e0:	b	324e4 <__assert_fail@plt+0x20fe0>
   324e4:	b	324e8 <__assert_fail@plt+0x20fe4>
   324e8:	ldr	r0, [fp, #-8]
   324ec:	ldr	r1, [r0]
   324f0:	ldr	r0, [r0, #4]
   324f4:	ldr	r2, [fp, #-12]
   324f8:	mvn	r3, #-2147483648	; 0x80000000
   324fc:	sdiv	r2, r3, r2
   32500:	subs	r1, r1, r2
   32504:	sbcs	r0, r0, r2, asr #31
   32508:	blt	326f8 <__assert_fail@plt+0x211f4>
   3250c:	b	32718 <__assert_fail@plt+0x21214>
   32510:	b	32514 <__assert_fail@plt+0x21010>
   32514:	ldr	r0, [pc, #3884]	; 33448 <__assert_fail@plt+0x21f44>
   32518:	ldr	r1, [fp, #-12]
   3251c:	cmp	r1, r0
   32520:	blt	32538 <__assert_fail@plt+0x21034>
   32524:	b	32544 <__assert_fail@plt+0x21040>
   32528:	ldr	r0, [fp, #-12]
   3252c:	movw	r1, #0
   32530:	cmp	r1, r0
   32534:	bge	32544 <__assert_fail@plt+0x21040>
   32538:	movw	r0, #0
   3253c:	str	r0, [fp, #-44]	; 0xffffffd4
   32540:	b	3255c <__assert_fail@plt+0x21058>
   32544:	ldr	r0, [pc, #3840]	; 3344c <__assert_fail@plt+0x21f48>
   32548:	ldr	r1, [fp, #-12]
   3254c:	movw	r2, #0
   32550:	sub	r1, r2, r1
   32554:	sdiv	r0, r0, r1
   32558:	str	r0, [fp, #-44]	; 0xffffffd4
   3255c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   32560:	ldr	r1, [fp, #-8]
   32564:	ldr	r2, [r1]
   32568:	ldr	r1, [r1, #4]
   3256c:	mvn	r1, r1
   32570:	mvn	r2, r2
   32574:	subs	r2, r2, r0
   32578:	sbcs	r0, r1, r0, asr #31
   3257c:	bge	326f8 <__assert_fail@plt+0x211f4>
   32580:	b	32718 <__assert_fail@plt+0x21214>
   32584:	ldr	r0, [fp, #-12]
   32588:	cmn	r0, #1
   3258c:	bne	325fc <__assert_fail@plt+0x210f8>
   32590:	b	32594 <__assert_fail@plt+0x21090>
   32594:	ldr	r0, [fp, #-8]
   32598:	ldr	r1, [r0]
   3259c:	ldr	r0, [r0, #4]
   325a0:	adds	r1, r1, #-2147483648	; 0x80000000
   325a4:	sbc	r0, r0, #0
   325a8:	rsbs	r1, r1, #0
   325ac:	rscs	r0, r0, #0
   325b0:	blt	326f8 <__assert_fail@plt+0x211f4>
   325b4:	b	32718 <__assert_fail@plt+0x21214>
   325b8:	ldr	r0, [fp, #-8]
   325bc:	ldr	r1, [r0]
   325c0:	ldr	r0, [r0, #4]
   325c4:	subs	r1, r1, #1
   325c8:	sbcs	r0, r0, #0
   325cc:	blt	32718 <__assert_fail@plt+0x21214>
   325d0:	b	325d4 <__assert_fail@plt+0x210d0>
   325d4:	ldr	r0, [fp, #-8]
   325d8:	ldr	r1, [r0]
   325dc:	ldr	r0, [r0, #4]
   325e0:	subs	r1, r1, #1
   325e4:	sbc	r0, r0, #0
   325e8:	mvn	r2, #-2147483648	; 0x80000000
   325ec:	subs	r1, r2, r1
   325f0:	rscs	r0, r0, #0
   325f4:	blt	326f8 <__assert_fail@plt+0x211f4>
   325f8:	b	32718 <__assert_fail@plt+0x21214>
   325fc:	ldr	r0, [fp, #-12]
   32600:	mov	r1, #-2147483648	; 0x80000000
   32604:	sdiv	r0, r1, r0
   32608:	ldr	r1, [fp, #-8]
   3260c:	ldr	r2, [r1]
   32610:	ldr	r1, [r1, #4]
   32614:	subs	r2, r0, r2
   32618:	rscs	r0, r1, r0, asr #31
   3261c:	blt	326f8 <__assert_fail@plt+0x211f4>
   32620:	b	32718 <__assert_fail@plt+0x21214>
   32624:	ldr	r0, [fp, #-12]
   32628:	cmp	r0, #0
   3262c:	bne	32634 <__assert_fail@plt+0x21130>
   32630:	b	32718 <__assert_fail@plt+0x21214>
   32634:	ldr	r0, [fp, #-8]
   32638:	ldr	r0, [r0, #4]
   3263c:	cmn	r0, #1
   32640:	bgt	326d0 <__assert_fail@plt+0x211cc>
   32644:	b	32648 <__assert_fail@plt+0x21144>
   32648:	b	3264c <__assert_fail@plt+0x21148>
   3264c:	b	326a4 <__assert_fail@plt+0x211a0>
   32650:	b	326a4 <__assert_fail@plt+0x211a0>
   32654:	ldr	r0, [fp, #-8]
   32658:	ldr	r1, [r0]
   3265c:	ldr	r0, [r0, #4]
   32660:	and	r0, r1, r0
   32664:	cmn	r0, #1
   32668:	bne	326a4 <__assert_fail@plt+0x211a0>
   3266c:	b	32670 <__assert_fail@plt+0x2116c>
   32670:	b	32674 <__assert_fail@plt+0x21170>
   32674:	ldr	r0, [fp, #-12]
   32678:	add	r0, r0, #-2147483648	; 0x80000000
   3267c:	movw	r1, #0
   32680:	cmp	r1, r0
   32684:	blt	326f8 <__assert_fail@plt+0x211f4>
   32688:	b	32718 <__assert_fail@plt+0x21214>
   3268c:	ldr	r0, [pc, #3512]	; 3344c <__assert_fail@plt+0x21f48>
   32690:	ldr	r1, [fp, #-12]
   32694:	sub	r1, r1, #1
   32698:	cmp	r0, r1
   3269c:	blt	326f8 <__assert_fail@plt+0x211f4>
   326a0:	b	32718 <__assert_fail@plt+0x21214>
   326a4:	ldr	r0, [fp, #-8]
   326a8:	ldr	r2, [r0]
   326ac:	ldr	r3, [r0, #4]
   326b0:	mov	r0, #-2147483648	; 0x80000000
   326b4:	mvn	r1, #0
   326b8:	bl	36ab8 <__assert_fail@plt+0x255b4>
   326bc:	ldr	r2, [fp, #-12]
   326c0:	subs	r0, r0, r2
   326c4:	sbcs	r1, r1, r2, asr #31
   326c8:	blt	326f8 <__assert_fail@plt+0x211f4>
   326cc:	b	32718 <__assert_fail@plt+0x21214>
   326d0:	ldr	r0, [fp, #-12]
   326d4:	mvn	r1, #-2147483648	; 0x80000000
   326d8:	sdiv	r0, r1, r0
   326dc:	ldr	r1, [fp, #-8]
   326e0:	ldr	r2, [r1]
   326e4:	ldr	r1, [r1, #4]
   326e8:	subs	r2, r0, r2
   326ec:	rscs	r0, r1, r0, asr #31
   326f0:	bge	32718 <__assert_fail@plt+0x21214>
   326f4:	b	326f8 <__assert_fail@plt+0x211f4>
   326f8:	ldr	r0, [fp, #-8]
   326fc:	ldr	r0, [r0]
   32700:	ldr	r1, [fp, #-12]
   32704:	mul	r0, r0, r1
   32708:	asr	r1, r0, #31
   3270c:	str	r0, [fp, #-24]	; 0xffffffe8
   32710:	str	r1, [fp, #-20]	; 0xffffffec
   32714:	b	333ec <__assert_fail@plt+0x21ee8>
   32718:	ldr	r0, [fp, #-8]
   3271c:	ldr	r0, [r0]
   32720:	ldr	r1, [fp, #-12]
   32724:	mul	r0, r0, r1
   32728:	asr	r1, r0, #31
   3272c:	str	r0, [fp, #-24]	; 0xffffffe8
   32730:	str	r1, [fp, #-20]	; 0xffffffec
   32734:	b	33420 <__assert_fail@plt+0x21f1c>
   32738:	ldr	r0, [fp, #-12]
   3273c:	cmp	r0, #0
   32740:	bge	32888 <__assert_fail@plt+0x21384>
   32744:	ldr	r0, [fp, #-8]
   32748:	ldr	r0, [r0, #4]
   3274c:	cmn	r0, #1
   32750:	bgt	327f8 <__assert_fail@plt+0x212f4>
   32754:	b	32758 <__assert_fail@plt+0x21254>
   32758:	b	32784 <__assert_fail@plt+0x21280>
   3275c:	ldr	r0, [fp, #-8]
   32760:	ldr	r1, [r0]
   32764:	ldr	r0, [r0, #4]
   32768:	ldr	r2, [fp, #-12]
   3276c:	mvn	r3, #0
   32770:	udiv	r2, r3, r2
   32774:	subs	r1, r1, r2
   32778:	sbcs	r0, r0, #0
   3277c:	blt	32948 <__assert_fail@plt+0x21444>
   32780:	b	32968 <__assert_fail@plt+0x21464>
   32784:	b	32788 <__assert_fail@plt+0x21284>
   32788:	ldr	r0, [pc, #3256]	; 33448 <__assert_fail@plt+0x21f44>
   3278c:	ldr	r1, [fp, #-12]
   32790:	cmp	r1, r0
   32794:	blt	327ac <__assert_fail@plt+0x212a8>
   32798:	b	327b8 <__assert_fail@plt+0x212b4>
   3279c:	ldr	r0, [fp, #-12]
   327a0:	movw	r1, #0
   327a4:	cmp	r1, r0
   327a8:	bge	327b8 <__assert_fail@plt+0x212b4>
   327ac:	movw	r0, #1
   327b0:	str	r0, [fp, #-48]	; 0xffffffd0
   327b4:	b	327d0 <__assert_fail@plt+0x212cc>
   327b8:	ldr	r0, [fp, #-12]
   327bc:	movw	r1, #0
   327c0:	sub	r0, r1, r0
   327c4:	mvn	r1, #0
   327c8:	udiv	r0, r1, r0
   327cc:	str	r0, [fp, #-48]	; 0xffffffd0
   327d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   327d4:	ldr	r1, [fp, #-8]
   327d8:	ldr	r2, [r1]
   327dc:	ldr	r1, [r1, #4]
   327e0:	mvn	r1, r1
   327e4:	mvn	r2, r2
   327e8:	subs	r0, r2, r0
   327ec:	sbcs	r1, r1, #0
   327f0:	bge	32948 <__assert_fail@plt+0x21444>
   327f4:	b	32968 <__assert_fail@plt+0x21464>
   327f8:	b	327fc <__assert_fail@plt+0x212f8>
   327fc:	b	3286c <__assert_fail@plt+0x21368>
   32800:	b	3286c <__assert_fail@plt+0x21368>
   32804:	ldr	r0, [fp, #-12]
   32808:	cmn	r0, #1
   3280c:	bne	3286c <__assert_fail@plt+0x21368>
   32810:	b	32814 <__assert_fail@plt+0x21310>
   32814:	ldr	r0, [fp, #-8]
   32818:	ldr	r1, [r0]
   3281c:	ldr	r0, [r0, #4]
   32820:	rsbs	r1, r1, #0
   32824:	rscs	r0, r0, #0
   32828:	blt	32948 <__assert_fail@plt+0x21444>
   3282c:	b	32968 <__assert_fail@plt+0x21464>
   32830:	ldr	r0, [fp, #-8]
   32834:	ldr	r1, [r0]
   32838:	ldr	r0, [r0, #4]
   3283c:	subs	r1, r1, #1
   32840:	sbcs	r0, r0, #0
   32844:	blt	32968 <__assert_fail@plt+0x21464>
   32848:	b	3284c <__assert_fail@plt+0x21348>
   3284c:	ldr	r0, [fp, #-8]
   32850:	ldr	r1, [r0]
   32854:	ldr	r0, [r0, #4]
   32858:	subs	r1, r1, #1
   3285c:	sbc	r0, r0, #0
   32860:	cmn	r0, #1
   32864:	bgt	32948 <__assert_fail@plt+0x21444>
   32868:	b	32968 <__assert_fail@plt+0x21464>
   3286c:	ldr	r0, [fp, #-8]
   32870:	ldr	r1, [r0]
   32874:	ldr	r0, [r0, #4]
   32878:	rsbs	r1, r1, #0
   3287c:	rscs	r0, r0, #0
   32880:	blt	32948 <__assert_fail@plt+0x21444>
   32884:	b	32968 <__assert_fail@plt+0x21464>
   32888:	ldr	r0, [fp, #-12]
   3288c:	cmp	r0, #0
   32890:	bne	32898 <__assert_fail@plt+0x21394>
   32894:	b	32968 <__assert_fail@plt+0x21464>
   32898:	ldr	r0, [fp, #-8]
   3289c:	ldr	r0, [r0, #4]
   328a0:	cmn	r0, #1
   328a4:	bgt	32920 <__assert_fail@plt+0x2141c>
   328a8:	b	328ac <__assert_fail@plt+0x213a8>
   328ac:	b	328b0 <__assert_fail@plt+0x213ac>
   328b0:	b	32908 <__assert_fail@plt+0x21404>
   328b4:	b	32908 <__assert_fail@plt+0x21404>
   328b8:	ldr	r0, [fp, #-8]
   328bc:	ldr	r1, [r0]
   328c0:	ldr	r0, [r0, #4]
   328c4:	and	r0, r1, r0
   328c8:	cmn	r0, #1
   328cc:	bne	32908 <__assert_fail@plt+0x21404>
   328d0:	b	328d4 <__assert_fail@plt+0x213d0>
   328d4:	b	328d8 <__assert_fail@plt+0x213d4>
   328d8:	ldr	r0, [fp, #-12]
   328dc:	add	r0, r0, #0
   328e0:	movw	r1, #0
   328e4:	cmp	r1, r0
   328e8:	blt	32948 <__assert_fail@plt+0x21444>
   328ec:	b	32968 <__assert_fail@plt+0x21464>
   328f0:	ldr	r0, [fp, #-12]
   328f4:	sub	r0, r0, #1
   328f8:	mvn	r1, #0
   328fc:	cmp	r1, r0
   32900:	blt	32948 <__assert_fail@plt+0x21444>
   32904:	b	32968 <__assert_fail@plt+0x21464>
   32908:	ldr	r0, [fp, #-12]
   3290c:	rsbs	r1, r0, #0
   32910:	mov	r2, #0
   32914:	sbcs	r0, r2, r0, asr #31
   32918:	blt	32948 <__assert_fail@plt+0x21444>
   3291c:	b	32968 <__assert_fail@plt+0x21464>
   32920:	ldr	r0, [fp, #-12]
   32924:	mvn	r1, #0
   32928:	udiv	r0, r1, r0
   3292c:	ldr	r1, [fp, #-8]
   32930:	ldr	r2, [r1]
   32934:	ldr	r1, [r1, #4]
   32938:	subs	r0, r0, r2
   3293c:	rscs	r1, r1, #0
   32940:	bge	32968 <__assert_fail@plt+0x21464>
   32944:	b	32948 <__assert_fail@plt+0x21444>
   32948:	ldr	r0, [fp, #-8]
   3294c:	ldr	r0, [r0]
   32950:	ldr	r1, [fp, #-12]
   32954:	mul	r0, r0, r1
   32958:	mov	r1, #0
   3295c:	str	r1, [fp, #-20]	; 0xffffffec
   32960:	str	r0, [fp, #-24]	; 0xffffffe8
   32964:	b	333ec <__assert_fail@plt+0x21ee8>
   32968:	ldr	r0, [fp, #-8]
   3296c:	ldr	r0, [r0]
   32970:	ldr	r1, [fp, #-12]
   32974:	mul	r0, r0, r1
   32978:	mov	r1, #0
   3297c:	str	r1, [fp, #-20]	; 0xffffffec
   32980:	str	r0, [fp, #-24]	; 0xffffffe8
   32984:	b	33420 <__assert_fail@plt+0x21f1c>
   32988:	b	32e58 <__assert_fail@plt+0x21954>
   3298c:	b	32990 <__assert_fail@plt+0x2148c>
   32990:	ldr	r0, [fp, #-12]
   32994:	cmp	r0, #0
   32998:	bge	32af0 <__assert_fail@plt+0x215ec>
   3299c:	ldr	r0, [fp, #-8]
   329a0:	ldr	r0, [r0, #4]
   329a4:	cmn	r0, #1
   329a8:	bgt	32a50 <__assert_fail@plt+0x2154c>
   329ac:	b	329b0 <__assert_fail@plt+0x214ac>
   329b0:	b	329b4 <__assert_fail@plt+0x214b0>
   329b4:	ldr	r0, [fp, #-8]
   329b8:	ldr	r1, [r0]
   329bc:	ldr	r0, [r0, #4]
   329c0:	ldr	r2, [fp, #-12]
   329c4:	mvn	r3, #-2147483648	; 0x80000000
   329c8:	sdiv	r2, r3, r2
   329cc:	subs	r1, r1, r2
   329d0:	sbcs	r0, r0, r2, asr #31
   329d4:	blt	32bc8 <__assert_fail@plt+0x216c4>
   329d8:	b	32be8 <__assert_fail@plt+0x216e4>
   329dc:	b	329e0 <__assert_fail@plt+0x214dc>
   329e0:	ldr	r0, [pc, #2656]	; 33448 <__assert_fail@plt+0x21f44>
   329e4:	ldr	r1, [fp, #-12]
   329e8:	cmp	r1, r0
   329ec:	blt	32a04 <__assert_fail@plt+0x21500>
   329f0:	b	32a10 <__assert_fail@plt+0x2150c>
   329f4:	ldr	r0, [fp, #-12]
   329f8:	movw	r1, #0
   329fc:	cmp	r1, r0
   32a00:	bge	32a10 <__assert_fail@plt+0x2150c>
   32a04:	movw	r0, #0
   32a08:	str	r0, [fp, #-52]	; 0xffffffcc
   32a0c:	b	32a28 <__assert_fail@plt+0x21524>
   32a10:	ldr	r0, [pc, #2612]	; 3344c <__assert_fail@plt+0x21f48>
   32a14:	ldr	r1, [fp, #-12]
   32a18:	movw	r2, #0
   32a1c:	sub	r1, r2, r1
   32a20:	sdiv	r0, r0, r1
   32a24:	str	r0, [fp, #-52]	; 0xffffffcc
   32a28:	ldr	r0, [fp, #-52]	; 0xffffffcc
   32a2c:	ldr	r1, [fp, #-8]
   32a30:	ldr	r2, [r1]
   32a34:	ldr	r1, [r1, #4]
   32a38:	mvn	r1, r1
   32a3c:	mvn	r2, r2
   32a40:	subs	r2, r2, r0
   32a44:	sbcs	r0, r1, r0, asr #31
   32a48:	bge	32bc8 <__assert_fail@plt+0x216c4>
   32a4c:	b	32be8 <__assert_fail@plt+0x216e4>
   32a50:	ldr	r0, [fp, #-12]
   32a54:	cmn	r0, #1
   32a58:	bne	32ac8 <__assert_fail@plt+0x215c4>
   32a5c:	b	32a60 <__assert_fail@plt+0x2155c>
   32a60:	ldr	r0, [fp, #-8]
   32a64:	ldr	r1, [r0]
   32a68:	ldr	r0, [r0, #4]
   32a6c:	adds	r1, r1, #-2147483648	; 0x80000000
   32a70:	sbc	r0, r0, #0
   32a74:	rsbs	r1, r1, #0
   32a78:	rscs	r0, r0, #0
   32a7c:	blt	32bc8 <__assert_fail@plt+0x216c4>
   32a80:	b	32be8 <__assert_fail@plt+0x216e4>
   32a84:	ldr	r0, [fp, #-8]
   32a88:	ldr	r1, [r0]
   32a8c:	ldr	r0, [r0, #4]
   32a90:	subs	r1, r1, #1
   32a94:	sbcs	r0, r0, #0
   32a98:	blt	32be8 <__assert_fail@plt+0x216e4>
   32a9c:	b	32aa0 <__assert_fail@plt+0x2159c>
   32aa0:	ldr	r0, [fp, #-8]
   32aa4:	ldr	r1, [r0]
   32aa8:	ldr	r0, [r0, #4]
   32aac:	subs	r1, r1, #1
   32ab0:	sbc	r0, r0, #0
   32ab4:	mvn	r2, #-2147483648	; 0x80000000
   32ab8:	subs	r1, r2, r1
   32abc:	rscs	r0, r0, #0
   32ac0:	blt	32bc8 <__assert_fail@plt+0x216c4>
   32ac4:	b	32be8 <__assert_fail@plt+0x216e4>
   32ac8:	ldr	r0, [fp, #-12]
   32acc:	mov	r1, #-2147483648	; 0x80000000
   32ad0:	sdiv	r0, r1, r0
   32ad4:	ldr	r1, [fp, #-8]
   32ad8:	ldr	r2, [r1]
   32adc:	ldr	r1, [r1, #4]
   32ae0:	subs	r2, r0, r2
   32ae4:	rscs	r0, r1, r0, asr #31
   32ae8:	blt	32bc8 <__assert_fail@plt+0x216c4>
   32aec:	b	32be8 <__assert_fail@plt+0x216e4>
   32af0:	ldr	r0, [fp, #-12]
   32af4:	cmp	r0, #0
   32af8:	bne	32b00 <__assert_fail@plt+0x215fc>
   32afc:	b	32be8 <__assert_fail@plt+0x216e4>
   32b00:	ldr	r0, [fp, #-8]
   32b04:	ldr	r0, [r0, #4]
   32b08:	cmn	r0, #1
   32b0c:	bgt	32ba0 <__assert_fail@plt+0x2169c>
   32b10:	b	32b14 <__assert_fail@plt+0x21610>
   32b14:	b	32b18 <__assert_fail@plt+0x21614>
   32b18:	b	32b74 <__assert_fail@plt+0x21670>
   32b1c:	b	32b74 <__assert_fail@plt+0x21670>
   32b20:	ldr	r0, [fp, #-8]
   32b24:	ldr	r1, [r0]
   32b28:	ldr	r0, [r0, #4]
   32b2c:	and	r0, r1, r0
   32b30:	cmn	r0, #1
   32b34:	bne	32b74 <__assert_fail@plt+0x21670>
   32b38:	b	32b40 <__assert_fail@plt+0x2163c>
   32b3c:	andhi	r0, r0, r1
   32b40:	b	32b44 <__assert_fail@plt+0x21640>
   32b44:	ldr	r0, [fp, #-12]
   32b48:	add	r0, r0, #-2147483648	; 0x80000000
   32b4c:	movw	r1, #0
   32b50:	cmp	r1, r0
   32b54:	blt	32bc8 <__assert_fail@plt+0x216c4>
   32b58:	b	32be8 <__assert_fail@plt+0x216e4>
   32b5c:	ldr	r0, [pc, #2280]	; 3344c <__assert_fail@plt+0x21f48>
   32b60:	ldr	r1, [fp, #-12]
   32b64:	sub	r1, r1, #1
   32b68:	cmp	r0, r1
   32b6c:	blt	32bc8 <__assert_fail@plt+0x216c4>
   32b70:	b	32be8 <__assert_fail@plt+0x216e4>
   32b74:	ldr	r0, [fp, #-8]
   32b78:	ldr	r2, [r0]
   32b7c:	ldr	r3, [r0, #4]
   32b80:	mov	r0, #-2147483648	; 0x80000000
   32b84:	mvn	r1, #0
   32b88:	bl	36ab8 <__assert_fail@plt+0x255b4>
   32b8c:	ldr	r2, [fp, #-12]
   32b90:	subs	r0, r0, r2
   32b94:	sbcs	r1, r1, r2, asr #31
   32b98:	blt	32bc8 <__assert_fail@plt+0x216c4>
   32b9c:	b	32be8 <__assert_fail@plt+0x216e4>
   32ba0:	ldr	r0, [fp, #-12]
   32ba4:	mvn	r1, #-2147483648	; 0x80000000
   32ba8:	sdiv	r0, r1, r0
   32bac:	ldr	r1, [fp, #-8]
   32bb0:	ldr	r2, [r1]
   32bb4:	ldr	r1, [r1, #4]
   32bb8:	subs	r2, r0, r2
   32bbc:	rscs	r0, r1, r0, asr #31
   32bc0:	bge	32be8 <__assert_fail@plt+0x216e4>
   32bc4:	b	32bc8 <__assert_fail@plt+0x216c4>
   32bc8:	ldr	r0, [fp, #-8]
   32bcc:	ldr	r0, [r0]
   32bd0:	ldr	r1, [fp, #-12]
   32bd4:	mul	r0, r0, r1
   32bd8:	asr	r1, r0, #31
   32bdc:	str	r0, [fp, #-24]	; 0xffffffe8
   32be0:	str	r1, [fp, #-20]	; 0xffffffec
   32be4:	b	333ec <__assert_fail@plt+0x21ee8>
   32be8:	ldr	r0, [fp, #-8]
   32bec:	ldr	r0, [r0]
   32bf0:	ldr	r1, [fp, #-12]
   32bf4:	mul	r0, r0, r1
   32bf8:	asr	r1, r0, #31
   32bfc:	str	r0, [fp, #-24]	; 0xffffffe8
   32c00:	str	r1, [fp, #-20]	; 0xffffffec
   32c04:	b	33420 <__assert_fail@plt+0x21f1c>
   32c08:	ldr	r0, [fp, #-12]
   32c0c:	cmp	r0, #0
   32c10:	bge	32d58 <__assert_fail@plt+0x21854>
   32c14:	ldr	r0, [fp, #-8]
   32c18:	ldr	r0, [r0, #4]
   32c1c:	cmn	r0, #1
   32c20:	bgt	32cc8 <__assert_fail@plt+0x217c4>
   32c24:	b	32c28 <__assert_fail@plt+0x21724>
   32c28:	b	32c54 <__assert_fail@plt+0x21750>
   32c2c:	ldr	r0, [fp, #-8]
   32c30:	ldr	r1, [r0]
   32c34:	ldr	r0, [r0, #4]
   32c38:	ldr	r2, [fp, #-12]
   32c3c:	mvn	r3, #0
   32c40:	udiv	r2, r3, r2
   32c44:	subs	r1, r1, r2
   32c48:	sbcs	r0, r0, #0
   32c4c:	blt	32e18 <__assert_fail@plt+0x21914>
   32c50:	b	32e38 <__assert_fail@plt+0x21934>
   32c54:	b	32c58 <__assert_fail@plt+0x21754>
   32c58:	ldr	r0, [pc, #2024]	; 33448 <__assert_fail@plt+0x21f44>
   32c5c:	ldr	r1, [fp, #-12]
   32c60:	cmp	r1, r0
   32c64:	blt	32c7c <__assert_fail@plt+0x21778>
   32c68:	b	32c88 <__assert_fail@plt+0x21784>
   32c6c:	ldr	r0, [fp, #-12]
   32c70:	movw	r1, #0
   32c74:	cmp	r1, r0
   32c78:	bge	32c88 <__assert_fail@plt+0x21784>
   32c7c:	movw	r0, #1
   32c80:	str	r0, [sp, #56]	; 0x38
   32c84:	b	32ca0 <__assert_fail@plt+0x2179c>
   32c88:	ldr	r0, [fp, #-12]
   32c8c:	movw	r1, #0
   32c90:	sub	r0, r1, r0
   32c94:	mvn	r1, #0
   32c98:	udiv	r0, r1, r0
   32c9c:	str	r0, [sp, #56]	; 0x38
   32ca0:	ldr	r0, [sp, #56]	; 0x38
   32ca4:	ldr	r1, [fp, #-8]
   32ca8:	ldr	r2, [r1]
   32cac:	ldr	r1, [r1, #4]
   32cb0:	mvn	r1, r1
   32cb4:	mvn	r2, r2
   32cb8:	subs	r0, r2, r0
   32cbc:	sbcs	r1, r1, #0
   32cc0:	bge	32e18 <__assert_fail@plt+0x21914>
   32cc4:	b	32e38 <__assert_fail@plt+0x21934>
   32cc8:	b	32ccc <__assert_fail@plt+0x217c8>
   32ccc:	b	32d3c <__assert_fail@plt+0x21838>
   32cd0:	b	32d3c <__assert_fail@plt+0x21838>
   32cd4:	ldr	r0, [fp, #-12]
   32cd8:	cmn	r0, #1
   32cdc:	bne	32d3c <__assert_fail@plt+0x21838>
   32ce0:	b	32ce4 <__assert_fail@plt+0x217e0>
   32ce4:	ldr	r0, [fp, #-8]
   32ce8:	ldr	r1, [r0]
   32cec:	ldr	r0, [r0, #4]
   32cf0:	rsbs	r1, r1, #0
   32cf4:	rscs	r0, r0, #0
   32cf8:	blt	32e18 <__assert_fail@plt+0x21914>
   32cfc:	b	32e38 <__assert_fail@plt+0x21934>
   32d00:	ldr	r0, [fp, #-8]
   32d04:	ldr	r1, [r0]
   32d08:	ldr	r0, [r0, #4]
   32d0c:	subs	r1, r1, #1
   32d10:	sbcs	r0, r0, #0
   32d14:	blt	32e38 <__assert_fail@plt+0x21934>
   32d18:	b	32d1c <__assert_fail@plt+0x21818>
   32d1c:	ldr	r0, [fp, #-8]
   32d20:	ldr	r1, [r0]
   32d24:	ldr	r0, [r0, #4]
   32d28:	subs	r1, r1, #1
   32d2c:	sbc	r0, r0, #0
   32d30:	cmn	r0, #1
   32d34:	bgt	32e18 <__assert_fail@plt+0x21914>
   32d38:	b	32e38 <__assert_fail@plt+0x21934>
   32d3c:	ldr	r0, [fp, #-8]
   32d40:	ldr	r1, [r0]
   32d44:	ldr	r0, [r0, #4]
   32d48:	rsbs	r1, r1, #0
   32d4c:	rscs	r0, r0, #0
   32d50:	blt	32e18 <__assert_fail@plt+0x21914>
   32d54:	b	32e38 <__assert_fail@plt+0x21934>
   32d58:	ldr	r0, [fp, #-12]
   32d5c:	cmp	r0, #0
   32d60:	bne	32d68 <__assert_fail@plt+0x21864>
   32d64:	b	32e38 <__assert_fail@plt+0x21934>
   32d68:	ldr	r0, [fp, #-8]
   32d6c:	ldr	r0, [r0, #4]
   32d70:	cmn	r0, #1
   32d74:	bgt	32df0 <__assert_fail@plt+0x218ec>
   32d78:	b	32d7c <__assert_fail@plt+0x21878>
   32d7c:	b	32d80 <__assert_fail@plt+0x2187c>
   32d80:	b	32dd8 <__assert_fail@plt+0x218d4>
   32d84:	b	32dd8 <__assert_fail@plt+0x218d4>
   32d88:	ldr	r0, [fp, #-8]
   32d8c:	ldr	r1, [r0]
   32d90:	ldr	r0, [r0, #4]
   32d94:	and	r0, r1, r0
   32d98:	cmn	r0, #1
   32d9c:	bne	32dd8 <__assert_fail@plt+0x218d4>
   32da0:	b	32da4 <__assert_fail@plt+0x218a0>
   32da4:	b	32da8 <__assert_fail@plt+0x218a4>
   32da8:	ldr	r0, [fp, #-12]
   32dac:	add	r0, r0, #0
   32db0:	movw	r1, #0
   32db4:	cmp	r1, r0
   32db8:	blt	32e18 <__assert_fail@plt+0x21914>
   32dbc:	b	32e38 <__assert_fail@plt+0x21934>
   32dc0:	ldr	r0, [fp, #-12]
   32dc4:	sub	r0, r0, #1
   32dc8:	mvn	r1, #0
   32dcc:	cmp	r1, r0
   32dd0:	blt	32e18 <__assert_fail@plt+0x21914>
   32dd4:	b	32e38 <__assert_fail@plt+0x21934>
   32dd8:	ldr	r0, [fp, #-12]
   32ddc:	rsbs	r1, r0, #0
   32de0:	mov	r2, #0
   32de4:	sbcs	r0, r2, r0, asr #31
   32de8:	blt	32e18 <__assert_fail@plt+0x21914>
   32dec:	b	32e38 <__assert_fail@plt+0x21934>
   32df0:	ldr	r0, [fp, #-12]
   32df4:	mvn	r1, #0
   32df8:	udiv	r0, r1, r0
   32dfc:	ldr	r1, [fp, #-8]
   32e00:	ldr	r2, [r1]
   32e04:	ldr	r1, [r1, #4]
   32e08:	subs	r0, r0, r2
   32e0c:	rscs	r1, r1, #0
   32e10:	bge	32e38 <__assert_fail@plt+0x21934>
   32e14:	b	32e18 <__assert_fail@plt+0x21914>
   32e18:	ldr	r0, [fp, #-8]
   32e1c:	ldr	r0, [r0]
   32e20:	ldr	r1, [fp, #-12]
   32e24:	mul	r0, r0, r1
   32e28:	mov	r1, #0
   32e2c:	str	r1, [fp, #-20]	; 0xffffffec
   32e30:	str	r0, [fp, #-24]	; 0xffffffe8
   32e34:	b	333ec <__assert_fail@plt+0x21ee8>
   32e38:	ldr	r0, [fp, #-8]
   32e3c:	ldr	r0, [r0]
   32e40:	ldr	r1, [fp, #-12]
   32e44:	mul	r0, r0, r1
   32e48:	mov	r1, #0
   32e4c:	str	r1, [fp, #-20]	; 0xffffffec
   32e50:	str	r0, [fp, #-24]	; 0xffffffe8
   32e54:	b	33420 <__assert_fail@plt+0x21f1c>
   32e58:	b	32e5c <__assert_fail@plt+0x21958>
   32e5c:	ldr	r0, [fp, #-12]
   32e60:	cmp	r0, #0
   32e64:	bge	33000 <__assert_fail@plt+0x21afc>
   32e68:	ldr	r0, [fp, #-8]
   32e6c:	ldr	r0, [r0, #4]
   32e70:	cmn	r0, #1
   32e74:	bgt	32f64 <__assert_fail@plt+0x21a60>
   32e78:	b	32e7c <__assert_fail@plt+0x21978>
   32e7c:	b	32e80 <__assert_fail@plt+0x2197c>
   32e80:	ldr	r0, [fp, #-8]
   32e84:	ldr	r1, [r0]
   32e88:	ldr	r0, [r0, #4]
   32e8c:	ldr	r2, [fp, #-12]
   32e90:	asr	r3, r2, #31
   32e94:	mvn	ip, #0
   32e98:	mvn	lr, #-2147483648	; 0x80000000
   32e9c:	str	r0, [sp, #52]	; 0x34
   32ea0:	mov	r0, ip
   32ea4:	str	r1, [sp, #48]	; 0x30
   32ea8:	mov	r1, lr
   32eac:	bl	36ab8 <__assert_fail@plt+0x255b4>
   32eb0:	ldr	r2, [sp, #48]	; 0x30
   32eb4:	subs	r0, r2, r0
   32eb8:	ldr	r2, [sp, #52]	; 0x34
   32ebc:	sbcs	r1, r2, r1
   32ec0:	blt	330dc <__assert_fail@plt+0x21bd8>
   32ec4:	b	33108 <__assert_fail@plt+0x21c04>
   32ec8:	b	32ecc <__assert_fail@plt+0x219c8>
   32ecc:	ldr	r0, [pc, #1396]	; 33448 <__assert_fail@plt+0x21f44>
   32ed0:	ldr	r1, [fp, #-12]
   32ed4:	cmp	r1, r0
   32ed8:	blt	32ef0 <__assert_fail@plt+0x219ec>
   32edc:	b	32f04 <__assert_fail@plt+0x21a00>
   32ee0:	ldr	r0, [fp, #-12]
   32ee4:	movw	r1, #0
   32ee8:	cmp	r1, r0
   32eec:	bge	32f04 <__assert_fail@plt+0x21a00>
   32ef0:	mov	r0, #0
   32ef4:	mvn	r1, #0
   32ef8:	str	r1, [sp, #44]	; 0x2c
   32efc:	str	r0, [sp, #40]	; 0x28
   32f00:	b	32f38 <__assert_fail@plt+0x21a34>
   32f04:	ldr	r0, [fp, #-12]
   32f08:	rsb	r0, r0, #0
   32f0c:	asr	r3, r0, #31
   32f10:	mvn	r1, #0
   32f14:	mvn	r2, #-2147483648	; 0x80000000
   32f18:	str	r0, [sp, #36]	; 0x24
   32f1c:	mov	r0, r1
   32f20:	mov	r1, r2
   32f24:	ldr	r2, [sp, #36]	; 0x24
   32f28:	bl	36ab8 <__assert_fail@plt+0x255b4>
   32f2c:	str	r0, [sp, #44]	; 0x2c
   32f30:	str	r1, [sp, #40]	; 0x28
   32f34:	b	32f38 <__assert_fail@plt+0x21a34>
   32f38:	ldr	r0, [sp, #40]	; 0x28
   32f3c:	ldr	r1, [sp, #44]	; 0x2c
   32f40:	ldr	r2, [fp, #-8]
   32f44:	ldr	r3, [r2]
   32f48:	ldr	r2, [r2, #4]
   32f4c:	mvn	r2, r2
   32f50:	mvn	r3, r3
   32f54:	subs	r1, r3, r1
   32f58:	sbcs	r0, r2, r0
   32f5c:	bge	330dc <__assert_fail@plt+0x21bd8>
   32f60:	b	33108 <__assert_fail@plt+0x21c04>
   32f64:	ldr	r0, [fp, #-12]
   32f68:	cmn	r0, #1
   32f6c:	bne	32fc0 <__assert_fail@plt+0x21abc>
   32f70:	b	32f74 <__assert_fail@plt+0x21a70>
   32f74:	ldr	r0, [fp, #-8]
   32f78:	ldr	r1, [r0]
   32f7c:	ldr	r0, [r0, #4]
   32f80:	add	r0, r0, #-2147483648	; 0x80000000
   32f84:	rsbs	r1, r1, #0
   32f88:	rscs	r0, r0, #0
   32f8c:	blt	330dc <__assert_fail@plt+0x21bd8>
   32f90:	b	33108 <__assert_fail@plt+0x21c04>
   32f94:	ldr	r0, [fp, #-8]
   32f98:	ldr	r1, [r0]
   32f9c:	ldr	r0, [r0, #4]
   32fa0:	subs	r1, r1, #1
   32fa4:	sbcs	r0, r0, #0
   32fa8:	blt	33108 <__assert_fail@plt+0x21c04>
   32fac:	b	32fb0 <__assert_fail@plt+0x21aac>
   32fb0:	mov	r0, #0
   32fb4:	cmp	r0, #0
   32fb8:	bne	330dc <__assert_fail@plt+0x21bd8>
   32fbc:	b	33108 <__assert_fail@plt+0x21c04>
   32fc0:	ldr	r0, [fp, #-12]
   32fc4:	asr	r3, r0, #31
   32fc8:	mov	r1, #0
   32fcc:	mov	r2, #-2147483648	; 0x80000000
   32fd0:	str	r0, [sp, #32]
   32fd4:	mov	r0, r1
   32fd8:	mov	r1, r2
   32fdc:	ldr	r2, [sp, #32]
   32fe0:	bl	36ab8 <__assert_fail@plt+0x255b4>
   32fe4:	ldr	r2, [fp, #-8]
   32fe8:	ldr	r3, [r2]
   32fec:	ldr	r2, [r2, #4]
   32ff0:	subs	r0, r0, r3
   32ff4:	sbcs	r1, r1, r2
   32ff8:	blt	330dc <__assert_fail@plt+0x21bd8>
   32ffc:	b	33108 <__assert_fail@plt+0x21c04>
   33000:	ldr	r0, [fp, #-12]
   33004:	cmp	r0, #0
   33008:	bne	33010 <__assert_fail@plt+0x21b0c>
   3300c:	b	33108 <__assert_fail@plt+0x21c04>
   33010:	ldr	r0, [fp, #-8]
   33014:	ldr	r0, [r0, #4]
   33018:	cmn	r0, #1
   3301c:	bgt	3309c <__assert_fail@plt+0x21b98>
   33020:	b	33024 <__assert_fail@plt+0x21b20>
   33024:	ldr	r0, [fp, #-8]
   33028:	ldr	r1, [r0]
   3302c:	ldr	r0, [r0, #4]
   33030:	and	r0, r1, r0
   33034:	cmn	r0, #1
   33038:	bne	33070 <__assert_fail@plt+0x21b6c>
   3303c:	b	33040 <__assert_fail@plt+0x21b3c>
   33040:	b	33044 <__assert_fail@plt+0x21b40>
   33044:	ldr	r0, [fp, #-12]
   33048:	mov	r1, #-2147483648	; 0x80000000
   3304c:	add	r1, r1, r0, asr #31
   33050:	rsbs	r0, r0, #0
   33054:	rscs	r1, r1, #0
   33058:	blt	330dc <__assert_fail@plt+0x21bd8>
   3305c:	b	33108 <__assert_fail@plt+0x21c04>
   33060:	mov	r0, #0
   33064:	cmp	r0, #0
   33068:	bne	330dc <__assert_fail@plt+0x21bd8>
   3306c:	b	33108 <__assert_fail@plt+0x21c04>
   33070:	ldr	r0, [fp, #-8]
   33074:	ldr	r2, [r0]
   33078:	ldr	r3, [r0, #4]
   3307c:	mov	r0, #0
   33080:	mov	r1, #-2147483648	; 0x80000000
   33084:	bl	36ab8 <__assert_fail@plt+0x255b4>
   33088:	ldr	r2, [fp, #-12]
   3308c:	subs	r0, r0, r2
   33090:	sbcs	r1, r1, r2, asr #31
   33094:	blt	330dc <__assert_fail@plt+0x21bd8>
   33098:	b	33108 <__assert_fail@plt+0x21c04>
   3309c:	ldr	r0, [fp, #-12]
   330a0:	asr	r3, r0, #31
   330a4:	mvn	r1, #0
   330a8:	mvn	r2, #-2147483648	; 0x80000000
   330ac:	str	r0, [sp, #28]
   330b0:	mov	r0, r1
   330b4:	mov	r1, r2
   330b8:	ldr	r2, [sp, #28]
   330bc:	bl	36ab8 <__assert_fail@plt+0x255b4>
   330c0:	ldr	r2, [fp, #-8]
   330c4:	ldr	r3, [r2]
   330c8:	ldr	r2, [r2, #4]
   330cc:	subs	r0, r0, r3
   330d0:	sbcs	r1, r1, r2
   330d4:	bge	33108 <__assert_fail@plt+0x21c04>
   330d8:	b	330dc <__assert_fail@plt+0x21bd8>
   330dc:	ldr	r0, [fp, #-8]
   330e0:	ldr	r1, [r0]
   330e4:	ldr	r0, [r0, #4]
   330e8:	ldr	r2, [fp, #-12]
   330ec:	asr	r3, r2, #31
   330f0:	umull	ip, lr, r1, r2
   330f4:	mla	r1, r1, r3, lr
   330f8:	mla	r0, r0, r2, r1
   330fc:	str	ip, [fp, #-24]	; 0xffffffe8
   33100:	str	r0, [fp, #-20]	; 0xffffffec
   33104:	b	333ec <__assert_fail@plt+0x21ee8>
   33108:	ldr	r0, [fp, #-8]
   3310c:	ldr	r1, [r0]
   33110:	ldr	r0, [r0, #4]
   33114:	ldr	r2, [fp, #-12]
   33118:	asr	r3, r2, #31
   3311c:	umull	ip, lr, r1, r2
   33120:	mla	r1, r1, r3, lr
   33124:	mla	r0, r0, r2, r1
   33128:	str	ip, [fp, #-24]	; 0xffffffe8
   3312c:	str	r0, [fp, #-20]	; 0xffffffec
   33130:	b	33420 <__assert_fail@plt+0x21f1c>
   33134:	ldr	r0, [fp, #-12]
   33138:	cmp	r0, #0
   3313c:	bge	332c4 <__assert_fail@plt+0x21dc0>
   33140:	ldr	r0, [fp, #-8]
   33144:	ldr	r0, [r0, #4]
   33148:	cmn	r0, #1
   3314c:	bgt	33234 <__assert_fail@plt+0x21d30>
   33150:	b	33154 <__assert_fail@plt+0x21c50>
   33154:	b	331a0 <__assert_fail@plt+0x21c9c>
   33158:			; <UNDEFINED> instruction: 0xffff8000
   3315c:	ldr	r0, [fp, #-8]
   33160:	ldr	r1, [r0]
   33164:	ldr	r0, [r0, #4]
   33168:	ldr	r2, [fp, #-12]
   3316c:	asr	r3, r2, #31
   33170:	mvn	ip, #0
   33174:	str	r0, [sp, #24]
   33178:	mov	r0, ip
   3317c:	str	r1, [sp, #20]
   33180:	mov	r1, ip
   33184:	bl	36b8c <__assert_fail@plt+0x25688>
   33188:	ldr	r2, [sp, #20]
   3318c:	subs	r0, r2, r0
   33190:	ldr	r2, [sp, #24]
   33194:	sbcs	r1, r2, r1
   33198:	bcc	33394 <__assert_fail@plt+0x21e90>
   3319c:	b	333c0 <__assert_fail@plt+0x21ebc>
   331a0:	b	331a4 <__assert_fail@plt+0x21ca0>
   331a4:	ldr	r0, [pc, #668]	; 33448 <__assert_fail@plt+0x21f44>
   331a8:	ldr	r1, [fp, #-12]
   331ac:	cmp	r1, r0
   331b0:	blt	331c8 <__assert_fail@plt+0x21cc4>
   331b4:	b	331dc <__assert_fail@plt+0x21cd8>
   331b8:	ldr	r0, [fp, #-12]
   331bc:	movw	r1, #0
   331c0:	cmp	r1, r0
   331c4:	bge	331dc <__assert_fail@plt+0x21cd8>
   331c8:	mov	r0, #1
   331cc:	mvn	r1, #0
   331d0:	str	r1, [sp, #16]
   331d4:	str	r0, [sp, #12]
   331d8:	b	33208 <__assert_fail@plt+0x21d04>
   331dc:	ldr	r0, [fp, #-12]
   331e0:	rsb	r0, r0, #0
   331e4:	asr	r3, r0, #31
   331e8:	mvn	r1, #0
   331ec:	str	r0, [sp, #8]
   331f0:	mov	r0, r1
   331f4:	ldr	r2, [sp, #8]
   331f8:	bl	36b8c <__assert_fail@plt+0x25688>
   331fc:	str	r0, [sp, #16]
   33200:	str	r1, [sp, #12]
   33204:	b	33208 <__assert_fail@plt+0x21d04>
   33208:	ldr	r0, [sp, #12]
   3320c:	ldr	r1, [sp, #16]
   33210:	ldr	r2, [fp, #-8]
   33214:	ldr	r3, [r2]
   33218:	ldr	r2, [r2, #4]
   3321c:	mvn	r2, r2
   33220:	mvn	r3, r3
   33224:	subs	r1, r3, r1
   33228:	sbcs	r0, r2, r0
   3322c:	bcs	33394 <__assert_fail@plt+0x21e90>
   33230:	b	333c0 <__assert_fail@plt+0x21ebc>
   33234:	b	33238 <__assert_fail@plt+0x21d34>
   33238:	b	332a8 <__assert_fail@plt+0x21da4>
   3323c:	b	332a8 <__assert_fail@plt+0x21da4>
   33240:	ldr	r0, [fp, #-12]
   33244:	cmn	r0, #1
   33248:	bne	332a8 <__assert_fail@plt+0x21da4>
   3324c:	b	33250 <__assert_fail@plt+0x21d4c>
   33250:	ldr	r0, [fp, #-8]
   33254:	ldr	r1, [r0]
   33258:	ldr	r0, [r0, #4]
   3325c:	rsbs	r1, r1, #0
   33260:	rscs	r0, r0, #0
   33264:	blt	33394 <__assert_fail@plt+0x21e90>
   33268:	b	333c0 <__assert_fail@plt+0x21ebc>
   3326c:	ldr	r0, [fp, #-8]
   33270:	ldr	r1, [r0]
   33274:	ldr	r0, [r0, #4]
   33278:	subs	r1, r1, #1
   3327c:	sbcs	r0, r0, #0
   33280:	blt	333c0 <__assert_fail@plt+0x21ebc>
   33284:	b	33288 <__assert_fail@plt+0x21d84>
   33288:	ldr	r0, [fp, #-8]
   3328c:	ldr	r1, [r0]
   33290:	ldr	r0, [r0, #4]
   33294:	subs	r1, r1, #1
   33298:	sbc	r0, r0, #0
   3329c:	cmn	r0, #1
   332a0:	bgt	33394 <__assert_fail@plt+0x21e90>
   332a4:	b	333c0 <__assert_fail@plt+0x21ebc>
   332a8:	ldr	r0, [fp, #-8]
   332ac:	ldr	r1, [r0]
   332b0:	ldr	r0, [r0, #4]
   332b4:	rsbs	r1, r1, #0
   332b8:	rscs	r0, r0, #0
   332bc:	blt	33394 <__assert_fail@plt+0x21e90>
   332c0:	b	333c0 <__assert_fail@plt+0x21ebc>
   332c4:	ldr	r0, [fp, #-12]
   332c8:	cmp	r0, #0
   332cc:	bne	332d4 <__assert_fail@plt+0x21dd0>
   332d0:	b	333c0 <__assert_fail@plt+0x21ebc>
   332d4:	ldr	r0, [fp, #-8]
   332d8:	ldr	r0, [r0, #4]
   332dc:	cmn	r0, #1
   332e0:	bgt	3335c <__assert_fail@plt+0x21e58>
   332e4:	b	332e8 <__assert_fail@plt+0x21de4>
   332e8:	b	332ec <__assert_fail@plt+0x21de8>
   332ec:	b	33344 <__assert_fail@plt+0x21e40>
   332f0:	b	33344 <__assert_fail@plt+0x21e40>
   332f4:	ldr	r0, [fp, #-8]
   332f8:	ldr	r1, [r0]
   332fc:	ldr	r0, [r0, #4]
   33300:	and	r0, r1, r0
   33304:	cmn	r0, #1
   33308:	bne	33344 <__assert_fail@plt+0x21e40>
   3330c:	b	33310 <__assert_fail@plt+0x21e0c>
   33310:	b	33314 <__assert_fail@plt+0x21e10>
   33314:	ldr	r0, [fp, #-12]
   33318:	add	r0, r0, #0
   3331c:	movw	r1, #0
   33320:	cmp	r1, r0
   33324:	blt	33394 <__assert_fail@plt+0x21e90>
   33328:	b	333c0 <__assert_fail@plt+0x21ebc>
   3332c:	ldr	r0, [fp, #-12]
   33330:	sub	r0, r0, #1
   33334:	mvn	r1, #0
   33338:	cmp	r1, r0
   3333c:	blt	33394 <__assert_fail@plt+0x21e90>
   33340:	b	333c0 <__assert_fail@plt+0x21ebc>
   33344:	ldr	r0, [fp, #-12]
   33348:	rsbs	r1, r0, #0
   3334c:	mov	r2, #0
   33350:	sbcs	r0, r2, r0, asr #31
   33354:	blt	33394 <__assert_fail@plt+0x21e90>
   33358:	b	333c0 <__assert_fail@plt+0x21ebc>
   3335c:	ldr	r0, [fp, #-12]
   33360:	asr	r3, r0, #31
   33364:	mvn	r1, #0
   33368:	str	r0, [sp, #4]
   3336c:	mov	r0, r1
   33370:	ldr	r2, [sp, #4]
   33374:	bl	36b8c <__assert_fail@plt+0x25688>
   33378:	ldr	r2, [fp, #-8]
   3337c:	ldr	r3, [r2]
   33380:	ldr	r2, [r2, #4]
   33384:	subs	r0, r0, r3
   33388:	sbcs	r1, r1, r2
   3338c:	bcs	333c0 <__assert_fail@plt+0x21ebc>
   33390:	b	33394 <__assert_fail@plt+0x21e90>
   33394:	ldr	r0, [fp, #-8]
   33398:	ldr	r1, [r0]
   3339c:	ldr	r0, [r0, #4]
   333a0:	ldr	r2, [fp, #-12]
   333a4:	asr	r3, r2, #31
   333a8:	umull	ip, lr, r1, r2
   333ac:	mla	r1, r1, r3, lr
   333b0:	mla	r0, r0, r2, r1
   333b4:	str	ip, [fp, #-24]	; 0xffffffe8
   333b8:	str	r0, [fp, #-20]	; 0xffffffec
   333bc:	b	333ec <__assert_fail@plt+0x21ee8>
   333c0:	ldr	r0, [fp, #-8]
   333c4:	ldr	r1, [r0]
   333c8:	ldr	r0, [r0, #4]
   333cc:	ldr	r2, [fp, #-12]
   333d0:	asr	r3, r2, #31
   333d4:	umull	ip, lr, r1, r2
   333d8:	mla	r1, r1, r3, lr
   333dc:	mla	r0, r0, r2, r1
   333e0:	str	ip, [fp, #-24]	; 0xffffffe8
   333e4:	str	r0, [fp, #-20]	; 0xffffffec
   333e8:	b	33420 <__assert_fail@plt+0x21f1c>
   333ec:	ldr	r0, [fp, #-8]
   333f0:	ldr	r1, [r0, #4]
   333f4:	mvn	r2, #0
   333f8:	cmp	r1, #0
   333fc:	movwmi	r2, #0
   33400:	mvn	r3, #-2147483648	; 0x80000000
   33404:	cmp	r1, #0
   33408:	movmi	r3, #-2147483648	; 0x80000000
   3340c:	str	r3, [r0, #4]
   33410:	str	r2, [r0]
   33414:	movw	r0, #1
   33418:	str	r0, [fp, #-4]
   3341c:	b	3343c <__assert_fail@plt+0x21f38>
   33420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33424:	ldr	r1, [fp, #-20]	; 0xffffffec
   33428:	ldr	r2, [fp, #-8]
   3342c:	str	r1, [r2, #4]
   33430:	str	r0, [r2]
   33434:	movw	r0, #0
   33438:	str	r0, [fp, #-4]
   3343c:	ldr	r0, [fp, #-4]
   33440:	mov	sp, fp
   33444:	pop	{fp, pc}
   33448:	andhi	r0, r0, r1
   3344c:	svcvc	0x00ffffff
   33450:	push	{fp, lr}
   33454:	mov	fp, sp
   33458:	sub	sp, sp, #16
   3345c:	str	r0, [fp, #-4]
   33460:	str	r1, [sp, #8]
   33464:	str	r2, [sp, #4]
   33468:	movw	r0, #0
   3346c:	str	r0, [sp]
   33470:	ldr	r0, [sp, #4]
   33474:	mvn	r1, #0
   33478:	add	r1, r0, r1
   3347c:	str	r1, [sp, #4]
   33480:	cmp	r0, #0
   33484:	beq	334a4 <__assert_fail@plt+0x21fa0>
   33488:	ldr	r0, [fp, #-4]
   3348c:	ldr	r1, [sp, #8]
   33490:	bl	31acc <__assert_fail@plt+0x205c8>
   33494:	ldr	r1, [sp]
   33498:	orr	r0, r1, r0
   3349c:	str	r0, [sp]
   334a0:	b	33470 <__assert_fail@plt+0x21f6c>
   334a4:	ldr	r0, [sp]
   334a8:	mov	sp, fp
   334ac:	pop	{fp, pc}
   334b0:	push	{fp, lr}
   334b4:	mov	fp, sp
   334b8:	sub	sp, sp, #16
   334bc:	str	r0, [sp, #8]
   334c0:	str	r1, [sp, #4]
   334c4:	ldr	r0, [sp, #8]
   334c8:	cmp	r0, #0
   334cc:	beq	334dc <__assert_fail@plt+0x21fd8>
   334d0:	ldr	r0, [sp, #4]
   334d4:	cmp	r0, #0
   334d8:	bne	334e8 <__assert_fail@plt+0x21fe4>
   334dc:	movw	r0, #1
   334e0:	str	r0, [sp, #4]
   334e4:	str	r0, [sp, #8]
   334e8:	ldr	r0, [sp, #4]
   334ec:	cmp	r0, #0
   334f0:	beq	33524 <__assert_fail@plt+0x22020>
   334f4:	ldr	r0, [pc, #76]	; 33548 <__assert_fail@plt+0x22044>
   334f8:	ldr	r1, [sp, #4]
   334fc:	udiv	r0, r0, r1
   33500:	ldr	r1, [sp, #8]
   33504:	cmp	r0, r1
   33508:	bcs	33524 <__assert_fail@plt+0x22020>
   3350c:	bl	113fc <__errno_location@plt>
   33510:	movw	r1, #12
   33514:	str	r1, [r0]
   33518:	movw	r0, #0
   3351c:	str	r0, [fp, #-4]
   33520:	b	3353c <__assert_fail@plt+0x22038>
   33524:	ldr	r0, [sp, #8]
   33528:	ldr	r1, [sp, #4]
   3352c:	bl	111ec <calloc@plt>
   33530:	str	r0, [sp]
   33534:	ldr	r0, [sp]
   33538:	str	r0, [fp, #-4]
   3353c:	ldr	r0, [fp, #-4]
   33540:	mov	sp, fp
   33544:	pop	{fp, pc}
   33548:	svcvc	0x00ffffff
   3354c:	push	{fp, lr}
   33550:	mov	fp, sp
   33554:	sub	sp, sp, #16
   33558:	str	r0, [sp, #8]
   3355c:	ldr	r0, [sp, #8]
   33560:	cmp	r0, #0
   33564:	bne	33570 <__assert_fail@plt+0x2206c>
   33568:	movw	r0, #1
   3356c:	str	r0, [sp, #8]
   33570:	ldr	r0, [pc, #64]	; 335b8 <__assert_fail@plt+0x220b4>
   33574:	ldr	r1, [sp, #8]
   33578:	cmp	r0, r1
   3357c:	bcs	33598 <__assert_fail@plt+0x22094>
   33580:	bl	113fc <__errno_location@plt>
   33584:	movw	r1, #12
   33588:	str	r1, [r0]
   3358c:	movw	r0, #0
   33590:	str	r0, [fp, #-4]
   33594:	b	335ac <__assert_fail@plt+0x220a8>
   33598:	ldr	r0, [sp, #8]
   3359c:	bl	11378 <malloc@plt>
   335a0:	str	r0, [sp, #4]
   335a4:	ldr	r0, [sp, #4]
   335a8:	str	r0, [fp, #-4]
   335ac:	ldr	r0, [fp, #-4]
   335b0:	mov	sp, fp
   335b4:	pop	{fp, pc}
   335b8:	svcvc	0x00ffffff
   335bc:	push	{fp, lr}
   335c0:	mov	fp, sp
   335c4:	sub	sp, sp, #16
   335c8:	str	r0, [sp, #8]
   335cc:	str	r1, [sp, #4]
   335d0:	ldr	r0, [sp, #8]
   335d4:	movw	r1, #0
   335d8:	cmp	r0, r1
   335dc:	bne	335f0 <__assert_fail@plt+0x220ec>
   335e0:	ldr	r0, [sp, #4]
   335e4:	bl	3354c <__assert_fail@plt+0x22048>
   335e8:	str	r0, [fp, #-4]
   335ec:	b	33650 <__assert_fail@plt+0x2214c>
   335f0:	ldr	r0, [sp, #4]
   335f4:	cmp	r0, #0
   335f8:	bne	33610 <__assert_fail@plt+0x2210c>
   335fc:	ldr	r0, [sp, #8]
   33600:	bl	34c20 <__assert_fail@plt+0x2371c>
   33604:	movw	r0, #0
   33608:	str	r0, [fp, #-4]
   3360c:	b	33650 <__assert_fail@plt+0x2214c>
   33610:	ldr	r0, [pc, #68]	; 3365c <__assert_fail@plt+0x22158>
   33614:	ldr	r1, [sp, #4]
   33618:	cmp	r0, r1
   3361c:	bcs	33638 <__assert_fail@plt+0x22134>
   33620:	bl	113fc <__errno_location@plt>
   33624:	movw	r1, #12
   33628:	str	r1, [r0]
   3362c:	movw	r0, #0
   33630:	str	r0, [fp, #-4]
   33634:	b	33650 <__assert_fail@plt+0x2214c>
   33638:	ldr	r0, [sp, #8]
   3363c:	ldr	r1, [sp, #4]
   33640:	bl	1130c <realloc@plt>
   33644:	str	r0, [sp]
   33648:	ldr	r0, [sp]
   3364c:	str	r0, [fp, #-4]
   33650:	ldr	r0, [fp, #-4]
   33654:	mov	sp, fp
   33658:	pop	{fp, pc}
   3365c:	svcvc	0x00ffffff
   33660:	push	{fp, lr}
   33664:	mov	fp, sp
   33668:	sub	sp, sp, #24
   3366c:	str	r0, [fp, #-8]
   33670:	str	r1, [sp, #12]
   33674:	ldr	r0, [fp, #-8]
   33678:	str	r0, [sp, #8]
   3367c:	ldr	r0, [sp, #12]
   33680:	str	r0, [sp, #4]
   33684:	ldr	r0, [sp, #8]
   33688:	ldr	r1, [sp, #4]
   3368c:	cmp	r0, r1
   33690:	bne	336a0 <__assert_fail@plt+0x2219c>
   33694:	movw	r0, #0
   33698:	str	r0, [fp, #-4]
   3369c:	b	3370c <__assert_fail@plt+0x22208>
   336a0:	b	336a4 <__assert_fail@plt+0x221a0>
   336a4:	ldr	r0, [sp, #8]
   336a8:	ldrb	r0, [r0]
   336ac:	bl	36838 <__assert_fail@plt+0x25334>
   336b0:	strb	r0, [sp, #3]
   336b4:	ldr	r0, [sp, #4]
   336b8:	ldrb	r0, [r0]
   336bc:	bl	36838 <__assert_fail@plt+0x25334>
   336c0:	strb	r0, [sp, #2]
   336c4:	ldrb	r0, [sp, #3]
   336c8:	cmp	r0, #0
   336cc:	bne	336d4 <__assert_fail@plt+0x221d0>
   336d0:	b	336fc <__assert_fail@plt+0x221f8>
   336d4:	ldr	r0, [sp, #8]
   336d8:	add	r0, r0, #1
   336dc:	str	r0, [sp, #8]
   336e0:	ldr	r0, [sp, #4]
   336e4:	add	r0, r0, #1
   336e8:	str	r0, [sp, #4]
   336ec:	ldrb	r0, [sp, #3]
   336f0:	ldrb	r1, [sp, #2]
   336f4:	cmp	r0, r1
   336f8:	beq	336a4 <__assert_fail@plt+0x221a0>
   336fc:	ldrb	r0, [sp, #3]
   33700:	ldrb	r1, [sp, #2]
   33704:	sub	r0, r0, r1
   33708:	str	r0, [fp, #-4]
   3370c:	ldr	r0, [fp, #-4]
   33710:	mov	sp, fp
   33714:	pop	{fp, pc}
   33718:	push	{fp, lr}
   3371c:	mov	fp, sp
   33720:	sub	sp, sp, #16
   33724:	str	r0, [sp, #8]
   33728:	ldr	r0, [sp, #8]
   3372c:	bl	11348 <__fpending@plt>
   33730:	cmp	r0, #0
   33734:	movw	r0, #0
   33738:	movne	r0, #1
   3373c:	and	r0, r0, #1
   33740:	strb	r0, [sp, #7]
   33744:	ldr	r0, [sp, #8]
   33748:	bl	11354 <ferror_unlocked@plt>
   3374c:	cmp	r0, #0
   33750:	movw	r0, #0
   33754:	movne	r0, #1
   33758:	and	r0, r0, #1
   3375c:	strb	r0, [sp, #6]
   33760:	ldr	r0, [sp, #8]
   33764:	bl	13104 <__assert_fail@plt+0x1c00>
   33768:	cmp	r0, #0
   3376c:	movw	r0, #0
   33770:	movne	r0, #1
   33774:	and	r0, r0, #1
   33778:	strb	r0, [sp, #5]
   3377c:	ldrb	r0, [sp, #6]
   33780:	tst	r0, #1
   33784:	bne	337b0 <__assert_fail@plt+0x222ac>
   33788:	ldrb	r0, [sp, #5]
   3378c:	tst	r0, #1
   33790:	beq	337d4 <__assert_fail@plt+0x222d0>
   33794:	ldrb	r0, [sp, #7]
   33798:	tst	r0, #1
   3379c:	bne	337b0 <__assert_fail@plt+0x222ac>
   337a0:	bl	113fc <__errno_location@plt>
   337a4:	ldr	r0, [r0]
   337a8:	cmp	r0, #9
   337ac:	beq	337d4 <__assert_fail@plt+0x222d0>
   337b0:	ldrb	r0, [sp, #5]
   337b4:	tst	r0, #1
   337b8:	bne	337c8 <__assert_fail@plt+0x222c4>
   337bc:	bl	113fc <__errno_location@plt>
   337c0:	movw	r1, #0
   337c4:	str	r1, [r0]
   337c8:	mvn	r0, #0
   337cc:	str	r0, [fp, #-4]
   337d0:	b	337dc <__assert_fail@plt+0x222d8>
   337d4:	movw	r0, #0
   337d8:	str	r0, [fp, #-4]
   337dc:	ldr	r0, [fp, #-4]
   337e0:	mov	sp, fp
   337e4:	pop	{fp, pc}
   337e8:	push	{fp, lr}
   337ec:	mov	fp, sp
   337f0:	sub	sp, sp, #104	; 0x68
   337f4:	str	r0, [fp, #-8]
   337f8:	str	r1, [fp, #-12]
   337fc:	str	r2, [fp, #-16]
   33800:	str	r3, [fp, #-20]	; 0xffffffec
   33804:	ldr	r0, [fp, #-12]
   33808:	ldr	r1, [fp, #-8]
   3380c:	ldr	r1, [r1, #4]
   33810:	cmp	r0, r1
   33814:	bhi	33834 <__assert_fail@plt+0x22330>
   33818:	ldr	r0, [fp, #-12]
   3381c:	ldr	r1, [fp, #-8]
   33820:	str	r0, [r1]
   33824:	movw	r0, #1
   33828:	and	r0, r0, #1
   3382c:	strb	r0, [fp, #-1]
   33830:	b	34c04 <__assert_fail@plt+0x23700>
   33834:	b	33bec <__assert_fail@plt+0x226e8>
   33838:	b	33a0c <__assert_fail@plt+0x22508>
   3383c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33840:	cmp	r0, #0
   33844:	bcs	33948 <__assert_fail@plt+0x22444>
   33848:	ldr	r0, [fp, #-12]
   3384c:	cmp	r0, #0
   33850:	bcs	338d8 <__assert_fail@plt+0x223d4>
   33854:	b	33874 <__assert_fail@plt+0x22370>
   33858:	ldr	r0, [fp, #-12]
   3385c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33860:	movw	r2, #127	; 0x7f
   33864:	udiv	r1, r2, r1
   33868:	cmp	r0, r1
   3386c:	bcc	339dc <__assert_fail@plt+0x224d8>
   33870:	b	339f4 <__assert_fail@plt+0x224f0>
   33874:	b	33888 <__assert_fail@plt+0x22384>
   33878:	ldr	r0, [fp, #-20]	; 0xffffffec
   3387c:	cmp	r0, #1
   33880:	bcc	33898 <__assert_fail@plt+0x22394>
   33884:	b	338a4 <__assert_fail@plt+0x223a0>
   33888:	ldr	r0, [fp, #-20]	; 0xffffffec
   3388c:	movw	r1, #0
   33890:	cmp	r1, r0
   33894:	bcs	338a4 <__assert_fail@plt+0x223a0>
   33898:	movw	r0, #0
   3389c:	str	r0, [fp, #-32]	; 0xffffffe0
   338a0:	b	338bc <__assert_fail@plt+0x223b8>
   338a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   338a8:	movw	r1, #0
   338ac:	sub	r0, r1, r0
   338b0:	movw	r1, #127	; 0x7f
   338b4:	udiv	r0, r1, r0
   338b8:	str	r0, [fp, #-32]	; 0xffffffe0
   338bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   338c0:	ldr	r1, [fp, #-12]
   338c4:	mvn	r2, #0
   338c8:	sub	r1, r2, r1
   338cc:	cmp	r0, r1
   338d0:	bls	339dc <__assert_fail@plt+0x224d8>
   338d4:	b	339f4 <__assert_fail@plt+0x224f0>
   338d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   338dc:	cmn	r0, #1
   338e0:	bne	3392c <__assert_fail@plt+0x22428>
   338e4:	b	33904 <__assert_fail@plt+0x22400>
   338e8:	ldr	r0, [fp, #-12]
   338ec:	mvn	r1, #127	; 0x7f
   338f0:	add	r0, r0, r1
   338f4:	movw	r1, #0
   338f8:	cmp	r1, r0
   338fc:	bcc	339dc <__assert_fail@plt+0x224d8>
   33900:	b	339f4 <__assert_fail@plt+0x224f0>
   33904:	ldr	r0, [fp, #-12]
   33908:	movw	r1, #0
   3390c:	cmp	r1, r0
   33910:	bcs	339f4 <__assert_fail@plt+0x224f0>
   33914:	ldr	r0, [fp, #-12]
   33918:	sub	r0, r0, #1
   3391c:	movw	r1, #127	; 0x7f
   33920:	cmp	r1, r0
   33924:	bcc	339dc <__assert_fail@plt+0x224d8>
   33928:	b	339f4 <__assert_fail@plt+0x224f0>
   3392c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33930:	mvn	r1, #127	; 0x7f
   33934:	udiv	r0, r1, r0
   33938:	ldr	r1, [fp, #-12]
   3393c:	cmp	r0, r1
   33940:	bcc	339dc <__assert_fail@plt+0x224d8>
   33944:	b	339f4 <__assert_fail@plt+0x224f0>
   33948:	ldr	r0, [fp, #-20]	; 0xffffffec
   3394c:	cmp	r0, #0
   33950:	bne	33958 <__assert_fail@plt+0x22454>
   33954:	b	339f4 <__assert_fail@plt+0x224f0>
   33958:	ldr	r0, [fp, #-12]
   3395c:	cmp	r0, #0
   33960:	bcs	339c4 <__assert_fail@plt+0x224c0>
   33964:	ldr	r0, [fp, #-12]
   33968:	cmn	r0, #1
   3396c:	bne	339a8 <__assert_fail@plt+0x224a4>
   33970:	b	33990 <__assert_fail@plt+0x2248c>
   33974:	ldr	r0, [fp, #-20]	; 0xffffffec
   33978:	mvn	r1, #127	; 0x7f
   3397c:	add	r0, r0, r1
   33980:	movw	r1, #0
   33984:	cmp	r1, r0
   33988:	bcc	339dc <__assert_fail@plt+0x224d8>
   3398c:	b	339f4 <__assert_fail@plt+0x224f0>
   33990:	ldr	r0, [fp, #-20]	; 0xffffffec
   33994:	sub	r0, r0, #1
   33998:	movw	r1, #127	; 0x7f
   3399c:	cmp	r1, r0
   339a0:	bcc	339dc <__assert_fail@plt+0x224d8>
   339a4:	b	339f4 <__assert_fail@plt+0x224f0>
   339a8:	ldr	r0, [fp, #-12]
   339ac:	mvn	r1, #127	; 0x7f
   339b0:	udiv	r0, r1, r0
   339b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   339b8:	cmp	r0, r1
   339bc:	bcc	339dc <__assert_fail@plt+0x224d8>
   339c0:	b	339f4 <__assert_fail@plt+0x224f0>
   339c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   339c8:	movw	r1, #127	; 0x7f
   339cc:	udiv	r0, r1, r0
   339d0:	ldr	r1, [fp, #-12]
   339d4:	cmp	r0, r1
   339d8:	bcs	339f4 <__assert_fail@plt+0x224f0>
   339dc:	ldr	r0, [fp, #-12]
   339e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   339e4:	mul	r0, r0, r1
   339e8:	sxtb	r0, r0
   339ec:	str	r0, [fp, #-24]	; 0xffffffe8
   339f0:	b	34b1c <__assert_fail@plt+0x23618>
   339f4:	ldr	r0, [fp, #-12]
   339f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   339fc:	mul	r0, r0, r1
   33a00:	sxtb	r0, r0
   33a04:	str	r0, [fp, #-24]	; 0xffffffe8
   33a08:	b	34b38 <__assert_fail@plt+0x23634>
   33a0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33a10:	cmp	r0, #0
   33a14:	bcs	33b20 <__assert_fail@plt+0x2261c>
   33a18:	ldr	r0, [fp, #-12]
   33a1c:	cmp	r0, #0
   33a20:	bcs	33aa8 <__assert_fail@plt+0x225a4>
   33a24:	b	33a44 <__assert_fail@plt+0x22540>
   33a28:	ldr	r0, [fp, #-12]
   33a2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33a30:	movw	r2, #255	; 0xff
   33a34:	udiv	r1, r2, r1
   33a38:	cmp	r0, r1
   33a3c:	bcc	33bbc <__assert_fail@plt+0x226b8>
   33a40:	b	33bd4 <__assert_fail@plt+0x226d0>
   33a44:	b	33a58 <__assert_fail@plt+0x22554>
   33a48:	ldr	r0, [fp, #-20]	; 0xffffffec
   33a4c:	cmp	r0, #1
   33a50:	bcc	33a68 <__assert_fail@plt+0x22564>
   33a54:	b	33a74 <__assert_fail@plt+0x22570>
   33a58:	ldr	r0, [fp, #-20]	; 0xffffffec
   33a5c:	movw	r1, #0
   33a60:	cmp	r1, r0
   33a64:	bcs	33a74 <__assert_fail@plt+0x22570>
   33a68:	movw	r0, #0
   33a6c:	str	r0, [fp, #-36]	; 0xffffffdc
   33a70:	b	33a8c <__assert_fail@plt+0x22588>
   33a74:	ldr	r0, [fp, #-20]	; 0xffffffec
   33a78:	movw	r1, #0
   33a7c:	sub	r0, r1, r0
   33a80:	movw	r1, #255	; 0xff
   33a84:	udiv	r0, r1, r0
   33a88:	str	r0, [fp, #-36]	; 0xffffffdc
   33a8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33a90:	ldr	r1, [fp, #-12]
   33a94:	mvn	r2, #0
   33a98:	sub	r1, r2, r1
   33a9c:	cmp	r0, r1
   33aa0:	bls	33bbc <__assert_fail@plt+0x226b8>
   33aa4:	b	33bd4 <__assert_fail@plt+0x226d0>
   33aa8:	b	33ab0 <__assert_fail@plt+0x225ac>
   33aac:	b	33ab4 <__assert_fail@plt+0x225b0>
   33ab0:	b	33b04 <__assert_fail@plt+0x22600>
   33ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
   33ab8:	cmn	r0, #1
   33abc:	bne	33b04 <__assert_fail@plt+0x22600>
   33ac0:	b	33adc <__assert_fail@plt+0x225d8>
   33ac4:	ldr	r0, [fp, #-12]
   33ac8:	add	r0, r0, #0
   33acc:	movw	r1, #0
   33ad0:	cmp	r1, r0
   33ad4:	bcc	33bbc <__assert_fail@plt+0x226b8>
   33ad8:	b	33bd4 <__assert_fail@plt+0x226d0>
   33adc:	ldr	r0, [fp, #-12]
   33ae0:	movw	r1, #0
   33ae4:	cmp	r1, r0
   33ae8:	bcs	33bd4 <__assert_fail@plt+0x226d0>
   33aec:	ldr	r0, [fp, #-12]
   33af0:	sub	r0, r0, #1
   33af4:	mvn	r1, #0
   33af8:	cmp	r1, r0
   33afc:	bcc	33bbc <__assert_fail@plt+0x226b8>
   33b00:	b	33bd4 <__assert_fail@plt+0x226d0>
   33b04:	ldr	r0, [fp, #-20]	; 0xffffffec
   33b08:	movw	r1, #0
   33b0c:	udiv	r0, r1, r0
   33b10:	ldr	r1, [fp, #-12]
   33b14:	cmp	r0, r1
   33b18:	bcc	33bbc <__assert_fail@plt+0x226b8>
   33b1c:	b	33bd4 <__assert_fail@plt+0x226d0>
   33b20:	ldr	r0, [fp, #-20]	; 0xffffffec
   33b24:	cmp	r0, #0
   33b28:	bne	33b30 <__assert_fail@plt+0x2262c>
   33b2c:	b	33bd4 <__assert_fail@plt+0x226d0>
   33b30:	ldr	r0, [fp, #-12]
   33b34:	cmp	r0, #0
   33b38:	bcs	33ba4 <__assert_fail@plt+0x226a0>
   33b3c:	b	33b44 <__assert_fail@plt+0x22640>
   33b40:	b	33b48 <__assert_fail@plt+0x22644>
   33b44:	b	33b88 <__assert_fail@plt+0x22684>
   33b48:	ldr	r0, [fp, #-12]
   33b4c:	cmn	r0, #1
   33b50:	bne	33b88 <__assert_fail@plt+0x22684>
   33b54:	b	33b70 <__assert_fail@plt+0x2266c>
   33b58:	ldr	r0, [fp, #-20]	; 0xffffffec
   33b5c:	add	r0, r0, #0
   33b60:	movw	r1, #0
   33b64:	cmp	r1, r0
   33b68:	bcc	33bbc <__assert_fail@plt+0x226b8>
   33b6c:	b	33bd4 <__assert_fail@plt+0x226d0>
   33b70:	ldr	r0, [fp, #-20]	; 0xffffffec
   33b74:	sub	r0, r0, #1
   33b78:	mvn	r1, #0
   33b7c:	cmp	r1, r0
   33b80:	bcc	33bbc <__assert_fail@plt+0x226b8>
   33b84:	b	33bd4 <__assert_fail@plt+0x226d0>
   33b88:	ldr	r0, [fp, #-12]
   33b8c:	movw	r1, #0
   33b90:	udiv	r0, r1, r0
   33b94:	ldr	r1, [fp, #-20]	; 0xffffffec
   33b98:	cmp	r0, r1
   33b9c:	bcc	33bbc <__assert_fail@plt+0x226b8>
   33ba0:	b	33bd4 <__assert_fail@plt+0x226d0>
   33ba4:	ldr	r0, [fp, #-20]	; 0xffffffec
   33ba8:	movw	r1, #255	; 0xff
   33bac:	udiv	r0, r1, r0
   33bb0:	ldr	r1, [fp, #-12]
   33bb4:	cmp	r0, r1
   33bb8:	bcs	33bd4 <__assert_fail@plt+0x226d0>
   33bbc:	ldr	r0, [fp, #-12]
   33bc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   33bc4:	mul	r0, r0, r1
   33bc8:	and	r0, r0, #255	; 0xff
   33bcc:	str	r0, [fp, #-24]	; 0xffffffe8
   33bd0:	b	34b1c <__assert_fail@plt+0x23618>
   33bd4:	ldr	r0, [fp, #-12]
   33bd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   33bdc:	mul	r0, r0, r1
   33be0:	and	r0, r0, #255	; 0xff
   33be4:	str	r0, [fp, #-24]	; 0xffffffe8
   33be8:	b	34b38 <__assert_fail@plt+0x23634>
   33bec:	b	33fa4 <__assert_fail@plt+0x22aa0>
   33bf0:	b	33dc4 <__assert_fail@plt+0x228c0>
   33bf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   33bf8:	cmp	r0, #0
   33bfc:	bcs	33d00 <__assert_fail@plt+0x227fc>
   33c00:	ldr	r0, [fp, #-12]
   33c04:	cmp	r0, #0
   33c08:	bcs	33c90 <__assert_fail@plt+0x2278c>
   33c0c:	b	33c2c <__assert_fail@plt+0x22728>
   33c10:	ldr	r0, [fp, #-12]
   33c14:	ldr	r1, [fp, #-20]	; 0xffffffec
   33c18:	movw	r2, #32767	; 0x7fff
   33c1c:	udiv	r1, r2, r1
   33c20:	cmp	r0, r1
   33c24:	bcc	33d94 <__assert_fail@plt+0x22890>
   33c28:	b	33dac <__assert_fail@plt+0x228a8>
   33c2c:	b	33c40 <__assert_fail@plt+0x2273c>
   33c30:	ldr	r0, [fp, #-20]	; 0xffffffec
   33c34:	cmp	r0, #1
   33c38:	bcc	33c50 <__assert_fail@plt+0x2274c>
   33c3c:	b	33c5c <__assert_fail@plt+0x22758>
   33c40:	ldr	r0, [fp, #-20]	; 0xffffffec
   33c44:	movw	r1, #0
   33c48:	cmp	r1, r0
   33c4c:	bcs	33c5c <__assert_fail@plt+0x22758>
   33c50:	movw	r0, #0
   33c54:	str	r0, [fp, #-40]	; 0xffffffd8
   33c58:	b	33c74 <__assert_fail@plt+0x22770>
   33c5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33c60:	movw	r1, #0
   33c64:	sub	r0, r1, r0
   33c68:	movw	r1, #32767	; 0x7fff
   33c6c:	udiv	r0, r1, r0
   33c70:	str	r0, [fp, #-40]	; 0xffffffd8
   33c74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   33c78:	ldr	r1, [fp, #-12]
   33c7c:	mvn	r2, #0
   33c80:	sub	r1, r2, r1
   33c84:	cmp	r0, r1
   33c88:	bls	33d94 <__assert_fail@plt+0x22890>
   33c8c:	b	33dac <__assert_fail@plt+0x228a8>
   33c90:	ldr	r0, [fp, #-20]	; 0xffffffec
   33c94:	cmn	r0, #1
   33c98:	bne	33ce4 <__assert_fail@plt+0x227e0>
   33c9c:	b	33cbc <__assert_fail@plt+0x227b8>
   33ca0:	ldr	r0, [pc, #3956]	; 34c1c <__assert_fail@plt+0x23718>
   33ca4:	ldr	r1, [fp, #-12]
   33ca8:	add	r0, r1, r0
   33cac:	movw	r1, #0
   33cb0:	cmp	r1, r0
   33cb4:	bcc	33d94 <__assert_fail@plt+0x22890>
   33cb8:	b	33dac <__assert_fail@plt+0x228a8>
   33cbc:	ldr	r0, [fp, #-12]
   33cc0:	movw	r1, #0
   33cc4:	cmp	r1, r0
   33cc8:	bcs	33dac <__assert_fail@plt+0x228a8>
   33ccc:	ldr	r0, [fp, #-12]
   33cd0:	sub	r0, r0, #1
   33cd4:	movw	r1, #32767	; 0x7fff
   33cd8:	cmp	r1, r0
   33cdc:	bcc	33d94 <__assert_fail@plt+0x22890>
   33ce0:	b	33dac <__assert_fail@plt+0x228a8>
   33ce4:	ldr	r0, [pc, #3888]	; 34c1c <__assert_fail@plt+0x23718>
   33ce8:	ldr	r1, [fp, #-20]	; 0xffffffec
   33cec:	udiv	r0, r0, r1
   33cf0:	ldr	r1, [fp, #-12]
   33cf4:	cmp	r0, r1
   33cf8:	bcc	33d94 <__assert_fail@plt+0x22890>
   33cfc:	b	33dac <__assert_fail@plt+0x228a8>
   33d00:	ldr	r0, [fp, #-20]	; 0xffffffec
   33d04:	cmp	r0, #0
   33d08:	bne	33d10 <__assert_fail@plt+0x2280c>
   33d0c:	b	33dac <__assert_fail@plt+0x228a8>
   33d10:	ldr	r0, [fp, #-12]
   33d14:	cmp	r0, #0
   33d18:	bcs	33d7c <__assert_fail@plt+0x22878>
   33d1c:	ldr	r0, [fp, #-12]
   33d20:	cmn	r0, #1
   33d24:	bne	33d60 <__assert_fail@plt+0x2285c>
   33d28:	b	33d48 <__assert_fail@plt+0x22844>
   33d2c:	ldr	r0, [pc, #3816]	; 34c1c <__assert_fail@plt+0x23718>
   33d30:	ldr	r1, [fp, #-20]	; 0xffffffec
   33d34:	add	r0, r1, r0
   33d38:	movw	r1, #0
   33d3c:	cmp	r1, r0
   33d40:	bcc	33d94 <__assert_fail@plt+0x22890>
   33d44:	b	33dac <__assert_fail@plt+0x228a8>
   33d48:	ldr	r0, [fp, #-20]	; 0xffffffec
   33d4c:	sub	r0, r0, #1
   33d50:	movw	r1, #32767	; 0x7fff
   33d54:	cmp	r1, r0
   33d58:	bcc	33d94 <__assert_fail@plt+0x22890>
   33d5c:	b	33dac <__assert_fail@plt+0x228a8>
   33d60:	ldr	r0, [pc, #3764]	; 34c1c <__assert_fail@plt+0x23718>
   33d64:	ldr	r1, [fp, #-12]
   33d68:	udiv	r0, r0, r1
   33d6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33d70:	cmp	r0, r1
   33d74:	bcc	33d94 <__assert_fail@plt+0x22890>
   33d78:	b	33dac <__assert_fail@plt+0x228a8>
   33d7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33d80:	movw	r1, #32767	; 0x7fff
   33d84:	udiv	r0, r1, r0
   33d88:	ldr	r1, [fp, #-12]
   33d8c:	cmp	r0, r1
   33d90:	bcs	33dac <__assert_fail@plt+0x228a8>
   33d94:	ldr	r0, [fp, #-12]
   33d98:	ldr	r1, [fp, #-20]	; 0xffffffec
   33d9c:	mul	r0, r0, r1
   33da0:	sxth	r0, r0
   33da4:	str	r0, [fp, #-24]	; 0xffffffe8
   33da8:	b	34b1c <__assert_fail@plt+0x23618>
   33dac:	ldr	r0, [fp, #-12]
   33db0:	ldr	r1, [fp, #-20]	; 0xffffffec
   33db4:	mul	r0, r0, r1
   33db8:	sxth	r0, r0
   33dbc:	str	r0, [fp, #-24]	; 0xffffffe8
   33dc0:	b	34b38 <__assert_fail@plt+0x23634>
   33dc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   33dc8:	cmp	r0, #0
   33dcc:	bcs	33ed8 <__assert_fail@plt+0x229d4>
   33dd0:	ldr	r0, [fp, #-12]
   33dd4:	cmp	r0, #0
   33dd8:	bcs	33e60 <__assert_fail@plt+0x2295c>
   33ddc:	b	33dfc <__assert_fail@plt+0x228f8>
   33de0:	ldr	r0, [fp, #-12]
   33de4:	ldr	r1, [fp, #-20]	; 0xffffffec
   33de8:	movw	r2, #65535	; 0xffff
   33dec:	udiv	r1, r2, r1
   33df0:	cmp	r0, r1
   33df4:	bcc	33f74 <__assert_fail@plt+0x22a70>
   33df8:	b	33f8c <__assert_fail@plt+0x22a88>
   33dfc:	b	33e10 <__assert_fail@plt+0x2290c>
   33e00:	ldr	r0, [fp, #-20]	; 0xffffffec
   33e04:	cmp	r0, #1
   33e08:	bcc	33e20 <__assert_fail@plt+0x2291c>
   33e0c:	b	33e2c <__assert_fail@plt+0x22928>
   33e10:	ldr	r0, [fp, #-20]	; 0xffffffec
   33e14:	movw	r1, #0
   33e18:	cmp	r1, r0
   33e1c:	bcs	33e2c <__assert_fail@plt+0x22928>
   33e20:	movw	r0, #0
   33e24:	str	r0, [fp, #-44]	; 0xffffffd4
   33e28:	b	33e44 <__assert_fail@plt+0x22940>
   33e2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33e30:	movw	r1, #0
   33e34:	sub	r0, r1, r0
   33e38:	movw	r1, #65535	; 0xffff
   33e3c:	udiv	r0, r1, r0
   33e40:	str	r0, [fp, #-44]	; 0xffffffd4
   33e44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33e48:	ldr	r1, [fp, #-12]
   33e4c:	mvn	r2, #0
   33e50:	sub	r1, r2, r1
   33e54:	cmp	r0, r1
   33e58:	bls	33f74 <__assert_fail@plt+0x22a70>
   33e5c:	b	33f8c <__assert_fail@plt+0x22a88>
   33e60:	b	33e68 <__assert_fail@plt+0x22964>
   33e64:	b	33e6c <__assert_fail@plt+0x22968>
   33e68:	b	33ebc <__assert_fail@plt+0x229b8>
   33e6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33e70:	cmn	r0, #1
   33e74:	bne	33ebc <__assert_fail@plt+0x229b8>
   33e78:	b	33e94 <__assert_fail@plt+0x22990>
   33e7c:	ldr	r0, [fp, #-12]
   33e80:	add	r0, r0, #0
   33e84:	movw	r1, #0
   33e88:	cmp	r1, r0
   33e8c:	bcc	33f74 <__assert_fail@plt+0x22a70>
   33e90:	b	33f8c <__assert_fail@plt+0x22a88>
   33e94:	ldr	r0, [fp, #-12]
   33e98:	movw	r1, #0
   33e9c:	cmp	r1, r0
   33ea0:	bcs	33f8c <__assert_fail@plt+0x22a88>
   33ea4:	ldr	r0, [fp, #-12]
   33ea8:	sub	r0, r0, #1
   33eac:	mvn	r1, #0
   33eb0:	cmp	r1, r0
   33eb4:	bcc	33f74 <__assert_fail@plt+0x22a70>
   33eb8:	b	33f8c <__assert_fail@plt+0x22a88>
   33ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   33ec0:	movw	r1, #0
   33ec4:	udiv	r0, r1, r0
   33ec8:	ldr	r1, [fp, #-12]
   33ecc:	cmp	r0, r1
   33ed0:	bcc	33f74 <__assert_fail@plt+0x22a70>
   33ed4:	b	33f8c <__assert_fail@plt+0x22a88>
   33ed8:	ldr	r0, [fp, #-20]	; 0xffffffec
   33edc:	cmp	r0, #0
   33ee0:	bne	33ee8 <__assert_fail@plt+0x229e4>
   33ee4:	b	33f8c <__assert_fail@plt+0x22a88>
   33ee8:	ldr	r0, [fp, #-12]
   33eec:	cmp	r0, #0
   33ef0:	bcs	33f5c <__assert_fail@plt+0x22a58>
   33ef4:	b	33efc <__assert_fail@plt+0x229f8>
   33ef8:	b	33f00 <__assert_fail@plt+0x229fc>
   33efc:	b	33f40 <__assert_fail@plt+0x22a3c>
   33f00:	ldr	r0, [fp, #-12]
   33f04:	cmn	r0, #1
   33f08:	bne	33f40 <__assert_fail@plt+0x22a3c>
   33f0c:	b	33f28 <__assert_fail@plt+0x22a24>
   33f10:	ldr	r0, [fp, #-20]	; 0xffffffec
   33f14:	add	r0, r0, #0
   33f18:	movw	r1, #0
   33f1c:	cmp	r1, r0
   33f20:	bcc	33f74 <__assert_fail@plt+0x22a70>
   33f24:	b	33f8c <__assert_fail@plt+0x22a88>
   33f28:	ldr	r0, [fp, #-20]	; 0xffffffec
   33f2c:	sub	r0, r0, #1
   33f30:	mvn	r1, #0
   33f34:	cmp	r1, r0
   33f38:	bcc	33f74 <__assert_fail@plt+0x22a70>
   33f3c:	b	33f8c <__assert_fail@plt+0x22a88>
   33f40:	ldr	r0, [fp, #-12]
   33f44:	movw	r1, #0
   33f48:	udiv	r0, r1, r0
   33f4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33f50:	cmp	r0, r1
   33f54:	bcc	33f74 <__assert_fail@plt+0x22a70>
   33f58:	b	33f8c <__assert_fail@plt+0x22a88>
   33f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33f60:	movw	r1, #65535	; 0xffff
   33f64:	udiv	r0, r1, r0
   33f68:	ldr	r1, [fp, #-12]
   33f6c:	cmp	r0, r1
   33f70:	bcs	33f8c <__assert_fail@plt+0x22a88>
   33f74:	ldr	r0, [fp, #-12]
   33f78:	ldr	r1, [fp, #-20]	; 0xffffffec
   33f7c:	mul	r0, r0, r1
   33f80:	uxth	r0, r0
   33f84:	str	r0, [fp, #-24]	; 0xffffffe8
   33f88:	b	34b1c <__assert_fail@plt+0x23618>
   33f8c:	ldr	r0, [fp, #-12]
   33f90:	ldr	r1, [fp, #-20]	; 0xffffffec
   33f94:	mul	r0, r0, r1
   33f98:	uxth	r0, r0
   33f9c:	str	r0, [fp, #-24]	; 0xffffffe8
   33fa0:	b	34b38 <__assert_fail@plt+0x23634>
   33fa4:	b	33fa8 <__assert_fail@plt+0x22aa4>
   33fa8:	b	3416c <__assert_fail@plt+0x22c68>
   33fac:	ldr	r0, [fp, #-20]	; 0xffffffec
   33fb0:	cmp	r0, #0
   33fb4:	bcs	340b4 <__assert_fail@plt+0x22bb0>
   33fb8:	ldr	r0, [fp, #-12]
   33fbc:	cmp	r0, #0
   33fc0:	bcs	34048 <__assert_fail@plt+0x22b44>
   33fc4:	b	33fe4 <__assert_fail@plt+0x22ae0>
   33fc8:	ldr	r0, [pc, #3140]	; 34c14 <__assert_fail@plt+0x23710>
   33fcc:	ldr	r1, [fp, #-12]
   33fd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   33fd4:	udiv	r0, r0, r2
   33fd8:	cmp	r1, r0
   33fdc:	bcc	34144 <__assert_fail@plt+0x22c40>
   33fe0:	b	34158 <__assert_fail@plt+0x22c54>
   33fe4:	b	33ff8 <__assert_fail@plt+0x22af4>
   33fe8:	ldr	r0, [fp, #-20]	; 0xffffffec
   33fec:	cmp	r0, #1
   33ff0:	bcc	34008 <__assert_fail@plt+0x22b04>
   33ff4:	b	34014 <__assert_fail@plt+0x22b10>
   33ff8:	ldr	r0, [fp, #-20]	; 0xffffffec
   33ffc:	movw	r1, #0
   34000:	cmp	r1, r0
   34004:	bcs	34014 <__assert_fail@plt+0x22b10>
   34008:	movw	r0, #0
   3400c:	str	r0, [fp, #-48]	; 0xffffffd0
   34010:	b	3402c <__assert_fail@plt+0x22b28>
   34014:	ldr	r0, [pc, #3064]	; 34c14 <__assert_fail@plt+0x23710>
   34018:	ldr	r1, [fp, #-20]	; 0xffffffec
   3401c:	movw	r2, #0
   34020:	sub	r1, r2, r1
   34024:	udiv	r0, r0, r1
   34028:	str	r0, [fp, #-48]	; 0xffffffd0
   3402c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   34030:	ldr	r1, [fp, #-12]
   34034:	mvn	r2, #0
   34038:	sub	r1, r2, r1
   3403c:	cmp	r0, r1
   34040:	bls	34144 <__assert_fail@plt+0x22c40>
   34044:	b	34158 <__assert_fail@plt+0x22c54>
   34048:	ldr	r0, [fp, #-20]	; 0xffffffec
   3404c:	cmn	r0, #1
   34050:	bne	34098 <__assert_fail@plt+0x22b94>
   34054:	b	34070 <__assert_fail@plt+0x22b6c>
   34058:	ldr	r0, [fp, #-12]
   3405c:	add	r0, r0, #-2147483648	; 0x80000000
   34060:	movw	r1, #0
   34064:	cmp	r1, r0
   34068:	bcc	34144 <__assert_fail@plt+0x22c40>
   3406c:	b	34158 <__assert_fail@plt+0x22c54>
   34070:	ldr	r0, [fp, #-12]
   34074:	movw	r1, #0
   34078:	cmp	r1, r0
   3407c:	bcs	34158 <__assert_fail@plt+0x22c54>
   34080:	ldr	r0, [pc, #2956]	; 34c14 <__assert_fail@plt+0x23710>
   34084:	ldr	r1, [fp, #-12]
   34088:	sub	r1, r1, #1
   3408c:	cmp	r0, r1
   34090:	bcc	34144 <__assert_fail@plt+0x22c40>
   34094:	b	34158 <__assert_fail@plt+0x22c54>
   34098:	ldr	r0, [pc, #2936]	; 34c18 <__assert_fail@plt+0x23714>
   3409c:	ldr	r1, [fp, #-20]	; 0xffffffec
   340a0:	udiv	r0, r0, r1
   340a4:	ldr	r1, [fp, #-12]
   340a8:	cmp	r0, r1
   340ac:	bcc	34144 <__assert_fail@plt+0x22c40>
   340b0:	b	34158 <__assert_fail@plt+0x22c54>
   340b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   340b8:	cmp	r0, #0
   340bc:	bne	340c4 <__assert_fail@plt+0x22bc0>
   340c0:	b	34158 <__assert_fail@plt+0x22c54>
   340c4:	ldr	r0, [fp, #-12]
   340c8:	cmp	r0, #0
   340cc:	bcs	3412c <__assert_fail@plt+0x22c28>
   340d0:	ldr	r0, [fp, #-12]
   340d4:	cmn	r0, #1
   340d8:	bne	34110 <__assert_fail@plt+0x22c0c>
   340dc:	b	340f8 <__assert_fail@plt+0x22bf4>
   340e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   340e4:	add	r0, r0, #-2147483648	; 0x80000000
   340e8:	movw	r1, #0
   340ec:	cmp	r1, r0
   340f0:	bcc	34144 <__assert_fail@plt+0x22c40>
   340f4:	b	34158 <__assert_fail@plt+0x22c54>
   340f8:	ldr	r0, [pc, #2836]	; 34c14 <__assert_fail@plt+0x23710>
   340fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   34100:	sub	r1, r1, #1
   34104:	cmp	r0, r1
   34108:	bcc	34144 <__assert_fail@plt+0x22c40>
   3410c:	b	34158 <__assert_fail@plt+0x22c54>
   34110:	ldr	r0, [pc, #2816]	; 34c18 <__assert_fail@plt+0x23714>
   34114:	ldr	r1, [fp, #-12]
   34118:	udiv	r0, r0, r1
   3411c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34120:	cmp	r0, r1
   34124:	bcc	34144 <__assert_fail@plt+0x22c40>
   34128:	b	34158 <__assert_fail@plt+0x22c54>
   3412c:	ldr	r0, [pc, #2784]	; 34c14 <__assert_fail@plt+0x23710>
   34130:	ldr	r1, [fp, #-20]	; 0xffffffec
   34134:	udiv	r0, r0, r1
   34138:	ldr	r1, [fp, #-12]
   3413c:	cmp	r0, r1
   34140:	bcs	34158 <__assert_fail@plt+0x22c54>
   34144:	ldr	r0, [fp, #-12]
   34148:	ldr	r1, [fp, #-20]	; 0xffffffec
   3414c:	mul	r0, r0, r1
   34150:	str	r0, [fp, #-24]	; 0xffffffe8
   34154:	b	34b1c <__assert_fail@plt+0x23618>
   34158:	ldr	r0, [fp, #-12]
   3415c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34160:	mul	r0, r0, r1
   34164:	str	r0, [fp, #-24]	; 0xffffffe8
   34168:	b	34b38 <__assert_fail@plt+0x23634>
   3416c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34170:	cmp	r0, #0
   34174:	bcs	34280 <__assert_fail@plt+0x22d7c>
   34178:	ldr	r0, [fp, #-12]
   3417c:	cmp	r0, #0
   34180:	bcs	34208 <__assert_fail@plt+0x22d04>
   34184:	b	341a4 <__assert_fail@plt+0x22ca0>
   34188:	ldr	r0, [fp, #-12]
   3418c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34190:	mvn	r2, #0
   34194:	udiv	r1, r2, r1
   34198:	cmp	r0, r1
   3419c:	bcc	3431c <__assert_fail@plt+0x22e18>
   341a0:	b	34330 <__assert_fail@plt+0x22e2c>
   341a4:	b	341b8 <__assert_fail@plt+0x22cb4>
   341a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   341ac:	cmp	r0, #1
   341b0:	bcc	341c8 <__assert_fail@plt+0x22cc4>
   341b4:	b	341d4 <__assert_fail@plt+0x22cd0>
   341b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   341bc:	movw	r1, #0
   341c0:	cmp	r1, r0
   341c4:	bcs	341d4 <__assert_fail@plt+0x22cd0>
   341c8:	movw	r0, #1
   341cc:	str	r0, [sp, #52]	; 0x34
   341d0:	b	341ec <__assert_fail@plt+0x22ce8>
   341d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   341d8:	movw	r1, #0
   341dc:	sub	r0, r1, r0
   341e0:	mvn	r1, #0
   341e4:	udiv	r0, r1, r0
   341e8:	str	r0, [sp, #52]	; 0x34
   341ec:	ldr	r0, [sp, #52]	; 0x34
   341f0:	ldr	r1, [fp, #-12]
   341f4:	mvn	r2, #0
   341f8:	sub	r1, r2, r1
   341fc:	cmp	r0, r1
   34200:	bls	3431c <__assert_fail@plt+0x22e18>
   34204:	b	34330 <__assert_fail@plt+0x22e2c>
   34208:	b	34210 <__assert_fail@plt+0x22d0c>
   3420c:	b	34214 <__assert_fail@plt+0x22d10>
   34210:	b	34264 <__assert_fail@plt+0x22d60>
   34214:	ldr	r0, [fp, #-20]	; 0xffffffec
   34218:	cmn	r0, #1
   3421c:	bne	34264 <__assert_fail@plt+0x22d60>
   34220:	b	3423c <__assert_fail@plt+0x22d38>
   34224:	ldr	r0, [fp, #-12]
   34228:	add	r0, r0, #0
   3422c:	movw	r1, #0
   34230:	cmp	r1, r0
   34234:	bcc	3431c <__assert_fail@plt+0x22e18>
   34238:	b	34330 <__assert_fail@plt+0x22e2c>
   3423c:	ldr	r0, [fp, #-12]
   34240:	movw	r1, #0
   34244:	cmp	r1, r0
   34248:	bcs	34330 <__assert_fail@plt+0x22e2c>
   3424c:	ldr	r0, [fp, #-12]
   34250:	sub	r0, r0, #1
   34254:	mvn	r1, #0
   34258:	cmp	r1, r0
   3425c:	bcc	3431c <__assert_fail@plt+0x22e18>
   34260:	b	34330 <__assert_fail@plt+0x22e2c>
   34264:	ldr	r0, [fp, #-20]	; 0xffffffec
   34268:	movw	r1, #0
   3426c:	udiv	r0, r1, r0
   34270:	ldr	r1, [fp, #-12]
   34274:	cmp	r0, r1
   34278:	bcc	3431c <__assert_fail@plt+0x22e18>
   3427c:	b	34330 <__assert_fail@plt+0x22e2c>
   34280:	ldr	r0, [fp, #-20]	; 0xffffffec
   34284:	cmp	r0, #0
   34288:	bne	34290 <__assert_fail@plt+0x22d8c>
   3428c:	b	34330 <__assert_fail@plt+0x22e2c>
   34290:	ldr	r0, [fp, #-12]
   34294:	cmp	r0, #0
   34298:	bcs	34304 <__assert_fail@plt+0x22e00>
   3429c:	b	342a4 <__assert_fail@plt+0x22da0>
   342a0:	b	342a8 <__assert_fail@plt+0x22da4>
   342a4:	b	342e8 <__assert_fail@plt+0x22de4>
   342a8:	ldr	r0, [fp, #-12]
   342ac:	cmn	r0, #1
   342b0:	bne	342e8 <__assert_fail@plt+0x22de4>
   342b4:	b	342d0 <__assert_fail@plt+0x22dcc>
   342b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   342bc:	add	r0, r0, #0
   342c0:	movw	r1, #0
   342c4:	cmp	r1, r0
   342c8:	bcc	3431c <__assert_fail@plt+0x22e18>
   342cc:	b	34330 <__assert_fail@plt+0x22e2c>
   342d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   342d4:	sub	r0, r0, #1
   342d8:	mvn	r1, #0
   342dc:	cmp	r1, r0
   342e0:	bcc	3431c <__assert_fail@plt+0x22e18>
   342e4:	b	34330 <__assert_fail@plt+0x22e2c>
   342e8:	ldr	r0, [fp, #-12]
   342ec:	movw	r1, #0
   342f0:	udiv	r0, r1, r0
   342f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   342f8:	cmp	r0, r1
   342fc:	bcc	3431c <__assert_fail@plt+0x22e18>
   34300:	b	34330 <__assert_fail@plt+0x22e2c>
   34304:	ldr	r0, [fp, #-20]	; 0xffffffec
   34308:	mvn	r1, #0
   3430c:	udiv	r0, r1, r0
   34310:	ldr	r1, [fp, #-12]
   34314:	cmp	r0, r1
   34318:	bcs	34330 <__assert_fail@plt+0x22e2c>
   3431c:	ldr	r0, [fp, #-12]
   34320:	ldr	r1, [fp, #-20]	; 0xffffffec
   34324:	mul	r0, r0, r1
   34328:	str	r0, [fp, #-24]	; 0xffffffe8
   3432c:	b	34b1c <__assert_fail@plt+0x23618>
   34330:	ldr	r0, [fp, #-12]
   34334:	ldr	r1, [fp, #-20]	; 0xffffffec
   34338:	mul	r0, r0, r1
   3433c:	str	r0, [fp, #-24]	; 0xffffffe8
   34340:	b	34b38 <__assert_fail@plt+0x23634>
   34344:	b	34348 <__assert_fail@plt+0x22e44>
   34348:	b	3450c <__assert_fail@plt+0x23008>
   3434c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34350:	cmp	r0, #0
   34354:	bcs	34454 <__assert_fail@plt+0x22f50>
   34358:	ldr	r0, [fp, #-12]
   3435c:	cmp	r0, #0
   34360:	bcs	343e8 <__assert_fail@plt+0x22ee4>
   34364:	b	34384 <__assert_fail@plt+0x22e80>
   34368:	ldr	r0, [pc, #2212]	; 34c14 <__assert_fail@plt+0x23710>
   3436c:	ldr	r1, [fp, #-12]
   34370:	ldr	r2, [fp, #-20]	; 0xffffffec
   34374:	udiv	r0, r0, r2
   34378:	cmp	r1, r0
   3437c:	bcc	344e4 <__assert_fail@plt+0x22fe0>
   34380:	b	344f8 <__assert_fail@plt+0x22ff4>
   34384:	b	34398 <__assert_fail@plt+0x22e94>
   34388:	ldr	r0, [fp, #-20]	; 0xffffffec
   3438c:	cmp	r0, #1
   34390:	bcc	343a8 <__assert_fail@plt+0x22ea4>
   34394:	b	343b4 <__assert_fail@plt+0x22eb0>
   34398:	ldr	r0, [fp, #-20]	; 0xffffffec
   3439c:	movw	r1, #0
   343a0:	cmp	r1, r0
   343a4:	bcs	343b4 <__assert_fail@plt+0x22eb0>
   343a8:	movw	r0, #0
   343ac:	str	r0, [sp, #48]	; 0x30
   343b0:	b	343cc <__assert_fail@plt+0x22ec8>
   343b4:	ldr	r0, [pc, #2136]	; 34c14 <__assert_fail@plt+0x23710>
   343b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   343bc:	movw	r2, #0
   343c0:	sub	r1, r2, r1
   343c4:	udiv	r0, r0, r1
   343c8:	str	r0, [sp, #48]	; 0x30
   343cc:	ldr	r0, [sp, #48]	; 0x30
   343d0:	ldr	r1, [fp, #-12]
   343d4:	mvn	r2, #0
   343d8:	sub	r1, r2, r1
   343dc:	cmp	r0, r1
   343e0:	bls	344e4 <__assert_fail@plt+0x22fe0>
   343e4:	b	344f8 <__assert_fail@plt+0x22ff4>
   343e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   343ec:	cmn	r0, #1
   343f0:	bne	34438 <__assert_fail@plt+0x22f34>
   343f4:	b	34410 <__assert_fail@plt+0x22f0c>
   343f8:	ldr	r0, [fp, #-12]
   343fc:	add	r0, r0, #-2147483648	; 0x80000000
   34400:	movw	r1, #0
   34404:	cmp	r1, r0
   34408:	bcc	344e4 <__assert_fail@plt+0x22fe0>
   3440c:	b	344f8 <__assert_fail@plt+0x22ff4>
   34410:	ldr	r0, [fp, #-12]
   34414:	movw	r1, #0
   34418:	cmp	r1, r0
   3441c:	bcs	344f8 <__assert_fail@plt+0x22ff4>
   34420:	ldr	r0, [pc, #2028]	; 34c14 <__assert_fail@plt+0x23710>
   34424:	ldr	r1, [fp, #-12]
   34428:	sub	r1, r1, #1
   3442c:	cmp	r0, r1
   34430:	bcc	344e4 <__assert_fail@plt+0x22fe0>
   34434:	b	344f8 <__assert_fail@plt+0x22ff4>
   34438:	ldr	r0, [pc, #2008]	; 34c18 <__assert_fail@plt+0x23714>
   3443c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34440:	udiv	r0, r0, r1
   34444:	ldr	r1, [fp, #-12]
   34448:	cmp	r0, r1
   3444c:	bcc	344e4 <__assert_fail@plt+0x22fe0>
   34450:	b	344f8 <__assert_fail@plt+0x22ff4>
   34454:	ldr	r0, [fp, #-20]	; 0xffffffec
   34458:	cmp	r0, #0
   3445c:	bne	34464 <__assert_fail@plt+0x22f60>
   34460:	b	344f8 <__assert_fail@plt+0x22ff4>
   34464:	ldr	r0, [fp, #-12]
   34468:	cmp	r0, #0
   3446c:	bcs	344cc <__assert_fail@plt+0x22fc8>
   34470:	ldr	r0, [fp, #-12]
   34474:	cmn	r0, #1
   34478:	bne	344b0 <__assert_fail@plt+0x22fac>
   3447c:	b	34498 <__assert_fail@plt+0x22f94>
   34480:	ldr	r0, [fp, #-20]	; 0xffffffec
   34484:	add	r0, r0, #-2147483648	; 0x80000000
   34488:	movw	r1, #0
   3448c:	cmp	r1, r0
   34490:	bcc	344e4 <__assert_fail@plt+0x22fe0>
   34494:	b	344f8 <__assert_fail@plt+0x22ff4>
   34498:	ldr	r0, [pc, #1908]	; 34c14 <__assert_fail@plt+0x23710>
   3449c:	ldr	r1, [fp, #-20]	; 0xffffffec
   344a0:	sub	r1, r1, #1
   344a4:	cmp	r0, r1
   344a8:	bcc	344e4 <__assert_fail@plt+0x22fe0>
   344ac:	b	344f8 <__assert_fail@plt+0x22ff4>
   344b0:	ldr	r0, [pc, #1888]	; 34c18 <__assert_fail@plt+0x23714>
   344b4:	ldr	r1, [fp, #-12]
   344b8:	udiv	r0, r0, r1
   344bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   344c0:	cmp	r0, r1
   344c4:	bcc	344e4 <__assert_fail@plt+0x22fe0>
   344c8:	b	344f8 <__assert_fail@plt+0x22ff4>
   344cc:	ldr	r0, [pc, #1856]	; 34c14 <__assert_fail@plt+0x23710>
   344d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   344d4:	udiv	r0, r0, r1
   344d8:	ldr	r1, [fp, #-12]
   344dc:	cmp	r0, r1
   344e0:	bcs	344f8 <__assert_fail@plt+0x22ff4>
   344e4:	ldr	r0, [fp, #-12]
   344e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   344ec:	mul	r0, r0, r1
   344f0:	str	r0, [fp, #-24]	; 0xffffffe8
   344f4:	b	34b1c <__assert_fail@plt+0x23618>
   344f8:	ldr	r0, [fp, #-12]
   344fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   34500:	mul	r0, r0, r1
   34504:	str	r0, [fp, #-24]	; 0xffffffe8
   34508:	b	34b38 <__assert_fail@plt+0x23634>
   3450c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34510:	cmp	r0, #0
   34514:	bcs	34620 <__assert_fail@plt+0x2311c>
   34518:	ldr	r0, [fp, #-12]
   3451c:	cmp	r0, #0
   34520:	bcs	345a8 <__assert_fail@plt+0x230a4>
   34524:	b	34544 <__assert_fail@plt+0x23040>
   34528:	ldr	r0, [fp, #-12]
   3452c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34530:	mvn	r2, #0
   34534:	udiv	r1, r2, r1
   34538:	cmp	r0, r1
   3453c:	bcc	346bc <__assert_fail@plt+0x231b8>
   34540:	b	346d0 <__assert_fail@plt+0x231cc>
   34544:	b	34558 <__assert_fail@plt+0x23054>
   34548:	ldr	r0, [fp, #-20]	; 0xffffffec
   3454c:	cmp	r0, #1
   34550:	bcc	34568 <__assert_fail@plt+0x23064>
   34554:	b	34574 <__assert_fail@plt+0x23070>
   34558:	ldr	r0, [fp, #-20]	; 0xffffffec
   3455c:	movw	r1, #0
   34560:	cmp	r1, r0
   34564:	bcs	34574 <__assert_fail@plt+0x23070>
   34568:	movw	r0, #1
   3456c:	str	r0, [sp, #44]	; 0x2c
   34570:	b	3458c <__assert_fail@plt+0x23088>
   34574:	ldr	r0, [fp, #-20]	; 0xffffffec
   34578:	movw	r1, #0
   3457c:	sub	r0, r1, r0
   34580:	mvn	r1, #0
   34584:	udiv	r0, r1, r0
   34588:	str	r0, [sp, #44]	; 0x2c
   3458c:	ldr	r0, [sp, #44]	; 0x2c
   34590:	ldr	r1, [fp, #-12]
   34594:	mvn	r2, #0
   34598:	sub	r1, r2, r1
   3459c:	cmp	r0, r1
   345a0:	bls	346bc <__assert_fail@plt+0x231b8>
   345a4:	b	346d0 <__assert_fail@plt+0x231cc>
   345a8:	b	345b0 <__assert_fail@plt+0x230ac>
   345ac:	b	345b4 <__assert_fail@plt+0x230b0>
   345b0:	b	34604 <__assert_fail@plt+0x23100>
   345b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   345b8:	cmn	r0, #1
   345bc:	bne	34604 <__assert_fail@plt+0x23100>
   345c0:	b	345dc <__assert_fail@plt+0x230d8>
   345c4:	ldr	r0, [fp, #-12]
   345c8:	add	r0, r0, #0
   345cc:	movw	r1, #0
   345d0:	cmp	r1, r0
   345d4:	bcc	346bc <__assert_fail@plt+0x231b8>
   345d8:	b	346d0 <__assert_fail@plt+0x231cc>
   345dc:	ldr	r0, [fp, #-12]
   345e0:	movw	r1, #0
   345e4:	cmp	r1, r0
   345e8:	bcs	346d0 <__assert_fail@plt+0x231cc>
   345ec:	ldr	r0, [fp, #-12]
   345f0:	sub	r0, r0, #1
   345f4:	mvn	r1, #0
   345f8:	cmp	r1, r0
   345fc:	bcc	346bc <__assert_fail@plt+0x231b8>
   34600:	b	346d0 <__assert_fail@plt+0x231cc>
   34604:	ldr	r0, [fp, #-20]	; 0xffffffec
   34608:	movw	r1, #0
   3460c:	udiv	r0, r1, r0
   34610:	ldr	r1, [fp, #-12]
   34614:	cmp	r0, r1
   34618:	bcc	346bc <__assert_fail@plt+0x231b8>
   3461c:	b	346d0 <__assert_fail@plt+0x231cc>
   34620:	ldr	r0, [fp, #-20]	; 0xffffffec
   34624:	cmp	r0, #0
   34628:	bne	34630 <__assert_fail@plt+0x2312c>
   3462c:	b	346d0 <__assert_fail@plt+0x231cc>
   34630:	ldr	r0, [fp, #-12]
   34634:	cmp	r0, #0
   34638:	bcs	346a4 <__assert_fail@plt+0x231a0>
   3463c:	b	34644 <__assert_fail@plt+0x23140>
   34640:	b	34648 <__assert_fail@plt+0x23144>
   34644:	b	34688 <__assert_fail@plt+0x23184>
   34648:	ldr	r0, [fp, #-12]
   3464c:	cmn	r0, #1
   34650:	bne	34688 <__assert_fail@plt+0x23184>
   34654:	b	34670 <__assert_fail@plt+0x2316c>
   34658:	ldr	r0, [fp, #-20]	; 0xffffffec
   3465c:	add	r0, r0, #0
   34660:	movw	r1, #0
   34664:	cmp	r1, r0
   34668:	bcc	346bc <__assert_fail@plt+0x231b8>
   3466c:	b	346d0 <__assert_fail@plt+0x231cc>
   34670:	ldr	r0, [fp, #-20]	; 0xffffffec
   34674:	sub	r0, r0, #1
   34678:	mvn	r1, #0
   3467c:	cmp	r1, r0
   34680:	bcc	346bc <__assert_fail@plt+0x231b8>
   34684:	b	346d0 <__assert_fail@plt+0x231cc>
   34688:	ldr	r0, [fp, #-12]
   3468c:	movw	r1, #0
   34690:	udiv	r0, r1, r0
   34694:	ldr	r1, [fp, #-20]	; 0xffffffec
   34698:	cmp	r0, r1
   3469c:	bcc	346bc <__assert_fail@plt+0x231b8>
   346a0:	b	346d0 <__assert_fail@plt+0x231cc>
   346a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   346a8:	mvn	r1, #0
   346ac:	udiv	r0, r1, r0
   346b0:	ldr	r1, [fp, #-12]
   346b4:	cmp	r0, r1
   346b8:	bcs	346d0 <__assert_fail@plt+0x231cc>
   346bc:	ldr	r0, [fp, #-12]
   346c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   346c4:	mul	r0, r0, r1
   346c8:	str	r0, [fp, #-24]	; 0xffffffe8
   346cc:	b	34b1c <__assert_fail@plt+0x23618>
   346d0:	ldr	r0, [fp, #-12]
   346d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   346d8:	mul	r0, r0, r1
   346dc:	str	r0, [fp, #-24]	; 0xffffffe8
   346e0:	b	34b38 <__assert_fail@plt+0x23634>
   346e4:	b	34900 <__assert_fail@plt+0x233fc>
   346e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   346ec:	cmp	r0, #0
   346f0:	bcs	34830 <__assert_fail@plt+0x2332c>
   346f4:	ldr	r0, [fp, #-12]
   346f8:	cmp	r0, #0
   346fc:	bcs	347bc <__assert_fail@plt+0x232b8>
   34700:	b	34704 <__assert_fail@plt+0x23200>
   34704:	ldr	r0, [fp, #-12]
   34708:	ldr	r2, [fp, #-20]	; 0xffffffec
   3470c:	mvn	r1, #0
   34710:	mvn	r3, #-2147483648	; 0x80000000
   34714:	mov	ip, #0
   34718:	str	r0, [sp, #40]	; 0x28
   3471c:	mov	r0, r1
   34720:	mov	r1, r3
   34724:	mov	r3, ip
   34728:	bl	36b8c <__assert_fail@plt+0x25688>
   3472c:	ldr	r2, [sp, #40]	; 0x28
   34730:	subs	r0, r2, r0
   34734:	rscs	r1, r1, #0
   34738:	blt	348d8 <__assert_fail@plt+0x233d4>
   3473c:	b	348ec <__assert_fail@plt+0x233e8>
   34740:	b	34754 <__assert_fail@plt+0x23250>
   34744:	ldr	r0, [fp, #-20]	; 0xffffffec
   34748:	cmp	r0, #1
   3474c:	bcc	34764 <__assert_fail@plt+0x23260>
   34750:	b	34778 <__assert_fail@plt+0x23274>
   34754:	ldr	r0, [fp, #-20]	; 0xffffffec
   34758:	movw	r1, #0
   3475c:	cmp	r1, r0
   34760:	bcs	34778 <__assert_fail@plt+0x23274>
   34764:	mov	r0, #0
   34768:	mvn	r1, #0
   3476c:	str	r1, [sp, #36]	; 0x24
   34770:	str	r0, [sp, #32]
   34774:	b	3479c <__assert_fail@plt+0x23298>
   34778:	ldr	r0, [fp, #-20]	; 0xffffffec
   3477c:	rsb	r2, r0, #0
   34780:	mvn	r0, #0
   34784:	mvn	r1, #-2147483648	; 0x80000000
   34788:	mov	r3, #0
   3478c:	bl	36b8c <__assert_fail@plt+0x25688>
   34790:	str	r0, [sp, #36]	; 0x24
   34794:	str	r1, [sp, #32]
   34798:	b	3479c <__assert_fail@plt+0x23298>
   3479c:	ldr	r0, [sp, #32]
   347a0:	ldr	r1, [sp, #36]	; 0x24
   347a4:	ldr	r2, [fp, #-12]
   347a8:	mvn	r2, r2
   347ac:	subs	r1, r2, r1
   347b0:	rscs	r0, r0, #0
   347b4:	bge	348d8 <__assert_fail@plt+0x233d4>
   347b8:	b	348ec <__assert_fail@plt+0x233e8>
   347bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   347c0:	cmn	r0, #1
   347c4:	bne	34804 <__assert_fail@plt+0x23300>
   347c8:	b	347e4 <__assert_fail@plt+0x232e0>
   347cc:	ldr	r0, [fp, #-12]
   347d0:	rsbs	r0, r0, #0
   347d4:	mov	r1, #0
   347d8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   347dc:	blt	348d8 <__assert_fail@plt+0x233d4>
   347e0:	b	348ec <__assert_fail@plt+0x233e8>
   347e4:	ldr	r0, [fp, #-12]
   347e8:	movw	r1, #0
   347ec:	cmp	r1, r0
   347f0:	bcs	348ec <__assert_fail@plt+0x233e8>
   347f4:	mov	r0, #0
   347f8:	cmp	r0, #0
   347fc:	bne	348d8 <__assert_fail@plt+0x233d4>
   34800:	b	348ec <__assert_fail@plt+0x233e8>
   34804:	ldr	r2, [fp, #-20]	; 0xffffffec
   34808:	mov	r1, #-2147483648	; 0x80000000
   3480c:	mov	r0, #0
   34810:	str	r0, [sp, #28]
   34814:	ldr	r3, [sp, #28]
   34818:	bl	36ab8 <__assert_fail@plt+0x255b4>
   3481c:	ldr	r2, [fp, #-12]
   34820:	subs	r0, r0, r2
   34824:	sbcs	r1, r1, #0
   34828:	blt	348d8 <__assert_fail@plt+0x233d4>
   3482c:	b	348ec <__assert_fail@plt+0x233e8>
   34830:	ldr	r0, [fp, #-20]	; 0xffffffec
   34834:	cmp	r0, #0
   34838:	bne	34840 <__assert_fail@plt+0x2333c>
   3483c:	b	348ec <__assert_fail@plt+0x233e8>
   34840:	ldr	r0, [fp, #-12]
   34844:	cmp	r0, #0
   34848:	bcs	348b0 <__assert_fail@plt+0x233ac>
   3484c:	ldr	r0, [fp, #-12]
   34850:	cmn	r0, #1
   34854:	bne	34884 <__assert_fail@plt+0x23380>
   34858:	b	34874 <__assert_fail@plt+0x23370>
   3485c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34860:	rsbs	r0, r0, #0
   34864:	mov	r1, #0
   34868:	sbcs	r1, r1, #-2147483648	; 0x80000000
   3486c:	blt	348d8 <__assert_fail@plt+0x233d4>
   34870:	b	348ec <__assert_fail@plt+0x233e8>
   34874:	mov	r0, #0
   34878:	cmp	r0, #0
   3487c:	bne	348d8 <__assert_fail@plt+0x233d4>
   34880:	b	348ec <__assert_fail@plt+0x233e8>
   34884:	ldr	r2, [fp, #-12]
   34888:	mov	r1, #-2147483648	; 0x80000000
   3488c:	mov	r0, #0
   34890:	str	r0, [sp, #24]
   34894:	ldr	r3, [sp, #24]
   34898:	bl	36ab8 <__assert_fail@plt+0x255b4>
   3489c:	ldr	r2, [fp, #-20]	; 0xffffffec
   348a0:	subs	r0, r0, r2
   348a4:	sbcs	r1, r1, #0
   348a8:	blt	348d8 <__assert_fail@plt+0x233d4>
   348ac:	b	348ec <__assert_fail@plt+0x233e8>
   348b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   348b4:	mvn	r0, #0
   348b8:	mvn	r1, #-2147483648	; 0x80000000
   348bc:	mov	r3, #0
   348c0:	bl	36b8c <__assert_fail@plt+0x25688>
   348c4:	ldr	r2, [fp, #-12]
   348c8:	subs	r0, r0, r2
   348cc:	sbcs	r1, r1, #0
   348d0:	bge	348ec <__assert_fail@plt+0x233e8>
   348d4:	b	348d8 <__assert_fail@plt+0x233d4>
   348d8:	ldr	r0, [fp, #-12]
   348dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   348e0:	mul	r0, r0, r1
   348e4:	str	r0, [fp, #-24]	; 0xffffffe8
   348e8:	b	34b1c <__assert_fail@plt+0x23618>
   348ec:	ldr	r0, [fp, #-12]
   348f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   348f4:	mul	r0, r0, r1
   348f8:	str	r0, [fp, #-24]	; 0xffffffe8
   348fc:	b	34b38 <__assert_fail@plt+0x23634>
   34900:	ldr	r0, [fp, #-20]	; 0xffffffec
   34904:	cmp	r0, #0
   34908:	bcs	34a44 <__assert_fail@plt+0x23540>
   3490c:	ldr	r0, [fp, #-12]
   34910:	cmp	r0, #0
   34914:	bcs	349cc <__assert_fail@plt+0x234c8>
   34918:	b	3494c <__assert_fail@plt+0x23448>
   3491c:	ldr	r0, [fp, #-12]
   34920:	ldr	r2, [fp, #-20]	; 0xffffffec
   34924:	mvn	r1, #0
   34928:	mov	r3, #0
   3492c:	str	r0, [sp, #20]
   34930:	mov	r0, r1
   34934:	bl	36b8c <__assert_fail@plt+0x25688>
   34938:	ldr	r2, [sp, #20]
   3493c:	subs	r0, r2, r0
   34940:	rscs	r1, r1, #0
   34944:	bcc	34af4 <__assert_fail@plt+0x235f0>
   34948:	b	34b08 <__assert_fail@plt+0x23604>
   3494c:	b	34960 <__assert_fail@plt+0x2345c>
   34950:	ldr	r0, [fp, #-20]	; 0xffffffec
   34954:	cmp	r0, #1
   34958:	bcc	34970 <__assert_fail@plt+0x2346c>
   3495c:	b	34984 <__assert_fail@plt+0x23480>
   34960:	ldr	r0, [fp, #-20]	; 0xffffffec
   34964:	movw	r1, #0
   34968:	cmp	r1, r0
   3496c:	bcs	34984 <__assert_fail@plt+0x23480>
   34970:	mov	r0, #1
   34974:	mvn	r1, #0
   34978:	str	r1, [sp, #16]
   3497c:	str	r0, [sp, #12]
   34980:	b	349ac <__assert_fail@plt+0x234a8>
   34984:	ldr	r0, [fp, #-20]	; 0xffffffec
   34988:	rsb	r2, r0, #0
   3498c:	mvn	r0, #0
   34990:	mov	r3, #0
   34994:	str	r0, [sp, #8]
   34998:	ldr	r1, [sp, #8]
   3499c:	bl	36b8c <__assert_fail@plt+0x25688>
   349a0:	str	r0, [sp, #16]
   349a4:	str	r1, [sp, #12]
   349a8:	b	349ac <__assert_fail@plt+0x234a8>
   349ac:	ldr	r0, [sp, #12]
   349b0:	ldr	r1, [sp, #16]
   349b4:	ldr	r2, [fp, #-12]
   349b8:	mvn	r2, r2
   349bc:	subs	r1, r2, r1
   349c0:	rscs	r0, r0, #0
   349c4:	bcs	34af4 <__assert_fail@plt+0x235f0>
   349c8:	b	34b08 <__assert_fail@plt+0x23604>
   349cc:	b	349d4 <__assert_fail@plt+0x234d0>
   349d0:	b	349d8 <__assert_fail@plt+0x234d4>
   349d4:	b	34a28 <__assert_fail@plt+0x23524>
   349d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   349dc:	cmn	r0, #1
   349e0:	bne	34a28 <__assert_fail@plt+0x23524>
   349e4:	b	34a00 <__assert_fail@plt+0x234fc>
   349e8:	ldr	r0, [fp, #-12]
   349ec:	add	r0, r0, #0
   349f0:	movw	r1, #0
   349f4:	cmp	r1, r0
   349f8:	bcc	34af4 <__assert_fail@plt+0x235f0>
   349fc:	b	34b08 <__assert_fail@plt+0x23604>
   34a00:	ldr	r0, [fp, #-12]
   34a04:	movw	r1, #0
   34a08:	cmp	r1, r0
   34a0c:	bcs	34b08 <__assert_fail@plt+0x23604>
   34a10:	ldr	r0, [fp, #-12]
   34a14:	sub	r0, r0, #1
   34a18:	mvn	r1, #0
   34a1c:	cmp	r1, r0
   34a20:	bcc	34af4 <__assert_fail@plt+0x235f0>
   34a24:	b	34b08 <__assert_fail@plt+0x23604>
   34a28:	ldr	r0, [fp, #-20]	; 0xffffffec
   34a2c:	movw	r1, #0
   34a30:	udiv	r0, r1, r0
   34a34:	ldr	r1, [fp, #-12]
   34a38:	cmp	r0, r1
   34a3c:	bcc	34af4 <__assert_fail@plt+0x235f0>
   34a40:	b	34b08 <__assert_fail@plt+0x23604>
   34a44:	ldr	r0, [fp, #-20]	; 0xffffffec
   34a48:	cmp	r0, #0
   34a4c:	bne	34a54 <__assert_fail@plt+0x23550>
   34a50:	b	34b08 <__assert_fail@plt+0x23604>
   34a54:	ldr	r0, [fp, #-12]
   34a58:	cmp	r0, #0
   34a5c:	bcs	34ac8 <__assert_fail@plt+0x235c4>
   34a60:	b	34a68 <__assert_fail@plt+0x23564>
   34a64:	b	34a6c <__assert_fail@plt+0x23568>
   34a68:	b	34aac <__assert_fail@plt+0x235a8>
   34a6c:	ldr	r0, [fp, #-12]
   34a70:	cmn	r0, #1
   34a74:	bne	34aac <__assert_fail@plt+0x235a8>
   34a78:	b	34a94 <__assert_fail@plt+0x23590>
   34a7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34a80:	add	r0, r0, #0
   34a84:	movw	r1, #0
   34a88:	cmp	r1, r0
   34a8c:	bcc	34af4 <__assert_fail@plt+0x235f0>
   34a90:	b	34b08 <__assert_fail@plt+0x23604>
   34a94:	ldr	r0, [fp, #-20]	; 0xffffffec
   34a98:	sub	r0, r0, #1
   34a9c:	mvn	r1, #0
   34aa0:	cmp	r1, r0
   34aa4:	bcc	34af4 <__assert_fail@plt+0x235f0>
   34aa8:	b	34b08 <__assert_fail@plt+0x23604>
   34aac:	ldr	r0, [fp, #-12]
   34ab0:	movw	r1, #0
   34ab4:	udiv	r0, r1, r0
   34ab8:	ldr	r1, [fp, #-20]	; 0xffffffec
   34abc:	cmp	r0, r1
   34ac0:	bcc	34af4 <__assert_fail@plt+0x235f0>
   34ac4:	b	34b08 <__assert_fail@plt+0x23604>
   34ac8:	ldr	r2, [fp, #-20]	; 0xffffffec
   34acc:	mvn	r0, #0
   34ad0:	mov	r3, #0
   34ad4:	str	r0, [sp, #4]
   34ad8:	ldr	r1, [sp, #4]
   34adc:	bl	36b8c <__assert_fail@plt+0x25688>
   34ae0:	ldr	r2, [fp, #-12]
   34ae4:	subs	r0, r0, r2
   34ae8:	sbcs	r1, r1, #0
   34aec:	bcs	34b08 <__assert_fail@plt+0x23604>
   34af0:	b	34af4 <__assert_fail@plt+0x235f0>
   34af4:	ldr	r0, [fp, #-12]
   34af8:	ldr	r1, [fp, #-20]	; 0xffffffec
   34afc:	mul	r0, r0, r1
   34b00:	str	r0, [fp, #-24]	; 0xffffffe8
   34b04:	b	34b1c <__assert_fail@plt+0x23618>
   34b08:	ldr	r0, [fp, #-12]
   34b0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34b10:	mul	r0, r0, r1
   34b14:	str	r0, [fp, #-24]	; 0xffffffe8
   34b18:	b	34b38 <__assert_fail@plt+0x23634>
   34b1c:	bl	113fc <__errno_location@plt>
   34b20:	movw	r1, #12
   34b24:	str	r1, [r0]
   34b28:	movw	r0, #0
   34b2c:	and	r0, r0, #1
   34b30:	strb	r0, [fp, #-1]
   34b34:	b	34c04 <__assert_fail@plt+0x23700>
   34b38:	ldr	r0, [fp, #-8]
   34b3c:	ldr	r0, [r0, #8]
   34b40:	ldr	r1, [fp, #-16]
   34b44:	cmp	r0, r1
   34b48:	bne	34ba0 <__assert_fail@plt+0x2369c>
   34b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34b50:	bl	3354c <__assert_fail@plt+0x22048>
   34b54:	str	r0, [fp, #-28]	; 0xffffffe4
   34b58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34b5c:	movw	r1, #0
   34b60:	cmp	r0, r1
   34b64:	beq	34b9c <__assert_fail@plt+0x23698>
   34b68:	ldr	r0, [fp, #-8]
   34b6c:	ldr	r0, [r0, #8]
   34b70:	movw	r1, #0
   34b74:	cmp	r0, r1
   34b78:	beq	34b9c <__assert_fail@plt+0x23698>
   34b7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34b80:	ldr	r1, [fp, #-8]
   34b84:	ldr	r1, [r1, #8]
   34b88:	ldr	r2, [fp, #-8]
   34b8c:	ldr	r2, [r2]
   34b90:	ldr	r3, [fp, #-20]	; 0xffffffec
   34b94:	mul	r2, r2, r3
   34b98:	bl	112a0 <memcpy@plt>
   34b9c:	b	34bb4 <__assert_fail@plt+0x236b0>
   34ba0:	ldr	r0, [fp, #-8]
   34ba4:	ldr	r0, [r0, #8]
   34ba8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34bac:	bl	335bc <__assert_fail@plt+0x220b8>
   34bb0:	str	r0, [fp, #-28]	; 0xffffffe4
   34bb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34bb8:	movw	r1, #0
   34bbc:	cmp	r0, r1
   34bc0:	bne	34bd4 <__assert_fail@plt+0x236d0>
   34bc4:	movw	r0, #0
   34bc8:	and	r0, r0, #1
   34bcc:	strb	r0, [fp, #-1]
   34bd0:	b	34c04 <__assert_fail@plt+0x23700>
   34bd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34bd8:	ldr	r1, [fp, #-8]
   34bdc:	str	r0, [r1, #8]
   34be0:	ldr	r0, [fp, #-12]
   34be4:	ldr	r1, [fp, #-8]
   34be8:	str	r0, [r1, #4]
   34bec:	ldr	r0, [fp, #-12]
   34bf0:	ldr	r1, [fp, #-8]
   34bf4:	str	r0, [r1]
   34bf8:	movw	r0, #1
   34bfc:	and	r0, r0, #1
   34c00:	strb	r0, [fp, #-1]
   34c04:	ldrb	r0, [fp, #-1]
   34c08:	and	r0, r0, #1
   34c0c:	mov	sp, fp
   34c10:	pop	{fp, pc}
   34c14:	svcvc	0x00ffffff
   34c18:	andhi	r0, r0, r0
   34c1c:			; <UNDEFINED> instruction: 0xffff8000
   34c20:	push	{fp, lr}
   34c24:	mov	fp, sp
   34c28:	sub	sp, sp, #16
   34c2c:	str	r0, [fp, #-4]
   34c30:	bl	113fc <__errno_location@plt>
   34c34:	ldr	r0, [r0]
   34c38:	str	r0, [sp, #8]
   34c3c:	ldr	r0, [fp, #-4]
   34c40:	bl	1127c <free@plt>
   34c44:	ldr	r0, [sp, #8]
   34c48:	str	r0, [sp, #4]
   34c4c:	bl	113fc <__errno_location@plt>
   34c50:	ldr	r1, [sp, #4]
   34c54:	str	r1, [r0]
   34c58:	mov	sp, fp
   34c5c:	pop	{fp, pc}
   34c60:	push	{fp, lr}
   34c64:	mov	fp, sp
   34c68:	bl	113fc <__errno_location@plt>
   34c6c:	movw	r1, #12
   34c70:	str	r1, [r0]
   34c74:	movw	r0, #0
   34c78:	pop	{fp, pc}
   34c7c:	push	{fp, lr}
   34c80:	mov	fp, sp
   34c84:	sub	sp, sp, #8
   34c88:	str	r0, [sp, #4]
   34c8c:	ldr	r0, [sp, #4]
   34c90:	cmn	r0, #1
   34c94:	bhi	34ca8 <__assert_fail@plt+0x237a4>
   34c98:	ldr	r0, [sp, #4]
   34c9c:	bl	3354c <__assert_fail@plt+0x22048>
   34ca0:	str	r0, [sp]
   34ca4:	b	34cb0 <__assert_fail@plt+0x237ac>
   34ca8:	bl	34c60 <__assert_fail@plt+0x2375c>
   34cac:	str	r0, [sp]
   34cb0:	ldr	r0, [sp]
   34cb4:	mov	sp, fp
   34cb8:	pop	{fp, pc}
   34cbc:	push	{fp, lr}
   34cc0:	mov	fp, sp
   34cc4:	sub	sp, sp, #16
   34cc8:	str	r0, [fp, #-4]
   34ccc:	str	r1, [sp, #8]
   34cd0:	ldr	r0, [sp, #8]
   34cd4:	cmn	r0, #1
   34cd8:	bhi	34d10 <__assert_fail@plt+0x2380c>
   34cdc:	ldr	r0, [fp, #-4]
   34ce0:	ldr	r1, [sp, #8]
   34ce4:	ldr	r2, [sp, #8]
   34ce8:	cmp	r2, #0
   34cec:	movw	r2, #0
   34cf0:	movne	r2, #1
   34cf4:	mvn	r3, #0
   34cf8:	eor	r2, r2, r3
   34cfc:	and	r2, r2, #1
   34d00:	orr	r1, r1, r2
   34d04:	bl	335bc <__assert_fail@plt+0x220b8>
   34d08:	str	r0, [sp, #4]
   34d0c:	b	34d18 <__assert_fail@plt+0x23814>
   34d10:	bl	34c60 <__assert_fail@plt+0x2375c>
   34d14:	str	r0, [sp, #4]
   34d18:	ldr	r0, [sp, #4]
   34d1c:	mov	sp, fp
   34d20:	pop	{fp, pc}
   34d24:	push	{fp, lr}
   34d28:	mov	fp, sp
   34d2c:	sub	sp, sp, #16
   34d30:	str	r0, [sp, #8]
   34d34:	str	r1, [sp, #4]
   34d38:	ldr	r0, [sp, #8]
   34d3c:	mvn	r1, #0
   34d40:	cmp	r1, r0
   34d44:	bcs	34d68 <__assert_fail@plt+0x23864>
   34d48:	ldr	r0, [sp, #4]
   34d4c:	cmp	r0, #0
   34d50:	beq	34d60 <__assert_fail@plt+0x2385c>
   34d54:	bl	34c60 <__assert_fail@plt+0x2375c>
   34d58:	str	r0, [fp, #-4]
   34d5c:	b	34da8 <__assert_fail@plt+0x238a4>
   34d60:	movw	r0, #0
   34d64:	str	r0, [sp, #8]
   34d68:	ldr	r0, [sp, #4]
   34d6c:	mvn	r1, #0
   34d70:	cmp	r1, r0
   34d74:	bcs	34d98 <__assert_fail@plt+0x23894>
   34d78:	ldr	r0, [sp, #8]
   34d7c:	cmp	r0, #0
   34d80:	beq	34d90 <__assert_fail@plt+0x2388c>
   34d84:	bl	34c60 <__assert_fail@plt+0x2375c>
   34d88:	str	r0, [fp, #-4]
   34d8c:	b	34da8 <__assert_fail@plt+0x238a4>
   34d90:	movw	r0, #0
   34d94:	str	r0, [sp, #4]
   34d98:	ldr	r0, [sp, #8]
   34d9c:	ldr	r1, [sp, #4]
   34da0:	bl	334b0 <__assert_fail@plt+0x21fac>
   34da4:	str	r0, [fp, #-4]
   34da8:	ldr	r0, [fp, #-4]
   34dac:	mov	sp, fp
   34db0:	pop	{fp, pc}
   34db4:	push	{fp, lr}
   34db8:	mov	fp, sp
   34dbc:	sub	sp, sp, #16
   34dc0:	str	r0, [fp, #-4]
   34dc4:	str	r1, [sp, #8]
   34dc8:	str	r2, [sp, #4]
   34dcc:	ldr	r0, [sp, #8]
   34dd0:	cmp	r0, #0
   34dd4:	beq	34de4 <__assert_fail@plt+0x238e0>
   34dd8:	ldr	r0, [sp, #4]
   34ddc:	cmp	r0, #0
   34de0:	bne	34df0 <__assert_fail@plt+0x238ec>
   34de4:	movw	r0, #1
   34de8:	str	r0, [sp, #4]
   34dec:	str	r0, [sp, #8]
   34df0:	ldr	r0, [sp, #8]
   34df4:	cmn	r0, #1
   34df8:	bhi	34e20 <__assert_fail@plt+0x2391c>
   34dfc:	ldr	r0, [sp, #4]
   34e00:	cmn	r0, #1
   34e04:	bhi	34e20 <__assert_fail@plt+0x2391c>
   34e08:	ldr	r0, [fp, #-4]
   34e0c:	ldr	r1, [sp, #8]
   34e10:	ldr	r2, [sp, #4]
   34e14:	bl	34f40 <__assert_fail@plt+0x23a3c>
   34e18:	str	r0, [sp]
   34e1c:	b	34e28 <__assert_fail@plt+0x23924>
   34e20:	bl	34c60 <__assert_fail@plt+0x2375c>
   34e24:	str	r0, [sp]
   34e28:	ldr	r0, [sp]
   34e2c:	mov	sp, fp
   34e30:	pop	{fp, pc}
   34e34:	push	{fp, lr}
   34e38:	mov	fp, sp
   34e3c:	sub	sp, sp, #8
   34e40:	movw	r0, #14
   34e44:	bl	1148c <nl_langinfo@plt>
   34e48:	str	r0, [sp, #4]
   34e4c:	ldr	r0, [sp, #4]
   34e50:	movw	r1, #0
   34e54:	cmp	r0, r1
   34e58:	bne	34e68 <__assert_fail@plt+0x23964>
   34e5c:	movw	r0, #30738	; 0x7812
   34e60:	movt	r0, #3
   34e64:	str	r0, [sp, #4]
   34e68:	ldr	r0, [sp, #4]
   34e6c:	ldrb	r0, [r0]
   34e70:	cmp	r0, #0
   34e74:	bne	34e84 <__assert_fail@plt+0x23980>
   34e78:	movw	r0, #32900	; 0x8084
   34e7c:	movt	r0, #3
   34e80:	str	r0, [sp, #4]
   34e84:	ldr	r0, [sp, #4]
   34e88:	mov	sp, fp
   34e8c:	pop	{fp, pc}
   34e90:	push	{fp, lr}
   34e94:	mov	fp, sp
   34e98:	sub	sp, sp, #32
   34e9c:	str	r0, [fp, #-8]
   34ea0:	str	r1, [fp, #-12]
   34ea4:	str	r2, [sp, #16]
   34ea8:	str	r3, [sp, #12]
   34eac:	ldr	r0, [fp, #-8]
   34eb0:	movw	r1, #0
   34eb4:	cmp	r0, r1
   34eb8:	bne	34ec4 <__assert_fail@plt+0x239c0>
   34ebc:	add	r0, sp, #4
   34ec0:	str	r0, [fp, #-8]
   34ec4:	ldr	r0, [fp, #-8]
   34ec8:	ldr	r1, [fp, #-12]
   34ecc:	ldr	r2, [sp, #16]
   34ed0:	ldr	r3, [sp, #12]
   34ed4:	bl	11360 <mbrtowc@plt>
   34ed8:	str	r0, [sp, #8]
   34edc:	ldr	r0, [sp, #8]
   34ee0:	mvn	r1, #1
   34ee4:	cmp	r1, r0
   34ee8:	bhi	34f2c <__assert_fail@plt+0x23a28>
   34eec:	ldr	r0, [sp, #16]
   34ef0:	cmp	r0, #0
   34ef4:	beq	34f2c <__assert_fail@plt+0x23a28>
   34ef8:	movw	r0, #0
   34efc:	bl	368c0 <__assert_fail@plt+0x253bc>
   34f00:	tst	r0, #1
   34f04:	bne	34f2c <__assert_fail@plt+0x23a28>
   34f08:	ldr	r0, [fp, #-12]
   34f0c:	ldrb	r0, [r0]
   34f10:	strb	r0, [sp, #3]
   34f14:	ldrb	r0, [sp, #3]
   34f18:	ldr	r1, [fp, #-8]
   34f1c:	str	r0, [r1]
   34f20:	movw	r0, #1
   34f24:	str	r0, [fp, #-4]
   34f28:	b	34f34 <__assert_fail@plt+0x23a30>
   34f2c:	ldr	r0, [sp, #8]
   34f30:	str	r0, [fp, #-4]
   34f34:	ldr	r0, [fp, #-4]
   34f38:	mov	sp, fp
   34f3c:	pop	{fp, pc}
   34f40:	push	{fp, lr}
   34f44:	mov	fp, sp
   34f48:	sub	sp, sp, #96	; 0x60
   34f4c:	str	r0, [fp, #-8]
   34f50:	str	r1, [fp, #-12]
   34f54:	str	r2, [fp, #-16]
   34f58:	b	35310 <__assert_fail@plt+0x23e0c>
   34f5c:	b	35130 <__assert_fail@plt+0x23c2c>
   34f60:	ldr	r0, [fp, #-16]
   34f64:	cmp	r0, #0
   34f68:	bcs	3506c <__assert_fail@plt+0x23b68>
   34f6c:	ldr	r0, [fp, #-12]
   34f70:	cmp	r0, #0
   34f74:	bcs	34ffc <__assert_fail@plt+0x23af8>
   34f78:	b	34f98 <__assert_fail@plt+0x23a94>
   34f7c:	ldr	r0, [fp, #-12]
   34f80:	ldr	r1, [fp, #-16]
   34f84:	movw	r2, #127	; 0x7f
   34f88:	udiv	r1, r2, r1
   34f8c:	cmp	r0, r1
   34f90:	bcc	35100 <__assert_fail@plt+0x23bfc>
   34f94:	b	35118 <__assert_fail@plt+0x23c14>
   34f98:	b	34fac <__assert_fail@plt+0x23aa8>
   34f9c:	ldr	r0, [fp, #-16]
   34fa0:	cmp	r0, #1
   34fa4:	bcc	34fbc <__assert_fail@plt+0x23ab8>
   34fa8:	b	34fc8 <__assert_fail@plt+0x23ac4>
   34fac:	ldr	r0, [fp, #-16]
   34fb0:	movw	r1, #0
   34fb4:	cmp	r1, r0
   34fb8:	bcs	34fc8 <__assert_fail@plt+0x23ac4>
   34fbc:	movw	r0, #0
   34fc0:	str	r0, [fp, #-24]	; 0xffffffe8
   34fc4:	b	34fe0 <__assert_fail@plt+0x23adc>
   34fc8:	ldr	r0, [fp, #-16]
   34fcc:	movw	r1, #0
   34fd0:	sub	r0, r1, r0
   34fd4:	movw	r1, #127	; 0x7f
   34fd8:	udiv	r0, r1, r0
   34fdc:	str	r0, [fp, #-24]	; 0xffffffe8
   34fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34fe4:	ldr	r1, [fp, #-12]
   34fe8:	mvn	r2, #0
   34fec:	sub	r1, r2, r1
   34ff0:	cmp	r0, r1
   34ff4:	bls	35100 <__assert_fail@plt+0x23bfc>
   34ff8:	b	35118 <__assert_fail@plt+0x23c14>
   34ffc:	ldr	r0, [fp, #-16]
   35000:	cmn	r0, #1
   35004:	bne	35050 <__assert_fail@plt+0x23b4c>
   35008:	b	35028 <__assert_fail@plt+0x23b24>
   3500c:	ldr	r0, [fp, #-12]
   35010:	mvn	r1, #127	; 0x7f
   35014:	add	r0, r0, r1
   35018:	movw	r1, #0
   3501c:	cmp	r1, r0
   35020:	bcc	35100 <__assert_fail@plt+0x23bfc>
   35024:	b	35118 <__assert_fail@plt+0x23c14>
   35028:	ldr	r0, [fp, #-12]
   3502c:	movw	r1, #0
   35030:	cmp	r1, r0
   35034:	bcs	35118 <__assert_fail@plt+0x23c14>
   35038:	ldr	r0, [fp, #-12]
   3503c:	sub	r0, r0, #1
   35040:	movw	r1, #127	; 0x7f
   35044:	cmp	r1, r0
   35048:	bcc	35100 <__assert_fail@plt+0x23bfc>
   3504c:	b	35118 <__assert_fail@plt+0x23c14>
   35050:	ldr	r0, [fp, #-16]
   35054:	mvn	r1, #127	; 0x7f
   35058:	udiv	r0, r1, r0
   3505c:	ldr	r1, [fp, #-12]
   35060:	cmp	r0, r1
   35064:	bcc	35100 <__assert_fail@plt+0x23bfc>
   35068:	b	35118 <__assert_fail@plt+0x23c14>
   3506c:	ldr	r0, [fp, #-16]
   35070:	cmp	r0, #0
   35074:	bne	3507c <__assert_fail@plt+0x23b78>
   35078:	b	35118 <__assert_fail@plt+0x23c14>
   3507c:	ldr	r0, [fp, #-12]
   35080:	cmp	r0, #0
   35084:	bcs	350e8 <__assert_fail@plt+0x23be4>
   35088:	ldr	r0, [fp, #-12]
   3508c:	cmn	r0, #1
   35090:	bne	350cc <__assert_fail@plt+0x23bc8>
   35094:	b	350b4 <__assert_fail@plt+0x23bb0>
   35098:	ldr	r0, [fp, #-16]
   3509c:	mvn	r1, #127	; 0x7f
   350a0:	add	r0, r0, r1
   350a4:	movw	r1, #0
   350a8:	cmp	r1, r0
   350ac:	bcc	35100 <__assert_fail@plt+0x23bfc>
   350b0:	b	35118 <__assert_fail@plt+0x23c14>
   350b4:	ldr	r0, [fp, #-16]
   350b8:	sub	r0, r0, #1
   350bc:	movw	r1, #127	; 0x7f
   350c0:	cmp	r1, r0
   350c4:	bcc	35100 <__assert_fail@plt+0x23bfc>
   350c8:	b	35118 <__assert_fail@plt+0x23c14>
   350cc:	ldr	r0, [fp, #-12]
   350d0:	mvn	r1, #127	; 0x7f
   350d4:	udiv	r0, r1, r0
   350d8:	ldr	r1, [fp, #-16]
   350dc:	cmp	r0, r1
   350e0:	bcc	35100 <__assert_fail@plt+0x23bfc>
   350e4:	b	35118 <__assert_fail@plt+0x23c14>
   350e8:	ldr	r0, [fp, #-16]
   350ec:	movw	r1, #127	; 0x7f
   350f0:	udiv	r0, r1, r0
   350f4:	ldr	r1, [fp, #-12]
   350f8:	cmp	r0, r1
   350fc:	bcs	35118 <__assert_fail@plt+0x23c14>
   35100:	ldr	r0, [fp, #-12]
   35104:	ldr	r1, [fp, #-16]
   35108:	mul	r0, r0, r1
   3510c:	sxtb	r0, r0
   35110:	str	r0, [fp, #-20]	; 0xffffffec
   35114:	b	36240 <__assert_fail@plt+0x24d3c>
   35118:	ldr	r0, [fp, #-12]
   3511c:	ldr	r1, [fp, #-16]
   35120:	mul	r0, r0, r1
   35124:	sxtb	r0, r0
   35128:	str	r0, [fp, #-20]	; 0xffffffec
   3512c:	b	36258 <__assert_fail@plt+0x24d54>
   35130:	ldr	r0, [fp, #-16]
   35134:	cmp	r0, #0
   35138:	bcs	35244 <__assert_fail@plt+0x23d40>
   3513c:	ldr	r0, [fp, #-12]
   35140:	cmp	r0, #0
   35144:	bcs	351cc <__assert_fail@plt+0x23cc8>
   35148:	b	35168 <__assert_fail@plt+0x23c64>
   3514c:	ldr	r0, [fp, #-12]
   35150:	ldr	r1, [fp, #-16]
   35154:	movw	r2, #255	; 0xff
   35158:	udiv	r1, r2, r1
   3515c:	cmp	r0, r1
   35160:	bcc	352e0 <__assert_fail@plt+0x23ddc>
   35164:	b	352f8 <__assert_fail@plt+0x23df4>
   35168:	b	3517c <__assert_fail@plt+0x23c78>
   3516c:	ldr	r0, [fp, #-16]
   35170:	cmp	r0, #1
   35174:	bcc	3518c <__assert_fail@plt+0x23c88>
   35178:	b	35198 <__assert_fail@plt+0x23c94>
   3517c:	ldr	r0, [fp, #-16]
   35180:	movw	r1, #0
   35184:	cmp	r1, r0
   35188:	bcs	35198 <__assert_fail@plt+0x23c94>
   3518c:	movw	r0, #0
   35190:	str	r0, [fp, #-28]	; 0xffffffe4
   35194:	b	351b0 <__assert_fail@plt+0x23cac>
   35198:	ldr	r0, [fp, #-16]
   3519c:	movw	r1, #0
   351a0:	sub	r0, r1, r0
   351a4:	movw	r1, #255	; 0xff
   351a8:	udiv	r0, r1, r0
   351ac:	str	r0, [fp, #-28]	; 0xffffffe4
   351b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   351b4:	ldr	r1, [fp, #-12]
   351b8:	mvn	r2, #0
   351bc:	sub	r1, r2, r1
   351c0:	cmp	r0, r1
   351c4:	bls	352e0 <__assert_fail@plt+0x23ddc>
   351c8:	b	352f8 <__assert_fail@plt+0x23df4>
   351cc:	b	351d4 <__assert_fail@plt+0x23cd0>
   351d0:	b	351d8 <__assert_fail@plt+0x23cd4>
   351d4:	b	35228 <__assert_fail@plt+0x23d24>
   351d8:	ldr	r0, [fp, #-16]
   351dc:	cmn	r0, #1
   351e0:	bne	35228 <__assert_fail@plt+0x23d24>
   351e4:	b	35200 <__assert_fail@plt+0x23cfc>
   351e8:	ldr	r0, [fp, #-12]
   351ec:	add	r0, r0, #0
   351f0:	movw	r1, #0
   351f4:	cmp	r1, r0
   351f8:	bcc	352e0 <__assert_fail@plt+0x23ddc>
   351fc:	b	352f8 <__assert_fail@plt+0x23df4>
   35200:	ldr	r0, [fp, #-12]
   35204:	movw	r1, #0
   35208:	cmp	r1, r0
   3520c:	bcs	352f8 <__assert_fail@plt+0x23df4>
   35210:	ldr	r0, [fp, #-12]
   35214:	sub	r0, r0, #1
   35218:	mvn	r1, #0
   3521c:	cmp	r1, r0
   35220:	bcc	352e0 <__assert_fail@plt+0x23ddc>
   35224:	b	352f8 <__assert_fail@plt+0x23df4>
   35228:	ldr	r0, [fp, #-16]
   3522c:	movw	r1, #0
   35230:	udiv	r0, r1, r0
   35234:	ldr	r1, [fp, #-12]
   35238:	cmp	r0, r1
   3523c:	bcc	352e0 <__assert_fail@plt+0x23ddc>
   35240:	b	352f8 <__assert_fail@plt+0x23df4>
   35244:	ldr	r0, [fp, #-16]
   35248:	cmp	r0, #0
   3524c:	bne	35254 <__assert_fail@plt+0x23d50>
   35250:	b	352f8 <__assert_fail@plt+0x23df4>
   35254:	ldr	r0, [fp, #-12]
   35258:	cmp	r0, #0
   3525c:	bcs	352c8 <__assert_fail@plt+0x23dc4>
   35260:	b	35268 <__assert_fail@plt+0x23d64>
   35264:	b	3526c <__assert_fail@plt+0x23d68>
   35268:	b	352ac <__assert_fail@plt+0x23da8>
   3526c:	ldr	r0, [fp, #-12]
   35270:	cmn	r0, #1
   35274:	bne	352ac <__assert_fail@plt+0x23da8>
   35278:	b	35294 <__assert_fail@plt+0x23d90>
   3527c:	ldr	r0, [fp, #-16]
   35280:	add	r0, r0, #0
   35284:	movw	r1, #0
   35288:	cmp	r1, r0
   3528c:	bcc	352e0 <__assert_fail@plt+0x23ddc>
   35290:	b	352f8 <__assert_fail@plt+0x23df4>
   35294:	ldr	r0, [fp, #-16]
   35298:	sub	r0, r0, #1
   3529c:	mvn	r1, #0
   352a0:	cmp	r1, r0
   352a4:	bcc	352e0 <__assert_fail@plt+0x23ddc>
   352a8:	b	352f8 <__assert_fail@plt+0x23df4>
   352ac:	ldr	r0, [fp, #-12]
   352b0:	movw	r1, #0
   352b4:	udiv	r0, r1, r0
   352b8:	ldr	r1, [fp, #-16]
   352bc:	cmp	r0, r1
   352c0:	bcc	352e0 <__assert_fail@plt+0x23ddc>
   352c4:	b	352f8 <__assert_fail@plt+0x23df4>
   352c8:	ldr	r0, [fp, #-16]
   352cc:	movw	r1, #255	; 0xff
   352d0:	udiv	r0, r1, r0
   352d4:	ldr	r1, [fp, #-12]
   352d8:	cmp	r0, r1
   352dc:	bcs	352f8 <__assert_fail@plt+0x23df4>
   352e0:	ldr	r0, [fp, #-12]
   352e4:	ldr	r1, [fp, #-16]
   352e8:	mul	r0, r0, r1
   352ec:	and	r0, r0, #255	; 0xff
   352f0:	str	r0, [fp, #-20]	; 0xffffffec
   352f4:	b	36240 <__assert_fail@plt+0x24d3c>
   352f8:	ldr	r0, [fp, #-12]
   352fc:	ldr	r1, [fp, #-16]
   35300:	mul	r0, r0, r1
   35304:	and	r0, r0, #255	; 0xff
   35308:	str	r0, [fp, #-20]	; 0xffffffec
   3530c:	b	36258 <__assert_fail@plt+0x24d54>
   35310:	b	356c8 <__assert_fail@plt+0x241c4>
   35314:	b	354e8 <__assert_fail@plt+0x23fe4>
   35318:	ldr	r0, [fp, #-16]
   3531c:	cmp	r0, #0
   35320:	bcs	35424 <__assert_fail@plt+0x23f20>
   35324:	ldr	r0, [fp, #-12]
   35328:	cmp	r0, #0
   3532c:	bcs	353b4 <__assert_fail@plt+0x23eb0>
   35330:	b	35350 <__assert_fail@plt+0x23e4c>
   35334:	ldr	r0, [fp, #-12]
   35338:	ldr	r1, [fp, #-16]
   3533c:	movw	r2, #32767	; 0x7fff
   35340:	udiv	r1, r2, r1
   35344:	cmp	r0, r1
   35348:	bcc	354b8 <__assert_fail@plt+0x23fb4>
   3534c:	b	354d0 <__assert_fail@plt+0x23fcc>
   35350:	b	35364 <__assert_fail@plt+0x23e60>
   35354:	ldr	r0, [fp, #-16]
   35358:	cmp	r0, #1
   3535c:	bcc	35374 <__assert_fail@plt+0x23e70>
   35360:	b	35380 <__assert_fail@plt+0x23e7c>
   35364:	ldr	r0, [fp, #-16]
   35368:	movw	r1, #0
   3536c:	cmp	r1, r0
   35370:	bcs	35380 <__assert_fail@plt+0x23e7c>
   35374:	movw	r0, #0
   35378:	str	r0, [fp, #-32]	; 0xffffffe0
   3537c:	b	35398 <__assert_fail@plt+0x23e94>
   35380:	ldr	r0, [fp, #-16]
   35384:	movw	r1, #0
   35388:	sub	r0, r1, r0
   3538c:	movw	r1, #32767	; 0x7fff
   35390:	udiv	r0, r1, r0
   35394:	str	r0, [fp, #-32]	; 0xffffffe0
   35398:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3539c:	ldr	r1, [fp, #-12]
   353a0:	mvn	r2, #0
   353a4:	sub	r1, r2, r1
   353a8:	cmp	r0, r1
   353ac:	bls	354b8 <__assert_fail@plt+0x23fb4>
   353b0:	b	354d0 <__assert_fail@plt+0x23fcc>
   353b4:	ldr	r0, [fp, #-16]
   353b8:	cmn	r0, #1
   353bc:	bne	35408 <__assert_fail@plt+0x23f04>
   353c0:	b	353e0 <__assert_fail@plt+0x23edc>
   353c4:	ldr	r0, [pc, #3760]	; 3627c <__assert_fail@plt+0x24d78>
   353c8:	ldr	r1, [fp, #-12]
   353cc:	add	r0, r1, r0
   353d0:	movw	r1, #0
   353d4:	cmp	r1, r0
   353d8:	bcc	354b8 <__assert_fail@plt+0x23fb4>
   353dc:	b	354d0 <__assert_fail@plt+0x23fcc>
   353e0:	ldr	r0, [fp, #-12]
   353e4:	movw	r1, #0
   353e8:	cmp	r1, r0
   353ec:	bcs	354d0 <__assert_fail@plt+0x23fcc>
   353f0:	ldr	r0, [fp, #-12]
   353f4:	sub	r0, r0, #1
   353f8:	movw	r1, #32767	; 0x7fff
   353fc:	cmp	r1, r0
   35400:	bcc	354b8 <__assert_fail@plt+0x23fb4>
   35404:	b	354d0 <__assert_fail@plt+0x23fcc>
   35408:	ldr	r0, [pc, #3692]	; 3627c <__assert_fail@plt+0x24d78>
   3540c:	ldr	r1, [fp, #-16]
   35410:	udiv	r0, r0, r1
   35414:	ldr	r1, [fp, #-12]
   35418:	cmp	r0, r1
   3541c:	bcc	354b8 <__assert_fail@plt+0x23fb4>
   35420:	b	354d0 <__assert_fail@plt+0x23fcc>
   35424:	ldr	r0, [fp, #-16]
   35428:	cmp	r0, #0
   3542c:	bne	35434 <__assert_fail@plt+0x23f30>
   35430:	b	354d0 <__assert_fail@plt+0x23fcc>
   35434:	ldr	r0, [fp, #-12]
   35438:	cmp	r0, #0
   3543c:	bcs	354a0 <__assert_fail@plt+0x23f9c>
   35440:	ldr	r0, [fp, #-12]
   35444:	cmn	r0, #1
   35448:	bne	35484 <__assert_fail@plt+0x23f80>
   3544c:	b	3546c <__assert_fail@plt+0x23f68>
   35450:	ldr	r0, [pc, #3620]	; 3627c <__assert_fail@plt+0x24d78>
   35454:	ldr	r1, [fp, #-16]
   35458:	add	r0, r1, r0
   3545c:	movw	r1, #0
   35460:	cmp	r1, r0
   35464:	bcc	354b8 <__assert_fail@plt+0x23fb4>
   35468:	b	354d0 <__assert_fail@plt+0x23fcc>
   3546c:	ldr	r0, [fp, #-16]
   35470:	sub	r0, r0, #1
   35474:	movw	r1, #32767	; 0x7fff
   35478:	cmp	r1, r0
   3547c:	bcc	354b8 <__assert_fail@plt+0x23fb4>
   35480:	b	354d0 <__assert_fail@plt+0x23fcc>
   35484:	ldr	r0, [pc, #3568]	; 3627c <__assert_fail@plt+0x24d78>
   35488:	ldr	r1, [fp, #-12]
   3548c:	udiv	r0, r0, r1
   35490:	ldr	r1, [fp, #-16]
   35494:	cmp	r0, r1
   35498:	bcc	354b8 <__assert_fail@plt+0x23fb4>
   3549c:	b	354d0 <__assert_fail@plt+0x23fcc>
   354a0:	ldr	r0, [fp, #-16]
   354a4:	movw	r1, #32767	; 0x7fff
   354a8:	udiv	r0, r1, r0
   354ac:	ldr	r1, [fp, #-12]
   354b0:	cmp	r0, r1
   354b4:	bcs	354d0 <__assert_fail@plt+0x23fcc>
   354b8:	ldr	r0, [fp, #-12]
   354bc:	ldr	r1, [fp, #-16]
   354c0:	mul	r0, r0, r1
   354c4:	sxth	r0, r0
   354c8:	str	r0, [fp, #-20]	; 0xffffffec
   354cc:	b	36240 <__assert_fail@plt+0x24d3c>
   354d0:	ldr	r0, [fp, #-12]
   354d4:	ldr	r1, [fp, #-16]
   354d8:	mul	r0, r0, r1
   354dc:	sxth	r0, r0
   354e0:	str	r0, [fp, #-20]	; 0xffffffec
   354e4:	b	36258 <__assert_fail@plt+0x24d54>
   354e8:	ldr	r0, [fp, #-16]
   354ec:	cmp	r0, #0
   354f0:	bcs	355fc <__assert_fail@plt+0x240f8>
   354f4:	ldr	r0, [fp, #-12]
   354f8:	cmp	r0, #0
   354fc:	bcs	35584 <__assert_fail@plt+0x24080>
   35500:	b	35520 <__assert_fail@plt+0x2401c>
   35504:	ldr	r0, [fp, #-12]
   35508:	ldr	r1, [fp, #-16]
   3550c:	movw	r2, #65535	; 0xffff
   35510:	udiv	r1, r2, r1
   35514:	cmp	r0, r1
   35518:	bcc	35698 <__assert_fail@plt+0x24194>
   3551c:	b	356b0 <__assert_fail@plt+0x241ac>
   35520:	b	35534 <__assert_fail@plt+0x24030>
   35524:	ldr	r0, [fp, #-16]
   35528:	cmp	r0, #1
   3552c:	bcc	35544 <__assert_fail@plt+0x24040>
   35530:	b	35550 <__assert_fail@plt+0x2404c>
   35534:	ldr	r0, [fp, #-16]
   35538:	movw	r1, #0
   3553c:	cmp	r1, r0
   35540:	bcs	35550 <__assert_fail@plt+0x2404c>
   35544:	movw	r0, #0
   35548:	str	r0, [fp, #-36]	; 0xffffffdc
   3554c:	b	35568 <__assert_fail@plt+0x24064>
   35550:	ldr	r0, [fp, #-16]
   35554:	movw	r1, #0
   35558:	sub	r0, r1, r0
   3555c:	movw	r1, #65535	; 0xffff
   35560:	udiv	r0, r1, r0
   35564:	str	r0, [fp, #-36]	; 0xffffffdc
   35568:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3556c:	ldr	r1, [fp, #-12]
   35570:	mvn	r2, #0
   35574:	sub	r1, r2, r1
   35578:	cmp	r0, r1
   3557c:	bls	35698 <__assert_fail@plt+0x24194>
   35580:	b	356b0 <__assert_fail@plt+0x241ac>
   35584:	b	3558c <__assert_fail@plt+0x24088>
   35588:	b	35590 <__assert_fail@plt+0x2408c>
   3558c:	b	355e0 <__assert_fail@plt+0x240dc>
   35590:	ldr	r0, [fp, #-16]
   35594:	cmn	r0, #1
   35598:	bne	355e0 <__assert_fail@plt+0x240dc>
   3559c:	b	355b8 <__assert_fail@plt+0x240b4>
   355a0:	ldr	r0, [fp, #-12]
   355a4:	add	r0, r0, #0
   355a8:	movw	r1, #0
   355ac:	cmp	r1, r0
   355b0:	bcc	35698 <__assert_fail@plt+0x24194>
   355b4:	b	356b0 <__assert_fail@plt+0x241ac>
   355b8:	ldr	r0, [fp, #-12]
   355bc:	movw	r1, #0
   355c0:	cmp	r1, r0
   355c4:	bcs	356b0 <__assert_fail@plt+0x241ac>
   355c8:	ldr	r0, [fp, #-12]
   355cc:	sub	r0, r0, #1
   355d0:	mvn	r1, #0
   355d4:	cmp	r1, r0
   355d8:	bcc	35698 <__assert_fail@plt+0x24194>
   355dc:	b	356b0 <__assert_fail@plt+0x241ac>
   355e0:	ldr	r0, [fp, #-16]
   355e4:	movw	r1, #0
   355e8:	udiv	r0, r1, r0
   355ec:	ldr	r1, [fp, #-12]
   355f0:	cmp	r0, r1
   355f4:	bcc	35698 <__assert_fail@plt+0x24194>
   355f8:	b	356b0 <__assert_fail@plt+0x241ac>
   355fc:	ldr	r0, [fp, #-16]
   35600:	cmp	r0, #0
   35604:	bne	3560c <__assert_fail@plt+0x24108>
   35608:	b	356b0 <__assert_fail@plt+0x241ac>
   3560c:	ldr	r0, [fp, #-12]
   35610:	cmp	r0, #0
   35614:	bcs	35680 <__assert_fail@plt+0x2417c>
   35618:	b	35620 <__assert_fail@plt+0x2411c>
   3561c:	b	35624 <__assert_fail@plt+0x24120>
   35620:	b	35664 <__assert_fail@plt+0x24160>
   35624:	ldr	r0, [fp, #-12]
   35628:	cmn	r0, #1
   3562c:	bne	35664 <__assert_fail@plt+0x24160>
   35630:	b	3564c <__assert_fail@plt+0x24148>
   35634:	ldr	r0, [fp, #-16]
   35638:	add	r0, r0, #0
   3563c:	movw	r1, #0
   35640:	cmp	r1, r0
   35644:	bcc	35698 <__assert_fail@plt+0x24194>
   35648:	b	356b0 <__assert_fail@plt+0x241ac>
   3564c:	ldr	r0, [fp, #-16]
   35650:	sub	r0, r0, #1
   35654:	mvn	r1, #0
   35658:	cmp	r1, r0
   3565c:	bcc	35698 <__assert_fail@plt+0x24194>
   35660:	b	356b0 <__assert_fail@plt+0x241ac>
   35664:	ldr	r0, [fp, #-12]
   35668:	movw	r1, #0
   3566c:	udiv	r0, r1, r0
   35670:	ldr	r1, [fp, #-16]
   35674:	cmp	r0, r1
   35678:	bcc	35698 <__assert_fail@plt+0x24194>
   3567c:	b	356b0 <__assert_fail@plt+0x241ac>
   35680:	ldr	r0, [fp, #-16]
   35684:	movw	r1, #65535	; 0xffff
   35688:	udiv	r0, r1, r0
   3568c:	ldr	r1, [fp, #-12]
   35690:	cmp	r0, r1
   35694:	bcs	356b0 <__assert_fail@plt+0x241ac>
   35698:	ldr	r0, [fp, #-12]
   3569c:	ldr	r1, [fp, #-16]
   356a0:	mul	r0, r0, r1
   356a4:	uxth	r0, r0
   356a8:	str	r0, [fp, #-20]	; 0xffffffec
   356ac:	b	36240 <__assert_fail@plt+0x24d3c>
   356b0:	ldr	r0, [fp, #-12]
   356b4:	ldr	r1, [fp, #-16]
   356b8:	mul	r0, r0, r1
   356bc:	uxth	r0, r0
   356c0:	str	r0, [fp, #-20]	; 0xffffffec
   356c4:	b	36258 <__assert_fail@plt+0x24d54>
   356c8:	b	356cc <__assert_fail@plt+0x241c8>
   356cc:	b	35890 <__assert_fail@plt+0x2438c>
   356d0:	ldr	r0, [fp, #-16]
   356d4:	cmp	r0, #0
   356d8:	bcs	357d8 <__assert_fail@plt+0x242d4>
   356dc:	ldr	r0, [fp, #-12]
   356e0:	cmp	r0, #0
   356e4:	bcs	3576c <__assert_fail@plt+0x24268>
   356e8:	b	35708 <__assert_fail@plt+0x24204>
   356ec:	ldr	r0, [pc, #2944]	; 36274 <__assert_fail@plt+0x24d70>
   356f0:	ldr	r1, [fp, #-12]
   356f4:	ldr	r2, [fp, #-16]
   356f8:	udiv	r0, r0, r2
   356fc:	cmp	r1, r0
   35700:	bcc	35868 <__assert_fail@plt+0x24364>
   35704:	b	3587c <__assert_fail@plt+0x24378>
   35708:	b	3571c <__assert_fail@plt+0x24218>
   3570c:	ldr	r0, [fp, #-16]
   35710:	cmp	r0, #1
   35714:	bcc	3572c <__assert_fail@plt+0x24228>
   35718:	b	35738 <__assert_fail@plt+0x24234>
   3571c:	ldr	r0, [fp, #-16]
   35720:	movw	r1, #0
   35724:	cmp	r1, r0
   35728:	bcs	35738 <__assert_fail@plt+0x24234>
   3572c:	movw	r0, #0
   35730:	str	r0, [fp, #-40]	; 0xffffffd8
   35734:	b	35750 <__assert_fail@plt+0x2424c>
   35738:	ldr	r0, [pc, #2868]	; 36274 <__assert_fail@plt+0x24d70>
   3573c:	ldr	r1, [fp, #-16]
   35740:	movw	r2, #0
   35744:	sub	r1, r2, r1
   35748:	udiv	r0, r0, r1
   3574c:	str	r0, [fp, #-40]	; 0xffffffd8
   35750:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35754:	ldr	r1, [fp, #-12]
   35758:	mvn	r2, #0
   3575c:	sub	r1, r2, r1
   35760:	cmp	r0, r1
   35764:	bls	35868 <__assert_fail@plt+0x24364>
   35768:	b	3587c <__assert_fail@plt+0x24378>
   3576c:	ldr	r0, [fp, #-16]
   35770:	cmn	r0, #1
   35774:	bne	357bc <__assert_fail@plt+0x242b8>
   35778:	b	35794 <__assert_fail@plt+0x24290>
   3577c:	ldr	r0, [fp, #-12]
   35780:	add	r0, r0, #-2147483648	; 0x80000000
   35784:	movw	r1, #0
   35788:	cmp	r1, r0
   3578c:	bcc	35868 <__assert_fail@plt+0x24364>
   35790:	b	3587c <__assert_fail@plt+0x24378>
   35794:	ldr	r0, [fp, #-12]
   35798:	movw	r1, #0
   3579c:	cmp	r1, r0
   357a0:	bcs	3587c <__assert_fail@plt+0x24378>
   357a4:	ldr	r0, [pc, #2760]	; 36274 <__assert_fail@plt+0x24d70>
   357a8:	ldr	r1, [fp, #-12]
   357ac:	sub	r1, r1, #1
   357b0:	cmp	r0, r1
   357b4:	bcc	35868 <__assert_fail@plt+0x24364>
   357b8:	b	3587c <__assert_fail@plt+0x24378>
   357bc:	ldr	r0, [pc, #2740]	; 36278 <__assert_fail@plt+0x24d74>
   357c0:	ldr	r1, [fp, #-16]
   357c4:	udiv	r0, r0, r1
   357c8:	ldr	r1, [fp, #-12]
   357cc:	cmp	r0, r1
   357d0:	bcc	35868 <__assert_fail@plt+0x24364>
   357d4:	b	3587c <__assert_fail@plt+0x24378>
   357d8:	ldr	r0, [fp, #-16]
   357dc:	cmp	r0, #0
   357e0:	bne	357e8 <__assert_fail@plt+0x242e4>
   357e4:	b	3587c <__assert_fail@plt+0x24378>
   357e8:	ldr	r0, [fp, #-12]
   357ec:	cmp	r0, #0
   357f0:	bcs	35850 <__assert_fail@plt+0x2434c>
   357f4:	ldr	r0, [fp, #-12]
   357f8:	cmn	r0, #1
   357fc:	bne	35834 <__assert_fail@plt+0x24330>
   35800:	b	3581c <__assert_fail@plt+0x24318>
   35804:	ldr	r0, [fp, #-16]
   35808:	add	r0, r0, #-2147483648	; 0x80000000
   3580c:	movw	r1, #0
   35810:	cmp	r1, r0
   35814:	bcc	35868 <__assert_fail@plt+0x24364>
   35818:	b	3587c <__assert_fail@plt+0x24378>
   3581c:	ldr	r0, [pc, #2640]	; 36274 <__assert_fail@plt+0x24d70>
   35820:	ldr	r1, [fp, #-16]
   35824:	sub	r1, r1, #1
   35828:	cmp	r0, r1
   3582c:	bcc	35868 <__assert_fail@plt+0x24364>
   35830:	b	3587c <__assert_fail@plt+0x24378>
   35834:	ldr	r0, [pc, #2620]	; 36278 <__assert_fail@plt+0x24d74>
   35838:	ldr	r1, [fp, #-12]
   3583c:	udiv	r0, r0, r1
   35840:	ldr	r1, [fp, #-16]
   35844:	cmp	r0, r1
   35848:	bcc	35868 <__assert_fail@plt+0x24364>
   3584c:	b	3587c <__assert_fail@plt+0x24378>
   35850:	ldr	r0, [pc, #2588]	; 36274 <__assert_fail@plt+0x24d70>
   35854:	ldr	r1, [fp, #-16]
   35858:	udiv	r0, r0, r1
   3585c:	ldr	r1, [fp, #-12]
   35860:	cmp	r0, r1
   35864:	bcs	3587c <__assert_fail@plt+0x24378>
   35868:	ldr	r0, [fp, #-12]
   3586c:	ldr	r1, [fp, #-16]
   35870:	mul	r0, r0, r1
   35874:	str	r0, [fp, #-20]	; 0xffffffec
   35878:	b	36240 <__assert_fail@plt+0x24d3c>
   3587c:	ldr	r0, [fp, #-12]
   35880:	ldr	r1, [fp, #-16]
   35884:	mul	r0, r0, r1
   35888:	str	r0, [fp, #-20]	; 0xffffffec
   3588c:	b	36258 <__assert_fail@plt+0x24d54>
   35890:	ldr	r0, [fp, #-16]
   35894:	cmp	r0, #0
   35898:	bcs	359a4 <__assert_fail@plt+0x244a0>
   3589c:	ldr	r0, [fp, #-12]
   358a0:	cmp	r0, #0
   358a4:	bcs	3592c <__assert_fail@plt+0x24428>
   358a8:	b	358c8 <__assert_fail@plt+0x243c4>
   358ac:	ldr	r0, [fp, #-12]
   358b0:	ldr	r1, [fp, #-16]
   358b4:	mvn	r2, #0
   358b8:	udiv	r1, r2, r1
   358bc:	cmp	r0, r1
   358c0:	bcc	35a40 <__assert_fail@plt+0x2453c>
   358c4:	b	35a54 <__assert_fail@plt+0x24550>
   358c8:	b	358dc <__assert_fail@plt+0x243d8>
   358cc:	ldr	r0, [fp, #-16]
   358d0:	cmp	r0, #1
   358d4:	bcc	358ec <__assert_fail@plt+0x243e8>
   358d8:	b	358f8 <__assert_fail@plt+0x243f4>
   358dc:	ldr	r0, [fp, #-16]
   358e0:	movw	r1, #0
   358e4:	cmp	r1, r0
   358e8:	bcs	358f8 <__assert_fail@plt+0x243f4>
   358ec:	movw	r0, #1
   358f0:	str	r0, [fp, #-44]	; 0xffffffd4
   358f4:	b	35910 <__assert_fail@plt+0x2440c>
   358f8:	ldr	r0, [fp, #-16]
   358fc:	movw	r1, #0
   35900:	sub	r0, r1, r0
   35904:	mvn	r1, #0
   35908:	udiv	r0, r1, r0
   3590c:	str	r0, [fp, #-44]	; 0xffffffd4
   35910:	ldr	r0, [fp, #-44]	; 0xffffffd4
   35914:	ldr	r1, [fp, #-12]
   35918:	mvn	r2, #0
   3591c:	sub	r1, r2, r1
   35920:	cmp	r0, r1
   35924:	bls	35a40 <__assert_fail@plt+0x2453c>
   35928:	b	35a54 <__assert_fail@plt+0x24550>
   3592c:	b	35934 <__assert_fail@plt+0x24430>
   35930:	b	35938 <__assert_fail@plt+0x24434>
   35934:	b	35988 <__assert_fail@plt+0x24484>
   35938:	ldr	r0, [fp, #-16]
   3593c:	cmn	r0, #1
   35940:	bne	35988 <__assert_fail@plt+0x24484>
   35944:	b	35960 <__assert_fail@plt+0x2445c>
   35948:	ldr	r0, [fp, #-12]
   3594c:	add	r0, r0, #0
   35950:	movw	r1, #0
   35954:	cmp	r1, r0
   35958:	bcc	35a40 <__assert_fail@plt+0x2453c>
   3595c:	b	35a54 <__assert_fail@plt+0x24550>
   35960:	ldr	r0, [fp, #-12]
   35964:	movw	r1, #0
   35968:	cmp	r1, r0
   3596c:	bcs	35a54 <__assert_fail@plt+0x24550>
   35970:	ldr	r0, [fp, #-12]
   35974:	sub	r0, r0, #1
   35978:	mvn	r1, #0
   3597c:	cmp	r1, r0
   35980:	bcc	35a40 <__assert_fail@plt+0x2453c>
   35984:	b	35a54 <__assert_fail@plt+0x24550>
   35988:	ldr	r0, [fp, #-16]
   3598c:	movw	r1, #0
   35990:	udiv	r0, r1, r0
   35994:	ldr	r1, [fp, #-12]
   35998:	cmp	r0, r1
   3599c:	bcc	35a40 <__assert_fail@plt+0x2453c>
   359a0:	b	35a54 <__assert_fail@plt+0x24550>
   359a4:	ldr	r0, [fp, #-16]
   359a8:	cmp	r0, #0
   359ac:	bne	359b4 <__assert_fail@plt+0x244b0>
   359b0:	b	35a54 <__assert_fail@plt+0x24550>
   359b4:	ldr	r0, [fp, #-12]
   359b8:	cmp	r0, #0
   359bc:	bcs	35a28 <__assert_fail@plt+0x24524>
   359c0:	b	359c8 <__assert_fail@plt+0x244c4>
   359c4:	b	359cc <__assert_fail@plt+0x244c8>
   359c8:	b	35a0c <__assert_fail@plt+0x24508>
   359cc:	ldr	r0, [fp, #-12]
   359d0:	cmn	r0, #1
   359d4:	bne	35a0c <__assert_fail@plt+0x24508>
   359d8:	b	359f4 <__assert_fail@plt+0x244f0>
   359dc:	ldr	r0, [fp, #-16]
   359e0:	add	r0, r0, #0
   359e4:	movw	r1, #0
   359e8:	cmp	r1, r0
   359ec:	bcc	35a40 <__assert_fail@plt+0x2453c>
   359f0:	b	35a54 <__assert_fail@plt+0x24550>
   359f4:	ldr	r0, [fp, #-16]
   359f8:	sub	r0, r0, #1
   359fc:	mvn	r1, #0
   35a00:	cmp	r1, r0
   35a04:	bcc	35a40 <__assert_fail@plt+0x2453c>
   35a08:	b	35a54 <__assert_fail@plt+0x24550>
   35a0c:	ldr	r0, [fp, #-12]
   35a10:	movw	r1, #0
   35a14:	udiv	r0, r1, r0
   35a18:	ldr	r1, [fp, #-16]
   35a1c:	cmp	r0, r1
   35a20:	bcc	35a40 <__assert_fail@plt+0x2453c>
   35a24:	b	35a54 <__assert_fail@plt+0x24550>
   35a28:	ldr	r0, [fp, #-16]
   35a2c:	mvn	r1, #0
   35a30:	udiv	r0, r1, r0
   35a34:	ldr	r1, [fp, #-12]
   35a38:	cmp	r0, r1
   35a3c:	bcs	35a54 <__assert_fail@plt+0x24550>
   35a40:	ldr	r0, [fp, #-12]
   35a44:	ldr	r1, [fp, #-16]
   35a48:	mul	r0, r0, r1
   35a4c:	str	r0, [fp, #-20]	; 0xffffffec
   35a50:	b	36240 <__assert_fail@plt+0x24d3c>
   35a54:	ldr	r0, [fp, #-12]
   35a58:	ldr	r1, [fp, #-16]
   35a5c:	mul	r0, r0, r1
   35a60:	str	r0, [fp, #-20]	; 0xffffffec
   35a64:	b	36258 <__assert_fail@plt+0x24d54>
   35a68:	b	35a6c <__assert_fail@plt+0x24568>
   35a6c:	b	35c30 <__assert_fail@plt+0x2472c>
   35a70:	ldr	r0, [fp, #-16]
   35a74:	cmp	r0, #0
   35a78:	bcs	35b78 <__assert_fail@plt+0x24674>
   35a7c:	ldr	r0, [fp, #-12]
   35a80:	cmp	r0, #0
   35a84:	bcs	35b0c <__assert_fail@plt+0x24608>
   35a88:	b	35aa8 <__assert_fail@plt+0x245a4>
   35a8c:	ldr	r0, [pc, #2016]	; 36274 <__assert_fail@plt+0x24d70>
   35a90:	ldr	r1, [fp, #-12]
   35a94:	ldr	r2, [fp, #-16]
   35a98:	udiv	r0, r0, r2
   35a9c:	cmp	r1, r0
   35aa0:	bcc	35c08 <__assert_fail@plt+0x24704>
   35aa4:	b	35c1c <__assert_fail@plt+0x24718>
   35aa8:	b	35abc <__assert_fail@plt+0x245b8>
   35aac:	ldr	r0, [fp, #-16]
   35ab0:	cmp	r0, #1
   35ab4:	bcc	35acc <__assert_fail@plt+0x245c8>
   35ab8:	b	35ad8 <__assert_fail@plt+0x245d4>
   35abc:	ldr	r0, [fp, #-16]
   35ac0:	movw	r1, #0
   35ac4:	cmp	r1, r0
   35ac8:	bcs	35ad8 <__assert_fail@plt+0x245d4>
   35acc:	movw	r0, #0
   35ad0:	str	r0, [sp, #48]	; 0x30
   35ad4:	b	35af0 <__assert_fail@plt+0x245ec>
   35ad8:	ldr	r0, [pc, #1940]	; 36274 <__assert_fail@plt+0x24d70>
   35adc:	ldr	r1, [fp, #-16]
   35ae0:	movw	r2, #0
   35ae4:	sub	r1, r2, r1
   35ae8:	udiv	r0, r0, r1
   35aec:	str	r0, [sp, #48]	; 0x30
   35af0:	ldr	r0, [sp, #48]	; 0x30
   35af4:	ldr	r1, [fp, #-12]
   35af8:	mvn	r2, #0
   35afc:	sub	r1, r2, r1
   35b00:	cmp	r0, r1
   35b04:	bls	35c08 <__assert_fail@plt+0x24704>
   35b08:	b	35c1c <__assert_fail@plt+0x24718>
   35b0c:	ldr	r0, [fp, #-16]
   35b10:	cmn	r0, #1
   35b14:	bne	35b5c <__assert_fail@plt+0x24658>
   35b18:	b	35b34 <__assert_fail@plt+0x24630>
   35b1c:	ldr	r0, [fp, #-12]
   35b20:	add	r0, r0, #-2147483648	; 0x80000000
   35b24:	movw	r1, #0
   35b28:	cmp	r1, r0
   35b2c:	bcc	35c08 <__assert_fail@plt+0x24704>
   35b30:	b	35c1c <__assert_fail@plt+0x24718>
   35b34:	ldr	r0, [fp, #-12]
   35b38:	movw	r1, #0
   35b3c:	cmp	r1, r0
   35b40:	bcs	35c1c <__assert_fail@plt+0x24718>
   35b44:	ldr	r0, [pc, #1832]	; 36274 <__assert_fail@plt+0x24d70>
   35b48:	ldr	r1, [fp, #-12]
   35b4c:	sub	r1, r1, #1
   35b50:	cmp	r0, r1
   35b54:	bcc	35c08 <__assert_fail@plt+0x24704>
   35b58:	b	35c1c <__assert_fail@plt+0x24718>
   35b5c:	ldr	r0, [pc, #1812]	; 36278 <__assert_fail@plt+0x24d74>
   35b60:	ldr	r1, [fp, #-16]
   35b64:	udiv	r0, r0, r1
   35b68:	ldr	r1, [fp, #-12]
   35b6c:	cmp	r0, r1
   35b70:	bcc	35c08 <__assert_fail@plt+0x24704>
   35b74:	b	35c1c <__assert_fail@plt+0x24718>
   35b78:	ldr	r0, [fp, #-16]
   35b7c:	cmp	r0, #0
   35b80:	bne	35b88 <__assert_fail@plt+0x24684>
   35b84:	b	35c1c <__assert_fail@plt+0x24718>
   35b88:	ldr	r0, [fp, #-12]
   35b8c:	cmp	r0, #0
   35b90:	bcs	35bf0 <__assert_fail@plt+0x246ec>
   35b94:	ldr	r0, [fp, #-12]
   35b98:	cmn	r0, #1
   35b9c:	bne	35bd4 <__assert_fail@plt+0x246d0>
   35ba0:	b	35bbc <__assert_fail@plt+0x246b8>
   35ba4:	ldr	r0, [fp, #-16]
   35ba8:	add	r0, r0, #-2147483648	; 0x80000000
   35bac:	movw	r1, #0
   35bb0:	cmp	r1, r0
   35bb4:	bcc	35c08 <__assert_fail@plt+0x24704>
   35bb8:	b	35c1c <__assert_fail@plt+0x24718>
   35bbc:	ldr	r0, [pc, #1712]	; 36274 <__assert_fail@plt+0x24d70>
   35bc0:	ldr	r1, [fp, #-16]
   35bc4:	sub	r1, r1, #1
   35bc8:	cmp	r0, r1
   35bcc:	bcc	35c08 <__assert_fail@plt+0x24704>
   35bd0:	b	35c1c <__assert_fail@plt+0x24718>
   35bd4:	ldr	r0, [pc, #1692]	; 36278 <__assert_fail@plt+0x24d74>
   35bd8:	ldr	r1, [fp, #-12]
   35bdc:	udiv	r0, r0, r1
   35be0:	ldr	r1, [fp, #-16]
   35be4:	cmp	r0, r1
   35be8:	bcc	35c08 <__assert_fail@plt+0x24704>
   35bec:	b	35c1c <__assert_fail@plt+0x24718>
   35bf0:	ldr	r0, [pc, #1660]	; 36274 <__assert_fail@plt+0x24d70>
   35bf4:	ldr	r1, [fp, #-16]
   35bf8:	udiv	r0, r0, r1
   35bfc:	ldr	r1, [fp, #-12]
   35c00:	cmp	r0, r1
   35c04:	bcs	35c1c <__assert_fail@plt+0x24718>
   35c08:	ldr	r0, [fp, #-12]
   35c0c:	ldr	r1, [fp, #-16]
   35c10:	mul	r0, r0, r1
   35c14:	str	r0, [fp, #-20]	; 0xffffffec
   35c18:	b	36240 <__assert_fail@plt+0x24d3c>
   35c1c:	ldr	r0, [fp, #-12]
   35c20:	ldr	r1, [fp, #-16]
   35c24:	mul	r0, r0, r1
   35c28:	str	r0, [fp, #-20]	; 0xffffffec
   35c2c:	b	36258 <__assert_fail@plt+0x24d54>
   35c30:	ldr	r0, [fp, #-16]
   35c34:	cmp	r0, #0
   35c38:	bcs	35d44 <__assert_fail@plt+0x24840>
   35c3c:	ldr	r0, [fp, #-12]
   35c40:	cmp	r0, #0
   35c44:	bcs	35ccc <__assert_fail@plt+0x247c8>
   35c48:	b	35c68 <__assert_fail@plt+0x24764>
   35c4c:	ldr	r0, [fp, #-12]
   35c50:	ldr	r1, [fp, #-16]
   35c54:	mvn	r2, #0
   35c58:	udiv	r1, r2, r1
   35c5c:	cmp	r0, r1
   35c60:	bcc	35de0 <__assert_fail@plt+0x248dc>
   35c64:	b	35df4 <__assert_fail@plt+0x248f0>
   35c68:	b	35c7c <__assert_fail@plt+0x24778>
   35c6c:	ldr	r0, [fp, #-16]
   35c70:	cmp	r0, #1
   35c74:	bcc	35c8c <__assert_fail@plt+0x24788>
   35c78:	b	35c98 <__assert_fail@plt+0x24794>
   35c7c:	ldr	r0, [fp, #-16]
   35c80:	movw	r1, #0
   35c84:	cmp	r1, r0
   35c88:	bcs	35c98 <__assert_fail@plt+0x24794>
   35c8c:	movw	r0, #1
   35c90:	str	r0, [sp, #44]	; 0x2c
   35c94:	b	35cb0 <__assert_fail@plt+0x247ac>
   35c98:	ldr	r0, [fp, #-16]
   35c9c:	movw	r1, #0
   35ca0:	sub	r0, r1, r0
   35ca4:	mvn	r1, #0
   35ca8:	udiv	r0, r1, r0
   35cac:	str	r0, [sp, #44]	; 0x2c
   35cb0:	ldr	r0, [sp, #44]	; 0x2c
   35cb4:	ldr	r1, [fp, #-12]
   35cb8:	mvn	r2, #0
   35cbc:	sub	r1, r2, r1
   35cc0:	cmp	r0, r1
   35cc4:	bls	35de0 <__assert_fail@plt+0x248dc>
   35cc8:	b	35df4 <__assert_fail@plt+0x248f0>
   35ccc:	b	35cd4 <__assert_fail@plt+0x247d0>
   35cd0:	b	35cd8 <__assert_fail@plt+0x247d4>
   35cd4:	b	35d28 <__assert_fail@plt+0x24824>
   35cd8:	ldr	r0, [fp, #-16]
   35cdc:	cmn	r0, #1
   35ce0:	bne	35d28 <__assert_fail@plt+0x24824>
   35ce4:	b	35d00 <__assert_fail@plt+0x247fc>
   35ce8:	ldr	r0, [fp, #-12]
   35cec:	add	r0, r0, #0
   35cf0:	movw	r1, #0
   35cf4:	cmp	r1, r0
   35cf8:	bcc	35de0 <__assert_fail@plt+0x248dc>
   35cfc:	b	35df4 <__assert_fail@plt+0x248f0>
   35d00:	ldr	r0, [fp, #-12]
   35d04:	movw	r1, #0
   35d08:	cmp	r1, r0
   35d0c:	bcs	35df4 <__assert_fail@plt+0x248f0>
   35d10:	ldr	r0, [fp, #-12]
   35d14:	sub	r0, r0, #1
   35d18:	mvn	r1, #0
   35d1c:	cmp	r1, r0
   35d20:	bcc	35de0 <__assert_fail@plt+0x248dc>
   35d24:	b	35df4 <__assert_fail@plt+0x248f0>
   35d28:	ldr	r0, [fp, #-16]
   35d2c:	movw	r1, #0
   35d30:	udiv	r0, r1, r0
   35d34:	ldr	r1, [fp, #-12]
   35d38:	cmp	r0, r1
   35d3c:	bcc	35de0 <__assert_fail@plt+0x248dc>
   35d40:	b	35df4 <__assert_fail@plt+0x248f0>
   35d44:	ldr	r0, [fp, #-16]
   35d48:	cmp	r0, #0
   35d4c:	bne	35d54 <__assert_fail@plt+0x24850>
   35d50:	b	35df4 <__assert_fail@plt+0x248f0>
   35d54:	ldr	r0, [fp, #-12]
   35d58:	cmp	r0, #0
   35d5c:	bcs	35dc8 <__assert_fail@plt+0x248c4>
   35d60:	b	35d68 <__assert_fail@plt+0x24864>
   35d64:	b	35d6c <__assert_fail@plt+0x24868>
   35d68:	b	35dac <__assert_fail@plt+0x248a8>
   35d6c:	ldr	r0, [fp, #-12]
   35d70:	cmn	r0, #1
   35d74:	bne	35dac <__assert_fail@plt+0x248a8>
   35d78:	b	35d94 <__assert_fail@plt+0x24890>
   35d7c:	ldr	r0, [fp, #-16]
   35d80:	add	r0, r0, #0
   35d84:	movw	r1, #0
   35d88:	cmp	r1, r0
   35d8c:	bcc	35de0 <__assert_fail@plt+0x248dc>
   35d90:	b	35df4 <__assert_fail@plt+0x248f0>
   35d94:	ldr	r0, [fp, #-16]
   35d98:	sub	r0, r0, #1
   35d9c:	mvn	r1, #0
   35da0:	cmp	r1, r0
   35da4:	bcc	35de0 <__assert_fail@plt+0x248dc>
   35da8:	b	35df4 <__assert_fail@plt+0x248f0>
   35dac:	ldr	r0, [fp, #-12]
   35db0:	movw	r1, #0
   35db4:	udiv	r0, r1, r0
   35db8:	ldr	r1, [fp, #-16]
   35dbc:	cmp	r0, r1
   35dc0:	bcc	35de0 <__assert_fail@plt+0x248dc>
   35dc4:	b	35df4 <__assert_fail@plt+0x248f0>
   35dc8:	ldr	r0, [fp, #-16]
   35dcc:	mvn	r1, #0
   35dd0:	udiv	r0, r1, r0
   35dd4:	ldr	r1, [fp, #-12]
   35dd8:	cmp	r0, r1
   35ddc:	bcs	35df4 <__assert_fail@plt+0x248f0>
   35de0:	ldr	r0, [fp, #-12]
   35de4:	ldr	r1, [fp, #-16]
   35de8:	mul	r0, r0, r1
   35dec:	str	r0, [fp, #-20]	; 0xffffffec
   35df0:	b	36240 <__assert_fail@plt+0x24d3c>
   35df4:	ldr	r0, [fp, #-12]
   35df8:	ldr	r1, [fp, #-16]
   35dfc:	mul	r0, r0, r1
   35e00:	str	r0, [fp, #-20]	; 0xffffffec
   35e04:	b	36258 <__assert_fail@plt+0x24d54>
   35e08:	b	36024 <__assert_fail@plt+0x24b20>
   35e0c:	ldr	r0, [fp, #-16]
   35e10:	cmp	r0, #0
   35e14:	bcs	35f54 <__assert_fail@plt+0x24a50>
   35e18:	ldr	r0, [fp, #-12]
   35e1c:	cmp	r0, #0
   35e20:	bcs	35ee0 <__assert_fail@plt+0x249dc>
   35e24:	b	35e28 <__assert_fail@plt+0x24924>
   35e28:	ldr	r0, [fp, #-12]
   35e2c:	ldr	r2, [fp, #-16]
   35e30:	mvn	r1, #0
   35e34:	mvn	r3, #-2147483648	; 0x80000000
   35e38:	mov	ip, #0
   35e3c:	str	r0, [sp, #40]	; 0x28
   35e40:	mov	r0, r1
   35e44:	mov	r1, r3
   35e48:	mov	r3, ip
   35e4c:	bl	36b8c <__assert_fail@plt+0x25688>
   35e50:	ldr	r2, [sp, #40]	; 0x28
   35e54:	subs	r0, r2, r0
   35e58:	rscs	r1, r1, #0
   35e5c:	blt	35ffc <__assert_fail@plt+0x24af8>
   35e60:	b	36010 <__assert_fail@plt+0x24b0c>
   35e64:	b	35e78 <__assert_fail@plt+0x24974>
   35e68:	ldr	r0, [fp, #-16]
   35e6c:	cmp	r0, #1
   35e70:	bcc	35e88 <__assert_fail@plt+0x24984>
   35e74:	b	35e9c <__assert_fail@plt+0x24998>
   35e78:	ldr	r0, [fp, #-16]
   35e7c:	movw	r1, #0
   35e80:	cmp	r1, r0
   35e84:	bcs	35e9c <__assert_fail@plt+0x24998>
   35e88:	mov	r0, #0
   35e8c:	mvn	r1, #0
   35e90:	str	r1, [sp, #36]	; 0x24
   35e94:	str	r0, [sp, #32]
   35e98:	b	35ec0 <__assert_fail@plt+0x249bc>
   35e9c:	ldr	r0, [fp, #-16]
   35ea0:	rsb	r2, r0, #0
   35ea4:	mvn	r0, #0
   35ea8:	mvn	r1, #-2147483648	; 0x80000000
   35eac:	mov	r3, #0
   35eb0:	bl	36b8c <__assert_fail@plt+0x25688>
   35eb4:	str	r0, [sp, #36]	; 0x24
   35eb8:	str	r1, [sp, #32]
   35ebc:	b	35ec0 <__assert_fail@plt+0x249bc>
   35ec0:	ldr	r0, [sp, #32]
   35ec4:	ldr	r1, [sp, #36]	; 0x24
   35ec8:	ldr	r2, [fp, #-12]
   35ecc:	mvn	r2, r2
   35ed0:	subs	r1, r2, r1
   35ed4:	rscs	r0, r0, #0
   35ed8:	bge	35ffc <__assert_fail@plt+0x24af8>
   35edc:	b	36010 <__assert_fail@plt+0x24b0c>
   35ee0:	ldr	r0, [fp, #-16]
   35ee4:	cmn	r0, #1
   35ee8:	bne	35f28 <__assert_fail@plt+0x24a24>
   35eec:	b	35f08 <__assert_fail@plt+0x24a04>
   35ef0:	ldr	r0, [fp, #-12]
   35ef4:	rsbs	r0, r0, #0
   35ef8:	mov	r1, #0
   35efc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   35f00:	blt	35ffc <__assert_fail@plt+0x24af8>
   35f04:	b	36010 <__assert_fail@plt+0x24b0c>
   35f08:	ldr	r0, [fp, #-12]
   35f0c:	movw	r1, #0
   35f10:	cmp	r1, r0
   35f14:	bcs	36010 <__assert_fail@plt+0x24b0c>
   35f18:	mov	r0, #0
   35f1c:	cmp	r0, #0
   35f20:	bne	35ffc <__assert_fail@plt+0x24af8>
   35f24:	b	36010 <__assert_fail@plt+0x24b0c>
   35f28:	ldr	r2, [fp, #-16]
   35f2c:	mov	r1, #-2147483648	; 0x80000000
   35f30:	mov	r0, #0
   35f34:	str	r0, [sp, #28]
   35f38:	ldr	r3, [sp, #28]
   35f3c:	bl	36ab8 <__assert_fail@plt+0x255b4>
   35f40:	ldr	r2, [fp, #-12]
   35f44:	subs	r0, r0, r2
   35f48:	sbcs	r1, r1, #0
   35f4c:	blt	35ffc <__assert_fail@plt+0x24af8>
   35f50:	b	36010 <__assert_fail@plt+0x24b0c>
   35f54:	ldr	r0, [fp, #-16]
   35f58:	cmp	r0, #0
   35f5c:	bne	35f64 <__assert_fail@plt+0x24a60>
   35f60:	b	36010 <__assert_fail@plt+0x24b0c>
   35f64:	ldr	r0, [fp, #-12]
   35f68:	cmp	r0, #0
   35f6c:	bcs	35fd4 <__assert_fail@plt+0x24ad0>
   35f70:	ldr	r0, [fp, #-12]
   35f74:	cmn	r0, #1
   35f78:	bne	35fa8 <__assert_fail@plt+0x24aa4>
   35f7c:	b	35f98 <__assert_fail@plt+0x24a94>
   35f80:	ldr	r0, [fp, #-16]
   35f84:	rsbs	r0, r0, #0
   35f88:	mov	r1, #0
   35f8c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   35f90:	blt	35ffc <__assert_fail@plt+0x24af8>
   35f94:	b	36010 <__assert_fail@plt+0x24b0c>
   35f98:	mov	r0, #0
   35f9c:	cmp	r0, #0
   35fa0:	bne	35ffc <__assert_fail@plt+0x24af8>
   35fa4:	b	36010 <__assert_fail@plt+0x24b0c>
   35fa8:	ldr	r2, [fp, #-12]
   35fac:	mov	r1, #-2147483648	; 0x80000000
   35fb0:	mov	r0, #0
   35fb4:	str	r0, [sp, #24]
   35fb8:	ldr	r3, [sp, #24]
   35fbc:	bl	36ab8 <__assert_fail@plt+0x255b4>
   35fc0:	ldr	r2, [fp, #-16]
   35fc4:	subs	r0, r0, r2
   35fc8:	sbcs	r1, r1, #0
   35fcc:	blt	35ffc <__assert_fail@plt+0x24af8>
   35fd0:	b	36010 <__assert_fail@plt+0x24b0c>
   35fd4:	ldr	r2, [fp, #-16]
   35fd8:	mvn	r0, #0
   35fdc:	mvn	r1, #-2147483648	; 0x80000000
   35fe0:	mov	r3, #0
   35fe4:	bl	36b8c <__assert_fail@plt+0x25688>
   35fe8:	ldr	r2, [fp, #-12]
   35fec:	subs	r0, r0, r2
   35ff0:	sbcs	r1, r1, #0
   35ff4:	bge	36010 <__assert_fail@plt+0x24b0c>
   35ff8:	b	35ffc <__assert_fail@plt+0x24af8>
   35ffc:	ldr	r0, [fp, #-12]
   36000:	ldr	r1, [fp, #-16]
   36004:	mul	r0, r0, r1
   36008:	str	r0, [fp, #-20]	; 0xffffffec
   3600c:	b	36240 <__assert_fail@plt+0x24d3c>
   36010:	ldr	r0, [fp, #-12]
   36014:	ldr	r1, [fp, #-16]
   36018:	mul	r0, r0, r1
   3601c:	str	r0, [fp, #-20]	; 0xffffffec
   36020:	b	36258 <__assert_fail@plt+0x24d54>
   36024:	ldr	r0, [fp, #-16]
   36028:	cmp	r0, #0
   3602c:	bcs	36168 <__assert_fail@plt+0x24c64>
   36030:	ldr	r0, [fp, #-12]
   36034:	cmp	r0, #0
   36038:	bcs	360f0 <__assert_fail@plt+0x24bec>
   3603c:	b	36070 <__assert_fail@plt+0x24b6c>
   36040:	ldr	r0, [fp, #-12]
   36044:	ldr	r2, [fp, #-16]
   36048:	mvn	r1, #0
   3604c:	mov	r3, #0
   36050:	str	r0, [sp, #20]
   36054:	mov	r0, r1
   36058:	bl	36b8c <__assert_fail@plt+0x25688>
   3605c:	ldr	r2, [sp, #20]
   36060:	subs	r0, r2, r0
   36064:	rscs	r1, r1, #0
   36068:	bcc	36218 <__assert_fail@plt+0x24d14>
   3606c:	b	3622c <__assert_fail@plt+0x24d28>
   36070:	b	36084 <__assert_fail@plt+0x24b80>
   36074:	ldr	r0, [fp, #-16]
   36078:	cmp	r0, #1
   3607c:	bcc	36094 <__assert_fail@plt+0x24b90>
   36080:	b	360a8 <__assert_fail@plt+0x24ba4>
   36084:	ldr	r0, [fp, #-16]
   36088:	movw	r1, #0
   3608c:	cmp	r1, r0
   36090:	bcs	360a8 <__assert_fail@plt+0x24ba4>
   36094:	mov	r0, #1
   36098:	mvn	r1, #0
   3609c:	str	r1, [sp, #16]
   360a0:	str	r0, [sp, #12]
   360a4:	b	360d0 <__assert_fail@plt+0x24bcc>
   360a8:	ldr	r0, [fp, #-16]
   360ac:	rsb	r2, r0, #0
   360b0:	mvn	r0, #0
   360b4:	mov	r3, #0
   360b8:	str	r0, [sp, #8]
   360bc:	ldr	r1, [sp, #8]
   360c0:	bl	36b8c <__assert_fail@plt+0x25688>
   360c4:	str	r0, [sp, #16]
   360c8:	str	r1, [sp, #12]
   360cc:	b	360d0 <__assert_fail@plt+0x24bcc>
   360d0:	ldr	r0, [sp, #12]
   360d4:	ldr	r1, [sp, #16]
   360d8:	ldr	r2, [fp, #-12]
   360dc:	mvn	r2, r2
   360e0:	subs	r1, r2, r1
   360e4:	rscs	r0, r0, #0
   360e8:	bcs	36218 <__assert_fail@plt+0x24d14>
   360ec:	b	3622c <__assert_fail@plt+0x24d28>
   360f0:	b	360f8 <__assert_fail@plt+0x24bf4>
   360f4:	b	360fc <__assert_fail@plt+0x24bf8>
   360f8:	b	3614c <__assert_fail@plt+0x24c48>
   360fc:	ldr	r0, [fp, #-16]
   36100:	cmn	r0, #1
   36104:	bne	3614c <__assert_fail@plt+0x24c48>
   36108:	b	36124 <__assert_fail@plt+0x24c20>
   3610c:	ldr	r0, [fp, #-12]
   36110:	add	r0, r0, #0
   36114:	movw	r1, #0
   36118:	cmp	r1, r0
   3611c:	bcc	36218 <__assert_fail@plt+0x24d14>
   36120:	b	3622c <__assert_fail@plt+0x24d28>
   36124:	ldr	r0, [fp, #-12]
   36128:	movw	r1, #0
   3612c:	cmp	r1, r0
   36130:	bcs	3622c <__assert_fail@plt+0x24d28>
   36134:	ldr	r0, [fp, #-12]
   36138:	sub	r0, r0, #1
   3613c:	mvn	r1, #0
   36140:	cmp	r1, r0
   36144:	bcc	36218 <__assert_fail@plt+0x24d14>
   36148:	b	3622c <__assert_fail@plt+0x24d28>
   3614c:	ldr	r0, [fp, #-16]
   36150:	movw	r1, #0
   36154:	udiv	r0, r1, r0
   36158:	ldr	r1, [fp, #-12]
   3615c:	cmp	r0, r1
   36160:	bcc	36218 <__assert_fail@plt+0x24d14>
   36164:	b	3622c <__assert_fail@plt+0x24d28>
   36168:	ldr	r0, [fp, #-16]
   3616c:	cmp	r0, #0
   36170:	bne	36178 <__assert_fail@plt+0x24c74>
   36174:	b	3622c <__assert_fail@plt+0x24d28>
   36178:	ldr	r0, [fp, #-12]
   3617c:	cmp	r0, #0
   36180:	bcs	361ec <__assert_fail@plt+0x24ce8>
   36184:	b	3618c <__assert_fail@plt+0x24c88>
   36188:	b	36190 <__assert_fail@plt+0x24c8c>
   3618c:	b	361d0 <__assert_fail@plt+0x24ccc>
   36190:	ldr	r0, [fp, #-12]
   36194:	cmn	r0, #1
   36198:	bne	361d0 <__assert_fail@plt+0x24ccc>
   3619c:	b	361b8 <__assert_fail@plt+0x24cb4>
   361a0:	ldr	r0, [fp, #-16]
   361a4:	add	r0, r0, #0
   361a8:	movw	r1, #0
   361ac:	cmp	r1, r0
   361b0:	bcc	36218 <__assert_fail@plt+0x24d14>
   361b4:	b	3622c <__assert_fail@plt+0x24d28>
   361b8:	ldr	r0, [fp, #-16]
   361bc:	sub	r0, r0, #1
   361c0:	mvn	r1, #0
   361c4:	cmp	r1, r0
   361c8:	bcc	36218 <__assert_fail@plt+0x24d14>
   361cc:	b	3622c <__assert_fail@plt+0x24d28>
   361d0:	ldr	r0, [fp, #-12]
   361d4:	movw	r1, #0
   361d8:	udiv	r0, r1, r0
   361dc:	ldr	r1, [fp, #-16]
   361e0:	cmp	r0, r1
   361e4:	bcc	36218 <__assert_fail@plt+0x24d14>
   361e8:	b	3622c <__assert_fail@plt+0x24d28>
   361ec:	ldr	r2, [fp, #-16]
   361f0:	mvn	r0, #0
   361f4:	mov	r3, #0
   361f8:	str	r0, [sp, #4]
   361fc:	ldr	r1, [sp, #4]
   36200:	bl	36b8c <__assert_fail@plt+0x25688>
   36204:	ldr	r2, [fp, #-12]
   36208:	subs	r0, r0, r2
   3620c:	sbcs	r1, r1, #0
   36210:	bcs	3622c <__assert_fail@plt+0x24d28>
   36214:	b	36218 <__assert_fail@plt+0x24d14>
   36218:	ldr	r0, [fp, #-12]
   3621c:	ldr	r1, [fp, #-16]
   36220:	mul	r0, r0, r1
   36224:	str	r0, [fp, #-20]	; 0xffffffec
   36228:	b	36240 <__assert_fail@plt+0x24d3c>
   3622c:	ldr	r0, [fp, #-12]
   36230:	ldr	r1, [fp, #-16]
   36234:	mul	r0, r0, r1
   36238:	str	r0, [fp, #-20]	; 0xffffffec
   3623c:	b	36258 <__assert_fail@plt+0x24d54>
   36240:	bl	113fc <__errno_location@plt>
   36244:	movw	r1, #12
   36248:	str	r1, [r0]
   3624c:	movw	r0, #0
   36250:	str	r0, [fp, #-4]
   36254:	b	36268 <__assert_fail@plt+0x24d64>
   36258:	ldr	r0, [fp, #-8]
   3625c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36260:	bl	335bc <__assert_fail@plt+0x220b8>
   36264:	str	r0, [fp, #-4]
   36268:	ldr	r0, [fp, #-4]
   3626c:	mov	sp, fp
   36270:	pop	{fp, pc}
   36274:	svcvc	0x00ffffff
   36278:	andhi	r0, r0, r0
   3627c:			; <UNDEFINED> instruction: 0xffff8000
   36280:	sub	sp, sp, #12
   36284:	str	r0, [sp, #4]
   36288:	ldr	r0, [sp, #4]
   3628c:	sub	r1, r0, #48	; 0x30
   36290:	cmp	r1, #10
   36294:	str	r0, [sp]
   36298:	bcc	362c8 <__assert_fail@plt+0x24dc4>
   3629c:	b	362a0 <__assert_fail@plt+0x24d9c>
   362a0:	ldr	r0, [sp]
   362a4:	sub	r1, r0, #65	; 0x41
   362a8:	cmp	r1, #26
   362ac:	bcc	362c8 <__assert_fail@plt+0x24dc4>
   362b0:	b	362b4 <__assert_fail@plt+0x24db0>
   362b4:	ldr	r0, [sp]
   362b8:	sub	r1, r0, #97	; 0x61
   362bc:	cmp	r1, #25
   362c0:	bhi	362d8 <__assert_fail@plt+0x24dd4>
   362c4:	b	362c8 <__assert_fail@plt+0x24dc4>
   362c8:	movw	r0, #1
   362cc:	and	r0, r0, #1
   362d0:	strb	r0, [sp, #11]
   362d4:	b	362e4 <__assert_fail@plt+0x24de0>
   362d8:	movw	r0, #0
   362dc:	and	r0, r0, #1
   362e0:	strb	r0, [sp, #11]
   362e4:	ldrb	r0, [sp, #11]
   362e8:	and	r0, r0, #1
   362ec:	add	sp, sp, #12
   362f0:	bx	lr
   362f4:	sub	sp, sp, #12
   362f8:	str	r0, [sp, #4]
   362fc:	ldr	r0, [sp, #4]
   36300:	sub	r1, r0, #65	; 0x41
   36304:	cmp	r1, #26
   36308:	str	r0, [sp]
   3630c:	bcc	36328 <__assert_fail@plt+0x24e24>
   36310:	b	36314 <__assert_fail@plt+0x24e10>
   36314:	ldr	r0, [sp]
   36318:	sub	r1, r0, #97	; 0x61
   3631c:	cmp	r1, #25
   36320:	bhi	36338 <__assert_fail@plt+0x24e34>
   36324:	b	36328 <__assert_fail@plt+0x24e24>
   36328:	movw	r0, #1
   3632c:	and	r0, r0, #1
   36330:	strb	r0, [sp, #11]
   36334:	b	36344 <__assert_fail@plt+0x24e40>
   36338:	movw	r0, #0
   3633c:	and	r0, r0, #1
   36340:	strb	r0, [sp, #11]
   36344:	ldrb	r0, [sp, #11]
   36348:	and	r0, r0, #1
   3634c:	add	sp, sp, #12
   36350:	bx	lr
   36354:	sub	sp, sp, #8
   36358:	str	r0, [sp]
   3635c:	ldr	r0, [sp]
   36360:	cmp	r0, #127	; 0x7f
   36364:	bhi	3637c <__assert_fail@plt+0x24e78>
   36368:	b	3636c <__assert_fail@plt+0x24e68>
   3636c:	movw	r0, #1
   36370:	and	r0, r0, #1
   36374:	strb	r0, [sp, #7]
   36378:	b	36388 <__assert_fail@plt+0x24e84>
   3637c:	movw	r0, #0
   36380:	and	r0, r0, #1
   36384:	strb	r0, [sp, #7]
   36388:	ldrb	r0, [sp, #7]
   3638c:	and	r0, r0, #1
   36390:	add	sp, sp, #8
   36394:	bx	lr
   36398:	sub	sp, sp, #8
   3639c:	str	r0, [sp, #4]
   363a0:	ldr	r0, [sp, #4]
   363a4:	cmp	r0, #32
   363a8:	movw	r0, #1
   363ac:	str	r0, [sp]
   363b0:	beq	363c8 <__assert_fail@plt+0x24ec4>
   363b4:	ldr	r0, [sp, #4]
   363b8:	cmp	r0, #9
   363bc:	movw	r0, #0
   363c0:	moveq	r0, #1
   363c4:	str	r0, [sp]
   363c8:	ldr	r0, [sp]
   363cc:	and	r0, r0, #1
   363d0:	add	sp, sp, #8
   363d4:	bx	lr
   363d8:	sub	sp, sp, #12
   363dc:	str	r0, [sp, #4]
   363e0:	ldr	r0, [sp, #4]
   363e4:	cmp	r0, #32
   363e8:	str	r0, [sp]
   363ec:	bcc	36404 <__assert_fail@plt+0x24f00>
   363f0:	b	363f4 <__assert_fail@plt+0x24ef0>
   363f4:	ldr	r0, [sp]
   363f8:	cmp	r0, #127	; 0x7f
   363fc:	bne	36414 <__assert_fail@plt+0x24f10>
   36400:	b	36404 <__assert_fail@plt+0x24f00>
   36404:	movw	r0, #1
   36408:	and	r0, r0, #1
   3640c:	strb	r0, [sp, #11]
   36410:	b	36420 <__assert_fail@plt+0x24f1c>
   36414:	movw	r0, #0
   36418:	and	r0, r0, #1
   3641c:	strb	r0, [sp, #11]
   36420:	ldrb	r0, [sp, #11]
   36424:	and	r0, r0, #1
   36428:	add	sp, sp, #12
   3642c:	bx	lr
   36430:	sub	sp, sp, #8
   36434:	str	r0, [sp]
   36438:	ldr	r0, [sp]
   3643c:	sub	r0, r0, #48	; 0x30
   36440:	cmp	r0, #9
   36444:	bhi	3645c <__assert_fail@plt+0x24f58>
   36448:	b	3644c <__assert_fail@plt+0x24f48>
   3644c:	movw	r0, #1
   36450:	and	r0, r0, #1
   36454:	strb	r0, [sp, #7]
   36458:	b	36468 <__assert_fail@plt+0x24f64>
   3645c:	movw	r0, #0
   36460:	and	r0, r0, #1
   36464:	strb	r0, [sp, #7]
   36468:	ldrb	r0, [sp, #7]
   3646c:	and	r0, r0, #1
   36470:	add	sp, sp, #8
   36474:	bx	lr
   36478:	sub	sp, sp, #8
   3647c:	str	r0, [sp]
   36480:	ldr	r0, [sp]
   36484:	sub	r0, r0, #33	; 0x21
   36488:	cmp	r0, #93	; 0x5d
   3648c:	bhi	364a4 <__assert_fail@plt+0x24fa0>
   36490:	b	36494 <__assert_fail@plt+0x24f90>
   36494:	movw	r0, #1
   36498:	and	r0, r0, #1
   3649c:	strb	r0, [sp, #7]
   364a0:	b	364b0 <__assert_fail@plt+0x24fac>
   364a4:	movw	r0, #0
   364a8:	and	r0, r0, #1
   364ac:	strb	r0, [sp, #7]
   364b0:	ldrb	r0, [sp, #7]
   364b4:	and	r0, r0, #1
   364b8:	add	sp, sp, #8
   364bc:	bx	lr
   364c0:	sub	sp, sp, #8
   364c4:	str	r0, [sp]
   364c8:	ldr	r0, [sp]
   364cc:	sub	r0, r0, #97	; 0x61
   364d0:	cmp	r0, #25
   364d4:	bhi	364ec <__assert_fail@plt+0x24fe8>
   364d8:	b	364dc <__assert_fail@plt+0x24fd8>
   364dc:	movw	r0, #1
   364e0:	and	r0, r0, #1
   364e4:	strb	r0, [sp, #7]
   364e8:	b	364f8 <__assert_fail@plt+0x24ff4>
   364ec:	movw	r0, #0
   364f0:	and	r0, r0, #1
   364f4:	strb	r0, [sp, #7]
   364f8:	ldrb	r0, [sp, #7]
   364fc:	and	r0, r0, #1
   36500:	add	sp, sp, #8
   36504:	bx	lr
   36508:	sub	sp, sp, #8
   3650c:	str	r0, [sp]
   36510:	ldr	r0, [sp]
   36514:	sub	r0, r0, #32
   36518:	cmp	r0, #94	; 0x5e
   3651c:	bhi	36534 <__assert_fail@plt+0x25030>
   36520:	b	36524 <__assert_fail@plt+0x25020>
   36524:	movw	r0, #1
   36528:	and	r0, r0, #1
   3652c:	strb	r0, [sp, #7]
   36530:	b	36540 <__assert_fail@plt+0x2503c>
   36534:	movw	r0, #0
   36538:	and	r0, r0, #1
   3653c:	strb	r0, [sp, #7]
   36540:	ldrb	r0, [sp, #7]
   36544:	and	r0, r0, #1
   36548:	add	sp, sp, #8
   3654c:	bx	lr
   36550:	sub	sp, sp, #12
   36554:	str	r0, [sp, #4]
   36558:	ldr	r0, [sp, #4]
   3655c:	sub	r0, r0, #33	; 0x21
   36560:	cmp	r0, #93	; 0x5d
   36564:	str	r0, [sp]
   36568:	bhi	36704 <__assert_fail@plt+0x25200>
   3656c:	add	r0, pc, #8
   36570:	ldr	r1, [sp]
   36574:	ldr	r0, [r0, r1, lsl #2]
   36578:	mov	pc, r0
   3657c:	strdeq	r6, [r3], -r4
   36580:	strdeq	r6, [r3], -r4
   36584:	strdeq	r6, [r3], -r4
   36588:	strdeq	r6, [r3], -r4
   3658c:	strdeq	r6, [r3], -r4
   36590:	strdeq	r6, [r3], -r4
   36594:	strdeq	r6, [r3], -r4
   36598:	strdeq	r6, [r3], -r4
   3659c:	strdeq	r6, [r3], -r4
   365a0:	strdeq	r6, [r3], -r4
   365a4:	strdeq	r6, [r3], -r4
   365a8:	strdeq	r6, [r3], -r4
   365ac:	strdeq	r6, [r3], -r4
   365b0:	strdeq	r6, [r3], -r4
   365b4:	strdeq	r6, [r3], -r4
   365b8:	andeq	r6, r3, r4, lsl #14
   365bc:	andeq	r6, r3, r4, lsl #14
   365c0:	andeq	r6, r3, r4, lsl #14
   365c4:	andeq	r6, r3, r4, lsl #14
   365c8:	andeq	r6, r3, r4, lsl #14
   365cc:	andeq	r6, r3, r4, lsl #14
   365d0:	andeq	r6, r3, r4, lsl #14
   365d4:	andeq	r6, r3, r4, lsl #14
   365d8:	andeq	r6, r3, r4, lsl #14
   365dc:	andeq	r6, r3, r4, lsl #14
   365e0:	strdeq	r6, [r3], -r4
   365e4:	strdeq	r6, [r3], -r4
   365e8:	strdeq	r6, [r3], -r4
   365ec:	strdeq	r6, [r3], -r4
   365f0:	strdeq	r6, [r3], -r4
   365f4:	strdeq	r6, [r3], -r4
   365f8:	strdeq	r6, [r3], -r4
   365fc:	andeq	r6, r3, r4, lsl #14
   36600:	andeq	r6, r3, r4, lsl #14
   36604:	andeq	r6, r3, r4, lsl #14
   36608:	andeq	r6, r3, r4, lsl #14
   3660c:	andeq	r6, r3, r4, lsl #14
   36610:	andeq	r6, r3, r4, lsl #14
   36614:	andeq	r6, r3, r4, lsl #14
   36618:	andeq	r6, r3, r4, lsl #14
   3661c:	andeq	r6, r3, r4, lsl #14
   36620:	andeq	r6, r3, r4, lsl #14
   36624:	andeq	r6, r3, r4, lsl #14
   36628:	andeq	r6, r3, r4, lsl #14
   3662c:	andeq	r6, r3, r4, lsl #14
   36630:	andeq	r6, r3, r4, lsl #14
   36634:	andeq	r6, r3, r4, lsl #14
   36638:	andeq	r6, r3, r4, lsl #14
   3663c:	andeq	r6, r3, r4, lsl #14
   36640:	andeq	r6, r3, r4, lsl #14
   36644:	andeq	r6, r3, r4, lsl #14
   36648:	andeq	r6, r3, r4, lsl #14
   3664c:	andeq	r6, r3, r4, lsl #14
   36650:	andeq	r6, r3, r4, lsl #14
   36654:	andeq	r6, r3, r4, lsl #14
   36658:	andeq	r6, r3, r4, lsl #14
   3665c:	andeq	r6, r3, r4, lsl #14
   36660:	andeq	r6, r3, r4, lsl #14
   36664:	strdeq	r6, [r3], -r4
   36668:	strdeq	r6, [r3], -r4
   3666c:	strdeq	r6, [r3], -r4
   36670:	strdeq	r6, [r3], -r4
   36674:	strdeq	r6, [r3], -r4
   36678:	strdeq	r6, [r3], -r4
   3667c:	andeq	r6, r3, r4, lsl #14
   36680:	andeq	r6, r3, r4, lsl #14
   36684:	andeq	r6, r3, r4, lsl #14
   36688:	andeq	r6, r3, r4, lsl #14
   3668c:	andeq	r6, r3, r4, lsl #14
   36690:	andeq	r6, r3, r4, lsl #14
   36694:	andeq	r6, r3, r4, lsl #14
   36698:	andeq	r6, r3, r4, lsl #14
   3669c:	andeq	r6, r3, r4, lsl #14
   366a0:	andeq	r6, r3, r4, lsl #14
   366a4:	andeq	r6, r3, r4, lsl #14
   366a8:	andeq	r6, r3, r4, lsl #14
   366ac:	andeq	r6, r3, r4, lsl #14
   366b0:	andeq	r6, r3, r4, lsl #14
   366b4:	andeq	r6, r3, r4, lsl #14
   366b8:	andeq	r6, r3, r4, lsl #14
   366bc:	andeq	r6, r3, r4, lsl #14
   366c0:	andeq	r6, r3, r4, lsl #14
   366c4:	andeq	r6, r3, r4, lsl #14
   366c8:	andeq	r6, r3, r4, lsl #14
   366cc:	andeq	r6, r3, r4, lsl #14
   366d0:	andeq	r6, r3, r4, lsl #14
   366d4:	andeq	r6, r3, r4, lsl #14
   366d8:	andeq	r6, r3, r4, lsl #14
   366dc:	andeq	r6, r3, r4, lsl #14
   366e0:	andeq	r6, r3, r4, lsl #14
   366e4:	strdeq	r6, [r3], -r4
   366e8:	strdeq	r6, [r3], -r4
   366ec:	strdeq	r6, [r3], -r4
   366f0:	strdeq	r6, [r3], -r4
   366f4:	movw	r0, #1
   366f8:	and	r0, r0, #1
   366fc:	strb	r0, [sp, #11]
   36700:	b	36710 <__assert_fail@plt+0x2520c>
   36704:	movw	r0, #0
   36708:	and	r0, r0, #1
   3670c:	strb	r0, [sp, #11]
   36710:	ldrb	r0, [sp, #11]
   36714:	and	r0, r0, #1
   36718:	add	sp, sp, #12
   3671c:	bx	lr
   36720:	sub	sp, sp, #12
   36724:	str	r0, [sp, #4]
   36728:	ldr	r0, [sp, #4]
   3672c:	sub	r1, r0, #9
   36730:	cmp	r1, #5
   36734:	str	r0, [sp]
   36738:	bcc	36750 <__assert_fail@plt+0x2524c>
   3673c:	b	36740 <__assert_fail@plt+0x2523c>
   36740:	ldr	r0, [sp]
   36744:	cmp	r0, #32
   36748:	bne	36760 <__assert_fail@plt+0x2525c>
   3674c:	b	36750 <__assert_fail@plt+0x2524c>
   36750:	movw	r0, #1
   36754:	and	r0, r0, #1
   36758:	strb	r0, [sp, #11]
   3675c:	b	3676c <__assert_fail@plt+0x25268>
   36760:	movw	r0, #0
   36764:	and	r0, r0, #1
   36768:	strb	r0, [sp, #11]
   3676c:	ldrb	r0, [sp, #11]
   36770:	and	r0, r0, #1
   36774:	add	sp, sp, #12
   36778:	bx	lr
   3677c:	sub	sp, sp, #8
   36780:	str	r0, [sp]
   36784:	ldr	r0, [sp]
   36788:	sub	r0, r0, #65	; 0x41
   3678c:	cmp	r0, #25
   36790:	bhi	367a8 <__assert_fail@plt+0x252a4>
   36794:	b	36798 <__assert_fail@plt+0x25294>
   36798:	movw	r0, #1
   3679c:	and	r0, r0, #1
   367a0:	strb	r0, [sp, #7]
   367a4:	b	367b4 <__assert_fail@plt+0x252b0>
   367a8:	movw	r0, #0
   367ac:	and	r0, r0, #1
   367b0:	strb	r0, [sp, #7]
   367b4:	ldrb	r0, [sp, #7]
   367b8:	and	r0, r0, #1
   367bc:	add	sp, sp, #8
   367c0:	bx	lr
   367c4:	sub	sp, sp, #12
   367c8:	str	r0, [sp, #4]
   367cc:	ldr	r0, [sp, #4]
   367d0:	sub	r1, r0, #48	; 0x30
   367d4:	cmp	r1, #10
   367d8:	str	r0, [sp]
   367dc:	bcc	3680c <__assert_fail@plt+0x25308>
   367e0:	b	367e4 <__assert_fail@plt+0x252e0>
   367e4:	ldr	r0, [sp]
   367e8:	sub	r1, r0, #65	; 0x41
   367ec:	cmp	r1, #6
   367f0:	bcc	3680c <__assert_fail@plt+0x25308>
   367f4:	b	367f8 <__assert_fail@plt+0x252f4>
   367f8:	ldr	r0, [sp]
   367fc:	sub	r1, r0, #97	; 0x61
   36800:	cmp	r1, #5
   36804:	bhi	3681c <__assert_fail@plt+0x25318>
   36808:	b	3680c <__assert_fail@plt+0x25308>
   3680c:	movw	r0, #1
   36810:	and	r0, r0, #1
   36814:	strb	r0, [sp, #11]
   36818:	b	36828 <__assert_fail@plt+0x25324>
   3681c:	movw	r0, #0
   36820:	and	r0, r0, #1
   36824:	strb	r0, [sp, #11]
   36828:	ldrb	r0, [sp, #11]
   3682c:	and	r0, r0, #1
   36830:	add	sp, sp, #12
   36834:	bx	lr
   36838:	sub	sp, sp, #8
   3683c:	str	r0, [sp]
   36840:	ldr	r0, [sp]
   36844:	sub	r0, r0, #65	; 0x41
   36848:	cmp	r0, #25
   3684c:	bhi	36868 <__assert_fail@plt+0x25364>
   36850:	b	36854 <__assert_fail@plt+0x25350>
   36854:	ldr	r0, [sp]
   36858:	sub	r0, r0, #65	; 0x41
   3685c:	add	r0, r0, #97	; 0x61
   36860:	str	r0, [sp, #4]
   36864:	b	36870 <__assert_fail@plt+0x2536c>
   36868:	ldr	r0, [sp]
   3686c:	str	r0, [sp, #4]
   36870:	ldr	r0, [sp, #4]
   36874:	add	sp, sp, #8
   36878:	bx	lr
   3687c:	sub	sp, sp, #8
   36880:	str	r0, [sp]
   36884:	ldr	r0, [sp]
   36888:	sub	r0, r0, #97	; 0x61
   3688c:	cmp	r0, #25
   36890:	bhi	368ac <__assert_fail@plt+0x253a8>
   36894:	b	36898 <__assert_fail@plt+0x25394>
   36898:	ldr	r0, [sp]
   3689c:	sub	r0, r0, #97	; 0x61
   368a0:	add	r0, r0, #65	; 0x41
   368a4:	str	r0, [sp, #4]
   368a8:	b	368b4 <__assert_fail@plt+0x253b0>
   368ac:	ldr	r0, [sp]
   368b0:	str	r0, [sp, #4]
   368b4:	ldr	r0, [sp, #4]
   368b8:	add	sp, sp, #8
   368bc:	bx	lr
   368c0:	push	{r4, r5, fp, lr}
   368c4:	add	fp, sp, #8
   368c8:	sub	sp, sp, #272	; 0x110
   368cc:	add	r1, sp, #7
   368d0:	str	r0, [fp, #-16]
   368d4:	ldr	r0, [fp, #-16]
   368d8:	movw	r2, #257	; 0x101
   368dc:	bl	3695c <__assert_fail@plt+0x25458>
   368e0:	cmp	r0, #0
   368e4:	beq	368f8 <__assert_fail@plt+0x253f4>
   368e8:	movw	r0, #0
   368ec:	and	r0, r0, #1
   368f0:	strb	r0, [fp, #-9]
   368f4:	b	3694c <__assert_fail@plt+0x25448>
   368f8:	add	r0, sp, #7
   368fc:	movw	r1, #32906	; 0x808a
   36900:	movt	r1, #3
   36904:	bl	11234 <strcmp@plt>
   36908:	cmp	r0, #0
   3690c:	movw	r0, #1
   36910:	str	r0, [sp]
   36914:	beq	36938 <__assert_fail@plt+0x25434>
   36918:	add	r0, sp, #7
   3691c:	movw	r1, #32908	; 0x808c
   36920:	movt	r1, #3
   36924:	bl	11234 <strcmp@plt>
   36928:	cmp	r0, #0
   3692c:	movw	r0, #0
   36930:	moveq	r0, #1
   36934:	str	r0, [sp]
   36938:	ldr	r0, [sp]
   3693c:	mvn	r1, #0
   36940:	eor	r0, r0, r1
   36944:	and	r0, r0, #1
   36948:	strb	r0, [fp, #-9]
   3694c:	ldrb	r0, [fp, #-9]
   36950:	and	r0, r0, #1
   36954:	sub	sp, fp, #8
   36958:	pop	{r4, r5, fp, pc}
   3695c:	push	{fp, lr}
   36960:	mov	fp, sp
   36964:	sub	sp, sp, #16
   36968:	str	r0, [fp, #-4]
   3696c:	str	r1, [sp, #8]
   36970:	str	r2, [sp, #4]
   36974:	ldr	r0, [fp, #-4]
   36978:	ldr	r1, [sp, #8]
   3697c:	ldr	r2, [sp, #4]
   36980:	bl	3698c <__assert_fail@plt+0x25488>
   36984:	mov	sp, fp
   36988:	pop	{fp, pc}
   3698c:	push	{fp, lr}
   36990:	mov	fp, sp
   36994:	sub	sp, sp, #24
   36998:	str	r0, [fp, #-8]
   3699c:	str	r1, [sp, #12]
   369a0:	str	r2, [sp, #8]
   369a4:	ldr	r0, [fp, #-8]
   369a8:	bl	36a8c <__assert_fail@plt+0x25588>
   369ac:	str	r0, [sp, #4]
   369b0:	ldr	r0, [sp, #4]
   369b4:	movw	r1, #0
   369b8:	cmp	r0, r1
   369bc:	bne	369e4 <__assert_fail@plt+0x254e0>
   369c0:	ldr	r0, [sp, #8]
   369c4:	cmp	r0, #0
   369c8:	bls	369d8 <__assert_fail@plt+0x254d4>
   369cc:	ldr	r0, [sp, #12]
   369d0:	movw	r1, #0
   369d4:	strb	r1, [r0]
   369d8:	movw	r0, #22
   369dc:	str	r0, [fp, #-4]
   369e0:	b	36a60 <__assert_fail@plt+0x2555c>
   369e4:	ldr	r0, [sp, #4]
   369e8:	bl	113d8 <strlen@plt>
   369ec:	str	r0, [sp]
   369f0:	ldr	r0, [sp]
   369f4:	ldr	r1, [sp, #8]
   369f8:	cmp	r0, r1
   369fc:	bcs	36a20 <__assert_fail@plt+0x2551c>
   36a00:	ldr	r0, [sp, #12]
   36a04:	ldr	r1, [sp, #4]
   36a08:	ldr	r2, [sp]
   36a0c:	add	r2, r2, #1
   36a10:	bl	112a0 <memcpy@plt>
   36a14:	movw	r0, #0
   36a18:	str	r0, [fp, #-4]
   36a1c:	b	36a60 <__assert_fail@plt+0x2555c>
   36a20:	ldr	r0, [sp, #8]
   36a24:	cmp	r0, #0
   36a28:	bls	36a58 <__assert_fail@plt+0x25554>
   36a2c:	ldr	r0, [sp, #12]
   36a30:	ldr	r1, [sp, #4]
   36a34:	ldr	r2, [sp, #8]
   36a38:	sub	r2, r2, #1
   36a3c:	bl	112a0 <memcpy@plt>
   36a40:	ldr	r0, [sp, #12]
   36a44:	ldr	r1, [sp, #8]
   36a48:	sub	r1, r1, #1
   36a4c:	add	r0, r0, r1
   36a50:	movw	r1, #0
   36a54:	strb	r1, [r0]
   36a58:	movw	r0, #34	; 0x22
   36a5c:	str	r0, [fp, #-4]
   36a60:	ldr	r0, [fp, #-4]
   36a64:	mov	sp, fp
   36a68:	pop	{fp, pc}
   36a6c:	push	{fp, lr}
   36a70:	mov	fp, sp
   36a74:	sub	sp, sp, #8
   36a78:	str	r0, [sp, #4]
   36a7c:	ldr	r0, [sp, #4]
   36a80:	bl	36a8c <__assert_fail@plt+0x25588>
   36a84:	mov	sp, fp
   36a88:	pop	{fp, pc}
   36a8c:	push	{fp, lr}
   36a90:	mov	fp, sp
   36a94:	sub	sp, sp, #8
   36a98:	str	r0, [sp, #4]
   36a9c:	ldr	r0, [sp, #4]
   36aa0:	movw	r1, #0
   36aa4:	bl	11468 <setlocale@plt>
   36aa8:	str	r0, [sp]
   36aac:	ldr	r0, [sp]
   36ab0:	mov	sp, fp
   36ab4:	pop	{fp, pc}
   36ab8:	cmp	r3, #0
   36abc:	cmpeq	r2, #0
   36ac0:	bne	36ae4 <__assert_fail@plt+0x255e0>
   36ac4:	cmp	r1, #0
   36ac8:	movlt	r1, #-2147483648	; 0x80000000
   36acc:	movlt	r0, #0
   36ad0:	blt	36ae0 <__assert_fail@plt+0x255dc>
   36ad4:	cmpeq	r0, #0
   36ad8:	mvnne	r1, #-2147483648	; 0x80000000
   36adc:	mvnne	r0, #0
   36ae0:	b	36bc8 <__assert_fail@plt+0x256c4>
   36ae4:	sub	sp, sp, #8
   36ae8:	push	{sp, lr}
   36aec:	cmp	r1, #0
   36af0:	blt	36b10 <__assert_fail@plt+0x2560c>
   36af4:	cmp	r3, #0
   36af8:	blt	36b44 <__assert_fail@plt+0x25640>
   36afc:	bl	36bd8 <__assert_fail@plt+0x256d4>
   36b00:	ldr	lr, [sp, #4]
   36b04:	add	sp, sp, #8
   36b08:	pop	{r2, r3}
   36b0c:	bx	lr
   36b10:	rsbs	r0, r0, #0
   36b14:	sbc	r1, r1, r1, lsl #1
   36b18:	cmp	r3, #0
   36b1c:	blt	36b68 <__assert_fail@plt+0x25664>
   36b20:	bl	36bd8 <__assert_fail@plt+0x256d4>
   36b24:	ldr	lr, [sp, #4]
   36b28:	add	sp, sp, #8
   36b2c:	pop	{r2, r3}
   36b30:	rsbs	r0, r0, #0
   36b34:	sbc	r1, r1, r1, lsl #1
   36b38:	rsbs	r2, r2, #0
   36b3c:	sbc	r3, r3, r3, lsl #1
   36b40:	bx	lr
   36b44:	rsbs	r2, r2, #0
   36b48:	sbc	r3, r3, r3, lsl #1
   36b4c:	bl	36bd8 <__assert_fail@plt+0x256d4>
   36b50:	ldr	lr, [sp, #4]
   36b54:	add	sp, sp, #8
   36b58:	pop	{r2, r3}
   36b5c:	rsbs	r0, r0, #0
   36b60:	sbc	r1, r1, r1, lsl #1
   36b64:	bx	lr
   36b68:	rsbs	r2, r2, #0
   36b6c:	sbc	r3, r3, r3, lsl #1
   36b70:	bl	36bd8 <__assert_fail@plt+0x256d4>
   36b74:	ldr	lr, [sp, #4]
   36b78:	add	sp, sp, #8
   36b7c:	pop	{r2, r3}
   36b80:	rsbs	r2, r2, #0
   36b84:	sbc	r3, r3, r3, lsl #1
   36b88:	bx	lr
   36b8c:	cmp	r3, #0
   36b90:	cmpeq	r2, #0
   36b94:	bne	36bac <__assert_fail@plt+0x256a8>
   36b98:	cmp	r1, #0
   36b9c:	cmpeq	r0, #0
   36ba0:	mvnne	r1, #0
   36ba4:	mvnne	r0, #0
   36ba8:	b	36bc8 <__assert_fail@plt+0x256c4>
   36bac:	sub	sp, sp, #8
   36bb0:	push	{sp, lr}
   36bb4:	bl	36bd8 <__assert_fail@plt+0x256d4>
   36bb8:	ldr	lr, [sp, #4]
   36bbc:	add	sp, sp, #8
   36bc0:	pop	{r2, r3}
   36bc4:	bx	lr
   36bc8:	push	{r1, lr}
   36bcc:	mov	r0, #8
   36bd0:	bl	11210 <raise@plt>
   36bd4:	pop	{r1, pc}
   36bd8:	cmp	r1, r3
   36bdc:	cmpeq	r0, r2
   36be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36be4:	mov	r4, r0
   36be8:	movcc	r0, #0
   36bec:	mov	r5, r1
   36bf0:	ldr	lr, [sp, #36]	; 0x24
   36bf4:	movcc	r1, r0
   36bf8:	bcc	36cf4 <__assert_fail@plt+0x257f0>
   36bfc:	cmp	r3, #0
   36c00:	clzeq	ip, r2
   36c04:	clzne	ip, r3
   36c08:	addeq	ip, ip, #32
   36c0c:	cmp	r5, #0
   36c10:	clzeq	r1, r4
   36c14:	addeq	r1, r1, #32
   36c18:	clzne	r1, r5
   36c1c:	sub	ip, ip, r1
   36c20:	sub	sl, ip, #32
   36c24:	lsl	r9, r3, ip
   36c28:	rsb	fp, ip, #32
   36c2c:	orr	r9, r9, r2, lsl sl
   36c30:	orr	r9, r9, r2, lsr fp
   36c34:	lsl	r8, r2, ip
   36c38:	cmp	r5, r9
   36c3c:	cmpeq	r4, r8
   36c40:	movcc	r0, #0
   36c44:	movcc	r1, r0
   36c48:	bcc	36c64 <__assert_fail@plt+0x25760>
   36c4c:	mov	r0, #1
   36c50:	subs	r4, r4, r8
   36c54:	lsl	r1, r0, sl
   36c58:	orr	r1, r1, r0, lsr fp
   36c5c:	lsl	r0, r0, ip
   36c60:	sbc	r5, r5, r9
   36c64:	cmp	ip, #0
   36c68:	beq	36cf4 <__assert_fail@plt+0x257f0>
   36c6c:	lsr	r6, r8, #1
   36c70:	orr	r6, r6, r9, lsl #31
   36c74:	lsr	r7, r9, #1
   36c78:	mov	r2, ip
   36c7c:	b	36ca0 <__assert_fail@plt+0x2579c>
   36c80:	subs	r3, r4, r6
   36c84:	sbc	r8, r5, r7
   36c88:	adds	r3, r3, r3
   36c8c:	adc	r8, r8, r8
   36c90:	adds	r4, r3, #1
   36c94:	adc	r5, r8, #0
   36c98:	subs	r2, r2, #1
   36c9c:	beq	36cbc <__assert_fail@plt+0x257b8>
   36ca0:	cmp	r5, r7
   36ca4:	cmpeq	r4, r6
   36ca8:	bcs	36c80 <__assert_fail@plt+0x2577c>
   36cac:	adds	r4, r4, r4
   36cb0:	adc	r5, r5, r5
   36cb4:	subs	r2, r2, #1
   36cb8:	bne	36ca0 <__assert_fail@plt+0x2579c>
   36cbc:	lsr	r3, r4, ip
   36cc0:	orr	r3, r3, r5, lsl fp
   36cc4:	lsr	r2, r5, ip
   36cc8:	orr	r3, r3, r5, lsr sl
   36ccc:	adds	r0, r0, r4
   36cd0:	mov	r4, r3
   36cd4:	lsl	r3, r2, ip
   36cd8:	orr	r3, r3, r4, lsl sl
   36cdc:	lsl	ip, r4, ip
   36ce0:	orr	r3, r3, r4, lsr fp
   36ce4:	adc	r1, r1, r5
   36ce8:	subs	r0, r0, ip
   36cec:	mov	r5, r2
   36cf0:	sbc	r1, r1, r3
   36cf4:	cmp	lr, #0
   36cf8:	strdne	r4, [lr]
   36cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36d00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   36d04:	mov	r7, r0
   36d08:	ldr	r6, [pc, #72]	; 36d58 <__assert_fail@plt+0x25854>
   36d0c:	ldr	r5, [pc, #72]	; 36d5c <__assert_fail@plt+0x25858>
   36d10:	add	r6, pc, r6
   36d14:	add	r5, pc, r5
   36d18:	sub	r6, r6, r5
   36d1c:	mov	r8, r1
   36d20:	mov	r9, r2
   36d24:	bl	111c0 <pthread_mutex_unlock@plt-0x20>
   36d28:	asrs	r6, r6, #2
   36d2c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   36d30:	mov	r4, #0
   36d34:	add	r4, r4, #1
   36d38:	ldr	r3, [r5], #4
   36d3c:	mov	r2, r9
   36d40:	mov	r1, r8
   36d44:	mov	r0, r7
   36d48:	blx	r3
   36d4c:	cmp	r6, r4
   36d50:	bne	36d34 <__assert_fail@plt+0x25830>
   36d54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   36d58:	strdeq	r2, [r1], -r4
   36d5c:	andeq	r2, r1, ip, ror #3
   36d60:	bx	lr
   36d64:	ldr	r3, [pc, #12]	; 36d78 <__assert_fail@plt+0x25874>
   36d68:	mov	r1, #0
   36d6c:	add	r3, pc, r3
   36d70:	ldr	r2, [r3]
   36d74:	b	11414 <__cxa_atexit@plt>
   36d78:			; <UNDEFINED> instruction: 0x000123b0

Disassembly of section .fini:

00036d7c <.fini>:
   36d7c:	push	{r3, lr}
   36d80:	pop	{r3, pc}
