
../repos/eddieantonio-ocreval-3ab279a/editopsum/editopsum:     file format elf32-littlearm


Disassembly of section .init:

000106b8 <.init>:
   106b8:	push	{r3, lr}
   106bc:	bl	10810 <abort@plt+0x48>
   106c0:	pop	{r3, pc}

Disassembly of section .plt:

000106c4 <calloc@plt-0x14>:
   106c4:	push	{lr}		; (str lr, [sp, #-4]!)
   106c8:	ldr	lr, [pc, #4]	; 106d4 <calloc@plt-0x4>
   106cc:	add	lr, pc, lr
   106d0:	ldr	pc, [lr, #8]!
   106d4:	andeq	r1, r1, ip, lsr #18

000106d8 <calloc@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #69632	; 0x11000
   106e0:	ldr	pc, [ip, #2348]!	; 0x92c

000106e4 <strcmp@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #69632	; 0x11000
   106ec:	ldr	pc, [ip, #2340]!	; 0x924

000106f0 <fopen@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #69632	; 0x11000
   106f8:	ldr	pc, [ip, #2332]!	; 0x91c

000106fc <free@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #69632	; 0x11000
   10704:	ldr	pc, [ip, #2324]!	; 0x914

00010708 <fgets@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #69632	; 0x11000
   10710:	ldr	pc, [ip, #2316]!	; 0x90c

00010714 <strdup@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #69632	; 0x11000
   1071c:	ldr	pc, [ip, #2308]!	; 0x904

00010720 <unlink@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #69632	; 0x11000
   10728:	ldr	pc, [ip, #2300]!	; 0x8fc

0001072c <__xstat@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #69632	; 0x11000
   10734:	ldr	pc, [ip, #2292]!	; 0x8f4

00010738 <fwrite@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #69632	; 0x11000
   10740:	ldr	pc, [ip, #2284]!	; 0x8ec

00010744 <__libc_start_main@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010750 <__sysv_signal@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2268]!	; 0x8dc

0001075c <__gmon_start__@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2260]!	; 0x8d4

00010768 <getpid@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2252]!	; 0x8cc

00010774 <exit@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010780 <strlen@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2236]!	; 0x8bc

0001078c <fprintf@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2228]!	; 0x8b4

00010798 <__isoc99_sscanf@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2220]!	; 0x8ac

000107a4 <fclose@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2212]!	; 0x8a4

000107b0 <sprintf@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2204]!	; 0x89c

000107bc <strncmp@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2196]!	; 0x894

000107c8 <abort@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2188]!	; 0x88c

Disassembly of section .text:

000107d4 <error@@Base-0x6f8>:
   107d4:	mov	fp, #0
   107d8:	mov	lr, #0
   107dc:	pop	{r1}		; (ldr r1, [sp], #4)
   107e0:	mov	r2, sp
   107e4:	push	{r2}		; (str r2, [sp, #-4]!)
   107e8:	push	{r0}		; (str r0, [sp, #-4]!)
   107ec:	ldr	ip, [pc, #16]	; 10804 <abort@plt+0x3c>
   107f0:	push	{ip}		; (str ip, [sp, #-4]!)
   107f4:	ldr	r0, [pc, #12]	; 10808 <abort@plt+0x40>
   107f8:	ldr	r3, [pc, #12]	; 1080c <abort@plt+0x44>
   107fc:	bl	10744 <__libc_start_main@plt>
   10800:	bl	107c8 <abort@plt>
   10804:	andeq	r1, r1, r4, asr #5
   10808:	strdeq	r0, [r1], -ip
   1080c:	andeq	r1, r1, r4, ror #4
   10810:	ldr	r3, [pc, #20]	; 1082c <abort@plt+0x64>
   10814:	ldr	r2, [pc, #20]	; 10830 <abort@plt+0x68>
   10818:	add	r3, pc, r3
   1081c:	ldr	r2, [r3, r2]
   10820:	cmp	r2, #0
   10824:	bxeq	lr
   10828:	b	1075c <__gmon_start__@plt>
   1082c:	andeq	r1, r1, r0, ror #15
   10830:	andeq	r0, r0, r0, rrx
   10834:	ldr	r3, [pc, #28]	; 10858 <abort@plt+0x90>
   10838:	ldr	r0, [pc, #28]	; 1085c <abort@plt+0x94>
   1083c:	sub	r3, r3, r0
   10840:	cmp	r3, #6
   10844:	bxls	lr
   10848:	ldr	r3, [pc, #16]	; 10860 <abort@plt+0x98>
   1084c:	cmp	r3, #0
   10850:	bxeq	lr
   10854:	bx	r3
   10858:	andeq	r2, r2, r7, ror r0
   1085c:	andeq	r2, r2, r4, ror r0
   10860:	andeq	r0, r0, r0
   10864:	ldr	r1, [pc, #36]	; 10890 <abort@plt+0xc8>
   10868:	ldr	r0, [pc, #36]	; 10894 <abort@plt+0xcc>
   1086c:	sub	r1, r1, r0
   10870:	asr	r1, r1, #2
   10874:	add	r1, r1, r1, lsr #31
   10878:	asrs	r1, r1, #1
   1087c:	bxeq	lr
   10880:	ldr	r3, [pc, #16]	; 10898 <abort@plt+0xd0>
   10884:	cmp	r3, #0
   10888:	bxeq	lr
   1088c:	bx	r3
   10890:	andeq	r2, r2, r4, ror r0
   10894:	andeq	r2, r2, r4, ror r0
   10898:	andeq	r0, r0, r0
   1089c:	push	{r4, lr}
   108a0:	ldr	r4, [pc, #24]	; 108c0 <abort@plt+0xf8>
   108a4:	ldrb	r3, [r4]
   108a8:	cmp	r3, #0
   108ac:	popne	{r4, pc}
   108b0:	bl	10834 <abort@plt+0x6c>
   108b4:	mov	r3, #1
   108b8:	strb	r3, [r4]
   108bc:	pop	{r4, pc}
   108c0:	andeq	r2, r2, r8, lsl #1
   108c4:	ldr	r0, [pc, #40]	; 108f4 <abort@plt+0x12c>
   108c8:	ldr	r3, [r0]
   108cc:	cmp	r3, #0
   108d0:	bne	108d8 <abort@plt+0x110>
   108d4:	b	10864 <abort@plt+0x9c>
   108d8:	ldr	r3, [pc, #24]	; 108f8 <abort@plt+0x130>
   108dc:	cmp	r3, #0
   108e0:	beq	108d4 <abort@plt+0x10c>
   108e4:	push	{r4, lr}
   108e8:	blx	r3
   108ec:	pop	{r4, lr}
   108f0:	b	10864 <abort@plt+0x9c>
   108f4:	andeq	r1, r2, r4, lsl #30
   108f8:	andeq	r0, r0, r0
   108fc:	push	{r4, r5, r6, lr}
   10900:	sub	sp, sp, #8
   10904:	add	ip, sp, #8
   10908:	str	r0, [ip, #-4]!
   1090c:	mov	r5, r1
   10910:	mov	r3, #0
   10914:	ldr	r2, [pc, #88]	; 10974 <abort@plt+0x1ac>
   10918:	mov	r0, ip
   1091c:	bl	1100c <error@@Base+0x140>
   10920:	ldr	r3, [sp, #4]
   10924:	cmp	r3, #1
   10928:	ble	1096c <abort@plt+0x1a4>
   1092c:	cmp	r3, #0
   10930:	ble	1095c <abort@plt+0x194>
   10934:	sub	r5, r5, #4
   10938:	mov	r4, #0
   1093c:	ldr	r6, [pc, #52]	; 10978 <abort@plt+0x1b0>
   10940:	ldr	r1, [r5, #4]!
   10944:	mov	r0, r6
   10948:	bl	109f0 <abort@plt+0x228>
   1094c:	add	r4, r4, #1
   10950:	ldr	r3, [sp, #4]
   10954:	cmp	r3, r4
   10958:	bgt	10940 <abort@plt+0x178>
   1095c:	mov	r1, #0
   10960:	ldr	r0, [pc, #16]	; 10978 <abort@plt+0x1b0>
   10964:	bl	10b6c <abort@plt+0x3a4>
   10968:	bl	10e74 <abort@plt+0x6ac>
   1096c:	ldr	r0, [pc, #8]	; 1097c <abort@plt+0x1b4>
   10970:	bl	10ecc <error@@Base>
   10974:	ldrdeq	r1, [r1], -r4
   10978:	strdeq	r2, [r2], -r4
   1097c:	andeq	r1, r1, r8, lsl #6
   10980:	push	{r4, lr}
   10984:	mov	r2, r0
   10988:	mov	r1, #99	; 0x63
   1098c:	ldr	r0, [pc, #12]	; 109a0 <abort@plt+0x1d8>
   10990:	bl	10708 <fgets@plt>
   10994:	adds	r0, r0, #0
   10998:	movne	r0, #1
   1099c:	pop	{r4, pc}
   109a0:	andeq	r2, r2, ip, lsl #1
   109a4:	push	{r4, r5, r6, lr}
   109a8:	mov	r4, r1
   109ac:	mov	r5, r2
   109b0:	bl	10980 <abort@plt+0x1b8>
   109b4:	cmp	r0, #0
   109b8:	popeq	{r4, r5, r6, pc}
   109bc:	mov	r2, r4
   109c0:	ldr	r1, [pc, #32]	; 109e8 <abort@plt+0x220>
   109c4:	ldr	r0, [pc, #32]	; 109ec <abort@plt+0x224>
   109c8:	bl	10798 <__isoc99_sscanf@plt>
   109cc:	cmp	r0, #1
   109d0:	ldreq	r3, [r5]
   109d4:	ldreq	r2, [r4]
   109d8:	addeq	r3, r3, r2
   109dc:	streq	r3, [r5]
   109e0:	movne	r0, #0
   109e4:	pop	{r4, r5, r6, pc}
   109e8:	muleq	r1, r0, r3
   109ec:	andeq	r2, r2, ip, lsl #1
   109f0:	push	{r4, r5, r6, r7, lr}
   109f4:	sub	sp, sp, #20
   109f8:	mov	r5, r0
   109fc:	mov	r6, r1
   10a00:	ldr	r1, [pc, #328]	; 10b50 <abort@plt+0x388>
   10a04:	mov	r0, r6
   10a08:	bl	10fa0 <error@@Base+0xd4>
   10a0c:	mov	r4, r0
   10a10:	bl	10980 <abort@plt+0x1b8>
   10a14:	cmp	r0, #0
   10a18:	beq	10b3c <abort@plt+0x374>
   10a1c:	mov	r2, #42	; 0x2a
   10a20:	ldr	r1, [pc, #300]	; 10b54 <abort@plt+0x38c>
   10a24:	ldr	r0, [pc, #300]	; 10b58 <abort@plt+0x390>
   10a28:	bl	107bc <strncmp@plt>
   10a2c:	cmp	r0, #0
   10a30:	bne	10b3c <abort@plt+0x374>
   10a34:	mov	r0, r4
   10a38:	bl	10980 <abort@plt+0x1b8>
   10a3c:	cmp	r0, #0
   10a40:	beq	10b3c <abort@plt+0x374>
   10a44:	ldr	r1, [pc, #272]	; 10b5c <abort@plt+0x394>
   10a48:	ldr	r0, [pc, #264]	; 10b58 <abort@plt+0x390>
   10a4c:	bl	106e4 <strcmp@plt>
   10a50:	cmp	r0, #0
   10a54:	bne	10b3c <abort@plt+0x374>
   10a58:	mov	r2, r5
   10a5c:	add	r1, sp, #8
   10a60:	mov	r0, r4
   10a64:	bl	109a4 <abort@plt+0x1dc>
   10a68:	cmp	r0, #0
   10a6c:	beq	10b3c <abort@plt+0x374>
   10a70:	add	r2, r5, #4
   10a74:	add	r1, sp, #8
   10a78:	mov	r0, r4
   10a7c:	bl	109a4 <abort@plt+0x1dc>
   10a80:	cmp	r0, #0
   10a84:	beq	10b3c <abort@plt+0x374>
   10a88:	add	r2, r5, #8
   10a8c:	add	r1, sp, #12
   10a90:	mov	r0, r4
   10a94:	bl	109a4 <abort@plt+0x1dc>
   10a98:	cmp	r0, #0
   10a9c:	beq	10b3c <abort@plt+0x374>
   10aa0:	ldr	r3, [sp, #12]
   10aa4:	cmp	r3, #0
   10aa8:	ble	10b2c <abort@plt+0x364>
   10aac:	mov	r0, r4
   10ab0:	bl	10980 <abort@plt+0x1b8>
   10ab4:	cmp	r0, #0
   10ab8:	beq	10b2c <abort@plt+0x364>
   10abc:	mov	r0, r4
   10ac0:	bl	10980 <abort@plt+0x1b8>
   10ac4:	cmp	r0, #0
   10ac8:	beq	10b2c <abort@plt+0x364>
   10acc:	mov	r0, r4
   10ad0:	bl	10980 <abort@plt+0x1b8>
   10ad4:	cmp	r0, #0
   10ad8:	beq	10b2c <abort@plt+0x364>
   10adc:	ldr	r7, [pc, #124]	; 10b60 <abort@plt+0x398>
   10ae0:	ldr	r6, [pc, #112]	; 10b58 <abort@plt+0x390>
   10ae4:	b	10b1c <abort@plt+0x354>
   10ae8:	add	r3, sp, #4
   10aec:	add	r2, sp, #8
   10af0:	mov	r1, r7
   10af4:	mov	r0, r6
   10af8:	bl	10798 <__isoc99_sscanf@plt>
   10afc:	cmp	r0, #2
   10b00:	bne	10b2c <abort@plt+0x364>
   10b04:	ldr	r3, [sp, #4]
   10b08:	add	r3, r5, r3, lsl #2
   10b0c:	ldr	r2, [r3, #12]
   10b10:	ldr	r1, [sp, #8]
   10b14:	add	r2, r2, r1
   10b18:	str	r2, [r3, #12]
   10b1c:	mov	r0, r4
   10b20:	bl	10980 <abort@plt+0x1b8>
   10b24:	cmp	r0, #0
   10b28:	bne	10ae8 <abort@plt+0x320>
   10b2c:	mov	r0, r4
   10b30:	bl	10d98 <abort@plt+0x5d0>
   10b34:	add	sp, sp, #20
   10b38:	pop	{r4, r5, r6, r7, pc}
   10b3c:	ldr	r1, [pc, #32]	; 10b64 <abort@plt+0x39c>
   10b40:	cmp	r6, #0
   10b44:	movne	r1, r6
   10b48:	ldr	r0, [pc, #24]	; 10b68 <abort@plt+0x3a0>
   10b4c:	bl	10f58 <error@@Base+0x8c>
   10b50:	andeq	r1, r1, r8, lsr #6
   10b54:	andeq	r1, r1, ip, lsr #6
   10b58:	andeq	r2, r2, ip, lsl #1
   10b5c:	andeq	r1, r1, ip, asr r3
   10b60:	andeq	r1, r1, ip, lsl #7
   10b64:	andeq	r1, r1, r0, lsr #6
   10b68:	muleq	r1, r4, r3
   10b6c:	push	{r4, r5, r6, r7, r8, lr}
   10b70:	mov	r5, r0
   10b74:	mov	r0, r1
   10b78:	ldr	r1, [pc, #188]	; 10c3c <abort@plt+0x474>
   10b7c:	bl	10fa0 <error@@Base+0xd4>
   10b80:	mov	r6, r0
   10b84:	ldr	r3, [pc, #180]	; 10c40 <abort@plt+0x478>
   10b88:	ldr	r2, [pc, #180]	; 10c44 <abort@plt+0x47c>
   10b8c:	ldr	r1, [pc, #180]	; 10c48 <abort@plt+0x480>
   10b90:	bl	1078c <fprintf@plt>
   10b94:	ldr	r4, [pc, #176]	; 10c4c <abort@plt+0x484>
   10b98:	ldr	r3, [pc, #176]	; 10c50 <abort@plt+0x488>
   10b9c:	ldr	r2, [r5]
   10ba0:	mov	r1, r4
   10ba4:	mov	r0, r6
   10ba8:	bl	1078c <fprintf@plt>
   10bac:	ldr	r3, [pc, #160]	; 10c54 <abort@plt+0x48c>
   10bb0:	ldr	r2, [r5, #4]
   10bb4:	mov	r1, r4
   10bb8:	mov	r0, r6
   10bbc:	bl	1078c <fprintf@plt>
   10bc0:	ldr	r3, [pc, #144]	; 10c58 <abort@plt+0x490>
   10bc4:	ldr	r2, [r5, #8]
   10bc8:	mov	r1, r4
   10bcc:	mov	r0, r6
   10bd0:	bl	1078c <fprintf@plt>
   10bd4:	ldr	r3, [r5, #8]
   10bd8:	cmp	r3, #0
   10bdc:	ble	10c30 <abort@plt+0x468>
   10be0:	mov	r3, r6
   10be4:	mov	r2, #25
   10be8:	mov	r1, #1
   10bec:	ldr	r0, [pc, #104]	; 10c5c <abort@plt+0x494>
   10bf0:	bl	10738 <fwrite@plt>
   10bf4:	add	r5, r5, #12
   10bf8:	mov	r4, #1
   10bfc:	ldr	r7, [pc, #92]	; 10c60 <abort@plt+0x498>
   10c00:	b	10c10 <abort@plt+0x448>
   10c04:	add	r4, r4, #1
   10c08:	cmp	r4, #101	; 0x65
   10c0c:	beq	10c30 <abort@plt+0x468>
   10c10:	ldr	r2, [r5, #4]!
   10c14:	cmp	r2, #0
   10c18:	ble	10c04 <abort@plt+0x43c>
   10c1c:	mov	r3, r4
   10c20:	mov	r1, r7
   10c24:	mov	r0, r6
   10c28:	bl	1078c <fprintf@plt>
   10c2c:	b	10c04 <abort@plt+0x43c>
   10c30:	mov	r0, r6
   10c34:	bl	10d98 <abort@plt+0x5d0>
   10c38:	pop	{r4, r5, r6, r7, r8, pc}
   10c3c:	andeq	r1, r1, r8, lsr #7
   10c40:	andeq	r1, r1, ip, asr r3
   10c44:	andeq	r1, r1, ip, lsr #6
   10c48:	andeq	r1, r1, ip, lsr #7
   10c4c:	andeq	r1, r1, r0, asr #7
   10c50:			; <UNDEFINED> instruction: 0x000113b4
   10c54:	andeq	r1, r1, ip, asr #7
   10c58:	ldrdeq	r1, [r1], -r8
   10c5c:	andeq	r1, r1, r0, ror #7
   10c60:	strdeq	r1, [r1], -ip
   10c64:	push	{r4, r5, lr}
   10c68:	sub	sp, sp, #116	; 0x74
   10c6c:	mov	r5, r0
   10c70:	ldr	r3, [pc, #44]	; 10ca4 <abort@plt+0x4dc>
   10c74:	ldr	r4, [r3]
   10c78:	bl	10768 <getpid@plt>
   10c7c:	str	r5, [sp]
   10c80:	mov	r3, r0
   10c84:	mov	r2, r4
   10c88:	ldr	r1, [pc, #24]	; 10ca8 <abort@plt+0x4e0>
   10c8c:	add	r0, sp, #12
   10c90:	bl	107b0 <sprintf@plt>
   10c94:	add	r0, sp, #12
   10c98:	bl	10714 <strdup@plt>
   10c9c:	add	sp, sp, #116	; 0x74
   10ca0:	pop	{r4, r5, pc}
   10ca4:	muleq	r2, r8, r2
   10ca8:	andeq	r1, r1, r8, lsl #8
   10cac:	push	{r7, lr}
   10cb0:	mov	r7, r0
   10cb4:	ldr	r3, [pc, #88]	; 10d14 <abort@plt+0x54c>
   10cb8:	ldr	r3, [r3]
   10cbc:	cmp	r3, #0
   10cc0:	beq	10cc8 <abort@plt+0x500>
   10cc4:	blx	r3
   10cc8:	ldr	r3, [pc, #72]	; 10d18 <abort@plt+0x550>
   10ccc:	ldrsh	r3, [r3]
   10cd0:	cmp	r3, #0
   10cd4:	ble	10d0c <abort@plt+0x544>
   10cd8:	mov	r4, #1
   10cdc:	ldr	r6, [pc, #52]	; 10d18 <abort@plt+0x550>
   10ce0:	mov	r0, r4
   10ce4:	bl	10c64 <abort@plt+0x49c>
   10ce8:	mov	r5, r0
   10cec:	bl	10720 <unlink@plt>
   10cf0:	mov	r0, r5
   10cf4:	bl	106fc <free@plt>
   10cf8:	add	r4, r4, #1
   10cfc:	sxth	r4, r4
   10d00:	ldrsh	r3, [r6]
   10d04:	cmp	r3, r4
   10d08:	bge	10ce0 <abort@plt+0x518>
   10d0c:	mov	r0, r7
   10d10:	bl	10774 <exit@plt>
   10d14:	muleq	r2, ip, r2
   10d18:	strdeq	r2, [r2], -r0
   10d1c:	push	{r4, lr}
   10d20:	ldrb	r3, [r0]
   10d24:	cmp	r3, #0
   10d28:	beq	10d74 <abort@plt+0x5ac>
   10d2c:	ldrb	r2, [r1]
   10d30:	cmp	r2, r3
   10d34:	bne	10d90 <abort@plt+0x5c8>
   10d38:	mov	ip, r1
   10d3c:	mov	r2, #0
   10d40:	add	r2, r2, #1
   10d44:	mov	r4, r2
   10d48:	ldrb	r3, [r0, #1]!
   10d4c:	cmp	r3, #0
   10d50:	beq	10d78 <abort@plt+0x5b0>
   10d54:	ldrb	lr, [ip, #1]!
   10d58:	cmp	lr, r3
   10d5c:	beq	10d40 <abort@plt+0x578>
   10d60:	ldrb	r2, [r1, r4]
   10d64:	cmp	r2, r3
   10d68:	mvnhi	r0, #0
   10d6c:	movls	r0, #1
   10d70:	pop	{r4, pc}
   10d74:	mov	r4, #0
   10d78:	ldrb	r3, [r1, r4]
   10d7c:	cmp	r3, #0
   10d80:	movne	r3, #0
   10d84:	bne	10d60 <abort@plt+0x598>
   10d88:	mov	r0, #0
   10d8c:	pop	{r4, pc}
   10d90:	mov	r4, #0
   10d94:	b	10d60 <abort@plt+0x598>
   10d98:	ldr	r3, [pc, #36]	; 10dc4 <abort@plt+0x5fc>
   10d9c:	ldr	r3, [r3]
   10da0:	cmp	r3, r0
   10da4:	bxeq	lr
   10da8:	ldr	r3, [pc, #24]	; 10dc8 <abort@plt+0x600>
   10dac:	ldr	r3, [r3]
   10db0:	cmp	r0, r3
   10db4:	bxeq	lr
   10db8:	push	{r4, lr}
   10dbc:	bl	107a4 <fclose@plt>
   10dc0:	pop	{r4, pc}
   10dc4:	andeq	r2, r2, r0, lsl #1
   10dc8:	andeq	r2, r2, r4, lsl #1
   10dcc:	push	{lr}		; (str lr, [sp, #-4]!)
   10dd0:	sub	sp, sp, #92	; 0x5c
   10dd4:	mov	r2, sp
   10dd8:	mov	r1, r0
   10ddc:	mov	r0, #3
   10de0:	bl	1072c <__xstat@plt>
   10de4:	clz	r0, r0
   10de8:	lsr	r0, r0, #5
   10dec:	add	sp, sp, #92	; 0x5c
   10df0:	pop	{pc}		; (ldr pc, [sp], #4)
   10df4:	push	{r4, lr}
   10df8:	ldr	r3, [pc, #32]	; 10e20 <abort@plt+0x658>
   10dfc:	ldrh	r0, [r3]
   10e00:	add	r0, r0, #1
   10e04:	sxth	r0, r0
   10e08:	strh	r0, [r3]
   10e0c:	bl	10c64 <abort@plt+0x49c>
   10e10:	mov	r4, r0
   10e14:	bl	10720 <unlink@plt>
   10e18:	mov	r0, r4
   10e1c:	pop	{r4, pc}
   10e20:	strdeq	r2, [r2], -r0
   10e24:	push	{r4, lr}
   10e28:	mov	r4, r0
   10e2c:	bl	10780 <strlen@plt>
   10e30:	sub	r0, r0, #1
   10e34:	sxth	r0, r0
   10e38:	cmp	r0, #0
   10e3c:	blt	10e68 <abort@plt+0x6a0>
   10e40:	ldrb	r3, [r4, r0]
   10e44:	cmp	r3, #47	; 0x2f
   10e48:	beq	10e68 <abort@plt+0x6a0>
   10e4c:	sub	r0, r0, #1
   10e50:	sxth	r0, r0
   10e54:	cmp	r0, #0
   10e58:	blt	10e68 <abort@plt+0x6a0>
   10e5c:	ldrb	r3, [r4, r0]
   10e60:	cmp	r3, #47	; 0x2f
   10e64:	bne	10e4c <abort@plt+0x684>
   10e68:	add	r0, r0, #1
   10e6c:	add	r0, r4, r0
   10e70:	pop	{r4, pc}
   10e74:	push	{r4, lr}
   10e78:	mov	r0, #0
   10e7c:	bl	10cac <abort@plt+0x4e4>
   10e80:	push	{r4, lr}
   10e84:	ldr	r2, [pc, #48]	; 10ebc <abort@plt+0x6f4>
   10e88:	ldr	r2, [r2]
   10e8c:	cmp	r2, #0
   10e90:	beq	10e9c <abort@plt+0x6d4>
   10e94:	blx	r2
   10e98:	bl	10e74 <abort@plt+0x6ac>
   10e9c:	mov	r3, r0
   10ea0:	ldr	r2, [pc, #24]	; 10ec0 <abort@plt+0x6f8>
   10ea4:	ldr	r2, [r2]
   10ea8:	ldr	r1, [pc, #20]	; 10ec4 <abort@plt+0x6fc>
   10eac:	ldr	r0, [pc, #20]	; 10ec8 <abort@plt+0x700>
   10eb0:	ldr	r0, [r0]
   10eb4:	bl	1078c <fprintf@plt>
   10eb8:	b	10e98 <abort@plt+0x6d0>
   10ebc:	muleq	r2, r4, r2
   10ec0:	muleq	r2, r8, r2
   10ec4:	andeq	r1, r1, r8, lsl r4
   10ec8:	andeq	r2, r2, r8, ror r0

00010ecc <error@@Base>:
   10ecc:	push	{r4, lr}
   10ed0:	mov	r3, r0
   10ed4:	ldr	r2, [pc, #28]	; 10ef8 <error@@Base+0x2c>
   10ed8:	ldr	r2, [r2]
   10edc:	ldr	r1, [pc, #24]	; 10efc <error@@Base+0x30>
   10ee0:	ldr	r0, [pc, #24]	; 10f00 <error@@Base+0x34>
   10ee4:	ldr	r0, [r0]
   10ee8:	bl	1078c <fprintf@plt>
   10eec:	ldr	r3, [pc, #16]	; 10f04 <error@@Base+0x38>
   10ef0:	ldr	r0, [r3]
   10ef4:	bl	10cac <abort@plt+0x4e4>
   10ef8:	muleq	r2, r8, r2
   10efc:	andeq	r1, r1, r8, lsr #8
   10f00:	andeq	r2, r2, r8, ror r0
   10f04:	andeq	r2, r2, ip, rrx
   10f08:	push	{r4, lr}
   10f0c:	bl	106d8 <calloc@plt>
   10f10:	cmp	r0, #0
   10f14:	popne	{r4, pc}
   10f18:	ldr	r0, [pc]	; 10f20 <error@@Base+0x54>
   10f1c:	bl	10ecc <error@@Base>
   10f20:	andeq	r1, r1, r0, lsr r4
   10f24:	ldr	r3, [pc, #36]	; 10f50 <error@@Base+0x84>
   10f28:	ldrb	r3, [r3, #2]
   10f2c:	cmp	r3, #0
   10f30:	beq	10f38 <error@@Base+0x6c>
   10f34:	bx	lr
   10f38:	push	{r4, lr}
   10f3c:	mov	r2, #1
   10f40:	ldr	r3, [pc, #8]	; 10f50 <error@@Base+0x84>
   10f44:	strb	r2, [r3, #2]
   10f48:	ldr	r0, [pc, #4]	; 10f54 <error@@Base+0x88>
   10f4c:	bl	10ecc <error@@Base>
   10f50:	strdeq	r2, [r2], -r0
   10f54:	andeq	r1, r1, ip, asr #8
   10f58:	push	{lr}		; (str lr, [sp, #-4]!)
   10f5c:	sub	sp, sp, #12
   10f60:	ldr	r3, [pc, #40]	; 10f90 <error@@Base+0xc4>
   10f64:	ldr	r2, [r3]
   10f68:	ldr	r3, [pc, #36]	; 10f94 <error@@Base+0xc8>
   10f6c:	ldr	ip, [r3]
   10f70:	str	r1, [sp]
   10f74:	mov	r3, r0
   10f78:	ldr	r1, [pc, #24]	; 10f98 <error@@Base+0xcc>
   10f7c:	mov	r0, ip
   10f80:	bl	1078c <fprintf@plt>
   10f84:	ldr	r3, [pc, #16]	; 10f9c <error@@Base+0xd0>
   10f88:	ldr	r0, [r3]
   10f8c:	bl	10cac <abort@plt+0x4e4>
   10f90:	muleq	r2, r8, r2
   10f94:	andeq	r2, r2, r8, ror r0
   10f98:	andeq	r1, r1, ip, asr r4
   10f9c:	andeq	r2, r2, ip, rrx
   10fa0:	push	{r4, r5, r6, lr}
   10fa4:	subs	r5, r0, #0
   10fa8:	beq	10fd8 <error@@Base+0x10c>
   10fac:	mov	r4, r1
   10fb0:	mov	r0, r5
   10fb4:	bl	106f0 <fopen@plt>
   10fb8:	cmp	r0, #0
   10fbc:	popne	{r4, r5, r6, pc}
   10fc0:	ldrb	r3, [r4]
   10fc4:	cmp	r3, #119	; 0x77
   10fc8:	beq	10ff0 <error@@Base+0x124>
   10fcc:	mov	r1, r5
   10fd0:	ldr	r0, [pc, #36]	; 10ffc <error@@Base+0x130>
   10fd4:	bl	10f58 <error@@Base+0x8c>
   10fd8:	ldrb	r3, [r1]
   10fdc:	cmp	r3, #114	; 0x72
   10fe0:	ldreq	r3, [pc, #24]	; 11000 <error@@Base+0x134>
   10fe4:	ldrne	r3, [pc, #24]	; 11004 <error@@Base+0x138>
   10fe8:	ldr	r0, [r3]
   10fec:	pop	{r4, r5, r6, pc}
   10ff0:	mov	r1, r5
   10ff4:	ldr	r0, [pc, #12]	; 11008 <error@@Base+0x13c>
   10ff8:	bl	10f58 <error@@Base+0x8c>
   10ffc:	andeq	r1, r1, r4, lsl #9
   11000:	andeq	r2, r2, r0, lsl #1
   11004:	andeq	r2, r2, r4, lsl #1
   11008:	andeq	r1, r1, ip, ror #8
   1100c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11010:	sub	sp, sp, #20
   11014:	mov	r5, r0
   11018:	str	r0, [sp, #8]
   1101c:	mov	sl, r1
   11020:	str	r2, [sp, #12]
   11024:	mov	r6, r3
   11028:	ldr	r0, [r1]
   1102c:	bl	10e24 <abort@plt+0x65c>
   11030:	ldr	r3, [pc, #468]	; 1120c <error@@Base+0x340>
   11034:	str	r0, [r3]
   11038:	ldr	r4, [pc, #464]	; 11210 <error@@Base+0x344>
   1103c:	mov	r1, r4
   11040:	mov	r0, #2
   11044:	bl	10750 <__sysv_signal@plt>
   11048:	mov	r1, r4
   1104c:	mov	r0, #15
   11050:	bl	10750 <__sysv_signal@plt>
   11054:	ldr	r8, [r5]
   11058:	cmp	r8, #1
   1105c:	beq	1107c <error@@Base+0x1b0>
   11060:	movle	r7, #0
   11064:	ble	11090 <error@@Base+0x1c4>
   11068:	mov	r7, #0
   1106c:	mov	r3, #1
   11070:	str	r3, [sp, #4]
   11074:	mov	r4, r3
   11078:	b	11128 <error@@Base+0x25c>
   1107c:	ldr	r3, [pc, #400]	; 11214 <error@@Base+0x348>
   11080:	ldrb	r3, [r3, #4]
   11084:	cmp	r3, #0
   11088:	moveq	r7, #0
   1108c:	bne	110a0 <error@@Base+0x1d4>
   11090:	ldr	r3, [sp, #8]
   11094:	str	r7, [r3]
   11098:	add	sp, sp, #20
   1109c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110a0:	ldr	r0, [sp, #12]
   110a4:	bl	10e80 <abort@plt+0x6b8>
   110a8:	ldr	r0, [sp, #12]
   110ac:	bl	10e80 <abort@plt+0x6b8>
   110b0:	mov	r1, r6
   110b4:	b	111bc <error@@Base+0x2f0>
   110b8:	ldr	r3, [r1, #8]
   110bc:	cmp	r3, #0
   110c0:	beq	110e8 <error@@Base+0x21c>
   110c4:	ldrb	r2, [r5, #2]
   110c8:	cmp	r2, #0
   110cc:	bne	110e8 <error@@Base+0x21c>
   110d0:	ldrb	r2, [r3]
   110d4:	cmp	r2, #0
   110d8:	bne	110f4 <error@@Base+0x228>
   110dc:	mov	r2, #1
   110e0:	strb	r2, [r3]
   110e4:	b	1110c <error@@Base+0x240>
   110e8:	mov	r1, r5
   110ec:	ldr	r0, [pc, #292]	; 11218 <error@@Base+0x34c>
   110f0:	bl	10f58 <error@@Base+0x8c>
   110f4:	mov	r1, r5
   110f8:	ldr	r0, [pc, #284]	; 1121c <error@@Base+0x350>
   110fc:	bl	10f58 <error@@Base+0x8c>
   11100:	add	r3, r7, #1
   11104:	str	r5, [sl, r7, lsl #2]
   11108:	sxth	r7, r3
   1110c:	add	r4, r4, #1
   11110:	sxth	r4, r4
   11114:	str	r4, [sp, #4]
   11118:	ldr	r3, [sp, #8]
   1111c:	ldr	r8, [r3]
   11120:	cmp	r4, r8
   11124:	bge	11090 <error@@Base+0x1c4>
   11128:	lsl	fp, r4, #2
   1112c:	ldr	r5, [sl, r4, lsl #2]
   11130:	ldrb	r3, [r5]
   11134:	cmp	r3, #45	; 0x2d
   11138:	bne	11100 <error@@Base+0x234>
   1113c:	ldrb	r9, [r5, #1]
   11140:	cmp	r9, #0
   11144:	beq	11100 <error@@Base+0x234>
   11148:	mov	r0, r5
   1114c:	bl	10780 <strlen@plt>
   11150:	mov	r2, r0
   11154:	mov	r1, r5
   11158:	ldr	r0, [pc, #192]	; 11220 <error@@Base+0x354>
   1115c:	bl	107bc <strncmp@plt>
   11160:	cmp	r0, #0
   11164:	beq	110a8 <error@@Base+0x1dc>
   11168:	ldr	r3, [sp, #4]
   1116c:	add	r3, r3, #1
   11170:	cmp	r3, r8
   11174:	addlt	r3, sl, fp
   11178:	ldrlt	r0, [r3, #4]
   1117c:	movge	r0, #0
   11180:	cmp	r6, #0
   11184:	beq	110e8 <error@@Base+0x21c>
   11188:	ldrb	r2, [r6]
   1118c:	cmp	r9, r2
   11190:	cmpne	r2, #0
   11194:	beq	110b0 <error@@Base+0x1e4>
   11198:	mov	r3, #0
   1119c:	add	r3, r3, #1
   111a0:	sxth	r3, r3
   111a4:	add	r2, r3, r3, lsl #1
   111a8:	add	r1, r6, r2, lsl #2
   111ac:	ldrb	r2, [r6, r2, lsl #2]
   111b0:	cmp	r9, r2
   111b4:	cmpne	r2, #0
   111b8:	bne	1119c <error@@Base+0x2d0>
   111bc:	cmp	r2, #0
   111c0:	beq	110e8 <error@@Base+0x21c>
   111c4:	ldr	r3, [r1, #4]
   111c8:	cmp	r3, #0
   111cc:	beq	110b8 <error@@Base+0x1ec>
   111d0:	ldrb	r2, [r5, #2]
   111d4:	cmp	r2, #0
   111d8:	cmpeq	r0, #0
   111dc:	beq	110b8 <error@@Base+0x1ec>
   111e0:	ldr	r1, [r3]
   111e4:	cmp	r1, #0
   111e8:	bne	110f4 <error@@Base+0x228>
   111ec:	cmp	r2, #0
   111f0:	addne	r0, r5, #2
   111f4:	str	r0, [r3]
   111f8:	ldrb	r3, [r5, #2]
   111fc:	cmp	r3, #0
   11200:	addeq	r4, r4, #1
   11204:	sxtheq	r4, r4
   11208:	b	1110c <error@@Base+0x240>
   1120c:	muleq	r2, r8, r2
   11210:	andeq	r0, r1, r4, lsr #30
   11214:	andeq	r2, r2, ip, rrx
   11218:	andeq	r1, r1, r0, lsr #9
   1121c:			; <UNDEFINED> instruction: 0x000114b0
   11220:	muleq	r1, r8, r4
   11224:	push	{lr}		; (str lr, [sp, #-4]!)
   11228:	sub	sp, sp, #12
   1122c:	ldr	r3, [pc, #36]	; 11258 <error@@Base+0x38c>
   11230:	ldr	r2, [r3]
   11234:	ldr	r3, [pc, #32]	; 1125c <error@@Base+0x390>
   11238:	ldr	ip, [r3]
   1123c:	str	r1, [sp]
   11240:	mov	r3, r0
   11244:	ldr	r1, [pc, #20]	; 11260 <error@@Base+0x394>
   11248:	mov	r0, ip
   1124c:	bl	1078c <fprintf@plt>
   11250:	add	sp, sp, #12
   11254:	pop	{pc}		; (ldr pc, [sp], #4)
   11258:	muleq	r2, r8, r2
   1125c:	andeq	r2, r2, r8, ror r0
   11260:	andeq	r1, r1, ip, asr r4
   11264:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11268:	mov	r7, r0
   1126c:	ldr	r6, [pc, #72]	; 112bc <error@@Base+0x3f0>
   11270:	ldr	r5, [pc, #72]	; 112c0 <error@@Base+0x3f4>
   11274:	add	r6, pc, r6
   11278:	add	r5, pc, r5
   1127c:	sub	r6, r6, r5
   11280:	mov	r8, r1
   11284:	mov	r9, r2
   11288:	bl	106b8 <calloc@plt-0x20>
   1128c:	asrs	r6, r6, #2
   11290:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11294:	mov	r4, #0
   11298:	add	r4, r4, #1
   1129c:	ldr	r3, [r5], #4
   112a0:	mov	r2, r9
   112a4:	mov	r1, r8
   112a8:	mov	r0, r7
   112ac:	blx	r3
   112b0:	cmp	r6, r4
   112b4:	bne	11298 <error@@Base+0x3cc>
   112b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112bc:	andeq	r0, r1, r4, lsl #25
   112c0:	andeq	r0, r1, ip, ror ip
   112c4:	bx	lr

Disassembly of section .fini:

000112c8 <.fini>:
   112c8:	push	{r3, lr}
   112cc:	pop	{r3, pc}
