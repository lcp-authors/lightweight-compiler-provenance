
../repos/sgerbino-table-2fdd8d0/bin/table_version_test:     file format elf32-littlearm


Disassembly of section .init:

00011a28 <.init>:
   11a28:	push	{r3, lr}
   11a2c:	bl	11b7c <_start@@Base+0x3c>
   11a30:	pop	{r3, pc}

Disassembly of section .plt:

00011a34 <strcmp@plt-0x14>:
   11a34:	push	{lr}		; (str lr, [sp, #-4]!)
   11a38:	ldr	lr, [pc, #4]	; 11a44 <strcmp@plt-0x4>
   11a3c:	add	lr, pc, lr
   11a40:	ldr	pc, [lr, #8]!
   11a44:			; <UNDEFINED> instruction: 0x000145bc

00011a48 <strcmp@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #20, 20	; 0x14000
   11a50:	ldr	pc, [ip, #1468]!	; 0x5bc

00011a54 <printf@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #20, 20	; 0x14000
   11a5c:	ldr	pc, [ip, #1460]!	; 0x5b4

00011a60 <free@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #20, 20	; 0x14000
   11a68:	ldr	pc, [ip, #1452]!	; 0x5ac

00011a6c <realloc@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #20, 20	; 0x14000
   11a74:	ldr	pc, [ip, #1444]!	; 0x5a4

00011a78 <strcpy@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #20, 20	; 0x14000
   11a80:	ldr	pc, [ip, #1436]!	; 0x59c

00011a84 <malloc@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #20, 20	; 0x14000
   11a8c:	ldr	pc, [ip, #1428]!	; 0x594

00011a90 <__libc_start_main@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #20, 20	; 0x14000
   11a98:	ldr	pc, [ip, #1420]!	; 0x58c

00011a9c <__gmon_start__@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #20, 20	; 0x14000
   11aa4:	ldr	pc, [ip, #1412]!	; 0x584

00011aa8 <strlen@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #20, 20	; 0x14000
   11ab0:	ldr	pc, [ip, #1404]!	; 0x57c

00011ab4 <snprintf@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #20, 20	; 0x14000
   11abc:	ldr	pc, [ip, #1396]!	; 0x574

00011ac0 <__isoc99_sscanf@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #20, 20	; 0x14000
   11ac8:	ldr	pc, [ip, #1388]!	; 0x56c

00011acc <abort@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #20, 20	; 0x14000
   11ad4:	ldr	pc, [ip, #1380]!	; 0x564

Disassembly of section .text:

00011ad8 <main@@Base>:
   11ad8:	str	r4, [sp, #-8]!
   11adc:	str	lr, [sp, #4]
   11ae0:	bl	12334 <table_get_major_version@@Base>
   11ae4:	mov	r1, r0
   11ae8:	movw	r0, #21708	; 0x54cc
   11aec:	movt	r0, #1
   11af0:	bl	11a54 <printf@plt>
   11af4:	bl	1233c <table_get_minor_version@@Base>
   11af8:	mov	r1, r0
   11afc:	movw	r0, #21736	; 0x54e8
   11b00:	movt	r0, #1
   11b04:	bl	11a54 <printf@plt>
   11b08:	bl	12344 <table_get_patch_version@@Base>
   11b0c:	mov	r1, r0
   11b10:	movw	r0, #21764	; 0x5504
   11b14:	movt	r0, #1
   11b18:	bl	11a54 <printf@plt>
   11b1c:	bl	1234c <table_get_version@@Base>
   11b20:	mov	r1, r0
   11b24:	movw	r0, #21792	; 0x5520
   11b28:	movt	r0, #1
   11b2c:	bl	11a54 <printf@plt>
   11b30:	ldr	r4, [sp]
   11b34:	add	sp, sp, #4
   11b38:	mov	r0, #0
   11b3c:	pop	{pc}		; (ldr pc, [sp], #4)

00011b40 <_start@@Base>:
   11b40:	mov	fp, #0
   11b44:	mov	lr, #0
   11b48:	pop	{r1}		; (ldr r1, [sp], #4)
   11b4c:	mov	r2, sp
   11b50:	push	{r2}		; (str r2, [sp, #-4]!)
   11b54:	push	{r0}		; (str r0, [sp, #-4]!)
   11b58:	ldr	ip, [pc, #16]	; 11b70 <_start@@Base+0x30>
   11b5c:	push	{ip}		; (str ip, [sp, #-4]!)
   11b60:	ldr	r0, [pc, #12]	; 11b74 <_start@@Base+0x34>
   11b64:	ldr	r3, [pc, #12]	; 11b78 <_start@@Base+0x38>
   11b68:	bl	11a90 <__libc_start_main@plt>
   11b6c:	bl	11acc <abort@plt>
   11b70:			; <UNDEFINED> instruction: 0x000154bc
   11b74:	ldrdeq	r1, [r1], -r8
   11b78:	andeq	r5, r1, ip, asr r4
   11b7c:	ldr	r3, [pc, #20]	; 11b98 <_start@@Base+0x58>
   11b80:	ldr	r2, [pc, #20]	; 11b9c <_start@@Base+0x5c>
   11b84:	add	r3, pc, r3
   11b88:	ldr	r2, [r3, r2]
   11b8c:	cmp	r2, #0
   11b90:	bxeq	lr
   11b94:	b	11a9c <__gmon_start__@plt>
   11b98:	andeq	r4, r1, r4, ror r4
   11b9c:	andeq	r0, r0, ip, lsr r0
   11ba0:	ldr	r0, [pc, #24]	; 11bc0 <_start@@Base+0x80>
   11ba4:	ldr	r3, [pc, #24]	; 11bc4 <_start@@Base+0x84>
   11ba8:	cmp	r3, r0
   11bac:	bxeq	lr
   11bb0:	ldr	r3, [pc, #16]	; 11bc8 <_start@@Base+0x88>
   11bb4:	cmp	r3, #0
   11bb8:	bxeq	lr
   11bbc:	bx	r3
   11bc0:	andeq	r6, r2, r8, asr #32
   11bc4:	andeq	r6, r2, r8, asr #32
   11bc8:	andeq	r0, r0, r0
   11bcc:	ldr	r0, [pc, #36]	; 11bf8 <_start@@Base+0xb8>
   11bd0:	ldr	r1, [pc, #36]	; 11bfc <_start@@Base+0xbc>
   11bd4:	sub	r1, r1, r0
   11bd8:	asr	r1, r1, #2
   11bdc:	add	r1, r1, r1, lsr #31
   11be0:	asrs	r1, r1, #1
   11be4:	bxeq	lr
   11be8:	ldr	r3, [pc, #16]	; 11c00 <_start@@Base+0xc0>
   11bec:	cmp	r3, #0
   11bf0:	bxeq	lr
   11bf4:	bx	r3
   11bf8:	andeq	r6, r2, r8, asr #32
   11bfc:	andeq	r6, r2, r8, asr #32
   11c00:	andeq	r0, r0, r0
   11c04:	push	{r4, lr}
   11c08:	ldr	r4, [pc, #24]	; 11c28 <_start@@Base+0xe8>
   11c0c:	ldrb	r3, [r4]
   11c10:	cmp	r3, #0
   11c14:	popne	{r4, pc}
   11c18:	bl	11ba0 <_start@@Base+0x60>
   11c1c:	mov	r3, #1
   11c20:	strb	r3, [r4]
   11c24:	pop	{r4, pc}
   11c28:	andeq	r6, r2, r8, asr #32
   11c2c:	b	11bcc <_start@@Base+0x8c>
   11c30:	mvn	r2, #0
   11c34:	mov	r3, #64	; 0x40
   11c38:	strd	r4, [sp, #-16]!
   11c3c:	mov	r1, r2
   11c40:	mov	r4, r0
   11c44:	str	r6, [sp, #8]
   11c48:	str	lr, [sp, #12]
   11c4c:	bl	125d8 <table_notify@@Base>
   11c50:	mov	r0, r4
   11c54:	bl	1354c <table_get_row_length@@Base>
   11c58:	subs	r6, r0, #0
   11c5c:	ble	11c7c <_start@@Base+0x13c>
   11c60:	mov	r5, #0
   11c64:	mov	r1, r5
   11c68:	mov	r0, r4
   11c6c:	add	r5, r5, #1
   11c70:	bl	134cc <table_row_destroy@@Base>
   11c74:	cmp	r6, r5
   11c78:	bne	11c64 <_start@@Base+0x124>
   11c7c:	ldr	r0, [r4, #16]
   11c80:	cmp	r0, #0
   11c84:	beq	11c8c <_start@@Base+0x14c>
   11c88:	bl	11a60 <free@plt>
   11c8c:	mov	r0, r4
   11c90:	bl	12710 <table_get_column_length@@Base>
   11c94:	subs	r6, r0, #0
   11c98:	ble	11cb8 <_start@@Base+0x178>
   11c9c:	mov	r5, #0
   11ca0:	mov	r1, r5
   11ca4:	mov	r0, r4
   11ca8:	add	r5, r5, #1
   11cac:	bl	126f4 <table_column_destroy@@Base>
   11cb0:	cmp	r6, r5
   11cb4:	bne	11ca0 <_start@@Base+0x160>
   11cb8:	ldr	r0, [r4]
   11cbc:	cmp	r0, #0
   11cc0:	beq	11cc8 <_start@@Base+0x188>
   11cc4:	bl	11a60 <free@plt>
   11cc8:	ldr	r0, [r4, #36]	; 0x24
   11ccc:	cmp	r0, #0
   11cd0:	beq	11cd8 <_start@@Base+0x198>
   11cd4:	bl	11a60 <free@plt>
   11cd8:	ldr	r0, [r4, #40]	; 0x28
   11cdc:	cmp	r0, #0
   11ce0:	beq	11ce8 <_start@@Base+0x1a8>
   11ce4:	bl	11a60 <free@plt>
   11ce8:	ldr	r0, [r4, #44]	; 0x2c
   11cec:	cmp	r0, #0
   11cf0:	beq	11d08 <_start@@Base+0x1c8>
   11cf4:	ldrd	r4, [sp]
   11cf8:	ldr	r6, [sp, #8]
   11cfc:	ldr	lr, [sp, #12]
   11d00:	add	sp, sp, #16
   11d04:	b	11a60 <free@plt>
   11d08:	ldrd	r4, [sp]
   11d0c:	ldr	r6, [sp, #8]
   11d10:	add	sp, sp, #12
   11d14:	pop	{pc}		; (ldr pc, [sp], #4)

00011d18 <table_new@@Base>:
   11d18:	mov	r0, #56	; 0x38
   11d1c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11d20:	mov	r4, #10
   11d24:	mov	r5, #0
   11d28:	strd	r6, [sp, #8]
   11d2c:	mov	r6, #20
   11d30:	mov	r7, #0
   11d34:	str	r8, [sp, #16]
   11d38:	str	lr, [sp, #20]
   11d3c:	bl	11a84 <malloc@plt>
   11d40:	mov	r2, #0
   11d44:	ldr	r8, [sp, #16]
   11d48:	strd	r4, [r0, #8]
   11d4c:	strd	r6, [r0, #24]
   11d50:	strd	r4, [r0, #48]	; 0x30
   11d54:	ldrd	r4, [sp]
   11d58:	str	r2, [r0]
   11d5c:	ldrd	r6, [sp, #8]
   11d60:	add	sp, sp, #20
   11d64:	str	r2, [r0, #4]
   11d68:	str	r2, [r0, #16]
   11d6c:	str	r2, [r0, #20]
   11d70:	str	r2, [r0, #32]
   11d74:	str	r2, [r0, #36]	; 0x24
   11d78:	str	r2, [r0, #40]	; 0x28
   11d7c:	str	r2, [r0, #44]	; 0x2c
   11d80:	pop	{pc}		; (ldr pc, [sp], #4)

00011d84 <table_delete@@Base>:
   11d84:	str	r4, [sp, #-8]!
   11d88:	subs	r4, r0, #0
   11d8c:	str	lr, [sp, #4]
   11d90:	beq	11d98 <table_delete@@Base+0x14>
   11d94:	bl	11c30 <_start@@Base+0xf0>
   11d98:	mov	r0, r4
   11d9c:	ldr	r4, [sp]
   11da0:	ldr	lr, [sp, #4]
   11da4:	add	sp, sp, #8
   11da8:	b	11a60 <free@plt>

00011dac <table_init@@Base>:
   11dac:	mov	r3, #0
   11db0:	mov	r2, #10
   11db4:	mov	r1, #20
   11db8:	str	r3, [r0]
   11dbc:	str	r3, [r0, #4]
   11dc0:	strd	r2, [r0, #8]
   11dc4:	str	r3, [r0, #16]
   11dc8:	str	r3, [r0, #20]
   11dcc:	str	r1, [r0, #24]
   11dd0:	str	r3, [r0, #28]
   11dd4:	str	r3, [r0, #32]
   11dd8:	str	r3, [r0, #36]	; 0x24
   11ddc:	str	r3, [r0, #40]	; 0x28
   11de0:	str	r3, [r0, #44]	; 0x2c
   11de4:	strd	r2, [r0, #48]	; 0x30
   11de8:	bx	lr

00011dec <table_destroy@@Base>:
   11dec:	cmp	r0, #0
   11df0:	beq	11df8 <table_destroy@@Base+0xc>
   11df4:	b	11c30 <_start@@Base+0xf0>
   11df8:	bx	lr

00011dfc <table_dupe@@Base>:
   11dfc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11e00:	mov	r4, #0
   11e04:	strd	r6, [sp, #8]
   11e08:	mov	r6, r0
   11e0c:	strd	r8, [sp, #16]
   11e10:	str	lr, [sp, #24]
   11e14:	sub	sp, sp, #20
   11e18:	bl	1354c <table_get_row_length@@Base>
   11e1c:	mov	r9, r0
   11e20:	mov	r0, r6
   11e24:	bl	12710 <table_get_column_length@@Base>
   11e28:	mov	r8, r0
   11e2c:	mov	r0, #56	; 0x38
   11e30:	bl	11a84 <malloc@plt>
   11e34:	mov	r7, r0
   11e38:	mov	r2, #10
   11e3c:	mov	r3, #0
   11e40:	mov	r0, #20
   11e44:	mov	r1, #0
   11e48:	cmp	r8, r4
   11e4c:	str	r4, [r7]
   11e50:	str	r4, [r7, #4]
   11e54:	strd	r2, [r7, #8]
   11e58:	str	r4, [r7, #16]
   11e5c:	str	r4, [r7, #20]
   11e60:	strd	r0, [r7, #24]
   11e64:	str	r4, [r7, #32]
   11e68:	str	r4, [r7, #36]	; 0x24
   11e6c:	str	r4, [r7, #40]	; 0x28
   11e70:	str	r4, [r7, #44]	; 0x2c
   11e74:	strd	r2, [r7, #48]	; 0x30
   11e78:	ble	11eb4 <table_dupe@@Base+0xb8>
   11e7c:	mov	r1, r4
   11e80:	mov	r0, r6
   11e84:	bl	12aac <table_get_column_name@@Base>
   11e88:	mov	r5, r0
   11e8c:	mov	r1, r4
   11e90:	mov	r0, r6
   11e94:	add	r4, r4, #1
   11e98:	bl	12794 <table_get_column_data_type@@Base>
   11e9c:	mov	r2, r0
   11ea0:	mov	r1, r5
   11ea4:	mov	r0, r7
   11ea8:	bl	127a8 <table_add_column@@Base>
   11eac:	cmp	r8, r4
   11eb0:	bne	11e7c <table_dupe@@Base+0x80>
   11eb4:	cmp	r9, #0
   11eb8:	ble	11f8c <table_dupe@@Base+0x190>
   11ebc:	mov	r5, #0
   11ec0:	mov	r0, r7
   11ec4:	bl	13554 <table_add_row@@Base>
   11ec8:	cmp	r8, #0
   11ecc:	ble	11f80 <table_dupe@@Base+0x184>
   11ed0:	mov	r4, #0
   11ed4:	mov	r1, r4
   11ed8:	mov	r0, r6
   11edc:	bl	12794 <table_get_column_data_type@@Base>
   11ee0:	cmp	r0, #23
   11ee4:	ldrls	pc, [pc, r0, lsl #2]
   11ee8:	b	11f74 <table_dupe@@Base+0x178>
   11eec:	strdeq	r1, [r1], -r8
   11ef0:	andeq	r2, r1, ip, ror #4
   11ef4:	andeq	r2, r1, r4, asr #4
   11ef8:	andeq	r2, r1, ip, lsl r2
   11efc:	strdeq	r2, [r1], -r4
   11f00:	andeq	r2, r1, ip, lsl #6
   11f04:	andeq	r2, r1, r4, ror #5
   11f08:			; <UNDEFINED> instruction: 0x000122bc
   11f0c:	muleq	r1, r4, r2
   11f10:	andeq	r2, r1, ip, asr #3
   11f14:	andeq	r2, r1, r4, lsr #3
   11f18:	andeq	r2, r1, ip, ror r1
   11f1c:	andeq	r2, r1, r4, asr r1
   11f20:	andeq	r2, r1, ip, lsr #2
   11f24:	andeq	r2, r1, r4, lsl #2
   11f28:	ldrdeq	r2, [r1], -ip
   11f2c:	strheq	r2, [r1], -r8
   11f30:	muleq	r1, r4, r0
   11f34:	andeq	r2, r1, r0, ror r0
   11f38:	andeq	r2, r1, r8, asr #32
   11f3c:	andeq	r2, r1, r0, lsr #32
   11f40:	ldrdeq	r1, [r1], -r0
   11f44:	andeq	r1, r1, r8, lsr #31
   11f48:	andeq	r1, r1, ip, asr #30
   11f4c:	mov	r2, r4
   11f50:	mov	r1, r5
   11f54:	mov	r0, r6
   11f58:	bl	1347c <table_get_ptr@@Base>
   11f5c:	add	r3, sp, #12
   11f60:	mov	r2, r4
   11f64:	str	r0, [sp, #12]
   11f68:	mov	r1, r5
   11f6c:	mov	r0, r7
   11f70:	bl	148e0 <table_set_ptr@@Base>
   11f74:	add	r4, r4, #1
   11f78:	cmp	r8, r4
   11f7c:	bne	11ed4 <table_dupe@@Base+0xd8>
   11f80:	add	r5, r5, #1
   11f84:	cmp	r9, r5
   11f88:	bne	11ec0 <table_dupe@@Base+0xc4>
   11f8c:	mov	r0, r7
   11f90:	add	sp, sp, #20
   11f94:	ldrd	r4, [sp]
   11f98:	ldrd	r6, [sp, #8]
   11f9c:	ldrd	r8, [sp, #16]
   11fa0:	add	sp, sp, #24
   11fa4:	pop	{pc}		; (ldr pc, [sp], #4)
   11fa8:	mov	r2, r4
   11fac:	mov	r1, r5
   11fb0:	mov	r0, r6
   11fb4:	bl	131a0 <table_get_bool@@Base>
   11fb8:	mov	r3, r0
   11fbc:	mov	r2, r4
   11fc0:	mov	r1, r5
   11fc4:	mov	r0, r7
   11fc8:	bl	13acc <table_set_bool@@Base>
   11fcc:	b	11f74 <table_dupe@@Base+0x178>
   11fd0:	mov	r2, r4
   11fd4:	mov	r1, r5
   11fd8:	mov	r0, r6
   11fdc:	bl	13460 <table_get_string@@Base>
   11fe0:	mov	r3, r0
   11fe4:	mov	r2, r4
   11fe8:	mov	r1, r5
   11fec:	mov	r0, r7
   11ff0:	bl	1470c <table_set_string@@Base>
   11ff4:	b	11f74 <table_dupe@@Base+0x178>
   11ff8:	mov	r2, r4
   11ffc:	mov	r1, r5
   12000:	mov	r0, r6
   12004:	bl	131c0 <table_get_int@@Base>
   12008:	mov	r3, r0
   1200c:	mov	r2, r4
   12010:	mov	r1, r5
   12014:	mov	r0, r7
   12018:	bl	13b64 <table_set_int@@Base>
   1201c:	b	11f74 <table_dupe@@Base+0x178>
   12020:	mov	r2, r4
   12024:	mov	r1, r5
   12028:	mov	r0, r6
   1202c:	bl	13440 <table_get_uchar@@Base>
   12030:	mov	r3, r0
   12034:	mov	r2, r4
   12038:	mov	r1, r5
   1203c:	mov	r0, r7
   12040:	bl	14844 <table_set_uchar@@Base>
   12044:	b	11f74 <table_dupe@@Base+0x178>
   12048:	mov	r2, r4
   1204c:	mov	r1, r5
   12050:	mov	r0, r6
   12054:	bl	13420 <table_get_char@@Base>
   12058:	mov	r3, r0
   1205c:	mov	r2, r4
   12060:	mov	r1, r5
   12064:	mov	r0, r7
   12068:	bl	147a8 <table_set_char@@Base>
   1206c:	b	11f74 <table_dupe@@Base+0x178>
   12070:	mov	r2, r4
   12074:	mov	r1, r5
   12078:	mov	r0, r6
   1207c:	bl	13400 <table_get_ldouble@@Base>
   12080:	mov	r2, r4
   12084:	mov	r1, r5
   12088:	mov	r0, r7
   1208c:	bl	14664 <table_set_ldouble@@Base>
   12090:	b	11f74 <table_dupe@@Base+0x178>
   12094:	mov	r2, r4
   12098:	mov	r1, r5
   1209c:	mov	r0, r6
   120a0:	bl	133e0 <table_get_double@@Base>
   120a4:	mov	r2, r4
   120a8:	mov	r1, r5
   120ac:	mov	r0, r7
   120b0:	bl	145bc <table_set_double@@Base>
   120b4:	b	11f74 <table_dupe@@Base+0x178>
   120b8:	mov	r2, r4
   120bc:	mov	r1, r5
   120c0:	mov	r0, r6
   120c4:	bl	133c0 <table_get_float@@Base>
   120c8:	mov	r2, r4
   120cc:	mov	r1, r5
   120d0:	mov	r0, r7
   120d4:	bl	14520 <table_set_float@@Base>
   120d8:	b	11f74 <table_dupe@@Base+0x178>
   120dc:	mov	r2, r4
   120e0:	mov	r1, r5
   120e4:	mov	r0, r6
   120e8:	bl	133a0 <table_get_ullong@@Base>
   120ec:	mov	r2, r4
   120f0:	strd	r0, [sp]
   120f4:	mov	r1, r5
   120f8:	mov	r0, r7
   120fc:	bl	14478 <table_set_ullong@@Base>
   12100:	b	11f74 <table_dupe@@Base+0x178>
   12104:	mov	r2, r4
   12108:	mov	r1, r5
   1210c:	mov	r0, r6
   12110:	bl	13380 <table_get_llong@@Base>
   12114:	mov	r2, r4
   12118:	strd	r0, [sp]
   1211c:	mov	r1, r5
   12120:	mov	r0, r7
   12124:	bl	143d0 <table_set_llong@@Base>
   12128:	b	11f74 <table_dupe@@Base+0x178>
   1212c:	mov	r2, r4
   12130:	mov	r1, r5
   12134:	mov	r0, r6
   12138:	bl	13360 <table_get_ulong@@Base>
   1213c:	mov	r3, r0
   12140:	mov	r2, r4
   12144:	mov	r1, r5
   12148:	mov	r0, r7
   1214c:	bl	14334 <table_set_ulong@@Base>
   12150:	b	11f74 <table_dupe@@Base+0x178>
   12154:	mov	r2, r4
   12158:	mov	r1, r5
   1215c:	mov	r0, r6
   12160:	bl	13340 <table_get_long@@Base>
   12164:	mov	r3, r0
   12168:	mov	r2, r4
   1216c:	mov	r1, r5
   12170:	mov	r0, r7
   12174:	bl	14298 <table_set_long@@Base>
   12178:	b	11f74 <table_dupe@@Base+0x178>
   1217c:	mov	r2, r4
   12180:	mov	r1, r5
   12184:	mov	r0, r6
   12188:	bl	13320 <table_get_ushort@@Base>
   1218c:	mov	r3, r0
   12190:	mov	r2, r4
   12194:	mov	r1, r5
   12198:	mov	r0, r7
   1219c:	bl	14200 <table_set_ushort@@Base>
   121a0:	b	11f74 <table_dupe@@Base+0x178>
   121a4:	mov	r2, r4
   121a8:	mov	r1, r5
   121ac:	mov	r0, r6
   121b0:	bl	13300 <table_get_short@@Base>
   121b4:	mov	r3, r0
   121b8:	mov	r2, r4
   121bc:	mov	r1, r5
   121c0:	mov	r0, r7
   121c4:	bl	14168 <table_set_short@@Base>
   121c8:	b	11f74 <table_dupe@@Base+0x178>
   121cc:	mov	r2, r4
   121d0:	mov	r1, r5
   121d4:	mov	r0, r6
   121d8:	bl	132e0 <table_get_uint64@@Base>
   121dc:	mov	r2, r4
   121e0:	strd	r0, [sp]
   121e4:	mov	r1, r5
   121e8:	mov	r0, r7
   121ec:	bl	140c4 <table_set_uint64@@Base>
   121f0:	b	11f74 <table_dupe@@Base+0x178>
   121f4:	mov	r2, r4
   121f8:	mov	r1, r5
   121fc:	mov	r0, r6
   12200:	bl	13240 <table_get_int16@@Base>
   12204:	mov	r3, r0
   12208:	mov	r2, r4
   1220c:	mov	r1, r5
   12210:	mov	r0, r7
   12214:	bl	13dc4 <table_set_int16@@Base>
   12218:	b	11f74 <table_dupe@@Base+0x178>
   1221c:	mov	r2, r4
   12220:	mov	r1, r5
   12224:	mov	r0, r6
   12228:	bl	13220 <table_get_uint8@@Base>
   1222c:	mov	r3, r0
   12230:	mov	r2, r4
   12234:	mov	r1, r5
   12238:	mov	r0, r7
   1223c:	bl	13d2c <table_set_uint8@@Base>
   12240:	b	11f74 <table_dupe@@Base+0x178>
   12244:	mov	r2, r4
   12248:	mov	r1, r5
   1224c:	mov	r0, r6
   12250:	bl	13200 <table_get_int8@@Base>
   12254:	mov	r3, r0
   12258:	mov	r2, r4
   1225c:	mov	r1, r5
   12260:	mov	r0, r7
   12264:	bl	13c94 <table_set_int8@@Base>
   12268:	b	11f74 <table_dupe@@Base+0x178>
   1226c:	mov	r2, r4
   12270:	mov	r1, r5
   12274:	mov	r0, r6
   12278:	bl	131e0 <table_get_uint@@Base>
   1227c:	mov	r3, r0
   12280:	mov	r2, r4
   12284:	mov	r1, r5
   12288:	mov	r0, r7
   1228c:	bl	13bfc <table_set_uint@@Base>
   12290:	b	11f74 <table_dupe@@Base+0x178>
   12294:	mov	r2, r4
   12298:	mov	r1, r5
   1229c:	mov	r0, r6
   122a0:	bl	132c0 <table_get_int64@@Base>
   122a4:	mov	r2, r4
   122a8:	strd	r0, [sp]
   122ac:	mov	r1, r5
   122b0:	mov	r0, r7
   122b4:	bl	14024 <table_set_int64@@Base>
   122b8:	b	11f74 <table_dupe@@Base+0x178>
   122bc:	mov	r2, r4
   122c0:	mov	r1, r5
   122c4:	mov	r0, r6
   122c8:	bl	132a0 <table_get_uint32@@Base>
   122cc:	mov	r3, r0
   122d0:	mov	r2, r4
   122d4:	mov	r1, r5
   122d8:	mov	r0, r7
   122dc:	bl	13f8c <table_set_uint32@@Base>
   122e0:	b	11f74 <table_dupe@@Base+0x178>
   122e4:	mov	r2, r4
   122e8:	mov	r1, r5
   122ec:	mov	r0, r6
   122f0:	bl	13280 <table_get_int32@@Base>
   122f4:	mov	r3, r0
   122f8:	mov	r2, r4
   122fc:	mov	r1, r5
   12300:	mov	r0, r7
   12304:	bl	13ef4 <table_set_int32@@Base>
   12308:	b	11f74 <table_dupe@@Base+0x178>
   1230c:	mov	r2, r4
   12310:	mov	r1, r5
   12314:	mov	r0, r6
   12318:	bl	13260 <table_get_uint16@@Base>
   1231c:	mov	r3, r0
   12320:	mov	r2, r4
   12324:	mov	r1, r5
   12328:	mov	r0, r7
   1232c:	bl	13e5c <table_set_uint16@@Base>
   12330:	b	11f74 <table_dupe@@Base+0x178>

00012334 <table_get_major_version@@Base>:
   12334:	mov	r0, #0
   12338:	bx	lr

0001233c <table_get_minor_version@@Base>:
   1233c:	mov	r0, #0
   12340:	bx	lr

00012344 <table_get_patch_version@@Base>:
   12344:	mov	r0, #0
   12348:	bx	lr

0001234c <table_get_version@@Base>:
   1234c:	movw	r0, #21788	; 0x551c
   12350:	movt	r0, #1
   12354:	bx	lr

00012358 <table_get_callback_length@@Base>:
   12358:	ldr	r0, [r0, #32]
   1235c:	bx	lr

00012360 <table_register_callback@@Base>:
   12360:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12364:	ldr	r5, [r0, #32]
   12368:	strd	r6, [sp, #8]
   1236c:	strd	r8, [sp, #16]
   12370:	str	sl, [sp, #24]
   12374:	str	lr, [sp, #28]
   12378:	cmp	r5, #0
   1237c:	ldr	r7, [r0, #36]	; 0x24
   12380:	ble	123d8 <table_register_callback@@Base+0x78>
   12384:	sub	lr, r7, #4
   12388:	mov	ip, #0
   1238c:	b	1239c <table_register_callback@@Base+0x3c>
   12390:	add	ip, ip, #1
   12394:	cmp	ip, r5
   12398:	beq	123d8 <table_register_callback@@Base+0x78>
   1239c:	ldr	r4, [lr, #4]!
   123a0:	lsl	r6, ip, #2
   123a4:	cmp	r1, r4
   123a8:	bne	12390 <table_register_callback@@Base+0x30>
   123ac:	ldr	r4, [r0, #40]	; 0x28
   123b0:	ldr	r4, [r4, ip, lsl #2]
   123b4:	cmp	r2, r4
   123b8:	bne	12390 <table_register_callback@@Base+0x30>
   123bc:	cmp	ip, #0
   123c0:	beq	123d8 <table_register_callback@@Base+0x78>
   123c4:	ldr	r2, [r0, #44]	; 0x2c
   123c8:	ldr	r8, [r2, r6]
   123cc:	orr	r8, r8, r3
   123d0:	str	r8, [r2, r6]
   123d4:	b	1241c <table_register_callback@@Base+0xbc>
   123d8:	mov	r8, r3
   123dc:	ldr	r3, [r0, #48]	; 0x30
   123e0:	mov	r4, r2
   123e4:	mov	r9, r1
   123e8:	mov	r6, r0
   123ec:	udiv	r2, r5, r3
   123f0:	mls	r2, r3, r2, r5
   123f4:	cmp	r2, #0
   123f8:	beq	12434 <table_register_callback@@Base+0xd4>
   123fc:	str	r9, [r7, r5, lsl #2]
   12400:	ldr	r3, [r6, #40]	; 0x28
   12404:	str	r4, [r3, r5, lsl #2]
   12408:	ldr	r3, [r6, #44]	; 0x2c
   1240c:	str	r8, [r3, r5, lsl #2]
   12410:	ldr	r3, [r6, #32]
   12414:	add	r3, r3, #1
   12418:	str	r3, [r6, #32]
   1241c:	ldrd	r4, [sp]
   12420:	ldrd	r6, [sp, #8]
   12424:	ldrd	r8, [sp, #16]
   12428:	ldr	sl, [sp, #24]
   1242c:	add	sp, sp, #28
   12430:	pop	{pc}		; (ldr pc, [sp], #4)
   12434:	ldr	r2, [r6, #52]	; 0x34
   12438:	mov	r0, r7
   1243c:	add	r3, r3, r2
   12440:	lsl	r1, r3, #2
   12444:	str	r3, [r6, #52]	; 0x34
   12448:	bl	11a6c <realloc@plt>
   1244c:	ldr	r1, [r6, #52]	; 0x34
   12450:	str	r0, [r6, #36]	; 0x24
   12454:	ldr	r0, [r6, #40]	; 0x28
   12458:	lsl	r1, r1, #2
   1245c:	bl	11a6c <realloc@plt>
   12460:	ldr	r1, [r6, #52]	; 0x34
   12464:	str	r0, [r6, #40]	; 0x28
   12468:	ldr	r0, [r6, #44]	; 0x2c
   1246c:	lsl	r1, r1, #2
   12470:	bl	11a6c <realloc@plt>
   12474:	str	r0, [r6, #44]	; 0x2c
   12478:	ldr	r5, [r6, #32]
   1247c:	ldr	r7, [r6, #36]	; 0x24
   12480:	b	123fc <table_register_callback@@Base+0x9c>

00012484 <table_unregister_callback@@Base>:
   12484:	ldr	ip, [r0, #32]
   12488:	cmp	ip, #0
   1248c:	bxle	lr
   12490:	strd	r4, [sp, #-16]!
   12494:	mov	r3, #0
   12498:	str	r6, [sp, #8]
   1249c:	ldr	r6, [r0, #36]	; 0x24
   124a0:	str	lr, [sp, #12]
   124a4:	sub	r4, r6, #4
   124a8:	b	124b8 <table_unregister_callback@@Base+0x34>
   124ac:	add	r3, r3, #1
   124b0:	cmp	r3, ip
   124b4:	beq	12598 <table_unregister_callback@@Base+0x114>
   124b8:	ldr	r5, [r4, #4]!
   124bc:	lsl	lr, r3, #2
   124c0:	cmp	r1, r5
   124c4:	bne	124ac <table_unregister_callback@@Base+0x28>
   124c8:	ldr	r5, [r0, #40]	; 0x28
   124cc:	ldr	r5, [r5, r3, lsl #2]
   124d0:	cmp	r2, r5
   124d4:	bne	124ac <table_unregister_callback@@Base+0x28>
   124d8:	sub	ip, ip, #1
   124dc:	cmp	ip, r3
   124e0:	ble	12530 <table_unregister_callback@@Base+0xac>
   124e4:	add	r3, r3, #1
   124e8:	lsl	r2, r3, #2
   124ec:	b	124f4 <table_unregister_callback@@Base+0x70>
   124f0:	ldr	r6, [r0, #36]	; 0x24
   124f4:	ldr	r1, [r6, r2]
   124f8:	str	r1, [r6, lr]
   124fc:	ldr	r1, [r0, #40]	; 0x28
   12500:	ldr	ip, [r1, r2]
   12504:	str	ip, [r1, lr]
   12508:	ldr	r1, [r0, #44]	; 0x2c
   1250c:	ldr	ip, [r1, r2]
   12510:	add	r2, r2, #4
   12514:	str	ip, [r1, lr]
   12518:	lsl	lr, r3, #2
   1251c:	ldr	ip, [r0, #32]
   12520:	sub	ip, ip, #1
   12524:	cmp	ip, r3
   12528:	add	r3, r3, #1
   1252c:	bgt	124f0 <table_unregister_callback@@Base+0x6c>
   12530:	ldr	r2, [r0, #48]	; 0x30
   12534:	str	ip, [r0, #32]
   12538:	udiv	r3, ip, r2
   1253c:	mls	ip, r2, r3, ip
   12540:	cmp	ip, #0
   12544:	bne	12598 <table_unregister_callback@@Base+0x114>
   12548:	mov	r4, r0
   1254c:	ldr	r0, [r0, #36]	; 0x24
   12550:	ldr	r5, [r4, #52]	; 0x34
   12554:	sub	r5, r5, r2
   12558:	cmp	r5, #0
   1255c:	str	r5, [r4, #52]	; 0x34
   12560:	beq	125a8 <table_unregister_callback@@Base+0x124>
   12564:	lsl	r1, r5, #2
   12568:	bl	11a6c <realloc@plt>
   1256c:	ldr	r1, [r4, #52]	; 0x34
   12570:	str	r0, [r4, #36]	; 0x24
   12574:	ldr	r0, [r4, #40]	; 0x28
   12578:	lsl	r1, r1, #2
   1257c:	bl	11a6c <realloc@plt>
   12580:	ldr	r1, [r4, #52]	; 0x34
   12584:	str	r0, [r4, #40]	; 0x28
   12588:	ldr	r0, [r4, #44]	; 0x2c
   1258c:	lsl	r1, r1, #2
   12590:	bl	11a6c <realloc@plt>
   12594:	str	r0, [r4, #44]	; 0x2c
   12598:	ldrd	r4, [sp]
   1259c:	ldr	r6, [sp, #8]
   125a0:	add	sp, sp, #12
   125a4:	pop	{pc}		; (ldr pc, [sp], #4)
   125a8:	bl	11a60 <free@plt>
   125ac:	ldr	r0, [r4, #40]	; 0x28
   125b0:	bl	11a60 <free@plt>
   125b4:	ldr	r0, [r4, #44]	; 0x2c
   125b8:	bl	11a60 <free@plt>
   125bc:	str	r5, [r4, #36]	; 0x24
   125c0:	str	r5, [r4, #40]	; 0x28
   125c4:	str	r5, [r4, #44]	; 0x2c
   125c8:	ldrd	r4, [sp]
   125cc:	ldr	r6, [sp, #8]
   125d0:	add	sp, sp, #12
   125d4:	pop	{pc}		; (ldr pc, [sp], #4)

000125d8 <table_notify@@Base>:
   125d8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   125dc:	strd	r6, [sp, #8]
   125e0:	str	lr, [sp, #24]
   125e4:	ldr	lr, [r0, #32]
   125e8:	strd	r8, [sp, #16]
   125ec:	sub	sp, sp, #12
   125f0:	cmp	lr, #0
   125f4:	ble	12668 <table_notify@@Base+0x90>
   125f8:	ldr	r7, [r0, #44]	; 0x2c
   125fc:	mov	r6, r3
   12600:	mov	r9, r2
   12604:	mov	r8, r1
   12608:	mov	r5, r0
   1260c:	mov	r4, #0
   12610:	ldr	ip, [r7, r4, lsl #2]
   12614:	mov	r3, r6
   12618:	mov	r2, r9
   1261c:	mov	r1, r8
   12620:	mov	r0, r5
   12624:	tst	r6, ip
   12628:	beq	1265c <table_notify@@Base+0x84>
   1262c:	ldr	ip, [r5, #36]	; 0x24
   12630:	ldr	lr, [r5, #40]	; 0x28
   12634:	ldr	lr, [lr, r4, lsl #2]
   12638:	str	lr, [sp]
   1263c:	ldr	r7, [ip, r4, lsl #2]
   12640:	add	r4, r4, #1
   12644:	blx	r7
   12648:	ldr	lr, [r5, #32]
   1264c:	cmp	lr, r4
   12650:	ble	12668 <table_notify@@Base+0x90>
   12654:	ldr	r7, [r5, #44]	; 0x2c
   12658:	b	12610 <table_notify@@Base+0x38>
   1265c:	add	r4, r4, #1
   12660:	cmp	r4, lr
   12664:	blt	12610 <table_notify@@Base+0x38>
   12668:	add	sp, sp, #12
   1266c:	ldrd	r4, [sp]
   12670:	ldrd	r6, [sp, #8]
   12674:	ldrd	r8, [sp, #16]
   12678:	add	sp, sp, #24
   1267c:	pop	{pc}		; (ldr pc, [sp], #4)

00012680 <table_column_init@@Base>:
   12680:	add	r1, r1, r1, lsl #1
   12684:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12688:	strd	r6, [sp, #8]
   1268c:	mov	r7, r2
   12690:	ldr	r6, [r0]
   12694:	mov	r0, r2
   12698:	lsl	r4, r1, #2
   1269c:	strd	r8, [sp, #16]
   126a0:	mov	r9, r3
   126a4:	str	sl, [sp, #24]
   126a8:	str	lr, [sp, #28]
   126ac:	bl	11aa8 <strlen@plt>
   126b0:	add	r0, r0, #1
   126b4:	ldr	r8, [sp, #32]
   126b8:	add	r5, r6, r4
   126bc:	bl	11a84 <malloc@plt>
   126c0:	cmp	r0, #0
   126c4:	str	r0, [r6, r4]
   126c8:	beq	126d4 <table_column_init@@Base+0x54>
   126cc:	mov	r1, r7
   126d0:	bl	11a78 <strcpy@plt>
   126d4:	ldrd	r6, [sp, #8]
   126d8:	ldr	sl, [sp, #24]
   126dc:	str	r9, [r5, #4]
   126e0:	str	r8, [r5, #8]
   126e4:	ldrd	r4, [sp]
   126e8:	ldrd	r8, [sp, #16]
   126ec:	add	sp, sp, #28
   126f0:	pop	{pc}		; (ldr pc, [sp], #4)

000126f4 <table_column_destroy@@Base>:
   126f4:	ldr	r3, [r0]
   126f8:	add	r1, r1, r1, lsl #1
   126fc:	ldr	r0, [r3, r1, lsl #2]
   12700:	cmp	r0, #0
   12704:	beq	1270c <table_column_destroy@@Base+0x18>
   12708:	b	11a60 <free@plt>
   1270c:	bx	lr

00012710 <table_get_column_length@@Base>:
   12710:	ldr	r0, [r0, #4]
   12714:	bx	lr

00012718 <table_get_column@@Base>:
   12718:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1271c:	strd	r6, [sp, #8]
   12720:	ldr	r7, [r0, #4]
   12724:	str	r8, [sp, #16]
   12728:	str	lr, [sp, #20]
   1272c:	cmp	r7, #0
   12730:	ble	12780 <table_get_column@@Base+0x68>
   12734:	mov	r6, r1
   12738:	mov	r4, #0
   1273c:	ldr	r5, [r0]
   12740:	b	12750 <table_get_column@@Base+0x38>
   12744:	add	r4, r4, #1
   12748:	cmp	r7, r4
   1274c:	beq	1278c <table_get_column@@Base+0x74>
   12750:	mov	r1, r6
   12754:	ldr	r0, [r5]
   12758:	add	r5, r5, #12
   1275c:	bl	11a48 <strcmp@plt>
   12760:	cmp	r0, #0
   12764:	bne	12744 <table_get_column@@Base+0x2c>
   12768:	mov	r0, r4
   1276c:	ldrd	r4, [sp]
   12770:	ldrd	r6, [sp, #8]
   12774:	ldr	r8, [sp, #16]
   12778:	add	sp, sp, #20
   1277c:	pop	{pc}		; (ldr pc, [sp], #4)
   12780:	beq	1278c <table_get_column@@Base+0x74>
   12784:	mov	r4, #0
   12788:	b	12768 <table_get_column@@Base+0x50>
   1278c:	mvn	r4, #0
   12790:	b	12768 <table_get_column@@Base+0x50>

00012794 <table_get_column_data_type@@Base>:
   12794:	ldr	r3, [r0]
   12798:	add	r1, r1, r1, lsl #1
   1279c:	add	r3, r3, r1, lsl #2
   127a0:	ldr	r0, [r3, #4]
   127a4:	bx	lr

000127a8 <table_add_column@@Base>:
   127a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   127ac:	mov	r4, r0
   127b0:	ldr	r3, [r0, #8]
   127b4:	strd	r6, [sp, #8]
   127b8:	strd	sl, [sp, #24]
   127bc:	mov	fp, r1
   127c0:	ldr	r1, [r0, #4]
   127c4:	strd	r8, [sp, #16]
   127c8:	mov	r9, r2
   127cc:	str	lr, [sp, #32]
   127d0:	sub	sp, sp, #12
   127d4:	udiv	r5, r1, r3
   127d8:	mls	r5, r3, r5, r1
   127dc:	cmp	r5, #0
   127e0:	beq	128a4 <table_add_column@@Base+0xfc>
   127e4:	mov	r0, r4
   127e8:	bl	1354c <table_get_row_length@@Base>
   127ec:	ldr	r6, [r4, #4]
   127f0:	mov	r7, r0
   127f4:	mov	r0, r9
   127f8:	bl	1316c <table_get_default_compare_function_for_data_type@@Base>
   127fc:	str	r0, [sp, #4]
   12800:	mov	r0, fp
   12804:	ldr	sl, [r4]
   12808:	bl	11aa8 <strlen@plt>
   1280c:	add	r5, r6, r6, lsl #1
   12810:	add	r0, r0, #1
   12814:	bl	11a84 <malloc@plt>
   12818:	lsl	r5, r5, #2
   1281c:	cmp	r0, #0
   12820:	add	r8, sl, r5
   12824:	str	r0, [sl, r5]
   12828:	beq	12834 <table_add_column@@Base+0x8c>
   1282c:	mov	r1, fp
   12830:	bl	11a78 <strcpy@plt>
   12834:	ldr	r3, [sp, #4]
   12838:	cmp	r7, #0
   1283c:	str	r9, [r8, #4]
   12840:	str	r3, [r8, #8]
   12844:	ble	12868 <table_add_column@@Base+0xc0>
   12848:	mov	r5, #0
   1284c:	mov	r1, r5
   12850:	mov	r2, r6
   12854:	mov	r0, r4
   12858:	add	r5, r5, #1
   1285c:	bl	14954 <table_cell_init@@Base>
   12860:	cmp	r7, r5
   12864:	bne	1284c <table_add_column@@Base+0xa4>
   12868:	mov	r0, r4
   1286c:	mov	r3, #8
   12870:	ldr	r2, [r4, #4]
   12874:	mvn	r1, #0
   12878:	bl	125d8 <table_notify@@Base>
   1287c:	ldr	r0, [r4, #4]
   12880:	add	r3, r0, #1
   12884:	str	r3, [r4, #4]
   12888:	add	sp, sp, #12
   1288c:	ldrd	r4, [sp]
   12890:	ldrd	r6, [sp, #8]
   12894:	ldrd	r8, [sp, #16]
   12898:	ldrd	sl, [sp, #24]
   1289c:	add	sp, sp, #32
   128a0:	pop	{pc}		; (ldr pc, [sp], #4)
   128a4:	ldr	r2, [r4, #12]
   128a8:	ldr	r0, [r0]
   128ac:	add	r3, r3, r2
   128b0:	add	r1, r3, r3, lsl #1
   128b4:	str	r3, [r4, #12]
   128b8:	lsl	r1, r1, #2
   128bc:	bl	11a6c <realloc@plt>
   128c0:	str	r0, [r4]
   128c4:	mov	r0, r4
   128c8:	bl	1354c <table_get_row_length@@Base>
   128cc:	subs	r7, r0, #0
   128d0:	ble	127e4 <table_add_column@@Base+0x3c>
   128d4:	mov	r1, r5
   128d8:	mov	r0, r4
   128dc:	bl	13740 <table_get_row_ptr@@Base>
   128e0:	ldr	r1, [r4, #12]
   128e4:	mov	r6, r0
   128e8:	add	r5, r5, #1
   128ec:	ldr	r0, [r0]
   128f0:	lsl	r1, r1, #2
   128f4:	bl	11a6c <realloc@plt>
   128f8:	cmp	r7, r5
   128fc:	str	r0, [r6]
   12900:	bne	128d4 <table_add_column@@Base+0x12c>
   12904:	b	127e4 <table_add_column@@Base+0x3c>

00012908 <table_remove_column@@Base>:
   12908:	ldr	r3, [r0]
   1290c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12910:	mov	r4, r0
   12914:	mov	r5, r1
   12918:	strd	r6, [sp, #8]
   1291c:	add	r6, r1, r1, lsl #1
   12920:	strd	r8, [sp, #16]
   12924:	lsl	r6, r6, #2
   12928:	str	sl, [sp, #24]
   1292c:	str	lr, [sp, #28]
   12930:	ldr	r0, [r3, r6]
   12934:	cmp	r0, #0
   12938:	beq	12940 <table_remove_column@@Base+0x38>
   1293c:	bl	11a60 <free@plt>
   12940:	ldr	r7, [r4, #4]
   12944:	sub	r7, r7, #1
   12948:	cmp	r5, r7
   1294c:	bge	12988 <table_remove_column@@Base+0x80>
   12950:	mov	r1, r5
   12954:	ldr	r3, [r4]
   12958:	add	r1, r1, #1
   1295c:	cmp	r1, r7
   12960:	add	r2, r3, r6
   12964:	add	r6, r6, #12
   12968:	add	r3, r3, r6
   1296c:	ldr	ip, [r3]
   12970:	ldr	r0, [r3, #4]
   12974:	ldr	r3, [r3, #8]
   12978:	str	ip, [r2]
   1297c:	str	r0, [r2, #4]
   12980:	str	r3, [r2, #8]
   12984:	bne	12954 <table_remove_column@@Base+0x4c>
   12988:	mov	r0, r4
   1298c:	bl	1354c <table_get_row_length@@Base>
   12990:	subs	r9, r0, #0
   12994:	ble	129f8 <table_remove_column@@Base+0xf0>
   12998:	lsl	r8, r5, #2
   1299c:	mov	r6, #0
   129a0:	mov	r2, r5
   129a4:	mov	r1, r6
   129a8:	mov	r0, r4
   129ac:	bl	1497c <table_cell_destroy@@Base>
   129b0:	mov	r1, r6
   129b4:	mov	r0, r4
   129b8:	bl	13740 <table_get_row_ptr@@Base>
   129bc:	cmp	r5, r7
   129c0:	bge	129ec <table_remove_column@@Base+0xe4>
   129c4:	mov	r3, r8
   129c8:	mov	r2, r5
   129cc:	ldr	r1, [r0]
   129d0:	add	r2, r2, #1
   129d4:	cmp	r2, r7
   129d8:	add	ip, r1, r3
   129dc:	add	r3, r3, #4
   129e0:	ldr	r1, [r1, r3]
   129e4:	str	r1, [ip]
   129e8:	bne	129cc <table_remove_column@@Base+0xc4>
   129ec:	add	r6, r6, #1
   129f0:	cmp	r9, r6
   129f4:	bne	129a0 <table_remove_column@@Base+0x98>
   129f8:	ldr	r6, [r4, #4]
   129fc:	ldr	r2, [r4, #8]
   12a00:	sub	r3, r6, #1
   12a04:	udiv	r6, r3, r2
   12a08:	str	r3, [r4, #4]
   12a0c:	mls	r6, r2, r6, r3
   12a10:	cmp	r6, #0
   12a14:	beq	12a48 <table_remove_column@@Base+0x140>
   12a18:	mov	r0, r4
   12a1c:	mov	r2, r5
   12a20:	mov	r3, #16
   12a24:	mvn	r1, #0
   12a28:	bl	125d8 <table_notify@@Base>
   12a2c:	ldrd	r4, [sp]
   12a30:	mov	r0, #0
   12a34:	ldrd	r6, [sp, #8]
   12a38:	ldrd	r8, [sp, #16]
   12a3c:	ldr	sl, [sp, #24]
   12a40:	add	sp, sp, #28
   12a44:	pop	{pc}		; (ldr pc, [sp], #4)
   12a48:	ldr	r0, [r4]
   12a4c:	ldr	r3, [r4, #12]
   12a50:	sub	r2, r3, r2
   12a54:	add	r1, r2, r2, lsl #1
   12a58:	str	r2, [r4, #12]
   12a5c:	lsl	r1, r1, #2
   12a60:	bl	11a6c <realloc@plt>
   12a64:	str	r0, [r4]
   12a68:	mov	r0, r4
   12a6c:	bl	1354c <table_get_row_length@@Base>
   12a70:	subs	r8, r0, #0
   12a74:	ble	12a18 <table_remove_column@@Base+0x110>
   12a78:	mov	r1, r6
   12a7c:	mov	r0, r4
   12a80:	bl	13740 <table_get_row_ptr@@Base>
   12a84:	ldr	r1, [r4, #12]
   12a88:	mov	r7, r0
   12a8c:	add	r6, r6, #1
   12a90:	ldr	r0, [r0]
   12a94:	lsl	r1, r1, #2
   12a98:	bl	11a6c <realloc@plt>
   12a9c:	cmp	r8, r6
   12aa0:	str	r0, [r7]
   12aa4:	bne	12a78 <table_remove_column@@Base+0x170>
   12aa8:	b	12a18 <table_remove_column@@Base+0x110>

00012aac <table_get_column_name@@Base>:
   12aac:	ldr	r3, [r0]
   12ab0:	add	r1, r1, r1, lsl #1
   12ab4:	ldr	r0, [r3, r1, lsl #2]
   12ab8:	bx	lr

00012abc <table_get_col_ptr@@Base>:
   12abc:	ldr	r0, [r0]
   12ac0:	add	r1, r1, r1, lsl #1
   12ac4:	add	r0, r0, r1, lsl #2
   12ac8:	bx	lr

00012acc <table_get_column_compare_function@@Base>:
   12acc:	ldr	r3, [r0]
   12ad0:	add	r1, r1, r1, lsl #1
   12ad4:	add	r3, r3, r1, lsl #2
   12ad8:	ldr	r0, [r3, #8]
   12adc:	bx	lr

00012ae0 <table_set_column_compare_function@@Base>:
   12ae0:	ldr	r3, [r0]
   12ae4:	add	r1, r1, r1, lsl #1
   12ae8:	add	r3, r3, r1, lsl #2
   12aec:	str	r2, [r3, #8]
   12af0:	bx	lr

00012af4 <table_compare_ptr@@Base>:
   12af4:	cmp	r0, r1
   12af8:	bhi	12b08 <table_compare_ptr@@Base+0x14>
   12afc:	mvncc	r0, #0
   12b00:	movcs	r0, #0
   12b04:	bx	lr
   12b08:	mov	r0, #1
   12b0c:	bx	lr

00012b10 <table_compare_string@@Base>:
   12b10:	cmp	r0, #0
   12b14:	beq	12b24 <table_compare_string@@Base+0x14>
   12b18:	cmp	r1, #0
   12b1c:	beq	12b34 <table_compare_string@@Base+0x24>
   12b20:	b	11a48 <strcmp@plt>
   12b24:	adds	r0, r1, #0
   12b28:	movne	r0, #1
   12b2c:	rsb	r0, r0, #0
   12b30:	bx	lr
   12b34:	mov	r0, #1
   12b38:	bx	lr

00012b3c <table_compare_bool@@Base>:
   12b3c:	cmp	r0, #0
   12b40:	beq	12b70 <table_compare_bool@@Base+0x34>
   12b44:	cmp	r1, #0
   12b48:	beq	12b68 <table_compare_bool@@Base+0x2c>
   12b4c:	ldrb	r2, [r0]
   12b50:	ldrb	r3, [r1]
   12b54:	cmp	r2, r3
   12b58:	bhi	12b68 <table_compare_bool@@Base+0x2c>
   12b5c:	mvncc	r0, #0
   12b60:	movcs	r0, #0
   12b64:	bx	lr
   12b68:	mov	r0, #1
   12b6c:	bx	lr
   12b70:	adds	r1, r1, #0
   12b74:	movne	r1, #1
   12b78:	rsb	r0, r1, #0
   12b7c:	bx	lr

00012b80 <table_compare_int32@@Base>:
   12b80:	cmp	r0, #0
   12b84:	beq	12bb4 <table_compare_int32@@Base+0x34>
   12b88:	cmp	r1, #0
   12b8c:	beq	12bac <table_compare_int32@@Base+0x2c>
   12b90:	ldr	r2, [r0]
   12b94:	ldr	r3, [r1]
   12b98:	cmp	r2, r3
   12b9c:	bgt	12bac <table_compare_int32@@Base+0x2c>
   12ba0:	mvnlt	r0, #0
   12ba4:	movge	r0, #0
   12ba8:	bx	lr
   12bac:	mov	r0, #1
   12bb0:	bx	lr
   12bb4:	adds	r1, r1, #0
   12bb8:	movne	r1, #1
   12bbc:	rsb	r0, r1, #0
   12bc0:	bx	lr

00012bc4 <table_compare_uint32@@Base>:
   12bc4:	cmp	r0, #0
   12bc8:	beq	12bf8 <table_compare_uint32@@Base+0x34>
   12bcc:	cmp	r1, #0
   12bd0:	beq	12bf0 <table_compare_uint32@@Base+0x2c>
   12bd4:	ldr	r2, [r0]
   12bd8:	ldr	r3, [r1]
   12bdc:	cmp	r2, r3
   12be0:	bhi	12bf0 <table_compare_uint32@@Base+0x2c>
   12be4:	mvncc	r0, #0
   12be8:	movcs	r0, #0
   12bec:	bx	lr
   12bf0:	mov	r0, #1
   12bf4:	bx	lr
   12bf8:	adds	r1, r1, #0
   12bfc:	movne	r1, #1
   12c00:	rsb	r0, r1, #0
   12c04:	bx	lr

00012c08 <table_compare_int8@@Base>:
   12c08:	cmp	r0, #0
   12c0c:	beq	12c3c <table_compare_int8@@Base+0x34>
   12c10:	cmp	r1, #0
   12c14:	beq	12c34 <table_compare_int8@@Base+0x2c>
   12c18:	ldrsb	r2, [r0]
   12c1c:	ldrsb	r3, [r1]
   12c20:	cmp	r2, r3
   12c24:	bgt	12c34 <table_compare_int8@@Base+0x2c>
   12c28:	mvnlt	r0, #0
   12c2c:	movge	r0, #0
   12c30:	bx	lr
   12c34:	mov	r0, #1
   12c38:	bx	lr
   12c3c:	adds	r1, r1, #0
   12c40:	movne	r1, #1
   12c44:	rsb	r0, r1, #0
   12c48:	bx	lr

00012c4c <table_compare_char@@Base>:
   12c4c:	cmp	r0, #0
   12c50:	beq	12c80 <table_compare_char@@Base+0x34>
   12c54:	cmp	r1, #0
   12c58:	beq	12c78 <table_compare_char@@Base+0x2c>
   12c5c:	ldrb	r2, [r0]
   12c60:	ldrb	r3, [r1]
   12c64:	cmp	r2, r3
   12c68:	bhi	12c78 <table_compare_char@@Base+0x2c>
   12c6c:	mvncc	r0, #0
   12c70:	movcs	r0, #0
   12c74:	bx	lr
   12c78:	mov	r0, #1
   12c7c:	bx	lr
   12c80:	adds	r1, r1, #0
   12c84:	movne	r1, #1
   12c88:	rsb	r0, r1, #0
   12c8c:	bx	lr

00012c90 <table_compare_short@@Base>:
   12c90:	cmp	r0, #0
   12c94:	beq	12cc4 <table_compare_short@@Base+0x34>
   12c98:	cmp	r1, #0
   12c9c:	beq	12cbc <table_compare_short@@Base+0x2c>
   12ca0:	ldrsh	r2, [r0]
   12ca4:	ldrsh	r3, [r1]
   12ca8:	cmp	r2, r3
   12cac:	bgt	12cbc <table_compare_short@@Base+0x2c>
   12cb0:	mvnlt	r0, #0
   12cb4:	movge	r0, #0
   12cb8:	bx	lr
   12cbc:	mov	r0, #1
   12cc0:	bx	lr
   12cc4:	adds	r1, r1, #0
   12cc8:	movne	r1, #1
   12ccc:	rsb	r0, r1, #0
   12cd0:	bx	lr

00012cd4 <table_compare_ushort@@Base>:
   12cd4:	cmp	r0, #0
   12cd8:	beq	12d08 <table_compare_ushort@@Base+0x34>
   12cdc:	cmp	r1, #0
   12ce0:	beq	12d00 <table_compare_ushort@@Base+0x2c>
   12ce4:	ldrh	r2, [r0]
   12ce8:	ldrh	r3, [r1]
   12cec:	cmp	r2, r3
   12cf0:	bhi	12d00 <table_compare_ushort@@Base+0x2c>
   12cf4:	mvncc	r0, #0
   12cf8:	movcs	r0, #0
   12cfc:	bx	lr
   12d00:	mov	r0, #1
   12d04:	bx	lr
   12d08:	adds	r1, r1, #0
   12d0c:	movne	r1, #1
   12d10:	rsb	r0, r1, #0
   12d14:	bx	lr

00012d18 <table_compare_llong@@Base>:
   12d18:	cmp	r0, #0
   12d1c:	beq	12d60 <table_compare_llong@@Base+0x48>
   12d20:	cmp	r1, #0
   12d24:	beq	12d70 <table_compare_llong@@Base+0x58>
   12d28:	strd	r4, [sp, #-8]!
   12d2c:	ldrd	r2, [r1]
   12d30:	ldrd	r4, [r0]
   12d34:	cmp	r2, r4
   12d38:	sbcs	r1, r3, r5
   12d3c:	movlt	r0, #1
   12d40:	blt	12d54 <table_compare_llong@@Base+0x3c>
   12d44:	cmp	r4, r2
   12d48:	sbcs	r3, r5, r3
   12d4c:	mvnlt	r0, #0
   12d50:	movge	r0, #0
   12d54:	ldrd	r4, [sp]
   12d58:	add	sp, sp, #8
   12d5c:	bx	lr
   12d60:	adds	r1, r1, #0
   12d64:	movne	r1, #1
   12d68:	rsb	r0, r1, #0
   12d6c:	bx	lr
   12d70:	mov	r0, #1
   12d74:	bx	lr

00012d78 <table_compare_uint64@@Base>:
   12d78:	cmp	r0, #0
   12d7c:	beq	12db8 <table_compare_uint64@@Base+0x40>
   12d80:	cmp	r1, #0
   12d84:	beq	12dc8 <table_compare_uint64@@Base+0x50>
   12d88:	strd	r4, [sp, #-8]!
   12d8c:	ldrd	r2, [r1]
   12d90:	ldrd	r4, [r0]
   12d94:	cmp	r5, r3
   12d98:	cmpeq	r4, r2
   12d9c:	movhi	r0, #1
   12da0:	bhi	12dac <table_compare_uint64@@Base+0x34>
   12da4:	mvncc	r0, #0
   12da8:	movcs	r0, #0
   12dac:	ldrd	r4, [sp]
   12db0:	add	sp, sp, #8
   12db4:	bx	lr
   12db8:	adds	r1, r1, #0
   12dbc:	movne	r1, #1
   12dc0:	rsb	r0, r1, #0
   12dc4:	bx	lr
   12dc8:	mov	r0, #1
   12dcc:	bx	lr

00012dd0 <table_compare_long@@Base>:
   12dd0:	cmp	r0, #0
   12dd4:	beq	12e04 <table_compare_long@@Base+0x34>
   12dd8:	cmp	r1, #0
   12ddc:	beq	12dfc <table_compare_long@@Base+0x2c>
   12de0:	ldr	r2, [r0]
   12de4:	ldr	r3, [r1]
   12de8:	cmp	r2, r3
   12dec:	bgt	12dfc <table_compare_long@@Base+0x2c>
   12df0:	mvnlt	r0, #0
   12df4:	movge	r0, #0
   12df8:	bx	lr
   12dfc:	mov	r0, #1
   12e00:	bx	lr
   12e04:	adds	r1, r1, #0
   12e08:	movne	r1, #1
   12e0c:	rsb	r0, r1, #0
   12e10:	bx	lr

00012e14 <table_compare_ullong@@Base>:
   12e14:	cmp	r0, #0
   12e18:	beq	12e48 <table_compare_ullong@@Base+0x34>
   12e1c:	cmp	r1, #0
   12e20:	beq	12e40 <table_compare_ullong@@Base+0x2c>
   12e24:	ldr	r2, [r0]
   12e28:	ldr	r3, [r1]
   12e2c:	cmp	r2, r3
   12e30:	bhi	12e40 <table_compare_ullong@@Base+0x2c>
   12e34:	mvncc	r0, #0
   12e38:	movcs	r0, #0
   12e3c:	bx	lr
   12e40:	mov	r0, #1
   12e44:	bx	lr
   12e48:	adds	r1, r1, #0
   12e4c:	movne	r1, #1
   12e50:	rsb	r0, r1, #0
   12e54:	bx	lr

00012e58 <table_compare_float@@Base>:
   12e58:	cmp	r0, #0
   12e5c:	beq	12e90 <table_compare_float@@Base+0x38>
   12e60:	cmp	r1, #0
   12e64:	beq	12e88 <table_compare_float@@Base+0x30>
   12e68:	vldr	s14, [r0]
   12e6c:	vldr	s15, [r1]
   12e70:	vcmpe.f32	s14, s15
   12e74:	vmrs	APSR_nzcv, fpscr
   12e78:	bgt	12e88 <table_compare_float@@Base+0x30>
   12e7c:	mvnmi	r0, #0
   12e80:	movpl	r0, #0
   12e84:	bx	lr
   12e88:	mov	r0, #1
   12e8c:	bx	lr
   12e90:	adds	r1, r1, #0
   12e94:	movne	r1, #1
   12e98:	rsb	r0, r1, #0
   12e9c:	bx	lr

00012ea0 <table_compare_double@@Base>:
   12ea0:	cmp	r0, #0
   12ea4:	beq	12ed8 <table_compare_double@@Base+0x38>
   12ea8:	cmp	r1, #0
   12eac:	beq	12ed0 <table_compare_double@@Base+0x30>
   12eb0:	vldr	d6, [r0]
   12eb4:	vldr	d7, [r1]
   12eb8:	vcmpe.f64	d6, d7
   12ebc:	vmrs	APSR_nzcv, fpscr
   12ec0:	bgt	12ed0 <table_compare_double@@Base+0x30>
   12ec4:	mvnmi	r0, #0
   12ec8:	movpl	r0, #0
   12ecc:	bx	lr
   12ed0:	mov	r0, #1
   12ed4:	bx	lr
   12ed8:	adds	r1, r1, #0
   12edc:	movne	r1, #1
   12ee0:	rsb	r0, r1, #0
   12ee4:	bx	lr

00012ee8 <table_compare_ldouble@@Base>:
   12ee8:	cmp	r0, #0
   12eec:	beq	12f20 <table_compare_ldouble@@Base+0x38>
   12ef0:	cmp	r1, #0
   12ef4:	beq	12f18 <table_compare_ldouble@@Base+0x30>
   12ef8:	vldr	d6, [r0]
   12efc:	vldr	d7, [r1]
   12f00:	vcmpe.f64	d6, d7
   12f04:	vmrs	APSR_nzcv, fpscr
   12f08:	bgt	12f18 <table_compare_ldouble@@Base+0x30>
   12f0c:	mvnmi	r0, #0
   12f10:	movpl	r0, #0
   12f14:	bx	lr
   12f18:	mov	r0, #1
   12f1c:	bx	lr
   12f20:	adds	r1, r1, #0
   12f24:	movne	r1, #1
   12f28:	rsb	r0, r1, #0
   12f2c:	bx	lr

00012f30 <table_compare_uchar@@Base>:
   12f30:	cmp	r0, #0
   12f34:	beq	12f64 <table_compare_uchar@@Base+0x34>
   12f38:	cmp	r1, #0
   12f3c:	beq	12f5c <table_compare_uchar@@Base+0x2c>
   12f40:	ldrb	r2, [r0]
   12f44:	ldrb	r3, [r1]
   12f48:	cmp	r2, r3
   12f4c:	bhi	12f5c <table_compare_uchar@@Base+0x2c>
   12f50:	mvncc	r0, #0
   12f54:	movcs	r0, #0
   12f58:	bx	lr
   12f5c:	mov	r0, #1
   12f60:	bx	lr
   12f64:	adds	r1, r1, #0
   12f68:	movne	r1, #1
   12f6c:	rsb	r0, r1, #0
   12f70:	bx	lr

00012f74 <table_compare_int@@Base>:
   12f74:	cmp	r0, #0
   12f78:	beq	12fa8 <table_compare_int@@Base+0x34>
   12f7c:	cmp	r1, #0
   12f80:	beq	12fa0 <table_compare_int@@Base+0x2c>
   12f84:	ldr	r2, [r0]
   12f88:	ldr	r3, [r1]
   12f8c:	cmp	r2, r3
   12f90:	bgt	12fa0 <table_compare_int@@Base+0x2c>
   12f94:	mvnlt	r0, #0
   12f98:	movge	r0, #0
   12f9c:	bx	lr
   12fa0:	mov	r0, #1
   12fa4:	bx	lr
   12fa8:	adds	r1, r1, #0
   12fac:	movne	r1, #1
   12fb0:	rsb	r0, r1, #0
   12fb4:	bx	lr

00012fb8 <table_compare_uint@@Base>:
   12fb8:	cmp	r0, #0
   12fbc:	beq	12fec <table_compare_uint@@Base+0x34>
   12fc0:	cmp	r1, #0
   12fc4:	beq	12fe4 <table_compare_uint@@Base+0x2c>
   12fc8:	ldr	r2, [r0]
   12fcc:	ldr	r3, [r1]
   12fd0:	cmp	r2, r3
   12fd4:	bhi	12fe4 <table_compare_uint@@Base+0x2c>
   12fd8:	mvncc	r0, #0
   12fdc:	movcs	r0, #0
   12fe0:	bx	lr
   12fe4:	mov	r0, #1
   12fe8:	bx	lr
   12fec:	adds	r1, r1, #0
   12ff0:	movne	r1, #1
   12ff4:	rsb	r0, r1, #0
   12ff8:	bx	lr

00012ffc <table_compare_uint8@@Base>:
   12ffc:	cmp	r0, #0
   13000:	beq	13030 <table_compare_uint8@@Base+0x34>
   13004:	cmp	r1, #0
   13008:	beq	13028 <table_compare_uint8@@Base+0x2c>
   1300c:	ldrb	r2, [r0]
   13010:	ldrb	r3, [r1]
   13014:	cmp	r2, r3
   13018:	bhi	13028 <table_compare_uint8@@Base+0x2c>
   1301c:	mvncc	r0, #0
   13020:	movcs	r0, #0
   13024:	bx	lr
   13028:	mov	r0, #1
   1302c:	bx	lr
   13030:	adds	r1, r1, #0
   13034:	movne	r1, #1
   13038:	rsb	r0, r1, #0
   1303c:	bx	lr

00013040 <table_compare_int16@@Base>:
   13040:	cmp	r0, #0
   13044:	beq	13074 <table_compare_int16@@Base+0x34>
   13048:	cmp	r1, #0
   1304c:	beq	1306c <table_compare_int16@@Base+0x2c>
   13050:	ldrsh	r2, [r0]
   13054:	ldrsh	r3, [r1]
   13058:	cmp	r2, r3
   1305c:	bgt	1306c <table_compare_int16@@Base+0x2c>
   13060:	mvnlt	r0, #0
   13064:	movge	r0, #0
   13068:	bx	lr
   1306c:	mov	r0, #1
   13070:	bx	lr
   13074:	adds	r1, r1, #0
   13078:	movne	r1, #1
   1307c:	rsb	r0, r1, #0
   13080:	bx	lr

00013084 <table_compare_uint16@@Base>:
   13084:	cmp	r0, #0
   13088:	beq	130b8 <table_compare_uint16@@Base+0x34>
   1308c:	cmp	r1, #0
   13090:	beq	130b0 <table_compare_uint16@@Base+0x2c>
   13094:	ldrh	r2, [r0]
   13098:	ldrh	r3, [r1]
   1309c:	cmp	r2, r3
   130a0:	bhi	130b0 <table_compare_uint16@@Base+0x2c>
   130a4:	mvncc	r0, #0
   130a8:	movcs	r0, #0
   130ac:	bx	lr
   130b0:	mov	r0, #1
   130b4:	bx	lr
   130b8:	adds	r1, r1, #0
   130bc:	movne	r1, #1
   130c0:	rsb	r0, r1, #0
   130c4:	bx	lr

000130c8 <table_compare_ulong@@Base>:
   130c8:	cmp	r0, #0
   130cc:	beq	130fc <table_compare_ulong@@Base+0x34>
   130d0:	cmp	r1, #0
   130d4:	beq	130f4 <table_compare_ulong@@Base+0x2c>
   130d8:	ldr	r2, [r0]
   130dc:	ldr	r3, [r1]
   130e0:	cmp	r2, r3
   130e4:	bhi	130f4 <table_compare_ulong@@Base+0x2c>
   130e8:	mvncc	r0, #0
   130ec:	movcs	r0, #0
   130f0:	bx	lr
   130f4:	mov	r0, #1
   130f8:	bx	lr
   130fc:	adds	r1, r1, #0
   13100:	movne	r1, #1
   13104:	rsb	r0, r1, #0
   13108:	bx	lr

0001310c <table_compare_int64@@Base>:
   1310c:	cmp	r0, #0
   13110:	beq	13154 <table_compare_int64@@Base+0x48>
   13114:	cmp	r1, #0
   13118:	beq	13164 <table_compare_int64@@Base+0x58>
   1311c:	strd	r4, [sp, #-8]!
   13120:	ldrd	r2, [r1]
   13124:	ldrd	r4, [r0]
   13128:	cmp	r2, r4
   1312c:	sbcs	r1, r3, r5
   13130:	movlt	r0, #1
   13134:	blt	13148 <table_compare_int64@@Base+0x3c>
   13138:	cmp	r4, r2
   1313c:	sbcs	r3, r5, r3
   13140:	mvnlt	r0, #0
   13144:	movge	r0, #0
   13148:	ldrd	r4, [sp]
   1314c:	add	sp, sp, #8
   13150:	bx	lr
   13154:	adds	r1, r1, #0
   13158:	movne	r1, #1
   1315c:	rsb	r0, r1, #0
   13160:	bx	lr
   13164:	mov	r0, #1
   13168:	bx	lr

0001316c <table_get_default_compare_function_for_data_type@@Base>:
   1316c:	cmp	r0, #23
   13170:	movwls	r3, #21812	; 0x5534
   13174:	movtls	r3, #1
   13178:	ldrls	r0, [r3, r0, lsl #2]
   1317c:	movhi	r0, #0
   13180:	bx	lr

00013184 <table_get@@Base>:
   13184:	str	r4, [sp, #-8]!
   13188:	str	lr, [sp, #4]
   1318c:	bl	15438 <table_get_cell_ptr@@Base>
   13190:	ldr	r4, [sp]
   13194:	add	sp, sp, #4
   13198:	ldr	r0, [r0]
   1319c:	pop	{pc}		; (ldr pc, [sp], #4)

000131a0 <table_get_bool@@Base>:
   131a0:	str	r4, [sp, #-8]!
   131a4:	str	lr, [sp, #4]
   131a8:	bl	15438 <table_get_cell_ptr@@Base>
   131ac:	ldr	r3, [r0]
   131b0:	ldr	r4, [sp]
   131b4:	add	sp, sp, #4
   131b8:	ldrb	r0, [r3]
   131bc:	pop	{pc}		; (ldr pc, [sp], #4)

000131c0 <table_get_int@@Base>:
   131c0:	str	r4, [sp, #-8]!
   131c4:	str	lr, [sp, #4]
   131c8:	bl	15438 <table_get_cell_ptr@@Base>
   131cc:	ldr	r3, [r0]
   131d0:	ldr	r4, [sp]
   131d4:	add	sp, sp, #4
   131d8:	ldr	r0, [r3]
   131dc:	pop	{pc}		; (ldr pc, [sp], #4)

000131e0 <table_get_uint@@Base>:
   131e0:	str	r4, [sp, #-8]!
   131e4:	str	lr, [sp, #4]
   131e8:	bl	15438 <table_get_cell_ptr@@Base>
   131ec:	ldr	r3, [r0]
   131f0:	ldr	r4, [sp]
   131f4:	add	sp, sp, #4
   131f8:	ldr	r0, [r3]
   131fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013200 <table_get_int8@@Base>:
   13200:	str	r4, [sp, #-8]!
   13204:	str	lr, [sp, #4]
   13208:	bl	15438 <table_get_cell_ptr@@Base>
   1320c:	ldr	r3, [r0]
   13210:	ldr	r4, [sp]
   13214:	add	sp, sp, #4
   13218:	ldrsb	r0, [r3]
   1321c:	pop	{pc}		; (ldr pc, [sp], #4)

00013220 <table_get_uint8@@Base>:
   13220:	str	r4, [sp, #-8]!
   13224:	str	lr, [sp, #4]
   13228:	bl	15438 <table_get_cell_ptr@@Base>
   1322c:	ldr	r3, [r0]
   13230:	ldr	r4, [sp]
   13234:	add	sp, sp, #4
   13238:	ldrb	r0, [r3]
   1323c:	pop	{pc}		; (ldr pc, [sp], #4)

00013240 <table_get_int16@@Base>:
   13240:	str	r4, [sp, #-8]!
   13244:	str	lr, [sp, #4]
   13248:	bl	15438 <table_get_cell_ptr@@Base>
   1324c:	ldr	r3, [r0]
   13250:	ldr	r4, [sp]
   13254:	add	sp, sp, #4
   13258:	ldrsh	r0, [r3]
   1325c:	pop	{pc}		; (ldr pc, [sp], #4)

00013260 <table_get_uint16@@Base>:
   13260:	str	r4, [sp, #-8]!
   13264:	str	lr, [sp, #4]
   13268:	bl	15438 <table_get_cell_ptr@@Base>
   1326c:	ldr	r3, [r0]
   13270:	ldr	r4, [sp]
   13274:	add	sp, sp, #4
   13278:	ldrh	r0, [r3]
   1327c:	pop	{pc}		; (ldr pc, [sp], #4)

00013280 <table_get_int32@@Base>:
   13280:	str	r4, [sp, #-8]!
   13284:	str	lr, [sp, #4]
   13288:	bl	15438 <table_get_cell_ptr@@Base>
   1328c:	ldr	r3, [r0]
   13290:	ldr	r4, [sp]
   13294:	add	sp, sp, #4
   13298:	ldr	r0, [r3]
   1329c:	pop	{pc}		; (ldr pc, [sp], #4)

000132a0 <table_get_uint32@@Base>:
   132a0:	str	r4, [sp, #-8]!
   132a4:	str	lr, [sp, #4]
   132a8:	bl	15438 <table_get_cell_ptr@@Base>
   132ac:	ldr	r3, [r0]
   132b0:	ldr	r4, [sp]
   132b4:	add	sp, sp, #4
   132b8:	ldr	r0, [r3]
   132bc:	pop	{pc}		; (ldr pc, [sp], #4)

000132c0 <table_get_int64@@Base>:
   132c0:	str	r4, [sp, #-8]!
   132c4:	str	lr, [sp, #4]
   132c8:	bl	15438 <table_get_cell_ptr@@Base>
   132cc:	ldr	r3, [r0]
   132d0:	ldr	r4, [sp]
   132d4:	add	sp, sp, #4
   132d8:	ldrd	r0, [r3]
   132dc:	pop	{pc}		; (ldr pc, [sp], #4)

000132e0 <table_get_uint64@@Base>:
   132e0:	str	r4, [sp, #-8]!
   132e4:	str	lr, [sp, #4]
   132e8:	bl	15438 <table_get_cell_ptr@@Base>
   132ec:	ldr	r3, [r0]
   132f0:	ldr	r4, [sp]
   132f4:	add	sp, sp, #4
   132f8:	ldrd	r0, [r3]
   132fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013300 <table_get_short@@Base>:
   13300:	str	r4, [sp, #-8]!
   13304:	str	lr, [sp, #4]
   13308:	bl	15438 <table_get_cell_ptr@@Base>
   1330c:	ldr	r3, [r0]
   13310:	ldr	r4, [sp]
   13314:	add	sp, sp, #4
   13318:	ldrsh	r0, [r3]
   1331c:	pop	{pc}		; (ldr pc, [sp], #4)

00013320 <table_get_ushort@@Base>:
   13320:	str	r4, [sp, #-8]!
   13324:	str	lr, [sp, #4]
   13328:	bl	15438 <table_get_cell_ptr@@Base>
   1332c:	ldr	r3, [r0]
   13330:	ldr	r4, [sp]
   13334:	add	sp, sp, #4
   13338:	ldrh	r0, [r3]
   1333c:	pop	{pc}		; (ldr pc, [sp], #4)

00013340 <table_get_long@@Base>:
   13340:	str	r4, [sp, #-8]!
   13344:	str	lr, [sp, #4]
   13348:	bl	15438 <table_get_cell_ptr@@Base>
   1334c:	ldr	r3, [r0]
   13350:	ldr	r4, [sp]
   13354:	add	sp, sp, #4
   13358:	ldr	r0, [r3]
   1335c:	pop	{pc}		; (ldr pc, [sp], #4)

00013360 <table_get_ulong@@Base>:
   13360:	str	r4, [sp, #-8]!
   13364:	str	lr, [sp, #4]
   13368:	bl	15438 <table_get_cell_ptr@@Base>
   1336c:	ldr	r3, [r0]
   13370:	ldr	r4, [sp]
   13374:	add	sp, sp, #4
   13378:	ldr	r0, [r3]
   1337c:	pop	{pc}		; (ldr pc, [sp], #4)

00013380 <table_get_llong@@Base>:
   13380:	str	r4, [sp, #-8]!
   13384:	str	lr, [sp, #4]
   13388:	bl	15438 <table_get_cell_ptr@@Base>
   1338c:	ldr	r3, [r0]
   13390:	ldr	r4, [sp]
   13394:	add	sp, sp, #4
   13398:	ldrd	r0, [r3]
   1339c:	pop	{pc}		; (ldr pc, [sp], #4)

000133a0 <table_get_ullong@@Base>:
   133a0:	str	r4, [sp, #-8]!
   133a4:	str	lr, [sp, #4]
   133a8:	bl	15438 <table_get_cell_ptr@@Base>
   133ac:	ldr	r3, [r0]
   133b0:	ldr	r4, [sp]
   133b4:	add	sp, sp, #4
   133b8:	ldrd	r0, [r3]
   133bc:	pop	{pc}		; (ldr pc, [sp], #4)

000133c0 <table_get_float@@Base>:
   133c0:	str	r4, [sp, #-8]!
   133c4:	str	lr, [sp, #4]
   133c8:	bl	15438 <table_get_cell_ptr@@Base>
   133cc:	ldr	r3, [r0]
   133d0:	ldr	r4, [sp]
   133d4:	add	sp, sp, #4
   133d8:	vldr	s0, [r3]
   133dc:	pop	{pc}		; (ldr pc, [sp], #4)

000133e0 <table_get_double@@Base>:
   133e0:	str	r4, [sp, #-8]!
   133e4:	str	lr, [sp, #4]
   133e8:	bl	15438 <table_get_cell_ptr@@Base>
   133ec:	ldr	r3, [r0]
   133f0:	ldr	r4, [sp]
   133f4:	add	sp, sp, #4
   133f8:	vldr	d0, [r3]
   133fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013400 <table_get_ldouble@@Base>:
   13400:	str	r4, [sp, #-8]!
   13404:	str	lr, [sp, #4]
   13408:	bl	15438 <table_get_cell_ptr@@Base>
   1340c:	ldr	r3, [r0]
   13410:	ldr	r4, [sp]
   13414:	add	sp, sp, #4
   13418:	vldr	d0, [r3]
   1341c:	pop	{pc}		; (ldr pc, [sp], #4)

00013420 <table_get_char@@Base>:
   13420:	str	r4, [sp, #-8]!
   13424:	str	lr, [sp, #4]
   13428:	bl	15438 <table_get_cell_ptr@@Base>
   1342c:	ldr	r3, [r0]
   13430:	ldr	r4, [sp]
   13434:	add	sp, sp, #4
   13438:	ldrb	r0, [r3]
   1343c:	pop	{pc}		; (ldr pc, [sp], #4)

00013440 <table_get_uchar@@Base>:
   13440:	str	r4, [sp, #-8]!
   13444:	str	lr, [sp, #4]
   13448:	bl	15438 <table_get_cell_ptr@@Base>
   1344c:	ldr	r3, [r0]
   13450:	ldr	r4, [sp]
   13454:	add	sp, sp, #4
   13458:	ldrb	r0, [r3]
   1345c:	pop	{pc}		; (ldr pc, [sp], #4)

00013460 <table_get_string@@Base>:
   13460:	str	r4, [sp, #-8]!
   13464:	str	lr, [sp, #4]
   13468:	bl	15438 <table_get_cell_ptr@@Base>
   1346c:	ldr	r4, [sp]
   13470:	add	sp, sp, #4
   13474:	ldr	r0, [r0]
   13478:	pop	{pc}		; (ldr pc, [sp], #4)

0001347c <table_get_ptr@@Base>:
   1347c:	str	r4, [sp, #-8]!
   13480:	str	lr, [sp, #4]
   13484:	bl	15438 <table_get_cell_ptr@@Base>
   13488:	ldr	r4, [sp]
   1348c:	add	sp, sp, #4
   13490:	ldr	r0, [r0]
   13494:	pop	{pc}		; (ldr pc, [sp], #4)

00013498 <table_row_init@@Base>:
   13498:	ldr	r3, [r0, #12]
   1349c:	strd	r4, [sp, #-16]!
   134a0:	mov	r5, r1
   134a4:	ldr	r4, [r0, #16]
   134a8:	str	r6, [sp, #8]
   134ac:	str	lr, [sp, #12]
   134b0:	lsl	r0, r3, #2
   134b4:	bl	11a84 <malloc@plt>
   134b8:	str	r0, [r4, r5, lsl #2]
   134bc:	ldrd	r4, [sp]
   134c0:	ldr	r6, [sp, #8]
   134c4:	add	sp, sp, #12
   134c8:	pop	{pc}		; (ldr pc, [sp], #4)

000134cc <table_row_destroy@@Base>:
   134cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   134d0:	mov	r5, r1
   134d4:	strd	r6, [sp, #8]
   134d8:	mov	r6, r0
   134dc:	str	r8, [sp, #16]
   134e0:	str	lr, [sp, #20]
   134e4:	bl	12710 <table_get_column_length@@Base>
   134e8:	subs	r7, r0, #0
   134ec:	ldr	r8, [r6, #16]
   134f0:	ble	13514 <table_row_destroy@@Base+0x48>
   134f4:	mov	r4, #0
   134f8:	mov	r2, r4
   134fc:	mov	r1, r5
   13500:	add	r4, r4, #1
   13504:	mov	r0, r6
   13508:	bl	1497c <table_cell_destroy@@Base>
   1350c:	cmp	r7, r4
   13510:	bne	134f8 <table_row_destroy@@Base+0x2c>
   13514:	ldr	r0, [r8, r5, lsl #2]
   13518:	cmp	r0, #0
   1351c:	beq	13538 <table_row_destroy@@Base+0x6c>
   13520:	ldrd	r4, [sp]
   13524:	ldrd	r6, [sp, #8]
   13528:	ldr	r8, [sp, #16]
   1352c:	ldr	lr, [sp, #20]
   13530:	add	sp, sp, #24
   13534:	b	11a60 <free@plt>
   13538:	ldrd	r4, [sp]
   1353c:	ldrd	r6, [sp, #8]
   13540:	ldr	r8, [sp, #16]
   13544:	add	sp, sp, #20
   13548:	pop	{pc}		; (ldr pc, [sp], #4)

0001354c <table_get_row_length@@Base>:
   1354c:	ldr	r0, [r0, #20]
   13550:	bx	lr

00013554 <table_add_row@@Base>:
   13554:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13558:	mov	r4, r0
   1355c:	ldr	r5, [r0, #20]
   13560:	ldr	r3, [r0, #24]
   13564:	strd	r6, [sp, #8]
   13568:	str	r8, [sp, #16]
   1356c:	str	lr, [sp, #20]
   13570:	udiv	r2, r5, r3
   13574:	mls	r2, r3, r2, r5
   13578:	cmp	r2, #0
   1357c:	beq	135fc <table_add_row@@Base+0xa8>
   13580:	mov	r0, r4
   13584:	bl	12710 <table_get_column_length@@Base>
   13588:	mov	r7, r0
   1358c:	ldr	r0, [r4, #12]
   13590:	ldr	r6, [r4, #16]
   13594:	lsl	r0, r0, #2
   13598:	bl	11a84 <malloc@plt>
   1359c:	cmp	r7, #0
   135a0:	str	r0, [r6, r5, lsl #2]
   135a4:	ble	135c8 <table_add_row@@Base+0x74>
   135a8:	mov	r6, #0
   135ac:	mov	r2, r6
   135b0:	mov	r1, r5
   135b4:	add	r6, r6, #1
   135b8:	mov	r0, r4
   135bc:	bl	14954 <table_cell_init@@Base>
   135c0:	cmp	r7, r6
   135c4:	bne	135ac <table_add_row@@Base+0x58>
   135c8:	mov	r0, r4
   135cc:	mov	r3, #2
   135d0:	ldr	r1, [r4, #20]
   135d4:	mvn	r2, #0
   135d8:	bl	125d8 <table_notify@@Base>
   135dc:	ldr	r0, [r4, #20]
   135e0:	ldrd	r6, [sp, #8]
   135e4:	ldr	r8, [sp, #16]
   135e8:	add	r3, r0, #1
   135ec:	str	r3, [r4, #20]
   135f0:	ldrd	r4, [sp]
   135f4:	add	sp, sp, #20
   135f8:	pop	{pc}		; (ldr pc, [sp], #4)
   135fc:	ldr	r2, [r4, #28]
   13600:	ldr	r0, [r0, #16]
   13604:	add	r3, r3, r2
   13608:	lsl	r1, r3, #2
   1360c:	str	r3, [r4, #28]
   13610:	bl	11a6c <realloc@plt>
   13614:	str	r0, [r4, #16]
   13618:	ldr	r5, [r4, #20]
   1361c:	b	13580 <table_add_row@@Base+0x2c>

00013620 <table_remove_row@@Base>:
   13620:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13624:	mov	r4, r0
   13628:	mov	r5, r1
   1362c:	strd	r6, [sp, #8]
   13630:	str	r8, [sp, #16]
   13634:	str	lr, [sp, #20]
   13638:	ldr	r7, [r0, #20]
   1363c:	bl	12710 <table_get_column_length@@Base>
   13640:	subs	r8, r0, #0
   13644:	ble	1368c <table_remove_row@@Base+0x6c>
   13648:	mov	r6, #0
   1364c:	mov	r1, r6
   13650:	mov	r0, r4
   13654:	bl	12794 <table_get_column_data_type@@Base>
   13658:	cmp	r0, #23
   1365c:	mov	r2, r6
   13660:	mov	r1, r5
   13664:	add	r6, r6, #1
   13668:	mov	r0, r4
   1366c:	beq	13684 <table_remove_row@@Base+0x64>
   13670:	bl	15438 <table_get_cell_ptr@@Base>
   13674:	ldr	r3, [r0]
   13678:	subs	r0, r3, #0
   1367c:	beq	13684 <table_remove_row@@Base+0x64>
   13680:	bl	11a60 <free@plt>
   13684:	cmp	r8, r6
   13688:	bne	1364c <table_remove_row@@Base+0x2c>
   1368c:	ldr	r3, [r4, #16]
   13690:	lsl	r6, r5, #2
   13694:	ldr	r0, [r3, r5, lsl #2]
   13698:	cmp	r0, #0
   1369c:	beq	136a4 <table_remove_row@@Base+0x84>
   136a0:	bl	11a60 <free@plt>
   136a4:	sub	r3, r7, #1
   136a8:	cmp	r5, r3
   136ac:	bge	136d4 <table_remove_row@@Base+0xb4>
   136b0:	mov	r2, r5
   136b4:	ldr	r1, [r4, #16]
   136b8:	add	r2, r2, #1
   136bc:	cmp	r2, r3
   136c0:	add	r0, r1, r6
   136c4:	add	r6, r6, #4
   136c8:	ldr	r1, [r1, r6]
   136cc:	str	r1, [r0]
   136d0:	bne	136b4 <table_remove_row@@Base+0x94>
   136d4:	ldr	r3, [r4, #20]
   136d8:	ldr	r1, [r4, #24]
   136dc:	sub	r3, r3, #1
   136e0:	udiv	r2, r3, r1
   136e4:	str	r3, [r4, #20]
   136e8:	mls	r3, r1, r2, r3
   136ec:	cmp	r3, #0
   136f0:	beq	13720 <table_remove_row@@Base+0x100>
   136f4:	mov	r0, r4
   136f8:	mov	r1, r5
   136fc:	mov	r3, #4
   13700:	mvn	r2, #0
   13704:	bl	125d8 <table_notify@@Base>
   13708:	ldrd	r4, [sp]
   1370c:	mov	r0, #0
   13710:	ldrd	r6, [sp, #8]
   13714:	ldr	r8, [sp, #16]
   13718:	add	sp, sp, #20
   1371c:	pop	{pc}		; (ldr pc, [sp], #4)
   13720:	ldr	r0, [r4, #16]
   13724:	ldr	r3, [r4, #28]
   13728:	sub	r3, r3, r1
   1372c:	lsl	r1, r3, #2
   13730:	str	r3, [r4, #28]
   13734:	bl	11a6c <realloc@plt>
   13738:	str	r0, [r4, #16]
   1373c:	b	136f4 <table_remove_row@@Base+0xd4>

00013740 <table_get_row_ptr@@Base>:
   13740:	ldr	r0, [r0, #16]
   13744:	add	r0, r0, r1, lsl #2
   13748:	bx	lr

0001374c <table_set_row_ptr@@Base>:
   1374c:	ldr	r2, [r2]
   13750:	ldr	r3, [r0, #16]
   13754:	str	r2, [r3, r1, lsl #2]
   13758:	bx	lr

0001375c <table_set@@Base>:
   1375c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13760:	mov	r5, r0
   13764:	ldr	r4, [sp, #32]
   13768:	strd	r6, [sp, #8]
   1376c:	mov	r6, r2
   13770:	mov	r7, r3
   13774:	strd	r8, [sp, #16]
   13778:	mov	r9, r1
   1377c:	str	sl, [sp, #24]
   13780:	str	lr, [sp, #28]
   13784:	bl	15438 <table_get_cell_ptr@@Base>
   13788:	mov	r8, r0
   1378c:	mov	r1, r6
   13790:	mov	r0, r5
   13794:	bl	12abc <table_get_col_ptr@@Base>
   13798:	cmp	r4, #23
   1379c:	ldrls	pc, [pc, r4, lsl #2]
   137a0:	b	13810 <table_set@@Base+0xb4>
   137a4:	andeq	r3, r1, r8, asr #19
   137a8:			; <UNDEFINED> instruction: 0x000139b8
   137ac:	andeq	r3, r1, r8, lsr #19
   137b0:	muleq	r1, r8, r9
   137b4:	andeq	r3, r1, r8, lsl #19
   137b8:	andeq	r3, r1, r4, ror #18
   137bc:	andeq	r3, r1, r4, asr r9
   137c0:	andeq	r3, r1, r4, asr #18
   137c4:	andeq	r3, r1, r8, lsl #20
   137c8:	strdeq	r3, [r1], -r8
   137cc:	andeq	r3, r1, r8, ror #19
   137d0:	ldrdeq	r3, [r1], -r8
   137d4:	andeq	r3, r1, r4, asr #20
   137d8:	andeq	r3, r1, r4, lsr sl
   137dc:	andeq	r3, r1, r4, lsl #16
   137e0:	andeq	r3, r1, r4, lsr r9
   137e4:	andeq	r3, r1, r0, lsl r9
   137e8:	andeq	r3, r1, r0, lsl #18
   137ec:	ldrdeq	r3, [r1], -r4
   137f0:	andeq	r3, r1, r4, asr #17
   137f4:			; <UNDEFINED> instruction: 0x000138b4
   137f8:	andeq	r3, r1, ip, ror r8
   137fc:	andeq	r3, r1, r8, asr r8
   13800:	andeq	r3, r1, ip, lsr #16
   13804:	ldr	r3, [r0, #4]
   13808:	cmp	r3, #14
   1380c:	beq	138e0 <table_set@@Base+0x184>
   13810:	mvn	r0, #0
   13814:	ldrd	r4, [sp]
   13818:	ldrd	r6, [sp, #8]
   1381c:	ldrd	r8, [sp, #16]
   13820:	ldr	sl, [sp, #24]
   13824:	add	sp, sp, #28
   13828:	pop	{pc}		; (ldr pc, [sp], #4)
   1382c:	ldr	r3, [r0, #4]
   13830:	cmp	r3, #23
   13834:	bne	13810 <table_set@@Base+0xb4>
   13838:	str	r7, [r8]
   1383c:	mov	r0, r5
   13840:	mov	r2, r6
   13844:	mov	r1, r9
   13848:	mov	r3, #1
   1384c:	bl	125d8 <table_notify@@Base>
   13850:	mov	r0, #0
   13854:	b	13814 <table_set@@Base+0xb8>
   13858:	ldr	r3, [r0, #4]
   1385c:	cmp	r3, #22
   13860:	bne	13810 <table_set@@Base+0xb4>
   13864:	ldr	r0, [r8]
   13868:	cmp	r0, #0
   1386c:	beq	13a84 <table_set@@Base+0x328>
   13870:	ldrb	r3, [r7]
   13874:	strb	r3, [r0]
   13878:	b	1383c <table_set@@Base+0xe0>
   1387c:	ldr	r3, [r0, #4]
   13880:	cmp	r3, #21
   13884:	bne	13810 <table_set@@Base+0xb4>
   13888:	mov	r0, r7
   1388c:	bl	11aa8 <strlen@plt>
   13890:	add	r1, r0, #1
   13894:	ldr	r0, [r8]
   13898:	bl	11a6c <realloc@plt>
   1389c:	cmp	r0, #0
   138a0:	str	r0, [r8]
   138a4:	beq	13810 <table_set@@Base+0xb4>
   138a8:	mov	r1, r7
   138ac:	bl	11a78 <strcpy@plt>
   138b0:	b	1383c <table_set@@Base+0xe0>
   138b4:	ldr	r3, [r0, #4]
   138b8:	cmp	r3, #20
   138bc:	bne	13810 <table_set@@Base+0xb4>
   138c0:	b	13864 <table_set@@Base+0x108>
   138c4:	ldr	r3, [r0, #4]
   138c8:	cmp	r3, #19
   138cc:	bne	13810 <table_set@@Base+0xb4>
   138d0:	b	13864 <table_set@@Base+0x108>
   138d4:	ldr	r3, [r0, #4]
   138d8:	cmp	r3, #18
   138dc:	bne	13810 <table_set@@Base+0xb4>
   138e0:	ldr	r0, [r8]
   138e4:	cmp	r0, #0
   138e8:	beq	13a9c <table_set@@Base+0x340>
   138ec:	ldr	r2, [r7]
   138f0:	ldr	r3, [r7, #4]
   138f4:	str	r2, [r0]
   138f8:	str	r3, [r0, #4]
   138fc:	b	1383c <table_set@@Base+0xe0>
   13900:	ldr	r3, [r0, #4]
   13904:	cmp	r3, #17
   13908:	bne	13810 <table_set@@Base+0xb4>
   1390c:	b	138e0 <table_set@@Base+0x184>
   13910:	ldr	r3, [r0, #4]
   13914:	cmp	r3, #16
   13918:	bne	13810 <table_set@@Base+0xb4>
   1391c:	ldr	r0, [r8]
   13920:	cmp	r0, #0
   13924:	beq	13a54 <table_set@@Base+0x2f8>
   13928:	ldr	r3, [r7]
   1392c:	str	r3, [r0]
   13930:	b	1383c <table_set@@Base+0xe0>
   13934:	ldr	r3, [r0, #4]
   13938:	cmp	r3, #15
   1393c:	bne	13810 <table_set@@Base+0xb4>
   13940:	b	138e0 <table_set@@Base+0x184>
   13944:	ldr	r3, [r0, #4]
   13948:	cmp	r3, #7
   1394c:	beq	1391c <table_set@@Base+0x1c0>
   13950:	b	13810 <table_set@@Base+0xb4>
   13954:	ldr	r3, [r0, #4]
   13958:	cmp	r3, #6
   1395c:	beq	1391c <table_set@@Base+0x1c0>
   13960:	b	13810 <table_set@@Base+0xb4>
   13964:	ldr	r3, [r0, #4]
   13968:	cmp	r3, #5
   1396c:	bne	13810 <table_set@@Base+0xb4>
   13970:	ldr	r0, [r8]
   13974:	cmp	r0, #0
   13978:	beq	13a6c <table_set@@Base+0x310>
   1397c:	ldrh	r3, [r7]
   13980:	strh	r3, [r0]
   13984:	b	1383c <table_set@@Base+0xe0>
   13988:	ldr	r3, [r0, #4]
   1398c:	cmp	r3, #4
   13990:	beq	13970 <table_set@@Base+0x214>
   13994:	b	13810 <table_set@@Base+0xb4>
   13998:	ldr	r3, [r0, #4]
   1399c:	cmp	r3, #3
   139a0:	beq	13864 <table_set@@Base+0x108>
   139a4:	b	13810 <table_set@@Base+0xb4>
   139a8:	ldr	r3, [r0, #4]
   139ac:	cmp	r3, #2
   139b0:	beq	13864 <table_set@@Base+0x108>
   139b4:	b	13810 <table_set@@Base+0xb4>
   139b8:	ldr	r3, [r0, #4]
   139bc:	cmp	r3, #1
   139c0:	beq	1391c <table_set@@Base+0x1c0>
   139c4:	b	13810 <table_set@@Base+0xb4>
   139c8:	ldr	r3, [r0, #4]
   139cc:	cmp	r3, #0
   139d0:	beq	1391c <table_set@@Base+0x1c0>
   139d4:	b	13810 <table_set@@Base+0xb4>
   139d8:	ldr	r3, [r0, #4]
   139dc:	cmp	r3, #11
   139e0:	beq	13970 <table_set@@Base+0x214>
   139e4:	b	13810 <table_set@@Base+0xb4>
   139e8:	ldr	r3, [r0, #4]
   139ec:	cmp	r3, #10
   139f0:	beq	13970 <table_set@@Base+0x214>
   139f4:	b	13810 <table_set@@Base+0xb4>
   139f8:	ldr	r3, [r0, #4]
   139fc:	cmp	r3, #9
   13a00:	beq	138e0 <table_set@@Base+0x184>
   13a04:	b	13810 <table_set@@Base+0xb4>
   13a08:	ldr	r0, [r0, #4]
   13a0c:	cmp	r0, #8
   13a10:	bne	13810 <table_set@@Base+0xb4>
   13a14:	ldr	r3, [r8]
   13a18:	cmp	r3, #0
   13a1c:	beq	13ab4 <table_set@@Base+0x358>
   13a20:	ldr	r1, [r7]
   13a24:	ldr	r2, [r7, #4]
   13a28:	str	r1, [r3]
   13a2c:	str	r2, [r3, #4]
   13a30:	b	1383c <table_set@@Base+0xe0>
   13a34:	ldr	r3, [r0, #4]
   13a38:	cmp	r3, #13
   13a3c:	bne	13810 <table_set@@Base+0xb4>
   13a40:	b	1391c <table_set@@Base+0x1c0>
   13a44:	ldr	r3, [r0, #4]
   13a48:	cmp	r3, #12
   13a4c:	bne	13810 <table_set@@Base+0xb4>
   13a50:	b	1391c <table_set@@Base+0x1c0>
   13a54:	mov	r0, #4
   13a58:	bl	11a84 <malloc@plt>
   13a5c:	cmp	r0, #0
   13a60:	str	r0, [r8]
   13a64:	bne	13928 <table_set@@Base+0x1cc>
   13a68:	b	13810 <table_set@@Base+0xb4>
   13a6c:	mov	r0, #2
   13a70:	bl	11a84 <malloc@plt>
   13a74:	cmp	r0, #0
   13a78:	str	r0, [r8]
   13a7c:	bne	1397c <table_set@@Base+0x220>
   13a80:	b	13810 <table_set@@Base+0xb4>
   13a84:	mov	r0, #1
   13a88:	bl	11a84 <malloc@plt>
   13a8c:	cmp	r0, #0
   13a90:	str	r0, [r8]
   13a94:	bne	13870 <table_set@@Base+0x114>
   13a98:	b	13810 <table_set@@Base+0xb4>
   13a9c:	mov	r0, #8
   13aa0:	bl	11a84 <malloc@plt>
   13aa4:	cmp	r0, #0
   13aa8:	str	r0, [r8]
   13aac:	bne	138ec <table_set@@Base+0x190>
   13ab0:	b	13810 <table_set@@Base+0xb4>
   13ab4:	bl	11a84 <malloc@plt>
   13ab8:	cmp	r0, #0
   13abc:	mov	r3, r0
   13ac0:	str	r0, [r8]
   13ac4:	bne	13a20 <table_set@@Base+0x2c4>
   13ac8:	b	13810 <table_set@@Base+0xb4>

00013acc <table_set_bool@@Base>:
   13acc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13ad0:	mov	r5, r2
   13ad4:	mov	r4, r0
   13ad8:	strd	r6, [sp, #8]
   13adc:	mov	r7, r3
   13ae0:	str	r8, [sp, #16]
   13ae4:	mov	r8, r1
   13ae8:	str	lr, [sp, #20]
   13aec:	bl	15438 <table_get_cell_ptr@@Base>
   13af0:	mov	r6, r0
   13af4:	mov	r1, r5
   13af8:	mov	r0, r4
   13afc:	bl	12abc <table_get_col_ptr@@Base>
   13b00:	ldr	r2, [r0, #4]
   13b04:	cmp	r2, #22
   13b08:	bne	13b5c <table_set_bool@@Base+0x90>
   13b0c:	ldr	r0, [r6]
   13b10:	cmp	r0, #0
   13b14:	beq	13b48 <table_set_bool@@Base+0x7c>
   13b18:	mov	r2, r5
   13b1c:	mov	r1, r8
   13b20:	strb	r7, [r0]
   13b24:	mov	r3, #1
   13b28:	mov	r0, r4
   13b2c:	bl	125d8 <table_notify@@Base>
   13b30:	mov	r0, #0
   13b34:	ldrd	r4, [sp]
   13b38:	ldrd	r6, [sp, #8]
   13b3c:	ldr	r8, [sp, #16]
   13b40:	add	sp, sp, #20
   13b44:	pop	{pc}		; (ldr pc, [sp], #4)
   13b48:	mov	r0, #1
   13b4c:	bl	11a84 <malloc@plt>
   13b50:	cmp	r0, #0
   13b54:	str	r0, [r6]
   13b58:	bne	13b18 <table_set_bool@@Base+0x4c>
   13b5c:	mvn	r0, #0
   13b60:	b	13b34 <table_set_bool@@Base+0x68>

00013b64 <table_set_int@@Base>:
   13b64:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13b68:	mov	r5, r2
   13b6c:	mov	r4, r0
   13b70:	strd	r6, [sp, #8]
   13b74:	mov	r7, r3
   13b78:	str	r8, [sp, #16]
   13b7c:	mov	r8, r1
   13b80:	str	lr, [sp, #20]
   13b84:	bl	15438 <table_get_cell_ptr@@Base>
   13b88:	mov	r6, r0
   13b8c:	mov	r1, r5
   13b90:	mov	r0, r4
   13b94:	bl	12abc <table_get_col_ptr@@Base>
   13b98:	ldr	r2, [r0, #4]
   13b9c:	cmp	r2, #0
   13ba0:	bne	13bf4 <table_set_int@@Base+0x90>
   13ba4:	ldr	r0, [r6]
   13ba8:	cmp	r0, #0
   13bac:	beq	13be0 <table_set_int@@Base+0x7c>
   13bb0:	mov	r2, r5
   13bb4:	mov	r1, r8
   13bb8:	str	r7, [r0]
   13bbc:	mov	r3, #1
   13bc0:	mov	r0, r4
   13bc4:	bl	125d8 <table_notify@@Base>
   13bc8:	mov	r0, #0
   13bcc:	ldrd	r4, [sp]
   13bd0:	ldrd	r6, [sp, #8]
   13bd4:	ldr	r8, [sp, #16]
   13bd8:	add	sp, sp, #20
   13bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   13be0:	mov	r0, #4
   13be4:	bl	11a84 <malloc@plt>
   13be8:	cmp	r0, #0
   13bec:	str	r0, [r6]
   13bf0:	bne	13bb0 <table_set_int@@Base+0x4c>
   13bf4:	mvn	r0, #0
   13bf8:	b	13bcc <table_set_int@@Base+0x68>

00013bfc <table_set_uint@@Base>:
   13bfc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13c00:	mov	r5, r2
   13c04:	mov	r4, r0
   13c08:	strd	r6, [sp, #8]
   13c0c:	mov	r7, r3
   13c10:	str	r8, [sp, #16]
   13c14:	mov	r8, r1
   13c18:	str	lr, [sp, #20]
   13c1c:	bl	15438 <table_get_cell_ptr@@Base>
   13c20:	mov	r6, r0
   13c24:	mov	r1, r5
   13c28:	mov	r0, r4
   13c2c:	bl	12abc <table_get_col_ptr@@Base>
   13c30:	ldr	r2, [r0, #4]
   13c34:	cmp	r2, #1
   13c38:	bne	13c8c <table_set_uint@@Base+0x90>
   13c3c:	ldr	r0, [r6]
   13c40:	cmp	r0, #0
   13c44:	beq	13c78 <table_set_uint@@Base+0x7c>
   13c48:	mov	r2, r5
   13c4c:	mov	r1, r8
   13c50:	str	r7, [r0]
   13c54:	mov	r3, #1
   13c58:	mov	r0, r4
   13c5c:	bl	125d8 <table_notify@@Base>
   13c60:	mov	r0, #0
   13c64:	ldrd	r4, [sp]
   13c68:	ldrd	r6, [sp, #8]
   13c6c:	ldr	r8, [sp, #16]
   13c70:	add	sp, sp, #20
   13c74:	pop	{pc}		; (ldr pc, [sp], #4)
   13c78:	mov	r0, #4
   13c7c:	bl	11a84 <malloc@plt>
   13c80:	cmp	r0, #0
   13c84:	str	r0, [r6]
   13c88:	bne	13c48 <table_set_uint@@Base+0x4c>
   13c8c:	mvn	r0, #0
   13c90:	b	13c64 <table_set_uint@@Base+0x68>

00013c94 <table_set_int8@@Base>:
   13c94:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13c98:	mov	r5, r2
   13c9c:	mov	r4, r0
   13ca0:	strd	r6, [sp, #8]
   13ca4:	mov	r7, r3
   13ca8:	str	r8, [sp, #16]
   13cac:	mov	r8, r1
   13cb0:	str	lr, [sp, #20]
   13cb4:	bl	15438 <table_get_cell_ptr@@Base>
   13cb8:	mov	r6, r0
   13cbc:	mov	r1, r5
   13cc0:	mov	r0, r4
   13cc4:	bl	12abc <table_get_col_ptr@@Base>
   13cc8:	ldr	r2, [r0, #4]
   13ccc:	cmp	r2, #2
   13cd0:	bne	13d24 <table_set_int8@@Base+0x90>
   13cd4:	ldr	r0, [r6]
   13cd8:	cmp	r0, #0
   13cdc:	beq	13d10 <table_set_int8@@Base+0x7c>
   13ce0:	mov	r2, r5
   13ce4:	mov	r1, r8
   13ce8:	strb	r7, [r0]
   13cec:	mov	r3, #1
   13cf0:	mov	r0, r4
   13cf4:	bl	125d8 <table_notify@@Base>
   13cf8:	mov	r0, #0
   13cfc:	ldrd	r4, [sp]
   13d00:	ldrd	r6, [sp, #8]
   13d04:	ldr	r8, [sp, #16]
   13d08:	add	sp, sp, #20
   13d0c:	pop	{pc}		; (ldr pc, [sp], #4)
   13d10:	mov	r0, #1
   13d14:	bl	11a84 <malloc@plt>
   13d18:	cmp	r0, #0
   13d1c:	str	r0, [r6]
   13d20:	bne	13ce0 <table_set_int8@@Base+0x4c>
   13d24:	mvn	r0, #0
   13d28:	b	13cfc <table_set_int8@@Base+0x68>

00013d2c <table_set_uint8@@Base>:
   13d2c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13d30:	mov	r5, r2
   13d34:	mov	r4, r0
   13d38:	strd	r6, [sp, #8]
   13d3c:	mov	r7, r3
   13d40:	str	r8, [sp, #16]
   13d44:	mov	r8, r1
   13d48:	str	lr, [sp, #20]
   13d4c:	bl	15438 <table_get_cell_ptr@@Base>
   13d50:	mov	r6, r0
   13d54:	mov	r1, r5
   13d58:	mov	r0, r4
   13d5c:	bl	12abc <table_get_col_ptr@@Base>
   13d60:	ldr	r2, [r0, #4]
   13d64:	cmp	r2, #3
   13d68:	bne	13dbc <table_set_uint8@@Base+0x90>
   13d6c:	ldr	r0, [r6]
   13d70:	cmp	r0, #0
   13d74:	beq	13da8 <table_set_uint8@@Base+0x7c>
   13d78:	mov	r2, r5
   13d7c:	mov	r1, r8
   13d80:	strb	r7, [r0]
   13d84:	mov	r3, #1
   13d88:	mov	r0, r4
   13d8c:	bl	125d8 <table_notify@@Base>
   13d90:	mov	r0, #0
   13d94:	ldrd	r4, [sp]
   13d98:	ldrd	r6, [sp, #8]
   13d9c:	ldr	r8, [sp, #16]
   13da0:	add	sp, sp, #20
   13da4:	pop	{pc}		; (ldr pc, [sp], #4)
   13da8:	mov	r0, #1
   13dac:	bl	11a84 <malloc@plt>
   13db0:	cmp	r0, #0
   13db4:	str	r0, [r6]
   13db8:	bne	13d78 <table_set_uint8@@Base+0x4c>
   13dbc:	mvn	r0, #0
   13dc0:	b	13d94 <table_set_uint8@@Base+0x68>

00013dc4 <table_set_int16@@Base>:
   13dc4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13dc8:	mov	r5, r2
   13dcc:	mov	r4, r0
   13dd0:	strd	r6, [sp, #8]
   13dd4:	mov	r7, r3
   13dd8:	str	r8, [sp, #16]
   13ddc:	mov	r8, r1
   13de0:	str	lr, [sp, #20]
   13de4:	bl	15438 <table_get_cell_ptr@@Base>
   13de8:	mov	r6, r0
   13dec:	mov	r1, r5
   13df0:	mov	r0, r4
   13df4:	bl	12abc <table_get_col_ptr@@Base>
   13df8:	ldr	r2, [r0, #4]
   13dfc:	cmp	r2, #4
   13e00:	bne	13e54 <table_set_int16@@Base+0x90>
   13e04:	ldr	r0, [r6]
   13e08:	cmp	r0, #0
   13e0c:	beq	13e40 <table_set_int16@@Base+0x7c>
   13e10:	mov	r2, r5
   13e14:	mov	r1, r8
   13e18:	strh	r7, [r0]
   13e1c:	mov	r3, #1
   13e20:	mov	r0, r4
   13e24:	bl	125d8 <table_notify@@Base>
   13e28:	mov	r0, #0
   13e2c:	ldrd	r4, [sp]
   13e30:	ldrd	r6, [sp, #8]
   13e34:	ldr	r8, [sp, #16]
   13e38:	add	sp, sp, #20
   13e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13e40:	mov	r0, #2
   13e44:	bl	11a84 <malloc@plt>
   13e48:	cmp	r0, #0
   13e4c:	str	r0, [r6]
   13e50:	bne	13e10 <table_set_int16@@Base+0x4c>
   13e54:	mvn	r0, #0
   13e58:	b	13e2c <table_set_int16@@Base+0x68>

00013e5c <table_set_uint16@@Base>:
   13e5c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13e60:	mov	r5, r2
   13e64:	mov	r4, r0
   13e68:	strd	r6, [sp, #8]
   13e6c:	mov	r7, r3
   13e70:	str	r8, [sp, #16]
   13e74:	mov	r8, r1
   13e78:	str	lr, [sp, #20]
   13e7c:	bl	15438 <table_get_cell_ptr@@Base>
   13e80:	mov	r6, r0
   13e84:	mov	r1, r5
   13e88:	mov	r0, r4
   13e8c:	bl	12abc <table_get_col_ptr@@Base>
   13e90:	ldr	r2, [r0, #4]
   13e94:	cmp	r2, #5
   13e98:	bne	13eec <table_set_uint16@@Base+0x90>
   13e9c:	ldr	r0, [r6]
   13ea0:	cmp	r0, #0
   13ea4:	beq	13ed8 <table_set_uint16@@Base+0x7c>
   13ea8:	mov	r2, r5
   13eac:	mov	r1, r8
   13eb0:	strh	r7, [r0]
   13eb4:	mov	r3, #1
   13eb8:	mov	r0, r4
   13ebc:	bl	125d8 <table_notify@@Base>
   13ec0:	mov	r0, #0
   13ec4:	ldrd	r4, [sp]
   13ec8:	ldrd	r6, [sp, #8]
   13ecc:	ldr	r8, [sp, #16]
   13ed0:	add	sp, sp, #20
   13ed4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ed8:	mov	r0, #2
   13edc:	bl	11a84 <malloc@plt>
   13ee0:	cmp	r0, #0
   13ee4:	str	r0, [r6]
   13ee8:	bne	13ea8 <table_set_uint16@@Base+0x4c>
   13eec:	mvn	r0, #0
   13ef0:	b	13ec4 <table_set_uint16@@Base+0x68>

00013ef4 <table_set_int32@@Base>:
   13ef4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13ef8:	mov	r5, r2
   13efc:	mov	r4, r0
   13f00:	strd	r6, [sp, #8]
   13f04:	mov	r7, r3
   13f08:	str	r8, [sp, #16]
   13f0c:	mov	r8, r1
   13f10:	str	lr, [sp, #20]
   13f14:	bl	15438 <table_get_cell_ptr@@Base>
   13f18:	mov	r6, r0
   13f1c:	mov	r1, r5
   13f20:	mov	r0, r4
   13f24:	bl	12abc <table_get_col_ptr@@Base>
   13f28:	ldr	r2, [r0, #4]
   13f2c:	cmp	r2, #6
   13f30:	bne	13f84 <table_set_int32@@Base+0x90>
   13f34:	ldr	r0, [r6]
   13f38:	cmp	r0, #0
   13f3c:	beq	13f70 <table_set_int32@@Base+0x7c>
   13f40:	mov	r2, r5
   13f44:	mov	r1, r8
   13f48:	str	r7, [r0]
   13f4c:	mov	r3, #1
   13f50:	mov	r0, r4
   13f54:	bl	125d8 <table_notify@@Base>
   13f58:	mov	r0, #0
   13f5c:	ldrd	r4, [sp]
   13f60:	ldrd	r6, [sp, #8]
   13f64:	ldr	r8, [sp, #16]
   13f68:	add	sp, sp, #20
   13f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f70:	mov	r0, #4
   13f74:	bl	11a84 <malloc@plt>
   13f78:	cmp	r0, #0
   13f7c:	str	r0, [r6]
   13f80:	bne	13f40 <table_set_int32@@Base+0x4c>
   13f84:	mvn	r0, #0
   13f88:	b	13f5c <table_set_int32@@Base+0x68>

00013f8c <table_set_uint32@@Base>:
   13f8c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13f90:	mov	r5, r2
   13f94:	mov	r4, r0
   13f98:	strd	r6, [sp, #8]
   13f9c:	mov	r7, r3
   13fa0:	str	r8, [sp, #16]
   13fa4:	mov	r8, r1
   13fa8:	str	lr, [sp, #20]
   13fac:	bl	15438 <table_get_cell_ptr@@Base>
   13fb0:	mov	r6, r0
   13fb4:	mov	r1, r5
   13fb8:	mov	r0, r4
   13fbc:	bl	12abc <table_get_col_ptr@@Base>
   13fc0:	ldr	r2, [r0, #4]
   13fc4:	cmp	r2, #7
   13fc8:	bne	1401c <table_set_uint32@@Base+0x90>
   13fcc:	ldr	r0, [r6]
   13fd0:	cmp	r0, #0
   13fd4:	beq	14008 <table_set_uint32@@Base+0x7c>
   13fd8:	mov	r2, r5
   13fdc:	mov	r1, r8
   13fe0:	str	r7, [r0]
   13fe4:	mov	r3, #1
   13fe8:	mov	r0, r4
   13fec:	bl	125d8 <table_notify@@Base>
   13ff0:	mov	r0, #0
   13ff4:	ldrd	r4, [sp]
   13ff8:	ldrd	r6, [sp, #8]
   13ffc:	ldr	r8, [sp, #16]
   14000:	add	sp, sp, #20
   14004:	pop	{pc}		; (ldr pc, [sp], #4)
   14008:	mov	r0, #4
   1400c:	bl	11a84 <malloc@plt>
   14010:	cmp	r0, #0
   14014:	str	r0, [r6]
   14018:	bne	13fd8 <table_set_uint32@@Base+0x4c>
   1401c:	mvn	r0, #0
   14020:	b	13ff4 <table_set_uint32@@Base+0x68>

00014024 <table_set_int64@@Base>:
   14024:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14028:	mov	r5, r2
   1402c:	mov	r4, r0
   14030:	strd	r6, [sp, #8]
   14034:	mov	r7, r1
   14038:	str	r8, [sp, #16]
   1403c:	str	lr, [sp, #20]
   14040:	bl	15438 <table_get_cell_ptr@@Base>
   14044:	mov	r6, r0
   14048:	mov	r1, r5
   1404c:	mov	r0, r4
   14050:	bl	12abc <table_get_col_ptr@@Base>
   14054:	ldr	r0, [r0, #4]
   14058:	cmp	r0, #8
   1405c:	bne	140bc <table_set_int64@@Base+0x98>
   14060:	ldr	ip, [r6]
   14064:	cmp	ip, #0
   14068:	beq	140a8 <table_set_int64@@Base+0x84>
   1406c:	ldr	r6, [sp, #24]
   14070:	mov	r0, r4
   14074:	mov	r2, r5
   14078:	mov	r1, r7
   1407c:	mov	r3, #1
   14080:	ldr	lr, [sp, #28]
   14084:	str	r6, [ip]
   14088:	str	lr, [ip, #4]
   1408c:	bl	125d8 <table_notify@@Base>
   14090:	mov	r0, #0
   14094:	ldrd	r4, [sp]
   14098:	ldrd	r6, [sp, #8]
   1409c:	ldr	r8, [sp, #16]
   140a0:	add	sp, sp, #20
   140a4:	pop	{pc}		; (ldr pc, [sp], #4)
   140a8:	bl	11a84 <malloc@plt>
   140ac:	cmp	r0, #0
   140b0:	mov	ip, r0
   140b4:	str	r0, [r6]
   140b8:	bne	1406c <table_set_int64@@Base+0x48>
   140bc:	mvn	r0, #0
   140c0:	b	14094 <table_set_int64@@Base+0x70>

000140c4 <table_set_uint64@@Base>:
   140c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   140c8:	mov	r5, r2
   140cc:	mov	r4, r0
   140d0:	strd	r6, [sp, #8]
   140d4:	mov	r7, r1
   140d8:	str	r8, [sp, #16]
   140dc:	str	lr, [sp, #20]
   140e0:	bl	15438 <table_get_cell_ptr@@Base>
   140e4:	mov	r6, r0
   140e8:	mov	r1, r5
   140ec:	mov	r0, r4
   140f0:	bl	12abc <table_get_col_ptr@@Base>
   140f4:	ldr	r3, [r0, #4]
   140f8:	cmp	r3, #9
   140fc:	bne	14160 <table_set_uint64@@Base+0x9c>
   14100:	ldr	ip, [r6]
   14104:	cmp	ip, #0
   14108:	beq	14148 <table_set_uint64@@Base+0x84>
   1410c:	ldr	r6, [sp, #24]
   14110:	mov	r0, r4
   14114:	mov	r2, r5
   14118:	mov	r1, r7
   1411c:	mov	r3, #1
   14120:	ldr	lr, [sp, #28]
   14124:	str	r6, [ip]
   14128:	str	lr, [ip, #4]
   1412c:	bl	125d8 <table_notify@@Base>
   14130:	mov	r0, #0
   14134:	ldrd	r4, [sp]
   14138:	ldrd	r6, [sp, #8]
   1413c:	ldr	r8, [sp, #16]
   14140:	add	sp, sp, #20
   14144:	pop	{pc}		; (ldr pc, [sp], #4)
   14148:	mov	r0, #8
   1414c:	bl	11a84 <malloc@plt>
   14150:	cmp	r0, #0
   14154:	mov	ip, r0
   14158:	str	r0, [r6]
   1415c:	bne	1410c <table_set_uint64@@Base+0x48>
   14160:	mvn	r0, #0
   14164:	b	14134 <table_set_uint64@@Base+0x70>

00014168 <table_set_short@@Base>:
   14168:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1416c:	mov	r5, r2
   14170:	mov	r4, r0
   14174:	strd	r6, [sp, #8]
   14178:	mov	r7, r3
   1417c:	str	r8, [sp, #16]
   14180:	mov	r8, r1
   14184:	str	lr, [sp, #20]
   14188:	bl	15438 <table_get_cell_ptr@@Base>
   1418c:	mov	r6, r0
   14190:	mov	r1, r5
   14194:	mov	r0, r4
   14198:	bl	12abc <table_get_col_ptr@@Base>
   1419c:	ldr	r2, [r0, #4]
   141a0:	cmp	r2, #10
   141a4:	bne	141f8 <table_set_short@@Base+0x90>
   141a8:	ldr	r0, [r6]
   141ac:	cmp	r0, #0
   141b0:	beq	141e4 <table_set_short@@Base+0x7c>
   141b4:	mov	r2, r5
   141b8:	mov	r1, r8
   141bc:	strh	r7, [r0]
   141c0:	mov	r3, #1
   141c4:	mov	r0, r4
   141c8:	bl	125d8 <table_notify@@Base>
   141cc:	mov	r0, #0
   141d0:	ldrd	r4, [sp]
   141d4:	ldrd	r6, [sp, #8]
   141d8:	ldr	r8, [sp, #16]
   141dc:	add	sp, sp, #20
   141e0:	pop	{pc}		; (ldr pc, [sp], #4)
   141e4:	mov	r0, #2
   141e8:	bl	11a84 <malloc@plt>
   141ec:	cmp	r0, #0
   141f0:	str	r0, [r6]
   141f4:	bne	141b4 <table_set_short@@Base+0x4c>
   141f8:	mvn	r0, #0
   141fc:	b	141d0 <table_set_short@@Base+0x68>

00014200 <table_set_ushort@@Base>:
   14200:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14204:	mov	r5, r2
   14208:	mov	r4, r0
   1420c:	strd	r6, [sp, #8]
   14210:	mov	r7, r3
   14214:	str	r8, [sp, #16]
   14218:	mov	r8, r1
   1421c:	str	lr, [sp, #20]
   14220:	bl	15438 <table_get_cell_ptr@@Base>
   14224:	mov	r6, r0
   14228:	mov	r1, r5
   1422c:	mov	r0, r4
   14230:	bl	12abc <table_get_col_ptr@@Base>
   14234:	ldr	r2, [r0, #4]
   14238:	cmp	r2, #11
   1423c:	bne	14290 <table_set_ushort@@Base+0x90>
   14240:	ldr	r0, [r6]
   14244:	cmp	r0, #0
   14248:	beq	1427c <table_set_ushort@@Base+0x7c>
   1424c:	mov	r2, r5
   14250:	mov	r1, r8
   14254:	strh	r7, [r0]
   14258:	mov	r3, #1
   1425c:	mov	r0, r4
   14260:	bl	125d8 <table_notify@@Base>
   14264:	mov	r0, #0
   14268:	ldrd	r4, [sp]
   1426c:	ldrd	r6, [sp, #8]
   14270:	ldr	r8, [sp, #16]
   14274:	add	sp, sp, #20
   14278:	pop	{pc}		; (ldr pc, [sp], #4)
   1427c:	mov	r0, #2
   14280:	bl	11a84 <malloc@plt>
   14284:	cmp	r0, #0
   14288:	str	r0, [r6]
   1428c:	bne	1424c <table_set_ushort@@Base+0x4c>
   14290:	mvn	r0, #0
   14294:	b	14268 <table_set_ushort@@Base+0x68>

00014298 <table_set_long@@Base>:
   14298:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1429c:	mov	r5, r2
   142a0:	mov	r4, r0
   142a4:	strd	r6, [sp, #8]
   142a8:	mov	r6, r3
   142ac:	mov	r7, r1
   142b0:	str	r8, [sp, #16]
   142b4:	str	lr, [sp, #20]
   142b8:	bl	15438 <table_get_cell_ptr@@Base>
   142bc:	mov	r8, r0
   142c0:	mov	r1, r5
   142c4:	mov	r0, r4
   142c8:	bl	12abc <table_get_col_ptr@@Base>
   142cc:	ldr	r3, [r0, #4]
   142d0:	cmp	r3, #12
   142d4:	beq	142f0 <table_set_long@@Base+0x58>
   142d8:	mvn	r0, #0
   142dc:	ldrd	r4, [sp]
   142e0:	ldrd	r6, [sp, #8]
   142e4:	ldr	r8, [sp, #16]
   142e8:	add	sp, sp, #20
   142ec:	pop	{pc}		; (ldr pc, [sp], #4)
   142f0:	ldr	r0, [r8]
   142f4:	cmp	r0, #0
   142f8:	beq	1431c <table_set_long@@Base+0x84>
   142fc:	mov	r2, r5
   14300:	mov	r1, r7
   14304:	str	r6, [r0]
   14308:	mov	r3, #1
   1430c:	mov	r0, r4
   14310:	bl	125d8 <table_notify@@Base>
   14314:	mov	r0, #0
   14318:	b	142dc <table_set_long@@Base+0x44>
   1431c:	mov	r0, #4
   14320:	bl	11a84 <malloc@plt>
   14324:	cmp	r0, #0
   14328:	str	r0, [r8]
   1432c:	bne	142fc <table_set_long@@Base+0x64>
   14330:	b	142d8 <table_set_long@@Base+0x40>

00014334 <table_set_ulong@@Base>:
   14334:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14338:	mov	r5, r2
   1433c:	mov	r4, r0
   14340:	strd	r6, [sp, #8]
   14344:	mov	r6, r3
   14348:	mov	r7, r1
   1434c:	str	r8, [sp, #16]
   14350:	str	lr, [sp, #20]
   14354:	bl	15438 <table_get_cell_ptr@@Base>
   14358:	mov	r8, r0
   1435c:	mov	r1, r5
   14360:	mov	r0, r4
   14364:	bl	12abc <table_get_col_ptr@@Base>
   14368:	ldr	r3, [r0, #4]
   1436c:	cmp	r3, #13
   14370:	beq	1438c <table_set_ulong@@Base+0x58>
   14374:	mvn	r0, #0
   14378:	ldrd	r4, [sp]
   1437c:	ldrd	r6, [sp, #8]
   14380:	ldr	r8, [sp, #16]
   14384:	add	sp, sp, #20
   14388:	pop	{pc}		; (ldr pc, [sp], #4)
   1438c:	ldr	r0, [r8]
   14390:	cmp	r0, #0
   14394:	beq	143b8 <table_set_ulong@@Base+0x84>
   14398:	mov	r2, r5
   1439c:	mov	r1, r7
   143a0:	str	r6, [r0]
   143a4:	mov	r3, #1
   143a8:	mov	r0, r4
   143ac:	bl	125d8 <table_notify@@Base>
   143b0:	mov	r0, #0
   143b4:	b	14378 <table_set_ulong@@Base+0x44>
   143b8:	mov	r0, #4
   143bc:	bl	11a84 <malloc@plt>
   143c0:	cmp	r0, #0
   143c4:	str	r0, [r8]
   143c8:	bne	14398 <table_set_ulong@@Base+0x64>
   143cc:	b	14374 <table_set_ulong@@Base+0x40>

000143d0 <table_set_llong@@Base>:
   143d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   143d4:	mov	r5, r2
   143d8:	mov	r4, r0
   143dc:	strd	r6, [sp, #8]
   143e0:	mov	r6, r1
   143e4:	str	r8, [sp, #16]
   143e8:	str	lr, [sp, #20]
   143ec:	bl	15438 <table_get_cell_ptr@@Base>
   143f0:	mov	r7, r0
   143f4:	mov	r1, r5
   143f8:	mov	r0, r4
   143fc:	bl	12abc <table_get_col_ptr@@Base>
   14400:	ldr	r3, [r0, #4]
   14404:	cmp	r3, #14
   14408:	beq	14424 <table_set_llong@@Base+0x54>
   1440c:	mvn	r0, #0
   14410:	ldrd	r4, [sp]
   14414:	ldrd	r6, [sp, #8]
   14418:	ldr	r8, [sp, #16]
   1441c:	add	sp, sp, #20
   14420:	pop	{pc}		; (ldr pc, [sp], #4)
   14424:	ldr	ip, [r7]
   14428:	cmp	ip, #0
   1442c:	beq	1445c <table_set_llong@@Base+0x8c>
   14430:	ldr	r7, [sp, #24]
   14434:	mov	r0, r4
   14438:	mov	r2, r5
   1443c:	mov	r1, r6
   14440:	mov	r3, #1
   14444:	ldr	lr, [sp, #28]
   14448:	str	r7, [ip]
   1444c:	str	lr, [ip, #4]
   14450:	bl	125d8 <table_notify@@Base>
   14454:	mov	r0, #0
   14458:	b	14410 <table_set_llong@@Base+0x40>
   1445c:	mov	r0, #8
   14460:	bl	11a84 <malloc@plt>
   14464:	cmp	r0, #0
   14468:	mov	ip, r0
   1446c:	str	r0, [r7]
   14470:	bne	14430 <table_set_llong@@Base+0x60>
   14474:	b	1440c <table_set_llong@@Base+0x3c>

00014478 <table_set_ullong@@Base>:
   14478:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1447c:	mov	r5, r2
   14480:	mov	r4, r0
   14484:	strd	r6, [sp, #8]
   14488:	mov	r6, r1
   1448c:	str	r8, [sp, #16]
   14490:	str	lr, [sp, #20]
   14494:	bl	15438 <table_get_cell_ptr@@Base>
   14498:	mov	r7, r0
   1449c:	mov	r1, r5
   144a0:	mov	r0, r4
   144a4:	bl	12abc <table_get_col_ptr@@Base>
   144a8:	ldr	r3, [r0, #4]
   144ac:	cmp	r3, #15
   144b0:	beq	144cc <table_set_ullong@@Base+0x54>
   144b4:	mvn	r0, #0
   144b8:	ldrd	r4, [sp]
   144bc:	ldrd	r6, [sp, #8]
   144c0:	ldr	r8, [sp, #16]
   144c4:	add	sp, sp, #20
   144c8:	pop	{pc}		; (ldr pc, [sp], #4)
   144cc:	ldr	ip, [r7]
   144d0:	cmp	ip, #0
   144d4:	beq	14504 <table_set_ullong@@Base+0x8c>
   144d8:	ldr	r7, [sp, #24]
   144dc:	mov	r0, r4
   144e0:	mov	r2, r5
   144e4:	mov	r1, r6
   144e8:	mov	r3, #1
   144ec:	ldr	lr, [sp, #28]
   144f0:	str	r7, [ip]
   144f4:	str	lr, [ip, #4]
   144f8:	bl	125d8 <table_notify@@Base>
   144fc:	mov	r0, #0
   14500:	b	144b8 <table_set_ullong@@Base+0x40>
   14504:	mov	r0, #8
   14508:	bl	11a84 <malloc@plt>
   1450c:	cmp	r0, #0
   14510:	mov	ip, r0
   14514:	str	r0, [r7]
   14518:	bne	144d8 <table_set_ullong@@Base+0x60>
   1451c:	b	144b4 <table_set_ullong@@Base+0x3c>

00014520 <table_set_float@@Base>:
   14520:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14524:	mov	r5, r2
   14528:	mov	r4, r0
   1452c:	strd	r6, [sp, #8]
   14530:	mov	r7, r1
   14534:	vmov	r6, s0
   14538:	str	r8, [sp, #16]
   1453c:	str	lr, [sp, #20]
   14540:	bl	15438 <table_get_cell_ptr@@Base>
   14544:	mov	r8, r0
   14548:	mov	r1, r5
   1454c:	mov	r0, r4
   14550:	bl	12abc <table_get_col_ptr@@Base>
   14554:	ldr	r3, [r0, #4]
   14558:	cmp	r3, #16
   1455c:	beq	14578 <table_set_float@@Base+0x58>
   14560:	mvn	r0, #0
   14564:	ldrd	r4, [sp]
   14568:	ldrd	r6, [sp, #8]
   1456c:	ldr	r8, [sp, #16]
   14570:	add	sp, sp, #20
   14574:	pop	{pc}		; (ldr pc, [sp], #4)
   14578:	ldr	r0, [r8]
   1457c:	cmp	r0, #0
   14580:	beq	145a4 <table_set_float@@Base+0x84>
   14584:	mov	r2, r5
   14588:	mov	r1, r7
   1458c:	str	r6, [r0]
   14590:	mov	r3, #1
   14594:	mov	r0, r4
   14598:	bl	125d8 <table_notify@@Base>
   1459c:	mov	r0, #0
   145a0:	b	14564 <table_set_float@@Base+0x44>
   145a4:	mov	r0, #4
   145a8:	bl	11a84 <malloc@plt>
   145ac:	cmp	r0, #0
   145b0:	str	r0, [r8]
   145b4:	bne	14584 <table_set_float@@Base+0x64>
   145b8:	b	14560 <table_set_float@@Base+0x40>

000145bc <table_set_double@@Base>:
   145bc:	strd	r4, [sp, #-20]!	; 0xffffffec
   145c0:	mov	r5, r2
   145c4:	mov	r4, r0
   145c8:	strd	r6, [sp, #8]
   145cc:	mov	r6, r1
   145d0:	str	lr, [sp, #16]
   145d4:	sub	sp, sp, #12
   145d8:	vstr	d0, [sp]
   145dc:	bl	15438 <table_get_cell_ptr@@Base>
   145e0:	mov	r7, r0
   145e4:	mov	r1, r5
   145e8:	mov	r0, r4
   145ec:	bl	12abc <table_get_col_ptr@@Base>
   145f0:	ldr	r3, [r0, #4]
   145f4:	cmp	r3, #17
   145f8:	beq	14614 <table_set_double@@Base+0x58>
   145fc:	mvn	r0, #0
   14600:	add	sp, sp, #12
   14604:	ldrd	r4, [sp]
   14608:	ldrd	r6, [sp, #8]
   1460c:	add	sp, sp, #16
   14610:	pop	{pc}		; (ldr pc, [sp], #4)
   14614:	ldr	ip, [r7]
   14618:	cmp	ip, #0
   1461c:	beq	14648 <table_set_double@@Base+0x8c>
   14620:	ldm	sp, {r7, lr}
   14624:	mov	r0, r4
   14628:	mov	r2, r5
   1462c:	mov	r1, r6
   14630:	mov	r3, #1
   14634:	str	r7, [ip]
   14638:	str	lr, [ip, #4]
   1463c:	bl	125d8 <table_notify@@Base>
   14640:	mov	r0, #0
   14644:	b	14600 <table_set_double@@Base+0x44>
   14648:	mov	r0, #8
   1464c:	bl	11a84 <malloc@plt>
   14650:	cmp	r0, #0
   14654:	mov	ip, r0
   14658:	str	r0, [r7]
   1465c:	bne	14620 <table_set_double@@Base+0x64>
   14660:	b	145fc <table_set_double@@Base+0x40>

00014664 <table_set_ldouble@@Base>:
   14664:	strd	r4, [sp, #-20]!	; 0xffffffec
   14668:	mov	r5, r2
   1466c:	mov	r4, r0
   14670:	strd	r6, [sp, #8]
   14674:	mov	r6, r1
   14678:	str	lr, [sp, #16]
   1467c:	sub	sp, sp, #12
   14680:	vstr	d0, [sp]
   14684:	bl	15438 <table_get_cell_ptr@@Base>
   14688:	mov	r7, r0
   1468c:	mov	r1, r5
   14690:	mov	r0, r4
   14694:	bl	12abc <table_get_col_ptr@@Base>
   14698:	ldr	r3, [r0, #4]
   1469c:	cmp	r3, #18
   146a0:	beq	146bc <table_set_ldouble@@Base+0x58>
   146a4:	mvn	r0, #0
   146a8:	add	sp, sp, #12
   146ac:	ldrd	r4, [sp]
   146b0:	ldrd	r6, [sp, #8]
   146b4:	add	sp, sp, #16
   146b8:	pop	{pc}		; (ldr pc, [sp], #4)
   146bc:	ldr	ip, [r7]
   146c0:	cmp	ip, #0
   146c4:	beq	146f0 <table_set_ldouble@@Base+0x8c>
   146c8:	ldm	sp, {r7, lr}
   146cc:	mov	r0, r4
   146d0:	mov	r2, r5
   146d4:	mov	r1, r6
   146d8:	mov	r3, #1
   146dc:	str	r7, [ip]
   146e0:	str	lr, [ip, #4]
   146e4:	bl	125d8 <table_notify@@Base>
   146e8:	mov	r0, #0
   146ec:	b	146a8 <table_set_ldouble@@Base+0x44>
   146f0:	mov	r0, #8
   146f4:	bl	11a84 <malloc@plt>
   146f8:	cmp	r0, #0
   146fc:	mov	ip, r0
   14700:	str	r0, [r7]
   14704:	bne	146c8 <table_set_ldouble@@Base+0x64>
   14708:	b	146a4 <table_set_ldouble@@Base+0x40>

0001470c <table_set_string@@Base>:
   1470c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14710:	mov	r5, r2
   14714:	mov	r4, r0
   14718:	strd	r6, [sp, #8]
   1471c:	mov	r6, r3
   14720:	mov	r7, r1
   14724:	str	r8, [sp, #16]
   14728:	str	lr, [sp, #20]
   1472c:	bl	15438 <table_get_cell_ptr@@Base>
   14730:	mov	r8, r0
   14734:	mov	r1, r5
   14738:	mov	r0, r4
   1473c:	bl	12abc <table_get_col_ptr@@Base>
   14740:	ldr	r3, [r0, #4]
   14744:	cmp	r3, #21
   14748:	beq	14764 <table_set_string@@Base+0x58>
   1474c:	mvn	r0, #0
   14750:	ldrd	r4, [sp]
   14754:	ldrd	r6, [sp, #8]
   14758:	ldr	r8, [sp, #16]
   1475c:	add	sp, sp, #20
   14760:	pop	{pc}		; (ldr pc, [sp], #4)
   14764:	mov	r0, r6
   14768:	bl	11aa8 <strlen@plt>
   1476c:	add	r1, r0, #1
   14770:	ldr	r0, [r8]
   14774:	bl	11a6c <realloc@plt>
   14778:	cmp	r0, #0
   1477c:	str	r0, [r8]
   14780:	beq	1474c <table_set_string@@Base+0x40>
   14784:	mov	r1, r6
   14788:	bl	11a78 <strcpy@plt>
   1478c:	mov	r0, r4
   14790:	mov	r2, r5
   14794:	mov	r1, r7
   14798:	mov	r3, #1
   1479c:	bl	125d8 <table_notify@@Base>
   147a0:	mov	r0, #0
   147a4:	b	14750 <table_set_string@@Base+0x44>

000147a8 <table_set_char@@Base>:
   147a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   147ac:	mov	r5, r2
   147b0:	mov	r4, r0
   147b4:	strd	r6, [sp, #8]
   147b8:	mov	r6, r3
   147bc:	mov	r7, r1
   147c0:	str	r8, [sp, #16]
   147c4:	str	lr, [sp, #20]
   147c8:	bl	15438 <table_get_cell_ptr@@Base>
   147cc:	mov	r8, r0
   147d0:	mov	r1, r5
   147d4:	mov	r0, r4
   147d8:	bl	12abc <table_get_col_ptr@@Base>
   147dc:	ldr	r3, [r0, #4]
   147e0:	cmp	r3, #19
   147e4:	beq	14800 <table_set_char@@Base+0x58>
   147e8:	mvn	r0, #0
   147ec:	ldrd	r4, [sp]
   147f0:	ldrd	r6, [sp, #8]
   147f4:	ldr	r8, [sp, #16]
   147f8:	add	sp, sp, #20
   147fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14800:	ldr	r0, [r8]
   14804:	cmp	r0, #0
   14808:	beq	1482c <table_set_char@@Base+0x84>
   1480c:	mov	r2, r5
   14810:	mov	r1, r7
   14814:	strb	r6, [r0]
   14818:	mov	r3, #1
   1481c:	mov	r0, r4
   14820:	bl	125d8 <table_notify@@Base>
   14824:	mov	r0, #0
   14828:	b	147ec <table_set_char@@Base+0x44>
   1482c:	mov	r0, #1
   14830:	bl	11a84 <malloc@plt>
   14834:	cmp	r0, #0
   14838:	str	r0, [r8]
   1483c:	bne	1480c <table_set_char@@Base+0x64>
   14840:	b	147e8 <table_set_char@@Base+0x40>

00014844 <table_set_uchar@@Base>:
   14844:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14848:	mov	r5, r2
   1484c:	mov	r4, r0
   14850:	strd	r6, [sp, #8]
   14854:	mov	r6, r3
   14858:	mov	r7, r1
   1485c:	str	r8, [sp, #16]
   14860:	str	lr, [sp, #20]
   14864:	bl	15438 <table_get_cell_ptr@@Base>
   14868:	mov	r8, r0
   1486c:	mov	r1, r5
   14870:	mov	r0, r4
   14874:	bl	12abc <table_get_col_ptr@@Base>
   14878:	ldr	r3, [r0, #4]
   1487c:	cmp	r3, #20
   14880:	beq	1489c <table_set_uchar@@Base+0x58>
   14884:	mvn	r0, #0
   14888:	ldrd	r4, [sp]
   1488c:	ldrd	r6, [sp, #8]
   14890:	ldr	r8, [sp, #16]
   14894:	add	sp, sp, #20
   14898:	pop	{pc}		; (ldr pc, [sp], #4)
   1489c:	ldr	r0, [r8]
   148a0:	cmp	r0, #0
   148a4:	beq	148c8 <table_set_uchar@@Base+0x84>
   148a8:	mov	r2, r5
   148ac:	mov	r1, r7
   148b0:	strb	r6, [r0]
   148b4:	mov	r3, #1
   148b8:	mov	r0, r4
   148bc:	bl	125d8 <table_notify@@Base>
   148c0:	mov	r0, #0
   148c4:	b	14888 <table_set_uchar@@Base+0x44>
   148c8:	mov	r0, #1
   148cc:	bl	11a84 <malloc@plt>
   148d0:	cmp	r0, #0
   148d4:	str	r0, [r8]
   148d8:	bne	148a8 <table_set_uchar@@Base+0x64>
   148dc:	b	14884 <table_set_uchar@@Base+0x40>

000148e0 <table_set_ptr@@Base>:
   148e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   148e4:	mov	r5, r2
   148e8:	mov	r4, r0
   148ec:	strd	r6, [sp, #8]
   148f0:	mov	r7, r3
   148f4:	str	r8, [sp, #16]
   148f8:	mov	r8, r1
   148fc:	str	lr, [sp, #20]
   14900:	bl	15438 <table_get_cell_ptr@@Base>
   14904:	mov	r6, r0
   14908:	mov	r1, r5
   1490c:	mov	r0, r4
   14910:	bl	12abc <table_get_col_ptr@@Base>
   14914:	ldr	r2, [r0, #4]
   14918:	cmp	r2, #23
   1491c:	mvnne	r0, #0
   14920:	bne	14940 <table_set_ptr@@Base+0x60>
   14924:	mov	r0, r4
   14928:	mov	r2, r5
   1492c:	str	r7, [r6]
   14930:	mov	r1, r8
   14934:	mov	r3, #1
   14938:	bl	125d8 <table_notify@@Base>
   1493c:	mov	r0, #0
   14940:	ldrd	r4, [sp]
   14944:	ldrd	r6, [sp, #8]
   14948:	ldr	r8, [sp, #16]
   1494c:	add	sp, sp, #20
   14950:	pop	{pc}		; (ldr pc, [sp], #4)

00014954 <table_cell_init@@Base>:
   14954:	str	r4, [sp, #-8]!
   14958:	mov	r4, r2
   1495c:	str	lr, [sp, #4]
   14960:	bl	13740 <table_get_row_ptr@@Base>
   14964:	ldr	r3, [r0]
   14968:	mov	r2, #0
   1496c:	str	r2, [r3, r4, lsl #2]
   14970:	ldr	r4, [sp]
   14974:	add	sp, sp, #4
   14978:	pop	{pc}		; (ldr pc, [sp], #4)

0001497c <table_cell_destroy@@Base>:
   1497c:	strd	r4, [sp, #-16]!
   14980:	mov	r4, r2
   14984:	mov	r5, r0
   14988:	str	r6, [sp, #8]
   1498c:	mov	r6, r1
   14990:	mov	r1, r2
   14994:	str	lr, [sp, #12]
   14998:	bl	12794 <table_get_column_data_type@@Base>
   1499c:	cmp	r0, #23
   149a0:	bne	149b4 <table_cell_destroy@@Base+0x38>
   149a4:	ldrd	r4, [sp]
   149a8:	ldr	r6, [sp, #8]
   149ac:	add	sp, sp, #12
   149b0:	pop	{pc}		; (ldr pc, [sp], #4)
   149b4:	mov	r1, r6
   149b8:	mov	r0, r5
   149bc:	bl	13740 <table_get_row_ptr@@Base>
   149c0:	ldr	r3, [r0]
   149c4:	ldr	r0, [r3, r4, lsl #2]
   149c8:	cmp	r0, #0
   149cc:	beq	149a4 <table_cell_destroy@@Base+0x28>
   149d0:	ldrd	r4, [sp]
   149d4:	ldr	r6, [sp, #8]
   149d8:	ldr	lr, [sp, #12]
   149dc:	add	sp, sp, #16
   149e0:	b	11a60 <free@plt>

000149e4 <table_cell_to_buffer@@Base>:
   149e4:	strd	r4, [sp, #-20]!	; 0xffffffec
   149e8:	mov	r4, r2
   149ec:	mov	r5, r3
   149f0:	strd	r6, [sp, #8]
   149f4:	mov	r7, r1
   149f8:	mov	r1, r2
   149fc:	str	lr, [sp, #16]
   14a00:	sub	sp, sp, #12
   14a04:	mov	r6, r0
   14a08:	bl	12794 <table_get_column_data_type@@Base>
   14a0c:	cmp	r0, #23
   14a10:	ldrls	pc, [pc, r0, lsl #2]
   14a14:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14a18:	andeq	r4, r1, ip, lsr #27
   14a1c:	muleq	r1, r8, sp
   14a20:	andeq	r4, r1, r4, lsl #27
   14a24:	andeq	r4, r1, r0, ror sp
   14a28:	andeq	r4, r1, ip, asr sp
   14a2c:	andeq	r4, r1, r8, asr #26
   14a30:	andeq	r4, r1, r4, lsr sp
   14a34:	andeq	r4, r1, r8, lsl #26
   14a38:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a3c:	andeq	r4, r1, r0, ror #25
   14a40:			; <UNDEFINED> instruction: 0x00014cb4
   14a44:	andeq	r4, r1, r8, lsl #25
   14a48:	andeq	r4, r1, ip, asr ip
   14a4c:	andeq	r4, r1, r0, lsr ip
   14a50:	andeq	r4, r1, r4, lsl #24
   14a54:	ldrdeq	r4, [r1], -r8
   14a58:	andeq	r4, r1, r8, lsr #23
   14a5c:	andeq	r4, r1, ip, ror fp
   14a60:	andeq	r4, r1, r0, asr fp
   14a64:	andeq	r4, r1, ip, lsr fp
   14a68:	andeq	r4, r1, r8, ror sl
   14a6c:	andeq	r4, r1, r0, lsl fp
   14a70:	andeq	r4, r1, r4, ror #21
   14a74:			; <UNDEFINED> instruction: 0x00014ab8
   14a78:	mov	r2, r4
   14a7c:	mov	r1, r7
   14a80:	mov	r0, r6
   14a84:	bl	13440 <table_get_uchar@@Base>
   14a88:	mov	r3, r0
   14a8c:	movw	r2, #21964	; 0x55cc
   14a90:	movt	r2, #1
   14a94:	mov	r0, r5
   14a98:	ldr	r1, [sp, #32]
   14a9c:	bl	11ab4 <snprintf@plt>
   14aa0:	mov	r0, #0
   14aa4:	add	sp, sp, #12
   14aa8:	ldrd	r4, [sp]
   14aac:	ldrd	r6, [sp, #8]
   14ab0:	add	sp, sp, #16
   14ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ab8:	mov	r2, r4
   14abc:	mov	r1, r7
   14ac0:	mov	r0, r6
   14ac4:	bl	1347c <table_get_ptr@@Base>
   14ac8:	mov	r3, r0
   14acc:	movw	r2, #21968	; 0x55d0
   14ad0:	movt	r2, #1
   14ad4:	mov	r0, r5
   14ad8:	ldr	r1, [sp, #32]
   14adc:	bl	11ab4 <snprintf@plt>
   14ae0:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14ae4:	mov	r2, r4
   14ae8:	mov	r1, r7
   14aec:	mov	r0, r6
   14af0:	bl	131a0 <table_get_bool@@Base>
   14af4:	mov	r3, r0
   14af8:	movw	r2, #21908	; 0x5594
   14afc:	movt	r2, #1
   14b00:	mov	r0, r5
   14b04:	ldr	r1, [sp, #32]
   14b08:	bl	11ab4 <snprintf@plt>
   14b0c:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14b10:	mov	r2, r4
   14b14:	mov	r1, r7
   14b18:	mov	r0, r6
   14b1c:	bl	13460 <table_get_string@@Base>
   14b20:	mov	r3, r0
   14b24:	movw	r2, #21948	; 0x55bc
   14b28:	movt	r2, #1
   14b2c:	mov	r0, r5
   14b30:	ldr	r1, [sp, #32]
   14b34:	bl	11ab4 <snprintf@plt>
   14b38:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14b3c:	mov	r2, r4
   14b40:	mov	r1, r7
   14b44:	mov	r0, r6
   14b48:	bl	13420 <table_get_char@@Base>
   14b4c:	b	14a88 <table_cell_to_buffer@@Base+0xa4>
   14b50:	mov	r2, r4
   14b54:	mov	r1, r7
   14b58:	mov	r0, r6
   14b5c:	bl	13400 <table_get_ldouble@@Base>
   14b60:	mov	r0, r5
   14b64:	movw	r2, #21960	; 0x55c8
   14b68:	movt	r2, #1
   14b6c:	vstr	d0, [sp]
   14b70:	ldr	r1, [sp, #32]
   14b74:	bl	11ab4 <snprintf@plt>
   14b78:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14b7c:	mov	r2, r4
   14b80:	mov	r1, r7
   14b84:	mov	r0, r6
   14b88:	bl	133e0 <table_get_double@@Base>
   14b8c:	mov	r0, r5
   14b90:	movw	r2, #21956	; 0x55c4
   14b94:	movt	r2, #1
   14b98:	vstr	d0, [sp]
   14b9c:	ldr	r1, [sp, #32]
   14ba0:	bl	11ab4 <snprintf@plt>
   14ba4:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14ba8:	mov	r2, r4
   14bac:	mov	r1, r7
   14bb0:	mov	r0, r6
   14bb4:	bl	133c0 <table_get_float@@Base>
   14bb8:	vcvt.f64.f32	d0, s0
   14bbc:	mov	r0, r5
   14bc0:	movw	r2, #21952	; 0x55c0
   14bc4:	movt	r2, #1
   14bc8:	ldr	r1, [sp, #32]
   14bcc:	vstr	d0, [sp]
   14bd0:	bl	11ab4 <snprintf@plt>
   14bd4:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14bd8:	mov	r2, r4
   14bdc:	mov	r1, r7
   14be0:	mov	r0, r6
   14be4:	bl	133a0 <table_get_ullong@@Base>
   14be8:	movw	r2, #21924	; 0x55a4
   14bec:	movt	r2, #1
   14bf0:	strd	r0, [sp]
   14bf4:	mov	r0, r5
   14bf8:	ldr	r1, [sp, #32]
   14bfc:	bl	11ab4 <snprintf@plt>
   14c00:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14c04:	mov	r2, r4
   14c08:	mov	r1, r7
   14c0c:	mov	r0, r6
   14c10:	bl	13380 <table_get_llong@@Base>
   14c14:	movw	r2, #21916	; 0x559c
   14c18:	movt	r2, #1
   14c1c:	strd	r0, [sp]
   14c20:	mov	r0, r5
   14c24:	ldr	r1, [sp, #32]
   14c28:	bl	11ab4 <snprintf@plt>
   14c2c:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14c30:	mov	r2, r4
   14c34:	mov	r1, r7
   14c38:	mov	r0, r6
   14c3c:	bl	13360 <table_get_ulong@@Base>
   14c40:	mov	r3, r0
   14c44:	movw	r2, #21944	; 0x55b8
   14c48:	movt	r2, #1
   14c4c:	mov	r0, r5
   14c50:	ldr	r1, [sp, #32]
   14c54:	bl	11ab4 <snprintf@plt>
   14c58:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14c5c:	mov	r2, r4
   14c60:	mov	r1, r7
   14c64:	mov	r0, r6
   14c68:	bl	13340 <table_get_long@@Base>
   14c6c:	mov	r3, r0
   14c70:	movw	r2, #21940	; 0x55b4
   14c74:	movt	r2, #1
   14c78:	mov	r0, r5
   14c7c:	ldr	r1, [sp, #32]
   14c80:	bl	11ab4 <snprintf@plt>
   14c84:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14c88:	mov	r2, r4
   14c8c:	mov	r1, r7
   14c90:	mov	r0, r6
   14c94:	bl	13320 <table_get_ushort@@Base>
   14c98:	mov	r3, r0
   14c9c:	movw	r2, #21936	; 0x55b0
   14ca0:	movt	r2, #1
   14ca4:	mov	r0, r5
   14ca8:	ldr	r1, [sp, #32]
   14cac:	bl	11ab4 <snprintf@plt>
   14cb0:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14cb4:	mov	r2, r4
   14cb8:	mov	r1, r7
   14cbc:	mov	r0, r6
   14cc0:	bl	13300 <table_get_short@@Base>
   14cc4:	mov	r3, r0
   14cc8:	movw	r2, #21932	; 0x55ac
   14ccc:	movt	r2, #1
   14cd0:	mov	r0, r5
   14cd4:	ldr	r1, [sp, #32]
   14cd8:	bl	11ab4 <snprintf@plt>
   14cdc:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14ce0:	mov	r2, r4
   14ce4:	mov	r1, r7
   14ce8:	mov	r0, r6
   14cec:	bl	132e0 <table_get_uint64@@Base>
   14cf0:	b	14be8 <table_cell_to_buffer@@Base+0x204>
   14cf4:	mov	r2, r4
   14cf8:	mov	r1, r7
   14cfc:	mov	r0, r6
   14d00:	bl	132c0 <table_get_int64@@Base>
   14d04:	b	14c14 <table_cell_to_buffer@@Base+0x230>
   14d08:	mov	r2, r4
   14d0c:	mov	r1, r7
   14d10:	mov	r0, r6
   14d14:	bl	132a0 <table_get_uint32@@Base>
   14d18:	mov	r3, r0
   14d1c:	movw	r2, #21912	; 0x5598
   14d20:	movt	r2, #1
   14d24:	mov	r0, r5
   14d28:	ldr	r1, [sp, #32]
   14d2c:	bl	11ab4 <snprintf@plt>
   14d30:	b	14aa0 <table_cell_to_buffer@@Base+0xbc>
   14d34:	mov	r2, r4
   14d38:	mov	r1, r7
   14d3c:	mov	r0, r6
   14d40:	bl	13280 <table_get_int32@@Base>
   14d44:	b	14af4 <table_cell_to_buffer@@Base+0x110>
   14d48:	mov	r2, r4
   14d4c:	mov	r1, r7
   14d50:	mov	r0, r6
   14d54:	bl	13260 <table_get_uint16@@Base>
   14d58:	b	14d18 <table_cell_to_buffer@@Base+0x334>
   14d5c:	mov	r2, r4
   14d60:	mov	r1, r7
   14d64:	mov	r0, r6
   14d68:	bl	13240 <table_get_int16@@Base>
   14d6c:	b	14af4 <table_cell_to_buffer@@Base+0x110>
   14d70:	mov	r2, r4
   14d74:	mov	r1, r7
   14d78:	mov	r0, r6
   14d7c:	bl	13220 <table_get_uint8@@Base>
   14d80:	b	14d18 <table_cell_to_buffer@@Base+0x334>
   14d84:	mov	r2, r4
   14d88:	mov	r1, r7
   14d8c:	mov	r0, r6
   14d90:	bl	13200 <table_get_int8@@Base>
   14d94:	b	14af4 <table_cell_to_buffer@@Base+0x110>
   14d98:	mov	r2, r4
   14d9c:	mov	r1, r7
   14da0:	mov	r0, r6
   14da4:	bl	131e0 <table_get_uint@@Base>
   14da8:	b	14d18 <table_cell_to_buffer@@Base+0x334>
   14dac:	mov	r2, r4
   14db0:	mov	r1, r7
   14db4:	mov	r0, r6
   14db8:	bl	131c0 <table_get_int@@Base>
   14dbc:	b	14af4 <table_cell_to_buffer@@Base+0x110>

00014dc0 <table_cell_from_buffer@@Base>:
   14dc0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14dc4:	mov	r4, r2
   14dc8:	mov	r5, r3
   14dcc:	strd	r6, [sp, #8]
   14dd0:	strd	r8, [sp, #16]
   14dd4:	mov	r9, r1
   14dd8:	mov	r1, r2
   14ddc:	str	lr, [sp, #24]
   14de0:	sub	sp, sp, #268	; 0x10c
   14de4:	mov	r8, r0
   14de8:	bl	12794 <table_get_column_data_type@@Base>
   14dec:	cmp	r0, #23
   14df0:	ldrls	pc, [pc, r0, lsl #2]
   14df4:	b	153ec <table_cell_from_buffer@@Base+0x62c>
   14df8:	andeq	r5, r1, r0, lsl #7
   14dfc:	andeq	r5, r1, r8, asr #6
   14e00:	andeq	r5, r1, r0, lsl r3
   14e04:	ldrdeq	r5, [r1], -r8
   14e08:	andeq	r5, r1, r0, lsr #5
   14e0c:	andeq	r5, r1, r8, ror #4
   14e10:	andeq	r5, r1, r0, lsr r2
   14e14:	strdeq	r5, [r1], -r8
   14e18:			; <UNDEFINED> instruction: 0x000151bc
   14e1c:	andeq	r5, r1, r0, lsl #3
   14e20:	andeq	r5, r1, r8, asr #2
   14e24:	andeq	r5, r1, r0, lsl r1
   14e28:	ldrdeq	r5, [r1], -r8
   14e2c:	andeq	r5, r1, r0, lsr #1
   14e30:	andeq	r5, r1, r4, rrx
   14e34:	andeq	r5, r1, r8, lsr #32
   14e38:			; <UNDEFINED> instruction: 0x00014fb8
   14e3c:	andeq	r4, r1, r0, lsl #31
   14e40:	strdeq	r4, [r1], -r0
   14e44:	ldrdeq	r4, [r1], -r8
   14e48:	andeq	r4, r1, r8, asr #30
   14e4c:	andeq	r4, r1, r0, lsl pc
   14e50:	muleq	r1, r4, lr
   14e54:	andeq	r4, r1, r8, asr lr
   14e58:	mov	r0, r5
   14e5c:	movw	r1, #21968	; 0x55d0
   14e60:	movt	r1, #1
   14e64:	add	r2, sp, #8
   14e68:	bl	11ac0 <__isoc99_sscanf@plt>
   14e6c:	cmp	r0, #1
   14e70:	beq	153b8 <table_cell_from_buffer@@Base+0x5f8>
   14e74:	mvn	r5, #0
   14e78:	mov	r0, r5
   14e7c:	add	sp, sp, #268	; 0x10c
   14e80:	ldrd	r4, [sp]
   14e84:	ldrd	r6, [sp, #8]
   14e88:	ldrd	r8, [sp, #16]
   14e8c:	add	sp, sp, #24
   14e90:	pop	{pc}		; (ldr pc, [sp], #4)
   14e94:	mov	r0, r5
   14e98:	movw	r1, #21908	; 0x5594
   14e9c:	movt	r1, #1
   14ea0:	add	r2, sp, #8
   14ea4:	bl	11ac0 <__isoc99_sscanf@plt>
   14ea8:	cmp	r0, #1
   14eac:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   14eb0:	ldr	r5, [sp, #8]
   14eb4:	cmp	r5, #0
   14eb8:	beq	153d4 <table_cell_from_buffer@@Base+0x614>
   14ebc:	mov	r3, r0
   14ec0:	mov	r2, r4
   14ec4:	mov	r1, r9
   14ec8:	mov	r0, r8
   14ecc:	bl	13acc <table_set_bool@@Base>
   14ed0:	mov	r5, #0
   14ed4:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   14ed8:	mov	r0, r5
   14edc:	movw	r1, #21964	; 0x55cc
   14ee0:	movt	r1, #1
   14ee4:	add	r2, sp, #8
   14ee8:	bl	11ac0 <__isoc99_sscanf@plt>
   14eec:	cmp	r0, #1
   14ef0:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   14ef4:	mov	r2, r4
   14ef8:	mov	r1, r9
   14efc:	ldrb	r3, [sp, #8]
   14f00:	mov	r0, r8
   14f04:	mov	r5, #0
   14f08:	bl	147a8 <table_set_char@@Base>
   14f0c:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   14f10:	mov	r0, r5
   14f14:	add	r2, sp, #8
   14f18:	movw	r1, #21948	; 0x55bc
   14f1c:	movt	r1, #1
   14f20:	bl	11ac0 <__isoc99_sscanf@plt>
   14f24:	cmp	r0, #1
   14f28:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   14f2c:	add	r3, sp, #8
   14f30:	mov	r2, r4
   14f34:	mov	r1, r9
   14f38:	mov	r0, r8
   14f3c:	bl	1470c <table_set_string@@Base>
   14f40:	mov	r5, #0
   14f44:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   14f48:	mov	r0, r5
   14f4c:	movw	r1, #21964	; 0x55cc
   14f50:	movt	r1, #1
   14f54:	add	r2, sp, #8
   14f58:	bl	11ac0 <__isoc99_sscanf@plt>
   14f5c:	cmp	r0, #1
   14f60:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   14f64:	mov	r2, r4
   14f68:	mov	r1, r9
   14f6c:	ldrb	r3, [sp, #8]
   14f70:	mov	r0, r8
   14f74:	mov	r5, #0
   14f78:	bl	14844 <table_set_uchar@@Base>
   14f7c:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   14f80:	mov	r0, r5
   14f84:	movw	r1, #21956	; 0x55c4
   14f88:	movt	r1, #1
   14f8c:	add	r2, sp, #8
   14f90:	bl	11ac0 <__isoc99_sscanf@plt>
   14f94:	cmp	r0, #1
   14f98:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   14f9c:	mov	r2, r4
   14fa0:	mov	r1, r9
   14fa4:	vldr	d0, [sp, #8]
   14fa8:	mov	r0, r8
   14fac:	mov	r5, #0
   14fb0:	bl	145bc <table_set_double@@Base>
   14fb4:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   14fb8:	mov	r0, r5
   14fbc:	movw	r1, #21952	; 0x55c0
   14fc0:	movt	r1, #1
   14fc4:	add	r2, sp, #8
   14fc8:	bl	11ac0 <__isoc99_sscanf@plt>
   14fcc:	cmp	r0, #1
   14fd0:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   14fd4:	mov	r2, r4
   14fd8:	mov	r1, r9
   14fdc:	vldr	s0, [sp, #8]
   14fe0:	mov	r0, r8
   14fe4:	mov	r5, #0
   14fe8:	bl	14520 <table_set_float@@Base>
   14fec:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   14ff0:	mov	r0, r5
   14ff4:	movw	r1, #21960	; 0x55c8
   14ff8:	movt	r1, #1
   14ffc:	add	r2, sp, #8
   15000:	bl	11ac0 <__isoc99_sscanf@plt>
   15004:	cmp	r0, #1
   15008:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   1500c:	mov	r2, r4
   15010:	mov	r1, r9
   15014:	vldr	d0, [sp, #8]
   15018:	mov	r0, r8
   1501c:	mov	r5, #0
   15020:	bl	14664 <table_set_ldouble@@Base>
   15024:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   15028:	mov	r0, r5
   1502c:	add	r2, sp, #8
   15030:	movw	r1, #21924	; 0x55a4
   15034:	movt	r1, #1
   15038:	bl	11ac0 <__isoc99_sscanf@plt>
   1503c:	cmp	r0, #1
   15040:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   15044:	ldrd	r6, [sp, #8]
   15048:	mov	r2, r4
   1504c:	mov	r1, r9
   15050:	mov	r0, r8
   15054:	mov	r5, #0
   15058:	strd	r6, [sp]
   1505c:	bl	14478 <table_set_ullong@@Base>
   15060:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   15064:	mov	r0, r5
   15068:	add	r2, sp, #8
   1506c:	movw	r1, #21916	; 0x559c
   15070:	movt	r1, #1
   15074:	bl	11ac0 <__isoc99_sscanf@plt>
   15078:	cmp	r0, #1
   1507c:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   15080:	ldrd	r6, [sp, #8]
   15084:	mov	r2, r4
   15088:	mov	r1, r9
   1508c:	mov	r0, r8
   15090:	mov	r5, #0
   15094:	strd	r6, [sp]
   15098:	bl	143d0 <table_set_llong@@Base>
   1509c:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   150a0:	mov	r0, r5
   150a4:	movw	r1, #21944	; 0x55b8
   150a8:	movt	r1, #1
   150ac:	add	r2, sp, #8
   150b0:	bl	11ac0 <__isoc99_sscanf@plt>
   150b4:	cmp	r0, #1
   150b8:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   150bc:	mov	r2, r4
   150c0:	mov	r1, r9
   150c4:	ldr	r3, [sp, #8]
   150c8:	mov	r0, r8
   150cc:	mov	r5, #0
   150d0:	bl	14334 <table_set_ulong@@Base>
   150d4:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   150d8:	mov	r0, r5
   150dc:	movw	r1, #21940	; 0x55b4
   150e0:	movt	r1, #1
   150e4:	add	r2, sp, #8
   150e8:	bl	11ac0 <__isoc99_sscanf@plt>
   150ec:	cmp	r0, #1
   150f0:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   150f4:	mov	r2, r4
   150f8:	mov	r1, r9
   150fc:	ldr	r3, [sp, #8]
   15100:	mov	r0, r8
   15104:	mov	r5, #0
   15108:	bl	14298 <table_set_long@@Base>
   1510c:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   15110:	mov	r0, r5
   15114:	add	r2, sp, #8
   15118:	movw	r1, #21936	; 0x55b0
   1511c:	movt	r1, #1
   15120:	bl	11ac0 <__isoc99_sscanf@plt>
   15124:	cmp	r0, #1
   15128:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   1512c:	ldrh	r3, [sp, #8]
   15130:	mov	r2, r4
   15134:	mov	r1, r9
   15138:	mov	r0, r8
   1513c:	mov	r5, #0
   15140:	bl	14200 <table_set_ushort@@Base>
   15144:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   15148:	mov	r0, r5
   1514c:	add	r2, sp, #8
   15150:	movw	r1, #21932	; 0x55ac
   15154:	movt	r1, #1
   15158:	bl	11ac0 <__isoc99_sscanf@plt>
   1515c:	cmp	r0, #1
   15160:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   15164:	ldrsh	r3, [sp, #8]
   15168:	mov	r2, r4
   1516c:	mov	r1, r9
   15170:	mov	r0, r8
   15174:	mov	r5, #0
   15178:	bl	14168 <table_set_short@@Base>
   1517c:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   15180:	mov	r0, r5
   15184:	add	r2, sp, #8
   15188:	movw	r1, #21924	; 0x55a4
   1518c:	movt	r1, #1
   15190:	bl	11ac0 <__isoc99_sscanf@plt>
   15194:	cmp	r0, #1
   15198:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   1519c:	ldrd	r6, [sp, #8]
   151a0:	mov	r2, r4
   151a4:	mov	r1, r9
   151a8:	mov	r0, r8
   151ac:	mov	r5, #0
   151b0:	strd	r6, [sp]
   151b4:	bl	140c4 <table_set_uint64@@Base>
   151b8:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   151bc:	mov	r0, r5
   151c0:	add	r2, sp, #8
   151c4:	movw	r1, #21916	; 0x559c
   151c8:	movt	r1, #1
   151cc:	bl	11ac0 <__isoc99_sscanf@plt>
   151d0:	cmp	r0, #1
   151d4:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   151d8:	ldrd	r6, [sp, #8]
   151dc:	mov	r2, r4
   151e0:	mov	r1, r9
   151e4:	mov	r0, r8
   151e8:	mov	r5, #0
   151ec:	strd	r6, [sp]
   151f0:	bl	14024 <table_set_int64@@Base>
   151f4:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   151f8:	mov	r0, r5
   151fc:	movw	r1, #21912	; 0x5598
   15200:	movt	r1, #1
   15204:	add	r2, sp, #8
   15208:	bl	11ac0 <__isoc99_sscanf@plt>
   1520c:	cmp	r0, #1
   15210:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   15214:	mov	r2, r4
   15218:	mov	r1, r9
   1521c:	ldr	r3, [sp, #8]
   15220:	mov	r0, r8
   15224:	mov	r5, #0
   15228:	bl	13f8c <table_set_uint32@@Base>
   1522c:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   15230:	mov	r0, r5
   15234:	movw	r1, #21908	; 0x5594
   15238:	movt	r1, #1
   1523c:	add	r2, sp, #8
   15240:	bl	11ac0 <__isoc99_sscanf@plt>
   15244:	cmp	r0, #1
   15248:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   1524c:	mov	r2, r4
   15250:	mov	r1, r9
   15254:	ldr	r3, [sp, #8]
   15258:	mov	r0, r8
   1525c:	mov	r5, #0
   15260:	bl	13ef4 <table_set_int32@@Base>
   15264:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   15268:	mov	r0, r5
   1526c:	add	r2, sp, #8
   15270:	movw	r1, #21936	; 0x55b0
   15274:	movt	r1, #1
   15278:	bl	11ac0 <__isoc99_sscanf@plt>
   1527c:	cmp	r0, #1
   15280:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   15284:	ldrh	r3, [sp, #8]
   15288:	mov	r2, r4
   1528c:	mov	r1, r9
   15290:	mov	r0, r8
   15294:	mov	r5, #0
   15298:	bl	13e5c <table_set_uint16@@Base>
   1529c:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   152a0:	mov	r0, r5
   152a4:	add	r2, sp, #8
   152a8:	movw	r1, #21932	; 0x55ac
   152ac:	movt	r1, #1
   152b0:	bl	11ac0 <__isoc99_sscanf@plt>
   152b4:	cmp	r0, #1
   152b8:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   152bc:	ldrsh	r3, [sp, #8]
   152c0:	mov	r2, r4
   152c4:	mov	r1, r9
   152c8:	mov	r0, r8
   152cc:	mov	r5, #0
   152d0:	bl	13dc4 <table_set_int16@@Base>
   152d4:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   152d8:	mov	r0, r5
   152dc:	movw	r1, #21980	; 0x55dc
   152e0:	movt	r1, #1
   152e4:	add	r2, sp, #8
   152e8:	bl	11ac0 <__isoc99_sscanf@plt>
   152ec:	cmp	r0, #1
   152f0:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   152f4:	mov	r2, r4
   152f8:	mov	r1, r9
   152fc:	ldrb	r3, [sp, #8]
   15300:	mov	r0, r8
   15304:	mov	r5, #0
   15308:	bl	13d2c <table_set_uint8@@Base>
   1530c:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   15310:	mov	r0, r5
   15314:	add	r2, sp, #8
   15318:	movw	r1, #21972	; 0x55d4
   1531c:	movt	r1, #1
   15320:	bl	11ac0 <__isoc99_sscanf@plt>
   15324:	cmp	r0, #1
   15328:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   1532c:	ldrsb	r3, [sp, #8]
   15330:	mov	r2, r4
   15334:	mov	r1, r9
   15338:	mov	r0, r8
   1533c:	mov	r5, #0
   15340:	bl	13c94 <table_set_int8@@Base>
   15344:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   15348:	mov	r0, r5
   1534c:	movw	r1, #21912	; 0x5598
   15350:	movt	r1, #1
   15354:	add	r2, sp, #8
   15358:	bl	11ac0 <__isoc99_sscanf@plt>
   1535c:	cmp	r0, #1
   15360:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   15364:	mov	r2, r4
   15368:	mov	r1, r9
   1536c:	ldr	r3, [sp, #8]
   15370:	mov	r0, r8
   15374:	mov	r5, #0
   15378:	bl	13bfc <table_set_uint@@Base>
   1537c:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   15380:	mov	r0, r5
   15384:	movw	r1, #21908	; 0x5594
   15388:	movt	r1, #1
   1538c:	add	r2, sp, #8
   15390:	bl	11ac0 <__isoc99_sscanf@plt>
   15394:	cmp	r0, #1
   15398:	bne	14e74 <table_cell_from_buffer@@Base+0xb4>
   1539c:	mov	r2, r4
   153a0:	mov	r1, r9
   153a4:	ldr	r3, [sp, #8]
   153a8:	mov	r0, r8
   153ac:	mov	r5, #0
   153b0:	bl	13b64 <table_set_int@@Base>
   153b4:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   153b8:	mov	r2, r4
   153bc:	mov	r1, r9
   153c0:	ldr	r3, [sp, #8]
   153c4:	mov	r0, r8
   153c8:	mov	r5, #0
   153cc:	bl	148e0 <table_set_ptr@@Base>
   153d0:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   153d4:	mov	r2, r4
   153d8:	mov	r1, r9
   153dc:	mov	r0, r8
   153e0:	mov	r3, r5
   153e4:	bl	13acc <table_set_bool@@Base>
   153e8:	b	14e78 <table_cell_from_buffer@@Base+0xb8>
   153ec:	mov	r5, #0
   153f0:	b	14e78 <table_cell_from_buffer@@Base+0xb8>

000153f4 <table_cell_nullify@@Base>:
   153f4:	strd	r4, [sp, #-16]!
   153f8:	mov	r5, r2
   153fc:	str	r6, [sp, #8]
   15400:	str	lr, [sp, #12]
   15404:	bl	13740 <table_get_row_ptr@@Base>
   15408:	ldr	r4, [r0]
   1540c:	ldr	r0, [r4, r5, lsl #2]
   15410:	cmp	r0, #0
   15414:	beq	15424 <table_cell_nullify@@Base+0x30>
   15418:	bl	11a60 <free@plt>
   1541c:	mov	r3, #0
   15420:	str	r3, [r4, r5, lsl #2]
   15424:	ldrd	r4, [sp]
   15428:	mov	r0, #0
   1542c:	ldr	r6, [sp, #8]
   15430:	add	sp, sp, #12
   15434:	pop	{pc}		; (ldr pc, [sp], #4)

00015438 <table_get_cell_ptr@@Base>:
   15438:	str	r4, [sp, #-8]!
   1543c:	mov	r4, r2
   15440:	str	lr, [sp, #4]
   15444:	bl	13740 <table_get_row_ptr@@Base>
   15448:	ldr	r0, [r0]
   1544c:	add	r0, r0, r4, lsl #2
   15450:	ldr	r4, [sp]
   15454:	add	sp, sp, #4
   15458:	pop	{pc}		; (ldr pc, [sp], #4)

0001545c <__libc_csu_init@@Base>:
   1545c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15460:	mov	r7, r0
   15464:	ldr	r6, [pc, #72]	; 154b4 <__libc_csu_init@@Base+0x58>
   15468:	ldr	r5, [pc, #72]	; 154b8 <__libc_csu_init@@Base+0x5c>
   1546c:	add	r6, pc, r6
   15470:	add	r5, pc, r5
   15474:	sub	r6, r6, r5
   15478:	mov	r8, r1
   1547c:	mov	r9, r2
   15480:	bl	11a28 <strcmp@plt-0x20>
   15484:	asrs	r6, r6, #2
   15488:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1548c:	mov	r4, #0
   15490:	add	r4, r4, #1
   15494:	ldr	r3, [r5], #4
   15498:	mov	r2, r9
   1549c:	mov	r1, r8
   154a0:	mov	r0, r7
   154a4:	blx	r3
   154a8:	cmp	r6, r4
   154ac:	bne	15490 <__libc_csu_init@@Base+0x34>
   154b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   154b4:	andeq	r0, r1, r0, lsr #21
   154b8:	muleq	r1, r8, sl

000154bc <__libc_csu_fini@@Base>:
   154bc:	bx	lr

Disassembly of section .fini:

000154c0 <.fini>:
   154c0:	push	{r3, lr}
   154c4:	pop	{r3, pc}
