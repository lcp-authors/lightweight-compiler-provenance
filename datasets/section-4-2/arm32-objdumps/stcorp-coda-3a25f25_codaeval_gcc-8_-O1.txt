
../repos/stcorp-coda-3a25f25/codaeval:     file format elf32-littlearm


Disassembly of section .init:

00010c78 <.init>:
   10c78:	push	{r3, lr}
   10c7c:	bl	10e9c <_start@@Base+0x3c>
   10c80:	pop	{r3, pc}

Disassembly of section .plt:

00010c84 <coda_match_filefilter@plt-0x14>:
   10c84:	push	{lr}		; (str lr, [sp, #-4]!)
   10c88:	ldr	lr, [pc, #4]	; 10c94 <coda_match_filefilter@plt-0x4>
   10c8c:	add	lr, pc, lr
   10c90:	ldr	pc, [lr, #8]!
   10c94:	andeq	r2, r1, ip, ror #6

00010c98 <coda_match_filefilter@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #73728	; 0x12000
   10ca0:	ldr	pc, [ip, #876]!	; 0x36c

00010ca4 <coda_expression_eval_integer@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #73728	; 0x12000
   10cac:	ldr	pc, [ip, #868]!	; 0x364

00010cb0 <strcmp@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #73728	; 0x12000
   10cb8:	ldr	pc, [ip, #860]!	; 0x35c

00010cbc <printf@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #73728	; 0x12000
   10cc4:	ldr	pc, [ip, #852]!	; 0x354

00010cc8 <coda_set_error@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #844]!	; 0x34c

00010cd4 <coda_open@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #836]!	; 0x344

00010ce0 <free@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #828]!	; 0x33c

00010cec <coda_set_definition_path_conditional@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #820]!	; 0x334

00010cf8 <coda_set_definition_path@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #812]!	; 0x32c

00010d04 <fwrite@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #804]!	; 0x324

00010d10 <coda_expression_eval_bool@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #796]!	; 0x31c

00010d1c <coda_cursor_set_product@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #788]!	; 0x314

00010d28 <coda_done@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #780]!	; 0x30c

00010d34 <puts@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #73728	; 0x12000
   10d3c:	ldr	pc, [ip, #772]!	; 0x304

00010d40 <__libc_start_main@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #73728	; 0x12000
   10d48:	ldr	pc, [ip, #764]!	; 0x2fc

00010d4c <coda_expression_delete@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #73728	; 0x12000
   10d54:	ldr	pc, [ip, #756]!	; 0x2f4

00010d58 <__gmon_start__@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #73728	; 0x12000
   10d60:	ldr	pc, [ip, #748]!	; 0x2ec

00010d64 <__ctype_b_loc@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #73728	; 0x12000
   10d6c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d70 <exit@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #73728	; 0x12000
   10d78:	ldr	pc, [ip, #732]!	; 0x2dc

00010d7c <strlen@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #73728	; 0x12000
   10d84:	ldr	pc, [ip, #724]!	; 0x2d4

00010d88 <fprintf@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #73728	; 0x12000
   10d90:	ldr	pc, [ip, #716]!	; 0x2cc

00010d94 <coda_init@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #73728	; 0x12000
   10d9c:	ldr	pc, [ip, #708]!	; 0x2c4

00010da0 <coda_set_option_perform_conversions@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #73728	; 0x12000
   10da8:	ldr	pc, [ip, #700]!	; 0x2bc

00010dac <coda_expression_eval_string@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #73728	; 0x12000
   10db4:	ldr	pc, [ip, #692]!	; 0x2b4

00010db8 <putchar@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #73728	; 0x12000
   10dc0:	ldr	pc, [ip, #684]!	; 0x2ac

00010dc4 <coda_expression_get_type@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #73728	; 0x12000
   10dcc:	ldr	pc, [ip, #676]!	; 0x2a4

00010dd0 <coda_close@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #73728	; 0x12000
   10dd8:	ldr	pc, [ip, #668]!	; 0x29c

00010ddc <coda_expression_is_constant@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #73728	; 0x12000
   10de4:	ldr	pc, [ip, #660]!	; 0x294

00010de8 <coda_expression_eval_float@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #73728	; 0x12000
   10df0:	ldr	pc, [ip, #652]!	; 0x28c

00010df4 <coda_expression_eval_node@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #73728	; 0x12000
   10dfc:	ldr	pc, [ip, #644]!	; 0x284

00010e00 <coda_errno_to_string@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #73728	; 0x12000
   10e08:	ldr	pc, [ip, #636]!	; 0x27c

00010e0c <coda_expression_get_type_name@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #73728	; 0x12000
   10e14:	ldr	pc, [ip, #628]!	; 0x274

00010e18 <coda_expression_from_string@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #73728	; 0x12000
   10e20:	ldr	pc, [ip, #620]!	; 0x26c

00010e24 <coda_get_libcoda_version@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #73728	; 0x12000
   10e2c:	ldr	pc, [ip, #612]!	; 0x264

00010e30 <coda_get_errno@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #73728	; 0x12000
   10e38:	ldr	pc, [ip, #604]!	; 0x25c

00010e3c <abort@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #73728	; 0x12000
   10e44:	ldr	pc, [ip, #596]!	; 0x254

00010e48 <coda_str64@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #588]!	; 0x24c

00010e54 <__assert_fail@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #580]!	; 0x244

Disassembly of section .text:

00010e60 <_start@@Base>:
   10e60:	mov	fp, #0
   10e64:	mov	lr, #0
   10e68:	pop	{r1}		; (ldr r1, [sp], #4)
   10e6c:	mov	r2, sp
   10e70:	push	{r2}		; (str r2, [sp, #-4]!)
   10e74:	push	{r0}		; (str r0, [sp, #-4]!)
   10e78:	ldr	ip, [pc, #16]	; 10e90 <_start@@Base+0x30>
   10e7c:	push	{ip}		; (str ip, [sp, #-4]!)
   10e80:	ldr	r0, [pc, #12]	; 10e94 <_start@@Base+0x34>
   10e84:	ldr	r3, [pc, #12]	; 10e98 <_start@@Base+0x38>
   10e88:	bl	10d40 <__libc_start_main@plt>
   10e8c:	bl	10e3c <abort@plt>
   10e90:			; <UNDEFINED> instruction: 0x00011dbc
   10e94:	andeq	r1, r1, r8, lsl #15
   10e98:	andeq	r1, r1, ip, asr sp
   10e9c:	ldr	r3, [pc, #20]	; 10eb8 <_start@@Base+0x58>
   10ea0:	ldr	r2, [pc, #20]	; 10ebc <_start@@Base+0x5c>
   10ea4:	add	r3, pc, r3
   10ea8:	ldr	r2, [r3, r2]
   10eac:	cmp	r2, #0
   10eb0:	bxeq	lr
   10eb4:	b	10d58 <__gmon_start__@plt>
   10eb8:	andeq	r2, r1, r4, asr r1
   10ebc:	andeq	r0, r0, r4, lsr #1
   10ec0:	ldr	r0, [pc, #24]	; 10ee0 <_start@@Base+0x80>
   10ec4:	ldr	r3, [pc, #24]	; 10ee4 <_start@@Base+0x84>
   10ec8:	cmp	r3, r0
   10ecc:	bxeq	lr
   10ed0:	ldr	r3, [pc, #16]	; 10ee8 <_start@@Base+0x88>
   10ed4:	cmp	r3, #0
   10ed8:	bxeq	lr
   10edc:	bx	r3
   10ee0:	strheq	r3, [r2], -r0
   10ee4:	strheq	r3, [r2], -r0
   10ee8:	andeq	r0, r0, r0
   10eec:	ldr	r0, [pc, #36]	; 10f18 <_start@@Base+0xb8>
   10ef0:	ldr	r1, [pc, #36]	; 10f1c <_start@@Base+0xbc>
   10ef4:	sub	r1, r1, r0
   10ef8:	asr	r1, r1, #2
   10efc:	add	r1, r1, r1, lsr #31
   10f00:	asrs	r1, r1, #1
   10f04:	bxeq	lr
   10f08:	ldr	r3, [pc, #16]	; 10f20 <_start@@Base+0xc0>
   10f0c:	cmp	r3, #0
   10f10:	bxeq	lr
   10f14:	bx	r3
   10f18:	strheq	r3, [r2], -r0
   10f1c:	strheq	r3, [r2], -r0
   10f20:	andeq	r0, r0, r0
   10f24:	push	{r4, lr}
   10f28:	ldr	r4, [pc, #24]	; 10f48 <_start@@Base+0xe8>
   10f2c:	ldrb	r3, [r4]
   10f30:	cmp	r3, #0
   10f34:	popne	{r4, pc}
   10f38:	bl	10ec0 <_start@@Base+0x60>
   10f3c:	mov	r3, #1
   10f40:	strb	r3, [r4]
   10f44:	pop	{r4, pc}
   10f48:	strheq	r3, [r2], -r4
   10f4c:	b	10eec <_start@@Base+0x8c>
   10f50:	str	r4, [sp, #-8]!
   10f54:	str	lr, [sp, #4]
   10f58:	movw	r0, #7644	; 0x1ddc
   10f5c:	movt	r0, #1
   10f60:	bl	10d34 <puts@plt>
   10f64:	movw	r0, #7652	; 0x1de4
   10f68:	movt	r0, #1
   10f6c:	bl	10d34 <puts@plt>
   10f70:	movw	r0, #7732	; 0x1e34
   10f74:	movt	r0, #1
   10f78:	bl	10d34 <puts@plt>
   10f7c:	movw	r0, #7812	; 0x1e84
   10f80:	movt	r0, #1
   10f84:	bl	10d34 <puts@plt>
   10f88:	movw	r0, #7848	; 0x1ea8
   10f8c:	movt	r0, #1
   10f90:	bl	10d34 <puts@plt>
   10f94:	movw	r0, #7924	; 0x1ef4
   10f98:	movt	r0, #1
   10f9c:	bl	10d34 <puts@plt>
   10fa0:	movw	r0, #8000	; 0x1f40
   10fa4:	movt	r0, #1
   10fa8:	bl	10d34 <puts@plt>
   10fac:	mov	r0, #10
   10fb0:	bl	10db8 <putchar@plt>
   10fb4:	movw	r0, #8048	; 0x1f70
   10fb8:	movt	r0, #1
   10fbc:	bl	10d34 <puts@plt>
   10fc0:	movw	r0, #8068	; 0x1f84
   10fc4:	movt	r0, #1
   10fc8:	bl	10d34 <puts@plt>
   10fcc:	movw	r0, #8092	; 0x1f9c
   10fd0:	movt	r0, #1
   10fd4:	bl	10d34 <puts@plt>
   10fd8:	movw	r0, #8172	; 0x1fec
   10fdc:	movt	r0, #1
   10fe0:	bl	10d34 <puts@plt>
   10fe4:	movw	r0, #8252	; 0x203c
   10fe8:	movt	r0, #1
   10fec:	bl	10d34 <puts@plt>
   10ff0:	movw	r0, #8292	; 0x2064
   10ff4:	movt	r0, #1
   10ff8:	bl	10d34 <puts@plt>
   10ffc:	movw	r0, #8352	; 0x20a0
   11000:	movt	r0, #1
   11004:	bl	10d34 <puts@plt>
   11008:	movw	r0, #8376	; 0x20b8
   1100c:	movt	r0, #1
   11010:	bl	10d34 <puts@plt>
   11014:	movw	r0, #8452	; 0x2104
   11018:	movt	r0, #1
   1101c:	bl	10d34 <puts@plt>
   11020:	movw	r0, #8528	; 0x2150
   11024:	movt	r0, #1
   11028:	bl	10d34 <puts@plt>
   1102c:	movw	r0, #8560	; 0x2170
   11030:	movt	r0, #1
   11034:	bl	10d34 <puts@plt>
   11038:	movw	r0, #8636	; 0x21bc
   1103c:	movt	r0, #1
   11040:	bl	10d34 <puts@plt>
   11044:	mov	r0, #10
   11048:	bl	10db8 <putchar@plt>
   1104c:	movw	r0, #8684	; 0x21ec
   11050:	movt	r0, #1
   11054:	bl	10d34 <puts@plt>
   11058:	movw	r0, #8764	; 0x223c
   1105c:	movt	r0, #1
   11060:	bl	10d34 <puts@plt>
   11064:	mov	r0, #10
   11068:	bl	10db8 <putchar@plt>
   1106c:	movw	r0, #8788	; 0x2254
   11070:	movt	r0, #1
   11074:	bl	10d34 <puts@plt>
   11078:	movw	r0, #8812	; 0x226c
   1107c:	movt	r0, #1
   11080:	bl	10d34 <puts@plt>
   11084:	mov	r0, #10
   11088:	bl	10db8 <putchar@plt>
   1108c:	movw	r0, #8844	; 0x228c
   11090:	movt	r0, #1
   11094:	bl	10d34 <puts@plt>
   11098:	movw	r0, #8872	; 0x22a8
   1109c:	movt	r0, #1
   110a0:	bl	10d34 <puts@plt>
   110a4:	mov	r0, #10
   110a8:	bl	10db8 <putchar@plt>
   110ac:	movw	r0, #8924	; 0x22dc
   110b0:	movt	r0, #1
   110b4:	bl	10d34 <puts@plt>
   110b8:	movw	r0, #9000	; 0x2328
   110bc:	movt	r0, #1
   110c0:	bl	10d34 <puts@plt>
   110c4:	movw	r0, #9076	; 0x2374
   110c8:	movt	r0, #1
   110cc:	bl	10d34 <puts@plt>
   110d0:	movw	r0, #9124	; 0x23a4
   110d4:	movt	r0, #1
   110d8:	bl	10d34 <puts@plt>
   110dc:	movw	r0, #9200	; 0x23f0
   110e0:	movt	r0, #1
   110e4:	bl	10d34 <puts@plt>
   110e8:	movw	r0, #9276	; 0x243c
   110ec:	movt	r0, #1
   110f0:	bl	10d34 <puts@plt>
   110f4:	movw	r0, #9340	; 0x247c
   110f8:	movt	r0, #1
   110fc:	bl	10d34 <puts@plt>
   11100:	mov	r0, #10
   11104:	bl	10db8 <putchar@plt>
   11108:	ldr	r4, [sp]
   1110c:	add	sp, sp, #4
   11110:	pop	{pc}		; (ldr pc, [sp], #4)
   11114:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11118:	strd	r6, [sp, #8]
   1111c:	strd	r8, [sp, #16]
   11120:	str	sl, [sp, #24]
   11124:	str	lr, [sp, #28]
   11128:	sub	sp, sp, #32
   1112c:	movw	r3, #12472	; 0x30b8
   11130:	movt	r3, #2
   11134:	ldr	r3, [r3]
   11138:	cmp	r3, #5
   1113c:	ldrls	pc, [pc, r3, lsl #2]
   11140:	b	115c4 <_start@@Base+0x764>
   11144:	andeq	r1, r1, ip, asr r1
   11148:	andeq	r1, r1, r8, ror #3
   1114c:	andeq	r1, r1, r8, asr #4
   11150:	andeq	r1, r1, r4, lsr #5
   11154:	andeq	r1, r1, r4, lsr #11
   11158:	andeq	r1, r1, r4, lsr #11
   1115c:	movw	r3, #12472	; 0x30b8
   11160:	movt	r3, #2
   11164:	add	r2, sp, #8
   11168:	mov	r1, r0
   1116c:	ldr	r0, [r3, #4]
   11170:	bl	10d10 <coda_expression_eval_bool@plt>
   11174:	subs	r7, r0, #0
   11178:	bne	111c0 <_start@@Base+0x360>
   1117c:	movw	r2, #9404	; 0x24bc
   11180:	movt	r2, #1
   11184:	movw	r3, #9412	; 0x24c4
   11188:	movt	r3, #1
   1118c:	ldr	r0, [sp, #8]
   11190:	cmp	r0, #0
   11194:	movne	r0, r2
   11198:	moveq	r0, r3
   1119c:	bl	10d34 <puts@plt>
   111a0:	mov	r0, r7
   111a4:	add	sp, sp, #32
   111a8:	ldrd	r4, [sp]
   111ac:	ldrd	r6, [sp, #8]
   111b0:	ldrd	r8, [sp, #16]
   111b4:	ldr	sl, [sp, #24]
   111b8:	add	sp, sp, #28
   111bc:	pop	{pc}		; (ldr pc, [sp], #4)
   111c0:	bl	10e30 <coda_get_errno@plt>
   111c4:	ldr	r0, [r0]
   111c8:	bl	10e00 <coda_errno_to_string@plt>
   111cc:	mov	r2, r0
   111d0:	movw	r1, #9420	; 0x24cc
   111d4:	movt	r1, #1
   111d8:	mvn	r0, #400	; 0x190
   111dc:	bl	10cc8 <coda_set_error@plt>
   111e0:	mvn	r7, #0
   111e4:	b	111a0 <_start@@Base+0x340>
   111e8:	movw	r3, #12472	; 0x30b8
   111ec:	movt	r3, #2
   111f0:	mov	r2, sp
   111f4:	mov	r1, r0
   111f8:	ldr	r0, [r3, #4]
   111fc:	bl	10ca4 <coda_expression_eval_integer@plt>
   11200:	subs	r7, r0, #0
   11204:	bne	11220 <_start@@Base+0x3c0>
   11208:	add	r2, sp, #8
   1120c:	ldrd	r0, [sp]
   11210:	bl	10e48 <coda_str64@plt>
   11214:	add	r0, sp, #8
   11218:	bl	10d34 <puts@plt>
   1121c:	b	111a0 <_start@@Base+0x340>
   11220:	bl	10e30 <coda_get_errno@plt>
   11224:	ldr	r0, [r0]
   11228:	bl	10e00 <coda_errno_to_string@plt>
   1122c:	mov	r2, r0
   11230:	movw	r1, #9460	; 0x24f4
   11234:	movt	r1, #1
   11238:	mvn	r0, #400	; 0x190
   1123c:	bl	10cc8 <coda_set_error@plt>
   11240:	mvn	r7, #0
   11244:	b	111a0 <_start@@Base+0x340>
   11248:	movw	r3, #12472	; 0x30b8
   1124c:	movt	r3, #2
   11250:	add	r2, sp, #8
   11254:	mov	r1, r0
   11258:	ldr	r0, [r3, #4]
   1125c:	bl	10de8 <coda_expression_eval_float@plt>
   11260:	subs	r7, r0, #0
   11264:	bne	1127c <_start@@Base+0x41c>
   11268:	ldrd	r2, [sp, #8]
   1126c:	movw	r0, #9548	; 0x254c
   11270:	movt	r0, #1
   11274:	bl	10cbc <printf@plt>
   11278:	b	111a0 <_start@@Base+0x340>
   1127c:	bl	10e30 <coda_get_errno@plt>
   11280:	ldr	r0, [r0]
   11284:	bl	10e00 <coda_errno_to_string@plt>
   11288:	mov	r2, r0
   1128c:	movw	r1, #9500	; 0x251c
   11290:	movt	r1, #1
   11294:	mvn	r0, #400	; 0x190
   11298:	bl	10cc8 <coda_set_error@plt>
   1129c:	mvn	r7, #0
   112a0:	b	111a0 <_start@@Base+0x340>
   112a4:	mov	r3, #0
   112a8:	str	r3, [sp]
   112ac:	movw	ip, #12472	; 0x30b8
   112b0:	movt	ip, #2
   112b4:	add	r3, sp, #8
   112b8:	mov	r2, sp
   112bc:	mov	r1, r0
   112c0:	ldr	r0, [ip, #4]
   112c4:	bl	10dac <coda_expression_eval_string@plt>
   112c8:	subs	r7, r0, #0
   112cc:	bne	11318 <_start@@Base+0x4b8>
   112d0:	ldr	r4, [sp]
   112d4:	ldr	r0, [sp, #8]
   112d8:	cmp	r4, #0
   112dc:	cmpne	r0, #0
   112e0:	beq	11588 <_start@@Base+0x728>
   112e4:	cmp	r0, #0
   112e8:	blt	11340 <_start@@Base+0x4e0>
   112ec:	cmp	r0, #0
   112f0:	ble	11588 <_start@@Base+0x728>
   112f4:	sub	r4, r4, #1
   112f8:	add	r6, r4, r0
   112fc:	movw	sl, #9636	; 0x25a4
   11300:	movt	sl, #1
   11304:	movw	r9, #9632	; 0x25a0
   11308:	movt	r9, #1
   1130c:	movw	r8, #9628	; 0x259c
   11310:	movt	r8, #1
   11314:	b	11360 <_start@@Base+0x500>
   11318:	bl	10e30 <coda_get_errno@plt>
   1131c:	ldr	r0, [r0]
   11320:	bl	10e00 <coda_errno_to_string@plt>
   11324:	mov	r2, r0
   11328:	movw	r1, #9556	; 0x2554
   1132c:	movt	r1, #1
   11330:	mvn	r0, #400	; 0x190
   11334:	bl	10cc8 <coda_set_error@plt>
   11338:	mvn	r7, #0
   1133c:	b	111a0 <_start@@Base+0x340>
   11340:	mov	r0, r4
   11344:	bl	10d7c <strlen@plt>
   11348:	b	112ec <_start@@Base+0x48c>
   1134c:	movw	r0, #9596	; 0x257c
   11350:	movt	r0, #1
   11354:	bl	10cbc <printf@plt>
   11358:	cmp	r4, r6
   1135c:	beq	11588 <_start@@Base+0x728>
   11360:	ldrb	r5, [r4, #1]!
   11364:	sub	r3, r5, #7
   11368:	cmp	r3, #85	; 0x55
   1136c:	ldrls	pc, [pc, r3, lsl #2]
   11370:	b	11554 <_start@@Base+0x6f4>
   11374:	andeq	r1, r1, ip, asr #9
   11378:	ldrdeq	r1, [r1], -ip
   1137c:	andeq	r1, r1, ip, lsl r5
   11380:	strdeq	r1, [r1], -ip
   11384:	andeq	r1, r1, ip, lsr #10
   11388:	andeq	r1, r1, ip, ror #9
   1138c:	andeq	r1, r1, ip, lsl #10
   11390:	andeq	r1, r1, r4, asr r5
   11394:	andeq	r1, r1, r4, asr r5
   11398:	andeq	r1, r1, r4, asr r5
   1139c:	andeq	r1, r1, r4, asr r5
   113a0:	andeq	r1, r1, r4, asr r5
   113a4:	andeq	r1, r1, r4, asr r5
   113a8:	andeq	r1, r1, r4, asr r5
   113ac:	andeq	r1, r1, r4, asr r5
   113b0:	andeq	r1, r1, r4, asr r5
   113b4:	andeq	r1, r1, r4, asr r5
   113b8:	andeq	r1, r1, r4, asr r5
   113bc:	andeq	r1, r1, r4, asr r5
   113c0:	andeq	r1, r1, r4, asr r5
   113c4:	andeq	r1, r1, ip, asr #6
   113c8:	andeq	r1, r1, r4, asr r5
   113cc:	andeq	r1, r1, r4, asr r5
   113d0:	andeq	r1, r1, r4, asr r5
   113d4:	andeq	r1, r1, r4, asr r5
   113d8:	andeq	r1, r1, r4, asr r5
   113dc:	andeq	r1, r1, r4, asr r5
   113e0:	andeq	r1, r1, r8, asr #10
   113e4:	andeq	r1, r1, r4, asr r5
   113e8:	andeq	r1, r1, r4, asr r5
   113ec:	andeq	r1, r1, r4, asr r5
   113f0:	andeq	r1, r1, r4, asr r5
   113f4:	andeq	r1, r1, r4, asr r5
   113f8:	andeq	r1, r1, r4, asr r5
   113fc:	andeq	r1, r1, r4, asr r5
   11400:	andeq	r1, r1, r4, asr r5
   11404:	andeq	r1, r1, r4, asr r5
   11408:	andeq	r1, r1, r4, asr r5
   1140c:	andeq	r1, r1, r4, asr r5
   11410:	andeq	r1, r1, r4, asr r5
   11414:	andeq	r1, r1, r4, asr r5
   11418:	andeq	r1, r1, r4, asr r5
   1141c:	andeq	r1, r1, r4, asr r5
   11420:	andeq	r1, r1, r4, asr r5
   11424:	andeq	r1, r1, r4, asr r5
   11428:	andeq	r1, r1, r4, asr r5
   1142c:	andeq	r1, r1, r4, asr r5
   11430:	andeq	r1, r1, r4, asr r5
   11434:	andeq	r1, r1, r4, asr r5
   11438:	andeq	r1, r1, r4, asr r5
   1143c:	andeq	r1, r1, r4, asr r5
   11440:	andeq	r1, r1, r4, asr r5
   11444:	andeq	r1, r1, r4, asr r5
   11448:	andeq	r1, r1, r4, asr r5
   1144c:	andeq	r1, r1, r4, asr r5
   11450:	andeq	r1, r1, r4, asr r5
   11454:	andeq	r1, r1, r4, asr r5
   11458:	andeq	r1, r1, r4, asr r5
   1145c:	andeq	r1, r1, r4, asr r5
   11460:	andeq	r1, r1, r4, asr r5
   11464:	andeq	r1, r1, r4, asr r5
   11468:	andeq	r1, r1, r4, asr r5
   1146c:	andeq	r1, r1, r4, asr r5
   11470:	andeq	r1, r1, r4, asr r5
   11474:	andeq	r1, r1, r4, asr r5
   11478:	andeq	r1, r1, r4, asr r5
   1147c:	andeq	r1, r1, r4, asr r5
   11480:	andeq	r1, r1, r4, asr r5
   11484:	andeq	r1, r1, r4, asr r5
   11488:	andeq	r1, r1, r4, asr r5
   1148c:	andeq	r1, r1, r4, asr r5
   11490:	andeq	r1, r1, r4, asr r5
   11494:	andeq	r1, r1, r4, asr r5
   11498:	andeq	r1, r1, r4, asr r5
   1149c:	andeq	r1, r1, r4, asr r5
   114a0:	andeq	r1, r1, r4, asr r5
   114a4:	andeq	r1, r1, r4, asr r5
   114a8:	andeq	r1, r1, r4, asr r5
   114ac:	andeq	r1, r1, r4, asr r5
   114b0:	andeq	r1, r1, r4, asr r5
   114b4:	andeq	r1, r1, r4, asr r5
   114b8:	andeq	r1, r1, r4, asr r5
   114bc:	andeq	r1, r1, r4, asr r5
   114c0:	andeq	r1, r1, r4, asr r5
   114c4:	andeq	r1, r1, r4, asr r5
   114c8:	andeq	r1, r1, ip, lsr r5
   114cc:	movw	r0, #9600	; 0x2580
   114d0:	movt	r0, #1
   114d4:	bl	10cbc <printf@plt>
   114d8:	b	11358 <_start@@Base+0x4f8>
   114dc:	movw	r0, #9604	; 0x2584
   114e0:	movt	r0, #1
   114e4:	bl	10cbc <printf@plt>
   114e8:	b	11358 <_start@@Base+0x4f8>
   114ec:	movw	r0, #9608	; 0x2588
   114f0:	movt	r0, #1
   114f4:	bl	10cbc <printf@plt>
   114f8:	b	11358 <_start@@Base+0x4f8>
   114fc:	movw	r0, #9612	; 0x258c
   11500:	movt	r0, #1
   11504:	bl	10cbc <printf@plt>
   11508:	b	11358 <_start@@Base+0x4f8>
   1150c:	movw	r0, #9616	; 0x2590
   11510:	movt	r0, #1
   11514:	bl	10cbc <printf@plt>
   11518:	b	11358 <_start@@Base+0x4f8>
   1151c:	movw	r0, #9620	; 0x2594
   11520:	movt	r0, #1
   11524:	bl	10cbc <printf@plt>
   11528:	b	11358 <_start@@Base+0x4f8>
   1152c:	movw	r0, #9624	; 0x2598
   11530:	movt	r0, #1
   11534:	bl	10cbc <printf@plt>
   11538:	b	11358 <_start@@Base+0x4f8>
   1153c:	mov	r0, r8
   11540:	bl	10cbc <printf@plt>
   11544:	b	11358 <_start@@Base+0x4f8>
   11548:	mov	r0, r9
   1154c:	bl	10cbc <printf@plt>
   11550:	b	11358 <_start@@Base+0x4f8>
   11554:	bl	10d64 <__ctype_b_loc@plt>
   11558:	ldr	r2, [r0]
   1155c:	lsl	r3, r5, #1
   11560:	ldrh	r3, [r2, r3]
   11564:	tst	r3, #16384	; 0x4000
   11568:	bne	1157c <_start@@Base+0x71c>
   1156c:	mov	r1, r5
   11570:	mov	r0, sl
   11574:	bl	10cbc <printf@plt>
   11578:	b	11358 <_start@@Base+0x4f8>
   1157c:	mov	r0, r5
   11580:	bl	10db8 <putchar@plt>
   11584:	b	11358 <_start@@Base+0x4f8>
   11588:	mov	r0, #10
   1158c:	bl	10db8 <putchar@plt>
   11590:	ldr	r0, [sp]
   11594:	cmp	r0, #0
   11598:	beq	111a0 <_start@@Base+0x340>
   1159c:	bl	10ce0 <free@plt>
   115a0:	b	111a0 <_start@@Base+0x340>
   115a4:	movw	r3, #7628	; 0x1dcc
   115a8:	movt	r3, #1
   115ac:	mov	r2, #230	; 0xe6
   115b0:	movw	r1, #9644	; 0x25ac
   115b4:	movt	r1, #1
   115b8:	movw	r0, #9716	; 0x25f4
   115bc:	movt	r0, #1
   115c0:	bl	10e54 <__assert_fail@plt>
   115c4:	mov	r7, #0
   115c8:	b	111a0 <_start@@Base+0x340>
   115cc:	strd	r4, [sp, #-12]!
   115d0:	str	lr, [sp, #8]
   115d4:	sub	sp, sp, #532	; 0x214
   115d8:	mov	r5, r0
   115dc:	mov	r3, #0
   115e0:	str	r3, [sp, #524]	; 0x20c
   115e4:	add	r1, sp, #524	; 0x20c
   115e8:	bl	10cd4 <coda_open@plt>
   115ec:	cmp	r0, #0
   115f0:	movne	r4, #1
   115f4:	beq	1160c <_start@@Base+0x7ac>
   115f8:	mov	r0, r4
   115fc:	add	sp, sp, #532	; 0x214
   11600:	ldrd	r4, [sp]
   11604:	add	sp, sp, #8
   11608:	pop	{pc}		; (ldr pc, [sp], #4)
   1160c:	ldr	r1, [sp, #524]	; 0x20c
   11610:	mov	r0, sp
   11614:	bl	10d1c <coda_cursor_set_product@plt>
   11618:	subs	r4, r0, #0
   1161c:	bne	11668 <_start@@Base+0x808>
   11620:	movw	r3, #12472	; 0x30b8
   11624:	movt	r3, #2
   11628:	ldr	r0, [r3, #8]
   1162c:	cmp	r0, #0
   11630:	beq	11644 <_start@@Base+0x7e4>
   11634:	mov	r1, sp
   11638:	bl	10df4 <coda_expression_eval_node@plt>
   1163c:	cmp	r0, #0
   11640:	bne	11678 <_start@@Base+0x818>
   11644:	mov	r0, sp
   11648:	bl	11114 <_start@@Base+0x2b4>
   1164c:	cmp	r0, #0
   11650:	bne	116b0 <_start@@Base+0x850>
   11654:	ldr	r0, [sp, #524]	; 0x20c
   11658:	bl	10dd0 <coda_close@plt>
   1165c:	adds	r4, r0, #0
   11660:	movne	r4, #1
   11664:	b	115f8 <_start@@Base+0x798>
   11668:	ldr	r0, [sp, #524]	; 0x20c
   1166c:	bl	10dd0 <coda_close@plt>
   11670:	mov	r4, #1
   11674:	b	115f8 <_start@@Base+0x798>
   11678:	movw	r3, #12464	; 0x30b0
   1167c:	movt	r3, #2
   11680:	ldr	r5, [r3]
   11684:	bl	10e30 <coda_get_errno@plt>
   11688:	ldr	r0, [r0]
   1168c:	bl	10e00 <coda_errno_to_string@plt>
   11690:	mov	r2, r0
   11694:	movw	r1, #9720	; 0x25f8
   11698:	movt	r1, #1
   1169c:	mov	r0, r5
   116a0:	bl	10d88 <fprintf@plt>
   116a4:	ldr	r0, [sp, #524]	; 0x20c
   116a8:	bl	10dd0 <coda_close@plt>
   116ac:	b	115f8 <_start@@Base+0x798>
   116b0:	movw	r3, #12464	; 0x30b0
   116b4:	movt	r3, #2
   116b8:	ldr	r4, [r3]
   116bc:	bl	10e30 <coda_get_errno@plt>
   116c0:	ldr	r0, [r0]
   116c4:	bl	10e00 <coda_errno_to_string@plt>
   116c8:	mov	r3, r5
   116cc:	mov	r2, r0
   116d0:	movw	r1, #9768	; 0x2628
   116d4:	movt	r1, #1
   116d8:	mov	r0, r4
   116dc:	bl	10d88 <fprintf@plt>
   116e0:	b	11654 <_start@@Base+0x7f4>

000116e4 <callback@@Base>:
   116e4:	str	r4, [sp, #-8]!
   116e8:	str	lr, [sp, #4]
   116ec:	cmp	r1, #0
   116f0:	beq	11718 <callback@@Base+0x34>
   116f4:	cmp	r1, #2
   116f8:	beq	11744 <callback@@Base+0x60>
   116fc:	cmp	r1, #1
   11700:	beq	11764 <callback@@Base+0x80>
   11704:	cmp	r1, #4
   11708:	movne	r0, #0
   1170c:	bne	11738 <callback@@Base+0x54>
   11710:	bl	115cc <_start@@Base+0x76c>
   11714:	b	11738 <callback@@Base+0x54>
   11718:	movw	ip, #12464	; 0x30b0
   1171c:	movt	ip, #2
   11720:	mov	r3, r0
   11724:	movw	r1, #9768	; 0x2628
   11728:	movt	r1, #1
   1172c:	ldr	r0, [ip]
   11730:	bl	10d88 <fprintf@plt>
   11734:	mov	r0, #0
   11738:	ldr	r4, [sp]
   1173c:	add	sp, sp, #4
   11740:	pop	{pc}		; (ldr pc, [sp], #4)
   11744:	movw	r3, #12464	; 0x30b0
   11748:	movt	r3, #2
   1174c:	mov	r2, r0
   11750:	movw	r1, #9788	; 0x263c
   11754:	movt	r1, #1
   11758:	ldr	r0, [r3]
   1175c:	bl	10d88 <fprintf@plt>
   11760:	b	11734 <callback@@Base+0x50>
   11764:	movw	ip, #12464	; 0x30b0
   11768:	movt	ip, #2
   1176c:	mov	r3, r2
   11770:	mov	r2, r0
   11774:	movw	r1, #9828	; 0x2664
   11778:	movt	r1, #1
   1177c:	ldr	r0, [ip]
   11780:	bl	10d88 <fprintf@plt>
   11784:	b	11734 <callback@@Base+0x50>

00011788 <main@@Base>:
   11788:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1178c:	strd	r6, [sp, #8]
   11790:	strd	r8, [sp, #16]
   11794:	strd	sl, [sp, #24]
   11798:	str	lr, [sp, #32]
   1179c:	sub	sp, sp, #20
   117a0:	cmp	r0, #1
   117a4:	beq	117e4 <main@@Base+0x5c>
   117a8:	mov	r6, r0
   117ac:	mov	r7, r1
   117b0:	ldr	r4, [r1, #4]
   117b4:	movw	r1, #9864	; 0x2688
   117b8:	movt	r1, #1
   117bc:	mov	r0, r4
   117c0:	bl	10cb0 <strcmp@plt>
   117c4:	cmp	r0, #0
   117c8:	beq	117e4 <main@@Base+0x5c>
   117cc:	movw	r1, #8804	; 0x2264
   117d0:	movt	r1, #1
   117d4:	mov	r0, r4
   117d8:	bl	10cb0 <strcmp@plt>
   117dc:	cmp	r0, #0
   117e0:	bne	117f0 <main@@Base+0x68>
   117e4:	bl	10f50 <_start@@Base+0xf0>
   117e8:	mov	r0, #0
   117ec:	bl	10d70 <exit@plt>
   117f0:	movw	r1, #9868	; 0x268c
   117f4:	movt	r1, #1
   117f8:	mov	r0, r4
   117fc:	bl	10cb0 <strcmp@plt>
   11800:	cmp	r0, #0
   11804:	beq	11820 <main@@Base+0x98>
   11808:	movw	r1, #9872	; 0x2690
   1180c:	movt	r1, #1
   11810:	mov	r0, r4
   11814:	bl	10cb0 <strcmp@plt>
   11818:	cmp	r0, #0
   1181c:	bne	11850 <main@@Base+0xc8>
   11820:	bl	10e24 <coda_get_libcoda_version@plt>
   11824:	mov	r1, r0
   11828:	movw	r0, #9884	; 0x269c
   1182c:	movt	r0, #1
   11830:	bl	10cbc <printf@plt>
   11834:	movw	r0, #9900	; 0x26ac
   11838:	movt	r0, #1
   1183c:	bl	10d34 <puts@plt>
   11840:	mov	r0, #10
   11844:	bl	10db8 <putchar@plt>
   11848:	mov	r0, #0
   1184c:	bl	10d70 <exit@plt>
   11850:	cmp	r6, #2
   11854:	ble	118a4 <main@@Base+0x11c>
   11858:	movw	r1, #9948	; 0x26dc
   1185c:	movt	r1, #1
   11860:	mov	r0, r4
   11864:	bl	10cb0 <strcmp@plt>
   11868:	cmp	r0, #0
   1186c:	beq	11894 <main@@Base+0x10c>
   11870:	movw	r2, #9952	; 0x26e0
   11874:	movt	r2, #1
   11878:	mov	r1, #0
   1187c:	ldr	r0, [r7]
   11880:	bl	10cec <coda_set_definition_path_conditional@plt>
   11884:	cmp	r0, #0
   11888:	bne	118e4 <main@@Base+0x15c>
   1188c:	mov	r4, #1
   11890:	b	118cc <main@@Base+0x144>
   11894:	ldr	r0, [r7, #8]
   11898:	bl	10cf8 <coda_set_definition_path@plt>
   1189c:	mov	r4, #3
   118a0:	b	118c4 <main@@Base+0x13c>
   118a4:	movw	r2, #9952	; 0x26e0
   118a8:	movt	r2, #1
   118ac:	mov	r1, #0
   118b0:	ldr	r0, [r7]
   118b4:	bl	10cec <coda_set_definition_path_conditional@plt>
   118b8:	cmp	r0, #0
   118bc:	moveq	r4, #1
   118c0:	bne	118e4 <main@@Base+0x15c>
   118c4:	cmp	r4, r6
   118c8:	bge	11b40 <main@@Base+0x3b8>
   118cc:	mov	sl, #0
   118d0:	mov	r3, #1
   118d4:	str	r3, [sp, #12]
   118d8:	movw	r9, #9992	; 0x2708
   118dc:	movt	r9, #1
   118e0:	b	11a74 <main@@Base+0x2ec>
   118e4:	movw	r3, #12464	; 0x30b0
   118e8:	movt	r3, #2
   118ec:	ldr	r4, [r3]
   118f0:	bl	10e30 <coda_get_errno@plt>
   118f4:	ldr	r0, [r0]
   118f8:	bl	10e00 <coda_errno_to_string@plt>
   118fc:	mov	r2, r0
   11900:	movw	r1, #9980	; 0x26fc
   11904:	movt	r1, #1
   11908:	mov	r0, r4
   1190c:	bl	10d88 <fprintf@plt>
   11910:	mov	r0, #1
   11914:	bl	10d70 <exit@plt>
   11918:	movw	r3, #12464	; 0x30b0
   1191c:	movt	r3, #2
   11920:	ldr	r4, [r3]
   11924:	bl	10e30 <coda_get_errno@plt>
   11928:	ldr	r0, [r0]
   1192c:	bl	10e00 <coda_errno_to_string@plt>
   11930:	mov	r2, r0
   11934:	movw	r1, #10004	; 0x2714
   11938:	movt	r1, #1
   1193c:	mov	r0, r4
   11940:	bl	10d88 <fprintf@plt>
   11944:	mov	r0, #1
   11948:	bl	10d70 <exit@plt>
   1194c:	ldrb	r3, [r5]
   11950:	cmp	r3, #45	; 0x2d
   11954:	beq	11a38 <main@@Base+0x2b0>
   11958:	cmp	r6, r4
   1195c:	ble	11b40 <main@@Base+0x3b8>
   11960:	ldr	r1, [pc, #1004]	; 11d54 <main@@Base+0x5cc>
   11964:	mov	r0, r5
   11968:	bl	10e18 <coda_expression_from_string@plt>
   1196c:	cmp	r0, #0
   11970:	bne	11b6c <main@@Base+0x3e4>
   11974:	add	r4, r4, #1
   11978:	movw	r3, #12472	; 0x30b8
   1197c:	movt	r3, #2
   11980:	mov	r1, r3
   11984:	ldr	r0, [r3, #4]
   11988:	bl	10dc4 <coda_expression_get_type@plt>
   1198c:	cmp	r0, #0
   11990:	bne	11ba0 <main@@Base+0x418>
   11994:	movw	r3, #12472	; 0x30b8
   11998:	movt	r3, #2
   1199c:	ldr	r0, [r3]
   119a0:	sub	r3, r0, #4
   119a4:	cmp	r3, #1
   119a8:	bls	11bd4 <main@@Base+0x44c>
   119ac:	cmp	sl, #0
   119b0:	bne	11c00 <main@@Base+0x478>
   119b4:	cmp	r6, r4
   119b8:	bgt	11c24 <main@@Base+0x49c>
   119bc:	movw	r3, #12472	; 0x30b8
   119c0:	movt	r3, #2
   119c4:	ldr	r3, [r3, #8]
   119c8:	cmp	r3, #0
   119cc:	bne	11cd0 <main@@Base+0x548>
   119d0:	movw	r3, #12472	; 0x30b8
   119d4:	movt	r3, #2
   119d8:	ldr	r0, [r3, #4]
   119dc:	bl	10ddc <coda_expression_is_constant@plt>
   119e0:	cmp	r0, #0
   119e4:	beq	11cf8 <main@@Base+0x570>
   119e8:	mov	r0, #0
   119ec:	bl	11114 <_start@@Base+0x2b4>
   119f0:	cmp	r0, #0
   119f4:	bne	11d20 <main@@Base+0x598>
   119f8:	movw	r4, #12472	; 0x30b8
   119fc:	movt	r4, #2
   11a00:	ldr	r0, [r4, #4]
   11a04:	bl	10d4c <coda_expression_delete@plt>
   11a08:	ldr	r0, [r4, #8]
   11a0c:	cmp	r0, #0
   11a10:	beq	11a18 <main@@Base+0x290>
   11a14:	bl	10d4c <coda_expression_delete@plt>
   11a18:	mov	r0, #0
   11a1c:	add	sp, sp, #20
   11a20:	ldrd	r4, [sp]
   11a24:	ldrd	r6, [sp, #8]
   11a28:	ldrd	r8, [sp, #16]
   11a2c:	ldrd	sl, [sp, #24]
   11a30:	add	sp, sp, #32
   11a34:	pop	{pc}		; (ldr pc, [sp], #4)
   11a38:	movw	r3, #12464	; 0x30b0
   11a3c:	movt	r3, #2
   11a40:	ldr	r3, [r3]
   11a44:	mov	r2, #25
   11a48:	mov	r1, #1
   11a4c:	movw	r0, #10044	; 0x273c
   11a50:	movt	r0, #1
   11a54:	bl	10d04 <fwrite@plt>
   11a58:	bl	10f50 <_start@@Base+0xf0>
   11a5c:	mov	r0, #1
   11a60:	bl	10d70 <exit@plt>
   11a64:	mov	sl, #1
   11a68:	add	r4, r4, #1
   11a6c:	cmp	r6, r4
   11a70:	ble	11b40 <main@@Base+0x3b8>
   11a74:	lsl	r8, r4, #2
   11a78:	ldr	r5, [r7, r4, lsl #2]
   11a7c:	mov	r1, r9
   11a80:	mov	r0, r5
   11a84:	bl	10cb0 <strcmp@plt>
   11a88:	cmp	r0, #0
   11a8c:	beq	11a64 <main@@Base+0x2dc>
   11a90:	movw	r1, #8084	; 0x1f94
   11a94:	movt	r1, #1
   11a98:	mov	r0, r5
   11a9c:	bl	10cb0 <strcmp@plt>
   11aa0:	cmp	r0, #0
   11aa4:	beq	11b28 <main@@Base+0x3a0>
   11aa8:	movw	r1, #9996	; 0x270c
   11aac:	movt	r1, #1
   11ab0:	mov	r0, r5
   11ab4:	bl	10cb0 <strcmp@plt>
   11ab8:	cmp	r0, #0
   11abc:	beq	11b30 <main@@Base+0x3a8>
   11ac0:	movw	r1, #8268	; 0x204c
   11ac4:	movt	r1, #1
   11ac8:	mov	r0, r5
   11acc:	bl	10cb0 <strcmp@plt>
   11ad0:	cmp	r0, #0
   11ad4:	beq	11b38 <main@@Base+0x3b0>
   11ad8:	movw	r1, #10000	; 0x2710
   11adc:	movt	r1, #1
   11ae0:	mov	r0, r5
   11ae4:	bl	10cb0 <strcmp@plt>
   11ae8:	cmp	r0, #0
   11aec:	bne	1194c <main@@Base+0x1c4>
   11af0:	add	fp, r4, #1
   11af4:	cmp	fp, r6
   11af8:	bge	1194c <main@@Base+0x1c4>
   11afc:	add	r3, r7, r8
   11b00:	ldr	r0, [r3, #4]
   11b04:	ldrb	r3, [r0]
   11b08:	cmp	r3, #45	; 0x2d
   11b0c:	beq	1194c <main@@Base+0x1c4>
   11b10:	ldr	r1, [pc, #576]	; 11d58 <main@@Base+0x5d0>
   11b14:	bl	10e18 <coda_expression_from_string@plt>
   11b18:	cmp	r0, #0
   11b1c:	bne	11918 <main@@Base+0x190>
   11b20:	mov	r4, fp
   11b24:	b	11a68 <main@@Base+0x2e0>
   11b28:	mov	sl, #1
   11b2c:	b	11a68 <main@@Base+0x2e0>
   11b30:	str	r0, [sp, #12]
   11b34:	b	11a68 <main@@Base+0x2e0>
   11b38:	str	r0, [sp, #12]
   11b3c:	b	11a68 <main@@Base+0x2e0>
   11b40:	movw	r3, #12464	; 0x30b0
   11b44:	movt	r3, #2
   11b48:	ldr	r3, [r3]
   11b4c:	mov	r2, #25
   11b50:	mov	r1, #1
   11b54:	movw	r0, #10044	; 0x273c
   11b58:	movt	r0, #1
   11b5c:	bl	10d04 <fwrite@plt>
   11b60:	bl	10f50 <_start@@Base+0xf0>
   11b64:	mov	r0, #1
   11b68:	bl	10d70 <exit@plt>
   11b6c:	movw	r3, #12464	; 0x30b0
   11b70:	movt	r3, #2
   11b74:	ldr	r4, [r3]
   11b78:	bl	10e30 <coda_get_errno@plt>
   11b7c:	ldr	r0, [r0]
   11b80:	bl	10e00 <coda_errno_to_string@plt>
   11b84:	mov	r2, r0
   11b88:	movw	r1, #10072	; 0x2758
   11b8c:	movt	r1, #1
   11b90:	mov	r0, r4
   11b94:	bl	10d88 <fprintf@plt>
   11b98:	mov	r0, #1
   11b9c:	bl	10d70 <exit@plt>
   11ba0:	movw	r3, #12464	; 0x30b0
   11ba4:	movt	r3, #2
   11ba8:	ldr	r4, [r3]
   11bac:	bl	10e30 <coda_get_errno@plt>
   11bb0:	ldr	r0, [r0]
   11bb4:	bl	10e00 <coda_errno_to_string@plt>
   11bb8:	mov	r2, r0
   11bbc:	movw	r1, #9980	; 0x26fc
   11bc0:	movt	r1, #1
   11bc4:	mov	r0, r4
   11bc8:	bl	10d88 <fprintf@plt>
   11bcc:	mov	r0, #1
   11bd0:	bl	10d70 <exit@plt>
   11bd4:	movw	r3, #12464	; 0x30b0
   11bd8:	movt	r3, #2
   11bdc:	ldr	r4, [r3]
   11be0:	bl	10e0c <coda_expression_get_type_name@plt>
   11be4:	mov	r2, r0
   11be8:	movw	r1, #10104	; 0x2778
   11bec:	movt	r1, #1
   11bf0:	mov	r0, r4
   11bf4:	bl	10d88 <fprintf@plt>
   11bf8:	mov	r0, #1
   11bfc:	bl	10d70 <exit@plt>
   11c00:	movw	r4, #12472	; 0x30b8
   11c04:	movt	r4, #2
   11c08:	ldr	r0, [r4, #4]
   11c0c:	bl	10d4c <coda_expression_delete@plt>
   11c10:	ldr	r0, [r4, #8]
   11c14:	cmp	r0, #0
   11c18:	beq	11a18 <main@@Base+0x290>
   11c1c:	bl	10d4c <coda_expression_delete@plt>
   11c20:	b	11a18 <main@@Base+0x290>
   11c24:	bl	10d94 <coda_init@plt>
   11c28:	cmp	r0, #0
   11c2c:	bne	11c68 <main@@Base+0x4e0>
   11c30:	ldr	r0, [sp, #12]
   11c34:	bl	10da0 <coda_set_option_perform_conversions@plt>
   11c38:	add	r2, r8, #4
   11c3c:	mov	r0, #0
   11c40:	str	r0, [sp]
   11c44:	movw	r3, #5860	; 0x16e4
   11c48:	movt	r3, #1
   11c4c:	add	r2, r7, r2
   11c50:	sub	r1, r6, r4
   11c54:	bl	10c98 <coda_match_filefilter@plt>
   11c58:	cmp	r0, #0
   11c5c:	bne	11c9c <main@@Base+0x514>
   11c60:	bl	10d28 <coda_done@plt>
   11c64:	b	119f8 <main@@Base+0x270>
   11c68:	movw	r3, #12464	; 0x30b0
   11c6c:	movt	r3, #2
   11c70:	ldr	r4, [r3]
   11c74:	bl	10e30 <coda_get_errno@plt>
   11c78:	ldr	r0, [r0]
   11c7c:	bl	10e00 <coda_errno_to_string@plt>
   11c80:	mov	r2, r0
   11c84:	movw	r1, #9980	; 0x26fc
   11c88:	movt	r1, #1
   11c8c:	mov	r0, r4
   11c90:	bl	10d88 <fprintf@plt>
   11c94:	mov	r0, #1
   11c98:	bl	10d70 <exit@plt>
   11c9c:	movw	r3, #12464	; 0x30b0
   11ca0:	movt	r3, #2
   11ca4:	ldr	r4, [r3]
   11ca8:	bl	10e30 <coda_get_errno@plt>
   11cac:	ldr	r0, [r0]
   11cb0:	bl	10e00 <coda_errno_to_string@plt>
   11cb4:	mov	r2, r0
   11cb8:	movw	r1, #9980	; 0x26fc
   11cbc:	movt	r1, #1
   11cc0:	mov	r0, r4
   11cc4:	bl	10d88 <fprintf@plt>
   11cc8:	mov	r0, #1
   11ccc:	bl	10d70 <exit@plt>
   11cd0:	movw	r3, #12464	; 0x30b0
   11cd4:	movt	r3, #2
   11cd8:	ldr	r3, [r3]
   11cdc:	mov	r2, #96	; 0x60
   11ce0:	mov	r1, #1
   11ce4:	movw	r0, #10152	; 0x27a8
   11ce8:	movt	r0, #1
   11cec:	bl	10d04 <fwrite@plt>
   11cf0:	mov	r0, #1
   11cf4:	bl	10d70 <exit@plt>
   11cf8:	movw	r3, #12464	; 0x30b0
   11cfc:	movt	r3, #2
   11d00:	ldr	r3, [r3]
   11d04:	mov	r2, #111	; 0x6f
   11d08:	mov	r1, #1
   11d0c:	movw	r0, #10252	; 0x280c
   11d10:	movt	r0, #1
   11d14:	bl	10d04 <fwrite@plt>
   11d18:	mov	r0, #1
   11d1c:	bl	10d70 <exit@plt>
   11d20:	movw	r3, #12464	; 0x30b0
   11d24:	movt	r3, #2
   11d28:	ldr	r4, [r3]
   11d2c:	bl	10e30 <coda_get_errno@plt>
   11d30:	ldr	r0, [r0]
   11d34:	bl	10e00 <coda_errno_to_string@plt>
   11d38:	mov	r2, r0
   11d3c:	movw	r1, #9980	; 0x26fc
   11d40:	movt	r1, #1
   11d44:	mov	r0, r4
   11d48:	bl	10d88 <fprintf@plt>
   11d4c:	mov	r0, #1
   11d50:	bl	10d70 <exit@plt>
   11d54:	strheq	r3, [r2], -ip
   11d58:	andeq	r3, r2, r0, asr #1

00011d5c <__libc_csu_init@@Base>:
   11d5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d60:	mov	r7, r0
   11d64:	ldr	r6, [pc, #72]	; 11db4 <__libc_csu_init@@Base+0x58>
   11d68:	ldr	r5, [pc, #72]	; 11db8 <__libc_csu_init@@Base+0x5c>
   11d6c:	add	r6, pc, r6
   11d70:	add	r5, pc, r5
   11d74:	sub	r6, r6, r5
   11d78:	mov	r8, r1
   11d7c:	mov	r9, r2
   11d80:	bl	10c78 <coda_match_filefilter@plt-0x20>
   11d84:	asrs	r6, r6, #2
   11d88:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d8c:	mov	r4, #0
   11d90:	add	r4, r4, #1
   11d94:	ldr	r3, [r5], #4
   11d98:	mov	r2, r9
   11d9c:	mov	r1, r8
   11da0:	mov	r0, r7
   11da4:	blx	r3
   11da8:	cmp	r6, r4
   11dac:	bne	11d90 <__libc_csu_init@@Base+0x34>
   11db0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11db4:	andeq	r1, r1, r8, lsl #3
   11db8:	andeq	r1, r1, r0, lsl #3

00011dbc <__libc_csu_fini@@Base>:
   11dbc:	bx	lr

Disassembly of section .fini:

00011dc0 <.fini>:
   11dc0:	push	{r3, lr}
   11dc4:	pop	{r3, pc}
