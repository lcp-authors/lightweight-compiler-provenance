
../repos/coreutils/src/seq:     file format elf32-littlearm


Disassembly of section .init:

00010d24 <.init>:
   10d24:	push	{r3, lr}
   10d28:	bl	11ed0 <strspn@plt+0xeec>
   10d2c:	pop	{r3, pc}

Disassembly of section .plt:

00010d30 <calloc@plt-0x14>:
   10d30:	push	{lr}		; (str lr, [sp, #-4]!)
   10d34:	ldr	lr, [pc, #4]	; 10d40 <calloc@plt-0x4>
   10d38:	add	lr, pc, lr
   10d3c:	ldr	pc, [lr, #8]!
   10d40:	andeq	r9, r1, r0, asr #5

00010d44 <calloc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #102400	; 0x19000
   10d4c:	ldr	pc, [ip, #704]!	; 0x2c0

00010d50 <fputs_unlocked@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #102400	; 0x19000
   10d58:	ldr	pc, [ip, #696]!	; 0x2b8

00010d5c <raise@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #102400	; 0x19000
   10d64:	ldr	pc, [ip, #688]!	; 0x2b0

00010d68 <uselocale@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #102400	; 0x19000
   10d70:	ldr	pc, [ip, #680]!	; 0x2a8

00010d74 <strcmp@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #102400	; 0x19000
   10d7c:	ldr	pc, [ip, #672]!	; 0x2a0

00010d80 <strtol@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #102400	; 0x19000
   10d88:	ldr	pc, [ip, #664]!	; 0x298

00010d8c <strcspn@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #102400	; 0x19000
   10d94:	ldr	pc, [ip, #656]!	; 0x290

00010d98 <fflush@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #102400	; 0x19000
   10da0:	ldr	pc, [ip, #648]!	; 0x288

00010da4 <memmove@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #102400	; 0x19000
   10dac:	ldr	pc, [ip, #640]!	; 0x280

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #102400	; 0x19000
   10db8:	ldr	pc, [ip, #632]!	; 0x278

00010dbc <_exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #102400	; 0x19000
   10dc4:	ldr	pc, [ip, #624]!	; 0x270

00010dc8 <memcpy@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #102400	; 0x19000
   10dd0:	ldr	pc, [ip, #616]!	; 0x268

00010dd4 <mbsinit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #102400	; 0x19000
   10ddc:	ldr	pc, [ip, #608]!	; 0x260

00010de0 <strtold@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #102400	; 0x19000
   10de8:	ldr	pc, [ip, #600]!	; 0x258

00010dec <fwrite_unlocked@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #102400	; 0x19000
   10df4:	ldr	pc, [ip, #592]!	; 0x250

00010df8 <memcmp@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #102400	; 0x19000
   10e00:	ldr	pc, [ip, #584]!	; 0x248

00010e04 <fputc_unlocked@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #102400	; 0x19000
   10e0c:	ldr	pc, [ip, #576]!	; 0x240

00010e10 <dcgettext@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #102400	; 0x19000
   10e18:	ldr	pc, [ip, #568]!	; 0x238

00010e1c <realloc@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #102400	; 0x19000
   10e24:	ldr	pc, [ip, #560]!	; 0x230

00010e28 <textdomain@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #102400	; 0x19000
   10e30:	ldr	pc, [ip, #552]!	; 0x228

00010e34 <iswprint@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #102400	; 0x19000
   10e3c:	ldr	pc, [ip, #544]!	; 0x220

00010e40 <fwrite@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #102400	; 0x19000
   10e48:	ldr	pc, [ip, #536]!	; 0x218

00010e4c <lseek64@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #102400	; 0x19000
   10e54:	ldr	pc, [ip, #528]!	; 0x210

00010e58 <__ctype_get_mb_cur_max@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #102400	; 0x19000
   10e60:	ldr	pc, [ip, #520]!	; 0x208

00010e64 <strcpy@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #102400	; 0x19000
   10e6c:	ldr	pc, [ip, #512]!	; 0x200

00010e70 <__fpending@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #102400	; 0x19000
   10e78:	ldr	pc, [ip, #504]!	; 0x1f8

00010e7c <mbrtowc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #102400	; 0x19000
   10e84:	ldr	pc, [ip, #496]!	; 0x1f0

00010e88 <error@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #102400	; 0x19000
   10e90:	ldr	pc, [ip, #488]!	; 0x1e8

00010e94 <__asprintf_chk@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #102400	; 0x19000
   10e9c:	ldr	pc, [ip, #480]!	; 0x1e0

00010ea0 <malloc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #102400	; 0x19000
   10ea8:	ldr	pc, [ip, #472]!	; 0x1d8

00010eac <__libc_start_main@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #102400	; 0x19000
   10eb4:	ldr	pc, [ip, #464]!	; 0x1d0

00010eb8 <__freading@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #102400	; 0x19000
   10ec0:	ldr	pc, [ip, #456]!	; 0x1c8

00010ec4 <__gmon_start__@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #102400	; 0x19000
   10ecc:	ldr	pc, [ip, #448]!	; 0x1c0

00010ed0 <mempcpy@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #102400	; 0x19000
   10ed8:	ldr	pc, [ip, #440]!	; 0x1b8

00010edc <getopt_long@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #102400	; 0x19000
   10ee4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ee8 <__ctype_b_loc@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #102400	; 0x19000
   10ef0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ef4 <exit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #102400	; 0x19000
   10efc:	ldr	pc, [ip, #416]!	; 0x1a0

00010f00 <strlen@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #102400	; 0x19000
   10f08:	ldr	pc, [ip, #408]!	; 0x198

00010f0c <strchr@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #102400	; 0x19000
   10f14:	ldr	pc, [ip, #400]!	; 0x190

00010f18 <__errno_location@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #102400	; 0x19000
   10f20:	ldr	pc, [ip, #392]!	; 0x188

00010f24 <__sprintf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #102400	; 0x19000
   10f2c:	ldr	pc, [ip, #384]!	; 0x180

00010f30 <__cxa_atexit@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #102400	; 0x19000
   10f38:	ldr	pc, [ip, #376]!	; 0x178

00010f3c <memset@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #102400	; 0x19000
   10f44:	ldr	pc, [ip, #368]!	; 0x170

00010f48 <__printf_chk@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #102400	; 0x19000
   10f50:	ldr	pc, [ip, #360]!	; 0x168

00010f54 <fileno@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #102400	; 0x19000
   10f5c:	ldr	pc, [ip, #352]!	; 0x160

00010f60 <__fprintf_chk@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #102400	; 0x19000
   10f68:	ldr	pc, [ip, #344]!	; 0x158

00010f6c <fclose@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #102400	; 0x19000
   10f74:	ldr	pc, [ip, #336]!	; 0x150

00010f78 <fseeko64@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #102400	; 0x19000
   10f80:	ldr	pc, [ip, #328]!	; 0x148

00010f84 <setlocale@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #102400	; 0x19000
   10f8c:	ldr	pc, [ip, #320]!	; 0x140

00010f90 <strrchr@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #102400	; 0x19000
   10f98:	ldr	pc, [ip, #312]!	; 0x138

00010f9c <nl_langinfo@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #102400	; 0x19000
   10fa4:	ldr	pc, [ip, #304]!	; 0x130

00010fa8 <newlocale@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #102400	; 0x19000
   10fb0:	ldr	pc, [ip, #296]!	; 0x128

00010fb4 <clearerr_unlocked@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #102400	; 0x19000
   10fbc:	ldr	pc, [ip, #288]!	; 0x120

00010fc0 <bindtextdomain@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #102400	; 0x19000
   10fc8:	ldr	pc, [ip, #280]!	; 0x118

00010fcc <strncmp@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #102400	; 0x19000
   10fd4:	ldr	pc, [ip, #272]!	; 0x110

00010fd8 <abort@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #102400	; 0x19000
   10fe0:	ldr	pc, [ip, #264]!	; 0x108

00010fe4 <strspn@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #102400	; 0x19000
   10fec:	ldr	pc, [ip, #256]!	; 0x100

Disassembly of section .text:

00010ff0 <.text>:
   10ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ff4:	mov	r5, r1
   10ff8:	sub	sp, sp, #28
   10ffc:	mov	r6, r0
   11000:	ldr	r1, [pc, #788]	; 1131c <strspn@plt+0x338>
   11004:	mov	r0, r5
   11008:	str	r3, [sp, #16]
   1100c:	str	r2, [sp, #12]
   11010:	bl	10d74 <strcmp@plt>
   11014:	mov	r3, r6
   11018:	str	r0, [sp]
   1101c:	ldrb	r2, [r3]
   11020:	mov	r4, r3
   11024:	add	r3, r3, #1
   11028:	cmp	r2, #48	; 0x30
   1102c:	beq	1101c <strspn@plt+0x38>
   11030:	subs	r6, r6, r4
   11034:	movne	r6, #1
   11038:	cmp	r2, #0
   1103c:	movne	r6, #0
   11040:	cmp	r6, #0
   11044:	subne	r4, r4, #1
   11048:	mov	r3, r5
   1104c:	ldrb	r2, [r3]
   11050:	mov	r6, r3
   11054:	add	r3, r3, #1
   11058:	cmp	r2, #48	; 0x30
   1105c:	beq	1104c <strspn@plt+0x68>
   11060:	subs	r5, r5, r6
   11064:	movne	r5, #1
   11068:	cmp	r2, #0
   1106c:	movne	r5, #0
   11070:	cmp	r5, #0
   11074:	mov	r0, r4
   11078:	subne	r6, r6, #1
   1107c:	bl	10f00 <strlen@plt>
   11080:	ldr	r3, [sp]
   11084:	cmp	r3, #0
   11088:	ldreq	r9, [sp]
   1108c:	mov	r5, r0
   11090:	beq	110a0 <strspn@plt+0xbc>
   11094:	mov	r0, r6
   11098:	bl	10f00 <strlen@plt>
   1109c:	mov	r9, r0
   110a0:	add	fp, r5, #1
   110a4:	cmp	fp, #31
   110a8:	movcc	r8, #31
   110ac:	movcs	r8, fp
   110b0:	cmp	r8, r9
   110b4:	movcc	r8, r9
   110b8:	add	r7, r8, #1
   110bc:	mov	r0, r7
   110c0:	bl	17308 <strspn@plt+0x6324>
   110c4:	mov	r1, r4
   110c8:	mov	r2, fp
   110cc:	mov	sl, r0
   110d0:	sub	r0, r8, r5
   110d4:	add	r0, sl, r0
   110d8:	bl	10dc8 <memcpy@plt>
   110dc:	ldr	r3, [sp]
   110e0:	cmp	r3, #0
   110e4:	ldreq	r3, [sp]
   110e8:	streq	r3, [sp, #4]
   110ec:	mov	r4, r0
   110f0:	beq	11140 <strspn@plt+0x15c>
   110f4:	mov	r0, r7
   110f8:	bl	17308 <strspn@plt+0x6324>
   110fc:	mov	r1, r6
   11100:	add	r2, r9, #1
   11104:	mov	fp, r0
   11108:	sub	r0, r8, r9
   1110c:	add	r0, fp, r0
   11110:	bl	10dc8 <memcpy@plt>
   11114:	cmp	r9, r5
   11118:	mov	r6, r0
   1111c:	bhi	1113c <strspn@plt+0x158>
   11120:	bcc	11304 <strspn@plt+0x320>
   11124:	mov	r1, r0
   11128:	mov	r2, r5
   1112c:	mov	r0, r4
   11130:	bl	10df8 <memcmp@plt>
   11134:	cmp	r0, #0
   11138:	bgt	11304 <strspn@plt+0x320>
   1113c:	str	r6, [sp, #4]
   11140:	lsl	r7, r7, #1
   11144:	cmp	r7, #8192	; 0x2000
   11148:	movcc	r7, #8192	; 0x2000
   1114c:	mov	r0, r7
   11150:	bl	17308 <strspn@plt+0x6324>
   11154:	mov	r2, r5
   11158:	mov	r1, r4
   1115c:	mov	fp, r0
   11160:	bl	10ed0 <mempcpy@plt>
   11164:	add	r3, fp, r7
   11168:	str	r3, [sp, #8]
   1116c:	mov	r6, r0
   11170:	ldr	r0, [sp, #12]
   11174:	ldr	r1, [sp, #16]
   11178:	orrs	r3, r0, r1
   1117c:	beq	111c8 <strspn@plt+0x1e4>
   11180:	sub	r3, r5, #1
   11184:	add	r3, r4, r3
   11188:	ldrb	r2, [r3]
   1118c:	cmp	r2, #56	; 0x38
   11190:	addls	r2, r2, #1
   11194:	strbls	r2, [r3]
   11198:	bls	111bc <strspn@plt+0x1d8>
   1119c:	mov	r2, #48	; 0x30
   111a0:	strb	r2, [r3], #-1
   111a4:	cmp	r3, r4
   111a8:	bcs	11188 <strspn@plt+0x1a4>
   111ac:	mov	r3, #49	; 0x31
   111b0:	strb	r3, [r4, #-1]
   111b4:	add	r5, r5, #1
   111b8:	sub	r4, r4, #1
   111bc:	subs	r0, r0, #1
   111c0:	sbc	r1, r1, #0
   111c4:	b	11178 <strspn@plt+0x194>
   111c8:	ldr	r3, [sp]
   111cc:	clz	r3, r3
   111d0:	lsr	r3, r3, #5
   111d4:	cmp	r9, r5
   111d8:	orrhi	r3, r3, #1
   111dc:	cmp	r3, #0
   111e0:	bne	11204 <strspn@plt+0x220>
   111e4:	cmp	r9, r5
   111e8:	bcc	112d4 <strspn@plt+0x2f0>
   111ec:	mov	r2, r5
   111f0:	ldr	r1, [sp, #4]
   111f4:	mov	r0, r4
   111f8:	bl	10df8 <memcmp@plt>
   111fc:	cmp	r0, #0
   11200:	bgt	112d4 <strspn@plt+0x2f0>
   11204:	ldr	r3, [pc, #276]	; 11320 <strspn@plt+0x33c>
   11208:	cmp	r8, r5
   1120c:	ldr	r2, [r3]
   11210:	add	r3, r6, #1
   11214:	ldrb	r2, [r2]
   11218:	strb	r2, [r6]
   1121c:	bne	11284 <strspn@plt+0x2a0>
   11220:	lsl	r8, r8, #1
   11224:	add	r6, r8, #1
   11228:	mov	r1, r6
   1122c:	mov	r0, sl
   11230:	str	r3, [sp, #20]
   11234:	bl	17344 <strspn@plt+0x6360>
   11238:	add	r2, r5, #1
   1123c:	lsl	r6, r6, #1
   11240:	mov	r1, r0
   11244:	mov	sl, r0
   11248:	add	r0, r0, r5
   1124c:	bl	10da4 <memmove@plt>
   11250:	cmp	r7, r6
   11254:	ldr	r3, [sp, #20]
   11258:	mov	r4, r0
   1125c:	bcs	11284 <strspn@plt+0x2a0>
   11260:	mov	r0, fp
   11264:	mov	r1, r6
   11268:	sub	r7, r3, fp
   1126c:	bl	17344 <strspn@plt+0x6360>
   11270:	add	r3, r0, r7
   11274:	mov	fp, r0
   11278:	mov	r7, r6
   1127c:	add	r2, r0, r6
   11280:	str	r2, [sp, #8]
   11284:	mov	r0, r3
   11288:	mov	r2, r5
   1128c:	mov	r1, r4
   11290:	bl	10ed0 <mempcpy@plt>
   11294:	ldr	r2, [sp, #8]
   11298:	mvn	r3, r5
   1129c:	add	r3, r2, r3
   112a0:	cmp	r0, r3
   112a4:	movls	r6, r0
   112a8:	bls	11170 <strspn@plt+0x18c>
   112ac:	ldr	r3, [pc, #112]	; 11324 <strspn@plt+0x340>
   112b0:	sub	r1, r0, fp
   112b4:	mov	r2, #1
   112b8:	ldr	r3, [r3]
   112bc:	mov	r0, fp
   112c0:	bl	10dec <fwrite_unlocked@plt>
   112c4:	cmp	r0, #1
   112c8:	moveq	r6, fp
   112cc:	beq	11170 <strspn@plt+0x18c>
   112d0:	bl	12008 <strspn@plt+0x1024>
   112d4:	ldr	r3, [pc, #72]	; 11324 <strspn@plt+0x340>
   112d8:	mov	r2, #10
   112dc:	strb	r2, [r6], #1
   112e0:	mov	r0, fp
   112e4:	sub	r1, r6, fp
   112e8:	ldr	r3, [r3]
   112ec:	mov	r2, #1
   112f0:	bl	10dec <fwrite_unlocked@plt>
   112f4:	cmp	r0, #1
   112f8:	bne	112d0 <strspn@plt+0x2ec>
   112fc:	mov	r0, #0
   11300:	bl	10ef4 <exit@plt>
   11304:	mov	r0, sl
   11308:	bl	12828 <strspn@plt+0x1844>
   1130c:	mov	r0, fp
   11310:	add	sp, sp, #28
   11314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11318:	b	12828 <strspn@plt+0x1844>
   1131c:	andeq	r8, r1, ip, lsr #11
   11320:	andeq	sl, r2, r8, ror #2
   11324:	andeq	sl, r2, ip, asr r1
   11328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1132c:	vpush	{d8-d14}
   11330:	ldr	r5, [pc, #1648]	; 119a8 <strspn@plt+0x9c4>
   11334:	mov	r6, r1
   11338:	mov	r7, r0
   1133c:	ldm	r5, {r0, r1, r2, r3}
   11340:	sub	sp, sp, #84	; 0x54
   11344:	add	ip, sp, #48	; 0x30
   11348:	ldr	fp, [pc, #1628]	; 119ac <strspn@plt+0x9c8>
   1134c:	stm	ip, {r0, r1, r2, r3}
   11350:	add	r5, r5, #16
   11354:	ldr	r0, [r6]
   11358:	bl	12880 <strspn@plt+0x189c>
   1135c:	ldr	r1, [pc, #1612]	; 119b0 <strspn@plt+0x9cc>
   11360:	mov	r0, #6
   11364:	bl	10f84 <setlocale@plt>
   11368:	ldr	r1, [pc, #1604]	; 119b4 <strspn@plt+0x9d0>
   1136c:	ldr	sl, [pc, #1604]	; 119b8 <strspn@plt+0x9d4>
   11370:	ldr	r9, [pc, #1604]	; 119bc <strspn@plt+0x9d8>
   11374:	adds	r3, r0, #0
   11378:	movne	r3, #1
   1137c:	ldr	r0, [pc, #1596]	; 119c0 <strspn@plt+0x9dc>
   11380:	strb	r3, [fp, #32]
   11384:	bl	10fc0 <bindtextdomain@plt>
   11388:	ldr	r0, [pc, #1584]	; 119c0 <strspn@plt+0x9dc>
   1138c:	bl	10e28 <textdomain@plt>
   11390:	ldr	r0, [pc, #1580]	; 119c4 <strspn@plt+0x9e0>
   11394:	bl	184bc <strspn@plt+0x74d8>
   11398:	mov	r3, #0
   1139c:	ldr	r2, [pc, #1572]	; 119c8 <strspn@plt+0x9e4>
   113a0:	mov	r4, r3
   113a4:	mov	r8, r3
   113a8:	str	r2, [fp]
   113ac:	strb	r3, [fp, #33]	; 0x21
   113b0:	ldr	r3, [sl]
   113b4:	cmp	r3, r7
   113b8:	bge	114d0 <strspn@plt+0x4ec>
   113bc:	ldr	r3, [r6, r3, lsl #2]
   113c0:	ldrb	r2, [r3]
   113c4:	cmp	r2, #45	; 0x2d
   113c8:	bne	113e4 <strspn@plt+0x400>
   113cc:	ldrb	r3, [r3, #1]
   113d0:	cmp	r3, #46	; 0x2e
   113d4:	beq	114d0 <strspn@plt+0x4ec>
   113d8:	sub	r3, r3, #48	; 0x30
   113dc:	cmp	r3, #9
   113e0:	bls	114d0 <strspn@plt+0x4ec>
   113e4:	str	r8, [sp]
   113e8:	mov	r3, r5
   113ec:	mov	r2, r9
   113f0:	mov	r1, r6
   113f4:	mov	r0, r7
   113f8:	bl	10edc <getopt_long@plt>
   113fc:	cmn	r0, #1
   11400:	beq	114d0 <strspn@plt+0x4ec>
   11404:	cmp	r0, #102	; 0x66
   11408:	beq	114c4 <strspn@plt+0x4e0>
   1140c:	bgt	11428 <strspn@plt+0x444>
   11410:	cmn	r0, #3
   11414:	beq	11454 <strspn@plt+0x470>
   11418:	cmn	r0, #2
   1141c:	bne	114bc <strspn@plt+0x4d8>
   11420:	mov	r0, #0
   11424:	bl	12048 <strspn@plt+0x1064>
   11428:	cmp	r0, #115	; 0x73
   1142c:	beq	11444 <strspn@plt+0x460>
   11430:	cmp	r0, #119	; 0x77
   11434:	bne	114bc <strspn@plt+0x4d8>
   11438:	mov	r3, #1
   1143c:	strb	r3, [fp, #33]	; 0x21
   11440:	b	113b0 <strspn@plt+0x3cc>
   11444:	ldr	r3, [pc, #1408]	; 119cc <strspn@plt+0x9e8>
   11448:	ldr	r3, [r3]
   1144c:	str	r3, [fp]
   11450:	b	113b0 <strspn@plt+0x3cc>
   11454:	ldr	r1, [pc, #1396]	; 119d0 <strspn@plt+0x9ec>
   11458:	ldr	r3, [pc, #1396]	; 119d4 <strspn@plt+0x9f0>
   1145c:	ldr	r2, [pc, #1396]	; 119d8 <strspn@plt+0x9f4>
   11460:	str	r8, [sp, #4]
   11464:	ldr	r0, [r1]
   11468:	ldr	r3, [r3]
   1146c:	ldr	r1, [pc, #1384]	; 119dc <strspn@plt+0x9f8>
   11470:	str	r2, [sp]
   11474:	ldr	r2, [pc, #1380]	; 119e0 <strspn@plt+0x9fc>
   11478:	bl	17120 <strspn@plt+0x613c>
   1147c:	mov	r0, #0
   11480:	bl	10ef4 <exit@plt>
   11484:	mov	r2, #5
   11488:	ldr	r1, [pc, #1364]	; 119e4 <strspn@plt+0xa00>
   1148c:	mov	r0, #0
   11490:	bl	10e10 <dcgettext@plt>
   11494:	ldr	r3, [sl]
   11498:	add	r3, r3, #3
   1149c:	mov	r4, r0
   114a0:	ldr	r0, [r6, r3, lsl #2]
   114a4:	bl	1674c <strspn@plt+0x5768>
   114a8:	mov	r1, #0
   114ac:	mov	r2, r4
   114b0:	mov	r3, r0
   114b4:	mov	r0, r1
   114b8:	bl	10e88 <error@plt>
   114bc:	mov	r0, #1
   114c0:	bl	12048 <strspn@plt+0x1064>
   114c4:	ldr	r3, [pc, #1280]	; 119cc <strspn@plt+0x9e8>
   114c8:	ldr	r4, [r3]
   114cc:	b	113b0 <strspn@plt+0x3cc>
   114d0:	ldr	r3, [sl]
   114d4:	subs	r3, r7, r3
   114d8:	str	r3, [sp, #8]
   114dc:	beq	11908 <strspn@plt+0x924>
   114e0:	ldr	r3, [sp, #8]
   114e4:	cmp	r3, #3
   114e8:	bhi	11484 <strspn@plt+0x4a0>
   114ec:	cmp	r4, #0
   114f0:	beq	11548 <strspn@plt+0x564>
   114f4:	mov	r2, #1
   114f8:	mov	r1, r2
   114fc:	mov	r3, #0
   11500:	mov	lr, #2
   11504:	b	1151c <strspn@plt+0x538>
   11508:	cmp	r8, #0
   1150c:	beq	11d78 <strspn@plt+0xd94>
   11510:	mov	r0, r1
   11514:	add	r3, r3, r0
   11518:	add	r2, r2, #1
   1151c:	ldrb	r8, [r4, r3]
   11520:	sub	r5, r2, #1
   11524:	cmp	r8, #37	; 0x25
   11528:	bne	11508 <strspn@plt+0x524>
   1152c:	add	r8, r3, #1
   11530:	add	r0, r4, r8
   11534:	ldrb	ip, [r4, r8]
   11538:	cmp	ip, #37	; 0x25
   1153c:	bne	117d8 <strspn@plt+0x7f4>
   11540:	mov	r0, lr
   11544:	b	11514 <strspn@plt+0x530>
   11548:	mov	r5, r4
   1154c:	str	r4, [sp, #20]
   11550:	ldr	r3, [sp, #8]
   11554:	cmp	r3, #3
   11558:	beq	11a14 <strspn@plt+0xa30>
   1155c:	ldr	r9, [sl]
   11560:	ldr	r8, [r6, r9, lsl #2]
   11564:	mov	r0, r8
   11568:	bl	11fc0 <strspn@plt+0xfdc>
   1156c:	cmp	r0, #0
   11570:	beq	11594 <strspn@plt+0x5b0>
   11574:	ldr	r3, [sp, #8]
   11578:	cmp	r3, #1
   1157c:	beq	11a90 <strspn@plt+0xaac>
   11580:	add	r3, r9, #1
   11584:	ldr	r0, [r6, r3, lsl #2]
   11588:	bl	11fc0 <strspn@plt+0xfdc>
   1158c:	cmp	r0, #0
   11590:	bne	11a90 <strspn@plt+0xaac>
   11594:	ldr	r3, [sl]
   11598:	add	r0, sp, #64	; 0x40
   1159c:	add	r2, r3, #1
   115a0:	ldr	r1, [r6, r3, lsl #2]
   115a4:	str	r2, [sl]
   115a8:	bl	12388 <strspn@plt+0x13a4>
   115ac:	ldr	r3, [sl]
   115b0:	vldr	d12, [sp, #64]	; 0x40
   115b4:	cmp	r7, r3
   115b8:	ldr	r8, [sp, #72]	; 0x48
   115bc:	ldr	r9, [sp, #76]	; 0x4c
   115c0:	bgt	11930 <strspn@plt+0x94c>
   115c4:	ldr	r3, [sp, #60]	; 0x3c
   115c8:	orrs	r3, r9, r3
   115cc:	beq	11cc4 <strspn@plt+0xce0>
   115d0:	vmov.f64	d11, d12
   115d4:	vldr	d12, [pc, #956]	; 11998 <strspn@plt+0x9b4>
   115d8:	mov	r7, r8
   115dc:	mov	r3, r9
   115e0:	mov	r1, #0
   115e4:	mov	r8, #1
   115e8:	cmp	r4, #0
   115ec:	beq	11c2c <strspn@plt+0xc48>
   115f0:	vldr	d10, [sp, #48]	; 0x30
   115f4:	vcmpe.f64	d10, #0.0
   115f8:	vmrs	APSR_nzcv, fpscr
   115fc:	vcmpe.f64	d12, d11
   11600:	bmi	11b18 <strspn@plt+0xb34>
   11604:	vmrs	APSR_nzcv, fpscr
   11608:	movgt	r9, #1
   1160c:	movle	r9, #0
   11610:	cmp	r9, #0
   11614:	bne	117d0 <strspn@plt+0x7ec>
   11618:	vldr	d9, [pc, #888]	; 11998 <strspn@plt+0x9b4>
   1161c:	str	r5, [sp, #8]
   11620:	vmov	r6, r7, d12
   11624:	vldr	d13, [pc, #884]	; 119a0 <strspn@plt+0x9bc>
   11628:	ldr	sl, [pc, #928]	; 119d0 <strspn@plt+0x9ec>
   1162c:	vmov.f64	d14, d9
   11630:	ldr	r5, [sp, #20]
   11634:	b	11730 <strspn@plt+0x74c>
   11638:	vmrs	APSR_nzcv, fpscr
   1163c:	movgt	r9, #1
   11640:	movle	r9, #0
   11644:	cmp	r9, #0
   11648:	beq	11714 <strspn@plt+0x730>
   1164c:	ldrb	r3, [fp, #32]
   11650:	cmp	r3, #0
   11654:	bne	1177c <strspn@plt+0x798>
   11658:	vstr	d8, [sp]
   1165c:	mov	r2, r4
   11660:	mov	r1, #1
   11664:	add	r0, sp, #32
   11668:	bl	10e94 <__asprintf_chk@plt>
   1166c:	mov	r8, r0
   11670:	cmp	r8, #0
   11674:	blt	11dc4 <strspn@plt+0xde0>
   11678:	ldr	r2, [sp, #32]
   1167c:	sub	r3, r8, r5
   11680:	mov	r8, #0
   11684:	strb	r8, [r2, r3]
   11688:	ldr	r0, [sp, #32]
   1168c:	ldr	r3, [sp, #8]
   11690:	mov	r1, r8
   11694:	add	r0, r0, r3
   11698:	add	r2, sp, #40	; 0x28
   1169c:	ldr	r3, [pc, #876]	; 11a10 <strspn@plt+0xa2c>
   116a0:	bl	17990 <strspn@plt+0x69ac>
   116a4:	cmp	r0, r8
   116a8:	beq	117b0 <strspn@plt+0x7cc>
   116ac:	vldr	d7, [sp, #40]	; 0x28
   116b0:	vcmp.f64	d7, d11
   116b4:	vmrs	APSR_nzcv, fpscr
   116b8:	bne	117b0 <strspn@plt+0x7cc>
   116bc:	strd	r6, [sp]
   116c0:	mov	r2, r4
   116c4:	mov	r1, #1
   116c8:	add	r0, sp, #36	; 0x24
   116cc:	str	r8, [sp, #36]	; 0x24
   116d0:	bl	10e94 <__asprintf_chk@plt>
   116d4:	cmp	r0, #0
   116d8:	blt	11dc4 <strspn@plt+0xde0>
   116dc:	ldr	r3, [sp, #36]	; 0x24
   116e0:	sub	r0, r0, r5
   116e4:	strb	r8, [r3, r0]
   116e8:	ldr	r6, [sp, #36]	; 0x24
   116ec:	ldr	r1, [sp, #32]
   116f0:	mov	r0, r6
   116f4:	bl	10d74 <strcmp@plt>
   116f8:	mov	r7, r0
   116fc:	mov	r0, r6
   11700:	bl	12828 <strspn@plt+0x1844>
   11704:	ldr	r0, [sp, #32]
   11708:	bl	12828 <strspn@plt+0x1844>
   1170c:	cmp	r7, #0
   11710:	beq	117b8 <strspn@plt+0x7d4>
   11714:	ldr	r1, [sl]
   11718:	ldr	r0, [fp]
   1171c:	bl	10d50 <fputs_unlocked@plt>
   11720:	cmn	r0, #1
   11724:	beq	11dd8 <strspn@plt+0xdf4>
   11728:	vadd.f64	d9, d9, d14
   1172c:	vmov	r6, r7, d8
   11730:	mov	r2, r6
   11734:	mov	r3, r7
   11738:	mov	r1, r4
   1173c:	mov	r0, #1
   11740:	bl	10f48 <__printf_chk@plt>
   11744:	cmp	r0, #0
   11748:	blt	11dd8 <strspn@plt+0xdf4>
   1174c:	cmp	r9, #0
   11750:	bne	117b8 <strspn@plt+0x7d4>
   11754:	vmov.f64	d8, d12
   11758:	vcmpe.f64	d10, d13
   1175c:	vmla.f64	d8, d10, d9
   11760:	vmrs	APSR_nzcv, fpscr
   11764:	vcmpe.f64	d8, d11
   11768:	bpl	11638 <strspn@plt+0x654>
   1176c:	vmrs	APSR_nzcv, fpscr
   11770:	movmi	r9, #1
   11774:	movpl	r9, #0
   11778:	b	11644 <strspn@plt+0x660>
   1177c:	ldr	r1, [pc, #612]	; 119e8 <strspn@plt+0xa04>
   11780:	mov	r0, #1
   11784:	bl	10f84 <setlocale@plt>
   11788:	vstr	d8, [sp]
   1178c:	mov	r2, r4
   11790:	mov	r1, #1
   11794:	add	r0, sp, #32
   11798:	bl	10e94 <__asprintf_chk@plt>
   1179c:	ldr	r1, [pc, #524]	; 119b0 <strspn@plt+0x9cc>
   117a0:	mov	r8, r0
   117a4:	mov	r0, #1
   117a8:	bl	10f84 <setlocale@plt>
   117ac:	b	11670 <strspn@plt+0x68c>
   117b0:	ldr	r0, [sp, #32]
   117b4:	bl	12828 <strspn@plt+0x1844>
   117b8:	ldr	r3, [pc, #528]	; 119d0 <strspn@plt+0x9ec>
   117bc:	ldr	r0, [pc, #552]	; 119ec <strspn@plt+0xa08>
   117c0:	ldr	r1, [r3]
   117c4:	bl	10d50 <fputs_unlocked@plt>
   117c8:	cmn	r0, #1
   117cc:	beq	11dd8 <strspn@plt+0xdf4>
   117d0:	mov	r0, #0
   117d4:	bl	10ef4 <exit@plt>
   117d8:	ldr	r1, [pc, #528]	; 119f0 <strspn@plt+0xa0c>
   117dc:	bl	10fe4 <strspn@plt>
   117e0:	ldr	r1, [pc, #548]	; 11a0c <strspn@plt+0xa28>
   117e4:	add	r8, r8, r0
   117e8:	add	r0, r4, r8
   117ec:	bl	10fe4 <strspn@plt>
   117f0:	add	r3, r8, r0
   117f4:	str	r3, [sp, #12]
   117f8:	ldrb	r3, [r4, r3]
   117fc:	cmp	r3, #46	; 0x2e
   11800:	beq	11af8 <strspn@plt+0xb14>
   11804:	ldr	r3, [sp, #12]
   11808:	mov	r9, r3
   1180c:	ldrb	r0, [r4, r3]
   11810:	cmp	r0, #76	; 0x4c
   11814:	addeq	r9, r9, #1
   11818:	add	r3, r4, r9
   1181c:	ldrb	r8, [r4, r9]
   11820:	str	r3, [sp, #16]
   11824:	cmp	r8, #0
   11828:	moveq	r2, #5
   1182c:	ldreq	r1, [pc, #448]	; 119f4 <strspn@plt+0xa10>
   11830:	beq	11d80 <strspn@plt+0xd9c>
   11834:	mov	r1, r8
   11838:	ldr	r0, [pc, #440]	; 119f8 <strspn@plt+0xa14>
   1183c:	bl	10f0c <strchr@plt>
   11840:	subs	r8, r0, #0
   11844:	movne	r3, #1
   11848:	addne	r0, r9, r3
   1184c:	movne	r1, r3
   11850:	movne	ip, #2
   11854:	bne	11870 <strspn@plt+0x88c>
   11858:	b	11ddc <strspn@plt+0xdf8>
   1185c:	cmp	r9, #0
   11860:	beq	11898 <strspn@plt+0x8b4>
   11864:	mov	r2, r1
   11868:	add	r0, r0, r2
   1186c:	add	r3, r3, #1
   11870:	ldrb	r9, [r4, r0]
   11874:	sub	r2, r3, #1
   11878:	cmp	r9, #37	; 0x25
   1187c:	bne	1185c <strspn@plt+0x878>
   11880:	add	r2, r4, r0
   11884:	ldrb	r2, [r2, #1]
   11888:	cmp	r2, #37	; 0x25
   1188c:	bne	11e14 <strspn@plt+0xe30>
   11890:	mov	r2, ip
   11894:	b	11868 <strspn@plt+0x884>
   11898:	add	r0, r0, #2
   1189c:	str	r2, [sp, #20]
   118a0:	bl	17308 <strspn@plt+0x6324>
   118a4:	mov	r1, r4
   118a8:	ldr	r2, [sp, #12]
   118ac:	mov	r8, r0
   118b0:	bl	10dc8 <memcpy@plt>
   118b4:	ldr	r2, [sp, #12]
   118b8:	mov	r3, #76	; 0x4c
   118bc:	add	r0, r2, #1
   118c0:	strb	r3, [r8, r2]
   118c4:	ldr	r1, [sp, #16]
   118c8:	add	r0, r8, r0
   118cc:	bl	10e64 <strcpy@plt>
   118d0:	ldrb	r3, [fp, #33]	; 0x21
   118d4:	cmp	r3, #0
   118d8:	moveq	r4, r8
   118dc:	beq	11550 <strspn@plt+0x56c>
   118e0:	mov	r2, #5
   118e4:	ldr	r1, [pc, #272]	; 119fc <strspn@plt+0xa18>
   118e8:	mov	r0, r9
   118ec:	bl	10e10 <dcgettext@plt>
   118f0:	mov	r1, r9
   118f4:	mov	r2, r0
   118f8:	mov	r0, r9
   118fc:	bl	10e88 <error@plt>
   11900:	mov	r0, #1
   11904:	bl	12048 <strspn@plt+0x1064>
   11908:	ldr	r4, [sp, #8]
   1190c:	mov	r2, #5
   11910:	ldr	r1, [pc, #232]	; 11a00 <strspn@plt+0xa1c>
   11914:	mov	r0, r4
   11918:	bl	10e10 <dcgettext@plt>
   1191c:	mov	r1, r4
   11920:	mov	r2, r0
   11924:	mov	r0, r4
   11928:	bl	10e88 <error@plt>
   1192c:	b	114bc <strspn@plt+0x4d8>
   11930:	add	r2, r3, #1
   11934:	ldr	r1, [r6, r3, lsl #2]
   11938:	add	r0, sp, #64	; 0x40
   1193c:	str	r2, [sl]
   11940:	bl	12388 <strspn@plt+0x13a4>
   11944:	ldr	r2, [sl]
   11948:	vldr	d11, [sp, #64]	; 0x40
   1194c:	cmp	r7, r2
   11950:	ldr	r3, [sp, #76]	; 0x4c
   11954:	ldr	r7, [sp, #72]	; 0x48
   11958:	ble	11b48 <strspn@plt+0xb64>
   1195c:	vcmp.f64	d11, #0.0
   11960:	vstr	d11, [sp, #48]	; 0x30
   11964:	str	r7, [sp, #56]	; 0x38
   11968:	str	r3, [sp, #60]	; 0x3c
   1196c:	vmrs	APSR_nzcv, fpscr
   11970:	bne	11b28 <strspn@plt+0xb44>
   11974:	mov	r2, #5
   11978:	ldr	r1, [pc, #132]	; 11a04 <strspn@plt+0xa20>
   1197c:	mov	r0, #0
   11980:	bl	10e10 <dcgettext@plt>
   11984:	ldr	r3, [sl]
   11988:	sub	r3, r3, #-1073741823	; 0xc0000001
   1198c:	mov	r4, r0
   11990:	b	114a0 <strspn@plt+0x4bc>
   11994:	nop			; (mov r0, r0)
   11998:	andeq	r0, r0, r0
   1199c:	svccc	0x00f00000	; IMB
	...
   119a8:	andeq	r8, r1, r0, lsr #10
   119ac:	andeq	sl, r2, r8, ror #2
   119b0:	andeq	r8, r1, r8, lsl #20
   119b4:	andeq	r8, r1, r4, lsr #24
   119b8:	andeq	sl, r2, r0, asr r1
   119bc:	andeq	r8, r1, ip, lsr ip
   119c0:	andeq	r8, r1, r0, lsr #22
   119c4:	andeq	r2, r1, r4, asr #14
   119c8:	andeq	r8, r1, ip, ror r6
   119cc:	andeq	sl, r2, r0, ror #2
   119d0:	andeq	sl, r2, ip, asr r1
   119d4:	strdeq	sl, [r2], -ip
   119d8:	andeq	r8, r1, r4, asr #24
   119dc:			; <UNDEFINED> instruction: 0x000185b0
   119e0:	andeq	r8, r1, ip, lsl fp
   119e4:	andeq	r8, r1, r4, ror #24
   119e8:	muleq	r1, ip, sp
   119ec:	muleq	r1, r0, r5
   119f0:	muleq	r1, r8, ip
   119f4:	andeq	r8, r1, r0, lsr #25
   119f8:			; <UNDEFINED> instruction: 0x00018cb8
   119fc:	andeq	r8, r1, r4, lsl sp
   11a00:	andeq	r8, r1, r4, asr ip
   11a04:	andeq	r8, r1, ip, asr sp
   11a08:	andeq	r8, r1, ip, lsl ip
   11a0c:	muleq	r1, r4, r5
   11a10:	andeq	r2, r1, r8, lsr #13
   11a14:	ldr	r3, [sl]
   11a18:	add	r3, r3, #1
   11a1c:	ldr	r8, [r6, r3, lsl #2]
   11a20:	mov	r0, r8
   11a24:	bl	11fc0 <strspn@plt+0xfdc>
   11a28:	cmp	r0, #0
   11a2c:	bne	11b58 <strspn@plt+0xb74>
   11a30:	mov	r3, #0
   11a34:	str	r3, [sp, #12]
   11a38:	ldr	r9, [sl]
   11a3c:	ldr	r8, [r6, r9, lsl #2]
   11a40:	mov	r0, r8
   11a44:	bl	11fc0 <strspn@plt+0xfdc>
   11a48:	cmp	r0, #0
   11a4c:	beq	11594 <strspn@plt+0x5b0>
   11a50:	add	r3, r9, #1
   11a54:	ldr	r0, [r6, r3, lsl #2]
   11a58:	lsl	r3, r3, #2
   11a5c:	str	r3, [sp, #16]
   11a60:	bl	11fc0 <strspn@plt+0xfdc>
   11a64:	cmp	r0, #0
   11a68:	beq	11594 <strspn@plt+0x5b0>
   11a6c:	ldr	r3, [sp, #12]
   11a70:	cmp	r3, #0
   11a74:	beq	11594 <strspn@plt+0x5b0>
   11a78:	ldr	r3, [sp, #16]
   11a7c:	add	r3, r6, r3
   11a80:	ldr	r0, [r3, #4]
   11a84:	bl	11fc0 <strspn@plt+0xfdc>
   11a88:	cmp	r0, #0
   11a8c:	beq	11594 <strspn@plt+0x5b0>
   11a90:	ldrb	r3, [fp, #33]	; 0x21
   11a94:	eor	r3, r3, #1
   11a98:	cmp	r4, #0
   11a9c:	movne	r3, #0
   11aa0:	andeq	r3, r3, #1
   11aa4:	cmp	r3, #0
   11aa8:	beq	11594 <strspn@plt+0x5b0>
   11aac:	ldr	r0, [fp]
   11ab0:	bl	10f00 <strlen@plt>
   11ab4:	cmp	r0, #1
   11ab8:	bne	11594 <strspn@plt+0x5b0>
   11abc:	ldr	r2, [sp, #8]
   11ac0:	ldr	r3, [pc, #-192]	; 11a08 <strspn@plt+0xa24>
   11ac4:	cmp	r2, #1
   11ac8:	ldrd	r0, [sp, #48]	; 0x30
   11acc:	moveq	r8, r3
   11ad0:	bl	18410 <strspn@plt+0x742c>
   11ad4:	ldr	r2, [sp, #8]
   11ad8:	add	ip, r2, r9
   11adc:	sub	ip, ip, #-1073741823	; 0xc0000001
   11ae0:	mov	r2, r0
   11ae4:	mov	r3, r1
   11ae8:	mov	r0, r8
   11aec:	ldr	r1, [r6, ip, lsl #2]
   11af0:	bl	10ff0 <strspn@plt+0xc>
   11af4:	b	11594 <strspn@plt+0x5b0>
   11af8:	ldr	r3, [sp, #12]
   11afc:	ldr	r1, [pc, #-248]	; 11a0c <strspn@plt+0xa28>
   11b00:	add	r8, r3, #1
   11b04:	add	r0, r4, r8
   11b08:	bl	10fe4 <strspn@plt>
   11b0c:	add	r3, r8, r0
   11b10:	str	r3, [sp, #12]
   11b14:	b	11804 <strspn@plt+0x820>
   11b18:	vmrs	APSR_nzcv, fpscr
   11b1c:	movmi	r9, #1
   11b20:	movpl	r9, #0
   11b24:	b	11610 <strspn@plt+0x62c>
   11b28:	ldr	r1, [r6, r2, lsl #2]
   11b2c:	add	r0, sp, #64	; 0x40
   11b30:	add	r2, r2, #1
   11b34:	str	r2, [sl]
   11b38:	bl	12388 <strspn@plt+0x13a4>
   11b3c:	vldr	d11, [sp, #64]	; 0x40
   11b40:	ldr	r7, [sp, #72]	; 0x48
   11b44:	ldr	r3, [sp, #76]	; 0x4c
   11b48:	cmp	r9, #0
   11b4c:	beq	11e20 <strspn@plt+0xe3c>
   11b50:	mov	r1, r9
   11b54:	b	115e8 <strspn@plt+0x604>
   11b58:	add	r2, sp, #48	; 0x30
   11b5c:	mov	r0, r8
   11b60:	ldr	r3, [pc, #-344]	; 11a10 <strspn@plt+0xa2c>
   11b64:	mov	r1, #0
   11b68:	bl	17990 <strspn@plt+0x69ac>
   11b6c:	cmp	r0, #0
   11b70:	beq	11a30 <strspn@plt+0xa4c>
   11b74:	vldr	d7, [sp, #48]	; 0x30
   11b78:	vcmpe.f64	d7, #0.0
   11b7c:	vmrs	APSR_nzcv, fpscr
   11b80:	ble	11a30 <strspn@plt+0xa4c>
   11b84:	vldr	d6, [pc, #716]	; 11e58 <strspn@plt+0xe74>
   11b88:	vcmpe.f64	d7, d6
   11b8c:	vmrs	APSR_nzcv, fpscr
   11b90:	movls	r3, #1
   11b94:	movhi	r3, #0
   11b98:	str	r3, [sp, #12]
   11b9c:	b	11a38 <strspn@plt+0xa54>
   11ba0:	mov	r1, r0
   11ba4:	vstr	d12, [sp]
   11ba8:	ldr	r2, [pc, #704]	; 11e70 <strspn@plt+0xe8c>
   11bac:	add	r0, sp, #24
   11bb0:	bl	10e94 <__asprintf_chk@plt>
   11bb4:	cmp	r0, #0
   11bb8:	blt	11dc4 <strspn@plt+0xde0>
   11bbc:	vmul.f64	d7, d11, d8
   11bc0:	vcmp.f64	d7, d8
   11bc4:	vmrs	APSR_nzcv, fpscr
   11bc8:	beq	11da8 <strspn@plt+0xdc4>
   11bcc:	ldr	r0, [pc, #672]	; 11e74 <strspn@plt+0xe90>
   11bd0:	bl	17918 <strspn@plt+0x6934>
   11bd4:	str	r0, [sp, #28]
   11bd8:	ldr	r4, [sp, #24]
   11bdc:	ldrb	r3, [r4]
   11be0:	cmp	r3, #45	; 0x2d
   11be4:	beq	11c14 <strspn@plt+0xc30>
   11be8:	ldr	r6, [sp, #28]
   11bec:	ldrb	r3, [r6]
   11bf0:	cmp	r3, #45	; 0x2d
   11bf4:	beq	11c14 <strspn@plt+0xc30>
   11bf8:	ldrd	r0, [sp, #48]	; 0x30
   11bfc:	bl	18410 <strspn@plt+0x742c>
   11c00:	mov	r2, r0
   11c04:	mov	r3, r1
   11c08:	mov	r0, r4
   11c0c:	mov	r1, r6
   11c10:	bl	10ff0 <strspn@plt+0xc>
   11c14:	ldr	r0, [sp, #24]
   11c18:	bl	12828 <strspn@plt+0x1844>
   11c1c:	ldr	r0, [sp, #28]
   11c20:	bl	12828 <strspn@plt+0x1844>
   11c24:	mov	r3, #0
   11c28:	mov	r1, r3
   11c2c:	ldr	r2, [sp, #60]	; 0x3c
   11c30:	cmp	r1, r2
   11c34:	movge	r2, r1
   11c38:	cmn	r3, #-2147483647	; 0x80000001
   11c3c:	cmnne	r2, #-2147483647	; 0x80000001
   11c40:	beq	11d70 <strspn@plt+0xd8c>
   11c44:	ldrb	r0, [fp, #33]	; 0x21
   11c48:	cmp	r0, #0
   11c4c:	beq	11d40 <strspn@plt+0xd5c>
   11c50:	sub	r0, r2, r3
   11c54:	cmp	r3, #0
   11c58:	sub	r3, r2, r1
   11c5c:	add	r7, r0, r7
   11c60:	add	r8, r3, r8
   11c64:	beq	11dc8 <strspn@plt+0xde4>
   11c68:	cmp	r2, #0
   11c6c:	subeq	r7, r7, #1
   11c70:	beq	11c8c <strspn@plt+0xca8>
   11c74:	cmp	r2, #0
   11c78:	clz	r1, r1
   11c7c:	lsr	r1, r1, #5
   11c80:	moveq	r1, #0
   11c84:	cmp	r1, #0
   11c88:	addne	r8, r8, #1
   11c8c:	cmp	r8, r7
   11c90:	movcc	r8, r7
   11c94:	cmp	r8, #0
   11c98:	blt	11d70 <strspn@plt+0xd8c>
   11c9c:	str	r2, [sp, #4]
   11ca0:	str	r8, [sp]
   11ca4:	ldr	r3, [pc, #460]	; 11e78 <strspn@plt+0xe94>
   11ca8:	mov	r2, #28
   11cac:	mov	r1, #1
   11cb0:	ldr	r0, [pc, #452]	; 11e7c <strspn@plt+0xe98>
   11cb4:	bl	10f24 <__sprintf_chk@plt>
   11cb8:	ldr	r4, [pc, #444]	; 11e7c <strspn@plt+0xe98>
   11cbc:	vldr	d10, [sp, #48]	; 0x30
   11cc0:	b	115f4 <strspn@plt+0x610>
   11cc4:	vmov.f64	d11, d12
   11cc8:	vldr	d12, [pc, #400]	; 11e60 <strspn@plt+0xe7c>
   11ccc:	mov	r7, r8
   11cd0:	mov	r8, #1
   11cd4:	vldr	d8, [pc, #396]	; 11e68 <strspn@plt+0xe84>
   11cd8:	vcmpe.f64	d11, d8
   11cdc:	vmrs	APSR_nzcv, fpscr
   11ce0:	blt	11d64 <strspn@plt+0xd80>
   11ce4:	vldr	d10, [sp, #48]	; 0x30
   11ce8:	vcmpe.f64	d10, d8
   11cec:	vmrs	APSR_nzcv, fpscr
   11cf0:	ble	11d64 <strspn@plt+0xd80>
   11cf4:	vldr	d7, [pc, #348]	; 11e58 <strspn@plt+0xe74>
   11cf8:	vcmpe.f64	d10, d7
   11cfc:	vmrs	APSR_nzcv, fpscr
   11d00:	bhi	11d64 <strspn@plt+0xd80>
   11d04:	ldrb	r3, [fp, #33]	; 0x21
   11d08:	cmp	r3, #0
   11d0c:	bne	11d64 <strspn@plt+0xd80>
   11d10:	cmp	r4, #0
   11d14:	bne	115f4 <strspn@plt+0x610>
   11d18:	ldr	r0, [fp]
   11d1c:	bl	10f00 <strlen@plt>
   11d20:	cmp	r0, #1
   11d24:	mov	r4, r0
   11d28:	beq	11ba0 <strspn@plt+0xbbc>
   11d2c:	ldr	r2, [sp, #60]	; 0x3c
   11d30:	bic	r2, r2, r2, asr #31
   11d34:	cmn	r2, #-2147483647	; 0x80000001
   11d38:	ldreq	r4, [pc, #320]	; 11e80 <strspn@plt+0xe9c>
   11d3c:	beq	115f4 <strspn@plt+0x610>
   11d40:	str	r2, [sp]
   11d44:	ldr	r3, [pc, #312]	; 11e84 <strspn@plt+0xea0>
   11d48:	mov	r2, #28
   11d4c:	mov	r1, #1
   11d50:	ldr	r0, [pc, #292]	; 11e7c <strspn@plt+0xe98>
   11d54:	bl	10f24 <__sprintf_chk@plt>
   11d58:	ldr	r4, [pc, #284]	; 11e7c <strspn@plt+0xe98>
   11d5c:	vldr	d10, [sp, #48]	; 0x30
   11d60:	b	115f4 <strspn@plt+0x610>
   11d64:	mov	r3, #0
   11d68:	mov	r1, r3
   11d6c:	b	115e8 <strspn@plt+0x604>
   11d70:	ldr	r4, [pc, #264]	; 11e80 <strspn@plt+0xe9c>
   11d74:	b	115f0 <strspn@plt+0x60c>
   11d78:	ldr	r1, [pc, #264]	; 11e88 <strspn@plt+0xea4>
   11d7c:	mov	r2, #5
   11d80:	mov	r0, #0
   11d84:	bl	10e10 <dcgettext@plt>
   11d88:	mov	r5, r0
   11d8c:	mov	r0, r4
   11d90:	bl	1674c <strspn@plt+0x5768>
   11d94:	mov	r2, r5
   11d98:	mov	r1, #0
   11d9c:	mov	r3, r0
   11da0:	mov	r0, #1
   11da4:	bl	10e88 <error@plt>
   11da8:	vstr	d11, [sp]
   11dac:	mov	r1, r4
   11db0:	ldr	r2, [pc, #184]	; 11e70 <strspn@plt+0xe8c>
   11db4:	add	r0, sp, #28
   11db8:	bl	10e94 <__asprintf_chk@plt>
   11dbc:	cmp	r0, #0
   11dc0:	bge	11bd8 <strspn@plt+0xbf4>
   11dc4:	bl	17950 <strspn@plt+0x696c>
   11dc8:	cmp	r2, #0
   11dcc:	beq	11c8c <strspn@plt+0xca8>
   11dd0:	add	r7, r7, #1
   11dd4:	b	11c74 <strspn@plt+0xc90>
   11dd8:	bl	12008 <strspn@plt+0x1024>
   11ddc:	mov	r2, #5
   11de0:	ldr	r1, [pc, #164]	; 11e8c <strspn@plt+0xea8>
   11de4:	bl	10e10 <dcgettext@plt>
   11de8:	mov	r5, r0
   11dec:	mov	r0, r4
   11df0:	bl	1674c <strspn@plt+0x5768>
   11df4:	ldr	r3, [sp, #16]
   11df8:	mov	r2, r5
   11dfc:	mov	r1, r8
   11e00:	ldrb	r3, [r3]
   11e04:	str	r3, [sp]
   11e08:	mov	r3, r0
   11e0c:	mov	r0, #1
   11e10:	bl	10e88 <error@plt>
   11e14:	mov	r2, #5
   11e18:	ldr	r1, [pc, #112]	; 11e90 <strspn@plt+0xeac>
   11e1c:	b	11d80 <strspn@plt+0xd9c>
   11e20:	ldr	r1, [sp, #60]	; 0x3c
   11e24:	orrs	r1, r3, r1
   11e28:	bne	11b50 <strspn@plt+0xb6c>
   11e2c:	vldr	d7, [pc, #52]	; 11e68 <strspn@plt+0xe84>
   11e30:	vmul.f64	d6, d12, d7
   11e34:	vcmp.f64	d6, d7
   11e38:	vmrs	APSR_nzcv, fpscr
   11e3c:	beq	11e48 <strspn@plt+0xe64>
   11e40:	mov	r3, r9
   11e44:	b	115e8 <strspn@plt+0x604>
   11e48:	vcmpe.f64	d12, d7
   11e4c:	vmrs	APSR_nzcv, fpscr
   11e50:	blt	11e40 <strspn@plt+0xe5c>
   11e54:	b	11cd4 <strspn@plt+0xcf0>
   11e58:	andeq	r0, r0, r0
   11e5c:	rsbmi	r0, r9, r0
   11e60:	andeq	r0, r0, r0
   11e64:	svccc	0x00f00000	; IMB
	...
   11e70:	andeq	r8, r1, r0, lsl #27
   11e74:	andeq	r8, r1, ip, lsr #11
   11e78:	andeq	r8, r1, r8, lsl #27
   11e7c:	andeq	sl, r2, ip, ror #2
   11e80:	andeq	r8, r1, r0, lsr #24
   11e84:	muleq	r1, r4, sp
   11e88:	andeq	r8, r1, r8, ror ip
   11e8c:	andeq	r8, r1, r4, asr #25
   11e90:	andeq	r8, r1, ip, ror #25
   11e94:	mov	fp, #0
   11e98:	mov	lr, #0
   11e9c:	pop	{r1}		; (ldr r1, [sp], #4)
   11ea0:	mov	r2, sp
   11ea4:	push	{r2}		; (str r2, [sp, #-4]!)
   11ea8:	push	{r0}		; (str r0, [sp, #-4]!)
   11eac:	ldr	ip, [pc, #16]	; 11ec4 <strspn@plt+0xee0>
   11eb0:	push	{ip}		; (str ip, [sp, #-4]!)
   11eb4:	ldr	r0, [pc, #12]	; 11ec8 <strspn@plt+0xee4>
   11eb8:	ldr	r3, [pc, #12]	; 11ecc <strspn@plt+0xee8>
   11ebc:	bl	10eac <__libc_start_main@plt>
   11ec0:	bl	10fd8 <abort@plt>
   11ec4:			; <UNDEFINED> instruction: 0x000184b8
   11ec8:	andeq	r1, r1, r8, lsr #6
   11ecc:	andeq	r8, r1, r8, asr r4
   11ed0:	ldr	r3, [pc, #20]	; 11eec <strspn@plt+0xf08>
   11ed4:	ldr	r2, [pc, #20]	; 11ef0 <strspn@plt+0xf0c>
   11ed8:	add	r3, pc, r3
   11edc:	ldr	r2, [r3, r2]
   11ee0:	cmp	r2, #0
   11ee4:	bxeq	lr
   11ee8:	b	10ec4 <__gmon_start__@plt>
   11eec:	andeq	r8, r1, r0, lsr #2
   11ef0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11ef4:	ldr	r3, [pc, #28]	; 11f18 <strspn@plt+0xf34>
   11ef8:	ldr	r0, [pc, #28]	; 11f1c <strspn@plt+0xf38>
   11efc:	sub	r3, r3, r0
   11f00:	cmp	r3, #6
   11f04:	bxls	lr
   11f08:	ldr	r3, [pc, #16]	; 11f20 <strspn@plt+0xf3c>
   11f0c:	cmp	r3, #0
   11f10:	bxeq	lr
   11f14:	bx	r3
   11f18:	andeq	sl, r2, r7, asr #2
   11f1c:	andeq	sl, r2, r4, asr #2
   11f20:	andeq	r0, r0, r0
   11f24:	ldr	r1, [pc, #36]	; 11f50 <strspn@plt+0xf6c>
   11f28:	ldr	r0, [pc, #36]	; 11f54 <strspn@plt+0xf70>
   11f2c:	sub	r1, r1, r0
   11f30:	asr	r1, r1, #2
   11f34:	add	r1, r1, r1, lsr #31
   11f38:	asrs	r1, r1, #1
   11f3c:	bxeq	lr
   11f40:	ldr	r3, [pc, #16]	; 11f58 <strspn@plt+0xf74>
   11f44:	cmp	r3, #0
   11f48:	bxeq	lr
   11f4c:	bx	r3
   11f50:	andeq	sl, r2, r4, asr #2
   11f54:	andeq	sl, r2, r4, asr #2
   11f58:	andeq	r0, r0, r0
   11f5c:	push	{r4, lr}
   11f60:	ldr	r4, [pc, #24]	; 11f80 <strspn@plt+0xf9c>
   11f64:	ldrb	r3, [r4]
   11f68:	cmp	r3, #0
   11f6c:	popne	{r4, pc}
   11f70:	bl	11ef4 <strspn@plt+0xf10>
   11f74:	mov	r3, #1
   11f78:	strb	r3, [r4]
   11f7c:	pop	{r4, pc}
   11f80:	andeq	sl, r2, r4, ror #2
   11f84:	ldr	r0, [pc, #40]	; 11fb4 <strspn@plt+0xfd0>
   11f88:	ldr	r3, [r0]
   11f8c:	cmp	r3, #0
   11f90:	bne	11f98 <strspn@plt+0xfb4>
   11f94:	b	11f24 <strspn@plt+0xf40>
   11f98:	ldr	r3, [pc, #24]	; 11fb8 <strspn@plt+0xfd4>
   11f9c:	cmp	r3, #0
   11fa0:	beq	11f94 <strspn@plt+0xfb0>
   11fa4:	push	{r4, lr}
   11fa8:	blx	r3
   11fac:	pop	{r4, lr}
   11fb0:	b	11f24 <strspn@plt+0xf40>
   11fb4:	andeq	r9, r2, r4, lsl pc
	...
   11fc0:	push	{r4, r5, r6, lr}
   11fc4:	mov	r5, r0
   11fc8:	bl	10f00 <strlen@plt>
   11fcc:	ldrb	r3, [r5]
   11fd0:	sub	r3, r3, #48	; 0x30
   11fd4:	cmp	r3, #9
   11fd8:	bhi	11ffc <strspn@plt+0x1018>
   11fdc:	mov	r4, r0
   11fe0:	ldr	r1, [pc, #28]	; 12004 <strspn@plt+0x1020>
   11fe4:	mov	r0, r5
   11fe8:	bl	10fe4 <strspn@plt>
   11fec:	sub	r0, r4, r0
   11ff0:	clz	r0, r0
   11ff4:	lsr	r0, r0, #5
   11ff8:	pop	{r4, r5, r6, pc}
   11ffc:	mov	r0, #0
   12000:	pop	{r4, r5, r6, pc}
   12004:	muleq	r1, r4, r5
   12008:	ldr	r3, [pc, #48]	; 12040 <strspn@plt+0x105c>
   1200c:	push	{r4, lr}
   12010:	ldr	r0, [r3]
   12014:	bl	10fb4 <clearerr_unlocked@plt>
   12018:	bl	10f18 <__errno_location@plt>
   1201c:	mov	r2, #5
   12020:	ldr	r1, [pc, #28]	; 12044 <strspn@plt+0x1060>
   12024:	ldr	r4, [r0]
   12028:	mov	r0, #0
   1202c:	bl	10e10 <dcgettext@plt>
   12030:	mov	r1, r4
   12034:	mov	r2, r0
   12038:	mov	r0, #1
   1203c:	bl	10e88 <error@plt>
   12040:	andeq	sl, r2, ip, asr r1
   12044:	andeq	r8, r1, r0, lsr #11
   12048:	subs	r6, r0, #0
   1204c:	push	{r7, lr}
   12050:	sub	sp, sp, #64	; 0x40
   12054:	beq	12090 <strspn@plt+0x10ac>
   12058:	ldr	r3, [pc, #716]	; 1232c <strspn@plt+0x1348>
   1205c:	mov	r2, #5
   12060:	ldr	r1, [pc, #712]	; 12330 <strspn@plt+0x134c>
   12064:	mov	r0, #0
   12068:	ldr	r4, [r3]
   1206c:	bl	10e10 <dcgettext@plt>
   12070:	ldr	r3, [pc, #700]	; 12334 <strspn@plt+0x1350>
   12074:	mov	r1, #1
   12078:	ldr	r3, [r3]
   1207c:	mov	r2, r0
   12080:	mov	r0, r4
   12084:	bl	10f60 <__fprintf_chk@plt>
   12088:	mov	r0, r6
   1208c:	bl	10ef4 <exit@plt>
   12090:	mov	r2, #5
   12094:	ldr	r1, [pc, #668]	; 12338 <strspn@plt+0x1354>
   12098:	bl	10e10 <dcgettext@plt>
   1209c:	ldr	r3, [pc, #656]	; 12334 <strspn@plt+0x1350>
   120a0:	ldr	r7, [pc, #660]	; 1233c <strspn@plt+0x1358>
   120a4:	ldr	r4, [pc, #660]	; 12340 <strspn@plt+0x135c>
   120a8:	ldr	r3, [r3]
   120ac:	mov	r2, r3
   120b0:	str	r3, [sp]
   120b4:	mov	r1, r0
   120b8:	mov	r0, #1
   120bc:	bl	10f48 <__printf_chk@plt>
   120c0:	mov	r2, #5
   120c4:	ldr	r1, [pc, #632]	; 12344 <strspn@plt+0x1360>
   120c8:	mov	r0, r6
   120cc:	bl	10e10 <dcgettext@plt>
   120d0:	ldr	r1, [r7]
   120d4:	bl	10d50 <fputs_unlocked@plt>
   120d8:	mov	r2, #5
   120dc:	ldr	r1, [pc, #612]	; 12348 <strspn@plt+0x1364>
   120e0:	mov	r0, r6
   120e4:	bl	10e10 <dcgettext@plt>
   120e8:	ldr	r1, [r7]
   120ec:	bl	10d50 <fputs_unlocked@plt>
   120f0:	mov	r2, #5
   120f4:	ldr	r1, [pc, #592]	; 1234c <strspn@plt+0x1368>
   120f8:	mov	r0, r6
   120fc:	bl	10e10 <dcgettext@plt>
   12100:	ldr	r1, [r7]
   12104:	bl	10d50 <fputs_unlocked@plt>
   12108:	mov	r2, #5
   1210c:	ldr	r1, [pc, #572]	; 12350 <strspn@plt+0x136c>
   12110:	mov	r0, r6
   12114:	bl	10e10 <dcgettext@plt>
   12118:	ldr	r1, [r7]
   1211c:	bl	10d50 <fputs_unlocked@plt>
   12120:	mov	r2, #5
   12124:	ldr	r1, [pc, #552]	; 12354 <strspn@plt+0x1370>
   12128:	mov	r0, r6
   1212c:	bl	10e10 <dcgettext@plt>
   12130:	ldr	r1, [r7]
   12134:	bl	10d50 <fputs_unlocked@plt>
   12138:	mov	r2, #5
   1213c:	ldr	r1, [pc, #532]	; 12358 <strspn@plt+0x1374>
   12140:	mov	r0, r6
   12144:	bl	10e10 <dcgettext@plt>
   12148:	ldr	r1, [r7]
   1214c:	bl	10d50 <fputs_unlocked@plt>
   12150:	mov	r2, #5
   12154:	ldr	r1, [pc, #512]	; 1235c <strspn@plt+0x1378>
   12158:	mov	r0, r6
   1215c:	bl	10e10 <dcgettext@plt>
   12160:	ldr	r1, [r7]
   12164:	bl	10d50 <fputs_unlocked@plt>
   12168:	ldm	r4!, {r0, r1, r2, r3}
   1216c:	add	lr, sp, #8
   12170:	stmia	lr!, {r0, r1, r2, r3}
   12174:	ldm	r4!, {r0, r1, r2, r3}
   12178:	ldr	ip, [sp, #8]
   1217c:	stmia	lr!, {r0, r1, r2, r3}
   12180:	cmp	ip, #0
   12184:	ldm	r4!, {r0, r1, r2, r3}
   12188:	stmia	lr!, {r0, r1, r2, r3}
   1218c:	ldm	r4, {r0, r1}
   12190:	addeq	r4, sp, #8
   12194:	stm	lr, {r0, r1}
   12198:	beq	121c8 <strspn@plt+0x11e4>
   1219c:	ldr	r5, [pc, #444]	; 12360 <strspn@plt+0x137c>
   121a0:	add	r4, sp, #8
   121a4:	b	121b4 <strspn@plt+0x11d0>
   121a8:	ldr	ip, [r4, #8]!
   121ac:	cmp	ip, #0
   121b0:	beq	121c8 <strspn@plt+0x11e4>
   121b4:	mov	r1, ip
   121b8:	mov	r0, r5
   121bc:	bl	10d74 <strcmp@plt>
   121c0:	cmp	r0, #0
   121c4:	bne	121a8 <strspn@plt+0x11c4>
   121c8:	ldr	r4, [r4, #4]
   121cc:	mov	r2, #5
   121d0:	cmp	r4, #0
   121d4:	ldr	r1, [pc, #392]	; 12364 <strspn@plt+0x1380>
   121d8:	beq	12280 <strspn@plt+0x129c>
   121dc:	mov	r0, #0
   121e0:	bl	10e10 <dcgettext@plt>
   121e4:	ldr	r3, [pc, #380]	; 12368 <strspn@plt+0x1384>
   121e8:	ldr	r2, [pc, #380]	; 1236c <strspn@plt+0x1388>
   121ec:	mov	r1, r0
   121f0:	mov	r0, #1
   121f4:	bl	10f48 <__printf_chk@plt>
   121f8:	mov	r1, #0
   121fc:	mov	r0, #5
   12200:	bl	10f84 <setlocale@plt>
   12204:	cmp	r0, #0
   12208:	ldreq	r5, [pc, #336]	; 12360 <strspn@plt+0x137c>
   1220c:	beq	12228 <strspn@plt+0x1244>
   12210:	mov	r2, #3
   12214:	ldr	r1, [pc, #340]	; 12370 <strspn@plt+0x138c>
   12218:	bl	10fcc <strncmp@plt>
   1221c:	ldr	r5, [pc, #316]	; 12360 <strspn@plt+0x137c>
   12220:	cmp	r0, #0
   12224:	bne	12310 <strspn@plt+0x132c>
   12228:	mov	r2, #5
   1222c:	ldr	r1, [pc, #320]	; 12374 <strspn@plt+0x1390>
   12230:	mov	r0, #0
   12234:	bl	10e10 <dcgettext@plt>
   12238:	ldr	r3, [pc, #288]	; 12360 <strspn@plt+0x137c>
   1223c:	ldr	r2, [pc, #292]	; 12368 <strspn@plt+0x1384>
   12240:	mov	r1, r0
   12244:	mov	r0, #1
   12248:	bl	10f48 <__printf_chk@plt>
   1224c:	mov	r2, #5
   12250:	ldr	r1, [pc, #288]	; 12378 <strspn@plt+0x1394>
   12254:	mov	r0, #0
   12258:	bl	10e10 <dcgettext@plt>
   1225c:	ldr	r2, [pc, #280]	; 1237c <strspn@plt+0x1398>
   12260:	cmp	r4, r5
   12264:	ldr	r3, [pc, #276]	; 12380 <strspn@plt+0x139c>
   12268:	movne	r3, r2
   1226c:	mov	r1, r0
   12270:	mov	r2, r4
   12274:	mov	r0, #1
   12278:	bl	10f48 <__printf_chk@plt>
   1227c:	b	12088 <strspn@plt+0x10a4>
   12280:	mov	r0, r4
   12284:	bl	10e10 <dcgettext@plt>
   12288:	ldr	r3, [pc, #216]	; 12368 <strspn@plt+0x1384>
   1228c:	ldr	r2, [pc, #216]	; 1236c <strspn@plt+0x1388>
   12290:	mov	r1, r0
   12294:	mov	r0, #1
   12298:	bl	10f48 <__printf_chk@plt>
   1229c:	mov	r1, r4
   122a0:	mov	r0, #5
   122a4:	bl	10f84 <setlocale@plt>
   122a8:	cmp	r0, #0
   122ac:	beq	122c4 <strspn@plt+0x12e0>
   122b0:	mov	r2, #3
   122b4:	ldr	r1, [pc, #180]	; 12370 <strspn@plt+0x138c>
   122b8:	bl	10fcc <strncmp@plt>
   122bc:	cmp	r0, #0
   122c0:	bne	12308 <strspn@plt+0x1324>
   122c4:	mov	r2, #5
   122c8:	ldr	r1, [pc, #164]	; 12374 <strspn@plt+0x1390>
   122cc:	mov	r0, #0
   122d0:	bl	10e10 <dcgettext@plt>
   122d4:	ldr	r3, [pc, #132]	; 12360 <strspn@plt+0x137c>
   122d8:	ldr	r2, [pc, #136]	; 12368 <strspn@plt+0x1384>
   122dc:	mov	r4, r3
   122e0:	mov	r1, r0
   122e4:	mov	r0, #1
   122e8:	bl	10f48 <__printf_chk@plt>
   122ec:	ldr	r1, [pc, #132]	; 12378 <strspn@plt+0x1394>
   122f0:	mov	r2, #5
   122f4:	mov	r0, #0
   122f8:	bl	10e10 <dcgettext@plt>
   122fc:	ldr	r3, [pc, #124]	; 12380 <strspn@plt+0x139c>
   12300:	mov	r1, r0
   12304:	b	12270 <strspn@plt+0x128c>
   12308:	ldr	r5, [pc, #80]	; 12360 <strspn@plt+0x137c>
   1230c:	mov	r4, r5
   12310:	mov	r2, #5
   12314:	ldr	r1, [pc, #104]	; 12384 <strspn@plt+0x13a0>
   12318:	mov	r0, #0
   1231c:	bl	10e10 <dcgettext@plt>
   12320:	ldr	r1, [r7]
   12324:	bl	10d50 <fputs_unlocked@plt>
   12328:	b	12228 <strspn@plt+0x1244>
   1232c:	andeq	sl, r2, r8, asr r1
   12330:			; <UNDEFINED> instruction: 0x000185b4
   12334:	muleq	r2, r4, r1
   12338:	ldrdeq	r8, [r1], -ip
   1233c:	andeq	sl, r2, ip, asr r1
   12340:	andeq	r8, r1, r8, ror #9
   12344:	andeq	r8, r1, r4, asr #12
   12348:	andeq	r8, r1, r0, lsl #13
   1234c:	andeq	r8, r1, ip, asr #13
   12350:	andeq	r8, r1, r0, lsr #15
   12354:	ldrdeq	r8, [r1], -r0
   12358:	andeq	r8, r1, r8, lsl #16
   1235c:	andeq	r8, r1, ip, lsl #20
   12360:			; <UNDEFINED> instruction: 0x000185b0
   12364:	ldrdeq	r8, [r1], -ip
   12368:	strdeq	r8, [r1], -r4
   1236c:	andeq	r8, r1, ip, lsl fp
   12370:	andeq	r8, r1, ip, lsr #22
   12374:	andeq	r8, r1, r8, ror fp
   12378:	muleq	r1, r4, fp
   1237c:	andeq	r8, r1, r8, lsl #20
   12380:	andeq	r8, r1, r8, lsr #27
   12384:	andeq	r8, r1, r0, lsr fp
   12388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1238c:	vpush	{d8}
   12390:	mov	r7, r1
   12394:	mov	r4, r0
   12398:	ldr	r3, [pc, #752]	; 12690 <strspn@plt+0x16ac>
   1239c:	sub	sp, sp, #28
   123a0:	add	r5, sp, #8
   123a4:	mov	r0, r1
   123a8:	mov	r2, r5
   123ac:	mov	r1, #0
   123b0:	bl	17990 <strspn@plt+0x69ac>
   123b4:	subs	r6, r0, #0
   123b8:	beq	12650 <strspn@plt+0x166c>
   123bc:	vldr	d8, [sp, #8]
   123c0:	vcmp.f64	d8, d8
   123c4:	vmrs	APSR_nzcv, fpscr
   123c8:	bne	12600 <strspn@plt+0x161c>
   123cc:	bl	10ee8 <__ctype_b_loc@plt>
   123d0:	ldr	r0, [r0]
   123d4:	b	123dc <strspn@plt+0x13f8>
   123d8:	mov	r7, r2
   123dc:	mov	r2, r7
   123e0:	ldrb	r1, [r2], #1
   123e4:	lsl	r3, r1, #1
   123e8:	ldrh	r3, [r0, r3]
   123ec:	lsr	r3, r3, #13
   123f0:	and	r3, r3, #1
   123f4:	cmp	r1, #43	; 0x2b
   123f8:	orreq	r3, r3, #1
   123fc:	cmp	r3, #0
   12400:	bne	123d8 <strspn@plt+0x13f4>
   12404:	mvn	r2, #-2147483648	; 0x80000000
   12408:	mov	r1, #46	; 0x2e
   1240c:	mov	r0, r7
   12410:	str	r3, [sp, #16]
   12414:	str	r2, [sp, #20]
   12418:	bl	10f0c <strchr@plt>
   1241c:	subs	r8, r0, #0
   12420:	beq	1254c <strspn@plt+0x1568>
   12424:	ldr	r1, [pc, #616]	; 12694 <strspn@plt+0x16b0>
   12428:	mov	r0, r7
   1242c:	bl	10d8c <strcspn@plt>
   12430:	ldrb	r3, [r7, r0]
   12434:	cmp	r3, #0
   12438:	bne	12514 <strspn@plt+0x1530>
   1243c:	vldr	d7, [pc, #580]	; 12688 <strspn@plt+0x16a4>
   12440:	vmul.f64	d8, d8, d7
   12444:	vcmp.f64	d8, d7
   12448:	vmrs	APSR_nzcv, fpscr
   1244c:	bne	12514 <strspn@plt+0x1530>
   12450:	mov	r0, r7
   12454:	bl	10f00 <strlen@plt>
   12458:	cmp	r8, #0
   1245c:	moveq	r9, r8
   12460:	mov	sl, r0
   12464:	str	r0, [sp, #16]
   12468:	beq	12494 <strspn@plt+0x14b0>
   1246c:	ldr	r1, [pc, #548]	; 12698 <strspn@plt+0x16b4>
   12470:	add	r0, r8, #1
   12474:	bl	10d8c <strcspn@plt>
   12478:	subs	r9, r0, #0
   1247c:	blt	1252c <strspn@plt+0x1548>
   12480:	str	r9, [sp, #20]
   12484:	mvneq	r6, #0
   12488:	bne	1252c <strspn@plt+0x1548>
   1248c:	add	r3, r6, sl
   12490:	str	r3, [sp, #16]
   12494:	mov	r1, #101	; 0x65
   12498:	mov	r0, r7
   1249c:	bl	10f0c <strchr@plt>
   124a0:	subs	r6, r0, #0
   124a4:	beq	125e0 <strspn@plt+0x15fc>
   124a8:	add	sl, r6, #1
   124ac:	mov	r0, sl
   124b0:	mov	r2, #10
   124b4:	mov	r1, #0
   124b8:	bl	10d80 <strtol@plt>
   124bc:	cmp	r0, #-2147483646	; 0x80000002
   124c0:	movlt	fp, #-2147483647	; 0x80000001
   124c4:	ldrlt	r3, [sp, #20]
   124c8:	bge	12564 <strspn@plt+0x1580>
   124cc:	sub	r3, r3, fp
   124d0:	mov	r0, r7
   124d4:	str	r3, [sp, #20]
   124d8:	bl	10f00 <strlen@plt>
   124dc:	ldr	r2, [sp, #16]
   124e0:	sub	r3, r6, r7
   124e4:	add	r3, r3, r2
   124e8:	cmp	r8, #0
   124ec:	rsb	r9, fp, #0
   124f0:	sub	r0, r3, r0
   124f4:	beq	125f8 <strspn@plt+0x1614>
   124f8:	add	r8, r8, #1
   124fc:	cmp	r6, r8
   12500:	beq	125f8 <strspn@plt+0x1614>
   12504:	str	r0, [sp, #16]
   12508:	ldr	r3, [sp, #16]
   1250c:	add	r9, r3, r9
   12510:	str	r9, [sp, #16]
   12514:	ldm	r5, {r0, r1, r2, r3}
   12518:	stm	r4, {r0, r1, r2, r3}
   1251c:	mov	r0, r4
   12520:	add	sp, sp, #28
   12524:	vpop	{d8}
   12528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1252c:	cmp	r7, r8
   12530:	beq	1248c <strspn@plt+0x14a8>
   12534:	ldrb	r6, [r8, #-1]
   12538:	sub	r6, r6, #48	; 0x30
   1253c:	cmp	r6, #9
   12540:	movls	r6, #0
   12544:	movhi	r6, #1
   12548:	b	1248c <strspn@plt+0x14a8>
   1254c:	mov	r1, #112	; 0x70
   12550:	mov	r0, r7
   12554:	bl	10f0c <strchr@plt>
   12558:	cmp	r0, #0
   1255c:	streq	r8, [sp, #20]
   12560:	b	12424 <strspn@plt+0x1440>
   12564:	mov	r0, sl
   12568:	mov	r2, #10
   1256c:	mov	r1, #0
   12570:	bl	10d80 <strtol@plt>
   12574:	ldr	r3, [sp, #20]
   12578:	subs	fp, r0, #0
   1257c:	blt	124cc <strspn@plt+0x14e8>
   12580:	cmp	fp, r3
   12584:	suble	sl, r3, fp
   12588:	subgt	sl, r3, r3
   1258c:	mov	r0, r7
   12590:	str	sl, [sp, #20]
   12594:	bl	10f00 <strlen@plt>
   12598:	cmp	r9, #0
   1259c:	cmpne	r8, #0
   125a0:	ldr	r2, [sp, #16]
   125a4:	movne	r8, #1
   125a8:	moveq	r8, #0
   125ac:	sub	r3, r6, r7
   125b0:	cmp	sl, #0
   125b4:	movne	sl, #0
   125b8:	andeq	sl, r8, #1
   125bc:	add	r3, r3, r2
   125c0:	cmp	sl, #0
   125c4:	sub	r3, r3, r0
   125c8:	subne	r3, r3, #1
   125cc:	cmp	r9, fp
   125d0:	str	r3, [sp, #16]
   125d4:	subls	r9, fp, r9
   125d8:	subhi	r9, fp, fp
   125dc:	b	12508 <strspn@plt+0x1524>
   125e0:	mov	r1, #69	; 0x45
   125e4:	mov	r0, r7
   125e8:	bl	10f0c <strchr@plt>
   125ec:	subs	r6, r0, #0
   125f0:	beq	12514 <strspn@plt+0x1530>
   125f4:	b	124a8 <strspn@plt+0x14c4>
   125f8:	add	r0, r0, #1
   125fc:	b	12504 <strspn@plt+0x1520>
   12600:	mov	r2, #5
   12604:	ldr	r1, [pc, #144]	; 1269c <strspn@plt+0x16b8>
   12608:	mov	r0, #0
   1260c:	bl	10e10 <dcgettext@plt>
   12610:	ldr	r1, [pc, #136]	; 126a0 <strspn@plt+0x16bc>
   12614:	mov	r4, r0
   12618:	mov	r0, #0
   1261c:	bl	16598 <strspn@plt+0x55b4>
   12620:	mov	r1, r7
   12624:	mov	r5, r0
   12628:	mov	r0, #1
   1262c:	bl	16598 <strspn@plt+0x55b4>
   12630:	mov	r1, #0
   12634:	mov	r3, r5
   12638:	mov	r2, r4
   1263c:	str	r0, [sp]
   12640:	mov	r0, r1
   12644:	bl	10e88 <error@plt>
   12648:	mov	r0, #1
   1264c:	bl	12048 <strspn@plt+0x1064>
   12650:	mov	r2, #5
   12654:	ldr	r1, [pc, #72]	; 126a4 <strspn@plt+0x16c0>
   12658:	bl	10e10 <dcgettext@plt>
   1265c:	mov	r4, r0
   12660:	mov	r0, r7
   12664:	bl	1674c <strspn@plt+0x5768>
   12668:	mov	r2, r4
   1266c:	mov	r1, r6
   12670:	mov	r3, r0
   12674:	mov	r0, r6
   12678:	bl	10e88 <error@plt>
   1267c:	mov	r0, #1
   12680:	bl	12048 <strspn@plt+0x1064>
   12684:	nop			; (mov r0, r0)
	...
   12690:	andeq	r2, r1, r8, lsr #13
   12694:	andeq	r8, r1, r4, lsl ip
   12698:	andeq	r8, r1, r8, lsl ip
   1269c:	andeq	r8, r1, ip, ror #23
   126a0:	andeq	r8, r1, r4, lsl #24
   126a4:	andeq	r8, r1, r8, asr #23
   126a8:	push	{r4, r5, r6, lr}
   126ac:	vpush	{d8}
   126b0:	mov	r4, r1
   126b4:	mov	r5, r0
   126b8:	sub	sp, sp, #8
   126bc:	mov	r1, sp
   126c0:	bl	10de0 <strtold@plt>
   126c4:	ldr	r3, [sp]
   126c8:	ldrb	r3, [r3]
   126cc:	cmp	r3, #0
   126d0:	vmov.f64	d8, d0
   126d4:	bne	126f4 <strspn@plt+0x1710>
   126d8:	cmp	r4, #0
   126dc:	vmov.f64	d0, d8
   126e0:	ldrne	r3, [sp]
   126e4:	strne	r3, [r4]
   126e8:	add	sp, sp, #8
   126ec:	vpop	{d8}
   126f0:	pop	{r4, r5, r6, pc}
   126f4:	bl	10f18 <__errno_location@plt>
   126f8:	add	r1, sp, #4
   126fc:	mov	r6, r0
   12700:	mov	r0, r5
   12704:	ldr	r5, [r6]
   12708:	bl	17b08 <strspn@plt+0x6b24>
   1270c:	ldm	sp, {r2, r3}
   12710:	cmp	r2, r3
   12714:	strcc	r3, [sp]
   12718:	strcs	r5, [r6]
   1271c:	vmovcc.f64	d8, d0
   12720:	b	126d8 <strspn@plt+0x16f4>
   12724:	ldr	r3, [pc, #4]	; 12730 <strspn@plt+0x174c>
   12728:	str	r0, [r3]
   1272c:	bx	lr
   12730:	andeq	sl, r2, ip, lsl #3
   12734:	ldr	r3, [pc, #4]	; 12740 <strspn@plt+0x175c>
   12738:	strb	r0, [r3, #4]
   1273c:	bx	lr
   12740:	andeq	sl, r2, ip, lsl #3
   12744:	ldr	r3, [pc, #192]	; 1280c <strspn@plt+0x1828>
   12748:	push	{r4, r5, r6, lr}
   1274c:	sub	sp, sp, #8
   12750:	ldr	r0, [r3]
   12754:	bl	17bcc <strspn@plt+0x6be8>
   12758:	cmp	r0, #0
   1275c:	beq	12780 <strspn@plt+0x179c>
   12760:	ldr	r4, [pc, #168]	; 12810 <strspn@plt+0x182c>
   12764:	ldrb	r3, [r4, #4]
   12768:	cmp	r3, #0
   1276c:	beq	1279c <strspn@plt+0x17b8>
   12770:	bl	10f18 <__errno_location@plt>
   12774:	ldr	r3, [r0]
   12778:	cmp	r3, #32
   1277c:	bne	1279c <strspn@plt+0x17b8>
   12780:	ldr	r3, [pc, #140]	; 12814 <strspn@plt+0x1830>
   12784:	ldr	r0, [r3]
   12788:	bl	17bcc <strspn@plt+0x6be8>
   1278c:	cmp	r0, #0
   12790:	bne	127e4 <strspn@plt+0x1800>
   12794:	add	sp, sp, #8
   12798:	pop	{r4, r5, r6, pc}
   1279c:	mov	r2, #5
   127a0:	ldr	r1, [pc, #112]	; 12818 <strspn@plt+0x1834>
   127a4:	mov	r0, #0
   127a8:	bl	10e10 <dcgettext@plt>
   127ac:	ldr	r4, [r4]
   127b0:	cmp	r4, #0
   127b4:	mov	r5, r0
   127b8:	beq	127f0 <strspn@plt+0x180c>
   127bc:	bl	10f18 <__errno_location@plt>
   127c0:	ldr	r6, [r0]
   127c4:	mov	r0, r4
   127c8:	bl	154ec <strspn@plt+0x4508>
   127cc:	mov	r1, r6
   127d0:	str	r5, [sp]
   127d4:	ldr	r2, [pc, #64]	; 1281c <strspn@plt+0x1838>
   127d8:	mov	r3, r0
   127dc:	mov	r0, #0
   127e0:	bl	10e88 <error@plt>
   127e4:	ldr	r3, [pc, #52]	; 12820 <strspn@plt+0x183c>
   127e8:	ldr	r0, [r3]
   127ec:	bl	10dbc <_exit@plt>
   127f0:	bl	10f18 <__errno_location@plt>
   127f4:	mov	r3, r5
   127f8:	ldr	r2, [pc, #36]	; 12824 <strspn@plt+0x1840>
   127fc:	ldr	r1, [r0]
   12800:	mov	r0, r4
   12804:	bl	10e88 <error@plt>
   12808:	b	127e4 <strspn@plt+0x1800>
   1280c:	andeq	sl, r2, ip, asr r1
   12810:	andeq	sl, r2, ip, lsl #3
   12814:	andeq	sl, r2, r8, asr r1
   12818:	andeq	r8, r1, r0, lsr #11
   1281c:	andeq	r8, r1, ip, asr #28
   12820:	andeq	sl, r2, r0, lsl #2
   12824:	andeq	r8, r1, r0, asr lr
   12828:	push	{r4, r5, lr}
   1282c:	sub	sp, sp, #12
   12830:	mov	r5, r0
   12834:	bl	10f18 <__errno_location@plt>
   12838:	mov	r2, #0
   1283c:	mov	r4, r0
   12840:	ldr	r3, [r0]
   12844:	str	r2, [r4]
   12848:	mov	r0, r5
   1284c:	str	r3, [sp]
   12850:	str	r3, [sp, #4]
   12854:	bl	10db0 <free@plt>
   12858:	ldr	r3, [r4]
   1285c:	add	r2, sp, #8
   12860:	cmp	r3, #0
   12864:	moveq	r3, #4
   12868:	movne	r3, #0
   1286c:	add	r3, r2, r3
   12870:	ldr	r3, [r3, #-8]
   12874:	str	r3, [r4]
   12878:	add	sp, sp, #12
   1287c:	pop	{r4, r5, pc}
   12880:	push	{r4, r5, r6, lr}
   12884:	subs	r4, r0, #0
   12888:	beq	128fc <strspn@plt+0x1918>
   1288c:	mov	r1, #47	; 0x2f
   12890:	bl	10f90 <strrchr@plt>
   12894:	subs	r5, r0, #0
   12898:	beq	128e8 <strspn@plt+0x1904>
   1289c:	add	r6, r5, #1
   128a0:	sub	r3, r6, r4
   128a4:	cmp	r3, #6
   128a8:	ble	128e8 <strspn@plt+0x1904>
   128ac:	mov	r2, #7
   128b0:	ldr	r1, [pc, #96]	; 12918 <strspn@plt+0x1934>
   128b4:	sub	r0, r5, #6
   128b8:	bl	10fcc <strncmp@plt>
   128bc:	cmp	r0, #0
   128c0:	bne	128e8 <strspn@plt+0x1904>
   128c4:	mov	r2, #3
   128c8:	ldr	r1, [pc, #76]	; 1291c <strspn@plt+0x1938>
   128cc:	mov	r0, r6
   128d0:	bl	10fcc <strncmp@plt>
   128d4:	cmp	r0, #0
   128d8:	movne	r4, r6
   128dc:	ldreq	r3, [pc, #60]	; 12920 <strspn@plt+0x193c>
   128e0:	addeq	r4, r5, #4
   128e4:	streq	r4, [r3]
   128e8:	ldr	r2, [pc, #52]	; 12924 <strspn@plt+0x1940>
   128ec:	ldr	r3, [pc, #52]	; 12928 <strspn@plt+0x1944>
   128f0:	str	r4, [r2]
   128f4:	str	r4, [r3]
   128f8:	pop	{r4, r5, r6, pc}
   128fc:	ldr	r3, [pc, #40]	; 1292c <strspn@plt+0x1948>
   12900:	mov	r2, #55	; 0x37
   12904:	mov	r1, #1
   12908:	ldr	r3, [r3]
   1290c:	ldr	r0, [pc, #28]	; 12930 <strspn@plt+0x194c>
   12910:	bl	10e40 <fwrite@plt>
   12914:	bl	10fd8 <abort@plt>
   12918:	andeq	r8, r1, ip, lsl #29
   1291c:	muleq	r1, r4, lr
   12920:	andeq	sl, r2, r8, asr #2
   12924:	muleq	r2, r4, r1
   12928:	andeq	sl, r2, ip, asr #2
   1292c:	andeq	sl, r2, r8, asr r1
   12930:	andeq	r8, r1, r4, asr lr
   12934:	push	{r4, r5, r6, lr}
   12938:	mov	r4, r0
   1293c:	mov	r5, r1
   12940:	bl	17de8 <strspn@plt+0x6e04>
   12944:	ldrb	r3, [r0]
   12948:	bic	r3, r3, #32
   1294c:	cmp	r3, #85	; 0x55
   12950:	bne	129b0 <strspn@plt+0x19cc>
   12954:	ldrb	r3, [r0, #1]
   12958:	bic	r3, r3, #32
   1295c:	cmp	r3, #84	; 0x54
   12960:	bne	129ec <strspn@plt+0x1a08>
   12964:	ldrb	r3, [r0, #2]
   12968:	bic	r3, r3, #32
   1296c:	cmp	r3, #70	; 0x46
   12970:	bne	129ec <strspn@plt+0x1a08>
   12974:	ldrb	r3, [r0, #3]
   12978:	cmp	r3, #45	; 0x2d
   1297c:	bne	129ec <strspn@plt+0x1a08>
   12980:	ldrb	r3, [r0, #4]
   12984:	cmp	r3, #56	; 0x38
   12988:	bne	129ec <strspn@plt+0x1a08>
   1298c:	ldrb	r3, [r0, #5]
   12990:	cmp	r3, #0
   12994:	bne	129ec <strspn@plt+0x1a08>
   12998:	ldrb	r2, [r4]
   1299c:	ldr	r3, [pc, #152]	; 12a3c <strspn@plt+0x1a58>
   129a0:	ldr	r0, [pc, #152]	; 12a40 <strspn@plt+0x1a5c>
   129a4:	cmp	r2, #96	; 0x60
   129a8:	movne	r0, r3
   129ac:	pop	{r4, r5, r6, pc}
   129b0:	cmp	r3, #71	; 0x47
   129b4:	bne	129ec <strspn@plt+0x1a08>
   129b8:	ldrb	r3, [r0, #1]
   129bc:	bic	r3, r3, #32
   129c0:	cmp	r3, #66	; 0x42
   129c4:	bne	129ec <strspn@plt+0x1a08>
   129c8:	ldrb	r3, [r0, #2]
   129cc:	cmp	r3, #49	; 0x31
   129d0:	bne	129ec <strspn@plt+0x1a08>
   129d4:	ldrb	r3, [r0, #3]
   129d8:	cmp	r3, #56	; 0x38
   129dc:	bne	129ec <strspn@plt+0x1a08>
   129e0:	ldrb	r3, [r0, #4]
   129e4:	cmp	r3, #48	; 0x30
   129e8:	beq	12a00 <strspn@plt+0x1a1c>
   129ec:	ldr	r3, [pc, #80]	; 12a44 <strspn@plt+0x1a60>
   129f0:	cmp	r5, #9
   129f4:	ldr	r0, [pc, #76]	; 12a48 <strspn@plt+0x1a64>
   129f8:	movne	r0, r3
   129fc:	pop	{r4, r5, r6, pc}
   12a00:	ldrb	r3, [r0, #5]
   12a04:	cmp	r3, #51	; 0x33
   12a08:	bne	129ec <strspn@plt+0x1a08>
   12a0c:	ldrb	r3, [r0, #6]
   12a10:	cmp	r3, #48	; 0x30
   12a14:	bne	129ec <strspn@plt+0x1a08>
   12a18:	ldrb	r3, [r0, #7]
   12a1c:	cmp	r3, #0
   12a20:	bne	129ec <strspn@plt+0x1a08>
   12a24:	ldrb	r2, [r4]
   12a28:	ldr	r3, [pc, #28]	; 12a4c <strspn@plt+0x1a68>
   12a2c:	ldr	r0, [pc, #28]	; 12a50 <strspn@plt+0x1a6c>
   12a30:	cmp	r2, #96	; 0x60
   12a34:	movne	r0, r3
   12a38:	pop	{r4, r5, r6, pc}
   12a3c:	strdeq	r8, [r1], -r0
   12a40:	andeq	r8, r1, ip, ror #29
   12a44:	andeq	r8, r1, r0, lsl #30
   12a48:	strdeq	r8, [r1], -ip
   12a4c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12a50:	strdeq	r8, [r1], -r4
   12a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a58:	sub	sp, sp, #140	; 0x8c
   12a5c:	mov	r9, r1
   12a60:	str	r3, [sp, #24]
   12a64:	mov	r3, #1
   12a68:	mov	sl, r0
   12a6c:	str	r2, [sp, #44]	; 0x2c
   12a70:	str	r3, [sp, #28]
   12a74:	bl	10e58 <__ctype_get_mb_cur_max@plt>
   12a78:	ldr	r3, [sp, #180]	; 0xb4
   12a7c:	mov	fp, r9
   12a80:	mov	r9, sl
   12a84:	lsr	r3, r3, #1
   12a88:	and	r3, r3, #1
   12a8c:	str	r3, [sp, #40]	; 0x28
   12a90:	ldr	r3, [sp, #180]	; 0xb4
   12a94:	mov	r2, #0
   12a98:	and	r3, r3, #4
   12a9c:	str	r3, [sp, #100]	; 0x64
   12aa0:	ldr	r3, [sp, #180]	; 0xb4
   12aa4:	str	r2, [sp, #76]	; 0x4c
   12aa8:	and	r3, r3, #1
   12aac:	str	r3, [sp, #96]	; 0x60
   12ab0:	str	r2, [sp, #36]	; 0x24
   12ab4:	str	r2, [sp, #56]	; 0x38
   12ab8:	str	r2, [sp, #68]	; 0x44
   12abc:	str	r2, [sp, #72]	; 0x48
   12ac0:	str	r2, [sp, #84]	; 0x54
   12ac4:	str	r0, [sp, #80]	; 0x50
   12ac8:	ldr	r3, [sp, #176]	; 0xb0
   12acc:	cmp	r3, #10
   12ad0:	ldrls	pc, [pc, r3, lsl #2]
   12ad4:	b	13cac <strspn@plt+0x2cc8>
   12ad8:	andeq	r2, r1, r4, lsl #22
   12adc:	andeq	r2, r1, r4, lsr #28
   12ae0:	andeq	r2, r1, ip, ror pc
   12ae4:	andeq	r2, r1, r8, asr lr
   12ae8:	ldrdeq	r2, [r1], -r0
   12aec:			; <UNDEFINED> instruction: 0x00012fb0
   12af0:	andeq	r2, r1, r8, ror lr
   12af4:	muleq	r1, ip, lr
   12af8:	andeq	r2, r1, r4, asr #29
   12afc:	andeq	r2, r1, r4, asr #29
   12b00:	andeq	r2, r1, r4, asr #29
   12b04:	mov	r3, #0
   12b08:	ldr	r1, [sp, #56]	; 0x38
   12b0c:	ldr	r2, [sp, #176]	; 0xb0
   12b10:	ldr	lr, [sp, #176]	; 0xb0
   12b14:	mov	r8, r3
   12b18:	mov	ip, r3
   12b1c:	str	r3, [sp, #40]	; 0x28
   12b20:	mov	r3, r1
   12b24:	cmp	r2, #2
   12b28:	moveq	r3, #0
   12b2c:	andne	r3, r3, #1
   12b30:	mov	r0, r3
   12b34:	str	r3, [sp, #92]	; 0x5c
   12b38:	ldr	r3, [sp, #68]	; 0x44
   12b3c:	sub	lr, lr, #2
   12b40:	adds	r2, r3, #0
   12b44:	movne	r2, #1
   12b48:	and	r3, r1, ip
   12b4c:	and	r3, r2, r3
   12b50:	clz	lr, lr
   12b54:	str	r3, [sp, #88]	; 0x58
   12b58:	lsr	lr, lr, #5
   12b5c:	mov	r3, ip
   12b60:	and	r3, r3, lr
   12b64:	mov	sl, #0
   12b68:	and	r0, r2, r0
   12b6c:	str	r3, [sp, #64]	; 0x40
   12b70:	eor	r3, r1, #1
   12b74:	str	lr, [sp, #52]	; 0x34
   12b78:	str	r0, [sp, #48]	; 0x30
   12b7c:	str	r3, [sp, #60]	; 0x3c
   12b80:	ldr	r3, [sp, #24]
   12b84:	cmn	r3, #1
   12b88:	beq	130b8 <strspn@plt+0x20d4>
   12b8c:	subs	r7, r3, sl
   12b90:	movne	r7, #1
   12b94:	cmp	r7, #0
   12b98:	beq	130d0 <strspn@plt+0x20ec>
   12b9c:	ldr	r3, [sp, #48]	; 0x30
   12ba0:	cmp	r3, #0
   12ba4:	beq	1343c <strspn@plt+0x2458>
   12ba8:	ldr	r2, [sp, #68]	; 0x44
   12bac:	ldr	r1, [sp, #24]
   12bb0:	cmp	r2, #1
   12bb4:	mov	r3, r2
   12bb8:	movls	r3, #0
   12bbc:	movhi	r3, #1
   12bc0:	cmn	r1, #1
   12bc4:	movne	r3, #0
   12bc8:	cmp	r3, #0
   12bcc:	add	r4, sl, r2
   12bd0:	beq	12be0 <strspn@plt+0x1bfc>
   12bd4:	ldr	r0, [sp, #44]	; 0x2c
   12bd8:	bl	10f00 <strlen@plt>
   12bdc:	str	r0, [sp, #24]
   12be0:	ldr	r3, [sp, #24]
   12be4:	cmp	r3, r4
   12be8:	ldr	r3, [sp, #44]	; 0x2c
   12bec:	add	r5, r3, sl
   12bf0:	bcc	13444 <strspn@plt+0x2460>
   12bf4:	mov	r0, r5
   12bf8:	ldr	r2, [sp, #68]	; 0x44
   12bfc:	ldr	r1, [sp, #72]	; 0x48
   12c00:	bl	10df8 <memcmp@plt>
   12c04:	cmp	r0, #0
   12c08:	bne	13444 <strspn@plt+0x2460>
   12c0c:	ldr	r3, [sp, #40]	; 0x28
   12c10:	cmp	r3, #0
   12c14:	bne	13e00 <strspn@plt+0x2e1c>
   12c18:	ldrb	r4, [r5]
   12c1c:	cmp	r4, #126	; 0x7e
   12c20:	ldrls	pc, [pc, r4, lsl #2]
   12c24:	b	13d3c <strspn@plt+0x2d58>
   12c28:	strdeq	r3, [r1], -ip
   12c2c:	andeq	r3, r1, ip, lsr sp
   12c30:	andeq	r3, r1, ip, lsr sp
   12c34:	andeq	r3, r1, ip, lsr sp
   12c38:	andeq	r3, r1, ip, lsr sp
   12c3c:	andeq	r3, r1, ip, lsr sp
   12c40:	andeq	r3, r1, ip, lsr sp
   12c44:	andeq	r3, r1, r8, ror #5
   12c48:	ldrdeq	r3, [r1], -r4
   12c4c:			; <UNDEFINED> instruction: 0x000132b0
   12c50:	muleq	r1, r0, r2
   12c54:	andeq	r3, r1, r0, asr #5
   12c58:	strdeq	r3, [r1], -r8
   12c5c:	andeq	r3, r1, ip, lsr #8
   12c60:	andeq	r3, r1, ip, lsr sp
   12c64:	andeq	r3, r1, ip, lsr sp
   12c68:	andeq	r3, r1, ip, lsr sp
   12c6c:	andeq	r3, r1, ip, lsr sp
   12c70:	andeq	r3, r1, ip, lsr sp
   12c74:	andeq	r3, r1, ip, lsr sp
   12c78:	andeq	r3, r1, ip, lsr sp
   12c7c:	andeq	r3, r1, ip, lsr sp
   12c80:	andeq	r3, r1, ip, lsr sp
   12c84:	andeq	r3, r1, ip, lsr sp
   12c88:	andeq	r3, r1, ip, lsr sp
   12c8c:	andeq	r3, r1, ip, lsr sp
   12c90:	andeq	r3, r1, ip, lsr sp
   12c94:	andeq	r3, r1, ip, lsr sp
   12c98:	andeq	r3, r1, ip, lsr sp
   12c9c:	andeq	r3, r1, ip, lsr sp
   12ca0:	andeq	r3, r1, ip, lsr sp
   12ca4:	andeq	r3, r1, ip, lsr sp
   12ca8:	andeq	r3, r1, ip, lsl r4
   12cac:	strdeq	r3, [r1], -ip
   12cb0:	strdeq	r3, [r1], -ip
   12cb4:	ldrdeq	r3, [r1], -ip
   12cb8:	strdeq	r3, [r1], -ip
   12cbc:	andeq	r3, r1, r8, ror #3
   12cc0:	strdeq	r3, [r1], -ip
   12cc4:	andeq	r3, r1, r4, asr #3
   12cc8:	strdeq	r3, [r1], -ip
   12ccc:	strdeq	r3, [r1], -ip
   12cd0:	strdeq	r3, [r1], -ip
   12cd4:	andeq	r3, r1, r8, ror #3
   12cd8:	andeq	r3, r1, r8, ror #3
   12cdc:	andeq	r3, r1, r8, ror #3
   12ce0:	andeq	r3, r1, r8, ror #3
   12ce4:	andeq	r3, r1, r8, ror #3
   12ce8:	andeq	r3, r1, r8, ror #3
   12cec:	andeq	r3, r1, r8, ror #3
   12cf0:	andeq	r3, r1, r8, ror #3
   12cf4:	andeq	r3, r1, r8, ror #3
   12cf8:	andeq	r3, r1, r8, ror #3
   12cfc:	andeq	r3, r1, r8, ror #3
   12d00:	andeq	r3, r1, r8, ror #3
   12d04:	andeq	r3, r1, r8, ror #3
   12d08:	andeq	r3, r1, r8, ror #3
   12d0c:	andeq	r3, r1, r8, ror #3
   12d10:	andeq	r3, r1, r8, ror #3
   12d14:	strdeq	r3, [r1], -ip
   12d18:	strdeq	r3, [r1], -ip
   12d1c:	strdeq	r3, [r1], -ip
   12d20:	strdeq	r3, [r1], -ip
   12d24:	andeq	r3, r1, r4, ror r1
   12d28:	andeq	r3, r1, ip, lsr sp
   12d2c:	andeq	r3, r1, r8, ror #3
   12d30:	andeq	r3, r1, r8, ror #3
   12d34:	andeq	r3, r1, r8, ror #3
   12d38:	andeq	r3, r1, r8, ror #3
   12d3c:	andeq	r3, r1, r8, ror #3
   12d40:	andeq	r3, r1, r8, ror #3
   12d44:	andeq	r3, r1, r8, ror #3
   12d48:	andeq	r3, r1, r8, ror #3
   12d4c:	andeq	r3, r1, r8, ror #3
   12d50:	andeq	r3, r1, r8, ror #3
   12d54:	andeq	r3, r1, r8, ror #3
   12d58:	andeq	r3, r1, r8, ror #3
   12d5c:	andeq	r3, r1, r8, ror #3
   12d60:	andeq	r3, r1, r8, ror #3
   12d64:	andeq	r3, r1, r8, ror #3
   12d68:	andeq	r3, r1, r8, ror #3
   12d6c:	andeq	r3, r1, r8, ror #3
   12d70:	andeq	r3, r1, r8, ror #3
   12d74:	andeq	r3, r1, r8, ror #3
   12d78:	andeq	r3, r1, r8, ror #3
   12d7c:	andeq	r3, r1, r8, ror #3
   12d80:	andeq	r3, r1, r8, ror #3
   12d84:	andeq	r3, r1, r8, ror #3
   12d88:	andeq	r3, r1, r8, ror #3
   12d8c:	andeq	r3, r1, r8, ror #3
   12d90:	andeq	r3, r1, r8, ror #3
   12d94:	strdeq	r3, [r1], -ip
   12d98:	andeq	r3, r1, r0, asr #2
   12d9c:	andeq	r3, r1, r8, ror #3
   12da0:	strdeq	r3, [r1], -ip
   12da4:	andeq	r3, r1, r8, ror #3
   12da8:	strdeq	r3, [r1], -ip
   12dac:	andeq	r3, r1, r8, ror #3
   12db0:	andeq	r3, r1, r8, ror #3
   12db4:	andeq	r3, r1, r8, ror #3
   12db8:	andeq	r3, r1, r8, ror #3
   12dbc:	andeq	r3, r1, r8, ror #3
   12dc0:	andeq	r3, r1, r8, ror #3
   12dc4:	andeq	r3, r1, r8, ror #3
   12dc8:	andeq	r3, r1, r8, ror #3
   12dcc:	andeq	r3, r1, r8, ror #3
   12dd0:	andeq	r3, r1, r8, ror #3
   12dd4:	andeq	r3, r1, r8, ror #3
   12dd8:	andeq	r3, r1, r8, ror #3
   12ddc:	andeq	r3, r1, r8, ror #3
   12de0:	andeq	r3, r1, r8, ror #3
   12de4:	andeq	r3, r1, r8, ror #3
   12de8:	andeq	r3, r1, r8, ror #3
   12dec:	andeq	r3, r1, r8, ror #3
   12df0:	andeq	r3, r1, r8, ror #3
   12df4:	andeq	r3, r1, r8, ror #3
   12df8:	andeq	r3, r1, r8, ror #3
   12dfc:	andeq	r3, r1, r8, ror #3
   12e00:	andeq	r3, r1, r8, ror #3
   12e04:	andeq	r3, r1, r8, ror #3
   12e08:	andeq	r3, r1, r8, ror #3
   12e0c:	andeq	r3, r1, r8, ror #3
   12e10:	andeq	r3, r1, r8, ror #3
   12e14:	strdeq	r2, [r1], -r8
   12e18:	strdeq	r3, [r1], -ip
   12e1c:	strdeq	r2, [r1], -r8
   12e20:	ldrdeq	r3, [r1], -ip
   12e24:	mov	r3, #1
   12e28:	str	r3, [sp, #40]	; 0x28
   12e2c:	str	r3, [sp, #68]	; 0x44
   12e30:	mov	r8, #0
   12e34:	ldr	r3, [pc, #4056]	; 13e14 <strspn@plt+0x2e30>
   12e38:	str	r3, [sp, #72]	; 0x48
   12e3c:	mov	r3, #2
   12e40:	str	r3, [sp, #176]	; 0xb0
   12e44:	ldr	r1, [sp, #56]	; 0x38
   12e48:	mov	r2, r3
   12e4c:	ldr	ip, [sp, #40]	; 0x28
   12e50:	mov	lr, r3
   12e54:	b	12b20 <strspn@plt+0x1b3c>
   12e58:	mov	r3, #1
   12e5c:	str	r3, [sp, #56]	; 0x38
   12e60:	str	r3, [sp, #68]	; 0x44
   12e64:	str	r3, [sp, #40]	; 0x28
   12e68:	ldr	r3, [pc, #4004]	; 13e14 <strspn@plt+0x2e30>
   12e6c:	mov	r8, #0
   12e70:	str	r3, [sp, #72]	; 0x48
   12e74:	b	12e3c <strspn@plt+0x1e58>
   12e78:	mov	r3, #1
   12e7c:	str	r3, [sp, #56]	; 0x38
   12e80:	str	r3, [sp, #68]	; 0x44
   12e84:	str	r3, [sp, #40]	; 0x28
   12e88:	ldr	r3, [pc, #3976]	; 13e18 <strspn@plt+0x2e34>
   12e8c:	mov	r8, #0
   12e90:	str	r3, [sp, #72]	; 0x48
   12e94:	mov	r3, #5
   12e98:	b	12e40 <strspn@plt+0x1e5c>
   12e9c:	mov	r3, #0
   12ea0:	str	r3, [sp, #40]	; 0x28
   12ea4:	mov	r3, #1
   12ea8:	str	r3, [sp, #56]	; 0x38
   12eac:	mov	r8, #0
   12eb0:	mov	r1, r3
   12eb4:	ldr	r2, [sp, #176]	; 0xb0
   12eb8:	ldr	ip, [sp, #40]	; 0x28
   12ebc:	ldr	lr, [sp, #176]	; 0xb0
   12ec0:	b	12b20 <strspn@plt+0x1b3c>
   12ec4:	ldr	r3, [sp, #176]	; 0xb0
   12ec8:	cmp	r3, #10
   12ecc:	beq	12f10 <strspn@plt+0x1f2c>
   12ed0:	mov	r2, #5
   12ed4:	ldr	r1, [pc, #3904]	; 13e1c <strspn@plt+0x2e38>
   12ed8:	mov	r0, #0
   12edc:	bl	10e10 <dcgettext@plt>
   12ee0:	ldr	r2, [pc, #3892]	; 13e1c <strspn@plt+0x2e38>
   12ee4:	cmp	r0, r2
   12ee8:	str	r0, [sp, #188]	; 0xbc
   12eec:	beq	13fa8 <strspn@plt+0x2fc4>
   12ef0:	mov	r2, #5
   12ef4:	ldr	r1, [pc, #3864]	; 13e14 <strspn@plt+0x2e30>
   12ef8:	mov	r0, #0
   12efc:	bl	10e10 <dcgettext@plt>
   12f00:	ldr	r2, [pc, #3852]	; 13e14 <strspn@plt+0x2e30>
   12f04:	cmp	r0, r2
   12f08:	str	r0, [sp, #192]	; 0xc0
   12f0c:	beq	13f98 <strspn@plt+0x2fb4>
   12f10:	ldr	r8, [sp, #40]	; 0x28
   12f14:	cmp	r8, #0
   12f18:	movne	r8, #0
   12f1c:	bne	12f4c <strspn@plt+0x1f68>
   12f20:	ldr	r3, [sp, #188]	; 0xbc
   12f24:	ldrb	r3, [r3]
   12f28:	cmp	r3, #0
   12f2c:	beq	12f4c <strspn@plt+0x1f68>
   12f30:	ldr	r2, [sp, #188]	; 0xbc
   12f34:	cmp	fp, r8
   12f38:	strbhi	r3, [r9, r8]
   12f3c:	ldrb	r3, [r2, #1]!
   12f40:	add	r8, r8, #1
   12f44:	cmp	r3, #0
   12f48:	bne	12f34 <strspn@plt+0x1f50>
   12f4c:	ldr	r0, [sp, #192]	; 0xc0
   12f50:	bl	10f00 <strlen@plt>
   12f54:	ldr	r3, [sp, #192]	; 0xc0
   12f58:	ldr	r2, [sp, #176]	; 0xb0
   12f5c:	str	r3, [sp, #72]	; 0x48
   12f60:	mov	r3, #1
   12f64:	str	r3, [sp, #56]	; 0x38
   12f68:	mov	r1, r3
   12f6c:	ldr	ip, [sp, #40]	; 0x28
   12f70:	ldr	lr, [sp, #176]	; 0xb0
   12f74:	str	r0, [sp, #68]	; 0x44
   12f78:	b	12b20 <strspn@plt+0x1b3c>
   12f7c:	ldr	r3, [sp, #40]	; 0x28
   12f80:	cmp	r3, #0
   12f84:	beq	13c2c <strspn@plt+0x2c48>
   12f88:	mov	r3, #1
   12f8c:	str	r3, [sp, #68]	; 0x44
   12f90:	ldr	r3, [pc, #3708]	; 13e14 <strspn@plt+0x2e30>
   12f94:	str	r3, [sp, #72]	; 0x48
   12f98:	mov	r8, #0
   12f9c:	ldr	r1, [sp, #56]	; 0x38
   12fa0:	ldr	r2, [sp, #176]	; 0xb0
   12fa4:	ldr	ip, [sp, #40]	; 0x28
   12fa8:	ldr	lr, [sp, #176]	; 0xb0
   12fac:	b	12b20 <strspn@plt+0x1b3c>
   12fb0:	ldr	r3, [sp, #40]	; 0x28
   12fb4:	cmp	r3, #0
   12fb8:	beq	13cb0 <strspn@plt+0x2ccc>
   12fbc:	str	r3, [sp, #56]	; 0x38
   12fc0:	mov	r3, #1
   12fc4:	str	r3, [sp, #68]	; 0x44
   12fc8:	ldr	r3, [pc, #3656]	; 13e18 <strspn@plt+0x2e34>
   12fcc:	b	12f94 <strspn@plt+0x1fb0>
   12fd0:	ldr	r3, [sp, #40]	; 0x28
   12fd4:	cmp	r3, #0
   12fd8:	mov	r3, #1
   12fdc:	streq	r3, [sp, #56]	; 0x38
   12fe0:	beq	13c2c <strspn@plt+0x2c48>
   12fe4:	str	r3, [sp, #68]	; 0x44
   12fe8:	ldr	r3, [pc, #3620]	; 13e14 <strspn@plt+0x2e30>
   12fec:	mov	r8, #0
   12ff0:	str	r3, [sp, #72]	; 0x48
   12ff4:	b	12e3c <strspn@plt+0x1e58>
   12ff8:	ldr	r3, [sp, #24]
   12ffc:	ldr	r6, [sp, #48]	; 0x30
   13000:	cmn	r3, #1
   13004:	beq	13660 <strspn@plt+0x267c>
   13008:	subs	r3, r3, #1
   1300c:	movne	r3, #1
   13010:	cmp	r3, #0
   13014:	beq	133e0 <strspn@plt+0x23fc>
   13018:	ldr	r1, [sp, #52]	; 0x34
   1301c:	mov	r7, r3
   13020:	mov	r3, #0
   13024:	str	r3, [sp, #32]
   13028:	ldr	r3, [sp, #60]	; 0x3c
   1302c:	orr	r2, r1, r3
   13030:	ldr	r3, [sp, #40]	; 0x28
   13034:	eor	r2, r2, #1
   13038:	orr	r2, r3, r2
   1303c:	tst	r2, #255	; 0xff
   13040:	bne	13964 <strspn@plt+0x2980>
   13044:	cmp	r6, #0
   13048:	bne	13224 <strspn@plt+0x2240>
   1304c:	ldr	r3, [sp, #36]	; 0x24
   13050:	add	sl, sl, #1
   13054:	and	r3, r3, r7
   13058:	uxtb	r6, r3
   1305c:	cmp	r6, #0
   13060:	beq	1308c <strspn@plt+0x20a8>
   13064:	cmp	fp, r8
   13068:	movhi	r3, #39	; 0x27
   1306c:	strbhi	r3, [r9, r8]
   13070:	add	r3, r8, #1
   13074:	cmp	fp, r3
   13078:	movhi	r2, #39	; 0x27
   1307c:	add	r8, r8, #2
   13080:	strbhi	r2, [r9, r3]
   13084:	mov	r3, #0
   13088:	str	r3, [sp, #36]	; 0x24
   1308c:	ldr	r2, [sp, #32]
   13090:	cmp	r8, fp
   13094:	ldr	r3, [sp, #28]
   13098:	strbcc	r4, [r9, r8]
   1309c:	cmp	r2, #0
   130a0:	moveq	r3, #0
   130a4:	str	r3, [sp, #28]
   130a8:	ldr	r3, [sp, #24]
   130ac:	add	r8, r8, #1
   130b0:	cmn	r3, #1
   130b4:	bne	12b8c <strspn@plt+0x1ba8>
   130b8:	ldr	r3, [sp, #44]	; 0x2c
   130bc:	ldrb	r3, [r3, sl]
   130c0:	adds	r7, r3, #0
   130c4:	movne	r7, #1
   130c8:	cmp	r7, #0
   130cc:	bne	12b9c <strspn@plt+0x1bb8>
   130d0:	ldr	r3, [sp, #64]	; 0x40
   130d4:	cmp	r8, #0
   130d8:	movne	r3, #0
   130dc:	andeq	r3, r3, #1
   130e0:	cmp	r3, #0
   130e4:	str	r3, [sp, #64]	; 0x40
   130e8:	bne	13b8c <strspn@plt+0x2ba8>
   130ec:	ldr	r3, [sp, #40]	; 0x28
   130f0:	ldr	r2, [sp, #52]	; 0x34
   130f4:	eor	r3, r3, #1
   130f8:	ands	r2, r2, r3
   130fc:	beq	13fb8 <strspn@plt+0x2fd4>
   13100:	ldr	r3, [sp, #76]	; 0x4c
   13104:	cmp	r3, #0
   13108:	beq	13f88 <strspn@plt+0x2fa4>
   1310c:	ldr	r3, [sp, #28]
   13110:	cmp	r3, #0
   13114:	bne	13f44 <strspn@plt+0x2f60>
   13118:	ldr	r2, [sp, #84]	; 0x54
   1311c:	clz	r3, fp
   13120:	cmp	r2, #0
   13124:	lsr	r3, r3, #5
   13128:	moveq	r3, #0
   1312c:	cmp	r3, #0
   13130:	beq	13ee4 <strspn@plt+0x2f00>
   13134:	mov	fp, r2
   13138:	str	r3, [sp, #76]	; 0x4c
   1313c:	b	12ac8 <strspn@plt+0x1ae4>
   13140:	ldr	r3, [sp, #176]	; 0xb0
   13144:	ldr	r6, [sp, #48]	; 0x30
   13148:	cmp	r3, #2
   1314c:	beq	13684 <strspn@plt+0x26a0>
   13150:	ldr	r3, [sp, #88]	; 0x58
   13154:	cmp	r3, #0
   13158:	beq	13c08 <strspn@plt+0x2c24>
   1315c:	mov	r3, #0
   13160:	add	sl, sl, #1
   13164:	ldr	r6, [sp, #36]	; 0x24
   13168:	str	r3, [sp, #32]
   1316c:	mov	r4, #92	; 0x5c
   13170:	b	1305c <strspn@plt+0x2078>
   13174:	ldr	r3, [sp, #176]	; 0xb0
   13178:	ldr	r6, [sp, #48]	; 0x30
   1317c:	cmp	r3, #2
   13180:	beq	136b4 <strspn@plt+0x26d0>
   13184:	cmp	r3, #5
   13188:	bne	13c18 <strspn@plt+0x2c34>
   1318c:	ldr	r3, [sp, #100]	; 0x64
   13190:	cmp	r3, #0
   13194:	beq	13c7c <strspn@plt+0x2c98>
   13198:	ldr	r2, [sp, #24]
   1319c:	add	r3, sl, #2
   131a0:	cmp	r2, r3
   131a4:	bls	131b4 <strspn@plt+0x21d0>
   131a8:	ldrb	r4, [r5, #1]
   131ac:	cmp	r4, #63	; 0x3f
   131b0:	beq	13e24 <strspn@plt+0x2e40>
   131b4:	mov	r1, #0
   131b8:	str	r1, [sp, #32]
   131bc:	mov	r4, #63	; 0x3f
   131c0:	b	13028 <strspn@plt+0x2044>
   131c4:	ldr	r3, [sp, #176]	; 0xb0
   131c8:	ldr	r6, [sp, #48]	; 0x30
   131cc:	cmp	r3, #2
   131d0:	beq	136e0 <strspn@plt+0x26fc>
   131d4:	str	r7, [sp, #32]
   131d8:	str	r7, [sp, #76]	; 0x4c
   131dc:	mov	r1, #0
   131e0:	mov	r4, #39	; 0x27
   131e4:	b	13028 <strspn@plt+0x2044>
   131e8:	ldr	r6, [sp, #48]	; 0x30
   131ec:	ldr	r1, [sp, #52]	; 0x34
   131f0:	str	r7, [sp, #32]
   131f4:	b	13028 <strspn@plt+0x2044>
   131f8:	ldr	r6, [sp, #48]	; 0x30
   131fc:	ldr	r1, [sp, #52]	; 0x34
   13200:	mov	r4, #12
   13204:	mov	r3, #102	; 0x66
   13208:	ldr	r2, [sp, #56]	; 0x38
   1320c:	cmp	r2, #0
   13210:	streq	r2, [sp, #32]
   13214:	beq	13028 <strspn@plt+0x2044>
   13218:	mov	r4, r3
   1321c:	mov	r3, #0
   13220:	str	r3, [sp, #32]
   13224:	ldr	r3, [sp, #40]	; 0x28
   13228:	cmp	r3, #0
   1322c:	bne	1399c <strspn@plt+0x29b8>
   13230:	ldr	r3, [sp, #36]	; 0x24
   13234:	eor	r3, r3, #1
   13238:	and	r3, r3, r1
   1323c:	ands	r3, r3, #255	; 0xff
   13240:	beq	13278 <strspn@plt+0x2294>
   13244:	cmp	fp, r8
   13248:	movhi	r2, #39	; 0x27
   1324c:	strbhi	r2, [r9, r8]
   13250:	add	r2, r8, #1
   13254:	cmp	fp, r2
   13258:	movhi	r1, #36	; 0x24
   1325c:	strbhi	r1, [r9, r2]
   13260:	add	r2, r8, #2
   13264:	cmp	fp, r2
   13268:	add	r8, r8, #3
   1326c:	movhi	r1, #39	; 0x27
   13270:	strbhi	r1, [r9, r2]
   13274:	str	r3, [sp, #36]	; 0x24
   13278:	cmp	fp, r8
   1327c:	movhi	r3, #92	; 0x5c
   13280:	strbhi	r3, [r9, r8]
   13284:	add	sl, sl, #1
   13288:	add	r8, r8, #1
   1328c:	b	1308c <strspn@plt+0x20a8>
   13290:	ldr	r6, [sp, #48]	; 0x30
   13294:	mov	r4, #10
   13298:	mov	r3, #110	; 0x6e
   1329c:	ldr	r2, [sp, #64]	; 0x40
   132a0:	cmp	r2, #0
   132a4:	bne	13d24 <strspn@plt+0x2d40>
   132a8:	ldr	r1, [sp, #52]	; 0x34
   132ac:	b	13208 <strspn@plt+0x2224>
   132b0:	ldr	r6, [sp, #48]	; 0x30
   132b4:	ldr	r1, [sp, #52]	; 0x34
   132b8:	mov	r3, #116	; 0x74
   132bc:	b	13208 <strspn@plt+0x2224>
   132c0:	ldr	r6, [sp, #48]	; 0x30
   132c4:	ldr	r1, [sp, #52]	; 0x34
   132c8:	mov	r4, #11
   132cc:	mov	r3, #118	; 0x76
   132d0:	b	13208 <strspn@plt+0x2224>
   132d4:	ldr	r6, [sp, #48]	; 0x30
   132d8:	ldr	r1, [sp, #52]	; 0x34
   132dc:	mov	r4, #8
   132e0:	mov	r3, #98	; 0x62
   132e4:	b	13208 <strspn@plt+0x2224>
   132e8:	ldr	r6, [sp, #48]	; 0x30
   132ec:	ldr	r1, [sp, #52]	; 0x34
   132f0:	mov	r4, #7
   132f4:	mov	r3, #97	; 0x61
   132f8:	b	13208 <strspn@plt+0x2224>
   132fc:	ldr	r3, [sp, #56]	; 0x38
   13300:	ldr	r6, [sp, #48]	; 0x30
   13304:	cmp	r3, #0
   13308:	beq	137cc <strspn@plt+0x27e8>
   1330c:	ldr	r3, [sp, #40]	; 0x28
   13310:	cmp	r3, #0
   13314:	bne	13e00 <strspn@plt+0x2e1c>
   13318:	ldr	r3, [sp, #36]	; 0x24
   1331c:	ldr	r2, [sp, #52]	; 0x34
   13320:	eor	r3, r3, #1
   13324:	ands	r3, r2, r3
   13328:	moveq	r2, r8
   1332c:	beq	13364 <strspn@plt+0x2380>
   13330:	cmp	fp, r8
   13334:	movhi	r2, #39	; 0x27
   13338:	strbhi	r2, [r9, r8]
   1333c:	add	r2, r8, #1
   13340:	cmp	fp, r2
   13344:	movhi	r1, #36	; 0x24
   13348:	strbhi	r1, [r9, r2]
   1334c:	add	r2, r8, #2
   13350:	cmp	fp, r2
   13354:	movhi	r1, #39	; 0x27
   13358:	strbhi	r1, [r9, r2]
   1335c:	add	r2, r8, #3
   13360:	str	r3, [sp, #36]	; 0x24
   13364:	cmp	fp, r2
   13368:	movhi	r3, #92	; 0x5c
   1336c:	strbhi	r3, [r9, r2]
   13370:	ldr	r3, [sp, #92]	; 0x5c
   13374:	add	r8, r2, #1
   13378:	cmp	r3, #0
   1337c:	beq	13d00 <strspn@plt+0x2d1c>
   13380:	ldr	r1, [sp, #24]
   13384:	add	r3, sl, #1
   13388:	cmp	r1, r3
   1338c:	bls	133c4 <strspn@plt+0x23e0>
   13390:	ldr	r1, [sp, #44]	; 0x2c
   13394:	ldrb	r3, [r1, r3]
   13398:	sub	r3, r3, #48	; 0x30
   1339c:	cmp	r3, #9
   133a0:	bhi	133c4 <strspn@plt+0x23e0>
   133a4:	cmp	fp, r8
   133a8:	movhi	r3, #48	; 0x30
   133ac:	strbhi	r3, [r9, r8]
   133b0:	add	r3, r2, #2
   133b4:	cmp	fp, r3
   133b8:	add	r8, r2, #3
   133bc:	movhi	r1, #48	; 0x30
   133c0:	strbhi	r1, [r9, r3]
   133c4:	ldr	r3, [sp, #40]	; 0x28
   133c8:	ldr	r1, [sp, #52]	; 0x34
   133cc:	mov	r7, r3
   133d0:	str	r3, [sp, #32]
   133d4:	mov	r4, #48	; 0x30
   133d8:	b	13028 <strspn@plt+0x2044>
   133dc:	ldr	r6, [sp, #48]	; 0x30
   133e0:	cmp	sl, #0
   133e4:	streq	r7, [sp, #32]
   133e8:	beq	13408 <strspn@plt+0x2424>
   133ec:	mov	r3, #0
   133f0:	ldr	r1, [sp, #52]	; 0x34
   133f4:	str	r3, [sp, #32]
   133f8:	b	13028 <strspn@plt+0x2044>
   133fc:	ldr	r6, [sp, #48]	; 0x30
   13400:	mov	r3, #0
   13404:	str	r3, [sp, #32]
   13408:	ldr	r3, [sp, #64]	; 0x40
   1340c:	cmp	r3, #0
   13410:	bne	13b8c <strspn@plt+0x2ba8>
   13414:	ldr	r1, [sp, #52]	; 0x34
   13418:	b	13028 <strspn@plt+0x2044>
   1341c:	ldr	r3, [sp, #48]	; 0x30
   13420:	mov	r6, r3
   13424:	str	r3, [sp, #32]
   13428:	b	13408 <strspn@plt+0x2424>
   1342c:	ldr	r6, [sp, #48]	; 0x30
   13430:	mov	r4, #13
   13434:	mov	r3, #114	; 0x72
   13438:	b	1329c <strspn@plt+0x22b8>
   1343c:	ldr	r3, [sp, #44]	; 0x2c
   13440:	add	r5, r3, sl
   13444:	ldrb	r4, [r5]
   13448:	cmp	r4, #126	; 0x7e
   1344c:	ldrls	pc, [pc, r4, lsl #2]
   13450:	b	137ec <strspn@plt+0x2808>
   13454:			; <UNDEFINED> instruction: 0x000137bc
   13458:	andeq	r3, r1, ip, ror #15
   1345c:	andeq	r3, r1, ip, ror #15
   13460:	andeq	r3, r1, ip, ror #15
   13464:	andeq	r3, r1, ip, ror #15
   13468:	andeq	r3, r1, ip, ror #15
   1346c:	andeq	r3, r1, ip, ror #15
   13470:			; <UNDEFINED> instruction: 0x000137b4
   13474:	andeq	r3, r1, ip, lsr #15
   13478:	andeq	r3, r1, r0, lsr #15
   1347c:	muleq	r1, r8, r7
   13480:	muleq	r1, r0, r7
   13484:	andeq	r3, r1, r8, lsl #15
   13488:	andeq	r3, r1, r0, lsl #15
   1348c:	andeq	r3, r1, ip, ror #15
   13490:	andeq	r3, r1, ip, ror #15
   13494:	andeq	r3, r1, ip, ror #15
   13498:	andeq	r3, r1, ip, ror #15
   1349c:	andeq	r3, r1, ip, ror #15
   134a0:	andeq	r3, r1, ip, ror #15
   134a4:	andeq	r3, r1, ip, ror #15
   134a8:	andeq	r3, r1, ip, ror #15
   134ac:	andeq	r3, r1, ip, ror #15
   134b0:	andeq	r3, r1, ip, ror #15
   134b4:	andeq	r3, r1, ip, ror #15
   134b8:	andeq	r3, r1, ip, ror #15
   134bc:	andeq	r3, r1, ip, ror #15
   134c0:	andeq	r3, r1, ip, ror #15
   134c4:	andeq	r3, r1, ip, ror #15
   134c8:	andeq	r3, r1, ip, ror #15
   134cc:	andeq	r3, r1, ip, ror #15
   134d0:	andeq	r3, r1, ip, ror #15
   134d4:	andeq	r3, r1, r4, ror r7
   134d8:	andeq	r3, r1, ip, ror #14
   134dc:	andeq	r3, r1, ip, ror #14
   134e0:	andeq	r3, r1, r4, ror #14
   134e4:	andeq	r3, r1, ip, ror #14
   134e8:	andeq	r3, r1, ip, asr r7
   134ec:	andeq	r3, r1, ip, ror #14
   134f0:	ldrdeq	r3, [r1], -r0
   134f4:	andeq	r3, r1, ip, ror #14
   134f8:	andeq	r3, r1, ip, ror #14
   134fc:	andeq	r3, r1, ip, ror #14
   13500:	andeq	r3, r1, ip, asr r7
   13504:	andeq	r3, r1, ip, asr r7
   13508:	andeq	r3, r1, ip, asr r7
   1350c:	andeq	r3, r1, ip, asr r7
   13510:	andeq	r3, r1, ip, asr r7
   13514:	andeq	r3, r1, ip, asr r7
   13518:	andeq	r3, r1, ip, asr r7
   1351c:	andeq	r3, r1, ip, asr r7
   13520:	andeq	r3, r1, ip, asr r7
   13524:	andeq	r3, r1, ip, asr r7
   13528:	andeq	r3, r1, ip, asr r7
   1352c:	andeq	r3, r1, ip, asr r7
   13530:	andeq	r3, r1, ip, asr r7
   13534:	andeq	r3, r1, ip, asr r7
   13538:	andeq	r3, r1, ip, asr r7
   1353c:	andeq	r3, r1, ip, asr r7
   13540:	andeq	r3, r1, ip, ror #14
   13544:	andeq	r3, r1, ip, ror #14
   13548:	andeq	r3, r1, ip, ror #14
   1354c:	andeq	r3, r1, ip, ror #14
   13550:	andeq	r3, r1, r4, lsr #13
   13554:	andeq	r3, r1, ip, ror #15
   13558:	andeq	r3, r1, ip, asr r7
   1355c:	andeq	r3, r1, ip, asr r7
   13560:	andeq	r3, r1, ip, asr r7
   13564:	andeq	r3, r1, ip, asr r7
   13568:	andeq	r3, r1, ip, asr r7
   1356c:	andeq	r3, r1, ip, asr r7
   13570:	andeq	r3, r1, ip, asr r7
   13574:	andeq	r3, r1, ip, asr r7
   13578:	andeq	r3, r1, ip, asr r7
   1357c:	andeq	r3, r1, ip, asr r7
   13580:	andeq	r3, r1, ip, asr r7
   13584:	andeq	r3, r1, ip, asr r7
   13588:	andeq	r3, r1, ip, asr r7
   1358c:	andeq	r3, r1, ip, asr r7
   13590:	andeq	r3, r1, ip, asr r7
   13594:	andeq	r3, r1, ip, asr r7
   13598:	andeq	r3, r1, ip, asr r7
   1359c:	andeq	r3, r1, ip, asr r7
   135a0:	andeq	r3, r1, ip, asr r7
   135a4:	andeq	r3, r1, ip, asr r7
   135a8:	andeq	r3, r1, ip, asr r7
   135ac:	andeq	r3, r1, ip, asr r7
   135b0:	andeq	r3, r1, ip, asr r7
   135b4:	andeq	r3, r1, ip, asr r7
   135b8:	andeq	r3, r1, ip, asr r7
   135bc:	andeq	r3, r1, ip, asr r7
   135c0:	andeq	r3, r1, ip, ror #14
   135c4:	andeq	r3, r1, r4, ror r6
   135c8:	andeq	r3, r1, ip, asr r7
   135cc:	andeq	r3, r1, ip, ror #14
   135d0:	andeq	r3, r1, ip, asr r7
   135d4:	andeq	r3, r1, ip, ror #14
   135d8:	andeq	r3, r1, ip, asr r7
   135dc:	andeq	r3, r1, ip, asr r7
   135e0:	andeq	r3, r1, ip, asr r7
   135e4:	andeq	r3, r1, ip, asr r7
   135e8:	andeq	r3, r1, ip, asr r7
   135ec:	andeq	r3, r1, ip, asr r7
   135f0:	andeq	r3, r1, ip, asr r7
   135f4:	andeq	r3, r1, ip, asr r7
   135f8:	andeq	r3, r1, ip, asr r7
   135fc:	andeq	r3, r1, ip, asr r7
   13600:	andeq	r3, r1, ip, asr r7
   13604:	andeq	r3, r1, ip, asr r7
   13608:	andeq	r3, r1, ip, asr r7
   1360c:	andeq	r3, r1, ip, asr r7
   13610:	andeq	r3, r1, ip, asr r7
   13614:	andeq	r3, r1, ip, asr r7
   13618:	andeq	r3, r1, ip, asr r7
   1361c:	andeq	r3, r1, ip, asr r7
   13620:	andeq	r3, r1, ip, asr r7
   13624:	andeq	r3, r1, ip, asr r7
   13628:	andeq	r3, r1, ip, asr r7
   1362c:	andeq	r3, r1, ip, asr r7
   13630:	andeq	r3, r1, ip, asr r7
   13634:	andeq	r3, r1, ip, asr r7
   13638:	andeq	r3, r1, ip, asr r7
   1363c:	andeq	r3, r1, ip, asr r7
   13640:	andeq	r3, r1, r0, asr r6
   13644:	andeq	r3, r1, ip, ror #14
   13648:	andeq	r3, r1, r0, asr r6
   1364c:	andeq	r3, r1, r4, ror #14
   13650:	ldr	r3, [sp, #24]
   13654:	mov	r6, #0
   13658:	cmn	r3, #1
   1365c:	bne	13008 <strspn@plt+0x2024>
   13660:	ldr	r3, [sp, #44]	; 0x2c
   13664:	ldrb	r3, [r3, #1]
   13668:	adds	r3, r3, #0
   1366c:	movne	r3, #1
   13670:	b	13010 <strspn@plt+0x202c>
   13674:	ldr	r3, [sp, #176]	; 0xb0
   13678:	mov	r6, #0
   1367c:	cmp	r3, #2
   13680:	bne	13150 <strspn@plt+0x216c>
   13684:	ldr	r3, [sp, #64]	; 0x40
   13688:	cmp	r3, #0
   1368c:	bne	13ec4 <strspn@plt+0x2ee0>
   13690:	add	sl, sl, #1
   13694:	ldr	r6, [sp, #36]	; 0x24
   13698:	str	r3, [sp, #32]
   1369c:	mov	r4, #92	; 0x5c
   136a0:	b	1305c <strspn@plt+0x2078>
   136a4:	ldr	r3, [sp, #176]	; 0xb0
   136a8:	mov	r6, #0
   136ac:	cmp	r3, #2
   136b0:	bne	13184 <strspn@plt+0x21a0>
   136b4:	ldr	r3, [sp, #40]	; 0x28
   136b8:	cmp	r3, #0
   136bc:	bne	139a0 <strspn@plt+0x29bc>
   136c0:	mov	r1, r7
   136c4:	str	r3, [sp, #32]
   136c8:	mov	r4, #63	; 0x3f
   136cc:	b	13028 <strspn@plt+0x2044>
   136d0:	ldr	r3, [sp, #176]	; 0xb0
   136d4:	mov	r6, #0
   136d8:	cmp	r3, #2
   136dc:	bne	131d4 <strspn@plt+0x21f0>
   136e0:	ldr	r3, [sp, #64]	; 0x40
   136e4:	cmp	r3, #0
   136e8:	bne	13ec4 <strspn@plt+0x2ee0>
   136ec:	ldr	r2, [sp, #84]	; 0x54
   136f0:	adds	r3, fp, #0
   136f4:	movne	r3, #1
   136f8:	cmp	r2, #0
   136fc:	movne	r3, #0
   13700:	cmp	r3, #0
   13704:	strne	fp, [sp, #84]	; 0x54
   13708:	movne	fp, #0
   1370c:	bne	1373c <strspn@plt+0x2758>
   13710:	cmp	fp, r8
   13714:	movhi	r3, #39	; 0x27
   13718:	strbhi	r3, [r9, r8]
   1371c:	add	r3, r8, #1
   13720:	cmp	fp, r3
   13724:	movhi	r2, #92	; 0x5c
   13728:	strbhi	r2, [r9, r3]
   1372c:	add	r3, r8, #2
   13730:	cmp	fp, r3
   13734:	movhi	r2, #39	; 0x27
   13738:	strbhi	r2, [r9, r3]
   1373c:	ldr	r3, [sp, #64]	; 0x40
   13740:	add	r8, r8, #3
   13744:	mov	r1, r7
   13748:	str	r7, [sp, #32]
   1374c:	str	r7, [sp, #76]	; 0x4c
   13750:	str	r3, [sp, #36]	; 0x24
   13754:	mov	r4, #39	; 0x27
   13758:	b	13028 <strspn@plt+0x2044>
   1375c:	mov	r6, #0
   13760:	b	131ec <strspn@plt+0x2208>
   13764:	mov	r6, #0
   13768:	b	133e0 <strspn@plt+0x23fc>
   1376c:	mov	r6, #0
   13770:	b	13400 <strspn@plt+0x241c>
   13774:	str	r7, [sp, #32]
   13778:	mov	r6, #0
   1377c:	b	13408 <strspn@plt+0x2424>
   13780:	mov	r6, #0
   13784:	b	13430 <strspn@plt+0x244c>
   13788:	mov	r6, #0
   1378c:	b	131fc <strspn@plt+0x2218>
   13790:	mov	r6, #0
   13794:	b	132c4 <strspn@plt+0x22e0>
   13798:	mov	r6, #0
   1379c:	b	13294 <strspn@plt+0x22b0>
   137a0:	mov	r6, #0
   137a4:	mov	r3, #116	; 0x74
   137a8:	b	1329c <strspn@plt+0x22b8>
   137ac:	mov	r6, #0
   137b0:	b	132d8 <strspn@plt+0x22f4>
   137b4:	mov	r6, #0
   137b8:	b	132ec <strspn@plt+0x2308>
   137bc:	ldr	r3, [sp, #56]	; 0x38
   137c0:	mov	r6, #0
   137c4:	cmp	r3, #0
   137c8:	bne	1330c <strspn@plt+0x2328>
   137cc:	ldr	r3, [sp, #96]	; 0x60
   137d0:	cmp	r3, #0
   137d4:	addne	sl, sl, #1
   137d8:	bne	12b80 <strspn@plt+0x1b9c>
   137dc:	ldr	r1, [sp, #52]	; 0x34
   137e0:	str	r3, [sp, #32]
   137e4:	mov	r4, r3
   137e8:	b	13028 <strspn@plt+0x2044>
   137ec:	mov	r6, #0
   137f0:	ldr	r3, [sp, #80]	; 0x50
   137f4:	cmp	r3, #1
   137f8:	bne	139e8 <strspn@plt+0x2a04>
   137fc:	bl	10ee8 <__ctype_b_loc@plt>
   13800:	ldr	r2, [sp, #80]	; 0x50
   13804:	sxth	r3, r4
   13808:	mov	r1, r2
   1380c:	lsl	r3, r3, #1
   13810:	ldr	r2, [r0]
   13814:	ldrh	r3, [r2, r3]
   13818:	and	r3, r3, #16384	; 0x4000
   1381c:	cmp	r3, #0
   13820:	movne	r3, #1
   13824:	moveq	r3, #0
   13828:	str	r3, [sp, #32]
   1382c:	moveq	r3, #1
   13830:	movne	r3, #0
   13834:	ldr	r2, [sp, #56]	; 0x38
   13838:	and	r3, r3, r2
   1383c:	ands	r3, r3, #255	; 0xff
   13840:	beq	13414 <strspn@plt+0x2430>
   13844:	add	r1, sl, r1
   13848:	mov	r0, #0
   1384c:	ldr	r7, [sp, #40]	; 0x28
   13850:	ldr	r2, [sp, #36]	; 0x24
   13854:	ldr	lr, [sp, #52]	; 0x34
   13858:	b	13908 <strspn@plt+0x2924>
   1385c:	cmp	r7, #0
   13860:	bne	13c5c <strspn@plt+0x2c78>
   13864:	eor	r0, r2, #1
   13868:	ands	r0, lr, r0
   1386c:	beq	138a4 <strspn@plt+0x28c0>
   13870:	cmp	fp, r8
   13874:	movhi	r2, #39	; 0x27
   13878:	strbhi	r2, [r9, r8]
   1387c:	add	r2, r8, #1
   13880:	cmp	fp, r2
   13884:	movhi	ip, #36	; 0x24
   13888:	strbhi	ip, [r9, r2]
   1388c:	add	r2, r8, #2
   13890:	cmp	fp, r2
   13894:	movhi	ip, #39	; 0x27
   13898:	strbhi	ip, [r9, r2]
   1389c:	add	r8, r8, #3
   138a0:	mov	r2, r0
   138a4:	cmp	fp, r8
   138a8:	movhi	r0, #92	; 0x5c
   138ac:	strbhi	r0, [r9, r8]
   138b0:	add	r0, r8, #1
   138b4:	cmp	fp, r0
   138b8:	lsrhi	ip, r4, #6
   138bc:	addhi	ip, ip, #48	; 0x30
   138c0:	strbhi	ip, [r9, r0]
   138c4:	add	ip, r8, #2
   138c8:	cmp	fp, ip
   138cc:	lsrhi	r0, r4, #3
   138d0:	andhi	r0, r0, #7
   138d4:	addhi	r0, r0, #48	; 0x30
   138d8:	add	sl, sl, #1
   138dc:	strbhi	r0, [r9, ip]
   138e0:	and	r4, r4, #7
   138e4:	cmp	sl, r1
   138e8:	add	r4, r4, #48	; 0x30
   138ec:	add	r8, r8, #3
   138f0:	bcs	13c74 <strspn@plt+0x2c90>
   138f4:	mov	r0, r3
   138f8:	cmp	fp, r8
   138fc:	strbhi	r4, [r9, r8]
   13900:	ldrb	r4, [r5, #1]!
   13904:	add	r8, r8, #1
   13908:	cmp	r3, #0
   1390c:	bne	1385c <strspn@plt+0x2878>
   13910:	cmp	r6, #0
   13914:	bne	139b8 <strspn@plt+0x29d4>
   13918:	eor	r6, r0, #1
   1391c:	and	r6, r6, r2
   13920:	add	sl, sl, #1
   13924:	cmp	r1, sl
   13928:	uxtb	r6, r6
   1392c:	bls	139e0 <strspn@plt+0x29fc>
   13930:	cmp	r6, #0
   13934:	beq	138f8 <strspn@plt+0x2914>
   13938:	cmp	fp, r8
   1393c:	movhi	r2, #39	; 0x27
   13940:	strbhi	r2, [r9, r8]
   13944:	add	r2, r8, #1
   13948:	cmp	fp, r2
   1394c:	movhi	ip, #39	; 0x27
   13950:	strbhi	ip, [r9, r2]
   13954:	add	r8, r8, #2
   13958:	mov	r6, r3
   1395c:	mov	r2, r3
   13960:	b	138f8 <strspn@plt+0x2914>
   13964:	ldr	r3, [sp, #184]	; 0xb8
   13968:	cmp	r3, #0
   1396c:	beq	13044 <strspn@plt+0x2060>
   13970:	lsr	r2, r4, #5
   13974:	mov	r0, r3
   13978:	uxtb	r2, r2
   1397c:	and	r3, r4, #31
   13980:	ldr	r2, [r0, r2, lsl #2]
   13984:	lsr	r3, r2, r3
   13988:	tst	r3, #1
   1398c:	beq	13044 <strspn@plt+0x2060>
   13990:	ldr	r3, [sp, #40]	; 0x28
   13994:	cmp	r3, #0
   13998:	beq	13230 <strspn@plt+0x224c>
   1399c:	mov	r3, r1
   139a0:	str	r3, [sp, #64]	; 0x40
   139a4:	mov	sl, r9
   139a8:	ldr	r3, [sp, #56]	; 0x38
   139ac:	mov	r9, fp
   139b0:	ldr	r2, [sp, #64]	; 0x40
   139b4:	b	13ba4 <strspn@plt+0x2bc0>
   139b8:	cmp	fp, r8
   139bc:	eor	r6, r0, #1
   139c0:	movhi	ip, #92	; 0x5c
   139c4:	and	r6, r6, r2
   139c8:	add	sl, sl, #1
   139cc:	strbhi	ip, [r9, r8]
   139d0:	cmp	r1, sl
   139d4:	add	r8, r8, #1
   139d8:	uxtb	r6, r6
   139dc:	bhi	13930 <strspn@plt+0x294c>
   139e0:	str	r2, [sp, #36]	; 0x24
   139e4:	b	1305c <strspn@plt+0x2078>
   139e8:	ldr	r3, [sp, #24]
   139ec:	cmn	r3, #1
   139f0:	mov	r3, #0
   139f4:	str	r3, [sp, #128]	; 0x80
   139f8:	str	r3, [sp, #132]	; 0x84
   139fc:	beq	13cf0 <strspn@plt+0x2d0c>
   13a00:	mov	r2, r7
   13a04:	mov	r3, #0
   13a08:	str	r7, [sp, #104]	; 0x68
   13a0c:	str	r5, [sp, #116]	; 0x74
   13a10:	mov	r7, r3
   13a14:	mov	r5, r2
   13a18:	str	r4, [sp, #32]
   13a1c:	str	r6, [sp, #108]	; 0x6c
   13a20:	str	r8, [sp, #112]	; 0x70
   13a24:	ldr	r3, [sp, #44]	; 0x2c
   13a28:	add	r6, sl, r7
   13a2c:	add	r4, r3, r6
   13a30:	ldr	r3, [sp, #24]
   13a34:	mov	r1, r4
   13a38:	sub	r2, r3, r6
   13a3c:	add	r0, sp, #124	; 0x7c
   13a40:	add	r3, sp, #128	; 0x80
   13a44:	bl	17e1c <strspn@plt+0x6e38>
   13a48:	subs	r8, r0, #0
   13a4c:	beq	13dd4 <strspn@plt+0x2df0>
   13a50:	cmn	r8, #1
   13a54:	beq	13dac <strspn@plt+0x2dc8>
   13a58:	cmn	r8, #2
   13a5c:	beq	13d44 <strspn@plt+0x2d60>
   13a60:	ldr	r3, [sp, #64]	; 0x40
   13a64:	cmp	r3, #0
   13a68:	beq	13b28 <strspn@plt+0x2b44>
   13a6c:	cmp	r8, #1
   13a70:	beq	13b28 <strspn@plt+0x2b44>
   13a74:	sub	r3, r8, #1
   13a78:	add	r6, r3, r6
   13a7c:	ldr	r3, [sp, #44]	; 0x2c
   13a80:	add	r6, r3, r6
   13a84:	ldrb	r3, [r4, #1]!
   13a88:	sub	r3, r3, #91	; 0x5b
   13a8c:	cmp	r3, #33	; 0x21
   13a90:	ldrls	pc, [pc, r3, lsl #2]
   13a94:	b	13b20 <strspn@plt+0x2b3c>
   13a98:	andeq	r3, r1, ip, lsl #23
   13a9c:	andeq	r3, r1, ip, lsl #23
   13aa0:	andeq	r3, r1, r0, lsr #22
   13aa4:	andeq	r3, r1, ip, lsl #23
   13aa8:	andeq	r3, r1, r0, lsr #22
   13aac:	andeq	r3, r1, ip, lsl #23
   13ab0:	andeq	r3, r1, r0, lsr #22
   13ab4:	andeq	r3, r1, r0, lsr #22
   13ab8:	andeq	r3, r1, r0, lsr #22
   13abc:	andeq	r3, r1, r0, lsr #22
   13ac0:	andeq	r3, r1, r0, lsr #22
   13ac4:	andeq	r3, r1, r0, lsr #22
   13ac8:	andeq	r3, r1, r0, lsr #22
   13acc:	andeq	r3, r1, r0, lsr #22
   13ad0:	andeq	r3, r1, r0, lsr #22
   13ad4:	andeq	r3, r1, r0, lsr #22
   13ad8:	andeq	r3, r1, r0, lsr #22
   13adc:	andeq	r3, r1, r0, lsr #22
   13ae0:	andeq	r3, r1, r0, lsr #22
   13ae4:	andeq	r3, r1, r0, lsr #22
   13ae8:	andeq	r3, r1, r0, lsr #22
   13aec:	andeq	r3, r1, r0, lsr #22
   13af0:	andeq	r3, r1, r0, lsr #22
   13af4:	andeq	r3, r1, r0, lsr #22
   13af8:	andeq	r3, r1, r0, lsr #22
   13afc:	andeq	r3, r1, r0, lsr #22
   13b00:	andeq	r3, r1, r0, lsr #22
   13b04:	andeq	r3, r1, r0, lsr #22
   13b08:	andeq	r3, r1, r0, lsr #22
   13b0c:	andeq	r3, r1, r0, lsr #22
   13b10:	andeq	r3, r1, r0, lsr #22
   13b14:	andeq	r3, r1, r0, lsr #22
   13b18:	andeq	r3, r1, r0, lsr #22
   13b1c:	andeq	r3, r1, ip, lsl #23
   13b20:	cmp	r6, r4
   13b24:	bne	13a84 <strspn@plt+0x2aa0>
   13b28:	ldr	r0, [sp, #124]	; 0x7c
   13b2c:	bl	10e34 <iswprint@plt>
   13b30:	add	r7, r7, r8
   13b34:	cmp	r0, #0
   13b38:	add	r0, sp, #128	; 0x80
   13b3c:	moveq	r5, #0
   13b40:	bl	10dd4 <mbsinit@plt>
   13b44:	cmp	r0, #0
   13b48:	beq	13a24 <strspn@plt+0x2a40>
   13b4c:	ldr	r4, [sp, #32]
   13b50:	str	r5, [sp, #32]
   13b54:	ldr	r3, [sp, #32]
   13b58:	mov	r1, r7
   13b5c:	eor	r3, r3, #1
   13b60:	ldr	r7, [sp, #104]	; 0x68
   13b64:	ldr	r6, [sp, #108]	; 0x6c
   13b68:	ldr	r8, [sp, #112]	; 0x70
   13b6c:	ldr	r5, [sp, #116]	; 0x74
   13b70:	uxtb	r3, r3
   13b74:	cmp	r1, #1
   13b78:	bls	13834 <strspn@plt+0x2850>
   13b7c:	ldr	r2, [sp, #56]	; 0x38
   13b80:	and	r3, r3, r2
   13b84:	uxtb	r3, r3
   13b88:	b	13844 <strspn@plt+0x2860>
   13b8c:	mov	r3, #2
   13b90:	str	r3, [sp, #176]	; 0xb0
   13b94:	ldr	r2, [sp, #64]	; 0x40
   13b98:	ldr	r3, [sp, #56]	; 0x38
   13b9c:	mov	sl, r9
   13ba0:	mov	r9, fp
   13ba4:	and	r3, r3, r2
   13ba8:	tst	r3, #255	; 0xff
   13bac:	ldr	r3, [sp, #176]	; 0xb0
   13bb0:	movne	r3, #4
   13bb4:	str	r3, [sp, #176]	; 0xb0
   13bb8:	ldr	r3, [sp, #180]	; 0xb4
   13bbc:	mov	ip, #0
   13bc0:	bic	r3, r3, #2
   13bc4:	str	r3, [sp, #4]
   13bc8:	ldr	r3, [sp, #192]	; 0xc0
   13bcc:	ldr	r2, [sp, #44]	; 0x2c
   13bd0:	str	r3, [sp, #16]
   13bd4:	ldr	r3, [sp, #188]	; 0xbc
   13bd8:	mov	r1, r9
   13bdc:	str	r3, [sp, #12]
   13be0:	ldr	r3, [sp, #176]	; 0xb0
   13be4:	mov	r0, sl
   13be8:	str	r3, [sp]
   13bec:	str	ip, [sp, #8]
   13bf0:	ldr	r3, [sp, #24]
   13bf4:	bl	12a54 <strspn@plt+0x1a70>
   13bf8:	mov	fp, r0
   13bfc:	mov	r0, fp
   13c00:	add	sp, sp, #140	; 0x8c
   13c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c08:	mov	r4, #92	; 0x5c
   13c0c:	mov	r1, #0
   13c10:	mov	r3, r4
   13c14:	b	13208 <strspn@plt+0x2224>
   13c18:	mov	r3, #0
   13c1c:	ldr	r1, [sp, #52]	; 0x34
   13c20:	str	r3, [sp, #32]
   13c24:	mov	r4, #63	; 0x3f
   13c28:	b	13028 <strspn@plt+0x2044>
   13c2c:	cmp	fp, #0
   13c30:	beq	13c8c <strspn@plt+0x2ca8>
   13c34:	mov	r3, #39	; 0x27
   13c38:	strb	r3, [r9]
   13c3c:	mov	r3, #0
   13c40:	str	r3, [sp, #40]	; 0x28
   13c44:	mov	r3, #1
   13c48:	str	r3, [sp, #68]	; 0x44
   13c4c:	ldr	r3, [pc, #448]	; 13e14 <strspn@plt+0x2e30>
   13c50:	mov	r8, #1
   13c54:	str	r3, [sp, #72]	; 0x48
   13c58:	b	12e3c <strspn@plt+0x1e58>
   13c5c:	ldr	r3, [sp, #40]	; 0x28
   13c60:	mov	sl, r9
   13c64:	str	r3, [sp, #56]	; 0x38
   13c68:	mov	r9, fp
   13c6c:	ldr	r2, [sp, #64]	; 0x40
   13c70:	b	13ba4 <strspn@plt+0x2bc0>
   13c74:	str	r2, [sp, #36]	; 0x24
   13c78:	b	1308c <strspn@plt+0x20a8>
   13c7c:	mov	r1, #0
   13c80:	str	r3, [sp, #32]
   13c84:	mov	r4, #63	; 0x3f
   13c88:	b	13028 <strspn@plt+0x2044>
   13c8c:	ldr	r3, [pc, #384]	; 13e14 <strspn@plt+0x2e30>
   13c90:	str	r3, [sp, #72]	; 0x48
   13c94:	mov	r3, #0
   13c98:	str	r3, [sp, #40]	; 0x28
   13c9c:	mov	r3, #1
   13ca0:	str	r3, [sp, #68]	; 0x44
   13ca4:	mov	r8, r3
   13ca8:	b	12e3c <strspn@plt+0x1e58>
   13cac:	bl	10fd8 <abort@plt>
   13cb0:	cmp	fp, #0
   13cb4:	beq	13d14 <strspn@plt+0x2d30>
   13cb8:	mov	r2, #1
   13cbc:	mov	r3, #34	; 0x22
   13cc0:	strb	r3, [r9]
   13cc4:	mov	r8, r2
   13cc8:	mov	r3, r2
   13ccc:	str	r2, [sp, #68]	; 0x44
   13cd0:	str	r3, [sp, #56]	; 0x38
   13cd4:	ldr	r3, [pc, #316]	; 13e18 <strspn@plt+0x2e34>
   13cd8:	ldr	r1, [sp, #56]	; 0x38
   13cdc:	str	r3, [sp, #72]	; 0x48
   13ce0:	ldr	r2, [sp, #176]	; 0xb0
   13ce4:	ldr	ip, [sp, #40]	; 0x28
   13ce8:	ldr	lr, [sp, #176]	; 0xb0
   13cec:	b	12b20 <strspn@plt+0x1b3c>
   13cf0:	ldr	r0, [sp, #44]	; 0x2c
   13cf4:	bl	10f00 <strlen@plt>
   13cf8:	str	r0, [sp, #24]
   13cfc:	b	13a00 <strspn@plt+0x2a1c>
   13d00:	mov	r7, #0
   13d04:	ldr	r1, [sp, #52]	; 0x34
   13d08:	str	r3, [sp, #32]
   13d0c:	mov	r4, #48	; 0x30
   13d10:	b	13028 <strspn@plt+0x2044>
   13d14:	mov	r3, #1
   13d18:	str	r3, [sp, #68]	; 0x44
   13d1c:	mov	r8, r3
   13d20:	b	13cd0 <strspn@plt+0x2cec>
   13d24:	mov	r3, #2
   13d28:	mov	sl, r9
   13d2c:	str	r3, [sp, #176]	; 0xb0
   13d30:	mov	r9, fp
   13d34:	ldr	r3, [sp, #56]	; 0x38
   13d38:	b	13ba4 <strspn@plt+0x2bc0>
   13d3c:	ldr	r6, [sp, #48]	; 0x30
   13d40:	b	137f0 <strspn@plt+0x280c>
   13d44:	ldr	r0, [sp, #24]
   13d48:	mov	ip, r6
   13d4c:	cmp	r0, ip
   13d50:	mov	r1, r7
   13d54:	mov	r2, r4
   13d58:	ldr	r7, [sp, #104]	; 0x68
   13d5c:	ldr	r4, [sp, #32]
   13d60:	ldr	r6, [sp, #108]	; 0x6c
   13d64:	ldr	r8, [sp, #112]	; 0x70
   13d68:	ldr	r5, [sp, #116]	; 0x74
   13d6c:	bls	13d9c <strspn@plt+0x2db8>
   13d70:	ldrb	r3, [r2]
   13d74:	cmp	r3, #0
   13d78:	bne	13d8c <strspn@plt+0x2da8>
   13d7c:	b	13eac <strspn@plt+0x2ec8>
   13d80:	ldrb	r3, [r2, #1]!
   13d84:	cmp	r3, #0
   13d88:	beq	13eac <strspn@plt+0x2ec8>
   13d8c:	add	r1, r1, #1
   13d90:	add	r3, sl, r1
   13d94:	cmp	r0, r3
   13d98:	bhi	13d80 <strspn@plt+0x2d9c>
   13d9c:	mov	r2, #0
   13da0:	mov	r3, r7
   13da4:	str	r2, [sp, #32]
   13da8:	b	13b74 <strspn@plt+0x2b90>
   13dac:	mov	r1, r7
   13db0:	ldr	r7, [sp, #104]	; 0x68
   13db4:	mov	r2, #0
   13db8:	ldr	r4, [sp, #32]
   13dbc:	ldr	r6, [sp, #108]	; 0x6c
   13dc0:	ldr	r8, [sp, #112]	; 0x70
   13dc4:	ldr	r5, [sp, #116]	; 0x74
   13dc8:	mov	r3, r7
   13dcc:	str	r2, [sp, #32]
   13dd0:	b	13b74 <strspn@plt+0x2b90>
   13dd4:	mov	r3, r5
   13dd8:	eor	r3, r3, #1
   13ddc:	ldr	r4, [sp, #32]
   13de0:	mov	r1, r7
   13de4:	str	r5, [sp, #32]
   13de8:	ldr	r7, [sp, #104]	; 0x68
   13dec:	ldr	r6, [sp, #108]	; 0x6c
   13df0:	ldr	r8, [sp, #112]	; 0x70
   13df4:	ldr	r5, [sp, #116]	; 0x74
   13df8:	uxtb	r3, r3
   13dfc:	b	13b74 <strspn@plt+0x2b90>
   13e00:	mov	sl, r9
   13e04:	str	r3, [sp, #56]	; 0x38
   13e08:	mov	r9, fp
   13e0c:	ldr	r2, [sp, #64]	; 0x40
   13e10:	b	13ba4 <strspn@plt+0x2bc0>
   13e14:	andeq	r8, r1, r0, lsl #30
   13e18:	strdeq	r8, [r1], -ip
   13e1c:	andeq	r8, r1, r4, lsl #30
   13e20:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13e24:	ldr	r2, [sp, #44]	; 0x2c
   13e28:	ldrb	r1, [r2, r3]
   13e2c:	sub	r2, r1, #33	; 0x21
   13e30:	uxtb	r2, r2
   13e34:	cmp	r2, #29
   13e38:	bhi	13eb8 <strspn@plt+0x2ed4>
   13e3c:	ldr	r0, [pc, #-36]	; 13e20 <strspn@plt+0x2e3c>
   13e40:	mov	ip, #1
   13e44:	ands	r2, r0, ip, lsl r2
   13e48:	beq	13ed8 <strspn@plt+0x2ef4>
   13e4c:	ldr	r2, [sp, #40]	; 0x28
   13e50:	cmp	r2, #0
   13e54:	bne	13fcc <strspn@plt+0x2fe8>
   13e58:	add	r2, r8, #1
   13e5c:	cmp	fp, r8
   13e60:	strbhi	r4, [r9, r8]
   13e64:	cmp	fp, r2
   13e68:	movhi	r0, #34	; 0x22
   13e6c:	strbhi	r0, [r9, r2]
   13e70:	add	r2, r8, #2
   13e74:	cmp	fp, r2
   13e78:	movhi	r0, #34	; 0x22
   13e7c:	strbhi	r0, [r9, r2]
   13e80:	add	r2, r8, #3
   13e84:	cmp	fp, r2
   13e88:	mov	sl, r3
   13e8c:	ldr	r3, [sp, #40]	; 0x28
   13e90:	movhi	r0, #63	; 0x3f
   13e94:	mov	r4, r1
   13e98:	strbhi	r0, [r9, r2]
   13e9c:	add	r8, r8, #4
   13ea0:	mov	r1, r3
   13ea4:	str	r3, [sp, #32]
   13ea8:	b	13028 <strspn@plt+0x2044>
   13eac:	str	r3, [sp, #32]
   13eb0:	mov	r3, r7
   13eb4:	b	13b74 <strspn@plt+0x2b90>
   13eb8:	mov	r1, #0
   13ebc:	str	r1, [sp, #32]
   13ec0:	b	13028 <strspn@plt+0x2044>
   13ec4:	mov	sl, r9
   13ec8:	ldr	r3, [sp, #56]	; 0x38
   13ecc:	mov	r9, fp
   13ed0:	ldr	r2, [sp, #64]	; 0x40
   13ed4:	b	13ba4 <strspn@plt+0x2bc0>
   13ed8:	str	r2, [sp, #32]
   13edc:	mov	r1, #0
   13ee0:	b	13028 <strspn@plt+0x2044>
   13ee4:	ldr	r2, [sp, #76]	; 0x4c
   13ee8:	mov	sl, r9
   13eec:	mov	r9, fp
   13ef0:	mov	fp, r8
   13ef4:	ldr	r1, [sp, #72]	; 0x48
   13ef8:	cmp	r1, #0
   13efc:	moveq	r3, #0
   13f00:	andne	r3, r2, #1
   13f04:	cmp	r3, #0
   13f08:	beq	13f34 <strspn@plt+0x2f50>
   13f0c:	ldrb	r3, [r1]
   13f10:	cmp	r3, #0
   13f14:	beq	13f34 <strspn@plt+0x2f50>
   13f18:	mov	r2, r1
   13f1c:	cmp	r9, fp
   13f20:	strbhi	r3, [sl, fp]
   13f24:	ldrb	r3, [r2, #1]!
   13f28:	add	fp, fp, #1
   13f2c:	cmp	r3, #0
   13f30:	bne	13f1c <strspn@plt+0x2f38>
   13f34:	cmp	r9, fp
   13f38:	movhi	r3, #0
   13f3c:	strbhi	r3, [sl, fp]
   13f40:	b	13bfc <strspn@plt+0x2c18>
   13f44:	ldr	r3, [sp, #192]	; 0xc0
   13f48:	mov	ip, #5
   13f4c:	str	r3, [sp, #16]
   13f50:	ldr	r3, [sp, #188]	; 0xbc
   13f54:	ldr	r2, [sp, #44]	; 0x2c
   13f58:	str	r3, [sp, #12]
   13f5c:	ldr	r3, [sp, #184]	; 0xb8
   13f60:	ldr	r1, [sp, #84]	; 0x54
   13f64:	str	r3, [sp, #8]
   13f68:	ldr	r3, [sp, #180]	; 0xb4
   13f6c:	mov	r0, r9
   13f70:	str	r3, [sp, #4]
   13f74:	str	ip, [sp]
   13f78:	ldr	r3, [sp, #24]
   13f7c:	bl	12a54 <strspn@plt+0x1a70>
   13f80:	mov	fp, r0
   13f84:	b	13bfc <strspn@plt+0x2c18>
   13f88:	mov	sl, r9
   13f8c:	mov	r9, fp
   13f90:	mov	fp, r8
   13f94:	b	13ef4 <strspn@plt+0x2f10>
   13f98:	ldr	r1, [sp, #176]	; 0xb0
   13f9c:	bl	12934 <strspn@plt+0x1950>
   13fa0:	str	r0, [sp, #192]	; 0xc0
   13fa4:	b	12f10 <strspn@plt+0x1f2c>
   13fa8:	ldr	r1, [sp, #176]	; 0xb0
   13fac:	bl	12934 <strspn@plt+0x1950>
   13fb0:	str	r0, [sp, #188]	; 0xbc
   13fb4:	b	12ef0 <strspn@plt+0x1f0c>
   13fb8:	mov	sl, r9
   13fbc:	mov	r2, r3
   13fc0:	mov	r9, fp
   13fc4:	mov	fp, r8
   13fc8:	b	13ef4 <strspn@plt+0x2f10>
   13fcc:	mov	sl, r9
   13fd0:	mov	r9, fp
   13fd4:	b	13bb8 <strspn@plt+0x2bd4>
   13fd8:	push	{r4, r5, r6, lr}
   13fdc:	mov	r5, r0
   13fe0:	bl	10f18 <__errno_location@plt>
   13fe4:	cmp	r5, #0
   13fe8:	mov	r1, #48	; 0x30
   13fec:	mov	r4, r0
   13ff0:	ldr	r0, [pc, #16]	; 14008 <strspn@plt+0x3024>
   13ff4:	ldr	r6, [r4]
   13ff8:	movne	r0, r5
   13ffc:	bl	17874 <strspn@plt+0x6890>
   14000:	str	r6, [r4]
   14004:	pop	{r4, r5, r6, pc}
   14008:	muleq	r2, r8, r1
   1400c:	ldr	r3, [pc, #12]	; 14020 <strspn@plt+0x303c>
   14010:	cmp	r0, #0
   14014:	moveq	r0, r3
   14018:	ldr	r0, [r0]
   1401c:	bx	lr
   14020:	muleq	r2, r8, r1
   14024:	ldr	r3, [pc, #12]	; 14038 <strspn@plt+0x3054>
   14028:	cmp	r0, #0
   1402c:	moveq	r0, r3
   14030:	str	r1, [r0]
   14034:	bx	lr
   14038:	muleq	r2, r8, r1
   1403c:	ldr	r3, [pc, #52]	; 14078 <strspn@plt+0x3094>
   14040:	cmp	r0, #0
   14044:	moveq	r0, r3
   14048:	add	r3, r0, #8
   1404c:	push	{lr}		; (str lr, [sp, #-4]!)
   14050:	lsr	lr, r1, #5
   14054:	and	r1, r1, #31
   14058:	ldr	ip, [r3, lr, lsl #2]
   1405c:	lsr	r0, ip, r1
   14060:	eor	r2, r2, r0
   14064:	and	r2, r2, #1
   14068:	and	r0, r0, #1
   1406c:	eor	r1, ip, r2, lsl r1
   14070:	str	r1, [r3, lr, lsl #2]
   14074:	pop	{pc}		; (ldr pc, [sp], #4)
   14078:	muleq	r2, r8, r1
   1407c:	ldr	r3, [pc, #16]	; 14094 <strspn@plt+0x30b0>
   14080:	cmp	r0, #0
   14084:	movne	r3, r0
   14088:	ldr	r0, [r3, #4]
   1408c:	str	r1, [r3, #4]
   14090:	bx	lr
   14094:	muleq	r2, r8, r1
   14098:	ldr	r3, [pc, #44]	; 140cc <strspn@plt+0x30e8>
   1409c:	cmp	r0, #0
   140a0:	moveq	r0, r3
   140a4:	mov	ip, #10
   140a8:	cmp	r2, #0
   140ac:	cmpne	r1, #0
   140b0:	str	ip, [r0]
   140b4:	beq	140c4 <strspn@plt+0x30e0>
   140b8:	str	r1, [r0, #40]	; 0x28
   140bc:	str	r2, [r0, #44]	; 0x2c
   140c0:	bx	lr
   140c4:	push	{r4, lr}
   140c8:	bl	10fd8 <abort@plt>
   140cc:	muleq	r2, r8, r1
   140d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140d4:	sub	sp, sp, #24
   140d8:	ldr	ip, [pc, #108]	; 1414c <strspn@plt+0x3168>
   140dc:	ldr	r4, [sp, #56]	; 0x38
   140e0:	mov	r9, r2
   140e4:	cmp	r4, #0
   140e8:	moveq	r4, ip
   140ec:	mov	sl, r3
   140f0:	mov	r7, r0
   140f4:	mov	r8, r1
   140f8:	bl	10f18 <__errno_location@plt>
   140fc:	ldr	r3, [r4, #44]	; 0x2c
   14100:	mov	r1, r8
   14104:	ldr	r6, [r0]
   14108:	str	r3, [sp, #16]
   1410c:	ldr	r2, [r4, #40]	; 0x28
   14110:	add	r3, r4, #8
   14114:	str	r3, [sp, #8]
   14118:	str	r2, [sp, #12]
   1411c:	ldr	r2, [r4, #4]
   14120:	mov	r5, r0
   14124:	str	r2, [sp, #4]
   14128:	ldr	ip, [r4]
   1412c:	mov	r3, sl
   14130:	mov	r2, r9
   14134:	mov	r0, r7
   14138:	str	ip, [sp]
   1413c:	bl	12a54 <strspn@plt+0x1a70>
   14140:	str	r6, [r5]
   14144:	add	sp, sp, #24
   14148:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1414c:	muleq	r2, r8, r1
   14150:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14154:	cmp	r2, #0
   14158:	sub	sp, sp, #36	; 0x24
   1415c:	ldr	r4, [pc, #164]	; 14208 <strspn@plt+0x3224>
   14160:	mov	r8, r1
   14164:	movne	r4, r2
   14168:	mov	r7, r0
   1416c:	bl	10f18 <__errno_location@plt>
   14170:	ldr	r3, [r4, #44]	; 0x2c
   14174:	ldr	r5, [r4, #4]
   14178:	add	r9, r4, #8
   1417c:	orr	r5, r5, #1
   14180:	mov	r1, #0
   14184:	mov	r2, r7
   14188:	ldr	fp, [r0]
   1418c:	str	r3, [sp, #16]
   14190:	ldr	r3, [r4, #40]	; 0x28
   14194:	stmib	sp, {r5, r9}
   14198:	str	r3, [sp, #12]
   1419c:	ldr	r3, [r4]
   141a0:	mov	r6, r0
   141a4:	str	r3, [sp]
   141a8:	mov	r0, r1
   141ac:	mov	r3, r8
   141b0:	bl	12a54 <strspn@plt+0x1a70>
   141b4:	add	r1, r0, #1
   141b8:	mov	r0, r1
   141bc:	str	r1, [sp, #28]
   141c0:	bl	17330 <strspn@plt+0x634c>
   141c4:	ldr	r3, [r4, #44]	; 0x2c
   141c8:	ldr	r1, [sp, #28]
   141cc:	str	r3, [sp, #16]
   141d0:	ldr	r3, [r4, #40]	; 0x28
   141d4:	str	r5, [sp, #4]
   141d8:	str	r3, [sp, #12]
   141dc:	str	r9, [sp, #8]
   141e0:	ldr	ip, [r4]
   141e4:	mov	r3, r8
   141e8:	mov	r2, r7
   141ec:	str	ip, [sp]
   141f0:	mov	sl, r0
   141f4:	bl	12a54 <strspn@plt+0x1a70>
   141f8:	mov	r0, sl
   141fc:	str	fp, [r6]
   14200:	add	sp, sp, #36	; 0x24
   14204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14208:	muleq	r2, r8, r1
   1420c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14210:	cmp	r3, #0
   14214:	sub	sp, sp, #44	; 0x2c
   14218:	ldr	r4, [pc, #192]	; 142e0 <strspn@plt+0x32fc>
   1421c:	mov	r6, r2
   14220:	movne	r4, r3
   14224:	mov	r9, r1
   14228:	mov	r8, r0
   1422c:	bl	10f18 <__errno_location@plt>
   14230:	ldr	r3, [r4, #44]	; 0x2c
   14234:	ldr	r5, [r4, #4]
   14238:	add	sl, r4, #8
   1423c:	cmp	r6, #0
   14240:	orreq	r5, r5, #1
   14244:	mov	r1, #0
   14248:	ldr	r2, [r0]
   1424c:	str	r3, [sp, #16]
   14250:	ldr	r3, [r4, #40]	; 0x28
   14254:	stmib	sp, {r5, sl}
   14258:	str	r3, [sp, #12]
   1425c:	ldr	r3, [r4]
   14260:	mov	r7, r0
   14264:	str	r2, [sp, #28]
   14268:	str	r3, [sp]
   1426c:	mov	r2, r8
   14270:	mov	r3, r9
   14274:	mov	r0, r1
   14278:	bl	12a54 <strspn@plt+0x1a70>
   1427c:	add	r1, r0, #1
   14280:	mov	fp, r0
   14284:	mov	r0, r1
   14288:	str	r1, [sp, #36]	; 0x24
   1428c:	bl	17330 <strspn@plt+0x634c>
   14290:	ldr	r3, [r4, #44]	; 0x2c
   14294:	mov	r2, r8
   14298:	str	r3, [sp, #16]
   1429c:	ldr	r3, [r4, #40]	; 0x28
   142a0:	str	r5, [sp, #4]
   142a4:	str	r3, [sp, #12]
   142a8:	str	sl, [sp, #8]
   142ac:	ldr	ip, [r4]
   142b0:	ldr	r1, [sp, #36]	; 0x24
   142b4:	mov	r3, r9
   142b8:	str	ip, [sp]
   142bc:	str	r0, [sp, #32]
   142c0:	bl	12a54 <strspn@plt+0x1a70>
   142c4:	ldr	r2, [sp, #28]
   142c8:	cmp	r6, #0
   142cc:	str	r2, [r7]
   142d0:	ldr	r0, [sp, #32]
   142d4:	strne	fp, [r6]
   142d8:	add	sp, sp, #44	; 0x2c
   142dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142e0:	muleq	r2, r8, r1
   142e4:	push	{r4, r5, r6, r7, r8, lr}
   142e8:	ldr	r6, [pc, #116]	; 14364 <strspn@plt+0x3380>
   142ec:	ldr	r3, [r6, #4]
   142f0:	ldr	r7, [r6]
   142f4:	cmp	r3, #1
   142f8:	movgt	r5, r7
   142fc:	movgt	r4, #1
   14300:	ble	14320 <strspn@plt+0x333c>
   14304:	ldr	r0, [r5, #12]
   14308:	bl	12828 <strspn@plt+0x1844>
   1430c:	ldr	r3, [r6, #4]
   14310:	add	r4, r4, #1
   14314:	cmp	r3, r4
   14318:	add	r5, r5, #8
   1431c:	bgt	14304 <strspn@plt+0x3320>
   14320:	ldr	r0, [r7, #4]
   14324:	ldr	r4, [pc, #60]	; 14368 <strspn@plt+0x3384>
   14328:	cmp	r0, r4
   1432c:	beq	14340 <strspn@plt+0x335c>
   14330:	bl	12828 <strspn@plt+0x1844>
   14334:	mov	r3, #256	; 0x100
   14338:	str	r4, [r6, #12]
   1433c:	str	r3, [r6, #8]
   14340:	ldr	r4, [pc, #36]	; 1436c <strspn@plt+0x3388>
   14344:	cmp	r7, r4
   14348:	beq	14358 <strspn@plt+0x3374>
   1434c:	mov	r0, r7
   14350:	bl	12828 <strspn@plt+0x1844>
   14354:	str	r4, [r6]
   14358:	mov	r3, #1
   1435c:	str	r3, [r6, #4]
   14360:	pop	{r4, r5, r6, r7, r8, pc}
   14364:	andeq	sl, r2, r4, lsl #2
   14368:	andeq	sl, r2, r8, asr #3
   1436c:	andeq	sl, r2, ip, lsl #2
   14370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14374:	sub	sp, sp, #44	; 0x2c
   14378:	mov	r5, r0
   1437c:	mov	sl, r1
   14380:	bl	10f18 <__errno_location@plt>
   14384:	ldr	r4, [pc, #400]	; 1451c <strspn@plt+0x3538>
   14388:	cmn	r5, #-2147483647	; 0x80000001
   1438c:	ldr	r6, [r4]
   14390:	mov	r8, r0
   14394:	movne	r0, #0
   14398:	moveq	r0, #1
   1439c:	ldr	r3, [r8]
   143a0:	orrs	r0, r0, r5, lsr #31
   143a4:	str	r3, [sp, #24]
   143a8:	bne	14518 <strspn@plt+0x3534>
   143ac:	ldr	r2, [r4, #4]
   143b0:	cmp	r5, r2
   143b4:	blt	14414 <strspn@plt+0x3430>
   143b8:	add	r7, r4, #8
   143bc:	cmp	r6, r7
   143c0:	str	r2, [sp, #36]	; 0x24
   143c4:	beq	144e8 <strspn@plt+0x3504>
   143c8:	mov	r3, #8
   143cc:	sub	r2, r5, r2
   143d0:	mov	r0, r6
   143d4:	str	r3, [sp]
   143d8:	add	r2, r2, #1
   143dc:	mvn	r3, #-2147483648	; 0x80000000
   143e0:	add	r1, sp, #36	; 0x24
   143e4:	bl	1754c <strspn@plt+0x6568>
   143e8:	mov	r6, r0
   143ec:	str	r0, [r4]
   143f0:	ldr	r0, [r4, #4]
   143f4:	ldr	r2, [sp, #36]	; 0x24
   143f8:	mov	r1, #0
   143fc:	sub	r2, r2, r0
   14400:	add	r0, r6, r0, lsl #3
   14404:	lsl	r2, r2, #3
   14408:	bl	10f3c <memset@plt>
   1440c:	ldr	r3, [sp, #36]	; 0x24
   14410:	str	r3, [r4, #4]
   14414:	ldr	r4, [pc, #260]	; 14520 <strspn@plt+0x353c>
   14418:	add	fp, r6, r5, lsl #3
   1441c:	ldr	r9, [r6, r5, lsl #3]
   14420:	ldr	r0, [r4, #4]
   14424:	ldr	r3, [r4]
   14428:	ldr	r7, [fp, #4]
   1442c:	ldr	r1, [r4, #44]	; 0x2c
   14430:	ldr	r2, [r4, #40]	; 0x28
   14434:	orr	r0, r0, #1
   14438:	str	r3, [sp]
   1443c:	add	r3, r4, #8
   14440:	str	r0, [sp, #28]
   14444:	str	r0, [sp, #4]
   14448:	str	r1, [sp, #16]
   1444c:	str	r2, [sp, #12]
   14450:	str	r3, [sp, #8]
   14454:	mov	r0, r7
   14458:	mov	r1, r9
   1445c:	mvn	r3, #0
   14460:	mov	r2, sl
   14464:	bl	12a54 <strspn@plt+0x1a70>
   14468:	cmp	r9, r0
   1446c:	bhi	144d4 <strspn@plt+0x34f0>
   14470:	add	r3, r4, #48	; 0x30
   14474:	add	r9, r0, #1
   14478:	cmp	r7, r3
   1447c:	str	r9, [r6, r5, lsl #3]
   14480:	beq	1448c <strspn@plt+0x34a8>
   14484:	mov	r0, r7
   14488:	bl	12828 <strspn@plt+0x1844>
   1448c:	mov	r0, r9
   14490:	bl	17330 <strspn@plt+0x634c>
   14494:	ldr	ip, [r4, #44]	; 0x2c
   14498:	ldr	r3, [r4]
   1449c:	ldr	lr, [r4, #40]	; 0x28
   144a0:	ldr	r4, [pc, #124]	; 14524 <strspn@plt+0x3540>
   144a4:	mov	r2, sl
   144a8:	mov	r1, r9
   144ac:	str	r0, [fp, #4]
   144b0:	str	r4, [sp, #8]
   144b4:	ldr	r4, [sp, #28]
   144b8:	str	r3, [sp]
   144bc:	str	r4, [sp, #4]
   144c0:	str	ip, [sp, #16]
   144c4:	str	lr, [sp, #12]
   144c8:	mvn	r3, #0
   144cc:	mov	r7, r0
   144d0:	bl	12a54 <strspn@plt+0x1a70>
   144d4:	ldr	r3, [sp, #24]
   144d8:	mov	r0, r7
   144dc:	str	r3, [r8]
   144e0:	add	sp, sp, #44	; 0x2c
   144e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144e8:	mov	r3, #8
   144ec:	sub	r2, r5, r2
   144f0:	str	r3, [sp]
   144f4:	add	r1, sp, #36	; 0x24
   144f8:	add	r2, r2, #1
   144fc:	mvn	r3, #-2147483648	; 0x80000000
   14500:	bl	1754c <strspn@plt+0x6568>
   14504:	mov	r6, r0
   14508:	ldm	r7, {r0, r1}
   1450c:	str	r6, [r4]
   14510:	stm	r6, {r0, r1}
   14514:	b	143f0 <strspn@plt+0x340c>
   14518:	bl	10fd8 <abort@plt>
   1451c:	andeq	sl, r2, r4, lsl #2
   14520:	muleq	r2, r8, r1
   14524:	andeq	sl, r2, r0, lsr #3
   14528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1452c:	sub	sp, sp, #52	; 0x34
   14530:	mov	r5, r0
   14534:	mov	sl, r1
   14538:	mov	fp, r2
   1453c:	bl	10f18 <__errno_location@plt>
   14540:	ldr	r4, [pc, #408]	; 146e0 <strspn@plt+0x36fc>
   14544:	cmn	r5, #-2147483647	; 0x80000001
   14548:	ldr	r6, [r4]
   1454c:	mov	r8, r0
   14550:	movne	r0, #0
   14554:	moveq	r0, #1
   14558:	ldr	r3, [r8]
   1455c:	orrs	r0, r0, r5, lsr #31
   14560:	str	r3, [sp, #28]
   14564:	bne	146dc <strspn@plt+0x36f8>
   14568:	ldr	r2, [r4, #4]
   1456c:	cmp	r5, r2
   14570:	blt	145d0 <strspn@plt+0x35ec>
   14574:	add	r7, r4, #8
   14578:	cmp	r6, r7
   1457c:	str	r2, [sp, #44]	; 0x2c
   14580:	beq	146ac <strspn@plt+0x36c8>
   14584:	mov	r3, #8
   14588:	sub	r2, r5, r2
   1458c:	mov	r0, r6
   14590:	str	r3, [sp]
   14594:	add	r2, r2, #1
   14598:	mvn	r3, #-2147483648	; 0x80000000
   1459c:	add	r1, sp, #44	; 0x2c
   145a0:	bl	1754c <strspn@plt+0x6568>
   145a4:	mov	r6, r0
   145a8:	str	r0, [r4]
   145ac:	ldr	r0, [r4, #4]
   145b0:	ldr	r2, [sp, #44]	; 0x2c
   145b4:	mov	r1, #0
   145b8:	sub	r2, r2, r0
   145bc:	add	r0, r6, r0, lsl #3
   145c0:	lsl	r2, r2, #3
   145c4:	bl	10f3c <memset@plt>
   145c8:	ldr	r3, [sp, #44]	; 0x2c
   145cc:	str	r3, [r4, #4]
   145d0:	ldr	r4, [pc, #268]	; 146e4 <strspn@plt+0x3700>
   145d4:	add	r3, r6, r5, lsl #3
   145d8:	str	r3, [sp, #32]
   145dc:	ldr	r7, [r3, #4]
   145e0:	ldr	r0, [r4, #4]
   145e4:	ldr	r3, [r4]
   145e8:	ldr	r9, [r6, r5, lsl #3]
   145ec:	ldr	r1, [r4, #44]	; 0x2c
   145f0:	ldr	r2, [r4, #40]	; 0x28
   145f4:	orr	r0, r0, #1
   145f8:	str	r3, [sp]
   145fc:	add	r3, r4, #8
   14600:	str	r0, [sp, #36]	; 0x24
   14604:	str	r0, [sp, #4]
   14608:	str	r1, [sp, #16]
   1460c:	str	r2, [sp, #12]
   14610:	str	r3, [sp, #8]
   14614:	mov	r0, r7
   14618:	mov	r1, r9
   1461c:	mov	r3, fp
   14620:	mov	r2, sl
   14624:	bl	12a54 <strspn@plt+0x1a70>
   14628:	cmp	r9, r0
   1462c:	bhi	14698 <strspn@plt+0x36b4>
   14630:	add	r3, r4, #48	; 0x30
   14634:	add	r9, r0, #1
   14638:	cmp	r7, r3
   1463c:	str	r9, [r6, r5, lsl #3]
   14640:	beq	1464c <strspn@plt+0x3668>
   14644:	mov	r0, r7
   14648:	bl	12828 <strspn@plt+0x1844>
   1464c:	mov	r0, r9
   14650:	bl	17330 <strspn@plt+0x634c>
   14654:	ldr	ip, [sp, #32]
   14658:	ldr	lr, [r4, #44]	; 0x2c
   1465c:	ldr	r5, [r4, #40]	; 0x28
   14660:	mov	r3, fp
   14664:	mov	r2, sl
   14668:	mov	r1, r9
   1466c:	str	r0, [ip, #4]
   14670:	ldr	ip, [r4]
   14674:	ldr	r4, [pc, #108]	; 146e8 <strspn@plt+0x3704>
   14678:	str	lr, [sp, #16]
   1467c:	str	r4, [sp, #8]
   14680:	ldr	r4, [sp, #36]	; 0x24
   14684:	str	r5, [sp, #12]
   14688:	str	r4, [sp, #4]
   1468c:	str	ip, [sp]
   14690:	mov	r7, r0
   14694:	bl	12a54 <strspn@plt+0x1a70>
   14698:	ldr	r3, [sp, #28]
   1469c:	mov	r0, r7
   146a0:	str	r3, [r8]
   146a4:	add	sp, sp, #52	; 0x34
   146a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146ac:	mov	r3, #8
   146b0:	sub	r2, r5, r2
   146b4:	str	r3, [sp]
   146b8:	add	r1, sp, #44	; 0x2c
   146bc:	add	r2, r2, #1
   146c0:	mvn	r3, #-2147483648	; 0x80000000
   146c4:	bl	1754c <strspn@plt+0x6568>
   146c8:	mov	r6, r0
   146cc:	ldm	r7, {r0, r1}
   146d0:	str	r6, [r4]
   146d4:	stm	r6, {r0, r1}
   146d8:	b	145ac <strspn@plt+0x35c8>
   146dc:	bl	10fd8 <abort@plt>
   146e0:	andeq	sl, r2, r4, lsl #2
   146e4:	muleq	r2, r8, r1
   146e8:	andeq	sl, r2, r0, lsr #3
   146ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146f0:	sub	sp, sp, #44	; 0x2c
   146f4:	mov	sl, r0
   146f8:	bl	10f18 <__errno_location@plt>
   146fc:	ldr	r4, [pc, #352]	; 14864 <strspn@plt+0x3880>
   14700:	ldr	r2, [r4, #4]
   14704:	ldr	r5, [r4]
   14708:	cmp	r2, #0
   1470c:	ldr	r3, [r0]
   14710:	mov	r8, r0
   14714:	str	r3, [sp, #28]
   14718:	bgt	14774 <strspn@plt+0x3790>
   1471c:	add	r6, r4, #8
   14720:	cmp	r5, r6
   14724:	str	r2, [sp, #36]	; 0x24
   14728:	beq	14834 <strspn@plt+0x3850>
   1472c:	mov	r3, #8
   14730:	mov	r0, r5
   14734:	str	r3, [sp]
   14738:	rsb	r2, r2, #1
   1473c:	mvn	r3, #-2147483648	; 0x80000000
   14740:	add	r1, sp, #36	; 0x24
   14744:	bl	1754c <strspn@plt+0x6568>
   14748:	mov	r5, r0
   1474c:	str	r0, [r4]
   14750:	ldr	r0, [r4, #4]
   14754:	ldr	r2, [sp, #36]	; 0x24
   14758:	mov	r1, #0
   1475c:	sub	r2, r2, r0
   14760:	add	r0, r5, r0, lsl #3
   14764:	lsl	r2, r2, #3
   14768:	bl	10f3c <memset@plt>
   1476c:	ldr	r3, [sp, #36]	; 0x24
   14770:	str	r3, [r4, #4]
   14774:	ldr	r4, [pc, #236]	; 14868 <strspn@plt+0x3884>
   14778:	ldr	r9, [r5]
   1477c:	ldr	r6, [r5, #4]
   14780:	ldr	r7, [r4, #4]
   14784:	ldr	r1, [r4, #44]	; 0x2c
   14788:	ldr	r2, [r4, #40]	; 0x28
   1478c:	ldr	r3, [r4]
   14790:	orr	r7, r7, #1
   14794:	add	fp, r4, #8
   14798:	str	r1, [sp, #16]
   1479c:	str	r2, [sp, #12]
   147a0:	str	r3, [sp]
   147a4:	str	r7, [sp, #4]
   147a8:	str	fp, [sp, #8]
   147ac:	mov	r1, r9
   147b0:	mov	r0, r6
   147b4:	mvn	r3, #0
   147b8:	mov	r2, sl
   147bc:	bl	12a54 <strspn@plt+0x1a70>
   147c0:	cmp	r9, r0
   147c4:	bhi	14820 <strspn@plt+0x383c>
   147c8:	add	r3, r4, #48	; 0x30
   147cc:	add	r9, r0, #1
   147d0:	cmp	r6, r3
   147d4:	str	r9, [r5]
   147d8:	beq	147e4 <strspn@plt+0x3800>
   147dc:	mov	r0, r6
   147e0:	bl	12828 <strspn@plt+0x1844>
   147e4:	mov	r0, r9
   147e8:	bl	17330 <strspn@plt+0x634c>
   147ec:	ldr	ip, [r4, #44]	; 0x2c
   147f0:	ldr	r3, [r4]
   147f4:	ldr	lr, [r4, #40]	; 0x28
   147f8:	mov	r2, sl
   147fc:	mov	r1, r9
   14800:	str	r0, [r5, #4]
   14804:	str	r3, [sp]
   14808:	stmib	sp, {r7, fp}
   1480c:	str	ip, [sp, #16]
   14810:	str	lr, [sp, #12]
   14814:	mvn	r3, #0
   14818:	mov	r6, r0
   1481c:	bl	12a54 <strspn@plt+0x1a70>
   14820:	ldr	r3, [sp, #28]
   14824:	mov	r0, r6
   14828:	str	r3, [r8]
   1482c:	add	sp, sp, #44	; 0x2c
   14830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14834:	mov	r3, #8
   14838:	str	r3, [sp]
   1483c:	add	r1, sp, #36	; 0x24
   14840:	rsb	r2, r2, #1
   14844:	mvn	r3, #-2147483648	; 0x80000000
   14848:	mov	r0, #0
   1484c:	bl	1754c <strspn@plt+0x6568>
   14850:	mov	r5, r0
   14854:	ldm	r6, {r0, r1}
   14858:	str	r5, [r4]
   1485c:	stm	r5, {r0, r1}
   14860:	b	14750 <strspn@plt+0x376c>
   14864:	andeq	sl, r2, r4, lsl #2
   14868:	muleq	r2, r8, r1
   1486c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14870:	sub	sp, sp, #44	; 0x2c
   14874:	mov	r9, r0
   14878:	mov	sl, r1
   1487c:	bl	10f18 <__errno_location@plt>
   14880:	ldr	r4, [pc, #364]	; 149f4 <strspn@plt+0x3a10>
   14884:	ldr	r2, [r4, #4]
   14888:	ldr	r5, [r4]
   1488c:	cmp	r2, #0
   14890:	ldr	r3, [r0]
   14894:	mov	r7, r0
   14898:	str	r3, [sp, #24]
   1489c:	bgt	148f8 <strspn@plt+0x3914>
   148a0:	add	r6, r4, #8
   148a4:	cmp	r5, r6
   148a8:	str	r2, [sp, #36]	; 0x24
   148ac:	beq	149c4 <strspn@plt+0x39e0>
   148b0:	mov	r3, #8
   148b4:	mov	r0, r5
   148b8:	str	r3, [sp]
   148bc:	rsb	r2, r2, #1
   148c0:	mvn	r3, #-2147483648	; 0x80000000
   148c4:	add	r1, sp, #36	; 0x24
   148c8:	bl	1754c <strspn@plt+0x6568>
   148cc:	mov	r5, r0
   148d0:	str	r0, [r4]
   148d4:	ldr	r0, [r4, #4]
   148d8:	ldr	r2, [sp, #36]	; 0x24
   148dc:	mov	r1, #0
   148e0:	sub	r2, r2, r0
   148e4:	add	r0, r5, r0, lsl #3
   148e8:	lsl	r2, r2, #3
   148ec:	bl	10f3c <memset@plt>
   148f0:	ldr	r3, [sp, #36]	; 0x24
   148f4:	str	r3, [r4, #4]
   148f8:	ldr	r4, [pc, #248]	; 149f8 <strspn@plt+0x3a14>
   148fc:	ldr	r8, [r5]
   14900:	ldr	r6, [r5, #4]
   14904:	ldr	r0, [r4, #4]
   14908:	ldr	r1, [r4, #44]	; 0x2c
   1490c:	ldr	r2, [r4, #40]	; 0x28
   14910:	ldr	r3, [r4]
   14914:	orr	r0, r0, #1
   14918:	add	fp, r4, #8
   1491c:	str	r0, [sp, #28]
   14920:	str	r0, [sp, #4]
   14924:	str	r1, [sp, #16]
   14928:	str	r2, [sp, #12]
   1492c:	str	r3, [sp]
   14930:	str	fp, [sp, #8]
   14934:	mov	r1, r8
   14938:	mov	r0, r6
   1493c:	mov	r3, sl
   14940:	mov	r2, r9
   14944:	bl	12a54 <strspn@plt+0x1a70>
   14948:	cmp	r8, r0
   1494c:	bhi	149b0 <strspn@plt+0x39cc>
   14950:	add	r3, r4, #48	; 0x30
   14954:	add	r8, r0, #1
   14958:	cmp	r6, r3
   1495c:	str	r8, [r5]
   14960:	beq	1496c <strspn@plt+0x3988>
   14964:	mov	r0, r6
   14968:	bl	12828 <strspn@plt+0x1844>
   1496c:	mov	r0, r8
   14970:	bl	17330 <strspn@plt+0x634c>
   14974:	ldr	lr, [r4, #44]	; 0x2c
   14978:	ldr	ip, [r4]
   1497c:	mov	r3, sl
   14980:	mov	r2, r9
   14984:	mov	r1, r8
   14988:	str	r0, [r5, #4]
   1498c:	ldr	r5, [r4, #40]	; 0x28
   14990:	ldr	r4, [sp, #28]
   14994:	str	fp, [sp, #8]
   14998:	str	r4, [sp, #4]
   1499c:	str	lr, [sp, #16]
   149a0:	str	r5, [sp, #12]
   149a4:	str	ip, [sp]
   149a8:	mov	r6, r0
   149ac:	bl	12a54 <strspn@plt+0x1a70>
   149b0:	ldr	r3, [sp, #24]
   149b4:	mov	r0, r6
   149b8:	str	r3, [r7]
   149bc:	add	sp, sp, #44	; 0x2c
   149c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149c4:	mov	r3, #8
   149c8:	str	r3, [sp]
   149cc:	add	r1, sp, #36	; 0x24
   149d0:	rsb	r2, r2, #1
   149d4:	mvn	r3, #-2147483648	; 0x80000000
   149d8:	mov	r0, #0
   149dc:	bl	1754c <strspn@plt+0x6568>
   149e0:	mov	r5, r0
   149e4:	ldm	r6, {r0, r1}
   149e8:	str	r5, [r4]
   149ec:	stm	r5, {r0, r1}
   149f0:	b	148d4 <strspn@plt+0x38f0>
   149f4:	andeq	sl, r2, r4, lsl #2
   149f8:	muleq	r2, r8, r1
   149fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a00:	sub	sp, sp, #132	; 0x84
   14a04:	mov	r5, r1
   14a08:	mov	r4, r0
   14a0c:	mov	r9, r2
   14a10:	add	r0, sp, #80	; 0x50
   14a14:	mov	r2, #48	; 0x30
   14a18:	mov	r1, #0
   14a1c:	bl	10f3c <memset@plt>
   14a20:	cmp	r5, #10
   14a24:	beq	14bdc <strspn@plt+0x3bf8>
   14a28:	add	lr, sp, #80	; 0x50
   14a2c:	str	r5, [sp, #80]	; 0x50
   14a30:	ldm	lr!, {r0, r1, r2, r3}
   14a34:	add	ip, sp, #32
   14a38:	ldr	r6, [pc, #416]	; 14be0 <strspn@plt+0x3bfc>
   14a3c:	stmia	ip!, {r0, r1, r2, r3}
   14a40:	ldm	lr!, {r0, r1, r2, r3}
   14a44:	stmia	ip!, {r0, r1, r2, r3}
   14a48:	ldm	lr, {r0, r1, r2, r3}
   14a4c:	stm	ip, {r0, r1, r2, r3}
   14a50:	bl	10f18 <__errno_location@plt>
   14a54:	cmn	r4, #-2147483647	; 0x80000001
   14a58:	ldr	r5, [r6]
   14a5c:	mov	r7, r0
   14a60:	movne	r0, #0
   14a64:	moveq	r0, #1
   14a68:	ldr	r3, [r7]
   14a6c:	orrs	r0, r0, r4, lsr #31
   14a70:	str	r3, [sp, #24]
   14a74:	bne	14bdc <strspn@plt+0x3bf8>
   14a78:	ldr	r2, [r6, #4]
   14a7c:	cmp	r4, r2
   14a80:	blt	14ae0 <strspn@plt+0x3afc>
   14a84:	add	r8, r6, #8
   14a88:	cmp	r5, r8
   14a8c:	str	r2, [sp, #80]	; 0x50
   14a90:	beq	14bac <strspn@plt+0x3bc8>
   14a94:	mov	r3, #8
   14a98:	sub	r2, r4, r2
   14a9c:	mov	r0, r5
   14aa0:	str	r3, [sp]
   14aa4:	add	r2, r2, #1
   14aa8:	add	r1, sp, #80	; 0x50
   14aac:	mvn	r3, #-2147483648	; 0x80000000
   14ab0:	bl	1754c <strspn@plt+0x6568>
   14ab4:	mov	r5, r0
   14ab8:	str	r0, [r6]
   14abc:	ldr	r0, [r6, #4]
   14ac0:	ldr	r2, [sp, #80]	; 0x50
   14ac4:	mov	r1, #0
   14ac8:	sub	r2, r2, r0
   14acc:	add	r0, r5, r0, lsl #3
   14ad0:	lsl	r2, r2, #3
   14ad4:	bl	10f3c <memset@plt>
   14ad8:	ldr	r3, [sp, #80]	; 0x50
   14adc:	str	r3, [r6, #4]
   14ae0:	add	fp, r5, r4, lsl #3
   14ae4:	ldr	r1, [sp, #36]	; 0x24
   14ae8:	ldr	r8, [r5, r4, lsl #3]
   14aec:	ldr	r6, [fp, #4]
   14af0:	ldr	r2, [sp, #72]	; 0x48
   14af4:	ldr	r3, [sp, #32]
   14af8:	ldr	ip, [sp, #76]	; 0x4c
   14afc:	orr	r1, r1, #1
   14b00:	add	sl, sp, #40	; 0x28
   14b04:	str	r1, [sp, #28]
   14b08:	str	r1, [sp, #4]
   14b0c:	str	r2, [sp, #12]
   14b10:	str	r3, [sp]
   14b14:	mov	r0, r6
   14b18:	mov	r1, r8
   14b1c:	str	ip, [sp, #16]
   14b20:	str	sl, [sp, #8]
   14b24:	mvn	r3, #0
   14b28:	mov	r2, r9
   14b2c:	bl	12a54 <strspn@plt+0x1a70>
   14b30:	cmp	r8, r0
   14b34:	bhi	14b98 <strspn@plt+0x3bb4>
   14b38:	ldr	r3, [pc, #164]	; 14be4 <strspn@plt+0x3c00>
   14b3c:	add	r8, r0, #1
   14b40:	cmp	r6, r3
   14b44:	str	r8, [r5, r4, lsl #3]
   14b48:	beq	14b54 <strspn@plt+0x3b70>
   14b4c:	mov	r0, r6
   14b50:	bl	12828 <strspn@plt+0x1844>
   14b54:	mov	r0, r8
   14b58:	bl	17330 <strspn@plt+0x634c>
   14b5c:	ldr	lr, [sp, #76]	; 0x4c
   14b60:	ldr	r3, [sp, #32]
   14b64:	ldr	ip, [sp, #72]	; 0x48
   14b68:	ldr	r4, [sp, #28]
   14b6c:	mov	r2, r9
   14b70:	mov	r1, r8
   14b74:	str	r0, [fp, #4]
   14b78:	str	r3, [sp]
   14b7c:	str	sl, [sp, #8]
   14b80:	str	r4, [sp, #4]
   14b84:	str	lr, [sp, #16]
   14b88:	str	ip, [sp, #12]
   14b8c:	mvn	r3, #0
   14b90:	mov	r6, r0
   14b94:	bl	12a54 <strspn@plt+0x1a70>
   14b98:	ldr	r3, [sp, #24]
   14b9c:	mov	r0, r6
   14ba0:	str	r3, [r7]
   14ba4:	add	sp, sp, #132	; 0x84
   14ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bac:	mov	r3, #8
   14bb0:	sub	r2, r4, r2
   14bb4:	add	r1, sp, #80	; 0x50
   14bb8:	str	r3, [sp]
   14bbc:	add	r2, r2, #1
   14bc0:	mvn	r3, #-2147483648	; 0x80000000
   14bc4:	bl	1754c <strspn@plt+0x6568>
   14bc8:	mov	r5, r0
   14bcc:	ldm	r8, {r0, r1}
   14bd0:	str	r5, [r6]
   14bd4:	stm	r5, {r0, r1}
   14bd8:	b	14abc <strspn@plt+0x3ad8>
   14bdc:	bl	10fd8 <abort@plt>
   14be0:	andeq	sl, r2, r4, lsl #2
   14be4:	andeq	sl, r2, r8, asr #3
   14be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bec:	sub	sp, sp, #132	; 0x84
   14bf0:	mov	r5, r1
   14bf4:	mov	r4, r0
   14bf8:	mov	r9, r2
   14bfc:	add	r0, sp, #80	; 0x50
   14c00:	mov	r2, #48	; 0x30
   14c04:	mov	r1, #0
   14c08:	mov	sl, r3
   14c0c:	bl	10f3c <memset@plt>
   14c10:	cmp	r5, #10
   14c14:	beq	14dd0 <strspn@plt+0x3dec>
   14c18:	add	lr, sp, #80	; 0x50
   14c1c:	str	r5, [sp, #80]	; 0x50
   14c20:	ldm	lr!, {r0, r1, r2, r3}
   14c24:	add	ip, sp, #32
   14c28:	ldr	r6, [pc, #420]	; 14dd4 <strspn@plt+0x3df0>
   14c2c:	stmia	ip!, {r0, r1, r2, r3}
   14c30:	ldm	lr!, {r0, r1, r2, r3}
   14c34:	stmia	ip!, {r0, r1, r2, r3}
   14c38:	ldm	lr, {r0, r1, r2, r3}
   14c3c:	stm	ip, {r0, r1, r2, r3}
   14c40:	bl	10f18 <__errno_location@plt>
   14c44:	cmn	r4, #-2147483647	; 0x80000001
   14c48:	ldr	r5, [r6]
   14c4c:	mov	r7, r0
   14c50:	movne	r0, #0
   14c54:	moveq	r0, #1
   14c58:	ldr	r3, [r7]
   14c5c:	orrs	r0, r0, r4, lsr #31
   14c60:	str	r3, [sp, #24]
   14c64:	bne	14dd0 <strspn@plt+0x3dec>
   14c68:	ldr	r2, [r6, #4]
   14c6c:	cmp	r4, r2
   14c70:	blt	14cd0 <strspn@plt+0x3cec>
   14c74:	add	r8, r6, #8
   14c78:	cmp	r5, r8
   14c7c:	str	r2, [sp, #80]	; 0x50
   14c80:	beq	14da0 <strspn@plt+0x3dbc>
   14c84:	mov	r3, #8
   14c88:	sub	r2, r4, r2
   14c8c:	mov	r0, r5
   14c90:	str	r3, [sp]
   14c94:	add	r2, r2, #1
   14c98:	add	r1, sp, #80	; 0x50
   14c9c:	mvn	r3, #-2147483648	; 0x80000000
   14ca0:	bl	1754c <strspn@plt+0x6568>
   14ca4:	mov	r5, r0
   14ca8:	str	r0, [r6]
   14cac:	ldr	r0, [r6, #4]
   14cb0:	ldr	r2, [sp, #80]	; 0x50
   14cb4:	mov	r1, #0
   14cb8:	sub	r2, r2, r0
   14cbc:	add	r0, r5, r0, lsl #3
   14cc0:	lsl	r2, r2, #3
   14cc4:	bl	10f3c <memset@plt>
   14cc8:	ldr	r3, [sp, #80]	; 0x50
   14ccc:	str	r3, [r6, #4]
   14cd0:	add	fp, r5, r4, lsl #3
   14cd4:	ldr	r3, [sp, #32]
   14cd8:	ldr	r1, [sp, #36]	; 0x24
   14cdc:	ldr	r8, [r5, r4, lsl #3]
   14ce0:	ldr	r6, [fp, #4]
   14ce4:	ldr	r2, [sp, #72]	; 0x48
   14ce8:	ldr	ip, [sp, #76]	; 0x4c
   14cec:	orr	r1, r1, #1
   14cf0:	str	r3, [sp]
   14cf4:	add	r3, sp, #40	; 0x28
   14cf8:	str	r1, [sp, #28]
   14cfc:	str	r1, [sp, #4]
   14d00:	str	r2, [sp, #12]
   14d04:	str	r3, [sp, #8]
   14d08:	mov	r0, r6
   14d0c:	mov	r1, r8
   14d10:	str	ip, [sp, #16]
   14d14:	mov	r3, sl
   14d18:	mov	r2, r9
   14d1c:	bl	12a54 <strspn@plt+0x1a70>
   14d20:	cmp	r8, r0
   14d24:	bhi	14d8c <strspn@plt+0x3da8>
   14d28:	ldr	r3, [pc, #168]	; 14dd8 <strspn@plt+0x3df4>
   14d2c:	add	r8, r0, #1
   14d30:	cmp	r6, r3
   14d34:	str	r8, [r5, r4, lsl #3]
   14d38:	beq	14d44 <strspn@plt+0x3d60>
   14d3c:	mov	r0, r6
   14d40:	bl	12828 <strspn@plt+0x1844>
   14d44:	mov	r0, r8
   14d48:	bl	17330 <strspn@plt+0x634c>
   14d4c:	add	lr, sp, #40	; 0x28
   14d50:	ldr	ip, [sp, #76]	; 0x4c
   14d54:	ldr	r4, [sp, #72]	; 0x48
   14d58:	ldr	r5, [sp, #28]
   14d5c:	mov	r3, sl
   14d60:	mov	r2, r9
   14d64:	mov	r1, r8
   14d68:	str	r0, [fp, #4]
   14d6c:	str	lr, [sp, #8]
   14d70:	ldr	lr, [sp, #32]
   14d74:	str	r5, [sp, #4]
   14d78:	str	ip, [sp, #16]
   14d7c:	str	r4, [sp, #12]
   14d80:	str	lr, [sp]
   14d84:	mov	r6, r0
   14d88:	bl	12a54 <strspn@plt+0x1a70>
   14d8c:	ldr	r3, [sp, #24]
   14d90:	mov	r0, r6
   14d94:	str	r3, [r7]
   14d98:	add	sp, sp, #132	; 0x84
   14d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14da0:	mov	r3, #8
   14da4:	sub	r2, r4, r2
   14da8:	add	r1, sp, #80	; 0x50
   14dac:	str	r3, [sp]
   14db0:	add	r2, r2, #1
   14db4:	mvn	r3, #-2147483648	; 0x80000000
   14db8:	bl	1754c <strspn@plt+0x6568>
   14dbc:	mov	r5, r0
   14dc0:	ldm	r8, {r0, r1}
   14dc4:	str	r5, [r6]
   14dc8:	stm	r5, {r0, r1}
   14dcc:	b	14cac <strspn@plt+0x3cc8>
   14dd0:	bl	10fd8 <abort@plt>
   14dd4:	andeq	sl, r2, r4, lsl #2
   14dd8:	andeq	sl, r2, r8, asr #3
   14ddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14de0:	sub	sp, sp, #124	; 0x7c
   14de4:	mov	r4, r0
   14de8:	mov	r9, r1
   14dec:	add	r0, sp, #72	; 0x48
   14df0:	mov	r2, #48	; 0x30
   14df4:	mov	r1, #0
   14df8:	bl	10f3c <memset@plt>
   14dfc:	cmp	r4, #10
   14e00:	beq	14f8c <strspn@plt+0x3fa8>
   14e04:	add	lr, sp, #72	; 0x48
   14e08:	str	r4, [sp, #72]	; 0x48
   14e0c:	ldm	lr!, {r0, r1, r2, r3}
   14e10:	add	ip, sp, #24
   14e14:	ldr	r5, [pc, #372]	; 14f90 <strspn@plt+0x3fac>
   14e18:	stmia	ip!, {r0, r1, r2, r3}
   14e1c:	ldm	lr!, {r0, r1, r2, r3}
   14e20:	stmia	ip!, {r0, r1, r2, r3}
   14e24:	ldm	lr, {r0, r1, r2, r3}
   14e28:	stm	ip, {r0, r1, r2, r3}
   14e2c:	bl	10f18 <__errno_location@plt>
   14e30:	ldr	r2, [r5, #4]
   14e34:	ldr	r4, [r5]
   14e38:	cmp	r2, #0
   14e3c:	mov	r7, r0
   14e40:	ldr	fp, [r0]
   14e44:	bgt	14ea0 <strspn@plt+0x3ebc>
   14e48:	add	r6, r5, #8
   14e4c:	cmp	r4, r6
   14e50:	str	r2, [sp, #72]	; 0x48
   14e54:	beq	14f5c <strspn@plt+0x3f78>
   14e58:	mov	r3, #8
   14e5c:	mov	r0, r4
   14e60:	str	r3, [sp]
   14e64:	rsb	r2, r2, #1
   14e68:	add	r1, sp, #72	; 0x48
   14e6c:	mvn	r3, #-2147483648	; 0x80000000
   14e70:	bl	1754c <strspn@plt+0x6568>
   14e74:	mov	r4, r0
   14e78:	str	r0, [r5]
   14e7c:	ldr	r0, [r5, #4]
   14e80:	ldr	r2, [sp, #72]	; 0x48
   14e84:	mov	r1, #0
   14e88:	sub	r2, r2, r0
   14e8c:	add	r0, r4, r0, lsl #3
   14e90:	lsl	r2, r2, #3
   14e94:	bl	10f3c <memset@plt>
   14e98:	ldr	r3, [sp, #72]	; 0x48
   14e9c:	str	r3, [r5, #4]
   14ea0:	ldr	r6, [sp, #28]
   14ea4:	ldr	r8, [r4]
   14ea8:	ldr	r5, [r4, #4]
   14eac:	ldr	r2, [sp, #64]	; 0x40
   14eb0:	ldr	r3, [sp, #24]
   14eb4:	ldr	ip, [sp, #68]	; 0x44
   14eb8:	orr	r6, r6, #1
   14ebc:	add	sl, sp, #32
   14ec0:	str	r2, [sp, #12]
   14ec4:	str	r3, [sp]
   14ec8:	str	r6, [sp, #4]
   14ecc:	mov	r1, r8
   14ed0:	mov	r0, r5
   14ed4:	str	ip, [sp, #16]
   14ed8:	str	sl, [sp, #8]
   14edc:	mvn	r3, #0
   14ee0:	mov	r2, r9
   14ee4:	bl	12a54 <strspn@plt+0x1a70>
   14ee8:	cmp	r8, r0
   14eec:	bhi	14f4c <strspn@plt+0x3f68>
   14ef0:	ldr	r3, [pc, #156]	; 14f94 <strspn@plt+0x3fb0>
   14ef4:	add	r8, r0, #1
   14ef8:	cmp	r5, r3
   14efc:	str	r8, [r4]
   14f00:	beq	14f0c <strspn@plt+0x3f28>
   14f04:	mov	r0, r5
   14f08:	bl	12828 <strspn@plt+0x1844>
   14f0c:	mov	r0, r8
   14f10:	bl	17330 <strspn@plt+0x634c>
   14f14:	ldr	lr, [sp, #68]	; 0x44
   14f18:	ldr	r3, [sp, #24]
   14f1c:	ldr	ip, [sp, #64]	; 0x40
   14f20:	mov	r2, r9
   14f24:	mov	r1, r8
   14f28:	str	r0, [r4, #4]
   14f2c:	str	r3, [sp]
   14f30:	str	sl, [sp, #8]
   14f34:	str	r6, [sp, #4]
   14f38:	str	lr, [sp, #16]
   14f3c:	str	ip, [sp, #12]
   14f40:	mvn	r3, #0
   14f44:	mov	r5, r0
   14f48:	bl	12a54 <strspn@plt+0x1a70>
   14f4c:	mov	r0, r5
   14f50:	str	fp, [r7]
   14f54:	add	sp, sp, #124	; 0x7c
   14f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f5c:	mov	r3, #8
   14f60:	add	r1, sp, #72	; 0x48
   14f64:	str	r3, [sp]
   14f68:	rsb	r2, r2, #1
   14f6c:	mvn	r3, #-2147483648	; 0x80000000
   14f70:	mov	r0, #0
   14f74:	bl	1754c <strspn@plt+0x6568>
   14f78:	mov	r4, r0
   14f7c:	ldm	r6, {r0, r1}
   14f80:	str	r4, [r5]
   14f84:	stm	r4, {r0, r1}
   14f88:	b	14e7c <strspn@plt+0x3e98>
   14f8c:	bl	10fd8 <abort@plt>
   14f90:	andeq	sl, r2, r4, lsl #2
   14f94:	andeq	sl, r2, r8, asr #3
   14f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f9c:	sub	sp, sp, #132	; 0x84
   14fa0:	mov	r4, r0
   14fa4:	mov	r9, r1
   14fa8:	mov	sl, r2
   14fac:	add	r0, sp, #80	; 0x50
   14fb0:	mov	r2, #48	; 0x30
   14fb4:	mov	r1, #0
   14fb8:	bl	10f3c <memset@plt>
   14fbc:	cmp	r4, #10
   14fc0:	beq	15154 <strspn@plt+0x4170>
   14fc4:	add	lr, sp, #80	; 0x50
   14fc8:	str	r4, [sp, #80]	; 0x50
   14fcc:	ldm	lr!, {r0, r1, r2, r3}
   14fd0:	add	ip, sp, #32
   14fd4:	ldr	r5, [pc, #380]	; 15158 <strspn@plt+0x4174>
   14fd8:	stmia	ip!, {r0, r1, r2, r3}
   14fdc:	ldm	lr!, {r0, r1, r2, r3}
   14fe0:	stmia	ip!, {r0, r1, r2, r3}
   14fe4:	ldm	lr, {r0, r1, r2, r3}
   14fe8:	stm	ip, {r0, r1, r2, r3}
   14fec:	bl	10f18 <__errno_location@plt>
   14ff0:	ldr	r2, [r5, #4]
   14ff4:	ldr	r4, [r5]
   14ff8:	cmp	r2, #0
   14ffc:	ldr	r3, [r0]
   15000:	mov	r7, r0
   15004:	str	r3, [sp, #28]
   15008:	bgt	15064 <strspn@plt+0x4080>
   1500c:	add	r6, r5, #8
   15010:	cmp	r4, r6
   15014:	str	r2, [sp, #80]	; 0x50
   15018:	beq	15124 <strspn@plt+0x4140>
   1501c:	mov	r3, #8
   15020:	mov	r0, r4
   15024:	str	r3, [sp]
   15028:	rsb	r2, r2, #1
   1502c:	add	r1, sp, #80	; 0x50
   15030:	mvn	r3, #-2147483648	; 0x80000000
   15034:	bl	1754c <strspn@plt+0x6568>
   15038:	mov	r4, r0
   1503c:	str	r0, [r5]
   15040:	ldr	r0, [r5, #4]
   15044:	ldr	r2, [sp, #80]	; 0x50
   15048:	mov	r1, #0
   1504c:	sub	r2, r2, r0
   15050:	add	r0, r4, r0, lsl #3
   15054:	lsl	r2, r2, #3
   15058:	bl	10f3c <memset@plt>
   1505c:	ldr	r3, [sp, #80]	; 0x50
   15060:	str	r3, [r5, #4]
   15064:	ldr	r6, [sp, #36]	; 0x24
   15068:	ldr	r8, [r4]
   1506c:	ldr	r5, [r4, #4]
   15070:	ldr	r2, [sp, #72]	; 0x48
   15074:	ldr	r3, [sp, #32]
   15078:	ldr	ip, [sp, #76]	; 0x4c
   1507c:	orr	r6, r6, #1
   15080:	add	fp, sp, #40	; 0x28
   15084:	str	r2, [sp, #12]
   15088:	str	r3, [sp]
   1508c:	str	r6, [sp, #4]
   15090:	mov	r1, r8
   15094:	mov	r0, r5
   15098:	str	ip, [sp, #16]
   1509c:	str	fp, [sp, #8]
   150a0:	mov	r3, sl
   150a4:	mov	r2, r9
   150a8:	bl	12a54 <strspn@plt+0x1a70>
   150ac:	cmp	r8, r0
   150b0:	bhi	15110 <strspn@plt+0x412c>
   150b4:	ldr	r3, [pc, #160]	; 1515c <strspn@plt+0x4178>
   150b8:	add	r8, r0, #1
   150bc:	cmp	r5, r3
   150c0:	str	r8, [r4]
   150c4:	beq	150d0 <strspn@plt+0x40ec>
   150c8:	mov	r0, r5
   150cc:	bl	12828 <strspn@plt+0x1844>
   150d0:	mov	r0, r8
   150d4:	bl	17330 <strspn@plt+0x634c>
   150d8:	ldr	ip, [sp, #76]	; 0x4c
   150dc:	ldr	lr, [sp, #32]
   150e0:	mov	r3, sl
   150e4:	mov	r2, r9
   150e8:	mov	r1, r8
   150ec:	str	r0, [r4, #4]
   150f0:	ldr	r4, [sp, #72]	; 0x48
   150f4:	str	fp, [sp, #8]
   150f8:	str	r6, [sp, #4]
   150fc:	str	ip, [sp, #16]
   15100:	str	r4, [sp, #12]
   15104:	str	lr, [sp]
   15108:	mov	r5, r0
   1510c:	bl	12a54 <strspn@plt+0x1a70>
   15110:	ldr	r3, [sp, #28]
   15114:	mov	r0, r5
   15118:	str	r3, [r7]
   1511c:	add	sp, sp, #132	; 0x84
   15120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15124:	mov	r3, #8
   15128:	add	r1, sp, #80	; 0x50
   1512c:	str	r3, [sp]
   15130:	rsb	r2, r2, #1
   15134:	mvn	r3, #-2147483648	; 0x80000000
   15138:	mov	r0, #0
   1513c:	bl	1754c <strspn@plt+0x6568>
   15140:	mov	r4, r0
   15144:	ldm	r6, {r0, r1}
   15148:	str	r4, [r5]
   1514c:	stm	r4, {r0, r1}
   15150:	b	15040 <strspn@plt+0x405c>
   15154:	bl	10fd8 <abort@plt>
   15158:	andeq	sl, r2, r4, lsl #2
   1515c:	andeq	sl, r2, r8, asr #3
   15160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15164:	mov	r4, r2
   15168:	ldr	lr, [pc, #432]	; 15320 <strspn@plt+0x433c>
   1516c:	mov	sl, r0
   15170:	mov	fp, r1
   15174:	ldm	lr!, {r0, r1, r2, r3}
   15178:	sub	sp, sp, #92	; 0x5c
   1517c:	add	ip, sp, #40	; 0x28
   15180:	lsr	r7, r4, #5
   15184:	stmia	ip!, {r0, r1, r2, r3}
   15188:	add	r6, sp, #48	; 0x30
   1518c:	ldm	lr!, {r0, r1, r2, r3}
   15190:	and	r4, r4, #31
   15194:	ldr	r5, [pc, #392]	; 15324 <strspn@plt+0x4340>
   15198:	stmia	ip!, {r0, r1, r2, r3}
   1519c:	ldm	lr, {r0, r1, r2, r3}
   151a0:	stm	ip, {r0, r1, r2, r3}
   151a4:	ldr	r2, [r6, r7, lsl #2]
   151a8:	lsr	r3, r2, r4
   151ac:	eor	r3, r3, #1
   151b0:	and	r3, r3, #1
   151b4:	eor	r4, r2, r3, lsl r4
   151b8:	str	r4, [r6, r7, lsl #2]
   151bc:	bl	10f18 <__errno_location@plt>
   151c0:	ldr	r2, [r5, #4]
   151c4:	ldr	r4, [r5]
   151c8:	cmp	r2, #0
   151cc:	ldr	r3, [r0]
   151d0:	mov	r8, r0
   151d4:	str	r3, [sp, #28]
   151d8:	bgt	15234 <strspn@plt+0x4250>
   151dc:	add	r7, r5, #8
   151e0:	cmp	r4, r7
   151e4:	str	r2, [sp, #36]	; 0x24
   151e8:	beq	152f0 <strspn@plt+0x430c>
   151ec:	mov	r3, #8
   151f0:	mov	r0, r4
   151f4:	str	r3, [sp]
   151f8:	rsb	r2, r2, #1
   151fc:	mvn	r3, #-2147483648	; 0x80000000
   15200:	add	r1, sp, #36	; 0x24
   15204:	bl	1754c <strspn@plt+0x6568>
   15208:	mov	r4, r0
   1520c:	str	r0, [r5]
   15210:	ldr	r0, [r5, #4]
   15214:	ldr	r2, [sp, #36]	; 0x24
   15218:	mov	r1, #0
   1521c:	sub	r2, r2, r0
   15220:	add	r0, r4, r0, lsl #3
   15224:	lsl	r2, r2, #3
   15228:	bl	10f3c <memset@plt>
   1522c:	ldr	r3, [sp, #36]	; 0x24
   15230:	str	r3, [r5, #4]
   15234:	ldr	r7, [sp, #44]	; 0x2c
   15238:	ldr	r9, [r4]
   1523c:	ldr	r5, [r4, #4]
   15240:	ldr	r2, [sp, #80]	; 0x50
   15244:	ldr	r3, [sp, #40]	; 0x28
   15248:	ldr	ip, [sp, #84]	; 0x54
   1524c:	orr	r7, r7, #1
   15250:	str	r2, [sp, #12]
   15254:	str	r3, [sp]
   15258:	str	r7, [sp, #4]
   1525c:	str	r6, [sp, #8]
   15260:	mov	r1, r9
   15264:	mov	r0, r5
   15268:	str	ip, [sp, #16]
   1526c:	mov	r3, fp
   15270:	mov	r2, sl
   15274:	bl	12a54 <strspn@plt+0x1a70>
   15278:	cmp	r9, r0
   1527c:	bhi	152dc <strspn@plt+0x42f8>
   15280:	ldr	r3, [pc, #160]	; 15328 <strspn@plt+0x4344>
   15284:	add	r9, r0, #1
   15288:	cmp	r5, r3
   1528c:	str	r9, [r4]
   15290:	beq	1529c <strspn@plt+0x42b8>
   15294:	mov	r0, r5
   15298:	bl	12828 <strspn@plt+0x1844>
   1529c:	mov	r0, r9
   152a0:	bl	17330 <strspn@plt+0x634c>
   152a4:	ldr	ip, [sp, #84]	; 0x54
   152a8:	ldr	lr, [sp, #40]	; 0x28
   152ac:	mov	r3, fp
   152b0:	mov	r2, sl
   152b4:	mov	r1, r9
   152b8:	str	r0, [r4, #4]
   152bc:	ldr	r4, [sp, #80]	; 0x50
   152c0:	str	r6, [sp, #8]
   152c4:	str	r7, [sp, #4]
   152c8:	str	ip, [sp, #16]
   152cc:	str	r4, [sp, #12]
   152d0:	str	lr, [sp]
   152d4:	mov	r5, r0
   152d8:	bl	12a54 <strspn@plt+0x1a70>
   152dc:	ldr	r3, [sp, #28]
   152e0:	mov	r0, r5
   152e4:	str	r3, [r8]
   152e8:	add	sp, sp, #92	; 0x5c
   152ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152f0:	mov	r3, #8
   152f4:	str	r3, [sp]
   152f8:	add	r1, sp, #36	; 0x24
   152fc:	rsb	r2, r2, #1
   15300:	mvn	r3, #-2147483648	; 0x80000000
   15304:	mov	r0, #0
   15308:	bl	1754c <strspn@plt+0x6568>
   1530c:	mov	r4, r0
   15310:	ldm	r7, {r0, r1}
   15314:	str	r4, [r5]
   15318:	stm	r4, {r0, r1}
   1531c:	b	15210 <strspn@plt+0x422c>
   15320:	muleq	r2, r8, r1
   15324:	andeq	sl, r2, r4, lsl #2
   15328:	andeq	sl, r2, r8, asr #3
   1532c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15330:	mov	r4, r1
   15334:	ldr	lr, [pc, #420]	; 154e0 <strspn@plt+0x44fc>
   15338:	mov	r6, r0
   1533c:	sub	sp, sp, #84	; 0x54
   15340:	ldm	lr!, {r0, r1, r2, r3}
   15344:	add	ip, sp, #32
   15348:	lsr	r8, r4, #5
   1534c:	add	r5, sp, #40	; 0x28
   15350:	stmia	ip!, {r0, r1, r2, r3}
   15354:	and	r4, r4, #31
   15358:	ldm	lr!, {r0, r1, r2, r3}
   1535c:	ldr	r7, [pc, #384]	; 154e4 <strspn@plt+0x4500>
   15360:	stmia	ip!, {r0, r1, r2, r3}
   15364:	ldm	lr, {r0, r1, r2, r3}
   15368:	stm	ip, {r0, r1, r2, r3}
   1536c:	ldr	r2, [r5, r8, lsl #2]
   15370:	lsr	r3, r2, r4
   15374:	eor	r3, r3, #1
   15378:	and	r3, r3, #1
   1537c:	eor	r4, r2, r3, lsl r4
   15380:	str	r4, [r5, r8, lsl #2]
   15384:	bl	10f18 <__errno_location@plt>
   15388:	ldr	r2, [r7, #4]
   1538c:	ldr	r4, [r7]
   15390:	cmp	r2, #0
   15394:	mov	r9, r0
   15398:	ldr	sl, [r0]
   1539c:	bgt	153f8 <strspn@plt+0x4414>
   153a0:	add	r8, r7, #8
   153a4:	cmp	r4, r8
   153a8:	str	r2, [sp, #28]
   153ac:	beq	154b0 <strspn@plt+0x44cc>
   153b0:	mov	r3, #8
   153b4:	mov	r0, r4
   153b8:	str	r3, [sp]
   153bc:	rsb	r2, r2, #1
   153c0:	mvn	r3, #-2147483648	; 0x80000000
   153c4:	add	r1, sp, #28
   153c8:	bl	1754c <strspn@plt+0x6568>
   153cc:	mov	r4, r0
   153d0:	str	r0, [r7]
   153d4:	ldr	r0, [r7, #4]
   153d8:	ldr	r2, [sp, #28]
   153dc:	mov	r1, #0
   153e0:	sub	r2, r2, r0
   153e4:	add	r0, r4, r0, lsl #3
   153e8:	lsl	r2, r2, #3
   153ec:	bl	10f3c <memset@plt>
   153f0:	ldr	r3, [sp, #28]
   153f4:	str	r3, [r7, #4]
   153f8:	ldr	r8, [sp, #36]	; 0x24
   153fc:	ldr	fp, [r4]
   15400:	ldr	r7, [r4, #4]
   15404:	ldr	r2, [sp, #72]	; 0x48
   15408:	ldr	r3, [sp, #32]
   1540c:	ldr	ip, [sp, #76]	; 0x4c
   15410:	orr	r8, r8, #1
   15414:	str	r2, [sp, #12]
   15418:	str	r3, [sp]
   1541c:	str	r8, [sp, #4]
   15420:	str	r5, [sp, #8]
   15424:	mov	r1, fp
   15428:	mov	r0, r7
   1542c:	str	ip, [sp, #16]
   15430:	mvn	r3, #0
   15434:	mov	r2, r6
   15438:	bl	12a54 <strspn@plt+0x1a70>
   1543c:	cmp	fp, r0
   15440:	bhi	154a0 <strspn@plt+0x44bc>
   15444:	ldr	r3, [pc, #156]	; 154e8 <strspn@plt+0x4504>
   15448:	add	fp, r0, #1
   1544c:	cmp	r7, r3
   15450:	str	fp, [r4]
   15454:	beq	15460 <strspn@plt+0x447c>
   15458:	mov	r0, r7
   1545c:	bl	12828 <strspn@plt+0x1844>
   15460:	mov	r0, fp
   15464:	bl	17330 <strspn@plt+0x634c>
   15468:	ldr	lr, [sp, #76]	; 0x4c
   1546c:	ldr	r3, [sp, #32]
   15470:	ldr	ip, [sp, #72]	; 0x48
   15474:	mov	r2, r6
   15478:	mov	r1, fp
   1547c:	str	r0, [r4, #4]
   15480:	str	r3, [sp]
   15484:	str	r5, [sp, #8]
   15488:	str	r8, [sp, #4]
   1548c:	str	lr, [sp, #16]
   15490:	str	ip, [sp, #12]
   15494:	mvn	r3, #0
   15498:	mov	r7, r0
   1549c:	bl	12a54 <strspn@plt+0x1a70>
   154a0:	mov	r0, r7
   154a4:	str	sl, [r9]
   154a8:	add	sp, sp, #84	; 0x54
   154ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154b0:	mov	r3, #8
   154b4:	str	r3, [sp]
   154b8:	add	r1, sp, #28
   154bc:	rsb	r2, r2, #1
   154c0:	mvn	r3, #-2147483648	; 0x80000000
   154c4:	mov	r0, #0
   154c8:	bl	1754c <strspn@plt+0x6568>
   154cc:	mov	r4, r0
   154d0:	ldm	r8, {r0, r1}
   154d4:	str	r4, [r7]
   154d8:	stm	r4, {r0, r1}
   154dc:	b	153d4 <strspn@plt+0x43f0>
   154e0:	muleq	r2, r8, r1
   154e4:	andeq	sl, r2, r4, lsl #2
   154e8:	andeq	sl, r2, r8, asr #3
   154ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154f0:	mov	r6, r0
   154f4:	ldr	lr, [pc, #404]	; 15690 <strspn@plt+0x46ac>
   154f8:	sub	sp, sp, #84	; 0x54
   154fc:	add	ip, sp, #32
   15500:	ldm	lr!, {r0, r1, r2, r3}
   15504:	ldr	r5, [pc, #392]	; 15694 <strspn@plt+0x46b0>
   15508:	stmia	ip!, {r0, r1, r2, r3}
   1550c:	ldm	lr!, {r0, r1, r2, r3}
   15510:	ldr	r4, [sp, #44]	; 0x2c
   15514:	stmia	ip!, {r0, r1, r2, r3}
   15518:	ldm	lr, {r0, r1, r2, r3}
   1551c:	mvn	lr, r4
   15520:	and	lr, lr, #67108864	; 0x4000000
   15524:	eor	lr, lr, r4
   15528:	stm	ip, {r0, r1, r2, r3}
   1552c:	str	lr, [sp, #44]	; 0x2c
   15530:	bl	10f18 <__errno_location@plt>
   15534:	ldr	r2, [r5, #4]
   15538:	ldr	r4, [r5]
   1553c:	cmp	r2, #0
   15540:	mov	r8, r0
   15544:	ldr	sl, [r0]
   15548:	bgt	155a4 <strspn@plt+0x45c0>
   1554c:	add	r7, r5, #8
   15550:	cmp	r4, r7
   15554:	str	r2, [sp, #28]
   15558:	beq	15660 <strspn@plt+0x467c>
   1555c:	mov	r3, #8
   15560:	mov	r0, r4
   15564:	str	r3, [sp]
   15568:	rsb	r2, r2, #1
   1556c:	mvn	r3, #-2147483648	; 0x80000000
   15570:	add	r1, sp, #28
   15574:	bl	1754c <strspn@plt+0x6568>
   15578:	mov	r4, r0
   1557c:	str	r0, [r5]
   15580:	ldr	r0, [r5, #4]
   15584:	ldr	r2, [sp, #28]
   15588:	mov	r1, #0
   1558c:	sub	r2, r2, r0
   15590:	add	r0, r4, r0, lsl #3
   15594:	lsl	r2, r2, #3
   15598:	bl	10f3c <memset@plt>
   1559c:	ldr	r3, [sp, #28]
   155a0:	str	r3, [r5, #4]
   155a4:	ldr	r7, [sp, #36]	; 0x24
   155a8:	ldr	r9, [r4]
   155ac:	ldr	r5, [r4, #4]
   155b0:	ldr	r2, [sp, #72]	; 0x48
   155b4:	ldr	r3, [sp, #32]
   155b8:	ldr	ip, [sp, #76]	; 0x4c
   155bc:	orr	r7, r7, #1
   155c0:	add	fp, sp, #40	; 0x28
   155c4:	str	r2, [sp, #12]
   155c8:	str	r3, [sp]
   155cc:	str	r7, [sp, #4]
   155d0:	mov	r1, r9
   155d4:	mov	r0, r5
   155d8:	str	ip, [sp, #16]
   155dc:	str	fp, [sp, #8]
   155e0:	mvn	r3, #0
   155e4:	mov	r2, r6
   155e8:	bl	12a54 <strspn@plt+0x1a70>
   155ec:	cmp	r9, r0
   155f0:	bhi	15650 <strspn@plt+0x466c>
   155f4:	ldr	r3, [pc, #156]	; 15698 <strspn@plt+0x46b4>
   155f8:	add	r9, r0, #1
   155fc:	cmp	r5, r3
   15600:	str	r9, [r4]
   15604:	beq	15610 <strspn@plt+0x462c>
   15608:	mov	r0, r5
   1560c:	bl	12828 <strspn@plt+0x1844>
   15610:	mov	r0, r9
   15614:	bl	17330 <strspn@plt+0x634c>
   15618:	ldr	lr, [sp, #76]	; 0x4c
   1561c:	ldr	r3, [sp, #32]
   15620:	ldr	ip, [sp, #72]	; 0x48
   15624:	mov	r2, r6
   15628:	mov	r1, r9
   1562c:	str	r0, [r4, #4]
   15630:	str	r3, [sp]
   15634:	str	fp, [sp, #8]
   15638:	str	r7, [sp, #4]
   1563c:	str	lr, [sp, #16]
   15640:	str	ip, [sp, #12]
   15644:	mvn	r3, #0
   15648:	mov	r5, r0
   1564c:	bl	12a54 <strspn@plt+0x1a70>
   15650:	mov	r0, r5
   15654:	str	sl, [r8]
   15658:	add	sp, sp, #84	; 0x54
   1565c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15660:	mov	r3, #8
   15664:	str	r3, [sp]
   15668:	add	r1, sp, #28
   1566c:	rsb	r2, r2, #1
   15670:	mvn	r3, #-2147483648	; 0x80000000
   15674:	mov	r0, #0
   15678:	bl	1754c <strspn@plt+0x6568>
   1567c:	mov	r4, r0
   15680:	ldm	r7, {r0, r1}
   15684:	str	r4, [r5]
   15688:	stm	r4, {r0, r1}
   1568c:	b	15580 <strspn@plt+0x459c>
   15690:	muleq	r2, r8, r1
   15694:	andeq	sl, r2, r4, lsl #2
   15698:	andeq	sl, r2, r8, asr #3
   1569c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156a0:	mov	r9, r0
   156a4:	ldr	lr, [pc, #416]	; 1584c <strspn@plt+0x4868>
   156a8:	mov	sl, r1
   156ac:	sub	sp, sp, #92	; 0x5c
   156b0:	ldm	lr!, {r0, r1, r2, r3}
   156b4:	add	ip, sp, #40	; 0x28
   156b8:	ldr	r5, [pc, #400]	; 15850 <strspn@plt+0x486c>
   156bc:	stmia	ip!, {r0, r1, r2, r3}
   156c0:	ldm	lr!, {r0, r1, r2, r3}
   156c4:	ldr	r4, [sp, #52]	; 0x34
   156c8:	stmia	ip!, {r0, r1, r2, r3}
   156cc:	ldm	lr, {r0, r1, r2, r3}
   156d0:	mvn	lr, r4
   156d4:	and	lr, lr, #67108864	; 0x4000000
   156d8:	eor	lr, lr, r4
   156dc:	stm	ip, {r0, r1, r2, r3}
   156e0:	str	lr, [sp, #52]	; 0x34
   156e4:	bl	10f18 <__errno_location@plt>
   156e8:	ldr	r2, [r5, #4]
   156ec:	ldr	r4, [r5]
   156f0:	cmp	r2, #0
   156f4:	ldr	r3, [r0]
   156f8:	mov	r7, r0
   156fc:	str	r3, [sp, #28]
   15700:	bgt	1575c <strspn@plt+0x4778>
   15704:	add	r6, r5, #8
   15708:	cmp	r4, r6
   1570c:	str	r2, [sp, #36]	; 0x24
   15710:	beq	1581c <strspn@plt+0x4838>
   15714:	mov	r3, #8
   15718:	mov	r0, r4
   1571c:	str	r3, [sp]
   15720:	rsb	r2, r2, #1
   15724:	mvn	r3, #-2147483648	; 0x80000000
   15728:	add	r1, sp, #36	; 0x24
   1572c:	bl	1754c <strspn@plt+0x6568>
   15730:	mov	r4, r0
   15734:	str	r0, [r5]
   15738:	ldr	r0, [r5, #4]
   1573c:	ldr	r2, [sp, #36]	; 0x24
   15740:	mov	r1, #0
   15744:	sub	r2, r2, r0
   15748:	add	r0, r4, r0, lsl #3
   1574c:	lsl	r2, r2, #3
   15750:	bl	10f3c <memset@plt>
   15754:	ldr	r3, [sp, #36]	; 0x24
   15758:	str	r3, [r5, #4]
   1575c:	ldr	r6, [sp, #44]	; 0x2c
   15760:	ldr	r8, [r4]
   15764:	ldr	r5, [r4, #4]
   15768:	ldr	r2, [sp, #80]	; 0x50
   1576c:	ldr	r3, [sp, #40]	; 0x28
   15770:	ldr	ip, [sp, #84]	; 0x54
   15774:	orr	r6, r6, #1
   15778:	add	fp, sp, #48	; 0x30
   1577c:	str	r2, [sp, #12]
   15780:	str	r3, [sp]
   15784:	str	r6, [sp, #4]
   15788:	mov	r1, r8
   1578c:	mov	r0, r5
   15790:	str	ip, [sp, #16]
   15794:	str	fp, [sp, #8]
   15798:	mov	r3, sl
   1579c:	mov	r2, r9
   157a0:	bl	12a54 <strspn@plt+0x1a70>
   157a4:	cmp	r8, r0
   157a8:	bhi	15808 <strspn@plt+0x4824>
   157ac:	ldr	r3, [pc, #160]	; 15854 <strspn@plt+0x4870>
   157b0:	add	r8, r0, #1
   157b4:	cmp	r5, r3
   157b8:	str	r8, [r4]
   157bc:	beq	157c8 <strspn@plt+0x47e4>
   157c0:	mov	r0, r5
   157c4:	bl	12828 <strspn@plt+0x1844>
   157c8:	mov	r0, r8
   157cc:	bl	17330 <strspn@plt+0x634c>
   157d0:	ldr	ip, [sp, #84]	; 0x54
   157d4:	ldr	lr, [sp, #40]	; 0x28
   157d8:	mov	r3, sl
   157dc:	mov	r2, r9
   157e0:	mov	r1, r8
   157e4:	str	r0, [r4, #4]
   157e8:	ldr	r4, [sp, #80]	; 0x50
   157ec:	str	fp, [sp, #8]
   157f0:	str	r6, [sp, #4]
   157f4:	str	ip, [sp, #16]
   157f8:	str	r4, [sp, #12]
   157fc:	str	lr, [sp]
   15800:	mov	r5, r0
   15804:	bl	12a54 <strspn@plt+0x1a70>
   15808:	ldr	r3, [sp, #28]
   1580c:	mov	r0, r5
   15810:	str	r3, [r7]
   15814:	add	sp, sp, #92	; 0x5c
   15818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1581c:	mov	r3, #8
   15820:	str	r3, [sp]
   15824:	add	r1, sp, #36	; 0x24
   15828:	rsb	r2, r2, #1
   1582c:	mvn	r3, #-2147483648	; 0x80000000
   15830:	mov	r0, #0
   15834:	bl	1754c <strspn@plt+0x6568>
   15838:	mov	r4, r0
   1583c:	ldm	r6, {r0, r1}
   15840:	str	r4, [r5]
   15844:	stm	r4, {r0, r1}
   15848:	b	15738 <strspn@plt+0x4754>
   1584c:	muleq	r2, r8, r1
   15850:	andeq	sl, r2, r4, lsl #2
   15854:	andeq	sl, r2, r8, asr #3
   15858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1585c:	sub	sp, sp, #180	; 0xb4
   15860:	mov	r6, r1
   15864:	mov	r4, r0
   15868:	mov	r9, r2
   1586c:	add	r0, sp, #80	; 0x50
   15870:	mov	r2, #48	; 0x30
   15874:	mov	r1, #0
   15878:	bl	10f3c <memset@plt>
   1587c:	cmp	r6, #10
   15880:	beq	15a60 <strspn@plt+0x4a7c>
   15884:	add	r5, sp, #80	; 0x50
   15888:	str	r6, [sp, #80]	; 0x50
   1588c:	ldm	r5!, {r0, r1, r2, r3}
   15890:	add	ip, sp, #128	; 0x80
   15894:	mov	r7, ip
   15898:	add	lr, sp, #32
   1589c:	stmia	ip!, {r0, r1, r2, r3}
   158a0:	mov	r8, #67108864	; 0x4000000
   158a4:	ldm	r5!, {r0, r1, r2, r3}
   158a8:	ldr	r6, [pc, #436]	; 15a64 <strspn@plt+0x4a80>
   158ac:	stmia	ip!, {r0, r1, r2, r3}
   158b0:	ldm	r5, {r0, r1, r2, r3}
   158b4:	stm	ip, {r0, r1, r2, r3}
   158b8:	ldm	r7!, {r0, r1, r2, r3}
   158bc:	stmia	lr!, {r0, r1, r2, r3}
   158c0:	ldm	r7!, {r0, r1, r2, r3}
   158c4:	str	r8, [sp, #44]	; 0x2c
   158c8:	stmia	lr!, {r0, r1, r2, r3}
   158cc:	ldm	ip, {r0, r1, r2, r3}
   158d0:	stm	lr, {r0, r1, r2, r3}
   158d4:	bl	10f18 <__errno_location@plt>
   158d8:	cmn	r4, #-2147483647	; 0x80000001
   158dc:	ldr	r5, [r6]
   158e0:	mov	r7, r0
   158e4:	movne	r0, #0
   158e8:	moveq	r0, #1
   158ec:	ldr	r3, [r7]
   158f0:	orrs	r0, r0, r4, lsr #31
   158f4:	str	r3, [sp, #24]
   158f8:	bne	15a60 <strspn@plt+0x4a7c>
   158fc:	ldr	r2, [r6, #4]
   15900:	cmp	r4, r2
   15904:	blt	15964 <strspn@plt+0x4980>
   15908:	add	r8, r6, #8
   1590c:	cmp	r5, r8
   15910:	str	r2, [sp, #80]	; 0x50
   15914:	beq	15a30 <strspn@plt+0x4a4c>
   15918:	mov	r3, #8
   1591c:	sub	r2, r4, r2
   15920:	mov	r0, r5
   15924:	str	r3, [sp]
   15928:	add	r2, r2, #1
   1592c:	add	r1, sp, #80	; 0x50
   15930:	mvn	r3, #-2147483648	; 0x80000000
   15934:	bl	1754c <strspn@plt+0x6568>
   15938:	mov	r5, r0
   1593c:	str	r0, [r6]
   15940:	ldr	r0, [r6, #4]
   15944:	ldr	r2, [sp, #80]	; 0x50
   15948:	mov	r1, #0
   1594c:	sub	r2, r2, r0
   15950:	add	r0, r5, r0, lsl #3
   15954:	lsl	r2, r2, #3
   15958:	bl	10f3c <memset@plt>
   1595c:	ldr	r3, [sp, #80]	; 0x50
   15960:	str	r3, [r6, #4]
   15964:	add	fp, r5, r4, lsl #3
   15968:	ldr	r1, [sp, #36]	; 0x24
   1596c:	ldr	r8, [r5, r4, lsl #3]
   15970:	ldr	r6, [fp, #4]
   15974:	ldr	r2, [sp, #72]	; 0x48
   15978:	ldr	r3, [sp, #32]
   1597c:	ldr	ip, [sp, #76]	; 0x4c
   15980:	orr	r1, r1, #1
   15984:	add	sl, sp, #40	; 0x28
   15988:	str	r1, [sp, #28]
   1598c:	str	r1, [sp, #4]
   15990:	str	r2, [sp, #12]
   15994:	str	r3, [sp]
   15998:	mov	r0, r6
   1599c:	mov	r1, r8
   159a0:	str	ip, [sp, #16]
   159a4:	str	sl, [sp, #8]
   159a8:	mvn	r3, #0
   159ac:	mov	r2, r9
   159b0:	bl	12a54 <strspn@plt+0x1a70>
   159b4:	cmp	r8, r0
   159b8:	bhi	15a1c <strspn@plt+0x4a38>
   159bc:	ldr	r3, [pc, #164]	; 15a68 <strspn@plt+0x4a84>
   159c0:	add	r8, r0, #1
   159c4:	cmp	r6, r3
   159c8:	str	r8, [r5, r4, lsl #3]
   159cc:	beq	159d8 <strspn@plt+0x49f4>
   159d0:	mov	r0, r6
   159d4:	bl	12828 <strspn@plt+0x1844>
   159d8:	mov	r0, r8
   159dc:	bl	17330 <strspn@plt+0x634c>
   159e0:	ldr	lr, [sp, #76]	; 0x4c
   159e4:	ldr	r3, [sp, #32]
   159e8:	ldr	ip, [sp, #72]	; 0x48
   159ec:	ldr	r4, [sp, #28]
   159f0:	mov	r2, r9
   159f4:	mov	r1, r8
   159f8:	str	r0, [fp, #4]
   159fc:	str	r3, [sp]
   15a00:	str	sl, [sp, #8]
   15a04:	str	r4, [sp, #4]
   15a08:	str	lr, [sp, #16]
   15a0c:	str	ip, [sp, #12]
   15a10:	mvn	r3, #0
   15a14:	mov	r6, r0
   15a18:	bl	12a54 <strspn@plt+0x1a70>
   15a1c:	ldr	r3, [sp, #24]
   15a20:	mov	r0, r6
   15a24:	str	r3, [r7]
   15a28:	add	sp, sp, #180	; 0xb4
   15a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a30:	mov	r3, #8
   15a34:	sub	r2, r4, r2
   15a38:	add	r1, sp, #80	; 0x50
   15a3c:	str	r3, [sp]
   15a40:	add	r2, r2, #1
   15a44:	mvn	r3, #-2147483648	; 0x80000000
   15a48:	bl	1754c <strspn@plt+0x6568>
   15a4c:	mov	r5, r0
   15a50:	ldm	r8, {r0, r1}
   15a54:	str	r5, [r6]
   15a58:	stm	r5, {r0, r1}
   15a5c:	b	15940 <strspn@plt+0x495c>
   15a60:	bl	10fd8 <abort@plt>
   15a64:	andeq	sl, r2, r4, lsl #2
   15a68:	andeq	sl, r2, r8, asr #3
   15a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a70:	mov	r7, r1
   15a74:	ldr	lr, [pc, #492]	; 15c68 <strspn@plt+0x4c84>
   15a78:	mov	r8, r2
   15a7c:	mov	r4, r0
   15a80:	mov	fp, r3
   15a84:	ldm	lr!, {r0, r1, r2, r3}
   15a88:	sub	sp, sp, #100	; 0x64
   15a8c:	add	ip, sp, #48	; 0x30
   15a90:	mov	sl, #10
   15a94:	stmia	ip!, {r0, r1, r2, r3}
   15a98:	cmp	r8, #0
   15a9c:	cmpne	r7, #0
   15aa0:	ldm	lr!, {r0, r1, r2, r3}
   15aa4:	str	sl, [sp, #48]	; 0x30
   15aa8:	stmia	ip!, {r0, r1, r2, r3}
   15aac:	ldm	lr, {r0, r1, r2, r3}
   15ab0:	stm	ip, {r0, r1, r2, r3}
   15ab4:	beq	15c64 <strspn@plt+0x4c80>
   15ab8:	str	r7, [sp, #88]	; 0x58
   15abc:	str	r8, [sp, #92]	; 0x5c
   15ac0:	bl	10f18 <__errno_location@plt>
   15ac4:	ldr	r6, [pc, #416]	; 15c6c <strspn@plt+0x4c88>
   15ac8:	cmn	r4, #-2147483647	; 0x80000001
   15acc:	ldr	r5, [r6]
   15ad0:	mov	r9, r0
   15ad4:	movne	r0, #0
   15ad8:	moveq	r0, #1
   15adc:	ldr	r3, [r9]
   15ae0:	orrs	r0, r0, r4, lsr #31
   15ae4:	str	r3, [sp, #28]
   15ae8:	bne	15c64 <strspn@plt+0x4c80>
   15aec:	ldr	r2, [r6, #4]
   15af0:	cmp	r4, r2
   15af4:	movlt	r3, sl
   15af8:	blt	15b64 <strspn@plt+0x4b80>
   15afc:	add	r7, r6, #8
   15b00:	cmp	r5, r7
   15b04:	str	r2, [sp, #44]	; 0x2c
   15b08:	beq	15c34 <strspn@plt+0x4c50>
   15b0c:	mov	r3, #8
   15b10:	sub	r2, r4, r2
   15b14:	mov	r0, r5
   15b18:	str	r3, [sp]
   15b1c:	add	r2, r2, #1
   15b20:	mvn	r3, #-2147483648	; 0x80000000
   15b24:	add	r1, sp, #44	; 0x2c
   15b28:	bl	1754c <strspn@plt+0x6568>
   15b2c:	mov	r5, r0
   15b30:	str	r0, [r6]
   15b34:	ldr	r0, [r6, #4]
   15b38:	ldr	r2, [sp, #44]	; 0x2c
   15b3c:	mov	r1, #0
   15b40:	sub	r2, r2, r0
   15b44:	add	r0, r5, r0, lsl #3
   15b48:	lsl	r2, r2, #3
   15b4c:	bl	10f3c <memset@plt>
   15b50:	ldr	r3, [sp, #48]	; 0x30
   15b54:	ldr	r7, [sp, #88]	; 0x58
   15b58:	ldr	r8, [sp, #92]	; 0x5c
   15b5c:	ldr	r2, [sp, #44]	; 0x2c
   15b60:	str	r2, [r6, #4]
   15b64:	add	r2, r5, r4, lsl #3
   15b68:	mov	r1, r2
   15b6c:	str	r2, [sp, #32]
   15b70:	ldr	r2, [sp, #52]	; 0x34
   15b74:	ldr	r6, [r1, #4]
   15b78:	ldr	sl, [r5, r4, lsl #3]
   15b7c:	orr	r2, r2, #1
   15b80:	str	r3, [sp]
   15b84:	add	r3, sp, #56	; 0x38
   15b88:	str	r2, [sp, #36]	; 0x24
   15b8c:	str	r2, [sp, #4]
   15b90:	str	r3, [sp, #8]
   15b94:	mov	r0, r6
   15b98:	str	r8, [sp, #16]
   15b9c:	str	r7, [sp, #12]
   15ba0:	mov	r1, sl
   15ba4:	mvn	r3, #0
   15ba8:	mov	r2, fp
   15bac:	bl	12a54 <strspn@plt+0x1a70>
   15bb0:	cmp	sl, r0
   15bb4:	bhi	15c20 <strspn@plt+0x4c3c>
   15bb8:	ldr	r3, [pc, #176]	; 15c70 <strspn@plt+0x4c8c>
   15bbc:	add	r7, r0, #1
   15bc0:	cmp	r6, r3
   15bc4:	str	r7, [r5, r4, lsl #3]
   15bc8:	beq	15bd4 <strspn@plt+0x4bf0>
   15bcc:	mov	r0, r6
   15bd0:	bl	12828 <strspn@plt+0x1844>
   15bd4:	mov	r0, r7
   15bd8:	bl	17330 <strspn@plt+0x634c>
   15bdc:	ldr	r3, [sp, #32]
   15be0:	ldr	lr, [sp, #92]	; 0x5c
   15be4:	ldr	ip, [sp, #88]	; 0x58
   15be8:	ldr	r4, [sp, #36]	; 0x24
   15bec:	mov	r2, fp
   15bf0:	mov	r1, r7
   15bf4:	str	r0, [r3, #4]
   15bf8:	add	r3, sp, #56	; 0x38
   15bfc:	str	r3, [sp, #8]
   15c00:	ldr	r3, [sp, #48]	; 0x30
   15c04:	str	r4, [sp, #4]
   15c08:	str	r3, [sp]
   15c0c:	str	lr, [sp, #16]
   15c10:	str	ip, [sp, #12]
   15c14:	mvn	r3, #0
   15c18:	mov	r6, r0
   15c1c:	bl	12a54 <strspn@plt+0x1a70>
   15c20:	ldr	r3, [sp, #28]
   15c24:	mov	r0, r6
   15c28:	str	r3, [r9]
   15c2c:	add	sp, sp, #100	; 0x64
   15c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c34:	mov	r3, #8
   15c38:	sub	r2, r4, r2
   15c3c:	str	r3, [sp]
   15c40:	add	r1, sp, #44	; 0x2c
   15c44:	add	r2, r2, #1
   15c48:	mvn	r3, #-2147483648	; 0x80000000
   15c4c:	bl	1754c <strspn@plt+0x6568>
   15c50:	mov	r5, r0
   15c54:	ldm	r7, {r0, r1}
   15c58:	str	r5, [r6]
   15c5c:	stm	r5, {r0, r1}
   15c60:	b	15b34 <strspn@plt+0x4b50>
   15c64:	bl	10fd8 <abort@plt>
   15c68:	muleq	r2, r8, r1
   15c6c:	andeq	sl, r2, r4, lsl #2
   15c70:	andeq	sl, r2, r8, asr #3
   15c74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c78:	mov	r7, r1
   15c7c:	ldr	lr, [pc, #492]	; 15e70 <strspn@plt+0x4e8c>
   15c80:	mov	r8, r2
   15c84:	mov	r4, r0
   15c88:	mov	fp, r3
   15c8c:	ldm	lr!, {r0, r1, r2, r3}
   15c90:	sub	sp, sp, #100	; 0x64
   15c94:	add	ip, sp, #48	; 0x30
   15c98:	mov	sl, #10
   15c9c:	stmia	ip!, {r0, r1, r2, r3}
   15ca0:	cmp	r8, #0
   15ca4:	cmpne	r7, #0
   15ca8:	ldm	lr!, {r0, r1, r2, r3}
   15cac:	str	sl, [sp, #48]	; 0x30
   15cb0:	stmia	ip!, {r0, r1, r2, r3}
   15cb4:	ldm	lr, {r0, r1, r2, r3}
   15cb8:	stm	ip, {r0, r1, r2, r3}
   15cbc:	beq	15e6c <strspn@plt+0x4e88>
   15cc0:	str	r7, [sp, #88]	; 0x58
   15cc4:	str	r8, [sp, #92]	; 0x5c
   15cc8:	bl	10f18 <__errno_location@plt>
   15ccc:	ldr	r6, [pc, #416]	; 15e74 <strspn@plt+0x4e90>
   15cd0:	cmn	r4, #-2147483647	; 0x80000001
   15cd4:	ldr	r5, [r6]
   15cd8:	mov	r9, r0
   15cdc:	movne	r0, #0
   15ce0:	moveq	r0, #1
   15ce4:	ldr	r3, [r9]
   15ce8:	orrs	r0, r0, r4, lsr #31
   15cec:	str	r3, [sp, #28]
   15cf0:	bne	15e6c <strspn@plt+0x4e88>
   15cf4:	ldr	r2, [r6, #4]
   15cf8:	cmp	r4, r2
   15cfc:	movlt	r3, sl
   15d00:	blt	15d6c <strspn@plt+0x4d88>
   15d04:	add	r7, r6, #8
   15d08:	cmp	r5, r7
   15d0c:	str	r2, [sp, #44]	; 0x2c
   15d10:	beq	15e3c <strspn@plt+0x4e58>
   15d14:	mov	r3, #8
   15d18:	sub	r2, r4, r2
   15d1c:	mov	r0, r5
   15d20:	str	r3, [sp]
   15d24:	add	r2, r2, #1
   15d28:	mvn	r3, #-2147483648	; 0x80000000
   15d2c:	add	r1, sp, #44	; 0x2c
   15d30:	bl	1754c <strspn@plt+0x6568>
   15d34:	mov	r5, r0
   15d38:	str	r0, [r6]
   15d3c:	ldr	r0, [r6, #4]
   15d40:	ldr	r2, [sp, #44]	; 0x2c
   15d44:	mov	r1, #0
   15d48:	sub	r2, r2, r0
   15d4c:	add	r0, r5, r0, lsl #3
   15d50:	lsl	r2, r2, #3
   15d54:	bl	10f3c <memset@plt>
   15d58:	ldr	r3, [sp, #48]	; 0x30
   15d5c:	ldr	r7, [sp, #88]	; 0x58
   15d60:	ldr	r8, [sp, #92]	; 0x5c
   15d64:	ldr	r2, [sp, #44]	; 0x2c
   15d68:	str	r2, [r6, #4]
   15d6c:	add	r2, r5, r4, lsl #3
   15d70:	mov	r1, r2
   15d74:	str	r2, [sp, #32]
   15d78:	ldr	r2, [sp, #52]	; 0x34
   15d7c:	ldr	r6, [r1, #4]
   15d80:	ldr	sl, [r5, r4, lsl #3]
   15d84:	orr	r2, r2, #1
   15d88:	str	r3, [sp]
   15d8c:	add	r3, sp, #56	; 0x38
   15d90:	str	r2, [sp, #36]	; 0x24
   15d94:	str	r2, [sp, #4]
   15d98:	str	r3, [sp, #8]
   15d9c:	mov	r0, r6
   15da0:	str	r8, [sp, #16]
   15da4:	str	r7, [sp, #12]
   15da8:	mov	r1, sl
   15dac:	ldr	r3, [sp, #136]	; 0x88
   15db0:	mov	r2, fp
   15db4:	bl	12a54 <strspn@plt+0x1a70>
   15db8:	cmp	sl, r0
   15dbc:	bhi	15e28 <strspn@plt+0x4e44>
   15dc0:	ldr	r3, [pc, #176]	; 15e78 <strspn@plt+0x4e94>
   15dc4:	add	r7, r0, #1
   15dc8:	cmp	r6, r3
   15dcc:	str	r7, [r5, r4, lsl #3]
   15dd0:	beq	15ddc <strspn@plt+0x4df8>
   15dd4:	mov	r0, r6
   15dd8:	bl	12828 <strspn@plt+0x1844>
   15ddc:	mov	r0, r7
   15de0:	bl	17330 <strspn@plt+0x634c>
   15de4:	ldr	r3, [sp, #32]
   15de8:	ldr	lr, [sp, #92]	; 0x5c
   15dec:	ldr	ip, [sp, #88]	; 0x58
   15df0:	ldr	r4, [sp, #36]	; 0x24
   15df4:	mov	r2, fp
   15df8:	mov	r1, r7
   15dfc:	str	r0, [r3, #4]
   15e00:	add	r3, sp, #56	; 0x38
   15e04:	str	r3, [sp, #8]
   15e08:	ldr	r3, [sp, #48]	; 0x30
   15e0c:	str	r4, [sp, #4]
   15e10:	str	r3, [sp]
   15e14:	str	lr, [sp, #16]
   15e18:	str	ip, [sp, #12]
   15e1c:	ldr	r3, [sp, #136]	; 0x88
   15e20:	mov	r6, r0
   15e24:	bl	12a54 <strspn@plt+0x1a70>
   15e28:	ldr	r3, [sp, #28]
   15e2c:	mov	r0, r6
   15e30:	str	r3, [r9]
   15e34:	add	sp, sp, #100	; 0x64
   15e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e3c:	mov	r3, #8
   15e40:	sub	r2, r4, r2
   15e44:	str	r3, [sp]
   15e48:	add	r1, sp, #44	; 0x2c
   15e4c:	add	r2, r2, #1
   15e50:	mvn	r3, #-2147483648	; 0x80000000
   15e54:	bl	1754c <strspn@plt+0x6568>
   15e58:	mov	r5, r0
   15e5c:	ldm	r7, {r0, r1}
   15e60:	str	r5, [r6]
   15e64:	stm	r5, {r0, r1}
   15e68:	b	15d3c <strspn@plt+0x4d58>
   15e6c:	bl	10fd8 <abort@plt>
   15e70:	muleq	r2, r8, r1
   15e74:	andeq	sl, r2, r4, lsl #2
   15e78:	andeq	sl, r2, r8, asr #3
   15e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e80:	mov	r5, r0
   15e84:	ldr	lr, [pc, #452]	; 16050 <strspn@plt+0x506c>
   15e88:	mov	r6, r1
   15e8c:	mov	sl, r2
   15e90:	ldm	lr!, {r0, r1, r2, r3}
   15e94:	sub	sp, sp, #92	; 0x5c
   15e98:	add	ip, sp, #40	; 0x28
   15e9c:	cmp	r6, #0
   15ea0:	cmpne	r5, #0
   15ea4:	stmia	ip!, {r0, r1, r2, r3}
   15ea8:	mov	r9, #10
   15eac:	ldm	lr!, {r0, r1, r2, r3}
   15eb0:	moveq	fp, #1
   15eb4:	movne	fp, #0
   15eb8:	str	r9, [sp, #40]	; 0x28
   15ebc:	stmia	ip!, {r0, r1, r2, r3}
   15ec0:	ldm	lr, {r0, r1, r2, r3}
   15ec4:	stm	ip, {r0, r1, r2, r3}
   15ec8:	beq	1604c <strspn@plt+0x5068>
   15ecc:	str	r5, [sp, #80]	; 0x50
   15ed0:	str	r6, [sp, #84]	; 0x54
   15ed4:	bl	10f18 <__errno_location@plt>
   15ed8:	ldr	r7, [pc, #372]	; 16054 <strspn@plt+0x5070>
   15edc:	ldr	r2, [r7, #4]
   15ee0:	ldr	r4, [r7]
   15ee4:	cmp	r2, #0
   15ee8:	ldr	r3, [r0]
   15eec:	mov	r8, r0
   15ef0:	str	r3, [sp, #24]
   15ef4:	movgt	r3, r9
   15ef8:	bgt	15f60 <strspn@plt+0x4f7c>
   15efc:	add	r5, r7, #8
   15f00:	cmp	r4, r5
   15f04:	str	r2, [sp, #36]	; 0x24
   15f08:	beq	1601c <strspn@plt+0x5038>
   15f0c:	mov	r3, #8
   15f10:	mov	r0, r4
   15f14:	str	r3, [sp]
   15f18:	rsb	r2, r2, #1
   15f1c:	mvn	r3, #-2147483648	; 0x80000000
   15f20:	add	r1, sp, #36	; 0x24
   15f24:	bl	1754c <strspn@plt+0x6568>
   15f28:	mov	r4, r0
   15f2c:	str	r0, [r7]
   15f30:	ldr	r0, [r7, #4]
   15f34:	ldr	r2, [sp, #36]	; 0x24
   15f38:	mov	r1, #0
   15f3c:	sub	r2, r2, r0
   15f40:	add	r0, r4, r0, lsl #3
   15f44:	lsl	r2, r2, #3
   15f48:	bl	10f3c <memset@plt>
   15f4c:	ldr	r3, [sp, #40]	; 0x28
   15f50:	ldr	r5, [sp, #80]	; 0x50
   15f54:	ldr	r6, [sp, #84]	; 0x54
   15f58:	ldr	r2, [sp, #36]	; 0x24
   15f5c:	str	r2, [r7, #4]
   15f60:	ldr	r2, [sp, #44]	; 0x2c
   15f64:	ldr	r9, [r4]
   15f68:	ldr	r7, [r4, #4]
   15f6c:	orr	r2, r2, #1
   15f70:	add	fp, sp, #48	; 0x30
   15f74:	str	r2, [sp, #28]
   15f78:	str	r2, [sp, #4]
   15f7c:	str	r3, [sp]
   15f80:	str	r6, [sp, #16]
   15f84:	str	r5, [sp, #12]
   15f88:	mov	r1, r9
   15f8c:	mov	r0, r7
   15f90:	str	fp, [sp, #8]
   15f94:	mvn	r3, #0
   15f98:	mov	r2, sl
   15f9c:	bl	12a54 <strspn@plt+0x1a70>
   15fa0:	cmp	r9, r0
   15fa4:	bhi	16008 <strspn@plt+0x5024>
   15fa8:	ldr	r3, [pc, #168]	; 16058 <strspn@plt+0x5074>
   15fac:	add	r5, r0, #1
   15fb0:	cmp	r7, r3
   15fb4:	str	r5, [r4]
   15fb8:	beq	15fc4 <strspn@plt+0x4fe0>
   15fbc:	mov	r0, r7
   15fc0:	bl	12828 <strspn@plt+0x1844>
   15fc4:	mov	r0, r5
   15fc8:	bl	17330 <strspn@plt+0x634c>
   15fcc:	ldr	lr, [sp, #84]	; 0x54
   15fd0:	ldr	r3, [sp, #40]	; 0x28
   15fd4:	ldr	ip, [sp, #80]	; 0x50
   15fd8:	mov	r2, sl
   15fdc:	mov	r1, r5
   15fe0:	str	r0, [r4, #4]
   15fe4:	ldr	r4, [sp, #28]
   15fe8:	str	r3, [sp]
   15fec:	str	fp, [sp, #8]
   15ff0:	str	r4, [sp, #4]
   15ff4:	str	lr, [sp, #16]
   15ff8:	str	ip, [sp, #12]
   15ffc:	mvn	r3, #0
   16000:	mov	r7, r0
   16004:	bl	12a54 <strspn@plt+0x1a70>
   16008:	ldr	r3, [sp, #24]
   1600c:	mov	r0, r7
   16010:	str	r3, [r8]
   16014:	add	sp, sp, #92	; 0x5c
   16018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1601c:	mov	r3, #8
   16020:	str	r3, [sp]
   16024:	add	r1, sp, #36	; 0x24
   16028:	rsb	r2, r2, #1
   1602c:	mov	r0, fp
   16030:	mvn	r3, #-2147483648	; 0x80000000
   16034:	bl	1754c <strspn@plt+0x6568>
   16038:	mov	r4, r0
   1603c:	ldm	r5, {r0, r1}
   16040:	str	r4, [r7]
   16044:	stm	r4, {r0, r1}
   16048:	b	15f30 <strspn@plt+0x4f4c>
   1604c:	bl	10fd8 <abort@plt>
   16050:	muleq	r2, r8, r1
   16054:	andeq	sl, r2, r4, lsl #2
   16058:	andeq	sl, r2, r8, asr #3
   1605c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16060:	mov	r5, r0
   16064:	ldr	lr, [pc, #464]	; 1623c <strspn@plt+0x5258>
   16068:	mov	r6, r1
   1606c:	mov	sl, r2
   16070:	mov	fp, r3
   16074:	ldm	lr!, {r0, r1, r2, r3}
   16078:	sub	sp, sp, #92	; 0x5c
   1607c:	add	ip, sp, #40	; 0x28
   16080:	cmp	r6, #0
   16084:	cmpne	r5, #0
   16088:	stmia	ip!, {r0, r1, r2, r3}
   1608c:	moveq	r4, #1
   16090:	ldm	lr!, {r0, r1, r2, r3}
   16094:	movne	r4, #0
   16098:	mov	r9, #10
   1609c:	str	r4, [sp, #28]
   160a0:	stmia	ip!, {r0, r1, r2, r3}
   160a4:	ldm	lr, {r0, r1, r2, r3}
   160a8:	str	r9, [sp, #40]	; 0x28
   160ac:	stm	ip, {r0, r1, r2, r3}
   160b0:	beq	16238 <strspn@plt+0x5254>
   160b4:	str	r5, [sp, #80]	; 0x50
   160b8:	str	r6, [sp, #84]	; 0x54
   160bc:	bl	10f18 <__errno_location@plt>
   160c0:	ldr	r7, [pc, #376]	; 16240 <strspn@plt+0x525c>
   160c4:	ldr	r2, [r7, #4]
   160c8:	ldr	r4, [r7]
   160cc:	cmp	r2, #0
   160d0:	ldr	r3, [r0]
   160d4:	mov	r8, r0
   160d8:	str	r3, [sp, #24]
   160dc:	movgt	r3, r9
   160e0:	bgt	16148 <strspn@plt+0x5164>
   160e4:	add	r5, r7, #8
   160e8:	cmp	r4, r5
   160ec:	str	r2, [sp, #36]	; 0x24
   160f0:	beq	16208 <strspn@plt+0x5224>
   160f4:	mov	r3, #8
   160f8:	mov	r0, r4
   160fc:	str	r3, [sp]
   16100:	rsb	r2, r2, #1
   16104:	mvn	r3, #-2147483648	; 0x80000000
   16108:	add	r1, sp, #36	; 0x24
   1610c:	bl	1754c <strspn@plt+0x6568>
   16110:	mov	r4, r0
   16114:	str	r0, [r7]
   16118:	ldr	r0, [r7, #4]
   1611c:	ldr	r2, [sp, #36]	; 0x24
   16120:	mov	r1, #0
   16124:	sub	r2, r2, r0
   16128:	add	r0, r4, r0, lsl #3
   1612c:	lsl	r2, r2, #3
   16130:	bl	10f3c <memset@plt>
   16134:	ldr	r3, [sp, #40]	; 0x28
   16138:	ldr	r5, [sp, #80]	; 0x50
   1613c:	ldr	r6, [sp, #84]	; 0x54
   16140:	ldr	r2, [sp, #36]	; 0x24
   16144:	str	r2, [r7, #4]
   16148:	ldr	r2, [sp, #44]	; 0x2c
   1614c:	ldr	r9, [r4]
   16150:	ldr	r7, [r4, #4]
   16154:	orr	r2, r2, #1
   16158:	str	r3, [sp]
   1615c:	add	r3, sp, #48	; 0x30
   16160:	str	r2, [sp, #28]
   16164:	str	r2, [sp, #4]
   16168:	str	r3, [sp, #8]
   1616c:	str	r6, [sp, #16]
   16170:	str	r5, [sp, #12]
   16174:	mov	r1, r9
   16178:	mov	r0, r7
   1617c:	mov	r3, fp
   16180:	mov	r2, sl
   16184:	bl	12a54 <strspn@plt+0x1a70>
   16188:	cmp	r9, r0
   1618c:	bhi	161f4 <strspn@plt+0x5210>
   16190:	ldr	r3, [pc, #172]	; 16244 <strspn@plt+0x5260>
   16194:	add	r5, r0, #1
   16198:	cmp	r7, r3
   1619c:	str	r5, [r4]
   161a0:	beq	161ac <strspn@plt+0x51c8>
   161a4:	mov	r0, r7
   161a8:	bl	12828 <strspn@plt+0x1844>
   161ac:	mov	r0, r5
   161b0:	bl	17330 <strspn@plt+0x634c>
   161b4:	add	lr, sp, #48	; 0x30
   161b8:	ldr	ip, [sp, #84]	; 0x54
   161bc:	mov	r1, r5
   161c0:	ldr	r5, [sp, #28]
   161c4:	mov	r3, fp
   161c8:	mov	r2, sl
   161cc:	str	r0, [r4, #4]
   161d0:	ldr	r4, [sp, #80]	; 0x50
   161d4:	str	lr, [sp, #8]
   161d8:	ldr	lr, [sp, #40]	; 0x28
   161dc:	str	r5, [sp, #4]
   161e0:	str	ip, [sp, #16]
   161e4:	str	r4, [sp, #12]
   161e8:	str	lr, [sp]
   161ec:	mov	r7, r0
   161f0:	bl	12a54 <strspn@plt+0x1a70>
   161f4:	ldr	r3, [sp, #24]
   161f8:	mov	r0, r7
   161fc:	str	r3, [r8]
   16200:	add	sp, sp, #92	; 0x5c
   16204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16208:	mov	r3, #8
   1620c:	str	r3, [sp]
   16210:	add	r1, sp, #36	; 0x24
   16214:	rsb	r2, r2, #1
   16218:	ldr	r0, [sp, #28]
   1621c:	mvn	r3, #-2147483648	; 0x80000000
   16220:	bl	1754c <strspn@plt+0x6568>
   16224:	mov	r4, r0
   16228:	ldm	r5, {r0, r1}
   1622c:	str	r4, [r7]
   16230:	stm	r4, {r0, r1}
   16234:	b	16118 <strspn@plt+0x5134>
   16238:	bl	10fd8 <abort@plt>
   1623c:	muleq	r2, r8, r1
   16240:	andeq	sl, r2, r4, lsl #2
   16244:	andeq	sl, r2, r8, asr #3
   16248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1624c:	sub	sp, sp, #52	; 0x34
   16250:	mov	r5, r0
   16254:	mov	sl, r1
   16258:	mov	fp, r2
   1625c:	bl	10f18 <__errno_location@plt>
   16260:	ldr	r4, [pc, #404]	; 163fc <strspn@plt+0x5418>
   16264:	cmn	r5, #-2147483647	; 0x80000001
   16268:	ldr	r6, [r4]
   1626c:	mov	r8, r0
   16270:	movne	r0, #0
   16274:	moveq	r0, #1
   16278:	ldr	r3, [r8]
   1627c:	orrs	r0, r0, r5, lsr #31
   16280:	str	r3, [sp, #28]
   16284:	bne	163f8 <strspn@plt+0x5414>
   16288:	ldr	r2, [r4, #4]
   1628c:	cmp	r5, r2
   16290:	blt	162f0 <strspn@plt+0x530c>
   16294:	add	r7, r4, #8
   16298:	cmp	r6, r7
   1629c:	str	r2, [sp, #44]	; 0x2c
   162a0:	beq	163c8 <strspn@plt+0x53e4>
   162a4:	mov	r3, #8
   162a8:	sub	r2, r5, r2
   162ac:	mov	r0, r6
   162b0:	str	r3, [sp]
   162b4:	add	r2, r2, #1
   162b8:	mvn	r3, #-2147483648	; 0x80000000
   162bc:	add	r1, sp, #44	; 0x2c
   162c0:	bl	1754c <strspn@plt+0x6568>
   162c4:	mov	r6, r0
   162c8:	str	r0, [r4]
   162cc:	ldr	r0, [r4, #4]
   162d0:	ldr	r2, [sp, #44]	; 0x2c
   162d4:	mov	r1, #0
   162d8:	sub	r2, r2, r0
   162dc:	add	r0, r6, r0, lsl #3
   162e0:	lsl	r2, r2, #3
   162e4:	bl	10f3c <memset@plt>
   162e8:	ldr	r3, [sp, #44]	; 0x2c
   162ec:	str	r3, [r4, #4]
   162f0:	ldr	r2, [r4, #56]	; 0x38
   162f4:	add	r3, r6, r5, lsl #3
   162f8:	ldr	r1, [r4, #20]
   162fc:	ldr	r7, [r3, #4]
   16300:	ldr	r9, [r6, r5, lsl #3]
   16304:	ldr	ip, [r4, #60]	; 0x3c
   16308:	str	r3, [sp, #32]
   1630c:	ldr	r3, [r4, #16]
   16310:	str	r2, [sp, #12]
   16314:	ldr	r2, [pc, #228]	; 16400 <strspn@plt+0x541c>
   16318:	orr	r1, r1, #1
   1631c:	str	r1, [sp, #36]	; 0x24
   16320:	str	r1, [sp, #4]
   16324:	str	r2, [sp, #8]
   16328:	str	r3, [sp]
   1632c:	mov	r0, r7
   16330:	mov	r1, r9
   16334:	str	ip, [sp, #16]
   16338:	mov	r3, fp
   1633c:	mov	r2, sl
   16340:	bl	12a54 <strspn@plt+0x1a70>
   16344:	cmp	r9, r0
   16348:	bhi	163b4 <strspn@plt+0x53d0>
   1634c:	ldr	r3, [pc, #176]	; 16404 <strspn@plt+0x5420>
   16350:	add	r9, r0, #1
   16354:	cmp	r7, r3
   16358:	str	r9, [r6, r5, lsl #3]
   1635c:	beq	16368 <strspn@plt+0x5384>
   16360:	mov	r0, r7
   16364:	bl	12828 <strspn@plt+0x1844>
   16368:	mov	r0, r9
   1636c:	bl	17330 <strspn@plt+0x634c>
   16370:	ldr	ip, [sp, #32]
   16374:	ldr	lr, [r4, #60]	; 0x3c
   16378:	ldr	r5, [r4, #56]	; 0x38
   1637c:	mov	r3, fp
   16380:	mov	r2, sl
   16384:	mov	r1, r9
   16388:	str	r0, [ip, #4]
   1638c:	ldr	ip, [r4, #16]
   16390:	ldr	r4, [pc, #104]	; 16400 <strspn@plt+0x541c>
   16394:	str	lr, [sp, #16]
   16398:	str	r4, [sp, #8]
   1639c:	ldr	r4, [sp, #36]	; 0x24
   163a0:	str	r5, [sp, #12]
   163a4:	str	r4, [sp, #4]
   163a8:	str	ip, [sp]
   163ac:	mov	r7, r0
   163b0:	bl	12a54 <strspn@plt+0x1a70>
   163b4:	ldr	r3, [sp, #28]
   163b8:	mov	r0, r7
   163bc:	str	r3, [r8]
   163c0:	add	sp, sp, #52	; 0x34
   163c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163c8:	mov	r3, #8
   163cc:	sub	r2, r5, r2
   163d0:	str	r3, [sp]
   163d4:	add	r1, sp, #44	; 0x2c
   163d8:	add	r2, r2, #1
   163dc:	mvn	r3, #-2147483648	; 0x80000000
   163e0:	bl	1754c <strspn@plt+0x6568>
   163e4:	mov	r6, r0
   163e8:	ldm	r7, {r0, r1}
   163ec:	str	r6, [r4]
   163f0:	stm	r6, {r0, r1}
   163f4:	b	162cc <strspn@plt+0x52e8>
   163f8:	bl	10fd8 <abort@plt>
   163fc:	andeq	sl, r2, r4, lsl #2
   16400:	andeq	sl, r2, ip, lsl r1
   16404:	andeq	sl, r2, r8, asr #3
   16408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1640c:	sub	sp, sp, #44	; 0x2c
   16410:	mov	r9, r0
   16414:	mov	sl, r1
   16418:	bl	10f18 <__errno_location@plt>
   1641c:	ldr	r4, [pc, #360]	; 1658c <strspn@plt+0x55a8>
   16420:	ldr	r2, [r4, #4]
   16424:	ldr	r5, [r4]
   16428:	cmp	r2, #0
   1642c:	ldr	r3, [r0]
   16430:	mov	r7, r0
   16434:	str	r3, [sp, #24]
   16438:	bgt	16494 <strspn@plt+0x54b0>
   1643c:	add	r6, r4, #8
   16440:	cmp	r5, r6
   16444:	str	r2, [sp, #36]	; 0x24
   16448:	beq	1655c <strspn@plt+0x5578>
   1644c:	mov	r3, #8
   16450:	mov	r0, r5
   16454:	str	r3, [sp]
   16458:	rsb	r2, r2, #1
   1645c:	mvn	r3, #-2147483648	; 0x80000000
   16460:	add	r1, sp, #36	; 0x24
   16464:	bl	1754c <strspn@plt+0x6568>
   16468:	mov	r5, r0
   1646c:	str	r0, [r4]
   16470:	ldr	r0, [r4, #4]
   16474:	ldr	r2, [sp, #36]	; 0x24
   16478:	mov	r1, #0
   1647c:	sub	r2, r2, r0
   16480:	add	r0, r5, r0, lsl #3
   16484:	lsl	r2, r2, #3
   16488:	bl	10f3c <memset@plt>
   1648c:	ldr	r3, [sp, #36]	; 0x24
   16490:	str	r3, [r4, #4]
   16494:	ldr	r1, [r4, #20]
   16498:	ldr	r8, [r5]
   1649c:	ldr	r6, [r5, #4]
   164a0:	ldr	r2, [r4, #56]	; 0x38
   164a4:	ldr	r3, [r4, #16]
   164a8:	ldr	ip, [r4, #60]	; 0x3c
   164ac:	ldr	fp, [pc, #220]	; 16590 <strspn@plt+0x55ac>
   164b0:	orr	r1, r1, #1
   164b4:	str	r1, [sp, #28]
   164b8:	str	r1, [sp, #4]
   164bc:	str	r2, [sp, #12]
   164c0:	str	r3, [sp]
   164c4:	mov	r1, r8
   164c8:	mov	r0, r6
   164cc:	str	ip, [sp, #16]
   164d0:	str	fp, [sp, #8]
   164d4:	mov	r3, sl
   164d8:	mov	r2, r9
   164dc:	bl	12a54 <strspn@plt+0x1a70>
   164e0:	cmp	r8, r0
   164e4:	bhi	16548 <strspn@plt+0x5564>
   164e8:	ldr	r3, [pc, #164]	; 16594 <strspn@plt+0x55b0>
   164ec:	add	r8, r0, #1
   164f0:	cmp	r6, r3
   164f4:	str	r8, [r5]
   164f8:	beq	16504 <strspn@plt+0x5520>
   164fc:	mov	r0, r6
   16500:	bl	12828 <strspn@plt+0x1844>
   16504:	mov	r0, r8
   16508:	bl	17330 <strspn@plt+0x634c>
   1650c:	ldr	lr, [r4, #60]	; 0x3c
   16510:	ldr	ip, [r4, #16]
   16514:	mov	r3, sl
   16518:	mov	r2, r9
   1651c:	mov	r1, r8
   16520:	str	r0, [r5, #4]
   16524:	ldr	r5, [r4, #56]	; 0x38
   16528:	ldr	r4, [sp, #28]
   1652c:	str	fp, [sp, #8]
   16530:	str	r4, [sp, #4]
   16534:	str	lr, [sp, #16]
   16538:	str	r5, [sp, #12]
   1653c:	str	ip, [sp]
   16540:	mov	r6, r0
   16544:	bl	12a54 <strspn@plt+0x1a70>
   16548:	ldr	r3, [sp, #24]
   1654c:	mov	r0, r6
   16550:	str	r3, [r7]
   16554:	add	sp, sp, #44	; 0x2c
   16558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1655c:	mov	r3, #8
   16560:	str	r3, [sp]
   16564:	add	r1, sp, #36	; 0x24
   16568:	rsb	r2, r2, #1
   1656c:	mvn	r3, #-2147483648	; 0x80000000
   16570:	mov	r0, #0
   16574:	bl	1754c <strspn@plt+0x6568>
   16578:	mov	r5, r0
   1657c:	ldm	r6, {r0, r1}
   16580:	str	r5, [r4]
   16584:	stm	r5, {r0, r1}
   16588:	b	16470 <strspn@plt+0x548c>
   1658c:	andeq	sl, r2, r4, lsl #2
   16590:	andeq	sl, r2, ip, lsl r1
   16594:	andeq	sl, r2, r8, asr #3
   16598:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1659c:	sub	sp, sp, #44	; 0x2c
   165a0:	mov	r5, r0
   165a4:	mov	sl, r1
   165a8:	bl	10f18 <__errno_location@plt>
   165ac:	ldr	r4, [pc, #396]	; 16740 <strspn@plt+0x575c>
   165b0:	cmn	r5, #-2147483647	; 0x80000001
   165b4:	ldr	r6, [r4]
   165b8:	mov	r8, r0
   165bc:	movne	r0, #0
   165c0:	moveq	r0, #1
   165c4:	ldr	r3, [r8]
   165c8:	orrs	r0, r0, r5, lsr #31
   165cc:	str	r3, [sp, #24]
   165d0:	bne	1673c <strspn@plt+0x5758>
   165d4:	ldr	r2, [r4, #4]
   165d8:	cmp	r5, r2
   165dc:	blt	1663c <strspn@plt+0x5658>
   165e0:	add	r7, r4, #8
   165e4:	cmp	r6, r7
   165e8:	str	r2, [sp, #36]	; 0x24
   165ec:	beq	1670c <strspn@plt+0x5728>
   165f0:	mov	r3, #8
   165f4:	sub	r2, r5, r2
   165f8:	mov	r0, r6
   165fc:	str	r3, [sp]
   16600:	add	r2, r2, #1
   16604:	mvn	r3, #-2147483648	; 0x80000000
   16608:	add	r1, sp, #36	; 0x24
   1660c:	bl	1754c <strspn@plt+0x6568>
   16610:	mov	r6, r0
   16614:	str	r0, [r4]
   16618:	ldr	r0, [r4, #4]
   1661c:	ldr	r2, [sp, #36]	; 0x24
   16620:	mov	r1, #0
   16624:	sub	r2, r2, r0
   16628:	add	r0, r6, r0, lsl #3
   1662c:	lsl	r2, r2, #3
   16630:	bl	10f3c <memset@plt>
   16634:	ldr	r3, [sp, #36]	; 0x24
   16638:	str	r3, [r4, #4]
   1663c:	ldr	r2, [r4, #56]	; 0x38
   16640:	add	fp, r6, r5, lsl #3
   16644:	ldr	r1, [r4, #20]
   16648:	ldr	r9, [r6, r5, lsl #3]
   1664c:	ldr	r7, [fp, #4]
   16650:	ldr	r3, [r4, #16]
   16654:	ldr	ip, [r4, #60]	; 0x3c
   16658:	str	r2, [sp, #12]
   1665c:	ldr	r2, [pc, #224]	; 16744 <strspn@plt+0x5760>
   16660:	orr	r1, r1, #1
   16664:	str	r1, [sp, #28]
   16668:	str	r1, [sp, #4]
   1666c:	str	r2, [sp, #8]
   16670:	str	r3, [sp]
   16674:	mov	r0, r7
   16678:	mov	r1, r9
   1667c:	str	ip, [sp, #16]
   16680:	mvn	r3, #0
   16684:	mov	r2, sl
   16688:	bl	12a54 <strspn@plt+0x1a70>
   1668c:	cmp	r9, r0
   16690:	bhi	166f8 <strspn@plt+0x5714>
   16694:	ldr	r3, [pc, #172]	; 16748 <strspn@plt+0x5764>
   16698:	add	r9, r0, #1
   1669c:	cmp	r7, r3
   166a0:	str	r9, [r6, r5, lsl #3]
   166a4:	beq	166b0 <strspn@plt+0x56cc>
   166a8:	mov	r0, r7
   166ac:	bl	12828 <strspn@plt+0x1844>
   166b0:	mov	r0, r9
   166b4:	bl	17330 <strspn@plt+0x634c>
   166b8:	ldr	ip, [r4, #60]	; 0x3c
   166bc:	ldr	r3, [r4, #16]
   166c0:	ldr	lr, [r4, #56]	; 0x38
   166c4:	ldr	r4, [pc, #120]	; 16744 <strspn@plt+0x5760>
   166c8:	mov	r2, sl
   166cc:	mov	r1, r9
   166d0:	str	r0, [fp, #4]
   166d4:	str	r4, [sp, #8]
   166d8:	ldr	r4, [sp, #28]
   166dc:	str	r3, [sp]
   166e0:	str	r4, [sp, #4]
   166e4:	str	ip, [sp, #16]
   166e8:	str	lr, [sp, #12]
   166ec:	mvn	r3, #0
   166f0:	mov	r7, r0
   166f4:	bl	12a54 <strspn@plt+0x1a70>
   166f8:	ldr	r3, [sp, #24]
   166fc:	mov	r0, r7
   16700:	str	r3, [r8]
   16704:	add	sp, sp, #44	; 0x2c
   16708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1670c:	mov	r3, #8
   16710:	sub	r2, r5, r2
   16714:	str	r3, [sp]
   16718:	add	r1, sp, #36	; 0x24
   1671c:	add	r2, r2, #1
   16720:	mvn	r3, #-2147483648	; 0x80000000
   16724:	bl	1754c <strspn@plt+0x6568>
   16728:	mov	r6, r0
   1672c:	ldm	r7, {r0, r1}
   16730:	str	r6, [r4]
   16734:	stm	r6, {r0, r1}
   16738:	b	16618 <strspn@plt+0x5634>
   1673c:	bl	10fd8 <abort@plt>
   16740:	andeq	sl, r2, r4, lsl #2
   16744:	andeq	sl, r2, ip, lsl r1
   16748:	andeq	sl, r2, r8, asr #3
   1674c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16750:	sub	sp, sp, #44	; 0x2c
   16754:	mov	sl, r0
   16758:	bl	10f18 <__errno_location@plt>
   1675c:	ldr	r4, [pc, #348]	; 168c0 <strspn@plt+0x58dc>
   16760:	ldr	r2, [r4, #4]
   16764:	ldr	r5, [r4]
   16768:	cmp	r2, #0
   1676c:	ldr	r3, [r0]
   16770:	mov	r8, r0
   16774:	str	r3, [sp, #28]
   16778:	bgt	167d4 <strspn@plt+0x57f0>
   1677c:	add	r6, r4, #8
   16780:	cmp	r5, r6
   16784:	str	r2, [sp, #36]	; 0x24
   16788:	beq	16890 <strspn@plt+0x58ac>
   1678c:	mov	r3, #8
   16790:	mov	r0, r5
   16794:	str	r3, [sp]
   16798:	rsb	r2, r2, #1
   1679c:	mvn	r3, #-2147483648	; 0x80000000
   167a0:	add	r1, sp, #36	; 0x24
   167a4:	bl	1754c <strspn@plt+0x6568>
   167a8:	mov	r5, r0
   167ac:	str	r0, [r4]
   167b0:	ldr	r0, [r4, #4]
   167b4:	ldr	r2, [sp, #36]	; 0x24
   167b8:	mov	r1, #0
   167bc:	sub	r2, r2, r0
   167c0:	add	r0, r5, r0, lsl #3
   167c4:	lsl	r2, r2, #3
   167c8:	bl	10f3c <memset@plt>
   167cc:	ldr	r3, [sp, #36]	; 0x24
   167d0:	str	r3, [r4, #4]
   167d4:	ldr	r7, [r4, #20]
   167d8:	ldr	r9, [r5]
   167dc:	ldr	r6, [r5, #4]
   167e0:	ldr	r2, [r4, #56]	; 0x38
   167e4:	ldr	r3, [r4, #16]
   167e8:	ldr	ip, [r4, #60]	; 0x3c
   167ec:	ldr	fp, [pc, #208]	; 168c4 <strspn@plt+0x58e0>
   167f0:	orr	r7, r7, #1
   167f4:	str	r2, [sp, #12]
   167f8:	str	r3, [sp]
   167fc:	str	r7, [sp, #4]
   16800:	mov	r1, r9
   16804:	mov	r0, r6
   16808:	str	ip, [sp, #16]
   1680c:	str	fp, [sp, #8]
   16810:	mvn	r3, #0
   16814:	mov	r2, sl
   16818:	bl	12a54 <strspn@plt+0x1a70>
   1681c:	cmp	r9, r0
   16820:	bhi	1687c <strspn@plt+0x5898>
   16824:	ldr	r3, [pc, #156]	; 168c8 <strspn@plt+0x58e4>
   16828:	add	r9, r0, #1
   1682c:	cmp	r6, r3
   16830:	str	r9, [r5]
   16834:	beq	16840 <strspn@plt+0x585c>
   16838:	mov	r0, r6
   1683c:	bl	12828 <strspn@plt+0x1844>
   16840:	mov	r0, r9
   16844:	bl	17330 <strspn@plt+0x634c>
   16848:	ldr	ip, [r4, #60]	; 0x3c
   1684c:	ldr	r3, [r4, #16]
   16850:	ldr	lr, [r4, #56]	; 0x38
   16854:	mov	r2, sl
   16858:	mov	r1, r9
   1685c:	str	r0, [r5, #4]
   16860:	str	r3, [sp]
   16864:	stmib	sp, {r7, fp}
   16868:	str	ip, [sp, #16]
   1686c:	str	lr, [sp, #12]
   16870:	mvn	r3, #0
   16874:	mov	r6, r0
   16878:	bl	12a54 <strspn@plt+0x1a70>
   1687c:	ldr	r3, [sp, #28]
   16880:	mov	r0, r6
   16884:	str	r3, [r8]
   16888:	add	sp, sp, #44	; 0x2c
   1688c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16890:	mov	r3, #8
   16894:	str	r3, [sp]
   16898:	add	r1, sp, #36	; 0x24
   1689c:	rsb	r2, r2, #1
   168a0:	mvn	r3, #-2147483648	; 0x80000000
   168a4:	mov	r0, #0
   168a8:	bl	1754c <strspn@plt+0x6568>
   168ac:	mov	r5, r0
   168b0:	ldm	r6, {r0, r1}
   168b4:	str	r5, [r4]
   168b8:	stm	r5, {r0, r1}
   168bc:	b	167b0 <strspn@plt+0x57cc>
   168c0:	andeq	sl, r2, r4, lsl #2
   168c4:	andeq	sl, r2, ip, lsl r1
   168c8:	andeq	sl, r2, r8, asr #3
   168cc:	push	{r4, r5, r6, lr}
   168d0:	sub	sp, sp, #32
   168d4:	cmp	r1, #0
   168d8:	mov	r4, r0
   168dc:	ldr	r5, [sp, #48]	; 0x30
   168e0:	ldr	r6, [sp, #52]	; 0x34
   168e4:	beq	16bfc <strspn@plt+0x5c18>
   168e8:	stm	sp, {r2, r3}
   168ec:	mov	r3, r1
   168f0:	ldr	r2, [pc, #808]	; 16c20 <strspn@plt+0x5c3c>
   168f4:	mov	r1, #1
   168f8:	bl	10f60 <__fprintf_chk@plt>
   168fc:	mov	r2, #5
   16900:	ldr	r1, [pc, #796]	; 16c24 <strspn@plt+0x5c40>
   16904:	mov	r0, #0
   16908:	bl	10e10 <dcgettext@plt>
   1690c:	ldr	r3, [pc, #788]	; 16c28 <strspn@plt+0x5c44>
   16910:	ldr	r2, [pc, #788]	; 16c2c <strspn@plt+0x5c48>
   16914:	str	r3, [sp]
   16918:	mov	r1, #1
   1691c:	mov	r3, r0
   16920:	mov	r0, r4
   16924:	bl	10f60 <__fprintf_chk@plt>
   16928:	mov	r1, r4
   1692c:	mov	r0, #10
   16930:	bl	10e04 <fputc_unlocked@plt>
   16934:	mov	r2, #5
   16938:	ldr	r1, [pc, #752]	; 16c30 <strspn@plt+0x5c4c>
   1693c:	mov	r0, #0
   16940:	bl	10e10 <dcgettext@plt>
   16944:	mov	r1, #1
   16948:	ldr	r3, [pc, #740]	; 16c34 <strspn@plt+0x5c50>
   1694c:	mov	r2, r0
   16950:	mov	r0, r4
   16954:	bl	10f60 <__fprintf_chk@plt>
   16958:	mov	r1, r4
   1695c:	mov	r0, #10
   16960:	bl	10e04 <fputc_unlocked@plt>
   16964:	cmp	r6, #9
   16968:	ldrls	pc, [pc, r6, lsl #2]
   1696c:	b	16c14 <strspn@plt+0x5c30>
   16970:	strdeq	r6, [r1], -r4
   16974:	strdeq	r6, [r1], -ip
   16978:	andeq	r6, r1, r8, lsr #20
   1697c:	andeq	r6, r1, ip, asr sl
   16980:	muleq	r1, r8, sl
   16984:	ldrdeq	r6, [r1], -r4
   16988:	andeq	r6, r1, r0, lsl fp
   1698c:	andeq	r6, r1, r4, asr fp
   16990:	andeq	r6, r1, r4, lsr #23
   16994:	muleq	r1, r8, r9
   16998:	ldr	r1, [pc, #664]	; 16c38 <strspn@plt+0x5c54>
   1699c:	mov	r2, #5
   169a0:	mov	r0, #0
   169a4:	bl	10e10 <dcgettext@plt>
   169a8:	ldr	ip, [r5, #32]
   169ac:	ldr	r1, [r5, #28]
   169b0:	ldr	r2, [r5, #24]
   169b4:	ldr	r3, [r5]
   169b8:	ldr	r6, [r5, #20]
   169bc:	str	ip, [sp, #28]
   169c0:	ldr	lr, [r5, #16]
   169c4:	str	r1, [sp, #24]
   169c8:	ldr	ip, [r5, #12]
   169cc:	str	r2, [sp, #20]
   169d0:	ldr	r1, [r5, #8]
   169d4:	ldr	r2, [r5, #4]
   169d8:	str	r6, [sp, #16]
   169dc:	stmib	sp, {r1, ip, lr}
   169e0:	mov	r1, #1
   169e4:	str	r2, [sp]
   169e8:	mov	r2, r0
   169ec:	mov	r0, r4
   169f0:	bl	10f60 <__fprintf_chk@plt>
   169f4:	add	sp, sp, #32
   169f8:	pop	{r4, r5, r6, pc}
   169fc:	mov	r2, #5
   16a00:	ldr	r1, [pc, #564]	; 16c3c <strspn@plt+0x5c58>
   16a04:	mov	r0, #0
   16a08:	bl	10e10 <dcgettext@plt>
   16a0c:	ldr	r3, [r5]
   16a10:	mov	r1, #1
   16a14:	mov	r2, r0
   16a18:	mov	r0, r4
   16a1c:	add	sp, sp, #32
   16a20:	pop	{r4, r5, r6, lr}
   16a24:	b	10f60 <__fprintf_chk@plt>
   16a28:	mov	r2, #5
   16a2c:	ldr	r1, [pc, #524]	; 16c40 <strspn@plt+0x5c5c>
   16a30:	mov	r0, #0
   16a34:	bl	10e10 <dcgettext@plt>
   16a38:	ldr	r2, [r5, #4]
   16a3c:	ldr	r3, [r5]
   16a40:	mov	r1, #1
   16a44:	str	r2, [sp, #48]	; 0x30
   16a48:	mov	r2, r0
   16a4c:	mov	r0, r4
   16a50:	add	sp, sp, #32
   16a54:	pop	{r4, r5, r6, lr}
   16a58:	b	10f60 <__fprintf_chk@plt>
   16a5c:	mov	r2, #5
   16a60:	ldr	r1, [pc, #476]	; 16c44 <strspn@plt+0x5c60>
   16a64:	mov	r0, #0
   16a68:	bl	10e10 <dcgettext@plt>
   16a6c:	ldr	r1, [r5, #8]
   16a70:	ldr	r2, [r5, #4]
   16a74:	ldr	r3, [r5]
   16a78:	str	r1, [sp, #52]	; 0x34
   16a7c:	str	r2, [sp, #48]	; 0x30
   16a80:	mov	r1, #1
   16a84:	mov	r2, r0
   16a88:	mov	r0, r4
   16a8c:	add	sp, sp, #32
   16a90:	pop	{r4, r5, r6, lr}
   16a94:	b	10f60 <__fprintf_chk@plt>
   16a98:	mov	r2, #5
   16a9c:	ldr	r1, [pc, #420]	; 16c48 <strspn@plt+0x5c64>
   16aa0:	mov	r0, #0
   16aa4:	bl	10e10 <dcgettext@plt>
   16aa8:	ldr	r1, [r5, #8]
   16aac:	ldr	ip, [r5, #12]
   16ab0:	ldr	r2, [r5, #4]
   16ab4:	ldr	r3, [r5]
   16ab8:	stmib	sp, {r1, ip}
   16abc:	str	r2, [sp]
   16ac0:	mov	r1, #1
   16ac4:	mov	r2, r0
   16ac8:	mov	r0, r4
   16acc:	bl	10f60 <__fprintf_chk@plt>
   16ad0:	b	169f4 <strspn@plt+0x5a10>
   16ad4:	mov	r2, #5
   16ad8:	ldr	r1, [pc, #364]	; 16c4c <strspn@plt+0x5c68>
   16adc:	mov	r0, #0
   16ae0:	bl	10e10 <dcgettext@plt>
   16ae4:	add	r1, r5, #8
   16ae8:	ldr	r2, [r5, #4]
   16aec:	ldm	r1, {r1, ip, lr}
   16af0:	ldr	r3, [r5]
   16af4:	str	r2, [sp]
   16af8:	stmib	sp, {r1, ip, lr}
   16afc:	mov	r1, #1
   16b00:	mov	r2, r0
   16b04:	mov	r0, r4
   16b08:	bl	10f60 <__fprintf_chk@plt>
   16b0c:	b	169f4 <strspn@plt+0x5a10>
   16b10:	mov	r2, #5
   16b14:	ldr	r1, [pc, #308]	; 16c50 <strspn@plt+0x5c6c>
   16b18:	mov	r0, #0
   16b1c:	bl	10e10 <dcgettext@plt>
   16b20:	add	r1, r5, #8
   16b24:	ldr	r2, [r5, #4]
   16b28:	ldm	r1, {r1, ip, lr}
   16b2c:	ldr	r6, [r5, #20]
   16b30:	ldr	r3, [r5]
   16b34:	stmib	sp, {r1, ip, lr}
   16b38:	mov	r1, #1
   16b3c:	str	r2, [sp]
   16b40:	str	r6, [sp, #16]
   16b44:	mov	r2, r0
   16b48:	mov	r0, r4
   16b4c:	bl	10f60 <__fprintf_chk@plt>
   16b50:	b	169f4 <strspn@plt+0x5a10>
   16b54:	mov	r2, #5
   16b58:	ldr	r1, [pc, #244]	; 16c54 <strspn@plt+0x5c70>
   16b5c:	mov	r0, #0
   16b60:	bl	10e10 <dcgettext@plt>
   16b64:	ldr	r2, [r5, #24]
   16b68:	ldr	r3, [r5]
   16b6c:	ldr	r6, [r5, #20]
   16b70:	ldr	lr, [r5, #16]
   16b74:	ldr	ip, [r5, #12]
   16b78:	str	r2, [sp, #20]
   16b7c:	ldr	r1, [r5, #8]
   16b80:	ldr	r2, [r5, #4]
   16b84:	str	r6, [sp, #16]
   16b88:	stmib	sp, {r1, ip, lr}
   16b8c:	mov	r1, #1
   16b90:	str	r2, [sp]
   16b94:	mov	r2, r0
   16b98:	mov	r0, r4
   16b9c:	bl	10f60 <__fprintf_chk@plt>
   16ba0:	b	169f4 <strspn@plt+0x5a10>
   16ba4:	mov	r2, #5
   16ba8:	ldr	r1, [pc, #168]	; 16c58 <strspn@plt+0x5c74>
   16bac:	mov	r0, #0
   16bb0:	bl	10e10 <dcgettext@plt>
   16bb4:	ldr	r1, [r5, #28]
   16bb8:	ldr	r2, [r5, #24]
   16bbc:	ldr	r3, [r5]
   16bc0:	ldr	r6, [r5, #20]
   16bc4:	ldr	lr, [r5, #16]
   16bc8:	str	r1, [sp, #24]
   16bcc:	ldr	ip, [r5, #12]
   16bd0:	str	r2, [sp, #20]
   16bd4:	ldr	r1, [r5, #8]
   16bd8:	ldr	r2, [r5, #4]
   16bdc:	str	r6, [sp, #16]
   16be0:	stmib	sp, {r1, ip, lr}
   16be4:	mov	r1, #1
   16be8:	str	r2, [sp]
   16bec:	mov	r2, r0
   16bf0:	mov	r0, r4
   16bf4:	bl	10f60 <__fprintf_chk@plt>
   16bf8:	b	169f4 <strspn@plt+0x5a10>
   16bfc:	str	r3, [sp]
   16c00:	mov	r1, #1
   16c04:	mov	r3, r2
   16c08:	ldr	r2, [pc, #76]	; 16c5c <strspn@plt+0x5c78>
   16c0c:	bl	10f60 <__fprintf_chk@plt>
   16c10:	b	168fc <strspn@plt+0x5918>
   16c14:	mov	r2, #5
   16c18:	ldr	r1, [pc, #64]	; 16c60 <strspn@plt+0x5c7c>
   16c1c:	b	169a0 <strspn@plt+0x59bc>
   16c20:	andeq	r8, r1, r0, ror pc
   16c24:	andeq	r8, r1, r4, lsl #31
   16c28:	andeq	r0, r0, r6, ror #15
   16c2c:	andeq	r9, r1, ip, asr r2
   16c30:	andeq	r8, r1, r8, lsl #31
   16c34:	andeq	r9, r1, r4, lsr r0
   16c38:	andeq	r9, r1, r4, ror #2
   16c3c:	andeq	r9, r1, r8, asr r0
   16c40:	andeq	r9, r1, r8, rrx
   16c44:	andeq	r9, r1, r0, lsl #1
   16c48:	muleq	r1, ip, r0
   16c4c:	strheq	r9, [r1], -ip
   16c50:	andeq	r9, r1, r0, ror #1
   16c54:	andeq	r9, r1, r8, lsl #2
   16c58:	andeq	r9, r1, r4, lsr r1
   16c5c:	andeq	r8, r1, ip, ror pc
   16c60:	muleq	r1, r8, r1
   16c64:	push	{r4, r5, lr}
   16c68:	sub	sp, sp, #12
   16c6c:	ldr	r5, [sp, #24]
   16c70:	ldr	ip, [r5]
   16c74:	cmp	ip, #0
   16c78:	beq	16c94 <strspn@plt+0x5cb0>
   16c7c:	mov	lr, r5
   16c80:	mov	ip, #0
   16c84:	ldr	r4, [lr, #4]!
   16c88:	add	ip, ip, #1
   16c8c:	cmp	r4, #0
   16c90:	bne	16c84 <strspn@plt+0x5ca0>
   16c94:	stm	sp, {r5, ip}
   16c98:	bl	168cc <strspn@plt+0x58e8>
   16c9c:	add	sp, sp, #12
   16ca0:	pop	{r4, r5, pc}
   16ca4:	push	{r4, r5, lr}
   16ca8:	sub	sp, sp, #76	; 0x4c
   16cac:	mov	r5, r0
   16cb0:	ldr	ip, [sp, #88]	; 0x58
   16cb4:	ldr	r0, [ip]
   16cb8:	cmp	r0, #0
   16cbc:	str	r0, [sp, #32]
   16cc0:	beq	17094 <strspn@plt+0x60b0>
   16cc4:	ldr	r0, [ip, #4]
   16cc8:	cmp	r0, #0
   16ccc:	str	r0, [sp, #36]	; 0x24
   16cd0:	beq	1709c <strspn@plt+0x60b8>
   16cd4:	ldr	r0, [ip, #8]
   16cd8:	cmp	r0, #0
   16cdc:	str	r0, [sp, #40]	; 0x28
   16ce0:	beq	170a4 <strspn@plt+0x60c0>
   16ce4:	ldr	r0, [ip, #12]
   16ce8:	cmp	r0, #0
   16cec:	str	r0, [sp, #44]	; 0x2c
   16cf0:	beq	170ac <strspn@plt+0x60c8>
   16cf4:	ldr	r0, [ip, #16]
   16cf8:	cmp	r0, #0
   16cfc:	str	r0, [sp, #48]	; 0x30
   16d00:	beq	170b4 <strspn@plt+0x60d0>
   16d04:	ldr	r0, [ip, #20]
   16d08:	cmp	r0, #0
   16d0c:	str	r0, [sp, #52]	; 0x34
   16d10:	beq	170bc <strspn@plt+0x60d8>
   16d14:	ldr	r0, [ip, #24]
   16d18:	cmp	r0, #0
   16d1c:	str	r0, [sp, #56]	; 0x38
   16d20:	beq	170c4 <strspn@plt+0x60e0>
   16d24:	ldr	r0, [ip, #28]
   16d28:	cmp	r0, #0
   16d2c:	str	r0, [sp, #60]	; 0x3c
   16d30:	beq	170cc <strspn@plt+0x60e8>
   16d34:	ldr	r0, [ip, #32]
   16d38:	cmp	r0, #0
   16d3c:	str	r0, [sp, #64]	; 0x40
   16d40:	beq	170d4 <strspn@plt+0x60f0>
   16d44:	ldr	r0, [ip, #36]	; 0x24
   16d48:	cmp	r0, #0
   16d4c:	movne	r4, #10
   16d50:	moveq	r4, #9
   16d54:	cmp	r1, #0
   16d58:	beq	1706c <strspn@plt+0x6088>
   16d5c:	stm	sp, {r2, r3}
   16d60:	mov	r0, r5
   16d64:	mov	r3, r1
   16d68:	ldr	r2, [pc, #876]	; 170dc <strspn@plt+0x60f8>
   16d6c:	mov	r1, #1
   16d70:	bl	10f60 <__fprintf_chk@plt>
   16d74:	mov	r2, #5
   16d78:	ldr	r1, [pc, #864]	; 170e0 <strspn@plt+0x60fc>
   16d7c:	mov	r0, #0
   16d80:	bl	10e10 <dcgettext@plt>
   16d84:	ldr	r3, [pc, #856]	; 170e4 <strspn@plt+0x6100>
   16d88:	ldr	r2, [pc, #856]	; 170e8 <strspn@plt+0x6104>
   16d8c:	str	r3, [sp]
   16d90:	mov	r1, #1
   16d94:	mov	r3, r0
   16d98:	mov	r0, r5
   16d9c:	bl	10f60 <__fprintf_chk@plt>
   16da0:	mov	r1, r5
   16da4:	mov	r0, #10
   16da8:	bl	10e04 <fputc_unlocked@plt>
   16dac:	mov	r2, #5
   16db0:	ldr	r1, [pc, #820]	; 170ec <strspn@plt+0x6108>
   16db4:	mov	r0, #0
   16db8:	bl	10e10 <dcgettext@plt>
   16dbc:	mov	r1, #1
   16dc0:	ldr	r3, [pc, #808]	; 170f0 <strspn@plt+0x610c>
   16dc4:	mov	r2, r0
   16dc8:	mov	r0, r5
   16dcc:	bl	10f60 <__fprintf_chk@plt>
   16dd0:	mov	r1, r5
   16dd4:	mov	r0, #10
   16dd8:	bl	10e04 <fputc_unlocked@plt>
   16ddc:	cmp	r4, #9
   16de0:	ldrls	pc, [pc, r4, lsl #2]
   16de4:	b	17088 <strspn@plt+0x60a4>
   16de8:	andeq	r6, r1, ip, ror #28
   16dec:	andeq	r6, r1, r4, ror lr
   16df0:	andeq	r6, r1, r0, lsr #29
   16df4:	ldrdeq	r6, [r1], -r4
   16df8:	andeq	r6, r1, ip, lsl #30
   16dfc:	andeq	r6, r1, r8, asr #30
   16e00:	andeq	r6, r1, r4, lsl #31
   16e04:	andeq	r6, r1, r8, asr #31
   16e08:	andeq	r7, r1, r4, lsl r0
   16e0c:	andeq	r6, r1, r0, lsl lr
   16e10:	ldr	r1, [pc, #732]	; 170f4 <strspn@plt+0x6110>
   16e14:	mov	r2, #5
   16e18:	mov	r0, #0
   16e1c:	bl	10e10 <dcgettext@plt>
   16e20:	ldr	ip, [sp, #64]	; 0x40
   16e24:	ldr	r1, [sp, #60]	; 0x3c
   16e28:	ldr	r2, [sp, #56]	; 0x38
   16e2c:	ldr	lr, [sp, #48]	; 0x30
   16e30:	str	ip, [sp, #28]
   16e34:	str	r1, [sp, #24]
   16e38:	ldr	ip, [sp, #44]	; 0x2c
   16e3c:	ldr	r1, [sp, #40]	; 0x28
   16e40:	ldr	r4, [sp, #52]	; 0x34
   16e44:	str	r2, [sp, #20]
   16e48:	ldr	r2, [sp, #36]	; 0x24
   16e4c:	stmib	sp, {r1, ip, lr}
   16e50:	mov	r1, #1
   16e54:	str	r2, [sp]
   16e58:	ldr	r3, [sp, #32]
   16e5c:	str	r4, [sp, #16]
   16e60:	mov	r2, r0
   16e64:	mov	r0, r5
   16e68:	bl	10f60 <__fprintf_chk@plt>
   16e6c:	add	sp, sp, #76	; 0x4c
   16e70:	pop	{r4, r5, pc}
   16e74:	mov	r2, #5
   16e78:	ldr	r1, [pc, #632]	; 170f8 <strspn@plt+0x6114>
   16e7c:	mov	r0, #0
   16e80:	bl	10e10 <dcgettext@plt>
   16e84:	ldr	r3, [sp, #32]
   16e88:	mov	r1, #1
   16e8c:	mov	r2, r0
   16e90:	mov	r0, r5
   16e94:	add	sp, sp, #76	; 0x4c
   16e98:	pop	{r4, r5, lr}
   16e9c:	b	10f60 <__fprintf_chk@plt>
   16ea0:	mov	r2, #5
   16ea4:	ldr	r1, [pc, #592]	; 170fc <strspn@plt+0x6118>
   16ea8:	mov	r0, #0
   16eac:	bl	10e10 <dcgettext@plt>
   16eb0:	ldr	r2, [sp, #36]	; 0x24
   16eb4:	ldr	r3, [sp, #32]
   16eb8:	str	r2, [sp, #88]	; 0x58
   16ebc:	mov	r1, #1
   16ec0:	mov	r2, r0
   16ec4:	mov	r0, r5
   16ec8:	add	sp, sp, #76	; 0x4c
   16ecc:	pop	{r4, r5, lr}
   16ed0:	b	10f60 <__fprintf_chk@plt>
   16ed4:	mov	r2, #5
   16ed8:	ldr	r1, [pc, #544]	; 17100 <strspn@plt+0x611c>
   16edc:	mov	r0, #0
   16ee0:	bl	10e10 <dcgettext@plt>
   16ee4:	ldr	r1, [sp, #40]	; 0x28
   16ee8:	ldr	r2, [sp, #36]	; 0x24
   16eec:	str	r1, [sp, #4]
   16ef0:	str	r2, [sp]
   16ef4:	ldr	r3, [sp, #32]
   16ef8:	mov	r1, #1
   16efc:	mov	r2, r0
   16f00:	mov	r0, r5
   16f04:	bl	10f60 <__fprintf_chk@plt>
   16f08:	b	16e6c <strspn@plt+0x5e88>
   16f0c:	mov	r2, #5
   16f10:	ldr	r1, [pc, #492]	; 17104 <strspn@plt+0x6120>
   16f14:	mov	r0, #0
   16f18:	bl	10e10 <dcgettext@plt>
   16f1c:	ldr	r1, [sp, #40]	; 0x28
   16f20:	ldr	ip, [sp, #44]	; 0x2c
   16f24:	ldr	r2, [sp, #36]	; 0x24
   16f28:	ldr	r3, [sp, #32]
   16f2c:	stmib	sp, {r1, ip}
   16f30:	str	r2, [sp]
   16f34:	mov	r1, #1
   16f38:	mov	r2, r0
   16f3c:	mov	r0, r5
   16f40:	bl	10f60 <__fprintf_chk@plt>
   16f44:	b	16e6c <strspn@plt+0x5e88>
   16f48:	mov	r2, #5
   16f4c:	ldr	r1, [pc, #436]	; 17108 <strspn@plt+0x6124>
   16f50:	mov	r0, #0
   16f54:	bl	10e10 <dcgettext@plt>
   16f58:	add	r1, sp, #40	; 0x28
   16f5c:	ldr	r2, [sp, #36]	; 0x24
   16f60:	ldm	r1, {r1, ip, lr}
   16f64:	ldr	r3, [sp, #32]
   16f68:	str	r2, [sp]
   16f6c:	stmib	sp, {r1, ip, lr}
   16f70:	mov	r1, #1
   16f74:	mov	r2, r0
   16f78:	mov	r0, r5
   16f7c:	bl	10f60 <__fprintf_chk@plt>
   16f80:	b	16e6c <strspn@plt+0x5e88>
   16f84:	mov	r2, #5
   16f88:	ldr	r1, [pc, #380]	; 1710c <strspn@plt+0x6128>
   16f8c:	mov	r0, #0
   16f90:	bl	10e10 <dcgettext@plt>
   16f94:	add	r1, sp, #40	; 0x28
   16f98:	ldr	r2, [sp, #36]	; 0x24
   16f9c:	ldm	r1, {r1, ip, lr}
   16fa0:	ldr	r4, [sp, #52]	; 0x34
   16fa4:	str	r2, [sp]
   16fa8:	stmib	sp, {r1, ip, lr}
   16fac:	mov	r1, #1
   16fb0:	ldr	r3, [sp, #32]
   16fb4:	str	r4, [sp, #16]
   16fb8:	mov	r2, r0
   16fbc:	mov	r0, r5
   16fc0:	bl	10f60 <__fprintf_chk@plt>
   16fc4:	b	16e6c <strspn@plt+0x5e88>
   16fc8:	mov	r2, #5
   16fcc:	ldr	r1, [pc, #316]	; 17110 <strspn@plt+0x612c>
   16fd0:	mov	r0, #0
   16fd4:	bl	10e10 <dcgettext@plt>
   16fd8:	add	r1, sp, #40	; 0x28
   16fdc:	ldr	r2, [sp, #56]	; 0x38
   16fe0:	ldm	r1, {r1, ip, lr}
   16fe4:	ldr	r4, [sp, #52]	; 0x34
   16fe8:	str	r2, [sp, #20]
   16fec:	ldr	r2, [sp, #36]	; 0x24
   16ff0:	stmib	sp, {r1, ip, lr}
   16ff4:	mov	r1, #1
   16ff8:	str	r2, [sp]
   16ffc:	ldr	r3, [sp, #32]
   17000:	str	r4, [sp, #16]
   17004:	mov	r2, r0
   17008:	mov	r0, r5
   1700c:	bl	10f60 <__fprintf_chk@plt>
   17010:	b	16e6c <strspn@plt+0x5e88>
   17014:	mov	r2, #5
   17018:	ldr	r1, [pc, #244]	; 17114 <strspn@plt+0x6130>
   1701c:	mov	r0, #0
   17020:	bl	10e10 <dcgettext@plt>
   17024:	ldr	r1, [sp, #60]	; 0x3c
   17028:	ldr	r2, [sp, #56]	; 0x38
   1702c:	ldr	lr, [sp, #48]	; 0x30
   17030:	ldr	ip, [sp, #44]	; 0x2c
   17034:	str	r1, [sp, #24]
   17038:	ldr	r1, [sp, #40]	; 0x28
   1703c:	ldr	r4, [sp, #52]	; 0x34
   17040:	str	r2, [sp, #20]
   17044:	ldr	r2, [sp, #36]	; 0x24
   17048:	stmib	sp, {r1, ip, lr}
   1704c:	mov	r1, #1
   17050:	str	r2, [sp]
   17054:	ldr	r3, [sp, #32]
   17058:	str	r4, [sp, #16]
   1705c:	mov	r2, r0
   17060:	mov	r0, r5
   17064:	bl	10f60 <__fprintf_chk@plt>
   17068:	b	16e6c <strspn@plt+0x5e88>
   1706c:	str	r3, [sp]
   17070:	mov	r1, #1
   17074:	mov	r3, r2
   17078:	mov	r0, r5
   1707c:	ldr	r2, [pc, #148]	; 17118 <strspn@plt+0x6134>
   17080:	bl	10f60 <__fprintf_chk@plt>
   17084:	b	16d74 <strspn@plt+0x5d90>
   17088:	mov	r2, #5
   1708c:	ldr	r1, [pc, #136]	; 1711c <strspn@plt+0x6138>
   17090:	b	16e18 <strspn@plt+0x5e34>
   17094:	mov	r4, r0
   17098:	b	16d54 <strspn@plt+0x5d70>
   1709c:	mov	r4, #1
   170a0:	b	16d54 <strspn@plt+0x5d70>
   170a4:	mov	r4, #2
   170a8:	b	16d54 <strspn@plt+0x5d70>
   170ac:	mov	r4, #3
   170b0:	b	16d54 <strspn@plt+0x5d70>
   170b4:	mov	r4, #4
   170b8:	b	16d54 <strspn@plt+0x5d70>
   170bc:	mov	r4, #5
   170c0:	b	16d54 <strspn@plt+0x5d70>
   170c4:	mov	r4, #6
   170c8:	b	16d54 <strspn@plt+0x5d70>
   170cc:	mov	r4, #7
   170d0:	b	16d54 <strspn@plt+0x5d70>
   170d4:	mov	r4, #8
   170d8:	b	16d54 <strspn@plt+0x5d70>
   170dc:	andeq	r8, r1, r0, ror pc
   170e0:	andeq	r8, r1, r4, lsl #31
   170e4:	andeq	r0, r0, r6, ror #15
   170e8:	andeq	r9, r1, ip, asr r2
   170ec:	andeq	r8, r1, r8, lsl #31
   170f0:	andeq	r9, r1, r4, lsr r0
   170f4:	andeq	r9, r1, r4, ror #2
   170f8:	andeq	r9, r1, r8, asr r0
   170fc:	andeq	r9, r1, r8, rrx
   17100:	andeq	r9, r1, r0, lsl #1
   17104:	muleq	r1, ip, r0
   17108:	strheq	r9, [r1], -ip
   1710c:	andeq	r9, r1, r0, ror #1
   17110:	andeq	r9, r1, r8, lsl #2
   17114:	andeq	r9, r1, r4, lsr r1
   17118:	andeq	r8, r1, ip, ror pc
   1711c:	muleq	r1, r8, r1
   17120:	push	{r3}		; (str r3, [sp, #-4]!)
   17124:	push	{lr}		; (str lr, [sp, #-4]!)
   17128:	sub	sp, sp, #56	; 0x38
   1712c:	add	r3, sp, #64	; 0x40
   17130:	ldr	ip, [sp, #64]	; 0x40
   17134:	str	r3, [sp, #12]
   17138:	cmp	ip, #0
   1713c:	str	ip, [sp, #16]
   17140:	beq	171d8 <strspn@plt+0x61f4>
   17144:	ldr	ip, [sp, #68]	; 0x44
   17148:	cmp	ip, #0
   1714c:	str	ip, [sp, #20]
   17150:	beq	171f8 <strspn@plt+0x6214>
   17154:	ldr	ip, [sp, #72]	; 0x48
   17158:	cmp	ip, #0
   1715c:	str	ip, [sp, #24]
   17160:	beq	17200 <strspn@plt+0x621c>
   17164:	ldr	ip, [sp, #76]	; 0x4c
   17168:	cmp	ip, #0
   1716c:	str	ip, [sp, #28]
   17170:	beq	17208 <strspn@plt+0x6224>
   17174:	ldr	ip, [sp, #80]	; 0x50
   17178:	cmp	ip, #0
   1717c:	str	ip, [sp, #32]
   17180:	beq	17210 <strspn@plt+0x622c>
   17184:	ldr	ip, [sp, #84]	; 0x54
   17188:	cmp	ip, #0
   1718c:	str	ip, [sp, #36]	; 0x24
   17190:	beq	17218 <strspn@plt+0x6234>
   17194:	ldr	ip, [sp, #88]	; 0x58
   17198:	cmp	ip, #0
   1719c:	str	ip, [sp, #40]	; 0x28
   171a0:	beq	17220 <strspn@plt+0x623c>
   171a4:	ldr	ip, [sp, #92]	; 0x5c
   171a8:	cmp	ip, #0
   171ac:	str	ip, [sp, #44]	; 0x2c
   171b0:	beq	17228 <strspn@plt+0x6244>
   171b4:	ldr	ip, [sp, #96]	; 0x60
   171b8:	cmp	ip, #0
   171bc:	str	ip, [sp, #48]	; 0x30
   171c0:	beq	17230 <strspn@plt+0x624c>
   171c4:	ldr	ip, [sp, #100]	; 0x64
   171c8:	cmp	ip, #0
   171cc:	str	ip, [sp, #52]	; 0x34
   171d0:	movne	ip, #10
   171d4:	moveq	ip, #9
   171d8:	add	r3, sp, #16
   171dc:	stm	sp, {r3, ip}
   171e0:	ldr	r3, [sp, #60]	; 0x3c
   171e4:	bl	168cc <strspn@plt+0x58e8>
   171e8:	add	sp, sp, #56	; 0x38
   171ec:	pop	{lr}		; (ldr lr, [sp], #4)
   171f0:	add	sp, sp, #4
   171f4:	bx	lr
   171f8:	mov	ip, #1
   171fc:	b	171d8 <strspn@plt+0x61f4>
   17200:	mov	ip, #2
   17204:	b	171d8 <strspn@plt+0x61f4>
   17208:	mov	ip, #3
   1720c:	b	171d8 <strspn@plt+0x61f4>
   17210:	mov	ip, #4
   17214:	b	171d8 <strspn@plt+0x61f4>
   17218:	mov	ip, #5
   1721c:	b	171d8 <strspn@plt+0x61f4>
   17220:	mov	ip, #6
   17224:	b	171d8 <strspn@plt+0x61f4>
   17228:	mov	ip, #7
   1722c:	b	171d8 <strspn@plt+0x61f4>
   17230:	mov	ip, #8
   17234:	b	171d8 <strspn@plt+0x61f4>
   17238:	ldr	r3, [pc, #116]	; 172b4 <strspn@plt+0x62d0>
   1723c:	push	{r4, lr}
   17240:	mov	r0, #10
   17244:	ldr	r1, [r3]
   17248:	bl	10e04 <fputc_unlocked@plt>
   1724c:	mov	r2, #5
   17250:	ldr	r1, [pc, #96]	; 172b8 <strspn@plt+0x62d4>
   17254:	mov	r0, #0
   17258:	bl	10e10 <dcgettext@plt>
   1725c:	ldr	r2, [pc, #88]	; 172bc <strspn@plt+0x62d8>
   17260:	mov	r1, r0
   17264:	mov	r0, #1
   17268:	bl	10f48 <__printf_chk@plt>
   1726c:	mov	r2, #5
   17270:	ldr	r1, [pc, #72]	; 172c0 <strspn@plt+0x62dc>
   17274:	mov	r0, #0
   17278:	bl	10e10 <dcgettext@plt>
   1727c:	ldr	r3, [pc, #64]	; 172c4 <strspn@plt+0x62e0>
   17280:	ldr	r2, [pc, #64]	; 172c8 <strspn@plt+0x62e4>
   17284:	mov	r1, r0
   17288:	mov	r0, #1
   1728c:	bl	10f48 <__printf_chk@plt>
   17290:	mov	r2, #5
   17294:	ldr	r1, [pc, #48]	; 172cc <strspn@plt+0x62e8>
   17298:	mov	r0, #0
   1729c:	bl	10e10 <dcgettext@plt>
   172a0:	ldr	r2, [pc, #40]	; 172d0 <strspn@plt+0x62ec>
   172a4:	pop	{r4, lr}
   172a8:	mov	r1, r0
   172ac:	mov	r0, #1
   172b0:	b	10f48 <__printf_chk@plt>
   172b4:	andeq	sl, r2, ip, asr r1
   172b8:	ldrdeq	r9, [r1], -r4
   172bc:	andeq	r9, r1, r8, ror #3
   172c0:	andeq	r9, r1, r0, lsl #4
   172c4:	strdeq	r8, [r1], -r4
   172c8:	andeq	r8, r1, ip, lsl fp
   172cc:	andeq	r9, r1, r4, lsl r2
   172d0:	andeq	r9, r1, ip, lsr r2
   172d4:	push	{r4, r5, r6, lr}
   172d8:	mov	r6, r0
   172dc:	mov	r5, r1
   172e0:	mov	r4, r2
   172e4:	bl	17e70 <strspn@plt+0x6e8c>
   172e8:	cmp	r0, #0
   172ec:	popne	{r4, r5, r6, pc}
   172f0:	cmp	r6, #0
   172f4:	beq	17304 <strspn@plt+0x6320>
   172f8:	cmp	r5, #0
   172fc:	cmpne	r4, #0
   17300:	popeq	{r4, r5, r6, pc}
   17304:	bl	17950 <strspn@plt+0x696c>
   17308:	push	{r4, lr}
   1730c:	bl	17a80 <strspn@plt+0x6a9c>
   17310:	cmp	r0, #0
   17314:	popne	{r4, pc}
   17318:	bl	17950 <strspn@plt+0x696c>
   1731c:	push	{r4, lr}
   17320:	bl	17a80 <strspn@plt+0x6a9c>
   17324:	cmp	r0, #0
   17328:	popne	{r4, pc}
   1732c:	bl	17950 <strspn@plt+0x696c>
   17330:	push	{r4, lr}
   17334:	bl	17a80 <strspn@plt+0x6a9c>
   17338:	cmp	r0, #0
   1733c:	popne	{r4, pc}
   17340:	bl	17950 <strspn@plt+0x696c>
   17344:	push	{r4, r5, r6, lr}
   17348:	mov	r5, r0
   1734c:	mov	r4, r1
   17350:	bl	17aac <strspn@plt+0x6ac8>
   17354:	cmp	r0, #0
   17358:	popne	{r4, r5, r6, pc}
   1735c:	adds	r4, r4, #0
   17360:	movne	r4, #1
   17364:	cmp	r5, #0
   17368:	orreq	r4, r4, #1
   1736c:	cmp	r4, #0
   17370:	popeq	{r4, r5, r6, pc}
   17374:	bl	17950 <strspn@plt+0x696c>
   17378:	push	{r4, lr}
   1737c:	cmp	r1, #0
   17380:	orreq	r1, r1, #1
   17384:	bl	17aac <strspn@plt+0x6ac8>
   17388:	cmp	r0, #0
   1738c:	popne	{r4, pc}
   17390:	bl	17950 <strspn@plt+0x696c>
   17394:	push	{r4, r5, r6, lr}
   17398:	mov	r6, r0
   1739c:	mov	r5, r1
   173a0:	mov	r4, r2
   173a4:	bl	17e70 <strspn@plt+0x6e8c>
   173a8:	cmp	r0, #0
   173ac:	popne	{r4, r5, r6, pc}
   173b0:	cmp	r6, #0
   173b4:	beq	173c4 <strspn@plt+0x63e0>
   173b8:	cmp	r5, #0
   173bc:	cmpne	r4, #0
   173c0:	popeq	{r4, r5, r6, pc}
   173c4:	bl	17950 <strspn@plt+0x696c>
   173c8:	cmp	r2, #0
   173cc:	cmpne	r1, #0
   173d0:	moveq	r2, #1
   173d4:	moveq	r1, r2
   173d8:	push	{r4, lr}
   173dc:	bl	17e70 <strspn@plt+0x6e8c>
   173e0:	cmp	r0, #0
   173e4:	popne	{r4, pc}
   173e8:	bl	17950 <strspn@plt+0x696c>
   173ec:	push	{r4, lr}
   173f0:	mov	r2, r1
   173f4:	mov	r1, r0
   173f8:	mov	r0, #0
   173fc:	bl	17e70 <strspn@plt+0x6e8c>
   17400:	cmp	r0, #0
   17404:	popne	{r4, pc}
   17408:	bl	17950 <strspn@plt+0x696c>
   1740c:	cmp	r1, #0
   17410:	cmpne	r0, #0
   17414:	moveq	r2, #1
   17418:	movne	r2, r1
   1741c:	moveq	r1, r2
   17420:	movne	r1, r0
   17424:	push	{r4, lr}
   17428:	mov	r0, #0
   1742c:	bl	17e70 <strspn@plt+0x6e8c>
   17430:	cmp	r0, #0
   17434:	popne	{r4, pc}
   17438:	bl	17950 <strspn@plt+0x696c>
   1743c:	cmp	r0, #0
   17440:	push	{r4, r5, r6, lr}
   17444:	mov	r5, r1
   17448:	ldr	r4, [r1]
   1744c:	beq	17488 <strspn@plt+0x64a4>
   17450:	lsr	r2, r4, #1
   17454:	add	r3, r2, #1
   17458:	mvn	r3, r3
   1745c:	cmp	r4, r3
   17460:	bhi	174a4 <strspn@plt+0x64c0>
   17464:	add	r4, r4, #1
   17468:	add	r4, r4, r2
   1746c:	mov	r1, r4
   17470:	mov	r2, #1
   17474:	bl	17e70 <strspn@plt+0x6e8c>
   17478:	cmp	r0, #0
   1747c:	beq	174a8 <strspn@plt+0x64c4>
   17480:	str	r4, [r5]
   17484:	pop	{r4, r5, r6, pc}
   17488:	cmp	r4, #0
   1748c:	moveq	r4, #64	; 0x40
   17490:	mov	r1, r4
   17494:	mov	r2, #1
   17498:	bl	17e70 <strspn@plt+0x6e8c>
   1749c:	cmp	r0, #0
   174a0:	bne	17480 <strspn@plt+0x649c>
   174a4:	bl	17950 <strspn@plt+0x696c>
   174a8:	cmp	r4, #0
   174ac:	bne	174a4 <strspn@plt+0x64c0>
   174b0:	str	r4, [r5]
   174b4:	pop	{r4, r5, r6, pc}
   174b8:	cmp	r0, #0
   174bc:	push	{r4, r5, r6, lr}
   174c0:	mov	r5, r1
   174c4:	ldr	r4, [r1]
   174c8:	mov	r6, r2
   174cc:	beq	17510 <strspn@plt+0x652c>
   174d0:	lsr	r1, r4, #1
   174d4:	add	r3, r1, #1
   174d8:	mvn	r3, r3
   174dc:	cmp	r4, r3
   174e0:	bhi	17548 <strspn@plt+0x6564>
   174e4:	add	r4, r4, #1
   174e8:	add	r4, r4, r1
   174ec:	mov	r1, r4
   174f0:	bl	17e70 <strspn@plt+0x6e8c>
   174f4:	cmp	r0, #0
   174f8:	bne	17508 <strspn@plt+0x6524>
   174fc:	cmp	r4, #0
   17500:	cmpne	r6, #0
   17504:	bne	17548 <strspn@plt+0x6564>
   17508:	str	r4, [r5]
   1750c:	pop	{r4, r5, r6, pc}
   17510:	cmp	r4, #0
   17514:	bne	17530 <strspn@plt+0x654c>
   17518:	mov	r1, r2
   1751c:	mov	r0, #64	; 0x40
   17520:	bl	17fb0 <strspn@plt+0x6fcc>
   17524:	cmp	r0, #0
   17528:	movne	r4, r0
   1752c:	addeq	r4, r0, #1
   17530:	mov	r2, r6
   17534:	mov	r1, r4
   17538:	mov	r0, #0
   1753c:	bl	17e70 <strspn@plt+0x6e8c>
   17540:	cmp	r0, #0
   17544:	bne	17508 <strspn@plt+0x6524>
   17548:	bl	17950 <strspn@plt+0x696c>
   1754c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17550:	sub	sp, sp, #12
   17554:	ldr	r6, [r1]
   17558:	mov	r8, r1
   1755c:	mov	r9, r0
   17560:	asrs	r4, r6, #1
   17564:	mov	sl, r2
   17568:	mov	fp, r3
   1756c:	ldr	r7, [sp, #48]	; 0x30
   17570:	bmi	176ec <strspn@plt+0x6708>
   17574:	mvn	r1, #-2147483648	; 0x80000000
   17578:	sub	r1, r1, r4
   1757c:	cmp	r6, r1
   17580:	movle	r1, #0
   17584:	movgt	r1, #1
   17588:	mvn	r3, fp
   1758c:	cmp	r1, #0
   17590:	addeq	r4, r4, r6
   17594:	mvnne	r4, #-2147483648	; 0x80000000
   17598:	lsr	r3, r3, #31
   1759c:	cmp	fp, r4
   175a0:	movge	r2, #0
   175a4:	andlt	r2, r3, #1
   175a8:	cmp	r2, #0
   175ac:	beq	1769c <strspn@plt+0x66b8>
   175b0:	cmp	r7, #0
   175b4:	blt	17784 <strspn@plt+0x67a0>
   175b8:	bne	1777c <strspn@plt+0x6798>
   175bc:	mov	r5, #64	; 0x40
   175c0:	mov	r1, r7
   175c4:	mov	r0, r5
   175c8:	str	r3, [sp, #4]
   175cc:	bl	181bc <strspn@plt+0x71d8>
   175d0:	mov	r1, r7
   175d4:	mov	r4, r0
   175d8:	mov	r0, r5
   175dc:	bl	183dc <strspn@plt+0x73f8>
   175e0:	ldr	r3, [sp, #4]
   175e4:	sub	r5, r5, r1
   175e8:	cmp	r9, #0
   175ec:	sub	r2, r4, r6
   175f0:	streq	r9, [r8]
   175f4:	cmp	r2, sl
   175f8:	bge	1767c <strspn@plt+0x6698>
   175fc:	cmp	sl, #0
   17600:	blt	1771c <strspn@plt+0x6738>
   17604:	cmp	r6, #0
   17608:	blt	17628 <strspn@plt+0x6644>
   1760c:	mvn	r2, #-2147483648	; 0x80000000
   17610:	sub	r2, r2, sl
   17614:	cmp	r6, r2
   17618:	movle	r2, #0
   1761c:	movgt	r2, #1
   17620:	cmp	r2, #0
   17624:	bne	17718 <strspn@plt+0x6734>
   17628:	add	r6, r6, sl
   1762c:	cmp	fp, r6
   17630:	movge	r3, #0
   17634:	andlt	r3, r3, #1
   17638:	cmp	r3, #0
   1763c:	mov	r4, r6
   17640:	bne	17718 <strspn@plt+0x6734>
   17644:	cmp	r7, #0
   17648:	blt	17730 <strspn@plt+0x674c>
   1764c:	beq	17678 <strspn@plt+0x6694>
   17650:	cmp	r6, #0
   17654:	blt	177d4 <strspn@plt+0x67f0>
   17658:	mov	r1, r7
   1765c:	mvn	r0, #-2147483648	; 0x80000000
   17660:	bl	181bc <strspn@plt+0x71d8>
   17664:	cmp	r6, r0
   17668:	movle	r0, #0
   1766c:	movgt	r0, #1
   17670:	cmp	r0, #0
   17674:	bne	17718 <strspn@plt+0x6734>
   17678:	mul	r5, r6, r7
   1767c:	mov	r1, r5
   17680:	mov	r0, r9
   17684:	bl	17aac <strspn@plt+0x6ac8>
   17688:	cmp	r0, #0
   1768c:	beq	17700 <strspn@plt+0x671c>
   17690:	str	r4, [r8]
   17694:	add	sp, sp, #12
   17698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1769c:	cmp	r7, #0
   176a0:	blt	1775c <strspn@plt+0x6778>
   176a4:	beq	175bc <strspn@plt+0x65d8>
   176a8:	cmp	r4, #0
   176ac:	blt	1778c <strspn@plt+0x67a8>
   176b0:	mov	r1, r7
   176b4:	mvn	r0, #-2147483648	; 0x80000000
   176b8:	str	r3, [sp, #4]
   176bc:	bl	181bc <strspn@plt+0x71d8>
   176c0:	ldr	r3, [sp, #4]
   176c4:	cmp	r0, r4
   176c8:	movge	r0, #0
   176cc:	movlt	r0, #1
   176d0:	cmp	r0, #0
   176d4:	mvnne	r5, #-2147483648	; 0x80000000
   176d8:	bne	175c0 <strspn@plt+0x65dc>
   176dc:	mul	r5, r7, r4
   176e0:	cmp	r5, #63	; 0x3f
   176e4:	bgt	175e8 <strspn@plt+0x6604>
   176e8:	b	175bc <strspn@plt+0x65d8>
   176ec:	rsb	r1, r4, #-2147483648	; 0x80000000
   176f0:	cmp	r6, r1
   176f4:	movge	r1, #0
   176f8:	movlt	r1, #1
   176fc:	b	17588 <strspn@plt+0x65a4>
   17700:	adds	r5, r5, #0
   17704:	movne	r5, #1
   17708:	cmp	r9, #0
   1770c:	orreq	r5, r5, #1
   17710:	cmp	r5, #0
   17714:	beq	17690 <strspn@plt+0x66ac>
   17718:	bl	17950 <strspn@plt+0x696c>
   1771c:	rsb	r2, sl, #-2147483648	; 0x80000000
   17720:	cmp	r6, r2
   17724:	movge	r2, #0
   17728:	movlt	r2, #1
   1772c:	b	17620 <strspn@plt+0x663c>
   17730:	cmp	r6, #0
   17734:	blt	177b8 <strspn@plt+0x67d4>
   17738:	cmn	r7, #1
   1773c:	beq	17678 <strspn@plt+0x6694>
   17740:	mov	r1, r7
   17744:	mov	r0, #-2147483648	; 0x80000000
   17748:	bl	181bc <strspn@plt+0x71d8>
   1774c:	cmp	r6, r0
   17750:	movle	r0, #0
   17754:	movgt	r0, #1
   17758:	b	17670 <strspn@plt+0x668c>
   1775c:	cmp	r4, #0
   17760:	blt	177f8 <strspn@plt+0x6814>
   17764:	cmn	r7, #1
   17768:	beq	176dc <strspn@plt+0x66f8>
   1776c:	str	r3, [sp, #4]
   17770:	mov	r1, r7
   17774:	mov	r0, #-2147483648	; 0x80000000
   17778:	b	176bc <strspn@plt+0x66d8>
   1777c:	mov	r4, fp
   17780:	b	176b0 <strspn@plt+0x66cc>
   17784:	mov	r4, fp
   17788:	b	17764 <strspn@plt+0x6780>
   1778c:	cmn	r4, #1
   17790:	beq	176dc <strspn@plt+0x66f8>
   17794:	mov	r1, r4
   17798:	mov	r0, #-2147483648	; 0x80000000
   1779c:	str	r3, [sp, #4]
   177a0:	bl	181bc <strspn@plt+0x71d8>
   177a4:	ldr	r3, [sp, #4]
   177a8:	cmp	r7, r0
   177ac:	movle	r0, #0
   177b0:	movgt	r0, #1
   177b4:	b	176d0 <strspn@plt+0x66ec>
   177b8:	mov	r1, r7
   177bc:	mvn	r0, #-2147483648	; 0x80000000
   177c0:	bl	181bc <strspn@plt+0x71d8>
   177c4:	cmp	r6, r0
   177c8:	movge	r0, #0
   177cc:	movlt	r0, #1
   177d0:	b	17670 <strspn@plt+0x668c>
   177d4:	cmn	r6, #1
   177d8:	beq	17678 <strspn@plt+0x6694>
   177dc:	mov	r1, r6
   177e0:	mov	r0, #-2147483648	; 0x80000000
   177e4:	bl	181bc <strspn@plt+0x71d8>
   177e8:	cmp	r7, r0
   177ec:	movle	r0, #0
   177f0:	movgt	r0, #1
   177f4:	b	17670 <strspn@plt+0x668c>
   177f8:	mov	r1, r7
   177fc:	mvn	r0, #-2147483648	; 0x80000000
   17800:	str	r3, [sp, #4]
   17804:	bl	181bc <strspn@plt+0x71d8>
   17808:	ldr	r3, [sp, #4]
   1780c:	cmp	r0, r4
   17810:	movle	r0, #0
   17814:	movgt	r0, #1
   17818:	b	176d0 <strspn@plt+0x66ec>
   1781c:	push	{r4, lr}
   17820:	mov	r1, #1
   17824:	bl	17a38 <strspn@plt+0x6a54>
   17828:	cmp	r0, #0
   1782c:	popne	{r4, pc}
   17830:	bl	17950 <strspn@plt+0x696c>
   17834:	push	{r4, lr}
   17838:	mov	r1, #1
   1783c:	bl	17a38 <strspn@plt+0x6a54>
   17840:	cmp	r0, #0
   17844:	popne	{r4, pc}
   17848:	bl	17950 <strspn@plt+0x696c>
   1784c:	push	{r4, lr}
   17850:	bl	17a38 <strspn@plt+0x6a54>
   17854:	cmp	r0, #0
   17858:	popne	{r4, pc}
   1785c:	bl	17950 <strspn@plt+0x696c>
   17860:	push	{r4, lr}
   17864:	bl	17a38 <strspn@plt+0x6a54>
   17868:	cmp	r0, #0
   1786c:	popne	{r4, pc}
   17870:	bl	17950 <strspn@plt+0x696c>
   17874:	push	{r4, r5, r6, lr}
   17878:	mov	r6, r0
   1787c:	mov	r0, r1
   17880:	mov	r4, r1
   17884:	bl	17a80 <strspn@plt+0x6a9c>
   17888:	subs	r5, r0, #0
   1788c:	beq	178a4 <strspn@plt+0x68c0>
   17890:	mov	r2, r4
   17894:	mov	r1, r6
   17898:	bl	10dc8 <memcpy@plt>
   1789c:	mov	r0, r5
   178a0:	pop	{r4, r5, r6, pc}
   178a4:	bl	17950 <strspn@plt+0x696c>
   178a8:	push	{r4, r5, r6, lr}
   178ac:	mov	r6, r0
   178b0:	mov	r0, r1
   178b4:	mov	r4, r1
   178b8:	bl	17a80 <strspn@plt+0x6a9c>
   178bc:	subs	r5, r0, #0
   178c0:	beq	178d8 <strspn@plt+0x68f4>
   178c4:	mov	r2, r4
   178c8:	mov	r1, r6
   178cc:	bl	10dc8 <memcpy@plt>
   178d0:	mov	r0, r5
   178d4:	pop	{r4, r5, r6, pc}
   178d8:	bl	17950 <strspn@plt+0x696c>
   178dc:	push	{r4, r5, r6, lr}
   178e0:	mov	r6, r0
   178e4:	add	r0, r1, #1
   178e8:	mov	r4, r1
   178ec:	bl	17a80 <strspn@plt+0x6a9c>
   178f0:	subs	r5, r0, #0
   178f4:	beq	17914 <strspn@plt+0x6930>
   178f8:	mov	r3, #0
   178fc:	mov	r1, r6
   17900:	strb	r3, [r5, r4]
   17904:	mov	r2, r4
   17908:	bl	10dc8 <memcpy@plt>
   1790c:	mov	r0, r5
   17910:	pop	{r4, r5, r6, pc}
   17914:	bl	17950 <strspn@plt+0x696c>
   17918:	push	{r4, r5, r6, lr}
   1791c:	mov	r6, r0
   17920:	bl	10f00 <strlen@plt>
   17924:	add	r4, r0, #1
   17928:	mov	r0, r4
   1792c:	bl	17a80 <strspn@plt+0x6a9c>
   17930:	subs	r5, r0, #0
   17934:	beq	1794c <strspn@plt+0x6968>
   17938:	mov	r2, r4
   1793c:	mov	r1, r6
   17940:	bl	10dc8 <memcpy@plt>
   17944:	mov	r0, r5
   17948:	pop	{r4, r5, r6, pc}
   1794c:	bl	17950 <strspn@plt+0x696c>
   17950:	ldr	r3, [pc, #44]	; 17984 <strspn@plt+0x69a0>
   17954:	push	{r4, lr}
   17958:	mov	r2, #5
   1795c:	ldr	r1, [pc, #36]	; 17988 <strspn@plt+0x69a4>
   17960:	mov	r0, #0
   17964:	ldr	r4, [r3]
   17968:	bl	10e10 <dcgettext@plt>
   1796c:	ldr	r2, [pc, #24]	; 1798c <strspn@plt+0x69a8>
   17970:	mov	r1, #0
   17974:	mov	r3, r0
   17978:	mov	r0, r4
   1797c:	bl	10e88 <error@plt>
   17980:	bl	10fd8 <abort@plt>
   17984:	andeq	sl, r2, r0, lsl #2
   17988:	andeq	r9, r1, ip, lsl #5
   1798c:	andeq	r8, r1, r0, asr lr
   17990:	push	{r4, r5, r6, r7, r8, r9, lr}
   17994:	sub	sp, sp, #12
   17998:	mov	r6, r0
   1799c:	mov	r9, r3
   179a0:	mov	r5, r1
   179a4:	mov	r8, r2
   179a8:	bl	10f18 <__errno_location@plt>
   179ac:	mov	r4, #0
   179b0:	add	r1, sp, #4
   179b4:	str	r4, [r0]
   179b8:	mov	r7, r0
   179bc:	mov	r0, r6
   179c0:	blx	r9
   179c4:	ldr	r3, [sp, #4]
   179c8:	cmp	r6, r3
   179cc:	beq	17a0c <strspn@plt+0x6a28>
   179d0:	cmp	r5, r4
   179d4:	beq	17a14 <strspn@plt+0x6a30>
   179d8:	vcmp.f64	d0, #0.0
   179dc:	vmrs	APSR_nzcv, fpscr
   179e0:	moveq	r0, #1
   179e4:	beq	179fc <strspn@plt+0x6a18>
   179e8:	ldr	r0, [r7]
   179ec:	subs	r0, r0, #34	; 0x22
   179f0:	movne	r0, #1
   179f4:	cmp	r5, #0
   179f8:	beq	17a00 <strspn@plt+0x6a1c>
   179fc:	str	r3, [r5]
   17a00:	vstr	d0, [r8]
   17a04:	add	sp, sp, #12
   17a08:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17a0c:	mov	r0, r4
   17a10:	b	179f4 <strspn@plt+0x6a10>
   17a14:	ldrb	r2, [r3]
   17a18:	cmp	r2, r4
   17a1c:	movne	r0, r5
   17a20:	bne	17a00 <strspn@plt+0x6a1c>
   17a24:	vcmp.f64	d0, #0.0
   17a28:	vmrs	APSR_nzcv, fpscr
   17a2c:	bne	179e8 <strspn@plt+0x6a04>
   17a30:	mov	r0, #1
   17a34:	b	17a00 <strspn@plt+0x6a1c>
   17a38:	cmp	r1, #0
   17a3c:	cmpne	r0, #0
   17a40:	moveq	r1, #1
   17a44:	moveq	r0, r1
   17a48:	umull	r2, r3, r0, r1
   17a4c:	adds	r3, r3, #0
   17a50:	movne	r3, #1
   17a54:	cmp	r2, #0
   17a58:	blt	17a68 <strspn@plt+0x6a84>
   17a5c:	cmp	r3, #0
   17a60:	bne	17a68 <strspn@plt+0x6a84>
   17a64:	b	10d44 <calloc@plt>
   17a68:	push	{r4, lr}
   17a6c:	bl	10f18 <__errno_location@plt>
   17a70:	mov	r3, #12
   17a74:	str	r3, [r0]
   17a78:	mov	r0, #0
   17a7c:	pop	{r4, pc}
   17a80:	cmp	r0, #0
   17a84:	moveq	r0, #1
   17a88:	cmp	r0, #0
   17a8c:	blt	17a94 <strspn@plt+0x6ab0>
   17a90:	b	10ea0 <malloc@plt>
   17a94:	push	{r4, lr}
   17a98:	bl	10f18 <__errno_location@plt>
   17a9c:	mov	r3, #12
   17aa0:	str	r3, [r0]
   17aa4:	mov	r0, #0
   17aa8:	pop	{r4, pc}
   17aac:	cmp	r0, #0
   17ab0:	beq	17ad4 <strspn@plt+0x6af0>
   17ab4:	cmp	r1, #0
   17ab8:	push	{lr}		; (str lr, [sp, #-4]!)
   17abc:	sub	sp, sp, #12
   17ac0:	beq	17adc <strspn@plt+0x6af8>
   17ac4:	blt	17af4 <strspn@plt+0x6b10>
   17ac8:	add	sp, sp, #12
   17acc:	pop	{lr}		; (ldr lr, [sp], #4)
   17ad0:	b	10e1c <realloc@plt>
   17ad4:	mov	r0, r1
   17ad8:	b	17a80 <strspn@plt+0x6a9c>
   17adc:	str	r1, [sp, #4]
   17ae0:	bl	12828 <strspn@plt+0x1844>
   17ae4:	ldr	r3, [sp, #4]
   17ae8:	mov	r0, r3
   17aec:	add	sp, sp, #12
   17af0:	pop	{pc}		; (ldr pc, [sp], #4)
   17af4:	bl	10f18 <__errno_location@plt>
   17af8:	mov	r2, #12
   17afc:	mov	r3, #0
   17b00:	str	r2, [r0]
   17b04:	b	17ae8 <strspn@plt+0x6b04>
   17b08:	push	{r4, r5, r6, r7, r8, lr}
   17b0c:	mov	r6, r0
   17b10:	ldr	r4, [pc, #168]	; 17bc0 <strspn@plt+0x6bdc>
   17b14:	vpush	{d8}
   17b18:	mov	r5, r1
   17b1c:	ldr	r2, [r4]
   17b20:	cmp	r2, #0
   17b24:	beq	17b9c <strspn@plt+0x6bb8>
   17b28:	ldr	r0, [r4]
   17b2c:	cmp	r0, #0
   17b30:	beq	17b7c <strspn@plt+0x6b98>
   17b34:	bl	10d68 <uselocale@plt>
   17b38:	subs	r7, r0, #0
   17b3c:	beq	17b7c <strspn@plt+0x6b98>
   17b40:	mov	r1, r5
   17b44:	mov	r0, r6
   17b48:	bl	10de0 <strtold@plt>
   17b4c:	vmov.f64	d8, d0
   17b50:	bl	10f18 <__errno_location@plt>
   17b54:	mov	r4, r0
   17b58:	mov	r0, r7
   17b5c:	ldr	r5, [r4]
   17b60:	bl	10d68 <uselocale@plt>
   17b64:	cmp	r0, #0
   17b68:	strne	r5, [r4]
   17b6c:	beq	17bb0 <strspn@plt+0x6bcc>
   17b70:	vmov.f64	d0, d8
   17b74:	vpop	{d8}
   17b78:	pop	{r4, r5, r6, r7, r8, pc}
   17b7c:	cmp	r5, #0
   17b80:	vldreq	d8, [pc, #48]	; 17bb8 <strspn@plt+0x6bd4>
   17b84:	beq	17b70 <strspn@plt+0x6b8c>
   17b88:	vldr	d8, [pc, #40]	; 17bb8 <strspn@plt+0x6bd4>
   17b8c:	str	r6, [r5]
   17b90:	vmov.f64	d0, d8
   17b94:	vpop	{d8}
   17b98:	pop	{r4, r5, r6, r7, r8, pc}
   17b9c:	ldr	r1, [pc, #32]	; 17bc4 <strspn@plt+0x6be0>
   17ba0:	ldr	r0, [pc, #32]	; 17bc8 <strspn@plt+0x6be4>
   17ba4:	bl	10fa8 <newlocale@plt>
   17ba8:	str	r0, [r4]
   17bac:	b	17b28 <strspn@plt+0x6b44>
   17bb0:	bl	10fd8 <abort@plt>
   17bb4:	nop			; (mov r0, r0)
	...
   17bc0:	andeq	sl, r2, r8, asr #5
   17bc4:	muleq	r1, ip, sp
   17bc8:			; <UNDEFINED> instruction: 0x00001fbf
   17bcc:	push	{r4, r5, r6, lr}
   17bd0:	mov	r4, r0
   17bd4:	bl	10e70 <__fpending@plt>
   17bd8:	ldr	r5, [r4]
   17bdc:	and	r5, r5, #32
   17be0:	mov	r6, r0
   17be4:	mov	r0, r4
   17be8:	bl	17c48 <strspn@plt+0x6c64>
   17bec:	cmp	r5, #0
   17bf0:	mov	r4, r0
   17bf4:	bne	17c14 <strspn@plt+0x6c30>
   17bf8:	cmp	r0, #0
   17bfc:	beq	17c0c <strspn@plt+0x6c28>
   17c00:	cmp	r6, #0
   17c04:	beq	17c30 <strspn@plt+0x6c4c>
   17c08:	mvn	r4, #0
   17c0c:	mov	r0, r4
   17c10:	pop	{r4, r5, r6, pc}
   17c14:	cmp	r0, #0
   17c18:	bne	17c08 <strspn@plt+0x6c24>
   17c1c:	bl	10f18 <__errno_location@plt>
   17c20:	str	r4, [r0]
   17c24:	mvn	r4, #0
   17c28:	mov	r0, r4
   17c2c:	pop	{r4, r5, r6, pc}
   17c30:	bl	10f18 <__errno_location@plt>
   17c34:	ldr	r4, [r0]
   17c38:	subs	r4, r4, #9
   17c3c:	mvnne	r4, #0
   17c40:	mov	r0, r4
   17c44:	pop	{r4, r5, r6, pc}
   17c48:	push	{r4, r5, lr}
   17c4c:	sub	sp, sp, #12
   17c50:	mov	r4, r0
   17c54:	bl	10f54 <fileno@plt>
   17c58:	cmp	r0, #0
   17c5c:	mov	r0, r4
   17c60:	blt	17cdc <strspn@plt+0x6cf8>
   17c64:	bl	10eb8 <__freading@plt>
   17c68:	cmp	r0, #0
   17c6c:	bne	17ca8 <strspn@plt+0x6cc4>
   17c70:	mov	r0, r4
   17c74:	bl	17ce8 <strspn@plt+0x6d04>
   17c78:	cmp	r0, #0
   17c7c:	beq	17cd8 <strspn@plt+0x6cf4>
   17c80:	bl	10f18 <__errno_location@plt>
   17c84:	mov	r5, r0
   17c88:	mov	r0, r4
   17c8c:	ldr	r4, [r5]
   17c90:	bl	10f6c <fclose@plt>
   17c94:	cmp	r4, #0
   17c98:	mvnne	r0, #0
   17c9c:	strne	r4, [r5]
   17ca0:	add	sp, sp, #12
   17ca4:	pop	{r4, r5, pc}
   17ca8:	mov	r0, r4
   17cac:	bl	10f54 <fileno@plt>
   17cb0:	mov	r3, #1
   17cb4:	str	r3, [sp]
   17cb8:	mov	r2, #0
   17cbc:	mov	r3, #0
   17cc0:	bl	10e4c <lseek64@plt>
   17cc4:	mvn	r3, #0
   17cc8:	mvn	r2, #0
   17ccc:	cmp	r1, r3
   17cd0:	cmpeq	r0, r2
   17cd4:	bne	17c70 <strspn@plt+0x6c8c>
   17cd8:	mov	r0, r4
   17cdc:	add	sp, sp, #12
   17ce0:	pop	{r4, r5, lr}
   17ce4:	b	10f6c <fclose@plt>
   17ce8:	push	{r4, lr}
   17cec:	subs	r4, r0, #0
   17cf0:	sub	sp, sp, #8
   17cf4:	beq	17d10 <strspn@plt+0x6d2c>
   17cf8:	bl	10eb8 <__freading@plt>
   17cfc:	cmp	r0, #0
   17d00:	beq	17d10 <strspn@plt+0x6d2c>
   17d04:	ldr	r3, [r4]
   17d08:	tst	r3, #256	; 0x100
   17d0c:	bne	17d20 <strspn@plt+0x6d3c>
   17d10:	mov	r0, r4
   17d14:	add	sp, sp, #8
   17d18:	pop	{r4, lr}
   17d1c:	b	10d98 <fflush@plt>
   17d20:	mov	r3, #1
   17d24:	str	r3, [sp]
   17d28:	mov	r2, #0
   17d2c:	mov	r3, #0
   17d30:	mov	r0, r4
   17d34:	bl	17d48 <strspn@plt+0x6d64>
   17d38:	mov	r0, r4
   17d3c:	add	sp, sp, #8
   17d40:	pop	{r4, lr}
   17d44:	b	10d98 <fflush@plt>
   17d48:	push	{r4, r5, r6, r7, r8, lr}
   17d4c:	sub	sp, sp, #8
   17d50:	ldmib	r0, {ip, lr}
   17d54:	mov	r4, r0
   17d58:	ldr	r5, [sp, #32]
   17d5c:	cmp	lr, ip
   17d60:	beq	17d78 <strspn@plt+0x6d94>
   17d64:	str	r5, [sp, #32]
   17d68:	mov	r0, r4
   17d6c:	add	sp, sp, #8
   17d70:	pop	{r4, r5, r6, r7, r8, lr}
   17d74:	b	10f78 <fseeko64@plt>
   17d78:	ldr	lr, [r0, #20]
   17d7c:	ldr	ip, [r0, #16]
   17d80:	cmp	lr, ip
   17d84:	bne	17d64 <strspn@plt+0x6d80>
   17d88:	ldr	r8, [r0, #36]	; 0x24
   17d8c:	cmp	r8, #0
   17d90:	bne	17d64 <strspn@plt+0x6d80>
   17d94:	mov	r6, r2
   17d98:	mov	r7, r3
   17d9c:	bl	10f54 <fileno@plt>
   17da0:	mov	r2, r6
   17da4:	mov	r3, r7
   17da8:	str	r5, [sp]
   17dac:	bl	10e4c <lseek64@plt>
   17db0:	mvn	r3, #0
   17db4:	mvn	r2, #0
   17db8:	cmp	r1, r3
   17dbc:	cmpeq	r0, r2
   17dc0:	beq	17de0 <strspn@plt+0x6dfc>
   17dc4:	ldr	r3, [r4]
   17dc8:	strd	r0, [r4, #80]	; 0x50
   17dcc:	mov	r0, r8
   17dd0:	bic	r3, r3, #16
   17dd4:	str	r3, [r4]
   17dd8:	add	sp, sp, #8
   17ddc:	pop	{r4, r5, r6, r7, r8, pc}
   17de0:	mvn	r0, #0
   17de4:	b	17dd8 <strspn@plt+0x6df4>
   17de8:	push	{r4, lr}
   17dec:	mov	r0, #14
   17df0:	bl	10f9c <nl_langinfo@plt>
   17df4:	cmp	r0, #0
   17df8:	beq	17e10 <strspn@plt+0x6e2c>
   17dfc:	ldrb	r2, [r0]
   17e00:	ldr	r3, [pc, #16]	; 17e18 <strspn@plt+0x6e34>
   17e04:	cmp	r2, #0
   17e08:	moveq	r0, r3
   17e0c:	pop	{r4, pc}
   17e10:	ldr	r0, [pc]	; 17e18 <strspn@plt+0x6e34>
   17e14:	pop	{r4, pc}
   17e18:	andeq	r9, r1, r0, lsr #5
   17e1c:	push	{r4, r5, r6, r7, lr}
   17e20:	subs	r6, r0, #0
   17e24:	sub	sp, sp, #12
   17e28:	addeq	r6, sp, #4
   17e2c:	mov	r0, r6
   17e30:	mov	r5, r2
   17e34:	mov	r7, r1
   17e38:	bl	10e7c <mbrtowc@plt>
   17e3c:	cmp	r5, #0
   17e40:	cmnne	r0, #3
   17e44:	mov	r4, r0
   17e48:	bls	17e64 <strspn@plt+0x6e80>
   17e4c:	mov	r0, #0
   17e50:	bl	17ebc <strspn@plt+0x6ed8>
   17e54:	cmp	r0, #0
   17e58:	moveq	r4, #1
   17e5c:	ldrbeq	r3, [r7]
   17e60:	streq	r3, [r6]
   17e64:	mov	r0, r4
   17e68:	add	sp, sp, #12
   17e6c:	pop	{r4, r5, r6, r7, pc}
   17e70:	push	{r4, r5, r6, lr}
   17e74:	subs	r4, r2, #0
   17e78:	mov	r6, r0
   17e7c:	mov	r5, r1
   17e80:	beq	17eac <strspn@plt+0x6ec8>
   17e84:	mov	r1, r4
   17e88:	mvn	r0, #0
   17e8c:	bl	17fb0 <strspn@plt+0x6fcc>
   17e90:	cmp	r0, r5
   17e94:	bcs	17eac <strspn@plt+0x6ec8>
   17e98:	bl	10f18 <__errno_location@plt>
   17e9c:	mov	r3, #12
   17ea0:	str	r3, [r0]
   17ea4:	mov	r0, #0
   17ea8:	pop	{r4, r5, r6, pc}
   17eac:	mul	r1, r5, r4
   17eb0:	mov	r0, r6
   17eb4:	pop	{r4, r5, r6, lr}
   17eb8:	b	17aac <strspn@plt+0x6ac8>
   17ebc:	push	{lr}		; (str lr, [sp, #-4]!)
   17ec0:	sub	sp, sp, #268	; 0x10c
   17ec4:	add	r1, sp, #4
   17ec8:	ldr	r2, [pc, #60]	; 17f0c <strspn@plt+0x6f28>
   17ecc:	bl	17f18 <strspn@plt+0x6f34>
   17ed0:	cmp	r0, #0
   17ed4:	movne	r0, #0
   17ed8:	bne	17f04 <strspn@plt+0x6f20>
   17edc:	ldr	r1, [pc, #44]	; 17f10 <strspn@plt+0x6f2c>
   17ee0:	add	r0, sp, #4
   17ee4:	bl	10d74 <strcmp@plt>
   17ee8:	cmp	r0, #0
   17eec:	beq	17f04 <strspn@plt+0x6f20>
   17ef0:	add	r0, sp, #4
   17ef4:	ldr	r1, [pc, #24]	; 17f14 <strspn@plt+0x6f30>
   17ef8:	bl	10d74 <strcmp@plt>
   17efc:	adds	r0, r0, #0
   17f00:	movne	r0, #1
   17f04:	add	sp, sp, #268	; 0x10c
   17f08:	pop	{pc}		; (ldr pc, [sp], #4)
   17f0c:	andeq	r0, r0, r1, lsl #2
   17f10:	muleq	r1, ip, sp
   17f14:	andeq	r9, r1, r8, lsr #5
   17f18:	push	{r4, r5, r6, lr}
   17f1c:	mov	r5, r1
   17f20:	mov	r1, #0
   17f24:	mov	r4, r2
   17f28:	bl	10f84 <setlocale@plt>
   17f2c:	subs	r6, r0, #0
   17f30:	beq	17f8c <strspn@plt+0x6fa8>
   17f34:	bl	10f00 <strlen@plt>
   17f38:	cmp	r4, r0
   17f3c:	bhi	17f74 <strspn@plt+0x6f90>
   17f40:	cmp	r4, #0
   17f44:	bne	17f50 <strspn@plt+0x6f6c>
   17f48:	mov	r0, #34	; 0x22
   17f4c:	pop	{r4, r5, r6, pc}
   17f50:	sub	r4, r4, #1
   17f54:	mov	r1, r6
   17f58:	mov	r2, r4
   17f5c:	mov	r0, r5
   17f60:	bl	10dc8 <memcpy@plt>
   17f64:	mov	r3, #0
   17f68:	strb	r3, [r5, r4]
   17f6c:	mov	r0, #34	; 0x22
   17f70:	pop	{r4, r5, r6, pc}
   17f74:	add	r2, r0, #1
   17f78:	mov	r1, r6
   17f7c:	mov	r0, r5
   17f80:	bl	10dc8 <memcpy@plt>
   17f84:	mov	r0, #0
   17f88:	pop	{r4, r5, r6, pc}
   17f8c:	cmp	r4, #0
   17f90:	beq	17fa0 <strspn@plt+0x6fbc>
   17f94:	strb	r6, [r5]
   17f98:	mov	r0, #22
   17f9c:	pop	{r4, r5, r6, pc}
   17fa0:	mov	r0, #22
   17fa4:	pop	{r4, r5, r6, pc}
   17fa8:	mov	r1, #0
   17fac:	b	10f84 <setlocale@plt>
   17fb0:	subs	r2, r1, #1
   17fb4:	bxeq	lr
   17fb8:	bcc	18190 <strspn@plt+0x71ac>
   17fbc:	cmp	r0, r1
   17fc0:	bls	18174 <strspn@plt+0x7190>
   17fc4:	tst	r1, r2
   17fc8:	beq	18180 <strspn@plt+0x719c>
   17fcc:	clz	r3, r0
   17fd0:	clz	r2, r1
   17fd4:	sub	r3, r2, r3
   17fd8:	rsbs	r3, r3, #31
   17fdc:	addne	r3, r3, r3, lsl #1
   17fe0:	mov	r2, #0
   17fe4:	addne	pc, pc, r3, lsl #2
   17fe8:	nop			; (mov r0, r0)
   17fec:	cmp	r0, r1, lsl #31
   17ff0:	adc	r2, r2, r2
   17ff4:	subcs	r0, r0, r1, lsl #31
   17ff8:	cmp	r0, r1, lsl #30
   17ffc:	adc	r2, r2, r2
   18000:	subcs	r0, r0, r1, lsl #30
   18004:	cmp	r0, r1, lsl #29
   18008:	adc	r2, r2, r2
   1800c:	subcs	r0, r0, r1, lsl #29
   18010:	cmp	r0, r1, lsl #28
   18014:	adc	r2, r2, r2
   18018:	subcs	r0, r0, r1, lsl #28
   1801c:	cmp	r0, r1, lsl #27
   18020:	adc	r2, r2, r2
   18024:	subcs	r0, r0, r1, lsl #27
   18028:	cmp	r0, r1, lsl #26
   1802c:	adc	r2, r2, r2
   18030:	subcs	r0, r0, r1, lsl #26
   18034:	cmp	r0, r1, lsl #25
   18038:	adc	r2, r2, r2
   1803c:	subcs	r0, r0, r1, lsl #25
   18040:	cmp	r0, r1, lsl #24
   18044:	adc	r2, r2, r2
   18048:	subcs	r0, r0, r1, lsl #24
   1804c:	cmp	r0, r1, lsl #23
   18050:	adc	r2, r2, r2
   18054:	subcs	r0, r0, r1, lsl #23
   18058:	cmp	r0, r1, lsl #22
   1805c:	adc	r2, r2, r2
   18060:	subcs	r0, r0, r1, lsl #22
   18064:	cmp	r0, r1, lsl #21
   18068:	adc	r2, r2, r2
   1806c:	subcs	r0, r0, r1, lsl #21
   18070:	cmp	r0, r1, lsl #20
   18074:	adc	r2, r2, r2
   18078:	subcs	r0, r0, r1, lsl #20
   1807c:	cmp	r0, r1, lsl #19
   18080:	adc	r2, r2, r2
   18084:	subcs	r0, r0, r1, lsl #19
   18088:	cmp	r0, r1, lsl #18
   1808c:	adc	r2, r2, r2
   18090:	subcs	r0, r0, r1, lsl #18
   18094:	cmp	r0, r1, lsl #17
   18098:	adc	r2, r2, r2
   1809c:	subcs	r0, r0, r1, lsl #17
   180a0:	cmp	r0, r1, lsl #16
   180a4:	adc	r2, r2, r2
   180a8:	subcs	r0, r0, r1, lsl #16
   180ac:	cmp	r0, r1, lsl #15
   180b0:	adc	r2, r2, r2
   180b4:	subcs	r0, r0, r1, lsl #15
   180b8:	cmp	r0, r1, lsl #14
   180bc:	adc	r2, r2, r2
   180c0:	subcs	r0, r0, r1, lsl #14
   180c4:	cmp	r0, r1, lsl #13
   180c8:	adc	r2, r2, r2
   180cc:	subcs	r0, r0, r1, lsl #13
   180d0:	cmp	r0, r1, lsl #12
   180d4:	adc	r2, r2, r2
   180d8:	subcs	r0, r0, r1, lsl #12
   180dc:	cmp	r0, r1, lsl #11
   180e0:	adc	r2, r2, r2
   180e4:	subcs	r0, r0, r1, lsl #11
   180e8:	cmp	r0, r1, lsl #10
   180ec:	adc	r2, r2, r2
   180f0:	subcs	r0, r0, r1, lsl #10
   180f4:	cmp	r0, r1, lsl #9
   180f8:	adc	r2, r2, r2
   180fc:	subcs	r0, r0, r1, lsl #9
   18100:	cmp	r0, r1, lsl #8
   18104:	adc	r2, r2, r2
   18108:	subcs	r0, r0, r1, lsl #8
   1810c:	cmp	r0, r1, lsl #7
   18110:	adc	r2, r2, r2
   18114:	subcs	r0, r0, r1, lsl #7
   18118:	cmp	r0, r1, lsl #6
   1811c:	adc	r2, r2, r2
   18120:	subcs	r0, r0, r1, lsl #6
   18124:	cmp	r0, r1, lsl #5
   18128:	adc	r2, r2, r2
   1812c:	subcs	r0, r0, r1, lsl #5
   18130:	cmp	r0, r1, lsl #4
   18134:	adc	r2, r2, r2
   18138:	subcs	r0, r0, r1, lsl #4
   1813c:	cmp	r0, r1, lsl #3
   18140:	adc	r2, r2, r2
   18144:	subcs	r0, r0, r1, lsl #3
   18148:	cmp	r0, r1, lsl #2
   1814c:	adc	r2, r2, r2
   18150:	subcs	r0, r0, r1, lsl #2
   18154:	cmp	r0, r1, lsl #1
   18158:	adc	r2, r2, r2
   1815c:	subcs	r0, r0, r1, lsl #1
   18160:	cmp	r0, r1
   18164:	adc	r2, r2, r2
   18168:	subcs	r0, r0, r1
   1816c:	mov	r0, r2
   18170:	bx	lr
   18174:	moveq	r0, #1
   18178:	movne	r0, #0
   1817c:	bx	lr
   18180:	clz	r2, r1
   18184:	rsb	r2, r2, #31
   18188:	lsr	r0, r0, r2
   1818c:	bx	lr
   18190:	cmp	r0, #0
   18194:	mvnne	r0, #0
   18198:	b	183fc <strspn@plt+0x7418>
   1819c:	cmp	r1, #0
   181a0:	beq	18190 <strspn@plt+0x71ac>
   181a4:	push	{r0, r1, lr}
   181a8:	bl	17fb0 <strspn@plt+0x6fcc>
   181ac:	pop	{r1, r2, lr}
   181b0:	mul	r3, r2, r0
   181b4:	sub	r1, r1, r3
   181b8:	bx	lr
   181bc:	cmp	r1, #0
   181c0:	beq	183cc <strspn@plt+0x73e8>
   181c4:	eor	ip, r0, r1
   181c8:	rsbmi	r1, r1, #0
   181cc:	subs	r2, r1, #1
   181d0:	beq	18398 <strspn@plt+0x73b4>
   181d4:	movs	r3, r0
   181d8:	rsbmi	r3, r0, #0
   181dc:	cmp	r3, r1
   181e0:	bls	183a4 <strspn@plt+0x73c0>
   181e4:	tst	r1, r2
   181e8:	beq	183b4 <strspn@plt+0x73d0>
   181ec:	clz	r2, r3
   181f0:	clz	r0, r1
   181f4:	sub	r2, r0, r2
   181f8:	rsbs	r2, r2, #31
   181fc:	addne	r2, r2, r2, lsl #1
   18200:	mov	r0, #0
   18204:	addne	pc, pc, r2, lsl #2
   18208:	nop			; (mov r0, r0)
   1820c:	cmp	r3, r1, lsl #31
   18210:	adc	r0, r0, r0
   18214:	subcs	r3, r3, r1, lsl #31
   18218:	cmp	r3, r1, lsl #30
   1821c:	adc	r0, r0, r0
   18220:	subcs	r3, r3, r1, lsl #30
   18224:	cmp	r3, r1, lsl #29
   18228:	adc	r0, r0, r0
   1822c:	subcs	r3, r3, r1, lsl #29
   18230:	cmp	r3, r1, lsl #28
   18234:	adc	r0, r0, r0
   18238:	subcs	r3, r3, r1, lsl #28
   1823c:	cmp	r3, r1, lsl #27
   18240:	adc	r0, r0, r0
   18244:	subcs	r3, r3, r1, lsl #27
   18248:	cmp	r3, r1, lsl #26
   1824c:	adc	r0, r0, r0
   18250:	subcs	r3, r3, r1, lsl #26
   18254:	cmp	r3, r1, lsl #25
   18258:	adc	r0, r0, r0
   1825c:	subcs	r3, r3, r1, lsl #25
   18260:	cmp	r3, r1, lsl #24
   18264:	adc	r0, r0, r0
   18268:	subcs	r3, r3, r1, lsl #24
   1826c:	cmp	r3, r1, lsl #23
   18270:	adc	r0, r0, r0
   18274:	subcs	r3, r3, r1, lsl #23
   18278:	cmp	r3, r1, lsl #22
   1827c:	adc	r0, r0, r0
   18280:	subcs	r3, r3, r1, lsl #22
   18284:	cmp	r3, r1, lsl #21
   18288:	adc	r0, r0, r0
   1828c:	subcs	r3, r3, r1, lsl #21
   18290:	cmp	r3, r1, lsl #20
   18294:	adc	r0, r0, r0
   18298:	subcs	r3, r3, r1, lsl #20
   1829c:	cmp	r3, r1, lsl #19
   182a0:	adc	r0, r0, r0
   182a4:	subcs	r3, r3, r1, lsl #19
   182a8:	cmp	r3, r1, lsl #18
   182ac:	adc	r0, r0, r0
   182b0:	subcs	r3, r3, r1, lsl #18
   182b4:	cmp	r3, r1, lsl #17
   182b8:	adc	r0, r0, r0
   182bc:	subcs	r3, r3, r1, lsl #17
   182c0:	cmp	r3, r1, lsl #16
   182c4:	adc	r0, r0, r0
   182c8:	subcs	r3, r3, r1, lsl #16
   182cc:	cmp	r3, r1, lsl #15
   182d0:	adc	r0, r0, r0
   182d4:	subcs	r3, r3, r1, lsl #15
   182d8:	cmp	r3, r1, lsl #14
   182dc:	adc	r0, r0, r0
   182e0:	subcs	r3, r3, r1, lsl #14
   182e4:	cmp	r3, r1, lsl #13
   182e8:	adc	r0, r0, r0
   182ec:	subcs	r3, r3, r1, lsl #13
   182f0:	cmp	r3, r1, lsl #12
   182f4:	adc	r0, r0, r0
   182f8:	subcs	r3, r3, r1, lsl #12
   182fc:	cmp	r3, r1, lsl #11
   18300:	adc	r0, r0, r0
   18304:	subcs	r3, r3, r1, lsl #11
   18308:	cmp	r3, r1, lsl #10
   1830c:	adc	r0, r0, r0
   18310:	subcs	r3, r3, r1, lsl #10
   18314:	cmp	r3, r1, lsl #9
   18318:	adc	r0, r0, r0
   1831c:	subcs	r3, r3, r1, lsl #9
   18320:	cmp	r3, r1, lsl #8
   18324:	adc	r0, r0, r0
   18328:	subcs	r3, r3, r1, lsl #8
   1832c:	cmp	r3, r1, lsl #7
   18330:	adc	r0, r0, r0
   18334:	subcs	r3, r3, r1, lsl #7
   18338:	cmp	r3, r1, lsl #6
   1833c:	adc	r0, r0, r0
   18340:	subcs	r3, r3, r1, lsl #6
   18344:	cmp	r3, r1, lsl #5
   18348:	adc	r0, r0, r0
   1834c:	subcs	r3, r3, r1, lsl #5
   18350:	cmp	r3, r1, lsl #4
   18354:	adc	r0, r0, r0
   18358:	subcs	r3, r3, r1, lsl #4
   1835c:	cmp	r3, r1, lsl #3
   18360:	adc	r0, r0, r0
   18364:	subcs	r3, r3, r1, lsl #3
   18368:	cmp	r3, r1, lsl #2
   1836c:	adc	r0, r0, r0
   18370:	subcs	r3, r3, r1, lsl #2
   18374:	cmp	r3, r1, lsl #1
   18378:	adc	r0, r0, r0
   1837c:	subcs	r3, r3, r1, lsl #1
   18380:	cmp	r3, r1
   18384:	adc	r0, r0, r0
   18388:	subcs	r3, r3, r1
   1838c:	cmp	ip, #0
   18390:	rsbmi	r0, r0, #0
   18394:	bx	lr
   18398:	teq	ip, r0
   1839c:	rsbmi	r0, r0, #0
   183a0:	bx	lr
   183a4:	movcc	r0, #0
   183a8:	asreq	r0, ip, #31
   183ac:	orreq	r0, r0, #1
   183b0:	bx	lr
   183b4:	clz	r2, r1
   183b8:	rsb	r2, r2, #31
   183bc:	cmp	ip, #0
   183c0:	lsr	r0, r3, r2
   183c4:	rsbmi	r0, r0, #0
   183c8:	bx	lr
   183cc:	cmp	r0, #0
   183d0:	mvngt	r0, #-2147483648	; 0x80000000
   183d4:	movlt	r0, #-2147483648	; 0x80000000
   183d8:	b	183fc <strspn@plt+0x7418>
   183dc:	cmp	r1, #0
   183e0:	beq	183cc <strspn@plt+0x73e8>
   183e4:	push	{r0, r1, lr}
   183e8:	bl	181c4 <strspn@plt+0x71e0>
   183ec:	pop	{r1, r2, lr}
   183f0:	mul	r3, r2, r0
   183f4:	sub	r1, r1, r3
   183f8:	bx	lr
   183fc:	push	{r1, lr}
   18400:	mov	r0, #8
   18404:	bl	10d5c <raise@plt>
   18408:	pop	{r1, pc}
   1840c:	andeq	r0, r0, r0
   18410:	vmov	d7, r0, r1
   18414:	vldr	d6, [pc, #44]	; 18448 <strspn@plt+0x7464>
   18418:	vldr	d5, [pc, #48]	; 18450 <strspn@plt+0x746c>
   1841c:	mov	r0, #0
   18420:	vmul.f64	d6, d7, d6
   18424:	vcvt.u32.f64	s12, d6
   18428:	vcvt.f64.u32	d4, s12
   1842c:	vmov	r1, s12
   18430:	vmls.f64	d7, d4, d5
   18434:	vcvt.u32.f64	s14, d7
   18438:	vmov	r3, s14
   1843c:	orr	r0, r0, r3
   18440:	bx	lr
   18444:	nop			; (mov r0, r0)
   18448:	andeq	r0, r0, r0
   1844c:	ldclcc	0, cr0, [r0]
   18450:	andeq	r0, r0, r0
   18454:	mvnsmi	r0, r0
   18458:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1845c:	mov	r7, r0
   18460:	ldr	r6, [pc, #72]	; 184b0 <strspn@plt+0x74cc>
   18464:	ldr	r5, [pc, #72]	; 184b4 <strspn@plt+0x74d0>
   18468:	add	r6, pc, r6
   1846c:	add	r5, pc, r5
   18470:	sub	r6, r6, r5
   18474:	mov	r8, r1
   18478:	mov	r9, r2
   1847c:	bl	10d24 <calloc@plt-0x20>
   18480:	asrs	r6, r6, #2
   18484:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18488:	mov	r4, #0
   1848c:	add	r4, r4, #1
   18490:	ldr	r3, [r5], #4
   18494:	mov	r2, r9
   18498:	mov	r1, r8
   1849c:	mov	r0, r7
   184a0:	blx	r3
   184a4:	cmp	r6, r4
   184a8:	bne	1848c <strspn@plt+0x74a8>
   184ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   184b0:	andeq	r1, r1, r0, lsr #21
   184b4:	muleq	r1, r8, sl
   184b8:	bx	lr
   184bc:	ldr	r3, [pc, #12]	; 184d0 <strspn@plt+0x74ec>
   184c0:	mov	r1, #0
   184c4:	add	r3, pc, r3
   184c8:	ldr	r2, [r3]
   184cc:	b	10f30 <__cxa_atexit@plt>
   184d0:	andeq	r1, r1, ip, lsr #24

Disassembly of section .fini:

000184d4 <.fini>:
   184d4:	push	{r3, lr}
   184d8:	pop	{r3, pc}
