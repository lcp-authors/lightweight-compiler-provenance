
../repos/prog2/1.4:     file format elf32-littlearm


Disassembly of section .init:

00010664 <.init>:
   10664:	push	{r3, lr}
   10668:	bl	10744 <_start@@Base+0x3c>
   1066c:	pop	{r3, pc}

Disassembly of section .plt:

00010670 <printf@plt-0x14>:
   10670:	push	{lr}		; (str lr, [sp, #-4]!)
   10674:	ldr	lr, [pc, #4]	; 10680 <printf@plt-0x4>
   10678:	add	lr, pc, lr
   1067c:	ldr	pc, [lr, #8]!
   10680:	andeq	r0, r1, r0, lsl #19

00010684 <printf@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #16, 20	; 0x10000
   1068c:	ldr	pc, [ip, #2432]!	; 0x980

00010690 <fopen@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #16, 20	; 0x10000
   10698:	ldr	pc, [ip, #2424]!	; 0x978

0001069c <free@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #16, 20	; 0x10000
   106a4:	ldr	pc, [ip, #2416]!	; 0x970

000106a8 <malloc@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #16, 20	; 0x10000
   106b0:	ldr	pc, [ip, #2408]!	; 0x968

000106b4 <__libc_start_main@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #16, 20	; 0x10000
   106bc:	ldr	pc, [ip, #2400]!	; 0x960

000106c0 <__gmon_start__@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #16, 20	; 0x10000
   106c8:	ldr	pc, [ip, #2392]!	; 0x958

000106cc <exit@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2384]!	; 0x950

000106d8 <fclose@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2376]!	; 0x948

000106e4 <fseek@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #16, 20	; 0x10000
   106ec:	ldr	pc, [ip, #2368]!	; 0x940

000106f0 <abort@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2360]!	; 0x938

000106fc <getc@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2352]!	; 0x930

Disassembly of section .text:

00010708 <_start@@Base>:
   10708:	mov	fp, #0
   1070c:	mov	lr, #0
   10710:	pop	{r1}		; (ldr r1, [sp], #4)
   10714:	mov	r2, sp
   10718:	push	{r2}		; (str r2, [sp, #-4]!)
   1071c:	push	{r0}		; (str r0, [sp, #-4]!)
   10720:	ldr	ip, [pc, #16]	; 10738 <_start@@Base+0x30>
   10724:	push	{ip}		; (str ip, [sp, #-4]!)
   10728:	ldr	r0, [pc, #12]	; 1073c <_start@@Base+0x34>
   1072c:	ldr	r3, [pc, #12]	; 10740 <_start@@Base+0x38>
   10730:	bl	106b4 <__libc_start_main@plt>
   10734:	bl	106f0 <abort@plt>
   10738:	andeq	r0, r1, ip, lsl #25
   1073c:	andeq	r0, r1, ip, ror #16
   10740:	andeq	r0, r1, ip, lsr #24
   10744:	ldr	r3, [pc, #20]	; 10760 <_start@@Base+0x58>
   10748:	ldr	r2, [pc, #20]	; 10764 <_start@@Base+0x5c>
   1074c:	add	r3, pc, r3
   10750:	ldr	r2, [r3, r2]
   10754:	cmp	r2, #0
   10758:	bxeq	lr
   1075c:	b	106c0 <__gmon_start__@plt>
   10760:	andeq	r0, r1, ip, lsr #17
   10764:	andeq	r0, r0, r8, lsr r0
   10768:	ldr	r3, [pc, #28]	; 1078c <_start@@Base+0x84>
   1076c:	ldr	r0, [pc, #28]	; 10790 <_start@@Base+0x88>
   10770:	sub	r3, r3, r0
   10774:	cmp	r3, #6
   10778:	bxls	lr
   1077c:	ldr	r3, [pc, #16]	; 10794 <_start@@Base+0x8c>
   10780:	cmp	r3, #0
   10784:	bxeq	lr
   10788:	bx	r3
   1078c:	andeq	r1, r2, r7, asr #32
   10790:	andeq	r1, r2, r4, asr #32
   10794:	andeq	r0, r0, r0
   10798:	ldr	r1, [pc, #36]	; 107c4 <_start@@Base+0xbc>
   1079c:	ldr	r0, [pc, #36]	; 107c8 <_start@@Base+0xc0>
   107a0:	sub	r1, r1, r0
   107a4:	asr	r1, r1, #2
   107a8:	add	r1, r1, r1, lsr #31
   107ac:	asrs	r1, r1, #1
   107b0:	bxeq	lr
   107b4:	ldr	r3, [pc, #16]	; 107cc <_start@@Base+0xc4>
   107b8:	cmp	r3, #0
   107bc:	bxeq	lr
   107c0:	bx	r3
   107c4:	andeq	r1, r2, r4, asr #32
   107c8:	andeq	r1, r2, r4, asr #32
   107cc:	andeq	r0, r0, r0
   107d0:	push	{r4, lr}
   107d4:	ldr	r4, [pc, #24]	; 107f4 <_start@@Base+0xec>
   107d8:	ldrb	r3, [r4]
   107dc:	cmp	r3, #0
   107e0:	popne	{r4, pc}
   107e4:	bl	10768 <_start@@Base+0x60>
   107e8:	mov	r3, #1
   107ec:	strb	r3, [r4]
   107f0:	pop	{r4, pc}
   107f4:	andeq	r1, r2, r4, asr #32
   107f8:	ldr	r0, [pc, #40]	; 10828 <_start@@Base+0x120>
   107fc:	ldr	r3, [r0]
   10800:	cmp	r3, #0
   10804:	bne	1080c <_start@@Base+0x104>
   10808:	b	10798 <_start@@Base+0x90>
   1080c:	ldr	r3, [pc, #24]	; 1082c <_start@@Base+0x124>
   10810:	cmp	r3, #0
   10814:	beq	10808 <_start@@Base+0x100>
   10818:	push	{r4, lr}
   1081c:	blx	r3
   10820:	pop	{r4, lr}
   10824:	b	10798 <_start@@Base+0x90>
   10828:	andeq	r0, r2, r4, lsl pc
   1082c:	andeq	r0, r0, r0

00010830 <print_pixelinfo@@Base>:
   10830:	push	{lr}		; (str lr, [sp, #-4]!)
   10834:	sub	sp, sp, #12
   10838:	add	r3, r2, r2, lsl #1
   1083c:	ldr	ip, [r0, r1, lsl #2]
   10840:	add	r0, ip, r3
   10844:	ldrb	r3, [ip, r3]
   10848:	ldrb	ip, [r0, #2]
   1084c:	str	ip, [sp, #4]
   10850:	ldrb	r0, [r0, #1]
   10854:	str	r0, [sp]
   10858:	ldr	r0, [pc, #8]	; 10868 <print_pixelinfo@@Base+0x38>
   1085c:	bl	10684 <printf@plt>
   10860:	add	sp, sp, #12
   10864:	pop	{pc}		; (ldr pc, [sp], #4)
   10868:	muleq	r1, ip, ip

0001086c <main@@Base>:
   1086c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10870:	sub	sp, sp, #12
   10874:	ldr	r1, [pc, #904]	; 10c04 <main@@Base+0x398>
   10878:	ldr	r0, [pc, #904]	; 10c08 <main@@Base+0x39c>
   1087c:	bl	10690 <fopen@plt>
   10880:	mov	r6, r0
   10884:	bl	106fc <getc@plt>
   10888:	cmp	r0, #66	; 0x42
   1088c:	bne	10a40 <main@@Base+0x1d4>
   10890:	mov	r0, r6
   10894:	bl	106fc <getc@plt>
   10898:	cmp	r0, #77	; 0x4d
   1089c:	bne	10a40 <main@@Base+0x1d4>
   108a0:	mov	r0, r6
   108a4:	bl	106fc <getc@plt>
   108a8:	mov	r5, r0
   108ac:	mov	r0, r6
   108b0:	bl	106fc <getc@plt>
   108b4:	mov	r7, r0
   108b8:	mov	r0, r6
   108bc:	bl	106fc <getc@plt>
   108c0:	lsl	r4, r0, #16
   108c4:	orr	r4, r4, r7, lsl #8
   108c8:	orr	r4, r4, r5
   108cc:	mov	r0, r6
   108d0:	bl	106fc <getc@plt>
   108d4:	orr	r1, r4, r0, lsl #24
   108d8:	ldr	r0, [pc, #812]	; 10c0c <main@@Base+0x3a0>
   108dc:	bl	10684 <printf@plt>
   108e0:	mov	r2, #1
   108e4:	mov	r1, #4
   108e8:	mov	r0, r6
   108ec:	bl	106e4 <fseek@plt>
   108f0:	mov	r0, r6
   108f4:	bl	106fc <getc@plt>
   108f8:	mov	r5, r0
   108fc:	mov	r0, r6
   10900:	bl	106fc <getc@plt>
   10904:	mov	r7, r0
   10908:	mov	r0, r6
   1090c:	bl	106fc <getc@plt>
   10910:	lsl	r4, r0, #16
   10914:	orr	r4, r4, r7, lsl #8
   10918:	orr	r4, r4, r5
   1091c:	mov	r0, r6
   10920:	bl	106fc <getc@plt>
   10924:	orr	r4, r4, r0, lsl #24
   10928:	mov	r2, #1
   1092c:	mov	r1, #4
   10930:	mov	r0, r6
   10934:	bl	106e4 <fseek@plt>
   10938:	mov	r0, r6
   1093c:	bl	106fc <getc@plt>
   10940:	mov	r5, r0
   10944:	mov	r0, r6
   10948:	bl	106fc <getc@plt>
   1094c:	mov	r7, r0
   10950:	mov	r0, r6
   10954:	bl	106fc <getc@plt>
   10958:	lsl	fp, r0, #16
   1095c:	orr	fp, fp, r7, lsl #8
   10960:	orr	fp, fp, r5
   10964:	mov	r0, r6
   10968:	bl	106fc <getc@plt>
   1096c:	orr	fp, fp, r0, lsl #24
   10970:	mov	r1, fp
   10974:	ldr	r0, [pc, #660]	; 10c10 <main@@Base+0x3a4>
   10978:	bl	10684 <printf@plt>
   1097c:	mov	r0, r6
   10980:	bl	106fc <getc@plt>
   10984:	mov	r5, r0
   10988:	mov	r0, r6
   1098c:	bl	106fc <getc@plt>
   10990:	mov	r7, r0
   10994:	mov	r0, r6
   10998:	bl	106fc <getc@plt>
   1099c:	lsl	sl, r0, #16
   109a0:	orr	sl, sl, r7, lsl #8
   109a4:	orr	sl, sl, r5
   109a8:	mov	r0, r6
   109ac:	bl	106fc <getc@plt>
   109b0:	orr	sl, sl, r0, lsl #24
   109b4:	mov	r1, sl
   109b8:	ldr	r0, [pc, #596]	; 10c14 <main@@Base+0x3a8>
   109bc:	bl	10684 <printf@plt>
   109c0:	mov	r0, r6
   109c4:	bl	106fc <getc@plt>
   109c8:	mov	r5, r0
   109cc:	mov	r0, r6
   109d0:	bl	106fc <getc@plt>
   109d4:	orr	r0, r5, r0, lsl #8
   109d8:	cmp	r0, #1
   109dc:	bne	10a50 <main@@Base+0x1e4>
   109e0:	mov	r0, r6
   109e4:	bl	106fc <getc@plt>
   109e8:	mov	r5, r0
   109ec:	mov	r0, r6
   109f0:	bl	106fc <getc@plt>
   109f4:	orr	r5, r5, r0, lsl #8
   109f8:	mov	r1, r5
   109fc:	ldr	r0, [pc, #532]	; 10c18 <main@@Base+0x3ac>
   10a00:	bl	10684 <printf@plt>
   10a04:	cmp	r5, #24
   10a08:	bne	10a60 <main@@Base+0x1f4>
   10a0c:	mov	r2, #0
   10a10:	mov	r1, r4
   10a14:	mov	r0, r6
   10a18:	bl	106e4 <fseek@plt>
   10a1c:	lsl	r0, sl, #2
   10a20:	bl	106a8 <malloc@plt>
   10a24:	str	r0, [sp, #4]
   10a28:	cmp	sl, #0
   10a2c:	ble	10bbc <main@@Base+0x350>
   10a30:	add	r5, fp, fp, lsl #1
   10a34:	sub	r4, r0, #4
   10a38:	mov	r9, #0
   10a3c:	b	10a74 <main@@Base+0x208>
   10a40:	ldr	r0, [pc, #468]	; 10c1c <main@@Base+0x3b0>
   10a44:	bl	10684 <printf@plt>
   10a48:	mov	r0, #1
   10a4c:	bl	106cc <exit@plt>
   10a50:	ldr	r0, [pc, #456]	; 10c20 <main@@Base+0x3b4>
   10a54:	bl	10684 <printf@plt>
   10a58:	mov	r0, #2
   10a5c:	bl	106cc <exit@plt>
   10a60:	ldr	r0, [pc, #444]	; 10c24 <main@@Base+0x3b8>
   10a64:	bl	10684 <printf@plt>
   10a68:	mov	r0, #3
   10a6c:	bl	106cc <exit@plt>
   10a70:	mov	r9, r3
   10a74:	mov	r0, r5
   10a78:	bl	106a8 <malloc@plt>
   10a7c:	str	r0, [r4, #4]!
   10a80:	add	r3, r9, #1
   10a84:	cmp	sl, r3
   10a88:	bne	10a70 <main@@Base+0x204>
   10a8c:	cmp	r9, #0
   10a90:	blt	10b7c <main@@Base+0x310>
   10a94:	ldr	r3, [sp, #4]
   10a98:	add	r7, r3, r9, lsl #2
   10a9c:	add	r8, fp, fp, lsl #1
   10aa0:	b	10af4 <main@@Base+0x288>
   10aa4:	ldr	r5, [r7]
   10aa8:	add	r5, r5, r4
   10aac:	mov	r0, r6
   10ab0:	bl	106fc <getc@plt>
   10ab4:	strb	r0, [r5, #2]
   10ab8:	ldr	r5, [r7]
   10abc:	add	r5, r5, r4
   10ac0:	mov	r0, r6
   10ac4:	bl	106fc <getc@plt>
   10ac8:	strb	r0, [r5, #1]
   10acc:	ldr	r5, [r7]
   10ad0:	mov	r0, r6
   10ad4:	bl	106fc <getc@plt>
   10ad8:	strb	r0, [r5, r4]
   10adc:	add	r4, r4, #3
   10ae0:	cmp	r8, r4
   10ae4:	bne	10aa4 <main@@Base+0x238>
   10ae8:	sub	r7, r7, #4
   10aec:	subs	r9, r9, #1
   10af0:	bmi	10b04 <main@@Base+0x298>
   10af4:	cmp	fp, #0
   10af8:	movgt	r4, #0
   10afc:	bgt	10aa4 <main@@Base+0x238>
   10b00:	b	10ae8 <main@@Base+0x27c>
   10b04:	mov	r0, r6
   10b08:	bl	106d8 <fclose@plt>
   10b0c:	mov	r2, #0
   10b10:	mov	r1, r2
   10b14:	ldr	r4, [sp, #4]
   10b18:	mov	r0, r4
   10b1c:	bl	10830 <print_pixelinfo@@Base>
   10b20:	mov	r2, #0
   10b24:	mov	r1, #532	; 0x214
   10b28:	mov	r0, r4
   10b2c:	bl	10830 <print_pixelinfo@@Base>
   10b30:	ldr	r2, [pc, #240]	; 10c28 <main@@Base+0x3bc>
   10b34:	mov	r1, #408	; 0x198
   10b38:	mov	r0, r4
   10b3c:	bl	10830 <print_pixelinfo@@Base>
   10b40:	cmp	sl, #0
   10b44:	ble	10b68 <main@@Base+0x2fc>
   10b48:	ldr	r3, [sp, #4]
   10b4c:	sub	r5, r3, #4
   10b50:	mov	r4, #0
   10b54:	ldr	r0, [r5, #4]!
   10b58:	bl	1069c <free@plt>
   10b5c:	add	r4, r4, #1
   10b60:	cmp	sl, r4
   10b64:	bgt	10b54 <main@@Base+0x2e8>
   10b68:	ldr	r0, [sp, #4]
   10b6c:	bl	1069c <free@plt>
   10b70:	mov	r0, #0
   10b74:	add	sp, sp, #12
   10b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b7c:	mov	r0, r6
   10b80:	bl	106d8 <fclose@plt>
   10b84:	mov	r2, #0
   10b88:	mov	r1, r2
   10b8c:	ldr	r4, [sp, #4]
   10b90:	mov	r0, r4
   10b94:	bl	10830 <print_pixelinfo@@Base>
   10b98:	mov	r2, #0
   10b9c:	mov	r1, #532	; 0x214
   10ba0:	mov	r0, r4
   10ba4:	bl	10830 <print_pixelinfo@@Base>
   10ba8:	ldr	r2, [pc, #120]	; 10c28 <main@@Base+0x3bc>
   10bac:	mov	r1, #408	; 0x198
   10bb0:	mov	r0, r4
   10bb4:	bl	10830 <print_pixelinfo@@Base>
   10bb8:	b	10b48 <main@@Base+0x2dc>
   10bbc:	subs	r9, sl, #1
   10bc0:	bpl	10a94 <main@@Base+0x228>
   10bc4:	mov	r0, r6
   10bc8:	bl	106d8 <fclose@plt>
   10bcc:	mov	r2, #0
   10bd0:	mov	r1, r2
   10bd4:	ldr	r4, [sp, #4]
   10bd8:	mov	r0, r4
   10bdc:	bl	10830 <print_pixelinfo@@Base>
   10be0:	mov	r2, #0
   10be4:	mov	r1, #532	; 0x214
   10be8:	mov	r0, r4
   10bec:	bl	10830 <print_pixelinfo@@Base>
   10bf0:	ldr	r2, [pc, #48]	; 10c28 <main@@Base+0x3bc>
   10bf4:	mov	r1, #408	; 0x198
   10bf8:	mov	r0, r4
   10bfc:	bl	10830 <print_pixelinfo@@Base>
   10c00:	b	10b68 <main@@Base+0x2fc>
   10c04:	andeq	r0, r1, r4, asr #25
   10c08:	andeq	r0, r1, r8, asr #25
   10c0c:	andeq	r0, r1, ip, lsl sp
   10c10:	andeq	r0, r1, r0, asr #26
   10c14:	andeq	r0, r1, r8, asr sp
   10c18:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10c1c:	andeq	r0, r1, r0, ror #25
   10c20:	andeq	r0, r1, r0, ror sp
   10c24:	andeq	r0, r1, r4, ror #27
   10c28:			; <UNDEFINED> instruction: 0x000001bb

00010c2c <__libc_csu_init@@Base>:
   10c2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c30:	mov	r7, r0
   10c34:	ldr	r6, [pc, #72]	; 10c84 <__libc_csu_init@@Base+0x58>
   10c38:	ldr	r5, [pc, #72]	; 10c88 <__libc_csu_init@@Base+0x5c>
   10c3c:	add	r6, pc, r6
   10c40:	add	r5, pc, r5
   10c44:	sub	r6, r6, r5
   10c48:	mov	r8, r1
   10c4c:	mov	r9, r2
   10c50:	bl	10664 <printf@plt-0x20>
   10c54:	asrs	r6, r6, #2
   10c58:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c5c:	mov	r4, #0
   10c60:	add	r4, r4, #1
   10c64:	ldr	r3, [r5], #4
   10c68:	mov	r2, r9
   10c6c:	mov	r1, r8
   10c70:	mov	r0, r7
   10c74:	blx	r3
   10c78:	cmp	r6, r4
   10c7c:	bne	10c60 <__libc_csu_init@@Base+0x34>
   10c80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c84:	andeq	r0, r1, ip, asr #5
   10c88:	andeq	r0, r1, r4, asr #5

00010c8c <__libc_csu_fini@@Base>:
   10c8c:	bx	lr

Disassembly of section .fini:

00010c90 <.fini>:
   10c90:	push	{r3, lr}
   10c94:	pop	{r3, pc}
