
../repos/coreutils/src/mknod:     file format elf32-littlearm


Disassembly of section .init:

0001176c <.init>:
   1176c:	push	{r3, lr}
   11770:	bl	11c0c <__assert_fail@plt+0x48>
   11774:	pop	{r3, pc}

Disassembly of section .plt:

00011778 <fstatfs64@plt-0x14>:
   11778:	push	{lr}		; (str lr, [sp, #-4]!)
   1177c:	ldr	lr, [pc, #4]	; 11788 <fstatfs64@plt-0x4>
   11780:	add	lr, pc, lr
   11784:	ldr	pc, [lr, #8]!
   11788:	andeq	ip, r1, r8, ror r8

0001178c <fstatfs64@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #28, 20	; 0x1c000
   11794:	ldr	pc, [ip, #2168]!	; 0x878

00011798 <selabel_lookup@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #28, 20	; 0x1c000
   117a0:	ldr	pc, [ip, #2160]!	; 0x870

000117a4 <calloc@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #28, 20	; 0x1c000
   117ac:	ldr	pc, [ip, #2152]!	; 0x868

000117b0 <fputs_unlocked@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #28, 20	; 0x1c000
   117b8:	ldr	pc, [ip, #2144]!	; 0x860

000117bc <raise@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #28, 20	; 0x1c000
   117c4:	ldr	pc, [ip, #2136]!	; 0x858

000117c8 <is_selinux_enabled@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #28, 20	; 0x1c000
   117d0:	ldr	pc, [ip, #2128]!	; 0x850

000117d4 <strcmp@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #28, 20	; 0x1c000
   117dc:	ldr	pc, [ip, #2120]!	; 0x848

000117e0 <context_type_get@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #28, 20	; 0x1c000
   117e8:	ldr	pc, [ip, #2112]!	; 0x840

000117ec <fflush@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #28, 20	; 0x1c000
   117f4:	ldr	pc, [ip, #2104]!	; 0x838

000117f8 <lsetfilecon@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #28, 20	; 0x1c000
   11800:	ldr	pc, [ip, #2096]!	; 0x830

00011804 <memmove@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #28, 20	; 0x1c000
   1180c:	ldr	pc, [ip, #2088]!	; 0x828

00011810 <free@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #28, 20	; 0x1c000
   11818:	ldr	pc, [ip, #2080]!	; 0x820

0001181c <faccessat@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #28, 20	; 0x1c000
   11824:	ldr	pc, [ip, #2072]!	; 0x818

00011828 <_exit@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #28, 20	; 0x1c000
   11830:	ldr	pc, [ip, #2064]!	; 0x810

00011834 <memcpy@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #28, 20	; 0x1c000
   1183c:	ldr	pc, [ip, #2056]!	; 0x808

00011840 <__strtoull_internal@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #28, 20	; 0x1c000
   11848:	ldr	pc, [ip, #2048]!	; 0x800

0001184c <mbsinit@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #28, 20	; 0x1c000
   11854:	ldr	pc, [ip, #2040]!	; 0x7f8

00011858 <context_new@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #28, 20	; 0x1c000
   11860:	ldr	pc, [ip, #2032]!	; 0x7f0

00011864 <memcmp@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #28, 20	; 0x1c000
   1186c:	ldr	pc, [ip, #2024]!	; 0x7e8

00011870 <dcgettext@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #28, 20	; 0x1c000
   11878:	ldr	pc, [ip, #2016]!	; 0x7e0

0001187c <context_type_set@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #28, 20	; 0x1c000
   11884:	ldr	pc, [ip, #2008]!	; 0x7d8

00011888 <realloc@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #28, 20	; 0x1c000
   11890:	ldr	pc, [ip, #2000]!	; 0x7d0

00011894 <fgetfilecon@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #28, 20	; 0x1c000
   1189c:	ldr	pc, [ip, #1992]!	; 0x7c8

000118a0 <textdomain@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #28, 20	; 0x1c000
   118a8:	ldr	pc, [ip, #1984]!	; 0x7c0

000118ac <rawmemchr@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #28, 20	; 0x1c000
   118b4:	ldr	pc, [ip, #1976]!	; 0x7b8

000118b8 <__fxstatat64@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #28, 20	; 0x1c000
   118c0:	ldr	pc, [ip, #1968]!	; 0x7b0

000118c4 <iswprint@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #28, 20	; 0x1c000
   118cc:	ldr	pc, [ip, #1960]!	; 0x7a8

000118d0 <__fxstat64@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #28, 20	; 0x1c000
   118d8:	ldr	pc, [ip, #1952]!	; 0x7a0

000118dc <readlink@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #28, 20	; 0x1c000
   118e4:	ldr	pc, [ip, #1944]!	; 0x798

000118e8 <fwrite@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #28, 20	; 0x1c000
   118f0:	ldr	pc, [ip, #1936]!	; 0x790

000118f4 <lseek64@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #28, 20	; 0x1c000
   118fc:	ldr	pc, [ip, #1928]!	; 0x788

00011900 <__ctype_get_mb_cur_max@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #28, 20	; 0x1c000
   11908:	ldr	pc, [ip, #1920]!	; 0x780

0001190c <getcon@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #28, 20	; 0x1c000
   11914:	ldr	pc, [ip, #1912]!	; 0x778

00011918 <__fpending@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #28, 20	; 0x1c000
   11920:	ldr	pc, [ip, #1904]!	; 0x770

00011924 <mbrtowc@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #28, 20	; 0x1c000
   1192c:	ldr	pc, [ip, #1896]!	; 0x768

00011930 <error@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #28, 20	; 0x1c000
   11938:	ldr	pc, [ip, #1888]!	; 0x760

0001193c <open64@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #28, 20	; 0x1c000
   11944:	ldr	pc, [ip, #1880]!	; 0x758

00011948 <lgetfilecon@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #28, 20	; 0x1c000
   11950:	ldr	pc, [ip, #1872]!	; 0x750

00011954 <malloc@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #28, 20	; 0x1c000
   1195c:	ldr	pc, [ip, #1864]!	; 0x748

00011960 <__libc_start_main@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #28, 20	; 0x1c000
   11968:	ldr	pc, [ip, #1856]!	; 0x740

0001196c <__freading@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #28, 20	; 0x1c000
   11974:	ldr	pc, [ip, #1848]!	; 0x738

00011978 <__gmon_start__@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #28, 20	; 0x1c000
   11980:	ldr	pc, [ip, #1840]!	; 0x730

00011984 <context_free@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #28, 20	; 0x1c000
   1198c:	ldr	pc, [ip, #1832]!	; 0x728

00011990 <getopt_long@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #28, 20	; 0x1c000
   11998:	ldr	pc, [ip, #1824]!	; 0x720

0001199c <__ctype_b_loc@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #28, 20	; 0x1c000
   119a4:	ldr	pc, [ip, #1816]!	; 0x718

000119a8 <getcwd@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #28, 20	; 0x1c000
   119b0:	ldr	pc, [ip, #1808]!	; 0x710

000119b4 <exit@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #28, 20	; 0x1c000
   119bc:	ldr	pc, [ip, #1800]!	; 0x708

000119c0 <getfilecon@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #28, 20	; 0x1c000
   119c8:	ldr	pc, [ip, #1792]!	; 0x700

000119cc <strlen@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #28, 20	; 0x1c000
   119d4:	ldr	pc, [ip, #1784]!	; 0x6f8

000119d8 <selabel_open@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #28, 20	; 0x1c000
   119e0:	ldr	pc, [ip, #1776]!	; 0x6f0

000119e4 <strchr@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #28, 20	; 0x1c000
   119ec:	ldr	pc, [ip, #1768]!	; 0x6e8

000119f0 <openat64@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #28, 20	; 0x1c000
   119f8:	ldr	pc, [ip, #1760]!	; 0x6e0

000119fc <setfscreatecon@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #28, 20	; 0x1c000
   11a04:	ldr	pc, [ip, #1752]!	; 0x6d8

00011a08 <__errno_location@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #28, 20	; 0x1c000
   11a10:	ldr	pc, [ip, #1744]!	; 0x6d0

00011a14 <__sprintf_chk@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #28, 20	; 0x1c000
   11a1c:	ldr	pc, [ip, #1736]!	; 0x6c8

00011a20 <__cxa_atexit@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #28, 20	; 0x1c000
   11a28:	ldr	pc, [ip, #1728]!	; 0x6c0

00011a2c <memset@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #28, 20	; 0x1c000
   11a34:	ldr	pc, [ip, #1720]!	; 0x6b8

00011a38 <__printf_chk@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #28, 20	; 0x1c000
   11a40:	ldr	pc, [ip, #1712]!	; 0x6b0

00011a44 <fileno@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #28, 20	; 0x1c000
   11a4c:	ldr	pc, [ip, #1704]!	; 0x6a8

00011a50 <__fprintf_chk@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #28, 20	; 0x1c000
   11a58:	ldr	pc, [ip, #1696]!	; 0x6a0

00011a5c <fclose@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #28, 20	; 0x1c000
   11a64:	ldr	pc, [ip, #1688]!	; 0x698

00011a68 <fseeko64@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #28, 20	; 0x1c000
   11a70:	ldr	pc, [ip, #1680]!	; 0x690

00011a74 <fcntl64@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #28, 20	; 0x1c000
   11a7c:	ldr	pc, [ip, #1672]!	; 0x688

00011a80 <setlocale@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #28, 20	; 0x1c000
   11a88:	ldr	pc, [ip, #1664]!	; 0x680

00011a8c <fsetfilecon@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #28, 20	; 0x1c000
   11a94:	ldr	pc, [ip, #1656]!	; 0x678

00011a98 <strrchr@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #28, 20	; 0x1c000
   11aa0:	ldr	pc, [ip, #1648]!	; 0x670

00011aa4 <nl_langinfo@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #28, 20	; 0x1c000
   11aac:	ldr	pc, [ip, #1640]!	; 0x668

00011ab0 <readdir64@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #28, 20	; 0x1c000
   11ab8:	ldr	pc, [ip, #1632]!	; 0x660

00011abc <fdopendir@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #28, 20	; 0x1c000
   11ac4:	ldr	pc, [ip, #1624]!	; 0x658

00011ac8 <security_compute_create@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #28, 20	; 0x1c000
   11ad0:	ldr	pc, [ip, #1616]!	; 0x650

00011ad4 <dirfd@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #28, 20	; 0x1c000
   11adc:	ldr	pc, [ip, #1608]!	; 0x648

00011ae0 <fchdir@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #28, 20	; 0x1c000
   11ae8:	ldr	pc, [ip, #1600]!	; 0x640

00011aec <qsort@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #28, 20	; 0x1c000
   11af4:	ldr	pc, [ip, #1592]!	; 0x638

00011af8 <freecon@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #28, 20	; 0x1c000
   11b00:	ldr	pc, [ip, #1584]!	; 0x630

00011b04 <bindtextdomain@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #28, 20	; 0x1c000
   11b0c:	ldr	pc, [ip, #1576]!	; 0x628

00011b10 <getfscreatecon@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #28, 20	; 0x1c000
   11b18:	ldr	pc, [ip, #1568]!	; 0x620

00011b1c <umask@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #28, 20	; 0x1c000
   11b24:	ldr	pc, [ip, #1560]!	; 0x618

00011b28 <context_str@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #28, 20	; 0x1c000
   11b30:	ldr	pc, [ip, #1552]!	; 0x610

00011b34 <chmod@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #28, 20	; 0x1c000
   11b3c:	ldr	pc, [ip, #1544]!	; 0x608

00011b40 <__xstat64@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #28, 20	; 0x1c000
   11b48:	ldr	pc, [ip, #1536]!	; 0x600

00011b4c <__xmknod@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #28, 20	; 0x1c000
   11b54:	ldr	pc, [ip, #1528]!	; 0x5f8

00011b58 <strncmp@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #28, 20	; 0x1c000
   11b60:	ldr	pc, [ip, #1520]!	; 0x5f0

00011b64 <abort@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #28, 20	; 0x1c000
   11b6c:	ldr	pc, [ip, #1512]!	; 0x5e8

00011b70 <close@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #28, 20	; 0x1c000
   11b78:	ldr	pc, [ip, #1504]!	; 0x5e0

00011b7c <__lxstat64@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #28, 20	; 0x1c000
   11b84:	ldr	pc, [ip, #1496]!	; 0x5d8

00011b88 <mkfifo@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #28, 20	; 0x1c000
   11b90:	ldr	pc, [ip, #1488]!	; 0x5d0

00011b94 <mode_to_security_class@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #28, 20	; 0x1c000
   11b9c:	ldr	pc, [ip, #1480]!	; 0x5c8

00011ba0 <closedir@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #28, 20	; 0x1c000
   11ba8:	ldr	pc, [ip, #1472]!	; 0x5c0

00011bac <strspn@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #28, 20	; 0x1c000
   11bb4:	ldr	pc, [ip, #1464]!	; 0x5b8

00011bb8 <__mempcpy_chk@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #28, 20	; 0x1c000
   11bc0:	ldr	pc, [ip, #1456]!	; 0x5b0

00011bc4 <__assert_fail@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #28, 20	; 0x1c000
   11bcc:	ldr	pc, [ip, #1448]!	; 0x5a8

Disassembly of section .text:

00011bd0 <lchmod@@Base-0x58f4>:
   11bd0:	mov	fp, #0
   11bd4:	mov	lr, #0
   11bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   11bdc:	mov	r2, sp
   11be0:	push	{r2}		; (str r2, [sp, #-4]!)
   11be4:	push	{r0}		; (str r0, [sp, #-4]!)
   11be8:	ldr	ip, [pc, #16]	; 11c00 <__assert_fail@plt+0x3c>
   11bec:	push	{ip}		; (str ip, [sp, #-4]!)
   11bf0:	ldr	r0, [pc, #12]	; 11c04 <__assert_fail@plt+0x40>
   11bf4:	ldr	r3, [pc, #12]	; 11c08 <__assert_fail@plt+0x44>
   11bf8:	bl	11960 <__libc_start_main@plt>
   11bfc:	bl	11b64 <abort@plt>
   11c00:	muleq	r1, r8, r3
   11c04:			; <UNDEFINED> instruction: 0x00011fb4
   11c08:	andeq	ip, r1, r8, lsr r3
   11c0c:	ldr	r3, [pc, #20]	; 11c28 <__assert_fail@plt+0x64>
   11c10:	ldr	r2, [pc, #20]	; 11c2c <__assert_fail@plt+0x68>
   11c14:	add	r3, pc, r3
   11c18:	ldr	r2, [r3, r2]
   11c1c:	cmp	r2, #0
   11c20:	bxeq	lr
   11c24:	b	11978 <__gmon_start__@plt>
   11c28:	andeq	ip, r1, r4, ror #7
   11c2c:	andeq	r0, r0, r8, ror r1
   11c30:	ldr	r0, [pc, #24]	; 11c50 <__assert_fail@plt+0x8c>
   11c34:	ldr	r3, [pc, #24]	; 11c54 <__assert_fail@plt+0x90>
   11c38:	cmp	r3, r0
   11c3c:	bxeq	lr
   11c40:	ldr	r3, [pc, #16]	; 11c58 <__assert_fail@plt+0x94>
   11c44:	cmp	r3, #0
   11c48:	bxeq	lr
   11c4c:	bx	r3
   11c50:	ldrdeq	lr, [r2], -r0
   11c54:	ldrdeq	lr, [r2], -r0
   11c58:	andeq	r0, r0, r0
   11c5c:	ldr	r0, [pc, #36]	; 11c88 <__assert_fail@plt+0xc4>
   11c60:	ldr	r1, [pc, #36]	; 11c8c <__assert_fail@plt+0xc8>
   11c64:	sub	r1, r1, r0
   11c68:	asr	r1, r1, #2
   11c6c:	add	r1, r1, r1, lsr #31
   11c70:	asrs	r1, r1, #1
   11c74:	bxeq	lr
   11c78:	ldr	r3, [pc, #16]	; 11c90 <__assert_fail@plt+0xcc>
   11c7c:	cmp	r3, #0
   11c80:	bxeq	lr
   11c84:	bx	r3
   11c88:	ldrdeq	lr, [r2], -r0
   11c8c:	ldrdeq	lr, [r2], -r0
   11c90:	andeq	r0, r0, r0
   11c94:	push	{r4, lr}
   11c98:	ldr	r4, [pc, #24]	; 11cb8 <__assert_fail@plt+0xf4>
   11c9c:	ldrb	r3, [r4]
   11ca0:	cmp	r3, #0
   11ca4:	popne	{r4, pc}
   11ca8:	bl	11c30 <__assert_fail@plt+0x6c>
   11cac:	mov	r3, #1
   11cb0:	strb	r3, [r4]
   11cb4:	pop	{r4, pc}
   11cb8:	andeq	lr, r2, ip, ror #3
   11cbc:	b	11c5c <__assert_fail@plt+0x98>
   11cc0:	push	{fp, lr}
   11cc4:	mov	fp, sp
   11cc8:	sub	sp, sp, #56	; 0x38
   11ccc:	mov	r4, r0
   11cd0:	cmp	r0, #0
   11cd4:	bne	11f70 <__assert_fail@plt+0x3ac>
   11cd8:	movw	r1, #50155	; 0xc3eb
   11cdc:	mov	r0, #0
   11ce0:	mov	r2, #5
   11ce4:	movt	r1, #1
   11ce8:	bl	11870 <dcgettext@plt>
   11cec:	mov	r1, r0
   11cf0:	movw	r0, #57848	; 0xe1f8
   11cf4:	movt	r0, #2
   11cf8:	ldr	r2, [r0]
   11cfc:	mov	r0, #1
   11d00:	bl	11a38 <__printf_chk@plt>
   11d04:	movw	r1, #50202	; 0xc41a
   11d08:	mov	r0, #0
   11d0c:	mov	r2, #5
   11d10:	movt	r1, #1
   11d14:	bl	11870 <dcgettext@plt>
   11d18:	movw	r7, #57828	; 0xe1e4
   11d1c:	movt	r7, #2
   11d20:	ldr	r1, [r7]
   11d24:	bl	117b0 <fputs_unlocked@plt>
   11d28:	movw	r1, #51778	; 0xca42
   11d2c:	mov	r0, #0
   11d30:	mov	r2, #5
   11d34:	movt	r1, #1
   11d38:	bl	11870 <dcgettext@plt>
   11d3c:	ldr	r1, [r7]
   11d40:	bl	117b0 <fputs_unlocked@plt>
   11d44:	movw	r1, #50251	; 0xc44b
   11d48:	mov	r0, #0
   11d4c:	mov	r2, #5
   11d50:	movt	r1, #1
   11d54:	bl	11870 <dcgettext@plt>
   11d58:	ldr	r1, [r7]
   11d5c:	bl	117b0 <fputs_unlocked@plt>
   11d60:	movw	r1, #50324	; 0xc494
   11d64:	mov	r0, #0
   11d68:	mov	r2, #5
   11d6c:	movt	r1, #1
   11d70:	bl	11870 <dcgettext@plt>
   11d74:	ldr	r1, [r7]
   11d78:	bl	117b0 <fputs_unlocked@plt>
   11d7c:	movw	r1, #50531	; 0xc563
   11d80:	mov	r0, #0
   11d84:	mov	r2, #5
   11d88:	movt	r1, #1
   11d8c:	bl	11870 <dcgettext@plt>
   11d90:	ldr	r1, [r7]
   11d94:	bl	117b0 <fputs_unlocked@plt>
   11d98:	movw	r1, #50576	; 0xc590
   11d9c:	mov	r0, #0
   11da0:	mov	r2, #5
   11da4:	movt	r1, #1
   11da8:	bl	11870 <dcgettext@plt>
   11dac:	ldr	r1, [r7]
   11db0:	bl	117b0 <fputs_unlocked@plt>
   11db4:	movw	r1, #50630	; 0xc5c6
   11db8:	mov	r0, #0
   11dbc:	mov	r2, #5
   11dc0:	movt	r1, #1
   11dc4:	bl	11870 <dcgettext@plt>
   11dc8:	ldr	r1, [r7]
   11dcc:	bl	117b0 <fputs_unlocked@plt>
   11dd0:	movw	r1, #50891	; 0xc6cb
   11dd4:	mov	r0, #0
   11dd8:	mov	r2, #5
   11ddc:	movt	r1, #1
   11de0:	bl	11870 <dcgettext@plt>
   11de4:	ldr	r1, [r7]
   11de8:	bl	117b0 <fputs_unlocked@plt>
   11dec:	movw	r1, #51018	; 0xc74a
   11df0:	mov	r0, #0
   11df4:	mov	r2, #5
   11df8:	movt	r1, #1
   11dfc:	bl	11870 <dcgettext@plt>
   11e00:	movw	r5, #51209	; 0xc809
   11e04:	mov	r1, r0
   11e08:	mov	r0, #1
   11e0c:	movt	r5, #1
   11e10:	mov	r2, r5
   11e14:	bl	11a38 <__printf_chk@plt>
   11e18:	movw	r0, #52264	; 0xcc28
   11e1c:	mov	r2, #48	; 0x30
   11e20:	mov	r6, sp
   11e24:	movt	r0, #1
   11e28:	add	r1, r0, #32
   11e2c:	add	r3, r0, #16
   11e30:	vld1.64	{d18-d19}, [r0], r2
   11e34:	vld1.64	{d16-d17}, [r1]
   11e38:	vld1.64	{d20-d21}, [r3]
   11e3c:	add	r1, r6, #32
   11e40:	vldr	d22, [r0]
   11e44:	add	r0, r6, #16
   11e48:	vst1.64	{d16-d17}, [r1]
   11e4c:	movw	r1, #51853	; 0xca8d
   11e50:	vst1.64	{d20-d21}, [r0]
   11e54:	mov	r0, r6
   11e58:	vst1.64	{d18-d19}, [r0], r2
   11e5c:	movt	r1, #1
   11e60:	vstr	d22, [r0]
   11e64:	mov	r0, r5
   11e68:	bl	117d4 <strcmp@plt>
   11e6c:	cmp	r0, #0
   11e70:	ldrne	r1, [r6, #8]!
   11e74:	cmpne	r1, #0
   11e78:	bne	11e64 <__assert_fail@plt+0x2a0>
   11e7c:	ldr	r6, [r6, #4]
   11e80:	movw	r1, #51948	; 0xcaec
   11e84:	mov	r0, #0
   11e88:	mov	r2, #5
   11e8c:	movt	r1, #1
   11e90:	bl	11870 <dcgettext@plt>
   11e94:	movw	r2, #51344	; 0xc890
   11e98:	movw	r3, #51971	; 0xcb03
   11e9c:	mov	r1, r0
   11ea0:	mov	r0, #1
   11ea4:	movt	r2, #1
   11ea8:	movt	r3, #1
   11eac:	bl	11a38 <__printf_chk@plt>
   11eb0:	cmp	r6, #0
   11eb4:	mov	r0, #5
   11eb8:	mov	r1, #0
   11ebc:	moveq	r6, r5
   11ec0:	bl	11a80 <setlocale@plt>
   11ec4:	cmp	r0, #0
   11ec8:	beq	11f00 <__assert_fail@plt+0x33c>
   11ecc:	movw	r1, #52011	; 0xcb2b
   11ed0:	mov	r2, #3
   11ed4:	movt	r1, #1
   11ed8:	bl	11b58 <strncmp@plt>
   11edc:	cmp	r0, #0
   11ee0:	beq	11f00 <__assert_fail@plt+0x33c>
   11ee4:	movw	r1, #52015	; 0xcb2f
   11ee8:	mov	r0, #0
   11eec:	mov	r2, #5
   11ef0:	movt	r1, #1
   11ef4:	bl	11870 <dcgettext@plt>
   11ef8:	ldr	r1, [r7]
   11efc:	bl	117b0 <fputs_unlocked@plt>
   11f00:	movw	r1, #52086	; 0xcb76
   11f04:	mov	r0, #0
   11f08:	mov	r2, #5
   11f0c:	movt	r1, #1
   11f10:	bl	11870 <dcgettext@plt>
   11f14:	movw	r2, #51971	; 0xcb03
   11f18:	mov	r1, r0
   11f1c:	mov	r0, #1
   11f20:	mov	r3, r5
   11f24:	movt	r2, #1
   11f28:	bl	11a38 <__printf_chk@plt>
   11f2c:	movw	r1, #52113	; 0xcb91
   11f30:	mov	r0, #0
   11f34:	mov	r2, #5
   11f38:	movt	r1, #1
   11f3c:	bl	11870 <dcgettext@plt>
   11f40:	movw	r3, #52163	; 0xcbc3
   11f44:	mov	r1, r0
   11f48:	movw	r0, #51881	; 0xcaa9
   11f4c:	cmp	r6, r5
   11f50:	mov	r2, r6
   11f54:	movt	r0, #1
   11f58:	movt	r3, #1
   11f5c:	moveq	r3, r0
   11f60:	mov	r0, #1
   11f64:	bl	11a38 <__printf_chk@plt>
   11f68:	mov	r0, r4
   11f6c:	bl	119b4 <exit@plt>
   11f70:	movw	r0, #57824	; 0xe1e0
   11f74:	movw	r1, #50116	; 0xc3c4
   11f78:	mov	r2, #5
   11f7c:	movt	r0, #2
   11f80:	movt	r1, #1
   11f84:	ldr	r5, [r0]
   11f88:	mov	r0, #0
   11f8c:	bl	11870 <dcgettext@plt>
   11f90:	mov	r2, r0
   11f94:	movw	r0, #57848	; 0xe1f8
   11f98:	mov	r1, #1
   11f9c:	movt	r0, #2
   11fa0:	ldr	r3, [r0]
   11fa4:	mov	r0, r5
   11fa8:	bl	11a50 <__fprintf_chk@plt>
   11fac:	mov	r0, r4
   11fb0:	bl	119b4 <exit@plt>
   11fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fb8:	add	fp, sp, #28
   11fbc:	sub	sp, sp, #52	; 0x34
   11fc0:	mov	r8, r0
   11fc4:	ldr	r0, [r1]
   11fc8:	mov	sl, r1
   11fcc:	bl	17c8c <lchmod@@Base+0x7c8>
   11fd0:	movw	r9, #52163	; 0xcbc3
   11fd4:	mov	r0, #6
   11fd8:	movt	r9, #1
   11fdc:	mov	r1, r9
   11fe0:	bl	11a80 <setlocale@plt>
   11fe4:	movw	r5, #51348	; 0xc894
   11fe8:	movw	r1, #51215	; 0xc80f
   11fec:	movt	r5, #1
   11ff0:	movt	r1, #1
   11ff4:	mov	r0, r5
   11ff8:	bl	11b04 <bindtextdomain@plt>
   11ffc:	mov	r0, r5
   12000:	bl	118a0 <textdomain@plt>
   12004:	movw	r0, #13564	; 0x34fc
   12008:	movt	r0, #1
   1200c:	bl	1c39c <lchmod@@Base+0x4ed8>
   12010:	movw	r7, #51239	; 0xc827
   12014:	movw	r6, #52184	; 0xcbd8
   12018:	mov	r0, #0
   1201c:	mov	r5, #0
   12020:	mov	r1, #0
   12024:	mov	r4, #0
   12028:	movt	r7, #1
   1202c:	movt	r6, #1
   12030:	str	r0, [sp, #16]
   12034:	b	12074 <__assert_fail@plt+0x4b0>
   12038:	bl	11a08 <__errno_location@plt>
   1203c:	ldr	r0, [r0]
   12040:	movw	r1, #51243	; 0xc82b
   12044:	mov	r2, #5
   12048:	movt	r1, #1
   1204c:	str	r0, [sp, #12]
   12050:	mov	r0, #0
   12054:	str	r0, [sp, #16]
   12058:	mov	r0, #0
   1205c:	bl	11870 <dcgettext@plt>
   12060:	ldr	r1, [sp, #12]
   12064:	mov	r2, r0
   12068:	mov	r0, #0
   1206c:	bl	11930 <error@plt>
   12070:	ldr	r1, [sp, #20]
   12074:	str	r1, [sp, #20]
   12078:	b	12098 <__assert_fail@plt+0x4d4>
   1207c:	movw	r0, #57832	; 0xe1e8
   12080:	movt	r0, #2
   12084:	ldr	r4, [r0]
   12088:	b	12098 <__assert_fail@plt+0x4d4>
   1208c:	cmp	r0, #109	; 0x6d
   12090:	beq	1207c <__assert_fail@plt+0x4b8>
   12094:	b	12700 <__assert_fail@plt+0xb3c>
   12098:	mov	r0, r8
   1209c:	mov	r1, sl
   120a0:	mov	r2, r7
   120a4:	mov	r3, r6
   120a8:	str	r5, [sp]
   120ac:	bl	11990 <getopt_long@plt>
   120b0:	cmp	r0, #89	; 0x59
   120b4:	ble	12138 <__assert_fail@plt+0x574>
   120b8:	cmp	r0, #90	; 0x5a
   120bc:	bne	1208c <__assert_fail@plt+0x4c8>
   120c0:	bl	117c8 <is_selinux_enabled@plt>
   120c4:	movw	r1, #57832	; 0xe1e8
   120c8:	cmp	r0, #1
   120cc:	movt	r1, #2
   120d0:	ldr	r1, [r1]
   120d4:	bge	12108 <__assert_fail@plt+0x544>
   120d8:	cmp	r1, #0
   120dc:	beq	12098 <__assert_fail@plt+0x4d4>
   120e0:	movw	r1, #51271	; 0xc847
   120e4:	mov	r0, #0
   120e8:	mov	r2, #5
   120ec:	movt	r1, #1
   120f0:	bl	11870 <dcgettext@plt>
   120f4:	mov	r2, r0
   120f8:	mov	r0, #0
   120fc:	mov	r1, #0
   12100:	bl	11930 <error@plt>
   12104:	b	12098 <__assert_fail@plt+0x4d4>
   12108:	cmp	r1, #0
   1210c:	bne	12074 <__assert_fail@plt+0x4b0>
   12110:	mov	r0, #0
   12114:	mov	r1, #0
   12118:	mov	r2, #0
   1211c:	bl	119d8 <selabel_open@plt>
   12120:	str	r0, [sp, #16]
   12124:	cmp	r0, #0
   12128:	ldr	r0, [sp, #20]
   1212c:	mov	r1, r0
   12130:	bne	12074 <__assert_fail@plt+0x4b0>
   12134:	b	12038 <__assert_fail@plt+0x474>
   12138:	cmn	r0, #1
   1213c:	bne	124b8 <__assert_fail@plt+0x8f4>
   12140:	cmp	r4, #0
   12144:	beq	121bc <__assert_fail@plt+0x5f8>
   12148:	mov	r0, r4
   1214c:	mov	r6, r9
   12150:	mov	r9, r4
   12154:	bl	17610 <lchmod@@Base+0x14c>
   12158:	cmp	r0, #0
   1215c:	beq	12620 <__assert_fail@plt+0xa5c>
   12160:	mov	r5, r0
   12164:	mov	r0, #0
   12168:	mov	r4, #0
   1216c:	bl	11b1c <umask@plt>
   12170:	mov	r7, r0
   12174:	bl	11b1c <umask@plt>
   12178:	movw	r0, #438	; 0x1b6
   1217c:	mov	r1, #0
   12180:	mov	r2, r7
   12184:	mov	r3, r5
   12188:	str	r4, [sp]
   1218c:	bl	17adc <lchmod@@Base+0x618>
   12190:	mov	r4, r0
   12194:	mov	r0, r5
   12198:	bl	137a4 <__assert_fail@plt+0x1be0>
   1219c:	str	r4, [sp, #12]
   121a0:	cmp	r4, #512	; 0x200
   121a4:	mov	r4, r9
   121a8:	mov	r9, r6
   121ac:	bcc	121c4 <__assert_fail@plt+0x600>
   121b0:	movw	r1, #51387	; 0xc8bb
   121b4:	movt	r1, #1
   121b8:	b	12628 <__assert_fail@plt+0xa64>
   121bc:	movw	r0, #438	; 0x1b6
   121c0:	str	r0, [sp, #12]
   121c4:	movw	r0, #57816	; 0xe1d8
   121c8:	movt	r0, #2
   121cc:	ldr	r6, [r0]
   121d0:	cmp	r6, r8
   121d4:	bge	121fc <__assert_fail@plt+0x638>
   121d8:	add	r1, r6, #1
   121dc:	mov	r5, #4
   121e0:	mov	r7, #0
   121e4:	cmp	r1, r8
   121e8:	bge	12204 <__assert_fail@plt+0x640>
   121ec:	ldr	r1, [sl, r1, lsl #2]
   121f0:	ldrb	r1, [r1]
   121f4:	cmp	r1, #112	; 0x70
   121f8:	bne	12204 <__assert_fail@plt+0x640>
   121fc:	mov	r5, #2
   12200:	mov	r7, #1
   12204:	sub	r1, r8, r6
   12208:	cmp	r1, r5
   1220c:	bcc	1255c <__assert_fail@plt+0x998>
   12210:	cmp	r5, r1
   12214:	bcc	125a8 <__assert_fail@plt+0x9e4>
   12218:	ldr	r5, [sp, #20]
   1221c:	movw	r7, #57816	; 0xe1d8
   12220:	movt	r7, #2
   12224:	mov	r8, r7
   12228:	cmp	r5, #0
   1222c:	beq	12244 <__assert_fail@plt+0x680>
   12230:	mov	r0, r5
   12234:	bl	119fc <setfscreatecon@plt>
   12238:	cmp	r0, #0
   1223c:	blt	12644 <__assert_fail@plt+0xa80>
   12240:	ldr	r6, [r8]
   12244:	add	r1, sl, r6, lsl #2
   12248:	ldr	r2, [r1, #4]
   1224c:	ldrb	r2, [r2]
   12250:	sub	r2, r2, #98	; 0x62
   12254:	cmp	r2, #19
   12258:	bhi	12518 <__assert_fail@plt+0x954>
   1225c:	add	r3, pc, #4
   12260:	mov	r5, #24576	; 0x6000
   12264:	ldr	pc, [r3, r2, lsl #2]
   12268:			; <UNDEFINED> instruction: 0x000122bc
   1226c:			; <UNDEFINED> instruction: 0x000122b8
   12270:	andeq	r2, r1, r8, lsl r5
   12274:	andeq	r2, r1, r8, lsl r5
   12278:	andeq	r2, r1, r8, lsl r5
   1227c:	andeq	r2, r1, r8, lsl r5
   12280:	andeq	r2, r1, r8, lsl r5
   12284:	andeq	r2, r1, r8, lsl r5
   12288:	andeq	r2, r1, r8, lsl r5
   1228c:	andeq	r2, r1, r8, lsl r5
   12290:	andeq	r2, r1, r8, lsl r5
   12294:	andeq	r2, r1, r8, lsl r5
   12298:	andeq	r2, r1, r8, lsl r5
   1229c:	andeq	r2, r1, r8, lsl r5
   122a0:	andeq	r2, r1, r0, lsl #7
   122a4:	andeq	r2, r1, r8, lsl r5
   122a8:	andeq	r2, r1, r8, lsl r5
   122ac:	andeq	r2, r1, r8, lsl r5
   122b0:	andeq	r2, r1, r8, lsl r5
   122b4:			; <UNDEFINED> instruction: 0x000122b8
   122b8:	mov	r5, #8192	; 0x2000
   122bc:	str	r4, [sp, #20]
   122c0:	ldr	r4, [r1, #8]
   122c4:	ldr	r7, [r1, #12]
   122c8:	add	r3, sp, #32
   122cc:	mov	r1, #0
   122d0:	mov	r2, #0
   122d4:	str	r9, [sp]
   122d8:	mov	r0, r4
   122dc:	bl	1ac2c <lchmod@@Base+0x3768>
   122e0:	cmp	r0, #0
   122e4:	ldreq	r0, [sp, #36]	; 0x24
   122e8:	cmpeq	r0, #0
   122ec:	beq	12324 <__assert_fail@plt+0x760>
   122f0:	movw	r1, #51643	; 0xc9bb
   122f4:	mov	r0, #0
   122f8:	mov	r2, #5
   122fc:	movt	r1, #1
   12300:	bl	11870 <dcgettext@plt>
   12304:	mov	r5, r0
   12308:	mov	r0, r4
   1230c:	bl	19c08 <lchmod@@Base+0x2744>
   12310:	mov	r3, r0
   12314:	mov	r0, #1
   12318:	mov	r1, #0
   1231c:	mov	r2, r5
   12320:	bl	11930 <error@plt>
   12324:	add	r3, sp, #24
   12328:	mov	r0, r7
   1232c:	mov	r1, #0
   12330:	mov	r2, #0
   12334:	str	r9, [sp]
   12338:	bl	1ac2c <lchmod@@Base+0x3768>
   1233c:	cmp	r0, #0
   12340:	ldreq	r0, [sp, #28]
   12344:	cmpeq	r0, #0
   12348:	beq	123e0 <__assert_fail@plt+0x81c>
   1234c:	movw	r1, #51674	; 0xc9da
   12350:	mov	r0, #0
   12354:	mov	r2, #5
   12358:	movt	r1, #1
   1235c:	bl	11870 <dcgettext@plt>
   12360:	mov	r4, r0
   12364:	mov	r0, r7
   12368:	bl	19c08 <lchmod@@Base+0x2744>
   1236c:	mov	r3, r0
   12370:	mov	r0, #1
   12374:	mov	r1, #0
   12378:	mov	r2, r4
   1237c:	bl	11930 <error@plt>
   12380:	ldr	r0, [sp, #16]
   12384:	cmp	r0, #0
   12388:	beq	1239c <__assert_fail@plt+0x7d8>
   1238c:	ldr	r1, [sl, r6, lsl #2]
   12390:	mov	r2, #4096	; 0x1000
   12394:	bl	12778 <__assert_fail@plt+0xbb4>
   12398:	ldr	r6, [r8]
   1239c:	ldr	r7, [sp, #12]
   123a0:	ldr	r0, [sl, r6, lsl #2]
   123a4:	mov	r1, r7
   123a8:	bl	11b88 <mkfifo@plt>
   123ac:	cmp	r0, #0
   123b0:	bne	12484 <__assert_fail@plt+0x8c0>
   123b4:	cmp	r4, #0
   123b8:	beq	123d4 <__assert_fail@plt+0x810>
   123bc:	ldr	r0, [r8]
   123c0:	mov	r1, r7
   123c4:	ldr	r0, [sl, r0, lsl #2]
   123c8:	bl	174c4 <lchmod@@Base>
   123cc:	cmp	r0, #0
   123d0:	bne	12708 <__assert_fail@plt+0xb44>
   123d4:	mov	r0, #0
   123d8:	sub	sp, fp, #28
   123dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123e0:	ldr	r0, [sp, #24]
   123e4:	movw	r1, #0
   123e8:	movw	r3, #65280	; 0xff00
   123ec:	movt	r1, #65520	; 0xfff0
   123f0:	movt	r3, #15
   123f4:	and	r1, r1, r0, lsl #12
   123f8:	uxtb	r2, r0
   123fc:	orr	r1, r1, r2
   12400:	ldr	r2, [sp, #32]
   12404:	and	r3, r3, r2, lsl #8
   12408:	bfc	r2, #0, #12
   1240c:	orr	r6, r1, r3
   12410:	orr	r9, r2, r0, lsr #20
   12414:	and	r0, r6, r9
   12418:	cmn	r0, #1
   1241c:	beq	1274c <__assert_fail@plt+0xb88>
   12420:	movw	r7, #57816	; 0xe1d8
   12424:	movt	r7, #2
   12428:	ldr	r0, [r7]
   1242c:	mov	r8, r7
   12430:	ldr	r1, [sl, r0, lsl #2]
   12434:	ldr	r0, [sp, #16]
   12438:	cmp	r0, #0
   1243c:	beq	1245c <__assert_fail@plt+0x898>
   12440:	mov	r2, r5
   12444:	bl	12778 <__assert_fail@plt+0xbb4>
   12448:	ldr	r0, [r8]
   1244c:	ldr	r1, [sl, r0, lsl #2]
   12450:	str	r9, [sp, #44]	; 0x2c
   12454:	str	r6, [sp, #40]	; 0x28
   12458:	b	12464 <__assert_fail@plt+0x8a0>
   1245c:	str	r6, [sp, #40]	; 0x28
   12460:	str	r9, [sp, #44]	; 0x2c
   12464:	ldr	r7, [sp, #12]
   12468:	add	r3, sp, #40	; 0x28
   1246c:	mov	r0, #1
   12470:	orr	r2, r5, r7
   12474:	bl	11b4c <__xmknod@plt>
   12478:	ldr	r4, [sp, #20]
   1247c:	cmp	r0, #0
   12480:	beq	123b4 <__assert_fail@plt+0x7f0>
   12484:	bl	11a08 <__errno_location@plt>
   12488:	ldr	r1, [r8]
   1248c:	ldr	r4, [r0]
   12490:	mov	r0, #0
   12494:	ldr	r2, [sl, r1, lsl #2]
   12498:	mov	r1, #3
   1249c:	bl	1995c <lchmod@@Base+0x2498>
   124a0:	movw	r2, #52351	; 0xcc7f
   124a4:	mov	r3, r0
   124a8:	mov	r0, #1
   124ac:	mov	r1, r4
   124b0:	movt	r2, #1
   124b4:	bl	11930 <error@plt>
   124b8:	cmn	r0, #3
   124bc:	bne	12508 <__assert_fail@plt+0x944>
   124c0:	movw	r0, #57736	; 0xe188
   124c4:	movw	r2, #51358	; 0xc89e
   124c8:	mov	r1, #0
   124cc:	movt	r0, #2
   124d0:	movt	r2, #1
   124d4:	str	r1, [sp, #4]
   124d8:	movw	r1, #51209	; 0xc809
   124dc:	ldr	r3, [r0]
   124e0:	movw	r0, #57828	; 0xe1e4
   124e4:	str	r2, [sp]
   124e8:	movw	r2, #51344	; 0xc890
   124ec:	movt	r1, #1
   124f0:	movt	r0, #2
   124f4:	movt	r2, #1
   124f8:	ldr	r0, [r0]
   124fc:	bl	1a3d8 <lchmod@@Base+0x2f14>
   12500:	mov	r0, #0
   12504:	bl	119b4 <exit@plt>
   12508:	cmn	r0, #2
   1250c:	bne	12700 <__assert_fail@plt+0xb3c>
   12510:	mov	r0, #0
   12514:	bl	11cc0 <__assert_fail@plt+0xfc>
   12518:	movw	r1, #51726	; 0xca0e
   1251c:	mov	r0, #0
   12520:	mov	r2, #5
   12524:	movt	r1, #1
   12528:	bl	11870 <dcgettext@plt>
   1252c:	mov	r5, r0
   12530:	ldr	r0, [r8]
   12534:	add	r0, sl, r0, lsl #2
   12538:	ldr	r0, [r0, #4]
   1253c:	bl	19c08 <lchmod@@Base+0x2744>
   12540:	mov	r3, r0
   12544:	mov	r0, #0
   12548:	mov	r1, #0
   1254c:	mov	r2, r5
   12550:	bl	11930 <error@plt>
   12554:	mov	r0, #1
   12558:	bl	11cc0 <__assert_fail@plt+0xfc>
   1255c:	cmp	r6, r8
   12560:	bge	12684 <__assert_fail@plt+0xac0>
   12564:	movw	r1, #51447	; 0xc8f7
   12568:	mov	r0, #0
   1256c:	mov	r2, #5
   12570:	movt	r1, #1
   12574:	bl	11870 <dcgettext@plt>
   12578:	mov	r5, r0
   1257c:	add	r0, sl, r8, lsl #2
   12580:	ldr	r0, [r0, #-4]
   12584:	bl	19c08 <lchmod@@Base+0x2744>
   12588:	mov	r3, r0
   1258c:	mov	r0, #0
   12590:	mov	r1, #0
   12594:	mov	r2, r5
   12598:	bl	11930 <error@plt>
   1259c:	cmp	r7, #0
   125a0:	beq	126b0 <__assert_fail@plt+0xaec>
   125a4:	b	12700 <__assert_fail@plt+0xb3c>
   125a8:	movw	r1, #51526	; 0xc946
   125ac:	mov	r0, #0
   125b0:	mov	r2, #5
   125b4:	movt	r1, #1
   125b8:	bl	11870 <dcgettext@plt>
   125bc:	mov	r4, r0
   125c0:	movw	r0, #57816	; 0xe1d8
   125c4:	movt	r0, #2
   125c8:	ldr	r0, [r0]
   125cc:	add	r0, r0, r5
   125d0:	ldr	r0, [sl, r0, lsl #2]
   125d4:	bl	19c08 <lchmod@@Base+0x2744>
   125d8:	mov	r3, r0
   125dc:	mov	r0, #0
   125e0:	mov	r1, #0
   125e4:	mov	r2, r4
   125e8:	bl	11930 <error@plt>
   125ec:	cmp	r7, #0
   125f0:	beq	12700 <__assert_fail@plt+0xb3c>
   125f4:	movw	r0, #57816	; 0xe1d8
   125f8:	movt	r0, #2
   125fc:	ldr	r0, [r0]
   12600:	sub	r0, r8, r0
   12604:	cmp	r0, #4
   12608:	bne	12700 <__assert_fail@plt+0xb3c>
   1260c:	movw	r0, #57824	; 0xe1e0
   12610:	movw	r1, #51543	; 0xc957
   12614:	movt	r0, #2
   12618:	movt	r1, #1
   1261c:	b	126d8 <__assert_fail@plt+0xb14>
   12620:	movw	r1, #51374	; 0xc8ae
   12624:	movt	r1, #1
   12628:	mov	r0, #0
   1262c:	mov	r2, #5
   12630:	bl	11870 <dcgettext@plt>
   12634:	mov	r2, r0
   12638:	mov	r0, #1
   1263c:	mov	r1, #0
   12640:	bl	11930 <error@plt>
   12644:	bl	11a08 <__errno_location@plt>
   12648:	ldr	r4, [r0]
   1264c:	movw	r1, #51593	; 0xc989
   12650:	mov	r0, #0
   12654:	mov	r2, #5
   12658:	movt	r1, #1
   1265c:	bl	11870 <dcgettext@plt>
   12660:	mov	r1, r5
   12664:	mov	r5, r0
   12668:	mov	r0, r1
   1266c:	bl	19c08 <lchmod@@Base+0x2744>
   12670:	mov	r3, r0
   12674:	mov	r0, #1
   12678:	mov	r1, r4
   1267c:	mov	r2, r5
   12680:	bl	11930 <error@plt>
   12684:	movw	r1, #51431	; 0xc8e7
   12688:	mov	r0, #0
   1268c:	mov	r2, #5
   12690:	movt	r1, #1
   12694:	bl	11870 <dcgettext@plt>
   12698:	mov	r2, r0
   1269c:	mov	r0, #0
   126a0:	mov	r1, #0
   126a4:	bl	11930 <error@plt>
   126a8:	cmp	r7, #0
   126ac:	bne	12700 <__assert_fail@plt+0xb3c>
   126b0:	movw	r0, #57816	; 0xe1d8
   126b4:	movt	r0, #2
   126b8:	ldr	r0, [r0]
   126bc:	sub	r0, r8, r0
   126c0:	cmp	r0, #2
   126c4:	bne	12700 <__assert_fail@plt+0xb3c>
   126c8:	movw	r0, #57824	; 0xe1e0
   126cc:	movw	r1, #51472	; 0xc910
   126d0:	movt	r0, #2
   126d4:	movt	r1, #1
   126d8:	ldr	r4, [r0]
   126dc:	mov	r0, #0
   126e0:	mov	r2, #5
   126e4:	bl	11870 <dcgettext@plt>
   126e8:	movw	r2, #52834	; 0xce62
   126ec:	mov	r3, r0
   126f0:	mov	r0, r4
   126f4:	mov	r1, #1
   126f8:	movt	r2, #1
   126fc:	bl	11a50 <__fprintf_chk@plt>
   12700:	mov	r0, #1
   12704:	bl	11cc0 <__assert_fail@plt+0xfc>
   12708:	bl	11a08 <__errno_location@plt>
   1270c:	ldr	r5, [r0]
   12710:	movw	r1, #51749	; 0xca25
   12714:	mov	r0, #0
   12718:	mov	r2, #5
   1271c:	movt	r1, #1
   12720:	bl	11870 <dcgettext@plt>
   12724:	mov	r6, r0
   12728:	ldr	r0, [r8]
   1272c:	ldr	r1, [sl, r0, lsl #2]
   12730:	mov	r0, #4
   12734:	bl	196e0 <lchmod@@Base+0x221c>
   12738:	mov	r3, r0
   1273c:	mov	r0, #1
   12740:	mov	r1, r5
   12744:	mov	r2, r6
   12748:	bl	11930 <error@plt>
   1274c:	movw	r1, #51705	; 0xc9f9
   12750:	mov	r0, #0
   12754:	mov	r2, #5
   12758:	movt	r1, #1
   1275c:	bl	11870 <dcgettext@plt>
   12760:	mov	r2, r0
   12764:	mov	r0, #1
   12768:	mov	r1, #0
   1276c:	mov	r3, r4
   12770:	str	r7, [sp]
   12774:	bl	11930 <error@plt>
   12778:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1277c:	add	fp, sp, #24
   12780:	sub	sp, sp, #16
   12784:	mov	r4, #0
   12788:	mov	r7, r0
   1278c:	mov	r5, r2
   12790:	mov	r6, r1
   12794:	str	r4, [sp, #4]
   12798:	str	r4, [sp]
   1279c:	ldrb	r0, [r1]
   127a0:	cmp	r0, #47	; 0x2f
   127a4:	beq	127c4 <__assert_fail@plt+0xc00>
   127a8:	mov	r0, r6
   127ac:	mov	r1, #2
   127b0:	bl	12d10 <__assert_fail@plt+0x114c>
   127b4:	mov	r4, r0
   127b8:	cmp	r0, #0
   127bc:	mov	r6, r0
   127c0:	beq	12918 <__assert_fail@plt+0xd54>
   127c4:	add	r1, sp, #4
   127c8:	mov	r0, r7
   127cc:	mov	r2, r6
   127d0:	mov	r3, r5
   127d4:	bl	11798 <selabel_lookup@plt>
   127d8:	cmn	r0, #1
   127dc:	ble	128f0 <__assert_fail@plt+0xd2c>
   127e0:	mov	r0, #0
   127e4:	str	r0, [sp, #12]
   127e8:	str	r0, [sp, #8]
   127ec:	mov	r0, r6
   127f0:	bl	135e8 <__assert_fail@plt+0x1a24>
   127f4:	mov	r6, r0
   127f8:	add	r0, sp, #12
   127fc:	bl	1190c <getcon@plt>
   12800:	mov	r9, #1
   12804:	cmp	r0, #0
   12808:	blt	12848 <__assert_fail@plt+0xc84>
   1280c:	add	r1, sp, #8
   12810:	mov	r0, r6
   12814:	bl	19dac <lchmod@@Base+0x28e8>
   12818:	cmp	r0, #0
   1281c:	blt	12848 <__assert_fail@plt+0xc84>
   12820:	mov	r0, r5
   12824:	bl	11b94 <mode_to_security_class@plt>
   12828:	cmp	r0, #0
   1282c:	beq	12848 <__assert_fail@plt+0xc84>
   12830:	mov	r2, r0
   12834:	ldr	r1, [sp, #8]
   12838:	ldr	r0, [sp, #12]
   1283c:	mov	r3, sp
   12840:	bl	11ac8 <security_compute_create@plt>
   12844:	lsr	r9, r0, #31
   12848:	bl	11a08 <__errno_location@plt>
   1284c:	ldr	r7, [r0]
   12850:	mov	r5, r0
   12854:	mov	r0, r6
   12858:	bl	137a4 <__assert_fail@plt+0x1be0>
   1285c:	ldr	r0, [sp, #12]
   12860:	bl	11af8 <freecon@plt>
   12864:	ldr	r0, [sp, #8]
   12868:	bl	11af8 <freecon@plt>
   1286c:	mvn	r8, #0
   12870:	cmp	r9, #0
   12874:	str	r7, [r5]
   12878:	bne	128e4 <__assert_fail@plt+0xd20>
   1287c:	ldr	r0, [sp, #4]
   12880:	bl	11858 <context_new@plt>
   12884:	cmp	r0, #0
   12888:	beq	128e4 <__assert_fail@plt+0xd20>
   1288c:	mov	r6, r0
   12890:	ldr	r0, [sp]
   12894:	bl	11858 <context_new@plt>
   12898:	cmp	r0, #0
   1289c:	beq	12934 <__assert_fail@plt+0xd70>
   128a0:	mov	r9, r0
   128a4:	mov	r0, r6
   128a8:	bl	117e0 <context_type_get@plt>
   128ac:	cmp	r0, #0
   128b0:	beq	12938 <__assert_fail@plt+0xd74>
   128b4:	mov	r1, r0
   128b8:	mov	r0, r9
   128bc:	bl	1187c <context_type_set@plt>
   128c0:	cmp	r0, #0
   128c4:	bne	12938 <__assert_fail@plt+0xd74>
   128c8:	mov	r0, r9
   128cc:	bl	11b28 <context_str@plt>
   128d0:	cmp	r0, #0
   128d4:	beq	12938 <__assert_fail@plt+0xd74>
   128d8:	bl	119fc <setfscreatecon@plt>
   128dc:	mov	r8, r0
   128e0:	b	12938 <__assert_fail@plt+0xd74>
   128e4:	mov	r9, #0
   128e8:	mov	r6, #0
   128ec:	b	12938 <__assert_fail@plt+0xd74>
   128f0:	bl	11a08 <__errno_location@plt>
   128f4:	mov	r5, r0
   128f8:	ldr	r0, [r0]
   128fc:	mvn	r8, #0
   12900:	mov	r9, #0
   12904:	mov	r6, #0
   12908:	cmp	r0, #2
   1290c:	moveq	r0, #61	; 0x3d
   12910:	streq	r0, [r5]
   12914:	b	12938 <__assert_fail@plt+0xd74>
   12918:	mov	r9, #0
   1291c:	mvn	r8, #0
   12920:	bl	11a08 <__errno_location@plt>
   12924:	mov	r5, r0
   12928:	mov	r6, #0
   1292c:	mov	r4, #0
   12930:	b	12938 <__assert_fail@plt+0xd74>
   12934:	mov	r9, #0
   12938:	ldr	r7, [r5]
   1293c:	mov	r0, r6
   12940:	bl	11984 <context_free@plt>
   12944:	mov	r0, r9
   12948:	bl	11984 <context_free@plt>
   1294c:	ldr	r0, [sp, #4]
   12950:	bl	11af8 <freecon@plt>
   12954:	ldr	r0, [sp]
   12958:	bl	11af8 <freecon@plt>
   1295c:	mov	r0, r4
   12960:	bl	137a4 <__assert_fail@plt+0x1be0>
   12964:	str	r7, [r5]
   12968:	mov	r0, r8
   1296c:	sub	sp, fp, #24
   12970:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12974:	push	{r4, r5, r6, r7, fp, lr}
   12978:	add	fp, sp, #16
   1297c:	sub	sp, sp, #8
   12980:	mov	r5, r0
   12984:	ldrb	r0, [r1]
   12988:	mov	r6, r2
   1298c:	mov	r4, #0
   12990:	cmp	r0, #47	; 0x2f
   12994:	beq	129bc <__assert_fail@plt+0xdf8>
   12998:	mov	r0, r1
   1299c:	mov	r1, #2
   129a0:	bl	12d10 <__assert_fail@plt+0x114c>
   129a4:	mov	r4, r0
   129a8:	cmp	r0, #0
   129ac:	mov	r1, r0
   129b0:	moveq	r0, #0
   129b4:	subeq	sp, fp, #16
   129b8:	popeq	{r4, r5, r6, r7, fp, pc}
   129bc:	cmp	r6, #0
   129c0:	beq	12a6c <__assert_fail@plt+0xea8>
   129c4:	mov	r7, #0
   129c8:	mov	r0, sp
   129cc:	mov	r2, #0
   129d0:	stm	sp, {r1, r7}
   129d4:	mov	r1, #16
   129d8:	bl	1abb0 <lchmod@@Base+0x36ec>
   129dc:	mov	r6, r0
   129e0:	bl	14274 <__assert_fail@plt+0x26b0>
   129e4:	cmp	r0, #0
   129e8:	beq	12a30 <__assert_fail@plt+0xe6c>
   129ec:	mov	r7, #0
   129f0:	ldr	r1, [r6, #24]
   129f4:	mov	r0, r5
   129f8:	bl	12aa4 <__assert_fail@plt+0xee0>
   129fc:	cmn	r0, #1
   12a00:	ble	12a18 <__assert_fail@plt+0xe54>
   12a04:	mov	r0, r6
   12a08:	bl	14274 <__assert_fail@plt+0x26b0>
   12a0c:	cmp	r0, #0
   12a10:	bne	129f0 <__assert_fail@plt+0xe2c>
   12a14:	b	12a30 <__assert_fail@plt+0xe6c>
   12a18:	bl	11a08 <__errno_location@plt>
   12a1c:	ldr	r7, [r0]
   12a20:	mov	r0, r6
   12a24:	bl	14274 <__assert_fail@plt+0x26b0>
   12a28:	cmp	r0, #0
   12a2c:	bne	129f0 <__assert_fail@plt+0xe2c>
   12a30:	bl	11a08 <__errno_location@plt>
   12a34:	mov	r5, r0
   12a38:	ldr	r0, [r0]
   12a3c:	cmp	r0, #0
   12a40:	movne	r7, r0
   12a44:	mov	r0, r6
   12a48:	bl	140cc <__assert_fail@plt+0x2508>
   12a4c:	cmp	r0, #0
   12a50:	mov	r0, r4
   12a54:	ldrne	r7, [r5]
   12a58:	bl	137a4 <__assert_fail@plt+0x1be0>
   12a5c:	clz	r0, r7
   12a60:	lsr	r0, r0, #5
   12a64:	sub	sp, fp, #16
   12a68:	pop	{r4, r5, r6, r7, fp, pc}
   12a6c:	mov	r0, r5
   12a70:	bl	12aa4 <__assert_fail@plt+0xee0>
   12a74:	mov	r5, r0
   12a78:	bl	11a08 <__errno_location@plt>
   12a7c:	ldr	r7, [r0]
   12a80:	mov	r6, r0
   12a84:	mov	r0, r4
   12a88:	bl	137a4 <__assert_fail@plt+0x1be0>
   12a8c:	add	r0, r5, #1
   12a90:	cmn	r5, #1
   12a94:	str	r7, [r6]
   12a98:	movwne	r0, #1
   12a9c:	sub	sp, fp, #16
   12aa0:	pop	{r4, r5, r6, r7, fp, pc}
   12aa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12aa8:	add	fp, sp, #28
   12aac:	sub	sp, sp, #116	; 0x74
   12ab0:	mov	r6, r0
   12ab4:	mov	r0, #0
   12ab8:	mov	r7, r1
   12abc:	cmp	r6, #0
   12ac0:	str	r0, [sp, #4]
   12ac4:	str	r0, [sp]
   12ac8:	beq	12b1c <__assert_fail@plt+0xf58>
   12acc:	mov	r0, r7
   12ad0:	mov	r1, #32768	; 0x8000
   12ad4:	bl	1193c <open64@plt>
   12ad8:	mov	sl, r0
   12adc:	cmn	r0, #1
   12ae0:	beq	12b58 <__assert_fail@plt+0xf94>
   12ae4:	add	r2, sp, #8
   12ae8:	mov	r0, #3
   12aec:	mov	r1, sl
   12af0:	bl	118d0 <__fxstat64@plt>
   12af4:	mov	r5, #1
   12af8:	cmn	r0, #1
   12afc:	bgt	12b90 <__assert_fail@plt+0xfcc>
   12b00:	bl	11a08 <__errno_location@plt>
   12b04:	ldr	r5, [r0]
   12b08:	mov	r4, r0
   12b0c:	mov	r8, #0
   12b10:	mvn	r9, #0
   12b14:	mov	r6, #0
   12b18:	b	12cb8 <__assert_fail@plt+0x10f4>
   12b1c:	mov	r0, sp
   12b20:	bl	11b10 <getfscreatecon@plt>
   12b24:	mvn	r9, #0
   12b28:	cmp	r0, #0
   12b2c:	blt	12c78 <__assert_fail@plt+0x10b4>
   12b30:	ldr	r1, [sp]
   12b34:	cmp	r1, #0
   12b38:	beq	12c6c <__assert_fail@plt+0x10a8>
   12b3c:	mov	r0, r7
   12b40:	bl	117f8 <lsetfilecon@plt>
   12b44:	mov	r9, r0
   12b48:	bl	11a08 <__errno_location@plt>
   12b4c:	ldr	r5, [r0]
   12b50:	mov	r4, r0
   12b54:	b	12cd8 <__assert_fail@plt+0x1114>
   12b58:	bl	11a08 <__errno_location@plt>
   12b5c:	ldr	r5, [r0]
   12b60:	mov	r4, r0
   12b64:	mov	r8, #0
   12b68:	mvn	r9, #0
   12b6c:	cmp	r5, #40	; 0x28
   12b70:	bne	12c64 <__assert_fail@plt+0x10a0>
   12b74:	add	r2, sp, #8
   12b78:	mov	r0, #3
   12b7c:	mov	r1, r7
   12b80:	bl	11b7c <__lxstat64@plt>
   12b84:	mov	r5, #0
   12b88:	cmn	r0, #1
   12b8c:	ble	12cf0 <__assert_fail@plt+0x112c>
   12b90:	ldr	r3, [sp, #24]
   12b94:	add	r1, sp, #4
   12b98:	mov	r0, r6
   12b9c:	mov	r2, r7
   12ba0:	bl	11798 <selabel_lookup@plt>
   12ba4:	cmn	r0, #1
   12ba8:	ble	12c40 <__assert_fail@plt+0x107c>
   12bac:	ldr	r0, [sp, #4]
   12bb0:	bl	11858 <context_new@plt>
   12bb4:	mvn	r9, #0
   12bb8:	cmp	r0, #0
   12bbc:	beq	12c84 <__assert_fail@plt+0x10c0>
   12bc0:	mov	r8, r0
   12bc4:	mov	r1, sp
   12bc8:	cmp	r5, #0
   12bcc:	beq	12c90 <__assert_fail@plt+0x10cc>
   12bd0:	mov	r0, sl
   12bd4:	bl	19e94 <lchmod@@Base+0x29d0>
   12bd8:	cmp	r0, #0
   12bdc:	blt	12ca0 <__assert_fail@plt+0x10dc>
   12be0:	ldr	r0, [sp]
   12be4:	bl	11858 <context_new@plt>
   12be8:	cmp	r0, #0
   12bec:	beq	12ca0 <__assert_fail@plt+0x10dc>
   12bf0:	mov	r6, r0
   12bf4:	mov	r0, r8
   12bf8:	bl	117e0 <context_type_get@plt>
   12bfc:	cmp	r0, #0
   12c00:	beq	12ca4 <__assert_fail@plt+0x10e0>
   12c04:	mov	r1, r0
   12c08:	mov	r0, r6
   12c0c:	bl	1187c <context_type_set@plt>
   12c10:	cmp	r0, #0
   12c14:	bne	12ca4 <__assert_fail@plt+0x10e0>
   12c18:	mov	r0, r6
   12c1c:	bl	11b28 <context_str@plt>
   12c20:	cmp	r0, #0
   12c24:	beq	12ca4 <__assert_fail@plt+0x10e0>
   12c28:	mov	r1, r0
   12c2c:	cmp	r5, #0
   12c30:	beq	12d00 <__assert_fail@plt+0x113c>
   12c34:	mov	r0, sl
   12c38:	bl	11a8c <fsetfilecon@plt>
   12c3c:	b	12d08 <__assert_fail@plt+0x1144>
   12c40:	bl	11a08 <__errno_location@plt>
   12c44:	ldr	r1, [r0]
   12c48:	mvn	r9, #0
   12c4c:	mov	r6, #0
   12c50:	mov	r8, #0
   12c54:	cmp	r1, #2
   12c58:	moveq	r1, #61	; 0x3d
   12c5c:	streq	r1, [r0]
   12c60:	b	12ca4 <__assert_fail@plt+0x10e0>
   12c64:	mov	r6, #0
   12c68:	b	12cc0 <__assert_fail@plt+0x10fc>
   12c6c:	bl	11a08 <__errno_location@plt>
   12c70:	mov	r1, #61	; 0x3d
   12c74:	str	r1, [r0]
   12c78:	mov	r0, r9
   12c7c:	sub	sp, fp, #28
   12c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c84:	mov	r6, #0
   12c88:	mov	r8, #0
   12c8c:	b	12ca4 <__assert_fail@plt+0x10e0>
   12c90:	mov	r0, r7
   12c94:	bl	19e20 <lchmod@@Base+0x295c>
   12c98:	cmp	r0, #0
   12c9c:	bge	12be0 <__assert_fail@plt+0x101c>
   12ca0:	mov	r6, #0
   12ca4:	bl	11a08 <__errno_location@plt>
   12ca8:	ldr	r5, [r0]
   12cac:	mov	r4, r0
   12cb0:	cmn	sl, #1
   12cb4:	beq	12cc0 <__assert_fail@plt+0x10fc>
   12cb8:	mov	r0, sl
   12cbc:	bl	11b70 <close@plt>
   12cc0:	mov	r0, r8
   12cc4:	bl	11984 <context_free@plt>
   12cc8:	mov	r0, r6
   12ccc:	bl	11984 <context_free@plt>
   12cd0:	ldr	r0, [sp, #4]
   12cd4:	bl	11af8 <freecon@plt>
   12cd8:	ldr	r0, [sp]
   12cdc:	bl	11af8 <freecon@plt>
   12ce0:	str	r5, [r4]
   12ce4:	mov	r0, r9
   12ce8:	sub	sp, fp, #28
   12cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cf0:	ldr	r5, [r4]
   12cf4:	mov	r8, #0
   12cf8:	mov	r6, #0
   12cfc:	b	12cc0 <__assert_fail@plt+0x10fc>
   12d00:	mov	r0, r7
   12d04:	bl	117f8 <lsetfilecon@plt>
   12d08:	mov	r9, r0
   12d0c:	b	12ca4 <__assert_fail@plt+0x10e0>
   12d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d14:	add	fp, sp, #28
   12d18:	sub	sp, sp, #180	; 0xb4
   12d1c:	sub	sp, sp, #3072	; 0xc00
   12d20:	mov	r8, r0
   12d24:	and	r7, r1, #3
   12d28:	sub	r0, r1, #1
   12d2c:	tst	r0, r7
   12d30:	beq	12d50 <__assert_fail@plt+0x118c>
   12d34:	bl	11a08 <__errno_location@plt>
   12d38:	mov	r1, #22
   12d3c:	mov	r4, #0
   12d40:	str	r1, [r0]
   12d44:	mov	r0, r4
   12d48:	sub	sp, fp, #28
   12d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d50:	cmp	r8, #0
   12d54:	beq	12d34 <__assert_fail@plt+0x1170>
   12d58:	ldrb	r0, [r8]
   12d5c:	cmp	r0, #0
   12d60:	beq	13368 <__assert_fail@plt+0x17a4>
   12d64:	sub	lr, fp, #1024	; 0x400
   12d68:	mov	r4, r1
   12d6c:	mov	r1, #1024	; 0x400
   12d70:	cmp	r0, #47	; 0x2f
   12d74:	sub	r2, lr, #40	; 0x28
   12d78:	str	r1, [fp, #-1060]	; 0xfffffbdc
   12d7c:	add	r2, r2, #8
   12d80:	str	r2, [sp, #12]
   12d84:	str	r2, [fp, #-1064]	; 0xfffffbd8
   12d88:	add	r2, sp, #1184	; 0x4a0
   12d8c:	add	r2, r2, #8
   12d90:	str	r2, [sp, #1184]	; 0x4a0
   12d94:	str	r2, [sp, #16]
   12d98:	add	r2, sp, #48	; 0x30
   12d9c:	str	r1, [sp, #1188]	; 0x4a4
   12da0:	add	r5, r2, #8
   12da4:	mov	r0, r5
   12da8:	str	r5, [sp, #48]	; 0x30
   12dac:	str	r1, [sp, #52]	; 0x34
   12db0:	str	r5, [sp, #8]
   12db4:	bne	13374 <__assert_fail@plt+0x17b0>
   12db8:	mov	r1, r8
   12dbc:	mov	r2, #0
   12dc0:	mov	r3, #1024	; 0x400
   12dc4:	bl	11bb8 <__mempcpy_chk@plt>
   12dc8:	mov	r6, r0
   12dcc:	mov	r0, #47	; 0x2f
   12dd0:	strb	r0, [r6], #1
   12dd4:	ldrb	r0, [r8]
   12dd8:	cmp	r0, #0
   12ddc:	beq	133a0 <__assert_fail@plt+0x17dc>
   12de0:	and	r1, r4, #4
   12de4:	add	r9, sp, #48	; 0x30
   12de8:	str	r7, [sp, #32]
   12dec:	str	r1, [sp, #40]	; 0x28
   12df0:	mov	r1, #0
   12df4:	str	r1, [sp, #24]
   12df8:	mov	r1, #0
   12dfc:	str	r1, [sp, #36]	; 0x24
   12e00:	mov	r1, #0
   12e04:	str	r1, [sp, #20]
   12e08:	uxtb	r1, r0
   12e0c:	cmp	r1, #47	; 0x2f
   12e10:	bne	12e20 <__assert_fail@plt+0x125c>
   12e14:	ldrb	r0, [r8, #1]!
   12e18:	cmp	r0, #47	; 0x2f
   12e1c:	beq	12e14 <__assert_fail@plt+0x1250>
   12e20:	mov	r1, r0
   12e24:	mov	sl, r8
   12e28:	uxtb	r1, r1
   12e2c:	cmp	r1, #0
   12e30:	cmpne	r1, #47	; 0x2f
   12e34:	beq	12e4c <__assert_fail@plt+0x1288>
   12e38:	ldrb	r1, [sl, #1]!
   12e3c:	uxtb	r1, r1
   12e40:	cmp	r1, #0
   12e44:	cmpne	r1, #47	; 0x2f
   12e48:	bne	12e38 <__assert_fail@plt+0x1274>
   12e4c:	sub	r2, sl, r8
   12e50:	cmp	r2, #1
   12e54:	beq	12ec0 <__assert_fail@plt+0x12fc>
   12e58:	cmp	r2, #2
   12e5c:	beq	12e6c <__assert_fail@plt+0x12a8>
   12e60:	cmp	r2, #0
   12e64:	bne	12ee0 <__assert_fail@plt+0x131c>
   12e68:	b	133a8 <__assert_fail@plt+0x17e4>
   12e6c:	uxtb	r0, r0
   12e70:	cmp	r0, #46	; 0x2e
   12e74:	ldrbeq	r0, [r8, #1]
   12e78:	cmpeq	r0, #46	; 0x2e
   12e7c:	bne	12ee0 <__assert_fail@plt+0x131c>
   12e80:	add	r0, r5, #1
   12e84:	cmp	r6, r0
   12e88:	bls	1332c <__assert_fail@plt+0x1768>
   12e8c:	sub	r0, r6, #1
   12e90:	mov	r6, r0
   12e94:	cmp	r0, r5
   12e98:	bls	13340 <__assert_fail@plt+0x177c>
   12e9c:	mov	r0, r6
   12ea0:	ldrb	r1, [r0, #-1]!
   12ea4:	cmp	r1, #47	; 0x2f
   12ea8:	bne	12e90 <__assert_fail@plt+0x12cc>
   12eac:	mov	r8, sl
   12eb0:	ldrb	r0, [r8]
   12eb4:	cmp	r0, #0
   12eb8:	bne	12e08 <__assert_fail@plt+0x1244>
   12ebc:	b	133a8 <__assert_fail@plt+0x17e4>
   12ec0:	uxtb	r0, r0
   12ec4:	cmp	r0, #46	; 0x2e
   12ec8:	bne	12ee0 <__assert_fail@plt+0x131c>
   12ecc:	mov	r8, sl
   12ed0:	ldrb	r0, [r8]
   12ed4:	cmp	r0, #0
   12ed8:	bne	12e08 <__assert_fail@plt+0x1244>
   12edc:	b	133a8 <__assert_fail@plt+0x17e4>
   12ee0:	ldrb	r0, [r6, #-1]
   12ee4:	add	r4, r2, #2
   12ee8:	str	r2, [sp, #44]	; 0x2c
   12eec:	cmp	r0, #47	; 0x2f
   12ef0:	movne	r0, #47	; 0x2f
   12ef4:	strbne	r0, [r6], #1
   12ef8:	ldr	r0, [sp, #52]	; 0x34
   12efc:	add	r0, r5, r0
   12f00:	sub	r0, r0, r6
   12f04:	cmp	r0, r4
   12f08:	bcs	12f40 <__assert_fail@plt+0x137c>
   12f0c:	mov	r0, r9
   12f10:	bl	19cf8 <lchmod@@Base+0x2834>
   12f14:	cmp	r0, #0
   12f18:	beq	134b8 <__assert_fail@plt+0x18f4>
   12f1c:	sub	r0, r6, r5
   12f20:	ldr	r5, [sp, #48]	; 0x30
   12f24:	ldr	r1, [sp, #52]	; 0x34
   12f28:	add	r6, r5, r0
   12f2c:	add	r0, r5, r1
   12f30:	sub	r0, r0, r6
   12f34:	cmp	r0, r4
   12f38:	bcc	12f0c <__assert_fail@plt+0x1348>
   12f3c:	ldr	r2, [sp, #44]	; 0x2c
   12f40:	mov	r0, r6
   12f44:	mov	r1, r8
   12f48:	mvn	r3, #0
   12f4c:	bl	11bb8 <__mempcpy_chk@plt>
   12f50:	mov	r6, r0
   12f54:	mov	r0, #0
   12f58:	strb	r0, [r6]
   12f5c:	ldr	r0, [sp, #40]	; 0x28
   12f60:	cmp	r0, #0
   12f64:	bne	12fc8 <__assert_fail@plt+0x1404>
   12f68:	ldr	r0, [sp, #1188]	; 0x4a4
   12f6c:	ldr	r7, [sp, #1184]	; 0x4a0
   12f70:	sub	r9, r0, #1
   12f74:	mov	r0, r5
   12f78:	mov	r1, r7
   12f7c:	mov	r2, r9
   12f80:	bl	118dc <readlink@plt>
   12f84:	cmp	r0, r9
   12f88:	blt	12fa0 <__assert_fail@plt+0x13dc>
   12f8c:	add	r0, sp, #1184	; 0x4a0
   12f90:	bl	19c88 <lchmod@@Base+0x27c4>
   12f94:	cmp	r0, #0
   12f98:	bne	12f68 <__assert_fail@plt+0x13a4>
   12f9c:	b	134b8 <__assert_fail@plt+0x18f4>
   12fa0:	mov	r4, r0
   12fa4:	cmp	r0, #0
   12fa8:	add	r9, sp, #48	; 0x30
   12fac:	blt	12fc8 <__assert_fail@plt+0x1404>
   12fb0:	ldr	r0, [sp, #24]
   12fb4:	cmp	r0, #19
   12fb8:	bgt	13078 <__assert_fail@plt+0x14b4>
   12fbc:	add	r0, r0, #1
   12fc0:	str	r0, [sp, #24]
   12fc4:	b	13204 <__assert_fail@plt+0x1640>
   12fc8:	ldr	r7, [sp, #32]
   12fcc:	cmp	r7, #2
   12fd0:	bne	12fe8 <__assert_fail@plt+0x1424>
   12fd4:	mov	r8, sl
   12fd8:	ldrb	r0, [r8]
   12fdc:	cmp	r0, #0
   12fe0:	bne	12e08 <__assert_fail@plt+0x1244>
   12fe4:	b	133a8 <__assert_fail@plt+0x17e4>
   12fe8:	ldrb	r0, [sl]
   12fec:	cmp	r0, #47	; 0x2f
   12ff0:	bne	13148 <__assert_fail@plt+0x1584>
   12ff4:	mov	r2, sl
   12ff8:	mov	r1, r2
   12ffc:	ldrb	r3, [r2, #1]!
   13000:	cmp	r3, #47	; 0x2f
   13004:	beq	12ff8 <__assert_fail@plt+0x1434>
   13008:	cmp	r3, #46	; 0x2e
   1300c:	bne	13140 <__assert_fail@plt+0x157c>
   13010:	add	r2, r1, #2
   13014:	ldrb	r3, [r2]
   13018:	cmp	r3, #47	; 0x2f
   1301c:	beq	12ff8 <__assert_fail@plt+0x1434>
   13020:	cmp	r3, #0
   13024:	beq	13040 <__assert_fail@plt+0x147c>
   13028:	cmp	r3, #46	; 0x2e
   1302c:	bne	13148 <__assert_fail@plt+0x1584>
   13030:	ldrb	r1, [r1, #3]
   13034:	cmp	r1, #47	; 0x2f
   13038:	cmpne	r1, #0
   1303c:	bne	13148 <__assert_fail@plt+0x1584>
   13040:	mov	r0, #47	; 0x2f
   13044:	mov	r1, r5
   13048:	mov	r2, #0
   1304c:	mov	r3, #512	; 0x200
   13050:	strh	r0, [r6]
   13054:	mvn	r0, #99	; 0x63
   13058:	bl	1181c <faccessat@plt>
   1305c:	cmp	r0, #0
   13060:	bne	131b0 <__assert_fail@plt+0x15ec>
   13064:	mov	r8, sl
   13068:	ldrb	r0, [r8]
   1306c:	cmp	r0, #0
   13070:	bne	12e08 <__assert_fail@plt+0x1244>
   13074:	b	133a8 <__assert_fail@plt+0x17e4>
   13078:	ldrb	r0, [r8]
   1307c:	cmp	r0, #0
   13080:	beq	13204 <__assert_fail@plt+0x1640>
   13084:	ldr	r9, [sp, #44]	; 0x2c
   13088:	mov	r0, #0
   1308c:	add	lr, sp, #1024	; 0x400
   13090:	mov	r1, r5
   13094:	add	r2, lr, #56	; 0x38
   13098:	strb	r0, [r6, -r9]
   1309c:	ldrb	r0, [r5]
   130a0:	cmp	r0, #0
   130a4:	movw	r0, #52355	; 0xcc83
   130a8:	movt	r0, #1
   130ac:	moveq	r1, r0
   130b0:	mov	r0, #3
   130b4:	bl	11b40 <__xstat64@plt>
   130b8:	cmp	r0, #0
   130bc:	bne	134c8 <__assert_fail@plt+0x1904>
   130c0:	rsb	r0, r9, #0
   130c4:	ldr	r9, [sp, #20]
   130c8:	ldrb	r1, [r8]
   130cc:	cmp	r9, #0
   130d0:	strb	r1, [r6, r0]
   130d4:	bne	1310c <__assert_fail@plt+0x1548>
   130d8:	movw	r0, #29652	; 0x73d4
   130dc:	movw	r2, #29508	; 0x7344
   130e0:	movw	r3, #29564	; 0x737c
   130e4:	mov	r1, #0
   130e8:	movt	r0, #1
   130ec:	movt	r2, #1
   130f0:	movt	r3, #1
   130f4:	str	r0, [sp]
   130f8:	mov	r0, #7
   130fc:	bl	16410 <__assert_fail@plt+0x484c>
   13100:	mov	r9, r0
   13104:	cmp	r0, #0
   13108:	beq	134b8 <__assert_fail@plt+0x18f4>
   1310c:	add	lr, sp, #1024	; 0x400
   13110:	mov	r0, r9
   13114:	mov	r1, r8
   13118:	add	r2, lr, #56	; 0x38
   1311c:	bl	13758 <__assert_fail@plt+0x1b94>
   13120:	cmp	r0, #0
   13124:	str	r9, [sp, #20]
   13128:	beq	131f0 <__assert_fail@plt+0x162c>
   1312c:	ldr	r7, [sp, #32]
   13130:	cmp	r7, #2
   13134:	bne	134bc <__assert_fail@plt+0x18f8>
   13138:	mov	r8, sl
   1313c:	b	132d0 <__assert_fail@plt+0x170c>
   13140:	cmp	r3, #0
   13144:	beq	13040 <__assert_fail@plt+0x147c>
   13148:	ldr	r1, [sp, #40]	; 0x28
   1314c:	cmp	r1, #0
   13150:	beq	13170 <__assert_fail@plt+0x15ac>
   13154:	cmp	r0, #0
   13158:	beq	13194 <__assert_fail@plt+0x15d0>
   1315c:	mov	r8, sl
   13160:	ldrb	r0, [r8]
   13164:	cmp	r0, #0
   13168:	bne	12e08 <__assert_fail@plt+0x1244>
   1316c:	b	133a8 <__assert_fail@plt+0x17e4>
   13170:	bl	11a08 <__errno_location@plt>
   13174:	ldr	r0, [r0]
   13178:	cmp	r0, #22
   1317c:	bne	131b0 <__assert_fail@plt+0x15ec>
   13180:	mov	r8, sl
   13184:	ldrb	r0, [r8]
   13188:	cmp	r0, #0
   1318c:	bne	12e08 <__assert_fail@plt+0x1244>
   13190:	b	133a8 <__assert_fail@plt+0x17e4>
   13194:	mvn	r0, #99	; 0x63
   13198:	mov	r1, r5
   1319c:	mov	r2, #0
   131a0:	mov	r3, #512	; 0x200
   131a4:	bl	1181c <faccessat@plt>
   131a8:	cmp	r0, #0
   131ac:	beq	13354 <__assert_fail@plt+0x1790>
   131b0:	mov	r4, #1
   131b4:	cmp	r7, #1
   131b8:	bne	133c8 <__assert_fail@plt+0x1804>
   131bc:	bl	11a08 <__errno_location@plt>
   131c0:	ldr	r0, [r0]
   131c4:	cmp	r0, #2
   131c8:	bne	133c8 <__assert_fail@plt+0x1804>
   131cc:	movw	r1, #53561	; 0xd139
   131d0:	mov	r0, sl
   131d4:	movt	r1, #1
   131d8:	bl	11bac <strspn@plt>
   131dc:	ldrb	r0, [sl, r0]
   131e0:	mov	r8, sl
   131e4:	cmp	r0, #0
   131e8:	beq	1331c <__assert_fail@plt+0x1758>
   131ec:	b	133c8 <__assert_fail@plt+0x1804>
   131f0:	add	lr, sp, #1024	; 0x400
   131f4:	mov	r0, r9
   131f8:	mov	r1, r8
   131fc:	add	r2, lr, #56	; 0x38
   13200:	bl	136dc <__assert_fail@plt+0x1b18>
   13204:	mov	r0, #0
   13208:	strb	r0, [r7, r4]
   1320c:	ldr	r0, [sp, #36]	; 0x24
   13210:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   13214:	tst	r0, #1
   13218:	ldr	r0, [sp, #28]
   1321c:	subne	r0, sl, r8
   13220:	str	r0, [sp, #28]
   13224:	mov	r0, sl
   13228:	bl	119cc <strlen@plt>
   1322c:	adds	r9, r0, r4
   13230:	str	r0, [sp, #44]	; 0x2c
   13234:	bcs	134b8 <__assert_fail@plt+0x18f4>
   13238:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   1323c:	cmp	r0, r9
   13240:	bhi	13268 <__assert_fail@plt+0x16a4>
   13244:	sub	lr, fp, #1024	; 0x400
   13248:	sub	r0, lr, #40	; 0x28
   1324c:	bl	19cf8 <lchmod@@Base+0x2834>
   13250:	cmp	r0, #0
   13254:	beq	134b8 <__assert_fail@plt+0x18f4>
   13258:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   1325c:	cmp	r0, r9
   13260:	bls	13244 <__assert_fail@plt+0x1680>
   13264:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   13268:	ldr	r0, [sp, #36]	; 0x24
   1326c:	ldr	r1, [sp, #44]	; 0x2c
   13270:	tst	r0, #1
   13274:	ldr	r0, [sp, #28]
   13278:	add	r2, r1, #1
   1327c:	addne	sl, r8, r0
   13280:	add	r0, r8, r4
   13284:	mov	r1, sl
   13288:	bl	11804 <memmove@plt>
   1328c:	mov	r0, r8
   13290:	mov	r1, r7
   13294:	mov	r2, r4
   13298:	bl	11834 <memcpy@plt>
   1329c:	ldrb	r0, [r7]
   132a0:	cmp	r0, #47	; 0x2f
   132a4:	bne	132e4 <__assert_fail@plt+0x1720>
   132a8:	mov	r0, r5
   132ac:	mov	r1, r7
   132b0:	mov	r2, #0
   132b4:	mvn	r3, #0
   132b8:	bl	11bb8 <__mempcpy_chk@plt>
   132bc:	mov	r6, r0
   132c0:	mov	r0, #47	; 0x2f
   132c4:	strb	r0, [r6], #1
   132c8:	mov	r0, #1
   132cc:	str	r0, [sp, #36]	; 0x24
   132d0:	add	r9, sp, #48	; 0x30
   132d4:	ldrb	r0, [r8]
   132d8:	cmp	r0, #0
   132dc:	bne	12e08 <__assert_fail@plt+0x1244>
   132e0:	b	133a8 <__assert_fail@plt+0x17e4>
   132e4:	add	r0, r5, #1
   132e8:	mov	r1, #1
   132ec:	add	r9, sp, #48	; 0x30
   132f0:	cmp	r6, r0
   132f4:	str	r1, [sp, #36]	; 0x24
   132f8:	bls	1331c <__assert_fail@plt+0x1758>
   132fc:	sub	r0, r6, #1
   13300:	mov	r6, r0
   13304:	cmp	r0, r5
   13308:	bls	1331c <__assert_fail@plt+0x1758>
   1330c:	mov	r0, r6
   13310:	ldrb	r1, [r0, #-1]!
   13314:	cmp	r1, #47	; 0x2f
   13318:	bne	13300 <__assert_fail@plt+0x173c>
   1331c:	ldrb	r0, [r8]
   13320:	cmp	r0, #0
   13324:	bne	12e08 <__assert_fail@plt+0x1244>
   13328:	b	133a8 <__assert_fail@plt+0x17e4>
   1332c:	mov	r8, sl
   13330:	ldrb	r0, [r8]
   13334:	cmp	r0, #0
   13338:	bne	12e08 <__assert_fail@plt+0x1244>
   1333c:	b	133a8 <__assert_fail@plt+0x17e4>
   13340:	mov	r8, sl
   13344:	ldrb	r0, [r8]
   13348:	cmp	r0, #0
   1334c:	bne	12e08 <__assert_fail@plt+0x1244>
   13350:	b	133a8 <__assert_fail@plt+0x17e4>
   13354:	mov	r8, sl
   13358:	ldrb	r0, [r8]
   1335c:	cmp	r0, #0
   13360:	bne	12e08 <__assert_fail@plt+0x1244>
   13364:	b	133a8 <__assert_fail@plt+0x17e4>
   13368:	bl	11a08 <__errno_location@plt>
   1336c:	mov	r1, #2
   13370:	b	12d3c <__assert_fail@plt+0x1178>
   13374:	mov	r1, #1024	; 0x400
   13378:	bl	119a8 <getcwd@plt>
   1337c:	cmp	r0, #0
   13380:	beq	133ec <__assert_fail@plt+0x1828>
   13384:	mov	r0, r5
   13388:	mov	r1, #0
   1338c:	bl	118ac <rawmemchr@plt>
   13390:	mov	r6, r0
   13394:	ldrb	r0, [r8]
   13398:	cmp	r0, #0
   1339c:	bne	12de0 <__assert_fail@plt+0x121c>
   133a0:	mov	r0, #0
   133a4:	str	r0, [sp, #20]
   133a8:	add	r0, r5, #1
   133ac:	cmp	r6, r0
   133b0:	bls	133c4 <__assert_fail@plt+0x1800>
   133b4:	mov	r0, r6
   133b8:	ldrb	r1, [r0, #-1]!
   133bc:	cmp	r1, #47	; 0x2f
   133c0:	moveq	r6, r0
   133c4:	mov	r4, #0
   133c8:	ldr	r0, [sp, #20]
   133cc:	cmp	r0, #0
   133d0:	beq	13444 <__assert_fail@plt+0x1880>
   133d4:	bl	1672c <__assert_fail@plt+0x4b68>
   133d8:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   133dc:	ldr	r1, [sp, #12]
   133e0:	cmp	r0, r1
   133e4:	bne	13454 <__assert_fail@plt+0x1890>
   133e8:	b	13458 <__assert_fail@plt+0x1894>
   133ec:	bl	11a08 <__errno_location@plt>
   133f0:	ldr	r5, [sp, #8]
   133f4:	mov	r6, r0
   133f8:	add	r9, sp, #48	; 0x30
   133fc:	ldr	r0, [r6]
   13400:	cmp	r0, #34	; 0x22
   13404:	bne	13434 <__assert_fail@plt+0x1870>
   13408:	mov	r0, r9
   1340c:	bl	19c88 <lchmod@@Base+0x27c4>
   13410:	cmp	r0, #0
   13414:	beq	134b8 <__assert_fail@plt+0x18f4>
   13418:	ldr	r5, [sp, #48]	; 0x30
   1341c:	ldr	r1, [sp, #52]	; 0x34
   13420:	mov	r0, r5
   13424:	bl	119a8 <getcwd@plt>
   13428:	cmp	r0, #0
   1342c:	beq	133fc <__assert_fail@plt+0x1838>
   13430:	b	13384 <__assert_fail@plt+0x17c0>
   13434:	cmp	r0, #12
   13438:	beq	134b8 <__assert_fail@plt+0x18f4>
   1343c:	mov	r4, #1
   13440:	mov	r6, r5
   13444:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   13448:	ldr	r1, [sp, #12]
   1344c:	cmp	r0, r1
   13450:	beq	13458 <__assert_fail@plt+0x1894>
   13454:	bl	137a4 <__assert_fail@plt+0x1be0>
   13458:	ldr	r0, [sp, #1184]	; 0x4a0
   1345c:	ldr	r1, [sp, #16]
   13460:	cmp	r0, r1
   13464:	beq	1346c <__assert_fail@plt+0x18a8>
   13468:	bl	137a4 <__assert_fail@plt+0x1be0>
   1346c:	cmp	r4, #0
   13470:	beq	13498 <__assert_fail@plt+0x18d4>
   13474:	ldr	r0, [sp, #48]	; 0x30
   13478:	ldr	r1, [sp, #8]
   1347c:	mov	r4, #0
   13480:	cmp	r0, r1
   13484:	beq	12d44 <__assert_fail@plt+0x1180>
   13488:	bl	137a4 <__assert_fail@plt+0x1be0>
   1348c:	mov	r0, r4
   13490:	sub	sp, fp, #28
   13494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13498:	mov	r0, #0
   1349c:	strb	r0, [r6], #1
   134a0:	add	r0, sp, #48	; 0x30
   134a4:	sub	r1, r6, r5
   134a8:	bl	19c20 <lchmod@@Base+0x275c>
   134ac:	mov	r4, r0
   134b0:	cmp	r0, #0
   134b4:	bne	12d44 <__assert_fail@plt+0x1180>
   134b8:	bl	1ab6c <lchmod@@Base+0x36a8>
   134bc:	bl	11a08 <__errno_location@plt>
   134c0:	mov	r1, #40	; 0x28
   134c4:	str	r1, [r0]
   134c8:	mov	r4, #1
   134cc:	ldr	r0, [sp, #20]
   134d0:	cmp	r0, #0
   134d4:	bne	133d4 <__assert_fail@plt+0x1810>
   134d8:	b	13444 <__assert_fail@plt+0x1880>
   134dc:	movw	r1, #57840	; 0xe1f0
   134e0:	movt	r1, #2
   134e4:	str	r0, [r1, #4]
   134e8:	bx	lr
   134ec:	movw	r1, #57840	; 0xe1f0
   134f0:	movt	r1, #2
   134f4:	strb	r0, [r1]
   134f8:	bx	lr
   134fc:	push	{r4, r5, r6, sl, fp, lr}
   13500:	add	fp, sp, #16
   13504:	sub	sp, sp, #8
   13508:	movw	r0, #57828	; 0xe1e4
   1350c:	movt	r0, #2
   13510:	ldr	r0, [r0]
   13514:	bl	1ba50 <lchmod@@Base+0x458c>
   13518:	cmp	r0, #0
   1351c:	beq	13544 <__assert_fail@plt+0x1980>
   13520:	movw	r5, #57840	; 0xe1f0
   13524:	movt	r5, #2
   13528:	ldrb	r0, [r5]
   1352c:	cmp	r0, #0
   13530:	beq	13570 <__assert_fail@plt+0x19ac>
   13534:	bl	11a08 <__errno_location@plt>
   13538:	ldr	r0, [r0]
   1353c:	cmp	r0, #32
   13540:	bne	13570 <__assert_fail@plt+0x19ac>
   13544:	movw	r0, #57824	; 0xe1e0
   13548:	movt	r0, #2
   1354c:	ldr	r0, [r0]
   13550:	bl	1ba50 <lchmod@@Base+0x458c>
   13554:	cmp	r0, #0
   13558:	subeq	sp, fp, #16
   1355c:	popeq	{r4, r5, r6, sl, fp, pc}
   13560:	movw	r0, #57740	; 0xe18c
   13564:	movt	r0, #2
   13568:	ldr	r0, [r0]
   1356c:	bl	11828 <_exit@plt>
   13570:	movw	r1, #52335	; 0xcc6f
   13574:	mov	r0, #0
   13578:	mov	r2, #5
   1357c:	movt	r1, #1
   13580:	bl	11870 <dcgettext@plt>
   13584:	ldr	r6, [r5, #4]
   13588:	mov	r4, r0
   1358c:	bl	11a08 <__errno_location@plt>
   13590:	ldr	r5, [r0]
   13594:	cmp	r6, #0
   13598:	bne	135b4 <__assert_fail@plt+0x19f0>
   1359c:	movw	r2, #52351	; 0xcc7f
   135a0:	mov	r0, #0
   135a4:	mov	r1, r5
   135a8:	mov	r3, r4
   135ac:	movt	r2, #1
   135b0:	b	135d4 <__assert_fail@plt+0x1a10>
   135b4:	mov	r0, r6
   135b8:	bl	19880 <lchmod@@Base+0x23bc>
   135bc:	movw	r2, #52347	; 0xcc7b
   135c0:	mov	r3, r0
   135c4:	str	r4, [sp]
   135c8:	mov	r0, #0
   135cc:	mov	r1, r5
   135d0:	movt	r2, #1
   135d4:	bl	11930 <error@plt>
   135d8:	movw	r0, #57740	; 0xe18c
   135dc:	movt	r0, #2
   135e0:	ldr	r0, [r0]
   135e4:	bl	11828 <_exit@plt>
   135e8:	push	{fp, lr}
   135ec:	mov	fp, sp
   135f0:	bl	13648 <__assert_fail@plt+0x1a84>
   135f4:	cmp	r0, #0
   135f8:	popne	{fp, pc}
   135fc:	bl	1ab6c <lchmod@@Base+0x36a8>
   13600:	push	{r4, r5, r6, sl, fp, lr}
   13604:	add	fp, sp, #16
   13608:	mov	r5, r0
   1360c:	mov	r4, r0
   13610:	ldrb	r6, [r5], #-1
   13614:	bl	1b9b8 <lchmod@@Base+0x44f4>
   13618:	sub	r2, r0, r4
   1361c:	sub	r0, r6, #47	; 0x2f
   13620:	clz	r0, r0
   13624:	lsr	r1, r0, #5
   13628:	mov	r0, r2
   1362c:	cmp	r2, r1
   13630:	popls	{r4, r5, r6, sl, fp, pc}
   13634:	ldrb	r3, [r5, r0]
   13638:	sub	r2, r0, #1
   1363c:	cmp	r3, #47	; 0x2f
   13640:	beq	13628 <__assert_fail@plt+0x1a64>
   13644:	pop	{r4, r5, r6, sl, fp, pc}
   13648:	push	{r4, r5, r6, sl, fp, lr}
   1364c:	add	fp, sp, #16
   13650:	mov	r6, r0
   13654:	mov	r4, r0
   13658:	ldrb	r5, [r6], #-1
   1365c:	bl	1b9b8 <lchmod@@Base+0x44f4>
   13660:	sub	r1, r0, r4
   13664:	sub	r0, r5, #47	; 0x2f
   13668:	clz	r0, r0
   1366c:	lsr	r0, r0, #5
   13670:	mov	r5, r1
   13674:	cmp	r1, r0
   13678:	bls	1368c <__assert_fail@plt+0x1ac8>
   1367c:	ldrb	r2, [r6, r5]
   13680:	sub	r1, r5, #1
   13684:	cmp	r2, #47	; 0x2f
   13688:	beq	13670 <__assert_fail@plt+0x1aac>
   1368c:	cmp	r5, #0
   13690:	mov	r0, r5
   13694:	addeq	r0, r0, #1
   13698:	add	r0, r0, #1
   1369c:	bl	1b934 <lchmod@@Base+0x4470>
   136a0:	mov	r6, r0
   136a4:	cmp	r0, #0
   136a8:	beq	136d4 <__assert_fail@plt+0x1b10>
   136ac:	mov	r0, r6
   136b0:	mov	r1, r4
   136b4:	mov	r2, r5
   136b8:	bl	11834 <memcpy@plt>
   136bc:	cmp	r5, #0
   136c0:	moveq	r0, #46	; 0x2e
   136c4:	moveq	r5, #1
   136c8:	strbeq	r0, [r6]
   136cc:	mov	r0, #0
   136d0:	strb	r0, [r6, r5]
   136d4:	mov	r0, r6
   136d8:	pop	{r4, r5, r6, sl, fp, pc}
   136dc:	push	{r4, r5, r6, r7, fp, lr}
   136e0:	add	fp, sp, #16
   136e4:	cmp	r0, #0
   136e8:	popeq	{r4, r5, r6, r7, fp, pc}
   136ec:	mov	r5, r0
   136f0:	mov	r0, #24
   136f4:	mov	r6, r2
   136f8:	mov	r7, r1
   136fc:	bl	1a60c <lchmod@@Base+0x3148>
   13700:	mov	r4, r0
   13704:	mov	r0, r7
   13708:	bl	1ab2c <lchmod@@Base+0x3668>
   1370c:	str	r0, [r4]
   13710:	ldrd	r0, [r6, #96]	; 0x60
   13714:	str	r1, [r4, #12]
   13718:	str	r0, [r4, #8]
   1371c:	ldrd	r0, [r6]
   13720:	str	r1, [r4, #20]
   13724:	str	r0, [r4, #16]
   13728:	mov	r0, r5
   1372c:	mov	r1, r4
   13730:	bl	17048 <__assert_fail@plt+0x5484>
   13734:	cmp	r0, #0
   13738:	beq	13754 <__assert_fail@plt+0x1b90>
   1373c:	cmp	r0, r4
   13740:	beq	13750 <__assert_fail@plt+0x1b8c>
   13744:	mov	r0, r4
   13748:	pop	{r4, r5, r6, r7, fp, lr}
   1374c:	b	173d4 <__assert_fail@plt+0x5810>
   13750:	pop	{r4, r5, r6, r7, fp, pc}
   13754:	bl	1ab6c <lchmod@@Base+0x36a8>
   13758:	cmp	r0, #0
   1375c:	moveq	r0, #0
   13760:	bxeq	lr
   13764:	push	{r4, r5, fp, lr}
   13768:	add	fp, sp, #8
   1376c:	sub	sp, sp, #24
   13770:	str	r1, [sp]
   13774:	mov	r1, sp
   13778:	ldrd	r4, [r2, #96]	; 0x60
   1377c:	str	r5, [sp, #12]
   13780:	str	r4, [sp, #8]
   13784:	ldrd	r2, [r2]
   13788:	str	r3, [sp, #20]
   1378c:	str	r2, [sp, #16]
   13790:	bl	16148 <__assert_fail@plt+0x4584>
   13794:	cmp	r0, #0
   13798:	movwne	r0, #1
   1379c:	sub	sp, fp, #8
   137a0:	pop	{r4, r5, fp, pc}
   137a4:	push	{r4, r5, r6, sl, fp, lr}
   137a8:	add	fp, sp, #16
   137ac:	mov	r4, r0
   137b0:	bl	11a08 <__errno_location@plt>
   137b4:	ldr	r6, [r0]
   137b8:	mov	r5, r0
   137bc:	mov	r0, r4
   137c0:	bl	11810 <free@plt>
   137c4:	str	r6, [r5]
   137c8:	pop	{r4, r5, r6, sl, fp, pc}
   137cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137d0:	add	fp, sp, #28
   137d4:	sub	sp, sp, #28
   137d8:	cmp	r1, #4096	; 0x1000
   137dc:	bcs	137f8 <__assert_fail@plt+0x1c34>
   137e0:	mov	sl, r0
   137e4:	and	r0, r1, #516	; 0x204
   137e8:	mov	r6, r1
   137ec:	cmp	r0, #516	; 0x204
   137f0:	tstne	r6, #18
   137f4:	bne	13814 <__assert_fail@plt+0x1c50>
   137f8:	bl	11a08 <__errno_location@plt>
   137fc:	mov	r1, #22
   13800:	mov	r4, #0
   13804:	str	r1, [r0]
   13808:	mov	r0, r4
   1380c:	sub	sp, fp, #28
   13810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13814:	mov	r0, #1
   13818:	mov	r1, #96	; 0x60
   1381c:	mov	r5, r2
   13820:	bl	1b8e0 <lchmod@@Base+0x441c>
   13824:	cmp	r0, #0
   13828:	beq	13de4 <__assert_fail@plt+0x2220>
   1382c:	mov	r4, r0
   13830:	mvn	r0, #99	; 0x63
   13834:	tst	r6, #2
   13838:	mov	r1, r6
   1383c:	str	r0, [r4, #32]
   13840:	bic	r0, r6, #516	; 0x204
   13844:	str	r5, [r4, #44]	; 0x2c
   13848:	str	r4, [sp, #24]
   1384c:	orrne	r1, r0, #4
   13850:	str	r1, [r4, #48]	; 0x30
   13854:	ldr	r0, [sl]
   13858:	cmp	r0, #0
   1385c:	beq	138c0 <__assert_fail@plt+0x1cfc>
   13860:	add	r7, sl, #4
   13864:	mov	r4, #0
   13868:	bl	119cc <strlen@plt>
   1386c:	cmp	r0, r4
   13870:	movhi	r4, r0
   13874:	ldr	r0, [r7], #4
   13878:	cmp	r0, #0
   1387c:	bne	13868 <__assert_fail@plt+0x1ca4>
   13880:	add	r0, r4, #1
   13884:	ldr	r4, [sp, #24]
   13888:	cmp	r0, #4096	; 0x1000
   1388c:	movls	r0, #4096	; 0x1000
   13890:	ldr	r1, [r4, #36]	; 0x24
   13894:	add	r0, r0, #256	; 0x100
   13898:	adds	r1, r0, r1
   1389c:	bcc	138d4 <__assert_fail@plt+0x1d10>
   138a0:	ldr	r0, [r4, #24]
   138a4:	bl	137a4 <__assert_fail@plt+0x1be0>
   138a8:	mov	r0, #0
   138ac:	str	r0, [r4, #24]
   138b0:	bl	11a08 <__errno_location@plt>
   138b4:	mov	r1, #36	; 0x24
   138b8:	str	r1, [r0]
   138bc:	b	13ddc <__assert_fail@plt+0x2218>
   138c0:	mov	r0, #4096	; 0x1000
   138c4:	ldr	r1, [r4, #36]	; 0x24
   138c8:	add	r0, r0, #256	; 0x100
   138cc:	adds	r1, r0, r1
   138d0:	bcs	138a0 <__assert_fail@plt+0x1cdc>
   138d4:	str	r1, [r4, #36]	; 0x24
   138d8:	ldr	r0, [r4, #24]
   138dc:	bl	1b964 <lchmod@@Base+0x44a0>
   138e0:	cmp	r0, #0
   138e4:	beq	13948 <__assert_fail@plt+0x1d84>
   138e8:	str	r0, [r4, #24]
   138ec:	ldr	r0, [sl]
   138f0:	cmp	r0, #0
   138f4:	beq	1395c <__assert_fail@plt+0x1d98>
   138f8:	mov	r0, #176	; 0xb0
   138fc:	bl	1b934 <lchmod@@Base+0x4470>
   13900:	cmp	r0, #0
   13904:	beq	13dd4 <__assert_fail@plt+0x2210>
   13908:	ldr	r1, [r4, #24]
   1390c:	mov	r7, r0
   13910:	mov	r0, #0
   13914:	mov	r2, #196608	; 0x30000
   13918:	strb	r0, [r7, #168]	; 0xa8
   1391c:	str	r2, [r7, #58]	; 0x3a
   13920:	mvn	r2, #0
   13924:	str	r0, [r7, #12]
   13928:	str	r0, [r7, #16]
   1392c:	str	r0, [r7, #20]
   13930:	str	r4, [r7, #44]	; 0x2c
   13934:	str	r2, [r7, #48]	; 0x30
   13938:	str	r0, [r7, #52]	; 0x34
   1393c:	str	r1, [r7, #28]
   13940:	str	r0, [r7, #32]
   13944:	b	13960 <__assert_fail@plt+0x1d9c>
   13948:	ldr	r0, [r4, #24]
   1394c:	bl	137a4 <__assert_fail@plt+0x1be0>
   13950:	mov	r0, #0
   13954:	str	r0, [r4, #24]
   13958:	b	13ddc <__assert_fail@plt+0x2218>
   1395c:	mov	r7, #0
   13960:	cmp	r5, #0
   13964:	ldrbne	r0, [r4, #49]	; 0x31
   13968:	ubfxne	r0, r0, #2, #1
   1396c:	ldr	r4, [sl]
   13970:	moveq	r0, #1
   13974:	str	r0, [sp, #12]
   13978:	cmp	r4, #0
   1397c:	beq	13ae4 <__assert_fail@plt+0x1f20>
   13980:	tst	r6, #2048	; 0x800
   13984:	str	r7, [sp, #20]
   13988:	str	r5, [sp, #16]
   1398c:	bne	13b08 <__assert_fail@plt+0x1f44>
   13990:	mov	r0, #0
   13994:	mov	r8, #0
   13998:	mov	r5, #0
   1399c:	str	r0, [sp, #8]
   139a0:	mov	r0, r4
   139a4:	bl	119cc <strlen@plt>
   139a8:	mov	r9, r0
   139ac:	cmp	r0, #3
   139b0:	bcc	139e0 <__assert_fail@plt+0x1e1c>
   139b4:	add	r0, r4, r9
   139b8:	ldrb	r0, [r0, #-1]
   139bc:	cmp	r0, #47	; 0x2f
   139c0:	bne	139e0 <__assert_fail@plt+0x1e1c>
   139c4:	sub	r0, r4, #2
   139c8:	ldrb	r1, [r0, r9]
   139cc:	cmp	r1, #47	; 0x2f
   139d0:	bne	139e0 <__assert_fail@plt+0x1e1c>
   139d4:	sub	r9, r9, #1
   139d8:	cmp	r9, #1
   139dc:	bhi	139c8 <__assert_fail@plt+0x1e04>
   139e0:	add	r0, r9, #176	; 0xb0
   139e4:	bic	r0, r0, #7
   139e8:	bl	1b934 <lchmod@@Base+0x4470>
   139ec:	cmp	r0, #0
   139f0:	beq	13c48 <__assert_fail@plt+0x2084>
   139f4:	add	r6, r0, #168	; 0xa8
   139f8:	mov	r7, r0
   139fc:	mov	r1, r4
   13a00:	mov	r2, r9
   13a04:	mov	r0, r6
   13a08:	bl	11834 <memcpy@plt>
   13a0c:	ldr	r0, [sp, #24]
   13a10:	mov	r4, #0
   13a14:	mov	r1, #196608	; 0x30000
   13a18:	cmp	r8, #0
   13a1c:	strb	r4, [r6, r9]
   13a20:	str	r1, [r7, #58]	; 0x3a
   13a24:	add	r1, r7, #44	; 0x2c
   13a28:	ldr	r2, [r0, #24]
   13a2c:	stm	r1, {r0, r4, r9}
   13a30:	ldr	r1, [sp, #20]
   13a34:	str	r1, [r7, #4]
   13a38:	str	r4, [r7, #12]
   13a3c:	str	r4, [r7, #16]
   13a40:	str	r4, [r7, #20]
   13a44:	str	r6, [r7, #24]
   13a48:	str	r2, [r7, #28]
   13a4c:	ldr	r2, [sp, #12]
   13a50:	mov	r1, r8
   13a54:	str	r4, [r7, #32]
   13a58:	movwne	r1, #1
   13a5c:	tst	r2, r1
   13a60:	beq	13a90 <__assert_fail@plt+0x1ecc>
   13a64:	mov	r0, #2
   13a68:	str	r0, [r7, #112]	; 0x70
   13a6c:	mov	r0, #11
   13a70:	str	r4, [r7, #116]	; 0x74
   13a74:	strh	r0, [r7, #56]	; 0x38
   13a78:	ldr	r0, [sp, #16]
   13a7c:	cmp	r0, #0
   13a80:	beq	13aac <__assert_fail@plt+0x1ee8>
   13a84:	str	r8, [r7, #8]
   13a88:	mov	r8, r7
   13a8c:	b	13ac4 <__assert_fail@plt+0x1f00>
   13a90:	mov	r1, r7
   13a94:	mov	r2, #0
   13a98:	bl	13e30 <__assert_fail@plt+0x226c>
   13a9c:	strh	r0, [r7, #56]	; 0x38
   13aa0:	ldr	r0, [sp, #16]
   13aa4:	cmp	r0, #0
   13aa8:	bne	13a84 <__assert_fail@plt+0x1ec0>
   13aac:	cmp	r8, #0
   13ab0:	str	r4, [r7, #8]
   13ab4:	beq	13ad8 <__assert_fail@plt+0x1f14>
   13ab8:	ldr	r0, [sp, #8]
   13abc:	str	r7, [sp, #8]
   13ac0:	str	r7, [r0, #8]
   13ac4:	ldr	r4, [sl, #4]!
   13ac8:	add	r5, r5, #1
   13acc:	cmp	r4, #0
   13ad0:	bne	139a0 <__assert_fail@plt+0x1ddc>
   13ad4:	b	13c58 <__assert_fail@plt+0x2094>
   13ad8:	mov	r0, r7
   13adc:	str	r7, [sp, #8]
   13ae0:	b	13a88 <__assert_fail@plt+0x1ec4>
   13ae4:	ldr	r4, [sp, #24]
   13ae8:	mov	r8, #0
   13aec:	mov	r0, #176	; 0xb0
   13af0:	bl	1b934 <lchmod@@Base+0x4470>
   13af4:	cmp	r0, #0
   13af8:	bne	13cb4 <__assert_fail@plt+0x20f0>
   13afc:	mov	r0, #0
   13b00:	str	r0, [r4]
   13b04:	b	13d98 <__assert_fail@plt+0x21d4>
   13b08:	add	r0, sl, #4
   13b0c:	mov	r9, #0
   13b10:	mov	r8, #0
   13b14:	mov	r5, #0
   13b18:	str	r0, [sp, #8]
   13b1c:	ldr	r0, [sp, #12]
   13b20:	eor	r0, r0, #1
   13b24:	str	r0, [sp, #12]
   13b28:	mov	r0, #0
   13b2c:	str	r0, [sp, #4]
   13b30:	mov	r0, r4
   13b34:	mov	sl, r5
   13b38:	bl	119cc <strlen@plt>
   13b3c:	mov	r7, r0
   13b40:	add	r0, r0, #176	; 0xb0
   13b44:	bic	r0, r0, #7
   13b48:	bl	1b934 <lchmod@@Base+0x4470>
   13b4c:	cmp	r0, #0
   13b50:	beq	13c48 <__assert_fail@plt+0x2084>
   13b54:	add	r6, r0, #168	; 0xa8
   13b58:	mov	r5, r0
   13b5c:	mov	r1, r4
   13b60:	mov	r2, r7
   13b64:	mov	r0, r6
   13b68:	bl	11834 <memcpy@plt>
   13b6c:	ldr	r0, [sp, #24]
   13b70:	mov	r1, #196608	; 0x30000
   13b74:	strb	r9, [r6, r7]
   13b78:	str	r1, [r5, #58]	; 0x3a
   13b7c:	ldr	r1, [sp, #20]
   13b80:	ldr	r2, [r0, #24]
   13b84:	str	r0, [r5, #44]	; 0x2c
   13b88:	str	r9, [r5, #48]	; 0x30
   13b8c:	str	r7, [r5, #52]	; 0x34
   13b90:	str	r1, [r5, #4]
   13b94:	str	r9, [r5, #12]
   13b98:	str	r9, [r5, #16]
   13b9c:	str	r9, [r5, #20]
   13ba0:	str	r6, [r5, #24]
   13ba4:	clz	r1, r8
   13ba8:	lsr	r1, r1, #5
   13bac:	str	r2, [r5, #28]
   13bb0:	ldr	r2, [sp, #12]
   13bb4:	str	r9, [r5, #32]
   13bb8:	orrs	r1, r2, r1
   13bbc:	bne	13bec <__assert_fail@plt+0x2028>
   13bc0:	mov	r0, #2
   13bc4:	str	r0, [r5, #112]	; 0x70
   13bc8:	str	r9, [r5, #116]	; 0x74
   13bcc:	mov	r0, #11
   13bd0:	strh	r0, [r5, #56]	; 0x38
   13bd4:	ldr	r0, [sp, #16]
   13bd8:	cmp	r0, #0
   13bdc:	beq	13c08 <__assert_fail@plt+0x2044>
   13be0:	str	r8, [r5, #8]
   13be4:	mov	r8, r5
   13be8:	b	13c20 <__assert_fail@plt+0x205c>
   13bec:	mov	r1, r5
   13bf0:	mov	r2, #0
   13bf4:	bl	13e30 <__assert_fail@plt+0x226c>
   13bf8:	strh	r0, [r5, #56]	; 0x38
   13bfc:	ldr	r0, [sp, #16]
   13c00:	cmp	r0, #0
   13c04:	bne	13be0 <__assert_fail@plt+0x201c>
   13c08:	cmp	r8, #0
   13c0c:	str	r9, [r5, #8]
   13c10:	beq	13c3c <__assert_fail@plt+0x2078>
   13c14:	ldr	r0, [sp, #4]
   13c18:	str	r5, [sp, #4]
   13c1c:	str	r5, [r0, #8]
   13c20:	ldr	r0, [sp, #8]
   13c24:	mov	r5, sl
   13c28:	add	r5, sl, #1
   13c2c:	ldr	r4, [r0, sl, lsl #2]
   13c30:	cmp	r4, #0
   13c34:	bne	13b30 <__assert_fail@plt+0x1f6c>
   13c38:	b	13c58 <__assert_fail@plt+0x2094>
   13c3c:	mov	r0, r5
   13c40:	str	r5, [sp, #4]
   13c44:	b	13be4 <__assert_fail@plt+0x2020>
   13c48:	ldr	r7, [sp, #20]
   13c4c:	cmp	r8, #0
   13c50:	bne	13da0 <__assert_fail@plt+0x21dc>
   13c54:	b	13dc8 <__assert_fail@plt+0x2204>
   13c58:	ldr	r0, [sp, #16]
   13c5c:	cmp	r0, #0
   13c60:	beq	13c9c <__assert_fail@plt+0x20d8>
   13c64:	ldr	r7, [sp, #20]
   13c68:	ldr	r4, [sp, #24]
   13c6c:	cmp	r5, #2
   13c70:	bcc	13ca4 <__assert_fail@plt+0x20e0>
   13c74:	mov	r0, r4
   13c78:	mov	r1, r8
   13c7c:	mov	r2, r5
   13c80:	bl	13fc8 <__assert_fail@plt+0x2404>
   13c84:	mov	r8, r0
   13c88:	mov	r0, #176	; 0xb0
   13c8c:	bl	1b934 <lchmod@@Base+0x4470>
   13c90:	cmp	r0, #0
   13c94:	bne	13cb4 <__assert_fail@plt+0x20f0>
   13c98:	b	13afc <__assert_fail@plt+0x1f38>
   13c9c:	ldr	r7, [sp, #20]
   13ca0:	ldr	r4, [sp, #24]
   13ca4:	mov	r0, #176	; 0xb0
   13ca8:	bl	1b934 <lchmod@@Base+0x4470>
   13cac:	cmp	r0, #0
   13cb0:	beq	13afc <__assert_fail@plt+0x1f38>
   13cb4:	ldr	r2, [r4, #24]
   13cb8:	mov	r1, #0
   13cbc:	mov	r3, #196608	; 0x30000
   13cc0:	str	r0, [r4]
   13cc4:	str	r1, [r0, #52]	; 0x34
   13cc8:	strb	r1, [r0, #168]	; 0xa8
   13ccc:	str	r4, [r0, #44]	; 0x2c
   13cd0:	str	r3, [r0, #58]	; 0x3a
   13cd4:	str	r2, [r0, #28]
   13cd8:	mov	r2, #9
   13cdc:	str	r1, [r0, #32]
   13ce0:	strh	r2, [r0, #56]	; 0x38
   13ce4:	str	r8, [r0, #8]
   13ce8:	str	r1, [r0, #12]
   13cec:	str	r1, [r0, #16]
   13cf0:	str	r1, [r0, #20]
   13cf4:	mov	r1, #1
   13cf8:	str	r1, [r0, #48]	; 0x30
   13cfc:	ldrh	r0, [r4, #48]	; 0x30
   13d00:	movw	r1, #258	; 0x102
   13d04:	tst	r0, r1
   13d08:	beq	13d44 <__assert_fail@plt+0x2180>
   13d0c:	movw	r0, #14244	; 0x37a4
   13d10:	movw	r2, #23888	; 0x5d50
   13d14:	movw	r3, #23920	; 0x5d70
   13d18:	mov	r1, #0
   13d1c:	movt	r0, #1
   13d20:	movt	r2, #1
   13d24:	movt	r3, #1
   13d28:	str	r0, [sp]
   13d2c:	mov	r0, #31
   13d30:	bl	16410 <__assert_fail@plt+0x484c>
   13d34:	cmp	r0, #0
   13d38:	str	r0, [r4, #56]	; 0x38
   13d3c:	bne	13d5c <__assert_fail@plt+0x2198>
   13d40:	b	13d98 <__assert_fail@plt+0x21d4>
   13d44:	mov	r0, #32
   13d48:	bl	1b934 <lchmod@@Base+0x4470>
   13d4c:	cmp	r0, #0
   13d50:	str	r0, [r4, #56]	; 0x38
   13d54:	beq	13d98 <__assert_fail@plt+0x21d4>
   13d58:	bl	1bad4 <lchmod@@Base+0x4610>
   13d5c:	ldr	r4, [sp, #24]
   13d60:	ldr	r0, [r4, #48]	; 0x30
   13d64:	tst	r0, #516	; 0x204
   13d68:	bne	13e18 <__assert_fail@plt+0x2254>
   13d6c:	mov	r1, #32768	; 0x8000
   13d70:	tst	r0, #512	; 0x200
   13d74:	and	r1, r1, r0, lsl #11
   13d78:	orr	r1, r1, #18688	; 0x4900
   13d7c:	orr	r2, r1, #524288	; 0x80000
   13d80:	bne	13df4 <__assert_fail@plt+0x2230>
   13d84:	movw	r0, #52355	; 0xcc83
   13d88:	mov	r1, r2
   13d8c:	movt	r0, #1
   13d90:	bl	1be44 <lchmod@@Base+0x4980>
   13d94:	b	13e04 <__assert_fail@plt+0x2240>
   13d98:	cmp	r8, #0
   13d9c:	beq	13dc8 <__assert_fail@plt+0x2204>
   13da0:	ldrd	r4, [r8, #8]
   13da4:	cmp	r5, #0
   13da8:	beq	13db4 <__assert_fail@plt+0x21f0>
   13dac:	mov	r0, r5
   13db0:	bl	11ba0 <closedir@plt>
   13db4:	mov	r0, r8
   13db8:	bl	137a4 <__assert_fail@plt+0x1be0>
   13dbc:	cmp	r4, #0
   13dc0:	mov	r8, r4
   13dc4:	bne	13da0 <__assert_fail@plt+0x21dc>
   13dc8:	mov	r0, r7
   13dcc:	bl	137a4 <__assert_fail@plt+0x1be0>
   13dd0:	ldr	r4, [sp, #24]
   13dd4:	ldr	r0, [r4, #24]
   13dd8:	bl	137a4 <__assert_fail@plt+0x1be0>
   13ddc:	mov	r0, r4
   13de0:	bl	137a4 <__assert_fail@plt+0x1be0>
   13de4:	mov	r4, #0
   13de8:	mov	r0, r4
   13dec:	sub	sp, fp, #28
   13df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13df4:	ldr	r0, [r4, #32]
   13df8:	movw	r1, #52355	; 0xcc83
   13dfc:	movt	r1, #1
   13e00:	bl	17bec <lchmod@@Base+0x728>
   13e04:	str	r0, [r4, #28]
   13e08:	cmn	r0, #1
   13e0c:	ldrle	r0, [r4, #48]	; 0x30
   13e10:	orrle	r0, r0, #4
   13e14:	strle	r0, [r4, #48]	; 0x30
   13e18:	add	r0, r4, #60	; 0x3c
   13e1c:	mvn	r1, #0
   13e20:	bl	173f4 <__assert_fail@plt+0x5830>
   13e24:	mov	r0, r4
   13e28:	sub	sp, fp, #28
   13e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e30:	push	{r4, r5, r6, sl, fp, lr}
   13e34:	add	fp, sp, #16
   13e38:	sub	sp, sp, #8
   13e3c:	mov	r4, r1
   13e40:	ldr	r1, [r0, #48]	; 0x30
   13e44:	ldr	r3, [r4, #48]	; 0x30
   13e48:	add	r5, r4, #64	; 0x40
   13e4c:	cmp	r3, #0
   13e50:	andeq	r3, r1, #1
   13e54:	orreq	r2, r3, r2
   13e58:	cmp	r2, #0
   13e5c:	andseq	r1, r1, #2
   13e60:	beq	13ebc <__assert_fail@plt+0x22f8>
   13e64:	ldr	r1, [r4, #24]
   13e68:	mov	r0, #3
   13e6c:	mov	r2, r5
   13e70:	bl	11b40 <__xstat64@plt>
   13e74:	cmp	r0, #0
   13e78:	beq	13f3c <__assert_fail@plt+0x2378>
   13e7c:	bl	11a08 <__errno_location@plt>
   13e80:	mov	r6, r0
   13e84:	ldr	r0, [r0]
   13e88:	cmp	r0, #2
   13e8c:	bne	13eec <__assert_fail@plt+0x2328>
   13e90:	ldr	r1, [r4, #24]
   13e94:	mov	r0, #3
   13e98:	mov	r2, r5
   13e9c:	bl	11b7c <__lxstat64@plt>
   13ea0:	cmp	r0, #0
   13ea4:	bne	13ee8 <__assert_fail@plt+0x2324>
   13ea8:	mov	r0, #0
   13eac:	str	r0, [r6]
   13eb0:	mov	r0, #13
   13eb4:	sub	sp, fp, #16
   13eb8:	pop	{r4, r5, r6, sl, fp, pc}
   13ebc:	ldr	r1, [r0, #32]
   13ec0:	ldr	r2, [r4, #24]
   13ec4:	mov	r0, #256	; 0x100
   13ec8:	mov	r3, r5
   13ecc:	str	r0, [sp]
   13ed0:	mov	r0, #3
   13ed4:	bl	118b8 <__fxstatat64@plt>
   13ed8:	cmp	r0, #0
   13edc:	beq	13f3c <__assert_fail@plt+0x2378>
   13ee0:	bl	11a08 <__errno_location@plt>
   13ee4:	mov	r6, r0
   13ee8:	ldr	r0, [r6]
   13eec:	vmov.i32	q8, #0	; 0x00000000
   13ef0:	add	r1, r5, #80	; 0x50
   13ef4:	str	r0, [r4, #32]
   13ef8:	mov	r0, #0
   13efc:	vst1.64	{d16-d17}, [r1]
   13f00:	add	r1, r5, #64	; 0x40
   13f04:	str	r0, [r5, #96]	; 0x60
   13f08:	vst1.64	{d16-d17}, [r1]
   13f0c:	add	r1, r5, #48	; 0x30
   13f10:	vst1.64	{d16-d17}, [r1]
   13f14:	add	r1, r5, #32
   13f18:	vst1.64	{d16-d17}, [r1]
   13f1c:	add	r1, r5, #16
   13f20:	vst1.64	{d16-d17}, [r1]
   13f24:	mov	r1, #100	; 0x64
   13f28:	vst1.64	{d16-d17}, [r5], r1
   13f2c:	str	r0, [r5]
   13f30:	mov	r0, #10
   13f34:	sub	sp, fp, #16
   13f38:	pop	{r4, r5, r6, sl, fp, pc}
   13f3c:	ldr	r0, [r4, #80]	; 0x50
   13f40:	and	r0, r0, #61440	; 0xf000
   13f44:	cmp	r0, #40960	; 0xa000
   13f48:	beq	13fa4 <__assert_fail@plt+0x23e0>
   13f4c:	cmp	r0, #32768	; 0x8000
   13f50:	moveq	r0, #8
   13f54:	subeq	sp, fp, #16
   13f58:	popeq	{r4, r5, r6, sl, fp, pc}
   13f5c:	cmp	r0, #16384	; 0x4000
   13f60:	bne	13f98 <__assert_fail@plt+0x23d4>
   13f64:	ldrb	r1, [r4, #168]	; 0xa8
   13f68:	mov	r0, #1
   13f6c:	cmp	r1, #46	; 0x2e
   13f70:	bne	13f90 <__assert_fail@plt+0x23cc>
   13f74:	ldrb	r1, [r4, #169]	; 0xa9
   13f78:	cmp	r1, #0
   13f7c:	beq	13fb0 <__assert_fail@plt+0x23ec>
   13f80:	cmp	r1, #46	; 0x2e
   13f84:	ldrbeq	r1, [r4, #170]	; 0xaa
   13f88:	cmpeq	r1, #0
   13f8c:	beq	13fb0 <__assert_fail@plt+0x23ec>
   13f90:	sub	sp, fp, #16
   13f94:	pop	{r4, r5, r6, sl, fp, pc}
   13f98:	mov	r0, #3
   13f9c:	sub	sp, fp, #16
   13fa0:	pop	{r4, r5, r6, sl, fp, pc}
   13fa4:	mov	r0, #12
   13fa8:	sub	sp, fp, #16
   13fac:	pop	{r4, r5, r6, sl, fp, pc}
   13fb0:	ldr	r1, [r4, #48]	; 0x30
   13fb4:	mov	r0, #5
   13fb8:	cmp	r1, #0
   13fbc:	movweq	r0, #1
   13fc0:	sub	sp, fp, #16
   13fc4:	pop	{r4, r5, r6, sl, fp, pc}
   13fc8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13fcc:	add	fp, sp, #24
   13fd0:	ldrd	r8, [r0, #40]	; 0x28
   13fd4:	mov	r5, r2
   13fd8:	mov	r4, r1
   13fdc:	mov	r6, r0
   13fe0:	cmp	r8, r2
   13fe4:	bcs	14024 <__assert_fail@plt+0x2460>
   13fe8:	add	r1, r5, #40	; 0x28
   13fec:	cmn	r1, #-1073741823	; 0xc0000001
   13ff0:	str	r1, [r6, #40]	; 0x28
   13ff4:	bhi	140b0 <__assert_fail@plt+0x24ec>
   13ff8:	add	r7, r6, #8
   13ffc:	lsl	r1, r1, #2
   14000:	ldr	r0, [r7]
   14004:	bl	1b964 <lchmod@@Base+0x44a0>
   14008:	cmp	r0, #0
   1400c:	beq	140b0 <__assert_fail@plt+0x24ec>
   14010:	mov	r6, r7
   14014:	str	r0, [r7]
   14018:	cmp	r4, #0
   1401c:	bne	14030 <__assert_fail@plt+0x246c>
   14020:	b	14044 <__assert_fail@plt+0x2480>
   14024:	ldr	r0, [r6, #8]!
   14028:	cmp	r4, #0
   1402c:	beq	14044 <__assert_fail@plt+0x2480>
   14030:	str	r4, [r0], #4
   14034:	ldr	r4, [r4, #8]
   14038:	cmp	r4, #0
   1403c:	bne	14030 <__assert_fail@plt+0x246c>
   14040:	ldr	r0, [r6]
   14044:	mov	r1, r5
   14048:	mov	r2, #4
   1404c:	mov	r3, r9
   14050:	bl	11aec <qsort@plt>
   14054:	ldr	r7, [r6]
   14058:	subs	r0, r5, #1
   1405c:	ldr	r4, [r7]
   14060:	mov	r1, r4
   14064:	beq	140a0 <__assert_fail@plt+0x24dc>
   14068:	mov	r1, r7
   1406c:	cmp	r5, #2
   14070:	ldr	r2, [r1, #4]!
   14074:	str	r2, [r4, #8]
   14078:	beq	1409c <__assert_fail@plt+0x24d8>
   1407c:	rsb	r3, r5, #2
   14080:	mov	r2, r1
   14084:	ldr	r6, [r2, #4]!
   14088:	ldr	r1, [r1]
   1408c:	adds	r3, r3, #1
   14090:	str	r6, [r1, #8]
   14094:	mov	r1, r2
   14098:	bne	14084 <__assert_fail@plt+0x24c0>
   1409c:	ldr	r1, [r7, r0, lsl #2]
   140a0:	mov	r0, #0
   140a4:	str	r0, [r1, #8]
   140a8:	mov	r0, r4
   140ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   140b0:	ldr	r0, [r6, #8]
   140b4:	bl	137a4 <__assert_fail@plt+0x1be0>
   140b8:	mov	r0, #0
   140bc:	str	r0, [r6, #40]	; 0x28
   140c0:	str	r0, [r6, #8]
   140c4:	mov	r0, r4
   140c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   140cc:	push	{r4, r5, r6, r7, fp, lr}
   140d0:	add	fp, sp, #16
   140d4:	mov	r4, r0
   140d8:	ldr	r0, [r0]
   140dc:	cmp	r0, #0
   140e0:	beq	14120 <__assert_fail@plt+0x255c>
   140e4:	ldr	r1, [r0, #48]	; 0x30
   140e8:	cmp	r1, #0
   140ec:	blt	14114 <__assert_fail@plt+0x2550>
   140f0:	ldr	r5, [r0, #8]
   140f4:	cmp	r5, #0
   140f8:	ldreq	r5, [r0, #4]
   140fc:	bl	137a4 <__assert_fail@plt+0x1be0>
   14100:	ldr	r0, [r5, #48]	; 0x30
   14104:	cmn	r0, #1
   14108:	mov	r0, r5
   1410c:	bgt	140f0 <__assert_fail@plt+0x252c>
   14110:	b	14118 <__assert_fail@plt+0x2554>
   14114:	mov	r5, r0
   14118:	mov	r0, r5
   1411c:	bl	137a4 <__assert_fail@plt+0x1be0>
   14120:	ldr	r5, [r4, #4]
   14124:	cmp	r5, #0
   14128:	beq	14154 <__assert_fail@plt+0x2590>
   1412c:	ldrd	r6, [r5, #8]
   14130:	cmp	r7, #0
   14134:	beq	14140 <__assert_fail@plt+0x257c>
   14138:	mov	r0, r7
   1413c:	bl	11ba0 <closedir@plt>
   14140:	mov	r0, r5
   14144:	bl	137a4 <__assert_fail@plt+0x1be0>
   14148:	cmp	r6, #0
   1414c:	mov	r5, r6
   14150:	bne	1412c <__assert_fail@plt+0x2568>
   14154:	ldr	r0, [r4, #8]
   14158:	bl	137a4 <__assert_fail@plt+0x1be0>
   1415c:	ldr	r0, [r4, #24]
   14160:	bl	137a4 <__assert_fail@plt+0x1be0>
   14164:	ldr	r0, [r4, #48]	; 0x30
   14168:	tst	r0, #512	; 0x200
   1416c:	bne	141a8 <__assert_fail@plt+0x25e4>
   14170:	mov	r6, #0
   14174:	tst	r0, #4
   14178:	bne	141cc <__assert_fail@plt+0x2608>
   1417c:	ldr	r0, [r4, #28]
   14180:	bl	11ae0 <fchdir@plt>
   14184:	cmp	r0, #0
   14188:	beq	1425c <__assert_fail@plt+0x2698>
   1418c:	bl	11a08 <__errno_location@plt>
   14190:	ldr	r6, [r0]
   14194:	ldr	r0, [r4, #28]
   14198:	bl	11b70 <close@plt>
   1419c:	cmp	r6, #0
   141a0:	beq	141bc <__assert_fail@plt+0x25f8>
   141a4:	b	141cc <__assert_fail@plt+0x2608>
   141a8:	ldr	r0, [r4, #32]
   141ac:	mov	r6, #0
   141b0:	cmp	r0, #0
   141b4:	blt	141cc <__assert_fail@plt+0x2608>
   141b8:	bl	11b70 <close@plt>
   141bc:	cmp	r0, #0
   141c0:	beq	141cc <__assert_fail@plt+0x2608>
   141c4:	bl	11a08 <__errno_location@plt>
   141c8:	ldr	r6, [r0]
   141cc:	add	r5, r4, #60	; 0x3c
   141d0:	b	141d8 <__assert_fail@plt+0x2614>
   141d4:	bl	11b70 <close@plt>
   141d8:	mov	r0, r5
   141dc:	bl	17418 <__assert_fail@plt+0x5854>
   141e0:	cmp	r0, #0
   141e4:	bne	141fc <__assert_fail@plt+0x2638>
   141e8:	mov	r0, r5
   141ec:	bl	1746c <__assert_fail@plt+0x58a8>
   141f0:	cmp	r0, #0
   141f4:	bge	141d4 <__assert_fail@plt+0x2610>
   141f8:	b	141d8 <__assert_fail@plt+0x2614>
   141fc:	ldr	r0, [r4, #52]	; 0x34
   14200:	cmp	r0, #0
   14204:	beq	1420c <__assert_fail@plt+0x2648>
   14208:	bl	1672c <__assert_fail@plt+0x4b68>
   1420c:	ldrh	r0, [r4, #48]	; 0x30
   14210:	movw	r1, #258	; 0x102
   14214:	tst	r0, r1
   14218:	beq	14230 <__assert_fail@plt+0x266c>
   1421c:	ldr	r0, [r4, #56]	; 0x38
   14220:	cmp	r0, #0
   14224:	beq	14238 <__assert_fail@plt+0x2674>
   14228:	bl	1672c <__assert_fail@plt+0x4b68>
   1422c:	b	14238 <__assert_fail@plt+0x2674>
   14230:	ldr	r0, [r4, #56]	; 0x38
   14234:	bl	137a4 <__assert_fail@plt+0x1be0>
   14238:	mov	r0, r4
   1423c:	bl	137a4 <__assert_fail@plt+0x1be0>
   14240:	cmp	r6, #0
   14244:	moveq	r0, #0
   14248:	popeq	{r4, r5, r6, r7, fp, pc}
   1424c:	bl	11a08 <__errno_location@plt>
   14250:	str	r6, [r0]
   14254:	mvn	r0, #0
   14258:	pop	{r4, r5, r6, r7, fp, pc}
   1425c:	mov	r6, #0
   14260:	ldr	r0, [r4, #28]
   14264:	bl	11b70 <close@plt>
   14268:	cmp	r6, #0
   1426c:	beq	141bc <__assert_fail@plt+0x25f8>
   14270:	b	141cc <__assert_fail@plt+0x2608>
   14274:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14278:	add	fp, sp, #28
   1427c:	sub	sp, sp, #4
   14280:	ldr	r6, [r0]
   14284:	mov	sl, #0
   14288:	cmp	r6, #0
   1428c:	beq	14b14 <__assert_fail@plt+0x2f50>
   14290:	mov	r4, r0
   14294:	ldr	r0, [r0, #48]	; 0x30
   14298:	tst	r0, #8192	; 0x2000
   1429c:	bne	14b14 <__assert_fail@plt+0x2f50>
   142a0:	ldrh	r1, [r6, #60]	; 0x3c
   142a4:	mov	r2, #3
   142a8:	strh	r2, [r6, #60]	; 0x3c
   142ac:	cmp	r1, #1
   142b0:	beq	14330 <__assert_fail@plt+0x276c>
   142b4:	mov	r5, r6
   142b8:	cmp	r1, #2
   142bc:	bne	14354 <__assert_fail@plt+0x2790>
   142c0:	ldrh	r2, [r5, #56]!	; 0x38
   142c4:	movw	r3, #65534	; 0xfffe
   142c8:	and	r3, r2, r3
   142cc:	cmp	r3, #12
   142d0:	bne	14358 <__assert_fail@plt+0x2794>
   142d4:	mov	r0, r4
   142d8:	mov	r1, r6
   142dc:	mov	r2, #1
   142e0:	bl	13e30 <__assert_fail@plt+0x226c>
   142e4:	strh	r0, [r6, #56]	; 0x38
   142e8:	cmp	r0, #1
   142ec:	ldreq	r0, [r4, #48]	; 0x30
   142f0:	tsteq	r0, #4
   142f4:	bne	1460c <__assert_fail@plt+0x2a48>
   142f8:	mov	r1, #32768	; 0x8000
   142fc:	tst	r0, #512	; 0x200
   14300:	and	r1, r1, r0, lsl #11
   14304:	orr	r1, r1, #18688	; 0x4900
   14308:	orr	r2, r1, #524288	; 0x80000
   1430c:	bne	14820 <__assert_fail@plt+0x2c5c>
   14310:	movw	r0, #52355	; 0xcc83
   14314:	mov	r1, r2
   14318:	movt	r0, #1
   1431c:	bl	1be44 <lchmod@@Base+0x4980>
   14320:	cmn	r0, #1
   14324:	str	r0, [r6, #36]	; 0x24
   14328:	bgt	1483c <__assert_fail@plt+0x2c78>
   1432c:	b	14880 <__assert_fail@plt+0x2cbc>
   14330:	mov	r0, r4
   14334:	mov	r1, r6
   14338:	mov	r2, #0
   1433c:	bl	13e30 <__assert_fail@plt+0x226c>
   14340:	strh	r0, [r6, #56]	; 0x38
   14344:	mov	sl, r6
   14348:	mov	r0, sl
   1434c:	sub	sp, fp, #28
   14350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14354:	ldrh	r2, [r5, #56]!	; 0x38
   14358:	cmp	r2, #1
   1435c:	bne	143dc <__assert_fail@plt+0x2818>
   14360:	cmp	r1, #4
   14364:	bne	1444c <__assert_fail@plt+0x2888>
   14368:	ldrb	r0, [r6, #58]	; 0x3a
   1436c:	tst	r0, #2
   14370:	beq	1437c <__assert_fail@plt+0x27b8>
   14374:	ldr	r0, [r6, #36]	; 0x24
   14378:	bl	11b70 <close@plt>
   1437c:	ldr	r5, [r4, #4]
   14380:	cmp	r5, #0
   14384:	beq	143b8 <__assert_fail@plt+0x27f4>
   14388:	ldrd	r8, [r5, #8]
   1438c:	cmp	r9, #0
   14390:	beq	1439c <__assert_fail@plt+0x27d8>
   14394:	mov	r0, r9
   14398:	bl	11ba0 <closedir@plt>
   1439c:	mov	r0, r5
   143a0:	bl	137a4 <__assert_fail@plt+0x1be0>
   143a4:	cmp	r8, #0
   143a8:	mov	r5, r8
   143ac:	bne	14388 <__assert_fail@plt+0x27c4>
   143b0:	mov	r0, #0
   143b4:	str	r0, [r4, #4]
   143b8:	mov	r0, #6
   143bc:	strh	r0, [r6, #56]	; 0x38
   143c0:	mov	r0, r4
   143c4:	mov	r1, r6
   143c8:	bl	14b24 <__assert_fail@plt+0x2f60>
   143cc:	mov	sl, r6
   143d0:	mov	r0, sl
   143d4:	sub	sp, fp, #28
   143d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143dc:	mov	r7, r6
   143e0:	ldr	r6, [r7, #8]
   143e4:	cmp	r6, #0
   143e8:	beq	144dc <__assert_fail@plt+0x2918>
   143ec:	mov	r0, r7
   143f0:	str	r6, [r4]
   143f4:	bl	137a4 <__assert_fail@plt+0x1be0>
   143f8:	ldr	r0, [r6, #48]	; 0x30
   143fc:	cmp	r0, #0
   14400:	beq	14524 <__assert_fail@plt+0x2960>
   14404:	ldrh	r0, [r6, #60]	; 0x3c
   14408:	mov	r7, r6
   1440c:	cmp	r0, #4
   14410:	beq	143e0 <__assert_fail@plt+0x281c>
   14414:	cmp	r0, #2
   14418:	bne	145d0 <__assert_fail@plt+0x2a0c>
   1441c:	mov	r0, r4
   14420:	mov	r1, r6
   14424:	mov	r2, #1
   14428:	bl	13e30 <__assert_fail@plt+0x226c>
   1442c:	strh	r0, [r6, #56]	; 0x38
   14430:	cmp	r0, #1
   14434:	ldreq	r0, [r4, #48]	; 0x30
   14438:	tsteq	r0, #4
   1443c:	beq	14a20 <__assert_fail@plt+0x2e5c>
   14440:	mov	r0, #3
   14444:	strh	r0, [r6, #60]	; 0x3c
   14448:	b	145d0 <__assert_fail@plt+0x2a0c>
   1444c:	tst	r0, #64	; 0x40
   14450:	beq	1446c <__assert_fail@plt+0x28a8>
   14454:	ldrd	r2, [r4, #16]
   14458:	ldrd	r8, [r6, #64]	; 0x40
   1445c:	eor	r1, r9, r3
   14460:	eor	r2, r8, r2
   14464:	orrs	r1, r2, r1
   14468:	bne	14368 <__assert_fail@plt+0x27a4>
   1446c:	ldr	r7, [r4, #4]
   14470:	cmp	r7, #0
   14474:	beq	145ac <__assert_fail@plt+0x29e8>
   14478:	tst	r0, #4096	; 0x1000
   1447c:	bne	14574 <__assert_fail@plt+0x29b0>
   14480:	ldr	r3, [r6, #24]
   14484:	mov	r0, r4
   14488:	mov	r1, r6
   1448c:	mvn	r2, #0
   14490:	bl	14bf4 <__assert_fail@plt+0x3030>
   14494:	cmp	r0, #0
   14498:	beq	145c4 <__assert_fail@plt+0x2a00>
   1449c:	bl	11a08 <__errno_location@plt>
   144a0:	ldr	r0, [r0]
   144a4:	str	r0, [r6, #32]
   144a8:	ldrh	r0, [r6, #58]	; 0x3a
   144ac:	orr	r0, r0, #1
   144b0:	strh	r0, [r6, #58]	; 0x3a
   144b4:	ldr	r0, [r4, #4]
   144b8:	cmp	r0, #0
   144bc:	beq	145c4 <__assert_fail@plt+0x2a00>
   144c0:	ldmib	r0, {r1, r2}
   144c4:	ldr	r1, [r1, #24]
   144c8:	cmp	r2, #0
   144cc:	str	r1, [r0, #24]
   144d0:	mov	r0, r2
   144d4:	bne	144c0 <__assert_fail@plt+0x28fc>
   144d8:	b	145c4 <__assert_fail@plt+0x2a00>
   144dc:	ldr	r0, [r7, #4]
   144e0:	ldr	r1, [r0, #12]
   144e4:	cmp	r1, #0
   144e8:	beq	1454c <__assert_fail@plt+0x2988>
   144ec:	str	r0, [r4]
   144f0:	mov	r2, #0
   144f4:	ldr	r1, [r4, #24]
   144f8:	ldr	r0, [r0, #40]	; 0x28
   144fc:	strb	r2, [r1, r0]
   14500:	mov	r0, r4
   14504:	mov	r1, #3
   14508:	bl	14e9c <__assert_fail@plt+0x32d8>
   1450c:	cmp	r0, #0
   14510:	beq	14794 <__assert_fail@plt+0x2bd0>
   14514:	mov	r6, r0
   14518:	mov	r0, r7
   1451c:	bl	137a4 <__assert_fail@plt+0x1be0>
   14520:	b	145d0 <__assert_fail@plt+0x2a0c>
   14524:	mov	r0, r4
   14528:	bl	15a78 <__assert_fail@plt+0x3eb4>
   1452c:	ldr	r1, [r4, #48]	; 0x30
   14530:	cmp	r0, #0
   14534:	beq	14554 <__assert_fail@plt+0x2990>
   14538:	orr	r0, r1, #8192	; 0x2000
   1453c:	str	r0, [r4, #48]	; 0x30
   14540:	mov	r0, sl
   14544:	sub	sp, fp, #28
   14548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1454c:	mov	sl, r0
   14550:	b	147a8 <__assert_fail@plt+0x2be4>
   14554:	movw	r0, #258	; 0x102
   14558:	tst	r1, r0
   1455c:	beq	148a8 <__assert_fail@plt+0x2ce4>
   14560:	ldr	r0, [r4, #56]	; 0x38
   14564:	cmp	r0, #0
   14568:	beq	148b0 <__assert_fail@plt+0x2cec>
   1456c:	bl	1672c <__assert_fail@plt+0x4b68>
   14570:	b	148b0 <__assert_fail@plt+0x2cec>
   14574:	bic	r0, r0, #4096	; 0x1000
   14578:	str	r0, [r4, #48]	; 0x30
   1457c:	ldrd	r8, [r7, #8]
   14580:	cmp	r9, #0
   14584:	beq	14590 <__assert_fail@plt+0x29cc>
   14588:	mov	r0, r9
   1458c:	bl	11ba0 <closedir@plt>
   14590:	mov	r0, r7
   14594:	bl	137a4 <__assert_fail@plt+0x1be0>
   14598:	cmp	r8, #0
   1459c:	mov	r7, r8
   145a0:	bne	1457c <__assert_fail@plt+0x29b8>
   145a4:	mov	r0, #0
   145a8:	str	r0, [r4, #4]
   145ac:	mov	r0, r4
   145b0:	mov	r1, #3
   145b4:	bl	14e9c <__assert_fail@plt+0x32d8>
   145b8:	cmp	r0, #0
   145bc:	str	r0, [r4, #4]
   145c0:	beq	1475c <__assert_fail@plt+0x2b98>
   145c4:	ldr	r6, [r4, #4]
   145c8:	mov	r0, #0
   145cc:	str	r0, [r4, #4]
   145d0:	ldr	r0, [r6, #4]
   145d4:	ldr	r1, [r0, #28]
   145d8:	ldr	r0, [r0, #40]	; 0x28
   145dc:	sub	r2, r0, #1
   145e0:	ldrb	r1, [r1, r2]
   145e4:	cmp	r1, #47	; 0x2f
   145e8:	ldr	r1, [r4, #24]
   145ec:	moveq	r0, r2
   145f0:	mov	r2, #47	; 0x2f
   145f4:	strb	r2, [r1, r0]!
   145f8:	ldr	r2, [r6, #52]	; 0x34
   145fc:	add	r0, r1, #1
   14600:	add	r1, r6, #168	; 0xa8
   14604:	add	r2, r2, #1
   14608:	bl	11804 <memmove@plt>
   1460c:	str	r6, [r4]
   14610:	ldrh	r0, [r6, #56]	; 0x38
   14614:	cmp	r0, #11
   14618:	bne	1464c <__assert_fail@plt+0x2a88>
   1461c:	ldrd	r0, [r6, #112]	; 0x70
   14620:	eor	r2, r0, #1
   14624:	orrs	r2, r2, r1
   14628:	beq	146f4 <__assert_fail@plt+0x2b30>
   1462c:	eor	r0, r0, #2
   14630:	orrs	r0, r0, r1
   14634:	bne	14b20 <__assert_fail@plt+0x2f5c>
   14638:	mov	r0, r4
   1463c:	mov	r1, r6
   14640:	mov	r2, #0
   14644:	bl	13e30 <__assert_fail@plt+0x226c>
   14648:	strh	r0, [r6, #56]	; 0x38
   1464c:	cmp	r0, #1
   14650:	bne	146e4 <__assert_fail@plt+0x2b20>
   14654:	ldr	r0, [r6, #48]	; 0x30
   14658:	cmp	r0, #0
   1465c:	ldrdeq	r0, [r6, #64]	; 0x40
   14660:	strdeq	r0, [r4, #16]
   14664:	movw	r1, #258	; 0x102
   14668:	ldrh	r0, [r4, #48]	; 0x30
   1466c:	tst	r0, r1
   14670:	beq	14704 <__assert_fail@plt+0x2b40>
   14674:	mov	r0, #24
   14678:	bl	1b934 <lchmod@@Base+0x4470>
   1467c:	cmp	r0, #0
   14680:	beq	14734 <__assert_fail@plt+0x2b70>
   14684:	mov	r7, r0
   14688:	ldrd	r0, [r6, #64]	; 0x40
   1468c:	add	r2, r7, #8
   14690:	stm	r7, {r0, r1}
   14694:	ldrd	r0, [r6, #160]	; 0xa0
   14698:	stm	r2, {r0, r1, r6}
   1469c:	mov	r1, r7
   146a0:	ldr	r0, [r4, #56]	; 0x38
   146a4:	bl	17048 <__assert_fail@plt+0x5484>
   146a8:	cmp	r0, r7
   146ac:	beq	14784 <__assert_fail@plt+0x2bc0>
   146b0:	mov	r4, r0
   146b4:	mov	r0, r7
   146b8:	bl	137a4 <__assert_fail@plt+0x1be0>
   146bc:	cmp	r4, #0
   146c0:	beq	14734 <__assert_fail@plt+0x2b70>
   146c4:	ldr	r0, [r4, #16]
   146c8:	mov	r1, #2
   146cc:	mov	sl, r6
   146d0:	strh	r1, [r6, #56]	; 0x38
   146d4:	str	r0, [r6]
   146d8:	mov	r0, sl
   146dc:	sub	sp, fp, #28
   146e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146e4:	mov	sl, r6
   146e8:	mov	r0, sl
   146ec:	sub	sp, fp, #28
   146f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146f4:	mov	sl, r6
   146f8:	mov	r0, sl
   146fc:	sub	sp, fp, #28
   14700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14704:	ldr	r0, [r4, #56]	; 0x38
   14708:	add	r1, r6, #64	; 0x40
   1470c:	bl	1baf0 <lchmod@@Base+0x462c>
   14710:	cmp	r0, #0
   14714:	beq	1474c <__assert_fail@plt+0x2b88>
   14718:	mov	r0, #2
   1471c:	mov	sl, r6
   14720:	strh	r0, [r6, #56]	; 0x38
   14724:	str	r6, [r6]
   14728:	mov	r0, sl
   1472c:	sub	sp, fp, #28
   14730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14734:	bl	11a08 <__errno_location@plt>
   14738:	mov	r1, #12
   1473c:	str	r1, [r0]
   14740:	mov	r0, sl
   14744:	sub	sp, fp, #28
   14748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1474c:	mov	sl, r6
   14750:	mov	r0, sl
   14754:	sub	sp, fp, #28
   14758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1475c:	ldrb	r0, [r4, #49]	; 0x31
   14760:	tst	r0, #32
   14764:	bne	14b14 <__assert_fail@plt+0x2f50>
   14768:	ldr	r0, [r6, #32]
   1476c:	cmp	r0, #0
   14770:	ldrhne	r0, [r5]
   14774:	cmpne	r0, #4
   14778:	movne	r0, #7
   1477c:	strhne	r0, [r5]
   14780:	b	143c0 <__assert_fail@plt+0x27fc>
   14784:	mov	sl, r6
   14788:	mov	r0, sl
   1478c:	sub	sp, fp, #28
   14790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14794:	ldrb	r0, [r4, #49]	; 0x31
   14798:	mov	sl, #0
   1479c:	tst	r0, #32
   147a0:	bne	14b14 <__assert_fail@plt+0x2f50>
   147a4:	ldr	sl, [r7, #4]
   147a8:	mov	r0, r7
   147ac:	str	sl, [r4]
   147b0:	bl	137a4 <__assert_fail@plt+0x1be0>
   147b4:	ldr	r0, [sl, #48]	; 0x30
   147b8:	cmn	r0, #1
   147bc:	beq	1485c <__assert_fail@plt+0x2c98>
   147c0:	ldrh	r0, [sl, #56]	; 0x38
   147c4:	cmp	r0, #11
   147c8:	beq	14b20 <__assert_fail@plt+0x2f5c>
   147cc:	ldr	r0, [sl, #40]	; 0x28
   147d0:	ldr	r1, [r4, #24]
   147d4:	mov	r2, #0
   147d8:	strb	r2, [r1, r0]
   147dc:	ldr	r0, [sl, #48]	; 0x30
   147e0:	cmp	r0, #0
   147e4:	beq	149a0 <__assert_fail@plt+0x2ddc>
   147e8:	ldrh	r0, [sl, #58]	; 0x3a
   147ec:	tst	r0, #2
   147f0:	bne	149d8 <__assert_fail@plt+0x2e14>
   147f4:	tst	r0, #1
   147f8:	bne	14ad8 <__assert_fail@plt+0x2f14>
   147fc:	ldr	r1, [sl, #4]
   14800:	movw	r3, #52354	; 0xcc82
   14804:	mov	r0, r4
   14808:	mvn	r2, #0
   1480c:	movt	r3, #1
   14810:	bl	14bf4 <__assert_fail@plt+0x3030>
   14814:	cmp	r0, #0
   14818:	bne	149b0 <__assert_fail@plt+0x2dec>
   1481c:	b	14ad8 <__assert_fail@plt+0x2f14>
   14820:	ldr	r0, [r4, #32]
   14824:	movw	r1, #52355	; 0xcc83
   14828:	movt	r1, #1
   1482c:	bl	17bec <lchmod@@Base+0x728>
   14830:	cmn	r0, #1
   14834:	str	r0, [r6, #36]	; 0x24
   14838:	ble	14880 <__assert_fail@plt+0x2cbc>
   1483c:	ldrh	r0, [r6, #58]	; 0x3a
   14840:	orr	r0, r0, #2
   14844:	strh	r0, [r6, #58]	; 0x3a
   14848:	str	r6, [r4]
   1484c:	ldrh	r0, [r6, #56]	; 0x38
   14850:	cmp	r0, #11
   14854:	beq	1461c <__assert_fail@plt+0x2a58>
   14858:	b	1464c <__assert_fail@plt+0x2a88>
   1485c:	mov	r0, sl
   14860:	bl	137a4 <__assert_fail@plt+0x1be0>
   14864:	bl	11a08 <__errno_location@plt>
   14868:	mov	sl, #0
   1486c:	str	sl, [r0]
   14870:	str	sl, [r4]
   14874:	mov	r0, sl
   14878:	sub	sp, fp, #28
   1487c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14880:	bl	11a08 <__errno_location@plt>
   14884:	ldr	r0, [r0]
   14888:	mov	r1, #7
   1488c:	strh	r1, [r6, #56]	; 0x38
   14890:	str	r0, [r6, #32]
   14894:	str	r6, [r4]
   14898:	ldrh	r0, [r6, #56]	; 0x38
   1489c:	cmp	r0, #11
   148a0:	beq	1461c <__assert_fail@plt+0x2a58>
   148a4:	b	1464c <__assert_fail@plt+0x2a88>
   148a8:	ldr	r0, [r4, #56]	; 0x38
   148ac:	bl	137a4 <__assert_fail@plt+0x1be0>
   148b0:	ldr	r1, [r6, #52]	; 0x34
   148b4:	add	r7, r6, #168	; 0xa8
   148b8:	str	r1, [r6, #40]	; 0x28
   148bc:	add	r2, r1, #1
   148c0:	mov	r1, r7
   148c4:	ldr	r0, [r4, #24]
   148c8:	bl	11804 <memmove@plt>
   148cc:	mov	r0, r7
   148d0:	mov	r1, #47	; 0x2f
   148d4:	bl	11a98 <strrchr@plt>
   148d8:	cmp	r0, #0
   148dc:	beq	14918 <__assert_fail@plt+0x2d54>
   148e0:	cmp	r0, r7
   148e4:	bne	148f4 <__assert_fail@plt+0x2d30>
   148e8:	ldrb	r1, [r6, #169]	; 0xa9
   148ec:	cmp	r1, #0
   148f0:	beq	14918 <__assert_fail@plt+0x2d54>
   148f4:	add	r8, r0, #1
   148f8:	mov	r0, r8
   148fc:	bl	119cc <strlen@plt>
   14900:	mov	r9, r0
   14904:	add	r2, r0, #1
   14908:	mov	r0, r7
   1490c:	mov	r1, r8
   14910:	bl	11804 <memmove@plt>
   14914:	str	r9, [r6, #52]	; 0x34
   14918:	ldr	r0, [r4, #24]
   1491c:	movw	r1, #258	; 0x102
   14920:	str	r0, [r6, #24]
   14924:	str	r0, [r6, #28]
   14928:	ldrh	r0, [r4, #48]	; 0x30
   1492c:	tst	r0, r1
   14930:	beq	14974 <__assert_fail@plt+0x2db0>
   14934:	movw	r0, #14244	; 0x37a4
   14938:	movw	r2, #23888	; 0x5d50
   1493c:	movw	r3, #23920	; 0x5d70
   14940:	mov	r1, #0
   14944:	movt	r0, #1
   14948:	movt	r2, #1
   1494c:	movt	r3, #1
   14950:	str	r0, [sp]
   14954:	mov	r0, #31
   14958:	bl	16410 <__assert_fail@plt+0x484c>
   1495c:	str	r0, [r4, #56]	; 0x38
   14960:	str	r6, [r4]
   14964:	ldrh	r0, [r6, #56]	; 0x38
   14968:	cmp	r0, #11
   1496c:	beq	1461c <__assert_fail@plt+0x2a58>
   14970:	b	1464c <__assert_fail@plt+0x2a88>
   14974:	mov	r0, #32
   14978:	bl	1b934 <lchmod@@Base+0x4470>
   1497c:	cmp	r0, #0
   14980:	str	r0, [r4, #56]	; 0x38
   14984:	beq	1460c <__assert_fail@plt+0x2a48>
   14988:	bl	1bad4 <lchmod@@Base+0x4610>
   1498c:	str	r6, [r4]
   14990:	ldrh	r0, [r6, #56]	; 0x38
   14994:	cmp	r0, #11
   14998:	beq	1461c <__assert_fail@plt+0x2a58>
   1499c:	b	1464c <__assert_fail@plt+0x2a88>
   149a0:	mov	r0, r4
   149a4:	bl	15a78 <__assert_fail@plt+0x3eb4>
   149a8:	cmp	r0, #0
   149ac:	beq	14ad8 <__assert_fail@plt+0x2f14>
   149b0:	bl	11a08 <__errno_location@plt>
   149b4:	ldr	r0, [r0]
   149b8:	str	r0, [sl, #32]
   149bc:	ldr	r0, [r4, #48]	; 0x30
   149c0:	orr	r0, r0, #8192	; 0x2000
   149c4:	str	r0, [r4, #48]	; 0x30
   149c8:	ldrh	r0, [sl, #56]	; 0x38
   149cc:	cmp	r0, #2
   149d0:	bne	14ae4 <__assert_fail@plt+0x2f20>
   149d4:	b	14b08 <__assert_fail@plt+0x2f44>
   149d8:	ldr	r0, [r4, #48]	; 0x30
   149dc:	tst	r0, #4
   149e0:	bne	14a58 <__assert_fail@plt+0x2e94>
   149e4:	mov	r5, sl
   149e8:	tst	r0, #512	; 0x200
   149ec:	ldr	r6, [r5, #36]!	; 0x24
   149f0:	bne	14aa4 <__assert_fail@plt+0x2ee0>
   149f4:	mov	r0, r6
   149f8:	bl	11ae0 <fchdir@plt>
   149fc:	cmp	r0, #0
   14a00:	beq	14ad0 <__assert_fail@plt+0x2f0c>
   14a04:	bl	11a08 <__errno_location@plt>
   14a08:	ldr	r0, [r0]
   14a0c:	str	r0, [sl, #32]
   14a10:	ldr	r0, [r4, #48]	; 0x30
   14a14:	orr	r0, r0, #8192	; 0x2000
   14a18:	str	r0, [r4, #48]	; 0x30
   14a1c:	b	14ad0 <__assert_fail@plt+0x2f0c>
   14a20:	mov	r1, #32768	; 0x8000
   14a24:	tst	r0, #512	; 0x200
   14a28:	and	r1, r1, r0, lsl #11
   14a2c:	orr	r1, r1, #18688	; 0x4900
   14a30:	orr	r2, r1, #524288	; 0x80000
   14a34:	bne	14a60 <__assert_fail@plt+0x2e9c>
   14a38:	movw	r0, #52355	; 0xcc83
   14a3c:	mov	r1, r2
   14a40:	movt	r0, #1
   14a44:	bl	1be44 <lchmod@@Base+0x4980>
   14a48:	cmn	r0, #1
   14a4c:	str	r0, [r6, #36]	; 0x24
   14a50:	bgt	14a7c <__assert_fail@plt+0x2eb8>
   14a54:	b	14a8c <__assert_fail@plt+0x2ec8>
   14a58:	add	r5, sl, #36	; 0x24
   14a5c:	b	14ad0 <__assert_fail@plt+0x2f0c>
   14a60:	ldr	r0, [r4, #32]
   14a64:	movw	r1, #52355	; 0xcc83
   14a68:	movt	r1, #1
   14a6c:	bl	17bec <lchmod@@Base+0x728>
   14a70:	cmn	r0, #1
   14a74:	str	r0, [r6, #36]	; 0x24
   14a78:	ble	14a8c <__assert_fail@plt+0x2ec8>
   14a7c:	ldrh	r0, [r6, #58]	; 0x3a
   14a80:	orr	r0, r0, #2
   14a84:	strh	r0, [r6, #58]	; 0x3a
   14a88:	b	14440 <__assert_fail@plt+0x287c>
   14a8c:	bl	11a08 <__errno_location@plt>
   14a90:	ldr	r0, [r0]
   14a94:	mov	r1, #7
   14a98:	strh	r1, [r6, #56]	; 0x38
   14a9c:	str	r0, [r6, #32]
   14aa0:	b	14440 <__assert_fail@plt+0x287c>
   14aa4:	ldr	r1, [r4, #32]
   14aa8:	cmp	r1, r6
   14aac:	bne	14ab8 <__assert_fail@plt+0x2ef4>
   14ab0:	cmn	r1, #100	; 0x64
   14ab4:	bne	14b20 <__assert_fail@plt+0x2f5c>
   14ab8:	add	r0, r4, #60	; 0x3c
   14abc:	bl	17420 <__assert_fail@plt+0x585c>
   14ac0:	cmp	r0, #0
   14ac4:	blt	14acc <__assert_fail@plt+0x2f08>
   14ac8:	bl	11b70 <close@plt>
   14acc:	str	r6, [r4, #32]
   14ad0:	ldr	r0, [r5]
   14ad4:	bl	11b70 <close@plt>
   14ad8:	ldrh	r0, [sl, #56]	; 0x38
   14adc:	cmp	r0, #2
   14ae0:	beq	14b08 <__assert_fail@plt+0x2f44>
   14ae4:	ldr	r0, [sl, #32]
   14ae8:	mov	r1, #7
   14aec:	cmp	r0, #0
   14af0:	movweq	r1, #6
   14af4:	strh	r1, [sl, #56]	; 0x38
   14af8:	bne	14b08 <__assert_fail@plt+0x2f44>
   14afc:	mov	r0, r4
   14b00:	mov	r1, sl
   14b04:	bl	14b24 <__assert_fail@plt+0x2f60>
   14b08:	ldrb	r0, [r4, #49]	; 0x31
   14b0c:	tst	r0, #32
   14b10:	movne	sl, #0
   14b14:	mov	r0, sl
   14b18:	sub	sp, fp, #28
   14b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b20:	bl	11b64 <abort@plt>
   14b24:	push	{r4, r5, r6, r7, fp, lr}
   14b28:	add	fp, sp, #16
   14b2c:	sub	sp, sp, #24
   14b30:	ldrh	r2, [r0, #48]	; 0x30
   14b34:	movw	r3, #258	; 0x102
   14b38:	add	lr, r1, #64	; 0x40
   14b3c:	tst	r2, r3
   14b40:	beq	14b78 <__assert_fail@plt+0x2fb4>
   14b44:	ldrd	r2, [lr]
   14b48:	stm	sp, {r2, r3}
   14b4c:	ldrd	r2, [r1, #160]	; 0xa0
   14b50:	mov	r1, sp
   14b54:	str	r3, [sp, #12]
   14b58:	str	r2, [sp, #8]
   14b5c:	ldr	r0, [r0, #56]	; 0x38
   14b60:	bl	17090 <__assert_fail@plt+0x54cc>
   14b64:	cmp	r0, #0
   14b68:	beq	14bf0 <__assert_fail@plt+0x302c>
   14b6c:	bl	137a4 <__assert_fail@plt+0x1be0>
   14b70:	sub	sp, fp, #16
   14b74:	pop	{r4, r5, r6, r7, fp, pc}
   14b78:	ldr	r2, [r1, #4]
   14b7c:	cmp	r2, #0
   14b80:	beq	14be8 <__assert_fail@plt+0x3024>
   14b84:	ldr	r3, [r2, #48]	; 0x30
   14b88:	cmp	r3, #0
   14b8c:	blt	14be8 <__assert_fail@plt+0x3024>
   14b90:	ldr	ip, [r0, #56]	; 0x38
   14b94:	ldrd	r4, [ip, #16]
   14b98:	orrs	r3, r4, r5
   14b9c:	beq	14bf0 <__assert_fail@plt+0x302c>
   14ba0:	ldrd	r4, [r1, #160]	; 0xa0
   14ba4:	ldrd	r6, [ip]
   14ba8:	eor	r1, r7, r5
   14bac:	eor	r3, r6, r4
   14bb0:	orrs	r1, r3, r1
   14bb4:	bne	14be8 <__assert_fail@plt+0x3024>
   14bb8:	ldr	r1, [ip, #8]!
   14bbc:	ldrd	r4, [lr]
   14bc0:	ldr	r3, [ip, #4]
   14bc4:	eor	r1, r1, r4
   14bc8:	eor	r3, r3, r5
   14bcc:	orrs	r1, r1, r3
   14bd0:	bne	14be8 <__assert_fail@plt+0x3024>
   14bd4:	ldrd	r4, [r2, #64]	; 0x40
   14bd8:	strd	r4, [ip]
   14bdc:	ldr	r0, [r0, #56]	; 0x38
   14be0:	ldrd	r2, [r2, #160]	; 0xa0
   14be4:	strd	r2, [r0]
   14be8:	sub	sp, fp, #16
   14bec:	pop	{r4, r5, r6, r7, fp, pc}
   14bf0:	bl	11b64 <abort@plt>
   14bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bf8:	add	fp, sp, #28
   14bfc:	sub	sp, sp, #108	; 0x6c
   14c00:	mov	r7, r3
   14c04:	mov	r4, r2
   14c08:	mov	r8, r1
   14c0c:	mov	sl, r0
   14c10:	cmp	r3, #0
   14c14:	beq	14ca0 <__assert_fail@plt+0x30dc>
   14c18:	movw	r1, #52354	; 0xcc82
   14c1c:	mov	r0, r7
   14c20:	movt	r1, #1
   14c24:	bl	117d4 <strcmp@plt>
   14c28:	mov	r6, r0
   14c2c:	cmp	r0, #0
   14c30:	movwne	r6, #1
   14c34:	ldr	r0, [sl, #48]	; 0x30
   14c38:	tst	r0, #4
   14c3c:	bne	14cb0 <__assert_fail@plt+0x30ec>
   14c40:	cmn	r4, #1
   14c44:	mov	r1, #0
   14c48:	mov	r9, #0
   14c4c:	movwgt	r1, #1
   14c50:	orrs	r1, r1, r6
   14c54:	bne	14cd8 <__assert_fail@plt+0x3114>
   14c58:	ands	r0, r0, #512	; 0x200
   14c5c:	beq	14cd8 <__assert_fail@plt+0x3114>
   14c60:	add	r4, sl, #60	; 0x3c
   14c64:	mov	r0, r4
   14c68:	bl	17418 <__assert_fail@plt+0x5854>
   14c6c:	cmp	r0, #0
   14c70:	bne	14ce0 <__assert_fail@plt+0x311c>
   14c74:	mov	r0, r4
   14c78:	bl	1746c <__assert_fail@plt+0x58a8>
   14c7c:	cmn	r0, #1
   14c80:	ble	14ce0 <__assert_fail@plt+0x311c>
   14c84:	mov	r4, r0
   14c88:	mov	r9, #0
   14c8c:	mov	r7, #0
   14c90:	ldr	r5, [sl, #48]	; 0x30
   14c94:	tst	r5, #2
   14c98:	beq	14d24 <__assert_fail@plt+0x3160>
   14c9c:	b	14d6c <__assert_fail@plt+0x31a8>
   14ca0:	mov	r6, #1
   14ca4:	ldr	r0, [sl, #48]	; 0x30
   14ca8:	tst	r0, #4
   14cac:	beq	14c40 <__assert_fail@plt+0x307c>
   14cb0:	mov	r5, #0
   14cb4:	cmp	r4, #0
   14cb8:	blt	14d60 <__assert_fail@plt+0x319c>
   14cbc:	ands	r0, r0, #512	; 0x200
   14cc0:	beq	14d60 <__assert_fail@plt+0x319c>
   14cc4:	mov	r0, r4
   14cc8:	bl	11b70 <close@plt>
   14ccc:	mov	r0, r5
   14cd0:	sub	sp, fp, #28
   14cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cd8:	cmn	r4, #1
   14cdc:	bgt	14d18 <__assert_fail@plt+0x3154>
   14ce0:	ldr	r0, [sl, #48]	; 0x30
   14ce4:	mov	r1, #32768	; 0x8000
   14ce8:	and	r1, r1, r0, lsl #11
   14cec:	tst	r0, #512	; 0x200
   14cf0:	orr	r1, r1, #18688	; 0x4900
   14cf4:	orr	r2, r1, #524288	; 0x80000
   14cf8:	bne	14d94 <__assert_fail@plt+0x31d0>
   14cfc:	mov	r0, r7
   14d00:	mov	r1, r2
   14d04:	bl	1be44 <lchmod@@Base+0x4980>
   14d08:	mov	r4, r0
   14d0c:	mov	r9, #1
   14d10:	cmp	r0, #0
   14d14:	blt	14db0 <__assert_fail@plt+0x31ec>
   14d18:	ldr	r5, [sl, #48]	; 0x30
   14d1c:	tst	r5, #2
   14d20:	bne	14d6c <__assert_fail@plt+0x31a8>
   14d24:	cmp	r7, #0
   14d28:	beq	14d44 <__assert_fail@plt+0x3180>
   14d2c:	movw	r1, #52354	; 0xcc82
   14d30:	mov	r0, r7
   14d34:	movt	r1, #1
   14d38:	bl	117d4 <strcmp@plt>
   14d3c:	cmp	r0, #0
   14d40:	beq	14d6c <__assert_fail@plt+0x31a8>
   14d44:	tst	r5, #512	; 0x200
   14d48:	bne	14e00 <__assert_fail@plt+0x323c>
   14d4c:	mov	r0, r4
   14d50:	bl	11ae0 <fchdir@plt>
   14d54:	mov	r5, r0
   14d58:	cmp	r9, #0
   14d5c:	bne	14e48 <__assert_fail@plt+0x3284>
   14d60:	mov	r0, r5
   14d64:	sub	sp, fp, #28
   14d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d6c:	mov	r2, sp
   14d70:	mov	r0, #3
   14d74:	mov	r1, r4
   14d78:	bl	118d0 <__fxstat64@plt>
   14d7c:	cmp	r0, #0
   14d80:	beq	14dc0 <__assert_fail@plt+0x31fc>
   14d84:	mvn	r5, #0
   14d88:	cmp	r9, #0
   14d8c:	beq	14d60 <__assert_fail@plt+0x319c>
   14d90:	b	14e48 <__assert_fail@plt+0x3284>
   14d94:	ldr	r0, [sl, #32]
   14d98:	mov	r1, r7
   14d9c:	bl	17bec <lchmod@@Base+0x728>
   14da0:	mov	r4, r0
   14da4:	mov	r9, #1
   14da8:	cmp	r0, #0
   14dac:	bge	14d18 <__assert_fail@plt+0x3154>
   14db0:	mvn	r5, #0
   14db4:	mov	r0, r5
   14db8:	sub	sp, fp, #28
   14dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dc0:	ldrd	r0, [r8, #64]	; 0x40
   14dc4:	ldm	sp, {r2, r3}
   14dc8:	eor	r1, r1, r3
   14dcc:	eor	r0, r0, r2
   14dd0:	orrs	r0, r0, r1
   14dd4:	bne	14e30 <__assert_fail@plt+0x326c>
   14dd8:	ldrd	r0, [r8, #160]	; 0xa0
   14ddc:	ldr	r2, [sp, #96]	; 0x60
   14de0:	ldr	r3, [sp, #100]	; 0x64
   14de4:	eor	r1, r1, r3
   14de8:	eor	r0, r0, r2
   14dec:	orrs	r0, r0, r1
   14df0:	bne	14e30 <__assert_fail@plt+0x326c>
   14df4:	ldr	r5, [sl, #48]	; 0x30
   14df8:	tst	r5, #512	; 0x200
   14dfc:	beq	14d4c <__assert_fail@plt+0x3188>
   14e00:	ldr	r1, [sl, #32]
   14e04:	cmp	r1, r4
   14e08:	bne	14e14 <__assert_fail@plt+0x3250>
   14e0c:	cmn	r1, #100	; 0x64
   14e10:	bne	14e98 <__assert_fail@plt+0x32d4>
   14e14:	cmp	r6, #0
   14e18:	beq	14e6c <__assert_fail@plt+0x32a8>
   14e1c:	add	r0, sl, #60	; 0x3c
   14e20:	bl	17420 <__assert_fail@plt+0x585c>
   14e24:	cmp	r0, #0
   14e28:	bge	14e80 <__assert_fail@plt+0x32bc>
   14e2c:	b	14e84 <__assert_fail@plt+0x32c0>
   14e30:	bl	11a08 <__errno_location@plt>
   14e34:	mov	r1, #2
   14e38:	str	r1, [r0]
   14e3c:	mvn	r5, #0
   14e40:	cmp	r9, #0
   14e44:	beq	14d60 <__assert_fail@plt+0x319c>
   14e48:	bl	11a08 <__errno_location@plt>
   14e4c:	ldr	r7, [r0]
   14e50:	mov	r6, r0
   14e54:	mov	r0, r4
   14e58:	bl	11b70 <close@plt>
   14e5c:	str	r7, [r6]
   14e60:	mov	r0, r5
   14e64:	sub	sp, fp, #28
   14e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e6c:	tst	r5, #4
   14e70:	bne	14e84 <__assert_fail@plt+0x32c0>
   14e74:	cmp	r1, #0
   14e78:	blt	14e84 <__assert_fail@plt+0x32c0>
   14e7c:	mov	r0, r1
   14e80:	bl	11b70 <close@plt>
   14e84:	str	r4, [sl, #32]
   14e88:	mov	r5, #0
   14e8c:	mov	r0, r5
   14e90:	sub	sp, fp, #28
   14e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e98:	bl	11b64 <abort@plt>
   14e9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ea0:	add	fp, sp, #28
   14ea4:	sub	sp, sp, #76	; 0x4c
   14ea8:	ldr	r8, [r0]
   14eac:	mov	r9, r1
   14eb0:	mov	r5, r0
   14eb4:	str	r0, [sp, #52]	; 0x34
   14eb8:	ldr	r4, [r8, #12]
   14ebc:	cmp	r4, #0
   14ec0:	beq	14f0c <__assert_fail@plt+0x3348>
   14ec4:	mov	r0, r4
   14ec8:	bl	11ad4 <dirfd@plt>
   14ecc:	cmn	r0, #1
   14ed0:	str	r0, [fp, #-32]	; 0xffffffe0
   14ed4:	ble	14f44 <__assert_fail@plt+0x3380>
   14ed8:	mov	r1, r5
   14edc:	mvn	r2, #0
   14ee0:	str	r4, [sp, #12]
   14ee4:	str	r9, [sp, #4]
   14ee8:	mov	ip, #0
   14eec:	ldr	r0, [r1, #44]!	; 0x2c
   14ef0:	cmp	r0, #0
   14ef4:	str	r1, [fp, #-48]	; 0xffffffd0
   14ef8:	add	sl, r1, #4
   14efc:	movweq	r2, #34464	; 0x86a0
   14f00:	movteq	r2, #1
   14f04:	str	r2, [sp, #28]
   14f08:	b	151d4 <__assert_fail@plt+0x3610>
   14f0c:	mov	sl, r5
   14f10:	mvn	r0, #99	; 0x63
   14f14:	mov	r2, #0
   14f18:	ldr	r3, [sl, #48]!	; 0x30
   14f1c:	and	r1, r3, #516	; 0x204
   14f20:	cmp	r1, #512	; 0x200
   14f24:	ldr	r1, [r8, #24]
   14f28:	ldreq	r0, [r5, #32]
   14f2c:	tst	r3, #16
   14f30:	beq	14f6c <__assert_fail@plt+0x33a8>
   14f34:	tst	r3, #1
   14f38:	bne	14f60 <__assert_fail@plt+0x339c>
   14f3c:	mov	r2, #32768	; 0x8000
   14f40:	b	14f6c <__assert_fail@plt+0x33a8>
   14f44:	ldr	r0, [r8, #12]
   14f48:	bl	11ba0 <closedir@plt>
   14f4c:	mov	r6, #0
   14f50:	str	r6, [r8, #12]
   14f54:	cmp	r9, #3
   14f58:	beq	14fb8 <__assert_fail@plt+0x33f4>
   14f5c:	b	15888 <__assert_fail@plt+0x3cc4>
   14f60:	ldr	r3, [r8, #48]	; 0x30
   14f64:	cmp	r3, #0
   14f68:	movne	r2, #32768	; 0x8000
   14f6c:	sub	r3, fp, #32
   14f70:	bl	17c30 <lchmod@@Base+0x76c>
   14f74:	cmp	r0, #0
   14f78:	str	r0, [r8, #12]
   14f7c:	beq	14fac <__assert_fail@plt+0x33e8>
   14f80:	ldrh	r0, [r8, #56]	; 0x38
   14f84:	cmp	r0, #11
   14f88:	bne	14fd8 <__assert_fail@plt+0x3414>
   14f8c:	mov	r0, r5
   14f90:	mov	r1, r8
   14f94:	mov	r2, #0
   14f98:	bl	13e30 <__assert_fail@plt+0x226c>
   14f9c:	mov	r7, r8
   14fa0:	strh	r0, [r8, #56]	; 0x38
   14fa4:	mov	r6, r5
   14fa8:	b	150ac <__assert_fail@plt+0x34e8>
   14fac:	mov	r6, #0
   14fb0:	cmp	r9, #3
   14fb4:	bne	15888 <__assert_fail@plt+0x3cc4>
   14fb8:	mov	r0, #4
   14fbc:	strh	r0, [r8, #56]	; 0x38
   14fc0:	bl	11a08 <__errno_location@plt>
   14fc4:	ldr	r0, [r0]
   14fc8:	str	r0, [r8, #32]
   14fcc:	mov	r0, r6
   14fd0:	sub	sp, fp, #28
   14fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fd8:	ldrb	r0, [sl, #1]
   14fdc:	mov	r7, r8
   14fe0:	mov	r6, r5
   14fe4:	tst	r0, #1
   14fe8:	beq	150ac <__assert_fail@plt+0x34e8>
   14fec:	mov	r0, r6
   14ff0:	mov	r1, r7
   14ff4:	mov	r5, r7
   14ff8:	bl	14b24 <__assert_fail@plt+0x2f60>
   14ffc:	mov	r0, r6
   15000:	mov	r1, r7
   15004:	mov	r2, #0
   15008:	bl	13e30 <__assert_fail@plt+0x226c>
   1500c:	ldrh	r0, [r6, #48]	; 0x30
   15010:	movw	r1, #258	; 0x102
   15014:	tst	r0, r1
   15018:	beq	1508c <__assert_fail@plt+0x34c8>
   1501c:	mov	r0, #24
   15020:	bl	1b934 <lchmod@@Base+0x4470>
   15024:	cmp	r0, #0
   15028:	beq	15a44 <__assert_fail@plt+0x3e80>
   1502c:	mov	r5, r0
   15030:	ldrd	r0, [r7, #64]	; 0x40
   15034:	add	r2, r5, #8
   15038:	stm	r5, {r0, r1}
   1503c:	ldrd	r0, [r7, #160]	; 0xa0
   15040:	stm	r2, {r0, r1, r7}
   15044:	mov	r1, r5
   15048:	ldr	r6, [sp, #52]	; 0x34
   1504c:	ldr	r0, [r6, #56]	; 0x38
   15050:	bl	17048 <__assert_fail@plt+0x5484>
   15054:	cmp	r0, r5
   15058:	beq	150ac <__assert_fail@plt+0x34e8>
   1505c:	mov	r8, r0
   15060:	mov	r0, r5
   15064:	bl	137a4 <__assert_fail@plt+0x1be0>
   15068:	cmp	r8, #0
   1506c:	beq	15a44 <__assert_fail@plt+0x3e80>
   15070:	ldr	r0, [r8, #16]
   15074:	ldr	r6, [sp, #52]	; 0x34
   15078:	mov	r1, #2
   1507c:	mov	r2, r7
   15080:	strh	r1, [r7, #56]	; 0x38
   15084:	str	r0, [r7]
   15088:	b	150ac <__assert_fail@plt+0x34e8>
   1508c:	ldr	r0, [r6, #56]	; 0x38
   15090:	add	r1, r5, #64	; 0x40
   15094:	bl	1baf0 <lchmod@@Base+0x462c>
   15098:	cmp	r0, #0
   1509c:	movne	r0, #2
   150a0:	movne	r1, r7
   150a4:	strhne	r0, [r7, #56]	; 0x38
   150a8:	strne	r7, [r7]
   150ac:	mov	r1, r6
   150b0:	mov	r5, r6
   150b4:	mov	r8, r7
   150b8:	str	r9, [sp, #4]
   150bc:	str	r4, [sp, #12]
   150c0:	ldr	r0, [r1, #44]!	; 0x2c
   150c4:	str	r1, [fp, #-48]	; 0xffffffd0
   150c8:	mvn	r1, #0
   150cc:	cmp	r0, #0
   150d0:	movweq	r1, #34464	; 0x86a0
   150d4:	movteq	r1, #1
   150d8:	cmp	r9, #2
   150dc:	str	r1, [sp, #28]
   150e0:	bne	150fc <__assert_fail@plt+0x3538>
   150e4:	mov	ip, #1
   150e8:	cmp	r9, #3
   150ec:	bne	151d4 <__assert_fail@plt+0x3610>
   150f0:	sub	r0, r9, #3
   150f4:	mov	r5, #0
   150f8:	b	1511c <__assert_fail@plt+0x3558>
   150fc:	ldr	r0, [sl]
   15100:	and	r0, r0, #56	; 0x38
   15104:	cmp	r0, #24
   15108:	ldreq	r0, [r8, #84]	; 0x54
   1510c:	cmpeq	r0, #2
   15110:	beq	15a04 <__assert_fail@plt+0x3e40>
   15114:	sub	r0, r9, #3
   15118:	mov	r5, #1
   1511c:	clz	r0, r0
   15120:	lsr	r6, r0, #5
   15124:	ldrb	r0, [sl, #1]
   15128:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1512c:	tst	r0, #2
   15130:	beq	1514c <__assert_fail@plt+0x3588>
   15134:	mov	r0, r2
   15138:	movw	r1, #1030	; 0x406
   1513c:	mov	r2, #3
   15140:	bl	1bc64 <lchmod@@Base+0x47a0>
   15144:	mov	r2, r0
   15148:	str	r0, [fp, #-32]	; 0xffffffe0
   1514c:	cmp	r2, #0
   15150:	blt	1516c <__assert_fail@plt+0x35a8>
   15154:	ldr	r0, [sp, #52]	; 0x34
   15158:	mov	r1, r8
   1515c:	mov	r3, #0
   15160:	bl	14bf4 <__assert_fail@plt+0x3030>
   15164:	cmp	r0, #0
   15168:	beq	151cc <__assert_fail@plt+0x3608>
   1516c:	and	r0, r6, r5
   15170:	cmp	r0, #1
   15174:	bne	15184 <__assert_fail@plt+0x35c0>
   15178:	bl	11a08 <__errno_location@plt>
   1517c:	ldr	r0, [r0]
   15180:	str	r0, [r8, #32]
   15184:	ldrh	r0, [r8, #58]	; 0x3a
   15188:	orr	r0, r0, #1
   1518c:	strh	r0, [r8, #58]	; 0x3a
   15190:	ldr	r0, [r8, #12]
   15194:	bl	11ba0 <closedir@plt>
   15198:	mov	r4, #0
   1519c:	ldr	r5, [sp, #52]	; 0x34
   151a0:	str	r4, [r8, #12]
   151a4:	ldr	r0, [sl]
   151a8:	tst	r0, #512	; 0x200
   151ac:	beq	151c0 <__assert_fail@plt+0x35fc>
   151b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151b4:	cmp	r0, #0
   151b8:	blt	151c0 <__assert_fail@plt+0x35fc>
   151bc:	bl	11b70 <close@plt>
   151c0:	mov	ip, #1
   151c4:	str	r4, [r8, #12]
   151c8:	b	151d4 <__assert_fail@plt+0x3610>
   151cc:	ldr	r5, [sp, #52]	; 0x34
   151d0:	mov	ip, #0
   151d4:	ldr	r0, [r8, #40]	; 0x28
   151d8:	ldr	r1, [r8, #28]
   151dc:	mov	r7, #0
   151e0:	sub	r2, r0, #1
   151e4:	ldrb	r1, [r1, r2]
   151e8:	cmp	r1, #47	; 0x2f
   151ec:	ldrb	r1, [sl]
   151f0:	moveq	r0, r2
   151f4:	tst	r1, #4
   151f8:	mov	r1, #0
   151fc:	str	r1, [sp, #40]	; 0x28
   15200:	beq	15218 <__assert_fail@plt+0x3654>
   15204:	ldr	r1, [r5, #24]
   15208:	mov	r2, #47	; 0x2f
   1520c:	strb	r2, [r1, r0]!
   15210:	add	r1, r1, #1
   15214:	str	r1, [sp, #40]	; 0x28
   15218:	ldr	r6, [r8, #12]
   1521c:	add	r1, r0, #1
   15220:	str	r1, [fp, #-44]	; 0xffffffd4
   15224:	cmp	r6, #0
   15228:	beq	155c8 <__assert_fail@plt+0x3a04>
   1522c:	ldr	r0, [r8, #48]	; 0x30
   15230:	str	ip, [sp]
   15234:	add	r0, r0, #1
   15238:	str	r0, [sp, #20]
   1523c:	ldr	r0, [r5, #36]	; 0x24
   15240:	mov	r5, #0
   15244:	sub	r0, r0, r1
   15248:	str	r0, [sp, #44]	; 0x2c
   1524c:	bl	11a08 <__errno_location@plt>
   15250:	str	r0, [sp, #36]	; 0x24
   15254:	mov	r0, #0
   15258:	mov	r7, #0
   1525c:	mov	r4, #0
   15260:	str	r8, [sp, #24]
   15264:	str	sl, [sp, #32]
   15268:	str	r0, [sp, #48]	; 0x30
   1526c:	mov	r0, #0
   15270:	str	r0, [sp, #8]
   15274:	mov	r0, #0
   15278:	str	r0, [sp, #16]
   1527c:	ldr	r0, [sp, #36]	; 0x24
   15280:	str	r7, [fp, #-36]	; 0xffffffdc
   15284:	str	r5, [r0]
   15288:	mov	r0, r6
   1528c:	bl	11ab0 <readdir64@plt>
   15290:	cmp	r0, #0
   15294:	beq	1572c <__assert_fail@plt+0x3b68>
   15298:	mov	r9, r0
   1529c:	ldrb	r0, [sl]
   152a0:	str	r4, [fp, #-40]	; 0xffffffd8
   152a4:	mov	r1, sl
   152a8:	add	r4, r9, #19
   152ac:	tst	r0, #32
   152b0:	ldrbeq	r0, [r4]
   152b4:	cmpeq	r0, #46	; 0x2e
   152b8:	beq	153b4 <__assert_fail@plt+0x37f0>
   152bc:	mov	r0, r4
   152c0:	bl	119cc <strlen@plt>
   152c4:	mov	r5, r0
   152c8:	add	r0, r0, #176	; 0xb0
   152cc:	bic	r0, r0, #7
   152d0:	bl	1b934 <lchmod@@Base+0x4470>
   152d4:	mov	r6, r0
   152d8:	cmp	r0, #0
   152dc:	beq	158e8 <__assert_fail@plt+0x3d24>
   152e0:	add	sl, r6, #168	; 0xa8
   152e4:	mov	r1, r4
   152e8:	mov	r2, r5
   152ec:	mov	r0, sl
   152f0:	bl	11834 <memcpy@plt>
   152f4:	ldr	r2, [sp, #52]	; 0x34
   152f8:	mov	r0, #0
   152fc:	mov	r1, #196608	; 0x30000
   15300:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15304:	strb	r0, [sl, r5]
   15308:	str	r5, [r6, #52]	; 0x34
   1530c:	str	r2, [r6, #44]	; 0x2c
   15310:	add	r7, r5, r3
   15314:	ldr	r4, [r2, #24]
   15318:	str	r1, [r6, #58]	; 0x3a
   1531c:	str	r0, [r6, #12]
   15320:	str	r0, [r6, #16]
   15324:	str	r0, [r6, #20]
   15328:	str	r4, [r6, #28]
   1532c:	str	r0, [r6, #32]
   15330:	ldr	r0, [sp, #44]	; 0x2c
   15334:	cmp	r5, r0
   15338:	bcs	15350 <__assert_fail@plt+0x378c>
   1533c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   15340:	mov	r5, r2
   15344:	cmp	r7, r3
   15348:	bcs	15408 <__assert_fail@plt+0x3844>
   1534c:	b	1578c <__assert_fail@plt+0x3bc8>
   15350:	ldr	r1, [r2, #36]	; 0x24
   15354:	movw	r0, #257	; 0x101
   15358:	mov	r5, r2
   1535c:	add	r0, r7, r0
   15360:	adds	r1, r0, r1
   15364:	bcs	15894 <__assert_fail@plt+0x3cd0>
   15368:	mov	r0, r4
   1536c:	str	r1, [r5, #36]	; 0x24
   15370:	bl	1b964 <lchmod@@Base+0x44a0>
   15374:	cmp	r0, #0
   15378:	beq	158d4 <__assert_fail@plt+0x3d10>
   1537c:	cmp	r0, r4
   15380:	str	r0, [r5, #24]
   15384:	beq	153ec <__assert_fail@plt+0x3828>
   15388:	ldr	r1, [sp, #32]
   1538c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15390:	ldr	r4, [fp, #-40]	; 0xffffffd8
   15394:	ldrb	r1, [r1]
   15398:	tst	r1, #4
   1539c:	ldr	r1, [sp, #40]	; 0x28
   153a0:	addne	r1, r0, r3
   153a4:	mov	r0, #1
   153a8:	str	r1, [sp, #40]	; 0x28
   153ac:	str	r0, [sp, #16]
   153b0:	b	153f4 <__assert_fail@plt+0x3830>
   153b4:	ldrb	r0, [r9, #20]
   153b8:	cmp	r0, #0
   153bc:	beq	153d0 <__assert_fail@plt+0x380c>
   153c0:	cmp	r0, #46	; 0x2e
   153c4:	ldrbeq	r0, [r9, #21]
   153c8:	cmpeq	r0, #0
   153cc:	bne	152bc <__assert_fail@plt+0x36f8>
   153d0:	ldr	r4, [fp, #-40]	; 0xffffffd8
   153d4:	ldr	r7, [fp, #-36]	; 0xffffffdc
   153d8:	mov	r5, #0
   153dc:	ldr	r6, [r8, #12]
   153e0:	cmp	r6, #0
   153e4:	bne	1527c <__assert_fail@plt+0x36b8>
   153e8:	b	155ac <__assert_fail@plt+0x39e8>
   153ec:	ldr	r4, [fp, #-40]	; 0xffffffd8
   153f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   153f4:	ldr	r0, [r5, #36]	; 0x24
   153f8:	sub	r0, r0, r3
   153fc:	str	r0, [sp, #44]	; 0x2c
   15400:	cmp	r7, r3
   15404:	bcc	1578c <__assert_fail@plt+0x3bc8>
   15408:	ldr	r0, [sp, #20]
   1540c:	str	r0, [r6, #48]	; 0x30
   15410:	ldr	r0, [r5]
   15414:	str	r7, [r6, #40]	; 0x28
   15418:	str	r0, [r6, #4]
   1541c:	ldrd	r0, [r9]
   15420:	strd	r0, [r6, #160]	; 0xa0
   15424:	ldrb	r0, [r5, #48]	; 0x30
   15428:	tst	r0, #4
   1542c:	bne	15438 <__assert_fail@plt+0x3874>
   15430:	str	sl, [r6, #24]
   15434:	b	15454 <__assert_fail@plt+0x3890>
   15438:	ldr	r0, [r6, #28]
   1543c:	ldr	r1, [r6, #52]	; 0x34
   15440:	str	r0, [r6, #24]
   15444:	ldr	r0, [sp, #40]	; 0x28
   15448:	add	r2, r1, #1
   1544c:	mov	r1, sl
   15450:	bl	11804 <memmove@plt>
   15454:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15458:	ldr	sl, [sp, #32]
   1545c:	ldr	r8, [sp, #24]
   15460:	ldr	r0, [r0]
   15464:	ldr	r2, [sl]
   15468:	cmp	r0, #0
   1546c:	beq	15498 <__assert_fail@plt+0x38d4>
   15470:	ands	r0, r2, #1024	; 0x400
   15474:	bne	15498 <__assert_fail@plt+0x38d4>
   15478:	mov	r0, r5
   1547c:	mov	r1, r6
   15480:	mov	r2, #0
   15484:	bl	13e30 <__assert_fail@plt+0x226c>
   15488:	ldr	r7, [fp, #-36]	; 0xffffffdc
   1548c:	mov	r5, #0
   15490:	strh	r0, [r6, #56]	; 0x38
   15494:	b	15510 <__assert_fail@plt+0x394c>
   15498:	ldrb	r3, [r9, #18]
   1549c:	mov	r0, #0
   154a0:	tst	r2, #8
   154a4:	mov	r1, #0
   154a8:	beq	154cc <__assert_fail@plt+0x3908>
   154ac:	orr	r1, r3, #4
   154b0:	cmp	r1, #4
   154b4:	mov	r1, #0
   154b8:	beq	154cc <__assert_fail@plt+0x3908>
   154bc:	eor	r1, r3, #10
   154c0:	and	r2, r2, #16
   154c4:	orrs	r1, r2, r1
   154c8:	movwne	r1, #1
   154cc:	mov	r2, #11
   154d0:	ldr	r7, [fp, #-36]	; 0xffffffdc
   154d4:	mov	r5, #0
   154d8:	strh	r2, [r6, #56]	; 0x38
   154dc:	sub	r2, r3, #1
   154e0:	uxtb	r3, r2
   154e4:	cmp	r3, #11
   154e8:	sxtbls	r0, r2
   154ec:	movwls	r2, #52368	; 0xcc90
   154f0:	movtls	r2, #1
   154f4:	ldrls	r0, [r2, r0, lsl #2]
   154f8:	cmp	r1, #0
   154fc:	str	r0, [r6, #80]	; 0x50
   15500:	mov	r0, #2
   15504:	movwne	r0, #1
   15508:	str	r0, [r6, #112]	; 0x70
   1550c:	str	r5, [r6, #116]	; 0x74
   15510:	cmp	r7, #0
   15514:	str	r5, [r6, #8]
   15518:	ldrne	r0, [sp, #48]	; 0x30
   1551c:	moveq	r7, r6
   15520:	strne	r6, [r0, #8]
   15524:	movw	r0, #10000	; 0x2710
   15528:	cmp	r4, r0
   1552c:	bne	15580 <__assert_fail@plt+0x39bc>
   15530:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15534:	ldr	r0, [r0]
   15538:	cmp	r0, #0
   1553c:	bne	15580 <__assert_fail@plt+0x39bc>
   15540:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15544:	mov	r0, r8
   15548:	bl	15df0 <__assert_fail@plt+0x422c>
   1554c:	mov	r1, #0
   15550:	str	r1, [sp, #8]
   15554:	movw	r1, #19778	; 0x4d42
   15558:	movt	r1, #65363	; 0xff53
   1555c:	cmp	r0, r1
   15560:	movwne	r1, #26985	; 0x6969
   15564:	cmpne	r0, r1
   15568:	beq	15580 <__assert_fail@plt+0x39bc>
   1556c:	movw	r1, #6548	; 0x1994
   15570:	movt	r1, #258	; 0x102
   15574:	cmp	r0, r1
   15578:	movne	r0, #1
   1557c:	strne	r0, [sp, #8]
   15580:	ldr	r0, [sp, #28]
   15584:	add	r4, r4, #1
   15588:	cmp	r0, r4
   1558c:	mov	r0, #0
   15590:	movwls	r0, #15
   15594:	cmp	r0, #0
   15598:	bne	1580c <__assert_fail@plt+0x3c48>
   1559c:	str	r6, [sp, #48]	; 0x30
   155a0:	ldr	r6, [r8, #12]
   155a4:	cmp	r6, #0
   155a8:	bne	1527c <__assert_fail@plt+0x36b8>
   155ac:	ldr	r0, [sp, #16]
   155b0:	ldr	ip, [sp]
   155b4:	ldr	r6, [sp, #8]
   155b8:	ldr	r5, [sp, #52]	; 0x34
   155bc:	tst	r0, #1
   155c0:	beq	155d0 <__assert_fail@plt+0x3a0c>
   155c4:	b	15978 <__assert_fail@plt+0x3db4>
   155c8:	mov	r4, #0
   155cc:	mov	r6, #0
   155d0:	ldrb	r0, [sl]
   155d4:	tst	r0, #4
   155d8:	beq	15604 <__assert_fail@plt+0x3a40>
   155dc:	ldr	r2, [sp, #40]	; 0x28
   155e0:	ldr	r0, [r5, #36]	; 0x24
   155e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155e8:	cmp	r3, r0
   155ec:	sub	r1, r2, #1
   155f0:	mov	r0, #0
   155f4:	moveq	r2, r1
   155f8:	cmp	r4, #0
   155fc:	moveq	r2, r1
   15600:	strb	r0, [r2]
   15604:	ldr	r0, [sp, #12]
   15608:	cmp	r0, #0
   1560c:	movwne	r0, #1
   15610:	orrs	r0, r0, ip
   15614:	beq	15678 <__assert_fail@plt+0x3ab4>
   15618:	cmp	r4, #0
   1561c:	bne	156b8 <__assert_fail@plt+0x3af4>
   15620:	ldr	r0, [sp, #4]
   15624:	cmp	r0, #3
   15628:	bne	15640 <__assert_fail@plt+0x3a7c>
   1562c:	ldrh	r0, [r8, #56]	; 0x38
   15630:	cmp	r0, #4
   15634:	cmpne	r0, #7
   15638:	movne	r0, #6
   1563c:	strhne	r0, [r8, #56]	; 0x38
   15640:	mov	r6, #0
   15644:	cmp	r7, #0
   15648:	beq	15888 <__assert_fail@plt+0x3cc4>
   1564c:	ldrd	r4, [r7, #8]
   15650:	cmp	r5, #0
   15654:	beq	15660 <__assert_fail@plt+0x3a9c>
   15658:	mov	r0, r5
   1565c:	bl	11ba0 <closedir@plt>
   15660:	mov	r0, r7
   15664:	bl	137a4 <__assert_fail@plt+0x1be0>
   15668:	cmp	r4, #0
   1566c:	mov	r7, r4
   15670:	bne	1564c <__assert_fail@plt+0x3a88>
   15674:	b	15888 <__assert_fail@plt+0x3cc4>
   15678:	ldr	r0, [sp, #4]
   1567c:	cmp	r0, #1
   15680:	cmpne	r4, #0
   15684:	bne	156b8 <__assert_fail@plt+0x3af4>
   15688:	ldr	r0, [r8, #48]	; 0x30
   1568c:	cmp	r0, #0
   15690:	beq	15830 <__assert_fail@plt+0x3c6c>
   15694:	ldr	r1, [r8, #4]
   15698:	movw	r3, #52354	; 0xcc82
   1569c:	mov	r0, r5
   156a0:	mvn	r2, #0
   156a4:	movt	r3, #1
   156a8:	bl	14bf4 <__assert_fail@plt+0x3030>
   156ac:	cmp	r0, #0
   156b0:	bne	15840 <__assert_fail@plt+0x3c7c>
   156b4:	b	15618 <__assert_fail@plt+0x3a54>
   156b8:	tst	r6, #1
   156bc:	beq	156f4 <__assert_fail@plt+0x3b30>
   156c0:	movw	r0, #23992	; 0x5db8
   156c4:	mov	r1, r7
   156c8:	mov	r2, r4
   156cc:	movt	r0, #1
   156d0:	str	r0, [r5, #44]	; 0x2c
   156d4:	mov	r0, r5
   156d8:	bl	13fc8 <__assert_fail@plt+0x2404>
   156dc:	mov	r6, r0
   156e0:	mov	r0, #0
   156e4:	str	r0, [r5, #44]	; 0x2c
   156e8:	mov	r0, r6
   156ec:	sub	sp, fp, #28
   156f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156f4:	cmp	r4, #2
   156f8:	bcc	158b4 <__assert_fail@plt+0x3cf0>
   156fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15700:	ldr	r0, [r0]
   15704:	cmp	r0, #0
   15708:	beq	158c4 <__assert_fail@plt+0x3d00>
   1570c:	mov	r0, r5
   15710:	mov	r1, r7
   15714:	mov	r2, r4
   15718:	bl	13fc8 <__assert_fail@plt+0x2404>
   1571c:	mov	r6, r0
   15720:	mov	r0, r6
   15724:	sub	sp, fp, #28
   15728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1572c:	ldr	r0, [sp, #36]	; 0x24
   15730:	ldr	r0, [r0]
   15734:	cmp	r0, #0
   15738:	beq	15754 <__assert_fail@plt+0x3b90>
   1573c:	str	r0, [r8, #32]
   15740:	ldr	r0, [sp, #12]
   15744:	orrs	r0, r0, r4
   15748:	mov	r0, #4
   1574c:	movwne	r0, #7
   15750:	strh	r0, [r8, #56]	; 0x38
   15754:	ldr	r0, [r8, #12]
   15758:	ldr	r6, [sp, #8]
   1575c:	ldr	r7, [fp, #-36]	; 0xffffffdc
   15760:	ldr	r5, [sp, #52]	; 0x34
   15764:	cmp	r0, #0
   15768:	beq	15968 <__assert_fail@plt+0x3da4>
   1576c:	bl	11ba0 <closedir@plt>
   15770:	mov	r0, #0
   15774:	ldr	ip, [sp]
   15778:	str	r0, [r8, #12]
   1577c:	ldr	r0, [sp, #16]
   15780:	tst	r0, #1
   15784:	beq	155d0 <__assert_fail@plt+0x3a0c>
   15788:	b	15978 <__assert_fail@plt+0x3db4>
   1578c:	mov	r0, r6
   15790:	bl	137a4 <__assert_fail@plt+0x1be0>
   15794:	ldr	r6, [fp, #-36]	; 0xffffffdc
   15798:	ldr	r7, [sp, #24]
   1579c:	cmp	r6, #0
   157a0:	beq	157cc <__assert_fail@plt+0x3c08>
   157a4:	ldrd	r4, [r6, #8]
   157a8:	cmp	r5, #0
   157ac:	beq	157b8 <__assert_fail@plt+0x3bf4>
   157b0:	mov	r0, r5
   157b4:	bl	11ba0 <closedir@plt>
   157b8:	mov	r0, r6
   157bc:	bl	137a4 <__assert_fail@plt+0x1be0>
   157c0:	cmp	r4, #0
   157c4:	mov	r6, r4
   157c8:	bne	157a4 <__assert_fail@plt+0x3be0>
   157cc:	ldr	r0, [r7, #12]
   157d0:	bl	11ba0 <closedir@plt>
   157d4:	ldr	r1, [sp, #32]
   157d8:	mov	r6, #0
   157dc:	mov	r0, #7
   157e0:	str	r6, [r7, #12]
   157e4:	strh	r0, [r7, #56]	; 0x38
   157e8:	ldr	r0, [r1]
   157ec:	orr	r0, r0, #8192	; 0x2000
   157f0:	str	r0, [r1]
   157f4:	ldr	r1, [sp, #36]	; 0x24
   157f8:	mov	r0, #36	; 0x24
   157fc:	str	r0, [r1]
   15800:	mov	r0, r6
   15804:	sub	sp, fp, #28
   15808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1580c:	ldr	ip, [sp]
   15810:	cmp	r0, #15
   15814:	bne	15a50 <__assert_fail@plt+0x3e8c>
   15818:	ldr	r6, [sp, #8]
   1581c:	ldr	r5, [sp, #52]	; 0x34
   15820:	ldr	r0, [sp, #16]
   15824:	tst	r0, #1
   15828:	beq	155d0 <__assert_fail@plt+0x3a0c>
   1582c:	b	15978 <__assert_fail@plt+0x3db4>
   15830:	mov	r0, r5
   15834:	bl	15a78 <__assert_fail@plt+0x3eb4>
   15838:	cmp	r0, #0
   1583c:	beq	15618 <__assert_fail@plt+0x3a54>
   15840:	mov	r0, #7
   15844:	mov	r6, #0
   15848:	cmp	r7, #0
   1584c:	strh	r0, [r8, #56]	; 0x38
   15850:	ldr	r0, [sl]
   15854:	orr	r0, r0, #8192	; 0x2000
   15858:	str	r0, [sl]
   1585c:	beq	15888 <__assert_fail@plt+0x3cc4>
   15860:	ldrd	r4, [r7, #8]
   15864:	cmp	r5, #0
   15868:	beq	15874 <__assert_fail@plt+0x3cb0>
   1586c:	mov	r0, r5
   15870:	bl	11ba0 <closedir@plt>
   15874:	mov	r0, r7
   15878:	bl	137a4 <__assert_fail@plt+0x1be0>
   1587c:	cmp	r4, #0
   15880:	mov	r7, r4
   15884:	bne	15860 <__assert_fail@plt+0x3c9c>
   15888:	mov	r0, r6
   1588c:	sub	sp, fp, #28
   15890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15894:	mov	r0, r4
   15898:	bl	137a4 <__assert_fail@plt+0x1be0>
   1589c:	ldr	r1, [sp, #36]	; 0x24
   158a0:	mov	r0, #0
   158a4:	str	r0, [r5, #24]
   158a8:	mov	r0, #36	; 0x24
   158ac:	str	r0, [r1]
   158b0:	b	158e4 <__assert_fail@plt+0x3d20>
   158b4:	mov	r6, r7
   158b8:	mov	r0, r6
   158bc:	sub	sp, fp, #28
   158c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158c4:	mov	r6, r7
   158c8:	mov	r0, r6
   158cc:	sub	sp, fp, #28
   158d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158d4:	ldr	r0, [r5, #24]
   158d8:	bl	137a4 <__assert_fail@plt+0x1be0>
   158dc:	mov	r0, #0
   158e0:	str	r0, [r5, #24]
   158e4:	ldr	r8, [sp, #24]
   158e8:	ldr	r0, [sp, #36]	; 0x24
   158ec:	ldr	r4, [r0]
   158f0:	mov	r0, r6
   158f4:	bl	137a4 <__assert_fail@plt+0x1be0>
   158f8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   158fc:	cmp	r5, #0
   15900:	beq	1592c <__assert_fail@plt+0x3d68>
   15904:	ldrd	r6, [r5, #8]
   15908:	cmp	r7, #0
   1590c:	beq	15918 <__assert_fail@plt+0x3d54>
   15910:	mov	r0, r7
   15914:	bl	11ba0 <closedir@plt>
   15918:	mov	r0, r5
   1591c:	bl	137a4 <__assert_fail@plt+0x1be0>
   15920:	cmp	r6, #0
   15924:	mov	r5, r6
   15928:	bne	15904 <__assert_fail@plt+0x3d40>
   1592c:	ldr	r0, [r8, #12]
   15930:	bl	11ba0 <closedir@plt>
   15934:	ldr	r1, [sp, #32]
   15938:	mov	r6, #0
   1593c:	mov	r0, #7
   15940:	str	r6, [r8, #12]
   15944:	strh	r0, [r8, #56]	; 0x38
   15948:	ldr	r0, [r1]
   1594c:	orr	r0, r0, #8192	; 0x2000
   15950:	str	r0, [r1]
   15954:	ldr	r0, [sp, #36]	; 0x24
   15958:	str	r4, [r0]
   1595c:	mov	r0, r6
   15960:	sub	sp, fp, #28
   15964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15968:	ldr	ip, [sp]
   1596c:	ldr	r0, [sp, #16]
   15970:	tst	r0, #1
   15974:	beq	155d0 <__assert_fail@plt+0x3a0c>
   15978:	ldr	r1, [r5, #4]
   1597c:	ldr	r0, [r5, #24]
   15980:	cmp	r1, #0
   15984:	beq	159b4 <__assert_fail@plt+0x3df0>
   15988:	ldr	r2, [r1, #24]
   1598c:	add	r3, r1, #168	; 0xa8
   15990:	cmp	r2, r3
   15994:	ldrne	r3, [r1, #28]
   15998:	subne	r2, r2, r3
   1599c:	addne	r2, r0, r2
   159a0:	strne	r2, [r1, #24]
   159a4:	str	r0, [r1, #28]
   159a8:	ldr	r1, [r1, #8]
   159ac:	cmp	r1, #0
   159b0:	bne	15988 <__assert_fail@plt+0x3dc4>
   159b4:	ldr	r1, [r7, #48]	; 0x30
   159b8:	cmp	r1, #0
   159bc:	blt	155d0 <__assert_fail@plt+0x3a0c>
   159c0:	mov	r1, r7
   159c4:	ldr	r2, [r1, #24]
   159c8:	add	r3, r1, #168	; 0xa8
   159cc:	cmp	r2, r3
   159d0:	ldrne	r3, [r1, #28]
   159d4:	subne	r2, r2, r3
   159d8:	addne	r2, r0, r2
   159dc:	strne	r2, [r1, #24]
   159e0:	str	r0, [r1, #28]
   159e4:	ldr	r2, [r1, #8]
   159e8:	cmp	r2, #0
   159ec:	ldreq	r2, [r1, #4]
   159f0:	ldr	r1, [r2, #48]	; 0x30
   159f4:	cmn	r1, #1
   159f8:	mov	r1, r2
   159fc:	bgt	159c4 <__assert_fail@plt+0x3e00>
   15a00:	b	155d0 <__assert_fail@plt+0x3a0c>
   15a04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15a08:	mov	r0, r8
   15a0c:	bl	15df0 <__assert_fail@plt+0x422c>
   15a10:	movw	r1, #26984	; 0x6968
   15a14:	cmp	r0, r1
   15a18:	ble	15a60 <__assert_fail@plt+0x3e9c>
   15a1c:	movw	r1, #26985	; 0x6969
   15a20:	cmp	r0, r1
   15a24:	movwne	r1, #16719	; 0x414f
   15a28:	movtne	r1, #21318	; 0x5346
   15a2c:	cmpne	r0, r1
   15a30:	beq	15114 <__assert_fail@plt+0x3550>
   15a34:	movw	r1, #40864	; 0x9fa0
   15a38:	cmp	r0, r1
   15a3c:	beq	15114 <__assert_fail@plt+0x3550>
   15a40:	b	150e4 <__assert_fail@plt+0x3520>
   15a44:	bl	11a08 <__errno_location@plt>
   15a48:	mov	r1, #12
   15a4c:	str	r1, [r0]
   15a50:	mov	r6, #0
   15a54:	mov	r0, r6
   15a58:	sub	sp, fp, #28
   15a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a60:	movw	r1, #19778	; 0x4d42
   15a64:	movt	r1, #65363	; 0xff53
   15a68:	cmp	r0, r1
   15a6c:	cmpne	r0, #0
   15a70:	beq	15114 <__assert_fail@plt+0x3550>
   15a74:	b	150e4 <__assert_fail@plt+0x3520>
   15a78:	push	{r4, r5, fp, lr}
   15a7c:	add	fp, sp, #8
   15a80:	mov	r5, r0
   15a84:	ldr	r0, [r0, #48]	; 0x30
   15a88:	mov	r4, #0
   15a8c:	tst	r0, #4
   15a90:	bne	15ad4 <__assert_fail@plt+0x3f10>
   15a94:	tst	r0, #512	; 0x200
   15a98:	bne	15ab4 <__assert_fail@plt+0x3ef0>
   15a9c:	ldr	r0, [r5, #28]
   15aa0:	bl	11ae0 <fchdir@plt>
   15aa4:	mov	r4, r0
   15aa8:	cmp	r0, #0
   15aac:	movwne	r4, #1
   15ab0:	b	15ad4 <__assert_fail@plt+0x3f10>
   15ab4:	ldr	r1, [r5, #32]
   15ab8:	add	r0, r5, #60	; 0x3c
   15abc:	bl	17420 <__assert_fail@plt+0x585c>
   15ac0:	cmp	r0, #0
   15ac4:	blt	15acc <__assert_fail@plt+0x3f08>
   15ac8:	bl	11b70 <close@plt>
   15acc:	mvn	r0, #99	; 0x63
   15ad0:	str	r0, [r5, #32]
   15ad4:	add	r5, r5, #60	; 0x3c
   15ad8:	b	15ae0 <__assert_fail@plt+0x3f1c>
   15adc:	bl	11b70 <close@plt>
   15ae0:	mov	r0, r5
   15ae4:	bl	17418 <__assert_fail@plt+0x5854>
   15ae8:	cmp	r0, #0
   15aec:	movne	r0, r4
   15af0:	popne	{r4, r5, fp, pc}
   15af4:	mov	r0, r5
   15af8:	bl	1746c <__assert_fail@plt+0x58a8>
   15afc:	cmp	r0, #0
   15b00:	bge	15adc <__assert_fail@plt+0x3f18>
   15b04:	b	15ae0 <__assert_fail@plt+0x3f1c>
   15b08:	cmp	r2, #5
   15b0c:	movcc	r0, #0
   15b10:	strhcc	r2, [r1, #60]	; 0x3c
   15b14:	bxcc	lr
   15b18:	push	{fp, lr}
   15b1c:	mov	fp, sp
   15b20:	bl	11a08 <__errno_location@plt>
   15b24:	mov	r1, #22
   15b28:	str	r1, [r0]
   15b2c:	mov	r0, #1
   15b30:	pop	{fp, pc}
   15b34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b38:	add	fp, sp, #28
   15b3c:	sub	sp, sp, #4
   15b40:	mov	r9, r0
   15b44:	orr	r0, r1, #4096	; 0x1000
   15b48:	cmp	r0, #4096	; 0x1000
   15b4c:	bne	15b94 <__assert_fail@plt+0x3fd0>
   15b50:	ldr	r8, [r9]
   15b54:	mov	r7, r1
   15b58:	bl	11a08 <__errno_location@plt>
   15b5c:	mov	r5, #0
   15b60:	mov	sl, r0
   15b64:	str	r5, [r0]
   15b68:	ldrb	r0, [r9, #49]	; 0x31
   15b6c:	tst	r0, #32
   15b70:	bne	15b88 <__assert_fail@plt+0x3fc4>
   15b74:	ldrh	r0, [r8, #56]	; 0x38
   15b78:	cmp	r0, #1
   15b7c:	beq	15bb0 <__assert_fail@plt+0x3fec>
   15b80:	cmp	r0, #9
   15b84:	ldreq	r5, [r8, #8]
   15b88:	mov	r0, r5
   15b8c:	sub	sp, fp, #28
   15b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b94:	bl	11a08 <__errno_location@plt>
   15b98:	mov	r1, #22
   15b9c:	mov	r5, #0
   15ba0:	str	r1, [r0]
   15ba4:	mov	r0, r5
   15ba8:	sub	sp, fp, #28
   15bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bb0:	ldr	r6, [r9, #4]
   15bb4:	cmp	r6, #0
   15bb8:	beq	15be8 <__assert_fail@plt+0x4024>
   15bbc:	ldr	r4, [r6, #8]
   15bc0:	ldr	r1, [r6, #12]
   15bc4:	cmp	r1, #0
   15bc8:	beq	15bd4 <__assert_fail@plt+0x4010>
   15bcc:	mov	r0, r1
   15bd0:	bl	11ba0 <closedir@plt>
   15bd4:	mov	r0, r6
   15bd8:	bl	137a4 <__assert_fail@plt+0x1be0>
   15bdc:	cmp	r4, #0
   15be0:	mov	r6, r4
   15be4:	bne	15bbc <__assert_fail@plt+0x3ff8>
   15be8:	cmp	r7, #4096	; 0x1000
   15bec:	mov	r4, #1
   15bf0:	ldreq	r0, [r9, #48]	; 0x30
   15bf4:	moveq	r4, #2
   15bf8:	orreq	r0, r0, #4096	; 0x1000
   15bfc:	streq	r0, [r9, #48]	; 0x30
   15c00:	ldr	r0, [r8, #48]	; 0x30
   15c04:	cmp	r0, #0
   15c08:	bne	15c60 <__assert_fail@plt+0x409c>
   15c0c:	ldr	r0, [r8, #24]
   15c10:	ldrb	r0, [r0]
   15c14:	cmp	r0, #47	; 0x2f
   15c18:	beq	15c60 <__assert_fail@plt+0x409c>
   15c1c:	ldr	r0, [r9, #48]	; 0x30
   15c20:	tst	r0, #4
   15c24:	bne	15c60 <__assert_fail@plt+0x409c>
   15c28:	mov	r1, #32768	; 0x8000
   15c2c:	tst	r0, #512	; 0x200
   15c30:	and	r1, r1, r0, lsl #11
   15c34:	orr	r1, r1, #18688	; 0x4900
   15c38:	orr	r2, r1, #524288	; 0x80000
   15c3c:	bne	15c80 <__assert_fail@plt+0x40bc>
   15c40:	movw	r0, #52355	; 0xcc83
   15c44:	mov	r1, r2
   15c48:	movt	r0, #1
   15c4c:	bl	1be44 <lchmod@@Base+0x4980>
   15c50:	mov	r8, r0
   15c54:	cmn	r0, #1
   15c58:	bgt	15c9c <__assert_fail@plt+0x40d8>
   15c5c:	b	15ce4 <__assert_fail@plt+0x4120>
   15c60:	mov	r0, r9
   15c64:	mov	r1, r4
   15c68:	bl	14e9c <__assert_fail@plt+0x32d8>
   15c6c:	mov	r5, r0
   15c70:	str	r0, [r9, #4]
   15c74:	mov	r0, r5
   15c78:	sub	sp, fp, #28
   15c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c80:	ldr	r0, [r9, #32]
   15c84:	movw	r1, #52355	; 0xcc83
   15c88:	movt	r1, #1
   15c8c:	bl	17bec <lchmod@@Base+0x728>
   15c90:	mov	r8, r0
   15c94:	cmn	r0, #1
   15c98:	ble	15ce4 <__assert_fail@plt+0x4120>
   15c9c:	mov	r0, r9
   15ca0:	mov	r1, r4
   15ca4:	bl	14e9c <__assert_fail@plt+0x32d8>
   15ca8:	str	r0, [r9, #4]
   15cac:	ldrb	r0, [r9, #49]	; 0x31
   15cb0:	tst	r0, #2
   15cb4:	bne	15cf8 <__assert_fail@plt+0x4134>
   15cb8:	mov	r0, r8
   15cbc:	bl	11ae0 <fchdir@plt>
   15cc0:	cmp	r0, #0
   15cc4:	beq	15d34 <__assert_fail@plt+0x4170>
   15cc8:	ldr	r4, [sl]
   15ccc:	mov	r0, r8
   15cd0:	bl	11b70 <close@plt>
   15cd4:	str	r4, [sl]
   15cd8:	mov	r0, r5
   15cdc:	sub	sp, fp, #28
   15ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ce4:	mov	r5, #0
   15ce8:	str	r5, [r9, #4]
   15cec:	mov	r0, r5
   15cf0:	sub	sp, fp, #28
   15cf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cf8:	ldr	r1, [r9, #32]
   15cfc:	cmp	r1, r8
   15d00:	bne	15d0c <__assert_fail@plt+0x4148>
   15d04:	cmn	r1, #100	; 0x64
   15d08:	bne	15d4c <__assert_fail@plt+0x4188>
   15d0c:	add	r0, r9, #60	; 0x3c
   15d10:	bl	17420 <__assert_fail@plt+0x585c>
   15d14:	cmp	r0, #0
   15d18:	blt	15d20 <__assert_fail@plt+0x415c>
   15d1c:	bl	11b70 <close@plt>
   15d20:	str	r8, [r9, #32]
   15d24:	ldr	r5, [r9, #4]
   15d28:	mov	r0, r5
   15d2c:	sub	sp, fp, #28
   15d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d34:	mov	r0, r8
   15d38:	bl	11b70 <close@plt>
   15d3c:	ldr	r5, [r9, #4]
   15d40:	mov	r0, r5
   15d44:	sub	sp, fp, #28
   15d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d4c:	bl	11b64 <abort@plt>
   15d50:	push	{fp, lr}
   15d54:	mov	fp, sp
   15d58:	mov	r2, r1
   15d5c:	ldrd	r0, [r0, #8]
   15d60:	mov	r3, #0
   15d64:	bl	1c1c4 <lchmod@@Base+0x4d00>
   15d68:	mov	r0, r2
   15d6c:	pop	{fp, pc}
   15d70:	push	{r4, r5, fp, lr}
   15d74:	add	fp, sp, #8
   15d78:	ldrd	r2, [r1, #8]
   15d7c:	ldrd	r4, [r0, #8]
   15d80:	eor	r3, r5, r3
   15d84:	eor	r2, r4, r2
   15d88:	orrs	r2, r2, r3
   15d8c:	mov	r2, #0
   15d90:	bne	15db0 <__assert_fail@plt+0x41ec>
   15d94:	ldrd	r2, [r1]
   15d98:	ldrd	r0, [r0]
   15d9c:	eor	r1, r1, r3
   15da0:	eor	r0, r0, r2
   15da4:	orr	r0, r0, r1
   15da8:	clz	r0, r0
   15dac:	lsr	r2, r0, #5
   15db0:	mov	r0, r2
   15db4:	pop	{r4, r5, fp, pc}
   15db8:	push	{r4, r5, fp, lr}
   15dbc:	add	fp, sp, #8
   15dc0:	ldr	r0, [r0]
   15dc4:	ldrd	r2, [r0, #160]	; 0xa0
   15dc8:	ldr	r0, [r1]
   15dcc:	ldrd	r4, [r0, #160]	; 0xa0
   15dd0:	mov	r0, #0
   15dd4:	subs	r1, r4, r2
   15dd8:	sbcs	r1, r5, r3
   15ddc:	movwcc	r0, #1
   15de0:	subs	r1, r2, r4
   15de4:	sbcs	r1, r3, r5
   15de8:	subcc	r0, r0, #1
   15dec:	pop	{r4, r5, fp, pc}
   15df0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15df4:	add	fp, sp, #24
   15df8:	sub	sp, sp, #96	; 0x60
   15dfc:	ldr	r7, [r0, #44]	; 0x2c
   15e00:	mov	r4, r0
   15e04:	mov	r5, #0
   15e08:	ldrb	r0, [r7, #49]	; 0x31
   15e0c:	tst	r0, #2
   15e10:	beq	15ec0 <__assert_fail@plt+0x42fc>
   15e14:	ldr	r6, [r7, #52]	; 0x34
   15e18:	mov	r9, r1
   15e1c:	cmp	r6, #0
   15e20:	bne	15e60 <__assert_fail@plt+0x429c>
   15e24:	movw	r0, #14244	; 0x37a4
   15e28:	movw	r2, #24364	; 0x5f2c
   15e2c:	movw	r3, #24396	; 0x5f4c
   15e30:	mov	r1, #0
   15e34:	mov	r8, #0
   15e38:	movt	r0, #1
   15e3c:	movt	r2, #1
   15e40:	movt	r3, #1
   15e44:	str	r0, [sp]
   15e48:	mov	r0, #13
   15e4c:	bl	16410 <__assert_fail@plt+0x484c>
   15e50:	mov	r6, r0
   15e54:	cmp	r0, #0
   15e58:	str	r0, [r7, #52]	; 0x34
   15e5c:	beq	15ea0 <__assert_fail@plt+0x42dc>
   15e60:	ldrd	r0, [r4, #64]	; 0x40
   15e64:	str	r1, [sp, #12]
   15e68:	str	r0, [sp, #8]
   15e6c:	add	r1, sp, #8
   15e70:	mov	r0, r6
   15e74:	bl	16148 <__assert_fail@plt+0x4584>
   15e78:	cmp	r0, #0
   15e7c:	beq	15e90 <__assert_fail@plt+0x42cc>
   15e80:	ldr	r5, [r0, #8]
   15e84:	mov	r0, r5
   15e88:	sub	sp, fp, #24
   15e8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15e90:	mov	r8, #1
   15e94:	cmp	r9, #0
   15e98:	bge	15eac <__assert_fail@plt+0x42e8>
   15e9c:	b	15ec0 <__assert_fail@plt+0x42fc>
   15ea0:	mov	r6, #0
   15ea4:	cmp	r9, #0
   15ea8:	blt	15ec0 <__assert_fail@plt+0x42fc>
   15eac:	add	r1, sp, #8
   15eb0:	mov	r0, r9
   15eb4:	bl	1178c <fstatfs64@plt>
   15eb8:	cmp	r0, #0
   15ebc:	beq	15ecc <__assert_fail@plt+0x4308>
   15ec0:	mov	r0, r5
   15ec4:	sub	sp, fp, #24
   15ec8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ecc:	cmp	r8, #0
   15ed0:	beq	15f1c <__assert_fail@plt+0x4358>
   15ed4:	mov	r0, #16
   15ed8:	bl	1b934 <lchmod@@Base+0x4470>
   15edc:	cmp	r0, #0
   15ee0:	beq	15f1c <__assert_fail@plt+0x4358>
   15ee4:	mov	r5, r0
   15ee8:	ldrd	r0, [r4, #64]	; 0x40
   15eec:	ldr	r2, [sp, #8]
   15ef0:	stm	r5, {r0, r1, r2}
   15ef4:	mov	r0, r6
   15ef8:	mov	r1, r5
   15efc:	bl	17048 <__assert_fail@plt+0x5484>
   15f00:	cmp	r0, #0
   15f04:	beq	15f14 <__assert_fail@plt+0x4350>
   15f08:	cmp	r0, r5
   15f0c:	beq	15f1c <__assert_fail@plt+0x4358>
   15f10:	bl	11b64 <abort@plt>
   15f14:	mov	r0, r5
   15f18:	bl	137a4 <__assert_fail@plt+0x1be0>
   15f1c:	ldr	r5, [sp, #8]
   15f20:	mov	r0, r5
   15f24:	sub	sp, fp, #24
   15f28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15f2c:	push	{fp, lr}
   15f30:	mov	fp, sp
   15f34:	mov	r2, r1
   15f38:	ldrd	r0, [r0]
   15f3c:	mov	r3, #0
   15f40:	bl	1c1c4 <lchmod@@Base+0x4d00>
   15f44:	mov	r0, r2
   15f48:	pop	{fp, pc}
   15f4c:	ldrd	r2, [r1]
   15f50:	ldrd	r0, [r0]
   15f54:	eor	r1, r1, r3
   15f58:	eor	r0, r0, r2
   15f5c:	orr	r0, r0, r1
   15f60:	clz	r0, r0
   15f64:	lsr	r0, r0, #5
   15f68:	bx	lr
   15f6c:	andeq	r0, r0, r0
   15f70:	ldr	r0, [r0, #8]
   15f74:	bx	lr
   15f78:	ldr	r0, [r0, #12]
   15f7c:	bx	lr
   15f80:	ldr	r0, [r0, #16]
   15f84:	bx	lr
   15f88:	ldm	r0, {r2, ip}
   15f8c:	mov	r0, #0
   15f90:	cmp	r2, ip
   15f94:	bxcs	lr
   15f98:	mov	r0, #0
   15f9c:	ldr	r1, [r2]
   15fa0:	cmp	r1, #0
   15fa4:	beq	15fc8 <__assert_fail@plt+0x4404>
   15fa8:	mov	r3, #0
   15fac:	mov	r1, r2
   15fb0:	ldr	r1, [r1, #4]
   15fb4:	add	r3, r3, #1
   15fb8:	cmp	r1, #0
   15fbc:	bne	15fb0 <__assert_fail@plt+0x43ec>
   15fc0:	cmp	r3, r0
   15fc4:	movhi	r0, r3
   15fc8:	add	r2, r2, #8
   15fcc:	cmp	r2, ip
   15fd0:	bcc	15f9c <__assert_fail@plt+0x43d8>
   15fd4:	bx	lr
   15fd8:	push	{fp, lr}
   15fdc:	mov	fp, sp
   15fe0:	ldm	r0, {r3, ip}
   15fe4:	mov	lr, #0
   15fe8:	mov	r1, #0
   15fec:	cmp	r3, ip
   15ff0:	bcs	1602c <__assert_fail@plt+0x4468>
   15ff4:	mov	r1, #0
   15ff8:	mov	lr, #0
   15ffc:	ldr	r2, [r3]
   16000:	cmp	r2, #0
   16004:	beq	16020 <__assert_fail@plt+0x445c>
   16008:	mov	r2, r3
   1600c:	ldr	r2, [r2, #4]
   16010:	add	r1, r1, #1
   16014:	cmp	r2, #0
   16018:	bne	1600c <__assert_fail@plt+0x4448>
   1601c:	add	lr, lr, #1
   16020:	add	r3, r3, #8
   16024:	cmp	r3, ip
   16028:	bcc	15ffc <__assert_fail@plt+0x4438>
   1602c:	ldr	r2, [r0, #12]
   16030:	cmp	lr, r2
   16034:	bne	1604c <__assert_fail@plt+0x4488>
   16038:	ldr	r2, [r0, #16]
   1603c:	mov	r0, #1
   16040:	cmp	r1, r2
   16044:	movne	r0, #0
   16048:	pop	{fp, pc}
   1604c:	mov	r0, #0
   16050:	pop	{fp, pc}
   16054:	nop	{0}
   16058:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1605c:	add	fp, sp, #24
   16060:	sub	sp, sp, #8
   16064:	ldr	r6, [r0]
   16068:	ldmib	r0, {r2, r7, r8}
   1606c:	ldr	r3, [r0, #16]
   16070:	mov	r4, r1
   16074:	mov	r5, #0
   16078:	cmp	r6, r2
   1607c:	bcs	160bc <__assert_fail@plt+0x44f8>
   16080:	mov	r5, #0
   16084:	ldr	r0, [r6]
   16088:	cmp	r0, #0
   1608c:	beq	160b0 <__assert_fail@plt+0x44ec>
   16090:	mov	r0, #0
   16094:	mov	r1, r6
   16098:	ldr	r1, [r1, #4]
   1609c:	add	r0, r0, #1
   160a0:	cmp	r1, #0
   160a4:	bne	16098 <__assert_fail@plt+0x44d4>
   160a8:	cmp	r0, r5
   160ac:	movhi	r5, r0
   160b0:	add	r6, r6, #8
   160b4:	cmp	r6, r2
   160b8:	bcc	16084 <__assert_fail@plt+0x44c0>
   160bc:	movw	r2, #52416	; 0xccc0
   160c0:	mov	r0, r4
   160c4:	mov	r1, #1
   160c8:	movt	r2, #1
   160cc:	bl	11a50 <__fprintf_chk@plt>
   160d0:	movw	r2, #52440	; 0xccd8
   160d4:	mov	r0, r4
   160d8:	mov	r1, #1
   160dc:	mov	r3, r7
   160e0:	movt	r2, #1
   160e4:	bl	11a50 <__fprintf_chk@plt>
   160e8:	vldr	d16, [pc, #80]	; 16140 <__assert_fail@plt+0x457c>
   160ec:	vmov	s0, r8
   160f0:	movw	r2, #52464	; 0xccf0
   160f4:	mov	r0, r4
   160f8:	mov	r1, #1
   160fc:	mov	r3, r8
   16100:	vcvt.f64.u32	d17, s0
   16104:	vmov	s0, r7
   16108:	movt	r2, #1
   1610c:	vcvt.f64.u32	d18, s0
   16110:	vmul.f64	d16, d17, d16
   16114:	vdiv.f64	d16, d16, d18
   16118:	vstr	d16, [sp]
   1611c:	bl	11a50 <__fprintf_chk@plt>
   16120:	movw	r2, #52497	; 0xcd11
   16124:	mov	r0, r4
   16128:	mov	r1, #1
   1612c:	mov	r3, r5
   16130:	movt	r2, #1
   16134:	sub	sp, fp, #24
   16138:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1613c:	b	11a50 <__fprintf_chk@plt>
   16140:	andeq	r0, r0, r0
   16144:	subsmi	r0, r9, r0
   16148:	push	{r4, r5, r6, r7, fp, lr}
   1614c:	add	fp, sp, #16
   16150:	mov	r4, r1
   16154:	ldr	r1, [r0, #8]
   16158:	ldr	r2, [r0, #24]
   1615c:	mov	r5, r0
   16160:	mov	r0, r4
   16164:	blx	r2
   16168:	ldr	r1, [r5, #8]
   1616c:	cmp	r0, r1
   16170:	bcs	161dc <__assert_fail@plt+0x4618>
   16174:	ldr	r7, [r5]
   16178:	mov	r6, #0
   1617c:	ldr	r1, [r7, r0, lsl #3]!
   16180:	cmp	r1, #0
   16184:	cmpne	r7, #0
   16188:	bne	16198 <__assert_fail@plt+0x45d4>
   1618c:	mov	r0, r6
   16190:	pop	{r4, r5, r6, r7, fp, pc}
   16194:	ldr	r1, [r7]
   16198:	cmp	r1, r4
   1619c:	beq	161c4 <__assert_fail@plt+0x4600>
   161a0:	ldr	r2, [r5, #28]
   161a4:	mov	r0, r4
   161a8:	blx	r2
   161ac:	cmp	r0, #0
   161b0:	bne	161d0 <__assert_fail@plt+0x460c>
   161b4:	ldr	r7, [r7, #4]
   161b8:	cmp	r7, #0
   161bc:	bne	16194 <__assert_fail@plt+0x45d0>
   161c0:	b	1618c <__assert_fail@plt+0x45c8>
   161c4:	mov	r6, r4
   161c8:	mov	r0, r6
   161cc:	pop	{r4, r5, r6, r7, fp, pc}
   161d0:	ldr	r6, [r7]
   161d4:	mov	r0, r6
   161d8:	pop	{r4, r5, r6, r7, fp, pc}
   161dc:	bl	11b64 <abort@plt>
   161e0:	ldr	r1, [r0, #16]
   161e4:	cmp	r1, #0
   161e8:	moveq	r0, #0
   161ec:	bxeq	lr
   161f0:	ldm	r0, {r1, r2}
   161f4:	cmp	r1, r2
   161f8:	bcs	16210 <__assert_fail@plt+0x464c>
   161fc:	ldr	r0, [r1], #8
   16200:	cmp	r0, #0
   16204:	bxne	lr
   16208:	cmp	r1, r2
   1620c:	bcc	161fc <__assert_fail@plt+0x4638>
   16210:	push	{fp, lr}
   16214:	mov	fp, sp
   16218:	bl	11b64 <abort@plt>
   1621c:	push	{r4, r5, fp, lr}
   16220:	add	fp, sp, #8
   16224:	mov	r5, r1
   16228:	ldr	r1, [r0, #8]
   1622c:	ldr	r2, [r0, #24]
   16230:	mov	r4, r0
   16234:	mov	r0, r5
   16238:	blx	r2
   1623c:	ldr	r1, [r4, #8]
   16240:	cmp	r0, r1
   16244:	bcs	162a0 <__assert_fail@plt+0x46dc>
   16248:	ldr	r1, [r4]
   1624c:	add	r2, r1, r0, lsl #3
   16250:	ldr	r3, [r2]
   16254:	ldr	r2, [r2, #4]
   16258:	cmp	r3, r5
   1625c:	beq	1626c <__assert_fail@plt+0x46a8>
   16260:	cmp	r2, #0
   16264:	bne	16250 <__assert_fail@plt+0x468c>
   16268:	b	16278 <__assert_fail@plt+0x46b4>
   1626c:	cmp	r2, #0
   16270:	ldrne	r0, [r2]
   16274:	popne	{r4, r5, fp, pc}
   16278:	ldr	r2, [r4, #4]
   1627c:	add	r0, r1, r0, lsl #3
   16280:	add	r1, r0, #8
   16284:	cmp	r1, r2
   16288:	movcs	r0, #0
   1628c:	popcs	{r4, r5, fp, pc}
   16290:	ldr	r0, [r1], #8
   16294:	cmp	r0, #0
   16298:	popne	{r4, r5, fp, pc}
   1629c:	b	16284 <__assert_fail@plt+0x46c0>
   162a0:	bl	11b64 <abort@plt>
   162a4:	push	{r4, r5, fp, lr}
   162a8:	add	fp, sp, #8
   162ac:	ldm	r0, {r5, lr}
   162b0:	mov	ip, r0
   162b4:	mov	r0, #0
   162b8:	cmp	r5, lr
   162bc:	bcs	16318 <__assert_fail@plt+0x4754>
   162c0:	mov	r0, #0
   162c4:	ldr	r3, [r5]
   162c8:	cmp	r3, #0
   162cc:	cmpne	r5, #0
   162d0:	bne	162e4 <__assert_fail@plt+0x4720>
   162d4:	add	r5, r5, #8
   162d8:	cmp	r5, lr
   162dc:	bcc	162c4 <__assert_fail@plt+0x4700>
   162e0:	b	16318 <__assert_fail@plt+0x4754>
   162e4:	mov	r3, r5
   162e8:	cmp	r0, r2
   162ec:	popcs	{r4, r5, fp, pc}
   162f0:	ldr	r4, [r3]
   162f4:	str	r4, [r1, r0, lsl #2]
   162f8:	add	r0, r0, #1
   162fc:	ldr	r3, [r3, #4]
   16300:	cmp	r3, #0
   16304:	bne	162e8 <__assert_fail@plt+0x4724>
   16308:	ldr	lr, [ip, #4]
   1630c:	add	r5, r5, #8
   16310:	cmp	r5, lr
   16314:	bcc	162c4 <__assert_fail@plt+0x4700>
   16318:	pop	{r4, r5, fp, pc}
   1631c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16320:	add	fp, sp, #24
   16324:	mov	r5, r1
   16328:	ldr	r4, [r0]
   1632c:	ldr	r1, [r0, #4]
   16330:	mov	r6, #0
   16334:	cmp	r4, r1
   16338:	bcs	163b4 <__assert_fail@plt+0x47f0>
   1633c:	mov	r9, r2
   16340:	mov	r8, r0
   16344:	mov	r6, #0
   16348:	ldr	r0, [r4]
   1634c:	cmp	r0, #0
   16350:	cmpne	r4, #0
   16354:	bne	16368 <__assert_fail@plt+0x47a4>
   16358:	add	r4, r4, #8
   1635c:	cmp	r4, r1
   16360:	bcc	16348 <__assert_fail@plt+0x4784>
   16364:	b	163b4 <__assert_fail@plt+0x47f0>
   16368:	mov	r1, r9
   1636c:	blx	r5
   16370:	cmp	r0, #0
   16374:	beq	163b4 <__assert_fail@plt+0x47f0>
   16378:	mov	r7, r4
   1637c:	ldr	r7, [r7, #4]
   16380:	add	r6, r6, #1
   16384:	cmp	r7, #0
   16388:	beq	163a4 <__assert_fail@plt+0x47e0>
   1638c:	ldr	r0, [r7]
   16390:	mov	r1, r9
   16394:	blx	r5
   16398:	cmp	r0, #0
   1639c:	bne	1637c <__assert_fail@plt+0x47b8>
   163a0:	b	163b4 <__assert_fail@plt+0x47f0>
   163a4:	ldr	r1, [r8, #4]
   163a8:	add	r4, r4, #8
   163ac:	cmp	r4, r1
   163b0:	bcc	16348 <__assert_fail@plt+0x4784>
   163b4:	mov	r0, r6
   163b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   163bc:	ldrb	r2, [r0]
   163c0:	cmp	r2, #0
   163c4:	moveq	r0, #0
   163c8:	bxeq	lr
   163cc:	add	r3, r0, #1
   163d0:	mov	r0, #0
   163d4:	rsb	r0, r0, r0, lsl #5
   163d8:	uxtab	r0, r0, r2
   163dc:	udiv	r2, r0, r1
   163e0:	mls	r0, r2, r1, r0
   163e4:	ldrb	r2, [r3], #1
   163e8:	cmp	r2, #0
   163ec:	bne	163d4 <__assert_fail@plt+0x4810>
   163f0:	bx	lr
   163f4:	movw	r1, #52528	; 0xcd30
   163f8:	movt	r1, #1
   163fc:	vld1.32	{d16-d17}, [r1]!
   16400:	ldr	r1, [r1]
   16404:	vst1.32	{d16-d17}, [r0]!
   16408:	str	r1, [r0]
   1640c:	bx	lr
   16410:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16414:	add	fp, sp, #24
   16418:	movw	r9, #26204	; 0x665c
   1641c:	movw	r5, #26184	; 0x6648
   16420:	cmp	r3, #0
   16424:	mov	r6, r0
   16428:	mov	r0, #40	; 0x28
   1642c:	mov	r7, r1
   16430:	movt	r9, #1
   16434:	movt	r5, #1
   16438:	movne	r9, r3
   1643c:	cmp	r2, #0
   16440:	movne	r5, r2
   16444:	bl	1b934 <lchmod@@Base+0x4470>
   16448:	mov	r8, #0
   1644c:	cmp	r0, #0
   16450:	beq	16630 <__assert_fail@plt+0x4a6c>
   16454:	mov	r4, r0
   16458:	cmp	r7, #0
   1645c:	beq	1650c <__assert_fail@plt+0x4948>
   16460:	movw	r0, #52528	; 0xcd30
   16464:	str	r7, [r4, #20]
   16468:	movt	r0, #1
   1646c:	cmp	r7, r0
   16470:	beq	16518 <__assert_fail@plt+0x4954>
   16474:	vldr	s2, [pc, #444]	; 16638 <__assert_fail@plt+0x4a74>
   16478:	vldr	s0, [r7, #8]
   1647c:	vcmpe.f32	s0, s2
   16480:	vmrs	APSR_nzcv, fpscr
   16484:	ble	164f0 <__assert_fail@plt+0x492c>
   16488:	vldr	s4, [pc, #428]	; 1663c <__assert_fail@plt+0x4a78>
   1648c:	vcmpe.f32	s0, s4
   16490:	vmrs	APSR_nzcv, fpscr
   16494:	bpl	164f0 <__assert_fail@plt+0x492c>
   16498:	vldr	s4, [pc, #416]	; 16640 <__assert_fail@plt+0x4a7c>
   1649c:	vldr	s6, [r7, #12]
   164a0:	vcmpe.f32	s6, s4
   164a4:	vmrs	APSR_nzcv, fpscr
   164a8:	ble	164f0 <__assert_fail@plt+0x492c>
   164ac:	vldr	s4, [r7]
   164b0:	vcmpe.f32	s4, #0.0
   164b4:	vmrs	APSR_nzcv, fpscr
   164b8:	blt	164f0 <__assert_fail@plt+0x492c>
   164bc:	vadd.f32	s2, s4, s2
   164c0:	vcmpe.f32	s2, s0
   164c4:	vmrs	APSR_nzcv, fpscr
   164c8:	bpl	164f0 <__assert_fail@plt+0x492c>
   164cc:	vldr	s0, [r7, #4]
   164d0:	vmov.f32	s4, #112	; 0x3f800000  1.0
   164d4:	vcmpe.f32	s0, s4
   164d8:	vmrs	APSR_nzcv, fpscr
   164dc:	bhi	164f0 <__assert_fail@plt+0x492c>
   164e0:	vcmpe.f32	s2, s0
   164e4:	mov	r0, r7
   164e8:	vmrs	APSR_nzcv, fpscr
   164ec:	bmi	16518 <__assert_fail@plt+0x4954>
   164f0:	movw	r0, #52528	; 0xcd30
   164f4:	movt	r0, #1
   164f8:	str	r0, [r4, #20]
   164fc:	mov	r0, r4
   16500:	bl	137a4 <__assert_fail@plt+0x1be0>
   16504:	mov	r0, r8
   16508:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1650c:	movw	r0, #52528	; 0xcd30
   16510:	movt	r0, #1
   16514:	str	r0, [r4, #20]
   16518:	ldrb	r1, [r0, #16]
   1651c:	cmp	r1, #0
   16520:	bne	1654c <__assert_fail@plt+0x4988>
   16524:	vldr	s0, [r0, #8]
   16528:	vldr	s4, [pc, #276]	; 16644 <__assert_fail@plt+0x4a80>
   1652c:	vmov	s2, r6
   16530:	vcvt.f32.u32	s2, s2
   16534:	vdiv.f32	s2, s2, s0
   16538:	vcmpe.f32	s2, s4
   1653c:	vcvt.u32.f32	s0, s2
   16540:	vmrs	APSR_nzcv, fpscr
   16544:	bge	165cc <__assert_fail@plt+0x4a08>
   16548:	vmov	r6, s0
   1654c:	cmp	r6, #10
   16550:	movls	r6, #10
   16554:	orr	r0, r6, #1
   16558:	cmn	r0, #1
   1655c:	beq	165cc <__assert_fail@plt+0x4a08>
   16560:	ldr	r6, [fp, #8]
   16564:	mov	r1, #3
   16568:	cmp	r0, #10
   1656c:	bcc	165a4 <__assert_fail@plt+0x49e0>
   16570:	mov	r1, #3
   16574:	mov	r3, #9
   16578:	mov	r2, #12
   1657c:	udiv	r7, r0, r1
   16580:	mls	r7, r7, r1, r0
   16584:	cmp	r7, #0
   16588:	beq	165a4 <__assert_fail@plt+0x49e0>
   1658c:	add	r3, r3, r2
   16590:	add	r2, r2, #8
   16594:	add	r1, r1, #2
   16598:	add	r3, r3, #4
   1659c:	cmp	r3, r0
   165a0:	bcc	1657c <__assert_fail@plt+0x49b8>
   165a4:	udiv	r2, r0, r1
   165a8:	mls	r1, r2, r1, r0
   165ac:	cmp	r1, #0
   165b0:	bne	165c4 <__assert_fail@plt+0x4a00>
   165b4:	add	r0, r0, #2
   165b8:	cmn	r0, #1
   165bc:	bne	16564 <__assert_fail@plt+0x49a0>
   165c0:	b	165cc <__assert_fail@plt+0x4a08>
   165c4:	cmp	r0, #536870912	; 0x20000000
   165c8:	bcc	165e4 <__assert_fail@plt+0x4a20>
   165cc:	mov	r0, #0
   165d0:	str	r0, [r4, #8]
   165d4:	mov	r0, r4
   165d8:	bl	137a4 <__assert_fail@plt+0x1be0>
   165dc:	mov	r0, r8
   165e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   165e4:	cmp	r0, #0
   165e8:	str	r0, [r4, #8]
   165ec:	beq	165d4 <__assert_fail@plt+0x4a10>
   165f0:	mov	r1, #8
   165f4:	bl	1b8e0 <lchmod@@Base+0x441c>
   165f8:	cmp	r0, #0
   165fc:	str	r0, [r4]
   16600:	beq	165d4 <__assert_fail@plt+0x4a10>
   16604:	mov	r1, #0
   16608:	mov	r8, r4
   1660c:	str	r1, [r4, #12]
   16610:	str	r1, [r4, #16]
   16614:	str	r5, [r4, #24]
   16618:	str	r9, [r4, #28]
   1661c:	str	r6, [r4, #32]
   16620:	str	r1, [r4, #36]	; 0x24
   16624:	ldr	r1, [r4, #8]
   16628:	add	r0, r0, r1, lsl #3
   1662c:	str	r0, [r4, #4]
   16630:	mov	r0, r8
   16634:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16638:	stclcc	12, cr12, [ip, #820]	; 0x334
   1663c:	svccc	0x00666666
   16640:	svccc	0x008ccccd
   16644:	svcmi	0x00800000
   16648:	ror	r2, r0, #3
   1664c:	udiv	r2, r2, r1
   16650:	mul	r1, r2, r1
   16654:	rsb	r0, r1, r0, ror #3
   16658:	bx	lr
   1665c:	sub	r0, r0, r1
   16660:	clz	r0, r0
   16664:	lsr	r0, r0, #5
   16668:	bx	lr
   1666c:	push	{r4, r5, r6, r7, fp, lr}
   16670:	add	fp, sp, #16
   16674:	mov	r4, r0
   16678:	ldr	r5, [r0]
   1667c:	ldr	r0, [r0, #4]
   16680:	cmp	r5, r0
   16684:	bcs	1671c <__assert_fail@plt+0x4b58>
   16688:	mov	r6, #0
   1668c:	ldr	r1, [r5]
   16690:	cmp	r1, #0
   16694:	beq	16710 <__assert_fail@plt+0x4b4c>
   16698:	ldr	r1, [r4, #32]
   1669c:	ldr	r7, [r5, #4]
   166a0:	cmp	r1, #0
   166a4:	mov	r0, r1
   166a8:	movwne	r0, #1
   166ac:	cmp	r7, #0
   166b0:	beq	166f4 <__assert_fail@plt+0x4b30>
   166b4:	tst	r0, #1
   166b8:	beq	166c8 <__assert_fail@plt+0x4b04>
   166bc:	ldr	r0, [r7]
   166c0:	blx	r1
   166c4:	ldr	r1, [r4, #32]
   166c8:	str	r6, [r7]
   166cc:	cmp	r1, #0
   166d0:	ldr	r0, [r4, #36]	; 0x24
   166d4:	ldr	r2, [r7, #4]
   166d8:	str	r0, [r7, #4]
   166dc:	mov	r0, r1
   166e0:	str	r7, [r4, #36]	; 0x24
   166e4:	mov	r7, r2
   166e8:	movwne	r0, #1
   166ec:	cmp	r2, #0
   166f0:	bne	166b4 <__assert_fail@plt+0x4af0>
   166f4:	cmp	r0, #0
   166f8:	beq	16704 <__assert_fail@plt+0x4b40>
   166fc:	ldr	r0, [r5]
   16700:	blx	r1
   16704:	str	r6, [r5]
   16708:	str	r6, [r5, #4]
   1670c:	ldr	r0, [r4, #4]
   16710:	add	r5, r5, #8
   16714:	cmp	r5, r0
   16718:	bcc	1668c <__assert_fail@plt+0x4ac8>
   1671c:	mov	r0, #0
   16720:	str	r0, [r4, #12]
   16724:	str	r0, [r4, #16]
   16728:	pop	{r4, r5, r6, r7, fp, pc}
   1672c:	push	{r4, r5, r6, sl, fp, lr}
   16730:	add	fp, sp, #16
   16734:	mov	r4, r0
   16738:	ldr	r0, [r0, #32]
   1673c:	cmp	r0, #0
   16740:	ldrne	r0, [r4, #16]
   16744:	cmpne	r0, #0
   16748:	beq	167b0 <__assert_fail@plt+0x4bec>
   1674c:	ldr	r5, [r4]
   16750:	ldr	r1, [r4, #4]
   16754:	cmp	r5, r1
   16758:	bcc	1676c <__assert_fail@plt+0x4ba8>
   1675c:	b	167b0 <__assert_fail@plt+0x4bec>
   16760:	add	r5, r5, #8
   16764:	cmp	r5, r1
   16768:	bcs	167b0 <__assert_fail@plt+0x4bec>
   1676c:	ldr	r0, [r5]
   16770:	cmp	r0, #0
   16774:	cmpne	r5, #0
   16778:	beq	16760 <__assert_fail@plt+0x4b9c>
   1677c:	ldr	r1, [r4, #32]
   16780:	blx	r1
   16784:	ldr	r6, [r5, #4]
   16788:	cmp	r6, #0
   1678c:	beq	167a8 <__assert_fail@plt+0x4be4>
   16790:	ldr	r1, [r4, #32]
   16794:	ldr	r0, [r6]
   16798:	blx	r1
   1679c:	ldr	r6, [r6, #4]
   167a0:	cmp	r6, #0
   167a4:	bne	16790 <__assert_fail@plt+0x4bcc>
   167a8:	ldr	r1, [r4, #4]
   167ac:	b	16760 <__assert_fail@plt+0x4b9c>
   167b0:	ldr	r5, [r4]
   167b4:	ldr	r1, [r4, #4]
   167b8:	cmp	r5, r1
   167bc:	bcc	167d0 <__assert_fail@plt+0x4c0c>
   167c0:	b	167f8 <__assert_fail@plt+0x4c34>
   167c4:	add	r5, r5, #8
   167c8:	cmp	r5, r1
   167cc:	bcs	167f8 <__assert_fail@plt+0x4c34>
   167d0:	ldr	r0, [r5, #4]
   167d4:	cmp	r0, #0
   167d8:	beq	167c4 <__assert_fail@plt+0x4c00>
   167dc:	ldr	r6, [r0, #4]
   167e0:	bl	137a4 <__assert_fail@plt+0x1be0>
   167e4:	cmp	r6, #0
   167e8:	mov	r0, r6
   167ec:	bne	167dc <__assert_fail@plt+0x4c18>
   167f0:	ldr	r1, [r4, #4]
   167f4:	b	167c4 <__assert_fail@plt+0x4c00>
   167f8:	ldr	r0, [r4, #36]	; 0x24
   167fc:	cmp	r0, #0
   16800:	beq	16818 <__assert_fail@plt+0x4c54>
   16804:	ldr	r5, [r0, #4]
   16808:	bl	137a4 <__assert_fail@plt+0x1be0>
   1680c:	cmp	r5, #0
   16810:	mov	r0, r5
   16814:	bne	16804 <__assert_fail@plt+0x4c40>
   16818:	ldr	r0, [r4]
   1681c:	bl	137a4 <__assert_fail@plt+0x1be0>
   16820:	mov	r0, r4
   16824:	pop	{r4, r5, r6, sl, fp, lr}
   16828:	b	137a4 <__assert_fail@plt+0x1be0>
   1682c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16830:	add	fp, sp, #28
   16834:	sub	sp, sp, #44	; 0x2c
   16838:	mov	r7, r0
   1683c:	mov	r4, r0
   16840:	ldr	r0, [r7, #20]!
   16844:	ldrb	r2, [r0, #16]
   16848:	cmp	r2, #0
   1684c:	bne	1687c <__assert_fail@plt+0x4cb8>
   16850:	vldr	s0, [r0, #8]
   16854:	vldr	s4, [pc, #576]	; 16a9c <__assert_fail@plt+0x4ed8>
   16858:	vmov	s2, r1
   1685c:	mov	r5, #0
   16860:	vcvt.f32.u32	s2, s2
   16864:	vdiv.f32	s2, s2, s0
   16868:	vcmpe.f32	s2, s4
   1686c:	vcvt.u32.f32	s0, s2
   16870:	vmrs	APSR_nzcv, fpscr
   16874:	bge	169a0 <__assert_fail@plt+0x4ddc>
   16878:	vmov	r1, s0
   1687c:	cmp	r1, #10
   16880:	mov	r5, #0
   16884:	movls	r1, #10
   16888:	orr	r6, r1, #1
   1688c:	cmn	r6, #1
   16890:	bne	168a4 <__assert_fail@plt+0x4ce0>
   16894:	b	169a0 <__assert_fail@plt+0x4ddc>
   16898:	add	r6, r6, #2
   1689c:	cmn	r6, #1
   168a0:	beq	169a0 <__assert_fail@plt+0x4ddc>
   168a4:	mov	r0, #3
   168a8:	cmp	r6, #10
   168ac:	bcc	168e4 <__assert_fail@plt+0x4d20>
   168b0:	mov	r0, #3
   168b4:	mov	r2, #9
   168b8:	mov	r1, #12
   168bc:	udiv	r3, r6, r0
   168c0:	mls	r3, r3, r0, r6
   168c4:	cmp	r3, #0
   168c8:	beq	168e4 <__assert_fail@plt+0x4d20>
   168cc:	add	r2, r2, r1
   168d0:	add	r1, r1, #8
   168d4:	add	r0, r0, #2
   168d8:	add	r2, r2, #4
   168dc:	cmp	r2, r6
   168e0:	bcc	168bc <__assert_fail@plt+0x4cf8>
   168e4:	udiv	r1, r6, r0
   168e8:	mls	r0, r1, r0, r6
   168ec:	cmp	r0, #0
   168f0:	beq	16898 <__assert_fail@plt+0x4cd4>
   168f4:	sub	r0, r6, #1
   168f8:	cmn	r0, #-536870910	; 0xe0000002
   168fc:	bhi	169a0 <__assert_fail@plt+0x4ddc>
   16900:	ldr	r0, [r4, #8]
   16904:	cmp	r6, r0
   16908:	bne	1691c <__assert_fail@plt+0x4d58>
   1690c:	mov	r5, #1
   16910:	mov	r0, r5
   16914:	sub	sp, fp, #28
   16918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1691c:	mov	r0, r6
   16920:	mov	r1, #8
   16924:	bl	1b8e0 <lchmod@@Base+0x441c>
   16928:	cmp	r0, #0
   1692c:	str	r0, [sp, #4]
   16930:	beq	169a0 <__assert_fail@plt+0x4ddc>
   16934:	mov	r1, #0
   16938:	add	r0, r0, r6, lsl #3
   1693c:	str	r6, [sp, #12]
   16940:	add	r5, sp, #4
   16944:	mov	sl, r4
   16948:	mov	r2, #0
   1694c:	str	r1, [sp, #16]
   16950:	str	r1, [sp, #20]
   16954:	str	r0, [sp, #8]
   16958:	add	r0, r5, #20
   1695c:	mov	r1, r4
   16960:	vld1.32	{d16-d17}, [r7]
   16964:	vst1.32	{d16-d17}, [r0]
   16968:	ldr	r0, [sl, #36]!	; 0x24
   1696c:	str	r0, [sp, #40]	; 0x28
   16970:	mov	r0, r5
   16974:	bl	16aa0 <__assert_fail@plt+0x4edc>
   16978:	cmp	r0, #0
   1697c:	beq	169ac <__assert_fail@plt+0x4de8>
   16980:	ldr	r0, [r4]
   16984:	bl	137a4 <__assert_fail@plt+0x1be0>
   16988:	mov	r0, #36	; 0x24
   1698c:	vld1.32	{d16-d17}, [r5], r0
   16990:	vst1.32	{d16-d17}, [r4], r0
   16994:	ldr	r0, [r5]
   16998:	mov	r5, #1
   1699c:	str	r0, [r4]
   169a0:	mov	r0, r5
   169a4:	sub	sp, fp, #28
   169a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169ac:	ldr	r0, [sp, #40]	; 0x28
   169b0:	str	r0, [sl]
   169b4:	ldr	r0, [sp, #8]
   169b8:	ldr	r8, [sp, #4]
   169bc:	cmp	r8, r0
   169c0:	str	r0, [sp]
   169c4:	bcs	16a68 <__assert_fail@plt+0x4ea4>
   169c8:	mov	r9, #0
   169cc:	ldr	r0, [r8]
   169d0:	cmp	r0, #0
   169d4:	beq	16a58 <__assert_fail@plt+0x4e94>
   169d8:	ldr	r6, [r8, #4]
   169dc:	cmp	r6, #0
   169e0:	beq	16a54 <__assert_fail@plt+0x4e90>
   169e4:	ldr	r1, [r4, #8]
   169e8:	ldr	r5, [r6]
   169ec:	ldr	r2, [r4, #24]
   169f0:	mov	r0, r5
   169f4:	blx	r2
   169f8:	ldr	r1, [r4, #8]
   169fc:	cmp	r0, r1
   16a00:	bcs	16a98 <__assert_fail@plt+0x4ed4>
   16a04:	ldr	r3, [r4]
   16a08:	ldr	r2, [r6, #4]
   16a0c:	ldr	r7, [r3, r0, lsl #3]
   16a10:	cmp	r7, #0
   16a14:	beq	16a24 <__assert_fail@plt+0x4e60>
   16a18:	add	r0, r3, r0, lsl #3
   16a1c:	add	r0, r0, #4
   16a20:	b	16a3c <__assert_fail@plt+0x4e78>
   16a24:	str	r5, [r3, r0, lsl #3]
   16a28:	ldr	r0, [r4, #12]
   16a2c:	add	r0, r0, #1
   16a30:	str	r0, [r4, #12]
   16a34:	mov	r0, sl
   16a38:	str	r9, [r6]
   16a3c:	ldr	r3, [r0]
   16a40:	cmp	r2, #0
   16a44:	str	r3, [r6, #4]
   16a48:	str	r6, [r0]
   16a4c:	mov	r6, r2
   16a50:	bne	169e8 <__assert_fail@plt+0x4e24>
   16a54:	str	r9, [r8, #4]
   16a58:	ldr	r0, [sp]
   16a5c:	add	r8, r8, #8
   16a60:	cmp	r8, r0
   16a64:	bcc	169cc <__assert_fail@plt+0x4e08>
   16a68:	add	r1, sp, #4
   16a6c:	mov	r0, r4
   16a70:	mov	r2, #0
   16a74:	mov	r5, #0
   16a78:	bl	16aa0 <__assert_fail@plt+0x4edc>
   16a7c:	cmp	r0, #0
   16a80:	beq	16a98 <__assert_fail@plt+0x4ed4>
   16a84:	ldr	r0, [sp, #4]
   16a88:	bl	137a4 <__assert_fail@plt+0x1be0>
   16a8c:	mov	r0, r5
   16a90:	sub	sp, fp, #28
   16a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a98:	bl	11b64 <abort@plt>
   16a9c:	svcmi	0x00800000
   16aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16aa4:	add	fp, sp, #28
   16aa8:	sub	sp, sp, #4
   16aac:	ldr	r8, [r1]
   16ab0:	ldr	r3, [r1, #4]
   16ab4:	mov	r6, r0
   16ab8:	mov	r0, #1
   16abc:	str	r1, [sp]
   16ac0:	cmp	r8, r3
   16ac4:	bcs	16cc4 <__assert_fail@plt+0x5100>
   16ac8:	add	r9, r6, #36	; 0x24
   16acc:	cmp	r2, #0
   16ad0:	beq	16b7c <__assert_fail@plt+0x4fb8>
   16ad4:	mov	sl, #0
   16ad8:	ldr	r1, [r8]
   16adc:	cmp	r1, #0
   16ae0:	beq	16b6c <__assert_fail@plt+0x4fa8>
   16ae4:	ldr	r7, [r8, #4]
   16ae8:	cmp	r7, #0
   16aec:	beq	16b68 <__assert_fail@plt+0x4fa4>
   16af0:	ldr	r1, [r6, #8]
   16af4:	ldr	r4, [r7]
   16af8:	ldr	r2, [r6, #24]
   16afc:	mov	r0, r4
   16b00:	blx	r2
   16b04:	ldr	r1, [r6, #8]
   16b08:	cmp	r0, r1
   16b0c:	bcs	16cd8 <__assert_fail@plt+0x5114>
   16b10:	ldr	r3, [r6]
   16b14:	ldr	r2, [r7, #4]
   16b18:	ldr	r5, [r3, r0, lsl #3]
   16b1c:	cmp	r5, #0
   16b20:	beq	16b30 <__assert_fail@plt+0x4f6c>
   16b24:	add	r0, r3, r0, lsl #3
   16b28:	add	r0, r0, #4
   16b2c:	b	16b48 <__assert_fail@plt+0x4f84>
   16b30:	str	r4, [r3, r0, lsl #3]
   16b34:	ldr	r0, [r6, #12]
   16b38:	add	r0, r0, #1
   16b3c:	str	r0, [r6, #12]
   16b40:	mov	r0, r9
   16b44:	str	sl, [r7]
   16b48:	ldr	r3, [r0]
   16b4c:	cmp	r2, #0
   16b50:	str	r3, [r7, #4]
   16b54:	str	r7, [r0]
   16b58:	mov	r7, r2
   16b5c:	bne	16af4 <__assert_fail@plt+0x4f30>
   16b60:	ldr	r0, [sp]
   16b64:	ldr	r3, [r0, #4]
   16b68:	str	sl, [r8, #4]
   16b6c:	add	r8, r8, #8
   16b70:	cmp	r8, r3
   16b74:	bcc	16ad8 <__assert_fail@plt+0x4f14>
   16b78:	b	16cc0 <__assert_fail@plt+0x50fc>
   16b7c:	mov	r5, #0
   16b80:	ldr	sl, [r8]
   16b84:	cmp	sl, #0
   16b88:	beq	16cb4 <__assert_fail@plt+0x50f0>
   16b8c:	ldr	r7, [r8, #4]
   16b90:	ldr	r1, [r6, #8]
   16b94:	cmp	r7, #0
   16b98:	beq	16c14 <__assert_fail@plt+0x5050>
   16b9c:	mov	sl, #0
   16ba0:	ldr	r4, [r7]
   16ba4:	ldr	r2, [r6, #24]
   16ba8:	mov	r0, r4
   16bac:	blx	r2
   16bb0:	ldr	r1, [r6, #8]
   16bb4:	cmp	r0, r1
   16bb8:	bcs	16cd8 <__assert_fail@plt+0x5114>
   16bbc:	ldr	r3, [r6]
   16bc0:	ldr	r2, [r7, #4]
   16bc4:	ldr	r5, [r3, r0, lsl #3]
   16bc8:	cmp	r5, #0
   16bcc:	beq	16bdc <__assert_fail@plt+0x5018>
   16bd0:	add	r0, r3, r0, lsl #3
   16bd4:	add	r0, r0, #4
   16bd8:	b	16bf4 <__assert_fail@plt+0x5030>
   16bdc:	str	r4, [r3, r0, lsl #3]
   16be0:	ldr	r0, [r6, #12]
   16be4:	add	r0, r0, #1
   16be8:	str	r0, [r6, #12]
   16bec:	mov	r0, r9
   16bf0:	str	sl, [r7]
   16bf4:	ldr	r3, [r0]
   16bf8:	cmp	r2, #0
   16bfc:	str	r3, [r7, #4]
   16c00:	str	r7, [r0]
   16c04:	mov	r7, r2
   16c08:	bne	16ba0 <__assert_fail@plt+0x4fdc>
   16c0c:	ldr	sl, [r8]
   16c10:	mov	r5, #0
   16c14:	str	r5, [r8, #4]
   16c18:	mov	r0, sl
   16c1c:	ldr	r2, [r6, #24]
   16c20:	blx	r2
   16c24:	mov	r4, r0
   16c28:	ldr	r0, [r6, #8]
   16c2c:	cmp	r4, r0
   16c30:	bcs	16cd8 <__assert_fail@plt+0x5114>
   16c34:	ldr	r7, [r6]
   16c38:	ldr	r0, [r7, r4, lsl #3]
   16c3c:	cmp	r0, #0
   16c40:	beq	16c60 <__assert_fail@plt+0x509c>
   16c44:	ldr	r0, [r9]
   16c48:	cmp	r0, #0
   16c4c:	beq	16c74 <__assert_fail@plt+0x50b0>
   16c50:	mov	r1, r0
   16c54:	ldr	r2, [r1, #4]!
   16c58:	str	r2, [r9]
   16c5c:	b	16c88 <__assert_fail@plt+0x50c4>
   16c60:	str	sl, [r7, r4, lsl #3]
   16c64:	ldr	r0, [r6, #12]
   16c68:	add	r0, r0, #1
   16c6c:	str	r0, [r6, #12]
   16c70:	b	16c9c <__assert_fail@plt+0x50d8>
   16c74:	mov	r0, #8
   16c78:	bl	1b934 <lchmod@@Base+0x4470>
   16c7c:	cmp	r0, #0
   16c80:	beq	16ccc <__assert_fail@plt+0x5108>
   16c84:	add	r1, r0, #4
   16c88:	str	sl, [r0]
   16c8c:	add	r2, r7, r4, lsl #3
   16c90:	ldr	r3, [r2, #4]
   16c94:	str	r3, [r1]
   16c98:	str	r0, [r2, #4]
   16c9c:	ldr	r0, [sp]
   16ca0:	str	r5, [r8]
   16ca4:	ldr	r1, [r0, #12]
   16ca8:	ldr	r3, [r0, #4]
   16cac:	sub	r1, r1, #1
   16cb0:	str	r1, [r0, #12]
   16cb4:	add	r8, r8, #8
   16cb8:	cmp	r8, r3
   16cbc:	bcc	16b80 <__assert_fail@plt+0x4fbc>
   16cc0:	mov	r0, #1
   16cc4:	sub	sp, fp, #28
   16cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ccc:	mov	r0, #0
   16cd0:	sub	sp, fp, #28
   16cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cd8:	bl	11b64 <abort@plt>
   16cdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ce0:	add	fp, sp, #28
   16ce4:	sub	sp, sp, #4
   16ce8:	cmp	r1, #0
   16cec:	beq	17030 <__assert_fail@plt+0x546c>
   16cf0:	mov	r8, r2
   16cf4:	mov	sl, r1
   16cf8:	ldr	r1, [r0, #8]
   16cfc:	ldr	r2, [r0, #24]
   16d00:	mov	r4, r0
   16d04:	mov	r0, sl
   16d08:	blx	r2
   16d0c:	mov	r7, r0
   16d10:	ldr	r0, [r4, #8]
   16d14:	cmp	r7, r0
   16d18:	bcs	17030 <__assert_fail@plt+0x546c>
   16d1c:	ldr	r5, [r4]
   16d20:	mov	r9, r5
   16d24:	ldr	r1, [r9, r7, lsl #3]!
   16d28:	cmp	r1, #0
   16d2c:	beq	16dc0 <__assert_fail@plt+0x51fc>
   16d30:	cmp	r1, sl
   16d34:	beq	16d60 <__assert_fail@plt+0x519c>
   16d38:	ldr	r2, [r4, #28]
   16d3c:	mov	r0, sl
   16d40:	blx	r2
   16d44:	cmp	r0, #0
   16d48:	mov	r6, r9
   16d4c:	beq	16d7c <__assert_fail@plt+0x51b8>
   16d50:	ldr	r0, [r6]
   16d54:	cmp	r0, #0
   16d58:	bne	16d64 <__assert_fail@plt+0x51a0>
   16d5c:	b	16dc0 <__assert_fail@plt+0x51fc>
   16d60:	mov	r0, sl
   16d64:	cmp	r8, #0
   16d68:	mov	r7, #0
   16d6c:	strne	r0, [r8]
   16d70:	mov	r0, r7
   16d74:	sub	sp, fp, #28
   16d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d7c:	add	r6, r5, r7, lsl #3
   16d80:	ldr	r0, [r6, #4]!
   16d84:	cmp	r0, #0
   16d88:	beq	16dc0 <__assert_fail@plt+0x51fc>
   16d8c:	ldr	r1, [r0]
   16d90:	cmp	r1, sl
   16d94:	beq	16db4 <__assert_fail@plt+0x51f0>
   16d98:	ldr	r2, [r4, #28]
   16d9c:	mov	r0, sl
   16da0:	blx	r2
   16da4:	ldr	r6, [r6]
   16da8:	cmp	r0, #0
   16dac:	beq	16d80 <__assert_fail@plt+0x51bc>
   16db0:	b	16d50 <__assert_fail@plt+0x518c>
   16db4:	mov	r0, sl
   16db8:	cmp	r0, #0
   16dbc:	bne	16d64 <__assert_fail@plt+0x51a0>
   16dc0:	vldr	s0, [r4, #8]
   16dc4:	vldr	s2, [r4, #12]
   16dc8:	ldr	r0, [r4, #20]
   16dcc:	vcvt.f32.u32	s0, s0
   16dd0:	vcvt.f32.u32	s4, s2
   16dd4:	vldr	s2, [r0, #8]
   16dd8:	vmul.f32	s6, s2, s0
   16ddc:	vcmpe.f32	s6, s4
   16de0:	vmrs	APSR_nzcv, fpscr
   16de4:	bpl	16f48 <__assert_fail@plt+0x5384>
   16de8:	movw	r1, #52528	; 0xcd30
   16dec:	movt	r1, #1
   16df0:	cmp	r0, r1
   16df4:	beq	16e90 <__assert_fail@plt+0x52cc>
   16df8:	vldr	s6, [pc, #564]	; 17034 <__assert_fail@plt+0x5470>
   16dfc:	vcmpe.f32	s2, s6
   16e00:	vmrs	APSR_nzcv, fpscr
   16e04:	ble	16e6c <__assert_fail@plt+0x52a8>
   16e08:	vldr	s8, [pc, #552]	; 17038 <__assert_fail@plt+0x5474>
   16e0c:	vcmpe.f32	s2, s8
   16e10:	vmrs	APSR_nzcv, fpscr
   16e14:	bpl	16e6c <__assert_fail@plt+0x52a8>
   16e18:	vldr	s8, [pc, #540]	; 1703c <__assert_fail@plt+0x5478>
   16e1c:	vldr	s10, [r0, #12]
   16e20:	vcmpe.f32	s10, s8
   16e24:	vmrs	APSR_nzcv, fpscr
   16e28:	ble	16e6c <__assert_fail@plt+0x52a8>
   16e2c:	vldr	s8, [r0]
   16e30:	vcmpe.f32	s8, #0.0
   16e34:	vmrs	APSR_nzcv, fpscr
   16e38:	blt	16e6c <__assert_fail@plt+0x52a8>
   16e3c:	vadd.f32	s6, s8, s6
   16e40:	vcmpe.f32	s6, s2
   16e44:	vmrs	APSR_nzcv, fpscr
   16e48:	bpl	16e6c <__assert_fail@plt+0x52a8>
   16e4c:	vldr	s8, [r0, #4]
   16e50:	vmov.f32	s10, #112	; 0x3f800000  1.0
   16e54:	vcmpe.f32	s8, s10
   16e58:	vmrs	APSR_nzcv, fpscr
   16e5c:	bhi	16e6c <__assert_fail@plt+0x52a8>
   16e60:	vcmpe.f32	s6, s8
   16e64:	vmrs	APSR_nzcv, fpscr
   16e68:	bmi	16e7c <__assert_fail@plt+0x52b8>
   16e6c:	vldr	s2, [pc, #460]	; 17040 <__assert_fail@plt+0x547c>
   16e70:	movw	r0, #52528	; 0xcd30
   16e74:	movt	r0, #1
   16e78:	str	r0, [r4, #20]
   16e7c:	vmul.f32	s6, s2, s0
   16e80:	vcmpe.f32	s6, s4
   16e84:	vmrs	APSR_nzcv, fpscr
   16e88:	bmi	16ea4 <__assert_fail@plt+0x52e0>
   16e8c:	b	16f48 <__assert_fail@plt+0x5384>
   16e90:	mov	r0, r1
   16e94:	vmul.f32	s6, s2, s0
   16e98:	vcmpe.f32	s6, s4
   16e9c:	vmrs	APSR_nzcv, fpscr
   16ea0:	bpl	16f48 <__assert_fail@plt+0x5384>
   16ea4:	vldr	s4, [r0, #12]
   16ea8:	ldrb	r0, [r0, #16]
   16eac:	mvn	r7, #0
   16eb0:	vmul.f32	s0, s4, s0
   16eb4:	vldr	s4, [pc, #392]	; 17044 <__assert_fail@plt+0x5480>
   16eb8:	cmp	r0, #0
   16ebc:	vmul.f32	s2, s2, s0
   16ec0:	vseleq.f32	s0, s2, s0
   16ec4:	vcmpe.f32	s0, s4
   16ec8:	vmrs	APSR_nzcv, fpscr
   16ecc:	bge	16fc4 <__assert_fail@plt+0x5400>
   16ed0:	vcvt.u32.f32	s0, s0
   16ed4:	mov	r0, r4
   16ed8:	vmov	r1, s0
   16edc:	bl	1682c <__assert_fail@plt+0x4c68>
   16ee0:	cmp	r0, #0
   16ee4:	beq	16fc4 <__assert_fail@plt+0x5400>
   16ee8:	ldr	r1, [r4, #8]
   16eec:	ldr	r2, [r4, #24]
   16ef0:	mov	r0, sl
   16ef4:	blx	r2
   16ef8:	mov	r7, r0
   16efc:	ldr	r0, [r4, #8]
   16f00:	cmp	r7, r0
   16f04:	bcs	17030 <__assert_fail@plt+0x546c>
   16f08:	ldr	r5, [r4]
   16f0c:	mov	r9, r5
   16f10:	ldr	r1, [r9, r7, lsl #3]!
   16f14:	cmp	r1, #0
   16f18:	beq	16f70 <__assert_fail@plt+0x53ac>
   16f1c:	cmp	r1, sl
   16f20:	mov	r0, sl
   16f24:	beq	16f40 <__assert_fail@plt+0x537c>
   16f28:	ldr	r2, [r4, #28]
   16f2c:	mov	r0, sl
   16f30:	blx	r2
   16f34:	cmp	r0, #0
   16f38:	beq	16fe0 <__assert_fail@plt+0x541c>
   16f3c:	ldr	r0, [r9]
   16f40:	cmp	r0, #0
   16f44:	bne	17030 <__assert_fail@plt+0x546c>
   16f48:	ldr	r0, [r9]
   16f4c:	cmp	r0, #0
   16f50:	beq	16f70 <__assert_fail@plt+0x53ac>
   16f54:	ldr	r0, [r4, #36]	; 0x24
   16f58:	cmp	r0, #0
   16f5c:	beq	16f90 <__assert_fail@plt+0x53cc>
   16f60:	mov	r1, r0
   16f64:	ldr	r2, [r1, #4]!
   16f68:	str	r2, [r4, #36]	; 0x24
   16f6c:	b	16fa4 <__assert_fail@plt+0x53e0>
   16f70:	str	sl, [r9]
   16f74:	ldr	r0, [r4, #12]
   16f78:	ldr	r1, [r4, #16]
   16f7c:	add	r0, r0, #1
   16f80:	add	r1, r1, #1
   16f84:	str	r0, [r4, #12]
   16f88:	str	r1, [r4, #16]
   16f8c:	b	16fc0 <__assert_fail@plt+0x53fc>
   16f90:	mov	r0, #8
   16f94:	bl	1b934 <lchmod@@Base+0x4470>
   16f98:	cmp	r0, #0
   16f9c:	beq	16fd0 <__assert_fail@plt+0x540c>
   16fa0:	add	r1, r0, #4
   16fa4:	str	sl, [r0]
   16fa8:	ldr	r2, [r9, #4]
   16fac:	str	r2, [r1]
   16fb0:	str	r0, [r9, #4]
   16fb4:	ldr	r0, [r4, #16]
   16fb8:	add	r0, r0, #1
   16fbc:	str	r0, [r4, #16]
   16fc0:	mov	r7, #1
   16fc4:	mov	r0, r7
   16fc8:	sub	sp, fp, #28
   16fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fd0:	mvn	r7, #0
   16fd4:	mov	r0, r7
   16fd8:	sub	sp, fp, #28
   16fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fe0:	add	r6, r5, r7, lsl #3
   16fe4:	ldr	r0, [r6, #4]!
   16fe8:	cmp	r0, #0
   16fec:	beq	16f48 <__assert_fail@plt+0x5384>
   16ff0:	ldr	r1, [r0]
   16ff4:	cmp	r1, sl
   16ff8:	beq	17024 <__assert_fail@plt+0x5460>
   16ffc:	ldr	r2, [r4, #28]
   17000:	mov	r0, sl
   17004:	blx	r2
   17008:	ldr	r6, [r6]
   1700c:	cmp	r0, #0
   17010:	beq	16fe4 <__assert_fail@plt+0x5420>
   17014:	ldr	r0, [r6]
   17018:	cmp	r0, #0
   1701c:	beq	16f48 <__assert_fail@plt+0x5384>
   17020:	b	17030 <__assert_fail@plt+0x546c>
   17024:	mov	r0, sl
   17028:	cmp	r0, #0
   1702c:	beq	16f48 <__assert_fail@plt+0x5384>
   17030:	bl	11b64 <abort@plt>
   17034:	stclcc	12, cr12, [ip, #820]	; 0x334
   17038:	svccc	0x00666666
   1703c:	svccc	0x008ccccd
   17040:	svccc	0x004ccccd
   17044:	svcmi	0x00800000
   17048:	push	{r4, sl, fp, lr}
   1704c:	add	fp, sp, #8
   17050:	sub	sp, sp, #8
   17054:	add	r2, sp, #4
   17058:	mov	r4, r1
   1705c:	bl	16cdc <__assert_fail@plt+0x5118>
   17060:	cmn	r0, #1
   17064:	beq	17080 <__assert_fail@plt+0x54bc>
   17068:	ldr	r1, [sp, #4]
   1706c:	cmp	r0, #0
   17070:	moveq	r4, r1
   17074:	mov	r0, r4
   17078:	sub	sp, fp, #8
   1707c:	pop	{r4, sl, fp, pc}
   17080:	mov	r4, #0
   17084:	mov	r0, r4
   17088:	sub	sp, fp, #8
   1708c:	pop	{r4, sl, fp, pc}
   17090:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17094:	add	fp, sp, #24
   17098:	mov	r9, r1
   1709c:	ldr	r1, [r0, #8]
   170a0:	ldr	r2, [r0, #24]
   170a4:	mov	r5, r0
   170a8:	mov	r0, r9
   170ac:	blx	r2
   170b0:	mov	r7, r0
   170b4:	ldr	r0, [r5, #8]
   170b8:	cmp	r7, r0
   170bc:	bcs	1732c <__assert_fail@plt+0x5768>
   170c0:	ldr	r6, [r5]
   170c4:	mov	r8, #0
   170c8:	mov	r4, r6
   170cc:	ldr	r1, [r4, r7, lsl #3]!
   170d0:	cmp	r1, #0
   170d4:	beq	17188 <__assert_fail@plt+0x55c4>
   170d8:	cmp	r1, r9
   170dc:	beq	170f8 <__assert_fail@plt+0x5534>
   170e0:	ldr	r2, [r5, #28]
   170e4:	mov	r0, r9
   170e8:	blx	r2
   170ec:	cmp	r0, #0
   170f0:	beq	17130 <__assert_fail@plt+0x556c>
   170f4:	ldr	r9, [r4]
   170f8:	add	r0, r6, r7, lsl #3
   170fc:	ldr	r0, [r0, #4]
   17100:	cmp	r0, #0
   17104:	beq	17178 <__assert_fail@plt+0x55b4>
   17108:	ldm	r0, {r1, r2}
   1710c:	stm	r4, {r1, r2}
   17110:	mov	r1, #0
   17114:	str	r1, [r0]
   17118:	ldr	r1, [r5, #36]	; 0x24
   1711c:	str	r1, [r0, #4]
   17120:	str	r0, [r5, #36]	; 0x24
   17124:	cmp	r9, #0
   17128:	bne	171c0 <__assert_fail@plt+0x55fc>
   1712c:	b	17188 <__assert_fail@plt+0x55c4>
   17130:	add	r7, r6, r7, lsl #3
   17134:	ldr	r0, [r7, #4]!
   17138:	cmp	r0, #0
   1713c:	beq	17188 <__assert_fail@plt+0x55c4>
   17140:	ldr	r1, [r0]
   17144:	cmp	r1, r9
   17148:	beq	17190 <__assert_fail@plt+0x55cc>
   1714c:	ldr	r2, [r5, #28]
   17150:	mov	r0, r9
   17154:	blx	r2
   17158:	ldr	r1, [r7]
   1715c:	cmp	r0, #0
   17160:	bne	17198 <__assert_fail@plt+0x55d4>
   17164:	ldr	r0, [r1, #4]!
   17168:	cmp	r0, #0
   1716c:	mov	r7, r1
   17170:	bne	17140 <__assert_fail@plt+0x557c>
   17174:	b	17188 <__assert_fail@plt+0x55c4>
   17178:	mov	r0, #0
   1717c:	str	r0, [r4]
   17180:	cmp	r9, #0
   17184:	bne	171c0 <__assert_fail@plt+0x55fc>
   17188:	mov	r0, r8
   1718c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17190:	mov	r1, r0
   17194:	b	1719c <__assert_fail@plt+0x55d8>
   17198:	ldr	r9, [r1]
   1719c:	ldr	r0, [r1, #4]
   171a0:	str	r0, [r7]
   171a4:	mov	r0, #0
   171a8:	str	r0, [r1]
   171ac:	ldr	r0, [r5, #36]	; 0x24
   171b0:	str	r0, [r1, #4]
   171b4:	str	r1, [r5, #36]	; 0x24
   171b8:	cmp	r9, #0
   171bc:	beq	17188 <__assert_fail@plt+0x55c4>
   171c0:	ldr	r0, [r5, #16]
   171c4:	sub	r0, r0, #1
   171c8:	str	r0, [r5, #16]
   171cc:	ldr	r0, [r4]
   171d0:	cmp	r0, #0
   171d4:	bne	172ec <__assert_fail@plt+0x5728>
   171d8:	ldr	r0, [r5, #12]
   171dc:	vldr	s0, [r5, #8]
   171e0:	sub	r1, r0, #1
   171e4:	str	r1, [r5, #12]
   171e8:	vmov	s2, r1
   171ec:	ldr	r0, [r5, #20]
   171f0:	vcvt.f32.u32	s0, s0
   171f4:	vcvt.f32.u32	s2, s2
   171f8:	vldr	s4, [r0]
   171fc:	vmul.f32	s6, s4, s0
   17200:	vcmpe.f32	s6, s2
   17204:	vmrs	APSR_nzcv, fpscr
   17208:	ble	172ec <__assert_fail@plt+0x5728>
   1720c:	movw	r1, #52528	; 0xcd30
   17210:	movt	r1, #1
   17214:	cmp	r0, r1
   17218:	beq	17280 <__assert_fail@plt+0x56bc>
   1721c:	vldr	s8, [pc, #268]	; 17330 <__assert_fail@plt+0x576c>
   17220:	vldr	s6, [r0, #8]
   17224:	vcmpe.f32	s6, s8
   17228:	vmrs	APSR_nzcv, fpscr
   1722c:	ble	1725c <__assert_fail@plt+0x5698>
   17230:	vldr	s10, [pc, #252]	; 17334 <__assert_fail@plt+0x5770>
   17234:	vcmpe.f32	s6, s10
   17238:	vmrs	APSR_nzcv, fpscr
   1723c:	bpl	1725c <__assert_fail@plt+0x5698>
   17240:	vcmpe.f32	s4, #0.0
   17244:	vmrs	APSR_nzcv, fpscr
   17248:	vldrge	s10, [r0, #12]
   1724c:	vldrge	s12, [pc, #228]	; 17338 <__assert_fail@plt+0x5774>
   17250:	vcmpege.f32	s10, s12
   17254:	vmrsge	APSR_nzcv, fpscr
   17258:	bgt	172f8 <__assert_fail@plt+0x5734>
   1725c:	vldr	s4, [pc, #216]	; 1733c <__assert_fail@plt+0x5778>
   17260:	movw	r0, #52528	; 0xcd30
   17264:	movt	r0, #1
   17268:	str	r0, [r5, #20]
   1726c:	vmul.f32	s4, s4, s0
   17270:	vcmpe.f32	s4, s2
   17274:	vmrs	APSR_nzcv, fpscr
   17278:	bgt	17294 <__assert_fail@plt+0x56d0>
   1727c:	b	172ec <__assert_fail@plt+0x5728>
   17280:	mov	r0, r1
   17284:	vmul.f32	s4, s4, s0
   17288:	vcmpe.f32	s4, s2
   1728c:	vmrs	APSR_nzcv, fpscr
   17290:	ble	172ec <__assert_fail@plt+0x5728>
   17294:	ldrb	r1, [r0, #16]
   17298:	vldr	s2, [r0, #4]
   1729c:	cmp	r1, #0
   172a0:	vmul.f32	s0, s2, s0
   172a4:	vldreq	s2, [r0, #8]
   172a8:	mov	r0, r5
   172ac:	vmuleq.f32	s0, s0, s2
   172b0:	vcvt.u32.f32	s0, s0
   172b4:	vmov	r1, s0
   172b8:	bl	1682c <__assert_fail@plt+0x4c68>
   172bc:	cmp	r0, #0
   172c0:	bne	172ec <__assert_fail@plt+0x5728>
   172c4:	ldr	r0, [r5, #36]	; 0x24
   172c8:	cmp	r0, #0
   172cc:	beq	172e4 <__assert_fail@plt+0x5720>
   172d0:	ldr	r4, [r0, #4]
   172d4:	bl	137a4 <__assert_fail@plt+0x1be0>
   172d8:	cmp	r4, #0
   172dc:	mov	r0, r4
   172e0:	bne	172d0 <__assert_fail@plt+0x570c>
   172e4:	mov	r0, #0
   172e8:	str	r0, [r5, #36]	; 0x24
   172ec:	mov	r8, r9
   172f0:	mov	r0, r8
   172f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   172f8:	vadd.f32	s8, s4, s8
   172fc:	vcmpe.f32	s8, s6
   17300:	vmrs	APSR_nzcv, fpscr
   17304:	bpl	1725c <__assert_fail@plt+0x5698>
   17308:	vldr	s6, [r0, #4]
   1730c:	vmov.f32	s10, #112	; 0x3f800000  1.0
   17310:	vcmpe.f32	s6, s10
   17314:	vmrs	APSR_nzcv, fpscr
   17318:	bhi	1725c <__assert_fail@plt+0x5698>
   1731c:	vcmpe.f32	s8, s6
   17320:	vmrs	APSR_nzcv, fpscr
   17324:	bmi	17284 <__assert_fail@plt+0x56c0>
   17328:	b	1725c <__assert_fail@plt+0x5698>
   1732c:	bl	11b64 <abort@plt>
   17330:	stclcc	12, cr12, [ip, #820]	; 0x334
   17334:	svccc	0x00666666
   17338:	svccc	0x008ccccd
   1733c:	andeq	r0, r0, r0
   17340:	b	17090 <__assert_fail@plt+0x54cc>
   17344:	push	{r4, r5, fp, lr}
   17348:	add	fp, sp, #8
   1734c:	mov	r5, r0
   17350:	ldr	r0, [r0]
   17354:	mov	r4, r1
   17358:	bl	1bf98 <lchmod@@Base+0x4ad4>
   1735c:	ldrd	r2, [r5, #8]
   17360:	eor	r0, r2, r0
   17364:	mov	r1, r3
   17368:	mov	r2, r4
   1736c:	mov	r3, #0
   17370:	bl	1c1c4 <lchmod@@Base+0x4d00>
   17374:	mov	r0, r2
   17378:	pop	{r4, r5, fp, pc}
   1737c:	push	{r4, r5, r6, r7, fp, lr}
   17380:	add	fp, sp, #16
   17384:	ldrd	r2, [r1, #8]
   17388:	ldrd	r4, [r0, #8]
   1738c:	eor	r3, r5, r3
   17390:	eor	r2, r4, r2
   17394:	orrs	r2, r2, r3
   17398:	mov	r2, #0
   1739c:	bne	173cc <__assert_fail@plt+0x5808>
   173a0:	ldrd	r4, [r1, #16]
   173a4:	ldrd	r6, [r0, #16]
   173a8:	eor	r3, r7, r5
   173ac:	eor	r7, r6, r4
   173b0:	orrs	r3, r7, r3
   173b4:	bne	173cc <__assert_fail@plt+0x5808>
   173b8:	ldr	r1, [r1]
   173bc:	ldr	r0, [r0]
   173c0:	bl	117d4 <strcmp@plt>
   173c4:	clz	r0, r0
   173c8:	lsr	r2, r0, #5
   173cc:	mov	r0, r2
   173d0:	pop	{r4, r5, r6, r7, fp, pc}
   173d4:	push	{r4, sl, fp, lr}
   173d8:	add	fp, sp, #8
   173dc:	mov	r4, r0
   173e0:	ldr	r0, [r0]
   173e4:	bl	137a4 <__assert_fail@plt+0x1be0>
   173e8:	mov	r0, r4
   173ec:	pop	{r4, sl, fp, lr}
   173f0:	b	137a4 <__assert_fail@plt+0x1be0>
   173f4:	mov	r3, #1
   173f8:	mov	r2, #0
   173fc:	vdup.32	q8, r1
   17400:	strb	r3, [r0, #28]
   17404:	str	r2, [r0, #20]
   17408:	str	r2, [r0, #24]
   1740c:	vst1.32	{d16-d17}, [r0]!
   17410:	str	r1, [r0]
   17414:	bx	lr
   17418:	ldrb	r0, [r0, #28]
   1741c:	bx	lr
   17420:	push	{fp, lr}
   17424:	mov	fp, sp
   17428:	ldrb	r3, [r0, #28]
   1742c:	ldr	r2, [r0, #20]
   17430:	eor	lr, r3, #1
   17434:	add	r2, r2, lr
   17438:	and	r3, r2, #3
   1743c:	ldr	ip, [r0, r3, lsl #2]
   17440:	str	r1, [r0, r3, lsl #2]
   17444:	str	r3, [r0, #20]
   17448:	ldr	r1, [r0, #24]
   1744c:	cmp	r3, r1
   17450:	addeq	r1, r2, lr
   17454:	andeq	r1, r1, #3
   17458:	streq	r1, [r0, #24]
   1745c:	mov	r1, #0
   17460:	strb	r1, [r0, #28]
   17464:	mov	r0, ip
   17468:	pop	{fp, pc}
   1746c:	ldrb	r1, [r0, #28]
   17470:	cmp	r1, #0
   17474:	bne	174b8 <__assert_fail@plt+0x58f4>
   17478:	ldr	r3, [r0, #20]
   1747c:	ldr	r2, [r0, #16]
   17480:	ldr	r1, [r0, r3, lsl #2]
   17484:	str	r2, [r0, r3, lsl #2]
   17488:	ldr	r2, [r0, #20]
   1748c:	ldr	r3, [r0, #24]
   17490:	cmp	r2, r3
   17494:	moveq	r2, #1
   17498:	strbeq	r2, [r0, #28]
   1749c:	moveq	r0, r1
   174a0:	bxeq	lr
   174a4:	sub	r2, r2, #1
   174a8:	and	r2, r2, #3
   174ac:	str	r2, [r0, #20]
   174b0:	mov	r0, r1
   174b4:	bx	lr
   174b8:	push	{fp, lr}
   174bc:	mov	fp, sp
   174c0:	bl	11b64 <abort@plt>

000174c4 <lchmod@@Base>:
   174c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   174c8:	add	fp, sp, #24
   174cc:	sub	sp, sp, #136	; 0x88
   174d0:	mov	r4, r1
   174d4:	mov	r1, #2654208	; 0x288000
   174d8:	mov	r5, r0
   174dc:	bl	1193c <open64@plt>
   174e0:	mov	r6, r0
   174e4:	cmp	r0, #0
   174e8:	blt	1753c <lchmod@@Base+0x78>
   174ec:	movw	r2, #52163	; 0xcbc3
   174f0:	mov	r0, #4096	; 0x1000
   174f4:	add	r3, sp, #32
   174f8:	mov	r1, r6
   174fc:	str	r0, [sp]
   17500:	movt	r2, #1
   17504:	mov	r0, #3
   17508:	bl	118b8 <__fxstatat64@plt>
   1750c:	cmp	r0, #0
   17510:	beq	1754c <lchmod@@Base+0x88>
   17514:	bl	11a08 <__errno_location@plt>
   17518:	ldr	r5, [r0]
   1751c:	mov	r4, r0
   17520:	mov	r0, r6
   17524:	bl	11b70 <close@plt>
   17528:	str	r5, [r4]
   1752c:	mvn	r7, #0
   17530:	mov	r0, r7
   17534:	sub	sp, fp, #24
   17538:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1753c:	mov	r7, r6
   17540:	mov	r0, r7
   17544:	sub	sp, fp, #24
   17548:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1754c:	ldr	r0, [sp, #48]	; 0x30
   17550:	and	r0, r0, #61440	; 0xf000
   17554:	cmp	r0, #40960	; 0xa000
   17558:	bne	17580 <lchmod@@Base+0xbc>
   1755c:	mov	r0, r6
   17560:	bl	11b70 <close@plt>
   17564:	bl	11a08 <__errno_location@plt>
   17568:	mov	r1, #95	; 0x5f
   1756c:	mvn	r7, #0
   17570:	str	r1, [r0]
   17574:	mov	r0, r7
   17578:	sub	sp, fp, #24
   1757c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17580:	movw	r3, #52548	; 0xcd44
   17584:	add	r7, sp, #6
   17588:	mov	r1, #1
   1758c:	mov	r2, #26
   17590:	str	r6, [sp]
   17594:	movt	r3, #1
   17598:	mov	r0, r7
   1759c:	bl	11a14 <__sprintf_chk@plt>
   175a0:	mov	r0, r7
   175a4:	mov	r1, r4
   175a8:	bl	11b34 <chmod@plt>
   175ac:	mov	r7, r0
   175b0:	bl	11a08 <__errno_location@plt>
   175b4:	ldr	r9, [r0]
   175b8:	mov	r8, r0
   175bc:	mov	r0, r6
   175c0:	bl	11b70 <close@plt>
   175c4:	cmp	r7, #0
   175c8:	beq	175f0 <lchmod@@Base+0x12c>
   175cc:	cmp	r9, #2
   175d0:	bne	17600 <lchmod@@Base+0x13c>
   175d4:	mov	r0, r5
   175d8:	mov	r1, r4
   175dc:	bl	11b34 <chmod@plt>
   175e0:	mov	r7, r0
   175e4:	mov	r0, r7
   175e8:	sub	sp, fp, #24
   175ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   175f0:	mov	r7, #0
   175f4:	mov	r0, r7
   175f8:	sub	sp, fp, #24
   175fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17600:	str	r9, [r8]
   17604:	mov	r0, r7
   17608:	sub	sp, fp, #24
   1760c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17610:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17614:	add	fp, sp, #28
   17618:	sub	sp, sp, #4
   1761c:	ldrb	r1, [r0]
   17620:	mov	r4, r0
   17624:	and	r0, r1, #248	; 0xf8
   17628:	cmp	r0, #48	; 0x30
   1762c:	bne	17678 <lchmod@@Base+0x1b4>
   17630:	mov	r0, #0
   17634:	mov	r5, #0
   17638:	mov	r2, r4
   1763c:	lsl	r3, r5, #3
   17640:	uxtab	r1, r3, r1
   17644:	sub	r5, r1, #48	; 0x30
   17648:	cmp	r0, r5, lsr #12
   1764c:	bne	17670 <lchmod@@Base+0x1ac>
   17650:	ldrb	r1, [r2, #1]
   17654:	add	r6, r2, #1
   17658:	and	r2, r1, #248	; 0xf8
   1765c:	cmp	r2, #48	; 0x30
   17660:	mov	r2, r6
   17664:	beq	1763c <lchmod@@Base+0x178>
   17668:	cmp	r1, #0
   1766c:	beq	176f8 <lchmod@@Base+0x234>
   17670:	sub	sp, fp, #28
   17674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17678:	movw	sl, #5
   1767c:	mov	r2, #1
   17680:	mvn	r3, #42	; 0x2a
   17684:	mov	r7, #1
   17688:	mov	r0, #1
   1768c:	movt	sl, #4
   17690:	uxtab	r6, r3, r1
   17694:	uxtb	r1, r1
   17698:	cmp	r6, #18
   1769c:	bls	176c0 <lchmod@@Base+0x1fc>
   176a0:	b	176cc <lchmod@@Base+0x208>
   176a4:	ldrb	r1, [r4, r7]
   176a8:	add	r0, r6, r0
   176ac:	add	r7, r7, #1
   176b0:	uxtab	r6, r3, r1
   176b4:	uxtb	r1, r1
   176b8:	cmp	r6, #18
   176bc:	bhi	176cc <lchmod@@Base+0x208>
   176c0:	tst	sl, r2, lsl r6
   176c4:	mov	r6, #1
   176c8:	bne	176a4 <lchmod@@Base+0x1e0>
   176cc:	cmp	r1, #0
   176d0:	beq	176dc <lchmod@@Base+0x218>
   176d4:	mov	r6, #0
   176d8:	b	176a4 <lchmod@@Base+0x1e0>
   176dc:	mov	r1, #16
   176e0:	bl	1a6dc <lchmod@@Base+0x3218>
   176e4:	mov	r9, #0
   176e8:	mov	ip, #1
   176ec:	mvn	lr, #87	; 0x57
   176f0:	mov	r8, #0
   176f4:	b	17744 <lchmod@@Base+0x280>
   176f8:	mov	r0, #32
   176fc:	bl	1a60c <lchmod@@Base+0x3148>
   17700:	movw	r1, #317	; 0x13d
   17704:	mov	r2, #0
   17708:	and	r3, r5, #3072	; 0xc00
   1770c:	movw	r7, #1023	; 0x3ff
   17710:	strh	r1, [r0]
   17714:	strb	r2, [r0, #17]
   17718:	sub	r2, r6, r4
   1771c:	movw	r1, #4095	; 0xfff
   17720:	cmp	r2, #5
   17724:	str	r1, [r0, #4]
   17728:	str	r5, [r0, #8]
   1772c:	orrlt	r1, r3, r7
   17730:	str	r1, [r0, #12]
   17734:	sub	sp, fp, #28
   17738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1773c:	add	r4, r4, #1
   17740:	mov	r8, r3
   17744:	mov	r2, #0
   17748:	ldrb	r6, [r4]
   1774c:	sub	r3, r6, #97	; 0x61
   17750:	cmp	r3, #20
   17754:	bls	17774 <lchmod@@Base+0x2b0>
   17758:	b	177ec <lchmod@@Base+0x328>
   1775c:	orr	r2, r2, r1
   17760:	add	r4, r4, #1
   17764:	ldrb	r6, [r4]
   17768:	sub	r3, r6, #97	; 0x61
   1776c:	cmp	r3, #20
   17770:	bhi	177ec <lchmod@@Base+0x328>
   17774:	add	r5, pc, #4
   17778:	mov	r1, #2496	; 0x9c0
   1777c:	ldr	pc, [r5, r3, lsl #2]
   17780:	ldrdeq	r7, [r1], -r4
   17784:	andeq	r7, r1, r8, ror #20
   17788:	andeq	r7, r1, r8, ror #20
   1778c:	andeq	r7, r1, r8, ror #20
   17790:	andeq	r7, r1, r8, ror #20
   17794:	andeq	r7, r1, r8, ror #20
   17798:	ldrdeq	r7, [r1], -ip
   1779c:	andeq	r7, r1, r8, ror #20
   177a0:	andeq	r7, r1, r8, ror #20
   177a4:	andeq	r7, r1, r8, ror #20
   177a8:	andeq	r7, r1, r8, ror #20
   177ac:	andeq	r7, r1, r8, ror #20
   177b0:	andeq	r7, r1, r8, ror #20
   177b4:	andeq	r7, r1, r8, ror #20
   177b8:	andeq	r7, r1, r4, ror #15
   177bc:	andeq	r7, r1, r8, ror #20
   177c0:	andeq	r7, r1, r8, ror #20
   177c4:	andeq	r7, r1, r8, ror #20
   177c8:	andeq	r7, r1, r8, ror #20
   177cc:	andeq	r7, r1, r8, ror #20
   177d0:	andeq	r7, r1, ip, asr r7
   177d4:	movw	r1, #4095	; 0xfff
   177d8:	b	1775c <lchmod@@Base+0x298>
   177dc:	movw	r1, #1080	; 0x438
   177e0:	b	1775c <lchmod@@Base+0x298>
   177e4:	movw	r1, #519	; 0x207
   177e8:	b	1775c <lchmod@@Base+0x298>
   177ec:	sub	r1, r6, #43	; 0x2b
   177f0:	cmp	r1, #18
   177f4:	bhi	17a68 <lchmod@@Base+0x5a4>
   177f8:	tst	sl, ip, lsl r1
   177fc:	beq	17a68 <lchmod@@Base+0x5a4>
   17800:	ldrb	r1, [r4, #1]
   17804:	sub	r3, r1, #48	; 0x30
   17808:	cmp	r3, #8
   1780c:	bcs	17868 <lchmod@@Base+0x3a4>
   17810:	add	r3, r4, #2
   17814:	mov	r7, #0
   17818:	lsl	r4, r7, #3
   1781c:	uxtab	r1, r4, r1
   17820:	sub	r7, r1, #48	; 0x30
   17824:	cmp	r9, r7, lsr #12
   17828:	bne	17a68 <lchmod@@Base+0x5a4>
   1782c:	ldrb	r1, [r3], #1
   17830:	and	r4, r1, #248	; 0xf8
   17834:	cmp	r4, #48	; 0x30
   17838:	beq	17818 <lchmod@@Base+0x354>
   1783c:	cmp	r2, #0
   17840:	bne	17a68 <lchmod@@Base+0x5a4>
   17844:	sub	r4, r3, #1
   17848:	mov	r5, #1
   1784c:	movw	r2, #4095	; 0xfff
   17850:	cmp	r1, #0
   17854:	beq	17894 <lchmod@@Base+0x3d0>
   17858:	cmp	r1, #44	; 0x2c
   1785c:	movw	r1, #4095	; 0xfff
   17860:	beq	179b4 <lchmod@@Base+0x4f0>
   17864:	b	17a68 <lchmod@@Base+0x5a4>
   17868:	add	r4, r4, #2
   1786c:	cmp	r1, #103	; 0x67
   17870:	beq	1789c <lchmod@@Base+0x3d8>
   17874:	cmp	r1, #111	; 0x6f
   17878:	beq	178ac <lchmod@@Base+0x3e8>
   1787c:	cmp	r1, #117	; 0x75
   17880:	bne	178bc <lchmod@@Base+0x3f8>
   17884:	mov	r5, #3
   17888:	mov	r1, #0
   1788c:	mov	r7, #448	; 0x1c0
   17890:	b	179b4 <lchmod@@Base+0x4f0>
   17894:	movw	r1, #4095	; 0xfff
   17898:	b	179b4 <lchmod@@Base+0x4f0>
   1789c:	mov	r5, #3
   178a0:	mov	r1, #0
   178a4:	mov	r7, #56	; 0x38
   178a8:	b	179b4 <lchmod@@Base+0x4f0>
   178ac:	mov	r5, #3
   178b0:	mov	r1, #0
   178b4:	mov	r7, #7
   178b8:	b	179b4 <lchmod@@Base+0x4f0>
   178bc:	mov	r3, #1
   178c0:	mov	r7, #0
   178c4:	uxtab	r1, lr, r1
   178c8:	mov	r5, r3
   178cc:	cmp	r1, #32
   178d0:	bls	178ec <lchmod@@Base+0x428>
   178d4:	b	179a8 <lchmod@@Base+0x4e4>
   178d8:	ldrb	r1, [r4], #1
   178dc:	uxtab	r1, lr, r1
   178e0:	mov	r5, r3
   178e4:	cmp	r1, #32
   178e8:	bhi	179a8 <lchmod@@Base+0x4e4>
   178ec:	add	ip, pc, #4
   178f0:	mov	r3, #2
   178f4:	ldr	pc, [ip, r1, lsl #2]
   178f8:	ldrdeq	r7, [r1], -r8
   178fc:	andeq	r7, r1, r8, lsr #19
   17900:	andeq	r7, r1, r8, lsr #19
   17904:	andeq	r7, r1, r8, lsr #19
   17908:	andeq	r7, r1, r8, lsr #19
   1790c:	andeq	r7, r1, r8, lsr #19
   17910:	andeq	r7, r1, r8, lsr #19
   17914:	andeq	r7, r1, r8, lsr #19
   17918:	andeq	r7, r1, r8, lsr #19
   1791c:	andeq	r7, r1, r8, lsr #19
   17920:	andeq	r7, r1, r8, lsr #19
   17924:	andeq	r7, r1, r8, lsr #19
   17928:	andeq	r7, r1, r8, lsr #19
   1792c:	andeq	r7, r1, r8, lsr #19
   17930:	andeq	r7, r1, r8, lsr #19
   17934:	andeq	r7, r1, r8, lsr #19
   17938:	andeq	r7, r1, r8, lsr #19
   1793c:	andeq	r7, r1, r8, lsr #19
   17940:	andeq	r7, r1, r8, lsr #19
   17944:	andeq	r7, r1, r8, lsr #19
   17948:	andeq	r7, r1, r8, lsr #19
   1794c:	andeq	r7, r1, r8, lsr #19
   17950:	andeq	r7, r1, r8, lsr #19
   17954:	andeq	r7, r1, r8, lsr #19
   17958:	andeq	r7, r1, r8, lsr #19
   1795c:	andeq	r7, r1, r8, lsr #19
   17960:	andeq	r7, r1, ip, ror r9
   17964:	andeq	r7, r1, r4, lsl #19
   17968:	andeq	r7, r1, ip, lsl #19
   1796c:	andeq	r7, r1, r8, lsr #19
   17970:	andeq	r7, r1, r8, lsr #19
   17974:	muleq	r1, r4, r9
   17978:	muleq	r1, ip, r9
   1797c:	orr	r7, r7, #292	; 0x124
   17980:	b	179a0 <lchmod@@Base+0x4dc>
   17984:	orr	r7, r7, #3072	; 0xc00
   17988:	b	179a0 <lchmod@@Base+0x4dc>
   1798c:	orr	r7, r7, #512	; 0x200
   17990:	b	179a0 <lchmod@@Base+0x4dc>
   17994:	orr	r7, r7, #146	; 0x92
   17998:	b	179a0 <lchmod@@Base+0x4dc>
   1799c:	orr	r7, r7, #73	; 0x49
   179a0:	mov	r3, r5
   179a4:	b	178d8 <lchmod@@Base+0x414>
   179a8:	sub	r4, r4, #1
   179ac:	mov	r1, #0
   179b0:	mov	ip, #1
   179b4:	mov	r3, r0
   179b8:	cmp	r1, #0
   179bc:	strb	r6, [r3, r8, lsl #4]!
   179c0:	strb	r5, [r3, #1]
   179c4:	stmib	r3, {r2, r7}
   179c8:	bne	179d8 <lchmod@@Base+0x514>
   179cc:	cmp	r2, #0
   179d0:	andne	r7, r7, r2
   179d4:	mov	r1, r7
   179d8:	add	r7, r0, r8, lsl #4
   179dc:	add	r3, r8, #1
   179e0:	str	r1, [r7, #12]
   179e4:	ldrb	r6, [r4]
   179e8:	sub	r1, r6, #43	; 0x2b
   179ec:	cmp	r1, #18
   179f0:	bhi	17a4c <lchmod@@Base+0x588>
   179f4:	add	r7, pc, #4
   179f8:	mov	r8, r3
   179fc:	ldr	pc, [r7, r1, lsl #2]
   17a00:	andeq	r7, r1, r0, lsl #16
   17a04:	andeq	r7, r1, ip, lsr r7
   17a08:	andeq	r7, r1, r0, lsl #16
   17a0c:	andeq	r7, r1, r8, ror #20
   17a10:	andeq	r7, r1, r8, ror #20
   17a14:	andeq	r7, r1, r8, ror #20
   17a18:	andeq	r7, r1, r8, ror #20
   17a1c:	andeq	r7, r1, r8, ror #20
   17a20:	andeq	r7, r1, r8, ror #20
   17a24:	andeq	r7, r1, r8, ror #20
   17a28:	andeq	r7, r1, r8, ror #20
   17a2c:	andeq	r7, r1, r8, ror #20
   17a30:	andeq	r7, r1, r8, ror #20
   17a34:	andeq	r7, r1, r8, ror #20
   17a38:	andeq	r7, r1, r8, ror #20
   17a3c:	andeq	r7, r1, r8, ror #20
   17a40:	andeq	r7, r1, r8, ror #20
   17a44:	andeq	r7, r1, r8, ror #20
   17a48:	andeq	r7, r1, r0, lsl #16
   17a4c:	cmp	r6, #0
   17a50:	bne	17a68 <lchmod@@Base+0x5a4>
   17a54:	add	r1, r0, r3, lsl #4
   17a58:	mov	r2, #0
   17a5c:	strb	r2, [r1, #1]
   17a60:	sub	sp, fp, #28
   17a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a68:	bl	137a4 <__assert_fail@plt+0x1be0>
   17a6c:	mov	r0, #0
   17a70:	sub	sp, fp, #28
   17a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a78:	push	{r4, sl, fp, lr}
   17a7c:	add	fp, sp, #8
   17a80:	sub	sp, sp, #104	; 0x68
   17a84:	mov	r1, r0
   17a88:	mov	r2, sp
   17a8c:	mov	r0, #3
   17a90:	bl	11b40 <__xstat64@plt>
   17a94:	mov	r1, r0
   17a98:	mov	r0, #0
   17a9c:	cmp	r1, #0
   17aa0:	beq	17aac <lchmod@@Base+0x5e8>
   17aa4:	sub	sp, fp, #8
   17aa8:	pop	{r4, sl, fp, pc}
   17aac:	ldr	r4, [sp, #16]
   17ab0:	mov	r0, #32
   17ab4:	bl	1a60c <lchmod@@Base+0x3148>
   17ab8:	movw	r1, #317	; 0x13d
   17abc:	strh	r1, [r0]
   17ac0:	movw	r1, #4095	; 0xfff
   17ac4:	stmib	r0, {r1, r4}
   17ac8:	str	r1, [r0, #12]
   17acc:	mov	r1, #0
   17ad0:	strb	r1, [r0, #17]
   17ad4:	sub	sp, fp, #8
   17ad8:	pop	{r4, sl, fp, pc}
   17adc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17ae0:	add	fp, sp, #24
   17ae4:	ldrb	r4, [r3, #1]
   17ae8:	ldr	ip, [fp, #8]
   17aec:	bfc	r0, #12, #20
   17af0:	cmp	r4, #0
   17af4:	beq	17bdc <lchmod@@Base+0x718>
   17af8:	cmp	r1, #0
   17afc:	mov	lr, r1
   17b00:	add	r3, r3, #8
   17b04:	mov	r9, #0
   17b08:	movw	r8, #4095	; 0xfff
   17b0c:	movwne	lr, #3072	; 0xc00
   17b10:	mov	r5, r3
   17b14:	ldr	r7, [r3, #-4]
   17b18:	ldr	r3, [r3]
   17b1c:	uxtb	r4, r4
   17b20:	ldr	r6, [r5, #4]
   17b24:	cmp	r4, #2
   17b28:	bic	r6, lr, r6
   17b2c:	beq	17b58 <lchmod@@Base+0x694>
   17b30:	cmp	r4, #3
   17b34:	bne	17b64 <lchmod@@Base+0x6a0>
   17b38:	and	r4, r3, r0
   17b3c:	tst	r4, #146	; 0x92
   17b40:	mov	r3, r4
   17b44:	orrne	r3, r3, #146	; 0x92
   17b48:	tst	r4, #292	; 0x124
   17b4c:	orrne	r3, r3, #292	; 0x124
   17b50:	tst	r4, #73	; 0x49
   17b54:	b	17b60 <lchmod@@Base+0x69c>
   17b58:	and	r4, r0, #73	; 0x49
   17b5c:	orrs	r4, r4, r1
   17b60:	orrne	r3, r3, #73	; 0x49
   17b64:	cmp	r7, #0
   17b68:	mov	r4, r7
   17b6c:	mvneq	r4, r2
   17b70:	bic	r4, r4, r6
   17b74:	and	r3, r4, r3
   17b78:	ldrb	r4, [r5, #-8]
   17b7c:	cmp	r4, #43	; 0x2b
   17b80:	beq	17bb0 <lchmod@@Base+0x6ec>
   17b84:	cmp	r4, #45	; 0x2d
   17b88:	beq	17bb8 <lchmod@@Base+0x6f4>
   17b8c:	cmp	r4, #61	; 0x3d
   17b90:	bne	17bc0 <lchmod@@Base+0x6fc>
   17b94:	mvn	r4, r7
   17b98:	cmp	r7, #0
   17b9c:	orrne	r6, r6, r4
   17ba0:	and	r0, r6, r0
   17ba4:	orr	r0, r3, r0
   17ba8:	bic	r3, r8, r6
   17bac:	b	17bbc <lchmod@@Base+0x6f8>
   17bb0:	orr	r0, r3, r0
   17bb4:	b	17bbc <lchmod@@Base+0x6f8>
   17bb8:	bic	r0, r0, r3
   17bbc:	orr	r9, r3, r9
   17bc0:	ldrb	r4, [r5, #9]
   17bc4:	add	r3, r5, #16
   17bc8:	cmp	r4, #0
   17bcc:	bne	17b10 <lchmod@@Base+0x64c>
   17bd0:	cmp	ip, #0
   17bd4:	strne	r9, [ip]
   17bd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17bdc:	mov	r9, #0
   17be0:	cmp	ip, #0
   17be4:	strne	r9, [ip]
   17be8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17bec:	sub	sp, sp, #4
   17bf0:	push	{fp, lr}
   17bf4:	mov	fp, sp
   17bf8:	sub	sp, sp, #4
   17bfc:	str	r3, [fp, #8]
   17c00:	mov	r3, #0
   17c04:	tst	r2, #64	; 0x40
   17c08:	addne	r3, fp, #8
   17c0c:	addne	r3, r3, #4
   17c10:	strne	r3, [sp]
   17c14:	ldrne	r3, [fp, #8]
   17c18:	bl	119f0 <openat64@plt>
   17c1c:	bl	19f08 <lchmod@@Base+0x2a44>
   17c20:	mov	sp, fp
   17c24:	pop	{fp, lr}
   17c28:	add	sp, sp, #4
   17c2c:	bx	lr
   17c30:	push	{r4, r5, r6, sl, fp, lr}
   17c34:	add	fp, sp, #16
   17c38:	orr	r2, r2, #18688	; 0x4900
   17c3c:	mov	r4, r3
   17c40:	orr	r2, r2, #524288	; 0x80000
   17c44:	bl	17bec <lchmod@@Base+0x728>
   17c48:	mov	r5, r0
   17c4c:	mov	r0, #0
   17c50:	cmp	r5, #0
   17c54:	poplt	{r4, r5, r6, sl, fp, pc}
   17c58:	mov	r0, r5
   17c5c:	bl	11abc <fdopendir@plt>
   17c60:	cmp	r0, #0
   17c64:	strne	r5, [r4]
   17c68:	popne	{r4, r5, r6, sl, fp, pc}
   17c6c:	bl	11a08 <__errno_location@plt>
   17c70:	ldr	r6, [r0]
   17c74:	mov	r4, r0
   17c78:	mov	r0, r5
   17c7c:	bl	11b70 <close@plt>
   17c80:	mov	r0, #0
   17c84:	str	r6, [r4]
   17c88:	pop	{r4, r5, r6, sl, fp, pc}
   17c8c:	push	{r4, r5, fp, lr}
   17c90:	add	fp, sp, #8
   17c94:	cmp	r0, #0
   17c98:	beq	17d2c <lchmod@@Base+0x868>
   17c9c:	mov	r1, #47	; 0x2f
   17ca0:	mov	r4, r0
   17ca4:	bl	11a98 <strrchr@plt>
   17ca8:	cmp	r0, #0
   17cac:	mov	r5, r4
   17cb0:	addne	r5, r0, #1
   17cb4:	sub	r0, r5, r4
   17cb8:	cmp	r0, #7
   17cbc:	blt	17d10 <lchmod@@Base+0x84c>
   17cc0:	movw	r1, #52621	; 0xcd8d
   17cc4:	sub	r0, r5, #7
   17cc8:	mov	r2, #7
   17ccc:	movt	r1, #1
   17cd0:	bl	11b58 <strncmp@plt>
   17cd4:	cmp	r0, #0
   17cd8:	bne	17d10 <lchmod@@Base+0x84c>
   17cdc:	movw	r1, #52629	; 0xcd95
   17ce0:	mov	r0, r5
   17ce4:	mov	r2, #3
   17ce8:	movt	r1, #1
   17cec:	bl	11b58 <strncmp@plt>
   17cf0:	cmp	r0, #0
   17cf4:	beq	17d00 <lchmod@@Base+0x83c>
   17cf8:	mov	r4, r5
   17cfc:	b	17d10 <lchmod@@Base+0x84c>
   17d00:	movw	r0, #57808	; 0xe1d0
   17d04:	add	r4, r5, #3
   17d08:	movt	r0, #2
   17d0c:	str	r4, [r0]
   17d10:	movw	r0, #57812	; 0xe1d4
   17d14:	movt	r0, #2
   17d18:	str	r4, [r0]
   17d1c:	movw	r0, #57848	; 0xe1f8
   17d20:	movt	r0, #2
   17d24:	str	r4, [r0]
   17d28:	pop	{r4, r5, fp, pc}
   17d2c:	movw	r0, #57824	; 0xe1e0
   17d30:	mov	r1, #55	; 0x37
   17d34:	mov	r2, #1
   17d38:	movt	r0, #2
   17d3c:	ldr	r3, [r0]
   17d40:	movw	r0, #52565	; 0xcd55
   17d44:	movt	r0, #1
   17d48:	bl	118e8 <fwrite@plt>
   17d4c:	bl	11b64 <abort@plt>
   17d50:	push	{r4, r5, r6, sl, fp, lr}
   17d54:	add	fp, sp, #16
   17d58:	mov	r4, r0
   17d5c:	movw	r0, #57856	; 0xe200
   17d60:	movt	r0, #2
   17d64:	cmp	r4, #0
   17d68:	moveq	r4, r0
   17d6c:	bl	11a08 <__errno_location@plt>
   17d70:	ldr	r6, [r0]
   17d74:	mov	r5, r0
   17d78:	mov	r0, r4
   17d7c:	mov	r1, #48	; 0x30
   17d80:	bl	1aa6c <lchmod@@Base+0x35a8>
   17d84:	str	r6, [r5]
   17d88:	pop	{r4, r5, r6, sl, fp, pc}
   17d8c:	movw	r1, #57856	; 0xe200
   17d90:	cmp	r0, #0
   17d94:	movt	r1, #2
   17d98:	movne	r1, r0
   17d9c:	ldr	r0, [r1]
   17da0:	bx	lr
   17da4:	movw	r2, #57856	; 0xe200
   17da8:	cmp	r0, #0
   17dac:	movt	r2, #2
   17db0:	movne	r2, r0
   17db4:	str	r1, [r2]
   17db8:	bx	lr
   17dbc:	movw	r3, #57856	; 0xe200
   17dc0:	cmp	r0, #0
   17dc4:	movt	r3, #2
   17dc8:	movne	r3, r0
   17dcc:	ubfx	r0, r1, #5, #3
   17dd0:	and	r1, r1, #31
   17dd4:	add	r0, r3, r0, lsl #2
   17dd8:	ldr	r3, [r0, #8]
   17ddc:	eor	r2, r2, r3, lsr r1
   17de0:	and	r2, r2, #1
   17de4:	eor	r2, r3, r2, lsl r1
   17de8:	str	r2, [r0, #8]
   17dec:	mov	r0, #1
   17df0:	and	r0, r0, r3, lsr r1
   17df4:	bx	lr
   17df8:	movw	r2, #57856	; 0xe200
   17dfc:	cmp	r0, #0
   17e00:	movt	r2, #2
   17e04:	movne	r2, r0
   17e08:	ldr	r0, [r2, #4]
   17e0c:	str	r1, [r2, #4]
   17e10:	bx	lr
   17e14:	movw	r3, #57856	; 0xe200
   17e18:	cmp	r0, #0
   17e1c:	movt	r3, #2
   17e20:	movne	r3, r0
   17e24:	cmp	r1, #0
   17e28:	mov	r0, #10
   17e2c:	cmpne	r2, #0
   17e30:	str	r0, [r3]
   17e34:	bne	17e44 <lchmod@@Base+0x980>
   17e38:	push	{fp, lr}
   17e3c:	mov	fp, sp
   17e40:	bl	11b64 <abort@plt>
   17e44:	str	r1, [r3, #40]	; 0x28
   17e48:	str	r2, [r3, #44]	; 0x2c
   17e4c:	bx	lr
   17e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e54:	add	fp, sp, #28
   17e58:	sub	sp, sp, #20
   17e5c:	mov	r7, r0
   17e60:	ldr	r0, [fp, #8]
   17e64:	movw	r5, #57856	; 0xe200
   17e68:	mov	r8, r3
   17e6c:	mov	r9, r2
   17e70:	mov	sl, r1
   17e74:	movt	r5, #2
   17e78:	cmp	r0, #0
   17e7c:	movne	r5, r0
   17e80:	bl	11a08 <__errno_location@plt>
   17e84:	mov	r4, r0
   17e88:	ldm	r5, {r0, r1}
   17e8c:	ldr	r2, [r5, #40]	; 0x28
   17e90:	ldr	r3, [r5, #44]	; 0x2c
   17e94:	add	r5, r5, #8
   17e98:	ldr	r6, [r4]
   17e9c:	stm	sp, {r0, r1, r5}
   17ea0:	str	r2, [sp, #12]
   17ea4:	str	r3, [sp, #16]
   17ea8:	mov	r0, r7
   17eac:	mov	r1, sl
   17eb0:	mov	r2, r9
   17eb4:	mov	r3, r8
   17eb8:	bl	17ec8 <lchmod@@Base+0xa04>
   17ebc:	str	r6, [r4]
   17ec0:	sub	sp, fp, #28
   17ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ec8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ecc:	add	fp, sp, #28
   17ed0:	sub	sp, sp, #156	; 0x9c
   17ed4:	str	r0, [sp, #76]	; 0x4c
   17ed8:	ldr	r0, [fp, #12]
   17edc:	mov	r6, r1
   17ee0:	str	r3, [sp, #84]	; 0x54
   17ee4:	str	r2, [fp, #-84]	; 0xffffffac
   17ee8:	and	r1, r0, #4
   17eec:	str	r1, [sp, #24]
   17ef0:	and	r1, r0, #1
   17ef4:	str	r1, [sp, #28]
   17ef8:	ubfx	r8, r0, #1, #1
   17efc:	bl	11900 <__ctype_get_mb_cur_max@plt>
   17f00:	str	r0, [sp, #32]
   17f04:	ldr	r0, [fp, #24]
   17f08:	ldr	r7, [fp, #8]
   17f0c:	mov	r1, #0
   17f10:	mov	r2, #0
   17f14:	mov	r4, #1
   17f18:	str	r1, [sp, #52]	; 0x34
   17f1c:	str	r0, [sp, #72]	; 0x48
   17f20:	ldr	r0, [fp, #20]
   17f24:	str	r0, [sp, #68]	; 0x44
   17f28:	mov	r0, #0
   17f2c:	str	r0, [sp, #48]	; 0x30
   17f30:	mov	r0, #0
   17f34:	str	r0, [sp, #92]	; 0x5c
   17f38:	mov	r0, #0
   17f3c:	str	r0, [fp, #-76]	; 0xffffffb4
   17f40:	mov	r0, #0
   17f44:	cmp	r7, #10
   17f48:	bhi	19230 <lchmod@@Base+0x1d6c>
   17f4c:	add	r1, pc, #28
   17f50:	mov	sl, r6
   17f54:	ldr	r6, [sp, #76]	; 0x4c
   17f58:	ldr	ip, [fp, #-84]	; 0xffffffac
   17f5c:	ldr	lr, [sp, #84]	; 0x54
   17f60:	mov	r9, #0
   17f64:	mov	r3, #1
   17f68:	mov	r5, #0
   17f6c:	ldr	pc, [r1, r7, lsl #2]
   17f70:	andeq	r8, r1, r0, asr #32
   17f74:	andeq	r8, r1, ip, ror r0
   17f78:	andeq	r8, r1, r0, asr r0
   17f7c:	andeq	r8, r1, r8, lsr r0
   17f80:	andeq	r8, r1, r0, ror r0
   17f84:	andeq	r8, r1, r4, lsr #1
   17f88:	andeq	r8, r1, r0, rrx
   17f8c:			; <UNDEFINED> instruction: 0x000182b0
   17f90:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   17f94:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   17f98:	andeq	r8, r1, r4, asr #4
   17f9c:	mov	r9, r4
   17fa0:	movw	r4, #52711	; 0xcde7
   17fa4:	mov	r5, r8
   17fa8:	mov	r8, r2
   17fac:	mov	r0, #0
   17fb0:	mov	r2, #5
   17fb4:	movt	r4, #1
   17fb8:	mov	r1, r4
   17fbc:	bl	11870 <dcgettext@plt>
   17fc0:	cmp	r0, r4
   17fc4:	str	r0, [sp, #68]	; 0x44
   17fc8:	bne	18158 <lchmod@@Base+0xc94>
   17fcc:	bl	1bfdc <lchmod@@Base+0x4b18>
   17fd0:	ldrb	r1, [r0]
   17fd4:	and	r1, r1, #223	; 0xdf
   17fd8:	cmp	r1, #71	; 0x47
   17fdc:	beq	18124 <lchmod@@Base+0xc60>
   17fe0:	cmp	r1, #85	; 0x55
   17fe4:	bne	1813c <lchmod@@Base+0xc78>
   17fe8:	ldrb	r1, [r0, #1]
   17fec:	and	r1, r1, #223	; 0xdf
   17ff0:	cmp	r1, #84	; 0x54
   17ff4:	bne	1813c <lchmod@@Base+0xc78>
   17ff8:	ldrb	r1, [r0, #2]
   17ffc:	and	r1, r1, #223	; 0xdf
   18000:	cmp	r1, #70	; 0x46
   18004:	bne	1813c <lchmod@@Base+0xc78>
   18008:	ldrb	r1, [r0, #3]
   1800c:	cmp	r1, #45	; 0x2d
   18010:	ldrbeq	r1, [r0, #4]
   18014:	cmpeq	r1, #56	; 0x38
   18018:	bne	1813c <lchmod@@Base+0xc78>
   1801c:	ldrb	r0, [r0, #5]
   18020:	cmp	r0, #0
   18024:	movw	r0, #52715	; 0xcdeb
   18028:	movt	r0, #1
   1802c:	str	r0, [sp, #68]	; 0x44
   18030:	bne	1813c <lchmod@@Base+0xc78>
   18034:	b	18158 <lchmod@@Base+0xc94>
   18038:	mov	r0, #1
   1803c:	b	1807c <lchmod@@Base+0xbb8>
   18040:	mov	r7, #0
   18044:	mov	r9, #0
   18048:	mov	r3, r0
   1804c:	b	1811c <lchmod@@Base+0xc58>
   18050:	tst	r8, #1
   18054:	bne	1807c <lchmod@@Base+0xbb8>
   18058:	mov	r3, r0
   1805c:	b	180d4 <lchmod@@Base+0xc10>
   18060:	mov	r0, #1
   18064:	mov	r9, #0
   18068:	mov	r7, #5
   1806c:	b	180b8 <lchmod@@Base+0xbf4>
   18070:	mov	r3, #1
   18074:	tst	r8, #1
   18078:	beq	180d4 <lchmod@@Base+0xc10>
   1807c:	mov	r1, #1
   18080:	mov	r9, #0
   18084:	mov	r7, #2
   18088:	mov	r3, r0
   1808c:	mov	r5, #1
   18090:	str	r1, [fp, #-76]	; 0xffffffb4
   18094:	movw	r1, #52713	; 0xcde9
   18098:	movt	r1, #1
   1809c:	str	r1, [sp, #92]	; 0x5c
   180a0:	b	182b0 <lchmod@@Base+0xdec>
   180a4:	mov	r7, #5
   180a8:	tst	r8, #1
   180ac:	beq	180f4 <lchmod@@Base+0xc30>
   180b0:	mov	r0, #1
   180b4:	mov	r9, #0
   180b8:	str	r0, [fp, #-76]	; 0xffffffb4
   180bc:	movw	r0, #52709	; 0xcde5
   180c0:	mov	r3, #1
   180c4:	mov	r5, #1
   180c8:	movt	r0, #1
   180cc:	str	r0, [sp, #92]	; 0x5c
   180d0:	b	182b0 <lchmod@@Base+0xdec>
   180d4:	cmp	sl, #0
   180d8:	mov	r9, #1
   180dc:	mov	r7, #2
   180e0:	movne	r0, #39	; 0x27
   180e4:	strbne	r0, [r6]
   180e8:	movw	r0, #52713	; 0xcde9
   180ec:	movt	r0, #1
   180f0:	b	18110 <lchmod@@Base+0xc4c>
   180f4:	cmp	sl, #0
   180f8:	mov	r9, #1
   180fc:	mov	r3, #1
   18100:	movne	r0, #34	; 0x22
   18104:	strbne	r0, [r6]
   18108:	movw	r0, #52709	; 0xcde5
   1810c:	movt	r0, #1
   18110:	str	r0, [sp, #92]	; 0x5c
   18114:	mov	r0, #1
   18118:	str	r0, [fp, #-76]	; 0xffffffb4
   1811c:	mov	r5, #0
   18120:	b	182b0 <lchmod@@Base+0xdec>
   18124:	ldrb	r1, [r0, #1]
   18128:	and	r1, r1, #223	; 0xdf
   1812c:	cmp	r1, #66	; 0x42
   18130:	ldrbeq	r1, [r0, #2]
   18134:	cmpeq	r1, #49	; 0x31
   18138:	beq	19058 <lchmod@@Base+0x1b94>
   1813c:	movw	r0, #52713	; 0xcde9
   18140:	movw	r1, #52709	; 0xcde5
   18144:	cmp	r7, #9
   18148:	movt	r0, #1
   1814c:	movt	r1, #1
   18150:	moveq	r0, r1
   18154:	str	r0, [sp, #68]	; 0x44
   18158:	movw	r4, #52713	; 0xcde9
   1815c:	mov	r0, #0
   18160:	mov	r2, #5
   18164:	movt	r4, #1
   18168:	mov	r1, r4
   1816c:	bl	11870 <dcgettext@plt>
   18170:	cmp	r0, r4
   18174:	str	r0, [sp, #72]	; 0x48
   18178:	beq	18188 <lchmod@@Base+0xcc4>
   1817c:	mov	r4, r9
   18180:	mov	r2, r8
   18184:	b	18240 <lchmod@@Base+0xd7c>
   18188:	bl	1bfdc <lchmod@@Base+0x4b18>
   1818c:	ldrb	r1, [r0]
   18190:	mov	r4, r9
   18194:	and	r1, r1, #223	; 0xdf
   18198:	cmp	r1, #71	; 0x47
   1819c:	beq	181f8 <lchmod@@Base+0xd34>
   181a0:	cmp	r1, #85	; 0x55
   181a4:	mov	r2, r8
   181a8:	bne	18220 <lchmod@@Base+0xd5c>
   181ac:	ldrb	r1, [r0, #1]
   181b0:	and	r1, r1, #223	; 0xdf
   181b4:	cmp	r1, #84	; 0x54
   181b8:	bne	18220 <lchmod@@Base+0xd5c>
   181bc:	ldrb	r1, [r0, #2]
   181c0:	and	r1, r1, #223	; 0xdf
   181c4:	cmp	r1, #70	; 0x46
   181c8:	ldrbeq	r1, [r0, #3]
   181cc:	cmpeq	r1, #45	; 0x2d
   181d0:	bne	18220 <lchmod@@Base+0xd5c>
   181d4:	ldrb	r1, [r0, #4]
   181d8:	cmp	r1, #56	; 0x38
   181dc:	ldrbeq	r0, [r0, #5]
   181e0:	cmpeq	r0, #0
   181e4:	bne	18220 <lchmod@@Base+0xd5c>
   181e8:	movw	r0, #52719	; 0xcdef
   181ec:	movt	r0, #1
   181f0:	str	r0, [sp, #72]	; 0x48
   181f4:	b	18240 <lchmod@@Base+0xd7c>
   181f8:	ldrb	r1, [r0, #1]
   181fc:	mov	r2, r8
   18200:	and	r1, r1, #223	; 0xdf
   18204:	cmp	r1, #66	; 0x42
   18208:	bne	18220 <lchmod@@Base+0xd5c>
   1820c:	ldrb	r1, [r0, #2]
   18210:	cmp	r1, #49	; 0x31
   18214:	ldrbeq	r1, [r0, #3]
   18218:	cmpeq	r1, #56	; 0x38
   1821c:	beq	1909c <lchmod@@Base+0x1bd8>
   18220:	movw	r0, #52713	; 0xcde9
   18224:	cmp	r7, #9
   18228:	movt	r0, #1
   1822c:	mov	r1, r0
   18230:	movw	r0, #52709	; 0xcde5
   18234:	movt	r0, #1
   18238:	moveq	r1, r0
   1823c:	str	r1, [sp, #72]	; 0x48
   18240:	mov	r8, r5
   18244:	mov	r9, #0
   18248:	tst	r8, #1
   1824c:	mov	r5, r8
   18250:	str	r2, [fp, #-48]	; 0xffffffd0
   18254:	bne	1828c <lchmod@@Base+0xdc8>
   18258:	ldr	r0, [sp, #68]	; 0x44
   1825c:	ldrb	r0, [r0]
   18260:	cmp	r0, #0
   18264:	beq	1828c <lchmod@@Base+0xdc8>
   18268:	ldr	r1, [sp, #68]	; 0x44
   1826c:	mov	r9, #0
   18270:	add	r1, r1, #1
   18274:	cmp	r9, sl
   18278:	strbcc	r0, [r6, r9]
   1827c:	ldrb	r0, [r1, r9]
   18280:	add	r9, r9, #1
   18284:	cmp	r0, #0
   18288:	bne	18274 <lchmod@@Base+0xdb0>
   1828c:	ldr	r8, [sp, #72]	; 0x48
   18290:	mov	r0, r8
   18294:	bl	119cc <strlen@plt>
   18298:	ldr	ip, [fp, #-84]	; 0xffffffac
   1829c:	ldr	lr, [sp, #84]	; 0x54
   182a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   182a4:	str	r0, [fp, #-76]	; 0xffffffb4
   182a8:	str	r8, [sp, #92]	; 0x5c
   182ac:	mov	r3, #1
   182b0:	ldr	r0, [fp, #16]
   182b4:	str	r7, [fp, #-64]	; 0xffffffc0
   182b8:	str	r5, [fp, #-72]	; 0xffffffb8
   182bc:	str	r3, [sp, #80]	; 0x50
   182c0:	cmp	r0, #0
   182c4:	movwne	r0, #1
   182c8:	and	r0, r0, r5
   182cc:	str	r0, [fp, #-88]	; 0xffffffa8
   182d0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   182d4:	cmp	r0, #0
   182d8:	movwne	r0, #1
   182dc:	subs	r7, r7, #2
   182e0:	and	r1, r0, r5
   182e4:	str	r7, [fp, #-80]	; 0xffffffb0
   182e8:	and	r1, r3, r1
   182ec:	str	r1, [sp, #40]	; 0x28
   182f0:	clz	r1, r7
   182f4:	lsr	r1, r1, #5
   182f8:	and	r1, r1, r5
   182fc:	eor	r5, r5, #1
   18300:	str	r1, [sp, #36]	; 0x24
   18304:	mov	r1, r7
   18308:	str	r5, [sp, #88]	; 0x58
   1830c:	mov	r7, #0
   18310:	movwne	r1, #1
   18314:	orr	r5, r1, r5
   18318:	and	r1, r1, r3
   1831c:	and	r0, r0, r1
   18320:	str	r5, [sp, #60]	; 0x3c
   18324:	str	r1, [fp, #-68]	; 0xffffffbc
   18328:	str	r0, [fp, #-60]	; 0xffffffc4
   1832c:	eor	r0, r3, #1
   18330:	str	r0, [sp, #44]	; 0x2c
   18334:	cmn	lr, #1
   18338:	beq	18348 <lchmod@@Base+0xe84>
   1833c:	cmp	r7, lr
   18340:	bne	18354 <lchmod@@Base+0xe90>
   18344:	b	18fcc <lchmod@@Base+0x1b08>
   18348:	ldrb	r0, [ip, r7]
   1834c:	cmp	r0, #0
   18350:	beq	18fd4 <lchmod@@Base+0x1b10>
   18354:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18358:	mov	r8, #0
   1835c:	str	r4, [fp, #-52]	; 0xffffffcc
   18360:	str	r2, [fp, #-48]	; 0xffffffd0
   18364:	cmp	r0, #0
   18368:	beq	1839c <lchmod@@Base+0xed8>
   1836c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   18370:	add	r4, r7, r0
   18374:	cmp	r0, #2
   18378:	bcc	18394 <lchmod@@Base+0xed0>
   1837c:	cmn	lr, #1
   18380:	bne	18394 <lchmod@@Base+0xed0>
   18384:	mov	r0, ip
   18388:	bl	119cc <strlen@plt>
   1838c:	ldr	ip, [fp, #-84]	; 0xffffffac
   18390:	mov	lr, r0
   18394:	cmp	r4, lr
   18398:	bls	183b4 <lchmod@@Base+0xef0>
   1839c:	mov	r0, #0
   183a0:	str	r0, [fp, #-56]	; 0xffffffc8
   183a4:	ldrb	r5, [ip, r7]
   183a8:	cmp	r5, #126	; 0x7e
   183ac:	bls	18404 <lchmod@@Base+0xf40>
   183b0:	b	1880c <lchmod@@Base+0x1348>
   183b4:	ldr	r1, [sp, #92]	; 0x5c
   183b8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   183bc:	add	r0, ip, r7
   183c0:	mov	r4, lr
   183c4:	bl	11864 <memcmp@plt>
   183c8:	ldr	r2, [sp, #88]	; 0x58
   183cc:	cmp	r0, #0
   183d0:	mov	r1, r0
   183d4:	movwne	r1, #1
   183d8:	orr	r1, r1, r2
   183dc:	tst	r1, #1
   183e0:	beq	190e0 <lchmod@@Base+0x1c1c>
   183e4:	ldr	ip, [fp, #-84]	; 0xffffffac
   183e8:	clz	r0, r0
   183ec:	mov	lr, r4
   183f0:	lsr	r0, r0, #5
   183f4:	str	r0, [fp, #-56]	; 0xffffffc8
   183f8:	ldrb	r5, [ip, r7]
   183fc:	cmp	r5, #126	; 0x7e
   18400:	bhi	1880c <lchmod@@Base+0x1348>
   18404:	add	r3, pc, #16
   18408:	mov	r4, #1
   1840c:	mov	r2, #110	; 0x6e
   18410:	mov	r0, #97	; 0x61
   18414:	mov	r1, #0
   18418:	ldr	pc, [r3, r5, lsl #2]
   1841c:	andeq	r8, r1, ip, ror #13
   18420:	andeq	r8, r1, ip, lsl #16
   18424:	andeq	r8, r1, ip, lsl #16
   18428:	andeq	r8, r1, ip, lsl #16
   1842c:	andeq	r8, r1, ip, lsl #16
   18430:	andeq	r8, r1, ip, lsl #16
   18434:	andeq	r8, r1, ip, lsl #16
   18438:	andeq	r8, r1, r8, ror #17
   1843c:	andeq	r8, r1, ip, asr #13
   18440:			; <UNDEFINED> instruction: 0x000186b4
   18444:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18448:	andeq	r8, r1, r8, ror #14
   1844c:	andeq	r8, r1, ip, lsr #13
   18450:	ldrdeq	r8, [r1], -r4
   18454:	andeq	r8, r1, ip, lsl #16
   18458:	andeq	r8, r1, ip, lsl #16
   1845c:	andeq	r8, r1, ip, lsl #16
   18460:	andeq	r8, r1, ip, lsl #16
   18464:	andeq	r8, r1, ip, lsl #16
   18468:	andeq	r8, r1, ip, lsl #16
   1846c:	andeq	r8, r1, ip, lsl #16
   18470:	andeq	r8, r1, ip, lsl #16
   18474:	andeq	r8, r1, ip, lsl #16
   18478:	andeq	r8, r1, ip, lsl #16
   1847c:	andeq	r8, r1, ip, lsl #16
   18480:	andeq	r8, r1, ip, lsl #16
   18484:	andeq	r8, r1, ip, lsl #16
   18488:	andeq	r8, r1, ip, lsl #16
   1848c:	andeq	r8, r1, ip, lsl #16
   18490:	andeq	r8, r1, ip, lsl #16
   18494:	andeq	r8, r1, ip, lsl #16
   18498:	andeq	r8, r1, ip, lsl #16
   1849c:	andeq	r8, r1, r4, ror #16
   184a0:	andeq	r8, r1, r8, ror #16
   184a4:	andeq	r8, r1, r8, ror #16
   184a8:	andeq	r8, r1, r8, lsr r6
   184ac:	andeq	r8, r1, r8, ror #16
   184b0:	andeq	r8, r1, r8, lsl r6
   184b4:	andeq	r8, r1, r8, ror #16
   184b8:	andeq	r8, r1, r0, ror r7
   184bc:	andeq	r8, r1, r8, ror #16
   184c0:	andeq	r8, r1, r8, ror #16
   184c4:	andeq	r8, r1, r8, ror #16
   184c8:	andeq	r8, r1, r8, lsl r6
   184cc:	andeq	r8, r1, r8, lsl r6
   184d0:	andeq	r8, r1, r8, lsl r6
   184d4:	andeq	r8, r1, r8, lsl r6
   184d8:	andeq	r8, r1, r8, lsl r6
   184dc:	andeq	r8, r1, r8, lsl r6
   184e0:	andeq	r8, r1, r8, lsl r6
   184e4:	andeq	r8, r1, r8, lsl r6
   184e8:	andeq	r8, r1, r8, lsl r6
   184ec:	andeq	r8, r1, r8, lsl r6
   184f0:	andeq	r8, r1, r8, lsl r6
   184f4:	andeq	r8, r1, r8, lsl r6
   184f8:	andeq	r8, r1, r8, lsl r6
   184fc:	andeq	r8, r1, r8, lsl r6
   18500:	andeq	r8, r1, r8, lsl r6
   18504:	andeq	r8, r1, r8, lsl r6
   18508:	andeq	r8, r1, r8, ror #16
   1850c:	andeq	r8, r1, r8, ror #16
   18510:	andeq	r8, r1, r8, ror #16
   18514:	andeq	r8, r1, r8, ror #16
   18518:	andeq	r8, r1, ip, lsr #14
   1851c:	andeq	r8, r1, ip, lsl #16
   18520:	andeq	r8, r1, r8, lsl r6
   18524:	andeq	r8, r1, r8, lsl r6
   18528:	andeq	r8, r1, r8, lsl r6
   1852c:	andeq	r8, r1, r8, lsl r6
   18530:	andeq	r8, r1, r8, lsl r6
   18534:	andeq	r8, r1, r8, lsl r6
   18538:	andeq	r8, r1, r8, lsl r6
   1853c:	andeq	r8, r1, r8, lsl r6
   18540:	andeq	r8, r1, r8, lsl r6
   18544:	andeq	r8, r1, r8, lsl r6
   18548:	andeq	r8, r1, r8, lsl r6
   1854c:	andeq	r8, r1, r8, lsl r6
   18550:	andeq	r8, r1, r8, lsl r6
   18554:	andeq	r8, r1, r8, lsl r6
   18558:	andeq	r8, r1, r8, lsl r6
   1855c:	andeq	r8, r1, r8, lsl r6
   18560:	andeq	r8, r1, r8, lsl r6
   18564:	andeq	r8, r1, r8, lsl r6
   18568:	andeq	r8, r1, r8, lsl r6
   1856c:	andeq	r8, r1, r8, lsl r6
   18570:	andeq	r8, r1, r8, lsl r6
   18574:	andeq	r8, r1, r8, lsl r6
   18578:	andeq	r8, r1, r8, lsl r6
   1857c:	andeq	r8, r1, r8, lsl r6
   18580:	andeq	r8, r1, r8, lsl r6
   18584:	andeq	r8, r1, r8, lsl r6
   18588:	andeq	r8, r1, r8, ror #16
   1858c:	andeq	r8, r1, r8, ror r6
   18590:	andeq	r8, r1, r8, lsl r6
   18594:	andeq	r8, r1, r8, ror #16
   18598:	andeq	r8, r1, r8, lsl r6
   1859c:	andeq	r8, r1, r8, ror #16
   185a0:	andeq	r8, r1, r8, lsl r6
   185a4:	andeq	r8, r1, r8, lsl r6
   185a8:	andeq	r8, r1, r8, lsl r6
   185ac:	andeq	r8, r1, r8, lsl r6
   185b0:	andeq	r8, r1, r8, lsl r6
   185b4:	andeq	r8, r1, r8, lsl r6
   185b8:	andeq	r8, r1, r8, lsl r6
   185bc:	andeq	r8, r1, r8, lsl r6
   185c0:	andeq	r8, r1, r8, lsl r6
   185c4:	andeq	r8, r1, r8, lsl r6
   185c8:	andeq	r8, r1, r8, lsl r6
   185cc:	andeq	r8, r1, r8, lsl r6
   185d0:	andeq	r8, r1, r8, lsl r6
   185d4:	andeq	r8, r1, r8, lsl r6
   185d8:	andeq	r8, r1, r8, lsl r6
   185dc:	andeq	r8, r1, r8, lsl r6
   185e0:	andeq	r8, r1, r8, lsl r6
   185e4:	andeq	r8, r1, r8, lsl r6
   185e8:	andeq	r8, r1, r8, lsl r6
   185ec:	andeq	r8, r1, r8, lsl r6
   185f0:	andeq	r8, r1, r8, lsl r6
   185f4:	andeq	r8, r1, r8, lsl r6
   185f8:	andeq	r8, r1, r8, lsl r6
   185fc:	andeq	r8, r1, r8, lsl r6
   18600:	andeq	r8, r1, r8, lsl r6
   18604:	andeq	r8, r1, r8, lsl r6
   18608:	andeq	r8, r1, r8, asr r6
   1860c:	andeq	r8, r1, r8, ror #16
   18610:	andeq	r8, r1, r8, asr r6
   18614:	andeq	r8, r1, r8, lsr r6
   18618:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1861c:	cmp	r0, #0
   18620:	beq	188fc <lchmod@@Base+0x1438>
   18624:	ldr	r0, [fp, #16]
   18628:	cmp	r0, #0
   1862c:	mov	r0, r5
   18630:	bne	1890c <lchmod@@Base+0x1448>
   18634:	b	1892c <lchmod@@Base+0x1468>
   18638:	mov	r4, #0
   1863c:	cmp	r7, #0
   18640:	beq	18864 <lchmod@@Base+0x13a0>
   18644:	mov	r8, #0
   18648:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1864c:	cmp	r0, #0
   18650:	bne	18624 <lchmod@@Base+0x1160>
   18654:	b	188fc <lchmod@@Base+0x1438>
   18658:	mov	r4, #0
   1865c:	cmn	lr, #1
   18660:	beq	1883c <lchmod@@Base+0x1378>
   18664:	cmp	r7, #0
   18668:	bne	18644 <lchmod@@Base+0x1180>
   1866c:	cmp	lr, #1
   18670:	beq	18864 <lchmod@@Base+0x13a0>
   18674:	b	18644 <lchmod@@Base+0x1180>
   18678:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1867c:	cmp	r0, #2
   18680:	bne	18894 <lchmod@@Base+0x13d0>
   18684:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18688:	tst	r0, #1
   1868c:	bne	190f4 <lchmod@@Base+0x1c30>
   18690:	mov	r8, #0
   18694:	mov	r0, #92	; 0x5c
   18698:	mov	r4, #0
   1869c:	cmp	r8, #0
   186a0:	beq	188b4 <lchmod@@Base+0x13f0>
   186a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   186a8:	b	189a8 <lchmod@@Base+0x14e4>
   186ac:	mov	r0, #102	; 0x66
   186b0:	b	188e8 <lchmod@@Base+0x1424>
   186b4:	mov	r2, #116	; 0x74
   186b8:	ldr	r0, [sp, #60]	; 0x3c
   186bc:	tst	r0, #1
   186c0:	mov	r0, r2
   186c4:	bne	188e8 <lchmod@@Base+0x1424>
   186c8:	b	190f4 <lchmod@@Base+0x1c30>
   186cc:	mov	r0, #98	; 0x62
   186d0:	b	188e8 <lchmod@@Base+0x1424>
   186d4:	mov	r2, #114	; 0x72
   186d8:	ldr	r0, [sp, #60]	; 0x3c
   186dc:	tst	r0, #1
   186e0:	mov	r0, r2
   186e4:	bne	188e8 <lchmod@@Base+0x1424>
   186e8:	b	190f4 <lchmod@@Base+0x1c30>
   186ec:	ldr	r0, [sp, #80]	; 0x50
   186f0:	tst	r0, #1
   186f4:	beq	189d0 <lchmod@@Base+0x150c>
   186f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   186fc:	tst	r0, #1
   18700:	bne	1921c <lchmod@@Base+0x1d58>
   18704:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18708:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1870c:	cmp	r0, #2
   18710:	ldr	r0, [fp, #-80]	; 0xffffffb0
   18714:	movwne	r0, #1
   18718:	orr	r0, r0, r2
   1871c:	tst	r0, #1
   18720:	beq	18cc8 <lchmod@@Base+0x1804>
   18724:	mov	r0, r9
   18728:	b	18cfc <lchmod@@Base+0x1838>
   1872c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18730:	mov	r8, #0
   18734:	mov	r5, #63	; 0x3f
   18738:	cmp	r0, #5
   1873c:	beq	18b84 <lchmod@@Base+0x16c0>
   18740:	cmp	r0, #2
   18744:	bne	18c34 <lchmod@@Base+0x1770>
   18748:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1874c:	tst	r0, #1
   18750:	bne	190f4 <lchmod@@Base+0x1c30>
   18754:	mov	r4, #0
   18758:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1875c:	cmp	r0, #0
   18760:	bne	18624 <lchmod@@Base+0x1160>
   18764:	b	188fc <lchmod@@Base+0x1438>
   18768:	mov	r0, #118	; 0x76
   1876c:	b	188e8 <lchmod@@Base+0x1424>
   18770:	mov	r0, #1
   18774:	mov	r5, #39	; 0x27
   18778:	str	r0, [sp, #52]	; 0x34
   1877c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18780:	cmp	r0, #2
   18784:	bne	187f8 <lchmod@@Base+0x1334>
   18788:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1878c:	tst	r0, #1
   18790:	bne	190f4 <lchmod@@Base+0x1c30>
   18794:	ldr	r2, [sp, #48]	; 0x30
   18798:	clz	r1, sl
   1879c:	mov	r8, #0
   187a0:	lsr	r1, r1, #5
   187a4:	cmp	r2, #0
   187a8:	mov	r0, r2
   187ac:	movwne	r0, #1
   187b0:	orrs	r0, r0, r1
   187b4:	moveq	r2, sl
   187b8:	moveq	sl, r0
   187bc:	cmp	r9, sl
   187c0:	str	r2, [sp, #48]	; 0x30
   187c4:	movcc	r0, #39	; 0x27
   187c8:	strbcc	r0, [r6, r9]
   187cc:	add	r0, r9, #1
   187d0:	cmp	r0, sl
   187d4:	movcc	r1, #92	; 0x5c
   187d8:	strbcc	r1, [r6, r0]
   187dc:	add	r0, r9, #2
   187e0:	add	r9, r9, #3
   187e4:	cmp	r0, sl
   187e8:	movcc	r1, #39	; 0x27
   187ec:	strbcc	r1, [r6, r0]
   187f0:	mov	r0, #0
   187f4:	str	r0, [fp, #-48]	; 0xffffffd0
   187f8:	mov	r4, #1
   187fc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18800:	cmp	r0, #0
   18804:	bne	18624 <lchmod@@Base+0x1160>
   18808:	b	188fc <lchmod@@Base+0x1438>
   1880c:	ldr	r0, [sp, #32]
   18810:	cmp	r0, #1
   18814:	bne	18a00 <lchmod@@Base+0x153c>
   18818:	str	lr, [sp, #84]	; 0x54
   1881c:	bl	1199c <__ctype_b_loc@plt>
   18820:	ldr	r0, [r0]
   18824:	ldr	ip, [fp, #-84]	; 0xffffffac
   18828:	mov	r1, #1
   1882c:	add	r0, r0, r5, lsl #1
   18830:	ldrb	r0, [r0, #1]
   18834:	ubfx	r4, r0, #6, #1
   18838:	b	18df8 <lchmod@@Base+0x1934>
   1883c:	cmp	r7, #0
   18840:	ldrbeq	r0, [ip, #1]
   18844:	cmpeq	r0, #0
   18848:	beq	18864 <lchmod@@Base+0x13a0>
   1884c:	mvn	lr, #0
   18850:	mov	r8, #0
   18854:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18858:	cmp	r0, #0
   1885c:	bne	18624 <lchmod@@Base+0x1160>
   18860:	b	188fc <lchmod@@Base+0x1438>
   18864:	mov	r1, #1
   18868:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1886c:	cmp	r0, #2
   18870:	bne	18880 <lchmod@@Base+0x13bc>
   18874:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18878:	tst	r0, #1
   1887c:	bne	190f4 <lchmod@@Base+0x1c30>
   18880:	mov	r4, r1
   18884:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18888:	cmp	r0, #0
   1888c:	bne	18624 <lchmod@@Base+0x1160>
   18890:	b	188fc <lchmod@@Base+0x1438>
   18894:	ldr	r1, [sp, #40]	; 0x28
   18898:	mov	r8, #0
   1889c:	mov	r0, #92	; 0x5c
   188a0:	cmp	r1, #0
   188a4:	beq	188e8 <lchmod@@Base+0x1424>
   188a8:	mov	r4, #0
   188ac:	cmp	r8, #0
   188b0:	bne	186a4 <lchmod@@Base+0x11e0>
   188b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   188b8:	tst	r2, #1
   188bc:	beq	189a8 <lchmod@@Base+0x14e4>
   188c0:	cmp	r9, sl
   188c4:	movcc	r1, #39	; 0x27
   188c8:	strbcc	r1, [r6, r9]
   188cc:	add	r1, r9, #1
   188d0:	add	r9, r9, #2
   188d4:	cmp	r1, sl
   188d8:	movcc	r2, #39	; 0x27
   188dc:	strbcc	r2, [r6, r1]
   188e0:	mov	r2, #0
   188e4:	b	189a8 <lchmod@@Base+0x14e4>
   188e8:	ldr	r1, [sp, #80]	; 0x50
   188ec:	mov	r4, #0
   188f0:	mov	r8, #0
   188f4:	tst	r1, #1
   188f8:	bne	18938 <lchmod@@Base+0x1474>
   188fc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   18900:	cmp	r0, #0
   18904:	mov	r0, r5
   18908:	beq	1892c <lchmod@@Base+0x1468>
   1890c:	ldr	r1, [fp, #16]
   18910:	ubfx	r0, r5, #5, #3
   18914:	mov	r2, #1
   18918:	ldr	r0, [r1, r0, lsl #2]
   1891c:	and	r1, r5, #31
   18920:	tst	r0, r2, lsl r1
   18924:	mov	r0, r5
   18928:	bne	18938 <lchmod@@Base+0x1474>
   1892c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18930:	cmp	r1, #0
   18934:	beq	18d90 <lchmod@@Base+0x18cc>
   18938:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1893c:	tst	r1, #1
   18940:	bne	190d4 <lchmod@@Base+0x1c10>
   18944:	ldr	r1, [fp, #-64]	; 0xffffffc0
   18948:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1894c:	cmp	r1, #2
   18950:	ldr	r1, [fp, #-80]	; 0xffffffb0
   18954:	movwne	r1, #1
   18958:	orr	r1, r1, r2
   1895c:	tst	r1, #1
   18960:	bne	18998 <lchmod@@Base+0x14d4>
   18964:	cmp	r9, sl
   18968:	movcc	r1, #39	; 0x27
   1896c:	strbcc	r1, [r6, r9]
   18970:	add	r1, r9, #1
   18974:	cmp	r1, sl
   18978:	movcc	r2, #36	; 0x24
   1897c:	strbcc	r2, [r6, r1]
   18980:	add	r1, r9, #2
   18984:	add	r9, r9, #3
   18988:	cmp	r1, sl
   1898c:	movcc	r2, #39	; 0x27
   18990:	strbcc	r2, [r6, r1]
   18994:	mov	r2, #1
   18998:	cmp	r9, sl
   1899c:	movcc	r1, #92	; 0x5c
   189a0:	strbcc	r1, [r6, r9]
   189a4:	add	r9, r9, #1
   189a8:	cmp	r9, sl
   189ac:	add	r7, r7, #1
   189b0:	strbcc	r0, [r6, r9]
   189b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   189b8:	add	r9, r9, #1
   189bc:	and	r0, r0, r4
   189c0:	mov	r4, r0
   189c4:	cmn	lr, #1
   189c8:	bne	1833c <lchmod@@Base+0xe78>
   189cc:	b	18348 <lchmod@@Base+0xe84>
   189d0:	ldr	r0, [sp, #28]
   189d4:	mov	r4, #0
   189d8:	mov	r8, #0
   189dc:	mov	r5, #0
   189e0:	cmp	r0, #0
   189e4:	beq	188fc <lchmod@@Base+0x1438>
   189e8:	ldr	r4, [fp, #-52]	; 0xffffffcc
   189ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   189f0:	add	r7, r7, #1
   189f4:	cmn	lr, #1
   189f8:	bne	1833c <lchmod@@Base+0xe78>
   189fc:	b	18348 <lchmod@@Base+0xe84>
   18a00:	mov	r0, #0
   18a04:	cmn	lr, #1
   18a08:	str	r0, [fp, #-36]	; 0xffffffdc
   18a0c:	str	r0, [fp, #-40]	; 0xffffffd8
   18a10:	bne	18a24 <lchmod@@Base+0x1560>
   18a14:	mov	r0, ip
   18a18:	bl	119cc <strlen@plt>
   18a1c:	ldr	ip, [fp, #-84]	; 0xffffffac
   18a20:	mov	lr, r0
   18a24:	ldr	r0, [sp, #36]	; 0x24
   18a28:	str	sl, [sp, #56]	; 0x38
   18a2c:	str	lr, [sp, #84]	; 0x54
   18a30:	cmp	r0, #0
   18a34:	beq	18c4c <lchmod@@Base+0x1788>
   18a38:	add	r0, ip, r7
   18a3c:	mov	r4, #1
   18a40:	mov	r6, #0
   18a44:	sub	sl, fp, #40	; 0x28
   18a48:	str	r0, [sp, #20]
   18a4c:	str	r6, [sp, #64]	; 0x40
   18a50:	add	r6, r6, r7
   18a54:	sub	r0, fp, #44	; 0x2c
   18a58:	mov	r3, sl
   18a5c:	add	r1, ip, r6
   18a60:	sub	r2, lr, r6
   18a64:	bl	1c014 <lchmod@@Base+0x4b50>
   18a68:	cmn	r0, #2
   18a6c:	beq	18da8 <lchmod@@Base+0x18e4>
   18a70:	ldr	sl, [sp, #56]	; 0x38
   18a74:	cmn	r0, #1
   18a78:	beq	18d9c <lchmod@@Base+0x18d8>
   18a7c:	cmp	r0, #0
   18a80:	beq	18da0 <lchmod@@Base+0x18dc>
   18a84:	cmp	r0, #2
   18a88:	bcc	18b48 <lchmod@@Base+0x1684>
   18a8c:	ldr	r1, [sp, #64]	; 0x40
   18a90:	ldr	r2, [sp, #20]
   18a94:	add	r1, r2, r1
   18a98:	mov	r2, #1
   18a9c:	ldrb	r3, [r1, r2]
   18aa0:	sub	r3, r3, #91	; 0x5b
   18aa4:	cmp	r3, #33	; 0x21
   18aa8:	bhi	18b3c <lchmod@@Base+0x1678>
   18aac:	add	r6, pc, #0
   18ab0:	ldr	pc, [r6, r3, lsl #2]
   18ab4:	andeq	r9, r1, r0, lsl #2
   18ab8:	andeq	r9, r1, r0, lsl #2
   18abc:	andeq	r8, r1, ip, lsr fp
   18ac0:	andeq	r9, r1, r0, lsl #2
   18ac4:	andeq	r8, r1, ip, lsr fp
   18ac8:	andeq	r9, r1, r0, lsl #2
   18acc:	andeq	r8, r1, ip, lsr fp
   18ad0:	andeq	r8, r1, ip, lsr fp
   18ad4:	andeq	r8, r1, ip, lsr fp
   18ad8:	andeq	r8, r1, ip, lsr fp
   18adc:	andeq	r8, r1, ip, lsr fp
   18ae0:	andeq	r8, r1, ip, lsr fp
   18ae4:	andeq	r8, r1, ip, lsr fp
   18ae8:	andeq	r8, r1, ip, lsr fp
   18aec:	andeq	r8, r1, ip, lsr fp
   18af0:	andeq	r8, r1, ip, lsr fp
   18af4:	andeq	r8, r1, ip, lsr fp
   18af8:	andeq	r8, r1, ip, lsr fp
   18afc:	andeq	r8, r1, ip, lsr fp
   18b00:	andeq	r8, r1, ip, lsr fp
   18b04:	andeq	r8, r1, ip, lsr fp
   18b08:	andeq	r8, r1, ip, lsr fp
   18b0c:	andeq	r8, r1, ip, lsr fp
   18b10:	andeq	r8, r1, ip, lsr fp
   18b14:	andeq	r8, r1, ip, lsr fp
   18b18:	andeq	r8, r1, ip, lsr fp
   18b1c:	andeq	r8, r1, ip, lsr fp
   18b20:	andeq	r8, r1, ip, lsr fp
   18b24:	andeq	r8, r1, ip, lsr fp
   18b28:	andeq	r8, r1, ip, lsr fp
   18b2c:	andeq	r8, r1, ip, lsr fp
   18b30:	andeq	r8, r1, ip, lsr fp
   18b34:	andeq	r8, r1, ip, lsr fp
   18b38:	andeq	r9, r1, r0, lsl #2
   18b3c:	add	r2, r2, #1
   18b40:	cmp	r2, r0
   18b44:	bcc	18a9c <lchmod@@Base+0x15d8>
   18b48:	ldr	r6, [sp, #64]	; 0x40
   18b4c:	add	r6, r0, r6
   18b50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18b54:	bl	118c4 <iswprint@plt>
   18b58:	cmp	r0, #0
   18b5c:	sub	sl, fp, #40	; 0x28
   18b60:	movwne	r0, #1
   18b64:	and	r4, r4, r0
   18b68:	mov	r0, sl
   18b6c:	bl	1184c <mbsinit@plt>
   18b70:	ldr	ip, [fp, #-84]	; 0xffffffac
   18b74:	ldr	lr, [sp, #84]	; 0x54
   18b78:	cmp	r0, #0
   18b7c:	beq	18a4c <lchmod@@Base+0x1588>
   18b80:	b	18dec <lchmod@@Base+0x1928>
   18b84:	ldr	r0, [sp, #24]
   18b88:	cmp	r0, #0
   18b8c:	beq	18c34 <lchmod@@Base+0x1770>
   18b90:	add	r0, r7, #2
   18b94:	cmp	r0, lr
   18b98:	bcs	18c34 <lchmod@@Base+0x1770>
   18b9c:	add	r1, ip, r7
   18ba0:	ldrb	r1, [r1, #1]
   18ba4:	cmp	r1, #63	; 0x3f
   18ba8:	bne	18c34 <lchmod@@Base+0x1770>
   18bac:	ldrb	r5, [ip, r0]
   18bb0:	sub	r1, r5, #33	; 0x21
   18bb4:	cmp	r1, #29
   18bb8:	bhi	18c34 <lchmod@@Base+0x1770>
   18bbc:	movw	r3, #20929	; 0x51c1
   18bc0:	mov	r2, #1
   18bc4:	movt	r3, #14336	; 0x3800
   18bc8:	tst	r3, r2, lsl r1
   18bcc:	beq	18c34 <lchmod@@Base+0x1770>
   18bd0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18bd4:	tst	r1, #1
   18bd8:	bne	19224 <lchmod@@Base+0x1d60>
   18bdc:	cmp	r9, sl
   18be0:	mov	r7, r0
   18be4:	mov	r4, #0
   18be8:	movcc	r1, #63	; 0x3f
   18bec:	strbcc	r1, [r6, r9]
   18bf0:	add	r1, r9, #1
   18bf4:	cmp	r1, sl
   18bf8:	movcc	r2, #34	; 0x22
   18bfc:	strbcc	r2, [r6, r1]
   18c00:	add	r1, r9, #2
   18c04:	cmp	r1, sl
   18c08:	movcc	r2, #34	; 0x22
   18c0c:	strbcc	r2, [r6, r1]
   18c10:	add	r1, r9, #3
   18c14:	add	r9, r9, #4
   18c18:	cmp	r1, sl
   18c1c:	movcc	r2, #63	; 0x3f
   18c20:	strbcc	r2, [r6, r1]
   18c24:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18c28:	cmp	r0, #0
   18c2c:	bne	18624 <lchmod@@Base+0x1160>
   18c30:	b	188fc <lchmod@@Base+0x1438>
   18c34:	mov	r5, #63	; 0x3f
   18c38:	mov	r4, #0
   18c3c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18c40:	cmp	r0, #0
   18c44:	bne	18624 <lchmod@@Base+0x1160>
   18c48:	b	188fc <lchmod@@Base+0x1438>
   18c4c:	mov	r4, #1
   18c50:	mov	r6, #0
   18c54:	sub	sl, fp, #40	; 0x28
   18c58:	str	r6, [sp, #64]	; 0x40
   18c5c:	add	r6, r6, r7
   18c60:	sub	r0, fp, #44	; 0x2c
   18c64:	mov	r3, sl
   18c68:	add	r1, ip, r6
   18c6c:	sub	r2, lr, r6
   18c70:	bl	1c014 <lchmod@@Base+0x4b50>
   18c74:	cmn	r0, #2
   18c78:	beq	18da8 <lchmod@@Base+0x18e4>
   18c7c:	cmn	r0, #1
   18c80:	beq	18d9c <lchmod@@Base+0x18d8>
   18c84:	ldr	r6, [sp, #64]	; 0x40
   18c88:	cmp	r0, #0
   18c8c:	beq	18de8 <lchmod@@Base+0x1924>
   18c90:	add	r6, r0, r6
   18c94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18c98:	bl	118c4 <iswprint@plt>
   18c9c:	cmp	r0, #0
   18ca0:	sub	sl, fp, #40	; 0x28
   18ca4:	movwne	r0, #1
   18ca8:	and	r4, r4, r0
   18cac:	mov	r0, sl
   18cb0:	bl	1184c <mbsinit@plt>
   18cb4:	ldr	ip, [fp, #-84]	; 0xffffffac
   18cb8:	ldr	lr, [sp, #84]	; 0x54
   18cbc:	cmp	r0, #0
   18cc0:	beq	18c58 <lchmod@@Base+0x1794>
   18cc4:	b	18dec <lchmod@@Base+0x1928>
   18cc8:	cmp	r9, sl
   18ccc:	mov	r2, #1
   18cd0:	movcc	r0, #39	; 0x27
   18cd4:	strbcc	r0, [r6, r9]
   18cd8:	add	r0, r9, #1
   18cdc:	cmp	r0, sl
   18ce0:	movcc	r1, #36	; 0x24
   18ce4:	strbcc	r1, [r6, r0]
   18ce8:	add	r0, r9, #2
   18cec:	cmp	r0, sl
   18cf0:	movcc	r1, #39	; 0x27
   18cf4:	strbcc	r1, [r6, r0]
   18cf8:	add	r0, r9, #3
   18cfc:	cmp	r0, sl
   18d00:	add	r9, r0, #1
   18d04:	str	r2, [fp, #-48]	; 0xffffffd0
   18d08:	movcc	r1, #92	; 0x5c
   18d0c:	strbcc	r1, [r6, r0]
   18d10:	ldr	r1, [fp, #-64]	; 0xffffffc0
   18d14:	cmp	r1, #2
   18d18:	beq	18d78 <lchmod@@Base+0x18b4>
   18d1c:	add	r1, r7, #1
   18d20:	mov	r4, #0
   18d24:	mov	r8, #1
   18d28:	mov	r5, #48	; 0x30
   18d2c:	cmp	r1, lr
   18d30:	bcs	18618 <lchmod@@Base+0x1154>
   18d34:	ldrb	r1, [ip, r1]
   18d38:	sub	r1, r1, #48	; 0x30
   18d3c:	uxtb	r1, r1
   18d40:	cmp	r1, #9
   18d44:	bhi	18618 <lchmod@@Base+0x1154>
   18d48:	cmp	r9, sl
   18d4c:	movcc	r1, #48	; 0x30
   18d50:	strbcc	r1, [r6, r9]
   18d54:	add	r1, r0, #2
   18d58:	add	r9, r0, #3
   18d5c:	cmp	r1, sl
   18d60:	movcc	r2, #48	; 0x30
   18d64:	strbcc	r2, [r6, r1]
   18d68:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18d6c:	cmp	r0, #0
   18d70:	bne	18624 <lchmod@@Base+0x1160>
   18d74:	b	188fc <lchmod@@Base+0x1438>
   18d78:	mov	r0, #48	; 0x30
   18d7c:	mov	r8, #1
   18d80:	mov	r4, #0
   18d84:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18d88:	cmp	r1, #0
   18d8c:	bne	18938 <lchmod@@Base+0x1474>
   18d90:	cmp	r8, #0
   18d94:	beq	188b4 <lchmod@@Base+0x13f0>
   18d98:	b	186a4 <lchmod@@Base+0x11e0>
   18d9c:	mov	r4, #0
   18da0:	ldr	ip, [fp, #-84]	; 0xffffffac
   18da4:	b	18de0 <lchmod@@Base+0x191c>
   18da8:	ldr	r1, [sp, #84]	; 0x54
   18dac:	ldr	ip, [fp, #-84]	; 0xffffffac
   18db0:	mov	r4, #0
   18db4:	cmp	r6, r1
   18db8:	bcs	18de0 <lchmod@@Base+0x191c>
   18dbc:	ldrb	r0, [ip, r6]
   18dc0:	cmp	r0, #0
   18dc4:	beq	18de0 <lchmod@@Base+0x191c>
   18dc8:	ldr	r0, [sp, #64]	; 0x40
   18dcc:	add	r0, r0, #1
   18dd0:	add	r6, r0, r7
   18dd4:	str	r0, [sp, #64]	; 0x40
   18dd8:	cmp	r6, r1
   18ddc:	bcc	18dbc <lchmod@@Base+0x18f8>
   18de0:	ldr	r6, [sp, #64]	; 0x40
   18de4:	b	18dec <lchmod@@Base+0x1928>
   18de8:	ldr	ip, [fp, #-84]	; 0xffffffac
   18dec:	mov	r1, r6
   18df0:	ldr	r6, [sp, #76]	; 0x4c
   18df4:	ldr	sl, [sp, #56]	; 0x38
   18df8:	ldr	r0, [sp, #44]	; 0x2c
   18dfc:	cmp	r1, #1
   18e00:	orr	r2, r4, r0
   18e04:	mov	r0, r1
   18e08:	bhi	18e28 <lchmod@@Base+0x1964>
   18e0c:	tst	r2, #1
   18e10:	beq	18e28 <lchmod@@Base+0x1964>
   18e14:	ldr	lr, [sp, #84]	; 0x54
   18e18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18e1c:	cmp	r0, #0
   18e20:	bne	18624 <lchmod@@Base+0x1160>
   18e24:	b	188fc <lchmod@@Base+0x1438>
   18e28:	str	r2, [sp, #64]	; 0x40
   18e2c:	add	r0, r0, r7
   18e30:	add	r1, r7, #1
   18e34:	ldr	lr, [sp, #84]	; 0x54
   18e38:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18e3c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18e40:	mov	r3, #0
   18e44:	str	r0, [sp, #56]	; 0x38
   18e48:	ldr	r0, [sp, #64]	; 0x40
   18e4c:	tst	r0, #1
   18e50:	bne	18f38 <lchmod@@Base+0x1a74>
   18e54:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18e58:	tst	r0, #1
   18e5c:	bne	190d8 <lchmod@@Base+0x1c14>
   18e60:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18e64:	cmp	r7, #2
   18e68:	movwne	r3, #1
   18e6c:	orr	r3, r3, r2
   18e70:	tst	r3, #1
   18e74:	bne	18eac <lchmod@@Base+0x19e8>
   18e78:	cmp	r9, sl
   18e7c:	add	r3, r9, #1
   18e80:	movcc	r2, #39	; 0x27
   18e84:	strbcc	r2, [r6, r9]
   18e88:	cmp	r3, sl
   18e8c:	movcc	r2, #36	; 0x24
   18e90:	strbcc	r2, [r6, r3]
   18e94:	add	r3, r9, #2
   18e98:	add	r9, r9, #3
   18e9c:	cmp	r3, sl
   18ea0:	movcc	r2, #39	; 0x27
   18ea4:	strbcc	r2, [r6, r3]
   18ea8:	mov	r2, #1
   18eac:	cmp	r9, sl
   18eb0:	mov	r0, r2
   18eb4:	movcc	r3, #92	; 0x5c
   18eb8:	strbcc	r3, [r6, r9]
   18ebc:	add	r3, r9, #1
   18ec0:	cmp	r3, sl
   18ec4:	andcc	r7, r5, #192	; 0xc0
   18ec8:	movcc	r2, #48	; 0x30
   18ecc:	orrcc	r7, r2, r7, lsr #6
   18ed0:	strbcc	r7, [r6, r3]
   18ed4:	add	r3, r9, #2
   18ed8:	add	r9, r9, #3
   18edc:	cmp	r3, sl
   18ee0:	lsrcc	r7, r5, #3
   18ee4:	movcc	r2, #6
   18ee8:	bficc	r7, r2, #3, #29
   18eec:	mov	r2, #6
   18ef0:	strbcc	r7, [r6, r3]
   18ef4:	bfi	r5, r2, #3, #29
   18ef8:	mov	r3, #1
   18efc:	mov	r2, r0
   18f00:	ldr	r0, [sp, #56]	; 0x38
   18f04:	and	r8, r3, #1
   18f08:	cmp	r0, r1
   18f0c:	bhi	18f6c <lchmod@@Base+0x1aa8>
   18f10:	b	18fac <lchmod@@Base+0x1ae8>
   18f14:	cmp	r9, sl
   18f18:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18f1c:	strbcc	r5, [r6, r9]
   18f20:	add	r9, r9, #1
   18f24:	ldrb	r5, [ip, r1]
   18f28:	add	r1, r1, #1
   18f2c:	ldr	r0, [sp, #64]	; 0x40
   18f30:	tst	r0, #1
   18f34:	beq	18e54 <lchmod@@Base+0x1990>
   18f38:	ldr	r7, [fp, #-56]	; 0xffffffc8
   18f3c:	tst	r7, #1
   18f40:	beq	18f54 <lchmod@@Base+0x1a90>
   18f44:	cmp	r9, sl
   18f48:	movcc	r7, #92	; 0x5c
   18f4c:	strbcc	r7, [r6, r9]
   18f50:	add	r9, r9, #1
   18f54:	mov	r7, #0
   18f58:	str	r7, [fp, #-56]	; 0xffffffc8
   18f5c:	ldr	r0, [sp, #56]	; 0x38
   18f60:	and	r8, r3, #1
   18f64:	cmp	r0, r1
   18f68:	bls	18fac <lchmod@@Base+0x1ae8>
   18f6c:	cmp	r8, #0
   18f70:	mvn	r7, r2
   18f74:	movwne	r8, #1
   18f78:	orr	r7, r7, r8
   18f7c:	tst	r7, #1
   18f80:	bne	18f14 <lchmod@@Base+0x1a50>
   18f84:	cmp	r9, sl
   18f88:	movcc	r7, #39	; 0x27
   18f8c:	strbcc	r7, [r6, r9]
   18f90:	add	r7, r9, #1
   18f94:	add	r9, r9, #2
   18f98:	cmp	r7, sl
   18f9c:	movcc	r2, #39	; 0x27
   18fa0:	strbcc	r2, [r6, r7]
   18fa4:	mov	r2, #0
   18fa8:	b	18f14 <lchmod@@Base+0x1a50>
   18fac:	cmp	r8, #0
   18fb0:	sub	r7, r1, #1
   18fb4:	mov	r0, r5
   18fb8:	str	r2, [fp, #-48]	; 0xffffffd0
   18fbc:	movwne	r8, #1
   18fc0:	cmp	r8, #0
   18fc4:	beq	188b4 <lchmod@@Base+0x13f0>
   18fc8:	b	186a4 <lchmod@@Base+0x11e0>
   18fcc:	mov	lr, r7
   18fd0:	b	18fd8 <lchmod@@Base+0x1b14>
   18fd4:	mvn	lr, #0
   18fd8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18fdc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18fe0:	eor	r0, r7, #2
   18fe4:	orr	r0, r0, r9
   18fe8:	clz	r0, r0
   18fec:	lsr	r0, r0, #5
   18ff0:	tst	r1, r0
   18ff4:	bne	190f4 <lchmod@@Base+0x1c30>
   18ff8:	mov	r0, r1
   18ffc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19000:	cmp	r7, #2
   19004:	movwne	r1, #1
   19008:	orr	r0, r0, r1
   1900c:	tst	r0, #1
   19010:	ldreq	r0, [sp, #52]	; 0x34
   19014:	streq	lr, [sp, #84]	; 0x54
   19018:	eoreq	r0, r0, #1
   1901c:	tsteq	r0, #1
   19020:	bne	191b8 <lchmod@@Base+0x1cf4>
   19024:	tst	r4, #1
   19028:	bne	19174 <lchmod@@Base+0x1cb0>
   1902c:	ldr	r6, [sp, #48]	; 0x30
   19030:	mov	r8, #0
   19034:	cmp	r6, #0
   19038:	beq	191b0 <lchmod@@Base+0x1cec>
   1903c:	ldr	r0, [sp, #80]	; 0x50
   19040:	mov	r1, #0
   19044:	cmp	sl, #0
   19048:	mov	r4, #0
   1904c:	str	r1, [fp, #-72]	; 0xffffffb8
   19050:	beq	17f44 <lchmod@@Base+0xa80>
   19054:	b	191b8 <lchmod@@Base+0x1cf4>
   19058:	ldrb	r1, [r0, #3]
   1905c:	cmp	r1, #56	; 0x38
   19060:	ldrbeq	r1, [r0, #4]
   19064:	cmpeq	r1, #48	; 0x30
   19068:	bne	1813c <lchmod@@Base+0xc78>
   1906c:	ldrb	r1, [r0, #5]
   19070:	cmp	r1, #51	; 0x33
   19074:	ldrbeq	r1, [r0, #6]
   19078:	cmpeq	r1, #48	; 0x30
   1907c:	bne	1813c <lchmod@@Base+0xc78>
   19080:	ldrb	r0, [r0, #7]
   19084:	cmp	r0, #0
   19088:	movw	r0, #52723	; 0xcdf3
   1908c:	movt	r0, #1
   19090:	str	r0, [sp, #68]	; 0x44
   19094:	bne	1813c <lchmod@@Base+0xc78>
   19098:	b	18158 <lchmod@@Base+0xc94>
   1909c:	ldrb	r1, [r0, #4]
   190a0:	cmp	r1, #48	; 0x30
   190a4:	ldrbeq	r1, [r0, #5]
   190a8:	cmpeq	r1, #51	; 0x33
   190ac:	bne	18220 <lchmod@@Base+0xd5c>
   190b0:	ldrb	r1, [r0, #6]
   190b4:	cmp	r1, #48	; 0x30
   190b8:	ldrbeq	r0, [r0, #7]
   190bc:	cmpeq	r0, #0
   190c0:	bne	18220 <lchmod@@Base+0xd5c>
   190c4:	movw	r0, #52727	; 0xcdf7
   190c8:	movt	r0, #1
   190cc:	str	r0, [sp, #72]	; 0x48
   190d0:	b	18240 <lchmod@@Base+0xd7c>
   190d4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   190d8:	ldr	r2, [sp, #80]	; 0x50
   190dc:	b	19114 <lchmod@@Base+0x1c50>
   190e0:	ldr	ip, [fp, #-84]	; 0xffffffac
   190e4:	mov	r2, #1
   190e8:	mov	lr, r4
   190ec:	ldr	r7, [fp, #-64]	; 0xffffffc0
   190f0:	b	19114 <lchmod@@Base+0x1c50>
   190f4:	ldr	r2, [sp, #80]	; 0x50
   190f8:	mov	r7, #2
   190fc:	b	19114 <lchmod@@Base+0x1c50>
   19100:	ldr	r6, [sp, #76]	; 0x4c
   19104:	ldr	ip, [fp, #-84]	; 0xffffffac
   19108:	ldr	lr, [sp, #84]	; 0x54
   1910c:	ldr	r2, [sp, #80]	; 0x50
   19110:	mov	r7, #2
   19114:	mov	r0, #0
   19118:	ldr	r1, [fp, #12]
   1911c:	tst	r2, #1
   19120:	mov	r2, r7
   19124:	mov	r3, lr
   19128:	str	r0, [sp, #8]
   1912c:	ldr	r0, [sp, #68]	; 0x44
   19130:	movwne	r2, #4
   19134:	cmp	r7, #2
   19138:	movne	r2, r7
   1913c:	str	r2, [sp]
   19140:	mov	r2, ip
   19144:	bic	r1, r1, #2
   19148:	str	r0, [sp, #12]
   1914c:	ldr	r0, [sp, #72]	; 0x48
   19150:	str	r1, [sp, #4]
   19154:	mov	r1, sl
   19158:	str	r0, [sp, #16]
   1915c:	mov	r0, r6
   19160:	bl	17ec8 <lchmod@@Base+0xa04>
   19164:	mov	r9, r0
   19168:	mov	r0, r9
   1916c:	sub	sp, fp, #28
   19170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19174:	mov	r0, #5
   19178:	ldr	r1, [sp, #48]	; 0x30
   1917c:	ldr	r2, [fp, #-84]	; 0xffffffac
   19180:	ldr	r3, [sp, #84]	; 0x54
   19184:	str	r0, [sp]
   19188:	ldr	r0, [fp, #12]
   1918c:	str	r0, [sp, #4]
   19190:	ldr	r0, [fp, #16]
   19194:	str	r0, [sp, #8]
   19198:	ldr	r0, [sp, #68]	; 0x44
   1919c:	str	r0, [sp, #12]
   191a0:	ldr	r0, [sp, #72]	; 0x48
   191a4:	str	r0, [sp, #16]
   191a8:	ldr	r0, [sp, #76]	; 0x4c
   191ac:	b	19160 <lchmod@@Base+0x1c9c>
   191b0:	mov	r0, #0
   191b4:	str	r0, [fp, #-72]	; 0xffffffb8
   191b8:	ldr	r1, [sp, #92]	; 0x5c
   191bc:	cmp	r1, #0
   191c0:	beq	19200 <lchmod@@Base+0x1d3c>
   191c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   191c8:	ldr	r2, [sp, #76]	; 0x4c
   191cc:	tst	r0, #1
   191d0:	bne	19204 <lchmod@@Base+0x1d40>
   191d4:	ldrb	r0, [r1]
   191d8:	cmp	r0, #0
   191dc:	beq	19204 <lchmod@@Base+0x1d40>
   191e0:	add	r1, r1, #1
   191e4:	cmp	r9, sl
   191e8:	strbcc	r0, [r2, r9]
   191ec:	add	r9, r9, #1
   191f0:	ldrb	r0, [r1], #1
   191f4:	cmp	r0, #0
   191f8:	bne	191e4 <lchmod@@Base+0x1d20>
   191fc:	b	19204 <lchmod@@Base+0x1d40>
   19200:	ldr	r2, [sp, #76]	; 0x4c
   19204:	cmp	r9, sl
   19208:	movcc	r0, #0
   1920c:	strbcc	r0, [r2, r9]
   19210:	mov	r0, r9
   19214:	sub	sp, fp, #28
   19218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1921c:	mov	r2, #1
   19220:	b	190ec <lchmod@@Base+0x1c28>
   19224:	ldr	r2, [sp, #80]	; 0x50
   19228:	mov	r7, #5
   1922c:	b	19114 <lchmod@@Base+0x1c50>
   19230:	bl	11b64 <abort@plt>
   19234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19238:	add	fp, sp, #28
   1923c:	sub	sp, sp, #28
   19240:	movw	r5, #57856	; 0xe200
   19244:	cmp	r2, #0
   19248:	mov	r4, r1
   1924c:	mov	r7, r0
   19250:	str	r0, [sp, #20]
   19254:	movt	r5, #2
   19258:	movne	r5, r2
   1925c:	bl	11a08 <__errno_location@plt>
   19260:	mov	sl, r0
   19264:	ldm	r5, {r0, r1}
   19268:	ldr	r2, [r5, #40]	; 0x28
   1926c:	ldr	r3, [r5, #44]	; 0x2c
   19270:	add	r9, r5, #8
   19274:	ldr	r6, [sl]
   19278:	orr	r8, r1, #1
   1927c:	mov	r1, #0
   19280:	str	r6, [sp, #24]
   19284:	stm	sp, {r0, r8, r9}
   19288:	str	r2, [sp, #12]
   1928c:	str	r3, [sp, #16]
   19290:	mov	r0, #0
   19294:	mov	r2, r7
   19298:	mov	r3, r4
   1929c:	mov	r6, r4
   192a0:	bl	17ec8 <lchmod@@Base+0xa04>
   192a4:	add	r7, r0, #1
   192a8:	mov	r0, r7
   192ac:	bl	1a63c <lchmod@@Base+0x3178>
   192b0:	mov	r4, r0
   192b4:	ldr	r0, [r5]
   192b8:	ldr	r2, [r5, #44]	; 0x2c
   192bc:	ldr	r1, [r5, #40]	; 0x28
   192c0:	mov	r3, r6
   192c4:	stm	sp, {r0, r8, r9}
   192c8:	str	r2, [sp, #16]
   192cc:	str	r1, [sp, #12]
   192d0:	mov	r0, r4
   192d4:	mov	r1, r7
   192d8:	ldr	r2, [sp, #20]
   192dc:	bl	17ec8 <lchmod@@Base+0xa04>
   192e0:	ldr	r0, [sp, #24]
   192e4:	str	r0, [sl]
   192e8:	mov	r0, r4
   192ec:	sub	sp, fp, #28
   192f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   192f8:	add	fp, sp, #28
   192fc:	sub	sp, sp, #36	; 0x24
   19300:	movw	r8, #57856	; 0xe200
   19304:	cmp	r3, #0
   19308:	mov	r4, r2
   1930c:	str	r2, [sp, #24]
   19310:	mov	r5, r1
   19314:	mov	r6, r0
   19318:	str	r0, [sp, #20]
   1931c:	movt	r8, #2
   19320:	movne	r8, r3
   19324:	bl	11a08 <__errno_location@plt>
   19328:	str	r0, [sp, #28]
   1932c:	cmp	r4, #0
   19330:	add	sl, r8, #8
   19334:	ldm	r8, {r3, r9}
   19338:	ldr	r7, [r0]
   1933c:	ldr	r1, [r8, #40]	; 0x28
   19340:	ldr	r2, [r8, #44]	; 0x2c
   19344:	mov	r0, #0
   19348:	orreq	r9, r9, #1
   1934c:	str	r7, [sp, #32]
   19350:	mov	r7, r5
   19354:	stm	sp, {r3, r9, sl}
   19358:	str	r1, [sp, #12]
   1935c:	str	r2, [sp, #16]
   19360:	mov	r1, #0
   19364:	mov	r2, r6
   19368:	mov	r3, r5
   1936c:	bl	17ec8 <lchmod@@Base+0xa04>
   19370:	add	r4, r0, #1
   19374:	mov	r5, r0
   19378:	mov	r0, r4
   1937c:	bl	1a63c <lchmod@@Base+0x3178>
   19380:	mov	r6, r0
   19384:	ldr	r0, [r8]
   19388:	ldr	r2, [r8, #44]	; 0x2c
   1938c:	ldr	r1, [r8, #40]	; 0x28
   19390:	mov	r3, r7
   19394:	stm	sp, {r0, r9, sl}
   19398:	str	r2, [sp, #16]
   1939c:	str	r1, [sp, #12]
   193a0:	mov	r0, r6
   193a4:	mov	r1, r4
   193a8:	ldr	r2, [sp, #20]
   193ac:	bl	17ec8 <lchmod@@Base+0xa04>
   193b0:	ldr	r0, [sp, #24]
   193b4:	ldr	r1, [sp, #32]
   193b8:	ldr	r2, [sp, #28]
   193bc:	cmp	r0, #0
   193c0:	str	r1, [r2]
   193c4:	strne	r5, [r0]
   193c8:	mov	r0, r6
   193cc:	sub	sp, fp, #28
   193d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193d4:	push	{r4, r5, r6, r7, fp, lr}
   193d8:	add	fp, sp, #16
   193dc:	movw	r4, #57792	; 0xe1c0
   193e0:	movt	r4, #2
   193e4:	ldrd	r6, [r4]
   193e8:	cmp	r7, #2
   193ec:	blt	19418 <lchmod@@Base+0x1f54>
   193f0:	add	r5, r6, #12
   193f4:	mov	r7, #0
   193f8:	ldr	r0, [r5, r7, lsl #3]
   193fc:	bl	137a4 <__assert_fail@plt+0x1be0>
   19400:	ldr	r1, [r4, #4]
   19404:	add	r2, r7, #2
   19408:	add	r0, r7, #1
   1940c:	mov	r7, r0
   19410:	cmp	r2, r1
   19414:	blt	193f8 <lchmod@@Base+0x1f34>
   19418:	ldr	r0, [r6, #4]
   1941c:	movw	r5, #57904	; 0xe230
   19420:	movt	r5, #2
   19424:	cmp	r0, r5
   19428:	beq	1943c <lchmod@@Base+0x1f78>
   1942c:	bl	137a4 <__assert_fail@plt+0x1be0>
   19430:	mov	r0, #256	; 0x100
   19434:	str	r0, [r4, #8]
   19438:	str	r5, [r4, #12]
   1943c:	add	r5, r4, #8
   19440:	cmp	r6, r5
   19444:	beq	19454 <lchmod@@Base+0x1f90>
   19448:	mov	r0, r6
   1944c:	bl	137a4 <__assert_fail@plt+0x1be0>
   19450:	str	r5, [r4]
   19454:	mov	r0, #1
   19458:	str	r0, [r4, #4]
   1945c:	pop	{r4, r5, r6, r7, fp, pc}
   19460:	movw	r3, #57856	; 0xe200
   19464:	mvn	r2, #0
   19468:	movt	r3, #2
   1946c:	b	19470 <lchmod@@Base+0x1fac>
   19470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19474:	add	fp, sp, #28
   19478:	sub	sp, sp, #44	; 0x2c
   1947c:	mov	r7, r3
   19480:	str	r2, [sp, #36]	; 0x24
   19484:	str	r1, [sp, #32]
   19488:	mov	r5, r0
   1948c:	bl	11a08 <__errno_location@plt>
   19490:	cmp	r5, #0
   19494:	blt	195f8 <lchmod@@Base+0x2134>
   19498:	cmn	r5, #-2147483647	; 0x80000001
   1949c:	beq	195f8 <lchmod@@Base+0x2134>
   194a0:	movw	r8, #57792	; 0xe1c0
   194a4:	mov	r4, r0
   194a8:	movt	r8, #2
   194ac:	ldr	r6, [r8]
   194b0:	ldr	r1, [r8, #4]
   194b4:	ldr	r0, [r0]
   194b8:	str	r4, [sp, #28]
   194bc:	cmp	r1, r5
   194c0:	str	r0, [sp, #24]
   194c4:	ble	194d0 <lchmod@@Base+0x200c>
   194c8:	mov	sl, r6
   194cc:	b	19534 <lchmod@@Base+0x2070>
   194d0:	mov	r0, #8
   194d4:	add	r9, r8, #8
   194d8:	add	r2, r5, #1
   194dc:	str	r1, [fp, #-32]	; 0xffffffe0
   194e0:	mvn	r3, #-2147483648	; 0x80000000
   194e4:	str	r0, [sp]
   194e8:	subs	r0, r6, r9
   194ec:	sub	r2, r2, r1
   194f0:	sub	r1, fp, #32
   194f4:	movne	r0, r6
   194f8:	bl	1a83c <lchmod@@Base+0x3378>
   194fc:	str	r0, [r8]
   19500:	cmp	r6, r9
   19504:	mov	sl, r0
   19508:	ldrdeq	r0, [r8, #8]
   1950c:	stmeq	sl, {r0, r1}
   19510:	ldr	r1, [r8, #4]
   19514:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19518:	add	r0, sl, r1, lsl #3
   1951c:	sub	r1, r2, r1
   19520:	lsl	r2, r1, #3
   19524:	mov	r1, #0
   19528:	bl	11a2c <memset@plt>
   1952c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19530:	str	r0, [r8, #4]
   19534:	mov	r9, sl
   19538:	ldr	r6, [r9, r5, lsl #3]!
   1953c:	ldr	r4, [r9, #4]!
   19540:	ldm	r7, {r0, r1}
   19544:	ldr	r2, [r7, #40]	; 0x28
   19548:	ldr	r3, [r7, #44]	; 0x2c
   1954c:	orr	r8, r1, #1
   19550:	add	r1, r7, #8
   19554:	stm	sp, {r0, r8}
   19558:	add	r0, sp, #8
   1955c:	str	r1, [sp, #20]
   19560:	stm	r0, {r1, r2, r3}
   19564:	mov	r0, r4
   19568:	mov	r1, r6
   1956c:	ldr	r2, [sp, #32]
   19570:	ldr	r3, [sp, #36]	; 0x24
   19574:	bl	17ec8 <lchmod@@Base+0xa04>
   19578:	cmp	r6, r0
   1957c:	bhi	195e0 <lchmod@@Base+0x211c>
   19580:	add	r6, r0, #1
   19584:	movw	r0, #57904	; 0xe230
   19588:	movt	r0, #2
   1958c:	str	r6, [sl, r5, lsl #3]
   19590:	cmp	r4, r0
   19594:	beq	195a0 <lchmod@@Base+0x20dc>
   19598:	mov	r0, r4
   1959c:	bl	137a4 <__assert_fail@plt+0x1be0>
   195a0:	mov	r0, r6
   195a4:	bl	1a63c <lchmod@@Base+0x3178>
   195a8:	str	r0, [r9]
   195ac:	mov	r4, r0
   195b0:	add	r3, sp, #8
   195b4:	ldr	r0, [r7]
   195b8:	ldr	r1, [r7, #40]	; 0x28
   195bc:	ldr	r2, [r7, #44]	; 0x2c
   195c0:	stm	sp, {r0, r8}
   195c4:	ldr	r0, [sp, #20]
   195c8:	stm	r3, {r0, r1, r2}
   195cc:	mov	r0, r4
   195d0:	mov	r1, r6
   195d4:	ldr	r2, [sp, #32]
   195d8:	ldr	r3, [sp, #36]	; 0x24
   195dc:	bl	17ec8 <lchmod@@Base+0xa04>
   195e0:	ldr	r1, [sp, #24]
   195e4:	ldr	r0, [sp, #28]
   195e8:	str	r1, [r0]
   195ec:	mov	r0, r4
   195f0:	sub	sp, fp, #28
   195f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195f8:	bl	11b64 <abort@plt>
   195fc:	movw	r3, #57856	; 0xe200
   19600:	movt	r3, #2
   19604:	b	19470 <lchmod@@Base+0x1fac>
   19608:	movw	r3, #57856	; 0xe200
   1960c:	mov	r1, r0
   19610:	mov	r0, #0
   19614:	mvn	r2, #0
   19618:	movt	r3, #2
   1961c:	b	19470 <lchmod@@Base+0x1fac>
   19620:	movw	r3, #57856	; 0xe200
   19624:	mov	r2, r1
   19628:	mov	r1, r0
   1962c:	mov	r0, #0
   19630:	movt	r3, #2
   19634:	b	19470 <lchmod@@Base+0x1fac>
   19638:	push	{fp, lr}
   1963c:	mov	fp, sp
   19640:	sub	sp, sp, #48	; 0x30
   19644:	vmov.i32	q8, #0	; 0x00000000
   19648:	mov	ip, #32
   1964c:	mov	r3, sp
   19650:	mov	lr, r2
   19654:	cmp	r1, #10
   19658:	add	r2, r3, #16
   1965c:	vst1.64	{d16-d17}, [r3], ip
   19660:	vst1.64	{d16-d17}, [r3]
   19664:	vst1.64	{d16-d17}, [r2]
   19668:	beq	19688 <lchmod@@Base+0x21c4>
   1966c:	str	r1, [sp]
   19670:	mov	r3, sp
   19674:	mov	r1, lr
   19678:	mvn	r2, #0
   1967c:	bl	19470 <lchmod@@Base+0x1fac>
   19680:	mov	sp, fp
   19684:	pop	{fp, pc}
   19688:	bl	11b64 <abort@plt>
   1968c:	push	{r4, sl, fp, lr}
   19690:	add	fp, sp, #8
   19694:	sub	sp, sp, #48	; 0x30
   19698:	mov	ip, r3
   1969c:	mov	r3, sp
   196a0:	vmov.i32	q8, #0	; 0x00000000
   196a4:	mov	lr, #32
   196a8:	cmp	r1, #10
   196ac:	add	r4, r3, #16
   196b0:	vst1.64	{d16-d17}, [r3], lr
   196b4:	vst1.64	{d16-d17}, [r3]
   196b8:	vst1.64	{d16-d17}, [r4]
   196bc:	beq	196dc <lchmod@@Base+0x2218>
   196c0:	str	r1, [sp]
   196c4:	mov	r1, r2
   196c8:	mov	r3, sp
   196cc:	mov	r2, ip
   196d0:	bl	19470 <lchmod@@Base+0x1fac>
   196d4:	sub	sp, fp, #8
   196d8:	pop	{r4, sl, fp, pc}
   196dc:	bl	11b64 <abort@plt>
   196e0:	push	{fp, lr}
   196e4:	mov	fp, sp
   196e8:	sub	sp, sp, #48	; 0x30
   196ec:	mov	r3, sp
   196f0:	vmov.i32	q8, #0	; 0x00000000
   196f4:	mov	ip, #32
   196f8:	cmp	r0, #10
   196fc:	add	r2, r3, #16
   19700:	vst1.64	{d16-d17}, [r3], ip
   19704:	vst1.64	{d16-d17}, [r3]
   19708:	vst1.64	{d16-d17}, [r2]
   1970c:	beq	1972c <lchmod@@Base+0x2268>
   19710:	str	r0, [sp]
   19714:	mov	r3, sp
   19718:	mov	r0, #0
   1971c:	mvn	r2, #0
   19720:	bl	19470 <lchmod@@Base+0x1fac>
   19724:	mov	sp, fp
   19728:	pop	{fp, pc}
   1972c:	bl	11b64 <abort@plt>
   19730:	push	{fp, lr}
   19734:	mov	fp, sp
   19738:	sub	sp, sp, #48	; 0x30
   1973c:	mov	r3, sp
   19740:	vmov.i32	q8, #0	; 0x00000000
   19744:	mov	ip, #32
   19748:	cmp	r0, #10
   1974c:	add	lr, r3, #16
   19750:	vst1.64	{d16-d17}, [r3], ip
   19754:	vst1.64	{d16-d17}, [r3]
   19758:	vst1.64	{d16-d17}, [lr]
   1975c:	beq	19778 <lchmod@@Base+0x22b4>
   19760:	str	r0, [sp]
   19764:	mov	r3, sp
   19768:	mov	r0, #0
   1976c:	bl	19470 <lchmod@@Base+0x1fac>
   19770:	mov	sp, fp
   19774:	pop	{fp, pc}
   19778:	bl	11b64 <abort@plt>
   1977c:	push	{r4, sl, fp, lr}
   19780:	add	fp, sp, #8
   19784:	sub	sp, sp, #48	; 0x30
   19788:	mov	lr, r0
   1978c:	movw	r0, #57856	; 0xe200
   19790:	mov	r3, #32
   19794:	mov	ip, r1
   19798:	mov	r4, #1
   1979c:	movt	r0, #2
   197a0:	add	r1, r0, #16
   197a4:	vld1.64	{d16-d17}, [r0], r3
   197a8:	mov	r3, sp
   197ac:	vld1.64	{d18-d19}, [r1]
   197b0:	add	r1, r3, #16
   197b4:	vld1.64	{d20-d21}, [r0]
   197b8:	add	r0, r3, #32
   197bc:	vst1.64	{d18-d19}, [r1]
   197c0:	mov	r1, r3
   197c4:	vst1.64	{d20-d21}, [r0]
   197c8:	mov	r0, #28
   197cc:	and	r0, r0, r2, lsr #3
   197d0:	and	r2, r2, #31
   197d4:	vst1.64	{d16-d17}, [r1], r0
   197d8:	ldr	r0, [r1, #8]
   197dc:	bic	r4, r4, r0, lsr r2
   197e0:	eor	r0, r0, r4, lsl r2
   197e4:	mov	r2, ip
   197e8:	str	r0, [r1, #8]
   197ec:	mov	r0, #0
   197f0:	mov	r1, lr
   197f4:	bl	19470 <lchmod@@Base+0x1fac>
   197f8:	sub	sp, fp, #8
   197fc:	pop	{r4, sl, fp, pc}
   19800:	push	{fp, lr}
   19804:	mov	fp, sp
   19808:	sub	sp, sp, #48	; 0x30
   1980c:	mov	ip, r0
   19810:	movw	r0, #57856	; 0xe200
   19814:	mov	r3, #32
   19818:	movt	r0, #2
   1981c:	add	r2, r0, #16
   19820:	vld1.64	{d16-d17}, [r0], r3
   19824:	mov	r3, sp
   19828:	vld1.64	{d18-d19}, [r2]
   1982c:	add	r2, r3, #16
   19830:	vld1.64	{d20-d21}, [r0]
   19834:	add	r0, r3, #32
   19838:	vst1.64	{d18-d19}, [r2]
   1983c:	mov	r2, r3
   19840:	vst1.64	{d20-d21}, [r0]
   19844:	mov	r0, #28
   19848:	and	r0, r0, r1, lsr #3
   1984c:	and	r1, r1, #31
   19850:	vst1.64	{d16-d17}, [r2], r0
   19854:	mov	r0, #1
   19858:	ldr	lr, [r2, #8]
   1985c:	bic	r0, r0, lr, lsr r1
   19860:	eor	r0, lr, r0, lsl r1
   19864:	mov	r1, ip
   19868:	str	r0, [r2, #8]
   1986c:	mov	r0, #0
   19870:	mvn	r2, #0
   19874:	bl	19470 <lchmod@@Base+0x1fac>
   19878:	mov	sp, fp
   1987c:	pop	{fp, pc}
   19880:	push	{fp, lr}
   19884:	mov	fp, sp
   19888:	sub	sp, sp, #48	; 0x30
   1988c:	movw	r2, #57856	; 0xe200
   19890:	mov	r3, #32
   19894:	mov	r1, r0
   19898:	movt	r2, #2
   1989c:	add	r0, r2, #16
   198a0:	vld1.64	{d16-d17}, [r2], r3
   198a4:	mov	r3, sp
   198a8:	vld1.64	{d18-d19}, [r0]
   198ac:	add	r0, r3, #16
   198b0:	vld1.64	{d20-d21}, [r2]
   198b4:	mov	r2, r3
   198b8:	vst1.64	{d18-d19}, [r0]
   198bc:	add	r0, r3, #32
   198c0:	vst1.64	{d20-d21}, [r0]
   198c4:	mov	r0, #12
   198c8:	vst1.64	{d16-d17}, [r2], r0
   198cc:	ldr	r0, [r2]
   198d0:	orr	r0, r0, #67108864	; 0x4000000
   198d4:	str	r0, [r2]
   198d8:	mov	r0, #0
   198dc:	mvn	r2, #0
   198e0:	bl	19470 <lchmod@@Base+0x1fac>
   198e4:	mov	sp, fp
   198e8:	pop	{fp, pc}
   198ec:	push	{fp, lr}
   198f0:	mov	fp, sp
   198f4:	sub	sp, sp, #48	; 0x30
   198f8:	mov	ip, r1
   198fc:	mov	r1, r0
   19900:	movw	r0, #57856	; 0xe200
   19904:	mov	r3, #32
   19908:	movt	r0, #2
   1990c:	add	r2, r0, #16
   19910:	vld1.64	{d16-d17}, [r0], r3
   19914:	mov	r3, sp
   19918:	vld1.64	{d18-d19}, [r2]
   1991c:	add	r2, r3, #16
   19920:	vld1.64	{d20-d21}, [r0]
   19924:	add	r0, r3, #32
   19928:	vst1.64	{d18-d19}, [r2]
   1992c:	mov	r2, r3
   19930:	vst1.64	{d20-d21}, [r0]
   19934:	mov	r0, #12
   19938:	vst1.64	{d16-d17}, [r2], r0
   1993c:	ldr	r0, [r2]
   19940:	orr	r0, r0, #67108864	; 0x4000000
   19944:	str	r0, [r2]
   19948:	mov	r0, #0
   1994c:	mov	r2, ip
   19950:	bl	19470 <lchmod@@Base+0x1fac>
   19954:	mov	sp, fp
   19958:	pop	{fp, pc}
   1995c:	push	{r4, sl, fp, lr}
   19960:	add	fp, sp, #8
   19964:	sub	sp, sp, #96	; 0x60
   19968:	mov	ip, r2
   1996c:	mov	r2, sp
   19970:	vmov.i32	q8, #0	; 0x00000000
   19974:	mov	r4, #28
   19978:	cmp	r1, #10
   1997c:	mov	r3, r2
   19980:	add	lr, r2, #16
   19984:	vst1.64	{d16-d17}, [r3], r4
   19988:	vst1.64	{d16-d17}, [lr]
   1998c:	vst1.32	{d16-d17}, [r3]
   19990:	beq	199e0 <lchmod@@Base+0x251c>
   19994:	vld1.64	{d16-d17}, [r2], r4
   19998:	vld1.64	{d18-d19}, [lr]
   1999c:	add	r3, sp, #48	; 0x30
   199a0:	add	r4, r3, #4
   199a4:	vld1.32	{d20-d21}, [r2]
   199a8:	add	r2, r3, #20
   199ac:	vst1.32	{d16-d17}, [r4]
   199b0:	vst1.32	{d18-d19}, [r2]
   199b4:	add	r2, r3, #32
   199b8:	vst1.32	{d20-d21}, [r2]
   199bc:	str	r1, [sp, #48]	; 0x30
   199c0:	mvn	r2, #0
   199c4:	ldr	r1, [sp, #60]	; 0x3c
   199c8:	orr	r1, r1, #67108864	; 0x4000000
   199cc:	str	r1, [sp, #60]	; 0x3c
   199d0:	mov	r1, ip
   199d4:	bl	19470 <lchmod@@Base+0x1fac>
   199d8:	sub	sp, fp, #8
   199dc:	pop	{r4, sl, fp, pc}
   199e0:	bl	11b64 <abort@plt>
   199e4:	push	{r4, r5, fp, lr}
   199e8:	add	fp, sp, #8
   199ec:	sub	sp, sp, #48	; 0x30
   199f0:	mov	ip, r3
   199f4:	movw	r3, #57856	; 0xe200
   199f8:	mov	lr, #32
   199fc:	cmp	r1, #0
   19a00:	mov	r5, sp
   19a04:	movt	r3, #2
   19a08:	cmpne	r2, #0
   19a0c:	add	r4, r3, #16
   19a10:	vld1.64	{d16-d17}, [r3], lr
   19a14:	vld1.64	{d18-d19}, [r4]
   19a18:	add	r4, r5, #16
   19a1c:	vld1.64	{d20-d21}, [r3]
   19a20:	vst1.64	{d16-d17}, [r5], lr
   19a24:	mov	r3, #10
   19a28:	vst1.64	{d18-d19}, [r4]
   19a2c:	vst1.64	{d20-d21}, [r5]
   19a30:	str	r3, [sp]
   19a34:	bne	19a3c <lchmod@@Base+0x2578>
   19a38:	bl	11b64 <abort@plt>
   19a3c:	str	r2, [sp, #44]	; 0x2c
   19a40:	str	r1, [sp, #40]	; 0x28
   19a44:	mov	r3, sp
   19a48:	mov	r1, ip
   19a4c:	mvn	r2, #0
   19a50:	bl	19470 <lchmod@@Base+0x1fac>
   19a54:	sub	sp, fp, #8
   19a58:	pop	{r4, r5, fp, pc}
   19a5c:	push	{r4, r5, fp, lr}
   19a60:	add	fp, sp, #8
   19a64:	sub	sp, sp, #48	; 0x30
   19a68:	mov	lr, r3
   19a6c:	movw	r3, #57856	; 0xe200
   19a70:	mov	ip, #32
   19a74:	cmp	r1, #0
   19a78:	mov	r5, sp
   19a7c:	movt	r3, #2
   19a80:	cmpne	r2, #0
   19a84:	add	r4, r3, #16
   19a88:	vld1.64	{d16-d17}, [r3], ip
   19a8c:	vld1.64	{d18-d19}, [r4]
   19a90:	add	r4, r5, #16
   19a94:	vld1.64	{d20-d21}, [r3]
   19a98:	vst1.64	{d16-d17}, [r5], ip
   19a9c:	mov	r3, #10
   19aa0:	vst1.64	{d18-d19}, [r4]
   19aa4:	vst1.64	{d20-d21}, [r5]
   19aa8:	str	r3, [sp]
   19aac:	bne	19ab4 <lchmod@@Base+0x25f0>
   19ab0:	bl	11b64 <abort@plt>
   19ab4:	ldr	ip, [fp, #8]
   19ab8:	str	r2, [sp, #44]	; 0x2c
   19abc:	str	r1, [sp, #40]	; 0x28
   19ac0:	mov	r3, sp
   19ac4:	mov	r1, lr
   19ac8:	mov	r2, ip
   19acc:	bl	19470 <lchmod@@Base+0x1fac>
   19ad0:	sub	sp, fp, #8
   19ad4:	pop	{r4, r5, fp, pc}
   19ad8:	push	{r4, sl, fp, lr}
   19adc:	add	fp, sp, #8
   19ae0:	sub	sp, sp, #48	; 0x30
   19ae4:	mov	ip, r2
   19ae8:	movw	r2, #57856	; 0xe200
   19aec:	mov	lr, #32
   19af0:	cmp	r0, #0
   19af4:	mov	r4, sp
   19af8:	movt	r2, #2
   19afc:	cmpne	r1, #0
   19b00:	add	r3, r2, #16
   19b04:	vld1.64	{d16-d17}, [r2], lr
   19b08:	vld1.64	{d18-d19}, [r3]
   19b0c:	add	r3, r4, #16
   19b10:	vld1.64	{d20-d21}, [r2]
   19b14:	vst1.64	{d16-d17}, [r4], lr
   19b18:	mov	r2, #10
   19b1c:	vst1.64	{d18-d19}, [r3]
   19b20:	vst1.64	{d20-d21}, [r4]
   19b24:	str	r2, [sp]
   19b28:	bne	19b30 <lchmod@@Base+0x266c>
   19b2c:	bl	11b64 <abort@plt>
   19b30:	str	r1, [sp, #44]	; 0x2c
   19b34:	str	r0, [sp, #40]	; 0x28
   19b38:	mov	r3, sp
   19b3c:	mov	r0, #0
   19b40:	mov	r1, ip
   19b44:	mvn	r2, #0
   19b48:	bl	19470 <lchmod@@Base+0x1fac>
   19b4c:	sub	sp, fp, #8
   19b50:	pop	{r4, sl, fp, pc}
   19b54:	push	{r4, r5, fp, lr}
   19b58:	add	fp, sp, #8
   19b5c:	sub	sp, sp, #48	; 0x30
   19b60:	mov	lr, r2
   19b64:	movw	r2, #57856	; 0xe200
   19b68:	mov	ip, r3
   19b6c:	mov	r3, #32
   19b70:	cmp	r0, #0
   19b74:	mov	r5, sp
   19b78:	movt	r2, #2
   19b7c:	cmpne	r1, #0
   19b80:	add	r4, r2, #16
   19b84:	vld1.64	{d16-d17}, [r2], r3
   19b88:	vld1.64	{d18-d19}, [r4]
   19b8c:	add	r4, r5, #16
   19b90:	vld1.64	{d20-d21}, [r2]
   19b94:	vst1.64	{d16-d17}, [r5], r3
   19b98:	mov	r2, #10
   19b9c:	vst1.64	{d18-d19}, [r4]
   19ba0:	vst1.64	{d20-d21}, [r5]
   19ba4:	str	r2, [sp]
   19ba8:	bne	19bb0 <lchmod@@Base+0x26ec>
   19bac:	bl	11b64 <abort@plt>
   19bb0:	str	r1, [sp, #44]	; 0x2c
   19bb4:	str	r0, [sp, #40]	; 0x28
   19bb8:	mov	r3, sp
   19bbc:	mov	r0, #0
   19bc0:	mov	r1, lr
   19bc4:	mov	r2, ip
   19bc8:	bl	19470 <lchmod@@Base+0x1fac>
   19bcc:	sub	sp, fp, #8
   19bd0:	pop	{r4, r5, fp, pc}
   19bd4:	movw	r3, #57744	; 0xe190
   19bd8:	movt	r3, #2
   19bdc:	b	19470 <lchmod@@Base+0x1fac>
   19be0:	movw	r3, #57744	; 0xe190
   19be4:	mov	r2, r1
   19be8:	mov	r1, r0
   19bec:	mov	r0, #0
   19bf0:	movt	r3, #2
   19bf4:	b	19470 <lchmod@@Base+0x1fac>
   19bf8:	movw	r3, #57744	; 0xe190
   19bfc:	mvn	r2, #0
   19c00:	movt	r3, #2
   19c04:	b	19470 <lchmod@@Base+0x1fac>
   19c08:	movw	r3, #57744	; 0xe190
   19c0c:	mov	r1, r0
   19c10:	mov	r0, #0
   19c14:	mvn	r2, #0
   19c18:	movt	r3, #2
   19c1c:	b	19470 <lchmod@@Base+0x1fac>
   19c20:	push	{r4, r5, r6, sl, fp, lr}
   19c24:	add	fp, sp, #16
   19c28:	ldr	r4, [r0], #8
   19c2c:	mov	r5, r1
   19c30:	cmp	r4, r0
   19c34:	beq	19c58 <lchmod@@Base+0x2794>
   19c38:	mov	r0, r4
   19c3c:	mov	r1, r5
   19c40:	bl	1b964 <lchmod@@Base+0x44a0>
   19c44:	mov	r6, r0
   19c48:	cmp	r0, #0
   19c4c:	moveq	r6, r4
   19c50:	mov	r0, r6
   19c54:	pop	{r4, r5, r6, sl, fp, pc}
   19c58:	mov	r0, r5
   19c5c:	bl	1b934 <lchmod@@Base+0x4470>
   19c60:	cmp	r0, #0
   19c64:	moveq	r6, #0
   19c68:	moveq	r0, r6
   19c6c:	popeq	{r4, r5, r6, sl, fp, pc}
   19c70:	mov	r1, r4
   19c74:	mov	r2, r5
   19c78:	mov	r6, r0
   19c7c:	bl	11834 <memcpy@plt>
   19c80:	mov	r0, r6
   19c84:	pop	{r4, r5, r6, sl, fp, pc}
   19c88:	push	{r4, r5, r6, sl, fp, lr}
   19c8c:	add	fp, sp, #16
   19c90:	mov	r4, r0
   19c94:	add	r6, r0, #8
   19c98:	ldrd	r0, [r0]
   19c9c:	lsl	r5, r1, #1
   19ca0:	cmp	r0, r6
   19ca4:	beq	19cb0 <lchmod@@Base+0x27ec>
   19ca8:	bl	137a4 <__assert_fail@plt+0x1be0>
   19cac:	ldr	r1, [r4, #4]
   19cb0:	cmp	r5, r1
   19cb4:	bcc	19cd8 <lchmod@@Base+0x2814>
   19cb8:	mov	r0, r5
   19cbc:	bl	1b934 <lchmod@@Base+0x4470>
   19cc0:	cmp	r0, #0
   19cc4:	strne	r0, [r4]
   19cc8:	movne	r0, #1
   19ccc:	strne	r5, [r4, #4]
   19cd0:	popne	{r4, r5, r6, sl, fp, pc}
   19cd4:	b	19ce4 <lchmod@@Base+0x2820>
   19cd8:	bl	11a08 <__errno_location@plt>
   19cdc:	mov	r1, #12
   19ce0:	str	r1, [r0]
   19ce4:	mov	r0, #0
   19ce8:	mov	r5, #1024	; 0x400
   19cec:	str	r6, [r4]
   19cf0:	str	r5, [r4, #4]
   19cf4:	pop	{r4, r5, r6, sl, fp, pc}
   19cf8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19cfc:	add	fp, sp, #24
   19d00:	ldrd	r8, [r0]
   19d04:	add	r7, r0, #8
   19d08:	mov	r4, r0
   19d0c:	lsl	r5, r9, #1
   19d10:	cmp	r8, r7
   19d14:	beq	19d48 <lchmod@@Base+0x2884>
   19d18:	cmp	r5, r9
   19d1c:	bcc	19d7c <lchmod@@Base+0x28b8>
   19d20:	mov	r0, r8
   19d24:	mov	r1, r5
   19d28:	bl	1b964 <lchmod@@Base+0x44a0>
   19d2c:	mov	r6, r0
   19d30:	cmp	r0, #0
   19d34:	beq	19d8c <lchmod@@Base+0x28c8>
   19d38:	mov	r0, #1
   19d3c:	str	r6, [r4]
   19d40:	str	r5, [r4, #4]
   19d44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19d48:	mov	r0, r5
   19d4c:	bl	1b934 <lchmod@@Base+0x4470>
   19d50:	cmp	r0, #0
   19d54:	moveq	r0, #0
   19d58:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   19d5c:	ldr	r2, [r4, #4]
   19d60:	mov	r1, r8
   19d64:	mov	r6, r0
   19d68:	bl	11834 <memcpy@plt>
   19d6c:	mov	r0, #1
   19d70:	str	r6, [r4]
   19d74:	str	r5, [r4, #4]
   19d78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19d7c:	bl	11a08 <__errno_location@plt>
   19d80:	mov	r1, #12
   19d84:	str	r1, [r0]
   19d88:	b	19d90 <lchmod@@Base+0x28cc>
   19d8c:	ldr	r8, [r4]
   19d90:	mov	r0, r8
   19d94:	bl	137a4 <__assert_fail@plt+0x1be0>
   19d98:	mov	r0, #0
   19d9c:	mov	r5, #1024	; 0x400
   19da0:	str	r7, [r4]
   19da4:	str	r5, [r4, #4]
   19da8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19dac:	push	{r4, r5, fp, lr}
   19db0:	add	fp, sp, #8
   19db4:	mov	r4, r1
   19db8:	bl	119c0 <getfilecon@plt>
   19dbc:	cmp	r0, #10
   19dc0:	beq	19dd8 <lchmod@@Base+0x2914>
   19dc4:	cmp	r0, #0
   19dc8:	bne	19e1c <lchmod@@Base+0x2958>
   19dcc:	bl	11a08 <__errno_location@plt>
   19dd0:	mov	r1, #95	; 0x5f
   19dd4:	b	19e14 <lchmod@@Base+0x2950>
   19dd8:	ldr	r5, [r4]
   19ddc:	movw	r1, #52816	; 0xce50
   19de0:	movt	r1, #1
   19de4:	mov	r0, r5
   19de8:	bl	117d4 <strcmp@plt>
   19dec:	mov	r1, r0
   19df0:	mov	r0, #10
   19df4:	cmp	r1, #0
   19df8:	popne	{r4, r5, fp, pc}
   19dfc:	mov	r0, r5
   19e00:	bl	11af8 <freecon@plt>
   19e04:	mov	r0, #0
   19e08:	str	r0, [r4]
   19e0c:	bl	11a08 <__errno_location@plt>
   19e10:	mov	r1, #61	; 0x3d
   19e14:	str	r1, [r0]
   19e18:	mvn	r0, #0
   19e1c:	pop	{r4, r5, fp, pc}
   19e20:	push	{r4, r5, fp, lr}
   19e24:	add	fp, sp, #8
   19e28:	mov	r4, r1
   19e2c:	bl	11948 <lgetfilecon@plt>
   19e30:	cmp	r0, #10
   19e34:	beq	19e4c <lchmod@@Base+0x2988>
   19e38:	cmp	r0, #0
   19e3c:	bne	19e90 <lchmod@@Base+0x29cc>
   19e40:	bl	11a08 <__errno_location@plt>
   19e44:	mov	r1, #95	; 0x5f
   19e48:	b	19e88 <lchmod@@Base+0x29c4>
   19e4c:	ldr	r5, [r4]
   19e50:	movw	r1, #52816	; 0xce50
   19e54:	movt	r1, #1
   19e58:	mov	r0, r5
   19e5c:	bl	117d4 <strcmp@plt>
   19e60:	mov	r1, r0
   19e64:	mov	r0, #10
   19e68:	cmp	r1, #0
   19e6c:	popne	{r4, r5, fp, pc}
   19e70:	mov	r0, r5
   19e74:	bl	11af8 <freecon@plt>
   19e78:	mov	r0, #0
   19e7c:	str	r0, [r4]
   19e80:	bl	11a08 <__errno_location@plt>
   19e84:	mov	r1, #61	; 0x3d
   19e88:	str	r1, [r0]
   19e8c:	mvn	r0, #0
   19e90:	pop	{r4, r5, fp, pc}
   19e94:	push	{r4, r5, fp, lr}
   19e98:	add	fp, sp, #8
   19e9c:	mov	r4, r1
   19ea0:	bl	11894 <fgetfilecon@plt>
   19ea4:	cmp	r0, #10
   19ea8:	beq	19ec0 <lchmod@@Base+0x29fc>
   19eac:	cmp	r0, #0
   19eb0:	bne	19f04 <lchmod@@Base+0x2a40>
   19eb4:	bl	11a08 <__errno_location@plt>
   19eb8:	mov	r1, #95	; 0x5f
   19ebc:	b	19efc <lchmod@@Base+0x2a38>
   19ec0:	ldr	r5, [r4]
   19ec4:	movw	r1, #52816	; 0xce50
   19ec8:	movt	r1, #1
   19ecc:	mov	r0, r5
   19ed0:	bl	117d4 <strcmp@plt>
   19ed4:	mov	r1, r0
   19ed8:	mov	r0, #10
   19edc:	cmp	r1, #0
   19ee0:	popne	{r4, r5, fp, pc}
   19ee4:	mov	r0, r5
   19ee8:	bl	11af8 <freecon@plt>
   19eec:	mov	r0, #0
   19ef0:	str	r0, [r4]
   19ef4:	bl	11a08 <__errno_location@plt>
   19ef8:	mov	r1, #61	; 0x3d
   19efc:	str	r1, [r0]
   19f00:	mvn	r0, #0
   19f04:	pop	{r4, r5, fp, pc}
   19f08:	push	{r4, r5, r6, r7, fp, lr}
   19f0c:	add	fp, sp, #16
   19f10:	mov	r4, r0
   19f14:	cmp	r0, #2
   19f18:	movhi	r0, r4
   19f1c:	pophi	{r4, r5, r6, r7, fp, pc}
   19f20:	mov	r0, r4
   19f24:	bl	1c0b0 <lchmod@@Base+0x4bec>
   19f28:	mov	r5, r0
   19f2c:	bl	11a08 <__errno_location@plt>
   19f30:	ldr	r7, [r0]
   19f34:	mov	r6, r0
   19f38:	mov	r0, r4
   19f3c:	bl	11b70 <close@plt>
   19f40:	mov	r0, r5
   19f44:	str	r7, [r6]
   19f48:	pop	{r4, r5, r6, r7, fp, pc}
   19f4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19f50:	add	fp, sp, #24
   19f54:	sub	sp, sp, #32
   19f58:	ldr	r6, [fp, #12]
   19f5c:	ldr	r7, [fp, #8]
   19f60:	mov	r4, r2
   19f64:	mov	r8, r0
   19f68:	cmp	r1, #0
   19f6c:	beq	19f94 <lchmod@@Base+0x2ad0>
   19f70:	movw	r2, #52826	; 0xce5a
   19f74:	mov	r5, r1
   19f78:	str	r3, [sp, #4]
   19f7c:	str	r4, [sp]
   19f80:	mov	r0, r8
   19f84:	mov	r1, #1
   19f88:	movt	r2, #1
   19f8c:	mov	r3, r5
   19f90:	b	19fac <lchmod@@Base+0x2ae8>
   19f94:	movw	r2, #52838	; 0xce66
   19f98:	str	r3, [sp]
   19f9c:	mov	r0, r8
   19fa0:	mov	r1, #1
   19fa4:	mov	r3, r4
   19fa8:	movt	r2, #1
   19fac:	bl	11a50 <__fprintf_chk@plt>
   19fb0:	movw	r1, #52845	; 0xce6d
   19fb4:	mov	r0, #0
   19fb8:	mov	r2, #5
   19fbc:	movt	r1, #1
   19fc0:	bl	11870 <dcgettext@plt>
   19fc4:	movw	r2, #53563	; 0xd13b
   19fc8:	mov	r3, r0
   19fcc:	movw	r0, #2022	; 0x7e6
   19fd0:	mov	r1, #1
   19fd4:	str	r0, [sp]
   19fd8:	movt	r2, #1
   19fdc:	mov	r0, r8
   19fe0:	bl	11a50 <__fprintf_chk@plt>
   19fe4:	movw	r4, #52162	; 0xcbc2
   19fe8:	mov	r1, r8
   19fec:	movt	r4, #1
   19ff0:	mov	r0, r4
   19ff4:	bl	117b0 <fputs_unlocked@plt>
   19ff8:	movw	r1, #52849	; 0xce71
   19ffc:	mov	r0, #0
   1a000:	mov	r2, #5
   1a004:	movt	r1, #1
   1a008:	bl	11870 <dcgettext@plt>
   1a00c:	movw	r3, #53020	; 0xcf1c
   1a010:	mov	r2, r0
   1a014:	mov	r0, r8
   1a018:	mov	r1, #1
   1a01c:	movt	r3, #1
   1a020:	bl	11a50 <__fprintf_chk@plt>
   1a024:	mov	r0, r4
   1a028:	mov	r1, r8
   1a02c:	bl	117b0 <fputs_unlocked@plt>
   1a030:	cmp	r6, #9
   1a034:	bhi	1a070 <lchmod@@Base+0x2bac>
   1a038:	add	r0, pc, #0
   1a03c:	ldr	pc, [r0, r6, lsl #2]
   1a040:	andeq	sl, r1, r8, rrx
   1a044:	andeq	sl, r1, ip, ror r0
   1a048:	andeq	sl, r1, ip, lsr #1
   1a04c:	ldrdeq	sl, [r1], -r4
   1a050:	strdeq	sl, [r1], -ip
   1a054:	andeq	sl, r1, r4, lsr #2
   1a058:	andeq	sl, r1, ip, asr #2
   1a05c:	andeq	sl, r1, r4, lsl #3
   1a060:	andeq	sl, r1, ip, lsr #4
   1a064:	ldrdeq	sl, [r1], -r4
   1a068:	sub	sp, fp, #24
   1a06c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a070:	movw	r1, #53373	; 0xd07d
   1a074:	movt	r1, #1
   1a078:	b	1a1dc <lchmod@@Base+0x2d18>
   1a07c:	movw	r1, #53054	; 0xcf3e
   1a080:	mov	r0, #0
   1a084:	mov	r2, #5
   1a088:	movt	r1, #1
   1a08c:	bl	11870 <dcgettext@plt>
   1a090:	ldr	r3, [r7]
   1a094:	mov	r2, r0
   1a098:	mov	r0, r8
   1a09c:	mov	r1, #1
   1a0a0:	sub	sp, fp, #24
   1a0a4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a0a8:	b	11a50 <__fprintf_chk@plt>
   1a0ac:	movw	r1, #53070	; 0xcf4e
   1a0b0:	mov	r0, #0
   1a0b4:	mov	r2, #5
   1a0b8:	movt	r1, #1
   1a0bc:	bl	11870 <dcgettext@plt>
   1a0c0:	mov	r2, r0
   1a0c4:	ldr	r3, [r7]
   1a0c8:	ldr	r0, [r7, #4]
   1a0cc:	str	r0, [sp]
   1a0d0:	b	1a1c0 <lchmod@@Base+0x2cfc>
   1a0d4:	movw	r1, #53093	; 0xcf65
   1a0d8:	mov	r0, #0
   1a0dc:	mov	r2, #5
   1a0e0:	movt	r1, #1
   1a0e4:	bl	11870 <dcgettext@plt>
   1a0e8:	ldr	r3, [r7]
   1a0ec:	mov	r2, r0
   1a0f0:	ldmib	r7, {r0, r1}
   1a0f4:	stm	sp, {r0, r1}
   1a0f8:	b	1a1c0 <lchmod@@Base+0x2cfc>
   1a0fc:	movw	r1, #53121	; 0xcf81
   1a100:	mov	r0, #0
   1a104:	mov	r2, #5
   1a108:	movt	r1, #1
   1a10c:	bl	11870 <dcgettext@plt>
   1a110:	ldr	r3, [r7]
   1a114:	mov	r2, r0
   1a118:	ldmib	r7, {r0, r1, r7}
   1a11c:	stm	sp, {r0, r1, r7}
   1a120:	b	1a1c0 <lchmod@@Base+0x2cfc>
   1a124:	movw	r1, #53153	; 0xcfa1
   1a128:	mov	r0, #0
   1a12c:	mov	r2, #5
   1a130:	movt	r1, #1
   1a134:	bl	11870 <dcgettext@plt>
   1a138:	ldr	r3, [r7]
   1a13c:	mov	r2, r0
   1a140:	ldmib	r7, {r0, r1, r6, r7}
   1a144:	stm	sp, {r0, r1, r6, r7}
   1a148:	b	1a1c0 <lchmod@@Base+0x2cfc>
   1a14c:	movw	r1, #53189	; 0xcfc5
   1a150:	mov	r0, #0
   1a154:	mov	r2, #5
   1a158:	movt	r1, #1
   1a15c:	bl	11870 <dcgettext@plt>
   1a160:	ldr	r3, [r7]
   1a164:	mov	r2, r0
   1a168:	ldmib	r7, {r0, r1, r6}
   1a16c:	ldr	r5, [r7, #16]
   1a170:	ldr	r7, [r7, #20]
   1a174:	stm	sp, {r0, r1, r6}
   1a178:	str	r5, [sp, #12]
   1a17c:	str	r7, [sp, #16]
   1a180:	b	1a1c0 <lchmod@@Base+0x2cfc>
   1a184:	movw	r1, #53229	; 0xcfed
   1a188:	mov	r0, #0
   1a18c:	mov	r2, #5
   1a190:	movt	r1, #1
   1a194:	bl	11870 <dcgettext@plt>
   1a198:	ldr	r3, [r7]
   1a19c:	mov	r2, r0
   1a1a0:	ldmib	r7, {r0, r1, r6}
   1a1a4:	ldr	r5, [r7, #16]
   1a1a8:	ldr	r4, [r7, #20]
   1a1ac:	ldr	r7, [r7, #24]
   1a1b0:	stm	sp, {r0, r1, r6}
   1a1b4:	str	r5, [sp, #12]
   1a1b8:	str	r4, [sp, #16]
   1a1bc:	str	r7, [sp, #20]
   1a1c0:	mov	r0, r8
   1a1c4:	mov	r1, #1
   1a1c8:	bl	11a50 <__fprintf_chk@plt>
   1a1cc:	sub	sp, fp, #24
   1a1d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a1d4:	movw	r1, #53321	; 0xd049
   1a1d8:	movt	r1, #1
   1a1dc:	mov	r0, #0
   1a1e0:	mov	r2, #5
   1a1e4:	bl	11870 <dcgettext@plt>
   1a1e8:	mov	ip, r0
   1a1ec:	ldr	r3, [r7]
   1a1f0:	ldr	r0, [r7, #4]
   1a1f4:	ldr	r1, [r7, #8]
   1a1f8:	ldr	r6, [r7, #12]
   1a1fc:	ldr	r5, [r7, #16]
   1a200:	ldr	r4, [r7, #20]
   1a204:	ldr	r2, [r7, #24]
   1a208:	ldr	lr, [r7, #28]
   1a20c:	ldr	r7, [r7, #32]
   1a210:	stm	sp, {r0, r1, r6}
   1a214:	str	r5, [sp, #12]
   1a218:	str	r4, [sp, #16]
   1a21c:	str	r2, [sp, #20]
   1a220:	str	lr, [sp, #24]
   1a224:	str	r7, [sp, #28]
   1a228:	b	1a270 <lchmod@@Base+0x2dac>
   1a22c:	movw	r1, #53273	; 0xd019
   1a230:	mov	r0, #0
   1a234:	mov	r2, #5
   1a238:	movt	r1, #1
   1a23c:	bl	11870 <dcgettext@plt>
   1a240:	mov	ip, r0
   1a244:	ldr	r3, [r7]
   1a248:	ldmib	r7, {r0, r1, r6}
   1a24c:	ldr	r5, [r7, #16]
   1a250:	ldr	r4, [r7, #20]
   1a254:	ldr	r2, [r7, #24]
   1a258:	ldr	r7, [r7, #28]
   1a25c:	stm	sp, {r0, r1, r6}
   1a260:	str	r5, [sp, #12]
   1a264:	str	r4, [sp, #16]
   1a268:	str	r2, [sp, #20]
   1a26c:	str	r7, [sp, #24]
   1a270:	mov	r0, r8
   1a274:	mov	r1, #1
   1a278:	mov	r2, ip
   1a27c:	bl	11a50 <__fprintf_chk@plt>
   1a280:	sub	sp, fp, #24
   1a284:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a288:	push	{r4, sl, fp, lr}
   1a28c:	add	fp, sp, #8
   1a290:	sub	sp, sp, #8
   1a294:	ldr	ip, [fp, #8]
   1a298:	mov	lr, #0
   1a29c:	ldr	r4, [ip, lr, lsl #2]
   1a2a0:	add	lr, lr, #1
   1a2a4:	cmp	r4, #0
   1a2a8:	bne	1a29c <lchmod@@Base+0x2dd8>
   1a2ac:	sub	r4, lr, #1
   1a2b0:	str	ip, [sp]
   1a2b4:	str	r4, [sp, #4]
   1a2b8:	bl	19f4c <lchmod@@Base+0x2a88>
   1a2bc:	sub	sp, fp, #8
   1a2c0:	pop	{r4, sl, fp, pc}
   1a2c4:	push	{fp, lr}
   1a2c8:	mov	fp, sp
   1a2cc:	sub	sp, sp, #48	; 0x30
   1a2d0:	ldr	ip, [fp, #8]
   1a2d4:	ldr	lr, [ip]
   1a2d8:	cmp	lr, #0
   1a2dc:	str	lr, [sp, #8]
   1a2e0:	beq	1a37c <lchmod@@Base+0x2eb8>
   1a2e4:	ldr	lr, [ip, #4]
   1a2e8:	cmp	lr, #0
   1a2ec:	str	lr, [sp, #12]
   1a2f0:	beq	1a384 <lchmod@@Base+0x2ec0>
   1a2f4:	ldr	lr, [ip, #8]
   1a2f8:	cmp	lr, #0
   1a2fc:	str	lr, [sp, #16]
   1a300:	beq	1a38c <lchmod@@Base+0x2ec8>
   1a304:	ldr	lr, [ip, #12]
   1a308:	cmp	lr, #0
   1a30c:	str	lr, [sp, #20]
   1a310:	beq	1a394 <lchmod@@Base+0x2ed0>
   1a314:	ldr	lr, [ip, #16]
   1a318:	cmp	lr, #0
   1a31c:	str	lr, [sp, #24]
   1a320:	beq	1a39c <lchmod@@Base+0x2ed8>
   1a324:	ldr	lr, [ip, #20]
   1a328:	cmp	lr, #0
   1a32c:	str	lr, [sp, #28]
   1a330:	beq	1a3a4 <lchmod@@Base+0x2ee0>
   1a334:	ldr	lr, [ip, #24]
   1a338:	cmp	lr, #0
   1a33c:	str	lr, [sp, #32]
   1a340:	beq	1a3ac <lchmod@@Base+0x2ee8>
   1a344:	ldr	lr, [ip, #28]
   1a348:	cmp	lr, #0
   1a34c:	str	lr, [sp, #36]	; 0x24
   1a350:	beq	1a3b4 <lchmod@@Base+0x2ef0>
   1a354:	ldr	lr, [ip, #32]
   1a358:	cmp	lr, #0
   1a35c:	str	lr, [sp, #40]	; 0x28
   1a360:	beq	1a3bc <lchmod@@Base+0x2ef8>
   1a364:	ldr	lr, [ip, #36]	; 0x24
   1a368:	mov	ip, #10
   1a36c:	cmp	lr, #0
   1a370:	str	lr, [sp, #44]	; 0x2c
   1a374:	movweq	ip, #9
   1a378:	b	1a3c0 <lchmod@@Base+0x2efc>
   1a37c:	mov	ip, #0
   1a380:	b	1a3c0 <lchmod@@Base+0x2efc>
   1a384:	mov	ip, #1
   1a388:	b	1a3c0 <lchmod@@Base+0x2efc>
   1a38c:	mov	ip, #2
   1a390:	b	1a3c0 <lchmod@@Base+0x2efc>
   1a394:	mov	ip, #3
   1a398:	b	1a3c0 <lchmod@@Base+0x2efc>
   1a39c:	mov	ip, #4
   1a3a0:	b	1a3c0 <lchmod@@Base+0x2efc>
   1a3a4:	mov	ip, #5
   1a3a8:	b	1a3c0 <lchmod@@Base+0x2efc>
   1a3ac:	mov	ip, #6
   1a3b0:	b	1a3c0 <lchmod@@Base+0x2efc>
   1a3b4:	mov	ip, #7
   1a3b8:	b	1a3c0 <lchmod@@Base+0x2efc>
   1a3bc:	mov	ip, #8
   1a3c0:	add	lr, sp, #8
   1a3c4:	str	ip, [sp, #4]
   1a3c8:	str	lr, [sp]
   1a3cc:	bl	19f4c <lchmod@@Base+0x2a88>
   1a3d0:	mov	sp, fp
   1a3d4:	pop	{fp, pc}
   1a3d8:	push	{fp, lr}
   1a3dc:	mov	fp, sp
   1a3e0:	sub	sp, sp, #56	; 0x38
   1a3e4:	add	ip, fp, #8
   1a3e8:	str	ip, [sp, #12]
   1a3ec:	ldr	lr, [fp, #8]
   1a3f0:	cmp	lr, #0
   1a3f4:	str	lr, [sp, #16]
   1a3f8:	beq	1a494 <lchmod@@Base+0x2fd0>
   1a3fc:	ldr	lr, [ip, #4]
   1a400:	cmp	lr, #0
   1a404:	str	lr, [sp, #20]
   1a408:	beq	1a49c <lchmod@@Base+0x2fd8>
   1a40c:	ldr	lr, [ip, #8]
   1a410:	cmp	lr, #0
   1a414:	str	lr, [sp, #24]
   1a418:	beq	1a4a4 <lchmod@@Base+0x2fe0>
   1a41c:	ldr	lr, [ip, #12]
   1a420:	cmp	lr, #0
   1a424:	str	lr, [sp, #28]
   1a428:	beq	1a4ac <lchmod@@Base+0x2fe8>
   1a42c:	ldr	lr, [ip, #16]
   1a430:	cmp	lr, #0
   1a434:	str	lr, [sp, #32]
   1a438:	beq	1a4b4 <lchmod@@Base+0x2ff0>
   1a43c:	ldr	lr, [ip, #20]
   1a440:	cmp	lr, #0
   1a444:	str	lr, [sp, #36]	; 0x24
   1a448:	beq	1a4bc <lchmod@@Base+0x2ff8>
   1a44c:	ldr	lr, [ip, #24]
   1a450:	cmp	lr, #0
   1a454:	str	lr, [sp, #40]	; 0x28
   1a458:	beq	1a4c4 <lchmod@@Base+0x3000>
   1a45c:	ldr	lr, [ip, #28]
   1a460:	cmp	lr, #0
   1a464:	str	lr, [sp, #44]	; 0x2c
   1a468:	beq	1a4cc <lchmod@@Base+0x3008>
   1a46c:	ldr	lr, [ip, #32]
   1a470:	cmp	lr, #0
   1a474:	str	lr, [sp, #48]	; 0x30
   1a478:	beq	1a4d4 <lchmod@@Base+0x3010>
   1a47c:	ldr	lr, [ip, #36]	; 0x24
   1a480:	mov	ip, #10
   1a484:	cmp	lr, #0
   1a488:	str	lr, [sp, #52]	; 0x34
   1a48c:	movweq	ip, #9
   1a490:	b	1a4d8 <lchmod@@Base+0x3014>
   1a494:	mov	ip, #0
   1a498:	b	1a4d8 <lchmod@@Base+0x3014>
   1a49c:	mov	ip, #1
   1a4a0:	b	1a4d8 <lchmod@@Base+0x3014>
   1a4a4:	mov	ip, #2
   1a4a8:	b	1a4d8 <lchmod@@Base+0x3014>
   1a4ac:	mov	ip, #3
   1a4b0:	b	1a4d8 <lchmod@@Base+0x3014>
   1a4b4:	mov	ip, #4
   1a4b8:	b	1a4d8 <lchmod@@Base+0x3014>
   1a4bc:	mov	ip, #5
   1a4c0:	b	1a4d8 <lchmod@@Base+0x3014>
   1a4c4:	mov	ip, #6
   1a4c8:	b	1a4d8 <lchmod@@Base+0x3014>
   1a4cc:	mov	ip, #7
   1a4d0:	b	1a4d8 <lchmod@@Base+0x3014>
   1a4d4:	mov	ip, #8
   1a4d8:	add	lr, sp, #16
   1a4dc:	str	ip, [sp, #4]
   1a4e0:	str	lr, [sp]
   1a4e4:	bl	19f4c <lchmod@@Base+0x2a88>
   1a4e8:	mov	sp, fp
   1a4ec:	pop	{fp, pc}
   1a4f0:	push	{fp, lr}
   1a4f4:	mov	fp, sp
   1a4f8:	movw	r0, #57828	; 0xe1e4
   1a4fc:	movt	r0, #2
   1a500:	ldr	r1, [r0]
   1a504:	movw	r0, #52162	; 0xcbc2
   1a508:	movt	r0, #1
   1a50c:	bl	117b0 <fputs_unlocked@plt>
   1a510:	movw	r1, #53433	; 0xd0b9
   1a514:	mov	r0, #0
   1a518:	mov	r2, #5
   1a51c:	movt	r1, #1
   1a520:	bl	11870 <dcgettext@plt>
   1a524:	movw	r2, #53453	; 0xd0cd
   1a528:	mov	r1, r0
   1a52c:	mov	r0, #1
   1a530:	movt	r2, #1
   1a534:	bl	11a38 <__printf_chk@plt>
   1a538:	movw	r1, #53475	; 0xd0e3
   1a53c:	mov	r0, #0
   1a540:	mov	r2, #5
   1a544:	movt	r1, #1
   1a548:	bl	11870 <dcgettext@plt>
   1a54c:	movw	r2, #51344	; 0xc890
   1a550:	movw	r3, #51971	; 0xcb03
   1a554:	mov	r1, r0
   1a558:	mov	r0, #1
   1a55c:	movt	r2, #1
   1a560:	movt	r3, #1
   1a564:	bl	11a38 <__printf_chk@plt>
   1a568:	movw	r1, #53495	; 0xd0f7
   1a56c:	mov	r0, #0
   1a570:	mov	r2, #5
   1a574:	movt	r1, #1
   1a578:	bl	11870 <dcgettext@plt>
   1a57c:	movw	r2, #53534	; 0xd11e
   1a580:	mov	r1, r0
   1a584:	mov	r0, #1
   1a588:	movt	r2, #1
   1a58c:	pop	{fp, lr}
   1a590:	b	11a38 <__printf_chk@plt>
   1a594:	push	{r4, r5, r6, sl, fp, lr}
   1a598:	add	fp, sp, #16
   1a59c:	mov	r4, r2
   1a5a0:	mov	r5, r1
   1a5a4:	mov	r6, r0
   1a5a8:	bl	1c074 <lchmod@@Base+0x4bb0>
   1a5ac:	cmp	r0, #0
   1a5b0:	popne	{r4, r5, r6, sl, fp, pc}
   1a5b4:	cmp	r6, #0
   1a5b8:	beq	1a5cc <lchmod@@Base+0x3108>
   1a5bc:	cmp	r5, #0
   1a5c0:	cmpne	r4, #0
   1a5c4:	bne	1a5cc <lchmod@@Base+0x3108>
   1a5c8:	pop	{r4, r5, r6, sl, fp, pc}
   1a5cc:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a5d0:	push	{r4, r5, r6, sl, fp, lr}
   1a5d4:	add	fp, sp, #16
   1a5d8:	mov	r4, r2
   1a5dc:	mov	r5, r1
   1a5e0:	mov	r6, r0
   1a5e4:	bl	1c074 <lchmod@@Base+0x4bb0>
   1a5e8:	cmp	r0, #0
   1a5ec:	popne	{r4, r5, r6, sl, fp, pc}
   1a5f0:	cmp	r6, #0
   1a5f4:	beq	1a608 <lchmod@@Base+0x3144>
   1a5f8:	cmp	r5, #0
   1a5fc:	cmpne	r4, #0
   1a600:	bne	1a608 <lchmod@@Base+0x3144>
   1a604:	pop	{r4, r5, r6, sl, fp, pc}
   1a608:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a60c:	push	{fp, lr}
   1a610:	mov	fp, sp
   1a614:	bl	1b934 <lchmod@@Base+0x4470>
   1a618:	cmp	r0, #0
   1a61c:	popne	{fp, pc}
   1a620:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a624:	push	{fp, lr}
   1a628:	mov	fp, sp
   1a62c:	bl	1b934 <lchmod@@Base+0x4470>
   1a630:	cmp	r0, #0
   1a634:	popne	{fp, pc}
   1a638:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a63c:	push	{fp, lr}
   1a640:	mov	fp, sp
   1a644:	bl	1b934 <lchmod@@Base+0x4470>
   1a648:	cmp	r0, #0
   1a64c:	popne	{fp, pc}
   1a650:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a654:	push	{r4, r5, fp, lr}
   1a658:	add	fp, sp, #8
   1a65c:	mov	r4, r1
   1a660:	mov	r5, r0
   1a664:	bl	1b964 <lchmod@@Base+0x44a0>
   1a668:	cmp	r0, #0
   1a66c:	popne	{r4, r5, fp, pc}
   1a670:	cmp	r5, #0
   1a674:	beq	1a684 <lchmod@@Base+0x31c0>
   1a678:	cmp	r4, #0
   1a67c:	bne	1a684 <lchmod@@Base+0x31c0>
   1a680:	pop	{r4, r5, fp, pc}
   1a684:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a688:	push	{fp, lr}
   1a68c:	mov	fp, sp
   1a690:	cmp	r1, #0
   1a694:	orreq	r1, r1, #1
   1a698:	bl	1b964 <lchmod@@Base+0x44a0>
   1a69c:	cmp	r0, #0
   1a6a0:	popne	{fp, pc}
   1a6a4:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a6a8:	push	{fp, lr}
   1a6ac:	mov	fp, sp
   1a6b0:	clz	r3, r2
   1a6b4:	lsr	ip, r3, #5
   1a6b8:	clz	r3, r1
   1a6bc:	lsr	r3, r3, #5
   1a6c0:	orrs	r3, r3, ip
   1a6c4:	movwne	r1, #1
   1a6c8:	movwne	r2, #1
   1a6cc:	bl	1c074 <lchmod@@Base+0x4bb0>
   1a6d0:	cmp	r0, #0
   1a6d4:	popne	{fp, pc}
   1a6d8:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a6dc:	push	{fp, lr}
   1a6e0:	mov	fp, sp
   1a6e4:	mov	r2, r1
   1a6e8:	mov	r1, r0
   1a6ec:	mov	r0, #0
   1a6f0:	bl	1c074 <lchmod@@Base+0x4bb0>
   1a6f4:	cmp	r0, #0
   1a6f8:	popne	{fp, pc}
   1a6fc:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a700:	push	{fp, lr}
   1a704:	mov	fp, sp
   1a708:	mov	r2, r1
   1a70c:	mov	r1, r0
   1a710:	clz	r0, r2
   1a714:	clz	r3, r1
   1a718:	lsr	r0, r0, #5
   1a71c:	lsr	r3, r3, #5
   1a720:	orrs	r0, r3, r0
   1a724:	movwne	r1, #1
   1a728:	movwne	r2, #1
   1a72c:	mov	r0, #0
   1a730:	bl	1c074 <lchmod@@Base+0x4bb0>
   1a734:	cmp	r0, #0
   1a738:	popne	{fp, pc}
   1a73c:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a740:	push	{r4, r5, r6, sl, fp, lr}
   1a744:	add	fp, sp, #16
   1a748:	ldr	r5, [r1]
   1a74c:	mov	r4, r1
   1a750:	mov	r6, r0
   1a754:	cmp	r0, #0
   1a758:	beq	1a770 <lchmod@@Base+0x32ac>
   1a75c:	mov	r0, #1
   1a760:	add	r0, r0, r5, lsr #1
   1a764:	adds	r5, r5, r0
   1a768:	bcc	1a778 <lchmod@@Base+0x32b4>
   1a76c:	b	1a7b4 <lchmod@@Base+0x32f0>
   1a770:	cmp	r5, #0
   1a774:	movweq	r5, #64	; 0x40
   1a778:	mov	r0, r6
   1a77c:	mov	r1, r5
   1a780:	mov	r2, #1
   1a784:	bl	1c074 <lchmod@@Base+0x4bb0>
   1a788:	cmp	r5, #0
   1a78c:	mov	r1, r5
   1a790:	movwne	r1, #1
   1a794:	cmp	r0, #0
   1a798:	bne	1a7ac <lchmod@@Base+0x32e8>
   1a79c:	clz	r2, r6
   1a7a0:	lsr	r2, r2, #5
   1a7a4:	orrs	r1, r2, r1
   1a7a8:	bne	1a7b4 <lchmod@@Base+0x32f0>
   1a7ac:	str	r5, [r4]
   1a7b0:	pop	{r4, r5, r6, sl, fp, pc}
   1a7b4:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a7b8:	push	{r4, r5, r6, r7, fp, lr}
   1a7bc:	add	fp, sp, #16
   1a7c0:	ldr	r5, [r1]
   1a7c4:	mov	r6, r2
   1a7c8:	mov	r4, r1
   1a7cc:	mov	r7, r0
   1a7d0:	cmp	r0, #0
   1a7d4:	beq	1a7ec <lchmod@@Base+0x3328>
   1a7d8:	mov	r0, #1
   1a7dc:	add	r0, r0, r5, lsr #1
   1a7e0:	adds	r5, r5, r0
   1a7e4:	bcc	1a804 <lchmod@@Base+0x3340>
   1a7e8:	b	1a838 <lchmod@@Base+0x3374>
   1a7ec:	cmp	r5, #0
   1a7f0:	bne	1a804 <lchmod@@Base+0x3340>
   1a7f4:	mov	r0, #64	; 0x40
   1a7f8:	cmp	r6, #64	; 0x40
   1a7fc:	udiv	r5, r0, r6
   1a800:	addhi	r5, r5, #1
   1a804:	mov	r0, r7
   1a808:	mov	r1, r5
   1a80c:	mov	r2, r6
   1a810:	bl	1c074 <lchmod@@Base+0x4bb0>
   1a814:	cmp	r0, #0
   1a818:	bne	1a830 <lchmod@@Base+0x336c>
   1a81c:	cmp	r7, #0
   1a820:	beq	1a838 <lchmod@@Base+0x3374>
   1a824:	cmp	r6, #0
   1a828:	cmpne	r5, #0
   1a82c:	bne	1a838 <lchmod@@Base+0x3374>
   1a830:	str	r5, [r4]
   1a834:	pop	{r4, r5, r6, r7, fp, pc}
   1a838:	bl	1ab6c <lchmod@@Base+0x36a8>
   1a83c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a840:	add	fp, sp, #24
   1a844:	mov	r8, r1
   1a848:	ldr	r1, [r1]
   1a84c:	mov	r5, r0
   1a850:	add	r0, r1, r1, asr #1
   1a854:	cmp	r0, r1
   1a858:	mvnvs	r0, #-2147483648	; 0x80000000
   1a85c:	cmp	r0, r3
   1a860:	mov	r7, r0
   1a864:	movgt	r7, r3
   1a868:	cmn	r3, #1
   1a86c:	movle	r7, r0
   1a870:	ldr	r0, [fp, #8]
   1a874:	cmn	r0, #1
   1a878:	ble	1a8a0 <lchmod@@Base+0x33dc>
   1a87c:	cmp	r0, #0
   1a880:	beq	1a8f4 <lchmod@@Base+0x3430>
   1a884:	cmn	r7, #1
   1a888:	ble	1a8c8 <lchmod@@Base+0x3404>
   1a88c:	mvn	r4, #-2147483648	; 0x80000000
   1a890:	udiv	r6, r4, r0
   1a894:	cmp	r6, r7
   1a898:	bge	1a8f4 <lchmod@@Base+0x3430>
   1a89c:	b	1a904 <lchmod@@Base+0x3440>
   1a8a0:	cmn	r7, #1
   1a8a4:	ble	1a8e4 <lchmod@@Base+0x3420>
   1a8a8:	cmn	r0, #1
   1a8ac:	beq	1a8f4 <lchmod@@Base+0x3430>
   1a8b0:	mov	r6, #-2147483648	; 0x80000000
   1a8b4:	mvn	r4, #-2147483648	; 0x80000000
   1a8b8:	sdiv	r6, r6, r0
   1a8bc:	cmp	r6, r7
   1a8c0:	bge	1a8f4 <lchmod@@Base+0x3430>
   1a8c4:	b	1a904 <lchmod@@Base+0x3440>
   1a8c8:	beq	1a8f4 <lchmod@@Base+0x3430>
   1a8cc:	mov	r6, #-2147483648	; 0x80000000
   1a8d0:	mvn	r4, #-2147483648	; 0x80000000
   1a8d4:	sdiv	r6, r6, r7
   1a8d8:	cmp	r6, r0
   1a8dc:	bge	1a8f4 <lchmod@@Base+0x3430>
   1a8e0:	b	1a904 <lchmod@@Base+0x3440>
   1a8e4:	mvn	r4, #-2147483648	; 0x80000000
   1a8e8:	sdiv	r6, r4, r0
   1a8ec:	cmp	r7, r6
   1a8f0:	blt	1a904 <lchmod@@Base+0x3440>
   1a8f4:	mul	r6, r7, r0
   1a8f8:	mov	r4, #64	; 0x40
   1a8fc:	cmp	r6, #63	; 0x3f
   1a900:	bgt	1a90c <lchmod@@Base+0x3448>
   1a904:	sdiv	r7, r4, r0
   1a908:	mul	r6, r7, r0
   1a90c:	cmp	r5, #0
   1a910:	moveq	r4, #0
   1a914:	streq	r4, [r8]
   1a918:	sub	r4, r7, r1
   1a91c:	cmp	r4, r2
   1a920:	bge	1a9cc <lchmod@@Base+0x3508>
   1a924:	add	r7, r1, r2
   1a928:	mov	r6, #0
   1a92c:	mov	r2, #0
   1a930:	cmp	r7, r3
   1a934:	movwgt	r6, #1
   1a938:	cmn	r3, #1
   1a93c:	movwgt	r2, #1
   1a940:	cmp	r7, r1
   1a944:	bvs	1aa00 <lchmod@@Base+0x353c>
   1a948:	ands	r1, r2, r6
   1a94c:	bne	1aa00 <lchmod@@Base+0x353c>
   1a950:	cmn	r0, #1
   1a954:	ble	1a97c <lchmod@@Base+0x34b8>
   1a958:	cmp	r0, #0
   1a95c:	beq	1a9c8 <lchmod@@Base+0x3504>
   1a960:	cmn	r7, #1
   1a964:	ble	1a9a0 <lchmod@@Base+0x34dc>
   1a968:	mvn	r1, #-2147483648	; 0x80000000
   1a96c:	udiv	r1, r1, r0
   1a970:	cmp	r1, r7
   1a974:	bge	1a9c8 <lchmod@@Base+0x3504>
   1a978:	b	1aa00 <lchmod@@Base+0x353c>
   1a97c:	cmn	r7, #1
   1a980:	ble	1a9b8 <lchmod@@Base+0x34f4>
   1a984:	cmn	r0, #1
   1a988:	beq	1a9c8 <lchmod@@Base+0x3504>
   1a98c:	mov	r1, #-2147483648	; 0x80000000
   1a990:	sdiv	r1, r1, r0
   1a994:	cmp	r1, r7
   1a998:	bge	1a9c8 <lchmod@@Base+0x3504>
   1a99c:	b	1aa00 <lchmod@@Base+0x353c>
   1a9a0:	beq	1a9c8 <lchmod@@Base+0x3504>
   1a9a4:	mov	r1, #-2147483648	; 0x80000000
   1a9a8:	sdiv	r1, r1, r7
   1a9ac:	cmp	r1, r0
   1a9b0:	bge	1a9c8 <lchmod@@Base+0x3504>
   1a9b4:	b	1aa00 <lchmod@@Base+0x353c>
   1a9b8:	mvn	r1, #-2147483648	; 0x80000000
   1a9bc:	sdiv	r1, r1, r0
   1a9c0:	cmp	r7, r1
   1a9c4:	blt	1aa00 <lchmod@@Base+0x353c>
   1a9c8:	mul	r6, r7, r0
   1a9cc:	mov	r0, r5
   1a9d0:	mov	r1, r6
   1a9d4:	bl	1b964 <lchmod@@Base+0x44a0>
   1a9d8:	cmp	r6, #0
   1a9dc:	movwne	r6, #1
   1a9e0:	cmp	r0, #0
   1a9e4:	bne	1a9f8 <lchmod@@Base+0x3534>
   1a9e8:	clz	r1, r5
   1a9ec:	lsr	r1, r1, #5
   1a9f0:	orrs	r1, r1, r6
   1a9f4:	bne	1aa00 <lchmod@@Base+0x353c>
   1a9f8:	str	r7, [r8]
   1a9fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1aa00:	bl	1ab6c <lchmod@@Base+0x36a8>
   1aa04:	push	{fp, lr}
   1aa08:	mov	fp, sp
   1aa0c:	mov	r1, #1
   1aa10:	bl	1b8e0 <lchmod@@Base+0x441c>
   1aa14:	cmp	r0, #0
   1aa18:	popne	{fp, pc}
   1aa1c:	bl	1ab6c <lchmod@@Base+0x36a8>
   1aa20:	push	{fp, lr}
   1aa24:	mov	fp, sp
   1aa28:	bl	1b8e0 <lchmod@@Base+0x441c>
   1aa2c:	cmp	r0, #0
   1aa30:	popne	{fp, pc}
   1aa34:	bl	1ab6c <lchmod@@Base+0x36a8>
   1aa38:	push	{fp, lr}
   1aa3c:	mov	fp, sp
   1aa40:	mov	r1, #1
   1aa44:	bl	1b8e0 <lchmod@@Base+0x441c>
   1aa48:	cmp	r0, #0
   1aa4c:	popne	{fp, pc}
   1aa50:	bl	1ab6c <lchmod@@Base+0x36a8>
   1aa54:	push	{fp, lr}
   1aa58:	mov	fp, sp
   1aa5c:	bl	1b8e0 <lchmod@@Base+0x441c>
   1aa60:	cmp	r0, #0
   1aa64:	popne	{fp, pc}
   1aa68:	bl	1ab6c <lchmod@@Base+0x36a8>
   1aa6c:	push	{r4, r5, r6, sl, fp, lr}
   1aa70:	add	fp, sp, #16
   1aa74:	mov	r5, r0
   1aa78:	mov	r0, r1
   1aa7c:	mov	r4, r1
   1aa80:	bl	1b934 <lchmod@@Base+0x4470>
   1aa84:	cmp	r0, #0
   1aa88:	beq	1aaa4 <lchmod@@Base+0x35e0>
   1aa8c:	mov	r1, r5
   1aa90:	mov	r2, r4
   1aa94:	mov	r6, r0
   1aa98:	bl	11834 <memcpy@plt>
   1aa9c:	mov	r0, r6
   1aaa0:	pop	{r4, r5, r6, sl, fp, pc}
   1aaa4:	bl	1ab6c <lchmod@@Base+0x36a8>
   1aaa8:	push	{r4, r5, r6, sl, fp, lr}
   1aaac:	add	fp, sp, #16
   1aab0:	mov	r5, r0
   1aab4:	mov	r0, r1
   1aab8:	mov	r4, r1
   1aabc:	bl	1b934 <lchmod@@Base+0x4470>
   1aac0:	cmp	r0, #0
   1aac4:	beq	1aae0 <lchmod@@Base+0x361c>
   1aac8:	mov	r1, r5
   1aacc:	mov	r2, r4
   1aad0:	mov	r6, r0
   1aad4:	bl	11834 <memcpy@plt>
   1aad8:	mov	r0, r6
   1aadc:	pop	{r4, r5, r6, sl, fp, pc}
   1aae0:	bl	1ab6c <lchmod@@Base+0x36a8>
   1aae4:	push	{r4, r5, r6, sl, fp, lr}
   1aae8:	add	fp, sp, #16
   1aaec:	mov	r5, r0
   1aaf0:	add	r0, r1, #1
   1aaf4:	mov	r4, r1
   1aaf8:	bl	1b934 <lchmod@@Base+0x4470>
   1aafc:	cmp	r0, #0
   1ab00:	beq	1ab28 <lchmod@@Base+0x3664>
   1ab04:	mov	r6, r0
   1ab08:	mov	r0, #0
   1ab0c:	mov	r1, r5
   1ab10:	mov	r2, r4
   1ab14:	strb	r0, [r6, r4]
   1ab18:	mov	r0, r6
   1ab1c:	bl	11834 <memcpy@plt>
   1ab20:	mov	r0, r6
   1ab24:	pop	{r4, r5, r6, sl, fp, pc}
   1ab28:	bl	1ab6c <lchmod@@Base+0x36a8>
   1ab2c:	push	{r4, r5, r6, sl, fp, lr}
   1ab30:	add	fp, sp, #16
   1ab34:	mov	r4, r0
   1ab38:	bl	119cc <strlen@plt>
   1ab3c:	add	r5, r0, #1
   1ab40:	mov	r0, r5
   1ab44:	bl	1b934 <lchmod@@Base+0x4470>
   1ab48:	cmp	r0, #0
   1ab4c:	beq	1ab68 <lchmod@@Base+0x36a4>
   1ab50:	mov	r1, r4
   1ab54:	mov	r2, r5
   1ab58:	mov	r6, r0
   1ab5c:	bl	11834 <memcpy@plt>
   1ab60:	mov	r0, r6
   1ab64:	pop	{r4, r5, r6, sl, fp, pc}
   1ab68:	bl	1ab6c <lchmod@@Base+0x36a8>
   1ab6c:	push	{fp, lr}
   1ab70:	mov	fp, sp
   1ab74:	movw	r0, #57740	; 0xe18c
   1ab78:	movw	r1, #53610	; 0xd16a
   1ab7c:	mov	r2, #5
   1ab80:	movt	r0, #2
   1ab84:	movt	r1, #1
   1ab88:	ldr	r4, [r0]
   1ab8c:	mov	r0, #0
   1ab90:	bl	11870 <dcgettext@plt>
   1ab94:	movw	r2, #52351	; 0xcc7f
   1ab98:	mov	r3, r0
   1ab9c:	mov	r0, r4
   1aba0:	mov	r1, #0
   1aba4:	movt	r2, #1
   1aba8:	bl	11930 <error@plt>
   1abac:	bl	11b64 <abort@plt>
   1abb0:	push	{fp, lr}
   1abb4:	mov	fp, sp
   1abb8:	orr	r1, r1, #512	; 0x200
   1abbc:	bl	137cc <__assert_fail@plt+0x1c08>
   1abc0:	cmp	r0, #0
   1abc4:	popne	{fp, pc}
   1abc8:	bl	11a08 <__errno_location@plt>
   1abcc:	ldr	r0, [r0]
   1abd0:	cmp	r0, #22
   1abd4:	bne	1abf8 <lchmod@@Base+0x3734>
   1abd8:	movw	r0, #53627	; 0xd17b
   1abdc:	movw	r1, #53643	; 0xd18b
   1abe0:	movw	r3, #53654	; 0xd196
   1abe4:	mov	r2, #41	; 0x29
   1abe8:	movt	r0, #1
   1abec:	movt	r1, #1
   1abf0:	movt	r3, #1
   1abf4:	bl	11bc4 <__assert_fail@plt>
   1abf8:	bl	1ab6c <lchmod@@Base+0x36a8>
   1abfc:	ldr	r0, [r0, #48]	; 0x30
   1ac00:	and	r0, r0, #17
   1ac04:	cmp	r0, #16
   1ac08:	moveq	r0, #1
   1ac0c:	bxeq	lr
   1ac10:	cmp	r0, #17
   1ac14:	movne	r0, #0
   1ac18:	bxne	lr
   1ac1c:	ldr	r0, [r1, #48]	; 0x30
   1ac20:	cmp	r0, #0
   1ac24:	movwne	r0, #1
   1ac28:	bx	lr
   1ac2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac30:	add	fp, sp, #28
   1ac34:	sub	sp, sp, #44	; 0x2c
   1ac38:	cmp	r2, #37	; 0x25
   1ac3c:	bcs	1b8c0 <lchmod@@Base+0x43fc>
   1ac40:	ldr	sl, [fp, #8]
   1ac44:	mov	r6, r2
   1ac48:	mov	r7, r1
   1ac4c:	mov	r4, r0
   1ac50:	str	r3, [sp, #36]	; 0x24
   1ac54:	bl	11a08 <__errno_location@plt>
   1ac58:	mov	r5, r0
   1ac5c:	mov	r0, #0
   1ac60:	str	r0, [r5]
   1ac64:	bl	1199c <__ctype_b_loc@plt>
   1ac68:	ldr	r1, [r0]
   1ac6c:	mov	r2, r4
   1ac70:	ldrb	r0, [r2], #1
   1ac74:	add	r3, r1, r0, lsl #1
   1ac78:	ldrb	r3, [r3, #1]
   1ac7c:	tst	r3, #32
   1ac80:	bne	1ac70 <lchmod@@Base+0x37ac>
   1ac84:	sub	r9, fp, #32
   1ac88:	cmp	r7, #0
   1ac8c:	mov	r8, #4
   1ac90:	movne	r9, r7
   1ac94:	cmp	r0, #45	; 0x2d
   1ac98:	beq	1b058 <lchmod@@Base+0x3b94>
   1ac9c:	mov	r0, r4
   1aca0:	mov	r1, r9
   1aca4:	mov	r2, r6
   1aca8:	mov	r3, #0
   1acac:	bl	11840 <__strtoull_internal@plt>
   1acb0:	mov	r7, r1
   1acb4:	ldr	r1, [r9]
   1acb8:	cmp	r1, r4
   1acbc:	beq	1acf4 <lchmod@@Base+0x3830>
   1acc0:	mov	r6, r0
   1acc4:	ldr	r0, [r5]
   1acc8:	cmp	r0, #0
   1accc:	beq	1b010 <lchmod@@Base+0x3b4c>
   1acd0:	cmp	r0, #34	; 0x22
   1acd4:	bne	1b058 <lchmod@@Base+0x3b94>
   1acd8:	mov	r8, #1
   1acdc:	cmp	sl, #0
   1ace0:	beq	1b8ac <lchmod@@Base+0x43e8>
   1ace4:	ldrb	r4, [r1]
   1ace8:	cmp	r4, #0
   1acec:	bne	1ad38 <lchmod@@Base+0x3874>
   1acf0:	b	1b8ac <lchmod@@Base+0x43e8>
   1acf4:	cmp	sl, #0
   1acf8:	beq	1b058 <lchmod@@Base+0x3b94>
   1acfc:	mov	r5, r1
   1ad00:	ldrb	r1, [r4]
   1ad04:	cmp	r1, #0
   1ad08:	beq	1b058 <lchmod@@Base+0x3b94>
   1ad0c:	mov	r0, sl
   1ad10:	bl	119e4 <strchr@plt>
   1ad14:	cmp	r0, #0
   1ad18:	beq	1b058 <lchmod@@Base+0x3b94>
   1ad1c:	mov	r1, r5
   1ad20:	mov	r8, #0
   1ad24:	mov	r6, #1
   1ad28:	mov	r7, #0
   1ad2c:	ldrb	r4, [r1]
   1ad30:	cmp	r4, #0
   1ad34:	beq	1b8ac <lchmod@@Base+0x43e8>
   1ad38:	str	r1, [sp, #32]
   1ad3c:	mov	r0, sl
   1ad40:	mov	r1, r4
   1ad44:	bl	119e4 <strchr@plt>
   1ad48:	cmp	r0, #0
   1ad4c:	beq	1b04c <lchmod@@Base+0x3b88>
   1ad50:	sub	r0, r4, #69	; 0x45
   1ad54:	mov	r1, #1
   1ad58:	mov	r3, #0
   1ad5c:	mov	r5, #1024	; 0x400
   1ad60:	cmp	r0, #47	; 0x2f
   1ad64:	str	r1, [sp, #28]
   1ad68:	bhi	1ae6c <lchmod@@Base+0x39a8>
   1ad6c:	add	r1, pc, #0
   1ad70:	ldr	pc, [r1, r0, lsl #2]
   1ad74:	andeq	sl, r1, r4, lsr lr
   1ad78:	andeq	sl, r1, ip, ror #28
   1ad7c:	andeq	sl, r1, r4, lsr lr
   1ad80:	andeq	sl, r1, ip, ror #28
   1ad84:	andeq	sl, r1, ip, ror #28
   1ad88:	andeq	sl, r1, ip, ror #28
   1ad8c:	andeq	sl, r1, r4, lsr lr
   1ad90:	andeq	sl, r1, ip, ror #28
   1ad94:	andeq	sl, r1, r4, lsr lr
   1ad98:	andeq	sl, r1, ip, ror #28
   1ad9c:	andeq	sl, r1, ip, ror #28
   1ada0:	andeq	sl, r1, r4, lsr lr
   1ada4:	andeq	sl, r1, ip, ror #28
   1ada8:	andeq	sl, r1, ip, ror #28
   1adac:	andeq	sl, r1, ip, ror #28
   1adb0:	andeq	sl, r1, r4, lsr lr
   1adb4:	andeq	sl, r1, ip, ror #28
   1adb8:	andeq	sl, r1, ip, ror #28
   1adbc:	andeq	sl, r1, ip, ror #28
   1adc0:	andeq	sl, r1, ip, ror #28
   1adc4:	andeq	sl, r1, r4, lsr lr
   1adc8:	andeq	sl, r1, r4, lsr lr
   1adcc:	andeq	sl, r1, ip, ror #28
   1add0:	andeq	sl, r1, ip, ror #28
   1add4:	andeq	sl, r1, ip, ror #28
   1add8:	andeq	sl, r1, ip, ror #28
   1addc:	andeq	sl, r1, ip, ror #28
   1ade0:	andeq	sl, r1, ip, ror #28
   1ade4:	andeq	sl, r1, ip, ror #28
   1ade8:	andeq	sl, r1, ip, ror #28
   1adec:	andeq	sl, r1, ip, ror #28
   1adf0:	andeq	sl, r1, ip, ror #28
   1adf4:	andeq	sl, r1, ip, ror #28
   1adf8:	andeq	sl, r1, ip, ror #28
   1adfc:	andeq	sl, r1, r4, lsr lr
   1ae00:	andeq	sl, r1, ip, ror #28
   1ae04:	andeq	sl, r1, ip, ror #28
   1ae08:	andeq	sl, r1, ip, ror #28
   1ae0c:	andeq	sl, r1, r4, lsr lr
   1ae10:	andeq	sl, r1, ip, ror #28
   1ae14:	andeq	sl, r1, r4, lsr lr
   1ae18:	andeq	sl, r1, ip, ror #28
   1ae1c:	andeq	sl, r1, ip, ror #28
   1ae20:	andeq	sl, r1, ip, ror #28
   1ae24:	andeq	sl, r1, ip, ror #28
   1ae28:	andeq	sl, r1, ip, ror #28
   1ae2c:	andeq	sl, r1, ip, ror #28
   1ae30:	andeq	sl, r1, r4, lsr lr
   1ae34:	mov	r0, sl
   1ae38:	mov	r1, #48	; 0x30
   1ae3c:	bl	119e4 <strchr@plt>
   1ae40:	cmp	r0, #0
   1ae44:	beq	1ae68 <lchmod@@Base+0x39a4>
   1ae48:	ldr	r1, [sp, #32]
   1ae4c:	ldrb	r0, [r1, #1]
   1ae50:	cmp	r0, #66	; 0x42
   1ae54:	cmpne	r0, #68	; 0x44
   1ae58:	bne	1b020 <lchmod@@Base+0x3b5c>
   1ae5c:	mov	r5, #1000	; 0x3e8
   1ae60:	mov	r0, #2
   1ae64:	str	r0, [sp, #28]
   1ae68:	mov	r3, #0
   1ae6c:	sub	r0, r4, #66	; 0x42
   1ae70:	cmp	r0, #53	; 0x35
   1ae74:	bhi	1b04c <lchmod@@Base+0x3b88>
   1ae78:	add	r1, pc, #0
   1ae7c:	ldr	pc, [r1, r0, lsl #2]
   1ae80:			; <UNDEFINED> instruction: 0x0001b3bc
   1ae84:	andeq	fp, r1, ip, asr #32
   1ae88:	andeq	fp, r1, ip, asr #32
   1ae8c:	andeq	fp, r1, r4, ror #7
   1ae90:	andeq	fp, r1, ip, asr #32
   1ae94:	andeq	sl, r1, r8, asr pc
   1ae98:	andeq	fp, r1, ip, asr #32
   1ae9c:	andeq	fp, r1, ip, asr #32
   1aea0:	andeq	fp, r1, ip, asr #32
   1aea4:	andeq	fp, r1, r4, rrx
   1aea8:	andeq	fp, r1, ip, asr #32
   1aeac:	andeq	fp, r1, ip, lsr #1
   1aeb0:	andeq	fp, r1, ip, asr #32
   1aeb4:	andeq	fp, r1, ip, asr #32
   1aeb8:	andeq	fp, r1, r8, lsr r5
   1aebc:	andeq	fp, r1, ip, asr #32
   1aec0:	andeq	fp, r1, ip, asr #32
   1aec4:	andeq	fp, r1, ip, asr #32
   1aec8:	andeq	fp, r1, r8, lsr r1
   1aecc:	andeq	fp, r1, ip, asr #32
   1aed0:	andeq	fp, r1, ip, asr #32
   1aed4:	andeq	fp, r1, ip, asr #32
   1aed8:	andeq	fp, r1, ip, asr #32
   1aedc:	andeq	fp, r1, r0, ror #12
   1aee0:	andeq	fp, r1, r0, lsr #4
   1aee4:	andeq	fp, r1, ip, asr #32
   1aee8:	andeq	fp, r1, ip, asr #32
   1aeec:	andeq	fp, r1, ip, asr #32
   1aef0:	andeq	fp, r1, ip, asr #32
   1aef4:	andeq	fp, r1, ip, asr #32
   1aef8:	andeq	fp, r1, ip, asr #32
   1aefc:	andeq	fp, r1, ip, asr #32
   1af00:	andeq	fp, r1, r4, lsr r8
   1af04:	andeq	fp, r1, ip, lsl #17
   1af08:	andeq	fp, r1, ip, asr #32
   1af0c:	andeq	fp, r1, ip, asr #32
   1af10:	andeq	fp, r1, ip, asr #32
   1af14:	andeq	sl, r1, r8, asr pc
   1af18:	andeq	fp, r1, ip, asr #32
   1af1c:	andeq	fp, r1, ip, asr #32
   1af20:	andeq	fp, r1, ip, asr #32
   1af24:	andeq	fp, r1, r4, rrx
   1af28:	andeq	fp, r1, ip, asr #32
   1af2c:	andeq	fp, r1, ip, lsr #1
   1af30:	andeq	fp, r1, ip, asr #32
   1af34:	andeq	fp, r1, ip, asr #32
   1af38:	andeq	fp, r1, ip, asr #32
   1af3c:	andeq	fp, r1, ip, asr #32
   1af40:	andeq	fp, r1, ip, asr #32
   1af44:	andeq	fp, r1, ip, asr #32
   1af48:	andeq	fp, r1, r8, lsr r1
   1af4c:	andeq	fp, r1, ip, asr #32
   1af50:	andeq	fp, r1, ip, asr #32
   1af54:	andeq	fp, r1, r8, ror #16
   1af58:	mvn	r0, #0
   1af5c:	mvn	r1, #0
   1af60:	mov	r2, r5
   1af64:	mov	sl, r3
   1af68:	bl	1c1c4 <lchmod@@Base+0x4d00>
   1af6c:	subs	r3, r0, r6
   1af70:	mov	lr, #0
   1af74:	umull	r4, r2, r6, r5
   1af78:	str	r1, [sp, #20]
   1af7c:	sbcs	r3, r1, r7
   1af80:	mla	ip, r6, sl, r2
   1af84:	mov	r2, r1
   1af88:	movwcc	lr, #1
   1af8c:	mla	r7, r7, r5, ip
   1af90:	mov	r2, #0
   1af94:	cmp	lr, #0
   1af98:	mvnne	r4, #0
   1af9c:	mvnne	r7, #0
   1afa0:	subs	r6, r0, r4
   1afa4:	sbcs	r6, r1, r7
   1afa8:	movwcc	r2, #1
   1afac:	umull	r3, r6, r4, r5
   1afb0:	cmp	r2, #0
   1afb4:	str	r6, [sp, #16]
   1afb8:	mvnne	r3, #0
   1afbc:	cmp	r2, #0
   1afc0:	umull	r6, ip, r3, r5
   1afc4:	mla	r1, r3, sl, ip
   1afc8:	ldr	ip, [sp, #16]
   1afcc:	str	r1, [sp, #12]
   1afd0:	mla	r4, r4, sl, ip
   1afd4:	mla	r4, r7, r5, r4
   1afd8:	ldr	r7, [sp, #12]
   1afdc:	mvnne	r4, #0
   1afe0:	subs	r0, r0, r3
   1afe4:	ldr	r0, [sp, #20]
   1afe8:	mla	r7, r4, r5, r7
   1afec:	sbcs	r0, r0, r4
   1aff0:	mov	r0, #0
   1aff4:	movwcc	r0, #1
   1aff8:	cmp	r0, #0
   1affc:	mov	r1, r0
   1b000:	orr	r0, lr, r2
   1b004:	mvnne	r7, #0
   1b008:	mvnne	r6, #0
   1b00c:	b	1b658 <lchmod@@Base+0x4194>
   1b010:	mov	r8, r0
   1b014:	cmp	sl, #0
   1b018:	bne	1ace4 <lchmod@@Base+0x3820>
   1b01c:	b	1b8ac <lchmod@@Base+0x43e8>
   1b020:	cmp	r0, #105	; 0x69
   1b024:	mov	r3, #0
   1b028:	bne	1ae6c <lchmod@@Base+0x39a8>
   1b02c:	ldrb	r0, [r1, #2]
   1b030:	mov	r1, #1
   1b034:	cmp	r0, #66	; 0x42
   1b038:	movweq	r1, #3
   1b03c:	str	r1, [sp, #28]
   1b040:	sub	r0, r4, #66	; 0x42
   1b044:	cmp	r0, #53	; 0x35
   1b048:	bls	1ae78 <lchmod@@Base+0x39b4>
   1b04c:	ldr	r0, [sp, #36]	; 0x24
   1b050:	orr	r8, r8, #2
   1b054:	strd	r6, [r0]
   1b058:	mov	r0, r8
   1b05c:	sub	sp, fp, #28
   1b060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b064:	mvn	r0, #0
   1b068:	mvn	r1, #0
   1b06c:	mov	r2, r5
   1b070:	mov	r4, r3
   1b074:	bl	1c1c4 <lchmod@@Base+0x4d00>
   1b078:	subs	r0, r0, r6
   1b07c:	mov	r2, #0
   1b080:	sbcs	r0, r1, r7
   1b084:	movwcc	r2, #1
   1b088:	umull	r0, r1, r6, r5
   1b08c:	mla	r1, r6, r4, r1
   1b090:	cmp	r2, #0
   1b094:	mov	r3, r2
   1b098:	mla	r7, r7, r5, r1
   1b09c:	mvnne	r0, #0
   1b0a0:	mvnne	r7, #0
   1b0a4:	mov	r6, r0
   1b0a8:	b	1b88c <lchmod@@Base+0x43c8>
   1b0ac:	mvn	r0, #0
   1b0b0:	mvn	r1, #0
   1b0b4:	mov	r2, r5
   1b0b8:	str	r3, [sp, #24]
   1b0bc:	bl	1c1c4 <lchmod@@Base+0x4d00>
   1b0c0:	subs	r3, r0, r6
   1b0c4:	mov	ip, r0
   1b0c8:	umull	r4, r0, r6, r5
   1b0cc:	mov	sl, #0
   1b0d0:	sbcs	r3, r1, r7
   1b0d4:	str	r0, [sp, #20]
   1b0d8:	ldr	r0, [sp, #24]
   1b0dc:	mov	r3, #0
   1b0e0:	movwcc	r3, #1
   1b0e4:	cmp	r3, #0
   1b0e8:	mvnne	r4, #0
   1b0ec:	cmp	r3, #0
   1b0f0:	umull	lr, r2, r4, r5
   1b0f4:	mla	r2, r4, r0, r2
   1b0f8:	str	r2, [sp, #16]
   1b0fc:	ldr	r2, [sp, #20]
   1b100:	mla	r6, r6, r0, r2
   1b104:	ldr	r0, [sp, #16]
   1b108:	mla	r6, r7, r5, r6
   1b10c:	mvnne	r6, #0
   1b110:	mla	r7, r6, r5, r0
   1b114:	subs	r0, ip, r4
   1b118:	sbcs	r0, r1, r6
   1b11c:	movwcc	sl, #1
   1b120:	cmp	sl, #0
   1b124:	orr	r3, r3, sl
   1b128:	mvnne	lr, #0
   1b12c:	mvnne	r7, #0
   1b130:	mov	r6, lr
   1b134:	b	1b88c <lchmod@@Base+0x43c8>
   1b138:	mvn	r0, #0
   1b13c:	mvn	r1, #0
   1b140:	mov	r2, r5
   1b144:	mov	sl, r3
   1b148:	bl	1c1c4 <lchmod@@Base+0x4d00>
   1b14c:	subs	r3, r0, r6
   1b150:	mov	ip, r1
   1b154:	umull	r2, lr, r6, r5
   1b158:	str	r0, [sp, #20]
   1b15c:	sbcs	r3, r1, r7
   1b160:	mov	r1, #0
   1b164:	mla	r6, r6, sl, lr
   1b168:	mov	lr, #0
   1b16c:	str	ip, [sp, #16]
   1b170:	movwcc	r1, #1
   1b174:	mla	r7, r7, r5, r6
   1b178:	cmp	r1, #0
   1b17c:	mvnne	r2, #0
   1b180:	cmp	r1, #0
   1b184:	umull	r3, r4, r2, r5
   1b188:	mvnne	r7, #0
   1b18c:	mla	r4, r2, sl, r4
   1b190:	subs	r2, r0, r2
   1b194:	sbcs	r2, ip, r7
   1b198:	mla	r4, r7, r5, r4
   1b19c:	movwcc	lr, #1
   1b1a0:	mov	r2, #0
   1b1a4:	cmp	lr, #0
   1b1a8:	mvnne	r3, #0
   1b1ac:	mvnne	r4, #0
   1b1b0:	subs	r7, r0, r3
   1b1b4:	mov	r0, r5
   1b1b8:	sbcs	r7, ip, r4
   1b1bc:	movwcc	r2, #1
   1b1c0:	umull	r5, r7, r3, r5
   1b1c4:	cmp	r2, #0
   1b1c8:	mla	r3, r3, sl, r7
   1b1cc:	mvnne	r5, #0
   1b1d0:	mla	r3, r4, r0, r3
   1b1d4:	cmp	r2, #0
   1b1d8:	umull	r6, ip, r5, r0
   1b1dc:	mvnne	r3, #0
   1b1e0:	mla	ip, r5, sl, ip
   1b1e4:	mla	r7, r3, r0, ip
   1b1e8:	ldr	r0, [sp, #20]
   1b1ec:	subs	r0, r0, r5
   1b1f0:	ldr	r0, [sp, #16]
   1b1f4:	sbcs	r0, r0, r3
   1b1f8:	mov	r0, #0
   1b1fc:	movwcc	r0, #1
   1b200:	cmp	r0, #0
   1b204:	mov	r3, r0
   1b208:	orr	r0, r1, lr
   1b20c:	orr	r0, r0, r2
   1b210:	mvnne	r7, #0
   1b214:	mvnne	r6, #0
   1b218:	orr	r3, r0, r3
   1b21c:	b	1b88c <lchmod@@Base+0x43c8>
   1b220:	mvn	r0, #0
   1b224:	mvn	r1, #0
   1b228:	mov	r2, r5
   1b22c:	mov	r4, r3
   1b230:	str	r3, [sp, #24]
   1b234:	bl	1c1c4 <lchmod@@Base+0x4d00>
   1b238:	umull	r3, r2, r6, r5
   1b23c:	mla	r2, r6, r4, r2
   1b240:	subs	r6, r0, r6
   1b244:	sbcs	r6, r1, r7
   1b248:	mla	r2, r7, r5, r2
   1b24c:	mov	r7, #0
   1b250:	mov	r6, #0
   1b254:	movwcc	r6, #1
   1b258:	cmp	r6, #0
   1b25c:	str	r6, [sp, #20]
   1b260:	mvnne	r3, #0
   1b264:	mvnne	r2, #0
   1b268:	subs	r4, r0, r3
   1b26c:	umull	r6, ip, r3, r5
   1b270:	sbcs	r4, r1, r2
   1b274:	ldr	r4, [sp, #24]
   1b278:	movwcc	r7, #1
   1b27c:	cmp	r7, #0
   1b280:	mov	lr, r7
   1b284:	str	r7, [sp, #16]
   1b288:	mvnne	r6, #0
   1b28c:	cmp	lr, #0
   1b290:	mov	lr, #0
   1b294:	umull	sl, r7, r6, r5
   1b298:	mla	r3, r3, r4, ip
   1b29c:	mla	r7, r6, r4, r7
   1b2a0:	mov	r4, r0
   1b2a4:	mla	r2, r2, r5, r3
   1b2a8:	mvnne	r2, #0
   1b2ac:	subs	r3, r0, r6
   1b2b0:	mov	r0, #0
   1b2b4:	mla	r7, r2, r5, r7
   1b2b8:	sbcs	r2, r1, r2
   1b2bc:	mov	r3, r4
   1b2c0:	movwcc	r0, #1
   1b2c4:	str	r3, [sp, #4]
   1b2c8:	cmp	r0, #0
   1b2cc:	str	r0, [sp, #12]
   1b2d0:	mov	r0, r1
   1b2d4:	mvnne	sl, #0
   1b2d8:	mvnne	r7, #0
   1b2dc:	str	r0, [sp, #8]
   1b2e0:	subs	r2, r4, sl
   1b2e4:	ldr	r4, [sp, #24]
   1b2e8:	sbcs	r2, r1, r7
   1b2ec:	movwcc	lr, #1
   1b2f0:	umull	r6, r2, sl, r5
   1b2f4:	cmp	lr, #0
   1b2f8:	mvnne	r6, #0
   1b2fc:	mla	r2, sl, r4, r2
   1b300:	cmp	lr, #0
   1b304:	umull	r1, ip, r6, r5
   1b308:	mla	r2, r7, r5, r2
   1b30c:	mla	ip, r6, r4, ip
   1b310:	mvnne	r2, #0
   1b314:	subs	r6, r3, r6
   1b318:	mla	r7, r2, r5, ip
   1b31c:	sbcs	r2, r0, r2
   1b320:	mov	ip, #0
   1b324:	movwcc	ip, #1
   1b328:	mov	r2, #0
   1b32c:	cmp	ip, #0
   1b330:	mvnne	r1, #0
   1b334:	mvnne	r7, #0
   1b338:	subs	r6, r3, r1
   1b33c:	ldr	r3, [sp, #24]
   1b340:	sbcs	r6, r0, r7
   1b344:	umull	r0, sl, r1, r5
   1b348:	movwcc	r2, #1
   1b34c:	cmp	r2, #0
   1b350:	mvnne	r0, #0
   1b354:	mla	r1, r1, r3, sl
   1b358:	cmp	r2, #0
   1b35c:	umull	r6, r4, r0, r5
   1b360:	mla	r1, r7, r5, r1
   1b364:	mla	r4, r0, r3, r4
   1b368:	ldr	r3, [sp, #4]
   1b36c:	mvnne	r1, #0
   1b370:	mla	r7, r1, r5, r4
   1b374:	ldr	r5, [sp, #16]
   1b378:	subs	r0, r3, r0
   1b37c:	ldr	r0, [sp, #8]
   1b380:	sbcs	r0, r0, r1
   1b384:	mov	r0, #0
   1b388:	movwcc	r0, #1
   1b38c:	cmp	r0, #0
   1b390:	mov	r1, r0
   1b394:	ldr	r0, [sp, #20]
   1b398:	mvnne	r7, #0
   1b39c:	mvnne	r6, #0
   1b3a0:	orr	r0, r0, r5
   1b3a4:	ldr	r5, [sp, #12]
   1b3a8:	orr	r0, r0, r5
   1b3ac:	orr	r0, r0, lr
   1b3b0:	orr	r0, r0, ip
   1b3b4:	orr	r0, r0, r2
   1b3b8:	b	1b828 <lchmod@@Base+0x4364>
   1b3bc:	mov	r1, #0
   1b3c0:	lsl	r2, r7, #10
   1b3c4:	lsl	r0, r6, #10
   1b3c8:	lsr	r3, r7, #22
   1b3cc:	cmp	r1, r7, lsr #22
   1b3d0:	orr	r2, r2, r6, lsr #22
   1b3d4:	mvnne	r0, #0
   1b3d8:	movwne	r3, #1
   1b3dc:	cmp	r1, r7, lsr #22
   1b3e0:	b	1b858 <lchmod@@Base+0x4394>
   1b3e4:	mvn	r0, #0
   1b3e8:	mvn	r1, #0
   1b3ec:	mov	r2, r5
   1b3f0:	mov	sl, r3
   1b3f4:	bl	1c1c4 <lchmod@@Base+0x4d00>
   1b3f8:	subs	r2, r0, r6
   1b3fc:	mov	ip, r0
   1b400:	mov	r0, #0
   1b404:	sbcs	r2, r1, r7
   1b408:	movwcc	r0, #1
   1b40c:	umull	r4, r2, r6, r5
   1b410:	cmp	r0, #0
   1b414:	mla	r2, r6, sl, r2
   1b418:	str	r0, [sp, #20]
   1b41c:	mvnne	r4, #0
   1b420:	cmp	r0, #0
   1b424:	mla	r2, r7, r5, r2
   1b428:	mov	r0, #0
   1b42c:	umull	lr, r3, r4, r5
   1b430:	mvnne	r2, #0
   1b434:	mla	r3, r4, sl, r3
   1b438:	mla	r6, r2, r5, r3
   1b43c:	subs	r3, ip, r4
   1b440:	sbcs	r2, r1, r2
   1b444:	mov	r3, r1
   1b448:	movwcc	r0, #1
   1b44c:	str	r3, [sp, #8]
   1b450:	cmp	r0, #0
   1b454:	str	r0, [sp, #16]
   1b458:	mov	r0, ip
   1b45c:	mvnne	lr, #0
   1b460:	mvnne	r6, #0
   1b464:	str	r0, [sp, #12]
   1b468:	subs	r2, ip, lr
   1b46c:	umull	r7, r4, lr, r5
   1b470:	sbcs	r2, r1, r6
   1b474:	mla	r4, lr, sl, r4
   1b478:	mov	r2, #0
   1b47c:	mla	r6, r6, r5, r4
   1b480:	mov	r4, #0
   1b484:	movwcc	r2, #1
   1b488:	cmp	r2, #0
   1b48c:	mvnne	r7, #0
   1b490:	cmp	r2, #0
   1b494:	umull	r1, ip, r7, r5
   1b498:	mvnne	r6, #0
   1b49c:	mla	ip, r7, sl, ip
   1b4a0:	subs	r7, r0, r7
   1b4a4:	mla	lr, r6, r5, ip
   1b4a8:	sbcs	r7, r3, r6
   1b4ac:	mov	ip, #0
   1b4b0:	movwcc	ip, #1
   1b4b4:	cmp	ip, #0
   1b4b8:	mvnne	r1, #0
   1b4bc:	mvnne	lr, #0
   1b4c0:	subs	r7, r0, r1
   1b4c4:	sbcs	r7, r3, lr
   1b4c8:	movwcc	r4, #1
   1b4cc:	umull	r0, r7, r1, r5
   1b4d0:	cmp	r4, #0
   1b4d4:	mla	r1, r1, sl, r7
   1b4d8:	mvnne	r0, #0
   1b4dc:	mla	r1, lr, r5, r1
   1b4e0:	cmp	r4, #0
   1b4e4:	umull	r6, r3, r0, r5
   1b4e8:	mvnne	r1, #0
   1b4ec:	mla	r3, r0, sl, r3
   1b4f0:	mla	r7, r1, r5, r3
   1b4f4:	ldr	r3, [sp, #12]
   1b4f8:	subs	r0, r3, r0
   1b4fc:	ldr	r3, [sp, #16]
   1b500:	ldr	r0, [sp, #8]
   1b504:	sbcs	r0, r0, r1
   1b508:	mov	r0, #0
   1b50c:	movwcc	r0, #1
   1b510:	cmp	r0, #0
   1b514:	mov	r1, r0
   1b518:	ldr	r0, [sp, #20]
   1b51c:	mvnne	r7, #0
   1b520:	mvnne	r6, #0
   1b524:	orr	r0, r0, r3
   1b528:	orr	r0, r0, r2
   1b52c:	orr	r0, r0, ip
   1b530:	orr	r0, r0, r4
   1b534:	b	1b658 <lchmod@@Base+0x4194>
   1b538:	mvn	r0, #0
   1b53c:	mvn	r1, #0
   1b540:	mov	r2, r5
   1b544:	mov	sl, r3
   1b548:	bl	1c1c4 <lchmod@@Base+0x4d00>
   1b54c:	umull	r3, r2, r6, r5
   1b550:	mov	lr, r1
   1b554:	mov	r1, r0
   1b558:	mla	r2, r6, sl, r2
   1b55c:	subs	r6, r0, r6
   1b560:	mov	r0, #0
   1b564:	sbcs	r6, lr, r7
   1b568:	mla	r2, r7, r5, r2
   1b56c:	movwcc	r0, #1
   1b570:	cmp	r0, #0
   1b574:	str	r0, [sp, #20]
   1b578:	mov	r0, r1
   1b57c:	mvnne	r3, #0
   1b580:	mvnne	r2, #0
   1b584:	str	r0, [sp, #16]
   1b588:	subs	r4, r1, r3
   1b58c:	umull	r7, ip, r3, r5
   1b590:	sbcs	r4, lr, r2
   1b594:	mla	r3, r3, sl, ip
   1b598:	mov	ip, #0
   1b59c:	mov	r4, #0
   1b5a0:	mla	r2, r2, r5, r3
   1b5a4:	movwcc	r4, #1
   1b5a8:	cmp	r4, #0
   1b5ac:	mvnne	r7, #0
   1b5b0:	cmp	r4, #0
   1b5b4:	umull	r1, r6, r7, r5
   1b5b8:	mvnne	r2, #0
   1b5bc:	mla	r6, r7, sl, r6
   1b5c0:	mla	r3, r2, r5, r6
   1b5c4:	subs	r6, r0, r7
   1b5c8:	sbcs	r2, lr, r2
   1b5cc:	movwcc	ip, #1
   1b5d0:	mov	r2, #0
   1b5d4:	cmp	ip, #0
   1b5d8:	mvnne	r1, #0
   1b5dc:	mvnne	r3, #0
   1b5e0:	subs	r6, r0, r1
   1b5e4:	sbcs	r6, lr, r3
   1b5e8:	movwcc	r2, #1
   1b5ec:	umull	r0, r6, r1, r5
   1b5f0:	cmp	r2, #0
   1b5f4:	str	r6, [sp, #12]
   1b5f8:	mvnne	r0, #0
   1b5fc:	cmp	r2, #0
   1b600:	umull	r6, r7, r0, r5
   1b604:	mla	r7, r0, sl, r7
   1b608:	str	r7, [sp, #8]
   1b60c:	ldr	r7, [sp, #12]
   1b610:	mla	r1, r1, sl, r7
   1b614:	mla	r1, r3, r5, r1
   1b618:	ldr	r3, [sp, #8]
   1b61c:	mvnne	r1, #0
   1b620:	mla	r7, r1, r5, r3
   1b624:	ldr	r3, [sp, #16]
   1b628:	subs	r0, r3, r0
   1b62c:	sbcs	r0, lr, r1
   1b630:	mov	r0, #0
   1b634:	movwcc	r0, #1
   1b638:	cmp	r0, #0
   1b63c:	mov	r1, r0
   1b640:	ldr	r0, [sp, #20]
   1b644:	mvnne	r7, #0
   1b648:	mvnne	r6, #0
   1b64c:	orr	r0, r0, r4
   1b650:	orr	r0, r0, ip
   1b654:	orr	r0, r0, r2
   1b658:	orr	r3, r0, r1
   1b65c:	b	1b88c <lchmod@@Base+0x43c8>
   1b660:	mvn	r0, #0
   1b664:	mvn	r1, #0
   1b668:	mov	r2, r5
   1b66c:	mov	sl, r3
   1b670:	bl	1c1c4 <lchmod@@Base+0x4d00>
   1b674:	mov	ip, r1
   1b678:	subs	r1, r0, r6
   1b67c:	umull	r3, lr, r6, r5
   1b680:	mov	r2, r5
   1b684:	sbcs	r1, ip, r7
   1b688:	mla	r6, r6, sl, lr
   1b68c:	str	ip, [sp, #4]
   1b690:	mov	r1, #0
   1b694:	mla	r7, r7, r2, r6
   1b698:	movwcc	r1, #1
   1b69c:	cmp	r1, #0
   1b6a0:	str	r1, [sp, #20]
   1b6a4:	mvnne	r3, #0
   1b6a8:	cmp	r1, #0
   1b6ac:	mov	r1, r0
   1b6b0:	umull	r4, r5, r3, r5
   1b6b4:	mvnne	r7, #0
   1b6b8:	mov	lr, r1
   1b6bc:	mla	r5, r3, sl, r5
   1b6c0:	subs	r3, r0, r3
   1b6c4:	sbcs	r0, ip, r7
   1b6c8:	mla	r5, r7, r2, r5
   1b6cc:	mov	r0, #0
   1b6d0:	movwcc	r0, #1
   1b6d4:	cmp	r0, #0
   1b6d8:	str	r0, [sp, #16]
   1b6dc:	mvnne	r4, #0
   1b6e0:	mvnne	r5, #0
   1b6e4:	subs	r0, r1, r4
   1b6e8:	mov	r1, #0
   1b6ec:	sbcs	r0, ip, r5
   1b6f0:	movwcc	r1, #1
   1b6f4:	umull	r3, r0, r4, r2
   1b6f8:	cmp	r1, #0
   1b6fc:	mla	r0, r4, sl, r0
   1b700:	mov	r4, lr
   1b704:	str	r1, [sp, #12]
   1b708:	mvnne	r3, #0
   1b70c:	mla	r0, r5, r2, r0
   1b710:	cmp	r1, #0
   1b714:	str	r4, [sp]
   1b718:	umull	r7, r6, r3, r2
   1b71c:	mvnne	r0, #0
   1b720:	mla	r6, r3, sl, r6
   1b724:	subs	r3, lr, r3
   1b728:	mla	r5, r0, r2, r6
   1b72c:	sbcs	r0, ip, r0
   1b730:	mov	r3, #0
   1b734:	mov	r0, #0
   1b738:	movwcc	r0, #1
   1b73c:	cmp	r0, #0
   1b740:	str	r0, [sp, #8]
   1b744:	mvnne	r7, #0
   1b748:	mvnne	r5, #0
   1b74c:	subs	r0, lr, r7
   1b750:	sbcs	r0, ip, r5
   1b754:	movwcc	r3, #1
   1b758:	umull	r6, r0, r7, r2
   1b75c:	cmp	r3, #0
   1b760:	mla	r7, r7, sl, r0
   1b764:	mov	r0, ip
   1b768:	mvnne	r6, #0
   1b76c:	mla	r7, r5, r2, r7
   1b770:	cmp	r3, #0
   1b774:	mov	r5, #0
   1b778:	umull	r1, lr, r6, r2
   1b77c:	mvnne	r7, #0
   1b780:	mla	lr, r6, sl, lr
   1b784:	subs	r6, r4, r6
   1b788:	mla	lr, r7, r2, lr
   1b78c:	sbcs	r7, ip, r7
   1b790:	mov	ip, #0
   1b794:	movwcc	ip, #1
   1b798:	cmp	ip, #0
   1b79c:	mvnne	r1, #0
   1b7a0:	mvnne	lr, #0
   1b7a4:	subs	r7, r4, r1
   1b7a8:	sbcs	r7, r0, lr
   1b7ac:	movwcc	r5, #1
   1b7b0:	umull	r0, r7, r1, r2
   1b7b4:	cmp	r5, #0
   1b7b8:	mla	r1, r1, sl, r7
   1b7bc:	mvnne	r0, #0
   1b7c0:	mla	r1, lr, r2, r1
   1b7c4:	cmp	r5, #0
   1b7c8:	umull	r6, r4, r0, r2
   1b7cc:	mvnne	r1, #0
   1b7d0:	mla	r4, r0, sl, r4
   1b7d4:	mla	r7, r1, r2, r4
   1b7d8:	ldr	r2, [sp]
   1b7dc:	subs	r0, r2, r0
   1b7e0:	ldr	r2, [sp, #16]
   1b7e4:	ldr	r0, [sp, #4]
   1b7e8:	sbcs	r0, r0, r1
   1b7ec:	mov	r0, #0
   1b7f0:	movwcc	r0, #1
   1b7f4:	cmp	r0, #0
   1b7f8:	mov	r1, r0
   1b7fc:	ldr	r0, [sp, #20]
   1b800:	mvnne	r7, #0
   1b804:	mvnne	r6, #0
   1b808:	orr	r0, r0, r2
   1b80c:	ldr	r2, [sp, #12]
   1b810:	orr	r0, r0, r2
   1b814:	ldr	r2, [sp, #8]
   1b818:	orr	r0, r0, r2
   1b81c:	orr	r0, r0, r3
   1b820:	orr	r0, r0, ip
   1b824:	orr	r0, r0, r5
   1b828:	orr	r0, r0, r1
   1b82c:	and	r3, r0, #1
   1b830:	b	1b88c <lchmod@@Base+0x43c8>
   1b834:	mov	r1, #0
   1b838:	lsl	r2, r7, #9
   1b83c:	lsl	r0, r6, #9
   1b840:	lsr	r3, r7, #23
   1b844:	cmp	r1, r7, lsr #23
   1b848:	orr	r2, r2, r6, lsr #23
   1b84c:	mvnne	r0, #0
   1b850:	movwne	r3, #1
   1b854:	cmp	r1, r7, lsr #23
   1b858:	mvnne	r2, #0
   1b85c:	mov	r6, r0
   1b860:	mov	r7, r2
   1b864:	b	1b88c <lchmod@@Base+0x43c8>
   1b868:	lsl	r1, r7, #1
   1b86c:	lsl	r0, r6, #1
   1b870:	cmp	r7, #0
   1b874:	lsr	r3, r7, #31
   1b878:	orr	r1, r1, r6, lsr #31
   1b87c:	mvnlt	r0, #0
   1b880:	mvnlt	r1, #0
   1b884:	mov	r6, r0
   1b888:	mov	r7, r1
   1b88c:	ldr	r1, [sp, #32]
   1b890:	ldr	r2, [sp, #28]
   1b894:	orr	r8, r3, r8
   1b898:	add	r0, r1, r2
   1b89c:	str	r0, [r9]
   1b8a0:	ldrb	r0, [r1, r2]
   1b8a4:	cmp	r0, #0
   1b8a8:	orrne	r8, r8, #2
   1b8ac:	ldr	r0, [sp, #36]	; 0x24
   1b8b0:	strd	r6, [r0]
   1b8b4:	mov	r0, r8
   1b8b8:	sub	sp, fp, #28
   1b8bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b8c0:	movw	r0, #53732	; 0xd1e4
   1b8c4:	movw	r1, #53770	; 0xd20a
   1b8c8:	movw	r3, #53786	; 0xd21a
   1b8cc:	mov	r2, #85	; 0x55
   1b8d0:	movt	r0, #1
   1b8d4:	movt	r1, #1
   1b8d8:	movt	r3, #1
   1b8dc:	bl	11bc4 <__assert_fail@plt>
   1b8e0:	clz	r2, r1
   1b8e4:	clz	r3, r0
   1b8e8:	lsr	r2, r2, #5
   1b8ec:	lsr	r3, r3, #5
   1b8f0:	orrs	r2, r3, r2
   1b8f4:	movwne	r1, #1
   1b8f8:	movwne	r0, #1
   1b8fc:	cmp	r1, #0
   1b900:	beq	1b930 <lchmod@@Base+0x446c>
   1b904:	mvn	r2, #-2147483648	; 0x80000000
   1b908:	udiv	r2, r2, r1
   1b90c:	cmp	r2, r0
   1b910:	bcs	1b930 <lchmod@@Base+0x446c>
   1b914:	push	{fp, lr}
   1b918:	mov	fp, sp
   1b91c:	bl	11a08 <__errno_location@plt>
   1b920:	mov	r1, #12
   1b924:	str	r1, [r0]
   1b928:	mov	r0, #0
   1b92c:	pop	{fp, pc}
   1b930:	b	117a4 <calloc@plt>
   1b934:	cmp	r0, #0
   1b938:	movweq	r0, #1
   1b93c:	cmn	r0, #1
   1b940:	ble	1b948 <lchmod@@Base+0x4484>
   1b944:	b	11954 <malloc@plt>
   1b948:	push	{fp, lr}
   1b94c:	mov	fp, sp
   1b950:	bl	11a08 <__errno_location@plt>
   1b954:	mov	r1, #12
   1b958:	str	r1, [r0]
   1b95c:	mov	r0, #0
   1b960:	pop	{fp, pc}
   1b964:	push	{fp, lr}
   1b968:	mov	fp, sp
   1b96c:	cmp	r0, #0
   1b970:	beq	1b98c <lchmod@@Base+0x44c8>
   1b974:	cmp	r1, #0
   1b978:	beq	1b998 <lchmod@@Base+0x44d4>
   1b97c:	cmn	r1, #1
   1b980:	ble	1b9a4 <lchmod@@Base+0x44e0>
   1b984:	pop	{fp, lr}
   1b988:	b	11888 <realloc@plt>
   1b98c:	mov	r0, r1
   1b990:	pop	{fp, lr}
   1b994:	b	1b934 <lchmod@@Base+0x4470>
   1b998:	bl	137a4 <__assert_fail@plt+0x1be0>
   1b99c:	mov	r0, #0
   1b9a0:	pop	{fp, pc}
   1b9a4:	bl	11a08 <__errno_location@plt>
   1b9a8:	mov	r1, #12
   1b9ac:	str	r1, [r0]
   1b9b0:	mov	r0, #0
   1b9b4:	pop	{fp, pc}
   1b9b8:	sub	r0, r0, #1
   1b9bc:	ldrb	r3, [r0, #1]!
   1b9c0:	cmp	r3, #47	; 0x2f
   1b9c4:	beq	1b9bc <lchmod@@Base+0x44f8>
   1b9c8:	mov	r2, #0
   1b9cc:	mov	r1, r0
   1b9d0:	uxtb	r3, r3
   1b9d4:	cmp	r3, #47	; 0x2f
   1b9d8:	beq	1ba00 <lchmod@@Base+0x453c>
   1b9dc:	cmp	r3, #0
   1b9e0:	bxeq	lr
   1b9e4:	tst	r2, #1
   1b9e8:	mov	r2, #0
   1b9ec:	movne	r0, r1
   1b9f0:	ldrb	r3, [r1, #1]!
   1b9f4:	uxtb	r3, r3
   1b9f8:	cmp	r3, #47	; 0x2f
   1b9fc:	bne	1b9dc <lchmod@@Base+0x4518>
   1ba00:	ldrb	r3, [r1, #1]!
   1ba04:	mov	r2, #1
   1ba08:	uxtb	r3, r3
   1ba0c:	cmp	r3, #47	; 0x2f
   1ba10:	bne	1b9dc <lchmod@@Base+0x4518>
   1ba14:	b	1ba00 <lchmod@@Base+0x453c>
   1ba18:	push	{r4, sl, fp, lr}
   1ba1c:	add	fp, sp, #8
   1ba20:	mov	r4, r0
   1ba24:	bl	119cc <strlen@plt>
   1ba28:	mov	r1, r0
   1ba2c:	sub	r2, r4, #1
   1ba30:	mov	r0, r1
   1ba34:	cmp	r1, #2
   1ba38:	popcc	{r4, sl, fp, pc}
   1ba3c:	ldrb	r3, [r2, r0]
   1ba40:	sub	r1, r0, #1
   1ba44:	cmp	r3, #47	; 0x2f
   1ba48:	beq	1ba30 <lchmod@@Base+0x456c>
   1ba4c:	pop	{r4, sl, fp, pc}
   1ba50:	push	{r4, r5, r6, sl, fp, lr}
   1ba54:	add	fp, sp, #16
   1ba58:	mov	r4, r0
   1ba5c:	bl	11918 <__fpending@plt>
   1ba60:	ldr	r6, [r4]
   1ba64:	mov	r5, r0
   1ba68:	mov	r0, r4
   1ba6c:	bl	1bbc8 <lchmod@@Base+0x4704>
   1ba70:	tst	r6, #32
   1ba74:	bne	1baac <lchmod@@Base+0x45e8>
   1ba78:	cmp	r0, #0
   1ba7c:	mov	r4, r0
   1ba80:	mvnne	r4, #0
   1ba84:	cmp	r5, #0
   1ba88:	bne	1bab8 <lchmod@@Base+0x45f4>
   1ba8c:	cmp	r0, #0
   1ba90:	beq	1bab8 <lchmod@@Base+0x45f4>
   1ba94:	bl	11a08 <__errno_location@plt>
   1ba98:	ldr	r0, [r0]
   1ba9c:	subs	r4, r0, #9
   1baa0:	mvnne	r4, #0
   1baa4:	mov	r0, r4
   1baa8:	pop	{r4, r5, r6, sl, fp, pc}
   1baac:	mvn	r4, #0
   1bab0:	cmp	r0, #0
   1bab4:	beq	1bac0 <lchmod@@Base+0x45fc>
   1bab8:	mov	r0, r4
   1babc:	pop	{r4, r5, r6, sl, fp, pc}
   1bac0:	bl	11a08 <__errno_location@plt>
   1bac4:	mov	r1, #0
   1bac8:	str	r1, [r0]
   1bacc:	mov	r0, r4
   1bad0:	pop	{r4, r5, r6, sl, fp, pc}
   1bad4:	movw	r2, #62998	; 0xf616
   1bad8:	mov	r1, #0
   1badc:	movt	r2, #149	; 0x95
   1bae0:	str	r1, [r0, #16]
   1bae4:	str	r1, [r0, #20]
   1bae8:	str	r2, [r0, #24]
   1baec:	bx	lr
   1baf0:	push	{r4, r5, r6, r7, fp, lr}
   1baf4:	add	fp, sp, #16
   1baf8:	ldr	r2, [r0, #24]
   1bafc:	movw	r3, #62998	; 0xf616
   1bb00:	movt	r3, #149	; 0x95
   1bb04:	cmp	r2, r3
   1bb08:	bne	1bba8 <lchmod@@Base+0x46e4>
   1bb0c:	mov	r3, r0
   1bb10:	ldr	r2, [r3, #16]!
   1bb14:	ldr	lr, [r3, #4]
   1bb18:	orrs	r5, r2, lr
   1bb1c:	beq	1bb54 <lchmod@@Base+0x4690>
   1bb20:	ldrd	r4, [r0]
   1bb24:	ldrd	r6, [r1, #96]	; 0x60
   1bb28:	eor	r7, r7, r5
   1bb2c:	eor	r6, r6, r4
   1bb30:	orrs	r7, r6, r7
   1bb34:	bne	1bb54 <lchmod@@Base+0x4690>
   1bb38:	ldrd	r4, [r0, #8]
   1bb3c:	ldrd	r6, [r1]
   1bb40:	mov	ip, #1
   1bb44:	eor	r7, r7, r5
   1bb48:	eor	r6, r6, r4
   1bb4c:	orrs	r7, r6, r7
   1bb50:	beq	1bb74 <lchmod@@Base+0x46b0>
   1bb54:	adds	r4, r2, #1
   1bb58:	mov	ip, #0
   1bb5c:	adc	r5, lr, #0
   1bb60:	and	r2, r4, r2
   1bb64:	strd	r4, [r3]
   1bb68:	and	r3, r5, lr
   1bb6c:	orrs	r2, r2, r3
   1bb70:	beq	1bb7c <lchmod@@Base+0x46b8>
   1bb74:	mov	r0, ip
   1bb78:	pop	{r4, r5, r6, r7, fp, pc}
   1bb7c:	orrs	r2, r4, r5
   1bb80:	moveq	ip, #1
   1bb84:	moveq	r0, ip
   1bb88:	popeq	{r4, r5, r6, r7, fp, pc}
   1bb8c:	ldrd	r2, [r1]
   1bb90:	str	r3, [r0, #12]
   1bb94:	str	r2, [r0, #8]
   1bb98:	ldrd	r2, [r1, #96]	; 0x60
   1bb9c:	stm	r0, {r2, r3}
   1bba0:	mov	r0, ip
   1bba4:	pop	{r4, r5, r6, r7, fp, pc}
   1bba8:	movw	r0, #53865	; 0xd269
   1bbac:	movw	r1, #53889	; 0xd281
   1bbb0:	movw	r3, #53907	; 0xd293
   1bbb4:	mov	r2, #60	; 0x3c
   1bbb8:	movt	r0, #1
   1bbbc:	movt	r1, #1
   1bbc0:	movt	r3, #1
   1bbc4:	bl	11bc4 <__assert_fail@plt>
   1bbc8:	push	{r4, r5, r6, sl, fp, lr}
   1bbcc:	add	fp, sp, #16
   1bbd0:	sub	sp, sp, #8
   1bbd4:	mov	r4, r0
   1bbd8:	bl	11a44 <fileno@plt>
   1bbdc:	cmn	r0, #1
   1bbe0:	ble	1bc54 <lchmod@@Base+0x4790>
   1bbe4:	mov	r0, r4
   1bbe8:	bl	1196c <__freading@plt>
   1bbec:	cmp	r0, #0
   1bbf0:	beq	1bc1c <lchmod@@Base+0x4758>
   1bbf4:	mov	r0, r4
   1bbf8:	bl	11a44 <fileno@plt>
   1bbfc:	mov	r1, #1
   1bc00:	mov	r2, #0
   1bc04:	mov	r3, #0
   1bc08:	str	r1, [sp]
   1bc0c:	bl	118f4 <lseek64@plt>
   1bc10:	and	r0, r0, r1
   1bc14:	cmn	r0, #1
   1bc18:	beq	1bc54 <lchmod@@Base+0x4790>
   1bc1c:	mov	r0, r4
   1bc20:	bl	1be8c <lchmod@@Base+0x49c8>
   1bc24:	cmp	r0, #0
   1bc28:	beq	1bc54 <lchmod@@Base+0x4790>
   1bc2c:	bl	11a08 <__errno_location@plt>
   1bc30:	ldr	r6, [r0]
   1bc34:	mov	r5, r0
   1bc38:	mov	r0, r4
   1bc3c:	bl	11a5c <fclose@plt>
   1bc40:	cmp	r6, #0
   1bc44:	strne	r6, [r5]
   1bc48:	mvnne	r0, #0
   1bc4c:	sub	sp, fp, #16
   1bc50:	pop	{r4, r5, r6, sl, fp, pc}
   1bc54:	mov	r0, r4
   1bc58:	sub	sp, fp, #16
   1bc5c:	pop	{r4, r5, r6, sl, fp, lr}
   1bc60:	b	11a5c <fclose@plt>
   1bc64:	sub	sp, sp, #8
   1bc68:	push	{r4, r5, r6, r7, fp, lr}
   1bc6c:	add	fp, sp, #16
   1bc70:	sub	sp, sp, #8
   1bc74:	mov	r5, r0
   1bc78:	add	r0, fp, #8
   1bc7c:	cmp	r1, #11
   1bc80:	str	r3, [fp, #12]
   1bc84:	str	r2, [fp, #8]
   1bc88:	str	r0, [sp, #4]
   1bc8c:	bhi	1bcc8 <lchmod@@Base+0x4804>
   1bc90:	mov	r0, #1
   1bc94:	movw	r2, #1300	; 0x514
   1bc98:	tst	r2, r0, lsl r1
   1bc9c:	bne	1bd88 <lchmod@@Base+0x48c4>
   1bca0:	movw	r2, #2570	; 0xa0a
   1bca4:	tst	r2, r0, lsl r1
   1bca8:	bne	1bcf0 <lchmod@@Base+0x482c>
   1bcac:	cmp	r1, #0
   1bcb0:	bne	1bcc8 <lchmod@@Base+0x4804>
   1bcb4:	ldr	r0, [sp, #4]
   1bcb8:	add	r1, r0, #4
   1bcbc:	str	r1, [sp, #4]
   1bcc0:	mov	r1, #0
   1bcc4:	b	1bd94 <lchmod@@Base+0x48d0>
   1bcc8:	sub	r0, r1, #1024	; 0x400
   1bccc:	cmp	r0, #10
   1bcd0:	bhi	1bd88 <lchmod@@Base+0x48c4>
   1bcd4:	mov	r2, #1
   1bcd8:	movw	r3, #645	; 0x285
   1bcdc:	tst	r3, r2, lsl r0
   1bce0:	bne	1bd88 <lchmod@@Base+0x48c4>
   1bce4:	movw	r3, #1282	; 0x502
   1bce8:	tst	r3, r2, lsl r0
   1bcec:	beq	1bcfc <lchmod@@Base+0x4838>
   1bcf0:	mov	r0, r5
   1bcf4:	bl	11a74 <fcntl64@plt>
   1bcf8:	b	1bda0 <lchmod@@Base+0x48dc>
   1bcfc:	cmp	r0, #6
   1bd00:	bne	1bd88 <lchmod@@Base+0x48c4>
   1bd04:	ldr	r0, [sp, #4]
   1bd08:	movw	r7, #58160	; 0xe330
   1bd0c:	movt	r7, #2
   1bd10:	add	r1, r0, #4
   1bd14:	str	r1, [sp, #4]
   1bd18:	ldr	r6, [r0]
   1bd1c:	ldr	r0, [r7]
   1bd20:	cmp	r0, #0
   1bd24:	blt	1bdc4 <lchmod@@Base+0x4900>
   1bd28:	mov	r0, r5
   1bd2c:	movw	r1, #1030	; 0x406
   1bd30:	mov	r2, r6
   1bd34:	bl	11a74 <fcntl64@plt>
   1bd38:	mov	r4, r0
   1bd3c:	cmn	r0, #1
   1bd40:	bgt	1bdb8 <lchmod@@Base+0x48f4>
   1bd44:	bl	11a08 <__errno_location@plt>
   1bd48:	ldr	r0, [r0]
   1bd4c:	cmp	r0, #22
   1bd50:	bne	1bdb8 <lchmod@@Base+0x48f4>
   1bd54:	mov	r0, r5
   1bd58:	mov	r1, #0
   1bd5c:	mov	r2, r6
   1bd60:	bl	11a74 <fcntl64@plt>
   1bd64:	mov	r4, r0
   1bd68:	cmp	r0, #0
   1bd6c:	blt	1bda4 <lchmod@@Base+0x48e0>
   1bd70:	mvn	r0, #0
   1bd74:	str	r0, [r7]
   1bd78:	mov	r0, #1
   1bd7c:	cmp	r0, #0
   1bd80:	bne	1bdf0 <lchmod@@Base+0x492c>
   1bd84:	b	1bda4 <lchmod@@Base+0x48e0>
   1bd88:	ldr	r0, [sp, #4]
   1bd8c:	add	r2, r0, #4
   1bd90:	str	r2, [sp, #4]
   1bd94:	ldr	r2, [r0]
   1bd98:	mov	r0, r5
   1bd9c:	bl	11a74 <fcntl64@plt>
   1bda0:	mov	r4, r0
   1bda4:	mov	r0, r4
   1bda8:	sub	sp, fp, #16
   1bdac:	pop	{r4, r5, r6, r7, fp, lr}
   1bdb0:	add	sp, sp, #8
   1bdb4:	bx	lr
   1bdb8:	mov	r0, #1
   1bdbc:	str	r0, [r7]
   1bdc0:	b	1bda4 <lchmod@@Base+0x48e0>
   1bdc4:	mov	r0, r5
   1bdc8:	mov	r1, #0
   1bdcc:	mov	r2, r6
   1bdd0:	bl	11a74 <fcntl64@plt>
   1bdd4:	mov	r4, r0
   1bdd8:	ldr	r0, [r7]
   1bddc:	add	r0, r0, #1
   1bde0:	clz	r0, r0
   1bde4:	lsr	r0, r0, #5
   1bde8:	cmp	r0, #0
   1bdec:	beq	1bda4 <lchmod@@Base+0x48e0>
   1bdf0:	cmp	r4, #0
   1bdf4:	blt	1bda4 <lchmod@@Base+0x48e0>
   1bdf8:	mov	r0, r4
   1bdfc:	mov	r1, #1
   1be00:	bl	11a74 <fcntl64@plt>
   1be04:	cmp	r0, #0
   1be08:	blt	1be24 <lchmod@@Base+0x4960>
   1be0c:	orr	r2, r0, #1
   1be10:	mov	r0, r4
   1be14:	mov	r1, #2
   1be18:	bl	11a74 <fcntl64@plt>
   1be1c:	cmn	r0, #1
   1be20:	bne	1bda4 <lchmod@@Base+0x48e0>
   1be24:	bl	11a08 <__errno_location@plt>
   1be28:	ldr	r6, [r0]
   1be2c:	mov	r5, r0
   1be30:	mov	r0, r4
   1be34:	bl	11b70 <close@plt>
   1be38:	str	r6, [r5]
   1be3c:	mvn	r4, #0
   1be40:	b	1bda4 <lchmod@@Base+0x48e0>
   1be44:	sub	sp, sp, #8
   1be48:	push	{fp, lr}
   1be4c:	mov	fp, sp
   1be50:	sub	sp, sp, #8
   1be54:	str	r2, [fp, #8]
   1be58:	mov	r2, #0
   1be5c:	tst	r1, #64	; 0x40
   1be60:	str	r3, [fp, #12]
   1be64:	addne	r2, fp, #8
   1be68:	orrne	r2, r2, #4
   1be6c:	strne	r2, [sp, #4]
   1be70:	ldrne	r2, [fp, #8]
   1be74:	bl	1193c <open64@plt>
   1be78:	bl	19f08 <lchmod@@Base+0x2a44>
   1be7c:	mov	sp, fp
   1be80:	pop	{fp, lr}
   1be84:	add	sp, sp, #8
   1be88:	bx	lr
   1be8c:	push	{r4, sl, fp, lr}
   1be90:	add	fp, sp, #8
   1be94:	sub	sp, sp, #8
   1be98:	mov	r4, r0
   1be9c:	cmp	r0, #0
   1bea0:	beq	1bebc <lchmod@@Base+0x49f8>
   1bea4:	mov	r0, r4
   1bea8:	bl	1196c <__freading@plt>
   1beac:	cmp	r0, #0
   1beb0:	ldrbne	r0, [r4, #1]
   1beb4:	tstne	r0, #1
   1beb8:	bne	1becc <lchmod@@Base+0x4a08>
   1bebc:	mov	r0, r4
   1bec0:	sub	sp, fp, #8
   1bec4:	pop	{r4, sl, fp, lr}
   1bec8:	b	117ec <fflush@plt>
   1becc:	mov	r0, #1
   1bed0:	mov	r2, #0
   1bed4:	mov	r3, #0
   1bed8:	str	r0, [sp]
   1bedc:	mov	r0, r4
   1bee0:	bl	1bef4 <lchmod@@Base+0x4a30>
   1bee4:	mov	r0, r4
   1bee8:	sub	sp, fp, #8
   1beec:	pop	{r4, sl, fp, lr}
   1bef0:	b	117ec <fflush@plt>
   1bef4:	push	{r4, r5, r6, r7, fp, lr}
   1bef8:	add	fp, sp, #16
   1befc:	sub	sp, sp, #8
   1bf00:	mov	r4, r0
   1bf04:	ldr	r0, [r0, #4]
   1bf08:	mov	r5, r3
   1bf0c:	mov	r6, r2
   1bf10:	ldr	r1, [r4, #8]
   1bf14:	cmp	r1, r0
   1bf18:	bne	1bf34 <lchmod@@Base+0x4a70>
   1bf1c:	ldrd	r0, [r4, #16]
   1bf20:	cmp	r1, r0
   1bf24:	bne	1bf34 <lchmod@@Base+0x4a70>
   1bf28:	ldr	r0, [r4, #36]	; 0x24
   1bf2c:	cmp	r0, #0
   1bf30:	beq	1bf4c <lchmod@@Base+0x4a88>
   1bf34:	mov	r0, r4
   1bf38:	mov	r2, r6
   1bf3c:	mov	r3, r5
   1bf40:	sub	sp, fp, #16
   1bf44:	pop	{r4, r5, r6, r7, fp, lr}
   1bf48:	b	11a68 <fseeko64@plt>
   1bf4c:	ldr	r7, [fp, #8]
   1bf50:	mov	r0, r4
   1bf54:	bl	11a44 <fileno@plt>
   1bf58:	mov	r2, r6
   1bf5c:	mov	r3, r5
   1bf60:	str	r7, [sp]
   1bf64:	bl	118f4 <lseek64@plt>
   1bf68:	and	r2, r0, r1
   1bf6c:	cmn	r2, #1
   1bf70:	mvneq	r0, #0
   1bf74:	subeq	sp, fp, #16
   1bf78:	popeq	{r4, r5, r6, r7, fp, pc}
   1bf7c:	strd	r0, [r4, #80]	; 0x50
   1bf80:	ldr	r0, [r4]
   1bf84:	bic	r0, r0, #16
   1bf88:	str	r0, [r4]
   1bf8c:	mov	r0, #0
   1bf90:	sub	sp, fp, #16
   1bf94:	pop	{r4, r5, r6, r7, fp, pc}
   1bf98:	ldrb	r2, [r0]
   1bf9c:	cmp	r2, #0
   1bfa0:	beq	1bfcc <lchmod@@Base+0x4b08>
   1bfa4:	add	r3, r0, #1
   1bfa8:	mov	r0, #0
   1bfac:	ror	r0, r0, #23
   1bfb0:	uxtab	r0, r0, r2
   1bfb4:	ldrb	r2, [r3], #1
   1bfb8:	cmp	r2, #0
   1bfbc:	bne	1bfac <lchmod@@Base+0x4ae8>
   1bfc0:	udiv	r2, r0, r1
   1bfc4:	mls	r0, r2, r1, r0
   1bfc8:	bx	lr
   1bfcc:	mov	r0, #0
   1bfd0:	udiv	r2, r0, r1
   1bfd4:	mls	r0, r2, r1, r0
   1bfd8:	bx	lr
   1bfdc:	push	{fp, lr}
   1bfe0:	mov	fp, sp
   1bfe4:	mov	r0, #14
   1bfe8:	bl	11aa4 <nl_langinfo@plt>
   1bfec:	movw	r1, #52163	; 0xcbc3
   1bff0:	cmp	r0, #0
   1bff4:	movt	r1, #1
   1bff8:	movne	r1, r0
   1bffc:	movw	r0, #53974	; 0xd2d6
   1c000:	ldrb	r2, [r1]
   1c004:	movt	r0, #1
   1c008:	cmp	r2, #0
   1c00c:	movne	r0, r1
   1c010:	pop	{fp, pc}
   1c014:	push	{r4, r5, r6, r7, fp, lr}
   1c018:	add	fp, sp, #16
   1c01c:	sub	sp, sp, #8
   1c020:	add	r5, sp, #4
   1c024:	cmp	r0, #0
   1c028:	mov	r7, r2
   1c02c:	mov	r4, r1
   1c030:	movne	r5, r0
   1c034:	mov	r0, r5
   1c038:	bl	11924 <mbrtowc@plt>
   1c03c:	mov	r6, r0
   1c040:	cmp	r7, #0
   1c044:	beq	1c068 <lchmod@@Base+0x4ba4>
   1c048:	cmn	r6, #2
   1c04c:	bcc	1c068 <lchmod@@Base+0x4ba4>
   1c050:	mov	r0, #0
   1c054:	bl	1c0bc <lchmod@@Base+0x4bf8>
   1c058:	cmp	r0, #0
   1c05c:	ldrbeq	r0, [r4]
   1c060:	moveq	r6, #1
   1c064:	streq	r0, [r5]
   1c068:	mov	r0, r6
   1c06c:	sub	sp, fp, #16
   1c070:	pop	{r4, r5, r6, r7, fp, pc}
   1c074:	cmp	r2, #0
   1c078:	beq	1c0a8 <lchmod@@Base+0x4be4>
   1c07c:	mvn	r3, #0
   1c080:	udiv	r3, r3, r2
   1c084:	cmp	r3, r1
   1c088:	bcs	1c0a8 <lchmod@@Base+0x4be4>
   1c08c:	push	{fp, lr}
   1c090:	mov	fp, sp
   1c094:	bl	11a08 <__errno_location@plt>
   1c098:	mov	r1, #12
   1c09c:	str	r1, [r0]
   1c0a0:	mov	r0, #0
   1c0a4:	pop	{fp, pc}
   1c0a8:	mul	r1, r2, r1
   1c0ac:	b	1b964 <lchmod@@Base+0x44a0>
   1c0b0:	mov	r1, #0
   1c0b4:	mov	r2, #3
   1c0b8:	b	1bc64 <lchmod@@Base+0x47a0>
   1c0bc:	push	{r4, sl, fp, lr}
   1c0c0:	add	fp, sp, #8
   1c0c4:	sub	sp, sp, #264	; 0x108
   1c0c8:	add	r1, sp, #7
   1c0cc:	movw	r2, #257	; 0x101
   1c0d0:	bl	1c120 <lchmod@@Base+0x4c5c>
   1c0d4:	mov	r4, #0
   1c0d8:	cmp	r0, #0
   1c0dc:	bne	1c114 <lchmod@@Base+0x4c50>
   1c0e0:	movw	r1, #53980	; 0xd2dc
   1c0e4:	add	r0, sp, #7
   1c0e8:	movt	r1, #1
   1c0ec:	bl	117d4 <strcmp@plt>
   1c0f0:	cmp	r0, #0
   1c0f4:	beq	1c114 <lchmod@@Base+0x4c50>
   1c0f8:	movw	r1, #53982	; 0xd2de
   1c0fc:	add	r0, sp, #7
   1c100:	movt	r1, #1
   1c104:	bl	117d4 <strcmp@plt>
   1c108:	mov	r4, r0
   1c10c:	cmp	r0, #0
   1c110:	movwne	r4, #1
   1c114:	mov	r0, r4
   1c118:	sub	sp, fp, #8
   1c11c:	pop	{r4, sl, fp, pc}
   1c120:	push	{r4, r5, r6, r7, fp, lr}
   1c124:	add	fp, sp, #16
   1c128:	mov	r4, r1
   1c12c:	mov	r1, #0
   1c130:	mov	r6, r2
   1c134:	bl	11a80 <setlocale@plt>
   1c138:	cmp	r0, #0
   1c13c:	beq	1c16c <lchmod@@Base+0x4ca8>
   1c140:	mov	r7, r0
   1c144:	bl	119cc <strlen@plt>
   1c148:	cmp	r0, r6
   1c14c:	bcs	1c18c <lchmod@@Base+0x4cc8>
   1c150:	add	r2, r0, #1
   1c154:	mov	r0, r4
   1c158:	mov	r1, r7
   1c15c:	bl	11834 <memcpy@plt>
   1c160:	mov	r5, #0
   1c164:	mov	r0, r5
   1c168:	pop	{r4, r5, r6, r7, fp, pc}
   1c16c:	cmp	r6, #0
   1c170:	mov	r5, #22
   1c174:	movne	r0, #0
   1c178:	strbne	r0, [r4]
   1c17c:	movne	r0, r5
   1c180:	popne	{r4, r5, r6, r7, fp, pc}
   1c184:	mov	r0, r5
   1c188:	pop	{r4, r5, r6, r7, fp, pc}
   1c18c:	mov	r5, #34	; 0x22
   1c190:	cmp	r6, #0
   1c194:	beq	1c1b4 <lchmod@@Base+0x4cf0>
   1c198:	sub	r6, r6, #1
   1c19c:	mov	r0, r4
   1c1a0:	mov	r1, r7
   1c1a4:	mov	r2, r6
   1c1a8:	bl	11834 <memcpy@plt>
   1c1ac:	mov	r0, #0
   1c1b0:	strb	r0, [r4, r6]
   1c1b4:	mov	r0, r5
   1c1b8:	pop	{r4, r5, r6, r7, fp, pc}
   1c1bc:	mov	r1, #0
   1c1c0:	b	11a80 <setlocale@plt>
   1c1c4:	cmp	r3, #0
   1c1c8:	cmpeq	r2, #0
   1c1cc:	bne	1c1e4 <lchmod@@Base+0x4d20>
   1c1d0:	cmp	r1, #0
   1c1d4:	cmpeq	r0, #0
   1c1d8:	mvnne	r1, #0
   1c1dc:	mvnne	r0, #0
   1c1e0:	b	1c200 <lchmod@@Base+0x4d3c>
   1c1e4:	sub	sp, sp, #8
   1c1e8:	push	{sp, lr}
   1c1ec:	bl	1c210 <lchmod@@Base+0x4d4c>
   1c1f0:	ldr	lr, [sp, #4]
   1c1f4:	add	sp, sp, #8
   1c1f8:	pop	{r2, r3}
   1c1fc:	bx	lr
   1c200:	push	{r1, lr}
   1c204:	mov	r0, #8
   1c208:	bl	117bc <raise@plt>
   1c20c:	pop	{r1, pc}
   1c210:	cmp	r1, r3
   1c214:	cmpeq	r0, r2
   1c218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c21c:	mov	r4, r0
   1c220:	movcc	r0, #0
   1c224:	mov	r5, r1
   1c228:	ldr	lr, [sp, #36]	; 0x24
   1c22c:	movcc	r1, r0
   1c230:	bcc	1c32c <lchmod@@Base+0x4e68>
   1c234:	cmp	r3, #0
   1c238:	clzeq	ip, r2
   1c23c:	clzne	ip, r3
   1c240:	addeq	ip, ip, #32
   1c244:	cmp	r5, #0
   1c248:	clzeq	r1, r4
   1c24c:	addeq	r1, r1, #32
   1c250:	clzne	r1, r5
   1c254:	sub	ip, ip, r1
   1c258:	sub	sl, ip, #32
   1c25c:	lsl	r9, r3, ip
   1c260:	rsb	fp, ip, #32
   1c264:	orr	r9, r9, r2, lsl sl
   1c268:	orr	r9, r9, r2, lsr fp
   1c26c:	lsl	r8, r2, ip
   1c270:	cmp	r5, r9
   1c274:	cmpeq	r4, r8
   1c278:	movcc	r0, #0
   1c27c:	movcc	r1, r0
   1c280:	bcc	1c29c <lchmod@@Base+0x4dd8>
   1c284:	mov	r0, #1
   1c288:	subs	r4, r4, r8
   1c28c:	lsl	r1, r0, sl
   1c290:	orr	r1, r1, r0, lsr fp
   1c294:	lsl	r0, r0, ip
   1c298:	sbc	r5, r5, r9
   1c29c:	cmp	ip, #0
   1c2a0:	beq	1c32c <lchmod@@Base+0x4e68>
   1c2a4:	lsr	r6, r8, #1
   1c2a8:	orr	r6, r6, r9, lsl #31
   1c2ac:	lsr	r7, r9, #1
   1c2b0:	mov	r2, ip
   1c2b4:	b	1c2d8 <lchmod@@Base+0x4e14>
   1c2b8:	subs	r3, r4, r6
   1c2bc:	sbc	r8, r5, r7
   1c2c0:	adds	r3, r3, r3
   1c2c4:	adc	r8, r8, r8
   1c2c8:	adds	r4, r3, #1
   1c2cc:	adc	r5, r8, #0
   1c2d0:	subs	r2, r2, #1
   1c2d4:	beq	1c2f4 <lchmod@@Base+0x4e30>
   1c2d8:	cmp	r5, r7
   1c2dc:	cmpeq	r4, r6
   1c2e0:	bcs	1c2b8 <lchmod@@Base+0x4df4>
   1c2e4:	adds	r4, r4, r4
   1c2e8:	adc	r5, r5, r5
   1c2ec:	subs	r2, r2, #1
   1c2f0:	bne	1c2d8 <lchmod@@Base+0x4e14>
   1c2f4:	lsr	r3, r4, ip
   1c2f8:	orr	r3, r3, r5, lsl fp
   1c2fc:	lsr	r2, r5, ip
   1c300:	orr	r3, r3, r5, lsr sl
   1c304:	adds	r0, r0, r4
   1c308:	mov	r4, r3
   1c30c:	lsl	r3, r2, ip
   1c310:	orr	r3, r3, r4, lsl sl
   1c314:	lsl	ip, r4, ip
   1c318:	orr	r3, r3, r4, lsr fp
   1c31c:	adc	r1, r1, r5
   1c320:	subs	r0, r0, ip
   1c324:	mov	r5, r2
   1c328:	sbc	r1, r1, r3
   1c32c:	cmp	lr, #0
   1c330:	strdne	r4, [lr]
   1c334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c338:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c33c:	mov	r7, r0
   1c340:	ldr	r6, [pc, #72]	; 1c390 <lchmod@@Base+0x4ecc>
   1c344:	ldr	r5, [pc, #72]	; 1c394 <lchmod@@Base+0x4ed0>
   1c348:	add	r6, pc, r6
   1c34c:	add	r5, pc, r5
   1c350:	sub	r6, r6, r5
   1c354:	mov	r8, r1
   1c358:	mov	r9, r2
   1c35c:	bl	1176c <fstatfs64@plt-0x20>
   1c360:	asrs	r6, r6, #2
   1c364:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c368:	mov	r4, #0
   1c36c:	add	r4, r4, #1
   1c370:	ldr	r3, [r5], #4
   1c374:	mov	r2, r9
   1c378:	mov	r1, r8
   1c37c:	mov	r0, r7
   1c380:	blx	r3
   1c384:	cmp	r6, r4
   1c388:	bne	1c36c <lchmod@@Base+0x4ea8>
   1c38c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c390:			; <UNDEFINED> instruction: 0x00011bb4
   1c394:	andeq	r1, r1, ip, lsr #23
   1c398:	bx	lr
   1c39c:	ldr	r3, [pc, #12]	; 1c3b0 <lchmod@@Base+0x4eec>
   1c3a0:	mov	r1, #0
   1c3a4:	add	r3, pc, r3
   1c3a8:	ldr	r2, [r3]
   1c3ac:	b	11a20 <__cxa_atexit@plt>
   1c3b0:	ldrdeq	r1, [r1], -r8

Disassembly of section .fini:

0001c3b4 <.fini>:
   1c3b4:	push	{r3, lr}
   1c3b8:	pop	{r3, pc}
