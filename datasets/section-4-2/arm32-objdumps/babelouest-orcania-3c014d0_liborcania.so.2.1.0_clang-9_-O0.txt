
../repos/babelouest-orcania-3c014d0/liborcania.so.2.1.0:     file format elf32-littlearm


Disassembly of section .init:

00001058 <.init>:
    1058:	push	{r3, lr}
    105c:	bl	1240 <o_strchr@plt+0xc>
    1060:	pop	{r3, pc}

Disassembly of section .plt:

00001064 <strstr@plt-0x14>:
    1064:	push	{lr}		; (str lr, [sp, #-4]!)
    1068:	ldr	lr, [pc, #4]	; 1074 <strstr@plt-0x4>
    106c:	add	lr, pc, lr
    1070:	ldr	pc, [lr, #8]!
    1074:	andeq	r3, r1, ip, lsl #31

00001078 <strstr@plt>:
    1078:	add	ip, pc, #0, 12
    107c:	add	ip, ip, #77824	; 0x13000
    1080:	ldr	pc, [ip, #3980]!	; 0xf8c

00001084 <pointer_list_get_at@plt>:
    1084:	add	ip, pc, #0, 12
    1088:	add	ip, ip, #77824	; 0x13000
    108c:	ldr	pc, [ip, #3972]!	; 0xf84

00001090 <o_strncasecmp@plt>:
    1090:	add	ip, pc, #0, 12
    1094:	add	ip, ip, #77824	; 0x13000
    1098:	ldr	pc, [ip, #3964]!	; 0xf7c

0000109c <strcasestr@plt>:
    109c:	add	ip, pc, #0, 12
    10a0:	add	ip, ip, #77824	; 0x13000
    10a4:	ldr	pc, [ip, #3956]!	; 0xf74

000010a8 <strcmp@plt>:
    10a8:	add	ip, pc, #0, 12
    10ac:	add	ip, ip, #77824	; 0x13000
    10b0:	ldr	pc, [ip, #3948]!	; 0xf6c

000010b4 <__cxa_finalize@plt>:
    10b4:	add	ip, pc, #0, 12
    10b8:	add	ip, ip, #77824	; 0x13000
    10bc:	ldr	pc, [ip, #3940]!	; 0xf64

000010c0 <o_strndup@plt>:
    10c0:	add	ip, pc, #0, 12
    10c4:	add	ip, ip, #77824	; 0x13000
    10c8:	ldr	pc, [ip, #3932]!	; 0xf5c

000010cc <o_free@plt>:
    10cc:	add	ip, pc, #0, 12
    10d0:	add	ip, ip, #77824	; 0x13000
    10d4:	ldr	pc, [ip, #3924]!	; 0xf54

000010d8 <pointer_list_remove_at@plt>:
    10d8:	add	ip, pc, #0, 12
    10dc:	add	ip, ip, #77824	; 0x13000
    10e0:	ldr	pc, [ip, #3916]!	; 0xf4c

000010e4 <memcpy@plt>:
    10e4:	add	ip, pc, #0, 12
    10e8:	add	ip, ip, #77824	; 0x13000
    10ec:	ldr	pc, [ip, #3908]!	; 0xf44

000010f0 <o_strdup@plt>:
    10f0:	add	ip, pc, #0, 12
    10f4:	add	ip, ip, #77824	; 0x13000
    10f8:	ldr	pc, [ip, #3900]!	; 0xf3c

000010fc <o_base64_encode@plt>:
    10fc:	add	ip, pc, #0, 12
    1100:	add	ip, ip, #77824	; 0x13000
    1104:	ldr	pc, [ip, #3892]!	; 0xf34

00001108 <strcasecmp@plt>:
    1108:	add	ip, pc, #0, 12
    110c:	add	ip, ip, #77824	; 0x13000
    1110:	ldr	pc, [ip, #3884]!	; 0xf2c

00001114 <o_strcmp@plt>:
    1114:	add	ip, pc, #0, 12
    1118:	add	ip, ip, #77824	; 0x13000
    111c:	ldr	pc, [ip, #3876]!	; 0xf24

00001120 <trimwhitespace@plt>:
    1120:	add	ip, pc, #0, 12
    1124:	add	ip, ip, #77824	; 0x13000
    1128:	ldr	pc, [ip, #3868]!	; 0xf1c

0000112c <strcpy@plt>:
    112c:	add	ip, pc, #0, 12
    1130:	add	ip, ip, #77824	; 0x13000
    1134:	ldr	pc, [ip, #3860]!	; 0xf14

00001138 <o_strlen@plt>:
    1138:	add	ip, pc, #0, 12
    113c:	add	ip, ip, #77824	; 0x13000
    1140:	ldr	pc, [ip, #3852]!	; 0xf0c

00001144 <o_strcasecmp@plt>:
    1144:	add	ip, pc, #0, 12
    1148:	add	ip, ip, #77824	; 0x13000
    114c:	ldr	pc, [ip, #3844]!	; 0xf04

00001150 <o_realloc@plt>:
    1150:	add	ip, pc, #0, 12
    1154:	add	ip, ip, #77824	; 0x13000
    1158:	ldr	pc, [ip, #3836]!	; 0xefc

0000115c <str_replace@plt>:
    115c:	add	ip, pc, #0, 12
    1160:	add	ip, ip, #77824	; 0x13000
    1164:	ldr	pc, [ip, #3828]!	; 0xef4

00001168 <__gmon_start__@plt>:
    1168:	add	ip, pc, #0, 12
    116c:	add	ip, ip, #77824	; 0x13000
    1170:	ldr	pc, [ip, #3820]!	; 0xeec

00001174 <__ctype_b_loc@plt>:
    1174:	add	ip, pc, #0, 12
    1178:	add	ip, ip, #77824	; 0x13000
    117c:	ldr	pc, [ip, #3812]!	; 0xee4

00001180 <strlen@plt>:
    1180:	add	ip, pc, #0, 12
    1184:	add	ip, ip, #77824	; 0x13000
    1188:	ldr	pc, [ip, #3804]!	; 0xedc

0000118c <strchr@plt>:
    118c:	add	ip, pc, #0, 12
    1190:	add	ip, ip, #77824	; 0x13000
    1194:	ldr	pc, [ip, #3796]!	; 0xed4

00001198 <strncasecmp@plt>:
    1198:	add	ip, pc, #0, 12
    119c:	add	ip, ip, #77824	; 0x13000
    11a0:	ldr	pc, [ip, #3788]!	; 0xecc

000011a4 <snprintf@plt>:
    11a4:	add	ip, pc, #0, 12
    11a8:	add	ip, ip, #77824	; 0x13000
    11ac:	ldr	pc, [ip, #3780]!	; 0xec4

000011b0 <o_malloc@plt>:
    11b0:	add	ip, pc, #0, 12
    11b4:	add	ip, ip, #77824	; 0x13000
    11b8:	ldr	pc, [ip, #3772]!	; 0xebc

000011bc <memset@plt>:
    11bc:	add	ip, pc, #0, 12
    11c0:	add	ip, ip, #77824	; 0x13000
    11c4:	ldr	pc, [ip, #3764]!	; 0xeb4

000011c8 <strncpy@plt>:
    11c8:	add	ip, pc, #0, 12
    11cc:	add	ip, ip, #77824	; 0x13000
    11d0:	ldr	pc, [ip, #3756]!	; 0xeac

000011d4 <pointer_list_size@plt>:
    11d4:	add	ip, pc, #0, 12
    11d8:	add	ip, ip, #77824	; 0x13000
    11dc:	ldr	pc, [ip, #3748]!	; 0xea4

000011e0 <msprintf@plt>:
    11e0:	add	ip, pc, #0, 12
    11e4:	add	ip, ip, #77824	; 0x13000
    11e8:	ldr	pc, [ip, #3740]!	; 0xe9c

000011ec <o_base64url_2_base64@plt>:
    11ec:	add	ip, pc, #0, 12
    11f0:	add	ip, ip, #77824	; 0x13000
    11f4:	ldr	pc, [ip, #3732]!	; 0xe94

000011f8 <strrchr@plt>:
    11f8:	add	ip, pc, #0, 12
    11fc:	add	ip, ip, #77824	; 0x13000
    1200:	ldr	pc, [ip, #3724]!	; 0xe8c

00001204 <o_base64_decode@plt>:
    1204:	add	ip, pc, #0, 12
    1208:	add	ip, ip, #77824	; 0x13000
    120c:	ldr	pc, [ip, #3716]!	; 0xe84

00001210 <vsnprintf@plt>:
    1210:	add	ip, pc, #0, 12
    1214:	add	ip, ip, #77824	; 0x13000
    1218:	ldr	pc, [ip, #3708]!	; 0xe7c

0000121c <o_strncmp@plt>:
    121c:	add	ip, pc, #0, 12
    1220:	add	ip, ip, #77824	; 0x13000
    1224:	ldr	pc, [ip, #3700]!	; 0xe74

00001228 <strncmp@plt>:
    1228:	add	ip, pc, #0, 12
    122c:	add	ip, ip, #77824	; 0x13000
    1230:	ldr	pc, [ip, #3692]!	; 0xe6c

00001234 <o_strchr@plt>:
    1234:	add	ip, pc, #0, 12
    1238:	add	ip, ip, #77824	; 0x13000
    123c:	ldr	pc, [ip, #3684]!	; 0xe64

Disassembly of section .text:

00001240 <o_base64_encode@@Base-0x124>:
    1240:	ldr	r3, [pc, #20]	; 125c <o_strchr@plt+0x28>
    1244:	ldr	r2, [pc, #20]	; 1260 <o_strchr@plt+0x2c>
    1248:	add	r3, pc, r3
    124c:	ldr	r2, [r3, r2]
    1250:	cmp	r2, #0
    1254:	bxeq	lr
    1258:	b	1168 <__gmon_start__@plt>
    125c:			; <UNDEFINED> instruction: 0x00013db0
    1260:	andeq	r0, r0, ip, lsr #1
    1264:	ldr	r0, [pc, #44]	; 1298 <o_strchr@plt+0x64>
    1268:	ldr	r3, [pc, #44]	; 129c <o_strchr@plt+0x68>
    126c:	add	r0, pc, r0
    1270:	add	r3, pc, r3
    1274:	cmp	r3, r0
    1278:	ldr	r3, [pc, #32]	; 12a0 <o_strchr@plt+0x6c>
    127c:	add	r3, pc, r3
    1280:	bxeq	lr
    1284:	ldr	r2, [pc, #24]	; 12a4 <o_strchr@plt+0x70>
    1288:	ldr	r3, [r3, r2]
    128c:	cmp	r3, #0
    1290:	bxeq	lr
    1294:	bx	r3
    1298:	andeq	r3, r1, r0, asr lr
    129c:	andeq	r3, r1, ip, asr #28
    12a0:	andeq	r3, r1, ip, ror sp
    12a4:	andeq	r0, r0, r8, lsr #1
    12a8:	ldr	r0, [pc, #56]	; 12e8 <o_strchr@plt+0xb4>
    12ac:	ldr	r3, [pc, #56]	; 12ec <o_strchr@plt+0xb8>
    12b0:	add	r0, pc, r0
    12b4:	add	r3, pc, r3
    12b8:	sub	r1, r3, r0
    12bc:	ldr	r3, [pc, #44]	; 12f0 <o_strchr@plt+0xbc>
    12c0:	asr	r1, r1, #2
    12c4:	add	r3, pc, r3
    12c8:	add	r1, r1, r1, lsr #31
    12cc:	asrs	r1, r1, #1
    12d0:	bxeq	lr
    12d4:	ldr	r2, [pc, #24]	; 12f4 <o_strchr@plt+0xc0>
    12d8:	ldr	r3, [r3, r2]
    12dc:	cmp	r3, #0
    12e0:	bxeq	lr
    12e4:	bx	r3
    12e8:	andeq	r3, r1, ip, lsl #28
    12ec:	andeq	r3, r1, r8, lsl #28
    12f0:	andeq	r3, r1, r4, lsr sp
    12f4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    12f8:	ldr	r3, [pc, #76]	; 134c <o_strchr@plt+0x118>
    12fc:	ldr	r2, [pc, #76]	; 1350 <o_strchr@plt+0x11c>
    1300:	add	r3, pc, r3
    1304:	add	r2, pc, r2
    1308:	ldrb	r3, [r3]
    130c:	cmp	r3, #0
    1310:	bxne	lr
    1314:	ldr	r3, [pc, #56]	; 1354 <o_strchr@plt+0x120>
    1318:	push	{r4, lr}
    131c:	ldr	r3, [r2, r3]
    1320:	cmp	r3, #0
    1324:	beq	1334 <o_strchr@plt+0x100>
    1328:	ldr	r3, [pc, #40]	; 1358 <o_strchr@plt+0x124>
    132c:	ldr	r0, [pc, r3]
    1330:	bl	10b4 <__cxa_finalize@plt>
    1334:	bl	1264 <o_strchr@plt+0x30>
    1338:	ldr	r3, [pc, #28]	; 135c <o_strchr@plt+0x128>
    133c:	mov	r2, #1
    1340:	add	r3, pc, r3
    1344:	strb	r2, [r3]
    1348:	pop	{r4, pc}
    134c:			; <UNDEFINED> instruction: 0x00013dbc
    1350:	strdeq	r3, [r1], -r4
    1354:	andeq	r0, r0, r4, lsr #1
    1358:	andeq	r3, r1, r0, lsl #27
    135c:	andeq	r3, r1, ip, ror sp
    1360:	b	12a8 <o_strchr@plt+0x74>

00001364 <o_base64_encode@@Base>:
    1364:	sub	sp, sp, #40	; 0x28
    1368:	str	r0, [sp, #32]
    136c:	str	r1, [sp, #28]
    1370:	str	r2, [sp, #24]
    1374:	str	r3, [sp, #20]
    1378:	ldr	r0, [sp, #28]
    137c:	lsl	r0, r0, #2
    1380:	movw	r1, #3
    1384:	udiv	r0, r0, r1
    1388:	add	r0, r0, #4
    138c:	str	r0, [sp, #4]
    1390:	ldr	r0, [sp, #4]
    1394:	movw	r1, #72	; 0x48
    1398:	udiv	r0, r0, r1
    139c:	ldr	r1, [sp, #4]
    13a0:	add	r0, r1, r0
    13a4:	str	r0, [sp, #4]
    13a8:	ldr	r0, [sp, #4]
    13ac:	add	r0, r0, #1
    13b0:	str	r0, [sp, #4]
    13b4:	ldr	r0, [sp, #4]
    13b8:	ldr	r1, [sp, #28]
    13bc:	cmp	r0, r1
    13c0:	bcc	13e4 <o_base64_encode@@Base+0x80>
    13c4:	ldr	r0, [sp, #32]
    13c8:	movw	r1, #0
    13cc:	cmp	r0, r1
    13d0:	beq	13e4 <o_base64_encode@@Base+0x80>
    13d4:	ldr	r0, [sp, #20]
    13d8:	movw	r1, #0
    13dc:	cmp	r0, r1
    13e0:	bne	13f0 <o_base64_encode@@Base+0x8c>
    13e4:	movw	r0, #0
    13e8:	str	r0, [sp, #36]	; 0x24
    13ec:	b	1700 <o_base64_encode@@Base+0x39c>
    13f0:	ldr	r0, [sp, #32]
    13f4:	ldr	r1, [sp, #28]
    13f8:	add	r0, r0, r1
    13fc:	str	r0, [sp, #12]
    1400:	ldr	r0, [sp, #32]
    1404:	str	r0, [sp, #8]
    1408:	ldr	r0, [sp, #24]
    140c:	str	r0, [sp, #16]
    1410:	movw	r0, #0
    1414:	str	r0, [sp]
    1418:	ldr	r1, [sp, #20]
    141c:	str	r0, [r1]
    1420:	ldr	r0, [sp, #12]
    1424:	ldr	r1, [sp, #8]
    1428:	sub	r0, r0, r1
    142c:	cmp	r0, #3
    1430:	blt	1544 <o_base64_encode@@Base+0x1e0>
    1434:	ldr	r0, [sp, #16]
    1438:	movw	r1, #0
    143c:	cmp	r0, r1
    1440:	beq	1504 <o_base64_encode@@Base+0x1a0>
    1444:	ldr	r0, [pc, #716]	; 1718 <o_base64_encode@@Base+0x3b4>
    1448:	add	r0, pc, r0
    144c:	ldr	r1, [sp, #8]
    1450:	ldrb	r1, [r1]
    1454:	asr	r1, r1, #2
    1458:	add	r1, r0, r1
    145c:	ldrb	r1, [r1]
    1460:	ldr	r2, [sp, #16]
    1464:	add	r3, r2, #1
    1468:	str	r3, [sp, #16]
    146c:	strb	r1, [r2]
    1470:	ldr	r1, [sp, #8]
    1474:	ldrb	r1, [r1]
    1478:	and	r1, r1, #3
    147c:	lsl	r1, r1, #4
    1480:	ldr	r2, [sp, #8]
    1484:	ldrb	r2, [r2, #1]
    1488:	asr	r2, r2, #4
    148c:	orr	r1, r1, r2
    1490:	add	r1, r0, r1
    1494:	ldrb	r1, [r1]
    1498:	ldr	r2, [sp, #16]
    149c:	add	r3, r2, #1
    14a0:	str	r3, [sp, #16]
    14a4:	strb	r1, [r2]
    14a8:	ldr	r1, [sp, #8]
    14ac:	ldrb	r1, [r1, #1]
    14b0:	and	r1, r1, #15
    14b4:	lsl	r1, r1, #2
    14b8:	ldr	r2, [sp, #8]
    14bc:	ldrb	r2, [r2, #2]
    14c0:	asr	r2, r2, #6
    14c4:	orr	r1, r1, r2
    14c8:	add	r1, r0, r1
    14cc:	ldrb	r1, [r1]
    14d0:	ldr	r2, [sp, #16]
    14d4:	add	r3, r2, #1
    14d8:	str	r3, [sp, #16]
    14dc:	strb	r1, [r2]
    14e0:	ldr	r1, [sp, #8]
    14e4:	ldrb	r1, [r1, #2]
    14e8:	and	r1, r1, #63	; 0x3f
    14ec:	add	r0, r0, r1
    14f0:	ldrb	r0, [r0]
    14f4:	ldr	r1, [sp, #16]
    14f8:	add	r2, r1, #1
    14fc:	str	r2, [sp, #16]
    1500:	strb	r0, [r1]
    1504:	ldr	r0, [sp, #20]
    1508:	ldr	r1, [r0]
    150c:	add	r1, r1, #4
    1510:	str	r1, [r0]
    1514:	ldr	r0, [sp, #8]
    1518:	add	r0, r0, #3
    151c:	str	r0, [sp, #8]
    1520:	ldr	r0, [sp]
    1524:	add	r0, r0, #4
    1528:	str	r0, [sp]
    152c:	ldr	r0, [sp]
    1530:	cmp	r0, #72	; 0x48
    1534:	blt	1540 <o_base64_encode@@Base+0x1dc>
    1538:	movw	r0, #0
    153c:	str	r0, [sp]
    1540:	b	1420 <o_base64_encode@@Base+0xbc>
    1544:	ldr	r0, [sp, #12]
    1548:	ldr	r1, [sp, #8]
    154c:	sub	r0, r0, r1
    1550:	cmp	r0, #0
    1554:	beq	16dc <o_base64_encode@@Base+0x378>
    1558:	ldr	r0, [sp, #16]
    155c:	movw	r1, #0
    1560:	cmp	r0, r1
    1564:	beq	1594 <o_base64_encode@@Base+0x230>
    1568:	ldr	r0, [pc, #412]	; 170c <o_base64_encode@@Base+0x3a8>
    156c:	add	r0, pc, r0
    1570:	ldr	r1, [sp, #8]
    1574:	ldrb	r1, [r1]
    1578:	asr	r1, r1, #2
    157c:	add	r0, r0, r1
    1580:	ldrb	r0, [r0]
    1584:	ldr	r1, [sp, #16]
    1588:	add	r2, r1, #1
    158c:	str	r2, [sp, #16]
    1590:	strb	r0, [r1]
    1594:	ldr	r0, [sp, #20]
    1598:	ldr	r1, [r0]
    159c:	add	r1, r1, #1
    15a0:	str	r1, [r0]
    15a4:	ldr	r0, [sp, #12]
    15a8:	ldr	r1, [sp, #8]
    15ac:	sub	r0, r0, r1
    15b0:	cmp	r0, #1
    15b4:	bne	1620 <o_base64_encode@@Base+0x2bc>
    15b8:	ldr	r0, [sp, #16]
    15bc:	movw	r1, #0
    15c0:	cmp	r0, r1
    15c4:	beq	160c <o_base64_encode@@Base+0x2a8>
    15c8:	ldr	r0, [pc, #324]	; 1714 <o_base64_encode@@Base+0x3b0>
    15cc:	add	r0, pc, r0
    15d0:	ldr	r1, [sp, #8]
    15d4:	ldrb	r1, [r1]
    15d8:	and	r1, r1, #3
    15dc:	lsl	r1, r1, #4
    15e0:	add	r0, r0, r1
    15e4:	ldrb	r0, [r0]
    15e8:	ldr	r1, [sp, #16]
    15ec:	add	r2, r1, #1
    15f0:	str	r2, [sp, #16]
    15f4:	strb	r0, [r1]
    15f8:	ldr	r0, [sp, #16]
    15fc:	add	r1, r0, #1
    1600:	str	r1, [sp, #16]
    1604:	movw	r1, #61	; 0x3d
    1608:	strb	r1, [r0]
    160c:	ldr	r0, [sp, #20]
    1610:	ldr	r1, [r0]
    1614:	add	r1, r1, #2
    1618:	str	r1, [r0]
    161c:	b	16a8 <o_base64_encode@@Base+0x344>
    1620:	ldr	r0, [sp, #16]
    1624:	movw	r1, #0
    1628:	cmp	r0, r1
    162c:	beq	1698 <o_base64_encode@@Base+0x334>
    1630:	ldr	r0, [pc, #216]	; 1710 <o_base64_encode@@Base+0x3ac>
    1634:	add	r0, pc, r0
    1638:	ldr	r1, [sp, #8]
    163c:	ldrb	r1, [r1]
    1640:	and	r1, r1, #3
    1644:	lsl	r1, r1, #4
    1648:	ldr	r2, [sp, #8]
    164c:	ldrb	r2, [r2, #1]
    1650:	asr	r2, r2, #4
    1654:	orr	r1, r1, r2
    1658:	add	r1, r0, r1
    165c:	ldrb	r1, [r1]
    1660:	ldr	r2, [sp, #16]
    1664:	add	r3, r2, #1
    1668:	str	r3, [sp, #16]
    166c:	strb	r1, [r2]
    1670:	ldr	r1, [sp, #8]
    1674:	ldrb	r1, [r1, #1]
    1678:	and	r1, r1, #15
    167c:	lsl	r1, r1, #2
    1680:	add	r0, r0, r1
    1684:	ldrb	r0, [r0]
    1688:	ldr	r1, [sp, #16]
    168c:	add	r2, r1, #1
    1690:	str	r2, [sp, #16]
    1694:	strb	r0, [r1]
    1698:	ldr	r0, [sp, #20]
    169c:	ldr	r1, [r0]
    16a0:	add	r1, r1, #2
    16a4:	str	r1, [r0]
    16a8:	ldr	r0, [sp, #16]
    16ac:	movw	r1, #0
    16b0:	cmp	r0, r1
    16b4:	beq	16cc <o_base64_encode@@Base+0x368>
    16b8:	ldr	r0, [sp, #16]
    16bc:	add	r1, r0, #1
    16c0:	str	r1, [sp, #16]
    16c4:	movw	r1, #61	; 0x3d
    16c8:	strb	r1, [r0]
    16cc:	ldr	r0, [sp, #20]
    16d0:	ldr	r1, [r0]
    16d4:	add	r1, r1, #1
    16d8:	str	r1, [r0]
    16dc:	ldr	r0, [sp, #16]
    16e0:	movw	r1, #0
    16e4:	cmp	r0, r1
    16e8:	beq	16f8 <o_base64_encode@@Base+0x394>
    16ec:	ldr	r0, [sp, #16]
    16f0:	movw	r1, #0
    16f4:	strb	r1, [r0]
    16f8:	movw	r0, #1
    16fc:	str	r0, [sp, #36]	; 0x24
    1700:	ldr	r0, [sp, #36]	; 0x24
    1704:	add	sp, sp, #40	; 0x28
    1708:	bx	lr
    170c:	andeq	r2, r0, r8, lsr #23
    1710:	andeq	r2, r0, r0, ror #21
    1714:	andeq	r2, r0, r8, asr #22
    1718:	andeq	r2, r0, ip, asr #25

0000171c <o_base64_decode@@Base>:
    171c:	push	{r4, r5, fp, lr}
    1720:	add	fp, sp, #8
    1724:	sub	sp, sp, #304	; 0x130
    1728:	str	r0, [fp, #-16]
    172c:	str	r1, [fp, #-20]	; 0xffffffec
    1730:	str	r2, [fp, #-24]	; 0xffffffe8
    1734:	str	r3, [fp, #-28]	; 0xffffffe4
    1738:	ldr	r0, [fp, #-24]	; 0xffffffe8
    173c:	str	r0, [sp, #24]
    1740:	movw	r0, #0
    1744:	str	r0, [sp, #4]
    1748:	ldr	r1, [fp, #-16]
    174c:	cmp	r1, r0
    1750:	beq	1770 <o_base64_decode@@Base+0x54>
    1754:	ldr	r0, [fp, #-20]	; 0xffffffec
    1758:	cmp	r0, #0
    175c:	beq	1770 <o_base64_decode@@Base+0x54>
    1760:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1764:	movw	r1, #0
    1768:	cmp	r0, r1
    176c:	bne	177c <o_base64_decode@@Base+0x60>
    1770:	movw	r0, #0
    1774:	str	r0, [fp, #-12]
    1778:	b	1af4 <o_base64_decode@@Base+0x3d8>
    177c:	add	r0, sp, #28
    1780:	movw	r1, #128	; 0x80
    1784:	and	r1, r1, #255	; 0xff
    1788:	movw	r2, #256	; 0x100
    178c:	bl	11bc <memset@plt>
    1790:	movw	r0, #0
    1794:	str	r0, [sp, #12]
    1798:	ldr	r0, [sp, #12]
    179c:	cmp	r0, #64	; 0x40
    17a0:	bcs	17d8 <o_base64_decode@@Base+0xbc>
    17a4:	ldr	r0, [pc, #856]	; 1b04 <o_base64_decode@@Base+0x3e8>
    17a8:	add	r0, pc, r0
    17ac:	ldr	r1, [sp, #12]
    17b0:	ldr	r2, [sp, #12]
    17b4:	add	r0, r0, r2
    17b8:	ldrb	r0, [r0]
    17bc:	add	r2, sp, #28
    17c0:	add	r0, r2, r0
    17c4:	strb	r1, [r0]
    17c8:	ldr	r0, [sp, #12]
    17cc:	add	r0, r0, #1
    17d0:	str	r0, [sp, #12]
    17d4:	b	1798 <o_base64_decode@@Base+0x7c>
    17d8:	movw	r0, #0
    17dc:	strb	r0, [sp, #89]	; 0x59
    17e0:	movw	r0, #0
    17e4:	str	r0, [sp, #8]
    17e8:	str	r0, [sp, #12]
    17ec:	ldr	r0, [sp, #12]
    17f0:	ldr	r1, [fp, #-20]	; 0xffffffec
    17f4:	cmp	r0, r1
    17f8:	bcs	1840 <o_base64_decode@@Base+0x124>
    17fc:	ldr	r0, [fp, #-16]
    1800:	ldr	r1, [sp, #12]
    1804:	add	r0, r0, r1
    1808:	ldrb	r0, [r0]
    180c:	add	r1, sp, #28
    1810:	add	r0, r1, r0
    1814:	ldrb	r0, [r0]
    1818:	cmp	r0, #128	; 0x80
    181c:	beq	182c <o_base64_decode@@Base+0x110>
    1820:	ldr	r0, [sp, #8]
    1824:	add	r0, r0, #1
    1828:	str	r0, [sp, #8]
    182c:	b	1830 <o_base64_decode@@Base+0x114>
    1830:	ldr	r0, [sp, #12]
    1834:	add	r0, r0, #1
    1838:	str	r0, [sp, #12]
    183c:	b	17ec <o_base64_decode@@Base+0xd0>
    1840:	ldr	r0, [sp, #8]
    1844:	cmp	r0, #0
    1848:	beq	185c <o_base64_decode@@Base+0x140>
    184c:	ldr	r0, [sp, #8]
    1850:	and	r0, r0, #3
    1854:	cmp	r0, #0
    1858:	beq	1868 <o_base64_decode@@Base+0x14c>
    185c:	movw	r0, #0
    1860:	str	r0, [fp, #-12]
    1864:	b	1af4 <o_base64_decode@@Base+0x3d8>
    1868:	movw	r0, #0
    186c:	str	r0, [sp, #8]
    1870:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1874:	str	r0, [r1]
    1878:	str	r0, [sp, #12]
    187c:	ldr	r0, [sp, #12]
    1880:	ldr	r1, [fp, #-20]	; 0xffffffec
    1884:	cmp	r0, r1
    1888:	bcs	1aec <o_base64_decode@@Base+0x3d0>
    188c:	ldr	r0, [pc, #620]	; 1b00 <o_base64_decode@@Base+0x3e4>
    1890:	add	r0, pc, r0
    1894:	ldr	r1, [fp, #-16]
    1898:	ldr	r2, [sp, #12]
    189c:	add	r1, r1, r2
    18a0:	ldrb	r1, [r1]
    18a4:	bl	1234 <o_strchr@plt>
    18a8:	movw	r1, #0
    18ac:	cmp	r0, r1
    18b0:	bne	1920 <o_base64_decode@@Base+0x204>
    18b4:	ldr	r0, [fp, #-16]
    18b8:	ldr	r1, [sp, #12]
    18bc:	add	r0, r0, r1
    18c0:	ldrb	r0, [r0]
    18c4:	cmp	r0, #61	; 0x3d
    18c8:	beq	1920 <o_base64_decode@@Base+0x204>
    18cc:	ldr	r0, [fp, #-16]
    18d0:	ldr	r1, [sp, #12]
    18d4:	add	r0, r0, r1
    18d8:	ldrb	r0, [r0]
    18dc:	cmp	r0, #10
    18e0:	beq	1920 <o_base64_decode@@Base+0x204>
    18e4:	ldr	r0, [fp, #-16]
    18e8:	ldr	r1, [sp, #12]
    18ec:	add	r0, r0, r1
    18f0:	ldrb	r0, [r0]
    18f4:	cmp	r0, #9
    18f8:	beq	1920 <o_base64_decode@@Base+0x204>
    18fc:	ldr	r0, [fp, #-16]
    1900:	ldr	r1, [sp, #12]
    1904:	add	r0, r0, r1
    1908:	ldrb	r0, [r0]
    190c:	cmp	r0, #32
    1910:	beq	1920 <o_base64_decode@@Base+0x204>
    1914:	movw	r0, #0
    1918:	str	r0, [fp, #-12]
    191c:	b	1af4 <o_base64_decode@@Base+0x3d8>
    1920:	ldr	r0, [fp, #-16]
    1924:	ldr	r1, [sp, #12]
    1928:	add	r0, r0, r1
    192c:	ldrb	r0, [r0]
    1930:	add	r1, sp, #28
    1934:	add	r0, r1, r0
    1938:	ldrb	r0, [r0]
    193c:	strb	r0, [sp, #19]
    1940:	ldrb	r0, [sp, #19]
    1944:	cmp	r0, #128	; 0x80
    1948:	bne	1950 <o_base64_decode@@Base+0x234>
    194c:	b	1adc <o_base64_decode@@Base+0x3c0>
    1950:	ldr	r0, [fp, #-16]
    1954:	ldr	r1, [sp, #12]
    1958:	add	r0, r0, r1
    195c:	ldrb	r0, [r0]
    1960:	cmp	r0, #61	; 0x3d
    1964:	bne	1974 <o_base64_decode@@Base+0x258>
    1968:	ldr	r0, [sp, #4]
    196c:	add	r0, r0, #1
    1970:	str	r0, [sp, #4]
    1974:	ldrb	r0, [sp, #19]
    1978:	ldr	r1, [sp, #8]
    197c:	add	r2, sp, #20
    1980:	add	r1, r2, r1
    1984:	strb	r0, [r1]
    1988:	ldr	r0, [sp, #8]
    198c:	add	r0, r0, #1
    1990:	str	r0, [sp, #8]
    1994:	ldr	r0, [sp, #8]
    1998:	cmp	r0, #4
    199c:	bne	1ad8 <o_base64_decode@@Base+0x3bc>
    19a0:	ldr	r0, [sp, #24]
    19a4:	movw	r1, #0
    19a8:	cmp	r0, r1
    19ac:	beq	1a18 <o_base64_decode@@Base+0x2fc>
    19b0:	ldrb	r0, [sp, #20]
    19b4:	lsl	r0, r0, #2
    19b8:	ldrb	r1, [sp, #21]
    19bc:	asr	r1, r1, #4
    19c0:	orr	r0, r0, r1
    19c4:	ldr	r1, [sp, #24]
    19c8:	add	r2, r1, #1
    19cc:	str	r2, [sp, #24]
    19d0:	strb	r0, [r1]
    19d4:	ldrb	r0, [sp, #21]
    19d8:	lsl	r0, r0, #4
    19dc:	ldrb	r1, [sp, #22]
    19e0:	asr	r1, r1, #2
    19e4:	orr	r0, r0, r1
    19e8:	ldr	r1, [sp, #24]
    19ec:	add	r2, r1, #1
    19f0:	str	r2, [sp, #24]
    19f4:	strb	r0, [r1]
    19f8:	ldrb	r0, [sp, #22]
    19fc:	lsl	r0, r0, #6
    1a00:	ldrb	r1, [sp, #23]
    1a04:	orr	r0, r0, r1
    1a08:	ldr	r1, [sp, #24]
    1a0c:	add	r2, r1, #1
    1a10:	str	r2, [sp, #24]
    1a14:	strb	r0, [r1]
    1a18:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1a1c:	ldr	r1, [r0]
    1a20:	add	r1, r1, #3
    1a24:	str	r1, [r0]
    1a28:	movw	r0, #0
    1a2c:	str	r0, [sp, #8]
    1a30:	ldr	r0, [sp, #4]
    1a34:	cmp	r0, #0
    1a38:	beq	1ad4 <o_base64_decode@@Base+0x3b8>
    1a3c:	ldr	r0, [sp, #4]
    1a40:	cmp	r0, #1
    1a44:	bne	1a80 <o_base64_decode@@Base+0x364>
    1a48:	ldr	r0, [sp, #24]
    1a4c:	movw	r1, #0
    1a50:	cmp	r0, r1
    1a54:	beq	1a68 <o_base64_decode@@Base+0x34c>
    1a58:	ldr	r0, [sp, #24]
    1a5c:	mvn	r1, #0
    1a60:	add	r0, r0, r1
    1a64:	str	r0, [sp, #24]
    1a68:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1a6c:	ldr	r1, [r0]
    1a70:	mvn	r2, #0
    1a74:	add	r1, r1, r2
    1a78:	str	r1, [r0]
    1a7c:	b	1ad0 <o_base64_decode@@Base+0x3b4>
    1a80:	ldr	r0, [sp, #4]
    1a84:	cmp	r0, #2
    1a88:	bne	1ac0 <o_base64_decode@@Base+0x3a4>
    1a8c:	ldr	r0, [sp, #24]
    1a90:	movw	r1, #0
    1a94:	cmp	r0, r1
    1a98:	beq	1aac <o_base64_decode@@Base+0x390>
    1a9c:	ldr	r0, [sp, #24]
    1aa0:	mvn	r1, #1
    1aa4:	add	r0, r0, r1
    1aa8:	str	r0, [sp, #24]
    1aac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1ab0:	ldr	r1, [r0]
    1ab4:	sub	r1, r1, #2
    1ab8:	str	r1, [r0]
    1abc:	b	1acc <o_base64_decode@@Base+0x3b0>
    1ac0:	movw	r0, #0
    1ac4:	str	r0, [fp, #-12]
    1ac8:	b	1af4 <o_base64_decode@@Base+0x3d8>
    1acc:	b	1ad0 <o_base64_decode@@Base+0x3b4>
    1ad0:	b	1aec <o_base64_decode@@Base+0x3d0>
    1ad4:	b	1ad8 <o_base64_decode@@Base+0x3bc>
    1ad8:	b	1adc <o_base64_decode@@Base+0x3c0>
    1adc:	ldr	r0, [sp, #12]
    1ae0:	add	r0, r0, #1
    1ae4:	str	r0, [sp, #12]
    1ae8:	b	187c <o_base64_decode@@Base+0x160>
    1aec:	movw	r0, #1
    1af0:	str	r0, [fp, #-12]
    1af4:	ldr	r0, [fp, #-12]
    1af8:	sub	sp, fp, #8
    1afc:	pop	{r4, r5, fp, pc}
    1b00:	andeq	r2, r0, r4, lsl #17
    1b04:	andeq	r2, r0, ip, ror #18

00001b08 <o_base64url_encode@@Base>:
    1b08:	push	{fp, lr}
    1b0c:	mov	fp, sp
    1b10:	sub	sp, sp, #32
    1b14:	str	r0, [fp, #-4]
    1b18:	str	r1, [fp, #-8]
    1b1c:	str	r2, [fp, #-12]
    1b20:	str	r3, [sp, #16]
    1b24:	movw	r0, #0
    1b28:	str	r0, [sp, #12]
    1b2c:	ldr	r1, [fp, #-12]
    1b30:	cmp	r1, r0
    1b34:	beq	1cb8 <o_base64url_encode@@Base+0x1b0>
    1b38:	ldr	r0, [fp, #-4]
    1b3c:	ldr	r1, [fp, #-8]
    1b40:	ldr	r2, [fp, #-12]
    1b44:	ldr	r3, [sp, #16]
    1b48:	bl	10fc <o_base64_encode@plt>
    1b4c:	str	r0, [sp, #12]
    1b50:	ldr	r0, [sp, #12]
    1b54:	cmp	r0, #0
    1b58:	beq	1cb4 <o_base64url_encode@@Base+0x1ac>
    1b5c:	ldr	r0, [sp, #16]
    1b60:	ldr	r0, [r0]
    1b64:	cmp	r0, #2
    1b68:	bcc	1bbc <o_base64url_encode@@Base+0xb4>
    1b6c:	ldr	r0, [fp, #-12]
    1b70:	ldr	r1, [sp, #16]
    1b74:	ldr	r1, [r1]
    1b78:	sub	r1, r1, #2
    1b7c:	add	r0, r0, r1
    1b80:	ldrb	r0, [r0]
    1b84:	cmp	r0, #61	; 0x3d
    1b88:	bne	1bbc <o_base64url_encode@@Base+0xb4>
    1b8c:	ldr	r0, [fp, #-12]
    1b90:	ldr	r1, [sp, #16]
    1b94:	ldr	r1, [r1]
    1b98:	sub	r1, r1, #2
    1b9c:	add	r0, r0, r1
    1ba0:	movw	r1, #0
    1ba4:	strb	r1, [r0]
    1ba8:	ldr	r0, [sp, #16]
    1bac:	ldr	r1, [r0]
    1bb0:	sub	r1, r1, #2
    1bb4:	str	r1, [r0]
    1bb8:	b	1c20 <o_base64url_encode@@Base+0x118>
    1bbc:	ldr	r0, [sp, #16]
    1bc0:	ldr	r0, [r0]
    1bc4:	cmp	r0, #0
    1bc8:	beq	1c1c <o_base64url_encode@@Base+0x114>
    1bcc:	ldr	r0, [fp, #-12]
    1bd0:	ldr	r1, [sp, #16]
    1bd4:	ldr	r1, [r1]
    1bd8:	sub	r1, r1, #1
    1bdc:	add	r0, r0, r1
    1be0:	ldrb	r0, [r0]
    1be4:	cmp	r0, #61	; 0x3d
    1be8:	bne	1c1c <o_base64url_encode@@Base+0x114>
    1bec:	ldr	r0, [fp, #-12]
    1bf0:	ldr	r1, [sp, #16]
    1bf4:	ldr	r1, [r1]
    1bf8:	sub	r1, r1, #1
    1bfc:	add	r0, r0, r1
    1c00:	movw	r1, #0
    1c04:	strb	r1, [r0]
    1c08:	ldr	r0, [sp, #16]
    1c0c:	ldr	r1, [r0]
    1c10:	mvn	r2, #0
    1c14:	add	r1, r1, r2
    1c18:	str	r1, [r0]
    1c1c:	b	1c20 <o_base64url_encode@@Base+0x118>
    1c20:	movw	r0, #0
    1c24:	str	r0, [sp, #8]
    1c28:	ldr	r0, [sp, #8]
    1c2c:	ldr	r1, [sp, #16]
    1c30:	ldr	r1, [r1]
    1c34:	cmp	r0, r1
    1c38:	bcs	1cb0 <o_base64url_encode@@Base+0x1a8>
    1c3c:	ldr	r0, [fp, #-12]
    1c40:	ldr	r1, [sp, #8]
    1c44:	add	r0, r0, r1
    1c48:	ldrb	r0, [r0]
    1c4c:	cmp	r0, #43	; 0x2b
    1c50:	bne	1c6c <o_base64url_encode@@Base+0x164>
    1c54:	ldr	r0, [fp, #-12]
    1c58:	ldr	r1, [sp, #8]
    1c5c:	add	r0, r0, r1
    1c60:	movw	r1, #45	; 0x2d
    1c64:	strb	r1, [r0]
    1c68:	b	1c9c <o_base64url_encode@@Base+0x194>
    1c6c:	ldr	r0, [fp, #-12]
    1c70:	ldr	r1, [sp, #8]
    1c74:	add	r0, r0, r1
    1c78:	ldrb	r0, [r0]
    1c7c:	cmp	r0, #47	; 0x2f
    1c80:	bne	1c98 <o_base64url_encode@@Base+0x190>
    1c84:	ldr	r0, [fp, #-12]
    1c88:	ldr	r1, [sp, #8]
    1c8c:	add	r0, r0, r1
    1c90:	movw	r1, #95	; 0x5f
    1c94:	strb	r1, [r0]
    1c98:	b	1c9c <o_base64url_encode@@Base+0x194>
    1c9c:	b	1ca0 <o_base64url_encode@@Base+0x198>
    1ca0:	ldr	r0, [sp, #8]
    1ca4:	add	r0, r0, #1
    1ca8:	str	r0, [sp, #8]
    1cac:	b	1c28 <o_base64url_encode@@Base+0x120>
    1cb0:	b	1cb4 <o_base64url_encode@@Base+0x1ac>
    1cb4:	b	1d40 <o_base64url_encode@@Base+0x238>
    1cb8:	ldr	r0, [fp, #-8]
    1cbc:	cmp	r0, #0
    1cc0:	beq	1d3c <o_base64url_encode@@Base+0x234>
    1cc4:	ldr	r0, [sp, #16]
    1cc8:	movw	r1, #0
    1ccc:	cmp	r0, r1
    1cd0:	beq	1d3c <o_base64url_encode@@Base+0x234>
    1cd4:	ldr	r0, [fp, #-8]
    1cd8:	vmov	s0, r0
    1cdc:	vcvt.f64.u32	d16, s0
    1ce0:	vmov.f64	d17, #16	; 0x40800000  4.0
    1ce4:	vmul.f64	d16, d17, d16
    1ce8:	vmov.f64	d17, #8	; 0x40400000  3.0
    1cec:	vdiv.f64	d16, d16, d17
    1cf0:	vstr	d16, [sp]
    1cf4:	vldr	d16, [sp]
    1cf8:	vldr	d17, [sp]
    1cfc:	vrintm.f64	d17, d17
    1d00:	vcmp.f64	d16, d17
    1d04:	vmrs	APSR_nzcv, fpscr
    1d08:	beq	1d20 <o_base64url_encode@@Base+0x218>
    1d0c:	vldr	d16, [sp]
    1d10:	vrintm.f64	d16, d16
    1d14:	vmov.f64	d17, #112	; 0x3f800000  1.0
    1d18:	vadd.f64	d16, d16, d17
    1d1c:	vstr	d16, [sp]
    1d20:	vldr	d16, [sp]
    1d24:	vcvt.u32.f64	s0, d16
    1d28:	vmov	r0, s0
    1d2c:	ldr	r1, [sp, #16]
    1d30:	str	r0, [r1]
    1d34:	movw	r0, #1
    1d38:	str	r0, [sp, #12]
    1d3c:	b	1d40 <o_base64url_encode@@Base+0x238>
    1d40:	ldr	r0, [sp, #12]
    1d44:	mov	sp, fp
    1d48:	pop	{fp, pc}

00001d4c <o_base64url_decode@@Base>:
    1d4c:	push	{fp, lr}
    1d50:	mov	fp, sp
    1d54:	sub	sp, sp, #32
    1d58:	str	r0, [fp, #-4]
    1d5c:	str	r1, [fp, #-8]
    1d60:	str	r2, [fp, #-12]
    1d64:	str	r3, [sp, #16]
    1d68:	movw	r0, #0
    1d6c:	str	r0, [sp, #12]
    1d70:	ldr	r1, [fp, #-4]
    1d74:	cmp	r1, r0
    1d78:	beq	1df4 <o_base64url_decode@@Base+0xa8>
    1d7c:	ldr	r0, [fp, #-8]
    1d80:	add	r0, r0, #3
    1d84:	bl	11b0 <o_malloc@plt>
    1d88:	str	r0, [sp, #4]
    1d8c:	ldr	r0, [sp, #4]
    1d90:	movw	r1, #0
    1d94:	cmp	r0, r1
    1d98:	beq	1de8 <o_base64url_decode@@Base+0x9c>
    1d9c:	ldr	r0, [fp, #-4]
    1da0:	ldr	r1, [fp, #-8]
    1da4:	ldr	r2, [sp, #4]
    1da8:	add	r3, sp, #8
    1dac:	bl	11ec <o_base64url_2_base64@plt>
    1db0:	cmp	r0, #0
    1db4:	beq	1dd4 <o_base64url_decode@@Base+0x88>
    1db8:	ldr	r0, [sp, #4]
    1dbc:	ldr	r1, [sp, #8]
    1dc0:	ldr	r2, [fp, #-12]
    1dc4:	ldr	r3, [sp, #16]
    1dc8:	bl	1204 <o_base64_decode@plt>
    1dcc:	str	r0, [sp, #12]
    1dd0:	b	1ddc <o_base64url_decode@@Base+0x90>
    1dd4:	movw	r0, #1
    1dd8:	str	r0, [sp, #12]
    1ddc:	ldr	r0, [sp, #4]
    1de0:	bl	10cc <o_free@plt>
    1de4:	b	1df0 <o_base64url_decode@@Base+0xa4>
    1de8:	movw	r0, #0
    1dec:	str	r0, [sp, #12]
    1df0:	b	1df4 <o_base64url_decode@@Base+0xa8>
    1df4:	ldr	r0, [sp, #12]
    1df8:	mov	sp, fp
    1dfc:	pop	{fp, pc}

00001e00 <o_base64url_2_base64@@Base>:
    1e00:	push	{fp, lr}
    1e04:	mov	fp, sp
    1e08:	sub	sp, sp, #24
    1e0c:	str	r0, [fp, #-4]
    1e10:	str	r1, [fp, #-8]
    1e14:	str	r2, [sp, #12]
    1e18:	str	r3, [sp, #8]
    1e1c:	movw	r0, #0
    1e20:	str	r0, [sp, #4]
    1e24:	ldr	r1, [fp, #-4]
    1e28:	cmp	r1, r0
    1e2c:	beq	1f64 <o_base64url_2_base64@@Base+0x164>
    1e30:	ldr	r0, [sp, #12]
    1e34:	ldr	r1, [fp, #-4]
    1e38:	ldr	r2, [fp, #-8]
    1e3c:	bl	10e4 <memcpy@plt>
    1e40:	ldr	r0, [fp, #-8]
    1e44:	ldr	r1, [sp, #8]
    1e48:	str	r0, [r1]
    1e4c:	movw	r0, #0
    1e50:	str	r0, [sp]
    1e54:	ldr	r0, [sp]
    1e58:	ldr	r1, [fp, #-8]
    1e5c:	cmp	r0, r1
    1e60:	bcs	1ed8 <o_base64url_2_base64@@Base+0xd8>
    1e64:	ldr	r0, [sp, #12]
    1e68:	ldr	r1, [sp]
    1e6c:	add	r0, r0, r1
    1e70:	ldrb	r0, [r0]
    1e74:	cmp	r0, #45	; 0x2d
    1e78:	bne	1e94 <o_base64url_2_base64@@Base+0x94>
    1e7c:	ldr	r0, [sp, #12]
    1e80:	ldr	r1, [sp]
    1e84:	add	r0, r0, r1
    1e88:	movw	r1, #43	; 0x2b
    1e8c:	strb	r1, [r0]
    1e90:	b	1ec4 <o_base64url_2_base64@@Base+0xc4>
    1e94:	ldr	r0, [sp, #12]
    1e98:	ldr	r1, [sp]
    1e9c:	add	r0, r0, r1
    1ea0:	ldrb	r0, [r0]
    1ea4:	cmp	r0, #95	; 0x5f
    1ea8:	bne	1ec0 <o_base64url_2_base64@@Base+0xc0>
    1eac:	ldr	r0, [sp, #12]
    1eb0:	ldr	r1, [sp]
    1eb4:	add	r0, r0, r1
    1eb8:	movw	r1, #47	; 0x2f
    1ebc:	strb	r1, [r0]
    1ec0:	b	1ec4 <o_base64url_2_base64@@Base+0xc4>
    1ec4:	b	1ec8 <o_base64url_2_base64@@Base+0xc8>
    1ec8:	ldr	r0, [sp]
    1ecc:	add	r0, r0, #1
    1ed0:	str	r0, [sp]
    1ed4:	b	1e54 <o_base64url_2_base64@@Base+0x54>
    1ed8:	ldr	r0, [fp, #-8]
    1edc:	and	r0, r0, #3
    1ee0:	cmp	r0, #2
    1ee4:	bne	1f24 <o_base64url_2_base64@@Base+0x124>
    1ee8:	ldr	r0, [sp, #12]
    1eec:	ldr	r1, [fp, #-8]
    1ef0:	add	r0, r0, r1
    1ef4:	movw	r1, #61	; 0x3d
    1ef8:	strb	r1, [r0]
    1efc:	ldr	r0, [sp, #12]
    1f00:	ldr	r2, [fp, #-8]
    1f04:	add	r2, r2, #1
    1f08:	add	r0, r0, r2
    1f0c:	strb	r1, [r0]
    1f10:	ldr	r0, [sp, #8]
    1f14:	ldr	r1, [r0]
    1f18:	add	r1, r1, #2
    1f1c:	str	r1, [r0]
    1f20:	b	1f5c <o_base64url_2_base64@@Base+0x15c>
    1f24:	ldr	r0, [fp, #-8]
    1f28:	and	r0, r0, #3
    1f2c:	cmp	r0, #3
    1f30:	bne	1f58 <o_base64url_2_base64@@Base+0x158>
    1f34:	ldr	r0, [sp, #12]
    1f38:	ldr	r1, [fp, #-8]
    1f3c:	add	r0, r0, r1
    1f40:	movw	r1, #61	; 0x3d
    1f44:	strb	r1, [r0]
    1f48:	ldr	r0, [sp, #8]
    1f4c:	ldr	r1, [r0]
    1f50:	add	r1, r1, #1
    1f54:	str	r1, [r0]
    1f58:	b	1f5c <o_base64url_2_base64@@Base+0x15c>
    1f5c:	movw	r0, #1
    1f60:	str	r0, [sp, #4]
    1f64:	ldr	r0, [sp, #4]
    1f68:	mov	sp, fp
    1f6c:	pop	{fp, pc}

00001f70 <o_base64_2_base64url@@Base>:
    1f70:	push	{fp, lr}
    1f74:	mov	fp, sp
    1f78:	sub	sp, sp, #24
    1f7c:	str	r0, [fp, #-4]
    1f80:	str	r1, [fp, #-8]
    1f84:	str	r2, [sp, #12]
    1f88:	str	r3, [sp, #8]
    1f8c:	movw	r0, #0
    1f90:	str	r0, [sp, #4]
    1f94:	ldr	r1, [fp, #-4]
    1f98:	cmp	r1, r0
    1f9c:	beq	208c <o_base64_2_base64url@@Base+0x11c>
    1fa0:	ldr	r0, [sp, #12]
    1fa4:	ldr	r1, [fp, #-4]
    1fa8:	ldr	r2, [fp, #-8]
    1fac:	bl	10e4 <memcpy@plt>
    1fb0:	ldr	r0, [fp, #-8]
    1fb4:	ldr	r1, [sp, #8]
    1fb8:	str	r0, [r1]
    1fbc:	movw	r0, #0
    1fc0:	str	r0, [sp]
    1fc4:	ldr	r0, [sp]
    1fc8:	ldr	r1, [fp, #-8]
    1fcc:	cmp	r0, r1
    1fd0:	bcs	2048 <o_base64_2_base64url@@Base+0xd8>
    1fd4:	ldr	r0, [sp, #12]
    1fd8:	ldr	r1, [sp]
    1fdc:	add	r0, r0, r1
    1fe0:	ldrb	r0, [r0]
    1fe4:	cmp	r0, #43	; 0x2b
    1fe8:	bne	2004 <o_base64_2_base64url@@Base+0x94>
    1fec:	ldr	r0, [sp, #12]
    1ff0:	ldr	r1, [sp]
    1ff4:	add	r0, r0, r1
    1ff8:	movw	r1, #45	; 0x2d
    1ffc:	strb	r1, [r0]
    2000:	b	2034 <o_base64_2_base64url@@Base+0xc4>
    2004:	ldr	r0, [sp, #12]
    2008:	ldr	r1, [sp]
    200c:	add	r0, r0, r1
    2010:	ldrb	r0, [r0]
    2014:	cmp	r0, #47	; 0x2f
    2018:	bne	2030 <o_base64_2_base64url@@Base+0xc0>
    201c:	ldr	r0, [sp, #12]
    2020:	ldr	r1, [sp]
    2024:	add	r0, r0, r1
    2028:	movw	r1, #95	; 0x5f
    202c:	strb	r1, [r0]
    2030:	b	2034 <o_base64_2_base64url@@Base+0xc4>
    2034:	b	2038 <o_base64_2_base64url@@Base+0xc8>
    2038:	ldr	r0, [sp]
    203c:	add	r0, r0, #1
    2040:	str	r0, [sp]
    2044:	b	1fc4 <o_base64_2_base64url@@Base+0x54>
    2048:	b	204c <o_base64_2_base64url@@Base+0xdc>
    204c:	ldr	r0, [sp, #12]
    2050:	ldr	r1, [sp, #8]
    2054:	ldr	r1, [r1]
    2058:	sub	r1, r1, #1
    205c:	add	r0, r0, r1
    2060:	ldrb	r0, [r0]
    2064:	cmp	r0, #61	; 0x3d
    2068:	bne	2084 <o_base64_2_base64url@@Base+0x114>
    206c:	ldr	r0, [sp, #8]
    2070:	ldr	r1, [r0]
    2074:	mvn	r2, #0
    2078:	add	r1, r1, r2
    207c:	str	r1, [r0]
    2080:	b	204c <o_base64_2_base64url@@Base+0xdc>
    2084:	movw	r0, #1
    2088:	str	r0, [sp, #4]
    208c:	ldr	r0, [sp, #4]
    2090:	mov	sp, fp
    2094:	pop	{fp, pc}

00002098 <o_malloc@@Base>:
    2098:	push	{fp, lr}
    209c:	mov	fp, sp
    20a0:	sub	sp, sp, #16
    20a4:	str	r0, [sp, #8]
    20a8:	ldr	r0, [sp, #8]
    20ac:	cmp	r0, #0
    20b0:	bne	20c0 <o_malloc@@Base+0x28>
    20b4:	movw	r0, #0
    20b8:	str	r0, [fp, #-4]
    20bc:	b	20e4 <o_malloc@@Base+0x4c>
    20c0:	ldr	r0, [pc, #40]	; 20f0 <o_malloc@@Base+0x58>
    20c4:	add	r0, pc, r0
    20c8:	ldr	r0, [r0]
    20cc:	ldr	r1, [sp, #8]
    20d0:	str	r0, [sp, #4]
    20d4:	mov	r0, r1
    20d8:	ldr	r1, [sp, #4]
    20dc:	blx	r1
    20e0:	str	r0, [fp, #-4]
    20e4:	ldr	r0, [fp, #-4]
    20e8:	mov	sp, fp
    20ec:	pop	{fp, pc}
    20f0:	andeq	r2, r1, ip, ror #31

000020f4 <o_realloc@@Base>:
    20f4:	push	{fp, lr}
    20f8:	mov	fp, sp
    20fc:	sub	sp, sp, #16
    2100:	str	r0, [sp, #8]
    2104:	str	r1, [sp, #4]
    2108:	ldr	r0, [sp, #4]
    210c:	cmp	r0, #0
    2110:	bne	2120 <o_realloc@@Base+0x2c>
    2114:	movw	r0, #0
    2118:	str	r0, [fp, #-4]
    211c:	b	214c <o_realloc@@Base+0x58>
    2120:	ldr	r0, [pc, #48]	; 2158 <o_realloc@@Base+0x64>
    2124:	add	r0, pc, r0
    2128:	ldr	r0, [r0]
    212c:	ldr	r1, [sp, #8]
    2130:	ldr	r2, [sp, #4]
    2134:	str	r0, [sp]
    2138:	mov	r0, r1
    213c:	mov	r1, r2
    2140:	ldr	r2, [sp]
    2144:	blx	r2
    2148:	str	r0, [fp, #-4]
    214c:	ldr	r0, [fp, #-4]
    2150:	mov	sp, fp
    2154:	pop	{fp, pc}
    2158:	muleq	r1, r0, pc	; <UNPREDICTABLE>

0000215c <o_free@@Base>:
    215c:	push	{fp, lr}
    2160:	mov	fp, sp
    2164:	sub	sp, sp, #8
    2168:	str	r0, [sp, #4]
    216c:	ldr	r0, [sp, #4]
    2170:	movw	r1, #0
    2174:	cmp	r0, r1
    2178:	bne	2180 <o_free@@Base+0x24>
    217c:	b	21a0 <o_free@@Base+0x44>
    2180:	ldr	r0, [pc, #32]	; 21a8 <o_free@@Base+0x4c>
    2184:	add	r0, pc, r0
    2188:	ldr	r0, [r0]
    218c:	ldr	r1, [sp, #4]
    2190:	str	r0, [sp]
    2194:	mov	r0, r1
    2198:	ldr	r1, [sp]
    219c:	blx	r1
    21a0:	mov	sp, fp
    21a4:	pop	{fp, pc}
    21a8:	andeq	r2, r1, r4, lsr pc

000021ac <o_set_alloc_funcs@@Base>:
    21ac:	push	{fp, lr}
    21b0:	mov	fp, sp
    21b4:	sub	sp, sp, #12
    21b8:	ldr	r3, [pc, #60]	; 21fc <o_set_alloc_funcs@@Base+0x50>
    21bc:	add	r3, pc, r3
    21c0:	ldr	ip, [pc, #56]	; 2200 <o_set_alloc_funcs@@Base+0x54>
    21c4:	add	ip, pc, ip
    21c8:	ldr	lr, [pc, #52]	; 2204 <o_set_alloc_funcs@@Base+0x58>
    21cc:	add	lr, pc, lr
    21d0:	str	r0, [fp, #-4]
    21d4:	str	r1, [sp, #4]
    21d8:	str	r2, [sp]
    21dc:	ldr	r0, [fp, #-4]
    21e0:	str	r0, [lr]
    21e4:	ldr	r0, [sp, #4]
    21e8:	str	r0, [ip]
    21ec:	ldr	r0, [sp]
    21f0:	str	r0, [r3]
    21f4:	mov	sp, fp
    21f8:	pop	{fp, pc}
    21fc:	strdeq	r2, [r1], -ip
    2200:	strdeq	r2, [r1], -r0
    2204:	andeq	r2, r1, r4, ror #29

00002208 <o_get_alloc_funcs@@Base>:
    2208:	sub	sp, sp, #12
    220c:	str	r0, [sp, #8]
    2210:	str	r1, [sp, #4]
    2214:	str	r2, [sp]
    2218:	ldr	r0, [sp, #8]
    221c:	movw	r1, #0
    2220:	cmp	r0, r1
    2224:	beq	223c <o_get_alloc_funcs@@Base+0x34>
    2228:	ldr	r0, [pc, #92]	; 228c <o_get_alloc_funcs@@Base+0x84>
    222c:	add	r0, pc, r0
    2230:	ldr	r0, [r0]
    2234:	ldr	r1, [sp, #8]
    2238:	str	r0, [r1]
    223c:	ldr	r0, [sp, #4]
    2240:	movw	r1, #0
    2244:	cmp	r0, r1
    2248:	beq	2260 <o_get_alloc_funcs@@Base+0x58>
    224c:	ldr	r0, [pc, #60]	; 2290 <o_get_alloc_funcs@@Base+0x88>
    2250:	add	r0, pc, r0
    2254:	ldr	r0, [r0]
    2258:	ldr	r1, [sp, #4]
    225c:	str	r0, [r1]
    2260:	ldr	r0, [sp]
    2264:	movw	r1, #0
    2268:	cmp	r0, r1
    226c:	beq	2284 <o_get_alloc_funcs@@Base+0x7c>
    2270:	ldr	r0, [pc, #28]	; 2294 <o_get_alloc_funcs@@Base+0x8c>
    2274:	add	r0, pc, r0
    2278:	ldr	r0, [r0]
    227c:	ldr	r1, [sp]
    2280:	str	r0, [r1]
    2284:	add	sp, sp, #12
    2288:	bx	lr
    228c:	andeq	r2, r1, r4, lsl #29
    2290:	andeq	r2, r1, r4, ror #28
    2294:	andeq	r2, r1, r4, asr #28

00002298 <str_replace@@Base>:
    2298:	push	{fp, lr}
    229c:	mov	fp, sp
    22a0:	sub	sp, sp, #72	; 0x48
    22a4:	str	r0, [fp, #-8]
    22a8:	str	r1, [fp, #-12]
    22ac:	str	r2, [fp, #-16]
    22b0:	ldr	r0, [fp, #-8]
    22b4:	movw	r1, #0
    22b8:	cmp	r0, r1
    22bc:	beq	22e0 <str_replace@@Base+0x48>
    22c0:	ldr	r0, [fp, #-12]
    22c4:	movw	r1, #0
    22c8:	cmp	r0, r1
    22cc:	beq	22e0 <str_replace@@Base+0x48>
    22d0:	ldr	r0, [fp, #-16]
    22d4:	movw	r1, #0
    22d8:	cmp	r0, r1
    22dc:	bne	22ec <str_replace@@Base+0x54>
    22e0:	movw	r0, #0
    22e4:	str	r0, [fp, #-4]
    22e8:	b	24e0 <str_replace@@Base+0x248>
    22ec:	ldr	r0, [fp, #-8]
    22f0:	ldr	r1, [fp, #-12]
    22f4:	bl	1078 <strstr@plt>
    22f8:	str	r0, [fp, #-24]	; 0xffffffe8
    22fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2300:	movw	r1, #0
    2304:	cmp	r0, r1
    2308:	bne	231c <str_replace@@Base+0x84>
    230c:	ldr	r0, [fp, #-8]
    2310:	bl	10f0 <o_strdup@plt>
    2314:	str	r0, [fp, #-4]
    2318:	b	24e0 <str_replace@@Base+0x248>
    231c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2320:	ldr	r1, [fp, #-8]
    2324:	sub	r0, r0, r1
    2328:	str	r0, [sp, #32]
    232c:	ldr	r0, [sp, #32]
    2330:	add	r0, r0, #1
    2334:	mov	r1, r0
    2338:	str	r1, [sp, #28]
    233c:	bl	11b0 <o_malloc@plt>
    2340:	str	r0, [fp, #-28]	; 0xffffffe4
    2344:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2348:	movw	r1, #0
    234c:	cmp	r0, r1
    2350:	bne	2360 <str_replace@@Base+0xc8>
    2354:	movw	r0, #0
    2358:	str	r0, [fp, #-4]
    235c:	b	24e0 <str_replace@@Base+0x248>
    2360:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2364:	ldr	r1, [fp, #-8]
    2368:	ldr	r2, [sp, #32]
    236c:	bl	10e4 <memcpy@plt>
    2370:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2374:	ldr	r1, [sp, #32]
    2378:	add	r0, r0, r1
    237c:	movw	r1, #0
    2380:	strb	r1, [r0]
    2384:	ldr	r0, [fp, #-8]
    2388:	ldr	r1, [fp, #-28]	; 0xffffffe4
    238c:	str	r0, [sp, #24]
    2390:	mov	r0, r1
    2394:	bl	1180 <strlen@plt>
    2398:	ldr	r1, [sp, #24]
    239c:	add	r0, r1, r0
    23a0:	ldr	r1, [fp, #-12]
    23a4:	str	r0, [sp, #20]
    23a8:	mov	r0, r1
    23ac:	bl	1180 <strlen@plt>
    23b0:	ldr	r1, [sp, #20]
    23b4:	add	r0, r1, r0
    23b8:	ldr	r1, [fp, #-12]
    23bc:	ldr	r2, [fp, #-16]
    23c0:	bl	115c <str_replace@plt>
    23c4:	str	r0, [fp, #-32]	; 0xffffffe0
    23c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    23cc:	movw	r1, #0
    23d0:	cmp	r0, r1
    23d4:	bne	23ec <str_replace@@Base+0x154>
    23d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    23dc:	bl	10cc <o_free@plt>
    23e0:	movw	r0, #0
    23e4:	str	r0, [fp, #-4]
    23e8:	b	24e0 <str_replace@@Base+0x248>
    23ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    23f0:	ldr	r1, [fp, #-8]
    23f4:	sub	r0, r0, r1
    23f8:	ldr	r1, [fp, #-16]
    23fc:	str	r0, [sp, #16]
    2400:	mov	r0, r1
    2404:	bl	1180 <strlen@plt>
    2408:	ldr	r1, [sp, #16]
    240c:	add	r0, r1, r0
    2410:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2414:	str	r0, [sp, #12]
    2418:	mov	r0, r1
    241c:	bl	1180 <strlen@plt>
    2420:	ldr	r1, [sp, #12]
    2424:	add	r0, r1, r0
    2428:	str	r0, [sp, #36]	; 0x24
    242c:	ldr	r0, [sp, #36]	; 0x24
    2430:	add	r0, r0, #1
    2434:	mov	r1, r0
    2438:	str	r1, [sp, #8]
    243c:	bl	11b0 <o_malloc@plt>
    2440:	str	r0, [fp, #-20]	; 0xffffffec
    2444:	ldr	r0, [fp, #-20]	; 0xffffffec
    2448:	movw	r1, #0
    244c:	cmp	r0, r1
    2450:	bne	2470 <str_replace@@Base+0x1d8>
    2454:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2458:	bl	10cc <o_free@plt>
    245c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2460:	bl	10cc <o_free@plt>
    2464:	movw	r0, #0
    2468:	str	r0, [fp, #-4]
    246c:	b	24e0 <str_replace@@Base+0x248>
    2470:	ldr	r0, [pc, #116]	; 24ec <str_replace@@Base+0x254>
    2474:	add	r2, pc, r0
    2478:	ldr	r0, [fp, #-20]	; 0xffffffec
    247c:	ldr	r1, [sp, #36]	; 0x24
    2480:	add	r1, r1, #1
    2484:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2488:	ldr	ip, [fp, #-16]
    248c:	ldr	lr, [fp, #-32]	; 0xffffffe0
    2490:	str	ip, [sp]
    2494:	str	lr, [sp, #4]
    2498:	bl	11a4 <snprintf@plt>
    249c:	cmp	r0, #0
    24a0:	bge	24c8 <str_replace@@Base+0x230>
    24a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    24a8:	bl	10cc <o_free@plt>
    24ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    24b0:	bl	10cc <o_free@plt>
    24b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    24b8:	bl	10cc <o_free@plt>
    24bc:	movw	r0, #0
    24c0:	str	r0, [fp, #-4]
    24c4:	b	24e0 <str_replace@@Base+0x248>
    24c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    24cc:	bl	10cc <o_free@plt>
    24d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    24d4:	bl	10cc <o_free@plt>
    24d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    24dc:	str	r0, [fp, #-4]
    24e0:	ldr	r0, [fp, #-4]
    24e4:	mov	sp, fp
    24e8:	pop	{fp, pc}
    24ec:	andeq	r1, r0, r1, ror #25

000024f0 <o_strdup@@Base>:
    24f0:	push	{fp, lr}
    24f4:	mov	fp, sp
    24f8:	sub	sp, sp, #16
    24fc:	str	r0, [fp, #-4]
    2500:	ldr	r0, [fp, #-4]
    2504:	movw	r1, #0
    2508:	cmp	r0, r1
    250c:	bne	251c <o_strdup@@Base+0x2c>
    2510:	movw	r0, #0
    2514:	str	r0, [sp, #8]
    2518:	b	2548 <o_strdup@@Base+0x58>
    251c:	ldr	r0, [fp, #-4]
    2520:	ldr	r1, [fp, #-4]
    2524:	str	r0, [sp, #4]
    2528:	mov	r0, r1
    252c:	bl	1180 <strlen@plt>
    2530:	ldr	r1, [sp, #4]
    2534:	str	r0, [sp]
    2538:	mov	r0, r1
    253c:	ldr	r1, [sp]
    2540:	bl	10c0 <o_strndup@plt>
    2544:	str	r0, [sp, #8]
    2548:	ldr	r0, [sp, #8]
    254c:	mov	sp, fp
    2550:	pop	{fp, pc}

00002554 <msprintf@@Base>:
    2554:	sub	sp, sp, #12
    2558:	push	{fp, lr}
    255c:	mov	fp, sp
    2560:	sub	sp, sp, #28
    2564:	str	r3, [fp, #16]
    2568:	str	r2, [fp, #12]
    256c:	str	r1, [fp, #8]
    2570:	str	r0, [fp, #-8]
    2574:	movw	r0, #0
    2578:	str	r0, [sp, #8]
    257c:	str	r0, [sp, #4]
    2580:	ldr	r1, [fp, #-8]
    2584:	cmp	r1, r0
    2588:	beq	260c <msprintf@@Base+0xb8>
    258c:	add	r0, fp, #8
    2590:	str	r0, [fp, #-12]
    2594:	ldr	r0, [fp, #-12]
    2598:	str	r0, [sp, #12]
    259c:	ldr	r2, [fp, #-8]
    25a0:	ldr	r3, [fp, #-12]
    25a4:	mov	r0, #0
    25a8:	str	r0, [sp]
    25ac:	ldr	r1, [sp]
    25b0:	bl	1210 <vsnprintf@plt>
    25b4:	str	r0, [sp, #8]
    25b8:	ldr	r0, [sp, #8]
    25bc:	add	r0, r0, #1
    25c0:	bl	11b0 <o_malloc@plt>
    25c4:	str	r0, [sp, #4]
    25c8:	ldr	r0, [sp, #4]
    25cc:	movw	r1, #0
    25d0:	cmp	r0, r1
    25d4:	bne	25ec <msprintf@@Base+0x98>
    25d8:	sub	r0, fp, #12
    25dc:	add	r1, sp, #12
    25e0:	movw	r2, #0
    25e4:	str	r2, [fp, #-4]
    25e8:	b	2614 <msprintf@@Base+0xc0>
    25ec:	ldr	r0, [sp, #4]
    25f0:	ldr	r1, [sp, #8]
    25f4:	add	r1, r1, #1
    25f8:	ldr	r2, [fp, #-8]
    25fc:	ldr	r3, [sp, #12]
    2600:	bl	1210 <vsnprintf@plt>
    2604:	sub	r1, fp, #12
    2608:	add	r2, sp, #12
    260c:	ldr	r0, [sp, #4]
    2610:	str	r0, [fp, #-4]
    2614:	ldr	r0, [fp, #-4]
    2618:	mov	sp, fp
    261c:	pop	{fp, lr}
    2620:	add	sp, sp, #12
    2624:	bx	lr

00002628 <mstrcatf@@Base>:
    2628:	sub	sp, sp, #8
    262c:	push	{fp, lr}
    2630:	mov	fp, sp
    2634:	sub	sp, sp, #48	; 0x30
    2638:	str	r3, [fp, #12]
    263c:	str	r2, [fp, #8]
    2640:	str	r0, [fp, #-4]
    2644:	str	r1, [fp, #-8]
    2648:	movw	r0, #0
    264c:	str	r0, [fp, #-20]	; 0xffffffec
    2650:	str	r0, [sp, #24]
    2654:	str	r0, [sp, #20]
    2658:	str	r0, [sp, #16]
    265c:	ldr	r1, [fp, #-8]
    2660:	cmp	r1, r0
    2664:	beq	2790 <mstrcatf@@Base+0x168>
    2668:	ldr	r0, [fp, #-4]
    266c:	movw	r1, #0
    2670:	cmp	r0, r1
    2674:	beq	2720 <mstrcatf@@Base+0xf8>
    2678:	add	r0, fp, #8
    267c:	str	r0, [fp, #-12]
    2680:	ldr	r0, [fp, #-12]
    2684:	str	r0, [fp, #-16]
    2688:	ldr	r2, [fp, #-8]
    268c:	ldr	r3, [fp, #-12]
    2690:	mov	r0, #0
    2694:	str	r0, [sp, #12]
    2698:	ldr	r1, [sp, #12]
    269c:	bl	1210 <vsnprintf@plt>
    26a0:	str	r0, [sp, #20]
    26a4:	ldr	r0, [sp, #20]
    26a8:	add	r0, r0, #1
    26ac:	bl	11b0 <o_malloc@plt>
    26b0:	str	r0, [sp, #24]
    26b4:	ldr	r0, [sp, #24]
    26b8:	movw	r1, #0
    26bc:	cmp	r0, r1
    26c0:	beq	2714 <mstrcatf@@Base+0xec>
    26c4:	ldr	r0, [sp, #24]
    26c8:	ldr	r1, [sp, #20]
    26cc:	add	r1, r1, #1
    26d0:	ldr	r2, [fp, #-8]
    26d4:	ldr	r3, [fp, #-16]
    26d8:	bl	1210 <vsnprintf@plt>
    26dc:	ldr	r1, [pc, #192]	; 27a4 <mstrcatf@@Base+0x17c>
    26e0:	add	r1, pc, r1
    26e4:	ldr	r2, [fp, #-4]
    26e8:	ldr	r3, [sp, #24]
    26ec:	str	r0, [sp, #8]
    26f0:	mov	r0, r1
    26f4:	mov	r1, r2
    26f8:	mov	r2, r3
    26fc:	bl	11e0 <msprintf@plt>
    2700:	str	r0, [fp, #-20]	; 0xffffffec
    2704:	ldr	r0, [sp, #24]
    2708:	bl	10cc <o_free@plt>
    270c:	ldr	r0, [fp, #-4]
    2710:	bl	10cc <o_free@plt>
    2714:	sub	r0, fp, #12
    2718:	sub	r1, fp, #16
    271c:	b	278c <mstrcatf@@Base+0x164>
    2720:	add	r0, fp, #8
    2724:	str	r0, [fp, #-12]
    2728:	ldr	r0, [fp, #-12]
    272c:	str	r0, [fp, #-16]
    2730:	ldr	r2, [fp, #-8]
    2734:	ldr	r3, [fp, #-12]
    2738:	mov	r0, #0
    273c:	str	r0, [sp, #4]
    2740:	ldr	r1, [sp, #4]
    2744:	bl	1210 <vsnprintf@plt>
    2748:	str	r0, [sp, #16]
    274c:	ldr	r0, [sp, #16]
    2750:	add	r0, r0, #1
    2754:	bl	11b0 <o_malloc@plt>
    2758:	str	r0, [fp, #-20]	; 0xffffffec
    275c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2760:	movw	r1, #0
    2764:	cmp	r0, r1
    2768:	beq	2784 <mstrcatf@@Base+0x15c>
    276c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2770:	ldr	r1, [sp, #16]
    2774:	add	r1, r1, #1
    2778:	ldr	r2, [fp, #-8]
    277c:	ldr	r3, [fp, #-16]
    2780:	bl	1210 <vsnprintf@plt>
    2784:	sub	r0, fp, #12
    2788:	sub	r1, fp, #16
    278c:	b	2790 <mstrcatf@@Base+0x168>
    2790:	ldr	r0, [fp, #-20]	; 0xffffffec
    2794:	mov	sp, fp
    2798:	pop	{fp, lr}
    279c:	add	sp, sp, #8
    27a0:	bx	lr
    27a4:	andeq	r1, r0, r7, ror sl

000027a8 <o_strndup@@Base>:
    27a8:	push	{fp, lr}
    27ac:	mov	fp, sp
    27b0:	sub	sp, sp, #16
    27b4:	str	r0, [sp, #8]
    27b8:	str	r1, [sp, #4]
    27bc:	ldr	r0, [sp, #8]
    27c0:	movw	r1, #0
    27c4:	cmp	r0, r1
    27c8:	bne	27d8 <o_strndup@@Base+0x30>
    27cc:	movw	r0, #0
    27d0:	str	r0, [fp, #-4]
    27d4:	b	2830 <o_strndup@@Base+0x88>
    27d8:	ldr	r0, [sp, #4]
    27dc:	add	r0, r0, #1
    27e0:	bl	11b0 <o_malloc@plt>
    27e4:	str	r0, [sp]
    27e8:	ldr	r0, [sp]
    27ec:	movw	r1, #0
    27f0:	cmp	r0, r1
    27f4:	bne	2804 <o_strndup@@Base+0x5c>
    27f8:	movw	r0, #0
    27fc:	str	r0, [fp, #-4]
    2800:	b	2830 <o_strndup@@Base+0x88>
    2804:	ldr	r0, [sp]
    2808:	ldr	r1, [sp, #8]
    280c:	ldr	r2, [sp, #4]
    2810:	bl	10e4 <memcpy@plt>
    2814:	ldr	r0, [sp]
    2818:	ldr	r1, [sp, #4]
    281c:	add	r0, r0, r1
    2820:	movw	r1, #0
    2824:	strb	r1, [r0]
    2828:	ldr	r0, [sp]
    282c:	str	r0, [fp, #-4]
    2830:	ldr	r0, [fp, #-4]
    2834:	mov	sp, fp
    2838:	pop	{fp, pc}

0000283c <o_strcmp@@Base>:
    283c:	push	{fp, lr}
    2840:	mov	fp, sp
    2844:	sub	sp, sp, #16
    2848:	str	r0, [sp, #8]
    284c:	str	r1, [sp, #4]
    2850:	ldr	r0, [sp, #8]
    2854:	movw	r1, #0
    2858:	cmp	r0, r1
    285c:	bne	287c <o_strcmp@@Base+0x40>
    2860:	ldr	r0, [sp, #4]
    2864:	movw	r1, #0
    2868:	cmp	r0, r1
    286c:	bne	287c <o_strcmp@@Base+0x40>
    2870:	movw	r0, #0
    2874:	str	r0, [fp, #-4]
    2878:	b	28d4 <o_strcmp@@Base+0x98>
    287c:	ldr	r0, [sp, #8]
    2880:	movw	r1, #0
    2884:	cmp	r0, r1
    2888:	beq	28a8 <o_strcmp@@Base+0x6c>
    288c:	ldr	r0, [sp, #4]
    2890:	movw	r1, #0
    2894:	cmp	r0, r1
    2898:	bne	28a8 <o_strcmp@@Base+0x6c>
    289c:	mvn	r0, #0
    28a0:	str	r0, [fp, #-4]
    28a4:	b	28d4 <o_strcmp@@Base+0x98>
    28a8:	ldr	r0, [sp, #8]
    28ac:	movw	r1, #0
    28b0:	cmp	r0, r1
    28b4:	bne	28c4 <o_strcmp@@Base+0x88>
    28b8:	movw	r0, #1
    28bc:	str	r0, [fp, #-4]
    28c0:	b	28d4 <o_strcmp@@Base+0x98>
    28c4:	ldr	r0, [sp, #8]
    28c8:	ldr	r1, [sp, #4]
    28cc:	bl	10a8 <strcmp@plt>
    28d0:	str	r0, [fp, #-4]
    28d4:	ldr	r0, [fp, #-4]
    28d8:	mov	sp, fp
    28dc:	pop	{fp, pc}

000028e0 <o_strncmp@@Base>:
    28e0:	push	{fp, lr}
    28e4:	mov	fp, sp
    28e8:	sub	sp, sp, #16
    28ec:	str	r0, [sp, #8]
    28f0:	str	r1, [sp, #4]
    28f4:	str	r2, [sp]
    28f8:	ldr	r0, [sp, #8]
    28fc:	movw	r1, #0
    2900:	cmp	r0, r1
    2904:	bne	2918 <o_strncmp@@Base+0x38>
    2908:	ldr	r0, [sp, #4]
    290c:	movw	r1, #0
    2910:	cmp	r0, r1
    2914:	beq	2924 <o_strncmp@@Base+0x44>
    2918:	ldr	r0, [sp]
    291c:	cmp	r0, #0
    2920:	bhi	2930 <o_strncmp@@Base+0x50>
    2924:	movw	r0, #0
    2928:	str	r0, [fp, #-4]
    292c:	b	298c <o_strncmp@@Base+0xac>
    2930:	ldr	r0, [sp, #8]
    2934:	movw	r1, #0
    2938:	cmp	r0, r1
    293c:	beq	295c <o_strncmp@@Base+0x7c>
    2940:	ldr	r0, [sp, #4]
    2944:	movw	r1, #0
    2948:	cmp	r0, r1
    294c:	bne	295c <o_strncmp@@Base+0x7c>
    2950:	mvn	r0, #0
    2954:	str	r0, [fp, #-4]
    2958:	b	298c <o_strncmp@@Base+0xac>
    295c:	ldr	r0, [sp, #8]
    2960:	movw	r1, #0
    2964:	cmp	r0, r1
    2968:	bne	2978 <o_strncmp@@Base+0x98>
    296c:	movw	r0, #1
    2970:	str	r0, [fp, #-4]
    2974:	b	298c <o_strncmp@@Base+0xac>
    2978:	ldr	r0, [sp, #8]
    297c:	ldr	r1, [sp, #4]
    2980:	ldr	r2, [sp]
    2984:	bl	1228 <strncmp@plt>
    2988:	str	r0, [fp, #-4]
    298c:	ldr	r0, [fp, #-4]
    2990:	mov	sp, fp
    2994:	pop	{fp, pc}

00002998 <o_strcpy@@Base>:
    2998:	push	{fp, lr}
    299c:	mov	fp, sp
    29a0:	sub	sp, sp, #16
    29a4:	str	r0, [sp, #8]
    29a8:	str	r1, [sp, #4]
    29ac:	ldr	r0, [sp, #8]
    29b0:	movw	r1, #0
    29b4:	cmp	r0, r1
    29b8:	beq	29cc <o_strcpy@@Base+0x34>
    29bc:	ldr	r0, [sp, #4]
    29c0:	movw	r1, #0
    29c4:	cmp	r0, r1
    29c8:	bne	29d8 <o_strcpy@@Base+0x40>
    29cc:	movw	r0, #0
    29d0:	str	r0, [fp, #-4]
    29d4:	b	29e8 <o_strcpy@@Base+0x50>
    29d8:	ldr	r0, [sp, #8]
    29dc:	ldr	r1, [sp, #4]
    29e0:	bl	112c <strcpy@plt>
    29e4:	str	r0, [fp, #-4]
    29e8:	ldr	r0, [fp, #-4]
    29ec:	mov	sp, fp
    29f0:	pop	{fp, pc}

000029f4 <o_strncpy@@Base>:
    29f4:	push	{fp, lr}
    29f8:	mov	fp, sp
    29fc:	sub	sp, sp, #16
    2a00:	str	r0, [sp, #8]
    2a04:	str	r1, [sp, #4]
    2a08:	str	r2, [sp]
    2a0c:	ldr	r0, [sp, #8]
    2a10:	movw	r1, #0
    2a14:	cmp	r0, r1
    2a18:	beq	2a2c <o_strncpy@@Base+0x38>
    2a1c:	ldr	r0, [sp, #4]
    2a20:	movw	r1, #0
    2a24:	cmp	r0, r1
    2a28:	bne	2a38 <o_strncpy@@Base+0x44>
    2a2c:	movw	r0, #0
    2a30:	str	r0, [fp, #-4]
    2a34:	b	2a4c <o_strncpy@@Base+0x58>
    2a38:	ldr	r0, [sp, #8]
    2a3c:	ldr	r1, [sp, #4]
    2a40:	ldr	r2, [sp]
    2a44:	bl	11c8 <strncpy@plt>
    2a48:	str	r0, [fp, #-4]
    2a4c:	ldr	r0, [fp, #-4]
    2a50:	mov	sp, fp
    2a54:	pop	{fp, pc}

00002a58 <o_strcasecmp@@Base>:
    2a58:	push	{fp, lr}
    2a5c:	mov	fp, sp
    2a60:	sub	sp, sp, #16
    2a64:	str	r0, [sp, #8]
    2a68:	str	r1, [sp, #4]
    2a6c:	ldr	r0, [sp, #8]
    2a70:	movw	r1, #0
    2a74:	cmp	r0, r1
    2a78:	bne	2a98 <o_strcasecmp@@Base+0x40>
    2a7c:	ldr	r0, [sp, #4]
    2a80:	movw	r1, #0
    2a84:	cmp	r0, r1
    2a88:	bne	2a98 <o_strcasecmp@@Base+0x40>
    2a8c:	movw	r0, #0
    2a90:	str	r0, [fp, #-4]
    2a94:	b	2b00 <o_strcasecmp@@Base+0xa8>
    2a98:	ldr	r0, [sp, #8]
    2a9c:	movw	r1, #0
    2aa0:	cmp	r0, r1
    2aa4:	beq	2ac4 <o_strcasecmp@@Base+0x6c>
    2aa8:	ldr	r0, [sp, #4]
    2aac:	movw	r1, #0
    2ab0:	cmp	r0, r1
    2ab4:	bne	2ac4 <o_strcasecmp@@Base+0x6c>
    2ab8:	mvn	r0, #0
    2abc:	str	r0, [fp, #-4]
    2ac0:	b	2b00 <o_strcasecmp@@Base+0xa8>
    2ac4:	ldr	r0, [sp, #8]
    2ac8:	movw	r1, #0
    2acc:	cmp	r0, r1
    2ad0:	bne	2af0 <o_strcasecmp@@Base+0x98>
    2ad4:	ldr	r0, [sp, #4]
    2ad8:	movw	r1, #0
    2adc:	cmp	r0, r1
    2ae0:	beq	2af0 <o_strcasecmp@@Base+0x98>
    2ae4:	movw	r0, #1
    2ae8:	str	r0, [fp, #-4]
    2aec:	b	2b00 <o_strcasecmp@@Base+0xa8>
    2af0:	ldr	r0, [sp, #8]
    2af4:	ldr	r1, [sp, #4]
    2af8:	bl	1108 <strcasecmp@plt>
    2afc:	str	r0, [fp, #-4]
    2b00:	ldr	r0, [fp, #-4]
    2b04:	mov	sp, fp
    2b08:	pop	{fp, pc}

00002b0c <o_strncasecmp@@Base>:
    2b0c:	push	{fp, lr}
    2b10:	mov	fp, sp
    2b14:	sub	sp, sp, #16
    2b18:	str	r0, [sp, #8]
    2b1c:	str	r1, [sp, #4]
    2b20:	str	r2, [sp]
    2b24:	ldr	r0, [sp, #8]
    2b28:	movw	r1, #0
    2b2c:	cmp	r0, r1
    2b30:	bne	2b44 <o_strncasecmp@@Base+0x38>
    2b34:	ldr	r0, [sp, #4]
    2b38:	movw	r1, #0
    2b3c:	cmp	r0, r1
    2b40:	beq	2b50 <o_strncasecmp@@Base+0x44>
    2b44:	ldr	r0, [sp]
    2b48:	cmp	r0, #0
    2b4c:	bhi	2b5c <o_strncasecmp@@Base+0x50>
    2b50:	movw	r0, #0
    2b54:	str	r0, [fp, #-4]
    2b58:	b	2bc8 <o_strncasecmp@@Base+0xbc>
    2b5c:	ldr	r0, [sp, #8]
    2b60:	movw	r1, #0
    2b64:	cmp	r0, r1
    2b68:	beq	2b88 <o_strncasecmp@@Base+0x7c>
    2b6c:	ldr	r0, [sp, #4]
    2b70:	movw	r1, #0
    2b74:	cmp	r0, r1
    2b78:	bne	2b88 <o_strncasecmp@@Base+0x7c>
    2b7c:	mvn	r0, #0
    2b80:	str	r0, [fp, #-4]
    2b84:	b	2bc8 <o_strncasecmp@@Base+0xbc>
    2b88:	ldr	r0, [sp, #8]
    2b8c:	movw	r1, #0
    2b90:	cmp	r0, r1
    2b94:	bne	2bb4 <o_strncasecmp@@Base+0xa8>
    2b98:	ldr	r0, [sp, #4]
    2b9c:	movw	r1, #0
    2ba0:	cmp	r0, r1
    2ba4:	beq	2bb4 <o_strncasecmp@@Base+0xa8>
    2ba8:	movw	r0, #1
    2bac:	str	r0, [fp, #-4]
    2bb0:	b	2bc8 <o_strncasecmp@@Base+0xbc>
    2bb4:	ldr	r0, [sp, #8]
    2bb8:	ldr	r1, [sp, #4]
    2bbc:	ldr	r2, [sp]
    2bc0:	bl	1198 <strncasecmp@plt>
    2bc4:	str	r0, [fp, #-4]
    2bc8:	ldr	r0, [fp, #-4]
    2bcc:	mov	sp, fp
    2bd0:	pop	{fp, pc}

00002bd4 <o_strstr@@Base>:
    2bd4:	push	{fp, lr}
    2bd8:	mov	fp, sp
    2bdc:	sub	sp, sp, #16
    2be0:	str	r0, [sp, #8]
    2be4:	str	r1, [sp, #4]
    2be8:	ldr	r0, [sp, #8]
    2bec:	movw	r1, #0
    2bf0:	cmp	r0, r1
    2bf4:	beq	2c08 <o_strstr@@Base+0x34>
    2bf8:	ldr	r0, [sp, #4]
    2bfc:	movw	r1, #0
    2c00:	cmp	r0, r1
    2c04:	bne	2c14 <o_strstr@@Base+0x40>
    2c08:	movw	r0, #0
    2c0c:	str	r0, [fp, #-4]
    2c10:	b	2c24 <o_strstr@@Base+0x50>
    2c14:	ldr	r0, [sp, #8]
    2c18:	ldr	r1, [sp, #4]
    2c1c:	bl	1078 <strstr@plt>
    2c20:	str	r0, [fp, #-4]
    2c24:	ldr	r0, [fp, #-4]
    2c28:	mov	sp, fp
    2c2c:	pop	{fp, pc}

00002c30 <o_strchr@@Base>:
    2c30:	push	{fp, lr}
    2c34:	mov	fp, sp
    2c38:	sub	sp, sp, #16
    2c3c:	str	r0, [sp, #8]
    2c40:	str	r1, [sp, #4]
    2c44:	ldr	r0, [sp, #8]
    2c48:	movw	r1, #0
    2c4c:	cmp	r0, r1
    2c50:	bne	2c60 <o_strchr@@Base+0x30>
    2c54:	movw	r0, #0
    2c58:	str	r0, [fp, #-4]
    2c5c:	b	2c70 <o_strchr@@Base+0x40>
    2c60:	ldr	r0, [sp, #8]
    2c64:	ldr	r1, [sp, #4]
    2c68:	bl	118c <strchr@plt>
    2c6c:	str	r0, [fp, #-4]
    2c70:	ldr	r0, [fp, #-4]
    2c74:	mov	sp, fp
    2c78:	pop	{fp, pc}

00002c7c <o_strnchr@@Base>:
    2c7c:	push	{fp, lr}
    2c80:	mov	fp, sp
    2c84:	sub	sp, sp, #32
    2c88:	str	r0, [fp, #-8]
    2c8c:	str	r1, [fp, #-12]
    2c90:	strb	r2, [fp, #-13]
    2c94:	ldr	r0, [fp, #-8]
    2c98:	movw	r1, #0
    2c9c:	cmp	r0, r1
    2ca0:	beq	2d4c <o_strnchr@@Base+0xd0>
    2ca4:	ldr	r0, [fp, #-12]
    2ca8:	cmp	r0, #0
    2cac:	bls	2d4c <o_strnchr@@Base+0xd0>
    2cb0:	movw	r0, #0
    2cb4:	str	r0, [sp, #12]
    2cb8:	ldr	r0, [sp, #12]
    2cbc:	ldr	r1, [fp, #-12]
    2cc0:	cmp	r0, r1
    2cc4:	movw	r0, #0
    2cc8:	str	r0, [sp, #8]
    2ccc:	bcs	2cf8 <o_strnchr@@Base+0x7c>
    2cd0:	ldr	r0, [sp, #12]
    2cd4:	ldr	r1, [fp, #-8]
    2cd8:	str	r0, [sp, #4]
    2cdc:	mov	r0, r1
    2ce0:	bl	1138 <o_strlen@plt>
    2ce4:	ldr	r1, [sp, #4]
    2ce8:	cmp	r1, r0
    2cec:	movw	r0, #0
    2cf0:	movcc	r0, #1
    2cf4:	str	r0, [sp, #8]
    2cf8:	ldr	r0, [sp, #8]
    2cfc:	tst	r0, #1
    2d00:	beq	2d48 <o_strnchr@@Base+0xcc>
    2d04:	ldr	r0, [fp, #-8]
    2d08:	ldr	r1, [sp, #12]
    2d0c:	add	r0, r0, r1
    2d10:	ldrb	r0, [r0]
    2d14:	ldrb	r1, [fp, #-13]
    2d18:	cmp	r0, r1
    2d1c:	bne	2d34 <o_strnchr@@Base+0xb8>
    2d20:	ldr	r0, [fp, #-8]
    2d24:	ldr	r1, [sp, #12]
    2d28:	add	r0, r0, r1
    2d2c:	str	r0, [fp, #-4]
    2d30:	b	2d54 <o_strnchr@@Base+0xd8>
    2d34:	b	2d38 <o_strnchr@@Base+0xbc>
    2d38:	ldr	r0, [sp, #12]
    2d3c:	add	r0, r0, #1
    2d40:	str	r0, [sp, #12]
    2d44:	b	2cb8 <o_strnchr@@Base+0x3c>
    2d48:	b	2d4c <o_strnchr@@Base+0xd0>
    2d4c:	movw	r0, #0
    2d50:	str	r0, [fp, #-4]
    2d54:	ldr	r0, [fp, #-4]
    2d58:	mov	sp, fp
    2d5c:	pop	{fp, pc}

00002d60 <o_strlen@@Base>:
    2d60:	push	{fp, lr}
    2d64:	mov	fp, sp
    2d68:	sub	sp, sp, #8
    2d6c:	str	r0, [sp]
    2d70:	ldr	r0, [sp]
    2d74:	movw	r1, #0
    2d78:	cmp	r0, r1
    2d7c:	bne	2d8c <o_strlen@@Base+0x2c>
    2d80:	movw	r0, #0
    2d84:	str	r0, [sp, #4]
    2d88:	b	2d98 <o_strlen@@Base+0x38>
    2d8c:	ldr	r0, [sp]
    2d90:	bl	1180 <strlen@plt>
    2d94:	str	r0, [sp, #4]
    2d98:	ldr	r0, [sp, #4]
    2d9c:	mov	sp, fp
    2da0:	pop	{fp, pc}

00002da4 <o_strrchr@@Base>:
    2da4:	push	{fp, lr}
    2da8:	mov	fp, sp
    2dac:	sub	sp, sp, #16
    2db0:	str	r0, [sp, #8]
    2db4:	str	r1, [sp, #4]
    2db8:	ldr	r0, [sp, #8]
    2dbc:	movw	r1, #0
    2dc0:	cmp	r0, r1
    2dc4:	bne	2dd4 <o_strrchr@@Base+0x30>
    2dc8:	movw	r0, #0
    2dcc:	str	r0, [fp, #-4]
    2dd0:	b	2de4 <o_strrchr@@Base+0x40>
    2dd4:	ldr	r0, [sp, #8]
    2dd8:	ldr	r1, [sp, #4]
    2ddc:	bl	11f8 <strrchr@plt>
    2de0:	str	r0, [fp, #-4]
    2de4:	ldr	r0, [fp, #-4]
    2de8:	mov	sp, fp
    2dec:	pop	{fp, pc}

00002df0 <o_strrnchr@@Base>:
    2df0:	push	{fp, lr}
    2df4:	mov	fp, sp
    2df8:	sub	sp, sp, #24
    2dfc:	str	r0, [fp, #-8]
    2e00:	str	r1, [sp, #12]
    2e04:	strb	r2, [sp, #11]
    2e08:	ldr	r0, [fp, #-8]
    2e0c:	movw	r1, #0
    2e10:	cmp	r0, r1
    2e14:	beq	2ec8 <o_strrnchr@@Base+0xd8>
    2e18:	ldr	r0, [sp, #12]
    2e1c:	cmp	r0, #0
    2e20:	bls	2ec8 <o_strrnchr@@Base+0xd8>
    2e24:	ldr	r0, [fp, #-8]
    2e28:	bl	1138 <o_strlen@plt>
    2e2c:	sub	r0, r0, #1
    2e30:	str	r0, [sp, #4]
    2e34:	ldr	r0, [sp, #4]
    2e38:	cmp	r0, #0
    2e3c:	movw	r0, #0
    2e40:	str	r0, [sp]
    2e44:	blt	2e70 <o_strrnchr@@Base+0x80>
    2e48:	ldr	r0, [fp, #-8]
    2e4c:	bl	1138 <o_strlen@plt>
    2e50:	sub	r0, r0, #1
    2e54:	ldr	r1, [sp, #4]
    2e58:	sub	r0, r0, r1
    2e5c:	ldr	r1, [sp, #12]
    2e60:	cmp	r0, r1
    2e64:	movw	r0, #0
    2e68:	movcc	r0, #1
    2e6c:	str	r0, [sp]
    2e70:	ldr	r0, [sp]
    2e74:	tst	r0, #1
    2e78:	beq	2ec4 <o_strrnchr@@Base+0xd4>
    2e7c:	ldr	r0, [fp, #-8]
    2e80:	ldr	r1, [sp, #4]
    2e84:	add	r0, r0, r1
    2e88:	ldrb	r0, [r0]
    2e8c:	ldrb	r1, [sp, #11]
    2e90:	cmp	r0, r1
    2e94:	bne	2eac <o_strrnchr@@Base+0xbc>
    2e98:	ldr	r0, [fp, #-8]
    2e9c:	ldr	r1, [sp, #4]
    2ea0:	add	r0, r0, r1
    2ea4:	str	r0, [fp, #-4]
    2ea8:	b	2ed0 <o_strrnchr@@Base+0xe0>
    2eac:	b	2eb0 <o_strrnchr@@Base+0xc0>
    2eb0:	ldr	r0, [sp, #4]
    2eb4:	mvn	r1, #0
    2eb8:	add	r0, r0, r1
    2ebc:	str	r0, [sp, #4]
    2ec0:	b	2e34 <o_strrnchr@@Base+0x44>
    2ec4:	b	2ec8 <o_strrnchr@@Base+0xd8>
    2ec8:	movw	r0, #0
    2ecc:	str	r0, [fp, #-4]
    2ed0:	ldr	r0, [fp, #-4]
    2ed4:	mov	sp, fp
    2ed8:	pop	{fp, pc}

00002edc <o_strnstr@@Base>:
    2edc:	push	{fp, lr}
    2ee0:	mov	fp, sp
    2ee4:	sub	sp, sp, #16
    2ee8:	str	r0, [sp, #8]
    2eec:	str	r1, [sp, #4]
    2ef0:	str	r2, [sp]
    2ef4:	ldr	r0, [sp, #8]
    2ef8:	movw	r1, #0
    2efc:	cmp	r0, r1
    2f00:	beq	2f14 <o_strnstr@@Base+0x38>
    2f04:	ldr	r0, [sp, #4]
    2f08:	movw	r1, #0
    2f0c:	cmp	r0, r1
    2f10:	bne	2f20 <o_strnstr@@Base+0x44>
    2f14:	movw	r0, #0
    2f18:	str	r0, [fp, #-4]
    2f1c:	b	2f34 <o_strnstr@@Base+0x58>
    2f20:	ldr	r0, [sp, #8]
    2f24:	ldr	r1, [sp, #4]
    2f28:	ldr	r2, [sp]
    2f2c:	bl	2f40 <o_strnstr@@Base+0x64>
    2f30:	str	r0, [fp, #-4]
    2f34:	ldr	r0, [fp, #-4]
    2f38:	mov	sp, fp
    2f3c:	pop	{fp, pc}
    2f40:	push	{fp, lr}
    2f44:	mov	fp, sp
    2f48:	sub	sp, sp, #24
    2f4c:	str	r0, [fp, #-8]
    2f50:	str	r1, [sp, #12]
    2f54:	str	r2, [sp, #8]
    2f58:	ldr	r0, [sp, #12]
    2f5c:	bl	1180 <strlen@plt>
    2f60:	str	r0, [sp]
    2f64:	movw	r1, #0
    2f68:	cmp	r1, r0
    2f6c:	bne	2f7c <o_strnstr@@Base+0xa0>
    2f70:	ldr	r0, [fp, #-8]
    2f74:	str	r0, [fp, #-4]
    2f78:	b	3000 <o_strnstr@@Base+0x124>
    2f7c:	movw	r0, #0
    2f80:	str	r0, [sp, #4]
    2f84:	ldr	r0, [sp, #4]
    2f88:	ldr	r1, [sp, #8]
    2f8c:	ldr	r2, [sp]
    2f90:	sub	r1, r1, r2
    2f94:	cmp	r0, r1
    2f98:	bgt	2ff8 <o_strnstr@@Base+0x11c>
    2f9c:	ldr	r0, [fp, #-8]
    2fa0:	ldrb	r0, [r0]
    2fa4:	ldr	r1, [sp, #12]
    2fa8:	ldrb	r1, [r1]
    2fac:	cmp	r0, r1
    2fb0:	bne	2fdc <o_strnstr@@Base+0x100>
    2fb4:	ldr	r0, [fp, #-8]
    2fb8:	ldr	r1, [sp, #12]
    2fbc:	ldr	r2, [sp]
    2fc0:	bl	1228 <strncmp@plt>
    2fc4:	movw	r1, #0
    2fc8:	cmp	r1, r0
    2fcc:	bne	2fdc <o_strnstr@@Base+0x100>
    2fd0:	ldr	r0, [fp, #-8]
    2fd4:	str	r0, [fp, #-4]
    2fd8:	b	3000 <o_strnstr@@Base+0x124>
    2fdc:	ldr	r0, [fp, #-8]
    2fe0:	add	r0, r0, #1
    2fe4:	str	r0, [fp, #-8]
    2fe8:	ldr	r0, [sp, #4]
    2fec:	add	r0, r0, #1
    2ff0:	str	r0, [sp, #4]
    2ff4:	b	2f84 <o_strnstr@@Base+0xa8>
    2ff8:	movw	r0, #0
    2ffc:	str	r0, [fp, #-4]
    3000:	ldr	r0, [fp, #-4]
    3004:	mov	sp, fp
    3008:	pop	{fp, pc}

0000300c <o_strcasestr@@Base>:
    300c:	push	{fp, lr}
    3010:	mov	fp, sp
    3014:	sub	sp, sp, #16
    3018:	str	r0, [sp, #8]
    301c:	str	r1, [sp, #4]
    3020:	ldr	r0, [sp, #8]
    3024:	movw	r1, #0
    3028:	cmp	r0, r1
    302c:	beq	3040 <o_strcasestr@@Base+0x34>
    3030:	ldr	r0, [sp, #4]
    3034:	movw	r1, #0
    3038:	cmp	r0, r1
    303c:	bne	304c <o_strcasestr@@Base+0x40>
    3040:	movw	r0, #0
    3044:	str	r0, [fp, #-4]
    3048:	b	305c <o_strcasestr@@Base+0x50>
    304c:	ldr	r0, [sp, #8]
    3050:	ldr	r1, [sp, #4]
    3054:	bl	109c <strcasestr@plt>
    3058:	str	r0, [fp, #-4]
    305c:	ldr	r0, [fp, #-4]
    3060:	mov	sp, fp
    3064:	pop	{fp, pc}

00003068 <split_string@@Base>:
    3068:	push	{fp, lr}
    306c:	mov	fp, sp
    3070:	sub	sp, sp, #32
    3074:	str	r0, [fp, #-4]
    3078:	str	r1, [fp, #-8]
    307c:	str	r2, [fp, #-12]
    3080:	movw	r0, #0
    3084:	str	r0, [sp, #16]
    3088:	ldr	r1, [fp, #-4]
    308c:	str	r1, [sp, #8]
    3090:	ldr	r1, [fp, #-4]
    3094:	cmp	r1, r0
    3098:	beq	3234 <split_string@@Base+0x1cc>
    309c:	ldr	r0, [fp, #-8]
    30a0:	movw	r1, #0
    30a4:	cmp	r0, r1
    30a8:	beq	3234 <split_string@@Base+0x1cc>
    30ac:	ldr	r0, [fp, #-12]
    30b0:	movw	r1, #0
    30b4:	cmp	r0, r1
    30b8:	beq	30c8 <split_string@@Base+0x60>
    30bc:	ldr	r0, [fp, #-12]
    30c0:	movw	r1, #0
    30c4:	str	r1, [r0]
    30c8:	movw	r0, #1
    30cc:	str	r0, [sp, #16]
    30d0:	ldr	r0, [sp, #8]
    30d4:	ldr	r1, [fp, #-8]
    30d8:	bl	1078 <strstr@plt>
    30dc:	str	r0, [sp, #12]
    30e0:	ldr	r0, [sp, #12]
    30e4:	movw	r1, #0
    30e8:	cmp	r0, r1
    30ec:	beq	31b4 <split_string@@Base+0x14c>
    30f0:	ldr	r0, [fp, #-12]
    30f4:	movw	r1, #0
    30f8:	cmp	r0, r1
    30fc:	beq	3174 <split_string@@Base+0x10c>
    3100:	ldr	r0, [fp, #-12]
    3104:	ldr	r0, [r0]
    3108:	ldr	r1, [sp, #16]
    310c:	add	r1, r1, #1
    3110:	lsl	r1, r1, #2
    3114:	bl	1150 <o_realloc@plt>
    3118:	ldr	r1, [fp, #-12]
    311c:	str	r0, [r1]
    3120:	ldr	r0, [fp, #-12]
    3124:	ldr	r0, [r0]
    3128:	movw	r1, #0
    312c:	cmp	r0, r1
    3130:	beq	3170 <split_string@@Base+0x108>
    3134:	ldr	r0, [sp, #8]
    3138:	ldr	r1, [sp, #12]
    313c:	sub	r1, r1, r0
    3140:	bl	10c0 <o_strndup@plt>
    3144:	ldr	r1, [fp, #-12]
    3148:	ldr	r1, [r1]
    314c:	ldr	r2, [sp, #16]
    3150:	add	r1, r1, r2, lsl #2
    3154:	str	r0, [r1, #-4]
    3158:	ldr	r0, [fp, #-12]
    315c:	ldr	r0, [r0]
    3160:	ldr	r1, [sp, #16]
    3164:	add	r0, r0, r1, lsl #2
    3168:	movw	r1, #0
    316c:	str	r1, [r0]
    3170:	b	3174 <split_string@@Base+0x10c>
    3174:	ldr	r0, [sp, #16]
    3178:	add	r0, r0, #1
    317c:	str	r0, [sp, #16]
    3180:	ldr	r0, [sp, #12]
    3184:	ldr	r1, [fp, #-8]
    3188:	str	r0, [sp, #4]
    318c:	mov	r0, r1
    3190:	bl	1180 <strlen@plt>
    3194:	ldr	r1, [sp, #4]
    3198:	add	r0, r1, r0
    319c:	str	r0, [sp, #8]
    31a0:	ldr	r0, [sp, #8]
    31a4:	ldr	r1, [fp, #-8]
    31a8:	bl	1078 <strstr@plt>
    31ac:	str	r0, [sp, #12]
    31b0:	b	30e0 <split_string@@Base+0x78>
    31b4:	ldr	r0, [fp, #-12]
    31b8:	movw	r1, #0
    31bc:	cmp	r0, r1
    31c0:	beq	3230 <split_string@@Base+0x1c8>
    31c4:	ldr	r0, [fp, #-12]
    31c8:	ldr	r0, [r0]
    31cc:	ldr	r1, [sp, #16]
    31d0:	add	r1, r1, #1
    31d4:	lsl	r1, r1, #2
    31d8:	bl	1150 <o_realloc@plt>
    31dc:	ldr	r1, [fp, #-12]
    31e0:	str	r0, [r1]
    31e4:	ldr	r0, [fp, #-12]
    31e8:	ldr	r0, [r0]
    31ec:	movw	r1, #0
    31f0:	cmp	r0, r1
    31f4:	beq	322c <split_string@@Base+0x1c4>
    31f8:	ldr	r0, [sp, #8]
    31fc:	bl	10f0 <o_strdup@plt>
    3200:	ldr	r1, [fp, #-12]
    3204:	ldr	r1, [r1]
    3208:	ldr	r2, [sp, #16]
    320c:	add	r1, r1, r2, lsl #2
    3210:	str	r0, [r1, #-4]
    3214:	ldr	r0, [fp, #-12]
    3218:	ldr	r0, [r0]
    321c:	ldr	r1, [sp, #16]
    3220:	add	r0, r0, r1, lsl #2
    3224:	movw	r1, #0
    3228:	str	r1, [r0]
    322c:	b	3230 <split_string@@Base+0x1c8>
    3230:	b	3234 <split_string@@Base+0x1cc>
    3234:	ldr	r0, [sp, #16]
    3238:	mov	sp, fp
    323c:	pop	{fp, pc}

00003240 <free_string_array@@Base>:
    3240:	push	{fp, lr}
    3244:	mov	fp, sp
    3248:	sub	sp, sp, #8
    324c:	str	r0, [sp, #4]
    3250:	ldr	r0, [sp, #4]
    3254:	movw	r1, #0
    3258:	cmp	r0, r1
    325c:	beq	32c0 <free_string_array@@Base+0x80>
    3260:	movw	r0, #0
    3264:	str	r0, [sp]
    3268:	ldr	r0, [sp, #4]
    326c:	ldr	r1, [sp]
    3270:	add	r0, r0, r1, lsl #2
    3274:	ldr	r0, [r0]
    3278:	movw	r1, #0
    327c:	cmp	r0, r1
    3280:	beq	32b8 <free_string_array@@Base+0x78>
    3284:	ldr	r0, [sp, #4]
    3288:	ldr	r1, [sp]
    328c:	ldr	r0, [r0, r1, lsl #2]
    3290:	bl	10cc <o_free@plt>
    3294:	ldr	r0, [sp, #4]
    3298:	ldr	r1, [sp]
    329c:	add	r0, r0, r1, lsl #2
    32a0:	movw	r1, #0
    32a4:	str	r1, [r0]
    32a8:	ldr	r0, [sp]
    32ac:	add	r0, r0, #1
    32b0:	str	r0, [sp]
    32b4:	b	3268 <free_string_array@@Base+0x28>
    32b8:	ldr	r0, [sp, #4]
    32bc:	bl	10cc <o_free@plt>
    32c0:	mov	sp, fp
    32c4:	pop	{fp, pc}

000032c8 <string_array_size@@Base>:
    32c8:	sub	sp, sp, #8
    32cc:	str	r0, [sp, #4]
    32d0:	movw	r0, #0
    32d4:	str	r0, [sp]
    32d8:	ldr	r1, [sp, #4]
    32dc:	cmp	r1, r0
    32e0:	beq	331c <string_array_size@@Base+0x54>
    32e4:	b	32e8 <string_array_size@@Base+0x20>
    32e8:	ldr	r0, [sp, #4]
    32ec:	ldr	r1, [sp]
    32f0:	add	r0, r0, r1, lsl #2
    32f4:	ldr	r0, [r0]
    32f8:	movw	r1, #0
    32fc:	cmp	r0, r1
    3300:	beq	3318 <string_array_size@@Base+0x50>
    3304:	b	3308 <string_array_size@@Base+0x40>
    3308:	ldr	r0, [sp]
    330c:	add	r0, r0, #1
    3310:	str	r0, [sp]
    3314:	b	32e8 <string_array_size@@Base+0x20>
    3318:	b	331c <string_array_size@@Base+0x54>
    331c:	ldr	r0, [sp]
    3320:	add	sp, sp, #8
    3324:	bx	lr

00003328 <string_array_join@@Base>:
    3328:	push	{fp, lr}
    332c:	mov	fp, sp
    3330:	sub	sp, sp, #24
    3334:	str	r0, [fp, #-4]
    3338:	str	r1, [fp, #-8]
    333c:	movw	r0, #0
    3340:	str	r0, [sp, #12]
    3344:	ldr	r1, [fp, #-4]
    3348:	cmp	r1, r0
    334c:	beq	3400 <string_array_join@@Base+0xd8>
    3350:	ldr	r0, [fp, #-8]
    3354:	movw	r1, #0
    3358:	cmp	r0, r1
    335c:	beq	3400 <string_array_join@@Base+0xd8>
    3360:	movw	r0, #0
    3364:	str	r0, [sp, #4]
    3368:	ldr	r0, [fp, #-4]
    336c:	ldr	r1, [sp, #4]
    3370:	add	r0, r0, r1, lsl #2
    3374:	ldr	r0, [r0]
    3378:	movw	r1, #0
    337c:	cmp	r0, r1
    3380:	beq	33fc <string_array_join@@Base+0xd4>
    3384:	ldr	r0, [sp, #12]
    3388:	movw	r1, #0
    338c:	cmp	r0, r1
    3390:	bne	33b0 <string_array_join@@Base+0x88>
    3394:	ldr	r0, [fp, #-4]
    3398:	ldr	r1, [sp, #4]
    339c:	add	r0, r0, r1, lsl #2
    33a0:	ldr	r0, [r0]
    33a4:	bl	10f0 <o_strdup@plt>
    33a8:	str	r0, [sp, #12]
    33ac:	b	33e8 <string_array_join@@Base+0xc0>
    33b0:	ldr	r0, [pc, #84]	; 340c <string_array_join@@Base+0xe4>
    33b4:	add	r0, pc, r0
    33b8:	ldr	r1, [sp, #12]
    33bc:	ldr	r2, [fp, #-8]
    33c0:	ldr	r3, [fp, #-4]
    33c4:	ldr	ip, [sp, #4]
    33c8:	add	r3, r3, ip, lsl #2
    33cc:	ldr	r3, [r3]
    33d0:	bl	11e0 <msprintf@plt>
    33d4:	str	r0, [sp, #8]
    33d8:	ldr	r0, [sp, #12]
    33dc:	bl	10cc <o_free@plt>
    33e0:	ldr	r0, [sp, #8]
    33e4:	str	r0, [sp, #12]
    33e8:	b	33ec <string_array_join@@Base+0xc4>
    33ec:	ldr	r0, [sp, #4]
    33f0:	add	r0, r0, #1
    33f4:	str	r0, [sp, #4]
    33f8:	b	3368 <string_array_join@@Base+0x40>
    33fc:	b	3400 <string_array_join@@Base+0xd8>
    3400:	ldr	r0, [sp, #12]
    3404:	mov	sp, fp
    3408:	pop	{fp, pc}
    340c:	andeq	r0, r0, r1, lsr #27

00003410 <trimwhitespace@@Base>:
    3410:	push	{fp, lr}
    3414:	mov	fp, sp
    3418:	sub	sp, sp, #24
    341c:	str	r0, [fp, #-8]
    3420:	ldr	r0, [fp, #-8]
    3424:	movw	r1, #0
    3428:	cmp	r0, r1
    342c:	bne	343c <trimwhitespace@@Base+0x2c>
    3430:	movw	r0, #0
    3434:	str	r0, [fp, #-4]
    3438:	b	353c <trimwhitespace@@Base+0x12c>
    343c:	ldr	r0, [fp, #-8]
    3440:	ldrb	r0, [r0]
    3444:	cmp	r0, #0
    3448:	bne	3458 <trimwhitespace@@Base+0x48>
    344c:	ldr	r0, [fp, #-8]
    3450:	str	r0, [fp, #-4]
    3454:	b	353c <trimwhitespace@@Base+0x12c>
    3458:	b	345c <trimwhitespace@@Base+0x4c>
    345c:	b	3460 <trimwhitespace@@Base+0x50>
    3460:	bl	1174 <__ctype_b_loc@plt>
    3464:	ldr	r0, [r0]
    3468:	ldr	r1, [fp, #-8]
    346c:	ldrb	r1, [r1]
    3470:	mov	r2, r1
    3474:	add	r0, r0, r1, lsl #1
    3478:	ldrh	r0, [r0]
    347c:	and	r0, r0, #8192	; 0x2000
    3480:	cmp	r0, #0
    3484:	beq	3498 <trimwhitespace@@Base+0x88>
    3488:	ldr	r0, [fp, #-8]
    348c:	add	r0, r0, #1
    3490:	str	r0, [fp, #-8]
    3494:	b	3460 <trimwhitespace@@Base+0x50>
    3498:	ldr	r0, [fp, #-8]
    349c:	ldr	r1, [fp, #-8]
    34a0:	str	r0, [sp, #8]
    34a4:	mov	r0, r1
    34a8:	bl	1138 <o_strlen@plt>
    34ac:	ldr	r1, [sp, #8]
    34b0:	add	r0, r1, r0
    34b4:	mvn	r1, #0
    34b8:	add	r0, r0, r1
    34bc:	str	r0, [sp, #12]
    34c0:	ldr	r0, [sp, #12]
    34c4:	ldr	r1, [fp, #-8]
    34c8:	cmp	r0, r1
    34cc:	movw	r0, #0
    34d0:	str	r0, [sp, #4]
    34d4:	bls	3508 <trimwhitespace@@Base+0xf8>
    34d8:	bl	1174 <__ctype_b_loc@plt>
    34dc:	ldr	r0, [r0]
    34e0:	ldr	r1, [sp, #12]
    34e4:	ldrb	r1, [r1]
    34e8:	mov	r2, r1
    34ec:	add	r0, r0, r1, lsl #1
    34f0:	ldrh	r0, [r0]
    34f4:	and	r0, r0, #8192	; 0x2000
    34f8:	cmp	r0, #0
    34fc:	movw	r0, #0
    3500:	movne	r0, #1
    3504:	str	r0, [sp, #4]
    3508:	ldr	r0, [sp, #4]
    350c:	tst	r0, #1
    3510:	beq	3528 <trimwhitespace@@Base+0x118>
    3514:	ldr	r0, [sp, #12]
    3518:	mvn	r1, #0
    351c:	add	r0, r0, r1
    3520:	str	r0, [sp, #12]
    3524:	b	34c0 <trimwhitespace@@Base+0xb0>
    3528:	ldr	r0, [sp, #12]
    352c:	movw	r1, #0
    3530:	strb	r1, [r0, #1]
    3534:	ldr	r0, [fp, #-8]
    3538:	str	r0, [fp, #-4]
    353c:	ldr	r0, [fp, #-4]
    3540:	mov	sp, fp
    3544:	pop	{fp, pc}

00003548 <trimcharacter@@Base>:
    3548:	push	{fp, lr}
    354c:	mov	fp, sp
    3550:	sub	sp, sp, #24
    3554:	str	r0, [fp, #-8]
    3558:	strb	r1, [fp, #-9]
    355c:	ldr	r0, [fp, #-8]
    3560:	movw	r1, #0
    3564:	cmp	r0, r1
    3568:	bne	3578 <trimcharacter@@Base+0x30>
    356c:	movw	r0, #0
    3570:	str	r0, [fp, #-4]
    3574:	b	3650 <trimcharacter@@Base+0x108>
    3578:	ldr	r0, [fp, #-8]
    357c:	ldrb	r0, [r0]
    3580:	cmp	r0, #0
    3584:	bne	3594 <trimcharacter@@Base+0x4c>
    3588:	ldr	r0, [fp, #-8]
    358c:	str	r0, [fp, #-4]
    3590:	b	3650 <trimcharacter@@Base+0x108>
    3594:	b	3598 <trimcharacter@@Base+0x50>
    3598:	b	359c <trimcharacter@@Base+0x54>
    359c:	ldr	r0, [fp, #-8]
    35a0:	ldrb	r0, [r0]
    35a4:	ldrb	r1, [fp, #-9]
    35a8:	cmp	r0, r1
    35ac:	bne	35c0 <trimcharacter@@Base+0x78>
    35b0:	ldr	r0, [fp, #-8]
    35b4:	add	r0, r0, #1
    35b8:	str	r0, [fp, #-8]
    35bc:	b	359c <trimcharacter@@Base+0x54>
    35c0:	ldr	r0, [fp, #-8]
    35c4:	ldr	r1, [fp, #-8]
    35c8:	str	r0, [sp, #4]
    35cc:	mov	r0, r1
    35d0:	bl	1138 <o_strlen@plt>
    35d4:	ldr	r1, [sp, #4]
    35d8:	add	r0, r1, r0
    35dc:	mvn	r1, #0
    35e0:	add	r0, r0, r1
    35e4:	str	r0, [sp, #8]
    35e8:	ldr	r0, [sp, #8]
    35ec:	ldr	r1, [fp, #-8]
    35f0:	cmp	r0, r1
    35f4:	movw	r0, #0
    35f8:	str	r0, [sp]
    35fc:	bls	361c <trimcharacter@@Base+0xd4>
    3600:	ldr	r0, [sp, #8]
    3604:	ldrb	r0, [r0]
    3608:	ldrb	r1, [fp, #-9]
    360c:	cmp	r0, r1
    3610:	movw	r0, #0
    3614:	moveq	r0, #1
    3618:	str	r0, [sp]
    361c:	ldr	r0, [sp]
    3620:	tst	r0, #1
    3624:	beq	363c <trimcharacter@@Base+0xf4>
    3628:	ldr	r0, [sp, #8]
    362c:	mvn	r1, #0
    3630:	add	r0, r0, r1
    3634:	str	r0, [sp, #8]
    3638:	b	35e8 <trimcharacter@@Base+0xa0>
    363c:	ldr	r0, [sp, #8]
    3640:	movw	r1, #0
    3644:	strb	r1, [r0, #1]
    3648:	ldr	r0, [fp, #-8]
    364c:	str	r0, [fp, #-4]
    3650:	ldr	r0, [fp, #-4]
    3654:	mov	sp, fp
    3658:	pop	{fp, pc}

0000365c <string_array_has_value@@Base>:
    365c:	push	{fp, lr}
    3660:	mov	fp, sp
    3664:	sub	sp, sp, #16
    3668:	str	r0, [sp, #8]
    366c:	str	r1, [sp, #4]
    3670:	ldr	r0, [sp, #8]
    3674:	movw	r1, #0
    3678:	cmp	r0, r1
    367c:	beq	3700 <string_array_has_value@@Base+0xa4>
    3680:	ldr	r0, [sp, #4]
    3684:	movw	r1, #0
    3688:	cmp	r0, r1
    368c:	beq	3700 <string_array_has_value@@Base+0xa4>
    3690:	movw	r0, #0
    3694:	str	r0, [sp]
    3698:	ldr	r0, [sp, #8]
    369c:	ldr	r1, [sp]
    36a0:	add	r0, r0, r1, lsl #2
    36a4:	ldr	r0, [r0]
    36a8:	movw	r1, #0
    36ac:	cmp	r0, r1
    36b0:	beq	36f4 <string_array_has_value@@Base+0x98>
    36b4:	ldr	r0, [sp, #8]
    36b8:	ldr	r1, [sp]
    36bc:	add	r0, r0, r1, lsl #2
    36c0:	ldr	r0, [r0]
    36c4:	ldr	r1, [sp, #4]
    36c8:	bl	1114 <o_strcmp@plt>
    36cc:	cmp	r0, #0
    36d0:	bne	36e0 <string_array_has_value@@Base+0x84>
    36d4:	movw	r0, #1
    36d8:	str	r0, [fp, #-4]
    36dc:	b	3708 <string_array_has_value@@Base+0xac>
    36e0:	b	36e4 <string_array_has_value@@Base+0x88>
    36e4:	ldr	r0, [sp]
    36e8:	add	r0, r0, #1
    36ec:	str	r0, [sp]
    36f0:	b	3698 <string_array_has_value@@Base+0x3c>
    36f4:	movw	r0, #0
    36f8:	str	r0, [fp, #-4]
    36fc:	b	3708 <string_array_has_value@@Base+0xac>
    3700:	movw	r0, #0
    3704:	str	r0, [fp, #-4]
    3708:	ldr	r0, [fp, #-4]
    370c:	mov	sp, fp
    3710:	pop	{fp, pc}

00003714 <string_array_has_value_case@@Base>:
    3714:	push	{fp, lr}
    3718:	mov	fp, sp
    371c:	sub	sp, sp, #16
    3720:	str	r0, [sp, #8]
    3724:	str	r1, [sp, #4]
    3728:	ldr	r0, [sp, #8]
    372c:	movw	r1, #0
    3730:	cmp	r0, r1
    3734:	beq	37b8 <string_array_has_value_case@@Base+0xa4>
    3738:	ldr	r0, [sp, #4]
    373c:	movw	r1, #0
    3740:	cmp	r0, r1
    3744:	beq	37b8 <string_array_has_value_case@@Base+0xa4>
    3748:	movw	r0, #0
    374c:	str	r0, [sp]
    3750:	ldr	r0, [sp, #8]
    3754:	ldr	r1, [sp]
    3758:	add	r0, r0, r1, lsl #2
    375c:	ldr	r0, [r0]
    3760:	movw	r1, #0
    3764:	cmp	r0, r1
    3768:	beq	37ac <string_array_has_value_case@@Base+0x98>
    376c:	ldr	r0, [sp, #8]
    3770:	ldr	r1, [sp]
    3774:	add	r0, r0, r1, lsl #2
    3778:	ldr	r0, [r0]
    377c:	ldr	r1, [sp, #4]
    3780:	bl	1144 <o_strcasecmp@plt>
    3784:	cmp	r0, #0
    3788:	bne	3798 <string_array_has_value_case@@Base+0x84>
    378c:	movw	r0, #1
    3790:	str	r0, [fp, #-4]
    3794:	b	37c0 <string_array_has_value_case@@Base+0xac>
    3798:	b	379c <string_array_has_value_case@@Base+0x88>
    379c:	ldr	r0, [sp]
    37a0:	add	r0, r0, #1
    37a4:	str	r0, [sp]
    37a8:	b	3750 <string_array_has_value_case@@Base+0x3c>
    37ac:	movw	r0, #0
    37b0:	str	r0, [fp, #-4]
    37b4:	b	37c0 <string_array_has_value_case@@Base+0xac>
    37b8:	movw	r0, #0
    37bc:	str	r0, [fp, #-4]
    37c0:	ldr	r0, [fp, #-4]
    37c4:	mov	sp, fp
    37c8:	pop	{fp, pc}

000037cc <string_array_has_value_n@@Base>:
    37cc:	push	{fp, lr}
    37d0:	mov	fp, sp
    37d4:	sub	sp, sp, #24
    37d8:	str	r0, [fp, #-8]
    37dc:	str	r1, [sp, #12]
    37e0:	str	r2, [sp, #8]
    37e4:	ldr	r0, [fp, #-8]
    37e8:	movw	r1, #0
    37ec:	cmp	r0, r1
    37f0:	beq	3878 <string_array_has_value_n@@Base+0xac>
    37f4:	ldr	r0, [sp, #12]
    37f8:	movw	r1, #0
    37fc:	cmp	r0, r1
    3800:	beq	3878 <string_array_has_value_n@@Base+0xac>
    3804:	movw	r0, #0
    3808:	str	r0, [sp, #4]
    380c:	ldr	r0, [fp, #-8]
    3810:	ldr	r1, [sp, #4]
    3814:	add	r0, r0, r1, lsl #2
    3818:	ldr	r0, [r0]
    381c:	movw	r1, #0
    3820:	cmp	r0, r1
    3824:	beq	386c <string_array_has_value_n@@Base+0xa0>
    3828:	ldr	r0, [fp, #-8]
    382c:	ldr	r1, [sp, #4]
    3830:	add	r0, r0, r1, lsl #2
    3834:	ldr	r0, [r0]
    3838:	ldr	r1, [sp, #12]
    383c:	ldr	r2, [sp, #8]
    3840:	bl	121c <o_strncmp@plt>
    3844:	cmp	r0, #0
    3848:	bne	3858 <string_array_has_value_n@@Base+0x8c>
    384c:	movw	r0, #1
    3850:	str	r0, [fp, #-4]
    3854:	b	3880 <string_array_has_value_n@@Base+0xb4>
    3858:	b	385c <string_array_has_value_n@@Base+0x90>
    385c:	ldr	r0, [sp, #4]
    3860:	add	r0, r0, #1
    3864:	str	r0, [sp, #4]
    3868:	b	380c <string_array_has_value_n@@Base+0x40>
    386c:	movw	r0, #0
    3870:	str	r0, [fp, #-4]
    3874:	b	3880 <string_array_has_value_n@@Base+0xb4>
    3878:	movw	r0, #0
    387c:	str	r0, [fp, #-4]
    3880:	ldr	r0, [fp, #-4]
    3884:	mov	sp, fp
    3888:	pop	{fp, pc}

0000388c <string_array_has_value_ncase@@Base>:
    388c:	push	{fp, lr}
    3890:	mov	fp, sp
    3894:	sub	sp, sp, #24
    3898:	str	r0, [fp, #-8]
    389c:	str	r1, [sp, #12]
    38a0:	str	r2, [sp, #8]
    38a4:	ldr	r0, [fp, #-8]
    38a8:	movw	r1, #0
    38ac:	cmp	r0, r1
    38b0:	beq	3938 <string_array_has_value_ncase@@Base+0xac>
    38b4:	ldr	r0, [sp, #12]
    38b8:	movw	r1, #0
    38bc:	cmp	r0, r1
    38c0:	beq	3938 <string_array_has_value_ncase@@Base+0xac>
    38c4:	movw	r0, #0
    38c8:	str	r0, [sp, #4]
    38cc:	ldr	r0, [fp, #-8]
    38d0:	ldr	r1, [sp, #4]
    38d4:	add	r0, r0, r1, lsl #2
    38d8:	ldr	r0, [r0]
    38dc:	movw	r1, #0
    38e0:	cmp	r0, r1
    38e4:	beq	392c <string_array_has_value_ncase@@Base+0xa0>
    38e8:	ldr	r0, [fp, #-8]
    38ec:	ldr	r1, [sp, #4]
    38f0:	add	r0, r0, r1, lsl #2
    38f4:	ldr	r0, [r0]
    38f8:	ldr	r1, [sp, #12]
    38fc:	ldr	r2, [sp, #8]
    3900:	bl	1090 <o_strncasecmp@plt>
    3904:	cmp	r0, #0
    3908:	bne	3918 <string_array_has_value_ncase@@Base+0x8c>
    390c:	movw	r0, #1
    3910:	str	r0, [fp, #-4]
    3914:	b	3940 <string_array_has_value_ncase@@Base+0xb4>
    3918:	b	391c <string_array_has_value_ncase@@Base+0x90>
    391c:	ldr	r0, [sp, #4]
    3920:	add	r0, r0, #1
    3924:	str	r0, [sp, #4]
    3928:	b	38cc <string_array_has_value_ncase@@Base+0x40>
    392c:	movw	r0, #0
    3930:	str	r0, [fp, #-4]
    3934:	b	3940 <string_array_has_value_ncase@@Base+0xb4>
    3938:	movw	r0, #0
    393c:	str	r0, [fp, #-4]
    3940:	ldr	r0, [fp, #-4]
    3944:	mov	sp, fp
    3948:	pop	{fp, pc}

0000394c <string_array_has_trimmed_value@@Base>:
    394c:	push	{fp, lr}
    3950:	mov	fp, sp
    3954:	sub	sp, sp, #40	; 0x28
    3958:	str	r0, [fp, #-4]
    395c:	str	r1, [fp, #-8]
    3960:	movw	r0, #0
    3964:	str	r0, [fp, #-16]
    3968:	ldr	r1, [fp, #-4]
    396c:	cmp	r1, r0
    3970:	beq	3a7c <string_array_has_trimmed_value@@Base+0x130>
    3974:	ldr	r0, [fp, #-8]
    3978:	movw	r1, #0
    397c:	cmp	r0, r1
    3980:	beq	3a7c <string_array_has_trimmed_value@@Base+0x130>
    3984:	ldr	r0, [fp, #-8]
    3988:	bl	10f0 <o_strdup@plt>
    398c:	str	r0, [sp, #20]
    3990:	ldr	r0, [sp, #20]
    3994:	movw	r1, #0
    3998:	cmp	r0, r1
    399c:	beq	3a74 <string_array_has_trimmed_value@@Base+0x128>
    39a0:	ldr	r0, [sp, #20]
    39a4:	bl	1120 <trimwhitespace@plt>
    39a8:	str	r0, [sp, #16]
    39ac:	movw	r0, #0
    39b0:	str	r0, [fp, #-12]
    39b4:	ldr	r0, [fp, #-4]
    39b8:	ldr	r1, [fp, #-12]
    39bc:	add	r0, r0, r1, lsl #2
    39c0:	ldr	r0, [r0]
    39c4:	movw	r1, #0
    39c8:	cmp	r0, r1
    39cc:	movw	r0, #0
    39d0:	str	r0, [sp, #4]
    39d4:	beq	39f4 <string_array_has_trimmed_value@@Base+0xa8>
    39d8:	ldr	r0, [fp, #-16]
    39dc:	cmp	r0, #0
    39e0:	movw	r0, #0
    39e4:	movne	r0, #1
    39e8:	mvn	r1, #0
    39ec:	eor	r0, r0, r1
    39f0:	str	r0, [sp, #4]
    39f4:	ldr	r0, [sp, #4]
    39f8:	tst	r0, #1
    39fc:	beq	3a70 <string_array_has_trimmed_value@@Base+0x124>
    3a00:	ldr	r0, [fp, #-4]
    3a04:	ldr	r1, [fp, #-12]
    3a08:	add	r0, r0, r1, lsl #2
    3a0c:	ldr	r0, [r0]
    3a10:	bl	10f0 <o_strdup@plt>
    3a14:	str	r0, [sp, #12]
    3a18:	ldr	r0, [sp, #12]
    3a1c:	movw	r1, #0
    3a20:	cmp	r0, r1
    3a24:	bne	3a2c <string_array_has_trimmed_value@@Base+0xe0>
    3a28:	b	3a70 <string_array_has_trimmed_value@@Base+0x124>
    3a2c:	ldr	r0, [sp, #12]
    3a30:	bl	1120 <trimwhitespace@plt>
    3a34:	str	r0, [sp, #8]
    3a38:	ldr	r0, [sp, #8]
    3a3c:	ldr	r1, [sp, #16]
    3a40:	bl	1114 <o_strcmp@plt>
    3a44:	cmp	r0, #0
    3a48:	bne	3a54 <string_array_has_trimmed_value@@Base+0x108>
    3a4c:	movw	r0, #1
    3a50:	str	r0, [fp, #-16]
    3a54:	b	3a58 <string_array_has_trimmed_value@@Base+0x10c>
    3a58:	ldr	r0, [sp, #12]
    3a5c:	bl	10cc <o_free@plt>
    3a60:	ldr	r0, [fp, #-12]
    3a64:	add	r0, r0, #1
    3a68:	str	r0, [fp, #-12]
    3a6c:	b	39b4 <string_array_has_trimmed_value@@Base+0x68>
    3a70:	b	3a74 <string_array_has_trimmed_value@@Base+0x128>
    3a74:	ldr	r0, [sp, #20]
    3a78:	bl	10cc <o_free@plt>
    3a7c:	ldr	r0, [fp, #-16]
    3a80:	mov	sp, fp
    3a84:	pop	{fp, pc}

00003a88 <pointer_list_init@@Base>:
    3a88:	sub	sp, sp, #4
    3a8c:	str	r0, [sp]
    3a90:	ldr	r0, [sp]
    3a94:	movw	r1, #0
    3a98:	cmp	r0, r1
    3a9c:	beq	3ab4 <pointer_list_init@@Base+0x2c>
    3aa0:	ldr	r0, [sp]
    3aa4:	movw	r1, #0
    3aa8:	str	r1, [r0]
    3aac:	ldr	r0, [sp]
    3ab0:	str	r1, [r0, #4]
    3ab4:	add	sp, sp, #4
    3ab8:	bx	lr

00003abc <pointer_list_clean@@Base>:
    3abc:	push	{fp, lr}
    3ac0:	mov	fp, sp
    3ac4:	sub	sp, sp, #8
    3ac8:	str	r0, [sp, #4]
    3acc:	ldr	r0, [sp, #4]
    3ad0:	movw	r1, #0
    3ad4:	cmp	r0, r1
    3ad8:	beq	3b1c <pointer_list_clean@@Base+0x60>
    3adc:	ldr	r0, [sp, #4]
    3ae0:	bl	11d4 <pointer_list_size@plt>
    3ae4:	str	r0, [sp]
    3ae8:	ldr	r0, [sp]
    3aec:	cmp	r0, #0
    3af0:	beq	3b18 <pointer_list_clean@@Base+0x5c>
    3af4:	ldr	r0, [sp, #4]
    3af8:	ldr	r1, [sp]
    3afc:	sub	r1, r1, #1
    3b00:	bl	10d8 <pointer_list_remove_at@plt>
    3b04:	ldr	r0, [sp]
    3b08:	mvn	r1, #0
    3b0c:	add	r0, r0, r1
    3b10:	str	r0, [sp]
    3b14:	b	3ae8 <pointer_list_clean@@Base+0x2c>
    3b18:	b	3b1c <pointer_list_clean@@Base+0x60>
    3b1c:	mov	sp, fp
    3b20:	pop	{fp, pc}

00003b24 <pointer_list_size@@Base>:
    3b24:	sub	sp, sp, #8
    3b28:	str	r0, [sp]
    3b2c:	ldr	r0, [sp]
    3b30:	movw	r1, #0
    3b34:	cmp	r0, r1
    3b38:	beq	3b4c <pointer_list_size@@Base+0x28>
    3b3c:	ldr	r0, [sp]
    3b40:	ldr	r0, [r0]
    3b44:	str	r0, [sp, #4]
    3b48:	b	3b54 <pointer_list_size@@Base+0x30>
    3b4c:	movw	r0, #0
    3b50:	str	r0, [sp, #4]
    3b54:	ldr	r0, [sp, #4]
    3b58:	add	sp, sp, #8
    3b5c:	bx	lr

00003b60 <pointer_list_remove_at@@Base>:
    3b60:	push	{fp, lr}
    3b64:	mov	fp, sp
    3b68:	sub	sp, sp, #16
    3b6c:	str	r0, [sp, #8]
    3b70:	str	r1, [sp, #4]
    3b74:	ldr	r0, [sp, #8]
    3b78:	movw	r1, #0
    3b7c:	cmp	r0, r1
    3b80:	beq	3c4c <pointer_list_remove_at@@Base+0xec>
    3b84:	ldr	r0, [sp, #4]
    3b88:	ldr	r1, [sp, #8]
    3b8c:	ldr	r1, [r1]
    3b90:	cmp	r0, r1
    3b94:	bcs	3c4c <pointer_list_remove_at@@Base+0xec>
    3b98:	ldr	r0, [sp, #4]
    3b9c:	str	r0, [sp]
    3ba0:	ldr	r0, [sp]
    3ba4:	ldr	r1, [sp, #8]
    3ba8:	ldr	r1, [r1]
    3bac:	sub	r1, r1, #1
    3bb0:	cmp	r0, r1
    3bb4:	bcs	3be0 <pointer_list_remove_at@@Base+0x80>
    3bb8:	ldr	r0, [sp, #8]
    3bbc:	ldr	r0, [r0, #4]
    3bc0:	ldr	r1, [sp]
    3bc4:	add	r0, r0, r1, lsl #2
    3bc8:	ldr	r1, [r0, #4]
    3bcc:	str	r1, [r0]
    3bd0:	ldr	r0, [sp]
    3bd4:	add	r0, r0, #1
    3bd8:	str	r0, [sp]
    3bdc:	b	3ba0 <pointer_list_remove_at@@Base+0x40>
    3be0:	ldr	r0, [sp, #8]
    3be4:	ldr	r0, [r0]
    3be8:	cmp	r0, #1
    3bec:	bls	3c14 <pointer_list_remove_at@@Base+0xb4>
    3bf0:	ldr	r0, [sp, #8]
    3bf4:	ldr	r1, [r0]
    3bf8:	ldr	r0, [r0, #4]
    3bfc:	sub	r1, r1, #1
    3c00:	lsl	r1, r1, #2
    3c04:	bl	1150 <o_realloc@plt>
    3c08:	ldr	r1, [sp, #8]
    3c0c:	str	r0, [r1, #4]
    3c10:	b	3c2c <pointer_list_remove_at@@Base+0xcc>
    3c14:	ldr	r0, [sp, #8]
    3c18:	ldr	r0, [r0, #4]
    3c1c:	bl	10cc <o_free@plt>
    3c20:	ldr	r0, [sp, #8]
    3c24:	movw	r1, #0
    3c28:	str	r1, [r0, #4]
    3c2c:	ldr	r0, [sp, #8]
    3c30:	ldr	r1, [r0]
    3c34:	mvn	r2, #0
    3c38:	add	r1, r1, r2
    3c3c:	str	r1, [r0]
    3c40:	movw	r0, #1
    3c44:	str	r0, [fp, #-4]
    3c48:	b	3c54 <pointer_list_remove_at@@Base+0xf4>
    3c4c:	movw	r0, #0
    3c50:	str	r0, [fp, #-4]
    3c54:	ldr	r0, [fp, #-4]
    3c58:	mov	sp, fp
    3c5c:	pop	{fp, pc}

00003c60 <pointer_list_clean_free@@Base>:
    3c60:	push	{fp, lr}
    3c64:	mov	fp, sp
    3c68:	sub	sp, sp, #16
    3c6c:	str	r0, [fp, #-4]
    3c70:	str	r1, [sp, #8]
    3c74:	ldr	r0, [fp, #-4]
    3c78:	movw	r1, #0
    3c7c:	cmp	r0, r1
    3c80:	beq	3cec <pointer_list_clean_free@@Base+0x8c>
    3c84:	ldr	r0, [fp, #-4]
    3c88:	bl	11d4 <pointer_list_size@plt>
    3c8c:	str	r0, [sp, #4]
    3c90:	ldr	r0, [sp, #4]
    3c94:	cmp	r0, #0
    3c98:	beq	3ce8 <pointer_list_clean_free@@Base+0x88>
    3c9c:	ldr	r0, [sp, #8]
    3ca0:	ldr	r1, [fp, #-4]
    3ca4:	ldr	r2, [sp, #4]
    3ca8:	sub	r2, r2, #1
    3cac:	str	r0, [sp]
    3cb0:	mov	r0, r1
    3cb4:	mov	r1, r2
    3cb8:	bl	1084 <pointer_list_get_at@plt>
    3cbc:	ldr	r1, [sp]
    3cc0:	blx	r1
    3cc4:	ldr	r0, [fp, #-4]
    3cc8:	ldr	r1, [sp, #4]
    3ccc:	sub	r1, r1, #1
    3cd0:	bl	10d8 <pointer_list_remove_at@plt>
    3cd4:	ldr	r0, [sp, #4]
    3cd8:	mvn	r1, #0
    3cdc:	add	r0, r0, r1
    3ce0:	str	r0, [sp, #4]
    3ce4:	b	3c90 <pointer_list_clean_free@@Base+0x30>
    3ce8:	b	3cec <pointer_list_clean_free@@Base+0x8c>
    3cec:	mov	sp, fp
    3cf0:	pop	{fp, pc}

00003cf4 <pointer_list_get_at@@Base>:
    3cf4:	sub	sp, sp, #12
    3cf8:	str	r0, [sp, #4]
    3cfc:	str	r1, [sp]
    3d00:	ldr	r0, [sp, #4]
    3d04:	movw	r1, #0
    3d08:	cmp	r0, r1
    3d0c:	beq	3d40 <pointer_list_get_at@@Base+0x4c>
    3d10:	ldr	r0, [sp]
    3d14:	ldr	r1, [sp, #4]
    3d18:	ldr	r1, [r1]
    3d1c:	cmp	r0, r1
    3d20:	bcs	3d40 <pointer_list_get_at@@Base+0x4c>
    3d24:	ldr	r0, [sp, #4]
    3d28:	ldr	r0, [r0, #4]
    3d2c:	ldr	r1, [sp]
    3d30:	add	r0, r0, r1, lsl #2
    3d34:	ldr	r0, [r0]
    3d38:	str	r0, [sp, #8]
    3d3c:	b	3d48 <pointer_list_get_at@@Base+0x54>
    3d40:	movw	r0, #0
    3d44:	str	r0, [sp, #8]
    3d48:	ldr	r0, [sp, #8]
    3d4c:	add	sp, sp, #12
    3d50:	bx	lr

00003d54 <pointer_list_append@@Base>:
    3d54:	push	{fp, lr}
    3d58:	mov	fp, sp
    3d5c:	sub	sp, sp, #16
    3d60:	str	r0, [sp, #8]
    3d64:	str	r1, [sp, #4]
    3d68:	ldr	r0, [sp, #8]
    3d6c:	movw	r1, #0
    3d70:	cmp	r0, r1
    3d74:	beq	3e00 <pointer_list_append@@Base+0xac>
    3d78:	ldr	r0, [sp, #8]
    3d7c:	ldr	r1, [r0]
    3d80:	ldr	r0, [r0, #4]
    3d84:	add	r1, r1, #1
    3d88:	lsl	r1, r1, #2
    3d8c:	bl	1150 <o_realloc@plt>
    3d90:	ldr	r1, [sp, #8]
    3d94:	str	r0, [r1, #4]
    3d98:	ldr	r0, [sp, #8]
    3d9c:	ldr	r0, [r0, #4]
    3da0:	movw	r1, #0
    3da4:	cmp	r0, r1
    3da8:	beq	3de0 <pointer_list_append@@Base+0x8c>
    3dac:	ldr	r0, [sp, #4]
    3db0:	ldr	r1, [sp, #8]
    3db4:	ldr	r2, [r1]
    3db8:	ldr	r1, [r1, #4]
    3dbc:	add	r1, r1, r2, lsl #2
    3dc0:	str	r0, [r1]
    3dc4:	ldr	r0, [sp, #8]
    3dc8:	ldr	r1, [r0]
    3dcc:	add	r1, r1, #1
    3dd0:	str	r1, [r0]
    3dd4:	movw	r0, #1
    3dd8:	str	r0, [fp, #-4]
    3ddc:	b	3e08 <pointer_list_append@@Base+0xb4>
    3de0:	ldr	r0, [sp, #8]
    3de4:	ldr	r0, [r0, #4]
    3de8:	bl	10cc <o_free@plt>
    3dec:	ldr	r0, [sp, #8]
    3df0:	movw	r1, #0
    3df4:	str	r1, [r0, #4]
    3df8:	str	r1, [fp, #-4]
    3dfc:	b	3e08 <pointer_list_append@@Base+0xb4>
    3e00:	movw	r0, #0
    3e04:	str	r0, [fp, #-4]
    3e08:	ldr	r0, [fp, #-4]
    3e0c:	mov	sp, fp
    3e10:	pop	{fp, pc}

00003e14 <pointer_list_remove_at_free@@Base>:
    3e14:	push	{fp, lr}
    3e18:	mov	fp, sp
    3e1c:	sub	sp, sp, #24
    3e20:	str	r0, [fp, #-8]
    3e24:	str	r1, [sp, #12]
    3e28:	str	r2, [sp, #8]
    3e2c:	ldr	r0, [fp, #-8]
    3e30:	movw	r1, #0
    3e34:	cmp	r0, r1
    3e38:	beq	3e88 <pointer_list_remove_at_free@@Base+0x74>
    3e3c:	ldr	r0, [sp, #12]
    3e40:	ldr	r1, [fp, #-8]
    3e44:	ldr	r1, [r1]
    3e48:	cmp	r0, r1
    3e4c:	bcs	3e88 <pointer_list_remove_at_free@@Base+0x74>
    3e50:	ldr	r0, [sp, #8]
    3e54:	ldr	r1, [fp, #-8]
    3e58:	ldr	r2, [sp, #12]
    3e5c:	str	r0, [sp, #4]
    3e60:	mov	r0, r1
    3e64:	mov	r1, r2
    3e68:	bl	1084 <pointer_list_get_at@plt>
    3e6c:	ldr	r1, [sp, #4]
    3e70:	blx	r1
    3e74:	ldr	r0, [fp, #-8]
    3e78:	ldr	r1, [sp, #12]
    3e7c:	bl	10d8 <pointer_list_remove_at@plt>
    3e80:	str	r0, [fp, #-4]
    3e84:	b	3e90 <pointer_list_remove_at_free@@Base+0x7c>
    3e88:	movw	r0, #0
    3e8c:	str	r0, [fp, #-4]
    3e90:	ldr	r0, [fp, #-4]
    3e94:	mov	sp, fp
    3e98:	pop	{fp, pc}

00003e9c <pointer_list_insert_at@@Base>:
    3e9c:	push	{fp, lr}
    3ea0:	mov	fp, sp
    3ea4:	sub	sp, sp, #24
    3ea8:	str	r0, [fp, #-8]
    3eac:	str	r1, [sp, #12]
    3eb0:	str	r2, [sp, #8]
    3eb4:	ldr	r0, [fp, #-8]
    3eb8:	movw	r1, #0
    3ebc:	cmp	r0, r1
    3ec0:	beq	3f94 <pointer_list_insert_at@@Base+0xf8>
    3ec4:	ldr	r0, [sp, #8]
    3ec8:	ldr	r1, [fp, #-8]
    3ecc:	ldr	r1, [r1]
    3ed0:	cmp	r0, r1
    3ed4:	bhi	3f94 <pointer_list_insert_at@@Base+0xf8>
    3ed8:	ldr	r0, [fp, #-8]
    3edc:	ldr	r1, [r0]
    3ee0:	ldr	r0, [r0, #4]
    3ee4:	add	r1, r1, #1
    3ee8:	lsl	r1, r1, #2
    3eec:	bl	1150 <o_realloc@plt>
    3ef0:	ldr	r1, [fp, #-8]
    3ef4:	str	r0, [r1, #4]
    3ef8:	ldr	r0, [fp, #-8]
    3efc:	ldr	r0, [r0, #4]
    3f00:	movw	r1, #0
    3f04:	cmp	r0, r1
    3f08:	beq	3f88 <pointer_list_insert_at@@Base+0xec>
    3f0c:	ldr	r0, [fp, #-8]
    3f10:	ldr	r0, [r0]
    3f14:	str	r0, [sp, #4]
    3f18:	ldr	r0, [sp, #4]
    3f1c:	ldr	r1, [sp, #8]
    3f20:	cmp	r0, r1
    3f24:	bls	3f54 <pointer_list_insert_at@@Base+0xb8>
    3f28:	ldr	r0, [fp, #-8]
    3f2c:	ldr	r0, [r0, #4]
    3f30:	ldr	r1, [sp, #4]
    3f34:	add	r0, r0, r1, lsl #2
    3f38:	ldr	r1, [r0, #-4]
    3f3c:	str	r1, [r0]
    3f40:	ldr	r0, [sp, #4]
    3f44:	mvn	r1, #0
    3f48:	add	r0, r0, r1
    3f4c:	str	r0, [sp, #4]
    3f50:	b	3f18 <pointer_list_insert_at@@Base+0x7c>
    3f54:	ldr	r0, [sp, #12]
    3f58:	ldr	r1, [fp, #-8]
    3f5c:	ldr	r1, [r1, #4]
    3f60:	ldr	r2, [sp, #8]
    3f64:	add	r1, r1, r2, lsl #2
    3f68:	str	r0, [r1]
    3f6c:	ldr	r0, [fp, #-8]
    3f70:	ldr	r1, [r0]
    3f74:	add	r1, r1, #1
    3f78:	str	r1, [r0]
    3f7c:	movw	r0, #1
    3f80:	str	r0, [fp, #-4]
    3f84:	b	3f9c <pointer_list_insert_at@@Base+0x100>
    3f88:	movw	r0, #0
    3f8c:	str	r0, [fp, #-4]
    3f90:	b	3f9c <pointer_list_insert_at@@Base+0x100>
    3f94:	movw	r0, #0
    3f98:	str	r0, [fp, #-4]
    3f9c:	ldr	r0, [fp, #-4]
    3fa0:	mov	sp, fp
    3fa4:	pop	{fp, pc}

00003fa8 <pointer_list_remove_pointer@@Base>:
    3fa8:	push	{fp, lr}
    3fac:	mov	fp, sp
    3fb0:	sub	sp, sp, #16
    3fb4:	str	r0, [sp, #8]
    3fb8:	str	r1, [sp, #4]
    3fbc:	ldr	r0, [sp, #8]
    3fc0:	movw	r1, #0
    3fc4:	cmp	r0, r1
    3fc8:	beq	403c <pointer_list_remove_pointer@@Base+0x94>
    3fcc:	movw	r0, #0
    3fd0:	str	r0, [sp]
    3fd4:	ldr	r0, [sp]
    3fd8:	ldr	r1, [sp, #8]
    3fdc:	ldr	r1, [r1]
    3fe0:	cmp	r0, r1
    3fe4:	bcs	4030 <pointer_list_remove_pointer@@Base+0x88>
    3fe8:	ldr	r0, [sp, #8]
    3fec:	ldr	r0, [r0, #4]
    3ff0:	ldr	r1, [sp]
    3ff4:	add	r0, r0, r1, lsl #2
    3ff8:	ldr	r0, [r0]
    3ffc:	ldr	r1, [sp, #4]
    4000:	cmp	r0, r1
    4004:	bne	401c <pointer_list_remove_pointer@@Base+0x74>
    4008:	ldr	r0, [sp, #8]
    400c:	ldr	r1, [sp]
    4010:	bl	10d8 <pointer_list_remove_at@plt>
    4014:	str	r0, [fp, #-4]
    4018:	b	4044 <pointer_list_remove_pointer@@Base+0x9c>
    401c:	b	4020 <pointer_list_remove_pointer@@Base+0x78>
    4020:	ldr	r0, [sp]
    4024:	add	r0, r0, #1
    4028:	str	r0, [sp]
    402c:	b	3fd4 <pointer_list_remove_pointer@@Base+0x2c>
    4030:	movw	r0, #0
    4034:	str	r0, [fp, #-4]
    4038:	b	4044 <pointer_list_remove_pointer@@Base+0x9c>
    403c:	movw	r0, #0
    4040:	str	r0, [fp, #-4]
    4044:	ldr	r0, [fp, #-4]
    4048:	mov	sp, fp
    404c:	pop	{fp, pc}

00004050 <pointer_list_remove_pointer_free@@Base>:
    4050:	push	{fp, lr}
    4054:	mov	fp, sp
    4058:	sub	sp, sp, #24
    405c:	str	r0, [fp, #-8]
    4060:	str	r1, [sp, #12]
    4064:	str	r2, [sp, #8]
    4068:	ldr	r0, [fp, #-8]
    406c:	movw	r1, #0
    4070:	cmp	r0, r1
    4074:	beq	4100 <pointer_list_remove_pointer_free@@Base+0xb0>
    4078:	movw	r0, #0
    407c:	str	r0, [sp, #4]
    4080:	ldr	r0, [sp, #4]
    4084:	ldr	r1, [fp, #-8]
    4088:	ldr	r1, [r1]
    408c:	cmp	r0, r1
    4090:	bcs	40f4 <pointer_list_remove_pointer_free@@Base+0xa4>
    4094:	ldr	r0, [fp, #-8]
    4098:	ldr	r0, [r0, #4]
    409c:	ldr	r1, [sp, #4]
    40a0:	add	r0, r0, r1, lsl #2
    40a4:	ldr	r0, [r0]
    40a8:	ldr	r1, [sp, #12]
    40ac:	cmp	r0, r1
    40b0:	bne	40e0 <pointer_list_remove_pointer_free@@Base+0x90>
    40b4:	ldr	r0, [sp, #8]
    40b8:	ldr	r1, [sp, #12]
    40bc:	str	r0, [sp]
    40c0:	mov	r0, r1
    40c4:	ldr	r1, [sp]
    40c8:	blx	r1
    40cc:	ldr	r0, [fp, #-8]
    40d0:	ldr	r1, [sp, #4]
    40d4:	bl	10d8 <pointer_list_remove_at@plt>
    40d8:	str	r0, [fp, #-4]
    40dc:	b	4108 <pointer_list_remove_pointer_free@@Base+0xb8>
    40e0:	b	40e4 <pointer_list_remove_pointer_free@@Base+0x94>
    40e4:	ldr	r0, [sp, #4]
    40e8:	add	r0, r0, #1
    40ec:	str	r0, [sp, #4]
    40f0:	b	4080 <pointer_list_remove_pointer_free@@Base+0x30>
    40f4:	movw	r0, #0
    40f8:	str	r0, [fp, #-4]
    40fc:	b	4108 <pointer_list_remove_pointer_free@@Base+0xb8>
    4100:	movw	r0, #0
    4104:	str	r0, [fp, #-4]
    4108:	ldr	r0, [fp, #-4]
    410c:	mov	sp, fp
    4110:	pop	{fp, pc}

Disassembly of section .fini:

00004114 <.fini>:
    4114:	push	{r3, lr}
    4118:	pop	{r3, pc}
