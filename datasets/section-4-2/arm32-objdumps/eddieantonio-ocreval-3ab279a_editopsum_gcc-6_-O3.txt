
../repos/eddieantonio-ocreval-3ab279a/editopsum/editopsum:     file format elf32-littlearm


Disassembly of section .init:

000106b8 <.init>:
   106b8:	push	{r3, lr}
   106bc:	bl	1088c <abort@plt+0xc4>
   106c0:	pop	{r3, pc}

Disassembly of section .plt:

000106c4 <calloc@plt-0x14>:
   106c4:	push	{lr}		; (str lr, [sp, #-4]!)
   106c8:	ldr	lr, [pc, #4]	; 106d4 <calloc@plt-0x4>
   106cc:	add	lr, pc, lr
   106d0:	ldr	pc, [lr, #8]!
   106d4:	andeq	r1, r1, ip, lsr #18

000106d8 <calloc@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #69632	; 0x11000
   106e0:	ldr	pc, [ip, #2348]!	; 0x92c

000106e4 <strcmp@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #69632	; 0x11000
   106ec:	ldr	pc, [ip, #2340]!	; 0x924

000106f0 <fopen@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #69632	; 0x11000
   106f8:	ldr	pc, [ip, #2332]!	; 0x91c

000106fc <free@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #69632	; 0x11000
   10704:	ldr	pc, [ip, #2324]!	; 0x914

00010708 <fgets@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #69632	; 0x11000
   10710:	ldr	pc, [ip, #2316]!	; 0x90c

00010714 <strdup@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #69632	; 0x11000
   1071c:	ldr	pc, [ip, #2308]!	; 0x904

00010720 <unlink@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #69632	; 0x11000
   10728:	ldr	pc, [ip, #2300]!	; 0x8fc

0001072c <__xstat@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #69632	; 0x11000
   10734:	ldr	pc, [ip, #2292]!	; 0x8f4

00010738 <fwrite@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #69632	; 0x11000
   10740:	ldr	pc, [ip, #2284]!	; 0x8ec

00010744 <__libc_start_main@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010750 <__sysv_signal@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2268]!	; 0x8dc

0001075c <__gmon_start__@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2260]!	; 0x8d4

00010768 <getpid@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2252]!	; 0x8cc

00010774 <exit@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010780 <strlen@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2236]!	; 0x8bc

0001078c <fprintf@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2228]!	; 0x8b4

00010798 <__isoc99_sscanf@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2220]!	; 0x8ac

000107a4 <fclose@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2212]!	; 0x8a4

000107b0 <sprintf@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2204]!	; 0x89c

000107bc <strncmp@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2196]!	; 0x894

000107c8 <abort@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2188]!	; 0x88c

Disassembly of section .text:

000107d4 <error@@Base-0x750>:
   107d4:	push	{r4, r5, r6, lr}
   107d8:	sub	sp, sp, #8
   107dc:	add	ip, sp, #8
   107e0:	mov	r3, #0
   107e4:	str	r0, [ip, #-4]!
   107e8:	ldr	r2, [pc, #84]	; 10844 <abort@plt+0x7c>
   107ec:	mov	r0, ip
   107f0:	mov	r5, r1
   107f4:	bl	1105c <error@@Base+0x138>
   107f8:	ldr	r3, [sp, #4]
   107fc:	cmp	r3, #1
   10800:	ble	1083c <abort@plt+0x74>
   10804:	ldr	r6, [pc, #60]	; 10848 <abort@plt+0x80>
   10808:	sub	r5, r5, #4
   1080c:	mov	r4, #0
   10810:	ldr	r1, [r5, #4]!
   10814:	mov	r0, r6
   10818:	bl	10978 <abort@plt+0x1b0>
   1081c:	ldr	r3, [sp, #4]
   10820:	add	r4, r4, #1
   10824:	cmp	r3, r4
   10828:	bgt	10810 <abort@plt+0x48>
   1082c:	mov	r1, #0
   10830:	ldr	r0, [pc, #16]	; 10848 <abort@plt+0x80>
   10834:	bl	10ba4 <abort@plt+0x3dc>
   10838:	bl	10ecc <abort@plt+0x704>
   1083c:	ldr	r0, [pc, #8]	; 1084c <abort@plt+0x84>
   10840:	bl	10f24 <error@@Base>
   10844:	andeq	r1, r1, ip, asr #6
   10848:	strdeq	r2, [r2], -r4
   1084c:	andeq	r1, r1, r0, lsl #7
   10850:	mov	fp, #0
   10854:	mov	lr, #0
   10858:	pop	{r1}		; (ldr r1, [sp], #4)
   1085c:	mov	r2, sp
   10860:	push	{r2}		; (str r2, [sp, #-4]!)
   10864:	push	{r0}		; (str r0, [sp, #-4]!)
   10868:	ldr	ip, [pc, #16]	; 10880 <abort@plt+0xb8>
   1086c:	push	{ip}		; (str ip, [sp, #-4]!)
   10870:	ldr	r0, [pc, #12]	; 10884 <abort@plt+0xbc>
   10874:	ldr	r3, [pc, #12]	; 10888 <abort@plt+0xc0>
   10878:	bl	10744 <__libc_start_main@plt>
   1087c:	bl	107c8 <abort@plt>
   10880:	andeq	r1, r1, ip, lsr r3
   10884:	ldrdeq	r0, [r1], -r4
   10888:	ldrdeq	r1, [r1], -ip
   1088c:	ldr	r3, [pc, #20]	; 108a8 <abort@plt+0xe0>
   10890:	ldr	r2, [pc, #20]	; 108ac <abort@plt+0xe4>
   10894:	add	r3, pc, r3
   10898:	ldr	r2, [r3, r2]
   1089c:	cmp	r2, #0
   108a0:	bxeq	lr
   108a4:	b	1075c <__gmon_start__@plt>
   108a8:	andeq	r1, r1, r4, ror #14
   108ac:	andeq	r0, r0, r0, rrx
   108b0:	ldr	r3, [pc, #28]	; 108d4 <abort@plt+0x10c>
   108b4:	ldr	r0, [pc, #28]	; 108d8 <abort@plt+0x110>
   108b8:	sub	r3, r3, r0
   108bc:	cmp	r3, #6
   108c0:	bxls	lr
   108c4:	ldr	r3, [pc, #16]	; 108dc <abort@plt+0x114>
   108c8:	cmp	r3, #0
   108cc:	bxeq	lr
   108d0:	bx	r3
   108d4:	andeq	r2, r2, r7, ror r0
   108d8:	andeq	r2, r2, r4, ror r0
   108dc:	andeq	r0, r0, r0
   108e0:	ldr	r1, [pc, #36]	; 1090c <abort@plt+0x144>
   108e4:	ldr	r0, [pc, #36]	; 10910 <abort@plt+0x148>
   108e8:	sub	r1, r1, r0
   108ec:	asr	r1, r1, #2
   108f0:	add	r1, r1, r1, lsr #31
   108f4:	asrs	r1, r1, #1
   108f8:	bxeq	lr
   108fc:	ldr	r3, [pc, #16]	; 10914 <abort@plt+0x14c>
   10900:	cmp	r3, #0
   10904:	bxeq	lr
   10908:	bx	r3
   1090c:	andeq	r2, r2, r4, ror r0
   10910:	andeq	r2, r2, r4, ror r0
   10914:	andeq	r0, r0, r0
   10918:	push	{r4, lr}
   1091c:	ldr	r4, [pc, #24]	; 1093c <abort@plt+0x174>
   10920:	ldrb	r3, [r4]
   10924:	cmp	r3, #0
   10928:	popne	{r4, pc}
   1092c:	bl	108b0 <abort@plt+0xe8>
   10930:	mov	r3, #1
   10934:	strb	r3, [r4]
   10938:	pop	{r4, pc}
   1093c:	andeq	r2, r2, r8, lsl #1
   10940:	ldr	r0, [pc, #40]	; 10970 <abort@plt+0x1a8>
   10944:	ldr	r3, [r0]
   10948:	cmp	r3, #0
   1094c:	bne	10954 <abort@plt+0x18c>
   10950:	b	108e0 <abort@plt+0x118>
   10954:	ldr	r3, [pc, #24]	; 10974 <abort@plt+0x1ac>
   10958:	cmp	r3, #0
   1095c:	beq	10950 <abort@plt+0x188>
   10960:	push	{r4, lr}
   10964:	blx	r3
   10968:	pop	{r4, lr}
   1096c:	b	108e0 <abort@plt+0x118>
   10970:	andeq	r1, r2, r4, lsl #30
   10974:	andeq	r0, r0, r0
   10978:	push	{r4, r5, r6, r7, r8, lr}
   1097c:	mov	r6, r1
   10980:	sub	sp, sp, #16
   10984:	ldr	r1, [pc, #504]	; 10b84 <abort@plt+0x3bc>
   10988:	mov	r5, r0
   1098c:	mov	r0, r6
   10990:	bl	10ff4 <error@@Base+0xd0>
   10994:	mov	r1, #99	; 0x63
   10998:	mov	r2, r0
   1099c:	mov	r4, r0
   109a0:	ldr	r0, [pc, #480]	; 10b88 <abort@plt+0x3c0>
   109a4:	bl	10708 <fgets@plt>
   109a8:	cmp	r0, #0
   109ac:	beq	10a24 <abort@plt+0x25c>
   109b0:	mov	r2, #42	; 0x2a
   109b4:	ldr	r1, [pc, #464]	; 10b8c <abort@plt+0x3c4>
   109b8:	ldr	r0, [pc, #456]	; 10b88 <abort@plt+0x3c0>
   109bc:	bl	107bc <strncmp@plt>
   109c0:	cmp	r0, #0
   109c4:	bne	10a24 <abort@plt+0x25c>
   109c8:	mov	r2, r4
   109cc:	mov	r1, #99	; 0x63
   109d0:	ldr	r0, [pc, #432]	; 10b88 <abort@plt+0x3c0>
   109d4:	bl	10708 <fgets@plt>
   109d8:	cmp	r0, #0
   109dc:	beq	10a24 <abort@plt+0x25c>
   109e0:	ldr	r1, [pc, #424]	; 10b90 <abort@plt+0x3c8>
   109e4:	ldr	r0, [pc, #412]	; 10b88 <abort@plt+0x3c0>
   109e8:	bl	106e4 <strcmp@plt>
   109ec:	cmp	r0, #0
   109f0:	bne	10a24 <abort@plt+0x25c>
   109f4:	mov	r2, r4
   109f8:	mov	r1, #99	; 0x63
   109fc:	ldr	r0, [pc, #388]	; 10b88 <abort@plt+0x3c0>
   10a00:	bl	10708 <fgets@plt>
   10a04:	cmp	r0, #0
   10a08:	beq	10a24 <abort@plt+0x25c>
   10a0c:	add	r2, sp, #8
   10a10:	ldr	r1, [pc, #380]	; 10b94 <abort@plt+0x3cc>
   10a14:	ldr	r0, [pc, #364]	; 10b88 <abort@plt+0x3c0>
   10a18:	bl	10798 <__isoc99_sscanf@plt>
   10a1c:	cmp	r0, #1
   10a20:	beq	10a38 <abort@plt+0x270>
   10a24:	cmp	r6, #0
   10a28:	ldr	r1, [pc, #360]	; 10b98 <abort@plt+0x3d0>
   10a2c:	ldr	r0, [pc, #360]	; 10b9c <abort@plt+0x3d4>
   10a30:	movne	r1, r6
   10a34:	bl	10fac <error@@Base+0x88>
   10a38:	ldr	r3, [r5]
   10a3c:	ldr	r1, [sp, #8]
   10a40:	mov	r2, r4
   10a44:	add	r3, r3, r1
   10a48:	str	r3, [r5]
   10a4c:	mov	r1, #99	; 0x63
   10a50:	ldr	r0, [pc, #304]	; 10b88 <abort@plt+0x3c0>
   10a54:	bl	10708 <fgets@plt>
   10a58:	cmp	r0, #0
   10a5c:	beq	10a24 <abort@plt+0x25c>
   10a60:	add	r2, sp, #8
   10a64:	ldr	r1, [pc, #296]	; 10b94 <abort@plt+0x3cc>
   10a68:	ldr	r0, [pc, #280]	; 10b88 <abort@plt+0x3c0>
   10a6c:	bl	10798 <__isoc99_sscanf@plt>
   10a70:	cmp	r0, #1
   10a74:	bne	10a24 <abort@plt+0x25c>
   10a78:	ldr	r3, [r5, #4]
   10a7c:	ldr	r1, [sp, #8]
   10a80:	mov	r2, r4
   10a84:	add	r3, r3, r1
   10a88:	str	r3, [r5, #4]
   10a8c:	mov	r1, #99	; 0x63
   10a90:	ldr	r0, [pc, #240]	; 10b88 <abort@plt+0x3c0>
   10a94:	bl	10708 <fgets@plt>
   10a98:	cmp	r0, #0
   10a9c:	beq	10a24 <abort@plt+0x25c>
   10aa0:	add	r2, sp, #4
   10aa4:	ldr	r1, [pc, #232]	; 10b94 <abort@plt+0x3cc>
   10aa8:	ldr	r0, [pc, #216]	; 10b88 <abort@plt+0x3c0>
   10aac:	bl	10798 <__isoc99_sscanf@plt>
   10ab0:	cmp	r0, #1
   10ab4:	bne	10a24 <abort@plt+0x25c>
   10ab8:	ldr	r2, [sp, #4]
   10abc:	ldr	r3, [r5, #8]
   10ac0:	cmp	r2, #0
   10ac4:	add	r3, r3, r2
   10ac8:	str	r3, [r5, #8]
   10acc:	ble	10b58 <abort@plt+0x390>
   10ad0:	mov	r2, r4
   10ad4:	mov	r1, #99	; 0x63
   10ad8:	ldr	r0, [pc, #168]	; 10b88 <abort@plt+0x3c0>
   10adc:	bl	10708 <fgets@plt>
   10ae0:	cmp	r0, #0
   10ae4:	beq	10b58 <abort@plt+0x390>
   10ae8:	mov	r2, r4
   10aec:	mov	r1, #99	; 0x63
   10af0:	ldr	r0, [pc, #144]	; 10b88 <abort@plt+0x3c0>
   10af4:	bl	10708 <fgets@plt>
   10af8:	cmp	r0, #0
   10afc:	beq	10b58 <abort@plt+0x390>
   10b00:	mov	r2, r4
   10b04:	mov	r1, #99	; 0x63
   10b08:	ldr	r0, [pc, #120]	; 10b88 <abort@plt+0x3c0>
   10b0c:	bl	10708 <fgets@plt>
   10b10:	cmp	r0, #0
   10b14:	beq	10b58 <abort@plt+0x390>
   10b18:	ldr	r6, [pc, #104]	; 10b88 <abort@plt+0x3c0>
   10b1c:	ldr	r8, [pc, #124]	; 10ba0 <abort@plt+0x3d8>
   10b20:	mov	r7, #99	; 0x63
   10b24:	mov	r2, r4
   10b28:	mov	r1, r7
   10b2c:	mov	r0, r6
   10b30:	bl	10708 <fgets@plt>
   10b34:	cmp	r0, #0
   10b38:	beq	10b58 <abort@plt+0x390>
   10b3c:	add	r3, sp, #12
   10b40:	add	r2, sp, #8
   10b44:	mov	r1, r8
   10b48:	mov	r0, r6
   10b4c:	bl	10798 <__isoc99_sscanf@plt>
   10b50:	cmp	r0, #2
   10b54:	beq	10b68 <abort@plt+0x3a0>
   10b58:	mov	r0, r4
   10b5c:	bl	10dc8 <abort@plt+0x600>
   10b60:	add	sp, sp, #16
   10b64:	pop	{r4, r5, r6, r7, r8, pc}
   10b68:	ldr	r3, [sp, #12]
   10b6c:	ldr	r1, [sp, #8]
   10b70:	add	r3, r5, r3, lsl #2
   10b74:	ldr	r2, [r3, #12]
   10b78:	add	r2, r2, r1
   10b7c:	str	r2, [r3, #12]
   10b80:	b	10b24 <abort@plt+0x35c>
   10b84:	andeq	r1, r1, r0, lsr #7
   10b88:	andeq	r2, r2, ip, lsl #1
   10b8c:	andeq	r1, r1, r4, lsr #7
   10b90:	ldrdeq	r1, [r1], -r4
   10b94:	andeq	r1, r1, r8, lsl #8
   10b98:	muleq	r1, r8, r3
   10b9c:	andeq	r1, r1, ip, lsl #8
   10ba0:	andeq	r1, r1, r4, lsl #8
   10ba4:	mov	r3, r1
   10ba8:	push	{r4, r5, r6, r7, r8, lr}
   10bac:	mov	r5, r0
   10bb0:	ldr	r1, [pc, #180]	; 10c6c <abort@plt+0x4a4>
   10bb4:	mov	r0, r3
   10bb8:	bl	10ff4 <error@@Base+0xd0>
   10bbc:	ldr	r3, [pc, #172]	; 10c70 <abort@plt+0x4a8>
   10bc0:	ldr	r2, [pc, #172]	; 10c74 <abort@plt+0x4ac>
   10bc4:	ldr	r1, [pc, #172]	; 10c78 <abort@plt+0x4b0>
   10bc8:	mov	r6, r0
   10bcc:	bl	1078c <fprintf@plt>
   10bd0:	ldr	r2, [r5]
   10bd4:	ldr	r3, [pc, #160]	; 10c7c <abort@plt+0x4b4>
   10bd8:	ldr	r1, [pc, #160]	; 10c80 <abort@plt+0x4b8>
   10bdc:	mov	r0, r6
   10be0:	bl	1078c <fprintf@plt>
   10be4:	ldr	r2, [r5, #4]
   10be8:	ldr	r3, [pc, #148]	; 10c84 <abort@plt+0x4bc>
   10bec:	ldr	r1, [pc, #140]	; 10c80 <abort@plt+0x4b8>
   10bf0:	mov	r0, r6
   10bf4:	bl	1078c <fprintf@plt>
   10bf8:	ldr	r3, [pc, #136]	; 10c88 <abort@plt+0x4c0>
   10bfc:	ldr	r2, [r5, #8]
   10c00:	mov	r0, r6
   10c04:	ldr	r1, [pc, #116]	; 10c80 <abort@plt+0x4b8>
   10c08:	bl	1078c <fprintf@plt>
   10c0c:	ldr	r3, [r5, #8]
   10c10:	cmp	r3, #0
   10c14:	ble	10c60 <abort@plt+0x498>
   10c18:	mov	r3, r6
   10c1c:	mov	r2, #25
   10c20:	mov	r1, #1
   10c24:	ldr	r0, [pc, #96]	; 10c8c <abort@plt+0x4c4>
   10c28:	bl	10738 <fwrite@plt>
   10c2c:	ldr	r7, [pc, #92]	; 10c90 <abort@plt+0x4c8>
   10c30:	add	r5, r5, #12
   10c34:	mov	r4, #1
   10c38:	ldr	ip, [r5, #4]!
   10c3c:	mov	r3, r4
   10c40:	subs	r2, ip, #0
   10c44:	mov	r1, r7
   10c48:	mov	r0, r6
   10c4c:	add	r4, r4, #1
   10c50:	ble	10c58 <abort@plt+0x490>
   10c54:	bl	1078c <fprintf@plt>
   10c58:	cmp	r4, #101	; 0x65
   10c5c:	bne	10c38 <abort@plt+0x470>
   10c60:	mov	r0, r6
   10c64:	pop	{r4, r5, r6, r7, r8, lr}
   10c68:	b	10dc8 <abort@plt+0x600>
   10c6c:	andeq	r1, r1, r0, lsr #8
   10c70:	ldrdeq	r1, [r1], -r4
   10c74:	andeq	r1, r1, r4, lsr #7
   10c78:	andeq	r1, r1, r4, lsr #8
   10c7c:	andeq	r1, r1, ip, lsr #8
   10c80:	andeq	r1, r1, r8, lsr r4
   10c84:	andeq	r1, r1, r4, asr #8
   10c88:	andeq	r1, r1, r0, asr r4
   10c8c:	andeq	r1, r1, r8, asr r4
   10c90:	andeq	r1, r1, r4, ror r4
   10c94:	ldr	r3, [pc, #136]	; 10d24 <abort@plt+0x55c>
   10c98:	push	{r7, lr}
   10c9c:	mov	r9, r0
   10ca0:	ldr	r3, [r3]
   10ca4:	sub	sp, sp, #112	; 0x70
   10ca8:	cmp	r3, #0
   10cac:	beq	10cb4 <abort@plt+0x4ec>
   10cb0:	blx	r3
   10cb4:	ldr	r6, [pc, #108]	; 10d28 <abort@plt+0x560>
   10cb8:	ldrsh	r3, [r6]
   10cbc:	cmp	r3, #0
   10cc0:	ble	10d1c <abort@plt+0x554>
   10cc4:	ldr	r8, [pc, #96]	; 10d2c <abort@plt+0x564>
   10cc8:	ldr	r7, [pc, #96]	; 10d30 <abort@plt+0x568>
   10ccc:	mov	r4, #1
   10cd0:	ldr	r5, [r8]
   10cd4:	bl	10768 <getpid@plt>
   10cd8:	mov	r2, r5
   10cdc:	mov	r1, r7
   10ce0:	str	r4, [sp]
   10ce4:	add	r4, r4, #1
   10ce8:	sxth	r4, r4
   10cec:	mov	r3, r0
   10cf0:	add	r0, sp, #12
   10cf4:	bl	107b0 <sprintf@plt>
   10cf8:	add	r0, sp, #12
   10cfc:	bl	10714 <strdup@plt>
   10d00:	mov	r5, r0
   10d04:	bl	10720 <unlink@plt>
   10d08:	mov	r0, r5
   10d0c:	bl	106fc <free@plt>
   10d10:	ldrsh	r3, [r6]
   10d14:	cmp	r3, r4
   10d18:	bge	10cd0 <abort@plt+0x508>
   10d1c:	mov	r0, r9
   10d20:	bl	10774 <exit@plt>
   10d24:	muleq	r2, ip, r2
   10d28:	strdeq	r2, [r2], -r0
   10d2c:	muleq	r2, r8, r2
   10d30:	andeq	r1, r1, r0, lsl #9
   10d34:	ldrb	r3, [r0]
   10d38:	cmp	r3, #0
   10d3c:	beq	10da0 <abort@plt+0x5d8>
   10d40:	ldrb	ip, [r1]
   10d44:	cmp	ip, r3
   10d48:	bne	10db0 <abort@plt+0x5e8>
   10d4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d50:	mov	r2, #0
   10d54:	mov	lr, r1
   10d58:	b	10d68 <abort@plt+0x5a0>
   10d5c:	ldrb	ip, [lr, #1]!
   10d60:	cmp	r3, ip
   10d64:	bne	10d88 <abort@plt+0x5c0>
   10d68:	ldrb	r3, [r0, #1]!
   10d6c:	add	r2, r2, #1
   10d70:	cmp	r3, #0
   10d74:	bne	10d5c <abort@plt+0x594>
   10d78:	ldrb	ip, [r1, r2]
   10d7c:	cmp	ip, #0
   10d80:	movne	r3, #0
   10d84:	beq	10d98 <abort@plt+0x5d0>
   10d88:	cmp	r3, ip
   10d8c:	movcs	r0, #1
   10d90:	mvncc	r0, #0
   10d94:	pop	{pc}		; (ldr pc, [sp], #4)
   10d98:	mov	r0, ip
   10d9c:	pop	{pc}		; (ldr pc, [sp], #4)
   10da0:	ldrb	ip, [r1, r3]
   10da4:	cmp	ip, #0
   10da8:	movne	r3, #0
   10dac:	beq	10dc0 <abort@plt+0x5f8>
   10db0:	cmp	r3, ip
   10db4:	movcs	r0, #1
   10db8:	mvncc	r0, #0
   10dbc:	bx	lr
   10dc0:	mov	r0, ip
   10dc4:	bx	lr
   10dc8:	ldr	r2, [pc, #28]	; 10dec <abort@plt+0x624>
   10dcc:	ldr	r2, [r2]
   10dd0:	cmp	r2, r0
   10dd4:	bxeq	lr
   10dd8:	ldr	r2, [pc, #16]	; 10df0 <abort@plt+0x628>
   10ddc:	ldr	r2, [r2]
   10de0:	cmp	r0, r2
   10de4:	bxeq	lr
   10de8:	b	107a4 <fclose@plt>
   10dec:	andeq	r2, r2, r0, lsl #1
   10df0:	andeq	r2, r2, r4, lsl #1
   10df4:	push	{lr}		; (str lr, [sp, #-4]!)
   10df8:	sub	sp, sp, #92	; 0x5c
   10dfc:	mov	r1, r0
   10e00:	mov	r2, sp
   10e04:	mov	r0, #3
   10e08:	bl	1072c <__xstat@plt>
   10e0c:	clz	r0, r0
   10e10:	lsr	r0, r0, #5
   10e14:	add	sp, sp, #92	; 0x5c
   10e18:	pop	{pc}		; (ldr pc, [sp], #4)
   10e1c:	ldr	r3, [pc, #84]	; 10e78 <abort@plt+0x6b0>
   10e20:	push	{r4, r5, lr}
   10e24:	sub	sp, sp, #116	; 0x74
   10e28:	ldrh	r4, [r3]
   10e2c:	ldr	r2, [pc, #72]	; 10e7c <abort@plt+0x6b4>
   10e30:	add	r4, r4, #1
   10e34:	ldr	r5, [r2]
   10e38:	sxth	r4, r4
   10e3c:	strh	r4, [r3]
   10e40:	bl	10768 <getpid@plt>
   10e44:	mov	r2, r5
   10e48:	ldr	r1, [pc, #48]	; 10e80 <abort@plt+0x6b8>
   10e4c:	str	r4, [sp]
   10e50:	mov	r3, r0
   10e54:	add	r0, sp, #12
   10e58:	bl	107b0 <sprintf@plt>
   10e5c:	add	r0, sp, #12
   10e60:	bl	10714 <strdup@plt>
   10e64:	mov	r4, r0
   10e68:	bl	10720 <unlink@plt>
   10e6c:	mov	r0, r4
   10e70:	add	sp, sp, #116	; 0x74
   10e74:	pop	{r4, r5, pc}
   10e78:	strdeq	r2, [r2], -r0
   10e7c:	muleq	r2, r8, r2
   10e80:	andeq	r1, r1, r0, lsl #9
   10e84:	push	{r4, lr}
   10e88:	mov	r4, r0
   10e8c:	bl	10780 <strlen@plt>
   10e90:	sub	r0, r0, #1
   10e94:	sxth	r0, r0
   10e98:	cmp	r0, #0
   10e9c:	bge	10eb4 <abort@plt+0x6ec>
   10ea0:	b	10ec0 <abort@plt+0x6f8>
   10ea4:	sub	r0, r0, #1
   10ea8:	sxth	r0, r0
   10eac:	cmn	r0, #1
   10eb0:	beq	10ec0 <abort@plt+0x6f8>
   10eb4:	ldrb	r3, [r4, r0]
   10eb8:	cmp	r3, #47	; 0x2f
   10ebc:	bne	10ea4 <abort@plt+0x6dc>
   10ec0:	add	r0, r0, #1
   10ec4:	add	r0, r4, r0
   10ec8:	pop	{r4, pc}
   10ecc:	push	{r4, lr}
   10ed0:	mov	r0, #0
   10ed4:	bl	10c94 <abort@plt+0x4cc>
   10ed8:	ldr	r2, [pc, #52]	; 10f14 <abort@plt+0x74c>
   10edc:	push	{r4, lr}
   10ee0:	ldr	r2, [r2]
   10ee4:	cmp	r2, #0
   10ee8:	beq	10ef4 <abort@plt+0x72c>
   10eec:	blx	r2
   10ef0:	bl	10ecc <abort@plt+0x704>
   10ef4:	ldr	r1, [pc, #28]	; 10f18 <abort@plt+0x750>
   10ef8:	ldr	r2, [pc, #28]	; 10f1c <abort@plt+0x754>
   10efc:	mov	r3, r0
   10f00:	ldr	r0, [r1]
   10f04:	ldr	r2, [r2]
   10f08:	ldr	r1, [pc, #16]	; 10f20 <abort@plt+0x758>
   10f0c:	bl	1078c <fprintf@plt>
   10f10:	b	10ef0 <abort@plt+0x728>
   10f14:	muleq	r2, r4, r2
   10f18:	andeq	r2, r2, r8, ror r0
   10f1c:	muleq	r2, r8, r2
   10f20:	muleq	r1, r0, r4

00010f24 <error@@Base>:
   10f24:	ldr	r1, [pc, #36]	; 10f50 <error@@Base+0x2c>
   10f28:	ldr	r2, [pc, #36]	; 10f54 <error@@Base+0x30>
   10f2c:	mov	r3, r0
   10f30:	push	{r4, lr}
   10f34:	ldr	r0, [r1]
   10f38:	ldr	r2, [r2]
   10f3c:	ldr	r1, [pc, #20]	; 10f58 <error@@Base+0x34>
   10f40:	bl	1078c <fprintf@plt>
   10f44:	ldr	r3, [pc, #16]	; 10f5c <error@@Base+0x38>
   10f48:	ldr	r0, [r3]
   10f4c:	bl	10c94 <abort@plt+0x4cc>
   10f50:	andeq	r2, r2, r8, ror r0
   10f54:	muleq	r2, r8, r2
   10f58:	andeq	r1, r1, r0, lsr #9
   10f5c:	andeq	r2, r2, ip, rrx
   10f60:	push	{r4, lr}
   10f64:	bl	106d8 <calloc@plt>
   10f68:	cmp	r0, #0
   10f6c:	popne	{r4, pc}
   10f70:	ldr	r0, [pc]	; 10f78 <error@@Base+0x54>
   10f74:	bl	10f24 <error@@Base>
   10f78:	andeq	r1, r1, r8, lsr #9
   10f7c:	ldr	r3, [pc, #32]	; 10fa4 <error@@Base+0x80>
   10f80:	ldrb	r2, [r3, #2]
   10f84:	cmp	r2, #0
   10f88:	beq	10f90 <error@@Base+0x6c>
   10f8c:	bx	lr
   10f90:	push	{r4, lr}
   10f94:	mov	r2, #1
   10f98:	ldr	r0, [pc, #8]	; 10fa8 <error@@Base+0x84>
   10f9c:	strb	r2, [r3, #2]
   10fa0:	bl	10f24 <error@@Base>
   10fa4:	strdeq	r2, [r2], -r0
   10fa8:	andeq	r1, r1, r4, asr #9
   10fac:	ldr	r3, [pc, #48]	; 10fe4 <error@@Base+0xc0>
   10fb0:	push	{lr}		; (str lr, [sp, #-4]!)
   10fb4:	sub	sp, sp, #12
   10fb8:	ldr	r2, [pc, #40]	; 10fe8 <error@@Base+0xc4>
   10fbc:	str	r1, [sp]
   10fc0:	ldr	r1, [r3]
   10fc4:	ldr	r2, [r2]
   10fc8:	mov	r3, r0
   10fcc:	mov	r0, r1
   10fd0:	ldr	r1, [pc, #20]	; 10fec <error@@Base+0xc8>
   10fd4:	bl	1078c <fprintf@plt>
   10fd8:	ldr	r3, [pc, #16]	; 10ff0 <error@@Base+0xcc>
   10fdc:	ldr	r0, [r3]
   10fe0:	bl	10c94 <abort@plt+0x4cc>
   10fe4:	andeq	r2, r2, r8, ror r0
   10fe8:	muleq	r2, r8, r2
   10fec:	ldrdeq	r1, [r1], -r4
   10ff0:	andeq	r2, r2, ip, rrx
   10ff4:	subs	r2, r0, #0
   10ff8:	push	{r4, r5, r6, lr}
   10ffc:	mov	r4, r1
   11000:	beq	1102c <error@@Base+0x108>
   11004:	mov	r5, r2
   11008:	bl	106f0 <fopen@plt>
   1100c:	cmp	r0, #0
   11010:	popne	{r4, r5, r6, pc}
   11014:	ldrb	r3, [r4]
   11018:	mov	r1, r5
   1101c:	cmp	r3, #119	; 0x77
   11020:	beq	11044 <error@@Base+0x120>
   11024:	ldr	r0, [pc, #32]	; 1104c <error@@Base+0x128>
   11028:	bl	10fac <error@@Base+0x88>
   1102c:	ldrb	r3, [r1]
   11030:	cmp	r3, #114	; 0x72
   11034:	ldreq	r3, [pc, #20]	; 11050 <error@@Base+0x12c>
   11038:	ldrne	r3, [pc, #20]	; 11054 <error@@Base+0x130>
   1103c:	ldr	r0, [r3]
   11040:	pop	{r4, r5, r6, pc}
   11044:	ldr	r0, [pc, #12]	; 11058 <error@@Base+0x134>
   11048:	bl	10fac <error@@Base+0x88>
   1104c:	strdeq	r1, [r1], -ip
   11050:	andeq	r2, r2, r0, lsl #1
   11054:	andeq	r2, r2, r4, lsl #1
   11058:	andeq	r1, r1, r4, ror #9
   1105c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11060:	sub	sp, sp, #20
   11064:	ldr	r4, [r1]
   11068:	str	r0, [sp, #8]
   1106c:	mov	r0, r4
   11070:	mov	r9, r1
   11074:	str	r2, [sp, #12]
   11078:	mov	r6, r3
   1107c:	bl	10780 <strlen@plt>
   11080:	sub	r0, r0, #1
   11084:	sxth	r0, r0
   11088:	cmp	r0, #0
   1108c:	bge	110a4 <error@@Base+0x180>
   11090:	b	110b0 <error@@Base+0x18c>
   11094:	sub	r0, r0, #1
   11098:	sxth	r0, r0
   1109c:	cmn	r0, #1
   110a0:	beq	110b0 <error@@Base+0x18c>
   110a4:	ldrb	r3, [r4, r0]
   110a8:	cmp	r3, #47	; 0x2f
   110ac:	bne	11094 <error@@Base+0x170>
   110b0:	ldr	r3, [pc, #460]	; 11284 <error@@Base+0x360>
   110b4:	add	r0, r0, #1
   110b8:	add	r4, r4, r0
   110bc:	ldr	r1, [pc, #452]	; 11288 <error@@Base+0x364>
   110c0:	mov	r0, #2
   110c4:	str	r4, [r3]
   110c8:	bl	10750 <__sysv_signal@plt>
   110cc:	ldr	r1, [pc, #436]	; 11288 <error@@Base+0x364>
   110d0:	mov	r0, #15
   110d4:	bl	10750 <__sysv_signal@plt>
   110d8:	ldr	r3, [sp, #8]
   110dc:	ldr	fp, [r3]
   110e0:	cmp	fp, #1
   110e4:	beq	11218 <error@@Base+0x2f4>
   110e8:	movgt	sl, #1
   110ec:	mov	r7, #0
   110f0:	movgt	r4, sl
   110f4:	bgt	1111c <error@@Base+0x1f8>
   110f8:	b	11228 <error@@Base+0x304>
   110fc:	add	r3, r7, #1
   11100:	str	r5, [r9, r7, lsl #2]
   11104:	sxth	r7, r3
   11108:	add	r4, r4, #1
   1110c:	sxth	r4, r4
   11110:	cmp	r4, fp
   11114:	mov	sl, r4
   11118:	bge	11228 <error@@Base+0x304>
   1111c:	ldr	r5, [r9, r4, lsl #2]
   11120:	lsl	r3, r4, #2
   11124:	ldrb	r2, [r5]
   11128:	cmp	r2, #45	; 0x2d
   1112c:	bne	110fc <error@@Base+0x1d8>
   11130:	ldrb	r8, [r5, #1]
   11134:	str	r3, [sp, #4]
   11138:	cmp	r8, #0
   1113c:	beq	110fc <error@@Base+0x1d8>
   11140:	mov	r0, r5
   11144:	bl	10780 <strlen@plt>
   11148:	mov	r1, r5
   1114c:	mov	r2, r0
   11150:	ldr	r0, [pc, #308]	; 1128c <error@@Base+0x368>
   11154:	bl	107bc <strncmp@plt>
   11158:	cmp	r0, #0
   1115c:	beq	11270 <error@@Base+0x34c>
   11160:	add	sl, sl, #1
   11164:	cmp	sl, fp
   11168:	movge	r0, #0
   1116c:	ldrlt	r3, [sp, #4]
   11170:	addlt	r3, r9, r3
   11174:	ldrlt	r0, [r3, #4]
   11178:	cmp	r6, #0
   1117c:	beq	111c0 <error@@Base+0x29c>
   11180:	ldrb	r3, [r6]
   11184:	cmp	r3, #0
   11188:	beq	111c0 <error@@Base+0x29c>
   1118c:	cmp	r3, r8
   11190:	beq	111cc <error@@Base+0x2a8>
   11194:	mov	r3, #0
   11198:	b	111a4 <error@@Base+0x280>
   1119c:	cmp	r8, r1
   111a0:	beq	111d0 <error@@Base+0x2ac>
   111a4:	add	r3, r3, #1
   111a8:	sxth	r3, r3
   111ac:	add	r2, r3, r3, lsl #1
   111b0:	ldrb	r1, [r6, r2, lsl #2]
   111b4:	add	r2, r6, r2, lsl #2
   111b8:	cmp	r1, #0
   111bc:	bne	1119c <error@@Base+0x278>
   111c0:	mov	r1, r5
   111c4:	ldr	r0, [pc, #196]	; 11290 <error@@Base+0x36c>
   111c8:	bl	10fac <error@@Base+0x88>
   111cc:	mov	r2, r6
   111d0:	ldr	r3, [r2, #4]
   111d4:	cmp	r3, #0
   111d8:	beq	11238 <error@@Base+0x314>
   111dc:	ldrb	r1, [r5, #2]
   111e0:	cmp	r0, #0
   111e4:	cmpeq	r1, #0
   111e8:	beq	11238 <error@@Base+0x314>
   111ec:	ldr	r2, [r3]
   111f0:	cmp	r2, #0
   111f4:	bne	11278 <error@@Base+0x354>
   111f8:	cmp	r1, #0
   111fc:	addne	r0, r5, #2
   11200:	str	r0, [r3]
   11204:	ldrb	r3, [r5, #2]
   11208:	cmp	r3, #0
   1120c:	addeq	r4, r4, #1
   11210:	sxtheq	r4, r4
   11214:	b	11108 <error@@Base+0x1e4>
   11218:	ldr	r3, [pc, #116]	; 11294 <error@@Base+0x370>
   1121c:	ldrb	r7, [r3, #4]
   11220:	cmp	r7, #0
   11224:	bne	11270 <error@@Base+0x34c>
   11228:	ldr	r3, [sp, #8]
   1122c:	str	r7, [r3]
   11230:	add	sp, sp, #20
   11234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11238:	ldr	r3, [r2, #8]
   1123c:	cmp	r3, #0
   11240:	beq	111c0 <error@@Base+0x29c>
   11244:	ldrb	r2, [r5, #2]
   11248:	cmp	r2, #0
   1124c:	bne	111c0 <error@@Base+0x29c>
   11250:	ldrb	r2, [r3]
   11254:	cmp	r2, #0
   11258:	bne	11278 <error@@Base+0x354>
   1125c:	mov	r2, #1
   11260:	strb	r2, [r3]
   11264:	ldr	r3, [sp, #8]
   11268:	ldr	fp, [r3]
   1126c:	b	11108 <error@@Base+0x1e4>
   11270:	ldr	r0, [sp, #12]
   11274:	bl	10ed8 <abort@plt+0x710>
   11278:	mov	r1, r5
   1127c:	ldr	r0, [pc, #20]	; 11298 <error@@Base+0x374>
   11280:	bl	10fac <error@@Base+0x88>
   11284:	muleq	r2, r8, r2
   11288:	andeq	r0, r1, ip, ror pc
   1128c:	andeq	r1, r1, r0, lsl r5
   11290:	andeq	r1, r1, r8, lsl r5
   11294:	andeq	r2, r2, ip, rrx
   11298:	andeq	r1, r1, r8, lsr #10
   1129c:	ldr	r3, [pc, #44]	; 112d0 <error@@Base+0x3ac>
   112a0:	push	{lr}		; (str lr, [sp, #-4]!)
   112a4:	sub	sp, sp, #12
   112a8:	ldr	r2, [pc, #36]	; 112d4 <error@@Base+0x3b0>
   112ac:	str	r1, [sp]
   112b0:	ldr	r1, [r3]
   112b4:	ldr	r2, [r2]
   112b8:	mov	r3, r0
   112bc:	mov	r0, r1
   112c0:	ldr	r1, [pc, #16]	; 112d8 <error@@Base+0x3b4>
   112c4:	bl	1078c <fprintf@plt>
   112c8:	add	sp, sp, #12
   112cc:	pop	{pc}		; (ldr pc, [sp], #4)
   112d0:	andeq	r2, r2, r8, ror r0
   112d4:	muleq	r2, r8, r2
   112d8:	ldrdeq	r1, [r1], -r4
   112dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   112e0:	mov	r7, r0
   112e4:	ldr	r6, [pc, #72]	; 11334 <error@@Base+0x410>
   112e8:	ldr	r5, [pc, #72]	; 11338 <error@@Base+0x414>
   112ec:	add	r6, pc, r6
   112f0:	add	r5, pc, r5
   112f4:	sub	r6, r6, r5
   112f8:	mov	r8, r1
   112fc:	mov	r9, r2
   11300:	bl	106b8 <calloc@plt-0x20>
   11304:	asrs	r6, r6, #2
   11308:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1130c:	mov	r4, #0
   11310:	add	r4, r4, #1
   11314:	ldr	r3, [r5], #4
   11318:	mov	r2, r9
   1131c:	mov	r1, r8
   11320:	mov	r0, r7
   11324:	blx	r3
   11328:	cmp	r6, r4
   1132c:	bne	11310 <error@@Base+0x3ec>
   11330:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11334:	andeq	r0, r1, ip, lsl #24
   11338:	andeq	r0, r1, r4, lsl #24
   1133c:	bx	lr

Disassembly of section .fini:

00011340 <.fini>:
   11340:	push	{r3, lr}
   11344:	pop	{r3, pc}
