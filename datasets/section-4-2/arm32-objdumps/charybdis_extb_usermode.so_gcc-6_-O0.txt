
../repos/charybdis/extensions/.libs/extb_usermode.so:     file format elf32-littlearm


Disassembly of section .init:

0000039c <_init>:
 39c:	push	{r3, lr}
 3a0:	bl	3d4 <call_weak_fn>
 3a4:	pop	{r3, pc}

Disassembly of section .plt:

000003a8 <.plt>:
 3a8:	push	{lr}		; (str lr, [sp, #-4]!)
 3ac:	ldr	lr, [pc, #4]	; 3b8 <.plt+0x10>
 3b0:	add	lr, pc, lr
 3b4:	ldr	pc, [lr, #8]!
 3b8:	.word	0x00010c48

000003bc <__cxa_finalize@plt>:
 3bc:	add	ip, pc, #0, 12
 3c0:	add	ip, ip, #16, 20	; 0x10000
 3c4:	ldr	pc, [ip, #3144]!	; 0xc48

000003c8 <__gmon_start__@plt>:
 3c8:	add	ip, pc, #0, 12
 3cc:	add	ip, ip, #16, 20	; 0x10000
 3d0:	ldr	pc, [ip, #3136]!	; 0xc40

Disassembly of section .text:

000003d4 <call_weak_fn>:
 3d4:	ldr	r3, [pc, #20]	; 3f0 <call_weak_fn+0x1c>
 3d8:	ldr	r2, [pc, #20]	; 3f4 <call_weak_fn+0x20>
 3dc:	add	r3, pc, r3
 3e0:	ldr	r2, [r3, r2]
 3e4:	cmp	r2, #0
 3e8:	bxeq	lr
 3ec:	b	3c8 <__gmon_start__@plt>
 3f0:	.word	0x00010c1c
 3f4:	.word	0x00000020

000003f8 <deregister_tm_clones>:
 3f8:	ldr	r3, [pc, #52]	; 434 <deregister_tm_clones+0x3c>
 3fc:	ldr	r0, [pc, #52]	; 438 <deregister_tm_clones+0x40>
 400:	add	r3, pc, r3
 404:	add	r0, pc, r0
 408:	add	r3, r3, #3
 40c:	sub	r3, r3, r0
 410:	cmp	r3, #6
 414:	ldr	r3, [pc, #32]	; 43c <deregister_tm_clones+0x44>
 418:	add	r3, pc, r3
 41c:	bxls	lr
 420:	ldr	r2, [pc, #24]	; 440 <deregister_tm_clones+0x48>
 424:	ldr	r3, [r3, r2]
 428:	cmp	r3, #0
 42c:	bxeq	lr
 430:	bx	r3
 434:	.word	0x00010c54
 438:	.word	0x00010c50
 43c:	.word	0x00010be0
 440:	.word	0x00000018

00000444 <register_tm_clones>:
 444:	ldr	r1, [pc, #56]	; 484 <register_tm_clones+0x40>
 448:	ldr	r0, [pc, #56]	; 488 <register_tm_clones+0x44>
 44c:	add	r1, pc, r1
 450:	add	r0, pc, r0
 454:	sub	r1, r1, r0
 458:	ldr	r3, [pc, #44]	; 48c <register_tm_clones+0x48>
 45c:	asr	r1, r1, #2
 460:	add	r3, pc, r3
 464:	add	r1, r1, r1, lsr #31
 468:	asrs	r1, r1, #1
 46c:	bxeq	lr
 470:	ldr	r2, [pc, #24]	; 490 <register_tm_clones+0x4c>
 474:	ldr	r3, [r3, r2]
 478:	cmp	r3, #0
 47c:	bxeq	lr
 480:	bx	r3
 484:	.word	0x00010c08
 488:	.word	0x00010c04
 48c:	.word	0x00010b98
 490:	.word	0x0000002c

00000494 <__do_global_dtors_aux>:
 494:	ldr	r3, [pc, #76]	; 4e8 <__do_global_dtors_aux+0x54>
 498:	ldr	r2, [pc, #76]	; 4ec <__do_global_dtors_aux+0x58>
 49c:	add	r3, pc, r3
 4a0:	add	r2, pc, r2
 4a4:	ldrb	r3, [r3]
 4a8:	cmp	r3, #0
 4ac:	bxne	lr
 4b0:	ldr	r3, [pc, #56]	; 4f0 <__do_global_dtors_aux+0x5c>
 4b4:	push	{r4, lr}
 4b8:	ldr	r3, [r2, r3]
 4bc:	cmp	r3, #0
 4c0:	beq	4d0 <__do_global_dtors_aux+0x3c>
 4c4:	ldr	r3, [pc, #40]	; 4f4 <__do_global_dtors_aux+0x60>
 4c8:	ldr	r0, [pc, r3]
 4cc:	bl	3bc <__cxa_finalize@plt>
 4d0:	bl	3f8 <deregister_tm_clones>
 4d4:	ldr	r3, [pc, #28]	; 4f8 <__do_global_dtors_aux+0x64>
 4d8:	mov	r2, #1
 4dc:	add	r3, pc, r3
 4e0:	strb	r2, [r3]
 4e4:	pop	{r4, pc}
 4e8:	.word	0x00010bb8
 4ec:	.word	0x00010b58
 4f0:	.word	0x00000014
 4f4:	.word	0x00010b60
 4f8:	.word	0x00010b78

000004fc <frame_dummy>:
 4fc:	ldr	r0, [pc, #56]	; 53c <frame_dummy+0x40>
 500:	ldr	r3, [pc, #56]	; 540 <frame_dummy+0x44>
 504:	add	r0, pc, r0
 508:	ldr	r2, [r0]
 50c:	add	r3, pc, r3
 510:	cmp	r2, #0
 514:	bne	51c <frame_dummy+0x20>
 518:	b	444 <register_tm_clones>
 51c:	ldr	r2, [pc, #32]	; 544 <frame_dummy+0x48>
 520:	ldr	r3, [r3, r2]
 524:	cmp	r3, #0
 528:	beq	518 <frame_dummy+0x1c>
 52c:	push	{r4, lr}
 530:	blx	r3
 534:	pop	{r4, lr}
 538:	b	444 <register_tm_clones>
 53c:	.word	0x000109f0
 540:	.word	0x00010aec
 544:	.word	0x00000024

00000548 <_modinit>:
 548:	push	{fp}		; (str fp, [sp, #-4]!)
 54c:	add	fp, sp, #0
 550:	ldr	r2, [pc, #40]	; 580 <_modinit+0x38>
 554:	add	r2, pc, r2
 558:	ldr	r3, [pc, #36]	; 584 <_modinit+0x3c>
 55c:	ldr	r3, [r2, r3]
 560:	ldr	r2, [pc, #32]	; 588 <_modinit+0x40>
 564:	add	r2, pc, r2
 568:	str	r2, [r3, #468]	; 0x1d4
 56c:	mov	r3, #0
 570:	mov	r0, r3
 574:	add	sp, fp, #0
 578:	pop	{fp}		; (ldr fp, [sp], #4)
 57c:	bx	lr
 580:	.word	0x00010aa4
 584:	.word	0x00000028
 588:	.word	0x00000058

0000058c <_moddeinit>:
 58c:	push	{fp}		; (str fp, [sp, #-4]!)
 590:	add	fp, sp, #0
 594:	ldr	r2, [pc, #32]	; 5bc <_moddeinit+0x30>
 598:	add	r2, pc, r2
 59c:	ldr	r3, [pc, #28]	; 5c0 <_moddeinit+0x34>
 5a0:	ldr	r3, [r2, r3]
 5a4:	mov	r2, #0
 5a8:	str	r2, [r3, #468]	; 0x1d4
 5ac:	nop			; (mov r0, r0)
 5b0:	add	sp, fp, #0
 5b4:	pop	{fp}		; (ldr fp, [sp], #4)
 5b8:	bx	lr
 5bc:	.word	0x00010a60
 5c0:	.word	0x00000028

000005c4 <eb_usermode>:
 5c4:	push	{fp}		; (str fp, [sp, #-4]!)
 5c8:	add	fp, sp, #0
 5cc:	sub	sp, sp, #36	; 0x24
 5d0:	str	r0, [fp, #-24]	; 0xffffffe8
 5d4:	str	r1, [fp, #-28]	; 0xffffffe4
 5d8:	str	r2, [fp, #-32]	; 0xffffffe0
 5dc:	str	r3, [fp, #-36]	; 0xffffffdc
 5e0:	ldr	r3, [pc, #320]	; 728 <eb_usermode+0x164>
 5e4:	add	r3, pc, r3
 5e8:	mov	r2, #1
 5ec:	str	r2, [fp, #-8]
 5f0:	mov	r2, #0
 5f4:	str	r2, [fp, #-12]
 5f8:	mov	r2, #0
 5fc:	str	r2, [fp, #-16]
 600:	ldr	r2, [fp, #-24]	; 0xffffffe8
 604:	cmp	r2, #0
 608:	bne	614 <eb_usermode+0x50>
 60c:	mvn	r3, #0
 610:	b	718 <eb_usermode+0x154>
 614:	ldr	r2, [fp, #-24]	; 0xffffffe8
 618:	str	r2, [fp, #-20]	; 0xffffffec
 61c:	b	6c8 <eb_usermode+0x104>
 620:	ldr	r2, [fp, #-20]	; 0xffffffec
 624:	ldrb	r2, [r2]
 628:	cmp	r2, #43	; 0x2b
 62c:	beq	63c <eb_usermode+0x78>
 630:	cmp	r2, #45	; 0x2d
 634:	beq	648 <eb_usermode+0x84>
 638:	b	654 <eb_usermode+0x90>
 63c:	mov	r2, #1
 640:	str	r2, [fp, #-8]
 644:	b	6bc <eb_usermode+0xf8>
 648:	mvn	r2, #0
 64c:	str	r2, [fp, #-8]
 650:	b	6bc <eb_usermode+0xf8>
 654:	ldr	r2, [fp, #-8]
 658:	cmn	r2, #1
 65c:	bne	68c <eb_usermode+0xc8>
 660:	ldr	r2, [fp, #-20]	; 0xffffffec
 664:	ldrb	r2, [r2]
 668:	mov	r1, r2
 66c:	ldr	r2, [pc, #184]	; 72c <eb_usermode+0x168>
 670:	ldr	r2, [r3, r2]
 674:	ldr	r2, [r2, r1, lsl #2]
 678:	mov	r1, r2
 67c:	ldr	r2, [fp, #-16]
 680:	orr	r2, r2, r1
 684:	str	r2, [fp, #-16]
 688:	b	6b8 <eb_usermode+0xf4>
 68c:	ldr	r2, [fp, #-20]	; 0xffffffec
 690:	ldrb	r2, [r2]
 694:	mov	r1, r2
 698:	ldr	r2, [pc, #140]	; 72c <eb_usermode+0x168>
 69c:	ldr	r2, [r3, r2]
 6a0:	ldr	r2, [r2, r1, lsl #2]
 6a4:	mov	r1, r2
 6a8:	ldr	r2, [fp, #-12]
 6ac:	orr	r2, r2, r1
 6b0:	str	r2, [fp, #-12]
 6b4:	nop			; (mov r0, r0)
 6b8:	nop			; (mov r0, r0)
 6bc:	ldr	r2, [fp, #-20]	; 0xffffffec
 6c0:	add	r2, r2, #1
 6c4:	str	r2, [fp, #-20]	; 0xffffffec
 6c8:	ldr	r2, [fp, #-20]	; 0xffffffec
 6cc:	ldrb	r2, [r2]
 6d0:	cmp	r2, #0
 6d4:	bne	620 <eb_usermode+0x5c>
 6d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 6dc:	ldr	r2, [r3, #56]	; 0x38
 6e0:	ldr	r3, [fp, #-12]
 6e4:	and	r2, r2, r3
 6e8:	ldr	r3, [fp, #-12]
 6ec:	cmp	r2, r3
 6f0:	bne	714 <eb_usermode+0x150>
 6f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 6f8:	ldr	r2, [r3, #56]	; 0x38
 6fc:	ldr	r3, [fp, #-16]
 700:	and	r3, r3, r2
 704:	cmp	r3, #0
 708:	bne	714 <eb_usermode+0x150>
 70c:	mov	r3, #1
 710:	b	718 <eb_usermode+0x154>
 714:	mov	r3, #0
 718:	mov	r0, r3
 71c:	add	sp, fp, #0
 720:	pop	{fp}		; (ldr fp, [sp], #4)
 724:	bx	lr
 728:	.word	0x00010a14
 72c:	.word	0x0000001c

Disassembly of section .fini:

00000730 <_fini>:
 730:	push	{r3, lr}
 734:	pop	{r3, pc}
