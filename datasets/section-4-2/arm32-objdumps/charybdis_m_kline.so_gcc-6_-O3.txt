
../repos/charybdis/modules/.libs/m_kline.so:     file format elf32-littlearm


Disassembly of section .init:

00000be8 <_init>:
 be8:	push	{r3, lr}
 bec:	bl	e18 <call_weak_fn>
 bf0:	pop	{r3, pc}

Disassembly of section .plt:

00000bf4 <.plt>:
 bf4:	push	{lr}		; (str lr, [sp, #-4]!)
 bf8:	ldr	lr, [pc, #4]	; c04 <.plt+0x10>
 bfc:	add	lr, pc, lr
 c00:	ldr	pc, [lr, #8]!
 c04:	.word	0x000133fc

00000c08 <propagate_generic@plt>:
 c08:	add	ip, pc, #0, 12
 c0c:	add	ip, ip, #77824	; 0x13000
 c10:	ldr	pc, [ip, #1020]!	; 0x3fc

00000c14 <make_conf@plt>:
 c14:	add	ip, pc, #0, 12
 c18:	add	ip, ip, #77824	; 0x13000
 c1c:	ldr	pc, [ip, #1012]!	; 0x3f4

00000c20 <parse_netmask_strict@plt>:
 c20:	add	ip, pc, #0, 12
 c24:	add	ip, ip, #77824	; 0x13000
 c28:	ldr	pc, [ip, #1004]!	; 0x3ec

00000c2c <raise@plt>:
 c2c:	add	ip, pc, #0, 12
 c30:	add	ip, ip, #77824	; 0x13000
 c34:	ldr	pc, [ip, #996]!	; 0x3e4

00000c38 <rb_current_time@plt>:
 c38:	add	ip, pc, #0, 12
 c3c:	add	ip, ip, #77824	; 0x13000
 c40:	ldr	pc, [ip, #988]!	; 0x3dc

00000c44 <__cxa_finalize@plt>:
 c44:	add	ip, pc, #0, 12
 c48:	add	ip, ip, #77824	; 0x13000
 c4c:	ldr	pc, [ip, #980]!	; 0x3d4

00000c50 <strtol@plt>:
 c50:	add	ip, pc, #0, 12
 c54:	add	ip, ip, #77824	; 0x13000
 c58:	ldr	pc, [ip, #972]!	; 0x3cc

00000c5c <sendto_one@plt>:
 c5c:	add	ip, pc, #0, 12
 c60:	add	ip, ip, #77824	; 0x13000
 c64:	ldr	pc, [ip, #964]!	; 0x3c4

00000c68 <find_conf_by_address@plt>:
 c68:	add	ip, pc, #0, 12
 c6c:	add	ip, ip, #77824	; 0x13000
 c70:	ldr	pc, [ip, #956]!	; 0x3bc

00000c74 <add_temp_kline@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #77824	; 0x13000
 c7c:	ldr	pc, [ip, #948]!	; 0x3b4

00000c80 <replace_old_ban@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #77824	; 0x13000
 c88:	ldr	pc, [ip, #940]!	; 0x3ac

00000c8c <memcpy@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #77824	; 0x13000
 c94:	ldr	pc, [ip, #932]!	; 0x3a4

00000c98 <rb_outofmemory@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #77824	; 0x13000
 ca0:	ldr	pc, [ip, #924]!	; 0x39c

00000ca4 <operhash_delete@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #77824	; 0x13000
 cac:	ldr	pc, [ip, #916]!	; 0x394

00000cb0 <sendto_realops_snomask@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #77824	; 0x13000
 cb8:	ldr	pc, [ip, #908]!	; 0x38c

00000cbc <bandb_add@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #77824	; 0x13000
 cc4:	ldr	pc, [ip, #900]!	; 0x384

00000cc8 <deactivate_conf@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #77824	; 0x13000
 cd0:	ldr	pc, [ip, #892]!	; 0x37c

00000cd4 <get_oper_name@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #77824	; 0x13000
 cdc:	ldr	pc, [ip, #884]!	; 0x374

00000ce0 <rb_free_rb_dlink_node@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #77824	; 0x13000
 ce8:	ldr	pc, [ip, #876]!	; 0x36c

00000cec <cluster_generic@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #77824	; 0x13000
 cf4:	ldr	pc, [ip, #868]!	; 0x364

00000cf8 <operhash_add@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #77824	; 0x13000
 d00:	ldr	pc, [ip, #860]!	; 0x35c

00000d04 <check_one_kline@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #77824	; 0x13000
 d0c:	ldr	pc, [ip, #852]!	; 0x354

00000d10 <sendto_server@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #77824	; 0x13000
 d18:	ldr	pc, [ip, #844]!	; 0x34c

00000d1c <rb_set_time@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #77824	; 0x13000
 d24:	ldr	pc, [ip, #836]!	; 0x344

00000d28 <valid_wild_card@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #77824	; 0x13000
 d30:	ldr	pc, [ip, #828]!	; 0x33c

00000d34 <malloc@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #77824	; 0x13000
 d3c:	ldr	pc, [ip, #820]!	; 0x334

00000d40 <add_conf_by_address@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #77824	; 0x13000
 d48:	ldr	pc, [ip, #812]!	; 0x32c

00000d4c <__gmon_start__@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #77824	; 0x13000
 d54:	ldr	pc, [ip, #804]!	; 0x324

00000d58 <rb_make_rb_dlink_node@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #77824	; 0x13000
 d60:	ldr	pc, [ip, #796]!	; 0x31c

00000d64 <strlen@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #77824	; 0x13000
 d6c:	ldr	pc, [ip, #788]!	; 0x314

00000d70 <strchr@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #77824	; 0x13000
 d78:	ldr	pc, [ip, #780]!	; 0x30c

00000d7c <delete_one_address_conf@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #77824	; 0x13000
 d84:	ldr	pc, [ip, #772]!	; 0x304

00000d88 <ilog@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #77824	; 0x13000
 d90:	ldr	pc, [ip, #764]!	; 0x2fc

00000d94 <match@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #77824	; 0x13000
 d9c:	ldr	pc, [ip, #756]!	; 0x2f4

00000da0 <valid_temp_time@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #77824	; 0x13000
 da8:	ldr	pc, [ip, #748]!	; 0x2ec

00000dac <remove_reject_mask@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #77824	; 0x13000
 db4:	ldr	pc, [ip, #740]!	; 0x2e4

00000db8 <sendto_one_notice@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #77824	; 0x13000
 dc0:	ldr	pc, [ip, #732]!	; 0x2dc

00000dc4 <bandb_del@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #77824	; 0x13000
 dcc:	ldr	pc, [ip, #724]!	; 0x2d4

00000dd0 <find_exact_conf_by_address@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #77824	; 0x13000
 dd8:	ldr	pc, [ip, #716]!	; 0x2cc

00000ddc <rb_strlcpy@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #77824	; 0x13000
 de4:	ldr	pc, [ip, #708]!	; 0x2c4

00000de8 <find_shared_conf@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #77824	; 0x13000
 df0:	ldr	pc, [ip, #700]!	; 0x2bc

00000df4 <privilegeset_in_set@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #77824	; 0x13000
 dfc:	ldr	pc, [ip, #692]!	; 0x2b4

00000e00 <irccmp@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #77824	; 0x13000
 e08:	ldr	pc, [ip, #684]!	; 0x2ac

00000e0c <__assert_fail@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #77824	; 0x13000
 e14:	ldr	pc, [ip, #676]!	; 0x2a4

Disassembly of section .text:

00000e18 <call_weak_fn>:
     e18:	ldr	r3, [pc, #20]	; e34 <call_weak_fn+0x1c>
     e1c:	ldr	r2, [pc, #20]	; e38 <call_weak_fn+0x20>
     e20:	add	r3, pc, r3
     e24:	ldr	r2, [r3, r2]
     e28:	cmp	r2, #0
     e2c:	bxeq	lr
     e30:	b	d4c <__gmon_start__@plt>
     e34:	.word	0x000131d8
     e38:	.word	0x000000d4

00000e3c <deregister_tm_clones>:
     e3c:	ldr	r3, [pc, #52]	; e78 <deregister_tm_clones+0x3c>
     e40:	ldr	r0, [pc, #52]	; e7c <deregister_tm_clones+0x40>
     e44:	add	r3, pc, r3
     e48:	add	r0, pc, r0
     e4c:	add	r3, r3, #3
     e50:	sub	r3, r3, r0
     e54:	cmp	r3, #6
     e58:	ldr	r3, [pc, #32]	; e80 <deregister_tm_clones+0x44>
     e5c:	add	r3, pc, r3
     e60:	bxls	lr
     e64:	ldr	r2, [pc, #24]	; e84 <deregister_tm_clones+0x48>
     e68:	ldr	r3, [r3, r2]
     e6c:	cmp	r3, #0
     e70:	bxeq	lr
     e74:	bx	r3
     e78:	.word	0x00013368
     e7c:	.word	0x00013364
     e80:	.word	0x0001319c
     e84:	.word	0x000000c4

00000e88 <register_tm_clones>:
     e88:	ldr	r1, [pc, #56]	; ec8 <register_tm_clones+0x40>
     e8c:	ldr	r0, [pc, #56]	; ecc <register_tm_clones+0x44>
     e90:	add	r1, pc, r1
     e94:	add	r0, pc, r0
     e98:	sub	r1, r1, r0
     e9c:	ldr	r3, [pc, #44]	; ed0 <register_tm_clones+0x48>
     ea0:	asr	r1, r1, #2
     ea4:	add	r3, pc, r3
     ea8:	add	r1, r1, r1, lsr #31
     eac:	asrs	r1, r1, #1
     eb0:	bxeq	lr
     eb4:	ldr	r2, [pc, #24]	; ed4 <register_tm_clones+0x4c>
     eb8:	ldr	r3, [r3, r2]
     ebc:	cmp	r3, #0
     ec0:	bxeq	lr
     ec4:	bx	r3
     ec8:	.word	0x0001331c
     ecc:	.word	0x00013318
     ed0:	.word	0x00013154
     ed4:	.word	0x000000e8

00000ed8 <__do_global_dtors_aux>:
     ed8:	ldr	r3, [pc, #76]	; f2c <__do_global_dtors_aux+0x54>
     edc:	ldr	r2, [pc, #76]	; f30 <__do_global_dtors_aux+0x58>
     ee0:	add	r3, pc, r3
     ee4:	add	r2, pc, r2
     ee8:	ldrb	r3, [r3]
     eec:	cmp	r3, #0
     ef0:	bxne	lr
     ef4:	ldr	r3, [pc, #56]	; f34 <__do_global_dtors_aux+0x5c>
     ef8:	push	{r4, lr}
     efc:	ldr	r3, [r2, r3]
     f00:	cmp	r3, #0
     f04:	beq	f14 <__do_global_dtors_aux+0x3c>
     f08:	ldr	r3, [pc, #40]	; f38 <__do_global_dtors_aux+0x60>
     f0c:	ldr	r0, [pc, r3]
     f10:	bl	c44 <__cxa_finalize@plt>
     f14:	bl	e3c <deregister_tm_clones>
     f18:	ldr	r3, [pc, #28]	; f3c <__do_global_dtors_aux+0x64>
     f1c:	mov	r2, #1
     f20:	add	r3, pc, r3
     f24:	strb	r2, [r3]
     f28:	pop	{r4, pc}
     f2c:	.word	0x000132cc
     f30:	.word	0x00013114
     f34:	.word	0x000000bc
     f38:	.word	0x000131e0
     f3c:	.word	0x0001328c

00000f40 <frame_dummy>:
     f40:	ldr	r0, [pc, #56]	; f80 <frame_dummy+0x40>
     f44:	ldr	r3, [pc, #56]	; f84 <frame_dummy+0x44>
     f48:	add	r0, pc, r0
     f4c:	ldr	r2, [r0]
     f50:	add	r3, pc, r3
     f54:	cmp	r2, #0
     f58:	bne	f60 <frame_dummy+0x20>
     f5c:	b	e88 <register_tm_clones>
     f60:	ldr	r2, [pc, #32]	; f88 <frame_dummy+0x48>
     f64:	ldr	r3, [r3, r2]
     f68:	cmp	r3, #0
     f6c:	beq	f5c <frame_dummy+0x1c>
     f70:	push	{r4, lr}
     f74:	blx	r3
     f78:	pop	{r4, lr}
     f7c:	b	e88 <register_tm_clones>
     f80:	.word	0x00012fac
     f84:	.word	0x000130a8
     f88:	.word	0x000000e0

00000f8c <already_placed_kline>:
     f8c:	push	{r4, r5, r6, r7, r8, r9, lr}
     f90:	mov	r5, r2
     f94:	sub	sp, sp, #156	; 0x9c
     f98:	mov	r2, r1
     f9c:	mov	r6, r1
     fa0:	mov	r8, r0
     fa4:	mov	r1, #64	; 0x40
     fa8:	mov	r0, r5
     fac:	mov	r7, r3
     fb0:	bl	dd0 <find_exact_conf_by_address@plt>
     fb4:	ldr	r3, [pc, #296]	; 10e4 <already_placed_kline+0x158>
     fb8:	add	r3, pc, r3
     fbc:	subs	r4, r0, #0
     fc0:	beq	1028 <already_placed_kline+0x9c>
     fc4:	cmp	r7, #0
     fc8:	beq	1010 <already_placed_kline+0x84>
     fcc:	ldr	r3, [r4, #20]
     fd0:	cmp	r3, #0
     fd4:	beq	10d8 <already_placed_kline+0x14c>
     fd8:	str	r3, [sp, #8]
     fdc:	ldr	r2, [r4, #16]
     fe0:	mov	r0, r8
     fe4:	str	r2, [sp, #4]
     fe8:	ldr	r1, [r4, #28]
     fec:	mov	r3, r5
     ff0:	str	r1, [sp]
     ff4:	ldr	r1, [pc, #236]	; 10e8 <already_placed_kline+0x15c>
     ff8:	mov	r2, r6
     ffc:	add	r1, pc, r1
    1000:	bl	db8 <sendto_one_notice@plt>
    1004:	mov	r0, #1
    1008:	add	sp, sp, #156	; 0x9c
    100c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1010:	ldr	r3, [r4, #4]
    1014:	tst	r3, #8388608	; 0x800000
    1018:	beq	fcc <already_placed_kline+0x40>
    101c:	mov	r0, #0
    1020:	add	sp, sp, #156	; 0x9c
    1024:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1028:	ldr	r2, [pc, #188]	; 10ec <already_placed_kline+0x160>
    102c:	ldr	r3, [r3, r2]
    1030:	ldr	r3, [r3, #140]	; 0x8c
    1034:	cmp	r3, #0
    1038:	beq	101c <already_placed_kline+0x90>
    103c:	add	r2, sp, #152	; 0x98
    1040:	add	r9, sp, #24
    1044:	str	r4, [r2, #-132]!	; 0xffffff7c
    1048:	mov	r1, r9
    104c:	mov	r0, r5
    1050:	bl	c20 <parse_netmask_strict@plt>
    1054:	cmp	r0, #2
    1058:	moveq	r3, r9
    105c:	beq	1070 <already_placed_kline+0xe4>
    1060:	cmp	r0, #3
    1064:	movne	r3, r4
    1068:	moveq	r3, r9
    106c:	moveq	r0, #10
    1070:	mov	r9, #0
    1074:	mov	ip, #64	; 0x40
    1078:	stmib	sp, {r0, r6, r9}
    107c:	mov	r2, r9
    1080:	mov	r1, r9
    1084:	str	ip, [sp]
    1088:	mov	r0, r5
    108c:	bl	c68 <find_conf_by_address@plt>
    1090:	subs	r4, r0, #0
    1094:	beq	101c <already_placed_kline+0x90>
    1098:	mov	r1, #47	; 0x2f
    109c:	ldr	r0, [r4, #16]
    10a0:	bl	d70 <strchr@plt>
    10a4:	ldr	r3, [sp, #20]
    10a8:	cmp	r3, r9
    10ac:	ble	fc4 <already_placed_kline+0x38>
    10b0:	cmp	r0, r9
    10b4:	beq	101c <already_placed_kline+0x90>
    10b8:	mov	r1, r9
    10bc:	add	r0, r0, #1
    10c0:	mov	r2, #10
    10c4:	bl	c50 <strtol@plt>
    10c8:	ldr	r3, [sp, #20]
    10cc:	cmp	r3, r0
    10d0:	blt	101c <already_placed_kline+0x90>
    10d4:	b	fc4 <already_placed_kline+0x38>
    10d8:	ldr	r3, [pc, #16]	; 10f0 <already_placed_kline+0x164>
    10dc:	add	r3, pc, r3
    10e0:	b	fd8 <already_placed_kline+0x4c>
    10e4:	.word	0x00013040
    10e8:	.word	0x00001ef8
    10ec:	.word	0x000000f0
    10f0:	.word	0x00001e0c

000010f4 <rb_strdup>:
    10f4:	push	{r4, r5, r6, lr}
    10f8:	mov	r6, r0
    10fc:	bl	d64 <strlen@plt>
    1100:	add	r4, r0, #1
    1104:	mov	r0, r4
    1108:	bl	d34 <malloc@plt>
    110c:	subs	r5, r0, #0
    1110:	beq	1128 <rb_strdup+0x34>
    1114:	mov	r2, r4
    1118:	mov	r1, r6
    111c:	bl	c8c <memcpy@plt>
    1120:	mov	r0, r5
    1124:	pop	{r4, r5, r6, pc}
    1128:	bl	c98 <rb_outofmemory@plt>

0000112c <apply_tkline>:
    112c:	push	{r4, r5, r6, r7, r8, r9, lr}
    1130:	sub	sp, sp, #28
    1134:	mov	r4, r1
    1138:	mov	r9, r3
    113c:	mov	r7, r0
    1140:	mov	r8, r2
    1144:	ldr	r6, [sp, #56]	; 0x38
    1148:	bl	c38 <rb_current_time@plt>
    114c:	add	r0, r0, r6
    1150:	str	r0, [r4, #36]	; 0x24
    1154:	mov	r0, r4
    1158:	bl	c74 <add_temp_kline@plt>
    115c:	cmp	r9, #0
    1160:	mov	r0, r7
    1164:	beq	1174 <apply_tkline+0x48>
    1168:	ldrb	r3, [r9]
    116c:	cmp	r3, #0
    1170:	bne	1218 <apply_tkline+0xec>
    1174:	bl	cd4 <get_oper_name@plt>
    1178:	ldr	r5, [pc, #288]	; 12a0 <apply_tkline+0x174>
    117c:	ldr	r2, [r4, #16]
    1180:	asr	r1, r6, #31
    1184:	smull	r3, r5, r5, r6
    1188:	str	r8, [sp, #12]
    118c:	add	r6, r5, r6
    1190:	ldr	r3, [r4, #28]
    1194:	str	r2, [sp, #8]
    1198:	ldr	r2, [pc, #260]	; 12a4 <apply_tkline+0x178>
    119c:	rsb	r6, r1, r6, asr #5
    11a0:	add	r2, pc, r2
    11a4:	mov	r1, #0
    11a8:	str	r3, [sp, #4]
    11ac:	str	r6, [sp]
    11b0:	mov	r3, r0
    11b4:	mov	r0, #256	; 0x100
    11b8:	bl	cb0 <sendto_realops_snomask@plt>
    11bc:	mov	r0, r7
    11c0:	bl	cd4 <get_oper_name@plt>
    11c4:	ldr	r1, [r4, #16]
    11c8:	ldr	r2, [r4, #28]
    11cc:	str	r1, [sp, #4]
    11d0:	ldr	r1, [pc, #208]	; 12a8 <apply_tkline+0x17c>
    11d4:	str	r2, [sp]
    11d8:	str	r8, [sp, #8]
    11dc:	mov	r3, r6
    11e0:	add	r1, pc, r1
    11e4:	mov	r2, r0
    11e8:	mov	r0, #7
    11ec:	bl	d88 <ilog@plt>
    11f0:	ldr	r1, [r4, #16]
    11f4:	ldr	r3, [r4, #28]
    11f8:	str	r1, [sp, #56]	; 0x38
    11fc:	ldr	r1, [pc, #168]	; 12ac <apply_tkline+0x180>
    1200:	mov	r2, r6
    1204:	mov	r0, r7
    1208:	add	r1, pc, r1
    120c:	add	sp, sp, #28
    1210:	pop	{r4, r5, r6, r7, r8, r9, lr}
    1214:	b	db8 <sendto_one_notice@plt>
    1218:	bl	cd4 <get_oper_name@plt>
    121c:	ldr	r5, [pc, #124]	; 12a0 <apply_tkline+0x174>
    1220:	ldr	r2, [r4, #16]
    1224:	asr	r1, r6, #31
    1228:	smull	r3, r5, r5, r6
    122c:	str	r9, [sp, #16]
    1230:	add	r6, r5, r6
    1234:	ldr	r3, [r4, #28]
    1238:	str	r2, [sp, #8]
    123c:	ldr	r2, [pc, #108]	; 12b0 <apply_tkline+0x184>
    1240:	rsb	r6, r1, r6, asr #5
    1244:	str	r3, [sp, #4]
    1248:	add	r2, pc, r2
    124c:	mov	r1, #0
    1250:	str	r8, [sp, #12]
    1254:	str	r6, [sp]
    1258:	mov	r3, r0
    125c:	mov	r0, #256	; 0x100
    1260:	bl	cb0 <sendto_realops_snomask@plt>
    1264:	mov	r0, r7
    1268:	bl	cd4 <get_oper_name@plt>
    126c:	ldr	r1, [r4, #16]
    1270:	ldr	r2, [r4, #28]
    1274:	str	r1, [sp, #4]
    1278:	ldr	r1, [pc, #52]	; 12b4 <apply_tkline+0x188>
    127c:	str	r2, [sp]
    1280:	str	r9, [sp, #12]
    1284:	str	r8, [sp, #8]
    1288:	mov	r3, r6
    128c:	add	r1, pc, r1
    1290:	mov	r2, r0
    1294:	mov	r0, #7
    1298:	bl	d88 <ilog@plt>
    129c:	b	11f0 <apply_tkline+0xc4>
    12a0:	.word	0x88888889
    12a4:	.word	0x00001d80
    12a8:	.word	0x00001d74
    12ac:	.word	0x00001dac
    12b0:	.word	0x00001d20
    12b4:	.word	0x00001d14

000012b8 <apply_kline>:
    12b8:	push	{r4, r5, r6, r7, lr}
    12bc:	sub	sp, sp, #20
    12c0:	mov	r4, r1
    12c4:	str	r1, [sp]
    12c8:	ldr	ip, [r1, #28]
    12cc:	ldr	r1, [r1, #16]
    12d0:	mov	r5, r3
    12d4:	mov	r6, r0
    12d8:	mov	r3, #0
    12dc:	mov	r0, r1
    12e0:	mov	r7, r2
    12e4:	mov	r1, #64	; 0x40
    12e8:	mov	r2, ip
    12ec:	bl	d40 <add_conf_by_address@plt>
    12f0:	cmp	r5, #0
    12f4:	ldr	r2, [r4, #28]
    12f8:	ldr	r3, [r4, #16]
    12fc:	beq	142c <apply_kline+0x174>
    1300:	ldrb	r0, [r5]
    1304:	cmp	r0, #0
    1308:	bne	13a4 <apply_kline+0xec>
    130c:	str	r0, [sp, #8]
    1310:	str	r0, [sp, #4]
    1314:	str	r7, [sp]
    1318:	mov	r1, r6
    131c:	bl	cbc <bandb_add@plt>
    1320:	ldrb	r3, [r5]
    1324:	cmp	r3, #0
    1328:	bne	13c8 <apply_kline+0x110>
    132c:	mov	r0, r6
    1330:	bl	cd4 <get_oper_name@plt>
    1334:	ldr	r2, [r4, #16]
    1338:	ldr	r3, [r4, #28]
    133c:	mov	r1, #0
    1340:	stmib	sp, {r2, r7}
    1344:	ldr	r2, [pc, #252]	; 1448 <apply_kline+0x190>
    1348:	str	r3, [sp]
    134c:	add	r2, pc, r2
    1350:	mov	r3, r0
    1354:	mov	r0, #256	; 0x100
    1358:	bl	cb0 <sendto_realops_snomask@plt>
    135c:	mov	r0, r6
    1360:	bl	cd4 <get_oper_name@plt>
    1364:	ldr	r2, [r4, #16]
    1368:	ldr	r1, [pc, #220]	; 144c <apply_kline+0x194>
    136c:	ldr	r3, [r4, #28]
    1370:	add	r1, pc, r1
    1374:	stm	sp, {r2, r7}
    1378:	mov	r2, r0
    137c:	mov	r0, #7
    1380:	bl	d88 <ilog@plt>
    1384:	ldr	r1, [pc, #196]	; 1450 <apply_kline+0x198>
    1388:	mov	r0, r6
    138c:	ldr	r3, [r4, #16]
    1390:	ldr	r2, [r4, #28]
    1394:	add	r1, pc, r1
    1398:	add	sp, sp, #20
    139c:	pop	{r4, r5, r6, r7, lr}
    13a0:	b	db8 <sendto_one_notice@plt>
    13a4:	mov	r0, #0
    13a8:	str	r5, [sp, #4]
    13ac:	str	r7, [sp]
    13b0:	str	r0, [sp, #8]
    13b4:	mov	r1, r6
    13b8:	bl	cbc <bandb_add@plt>
    13bc:	ldrb	r3, [r5]
    13c0:	cmp	r3, #0
    13c4:	beq	132c <apply_kline+0x74>
    13c8:	mov	r0, r6
    13cc:	bl	cd4 <get_oper_name@plt>
    13d0:	ldr	r2, [r4, #16]
    13d4:	ldr	r3, [r4, #28]
    13d8:	mov	r1, #0
    13dc:	stmib	sp, {r2, r7}
    13e0:	ldr	r2, [pc, #108]	; 1454 <apply_kline+0x19c>
    13e4:	str	r3, [sp]
    13e8:	add	r2, pc, r2
    13ec:	str	r5, [sp, #12]
    13f0:	mov	r3, r0
    13f4:	mov	r0, #256	; 0x100
    13f8:	bl	cb0 <sendto_realops_snomask@plt>
    13fc:	mov	r0, r6
    1400:	bl	cd4 <get_oper_name@plt>
    1404:	ldr	r2, [r4, #16]
    1408:	ldr	r1, [pc, #72]	; 1458 <apply_kline+0x1a0>
    140c:	ldr	r3, [r4, #28]
    1410:	add	r1, pc, r1
    1414:	stm	sp, {r2, r7}
    1418:	str	r5, [sp, #8]
    141c:	mov	r2, r0
    1420:	mov	r0, #7
    1424:	bl	d88 <ilog@plt>
    1428:	b	1384 <apply_kline+0xcc>
    142c:	str	r5, [sp, #8]
    1430:	str	r5, [sp, #4]
    1434:	str	r7, [sp]
    1438:	mov	r0, r5
    143c:	mov	r1, r6
    1440:	bl	cbc <bandb_add@plt>
    1444:	b	132c <apply_kline+0x74>
    1448:	.word	0x00001c90
    144c:	.word	0x00001c90
    1450:	.word	0x00001cb4
    1454:	.word	0x00001c28
    1458:	.word	0x00001c24

0000145c <remove_temp_kline>:
    145c:	ldr	r3, [pc, #344]	; 15bc <remove_temp_kline+0x160>
    1460:	ldr	ip, [pc, #344]	; 15c0 <remove_temp_kline+0x164>
    1464:	add	r3, pc, r3
    1468:	mov	r2, #0
    146c:	push	{r4, r5, r6, r7, r8, lr}
    1470:	mov	r7, r2
    1474:	sub	sp, sp, #8
    1478:	ldr	r6, [r3, ip]
    147c:	ldr	r4, [r6, r2]
    1480:	cmp	r4, #0
    1484:	bne	1498 <remove_temp_kline+0x3c>
    1488:	b	15a0 <remove_temp_kline+0x144>
    148c:	ldr	r4, [r4, #8]
    1490:	cmp	r4, #0
    1494:	beq	15a0 <remove_temp_kline+0x144>
    1498:	ldr	r3, [r4]
    149c:	cmp	r3, r1
    14a0:	bne	148c <remove_temp_kline+0x30>
    14a4:	mov	r5, r1
    14a8:	ldr	r3, [r1, #16]
    14ac:	ldr	r2, [r1, #28]
    14b0:	ldr	r1, [pc, #268]	; 15c4 <remove_temp_kline+0x168>
    14b4:	mov	r8, r0
    14b8:	add	r1, pc, r1
    14bc:	bl	db8 <sendto_one_notice@plt>
    14c0:	mov	r0, r8
    14c4:	bl	cd4 <get_oper_name@plt>
    14c8:	ldr	r2, [r5, #16]
    14cc:	ldr	r3, [r5, #28]
    14d0:	str	r2, [sp, #4]
    14d4:	ldr	r2, [pc, #236]	; 15c8 <remove_temp_kline+0x16c>
    14d8:	str	r3, [sp]
    14dc:	add	r2, pc, r2
    14e0:	mov	r1, #0
    14e4:	mov	r3, r0
    14e8:	mov	r0, #256	; 0x100
    14ec:	bl	cb0 <sendto_realops_snomask@plt>
    14f0:	mov	r0, r8
    14f4:	bl	cd4 <get_oper_name@plt>
    14f8:	ldr	r2, [r5, #16]
    14fc:	ldr	r1, [pc, #200]	; 15cc <remove_temp_kline+0x170>
    1500:	ldr	r3, [r5, #28]
    1504:	add	r1, pc, r1
    1508:	str	r2, [sp]
    150c:	mov	r2, r0
    1510:	mov	r0, #7
    1514:	bl	d88 <ilog@plt>
    1518:	ldr	r2, [r4, #8]
    151c:	cmp	r2, #0
    1520:	lsleq	r3, r7, #1
    1524:	ldrne	r1, [r4, #4]
    1528:	ldreq	r1, [r4, #4]
    152c:	lslne	r3, r7, #1
    1530:	addeq	r0, r3, r7
    1534:	strne	r1, [r2, #4]
    1538:	addeq	r0, r6, r0, lsl #2
    153c:	ldrne	r1, [r4, #4]
    1540:	streq	r1, [r0, #4]
    1544:	cmp	r1, #0
    1548:	addeq	r1, r3, r7
    154c:	add	r7, r3, r7
    1550:	streq	r2, [r6, r1, lsl #2]
    1554:	add	r6, r6, r7, lsl #2
    1558:	strne	r2, [r1, #8]
    155c:	ldr	r3, [r6, #8]
    1560:	mov	r2, #0
    1564:	sub	r3, r3, #1
    1568:	str	r2, [r4, #4]
    156c:	str	r2, [r4, #8]
    1570:	mov	r0, r4
    1574:	str	r3, [r6, #8]
    1578:	bl	ce0 <rb_free_rb_dlink_node@plt>
    157c:	ldr	r1, [r5, #16]
    1580:	ldr	r0, [r5, #28]
    1584:	bl	dac <remove_reject_mask@plt>
    1588:	ldr	r0, [r5, #16]
    158c:	mov	r1, r5
    1590:	bl	d7c <delete_one_address_conf@plt>
    1594:	mov	r0, #1
    1598:	add	sp, sp, #8
    159c:	pop	{r4, r5, r6, r7, r8, pc}
    15a0:	add	r7, r7, #1
    15a4:	cmp	r7, #4
    15a8:	add	r2, r2, #12
    15ac:	bne	147c <remove_temp_kline+0x20>
    15b0:	mov	r0, #0
    15b4:	add	sp, sp, #8
    15b8:	pop	{r4, r5, r6, r7, r8, pc}
    15bc:	.word	0x00012b94
    15c0:	.word	0x000000e4
    15c4:	.word	0x00001ba8
    15c8:	.word	0x00001bb0
    15cc:	.word	0x00001bbc

000015d0 <mo_unkline>:
    15d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    15d4:	add	fp, sp, #32
    15d8:	sub	sp, sp, #44	; 0x2c
    15dc:	ldr	r7, [fp, #4]
    15e0:	mov	r1, #42	; 0x2a
    15e4:	mov	r4, r2
    15e8:	ldr	r6, [r7, #4]
    15ec:	mov	r8, r3
    15f0:	mov	r0, r6
    15f4:	strh	r1, [fp, #-40]	; 0xffffffd8
    15f8:	bl	d64 <strlen@plt>
    15fc:	mov	r1, r6
    1600:	ldr	r6, [pc, #1268]	; 1afc <mo_unkline+0x52c>
    1604:	add	r6, pc, r6
    1608:	add	r3, r0, #15
    160c:	bic	r3, r3, #7
    1610:	sub	sp, sp, r3
    1614:	add	r5, sp, #32
    1618:	add	r2, r0, #1
    161c:	mov	r0, r5
    1620:	bl	c8c <memcpy@plt>
    1624:	ldr	r3, [r4, #24]
    1628:	cmp	r3, #0
    162c:	beq	1650 <mo_unkline+0x80>
    1630:	ldr	r0, [r3, #36]	; 0x24
    1634:	cmp	r0, #0
    1638:	beq	1650 <mo_unkline+0x80>
    163c:	ldr	r1, [pc, #1212]	; 1b00 <mo_unkline+0x530>
    1640:	add	r1, pc, r1
    1644:	bl	df4 <privilegeset_in_set@plt>
    1648:	cmp	r0, #0
    164c:	bne	1684 <mo_unkline+0xb4>
    1650:	ldr	r2, [pc, #1196]	; 1b04 <mo_unkline+0x534>
    1654:	ldr	r1, [pc, #1196]	; 1b08 <mo_unkline+0x538>
    1658:	add	r3, r4, #88	; 0x58
    165c:	add	r1, pc, r1
    1660:	ldr	r2, [r6, r2]
    1664:	str	r1, [sp]
    1668:	ldr	r1, [pc, #1180]	; 1b0c <mo_unkline+0x53c>
    166c:	mov	r0, r4
    1670:	add	r2, r2, #88	; 0x58
    1674:	add	r1, pc, r1
    1678:	bl	c5c <sendto_one@plt>
    167c:	sub	sp, fp, #32
    1680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1684:	mov	r1, #64	; 0x40
    1688:	mov	r0, r5
    168c:	bl	d70 <strchr@plt>
    1690:	cmp	r0, #0
    1694:	beq	1a44 <mo_unkline+0x474>
    1698:	mov	r3, #0
    169c:	strb	r3, [r0]
    16a0:	ldrb	r3, [r5]
    16a4:	cmp	r3, #0
    16a8:	ldrb	r3, [r0, #1]
    16ac:	movne	r9, r5
    16b0:	subeq	r9, fp, #40	; 0x28
    16b4:	cmp	r3, #0
    16b8:	addne	r5, r0, #1
    16bc:	beq	18d0 <mo_unkline+0x300>
    16c0:	cmp	r8, #3
    16c4:	ble	173c <mo_unkline+0x16c>
    16c8:	ldr	r1, [pc, #1088]	; 1b10 <mo_unkline+0x540>
    16cc:	ldr	r0, [r7, #8]
    16d0:	add	r1, pc, r1
    16d4:	bl	e00 <irccmp@plt>
    16d8:	subs	r8, r0, #0
    16dc:	bne	173c <mo_unkline+0x16c>
    16e0:	ldr	r3, [r4, #24]
    16e4:	cmp	r3, #0
    16e8:	beq	170c <mo_unkline+0x13c>
    16ec:	ldr	r0, [r3, #36]	; 0x24
    16f0:	cmp	r0, #0
    16f4:	beq	170c <mo_unkline+0x13c>
    16f8:	ldr	r1, [pc, #1044]	; 1b14 <mo_unkline+0x544>
    16fc:	add	r1, pc, r1
    1700:	bl	df4 <privilegeset_in_set@plt>
    1704:	cmp	r0, #0
    1708:	bne	19ac <mo_unkline+0x3dc>
    170c:	ldr	r2, [pc, #1008]	; 1b04 <mo_unkline+0x534>
    1710:	ldr	r1, [pc, #1024]	; 1b18 <mo_unkline+0x548>
    1714:	add	r3, r4, #88	; 0x58
    1718:	add	r1, pc, r1
    171c:	ldr	r2, [r6, r2]
    1720:	str	r1, [sp]
    1724:	ldr	r1, [pc, #1008]	; 1b1c <mo_unkline+0x54c>
    1728:	mov	r0, r4
    172c:	add	r2, r2, #88	; 0x58
    1730:	add	r1, pc, r1
    1734:	bl	c5c <sendto_one@plt>
    1738:	b	167c <mo_unkline+0xac>
    173c:	mov	r2, r9
    1740:	mov	r1, #64	; 0x40
    1744:	mov	r0, r5
    1748:	bl	dd0 <find_exact_conf_by_address@plt>
    174c:	subs	r7, r0, #0
    1750:	beq	1a6c <mo_unkline+0x49c>
    1754:	ldr	r3, [r7, #44]	; 0x2c
    1758:	cmp	r3, #0
    175c:	beq	18e0 <mo_unkline+0x310>
    1760:	ldr	r3, [pc, #952]	; 1b20 <mo_unkline+0x550>
    1764:	ldr	r3, [r6, r3]
    1768:	ldr	r5, [r3]
    176c:	cmp	r5, #0
    1770:	beq	167c <mo_unkline+0xac>
    1774:	ldr	r3, [r5]
    1778:	cmp	r7, r3
    177c:	beq	1798 <mo_unkline+0x1c8>
    1780:	ldr	r5, [r5, #8]
    1784:	cmp	r5, #0
    1788:	beq	167c <mo_unkline+0xac>
    178c:	ldr	r3, [r5]
    1790:	cmp	r3, r7
    1794:	bne	1780 <mo_unkline+0x1b0>
    1798:	ldr	r1, [pc, #900]	; 1b24 <mo_unkline+0x554>
    179c:	ldr	r3, [r7, #16]
    17a0:	ldr	r2, [r7, #28]
    17a4:	add	r1, pc, r1
    17a8:	mov	r0, r4
    17ac:	bl	db8 <sendto_one_notice@plt>
    17b0:	mov	r0, r4
    17b4:	bl	cd4 <get_oper_name@plt>
    17b8:	ldr	r3, [r7, #16]
    17bc:	ldr	r2, [pc, #868]	; 1b28 <mo_unkline+0x558>
    17c0:	str	r3, [sp, #4]
    17c4:	ldr	r3, [r7, #28]
    17c8:	add	r2, pc, r2
    17cc:	mov	r1, #0
    17d0:	str	r3, [sp]
    17d4:	mov	r3, r0
    17d8:	mov	r0, #256	; 0x100
    17dc:	bl	cb0 <sendto_realops_snomask@plt>
    17e0:	mov	r0, r4
    17e4:	bl	cd4 <get_oper_name@plt>
    17e8:	ldr	r2, [r7, #16]
    17ec:	ldr	r1, [pc, #824]	; 1b2c <mo_unkline+0x55c>
    17f0:	ldr	r3, [r7, #28]
    17f4:	add	r1, pc, r1
    17f8:	str	r2, [sp]
    17fc:	mov	r2, r0
    1800:	mov	r0, #7
    1804:	bl	d88 <ilog@plt>
    1808:	bl	c38 <rb_current_time@plt>
    180c:	ldr	r3, [r7, #40]	; 0x28
    1810:	cmp	r0, r3
    1814:	mov	r8, r0
    1818:	movgt	r3, r0
    181c:	ble	19a4 <mo_unkline+0x3d4>
    1820:	str	r3, [r7, #40]	; 0x28
    1824:	str	r3, [r7, #36]	; 0x24
    1828:	ldr	r0, [r7, #12]
    182c:	bl	ca4 <operhash_delete@plt>
    1830:	mov	r0, r4
    1834:	bl	cd4 <get_oper_name@plt>
    1838:	bl	cf8 <operhash_add@plt>
    183c:	ldr	r3, [r7, #4]
    1840:	ldr	lr, [pc, #744]	; 1b30 <mo_unkline+0x560>
    1844:	ldr	r2, [pc, #744]	; 1b34 <mo_unkline+0x564>
    1848:	orr	r3, r3, #8912896	; 0x880000
    184c:	str	r3, [r7, #4]
    1850:	ldr	r9, [r7, #40]	; 0x28
    1854:	ldr	sl, [r7, #44]	; 0x2c
    1858:	mov	r3, #0
    185c:	sub	sl, sl, r9
    1860:	ldr	ip, [pc, #720]	; 1b38 <mo_unkline+0x568>
    1864:	add	r4, r4, #396	; 0x18c
    1868:	add	ip, pc, ip
    186c:	mov	r1, r3
    1870:	str	r0, [r7, #12]
    1874:	ldr	r0, [r6, lr]
    1878:	ldr	r2, [r6, r2]
    187c:	str	r3, [sp, #20]
    1880:	str	sl, [sp, #24]
    1884:	str	r9, [sp, #16]
    1888:	ldr	lr, [r0]
    188c:	ldr	r2, [r2]
    1890:	ldr	r0, [r7, #16]
    1894:	orr	r2, lr, r2
    1898:	str	r0, [sp, #12]
    189c:	ldr	lr, [r7, #28]
    18a0:	mov	r0, r3
    18a4:	str	ip, [sp]
    18a8:	stmib	sp, {r4, lr}
    18ac:	bl	d10 <sendto_server@plt>
    18b0:	ldr	r1, [r7, #16]
    18b4:	ldr	r0, [r7, #28]
    18b8:	bl	dac <remove_reject_mask@plt>
    18bc:	mov	r2, r8
    18c0:	mov	r1, r5
    18c4:	mov	r0, r7
    18c8:	bl	cc8 <deactivate_conf@plt>
    18cc:	b	167c <mo_unkline+0xac>
    18d0:	cmp	r8, #3
    18d4:	sub	r5, fp, #40	; 0x28
    18d8:	ble	173c <mo_unkline+0x16c>
    18dc:	b	16c8 <mo_unkline+0xf8>
    18e0:	ldr	r3, [pc, #596]	; 1b3c <mo_unkline+0x56c>
    18e4:	ldr	r3, [r6, r3]
    18e8:	ldr	r3, [r3, #8]
    18ec:	cmp	r3, #0
    18f0:	bne	1a80 <mo_unkline+0x4b0>
    18f4:	mov	r1, r7
    18f8:	mov	r0, r4
    18fc:	bl	145c <remove_temp_kline>
    1900:	subs	r5, r0, #0
    1904:	bne	167c <mo_unkline+0xac>
    1908:	ldr	r1, [pc, #560]	; 1b40 <mo_unkline+0x570>
    190c:	ldr	r3, [r7, #16]
    1910:	ldr	r2, [r7, #28]
    1914:	add	r1, pc, r1
    1918:	mov	r0, r4
    191c:	bl	db8 <sendto_one_notice@plt>
    1920:	mov	r0, r4
    1924:	bl	cd4 <get_oper_name@plt>
    1928:	ldr	r3, [r7, #16]
    192c:	ldr	r2, [pc, #528]	; 1b44 <mo_unkline+0x574>
    1930:	str	r3, [sp, #4]
    1934:	ldr	r3, [r7, #28]
    1938:	mov	r1, r5
    193c:	add	r2, pc, r2
    1940:	str	r3, [sp]
    1944:	mov	r3, r0
    1948:	mov	r0, #256	; 0x100
    194c:	bl	cb0 <sendto_realops_snomask@plt>
    1950:	mov	r0, r4
    1954:	bl	cd4 <get_oper_name@plt>
    1958:	ldr	r2, [r7, #16]
    195c:	ldr	r1, [pc, #484]	; 1b48 <mo_unkline+0x578>
    1960:	ldr	r3, [r7, #28]
    1964:	add	r1, pc, r1
    1968:	str	r2, [sp]
    196c:	mov	r2, r0
    1970:	mov	r0, #7
    1974:	bl	d88 <ilog@plt>
    1978:	ldr	r1, [r7, #16]
    197c:	ldr	r0, [r7, #28]
    1980:	bl	dac <remove_reject_mask@plt>
    1984:	mov	r0, r5
    1988:	ldr	r1, [r7, #28]
    198c:	ldr	r2, [r7, #16]
    1990:	bl	dc4 <bandb_del@plt>
    1994:	mov	r1, r7
    1998:	ldr	r0, [r7, #16]
    199c:	bl	d7c <delete_one_address_conf@plt>
    19a0:	b	167c <mo_unkline+0xac>
    19a4:	add	r3, r3, #1
    19a8:	b	1820 <mo_unkline+0x250>
    19ac:	ldr	r3, [pc, #408]	; 1b4c <mo_unkline+0x57c>
    19b0:	ldr	r1, [pc, #408]	; 1b50 <mo_unkline+0x580>
    19b4:	ldr	r2, [r7, #12]
    19b8:	ldr	r3, [r6, r3]
    19bc:	add	r1, pc, r1
    19c0:	str	r5, [sp, #8]
    19c4:	ldr	r3, [r3]
    19c8:	stm	sp, {r1, r9}
    19cc:	ldr	r1, [pc, #384]	; 1b54 <mo_unkline+0x584>
    19d0:	mov	r0, r4
    19d4:	add	r1, pc, r1
    19d8:	bl	c08 <propagate_generic@plt>
    19dc:	ldr	r3, [pc, #288]	; 1b04 <mo_unkline+0x534>
    19e0:	ldr	r0, [r7, #12]
    19e4:	ldr	r1, [r6, r3]
    19e8:	add	r1, r1, #88	; 0x58
    19ec:	bl	d94 <match@plt>
    19f0:	cmp	r0, #0
    19f4:	beq	167c <mo_unkline+0xac>
    19f8:	mov	r2, r9
    19fc:	mov	r1, #64	; 0x40
    1a00:	mov	r0, r5
    1a04:	bl	dd0 <find_exact_conf_by_address@plt>
    1a08:	mov	r7, r0
    1a0c:	cmp	r7, #0
    1a10:	beq	1ab8 <mo_unkline+0x4e8>
    1a14:	ldr	r3, [r7, #44]	; 0x2c
    1a18:	cmp	r3, #0
    1a1c:	beq	18f4 <mo_unkline+0x324>
    1a20:	cmp	r8, #0
    1a24:	bne	1760 <mo_unkline+0x190>
    1a28:	ldr	r1, [pc, #296]	; 1b58 <mo_unkline+0x588>
    1a2c:	mov	r3, r5
    1a30:	mov	r2, r9
    1a34:	mov	r0, r4
    1a38:	add	r1, pc, r1
    1a3c:	bl	db8 <sendto_one_notice@plt>
    1a40:	b	167c <mo_unkline+0xac>
    1a44:	ldrb	r3, [r5]
    1a48:	cmp	r3, #42	; 0x2a
    1a4c:	beq	1a64 <mo_unkline+0x494>
    1a50:	mov	r1, #46	; 0x2e
    1a54:	mov	r0, r5
    1a58:	bl	d70 <strchr@plt>
    1a5c:	cmp	r0, #0
    1a60:	beq	1ad4 <mo_unkline+0x504>
    1a64:	sub	r9, fp, #40	; 0x28
    1a68:	b	16c0 <mo_unkline+0xf0>
    1a6c:	ldr	r3, [pc, #200]	; 1b3c <mo_unkline+0x56c>
    1a70:	ldr	r3, [r6, r3]
    1a74:	ldr	r3, [r3, #8]
    1a78:	cmp	r3, #0
    1a7c:	beq	1ab8 <mo_unkline+0x4e8>
    1a80:	ldr	r3, [pc, #196]	; 1b4c <mo_unkline+0x57c>
    1a84:	ldr	r0, [pc, #208]	; 1b5c <mo_unkline+0x58c>
    1a88:	ldr	r1, [pc, #208]	; 1b60 <mo_unkline+0x590>
    1a8c:	ldr	r3, [r6, r3]
    1a90:	add	r0, pc, r0
    1a94:	str	r5, [sp, #8]
    1a98:	mov	r2, #4
    1a9c:	ldr	r3, [r3]
    1aa0:	add	r1, pc, r1
    1aa4:	stm	sp, {r0, r9}
    1aa8:	mov	r0, r4
    1aac:	bl	cec <cluster_generic@plt>
    1ab0:	mov	r8, #1
    1ab4:	b	1a0c <mo_unkline+0x43c>
    1ab8:	ldr	r1, [pc, #164]	; 1b64 <mo_unkline+0x594>
    1abc:	mov	r3, r5
    1ac0:	mov	r2, r9
    1ac4:	mov	r0, r4
    1ac8:	add	r1, pc, r1
    1acc:	bl	db8 <sendto_one_notice@plt>
    1ad0:	b	167c <mo_unkline+0xac>
    1ad4:	mov	r1, #58	; 0x3a
    1ad8:	mov	r0, r5
    1adc:	bl	d70 <strchr@plt>
    1ae0:	cmp	r0, #0
    1ae4:	bne	1a64 <mo_unkline+0x494>
    1ae8:	ldr	r1, [pc, #120]	; 1b68 <mo_unkline+0x598>
    1aec:	mov	r0, r4
    1af0:	add	r1, pc, r1
    1af4:	bl	db8 <sendto_one_notice@plt>
    1af8:	b	167c <mo_unkline+0xac>
    1afc:	.word	0x000129f4
    1b00:	.word	0x00001abc
    1b04:	.word	0x000000ec
    1b08:	.word	0x00001a98
    1b0c:	.word	0x00001a58
    1b10:	.word	0x00001a50
    1b14:	.word	0x00001a34
    1b18:	.word	0x00001a0c
    1b1c:	.word	0x0000199c
    1b20:	.word	0x000000c8
    1b24:	.word	0x00001a64
    1b28:	.word	0x00001a68
    1b2c:	.word	0x000018cc
    1b30:	.word	0x000000cc
    1b34:	.word	0x000000d0
    1b38:	.word	0x00001900
    1b3c:	.word	0x000000d8
    1b40:	.word	0x000018ac
    1b44:	.word	0x000018a4
    1b48:	.word	0x0000175c
    1b4c:	.word	0x000000c0
    1b50:	.word	0x0000178c
    1b54:	.word	0x0000176c
    1b58:	.word	0x00001750
    1b5c:	.word	0x000016b8
    1b60:	.word	0x000016a0
    1b64:	.word	0x00001688
    1b68:	.word	0x0000161c

00001b6c <mo_kline>:
    1b6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1b70:	mov	r6, r3
    1b74:	add	fp, sp, #32
    1b78:	sub	sp, sp, #148	; 0x94
    1b7c:	ldr	r3, [r2, #24]
    1b80:	ldr	r5, [pc, #2216]	; 2430 <mo_kline+0x8c4>
    1b84:	cmp	r3, #0
    1b88:	mov	r4, r2
    1b8c:	add	r5, pc, r5
    1b90:	beq	1bc4 <mo_kline+0x58>
    1b94:	ldr	r0, [r3, #36]	; 0x24
    1b98:	cmp	r0, #0
    1b9c:	beq	1bc4 <mo_kline+0x58>
    1ba0:	ldr	r3, [pc, #2188]	; 2434 <mo_kline+0x8c8>
    1ba4:	ldr	r1, [pc, #2188]	; 2438 <mo_kline+0x8cc>
    1ba8:	ldr	r3, [r5, r3]
    1bac:	add	r1, pc, r1
    1bb0:	str	r3, [fp, #-120]	; 0xffffff88
    1bb4:	ldr	r7, [r3, #324]	; 0x144
    1bb8:	bl	df4 <privilegeset_in_set@plt>
    1bbc:	cmp	r0, #0
    1bc0:	bne	1bf8 <mo_kline+0x8c>
    1bc4:	ldr	r2, [pc, #2160]	; 243c <mo_kline+0x8d0>
    1bc8:	ldr	r1, [pc, #2160]	; 2440 <mo_kline+0x8d4>
    1bcc:	add	r3, r4, #88	; 0x58
    1bd0:	add	r1, pc, r1
    1bd4:	ldr	r2, [r5, r2]
    1bd8:	str	r1, [sp]
    1bdc:	ldr	r1, [pc, #2144]	; 2444 <mo_kline+0x8d8>
    1be0:	mov	r0, r4
    1be4:	add	r2, r2, #88	; 0x58
    1be8:	add	r1, pc, r1
    1bec:	bl	c5c <sendto_one@plt>
    1bf0:	sub	sp, fp, #32
    1bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1bf8:	ldr	r3, [fp, #4]
    1bfc:	ldr	r0, [r3, #4]
    1c00:	bl	da0 <valid_temp_time@plt>
    1c04:	subs	r3, r0, #0
    1c08:	str	r3, [fp, #-124]	; 0xffffff84
    1c0c:	blt	1e98 <mo_kline+0x32c>
    1c10:	mov	r3, #5
    1c14:	str	r3, [fp, #-132]	; 0xffffff7c
    1c18:	mov	r3, #16
    1c1c:	str	r3, [fp, #-136]	; 0xffffff78
    1c20:	mov	r3, #12
    1c24:	str	r3, [fp, #-128]	; 0xffffff80
    1c28:	mov	r9, #4
    1c2c:	mov	r8, #3
    1c30:	mov	r3, #8
    1c34:	ldr	r2, [fp, #4]
    1c38:	mov	r1, #64	; 0x40
    1c3c:	ldr	sl, [r2, r3]
    1c40:	mov	r0, sl
    1c44:	bl	d70 <strchr@plt>
    1c48:	subs	r3, r0, #0
    1c4c:	beq	1ec4 <mo_kline+0x358>
    1c50:	mov	r1, #0
    1c54:	strb	r1, [r3]
    1c58:	ldrb	r1, [sl]
    1c5c:	cmp	r1, #0
    1c60:	moveq	r2, #42	; 0x2a
    1c64:	strheq	r2, [fp, #-116]	; 0xffffff8c
    1c68:	beq	1c84 <mo_kline+0x118>
    1c6c:	mov	r1, sl
    1c70:	mov	r2, #11
    1c74:	sub	r0, fp, #116	; 0x74
    1c78:	str	r3, [fp, #-140]	; 0xffffff74
    1c7c:	bl	ddc <rb_strlcpy@plt>
    1c80:	ldr	r3, [fp, #-140]	; 0xffffff74
    1c84:	ldrb	r2, [r3, #1]
    1c88:	cmp	r2, #0
    1c8c:	beq	1e84 <mo_kline+0x318>
    1c90:	add	r1, r3, #1
    1c94:	mov	r2, #64	; 0x40
    1c98:	sub	r0, fp, #103	; 0x67
    1c9c:	bl	ddc <rb_strlcpy@plt>
    1ca0:	ldrb	r3, [fp, #-116]	; 0xffffff8c
    1ca4:	cmp	r3, #58	; 0x3a
    1ca8:	beq	1e70 <mo_kline+0x304>
    1cac:	ldrb	r3, [fp, #-103]	; 0xffffff99
    1cb0:	cmp	r3, #58	; 0x3a
    1cb4:	beq	1e70 <mo_kline+0x304>
    1cb8:	cmp	r6, r9
    1cbc:	movle	r9, #0
    1cc0:	bgt	1efc <mo_kline+0x390>
    1cc4:	cmp	r8, r6
    1cc8:	bge	1e40 <mo_kline+0x2d4>
    1ccc:	ldr	r3, [fp, #4]
    1cd0:	add	r8, r3, r8, lsl #2
    1cd4:	ldr	r8, [r8]
    1cd8:	cmp	r8, #0
    1cdc:	beq	1e40 <mo_kline+0x2d4>
    1ce0:	ldrb	r3, [r8]
    1ce4:	cmp	r3, #0
    1ce8:	beq	1e40 <mo_kline+0x2d4>
    1cec:	mov	r0, r8
    1cf0:	bl	d64 <strlen@plt>
    1cf4:	mov	r1, r8
    1cf8:	sub	r8, fp, #103	; 0x67
    1cfc:	add	r3, r0, #15
    1d00:	bic	r3, r3, #7
    1d04:	sub	sp, sp, r3
    1d08:	add	r6, sp, #40	; 0x28
    1d0c:	add	r2, r0, #1
    1d10:	mov	r0, r6
    1d14:	bl	c8c <memcpy@plt>
    1d18:	mov	r2, #0
    1d1c:	mov	r0, r8
    1d20:	mov	r1, r2
    1d24:	bl	c20 <parse_netmask_strict@plt>
    1d28:	cmp	r0, #0
    1d2c:	beq	1fc4 <mo_kline+0x458>
    1d30:	cmp	r9, #0
    1d34:	beq	1fe0 <mo_kline+0x474>
    1d38:	ldr	r3, [pc, #1800]	; 2448 <mo_kline+0x8dc>
    1d3c:	ldr	r1, [pc, #1800]	; 244c <mo_kline+0x8e0>
    1d40:	ldr	r0, [fp, #-124]	; 0xffffff84
    1d44:	ldr	r3, [r5, r3]
    1d48:	add	r1, pc, r1
    1d4c:	str	r6, [sp, #16]
    1d50:	ldr	r3, [r3]
    1d54:	str	r1, [sp]
    1d58:	sub	r1, fp, #116	; 0x74
    1d5c:	str	r1, [sp, #8]
    1d60:	ldr	r1, [pc, #1768]	; 2450 <mo_kline+0x8e4>
    1d64:	mov	r2, r9
    1d68:	str	r0, [sp, #4]
    1d6c:	add	r1, pc, r1
    1d70:	mov	r0, r4
    1d74:	str	r8, [sp, #12]
    1d78:	bl	c08 <propagate_generic@plt>
    1d7c:	ldr	r3, [pc, #1720]	; 243c <mo_kline+0x8d0>
    1d80:	mov	r0, r9
    1d84:	ldr	r1, [r5, r3]
    1d88:	add	r1, r1, #88	; 0x58
    1d8c:	bl	d94 <match@plt>
    1d90:	cmp	r0, #0
    1d94:	beq	1bf0 <mo_kline+0x84>
    1d98:	mov	r7, #0
    1d9c:	sub	r9, fp, #104	; 0x68
    1da0:	mov	r0, r8
    1da4:	mov	r1, #35	; 0x23
    1da8:	bl	d70 <strchr@plt>
    1dac:	cmp	r0, #0
    1db0:	bne	1e70 <mo_kline+0x304>
    1db4:	sub	r8, fp, #116	; 0x74
    1db8:	mov	r0, r8
    1dbc:	mov	r1, #35	; 0x23
    1dc0:	bl	d70 <strchr@plt>
    1dc4:	cmp	r0, #0
    1dc8:	bne	1e70 <mo_kline+0x304>
    1dcc:	mov	r1, #33	; 0x21
    1dd0:	mov	r0, r8
    1dd4:	bl	d70 <strchr@plt>
    1dd8:	cmp	r0, #0
    1ddc:	bne	1e70 <mo_kline+0x304>
    1de0:	add	r3, r9, #1
    1de4:	mov	r0, r3
    1de8:	mov	r1, #64	; 0x40
    1dec:	mov	sl, r3
    1df0:	bl	d70 <strchr@plt>
    1df4:	subs	r3, r0, #0
    1df8:	str	r3, [fp, #-128]	; 0xffffff80
    1dfc:	bne	1e70 <mo_kline+0x304>
    1e00:	mov	r1, sl
    1e04:	mov	r0, r8
    1e08:	bl	d28 <valid_wild_card@plt>
    1e0c:	cmp	r0, #0
    1e10:	beq	2154 <mo_kline+0x5e8>
    1e14:	ldr	r3, [fp, #-124]	; 0xffffff84
    1e18:	cmp	r3, #0
    1e1c:	movne	r3, #0
    1e20:	andeq	r3, r7, #1
    1e24:	cmp	r3, #0
    1e28:	beq	205c <mo_kline+0x4f0>
    1e2c:	ldr	r1, [pc, #1568]	; 2454 <mo_kline+0x8e8>
    1e30:	mov	r0, r4
    1e34:	add	r1, pc, r1
    1e38:	bl	db8 <sendto_one_notice@plt>
    1e3c:	b	1bf0 <mo_kline+0x84>
    1e40:	ldr	r2, [pc, #1524]	; 243c <mo_kline+0x8d0>
    1e44:	ldr	r1, [pc, #1548]	; 2458 <mo_kline+0x8ec>
    1e48:	add	r3, r4, #88	; 0x58
    1e4c:	add	r1, pc, r1
    1e50:	ldr	r2, [r5, r2]
    1e54:	str	r1, [sp]
    1e58:	ldr	r1, [pc, #1532]	; 245c <mo_kline+0x8f0>
    1e5c:	mov	r0, r4
    1e60:	add	r2, r2, #88	; 0x58
    1e64:	add	r1, pc, r1
    1e68:	bl	c5c <sendto_one@plt>
    1e6c:	b	1bf0 <mo_kline+0x84>
    1e70:	ldr	r1, [pc, #1512]	; 2460 <mo_kline+0x8f4>
    1e74:	mov	r0, r4
    1e78:	add	r1, pc, r1
    1e7c:	bl	db8 <sendto_one_notice@plt>
    1e80:	b	1bf0 <mo_kline+0x84>
    1e84:	ldr	r3, [pc, #1496]	; 2464 <mo_kline+0x8f8>
    1e88:	add	r3, pc, r3
    1e8c:	ldrh	r3, [r3]
    1e90:	strh	r3, [fp, #-103]	; 0xffffff99
    1e94:	b	1ca0 <mo_kline+0x134>
    1e98:	mov	r2, #12
    1e9c:	str	r2, [fp, #-136]	; 0xffffff78
    1ea0:	mov	r2, #8
    1ea4:	mov	r3, #4
    1ea8:	str	r2, [fp, #-128]	; 0xffffff80
    1eac:	mov	r2, #0
    1eb0:	str	r3, [fp, #-132]	; 0xffffff7c
    1eb4:	mov	r9, #3
    1eb8:	mov	r8, #2
    1ebc:	str	r2, [fp, #-124]	; 0xffffff84
    1ec0:	b	1c34 <mo_kline+0xc8>
    1ec4:	mov	r1, #46	; 0x2e
    1ec8:	mov	r0, sl
    1ecc:	bl	d70 <strchr@plt>
    1ed0:	cmp	r0, #0
    1ed4:	beq	1f9c <mo_kline+0x430>
    1ed8:	mov	r0, #42	; 0x2a
    1edc:	mov	r3, #0
    1ee0:	strb	r0, [fp, #-116]	; 0xffffff8c
    1ee4:	mov	r1, sl
    1ee8:	mov	r2, #64	; 0x40
    1eec:	sub	r0, fp, #103	; 0x67
    1ef0:	strb	r3, [fp, #-115]	; 0xffffff8d
    1ef4:	bl	ddc <rb_strlcpy@plt>
    1ef8:	b	1ca0 <mo_kline+0x134>
    1efc:	ldr	r2, [fp, #4]
    1f00:	ldr	r8, [fp, #-128]	; 0xffffff80
    1f04:	ldr	r1, [pc, #1372]	; 2468 <mo_kline+0x8fc>
    1f08:	ldr	r0, [r2, r8]
    1f0c:	add	r1, pc, r1
    1f10:	bl	e00 <irccmp@plt>
    1f14:	ldr	r2, [fp, #4]
    1f18:	add	r8, r2, r8
    1f1c:	cmp	r0, #0
    1f20:	bne	1f64 <mo_kline+0x3f8>
    1f24:	ldr	r3, [r4, #24]
    1f28:	cmp	r3, #0
    1f2c:	beq	1f6c <mo_kline+0x400>
    1f30:	ldr	r0, [r3, #36]	; 0x24
    1f34:	cmp	r0, #0
    1f38:	beq	1f6c <mo_kline+0x400>
    1f3c:	ldr	r1, [pc, #1320]	; 246c <mo_kline+0x900>
    1f40:	add	r1, pc, r1
    1f44:	bl	df4 <privilegeset_in_set@plt>
    1f48:	cmp	r0, #0
    1f4c:	beq	1f6c <mo_kline+0x400>
    1f50:	ldr	r3, [fp, #4]
    1f54:	ldr	r2, [fp, #-136]	; 0xffffff78
    1f58:	ldr	r8, [fp, #-132]	; 0xffffff7c
    1f5c:	ldr	r9, [r3, r2]
    1f60:	b	1cc4 <mo_kline+0x158>
    1f64:	mov	r9, #0
    1f68:	b	1cd4 <mo_kline+0x168>
    1f6c:	ldr	r2, [pc, #1224]	; 243c <mo_kline+0x8d0>
    1f70:	ldr	r1, [pc, #1272]	; 2470 <mo_kline+0x904>
    1f74:	add	r3, r4, #88	; 0x58
    1f78:	add	r1, pc, r1
    1f7c:	ldr	r2, [r5, r2]
    1f80:	str	r1, [sp]
    1f84:	ldr	r1, [pc, #1256]	; 2474 <mo_kline+0x908>
    1f88:	mov	r0, r4
    1f8c:	add	r2, r2, #88	; 0x58
    1f90:	add	r1, pc, r1
    1f94:	bl	c5c <sendto_one@plt>
    1f98:	b	1bf0 <mo_kline+0x84>
    1f9c:	mov	r1, #58	; 0x3a
    1fa0:	mov	r0, sl
    1fa4:	bl	d70 <strchr@plt>
    1fa8:	cmp	r0, #0
    1fac:	bne	1ed8 <mo_kline+0x36c>
    1fb0:	ldr	r1, [pc, #1216]	; 2478 <mo_kline+0x90c>
    1fb4:	mov	r0, r4
    1fb8:	add	r1, pc, r1
    1fbc:	bl	db8 <sendto_one_notice@plt>
    1fc0:	b	1bf0 <mo_kline+0x84>
    1fc4:	ldr	r1, [pc, #1200]	; 247c <mo_kline+0x910>
    1fc8:	mov	r3, r8
    1fcc:	mov	r0, r4
    1fd0:	sub	r2, fp, #116	; 0x74
    1fd4:	add	r1, pc, r1
    1fd8:	bl	db8 <sendto_one_notice@plt>
    1fdc:	b	1bf0 <mo_kline+0x84>
    1fe0:	cmp	r7, #0
    1fe4:	movne	r7, #1
    1fe8:	subne	r9, fp, #104	; 0x68
    1fec:	bne	1da0 <mo_kline+0x234>
    1ff0:	ldr	r3, [pc, #1160]	; 2480 <mo_kline+0x914>
    1ff4:	ldr	r3, [r5, r3]
    1ff8:	ldr	r3, [r3, #8]
    1ffc:	cmp	r3, #0
    2000:	beq	1d98 <mo_kline+0x22c>
    2004:	ldr	r3, [pc, #1084]	; 2448 <mo_kline+0x8dc>
    2008:	sub	r1, fp, #116	; 0x74
    200c:	ldr	r2, [pc, #1136]	; 2484 <mo_kline+0x918>
    2010:	ldr	r3, [r5, r3]
    2014:	sub	r9, fp, #104	; 0x68
    2018:	add	r2, pc, r2
    201c:	ldr	r3, [r3]
    2020:	str	r1, [sp, #8]
    2024:	ldr	r1, [fp, #-124]	; 0xffffff84
    2028:	add	r0, r9, #1
    202c:	cmp	r1, #0
    2030:	str	r1, [sp, #4]
    2034:	ldr	r1, [pc, #1100]	; 2488 <mo_kline+0x91c>
    2038:	str	r2, [sp]
    203c:	str	r0, [sp, #12]
    2040:	str	r6, [sp, #16]
    2044:	moveq	r2, #2
    2048:	movne	r2, #1
    204c:	add	r1, pc, r1
    2050:	mov	r0, r4
    2054:	bl	cec <cluster_generic@plt>
    2058:	b	1da0 <mo_kline+0x234>
    205c:	ldr	r3, [fp, #-124]	; 0xffffff84
    2060:	mov	r2, sl
    2064:	mov	r1, r8
    2068:	mov	r0, r4
    206c:	bl	f8c <already_placed_kline>
    2070:	cmp	r0, #0
    2074:	bne	1bf0 <mo_kline+0x84>
    2078:	bl	d1c <rb_set_time@plt>
    207c:	bl	c14 <make_conf@plt>
    2080:	mov	r3, #64	; 0x40
    2084:	str	r3, [r0]
    2088:	mov	r9, r0
    208c:	bl	c38 <rb_current_time@plt>
    2090:	str	r0, [r9, #40]	; 0x28
    2094:	mov	r0, sl
    2098:	bl	10f4 <rb_strdup>
    209c:	str	r0, [r9, #16]
    20a0:	mov	r0, r8
    20a4:	bl	10f4 <rb_strdup>
    20a8:	ldr	r8, [fp, #-128]	; 0xffffff80
    20ac:	str	r8, [r9, #32]
    20b0:	str	r0, [r9, #28]
    20b4:	mov	r0, r4
    20b8:	bl	cd4 <get_oper_name@plt>
    20bc:	bl	cf8 <operhash_add@plt>
    20c0:	str	r0, [r9, #12]
    20c4:	mov	r0, r6
    20c8:	bl	d64 <strlen@plt>
    20cc:	ldr	r3, [pc, #952]	; 248c <mo_kline+0x920>
    20d0:	mov	r1, #124	; 0x7c
    20d4:	cmp	r0, r3
    20d8:	movhi	r3, r8
    20dc:	strbhi	r3, [r6, #390]	; 0x186
    20e0:	mov	r0, r6
    20e4:	bl	d70 <strchr@plt>
    20e8:	cmp	r0, #0
    20ec:	beq	2388 <mo_kline+0x81c>
    20f0:	mov	r8, r0
    20f4:	mov	r3, #0
    20f8:	strb	r3, [r8], #1
    20fc:	cmp	r8, r3
    2100:	beq	2388 <mo_kline+0x81c>
    2104:	ldrb	r3, [r0, #1]
    2108:	cmp	r3, #0
    210c:	bne	2378 <mo_kline+0x80c>
    2110:	mov	r0, r6
    2114:	bl	10f4 <rb_strdup>
    2118:	cmp	r7, #0
    211c:	str	r0, [r9, #20]
    2120:	bne	2170 <mo_kline+0x604>
    2124:	ldr	r3, [fp, #-124]	; 0xffffff84
    2128:	cmp	r3, #0
    212c:	beq	2390 <mo_kline+0x824>
    2130:	str	r3, [sp]
    2134:	mov	r2, r6
    2138:	mov	r3, r8
    213c:	mov	r0, r4
    2140:	mov	r1, r9
    2144:	bl	112c <apply_tkline>
    2148:	mov	r0, r9
    214c:	bl	d04 <check_one_kline@plt>
    2150:	b	1bf0 <mo_kline+0x84>
    2154:	ldr	r3, [fp, #-120]	; 0xffffff88
    2158:	ldr	r1, [pc, #816]	; 2490 <mo_kline+0x924>
    215c:	mov	r0, r4
    2160:	ldr	r2, [r3, #236]	; 0xec
    2164:	add	r1, pc, r1
    2168:	bl	db8 <sendto_one_notice@plt>
    216c:	b	1bf0 <mo_kline+0x84>
    2170:	ldr	r3, [r9, #4]
    2174:	orr	r3, r3, #8912896	; 0x880000
    2178:	str	r3, [r9, #4]
    217c:	bl	c38 <rb_current_time@plt>
    2180:	ldr	r3, [fp, #-124]	; 0xffffff84
    2184:	add	r0, r3, r0
    2188:	str	r0, [r9, #36]	; 0x24
    218c:	str	r0, [r9, #44]	; 0x2c
    2190:	mov	r0, r9
    2194:	bl	c80 <replace_old_ban@plt>
    2198:	bl	d58 <rb_make_rb_dlink_node@plt>
    219c:	subs	r3, r0, #0
    21a0:	beq	2348 <mo_kline+0x7dc>
    21a4:	ldr	r2, [pc, #744]	; 2494 <mo_kline+0x928>
    21a8:	mov	r1, #0
    21ac:	str	r9, [r3]
    21b0:	str	r1, [r3, #4]
    21b4:	ldr	r1, [r5, r2]
    21b8:	ldr	r2, [r1]
    21bc:	cmp	r2, #0
    21c0:	str	r2, [r3, #8]
    21c4:	strne	r3, [r2, #4]
    21c8:	beq	2338 <mo_kline+0x7cc>
    21cc:	ldr	ip, [r1, #8]
    21d0:	str	r9, [sp]
    21d4:	add	ip, ip, #1
    21d8:	str	r3, [r1]
    21dc:	ldr	r0, [r9, #16]
    21e0:	str	ip, [r1, #8]
    21e4:	ldr	r2, [r9, #28]
    21e8:	mov	r3, #0
    21ec:	mov	r1, #64	; 0x40
    21f0:	bl	d40 <add_conf_by_address@plt>
    21f4:	cmp	r8, #0
    21f8:	mov	r0, r4
    21fc:	beq	220c <mo_kline+0x6a0>
    2200:	ldrb	r3, [r8]
    2204:	cmp	r3, #0
    2208:	bne	23a8 <mo_kline+0x83c>
    220c:	bl	cd4 <get_oper_name@plt>
    2210:	mov	r1, #60	; 0x3c
    2214:	str	r0, [fp, #-120]	; 0xffffff88
    2218:	ldr	r0, [fp, #-124]	; 0xffffff84
    221c:	bl	2c54 <__divsi3>
    2220:	str	r6, [sp, #12]
    2224:	ldr	r2, [r9, #16]
    2228:	ldr	r3, [fp, #-120]	; 0xffffff88
    222c:	str	r2, [sp, #8]
    2230:	ldr	r2, [pc, #608]	; 2498 <mo_kline+0x92c>
    2234:	ldr	r1, [r9, #28]
    2238:	add	r2, pc, r2
    223c:	str	r1, [sp, #4]
    2240:	mov	r1, #0
    2244:	mov	r7, r0
    2248:	str	r0, [sp]
    224c:	mov	r0, #256	; 0x100
    2250:	bl	cb0 <sendto_realops_snomask@plt>
    2254:	mov	r0, r4
    2258:	bl	cd4 <get_oper_name@plt>
    225c:	str	r6, [sp, #8]
    2260:	ldr	r2, [r9, #16]
    2264:	ldr	r1, [pc, #560]	; 249c <mo_kline+0x930>
    2268:	str	r2, [sp, #4]
    226c:	ldr	r2, [r9, #28]
    2270:	mov	r3, r7
    2274:	str	r2, [sp]
    2278:	add	r1, pc, r1
    227c:	mov	r2, r0
    2280:	mov	r0, #7
    2284:	bl	d88 <ilog@plt>
    2288:	ldr	r0, [fp, #-124]	; 0xffffff84
    228c:	mov	r1, #60	; 0x3c
    2290:	bl	2c54 <__divsi3>
    2294:	ldr	r3, [r9, #16]
    2298:	ldr	r1, [pc, #512]	; 24a0 <mo_kline+0x934>
    229c:	str	r3, [sp]
    22a0:	add	r1, pc, r1
    22a4:	ldr	r3, [r9, #28]
    22a8:	mov	r2, r0
    22ac:	mov	r0, r4
    22b0:	bl	db8 <sendto_one_notice@plt>
    22b4:	ldr	r2, [pc, #488]	; 24a4 <mo_kline+0x938>
    22b8:	ldr	r3, [pc, #488]	; 24a8 <mo_kline+0x93c>
    22bc:	ldr	r0, [r9, #40]	; 0x28
    22c0:	ldr	r2, [r5, r2]
    22c4:	ldr	r3, [r5, r3]
    22c8:	ldr	ip, [r9, #36]	; 0x24
    22cc:	ldr	r2, [r2]
    22d0:	ldr	r3, [r3]
    22d4:	ldr	lr, [r9, #44]	; 0x2c
    22d8:	cmp	r8, #0
    22dc:	add	r4, r4, #396	; 0x18c
    22e0:	orr	r2, r2, r3
    22e4:	sub	ip, ip, r0
    22e8:	sub	lr, lr, r0
    22ec:	ldr	r7, [r9, #28]
    22f0:	ldr	sl, [r9, #16]
    22f4:	beq	2368 <mo_kline+0x7fc>
    22f8:	ldr	r5, [pc, #428]	; 24ac <mo_kline+0x940>
    22fc:	add	r5, pc, r5
    2300:	ldr	r1, [pc, #424]	; 24b0 <mo_kline+0x944>
    2304:	mov	r3, #0
    2308:	add	r1, pc, r1
    230c:	str	r0, [sp, #16]
    2310:	stm	sp, {r1, r4, r7, sl}
    2314:	mov	r0, r3
    2318:	str	r8, [sp, #36]	; 0x24
    231c:	str	r5, [sp, #32]
    2320:	str	r6, [sp, #28]
    2324:	str	lr, [sp, #24]
    2328:	str	ip, [sp, #20]
    232c:	mov	r1, r3
    2330:	bl	d10 <sendto_server@plt>
    2334:	b	2148 <mo_kline+0x5dc>
    2338:	ldr	r2, [r1, #4]
    233c:	cmp	r2, #0
    2340:	streq	r3, [r1, #4]
    2344:	b	21cc <mo_kline+0x660>
    2348:	ldr	r3, [pc, #356]	; 24b4 <mo_kline+0x948>
    234c:	ldr	r1, [pc, #356]	; 24b8 <mo_kline+0x94c>
    2350:	ldr	r0, [pc, #356]	; 24bc <mo_kline+0x950>
    2354:	add	r3, pc, r3
    2358:	mov	r2, #144	; 0x90
    235c:	add	r1, pc, r1
    2360:	add	r0, pc, r0
    2364:	bl	e0c <__assert_fail@plt>
    2368:	ldr	r5, [pc, #336]	; 24c0 <mo_kline+0x954>
    236c:	add	r5, pc, r5
    2370:	mov	r8, r5
    2374:	b	2300 <mo_kline+0x794>
    2378:	mov	r0, r8
    237c:	bl	10f4 <rb_strdup>
    2380:	str	r0, [r9, #24]
    2384:	b	2110 <mo_kline+0x5a4>
    2388:	ldr	r8, [fp, #-128]	; 0xffffff80
    238c:	b	2110 <mo_kline+0x5a4>
    2390:	mov	r3, r8
    2394:	mov	r2, r6
    2398:	mov	r0, r4
    239c:	mov	r1, r9
    23a0:	bl	12b8 <apply_kline>
    23a4:	b	2148 <mo_kline+0x5dc>
    23a8:	bl	cd4 <get_oper_name@plt>
    23ac:	mov	r1, #60	; 0x3c
    23b0:	str	r0, [fp, #-120]	; 0xffffff88
    23b4:	ldr	r0, [fp, #-124]	; 0xffffff84
    23b8:	bl	2c54 <__divsi3>
    23bc:	str	r8, [sp, #16]
    23c0:	str	r6, [sp, #12]
    23c4:	ldr	r2, [r9, #16]
    23c8:	ldr	r3, [fp, #-120]	; 0xffffff88
    23cc:	str	r2, [sp, #8]
    23d0:	ldr	r2, [pc, #236]	; 24c4 <mo_kline+0x958>
    23d4:	ldr	r1, [r9, #28]
    23d8:	add	r2, pc, r2
    23dc:	str	r1, [sp, #4]
    23e0:	mov	r1, #0
    23e4:	mov	r7, r0
    23e8:	str	r0, [sp]
    23ec:	mov	r0, #256	; 0x100
    23f0:	bl	cb0 <sendto_realops_snomask@plt>
    23f4:	mov	r0, r4
    23f8:	bl	cd4 <get_oper_name@plt>
    23fc:	str	r8, [sp, #12]
    2400:	str	r6, [sp, #8]
    2404:	ldr	r2, [r9, #16]
    2408:	ldr	r1, [pc, #184]	; 24c8 <mo_kline+0x95c>
    240c:	str	r2, [sp, #4]
    2410:	ldr	r2, [r9, #28]
    2414:	mov	r3, r7
    2418:	str	r2, [sp]
    241c:	add	r1, pc, r1
    2420:	mov	r2, r0
    2424:	mov	r0, #7
    2428:	bl	d88 <ilog@plt>
    242c:	b	2288 <mo_kline+0x71c>
    2430:	.word	0x0001246c
    2434:	.word	0x000000f0
    2438:	.word	0x000016c0
    243c:	.word	0x000000ec
    2440:	.word	0x00001694
    2444:	.word	0x000014e4
    2448:	.word	0x000000dc
    244c:	.word	0x000015d8
    2450:	.word	0x0000156c
    2454:	.word	0x00001554
    2458:	.word	0x0000148c
    245c:	.word	0x0000144c
    2460:	.word	0x00001428
    2464:	.word	0x000013f0
    2468:	.word	0x00001214
    246c:	.word	0x000011f0
    2470:	.word	0x000011ac
    2474:	.word	0x0000113c
    2478:	.word	0x000012c4
    247c:	.word	0x0000130c
    2480:	.word	0x000000d8
    2484:	.word	0x00001318
    2488:	.word	0x0000128c
    248c:	.word	0x00000186
    2490:	.word	0x000011dc
    2494:	.word	0x000000c8
    2498:	.word	0x0000119c
    249c:	.word	0x00000cdc
    24a0:	.word	0x00001198
    24a4:	.word	0x000000cc
    24a8:	.word	0x000000d0
    24ac:	.word	0x00000f64
    24b0:	.word	0x00001158
    24b4:	.word	0x00000b50
    24b8:	.word	0x00001050
    24bc:	.word	0x00001068
    24c0:	.word	0x00000d50
    24c4:	.word	0x0000102c
    24c8:	.word	0x00000b84

000024cc <me_unkline>:
    24cc:	push	{r4, r5, r6, r7, lr}
    24d0:	sub	sp, sp, #12
    24d4:	ldrh	r5, [r2, #80]	; 0x50
    24d8:	ldr	ip, [sp, #32]
    24dc:	cmp	r5, #64	; 0x40
    24e0:	beq	24ec <me_unkline+0x20>
    24e4:	add	sp, sp, #12
    24e8:	pop	{r4, r5, r6, r7, pc}
    24ec:	ldr	r3, [r2, #24]
    24f0:	cmp	r3, #0
    24f4:	beq	24e4 <me_unkline+0x18>
    24f8:	mov	r4, r2
    24fc:	ldr	r2, [r2, #32]
    2500:	mov	r3, #4
    2504:	add	r2, r2, #88	; 0x58
    2508:	add	r1, r4, #163	; 0xa3
    250c:	add	r0, r4, #152	; 0x98
    2510:	ldmib	ip, {r6, r7}
    2514:	bl	de8 <find_shared_conf@plt>
    2518:	cmp	r0, #0
    251c:	beq	24e4 <me_unkline+0x18>
    2520:	mov	r1, r5
    2524:	mov	r2, r6
    2528:	mov	r0, r7
    252c:	bl	dd0 <find_exact_conf_by_address@plt>
    2530:	subs	r5, r0, #0
    2534:	beq	2618 <me_unkline+0x14c>
    2538:	ldr	r3, [r5, #44]	; 0x2c
    253c:	cmp	r3, #0
    2540:	bne	25f8 <me_unkline+0x12c>
    2544:	mov	r1, r5
    2548:	mov	r0, r4
    254c:	bl	145c <remove_temp_kline>
    2550:	subs	r6, r0, #0
    2554:	bne	24e4 <me_unkline+0x18>
    2558:	ldr	r1, [pc, #208]	; 2630 <me_unkline+0x164>
    255c:	ldr	r3, [r5, #16]
    2560:	ldr	r2, [r5, #28]
    2564:	add	r1, pc, r1
    2568:	mov	r0, r4
    256c:	bl	db8 <sendto_one_notice@plt>
    2570:	mov	r0, r4
    2574:	bl	cd4 <get_oper_name@plt>
    2578:	ldr	r3, [r5, #16]
    257c:	ldr	r2, [pc, #176]	; 2634 <me_unkline+0x168>
    2580:	str	r3, [sp, #4]
    2584:	ldr	r3, [r5, #28]
    2588:	mov	r1, r6
    258c:	add	r2, pc, r2
    2590:	str	r3, [sp]
    2594:	mov	r3, r0
    2598:	mov	r0, #256	; 0x100
    259c:	bl	cb0 <sendto_realops_snomask@plt>
    25a0:	mov	r0, r4
    25a4:	bl	cd4 <get_oper_name@plt>
    25a8:	ldr	r2, [r5, #16]
    25ac:	ldr	r1, [pc, #132]	; 2638 <me_unkline+0x16c>
    25b0:	ldr	r3, [r5, #28]
    25b4:	add	r1, pc, r1
    25b8:	str	r2, [sp]
    25bc:	mov	r2, r0
    25c0:	mov	r0, #7
    25c4:	bl	d88 <ilog@plt>
    25c8:	ldr	r1, [r5, #16]
    25cc:	ldr	r0, [r5, #28]
    25d0:	bl	dac <remove_reject_mask@plt>
    25d4:	mov	r0, r6
    25d8:	ldr	r1, [r5, #28]
    25dc:	ldr	r2, [r5, #16]
    25e0:	bl	dc4 <bandb_del@plt>
    25e4:	mov	r1, r5
    25e8:	ldr	r0, [r5, #16]
    25ec:	add	sp, sp, #12
    25f0:	pop	{r4, r5, r6, r7, lr}
    25f4:	b	d7c <delete_one_address_conf@plt>
    25f8:	ldr	r1, [pc, #60]	; 263c <me_unkline+0x170>
    25fc:	mov	r3, r7
    2600:	mov	r2, r6
    2604:	mov	r0, r4
    2608:	add	r1, pc, r1
    260c:	add	sp, sp, #12
    2610:	pop	{r4, r5, r6, r7, lr}
    2614:	b	db8 <sendto_one_notice@plt>
    2618:	ldr	r1, [pc, #32]	; 2640 <me_unkline+0x174>
    261c:	mov	r3, r7
    2620:	mov	r2, r6
    2624:	mov	r0, r4
    2628:	add	r1, pc, r1
    262c:	b	260c <me_unkline+0x140>
    2630:	.word	0x00000c5c
    2634:	.word	0x00000c54
    2638:	.word	0x00000b0c
    263c:	.word	0x00000b80
    2640:	.word	0x00000b28

00002644 <ms_unkline>:
    2644:	push	{r4, r5, r6, r7, lr}
    2648:	sub	sp, sp, #20
    264c:	ldr	r4, [pc, #440]	; 280c <ms_unkline+0x1c8>
    2650:	ldr	r3, [pc, #440]	; 2810 <ms_unkline+0x1cc>
    2654:	add	r4, pc, r4
    2658:	ldr	r5, [sp, #40]	; 0x28
    265c:	ldr	r3, [r4, r3]
    2660:	ldr	r1, [pc, #428]	; 2814 <ms_unkline+0x1d0>
    2664:	ldr	ip, [r5, #12]
    2668:	ldr	r0, [r5, #8]
    266c:	add	r1, pc, r1
    2670:	ldr	lr, [r5, #4]
    2674:	ldr	r3, [r3]
    2678:	str	r1, [sp]
    267c:	ldr	r1, [pc, #404]	; 2818 <ms_unkline+0x1d4>
    2680:	mov	r6, r2
    2684:	stmib	sp, {r0, ip}
    2688:	mov	r2, lr
    268c:	mov	r0, r6
    2690:	add	r1, pc, r1
    2694:	bl	c08 <propagate_generic@plt>
    2698:	ldr	r3, [pc, #380]	; 281c <ms_unkline+0x1d8>
    269c:	ldr	r0, [r5, #4]
    26a0:	ldr	r1, [r4, r3]
    26a4:	add	r1, r1, #88	; 0x58
    26a8:	bl	d94 <match@plt>
    26ac:	cmp	r0, #0
    26b0:	beq	26c0 <ms_unkline+0x7c>
    26b4:	ldrh	r4, [r6, #80]	; 0x50
    26b8:	cmp	r4, #64	; 0x40
    26bc:	beq	26c8 <ms_unkline+0x84>
    26c0:	add	sp, sp, #20
    26c4:	pop	{r4, r5, r6, r7, pc}
    26c8:	ldr	r3, [r6, #24]
    26cc:	cmp	r3, #0
    26d0:	beq	26c0 <ms_unkline+0x7c>
    26d4:	ldr	r2, [r6, #32]
    26d8:	mov	r3, #4
    26dc:	add	r2, r2, #88	; 0x58
    26e0:	add	r1, r6, #163	; 0xa3
    26e4:	add	r0, r6, #152	; 0x98
    26e8:	ldr	r7, [r5, #8]
    26ec:	ldr	r5, [r5, #12]
    26f0:	bl	de8 <find_shared_conf@plt>
    26f4:	cmp	r0, #0
    26f8:	beq	26c0 <ms_unkline+0x7c>
    26fc:	mov	r1, r4
    2700:	mov	r2, r7
    2704:	mov	r0, r5
    2708:	bl	dd0 <find_exact_conf_by_address@plt>
    270c:	subs	r4, r0, #0
    2710:	beq	27f4 <ms_unkline+0x1b0>
    2714:	ldr	r3, [r4, #44]	; 0x2c
    2718:	cmp	r3, #0
    271c:	bne	27d4 <ms_unkline+0x190>
    2720:	mov	r1, r4
    2724:	mov	r0, r6
    2728:	bl	145c <remove_temp_kline>
    272c:	subs	r5, r0, #0
    2730:	bne	26c0 <ms_unkline+0x7c>
    2734:	ldr	r1, [pc, #228]	; 2820 <ms_unkline+0x1dc>
    2738:	ldr	r3, [r4, #16]
    273c:	ldr	r2, [r4, #28]
    2740:	add	r1, pc, r1
    2744:	mov	r0, r6
    2748:	bl	db8 <sendto_one_notice@plt>
    274c:	mov	r0, r6
    2750:	bl	cd4 <get_oper_name@plt>
    2754:	ldr	r3, [r4, #16]
    2758:	ldr	r2, [pc, #196]	; 2824 <ms_unkline+0x1e0>
    275c:	str	r3, [sp, #4]
    2760:	ldr	r3, [r4, #28]
    2764:	mov	r1, r5
    2768:	add	r2, pc, r2
    276c:	str	r3, [sp]
    2770:	mov	r3, r0
    2774:	mov	r0, #256	; 0x100
    2778:	bl	cb0 <sendto_realops_snomask@plt>
    277c:	mov	r0, r6
    2780:	bl	cd4 <get_oper_name@plt>
    2784:	ldr	r2, [r4, #16]
    2788:	ldr	r1, [pc, #152]	; 2828 <ms_unkline+0x1e4>
    278c:	ldr	r3, [r4, #28]
    2790:	add	r1, pc, r1
    2794:	str	r2, [sp]
    2798:	mov	r2, r0
    279c:	mov	r0, #7
    27a0:	bl	d88 <ilog@plt>
    27a4:	ldr	r1, [r4, #16]
    27a8:	ldr	r0, [r4, #28]
    27ac:	bl	dac <remove_reject_mask@plt>
    27b0:	mov	r0, r5
    27b4:	ldr	r1, [r4, #28]
    27b8:	ldr	r2, [r4, #16]
    27bc:	bl	dc4 <bandb_del@plt>
    27c0:	mov	r1, r4
    27c4:	ldr	r0, [r4, #16]
    27c8:	add	sp, sp, #20
    27cc:	pop	{r4, r5, r6, r7, lr}
    27d0:	b	d7c <delete_one_address_conf@plt>
    27d4:	ldr	r1, [pc, #80]	; 282c <ms_unkline+0x1e8>
    27d8:	mov	r3, r5
    27dc:	mov	r2, r7
    27e0:	mov	r0, r6
    27e4:	add	r1, pc, r1
    27e8:	add	sp, sp, #20
    27ec:	pop	{r4, r5, r6, r7, lr}
    27f0:	b	db8 <sendto_one_notice@plt>
    27f4:	ldr	r1, [pc, #52]	; 2830 <ms_unkline+0x1ec>
    27f8:	mov	r3, r5
    27fc:	mov	r2, r7
    2800:	mov	r0, r6
    2804:	add	r1, pc, r1
    2808:	b	27e8 <ms_unkline+0x1a4>
    280c:	.word	0x000119a4
    2810:	.word	0x000000c0
    2814:	.word	0x00000adc
    2818:	.word	0x00000ab0
    281c:	.word	0x000000ec
    2820:	.word	0x00000a80
    2824:	.word	0x00000a78
    2828:	.word	0x00000930
    282c:	.word	0x000009a4
    2830:	.word	0x0000094c

00002834 <handle_remote_kline>:
    2834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2838:	add	fp, sp, #32
    283c:	sub	sp, sp, #20
    2840:	mov	r4, r0
    2844:	ldr	r0, [fp, #4]
    2848:	mov	r5, r1
    284c:	mov	r7, r2
    2850:	mov	r6, r3
    2854:	bl	d64 <strlen@plt>
    2858:	ldr	r1, [fp, #4]
    285c:	ldr	r9, [pc, #644]	; 2ae8 <handle_remote_kline+0x2b4>
    2860:	add	r9, pc, r9
    2864:	add	r3, r0, #15
    2868:	bic	r3, r3, #7
    286c:	sub	sp, sp, r3
    2870:	add	r8, sp, #8
    2874:	add	r2, r0, #1
    2878:	mov	r0, r8
    287c:	bl	c8c <memcpy@plt>
    2880:	ldr	r2, [r4, #32]
    2884:	cmp	r5, #0
    2888:	movgt	r3, #1
    288c:	movle	r3, #2
    2890:	add	r2, r2, #88	; 0x58
    2894:	add	r1, r4, #163	; 0xa3
    2898:	add	r0, r4, #152	; 0x98
    289c:	bl	de8 <find_shared_conf@plt>
    28a0:	cmp	r0, #0
    28a4:	bne	28b0 <handle_remote_kline+0x7c>
    28a8:	sub	sp, fp, #32
    28ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    28b0:	mov	r1, #35	; 0x23
    28b4:	mov	r0, r6
    28b8:	bl	d70 <strchr@plt>
    28bc:	cmp	r0, #0
    28c0:	beq	28dc <handle_remote_kline+0xa8>
    28c4:	ldr	r1, [pc, #544]	; 2aec <handle_remote_kline+0x2b8>
    28c8:	mov	r0, r4
    28cc:	add	r1, pc, r1
    28d0:	bl	db8 <sendto_one_notice@plt>
    28d4:	sub	sp, fp, #32
    28d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    28dc:	mov	r1, #35	; 0x23
    28e0:	mov	r0, r7
    28e4:	bl	d70 <strchr@plt>
    28e8:	cmp	r0, #0
    28ec:	bne	28c4 <handle_remote_kline+0x90>
    28f0:	mov	r1, #33	; 0x21
    28f4:	mov	r0, r7
    28f8:	bl	d70 <strchr@plt>
    28fc:	cmp	r0, #0
    2900:	bne	28c4 <handle_remote_kline+0x90>
    2904:	mov	r1, #64	; 0x40
    2908:	mov	r0, r6
    290c:	bl	d70 <strchr@plt>
    2910:	subs	r3, r0, #0
    2914:	str	r3, [fp, #-44]	; 0xffffffd4
    2918:	bne	28c4 <handle_remote_kline+0x90>
    291c:	mov	r1, r6
    2920:	mov	r0, r7
    2924:	bl	d28 <valid_wild_card@plt>
    2928:	cmp	r0, #0
    292c:	beq	2a74 <handle_remote_kline+0x240>
    2930:	mov	r3, r5
    2934:	mov	r2, r6
    2938:	mov	r1, r7
    293c:	mov	r0, r4
    2940:	bl	f8c <already_placed_kline>
    2944:	cmp	r0, #0
    2948:	bne	28a8 <handle_remote_kline+0x74>
    294c:	bl	c14 <make_conf@plt>
    2950:	mov	r3, #64	; 0x40
    2954:	str	r3, [r0]
    2958:	mov	r9, r0
    295c:	bl	c38 <rb_current_time@plt>
    2960:	str	r0, [r9, #40]	; 0x28
    2964:	mov	r0, r7
    2968:	bl	d64 <strlen@plt>
    296c:	add	r2, r0, #1
    2970:	mov	r0, r2
    2974:	str	r2, [fp, #-40]	; 0xffffffd8
    2978:	bl	d34 <malloc@plt>
    297c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2980:	subs	sl, r0, #0
    2984:	beq	2a94 <handle_remote_kline+0x260>
    2988:	mov	r1, r7
    298c:	bl	c8c <memcpy@plt>
    2990:	str	sl, [r9, #28]
    2994:	mov	r0, r6
    2998:	bl	d64 <strlen@plt>
    299c:	add	r7, r0, #1
    29a0:	mov	r0, r7
    29a4:	bl	d34 <malloc@plt>
    29a8:	subs	sl, r0, #0
    29ac:	beq	2a94 <handle_remote_kline+0x260>
    29b0:	mov	r2, r7
    29b4:	mov	r1, r6
    29b8:	bl	c8c <memcpy@plt>
    29bc:	str	sl, [r9, #16]
    29c0:	mov	r0, r4
    29c4:	bl	cd4 <get_oper_name@plt>
    29c8:	bl	cf8 <operhash_add@plt>
    29cc:	str	r0, [r9, #12]
    29d0:	mov	r0, r8
    29d4:	bl	d64 <strlen@plt>
    29d8:	ldr	r3, [pc, #272]	; 2af0 <handle_remote_kline+0x2bc>
    29dc:	mov	r1, #124	; 0x7c
    29e0:	cmp	r0, r3
    29e4:	movhi	r3, #0
    29e8:	mov	r0, r8
    29ec:	strbhi	r3, [r8, #390]	; 0x186
    29f0:	bl	d70 <strchr@plt>
    29f4:	cmp	r0, #0
    29f8:	beq	2a98 <handle_remote_kline+0x264>
    29fc:	mov	r6, r0
    2a00:	mov	r3, #0
    2a04:	strb	r3, [r6], #1
    2a08:	cmp	r6, r3
    2a0c:	beq	2a98 <handle_remote_kline+0x264>
    2a10:	ldrb	r3, [r0, #1]
    2a14:	cmp	r3, #0
    2a18:	bne	2ab8 <handle_remote_kline+0x284>
    2a1c:	mov	r0, r8
    2a20:	bl	d64 <strlen@plt>
    2a24:	add	r7, r0, #1
    2a28:	mov	r0, r7
    2a2c:	bl	d34 <malloc@plt>
    2a30:	subs	sl, r0, #0
    2a34:	beq	2a94 <handle_remote_kline+0x260>
    2a38:	mov	r2, r7
    2a3c:	mov	r1, r8
    2a40:	bl	c8c <memcpy@plt>
    2a44:	cmp	r5, #0
    2a48:	str	sl, [r9, #20]
    2a4c:	ble	2aa0 <handle_remote_kline+0x26c>
    2a50:	str	r5, [sp]
    2a54:	mov	r3, r6
    2a58:	mov	r2, r8
    2a5c:	mov	r0, r4
    2a60:	mov	r1, r9
    2a64:	bl	112c <apply_tkline>
    2a68:	mov	r0, r9
    2a6c:	bl	d04 <check_one_kline@plt>
    2a70:	b	28a8 <handle_remote_kline+0x74>
    2a74:	ldr	r3, [pc, #120]	; 2af4 <handle_remote_kline+0x2c0>
    2a78:	ldr	r1, [pc, #120]	; 2af8 <handle_remote_kline+0x2c4>
    2a7c:	mov	r0, r4
    2a80:	ldr	r3, [r9, r3]
    2a84:	add	r1, pc, r1
    2a88:	ldr	r2, [r3, #236]	; 0xec
    2a8c:	bl	db8 <sendto_one_notice@plt>
    2a90:	b	28a8 <handle_remote_kline+0x74>
    2a94:	bl	c98 <rb_outofmemory@plt>
    2a98:	ldr	r6, [fp, #-44]	; 0xffffffd4
    2a9c:	b	2a1c <handle_remote_kline+0x1e8>
    2aa0:	mov	r3, r6
    2aa4:	mov	r2, r8
    2aa8:	mov	r0, r4
    2aac:	mov	r1, r9
    2ab0:	bl	12b8 <apply_kline>
    2ab4:	b	2a68 <handle_remote_kline+0x234>
    2ab8:	mov	r0, r6
    2abc:	bl	d64 <strlen@plt>
    2ac0:	add	r7, r0, #1
    2ac4:	mov	r0, r7
    2ac8:	bl	d34 <malloc@plt>
    2acc:	subs	sl, r0, #0
    2ad0:	beq	2a94 <handle_remote_kline+0x260>
    2ad4:	mov	r2, r7
    2ad8:	mov	r1, r6
    2adc:	bl	c8c <memcpy@plt>
    2ae0:	str	sl, [r9, #24]
    2ae4:	b	2a1c <handle_remote_kline+0x1e8>
    2ae8:	.word	0x00011798
    2aec:	.word	0x000009d4
    2af0:	.word	0x00000186
    2af4:	.word	0x000000f0
    2af8:	.word	0x000008bc

00002afc <me_kline>:
    2afc:	ldrh	r3, [r2, #80]	; 0x50
    2b00:	push	{r4, r5, r6, lr}
    2b04:	cmp	r3, #64	; 0x40
    2b08:	ldr	r5, [sp, #16]
    2b0c:	popne	{r4, r5, r6, pc}
    2b10:	ldr	r3, [r2, #24]
    2b14:	cmp	r3, #0
    2b18:	popeq	{r4, r5, r6, pc}
    2b1c:	mov	r4, r2
    2b20:	mov	r1, #0
    2b24:	mov	r2, #10
    2b28:	ldr	r0, [r5, #4]
    2b2c:	bl	c50 <strtol@plt>
    2b30:	ldr	r1, [r5, #16]
    2b34:	ldr	r3, [r5, #12]
    2b38:	ldr	r2, [r5, #8]
    2b3c:	str	r1, [sp, #16]
    2b40:	mov	r1, r0
    2b44:	mov	r0, r4
    2b48:	pop	{r4, r5, r6, lr}
    2b4c:	b	2834 <handle_remote_kline>

00002b50 <ms_kline>:
    2b50:	push	{r4, r5, r6, r7, lr}
    2b54:	sub	sp, sp, #28
    2b58:	mov	r5, r3
    2b5c:	ldr	r4, [sp, #48]	; 0x30
    2b60:	mov	r6, r2
    2b64:	mov	r1, #0
    2b68:	ldr	r0, [r4, #8]
    2b6c:	mov	r2, #10
    2b70:	bl	c50 <strtol@plt>
    2b74:	cmp	r5, #5
    2b78:	ldr	r5, [pc, #192]	; 2c40 <ms_kline+0xf0>
    2b7c:	add	r5, pc, r5
    2b80:	ble	2b9c <ms_kline+0x4c>
    2b84:	ldr	r3, [r4, #20]
    2b88:	cmp	r3, #0
    2b8c:	beq	2b9c <ms_kline+0x4c>
    2b90:	ldrb	r2, [r3]
    2b94:	cmp	r2, #0
    2b98:	bne	2ba4 <ms_kline+0x54>
    2b9c:	add	sp, sp, #28
    2ba0:	pop	{r4, r5, r6, r7, pc}
    2ba4:	ldr	r1, [pc, #152]	; 2c44 <ms_kline+0xf4>
    2ba8:	ldr	r2, [r4, #4]
    2bac:	ldr	ip, [r4, #16]
    2bb0:	ldr	r1, [r5, r1]
    2bb4:	mov	r7, r0
    2bb8:	ldr	r0, [r4, #12]
    2bbc:	str	r3, [sp, #16]
    2bc0:	ldr	r3, [r1]
    2bc4:	ldr	r1, [pc, #124]	; 2c48 <ms_kline+0xf8>
    2bc8:	str	ip, [sp, #12]
    2bcc:	add	r1, pc, r1
    2bd0:	str	r1, [sp]
    2bd4:	ldr	r1, [pc, #112]	; 2c4c <ms_kline+0xfc>
    2bd8:	str	r0, [sp, #8]
    2bdc:	add	r1, pc, r1
    2be0:	mov	r0, r6
    2be4:	str	r7, [sp, #4]
    2be8:	bl	c08 <propagate_generic@plt>
    2bec:	ldr	r3, [pc, #92]	; 2c50 <ms_kline+0x100>
    2bf0:	ldr	r0, [r4, #4]
    2bf4:	ldr	r1, [r5, r3]
    2bf8:	add	r1, r1, #88	; 0x58
    2bfc:	bl	d94 <match@plt>
    2c00:	cmp	r0, #0
    2c04:	beq	2b9c <ms_kline+0x4c>
    2c08:	ldrh	r3, [r6, #80]	; 0x50
    2c0c:	cmp	r3, #64	; 0x40
    2c10:	bne	2b9c <ms_kline+0x4c>
    2c14:	ldr	r3, [r6, #24]
    2c18:	cmp	r3, #0
    2c1c:	beq	2b9c <ms_kline+0x4c>
    2c20:	add	r2, r4, #12
    2c24:	mov	r1, r7
    2c28:	ldm	r2, {r2, r3, ip}
    2c2c:	mov	r0, r6
    2c30:	str	ip, [sp, #48]	; 0x30
    2c34:	add	sp, sp, #28
    2c38:	pop	{r4, r5, r6, r7, lr}
    2c3c:	b	2834 <handle_remote_kline>
    2c40:	.word	0x0001147c
    2c44:	.word	0x000000dc
    2c48:	.word	0x00000754
    2c4c:	.word	0x000006fc
    2c50:	.word	0x000000ec

00002c54 <__divsi3>:
    2c54:	cmp	r1, #0
    2c58:	beq	2e64 <.divsi3_skip_div0_test+0x208>

00002c5c <.divsi3_skip_div0_test>:
    2c5c:	eor	ip, r0, r1
    2c60:	rsbmi	r1, r1, #0
    2c64:	subs	r2, r1, #1
    2c68:	beq	2e30 <.divsi3_skip_div0_test+0x1d4>
    2c6c:	movs	r3, r0
    2c70:	rsbmi	r3, r0, #0
    2c74:	cmp	r3, r1
    2c78:	bls	2e3c <.divsi3_skip_div0_test+0x1e0>
    2c7c:	tst	r1, r2
    2c80:	beq	2e4c <.divsi3_skip_div0_test+0x1f0>
    2c84:	clz	r2, r3
    2c88:	clz	r0, r1
    2c8c:	sub	r2, r0, r2
    2c90:	rsbs	r2, r2, #31
    2c94:	addne	r2, r2, r2, lsl #1
    2c98:	mov	r0, #0
    2c9c:	addne	pc, pc, r2, lsl #2
    2ca0:	nop			; (mov r0, r0)
    2ca4:	cmp	r3, r1, lsl #31
    2ca8:	adc	r0, r0, r0
    2cac:	subcs	r3, r3, r1, lsl #31
    2cb0:	cmp	r3, r1, lsl #30
    2cb4:	adc	r0, r0, r0
    2cb8:	subcs	r3, r3, r1, lsl #30
    2cbc:	cmp	r3, r1, lsl #29
    2cc0:	adc	r0, r0, r0
    2cc4:	subcs	r3, r3, r1, lsl #29
    2cc8:	cmp	r3, r1, lsl #28
    2ccc:	adc	r0, r0, r0
    2cd0:	subcs	r3, r3, r1, lsl #28
    2cd4:	cmp	r3, r1, lsl #27
    2cd8:	adc	r0, r0, r0
    2cdc:	subcs	r3, r3, r1, lsl #27
    2ce0:	cmp	r3, r1, lsl #26
    2ce4:	adc	r0, r0, r0
    2ce8:	subcs	r3, r3, r1, lsl #26
    2cec:	cmp	r3, r1, lsl #25
    2cf0:	adc	r0, r0, r0
    2cf4:	subcs	r3, r3, r1, lsl #25
    2cf8:	cmp	r3, r1, lsl #24
    2cfc:	adc	r0, r0, r0
    2d00:	subcs	r3, r3, r1, lsl #24
    2d04:	cmp	r3, r1, lsl #23
    2d08:	adc	r0, r0, r0
    2d0c:	subcs	r3, r3, r1, lsl #23
    2d10:	cmp	r3, r1, lsl #22
    2d14:	adc	r0, r0, r0
    2d18:	subcs	r3, r3, r1, lsl #22
    2d1c:	cmp	r3, r1, lsl #21
    2d20:	adc	r0, r0, r0
    2d24:	subcs	r3, r3, r1, lsl #21
    2d28:	cmp	r3, r1, lsl #20
    2d2c:	adc	r0, r0, r0
    2d30:	subcs	r3, r3, r1, lsl #20
    2d34:	cmp	r3, r1, lsl #19
    2d38:	adc	r0, r0, r0
    2d3c:	subcs	r3, r3, r1, lsl #19
    2d40:	cmp	r3, r1, lsl #18
    2d44:	adc	r0, r0, r0
    2d48:	subcs	r3, r3, r1, lsl #18
    2d4c:	cmp	r3, r1, lsl #17
    2d50:	adc	r0, r0, r0
    2d54:	subcs	r3, r3, r1, lsl #17
    2d58:	cmp	r3, r1, lsl #16
    2d5c:	adc	r0, r0, r0
    2d60:	subcs	r3, r3, r1, lsl #16
    2d64:	cmp	r3, r1, lsl #15
    2d68:	adc	r0, r0, r0
    2d6c:	subcs	r3, r3, r1, lsl #15
    2d70:	cmp	r3, r1, lsl #14
    2d74:	adc	r0, r0, r0
    2d78:	subcs	r3, r3, r1, lsl #14
    2d7c:	cmp	r3, r1, lsl #13
    2d80:	adc	r0, r0, r0
    2d84:	subcs	r3, r3, r1, lsl #13
    2d88:	cmp	r3, r1, lsl #12
    2d8c:	adc	r0, r0, r0
    2d90:	subcs	r3, r3, r1, lsl #12
    2d94:	cmp	r3, r1, lsl #11
    2d98:	adc	r0, r0, r0
    2d9c:	subcs	r3, r3, r1, lsl #11
    2da0:	cmp	r3, r1, lsl #10
    2da4:	adc	r0, r0, r0
    2da8:	subcs	r3, r3, r1, lsl #10
    2dac:	cmp	r3, r1, lsl #9
    2db0:	adc	r0, r0, r0
    2db4:	subcs	r3, r3, r1, lsl #9
    2db8:	cmp	r3, r1, lsl #8
    2dbc:	adc	r0, r0, r0
    2dc0:	subcs	r3, r3, r1, lsl #8
    2dc4:	cmp	r3, r1, lsl #7
    2dc8:	adc	r0, r0, r0
    2dcc:	subcs	r3, r3, r1, lsl #7
    2dd0:	cmp	r3, r1, lsl #6
    2dd4:	adc	r0, r0, r0
    2dd8:	subcs	r3, r3, r1, lsl #6
    2ddc:	cmp	r3, r1, lsl #5
    2de0:	adc	r0, r0, r0
    2de4:	subcs	r3, r3, r1, lsl #5
    2de8:	cmp	r3, r1, lsl #4
    2dec:	adc	r0, r0, r0
    2df0:	subcs	r3, r3, r1, lsl #4
    2df4:	cmp	r3, r1, lsl #3
    2df8:	adc	r0, r0, r0
    2dfc:	subcs	r3, r3, r1, lsl #3
    2e00:	cmp	r3, r1, lsl #2
    2e04:	adc	r0, r0, r0
    2e08:	subcs	r3, r3, r1, lsl #2
    2e0c:	cmp	r3, r1, lsl #1
    2e10:	adc	r0, r0, r0
    2e14:	subcs	r3, r3, r1, lsl #1
    2e18:	cmp	r3, r1
    2e1c:	adc	r0, r0, r0
    2e20:	subcs	r3, r3, r1
    2e24:	cmp	ip, #0
    2e28:	rsbmi	r0, r0, #0
    2e2c:	bx	lr
    2e30:	teq	ip, r0
    2e34:	rsbmi	r0, r0, #0
    2e38:	bx	lr
    2e3c:	movcc	r0, #0
    2e40:	asreq	r0, ip, #31
    2e44:	orreq	r0, r0, #1
    2e48:	bx	lr
    2e4c:	clz	r2, r1
    2e50:	rsb	r2, r2, #31
    2e54:	cmp	ip, #0
    2e58:	lsr	r0, r3, r2
    2e5c:	rsbmi	r0, r0, #0
    2e60:	bx	lr
    2e64:	cmp	r0, #0
    2e68:	mvngt	r0, #-2147483648	; 0x80000000
    2e6c:	movlt	r0, #-2147483648	; 0x80000000
    2e70:	b	2e94 <__aeabi_idiv0>

00002e74 <__aeabi_idivmod>:
    2e74:	cmp	r1, #0
    2e78:	beq	2e64 <.divsi3_skip_div0_test+0x208>
    2e7c:	push	{r0, r1, lr}
    2e80:	bl	2c5c <.divsi3_skip_div0_test>
    2e84:	pop	{r1, r2, lr}
    2e88:	mul	r3, r2, r0
    2e8c:	sub	r1, r1, r3
    2e90:	bx	lr

00002e94 <__aeabi_idiv0>:
    2e94:	push	{r1, lr}
    2e98:	mov	r0, #8
    2e9c:	bl	c2c <raise@plt>
    2ea0:	pop	{r1, pc}

Disassembly of section .fini:

00002ea4 <_fini>:
    2ea4:	push	{r3, lr}
    2ea8:	pop	{r3, pc}
