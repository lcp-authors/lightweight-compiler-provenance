
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

00010fc8 <.init>:
   10fc8:	push	{r3, lr}
   10fcc:	bl	114d4 <putchar_unlocked@plt+0x198>
   10fd0:	pop	{r3, pc}

Disassembly of section .plt:

00010fd4 <calloc@plt-0x14>:
   10fd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10fd8:	ldr	lr, [pc, #4]	; 10fe4 <calloc@plt-0x4>
   10fdc:	add	lr, pc, lr
   10fe0:	ldr	pc, [lr, #8]!
   10fe4:	andeq	r6, r1, ip, lsl r0

00010fe8 <calloc@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #90112	; 0x16000
   10ff0:	ldr	pc, [ip, #28]!

00010ff4 <fputs_unlocked@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #90112	; 0x16000
   10ffc:	ldr	pc, [ip, #20]!

00011000 <raise@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #90112	; 0x16000
   11008:	ldr	pc, [ip, #12]!

0001100c <gmtime_r@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #90112	; 0x16000
   11014:	ldr	pc, [ip, #4]!

00011018 <strcmp@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #86016	; 0x15000
   11020:	ldr	pc, [ip, #4092]!	; 0xffc

00011024 <mktime@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #86016	; 0x15000
   1102c:	ldr	pc, [ip, #4084]!	; 0xff4

00011030 <fflush@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #86016	; 0x15000
   11038:	ldr	pc, [ip, #4076]!	; 0xfec

0001103c <utmpxname@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #86016	; 0x15000
   11044:	ldr	pc, [ip, #4068]!	; 0xfe4

00011048 <free@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #86016	; 0x15000
   11050:	ldr	pc, [ip, #4060]!	; 0xfdc

00011054 <_exit@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #86016	; 0x15000
   1105c:	ldr	pc, [ip, #4052]!	; 0xfd4

00011060 <memcpy@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #86016	; 0x15000
   11068:	ldr	pc, [ip, #4044]!	; 0xfcc

0001106c <mbsinit@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #86016	; 0x15000
   11074:	ldr	pc, [ip, #4036]!	; 0xfc4

00011078 <time@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #86016	; 0x15000
   11080:	ldr	pc, [ip, #4028]!	; 0xfbc

00011084 <memcmp@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #86016	; 0x15000
   1108c:	ldr	pc, [ip, #4020]!	; 0xfb4

00011090 <fputc_unlocked@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #86016	; 0x15000
   11098:	ldr	pc, [ip, #4012]!	; 0xfac

0001109c <dcgettext@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #86016	; 0x15000
   110a4:	ldr	pc, [ip, #4004]!	; 0xfa4

000110a8 <setutxent@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #86016	; 0x15000
   110b0:	ldr	pc, [ip, #3996]!	; 0xf9c

000110b4 <realloc@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #86016	; 0x15000
   110bc:	ldr	pc, [ip, #3988]!	; 0xf94

000110c0 <localtime_r@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #86016	; 0x15000
   110c8:	ldr	pc, [ip, #3980]!	; 0xf8c

000110cc <textdomain@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #86016	; 0x15000
   110d4:	ldr	pc, [ip, #3972]!	; 0xf84

000110d8 <iswprint@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #86016	; 0x15000
   110e0:	ldr	pc, [ip, #3964]!	; 0xf7c

000110e4 <tzset@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #86016	; 0x15000
   110ec:	ldr	pc, [ip, #3956]!	; 0xf74

000110f0 <fwrite@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #86016	; 0x15000
   110f8:	ldr	pc, [ip, #3948]!	; 0xf6c

000110fc <lseek64@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #86016	; 0x15000
   11104:	ldr	pc, [ip, #3940]!	; 0xf64

00011108 <__ctype_get_mb_cur_max@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #86016	; 0x15000
   11110:	ldr	pc, [ip, #3932]!	; 0xf5c

00011114 <__fpending@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #86016	; 0x15000
   1111c:	ldr	pc, [ip, #3924]!	; 0xf54

00011120 <ferror_unlocked@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #3916]!	; 0xf4c

0001112c <mbrtowc@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #3908]!	; 0xf44

00011138 <error@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #3900]!	; 0xf3c

00011144 <getenv@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3892]!	; 0xf34

00011150 <malloc@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3884]!	; 0xf2c

0001115c <__libc_start_main@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #86016	; 0x15000
   11164:	ldr	pc, [ip, #3876]!	; 0xf24

00011168 <strftime@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #86016	; 0x15000
   11170:	ldr	pc, [ip, #3868]!	; 0xf1c

00011174 <__freading@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #86016	; 0x15000
   1117c:	ldr	pc, [ip, #3860]!	; 0xf14

00011180 <localtime@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #86016	; 0x15000
   11188:	ldr	pc, [ip, #3852]!	; 0xf0c

0001118c <__ctype_tolower_loc@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #86016	; 0x15000
   11194:	ldr	pc, [ip, #3844]!	; 0xf04

00011198 <__ctype_toupper_loc@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #86016	; 0x15000
   111a0:	ldr	pc, [ip, #3836]!	; 0xefc

000111a4 <__gmon_start__@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #86016	; 0x15000
   111ac:	ldr	pc, [ip, #3828]!	; 0xef4

000111b0 <getopt_long@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #86016	; 0x15000
   111b8:	ldr	pc, [ip, #3820]!	; 0xeec

000111bc <kill@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #86016	; 0x15000
   111c4:	ldr	pc, [ip, #3812]!	; 0xee4

000111c8 <__ctype_b_loc@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #86016	; 0x15000
   111d0:	ldr	pc, [ip, #3804]!	; 0xedc

000111d4 <exit@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #86016	; 0x15000
   111dc:	ldr	pc, [ip, #3796]!	; 0xed4

000111e0 <strlen@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #86016	; 0x15000
   111e8:	ldr	pc, [ip, #3788]!	; 0xecc

000111ec <setenv@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #86016	; 0x15000
   111f4:	ldr	pc, [ip, #3780]!	; 0xec4

000111f8 <__errno_location@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #86016	; 0x15000
   11200:	ldr	pc, [ip, #3772]!	; 0xebc

00011204 <__cxa_atexit@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #86016	; 0x15000
   1120c:	ldr	pc, [ip, #3764]!	; 0xeb4

00011210 <memset@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #86016	; 0x15000
   11218:	ldr	pc, [ip, #3756]!	; 0xeac

0001121c <strncpy@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #86016	; 0x15000
   11224:	ldr	pc, [ip, #3748]!	; 0xea4

00011228 <__printf_chk@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #86016	; 0x15000
   11230:	ldr	pc, [ip, #3740]!	; 0xe9c

00011234 <fileno@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #86016	; 0x15000
   1123c:	ldr	pc, [ip, #3732]!	; 0xe94

00011240 <__fprintf_chk@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #86016	; 0x15000
   11248:	ldr	pc, [ip, #3724]!	; 0xe8c

0001124c <fclose@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #86016	; 0x15000
   11254:	ldr	pc, [ip, #3716]!	; 0xe84

00011258 <fseeko64@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #86016	; 0x15000
   11260:	ldr	pc, [ip, #3708]!	; 0xe7c

00011264 <getloadavg@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #86016	; 0x15000
   1126c:	ldr	pc, [ip, #3700]!	; 0xe74

00011270 <strtod_l@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #86016	; 0x15000
   11278:	ldr	pc, [ip, #3692]!	; 0xe6c

0001127c <endutxent@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #86016	; 0x15000
   11284:	ldr	pc, [ip, #3684]!	; 0xe64

00011288 <setlocale@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #86016	; 0x15000
   11290:	ldr	pc, [ip, #3676]!	; 0xe5c

00011294 <strrchr@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #86016	; 0x15000
   1129c:	ldr	pc, [ip, #3668]!	; 0xe54

000112a0 <nl_langinfo@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #86016	; 0x15000
   112a8:	ldr	pc, [ip, #3660]!	; 0xe4c

000112ac <fputc@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #86016	; 0x15000
   112b4:	ldr	pc, [ip, #3652]!	; 0xe44

000112b8 <newlocale@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #86016	; 0x15000
   112c0:	ldr	pc, [ip, #3644]!	; 0xe3c

000112c4 <timegm@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #86016	; 0x15000
   112cc:	ldr	pc, [ip, #3636]!	; 0xe34

000112d0 <fopen64@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #86016	; 0x15000
   112d8:	ldr	pc, [ip, #3628]!	; 0xe2c

000112dc <fgets_unlocked@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #86016	; 0x15000
   112e4:	ldr	pc, [ip, #3620]!	; 0xe24

000112e8 <bindtextdomain@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #86016	; 0x15000
   112f0:	ldr	pc, [ip, #3612]!	; 0xe1c

000112f4 <unsetenv@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #86016	; 0x15000
   112fc:	ldr	pc, [ip, #3604]!	; 0xe14

00011300 <fputs@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #86016	; 0x15000
   11308:	ldr	pc, [ip, #3596]!	; 0xe0c

0001130c <strncmp@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #86016	; 0x15000
   11314:	ldr	pc, [ip, #3588]!	; 0xe04

00011318 <abort@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #86016	; 0x15000
   11320:	ldr	pc, [ip, #3580]!	; 0xdfc

00011324 <getutxent@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #86016	; 0x15000
   1132c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011330 <dcngettext@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #86016	; 0x15000
   11338:	ldr	pc, [ip, #3564]!	; 0xdec

0001133c <putchar_unlocked@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #86016	; 0x15000
   11344:	ldr	pc, [ip, #3556]!	; 0xde4

Disassembly of section .text:

00011348 <.text>:
   11348:	push	{r4, lr}
   1134c:	bl	111f8 <__errno_location@plt>
   11350:	mov	r3, #12
   11354:	str	r3, [r0]
   11358:	mov	r0, #0
   1135c:	pop	{r4, pc}
   11360:	push	{r7, lr}
   11364:	mov	r4, r0
   11368:	sub	sp, sp, #32
   1136c:	mov	r6, r1
   11370:	mov	r5, #0
   11374:	mov	r7, #1
   11378:	ldr	r0, [r1]
   1137c:	bl	1360c <putchar_unlocked@plt+0x22d0>
   11380:	ldr	r1, [pc, #216]	; 11460 <putchar_unlocked@plt+0x124>
   11384:	mov	r0, #6
   11388:	bl	11288 <setlocale@plt>
   1138c:	ldr	r1, [pc, #208]	; 11464 <putchar_unlocked@plt+0x128>
   11390:	ldr	r0, [pc, #208]	; 11468 <putchar_unlocked@plt+0x12c>
   11394:	bl	112e8 <bindtextdomain@plt>
   11398:	ldr	r0, [pc, #200]	; 11468 <putchar_unlocked@plt+0x12c>
   1139c:	bl	110cc <textdomain@plt>
   113a0:	ldr	r0, [pc, #196]	; 1146c <putchar_unlocked@plt+0x130>
   113a4:	bl	15eb8 <putchar_unlocked@plt+0x4b7c>
   113a8:	ldr	r3, [pc, #192]	; 11470 <putchar_unlocked@plt+0x134>
   113ac:	mov	r0, r4
   113b0:	mov	r1, r6
   113b4:	str	r7, [sp, #4]
   113b8:	ldr	r8, [pc, #180]	; 11474 <putchar_unlocked@plt+0x138>
   113bc:	ldr	r2, [pc, #180]	; 11478 <putchar_unlocked@plt+0x13c>
   113c0:	str	r3, [sp, #20]
   113c4:	ldr	r3, [pc, #176]	; 1147c <putchar_unlocked@plt+0x140>
   113c8:	str	r5, [sp, #24]
   113cc:	str	r3, [sp, #16]
   113d0:	ldr	r3, [pc, #168]	; 11480 <putchar_unlocked@plt+0x144>
   113d4:	str	r3, [sp, #12]
   113d8:	ldr	r3, [pc, #164]	; 11484 <putchar_unlocked@plt+0x148>
   113dc:	str	r3, [sp, #8]
   113e0:	ldr	r3, [pc, #160]	; 11488 <putchar_unlocked@plt+0x14c>
   113e4:	ldr	r3, [r3]
   113e8:	str	r3, [sp]
   113ec:	ldr	r3, [pc, #152]	; 1148c <putchar_unlocked@plt+0x150>
   113f0:	bl	13544 <putchar_unlocked@plt+0x2208>
   113f4:	ldr	r3, [r8]
   113f8:	subs	r4, r4, r3
   113fc:	beq	11448 <putchar_unlocked@plt+0x10c>
   11400:	cmp	r4, r7
   11404:	beq	11454 <putchar_unlocked@plt+0x118>
   11408:	mov	r2, #5
   1140c:	ldr	r1, [pc, #124]	; 11490 <putchar_unlocked@plt+0x154>
   11410:	mov	r0, r5
   11414:	bl	1109c <dcgettext@plt>
   11418:	ldr	r3, [r8]
   1141c:	mov	r4, r0
   11420:	add	r3, r3, #1
   11424:	ldr	r0, [r6, r3, lsl #2]
   11428:	bl	14c0c <putchar_unlocked@plt+0x38d0>
   1142c:	mov	r3, r0
   11430:	mov	r2, r4
   11434:	mov	r0, r5
   11438:	mov	r1, r5
   1143c:	bl	11138 <error@plt>
   11440:	mov	r0, r7
   11444:	bl	11964 <putchar_unlocked@plt+0x628>
   11448:	ldr	r0, [pc, #68]	; 11494 <putchar_unlocked@plt+0x158>
   1144c:	mov	r1, r7
   11450:	bl	118fc <putchar_unlocked@plt+0x5c0>
   11454:	mov	r1, r5
   11458:	ldr	r0, [r6, r3, lsl #2]
   1145c:	b	11450 <putchar_unlocked@plt+0x114>
   11460:	andeq	r6, r1, r0, ror #2
   11464:	andeq	r6, r1, r6, asr #5
   11468:	andeq	r6, r1, r3, lsr #4
   1146c:	andeq	r1, r1, r0, ror #24
   11470:	ldrdeq	r6, [r1], -lr
   11474:	andeq	r7, r2, r8, lsl #3
   11478:	andeq	r5, r1, sl, lsl pc
   1147c:	andeq	r6, r1, sl, ror #5
   11480:	strdeq	r6, [r1], -sl
   11484:	andeq	r1, r1, r4, ror #18
   11488:	andeq	r7, r2, r8, lsr r1
   1148c:	andeq	r6, r1, pc, lsl r2
   11490:	andeq	r6, r1, fp, lsl #6
   11494:	andeq	r6, r1, pc, ror #2
   11498:	mov	fp, #0
   1149c:	mov	lr, #0
   114a0:	pop	{r1}		; (ldr r1, [sp], #4)
   114a4:	mov	r2, sp
   114a8:	push	{r2}		; (str r2, [sp, #-4]!)
   114ac:	push	{r0}		; (str r0, [sp, #-4]!)
   114b0:	ldr	ip, [pc, #16]	; 114c8 <putchar_unlocked@plt+0x18c>
   114b4:	push	{ip}		; (str ip, [sp, #-4]!)
   114b8:	ldr	r0, [pc, #12]	; 114cc <putchar_unlocked@plt+0x190>
   114bc:	ldr	r3, [pc, #12]	; 114d0 <putchar_unlocked@plt+0x194>
   114c0:	bl	1115c <__libc_start_main@plt>
   114c4:	bl	11318 <abort@plt>
   114c8:			; <UNDEFINED> instruction: 0x00015eb4
   114cc:	andeq	r1, r1, r0, ror #6
   114d0:	andeq	r5, r1, r4, asr lr
   114d4:	ldr	r3, [pc, #20]	; 114f0 <putchar_unlocked@plt+0x1b4>
   114d8:	ldr	r2, [pc, #20]	; 114f4 <putchar_unlocked@plt+0x1b8>
   114dc:	add	r3, pc, r3
   114e0:	ldr	r2, [r3, r2]
   114e4:	cmp	r2, #0
   114e8:	bxeq	lr
   114ec:	b	111a4 <__gmon_start__@plt>
   114f0:	andeq	r5, r1, ip, lsl fp
   114f4:	andeq	r0, r0, ip, lsr #2
   114f8:	ldr	r0, [pc, #24]	; 11518 <putchar_unlocked@plt+0x1dc>
   114fc:	ldr	r3, [pc, #24]	; 1151c <putchar_unlocked@plt+0x1e0>
   11500:	cmp	r3, r0
   11504:	bxeq	lr
   11508:	ldr	r3, [pc, #16]	; 11520 <putchar_unlocked@plt+0x1e4>
   1150c:	cmp	r3, #0
   11510:	bxeq	lr
   11514:	bx	r3
   11518:	andeq	r7, r2, r0, lsl #3
   1151c:	andeq	r7, r2, r0, lsl #3
   11520:	andeq	r0, r0, r0
   11524:	ldr	r0, [pc, #36]	; 11550 <putchar_unlocked@plt+0x214>
   11528:	ldr	r1, [pc, #36]	; 11554 <putchar_unlocked@plt+0x218>
   1152c:	sub	r1, r1, r0
   11530:	asr	r1, r1, #2
   11534:	add	r1, r1, r1, lsr #31
   11538:	asrs	r1, r1, #1
   1153c:	bxeq	lr
   11540:	ldr	r3, [pc, #16]	; 11558 <putchar_unlocked@plt+0x21c>
   11544:	cmp	r3, #0
   11548:	bxeq	lr
   1154c:	bx	r3
   11550:	andeq	r7, r2, r0, lsl #3
   11554:	andeq	r7, r2, r0, lsl #3
   11558:	andeq	r0, r0, r0
   1155c:	push	{r4, lr}
   11560:	ldr	r4, [pc, #24]	; 11580 <putchar_unlocked@plt+0x244>
   11564:	ldrb	r3, [r4]
   11568:	cmp	r3, #0
   1156c:	popne	{r4, pc}
   11570:	bl	114f8 <putchar_unlocked@plt+0x1bc>
   11574:	mov	r3, #1
   11578:	strb	r3, [r4]
   1157c:	pop	{r4, pc}
   11580:	muleq	r2, ip, r1
   11584:	b	11524 <putchar_unlocked@plt+0x1e8>
   11588:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1158c:	sub	sp, sp, #8192	; 0x2000
   11590:	mov	r8, r0
   11594:	sub	sp, sp, #16
   11598:	mov	r7, r1
   1159c:	ldr	r0, [pc, #780]	; 118b0 <putchar_unlocked@plt+0x574>
   115a0:	ldr	r1, [pc, #780]	; 118b4 <putchar_unlocked@plt+0x578>
   115a4:	bl	112d0 <fopen64@plt>
   115a8:	subs	r5, r0, #0
   115ac:	moveq	r4, r5
   115b0:	beq	11618 <putchar_unlocked@plt+0x2dc>
   115b4:	add	r6, sp, #16
   115b8:	mov	r2, r5
   115bc:	mov	r1, #8192	; 0x2000
   115c0:	mov	r0, r6
   115c4:	bl	112dc <fgets_unlocked@plt>
   115c8:	cmp	r0, r6
   115cc:	mov	r4, r0
   115d0:	bne	11624 <putchar_unlocked@plt+0x2e8>
   115d4:	sub	r1, r0, #4
   115d8:	bl	11bd8 <putchar_unlocked@plt+0x89c>
   115dc:	ldr	r3, [r4, #-4]
   115e0:	cmp	r3, r4
   115e4:	beq	11624 <putchar_unlocked@plt+0x2e8>
   115e8:	vcmpe.f64	d0, #0.0
   115ec:	vmrs	APSR_nzcv, fpscr
   115f0:	blt	1160c <putchar_unlocked@plt+0x2d0>
   115f4:	vldr	d7, [pc, #684]	; 118a8 <putchar_unlocked@plt+0x56c>
   115f8:	vcmpe.f64	d0, d7
   115fc:	vmrs	APSR_nzcv, fpscr
   11600:	vcvtmi.s32.f64	s15, d0
   11604:	vmovmi	r4, s15
   11608:	bmi	11610 <putchar_unlocked@plt+0x2d4>
   1160c:	mvn	r4, #0
   11610:	mov	r0, r5
   11614:	bl	11d34 <putchar_unlocked@plt+0x9f8>
   11618:	mov	r5, #0
   1161c:	mov	r6, r5
   11620:	b	11654 <putchar_unlocked@plt+0x318>
   11624:	mov	r4, #0
   11628:	b	11610 <putchar_unlocked@plt+0x2d4>
   1162c:	ldrb	r3, [r7, #44]	; 0x2c
   11630:	ldrsh	r2, [r7]
   11634:	add	r7, r7, #384	; 0x180
   11638:	cmp	r3, #0
   1163c:	subne	r3, r2, #7
   11640:	clzne	r3, r3
   11644:	lsrne	r3, r3, #5
   11648:	cmp	r2, #2
   1164c:	ldreq	r5, [r7, #-44]	; 0xffffffd4
   11650:	add	r6, r6, r3
   11654:	subs	r8, r8, #1
   11658:	bcs	1162c <putchar_unlocked@plt+0x2f0>
   1165c:	mov	r0, #0
   11660:	bl	11078 <time@plt>
   11664:	cmp	r4, #0
   11668:	str	r0, [sp, #12]
   1166c:	bne	116a4 <putchar_unlocked@plt+0x368>
   11670:	cmp	r5, #0
   11674:	subne	r4, r0, r5
   11678:	bne	116a4 <putchar_unlocked@plt+0x368>
   1167c:	bl	111f8 <__errno_location@plt>
   11680:	ldr	r4, [r0]
   11684:	mov	r2, #5
   11688:	mov	r0, r5
   1168c:	ldr	r1, [pc, #548]	; 118b8 <putchar_unlocked@plt+0x57c>
   11690:	bl	1109c <dcgettext@plt>
   11694:	mov	r2, r0
   11698:	mov	r0, #1
   1169c:	mov	r1, r4
   116a0:	bl	11138 <error@plt>
   116a4:	ldr	r7, [pc, #528]	; 118bc <putchar_unlocked@plt+0x580>
   116a8:	mov	r8, #3600	; 0xe10
   116ac:	mov	r3, #60	; 0x3c
   116b0:	add	r0, sp, #12
   116b4:	ldr	r1, [pc, #516]	; 118c0 <putchar_unlocked@plt+0x584>
   116b8:	ldr	r5, [pc, #516]	; 118c4 <putchar_unlocked@plt+0x588>
   116bc:	sdiv	r7, r4, r7
   116c0:	mla	r1, r1, r7, r4
   116c4:	sdiv	r8, r1, r8
   116c8:	mla	r5, r5, r8, r1
   116cc:	sdiv	r5, r5, r3
   116d0:	bl	11180 <localtime@plt>
   116d4:	subs	sl, r0, #0
   116d8:	beq	11788 <putchar_unlocked@plt+0x44c>
   116dc:	ldr	r3, [pc, #484]	; 118c8 <putchar_unlocked@plt+0x58c>
   116e0:	mov	r2, #5
   116e4:	mov	r0, #0
   116e8:	ldr	r1, [pc, #476]	; 118cc <putchar_unlocked@plt+0x590>
   116ec:	ldr	r9, [r3]
   116f0:	bl	1109c <dcgettext@plt>
   116f4:	mov	r3, #0
   116f8:	mov	r1, r0
   116fc:	mov	r2, sl
   11700:	str	r3, [sp]
   11704:	mov	r0, r9
   11708:	bl	133b4 <putchar_unlocked@plt+0x2078>
   1170c:	cmn	r4, #1
   11710:	bne	117a4 <putchar_unlocked@plt+0x468>
   11714:	ldr	r1, [pc, #436]	; 118d0 <putchar_unlocked@plt+0x594>
   11718:	mov	r2, #5
   1171c:	mov	r0, #0
   11720:	bl	1109c <dcgettext@plt>
   11724:	mov	r1, r0
   11728:	mov	r0, #1
   1172c:	bl	11228 <__printf_chk@plt>
   11730:	mov	r5, #5
   11734:	mov	r3, r6
   11738:	ldr	r2, [pc, #404]	; 118d4 <putchar_unlocked@plt+0x598>
   1173c:	mov	r0, #0
   11740:	ldr	r1, [pc, #400]	; 118d8 <putchar_unlocked@plt+0x59c>
   11744:	str	r5, [sp]
   11748:	bl	11330 <dcngettext@plt>
   1174c:	mov	r1, r0
   11750:	mov	r2, r6
   11754:	mov	r0, #1
   11758:	bl	11228 <__printf_chk@plt>
   1175c:	mov	r1, #3
   11760:	add	r0, sp, #16
   11764:	bl	11264 <getloadavg@plt>
   11768:	cmn	r0, #1
   1176c:	mov	r4, r0
   11770:	bne	11840 <putchar_unlocked@plt+0x504>
   11774:	mov	r0, #10
   11778:	bl	1133c <putchar_unlocked@plt>
   1177c:	add	sp, sp, #8192	; 0x2000
   11780:	add	sp, sp, #16
   11784:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11788:	mov	r2, #5
   1178c:	ldr	r1, [pc, #328]	; 118dc <putchar_unlocked@plt+0x5a0>
   11790:	bl	1109c <dcgettext@plt>
   11794:	mov	r1, r0
   11798:	mov	r0, #1
   1179c:	bl	11228 <__printf_chk@plt>
   117a0:	b	1170c <putchar_unlocked@plt+0x3d0>
   117a4:	ldr	r3, [pc, #308]	; 118e0 <putchar_unlocked@plt+0x5a4>
   117a8:	cmp	r4, r3
   117ac:	ble	11818 <putchar_unlocked@plt+0x4dc>
   117b0:	asr	r1, r7, #31
   117b4:	mov	r3, #0
   117b8:	mvn	r2, #0
   117bc:	mov	r0, r7
   117c0:	cmp	r1, r3
   117c4:	cmpeq	r7, r2
   117c8:	movls	r3, r7
   117cc:	bls	117e4 <putchar_unlocked@plt+0x4a8>
   117d0:	ldr	r2, [pc, #268]	; 118e4 <putchar_unlocked@plt+0x5a8>
   117d4:	mov	r3, #0
   117d8:	bl	15ce0 <putchar_unlocked@plt+0x49a4>
   117dc:	add	r3, r2, #999424	; 0xf4000
   117e0:	add	r3, r3, #576	; 0x240
   117e4:	mov	r2, #5
   117e8:	ldr	r1, [pc, #248]	; 118e8 <putchar_unlocked@plt+0x5ac>
   117ec:	mov	r0, #0
   117f0:	str	r2, [sp]
   117f4:	ldr	r2, [pc, #240]	; 118ec <putchar_unlocked@plt+0x5b0>
   117f8:	bl	11330 <dcngettext@plt>
   117fc:	mov	r1, r0
   11800:	mov	r3, r8
   11804:	str	r5, [sp]
   11808:	mov	r2, r7
   1180c:	mov	r0, #1
   11810:	bl	11228 <__printf_chk@plt>
   11814:	b	11730 <putchar_unlocked@plt+0x3f4>
   11818:	mov	r2, #5
   1181c:	ldr	r1, [pc, #204]	; 118f0 <putchar_unlocked@plt+0x5b4>
   11820:	mov	r0, #0
   11824:	bl	1109c <dcgettext@plt>
   11828:	mov	r1, r0
   1182c:	mov	r3, r5
   11830:	mov	r2, r8
   11834:	mov	r0, #1
   11838:	bl	11228 <__printf_chk@plt>
   1183c:	b	11730 <putchar_unlocked@plt+0x3f4>
   11840:	cmp	r0, #0
   11844:	ble	11868 <putchar_unlocked@plt+0x52c>
   11848:	mov	r2, r5
   1184c:	ldr	r1, [pc, #160]	; 118f4 <putchar_unlocked@plt+0x5b8>
   11850:	mov	r0, #0
   11854:	bl	1109c <dcgettext@plt>
   11858:	mov	r1, r0
   1185c:	mov	r0, #1
   11860:	ldrd	r2, [sp, #16]
   11864:	bl	11228 <__printf_chk@plt>
   11868:	cmp	r4, #1
   1186c:	ble	1189c <putchar_unlocked@plt+0x560>
   11870:	ldr	r1, [pc, #128]	; 118f8 <putchar_unlocked@plt+0x5bc>
   11874:	mov	r0, #1
   11878:	ldrd	r2, [sp, #24]
   1187c:	bl	11228 <__printf_chk@plt>
   11880:	cmp	r4, #2
   11884:	beq	11774 <putchar_unlocked@plt+0x438>
   11888:	ldr	r1, [pc, #104]	; 118f8 <putchar_unlocked@plt+0x5bc>
   1188c:	mov	r0, #1
   11890:	ldrd	r2, [sp, #32]
   11894:	bl	11228 <__printf_chk@plt>
   11898:	b	11774 <putchar_unlocked@plt+0x438>
   1189c:	bne	1177c <putchar_unlocked@plt+0x440>
   118a0:	b	11774 <putchar_unlocked@plt+0x438>
   118a4:	nop	{0}
   118a8:			; <UNDEFINED> instruction: 0xffc00000
   118ac:	ldrshmi	pc, [pc, #255]	; 119b3 <putchar_unlocked@plt+0x677>	; <UNPREDICTABLE>
   118b0:	andeq	r5, r1, r4, lsl pc
   118b4:			; <UNDEFINED> instruction: 0x00015fb5
   118b8:	andeq	r5, r1, r1, lsr #30
   118bc:	andeq	r5, r1, r0, lsl #3
   118c0:			; <UNDEFINED> instruction: 0xfffeae80
   118c4:			; <UNDEFINED> instruction: 0xfffff1f0
   118c8:	muleq	r2, r4, r1
   118cc:	andeq	r5, r1, r8, lsr pc
   118d0:	andeq	r5, r1, pc, asr #30
   118d4:	andeq	r5, r1, r4, lsr #31
   118d8:	andeq	r5, r1, lr, lsr #31
   118dc:	andeq	r5, r1, r4, asr #30
   118e0:	andeq	r5, r1, pc, ror r1
   118e4:	andeq	r4, pc, r0, asr #4
   118e8:	andeq	r5, r1, sp, ror pc
   118ec:	andeq	r5, r1, r5, ror #30
   118f0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   118f4:			; <UNDEFINED> instruction: 0x00015fb7
   118f8:	andeq	r5, r1, sp, asr #31
   118fc:	mov	r4, #0
   11900:	push	{r0, r1, r2, lr}
   11904:	mov	r3, r1
   11908:	add	r2, sp, #4
   1190c:	mov	r1, sp
   11910:	mov	r6, r0
   11914:	str	r4, [sp, #4]
   11918:	bl	14c70 <putchar_unlocked@plt+0x3934>
   1191c:	subs	r5, r0, #0
   11920:	beq	11950 <putchar_unlocked@plt+0x614>
   11924:	bl	111f8 <__errno_location@plt>
   11928:	ldr	r5, [r0]
   1192c:	mov	r2, r6
   11930:	mov	r1, #3
   11934:	mov	r0, r4
   11938:	bl	14acc <putchar_unlocked@plt+0x3790>
   1193c:	mov	r3, r0
   11940:	ldr	r2, [pc, #24]	; 11960 <putchar_unlocked@plt+0x624>
   11944:	mov	r0, #1
   11948:	mov	r1, r5
   1194c:	bl	11138 <error@plt>
   11950:	ldrd	r0, [sp]
   11954:	bl	11588 <putchar_unlocked@plt+0x24c>
   11958:	mov	r0, r5
   1195c:	bl	111d4 <exit@plt>
   11960:	muleq	r1, ip, r3
   11964:	subs	r4, r0, #0
   11968:	push	{r7, lr}
   1196c:	sub	sp, sp, #56	; 0x38
   11970:	ldr	r5, [pc, #516]	; 11b7c <putchar_unlocked@plt+0x840>
   11974:	beq	119ac <putchar_unlocked@plt+0x670>
   11978:	mov	r2, #5
   1197c:	mov	r0, #0
   11980:	ldr	r3, [pc, #504]	; 11b80 <putchar_unlocked@plt+0x844>
   11984:	ldr	r1, [pc, #504]	; 11b84 <putchar_unlocked@plt+0x848>
   11988:	ldr	r6, [r3]
   1198c:	bl	1109c <dcgettext@plt>
   11990:	mov	r2, r0
   11994:	mov	r1, #1
   11998:	ldr	r3, [r5]
   1199c:	mov	r0, r6
   119a0:	bl	11240 <__fprintf_chk@plt>
   119a4:	mov	r0, r4
   119a8:	bl	111d4 <exit@plt>
   119ac:	mov	r2, #5
   119b0:	ldr	r1, [pc, #464]	; 11b88 <putchar_unlocked@plt+0x84c>
   119b4:	mov	r7, sp
   119b8:	bl	1109c <dcgettext@plt>
   119bc:	mov	r1, r0
   119c0:	mov	r0, #1
   119c4:	ldr	r2, [r5]
   119c8:	bl	11228 <__printf_chk@plt>
   119cc:	mov	r2, #5
   119d0:	ldr	r1, [pc, #436]	; 11b8c <putchar_unlocked@plt+0x850>
   119d4:	mov	r0, r4
   119d8:	bl	1109c <dcgettext@plt>
   119dc:	mov	r1, r0
   119e0:	mov	r0, #1
   119e4:	ldr	r6, [pc, #420]	; 11b90 <putchar_unlocked@plt+0x854>
   119e8:	bl	11228 <__printf_chk@plt>
   119ec:	mov	r2, #5
   119f0:	ldr	r1, [pc, #412]	; 11b94 <putchar_unlocked@plt+0x858>
   119f4:	mov	r0, r4
   119f8:	bl	1109c <dcgettext@plt>
   119fc:	mov	r1, r0
   11a00:	mov	r0, #1
   11a04:	ldr	r5, [pc, #396]	; 11b98 <putchar_unlocked@plt+0x85c>
   11a08:	bl	11228 <__printf_chk@plt>
   11a0c:	mov	r2, #5
   11a10:	ldr	r1, [pc, #388]	; 11b9c <putchar_unlocked@plt+0x860>
   11a14:	mov	r0, r4
   11a18:	bl	1109c <dcgettext@plt>
   11a1c:	mov	r1, r0
   11a20:	ldr	r3, [pc, #376]	; 11ba0 <putchar_unlocked@plt+0x864>
   11a24:	mov	r0, #1
   11a28:	ldr	r2, [pc, #372]	; 11ba4 <putchar_unlocked@plt+0x868>
   11a2c:	bl	11228 <__printf_chk@plt>
   11a30:	mov	r2, #5
   11a34:	ldr	r1, [pc, #364]	; 11ba8 <putchar_unlocked@plt+0x86c>
   11a38:	mov	r0, r4
   11a3c:	bl	1109c <dcgettext@plt>
   11a40:	ldr	r1, [r6]
   11a44:	bl	10ff4 <fputs_unlocked@plt>
   11a48:	mov	r2, #5
   11a4c:	ldr	r1, [pc, #344]	; 11bac <putchar_unlocked@plt+0x870>
   11a50:	mov	r0, r4
   11a54:	bl	1109c <dcgettext@plt>
   11a58:	ldr	r1, [r6]
   11a5c:	bl	10ff4 <fputs_unlocked@plt>
   11a60:	ldr	lr, [pc, #328]	; 11bb0 <putchar_unlocked@plt+0x874>
   11a64:	mov	ip, sp
   11a68:	ldm	lr!, {r0, r1, r2, r3}
   11a6c:	stmia	ip!, {r0, r1, r2, r3}
   11a70:	ldm	lr!, {r0, r1, r2, r3}
   11a74:	stmia	ip!, {r0, r1, r2, r3}
   11a78:	ldm	lr!, {r0, r1, r2, r3}
   11a7c:	stmia	ip!, {r0, r1, r2, r3}
   11a80:	ldm	lr, {r0, r1}
   11a84:	stm	ip, {r0, r1}
   11a88:	ldr	r1, [r7]
   11a8c:	cmp	r1, #0
   11a90:	bne	11b34 <putchar_unlocked@plt+0x7f8>
   11a94:	ldr	r5, [r7, #4]
   11a98:	mov	r2, #5
   11a9c:	mov	r0, #0
   11aa0:	ldr	r7, [pc, #240]	; 11b98 <putchar_unlocked@plt+0x85c>
   11aa4:	ldr	r1, [pc, #264]	; 11bb4 <putchar_unlocked@plt+0x878>
   11aa8:	cmp	r5, #0
   11aac:	moveq	r5, r7
   11ab0:	bl	1109c <dcgettext@plt>
   11ab4:	mov	r1, r0
   11ab8:	ldr	r3, [pc, #248]	; 11bb8 <putchar_unlocked@plt+0x87c>
   11abc:	mov	r0, #1
   11ac0:	ldr	r2, [pc, #244]	; 11bbc <putchar_unlocked@plt+0x880>
   11ac4:	bl	11228 <__printf_chk@plt>
   11ac8:	mov	r1, #0
   11acc:	mov	r0, #5
   11ad0:	bl	11288 <setlocale@plt>
   11ad4:	cmp	r0, #0
   11ad8:	bne	11b4c <putchar_unlocked@plt+0x810>
   11adc:	mov	r2, #5
   11ae0:	ldr	r1, [pc, #216]	; 11bc0 <putchar_unlocked@plt+0x884>
   11ae4:	mov	r0, #0
   11ae8:	bl	1109c <dcgettext@plt>
   11aec:	mov	r1, r0
   11af0:	ldr	r3, [pc, #160]	; 11b98 <putchar_unlocked@plt+0x85c>
   11af4:	mov	r0, #1
   11af8:	ldr	r2, [pc, #184]	; 11bb8 <putchar_unlocked@plt+0x87c>
   11afc:	bl	11228 <__printf_chk@plt>
   11b00:	mov	r2, #5
   11b04:	ldr	r1, [pc, #184]	; 11bc4 <putchar_unlocked@plt+0x888>
   11b08:	mov	r0, #0
   11b0c:	bl	1109c <dcgettext@plt>
   11b10:	ldr	r2, [pc, #176]	; 11bc8 <putchar_unlocked@plt+0x88c>
   11b14:	cmp	r5, r7
   11b18:	mov	r1, r0
   11b1c:	mov	r0, #1
   11b20:	ldr	r3, [pc, #164]	; 11bcc <putchar_unlocked@plt+0x890>
   11b24:	moveq	r3, r2
   11b28:	mov	r2, r5
   11b2c:	bl	11228 <__printf_chk@plt>
   11b30:	b	119a4 <putchar_unlocked@plt+0x668>
   11b34:	mov	r0, r5
   11b38:	bl	11018 <strcmp@plt>
   11b3c:	cmp	r0, #0
   11b40:	beq	11a94 <putchar_unlocked@plt+0x758>
   11b44:	add	r7, r7, #8
   11b48:	b	11a88 <putchar_unlocked@plt+0x74c>
   11b4c:	mov	r2, #3
   11b50:	ldr	r1, [pc, #120]	; 11bd0 <putchar_unlocked@plt+0x894>
   11b54:	bl	1130c <strncmp@plt>
   11b58:	cmp	r0, #0
   11b5c:	beq	11adc <putchar_unlocked@plt+0x7a0>
   11b60:	mov	r2, #5
   11b64:	ldr	r1, [pc, #104]	; 11bd4 <putchar_unlocked@plt+0x898>
   11b68:	mov	r0, #0
   11b6c:	bl	1109c <dcgettext@plt>
   11b70:	ldr	r1, [r6]
   11b74:	bl	10ff4 <fputs_unlocked@plt>
   11b78:	b	11adc <putchar_unlocked@plt+0x7a0>
   11b7c:	andeq	r7, r2, ip, lsr #3
   11b80:	muleq	r2, r0, r1
   11b84:	ldrdeq	r5, [r1], -r4
   11b88:	strdeq	r5, [r1], -fp
   11b8c:	andeq	r6, r1, r9, lsl r0
   11b90:	muleq	r2, r4, r1
   11b94:	ldrdeq	r6, [r1], -r2
   11b98:	andeq	r5, r1, sl, lsl pc
   11b9c:	andeq	r6, r1, r6, lsr #2
   11ba0:	andeq	r6, r1, r1, ror #2
   11ba4:	andeq	r6, r1, pc, ror #2
   11ba8:	andeq	r6, r1, sp, ror r1
   11bac:	andeq	r6, r1, sl, lsr #3
   11bb0:	ldrdeq	r5, [r1], -ip
   11bb4:	andeq	r6, r1, r0, ror #3
   11bb8:	strdeq	r6, [r1], -r7
   11bbc:	andeq	r6, r1, pc, lsl r2
   11bc0:	andeq	r6, r1, r8, ror r2
   11bc4:	muleq	r1, r3, r2
   11bc8:	andeq	r6, r1, r8, lsr r3
   11bcc:	andeq	r6, r1, r0, ror #2
   11bd0:	andeq	r6, r1, sp, lsr #4
   11bd4:	andeq	r6, r1, r1, lsr r2
   11bd8:	push	{r4, r5, r6, lr}
   11bdc:	mov	r6, r0
   11be0:	mov	r5, r1
   11be4:	ldr	r4, [pc, #76]	; 11c38 <putchar_unlocked@plt+0x8fc>
   11be8:	ldr	r2, [r4]
   11bec:	cmp	r2, #0
   11bf0:	bne	11c04 <putchar_unlocked@plt+0x8c8>
   11bf4:	ldr	r1, [pc, #64]	; 11c3c <putchar_unlocked@plt+0x900>
   11bf8:	movw	r0, #8127	; 0x1fbf
   11bfc:	bl	112b8 <newlocale@plt>
   11c00:	str	r0, [r4]
   11c04:	ldr	r2, [r4]
   11c08:	cmp	r2, #0
   11c0c:	bne	11c20 <putchar_unlocked@plt+0x8e4>
   11c10:	cmp	r5, #0
   11c14:	vldr	d0, [pc, #20]	; 11c30 <putchar_unlocked@plt+0x8f4>
   11c18:	strne	r6, [r5]
   11c1c:	pop	{r4, r5, r6, pc}
   11c20:	mov	r1, r5
   11c24:	mov	r0, r6
   11c28:	pop	{r4, r5, r6, lr}
   11c2c:	b	11270 <strtod_l@plt>
	...
   11c38:	andeq	r7, r2, r0, lsr #3
   11c3c:	andeq	r6, r1, sl, lsl #7
   11c40:	ldr	r3, [pc, #4]	; 11c4c <putchar_unlocked@plt+0x910>
   11c44:	str	r0, [r3]
   11c48:	bx	lr
   11c4c:	andeq	r7, r2, r4, lsr #3
   11c50:	ldr	r3, [pc, #4]	; 11c5c <putchar_unlocked@plt+0x920>
   11c54:	strb	r0, [r3, #4]
   11c58:	bx	lr
   11c5c:	andeq	r7, r2, r4, lsr #3
   11c60:	ldr	r3, [pc, #176]	; 11d18 <putchar_unlocked@plt+0x9dc>
   11c64:	push	{r0, r1, r4, r5, r6, lr}
   11c68:	ldr	r0, [r3]
   11c6c:	bl	15a68 <putchar_unlocked@plt+0x472c>
   11c70:	cmp	r0, #0
   11c74:	beq	11cfc <putchar_unlocked@plt+0x9c0>
   11c78:	ldr	r4, [pc, #156]	; 11d1c <putchar_unlocked@plt+0x9e0>
   11c7c:	bl	111f8 <__errno_location@plt>
   11c80:	mov	r5, r0
   11c84:	ldrb	r6, [r4, #4]
   11c88:	cmp	r6, #0
   11c8c:	beq	11c9c <putchar_unlocked@plt+0x960>
   11c90:	ldr	r3, [r0]
   11c94:	cmp	r3, #32
   11c98:	beq	11cfc <putchar_unlocked@plt+0x9c0>
   11c9c:	mov	r2, #5
   11ca0:	ldr	r1, [pc, #120]	; 11d20 <putchar_unlocked@plt+0x9e4>
   11ca4:	mov	r0, #0
   11ca8:	bl	1109c <dcgettext@plt>
   11cac:	mov	r6, r0
   11cb0:	ldr	r0, [r4]
   11cb4:	cmp	r0, #0
   11cb8:	beq	11ce8 <putchar_unlocked@plt+0x9ac>
   11cbc:	ldr	r4, [r5]
   11cc0:	bl	14abc <putchar_unlocked@plt+0x3780>
   11cc4:	mov	r3, r0
   11cc8:	ldr	r2, [pc, #84]	; 11d24 <putchar_unlocked@plt+0x9e8>
   11ccc:	mov	r0, #0
   11cd0:	str	r6, [sp]
   11cd4:	mov	r1, r4
   11cd8:	bl	11138 <error@plt>
   11cdc:	ldr	r3, [pc, #68]	; 11d28 <putchar_unlocked@plt+0x9ec>
   11ce0:	ldr	r0, [r3]
   11ce4:	bl	11054 <_exit@plt>
   11ce8:	mov	r3, r6
   11cec:	ldr	r2, [pc, #56]	; 11d2c <putchar_unlocked@plt+0x9f0>
   11cf0:	ldr	r1, [r5]
   11cf4:	bl	11138 <error@plt>
   11cf8:	b	11cdc <putchar_unlocked@plt+0x9a0>
   11cfc:	ldr	r3, [pc, #44]	; 11d30 <putchar_unlocked@plt+0x9f4>
   11d00:	ldr	r0, [r3]
   11d04:	bl	15a68 <putchar_unlocked@plt+0x472c>
   11d08:	cmp	r0, #0
   11d0c:	bne	11cdc <putchar_unlocked@plt+0x9a0>
   11d10:	add	sp, sp, #8
   11d14:	pop	{r4, r5, r6, pc}
   11d18:	muleq	r2, r4, r1
   11d1c:	andeq	r7, r2, r4, lsr #3
   11d20:	andeq	r6, r1, ip, lsl #7
   11d24:	muleq	r1, r8, r3
   11d28:	andeq	r7, r2, ip, lsr r1
   11d2c:	muleq	r1, ip, r3
   11d30:	muleq	r2, r0, r1
   11d34:	push	{r0, r1, r2, r4, r5, lr}
   11d38:	mov	r4, r0
   11d3c:	bl	11234 <fileno@plt>
   11d40:	cmp	r0, #0
   11d44:	mov	r0, r4
   11d48:	bge	11d58 <putchar_unlocked@plt+0xa1c>
   11d4c:	add	sp, sp, #12
   11d50:	pop	{r4, r5, lr}
   11d54:	b	1124c <fclose@plt>
   11d58:	bl	11174 <__freading@plt>
   11d5c:	cmp	r0, #0
   11d60:	bne	11d9c <putchar_unlocked@plt+0xa60>
   11d64:	mov	r0, r4
   11d68:	bl	11ddc <putchar_unlocked@plt+0xaa0>
   11d6c:	cmp	r0, #0
   11d70:	bne	11dd0 <putchar_unlocked@plt+0xa94>
   11d74:	mov	r5, #0
   11d78:	mov	r0, r4
   11d7c:	bl	1124c <fclose@plt>
   11d80:	cmp	r5, #0
   11d84:	beq	11d94 <putchar_unlocked@plt+0xa58>
   11d88:	bl	111f8 <__errno_location@plt>
   11d8c:	str	r5, [r0]
   11d90:	mvn	r0, #0
   11d94:	add	sp, sp, #12
   11d98:	pop	{r4, r5, pc}
   11d9c:	mov	r0, r4
   11da0:	bl	11234 <fileno@plt>
   11da4:	mov	r3, #1
   11da8:	mov	r2, #0
   11dac:	str	r3, [sp]
   11db0:	mov	r3, #0
   11db4:	bl	110fc <lseek64@plt>
   11db8:	mvn	r3, #0
   11dbc:	mvn	r2, #0
   11dc0:	cmp	r1, r3
   11dc4:	cmpeq	r0, r2
   11dc8:	bne	11d64 <putchar_unlocked@plt+0xa28>
   11dcc:	b	11d74 <putchar_unlocked@plt+0xa38>
   11dd0:	bl	111f8 <__errno_location@plt>
   11dd4:	ldr	r5, [r0]
   11dd8:	b	11d78 <putchar_unlocked@plt+0xa3c>
   11ddc:	push	{r0, r1, r4, lr}
   11de0:	subs	r4, r0, #0
   11de4:	bne	11df8 <putchar_unlocked@plt+0xabc>
   11de8:	mov	r0, r4
   11dec:	add	sp, sp, #8
   11df0:	pop	{r4, lr}
   11df4:	b	11030 <fflush@plt>
   11df8:	bl	11174 <__freading@plt>
   11dfc:	cmp	r0, #0
   11e00:	beq	11de8 <putchar_unlocked@plt+0xaac>
   11e04:	ldr	r3, [r4]
   11e08:	tst	r3, #256	; 0x100
   11e0c:	beq	11de8 <putchar_unlocked@plt+0xaac>
   11e10:	mov	r3, #1
   11e14:	mov	r2, #0
   11e18:	mov	r0, r4
   11e1c:	str	r3, [sp]
   11e20:	mov	r3, #0
   11e24:	bl	133f4 <putchar_unlocked@plt+0x20b8>
   11e28:	b	11de8 <putchar_unlocked@plt+0xaac>
   11e2c:	push	{r4, r5, r6, lr}
   11e30:	mov	r6, r0
   11e34:	mov	r4, r1
   11e38:	add	r5, r1, r2
   11e3c:	cmp	r4, r5
   11e40:	popeq	{r4, r5, r6, pc}
   11e44:	bl	1118c <__ctype_tolower_loc@plt>
   11e48:	ldrb	r2, [r4], #1
   11e4c:	mov	r1, r6
   11e50:	ldr	r3, [r0]
   11e54:	ldr	r0, [r3, r2, lsl #2]
   11e58:	bl	112ac <fputc@plt>
   11e5c:	b	11e3c <putchar_unlocked@plt+0xb00>
   11e60:	push	{r4, r5, r6, lr}
   11e64:	mov	r6, r0
   11e68:	mov	r4, r1
   11e6c:	add	r5, r1, r2
   11e70:	cmp	r4, r5
   11e74:	popeq	{r4, r5, r6, pc}
   11e78:	bl	11198 <__ctype_toupper_loc@plt>
   11e7c:	ldrb	r2, [r4], #1
   11e80:	mov	r1, r6
   11e84:	ldr	r3, [r0]
   11e88:	ldr	r0, [r3, r2, lsl #2]
   11e8c:	bl	112ac <fputc@plt>
   11e90:	b	11e70 <putchar_unlocked@plt+0xb34>
   11e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e98:	sub	sp, sp, #1104	; 0x450
   11e9c:	mov	r7, r2
   11ea0:	sub	sp, sp, #4
   11ea4:	mov	r6, r0
   11ea8:	mov	r9, r1
   11eac:	str	r3, [sp, #52]	; 0x34
   11eb0:	bl	111f8 <__errno_location@plt>
   11eb4:	ldr	r3, [r0]
   11eb8:	str	r0, [sp, #36]	; 0x24
   11ebc:	ldr	r5, [sp, #1148]	; 0x47c
   11ec0:	str	r3, [sp, #48]	; 0x30
   11ec4:	ldr	r3, [r7, #8]
   11ec8:	str	r3, [sp, #40]	; 0x28
   11ecc:	ldr	r3, [r7, #40]	; 0x28
   11ed0:	str	r3, [sp, #44]	; 0x2c
   11ed4:	ldr	r2, [sp, #44]	; 0x2c
   11ed8:	ldr	r3, [pc, #4064]	; 12ec0 <putchar_unlocked@plt+0x1b84>
   11edc:	cmp	r2, #0
   11ee0:	moveq	r2, r3
   11ee4:	ldr	r3, [sp, #40]	; 0x28
   11ee8:	str	r2, [sp, #44]	; 0x2c
   11eec:	cmp	r3, #12
   11ef0:	subgt	r3, r3, #12
   11ef4:	bgt	11f04 <putchar_unlocked@plt+0xbc8>
   11ef8:	ldr	r3, [sp, #40]	; 0x28
   11efc:	cmp	r3, #0
   11f00:	moveq	r3, #12
   11f04:	str	r3, [sp, #40]	; 0x28
   11f08:	mov	r3, #0
   11f0c:	str	r3, [sp, #24]
   11f10:	ldrb	r3, [r9]
   11f14:	cmp	r3, #0
   11f18:	bne	11f2c <putchar_unlocked@plt+0xbf0>
   11f1c:	ldr	r3, [sp, #36]	; 0x24
   11f20:	ldr	r2, [sp, #48]	; 0x30
   11f24:	str	r2, [r3]
   11f28:	b	12e0c <putchar_unlocked@plt+0x1ad0>
   11f2c:	cmp	r3, #37	; 0x25
   11f30:	beq	1226c <putchar_unlocked@plt+0xf30>
   11f34:	ldr	r2, [sp, #24]
   11f38:	bic	r3, r5, r5, asr #31
   11f3c:	cmp	r3, #1
   11f40:	movcs	r4, r3
   11f44:	movcc	r4, #1
   11f48:	mvn	r2, r2
   11f4c:	cmp	r2, r4
   11f50:	bhi	11f5c <putchar_unlocked@plt+0xc20>
   11f54:	mov	r3, #34	; 0x22
   11f58:	b	12dfc <putchar_unlocked@plt+0x1ac0>
   11f5c:	cmp	r6, #0
   11f60:	beq	11f78 <putchar_unlocked@plt+0xc3c>
   11f64:	cmp	r5, #1
   11f68:	bgt	11f90 <putchar_unlocked@plt+0xc54>
   11f6c:	mov	r1, r6
   11f70:	ldrb	r0, [r9]
   11f74:	bl	112ac <fputc@plt>
   11f78:	ldr	r3, [sp, #24]
   11f7c:	add	r3, r3, r4
   11f80:	str	r3, [sp, #24]
   11f84:	add	r9, r9, #1
   11f88:	mvn	r5, #0
   11f8c:	b	11f10 <putchar_unlocked@plt+0xbd4>
   11f90:	sub	r5, r3, #1
   11f94:	mov	r8, #0
   11f98:	mov	r1, r6
   11f9c:	mov	r0, #32
   11fa0:	add	r8, r8, #1
   11fa4:	bl	112ac <fputc@plt>
   11fa8:	cmp	r5, r8
   11fac:	bhi	11f98 <putchar_unlocked@plt+0xc5c>
   11fb0:	b	11f6c <putchar_unlocked@plt+0xc30>
   11fb4:	mov	r4, r3
   11fb8:	ldr	r2, [sp, #28]
   11fbc:	ldrb	r3, [r2, #1]!
   11fc0:	cmp	r3, #45	; 0x2d
   11fc4:	str	r2, [sp, #28]
   11fc8:	beq	11fb4 <putchar_unlocked@plt+0xc78>
   11fcc:	bhi	12284 <putchar_unlocked@plt+0xf48>
   11fd0:	cmp	r3, #35	; 0x23
   11fd4:	moveq	r8, #1
   11fd8:	beq	11fb8 <putchar_unlocked@plt+0xc7c>
   11fdc:	cmp	r3, #43	; 0x2b
   11fe0:	beq	11fb4 <putchar_unlocked@plt+0xc78>
   11fe4:	sub	r3, r3, #48	; 0x30
   11fe8:	cmp	r3, #9
   11fec:	bhi	12034 <putchar_unlocked@plt+0xcf8>
   11ff0:	mov	r5, #0
   11ff4:	mov	r3, #10
   11ff8:	smull	r0, r1, r5, r3
   11ffc:	cmp	r1, r0, asr #31
   12000:	bne	12018 <putchar_unlocked@plt+0xcdc>
   12004:	ldr	r2, [sp, #28]
   12008:	ldrb	r5, [r2]
   1200c:	sub	r5, r5, #48	; 0x30
   12010:	adds	r5, r0, r5
   12014:	bvc	1201c <putchar_unlocked@plt+0xce0>
   12018:	mvn	r5, #-2147483648	; 0x80000000
   1201c:	ldr	r2, [sp, #28]
   12020:	ldrb	r3, [r2, #1]!
   12024:	sub	r3, r3, #48	; 0x30
   12028:	str	r2, [sp, #28]
   1202c:	cmp	r3, #9
   12030:	bls	11ff4 <putchar_unlocked@plt+0xcb8>
   12034:	ldr	r3, [sp, #28]
   12038:	ldrb	r1, [r3]
   1203c:	cmp	r1, #69	; 0x45
   12040:	beq	12050 <putchar_unlocked@plt+0xd14>
   12044:	cmp	r1, #79	; 0x4f
   12048:	movne	r1, #0
   1204c:	bne	1205c <putchar_unlocked@plt+0xd20>
   12050:	ldr	r3, [sp, #28]
   12054:	add	r3, r3, #1
   12058:	str	r3, [sp, #28]
   1205c:	ldr	r3, [sp, #28]
   12060:	ldrb	sl, [r3]
   12064:	mov	lr, sl
   12068:	cmp	sl, #122	; 0x7a
   1206c:	ldrls	pc, [pc, sl, lsl #2]
   12070:	b	125f0 <putchar_unlocked@plt+0x12b4>
   12074:	andeq	r3, r1, ip, lsr r3
   12078:	strdeq	r2, [r1], -r0
   1207c:	strdeq	r2, [r1], -r0
   12080:	strdeq	r2, [r1], -r0
   12084:	strdeq	r2, [r1], -r0
   12088:	strdeq	r2, [r1], -r0
   1208c:	strdeq	r2, [r1], -r0
   12090:	strdeq	r2, [r1], -r0
   12094:	strdeq	r2, [r1], -r0
   12098:	strdeq	r2, [r1], -r0
   1209c:	strdeq	r2, [r1], -r0
   120a0:	strdeq	r2, [r1], -r0
   120a4:	strdeq	r2, [r1], -r0
   120a8:	strdeq	r2, [r1], -r0
   120ac:	strdeq	r2, [r1], -r0
   120b0:	strdeq	r2, [r1], -r0
   120b4:	strdeq	r2, [r1], -r0
   120b8:	strdeq	r2, [r1], -r0
   120bc:	strdeq	r2, [r1], -r0
   120c0:	strdeq	r2, [r1], -r0
   120c4:	strdeq	r2, [r1], -r0
   120c8:	strdeq	r2, [r1], -r0
   120cc:	strdeq	r2, [r1], -r0
   120d0:	strdeq	r2, [r1], -r0
   120d4:	strdeq	r2, [r1], -r0
   120d8:	strdeq	r2, [r1], -r0
   120dc:	strdeq	r2, [r1], -r0
   120e0:	strdeq	r2, [r1], -r0
   120e4:	strdeq	r2, [r1], -r0
   120e8:	strdeq	r2, [r1], -r0
   120ec:	strdeq	r2, [r1], -r0
   120f0:	strdeq	r2, [r1], -r0
   120f4:	strdeq	r2, [r1], -r0
   120f8:	strdeq	r2, [r1], -r0
   120fc:	strdeq	r2, [r1], -r0
   12100:	strdeq	r2, [r1], -r0
   12104:	strdeq	r2, [r1], -r0
   12108:	andeq	r2, r1, ip, ror #7
   1210c:	strdeq	r2, [r1], -r0
   12110:	strdeq	r2, [r1], -r0
   12114:	strdeq	r2, [r1], -r0
   12118:	strdeq	r2, [r1], -r0
   1211c:	strdeq	r2, [r1], -r0
   12120:	strdeq	r2, [r1], -r0
   12124:	strdeq	r2, [r1], -r0
   12128:	strdeq	r2, [r1], -r0
   1212c:	strdeq	r2, [r1], -r0
   12130:	strdeq	r2, [r1], -r0
   12134:	strdeq	r2, [r1], -r0
   12138:	strdeq	r2, [r1], -r0
   1213c:	strdeq	r2, [r1], -r0
   12140:	strdeq	r2, [r1], -r0
   12144:	strdeq	r2, [r1], -r0
   12148:	strdeq	r2, [r1], -r0
   1214c:	strdeq	r2, [r1], -r0
   12150:	strdeq	r2, [r1], -r0
   12154:	strdeq	r2, [r1], -r0
   12158:	strdeq	r2, [r1], -r0
   1215c:	andeq	r2, r1, r4, asr r3
   12160:	strdeq	r2, [r1], -r0
   12164:	strdeq	r2, [r1], -r0
   12168:	strdeq	r2, [r1], -r0
   1216c:	strdeq	r2, [r1], -r0
   12170:	strdeq	r2, [r1], -r0
   12174:	strdeq	r2, [r1], -r0
   12178:	andeq	r2, r1, r4, lsl #11
   1217c:	andeq	r2, r1, r4, asr #11
   12180:	andeq	r2, r1, ip, ror r7
   12184:	muleq	r1, ip, r9
   12188:	strdeq	r2, [r1], -r0
   1218c:	andeq	r2, r1, ip, lsl #21
   12190:	andeq	r2, r1, r0, ror pc
   12194:			; <UNDEFINED> instruction: 0x00012ab8
   12198:	andeq	r2, r1, r8, asr #21
   1219c:	strdeq	r2, [r1], -r0
   121a0:	strdeq	r2, [r1], -r0
   121a4:	strdeq	r2, [r1], -r0
   121a8:	andeq	r2, r1, r4, lsr #22
   121ac:	andeq	r2, r1, r0, ror #22
   121b0:	strdeq	r2, [r1], -r0
   121b4:	andeq	r2, r1, r8, asr sp
   121b8:	strdeq	r2, [r1], -r0
   121bc:	andeq	r2, r1, r0, ror #12
   121c0:	andeq	r2, r1, r8, lsr #27
   121c4:	muleq	r1, ip, r2
   121c8:	andeq	r2, r1, r0, asr pc
   121cc:	andeq	r2, r1, r0, ror pc
   121d0:	andeq	r3, r1, ip, lsr #2
   121d4:	andeq	r2, r1, r0, ror #28
   121d8:	andeq	r3, r1, ip, ror #2
   121dc:	andeq	r3, r1, r8, asr #3
   121e0:	strdeq	r2, [r1], -r0
   121e4:	strdeq	r2, [r1], -r0
   121e8:	strdeq	r2, [r1], -r0
   121ec:	strdeq	r2, [r1], -r0
   121f0:	strdeq	r2, [r1], -r0
   121f4:	strdeq	r2, [r1], -r0
   121f8:			; <UNDEFINED> instruction: 0x000124b0
   121fc:	andeq	r2, r1, r4, lsr #11
   12200:	andeq	r2, r1, r4, ror #11
   12204:			; <UNDEFINED> instruction: 0x000129b0
   12208:	andeq	r2, r1, r4, asr #19
   1220c:	strdeq	r2, [r1], -r0
   12210:	andeq	r2, r1, r0, ror pc
   12214:	andeq	r2, r1, r4, lsr #11
   12218:	strdeq	r2, [r1], -r0
   1221c:	strdeq	r2, [r1], -r8
   12220:	ldrdeq	r2, [r1], -r8
   12224:	andeq	r2, r1, r8, ror #21
   12228:	andeq	r2, r1, r4, lsr fp
   1222c:			; <UNDEFINED> instruction: 0x00012cb4
   12230:	strdeq	r2, [r1], -r0
   12234:	andeq	r2, r1, r8, ror sp
   12238:	andeq	r2, r1, r0, lsl #27
   1223c:	ldrdeq	r2, [r1], -r0
   12240:			; <UNDEFINED> instruction: 0x00012db8
   12244:	andeq	r2, r1, r0, ror lr
   12248:	andeq	r2, r1, ip, lsr #30
   1224c:	strdeq	r2, [r1], -r0
   12250:	andeq	r3, r1, ip, asr r1
   12254:	andeq	r2, r1, ip, lsl #19
   12258:	muleq	r1, ip, r1
   1225c:	andeq	r3, r1, r8, asr #5
   12260:	mov	r3, #1
   12264:	str	r3, [sp, #32]
   12268:	b	11fb8 <putchar_unlocked@plt+0xc7c>
   1226c:	ldr	r3, [sp, #52]	; 0x34
   12270:	mov	r8, #0
   12274:	mov	r4, r8
   12278:	str	r9, [sp, #28]
   1227c:	str	r3, [sp, #32]
   12280:	b	11fb8 <putchar_unlocked@plt+0xc7c>
   12284:	cmp	r3, #94	; 0x5e
   12288:	beq	12260 <putchar_unlocked@plt+0xf24>
   1228c:	cmp	r3, #95	; 0x5f
   12290:	beq	11fb4 <putchar_unlocked@plt+0xc78>
   12294:	cmp	r3, #48	; 0x30
   12298:	b	11fe0 <putchar_unlocked@plt+0xca4>
   1229c:	ldr	r9, [pc, #3104]	; 12ec4 <putchar_unlocked@plt+0x1b88>
   122a0:	mvn	r8, #0
   122a4:	mov	r2, r7
   122a8:	mov	r1, r9
   122ac:	stm	sp, {r4, r8}
   122b0:	ldr	r3, [sp, #1160]	; 0x488
   122b4:	mov	r0, #0
   122b8:	str	r3, [sp, #16]
   122bc:	ldr	r3, [sp, #1156]	; 0x484
   122c0:	str	r3, [sp, #12]
   122c4:	ldr	r3, [sp, #1152]	; 0x480
   122c8:	str	r3, [sp, #8]
   122cc:	ldr	r3, [sp, #32]
   122d0:	bl	11e94 <putchar_unlocked@plt+0xb58>
   122d4:	mvn	r3, r5
   122d8:	cmp	r4, #45	; 0x2d
   122dc:	lsr	r3, r3, #31
   122e0:	moveq	r3, #0
   122e4:	cmp	r3, #0
   122e8:	ldr	r3, [sp, #24]
   122ec:	moveq	r5, #0
   122f0:	cmp	r5, r0
   122f4:	movcs	sl, r5
   122f8:	movcc	sl, r0
   122fc:	mvn	r3, r3
   12300:	cmp	r3, sl
   12304:	bls	11f54 <putchar_unlocked@plt+0xc18>
   12308:	cmp	r6, #0
   1230c:	beq	12348 <putchar_unlocked@plt+0x100c>
   12310:	cmp	r5, r0
   12314:	bhi	1267c <putchar_unlocked@plt+0x1340>
   12318:	ldr	r3, [sp, #1160]	; 0x488
   1231c:	mov	r2, r7
   12320:	mov	r1, r9
   12324:	mov	r0, r6
   12328:	stm	sp, {r4, r8}
   1232c:	str	r3, [sp, #16]
   12330:	ldr	r3, [sp, #1156]	; 0x484
   12334:	str	r3, [sp, #12]
   12338:	ldr	r3, [sp, #1152]	; 0x480
   1233c:	str	r3, [sp, #8]
   12340:	ldr	r3, [sp, #32]
   12344:	bl	11e94 <putchar_unlocked@plt+0xb58>
   12348:	ldr	r3, [sp, #24]
   1234c:	add	r3, r3, sl
   12350:	b	12578 <putchar_unlocked@plt+0x123c>
   12354:	ldr	r3, [sp, #28]
   12358:	add	r3, r3, #1
   1235c:	ldr	r2, [sp, #28]
   12360:	mov	r0, r3
   12364:	sub	fp, r3, r2
   12368:	ldrb	r2, [r3], #1
   1236c:	cmp	r2, #58	; 0x3a
   12370:	beq	1235c <putchar_unlocked@plt+0x1020>
   12374:	cmp	r2, #122	; 0x7a
   12378:	streq	r0, [sp, #28]
   1237c:	bne	125f0 <putchar_unlocked@plt+0x12b4>
   12380:	ldr	r3, [r7, #32]
   12384:	cmp	r3, #0
   12388:	blt	1257c <putchar_unlocked@plt+0x1240>
   1238c:	ldr	r8, [r7, #36]	; 0x24
   12390:	cmp	r8, #0
   12394:	movlt	ip, #1
   12398:	blt	123b4 <putchar_unlocked@plt+0x1078>
   1239c:	ldreq	r3, [sp, #44]	; 0x2c
   123a0:	movne	ip, #0
   123a4:	ldrbeq	ip, [r3]
   123a8:	subeq	ip, ip, #45	; 0x2d
   123ac:	clzeq	ip, ip
   123b0:	lsreq	ip, ip, #5
   123b4:	mov	r0, #60	; 0x3c
   123b8:	mov	r3, #3600	; 0xe10
   123bc:	sdiv	r2, r8, r0
   123c0:	sdiv	r3, r8, r3
   123c4:	sdiv	sl, r2, r0
   123c8:	mls	sl, r0, sl, r2
   123cc:	mls	r2, r0, r2, r8
   123d0:	cmp	fp, #3
   123d4:	ldrls	pc, [pc, fp, lsl #2]
   123d8:	b	125f0 <putchar_unlocked@plt+0x12b4>
   123dc:	ldrdeq	r3, [r1], -r0
   123e0:	andeq	r3, r1, r8, ror #5
   123e4:	andeq	r3, r1, r0, lsl #6
   123e8:	andeq	r3, r1, r4, lsr #6
   123ec:	ldr	r3, [sp, #28]
   123f0:	sub	r3, r3, #1
   123f4:	cmp	r9, r3
   123f8:	bne	1333c <putchar_unlocked@plt+0x2000>
   123fc:	mvn	r3, r5
   12400:	cmp	r4, #45	; 0x2d
   12404:	lsr	r3, r3, #31
   12408:	moveq	r3, #0
   1240c:	cmp	r3, #0
   12410:	ldr	r3, [sp, #24]
   12414:	moveq	r5, #0
   12418:	cmp	r5, #1
   1241c:	movcs	r8, r5
   12420:	movcc	r8, #1
   12424:	mvn	r3, r3
   12428:	cmp	r3, r8
   1242c:	bls	11f54 <putchar_unlocked@plt+0xc18>
   12430:	cmp	r6, #0
   12434:	beq	12450 <putchar_unlocked@plt+0x1114>
   12438:	cmp	r5, #1
   1243c:	bgt	1245c <putchar_unlocked@plt+0x1120>
   12440:	ldr	r3, [sp, #28]
   12444:	mov	r1, r6
   12448:	ldrb	r0, [r3]
   1244c:	bl	112ac <fputc@plt>
   12450:	ldr	r3, [sp, #24]
   12454:	add	r3, r3, r8
   12458:	b	12578 <putchar_unlocked@plt+0x123c>
   1245c:	cmp	r4, #43	; 0x2b
   12460:	cmpne	r4, #48	; 0x30
   12464:	sub	r5, r5, #1
   12468:	moveq	r4, #1
   1246c:	movne	r4, #0
   12470:	bne	12494 <putchar_unlocked@plt+0x1158>
   12474:	mov	r4, #0
   12478:	mov	r1, r6
   1247c:	mov	r0, #48	; 0x30
   12480:	add	r4, r4, #1
   12484:	bl	112ac <fputc@plt>
   12488:	cmp	r5, r4
   1248c:	bhi	12478 <putchar_unlocked@plt+0x113c>
   12490:	b	12440 <putchar_unlocked@plt+0x1104>
   12494:	mov	r1, r6
   12498:	mov	r0, #32
   1249c:	add	r4, r4, #1
   124a0:	bl	112ac <fputc@plt>
   124a4:	cmp	r5, r4
   124a8:	bhi	12494 <putchar_unlocked@plt+0x1158>
   124ac:	b	12440 <putchar_unlocked@plt+0x1104>
   124b0:	cmp	r1, #0
   124b4:	bne	125f0 <putchar_unlocked@plt+0x12b4>
   124b8:	cmp	r8, #0
   124bc:	movne	lr, #97	; 0x61
   124c0:	strne	r8, [sp, #32]
   124c4:	bne	125bc <putchar_unlocked@plt+0x1280>
   124c8:	mov	lr, #97	; 0x61
   124cc:	movw	r3, #9504	; 0x2520
   124d0:	cmp	r1, #0
   124d4:	mov	sl, #0
   124d8:	add	r2, sp, #64	; 0x40
   124dc:	strh	r3, [sp, #64]	; 0x40
   124e0:	addne	r3, sp, #67	; 0x43
   124e4:	addeq	r3, sp, #66	; 0x42
   124e8:	strbne	r1, [sp, #66]	; 0x42
   124ec:	add	r0, sp, #80	; 0x50
   124f0:	mov	r1, #1024	; 0x400
   124f4:	strb	lr, [r3]
   124f8:	strb	sl, [r3, #1]
   124fc:	mov	r3, r7
   12500:	bl	11168 <strftime@plt>
   12504:	cmp	r0, #0
   12508:	beq	1257c <putchar_unlocked@plt+0x1240>
   1250c:	cmp	r5, sl
   12510:	sub	r9, r0, #1
   12514:	movlt	r3, #0
   12518:	movge	r3, #1
   1251c:	cmp	r4, #45	; 0x2d
   12520:	moveq	r3, #0
   12524:	cmp	r3, sl
   12528:	ldr	r3, [sp, #24]
   1252c:	moveq	r5, sl
   12530:	cmp	r5, r9
   12534:	movcs	fp, r5
   12538:	movcc	fp, r9
   1253c:	mvn	r3, r3
   12540:	cmp	r3, fp
   12544:	bls	11f54 <putchar_unlocked@plt+0xc18>
   12548:	cmp	r6, #0
   1254c:	beq	12570 <putchar_unlocked@plt+0x1234>
   12550:	cmp	r5, r9
   12554:	bhi	126f0 <putchar_unlocked@plt+0x13b4>
   12558:	cmp	r8, #0
   1255c:	beq	12740 <putchar_unlocked@plt+0x1404>
   12560:	mov	r2, r9
   12564:	add	r1, sp, #81	; 0x51
   12568:	mov	r0, r6
   1256c:	bl	11e2c <putchar_unlocked@plt+0xaf0>
   12570:	ldr	r3, [sp, #24]
   12574:	add	r3, r3, fp
   12578:	str	r3, [sp, #24]
   1257c:	ldr	r9, [sp, #28]
   12580:	b	11f84 <putchar_unlocked@plt+0xc48>
   12584:	cmp	r1, #0
   12588:	bne	125f0 <putchar_unlocked@plt+0x12b4>
   1258c:	cmp	r8, #0
   12590:	movne	lr, #65	; 0x41
   12594:	strne	r8, [sp, #32]
   12598:	bne	125bc <putchar_unlocked@plt+0x1280>
   1259c:	mov	lr, #65	; 0x41
   125a0:	b	124cc <putchar_unlocked@plt+0x1190>
   125a4:	ldr	r3, [sp, #32]
   125a8:	cmp	r8, #0
   125ac:	movne	r3, r8
   125b0:	cmp	r1, #69	; 0x45
   125b4:	str	r3, [sp, #32]
   125b8:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   125bc:	mov	r8, #0
   125c0:	b	124cc <putchar_unlocked@plt+0x1190>
   125c4:	cmp	r1, #69	; 0x45
   125c8:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   125cc:	cmp	r8, #0
   125d0:	movne	lr, #66	; 0x42
   125d4:	strne	r8, [sp, #32]
   125d8:	bne	125bc <putchar_unlocked@plt+0x1280>
   125dc:	mov	lr, #66	; 0x42
   125e0:	b	124cc <putchar_unlocked@plt+0x1190>
   125e4:	cmp	r1, #79	; 0x4f
   125e8:	movne	lr, #99	; 0x63
   125ec:	bne	125bc <putchar_unlocked@plt+0x1280>
   125f0:	ldr	r3, [sp, #28]
   125f4:	sub	r8, r3, r9
   125f8:	subs	r3, r4, #45	; 0x2d
   125fc:	movne	r3, #1
   12600:	cmp	r5, #0
   12604:	movlt	r3, #0
   12608:	add	r8, r8, #1
   1260c:	cmp	r3, #0
   12610:	ldr	r3, [sp, #24]
   12614:	moveq	r5, #0
   12618:	cmp	r5, r8
   1261c:	movcs	sl, r5
   12620:	movcc	sl, r8
   12624:	mvn	r3, r3
   12628:	cmp	r3, sl
   1262c:	bls	11f54 <putchar_unlocked@plt+0xc18>
   12630:	cmp	r6, #0
   12634:	beq	12348 <putchar_unlocked@plt+0x100c>
   12638:	cmp	r5, r8
   1263c:	bhi	1334c <putchar_unlocked@plt+0x2010>
   12640:	ldr	r3, [sp, #32]
   12644:	cmp	r3, #0
   12648:	bne	133a0 <putchar_unlocked@plt+0x2064>
   1264c:	mov	r3, r6
   12650:	mov	r2, #1
   12654:	mov	r1, r8
   12658:	mov	r0, r9
   1265c:	b	132c0 <putchar_unlocked@plt+0x1f84>
   12660:	mvn	r8, #0
   12664:	ldr	r9, [pc, #2140]	; 12ec8 <putchar_unlocked@plt+0x1b8c>
   12668:	b	122a4 <putchar_unlocked@plt+0xf68>
   1266c:	mov	r8, #4
   12670:	ldr	r9, [pc, #2132]	; 12ecc <putchar_unlocked@plt+0x1b90>
   12674:	mov	r4, #43	; 0x2b
   12678:	b	122a4 <putchar_unlocked@plt+0xf68>
   1267c:	cmp	r4, #43	; 0x2b
   12680:	cmpne	r4, #48	; 0x30
   12684:	sub	r5, r5, r0
   12688:	moveq	fp, #1
   1268c:	movne	fp, #0
   12690:	bne	126b4 <putchar_unlocked@plt+0x1378>
   12694:	mov	fp, #0
   12698:	mov	r1, r6
   1269c:	mov	r0, #48	; 0x30
   126a0:	add	fp, fp, #1
   126a4:	bl	112ac <fputc@plt>
   126a8:	cmp	r5, fp
   126ac:	bne	12698 <putchar_unlocked@plt+0x135c>
   126b0:	b	12318 <putchar_unlocked@plt+0xfdc>
   126b4:	mov	r1, r6
   126b8:	mov	r0, #32
   126bc:	add	fp, fp, #1
   126c0:	bl	112ac <fputc@plt>
   126c4:	cmp	r5, fp
   126c8:	bne	126b4 <putchar_unlocked@plt+0x1378>
   126cc:	b	12318 <putchar_unlocked@plt+0xfdc>
   126d0:	mov	lr, #114	; 0x72
   126d4:	b	125bc <putchar_unlocked@plt+0x1280>
   126d8:	mov	lr, #67	; 0x43
   126dc:	b	125bc <putchar_unlocked@plt+0x1280>
   126e0:	mov	lr, #89	; 0x59
   126e4:	b	125bc <putchar_unlocked@plt+0x1280>
   126e8:	mov	lr, #121	; 0x79
   126ec:	b	125bc <putchar_unlocked@plt+0x1280>
   126f0:	cmp	r4, #43	; 0x2b
   126f4:	cmpne	r4, #48	; 0x30
   126f8:	sub	r5, r5, r9
   126fc:	moveq	r4, #1
   12700:	movne	r4, #0
   12704:	beq	12734 <putchar_unlocked@plt+0x13f8>
   12708:	cmp	r4, r5
   1270c:	beq	12558 <putchar_unlocked@plt+0x121c>
   12710:	mov	r1, r6
   12714:	mov	r0, #32
   12718:	bl	112ac <fputc@plt>
   1271c:	add	r4, r4, #1
   12720:	b	12708 <putchar_unlocked@plt+0x13cc>
   12724:	mov	r1, r6
   12728:	mov	r0, #48	; 0x30
   1272c:	add	sl, sl, #1
   12730:	bl	112ac <fputc@plt>
   12734:	cmp	sl, r5
   12738:	bne	12724 <putchar_unlocked@plt+0x13e8>
   1273c:	b	12558 <putchar_unlocked@plt+0x121c>
   12740:	ldr	r3, [sp, #32]
   12744:	cmp	r3, #0
   12748:	beq	12760 <putchar_unlocked@plt+0x1424>
   1274c:	mov	r2, r9
   12750:	add	r1, sp, #81	; 0x51
   12754:	mov	r0, r6
   12758:	bl	11e60 <putchar_unlocked@plt+0xb24>
   1275c:	b	12570 <putchar_unlocked@plt+0x1234>
   12760:	mov	r2, #1
   12764:	add	r0, sp, #80	; 0x50
   12768:	mov	r3, r6
   1276c:	mov	r1, r9
   12770:	add	r0, r0, r2
   12774:	bl	110f0 <fwrite@plt>
   12778:	b	12570 <putchar_unlocked@plt+0x1234>
   1277c:	cmp	r1, #69	; 0x45
   12780:	beq	126d8 <putchar_unlocked@plt+0x139c>
   12784:	ldr	r3, [pc, #1864]	; 12ed4 <putchar_unlocked@plt+0x1b98>
   12788:	movw	r0, #1899	; 0x76b
   1278c:	ldr	r2, [r7, #20]
   12790:	cmp	r2, r3
   12794:	add	r3, r2, #1888	; 0x760
   12798:	add	r3, r3, #12
   1279c:	movge	ip, #0
   127a0:	movlt	ip, #1
   127a4:	cmp	r3, r0
   127a8:	mvnls	r3, #98	; 0x62
   127ac:	movhi	r3, #0
   127b0:	add	r3, r3, r2
   127b4:	mov	r2, #100	; 0x64
   127b8:	sdiv	r3, r3, r2
   127bc:	add	r3, r3, #19
   127c0:	mov	r0, #2
   127c4:	ldr	r2, [sp, #1144]	; 0x478
   127c8:	cmp	r4, #0
   127cc:	moveq	r4, r2
   127d0:	cmp	r4, #43	; 0x2b
   127d4:	movne	r2, #0
   127d8:	bne	127fc <putchar_unlocked@plt+0x14c0>
   127dc:	cmp	r0, #2
   127e0:	movw	r2, #9999	; 0x270f
   127e4:	moveq	r2, #99	; 0x63
   127e8:	cmp	r3, r2
   127ec:	movls	r2, #0
   127f0:	movhi	r2, #1
   127f4:	cmp	r0, r5
   127f8:	orrlt	r2, r2, #1
   127fc:	mov	sl, #0
   12800:	eor	r8, ip, #1
   12804:	cmp	r1, #79	; 0x4f
   12808:	movne	r8, #0
   1280c:	andeq	r8, r8, #1
   12810:	cmp	r8, #0
   12814:	bne	125bc <putchar_unlocked@plt+0x1280>
   12818:	cmp	ip, #0
   1281c:	add	r8, sp, #78	; 0x4e
   12820:	rsbne	r3, r3, #0
   12824:	mov	fp, #58	; 0x3a
   12828:	mov	lr, #10
   1282c:	tst	sl, #1
   12830:	subne	r1, r8, #1
   12834:	moveq	r1, r8
   12838:	udiv	r9, r3, lr
   1283c:	strbne	fp, [r8, #-1]
   12840:	sub	r8, r1, #1
   12844:	asrs	sl, sl, #1
   12848:	mls	lr, lr, r9, r3
   1284c:	add	lr, lr, #48	; 0x30
   12850:	strb	lr, [r1, #-1]
   12854:	movne	r1, #1
   12858:	moveq	r1, #0
   1285c:	cmp	r3, #9
   12860:	movls	r3, r1
   12864:	orrhi	r3, r1, #1
   12868:	cmp	r3, #0
   1286c:	bne	129ec <putchar_unlocked@plt+0x16b0>
   12870:	cmp	r4, #0
   12874:	moveq	r4, #48	; 0x30
   12878:	cmp	r5, #0
   1287c:	movlt	r5, r0
   12880:	cmp	ip, #0
   12884:	movne	r3, #45	; 0x2d
   12888:	bne	12898 <putchar_unlocked@plt+0x155c>
   1288c:	cmp	r2, #0
   12890:	movne	r3, #43	; 0x2b
   12894:	moveq	r3, #0
   12898:	add	sl, sp, #78	; 0x4e
   1289c:	cmp	r3, #0
   128a0:	moveq	r9, r5
   128a4:	subne	r9, r5, #1
   128a8:	sub	sl, sl, r8
   128ac:	subs	fp, r4, #45	; 0x2d
   128b0:	sub	r9, r9, sl
   128b4:	movne	fp, #1
   128b8:	cmp	r9, #0
   128bc:	movle	r2, #0
   128c0:	andgt	r2, fp, #1
   128c4:	cmp	r2, #0
   128c8:	moveq	r9, #0
   128cc:	cmp	r3, #0
   128d0:	beq	12928 <putchar_unlocked@plt+0x15ec>
   128d4:	cmp	r4, #95	; 0x5f
   128d8:	bne	128f8 <putchar_unlocked@plt+0x15bc>
   128dc:	cmp	r6, #0
   128e0:	movne	r2, #0
   128e4:	bne	12a0c <putchar_unlocked@plt+0x16d0>
   128e8:	ldr	r2, [sp, #24]
   128ec:	sub	r5, r5, r9
   128f0:	add	r2, r2, r9
   128f4:	str	r2, [sp, #24]
   128f8:	ldr	r2, [sp, #24]
   128fc:	cmn	r2, #3
   12900:	bhi	11f54 <putchar_unlocked@plt+0xc18>
   12904:	cmp	r6, #0
   12908:	beq	12918 <putchar_unlocked@plt+0x15dc>
   1290c:	mov	r1, r6
   12910:	mov	r0, r3
   12914:	bl	112ac <fputc@plt>
   12918:	ldr	r3, [sp, #24]
   1291c:	sub	r5, r5, #1
   12920:	add	r3, r3, #1
   12924:	str	r3, [sp, #24]
   12928:	ldr	r3, [sp, #24]
   1292c:	cmp	r5, #0
   12930:	movlt	fp, #0
   12934:	andge	fp, fp, #1
   12938:	cmp	fp, #0
   1293c:	moveq	r5, #0
   12940:	cmp	r5, sl
   12944:	movcs	r9, r5
   12948:	movcc	r9, sl
   1294c:	mvn	r3, r3
   12950:	cmp	r3, r9
   12954:	bls	11f54 <putchar_unlocked@plt+0xc18>
   12958:	cmp	r6, #0
   1295c:	beq	12a80 <putchar_unlocked@plt+0x1744>
   12960:	cmp	r5, sl
   12964:	bhi	12a18 <putchar_unlocked@plt+0x16dc>
   12968:	ldr	r3, [sp, #32]
   1296c:	cmp	r3, #0
   12970:	bne	12a70 <putchar_unlocked@plt+0x1734>
   12974:	mov	r3, r6
   12978:	mov	r2, #1
   1297c:	mov	r1, sl
   12980:	mov	r0, r8
   12984:	bl	110f0 <fwrite@plt>
   12988:	b	12a80 <putchar_unlocked@plt+0x1744>
   1298c:	cmp	r1, #79	; 0x4f
   12990:	movne	lr, #120	; 0x78
   12994:	bne	125bc <putchar_unlocked@plt+0x1280>
   12998:	b	125f0 <putchar_unlocked@plt+0x12b4>
   1299c:	cmp	r1, #0
   129a0:	mvneq	r8, #0
   129a4:	ldreq	r9, [pc, #1316]	; 12ed0 <putchar_unlocked@plt+0x1b94>
   129a8:	beq	122a4 <putchar_unlocked@plt+0xf68>
   129ac:	b	125f0 <putchar_unlocked@plt+0x12b4>
   129b0:	cmp	r1, #69	; 0x45
   129b4:	ldrne	r3, [r7, #12]
   129b8:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   129bc:	mov	r0, #2
   129c0:	b	129dc <putchar_unlocked@plt+0x16a0>
   129c4:	cmp	r1, #69	; 0x45
   129c8:	ldrne	r3, [r7, #12]
   129cc:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   129d0:	cmp	r4, #0
   129d4:	mov	r0, #2
   129d8:	moveq	r4, #95	; 0x5f
   129dc:	mov	sl, #0
   129e0:	lsr	ip, r3, #31
   129e4:	mov	r2, sl
   129e8:	b	12800 <putchar_unlocked@plt+0x14c4>
   129ec:	mov	r3, r9
   129f0:	b	12828 <putchar_unlocked@plt+0x14ec>
   129f4:	mov	r1, r6
   129f8:	mov	r0, #32
   129fc:	strd	r2, [sp, #56]	; 0x38
   12a00:	bl	112ac <fputc@plt>
   12a04:	ldrd	r2, [sp, #56]	; 0x38
   12a08:	add	r2, r2, #1
   12a0c:	cmp	r2, r9
   12a10:	bne	129f4 <putchar_unlocked@plt+0x16b8>
   12a14:	b	128e8 <putchar_unlocked@plt+0x15ac>
   12a18:	cmp	r4, #43	; 0x2b
   12a1c:	cmpne	r4, #48	; 0x30
   12a20:	sub	r5, r5, sl
   12a24:	moveq	r4, #1
   12a28:	movne	r4, #0
   12a2c:	beq	12a68 <putchar_unlocked@plt+0x172c>
   12a30:	cmp	r4, r5
   12a34:	beq	12968 <putchar_unlocked@plt+0x162c>
   12a38:	mov	r1, r6
   12a3c:	mov	r0, #32
   12a40:	bl	112ac <fputc@plt>
   12a44:	add	r4, r4, #1
   12a48:	b	12a30 <putchar_unlocked@plt+0x16f4>
   12a4c:	mov	r1, r6
   12a50:	mov	r0, #48	; 0x30
   12a54:	add	r4, r4, #1
   12a58:	bl	112ac <fputc@plt>
   12a5c:	cmp	r4, r5
   12a60:	bne	12a4c <putchar_unlocked@plt+0x1710>
   12a64:	b	12968 <putchar_unlocked@plt+0x162c>
   12a68:	mov	r4, #0
   12a6c:	b	12a5c <putchar_unlocked@plt+0x1720>
   12a70:	mov	r2, sl
   12a74:	mov	r1, r8
   12a78:	mov	r0, r6
   12a7c:	bl	11e60 <putchar_unlocked@plt+0xb24>
   12a80:	ldr	r3, [sp, #24]
   12a84:	add	r3, r3, r9
   12a88:	b	12578 <putchar_unlocked@plt+0x123c>
   12a8c:	cmp	r1, #0
   12a90:	bne	125f0 <putchar_unlocked@plt+0x12b4>
   12a94:	cmp	r4, #0
   12a98:	lsreq	r3, r5, #31
   12a9c:	movne	r3, #0
   12aa0:	cmp	r3, #0
   12aa4:	bne	1266c <putchar_unlocked@plt+0x1330>
   12aa8:	sub	r8, r5, #6
   12aac:	ldr	r9, [pc, #1048]	; 12ecc <putchar_unlocked@plt+0x1b90>
   12ab0:	bic	r8, r8, r8, asr #31
   12ab4:	b	122a4 <putchar_unlocked@plt+0xf68>
   12ab8:	cmp	r1, #69	; 0x45
   12abc:	ldrne	r3, [r7, #8]
   12ac0:	bne	129bc <putchar_unlocked@plt+0x1680>
   12ac4:	b	125f0 <putchar_unlocked@plt+0x12b4>
   12ac8:	cmp	r1, #69	; 0x45
   12acc:	ldrne	r3, [sp, #40]	; 0x28
   12ad0:	bne	129bc <putchar_unlocked@plt+0x1680>
   12ad4:	b	125f0 <putchar_unlocked@plt+0x12b4>
   12ad8:	cmp	r1, #69	; 0x45
   12adc:	ldrne	r3, [r7, #8]
   12ae0:	bne	129d0 <putchar_unlocked@plt+0x1694>
   12ae4:	b	125f0 <putchar_unlocked@plt+0x12b4>
   12ae8:	cmp	r1, #69	; 0x45
   12aec:	ldrne	r3, [sp, #40]	; 0x28
   12af0:	bne	129d0 <putchar_unlocked@plt+0x1694>
   12af4:	b	125f0 <putchar_unlocked@plt+0x12b4>
   12af8:	cmp	r1, #69	; 0x45
   12afc:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   12b00:	ldr	r3, [r7, #28]
   12b04:	mov	sl, #0
   12b08:	mov	r2, sl
   12b0c:	cmn	r3, #1
   12b10:	add	r3, r3, #1
   12b14:	movge	ip, #0
   12b18:	movlt	ip, #1
   12b1c:	mov	r0, #3
   12b20:	b	12800 <putchar_unlocked@plt+0x14c4>
   12b24:	cmp	r1, #69	; 0x45
   12b28:	ldrne	r3, [r7, #4]
   12b2c:	bne	129bc <putchar_unlocked@plt+0x1680>
   12b30:	b	125f0 <putchar_unlocked@plt+0x12b4>
   12b34:	cmp	r1, #69	; 0x45
   12b38:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   12b3c:	ldr	r3, [r7, #16]
   12b40:	mov	sl, #0
   12b44:	mov	r0, #2
   12b48:	mov	r2, sl
   12b4c:	cmn	r3, #1
   12b50:	add	r3, r3, #1
   12b54:	movge	ip, #0
   12b58:	movlt	ip, #1
   12b5c:	b	12800 <putchar_unlocked@plt+0x14c4>
   12b60:	cmp	r1, #69	; 0x45
   12b64:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   12b68:	ldr	r3, [sp, #1160]	; 0x488
   12b6c:	cmp	r5, #0
   12b70:	mov	r8, #9
   12b74:	movle	r5, #9
   12b78:	cmp	r8, r5
   12b7c:	bgt	12ba8 <putchar_unlocked@plt+0x186c>
   12b80:	cmp	r8, #1
   12b84:	ble	12b9c <putchar_unlocked@plt+0x1860>
   12b88:	mov	r1, #10
   12b8c:	sdiv	r2, r3, r1
   12b90:	mls	r2, r1, r2, r3
   12b94:	cmp	r2, #0
   12b98:	beq	12ba8 <putchar_unlocked@plt+0x186c>
   12b9c:	mov	r2, r8
   12ba0:	add	r0, sp, #64	; 0x40
   12ba4:	b	12bd4 <putchar_unlocked@plt+0x1898>
   12ba8:	mov	r2, #10
   12bac:	sub	r8, r8, #1
   12bb0:	sdiv	r3, r3, r2
   12bb4:	b	12b78 <putchar_unlocked@plt+0x183c>
   12bb8:	mov	ip, #10
   12bbc:	sub	r2, r2, #1
   12bc0:	sdiv	r1, r3, ip
   12bc4:	mls	r3, ip, r1, r3
   12bc8:	add	r3, r3, #48	; 0x30
   12bcc:	strb	r3, [r2, r0]
   12bd0:	mov	r3, r1
   12bd4:	cmp	r2, #0
   12bd8:	bgt	12bb8 <putchar_unlocked@plt+0x187c>
   12bdc:	ldr	r3, [sp, #24]
   12be0:	cmp	r4, #0
   12be4:	moveq	r4, #48	; 0x30
   12be8:	mvn	r3, r3
   12bec:	cmp	r3, r8
   12bf0:	bls	11f54 <putchar_unlocked@plt+0xc18>
   12bf4:	cmp	r6, #0
   12bf8:	beq	12c18 <putchar_unlocked@plt+0x18dc>
   12bfc:	ldr	r3, [sp, #32]
   12c00:	cmp	r3, #0
   12c04:	beq	12c4c <putchar_unlocked@plt+0x1910>
   12c08:	mov	r2, r8
   12c0c:	add	r1, sp, #64	; 0x40
   12c10:	mov	r0, r6
   12c14:	bl	11e60 <putchar_unlocked@plt+0xb24>
   12c18:	ldr	r3, [sp, #24]
   12c1c:	cmp	r4, #45	; 0x2d
   12c20:	subne	r5, r5, r8
   12c24:	moveq	r5, #0
   12c28:	add	r9, r3, r8
   12c2c:	mvn	r3, r9
   12c30:	cmp	r3, r5
   12c34:	bls	11f54 <putchar_unlocked@plt+0xc18>
   12c38:	cmp	r5, #0
   12c3c:	cmpne	r6, #0
   12c40:	bne	12c64 <putchar_unlocked@plt+0x1928>
   12c44:	add	r3, r5, r9
   12c48:	b	12578 <putchar_unlocked@plt+0x123c>
   12c4c:	mov	r3, r6
   12c50:	mov	r2, #1
   12c54:	mov	r1, r8
   12c58:	add	r0, sp, #64	; 0x40
   12c5c:	bl	110f0 <fwrite@plt>
   12c60:	b	12c18 <putchar_unlocked@plt+0x18dc>
   12c64:	cmp	r4, #43	; 0x2b
   12c68:	cmpne	r4, #48	; 0x30
   12c6c:	moveq	r4, #1
   12c70:	movne	r4, #0
   12c74:	bne	12c98 <putchar_unlocked@plt+0x195c>
   12c78:	mov	r4, #0
   12c7c:	mov	r1, r6
   12c80:	mov	r0, #48	; 0x30
   12c84:	add	r4, r4, #1
   12c88:	bl	112ac <fputc@plt>
   12c8c:	cmp	r5, r4
   12c90:	bhi	12c7c <putchar_unlocked@plt+0x1940>
   12c94:	b	12c44 <putchar_unlocked@plt+0x1908>
   12c98:	mov	r1, r6
   12c9c:	mov	r0, #32
   12ca0:	add	r4, r4, #1
   12ca4:	bl	112ac <fputc@plt>
   12ca8:	cmp	r5, r4
   12cac:	bhi	12c98 <putchar_unlocked@plt+0x195c>
   12cb0:	b	12c44 <putchar_unlocked@plt+0x1908>
   12cb4:	subs	r3, r4, #45	; 0x2d
   12cb8:	movne	r3, #1
   12cbc:	cmp	r5, #0
   12cc0:	movlt	r3, #0
   12cc4:	cmp	r3, #0
   12cc8:	ldr	r3, [sp, #24]
   12ccc:	moveq	r5, #0
   12cd0:	cmp	r5, #1
   12cd4:	movcs	r8, r5
   12cd8:	movcc	r8, #1
   12cdc:	mvn	r3, r3
   12ce0:	cmp	r3, r8
   12ce4:	bls	11f54 <putchar_unlocked@plt+0xc18>
   12ce8:	cmp	r6, #0
   12cec:	beq	12450 <putchar_unlocked@plt+0x1114>
   12cf0:	cmp	r5, #1
   12cf4:	bgt	12d04 <putchar_unlocked@plt+0x19c8>
   12cf8:	mov	r1, r6
   12cfc:	mov	r0, #10
   12d00:	b	1244c <putchar_unlocked@plt+0x1110>
   12d04:	cmp	r4, #43	; 0x2b
   12d08:	cmpne	r4, #48	; 0x30
   12d0c:	sub	r5, r5, #1
   12d10:	moveq	r4, #1
   12d14:	movne	r4, #0
   12d18:	bne	12d3c <putchar_unlocked@plt+0x1a00>
   12d1c:	mov	r4, #0
   12d20:	mov	r1, r6
   12d24:	mov	r0, #48	; 0x30
   12d28:	add	r4, r4, #1
   12d2c:	bl	112ac <fputc@plt>
   12d30:	cmp	r5, r4
   12d34:	bhi	12d20 <putchar_unlocked@plt+0x19e4>
   12d38:	b	12cf8 <putchar_unlocked@plt+0x19bc>
   12d3c:	mov	r1, r6
   12d40:	mov	r0, #32
   12d44:	add	r4, r4, #1
   12d48:	bl	112ac <fputc@plt>
   12d4c:	cmp	r5, r4
   12d50:	bhi	12d3c <putchar_unlocked@plt+0x1a00>
   12d54:	b	12cf8 <putchar_unlocked@plt+0x19bc>
   12d58:	mov	r3, #1
   12d5c:	cmp	r8, #0
   12d60:	movne	r3, #0
   12d64:	movne	lr, #112	; 0x70
   12d68:	strne	r3, [sp, #32]
   12d6c:	moveq	r8, r3
   12d70:	moveq	lr, #112	; 0x70
   12d74:	b	124cc <putchar_unlocked@plt+0x1190>
   12d78:	mov	r3, #0
   12d7c:	b	12d5c <putchar_unlocked@plt+0x1a20>
   12d80:	ldr	r2, [r7, #16]
   12d84:	mov	r3, #11
   12d88:	mov	sl, #0
   12d8c:	mov	ip, sl
   12d90:	mov	r0, #1
   12d94:	mul	r3, r3, r2
   12d98:	mov	r2, sl
   12d9c:	asr	r3, r3, #5
   12da0:	add	r3, r3, #1
   12da4:	b	12800 <putchar_unlocked@plt+0x14c4>
   12da8:	cmp	r1, #69	; 0x45
   12dac:	ldrne	r3, [r7]
   12db0:	bne	129bc <putchar_unlocked@plt+0x1680>
   12db4:	b	125f0 <putchar_unlocked@plt+0x12b4>
   12db8:	mov	lr, r7
   12dbc:	add	ip, sp, #80	; 0x50
   12dc0:	ldm	lr!, {r0, r1, r2, r3}
   12dc4:	stmia	ip!, {r0, r1, r2, r3}
   12dc8:	ldm	lr!, {r0, r1, r2, r3}
   12dcc:	stmia	ip!, {r0, r1, r2, r3}
   12dd0:	mvn	r3, #0
   12dd4:	ldm	lr, {r0, r1, r2}
   12dd8:	str	r3, [sp, #108]	; 0x6c
   12ddc:	stm	ip, {r0, r1, r2}
   12de0:	add	r1, sp, #80	; 0x50
   12de4:	ldr	r0, [sp, #1156]	; 0x484
   12de8:	bl	150ac <putchar_unlocked@plt+0x3d70>
   12dec:	ldr	r3, [sp, #108]	; 0x6c
   12df0:	cmp	r3, #0
   12df4:	bge	12e1c <putchar_unlocked@plt+0x1ae0>
   12df8:	mov	r3, #75	; 0x4b
   12dfc:	ldr	r2, [sp, #36]	; 0x24
   12e00:	str	r3, [r2]
   12e04:	mov	r3, #0
   12e08:	str	r3, [sp, #24]
   12e0c:	ldr	r0, [sp, #24]
   12e10:	add	sp, sp, #1104	; 0x450
   12e14:	add	sp, sp, #4
   12e18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e1c:	lsr	ip, r0, #31
   12e20:	mov	r1, r0
   12e24:	add	r8, sp, #78	; 0x4e
   12e28:	mov	r3, #10
   12e2c:	cmp	r0, #0
   12e30:	sdiv	r2, r1, r3
   12e34:	mls	r3, r3, r2, r1
   12e38:	mov	r1, r2
   12e3c:	uxtb	r3, r3
   12e40:	rsblt	r3, r3, #48	; 0x30
   12e44:	addge	r3, r3, #48	; 0x30
   12e48:	uxtb	r3, r3
   12e4c:	cmp	r2, #0
   12e50:	strb	r3, [r8, #-1]!
   12e54:	bne	12e28 <putchar_unlocked@plt+0x1aec>
   12e58:	mov	r0, #1
   12e5c:	b	12870 <putchar_unlocked@plt+0x1534>
   12e60:	cmp	r1, #79	; 0x4f
   12e64:	movne	lr, #88	; 0x58
   12e68:	bne	125bc <putchar_unlocked@plt+0x1280>
   12e6c:	b	125f0 <putchar_unlocked@plt+0x12b4>
   12e70:	mvn	r3, r5
   12e74:	cmp	r4, #45	; 0x2d
   12e78:	lsr	r3, r3, #31
   12e7c:	moveq	r3, #0
   12e80:	cmp	r3, #0
   12e84:	ldr	r3, [sp, #24]
   12e88:	moveq	r5, #0
   12e8c:	cmp	r5, #1
   12e90:	movcs	r8, r5
   12e94:	movcc	r8, #1
   12e98:	mvn	r3, r3
   12e9c:	cmp	r3, r8
   12ea0:	bls	11f54 <putchar_unlocked@plt+0xc18>
   12ea4:	cmp	r6, #0
   12ea8:	beq	12450 <putchar_unlocked@plt+0x1114>
   12eac:	cmp	r5, #1
   12eb0:	bgt	12ed8 <putchar_unlocked@plt+0x1b9c>
   12eb4:	mov	r1, r6
   12eb8:	mov	r0, #9
   12ebc:	b	1244c <putchar_unlocked@plt+0x1110>
   12ec0:	andeq	r6, r1, r0, ror #2
   12ec4:			; <UNDEFINED> instruction: 0x000163b1
   12ec8:			; <UNDEFINED> instruction: 0x000163ba
   12ecc:	muleq	r1, pc, r3	; <UNPREDICTABLE>
   12ed0:	andeq	r6, r1, r8, lsr #7
   12ed4:			; <UNDEFINED> instruction: 0xfffff894
   12ed8:	cmp	r4, #43	; 0x2b
   12edc:	cmpne	r4, #48	; 0x30
   12ee0:	sub	r5, r5, #1
   12ee4:	moveq	r4, #1
   12ee8:	movne	r4, #0
   12eec:	bne	12f10 <putchar_unlocked@plt+0x1bd4>
   12ef0:	mov	r4, #0
   12ef4:	mov	r1, r6
   12ef8:	mov	r0, #48	; 0x30
   12efc:	add	r4, r4, #1
   12f00:	bl	112ac <fputc@plt>
   12f04:	cmp	r5, r4
   12f08:	bhi	12ef4 <putchar_unlocked@plt+0x1bb8>
   12f0c:	b	12eb4 <putchar_unlocked@plt+0x1b78>
   12f10:	mov	r1, r6
   12f14:	mov	r0, #32
   12f18:	add	r4, r4, #1
   12f1c:	bl	112ac <fputc@plt>
   12f20:	cmp	r5, r4
   12f24:	bhi	12f10 <putchar_unlocked@plt+0x1bd4>
   12f28:	b	12eb4 <putchar_unlocked@plt+0x1b78>
   12f2c:	ldr	r3, [r7, #24]
   12f30:	mov	r2, #7
   12f34:	add	r3, r3, #6
   12f38:	sdiv	r2, r3, r2
   12f3c:	rsb	r2, r2, r2, lsl #3
   12f40:	sub	r3, r3, r2
   12f44:	add	r3, r3, #1
   12f48:	mov	r0, #1
   12f4c:	b	129dc <putchar_unlocked@plt+0x16a0>
   12f50:	cmp	r1, #69	; 0x45
   12f54:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   12f58:	ldrd	r2, [r7, #24]
   12f5c:	sub	r3, r3, r2
   12f60:	mov	r2, #7
   12f64:	add	r3, r3, #7
   12f68:	sdiv	r3, r3, r2
   12f6c:	b	129bc <putchar_unlocked@plt+0x1680>
   12f70:	cmp	r1, #69	; 0x45
   12f74:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   12f78:	mov	r3, #7
   12f7c:	ldr	r9, [r7, #20]
   12f80:	ldr	ip, [r7, #24]
   12f84:	ldr	fp, [r7, #28]
   12f88:	cmp	r9, #0
   12f8c:	movlt	r8, #300	; 0x12c
   12f90:	mvnge	r8, #99	; 0x63
   12f94:	add	r8, r9, r8
   12f98:	sub	r2, fp, ip
   12f9c:	add	r2, r2, #380	; 0x17c
   12fa0:	add	r2, r2, #2
   12fa4:	sdiv	r3, r2, r3
   12fa8:	rsb	r3, r3, r3, lsl #3
   12fac:	sub	r2, r2, r3
   12fb0:	sub	r2, fp, r2
   12fb4:	adds	r2, r2, #3
   12fb8:	bpl	1307c <putchar_unlocked@plt+0x1d40>
   12fbc:	sub	r8, r8, #1
   12fc0:	tst	r8, #3
   12fc4:	movne	r8, #0
   12fc8:	bne	12ff4 <putchar_unlocked@plt+0x1cb8>
   12fcc:	mov	r2, #100	; 0x64
   12fd0:	sdiv	r3, r8, r2
   12fd4:	mls	r3, r2, r3, r8
   12fd8:	cmp	r3, #0
   12fdc:	moveq	r0, #400	; 0x190
   12fe0:	movne	r8, #1
   12fe4:	sdiveq	r3, r8, r0
   12fe8:	mlseq	r8, r0, r3, r8
   12fec:	clzeq	r8, r8
   12ff0:	lsreq	r8, r8, #5
   12ff4:	add	r8, r8, #364	; 0x16c
   12ff8:	mov	r2, #7
   12ffc:	add	r8, r8, #1
   13000:	mvn	r0, #0
   13004:	add	r8, r8, fp
   13008:	sub	ip, r8, ip
   1300c:	add	ip, ip, #380	; 0x17c
   13010:	add	ip, ip, #2
   13014:	sdiv	r2, ip, r2
   13018:	rsb	r2, r2, r2, lsl #3
   1301c:	sub	r2, ip, r2
   13020:	sub	r2, r8, r2
   13024:	add	r2, r2, #3
   13028:	cmp	sl, #71	; 0x47
   1302c:	beq	130f4 <putchar_unlocked@plt+0x1db8>
   13030:	cmp	sl, #103	; 0x67
   13034:	bne	1311c <putchar_unlocked@plt+0x1de0>
   13038:	mov	ip, #100	; 0x64
   1303c:	sdiv	r2, r9, ip
   13040:	mls	r2, ip, r2, r9
   13044:	add	r2, r2, r0
   13048:	sdiv	r3, r2, ip
   1304c:	mls	r3, ip, r3, r2
   13050:	cmp	r3, #0
   13054:	bge	13074 <putchar_unlocked@plt+0x1d38>
   13058:	rsb	r0, r0, #-16777216	; 0xff000000
   1305c:	add	r0, r0, #16711680	; 0xff0000
   13060:	add	r0, r0, #63488	; 0xf800
   13064:	add	r0, r0, #148	; 0x94
   13068:	cmp	r9, r0
   1306c:	rsblt	r3, r3, #0
   13070:	addge	r3, r3, #100	; 0x64
   13074:	mov	ip, #0
   13078:	b	127c0 <putchar_unlocked@plt+0x1484>
   1307c:	tst	r8, #3
   13080:	movne	r0, #0
   13084:	bne	130b0 <putchar_unlocked@plt+0x1d74>
   13088:	mov	r0, #100	; 0x64
   1308c:	sdiv	r3, r8, r0
   13090:	mls	r3, r0, r3, r8
   13094:	cmp	r3, #0
   13098:	moveq	r3, #400	; 0x190
   1309c:	movne	r0, #1
   130a0:	sdiveq	r0, r8, r3
   130a4:	mlseq	r0, r3, r0, r8
   130a8:	clzeq	r0, r0
   130ac:	lsreq	r0, r0, #5
   130b0:	add	r0, r0, #364	; 0x16c
   130b4:	add	r0, r0, #1
   130b8:	sub	r0, fp, r0
   130bc:	mov	fp, #7
   130c0:	sub	ip, r0, ip
   130c4:	add	ip, ip, #380	; 0x17c
   130c8:	add	ip, ip, #2
   130cc:	sdiv	fp, ip, fp
   130d0:	rsb	fp, fp, fp, lsl #3
   130d4:	sub	fp, ip, fp
   130d8:	sub	fp, r0, fp
   130dc:	add	fp, fp, #3
   130e0:	cmp	fp, #0
   130e4:	movge	r2, fp
   130e8:	movge	r0, #1
   130ec:	movlt	r0, #0
   130f0:	b	13028 <putchar_unlocked@plt+0x1cec>
   130f4:	ldr	ip, [pc, #-552]	; 12ed4 <putchar_unlocked@plt+0x1b98>
   130f8:	add	r3, r9, #1888	; 0x760
   130fc:	add	r3, r3, #12
   13100:	add	r3, r3, r0
   13104:	sub	ip, ip, r0
   13108:	cmp	r9, ip
   1310c:	movge	ip, #0
   13110:	movlt	ip, #1
   13114:	mov	r0, #4
   13118:	b	127c4 <putchar_unlocked@plt+0x1488>
   1311c:	mov	r3, #7
   13120:	sdiv	r3, r2, r3
   13124:	add	r3, r3, #1
   13128:	b	129bc <putchar_unlocked@plt+0x1680>
   1312c:	cmp	r1, #69	; 0x45
   13130:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   13134:	ldr	r3, [r7, #24]
   13138:	mov	r2, #7
   1313c:	add	r3, r3, #6
   13140:	sdiv	r0, r3, r2
   13144:	rsb	r0, r0, r0, lsl #3
   13148:	sub	r0, r3, r0
   1314c:	ldr	r3, [r7, #28]
   13150:	sub	r3, r3, r0
   13154:	add	r3, r3, r2
   13158:	b	12f68 <putchar_unlocked@plt+0x1c2c>
   1315c:	cmp	r1, #69	; 0x45
   13160:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   13164:	ldr	r3, [r7, #24]
   13168:	b	12f48 <putchar_unlocked@plt+0x1c0c>
   1316c:	cmp	r1, #69	; 0x45
   13170:	beq	126e0 <putchar_unlocked@plt+0x13a4>
   13174:	cmp	r1, #79	; 0x4f
   13178:	beq	125f0 <putchar_unlocked@plt+0x12b4>
   1317c:	ldr	r2, [pc, #-688]	; 12ed4 <putchar_unlocked@plt+0x1b98>
   13180:	ldr	r3, [r7, #20]
   13184:	cmp	r3, r2
   13188:	add	r3, r3, #1888	; 0x760
   1318c:	movge	ip, #0
   13190:	movlt	ip, #1
   13194:	add	r3, r3, #12
   13198:	b	13114 <putchar_unlocked@plt+0x1dd8>
   1319c:	cmp	r1, #69	; 0x45
   131a0:	beq	126e8 <putchar_unlocked@plt+0x13ac>
   131a4:	ldr	r2, [r7, #20]
   131a8:	mov	r0, #100	; 0x64
   131ac:	sdiv	r3, r2, r0
   131b0:	mls	r3, r0, r3, r2
   131b4:	cmp	r3, #0
   131b8:	bge	13074 <putchar_unlocked@plt+0x1d38>
   131bc:	sub	r0, r0, #2000	; 0x7d0
   131c0:	cmp	r2, r0
   131c4:	b	1306c <putchar_unlocked@plt+0x1d30>
   131c8:	ldr	r3, [sp, #32]
   131cc:	cmp	r8, #0
   131d0:	movne	r3, #0
   131d4:	ldr	r0, [sp, #44]	; 0x2c
   131d8:	str	r3, [sp, #32]
   131dc:	bl	111e0 <strlen@plt>
   131e0:	subs	r3, r4, #45	; 0x2d
   131e4:	mov	r9, r0
   131e8:	movne	r3, #1
   131ec:	cmp	r5, #0
   131f0:	movlt	r3, #0
   131f4:	cmp	r3, #0
   131f8:	ldr	r3, [sp, #24]
   131fc:	moveq	r5, #0
   13200:	cmp	r5, r0
   13204:	movcs	sl, r5
   13208:	movcc	sl, r0
   1320c:	mvn	r3, r3
   13210:	cmp	r3, sl
   13214:	bls	11f54 <putchar_unlocked@plt+0xc18>
   13218:	cmp	r6, #0
   1321c:	beq	12348 <putchar_unlocked@plt+0x100c>
   13220:	cmp	r5, r0
   13224:	bhi	13244 <putchar_unlocked@plt+0x1f08>
   13228:	cmp	r8, #0
   1322c:	beq	1329c <putchar_unlocked@plt+0x1f60>
   13230:	mov	r2, r9
   13234:	mov	r0, r6
   13238:	ldr	r1, [sp, #44]	; 0x2c
   1323c:	bl	11e2c <putchar_unlocked@plt+0xaf0>
   13240:	b	12348 <putchar_unlocked@plt+0x100c>
   13244:	cmp	r4, #43	; 0x2b
   13248:	cmpne	r4, #48	; 0x30
   1324c:	sub	r5, r5, r0
   13250:	moveq	r4, #1
   13254:	movne	r4, #0
   13258:	beq	13294 <putchar_unlocked@plt+0x1f58>
   1325c:	cmp	r4, r5
   13260:	beq	13228 <putchar_unlocked@plt+0x1eec>
   13264:	mov	r1, r6
   13268:	mov	r0, #32
   1326c:	bl	112ac <fputc@plt>
   13270:	add	r4, r4, #1
   13274:	b	1325c <putchar_unlocked@plt+0x1f20>
   13278:	mov	r1, r6
   1327c:	mov	r0, #48	; 0x30
   13280:	add	r4, r4, #1
   13284:	bl	112ac <fputc@plt>
   13288:	cmp	r4, r5
   1328c:	bne	13278 <putchar_unlocked@plt+0x1f3c>
   13290:	b	13228 <putchar_unlocked@plt+0x1eec>
   13294:	mov	r4, #0
   13298:	b	13288 <putchar_unlocked@plt+0x1f4c>
   1329c:	ldr	r3, [sp, #32]
   132a0:	cmp	r3, #0
   132a4:	movne	r2, r9
   132a8:	ldrne	r1, [sp, #44]	; 0x2c
   132ac:	bne	133a8 <putchar_unlocked@plt+0x206c>
   132b0:	mov	r3, r6
   132b4:	mov	r2, #1
   132b8:	ldr	r0, [sp, #44]	; 0x2c
   132bc:	mov	r1, r9
   132c0:	bl	110f0 <fwrite@plt>
   132c4:	b	12348 <putchar_unlocked@plt+0x100c>
   132c8:	mov	fp, #0
   132cc:	b	12380 <putchar_unlocked@plt+0x1044>
   132d0:	mov	r2, #100	; 0x64
   132d4:	mov	r0, #5
   132d8:	mla	r3, r2, r3, sl
   132dc:	mov	sl, #0
   132e0:	mov	r2, #1
   132e4:	b	12800 <putchar_unlocked@plt+0x14c4>
   132e8:	mov	r2, #100	; 0x64
   132ec:	mov	r0, #6
   132f0:	mla	r3, r2, r3, sl
   132f4:	mov	sl, #4
   132f8:	mov	r2, #1
   132fc:	b	12800 <putchar_unlocked@plt+0x14c4>
   13300:	mov	r0, #100	; 0x64
   13304:	mul	sl, r0, sl
   13308:	movw	r0, #10000	; 0x2710
   1330c:	mla	r3, r0, r3, sl
   13310:	mov	sl, #20
   13314:	mov	r0, #9
   13318:	add	r3, r3, r2
   1331c:	mov	r2, #1
   13320:	b	12800 <putchar_unlocked@plt+0x14c4>
   13324:	cmp	r2, #0
   13328:	bne	13300 <putchar_unlocked@plt+0x1fc4>
   1332c:	cmp	sl, #0
   13330:	bne	132e8 <putchar_unlocked@plt+0x1fac>
   13334:	mov	r2, #1
   13338:	b	12b1c <putchar_unlocked@plt+0x17e0>
   1333c:	ldr	r3, [sp, #28]
   13340:	sub	r3, r3, #1
   13344:	str	r3, [sp, #28]
   13348:	b	125f0 <putchar_unlocked@plt+0x12b4>
   1334c:	cmp	r4, #43	; 0x2b
   13350:	cmpne	r4, #48	; 0x30
   13354:	sub	r5, r5, r8
   13358:	moveq	r4, #1
   1335c:	movne	r4, #0
   13360:	bne	13384 <putchar_unlocked@plt+0x2048>
   13364:	mov	r4, #0
   13368:	mov	r1, r6
   1336c:	mov	r0, #48	; 0x30
   13370:	add	r4, r4, #1
   13374:	bl	112ac <fputc@plt>
   13378:	cmp	r5, r4
   1337c:	bne	13368 <putchar_unlocked@plt+0x202c>
   13380:	b	12640 <putchar_unlocked@plt+0x1304>
   13384:	mov	r1, r6
   13388:	mov	r0, #32
   1338c:	add	r4, r4, #1
   13390:	bl	112ac <fputc@plt>
   13394:	cmp	r5, r4
   13398:	bne	13384 <putchar_unlocked@plt+0x2048>
   1339c:	b	12640 <putchar_unlocked@plt+0x1304>
   133a0:	mov	r2, r8
   133a4:	mov	r1, r9
   133a8:	mov	r0, r6
   133ac:	bl	11e60 <putchar_unlocked@plt+0xb24>
   133b0:	b	12348 <putchar_unlocked@plt+0x100c>
   133b4:	push	{lr}		; (str lr, [sp, #-4]!)
   133b8:	sub	sp, sp, #36	; 0x24
   133bc:	mov	ip, #0
   133c0:	ldr	lr, [sp, #40]	; 0x28
   133c4:	str	ip, [sp]
   133c8:	str	r3, [sp, #12]
   133cc:	add	r3, sp, #31
   133d0:	str	r3, [sp, #8]
   133d4:	mvn	r3, #0
   133d8:	strb	ip, [sp, #31]
   133dc:	str	r3, [sp, #4]
   133e0:	mov	r3, ip
   133e4:	str	lr, [sp, #16]
   133e8:	bl	11e94 <putchar_unlocked@plt+0xb58>
   133ec:	add	sp, sp, #36	; 0x24
   133f0:	pop	{pc}		; (ldr pc, [sp], #4)
   133f4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   133f8:	mov	r4, r0
   133fc:	ldmib	r0, {ip, lr}
   13400:	ldr	r8, [sp, #32]
   13404:	cmp	lr, ip
   13408:	bne	13478 <putchar_unlocked@plt+0x213c>
   1340c:	ldr	ip, [r0, #16]
   13410:	ldr	lr, [r0, #20]
   13414:	cmp	lr, ip
   13418:	bne	13478 <putchar_unlocked@plt+0x213c>
   1341c:	ldr	r5, [r0, #36]	; 0x24
   13420:	cmp	r5, #0
   13424:	bne	13478 <putchar_unlocked@plt+0x213c>
   13428:	mov	r6, r2
   1342c:	mov	r7, r3
   13430:	bl	11234 <fileno@plt>
   13434:	mov	r2, r6
   13438:	mov	r3, r7
   1343c:	str	r8, [sp]
   13440:	bl	110fc <lseek64@plt>
   13444:	mvn	r3, #0
   13448:	mvn	r2, #0
   1344c:	cmp	r1, r3
   13450:	cmpeq	r0, r2
   13454:	mvneq	r0, #0
   13458:	beq	13470 <putchar_unlocked@plt+0x2134>
   1345c:	ldr	r3, [r4]
   13460:	strd	r0, [r4, #80]	; 0x50
   13464:	mov	r0, r5
   13468:	bic	r3, r3, #16
   1346c:	str	r3, [r4]
   13470:	add	sp, sp, #8
   13474:	pop	{r4, r5, r6, r7, r8, pc}
   13478:	mov	r0, r4
   1347c:	str	r8, [sp, #32]
   13480:	add	sp, sp, #8
   13484:	pop	{r4, r5, r6, r7, r8, lr}
   13488:	b	11258 <fseeko64@plt>
   1348c:	ldr	ip, [pc, #156]	; 13530 <putchar_unlocked@plt+0x21f4>
   13490:	cmp	r0, #2
   13494:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   13498:	mov	r6, #0
   1349c:	mov	r8, ip
   134a0:	ldr	r7, [ip]
   134a4:	str	r6, [ip]
   134a8:	bne	134dc <putchar_unlocked@plt+0x21a0>
   134ac:	mov	r5, r3
   134b0:	mov	r4, r2
   134b4:	ldr	r3, [pc, #120]	; 13534 <putchar_unlocked@plt+0x21f8>
   134b8:	str	r6, [sp]
   134bc:	ldr	r2, [pc, #116]	; 13538 <putchar_unlocked@plt+0x21fc>
   134c0:	bl	111b0 <getopt_long@plt>
   134c4:	cmn	r0, #1
   134c8:	beq	134dc <putchar_unlocked@plt+0x21a0>
   134cc:	cmp	r0, #104	; 0x68
   134d0:	beq	134f4 <putchar_unlocked@plt+0x21b8>
   134d4:	cmp	r0, #118	; 0x76
   134d8:	beq	13504 <putchar_unlocked@plt+0x21c8>
   134dc:	ldr	r3, [pc, #88]	; 1353c <putchar_unlocked@plt+0x2200>
   134e0:	mov	r2, #0
   134e4:	str	r7, [r8]
   134e8:	str	r2, [r3]
   134ec:	add	sp, sp, #16
   134f0:	pop	{r4, r5, r6, r7, r8, pc}
   134f4:	mov	r0, r6
   134f8:	ldr	r3, [sp, #44]	; 0x2c
   134fc:	blx	r3
   13500:	b	134dc <putchar_unlocked@plt+0x21a0>
   13504:	ldr	r0, [pc, #52]	; 13540 <putchar_unlocked@plt+0x2204>
   13508:	add	r3, sp, #48	; 0x30
   1350c:	mov	r2, r5
   13510:	mov	r1, r4
   13514:	str	r3, [sp]
   13518:	str	r3, [sp, #12]
   1351c:	ldr	r3, [sp, #40]	; 0x28
   13520:	ldr	r0, [r0]
   13524:	bl	155a0 <putchar_unlocked@plt+0x4264>
   13528:	mov	r0, r6
   1352c:	bl	111d4 <exit@plt>
   13530:	muleq	r2, r8, r1
   13534:	andeq	r6, r1, r0, asr #7
   13538:	strdeq	r6, [r1], -r0
   1353c:	andeq	r7, r2, r8, lsl #3
   13540:	muleq	r2, r4, r1
   13544:	push	{r4, r5, r6, r7, r8, r9, lr}
   13548:	sub	sp, sp, #20
   1354c:	mov	r8, r3
   13550:	mov	r4, #0
   13554:	mov	r7, r2
   13558:	mov	r2, #1
   1355c:	ldrb	lr, [sp, #52]	; 0x34
   13560:	ldr	r3, [pc, #140]	; 135f4 <putchar_unlocked@plt+0x22b8>
   13564:	ldr	ip, [pc, #140]	; 135f8 <putchar_unlocked@plt+0x22bc>
   13568:	cmp	lr, r4
   1356c:	ldr	r6, [sp, #56]	; 0x38
   13570:	mov	r5, r3
   13574:	ldr	r9, [r3]
   13578:	str	r2, [r3]
   1357c:	ldr	r2, [pc, #120]	; 135fc <putchar_unlocked@plt+0x22c0>
   13580:	moveq	r2, ip
   13584:	str	r4, [sp]
   13588:	ldr	r3, [pc, #112]	; 13600 <putchar_unlocked@plt+0x22c4>
   1358c:	bl	111b0 <getopt_long@plt>
   13590:	cmn	r0, #1
   13594:	beq	135bc <putchar_unlocked@plt+0x2280>
   13598:	cmp	r0, #104	; 0x68
   1359c:	beq	135b4 <putchar_unlocked@plt+0x2278>
   135a0:	cmp	r0, #118	; 0x76
   135a4:	beq	135c8 <putchar_unlocked@plt+0x228c>
   135a8:	ldr	r3, [pc, #84]	; 13604 <putchar_unlocked@plt+0x22c8>
   135ac:	ldr	r0, [r3]
   135b0:	b	135b8 <putchar_unlocked@plt+0x227c>
   135b4:	mov	r0, r4
   135b8:	blx	r6
   135bc:	str	r9, [r5]
   135c0:	add	sp, sp, #20
   135c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   135c8:	ldr	r0, [pc, #56]	; 13608 <putchar_unlocked@plt+0x22cc>
   135cc:	add	r3, sp, #60	; 0x3c
   135d0:	mov	r2, r8
   135d4:	mov	r1, r7
   135d8:	str	r3, [sp]
   135dc:	str	r3, [sp, #12]
   135e0:	ldr	r3, [sp, #48]	; 0x30
   135e4:	ldr	r0, [r0]
   135e8:	bl	155a0 <putchar_unlocked@plt+0x4264>
   135ec:	mov	r0, r4
   135f0:	bl	111d4 <exit@plt>
   135f4:	muleq	r2, r8, r1
   135f8:	strdeq	r6, [r1], -r0
   135fc:	andeq	r6, r1, r0, ror #2
   13600:	andeq	r6, r1, r0, asr #7
   13604:	andeq	r7, r2, ip, lsr r1
   13608:	muleq	r2, r4, r1
   1360c:	push	{r4, r5, r6, lr}
   13610:	subs	r4, r0, #0
   13614:	bne	1362c <putchar_unlocked@plt+0x22f0>
   13618:	ldr	r3, [pc, #124]	; 1369c <putchar_unlocked@plt+0x2360>
   1361c:	ldr	r0, [pc, #124]	; 136a0 <putchar_unlocked@plt+0x2364>
   13620:	ldr	r1, [r3]
   13624:	bl	11300 <fputs@plt>
   13628:	bl	11318 <abort@plt>
   1362c:	mov	r1, #47	; 0x2f
   13630:	bl	11294 <strrchr@plt>
   13634:	subs	r6, r0, #0
   13638:	beq	13688 <putchar_unlocked@plt+0x234c>
   1363c:	add	r5, r6, #1
   13640:	sub	r3, r5, r4
   13644:	cmp	r3, #6
   13648:	ble	13688 <putchar_unlocked@plt+0x234c>
   1364c:	mov	r2, #7
   13650:	ldr	r1, [pc, #76]	; 136a4 <putchar_unlocked@plt+0x2368>
   13654:	sub	r0, r6, #6
   13658:	bl	1130c <strncmp@plt>
   1365c:	cmp	r0, #0
   13660:	bne	13688 <putchar_unlocked@plt+0x234c>
   13664:	mov	r2, #3
   13668:	ldr	r1, [pc, #56]	; 136a8 <putchar_unlocked@plt+0x236c>
   1366c:	mov	r0, r5
   13670:	bl	1130c <strncmp@plt>
   13674:	cmp	r0, #0
   13678:	ldreq	r3, [pc, #44]	; 136ac <putchar_unlocked@plt+0x2370>
   1367c:	addeq	r4, r6, #4
   13680:	movne	r4, r5
   13684:	streq	r4, [r3]
   13688:	ldr	r3, [pc, #32]	; 136b0 <putchar_unlocked@plt+0x2374>
   1368c:	str	r4, [r3]
   13690:	ldr	r3, [pc, #28]	; 136b4 <putchar_unlocked@plt+0x2378>
   13694:	str	r4, [r3]
   13698:	pop	{r4, r5, r6, pc}
   1369c:	muleq	r2, r0, r1
   136a0:	strdeq	r6, [r1], -pc	; <UNPREDICTABLE>
   136a4:	andeq	r6, r1, r7, lsr r4
   136a8:	andeq	r6, r1, pc, lsr r4
   136ac:	andeq	r7, r2, r0, lsl #3
   136b0:	andeq	r7, r2, ip, lsr #3
   136b4:	andeq	r7, r2, r4, lsl #3
   136b8:	push	{r4, lr}
   136bc:	mov	r2, #48	; 0x30
   136c0:	mov	r4, r1
   136c4:	mov	r1, #0
   136c8:	bl	11210 <memset@plt>
   136cc:	cmp	r4, #10
   136d0:	bne	136d8 <putchar_unlocked@plt+0x239c>
   136d4:	bl	11318 <abort@plt>
   136d8:	str	r4, [r0]
   136dc:	pop	{r4, pc}
   136e0:	push	{r4, r5, r6, lr}
   136e4:	mov	r2, #5
   136e8:	mov	r6, r0
   136ec:	mov	r5, r1
   136f0:	mov	r1, r0
   136f4:	mov	r0, #0
   136f8:	bl	1109c <dcgettext@plt>
   136fc:	cmp	r6, r0
   13700:	mov	r4, r0
   13704:	bne	13774 <putchar_unlocked@plt+0x2438>
   13708:	bl	15b50 <putchar_unlocked@plt+0x4814>
   1370c:	ldrb	r3, [r0]
   13710:	bic	r3, r3, #32
   13714:	cmp	r3, #85	; 0x55
   13718:	bne	1377c <putchar_unlocked@plt+0x2440>
   1371c:	ldrb	r3, [r0, #1]
   13720:	bic	r3, r3, #32
   13724:	cmp	r3, #84	; 0x54
   13728:	bne	137ec <putchar_unlocked@plt+0x24b0>
   1372c:	ldrb	r3, [r0, #2]
   13730:	bic	r3, r3, #32
   13734:	cmp	r3, #70	; 0x46
   13738:	bne	137ec <putchar_unlocked@plt+0x24b0>
   1373c:	ldrb	r3, [r0, #3]
   13740:	cmp	r3, #45	; 0x2d
   13744:	bne	137ec <putchar_unlocked@plt+0x24b0>
   13748:	ldrb	r3, [r0, #4]
   1374c:	cmp	r3, #56	; 0x38
   13750:	bne	137ec <putchar_unlocked@plt+0x24b0>
   13754:	ldrb	r3, [r0, #5]
   13758:	cmp	r3, #0
   1375c:	bne	137ec <putchar_unlocked@plt+0x24b0>
   13760:	ldrb	r2, [r4]
   13764:	ldr	r3, [pc, #144]	; 137fc <putchar_unlocked@plt+0x24c0>
   13768:	ldr	r4, [pc, #144]	; 13800 <putchar_unlocked@plt+0x24c4>
   1376c:	cmp	r2, #96	; 0x60
   13770:	movne	r4, r3
   13774:	mov	r0, r4
   13778:	pop	{r4, r5, r6, pc}
   1377c:	cmp	r3, #71	; 0x47
   13780:	bne	137ec <putchar_unlocked@plt+0x24b0>
   13784:	ldrb	r3, [r0, #1]
   13788:	bic	r3, r3, #32
   1378c:	cmp	r3, #66	; 0x42
   13790:	bne	137ec <putchar_unlocked@plt+0x24b0>
   13794:	ldrb	r3, [r0, #2]
   13798:	cmp	r3, #49	; 0x31
   1379c:	bne	137ec <putchar_unlocked@plt+0x24b0>
   137a0:	ldrb	r3, [r0, #3]
   137a4:	cmp	r3, #56	; 0x38
   137a8:	bne	137ec <putchar_unlocked@plt+0x24b0>
   137ac:	ldrb	r3, [r0, #4]
   137b0:	cmp	r3, #48	; 0x30
   137b4:	bne	137ec <putchar_unlocked@plt+0x24b0>
   137b8:	ldrb	r3, [r0, #5]
   137bc:	cmp	r3, #51	; 0x33
   137c0:	bne	137ec <putchar_unlocked@plt+0x24b0>
   137c4:	ldrb	r3, [r0, #6]
   137c8:	cmp	r3, #48	; 0x30
   137cc:	bne	137ec <putchar_unlocked@plt+0x24b0>
   137d0:	ldrb	r3, [r0, #7]
   137d4:	cmp	r3, #0
   137d8:	bne	137ec <putchar_unlocked@plt+0x24b0>
   137dc:	ldrb	r2, [r4]
   137e0:	ldr	r3, [pc, #28]	; 13804 <putchar_unlocked@plt+0x24c8>
   137e4:	ldr	r4, [pc, #28]	; 13808 <putchar_unlocked@plt+0x24cc>
   137e8:	b	1376c <putchar_unlocked@plt+0x2430>
   137ec:	ldr	r4, [pc, #24]	; 1380c <putchar_unlocked@plt+0x24d0>
   137f0:	cmp	r5, #9
   137f4:	ldr	r3, [pc, #20]	; 13810 <putchar_unlocked@plt+0x24d4>
   137f8:	b	13770 <putchar_unlocked@plt+0x2434>
   137fc:	muleq	r1, sl, r4
   13800:	andeq	r6, r1, r5, lsr #9
   13804:	muleq	r1, lr, r4
   13808:	andeq	r6, r1, r1, lsr #9
   1380c:	muleq	r1, r8, r4
   13810:	andeq	r6, r1, r9, lsr #9
   13814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13818:	sub	sp, sp, #108	; 0x6c
   1381c:	mov	r8, r0
   13820:	mov	r5, r1
   13824:	mov	r6, #0
   13828:	str	r3, [sp, #40]	; 0x28
   1382c:	str	r2, [sp, #48]	; 0x30
   13830:	ldr	sl, [sp, #144]	; 0x90
   13834:	bl	11108 <__ctype_get_mb_cur_max@plt>
   13838:	ldr	r3, [sp, #148]	; 0x94
   1383c:	str	r6, [sp, #24]
   13840:	str	r6, [sp, #32]
   13844:	str	r6, [sp, #44]	; 0x2c
   13848:	str	r6, [sp, #52]	; 0x34
   1384c:	ubfx	r7, r3, #1, #1
   13850:	mov	r3, #1
   13854:	str	r6, [sp, #60]	; 0x3c
   13858:	str	r3, [sp, #72]	; 0x48
   1385c:	str	r0, [sp, #76]	; 0x4c
   13860:	cmp	sl, #10
   13864:	ldrls	pc, [pc, sl, lsl #2]
   13868:	b	13aac <putchar_unlocked@plt+0x2770>
   1386c:	muleq	r1, r8, r8
   13870:	andeq	r3, r1, r4, asr #21
   13874:	andeq	r3, r1, r8, asr #20
   13878:	andeq	r3, r1, r0, ror #20
   1387c:	andeq	r3, r1, r0, lsr sl
   13880:	andeq	r3, r1, r8, lsl #19
   13884:	andeq	r3, r1, r8, ror #18
   13888:			; <UNDEFINED> instruction: 0x00013ab0
   1388c:			; <UNDEFINED> instruction: 0x000139b8
   13890:			; <UNDEFINED> instruction: 0x000139b8
   13894:			; <UNDEFINED> instruction: 0x000139b8
   13898:	mov	r4, sl
   1389c:	mov	r7, #0
   138a0:	mov	r9, r5
   138a4:	mov	r3, #0
   138a8:	str	r6, [sp, #68]	; 0x44
   138ac:	str	r3, [sp, #28]
   138b0:	ldr	r3, [sp, #40]	; 0x28
   138b4:	cmn	r3, #1
   138b8:	bne	14458 <putchar_unlocked@plt+0x311c>
   138bc:	ldr	r2, [sp, #28]
   138c0:	ldr	r3, [sp, #48]	; 0x30
   138c4:	ldrb	r3, [r3, r2]
   138c8:	adds	r3, r3, #0
   138cc:	movne	r3, #1
   138d0:	str	r3, [sp, #36]	; 0x24
   138d4:	ldr	r3, [sp, #36]	; 0x24
   138d8:	cmp	r3, #0
   138dc:	bne	13ae8 <putchar_unlocked@plt+0x27ac>
   138e0:	sub	r3, sl, #2
   138e4:	cmp	r4, #0
   138e8:	clz	r3, r3
   138ec:	movne	r2, #0
   138f0:	lsr	r3, r3, #5
   138f4:	andeq	r2, r3, r7
   138f8:	cmp	r2, #0
   138fc:	bne	13cac <putchar_unlocked@plt+0x2970>
   13900:	eor	r7, r7, #1
   13904:	ands	r3, r3, r7
   13908:	beq	144d0 <putchar_unlocked@plt+0x3194>
   1390c:	ldr	r2, [sp, #68]	; 0x44
   13910:	cmp	r2, #0
   13914:	beq	14498 <putchar_unlocked@plt+0x315c>
   13918:	ldr	r3, [sp, #72]	; 0x48
   1391c:	cmp	r3, #0
   13920:	beq	1446c <putchar_unlocked@plt+0x3130>
   13924:	ldr	r2, [sp, #48]	; 0x30
   13928:	ldr	r3, [sp, #160]	; 0xa0
   1392c:	ldr	r1, [sp, #60]	; 0x3c
   13930:	str	r3, [sp, #16]
   13934:	ldr	r3, [sp, #156]	; 0x9c
   13938:	str	r3, [sp, #12]
   1393c:	ldr	r3, [sp, #152]	; 0x98
   13940:	str	r3, [sp, #8]
   13944:	ldr	r3, [sp, #148]	; 0x94
   13948:	str	r3, [sp, #4]
   1394c:	mov	r3, #5
   13950:	str	r3, [sp]
   13954:	ldr	r3, [sp, #40]	; 0x28
   13958:	mov	r0, r8
   1395c:	bl	13814 <putchar_unlocked@plt+0x24d8>
   13960:	mov	r4, r0
   13964:	b	144c4 <putchar_unlocked@plt+0x3188>
   13968:	ldr	r3, [pc, #2948]	; 144f4 <putchar_unlocked@plt+0x31b8>
   1396c:	mov	r7, #1
   13970:	mov	r4, #0
   13974:	mov	sl, #5
   13978:	str	r7, [sp, #24]
   1397c:	str	r7, [sp, #32]
   13980:	str	r3, [sp, #44]	; 0x2c
   13984:	b	138a0 <putchar_unlocked@plt+0x2564>
   13988:	cmp	r7, #0
   1398c:	bne	13ad0 <putchar_unlocked@plt+0x2794>
   13990:	cmp	r5, #0
   13994:	mov	r4, #1
   13998:	movne	r3, #34	; 0x22
   1399c:	strbne	r3, [r8]
   139a0:	mov	r3, #1
   139a4:	str	r3, [sp, #24]
   139a8:	str	r3, [sp, #32]
   139ac:	ldr	r3, [pc, #2880]	; 144f4 <putchar_unlocked@plt+0x31b8>
   139b0:	str	r3, [sp, #44]	; 0x2c
   139b4:	b	138a0 <putchar_unlocked@plt+0x2564>
   139b8:	cmp	sl, #10
   139bc:	beq	139e0 <putchar_unlocked@plt+0x26a4>
   139c0:	mov	r1, sl
   139c4:	ldr	r0, [pc, #2860]	; 144f8 <putchar_unlocked@plt+0x31bc>
   139c8:	bl	136e0 <putchar_unlocked@plt+0x23a4>
   139cc:	mov	r1, sl
   139d0:	str	r0, [sp, #156]	; 0x9c
   139d4:	ldr	r0, [pc, #2848]	; 144fc <putchar_unlocked@plt+0x31c0>
   139d8:	bl	136e0 <putchar_unlocked@plt+0x23a4>
   139dc:	str	r0, [sp, #160]	; 0xa0
   139e0:	cmp	r7, #0
   139e4:	moveq	r4, r7
   139e8:	beq	13a00 <putchar_unlocked@plt+0x26c4>
   139ec:	mov	r4, #0
   139f0:	b	13a10 <putchar_unlocked@plt+0x26d4>
   139f4:	cmp	r5, r4
   139f8:	strbhi	r3, [r8, r4]
   139fc:	add	r4, r4, #1
   13a00:	ldr	r3, [sp, #156]	; 0x9c
   13a04:	ldrb	r3, [r3, r4]
   13a08:	cmp	r3, #0
   13a0c:	bne	139f4 <putchar_unlocked@plt+0x26b8>
   13a10:	ldr	r0, [sp, #160]	; 0xa0
   13a14:	bl	111e0 <strlen@plt>
   13a18:	ldr	r3, [sp, #160]	; 0xa0
   13a1c:	str	r0, [sp, #32]
   13a20:	str	r3, [sp, #44]	; 0x2c
   13a24:	mov	r3, #1
   13a28:	str	r3, [sp, #24]
   13a2c:	b	138a0 <putchar_unlocked@plt+0x2564>
   13a30:	mov	r3, #1
   13a34:	cmp	r7, #0
   13a38:	streq	r3, [sp, #24]
   13a3c:	beq	13a80 <putchar_unlocked@plt+0x2744>
   13a40:	str	r3, [sp, #32]
   13a44:	b	13a6c <putchar_unlocked@plt+0x2730>
   13a48:	cmp	r7, #0
   13a4c:	beq	13a80 <putchar_unlocked@plt+0x2744>
   13a50:	mov	r3, #1
   13a54:	str	r3, [sp, #32]
   13a58:	ldr	r3, [pc, #2716]	; 144fc <putchar_unlocked@plt+0x31c0>
   13a5c:	b	13ae0 <putchar_unlocked@plt+0x27a4>
   13a60:	mov	r7, #1
   13a64:	str	r7, [sp, #24]
   13a68:	str	r7, [sp, #32]
   13a6c:	ldr	r3, [pc, #2696]	; 144fc <putchar_unlocked@plt+0x31c0>
   13a70:	mov	r4, #0
   13a74:	str	r3, [sp, #44]	; 0x2c
   13a78:	mov	sl, #2
   13a7c:	b	138a0 <putchar_unlocked@plt+0x2564>
   13a80:	cmp	r5, #0
   13a84:	movne	r3, #39	; 0x27
   13a88:	movne	r7, #0
   13a8c:	strbne	r3, [r8]
   13a90:	moveq	r7, r5
   13a94:	mov	r3, #1
   13a98:	mov	r4, #1
   13a9c:	str	r3, [sp, #32]
   13aa0:	ldr	r3, [pc, #2644]	; 144fc <putchar_unlocked@plt+0x31c0>
   13aa4:	str	r3, [sp, #44]	; 0x2c
   13aa8:	b	13a78 <putchar_unlocked@plt+0x273c>
   13aac:	bl	11318 <abort@plt>
   13ab0:	mov	r3, #1
   13ab4:	mov	r7, #0
   13ab8:	str	r3, [sp, #24]
   13abc:	mov	r4, #0
   13ac0:	b	138a0 <putchar_unlocked@plt+0x2564>
   13ac4:	mov	r7, #1
   13ac8:	str	sl, [sp, #32]
   13acc:	b	13a6c <putchar_unlocked@plt+0x2730>
   13ad0:	mov	r3, #1
   13ad4:	str	r7, [sp, #24]
   13ad8:	str	r3, [sp, #32]
   13adc:	ldr	r3, [pc, #2576]	; 144f4 <putchar_unlocked@plt+0x31b8>
   13ae0:	str	r3, [sp, #44]	; 0x2c
   13ae4:	b	13abc <putchar_unlocked@plt+0x2780>
   13ae8:	ldr	fp, [sp, #24]
   13aec:	ldr	r3, [sp, #32]
   13af0:	cmp	sl, #2
   13af4:	moveq	fp, #0
   13af8:	andne	fp, fp, #1
   13afc:	adds	r5, r3, #0
   13b00:	movne	r5, #1
   13b04:	ands	r3, fp, r5
   13b08:	str	r3, [sp, #64]	; 0x40
   13b0c:	beq	13bdc <putchar_unlocked@plt+0x28a0>
   13b10:	ldr	r3, [sp, #28]
   13b14:	ldr	r2, [sp, #32]
   13b18:	cmp	r2, #1
   13b1c:	add	r6, r3, r2
   13b20:	mov	r3, r2
   13b24:	ldr	r2, [sp, #40]	; 0x28
   13b28:	movls	r3, #0
   13b2c:	movhi	r3, #1
   13b30:	cmn	r2, #1
   13b34:	movne	r3, #0
   13b38:	cmp	r3, #0
   13b3c:	beq	13b4c <putchar_unlocked@plt+0x2810>
   13b40:	ldr	r0, [sp, #48]	; 0x30
   13b44:	bl	111e0 <strlen@plt>
   13b48:	str	r0, [sp, #40]	; 0x28
   13b4c:	ldr	r3, [sp, #40]	; 0x28
   13b50:	cmp	r6, r3
   13b54:	bhi	13bd4 <putchar_unlocked@plt+0x2898>
   13b58:	ldr	r0, [sp, #28]
   13b5c:	ldr	r2, [sp, #32]
   13b60:	ldr	r3, [sp, #48]	; 0x30
   13b64:	ldr	r1, [sp, #44]	; 0x2c
   13b68:	add	r0, r3, r0
   13b6c:	bl	11084 <memcmp@plt>
   13b70:	cmp	r0, #0
   13b74:	bne	13bd4 <putchar_unlocked@plt+0x2898>
   13b78:	cmp	r7, #0
   13b7c:	beq	13bdc <putchar_unlocked@plt+0x28a0>
   13b80:	str	r7, [sp, #24]
   13b84:	ldr	r3, [sp, #24]
   13b88:	mov	r1, r9
   13b8c:	ldr	r2, [sp, #48]	; 0x30
   13b90:	cmp	sl, #2
   13b94:	movne	r3, #0
   13b98:	andeq	r3, r3, #1
   13b9c:	cmp	r3, #0
   13ba0:	ldr	r3, [sp, #160]	; 0xa0
   13ba4:	movne	sl, #4
   13ba8:	str	sl, [sp]
   13bac:	str	r3, [sp, #16]
   13bb0:	ldr	r3, [sp, #156]	; 0x9c
   13bb4:	str	r3, [sp, #12]
   13bb8:	mov	r3, #0
   13bbc:	str	r3, [sp, #8]
   13bc0:	ldr	r3, [sp, #148]	; 0x94
   13bc4:	bic	r3, r3, #2
   13bc8:	str	r3, [sp, #4]
   13bcc:	ldr	r3, [sp, #40]	; 0x28
   13bd0:	b	13958 <putchar_unlocked@plt+0x261c>
   13bd4:	mov	r3, #0
   13bd8:	str	r3, [sp, #64]	; 0x40
   13bdc:	ldr	r2, [sp, #28]
   13be0:	ldr	r3, [sp, #48]	; 0x30
   13be4:	add	r3, r3, r2
   13be8:	str	r3, [sp, #80]	; 0x50
   13bec:	ldr	r3, [sp, #48]	; 0x30
   13bf0:	ldrb	r6, [r3, r2]
   13bf4:	cmp	r6, #58	; 0x3a
   13bf8:	bhi	13d5c <putchar_unlocked@plt+0x2a20>
   13bfc:	cmp	r6, #43	; 0x2b
   13c00:	bcs	13f1c <putchar_unlocked@plt+0x2be0>
   13c04:	cmp	r6, #32
   13c08:	beq	13f70 <putchar_unlocked@plt+0x2c34>
   13c0c:	bhi	13cb4 <putchar_unlocked@plt+0x2978>
   13c10:	cmp	r6, #9
   13c14:	beq	14118 <putchar_unlocked@plt+0x2ddc>
   13c18:	bhi	13c78 <putchar_unlocked@plt+0x293c>
   13c1c:	cmp	r6, #7
   13c20:	beq	14128 <putchar_unlocked@plt+0x2dec>
   13c24:	bhi	14144 <putchar_unlocked@plt+0x2e08>
   13c28:	cmp	r6, #0
   13c2c:	beq	13f8c <putchar_unlocked@plt+0x2c50>
   13c30:	ldr	r3, [sp, #76]	; 0x4c
   13c34:	cmp	r3, #1
   13c38:	bne	14190 <putchar_unlocked@plt+0x2e54>
   13c3c:	bl	111c8 <__ctype_b_loc@plt>
   13c40:	ldr	r2, [r0]
   13c44:	sxth	r3, r6
   13c48:	lsl	r3, r3, #1
   13c4c:	ldrh	r5, [r2, r3]
   13c50:	ldr	r3, [sp, #76]	; 0x4c
   13c54:	ubfx	r5, r5, #14, #1
   13c58:	str	r3, [sp, #56]	; 0x38
   13c5c:	ldr	r3, [sp, #24]
   13c60:	eor	fp, r5, #1
   13c64:	and	fp, fp, r3
   13c68:	ands	fp, fp, #255	; 0xff
   13c6c:	beq	13e4c <putchar_unlocked@plt+0x2b10>
   13c70:	mov	r5, #0
   13c74:	b	1423c <putchar_unlocked@plt+0x2f00>
   13c78:	cmp	r6, #11
   13c7c:	beq	1414c <putchar_unlocked@plt+0x2e10>
   13c80:	bcc	14120 <putchar_unlocked@plt+0x2de4>
   13c84:	cmp	r6, #12
   13c88:	beq	14154 <putchar_unlocked@plt+0x2e18>
   13c8c:	cmp	r6, #13
   13c90:	moveq	r3, #114	; 0x72
   13c94:	bne	13c30 <putchar_unlocked@plt+0x28f4>
   13c98:	cmp	sl, #2
   13c9c:	movne	r2, #0
   13ca0:	andeq	r2, r7, #1
   13ca4:	cmp	r2, #0
   13ca8:	beq	1412c <putchar_unlocked@plt+0x2df0>
   13cac:	mov	sl, #2
   13cb0:	b	13b84 <putchar_unlocked@plt+0x2848>
   13cb4:	cmp	r6, #37	; 0x25
   13cb8:	beq	13f1c <putchar_unlocked@plt+0x2be0>
   13cbc:	bhi	13cd0 <putchar_unlocked@plt+0x2994>
   13cc0:	cmp	r6, #35	; 0x23
   13cc4:	beq	13f64 <putchar_unlocked@plt+0x2c28>
   13cc8:	mov	r5, #0
   13ccc:	b	13f74 <putchar_unlocked@plt+0x2c38>
   13cd0:	cmp	r6, #39	; 0x27
   13cd4:	bne	13cc8 <putchar_unlocked@plt+0x298c>
   13cd8:	cmp	sl, #2
   13cdc:	ldrne	r5, [sp, #36]	; 0x24
   13ce0:	movne	r3, r5
   13ce4:	strne	r3, [sp, #68]	; 0x44
   13ce8:	bne	14068 <putchar_unlocked@plt+0x2d2c>
   13cec:	cmp	r7, #0
   13cf0:	bne	13b84 <putchar_unlocked@plt+0x2848>
   13cf4:	ldr	r3, [sp, #60]	; 0x3c
   13cf8:	cmp	r9, #0
   13cfc:	clz	r3, r3
   13d00:	lsr	r3, r3, #5
   13d04:	moveq	r3, #0
   13d08:	cmp	r3, #0
   13d0c:	strne	r9, [sp, #60]	; 0x3c
   13d10:	movne	r9, #0
   13d14:	bne	13d24 <putchar_unlocked@plt+0x29e8>
   13d18:	cmp	r9, r4
   13d1c:	movhi	r3, #39	; 0x27
   13d20:	strbhi	r3, [r8, r4]
   13d24:	add	r3, r4, #1
   13d28:	ldr	r5, [sp, #36]	; 0x24
   13d2c:	mov	fp, #0
   13d30:	cmp	r3, r9
   13d34:	movcc	r2, #92	; 0x5c
   13d38:	str	fp, [sp, #52]	; 0x34
   13d3c:	strbcc	r2, [r8, r3]
   13d40:	add	r3, r4, #2
   13d44:	add	r4, r4, #3
   13d48:	cmp	r3, r9
   13d4c:	str	r5, [sp, #68]	; 0x44
   13d50:	movcc	r2, #39	; 0x27
   13d54:	strbcc	r2, [r8, r3]
   13d58:	b	13e4c <putchar_unlocked@plt+0x2b10>
   13d5c:	cmp	r6, #94	; 0x5e
   13d60:	beq	13cc8 <putchar_unlocked@plt+0x298c>
   13d64:	bhi	13f24 <putchar_unlocked@plt+0x2be8>
   13d68:	cmp	r6, #90	; 0x5a
   13d6c:	bhi	13f10 <putchar_unlocked@plt+0x2bd4>
   13d70:	cmp	r6, #65	; 0x41
   13d74:	bcs	13f1c <putchar_unlocked@plt+0x2be0>
   13d78:	cmp	r6, #62	; 0x3e
   13d7c:	bls	13cc8 <putchar_unlocked@plt+0x298c>
   13d80:	cmp	r6, #63	; 0x3f
   13d84:	bne	13c30 <putchar_unlocked@plt+0x28f4>
   13d88:	cmp	sl, #2
   13d8c:	beq	14070 <putchar_unlocked@plt+0x2d34>
   13d90:	cmp	sl, #5
   13d94:	movne	fp, #0
   13d98:	bne	14440 <putchar_unlocked@plt+0x3104>
   13d9c:	ldr	r3, [sp, #148]	; 0x94
   13da0:	tst	r3, #4
   13da4:	beq	14078 <putchar_unlocked@plt+0x2d3c>
   13da8:	ldr	r3, [sp, #28]
   13dac:	add	r2, r3, #2
   13db0:	ldr	r3, [sp, #40]	; 0x28
   13db4:	cmp	r2, r3
   13db8:	bcs	14078 <putchar_unlocked@plt+0x2d3c>
   13dbc:	ldr	r1, [sp, #28]
   13dc0:	ldr	r3, [sp, #48]	; 0x30
   13dc4:	add	r3, r3, r1
   13dc8:	ldrb	r1, [r3, #1]
   13dcc:	cmp	r1, #63	; 0x3f
   13dd0:	bne	14078 <putchar_unlocked@plt+0x2d3c>
   13dd4:	ldr	r3, [sp, #48]	; 0x30
   13dd8:	ldrb	r6, [r3, r2]
   13ddc:	sub	r3, r6, #33	; 0x21
   13de0:	uxtb	r3, r3
   13de4:	cmp	r3, #29
   13de8:	bhi	14448 <putchar_unlocked@plt+0x310c>
   13dec:	ldr	r0, [pc, #1804]	; 14500 <putchar_unlocked@plt+0x31c4>
   13df0:	mov	r5, #1
   13df4:	ands	r5, r0, r5, lsl r3
   13df8:	beq	14450 <putchar_unlocked@plt+0x3114>
   13dfc:	cmp	r7, #0
   13e00:	bne	13b84 <putchar_unlocked@plt+0x2848>
   13e04:	cmp	r9, r4
   13e08:	add	r3, r4, #1
   13e0c:	str	r2, [sp, #28]
   13e10:	mov	r5, #0
   13e14:	strbhi	r1, [r8, r4]
   13e18:	cmp	r9, r3
   13e1c:	mov	fp, r5
   13e20:	movhi	r1, #34	; 0x22
   13e24:	strbhi	r1, [r8, r3]
   13e28:	add	r3, r4, #2
   13e2c:	cmp	r9, r3
   13e30:	movhi	r1, #34	; 0x22
   13e34:	strbhi	r1, [r8, r3]
   13e38:	add	r3, r4, #3
   13e3c:	add	r4, r4, #4
   13e40:	cmp	r9, r3
   13e44:	movhi	r1, #63	; 0x3f
   13e48:	strbhi	r1, [r8, r3]
   13e4c:	ldr	r3, [sp, #24]
   13e50:	eor	r3, r3, #1
   13e54:	cmp	sl, #2
   13e58:	orreq	r3, r3, #1
   13e5c:	eor	r3, r3, #1
   13e60:	orr	r3, r7, r3
   13e64:	tst	r3, #255	; 0xff
   13e68:	beq	13e94 <putchar_unlocked@plt+0x2b58>
   13e6c:	ldr	r3, [sp, #152]	; 0x98
   13e70:	cmp	r3, #0
   13e74:	beq	13e94 <putchar_unlocked@plt+0x2b58>
   13e78:	ldr	r1, [sp, #152]	; 0x98
   13e7c:	ubfx	r2, r6, #5, #8
   13e80:	and	r3, r6, #31
   13e84:	ldr	r2, [r1, r2, lsl #2]
   13e88:	lsr	r3, r2, r3
   13e8c:	tst	r3, #1
   13e90:	bne	13ea0 <putchar_unlocked@plt+0x2b64>
   13e94:	ldr	r3, [sp, #64]	; 0x40
   13e98:	cmp	r3, #0
   13e9c:	beq	14098 <putchar_unlocked@plt+0x2d5c>
   13ea0:	sub	r3, sl, #2
   13ea4:	cmp	r7, #0
   13ea8:	clz	r3, r3
   13eac:	lsr	r3, r3, #5
   13eb0:	bne	13b84 <putchar_unlocked@plt+0x2848>
   13eb4:	ldr	r2, [sp, #52]	; 0x34
   13eb8:	eor	r2, r2, #1
   13ebc:	ands	r3, r3, r2
   13ec0:	beq	13ef8 <putchar_unlocked@plt+0x2bbc>
   13ec4:	cmp	r9, r4
   13ec8:	str	r3, [sp, #52]	; 0x34
   13ecc:	movhi	r2, #39	; 0x27
   13ed0:	strbhi	r2, [r8, r4]
   13ed4:	add	r2, r4, #1
   13ed8:	cmp	r9, r2
   13edc:	movhi	r1, #36	; 0x24
   13ee0:	strbhi	r1, [r8, r2]
   13ee4:	add	r2, r4, #2
   13ee8:	add	r4, r4, #3
   13eec:	cmp	r9, r2
   13ef0:	movhi	r1, #39	; 0x27
   13ef4:	strbhi	r1, [r8, r2]
   13ef8:	cmp	r9, r4
   13efc:	ldr	fp, [sp, #36]	; 0x24
   13f00:	movhi	r3, #92	; 0x5c
   13f04:	strbhi	r3, [r8, r4]
   13f08:	add	r4, r4, #1
   13f0c:	b	14098 <putchar_unlocked@plt+0x2d5c>
   13f10:	cmp	r6, #92	; 0x5c
   13f14:	beq	14080 <putchar_unlocked@plt+0x2d44>
   13f18:	bls	13cc8 <putchar_unlocked@plt+0x298c>
   13f1c:	ldr	r5, [sp, #36]	; 0x24
   13f20:	b	14068 <putchar_unlocked@plt+0x2d2c>
   13f24:	cmp	r6, #122	; 0x7a
   13f28:	bhi	13f48 <putchar_unlocked@plt+0x2c0c>
   13f2c:	cmp	r6, #97	; 0x61
   13f30:	bcs	13f1c <putchar_unlocked@plt+0x2be0>
   13f34:	cmp	r6, #95	; 0x5f
   13f38:	beq	13f1c <putchar_unlocked@plt+0x2be0>
   13f3c:	cmp	r6, #96	; 0x60
   13f40:	bne	13c30 <putchar_unlocked@plt+0x28f4>
   13f44:	b	13cc8 <putchar_unlocked@plt+0x298c>
   13f48:	cmp	r6, #124	; 0x7c
   13f4c:	beq	13cc8 <putchar_unlocked@plt+0x298c>
   13f50:	bcc	1415c <putchar_unlocked@plt+0x2e20>
   13f54:	cmp	r6, #125	; 0x7d
   13f58:	beq	1415c <putchar_unlocked@plt+0x2e20>
   13f5c:	cmp	r6, #126	; 0x7e
   13f60:	bne	13c30 <putchar_unlocked@plt+0x28f4>
   13f64:	ldr	r3, [sp, #28]
   13f68:	cmp	r3, #0
   13f6c:	bne	14078 <putchar_unlocked@plt+0x2d3c>
   13f70:	ldr	r5, [sp, #36]	; 0x24
   13f74:	cmp	sl, #2
   13f78:	movne	fp, #0
   13f7c:	andeq	fp, r7, #1
   13f80:	cmp	fp, #0
   13f84:	beq	13e4c <putchar_unlocked@plt+0x2b10>
   13f88:	b	13cac <putchar_unlocked@plt+0x2970>
   13f8c:	ldr	r3, [sp, #24]
   13f90:	cmp	r3, #0
   13f94:	beq	1405c <putchar_unlocked@plt+0x2d20>
   13f98:	sub	r2, sl, #2
   13f9c:	cmp	r7, #0
   13fa0:	clz	r2, r2
   13fa4:	lsr	r2, r2, #5
   13fa8:	bne	13b80 <putchar_unlocked@plt+0x2844>
   13fac:	ldr	r3, [sp, #52]	; 0x34
   13fb0:	eor	r3, r3, #1
   13fb4:	ands	r2, r2, r3
   13fb8:	moveq	r3, r4
   13fbc:	beq	13ff4 <putchar_unlocked@plt+0x2cb8>
   13fc0:	cmp	r9, r4
   13fc4:	str	r2, [sp, #52]	; 0x34
   13fc8:	movhi	r3, #39	; 0x27
   13fcc:	strbhi	r3, [r8, r4]
   13fd0:	add	r3, r4, #1
   13fd4:	cmp	r9, r3
   13fd8:	movhi	r1, #36	; 0x24
   13fdc:	strbhi	r1, [r8, r3]
   13fe0:	add	r3, r4, #2
   13fe4:	cmp	r9, r3
   13fe8:	movhi	r1, #39	; 0x27
   13fec:	strbhi	r1, [r8, r3]
   13ff0:	add	r3, r4, #3
   13ff4:	cmp	r9, r3
   13ff8:	add	r4, r3, #1
   13ffc:	movhi	r2, #92	; 0x5c
   14000:	strbhi	r2, [r8, r3]
   14004:	cmp	fp, #0
   14008:	beq	14430 <putchar_unlocked@plt+0x30f4>
   1400c:	ldr	r2, [sp, #28]
   14010:	ldr	r1, [sp, #40]	; 0x28
   14014:	add	r2, r2, #1
   14018:	cmp	r2, r1
   1401c:	bcs	14054 <putchar_unlocked@plt+0x2d18>
   14020:	ldr	r1, [sp, #48]	; 0x30
   14024:	mov	r6, #48	; 0x30
   14028:	ldrb	r2, [r1, r2]
   1402c:	sub	r2, r2, #48	; 0x30
   14030:	cmp	r2, #9
   14034:	bhi	14440 <putchar_unlocked@plt+0x3104>
   14038:	cmp	r9, r4
   1403c:	add	r2, r3, #2
   14040:	strbhi	r6, [r8, r4]
   14044:	cmp	r9, r2
   14048:	add	r4, r3, #3
   1404c:	movhi	r1, #48	; 0x30
   14050:	strbhi	r1, [r8, r2]
   14054:	mov	r5, #0
   14058:	b	14438 <putchar_unlocked@plt+0x30fc>
   1405c:	ldr	r3, [sp, #148]	; 0x94
   14060:	ands	r5, r3, #1
   14064:	bne	140ec <putchar_unlocked@plt+0x2db0>
   14068:	mov	fp, #0
   1406c:	b	13e4c <putchar_unlocked@plt+0x2b10>
   14070:	cmp	r7, #0
   14074:	bne	13b84 <putchar_unlocked@plt+0x2848>
   14078:	mov	r5, #0
   1407c:	b	14068 <putchar_unlocked@plt+0x2d2c>
   14080:	cmp	sl, #2
   14084:	bne	140f8 <putchar_unlocked@plt+0x2dbc>
   14088:	cmp	r7, #0
   1408c:	bne	13b84 <putchar_unlocked@plt+0x2848>
   14090:	mov	r5, r7
   14094:	mov	fp, r7
   14098:	ldr	r3, [sp, #52]	; 0x34
   1409c:	eor	fp, fp, #1
   140a0:	tst	r3, fp
   140a4:	beq	140d0 <putchar_unlocked@plt+0x2d94>
   140a8:	cmp	r9, r4
   140ac:	movhi	r3, #39	; 0x27
   140b0:	strbhi	r3, [r8, r4]
   140b4:	add	r3, r4, #1
   140b8:	add	r4, r4, #2
   140bc:	cmp	r9, r3
   140c0:	movhi	r2, #39	; 0x27
   140c4:	strbhi	r2, [r8, r3]
   140c8:	mov	r3, #0
   140cc:	str	r3, [sp, #52]	; 0x34
   140d0:	cmp	r9, r4
   140d4:	ldr	r3, [sp, #72]	; 0x48
   140d8:	strbhi	r6, [r8, r4]
   140dc:	cmp	r5, #0
   140e0:	add	r4, r4, #1
   140e4:	moveq	r3, #0
   140e8:	str	r3, [sp, #72]	; 0x48
   140ec:	ldr	r3, [sp, #28]
   140f0:	add	r3, r3, #1
   140f4:	b	138ac <putchar_unlocked@plt+0x2570>
   140f8:	ldr	r3, [sp, #24]
   140fc:	and	r3, r3, r7
   14100:	tst	r5, r3
   14104:	moveq	r3, r6
   14108:	beq	13c98 <putchar_unlocked@plt+0x295c>
   1410c:	mov	fp, #0
   14110:	mov	r5, fp
   14114:	b	14098 <putchar_unlocked@plt+0x2d5c>
   14118:	mov	r3, #116	; 0x74
   1411c:	b	13c98 <putchar_unlocked@plt+0x295c>
   14120:	mov	r3, #110	; 0x6e
   14124:	b	13c98 <putchar_unlocked@plt+0x295c>
   14128:	mov	r3, #97	; 0x61
   1412c:	ldr	r2, [sp, #24]
   14130:	cmp	r2, #0
   14134:	beq	14078 <putchar_unlocked@plt+0x2d3c>
   14138:	mov	r6, r3
   1413c:	mov	r5, #0
   14140:	b	13ea0 <putchar_unlocked@plt+0x2b64>
   14144:	mov	r3, #98	; 0x62
   14148:	b	1412c <putchar_unlocked@plt+0x2df0>
   1414c:	mov	r3, #118	; 0x76
   14150:	b	1412c <putchar_unlocked@plt+0x2df0>
   14154:	mov	r3, #102	; 0x66
   14158:	b	1412c <putchar_unlocked@plt+0x2df0>
   1415c:	ldr	r3, [sp, #40]	; 0x28
   14160:	cmn	r3, #1
   14164:	bne	14184 <putchar_unlocked@plt+0x2e48>
   14168:	ldr	r3, [sp, #48]	; 0x30
   1416c:	ldrb	r3, [r3, #1]
   14170:	adds	r3, r3, #0
   14174:	movne	r3, #1
   14178:	cmp	r3, #0
   1417c:	bne	14078 <putchar_unlocked@plt+0x2d3c>
   14180:	b	13f64 <putchar_unlocked@plt+0x2c28>
   14184:	ldr	r3, [sp, #40]	; 0x28
   14188:	subs	r3, r3, #1
   1418c:	b	14174 <putchar_unlocked@plt+0x2e38>
   14190:	mov	r3, #0
   14194:	mov	r2, #0
   14198:	strd	r2, [sp, #96]	; 0x60
   1419c:	ldr	r3, [sp, #40]	; 0x28
   141a0:	cmn	r3, #1
   141a4:	bne	141b4 <putchar_unlocked@plt+0x2e78>
   141a8:	ldr	r0, [sp, #48]	; 0x30
   141ac:	bl	111e0 <strlen@plt>
   141b0:	str	r0, [sp, #40]	; 0x28
   141b4:	ldr	r5, [sp, #36]	; 0x24
   141b8:	mov	r3, #0
   141bc:	str	r3, [sp, #56]	; 0x38
   141c0:	ldr	r3, [sp, #28]
   141c4:	add	r0, sp, #92	; 0x5c
   141c8:	ldr	r1, [sp, #40]	; 0x28
   141cc:	ldr	r2, [sp, #56]	; 0x38
   141d0:	add	r2, r3, r2
   141d4:	ldr	r3, [sp, #48]	; 0x30
   141d8:	add	fp, r3, r2
   141dc:	sub	r2, r1, r2
   141e0:	add	r3, sp, #96	; 0x60
   141e4:	mov	r1, fp
   141e8:	bl	15b84 <putchar_unlocked@plt+0x4848>
   141ec:	subs	r2, r0, #0
   141f0:	beq	14230 <putchar_unlocked@plt+0x2ef4>
   141f4:	cmn	r2, #1
   141f8:	beq	14404 <putchar_unlocked@plt+0x30c8>
   141fc:	cmn	r2, #2
   14200:	bne	14374 <putchar_unlocked@plt+0x3038>
   14204:	ldr	r3, [sp, #28]
   14208:	ldr	r2, [sp, #56]	; 0x38
   1420c:	add	r3, r3, r2
   14210:	ldr	r2, [sp, #40]	; 0x28
   14214:	cmp	r2, r3
   14218:	bls	14404 <putchar_unlocked@plt+0x30c8>
   1421c:	ldr	r2, [sp, #56]	; 0x38
   14220:	ldr	r3, [sp, #80]	; 0x50
   14224:	ldrb	r5, [r3, r2]
   14228:	cmp	r5, #0
   1422c:	bne	14364 <putchar_unlocked@plt+0x3028>
   14230:	ldr	r3, [sp, #56]	; 0x38
   14234:	cmp	r3, #1
   14238:	bls	13c5c <putchar_unlocked@plt+0x2920>
   1423c:	ldr	r3, [sp, #28]
   14240:	mov	fp, #0
   14244:	mov	ip, #92	; 0x5c
   14248:	ldr	r2, [sp, #56]	; 0x38
   1424c:	add	r3, r3, r2
   14250:	ldr	r2, [sp, #24]
   14254:	str	r3, [sp, #36]	; 0x24
   14258:	eor	r3, r5, #1
   1425c:	and	r3, r3, r2
   14260:	mov	r2, #39	; 0x27
   14264:	uxtb	r3, r3
   14268:	cmp	r3, #0
   1426c:	beq	1440c <putchar_unlocked@plt+0x30d0>
   14270:	sub	r0, sl, #2
   14274:	cmp	r7, #0
   14278:	clz	r0, r0
   1427c:	lsr	r0, r0, #5
   14280:	bne	13b80 <putchar_unlocked@plt+0x2844>
   14284:	ldr	r1, [sp, #52]	; 0x34
   14288:	eor	r1, r1, #1
   1428c:	ands	r1, r0, r1
   14290:	beq	142c0 <putchar_unlocked@plt+0x2f84>
   14294:	cmp	r9, r4
   14298:	add	r0, r4, #1
   1429c:	str	r1, [sp, #52]	; 0x34
   142a0:	strbhi	r2, [r8, r4]
   142a4:	cmp	r9, r0
   142a8:	movhi	lr, #36	; 0x24
   142ac:	strbhi	lr, [r8, r0]
   142b0:	add	r0, r4, #2
   142b4:	add	r4, r4, #3
   142b8:	cmp	r9, r0
   142bc:	strbhi	r2, [r8, r0]
   142c0:	cmp	r9, r4
   142c4:	add	r0, r4, #1
   142c8:	mov	fp, r3
   142cc:	strbhi	ip, [r8, r4]
   142d0:	cmp	r9, r0
   142d4:	lsrhi	r1, r6, #6
   142d8:	addhi	r1, r1, #48	; 0x30
   142dc:	strbhi	r1, [r8, r0]
   142e0:	add	r0, r4, #2
   142e4:	add	r4, r4, #3
   142e8:	cmp	r9, r0
   142ec:	ubfxhi	r1, r6, #3, #3
   142f0:	and	r6, r6, #7
   142f4:	add	r6, r6, #48	; 0x30
   142f8:	addhi	r1, r1, #48	; 0x30
   142fc:	strbhi	r1, [r8, r0]
   14300:	eor	r0, fp, #1
   14304:	ldr	r1, [sp, #28]
   14308:	ldr	lr, [sp, #52]	; 0x34
   1430c:	add	r1, r1, #1
   14310:	and	r0, r0, lr
   14314:	ldr	lr, [sp, #36]	; 0x24
   14318:	cmp	r1, lr
   1431c:	bcs	14098 <putchar_unlocked@plt+0x2d5c>
   14320:	cmp	r0, #0
   14324:	beq	14348 <putchar_unlocked@plt+0x300c>
   14328:	cmp	r9, r4
   1432c:	add	r0, r4, #1
   14330:	strbhi	r2, [r8, r4]
   14334:	cmp	r9, r0
   14338:	add	r4, r4, #2
   1433c:	strbhi	r2, [r8, r0]
   14340:	mov	r0, #0
   14344:	str	r0, [sp, #52]	; 0x34
   14348:	ldr	r0, [sp, #48]	; 0x30
   1434c:	cmp	r9, r4
   14350:	str	r1, [sp, #28]
   14354:	strbhi	r6, [r8, r4]
   14358:	add	r4, r4, #1
   1435c:	ldrb	r6, [r0, r1]
   14360:	b	14268 <putchar_unlocked@plt+0x2f2c>
   14364:	ldr	r3, [sp, #56]	; 0x38
   14368:	add	r3, r3, #1
   1436c:	str	r3, [sp, #56]	; 0x38
   14370:	b	14204 <putchar_unlocked@plt+0x2ec8>
   14374:	cmp	sl, #2
   14378:	movne	r3, #0
   1437c:	andeq	r3, r7, #1
   14380:	cmp	r3, #0
   14384:	movne	r1, #1
   14388:	bne	143e4 <putchar_unlocked@plt+0x30a8>
   1438c:	ldr	r0, [sp, #92]	; 0x5c
   14390:	str	r2, [sp, #84]	; 0x54
   14394:	bl	110d8 <iswprint@plt>
   14398:	ldr	r3, [sp, #56]	; 0x38
   1439c:	cmp	r0, #0
   143a0:	add	r0, sp, #96	; 0x60
   143a4:	moveq	r5, #0
   143a8:	ldr	r2, [sp, #84]	; 0x54
   143ac:	add	r3, r3, r2
   143b0:	str	r3, [sp, #56]	; 0x38
   143b4:	bl	1106c <mbsinit@plt>
   143b8:	cmp	r0, #0
   143bc:	beq	141c0 <putchar_unlocked@plt+0x2e84>
   143c0:	b	14230 <putchar_unlocked@plt+0x2ef4>
   143c4:	ldrb	r3, [fp, #1]!
   143c8:	cmp	r3, #94	; 0x5e
   143cc:	beq	13cac <putchar_unlocked@plt+0x2970>
   143d0:	bhi	143f0 <putchar_unlocked@plt+0x30b4>
   143d4:	sub	r3, r3, #91	; 0x5b
   143d8:	cmp	r3, #1
   143dc:	bls	13cac <putchar_unlocked@plt+0x2970>
   143e0:	add	r1, r1, #1
   143e4:	cmp	r1, r2
   143e8:	bne	143c4 <putchar_unlocked@plt+0x3088>
   143ec:	b	1438c <putchar_unlocked@plt+0x3050>
   143f0:	cmp	r3, #96	; 0x60
   143f4:	beq	13cac <putchar_unlocked@plt+0x2970>
   143f8:	cmp	r3, #124	; 0x7c
   143fc:	bne	143e0 <putchar_unlocked@plt+0x30a4>
   14400:	b	13cac <putchar_unlocked@plt+0x2970>
   14404:	mov	r5, #0
   14408:	b	14230 <putchar_unlocked@plt+0x2ef4>
   1440c:	ldr	r1, [sp, #64]	; 0x40
   14410:	cmp	r1, #0
   14414:	beq	14300 <putchar_unlocked@plt+0x2fc4>
   14418:	cmp	r9, r4
   1441c:	mov	r1, #0
   14420:	strbhi	ip, [r8, r4]
   14424:	add	r4, r4, #1
   14428:	str	r1, [sp, #64]	; 0x40
   1442c:	b	14300 <putchar_unlocked@plt+0x2fc4>
   14430:	mov	r5, fp
   14434:	ldr	fp, [sp, #24]
   14438:	mov	r6, #48	; 0x30
   1443c:	b	13e4c <putchar_unlocked@plt+0x2b10>
   14440:	mov	r5, #0
   14444:	b	13e4c <putchar_unlocked@plt+0x2b10>
   14448:	mov	r6, r1
   1444c:	b	14078 <putchar_unlocked@plt+0x2d3c>
   14450:	mov	r6, r1
   14454:	b	14068 <putchar_unlocked@plt+0x2d2c>
   14458:	ldr	r2, [sp, #28]
   1445c:	ldr	r3, [sp, #40]	; 0x28
   14460:	subs	r3, r3, r2
   14464:	movne	r3, #1
   14468:	b	138d0 <putchar_unlocked@plt+0x2594>
   1446c:	ldr	r3, [sp, #60]	; 0x3c
   14470:	mov	sl, #2
   14474:	ldr	r7, [sp, #72]	; 0x48
   14478:	adds	r6, r3, #0
   1447c:	mov	r5, r3
   14480:	movne	r6, #1
   14484:	cmp	r9, #0
   14488:	movne	r6, #0
   1448c:	cmp	r6, #0
   14490:	bne	13860 <putchar_unlocked@plt+0x2524>
   14494:	ldr	r3, [sp, #68]	; 0x44
   14498:	ldr	r2, [sp, #44]	; 0x2c
   1449c:	cmp	r2, #0
   144a0:	moveq	r3, #0
   144a4:	andne	r3, r3, #1
   144a8:	cmp	r3, #0
   144ac:	movne	r3, r2
   144b0:	subne	r3, r3, #1
   144b4:	bne	144e4 <putchar_unlocked@plt+0x31a8>
   144b8:	cmp	r9, r4
   144bc:	movhi	r3, #0
   144c0:	strbhi	r3, [r8, r4]
   144c4:	mov	r0, r4
   144c8:	add	sp, sp, #108	; 0x6c
   144cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144d0:	mov	r3, r7
   144d4:	b	14498 <putchar_unlocked@plt+0x315c>
   144d8:	cmp	r9, r4
   144dc:	strbhi	r2, [r8, r4]
   144e0:	add	r4, r4, #1
   144e4:	ldrb	r2, [r3, #1]!
   144e8:	cmp	r2, #0
   144ec:	bne	144d8 <putchar_unlocked@plt+0x319c>
   144f0:	b	144b8 <putchar_unlocked@plt+0x317c>
   144f4:	muleq	r1, r8, r4
   144f8:	andeq	r6, r1, fp, lsr #9
   144fc:	andeq	r6, r1, r9, lsr #9
   14500:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   14504:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14508:	sub	sp, sp, #52	; 0x34
   1450c:	mov	r6, r0
   14510:	mov	r5, r3
   14514:	mov	r8, r1
   14518:	mov	r9, r2
   1451c:	bl	111f8 <__errno_location@plt>
   14520:	ldr	r3, [r0]
   14524:	cmn	r6, #-2147483647	; 0x80000001
   14528:	str	r0, [sp, #24]
   1452c:	ldr	r7, [pc, #368]	; 146a4 <putchar_unlocked@plt+0x3368>
   14530:	str	r3, [sp, #32]
   14534:	movne	r3, #0
   14538:	moveq	r3, #1
   1453c:	orrs	r3, r3, r6, lsr #31
   14540:	ldr	r4, [r7]
   14544:	beq	1454c <putchar_unlocked@plt+0x3210>
   14548:	bl	11318 <abort@plt>
   1454c:	ldr	r2, [r7, #4]
   14550:	cmp	r2, r6
   14554:	bgt	145c4 <putchar_unlocked@plt+0x3288>
   14558:	add	sl, r7, #8
   1455c:	mov	r3, #8
   14560:	cmp	r4, sl
   14564:	add	r1, sp, #44	; 0x2c
   14568:	str	r2, [sp, #44]	; 0x2c
   1456c:	sub	r2, r6, r2
   14570:	movne	r0, r4
   14574:	moveq	r0, #0
   14578:	add	r2, r2, #1
   1457c:	str	r3, [sp]
   14580:	mvn	r3, #-2147483648	; 0x80000000
   14584:	bl	157e4 <putchar_unlocked@plt+0x44a8>
   14588:	cmp	r4, sl
   1458c:	mov	fp, r0
   14590:	str	r0, [r7]
   14594:	ldmeq	r4, {r0, r1}
   14598:	mov	r4, fp
   1459c:	ldr	r2, [sp, #44]	; 0x2c
   145a0:	stmeq	fp, {r0, r1}
   145a4:	mov	r1, #0
   145a8:	ldr	r0, [r7, #4]
   145ac:	sub	r2, r2, r0
   145b0:	add	r0, fp, r0, lsl #3
   145b4:	lsl	r2, r2, #3
   145b8:	bl	11210 <memset@plt>
   145bc:	ldr	r3, [sp, #44]	; 0x2c
   145c0:	str	r3, [r7, #4]
   145c4:	ldr	r3, [r5, #4]
   145c8:	add	sl, r4, r6, lsl #3
   145cc:	mov	r2, r8
   145d0:	ldr	fp, [r4, r6, lsl #3]
   145d4:	ldr	r7, [sl, #4]
   145d8:	orr	r3, r3, #1
   145dc:	str	r3, [sp, #28]
   145e0:	add	r3, r5, #8
   145e4:	mov	r1, fp
   145e8:	str	r3, [sp, #36]	; 0x24
   145ec:	mov	r0, r7
   145f0:	ldr	r3, [r5, #44]	; 0x2c
   145f4:	str	r3, [sp, #16]
   145f8:	ldr	r3, [r5, #40]	; 0x28
   145fc:	str	r3, [sp, #12]
   14600:	add	r3, r5, #8
   14604:	str	r3, [sp, #8]
   14608:	ldr	r3, [sp, #28]
   1460c:	str	r3, [sp, #4]
   14610:	ldr	r3, [r5]
   14614:	str	r3, [sp]
   14618:	mov	r3, r9
   1461c:	bl	13814 <putchar_unlocked@plt+0x24d8>
   14620:	cmp	fp, r0
   14624:	bhi	1468c <putchar_unlocked@plt+0x3350>
   14628:	ldr	r3, [pc, #120]	; 146a8 <putchar_unlocked@plt+0x336c>
   1462c:	add	fp, r0, #1
   14630:	str	fp, [r4, r6, lsl #3]
   14634:	cmp	r7, r3
   14638:	beq	14644 <putchar_unlocked@plt+0x3308>
   1463c:	mov	r0, r7
   14640:	bl	15ad8 <putchar_unlocked@plt+0x479c>
   14644:	mov	r0, fp
   14648:	bl	156d4 <putchar_unlocked@plt+0x4398>
   1464c:	ldr	r3, [r5, #44]	; 0x2c
   14650:	mov	r2, r8
   14654:	mov	r1, fp
   14658:	str	r0, [sl, #4]
   1465c:	mov	r7, r0
   14660:	str	r3, [sp, #16]
   14664:	ldr	r3, [r5, #40]	; 0x28
   14668:	str	r3, [sp, #12]
   1466c:	add	r3, r5, #8
   14670:	str	r3, [sp, #8]
   14674:	ldr	r3, [sp, #28]
   14678:	str	r3, [sp, #4]
   1467c:	ldr	r3, [r5]
   14680:	str	r3, [sp]
   14684:	mov	r3, r9
   14688:	bl	13814 <putchar_unlocked@plt+0x24d8>
   1468c:	ldr	r3, [sp, #24]
   14690:	mov	r0, r7
   14694:	ldr	r2, [sp, #32]
   14698:	str	r2, [r3]
   1469c:	add	sp, sp, #52	; 0x34
   146a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146a4:	andeq	r7, r2, r0, asr #2
   146a8:			; <UNDEFINED> instruction: 0x000271b0
   146ac:	push	{r4, r5, r6, lr}
   146b0:	mov	r5, r0
   146b4:	bl	111f8 <__errno_location@plt>
   146b8:	mov	r4, r0
   146bc:	cmp	r5, #0
   146c0:	ldr	r0, [pc, #20]	; 146dc <putchar_unlocked@plt+0x33a0>
   146c4:	mov	r1, #48	; 0x30
   146c8:	movne	r0, r5
   146cc:	ldr	r6, [r4]
   146d0:	bl	158d4 <putchar_unlocked@plt+0x4598>
   146d4:	str	r6, [r4]
   146d8:	pop	{r4, r5, r6, pc}
   146dc:			; <UNDEFINED> instruction: 0x000272b0
   146e0:	ldr	r3, [pc, #12]	; 146f4 <putchar_unlocked@plt+0x33b8>
   146e4:	cmp	r0, #0
   146e8:	moveq	r0, r3
   146ec:	ldr	r0, [r0]
   146f0:	bx	lr
   146f4:			; <UNDEFINED> instruction: 0x000272b0
   146f8:	ldr	r3, [pc, #12]	; 1470c <putchar_unlocked@plt+0x33d0>
   146fc:	cmp	r0, #0
   14700:	moveq	r0, r3
   14704:	str	r1, [r0]
   14708:	bx	lr
   1470c:			; <UNDEFINED> instruction: 0x000272b0
   14710:	ldr	r3, [pc, #52]	; 1474c <putchar_unlocked@plt+0x3410>
   14714:	cmp	r0, #0
   14718:	push	{lr}		; (str lr, [sp, #-4]!)
   1471c:	lsr	lr, r1, #5
   14720:	and	r1, r1, #31
   14724:	moveq	r0, r3
   14728:	add	r3, r0, #8
   1472c:	ldr	ip, [r3, lr, lsl #2]
   14730:	lsr	r0, ip, r1
   14734:	eor	r2, r2, r0
   14738:	and	r0, r0, #1
   1473c:	and	r2, r2, #1
   14740:	eor	r1, ip, r2, lsl r1
   14744:	str	r1, [r3, lr, lsl #2]
   14748:	pop	{pc}		; (ldr pc, [sp], #4)
   1474c:			; <UNDEFINED> instruction: 0x000272b0
   14750:	ldr	r3, [pc, #16]	; 14768 <putchar_unlocked@plt+0x342c>
   14754:	cmp	r0, #0
   14758:	movne	r3, r0
   1475c:	ldr	r0, [r3, #4]
   14760:	str	r1, [r3, #4]
   14764:	bx	lr
   14768:			; <UNDEFINED> instruction: 0x000272b0
   1476c:	ldr	r3, [pc, #44]	; 147a0 <putchar_unlocked@plt+0x3464>
   14770:	cmp	r0, #0
   14774:	moveq	r0, r3
   14778:	mov	r3, #10
   1477c:	cmp	r2, #0
   14780:	cmpne	r1, #0
   14784:	str	r3, [r0]
   14788:	bne	14794 <putchar_unlocked@plt+0x3458>
   1478c:	push	{r4, lr}
   14790:	bl	11318 <abort@plt>
   14794:	str	r1, [r0, #40]	; 0x28
   14798:	str	r2, [r0, #44]	; 0x2c
   1479c:	bx	lr
   147a0:			; <UNDEFINED> instruction: 0x000272b0
   147a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   147a8:	sub	sp, sp, #24
   147ac:	mov	sl, r3
   147b0:	mov	r7, r0
   147b4:	mov	r8, r1
   147b8:	mov	r9, r2
   147bc:	ldr	r4, [sp, #56]	; 0x38
   147c0:	ldr	r3, [pc, #88]	; 14820 <putchar_unlocked@plt+0x34e4>
   147c4:	cmp	r4, #0
   147c8:	moveq	r4, r3
   147cc:	bl	111f8 <__errno_location@plt>
   147d0:	ldr	r3, [r4, #44]	; 0x2c
   147d4:	mov	r5, r0
   147d8:	mov	r2, r9
   147dc:	mov	r1, r8
   147e0:	mov	r0, r7
   147e4:	ldr	r6, [r5]
   147e8:	str	r3, [sp, #16]
   147ec:	ldr	r3, [r4, #40]	; 0x28
   147f0:	str	r3, [sp, #12]
   147f4:	add	r3, r4, #8
   147f8:	str	r3, [sp, #8]
   147fc:	ldr	r3, [r4, #4]
   14800:	str	r3, [sp, #4]
   14804:	ldr	r3, [r4]
   14808:	str	r3, [sp]
   1480c:	mov	r3, sl
   14810:	bl	13814 <putchar_unlocked@plt+0x24d8>
   14814:	str	r6, [r5]
   14818:	add	sp, sp, #24
   1481c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14820:			; <UNDEFINED> instruction: 0x000272b0
   14824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14828:	cmp	r3, #0
   1482c:	sub	sp, sp, #44	; 0x2c
   14830:	mov	r6, r2
   14834:	mov	sl, r1
   14838:	mov	r9, r0
   1483c:	ldr	r4, [pc, #176]	; 148f4 <putchar_unlocked@plt+0x35b8>
   14840:	movne	r4, r3
   14844:	bl	111f8 <__errno_location@plt>
   14848:	ldr	r3, [r0]
   1484c:	mov	r1, #0
   14850:	mov	r2, r9
   14854:	mov	r8, r0
   14858:	mov	r0, r1
   1485c:	ldr	r5, [r4, #4]
   14860:	add	fp, r4, #8
   14864:	str	r3, [sp, #28]
   14868:	ldr	r3, [r4, #44]	; 0x2c
   1486c:	cmp	r6, #0
   14870:	orreq	r5, r5, #1
   14874:	str	r3, [sp, #16]
   14878:	ldr	r3, [r4, #40]	; 0x28
   1487c:	stmib	sp, {r5, fp}
   14880:	str	r3, [sp, #12]
   14884:	ldr	r3, [r4]
   14888:	str	r3, [sp]
   1488c:	mov	r3, sl
   14890:	bl	13814 <putchar_unlocked@plt+0x24d8>
   14894:	add	r1, r0, #1
   14898:	mov	r7, r0
   1489c:	mov	r0, r1
   148a0:	str	r1, [sp, #36]	; 0x24
   148a4:	bl	156d4 <putchar_unlocked@plt+0x4398>
   148a8:	ldr	r3, [r4, #44]	; 0x2c
   148ac:	mov	r2, r9
   148b0:	ldr	r1, [sp, #36]	; 0x24
   148b4:	str	r3, [sp, #16]
   148b8:	ldr	r3, [r4, #40]	; 0x28
   148bc:	stmib	sp, {r5, fp}
   148c0:	str	r0, [sp, #32]
   148c4:	str	r3, [sp, #12]
   148c8:	ldr	r3, [r4]
   148cc:	str	r3, [sp]
   148d0:	mov	r3, sl
   148d4:	bl	13814 <putchar_unlocked@plt+0x24d8>
   148d8:	ldr	r3, [sp, #28]
   148dc:	cmp	r6, #0
   148e0:	ldr	r0, [sp, #32]
   148e4:	str	r3, [r8]
   148e8:	strne	r7, [r6]
   148ec:	add	sp, sp, #44	; 0x2c
   148f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148f4:			; <UNDEFINED> instruction: 0x000272b0
   148f8:	mov	r3, r2
   148fc:	mov	r2, #0
   14900:	b	14824 <putchar_unlocked@plt+0x34e8>
   14904:	push	{r4, r5, r6, r7, r8, lr}
   14908:	mov	r6, #1
   1490c:	ldr	r4, [pc, #100]	; 14978 <putchar_unlocked@plt+0x363c>
   14910:	ldr	r5, [r4]
   14914:	add	r7, r5, #4
   14918:	ldr	r3, [r4, #4]
   1491c:	cmp	r3, r6
   14920:	bgt	14968 <putchar_unlocked@plt+0x362c>
   14924:	ldr	r6, [pc, #80]	; 1497c <putchar_unlocked@plt+0x3640>
   14928:	ldr	r0, [r5, #4]
   1492c:	cmp	r0, r6
   14930:	beq	14944 <putchar_unlocked@plt+0x3608>
   14934:	bl	15ad8 <putchar_unlocked@plt+0x479c>
   14938:	mov	r3, #256	; 0x100
   1493c:	str	r3, [r4, #8]
   14940:	str	r6, [r4, #12]
   14944:	ldr	r6, [pc, #52]	; 14980 <putchar_unlocked@plt+0x3644>
   14948:	cmp	r5, r6
   1494c:	beq	1495c <putchar_unlocked@plt+0x3620>
   14950:	mov	r0, r5
   14954:	bl	15ad8 <putchar_unlocked@plt+0x479c>
   14958:	str	r6, [r4]
   1495c:	mov	r3, #1
   14960:	str	r3, [r4, #4]
   14964:	pop	{r4, r5, r6, r7, r8, pc}
   14968:	ldr	r0, [r7, r6, lsl #3]
   1496c:	add	r6, r6, #1
   14970:	bl	15ad8 <putchar_unlocked@plt+0x479c>
   14974:	b	14918 <putchar_unlocked@plt+0x35dc>
   14978:	andeq	r7, r2, r0, asr #2
   1497c:			; <UNDEFINED> instruction: 0x000271b0
   14980:	andeq	r7, r2, r8, asr #2
   14984:	ldr	r3, [pc, #4]	; 14990 <putchar_unlocked@plt+0x3654>
   14988:	mvn	r2, #0
   1498c:	b	14504 <putchar_unlocked@plt+0x31c8>
   14990:			; <UNDEFINED> instruction: 0x000272b0
   14994:	ldr	r3, [pc]	; 1499c <putchar_unlocked@plt+0x3660>
   14998:	b	14504 <putchar_unlocked@plt+0x31c8>
   1499c:			; <UNDEFINED> instruction: 0x000272b0
   149a0:	mov	r1, r0
   149a4:	mov	r0, #0
   149a8:	b	14984 <putchar_unlocked@plt+0x3648>
   149ac:	mov	r2, r1
   149b0:	mov	r1, r0
   149b4:	mov	r0, #0
   149b8:	b	14994 <putchar_unlocked@plt+0x3658>
   149bc:	push	{r4, r5, lr}
   149c0:	sub	sp, sp, #52	; 0x34
   149c4:	mov	r5, r2
   149c8:	mov	r4, r0
   149cc:	mov	r0, sp
   149d0:	bl	136b8 <putchar_unlocked@plt+0x237c>
   149d4:	mov	r3, sp
   149d8:	mvn	r2, #0
   149dc:	mov	r1, r5
   149e0:	mov	r0, r4
   149e4:	bl	14504 <putchar_unlocked@plt+0x31c8>
   149e8:	add	sp, sp, #52	; 0x34
   149ec:	pop	{r4, r5, pc}
   149f0:	push	{r4, r5, r6, lr}
   149f4:	sub	sp, sp, #48	; 0x30
   149f8:	mov	r5, r2
   149fc:	mov	r6, r3
   14a00:	mov	r4, r0
   14a04:	mov	r0, sp
   14a08:	bl	136b8 <putchar_unlocked@plt+0x237c>
   14a0c:	mov	r3, sp
   14a10:	mov	r2, r6
   14a14:	mov	r1, r5
   14a18:	mov	r0, r4
   14a1c:	bl	14504 <putchar_unlocked@plt+0x31c8>
   14a20:	add	sp, sp, #48	; 0x30
   14a24:	pop	{r4, r5, r6, pc}
   14a28:	mov	r2, r1
   14a2c:	mov	r1, r0
   14a30:	mov	r0, #0
   14a34:	b	149bc <putchar_unlocked@plt+0x3680>
   14a38:	mov	r3, r2
   14a3c:	mov	r2, r1
   14a40:	mov	r1, r0
   14a44:	mov	r0, #0
   14a48:	b	149f0 <putchar_unlocked@plt+0x36b4>
   14a4c:	push	{r4, r5, r6, lr}
   14a50:	mov	r4, r0
   14a54:	mov	r5, r1
   14a58:	mov	r6, r2
   14a5c:	sub	sp, sp, #48	; 0x30
   14a60:	mov	ip, sp
   14a64:	ldr	lr, [pc, #64]	; 14aac <putchar_unlocked@plt+0x3770>
   14a68:	ldm	lr!, {r0, r1, r2, r3}
   14a6c:	stmia	ip!, {r0, r1, r2, r3}
   14a70:	ldm	lr!, {r0, r1, r2, r3}
   14a74:	stmia	ip!, {r0, r1, r2, r3}
   14a78:	ldm	lr, {r0, r1, r2, r3}
   14a7c:	stm	ip, {r0, r1, r2, r3}
   14a80:	mov	r1, r6
   14a84:	mov	r2, #1
   14a88:	mov	r0, sp
   14a8c:	bl	14710 <putchar_unlocked@plt+0x33d4>
   14a90:	mov	r3, sp
   14a94:	mov	r2, r5
   14a98:	mov	r1, r4
   14a9c:	mov	r0, #0
   14aa0:	bl	14504 <putchar_unlocked@plt+0x31c8>
   14aa4:	add	sp, sp, #48	; 0x30
   14aa8:	pop	{r4, r5, r6, pc}
   14aac:			; <UNDEFINED> instruction: 0x000272b0
   14ab0:	mov	r2, r1
   14ab4:	mvn	r1, #0
   14ab8:	b	14a4c <putchar_unlocked@plt+0x3710>
   14abc:	mov	r1, #58	; 0x3a
   14ac0:	b	14ab0 <putchar_unlocked@plt+0x3774>
   14ac4:	mov	r2, #58	; 0x3a
   14ac8:	b	14a4c <putchar_unlocked@plt+0x3710>
   14acc:	push	{r4, r5, lr}
   14ad0:	sub	sp, sp, #100	; 0x64
   14ad4:	mov	r4, r0
   14ad8:	mov	r0, sp
   14adc:	mov	r5, r2
   14ae0:	bl	136b8 <putchar_unlocked@plt+0x237c>
   14ae4:	mov	ip, sp
   14ae8:	add	lr, sp, #48	; 0x30
   14aec:	ldm	ip!, {r0, r1, r2, r3}
   14af0:	stmia	lr!, {r0, r1, r2, r3}
   14af4:	ldm	ip!, {r0, r1, r2, r3}
   14af8:	stmia	lr!, {r0, r1, r2, r3}
   14afc:	ldm	ip, {r0, r1, r2, r3}
   14b00:	stm	lr, {r0, r1, r2, r3}
   14b04:	mov	r2, #1
   14b08:	mov	r1, #58	; 0x3a
   14b0c:	add	r0, sp, #48	; 0x30
   14b10:	bl	14710 <putchar_unlocked@plt+0x33d4>
   14b14:	add	r3, sp, #48	; 0x30
   14b18:	mvn	r2, #0
   14b1c:	mov	r1, r5
   14b20:	mov	r0, r4
   14b24:	bl	14504 <putchar_unlocked@plt+0x31c8>
   14b28:	add	sp, sp, #100	; 0x64
   14b2c:	pop	{r4, r5, pc}
   14b30:	push	{r4, r5, r6, r7, lr}
   14b34:	mov	r4, r0
   14b38:	mov	r6, r1
   14b3c:	mov	r7, r2
   14b40:	mov	r5, r3
   14b44:	sub	sp, sp, #52	; 0x34
   14b48:	ldr	lr, [pc, #68]	; 14b94 <putchar_unlocked@plt+0x3858>
   14b4c:	mov	ip, sp
   14b50:	ldm	lr!, {r0, r1, r2, r3}
   14b54:	stmia	ip!, {r0, r1, r2, r3}
   14b58:	ldm	lr!, {r0, r1, r2, r3}
   14b5c:	stmia	ip!, {r0, r1, r2, r3}
   14b60:	ldm	lr, {r0, r1, r2, r3}
   14b64:	stm	ip, {r0, r1, r2, r3}
   14b68:	mov	r2, r7
   14b6c:	mov	r1, r6
   14b70:	mov	r0, sp
   14b74:	bl	1476c <putchar_unlocked@plt+0x3430>
   14b78:	ldr	r2, [sp, #72]	; 0x48
   14b7c:	mov	r3, sp
   14b80:	mov	r1, r5
   14b84:	mov	r0, r4
   14b88:	bl	14504 <putchar_unlocked@plt+0x31c8>
   14b8c:	add	sp, sp, #52	; 0x34
   14b90:	pop	{r4, r5, r6, r7, pc}
   14b94:			; <UNDEFINED> instruction: 0x000272b0
   14b98:	mvn	ip, #0
   14b9c:	push	{r0, r1, r2, lr}
   14ba0:	str	ip, [sp]
   14ba4:	bl	14b30 <putchar_unlocked@plt+0x37f4>
   14ba8:	add	sp, sp, #12
   14bac:	pop	{pc}		; (ldr pc, [sp], #4)
   14bb0:	mov	r3, r2
   14bb4:	mov	r2, r1
   14bb8:	mov	r1, r0
   14bbc:	mov	r0, #0
   14bc0:	b	14b98 <putchar_unlocked@plt+0x385c>
   14bc4:	push	{r0, r1, r2, lr}
   14bc8:	str	r3, [sp]
   14bcc:	mov	r3, r2
   14bd0:	mov	r2, r1
   14bd4:	mov	r1, r0
   14bd8:	mov	r0, #0
   14bdc:	bl	14b30 <putchar_unlocked@plt+0x37f4>
   14be0:	add	sp, sp, #12
   14be4:	pop	{pc}		; (ldr pc, [sp], #4)
   14be8:	ldr	r3, [pc]	; 14bf0 <putchar_unlocked@plt+0x38b4>
   14bec:	b	14504 <putchar_unlocked@plt+0x31c8>
   14bf0:	andeq	r7, r2, r0, asr r1
   14bf4:	mov	r2, r1
   14bf8:	mov	r1, r0
   14bfc:	mov	r0, #0
   14c00:	b	14be8 <putchar_unlocked@plt+0x38ac>
   14c04:	mvn	r2, #0
   14c08:	b	14be8 <putchar_unlocked@plt+0x38ac>
   14c0c:	mov	r1, r0
   14c10:	mov	r0, #0
   14c14:	b	14c04 <putchar_unlocked@plt+0x38c8>
   14c18:	push	{r4, r5, r6, lr}
   14c1c:	mov	r5, r0
   14c20:	mov	r0, #33	; 0x21
   14c24:	bl	156ac <putchar_unlocked@plt+0x4370>
   14c28:	mov	r4, r0
   14c2c:	add	r1, r5, #44	; 0x2c
   14c30:	mov	r2, #32
   14c34:	mov	r5, #0
   14c38:	bl	1121c <strncpy@plt>
   14c3c:	mov	r0, r4
   14c40:	strb	r5, [r4, #32]
   14c44:	bl	111e0 <strlen@plt>
   14c48:	add	r0, r4, r0
   14c4c:	cmp	r0, r4
   14c50:	bls	14c60 <putchar_unlocked@plt+0x3924>
   14c54:	ldrb	r3, [r0, #-1]
   14c58:	cmp	r3, #32
   14c5c:	beq	14c68 <putchar_unlocked@plt+0x392c>
   14c60:	mov	r0, r4
   14c64:	pop	{r4, r5, r6, pc}
   14c68:	strb	r5, [r0, #-1]!
   14c6c:	b	14c4c <putchar_unlocked@plt+0x3910>
   14c70:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   14c74:	mov	r4, #0
   14c78:	eor	r7, r3, #2
   14c7c:	mov	sl, r1
   14c80:	mov	r9, r2
   14c84:	ubfx	r7, r7, #1, #1
   14c88:	mov	r8, r3
   14c8c:	mov	r6, r4
   14c90:	str	r4, [sp, #12]
   14c94:	bl	1103c <utmpxname@plt>
   14c98:	bl	110a8 <setutxent@plt>
   14c9c:	bl	11324 <getutxent@plt>
   14ca0:	subs	r5, r0, #0
   14ca4:	bne	14cc0 <putchar_unlocked@plt+0x3984>
   14ca8:	bl	1127c <endutxent@plt>
   14cac:	mov	r0, r5
   14cb0:	str	r4, [sl]
   14cb4:	str	r6, [r9]
   14cb8:	add	sp, sp, #16
   14cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14cc0:	ldrb	r3, [r5, #44]	; 0x2c
   14cc4:	cmp	r3, #0
   14cc8:	ldrshne	r3, [r5]
   14ccc:	subne	r3, r3, #7
   14cd0:	clzne	r3, r3
   14cd4:	lsrne	r3, r3, #5
   14cd8:	orrs	r2, r7, r3
   14cdc:	beq	14c9c <putchar_unlocked@plt+0x3960>
   14ce0:	tst	r8, r3
   14ce4:	beq	14d14 <putchar_unlocked@plt+0x39d8>
   14ce8:	ldr	r0, [r5, #4]
   14cec:	cmp	r0, #0
   14cf0:	ble	14d14 <putchar_unlocked@plt+0x39d8>
   14cf4:	mov	r1, #0
   14cf8:	bl	111bc <kill@plt>
   14cfc:	cmp	r0, #0
   14d00:	bge	14d14 <putchar_unlocked@plt+0x39d8>
   14d04:	bl	111f8 <__errno_location@plt>
   14d08:	ldr	r3, [r0]
   14d0c:	cmp	r3, #3
   14d10:	beq	14c9c <putchar_unlocked@plt+0x3960>
   14d14:	ldr	r3, [sp, #12]
   14d18:	cmp	r3, r4
   14d1c:	bne	14d40 <putchar_unlocked@plt+0x3a04>
   14d20:	mov	r3, #384	; 0x180
   14d24:	mov	r0, r6
   14d28:	mov	r2, #1
   14d2c:	add	r1, sp, #12
   14d30:	str	r3, [sp]
   14d34:	mvn	r3, #0
   14d38:	bl	157e4 <putchar_unlocked@plt+0x44a8>
   14d3c:	mov	r6, r0
   14d40:	mov	r2, #384	; 0x180
   14d44:	mov	r1, r5
   14d48:	mla	r0, r2, r4, r6
   14d4c:	add	r4, r4, #1
   14d50:	bl	11060 <memcpy@plt>
   14d54:	b	14c9c <putchar_unlocked@plt+0x3960>
   14d58:	subs	r1, r0, #0
   14d5c:	beq	14d6c <putchar_unlocked@plt+0x3a30>
   14d60:	mov	r2, #1
   14d64:	ldr	r0, [pc, #8]	; 14d74 <putchar_unlocked@plt+0x3a38>
   14d68:	b	111ec <setenv@plt>
   14d6c:	ldr	r0, [pc]	; 14d74 <putchar_unlocked@plt+0x3a38>
   14d70:	b	112f4 <unsetenv@plt>
   14d74:	strdeq	r6, [r1], -fp
   14d78:	push	{r4, r5, r6, r7, r8, lr}
   14d7c:	subs	r7, r0, #0
   14d80:	moveq	r5, r7
   14d84:	beq	14d90 <putchar_unlocked@plt+0x3a54>
   14d88:	bl	111e0 <strlen@plt>
   14d8c:	add	r5, r0, #1
   14d90:	cmp	r5, #58	; 0x3a
   14d94:	movcs	r0, r5
   14d98:	movcc	r0, #58	; 0x3a
   14d9c:	add	r0, r0, #9
   14da0:	bic	r0, r0, #3
   14da4:	bl	159f8 <putchar_unlocked@plt+0x46bc>
   14da8:	subs	r4, r0, #0
   14dac:	beq	14de8 <putchar_unlocked@plt+0x3aac>
   14db0:	mov	r6, #0
   14db4:	cmp	r7, r6
   14db8:	movne	r3, #1
   14dbc:	moveq	r3, r6
   14dc0:	str	r6, [r4]
   14dc4:	strb	r3, [r4, #4]
   14dc8:	strb	r6, [r4, #5]
   14dcc:	beq	14de8 <putchar_unlocked@plt+0x3aac>
   14dd0:	add	r3, r4, #5
   14dd4:	mov	r2, r5
   14dd8:	mov	r1, r7
   14ddc:	mov	r0, r3
   14de0:	bl	11060 <memcpy@plt>
   14de4:	strb	r6, [r0, r5]
   14de8:	mov	r0, r4
   14dec:	pop	{r4, r5, r6, r7, r8, pc}
   14df0:	push	{r4, r5, r6, r7, r8, lr}
   14df4:	ldr	r5, [r1, #40]	; 0x28
   14df8:	cmp	r5, #0
   14dfc:	beq	14ef0 <putchar_unlocked@plt+0x3bb4>
   14e00:	cmp	r1, r5
   14e04:	mov	r6, r0
   14e08:	mov	r7, r1
   14e0c:	bhi	14e1c <putchar_unlocked@plt+0x3ae0>
   14e10:	add	r3, r1, #44	; 0x2c
   14e14:	cmp	r5, r3
   14e18:	bcc	14ef0 <putchar_unlocked@plt+0x3bb4>
   14e1c:	ldrb	r3, [r5]
   14e20:	cmp	r3, #0
   14e24:	addne	r4, r6, #5
   14e28:	bne	14e68 <putchar_unlocked@plt+0x3b2c>
   14e2c:	ldr	r4, [pc, #196]	; 14ef8 <putchar_unlocked@plt+0x3bbc>
   14e30:	b	14eec <putchar_unlocked@plt+0x3bb0>
   14e34:	ldrb	r3, [r6, #4]
   14e38:	cmp	r3, #0
   14e3c:	beq	14e94 <putchar_unlocked@plt+0x3b58>
   14e40:	mov	r0, r4
   14e44:	bl	111e0 <strlen@plt>
   14e48:	add	r0, r0, #1
   14e4c:	ldrb	r3, [r4, r0]!
   14e50:	cmp	r3, #0
   14e54:	bne	14e68 <putchar_unlocked@plt+0x3b2c>
   14e58:	ldr	r3, [r6]
   14e5c:	cmp	r3, #0
   14e60:	addne	r4, r3, #5
   14e64:	movne	r6, r3
   14e68:	mov	r1, r5
   14e6c:	mov	r0, r4
   14e70:	bl	11018 <strcmp@plt>
   14e74:	cmp	r0, #0
   14e78:	beq	14eec <putchar_unlocked@plt+0x3bb0>
   14e7c:	ldrb	r3, [r4]
   14e80:	cmp	r3, #0
   14e84:	bne	14e40 <putchar_unlocked@plt+0x3b04>
   14e88:	add	r3, r6, #5
   14e8c:	cmp	r4, r3
   14e90:	beq	14e34 <putchar_unlocked@plt+0x3af8>
   14e94:	mov	r0, r5
   14e98:	bl	111e0 <strlen@plt>
   14e9c:	add	r3, r6, #64	; 0x40
   14ea0:	add	r8, r0, #1
   14ea4:	sub	r3, r3, r4
   14ea8:	cmp	r3, r8
   14eac:	bgt	14ed4 <putchar_unlocked@plt+0x3b98>
   14eb0:	mov	r0, r5
   14eb4:	bl	14d78 <putchar_unlocked@plt+0x3a3c>
   14eb8:	cmp	r0, #0
   14ebc:	str	r0, [r6]
   14ec0:	movne	r3, #0
   14ec4:	addne	r4, r0, #5
   14ec8:	strbne	r3, [r0, #4]
   14ecc:	bne	14eec <putchar_unlocked@plt+0x3bb0>
   14ed0:	pop	{r4, r5, r6, r7, r8, pc}
   14ed4:	mov	r2, r8
   14ed8:	mov	r1, r5
   14edc:	mov	r0, r4
   14ee0:	bl	11060 <memcpy@plt>
   14ee4:	mov	r3, #0
   14ee8:	strb	r3, [r4, r8]
   14eec:	str	r4, [r7, #40]	; 0x28
   14ef0:	mov	r0, #1
   14ef4:	pop	{r4, r5, r6, r7, r8, pc}
   14ef8:	andeq	r6, r1, r0, ror #2
   14efc:	cmp	r0, #1
   14f00:	bxeq	lr
   14f04:	cmp	r0, #0
   14f08:	bxeq	lr
   14f0c:	push	{r4, lr}
   14f10:	ldr	r4, [r0]
   14f14:	bl	15ad8 <putchar_unlocked@plt+0x479c>
   14f18:	cmp	r4, #0
   14f1c:	mov	r0, r4
   14f20:	bne	14f10 <putchar_unlocked@plt+0x3bd4>
   14f24:	pop	{r4, pc}
   14f28:	push	{r4, r5, r6, lr}
   14f2c:	mov	r6, r0
   14f30:	ldr	r0, [pc, #148]	; 14fcc <putchar_unlocked@plt+0x3c90>
   14f34:	bl	11144 <getenv@plt>
   14f38:	subs	r5, r0, #0
   14f3c:	ldrb	r4, [r6, #4]
   14f40:	beq	14fbc <putchar_unlocked@plt+0x3c80>
   14f44:	cmp	r4, #0
   14f48:	beq	14f60 <putchar_unlocked@plt+0x3c24>
   14f4c:	mov	r1, r5
   14f50:	add	r0, r6, #5
   14f54:	bl	11018 <strcmp@plt>
   14f58:	clz	r4, r0
   14f5c:	lsr	r4, r4, #5
   14f60:	cmp	r4, #0
   14f64:	movne	r5, #1
   14f68:	bne	14fb4 <putchar_unlocked@plt+0x3c78>
   14f6c:	mov	r0, r5
   14f70:	bl	14d78 <putchar_unlocked@plt+0x3a3c>
   14f74:	subs	r5, r0, #0
   14f78:	beq	14fb4 <putchar_unlocked@plt+0x3c78>
   14f7c:	ldrb	r3, [r6, #4]
   14f80:	cmp	r3, #0
   14f84:	addne	r0, r6, #5
   14f88:	moveq	r0, r4
   14f8c:	bl	14d58 <putchar_unlocked@plt+0x3a1c>
   14f90:	cmp	r0, #0
   14f94:	beq	14fc4 <putchar_unlocked@plt+0x3c88>
   14f98:	bl	111f8 <__errno_location@plt>
   14f9c:	mov	r4, r0
   14fa0:	mov	r0, r5
   14fa4:	ldr	r6, [r4]
   14fa8:	mov	r5, #0
   14fac:	bl	14efc <putchar_unlocked@plt+0x3bc0>
   14fb0:	str	r6, [r4]
   14fb4:	mov	r0, r5
   14fb8:	pop	{r4, r5, r6, pc}
   14fbc:	clz	r4, r4
   14fc0:	b	14f5c <putchar_unlocked@plt+0x3c20>
   14fc4:	bl	110e4 <tzset@plt>
   14fc8:	b	14fb4 <putchar_unlocked@plt+0x3c78>
   14fcc:	strdeq	r6, [r1], -fp
   14fd0:	push	{r4, r5, r6, r7, r8, lr}
   14fd4:	mov	r5, r0
   14fd8:	bl	111f8 <__errno_location@plt>
   14fdc:	mov	r4, r0
   14fe0:	ldr	r7, [r0]
   14fe4:	ldrb	r0, [r5, #4]
   14fe8:	cmp	r0, #0
   14fec:	addne	r0, r5, #5
   14ff0:	bl	14d58 <putchar_unlocked@plt+0x3a1c>
   14ff4:	cmp	r0, #0
   14ff8:	movne	r6, #0
   14ffc:	ldrne	r7, [r4]
   15000:	bne	1500c <putchar_unlocked@plt+0x3cd0>
   15004:	mov	r6, #1
   15008:	bl	110e4 <tzset@plt>
   1500c:	mov	r0, r5
   15010:	bl	14efc <putchar_unlocked@plt+0x3bc0>
   15014:	mov	r0, r6
   15018:	str	r7, [r4]
   1501c:	pop	{r4, r5, r6, r7, r8, pc}
   15020:	push	{r4, r5, r6, r7, r8, lr}
   15024:	subs	r7, r0, #0
   15028:	mov	r5, r1
   1502c:	mov	r4, r2
   15030:	bne	15044 <putchar_unlocked@plt+0x3d08>
   15034:	mov	r0, r5
   15038:	mov	r1, r2
   1503c:	pop	{r4, r5, r6, r7, r8, lr}
   15040:	b	1100c <gmtime_r@plt>
   15044:	bl	14f28 <putchar_unlocked@plt+0x3bec>
   15048:	subs	r6, r0, #0
   1504c:	beq	15094 <putchar_unlocked@plt+0x3d58>
   15050:	mov	r0, r5
   15054:	mov	r1, r4
   15058:	bl	110c0 <localtime_r@plt>
   1505c:	subs	r5, r0, #0
   15060:	beq	150a0 <putchar_unlocked@plt+0x3d64>
   15064:	mov	r1, r4
   15068:	mov	r0, r7
   1506c:	bl	14df0 <putchar_unlocked@plt+0x3ab4>
   15070:	cmp	r6, #1
   15074:	mov	r5, r0
   15078:	beq	1508c <putchar_unlocked@plt+0x3d50>
   1507c:	mov	r0, r6
   15080:	bl	14fd0 <putchar_unlocked@plt+0x3c94>
   15084:	cmp	r0, #0
   15088:	beq	15094 <putchar_unlocked@plt+0x3d58>
   1508c:	cmp	r5, #0
   15090:	bne	15098 <putchar_unlocked@plt+0x3d5c>
   15094:	mov	r4, #0
   15098:	mov	r0, r4
   1509c:	pop	{r4, r5, r6, r7, r8, pc}
   150a0:	cmp	r6, #1
   150a4:	bne	1507c <putchar_unlocked@plt+0x3d40>
   150a8:	b	15094 <putchar_unlocked@plt+0x3d58>
   150ac:	push	{r4, r5, r6, r7, lr}
   150b0:	subs	r7, r0, #0
   150b4:	sub	sp, sp, #52	; 0x34
   150b8:	mov	r4, r1
   150bc:	bne	150d8 <putchar_unlocked@plt+0x3d9c>
   150c0:	mov	r0, r1
   150c4:	bl	112c4 <timegm@plt>
   150c8:	mov	r5, r0
   150cc:	mov	r0, r5
   150d0:	add	sp, sp, #52	; 0x34
   150d4:	pop	{r4, r5, r6, r7, pc}
   150d8:	bl	14f28 <putchar_unlocked@plt+0x3bec>
   150dc:	subs	r6, r0, #0
   150e0:	beq	1519c <putchar_unlocked@plt+0x3e60>
   150e4:	ldr	r3, [r4]
   150e8:	add	r0, sp, #4
   150ec:	str	r3, [sp, #4]
   150f0:	ldr	r3, [r4, #4]
   150f4:	str	r3, [sp, #8]
   150f8:	ldr	r3, [r4, #8]
   150fc:	str	r3, [sp, #12]
   15100:	ldr	r3, [r4, #12]
   15104:	str	r3, [sp, #16]
   15108:	ldr	r3, [r4, #16]
   1510c:	str	r3, [sp, #20]
   15110:	ldr	r3, [r4, #20]
   15114:	str	r3, [sp, #24]
   15118:	mvn	r3, #0
   1511c:	str	r3, [sp, #32]
   15120:	ldr	r3, [r4, #32]
   15124:	str	r3, [sp, #36]	; 0x24
   15128:	bl	11024 <mktime@plt>
   1512c:	ldr	r3, [sp, #32]
   15130:	mov	r5, r0
   15134:	cmp	r3, #0
   15138:	blt	15190 <putchar_unlocked@plt+0x3e54>
   1513c:	mov	r0, r7
   15140:	add	r1, sp, #4
   15144:	bl	14df0 <putchar_unlocked@plt+0x3ab4>
   15148:	cmp	r6, #1
   1514c:	mov	r7, r0
   15150:	beq	15164 <putchar_unlocked@plt+0x3e28>
   15154:	mov	r0, r6
   15158:	bl	14fd0 <putchar_unlocked@plt+0x3c94>
   1515c:	cmp	r0, #0
   15160:	beq	1519c <putchar_unlocked@plt+0x3e60>
   15164:	cmp	r7, #0
   15168:	beq	1519c <putchar_unlocked@plt+0x3e60>
   1516c:	add	lr, sp, #4
   15170:	mov	ip, r4
   15174:	ldm	lr!, {r0, r1, r2, r3}
   15178:	stmia	ip!, {r0, r1, r2, r3}
   1517c:	ldm	lr!, {r0, r1, r2, r3}
   15180:	stmia	ip!, {r0, r1, r2, r3}
   15184:	ldm	lr, {r0, r1, r2}
   15188:	stm	ip, {r0, r1, r2}
   1518c:	b	150cc <putchar_unlocked@plt+0x3d90>
   15190:	cmp	r6, #1
   15194:	movne	r7, #0
   15198:	bne	15154 <putchar_unlocked@plt+0x3e18>
   1519c:	mvn	r5, #0
   151a0:	b	150cc <putchar_unlocked@plt+0x3d90>
   151a4:	push	{r4, r5, r6, lr}
   151a8:	cmp	r1, #0
   151ac:	sub	sp, sp, #32
   151b0:	mov	r5, r0
   151b4:	ldr	r4, [sp, #48]	; 0x30
   151b8:	ldr	r6, [sp, #52]	; 0x34
   151bc:	beq	15270 <putchar_unlocked@plt+0x3f34>
   151c0:	strd	r2, [sp]
   151c4:	mov	r3, r1
   151c8:	mov	r1, #1
   151cc:	ldr	r2, [pc, #856]	; 1552c <putchar_unlocked@plt+0x41f0>
   151d0:	bl	11240 <__fprintf_chk@plt>
   151d4:	mov	r2, #5
   151d8:	ldr	r1, [pc, #848]	; 15530 <putchar_unlocked@plt+0x41f4>
   151dc:	mov	r0, #0
   151e0:	bl	1109c <dcgettext@plt>
   151e4:	movw	r3, #2022	; 0x7e6
   151e8:	ldr	r2, [pc, #836]	; 15534 <putchar_unlocked@plt+0x41f8>
   151ec:	mov	r1, #1
   151f0:	str	r3, [sp]
   151f4:	mov	r3, r0
   151f8:	mov	r0, r5
   151fc:	bl	11240 <__fprintf_chk@plt>
   15200:	mov	r1, r5
   15204:	mov	r0, #10
   15208:	bl	11090 <fputc_unlocked@plt>
   1520c:	mov	r2, #5
   15210:	ldr	r1, [pc, #800]	; 15538 <putchar_unlocked@plt+0x41fc>
   15214:	mov	r0, #0
   15218:	bl	1109c <dcgettext@plt>
   1521c:	mov	r2, r0
   15220:	mov	r1, #1
   15224:	ldr	r3, [pc, #784]	; 1553c <putchar_unlocked@plt+0x4200>
   15228:	mov	r0, r5
   1522c:	bl	11240 <__fprintf_chk@plt>
   15230:	mov	r1, r5
   15234:	mov	r0, #10
   15238:	bl	11090 <fputc_unlocked@plt>
   1523c:	cmp	r6, #9
   15240:	ldrls	pc, [pc, r6, lsl #2]
   15244:	b	15520 <putchar_unlocked@plt+0x41e4>
   15248:	andeq	r5, r1, r0, ror #6
   1524c:	andeq	r5, r1, r8, lsl #5
   15250:			; <UNDEFINED> instruction: 0x000152b4
   15254:	andeq	r5, r1, r8, ror #5
   15258:	andeq	r5, r1, r4, lsr #6
   1525c:	andeq	r5, r1, r8, ror #6
   15260:			; <UNDEFINED> instruction: 0x000153b0
   15264:	andeq	r5, r1, r0, lsl #8
   15268:	andeq	r5, r1, r8, asr r4
   1526c:			; <UNDEFINED> instruction: 0x000154b8
   15270:	mov	r1, #1
   15274:	str	r3, [sp]
   15278:	mov	r3, r2
   1527c:	ldr	r2, [pc, #700]	; 15540 <putchar_unlocked@plt+0x4204>
   15280:	bl	11240 <__fprintf_chk@plt>
   15284:	b	151d4 <putchar_unlocked@plt+0x3e98>
   15288:	mov	r2, #5
   1528c:	ldr	r1, [pc, #688]	; 15544 <putchar_unlocked@plt+0x4208>
   15290:	mov	r0, #0
   15294:	bl	1109c <dcgettext@plt>
   15298:	ldr	r3, [r4]
   1529c:	mov	r2, r0
   152a0:	mov	r1, #1
   152a4:	mov	r0, r5
   152a8:	add	sp, sp, #32
   152ac:	pop	{r4, r5, r6, lr}
   152b0:	b	11240 <__fprintf_chk@plt>
   152b4:	mov	r2, #5
   152b8:	ldr	r1, [pc, #648]	; 15548 <putchar_unlocked@plt+0x420c>
   152bc:	mov	r0, #0
   152c0:	bl	1109c <dcgettext@plt>
   152c4:	ldr	r3, [r4, #4]
   152c8:	mov	r2, r0
   152cc:	mov	r1, #1
   152d0:	mov	r0, r5
   152d4:	str	r3, [sp, #48]	; 0x30
   152d8:	ldr	r3, [r4]
   152dc:	add	sp, sp, #32
   152e0:	pop	{r4, r5, r6, lr}
   152e4:	b	11240 <__fprintf_chk@plt>
   152e8:	mov	r2, #5
   152ec:	ldr	r1, [pc, #600]	; 1554c <putchar_unlocked@plt+0x4210>
   152f0:	mov	r0, #0
   152f4:	bl	1109c <dcgettext@plt>
   152f8:	ldr	r3, [r4, #8]
   152fc:	mov	r2, r0
   15300:	mov	r1, #1
   15304:	mov	r0, r5
   15308:	str	r3, [sp, #52]	; 0x34
   1530c:	ldr	r3, [r4, #4]
   15310:	str	r3, [sp, #48]	; 0x30
   15314:	ldr	r3, [r4]
   15318:	add	sp, sp, #32
   1531c:	pop	{r4, r5, r6, lr}
   15320:	b	11240 <__fprintf_chk@plt>
   15324:	mov	r2, #5
   15328:	ldr	r1, [pc, #544]	; 15550 <putchar_unlocked@plt+0x4214>
   1532c:	mov	r0, #0
   15330:	bl	1109c <dcgettext@plt>
   15334:	ldr	r3, [r4, #12]
   15338:	mov	r2, r0
   1533c:	mov	r1, #1
   15340:	mov	r0, r5
   15344:	str	r3, [sp, #8]
   15348:	ldr	r3, [r4, #8]
   1534c:	str	r3, [sp, #4]
   15350:	ldr	r3, [r4, #4]
   15354:	str	r3, [sp]
   15358:	ldr	r3, [r4]
   1535c:	bl	11240 <__fprintf_chk@plt>
   15360:	add	sp, sp, #32
   15364:	pop	{r4, r5, r6, pc}
   15368:	mov	r2, #5
   1536c:	ldr	r1, [pc, #480]	; 15554 <putchar_unlocked@plt+0x4218>
   15370:	mov	r0, #0
   15374:	bl	1109c <dcgettext@plt>
   15378:	ldr	r3, [r4, #16]
   1537c:	mov	r2, r0
   15380:	mov	r1, #1
   15384:	mov	r0, r5
   15388:	str	r3, [sp, #12]
   1538c:	ldr	r3, [r4, #12]
   15390:	str	r3, [sp, #8]
   15394:	ldr	r3, [r4, #8]
   15398:	str	r3, [sp, #4]
   1539c:	ldr	r3, [r4, #4]
   153a0:	str	r3, [sp]
   153a4:	ldr	r3, [r4]
   153a8:	bl	11240 <__fprintf_chk@plt>
   153ac:	b	15360 <putchar_unlocked@plt+0x4024>
   153b0:	mov	r2, #5
   153b4:	ldr	r1, [pc, #412]	; 15558 <putchar_unlocked@plt+0x421c>
   153b8:	mov	r0, #0
   153bc:	bl	1109c <dcgettext@plt>
   153c0:	ldr	r3, [r4, #20]
   153c4:	mov	r2, r0
   153c8:	mov	r1, #1
   153cc:	mov	r0, r5
   153d0:	str	r3, [sp, #16]
   153d4:	ldr	r3, [r4, #16]
   153d8:	str	r3, [sp, #12]
   153dc:	ldr	r3, [r4, #12]
   153e0:	str	r3, [sp, #8]
   153e4:	ldr	r3, [r4, #8]
   153e8:	str	r3, [sp, #4]
   153ec:	ldr	r3, [r4, #4]
   153f0:	str	r3, [sp]
   153f4:	ldr	r3, [r4]
   153f8:	bl	11240 <__fprintf_chk@plt>
   153fc:	b	15360 <putchar_unlocked@plt+0x4024>
   15400:	mov	r2, #5
   15404:	ldr	r1, [pc, #336]	; 1555c <putchar_unlocked@plt+0x4220>
   15408:	mov	r0, #0
   1540c:	bl	1109c <dcgettext@plt>
   15410:	ldr	r3, [r4, #24]
   15414:	mov	r2, r0
   15418:	mov	r1, #1
   1541c:	mov	r0, r5
   15420:	str	r3, [sp, #20]
   15424:	ldr	r3, [r4, #20]
   15428:	str	r3, [sp, #16]
   1542c:	ldr	r3, [r4, #16]
   15430:	str	r3, [sp, #12]
   15434:	ldr	r3, [r4, #12]
   15438:	str	r3, [sp, #8]
   1543c:	ldr	r3, [r4, #8]
   15440:	str	r3, [sp, #4]
   15444:	ldr	r3, [r4, #4]
   15448:	str	r3, [sp]
   1544c:	ldr	r3, [r4]
   15450:	bl	11240 <__fprintf_chk@plt>
   15454:	b	15360 <putchar_unlocked@plt+0x4024>
   15458:	mov	r2, #5
   1545c:	ldr	r1, [pc, #252]	; 15560 <putchar_unlocked@plt+0x4224>
   15460:	mov	r0, #0
   15464:	bl	1109c <dcgettext@plt>
   15468:	ldr	r3, [r4, #28]
   1546c:	mov	r2, r0
   15470:	mov	r1, #1
   15474:	mov	r0, r5
   15478:	str	r3, [sp, #24]
   1547c:	ldr	r3, [r4, #24]
   15480:	str	r3, [sp, #20]
   15484:	ldr	r3, [r4, #20]
   15488:	str	r3, [sp, #16]
   1548c:	ldr	r3, [r4, #16]
   15490:	str	r3, [sp, #12]
   15494:	ldr	r3, [r4, #12]
   15498:	str	r3, [sp, #8]
   1549c:	ldr	r3, [r4, #8]
   154a0:	str	r3, [sp, #4]
   154a4:	ldr	r3, [r4, #4]
   154a8:	str	r3, [sp]
   154ac:	ldr	r3, [r4]
   154b0:	bl	11240 <__fprintf_chk@plt>
   154b4:	b	15360 <putchar_unlocked@plt+0x4024>
   154b8:	ldr	r1, [pc, #164]	; 15564 <putchar_unlocked@plt+0x4228>
   154bc:	mov	r2, #5
   154c0:	mov	r0, #0
   154c4:	bl	1109c <dcgettext@plt>
   154c8:	ldr	r3, [r4, #32]
   154cc:	mov	r2, r0
   154d0:	mov	r1, #1
   154d4:	mov	r0, r5
   154d8:	str	r3, [sp, #28]
   154dc:	ldr	r3, [r4, #28]
   154e0:	str	r3, [sp, #24]
   154e4:	ldr	r3, [r4, #24]
   154e8:	str	r3, [sp, #20]
   154ec:	ldr	r3, [r4, #20]
   154f0:	str	r3, [sp, #16]
   154f4:	ldr	r3, [r4, #16]
   154f8:	str	r3, [sp, #12]
   154fc:	ldr	r3, [r4, #12]
   15500:	str	r3, [sp, #8]
   15504:	ldr	r3, [r4, #8]
   15508:	str	r3, [sp, #4]
   1550c:	ldr	r3, [r4, #4]
   15510:	str	r3, [sp]
   15514:	ldr	r3, [r4]
   15518:	bl	11240 <__fprintf_chk@plt>
   1551c:	b	15360 <putchar_unlocked@plt+0x4024>
   15520:	mov	r2, #5
   15524:	ldr	r1, [pc, #60]	; 15568 <putchar_unlocked@plt+0x422c>
   15528:	b	154c0 <putchar_unlocked@plt+0x4184>
   1552c:	strdeq	r6, [r1], -lr
   15530:	andeq	r6, r1, r1, lsl r5
   15534:	ldrdeq	r6, [r1], -pc	; <UNPREDICTABLE>
   15538:	andeq	r6, r1, r5, lsl r5
   1553c:	andeq	r6, r1, r0, asr #11
   15540:	andeq	r6, r1, sl, lsl #10
   15544:	andeq	r6, r1, r2, ror #11
   15548:	strdeq	r6, [r1], -r2
   1554c:	andeq	r6, r1, r9, lsl #12
   15550:	andeq	r6, r1, r5, lsr #12
   15554:	andeq	r6, r1, r5, asr #12
   15558:	andeq	r6, r1, r9, ror #12
   1555c:	muleq	r1, r1, r6
   15560:			; <UNDEFINED> instruction: 0x000166bd
   15564:	andeq	r6, r1, sp, ror #13
   15568:	andeq	r6, r1, r1, lsr #14
   1556c:	push	{r0, r1, r4, lr}
   15570:	mov	ip, #0
   15574:	ldr	lr, [sp, #16]
   15578:	ldr	r4, [lr, ip, lsl #2]
   1557c:	cmp	r4, #0
   15580:	bne	15598 <putchar_unlocked@plt+0x425c>
   15584:	str	lr, [sp]
   15588:	str	ip, [sp, #4]
   1558c:	bl	151a4 <putchar_unlocked@plt+0x3e68>
   15590:	add	sp, sp, #8
   15594:	pop	{r4, pc}
   15598:	add	ip, ip, #1
   1559c:	b	15578 <putchar_unlocked@plt+0x423c>
   155a0:	push	{r4, r5, r6, lr}
   155a4:	sub	sp, sp, #48	; 0x30
   155a8:	mov	ip, #0
   155ac:	add	lr, sp, #8
   155b0:	mov	r5, lr
   155b4:	ldr	r6, [sp, #64]	; 0x40
   155b8:	ldr	r4, [r6, ip, lsl #2]
   155bc:	cmp	r4, #0
   155c0:	str	r4, [lr], #4
   155c4:	beq	155d4 <putchar_unlocked@plt+0x4298>
   155c8:	add	ip, ip, #1
   155cc:	cmp	ip, #10
   155d0:	bne	155b8 <putchar_unlocked@plt+0x427c>
   155d4:	stm	sp, {r5, ip}
   155d8:	bl	151a4 <putchar_unlocked@plt+0x3e68>
   155dc:	add	sp, sp, #48	; 0x30
   155e0:	pop	{r4, r5, r6, pc}
   155e4:	push	{r3}		; (str r3, [sp, #-4]!)
   155e8:	push	{r0, r1, r2, r3, lr}
   155ec:	add	r3, sp, #24
   155f0:	str	r3, [sp]
   155f4:	str	r3, [sp, #12]
   155f8:	ldr	r3, [sp, #20]
   155fc:	bl	155a0 <putchar_unlocked@plt+0x4264>
   15600:	add	sp, sp, #16
   15604:	pop	{lr}		; (ldr lr, [sp], #4)
   15608:	add	sp, sp, #4
   1560c:	bx	lr
   15610:	ldr	r3, [pc, #116]	; 1568c <putchar_unlocked@plt+0x4350>
   15614:	mov	r0, #10
   15618:	push	{r4, lr}
   1561c:	ldr	r1, [r3]
   15620:	bl	11090 <fputc_unlocked@plt>
   15624:	mov	r2, #5
   15628:	ldr	r1, [pc, #96]	; 15690 <putchar_unlocked@plt+0x4354>
   1562c:	mov	r0, #0
   15630:	bl	1109c <dcgettext@plt>
   15634:	mov	r1, r0
   15638:	ldr	r2, [pc, #84]	; 15694 <putchar_unlocked@plt+0x4358>
   1563c:	mov	r0, #1
   15640:	bl	11228 <__printf_chk@plt>
   15644:	mov	r2, #5
   15648:	ldr	r1, [pc, #72]	; 15698 <putchar_unlocked@plt+0x435c>
   1564c:	mov	r0, #0
   15650:	bl	1109c <dcgettext@plt>
   15654:	mov	r1, r0
   15658:	ldr	r3, [pc, #60]	; 1569c <putchar_unlocked@plt+0x4360>
   1565c:	mov	r0, #1
   15660:	ldr	r2, [pc, #56]	; 156a0 <putchar_unlocked@plt+0x4364>
   15664:	bl	11228 <__printf_chk@plt>
   15668:	mov	r2, #5
   1566c:	ldr	r1, [pc, #48]	; 156a4 <putchar_unlocked@plt+0x4368>
   15670:	mov	r0, #0
   15674:	bl	1109c <dcgettext@plt>
   15678:	mov	r1, r0
   1567c:	ldr	r2, [pc, #36]	; 156a8 <putchar_unlocked@plt+0x436c>
   15680:	mov	r0, #1
   15684:	pop	{r4, lr}
   15688:	b	11228 <__printf_chk@plt>
   1568c:	muleq	r2, r4, r1
   15690:	andeq	r6, r1, sp, asr r7
   15694:	andeq	r6, r1, r1, ror r7
   15698:	andeq	r6, r1, r7, lsl #15
   1569c:	strdeq	r6, [r1], -r7
   156a0:	andeq	r6, r1, pc, lsl r2
   156a4:	muleq	r1, fp, r7
   156a8:	andeq	r6, r1, r2, asr #15
   156ac:	push	{r4, lr}
   156b0:	bl	159f8 <putchar_unlocked@plt+0x46bc>
   156b4:	cmp	r0, #0
   156b8:	popne	{r4, pc}
   156bc:	bl	15964 <putchar_unlocked@plt+0x4628>
   156c0:	push	{r4, lr}
   156c4:	bl	159f8 <putchar_unlocked@plt+0x46bc>
   156c8:	cmp	r0, #0
   156cc:	popne	{r4, pc}
   156d0:	bl	15964 <putchar_unlocked@plt+0x4628>
   156d4:	b	156ac <putchar_unlocked@plt+0x4370>
   156d8:	push	{r4, r5, r6, lr}
   156dc:	mov	r5, r0
   156e0:	mov	r4, r1
   156e4:	bl	15a24 <putchar_unlocked@plt+0x46e8>
   156e8:	cmp	r0, #0
   156ec:	popne	{r4, r5, r6, pc}
   156f0:	adds	r4, r4, #0
   156f4:	movne	r4, #1
   156f8:	cmp	r5, #0
   156fc:	moveq	r4, #1
   15700:	cmp	r4, #0
   15704:	popeq	{r4, r5, r6, pc}
   15708:	bl	15964 <putchar_unlocked@plt+0x4628>
   1570c:	push	{r4, lr}
   15710:	bl	15b2c <putchar_unlocked@plt+0x47f0>
   15714:	cmp	r0, #0
   15718:	popne	{r4, pc}
   1571c:	bl	15964 <putchar_unlocked@plt+0x4628>
   15720:	push	{r4, r5, r6, lr}
   15724:	mov	r6, r0
   15728:	mov	r5, r1
   1572c:	mov	r4, r2
   15730:	bl	15bd4 <putchar_unlocked@plt+0x4898>
   15734:	cmp	r0, #0
   15738:	popne	{r4, r5, r6, pc}
   1573c:	cmp	r6, #0
   15740:	beq	15750 <putchar_unlocked@plt+0x4414>
   15744:	cmp	r5, #0
   15748:	cmpne	r4, #0
   1574c:	popeq	{r4, r5, r6, pc}
   15750:	bl	15964 <putchar_unlocked@plt+0x4628>
   15754:	b	15720 <putchar_unlocked@plt+0x43e4>
   15758:	push	{r4, lr}
   1575c:	bl	15b3c <putchar_unlocked@plt+0x4800>
   15760:	cmp	r0, #0
   15764:	popne	{r4, pc}
   15768:	bl	15964 <putchar_unlocked@plt+0x4628>
   1576c:	mov	r2, r1
   15770:	mov	r1, r0
   15774:	mov	r0, #0
   15778:	b	15720 <putchar_unlocked@plt+0x43e4>
   1577c:	mov	r2, r1
   15780:	mov	r1, r0
   15784:	mov	r0, #0
   15788:	b	15758 <putchar_unlocked@plt+0x441c>
   1578c:	cmp	r0, #0
   15790:	push	{r4, r5, r6, lr}
   15794:	mov	r5, r1
   15798:	ldr	r4, [r1]
   1579c:	bne	157c8 <putchar_unlocked@plt+0x448c>
   157a0:	cmp	r4, #0
   157a4:	bne	157b8 <putchar_unlocked@plt+0x447c>
   157a8:	mov	r4, #64	; 0x40
   157ac:	udiv	r4, r4, r2
   157b0:	cmp	r2, #64	; 0x40
   157b4:	addhi	r4, r4, #1
   157b8:	mov	r1, r4
   157bc:	bl	15720 <putchar_unlocked@plt+0x43e4>
   157c0:	str	r4, [r5]
   157c4:	pop	{r4, r5, r6, pc}
   157c8:	lsr	r3, r4, #1
   157cc:	add	r3, r3, #1
   157d0:	adds	r4, r4, r3
   157d4:	bcc	157b8 <putchar_unlocked@plt+0x447c>
   157d8:	bl	15964 <putchar_unlocked@plt+0x4628>
   157dc:	mov	r2, #1
   157e0:	b	1578c <putchar_unlocked@plt+0x4450>
   157e4:	ldr	ip, [r1]
   157e8:	push	{r4, r5, r6, r7, r8, lr}
   157ec:	mov	r5, r1
   157f0:	mvn	r8, r3
   157f4:	lsr	r8, r8, #31
   157f8:	ldr	lr, [sp, #24]
   157fc:	asr	r1, ip, #1
   15800:	adds	r4, ip, r1
   15804:	mvnvs	r4, #-2147483648	; 0x80000000
   15808:	cmp	r3, r4
   1580c:	movge	r1, #0
   15810:	andlt	r1, r8, #1
   15814:	cmp	r1, #0
   15818:	movne	r4, r3
   1581c:	smull	r6, r7, r4, lr
   15820:	cmp	r7, r6, asr #31
   15824:	bne	1583c <putchar_unlocked@plt+0x4500>
   15828:	cmp	r6, #63	; 0x3f
   1582c:	mov	r1, r6
   15830:	bgt	1584c <putchar_unlocked@plt+0x4510>
   15834:	mov	r1, #64	; 0x40
   15838:	b	15840 <putchar_unlocked@plt+0x4504>
   1583c:	mvn	r1, #-2147483648	; 0x80000000
   15840:	sdiv	r4, r1, lr
   15844:	mls	r6, lr, r4, r1
   15848:	sub	r1, r1, r6
   1584c:	cmp	r0, #0
   15850:	sub	r6, r4, ip
   15854:	streq	r0, [r5]
   15858:	cmp	r6, r2
   1585c:	bge	15890 <putchar_unlocked@plt+0x4554>
   15860:	adds	r4, ip, r2
   15864:	bvs	1588c <putchar_unlocked@plt+0x4550>
   15868:	cmp	r4, r3
   1586c:	movle	r3, #0
   15870:	andgt	r3, r8, #1
   15874:	cmp	r3, #0
   15878:	bne	1588c <putchar_unlocked@plt+0x4550>
   1587c:	smull	r2, r3, r4, lr
   15880:	cmp	r3, r2, asr #31
   15884:	mov	r1, r2
   15888:	beq	15890 <putchar_unlocked@plt+0x4554>
   1588c:	bl	15964 <putchar_unlocked@plt+0x4628>
   15890:	bl	156d8 <putchar_unlocked@plt+0x439c>
   15894:	str	r4, [r5]
   15898:	pop	{r4, r5, r6, r7, r8, pc}
   1589c:	push	{r4, lr}
   158a0:	bl	159a4 <putchar_unlocked@plt+0x4668>
   158a4:	cmp	r0, #0
   158a8:	popne	{r4, pc}
   158ac:	bl	15964 <putchar_unlocked@plt+0x4628>
   158b0:	mov	r1, #1
   158b4:	b	1589c <putchar_unlocked@plt+0x4560>
   158b8:	push	{r4, lr}
   158bc:	bl	159a4 <putchar_unlocked@plt+0x4668>
   158c0:	cmp	r0, #0
   158c4:	popne	{r4, pc}
   158c8:	bl	15964 <putchar_unlocked@plt+0x4628>
   158cc:	mov	r1, #1
   158d0:	b	158b8 <putchar_unlocked@plt+0x457c>
   158d4:	push	{r4, r5, r6, lr}
   158d8:	mov	r4, r1
   158dc:	mov	r5, r0
   158e0:	mov	r0, r1
   158e4:	bl	156ac <putchar_unlocked@plt+0x4370>
   158e8:	mov	r2, r4
   158ec:	mov	r1, r5
   158f0:	pop	{r4, r5, r6, lr}
   158f4:	b	11060 <memcpy@plt>
   158f8:	push	{r4, r5, r6, lr}
   158fc:	mov	r4, r1
   15900:	mov	r5, r0
   15904:	mov	r0, r1
   15908:	bl	156c0 <putchar_unlocked@plt+0x4384>
   1590c:	mov	r2, r4
   15910:	mov	r1, r5
   15914:	pop	{r4, r5, r6, lr}
   15918:	b	11060 <memcpy@plt>
   1591c:	push	{r4, r5, r6, lr}
   15920:	mov	r5, r0
   15924:	add	r0, r1, #1
   15928:	mov	r4, r1
   1592c:	bl	156c0 <putchar_unlocked@plt+0x4384>
   15930:	mov	r2, #0
   15934:	mov	r1, r5
   15938:	strb	r2, [r0, r4]
   1593c:	mov	r2, r4
   15940:	pop	{r4, r5, r6, lr}
   15944:	b	11060 <memcpy@plt>
   15948:	push	{r4, lr}
   1594c:	mov	r4, r0
   15950:	bl	111e0 <strlen@plt>
   15954:	add	r1, r0, #1
   15958:	mov	r0, r4
   1595c:	pop	{r4, lr}
   15960:	b	158d4 <putchar_unlocked@plt+0x4598>
   15964:	ldr	r3, [pc, #44]	; 15998 <putchar_unlocked@plt+0x465c>
   15968:	mov	r2, #5
   1596c:	mov	r0, #0
   15970:	push	{r4, lr}
   15974:	ldr	r1, [pc, #32]	; 1599c <putchar_unlocked@plt+0x4660>
   15978:	ldr	r4, [r3]
   1597c:	bl	1109c <dcgettext@plt>
   15980:	mov	r3, r0
   15984:	ldr	r2, [pc, #20]	; 159a0 <putchar_unlocked@plt+0x4664>
   15988:	mov	r1, #0
   1598c:	mov	r0, r4
   15990:	bl	11138 <error@plt>
   15994:	bl	11318 <abort@plt>
   15998:	andeq	r7, r2, ip, lsr r1
   1599c:	andeq	r6, r1, lr, lsl #16
   159a0:	muleq	r1, ip, r3
   159a4:	cmp	r1, #0
   159a8:	cmpne	r0, #0
   159ac:	beq	159e4 <putchar_unlocked@plt+0x46a8>
   159b0:	push	{r4, r5, r6, lr}
   159b4:	umull	r4, r5, r0, r1
   159b8:	adds	r3, r5, #0
   159bc:	movne	r3, #1
   159c0:	cmp	r4, #0
   159c4:	blt	159d0 <putchar_unlocked@plt+0x4694>
   159c8:	cmp	r3, #0
   159cc:	beq	159f0 <putchar_unlocked@plt+0x46b4>
   159d0:	bl	111f8 <__errno_location@plt>
   159d4:	mov	r3, #12
   159d8:	str	r3, [r0]
   159dc:	mov	r0, #0
   159e0:	pop	{r4, r5, r6, pc}
   159e4:	mov	r1, #1
   159e8:	mov	r0, r1
   159ec:	b	10fe8 <calloc@plt>
   159f0:	pop	{r4, r5, r6, lr}
   159f4:	b	159ec <putchar_unlocked@plt+0x46b0>
   159f8:	cmp	r0, #0
   159fc:	beq	15a1c <putchar_unlocked@plt+0x46e0>
   15a00:	bge	15a20 <putchar_unlocked@plt+0x46e4>
   15a04:	push	{r4, lr}
   15a08:	bl	111f8 <__errno_location@plt>
   15a0c:	mov	r3, #12
   15a10:	str	r3, [r0]
   15a14:	mov	r0, #0
   15a18:	pop	{r4, pc}
   15a1c:	mov	r0, #1
   15a20:	b	11150 <malloc@plt>
   15a24:	cmp	r0, #0
   15a28:	bne	15a34 <putchar_unlocked@plt+0x46f8>
   15a2c:	mov	r0, r1
   15a30:	b	159f8 <putchar_unlocked@plt+0x46bc>
   15a34:	cmp	r1, #0
   15a38:	push	{r4, lr}
   15a3c:	bne	15a4c <putchar_unlocked@plt+0x4710>
   15a40:	bl	15ad8 <putchar_unlocked@plt+0x479c>
   15a44:	mov	r0, #0
   15a48:	pop	{r4, pc}
   15a4c:	blt	15a58 <putchar_unlocked@plt+0x471c>
   15a50:	pop	{r4, lr}
   15a54:	b	110b4 <realloc@plt>
   15a58:	bl	111f8 <__errno_location@plt>
   15a5c:	mov	r3, #12
   15a60:	str	r3, [r0]
   15a64:	b	15a44 <putchar_unlocked@plt+0x4708>
   15a68:	push	{r4, r5, r6, lr}
   15a6c:	mov	r4, r0
   15a70:	bl	11114 <__fpending@plt>
   15a74:	mov	r5, r0
   15a78:	mov	r0, r4
   15a7c:	bl	11120 <ferror_unlocked@plt>
   15a80:	mov	r6, r0
   15a84:	mov	r0, r4
   15a88:	bl	11d34 <putchar_unlocked@plt+0x9f8>
   15a8c:	cmp	r6, #0
   15a90:	mov	r4, r0
   15a94:	bne	15ac0 <putchar_unlocked@plt+0x4784>
   15a98:	cmp	r0, #0
   15a9c:	beq	15ab8 <putchar_unlocked@plt+0x477c>
   15aa0:	cmp	r5, #0
   15aa4:	bne	15ad0 <putchar_unlocked@plt+0x4794>
   15aa8:	bl	111f8 <__errno_location@plt>
   15aac:	ldr	r4, [r0]
   15ab0:	subs	r4, r4, #9
   15ab4:	mvnne	r4, #0
   15ab8:	mov	r0, r4
   15abc:	pop	{r4, r5, r6, pc}
   15ac0:	cmp	r0, #0
   15ac4:	bne	15ad0 <putchar_unlocked@plt+0x4794>
   15ac8:	bl	111f8 <__errno_location@plt>
   15acc:	str	r4, [r0]
   15ad0:	mvn	r4, #0
   15ad4:	b	15ab8 <putchar_unlocked@plt+0x477c>
   15ad8:	push	{r0, r1, r2, r4, r5, lr}
   15adc:	mov	r5, r0
   15ae0:	bl	111f8 <__errno_location@plt>
   15ae4:	mov	r4, r0
   15ae8:	mov	r0, r5
   15aec:	ldr	r3, [r4]
   15af0:	str	r3, [sp]
   15af4:	str	r3, [sp, #4]
   15af8:	mov	r3, #0
   15afc:	str	r3, [r4]
   15b00:	bl	11048 <free@plt>
   15b04:	ldr	r3, [r4]
   15b08:	add	r2, sp, #8
   15b0c:	clz	r3, r3
   15b10:	lsr	r3, r3, #5
   15b14:	add	r3, r2, r3, lsl #2
   15b18:	ldr	r3, [r3, #-8]
   15b1c:	str	r3, [r4]
   15b20:	add	sp, sp, #12
   15b24:	pop	{r4, r5, pc}
   15b28:	b	159f8 <putchar_unlocked@plt+0x46bc>
   15b2c:	cmp	r1, #0
   15b30:	orreq	r1, r1, #1
   15b34:	b	15a24 <putchar_unlocked@plt+0x46e8>
   15b38:	b	159a4 <putchar_unlocked@plt+0x4668>
   15b3c:	cmp	r2, #0
   15b40:	cmpne	r1, #0
   15b44:	moveq	r2, #1
   15b48:	moveq	r1, r2
   15b4c:	b	15bd4 <putchar_unlocked@plt+0x4898>
   15b50:	push	{r4, lr}
   15b54:	mov	r0, #14
   15b58:	bl	112a0 <nl_langinfo@plt>
   15b5c:	cmp	r0, #0
   15b60:	beq	15b78 <putchar_unlocked@plt+0x483c>
   15b64:	ldrb	r2, [r0]
   15b68:	ldr	r3, [pc, #16]	; 15b80 <putchar_unlocked@plt+0x4844>
   15b6c:	cmp	r2, #0
   15b70:	moveq	r0, r3
   15b74:	pop	{r4, pc}
   15b78:	ldr	r0, [pc]	; 15b80 <putchar_unlocked@plt+0x4844>
   15b7c:	pop	{r4, pc}
   15b80:	andeq	r6, r1, pc, lsl r8
   15b84:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   15b88:	subs	r5, r0, #0
   15b8c:	mov	r7, r2
   15b90:	addeq	r5, sp, #4
   15b94:	mov	r6, r1
   15b98:	mov	r0, r5
   15b9c:	bl	1112c <mbrtowc@plt>
   15ba0:	cmp	r7, #0
   15ba4:	cmnne	r0, #3
   15ba8:	mov	r4, r0
   15bac:	bls	15bc8 <putchar_unlocked@plt+0x488c>
   15bb0:	mov	r0, #0
   15bb4:	bl	15c00 <putchar_unlocked@plt+0x48c4>
   15bb8:	cmp	r0, #0
   15bbc:	ldrbeq	r3, [r6]
   15bc0:	moveq	r4, #1
   15bc4:	streq	r3, [r5]
   15bc8:	mov	r0, r4
   15bcc:	add	sp, sp, #12
   15bd0:	pop	{r4, r5, r6, r7, pc}
   15bd4:	umull	r2, r3, r1, r2
   15bd8:	cmp	r3, #0
   15bdc:	bne	15be8 <putchar_unlocked@plt+0x48ac>
   15be0:	mov	r1, r2
   15be4:	b	15a24 <putchar_unlocked@plt+0x46e8>
   15be8:	push	{r4, lr}
   15bec:	bl	111f8 <__errno_location@plt>
   15bf0:	mov	r3, #12
   15bf4:	str	r3, [r0]
   15bf8:	mov	r0, #0
   15bfc:	pop	{r4, pc}
   15c00:	push	{lr}		; (str lr, [sp, #-4]!)
   15c04:	sub	sp, sp, #268	; 0x10c
   15c08:	movw	r2, #257	; 0x101
   15c0c:	add	r1, sp, #4
   15c10:	bl	15c5c <putchar_unlocked@plt+0x4920>
   15c14:	cmp	r0, #0
   15c18:	movne	r0, #0
   15c1c:	bne	15c4c <putchar_unlocked@plt+0x4910>
   15c20:	ldr	r1, [pc, #44]	; 15c54 <putchar_unlocked@plt+0x4918>
   15c24:	add	r0, sp, #4
   15c28:	bl	11018 <strcmp@plt>
   15c2c:	cmp	r0, #0
   15c30:	beq	15c48 <putchar_unlocked@plt+0x490c>
   15c34:	ldr	r1, [pc, #28]	; 15c58 <putchar_unlocked@plt+0x491c>
   15c38:	add	r0, sp, #4
   15c3c:	bl	11018 <strcmp@plt>
   15c40:	adds	r0, r0, #0
   15c44:	movne	r0, #1
   15c48:	and	r0, r0, #1
   15c4c:	add	sp, sp, #268	; 0x10c
   15c50:	pop	{pc}		; (ldr pc, [sp], #4)
   15c54:	andeq	r6, r1, sl, lsl #7
   15c58:	andeq	r6, r1, r5, lsr #16
   15c5c:	push	{r4, r5, r6, lr}
   15c60:	mov	r5, r1
   15c64:	mov	r1, #0
   15c68:	mov	r4, r2
   15c6c:	bl	11288 <setlocale@plt>
   15c70:	subs	r6, r0, #0
   15c74:	bne	15c88 <putchar_unlocked@plt+0x494c>
   15c78:	cmp	r4, #0
   15c7c:	mov	r0, #22
   15c80:	strbne	r6, [r5]
   15c84:	pop	{r4, r5, r6, pc}
   15c88:	bl	111e0 <strlen@plt>
   15c8c:	cmp	r4, r0
   15c90:	bls	15cac <putchar_unlocked@plt+0x4970>
   15c94:	add	r2, r0, #1
   15c98:	mov	r1, r6
   15c9c:	mov	r0, r5
   15ca0:	bl	11060 <memcpy@plt>
   15ca4:	mov	r0, #0
   15ca8:	pop	{r4, r5, r6, pc}
   15cac:	cmp	r4, #0
   15cb0:	beq	15cd0 <putchar_unlocked@plt+0x4994>
   15cb4:	sub	r4, r4, #1
   15cb8:	mov	r1, r6
   15cbc:	mov	r2, r4
   15cc0:	mov	r0, r5
   15cc4:	bl	11060 <memcpy@plt>
   15cc8:	mov	r3, #0
   15ccc:	strb	r3, [r5, r4]
   15cd0:	mov	r0, #34	; 0x22
   15cd4:	pop	{r4, r5, r6, pc}
   15cd8:	mov	r1, #0
   15cdc:	b	11288 <setlocale@plt>
   15ce0:	cmp	r3, #0
   15ce4:	cmpeq	r2, #0
   15ce8:	bne	15d00 <putchar_unlocked@plt+0x49c4>
   15cec:	cmp	r1, #0
   15cf0:	cmpeq	r0, #0
   15cf4:	mvnne	r1, #0
   15cf8:	mvnne	r0, #0
   15cfc:	b	15d1c <putchar_unlocked@plt+0x49e0>
   15d00:	sub	sp, sp, #8
   15d04:	push	{sp, lr}
   15d08:	bl	15d2c <putchar_unlocked@plt+0x49f0>
   15d0c:	ldr	lr, [sp, #4]
   15d10:	add	sp, sp, #8
   15d14:	pop	{r2, r3}
   15d18:	bx	lr
   15d1c:	push	{r1, lr}
   15d20:	mov	r0, #8
   15d24:	bl	11000 <raise@plt>
   15d28:	pop	{r1, pc}
   15d2c:	cmp	r1, r3
   15d30:	cmpeq	r0, r2
   15d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d38:	mov	r4, r0
   15d3c:	movcc	r0, #0
   15d40:	mov	r5, r1
   15d44:	ldr	lr, [sp, #36]	; 0x24
   15d48:	movcc	r1, r0
   15d4c:	bcc	15e48 <putchar_unlocked@plt+0x4b0c>
   15d50:	cmp	r3, #0
   15d54:	clzeq	ip, r2
   15d58:	clzne	ip, r3
   15d5c:	addeq	ip, ip, #32
   15d60:	cmp	r5, #0
   15d64:	clzeq	r1, r4
   15d68:	addeq	r1, r1, #32
   15d6c:	clzne	r1, r5
   15d70:	sub	ip, ip, r1
   15d74:	sub	sl, ip, #32
   15d78:	lsl	r9, r3, ip
   15d7c:	rsb	fp, ip, #32
   15d80:	orr	r9, r9, r2, lsl sl
   15d84:	orr	r9, r9, r2, lsr fp
   15d88:	lsl	r8, r2, ip
   15d8c:	cmp	r5, r9
   15d90:	cmpeq	r4, r8
   15d94:	movcc	r0, #0
   15d98:	movcc	r1, r0
   15d9c:	bcc	15db8 <putchar_unlocked@plt+0x4a7c>
   15da0:	mov	r0, #1
   15da4:	subs	r4, r4, r8
   15da8:	lsl	r1, r0, sl
   15dac:	orr	r1, r1, r0, lsr fp
   15db0:	lsl	r0, r0, ip
   15db4:	sbc	r5, r5, r9
   15db8:	cmp	ip, #0
   15dbc:	beq	15e48 <putchar_unlocked@plt+0x4b0c>
   15dc0:	lsr	r6, r8, #1
   15dc4:	orr	r6, r6, r9, lsl #31
   15dc8:	lsr	r7, r9, #1
   15dcc:	mov	r2, ip
   15dd0:	b	15df4 <putchar_unlocked@plt+0x4ab8>
   15dd4:	subs	r3, r4, r6
   15dd8:	sbc	r8, r5, r7
   15ddc:	adds	r3, r3, r3
   15de0:	adc	r8, r8, r8
   15de4:	adds	r4, r3, #1
   15de8:	adc	r5, r8, #0
   15dec:	subs	r2, r2, #1
   15df0:	beq	15e10 <putchar_unlocked@plt+0x4ad4>
   15df4:	cmp	r5, r7
   15df8:	cmpeq	r4, r6
   15dfc:	bcs	15dd4 <putchar_unlocked@plt+0x4a98>
   15e00:	adds	r4, r4, r4
   15e04:	adc	r5, r5, r5
   15e08:	subs	r2, r2, #1
   15e0c:	bne	15df4 <putchar_unlocked@plt+0x4ab8>
   15e10:	lsr	r3, r4, ip
   15e14:	orr	r3, r3, r5, lsl fp
   15e18:	lsr	r2, r5, ip
   15e1c:	orr	r3, r3, r5, lsr sl
   15e20:	adds	r0, r0, r4
   15e24:	mov	r4, r3
   15e28:	lsl	r3, r2, ip
   15e2c:	orr	r3, r3, r4, lsl sl
   15e30:	lsl	ip, r4, ip
   15e34:	orr	r3, r3, r4, lsr fp
   15e38:	adc	r1, r1, r5
   15e3c:	subs	r0, r0, ip
   15e40:	mov	r5, r2
   15e44:	sbc	r1, r1, r3
   15e48:	cmp	lr, #0
   15e4c:	strdne	r4, [lr]
   15e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15e58:	mov	r7, r0
   15e5c:	ldr	r6, [pc, #72]	; 15eac <putchar_unlocked@plt+0x4b70>
   15e60:	ldr	r5, [pc, #72]	; 15eb0 <putchar_unlocked@plt+0x4b74>
   15e64:	add	r6, pc, r6
   15e68:	add	r5, pc, r5
   15e6c:	sub	r6, r6, r5
   15e70:	mov	r8, r1
   15e74:	mov	r9, r2
   15e78:	bl	10fc8 <calloc@plt-0x20>
   15e7c:	asrs	r6, r6, #2
   15e80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15e84:	mov	r4, #0
   15e88:	add	r4, r4, #1
   15e8c:	ldr	r3, [r5], #4
   15e90:	mov	r2, r9
   15e94:	mov	r1, r8
   15e98:	mov	r0, r7
   15e9c:	blx	r3
   15ea0:	cmp	r6, r4
   15ea4:	bne	15e88 <putchar_unlocked@plt+0x4b4c>
   15ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15eac:	andeq	r1, r1, r8, lsr #1
   15eb0:	andeq	r1, r1, r0, lsr #1
   15eb4:	bx	lr
   15eb8:	ldr	r3, [pc, #12]	; 15ecc <putchar_unlocked@plt+0x4b90>
   15ebc:	mov	r1, #0
   15ec0:	add	r3, pc, r3
   15ec4:	ldr	r2, [r3]
   15ec8:	b	11204 <__cxa_atexit@plt>
   15ecc:	andeq	r1, r1, ip, ror #4

Disassembly of section .fini:

00015ed0 <.fini>:
   15ed0:	push	{r3, lr}
   15ed4:	pop	{r3, pc}
