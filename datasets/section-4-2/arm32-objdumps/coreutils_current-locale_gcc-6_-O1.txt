
../repos/coreutils/gnulib-tests/current-locale:     file format elf32-littlearm


Disassembly of section .init:

00010318 <.init>:
   10318:	push	{r3, lr}
   1031c:	bl	103bc <abort@plt+0x48>
   10320:	pop	{r3, pc}

Disassembly of section .plt:

00010324 <getenv@plt-0x14>:
   10324:	push	{lr}		; (str lr, [sp, #-4]!)
   10328:	ldr	lr, [pc, #4]	; 10334 <getenv@plt-0x4>
   1032c:	add	lr, pc, lr
   10330:	ldr	pc, [lr, #8]!
   10334:	andeq	r0, r1, ip, asr #25

00010338 <getenv@plt>:
   10338:	add	ip, pc, #0, 12
   1033c:	add	ip, ip, #16, 20	; 0x10000
   10340:	ldr	pc, [ip, #3276]!	; 0xccc

00010344 <__libc_start_main@plt>:
   10344:	add	ip, pc, #0, 12
   10348:	add	ip, ip, #16, 20	; 0x10000
   1034c:	ldr	pc, [ip, #3268]!	; 0xcc4

00010350 <__gmon_start__@plt>:
   10350:	add	ip, pc, #0, 12
   10354:	add	ip, ip, #16, 20	; 0x10000
   10358:	ldr	pc, [ip, #3260]!	; 0xcbc

0001035c <__printf_chk@plt>:
   1035c:	add	ip, pc, #0, 12
   10360:	add	ip, ip, #16, 20	; 0x10000
   10364:	ldr	pc, [ip, #3252]!	; 0xcb4

00010368 <setlocale@plt>:
   10368:	add	ip, pc, #0, 12
   1036c:	add	ip, ip, #16, 20	; 0x10000
   10370:	ldr	pc, [ip, #3244]!	; 0xcac

00010374 <abort@plt>:
   10374:	add	ip, pc, #0, 12
   10378:	add	ip, ip, #16, 20	; 0x10000
   1037c:	ldr	pc, [ip, #3236]!	; 0xca4

Disassembly of section .text:

00010380 <.text>:
   10380:	mov	fp, #0
   10384:	mov	lr, #0
   10388:	pop	{r1}		; (ldr r1, [sp], #4)
   1038c:	mov	r2, sp
   10390:	push	{r2}		; (str r2, [sp, #-4]!)
   10394:	push	{r0}		; (str r0, [sp, #-4]!)
   10398:	ldr	ip, [pc, #16]	; 103b0 <abort@plt+0x3c>
   1039c:	push	{ip}		; (str ip, [sp, #-4]!)
   103a0:	ldr	r0, [pc, #12]	; 103b4 <abort@plt+0x40>
   103a4:	ldr	r3, [pc, #12]	; 103b8 <abort@plt+0x44>
   103a8:	bl	10344 <__libc_start_main@plt>
   103ac:	bl	10374 <abort@plt>
   103b0:	andeq	r0, r1, r0, asr #13
   103b4:	andeq	r0, r1, r4, lsr r5
   103b8:	andeq	r0, r1, r0, ror #12
   103bc:	ldr	r3, [pc, #20]	; 103d8 <abort@plt+0x64>
   103c0:	ldr	r2, [pc, #20]	; 103dc <abort@plt+0x68>
   103c4:	add	r3, pc, r3
   103c8:	ldr	r2, [r3, r2]
   103cc:	cmp	r2, #0
   103d0:	bxeq	lr
   103d4:	b	10350 <__gmon_start__@plt>
   103d8:	andeq	r0, r1, r4, lsr ip
   103dc:	andeq	r0, r0, r4, lsr #32
   103e0:	ldr	r3, [pc, #28]	; 10404 <abort@plt+0x90>
   103e4:	ldr	r0, [pc, #28]	; 10408 <abort@plt+0x94>
   103e8:	sub	r3, r3, r0
   103ec:	cmp	r3, #6
   103f0:	bxls	lr
   103f4:	ldr	r3, [pc, #16]	; 1040c <abort@plt+0x98>
   103f8:	cmp	r3, #0
   103fc:	bxeq	lr
   10400:	bx	r3
   10404:	andeq	r1, r2, r3, lsr r0
   10408:	andeq	r1, r2, r0, lsr r0
   1040c:	andeq	r0, r0, r0
   10410:	ldr	r1, [pc, #36]	; 1043c <abort@plt+0xc8>
   10414:	ldr	r0, [pc, #36]	; 10440 <abort@plt+0xcc>
   10418:	sub	r1, r1, r0
   1041c:	asr	r1, r1, #2
   10420:	add	r1, r1, r1, lsr #31
   10424:	asrs	r1, r1, #1
   10428:	bxeq	lr
   1042c:	ldr	r3, [pc, #16]	; 10444 <abort@plt+0xd0>
   10430:	cmp	r3, #0
   10434:	bxeq	lr
   10438:	bx	r3
   1043c:	andeq	r1, r2, r0, lsr r0
   10440:	andeq	r1, r2, r0, lsr r0
   10444:	andeq	r0, r0, r0
   10448:	push	{r4, lr}
   1044c:	ldr	r4, [pc, #24]	; 1046c <abort@plt+0xf8>
   10450:	ldrb	r3, [r4]
   10454:	cmp	r3, #0
   10458:	popne	{r4, pc}
   1045c:	bl	103e0 <abort@plt+0x6c>
   10460:	mov	r3, #1
   10464:	strb	r3, [r4]
   10468:	pop	{r4, pc}
   1046c:	andeq	r1, r2, r0, lsr r0
   10470:	ldr	r0, [pc, #40]	; 104a0 <abort@plt+0x12c>
   10474:	ldr	r3, [r0]
   10478:	cmp	r3, #0
   1047c:	bne	10484 <abort@plt+0x110>
   10480:	b	10410 <abort@plt+0x9c>
   10484:	ldr	r3, [pc, #24]	; 104a4 <abort@plt+0x130>
   10488:	cmp	r3, #0
   1048c:	beq	10480 <abort@plt+0x10c>
   10490:	push	{r4, lr}
   10494:	blx	r3
   10498:	pop	{r4, lr}
   1049c:	b	10410 <abort@plt+0x9c>
   104a0:	andeq	r0, r2, r4, lsl pc
   104a4:	andeq	r0, r0, r0
   104a8:	push	{r4, r5, r6, lr}
   104ac:	mov	r5, r0
   104b0:	mov	r4, r1
   104b4:	mov	r0, r1
   104b8:	bl	10338 <getenv@plt>
   104bc:	subs	r6, r0, #0
   104c0:	beq	104ec <abort@plt+0x178>
   104c4:	ldrb	r3, [r6]
   104c8:	cmp	r3, #0
   104cc:	beq	104ec <abort@plt+0x178>
   104d0:	ldr	r0, [pc, #80]	; 10528 <abort@plt+0x1b4>
   104d4:	bl	10338 <getenv@plt>
   104d8:	cmp	r0, #0
   104dc:	beq	10510 <abort@plt+0x19c>
   104e0:	ldrb	r3, [r0]
   104e4:	cmp	r3, #0
   104e8:	beq	10510 <abort@plt+0x19c>
   104ec:	mov	r1, #0
   104f0:	mov	r0, r5
   104f4:	bl	10368 <setlocale@plt>
   104f8:	mov	r3, r0
   104fc:	mov	r2, r4
   10500:	ldr	r1, [pc, #36]	; 1052c <abort@plt+0x1b8>
   10504:	mov	r0, #1
   10508:	bl	1035c <__printf_chk@plt>
   1050c:	pop	{r4, r5, r6, pc}
   10510:	mov	r3, r6
   10514:	mov	r2, r4
   10518:	ldr	r1, [pc, #16]	; 10530 <abort@plt+0x1bc>
   1051c:	mov	r0, #1
   10520:	bl	1035c <__printf_chk@plt>
   10524:	pop	{r4, r5, r6, pc}
   10528:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1052c:	andeq	r0, r1, r0, ror #13
   10530:	ldrdeq	r0, [r1], -r8
   10534:	push	{r4, lr}
   10538:	ldr	r1, [pc, #220]	; 1061c <abort@plt+0x2a8>
   1053c:	mov	r0, #6
   10540:	bl	10368 <setlocale@plt>
   10544:	ldr	r0, [pc, #212]	; 10620 <abort@plt+0x2ac>
   10548:	bl	10338 <getenv@plt>
   1054c:	ldr	r2, [pc, #200]	; 1061c <abort@plt+0x2a8>
   10550:	cmp	r0, #0
   10554:	movne	r2, r0
   10558:	ldr	r1, [pc, #196]	; 10624 <abort@plt+0x2b0>
   1055c:	mov	r0, #1
   10560:	bl	1035c <__printf_chk@plt>
   10564:	ldr	r1, [pc, #188]	; 10628 <abort@plt+0x2b4>
   10568:	mov	r0, #0
   1056c:	bl	104a8 <abort@plt+0x134>
   10570:	ldr	r1, [pc, #180]	; 1062c <abort@plt+0x2b8>
   10574:	mov	r0, #1
   10578:	bl	104a8 <abort@plt+0x134>
   1057c:	ldr	r1, [pc, #172]	; 10630 <abort@plt+0x2bc>
   10580:	mov	r0, #2
   10584:	bl	104a8 <abort@plt+0x134>
   10588:	ldr	r1, [pc, #164]	; 10634 <abort@plt+0x2c0>
   1058c:	mov	r0, #3
   10590:	bl	104a8 <abort@plt+0x134>
   10594:	ldr	r1, [pc, #156]	; 10638 <abort@plt+0x2c4>
   10598:	mov	r0, #4
   1059c:	bl	104a8 <abort@plt+0x134>
   105a0:	ldr	r1, [pc, #148]	; 1063c <abort@plt+0x2c8>
   105a4:	mov	r0, #5
   105a8:	bl	104a8 <abort@plt+0x134>
   105ac:	ldr	r1, [pc, #140]	; 10640 <abort@plt+0x2cc>
   105b0:	mov	r0, #7
   105b4:	bl	104a8 <abort@plt+0x134>
   105b8:	ldr	r1, [pc, #132]	; 10644 <abort@plt+0x2d0>
   105bc:	mov	r0, #8
   105c0:	bl	104a8 <abort@plt+0x134>
   105c4:	ldr	r1, [pc, #124]	; 10648 <abort@plt+0x2d4>
   105c8:	mov	r0, #9
   105cc:	bl	104a8 <abort@plt+0x134>
   105d0:	ldr	r1, [pc, #116]	; 1064c <abort@plt+0x2d8>
   105d4:	mov	r0, #10
   105d8:	bl	104a8 <abort@plt+0x134>
   105dc:	ldr	r1, [pc, #108]	; 10650 <abort@plt+0x2dc>
   105e0:	mov	r0, #11
   105e4:	bl	104a8 <abort@plt+0x134>
   105e8:	ldr	r1, [pc, #100]	; 10654 <abort@plt+0x2e0>
   105ec:	mov	r0, #12
   105f0:	bl	104a8 <abort@plt+0x134>
   105f4:	ldr	r0, [pc, #92]	; 10658 <abort@plt+0x2e4>
   105f8:	bl	10338 <getenv@plt>
   105fc:	ldr	r2, [pc, #24]	; 1061c <abort@plt+0x2a8>
   10600:	cmp	r0, #0
   10604:	movne	r2, r0
   10608:	ldr	r1, [pc, #76]	; 1065c <abort@plt+0x2e8>
   1060c:	mov	r0, #1
   10610:	bl	1035c <__printf_chk@plt>
   10614:	mov	r0, #0
   10618:	pop	{r4, pc}
   1061c:	andeq	r0, r1, r8, ror #13
   10620:	andeq	r0, r1, ip, ror #13
   10624:	strdeq	r0, [r1], -r4
   10628:	andeq	r0, r1, r0, lsl #14
   1062c:	andeq	r0, r1, ip, lsl #14
   10630:	andeq	r0, r1, r8, lsl r7
   10634:	andeq	r0, r1, r0, lsr #14
   10638:	andeq	r0, r1, ip, lsr #14
   1063c:	andeq	r0, r1, r8, lsr r7
   10640:	andeq	r0, r1, r4, asr #14
   10644:	andeq	r0, r1, r0, asr r7
   10648:	andeq	r0, r1, r8, asr r7
   1064c:	andeq	r0, r1, r4, ror #14
   10650:	andeq	r0, r1, r4, ror r7
   10654:	andeq	r0, r1, r4, lsl #15
   10658:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1065c:	muleq	r1, r8, r7
   10660:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10664:	mov	r7, r0
   10668:	ldr	r6, [pc, #72]	; 106b8 <abort@plt+0x344>
   1066c:	ldr	r5, [pc, #72]	; 106bc <abort@plt+0x348>
   10670:	add	r6, pc, r6
   10674:	add	r5, pc, r5
   10678:	sub	r6, r6, r5
   1067c:	mov	r8, r1
   10680:	mov	r9, r2
   10684:	bl	10318 <getenv@plt-0x20>
   10688:	asrs	r6, r6, #2
   1068c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10690:	mov	r4, #0
   10694:	add	r4, r4, #1
   10698:	ldr	r3, [r5], #4
   1069c:	mov	r2, r9
   106a0:	mov	r1, r8
   106a4:	mov	r0, r7
   106a8:	blx	r3
   106ac:	cmp	r6, r4
   106b0:	bne	10694 <abort@plt+0x320>
   106b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   106b8:	muleq	r1, r8, r8
   106bc:	muleq	r1, r0, r8
   106c0:	bx	lr

Disassembly of section .fini:

000106c4 <.fini>:
   106c4:	push	{r3, lr}
   106c8:	pop	{r3, pc}
