
../repos/coreutils/src/seq:     file format elf32-littlearm


Disassembly of section .init:

00010d24 <.init>:
   10d24:	push	{r3, lr}
   10d28:	bl	1102c <strspn@plt+0x48>
   10d2c:	pop	{r3, pc}

Disassembly of section .plt:

00010d30 <calloc@plt-0x14>:
   10d30:	push	{lr}		; (str lr, [sp, #-4]!)
   10d34:	ldr	lr, [pc, #4]	; 10d40 <calloc@plt-0x4>
   10d38:	add	lr, pc, lr
   10d3c:	ldr	pc, [lr, #8]!
   10d40:	andeq	r6, r1, r0, asr #5

00010d44 <calloc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #90112	; 0x16000
   10d4c:	ldr	pc, [ip, #704]!	; 0x2c0

00010d50 <fputs_unlocked@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #90112	; 0x16000
   10d58:	ldr	pc, [ip, #696]!	; 0x2b8

00010d5c <raise@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #90112	; 0x16000
   10d64:	ldr	pc, [ip, #688]!	; 0x2b0

00010d68 <uselocale@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #90112	; 0x16000
   10d70:	ldr	pc, [ip, #680]!	; 0x2a8

00010d74 <strcmp@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #90112	; 0x16000
   10d7c:	ldr	pc, [ip, #672]!	; 0x2a0

00010d80 <strtol@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #90112	; 0x16000
   10d88:	ldr	pc, [ip, #664]!	; 0x298

00010d8c <strcspn@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #90112	; 0x16000
   10d94:	ldr	pc, [ip, #656]!	; 0x290

00010d98 <fflush@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #90112	; 0x16000
   10da0:	ldr	pc, [ip, #648]!	; 0x288

00010da4 <memmove@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #90112	; 0x16000
   10dac:	ldr	pc, [ip, #640]!	; 0x280

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #90112	; 0x16000
   10db8:	ldr	pc, [ip, #632]!	; 0x278

00010dbc <_exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #90112	; 0x16000
   10dc4:	ldr	pc, [ip, #624]!	; 0x270

00010dc8 <memcpy@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #90112	; 0x16000
   10dd0:	ldr	pc, [ip, #616]!	; 0x268

00010dd4 <mbsinit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #90112	; 0x16000
   10ddc:	ldr	pc, [ip, #608]!	; 0x260

00010de0 <strtold@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #90112	; 0x16000
   10de8:	ldr	pc, [ip, #600]!	; 0x258

00010dec <fwrite_unlocked@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #592]!	; 0x250

00010df8 <memcmp@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #584]!	; 0x248

00010e04 <fputc_unlocked@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #576]!	; 0x240

00010e10 <dcgettext@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #568]!	; 0x238

00010e1c <realloc@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #560]!	; 0x230

00010e28 <textdomain@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #552]!	; 0x228

00010e34 <iswprint@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #544]!	; 0x220

00010e40 <fwrite@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #536]!	; 0x218

00010e4c <lseek64@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #528]!	; 0x210

00010e58 <__ctype_get_mb_cur_max@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #520]!	; 0x208

00010e64 <strcpy@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #512]!	; 0x200

00010e70 <__fpending@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #504]!	; 0x1f8

00010e7c <mbrtowc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #496]!	; 0x1f0

00010e88 <error@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #488]!	; 0x1e8

00010e94 <__asprintf_chk@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #480]!	; 0x1e0

00010ea0 <malloc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #472]!	; 0x1d8

00010eac <__libc_start_main@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #464]!	; 0x1d0

00010eb8 <__freading@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #456]!	; 0x1c8

00010ec4 <__gmon_start__@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #448]!	; 0x1c0

00010ed0 <mempcpy@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #440]!	; 0x1b8

00010edc <getopt_long@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ee8 <__ctype_b_loc@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ef4 <exit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #416]!	; 0x1a0

00010f00 <strlen@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #408]!	; 0x198

00010f0c <strchr@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #400]!	; 0x190

00010f18 <__errno_location@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #392]!	; 0x188

00010f24 <__sprintf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #384]!	; 0x180

00010f30 <__cxa_atexit@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #376]!	; 0x178

00010f3c <memset@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #368]!	; 0x170

00010f48 <__printf_chk@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #360]!	; 0x168

00010f54 <fileno@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #352]!	; 0x160

00010f60 <__fprintf_chk@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #344]!	; 0x158

00010f6c <fclose@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #336]!	; 0x150

00010f78 <fseeko64@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #328]!	; 0x148

00010f84 <setlocale@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #320]!	; 0x140

00010f90 <strrchr@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #312]!	; 0x138

00010f9c <nl_langinfo@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #304]!	; 0x130

00010fa8 <newlocale@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #296]!	; 0x128

00010fb4 <clearerr_unlocked@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #288]!	; 0x120

00010fc0 <bindtextdomain@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #90112	; 0x16000
   10fc8:	ldr	pc, [ip, #280]!	; 0x118

00010fcc <strncmp@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #90112	; 0x16000
   10fd4:	ldr	pc, [ip, #272]!	; 0x110

00010fd8 <abort@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #90112	; 0x16000
   10fe0:	ldr	pc, [ip, #264]!	; 0x108

00010fe4 <strspn@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #90112	; 0x16000
   10fec:	ldr	pc, [ip, #256]!	; 0x100

Disassembly of section .text:

00010ff0 <.text>:
   10ff0:	mov	fp, #0
   10ff4:	mov	lr, #0
   10ff8:	pop	{r1}		; (ldr r1, [sp], #4)
   10ffc:	mov	r2, sp
   11000:	push	{r2}		; (str r2, [sp, #-4]!)
   11004:	push	{r0}		; (str r0, [sp, #-4]!)
   11008:	ldr	ip, [pc, #16]	; 11020 <strspn@plt+0x3c>
   1100c:	push	{ip}		; (str ip, [sp, #-4]!)
   11010:	ldr	r0, [pc, #12]	; 11024 <strspn@plt+0x40>
   11014:	ldr	r3, [pc, #12]	; 11028 <strspn@plt+0x44>
   11018:	bl	10eac <__libc_start_main@plt>
   1101c:	bl	10fd8 <abort@plt>
   11020:	strdeq	r5, [r1], -r0
   11024:	muleq	r1, r8, fp
   11028:	muleq	r1, r0, fp
   1102c:	ldr	r3, [pc, #20]	; 11048 <strspn@plt+0x64>
   11030:	ldr	r2, [pc, #20]	; 1104c <strspn@plt+0x68>
   11034:	add	r3, pc, r3
   11038:	ldr	r2, [r3, r2]
   1103c:	cmp	r2, #0
   11040:	bxeq	lr
   11044:	b	10ec4 <__gmon_start__@plt>
   11048:	andeq	r5, r1, r4, asr #31
   1104c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11050:	ldr	r3, [pc, #28]	; 11074 <strspn@plt+0x90>
   11054:	ldr	r0, [pc, #28]	; 11078 <strspn@plt+0x94>
   11058:	sub	r3, r3, r0
   1105c:	cmp	r3, #6
   11060:	bxls	lr
   11064:	ldr	r3, [pc, #16]	; 1107c <strspn@plt+0x98>
   11068:	cmp	r3, #0
   1106c:	bxeq	lr
   11070:	bx	r3
   11074:	andeq	r7, r2, r7, asr #2
   11078:	andeq	r7, r2, r4, asr #2
   1107c:	andeq	r0, r0, r0
   11080:	ldr	r1, [pc, #36]	; 110ac <strspn@plt+0xc8>
   11084:	ldr	r0, [pc, #36]	; 110b0 <strspn@plt+0xcc>
   11088:	sub	r1, r1, r0
   1108c:	asr	r1, r1, #2
   11090:	add	r1, r1, r1, lsr #31
   11094:	asrs	r1, r1, #1
   11098:	bxeq	lr
   1109c:	ldr	r3, [pc, #16]	; 110b4 <strspn@plt+0xd0>
   110a0:	cmp	r3, #0
   110a4:	bxeq	lr
   110a8:	bx	r3
   110ac:	andeq	r7, r2, r4, asr #2
   110b0:	andeq	r7, r2, r4, asr #2
   110b4:	andeq	r0, r0, r0
   110b8:	push	{r4, lr}
   110bc:	ldr	r4, [pc, #24]	; 110dc <strspn@plt+0xf8>
   110c0:	ldrb	r3, [r4]
   110c4:	cmp	r3, #0
   110c8:	popne	{r4, pc}
   110cc:	bl	11050 <strspn@plt+0x6c>
   110d0:	mov	r3, #1
   110d4:	strb	r3, [r4]
   110d8:	pop	{r4, pc}
   110dc:	andeq	r7, r2, r4, ror #2
   110e0:	ldr	r0, [pc, #40]	; 11110 <strspn@plt+0x12c>
   110e4:	ldr	r3, [r0]
   110e8:	cmp	r3, #0
   110ec:	bne	110f4 <strspn@plt+0x110>
   110f0:	b	11080 <strspn@plt+0x9c>
   110f4:	ldr	r3, [pc, #24]	; 11114 <strspn@plt+0x130>
   110f8:	cmp	r3, #0
   110fc:	beq	110f0 <strspn@plt+0x10c>
   11100:	push	{r4, lr}
   11104:	blx	r3
   11108:	pop	{r4, lr}
   1110c:	b	11080 <strspn@plt+0x9c>
   11110:	andeq	r6, r2, r4, lsl pc
   11114:	andeq	r0, r0, r0
   11118:	push	{r4, r5, r6, lr}
   1111c:	mov	r5, r0
   11120:	bl	10f00 <strlen@plt>
   11124:	ldrb	r3, [r5]
   11128:	sub	r3, r3, #48	; 0x30
   1112c:	cmp	r3, #9
   11130:	bhi	11154 <strspn@plt+0x170>
   11134:	mov	r4, r0
   11138:	ldr	r1, [pc, #28]	; 1115c <strspn@plt+0x178>
   1113c:	mov	r0, r5
   11140:	bl	10fe4 <strspn@plt>
   11144:	cmp	r4, r0
   11148:	movne	r0, #0
   1114c:	moveq	r0, #1
   11150:	pop	{r4, r5, r6, pc}
   11154:	mov	r0, #0
   11158:	pop	{r4, r5, r6, pc}
   1115c:	andeq	r5, r1, ip, asr #25
   11160:	push	{r4, lr}
   11164:	ldr	r3, [pc, #44]	; 11198 <strspn@plt+0x1b4>
   11168:	ldr	r0, [r3]
   1116c:	bl	10fb4 <clearerr_unlocked@plt>
   11170:	bl	10f18 <__errno_location@plt>
   11174:	ldr	r4, [r0]
   11178:	mov	r2, #5
   1117c:	ldr	r1, [pc, #24]	; 1119c <strspn@plt+0x1b8>
   11180:	mov	r0, #0
   11184:	bl	10e10 <dcgettext@plt>
   11188:	mov	r2, r0
   1118c:	mov	r1, r4
   11190:	mov	r0, #1
   11194:	bl	10e88 <error@plt>
   11198:	andeq	r7, r2, ip, asr r1
   1119c:	ldrdeq	r5, [r1], -r8
   111a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111a4:	sub	sp, sp, #28
   111a8:	mov	r6, r0
   111ac:	mov	r4, r1
   111b0:	str	r2, [sp, #16]
   111b4:	str	r3, [sp, #20]
   111b8:	ldr	r1, [pc, #796]	; 114dc <strspn@plt+0x4f8>
   111bc:	mov	r0, r4
   111c0:	bl	10d74 <strcmp@plt>
   111c4:	str	r0, [sp, #4]
   111c8:	mov	r3, r6
   111cc:	mov	r5, r3
   111d0:	ldrb	r2, [r3], #1
   111d4:	cmp	r2, #48	; 0x30
   111d8:	beq	111cc <strspn@plt+0x1e8>
   111dc:	subs	r6, r6, r5
   111e0:	movne	r6, #1
   111e4:	cmp	r2, #0
   111e8:	movne	r6, #0
   111ec:	cmp	r6, #0
   111f0:	subne	r5, r5, #1
   111f4:	mov	r2, r4
   111f8:	mov	r6, r2
   111fc:	ldrb	r3, [r2], #1
   11200:	cmp	r3, #48	; 0x30
   11204:	beq	111f8 <strspn@plt+0x214>
   11208:	clz	r3, r3
   1120c:	lsr	r3, r3, #5
   11210:	cmp	r4, r6
   11214:	moveq	r3, #0
   11218:	cmp	r3, #0
   1121c:	subne	r6, r6, #1
   11220:	mov	r0, r5
   11224:	bl	10f00 <strlen@plt>
   11228:	mov	r4, r0
   1122c:	ldr	r3, [sp, #4]
   11230:	cmp	r3, #0
   11234:	moveq	sl, #0
   11238:	beq	11248 <strspn@plt+0x264>
   1123c:	mov	r0, r6
   11240:	bl	10f00 <strlen@plt>
   11244:	mov	sl, r0
   11248:	add	r7, r4, #1
   1124c:	cmp	r7, #31
   11250:	movcs	r9, r7
   11254:	movcc	r9, #31
   11258:	cmp	r9, sl
   1125c:	movcc	r9, sl
   11260:	add	r8, r9, #1
   11264:	mov	r0, r8
   11268:	bl	14a9c <strspn@plt+0x3ab8>
   1126c:	str	r0, [sp]
   11270:	sub	r0, r9, r4
   11274:	mov	r2, r7
   11278:	mov	r1, r5
   1127c:	ldr	r3, [sp]
   11280:	add	r0, r3, r0
   11284:	bl	10dc8 <memcpy@plt>
   11288:	mov	r5, r0
   1128c:	ldr	r3, [sp, #4]
   11290:	cmp	r3, #0
   11294:	moveq	r7, #0
   11298:	streq	r7, [sp, #12]
   1129c:	moveq	r0, #1
   112a0:	beq	112fc <strspn@plt+0x318>
   112a4:	mov	r0, r8
   112a8:	bl	14a9c <strspn@plt+0x3ab8>
   112ac:	mov	r7, r0
   112b0:	sub	r0, r9, sl
   112b4:	add	r2, sl, #1
   112b8:	mov	r1, r6
   112bc:	add	r0, r7, r0
   112c0:	bl	10dc8 <memcpy@plt>
   112c4:	mov	r6, r0
   112c8:	cmp	sl, r4
   112cc:	mvnhi	r0, #0
   112d0:	bhi	112ec <strspn@plt+0x308>
   112d4:	movcc	r0, #1
   112d8:	bcc	112ec <strspn@plt+0x308>
   112dc:	mov	r2, r4
   112e0:	mov	r1, r6
   112e4:	mov	r0, r5
   112e8:	bl	10df8 <memcmp@plt>
   112ec:	cmp	r0, #0
   112f0:	movgt	r0, #0
   112f4:	movle	r0, #1
   112f8:	str	r6, [sp, #12]
   112fc:	cmp	r0, #0
   11300:	beq	114c4 <strspn@plt+0x4e0>
   11304:	lsl	r8, r8, #1
   11308:	cmp	r8, #8192	; 0x2000
   1130c:	movcc	r8, #8192	; 0x2000
   11310:	mov	r0, r8
   11314:	bl	14a9c <strspn@plt+0x3ab8>
   11318:	mov	r7, r0
   1131c:	add	r3, r0, r8
   11320:	str	r3, [sp, #8]
   11324:	mov	r2, r4
   11328:	mov	r1, r5
   1132c:	bl	10ed0 <mempcpy@plt>
   11330:	mov	r6, r0
   11334:	ldr	r0, [sp, #16]
   11338:	ldr	r1, [sp, #20]
   1133c:	orrs	r3, r0, r1
   11340:	bne	11444 <strspn@plt+0x460>
   11344:	ldr	r3, [sp, #4]
   11348:	cmp	r3, #0
   1134c:	beq	11374 <strspn@plt+0x390>
   11350:	cmp	sl, r4
   11354:	bhi	11374 <strspn@plt+0x390>
   11358:	bcc	11490 <strspn@plt+0x4ac>
   1135c:	mov	r2, r4
   11360:	ldr	r1, [sp, #12]
   11364:	mov	r0, r5
   11368:	bl	10df8 <memcmp@plt>
   1136c:	cmp	r0, #0
   11370:	bgt	11490 <strspn@plt+0x4ac>
   11374:	add	fp, r6, #1
   11378:	ldr	r3, [pc, #352]	; 114e0 <strspn@plt+0x4fc>
   1137c:	ldr	r3, [r3]
   11380:	ldrb	r3, [r3]
   11384:	strb	r3, [r6]
   11388:	cmp	r9, r4
   1138c:	bne	113ec <strspn@plt+0x408>
   11390:	lsl	r9, r9, #1
   11394:	add	r6, r9, #1
   11398:	mov	r1, r6
   1139c:	ldr	r0, [sp]
   113a0:	bl	14ad0 <strspn@plt+0x3aec>
   113a4:	str	r0, [sp]
   113a8:	add	r2, r4, #1
   113ac:	mov	r1, r0
   113b0:	add	r0, r0, r4
   113b4:	bl	10da4 <memmove@plt>
   113b8:	mov	r5, r0
   113bc:	lsl	r6, r6, #1
   113c0:	cmp	r8, r6
   113c4:	bcs	113ec <strspn@plt+0x408>
   113c8:	sub	fp, fp, r7
   113cc:	mov	r1, r6
   113d0:	mov	r0, r7
   113d4:	bl	14ad0 <strspn@plt+0x3aec>
   113d8:	mov	r7, r0
   113dc:	add	r3, r0, r6
   113e0:	str	r3, [sp, #8]
   113e4:	add	fp, r0, fp
   113e8:	mov	r8, r6
   113ec:	mov	r2, r4
   113f0:	mov	r1, r5
   113f4:	mov	r0, fp
   113f8:	bl	10ed0 <mempcpy@plt>
   113fc:	mvn	r3, r4
   11400:	ldr	r2, [sp, #8]
   11404:	add	r3, r2, r3
   11408:	cmp	r0, r3
   1140c:	bls	11434 <strspn@plt+0x450>
   11410:	ldr	r3, [pc, #204]	; 114e4 <strspn@plt+0x500>
   11414:	ldr	r3, [r3]
   11418:	mov	r2, #1
   1141c:	sub	r1, r0, r7
   11420:	mov	r0, r7
   11424:	bl	10dec <fwrite_unlocked@plt>
   11428:	cmp	r0, #1
   1142c:	beq	1143c <strspn@plt+0x458>
   11430:	bl	11160 <strspn@plt+0x17c>
   11434:	mov	r6, r0
   11438:	b	11334 <strspn@plt+0x350>
   1143c:	mov	r6, r7
   11440:	b	11334 <strspn@plt+0x350>
   11444:	sub	r3, r4, #1
   11448:	add	r3, r5, r3
   1144c:	ldrb	r2, [r3]
   11450:	cmp	r2, #56	; 0x38
   11454:	bhi	1146c <strspn@plt+0x488>
   11458:	add	r2, r2, #1
   1145c:	strb	r2, [r3]
   11460:	subs	r0, r0, #1
   11464:	sbc	r1, r1, #0
   11468:	b	1133c <strspn@plt+0x358>
   1146c:	mov	r2, #48	; 0x30
   11470:	strb	r2, [r3], #-1
   11474:	cmp	r3, r5
   11478:	bcs	1144c <strspn@plt+0x468>
   1147c:	mov	r3, #49	; 0x31
   11480:	strb	r3, [r5, #-1]
   11484:	add	r4, r4, #1
   11488:	sub	r5, r5, #1
   1148c:	b	11460 <strspn@plt+0x47c>
   11490:	mov	r3, #10
   11494:	strb	r3, [r6], #1
   11498:	ldr	r3, [pc, #68]	; 114e4 <strspn@plt+0x500>
   1149c:	ldr	r3, [r3]
   114a0:	mov	r2, #1
   114a4:	sub	r1, r6, r7
   114a8:	mov	r0, r7
   114ac:	bl	10dec <fwrite_unlocked@plt>
   114b0:	cmp	r0, #1
   114b4:	beq	114bc <strspn@plt+0x4d8>
   114b8:	bl	11160 <strspn@plt+0x17c>
   114bc:	mov	r0, #0
   114c0:	bl	10ef4 <exit@plt>
   114c4:	ldr	r0, [sp]
   114c8:	bl	1295c <strspn@plt+0x1978>
   114cc:	mov	r0, r7
   114d0:	bl	1295c <strspn@plt+0x1978>
   114d4:	add	sp, sp, #28
   114d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114dc:	andeq	r5, r1, r4, ror #25
   114e0:	andeq	r7, r2, r8, ror #2
   114e4:	andeq	r7, r2, ip, asr r1
   114e8:	push	{lr}		; (str lr, [sp, #-4]!)
   114ec:	sub	sp, sp, #68	; 0x44
   114f0:	subs	r6, r0, #0
   114f4:	beq	11530 <strspn@plt+0x54c>
   114f8:	ldr	r3, [pc, #784]	; 11810 <strspn@plt+0x82c>
   114fc:	ldr	r4, [r3]
   11500:	mov	r2, #5
   11504:	ldr	r1, [pc, #776]	; 11814 <strspn@plt+0x830>
   11508:	mov	r0, #0
   1150c:	bl	10e10 <dcgettext@plt>
   11510:	ldr	r3, [pc, #768]	; 11818 <strspn@plt+0x834>
   11514:	ldr	r3, [r3]
   11518:	mov	r2, r0
   1151c:	mov	r1, #1
   11520:	mov	r0, r4
   11524:	bl	10f60 <__fprintf_chk@plt>
   11528:	mov	r0, r6
   1152c:	bl	10ef4 <exit@plt>
   11530:	mov	r2, #5
   11534:	ldr	r1, [pc, #736]	; 1181c <strspn@plt+0x838>
   11538:	mov	r0, #0
   1153c:	bl	10e10 <dcgettext@plt>
   11540:	ldr	r3, [pc, #720]	; 11818 <strspn@plt+0x834>
   11544:	ldr	r2, [r3]
   11548:	str	r2, [sp]
   1154c:	mov	r3, r2
   11550:	mov	r1, r0
   11554:	mov	r0, #1
   11558:	bl	10f48 <__printf_chk@plt>
   1155c:	mov	r2, #5
   11560:	ldr	r1, [pc, #696]	; 11820 <strspn@plt+0x83c>
   11564:	mov	r0, #0
   11568:	bl	10e10 <dcgettext@plt>
   1156c:	ldr	r4, [pc, #688]	; 11824 <strspn@plt+0x840>
   11570:	ldr	r1, [r4]
   11574:	bl	10d50 <fputs_unlocked@plt>
   11578:	mov	r2, #5
   1157c:	ldr	r1, [pc, #676]	; 11828 <strspn@plt+0x844>
   11580:	mov	r0, #0
   11584:	bl	10e10 <dcgettext@plt>
   11588:	ldr	r1, [r4]
   1158c:	bl	10d50 <fputs_unlocked@plt>
   11590:	mov	r2, #5
   11594:	ldr	r1, [pc, #656]	; 1182c <strspn@plt+0x848>
   11598:	mov	r0, #0
   1159c:	bl	10e10 <dcgettext@plt>
   115a0:	ldr	r1, [r4]
   115a4:	bl	10d50 <fputs_unlocked@plt>
   115a8:	mov	r2, #5
   115ac:	ldr	r1, [pc, #636]	; 11830 <strspn@plt+0x84c>
   115b0:	mov	r0, #0
   115b4:	bl	10e10 <dcgettext@plt>
   115b8:	ldr	r1, [r4]
   115bc:	bl	10d50 <fputs_unlocked@plt>
   115c0:	mov	r2, #5
   115c4:	ldr	r1, [pc, #616]	; 11834 <strspn@plt+0x850>
   115c8:	mov	r0, #0
   115cc:	bl	10e10 <dcgettext@plt>
   115d0:	ldr	r1, [r4]
   115d4:	bl	10d50 <fputs_unlocked@plt>
   115d8:	mov	r2, #5
   115dc:	ldr	r1, [pc, #596]	; 11838 <strspn@plt+0x854>
   115e0:	mov	r0, #0
   115e4:	bl	10e10 <dcgettext@plt>
   115e8:	ldr	r1, [r4]
   115ec:	bl	10d50 <fputs_unlocked@plt>
   115f0:	mov	r2, #5
   115f4:	ldr	r1, [pc, #576]	; 1183c <strspn@plt+0x858>
   115f8:	mov	r0, #0
   115fc:	bl	10e10 <dcgettext@plt>
   11600:	ldr	r1, [r4]
   11604:	bl	10d50 <fputs_unlocked@plt>
   11608:	add	ip, sp, #8
   1160c:	ldr	lr, [pc, #556]	; 11840 <strspn@plt+0x85c>
   11610:	ldm	lr!, {r0, r1, r2, r3}
   11614:	stmia	ip!, {r0, r1, r2, r3}
   11618:	ldm	lr!, {r0, r1, r2, r3}
   1161c:	stmia	ip!, {r0, r1, r2, r3}
   11620:	ldm	lr!, {r0, r1, r2, r3}
   11624:	stmia	ip!, {r0, r1, r2, r3}
   11628:	ldm	lr, {r0, r1}
   1162c:	stm	ip, {r0, r1}
   11630:	ldr	r1, [sp, #8]
   11634:	cmp	r1, #0
   11638:	addeq	r4, sp, #8
   1163c:	beq	11664 <strspn@plt+0x680>
   11640:	add	r4, sp, #8
   11644:	ldr	r5, [pc, #504]	; 11844 <strspn@plt+0x860>
   11648:	mov	r0, r5
   1164c:	bl	10d74 <strcmp@plt>
   11650:	cmp	r0, #0
   11654:	beq	11664 <strspn@plt+0x680>
   11658:	ldr	r1, [r4, #8]!
   1165c:	cmp	r1, #0
   11660:	bne	11648 <strspn@plt+0x664>
   11664:	ldr	r4, [r4, #4]
   11668:	cmp	r4, #0
   1166c:	beq	11780 <strspn@plt+0x79c>
   11670:	mov	r2, #5
   11674:	ldr	r1, [pc, #460]	; 11848 <strspn@plt+0x864>
   11678:	mov	r0, #0
   1167c:	bl	10e10 <dcgettext@plt>
   11680:	ldr	r3, [pc, #452]	; 1184c <strspn@plt+0x868>
   11684:	ldr	r2, [pc, #452]	; 11850 <strspn@plt+0x86c>
   11688:	mov	r1, r0
   1168c:	mov	r0, #1
   11690:	bl	10f48 <__printf_chk@plt>
   11694:	mov	r1, #0
   11698:	mov	r0, #5
   1169c:	bl	10f84 <setlocale@plt>
   116a0:	cmp	r0, #0
   116a4:	beq	116bc <strspn@plt+0x6d8>
   116a8:	mov	r2, #3
   116ac:	ldr	r1, [pc, #416]	; 11854 <strspn@plt+0x870>
   116b0:	bl	10fcc <strncmp@plt>
   116b4:	cmp	r0, #0
   116b8:	bne	1171c <strspn@plt+0x738>
   116bc:	mov	r2, #5
   116c0:	ldr	r1, [pc, #400]	; 11858 <strspn@plt+0x874>
   116c4:	mov	r0, #0
   116c8:	bl	10e10 <dcgettext@plt>
   116cc:	ldr	r5, [pc, #368]	; 11844 <strspn@plt+0x860>
   116d0:	mov	r3, r5
   116d4:	ldr	r2, [pc, #368]	; 1184c <strspn@plt+0x868>
   116d8:	mov	r1, r0
   116dc:	mov	r0, #1
   116e0:	bl	10f48 <__printf_chk@plt>
   116e4:	mov	r2, #5
   116e8:	ldr	r1, [pc, #364]	; 1185c <strspn@plt+0x878>
   116ec:	mov	r0, #0
   116f0:	bl	10e10 <dcgettext@plt>
   116f4:	mov	r1, r0
   116f8:	ldr	r2, [pc, #352]	; 11860 <strspn@plt+0x87c>
   116fc:	ldr	r3, [pc, #352]	; 11864 <strspn@plt+0x880>
   11700:	cmp	r4, r5
   11704:	movne	r3, r2
   11708:	mov	r2, r4
   1170c:	mov	r0, #1
   11710:	bl	10f48 <__printf_chk@plt>
   11714:	b	11528 <strspn@plt+0x544>
   11718:	ldr	r4, [pc, #292]	; 11844 <strspn@plt+0x860>
   1171c:	mov	r2, #5
   11720:	ldr	r1, [pc, #320]	; 11868 <strspn@plt+0x884>
   11724:	mov	r0, #0
   11728:	bl	10e10 <dcgettext@plt>
   1172c:	ldr	r3, [pc, #240]	; 11824 <strspn@plt+0x840>
   11730:	ldr	r1, [r3]
   11734:	bl	10d50 <fputs_unlocked@plt>
   11738:	b	116bc <strspn@plt+0x6d8>
   1173c:	mov	r2, #5
   11740:	ldr	r1, [pc, #272]	; 11858 <strspn@plt+0x874>
   11744:	mov	r0, #0
   11748:	bl	10e10 <dcgettext@plt>
   1174c:	ldr	r4, [pc, #240]	; 11844 <strspn@plt+0x860>
   11750:	mov	r3, r4
   11754:	ldr	r2, [pc, #240]	; 1184c <strspn@plt+0x868>
   11758:	mov	r1, r0
   1175c:	mov	r0, #1
   11760:	bl	10f48 <__printf_chk@plt>
   11764:	mov	r2, #5
   11768:	ldr	r1, [pc, #236]	; 1185c <strspn@plt+0x878>
   1176c:	mov	r0, #0
   11770:	bl	10e10 <dcgettext@plt>
   11774:	mov	r1, r0
   11778:	ldr	r3, [pc, #228]	; 11864 <strspn@plt+0x880>
   1177c:	b	11708 <strspn@plt+0x724>
   11780:	mov	r2, #5
   11784:	ldr	r1, [pc, #188]	; 11848 <strspn@plt+0x864>
   11788:	mov	r0, #0
   1178c:	bl	10e10 <dcgettext@plt>
   11790:	ldr	r3, [pc, #180]	; 1184c <strspn@plt+0x868>
   11794:	ldr	r2, [pc, #180]	; 11850 <strspn@plt+0x86c>
   11798:	mov	r1, r0
   1179c:	mov	r0, #1
   117a0:	bl	10f48 <__printf_chk@plt>
   117a4:	mov	r1, #0
   117a8:	mov	r0, #5
   117ac:	bl	10f84 <setlocale@plt>
   117b0:	cmp	r0, #0
   117b4:	beq	1173c <strspn@plt+0x758>
   117b8:	mov	r2, #3
   117bc:	ldr	r1, [pc, #144]	; 11854 <strspn@plt+0x870>
   117c0:	bl	10fcc <strncmp@plt>
   117c4:	cmp	r0, #0
   117c8:	bne	11718 <strspn@plt+0x734>
   117cc:	mov	r2, #5
   117d0:	ldr	r1, [pc, #128]	; 11858 <strspn@plt+0x874>
   117d4:	mov	r0, #0
   117d8:	bl	10e10 <dcgettext@plt>
   117dc:	ldr	r4, [pc, #96]	; 11844 <strspn@plt+0x860>
   117e0:	mov	r3, r4
   117e4:	ldr	r2, [pc, #96]	; 1184c <strspn@plt+0x868>
   117e8:	mov	r1, r0
   117ec:	mov	r0, #1
   117f0:	bl	10f48 <__printf_chk@plt>
   117f4:	mov	r2, #5
   117f8:	ldr	r1, [pc, #92]	; 1185c <strspn@plt+0x878>
   117fc:	mov	r0, #0
   11800:	bl	10e10 <dcgettext@plt>
   11804:	mov	r1, r0
   11808:	ldr	r3, [pc, #84]	; 11864 <strspn@plt+0x880>
   1180c:	b	11708 <strspn@plt+0x724>
   11810:	andeq	r7, r2, r8, asr r1
   11814:	andeq	r5, r1, ip, ror #25
   11818:	muleq	r2, r4, r1
   1181c:	andeq	r5, r1, r4, lsl sp
   11820:	andeq	r5, r1, ip, ror sp
   11824:	andeq	r7, r2, ip, asr r1
   11828:			; <UNDEFINED> instruction: 0x00015db8
   1182c:	andeq	r5, r1, r4, lsl #28
   11830:	ldrdeq	r5, [r1], -r8
   11834:	andeq	r5, r1, r8, lsl #30
   11838:	andeq	r5, r1, r0, asr #30
   1183c:	andeq	r6, r1, r4, asr #2
   11840:	andeq	r5, r1, r0, lsr #24
   11844:	andeq	r5, r1, r8, ror #25
   11848:	andeq	r6, r1, r4, lsl r2
   1184c:	andeq	r6, r1, ip, lsr #4
   11850:	andeq	r6, r1, r4, asr r2
   11854:	andeq	r6, r1, r4, ror #4
   11858:			; <UNDEFINED> instruction: 0x000162b0
   1185c:	andeq	r6, r1, ip, asr #5
   11860:	andeq	r6, r1, r0, asr #2
   11864:	andeq	r6, r1, r0, ror #9
   11868:	andeq	r6, r1, r8, ror #4
   1186c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11870:	vpush	{d8}
   11874:	sub	sp, sp, #28
   11878:	mov	r6, r0
   1187c:	mov	r4, r1
   11880:	ldr	r3, [pc, #760]	; 11b80 <strspn@plt+0xb9c>
   11884:	add	r2, sp, #8
   11888:	mov	r1, #0
   1188c:	mov	r0, r4
   11890:	bl	15080 <strspn@plt+0x409c>
   11894:	subs	r7, r0, #0
   11898:	beq	118b8 <strspn@plt+0x8d4>
   1189c:	vldr	d8, [sp, #8]
   118a0:	vcmp.f64	d8, d8
   118a4:	vmrs	APSR_nzcv, fpscr
   118a8:	bne	118ec <strspn@plt+0x908>
   118ac:	bl	10ee8 <__ctype_b_loc@plt>
   118b0:	ldr	r0, [r0]
   118b4:	b	11940 <strspn@plt+0x95c>
   118b8:	mov	r2, #5
   118bc:	ldr	r1, [pc, #704]	; 11b84 <strspn@plt+0xba0>
   118c0:	bl	10e10 <dcgettext@plt>
   118c4:	mov	r5, r0
   118c8:	mov	r0, r4
   118cc:	bl	14504 <strspn@plt+0x3520>
   118d0:	mov	r3, r0
   118d4:	mov	r2, r5
   118d8:	mov	r1, #0
   118dc:	mov	r0, r1
   118e0:	bl	10e88 <error@plt>
   118e4:	mov	r0, #1
   118e8:	bl	114e8 <strspn@plt+0x504>
   118ec:	mov	r2, #5
   118f0:	ldr	r1, [pc, #656]	; 11b88 <strspn@plt+0xba4>
   118f4:	mov	r0, #0
   118f8:	bl	10e10 <dcgettext@plt>
   118fc:	mov	r5, r0
   11900:	ldr	r1, [pc, #644]	; 11b8c <strspn@plt+0xba8>
   11904:	mov	r0, #0
   11908:	bl	144f4 <strspn@plt+0x3510>
   1190c:	mov	r6, r0
   11910:	mov	r1, r4
   11914:	mov	r0, #1
   11918:	bl	144f4 <strspn@plt+0x3510>
   1191c:	str	r0, [sp]
   11920:	mov	r3, r6
   11924:	mov	r2, r5
   11928:	mov	r1, #0
   1192c:	mov	r0, r1
   11930:	bl	10e88 <error@plt>
   11934:	mov	r0, #1
   11938:	bl	114e8 <strspn@plt+0x504>
   1193c:	mov	r4, r2
   11940:	mov	r5, r4
   11944:	mov	r2, r4
   11948:	ldrb	r1, [r2], #1
   1194c:	lsl	r3, r1, #1
   11950:	ldrh	r3, [r0, r3]
   11954:	lsr	r3, r3, #13
   11958:	cmp	r1, #43	; 0x2b
   1195c:	orreq	r3, r3, #1
   11960:	tst	r3, #1
   11964:	bne	1193c <strspn@plt+0x958>
   11968:	mov	r3, #0
   1196c:	str	r3, [sp, #16]
   11970:	mvn	r3, #-2147483648	; 0x80000000
   11974:	str	r3, [sp, #20]
   11978:	mov	r1, #46	; 0x2e
   1197c:	mov	r0, r4
   11980:	bl	10f0c <strchr@plt>
   11984:	subs	r8, r0, #0
   11988:	beq	11a90 <strspn@plt+0xaac>
   1198c:	ldr	r1, [pc, #508]	; 11b90 <strspn@plt+0xbac>
   11990:	mov	r0, r5
   11994:	bl	10d8c <strcspn@plt>
   11998:	ldrb	r3, [r5, r0]
   1199c:	cmp	r3, #0
   119a0:	bne	11b4c <strspn@plt+0xb68>
   119a4:	vldr	d7, [pc, #460]	; 11b78 <strspn@plt+0xb94>
   119a8:	vmul.f64	d8, d8, d7
   119ac:	vcmp.f64	d8, d7
   119b0:	vmrs	APSR_nzcv, fpscr
   119b4:	bne	11b4c <strspn@plt+0xb68>
   119b8:	mov	r0, r5
   119bc:	bl	10f00 <strlen@plt>
   119c0:	mov	sl, r0
   119c4:	str	r0, [sp, #16]
   119c8:	cmp	r8, #0
   119cc:	moveq	r9, #0
   119d0:	beq	11a18 <strspn@plt+0xa34>
   119d4:	ldr	r1, [pc, #440]	; 11b94 <strspn@plt+0xbb0>
   119d8:	add	r0, r8, #1
   119dc:	bl	10d8c <strcspn@plt>
   119e0:	subs	r9, r0, #0
   119e4:	strge	r9, [sp, #20]
   119e8:	cmp	r9, #0
   119ec:	mvneq	r7, #0
   119f0:	beq	11a10 <strspn@plt+0xa2c>
   119f4:	cmp	r5, r8
   119f8:	beq	11a10 <strspn@plt+0xa2c>
   119fc:	ldrb	r7, [r8, #-1]
   11a00:	sub	r7, r7, #48	; 0x30
   11a04:	cmp	r7, #9
   11a08:	movls	r7, #0
   11a0c:	movhi	r7, #1
   11a10:	add	r3, r7, sl
   11a14:	str	r3, [sp, #16]
   11a18:	mov	r1, #101	; 0x65
   11a1c:	mov	r0, r5
   11a20:	bl	10f0c <strchr@plt>
   11a24:	subs	r7, r0, #0
   11a28:	beq	11aac <strspn@plt+0xac8>
   11a2c:	add	sl, r7, #1
   11a30:	mov	r2, #10
   11a34:	mov	r1, #0
   11a38:	mov	r0, sl
   11a3c:	bl	10d80 <strtol@plt>
   11a40:	cmp	r0, #-2147483646	; 0x80000002
   11a44:	ldrlt	r3, [sp, #20]
   11a48:	movlt	sl, #-2147483647	; 0x80000001
   11a4c:	bge	11ac4 <strspn@plt+0xae0>
   11a50:	sub	r3, r3, sl
   11a54:	str	r3, [sp, #20]
   11a58:	mov	r0, r5
   11a5c:	bl	10f00 <strlen@plt>
   11a60:	sub	r3, r7, r4
   11a64:	ldr	r2, [sp, #16]
   11a68:	add	r3, r3, r2
   11a6c:	sub	r0, r3, r0
   11a70:	cmp	r8, #0
   11a74:	beq	11b68 <strspn@plt+0xb84>
   11a78:	add	r8, r8, #1
   11a7c:	cmp	r7, r8
   11a80:	addeq	r0, r0, #1
   11a84:	str	r0, [sp, #16]
   11a88:	rsb	r9, sl, #0
   11a8c:	b	11b40 <strspn@plt+0xb5c>
   11a90:	mov	r1, #112	; 0x70
   11a94:	mov	r0, r4
   11a98:	bl	10f0c <strchr@plt>
   11a9c:	cmp	r0, #0
   11aa0:	moveq	r3, #0
   11aa4:	streq	r3, [sp, #20]
   11aa8:	b	1198c <strspn@plt+0x9a8>
   11aac:	mov	r1, #69	; 0x45
   11ab0:	mov	r0, r5
   11ab4:	bl	10f0c <strchr@plt>
   11ab8:	subs	r7, r0, #0
   11abc:	beq	11b4c <strspn@plt+0xb68>
   11ac0:	b	11a2c <strspn@plt+0xa48>
   11ac4:	mov	r2, #10
   11ac8:	mov	r1, #0
   11acc:	mov	r0, sl
   11ad0:	bl	10d80 <strtol@plt>
   11ad4:	ldr	r3, [sp, #20]
   11ad8:	subs	sl, r0, #0
   11adc:	blt	11a50 <strspn@plt+0xa6c>
   11ae0:	cmp	sl, r3
   11ae4:	suble	fp, r3, sl
   11ae8:	subgt	fp, r3, r3
   11aec:	str	fp, [sp, #20]
   11af0:	mov	r0, r5
   11af4:	bl	10f00 <strlen@plt>
   11af8:	sub	r3, r7, r4
   11afc:	ldr	r2, [sp, #16]
   11b00:	add	r3, r3, r2
   11b04:	sub	r3, r3, r0
   11b08:	cmp	r8, #0
   11b0c:	cmpne	r9, #0
   11b10:	movne	r8, #1
   11b14:	moveq	r8, #0
   11b18:	cmp	fp, #0
   11b1c:	movne	fp, #0
   11b20:	andeq	fp, r8, #1
   11b24:	cmp	fp, #0
   11b28:	streq	r3, [sp, #16]
   11b2c:	subne	r3, r3, #1
   11b30:	strne	r3, [sp, #16]
   11b34:	cmp	r9, sl
   11b38:	subls	r9, sl, r9
   11b3c:	subhi	r9, sl, sl
   11b40:	ldr	r3, [sp, #16]
   11b44:	add	r9, r3, r9
   11b48:	str	r9, [sp, #16]
   11b4c:	add	r3, sp, #24
   11b50:	ldmdb	r3, {r0, r1, r2, r3}
   11b54:	stm	r6, {r0, r1, r2, r3}
   11b58:	mov	r0, r6
   11b5c:	add	sp, sp, #28
   11b60:	vpop	{d8}
   11b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b68:	add	r0, r0, #1
   11b6c:	str	r0, [sp, #16]
   11b70:	b	11a88 <strspn@plt+0xaa4>
   11b74:	nop			; (mov r0, r0)
	...
   11b80:	andeq	r2, r1, r8, asr #15
   11b84:	andeq	r6, r1, r0, lsl #6
   11b88:	andeq	r6, r1, r4, lsr #6
   11b8c:	andeq	r6, r1, ip, lsr r3
   11b90:	andeq	r6, r1, ip, asr #6
   11b94:	andeq	r6, r1, r0, asr r3
   11b98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b9c:	vpush	{d8-d14}
   11ba0:	sub	sp, sp, #84	; 0x54
   11ba4:	mov	r6, r0
   11ba8:	mov	r5, r1
   11bac:	ldr	ip, [pc, #2236]	; 12470 <strspn@plt+0x148c>
   11bb0:	ldm	ip, {r0, r1, r2, r3}
   11bb4:	add	lr, sp, #80	; 0x50
   11bb8:	stmdb	lr, {r0, r1, r2, r3}
   11bbc:	add	lr, sp, #48	; 0x30
   11bc0:	stm	lr, {r0, r1, r2, r3}
   11bc4:	ldr	r0, [r5]
   11bc8:	bl	129b4 <strspn@plt+0x19d0>
   11bcc:	ldr	r1, [pc, #2336]	; 124f4 <strspn@plt+0x1510>
   11bd0:	mov	r0, #6
   11bd4:	bl	10f84 <setlocale@plt>
   11bd8:	ldr	r7, [pc, #2300]	; 124dc <strspn@plt+0x14f8>
   11bdc:	adds	r0, r0, #0
   11be0:	movne	r0, #1
   11be4:	strb	r0, [r7, #32]
   11be8:	ldr	r4, [pc, #2180]	; 12474 <strspn@plt+0x1490>
   11bec:	ldr	r1, [pc, #2180]	; 12478 <strspn@plt+0x1494>
   11bf0:	mov	r0, r4
   11bf4:	bl	10fc0 <bindtextdomain@plt>
   11bf8:	mov	r0, r4
   11bfc:	bl	10e28 <textdomain@plt>
   11c00:	ldr	r0, [pc, #2164]	; 1247c <strspn@plt+0x1498>
   11c04:	bl	15bf4 <strspn@plt+0x4c10>
   11c08:	mov	r4, #0
   11c0c:	strb	r4, [r7, #33]	; 0x21
   11c10:	ldr	r3, [pc, #2152]	; 12480 <strspn@plt+0x149c>
   11c14:	str	r3, [r7]
   11c18:	ldr	r7, [pc, #2148]	; 12484 <strspn@plt+0x14a0>
   11c1c:	ldr	r9, [pc, #2148]	; 12488 <strspn@plt+0x14a4>
   11c20:	ldr	r8, [pc, #2148]	; 1248c <strspn@plt+0x14a8>
   11c24:	ldr	fp, [pc, #2148]	; 12490 <strspn@plt+0x14ac>
   11c28:	ldr	sl, [pc, #2220]	; 124dc <strspn@plt+0x14f8>
   11c2c:	ldr	r3, [r7]
   11c30:	cmp	r3, r6
   11c34:	bge	11ca8 <strspn@plt+0xcc4>
   11c38:	ldr	r3, [r5, r3, lsl #2]
   11c3c:	ldrb	r2, [r3]
   11c40:	cmp	r2, #45	; 0x2d
   11c44:	beq	11c90 <strspn@plt+0xcac>
   11c48:	mov	r3, #0
   11c4c:	str	r3, [sp]
   11c50:	mov	r3, r9
   11c54:	mov	r2, r8
   11c58:	mov	r1, r5
   11c5c:	mov	r0, r6
   11c60:	bl	10edc <getopt_long@plt>
   11c64:	cmn	r0, #1
   11c68:	beq	11ca8 <strspn@plt+0xcc4>
   11c6c:	cmp	r0, #102	; 0x66
   11c70:	beq	11d00 <strspn@plt+0xd1c>
   11c74:	bgt	11ce4 <strspn@plt+0xd00>
   11c78:	cmn	r0, #3
   11c7c:	beq	11d14 <strspn@plt+0xd30>
   11c80:	cmn	r0, #2
   11c84:	bne	11d48 <strspn@plt+0xd64>
   11c88:	mov	r0, #0
   11c8c:	bl	114e8 <strspn@plt+0x504>
   11c90:	ldrb	r3, [r3, #1]
   11c94:	cmp	r3, #46	; 0x2e
   11c98:	beq	11ca8 <strspn@plt+0xcc4>
   11c9c:	sub	r3, r3, #48	; 0x30
   11ca0:	cmp	r3, #9
   11ca4:	bhi	11c48 <strspn@plt+0xc64>
   11ca8:	ldr	r3, [pc, #2004]	; 12484 <strspn@plt+0x14a0>
   11cac:	ldr	sl, [r3]
   11cb0:	subs	sl, r6, sl
   11cb4:	beq	11d50 <strspn@plt+0xd6c>
   11cb8:	cmp	sl, #3
   11cbc:	bhi	11d78 <strspn@plt+0xd94>
   11cc0:	cmp	r4, #0
   11cc4:	moveq	r9, #0
   11cc8:	moveq	r7, r9
   11ccc:	beq	11fd0 <strspn@plt+0xfec>
   11cd0:	mov	r2, #1
   11cd4:	mov	r3, #0
   11cd8:	mov	ip, r2
   11cdc:	mov	lr, #2
   11ce0:	b	11e0c <strspn@plt+0xe28>
   11ce4:	cmp	r0, #115	; 0x73
   11ce8:	beq	11d08 <strspn@plt+0xd24>
   11cec:	cmp	r0, #119	; 0x77
   11cf0:	bne	11d48 <strspn@plt+0xd64>
   11cf4:	mov	r3, #1
   11cf8:	strb	r3, [sl, #33]	; 0x21
   11cfc:	b	11c2c <strspn@plt+0xc48>
   11d00:	ldr	r4, [fp]
   11d04:	b	11c2c <strspn@plt+0xc48>
   11d08:	ldr	r3, [fp]
   11d0c:	str	r3, [sl]
   11d10:	b	11c2c <strspn@plt+0xc48>
   11d14:	mov	r4, #0
   11d18:	str	r4, [sp, #4]
   11d1c:	ldr	r3, [pc, #1904]	; 12494 <strspn@plt+0x14b0>
   11d20:	str	r3, [sp]
   11d24:	ldr	r3, [pc, #1900]	; 12498 <strspn@plt+0x14b4>
   11d28:	ldr	r3, [r3]
   11d2c:	ldr	r2, [pc, #1896]	; 1249c <strspn@plt+0x14b8>
   11d30:	ldr	r1, [pc, #1896]	; 124a0 <strspn@plt+0x14bc>
   11d34:	ldr	r0, [pc, #1984]	; 124fc <strspn@plt+0x1518>
   11d38:	ldr	r0, [r0]
   11d3c:	bl	149d0 <strspn@plt+0x39ec>
   11d40:	mov	r0, r4
   11d44:	bl	10ef4 <exit@plt>
   11d48:	mov	r0, #1
   11d4c:	bl	114e8 <strspn@plt+0x504>
   11d50:	mov	r2, #5
   11d54:	ldr	r1, [pc, #1864]	; 124a4 <strspn@plt+0x14c0>
   11d58:	mov	r0, #0
   11d5c:	bl	10e10 <dcgettext@plt>
   11d60:	mov	r2, r0
   11d64:	mov	r1, #0
   11d68:	mov	r0, r1
   11d6c:	bl	10e88 <error@plt>
   11d70:	mov	r0, #1
   11d74:	bl	114e8 <strspn@plt+0x504>
   11d78:	mov	r2, #5
   11d7c:	ldr	r1, [pc, #1828]	; 124a8 <strspn@plt+0x14c4>
   11d80:	mov	r0, #0
   11d84:	bl	10e10 <dcgettext@plt>
   11d88:	mov	r4, r0
   11d8c:	ldr	r3, [pc, #1776]	; 12484 <strspn@plt+0x14a0>
   11d90:	ldr	r3, [r3]
   11d94:	add	r3, r3, #3
   11d98:	ldr	r0, [r5, r3, lsl #2]
   11d9c:	bl	14504 <strspn@plt+0x3520>
   11da0:	mov	r3, r0
   11da4:	mov	r2, r4
   11da8:	mov	r1, #0
   11dac:	mov	r0, r1
   11db0:	bl	10e88 <error@plt>
   11db4:	mov	r0, #1
   11db8:	bl	114e8 <strspn@plt+0x504>
   11dbc:	mov	r2, #5
   11dc0:	ldr	r1, [pc, #1764]	; 124ac <strspn@plt+0x14c8>
   11dc4:	mov	r0, #0
   11dc8:	bl	10e10 <dcgettext@plt>
   11dcc:	mov	r5, r0
   11dd0:	mov	r0, r4
   11dd4:	bl	14504 <strspn@plt+0x3520>
   11dd8:	mov	r3, r0
   11ddc:	mov	r2, r5
   11de0:	mov	r1, #0
   11de4:	mov	r0, #1
   11de8:	bl	10e88 <error@plt>
   11dec:	add	r8, r3, #1
   11df0:	add	r0, r4, r8
   11df4:	ldrb	r1, [r4, r8]
   11df8:	cmp	r1, #37	; 0x25
   11dfc:	bne	11e2c <strspn@plt+0xe48>
   11e00:	mov	r1, lr
   11e04:	add	r3, r3, r1
   11e08:	add	r2, r2, #1
   11e0c:	sub	r7, r2, #1
   11e10:	ldrb	r1, [r4, r3]
   11e14:	cmp	r1, #37	; 0x25
   11e18:	beq	11dec <strspn@plt+0xe08>
   11e1c:	cmp	r1, #0
   11e20:	beq	11dbc <strspn@plt+0xdd8>
   11e24:	mov	r1, ip
   11e28:	b	11e04 <strspn@plt+0xe20>
   11e2c:	ldr	r1, [pc, #1660]	; 124b0 <strspn@plt+0x14cc>
   11e30:	bl	10fe4 <strspn@plt>
   11e34:	add	r8, r8, r0
   11e38:	ldr	r1, [pc, #1652]	; 124b4 <strspn@plt+0x14d0>
   11e3c:	add	r0, r4, r8
   11e40:	bl	10fe4 <strspn@plt>
   11e44:	add	r8, r8, r0
   11e48:	ldrb	r3, [r4, r8]
   11e4c:	cmp	r3, #46	; 0x2e
   11e50:	beq	11ed0 <strspn@plt+0xeec>
   11e54:	ldrb	r0, [r4, r8]
   11e58:	cmp	r0, #76	; 0x4c
   11e5c:	movne	r9, r8
   11e60:	addeq	r9, r8, #1
   11e64:	add	r3, r4, r9
   11e68:	str	r3, [sp, #8]
   11e6c:	ldrb	r1, [r4, r9]
   11e70:	cmp	r1, #0
   11e74:	beq	11ee8 <strspn@plt+0xf04>
   11e78:	ldr	r0, [pc, #1592]	; 124b8 <strspn@plt+0x14d4>
   11e7c:	bl	10f0c <strchr@plt>
   11e80:	cmp	r0, #0
   11e84:	addne	r0, r9, #1
   11e88:	movne	r3, #1
   11e8c:	movne	r1, r3
   11e90:	movne	ip, #2
   11e94:	bne	11f68 <strspn@plt+0xf84>
   11e98:	mov	r2, #5
   11e9c:	ldr	r1, [pc, #1560]	; 124bc <strspn@plt+0x14d8>
   11ea0:	bl	10e10 <dcgettext@plt>
   11ea4:	mov	r5, r0
   11ea8:	mov	r0, r4
   11eac:	bl	14504 <strspn@plt+0x3520>
   11eb0:	ldr	r3, [sp, #8]
   11eb4:	ldrb	r3, [r3]
   11eb8:	str	r3, [sp]
   11ebc:	mov	r3, r0
   11ec0:	mov	r2, r5
   11ec4:	mov	r1, #0
   11ec8:	mov	r0, #1
   11ecc:	bl	10e88 <error@plt>
   11ed0:	add	r8, r8, #1
   11ed4:	ldr	r1, [pc, #1496]	; 124b4 <strspn@plt+0x14d0>
   11ed8:	add	r0, r4, r8
   11edc:	bl	10fe4 <strspn@plt>
   11ee0:	add	r8, r8, r0
   11ee4:	b	11e54 <strspn@plt+0xe70>
   11ee8:	mov	r2, #5
   11eec:	ldr	r1, [pc, #1484]	; 124c0 <strspn@plt+0x14dc>
   11ef0:	mov	r0, #0
   11ef4:	bl	10e10 <dcgettext@plt>
   11ef8:	mov	r5, r0
   11efc:	mov	r0, r4
   11f00:	bl	14504 <strspn@plt+0x3520>
   11f04:	mov	r3, r0
   11f08:	mov	r2, r5
   11f0c:	mov	r1, #0
   11f10:	mov	r0, #1
   11f14:	bl	10e88 <error@plt>
   11f18:	add	r2, r4, r0
   11f1c:	ldrb	r2, [r2, #1]
   11f20:	cmp	r2, #37	; 0x25
   11f24:	moveq	r2, ip
   11f28:	beq	11f60 <strspn@plt+0xf7c>
   11f2c:	mov	r2, #5
   11f30:	ldr	r1, [pc, #1420]	; 124c4 <strspn@plt+0x14e0>
   11f34:	mov	r0, #0
   11f38:	bl	10e10 <dcgettext@plt>
   11f3c:	mov	r5, r0
   11f40:	mov	r0, r4
   11f44:	bl	14504 <strspn@plt+0x3520>
   11f48:	mov	r3, r0
   11f4c:	mov	r2, r5
   11f50:	mov	r1, #0
   11f54:	mov	r0, #1
   11f58:	bl	10e88 <error@plt>
   11f5c:	mov	r2, r1
   11f60:	add	r0, r0, r2
   11f64:	add	r3, r3, #1
   11f68:	sub	r9, r3, #1
   11f6c:	ldrb	r2, [r4, r0]
   11f70:	cmp	r2, #37	; 0x25
   11f74:	beq	11f18 <strspn@plt+0xf34>
   11f78:	cmp	r2, #0
   11f7c:	bne	11f5c <strspn@plt+0xf78>
   11f80:	add	r0, r0, #2
   11f84:	bl	14a9c <strspn@plt+0x3ab8>
   11f88:	mov	fp, r0
   11f8c:	mov	r2, r8
   11f90:	mov	r1, r4
   11f94:	bl	10dc8 <memcpy@plt>
   11f98:	mov	r3, #76	; 0x4c
   11f9c:	strb	r3, [fp, r8]
   11fa0:	add	r0, r8, #1
   11fa4:	ldr	r1, [sp, #8]
   11fa8:	add	r0, fp, r0
   11fac:	bl	10e64 <strcpy@plt>
   11fb0:	cmp	fp, #0
   11fb4:	moveq	r4, #0
   11fb8:	beq	11fd0 <strspn@plt+0xfec>
   11fbc:	ldr	r3, [pc, #1304]	; 124dc <strspn@plt+0x14f8>
   11fc0:	ldrb	r3, [r3, #33]	; 0x21
   11fc4:	cmp	r3, #0
   11fc8:	moveq	r4, fp
   11fcc:	bne	120fc <strspn@plt+0x1118>
   11fd0:	cmp	sl, #3
   11fd4:	beq	12124 <strspn@plt+0x1140>
   11fd8:	ldr	r3, [pc, #1188]	; 12484 <strspn@plt+0x14a0>
   11fdc:	ldr	r8, [r3]
   11fe0:	ldr	fp, [r5, r8, lsl #2]
   11fe4:	mov	r0, fp
   11fe8:	bl	11118 <strspn@plt+0x134>
   11fec:	cmp	r0, #0
   11ff0:	beq	12068 <strspn@plt+0x1084>
   11ff4:	cmp	sl, #1
   11ff8:	beq	12048 <strspn@plt+0x1064>
   11ffc:	add	r3, r8, #1
   12000:	lsl	r2, r3, #2
   12004:	str	r2, [sp, #12]
   12008:	ldr	r0, [r5, r3, lsl #2]
   1200c:	bl	11118 <strspn@plt+0x134>
   12010:	subs	r3, r0, #0
   12014:	str	r3, [sp, #8]
   12018:	beq	12068 <strspn@plt+0x1084>
   1201c:	cmp	sl, #2
   12020:	bls	12048 <strspn@plt+0x1064>
   12024:	ldr	r3, [sp, #8]
   12028:	cmp	r3, #0
   1202c:	beq	12068 <strspn@plt+0x1084>
   12030:	ldr	r3, [sp, #12]
   12034:	add	r3, r5, r3
   12038:	ldr	r0, [r3, #4]
   1203c:	bl	11118 <strspn@plt+0x134>
   12040:	cmp	r0, #0
   12044:	beq	12068 <strspn@plt+0x1084>
   12048:	ldr	r3, [pc, #1164]	; 124dc <strspn@plt+0x14f8>
   1204c:	ldrb	r3, [r3, #33]	; 0x21
   12050:	eor	r3, r3, #1
   12054:	cmp	r4, #0
   12058:	movne	r3, #0
   1205c:	andeq	r3, r3, #1
   12060:	cmp	r3, #0
   12064:	bne	121d0 <strspn@plt+0x11ec>
   12068:	ldr	sl, [pc, #1044]	; 12484 <strspn@plt+0x14a0>
   1206c:	ldr	r3, [sl]
   12070:	add	r2, r3, #1
   12074:	str	r2, [sl]
   12078:	ldr	r1, [r5, r3, lsl #2]
   1207c:	add	r0, sp, #32
   12080:	bl	1186c <strspn@plt+0x888>
   12084:	vldr	d12, [sp, #32]
   12088:	ldr	r8, [sp, #44]	; 0x2c
   1208c:	ldr	ip, [sl]
   12090:	cmp	r6, ip
   12094:	bgt	12218 <strspn@plt+0x1234>
   12098:	ldr	r3, [sp, #60]	; 0x3c
   1209c:	orrs	r3, r8, r3
   120a0:	beq	12314 <strspn@plt+0x1330>
   120a4:	mov	r5, r8
   120a8:	vmov.f64	d11, d12
   120ac:	vldr	d12, [pc, #932]	; 12458 <strspn@plt+0x1474>
   120b0:	mov	r8, #0
   120b4:	cmp	r4, #0
   120b8:	beq	12504 <strspn@plt+0x1520>
   120bc:	vldr	d10, [sp, #48]	; 0x30
   120c0:	vcmpe.f64	d10, #0.0
   120c4:	vmrs	APSR_nzcv, fpscr
   120c8:	bmi	125ec <strspn@plt+0x1608>
   120cc:	vcmpe.f64	d12, d11
   120d0:	vmrs	APSR_nzcv, fpscr
   120d4:	movgt	r6, #1
   120d8:	movle	r6, #0
   120dc:	cmp	r6, #0
   120e0:	bne	127c0 <strspn@plt+0x17dc>
   120e4:	vmov	sl, fp, d12
   120e8:	vldr	d9, [pc, #872]	; 12458 <strspn@plt+0x1474>
   120ec:	vldr	d13, [pc, #876]	; 12460 <strspn@plt+0x147c>
   120f0:	ldr	r8, [pc, #996]	; 124dc <strspn@plt+0x14f8>
   120f4:	vmov.f64	d14, d9
   120f8:	b	1270c <strspn@plt+0x1728>
   120fc:	mov	r2, #5
   12100:	ldr	r1, [pc, #960]	; 124c8 <strspn@plt+0x14e4>
   12104:	mov	r0, #0
   12108:	bl	10e10 <dcgettext@plt>
   1210c:	mov	r2, r0
   12110:	mov	r1, #0
   12114:	mov	r0, r1
   12118:	bl	10e88 <error@plt>
   1211c:	mov	r0, #1
   12120:	bl	114e8 <strspn@plt+0x504>
   12124:	ldr	r3, [pc, #856]	; 12484 <strspn@plt+0x14a0>
   12128:	ldr	r3, [r3]
   1212c:	add	r3, r3, #1
   12130:	ldr	r8, [r5, r3, lsl #2]
   12134:	mov	r0, r8
   12138:	bl	11118 <strspn@plt+0x134>
   1213c:	subs	r3, r0, #0
   12140:	str	r3, [sp, #8]
   12144:	bne	12184 <strspn@plt+0x11a0>
   12148:	ldr	r3, [pc, #820]	; 12484 <strspn@plt+0x14a0>
   1214c:	ldr	r8, [r3]
   12150:	ldr	fp, [r5, r8, lsl #2]
   12154:	mov	r0, fp
   12158:	bl	11118 <strspn@plt+0x134>
   1215c:	cmp	r0, #0
   12160:	beq	12068 <strspn@plt+0x1084>
   12164:	add	r3, r8, #1
   12168:	lsl	r2, r3, #2
   1216c:	str	r2, [sp, #12]
   12170:	ldr	r0, [r5, r3, lsl #2]
   12174:	bl	11118 <strspn@plt+0x134>
   12178:	cmp	r0, #0
   1217c:	bne	12024 <strspn@plt+0x1040>
   12180:	b	12068 <strspn@plt+0x1084>
   12184:	ldr	r3, [pc, #876]	; 124f8 <strspn@plt+0x1514>
   12188:	add	r2, sp, #48	; 0x30
   1218c:	mov	r1, #0
   12190:	mov	r0, r8
   12194:	bl	15080 <strspn@plt+0x409c>
   12198:	subs	r3, r0, #0
   1219c:	str	r3, [sp, #8]
   121a0:	beq	12148 <strspn@plt+0x1164>
   121a4:	vldr	d7, [sp, #48]	; 0x30
   121a8:	vcmpe.f64	d7, #0.0
   121ac:	vmrs	APSR_nzcv, fpscr
   121b0:	ble	12794 <strspn@plt+0x17b0>
   121b4:	vldr	d6, [pc, #684]	; 12468 <strspn@plt+0x1484>
   121b8:	vcmpe.f64	d7, d6
   121bc:	vmrs	APSR_nzcv, fpscr
   121c0:	movls	r3, #1
   121c4:	movhi	r3, #0
   121c8:	str	r3, [sp, #8]
   121cc:	b	12148 <strspn@plt+0x1164>
   121d0:	ldr	r3, [pc, #772]	; 124dc <strspn@plt+0x14f8>
   121d4:	ldr	r0, [r3]
   121d8:	bl	10f00 <strlen@plt>
   121dc:	cmp	r0, #1
   121e0:	bne	12068 <strspn@plt+0x1084>
   121e4:	ldr	r3, [pc, #736]	; 124cc <strspn@plt+0x14e8>
   121e8:	cmp	sl, #1
   121ec:	moveq	fp, r3
   121f0:	ldrd	r0, [sp, #48]	; 0x30
   121f4:	bl	15b48 <strspn@plt+0x4b64>
   121f8:	add	ip, sl, r8
   121fc:	sub	ip, ip, #-1073741823	; 0xc0000001
   12200:	mov	r2, r0
   12204:	mov	r3, r1
   12208:	ldr	r1, [r5, ip, lsl #2]
   1220c:	mov	r0, fp
   12210:	bl	111a0 <strspn@plt+0x1bc>
   12214:	b	12068 <strspn@plt+0x1084>
   12218:	add	lr, sp, #32
   1221c:	ldm	lr, {r0, r1, r2, r3}
   12220:	add	sl, sp, #80	; 0x50
   12224:	stmdb	sl, {r0, r1, r2, r3}
   12228:	ldr	sl, [pc, #596]	; 12484 <strspn@plt+0x14a0>
   1222c:	add	r3, ip, #1
   12230:	str	r3, [sl]
   12234:	ldr	r1, [r5, ip, lsl #2]
   12238:	mov	r0, lr
   1223c:	bl	1186c <strspn@plt+0x888>
   12240:	vldr	d11, [sp, #32]
   12244:	ldr	ip, [sl]
   12248:	cmp	r6, ip
   1224c:	ldrle	r5, [sp, #44]	; 0x2c
   12250:	ble	122d4 <strspn@plt+0x12f0>
   12254:	add	lr, sp, #48	; 0x30
   12258:	add	r3, sp, #32
   1225c:	ldm	r3, {r0, r1, r2, r3}
   12260:	stm	lr, {r0, r1, r2, r3}
   12264:	vcmp.f64	d11, #0.0
   12268:	vmrs	APSR_nzcv, fpscr
   1226c:	bne	122b4 <strspn@plt+0x12d0>
   12270:	mov	r2, #5
   12274:	ldr	r1, [pc, #596]	; 124d0 <strspn@plt+0x14ec>
   12278:	mov	r0, #0
   1227c:	bl	10e10 <dcgettext@plt>
   12280:	mov	r4, r0
   12284:	ldr	r3, [pc, #504]	; 12484 <strspn@plt+0x14a0>
   12288:	ldr	r3, [r3]
   1228c:	sub	r3, r3, #-1073741823	; 0xc0000001
   12290:	ldr	r0, [r5, r3, lsl #2]
   12294:	bl	14504 <strspn@plt+0x3520>
   12298:	mov	r3, r0
   1229c:	mov	r2, r4
   122a0:	mov	r1, #0
   122a4:	mov	r0, r1
   122a8:	bl	10e88 <error@plt>
   122ac:	mov	r0, #1
   122b0:	bl	114e8 <strspn@plt+0x504>
   122b4:	add	r2, ip, #1
   122b8:	ldr	r3, [pc, #452]	; 12484 <strspn@plt+0x14a0>
   122bc:	str	r2, [r3]
   122c0:	ldr	r1, [r5, ip, lsl #2]
   122c4:	add	r0, sp, #32
   122c8:	bl	1186c <strspn@plt+0x888>
   122cc:	vldr	d11, [sp, #32]
   122d0:	ldr	r5, [sp, #44]	; 0x2c
   122d4:	cmp	r8, #0
   122d8:	bne	120b4 <strspn@plt+0x10d0>
   122dc:	ldr	r3, [sp, #60]	; 0x3c
   122e0:	orrs	r3, r5, r3
   122e4:	bne	120b4 <strspn@plt+0x10d0>
   122e8:	vldr	d7, [pc, #368]	; 12460 <strspn@plt+0x147c>
   122ec:	vmul.f64	d6, d12, d7
   122f0:	vcmp.f64	d6, d7
   122f4:	vmrs	APSR_nzcv, fpscr
   122f8:	movne	r8, r3
   122fc:	bne	120b4 <strspn@plt+0x10d0>
   12300:	vcmpe.f64	d12, d7
   12304:	vmrs	APSR_nzcv, fpscr
   12308:	movlt	r8, r3
   1230c:	blt	120b4 <strspn@plt+0x10d0>
   12310:	b	12320 <strspn@plt+0x133c>
   12314:	mov	r5, r8
   12318:	vmov.f64	d11, d12
   1231c:	vldr	d12, [pc, #308]	; 12458 <strspn@plt+0x1474>
   12320:	vcmpe.f64	d11, #0.0
   12324:	vmrs	APSR_nzcv, fpscr
   12328:	blt	1243c <strspn@plt+0x1458>
   1232c:	vldr	d7, [sp, #48]	; 0x30
   12330:	vcmpe.f64	d7, #0.0
   12334:	vmrs	APSR_nzcv, fpscr
   12338:	ble	12444 <strspn@plt+0x1460>
   1233c:	vldr	d6, [pc, #292]	; 12468 <strspn@plt+0x1484>
   12340:	vcmpe.f64	d7, d6
   12344:	vmrs	APSR_nzcv, fpscr
   12348:	bhi	1244c <strspn@plt+0x1468>
   1234c:	ldr	r3, [pc, #392]	; 124dc <strspn@plt+0x14f8>
   12350:	ldrb	r3, [r3, #33]	; 0x21
   12354:	eor	r3, r3, #1
   12358:	cmp	r4, #0
   1235c:	movne	r3, #0
   12360:	andeq	r3, r3, #1
   12364:	cmp	r3, #0
   12368:	moveq	r8, #0
   1236c:	beq	120b4 <strspn@plt+0x10d0>
   12370:	ldr	r3, [pc, #356]	; 124dc <strspn@plt+0x14f8>
   12374:	ldr	r0, [r3]
   12378:	bl	10f00 <strlen@plt>
   1237c:	cmp	r0, #1
   12380:	movne	r8, #0
   12384:	bne	120b4 <strspn@plt+0x10d0>
   12388:	vstr	d12, [sp]
   1238c:	ldr	r2, [pc, #320]	; 124d4 <strspn@plt+0x14f0>
   12390:	mov	r1, #1
   12394:	add	r0, sp, #20
   12398:	bl	10e94 <__asprintf_chk@plt>
   1239c:	cmp	r0, #0
   123a0:	bge	123a8 <strspn@plt+0x13c4>
   123a4:	bl	15040 <strspn@plt+0x405c>
   123a8:	vldr	d7, [pc, #176]	; 12460 <strspn@plt+0x147c>
   123ac:	vmul.f64	d6, d11, d7
   123b0:	vcmp.f64	d6, d7
   123b4:	vmrs	APSR_nzcv, fpscr
   123b8:	beq	1241c <strspn@plt+0x1438>
   123bc:	ldr	r0, [pc, #276]	; 124d8 <strspn@plt+0x14f4>
   123c0:	bl	15024 <strspn@plt+0x4040>
   123c4:	str	r0, [sp, #24]
   123c8:	ldr	r6, [sp, #20]
   123cc:	ldrb	r3, [r6]
   123d0:	cmp	r3, #45	; 0x2d
   123d4:	beq	12404 <strspn@plt+0x1420>
   123d8:	ldr	r8, [sp, #24]
   123dc:	ldrb	r3, [r8]
   123e0:	cmp	r3, #45	; 0x2d
   123e4:	beq	12404 <strspn@plt+0x1420>
   123e8:	ldrd	r0, [sp, #48]	; 0x30
   123ec:	bl	15b48 <strspn@plt+0x4b64>
   123f0:	mov	r2, r0
   123f4:	mov	r3, r1
   123f8:	mov	r1, r8
   123fc:	mov	r0, r6
   12400:	bl	111a0 <strspn@plt+0x1bc>
   12404:	ldr	r0, [sp, #20]
   12408:	bl	1295c <strspn@plt+0x1978>
   1240c:	ldr	r0, [sp, #24]
   12410:	bl	1295c <strspn@plt+0x1978>
   12414:	mov	r8, #0
   12418:	b	120b4 <strspn@plt+0x10d0>
   1241c:	vstr	d11, [sp]
   12420:	ldr	r2, [pc, #172]	; 124d4 <strspn@plt+0x14f0>
   12424:	mov	r1, #1
   12428:	add	r0, sp, #24
   1242c:	bl	10e94 <__asprintf_chk@plt>
   12430:	cmp	r0, #0
   12434:	bge	123c8 <strspn@plt+0x13e4>
   12438:	bl	15040 <strspn@plt+0x405c>
   1243c:	mov	r8, #0
   12440:	b	120b4 <strspn@plt+0x10d0>
   12444:	mov	r8, #0
   12448:	b	120b4 <strspn@plt+0x10d0>
   1244c:	mov	r8, #0
   12450:	b	120b4 <strspn@plt+0x10d0>
   12454:	nop			; (mov r0, r0)
   12458:	andeq	r0, r0, r0
   1245c:	svccc	0x00f00000	; IMB
	...
   1246c:	rsbmi	r0, r9, r0
   12470:	andeq	r5, r1, r8, asr ip
   12474:	andeq	r6, r1, r8, asr r2
   12478:	andeq	r6, r1, ip, asr r3
   1247c:	andeq	r2, r1, r8, ror #16
   12480:			; <UNDEFINED> instruction: 0x00015db4
   12484:	andeq	r7, r2, r0, asr r1
   12488:	andeq	r5, r1, r8, ror #24
   1248c:	andeq	r6, r1, r4, ror r3
   12490:	andeq	r7, r2, r0, ror #2
   12494:	andeq	r6, r1, ip, ror r3
   12498:	strdeq	r7, [r2], -ip
   1249c:	andeq	r6, r1, r4, asr r2
   124a0:	andeq	r5, r1, r8, ror #25
   124a4:	andeq	r6, r1, ip, lsl #7
   124a8:	muleq	r1, ip, r3
   124ac:			; <UNDEFINED> instruction: 0x000163b0
   124b0:	ldrdeq	r6, [r1], -r0
   124b4:	andeq	r5, r1, ip, asr #25
   124b8:	strdeq	r6, [r1], -r0
   124bc:	strdeq	r6, [r1], -ip
   124c0:	ldrdeq	r6, [r1], -r8
   124c4:	andeq	r6, r1, r4, lsr #8
   124c8:	andeq	r6, r1, ip, asr #8
   124cc:	andeq	r6, r1, r4, asr r3
   124d0:	muleq	r1, r4, r4
   124d4:			; <UNDEFINED> instruction: 0x000164b8
   124d8:	andeq	r5, r1, r4, ror #25
   124dc:	andeq	r7, r2, r8, ror #2
   124e0:	andeq	r6, r1, r0, asr #9
   124e4:	andeq	r7, r2, ip, ror #2
   124e8:	andeq	r6, r1, ip, asr #9
   124ec:	andeq	r6, r1, r8, asr r3
   124f0:	ldrdeq	r6, [r1], -r4
   124f4:	andeq	r6, r1, r0, asr #2
   124f8:	andeq	r2, r1, r8, asr #15
   124fc:	andeq	r7, r2, ip, asr r1
   12500:	andeq	r5, r1, r8, asr #25
   12504:	ldr	r2, [sp, #60]	; 0x3c
   12508:	cmp	r8, r2
   1250c:	movge	r2, r8
   12510:	cmn	r2, #-2147483647	; 0x80000001
   12514:	cmnne	r5, #-2147483647	; 0x80000001
   12518:	beq	125e4 <strspn@plt+0x1600>
   1251c:	ldr	r3, [pc, #-72]	; 124dc <strspn@plt+0x14f8>
   12520:	ldrb	r3, [r3, #33]	; 0x21
   12524:	cmp	r3, #0
   12528:	beq	125c4 <strspn@plt+0x15e0>
   1252c:	sub	r3, r2, r8
   12530:	ldr	r1, [sp, #72]	; 0x48
   12534:	add	r3, r3, r1
   12538:	sub	r1, r2, r5
   1253c:	ldr	r0, [sp, #40]	; 0x28
   12540:	add	r1, r1, r0
   12544:	clz	r0, r2
   12548:	lsr	r0, r0, #5
   1254c:	cmp	r5, #0
   12550:	moveq	r0, #0
   12554:	cmp	r0, #0
   12558:	subne	r1, r1, #1
   1255c:	adds	r0, r2, #0
   12560:	movne	r0, #1
   12564:	cmp	r5, #0
   12568:	movne	r5, #0
   1256c:	andeq	r5, r0, #1
   12570:	cmp	r5, #0
   12574:	addne	r1, r1, #1
   12578:	cmp	r8, #0
   1257c:	movne	r0, #0
   12580:	andeq	r0, r0, #1
   12584:	cmp	r0, #0
   12588:	addne	r3, r3, #1
   1258c:	cmp	r3, r1
   12590:	movcc	r3, r1
   12594:	cmp	r3, #0
   12598:	ldrlt	r4, [pc, #-180]	; 124ec <strspn@plt+0x1508>
   1259c:	blt	120bc <strspn@plt+0x10d8>
   125a0:	ldr	r4, [pc, #-196]	; 124e4 <strspn@plt+0x1500>
   125a4:	str	r2, [sp, #4]
   125a8:	str	r3, [sp]
   125ac:	ldr	r3, [pc, #-212]	; 124e0 <strspn@plt+0x14fc>
   125b0:	mov	r2, #28
   125b4:	mov	r1, #1
   125b8:	mov	r0, r4
   125bc:	bl	10f24 <__sprintf_chk@plt>
   125c0:	b	120bc <strspn@plt+0x10d8>
   125c4:	ldr	r4, [pc, #-232]	; 124e4 <strspn@plt+0x1500>
   125c8:	str	r2, [sp]
   125cc:	ldr	r3, [pc, #-236]	; 124e8 <strspn@plt+0x1504>
   125d0:	mov	r2, #28
   125d4:	mov	r1, #1
   125d8:	mov	r0, r4
   125dc:	bl	10f24 <__sprintf_chk@plt>
   125e0:	b	120bc <strspn@plt+0x10d8>
   125e4:	ldr	r4, [pc, #-256]	; 124ec <strspn@plt+0x1508>
   125e8:	b	120bc <strspn@plt+0x10d8>
   125ec:	vcmpe.f64	d12, d11
   125f0:	vmrs	APSR_nzcv, fpscr
   125f4:	movmi	r6, #1
   125f8:	movpl	r6, #0
   125fc:	b	120dc <strspn@plt+0x10f8>
   12600:	bl	11160 <strspn@plt+0x17c>
   12604:	vcmpe.f64	d8, d11
   12608:	vmrs	APSR_nzcv, fpscr
   1260c:	movmi	r6, #1
   12610:	movpl	r6, #0
   12614:	b	12754 <strspn@plt+0x1770>
   12618:	ldr	r1, [pc, #-304]	; 124f0 <strspn@plt+0x150c>
   1261c:	mov	r0, #1
   12620:	bl	10f84 <setlocale@plt>
   12624:	vstr	d8, [sp]
   12628:	mov	r2, r4
   1262c:	mov	r1, #1
   12630:	add	r0, sp, #16
   12634:	bl	10e94 <__asprintf_chk@plt>
   12638:	mov	r5, r0
   1263c:	ldr	r1, [pc, #-336]	; 124f4 <strspn@plt+0x1510>
   12640:	mov	r0, #1
   12644:	bl	10f84 <setlocale@plt>
   12648:	cmp	r5, #0
   1264c:	blt	12784 <strspn@plt+0x17a0>
   12650:	sub	r5, r5, r9
   12654:	mov	r1, #0
   12658:	ldr	r3, [sp, #16]
   1265c:	strb	r1, [r3, r5]
   12660:	ldr	r3, [pc, #-368]	; 124f8 <strspn@plt+0x1514>
   12664:	add	r2, sp, #24
   12668:	ldr	r0, [sp, #16]
   1266c:	add	r0, r0, r7
   12670:	bl	15080 <strspn@plt+0x409c>
   12674:	cmp	r0, #0
   12678:	beq	127a0 <strspn@plt+0x17bc>
   1267c:	vldr	d7, [sp, #24]
   12680:	vcmp.f64	d7, d11
   12684:	vmrs	APSR_nzcv, fpscr
   12688:	bne	127a0 <strspn@plt+0x17bc>
   1268c:	add	r0, sp, #80	; 0x50
   12690:	mov	r3, #0
   12694:	str	r3, [r0, #-60]!	; 0xffffffc4
   12698:	strd	sl, [sp]
   1269c:	mov	r2, r4
   126a0:	mov	r1, #1
   126a4:	bl	10e94 <__asprintf_chk@plt>
   126a8:	cmp	r0, #0
   126ac:	blt	12788 <strspn@plt+0x17a4>
   126b0:	sub	r0, r0, r9
   126b4:	mov	r2, #0
   126b8:	ldr	r3, [sp, #20]
   126bc:	strb	r2, [r3, r0]
   126c0:	ldr	r5, [sp, #20]
   126c4:	ldr	r1, [sp, #16]
   126c8:	mov	r0, r5
   126cc:	bl	10d74 <strcmp@plt>
   126d0:	mov	sl, r0
   126d4:	mov	r0, r5
   126d8:	bl	1295c <strspn@plt+0x1978>
   126dc:	ldr	r0, [sp, #16]
   126e0:	bl	1295c <strspn@plt+0x1978>
   126e4:	cmp	sl, #0
   126e8:	beq	127a8 <strspn@plt+0x17c4>
   126ec:	ldr	r3, [pc, #-504]	; 124fc <strspn@plt+0x1518>
   126f0:	ldr	r1, [r3]
   126f4:	ldr	r0, [r8]
   126f8:	bl	10d50 <fputs_unlocked@plt>
   126fc:	cmn	r0, #1
   12700:	beq	1278c <strspn@plt+0x17a8>
   12704:	vadd.f64	d9, d9, d14
   12708:	vmov	sl, fp, d8
   1270c:	mov	r2, sl
   12710:	mov	r3, fp
   12714:	mov	r1, r4
   12718:	mov	r0, #1
   1271c:	bl	10f48 <__printf_chk@plt>
   12720:	cmp	r0, #0
   12724:	blt	12600 <strspn@plt+0x161c>
   12728:	cmp	r6, #0
   1272c:	bne	127a8 <strspn@plt+0x17c4>
   12730:	vmov.f64	d8, d12
   12734:	vmla.f64	d8, d10, d9
   12738:	vcmpe.f64	d10, d13
   1273c:	vmrs	APSR_nzcv, fpscr
   12740:	bmi	12604 <strspn@plt+0x1620>
   12744:	vcmpe.f64	d8, d11
   12748:	vmrs	APSR_nzcv, fpscr
   1274c:	movgt	r6, #1
   12750:	movle	r6, #0
   12754:	cmp	r6, #0
   12758:	beq	126ec <strspn@plt+0x1708>
   1275c:	ldrb	r3, [r8, #32]
   12760:	cmp	r3, #0
   12764:	bne	12618 <strspn@plt+0x1634>
   12768:	vstr	d8, [sp]
   1276c:	mov	r2, r4
   12770:	mov	r1, #1
   12774:	add	r0, sp, #16
   12778:	bl	10e94 <__asprintf_chk@plt>
   1277c:	mov	r5, r0
   12780:	b	12648 <strspn@plt+0x1664>
   12784:	bl	15040 <strspn@plt+0x405c>
   12788:	bl	15040 <strspn@plt+0x405c>
   1278c:	bl	11160 <strspn@plt+0x17c>
   12790:	bl	11160 <strspn@plt+0x17c>
   12794:	mov	r3, #0
   12798:	str	r3, [sp, #8]
   1279c:	b	12148 <strspn@plt+0x1164>
   127a0:	ldr	r0, [sp, #16]
   127a4:	bl	1295c <strspn@plt+0x1978>
   127a8:	ldr	r3, [pc, #-692]	; 124fc <strspn@plt+0x1518>
   127ac:	ldr	r1, [r3]
   127b0:	ldr	r0, [pc, #-696]	; 12500 <strspn@plt+0x151c>
   127b4:	bl	10d50 <fputs_unlocked@plt>
   127b8:	cmn	r0, #1
   127bc:	beq	12790 <strspn@plt+0x17ac>
   127c0:	mov	r0, #0
   127c4:	bl	10ef4 <exit@plt>
   127c8:	push	{r4, r5, r6, r7, lr}
   127cc:	vpush	{d8}
   127d0:	sub	sp, sp, #12
   127d4:	mov	r5, r0
   127d8:	mov	r4, r1
   127dc:	add	r1, sp, #4
   127e0:	bl	10de0 <strtold@plt>
   127e4:	vmov.f64	d8, d0
   127e8:	ldr	r3, [sp, #4]
   127ec:	ldrb	r3, [r3]
   127f0:	cmp	r3, #0
   127f4:	bne	12814 <strspn@plt+0x1830>
   127f8:	cmp	r4, #0
   127fc:	ldrne	r3, [sp, #4]
   12800:	strne	r3, [r4]
   12804:	vmov.f64	d0, d8
   12808:	add	sp, sp, #12
   1280c:	vpop	{d8}
   12810:	pop	{r4, r5, r6, r7, pc}
   12814:	bl	10f18 <__errno_location@plt>
   12818:	mov	r6, r0
   1281c:	ldr	r7, [r0]
   12820:	mov	r1, sp
   12824:	mov	r0, r5
   12828:	bl	151f8 <strspn@plt+0x4214>
   1282c:	ldr	r3, [sp]
   12830:	ldr	r2, [sp, #4]
   12834:	cmp	r2, r3
   12838:	strcc	r3, [sp, #4]
   1283c:	vmovcc.f64	d8, d0
   12840:	strcs	r7, [r6]
   12844:	b	127f8 <strspn@plt+0x1814>
   12848:	ldr	r3, [pc, #4]	; 12854 <strspn@plt+0x1870>
   1284c:	str	r0, [r3]
   12850:	bx	lr
   12854:	andeq	r7, r2, ip, lsl #3
   12858:	ldr	r3, [pc, #4]	; 12864 <strspn@plt+0x1880>
   1285c:	strb	r0, [r3, #4]
   12860:	bx	lr
   12864:	andeq	r7, r2, ip, lsl #3
   12868:	push	{r4, r5, r6, lr}
   1286c:	sub	sp, sp, #8
   12870:	ldr	r3, [pc, #200]	; 12940 <strspn@plt+0x195c>
   12874:	ldr	r0, [r3]
   12878:	bl	152dc <strspn@plt+0x42f8>
   1287c:	cmp	r0, #0
   12880:	beq	128a4 <strspn@plt+0x18c0>
   12884:	ldr	r3, [pc, #184]	; 12944 <strspn@plt+0x1960>
   12888:	ldrb	r3, [r3, #4]
   1288c:	cmp	r3, #0
   12890:	beq	128c0 <strspn@plt+0x18dc>
   12894:	bl	10f18 <__errno_location@plt>
   12898:	ldr	r3, [r0]
   1289c:	cmp	r3, #32
   128a0:	bne	128c0 <strspn@plt+0x18dc>
   128a4:	ldr	r3, [pc, #156]	; 12948 <strspn@plt+0x1964>
   128a8:	ldr	r0, [r3]
   128ac:	bl	152dc <strspn@plt+0x42f8>
   128b0:	cmp	r0, #0
   128b4:	bne	12934 <strspn@plt+0x1950>
   128b8:	add	sp, sp, #8
   128bc:	pop	{r4, r5, r6, pc}
   128c0:	mov	r2, #5
   128c4:	ldr	r1, [pc, #128]	; 1294c <strspn@plt+0x1968>
   128c8:	mov	r0, #0
   128cc:	bl	10e10 <dcgettext@plt>
   128d0:	mov	r4, r0
   128d4:	ldr	r3, [pc, #104]	; 12944 <strspn@plt+0x1960>
   128d8:	ldr	r5, [r3]
   128dc:	cmp	r5, #0
   128e0:	beq	12918 <strspn@plt+0x1934>
   128e4:	bl	10f18 <__errno_location@plt>
   128e8:	ldr	r6, [r0]
   128ec:	mov	r0, r5
   128f0:	bl	1437c <strspn@plt+0x3398>
   128f4:	str	r4, [sp]
   128f8:	mov	r3, r0
   128fc:	ldr	r2, [pc, #76]	; 12950 <strspn@plt+0x196c>
   12900:	mov	r1, r6
   12904:	mov	r0, #0
   12908:	bl	10e88 <error@plt>
   1290c:	ldr	r3, [pc, #64]	; 12954 <strspn@plt+0x1970>
   12910:	ldr	r0, [r3]
   12914:	bl	10dbc <_exit@plt>
   12918:	bl	10f18 <__errno_location@plt>
   1291c:	mov	r3, r4
   12920:	ldr	r2, [pc, #48]	; 12958 <strspn@plt+0x1974>
   12924:	ldr	r1, [r0]
   12928:	mov	r0, #0
   1292c:	bl	10e88 <error@plt>
   12930:	b	1290c <strspn@plt+0x1928>
   12934:	ldr	r3, [pc, #24]	; 12954 <strspn@plt+0x1970>
   12938:	ldr	r0, [r3]
   1293c:	bl	10dbc <_exit@plt>
   12940:	andeq	r7, r2, ip, asr r1
   12944:	andeq	r7, r2, ip, lsl #3
   12948:	andeq	r7, r2, r8, asr r1
   1294c:	ldrdeq	r5, [r1], -r8
   12950:	andeq	r6, r1, r4, lsl #11
   12954:	andeq	r7, r2, r0, lsl #2
   12958:	andeq	r6, r1, r8, lsl #11
   1295c:	push	{r4, r5, lr}
   12960:	sub	sp, sp, #12
   12964:	mov	r5, r0
   12968:	bl	10f18 <__errno_location@plt>
   1296c:	mov	r4, r0
   12970:	ldr	r3, [r0]
   12974:	str	r3, [sp]
   12978:	str	r3, [sp, #4]
   1297c:	mov	r3, #0
   12980:	str	r3, [r0]
   12984:	mov	r0, r5
   12988:	bl	10db0 <free@plt>
   1298c:	ldr	r3, [r4]
   12990:	cmp	r3, #0
   12994:	moveq	r3, #4
   12998:	movne	r3, #0
   1299c:	add	r2, sp, #8
   129a0:	add	r3, r2, r3
   129a4:	ldr	r3, [r3, #-8]
   129a8:	str	r3, [r4]
   129ac:	add	sp, sp, #12
   129b0:	pop	{r4, r5, pc}
   129b4:	push	{r4, r5, r6, lr}
   129b8:	subs	r4, r0, #0
   129bc:	beq	12a34 <strspn@plt+0x1a50>
   129c0:	mov	r1, #47	; 0x2f
   129c4:	mov	r0, r4
   129c8:	bl	10f90 <strrchr@plt>
   129cc:	cmp	r0, #0
   129d0:	addne	r5, r0, #1
   129d4:	moveq	r5, r4
   129d8:	sub	r3, r5, r4
   129dc:	cmp	r3, #6
   129e0:	ble	12a20 <strspn@plt+0x1a3c>
   129e4:	mov	r2, #7
   129e8:	ldr	r1, [pc, #96]	; 12a50 <strspn@plt+0x1a6c>
   129ec:	sub	r0, r5, #7
   129f0:	bl	10fcc <strncmp@plt>
   129f4:	cmp	r0, #0
   129f8:	bne	12a20 <strspn@plt+0x1a3c>
   129fc:	mov	r2, #3
   12a00:	ldr	r1, [pc, #76]	; 12a54 <strspn@plt+0x1a70>
   12a04:	mov	r0, r5
   12a08:	bl	10fcc <strncmp@plt>
   12a0c:	cmp	r0, #0
   12a10:	addeq	r4, r5, #3
   12a14:	ldreq	r3, [pc, #60]	; 12a58 <strspn@plt+0x1a74>
   12a18:	streq	r4, [r3]
   12a1c:	movne	r4, r5
   12a20:	ldr	r3, [pc, #52]	; 12a5c <strspn@plt+0x1a78>
   12a24:	str	r4, [r3]
   12a28:	ldr	r3, [pc, #48]	; 12a60 <strspn@plt+0x1a7c>
   12a2c:	str	r4, [r3]
   12a30:	pop	{r4, r5, r6, pc}
   12a34:	ldr	r3, [pc, #40]	; 12a64 <strspn@plt+0x1a80>
   12a38:	ldr	r3, [r3]
   12a3c:	mov	r2, #55	; 0x37
   12a40:	mov	r1, #1
   12a44:	ldr	r0, [pc, #28]	; 12a68 <strspn@plt+0x1a84>
   12a48:	bl	10e40 <fwrite@plt>
   12a4c:	bl	10fd8 <abort@plt>
   12a50:	andeq	r6, r1, r4, asr #11
   12a54:	andeq	r6, r1, ip, asr #11
   12a58:	andeq	r7, r2, r8, asr #2
   12a5c:	muleq	r2, r4, r1
   12a60:	andeq	r7, r2, ip, asr #2
   12a64:	andeq	r7, r2, r8, asr r1
   12a68:	andeq	r6, r1, ip, lsl #11
   12a6c:	push	{r4, r5, r6, lr}
   12a70:	mov	r5, r0
   12a74:	mov	r4, r1
   12a78:	mov	r2, #48	; 0x30
   12a7c:	mov	r1, #0
   12a80:	bl	10f3c <memset@plt>
   12a84:	cmp	r4, #10
   12a88:	beq	12a98 <strspn@plt+0x1ab4>
   12a8c:	str	r4, [r5]
   12a90:	mov	r0, r5
   12a94:	pop	{r4, r5, r6, pc}
   12a98:	bl	10fd8 <abort@plt>
   12a9c:	push	{r4, r5, r6, lr}
   12aa0:	mov	r4, r0
   12aa4:	mov	r5, r1
   12aa8:	mov	r2, #5
   12aac:	mov	r1, r0
   12ab0:	mov	r0, #0
   12ab4:	bl	10e10 <dcgettext@plt>
   12ab8:	cmp	r4, r0
   12abc:	popne	{r4, r5, r6, pc}
   12ac0:	bl	15508 <strspn@plt+0x4524>
   12ac4:	ldrb	r3, [r0]
   12ac8:	bic	r3, r3, #32
   12acc:	cmp	r3, #85	; 0x55
   12ad0:	beq	12b4c <strspn@plt+0x1b68>
   12ad4:	cmp	r3, #71	; 0x47
   12ad8:	bne	12ba8 <strspn@plt+0x1bc4>
   12adc:	ldrb	r3, [r0, #1]
   12ae0:	bic	r3, r3, #32
   12ae4:	cmp	r3, #66	; 0x42
   12ae8:	bne	12ba8 <strspn@plt+0x1bc4>
   12aec:	ldrb	r3, [r0, #2]
   12af0:	cmp	r3, #49	; 0x31
   12af4:	bne	12ba8 <strspn@plt+0x1bc4>
   12af8:	ldrb	r3, [r0, #3]
   12afc:	cmp	r3, #56	; 0x38
   12b00:	bne	12ba8 <strspn@plt+0x1bc4>
   12b04:	ldrb	r3, [r0, #4]
   12b08:	cmp	r3, #48	; 0x30
   12b0c:	bne	12ba8 <strspn@plt+0x1bc4>
   12b10:	ldrb	r3, [r0, #5]
   12b14:	cmp	r3, #51	; 0x33
   12b18:	bne	12ba8 <strspn@plt+0x1bc4>
   12b1c:	ldrb	r3, [r0, #6]
   12b20:	cmp	r3, #48	; 0x30
   12b24:	bne	12ba8 <strspn@plt+0x1bc4>
   12b28:	ldrb	r3, [r0, #7]
   12b2c:	cmp	r3, #0
   12b30:	bne	12ba8 <strspn@plt+0x1bc4>
   12b34:	ldrb	r2, [r4]
   12b38:	ldr	r3, [pc, #124]	; 12bbc <strspn@plt+0x1bd8>
   12b3c:	ldr	r0, [pc, #124]	; 12bc0 <strspn@plt+0x1bdc>
   12b40:	cmp	r2, #96	; 0x60
   12b44:	movne	r0, r3
   12b48:	pop	{r4, r5, r6, pc}
   12b4c:	ldrb	r3, [r0, #1]
   12b50:	bic	r3, r3, #32
   12b54:	cmp	r3, #84	; 0x54
   12b58:	bne	12ba8 <strspn@plt+0x1bc4>
   12b5c:	ldrb	r3, [r0, #2]
   12b60:	bic	r3, r3, #32
   12b64:	cmp	r3, #70	; 0x46
   12b68:	bne	12ba8 <strspn@plt+0x1bc4>
   12b6c:	ldrb	r3, [r0, #3]
   12b70:	cmp	r3, #45	; 0x2d
   12b74:	bne	12ba8 <strspn@plt+0x1bc4>
   12b78:	ldrb	r3, [r0, #4]
   12b7c:	cmp	r3, #56	; 0x38
   12b80:	bne	12ba8 <strspn@plt+0x1bc4>
   12b84:	ldrb	r3, [r0, #5]
   12b88:	cmp	r3, #0
   12b8c:	bne	12ba8 <strspn@plt+0x1bc4>
   12b90:	ldrb	r2, [r4]
   12b94:	ldr	r3, [pc, #40]	; 12bc4 <strspn@plt+0x1be0>
   12b98:	ldr	r0, [pc, #40]	; 12bc8 <strspn@plt+0x1be4>
   12b9c:	cmp	r2, #96	; 0x60
   12ba0:	movne	r0, r3
   12ba4:	pop	{r4, r5, r6, pc}
   12ba8:	ldr	r3, [pc, #28]	; 12bcc <strspn@plt+0x1be8>
   12bac:	ldr	r0, [pc, #28]	; 12bd0 <strspn@plt+0x1bec>
   12bb0:	cmp	r5, #9
   12bb4:	movne	r0, r3
   12bb8:	pop	{r4, r5, r6, pc}
   12bbc:	andeq	r6, r1, r8, lsr #12
   12bc0:	andeq	r6, r1, r4, lsr r6
   12bc4:	andeq	r6, r1, r4, lsr #12
   12bc8:	andeq	r6, r1, r8, lsr r6
   12bcc:	andeq	r6, r1, ip, lsr #12
   12bd0:	andeq	r6, r1, r0, lsr r6
   12bd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bd8:	sub	sp, sp, #116	; 0x74
   12bdc:	str	r0, [sp, #36]	; 0x24
   12be0:	mov	sl, r1
   12be4:	str	r2, [sp, #52]	; 0x34
   12be8:	str	r3, [sp, #28]
   12bec:	ldr	r8, [sp, #152]	; 0x98
   12bf0:	bl	10e58 <__ctype_get_mb_cur_max@plt>
   12bf4:	str	r0, [sp, #84]	; 0x54
   12bf8:	ldr	r3, [sp, #156]	; 0x9c
   12bfc:	lsr	r3, r3, #1
   12c00:	and	r3, r3, #1
   12c04:	str	r3, [sp, #32]
   12c08:	mov	r3, #1
   12c0c:	str	r3, [sp, #40]	; 0x28
   12c10:	mov	r3, #0
   12c14:	str	r3, [sp, #80]	; 0x50
   12c18:	str	r3, [sp, #44]	; 0x2c
   12c1c:	str	r3, [sp, #48]	; 0x30
   12c20:	str	r3, [sp, #60]	; 0x3c
   12c24:	str	r3, [sp, #72]	; 0x48
   12c28:	str	r3, [sp, #76]	; 0x4c
   12c2c:	mov	r7, sl
   12c30:	mov	sl, r8
   12c34:	cmp	sl, #10
   12c38:	ldrls	pc, [pc, sl, lsl #2]
   12c3c:	b	12df4 <strspn@plt+0x1e10>
   12c40:	andeq	r2, r1, r4, lsr #25
   12c44:	andeq	r2, r1, r4, ror ip
   12c48:	ldrdeq	r2, [r1], -r0
   12c4c:	andeq	r2, r1, ip, ror #24
   12c50:	andeq	r2, r1, r4, lsl #27
   12c54:			; <UNDEFINED> instruction: 0x00012cb4
   12c58:	andeq	r3, r1, r0, lsr #26
   12c5c:	strdeq	r2, [r1], -r8
   12c60:	strdeq	r2, [r1], -r0
   12c64:	strdeq	r2, [r1], -r0
   12c68:	strdeq	r2, [r1], -r0
   12c6c:	mov	r3, #1
   12c70:	str	r3, [sp, #48]	; 0x30
   12c74:	mov	r3, #1
   12c78:	str	r3, [sp, #32]
   12c7c:	str	r3, [sp, #60]	; 0x3c
   12c80:	ldr	r3, [pc, #4068]	; 13c6c <strspn@plt+0x2c88>
   12c84:	str	r3, [sp, #72]	; 0x48
   12c88:	mov	fp, #0
   12c8c:	mov	sl, #2
   12c90:	mov	r6, #0
   12c94:	ldr	r3, [sp, #48]	; 0x30
   12c98:	eor	r3, r3, #1
   12c9c:	str	r3, [sp, #68]	; 0x44
   12ca0:	b	13588 <strspn@plt+0x25a4>
   12ca4:	mov	r3, #0
   12ca8:	str	r3, [sp, #32]
   12cac:	mov	fp, r3
   12cb0:	b	12c90 <strspn@plt+0x1cac>
   12cb4:	ldr	r3, [sp, #32]
   12cb8:	cmp	r3, #0
   12cbc:	bne	12e10 <strspn@plt+0x1e2c>
   12cc0:	cmp	r7, #0
   12cc4:	beq	12e30 <strspn@plt+0x1e4c>
   12cc8:	ldr	r3, [sp, #36]	; 0x24
   12ccc:	mov	r2, #34	; 0x22
   12cd0:	strb	r2, [r3]
   12cd4:	mov	r3, #1
   12cd8:	str	r3, [sp, #48]	; 0x30
   12cdc:	str	r3, [sp, #60]	; 0x3c
   12ce0:	ldr	r3, [pc, #3980]	; 13c74 <strspn@plt+0x2c90>
   12ce4:	str	r3, [sp, #72]	; 0x48
   12ce8:	mov	fp, #1
   12cec:	b	12c90 <strspn@plt+0x1cac>
   12cf0:	cmp	sl, #10
   12cf4:	beq	12d18 <strspn@plt+0x1d34>
   12cf8:	mov	r1, sl
   12cfc:	ldr	r0, [pc, #3948]	; 13c70 <strspn@plt+0x2c8c>
   12d00:	bl	12a9c <strspn@plt+0x1ab8>
   12d04:	str	r0, [sp, #164]	; 0xa4
   12d08:	mov	r1, sl
   12d0c:	ldr	r0, [pc, #3928]	; 13c6c <strspn@plt+0x2c88>
   12d10:	bl	12a9c <strspn@plt+0x1ab8>
   12d14:	str	r0, [sp, #168]	; 0xa8
   12d18:	ldr	r3, [sp, #32]
   12d1c:	cmp	r3, #0
   12d20:	movne	fp, #0
   12d24:	bne	12d5c <strspn@plt+0x1d78>
   12d28:	ldr	r3, [sp, #164]	; 0xa4
   12d2c:	ldrb	r3, [r3]
   12d30:	cmp	r3, #0
   12d34:	beq	12d7c <strspn@plt+0x1d98>
   12d38:	ldr	r2, [sp, #164]	; 0xa4
   12d3c:	mov	fp, #0
   12d40:	ldr	r1, [sp, #36]	; 0x24
   12d44:	cmp	r7, fp
   12d48:	strbhi	r3, [r1, fp]
   12d4c:	add	fp, fp, #1
   12d50:	ldrb	r3, [r2, #1]!
   12d54:	cmp	r3, #0
   12d58:	bne	12d44 <strspn@plt+0x1d60>
   12d5c:	ldr	r0, [sp, #168]	; 0xa8
   12d60:	bl	10f00 <strlen@plt>
   12d64:	str	r0, [sp, #60]	; 0x3c
   12d68:	ldr	r3, [sp, #168]	; 0xa8
   12d6c:	str	r3, [sp, #72]	; 0x48
   12d70:	mov	r3, #1
   12d74:	str	r3, [sp, #48]	; 0x30
   12d78:	b	12c90 <strspn@plt+0x1cac>
   12d7c:	mov	fp, #0
   12d80:	b	12d5c <strspn@plt+0x1d78>
   12d84:	ldr	r3, [sp, #32]
   12d88:	cmp	r3, #0
   12d8c:	bne	12e4c <strspn@plt+0x1e68>
   12d90:	mov	r3, #1
   12d94:	str	r3, [sp, #48]	; 0x30
   12d98:	cmp	r7, #0
   12d9c:	beq	12e68 <strspn@plt+0x1e84>
   12da0:	ldr	r3, [sp, #36]	; 0x24
   12da4:	mov	r2, #39	; 0x27
   12da8:	strb	r2, [r3]
   12dac:	mov	r3, #0
   12db0:	str	r3, [sp, #32]
   12db4:	mov	r3, #1
   12db8:	str	r3, [sp, #60]	; 0x3c
   12dbc:	ldr	r3, [pc, #3752]	; 13c6c <strspn@plt+0x2c88>
   12dc0:	str	r3, [sp, #72]	; 0x48
   12dc4:	mov	fp, #1
   12dc8:	mov	sl, #2
   12dcc:	b	12c90 <strspn@plt+0x1cac>
   12dd0:	ldr	r3, [sp, #32]
   12dd4:	cmp	r3, #0
   12dd8:	beq	12d98 <strspn@plt+0x1db4>
   12ddc:	mov	r3, #1
   12de0:	str	r3, [sp, #60]	; 0x3c
   12de4:	ldr	r3, [pc, #3712]	; 13c6c <strspn@plt+0x2c88>
   12de8:	str	r3, [sp, #72]	; 0x48
   12dec:	mov	fp, #0
   12df0:	b	12c90 <strspn@plt+0x1cac>
   12df4:	bl	10fd8 <abort@plt>
   12df8:	mov	r3, #0
   12dfc:	str	r3, [sp, #32]
   12e00:	mov	r3, #1
   12e04:	str	r3, [sp, #48]	; 0x30
   12e08:	mov	fp, #0
   12e0c:	b	12c90 <strspn@plt+0x1cac>
   12e10:	ldr	r3, [sp, #32]
   12e14:	str	r3, [sp, #48]	; 0x30
   12e18:	mov	r3, #1
   12e1c:	str	r3, [sp, #60]	; 0x3c
   12e20:	ldr	r3, [pc, #3660]	; 13c74 <strspn@plt+0x2c90>
   12e24:	str	r3, [sp, #72]	; 0x48
   12e28:	mov	fp, #0
   12e2c:	b	12c90 <strspn@plt+0x1cac>
   12e30:	mov	r3, #1
   12e34:	str	r3, [sp, #48]	; 0x30
   12e38:	str	r3, [sp, #60]	; 0x3c
   12e3c:	ldr	r3, [pc, #3632]	; 13c74 <strspn@plt+0x2c90>
   12e40:	str	r3, [sp, #72]	; 0x48
   12e44:	mov	fp, #1
   12e48:	b	12c90 <strspn@plt+0x1cac>
   12e4c:	mov	r3, #1
   12e50:	str	r3, [sp, #60]	; 0x3c
   12e54:	ldr	r3, [pc, #3600]	; 13c6c <strspn@plt+0x2c88>
   12e58:	str	r3, [sp, #72]	; 0x48
   12e5c:	mov	fp, #0
   12e60:	mov	sl, #2
   12e64:	b	12c90 <strspn@plt+0x1cac>
   12e68:	mov	r3, #0
   12e6c:	str	r3, [sp, #32]
   12e70:	mov	r3, #1
   12e74:	str	r3, [sp, #60]	; 0x3c
   12e78:	ldr	r3, [pc, #3564]	; 13c6c <strspn@plt+0x2c88>
   12e7c:	str	r3, [sp, #72]	; 0x48
   12e80:	mov	fp, #1
   12e84:	mov	sl, #2
   12e88:	b	12c90 <strspn@plt+0x1cac>
   12e8c:	mov	r3, #0
   12e90:	str	r3, [sp, #56]	; 0x38
   12e94:	ldr	r3, [sp, #52]	; 0x34
   12e98:	add	r2, r3, r6
   12e9c:	str	r2, [sp, #64]	; 0x40
   12ea0:	ldrb	r4, [r3, r6]
   12ea4:	cmp	r4, #126	; 0x7e
   12ea8:	ldrls	pc, [pc, r4, lsl #2]
   12eac:	b	136e8 <strspn@plt+0x2704>
   12eb0:	andeq	r3, r1, r8, asr #1
   12eb4:	andeq	r3, r1, r8, ror #13
   12eb8:	andeq	r3, r1, r8, ror #13
   12ebc:	andeq	r3, r1, r8, ror #13
   12ec0:	andeq	r3, r1, r8, ror #13
   12ec4:	andeq	r3, r1, r8, ror #13
   12ec8:	andeq	r3, r1, r8, ror #13
   12ecc:	andeq	r3, r1, r4, lsr #8
   12ed0:	andeq	r3, r1, r0, asr #1
   12ed4:	ldrdeq	r3, [r1], -ip
   12ed8:	ldrdeq	r3, [r1], -r4
   12edc:	andeq	r3, r1, r4, asr #6
   12ee0:	andeq	r3, r1, ip, lsr r3
   12ee4:	strheq	r3, [r1], -r8
   12ee8:	andeq	r3, r1, r8, ror #13
   12eec:	andeq	r3, r1, r8, ror #13
   12ef0:	andeq	r3, r1, r8, ror #13
   12ef4:	andeq	r3, r1, r8, ror #13
   12ef8:	andeq	r3, r1, r8, ror #13
   12efc:	andeq	r3, r1, r8, ror #13
   12f00:	andeq	r3, r1, r8, ror #13
   12f04:	andeq	r3, r1, r8, ror #13
   12f08:	andeq	r3, r1, r8, ror #13
   12f0c:	andeq	r3, r1, r8, ror #13
   12f10:	andeq	r3, r1, r8, ror #13
   12f14:	andeq	r3, r1, r8, ror #13
   12f18:	andeq	r3, r1, r8, ror #13
   12f1c:	andeq	r3, r1, r8, ror #13
   12f20:	andeq	r3, r1, r8, ror #13
   12f24:	andeq	r3, r1, r8, ror #13
   12f28:	andeq	r3, r1, r8, ror #13
   12f2c:	andeq	r3, r1, r8, ror #13
   12f30:	andeq	r3, r1, r8, ror r4
   12f34:	andeq	r3, r1, r4, ror r4
   12f38:	andeq	r3, r1, r4, ror r4
   12f3c:	andeq	r3, r1, ip, asr #8
   12f40:	andeq	r3, r1, r4, ror r4
   12f44:			; <UNDEFINED> instruction: 0x00013abc
   12f48:	andeq	r3, r1, r4, ror r4
   12f4c:	andeq	r3, r1, ip, asr #12
   12f50:	andeq	r3, r1, r4, ror r4
   12f54:	andeq	r3, r1, r4, ror r4
   12f58:	andeq	r3, r1, r4, ror r4
   12f5c:			; <UNDEFINED> instruction: 0x00013abc
   12f60:			; <UNDEFINED> instruction: 0x00013abc
   12f64:			; <UNDEFINED> instruction: 0x00013abc
   12f68:			; <UNDEFINED> instruction: 0x00013abc
   12f6c:			; <UNDEFINED> instruction: 0x00013abc
   12f70:			; <UNDEFINED> instruction: 0x00013abc
   12f74:			; <UNDEFINED> instruction: 0x00013abc
   12f78:			; <UNDEFINED> instruction: 0x00013abc
   12f7c:			; <UNDEFINED> instruction: 0x00013abc
   12f80:			; <UNDEFINED> instruction: 0x00013abc
   12f84:			; <UNDEFINED> instruction: 0x00013abc
   12f88:			; <UNDEFINED> instruction: 0x00013abc
   12f8c:			; <UNDEFINED> instruction: 0x00013abc
   12f90:			; <UNDEFINED> instruction: 0x00013abc
   12f94:			; <UNDEFINED> instruction: 0x00013abc
   12f98:			; <UNDEFINED> instruction: 0x00013abc
   12f9c:	andeq	r3, r1, r4, ror r4
   12fa0:	andeq	r3, r1, r4, ror r4
   12fa4:	andeq	r3, r1, r4, ror r4
   12fa8:	andeq	r3, r1, r4, ror r4
   12fac:	ldrdeq	r3, [r1], -r0
   12fb0:	andeq	r3, r1, r8, ror #13
   12fb4:			; <UNDEFINED> instruction: 0x00013abc
   12fb8:			; <UNDEFINED> instruction: 0x00013abc
   12fbc:			; <UNDEFINED> instruction: 0x00013abc
   12fc0:			; <UNDEFINED> instruction: 0x00013abc
   12fc4:			; <UNDEFINED> instruction: 0x00013abc
   12fc8:			; <UNDEFINED> instruction: 0x00013abc
   12fcc:			; <UNDEFINED> instruction: 0x00013abc
   12fd0:			; <UNDEFINED> instruction: 0x00013abc
   12fd4:			; <UNDEFINED> instruction: 0x00013abc
   12fd8:			; <UNDEFINED> instruction: 0x00013abc
   12fdc:			; <UNDEFINED> instruction: 0x00013abc
   12fe0:			; <UNDEFINED> instruction: 0x00013abc
   12fe4:			; <UNDEFINED> instruction: 0x00013abc
   12fe8:			; <UNDEFINED> instruction: 0x00013abc
   12fec:			; <UNDEFINED> instruction: 0x00013abc
   12ff0:			; <UNDEFINED> instruction: 0x00013abc
   12ff4:			; <UNDEFINED> instruction: 0x00013abc
   12ff8:			; <UNDEFINED> instruction: 0x00013abc
   12ffc:			; <UNDEFINED> instruction: 0x00013abc
   13000:			; <UNDEFINED> instruction: 0x00013abc
   13004:			; <UNDEFINED> instruction: 0x00013abc
   13008:			; <UNDEFINED> instruction: 0x00013abc
   1300c:			; <UNDEFINED> instruction: 0x00013abc
   13010:			; <UNDEFINED> instruction: 0x00013abc
   13014:			; <UNDEFINED> instruction: 0x00013abc
   13018:			; <UNDEFINED> instruction: 0x00013abc
   1301c:	andeq	r3, r1, r4, ror r4
   13020:	andeq	r3, r1, ip, asr #6
   13024:			; <UNDEFINED> instruction: 0x00013abc
   13028:	andeq	r3, r1, r4, ror r4
   1302c:			; <UNDEFINED> instruction: 0x00013abc
   13030:	andeq	r3, r1, r4, ror r4
   13034:			; <UNDEFINED> instruction: 0x00013abc
   13038:			; <UNDEFINED> instruction: 0x00013abc
   1303c:			; <UNDEFINED> instruction: 0x00013abc
   13040:			; <UNDEFINED> instruction: 0x00013abc
   13044:			; <UNDEFINED> instruction: 0x00013abc
   13048:			; <UNDEFINED> instruction: 0x00013abc
   1304c:			; <UNDEFINED> instruction: 0x00013abc
   13050:			; <UNDEFINED> instruction: 0x00013abc
   13054:			; <UNDEFINED> instruction: 0x00013abc
   13058:			; <UNDEFINED> instruction: 0x00013abc
   1305c:			; <UNDEFINED> instruction: 0x00013abc
   13060:			; <UNDEFINED> instruction: 0x00013abc
   13064:			; <UNDEFINED> instruction: 0x00013abc
   13068:			; <UNDEFINED> instruction: 0x00013abc
   1306c:			; <UNDEFINED> instruction: 0x00013abc
   13070:			; <UNDEFINED> instruction: 0x00013abc
   13074:			; <UNDEFINED> instruction: 0x00013abc
   13078:			; <UNDEFINED> instruction: 0x00013abc
   1307c:			; <UNDEFINED> instruction: 0x00013abc
   13080:			; <UNDEFINED> instruction: 0x00013abc
   13084:			; <UNDEFINED> instruction: 0x00013abc
   13088:			; <UNDEFINED> instruction: 0x00013abc
   1308c:			; <UNDEFINED> instruction: 0x00013abc
   13090:			; <UNDEFINED> instruction: 0x00013abc
   13094:			; <UNDEFINED> instruction: 0x00013abc
   13098:			; <UNDEFINED> instruction: 0x00013abc
   1309c:	andeq	r3, r1, ip, lsr #8
   130a0:	andeq	r3, r1, r4, ror r4
   130a4:	andeq	r3, r1, ip, lsr #8
   130a8:	andeq	r3, r1, ip, asr #8
   130ac:	mov	r3, #0
   130b0:	str	r3, [sp, #56]	; 0x38
   130b4:	b	12e94 <strspn@plt+0x1eb0>
   130b8:	mov	r3, #114	; 0x72
   130bc:	b	133e0 <strspn@plt+0x23fc>
   130c0:	mov	r3, #98	; 0x62
   130c4:	b	133f8 <strspn@plt+0x2414>
   130c8:	ldr	r3, [sp, #48]	; 0x30
   130cc:	cmp	r3, #0
   130d0:	beq	131b8 <strspn@plt+0x21d4>
   130d4:	ldr	r3, [sp, #32]
   130d8:	cmp	r3, #0
   130dc:	bne	13c40 <strspn@plt+0x2c5c>
   130e0:	ldr	r3, [sp, #44]	; 0x2c
   130e4:	eor	r3, r3, #1
   130e8:	cmp	sl, #2
   130ec:	movne	r3, #0
   130f0:	andeq	r3, r3, #1
   130f4:	cmp	r3, #0
   130f8:	moveq	r2, fp
   130fc:	beq	13140 <strspn@plt+0x215c>
   13100:	cmp	r7, fp
   13104:	ldrhi	r2, [sp, #36]	; 0x24
   13108:	movhi	r1, #39	; 0x27
   1310c:	strbhi	r1, [r2, fp]
   13110:	add	r2, fp, #1
   13114:	cmp	r7, r2
   13118:	ldrhi	r1, [sp, #36]	; 0x24
   1311c:	movhi	r0, #36	; 0x24
   13120:	strbhi	r0, [r1, r2]
   13124:	add	r2, fp, #2
   13128:	cmp	r7, r2
   1312c:	ldrhi	r1, [sp, #36]	; 0x24
   13130:	movhi	r0, #39	; 0x27
   13134:	strbhi	r0, [r1, r2]
   13138:	add	r2, fp, #3
   1313c:	str	r3, [sp, #44]	; 0x2c
   13140:	cmp	r7, r2
   13144:	ldrhi	r3, [sp, #36]	; 0x24
   13148:	movhi	r1, #92	; 0x5c
   1314c:	strbhi	r1, [r3, r2]
   13150:	add	fp, r2, #1
   13154:	cmp	r5, #0
   13158:	beq	13ac4 <strspn@plt+0x2ae0>
   1315c:	add	r3, r6, #1
   13160:	ldr	r1, [sp, #28]
   13164:	cmp	r1, r3
   13168:	bls	13ad4 <strspn@plt+0x2af0>
   1316c:	ldr	r1, [sp, #52]	; 0x34
   13170:	ldrb	r3, [r1, r3]
   13174:	sub	r3, r3, #48	; 0x30
   13178:	uxtb	r3, r3
   1317c:	cmp	r3, #9
   13180:	bhi	13ae0 <strspn@plt+0x2afc>
   13184:	cmp	r7, fp
   13188:	movhi	r3, #48	; 0x30
   1318c:	ldrhi	r1, [sp, #36]	; 0x24
   13190:	strbhi	r3, [r1, fp]
   13194:	add	r3, r2, #2
   13198:	cmp	r7, r3
   1319c:	movhi	r1, #48	; 0x30
   131a0:	ldrhi	r0, [sp, #36]	; 0x24
   131a4:	strbhi	r1, [r0, r3]
   131a8:	add	fp, r2, #3
   131ac:	ldr	r8, [sp, #32]
   131b0:	mov	r4, #48	; 0x30
   131b4:	b	13490 <strspn@plt+0x24ac>
   131b8:	ldr	r3, [sp, #156]	; 0x9c
   131bc:	tst	r3, #1
   131c0:	bne	13584 <strspn@plt+0x25a0>
   131c4:	ldr	r5, [sp, #48]	; 0x30
   131c8:	mov	r8, r5
   131cc:	b	13490 <strspn@plt+0x24ac>
   131d0:	cmp	sl, #2
   131d4:	beq	131ec <strspn@plt+0x2208>
   131d8:	cmp	sl, #5
   131dc:	beq	13204 <strspn@plt+0x2220>
   131e0:	mov	r8, #0
   131e4:	mov	r5, r8
   131e8:	b	13490 <strspn@plt+0x24ac>
   131ec:	ldr	r3, [sp, #32]
   131f0:	cmp	r3, #0
   131f4:	bne	13c54 <strspn@plt+0x2c70>
   131f8:	mov	r8, r3
   131fc:	mov	r5, r3
   13200:	b	13490 <strspn@plt+0x24ac>
   13204:	ldr	r3, [sp, #156]	; 0x9c
   13208:	tst	r3, #4
   1320c:	beq	13aec <strspn@plt+0x2b08>
   13210:	add	r3, r6, #2
   13214:	ldr	r2, [sp, #28]
   13218:	cmp	r2, r3
   1321c:	bls	13af8 <strspn@plt+0x2b14>
   13220:	ldr	r2, [sp, #52]	; 0x34
   13224:	add	r2, r2, r6
   13228:	ldrb	r2, [r2, #1]
   1322c:	cmp	r2, #63	; 0x3f
   13230:	movne	r8, #0
   13234:	movne	r5, r8
   13238:	bne	13490 <strspn@plt+0x24ac>
   1323c:	ldr	r2, [sp, #52]	; 0x34
   13240:	ldrb	r2, [r2, r3]
   13244:	sub	r1, r2, #33	; 0x21
   13248:	cmp	r1, #29
   1324c:	ldrls	pc, [pc, r1, lsl #2]
   13250:	b	13b04 <strspn@plt+0x2b20>
   13254:	andeq	r3, r1, ip, asr #5
   13258:	andeq	r3, r1, r4, lsl #22
   1325c:	andeq	r3, r1, r4, lsl #22
   13260:	andeq	r3, r1, r4, lsl #22
   13264:	andeq	r3, r1, r4, lsl #22
   13268:	andeq	r3, r1, r4, lsl #22
   1326c:	andeq	r3, r1, ip, asr #5
   13270:	andeq	r3, r1, ip, asr #5
   13274:	andeq	r3, r1, ip, asr #5
   13278:	andeq	r3, r1, r4, lsl #22
   1327c:	andeq	r3, r1, r4, lsl #22
   13280:	andeq	r3, r1, r4, lsl #22
   13284:	andeq	r3, r1, ip, asr #5
   13288:	andeq	r3, r1, r4, lsl #22
   1328c:	andeq	r3, r1, ip, asr #5
   13290:	andeq	r3, r1, r4, lsl #22
   13294:	andeq	r3, r1, r4, lsl #22
   13298:	andeq	r3, r1, r4, lsl #22
   1329c:	andeq	r3, r1, r4, lsl #22
   132a0:	andeq	r3, r1, r4, lsl #22
   132a4:	andeq	r3, r1, r4, lsl #22
   132a8:	andeq	r3, r1, r4, lsl #22
   132ac:	andeq	r3, r1, r4, lsl #22
   132b0:	andeq	r3, r1, r4, lsl #22
   132b4:	andeq	r3, r1, r4, lsl #22
   132b8:	andeq	r3, r1, r4, lsl #22
   132bc:	andeq	r3, r1, r4, lsl #22
   132c0:	andeq	r3, r1, ip, asr #5
   132c4:	andeq	r3, r1, ip, asr #5
   132c8:	andeq	r3, r1, ip, asr #5
   132cc:	ldr	r1, [sp, #32]
   132d0:	cmp	r1, #0
   132d4:	bne	13d14 <strspn@plt+0x2d30>
   132d8:	cmp	r7, fp
   132dc:	movhi	r1, #63	; 0x3f
   132e0:	ldrhi	r0, [sp, #36]	; 0x24
   132e4:	strbhi	r1, [r0, fp]
   132e8:	add	r1, fp, #1
   132ec:	cmp	r7, r1
   132f0:	ldrhi	r0, [sp, #36]	; 0x24
   132f4:	movhi	ip, #34	; 0x22
   132f8:	strbhi	ip, [r0, r1]
   132fc:	add	r1, fp, #2
   13300:	cmp	r7, r1
   13304:	ldrhi	r0, [sp, #36]	; 0x24
   13308:	movhi	ip, #34	; 0x22
   1330c:	strbhi	ip, [r0, r1]
   13310:	add	r1, fp, #3
   13314:	cmp	r7, r1
   13318:	movhi	r0, #63	; 0x3f
   1331c:	ldrhi	ip, [sp, #36]	; 0x24
   13320:	strbhi	r0, [ip, r1]
   13324:	add	fp, fp, #4
   13328:	ldr	r5, [sp, #32]
   1332c:	mov	r8, r5
   13330:	mov	r4, r2
   13334:	mov	r6, r3
   13338:	b	13490 <strspn@plt+0x24ac>
   1333c:	mov	r3, #102	; 0x66
   13340:	b	133f8 <strspn@plt+0x2414>
   13344:	mov	r3, #118	; 0x76
   13348:	b	133f8 <strspn@plt+0x2414>
   1334c:	cmp	sl, #2
   13350:	beq	133bc <strspn@plt+0x23d8>
   13354:	ldr	r3, [sp, #48]	; 0x30
   13358:	ldr	r2, [sp, #32]
   1335c:	and	r3, r3, r2
   13360:	tst	r9, r3
   13364:	moveq	r3, r4
   13368:	beq	133f8 <strspn@plt+0x2414>
   1336c:	mov	r8, #0
   13370:	mov	r5, r8
   13374:	eor	r5, r5, #1
   13378:	ldr	r3, [sp, #44]	; 0x2c
   1337c:	and	r5, r5, r3
   13380:	tst	r5, #255	; 0xff
   13384:	beq	13564 <strspn@plt+0x2580>
   13388:	cmp	r7, fp
   1338c:	ldrhi	r3, [sp, #36]	; 0x24
   13390:	movhi	r2, #39	; 0x27
   13394:	strbhi	r2, [r3, fp]
   13398:	add	r3, fp, #1
   1339c:	cmp	r7, r3
   133a0:	ldrhi	r2, [sp, #36]	; 0x24
   133a4:	movhi	r1, #39	; 0x27
   133a8:	strbhi	r1, [r2, r3]
   133ac:	add	fp, fp, #2
   133b0:	mov	r3, #0
   133b4:	str	r3, [sp, #44]	; 0x2c
   133b8:	b	13564 <strspn@plt+0x2580>
   133bc:	ldr	r3, [sp, #32]
   133c0:	cmp	r3, #0
   133c4:	bne	13c60 <strspn@plt+0x2c7c>
   133c8:	mov	r8, r3
   133cc:	mov	r5, r3
   133d0:	b	13374 <strspn@plt+0x2390>
   133d4:	mov	r3, #110	; 0x6e
   133d8:	b	133e0 <strspn@plt+0x23fc>
   133dc:	mov	r3, #116	; 0x74
   133e0:	ldr	r2, [sp, #32]
   133e4:	cmp	sl, #2
   133e8:	movne	r2, #0
   133ec:	andeq	r2, r2, #1
   133f0:	cmp	r2, #0
   133f4:	bne	13418 <strspn@plt+0x2434>
   133f8:	ldr	r2, [sp, #48]	; 0x30
   133fc:	cmp	r2, #0
   13400:	moveq	r8, r2
   13404:	moveq	r5, r2
   13408:	beq	13490 <strspn@plt+0x24ac>
   1340c:	mov	r4, r3
   13410:	mov	r8, #0
   13414:	b	134e8 <strspn@plt+0x2504>
   13418:	mov	r8, sl
   1341c:	mov	sl, r7
   13420:	b	13c8c <strspn@plt+0x2ca8>
   13424:	mov	r3, #97	; 0x61
   13428:	b	133f8 <strspn@plt+0x2414>
   1342c:	ldr	r3, [sp, #28]
   13430:	cmn	r3, #1
   13434:	beq	13460 <strspn@plt+0x247c>
   13438:	ldr	r3, [sp, #28]
   1343c:	subs	r3, r3, #1
   13440:	movne	r3, #1
   13444:	cmp	r3, #0
   13448:	bne	13b10 <strspn@plt+0x2b2c>
   1344c:	cmp	r6, #0
   13450:	beq	13478 <strspn@plt+0x2494>
   13454:	mov	r8, #0
   13458:	mov	r5, r8
   1345c:	b	13490 <strspn@plt+0x24ac>
   13460:	ldr	r3, [sp, #52]	; 0x34
   13464:	ldrb	r3, [r3, #1]
   13468:	adds	r3, r3, #0
   1346c:	movne	r3, #1
   13470:	b	13444 <strspn@plt+0x2460>
   13474:	mov	r8, #0
   13478:	ldr	r5, [sp, #32]
   1347c:	cmp	sl, #2
   13480:	movne	r5, #0
   13484:	andeq	r5, r5, #1
   13488:	cmp	r5, #0
   1348c:	bne	13640 <strspn@plt+0x265c>
   13490:	ldr	r3, [sp, #68]	; 0x44
   13494:	cmp	sl, #2
   13498:	orreq	r3, r3, #1
   1349c:	eor	r3, r3, #1
   134a0:	ldr	r2, [sp, #32]
   134a4:	orr	r3, r2, r3
   134a8:	tst	r3, #255	; 0xff
   134ac:	beq	134dc <strspn@plt+0x24f8>
   134b0:	ldr	r3, [sp, #160]	; 0xa0
   134b4:	cmp	r3, #0
   134b8:	beq	134dc <strspn@plt+0x24f8>
   134bc:	lsr	r2, r4, #5
   134c0:	uxtb	r2, r2
   134c4:	and	r3, r4, #31
   134c8:	ldr	r1, [sp, #160]	; 0xa0
   134cc:	ldr	r2, [r1, r2, lsl #2]
   134d0:	lsr	r3, r2, r3
   134d4:	tst	r3, #1
   134d8:	bne	134e8 <strspn@plt+0x2504>
   134dc:	ldr	r3, [sp, #56]	; 0x38
   134e0:	cmp	r3, #0
   134e4:	beq	13374 <strspn@plt+0x2390>
   134e8:	ldr	r3, [sp, #32]
   134ec:	cmp	r3, #0
   134f0:	bne	13cfc <strspn@plt+0x2d18>
   134f4:	ldr	r3, [sp, #44]	; 0x2c
   134f8:	eor	r3, r3, #1
   134fc:	cmp	sl, #2
   13500:	movne	r3, #0
   13504:	andeq	r3, r3, #1
   13508:	cmp	r3, #0
   1350c:	beq	13550 <strspn@plt+0x256c>
   13510:	cmp	r7, fp
   13514:	ldrhi	r2, [sp, #36]	; 0x24
   13518:	movhi	r1, #39	; 0x27
   1351c:	strbhi	r1, [r2, fp]
   13520:	add	r2, fp, #1
   13524:	cmp	r7, r2
   13528:	ldrhi	r1, [sp, #36]	; 0x24
   1352c:	movhi	r0, #36	; 0x24
   13530:	strbhi	r0, [r1, r2]
   13534:	add	r2, fp, #2
   13538:	cmp	r7, r2
   1353c:	ldrhi	r1, [sp, #36]	; 0x24
   13540:	movhi	r0, #39	; 0x27
   13544:	strbhi	r0, [r1, r2]
   13548:	add	fp, fp, #3
   1354c:	str	r3, [sp, #44]	; 0x2c
   13550:	cmp	r7, fp
   13554:	ldrhi	r3, [sp, #36]	; 0x24
   13558:	movhi	r2, #92	; 0x5c
   1355c:	strbhi	r2, [r3, fp]
   13560:	add	fp, fp, #1
   13564:	cmp	fp, r7
   13568:	ldrcc	r3, [sp, #36]	; 0x24
   1356c:	strbcc	r4, [r3, fp]
   13570:	add	fp, fp, #1
   13574:	ldr	r3, [sp, #40]	; 0x28
   13578:	cmp	r8, #0
   1357c:	moveq	r3, #0
   13580:	str	r3, [sp, #40]	; 0x28
   13584:	add	r6, r6, #1
   13588:	ldr	r3, [sp, #28]
   1358c:	cmn	r3, #1
   13590:	beq	13b1c <strspn@plt+0x2b38>
   13594:	ldr	r3, [sp, #28]
   13598:	subs	r8, r3, r6
   1359c:	movne	r8, #1
   135a0:	cmp	r8, #0
   135a4:	beq	13b30 <strspn@plt+0x2b4c>
   135a8:	ldr	r5, [sp, #48]	; 0x30
   135ac:	cmp	sl, #2
   135b0:	moveq	r5, #0
   135b4:	andne	r5, r5, #1
   135b8:	ldr	r3, [sp, #60]	; 0x3c
   135bc:	adds	r9, r3, #0
   135c0:	movne	r9, #1
   135c4:	ands	r2, r5, r9
   135c8:	str	r2, [sp, #56]	; 0x38
   135cc:	beq	12e94 <strspn@plt+0x1eb0>
   135d0:	add	r4, r6, r3
   135d4:	ldr	r2, [sp, #28]
   135d8:	cmp	r3, #1
   135dc:	movls	r3, #0
   135e0:	movhi	r3, #1
   135e4:	cmn	r2, #1
   135e8:	movne	r3, #0
   135ec:	cmp	r3, #0
   135f0:	beq	13600 <strspn@plt+0x261c>
   135f4:	ldr	r0, [sp, #52]	; 0x34
   135f8:	bl	10f00 <strlen@plt>
   135fc:	str	r0, [sp, #28]
   13600:	ldr	r3, [sp, #28]
   13604:	cmp	r3, r4
   13608:	bcc	12e8c <strspn@plt+0x1ea8>
   1360c:	ldr	r2, [sp, #60]	; 0x3c
   13610:	ldr	r1, [sp, #72]	; 0x48
   13614:	ldr	r3, [sp, #52]	; 0x34
   13618:	add	r0, r3, r6
   1361c:	bl	10df8 <memcmp@plt>
   13620:	cmp	r0, #0
   13624:	bne	130ac <strspn@plt+0x20c8>
   13628:	ldr	r3, [sp, #32]
   1362c:	cmp	r3, #0
   13630:	beq	12e94 <strspn@plt+0x1eb0>
   13634:	mov	r8, sl
   13638:	mov	sl, r7
   1363c:	b	13c8c <strspn@plt+0x2ca8>
   13640:	mov	r8, sl
   13644:	mov	sl, r7
   13648:	b	13c8c <strspn@plt+0x2ca8>
   1364c:	cmp	sl, #2
   13650:	strne	r8, [sp, #80]	; 0x50
   13654:	movne	r5, #0
   13658:	bne	13490 <strspn@plt+0x24ac>
   1365c:	ldr	r3, [sp, #32]
   13660:	cmp	r3, #0
   13664:	bne	13c78 <strspn@plt+0x2c94>
   13668:	ldr	r2, [sp, #76]	; 0x4c
   1366c:	adds	r3, r7, #0
   13670:	movne	r3, #1
   13674:	cmp	r2, #0
   13678:	movne	r3, #0
   1367c:	cmp	r3, #0
   13680:	movne	r3, #0
   13684:	bne	136b4 <strspn@plt+0x26d0>
   13688:	cmp	r7, fp
   1368c:	ldrhi	r3, [sp, #36]	; 0x24
   13690:	movhi	r2, #39	; 0x27
   13694:	strbhi	r2, [r3, fp]
   13698:	add	r3, fp, #1
   1369c:	cmp	r7, r3
   136a0:	ldrhi	r2, [sp, #36]	; 0x24
   136a4:	movhi	r1, #92	; 0x5c
   136a8:	strbhi	r1, [r2, r3]
   136ac:	mov	r3, r7
   136b0:	ldr	r7, [sp, #76]	; 0x4c
   136b4:	add	r2, fp, #2
   136b8:	cmp	r2, r3
   136bc:	ldrcc	r1, [sp, #36]	; 0x24
   136c0:	movcc	r0, #39	; 0x27
   136c4:	strbcc	r0, [r1, r2]
   136c8:	add	fp, fp, #3
   136cc:	ldr	r2, [sp, #32]
   136d0:	mov	r5, r2
   136d4:	str	r8, [sp, #80]	; 0x50
   136d8:	str	r2, [sp, #44]	; 0x2c
   136dc:	str	r7, [sp, #76]	; 0x4c
   136e0:	mov	r7, r3
   136e4:	b	13490 <strspn@plt+0x24ac>
   136e8:	ldr	r5, [sp, #84]	; 0x54
   136ec:	cmp	r5, #1
   136f0:	beq	13720 <strspn@plt+0x273c>
   136f4:	mov	r3, #0
   136f8:	str	r3, [sp, #104]	; 0x68
   136fc:	str	r3, [sp, #108]	; 0x6c
   13700:	ldr	r3, [sp, #28]
   13704:	cmn	r3, #1
   13708:	beq	13754 <strspn@plt+0x2770>
   1370c:	mov	r3, #0
   13710:	str	r4, [sp, #88]	; 0x58
   13714:	str	fp, [sp, #92]	; 0x5c
   13718:	mov	fp, r3
   1371c:	b	1387c <strspn@plt+0x2898>
   13720:	bl	10ee8 <__ctype_b_loc@plt>
   13724:	ldr	r2, [r0]
   13728:	lsl	r3, r4, #1
   1372c:	ldrh	r8, [r2, r3]
   13730:	lsr	r8, r8, #14
   13734:	and	r8, r8, #1
   13738:	mov	r2, r5
   1373c:	eor	r5, r8, #1
   13740:	ldr	r3, [sp, #48]	; 0x30
   13744:	and	r5, r5, r3
   13748:	ands	r5, r5, #255	; 0xff
   1374c:	beq	13490 <strspn@plt+0x24ac>
   13750:	b	13914 <strspn@plt+0x2930>
   13754:	ldr	r0, [sp, #52]	; 0x34
   13758:	bl	10f00 <strlen@plt>
   1375c:	str	r0, [sp, #28]
   13760:	b	1370c <strspn@plt+0x2728>
   13764:	mov	r2, fp
   13768:	mov	r1, r4
   1376c:	ldr	r4, [sp, #88]	; 0x58
   13770:	ldr	fp, [sp, #92]	; 0x5c
   13774:	ldr	r0, [sp, #28]
   13778:	cmp	r0, r5
   1377c:	bls	13948 <strspn@plt+0x2964>
   13780:	ldrb	r3, [r1]
   13784:	cmp	r3, #0
   13788:	beq	13950 <strspn@plt+0x296c>
   1378c:	mov	r3, r1
   13790:	add	r2, r2, #1
   13794:	add	r1, r6, r2
   13798:	cmp	r0, r1
   1379c:	bls	13958 <strspn@plt+0x2974>
   137a0:	ldrb	r1, [r3, #1]!
   137a4:	cmp	r1, #0
   137a8:	bne	13790 <strspn@plt+0x27ac>
   137ac:	mov	r8, #0
   137b0:	b	1390c <strspn@plt+0x2928>
   137b4:	cmp	r4, r5
   137b8:	beq	13858 <strspn@plt+0x2874>
   137bc:	ldrb	r3, [r4, #1]!
   137c0:	sub	r3, r3, #91	; 0x5b
   137c4:	cmp	r3, #33	; 0x21
   137c8:	ldrls	pc, [pc, r3, lsl #2]
   137cc:	b	137b4 <strspn@plt+0x27d0>
   137d0:	andeq	r3, r1, r4, lsl #25
   137d4:	andeq	r3, r1, r4, lsl #25
   137d8:			; <UNDEFINED> instruction: 0x000137b4
   137dc:	andeq	r3, r1, r4, lsl #25
   137e0:			; <UNDEFINED> instruction: 0x000137b4
   137e4:	andeq	r3, r1, r4, lsl #25
   137e8:			; <UNDEFINED> instruction: 0x000137b4
   137ec:			; <UNDEFINED> instruction: 0x000137b4
   137f0:			; <UNDEFINED> instruction: 0x000137b4
   137f4:			; <UNDEFINED> instruction: 0x000137b4
   137f8:			; <UNDEFINED> instruction: 0x000137b4
   137fc:			; <UNDEFINED> instruction: 0x000137b4
   13800:			; <UNDEFINED> instruction: 0x000137b4
   13804:			; <UNDEFINED> instruction: 0x000137b4
   13808:			; <UNDEFINED> instruction: 0x000137b4
   1380c:			; <UNDEFINED> instruction: 0x000137b4
   13810:			; <UNDEFINED> instruction: 0x000137b4
   13814:			; <UNDEFINED> instruction: 0x000137b4
   13818:			; <UNDEFINED> instruction: 0x000137b4
   1381c:			; <UNDEFINED> instruction: 0x000137b4
   13820:			; <UNDEFINED> instruction: 0x000137b4
   13824:			; <UNDEFINED> instruction: 0x000137b4
   13828:			; <UNDEFINED> instruction: 0x000137b4
   1382c:			; <UNDEFINED> instruction: 0x000137b4
   13830:			; <UNDEFINED> instruction: 0x000137b4
   13834:			; <UNDEFINED> instruction: 0x000137b4
   13838:			; <UNDEFINED> instruction: 0x000137b4
   1383c:			; <UNDEFINED> instruction: 0x000137b4
   13840:			; <UNDEFINED> instruction: 0x000137b4
   13844:			; <UNDEFINED> instruction: 0x000137b4
   13848:			; <UNDEFINED> instruction: 0x000137b4
   1384c:			; <UNDEFINED> instruction: 0x000137b4
   13850:			; <UNDEFINED> instruction: 0x000137b4
   13854:	andeq	r3, r1, r4, lsl #25
   13858:	ldr	r0, [sp, #100]	; 0x64
   1385c:	bl	10e34 <iswprint@plt>
   13860:	cmp	r0, #0
   13864:	moveq	r8, #0
   13868:	add	fp, fp, r9
   1386c:	add	r0, sp, #104	; 0x68
   13870:	bl	10dd4 <mbsinit@plt>
   13874:	cmp	r0, #0
   13878:	bne	138ec <strspn@plt+0x2908>
   1387c:	add	r5, r6, fp
   13880:	ldr	r3, [sp, #52]	; 0x34
   13884:	add	r4, r3, r5
   13888:	add	r3, sp, #104	; 0x68
   1388c:	ldr	r2, [sp, #28]
   13890:	sub	r2, r2, r5
   13894:	mov	r1, r4
   13898:	add	r0, sp, #100	; 0x64
   1389c:	bl	1553c <strspn@plt+0x4558>
   138a0:	subs	r9, r0, #0
   138a4:	beq	13960 <strspn@plt+0x297c>
   138a8:	cmn	r9, #1
   138ac:	beq	138fc <strspn@plt+0x2918>
   138b0:	cmn	r9, #2
   138b4:	beq	13764 <strspn@plt+0x2780>
   138b8:	ldr	r3, [sp, #32]
   138bc:	cmp	sl, #2
   138c0:	movne	r3, #0
   138c4:	andeq	r3, r3, #1
   138c8:	cmp	r3, #0
   138cc:	beq	13858 <strspn@plt+0x2874>
   138d0:	cmp	r9, #1
   138d4:	bls	13858 <strspn@plt+0x2874>
   138d8:	sub	r3, r9, #1
   138dc:	add	r5, r3, r5
   138e0:	ldr	r3, [sp, #52]	; 0x34
   138e4:	add	r5, r3, r5
   138e8:	b	137bc <strspn@plt+0x27d8>
   138ec:	ldr	r4, [sp, #88]	; 0x58
   138f0:	mov	r2, fp
   138f4:	ldr	fp, [sp, #92]	; 0x5c
   138f8:	b	1390c <strspn@plt+0x2928>
   138fc:	ldr	r4, [sp, #88]	; 0x58
   13900:	mov	r2, fp
   13904:	ldr	fp, [sp, #92]	; 0x5c
   13908:	mov	r8, #0
   1390c:	cmp	r2, #1
   13910:	bls	1373c <strspn@plt+0x2758>
   13914:	add	r1, r6, r2
   13918:	ldr	ip, [sp, #64]	; 0x40
   1391c:	mov	r5, #0
   13920:	eor	r3, r8, #1
   13924:	ldr	r2, [sp, #48]	; 0x30
   13928:	and	r3, r3, r2
   1392c:	uxtb	r3, r3
   13930:	ldr	r9, [sp, #32]
   13934:	ldr	lr, [sp, #44]	; 0x2c
   13938:	ldr	r2, [sp, #56]	; 0x38
   1393c:	str	r8, [sp, #56]	; 0x38
   13940:	ldr	r0, [sp, #36]	; 0x24
   13944:	b	139e0 <strspn@plt+0x29fc>
   13948:	mov	r8, #0
   1394c:	b	1390c <strspn@plt+0x2928>
   13950:	mov	r8, #0
   13954:	b	1390c <strspn@plt+0x2928>
   13958:	mov	r8, #0
   1395c:	b	1390c <strspn@plt+0x2928>
   13960:	ldr	r4, [sp, #88]	; 0x58
   13964:	mov	r2, fp
   13968:	ldr	fp, [sp, #92]	; 0x5c
   1396c:	b	1390c <strspn@plt+0x2928>
   13970:	cmp	r2, #0
   13974:	beq	13988 <strspn@plt+0x29a4>
   13978:	cmp	r7, fp
   1397c:	movhi	r2, #92	; 0x5c
   13980:	strbhi	r2, [r0, fp]
   13984:	add	fp, fp, #1
   13988:	add	r8, r6, #1
   1398c:	cmp	r1, r8
   13990:	bls	13a98 <strspn@plt+0x2ab4>
   13994:	eor	r2, r5, #1
   13998:	and	r2, r2, lr
   1399c:	ands	r2, r2, #255	; 0xff
   139a0:	beq	13ab4 <strspn@plt+0x2ad0>
   139a4:	cmp	r7, fp
   139a8:	movhi	r2, #39	; 0x27
   139ac:	strbhi	r2, [r0, fp]
   139b0:	add	r2, fp, #1
   139b4:	cmp	r7, r2
   139b8:	movhi	lr, #39	; 0x27
   139bc:	strbhi	lr, [r0, r2]
   139c0:	add	fp, fp, #2
   139c4:	mov	r6, r8
   139c8:	mov	r2, r3
   139cc:	mov	lr, r3
   139d0:	cmp	r7, fp
   139d4:	strbhi	r4, [r0, fp]
   139d8:	add	fp, fp, #1
   139dc:	ldrb	r4, [ip, #1]!
   139e0:	cmp	r3, #0
   139e4:	beq	13970 <strspn@plt+0x298c>
   139e8:	cmp	r9, #0
   139ec:	bne	13cf0 <strspn@plt+0x2d0c>
   139f0:	eor	r5, lr, #1
   139f4:	cmp	sl, #2
   139f8:	movne	r5, #0
   139fc:	andeq	r5, r5, #1
   13a00:	cmp	r5, #0
   13a04:	beq	13a3c <strspn@plt+0x2a58>
   13a08:	cmp	r7, fp
   13a0c:	movhi	lr, #39	; 0x27
   13a10:	strbhi	lr, [r0, fp]
   13a14:	add	lr, fp, #1
   13a18:	cmp	r7, lr
   13a1c:	movhi	r8, #36	; 0x24
   13a20:	strbhi	r8, [r0, lr]
   13a24:	add	lr, fp, #2
   13a28:	cmp	r7, lr
   13a2c:	movhi	r8, #39	; 0x27
   13a30:	strbhi	r8, [r0, lr]
   13a34:	add	fp, fp, #3
   13a38:	mov	lr, r5
   13a3c:	cmp	r7, fp
   13a40:	movhi	r5, #92	; 0x5c
   13a44:	strbhi	r5, [r0, fp]
   13a48:	add	r5, fp, #1
   13a4c:	cmp	r7, r5
   13a50:	lsrhi	r8, r4, #6
   13a54:	addhi	r8, r8, #48	; 0x30
   13a58:	strbhi	r8, [r0, r5]
   13a5c:	add	r8, fp, #2
   13a60:	cmp	r7, r8
   13a64:	lsrhi	r5, r4, #3
   13a68:	andhi	r5, r5, #7
   13a6c:	addhi	r5, r5, #48	; 0x30
   13a70:	strbhi	r5, [r0, r8]
   13a74:	add	fp, fp, #3
   13a78:	and	r4, r4, #7
   13a7c:	add	r4, r4, #48	; 0x30
   13a80:	add	r5, r6, #1
   13a84:	cmp	r1, r5
   13a88:	bls	13aa4 <strspn@plt+0x2ac0>
   13a8c:	mov	r6, r5
   13a90:	mov	r5, r3
   13a94:	b	139d0 <strspn@plt+0x29ec>
   13a98:	str	lr, [sp, #44]	; 0x2c
   13a9c:	ldr	r8, [sp, #56]	; 0x38
   13aa0:	b	13374 <strspn@plt+0x2390>
   13aa4:	str	lr, [sp, #44]	; 0x2c
   13aa8:	ldr	r8, [sp, #56]	; 0x38
   13aac:	mov	r5, r3
   13ab0:	b	13374 <strspn@plt+0x2390>
   13ab4:	mov	r6, r8
   13ab8:	b	139d0 <strspn@plt+0x29ec>
   13abc:	mov	r5, #0
   13ac0:	b	13490 <strspn@plt+0x24ac>
   13ac4:	mov	r8, r5
   13ac8:	ldr	r5, [sp, #48]	; 0x30
   13acc:	mov	r4, #48	; 0x30
   13ad0:	b	13490 <strspn@plt+0x24ac>
   13ad4:	ldr	r8, [sp, #32]
   13ad8:	mov	r4, #48	; 0x30
   13adc:	b	13490 <strspn@plt+0x24ac>
   13ae0:	ldr	r8, [sp, #32]
   13ae4:	mov	r4, #48	; 0x30
   13ae8:	b	13490 <strspn@plt+0x24ac>
   13aec:	mov	r8, #0
   13af0:	mov	r5, r8
   13af4:	b	13490 <strspn@plt+0x24ac>
   13af8:	mov	r8, #0
   13afc:	mov	r5, r8
   13b00:	b	13490 <strspn@plt+0x24ac>
   13b04:	mov	r8, #0
   13b08:	mov	r5, r8
   13b0c:	b	13490 <strspn@plt+0x24ac>
   13b10:	mov	r8, #0
   13b14:	mov	r5, r8
   13b18:	b	13490 <strspn@plt+0x24ac>
   13b1c:	ldr	r3, [sp, #52]	; 0x34
   13b20:	ldrb	r8, [r3, r6]
   13b24:	adds	r8, r8, #0
   13b28:	movne	r8, #1
   13b2c:	b	135a0 <strspn@plt+0x25bc>
   13b30:	cmp	sl, #2
   13b34:	movne	r3, #0
   13b38:	moveq	r3, #1
   13b3c:	ldr	r1, [sp, #32]
   13b40:	mov	r2, r1
   13b44:	and	r2, r2, r3
   13b48:	cmp	fp, #0
   13b4c:	movne	r2, #0
   13b50:	andeq	r2, r2, #1
   13b54:	cmp	r2, #0
   13b58:	bne	13d08 <strspn@plt+0x2d24>
   13b5c:	eor	r2, r1, #1
   13b60:	and	r3, r3, r2
   13b64:	ldr	r1, [sp, #80]	; 0x50
   13b68:	tst	r1, r3
   13b6c:	beq	13be4 <strspn@plt+0x2c00>
   13b70:	ldr	r3, [sp, #40]	; 0x28
   13b74:	cmp	r3, #0
   13b78:	bne	13ba0 <strspn@plt+0x2bbc>
   13b7c:	ldr	r1, [sp, #76]	; 0x4c
   13b80:	clz	r3, r7
   13b84:	lsr	r3, r3, #5
   13b88:	cmp	r1, #0
   13b8c:	moveq	r3, #0
   13b90:	cmp	r3, #0
   13b94:	beq	13be4 <strspn@plt+0x2c00>
   13b98:	ldr	r7, [sp, #76]	; 0x4c
   13b9c:	b	12c34 <strspn@plt+0x1c50>
   13ba0:	ldr	r3, [sp, #168]	; 0xa8
   13ba4:	str	r3, [sp, #16]
   13ba8:	ldr	r3, [sp, #164]	; 0xa4
   13bac:	str	r3, [sp, #12]
   13bb0:	ldr	r3, [sp, #160]	; 0xa0
   13bb4:	str	r3, [sp, #8]
   13bb8:	ldr	r3, [sp, #156]	; 0x9c
   13bbc:	str	r3, [sp, #4]
   13bc0:	mov	r3, #5
   13bc4:	str	r3, [sp]
   13bc8:	ldr	r3, [sp, #28]
   13bcc:	ldr	r2, [sp, #52]	; 0x34
   13bd0:	ldr	r1, [sp, #76]	; 0x4c
   13bd4:	ldr	r0, [sp, #36]	; 0x24
   13bd8:	bl	12bd4 <strspn@plt+0x1bf0>
   13bdc:	mov	fp, r0
   13be0:	b	13ce4 <strspn@plt+0x2d00>
   13be4:	mov	sl, r7
   13be8:	ldr	r3, [sp, #72]	; 0x48
   13bec:	cmp	r3, #0
   13bf0:	moveq	r2, #0
   13bf4:	andne	r2, r2, #1
   13bf8:	cmp	r2, #0
   13bfc:	beq	13c2c <strspn@plt+0x2c48>
   13c00:	mov	r2, r3
   13c04:	ldrb	r3, [r3]
   13c08:	cmp	r3, #0
   13c0c:	beq	13c2c <strspn@plt+0x2c48>
   13c10:	ldr	r1, [sp, #36]	; 0x24
   13c14:	cmp	sl, fp
   13c18:	strbhi	r3, [r1, fp]
   13c1c:	add	fp, fp, #1
   13c20:	ldrb	r3, [r2, #1]!
   13c24:	cmp	r3, #0
   13c28:	bne	13c14 <strspn@plt+0x2c30>
   13c2c:	cmp	sl, fp
   13c30:	movhi	r3, #0
   13c34:	ldrhi	r2, [sp, #36]	; 0x24
   13c38:	strbhi	r3, [r2, fp]
   13c3c:	b	13ce4 <strspn@plt+0x2d00>
   13c40:	mov	r8, sl
   13c44:	mov	sl, r7
   13c48:	ldr	r3, [sp, #32]
   13c4c:	str	r3, [sp, #48]	; 0x30
   13c50:	b	13c8c <strspn@plt+0x2ca8>
   13c54:	mov	r8, sl
   13c58:	mov	sl, r7
   13c5c:	b	13c8c <strspn@plt+0x2ca8>
   13c60:	mov	r8, sl
   13c64:	mov	sl, r7
   13c68:	b	13c8c <strspn@plt+0x2ca8>
   13c6c:	andeq	r6, r1, ip, lsr #12
   13c70:	andeq	r6, r1, ip, lsr r6
   13c74:	andeq	r6, r1, r0, lsr r6
   13c78:	mov	r8, sl
   13c7c:	mov	sl, r7
   13c80:	b	13c8c <strspn@plt+0x2ca8>
   13c84:	mov	r8, sl
   13c88:	mov	sl, r7
   13c8c:	ldr	r3, [sp, #48]	; 0x30
   13c90:	cmp	r8, #2
   13c94:	movne	r3, #0
   13c98:	andeq	r3, r3, #1
   13c9c:	cmp	r3, #0
   13ca0:	movne	r8, #4
   13ca4:	ldr	r3, [sp, #168]	; 0xa8
   13ca8:	str	r3, [sp, #16]
   13cac:	ldr	r3, [sp, #164]	; 0xa4
   13cb0:	str	r3, [sp, #12]
   13cb4:	mov	r3, #0
   13cb8:	str	r3, [sp, #8]
   13cbc:	ldr	r3, [sp, #156]	; 0x9c
   13cc0:	bic	r3, r3, #2
   13cc4:	str	r3, [sp, #4]
   13cc8:	str	r8, [sp]
   13ccc:	ldr	r3, [sp, #28]
   13cd0:	ldr	r2, [sp, #52]	; 0x34
   13cd4:	mov	r1, sl
   13cd8:	ldr	r0, [sp, #36]	; 0x24
   13cdc:	bl	12bd4 <strspn@plt+0x1bf0>
   13ce0:	mov	fp, r0
   13ce4:	mov	r0, fp
   13ce8:	add	sp, sp, #116	; 0x74
   13cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cf0:	mov	r8, sl
   13cf4:	mov	sl, r7
   13cf8:	b	13c8c <strspn@plt+0x2ca8>
   13cfc:	mov	r8, sl
   13d00:	mov	sl, r7
   13d04:	b	13c8c <strspn@plt+0x2ca8>
   13d08:	mov	r8, sl
   13d0c:	mov	sl, r7
   13d10:	b	13c8c <strspn@plt+0x2ca8>
   13d14:	mov	r8, sl
   13d18:	mov	sl, r7
   13d1c:	b	13ca4 <strspn@plt+0x2cc0>
   13d20:	mov	r3, #1
   13d24:	str	r3, [sp, #32]
   13d28:	str	r3, [sp, #48]	; 0x30
   13d2c:	str	r3, [sp, #60]	; 0x3c
   13d30:	ldr	r3, [pc, #-196]	; 13c74 <strspn@plt+0x2c90>
   13d34:	str	r3, [sp, #72]	; 0x48
   13d38:	mov	fp, #0
   13d3c:	mov	sl, #5
   13d40:	b	12c90 <strspn@plt+0x1cac>
   13d44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d48:	sub	sp, sp, #52	; 0x34
   13d4c:	mov	r5, r0
   13d50:	str	r1, [sp, #24]
   13d54:	str	r2, [sp, #28]
   13d58:	mov	r4, r3
   13d5c:	bl	10f18 <__errno_location@plt>
   13d60:	str	r0, [sp, #32]
   13d64:	ldr	r3, [r0]
   13d68:	str	r3, [sp, #36]	; 0x24
   13d6c:	ldr	r3, [pc, #396]	; 13f00 <strspn@plt+0x2f1c>
   13d70:	ldr	r6, [r3]
   13d74:	cmn	r5, #-2147483647	; 0x80000001
   13d78:	movne	r3, #0
   13d7c:	moveq	r3, #1
   13d80:	orrs	r3, r3, r5, lsr #31
   13d84:	bne	13ec4 <strspn@plt+0x2ee0>
   13d88:	ldr	r3, [pc, #368]	; 13f00 <strspn@plt+0x2f1c>
   13d8c:	ldr	r2, [r3, #4]
   13d90:	cmp	r5, r2
   13d94:	blt	13dfc <strspn@plt+0x2e18>
   13d98:	str	r2, [sp, #44]	; 0x2c
   13d9c:	add	r3, r3, #8
   13da0:	cmp	r6, r3
   13da4:	beq	13ec8 <strspn@plt+0x2ee4>
   13da8:	sub	r2, r5, r2
   13dac:	mov	r3, #8
   13db0:	str	r3, [sp]
   13db4:	mvn	r3, #-2147483648	; 0x80000000
   13db8:	add	r2, r2, #1
   13dbc:	add	r1, sp, #44	; 0x2c
   13dc0:	mov	r0, r6
   13dc4:	bl	14c48 <strspn@plt+0x3c64>
   13dc8:	mov	r6, r0
   13dcc:	ldr	r3, [pc, #300]	; 13f00 <strspn@plt+0x2f1c>
   13dd0:	str	r0, [r3]
   13dd4:	ldr	r7, [pc, #292]	; 13f00 <strspn@plt+0x2f1c>
   13dd8:	ldr	r0, [r7, #4]
   13ddc:	ldr	r2, [sp, #44]	; 0x2c
   13de0:	sub	r2, r2, r0
   13de4:	lsl	r2, r2, #3
   13de8:	mov	r1, #0
   13dec:	add	r0, r6, r0, lsl #3
   13df0:	bl	10f3c <memset@plt>
   13df4:	ldr	r3, [sp, #44]	; 0x2c
   13df8:	str	r3, [r7, #4]
   13dfc:	add	fp, r6, r5, lsl #3
   13e00:	ldr	r8, [r6, r5, lsl #3]
   13e04:	ldr	r7, [fp, #4]
   13e08:	ldr	r9, [r4, #4]
   13e0c:	orr	r9, r9, #1
   13e10:	add	sl, r4, #8
   13e14:	ldr	r3, [r4, #44]	; 0x2c
   13e18:	str	r3, [sp, #16]
   13e1c:	ldr	r3, [r4, #40]	; 0x28
   13e20:	str	r3, [sp, #12]
   13e24:	str	sl, [sp, #8]
   13e28:	str	r9, [sp, #4]
   13e2c:	ldr	r3, [r4]
   13e30:	str	r3, [sp]
   13e34:	ldr	r3, [sp, #28]
   13e38:	ldr	r2, [sp, #24]
   13e3c:	mov	r1, r8
   13e40:	mov	r0, r7
   13e44:	bl	12bd4 <strspn@plt+0x1bf0>
   13e48:	cmp	r8, r0
   13e4c:	bhi	13eac <strspn@plt+0x2ec8>
   13e50:	add	r8, r0, #1
   13e54:	str	r8, [r6, r5, lsl #3]
   13e58:	ldr	r3, [pc, #164]	; 13f04 <strspn@plt+0x2f20>
   13e5c:	cmp	r7, r3
   13e60:	beq	13e6c <strspn@plt+0x2e88>
   13e64:	mov	r0, r7
   13e68:	bl	1295c <strspn@plt+0x1978>
   13e6c:	mov	r0, r8
   13e70:	bl	14ac4 <strspn@plt+0x3ae0>
   13e74:	mov	r7, r0
   13e78:	str	r0, [fp, #4]
   13e7c:	ldr	r3, [r4, #44]	; 0x2c
   13e80:	str	r3, [sp, #16]
   13e84:	ldr	r3, [r4, #40]	; 0x28
   13e88:	str	r3, [sp, #12]
   13e8c:	str	sl, [sp, #8]
   13e90:	str	r9, [sp, #4]
   13e94:	ldr	r3, [r4]
   13e98:	str	r3, [sp]
   13e9c:	ldr	r3, [sp, #28]
   13ea0:	ldr	r2, [sp, #24]
   13ea4:	mov	r1, r8
   13ea8:	bl	12bd4 <strspn@plt+0x1bf0>
   13eac:	ldr	r3, [sp, #32]
   13eb0:	ldr	r2, [sp, #36]	; 0x24
   13eb4:	str	r2, [r3]
   13eb8:	mov	r0, r7
   13ebc:	add	sp, sp, #52	; 0x34
   13ec0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ec4:	bl	10fd8 <abort@plt>
   13ec8:	sub	r2, r5, r2
   13ecc:	mov	r3, #8
   13ed0:	str	r3, [sp]
   13ed4:	mvn	r3, #-2147483648	; 0x80000000
   13ed8:	add	r2, r2, #1
   13edc:	add	r1, sp, #44	; 0x2c
   13ee0:	mov	r0, #0
   13ee4:	bl	14c48 <strspn@plt+0x3c64>
   13ee8:	mov	r6, r0
   13eec:	ldr	r3, [pc, #12]	; 13f00 <strspn@plt+0x2f1c>
   13ef0:	str	r0, [r3], #8
   13ef4:	ldm	r3, {r0, r1}
   13ef8:	stm	r6, {r0, r1}
   13efc:	b	13dd4 <strspn@plt+0x2df0>
   13f00:	andeq	r7, r2, r4, lsl #2
   13f04:	muleq	r2, r8, r1
   13f08:	push	{r4, r5, r6, lr}
   13f0c:	mov	r4, r0
   13f10:	bl	10f18 <__errno_location@plt>
   13f14:	mov	r5, r0
   13f18:	ldr	r6, [r0]
   13f1c:	cmp	r4, #0
   13f20:	ldr	r3, [pc, #20]	; 13f3c <strspn@plt+0x2f58>
   13f24:	moveq	r4, r3
   13f28:	mov	r1, #48	; 0x30
   13f2c:	mov	r0, r4
   13f30:	bl	14fb0 <strspn@plt+0x3fcc>
   13f34:	str	r6, [r5]
   13f38:	pop	{r4, r5, r6, pc}
   13f3c:	muleq	r2, r8, r2
   13f40:	subs	r3, r0, #0
   13f44:	ldr	r2, [pc, #8]	; 13f54 <strspn@plt+0x2f70>
   13f48:	moveq	r3, r2
   13f4c:	ldr	r0, [r3]
   13f50:	bx	lr
   13f54:	muleq	r2, r8, r2
   13f58:	subs	r3, r0, #0
   13f5c:	ldr	r2, [pc, #8]	; 13f6c <strspn@plt+0x2f88>
   13f60:	moveq	r3, r2
   13f64:	str	r1, [r3]
   13f68:	bx	lr
   13f6c:	muleq	r2, r8, r2
   13f70:	push	{lr}		; (str lr, [sp, #-4]!)
   13f74:	subs	r3, r0, #0
   13f78:	ldr	r0, [pc, #44]	; 13fac <strspn@plt+0x2fc8>
   13f7c:	moveq	r3, r0
   13f80:	add	r3, r3, #8
   13f84:	lsr	lr, r1, #5
   13f88:	and	r1, r1, #31
   13f8c:	ldr	ip, [r3, lr, lsl #2]
   13f90:	lsr	r0, ip, r1
   13f94:	eor	r2, r2, r0
   13f98:	and	r2, r2, #1
   13f9c:	eor	r1, ip, r2, lsl r1
   13fa0:	str	r1, [r3, lr, lsl #2]
   13fa4:	and	r0, r0, #1
   13fa8:	pop	{pc}		; (ldr pc, [sp], #4)
   13fac:	muleq	r2, r8, r2
   13fb0:	subs	r3, r0, #0
   13fb4:	ldr	r2, [pc, #12]	; 13fc8 <strspn@plt+0x2fe4>
   13fb8:	moveq	r3, r2
   13fbc:	ldr	r0, [r3, #4]
   13fc0:	str	r1, [r3, #4]
   13fc4:	bx	lr
   13fc8:	muleq	r2, r8, r2
   13fcc:	subs	r3, r0, #0
   13fd0:	ldr	r0, [pc, #40]	; 14000 <strspn@plt+0x301c>
   13fd4:	moveq	r3, r0
   13fd8:	mov	r0, #10
   13fdc:	str	r0, [r3]
   13fe0:	cmp	r2, #0
   13fe4:	cmpne	r1, #0
   13fe8:	beq	13ff8 <strspn@plt+0x3014>
   13fec:	str	r1, [r3, #40]	; 0x28
   13ff0:	str	r2, [r3, #44]	; 0x2c
   13ff4:	bx	lr
   13ff8:	push	{r4, lr}
   13ffc:	bl	10fd8 <abort@plt>
   14000:	muleq	r2, r8, r2
   14004:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14008:	sub	sp, sp, #24
   1400c:	mov	r7, r0
   14010:	mov	r8, r1
   14014:	mov	r9, r2
   14018:	mov	sl, r3
   1401c:	ldr	r4, [sp, #56]	; 0x38
   14020:	cmp	r4, #0
   14024:	ldr	r3, [pc, #84]	; 14080 <strspn@plt+0x309c>
   14028:	moveq	r4, r3
   1402c:	bl	10f18 <__errno_location@plt>
   14030:	mov	r5, r0
   14034:	ldr	r6, [r0]
   14038:	ldr	r3, [r4, #44]	; 0x2c
   1403c:	str	r3, [sp, #16]
   14040:	ldr	r3, [r4, #40]	; 0x28
   14044:	str	r3, [sp, #12]
   14048:	add	r3, r4, #8
   1404c:	str	r3, [sp, #8]
   14050:	ldr	r3, [r4, #4]
   14054:	str	r3, [sp, #4]
   14058:	ldr	r3, [r4]
   1405c:	str	r3, [sp]
   14060:	mov	r3, sl
   14064:	mov	r2, r9
   14068:	mov	r1, r8
   1406c:	mov	r0, r7
   14070:	bl	12bd4 <strspn@plt+0x1bf0>
   14074:	str	r6, [r5]
   14078:	add	sp, sp, #24
   1407c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14080:	muleq	r2, r8, r2
   14084:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14088:	sub	sp, sp, #44	; 0x2c
   1408c:	str	r0, [sp, #28]
   14090:	str	r1, [sp, #32]
   14094:	mov	r6, r2
   14098:	subs	r4, r3, #0
   1409c:	ldr	r3, [pc, #172]	; 14150 <strspn@plt+0x316c>
   140a0:	moveq	r4, r3
   140a4:	bl	10f18 <__errno_location@plt>
   140a8:	mov	r7, r0
   140ac:	ldr	fp, [r0]
   140b0:	ldr	r5, [r4, #4]
   140b4:	cmp	r6, #0
   140b8:	orreq	r5, r5, #1
   140bc:	add	r9, r4, #8
   140c0:	ldr	r3, [r4, #44]	; 0x2c
   140c4:	str	r3, [sp, #16]
   140c8:	ldr	r3, [r4, #40]	; 0x28
   140cc:	str	r3, [sp, #12]
   140d0:	str	r9, [sp, #8]
   140d4:	str	r5, [sp, #4]
   140d8:	ldr	r3, [r4]
   140dc:	str	r3, [sp]
   140e0:	ldr	r3, [sp, #32]
   140e4:	ldr	r2, [sp, #28]
   140e8:	mov	r1, #0
   140ec:	mov	r0, r1
   140f0:	bl	12bd4 <strspn@plt+0x1bf0>
   140f4:	mov	sl, r0
   140f8:	add	r8, r0, #1
   140fc:	mov	r0, r8
   14100:	bl	14ac4 <strspn@plt+0x3ae0>
   14104:	str	r0, [sp, #36]	; 0x24
   14108:	ldr	r3, [r4, #44]	; 0x2c
   1410c:	str	r3, [sp, #16]
   14110:	ldr	r3, [r4, #40]	; 0x28
   14114:	str	r3, [sp, #12]
   14118:	str	r9, [sp, #8]
   1411c:	str	r5, [sp, #4]
   14120:	ldr	r3, [r4]
   14124:	str	r3, [sp]
   14128:	ldr	r3, [sp, #32]
   1412c:	ldr	r2, [sp, #28]
   14130:	mov	r1, r8
   14134:	bl	12bd4 <strspn@plt+0x1bf0>
   14138:	str	fp, [r7]
   1413c:	cmp	r6, #0
   14140:	strne	sl, [r6]
   14144:	ldr	r0, [sp, #36]	; 0x24
   14148:	add	sp, sp, #44	; 0x2c
   1414c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14150:	muleq	r2, r8, r2
   14154:	push	{r4, lr}
   14158:	mov	r3, r2
   1415c:	mov	r2, #0
   14160:	bl	14084 <strspn@plt+0x30a0>
   14164:	pop	{r4, pc}
   14168:	push	{r4, r5, r6, r7, r8, lr}
   1416c:	ldr	r3, [pc, #140]	; 14200 <strspn@plt+0x321c>
   14170:	ldr	r7, [r3]
   14174:	ldr	r3, [r3, #4]
   14178:	cmp	r3, #1
   1417c:	ble	141a8 <strspn@plt+0x31c4>
   14180:	mov	r5, r7
   14184:	mov	r4, #1
   14188:	ldr	r6, [pc, #112]	; 14200 <strspn@plt+0x321c>
   1418c:	ldr	r0, [r5, #12]
   14190:	bl	1295c <strspn@plt+0x1978>
   14194:	add	r4, r4, #1
   14198:	add	r5, r5, #8
   1419c:	ldr	r3, [r6, #4]
   141a0:	cmp	r3, r4
   141a4:	bgt	1418c <strspn@plt+0x31a8>
   141a8:	ldr	r0, [r7, #4]
   141ac:	ldr	r3, [pc, #80]	; 14204 <strspn@plt+0x3220>
   141b0:	cmp	r0, r3
   141b4:	beq	141d0 <strspn@plt+0x31ec>
   141b8:	bl	1295c <strspn@plt+0x1978>
   141bc:	ldr	r3, [pc, #60]	; 14200 <strspn@plt+0x321c>
   141c0:	mov	r2, #256	; 0x100
   141c4:	str	r2, [r3, #8]
   141c8:	ldr	r2, [pc, #52]	; 14204 <strspn@plt+0x3220>
   141cc:	str	r2, [r3, #12]
   141d0:	ldr	r3, [pc, #48]	; 14208 <strspn@plt+0x3224>
   141d4:	cmp	r7, r3
   141d8:	beq	141f0 <strspn@plt+0x320c>
   141dc:	mov	r0, r7
   141e0:	bl	1295c <strspn@plt+0x1978>
   141e4:	ldr	r3, [pc, #20]	; 14200 <strspn@plt+0x321c>
   141e8:	add	r2, r3, #8
   141ec:	str	r2, [r3]
   141f0:	mov	r2, #1
   141f4:	ldr	r3, [pc, #4]	; 14200 <strspn@plt+0x321c>
   141f8:	str	r2, [r3, #4]
   141fc:	pop	{r4, r5, r6, r7, r8, pc}
   14200:	andeq	r7, r2, r4, lsl #2
   14204:	muleq	r2, r8, r1
   14208:	andeq	r7, r2, ip, lsl #2
   1420c:	push	{r4, lr}
   14210:	ldr	r3, [pc, #8]	; 14220 <strspn@plt+0x323c>
   14214:	mvn	r2, #0
   14218:	bl	13d44 <strspn@plt+0x2d60>
   1421c:	pop	{r4, pc}
   14220:	muleq	r2, r8, r2
   14224:	push	{r4, lr}
   14228:	ldr	r3, [pc, #4]	; 14234 <strspn@plt+0x3250>
   1422c:	bl	13d44 <strspn@plt+0x2d60>
   14230:	pop	{r4, pc}
   14234:	muleq	r2, r8, r2
   14238:	push	{r4, lr}
   1423c:	mov	r1, r0
   14240:	mov	r0, #0
   14244:	bl	1420c <strspn@plt+0x3228>
   14248:	pop	{r4, pc}
   1424c:	push	{r4, lr}
   14250:	mov	r2, r1
   14254:	mov	r1, r0
   14258:	mov	r0, #0
   1425c:	bl	14224 <strspn@plt+0x3240>
   14260:	pop	{r4, pc}
   14264:	push	{r4, r5, lr}
   14268:	sub	sp, sp, #52	; 0x34
   1426c:	mov	r4, r0
   14270:	mov	r5, r2
   14274:	mov	r0, sp
   14278:	bl	12a6c <strspn@plt+0x1a88>
   1427c:	mov	r3, sp
   14280:	mvn	r2, #0
   14284:	mov	r1, r5
   14288:	mov	r0, r4
   1428c:	bl	13d44 <strspn@plt+0x2d60>
   14290:	add	sp, sp, #52	; 0x34
   14294:	pop	{r4, r5, pc}
   14298:	push	{r4, r5, r6, lr}
   1429c:	sub	sp, sp, #48	; 0x30
   142a0:	mov	r4, r0
   142a4:	mov	r5, r2
   142a8:	mov	r6, r3
   142ac:	mov	r0, sp
   142b0:	bl	12a6c <strspn@plt+0x1a88>
   142b4:	mov	r3, sp
   142b8:	mov	r2, r6
   142bc:	mov	r1, r5
   142c0:	mov	r0, r4
   142c4:	bl	13d44 <strspn@plt+0x2d60>
   142c8:	add	sp, sp, #48	; 0x30
   142cc:	pop	{r4, r5, r6, pc}
   142d0:	push	{r4, lr}
   142d4:	mov	r2, r1
   142d8:	mov	r1, r0
   142dc:	mov	r0, #0
   142e0:	bl	14264 <strspn@plt+0x3280>
   142e4:	pop	{r4, pc}
   142e8:	push	{r4, lr}
   142ec:	mov	r3, r2
   142f0:	mov	r2, r1
   142f4:	mov	r1, r0
   142f8:	mov	r0, #0
   142fc:	bl	14298 <strspn@plt+0x32b4>
   14300:	pop	{r4, pc}
   14304:	push	{r4, r5, r6, lr}
   14308:	sub	sp, sp, #48	; 0x30
   1430c:	mov	r4, r0
   14310:	mov	r5, r1
   14314:	mov	r6, r2
   14318:	mov	ip, sp
   1431c:	ldr	lr, [pc, #64]	; 14364 <strspn@plt+0x3380>
   14320:	ldm	lr!, {r0, r1, r2, r3}
   14324:	stmia	ip!, {r0, r1, r2, r3}
   14328:	ldm	lr!, {r0, r1, r2, r3}
   1432c:	stmia	ip!, {r0, r1, r2, r3}
   14330:	ldm	lr, {r0, r1, r2, r3}
   14334:	stm	ip, {r0, r1, r2, r3}
   14338:	mov	r2, #1
   1433c:	mov	r1, r6
   14340:	mov	r0, sp
   14344:	bl	13f70 <strspn@plt+0x2f8c>
   14348:	mov	r3, sp
   1434c:	mov	r2, r5
   14350:	mov	r1, r4
   14354:	mov	r0, #0
   14358:	bl	13d44 <strspn@plt+0x2d60>
   1435c:	add	sp, sp, #48	; 0x30
   14360:	pop	{r4, r5, r6, pc}
   14364:	muleq	r2, r8, r2
   14368:	push	{r4, lr}
   1436c:	mov	r2, r1
   14370:	mvn	r1, #0
   14374:	bl	14304 <strspn@plt+0x3320>
   14378:	pop	{r4, pc}
   1437c:	push	{r4, lr}
   14380:	mov	r1, #58	; 0x3a
   14384:	bl	14368 <strspn@plt+0x3384>
   14388:	pop	{r4, pc}
   1438c:	push	{r4, lr}
   14390:	mov	r2, #58	; 0x3a
   14394:	bl	14304 <strspn@plt+0x3320>
   14398:	pop	{r4, pc}
   1439c:	push	{r4, r5, lr}
   143a0:	sub	sp, sp, #100	; 0x64
   143a4:	mov	r4, r0
   143a8:	mov	r5, r2
   143ac:	mov	r0, sp
   143b0:	bl	12a6c <strspn@plt+0x1a88>
   143b4:	add	lr, sp, #48	; 0x30
   143b8:	mov	ip, sp
   143bc:	ldm	ip!, {r0, r1, r2, r3}
   143c0:	stmia	lr!, {r0, r1, r2, r3}
   143c4:	ldm	ip!, {r0, r1, r2, r3}
   143c8:	stmia	lr!, {r0, r1, r2, r3}
   143cc:	ldm	ip, {r0, r1, r2, r3}
   143d0:	stm	lr, {r0, r1, r2, r3}
   143d4:	mov	r2, #1
   143d8:	mov	r1, #58	; 0x3a
   143dc:	add	r0, sp, #48	; 0x30
   143e0:	bl	13f70 <strspn@plt+0x2f8c>
   143e4:	add	r3, sp, #48	; 0x30
   143e8:	mvn	r2, #0
   143ec:	mov	r1, r5
   143f0:	mov	r0, r4
   143f4:	bl	13d44 <strspn@plt+0x2d60>
   143f8:	add	sp, sp, #100	; 0x64
   143fc:	pop	{r4, r5, pc}
   14400:	push	{r4, r5, r6, r7, lr}
   14404:	sub	sp, sp, #52	; 0x34
   14408:	mov	r4, r0
   1440c:	mov	r6, r1
   14410:	mov	r7, r2
   14414:	mov	r5, r3
   14418:	mov	ip, sp
   1441c:	ldr	lr, [pc, #64]	; 14464 <strspn@plt+0x3480>
   14420:	ldm	lr!, {r0, r1, r2, r3}
   14424:	stmia	ip!, {r0, r1, r2, r3}
   14428:	ldm	lr!, {r0, r1, r2, r3}
   1442c:	stmia	ip!, {r0, r1, r2, r3}
   14430:	ldm	lr, {r0, r1, r2, r3}
   14434:	stm	ip, {r0, r1, r2, r3}
   14438:	mov	r2, r7
   1443c:	mov	r1, r6
   14440:	mov	r0, sp
   14444:	bl	13fcc <strspn@plt+0x2fe8>
   14448:	mov	r3, sp
   1444c:	ldr	r2, [sp, #72]	; 0x48
   14450:	mov	r1, r5
   14454:	mov	r0, r4
   14458:	bl	13d44 <strspn@plt+0x2d60>
   1445c:	add	sp, sp, #52	; 0x34
   14460:	pop	{r4, r5, r6, r7, pc}
   14464:	muleq	r2, r8, r2
   14468:	push	{lr}		; (str lr, [sp, #-4]!)
   1446c:	sub	sp, sp, #12
   14470:	mvn	ip, #0
   14474:	str	ip, [sp]
   14478:	bl	14400 <strspn@plt+0x341c>
   1447c:	add	sp, sp, #12
   14480:	pop	{pc}		; (ldr pc, [sp], #4)
   14484:	push	{r4, lr}
   14488:	mov	r3, r2
   1448c:	mov	r2, r1
   14490:	mov	r1, r0
   14494:	mov	r0, #0
   14498:	bl	14468 <strspn@plt+0x3484>
   1449c:	pop	{r4, pc}
   144a0:	push	{lr}		; (str lr, [sp, #-4]!)
   144a4:	sub	sp, sp, #12
   144a8:	str	r3, [sp]
   144ac:	mov	r3, r2
   144b0:	mov	r2, r1
   144b4:	mov	r1, r0
   144b8:	mov	r0, #0
   144bc:	bl	14400 <strspn@plt+0x341c>
   144c0:	add	sp, sp, #12
   144c4:	pop	{pc}		; (ldr pc, [sp], #4)
   144c8:	push	{r4, lr}
   144cc:	ldr	r3, [pc, #4]	; 144d8 <strspn@plt+0x34f4>
   144d0:	bl	13d44 <strspn@plt+0x2d60>
   144d4:	pop	{r4, pc}
   144d8:	andeq	r7, r2, r4, lsl r1
   144dc:	push	{r4, lr}
   144e0:	mov	r2, r1
   144e4:	mov	r1, r0
   144e8:	mov	r0, #0
   144ec:	bl	144c8 <strspn@plt+0x34e4>
   144f0:	pop	{r4, pc}
   144f4:	push	{r4, lr}
   144f8:	mvn	r2, #0
   144fc:	bl	144c8 <strspn@plt+0x34e4>
   14500:	pop	{r4, pc}
   14504:	push	{r4, lr}
   14508:	mov	r1, r0
   1450c:	mov	r0, #0
   14510:	bl	144f4 <strspn@plt+0x3510>
   14514:	pop	{r4, pc}
   14518:	push	{r4, r5, r6, lr}
   1451c:	sub	sp, sp, #32
   14520:	mov	r4, r0
   14524:	ldr	r5, [sp, #48]	; 0x30
   14528:	ldr	r6, [sp, #52]	; 0x34
   1452c:	cmp	r1, #0
   14530:	beq	145e8 <strspn@plt+0x3604>
   14534:	str	r3, [sp, #4]
   14538:	str	r2, [sp]
   1453c:	mov	r3, r1
   14540:	ldr	r2, [pc, #940]	; 148f4 <strspn@plt+0x3910>
   14544:	mov	r1, #1
   14548:	bl	10f60 <__fprintf_chk@plt>
   1454c:	mov	r2, #5
   14550:	ldr	r1, [pc, #928]	; 148f8 <strspn@plt+0x3914>
   14554:	mov	r0, #0
   14558:	bl	10e10 <dcgettext@plt>
   1455c:	ldr	r3, [pc, #920]	; 148fc <strspn@plt+0x3918>
   14560:	str	r3, [sp]
   14564:	mov	r3, r0
   14568:	ldr	r2, [pc, #912]	; 14900 <strspn@plt+0x391c>
   1456c:	mov	r1, #1
   14570:	mov	r0, r4
   14574:	bl	10f60 <__fprintf_chk@plt>
   14578:	mov	r1, r4
   1457c:	mov	r0, #10
   14580:	bl	10e04 <fputc_unlocked@plt>
   14584:	mov	r2, #5
   14588:	ldr	r1, [pc, #884]	; 14904 <strspn@plt+0x3920>
   1458c:	mov	r0, #0
   14590:	bl	10e10 <dcgettext@plt>
   14594:	ldr	r3, [pc, #876]	; 14908 <strspn@plt+0x3924>
   14598:	mov	r2, r0
   1459c:	mov	r1, #1
   145a0:	mov	r0, r4
   145a4:	bl	10f60 <__fprintf_chk@plt>
   145a8:	mov	r1, r4
   145ac:	mov	r0, #10
   145b0:	bl	10e04 <fputc_unlocked@plt>
   145b4:	cmp	r6, #9
   145b8:	ldrls	pc, [pc, r6, lsl #2]
   145bc:	b	1488c <strspn@plt+0x38a8>
   145c0:	andeq	r4, r1, r4, lsr #12
   145c4:	andeq	r4, r1, r0, lsl #12
   145c8:	andeq	r4, r1, ip, lsr #12
   145cc:	andeq	r4, r1, ip, asr r6
   145d0:	muleq	r1, r4, r6
   145d4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   145d8:	andeq	r4, r1, ip, lsl r7
   145dc:	andeq	r4, r1, ip, ror #14
   145e0:	andeq	r4, r1, r4, asr #15
   145e4:	andeq	r4, r1, r4, lsr #16
   145e8:	str	r3, [sp]
   145ec:	mov	r3, r2
   145f0:	ldr	r2, [pc, #788]	; 1490c <strspn@plt+0x3928>
   145f4:	mov	r1, #1
   145f8:	bl	10f60 <__fprintf_chk@plt>
   145fc:	b	1454c <strspn@plt+0x3568>
   14600:	mov	r2, #5
   14604:	ldr	r1, [pc, #772]	; 14910 <strspn@plt+0x392c>
   14608:	mov	r0, #0
   1460c:	bl	10e10 <dcgettext@plt>
   14610:	ldr	r3, [r5]
   14614:	mov	r2, r0
   14618:	mov	r1, #1
   1461c:	mov	r0, r4
   14620:	bl	10f60 <__fprintf_chk@plt>
   14624:	add	sp, sp, #32
   14628:	pop	{r4, r5, r6, pc}
   1462c:	mov	r2, #5
   14630:	ldr	r1, [pc, #732]	; 14914 <strspn@plt+0x3930>
   14634:	mov	r0, #0
   14638:	bl	10e10 <dcgettext@plt>
   1463c:	ldr	r3, [r5]
   14640:	ldr	r2, [r5, #4]
   14644:	str	r2, [sp]
   14648:	mov	r2, r0
   1464c:	mov	r1, #1
   14650:	mov	r0, r4
   14654:	bl	10f60 <__fprintf_chk@plt>
   14658:	b	14624 <strspn@plt+0x3640>
   1465c:	mov	r2, #5
   14660:	ldr	r1, [pc, #688]	; 14918 <strspn@plt+0x3934>
   14664:	mov	r0, #0
   14668:	bl	10e10 <dcgettext@plt>
   1466c:	ldr	r3, [r5]
   14670:	ldr	r2, [r5, #8]
   14674:	str	r2, [sp, #4]
   14678:	ldr	r2, [r5, #4]
   1467c:	str	r2, [sp]
   14680:	mov	r2, r0
   14684:	mov	r1, #1
   14688:	mov	r0, r4
   1468c:	bl	10f60 <__fprintf_chk@plt>
   14690:	b	14624 <strspn@plt+0x3640>
   14694:	mov	r2, #5
   14698:	ldr	r1, [pc, #636]	; 1491c <strspn@plt+0x3938>
   1469c:	mov	r0, #0
   146a0:	bl	10e10 <dcgettext@plt>
   146a4:	ldr	r3, [r5]
   146a8:	ldr	r2, [r5, #12]
   146ac:	str	r2, [sp, #8]
   146b0:	ldr	r2, [r5, #8]
   146b4:	str	r2, [sp, #4]
   146b8:	ldr	r2, [r5, #4]
   146bc:	str	r2, [sp]
   146c0:	mov	r2, r0
   146c4:	mov	r1, #1
   146c8:	mov	r0, r4
   146cc:	bl	10f60 <__fprintf_chk@plt>
   146d0:	b	14624 <strspn@plt+0x3640>
   146d4:	mov	r2, #5
   146d8:	ldr	r1, [pc, #576]	; 14920 <strspn@plt+0x393c>
   146dc:	mov	r0, #0
   146e0:	bl	10e10 <dcgettext@plt>
   146e4:	ldr	r3, [r5]
   146e8:	ldr	r2, [r5, #16]
   146ec:	str	r2, [sp, #12]
   146f0:	ldr	r2, [r5, #12]
   146f4:	str	r2, [sp, #8]
   146f8:	ldr	r2, [r5, #8]
   146fc:	str	r2, [sp, #4]
   14700:	ldr	r2, [r5, #4]
   14704:	str	r2, [sp]
   14708:	mov	r2, r0
   1470c:	mov	r1, #1
   14710:	mov	r0, r4
   14714:	bl	10f60 <__fprintf_chk@plt>
   14718:	b	14624 <strspn@plt+0x3640>
   1471c:	mov	r2, #5
   14720:	ldr	r1, [pc, #508]	; 14924 <strspn@plt+0x3940>
   14724:	mov	r0, #0
   14728:	bl	10e10 <dcgettext@plt>
   1472c:	ldr	r3, [r5]
   14730:	ldr	r2, [r5, #20]
   14734:	str	r2, [sp, #16]
   14738:	ldr	r2, [r5, #16]
   1473c:	str	r2, [sp, #12]
   14740:	ldr	r2, [r5, #12]
   14744:	str	r2, [sp, #8]
   14748:	ldr	r2, [r5, #8]
   1474c:	str	r2, [sp, #4]
   14750:	ldr	r2, [r5, #4]
   14754:	str	r2, [sp]
   14758:	mov	r2, r0
   1475c:	mov	r1, #1
   14760:	mov	r0, r4
   14764:	bl	10f60 <__fprintf_chk@plt>
   14768:	b	14624 <strspn@plt+0x3640>
   1476c:	mov	r2, #5
   14770:	ldr	r1, [pc, #432]	; 14928 <strspn@plt+0x3944>
   14774:	mov	r0, #0
   14778:	bl	10e10 <dcgettext@plt>
   1477c:	ldr	r3, [r5]
   14780:	ldr	r2, [r5, #24]
   14784:	str	r2, [sp, #20]
   14788:	ldr	r2, [r5, #20]
   1478c:	str	r2, [sp, #16]
   14790:	ldr	r2, [r5, #16]
   14794:	str	r2, [sp, #12]
   14798:	ldr	r2, [r5, #12]
   1479c:	str	r2, [sp, #8]
   147a0:	ldr	r2, [r5, #8]
   147a4:	str	r2, [sp, #4]
   147a8:	ldr	r2, [r5, #4]
   147ac:	str	r2, [sp]
   147b0:	mov	r2, r0
   147b4:	mov	r1, #1
   147b8:	mov	r0, r4
   147bc:	bl	10f60 <__fprintf_chk@plt>
   147c0:	b	14624 <strspn@plt+0x3640>
   147c4:	mov	r2, #5
   147c8:	ldr	r1, [pc, #348]	; 1492c <strspn@plt+0x3948>
   147cc:	mov	r0, #0
   147d0:	bl	10e10 <dcgettext@plt>
   147d4:	ldr	r3, [r5]
   147d8:	ldr	r2, [r5, #28]
   147dc:	str	r2, [sp, #24]
   147e0:	ldr	r2, [r5, #24]
   147e4:	str	r2, [sp, #20]
   147e8:	ldr	r2, [r5, #20]
   147ec:	str	r2, [sp, #16]
   147f0:	ldr	r2, [r5, #16]
   147f4:	str	r2, [sp, #12]
   147f8:	ldr	r2, [r5, #12]
   147fc:	str	r2, [sp, #8]
   14800:	ldr	r2, [r5, #8]
   14804:	str	r2, [sp, #4]
   14808:	ldr	r2, [r5, #4]
   1480c:	str	r2, [sp]
   14810:	mov	r2, r0
   14814:	mov	r1, #1
   14818:	mov	r0, r4
   1481c:	bl	10f60 <__fprintf_chk@plt>
   14820:	b	14624 <strspn@plt+0x3640>
   14824:	mov	r2, #5
   14828:	ldr	r1, [pc, #256]	; 14930 <strspn@plt+0x394c>
   1482c:	mov	r0, #0
   14830:	bl	10e10 <dcgettext@plt>
   14834:	ldr	r3, [r5]
   14838:	ldr	r2, [r5, #32]
   1483c:	str	r2, [sp, #28]
   14840:	ldr	r2, [r5, #28]
   14844:	str	r2, [sp, #24]
   14848:	ldr	r2, [r5, #24]
   1484c:	str	r2, [sp, #20]
   14850:	ldr	r2, [r5, #20]
   14854:	str	r2, [sp, #16]
   14858:	ldr	r2, [r5, #16]
   1485c:	str	r2, [sp, #12]
   14860:	ldr	r2, [r5, #12]
   14864:	str	r2, [sp, #8]
   14868:	ldr	r2, [r5, #8]
   1486c:	str	r2, [sp, #4]
   14870:	ldr	r2, [r5, #4]
   14874:	str	r2, [sp]
   14878:	mov	r2, r0
   1487c:	mov	r1, #1
   14880:	mov	r0, r4
   14884:	bl	10f60 <__fprintf_chk@plt>
   14888:	b	14624 <strspn@plt+0x3640>
   1488c:	mov	r2, #5
   14890:	ldr	r1, [pc, #156]	; 14934 <strspn@plt+0x3950>
   14894:	mov	r0, #0
   14898:	bl	10e10 <dcgettext@plt>
   1489c:	ldr	r3, [r5]
   148a0:	ldr	r2, [r5, #32]
   148a4:	str	r2, [sp, #28]
   148a8:	ldr	r2, [r5, #28]
   148ac:	str	r2, [sp, #24]
   148b0:	ldr	r2, [r5, #24]
   148b4:	str	r2, [sp, #20]
   148b8:	ldr	r2, [r5, #20]
   148bc:	str	r2, [sp, #16]
   148c0:	ldr	r2, [r5, #16]
   148c4:	str	r2, [sp, #12]
   148c8:	ldr	r2, [r5, #12]
   148cc:	str	r2, [sp, #8]
   148d0:	ldr	r2, [r5, #8]
   148d4:	str	r2, [sp, #4]
   148d8:	ldr	r2, [r5, #4]
   148dc:	str	r2, [sp]
   148e0:	mov	r2, r0
   148e4:	mov	r1, #1
   148e8:	mov	r0, r4
   148ec:	bl	10f60 <__fprintf_chk@plt>
   148f0:	b	14624 <strspn@plt+0x3640>
   148f4:	andeq	r6, r1, r8, lsr #13
   148f8:			; <UNDEFINED> instruction: 0x000166bc
   148fc:	andeq	r0, r0, r6, ror #15
   14900:	muleq	r1, r4, r9
   14904:	andeq	r6, r1, r0, asr #13
   14908:	andeq	r6, r1, ip, ror #14
   1490c:			; <UNDEFINED> instruction: 0x000166b4
   14910:	muleq	r1, r0, r7
   14914:	andeq	r6, r1, r0, lsr #15
   14918:			; <UNDEFINED> instruction: 0x000167b8
   1491c:	ldrdeq	r6, [r1], -r4
   14920:	strdeq	r6, [r1], -r4
   14924:	andeq	r6, r1, r8, lsl r8
   14928:	andeq	r6, r1, r0, asr #16
   1492c:	andeq	r6, r1, ip, ror #16
   14930:	muleq	r1, ip, r8
   14934:	ldrdeq	r6, [r1], -r0
   14938:	push	{r4, r5, lr}
   1493c:	sub	sp, sp, #12
   14940:	ldr	r5, [sp, #24]
   14944:	ldr	ip, [r5]
   14948:	cmp	ip, #0
   1494c:	beq	1497c <strspn@plt+0x3998>
   14950:	mov	lr, r5
   14954:	mov	ip, #0
   14958:	add	ip, ip, #1
   1495c:	ldr	r4, [lr, #4]!
   14960:	cmp	r4, #0
   14964:	bne	14958 <strspn@plt+0x3974>
   14968:	str	ip, [sp, #4]
   1496c:	str	r5, [sp]
   14970:	bl	14518 <strspn@plt+0x3534>
   14974:	add	sp, sp, #12
   14978:	pop	{r4, r5, pc}
   1497c:	mov	ip, #0
   14980:	b	14968 <strspn@plt+0x3984>
   14984:	push	{r4, r5, lr}
   14988:	sub	sp, sp, #52	; 0x34
   1498c:	ldr	r4, [sp, #64]	; 0x40
   14990:	sub	r4, r4, #4
   14994:	add	r5, sp, #4
   14998:	mov	ip, #0
   1499c:	ldr	lr, [r4, #4]!
   149a0:	str	lr, [r5, #4]!
   149a4:	cmp	lr, #0
   149a8:	beq	149b8 <strspn@plt+0x39d4>
   149ac:	add	ip, ip, #1
   149b0:	cmp	ip, #10
   149b4:	bne	1499c <strspn@plt+0x39b8>
   149b8:	str	ip, [sp, #4]
   149bc:	add	ip, sp, #8
   149c0:	str	ip, [sp]
   149c4:	bl	14518 <strspn@plt+0x3534>
   149c8:	add	sp, sp, #52	; 0x34
   149cc:	pop	{r4, r5, pc}
   149d0:	push	{r3}		; (str r3, [sp, #-4]!)
   149d4:	push	{lr}		; (str lr, [sp, #-4]!)
   149d8:	sub	sp, sp, #16
   149dc:	add	r3, sp, #24
   149e0:	str	r3, [sp, #12]
   149e4:	str	r3, [sp]
   149e8:	ldr	r3, [sp, #20]
   149ec:	bl	14984 <strspn@plt+0x39a0>
   149f0:	add	sp, sp, #16
   149f4:	pop	{lr}		; (ldr lr, [sp], #4)
   149f8:	add	sp, sp, #4
   149fc:	bx	lr
   14a00:	push	{r4, lr}
   14a04:	ldr	r3, [pc, #112]	; 14a7c <strspn@plt+0x3a98>
   14a08:	ldr	r1, [r3]
   14a0c:	mov	r0, #10
   14a10:	bl	10e04 <fputc_unlocked@plt>
   14a14:	mov	r2, #5
   14a18:	ldr	r1, [pc, #96]	; 14a80 <strspn@plt+0x3a9c>
   14a1c:	mov	r0, #0
   14a20:	bl	10e10 <dcgettext@plt>
   14a24:	ldr	r2, [pc, #88]	; 14a84 <strspn@plt+0x3aa0>
   14a28:	mov	r1, r0
   14a2c:	mov	r0, #1
   14a30:	bl	10f48 <__printf_chk@plt>
   14a34:	mov	r2, #5
   14a38:	ldr	r1, [pc, #72]	; 14a88 <strspn@plt+0x3aa4>
   14a3c:	mov	r0, #0
   14a40:	bl	10e10 <dcgettext@plt>
   14a44:	ldr	r3, [pc, #64]	; 14a8c <strspn@plt+0x3aa8>
   14a48:	ldr	r2, [pc, #64]	; 14a90 <strspn@plt+0x3aac>
   14a4c:	mov	r1, r0
   14a50:	mov	r0, #1
   14a54:	bl	10f48 <__printf_chk@plt>
   14a58:	mov	r2, #5
   14a5c:	ldr	r1, [pc, #48]	; 14a94 <strspn@plt+0x3ab0>
   14a60:	mov	r0, #0
   14a64:	bl	10e10 <dcgettext@plt>
   14a68:	ldr	r2, [pc, #40]	; 14a98 <strspn@plt+0x3ab4>
   14a6c:	mov	r1, r0
   14a70:	mov	r0, #1
   14a74:	bl	10f48 <__printf_chk@plt>
   14a78:	pop	{r4, pc}
   14a7c:	andeq	r7, r2, ip, asr r1
   14a80:	andeq	r6, r1, ip, lsl #18
   14a84:	andeq	r6, r1, r0, lsr #18
   14a88:	andeq	r6, r1, r8, lsr r9
   14a8c:	andeq	r6, r1, ip, lsr #4
   14a90:	andeq	r6, r1, r4, asr r2
   14a94:	andeq	r6, r1, ip, asr #18
   14a98:	andeq	r6, r1, r4, ror r9
   14a9c:	push	{r4, lr}
   14aa0:	bl	15178 <strspn@plt+0x4194>
   14aa4:	cmp	r0, #0
   14aa8:	popne	{r4, pc}
   14aac:	bl	15040 <strspn@plt+0x405c>
   14ab0:	push	{r4, lr}
   14ab4:	bl	15178 <strspn@plt+0x4194>
   14ab8:	cmp	r0, #0
   14abc:	popne	{r4, pc}
   14ac0:	bl	15040 <strspn@plt+0x405c>
   14ac4:	push	{r4, lr}
   14ac8:	bl	14a9c <strspn@plt+0x3ab8>
   14acc:	pop	{r4, pc}
   14ad0:	push	{r4, r5, r6, lr}
   14ad4:	mov	r5, r0
   14ad8:	mov	r4, r1
   14adc:	bl	151a8 <strspn@plt+0x41c4>
   14ae0:	cmp	r0, #0
   14ae4:	popne	{r4, r5, r6, pc}
   14ae8:	adds	r4, r4, #0
   14aec:	movne	r4, #1
   14af0:	cmp	r5, #0
   14af4:	orreq	r4, r4, #1
   14af8:	cmp	r4, #0
   14afc:	popeq	{r4, r5, r6, pc}
   14b00:	bl	15040 <strspn@plt+0x405c>
   14b04:	push	{r4, lr}
   14b08:	cmp	r1, #0
   14b0c:	orreq	r1, r1, #1
   14b10:	bl	151a8 <strspn@plt+0x41c4>
   14b14:	cmp	r0, #0
   14b18:	popne	{r4, pc}
   14b1c:	bl	15040 <strspn@plt+0x405c>
   14b20:	push	{r4, r5, r6, lr}
   14b24:	mov	r6, r0
   14b28:	mov	r5, r1
   14b2c:	mov	r4, r2
   14b30:	bl	15594 <strspn@plt+0x45b0>
   14b34:	cmp	r0, #0
   14b38:	popne	{r4, r5, r6, pc}
   14b3c:	cmp	r6, #0
   14b40:	beq	14b50 <strspn@plt+0x3b6c>
   14b44:	cmp	r5, #0
   14b48:	cmpne	r4, #0
   14b4c:	popeq	{r4, r5, r6, pc}
   14b50:	bl	15040 <strspn@plt+0x405c>
   14b54:	push	{r4, lr}
   14b58:	bl	14b20 <strspn@plt+0x3b3c>
   14b5c:	pop	{r4, pc}
   14b60:	push	{r4, lr}
   14b64:	mov	ip, r1
   14b68:	mov	r3, r2
   14b6c:	cmp	r2, #0
   14b70:	cmpne	r1, #0
   14b74:	moveq	r3, #1
   14b78:	moveq	ip, r3
   14b7c:	mov	r2, r3
   14b80:	mov	r1, ip
   14b84:	bl	15594 <strspn@plt+0x45b0>
   14b88:	cmp	r0, #0
   14b8c:	popne	{r4, pc}
   14b90:	bl	15040 <strspn@plt+0x405c>
   14b94:	push	{r4, lr}
   14b98:	mov	r2, r1
   14b9c:	mov	r1, r0
   14ba0:	mov	r0, #0
   14ba4:	bl	14b20 <strspn@plt+0x3b3c>
   14ba8:	pop	{r4, pc}
   14bac:	push	{r4, lr}
   14bb0:	mov	r2, r1
   14bb4:	mov	r1, r0
   14bb8:	mov	r0, #0
   14bbc:	bl	14b60 <strspn@plt+0x3b7c>
   14bc0:	pop	{r4, pc}
   14bc4:	push	{r4, r5, r6, r7, r8, lr}
   14bc8:	mov	r5, r1
   14bcc:	mov	r6, r2
   14bd0:	ldr	r4, [r1]
   14bd4:	subs	r7, r0, #0
   14bd8:	beq	14bf4 <strspn@plt+0x3c10>
   14bdc:	lsr	r2, r4, #1
   14be0:	add	r3, r2, #1
   14be4:	mvn	r3, r3
   14be8:	cmp	r4, r3
   14bec:	bls	14c18 <strspn@plt+0x3c34>
   14bf0:	bl	15040 <strspn@plt+0x405c>
   14bf4:	cmp	r4, #0
   14bf8:	bne	14c20 <strspn@plt+0x3c3c>
   14bfc:	mov	r1, r2
   14c00:	mov	r0, #64	; 0x40
   14c04:	bl	156e8 <strspn@plt+0x4704>
   14c08:	cmp	r0, #0
   14c0c:	movne	r4, r0
   14c10:	addeq	r4, r0, #1
   14c14:	b	14c20 <strspn@plt+0x3c3c>
   14c18:	add	r4, r4, #1
   14c1c:	add	r4, r4, r2
   14c20:	mov	r2, r6
   14c24:	mov	r1, r4
   14c28:	mov	r0, r7
   14c2c:	bl	14b20 <strspn@plt+0x3b3c>
   14c30:	str	r4, [r5]
   14c34:	pop	{r4, r5, r6, r7, r8, pc}
   14c38:	push	{r4, lr}
   14c3c:	mov	r2, #1
   14c40:	bl	14bc4 <strspn@plt+0x3be0>
   14c44:	pop	{r4, pc}
   14c48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c4c:	sub	sp, sp, #12
   14c50:	mov	fp, r0
   14c54:	mov	sl, r1
   14c58:	mov	r9, r2
   14c5c:	mov	r7, r3
   14c60:	ldr	r6, [sp, #48]	; 0x30
   14c64:	ldr	r5, [r1]
   14c68:	asrs	r4, r5, #1
   14c6c:	bmi	14dc8 <strspn@plt+0x3de4>
   14c70:	cmp	r5, #0
   14c74:	blt	14ddc <strspn@plt+0x3df8>
   14c78:	mvn	r3, #-2147483648	; 0x80000000
   14c7c:	sub	r3, r3, r4
   14c80:	cmp	r5, r3
   14c84:	movle	r3, #0
   14c88:	movgt	r3, #1
   14c8c:	cmp	r3, #0
   14c90:	addeq	r4, r4, r5
   14c94:	mvnne	r4, #-2147483648	; 0x80000000
   14c98:	mvn	r8, r7
   14c9c:	lsr	r8, r8, #31
   14ca0:	cmp	r7, r4
   14ca4:	movge	r3, #0
   14ca8:	andlt	r3, r8, #1
   14cac:	cmp	r3, #0
   14cb0:	movne	r4, r7
   14cb4:	cmp	r6, #0
   14cb8:	blt	14df0 <strspn@plt+0x3e0c>
   14cbc:	cmp	r6, #0
   14cc0:	beq	14e9c <strspn@plt+0x3eb8>
   14cc4:	cmp	r4, #0
   14cc8:	blt	14e4c <strspn@plt+0x3e68>
   14ccc:	mov	r1, r6
   14cd0:	mvn	r0, #-2147483648	; 0x80000000
   14cd4:	bl	158f4 <strspn@plt+0x4910>
   14cd8:	cmp	r0, r4
   14cdc:	movge	r0, #0
   14ce0:	movlt	r0, #1
   14ce4:	cmp	r0, #0
   14ce8:	mvnne	r3, #-2147483648	; 0x80000000
   14cec:	strne	r3, [sp, #4]
   14cf0:	beq	14e84 <strspn@plt+0x3ea0>
   14cf4:	mov	r1, r6
   14cf8:	ldr	r0, [sp, #4]
   14cfc:	bl	158f4 <strspn@plt+0x4910>
   14d00:	mov	r4, r0
   14d04:	mov	r1, r6
   14d08:	ldr	r0, [sp, #4]
   14d0c:	bl	15b14 <strspn@plt+0x4b30>
   14d10:	ldr	r3, [sp, #4]
   14d14:	sub	r1, r3, r1
   14d18:	cmp	fp, #0
   14d1c:	moveq	r3, #0
   14d20:	streq	r3, [sl]
   14d24:	sub	r3, r4, r5
   14d28:	cmp	r3, r9
   14d2c:	bge	14db4 <strspn@plt+0x3dd0>
   14d30:	cmp	r9, #0
   14d34:	blt	14ea8 <strspn@plt+0x3ec4>
   14d38:	cmp	r5, #0
   14d3c:	blt	14ebc <strspn@plt+0x3ed8>
   14d40:	mvn	r3, #-2147483648	; 0x80000000
   14d44:	sub	r3, r3, r9
   14d48:	cmp	r5, r3
   14d4c:	movle	r3, #0
   14d50:	movgt	r3, #1
   14d54:	cmp	r3, #0
   14d58:	bne	14f64 <strspn@plt+0x3f80>
   14d5c:	add	r5, r5, r9
   14d60:	mov	r4, r5
   14d64:	cmp	r7, r5
   14d68:	movge	r7, #0
   14d6c:	andlt	r7, r8, #1
   14d70:	cmp	r7, #0
   14d74:	bne	14f64 <strspn@plt+0x3f80>
   14d78:	cmp	r6, #0
   14d7c:	blt	14ed0 <strspn@plt+0x3eec>
   14d80:	cmp	r6, #0
   14d84:	beq	14db0 <strspn@plt+0x3dcc>
   14d88:	cmp	r5, #0
   14d8c:	blt	14f2c <strspn@plt+0x3f48>
   14d90:	mov	r1, r6
   14d94:	mvn	r0, #-2147483648	; 0x80000000
   14d98:	bl	158f4 <strspn@plt+0x4910>
   14d9c:	cmp	r5, r0
   14da0:	movle	r0, #0
   14da4:	movgt	r0, #1
   14da8:	cmp	r0, #0
   14dac:	bne	14f64 <strspn@plt+0x3f80>
   14db0:	mul	r1, r5, r6
   14db4:	mov	r0, fp
   14db8:	bl	14ad0 <strspn@plt+0x3aec>
   14dbc:	str	r4, [sl]
   14dc0:	add	sp, sp, #12
   14dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dc8:	rsb	r3, r4, #-2147483648	; 0x80000000
   14dcc:	cmp	r5, r3
   14dd0:	movge	r3, #0
   14dd4:	movlt	r3, #1
   14dd8:	b	14c8c <strspn@plt+0x3ca8>
   14ddc:	rsb	r3, r5, #-2147483648	; 0x80000000
   14de0:	cmp	r4, r3
   14de4:	movge	r3, #0
   14de8:	movlt	r3, #1
   14dec:	b	14c8c <strspn@plt+0x3ca8>
   14df0:	cmp	r4, #0
   14df4:	blt	14e1c <strspn@plt+0x3e38>
   14df8:	cmn	r6, #1
   14dfc:	beq	14e38 <strspn@plt+0x3e54>
   14e00:	mov	r1, r6
   14e04:	mov	r0, #-2147483648	; 0x80000000
   14e08:	bl	158f4 <strspn@plt+0x4910>
   14e0c:	cmp	r0, r4
   14e10:	movge	r0, #0
   14e14:	movlt	r0, #1
   14e18:	b	14ce4 <strspn@plt+0x3d00>
   14e1c:	mov	r1, r6
   14e20:	mvn	r0, #-2147483648	; 0x80000000
   14e24:	bl	158f4 <strspn@plt+0x4910>
   14e28:	cmp	r0, r4
   14e2c:	movle	r0, #0
   14e30:	movgt	r0, #1
   14e34:	b	14ce4 <strspn@plt+0x3d00>
   14e38:	add	r0, r4, #-2147483648	; 0x80000000
   14e3c:	cmp	r0, #0
   14e40:	movle	r0, #0
   14e44:	movgt	r0, #1
   14e48:	b	14ce4 <strspn@plt+0x3d00>
   14e4c:	cmn	r4, #1
   14e50:	beq	14e70 <strspn@plt+0x3e8c>
   14e54:	mov	r1, r4
   14e58:	mov	r0, #-2147483648	; 0x80000000
   14e5c:	bl	158f4 <strspn@plt+0x4910>
   14e60:	cmp	r6, r0
   14e64:	movle	r0, #0
   14e68:	movgt	r0, #1
   14e6c:	b	14ce4 <strspn@plt+0x3d00>
   14e70:	add	r0, r6, #-2147483648	; 0x80000000
   14e74:	cmp	r0, #0
   14e78:	movle	r0, #0
   14e7c:	movgt	r0, #1
   14e80:	b	14ce4 <strspn@plt+0x3d00>
   14e84:	mul	r1, r6, r4
   14e88:	cmp	r1, #63	; 0x3f
   14e8c:	movle	r3, #64	; 0x40
   14e90:	strle	r3, [sp, #4]
   14e94:	bgt	14d18 <strspn@plt+0x3d34>
   14e98:	b	14cf4 <strspn@plt+0x3d10>
   14e9c:	mov	r3, #64	; 0x40
   14ea0:	str	r3, [sp, #4]
   14ea4:	b	14cf4 <strspn@plt+0x3d10>
   14ea8:	rsb	r3, r9, #-2147483648	; 0x80000000
   14eac:	cmp	r5, r3
   14eb0:	movge	r3, #0
   14eb4:	movlt	r3, #1
   14eb8:	b	14d54 <strspn@plt+0x3d70>
   14ebc:	rsb	r3, r5, #-2147483648	; 0x80000000
   14ec0:	cmp	r9, r3
   14ec4:	movge	r3, #0
   14ec8:	movlt	r3, #1
   14ecc:	b	14d54 <strspn@plt+0x3d70>
   14ed0:	cmp	r5, #0
   14ed4:	blt	14efc <strspn@plt+0x3f18>
   14ed8:	cmn	r6, #1
   14edc:	beq	14f18 <strspn@plt+0x3f34>
   14ee0:	mov	r1, r6
   14ee4:	mov	r0, #-2147483648	; 0x80000000
   14ee8:	bl	158f4 <strspn@plt+0x4910>
   14eec:	cmp	r5, r0
   14ef0:	movle	r0, #0
   14ef4:	movgt	r0, #1
   14ef8:	b	14da8 <strspn@plt+0x3dc4>
   14efc:	mov	r1, r6
   14f00:	mvn	r0, #-2147483648	; 0x80000000
   14f04:	bl	158f4 <strspn@plt+0x4910>
   14f08:	cmp	r5, r0
   14f0c:	movge	r0, #0
   14f10:	movlt	r0, #1
   14f14:	b	14da8 <strspn@plt+0x3dc4>
   14f18:	add	r0, r5, #-2147483648	; 0x80000000
   14f1c:	cmp	r0, #0
   14f20:	movle	r0, #0
   14f24:	movgt	r0, #1
   14f28:	b	14da8 <strspn@plt+0x3dc4>
   14f2c:	cmn	r5, #1
   14f30:	beq	14f50 <strspn@plt+0x3f6c>
   14f34:	mov	r1, r5
   14f38:	mov	r0, #-2147483648	; 0x80000000
   14f3c:	bl	158f4 <strspn@plt+0x4910>
   14f40:	cmp	r6, r0
   14f44:	movle	r0, #0
   14f48:	movgt	r0, #1
   14f4c:	b	14da8 <strspn@plt+0x3dc4>
   14f50:	add	r0, r6, #-2147483648	; 0x80000000
   14f54:	cmp	r0, #0
   14f58:	movle	r0, #0
   14f5c:	movgt	r0, #1
   14f60:	b	14da8 <strspn@plt+0x3dc4>
   14f64:	bl	15040 <strspn@plt+0x405c>
   14f68:	push	{r4, lr}
   14f6c:	bl	15128 <strspn@plt+0x4144>
   14f70:	cmp	r0, #0
   14f74:	popne	{r4, pc}
   14f78:	bl	15040 <strspn@plt+0x405c>
   14f7c:	push	{r4, lr}
   14f80:	mov	r1, #1
   14f84:	bl	14f68 <strspn@plt+0x3f84>
   14f88:	pop	{r4, pc}
   14f8c:	push	{r4, lr}
   14f90:	bl	15128 <strspn@plt+0x4144>
   14f94:	cmp	r0, #0
   14f98:	popne	{r4, pc}
   14f9c:	bl	15040 <strspn@plt+0x405c>
   14fa0:	push	{r4, lr}
   14fa4:	mov	r1, #1
   14fa8:	bl	14f8c <strspn@plt+0x3fa8>
   14fac:	pop	{r4, pc}
   14fb0:	push	{r4, r5, r6, lr}
   14fb4:	mov	r5, r0
   14fb8:	mov	r4, r1
   14fbc:	mov	r0, r1
   14fc0:	bl	14a9c <strspn@plt+0x3ab8>
   14fc4:	mov	r2, r4
   14fc8:	mov	r1, r5
   14fcc:	bl	10dc8 <memcpy@plt>
   14fd0:	pop	{r4, r5, r6, pc}
   14fd4:	push	{r4, r5, r6, lr}
   14fd8:	mov	r5, r0
   14fdc:	mov	r4, r1
   14fe0:	mov	r0, r1
   14fe4:	bl	14ab0 <strspn@plt+0x3acc>
   14fe8:	mov	r2, r4
   14fec:	mov	r1, r5
   14ff0:	bl	10dc8 <memcpy@plt>
   14ff4:	pop	{r4, r5, r6, pc}
   14ff8:	push	{r4, r5, r6, lr}
   14ffc:	mov	r5, r0
   15000:	mov	r4, r1
   15004:	add	r0, r1, #1
   15008:	bl	14ab0 <strspn@plt+0x3acc>
   1500c:	mov	r2, #0
   15010:	strb	r2, [r0, r4]
   15014:	mov	r2, r4
   15018:	mov	r1, r5
   1501c:	bl	10dc8 <memcpy@plt>
   15020:	pop	{r4, r5, r6, pc}
   15024:	push	{r4, lr}
   15028:	mov	r4, r0
   1502c:	bl	10f00 <strlen@plt>
   15030:	add	r1, r0, #1
   15034:	mov	r0, r4
   15038:	bl	14fb0 <strspn@plt+0x3fcc>
   1503c:	pop	{r4, pc}
   15040:	push	{r4, lr}
   15044:	ldr	r3, [pc, #40]	; 15074 <strspn@plt+0x4090>
   15048:	ldr	r4, [r3]
   1504c:	mov	r2, #5
   15050:	ldr	r1, [pc, #32]	; 15078 <strspn@plt+0x4094>
   15054:	mov	r0, #0
   15058:	bl	10e10 <dcgettext@plt>
   1505c:	mov	r3, r0
   15060:	ldr	r2, [pc, #20]	; 1507c <strspn@plt+0x4098>
   15064:	mov	r1, #0
   15068:	mov	r0, r4
   1506c:	bl	10e88 <error@plt>
   15070:	bl	10fd8 <abort@plt>
   15074:	andeq	r7, r2, r0, lsl #2
   15078:	andeq	r6, r1, r4, asr #19
   1507c:	andeq	r6, r1, r8, lsl #11
   15080:	push	{r4, r5, r6, r7, r8, lr}
   15084:	sub	sp, sp, #8
   15088:	mov	r5, r0
   1508c:	mov	r4, r1
   15090:	mov	r7, r2
   15094:	mov	r8, r3
   15098:	bl	10f18 <__errno_location@plt>
   1509c:	mov	r6, r0
   150a0:	mov	r3, #0
   150a4:	str	r3, [r0]
   150a8:	add	r1, sp, #4
   150ac:	mov	r0, r5
   150b0:	blx	r8
   150b4:	ldr	r3, [sp, #4]
   150b8:	cmp	r5, r3
   150bc:	beq	15120 <strspn@plt+0x413c>
   150c0:	cmp	r4, #0
   150c4:	beq	150fc <strspn@plt+0x4118>
   150c8:	vcmp.f64	d0, #0.0
   150cc:	vmrs	APSR_nzcv, fpscr
   150d0:	moveq	r0, #1
   150d4:	beq	150ec <strspn@plt+0x4108>
   150d8:	ldr	r0, [r6]
   150dc:	subs	r0, r0, #34	; 0x22
   150e0:	movne	r0, #1
   150e4:	cmp	r4, #0
   150e8:	beq	150f0 <strspn@plt+0x410c>
   150ec:	str	r3, [r4]
   150f0:	vstr	d0, [r7]
   150f4:	add	sp, sp, #8
   150f8:	pop	{r4, r5, r6, r7, r8, pc}
   150fc:	ldrb	r2, [r3]
   15100:	cmp	r2, #0
   15104:	movne	r0, #0
   15108:	bne	150f0 <strspn@plt+0x410c>
   1510c:	vcmp.f64	d0, #0.0
   15110:	vmrs	APSR_nzcv, fpscr
   15114:	bne	150d8 <strspn@plt+0x40f4>
   15118:	mov	r0, #1
   1511c:	b	150f0 <strspn@plt+0x410c>
   15120:	mov	r0, #0
   15124:	b	150e4 <strspn@plt+0x4100>
   15128:	push	{r4, lr}
   1512c:	mov	r2, r0
   15130:	mov	r3, r1
   15134:	cmp	r1, #0
   15138:	cmpne	r0, #0
   1513c:	moveq	r3, #1
   15140:	moveq	r2, r3
   15144:	umull	r0, r1, r2, r3
   15148:	cmp	r0, #0
   1514c:	cmpge	r1, #0
   15150:	bne	15164 <strspn@plt+0x4180>
   15154:	mov	r1, r3
   15158:	mov	r0, r2
   1515c:	bl	10d44 <calloc@plt>
   15160:	pop	{r4, pc}
   15164:	bl	10f18 <__errno_location@plt>
   15168:	mov	r3, #12
   1516c:	str	r3, [r0]
   15170:	mov	r0, #0
   15174:	pop	{r4, pc}
   15178:	push	{r4, lr}
   1517c:	cmp	r0, #0
   15180:	moveq	r0, #1
   15184:	cmp	r0, #0
   15188:	blt	15194 <strspn@plt+0x41b0>
   1518c:	bl	10ea0 <malloc@plt>
   15190:	pop	{r4, pc}
   15194:	bl	10f18 <__errno_location@plt>
   15198:	mov	r3, #12
   1519c:	str	r3, [r0]
   151a0:	mov	r0, #0
   151a4:	pop	{r4, pc}
   151a8:	push	{r4, lr}
   151ac:	cmp	r0, #0
   151b0:	beq	151cc <strspn@plt+0x41e8>
   151b4:	cmp	r1, #0
   151b8:	beq	151d8 <strspn@plt+0x41f4>
   151bc:	cmp	r1, #0
   151c0:	blt	151e4 <strspn@plt+0x4200>
   151c4:	bl	10e1c <realloc@plt>
   151c8:	pop	{r4, pc}
   151cc:	mov	r0, r1
   151d0:	bl	15178 <strspn@plt+0x4194>
   151d4:	pop	{r4, pc}
   151d8:	bl	1295c <strspn@plt+0x1978>
   151dc:	mov	r0, #0
   151e0:	pop	{r4, pc}
   151e4:	bl	10f18 <__errno_location@plt>
   151e8:	mov	r3, #12
   151ec:	str	r3, [r0]
   151f0:	mov	r0, #0
   151f4:	pop	{r4, pc}
   151f8:	push	{r4, r5, r6, lr}
   151fc:	vpush	{d8}
   15200:	mov	r5, r0
   15204:	mov	r4, r1
   15208:	ldr	r3, [pc, #192]	; 152d0 <strspn@plt+0x42ec>
   1520c:	ldr	r3, [r3]
   15210:	cmp	r3, #0
   15214:	beq	15270 <strspn@plt+0x428c>
   15218:	ldr	r3, [pc, #176]	; 152d0 <strspn@plt+0x42ec>
   1521c:	ldr	r0, [r3]
   15220:	cmp	r0, #0
   15224:	beq	1528c <strspn@plt+0x42a8>
   15228:	bl	10d68 <uselocale@plt>
   1522c:	subs	r6, r0, #0
   15230:	beq	152a0 <strspn@plt+0x42bc>
   15234:	mov	r1, r4
   15238:	mov	r0, r5
   1523c:	bl	10de0 <strtold@plt>
   15240:	vmov.f64	d8, d0
   15244:	bl	10f18 <__errno_location@plt>
   15248:	mov	r4, r0
   1524c:	ldr	r5, [r0]
   15250:	mov	r0, r6
   15254:	bl	10d68 <uselocale@plt>
   15258:	cmp	r0, #0
   1525c:	strne	r5, [r4]
   15260:	beq	152b4 <strspn@plt+0x42d0>
   15264:	vmov.f64	d0, d8
   15268:	vpop	{d8}
   1526c:	pop	{r4, r5, r6, pc}
   15270:	mov	r2, #0
   15274:	ldr	r1, [pc, #88]	; 152d4 <strspn@plt+0x42f0>
   15278:	ldr	r0, [pc, #88]	; 152d8 <strspn@plt+0x42f4>
   1527c:	bl	10fa8 <newlocale@plt>
   15280:	ldr	r3, [pc, #72]	; 152d0 <strspn@plt+0x42ec>
   15284:	str	r0, [r3]
   15288:	b	15218 <strspn@plt+0x4234>
   1528c:	cmp	r4, #0
   15290:	beq	152b8 <strspn@plt+0x42d4>
   15294:	str	r5, [r4]
   15298:	vldr	d8, [pc, #40]	; 152c8 <strspn@plt+0x42e4>
   1529c:	b	15264 <strspn@plt+0x4280>
   152a0:	cmp	r4, #0
   152a4:	beq	152c0 <strspn@plt+0x42dc>
   152a8:	str	r5, [r4]
   152ac:	vldr	d8, [pc, #20]	; 152c8 <strspn@plt+0x42e4>
   152b0:	b	15264 <strspn@plt+0x4280>
   152b4:	bl	10fd8 <abort@plt>
   152b8:	vldr	d8, [pc, #8]	; 152c8 <strspn@plt+0x42e4>
   152bc:	b	15264 <strspn@plt+0x4280>
   152c0:	vldr	d8, [pc]	; 152c8 <strspn@plt+0x42e4>
   152c4:	b	15264 <strspn@plt+0x4280>
	...
   152d0:	andeq	r7, r2, r8, asr #5
   152d4:	ldrdeq	r6, [r1], -r4
   152d8:			; <UNDEFINED> instruction: 0x00001fbf
   152dc:	push	{r4, r5, r6, lr}
   152e0:	mov	r5, r0
   152e4:	bl	10e70 <__fpending@plt>
   152e8:	mov	r6, r0
   152ec:	ldr	r4, [r5]
   152f0:	and	r4, r4, #32
   152f4:	mov	r0, r5
   152f8:	bl	15354 <strspn@plt+0x4370>
   152fc:	cmp	r4, #0
   15300:	bne	15328 <strspn@plt+0x4344>
   15304:	cmp	r0, #0
   15308:	popeq	{r4, r5, r6, pc}
   1530c:	cmp	r6, #0
   15310:	bne	15344 <strspn@plt+0x4360>
   15314:	bl	10f18 <__errno_location@plt>
   15318:	ldr	r0, [r0]
   1531c:	subs	r0, r0, #9
   15320:	mvnne	r0, #0
   15324:	pop	{r4, r5, r6, pc}
   15328:	cmp	r0, #0
   1532c:	bne	1534c <strspn@plt+0x4368>
   15330:	bl	10f18 <__errno_location@plt>
   15334:	mov	r3, #0
   15338:	str	r3, [r0]
   1533c:	mvn	r0, #0
   15340:	pop	{r4, r5, r6, pc}
   15344:	mvn	r0, #0
   15348:	pop	{r4, r5, r6, pc}
   1534c:	mvn	r0, #0
   15350:	pop	{r4, r5, r6, pc}
   15354:	push	{r4, r5, r6, lr}
   15358:	sub	sp, sp, #8
   1535c:	mov	r4, r0
   15360:	bl	10f54 <fileno@plt>
   15364:	cmp	r0, #0
   15368:	blt	153e0 <strspn@plt+0x43fc>
   1536c:	mov	r0, r4
   15370:	bl	10eb8 <__freading@plt>
   15374:	cmp	r0, #0
   15378:	beq	153ac <strspn@plt+0x43c8>
   1537c:	mov	r0, r4
   15380:	bl	10f54 <fileno@plt>
   15384:	mov	r3, #1
   15388:	str	r3, [sp]
   1538c:	mov	r2, #0
   15390:	mov	r3, #0
   15394:	bl	10e4c <lseek64@plt>
   15398:	mvn	r2, #0
   1539c:	mvn	r3, #0
   153a0:	cmp	r1, r3
   153a4:	cmpeq	r0, r2
   153a8:	beq	153ec <strspn@plt+0x4408>
   153ac:	mov	r0, r4
   153b0:	bl	153fc <strspn@plt+0x4418>
   153b4:	cmp	r0, #0
   153b8:	beq	153ec <strspn@plt+0x4408>
   153bc:	bl	10f18 <__errno_location@plt>
   153c0:	mov	r5, r0
   153c4:	ldr	r6, [r0]
   153c8:	mov	r0, r4
   153cc:	bl	10f6c <fclose@plt>
   153d0:	cmp	r6, #0
   153d4:	strne	r6, [r5]
   153d8:	mvnne	r0, #0
   153dc:	b	153f4 <strspn@plt+0x4410>
   153e0:	mov	r0, r4
   153e4:	bl	10f6c <fclose@plt>
   153e8:	b	153f4 <strspn@plt+0x4410>
   153ec:	mov	r0, r4
   153f0:	bl	10f6c <fclose@plt>
   153f4:	add	sp, sp, #8
   153f8:	pop	{r4, r5, r6, pc}
   153fc:	push	{r4, lr}
   15400:	sub	sp, sp, #8
   15404:	subs	r4, r0, #0
   15408:	beq	1541c <strspn@plt+0x4438>
   1540c:	mov	r0, r4
   15410:	bl	10eb8 <__freading@plt>
   15414:	cmp	r0, #0
   15418:	bne	1542c <strspn@plt+0x4448>
   1541c:	mov	r0, r4
   15420:	bl	10d98 <fflush@plt>
   15424:	add	sp, sp, #8
   15428:	pop	{r4, pc}
   1542c:	ldr	r3, [r4]
   15430:	tst	r3, #256	; 0x100
   15434:	bne	15444 <strspn@plt+0x4460>
   15438:	mov	r0, r4
   1543c:	bl	10d98 <fflush@plt>
   15440:	b	15424 <strspn@plt+0x4440>
   15444:	mov	r3, #1
   15448:	str	r3, [sp]
   1544c:	mov	r2, #0
   15450:	mov	r3, #0
   15454:	mov	r0, r4
   15458:	bl	15460 <strspn@plt+0x447c>
   1545c:	b	15438 <strspn@plt+0x4454>
   15460:	push	{r4, r5, r6, r7, lr}
   15464:	sub	sp, sp, #12
   15468:	mov	r4, r0
   1546c:	mov	r6, r2
   15470:	mov	r7, r3
   15474:	ldr	r5, [sp, #32]
   15478:	ldr	r2, [r0, #8]
   1547c:	ldr	r3, [r0, #4]
   15480:	cmp	r2, r3
   15484:	beq	154a4 <strspn@plt+0x44c0>
   15488:	str	r5, [sp]
   1548c:	mov	r2, r6
   15490:	mov	r3, r7
   15494:	mov	r0, r4
   15498:	bl	10f78 <fseeko64@plt>
   1549c:	add	sp, sp, #12
   154a0:	pop	{r4, r5, r6, r7, pc}
   154a4:	ldr	r2, [r0, #20]
   154a8:	ldr	r3, [r0, #16]
   154ac:	cmp	r2, r3
   154b0:	bne	15488 <strspn@plt+0x44a4>
   154b4:	ldr	r3, [r0, #36]	; 0x24
   154b8:	cmp	r3, #0
   154bc:	bne	15488 <strspn@plt+0x44a4>
   154c0:	bl	10f54 <fileno@plt>
   154c4:	str	r5, [sp]
   154c8:	mov	r2, r6
   154cc:	mov	r3, r7
   154d0:	bl	10e4c <lseek64@plt>
   154d4:	mvn	r2, #0
   154d8:	mvn	r3, #0
   154dc:	cmp	r1, r3
   154e0:	cmpeq	r0, r2
   154e4:	beq	15500 <strspn@plt+0x451c>
   154e8:	ldr	r3, [r4]
   154ec:	bic	r3, r3, #16
   154f0:	str	r3, [r4]
   154f4:	strd	r0, [r4, #80]	; 0x50
   154f8:	mov	r0, #0
   154fc:	b	1549c <strspn@plt+0x44b8>
   15500:	mvn	r0, #0
   15504:	b	1549c <strspn@plt+0x44b8>
   15508:	push	{r4, lr}
   1550c:	mov	r0, #14
   15510:	bl	10f9c <nl_langinfo@plt>
   15514:	cmp	r0, #0
   15518:	beq	15530 <strspn@plt+0x454c>
   1551c:	ldrb	r2, [r0]
   15520:	ldr	r3, [pc, #16]	; 15538 <strspn@plt+0x4554>
   15524:	cmp	r2, #0
   15528:	moveq	r0, r3
   1552c:	pop	{r4, pc}
   15530:	ldr	r0, [pc]	; 15538 <strspn@plt+0x4554>
   15534:	pop	{r4, pc}
   15538:	ldrdeq	r6, [r1], -r8
   1553c:	push	{r4, r5, r6, r7, lr}
   15540:	sub	sp, sp, #12
   15544:	mov	r7, r1
   15548:	mov	r5, r2
   1554c:	subs	r6, r0, #0
   15550:	addeq	r6, sp, #4
   15554:	mov	r0, r6
   15558:	bl	10e7c <mbrtowc@plt>
   1555c:	mov	r4, r0
   15560:	cmp	r5, #0
   15564:	cmnne	r0, #3
   15568:	bhi	15578 <strspn@plt+0x4594>
   1556c:	mov	r0, r4
   15570:	add	sp, sp, #12
   15574:	pop	{r4, r5, r6, r7, pc}
   15578:	mov	r0, #0
   1557c:	bl	155e0 <strspn@plt+0x45fc>
   15580:	cmp	r0, #0
   15584:	ldrbeq	r3, [r7]
   15588:	streq	r3, [r6]
   1558c:	moveq	r4, #1
   15590:	b	1556c <strspn@plt+0x4588>
   15594:	push	{r4, r5, r6, lr}
   15598:	mov	r6, r0
   1559c:	mov	r5, r1
   155a0:	subs	r4, r2, #0
   155a4:	beq	155d0 <strspn@plt+0x45ec>
   155a8:	mov	r1, r4
   155ac:	mvn	r0, #0
   155b0:	bl	156e8 <strspn@plt+0x4704>
   155b4:	cmp	r0, r5
   155b8:	bcs	155d0 <strspn@plt+0x45ec>
   155bc:	bl	10f18 <__errno_location@plt>
   155c0:	mov	r3, #12
   155c4:	str	r3, [r0]
   155c8:	mov	r0, #0
   155cc:	pop	{r4, r5, r6, pc}
   155d0:	mul	r1, r5, r4
   155d4:	mov	r0, r6
   155d8:	bl	151a8 <strspn@plt+0x41c4>
   155dc:	pop	{r4, r5, r6, pc}
   155e0:	push	{lr}		; (str lr, [sp, #-4]!)
   155e4:	sub	sp, sp, #268	; 0x10c
   155e8:	ldr	r2, [pc, #68]	; 15634 <strspn@plt+0x4650>
   155ec:	add	r1, sp, #4
   155f0:	bl	15640 <strspn@plt+0x465c>
   155f4:	cmp	r0, #0
   155f8:	movne	r0, #0
   155fc:	bne	1562c <strspn@plt+0x4648>
   15600:	ldr	r1, [pc, #48]	; 15638 <strspn@plt+0x4654>
   15604:	add	r0, sp, #4
   15608:	bl	10d74 <strcmp@plt>
   1560c:	cmp	r0, #0
   15610:	moveq	r0, #0
   15614:	beq	1562c <strspn@plt+0x4648>
   15618:	ldr	r1, [pc, #28]	; 1563c <strspn@plt+0x4658>
   1561c:	add	r0, sp, #4
   15620:	bl	10d74 <strcmp@plt>
   15624:	adds	r0, r0, #0
   15628:	movne	r0, #1
   1562c:	add	sp, sp, #268	; 0x10c
   15630:	pop	{pc}		; (ldr pc, [sp], #4)
   15634:	andeq	r0, r0, r1, lsl #2
   15638:	ldrdeq	r6, [r1], -r4
   1563c:	andeq	r6, r1, r0, ror #19
   15640:	push	{r4, r5, r6, lr}
   15644:	mov	r6, r1
   15648:	mov	r4, r2
   1564c:	mov	r1, #0
   15650:	bl	10f84 <setlocale@plt>
   15654:	subs	r5, r0, #0
   15658:	beq	1567c <strspn@plt+0x4698>
   1565c:	mov	r0, r5
   15660:	bl	10f00 <strlen@plt>
   15664:	cmp	r4, r0
   15668:	bhi	15694 <strspn@plt+0x46b0>
   1566c:	cmp	r4, #0
   15670:	bne	156ac <strspn@plt+0x46c8>
   15674:	mov	r0, #34	; 0x22
   15678:	pop	{r4, r5, r6, pc}
   1567c:	cmp	r4, #0
   15680:	beq	156d0 <strspn@plt+0x46ec>
   15684:	mov	r3, #0
   15688:	strb	r3, [r6]
   1568c:	mov	r0, #22
   15690:	pop	{r4, r5, r6, pc}
   15694:	add	r2, r0, #1
   15698:	mov	r1, r5
   1569c:	mov	r0, r6
   156a0:	bl	10dc8 <memcpy@plt>
   156a4:	mov	r0, #0
   156a8:	pop	{r4, r5, r6, pc}
   156ac:	sub	r4, r4, #1
   156b0:	mov	r2, r4
   156b4:	mov	r1, r5
   156b8:	mov	r0, r6
   156bc:	bl	10dc8 <memcpy@plt>
   156c0:	mov	r3, #0
   156c4:	strb	r3, [r6, r4]
   156c8:	mov	r0, #34	; 0x22
   156cc:	pop	{r4, r5, r6, pc}
   156d0:	mov	r0, #22
   156d4:	pop	{r4, r5, r6, pc}
   156d8:	push	{r4, lr}
   156dc:	mov	r1, #0
   156e0:	bl	10f84 <setlocale@plt>
   156e4:	pop	{r4, pc}
   156e8:	subs	r2, r1, #1
   156ec:	bxeq	lr
   156f0:	bcc	158c8 <strspn@plt+0x48e4>
   156f4:	cmp	r0, r1
   156f8:	bls	158ac <strspn@plt+0x48c8>
   156fc:	tst	r1, r2
   15700:	beq	158b8 <strspn@plt+0x48d4>
   15704:	clz	r3, r0
   15708:	clz	r2, r1
   1570c:	sub	r3, r2, r3
   15710:	rsbs	r3, r3, #31
   15714:	addne	r3, r3, r3, lsl #1
   15718:	mov	r2, #0
   1571c:	addne	pc, pc, r3, lsl #2
   15720:	nop			; (mov r0, r0)
   15724:	cmp	r0, r1, lsl #31
   15728:	adc	r2, r2, r2
   1572c:	subcs	r0, r0, r1, lsl #31
   15730:	cmp	r0, r1, lsl #30
   15734:	adc	r2, r2, r2
   15738:	subcs	r0, r0, r1, lsl #30
   1573c:	cmp	r0, r1, lsl #29
   15740:	adc	r2, r2, r2
   15744:	subcs	r0, r0, r1, lsl #29
   15748:	cmp	r0, r1, lsl #28
   1574c:	adc	r2, r2, r2
   15750:	subcs	r0, r0, r1, lsl #28
   15754:	cmp	r0, r1, lsl #27
   15758:	adc	r2, r2, r2
   1575c:	subcs	r0, r0, r1, lsl #27
   15760:	cmp	r0, r1, lsl #26
   15764:	adc	r2, r2, r2
   15768:	subcs	r0, r0, r1, lsl #26
   1576c:	cmp	r0, r1, lsl #25
   15770:	adc	r2, r2, r2
   15774:	subcs	r0, r0, r1, lsl #25
   15778:	cmp	r0, r1, lsl #24
   1577c:	adc	r2, r2, r2
   15780:	subcs	r0, r0, r1, lsl #24
   15784:	cmp	r0, r1, lsl #23
   15788:	adc	r2, r2, r2
   1578c:	subcs	r0, r0, r1, lsl #23
   15790:	cmp	r0, r1, lsl #22
   15794:	adc	r2, r2, r2
   15798:	subcs	r0, r0, r1, lsl #22
   1579c:	cmp	r0, r1, lsl #21
   157a0:	adc	r2, r2, r2
   157a4:	subcs	r0, r0, r1, lsl #21
   157a8:	cmp	r0, r1, lsl #20
   157ac:	adc	r2, r2, r2
   157b0:	subcs	r0, r0, r1, lsl #20
   157b4:	cmp	r0, r1, lsl #19
   157b8:	adc	r2, r2, r2
   157bc:	subcs	r0, r0, r1, lsl #19
   157c0:	cmp	r0, r1, lsl #18
   157c4:	adc	r2, r2, r2
   157c8:	subcs	r0, r0, r1, lsl #18
   157cc:	cmp	r0, r1, lsl #17
   157d0:	adc	r2, r2, r2
   157d4:	subcs	r0, r0, r1, lsl #17
   157d8:	cmp	r0, r1, lsl #16
   157dc:	adc	r2, r2, r2
   157e0:	subcs	r0, r0, r1, lsl #16
   157e4:	cmp	r0, r1, lsl #15
   157e8:	adc	r2, r2, r2
   157ec:	subcs	r0, r0, r1, lsl #15
   157f0:	cmp	r0, r1, lsl #14
   157f4:	adc	r2, r2, r2
   157f8:	subcs	r0, r0, r1, lsl #14
   157fc:	cmp	r0, r1, lsl #13
   15800:	adc	r2, r2, r2
   15804:	subcs	r0, r0, r1, lsl #13
   15808:	cmp	r0, r1, lsl #12
   1580c:	adc	r2, r2, r2
   15810:	subcs	r0, r0, r1, lsl #12
   15814:	cmp	r0, r1, lsl #11
   15818:	adc	r2, r2, r2
   1581c:	subcs	r0, r0, r1, lsl #11
   15820:	cmp	r0, r1, lsl #10
   15824:	adc	r2, r2, r2
   15828:	subcs	r0, r0, r1, lsl #10
   1582c:	cmp	r0, r1, lsl #9
   15830:	adc	r2, r2, r2
   15834:	subcs	r0, r0, r1, lsl #9
   15838:	cmp	r0, r1, lsl #8
   1583c:	adc	r2, r2, r2
   15840:	subcs	r0, r0, r1, lsl #8
   15844:	cmp	r0, r1, lsl #7
   15848:	adc	r2, r2, r2
   1584c:	subcs	r0, r0, r1, lsl #7
   15850:	cmp	r0, r1, lsl #6
   15854:	adc	r2, r2, r2
   15858:	subcs	r0, r0, r1, lsl #6
   1585c:	cmp	r0, r1, lsl #5
   15860:	adc	r2, r2, r2
   15864:	subcs	r0, r0, r1, lsl #5
   15868:	cmp	r0, r1, lsl #4
   1586c:	adc	r2, r2, r2
   15870:	subcs	r0, r0, r1, lsl #4
   15874:	cmp	r0, r1, lsl #3
   15878:	adc	r2, r2, r2
   1587c:	subcs	r0, r0, r1, lsl #3
   15880:	cmp	r0, r1, lsl #2
   15884:	adc	r2, r2, r2
   15888:	subcs	r0, r0, r1, lsl #2
   1588c:	cmp	r0, r1, lsl #1
   15890:	adc	r2, r2, r2
   15894:	subcs	r0, r0, r1, lsl #1
   15898:	cmp	r0, r1
   1589c:	adc	r2, r2, r2
   158a0:	subcs	r0, r0, r1
   158a4:	mov	r0, r2
   158a8:	bx	lr
   158ac:	moveq	r0, #1
   158b0:	movne	r0, #0
   158b4:	bx	lr
   158b8:	clz	r2, r1
   158bc:	rsb	r2, r2, #31
   158c0:	lsr	r0, r0, r2
   158c4:	bx	lr
   158c8:	cmp	r0, #0
   158cc:	mvnne	r0, #0
   158d0:	b	15b34 <strspn@plt+0x4b50>
   158d4:	cmp	r1, #0
   158d8:	beq	158c8 <strspn@plt+0x48e4>
   158dc:	push	{r0, r1, lr}
   158e0:	bl	156e8 <strspn@plt+0x4704>
   158e4:	pop	{r1, r2, lr}
   158e8:	mul	r3, r2, r0
   158ec:	sub	r1, r1, r3
   158f0:	bx	lr
   158f4:	cmp	r1, #0
   158f8:	beq	15b04 <strspn@plt+0x4b20>
   158fc:	eor	ip, r0, r1
   15900:	rsbmi	r1, r1, #0
   15904:	subs	r2, r1, #1
   15908:	beq	15ad0 <strspn@plt+0x4aec>
   1590c:	movs	r3, r0
   15910:	rsbmi	r3, r0, #0
   15914:	cmp	r3, r1
   15918:	bls	15adc <strspn@plt+0x4af8>
   1591c:	tst	r1, r2
   15920:	beq	15aec <strspn@plt+0x4b08>
   15924:	clz	r2, r3
   15928:	clz	r0, r1
   1592c:	sub	r2, r0, r2
   15930:	rsbs	r2, r2, #31
   15934:	addne	r2, r2, r2, lsl #1
   15938:	mov	r0, #0
   1593c:	addne	pc, pc, r2, lsl #2
   15940:	nop			; (mov r0, r0)
   15944:	cmp	r3, r1, lsl #31
   15948:	adc	r0, r0, r0
   1594c:	subcs	r3, r3, r1, lsl #31
   15950:	cmp	r3, r1, lsl #30
   15954:	adc	r0, r0, r0
   15958:	subcs	r3, r3, r1, lsl #30
   1595c:	cmp	r3, r1, lsl #29
   15960:	adc	r0, r0, r0
   15964:	subcs	r3, r3, r1, lsl #29
   15968:	cmp	r3, r1, lsl #28
   1596c:	adc	r0, r0, r0
   15970:	subcs	r3, r3, r1, lsl #28
   15974:	cmp	r3, r1, lsl #27
   15978:	adc	r0, r0, r0
   1597c:	subcs	r3, r3, r1, lsl #27
   15980:	cmp	r3, r1, lsl #26
   15984:	adc	r0, r0, r0
   15988:	subcs	r3, r3, r1, lsl #26
   1598c:	cmp	r3, r1, lsl #25
   15990:	adc	r0, r0, r0
   15994:	subcs	r3, r3, r1, lsl #25
   15998:	cmp	r3, r1, lsl #24
   1599c:	adc	r0, r0, r0
   159a0:	subcs	r3, r3, r1, lsl #24
   159a4:	cmp	r3, r1, lsl #23
   159a8:	adc	r0, r0, r0
   159ac:	subcs	r3, r3, r1, lsl #23
   159b0:	cmp	r3, r1, lsl #22
   159b4:	adc	r0, r0, r0
   159b8:	subcs	r3, r3, r1, lsl #22
   159bc:	cmp	r3, r1, lsl #21
   159c0:	adc	r0, r0, r0
   159c4:	subcs	r3, r3, r1, lsl #21
   159c8:	cmp	r3, r1, lsl #20
   159cc:	adc	r0, r0, r0
   159d0:	subcs	r3, r3, r1, lsl #20
   159d4:	cmp	r3, r1, lsl #19
   159d8:	adc	r0, r0, r0
   159dc:	subcs	r3, r3, r1, lsl #19
   159e0:	cmp	r3, r1, lsl #18
   159e4:	adc	r0, r0, r0
   159e8:	subcs	r3, r3, r1, lsl #18
   159ec:	cmp	r3, r1, lsl #17
   159f0:	adc	r0, r0, r0
   159f4:	subcs	r3, r3, r1, lsl #17
   159f8:	cmp	r3, r1, lsl #16
   159fc:	adc	r0, r0, r0
   15a00:	subcs	r3, r3, r1, lsl #16
   15a04:	cmp	r3, r1, lsl #15
   15a08:	adc	r0, r0, r0
   15a0c:	subcs	r3, r3, r1, lsl #15
   15a10:	cmp	r3, r1, lsl #14
   15a14:	adc	r0, r0, r0
   15a18:	subcs	r3, r3, r1, lsl #14
   15a1c:	cmp	r3, r1, lsl #13
   15a20:	adc	r0, r0, r0
   15a24:	subcs	r3, r3, r1, lsl #13
   15a28:	cmp	r3, r1, lsl #12
   15a2c:	adc	r0, r0, r0
   15a30:	subcs	r3, r3, r1, lsl #12
   15a34:	cmp	r3, r1, lsl #11
   15a38:	adc	r0, r0, r0
   15a3c:	subcs	r3, r3, r1, lsl #11
   15a40:	cmp	r3, r1, lsl #10
   15a44:	adc	r0, r0, r0
   15a48:	subcs	r3, r3, r1, lsl #10
   15a4c:	cmp	r3, r1, lsl #9
   15a50:	adc	r0, r0, r0
   15a54:	subcs	r3, r3, r1, lsl #9
   15a58:	cmp	r3, r1, lsl #8
   15a5c:	adc	r0, r0, r0
   15a60:	subcs	r3, r3, r1, lsl #8
   15a64:	cmp	r3, r1, lsl #7
   15a68:	adc	r0, r0, r0
   15a6c:	subcs	r3, r3, r1, lsl #7
   15a70:	cmp	r3, r1, lsl #6
   15a74:	adc	r0, r0, r0
   15a78:	subcs	r3, r3, r1, lsl #6
   15a7c:	cmp	r3, r1, lsl #5
   15a80:	adc	r0, r0, r0
   15a84:	subcs	r3, r3, r1, lsl #5
   15a88:	cmp	r3, r1, lsl #4
   15a8c:	adc	r0, r0, r0
   15a90:	subcs	r3, r3, r1, lsl #4
   15a94:	cmp	r3, r1, lsl #3
   15a98:	adc	r0, r0, r0
   15a9c:	subcs	r3, r3, r1, lsl #3
   15aa0:	cmp	r3, r1, lsl #2
   15aa4:	adc	r0, r0, r0
   15aa8:	subcs	r3, r3, r1, lsl #2
   15aac:	cmp	r3, r1, lsl #1
   15ab0:	adc	r0, r0, r0
   15ab4:	subcs	r3, r3, r1, lsl #1
   15ab8:	cmp	r3, r1
   15abc:	adc	r0, r0, r0
   15ac0:	subcs	r3, r3, r1
   15ac4:	cmp	ip, #0
   15ac8:	rsbmi	r0, r0, #0
   15acc:	bx	lr
   15ad0:	teq	ip, r0
   15ad4:	rsbmi	r0, r0, #0
   15ad8:	bx	lr
   15adc:	movcc	r0, #0
   15ae0:	asreq	r0, ip, #31
   15ae4:	orreq	r0, r0, #1
   15ae8:	bx	lr
   15aec:	clz	r2, r1
   15af0:	rsb	r2, r2, #31
   15af4:	cmp	ip, #0
   15af8:	lsr	r0, r3, r2
   15afc:	rsbmi	r0, r0, #0
   15b00:	bx	lr
   15b04:	cmp	r0, #0
   15b08:	mvngt	r0, #-2147483648	; 0x80000000
   15b0c:	movlt	r0, #-2147483648	; 0x80000000
   15b10:	b	15b34 <strspn@plt+0x4b50>
   15b14:	cmp	r1, #0
   15b18:	beq	15b04 <strspn@plt+0x4b20>
   15b1c:	push	{r0, r1, lr}
   15b20:	bl	158fc <strspn@plt+0x4918>
   15b24:	pop	{r1, r2, lr}
   15b28:	mul	r3, r2, r0
   15b2c:	sub	r1, r1, r3
   15b30:	bx	lr
   15b34:	push	{r1, lr}
   15b38:	mov	r0, #8
   15b3c:	bl	10d5c <raise@plt>
   15b40:	pop	{r1, pc}
   15b44:	andeq	r0, r0, r0
   15b48:	vmov	d7, r0, r1
   15b4c:	vldr	d6, [pc, #44]	; 15b80 <strspn@plt+0x4b9c>
   15b50:	vldr	d5, [pc, #48]	; 15b88 <strspn@plt+0x4ba4>
   15b54:	mov	r0, #0
   15b58:	vmul.f64	d6, d7, d6
   15b5c:	vcvt.u32.f64	s12, d6
   15b60:	vcvt.f64.u32	d4, s12
   15b64:	vmov	r1, s12
   15b68:	vmls.f64	d7, d4, d5
   15b6c:	vcvt.u32.f64	s14, d7
   15b70:	vmov	r3, s14
   15b74:	orr	r0, r0, r3
   15b78:	bx	lr
   15b7c:	nop			; (mov r0, r0)
   15b80:	andeq	r0, r0, r0
   15b84:	ldclcc	0, cr0, [r0]
   15b88:	andeq	r0, r0, r0
   15b8c:	mvnsmi	r0, r0
   15b90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15b94:	mov	r7, r0
   15b98:	ldr	r6, [pc, #72]	; 15be8 <strspn@plt+0x4c04>
   15b9c:	ldr	r5, [pc, #72]	; 15bec <strspn@plt+0x4c08>
   15ba0:	add	r6, pc, r6
   15ba4:	add	r5, pc, r5
   15ba8:	sub	r6, r6, r5
   15bac:	mov	r8, r1
   15bb0:	mov	r9, r2
   15bb4:	bl	10d24 <calloc@plt-0x20>
   15bb8:	asrs	r6, r6, #2
   15bbc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15bc0:	mov	r4, #0
   15bc4:	add	r4, r4, #1
   15bc8:	ldr	r3, [r5], #4
   15bcc:	mov	r2, r9
   15bd0:	mov	r1, r8
   15bd4:	mov	r0, r7
   15bd8:	blx	r3
   15bdc:	cmp	r6, r4
   15be0:	bne	15bc4 <strspn@plt+0x4be0>
   15be4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15be8:	andeq	r1, r1, r8, ror #6
   15bec:	andeq	r1, r1, r0, ror #6
   15bf0:	bx	lr
   15bf4:	ldr	r3, [pc, #12]	; 15c08 <strspn@plt+0x4c24>
   15bf8:	mov	r1, #0
   15bfc:	add	r3, pc, r3
   15c00:	ldr	r2, [r3]
   15c04:	b	10f30 <__cxa_atexit@plt>
   15c08:	strdeq	r1, [r1], -r4

Disassembly of section .fini:

00015c0c <.fini>:
   15c0c:	push	{r3, lr}
   15c10:	pop	{r3, pc}
