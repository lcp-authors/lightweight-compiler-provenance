
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010e8c <.init>:
   10e8c:	push	{r3, lr}
   10e90:	bl	1114c <Mat_VarReadNextInfo@plt+0x48>
   10e94:	pop	{r3, pc}

Disassembly of section .plt:

00010e98 <Mat_VarGetNumberOfFields@plt-0x14>:
   10e98:	push	{lr}		; (str lr, [sp, #-4]!)
   10e9c:	ldr	lr, [pc, #4]	; 10ea8 <Mat_VarGetNumberOfFields@plt-0x4>
   10ea0:	add	lr, pc, lr
   10ea4:	ldr	pc, [lr, #8]!
   10ea8:	andeq	r4, r1, r8, asr r1

00010eac <Mat_VarGetNumberOfFields@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #20, 20	; 0x14000
   10eb4:	ldr	pc, [ip, #344]!	; 0x158

00010eb8 <Mat_SetVerbose@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #20, 20	; 0x14000
   10ec0:	ldr	pc, [ip, #336]!	; 0x150

00010ec4 <Mat_LogClose@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #20, 20	; 0x14000
   10ecc:	ldr	pc, [ip, #328]!	; 0x148

00010ed0 <Mat_VarReadNext@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #20, 20	; 0x14000
   10ed8:	ldr	pc, [ip, #320]!	; 0x140

00010edc <strcmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #20, 20	; 0x14000
   10ee4:	ldr	pc, [ip, #312]!	; 0x138

00010ee8 <Mat_Open@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #20, 20	; 0x14000
   10ef0:	ldr	pc, [ip, #304]!	; 0x130

00010ef4 <printf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #20, 20	; 0x14000
   10efc:	ldr	pc, [ip, #296]!	; 0x128

00010f00 <Mat_VarGetCells@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #20, 20	; 0x14000
   10f08:	ldr	pc, [ip, #288]!	; 0x120

00010f0c <Mat_VarGetCell@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #20, 20	; 0x14000
   10f14:	ldr	pc, [ip, #280]!	; 0x118

00010f18 <Mat_VarCreate@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #20, 20	; 0x14000
   10f20:	ldr	pc, [ip, #272]!	; 0x110

00010f24 <free@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #20, 20	; 0x14000
   10f2c:	ldr	pc, [ip, #264]!	; 0x108

00010f30 <Mat_Warning@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #20, 20	; 0x14000
   10f38:	ldr	pc, [ip, #256]!	; 0x100

00010f3c <Mat_VarReadDataLinear@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #20, 20	; 0x14000
   10f44:	ldr	pc, [ip, #248]!	; 0xf8

00010f48 <Mat_Message@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #20, 20	; 0x14000
   10f50:	ldr	pc, [ip, #240]!	; 0xf0

00010f54 <Mat_VarReadData@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #20, 20	; 0x14000
   10f5c:	ldr	pc, [ip, #232]!	; 0xe8

00010f60 <Mat_VarReadDataAll@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #20, 20	; 0x14000
   10f68:	ldr	pc, [ip, #224]!	; 0xe0

00010f6c <Mat_VarReadInfo@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #20, 20	; 0x14000
   10f74:	ldr	pc, [ip, #216]!	; 0xd8

00010f78 <fwrite@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #20, 20	; 0x14000
   10f80:	ldr	pc, [ip, #208]!	; 0xd0

00010f84 <Mat_VarGetStructFieldnames@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #20, 20	; 0x14000
   10f8c:	ldr	pc, [ip, #200]!	; 0xc8

00010f90 <getenv@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #20, 20	; 0x14000
   10f98:	ldr	pc, [ip, #192]!	; 0xc0

00010f9c <puts@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #20, 20	; 0x14000
   10fa4:	ldr	pc, [ip, #184]!	; 0xb8

00010fa8 <malloc@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #20, 20	; 0x14000
   10fb0:	ldr	pc, [ip, #176]!	; 0xb0

00010fb4 <log10@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #20, 20	; 0x14000
   10fbc:	ldr	pc, [ip, #168]!	; 0xa8

00010fc0 <__libc_start_main@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #20, 20	; 0x14000
   10fc8:	ldr	pc, [ip, #160]!	; 0xa0

00010fcc <__gmon_start__@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #20, 20	; 0x14000
   10fd4:	ldr	pc, [ip, #152]!	; 0x98

00010fd8 <exit@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #20, 20	; 0x14000
   10fe0:	ldr	pc, [ip, #144]!	; 0x90

00010fe4 <Mat_VarFree@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #20, 20	; 0x14000
   10fec:	ldr	pc, [ip, #136]!	; 0x88

00010ff0 <Mat_SizeOf@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #20, 20	; 0x14000
   10ff8:	ldr	pc, [ip, #128]!	; 0x80

00010ffc <strlen@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #20, 20	; 0x14000
   11004:	ldr	pc, [ip, #120]!	; 0x78

00011008 <strchr@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #20, 20	; 0x14000
   11010:	ldr	pc, [ip, #112]!	; 0x70

00011014 <warnx@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #20, 20	; 0x14000
   1101c:	ldr	pc, [ip, #104]!	; 0x68

00011020 <fprintf@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #20, 20	; 0x14000
   11028:	ldr	pc, [ip, #96]!	; 0x60

0001102c <Mat_GetLibraryVersion@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #20, 20	; 0x14000
   11034:	ldr	pc, [ip, #88]!	; 0x58

00011038 <Mat_VarPrint@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #20, 20	; 0x14000
   11040:	ldr	pc, [ip, #80]!	; 0x50

00011044 <memset@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #20, 20	; 0x14000
   1104c:	ldr	pc, [ip, #72]!	; 0x48

00011050 <putchar@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #20, 20	; 0x14000
   11058:	ldr	pc, [ip, #64]!	; 0x40

0001105c <Mat_Close@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #20, 20	; 0x14000
   11064:	ldr	pc, [ip, #56]!	; 0x38

00011068 <Mat_Critical@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #20, 20	; 0x14000
   11070:	ldr	pc, [ip, #48]!	; 0x30

00011074 <Mat_LogInitFunc@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #20, 20	; 0x14000
   1107c:	ldr	pc, [ip, #40]!	; 0x28

00011080 <Mat_VerbMessage@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #20, 20	; 0x14000
   11088:	ldr	pc, [ip, #32]!

0001108c <Mat_VarGetCellsLinear@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #20, 20	; 0x14000
   11094:	ldr	pc, [ip, #24]!

00011098 <sprintf@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #20, 20	; 0x14000
   110a0:	ldr	pc, [ip, #16]!

000110a4 <Mat_Help@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #20, 20	; 0x14000
   110ac:	ldr	pc, [ip, #8]!

000110b0 <atoi@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #20, 20	; 0x14000
   110b8:	ldr	pc, [ip, #0]!

000110bc <Mat_VarGetStructFieldByName@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #77824	; 0x13000
   110c4:	ldr	pc, [ip, #4088]!	; 0xff8

000110c8 <Mat_SizeOfClass@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #77824	; 0x13000
   110d0:	ldr	pc, [ip, #4080]!	; 0xff0

000110d4 <Mat_VarGetSize@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #77824	; 0x13000
   110dc:	ldr	pc, [ip, #4072]!	; 0xfe8

000110e0 <strncmp@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #77824	; 0x13000
   110e8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110ec <abort@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #77824	; 0x13000
   110f4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110f8 <Mat_VarDuplicate@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #77824	; 0x13000
   11100:	ldr	pc, [ip, #4048]!	; 0xfd0

00011104 <Mat_VarReadNextInfo@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #77824	; 0x13000
   1110c:	ldr	pc, [ip, #4040]!	; 0xfc8

Disassembly of section .text:

00011110 <getopt@@Base-0x1d6c>:
   11110:	mov	fp, #0
   11114:	mov	lr, #0
   11118:	pop	{r1}		; (ldr r1, [sp], #4)
   1111c:	mov	r2, sp
   11120:	push	{r2}		; (str r2, [sp, #-4]!)
   11124:	push	{r0}		; (str r0, [sp, #-4]!)
   11128:	ldr	ip, [pc, #16]	; 11140 <Mat_VarReadNextInfo@plt+0x3c>
   1112c:	push	{ip}		; (str ip, [sp, #-4]!)
   11130:	ldr	r0, [pc, #12]	; 11144 <Mat_VarReadNextInfo@plt+0x40>
   11134:	ldr	r3, [pc, #12]	; 11148 <Mat_VarReadNextInfo@plt+0x44>
   11138:	bl	10fc0 <__libc_start_main@plt>
   1113c:	bl	110ec <abort@plt>
   11140:			; <UNDEFINED> instruction: 0x00013bb8
   11144:	andeq	r1, r1, r0, lsl #4
   11148:	andeq	r3, r1, r8, asr fp
   1114c:	ldr	r3, [pc, #20]	; 11168 <Mat_VarReadNextInfo@plt+0x64>
   11150:	ldr	r2, [pc, #20]	; 1116c <Mat_VarReadNextInfo@plt+0x68>
   11154:	add	r3, pc, r3
   11158:	ldr	r2, [r3, r2]
   1115c:	cmp	r2, #0
   11160:	bxeq	lr
   11164:	b	10fcc <__gmon_start__@plt>
   11168:	andeq	r3, r1, r4, lsr #29
   1116c:	andeq	r0, r0, r0, ror #1
   11170:	ldr	r0, [pc, #24]	; 11190 <Mat_VarReadNextInfo@plt+0x8c>
   11174:	ldr	r3, [pc, #24]	; 11194 <Mat_VarReadNextInfo@plt+0x90>
   11178:	cmp	r3, r0
   1117c:	bxeq	lr
   11180:	ldr	r3, [pc, #16]	; 11198 <Mat_VarReadNextInfo@plt+0x94>
   11184:	cmp	r3, #0
   11188:	bxeq	lr
   1118c:	bx	r3
   11190:	andeq	r5, r2, ip, asr #3
   11194:	andeq	r5, r2, ip, asr #3
   11198:	andeq	r0, r0, r0
   1119c:	ldr	r0, [pc, #36]	; 111c8 <Mat_VarReadNextInfo@plt+0xc4>
   111a0:	ldr	r1, [pc, #36]	; 111cc <Mat_VarReadNextInfo@plt+0xc8>
   111a4:	sub	r1, r1, r0
   111a8:	asr	r1, r1, #2
   111ac:	add	r1, r1, r1, lsr #31
   111b0:	asrs	r1, r1, #1
   111b4:	bxeq	lr
   111b8:	ldr	r3, [pc, #16]	; 111d0 <Mat_VarReadNextInfo@plt+0xcc>
   111bc:	cmp	r3, #0
   111c0:	bxeq	lr
   111c4:	bx	r3
   111c8:	andeq	r5, r2, ip, asr #3
   111cc:	andeq	r5, r2, ip, asr #3
   111d0:	andeq	r0, r0, r0
   111d4:	push	{r4, lr}
   111d8:	ldr	r4, [pc, #24]	; 111f8 <Mat_VarReadNextInfo@plt+0xf4>
   111dc:	ldrb	r3, [r4]
   111e0:	cmp	r3, #0
   111e4:	popne	{r4, pc}
   111e8:	bl	11170 <Mat_VarReadNextInfo@plt+0x6c>
   111ec:	mov	r3, #1
   111f0:	strb	r3, [r4]
   111f4:	pop	{r4, pc}
   111f8:	ldrdeq	r5, [r2], -r4
   111fc:	b	1119c <Mat_VarReadNextInfo@plt+0x98>
   11200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11204:	add	fp, sp, #28
   11208:	sub	sp, sp, #20
   1120c:	mov	r5, r1
   11210:	mov	r6, r0
   11214:	add	r0, sp, #4
   11218:	add	r1, r0, #4
   1121c:	add	r2, r0, #8
   11220:	bl	1102c <Mat_GetLibraryVersion@plt>
   11224:	ldr	r0, [sp, #4]
   11228:	cmp	r0, #1
   1122c:	ldreq	r0, [sp, #8]
   11230:	cmpeq	r0, #5
   11234:	beq	11260 <Mat_VarReadNextInfo@plt+0x15c>
   11238:	movw	r0, #20944	; 0x51d0
   1123c:	movt	r0, #2
   11240:	ldr	r3, [r0]
   11244:	movw	r0, #15312	; 0x3bd0
   11248:	movt	r0, #1
   1124c:	mov	r4, #1
   11250:	mov	r1, #55	; 0x37
   11254:	mov	r2, #1
   11258:	bl	10f78 <fwrite@plt>
   1125c:	b	11658 <Mat_VarReadNextInfo@plt+0x554>
   11260:	ldr	r0, [sp, #12]
   11264:	cmp	r0, #15
   11268:	bne	11238 <Mat_VarReadNextInfo@plt+0x134>
   1126c:	movw	r0, #15304	; 0x3bc8
   11270:	movt	r0, #1
   11274:	movw	r1, #5788	; 0x169c
   11278:	movt	r1, #1
   1127c:	bl	11074 <Mat_LogInitFunc@plt>
   11280:	movw	r1, #20952	; 0x51d8
   11284:	movt	r1, #2
   11288:	movw	r0, #5868	; 0x16ec
   1128c:	movt	r0, #1
   11290:	str	r0, [r1]
   11294:	mov	r8, #0
   11298:	movw	r4, #15840	; 0x3de0
   1129c:	movt	r4, #1
   112a0:	movw	r7, #20728	; 0x50f8
   112a4:	movt	r7, #2
   112a8:	mov	r9, #1
   112ac:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   112b0:	movw	r0, #15572	; 0x3cd4
   112b4:	movt	r0, #1
   112b8:	bl	10ef4 <printf@plt>
   112bc:	str	r8, [sp]
   112c0:	mov	r0, r6
   112c4:	mov	r1, r5
   112c8:	mov	r2, r4
   112cc:	mov	r3, r7
   112d0:	bl	135ec <getopt_long@@Base>
   112d4:	mov	r1, r0
   112d8:	sub	r0, r0, #72	; 0x48
   112dc:	cmp	r0, #46	; 0x2e
   112e0:	bhi	113c8 <Mat_VarReadNextInfo@plt+0x2c4>
   112e4:	add	r2, pc, #0
   112e8:	ldr	pc, [r2, r0, lsl #2]
   112ec:	andeq	r1, r1, r4, ror #12
   112f0:			; <UNDEFINED> instruction: 0x000112b0
   112f4:			; <UNDEFINED> instruction: 0x000112b0
   112f8:			; <UNDEFINED> instruction: 0x000112b0
   112fc:			; <UNDEFINED> instruction: 0x000112b0
   11300:			; <UNDEFINED> instruction: 0x000112b0
   11304:			; <UNDEFINED> instruction: 0x000112b0
   11308:			; <UNDEFINED> instruction: 0x000112b0
   1130c:			; <UNDEFINED> instruction: 0x000112b0
   11310:			; <UNDEFINED> instruction: 0x000112b0
   11314:			; <UNDEFINED> instruction: 0x000112b0
   11318:			; <UNDEFINED> instruction: 0x000112b0
   1131c:			; <UNDEFINED> instruction: 0x000112b0
   11320:			; <UNDEFINED> instruction: 0x000112b0
   11324:	andeq	r1, r1, r8, ror r6
   11328:			; <UNDEFINED> instruction: 0x000112b0
   1132c:			; <UNDEFINED> instruction: 0x000112b0
   11330:			; <UNDEFINED> instruction: 0x000112b0
   11334:			; <UNDEFINED> instruction: 0x000112b0
   11338:			; <UNDEFINED> instruction: 0x000112b0
   1133c:			; <UNDEFINED> instruction: 0x000112b0
   11340:			; <UNDEFINED> instruction: 0x000112b0
   11344:			; <UNDEFINED> instruction: 0x000112b0
   11348:			; <UNDEFINED> instruction: 0x000112b0
   1134c:			; <UNDEFINED> instruction: 0x000112b0
   11350:			; <UNDEFINED> instruction: 0x000112b0
   11354:			; <UNDEFINED> instruction: 0x000112b0
   11358:			; <UNDEFINED> instruction: 0x000112b0
   1135c:	andeq	r1, r1, r8, lsr #7
   11360:			; <UNDEFINED> instruction: 0x000112b0
   11364:	andeq	r1, r1, r4, ror #7
   11368:			; <UNDEFINED> instruction: 0x000112b0
   1136c:	ldrdeq	r1, [r1], -r4
   11370:			; <UNDEFINED> instruction: 0x000112b0
   11374:			; <UNDEFINED> instruction: 0x000112b0
   11378:			; <UNDEFINED> instruction: 0x000112b0
   1137c:			; <UNDEFINED> instruction: 0x000112b0
   11380:			; <UNDEFINED> instruction: 0x000112b0
   11384:			; <UNDEFINED> instruction: 0x000112b0
   11388:			; <UNDEFINED> instruction: 0x000112b0
   1138c:			; <UNDEFINED> instruction: 0x000112b0
   11390:			; <UNDEFINED> instruction: 0x000112b0
   11394:			; <UNDEFINED> instruction: 0x000112b0
   11398:			; <UNDEFINED> instruction: 0x000112b0
   1139c:			; <UNDEFINED> instruction: 0x000112b0
   113a0:			; <UNDEFINED> instruction: 0x000112b0
   113a4:	andeq	r1, r1, r4, lsr #8
   113a8:	movw	r0, #20956	; 0x51dc
   113ac:	movt	r0, #2
   113b0:	strb	r9, [r0]
   113b4:	mov	r0, #1
   113b8:	movw	r1, #15368	; 0x3c08
   113bc:	movt	r1, #1
   113c0:	bl	11080 <Mat_VerbMessage@plt>
   113c4:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   113c8:	cmn	r1, #1
   113cc:	beq	1145c <Mat_VarReadNextInfo@plt+0x358>
   113d0:	b	112b0 <Mat_VarReadNextInfo@plt+0x1ac>
   113d4:	movw	r0, #20960	; 0x51e0
   113d8:	movt	r0, #2
   113dc:	strb	r9, [r0]
   113e0:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   113e4:	movw	r0, #20976	; 0x51f0
   113e8:	movt	r0, #2
   113ec:	ldr	sl, [r0]
   113f0:	cmp	sl, #0
   113f4:	beq	11434 <Mat_VarReadNextInfo@plt+0x330>
   113f8:	mov	r0, sl
   113fc:	movw	r1, #15383	; 0x3c17
   11400:	movt	r1, #1
   11404:	bl	10edc <strcmp@plt>
   11408:	cmp	r0, #0
   1140c:	beq	11444 <Mat_VarReadNextInfo@plt+0x340>
   11410:	movw	r0, #15388	; 0x3c1c
   11414:	movt	r0, #1
   11418:	mov	r1, sl
   1141c:	bl	10f30 <Mat_Warning@plt>
   11420:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   11424:	mov	r0, #1
   11428:	mov	r1, #0
   1142c:	bl	10eb8 <Mat_SetVerbose@plt>
   11430:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   11434:	movw	r0, #15441	; 0x3c51
   11438:	movt	r0, #1
   1143c:	bl	10f30 <Mat_Warning@plt>
   11440:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   11444:	movw	r0, #20952	; 0x51d8
   11448:	movt	r0, #2
   1144c:	movw	r1, #6552	; 0x1998
   11450:	movt	r1, #1
   11454:	str	r1, [r0]
   11458:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   1145c:	movw	r4, #20916	; 0x51b4
   11460:	movt	r4, #2
   11464:	ldr	r0, [r4]
   11468:	cmp	r0, r6
   1146c:	bge	11570 <Mat_VarReadNextInfo@plt+0x46c>
   11470:	ldr	r0, [r5, r0, lsl #2]
   11474:	mov	r1, #0
   11478:	bl	10ee8 <Mat_Open@plt>
   1147c:	mov	r8, r0
   11480:	ldr	r0, [r4]
   11484:	cmp	r8, #0
   11488:	beq	11584 <Mat_VarReadNextInfo@plt+0x480>
   1148c:	add	r1, r0, #1
   11490:	str	r1, [r4]
   11494:	cmp	r1, r6
   11498:	bge	1159c <Mat_VarReadNextInfo@plt+0x498>
   1149c:	sub	r1, r6, #1
   114a0:	sub	r4, r1, r0
   114a4:	add	r0, r5, r0, lsl #2
   114a8:	add	sl, r0, #4
   114ac:	movw	r9, #15648	; 0x3d20
   114b0:	movt	r9, #1
   114b4:	mov	r5, #0
   114b8:	ldr	r6, [sl]
   114bc:	mov	r0, r6
   114c0:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   114c4:	mov	r7, r0
   114c8:	cmp	r0, r6
   114cc:	mov	r6, #0
   114d0:	ldrbne	r6, [r7]
   114d4:	strbne	r5, [r7]
   114d8:	ldr	r1, [sl]
   114dc:	mov	r0, r8
   114e0:	bl	10f6c <Mat_VarReadInfo@plt>
   114e4:	str	r0, [sp, #16]
   114e8:	cmp	r0, #0
   114ec:	beq	11528 <Mat_VarReadNextInfo@plt+0x424>
   114f0:	mov	r1, r0
   114f4:	movw	r0, #20956	; 0x51dc
   114f8:	movt	r0, #2
   114fc:	ldrb	r0, [r0]
   11500:	cmp	r0, #1
   11504:	bne	11540 <Mat_VarReadNextInfo@plt+0x43c>
   11508:	cmp	r6, #0
   1150c:	beq	11538 <Mat_VarReadNextInfo@plt+0x434>
   11510:	strb	r6, [r7]
   11514:	mov	r0, r8
   11518:	add	r1, sp, #16
   1151c:	mov	r2, r7
   11520:	bl	11c44 <Mat_VarReadNextInfo@plt+0xb40>
   11524:	b	11540 <Mat_VarReadNextInfo@plt+0x43c>
   11528:	ldr	r1, [sl]
   1152c:	mov	r0, r9
   11530:	bl	10f30 <Mat_Warning@plt>
   11534:	b	11560 <Mat_VarReadNextInfo@plt+0x45c>
   11538:	mov	r0, r8
   1153c:	bl	10f60 <Mat_VarReadDataAll@plt>
   11540:	movw	r0, #20952	; 0x51d8
   11544:	movt	r0, #2
   11548:	ldr	r1, [r0]
   1154c:	ldr	r6, [sp, #16]
   11550:	mov	r0, r6
   11554:	blx	r1
   11558:	mov	r0, r6
   1155c:	bl	10fe4 <Mat_VarFree@plt>
   11560:	subs	r4, r4, #1
   11564:	add	sl, sl, #4
   11568:	bne	114b8 <Mat_VarReadNextInfo@plt+0x3b4>
   1156c:	b	11648 <Mat_VarReadNextInfo@plt+0x544>
   11570:	movw	r0, #15595	; 0x3ceb
   11574:	movt	r0, #1
   11578:	bl	11068 <Mat_Critical@plt>
   1157c:	mov	r4, #1
   11580:	b	11658 <Mat_VarReadNextInfo@plt+0x554>
   11584:	ldr	r1, [r5, r0, lsl #2]
   11588:	movw	r0, #15630	; 0x3d0e
   1158c:	movt	r0, #1
   11590:	bl	11068 <Mat_Critical@plt>
   11594:	mov	r4, #1
   11598:	b	11658 <Mat_VarReadNextInfo@plt+0x554>
   1159c:	movw	r0, #20956	; 0x51dc
   115a0:	movt	r0, #2
   115a4:	ldrb	r0, [r0]
   115a8:	cmp	r0, #0
   115ac:	beq	115fc <Mat_VarReadNextInfo@plt+0x4f8>
   115b0:	mov	r0, r8
   115b4:	bl	10ed0 <Mat_VarReadNext@plt>
   115b8:	str	r0, [sp, #16]
   115bc:	cmp	r0, #0
   115c0:	beq	11648 <Mat_VarReadNextInfo@plt+0x544>
   115c4:	mov	r5, r0
   115c8:	movw	r4, #20952	; 0x51d8
   115cc:	movt	r4, #2
   115d0:	ldr	r1, [r4]
   115d4:	mov	r0, r5
   115d8:	blx	r1
   115dc:	mov	r0, r5
   115e0:	bl	10fe4 <Mat_VarFree@plt>
   115e4:	mov	r0, r8
   115e8:	bl	10ed0 <Mat_VarReadNext@plt>
   115ec:	mov	r5, r0
   115f0:	cmp	r0, #0
   115f4:	bne	115d0 <Mat_VarReadNextInfo@plt+0x4cc>
   115f8:	b	11644 <Mat_VarReadNextInfo@plt+0x540>
   115fc:	mov	r0, r8
   11600:	bl	11104 <Mat_VarReadNextInfo@plt>
   11604:	str	r0, [sp, #16]
   11608:	cmp	r0, #0
   1160c:	beq	11648 <Mat_VarReadNextInfo@plt+0x544>
   11610:	mov	r5, r0
   11614:	movw	r4, #20952	; 0x51d8
   11618:	movt	r4, #2
   1161c:	ldr	r1, [r4]
   11620:	mov	r0, r5
   11624:	blx	r1
   11628:	mov	r0, r5
   1162c:	bl	10fe4 <Mat_VarFree@plt>
   11630:	mov	r0, r8
   11634:	bl	11104 <Mat_VarReadNextInfo@plt>
   11638:	mov	r5, r0
   1163c:	cmp	r0, #0
   11640:	bne	1161c <Mat_VarReadNextInfo@plt+0x518>
   11644:	str	r5, [sp, #16]
   11648:	mov	r0, r8
   1164c:	bl	1105c <Mat_Close@plt>
   11650:	bl	10ec4 <Mat_LogClose@plt>
   11654:	mov	r4, #0
   11658:	mov	r0, r4
   1165c:	sub	sp, fp, #28
   11660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11664:	movw	r0, #20840	; 0x5168
   11668:	movt	r0, #2
   1166c:	bl	110a4 <Mat_Help@plt>
   11670:	mov	r0, #0
   11674:	bl	10fd8 <exit@plt>
   11678:	movw	r0, #15479	; 0x3c77
   1167c:	movt	r0, #1
   11680:	movw	r1, #15304	; 0x3bc8
   11684:	movt	r1, #1
   11688:	movw	r2, #15565	; 0x3ccd
   1168c:	movt	r2, #1
   11690:	bl	10ef4 <printf@plt>
   11694:	mov	r0, #0
   11698:	bl	10fd8 <exit@plt>
   1169c:	push	{r4, r5, r6, r7, fp, lr}
   116a0:	add	fp, sp, #16
   116a4:	mov	r4, r1
   116a8:	movw	r6, #20964	; 0x51e4
   116ac:	movt	r6, #2
   116b0:	ldr	r0, [r6]
   116b4:	cmp	r0, #1
   116b8:	blt	116e0 <Mat_VarReadNextInfo@plt+0x5dc>
   116bc:	mov	r7, #0
   116c0:	movw	r5, #15982	; 0x3e6e
   116c4:	movt	r5, #1
   116c8:	mov	r0, r5
   116cc:	bl	10ef4 <printf@plt>
   116d0:	add	r7, r7, #1
   116d4:	ldr	r0, [r6]
   116d8:	cmp	r7, r0
   116dc:	blt	116c8 <Mat_VarReadNextInfo@plt+0x5c4>
   116e0:	mov	r0, r4
   116e4:	pop	{r4, r5, r6, r7, fp, lr}
   116e8:	b	10f9c <puts@plt>
   116ec:	push	{r4, r5, r6, r7, fp, lr}
   116f0:	add	fp, sp, #16
   116f4:	cmp	r0, #0
   116f8:	beq	11990 <Mat_VarReadNextInfo@plt+0x88c>
   116fc:	mov	r4, r0
   11700:	ldr	r0, [r0, #16]
   11704:	sub	r1, r0, #6
   11708:	cmp	r1, #10
   1170c:	bcs	11730 <Mat_VarReadNextInfo@plt+0x62c>
   11710:	ldr	r0, [r4, #4]
   11714:	cmp	r0, #3
   11718:	beq	11830 <Mat_VarReadNextInfo@plt+0x72c>
   1171c:	cmp	r0, #2
   11720:	bne	11990 <Mat_VarReadNextInfo@plt+0x88c>
   11724:	mov	r0, r4
   11728:	pop	{r4, r5, r6, r7, fp, lr}
   1172c:	b	123c0 <Mat_VarReadNextInfo@plt+0x12bc>
   11730:	sub	r1, r0, #4
   11734:	cmp	r1, #2
   11738:	bcc	1183c <Mat_VarReadNextInfo@plt+0x738>
   1173c:	cmp	r0, #1
   11740:	beq	11854 <Mat_VarReadNextInfo@plt+0x750>
   11744:	cmp	r0, #2
   11748:	bne	1190c <Mat_VarReadNextInfo@plt+0x808>
   1174c:	ldr	r1, [r4, #36]	; 0x24
   11750:	cmp	r1, #0
   11754:	beq	11764 <Mat_VarReadNextInfo@plt+0x660>
   11758:	movw	r0, #15690	; 0x3d4a
   1175c:	movt	r0, #1
   11760:	bl	10f48 <Mat_Message@plt>
   11764:	ldr	r1, [r4, #4]
   11768:	movw	r0, #15705	; 0x3d59
   1176c:	movt	r0, #1
   11770:	bl	10f48 <Mat_Message@plt>
   11774:	ldr	r0, [r4, #4]
   11778:	cmp	r0, #0
   1177c:	beq	11990 <Mat_VarReadNextInfo@plt+0x88c>
   11780:	movw	r0, #15720	; 0x3d68
   11784:	movt	r0, #1
   11788:	bl	10f48 <Mat_Message@plt>
   1178c:	mov	r0, r4
   11790:	bl	10eac <Mat_VarGetNumberOfFields@plt>
   11794:	mov	r5, r0
   11798:	ldr	r1, [r4, #4]
   1179c:	ldr	r0, [r4, #32]
   117a0:	ldr	r6, [r0]
   117a4:	cmp	r1, #2
   117a8:	blt	117c8 <Mat_VarReadNextInfo@plt+0x6c4>
   117ac:	ldr	r1, [r4, #4]
   117b0:	mov	r2, #1
   117b4:	ldr	r3, [r0, r2, lsl #2]
   117b8:	mul	r6, r3, r6
   117bc:	add	r2, r2, #1
   117c0:	cmp	r2, r1
   117c4:	blt	117b4 <Mat_VarReadNextInfo@plt+0x6b0>
   117c8:	cmp	r5, #1
   117cc:	blt	1191c <Mat_VarReadNextInfo@plt+0x818>
   117d0:	cmp	r6, #0
   117d4:	bne	1191c <Mat_VarReadNextInfo@plt+0x818>
   117d8:	mov	r0, r4
   117dc:	bl	10f84 <Mat_VarGetStructFieldnames@plt>
   117e0:	mov	r4, r0
   117e4:	movw	r0, #15742	; 0x3d7e
   117e8:	movt	r0, #1
   117ec:	mov	r1, r5
   117f0:	bl	10f48 <Mat_Message@plt>
   117f4:	movw	r7, #20964	; 0x51e4
   117f8:	movt	r7, #2
   117fc:	ldr	r0, [r7]
   11800:	add	r0, r0, #1
   11804:	str	r0, [r7]
   11808:	cmp	r4, #0
   1180c:	beq	11974 <Mat_VarReadNextInfo@plt+0x870>
   11810:	movw	r6, #15692	; 0x3d4c
   11814:	movt	r6, #1
   11818:	ldr	r1, [r4], #4
   1181c:	mov	r0, r6
   11820:	bl	10f48 <Mat_Message@plt>
   11824:	subs	r5, r5, #1
   11828:	bne	11818 <Mat_VarReadNextInfo@plt+0x714>
   1182c:	b	11974 <Mat_VarReadNextInfo@plt+0x870>
   11830:	mov	r0, r4
   11834:	pop	{r4, r5, r6, r7, fp, lr}
   11838:	b	12528 <Mat_VarReadNextInfo@plt+0x1424>
   1183c:	movw	r0, #20956	; 0x51dc
   11840:	movt	r0, #2
   11844:	ldrb	r1, [r0]
   11848:	mov	r0, r4
   1184c:	pop	{r4, r5, r6, r7, fp, lr}
   11850:	b	11038 <Mat_VarPrint@plt>
   11854:	ldr	r1, [r4, #36]	; 0x24
   11858:	cmp	r1, #0
   1185c:	beq	1186c <Mat_VarReadNextInfo@plt+0x768>
   11860:	movw	r0, #15690	; 0x3d4a
   11864:	movt	r0, #1
   11868:	bl	10f48 <Mat_Message@plt>
   1186c:	ldr	r1, [r4, #4]
   11870:	movw	r0, #15705	; 0x3d59
   11874:	movt	r0, #1
   11878:	bl	10f48 <Mat_Message@plt>
   1187c:	ldr	r0, [r4, #4]
   11880:	cmp	r0, #0
   11884:	popeq	{r4, r5, r6, r7, fp, pc}
   11888:	ldr	r1, [r4, #32]
   1188c:	ldr	r5, [r1]
   11890:	cmp	r0, #2
   11894:	blt	118b0 <Mat_VarReadNextInfo@plt+0x7ac>
   11898:	sub	r0, r0, #1
   1189c:	add	r1, r1, #4
   118a0:	ldr	r2, [r1], #4
   118a4:	mul	r5, r2, r5
   118a8:	subs	r0, r0, #1
   118ac:	bne	118a0 <Mat_VarReadNextInfo@plt+0x79c>
   118b0:	movw	r0, #15755	; 0x3d8b
   118b4:	movt	r0, #1
   118b8:	bl	10f48 <Mat_Message@plt>
   118bc:	movw	r0, #15753	; 0x3d89
   118c0:	movt	r0, #1
   118c4:	bl	10f48 <Mat_Message@plt>
   118c8:	movw	r6, #20964	; 0x51e4
   118cc:	movt	r6, #2
   118d0:	ldr	r0, [r6]
   118d4:	add	r0, r0, #1
   118d8:	str	r0, [r6]
   118dc:	ldr	r4, [r4, #40]	; 0x28
   118e0:	cmp	r4, #0
   118e4:	cmpne	r5, #0
   118e8:	beq	118fc <Mat_VarReadNextInfo@plt+0x7f8>
   118ec:	ldr	r0, [r4], #4
   118f0:	bl	116ec <Mat_VarReadNextInfo@plt+0x5e8>
   118f4:	subs	r5, r5, #1
   118f8:	bne	118ec <Mat_VarReadNextInfo@plt+0x7e8>
   118fc:	ldr	r0, [r6]
   11900:	sub	r0, r0, #1
   11904:	str	r0, [r6]
   11908:	b	11980 <Mat_VarReadNextInfo@plt+0x87c>
   1190c:	movw	r0, #15778	; 0x3da2
   11910:	movt	r0, #1
   11914:	pop	{r4, r5, r6, r7, fp, lr}
   11918:	b	10f48 <Mat_Message@plt>
   1191c:	cmp	r5, #1
   11920:	blt	11990 <Mat_VarReadNextInfo@plt+0x88c>
   11924:	cmp	r6, #0
   11928:	beq	11990 <Mat_VarReadNextInfo@plt+0x88c>
   1192c:	movw	r0, #15742	; 0x3d7e
   11930:	movt	r0, #1
   11934:	mov	r1, r5
   11938:	bl	10f48 <Mat_Message@plt>
   1193c:	movw	r7, #20964	; 0x51e4
   11940:	movt	r7, #2
   11944:	ldr	r0, [r7]
   11948:	add	r0, r0, #1
   1194c:	str	r0, [r7]
   11950:	ldr	r4, [r4, #40]	; 0x28
   11954:	cmp	r4, #0
   11958:	mulne	r5, r6, r5
   1195c:	cmpne	r5, #0
   11960:	beq	11974 <Mat_VarReadNextInfo@plt+0x870>
   11964:	ldr	r0, [r4], #4
   11968:	bl	116ec <Mat_VarReadNextInfo@plt+0x5e8>
   1196c:	subs	r5, r5, #1
   11970:	bne	11964 <Mat_VarReadNextInfo@plt+0x860>
   11974:	ldr	r0, [r7]
   11978:	sub	r0, r0, #1
   1197c:	str	r0, [r7]
   11980:	movw	r0, #17066	; 0x42aa
   11984:	movt	r0, #1
   11988:	pop	{r4, r5, r6, r7, fp, lr}
   1198c:	b	10f48 <Mat_Message@plt>
   11990:	pop	{r4, r5, r6, r7, fp, pc}
   11994:	nop	{0}
   11998:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1199c:	add	fp, sp, #24
   119a0:	vpush	{d8-d9}
   119a4:	sub	sp, sp, #40	; 0x28
   119a8:	mov	r4, r0
   119ac:	vmov.i32	q8, #0	; 0x00000000
   119b0:	add	r8, sp, #8
   119b4:	mov	r0, r8
   119b8:	vst1.64	{d16-d17}, [r0]!
   119bc:	vst1.64	{d16-d17}, [r0]
   119c0:	movw	r5, #20968	; 0x51e8
   119c4:	movt	r5, #2
   119c8:	ldrb	r0, [r5]
   119cc:	cmp	r0, #0
   119d0:	bne	11a0c <Mat_VarReadNextInfo@plt+0x908>
   119d4:	movw	r0, #15938	; 0x3e42
   119d8:	movt	r0, #1
   119dc:	str	r0, [sp]
   119e0:	movw	r0, #15882	; 0x3e0a
   119e4:	movt	r0, #1
   119e8:	movw	r1, #15922	; 0x3e32
   119ec:	movt	r1, #1
   119f0:	movw	r2, #15927	; 0x3e37
   119f4:	movt	r2, #1
   119f8:	movw	r3, #15932	; 0x3e3c
   119fc:	movt	r3, #1
   11a00:	bl	10ef4 <printf@plt>
   11a04:	mov	r0, #1
   11a08:	strb	r0, [r5]
   11a0c:	ldr	r1, [r4, #36]	; 0x24
   11a10:	movw	r0, #15944	; 0x3e48
   11a14:	movt	r0, #1
   11a18:	bl	10ef4 <printf@plt>
   11a1c:	ldr	r0, [r4, #4]
   11a20:	cmp	r0, #1
   11a24:	blt	11ac4 <Mat_VarReadNextInfo@plt+0x9c0>
   11a28:	ldr	r0, [r4, #32]
   11a2c:	ldr	r1, [r0]
   11a30:	movw	r0, #15950	; 0x3e4e
   11a34:	movt	r0, #1
   11a38:	bl	10ef4 <printf@plt>
   11a3c:	ldr	r0, [r4, #4]
   11a40:	cmp	r0, #2
   11a44:	blt	11ab0 <Mat_VarReadNextInfo@plt+0x9ac>
   11a48:	mov	r7, #1
   11a4c:	mov	r6, #0
   11a50:	vldr	d8, [pc, #352]	; 11bb8 <Mat_VarReadNextInfo@plt+0xab4>
   11a54:	vmov.f64	d9, #112	; 0x3f800000  1.0
   11a58:	movw	r5, #15955	; 0x3e53
   11a5c:	movt	r5, #1
   11a60:	ldr	r0, [r4, #32]
   11a64:	add	r0, r0, r7, lsl #2
   11a68:	vldr	s0, [r0]
   11a6c:	vcvt.f64.u32	d0, s0
   11a70:	bl	10fb4 <log10@plt>
   11a74:	vrintp.f64	d16, d0
   11a78:	vadd.f64	d16, d16, d9
   11a7c:	vcmpe.f64	d16, d8
   11a80:	vmrs	APSR_nzcv, fpscr
   11a84:	bpl	11aa0 <Mat_VarReadNextInfo@plt+0x99c>
   11a88:	ldr	r0, [r4, #32]
   11a8c:	ldr	r2, [r0, r7, lsl #2]
   11a90:	add	r0, r8, r6
   11a94:	mov	r1, r5
   11a98:	bl	11098 <sprintf@plt>
   11a9c:	add	r6, r0, r6
   11aa0:	ldr	r0, [r4, #4]
   11aa4:	add	r7, r7, #1
   11aa8:	cmp	r7, r0
   11aac:	blt	11a60 <Mat_VarReadNextInfo@plt+0x95c>
   11ab0:	movw	r0, #15960	; 0x3e58
   11ab4:	movt	r0, #1
   11ab8:	add	r1, sp, #8
   11abc:	bl	10ef4 <printf@plt>
   11ac0:	b	11ad0 <Mat_VarReadNextInfo@plt+0x9cc>
   11ac4:	movw	r0, #15966	; 0x3e5e
   11ac8:	movt	r0, #1
   11acc:	bl	10ef4 <printf@plt>
   11ad0:	mov	r0, r4
   11ad4:	bl	110d4 <Mat_VarGetSize@plt>
   11ad8:	mov	r1, r0
   11adc:	movw	r0, #20960	; 0x51e0
   11ae0:	movt	r0, #2
   11ae4:	ldrb	r0, [r0]
   11ae8:	cmp	r0, #1
   11aec:	bne	11b1c <Mat_VarReadNextInfo@plt+0xa18>
   11af0:	cmp	r1, #1073741825	; 0x40000001
   11af4:	bcc	11b50 <Mat_VarReadNextInfo@plt+0xa4c>
   11af8:	vldr	d16, [pc, #208]	; 11bd0 <Mat_VarReadNextInfo@plt+0xacc>
   11afc:	vmov	s0, r1
   11b00:	vcvt.f64.u32	d17, s0
   11b04:	vmul.f64	d16, d17, d16
   11b08:	vmov	r2, r3, d16
   11b0c:	movw	r0, #15987	; 0x3e73
   11b10:	movt	r0, #1
   11b14:	bl	10ef4 <printf@plt>
   11b18:	b	11b28 <Mat_VarReadNextInfo@plt+0xa24>
   11b1c:	movw	r0, #16022	; 0x3e96
   11b20:	movt	r0, #1
   11b24:	bl	10ef4 <printf@plt>
   11b28:	ldr	r0, [r4, #16]
   11b2c:	movw	r1, #17288	; 0x4388
   11b30:	movt	r1, #1
   11b34:	ldr	r1, [r1, r0, lsl #2]
   11b38:	movw	r0, #16030	; 0x3e9e
   11b3c:	movt	r0, #1
   11b40:	bl	10ef4 <printf@plt>
   11b44:	sub	sp, fp, #40	; 0x28
   11b48:	vpop	{d8-d9}
   11b4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11b50:	cmp	r1, #1048576	; 0x100000
   11b54:	bls	11b7c <Mat_VarReadNextInfo@plt+0xa78>
   11b58:	vldr	d16, [pc, #104]	; 11bc8 <Mat_VarReadNextInfo@plt+0xac4>
   11b5c:	vmov	s0, r1
   11b60:	vcvt.f64.u32	d17, s0
   11b64:	vmul.f64	d16, d17, d16
   11b68:	vmov	r2, r3, d16
   11b6c:	movw	r0, #15996	; 0x3e7c
   11b70:	movt	r0, #1
   11b74:	bl	10ef4 <printf@plt>
   11b78:	b	11b28 <Mat_VarReadNextInfo@plt+0xa24>
   11b7c:	cmp	r1, #1024	; 0x400
   11b80:	bls	11ba8 <Mat_VarReadNextInfo@plt+0xaa4>
   11b84:	vldr	d16, [pc, #52]	; 11bc0 <Mat_VarReadNextInfo@plt+0xabc>
   11b88:	vmov	s0, r1
   11b8c:	vcvt.f64.u32	d17, s0
   11b90:	vmul.f64	d16, d17, d16
   11b94:	vmov	r2, r3, d16
   11b98:	movw	r0, #16005	; 0x3e85
   11b9c:	movt	r0, #1
   11ba0:	bl	10ef4 <printf@plt>
   11ba4:	b	11b28 <Mat_VarReadNextInfo@plt+0xa24>
   11ba8:	movw	r0, #16014	; 0x3e8e
   11bac:	movt	r0, #1
   11bb0:	b	11b24 <Mat_VarReadNextInfo@plt+0xa20>
   11bb4:	nop	{0}
   11bb8:	andeq	r0, r0, r0
   11bbc:	submi	r0, r0, r0
   11bc0:	andeq	r0, r0, r0
   11bc4:	svccc	0x00500000
   11bc8:	andeq	r0, r0, r0
   11bcc:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   11bd0:	andeq	r0, r0, r0
   11bd4:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   11bd8:	push	{r4, r5, r6, r7, fp, lr}
   11bdc:	add	fp, sp, #16
   11be0:	mov	r4, r0
   11be4:	mov	r5, #0
   11be8:	mov	r0, #40	; 0x28
   11bec:	mvn	r6, #0
   11bf0:	movw	r7, #16838	; 0x41c6
   11bf4:	movt	r7, #1
   11bf8:	uxtb	r1, r0
   11bfc:	mov	r0, r4
   11c00:	bl	11008 <strchr@plt>
   11c04:	cmp	r0, #0
   11c08:	beq	11c24 <Mat_VarReadNextInfo@plt+0xb20>
   11c0c:	cmp	r5, #0
   11c10:	beq	11c20 <Mat_VarReadNextInfo@plt+0xb1c>
   11c14:	cmp	r0, r5
   11c18:	movcc	r5, r0
   11c1c:	b	11c24 <Mat_VarReadNextInfo@plt+0xb20>
   11c20:	mov	r5, r0
   11c24:	ldrb	r0, [r7, -r6]
   11c28:	sub	r6, r6, #1
   11c2c:	cmn	r6, #6
   11c30:	bne	11bf8 <Mat_VarReadNextInfo@plt+0xaf4>
   11c34:	cmp	r5, #0
   11c38:	movne	r4, r5
   11c3c:	mov	r0, r4
   11c40:	pop	{r4, r5, r6, r7, fp, pc}
   11c44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c48:	add	fp, sp, #28
   11c4c:	sub	sp, sp, #44	; 0x2c
   11c50:	str	r0, [sp, #16]
   11c54:	str	r1, [sp, #20]
   11c58:	ldr	r0, [r1]
   11c5c:	str	r0, [fp, #-32]	; 0xffffffe0
   11c60:	mov	r0, r2
   11c64:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   11c68:	mov	sl, r0
   11c6c:	ldrb	r6, [r0]
   11c70:	mov	r8, #1
   11c74:	uxtb	r0, r6
   11c78:	cmp	r0, #46	; 0x2e
   11c7c:	beq	11ca0 <Mat_VarReadNextInfo@plt+0xb9c>
   11c80:	cmp	r0, #123	; 0x7b
   11c84:	beq	11ce0 <Mat_VarReadNextInfo@plt+0xbdc>
   11c88:	cmp	r0, #40	; 0x28
   11c8c:	beq	120e0 <Mat_VarReadNextInfo@plt+0xfdc>
   11c90:	mov	r4, #0
   11c94:	cmp	r4, #0
   11c98:	beq	11c74 <Mat_VarReadNextInfo@plt+0xb70>
   11c9c:	b	12364 <Mat_VarReadNextInfo@plt+0x1260>
   11ca0:	add	r9, sl, #1
   11ca4:	ldr	r7, [fp, #-32]	; 0xffffffe0
   11ca8:	ldr	r0, [r7, #16]
   11cac:	cmp	r0, #1
   11cb0:	beq	11d30 <Mat_VarReadNextInfo@plt+0xc2c>
   11cb4:	cmp	r0, #2
   11cb8:	bne	12200 <Mat_VarReadNextInfo@plt+0x10fc>
   11cbc:	mov	r0, r9
   11cc0:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   11cc4:	cmp	r0, r9
   11cc8:	beq	11eb8 <Mat_VarReadNextInfo@plt+0xdb4>
   11ccc:	ldrb	r6, [r0]
   11cd0:	mov	r5, #0
   11cd4:	mov	sl, r0
   11cd8:	strb	r5, [r0]
   11cdc:	b	11ec4 <Mat_VarReadNextInfo@plt+0xdc0>
   11ce0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ce4:	ldr	r0, [r0, #16]
   11ce8:	cmp	r0, #1
   11cec:	bne	12220 <Mat_VarReadNextInfo@plt+0x111c>
   11cf0:	add	r0, sl, #1
   11cf4:	mov	r1, #125	; 0x7d
   11cf8:	bl	11008 <strchr@plt>
   11cfc:	mov	r4, r0
   11d00:	add	r0, r0, #1
   11d04:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   11d08:	ldrb	r1, [r0]
   11d0c:	cmp	r1, #0
   11d10:	str	r0, [sp, #32]
   11d14:	beq	11d64 <Mat_VarReadNextInfo@plt+0xc60>
   11d18:	str	r1, [sp, #24]
   11d1c:	mov	r2, #0
   11d20:	mov	r1, #0
   11d24:	str	r1, [sp, #28]
   11d28:	strb	r2, [r0]
   11d2c:	b	11d74 <Mat_VarReadNextInfo@plt+0xc70>
   11d30:	ldr	r0, [r7]
   11d34:	ldr	r1, [r7, #12]
   11d38:	ldr	r2, [r7, #40]	; 0x28
   11d3c:	str	r2, [sp, #36]	; 0x24
   11d40:	udiv	sl, r0, r1
   11d44:	mov	r0, r9
   11d48:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   11d4c:	cmp	r0, r9
   11d50:	beq	11f0c <Mat_VarReadNextInfo@plt+0xe08>
   11d54:	ldrb	r6, [r0]
   11d58:	mov	r1, #0
   11d5c:	strb	r1, [r0]
   11d60:	b	11f14 <Mat_VarReadNextInfo@plt+0xe10>
   11d64:	mov	r0, #123	; 0x7b
   11d68:	str	r0, [sp, #24]
   11d6c:	mov	r0, #1
   11d70:	str	r0, [sp, #28]
   11d74:	mov	r0, sl
   11d78:	mov	r1, r4
   11d7c:	bl	128fc <Mat_VarReadNextInfo@plt+0x17f8>
   11d80:	mov	r5, r0
   11d84:	lsl	r6, r0, #2
   11d88:	mov	r0, r6
   11d8c:	bl	10fa8 <malloc@plt>
   11d90:	mov	r7, r0
   11d94:	mov	r0, r6
   11d98:	bl	10fa8 <malloc@plt>
   11d9c:	str	r0, [sp, #36]	; 0x24
   11da0:	mov	r0, r6
   11da4:	bl	10fa8 <malloc@plt>
   11da8:	mov	r9, r0
   11dac:	cmp	r5, #1
   11db0:	blt	11de0 <Mat_VarReadNextInfo@plt+0xcdc>
   11db4:	mov	r0, r7
   11db8:	mov	r1, #0
   11dbc:	mov	r2, r6
   11dc0:	bl	11044 <memset@plt>
   11dc4:	mov	r0, r5
   11dc8:	mov	r1, r9
   11dcc:	ldr	r2, [sp, #36]	; 0x24
   11dd0:	str	r8, [r2], #4
   11dd4:	str	r8, [r1], #4
   11dd8:	subs	r0, r0, #1
   11ddc:	bne	11dd0 <Mat_VarReadNextInfo@plt+0xccc>
   11de0:	str	r9, [sp]
   11de4:	mov	r0, sl
   11de8:	mov	r1, r4
   11dec:	mov	sl, r7
   11df0:	mov	r2, r7
   11df4:	ldr	r4, [sp, #36]	; 0x24
   11df8:	mov	r3, r4
   11dfc:	bl	12924 <Mat_VarReadNextInfo@plt+0x1820>
   11e00:	ldr	r7, [fp, #-32]	; 0xffffffe0
   11e04:	str	r7, [sp]
   11e08:	mov	r0, r5
   11e0c:	mov	r1, sl
   11e10:	mov	r2, r4
   11e14:	mov	r3, r9
   11e18:	bl	12b5c <Mat_VarReadNextInfo@plt+0x1a58>
   11e1c:	cmp	r0, #0
   11e20:	beq	1209c <Mat_VarReadNextInfo@plt+0xf98>
   11e24:	mov	r6, r0
   11e28:	cmp	r5, #1
   11e2c:	bne	11e7c <Mat_VarReadNextInfo@plt+0xd78>
   11e30:	ldr	r3, [r9]
   11e34:	ldr	r0, [sp, #36]	; 0x24
   11e38:	ldr	r2, [r0]
   11e3c:	ldr	r1, [sl]
   11e40:	mov	r0, r7
   11e44:	bl	1108c <Mat_VarGetCellsLinear@plt>
   11e48:	mov	r4, r0
   11e4c:	ldr	r0, [r7, #4]
   11e50:	cmp	r0, #2
   11e54:	bne	11fc0 <Mat_VarReadNextInfo@plt+0xebc>
   11e58:	ldr	r0, [r7, #32]
   11e5c:	ldr	r1, [r0]
   11e60:	cmp	r1, #1
   11e64:	bne	11fb0 <Mat_VarReadNextInfo@plt+0xeac>
   11e68:	ldr	r1, [r9]
   11e6c:	str	r1, [r0, #4]
   11e70:	cmp	r4, #0
   11e74:	bne	11fd8 <Mat_VarReadNextInfo@plt+0xed4>
   11e78:	b	120b8 <Mat_VarReadNextInfo@plt+0xfb4>
   11e7c:	mov	r0, r7
   11e80:	mov	r1, sl
   11e84:	ldr	r2, [sp, #36]	; 0x24
   11e88:	mov	r3, r9
   11e8c:	bl	10f00 <Mat_VarGetCells@plt>
   11e90:	mov	r4, r0
   11e94:	cmp	r5, #1
   11e98:	blt	11fd0 <Mat_VarReadNextInfo@plt+0xecc>
   11e9c:	ldr	r0, [r7, #32]
   11ea0:	mov	r1, r9
   11ea4:	ldr	r2, [r1], #4
   11ea8:	str	r2, [r0], #4
   11eac:	subs	r5, r5, #1
   11eb0:	bne	11ea4 <Mat_VarReadNextInfo@plt+0xda0>
   11eb4:	b	11fd0 <Mat_VarReadNextInfo@plt+0xecc>
   11eb8:	mov	sl, r0
   11ebc:	mov	r6, #46	; 0x2e
   11ec0:	mov	r5, #1
   11ec4:	mov	r0, r7
   11ec8:	mov	r1, r9
   11ecc:	mov	r2, #0
   11ed0:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   11ed4:	cmp	r0, #0
   11ed8:	beq	12244 <Mat_VarReadNextInfo@plt+0x1140>
   11edc:	mov	r1, #1
   11ee0:	bl	110f8 <Mat_VarDuplicate@plt>
   11ee4:	mov	r4, r0
   11ee8:	mov	r0, r7
   11eec:	bl	10fe4 <Mat_VarFree@plt>
   11ef0:	cmp	r5, #0
   11ef4:	bne	12304 <Mat_VarReadNextInfo@plt+0x1200>
   11ef8:	str	r4, [fp, #-32]	; 0xffffffe0
   11efc:	mov	r4, #0
   11f00:	cmp	r4, #0
   11f04:	beq	11c74 <Mat_VarReadNextInfo@plt+0xb70>
   11f08:	b	12364 <Mat_VarReadNextInfo@plt+0x1260>
   11f0c:	mov	r6, #46	; 0x2e
   11f10:	mov	r1, #1
   11f14:	cmp	sl, #1
   11f18:	str	r0, [sp, #32]
   11f1c:	str	r1, [sp, #28]
   11f20:	mov	r4, #0
   11f24:	blt	12088 <Mat_VarReadNextInfo@plt+0xf84>
   11f28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f2c:	mov	r1, r4
   11f30:	bl	10f0c <Mat_VarGetCell@plt>
   11f34:	cmp	r0, #0
   11f38:	beq	11f90 <Mat_VarReadNextInfo@plt+0xe8c>
   11f3c:	mov	r5, r0
   11f40:	ldr	r0, [r0, #16]
   11f44:	cmp	r0, #2
   11f48:	bne	11f90 <Mat_VarReadNextInfo@plt+0xe8c>
   11f4c:	mov	r0, r5
   11f50:	mov	r1, r9
   11f54:	mov	r2, #0
   11f58:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   11f5c:	cmp	r0, #0
   11f60:	beq	12064 <Mat_VarReadNextInfo@plt+0xf60>
   11f64:	mov	r1, #1
   11f68:	bl	110f8 <Mat_VarDuplicate@plt>
   11f6c:	mov	r7, r0
   11f70:	mov	r0, r5
   11f74:	bl	10fe4 <Mat_VarFree@plt>
   11f78:	ldr	r0, [sp, #36]	; 0x24
   11f7c:	str	r7, [r0, r4, lsl #2]
   11f80:	add	r4, r4, #1
   11f84:	cmp	r4, sl
   11f88:	blt	11f28 <Mat_VarReadNextInfo@plt+0xe24>
   11f8c:	b	12088 <Mat_VarReadNextInfo@plt+0xf84>
   11f90:	movw	r0, #20944	; 0x51d0
   11f94:	movt	r0, #2
   11f98:	ldr	r0, [r0]
   11f9c:	movw	r1, #16978	; 0x4252
   11fa0:	movt	r1, #1
   11fa4:	mov	r2, r4
   11fa8:	bl	11020 <fprintf@plt>
   11fac:	b	12088 <Mat_VarReadNextInfo@plt+0xf84>
   11fb0:	ldr	r0, [r7, #32]
   11fb4:	ldr	r1, [r0, #4]
   11fb8:	cmp	r1, #1
   11fbc:	beq	11fc8 <Mat_VarReadNextInfo@plt+0xec4>
   11fc0:	str	r8, [r7, #4]
   11fc4:	ldr	r0, [r7, #32]
   11fc8:	ldr	r1, [r9]
   11fcc:	str	r1, [r0]
   11fd0:	cmp	r4, #0
   11fd4:	beq	120b8 <Mat_VarReadNextInfo@plt+0xfb4>
   11fd8:	cmp	r6, #1
   11fdc:	mov	r5, r4
   11fe0:	blt	11ffc <Mat_VarReadNextInfo@plt+0xef8>
   11fe4:	ldr	r0, [r5]
   11fe8:	mov	r1, #1
   11fec:	bl	110f8 <Mat_VarDuplicate@plt>
   11ff0:	str	r0, [r5], #4
   11ff4:	subs	r6, r6, #1
   11ff8:	bne	11fe4 <Mat_VarReadNextInfo@plt+0xee0>
   11ffc:	ldr	r3, [r7, #4]
   12000:	ldr	r1, [r7, #32]
   12004:	ldr	r0, [r7, #36]	; 0x24
   12008:	mov	r5, #1
   1200c:	stm	sp, {r1, r4, r5}
   12010:	mov	r1, #1
   12014:	mov	r2, #21
   12018:	bl	10f18 <Mat_VarCreate@plt>
   1201c:	mov	r4, r0
   12020:	mov	r0, r7
   12024:	bl	10fe4 <Mat_VarFree@plt>
   12028:	str	r4, [fp, #-32]	; 0xffffffe0
   1202c:	ldr	r4, [sp, #28]
   12030:	mov	r0, sl
   12034:	bl	10f24 <free@plt>
   12038:	ldr	r0, [sp, #36]	; 0x24
   1203c:	bl	10f24 <free@plt>
   12040:	mov	r0, r9
   12044:	bl	10f24 <free@plt>
   12048:	cmp	r5, #0
   1204c:	ldr	r6, [sp, #24]
   12050:	ldr	sl, [sp, #32]
   12054:	beq	12364 <Mat_VarReadNextInfo@plt+0x1260>
   12058:	cmp	r4, #0
   1205c:	beq	11c74 <Mat_VarReadNextInfo@plt+0xb70>
   12060:	b	12364 <Mat_VarReadNextInfo@plt+0x1260>
   12064:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12068:	ldr	r3, [r0, #36]	; 0x24
   1206c:	movw	r0, #20944	; 0x51d0
   12070:	movt	r0, #2
   12074:	ldr	r0, [r0]
   12078:	movw	r1, #16939	; 0x422b
   1207c:	movt	r1, #1
   12080:	mov	r2, r9
   12084:	bl	11020 <fprintf@plt>
   12088:	cmp	r4, sl
   1208c:	ldr	sl, [sp, #32]
   12090:	ldr	r4, [sp, #28]
   12094:	beq	12058 <Mat_VarReadNextInfo@plt+0xf54>
   12098:	b	12364 <Mat_VarReadNextInfo@plt+0x1260>
   1209c:	movw	r0, #20944	; 0x51d0
   120a0:	movt	r0, #2
   120a4:	ldr	r3, [r0]
   120a8:	movw	r0, #17100	; 0x42cc
   120ac:	movt	r0, #1
   120b0:	mov	r1, #24
   120b4:	b	120d0 <Mat_VarReadNextInfo@plt+0xfcc>
   120b8:	movw	r0, #20944	; 0x51d0
   120bc:	movt	r0, #2
   120c0:	ldr	r3, [r0]
   120c4:	movw	r0, #17068	; 0x42ac
   120c8:	movt	r0, #1
   120cc:	mov	r1, #31
   120d0:	mov	r2, #1
   120d4:	bl	10f78 <fwrite@plt>
   120d8:	mov	r5, #0
   120dc:	b	1202c <Mat_VarReadNextInfo@plt+0xf28>
   120e0:	add	r0, sl, #1
   120e4:	mov	r1, #41	; 0x29
   120e8:	bl	11008 <strchr@plt>
   120ec:	mov	r5, r0
   120f0:	add	r4, r0, #1
   120f4:	mov	r0, r4
   120f8:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   120fc:	cmp	r0, r4
   12100:	bne	12378 <Mat_VarReadNextInfo@plt+0x1274>
   12104:	mov	r0, sl
   12108:	mov	r1, r5
   1210c:	bl	128fc <Mat_VarReadNextInfo@plt+0x17f8>
   12110:	mov	r7, r0
   12114:	lsl	r6, r0, #2
   12118:	mov	r0, r6
   1211c:	bl	10fa8 <malloc@plt>
   12120:	mov	r8, r0
   12124:	mov	r0, r6
   12128:	bl	10fa8 <malloc@plt>
   1212c:	mov	r9, r0
   12130:	mov	r0, r6
   12134:	bl	10fa8 <malloc@plt>
   12138:	mov	r4, r0
   1213c:	cmp	r7, #1
   12140:	blt	12174 <Mat_VarReadNextInfo@plt+0x1070>
   12144:	mov	r0, r8
   12148:	mov	r1, #0
   1214c:	mov	r2, r6
   12150:	bl	11044 <memset@plt>
   12154:	mov	r0, #1
   12158:	mov	r1, r7
   1215c:	mov	r2, r4
   12160:	mov	r3, r9
   12164:	str	r0, [r3], #4
   12168:	str	r0, [r2], #4
   1216c:	subs	r1, r1, #1
   12170:	bne	12164 <Mat_VarReadNextInfo@plt+0x1060>
   12174:	str	r4, [sp]
   12178:	mov	r0, sl
   1217c:	mov	r1, r5
   12180:	mov	r2, r8
   12184:	mov	r3, r9
   12188:	bl	12924 <Mat_VarReadNextInfo@plt+0x1820>
   1218c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   12190:	str	r6, [sp]
   12194:	mov	r0, r7
   12198:	mov	r1, r8
   1219c:	mov	r2, r9
   121a0:	mov	r3, r4
   121a4:	bl	12b5c <Mat_VarReadNextInfo@plt+0x1a58>
   121a8:	cmp	r0, #0
   121ac:	beq	1234c <Mat_VarReadNextInfo@plt+0x1248>
   121b0:	mov	r5, r0
   121b4:	ldr	r0, [r6, #16]
   121b8:	bl	110c8 <Mat_SizeOfClass@plt>
   121bc:	str	r0, [r6, #12]
   121c0:	mul	r0, r0, r5
   121c4:	str	r0, [r6]
   121c8:	ldr	r1, [r6, #20]
   121cc:	cmp	r1, #0
   121d0:	beq	12268 <Mat_VarReadNextInfo@plt+0x1164>
   121d4:	mov	r0, #8
   121d8:	bl	10fa8 <malloc@plt>
   121dc:	mov	r5, r0
   121e0:	str	r0, [r6, #40]	; 0x28
   121e4:	ldr	r0, [r6]
   121e8:	bl	10fa8 <malloc@plt>
   121ec:	str	r0, [r5]
   121f0:	ldr	r0, [r6]
   121f4:	bl	10fa8 <malloc@plt>
   121f8:	str	r0, [r5, #4]
   121fc:	b	12270 <Mat_VarReadNextInfo@plt+0x116c>
   12200:	movw	r0, #20944	; 0x51d0
   12204:	movt	r0, #2
   12208:	ldr	r0, [r0]
   1220c:	movw	r1, #17011	; 0x4273
   12210:	movt	r1, #1
   12214:	mov	r2, r9
   12218:	bl	11020 <fprintf@plt>
   1221c:	b	12364 <Mat_VarReadNextInfo@plt+0x1260>
   12220:	movw	r0, #20944	; 0x51d0
   12224:	movt	r0, #2
   12228:	ldr	r3, [r0]
   1222c:	movw	r0, #17033	; 0x4289
   12230:	movt	r0, #1
   12234:	mov	r1, #34	; 0x22
   12238:	mov	r2, #1
   1223c:	bl	10f78 <fwrite@plt>
   12240:	b	12364 <Mat_VarReadNextInfo@plt+0x1260>
   12244:	ldr	r3, [r7, #36]	; 0x24
   12248:	movw	r0, #20944	; 0x51d0
   1224c:	movt	r0, #2
   12250:	ldr	r0, [r0]
   12254:	movw	r1, #16939	; 0x422b
   12258:	movt	r1, #1
   1225c:	mov	r2, r9
   12260:	bl	11020 <fprintf@plt>
   12264:	b	12364 <Mat_VarReadNextInfo@plt+0x1260>
   12268:	bl	10fa8 <malloc@plt>
   1226c:	str	r0, [r6, #40]	; 0x28
   12270:	ldr	r2, [r6, #40]	; 0x28
   12274:	cmp	r2, #0
   12278:	beq	1239c <Mat_VarReadNextInfo@plt+0x1298>
   1227c:	cmp	r7, #1
   12280:	bne	122c8 <Mat_VarReadNextInfo@plt+0x11c4>
   12284:	ldr	r3, [r8]
   12288:	ldr	r0, [r9]
   1228c:	ldr	r1, [r4]
   12290:	stm	sp, {r0, r1}
   12294:	ldr	r0, [sp, #16]
   12298:	mov	r1, r6
   1229c:	bl	10f3c <Mat_VarReadDataLinear@plt>
   122a0:	ldr	r0, [r6, #4]
   122a4:	cmp	r0, #2
   122a8:	bne	12334 <Mat_VarReadNextInfo@plt+0x1230>
   122ac:	ldr	r0, [r6, #32]
   122b0:	ldr	r1, [r0]
   122b4:	cmp	r1, #1
   122b8:	bne	12318 <Mat_VarReadNextInfo@plt+0x1214>
   122bc:	ldr	r1, [r4]
   122c0:	str	r1, [r0, #4]
   122c4:	b	1234c <Mat_VarReadNextInfo@plt+0x1248>
   122c8:	str	r9, [sp]
   122cc:	str	r4, [sp, #4]
   122d0:	ldr	r0, [sp, #16]
   122d4:	mov	r1, r6
   122d8:	mov	r3, r8
   122dc:	bl	10f54 <Mat_VarReadData@plt>
   122e0:	cmp	r7, #1
   122e4:	blt	1234c <Mat_VarReadNextInfo@plt+0x1248>
   122e8:	ldr	r0, [r6, #32]
   122ec:	mov	r1, r4
   122f0:	ldr	r2, [r1], #4
   122f4:	str	r2, [r0], #4
   122f8:	subs	r7, r7, #1
   122fc:	bne	122f0 <Mat_VarReadNextInfo@plt+0x11ec>
   12300:	b	1234c <Mat_VarReadNextInfo@plt+0x1248>
   12304:	ldr	r0, [sp, #16]
   12308:	mov	r1, r4
   1230c:	bl	10f60 <Mat_VarReadDataAll@plt>
   12310:	str	r4, [fp, #-32]	; 0xffffffe0
   12314:	b	12364 <Mat_VarReadNextInfo@plt+0x1260>
   12318:	ldr	r0, [r6, #32]
   1231c:	ldr	r1, [r0, #4]
   12320:	cmp	r1, #1
   12324:	bne	12334 <Mat_VarReadNextInfo@plt+0x1230>
   12328:	ldr	r1, [r4]
   1232c:	str	r1, [r0]
   12330:	b	1234c <Mat_VarReadNextInfo@plt+0x1248>
   12334:	mov	r0, #2
   12338:	str	r0, [r6, #4]
   1233c:	ldr	r0, [r4]
   12340:	ldr	r1, [r6, #32]
   12344:	mov	r2, #1
   12348:	stm	r1, {r0, r2}
   1234c:	mov	r0, r8
   12350:	bl	10f24 <free@plt>
   12354:	mov	r0, r9
   12358:	bl	10f24 <free@plt>
   1235c:	mov	r0, r4
   12360:	bl	10f24 <free@plt>
   12364:	ldr	r0, [sp, #20]
   12368:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1236c:	str	r1, [r0]
   12370:	sub	sp, fp, #28
   12374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12378:	mov	r1, #0
   1237c:	strb	r1, [r0]
   12380:	movw	r0, #20944	; 0x51d0
   12384:	movt	r0, #2
   12388:	ldr	r3, [r0]
   1238c:	movw	r0, #16844	; 0x41cc
   12390:	movt	r0, #1
   12394:	mov	r1, #56	; 0x38
   12398:	b	12238 <Mat_VarReadNextInfo@plt+0x1134>
   1239c:	movw	r0, #20944	; 0x51d0
   123a0:	movt	r0, #2
   123a4:	ldr	r3, [r0]
   123a8:	movw	r0, #16901	; 0x4205
   123ac:	movt	r0, #1
   123b0:	mov	r1, #37	; 0x25
   123b4:	mov	r2, #1
   123b8:	bl	10f78 <fwrite@plt>
   123bc:	b	1234c <Mat_VarReadNextInfo@plt+0x1248>
   123c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123c4:	add	fp, sp, #28
   123c8:	sub	sp, sp, #12
   123cc:	mov	sl, r0
   123d0:	ldr	r0, [r0, #40]	; 0x28
   123d4:	cmp	r0, #0
   123d8:	beq	12520 <Mat_VarReadNextInfo@plt+0x141c>
   123dc:	ldr	r0, [sl, #8]
   123e0:	bl	10ff0 <Mat_SizeOf@plt>
   123e4:	str	r0, [sp, #4]
   123e8:	ldr	r0, [sl, #20]
   123ec:	cmp	r0, #0
   123f0:	beq	124a4 <Mat_VarReadNextInfo@plt+0x13a0>
   123f4:	ldr	r0, [sl, #32]
   123f8:	ldr	r0, [r0]
   123fc:	cmp	r0, #0
   12400:	beq	12520 <Mat_VarReadNextInfo@plt+0x141c>
   12404:	ldr	r0, [sl, #40]	; 0x28
   12408:	ldr	r1, [r0]
   1240c:	str	r1, [sp, #8]
   12410:	ldr	r6, [r0, #4]
   12414:	mov	r5, #0
   12418:	movw	r7, #15788	; 0x3dac
   1241c:	movt	r7, #1
   12420:	ldr	r4, [sp, #4]
   12424:	ldr	r0, [sl, #32]
   12428:	ldr	r1, [r0, #4]
   1242c:	cmp	r1, #0
   12430:	beq	12484 <Mat_VarReadNextInfo@plt+0x1380>
   12434:	mov	r8, #0
   12438:	ldr	r0, [r0]
   1243c:	mla	r9, r0, r8, r5
   12440:	ldr	r0, [sp, #8]
   12444:	mla	r1, r9, r4, r0
   12448:	ldr	r0, [sl, #8]
   1244c:	bl	12810 <Mat_VarReadNextInfo@plt+0x170c>
   12450:	movw	r0, #15784	; 0x3da8
   12454:	movt	r0, #1
   12458:	bl	10ef4 <printf@plt>
   1245c:	mla	r1, r9, r4, r6
   12460:	ldr	r0, [sl, #8]
   12464:	bl	12810 <Mat_VarReadNextInfo@plt+0x170c>
   12468:	mov	r0, r7
   1246c:	bl	10ef4 <printf@plt>
   12470:	add	r8, r8, #1
   12474:	ldr	r0, [sl, #32]
   12478:	ldr	r1, [r0, #4]
   1247c:	cmp	r8, r1
   12480:	bcc	12438 <Mat_VarReadNextInfo@plt+0x1334>
   12484:	mov	r0, #10
   12488:	bl	11050 <putchar@plt>
   1248c:	add	r5, r5, #1
   12490:	ldr	r0, [sl, #32]
   12494:	ldr	r0, [r0]
   12498:	cmp	r5, r0
   1249c:	bcc	12424 <Mat_VarReadNextInfo@plt+0x1320>
   124a0:	b	12520 <Mat_VarReadNextInfo@plt+0x141c>
   124a4:	ldr	r0, [sl, #32]
   124a8:	ldr	r0, [r0]
   124ac:	cmp	r0, #0
   124b0:	beq	12520 <Mat_VarReadNextInfo@plt+0x141c>
   124b4:	ldr	r8, [sl, #40]	; 0x28
   124b8:	mov	r7, #0
   124bc:	ldr	r5, [sp, #4]
   124c0:	ldr	r0, [sl, #32]
   124c4:	ldr	r1, [r0, #4]
   124c8:	cmp	r1, #0
   124cc:	beq	12504 <Mat_VarReadNextInfo@plt+0x1400>
   124d0:	mov	r6, #0
   124d4:	ldr	r0, [r0]
   124d8:	mla	r0, r0, r6, r7
   124dc:	mla	r1, r0, r5, r8
   124e0:	ldr	r0, [sl, #8]
   124e4:	bl	12810 <Mat_VarReadNextInfo@plt+0x170c>
   124e8:	mov	r0, #32
   124ec:	bl	11050 <putchar@plt>
   124f0:	add	r6, r6, #1
   124f4:	ldr	r0, [sl, #32]
   124f8:	ldr	r1, [r0, #4]
   124fc:	cmp	r6, r1
   12500:	bcc	124d4 <Mat_VarReadNextInfo@plt+0x13d0>
   12504:	mov	r0, #10
   12508:	bl	11050 <putchar@plt>
   1250c:	add	r7, r7, #1
   12510:	ldr	r0, [sl, #32]
   12514:	ldr	r0, [r0]
   12518:	cmp	r7, r0
   1251c:	bcc	124c0 <Mat_VarReadNextInfo@plt+0x13bc>
   12520:	sub	sp, fp, #28
   12524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1252c:	add	fp, sp, #28
   12530:	sub	sp, sp, #20
   12534:	mov	r4, r0
   12538:	ldr	r0, [r0, #40]	; 0x28
   1253c:	cmp	r0, #0
   12540:	beq	12808 <Mat_VarReadNextInfo@plt+0x1704>
   12544:	ldr	r0, [r4, #8]
   12548:	bl	10ff0 <Mat_SizeOf@plt>
   1254c:	str	r0, [sp, #8]
   12550:	ldr	r0, [r4, #20]
   12554:	cmp	r0, #0
   12558:	beq	126d8 <Mat_VarReadNextInfo@plt+0x15d4>
   1255c:	ldr	r0, [r4, #32]
   12560:	ldr	r0, [r0, #8]
   12564:	cmp	r0, #0
   12568:	beq	12808 <Mat_VarReadNextInfo@plt+0x1704>
   1256c:	ldr	r0, [r4, #40]	; 0x28
   12570:	ldm	r0, {r7, r8}
   12574:	mov	r2, #0
   12578:	movw	r5, #20964	; 0x51e4
   1257c:	movt	r5, #2
   12580:	str	r7, [sp, #12]
   12584:	ldr	r1, [r4, #36]	; 0x24
   12588:	movw	r0, #15825	; 0x3dd1
   1258c:	movt	r0, #1
   12590:	str	r2, [sp, #4]
   12594:	bl	10f48 <Mat_Message@plt>
   12598:	ldr	r0, [r5]
   1259c:	add	r0, r0, #1
   125a0:	str	r0, [r5]
   125a4:	ldr	r1, [r4, #32]
   125a8:	ldr	r1, [r1]
   125ac:	cmp	r1, #0
   125b0:	beq	126a8 <Mat_VarReadNextInfo@plt+0x15a4>
   125b4:	mov	r1, #0
   125b8:	str	r1, [sp, #16]
   125bc:	b	125c8 <Mat_VarReadNextInfo@plt+0x14c4>
   125c0:	str	r9, [sp, #16]
   125c4:	ldr	r0, [r5]
   125c8:	cmp	r0, #0
   125cc:	movw	r7, #15982	; 0x3e6e
   125d0:	movt	r7, #1
   125d4:	beq	125f4 <Mat_VarReadNextInfo@plt+0x14f0>
   125d8:	mov	r6, #0
   125dc:	mov	r0, r7
   125e0:	bl	10ef4 <printf@plt>
   125e4:	add	r6, r6, #1
   125e8:	ldr	r0, [r5]
   125ec:	cmp	r6, r0
   125f0:	bcc	125dc <Mat_VarReadNextInfo@plt+0x14d8>
   125f4:	ldr	r0, [r4, #32]
   125f8:	ldr	r1, [r0, #4]
   125fc:	cmp	r1, #0
   12600:	ldmib	sp, {r3, r7}
   12604:	movw	r9, #15788	; 0x3dac
   12608:	movt	r9, #1
   1260c:	mov	r5, r4
   12610:	mov	r4, r9
   12614:	ldr	r9, [sp, #16]
   12618:	beq	12680 <Mat_VarReadNextInfo@plt+0x157c>
   1261c:	mov	sl, #0
   12620:	str	r9, [sp, #16]
   12624:	mla	r1, r3, r1, sl
   12628:	ldr	r0, [r0]
   1262c:	mla	r6, r1, r0, r9
   12630:	ldr	r0, [sp, #12]
   12634:	mla	r1, r6, r7, r0
   12638:	ldr	r0, [r5, #8]
   1263c:	mov	r9, r3
   12640:	bl	12810 <Mat_VarReadNextInfo@plt+0x170c>
   12644:	movw	r0, #15784	; 0x3da8
   12648:	movt	r0, #1
   1264c:	bl	10ef4 <printf@plt>
   12650:	mla	r1, r6, r7, r8
   12654:	ldr	r0, [r5, #8]
   12658:	bl	12810 <Mat_VarReadNextInfo@plt+0x170c>
   1265c:	mov	r0, r4
   12660:	bl	10ef4 <printf@plt>
   12664:	mov	r3, r9
   12668:	ldr	r9, [sp, #16]
   1266c:	add	sl, sl, #1
   12670:	ldr	r0, [r5, #32]
   12674:	ldr	r1, [r0, #4]
   12678:	cmp	sl, r1
   1267c:	bcc	12624 <Mat_VarReadNextInfo@plt+0x1520>
   12680:	mov	r0, #10
   12684:	mov	r4, r5
   12688:	bl	11050 <putchar@plt>
   1268c:	add	r9, r9, #1
   12690:	ldr	r0, [r5, #32]
   12694:	ldr	r0, [r0]
   12698:	cmp	r9, r0
   1269c:	movw	r5, #20964	; 0x51e4
   126a0:	movt	r5, #2
   126a4:	bcc	125c0 <Mat_VarReadNextInfo@plt+0x14bc>
   126a8:	ldr	r0, [r5]
   126ac:	sub	r0, r0, #1
   126b0:	str	r0, [r5]
   126b4:	mov	r0, #10
   126b8:	bl	11050 <putchar@plt>
   126bc:	ldr	r2, [sp, #4]
   126c0:	add	r2, r2, #1
   126c4:	ldr	r0, [r4, #32]
   126c8:	ldr	r0, [r0, #8]
   126cc:	cmp	r2, r0
   126d0:	bcc	12584 <Mat_VarReadNextInfo@plt+0x1480>
   126d4:	b	12808 <Mat_VarReadNextInfo@plt+0x1704>
   126d8:	ldr	r0, [r4, #32]
   126dc:	ldr	r0, [r0, #8]
   126e0:	cmp	r0, #0
   126e4:	beq	12808 <Mat_VarReadNextInfo@plt+0x1704>
   126e8:	ldr	r7, [r4, #40]	; 0x28
   126ec:	mov	sl, #0
   126f0:	movw	r5, #20964	; 0x51e4
   126f4:	movt	r5, #2
   126f8:	movw	r6, #15982	; 0x3e6e
   126fc:	movt	r6, #1
   12700:	ldr	r1, [r4, #36]	; 0x24
   12704:	movw	r0, #15825	; 0x3dd1
   12708:	movt	r0, #1
   1270c:	mov	r2, sl
   12710:	bl	10f48 <Mat_Message@plt>
   12714:	ldr	r0, [r5]
   12718:	add	r0, r0, #1
   1271c:	str	r0, [r5]
   12720:	ldr	r1, [r4, #32]
   12724:	ldr	r1, [r1]
   12728:	cmp	r1, #0
   1272c:	beq	127e0 <Mat_VarReadNextInfo@plt+0x16dc>
   12730:	mov	r8, #0
   12734:	b	1273c <Mat_VarReadNextInfo@plt+0x1638>
   12738:	ldr	r0, [r5]
   1273c:	mov	r9, r7
   12740:	cmp	r0, #0
   12744:	beq	12764 <Mat_VarReadNextInfo@plt+0x1660>
   12748:	mov	r7, #0
   1274c:	mov	r0, r6
   12750:	bl	10ef4 <printf@plt>
   12754:	add	r7, r7, #1
   12758:	ldr	r0, [r5]
   1275c:	cmp	r7, r0
   12760:	bcc	1274c <Mat_VarReadNextInfo@plt+0x1648>
   12764:	mov	r6, r5
   12768:	ldr	r0, [r4, #32]
   1276c:	ldr	r1, [r0, #4]
   12770:	cmp	r1, #0
   12774:	ldr	r5, [sp, #8]
   12778:	mov	r7, r9
   1277c:	beq	127b8 <Mat_VarReadNextInfo@plt+0x16b4>
   12780:	mov	r9, #0
   12784:	mla	r1, sl, r1, r9
   12788:	ldr	r0, [r0]
   1278c:	mla	r0, r1, r0, r8
   12790:	mla	r1, r0, r5, r7
   12794:	ldr	r0, [r4, #8]
   12798:	bl	12810 <Mat_VarReadNextInfo@plt+0x170c>
   1279c:	mov	r0, #32
   127a0:	bl	11050 <putchar@plt>
   127a4:	add	r9, r9, #1
   127a8:	ldr	r0, [r4, #32]
   127ac:	ldr	r1, [r0, #4]
   127b0:	cmp	r9, r1
   127b4:	bcc	12784 <Mat_VarReadNextInfo@plt+0x1680>
   127b8:	mov	r0, #10
   127bc:	bl	11050 <putchar@plt>
   127c0:	add	r8, r8, #1
   127c4:	ldr	r0, [r4, #32]
   127c8:	ldr	r0, [r0]
   127cc:	cmp	r8, r0
   127d0:	mov	r5, r6
   127d4:	movw	r6, #15982	; 0x3e6e
   127d8:	movt	r6, #1
   127dc:	bcc	12738 <Mat_VarReadNextInfo@plt+0x1634>
   127e0:	ldr	r0, [r5]
   127e4:	sub	r0, r0, #1
   127e8:	str	r0, [r5]
   127ec:	mov	r0, #10
   127f0:	bl	11050 <putchar@plt>
   127f4:	add	sl, sl, #1
   127f8:	ldr	r0, [r4, #32]
   127fc:	ldr	r0, [r0, #8]
   12800:	cmp	sl, r0
   12804:	bcc	12700 <Mat_VarReadNextInfo@plt+0x15fc>
   12808:	sub	sp, fp, #28
   1280c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12810:	sub	r0, r0, #1
   12814:	cmp	r0, #12
   12818:	bxhi	lr
   1281c:	add	r2, pc, #0
   12820:	ldr	pc, [r2, r0, lsl #2]
   12824:	andeq	r2, r1, r8, asr r8
   12828:	andeq	r2, r1, r8, ror #16
   1282c:	andeq	r2, r1, r8, ror r8
   12830:	andeq	r2, r1, r8, lsl #17
   12834:	muleq	r1, r8, r8
   12838:	andeq	r2, r1, r8, lsr #17
   1283c:			; <UNDEFINED> instruction: 0x000128b8
   12840:	strdeq	r2, [r1], -r8
   12844:	andeq	r2, r1, r4, asr #17
   12848:	strdeq	r2, [r1], -r8
   1284c:	strdeq	r2, [r1], -r8
   12850:	ldrdeq	r2, [r1], -r8
   12854:	andeq	r2, r1, r8, ror #17
   12858:	ldrsb	r1, [r1]
   1285c:	movw	r0, #15815	; 0x3dc7
   12860:	movt	r0, #1
   12864:	b	10ef4 <printf@plt>
   12868:	ldrb	r1, [r1]
   1286c:	movw	r0, #15820	; 0x3dcc
   12870:	movt	r0, #1
   12874:	b	10ef4 <printf@plt>
   12878:	ldrsh	r1, [r1]
   1287c:	movw	r0, #15807	; 0x3dbf
   12880:	movt	r0, #1
   12884:	b	10ef4 <printf@plt>
   12888:	ldrh	r1, [r1]
   1288c:	movw	r0, #15811	; 0x3dc3
   12890:	movt	r0, #1
   12894:	b	10ef4 <printf@plt>
   12898:	ldr	r1, [r1]
   1289c:	movw	r0, #15717	; 0x3d65
   128a0:	movt	r0, #1
   128a4:	b	10ef4 <printf@plt>
   128a8:	ldr	r1, [r1]
   128ac:	movw	r0, #15804	; 0x3dbc
   128b0:	movt	r0, #1
   128b4:	b	10ef4 <printf@plt>
   128b8:	vldr	s0, [r1]
   128bc:	vcvt.f64.f32	d16, s0
   128c0:	b	128c8 <Mat_VarReadNextInfo@plt+0x17c4>
   128c4:	vldr	d16, [r1]
   128c8:	vmov	r2, r3, d16
   128cc:	movw	r0, #15791	; 0x3daf
   128d0:	movt	r0, #1
   128d4:	b	10ef4 <printf@plt>
   128d8:	ldrd	r2, [r1]
   128dc:	movw	r0, #15794	; 0x3db2
   128e0:	movt	r0, #1
   128e4:	b	10ef4 <printf@plt>
   128e8:	ldrd	r2, [r1]
   128ec:	movw	r0, #15799	; 0x3db7
   128f0:	movt	r0, #1
   128f4:	b	10ef4 <printf@plt>
   128f8:	bx	lr
   128fc:	add	r2, r0, #1
   12900:	mov	r0, #1
   12904:	cmp	r2, r1
   12908:	bxeq	lr
   1290c:	ldrb	r3, [r2], #1
   12910:	cmp	r3, #44	; 0x2c
   12914:	addeq	r0, r0, #1
   12918:	cmp	r1, r2
   1291c:	bne	1290c <Mat_VarReadNextInfo@plt+0x1808>
   12920:	bx	lr
   12924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12928:	add	fp, sp, #28
   1292c:	sub	sp, sp, #12
   12930:	str	r3, [sp, #4]
   12934:	str	r2, [sp, #8]
   12938:	mov	r6, r1
   1293c:	mov	r7, r0
   12940:	add	r5, r0, #1
   12944:	movw	r4, #17125	; 0x42e5
   12948:	movt	r4, #1
   1294c:	mov	r9, #0
   12950:	mov	sl, #0
   12954:	b	12964 <Mat_VarReadNextInfo@plt+0x1860>
   12958:	cmp	r6, r7
   1295c:	subeq	sp, fp, #28
   12960:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12964:	mov	r8, r7
   12968:	ldrb	r0, [r7, #1]!
   1296c:	cmp	r0, #57	; 0x39
   12970:	bgt	129c4 <Mat_VarReadNextInfo@plt+0x18c0>
   12974:	cmp	r0, #41	; 0x29
   12978:	beq	129d4 <Mat_VarReadNextInfo@plt+0x18d0>
   1297c:	cmp	r0, #44	; 0x2c
   12980:	bne	12958 <Mat_VarReadNextInfo@plt+0x1854>
   12984:	cmp	r9, #0
   12988:	beq	12ac0 <Mat_VarReadNextInfo@plt+0x19bc>
   1298c:	cmp	r9, #1
   12990:	beq	1299c <Mat_VarReadNextInfo@plt+0x1898>
   12994:	cmp	r9, #2
   12998:	bne	12b4c <Mat_VarReadNextInfo@plt+0x1a48>
   1299c:	mov	r0, #0
   129a0:	strb	r0, [r8, #1]
   129a4:	mov	r0, r5
   129a8:	mov	r1, r4
   129ac:	bl	10edc <strcmp@plt>
   129b0:	cmp	r0, #0
   129b4:	beq	12b00 <Mat_VarReadNextInfo@plt+0x19fc>
   129b8:	mov	r0, r5
   129bc:	bl	110b0 <atoi@plt>
   129c0:	b	12b44 <Mat_VarReadNextInfo@plt+0x1a40>
   129c4:	cmp	r0, #58	; 0x3a
   129c8:	beq	12a10 <Mat_VarReadNextInfo@plt+0x190c>
   129cc:	cmp	r0, #125	; 0x7d
   129d0:	bne	12958 <Mat_VarReadNextInfo@plt+0x1854>
   129d4:	mov	r0, #0
   129d8:	strb	r0, [r8, #1]
   129dc:	mov	r0, r5
   129e0:	mov	r1, r4
   129e4:	bl	10edc <strcmp@plt>
   129e8:	cmp	r0, #0
   129ec:	beq	12a5c <Mat_VarReadNextInfo@plt+0x1958>
   129f0:	mov	r0, r5
   129f4:	bl	110b0 <atoi@plt>
   129f8:	cmp	r9, #2
   129fc:	cmpne	r9, #1
   12a00:	bne	12aa8 <Mat_VarReadNextInfo@plt+0x19a4>
   12a04:	ldr	r1, [fp, #8]
   12a08:	str	r0, [r1, sl, lsl #2]
   12a0c:	b	12a9c <Mat_VarReadNextInfo@plt+0x1998>
   12a10:	mov	r0, #0
   12a14:	strb	r0, [r8, #1]
   12a18:	mov	r0, r5
   12a1c:	mov	r1, r4
   12a20:	bl	10edc <strcmp@plt>
   12a24:	cmp	r0, #0
   12a28:	beq	12a84 <Mat_VarReadNextInfo@plt+0x1980>
   12a2c:	mov	r0, r5
   12a30:	bl	110b0 <atoi@plt>
   12a34:	cmp	r9, #2
   12a38:	beq	12a04 <Mat_VarReadNextInfo@plt+0x1900>
   12a3c:	cmp	r9, #1
   12a40:	beq	12af4 <Mat_VarReadNextInfo@plt+0x19f0>
   12a44:	cmp	r9, #0
   12a48:	bne	12b18 <Mat_VarReadNextInfo@plt+0x1a14>
   12a4c:	sub	r0, r0, #1
   12a50:	ldr	r1, [sp, #8]
   12a54:	str	r0, [r1, sl, lsl #2]
   12a58:	b	12a9c <Mat_VarReadNextInfo@plt+0x1998>
   12a5c:	cmp	r9, #2
   12a60:	cmpne	r9, #1
   12a64:	beq	12a90 <Mat_VarReadNextInfo@plt+0x198c>
   12a68:	cmp	r9, #0
   12a6c:	bne	12b18 <Mat_VarReadNextInfo@plt+0x1a14>
   12a70:	ldr	r0, [sp, #8]
   12a74:	mvn	r1, #0
   12a78:	str	r1, [r0, sl, lsl #2]
   12a7c:	ldr	r0, [fp, #8]
   12a80:	b	12a98 <Mat_VarReadNextInfo@plt+0x1994>
   12a84:	cmp	r9, #2
   12a88:	cmpne	r9, #1
   12a8c:	bne	12b08 <Mat_VarReadNextInfo@plt+0x1a04>
   12a90:	ldr	r0, [fp, #8]
   12a94:	mvn	r1, #0
   12a98:	str	r1, [r0, sl, lsl #2]
   12a9c:	add	r5, r8, #2
   12aa0:	add	r9, r9, #1
   12aa4:	b	12958 <Mat_VarReadNextInfo@plt+0x1854>
   12aa8:	cmp	r9, #0
   12aac:	bne	12b18 <Mat_VarReadNextInfo@plt+0x1a14>
   12ab0:	sub	r1, r0, #1
   12ab4:	ldr	r2, [sp, #8]
   12ab8:	str	r1, [r2, sl, lsl #2]
   12abc:	b	12a04 <Mat_VarReadNextInfo@plt+0x1900>
   12ac0:	mov	r0, #0
   12ac4:	strb	r0, [r8, #1]
   12ac8:	mov	r0, r5
   12acc:	mov	r1, r4
   12ad0:	bl	10edc <strcmp@plt>
   12ad4:	cmp	r0, #0
   12ad8:	beq	12b38 <Mat_VarReadNextInfo@plt+0x1a34>
   12adc:	mov	r0, r5
   12ae0:	bl	110b0 <atoi@plt>
   12ae4:	sub	r1, r0, #1
   12ae8:	ldr	r2, [sp, #8]
   12aec:	str	r1, [r2, sl, lsl #2]
   12af0:	b	12b44 <Mat_VarReadNextInfo@plt+0x1a40>
   12af4:	ldr	r1, [sp, #4]
   12af8:	str	r0, [r1, sl, lsl #2]
   12afc:	b	12a9c <Mat_VarReadNextInfo@plt+0x1998>
   12b00:	mvn	r0, #0
   12b04:	b	12b44 <Mat_VarReadNextInfo@plt+0x1a40>
   12b08:	cmp	r9, #0
   12b0c:	bne	12b18 <Mat_VarReadNextInfo@plt+0x1a14>
   12b10:	ldr	r0, [sp, #8]
   12b14:	b	12a94 <Mat_VarReadNextInfo@plt+0x1990>
   12b18:	movw	r0, #20944	; 0x51d0
   12b1c:	movt	r0, #2
   12b20:	ldr	r0, [r0]
   12b24:	add	r2, sl, #1
   12b28:	movw	r1, #17129	; 0x42e9
   12b2c:	movt	r1, #1
   12b30:	bl	11020 <fprintf@plt>
   12b34:	b	12a9c <Mat_VarReadNextInfo@plt+0x1998>
   12b38:	mvn	r0, #0
   12b3c:	ldr	r1, [sp, #8]
   12b40:	str	r0, [r1, sl, lsl #2]
   12b44:	ldr	r1, [fp, #8]
   12b48:	str	r0, [r1, sl, lsl #2]
   12b4c:	add	r5, r8, #2
   12b50:	add	sl, sl, #1
   12b54:	mov	r9, #0
   12b58:	b	12958 <Mat_VarReadNextInfo@plt+0x1854>
   12b5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b60:	add	fp, sp, #28
   12b64:	sub	sp, sp, #4
   12b68:	ldr	ip, [fp, #8]
   12b6c:	ldr	r7, [ip, #4]
   12b70:	mov	r9, #0
   12b74:	cmp	r0, #1
   12b78:	cmpne	r7, r0
   12b7c:	bne	12e70 <Mat_VarReadNextInfo@plt+0x1d6c>
   12b80:	cmp	r0, #1
   12b84:	bne	12bac <Mat_VarReadNextInfo@plt+0x1aa8>
   12b88:	cmp	r7, #1
   12b8c:	blt	12cd0 <Mat_VarReadNextInfo@plt+0x1bcc>
   12b90:	ldr	r6, [ip, #32]
   12b94:	mov	r0, #1
   12b98:	ldr	r5, [r6], #4
   12b9c:	mul	r0, r5, r0
   12ba0:	subs	r7, r7, #1
   12ba4:	bne	12b98 <Mat_VarReadNextInfo@plt+0x1a94>
   12ba8:	b	12cd4 <Mat_VarReadNextInfo@plt+0x1bd0>
   12bac:	blt	12d34 <Mat_VarReadNextInfo@plt+0x1c30>
   12bb0:	mov	lr, #0
   12bb4:	mov	r8, #1
   12bb8:	mov	r9, #1
   12bbc:	mov	r4, #0
   12bc0:	ldr	r7, [r2, r4, lsl #2]
   12bc4:	cmp	r7, #0
   12bc8:	ble	12d64 <Mat_VarReadNextInfo@plt+0x1c60>
   12bcc:	ldr	r6, [r3, r4, lsl #2]
   12bd0:	cmn	r6, #1
   12bd4:	beq	12c1c <Mat_VarReadNextInfo@plt+0x1b18>
   12bd8:	cmp	r6, #0
   12bdc:	blt	12c28 <Mat_VarReadNextInfo@plt+0x1b24>
   12be0:	ldr	r5, [ip, #32]
   12be4:	ldr	r5, [r5, r4, lsl #2]
   12be8:	cmp	r6, r5
   12bec:	bhi	12ddc <Mat_VarReadNextInfo@plt+0x1cd8>
   12bf0:	ldr	sl, [r1, r4, lsl #2]
   12bf4:	cmp	sl, r5
   12bf8:	bcs	12d8c <Mat_VarReadNextInfo@plt+0x1c88>
   12bfc:	cmp	r6, #1
   12c00:	cmpge	sl, r6
   12c04:	bgt	12d8c <Mat_VarReadNextInfo@plt+0x1c88>
   12c08:	add	r5, sl, #1
   12c0c:	cmp	r6, r5
   12c10:	bne	12c6c <Mat_VarReadNextInfo@plt+0x1b68>
   12c14:	str	r8, [r3, r4, lsl #2]
   12c18:	b	12cb8 <Mat_VarReadNextInfo@plt+0x1bb4>
   12c1c:	ldr	r5, [r1, r4, lsl #2]
   12c20:	cmn	r5, #1
   12c24:	beq	12ca4 <Mat_VarReadNextInfo@plt+0x1ba0>
   12c28:	ldr	r5, [ip, #32]
   12c2c:	ldr	r5, [r5, r4, lsl #2]
   12c30:	cmp	r7, #1
   12c34:	bne	12c4c <Mat_VarReadNextInfo@plt+0x1b48>
   12c38:	str	r5, [r3, r4, lsl #2]
   12c3c:	ldr	r5, [r1, r4, lsl #2]
   12c40:	cmn	r5, #1
   12c44:	strle	lr, [r1, r4, lsl #2]
   12c48:	b	12cb8 <Mat_VarReadNextInfo@plt+0x1bb4>
   12c4c:	ldr	r6, [r1, r4, lsl #2]
   12c50:	mvn	r6, r6
   12c54:	vmov	s0, r7
   12c58:	add	r5, r5, r6
   12c5c:	vcvt.f64.s32	d16, s0
   12c60:	vmov	s0, r5
   12c64:	vcvt.f64.u32	d17, s0
   12c68:	b	12c8c <Mat_VarReadNextInfo@plt+0x1b88>
   12c6c:	cmp	r6, #1
   12c70:	blt	12cb8 <Mat_VarReadNextInfo@plt+0x1bb4>
   12c74:	mvn	r5, sl
   12c78:	vmov	s0, r7
   12c7c:	add	r5, r6, r5
   12c80:	vcvt.f64.s32	d16, s0
   12c84:	vmov	s0, r5
   12c88:	vcvt.f64.s32	d17, s0
   12c8c:	vdiv.f64	d16, d17, d16
   12c90:	vcvtm.s32.f64	s0, d16
   12c94:	vmov	r5, s0
   12c98:	add	r5, r5, #1
   12c9c:	str	r5, [r3, r4, lsl #2]
   12ca0:	b	12cb8 <Mat_VarReadNextInfo@plt+0x1bb4>
   12ca4:	str	r8, [r3, r4, lsl #2]
   12ca8:	ldr	r5, [ip, #32]
   12cac:	ldr	r5, [r5, r4, lsl #2]
   12cb0:	sub	r5, r5, #1
   12cb4:	str	r5, [r1, r4, lsl #2]
   12cb8:	ldr	r5, [r3, r4, lsl #2]
   12cbc:	mul	r9, r5, r9
   12cc0:	add	r4, r4, #1
   12cc4:	cmp	r4, r0
   12cc8:	blt	12bc0 <Mat_VarReadNextInfo@plt+0x1abc>
   12ccc:	b	12e70 <Mat_VarReadNextInfo@plt+0x1d6c>
   12cd0:	mov	r0, #1
   12cd4:	ldr	r7, [r2]
   12cd8:	cmp	r7, #0
   12cdc:	ble	12e34 <Mat_VarReadNextInfo@plt+0x1d30>
   12ce0:	ldr	r6, [r3]
   12ce4:	cmp	r6, r0
   12ce8:	bgt	12e50 <Mat_VarReadNextInfo@plt+0x1d4c>
   12cec:	ldr	r4, [r1]
   12cf0:	cmp	r4, r0
   12cf4:	bge	12dc0 <Mat_VarReadNextInfo@plt+0x1cbc>
   12cf8:	cmp	r6, #1
   12cfc:	cmpge	r4, r6
   12d00:	bgt	12dc0 <Mat_VarReadNextInfo@plt+0x1cbc>
   12d04:	cmn	r6, #1
   12d08:	beq	12d3c <Mat_VarReadNextInfo@plt+0x1c38>
   12d0c:	cmp	r6, #1
   12d10:	blt	12db8 <Mat_VarReadNextInfo@plt+0x1cb4>
   12d14:	mvn	r0, r4
   12d18:	vmov	s0, r7
   12d1c:	add	r0, r6, r0
   12d20:	vcvt.f64.s32	d16, s0
   12d24:	vmov	s0, r0
   12d28:	vcvt.f64.s32	d17, s0
   12d2c:	vdiv.f64	d16, d17, d16
   12d30:	b	12e1c <Mat_VarReadNextInfo@plt+0x1d18>
   12d34:	mov	r9, #1
   12d38:	b	12e70 <Mat_VarReadNextInfo@plt+0x1d6c>
   12d3c:	cmn	r4, #1
   12d40:	beq	12da8 <Mat_VarReadNextInfo@plt+0x1ca4>
   12d44:	str	r0, [r3]
   12d48:	ldr	r6, [r1]
   12d4c:	cmp	r7, #1
   12d50:	bne	12e00 <Mat_VarReadNextInfo@plt+0x1cfc>
   12d54:	cmn	r6, #1
   12d58:	bgt	12db8 <Mat_VarReadNextInfo@plt+0x1cb4>
   12d5c:	mov	r0, #0
   12d60:	b	12db4 <Mat_VarReadNextInfo@plt+0x1cb0>
   12d64:	movw	r0, #20944	; 0x51d0
   12d68:	movt	r0, #2
   12d6c:	ldr	r3, [r0]
   12d70:	movw	r0, #17155	; 0x4303
   12d74:	movt	r0, #1
   12d78:	mov	r1, #23
   12d7c:	mov	r2, #1
   12d80:	bl	10f78 <fwrite@plt>
   12d84:	mov	r9, #0
   12d88:	b	12e70 <Mat_VarReadNextInfo@plt+0x1d6c>
   12d8c:	movw	r0, #20944	; 0x51d0
   12d90:	movt	r0, #2
   12d94:	ldr	r0, [r0]
   12d98:	add	r2, r4, #1
   12d9c:	movw	r1, #17250	; 0x4362
   12da0:	movt	r1, #1
   12da4:	b	12df4 <Mat_VarReadNextInfo@plt+0x1cf0>
   12da8:	mov	r2, #1
   12dac:	str	r2, [r3]
   12db0:	sub	r0, r0, #1
   12db4:	str	r0, [r1]
   12db8:	ldr	r9, [r3]
   12dbc:	b	12e70 <Mat_VarReadNextInfo@plt+0x1d6c>
   12dc0:	movw	r0, #20944	; 0x51d0
   12dc4:	movt	r0, #2
   12dc8:	ldr	r3, [r0]
   12dcc:	movw	r0, #17197	; 0x432d
   12dd0:	movt	r0, #1
   12dd4:	mov	r1, #18
   12dd8:	b	12e68 <Mat_VarReadNextInfo@plt+0x1d64>
   12ddc:	movw	r0, #20944	; 0x51d0
   12de0:	movt	r0, #2
   12de4:	ldr	r0, [r0]
   12de8:	add	r2, r4, #1
   12dec:	movw	r1, #17216	; 0x4340
   12df0:	movt	r1, #1
   12df4:	bl	11020 <fprintf@plt>
   12df8:	mov	r9, #0
   12dfc:	b	12e70 <Mat_VarReadNextInfo@plt+0x1d6c>
   12e00:	mvn	r1, r6
   12e04:	vldr	s0, [r2]
   12e08:	add	r0, r0, r1
   12e0c:	vmov	s2, r0
   12e10:	vcvt.f64.s32	d16, s2
   12e14:	vcvt.f64.s32	d17, s0
   12e18:	vdiv.f64	d16, d16, d17
   12e1c:	vcvtm.s32.f64	s0, d16
   12e20:	vmov	r0, s0
   12e24:	add	r0, r0, #1
   12e28:	str	r0, [r3]
   12e2c:	ldr	r9, [r3]
   12e30:	b	12e70 <Mat_VarReadNextInfo@plt+0x1d6c>
   12e34:	movw	r0, #20944	; 0x51d0
   12e38:	movt	r0, #2
   12e3c:	ldr	r3, [r0]
   12e40:	movw	r0, #17155	; 0x4303
   12e44:	movt	r0, #1
   12e48:	mov	r1, #23
   12e4c:	b	12e68 <Mat_VarReadNextInfo@plt+0x1d64>
   12e50:	movw	r0, #20944	; 0x51d0
   12e54:	movt	r0, #2
   12e58:	ldr	r3, [r0]
   12e5c:	movw	r0, #17179	; 0x431b
   12e60:	movt	r0, #1
   12e64:	mov	r1, #17
   12e68:	mov	r2, #1
   12e6c:	bl	10f78 <fwrite@plt>
   12e70:	mov	r0, r9
   12e74:	sub	sp, fp, #28
   12e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012e7c <getopt@@Base>:
   12e7c:	push	{fp, lr}
   12e80:	mov	fp, sp
   12e84:	sub	sp, sp, #8
   12e88:	mov	r3, #0
   12e8c:	str	r3, [sp]
   12e90:	str	r3, [sp, #4]
   12e94:	mov	r3, #0
   12e98:	bl	12ea4 <getopt@@Base+0x28>
   12e9c:	mov	sp, fp
   12ea0:	pop	{fp, pc}
   12ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ea8:	add	fp, sp, #28
   12eac:	sub	sp, sp, #36	; 0x24
   12eb0:	cmp	r2, #0
   12eb4:	beq	13364 <getopt@@Base+0x4e8>
   12eb8:	mov	r8, r3
   12ebc:	mov	r5, r2
   12ec0:	str	r0, [sp, #24]
   12ec4:	str	r1, [sp, #28]
   12ec8:	ldr	r7, [fp, #12]
   12ecc:	ldr	r0, [pc, #1608]	; 1351c <getopt@@Base+0x6a0>
   12ed0:	add	r0, pc, r0
   12ed4:	bl	10f90 <getenv@plt>
   12ed8:	ldrb	r2, [r5]
   12edc:	cmp	r2, #45	; 0x2d
   12ee0:	str	r0, [sp, #8]
   12ee4:	bne	12ef4 <getopt@@Base+0x78>
   12ee8:	orr	r7, r7, #2
   12eec:	add	r5, r5, #1
   12ef0:	b	12f10 <getopt@@Base+0x94>
   12ef4:	bic	r1, r7, #1
   12ef8:	cmp	r2, #43	; 0x2b
   12efc:	moveq	r7, r1
   12f00:	cmp	r0, #0
   12f04:	movne	r7, r1
   12f08:	cmp	r2, #43	; 0x2b
   12f0c:	addeq	r5, r5, #1
   12f10:	ldr	r3, [sp, #28]
   12f14:	ldr	r6, [sp, #24]
   12f18:	ldr	r4, [pc, #1536]	; 13520 <getopt@@Base+0x6a4>
   12f1c:	ldr	r4, [pc, r4]
   12f20:	ldr	r0, [r4]
   12f24:	cmp	r0, #0
   12f28:	str	r5, [sp, #20]
   12f2c:	str	r8, [sp, #16]
   12f30:	beq	12f5c <getopt@@Base+0xe0>
   12f34:	ldr	r0, [pc, #1520]	; 1352c <getopt@@Base+0x6b0>
   12f38:	ldr	r0, [pc, r0]
   12f3c:	mov	r1, #0
   12f40:	str	r1, [r0]
   12f44:	ldr	r0, [pc, #1508]	; 13530 <getopt@@Base+0x6b4>
   12f48:	ldr	r0, [pc, r0]
   12f4c:	ldr	r0, [r0]
   12f50:	cmp	r0, #0
   12f54:	bne	12f80 <getopt@@Base+0x104>
   12f58:	b	12f9c <getopt@@Base+0x120>
   12f5c:	mov	r0, #1
   12f60:	str	r0, [r4]
   12f64:	ldr	r1, [pc, #1464]	; 13524 <getopt@@Base+0x6a8>
   12f68:	ldr	r1, [pc, r1]
   12f6c:	str	r0, [r1]
   12f70:	ldr	r0, [pc, #1456]	; 13528 <getopt@@Base+0x6ac>
   12f74:	ldr	r0, [pc, r0]
   12f78:	mov	r1, #0
   12f7c:	str	r1, [r0]
   12f80:	ldr	r0, [pc, #1452]	; 13534 <getopt@@Base+0x6b8>
   12f84:	add	r0, pc, r0
   12f88:	mvn	r1, #0
   12f8c:	str	r1, [r0]
   12f90:	ldr	r0, [pc, #1440]	; 13538 <getopt@@Base+0x6bc>
   12f94:	add	r0, pc, r0
   12f98:	str	r1, [r0]
   12f9c:	and	r0, r7, #1
   12fa0:	str	r0, [sp, #32]
   12fa4:	str	r7, [sp, #12]
   12fa8:	and	r8, r7, #2
   12fac:	ldr	sl, [pc, #1416]	; 1353c <getopt@@Base+0x6c0>
   12fb0:	ldr	sl, [pc, sl]
   12fb4:	ldr	r5, [pc, #1412]	; 13540 <getopt@@Base+0x6c4>
   12fb8:	add	r5, pc, r5
   12fbc:	ldr	ip, [pc, #1408]	; 13544 <getopt@@Base+0x6c8>
   12fc0:	add	ip, pc, ip
   12fc4:	ldr	lr, [pc, #1404]	; 13548 <getopt@@Base+0x6cc>
   12fc8:	add	lr, pc, lr
   12fcc:	b	12fdc <getopt@@Base+0x160>
   12fd0:	ldr	r0, [r4]
   12fd4:	add	r0, r0, #1
   12fd8:	str	r0, [r4]
   12fdc:	ldr	r0, [sl]
   12fe0:	cmp	r0, #0
   12fe4:	bne	12ffc <getopt@@Base+0x180>
   12fe8:	ldr	r0, [pc, #1372]	; 1354c <getopt@@Base+0x6d0>
   12fec:	ldr	r0, [pc, r0]
   12ff0:	ldrb	r0, [r0]
   12ff4:	cmp	r0, #0
   12ff8:	bne	13174 <getopt@@Base+0x2f8>
   12ffc:	mov	r0, #0
   13000:	str	r0, [sl]
   13004:	ldr	r2, [r4]
   13008:	cmp	r2, r6
   1300c:	bge	130c8 <getopt@@Base+0x24c>
   13010:	ldr	r0, [r3, r2, lsl #2]
   13014:	str	r0, [r5]
   13018:	ldrb	r1, [r0]
   1301c:	cmp	r1, #45	; 0x2d
   13020:	bne	13030 <getopt@@Base+0x1b4>
   13024:	ldrb	r1, [r0, #1]
   13028:	cmp	r1, #0
   1302c:	bne	13134 <getopt@@Base+0x2b8>
   13030:	str	ip, [r5]
   13034:	cmp	r8, #0
   13038:	bne	13114 <getopt@@Base+0x298>
   1303c:	ldr	r0, [sp, #32]
   13040:	cmp	r0, #0
   13044:	beq	13364 <getopt@@Base+0x4e8>
   13048:	ldr	r7, [pc, #1300]	; 13564 <getopt@@Base+0x6e8>
   1304c:	ldr	r7, [pc, r7]
   13050:	cmn	r7, #1
   13054:	beq	130c0 <getopt@@Base+0x244>
   13058:	ldr	r9, [pc, #1288]	; 13568 <getopt@@Base+0x6ec>
   1305c:	ldr	r9, [pc, r9]
   13060:	cmn	r9, #1
   13064:	beq	12fd0 <getopt@@Base+0x154>
   13068:	mov	r0, r7
   1306c:	mov	r1, r9
   13070:	mov	r4, lr
   13074:	bl	1363c <getopt_long_only@@Base+0x28>
   13078:	mov	lr, r4
   1307c:	ldr	ip, [pc, #1256]	; 1356c <getopt@@Base+0x6f0>
   13080:	add	ip, pc, ip
   13084:	ldr	r5, [pc, #1252]	; 13570 <getopt@@Base+0x6f4>
   13088:	add	r5, pc, r5
   1308c:	ldr	r4, [pc, #1248]	; 13574 <getopt@@Base+0x6f8>
   13090:	ldr	r4, [pc, r4]
   13094:	ldr	r6, [sp, #24]
   13098:	ldr	r3, [sp, #28]
   1309c:	ldr	r0, [pc, #1236]	; 13578 <getopt@@Base+0x6fc>
   130a0:	add	r0, pc, r0
   130a4:	mvn	r1, #0
   130a8:	str	r1, [r0]
   130ac:	sub	r0, r7, r9
   130b0:	ldr	r1, [r4]
   130b4:	add	r0, r0, r1
   130b8:	str	r0, [lr]
   130bc:	b	12fd0 <getopt@@Base+0x154>
   130c0:	str	r2, [lr]
   130c4:	b	12fd0 <getopt@@Base+0x154>
   130c8:	str	ip, [r5]
   130cc:	ldr	r5, [pc, #1148]	; 13550 <getopt@@Base+0x6d4>
   130d0:	ldr	r5, [pc, r5]
   130d4:	ldr	r6, [pc, #1144]	; 13554 <getopt@@Base+0x6d8>
   130d8:	ldr	r6, [pc, r6]
   130dc:	cmn	r6, #1
   130e0:	beq	131e8 <getopt@@Base+0x36c>
   130e4:	mov	r0, r5
   130e8:	mov	r1, r6
   130ec:	mov	r4, lr
   130f0:	bl	1363c <getopt_long_only@@Base+0x28>
   130f4:	mov	lr, r4
   130f8:	ldr	r4, [pc, #1112]	; 13558 <getopt@@Base+0x6dc>
   130fc:	ldr	r4, [pc, r4]
   13100:	sub	r0, r5, r6
   13104:	ldr	r1, [r4]
   13108:	add	r5, r0, r1
   1310c:	str	r5, [r4]
   13110:	b	131f0 <getopt@@Base+0x374>
   13114:	add	r0, r2, #1
   13118:	str	r0, [r4]
   1311c:	ldr	r0, [r3, r2, lsl #2]
   13120:	ldr	r1, [pc, #1080]	; 13560 <getopt@@Base+0x6e4>
   13124:	ldr	r1, [pc, r1]
   13128:	str	r0, [r1]
   1312c:	mov	r7, #1
   13130:	b	13368 <getopt@@Base+0x4ec>
   13134:	add	r7, r0, #1
   13138:	ldr	r8, [pc, #1084]	; 1357c <getopt@@Base+0x700>
   1313c:	ldr	r8, [pc, r8]
   13140:	cmn	r8, #1
   13144:	beq	13160 <getopt@@Base+0x2e4>
   13148:	ldr	r6, [pc, #1072]	; 13580 <getopt@@Base+0x704>
   1314c:	ldr	r6, [pc, r6]
   13150:	cmn	r6, #1
   13154:	ldreq	r6, [pc, #1064]	; 13584 <getopt@@Base+0x708>
   13158:	addeq	r6, pc, r6
   1315c:	streq	r2, [r6]
   13160:	str	r7, [r5]
   13164:	cmp	r1, #45	; 0x2d
   13168:	ldrbeq	r0, [r0, #2]
   1316c:	cmpeq	r0, #0
   13170:	beq	13208 <getopt@@Base+0x38c>
   13174:	ldr	r9, [sp, #16]
   13178:	cmp	r9, #0
   1317c:	ldr	r8, [sp, #20]
   13180:	beq	132ac <getopt@@Base+0x430>
   13184:	ldr	r0, [r4]
   13188:	ldr	r0, [r3, r0, lsl #2]
   1318c:	ldr	r2, [pc, #1016]	; 1358c <getopt@@Base+0x710>
   13190:	ldr	r2, [pc, r2]
   13194:	cmp	r2, r0
   13198:	beq	132ac <getopt@@Base+0x430>
   1319c:	ldrb	r1, [r2]
   131a0:	ldr	r0, [sp, #12]
   131a4:	tst	r0, #4
   131a8:	bne	131b4 <getopt@@Base+0x338>
   131ac:	cmp	r1, #45	; 0x2d
   131b0:	bne	132ac <getopt@@Base+0x430>
   131b4:	ldr	r7, [pc, #980]	; 13590 <getopt@@Base+0x714>
   131b8:	add	r7, pc, r7
   131bc:	mov	r0, #0
   131c0:	str	r0, [r7]
   131c4:	cmp	r1, #58	; 0x3a
   131c8:	beq	13260 <getopt@@Base+0x3e4>
   131cc:	cmp	r1, #45	; 0x2d
   131d0:	bne	1324c <getopt@@Base+0x3d0>
   131d4:	mov	r1, #1
   131d8:	str	r1, [r7]
   131dc:	add	r1, r2, #1
   131e0:	str	r1, [r5]
   131e4:	b	13260 <getopt@@Base+0x3e4>
   131e8:	cmn	r5, #1
   131ec:	strne	r5, [r4]
   131f0:	mvn	r7, #0
   131f4:	str	r7, [lr]
   131f8:	ldr	r0, [pc, #860]	; 1355c <getopt@@Base+0x6e0>
   131fc:	add	r0, pc, r0
   13200:	str	r7, [r0]
   13204:	b	13368 <getopt@@Base+0x4ec>
   13208:	str	ip, [r5]
   1320c:	add	r2, r2, #1
   13210:	str	r2, [r4]
   13214:	ldr	r5, [pc, #876]	; 13588 <getopt@@Base+0x70c>
   13218:	ldr	r5, [pc, r5]
   1321c:	cmn	r5, #1
   13220:	beq	131f0 <getopt@@Base+0x374>
   13224:	mov	r0, r8
   13228:	mov	r1, r5
   1322c:	mov	r6, lr
   13230:	bl	1363c <getopt_long_only@@Base+0x28>
   13234:	mov	lr, r6
   13238:	sub	r0, r8, r5
   1323c:	ldr	r1, [r4]
   13240:	add	r0, r0, r1
   13244:	str	r0, [r4]
   13248:	b	131f0 <getopt@@Base+0x374>
   1324c:	mov	r0, r8
   13250:	bl	11008 <strchr@plt>
   13254:	ldr	r3, [sp, #28]
   13258:	cmp	r0, #0
   1325c:	movwne	r0, #1
   13260:	str	r0, [sp]
   13264:	ldr	r0, [sp, #12]
   13268:	str	r0, [sp, #4]
   1326c:	mov	r0, r3
   13270:	mov	r1, r8
   13274:	mov	r2, r9
   13278:	ldr	r3, [fp, #8]
   1327c:	bl	136d0 <getopt_long_only@@Base+0xbc>
   13280:	mov	r7, r0
   13284:	cmn	r0, #1
   13288:	ldr	r4, [pc, #772]	; 13594 <getopt@@Base+0x718>
   1328c:	ldr	r4, [pc, r4]
   13290:	ldr	r5, [pc, #768]	; 13598 <getopt@@Base+0x71c>
   13294:	add	r5, pc, r5
   13298:	ldr	r0, [pc, #764]	; 1359c <getopt@@Base+0x720>
   1329c:	add	r0, pc, r0
   132a0:	beq	132ac <getopt@@Base+0x430>
   132a4:	str	r0, [r5]
   132a8:	b	13368 <getopt@@Base+0x4ec>
   132ac:	ldr	r0, [pc, #748]	; 135a0 <getopt@@Base+0x724>
   132b0:	ldr	r0, [pc, r0]
   132b4:	add	r6, r0, #1
   132b8:	str	r6, [r5]
   132bc:	ldrb	r7, [r0]
   132c0:	cmp	r7, #58	; 0x3a
   132c4:	beq	13374 <getopt@@Base+0x4f8>
   132c8:	cmp	r7, #45	; 0x2d
   132cc:	bne	132dc <getopt@@Base+0x460>
   132d0:	ldrb	r0, [r6]
   132d4:	cmp	r0, #0
   132d8:	bne	13388 <getopt@@Base+0x50c>
   132dc:	mov	r0, r8
   132e0:	mov	r1, r7
   132e4:	bl	11008 <strchr@plt>
   132e8:	cmp	r0, #0
   132ec:	beq	13348 <getopt@@Base+0x4cc>
   132f0:	cmp	r9, #0
   132f4:	ldr	r4, [pc, #700]	; 135b8 <getopt@@Base+0x73c>
   132f8:	ldr	r4, [pc, r4]
   132fc:	beq	13310 <getopt@@Base+0x494>
   13300:	cmp	r7, #87	; 0x57
   13304:	ldrbeq	r1, [r0, #1]
   13308:	cmpeq	r1, #59	; 0x3b
   1330c:	beq	133f0 <getopt@@Base+0x574>
   13310:	ldrb	r1, [r0, #1]
   13314:	cmp	r1, #58	; 0x3a
   13318:	ldr	r3, [sp, #28]
   1331c:	ldr	r1, [sp, #24]
   13320:	bne	133e0 <getopt@@Base+0x564>
   13324:	ldr	ip, [pc, #692]	; 135e0 <getopt@@Base+0x764>
   13328:	ldr	ip, [pc, ip]
   1332c:	mov	r2, #0
   13330:	str	r2, [ip]
   13334:	ldrb	r2, [r6]
   13338:	cmp	r2, #0
   1333c:	beq	13474 <getopt@@Base+0x5f8>
   13340:	str	r6, [ip]
   13344:	b	1349c <getopt@@Base+0x620>
   13348:	cmp	r7, #45	; 0x2d
   1334c:	ldr	r4, [pc, #592]	; 135a4 <getopt@@Base+0x728>
   13350:	ldr	r4, [pc, r4]
   13354:	bne	13374 <getopt@@Base+0x4f8>
   13358:	ldrb	r0, [r6]
   1335c:	cmp	r0, #0
   13360:	bne	13388 <getopt@@Base+0x50c>
   13364:	mvn	r7, #0
   13368:	mov	r0, r7
   1336c:	sub	sp, fp, #28
   13370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13374:	ldrb	r0, [r6]
   13378:	cmp	r0, #0
   1337c:	ldreq	r0, [r4]
   13380:	addeq	r0, r0, #1
   13384:	streq	r0, [r4]
   13388:	ldr	r0, [pc, #536]	; 135a8 <getopt@@Base+0x72c>
   1338c:	ldr	r0, [pc, r0]
   13390:	ldr	r0, [r0]
   13394:	cmp	r0, #0
   13398:	ldrbne	r0, [r8]
   1339c:	cmpne	r0, #58	; 0x3a
   133a0:	bne	133b8 <getopt@@Base+0x53c>
   133a4:	ldr	r0, [pc, #520]	; 135b4 <getopt@@Base+0x738>
   133a8:	ldr	r0, [pc, r0]
   133ac:	str	r7, [r0]
   133b0:	mov	r7, #63	; 0x3f
   133b4:	b	13368 <getopt@@Base+0x4ec>
   133b8:	ldr	r1, [pc, #492]	; 135ac <getopt@@Base+0x730>
   133bc:	add	r1, pc, r1
   133c0:	ldr	r0, [pc, #488]	; 135b0 <getopt@@Base+0x734>
   133c4:	add	r0, pc, r0
   133c8:	ldr	r2, [sp, #8]
   133cc:	cmp	r2, #0
   133d0:	movne	r0, r1
   133d4:	mov	r1, r7
   133d8:	bl	11014 <warnx@plt>
   133dc:	b	133a4 <getopt@@Base+0x528>
   133e0:	ldrb	r0, [r6]
   133e4:	cmp	r0, #0
   133e8:	bne	13368 <getopt@@Base+0x4ec>
   133ec:	b	134b0 <getopt@@Base+0x634>
   133f0:	ldrb	r0, [r6]
   133f4:	cmp	r0, #0
   133f8:	ldr	r0, [sp, #28]
   133fc:	ldr	r2, [sp, #24]
   13400:	bne	13428 <getopt@@Base+0x5ac>
   13404:	ldr	r1, [r4]
   13408:	add	r1, r1, #1
   1340c:	str	r1, [r4]
   13410:	cmp	r1, r2
   13414:	bge	134c0 <getopt@@Base+0x644>
   13418:	ldr	r1, [r0, r1, lsl #2]
   1341c:	ldr	r2, [pc, #428]	; 135d0 <getopt@@Base+0x754>
   13420:	add	r2, pc, r2
   13424:	str	r1, [r2]
   13428:	ldr	r2, [pc, #420]	; 135d4 <getopt@@Base+0x758>
   1342c:	add	r2, pc, r2
   13430:	mov	r1, #2
   13434:	str	r1, [r2]
   13438:	mov	r1, #0
   1343c:	str	r1, [sp]
   13440:	ldr	r1, [sp, #12]
   13444:	str	r1, [sp, #4]
   13448:	mov	r1, r8
   1344c:	mov	r2, r9
   13450:	ldr	r3, [fp, #8]
   13454:	bl	136d0 <getopt_long_only@@Base+0xbc>
   13458:	ldr	r1, [pc, #376]	; 135d8 <getopt@@Base+0x75c>
   1345c:	add	r1, pc, r1
   13460:	ldr	r2, [pc, #372]	; 135dc <getopt@@Base+0x760>
   13464:	add	r2, pc, r2
   13468:	str	r2, [r1]
   1346c:	sub	sp, fp, #28
   13470:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13474:	ldrb	r0, [r0, #2]
   13478:	cmp	r0, #58	; 0x3a
   1347c:	beq	1349c <getopt@@Base+0x620>
   13480:	ldr	r0, [r4]
   13484:	add	r0, r0, #1
   13488:	str	r0, [r4]
   1348c:	cmp	r0, r1
   13490:	bge	134c0 <getopt@@Base+0x644>
   13494:	ldr	r0, [r3, r0, lsl #2]
   13498:	str	r0, [ip]
   1349c:	ldr	r0, [pc, #320]	; 135e4 <getopt@@Base+0x768>
   134a0:	add	r0, pc, r0
   134a4:	ldr	r1, [pc, #316]	; 135e8 <getopt@@Base+0x76c>
   134a8:	add	r1, pc, r1
   134ac:	str	r1, [r0]
   134b0:	ldr	r0, [r4]
   134b4:	add	r0, r0, #1
   134b8:	str	r0, [r4]
   134bc:	b	13368 <getopt@@Base+0x4ec>
   134c0:	ldr	r0, [pc, #244]	; 135bc <getopt@@Base+0x740>
   134c4:	add	r0, pc, r0
   134c8:	ldr	r1, [pc, #240]	; 135c0 <getopt@@Base+0x744>
   134cc:	add	r1, pc, r1
   134d0:	str	r1, [r0]
   134d4:	ldr	r0, [pc, #232]	; 135c4 <getopt@@Base+0x748>
   134d8:	ldr	r0, [pc, r0]
   134dc:	ldr	r0, [r0]
   134e0:	cmp	r0, #0
   134e4:	ldrbne	r0, [r8]
   134e8:	cmpne	r0, #58	; 0x3a
   134ec:	beq	13500 <getopt@@Base+0x684>
   134f0:	ldr	r0, [pc, #208]	; 135c8 <getopt@@Base+0x74c>
   134f4:	add	r0, pc, r0
   134f8:	mov	r1, r7
   134fc:	bl	11014 <warnx@plt>
   13500:	ldr	r0, [pc, #196]	; 135cc <getopt@@Base+0x750>
   13504:	ldr	r0, [pc, r0]
   13508:	str	r7, [r0]
   1350c:	ldrb	r7, [r8]
   13510:	cmp	r7, #58	; 0x3a
   13514:	movwne	r7, #63	; 0x3f
   13518:	b	13368 <getopt@@Base+0x4ec>
   1351c:	strdeq	r1, [r0], -r8
   13520:	andeq	r2, r1, r0, asr #3
   13524:	andeq	r2, r1, r8, ror #2
   13528:	andeq	r2, r1, r0, ror r1
   1352c:	andeq	r2, r1, ip, lsr #3
   13530:	andeq	r2, r1, r8, lsl #3
   13534:	andeq	r2, r1, r4, lsr r2
   13538:	andeq	r2, r1, r0, lsr #4
   1353c:	andeq	r2, r1, r0, lsr #2
   13540:	andeq	r2, r1, r4, lsl #4
   13544:	andeq	r0, r0, r9, ror #28
   13548:	strdeq	r2, [r1], -r0
   1354c:	ldrdeq	r2, [r1], -r0
   13550:	andeq	r2, r1, r8, ror #1
   13554:	ldrdeq	r2, [r1], -ip
   13558:	andeq	r1, r1, r0, ror #31
   1355c:			; <UNDEFINED> instruction: 0x00011fb8
   13560:	andeq	r1, r1, r0, asr #31
   13564:	andeq	r2, r1, ip, ror #2
   13568:	andeq	r2, r1, r8, asr r1
   1356c:	andeq	r0, r0, r9, lsr #27
   13570:	andeq	r2, r1, r4, lsr r1
   13574:	andeq	r2, r1, ip, asr #32
   13578:	andeq	r2, r1, r4, lsl r1
   1357c:	andeq	r2, r1, ip, ror r0
   13580:	andeq	r2, r1, r8, rrx
   13584:	andeq	r2, r1, ip, asr r0
   13588:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1358c:	andeq	r2, r1, ip, lsr #32
   13590:	andeq	r2, r1, r8
   13594:	andeq	r1, r1, r0, asr lr
   13598:	andeq	r1, r1, r8, lsr #30
   1359c:	andeq	r0, r0, sp, lsl #23
   135a0:	andeq	r1, r1, ip, lsl #30
   135a4:	andeq	r1, r1, ip, lsl #27
   135a8:	andeq	r1, r1, r8, asr #26
   135ac:	andeq	r1, r0, r3, lsr #32
   135b0:	andeq	r1, r0, r0, lsr r0
   135b4:	andeq	r1, r1, r8, lsr sp
   135b8:	andeq	r1, r1, r4, ror #27
   135bc:	strdeq	r1, [r1], -r8
   135c0:	andeq	r0, r0, sp, asr r9
   135c4:	strdeq	r1, [r1], -ip
   135c8:	andeq	r0, r0, r5, lsl pc
   135cc:	ldrdeq	r1, [r1], -ip
   135d0:	muleq	r1, ip, sp
   135d4:	muleq	r1, r4, sp
   135d8:	andeq	r1, r1, r0, ror #26
   135dc:	andeq	r0, r0, r5, asr #19
   135e0:			; <UNDEFINED> instruction: 0x00011dbc
   135e4:	andeq	r1, r1, ip, lsl sp
   135e8:	andeq	r0, r0, r1, lsl #19

000135ec <getopt_long@@Base>:
   135ec:	push	{fp, lr}
   135f0:	mov	fp, sp
   135f4:	sub	sp, sp, #8
   135f8:	mov	ip, #1
   135fc:	str	ip, [sp, #4]
   13600:	ldr	ip, [fp, #8]
   13604:	str	ip, [sp]
   13608:	bl	12ea4 <getopt@@Base+0x28>
   1360c:	mov	sp, fp
   13610:	pop	{fp, pc}

00013614 <getopt_long_only@@Base>:
   13614:	push	{fp, lr}
   13618:	mov	fp, sp
   1361c:	sub	sp, sp, #8
   13620:	mov	ip, #5
   13624:	str	ip, [sp, #4]
   13628:	ldr	ip, [fp, #8]
   1362c:	str	ip, [sp]
   13630:	bl	12ea4 <getopt@@Base+0x28>
   13634:	mov	sp, fp
   13638:	pop	{fp, pc}
   1363c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13640:	add	fp, sp, #28
   13644:	sub	sp, sp, #4
   13648:	mov	r4, r3
   1364c:	mov	r5, r2
   13650:	mov	r8, r1
   13654:	mov	r9, r0
   13658:	sub	sl, r1, r0
   1365c:	sub	r6, r2, r1
   13660:	mov	r0, sl
   13664:	mov	r1, r6
   13668:	bl	13b28 <getopt_long_only@@Base+0x514>
   1366c:	cmp	r0, #1
   13670:	blt	136c8 <getopt_long_only@@Base+0xb4>
   13674:	sub	r1, r5, r9
   13678:	sdiv	ip, r1, r0
   1367c:	mov	lr, #0
   13680:	cmp	ip, #1
   13684:	blt	136bc <getopt_long_only@@Base+0xa8>
   13688:	add	r2, lr, r8
   1368c:	mov	r1, ip
   13690:	mov	r3, r2
   13694:	cmp	r3, r8
   13698:	mov	r7, r6
   1369c:	rsbge	r7, sl, #0
   136a0:	add	r3, r7, r3
   136a4:	ldr	r7, [r4, r3, lsl #2]
   136a8:	ldr	r5, [r4, r2, lsl #2]
   136ac:	str	r5, [r4, r3, lsl #2]
   136b0:	str	r7, [r4, r2, lsl #2]
   136b4:	subs	r1, r1, #1
   136b8:	bne	13694 <getopt_long_only@@Base+0x80>
   136bc:	add	lr, lr, #1
   136c0:	cmp	lr, r0
   136c4:	bne	13680 <getopt_long_only@@Base+0x6c>
   136c8:	sub	sp, fp, #28
   136cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136d4:	add	fp, sp, #28
   136d8:	sub	sp, sp, #36	; 0x24
   136dc:	mov	r6, r2
   136e0:	mov	r5, r1
   136e4:	ldr	r2, [pc, #996]	; 13ad0 <getopt_long_only@@Base+0x4bc>
   136e8:	ldr	r2, [pc, r2]
   136ec:	ldr	r4, [pc, #992]	; 13ad4 <getopt_long_only@@Base+0x4c0>
   136f0:	ldr	r4, [pc, r4]
   136f4:	cmp	r2, #2
   136f8:	str	r3, [sp, #16]
   136fc:	str	r0, [sp, #4]
   13700:	bhi	13714 <getopt_long_only@@Base+0x100>
   13704:	ldr	r1, [pc, #976]	; 13adc <getopt_long_only@@Base+0x4c8>
   13708:	add	r1, pc, r1
   1370c:	ldr	r9, [r1, r2, lsl #2]
   13710:	b	1371c <getopt_long_only@@Base+0x108>
   13714:	ldr	r9, [pc, #956]	; 13ad8 <getopt_long_only@@Base+0x4c4>
   13718:	add	r9, pc, r9
   1371c:	ldr	r0, [pc, #956]	; 13ae0 <getopt_long_only@@Base+0x4cc>
   13720:	ldr	r0, [pc, r0]
   13724:	ldr	r1, [r0]
   13728:	str	r1, [sp, #24]
   1372c:	add	r2, r1, #1
   13730:	str	r2, [sp]
   13734:	str	r2, [r0]
   13738:	mov	r0, r4
   1373c:	mov	r1, #61	; 0x3d
   13740:	bl	11008 <strchr@plt>
   13744:	cmp	r0, #0
   13748:	beq	13758 <getopt_long_only@@Base+0x144>
   1374c:	sub	r7, r0, r4
   13750:	add	r0, r0, #1
   13754:	b	13768 <getopt_long_only@@Base+0x154>
   13758:	mov	r0, r4
   1375c:	bl	10ffc <strlen@plt>
   13760:	mov	r7, r0
   13764:	mov	r0, #0
   13768:	ldr	r1, [fp, #8]
   1376c:	ldr	r8, [r6]
   13770:	cmp	r8, #0
   13774:	beq	13928 <getopt_long_only@@Base+0x314>
   13778:	str	r0, [sp, #8]
   1377c:	str	r9, [sp, #12]
   13780:	str	r5, [sp, #20]
   13784:	ldr	r0, [fp, #12]
   13788:	cmp	r1, #0
   1378c:	movwne	r1, #1
   13790:	sub	r2, r7, #1
   13794:	clz	r2, r2
   13798:	lsr	r2, r2, #5
   1379c:	and	r5, r1, r2
   137a0:	and	r0, r0, #4
   137a4:	str	r0, [sp, #28]
   137a8:	mvn	sl, #0
   137ac:	mov	r0, #0
   137b0:	str	r0, [sp, #32]
   137b4:	mov	r9, #0
   137b8:	mov	r0, r4
   137bc:	mov	r1, r8
   137c0:	mov	r2, r7
   137c4:	bl	110e0 <strncmp@plt>
   137c8:	cmp	r0, #0
   137cc:	bne	13844 <getopt_long_only@@Base+0x230>
   137d0:	mov	r0, r8
   137d4:	bl	10ffc <strlen@plt>
   137d8:	cmp	r0, r7
   137dc:	beq	138a4 <getopt_long_only@@Base+0x290>
   137e0:	cmp	r5, #0
   137e4:	bne	13844 <getopt_long_only@@Base+0x230>
   137e8:	cmn	sl, #1
   137ec:	beq	13840 <getopt_long_only@@Base+0x22c>
   137f0:	ldr	r0, [sp, #28]
   137f4:	cmp	r0, #0
   137f8:	bne	13834 <getopt_long_only@@Base+0x220>
   137fc:	add	r0, r6, sl, lsl #4
   13800:	ldr	r2, [r0, #4]
   13804:	add	r1, r6, r9, lsl #4
   13808:	ldr	r3, [r1, #4]
   1380c:	cmp	r3, r2
   13810:	bne	13834 <getopt_long_only@@Base+0x220>
   13814:	ldr	r2, [r0, #8]
   13818:	ldr	r3, [r1, #8]
   1381c:	cmp	r3, r2
   13820:	bne	13834 <getopt_long_only@@Base+0x220>
   13824:	ldr	r0, [r0, #12]
   13828:	ldr	r1, [r1, #12]
   1382c:	cmp	r1, r0
   13830:	beq	13844 <getopt_long_only@@Base+0x230>
   13834:	mov	r0, #1
   13838:	str	r0, [sp, #32]
   1383c:	b	13844 <getopt_long_only@@Base+0x230>
   13840:	mov	sl, r9
   13844:	add	r0, r6, r9, lsl #4
   13848:	ldr	r8, [r0, #16]
   1384c:	add	r9, r9, #1
   13850:	cmp	r8, #0
   13854:	bne	137b8 <getopt_long_only@@Base+0x1a4>
   13858:	ldr	r0, [sp, #32]
   1385c:	cmp	r0, #0
   13860:	beq	138b8 <getopt_long_only@@Base+0x2a4>
   13864:	ldr	r0, [pc, #632]	; 13ae4 <getopt_long_only@@Base+0x4d0>
   13868:	ldr	r0, [pc, r0]
   1386c:	ldr	r0, [r0]
   13870:	cmp	r0, #0
   13874:	beq	13968 <getopt_long_only@@Base+0x354>
   13878:	ldr	r0, [sp, #20]
   1387c:	ldrb	r0, [r0]
   13880:	cmp	r0, #58	; 0x3a
   13884:	beq	13968 <getopt_long_only@@Base+0x354>
   13888:	ldr	r0, [pc, #600]	; 13ae8 <getopt_long_only@@Base+0x4d4>
   1388c:	add	r0, pc, r0
   13890:	ldr	r1, [sp, #12]
   13894:	mov	r2, r7
   13898:	mov	r3, r4
   1389c:	bl	11014 <warnx@plt>
   138a0:	b	13968 <getopt_long_only@@Base+0x354>
   138a4:	mov	sl, r9
   138a8:	ldr	r5, [sp, #20]
   138ac:	ldr	r9, [sp, #12]
   138b0:	ldr	r2, [sp, #8]
   138b4:	b	138d0 <getopt_long_only@@Base+0x2bc>
   138b8:	cmn	sl, #1
   138bc:	ldr	r5, [sp, #20]
   138c0:	ldr	r9, [sp, #12]
   138c4:	ldr	r2, [sp, #8]
   138c8:	ldr	r1, [fp, #8]
   138cc:	beq	13928 <getopt_long_only@@Base+0x314>
   138d0:	add	r6, r6, sl, lsl #4
   138d4:	mov	r0, r6
   138d8:	ldr	r1, [r0, #4]!
   138dc:	cmp	r2, #0
   138e0:	beq	13984 <getopt_long_only@@Base+0x370>
   138e4:	cmp	r1, #0
   138e8:	bne	13984 <getopt_long_only@@Base+0x370>
   138ec:	ldr	r0, [pc, #508]	; 13af0 <getopt_long_only@@Base+0x4dc>
   138f0:	ldr	r0, [pc, r0]
   138f4:	ldr	r0, [r0]
   138f8:	cmp	r0, #0
   138fc:	ldrbne	r0, [r5]
   13900:	cmpne	r0, #58	; 0x3a
   13904:	bne	139c4 <getopt_long_only@@Base+0x3b0>
   13908:	ldr	r1, [r6, #8]
   1390c:	mov	r0, #0
   13910:	cmp	r1, #0
   13914:	ldreq	r0, [r6, #12]
   13918:	ldr	r1, [pc, #472]	; 13af8 <getopt_long_only@@Base+0x4e4>
   1391c:	ldr	r1, [pc, r1]
   13920:	str	r0, [r1]
   13924:	b	13978 <getopt_long_only@@Base+0x364>
   13928:	cmp	r1, #0
   1392c:	beq	1394c <getopt_long_only@@Base+0x338>
   13930:	ldr	r0, [pc, #484]	; 13b1c <getopt_long_only@@Base+0x508>
   13934:	ldr	r0, [pc, r0]
   13938:	ldr	r1, [sp, #24]
   1393c:	str	r1, [r0]
   13940:	mvn	r0, #0
   13944:	sub	sp, fp, #28
   13948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1394c:	ldr	r0, [pc, #460]	; 13b20 <getopt_long_only@@Base+0x50c>
   13950:	ldr	r0, [pc, r0]
   13954:	ldr	r0, [r0]
   13958:	cmp	r0, #0
   1395c:	ldrbne	r0, [r5]
   13960:	cmpne	r0, #58	; 0x3a
   13964:	bne	139ac <getopt_long_only@@Base+0x398>
   13968:	ldr	r0, [pc, #380]	; 13aec <getopt_long_only@@Base+0x4d8>
   1396c:	ldr	r0, [pc, r0]
   13970:	mov	r1, #0
   13974:	str	r1, [r0]
   13978:	mov	r0, #63	; 0x3f
   1397c:	sub	sp, fp, #28
   13980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13984:	sub	r2, r1, #1
   13988:	cmp	r2, #1
   1398c:	bhi	13a14 <getopt_long_only@@Base+0x400>
   13990:	ldr	r2, [sp, #8]
   13994:	cmp	r2, #0
   13998:	beq	139e0 <getopt_long_only@@Base+0x3cc>
   1399c:	ldr	r1, [pc, #344]	; 13afc <getopt_long_only@@Base+0x4e8>
   139a0:	ldr	r1, [pc, r1]
   139a4:	str	r2, [r1]
   139a8:	b	13a14 <getopt_long_only@@Base+0x400>
   139ac:	ldr	r0, [pc, #368]	; 13b24 <getopt_long_only@@Base+0x510>
   139b0:	add	r0, pc, r0
   139b4:	mov	r1, r9
   139b8:	mov	r2, r4
   139bc:	bl	11014 <warnx@plt>
   139c0:	b	13968 <getopt_long_only@@Base+0x354>
   139c4:	ldr	r0, [pc, #296]	; 13af4 <getopt_long_only@@Base+0x4e0>
   139c8:	add	r0, pc, r0
   139cc:	mov	r1, r9
   139d0:	mov	r2, r7
   139d4:	mov	r3, r4
   139d8:	bl	11014 <warnx@plt>
   139dc:	b	13908 <getopt_long_only@@Base+0x2f4>
   139e0:	cmp	r1, #1
   139e4:	bne	13a14 <getopt_long_only@@Base+0x400>
   139e8:	ldr	r1, [sp, #24]
   139ec:	add	r1, r1, #2
   139f0:	ldr	r2, [pc, #264]	; 13b00 <getopt_long_only@@Base+0x4ec>
   139f4:	ldr	r2, [pc, r2]
   139f8:	str	r1, [r2]
   139fc:	ldr	r1, [sp, #4]
   13a00:	ldr	r2, [sp]
   13a04:	ldr	r1, [r1, r2, lsl #2]
   13a08:	ldr	r2, [pc, #244]	; 13b04 <getopt_long_only@@Base+0x4f0>
   13a0c:	ldr	r2, [pc, r2]
   13a10:	str	r1, [r2]
   13a14:	ldr	r0, [r0]
   13a18:	cmp	r0, #1
   13a1c:	ldreq	r0, [pc, #228]	; 13b08 <getopt_long_only@@Base+0x4f4>
   13a20:	ldreq	r0, [pc, r0]
   13a24:	ldreq	r0, [r0]
   13a28:	cmpeq	r0, #0
   13a2c:	beq	13a58 <getopt_long_only@@Base+0x444>
   13a30:	ldr	r0, [sp, #16]
   13a34:	cmp	r0, #0
   13a38:	strne	sl, [r0]
   13a3c:	ldr	r1, [r6, #8]
   13a40:	ldr	r0, [r6, #12]
   13a44:	cmp	r1, #0
   13a48:	strne	r0, [r1]
   13a4c:	movne	r0, #0
   13a50:	sub	sp, fp, #28
   13a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a58:	ldr	r0, [pc, #172]	; 13b0c <getopt_long_only@@Base+0x4f8>
   13a5c:	ldr	r0, [pc, r0]
   13a60:	ldr	r0, [r0]
   13a64:	cmp	r0, #0
   13a68:	ldrbne	r0, [r5]
   13a6c:	cmpne	r0, #58	; 0x3a
   13a70:	beq	13a88 <getopt_long_only@@Base+0x474>
   13a74:	ldr	r0, [pc, #148]	; 13b10 <getopt_long_only@@Base+0x4fc>
   13a78:	add	r0, pc, r0
   13a7c:	mov	r1, r9
   13a80:	mov	r2, r4
   13a84:	bl	11014 <warnx@plt>
   13a88:	ldr	r1, [r6, #8]
   13a8c:	mov	r0, #0
   13a90:	cmp	r1, #0
   13a94:	ldreq	r0, [r6, #12]
   13a98:	ldr	r1, [pc, #116]	; 13b14 <getopt_long_only@@Base+0x500>
   13a9c:	ldr	r1, [pc, r1]
   13aa0:	str	r0, [r1]
   13aa4:	ldr	r0, [pc, #108]	; 13b18 <getopt_long_only@@Base+0x504>
   13aa8:	ldr	r0, [pc, r0]
   13aac:	mov	r1, r0
   13ab0:	ldr	r0, [r0]
   13ab4:	sub	r0, r0, #1
   13ab8:	str	r0, [r1]
   13abc:	ldrb	r0, [r5]
   13ac0:	cmp	r0, #58	; 0x3a
   13ac4:	movwne	r0, #63	; 0x3f
   13ac8:	sub	sp, fp, #28
   13acc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ad0:	ldrdeq	r1, [r1], -r8
   13ad4:	andeq	r1, r1, ip, asr #21
   13ad8:	andeq	r0, r0, r1, lsl r7
   13adc:	ldrdeq	r1, [r1], -ip
   13ae0:			; <UNDEFINED> instruction: 0x000119bc
   13ae4:	andeq	r1, r1, ip, ror #16
   13ae8:	muleq	r0, pc, fp	; <UNPREDICTABLE>
   13aec:	andeq	r1, r1, r4, ror r7
   13af0:	andeq	r1, r1, r4, ror #15
   13af4:	andeq	r0, r0, r0, lsl #21
   13af8:	andeq	r1, r1, r4, asr #15
   13afc:	andeq	r1, r1, r4, asr #14
   13b00:	andeq	r1, r1, r8, ror #13
   13b04:	ldrdeq	r1, [r1], -r8
   13b08:	andeq	r1, r1, r4, asr #13
   13b0c:	andeq	r1, r1, r8, ror r6
   13b10:	strdeq	r0, [r0], -sl
   13b14:	andeq	r1, r1, r4, asr #12
   13b18:	andeq	r1, r1, r4, lsr r6
   13b1c:	andeq	r1, r1, r8, lsr #15
   13b20:	andeq	r1, r1, r4, lsl #15
   13b24:	andeq	r0, r0, r5, ror #21
   13b28:	sdiv	r2, r0, r1
   13b2c:	mls	r2, r2, r1, r0
   13b30:	cmp	r2, #0
   13b34:	moveq	r0, r1
   13b38:	bxeq	lr
   13b3c:	mov	r0, r2
   13b40:	sdiv	r2, r1, r2
   13b44:	mls	r2, r2, r0, r1
   13b48:	cmp	r2, #0
   13b4c:	mov	r1, r0
   13b50:	bne	13b3c <getopt_long_only@@Base+0x528>
   13b54:	bx	lr
   13b58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b5c:	mov	r7, r0
   13b60:	ldr	r6, [pc, #72]	; 13bb0 <getopt_long_only@@Base+0x59c>
   13b64:	ldr	r5, [pc, #72]	; 13bb4 <getopt_long_only@@Base+0x5a0>
   13b68:	add	r6, pc, r6
   13b6c:	add	r5, pc, r5
   13b70:	sub	r6, r6, r5
   13b74:	mov	r8, r1
   13b78:	mov	r9, r2
   13b7c:	bl	10e8c <Mat_VarGetNumberOfFields@plt-0x20>
   13b80:	asrs	r6, r6, #2
   13b84:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b88:	mov	r4, #0
   13b8c:	add	r4, r4, #1
   13b90:	ldr	r3, [r5], #4
   13b94:	mov	r2, r9
   13b98:	mov	r1, r8
   13b9c:	mov	r0, r7
   13ba0:	blx	r3
   13ba4:	cmp	r6, r4
   13ba8:	bne	13b8c <getopt_long_only@@Base+0x578>
   13bac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13bb0:	andeq	r1, r1, r8, ror r3
   13bb4:	andeq	r1, r1, r0, ror r3
   13bb8:	bx	lr

Disassembly of section .fini:

00013bbc <.fini>:
   13bbc:	push	{r3, lr}
   13bc0:	pop	{r3, pc}
