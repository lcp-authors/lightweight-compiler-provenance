
../repos/prog2/0.2:     file format elf32-littlearm


Disassembly of section .init:

000105c4 <.init>:
   105c4:	push	{r3, lr}
   105c8:	bl	10a1c <_start@@Base+0x3c>
   105cc:	pop	{r3, pc}

Disassembly of section .plt:

000105d0 <printf@plt-0x14>:
   105d0:	push	{lr}		; (str lr, [sp, #-4]!)
   105d4:	ldr	lr, [pc, #4]	; 105e0 <printf@plt-0x4>
   105d8:	add	lr, pc, lr
   105dc:	ldr	pc, [lr, #8]!
   105e0:	andeq	r0, r1, r0, lsr #20

000105e4 <printf@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #16, 20	; 0x10000
   105ec:	ldr	pc, [ip, #2592]!	; 0xa20

000105f0 <puts@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #16, 20	; 0x10000
   105f8:	ldr	pc, [ip, #2584]!	; 0xa18

000105fc <__libc_start_main@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #16, 20	; 0x10000
   10604:	ldr	pc, [ip, #2576]!	; 0xa10

00010608 <__gmon_start__@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2568]!	; 0xa08

00010614 <putchar@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #16, 20	; 0x10000
   1061c:	ldr	pc, [ip, #2560]!	; 0xa00

00010620 <__isoc99_scanf@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #16, 20	; 0x10000
   10628:	ldr	pc, [ip, #2552]!	; 0x9f8

0001062c <abort@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #16, 20	; 0x10000
   10634:	ldr	pc, [ip, #2544]!	; 0x9f0

Disassembly of section .text:

00010638 <main@@Base>:
   10638:	push	{r4, r5, r6, r7, lr}
   1063c:	sub	sp, sp, #44	; 0x2c
   10640:	mov	r4, #0
   10644:	ldr	r0, [pc, #892]	; 109c8 <main@@Base+0x390>
   10648:	str	r4, [sp, #4]
   1064c:	str	r4, [sp]
   10650:	str	r4, [sp, #8]
   10654:	str	r4, [sp, #12]
   10658:	str	r4, [sp, #16]
   1065c:	str	r4, [sp, #20]
   10660:	str	r4, [sp, #24]
   10664:	str	r4, [sp, #28]
   10668:	str	r4, [sp, #32]
   1066c:	str	r4, [sp, #36]	; 0x24
   10670:	bl	105f0 <puts@plt>
   10674:	ldr	r7, [pc, #848]	; 109cc <main@@Base+0x394>
   10678:	ldr	r6, [pc, #848]	; 109d0 <main@@Base+0x398>
   1067c:	mov	r5, sp
   10680:	add	r4, r4, #1
   10684:	mov	r1, r4
   10688:	mov	r0, r7
   1068c:	bl	105e4 <printf@plt>
   10690:	mov	r1, r5
   10694:	mov	r0, r6
   10698:	bl	10620 <__isoc99_scanf@plt>
   1069c:	cmp	r4, #5
   106a0:	add	r5, r5, #4
   106a4:	bne	10680 <main@@Base+0x48>
   106a8:	ldr	r0, [pc, #804]	; 109d4 <main@@Base+0x39c>
   106ac:	bl	105f0 <puts@plt>
   106b0:	ldr	r7, [pc, #788]	; 109cc <main@@Base+0x394>
   106b4:	ldr	r6, [pc, #788]	; 109d0 <main@@Base+0x398>
   106b8:	add	r4, sp, #20
   106bc:	mov	r5, #0
   106c0:	add	r5, r5, #1
   106c4:	mov	r1, r5
   106c8:	mov	r0, r7
   106cc:	bl	105e4 <printf@plt>
   106d0:	mov	r1, r4
   106d4:	mov	r0, r6
   106d8:	bl	10620 <__isoc99_scanf@plt>
   106dc:	cmp	r5, #5
   106e0:	add	r4, r4, #4
   106e4:	bne	106c0 <main@@Base+0x88>
   106e8:	mov	r0, #10
   106ec:	bl	10614 <putchar@plt>
   106f0:	ldr	r0, [pc, #736]	; 109d8 <main@@Base+0x3a0>
   106f4:	bl	105e4 <printf@plt>
   106f8:	ldr	r1, [sp]
   106fc:	ldr	r3, [sp, #20]
   10700:	cmp	r3, r1
   10704:	beq	1084c <main@@Base+0x214>
   10708:	ldr	r3, [sp, #24]
   1070c:	cmp	r3, r1
   10710:	beq	1085c <main@@Base+0x224>
   10714:	ldr	r3, [sp, #28]
   10718:	cmp	r1, r3
   1071c:	beq	1086c <main@@Base+0x234>
   10720:	ldr	r3, [sp, #32]
   10724:	cmp	r1, r3
   10728:	beq	1087c <main@@Base+0x244>
   1072c:	ldr	r3, [sp, #36]	; 0x24
   10730:	cmp	r1, r3
   10734:	beq	1088c <main@@Base+0x254>
   10738:	ldr	r1, [sp, #4]
   1073c:	ldr	r3, [sp, #20]
   10740:	cmp	r1, r3
   10744:	beq	10898 <main@@Base+0x260>
   10748:	ldr	r3, [sp, #24]
   1074c:	cmp	r1, r3
   10750:	beq	108a8 <main@@Base+0x270>
   10754:	ldr	r3, [sp, #28]
   10758:	cmp	r1, r3
   1075c:	beq	108b8 <main@@Base+0x280>
   10760:	ldr	r3, [sp, #32]
   10764:	cmp	r1, r3
   10768:	beq	108c8 <main@@Base+0x290>
   1076c:	ldr	r3, [sp, #36]	; 0x24
   10770:	cmp	r1, r3
   10774:	beq	108d8 <main@@Base+0x2a0>
   10778:	ldr	r1, [sp, #8]
   1077c:	ldr	r3, [sp, #20]
   10780:	cmp	r1, r3
   10784:	beq	108e4 <main@@Base+0x2ac>
   10788:	ldr	r3, [sp, #24]
   1078c:	cmp	r1, r3
   10790:	beq	108f4 <main@@Base+0x2bc>
   10794:	ldr	r3, [sp, #28]
   10798:	cmp	r1, r3
   1079c:	beq	10904 <main@@Base+0x2cc>
   107a0:	ldr	r3, [sp, #32]
   107a4:	cmp	r1, r3
   107a8:	beq	10914 <main@@Base+0x2dc>
   107ac:	ldr	r3, [sp, #36]	; 0x24
   107b0:	cmp	r1, r3
   107b4:	beq	10924 <main@@Base+0x2ec>
   107b8:	ldr	r1, [sp, #12]
   107bc:	ldr	r3, [sp, #20]
   107c0:	cmp	r1, r3
   107c4:	beq	10930 <main@@Base+0x2f8>
   107c8:	ldr	r3, [sp, #24]
   107cc:	cmp	r1, r3
   107d0:	beq	10940 <main@@Base+0x308>
   107d4:	ldr	r3, [sp, #28]
   107d8:	cmp	r1, r3
   107dc:	beq	10950 <main@@Base+0x318>
   107e0:	ldr	r3, [sp, #32]
   107e4:	cmp	r1, r3
   107e8:	beq	10960 <main@@Base+0x328>
   107ec:	ldr	r3, [sp, #36]	; 0x24
   107f0:	cmp	r1, r3
   107f4:	beq	10970 <main@@Base+0x338>
   107f8:	ldr	r1, [sp, #16]
   107fc:	ldr	r3, [sp, #20]
   10800:	cmp	r1, r3
   10804:	beq	1097c <main@@Base+0x344>
   10808:	ldr	r3, [sp, #24]
   1080c:	cmp	r1, r3
   10810:	beq	1098c <main@@Base+0x354>
   10814:	ldr	r3, [sp, #28]
   10818:	cmp	r3, r1
   1081c:	beq	1099c <main@@Base+0x364>
   10820:	ldr	r3, [sp, #32]
   10824:	cmp	r3, r1
   10828:	beq	109ac <main@@Base+0x374>
   1082c:	ldr	r3, [sp, #36]	; 0x24
   10830:	cmp	r3, r1
   10834:	beq	109bc <main@@Base+0x384>
   10838:	mov	r0, #10
   1083c:	bl	10614 <putchar@plt>
   10840:	mov	r0, #0
   10844:	add	sp, sp, #44	; 0x2c
   10848:	pop	{r4, r5, r6, r7, pc}
   1084c:	ldr	r0, [pc, #392]	; 109dc <main@@Base+0x3a4>
   10850:	bl	105e4 <printf@plt>
   10854:	ldr	r1, [sp]
   10858:	b	10708 <main@@Base+0xd0>
   1085c:	ldr	r0, [pc, #376]	; 109dc <main@@Base+0x3a4>
   10860:	bl	105e4 <printf@plt>
   10864:	ldr	r1, [sp]
   10868:	b	10714 <main@@Base+0xdc>
   1086c:	ldr	r0, [pc, #360]	; 109dc <main@@Base+0x3a4>
   10870:	bl	105e4 <printf@plt>
   10874:	ldr	r1, [sp]
   10878:	b	10720 <main@@Base+0xe8>
   1087c:	ldr	r0, [pc, #344]	; 109dc <main@@Base+0x3a4>
   10880:	bl	105e4 <printf@plt>
   10884:	ldr	r1, [sp]
   10888:	b	1072c <main@@Base+0xf4>
   1088c:	ldr	r0, [pc, #328]	; 109dc <main@@Base+0x3a4>
   10890:	bl	105e4 <printf@plt>
   10894:	b	10738 <main@@Base+0x100>
   10898:	ldr	r0, [pc, #316]	; 109dc <main@@Base+0x3a4>
   1089c:	bl	105e4 <printf@plt>
   108a0:	ldr	r1, [sp, #4]
   108a4:	b	10748 <main@@Base+0x110>
   108a8:	ldr	r0, [pc, #300]	; 109dc <main@@Base+0x3a4>
   108ac:	bl	105e4 <printf@plt>
   108b0:	ldr	r1, [sp, #4]
   108b4:	b	10754 <main@@Base+0x11c>
   108b8:	ldr	r0, [pc, #284]	; 109dc <main@@Base+0x3a4>
   108bc:	bl	105e4 <printf@plt>
   108c0:	ldr	r1, [sp, #4]
   108c4:	b	10760 <main@@Base+0x128>
   108c8:	ldr	r0, [pc, #268]	; 109dc <main@@Base+0x3a4>
   108cc:	bl	105e4 <printf@plt>
   108d0:	ldr	r1, [sp, #4]
   108d4:	b	1076c <main@@Base+0x134>
   108d8:	ldr	r0, [pc, #252]	; 109dc <main@@Base+0x3a4>
   108dc:	bl	105e4 <printf@plt>
   108e0:	b	10778 <main@@Base+0x140>
   108e4:	ldr	r0, [pc, #240]	; 109dc <main@@Base+0x3a4>
   108e8:	bl	105e4 <printf@plt>
   108ec:	ldr	r1, [sp, #8]
   108f0:	b	10788 <main@@Base+0x150>
   108f4:	ldr	r0, [pc, #224]	; 109dc <main@@Base+0x3a4>
   108f8:	bl	105e4 <printf@plt>
   108fc:	ldr	r1, [sp, #8]
   10900:	b	10794 <main@@Base+0x15c>
   10904:	ldr	r0, [pc, #208]	; 109dc <main@@Base+0x3a4>
   10908:	bl	105e4 <printf@plt>
   1090c:	ldr	r1, [sp, #8]
   10910:	b	107a0 <main@@Base+0x168>
   10914:	ldr	r0, [pc, #192]	; 109dc <main@@Base+0x3a4>
   10918:	bl	105e4 <printf@plt>
   1091c:	ldr	r1, [sp, #8]
   10920:	b	107ac <main@@Base+0x174>
   10924:	ldr	r0, [pc, #176]	; 109dc <main@@Base+0x3a4>
   10928:	bl	105e4 <printf@plt>
   1092c:	b	107b8 <main@@Base+0x180>
   10930:	ldr	r0, [pc, #164]	; 109dc <main@@Base+0x3a4>
   10934:	bl	105e4 <printf@plt>
   10938:	ldr	r1, [sp, #12]
   1093c:	b	107c8 <main@@Base+0x190>
   10940:	ldr	r0, [pc, #148]	; 109dc <main@@Base+0x3a4>
   10944:	bl	105e4 <printf@plt>
   10948:	ldr	r1, [sp, #12]
   1094c:	b	107d4 <main@@Base+0x19c>
   10950:	ldr	r0, [pc, #132]	; 109dc <main@@Base+0x3a4>
   10954:	bl	105e4 <printf@plt>
   10958:	ldr	r1, [sp, #12]
   1095c:	b	107e0 <main@@Base+0x1a8>
   10960:	ldr	r0, [pc, #116]	; 109dc <main@@Base+0x3a4>
   10964:	bl	105e4 <printf@plt>
   10968:	ldr	r1, [sp, #12]
   1096c:	b	107ec <main@@Base+0x1b4>
   10970:	ldr	r0, [pc, #100]	; 109dc <main@@Base+0x3a4>
   10974:	bl	105e4 <printf@plt>
   10978:	b	107f8 <main@@Base+0x1c0>
   1097c:	ldr	r0, [pc, #88]	; 109dc <main@@Base+0x3a4>
   10980:	bl	105e4 <printf@plt>
   10984:	ldr	r1, [sp, #16]
   10988:	b	10808 <main@@Base+0x1d0>
   1098c:	ldr	r0, [pc, #72]	; 109dc <main@@Base+0x3a4>
   10990:	bl	105e4 <printf@plt>
   10994:	ldr	r1, [sp, #16]
   10998:	b	10814 <main@@Base+0x1dc>
   1099c:	ldr	r0, [pc, #56]	; 109dc <main@@Base+0x3a4>
   109a0:	bl	105e4 <printf@plt>
   109a4:	ldr	r1, [sp, #16]
   109a8:	b	10820 <main@@Base+0x1e8>
   109ac:	ldr	r0, [pc, #40]	; 109dc <main@@Base+0x3a4>
   109b0:	bl	105e4 <printf@plt>
   109b4:	ldr	r1, [sp, #16]
   109b8:	b	1082c <main@@Base+0x1f4>
   109bc:	ldr	r0, [pc, #24]	; 109dc <main@@Base+0x3a4>
   109c0:	bl	105e4 <printf@plt>
   109c4:	b	10838 <main@@Base+0x200>
   109c8:	andeq	r0, r1, r8, ror fp
   109cc:	andeq	r0, r1, r4, lsl #23
   109d0:	muleq	r1, ip, fp
   109d4:	andeq	r0, r1, r0, lsr #23
   109d8:	andeq	r0, r1, ip, lsr #23
   109dc:			; <UNDEFINED> instruction: 0x00010bb4

000109e0 <_start@@Base>:
   109e0:	mov	fp, #0
   109e4:	mov	lr, #0
   109e8:	pop	{r1}		; (ldr r1, [sp], #4)
   109ec:	mov	r2, sp
   109f0:	push	{r2}		; (str r2, [sp, #-4]!)
   109f4:	push	{r0}		; (str r0, [sp, #-4]!)
   109f8:	ldr	ip, [pc, #16]	; 10a10 <_start@@Base+0x30>
   109fc:	push	{ip}		; (str ip, [sp, #-4]!)
   10a00:	ldr	r0, [pc, #12]	; 10a14 <_start@@Base+0x34>
   10a04:	ldr	r3, [pc, #12]	; 10a18 <_start@@Base+0x38>
   10a08:	bl	105fc <__libc_start_main@plt>
   10a0c:	bl	1062c <abort@plt>
   10a10:	andeq	r0, r1, r8, ror #22
   10a14:	andeq	r0, r1, r8, lsr r6
   10a18:	andeq	r0, r1, r8, lsl #22
   10a1c:	ldr	r3, [pc, #20]	; 10a38 <_start@@Base+0x58>
   10a20:	ldr	r2, [pc, #20]	; 10a3c <_start@@Base+0x5c>
   10a24:	add	r3, pc, r3
   10a28:	ldr	r2, [r3, r2]
   10a2c:	cmp	r2, #0
   10a30:	bxeq	lr
   10a34:	b	10608 <__gmon_start__@plt>
   10a38:	ldrdeq	r0, [r1], -r4
   10a3c:	andeq	r0, r0, r8, lsr #32
   10a40:	ldr	r3, [pc, #28]	; 10a64 <_start@@Base+0x84>
   10a44:	ldr	r0, [pc, #28]	; 10a68 <_start@@Base+0x88>
   10a48:	sub	r3, r3, r0
   10a4c:	cmp	r3, #6
   10a50:	bxls	lr
   10a54:	ldr	r3, [pc, #16]	; 10a6c <_start@@Base+0x8c>
   10a58:	cmp	r3, #0
   10a5c:	bxeq	lr
   10a60:	bx	r3
   10a64:	andeq	r1, r2, r7, lsr r0
   10a68:	andeq	r1, r2, r4, lsr r0
   10a6c:	andeq	r0, r0, r0
   10a70:	ldr	r1, [pc, #36]	; 10a9c <_start@@Base+0xbc>
   10a74:	ldr	r0, [pc, #36]	; 10aa0 <_start@@Base+0xc0>
   10a78:	sub	r1, r1, r0
   10a7c:	asr	r1, r1, #2
   10a80:	add	r1, r1, r1, lsr #31
   10a84:	asrs	r1, r1, #1
   10a88:	bxeq	lr
   10a8c:	ldr	r3, [pc, #16]	; 10aa4 <_start@@Base+0xc4>
   10a90:	cmp	r3, #0
   10a94:	bxeq	lr
   10a98:	bx	r3
   10a9c:	andeq	r1, r2, r4, lsr r0
   10aa0:	andeq	r1, r2, r4, lsr r0
   10aa4:	andeq	r0, r0, r0
   10aa8:	push	{r4, lr}
   10aac:	ldr	r4, [pc, #24]	; 10acc <_start@@Base+0xec>
   10ab0:	ldrb	r3, [r4]
   10ab4:	cmp	r3, #0
   10ab8:	popne	{r4, pc}
   10abc:	bl	10a40 <_start@@Base+0x60>
   10ac0:	mov	r3, #1
   10ac4:	strb	r3, [r4]
   10ac8:	pop	{r4, pc}
   10acc:	andeq	r1, r2, r4, lsr r0
   10ad0:	ldr	r0, [pc, #40]	; 10b00 <_start@@Base+0x120>
   10ad4:	ldr	r3, [r0]
   10ad8:	cmp	r3, #0
   10adc:	bne	10ae4 <_start@@Base+0x104>
   10ae0:	b	10a70 <_start@@Base+0x90>
   10ae4:	ldr	r3, [pc, #24]	; 10b04 <_start@@Base+0x124>
   10ae8:	cmp	r3, #0
   10aec:	beq	10ae0 <_start@@Base+0x100>
   10af0:	push	{r4, lr}
   10af4:	blx	r3
   10af8:	pop	{r4, lr}
   10afc:	b	10a70 <_start@@Base+0x90>
   10b00:	andeq	r0, r2, r4, lsl pc
   10b04:	andeq	r0, r0, r0

00010b08 <__libc_csu_init@@Base>:
   10b08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b0c:	mov	r7, r0
   10b10:	ldr	r6, [pc, #72]	; 10b60 <__libc_csu_init@@Base+0x58>
   10b14:	ldr	r5, [pc, #72]	; 10b64 <__libc_csu_init@@Base+0x5c>
   10b18:	add	r6, pc, r6
   10b1c:	add	r5, pc, r5
   10b20:	sub	r6, r6, r5
   10b24:	mov	r8, r1
   10b28:	mov	r9, r2
   10b2c:	bl	105c4 <printf@plt-0x20>
   10b30:	asrs	r6, r6, #2
   10b34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b38:	mov	r4, #0
   10b3c:	add	r4, r4, #1
   10b40:	ldr	r3, [r5], #4
   10b44:	mov	r2, r9
   10b48:	mov	r1, r8
   10b4c:	mov	r0, r7
   10b50:	blx	r3
   10b54:	cmp	r6, r4
   10b58:	bne	10b3c <__libc_csu_init@@Base+0x34>
   10b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b60:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10b64:	andeq	r0, r1, r8, ror #7

00010b68 <__libc_csu_fini@@Base>:
   10b68:	bx	lr

Disassembly of section .fini:

00010b6c <.fini>:
   10b6c:	push	{r3, lr}
   10b70:	pop	{r3, pc}
