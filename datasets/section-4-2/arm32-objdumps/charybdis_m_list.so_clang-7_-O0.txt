
../repos/charybdis/modules/.libs/m_list.so:     file format elf32-littlearm


Disassembly of section .init:

00000a7c <_init>:
 a7c:	push	{r3, lr}
 a80:	bl	c04 <call_weak_fn>
 a84:	pop	{r3, pc}

Disassembly of section .plt:

00000a88 <.plt>:
 a88:	push	{lr}		; (str lr, [sp, #-4]!)
 a8c:	ldr	lr, [pc, #4]	; a98 <.plt+0x10>
 a90:	add	lr, pc, lr
 a94:	ldr	pc, [lr, #8]!
 a98:	.word	0x00012568

00000a9c <calloc@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #73728	; 0x12000
 aa4:	ldr	pc, [ip, #1384]!	; 0x568

00000aa8 <delete_isupport@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #73728	; 0x12000
 ab0:	ldr	pc, [ip, #1376]!	; 0x560

00000ab4 <rb_current_time@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #73728	; 0x12000
 abc:	ldr	pc, [ip, #1368]!	; 0x558

00000ac0 <rb_event_add@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #73728	; 0x12000
 ac8:	ldr	pc, [ip, #1360]!	; 0x550

00000acc <__cxa_finalize@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #73728	; 0x12000
 ad4:	ldr	pc, [ip, #1352]!	; 0x548

00000ad8 <sendto_one@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #73728	; 0x12000
 ae0:	ldr	pc, [ip, #1344]!	; 0x540

00000ae4 <rb_event_delete@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #73728	; 0x12000
 aec:	ldr	pc, [ip, #1336]!	; 0x538

00000af0 <free@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #73728	; 0x12000
 af8:	ldr	pc, [ip, #1328]!	; 0x530

00000afc <rb_radixtree_foreach_start_from@plt>:
 afc:	add	ip, pc, #0, 12
 b00:	add	ip, ip, #73728	; 0x12000
 b04:	ldr	pc, [ip, #1320]!	; 0x528

00000b08 <rb_outofmemory@plt>:
 b08:	add	ip, pc, #0, 12
 b0c:	add	ip, ip, #73728	; 0x12000
 b10:	ldr	pc, [ip, #1312]!	; 0x520

00000b14 <rb_radixtree_foreach_next@plt>:
 b14:	add	ip, pc, #0, 12
 b18:	add	ip, ip, #73728	; 0x12000
 b1c:	ldr	pc, [ip, #1304]!	; 0x518

00000b20 <find_channel@plt>:
 b20:	add	ip, pc, #0, 12
 b24:	add	ip, ip, #73728	; 0x12000
 b28:	ldr	pc, [ip, #1296]!	; 0x510

00000b2c <rb_free_rb_dlink_node@plt>:
 b2c:	add	ip, pc, #0, 12
 b30:	add	ip, ip, #73728	; 0x12000
 b34:	ldr	pc, [ip, #1288]!	; 0x508

00000b38 <strcpy@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #73728	; 0x12000
 b40:	ldr	pc, [ip, #1280]!	; 0x500

00000b44 <find_channel_membership@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #73728	; 0x12000
 b4c:	ldr	pc, [ip, #1272]!	; 0x4f8

00000b50 <malloc@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #73728	; 0x12000
 b58:	ldr	pc, [ip, #1264]!	; 0x4f0

00000b5c <__gmon_start__@plt>:
 b5c:	add	ip, pc, #0, 12
 b60:	add	ip, ip, #73728	; 0x12000
 b64:	ldr	pc, [ip, #1256]!	; 0x4e8

00000b68 <rb_make_rb_dlink_node@plt>:
 b68:	add	ip, pc, #0, 12
 b6c:	add	ip, ip, #73728	; 0x12000
 b70:	ldr	pc, [ip, #1248]!	; 0x4e0

00000b74 <get_sendq@plt>:
 b74:	add	ip, pc, #0, 12
 b78:	add	ip, ip, #73728	; 0x12000
 b7c:	ldr	pc, [ip, #1240]!	; 0x4d8

00000b80 <sendto_one_numeric@plt>:
 b80:	add	ip, pc, #0, 12
 b84:	add	ip, ip, #73728	; 0x12000
 b88:	ldr	pc, [ip, #1232]!	; 0x4d0

00000b8c <strlen@plt>:
 b8c:	add	ip, pc, #0, 12
 b90:	add	ip, ip, #73728	; 0x12000
 b94:	ldr	pc, [ip, #1224]!	; 0x4c8

00000b98 <strchr@plt>:
 b98:	add	ip, pc, #0, 12
 b9c:	add	ip, ip, #73728	; 0x12000
 ba0:	ldr	pc, [ip, #1216]!	; 0x4c0

00000ba4 <report_operspy@plt>:
 ba4:	add	ip, pc, #0, 12
 ba8:	add	ip, ip, #73728	; 0x12000
 bac:	ldr	pc, [ip, #1208]!	; 0x4b8

00000bb0 <rb_radixtree_foreach_cur@plt>:
 bb0:	add	ip, pc, #0, 12
 bb4:	add	ip, ip, #73728	; 0x12000
 bb8:	ldr	pc, [ip, #1200]!	; 0x4b0

00000bbc <sendto_one_notice@plt>:
 bbc:	add	ip, pc, #0, 12
 bc0:	add	ip, ip, #73728	; 0x12000
 bc4:	ldr	pc, [ip, #1192]!	; 0x4a8

00000bc8 <atoi@plt>:
 bc8:	add	ip, pc, #0, 12
 bcc:	add	ip, ip, #73728	; 0x12000
 bd0:	ldr	pc, [ip, #1184]!	; 0x4a0

00000bd4 <add_isupport@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #73728	; 0x12000
 bdc:	ldr	pc, [ip, #1176]!	; 0x498

00000be0 <rb_strlcpy@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #73728	; 0x12000
 be8:	ldr	pc, [ip, #1168]!	; 0x490

00000bec <privilegeset_in_set@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #73728	; 0x12000
 bf4:	ldr	pc, [ip, #1160]!	; 0x488

00000bf8 <__assert_fail@plt>:
 bf8:	add	ip, pc, #0, 12
 bfc:	add	ip, ip, #73728	; 0x12000
 c00:	ldr	pc, [ip, #1152]!	; 0x480

Disassembly of section .text:

00000c04 <call_weak_fn>:
     c04:	ldr	r3, [pc, #20]	; c20 <call_weak_fn+0x1c>
     c08:	ldr	r2, [pc, #20]	; c24 <call_weak_fn+0x20>
     c0c:	add	r3, pc, r3
     c10:	ldr	r2, [r3, r2]
     c14:	cmp	r2, #0
     c18:	bxeq	lr
     c1c:	b	b5c <__gmon_start__@plt>
     c20:	.word	0x000123ec
     c24:	.word	0x0000008c

00000c28 <deregister_tm_clones>:
     c28:	ldr	r0, [pc, #44]	; c5c <deregister_tm_clones+0x34>
     c2c:	ldr	r3, [pc, #44]	; c60 <deregister_tm_clones+0x38>
     c30:	add	r0, pc, r0
     c34:	add	r3, pc, r3
     c38:	cmp	r3, r0
     c3c:	ldr	r3, [pc, #32]	; c64 <deregister_tm_clones+0x3c>
     c40:	add	r3, pc, r3
     c44:	bxeq	lr
     c48:	ldr	r2, [pc, #24]	; c68 <deregister_tm_clones+0x40>
     c4c:	ldr	r3, [r3, r2]
     c50:	cmp	r3, #0
     c54:	bxeq	lr
     c58:	bx	r3
     c5c:	.word	0x00012504
     c60:	.word	0x00012500
     c64:	.word	0x000123b8
     c68:	.word	0x00000088

00000c6c <register_tm_clones>:
     c6c:	ldr	r0, [pc, #56]	; cac <register_tm_clones+0x40>
     c70:	ldr	r3, [pc, #56]	; cb0 <register_tm_clones+0x44>
     c74:	add	r0, pc, r0
     c78:	add	r3, pc, r3
     c7c:	sub	r1, r3, r0
     c80:	ldr	r3, [pc, #44]	; cb4 <register_tm_clones+0x48>
     c84:	asr	r1, r1, #2
     c88:	add	r3, pc, r3
     c8c:	add	r1, r1, r1, lsr #31
     c90:	asrs	r1, r1, #1
     c94:	bxeq	lr
     c98:	ldr	r2, [pc, #24]	; cb8 <register_tm_clones+0x4c>
     c9c:	ldr	r3, [r3, r2]
     ca0:	cmp	r3, #0
     ca4:	bxeq	lr
     ca8:	bx	r3
     cac:	.word	0x000124c0
     cb0:	.word	0x000124bc
     cb4:	.word	0x00012370
     cb8:	.word	0x000000a0

00000cbc <__do_global_dtors_aux>:
     cbc:	ldr	r3, [pc, #76]	; d10 <__do_global_dtors_aux+0x54>
     cc0:	ldr	r2, [pc, #76]	; d14 <__do_global_dtors_aux+0x58>
     cc4:	add	r3, pc, r3
     cc8:	add	r2, pc, r2
     ccc:	ldrb	r3, [r3]
     cd0:	cmp	r3, #0
     cd4:	bxne	lr
     cd8:	ldr	r3, [pc, #56]	; d18 <__do_global_dtors_aux+0x5c>
     cdc:	push	{r4, lr}
     ce0:	ldr	r3, [r2, r3]
     ce4:	cmp	r3, #0
     ce8:	beq	cf8 <__do_global_dtors_aux+0x3c>
     cec:	ldr	r3, [pc, #40]	; d1c <__do_global_dtors_aux+0x60>
     cf0:	ldr	r0, [pc, r3]
     cf4:	bl	acc <__cxa_finalize@plt>
     cf8:	bl	c28 <deregister_tm_clones>
     cfc:	ldr	r3, [pc, #28]	; d20 <__do_global_dtors_aux+0x64>
     d00:	mov	r2, #1
     d04:	add	r3, pc, r3
     d08:	strb	r2, [r3]
     d0c:	pop	{r4, pc}
     d10:	.word	0x00012470
     d14:	.word	0x00012330
     d18:	.word	0x00000084
     d1c:	.word	0x000123b4
     d20:	.word	0x00012430

00000d24 <frame_dummy>:
     d24:	b	c6c <register_tm_clones>

00000d28 <m_list>:
     d28:	push	{fp, lr}
     d2c:	mov	fp, sp
     d30:	sub	sp, sp, #40	; 0x28
     d34:	ldr	ip, [fp, #8]
     d38:	str	r0, [fp, #-4]
     d3c:	str	r1, [fp, #-8]
     d40:	str	r2, [fp, #-12]
     d44:	str	r3, [fp, #-16]
     d48:	ldr	r0, [fp, #-12]
     d4c:	ldr	r0, [r0, #432]	; 0x1b0
     d50:	ldr	r0, [r0, #428]	; 0x1ac
     d54:	movw	r1, #0
     d58:	cmp	r0, r1
     d5c:	str	ip, [sp, #20]
     d60:	beq	d80 <m_list+0x58>
     d64:	ldr	r0, [pc, #356]	; ed0 <m_list+0x1a8>
     d68:	add	r1, pc, r0
     d6c:	ldr	r0, [fp, #-12]
     d70:	bl	bbc <sendto_one_notice@plt>
     d74:	ldr	r0, [fp, #-12]
     d78:	bl	1b98 <safelist_client_release>
     d7c:	b	ea4 <m_list+0x17c>
     d80:	ldr	r0, [fp, #-16]
     d84:	cmp	r0, #2
     d88:	blt	ddc <m_list+0xb4>
     d8c:	ldr	r0, [fp, #8]
     d90:	ldr	r0, [r0, #4]
     d94:	movw	r1, #0
     d98:	cmp	r0, r1
     d9c:	beq	ddc <m_list+0xb4>
     da0:	ldr	r0, [pc, #260]	; eac <m_list+0x184>
     da4:	ldr	r0, [pc, r0]
     da8:	ldr	r1, [fp, #8]
     dac:	ldr	r1, [r1, #4]
     db0:	ldrb	r1, [r1]
     db4:	mov	r2, r1
     db8:	ldr	r3, [pc, #276]	; ed4 <m_list+0x1ac>
     dbc:	ldr	r3, [pc, r3]
     dc0:	add	r1, r3, r1, lsl #2
     dc4:	ldr	r1, [r1]
     dc8:	and	r1, r1, #512	; 0x200
     dcc:	cmp	r1, #0
     dd0:	str	r0, [sp, #16]
     dd4:	str	r2, [sp, #12]
     dd8:	bne	e88 <m_list+0x160>
     ddc:	ldr	r0, [pc, #204]	; eb0 <m_list+0x188>
     de0:	ldr	r0, [pc, r0]
     de4:	ldr	r1, [pc, #200]	; eb4 <m_list+0x18c>
     de8:	add	r1, pc, r1
     dec:	ldr	r1, [r1]
     df0:	ldr	r0, [r0, #184]	; 0xb8
     df4:	add	r0, r1, r0
     df8:	str	r0, [sp, #8]
     dfc:	bl	ab4 <rb_current_time@plt>
     e00:	ldr	r1, [sp, #8]
     e04:	cmp	r1, r0
     e08:	ble	e74 <m_list+0x14c>
     e0c:	ldr	r0, [pc, #176]	; ec4 <m_list+0x19c>
     e10:	add	r1, pc, r0
     e14:	ldr	r0, [pc, #172]	; ec8 <m_list+0x1a0>
     e18:	ldr	r0, [pc, r0]
     e1c:	add	r2, r0, #88	; 0x58
     e20:	ldr	r0, [pc, #164]	; ecc <m_list+0x1a4>
     e24:	add	r0, pc, r0
     e28:	ldr	r3, [fp, #-12]
     e2c:	ldr	ip, [fp, #-12]
     e30:	add	ip, ip, #88	; 0x58
     e34:	str	r0, [sp, #4]
     e38:	mov	r0, r3
     e3c:	mov	r3, ip
     e40:	ldr	ip, [sp, #4]
     e44:	str	ip, [sp]
     e48:	bl	ad8 <sendto_one@plt>
     e4c:	ldr	r0, [pc, #104]	; ebc <m_list+0x194>
     e50:	add	r1, pc, r0
     e54:	ldr	r0, [pc, #100]	; ec0 <m_list+0x198>
     e58:	ldr	r0, [pc, r0]
     e5c:	add	r2, r0, #88	; 0x58
     e60:	ldr	r0, [fp, #-12]
     e64:	ldr	r3, [fp, #-12]
     e68:	add	r3, r3, #88	; 0x58
     e6c:	bl	ad8 <sendto_one@plt>
     e70:	b	ea4 <m_list+0x17c>
     e74:	bl	ab4 <rb_current_time@plt>
     e78:	ldr	lr, [pc, #56]	; eb8 <m_list+0x190>
     e7c:	add	lr, pc, lr
     e80:	str	r0, [lr]
     e84:	b	e88 <m_list+0x160>
     e88:	ldr	r0, [fp, #-4]
     e8c:	ldr	r1, [fp, #-8]
     e90:	ldr	r2, [fp, #-12]
     e94:	ldr	r3, [fp, #-16]
     e98:	ldr	ip, [fp, #8]
     e9c:	str	ip, [sp]
     ea0:	bl	ed8 <mo_list>
     ea4:	mov	sp, fp
     ea8:	pop	{fp, pc}
     eac:	.word	0x000122e4
     eb0:	.word	0x000122c0
     eb4:	.word	0x00012360
     eb8:	.word	0x000122cc
     ebc:	.word	0x0000194c
     ec0:	.word	0x00012244
     ec4:	.word	0x00001a56
     ec8:	.word	0x00012284
     ecc:	.word	0x0000198c
     ed0:	.word	0x00001aef
     ed4:	.word	0x000122cc

00000ed8 <mo_list>:
     ed8:	push	{r4, r5, fp, lr}
     edc:	add	fp, sp, #8
     ee0:	sub	sp, sp, #128	; 0x80
     ee4:	ldr	ip, [fp, #8]
     ee8:	str	r0, [fp, #-12]
     eec:	str	r1, [fp, #-16]
     ef0:	str	r2, [fp, #-20]	; 0xffffffec
     ef4:	str	r3, [fp, #-24]	; 0xffffffe8
     ef8:	movw	r0, #0
     efc:	str	r0, [fp, #-36]	; 0xffffffdc
     f00:	str	r0, [fp, #-44]	; 0xffffffd4
     f04:	ldr	r1, [fp, #-20]	; 0xffffffec
     f08:	ldr	r1, [r1, #432]	; 0x1b0
     f0c:	ldr	r1, [r1, #428]	; 0x1ac
     f10:	cmp	r1, r0
     f14:	str	ip, [fp, #-56]	; 0xffffffc8
     f18:	beq	f38 <mo_list+0x60>
     f1c:	ldr	r0, [pc, #1632]	; 1584 <mo_list+0x6ac>
     f20:	add	r1, pc, r0
     f24:	ldr	r0, [fp, #-20]	; 0xffffffec
     f28:	bl	bbc <sendto_one_notice@plt>
     f2c:	ldr	r0, [fp, #-20]	; 0xffffffec
     f30:	bl	1b98 <safelist_client_release>
     f34:	b	1550 <mo_list+0x678>
     f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f3c:	cmp	r0, #1
     f40:	ble	f8c <mo_list+0xb4>
     f44:	ldr	r0, [fp, #8]
     f48:	ldr	r0, [r0, #4]
     f4c:	bl	b8c <strlen@plt>
     f50:	add	r0, r0, #8
     f54:	bic	r0, r0, #7
     f58:	mov	lr, sp
     f5c:	sub	r0, lr, r0
     f60:	mov	sp, r0
     f64:	str	r0, [fp, #-48]	; 0xffffffd0
     f68:	ldr	r0, [fp, #-48]	; 0xffffffd0
     f6c:	ldr	lr, [fp, #8]
     f70:	ldr	r1, [lr, #4]
     f74:	bl	b38 <strcpy@plt>
     f78:	ldr	r1, [fp, #-48]	; 0xffffffd0
     f7c:	str	r1, [fp, #-52]	; 0xffffffcc
     f80:	ldr	r1, [fp, #-52]	; 0xffffffcc
     f84:	str	r1, [fp, #-36]	; 0xffffffdc
     f88:	str	r0, [fp, #-60]	; 0xffffffc4
     f8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     f90:	movw	r1, #0
     f94:	cmp	r0, r1
     f98:	beq	1020 <mo_list+0x148>
     f9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     fa0:	ldrb	r0, [r0]
     fa4:	cmp	r0, #33	; 0x21
     fa8:	bne	1020 <mo_list+0x148>
     fac:	ldr	r0, [fp, #-20]	; 0xffffffec
     fb0:	ldr	r0, [r0, #24]
     fb4:	movw	r1, #0
     fb8:	cmp	r0, r1
     fbc:	beq	1020 <mo_list+0x148>
     fc0:	ldr	r0, [fp, #-20]	; 0xffffffec
     fc4:	ldr	r0, [r0, #24]
     fc8:	ldr	r0, [r0, #36]	; 0x24
     fcc:	movw	r1, #0
     fd0:	cmp	r0, r1
     fd4:	beq	1020 <mo_list+0x148>
     fd8:	ldr	r0, [pc, #1400]	; 1558 <mo_list+0x680>
     fdc:	add	r1, pc, r0
     fe0:	ldr	r0, [fp, #-20]	; 0xffffffec
     fe4:	ldr	r0, [r0, #24]
     fe8:	ldr	r0, [r0, #36]	; 0x24
     fec:	bl	bec <privilegeset_in_set@plt>
     ff0:	cmp	r0, #0
     ff4:	beq	1020 <mo_list+0x148>
     ff8:	ldr	r0, [pc, #1372]	; 155c <mo_list+0x684>
     ffc:	add	r1, pc, r0
    1000:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1004:	add	r0, r0, #1
    1008:	str	r0, [fp, #-36]	; 0xffffffdc
    100c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1010:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1014:	bl	ba4 <report_operspy@plt>
    1018:	movw	r0, #1
    101c:	str	r0, [fp, #-44]	; 0xffffffd4
    1020:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1024:	movw	r1, #0
    1028:	cmp	r0, r1
    102c:	beq	108c <mo_list+0x1b4>
    1030:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1034:	movw	r1, #0
    1038:	cmp	r0, r1
    103c:	beq	108c <mo_list+0x1b4>
    1040:	ldr	r0, [pc, #1304]	; 1560 <mo_list+0x688>
    1044:	ldr	r0, [pc, r0]
    1048:	ldr	r1, [fp, #-36]	; 0xffffffdc
    104c:	ldrb	r1, [r1]
    1050:	mov	r2, r1
    1054:	ldr	r3, [pc, #1324]	; 1588 <mo_list+0x6b0>
    1058:	ldr	r3, [pc, r3]
    105c:	add	r1, r3, r1, lsl #2
    1060:	ldr	r1, [r1]
    1064:	and	r1, r1, #512	; 0x200
    1068:	cmp	r1, #0
    106c:	str	r0, [fp, #-64]	; 0xffffffc0
    1070:	str	r2, [fp, #-68]	; 0xffffffbc
    1074:	beq	108c <mo_list+0x1b4>
    1078:	ldr	r0, [fp, #-20]	; 0xffffffec
    107c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1080:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1084:	bl	22a0 <safelist_channel_named>
    1088:	b	1550 <mo_list+0x678>
    108c:	movw	r0, #32
    1090:	bl	24f0 <rb_malloc>
    1094:	ldr	lr, [pc, #1224]	; 1564 <mo_list+0x68c>
    1098:	ldr	r1, [pc, #1224]	; 1568 <mo_list+0x690>
    109c:	ldr	r1, [pc, r1]
    10a0:	str	r0, [fp, #-28]	; 0xffffffe4
    10a4:	ldr	r0, [r1, #84]	; 0x54
    10a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    10ac:	str	r0, [r1, #4]
    10b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10b4:	str	lr, [r0, #8]
    10b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    10bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    10c0:	str	r0, [r1, #28]
    10c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10c8:	movw	r1, #0
    10cc:	str	r1, [r0, #24]
    10d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10d4:	str	r1, [r0, #16]
    10d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10dc:	str	r1, [r0, #20]
    10e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10e4:	str	r1, [r0, #12]
    10e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    10ec:	cmp	r0, r1
    10f0:	beq	1544 <mo_list+0x66c>
    10f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    10f8:	movw	r1, #0
    10fc:	cmp	r0, r1
    1100:	beq	1544 <mo_list+0x66c>
    1104:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1108:	ldrb	r0, [r0]
    110c:	cmp	r0, #0
    1110:	beq	1544 <mo_list+0x66c>
    1114:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1118:	movw	r1, #0
    111c:	str	r1, [r0, #4]
    1120:	str	r1, [fp, #-40]	; 0xffffffd8
    1124:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1128:	cmp	r0, #7
    112c:	bge	1540 <mo_list+0x668>
    1130:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1134:	movw	r1, #44	; 0x2c
    1138:	bl	b98 <strchr@plt>
    113c:	str	r0, [fp, #-32]	; 0xffffffe0
    1140:	movw	r1, #0
    1144:	cmp	r0, r1
    1148:	beq	1160 <mo_list+0x288>
    114c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1150:	add	r1, r0, #1
    1154:	str	r1, [fp, #-32]	; 0xffffffe0
    1158:	movw	r1, #0
    115c:	strb	r1, [r0]
    1160:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1164:	ldrb	r0, [r0]
    1168:	cmp	r0, #60	; 0x3c
    116c:	bne	1200 <mo_list+0x328>
    1170:	ldr	r0, [pc, #1032]	; 1580 <mo_list+0x6a8>
    1174:	ldr	r0, [pc, r0]
    1178:	ldr	r1, [fp, #-36]	; 0xffffffdc
    117c:	add	r1, r1, #1
    1180:	str	r1, [fp, #-36]	; 0xffffffdc
    1184:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1188:	ldrb	r1, [r1]
    118c:	mov	r2, r1
    1190:	ldr	r3, [pc, #1012]	; 158c <mo_list+0x6b4>
    1194:	ldr	r3, [pc, r3]
    1198:	add	r1, r3, r1, lsl #2
    119c:	ldr	r1, [r1]
    11a0:	and	r1, r1, #16
    11a4:	cmp	r1, #0
    11a8:	str	r0, [fp, #-72]	; 0xffffffb8
    11ac:	str	r2, [fp, #-76]	; 0xffffffb4
    11b0:	beq	11fc <mo_list+0x324>
    11b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    11b8:	bl	bc8 <atoi@plt>
    11bc:	ldr	lr, [fp, #-28]	; 0xffffffe4
    11c0:	str	r0, [lr, #8]
    11c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11c8:	ldr	r0, [r0, #8]
    11cc:	cmp	r0, #0
    11d0:	bne	11e4 <mo_list+0x30c>
    11d4:	ldr	r0, [pc, #904]	; 1564 <mo_list+0x68c>
    11d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    11dc:	str	r0, [r1, #8]
    11e0:	b	11f8 <mo_list+0x320>
    11e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11e8:	ldr	r1, [r0, #8]
    11ec:	mvn	r2, #0
    11f0:	add	r1, r1, r2
    11f4:	str	r1, [r0, #8]
    11f8:	b	11fc <mo_list+0x324>
    11fc:	b	1500 <mo_list+0x628>
    1200:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1204:	ldrb	r0, [r0]
    1208:	cmp	r0, #62	; 0x3e
    120c:	bne	127c <mo_list+0x3a4>
    1210:	ldr	r0, [pc, #868]	; 157c <mo_list+0x6a4>
    1214:	ldr	r0, [pc, r0]
    1218:	ldr	r1, [fp, #-36]	; 0xffffffdc
    121c:	add	r1, r1, #1
    1220:	str	r1, [fp, #-36]	; 0xffffffdc
    1224:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1228:	ldrb	r1, [r1]
    122c:	mov	r2, r1
    1230:	ldr	r3, [pc, #856]	; 1590 <mo_list+0x6b8>
    1234:	ldr	r3, [pc, r3]
    1238:	add	r1, r3, r1, lsl #2
    123c:	ldr	r1, [r1]
    1240:	and	r1, r1, #16
    1244:	cmp	r1, #0
    1248:	str	r0, [fp, #-80]	; 0xffffffb0
    124c:	str	r2, [fp, #-84]	; 0xffffffac
    1250:	beq	126c <mo_list+0x394>
    1254:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1258:	bl	bc8 <atoi@plt>
    125c:	add	r0, r0, #1
    1260:	ldr	lr, [fp, #-28]	; 0xffffffe4
    1264:	str	r0, [lr, #4]
    1268:	b	1278 <mo_list+0x3a0>
    126c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1270:	movw	r1, #0
    1274:	str	r1, [r0, #4]
    1278:	b	14fc <mo_list+0x624>
    127c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1280:	ldrb	r0, [r0]
    1284:	cmp	r0, #67	; 0x43
    1288:	beq	129c <mo_list+0x3c4>
    128c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1290:	ldrb	r0, [r0]
    1294:	cmp	r0, #99	; 0x63
    1298:	bne	13b8 <mo_list+0x4e0>
    129c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    12a0:	add	r0, r0, #1
    12a4:	str	r0, [fp, #-36]	; 0xffffffdc
    12a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    12ac:	ldrb	r0, [r0]
    12b0:	cmp	r0, #62	; 0x3e
    12b4:	bne	132c <mo_list+0x454>
    12b8:	ldr	r0, [pc, #696]	; 1578 <mo_list+0x6a0>
    12bc:	ldr	r0, [pc, r0]
    12c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    12c4:	add	r1, r1, #1
    12c8:	str	r1, [fp, #-36]	; 0xffffffdc
    12cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    12d0:	ldrb	r1, [r1]
    12d4:	mov	r2, r1
    12d8:	ldr	r3, [pc, #692]	; 1594 <mo_list+0x6bc>
    12dc:	ldr	r3, [pc, r3]
    12e0:	add	r1, r3, r1, lsl #2
    12e4:	ldr	r1, [r1]
    12e8:	and	r1, r1, #16
    12ec:	cmp	r1, #0
    12f0:	str	r0, [fp, #-88]	; 0xffffffa8
    12f4:	str	r2, [fp, #-92]	; 0xffffffa4
    12f8:	beq	1328 <mo_list+0x450>
    12fc:	bl	ab4 <rb_current_time@plt>
    1300:	ldr	lr, [fp, #-36]	; 0xffffffdc
    1304:	str	r0, [fp, #-96]	; 0xffffffa0
    1308:	mov	r0, lr
    130c:	bl	bc8 <atoi@plt>
    1310:	movw	lr, #60	; 0x3c
    1314:	mul	r0, r0, lr
    1318:	ldr	lr, [fp, #-96]	; 0xffffffa0
    131c:	sub	r0, lr, r0
    1320:	ldr	lr, [fp, #-28]	; 0xffffffe4
    1324:	str	r0, [lr, #16]
    1328:	b	13b4 <mo_list+0x4dc>
    132c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1330:	ldrb	r0, [r0]
    1334:	cmp	r0, #60	; 0x3c
    1338:	bne	13b0 <mo_list+0x4d8>
    133c:	ldr	r0, [pc, #560]	; 1574 <mo_list+0x69c>
    1340:	ldr	r0, [pc, r0]
    1344:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1348:	add	r1, r1, #1
    134c:	str	r1, [fp, #-36]	; 0xffffffdc
    1350:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1354:	ldrb	r1, [r1]
    1358:	mov	r2, r1
    135c:	ldr	r3, [pc, #564]	; 1598 <mo_list+0x6c0>
    1360:	ldr	r3, [pc, r3]
    1364:	add	r1, r3, r1, lsl #2
    1368:	ldr	r1, [r1]
    136c:	and	r1, r1, #16
    1370:	cmp	r1, #0
    1374:	str	r0, [fp, #-100]	; 0xffffff9c
    1378:	str	r2, [fp, #-104]	; 0xffffff98
    137c:	beq	13ac <mo_list+0x4d4>
    1380:	bl	ab4 <rb_current_time@plt>
    1384:	ldr	lr, [fp, #-36]	; 0xffffffdc
    1388:	str	r0, [fp, #-108]	; 0xffffff94
    138c:	mov	r0, lr
    1390:	bl	bc8 <atoi@plt>
    1394:	movw	lr, #60	; 0x3c
    1398:	mul	r0, r0, lr
    139c:	ldr	lr, [fp, #-108]	; 0xffffff94
    13a0:	sub	r0, lr, r0
    13a4:	ldr	lr, [fp, #-28]	; 0xffffffe4
    13a8:	str	r0, [lr, #12]
    13ac:	b	13b0 <mo_list+0x4d8>
    13b0:	b	13b4 <mo_list+0x4dc>
    13b4:	b	14f8 <mo_list+0x620>
    13b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    13bc:	ldrb	r0, [r0]
    13c0:	cmp	r0, #84	; 0x54
    13c4:	beq	13d8 <mo_list+0x500>
    13c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    13cc:	ldrb	r0, [r0]
    13d0:	cmp	r0, #116	; 0x74
    13d4:	bne	14f4 <mo_list+0x61c>
    13d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    13dc:	add	r0, r0, #1
    13e0:	str	r0, [fp, #-36]	; 0xffffffdc
    13e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    13e8:	ldrb	r0, [r0]
    13ec:	cmp	r0, #62	; 0x3e
    13f0:	bne	1468 <mo_list+0x590>
    13f4:	ldr	r0, [pc, #372]	; 1570 <mo_list+0x698>
    13f8:	ldr	r0, [pc, r0]
    13fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1400:	add	r1, r1, #1
    1404:	str	r1, [fp, #-36]	; 0xffffffdc
    1408:	ldr	r1, [fp, #-36]	; 0xffffffdc
    140c:	ldrb	r1, [r1]
    1410:	mov	r2, r1
    1414:	ldr	r3, [pc, #384]	; 159c <mo_list+0x6c4>
    1418:	ldr	r3, [pc, r3]
    141c:	add	r1, r3, r1, lsl #2
    1420:	ldr	r1, [r1]
    1424:	and	r1, r1, #16
    1428:	cmp	r1, #0
    142c:	str	r0, [fp, #-112]	; 0xffffff90
    1430:	str	r2, [fp, #-116]	; 0xffffff8c
    1434:	beq	1464 <mo_list+0x58c>
    1438:	bl	ab4 <rb_current_time@plt>
    143c:	ldr	lr, [fp, #-36]	; 0xffffffdc
    1440:	str	r0, [fp, #-120]	; 0xffffff88
    1444:	mov	r0, lr
    1448:	bl	bc8 <atoi@plt>
    144c:	movw	lr, #60	; 0x3c
    1450:	mul	r0, r0, lr
    1454:	ldr	lr, [fp, #-120]	; 0xffffff88
    1458:	sub	r0, lr, r0
    145c:	ldr	lr, [fp, #-28]	; 0xffffffe4
    1460:	str	r0, [lr, #24]
    1464:	b	14f0 <mo_list+0x618>
    1468:	ldr	r0, [fp, #-36]	; 0xffffffdc
    146c:	ldrb	r0, [r0]
    1470:	cmp	r0, #60	; 0x3c
    1474:	bne	14ec <mo_list+0x614>
    1478:	ldr	r0, [pc, #236]	; 156c <mo_list+0x694>
    147c:	ldr	r0, [pc, r0]
    1480:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1484:	add	r1, r1, #1
    1488:	str	r1, [fp, #-36]	; 0xffffffdc
    148c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1490:	ldrb	r1, [r1]
    1494:	mov	r2, r1
    1498:	ldr	r3, [pc, #256]	; 15a0 <mo_list+0x6c8>
    149c:	ldr	r3, [pc, r3]
    14a0:	add	r1, r3, r1, lsl #2
    14a4:	ldr	r1, [r1]
    14a8:	and	r1, r1, #16
    14ac:	cmp	r1, #0
    14b0:	str	r0, [fp, #-124]	; 0xffffff84
    14b4:	str	r2, [fp, #-128]	; 0xffffff80
    14b8:	beq	14e8 <mo_list+0x610>
    14bc:	bl	ab4 <rb_current_time@plt>
    14c0:	ldr	lr, [fp, #-36]	; 0xffffffdc
    14c4:	str	r0, [fp, #-132]	; 0xffffff7c
    14c8:	mov	r0, lr
    14cc:	bl	bc8 <atoi@plt>
    14d0:	movw	lr, #60	; 0x3c
    14d4:	mul	r0, r0, lr
    14d8:	ldr	lr, [fp, #-132]	; 0xffffff7c
    14dc:	sub	r0, lr, r0
    14e0:	ldr	lr, [fp, #-28]	; 0xffffffe4
    14e4:	str	r0, [lr, #20]
    14e8:	b	14ec <mo_list+0x614>
    14ec:	b	14f0 <mo_list+0x618>
    14f0:	b	14f4 <mo_list+0x61c>
    14f4:	b	14f8 <mo_list+0x620>
    14f8:	b	14fc <mo_list+0x624>
    14fc:	b	1500 <mo_list+0x628>
    1500:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1504:	movw	r1, #0
    1508:	cmp	r0, r1
    150c:	beq	1520 <mo_list+0x648>
    1510:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1514:	ldrb	r0, [r0]
    1518:	cmp	r0, #0
    151c:	bne	1524 <mo_list+0x64c>
    1520:	b	1540 <mo_list+0x668>
    1524:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1528:	str	r0, [fp, #-36]	; 0xffffffdc
    152c:	b	1530 <mo_list+0x658>
    1530:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1534:	add	r0, r0, #1
    1538:	str	r0, [fp, #-40]	; 0xffffffd8
    153c:	b	1124 <mo_list+0x24c>
    1540:	b	1544 <mo_list+0x66c>
    1544:	ldr	r0, [fp, #-20]	; 0xffffffec
    1548:	ldr	r1, [fp, #-28]	; 0xffffffe4
    154c:	bl	2548 <safelist_client_instantiate>
    1550:	sub	sp, fp, #8
    1554:	pop	{r4, r5, fp, pc}
    1558:	.word	0x000018f5
    155c:	.word	0x000017b4
    1560:	.word	0x00012044
    1564:	.word	0x7fffffff
    1568:	.word	0x00011ff8
    156c:	.word	0x00011c0c
    1570:	.word	0x00011c90
    1574:	.word	0x00011d48
    1578:	.word	0x00011dcc
    157c:	.word	0x00011e74
    1580:	.word	0x00011f14
    1584:	.word	0x00001937
    1588:	.word	0x00012030
    158c:	.word	0x00011ef4
    1590:	.word	0x00011e54
    1594:	.word	0x00011dac
    1598:	.word	0x00011d28
    159c:	.word	0x00011c70
    15a0:	.word	0x00011bec

000015a4 <safelist_check_cliexit>:
    15a4:	push	{fp, lr}
    15a8:	mov	fp, sp
    15ac:	sub	sp, sp, #8
    15b0:	str	r0, [sp, #4]
    15b4:	ldr	r0, [sp, #4]
    15b8:	ldr	r0, [r0, #4]
    15bc:	ldrb	r0, [r0, #65]	; 0x41
    15c0:	tst	r0, #32
    15c4:	beq	1608 <safelist_check_cliexit+0x64>
    15c8:	b	15cc <safelist_check_cliexit+0x28>
    15cc:	ldr	r0, [sp, #4]
    15d0:	ldr	r0, [r0, #4]
    15d4:	ldrh	r0, [r0, #80]	; 0x50
    15d8:	cmp	r0, #64	; 0x40
    15dc:	bne	1608 <safelist_check_cliexit+0x64>
    15e0:	ldr	r0, [sp, #4]
    15e4:	ldr	r0, [r0, #4]
    15e8:	ldr	r0, [r0, #432]	; 0x1b0
    15ec:	ldr	r0, [r0, #428]	; 0x1ac
    15f0:	movw	r1, #0
    15f4:	cmp	r0, r1
    15f8:	beq	1608 <safelist_check_cliexit+0x64>
    15fc:	ldr	r0, [sp, #4]
    1600:	ldr	r0, [r0, #4]
    1604:	bl	1b98 <safelist_client_release>
    1608:	mov	sp, fp
    160c:	pop	{fp, pc}

00001610 <_modinit>:
    1610:	push	{fp, lr}
    1614:	mov	fp, sp
    1618:	ldr	r0, [pc, #136]	; 16a8 <_modinit+0x98>
    161c:	add	r0, pc, r0
    1620:	ldr	r1, [pc, #132]	; 16ac <_modinit+0x9c>
    1624:	add	r1, pc, r1
    1628:	movw	r2, #0
    162c:	movw	r3, #3
    1630:	bl	ac0 <rb_event_add@plt>
    1634:	ldr	r1, [pc, #92]	; 1698 <_modinit+0x88>
    1638:	add	r1, pc, r1
    163c:	ldr	r2, [pc, #88]	; 169c <_modinit+0x8c>
    1640:	ldr	r2, [pc, r2]
    1644:	ldr	r3, [pc, #84]	; 16a0 <_modinit+0x90>
    1648:	add	r3, pc, r3
    164c:	ldr	lr, [pc, #80]	; 16a4 <_modinit+0x94>
    1650:	add	lr, pc, lr
    1654:	str	r0, [lr]
    1658:	mov	r0, r1
    165c:	mov	r1, r2
    1660:	mov	r2, r3
    1664:	bl	bd4 <add_isupport@plt>
    1668:	ldr	r0, [pc, #28]	; 168c <_modinit+0x7c>
    166c:	add	r0, pc, r0
    1670:	ldr	r1, [pc, #24]	; 1690 <_modinit+0x80>
    1674:	ldr	r1, [pc, r1]
    1678:	ldr	r2, [pc, #20]	; 1694 <_modinit+0x84>
    167c:	add	r2, pc, r2
    1680:	bl	bd4 <add_isupport@plt>
    1684:	movw	r0, #0
    1688:	pop	{fp, pc}
    168c:	.word	0x0000110c
    1690:	.word	0x00011a1c
    1694:	.word	0x00001102
    1698:	.word	0x0000113d
    169c:	.word	0x00011a50
    16a0:	.word	0x00001153
    16a4:	.word	0x00011ae8
    16a8:	.word	0x00001140
    16ac:	.word	0x000000c4

000016b0 <_moddeinit>:
    16b0:	push	{fp, lr}
    16b4:	mov	fp, sp
    16b8:	ldr	r0, [pc, #44]	; 16ec <_moddeinit+0x3c>
    16bc:	add	r0, pc, r0
    16c0:	ldr	r0, [r0]
    16c4:	bl	ae4 <rb_event_delete@plt>
    16c8:	ldr	r0, [pc, #24]	; 16e8 <_moddeinit+0x38>
    16cc:	add	r0, pc, r0
    16d0:	bl	aa8 <delete_isupport@plt>
    16d4:	ldr	r0, [pc, #8]	; 16e4 <_moddeinit+0x34>
    16d8:	add	r0, pc, r0
    16dc:	bl	aa8 <delete_isupport@plt>
    16e0:	pop	{fp, pc}
    16e4:	.word	0x000010a0
    16e8:	.word	0x000010a9
    16ec:	.word	0x00011a7c

000016f0 <safelist_iterate_clients>:
    16f0:	push	{fp, lr}
    16f4:	mov	fp, sp
    16f8:	sub	sp, sp, #24
    16fc:	ldr	r1, [pc, #164]	; 17a8 <safelist_iterate_clients+0xb8>
    1700:	add	r1, pc, r1
    1704:	str	r0, [fp, #-4]
    1708:	ldr	r0, [r1]
    170c:	str	r0, [fp, #-8]
    1710:	ldr	r0, [fp, #-8]
    1714:	movw	r1, #0
    1718:	cmp	r0, r1
    171c:	beq	1730 <safelist_iterate_clients+0x40>
    1720:	ldr	r0, [fp, #-8]
    1724:	ldr	r0, [r0, #8]
    1728:	str	r0, [sp, #8]
    172c:	b	173c <safelist_iterate_clients+0x4c>
    1730:	movw	r0, #0
    1734:	str	r0, [sp, #8]
    1738:	b	173c <safelist_iterate_clients+0x4c>
    173c:	ldr	r0, [sp, #8]
    1740:	str	r0, [sp, #12]
    1744:	ldr	r0, [fp, #-8]
    1748:	movw	r1, #0
    174c:	cmp	r0, r1
    1750:	beq	17a0 <safelist_iterate_clients+0xb0>
    1754:	ldr	r0, [fp, #-8]
    1758:	ldr	r0, [r0]
    175c:	bl	17ac <safelist_iterate_client>
    1760:	ldr	r0, [sp, #12]
    1764:	str	r0, [fp, #-8]
    1768:	ldr	r0, [fp, #-8]
    176c:	movw	r1, #0
    1770:	cmp	r0, r1
    1774:	beq	1788 <safelist_iterate_clients+0x98>
    1778:	ldr	r0, [fp, #-8]
    177c:	ldr	r0, [r0, #8]
    1780:	str	r0, [sp, #4]
    1784:	b	1794 <safelist_iterate_clients+0xa4>
    1788:	movw	r0, #0
    178c:	str	r0, [sp, #4]
    1790:	b	1794 <safelist_iterate_clients+0xa4>
    1794:	ldr	r0, [sp, #4]
    1798:	str	r0, [sp, #12]
    179c:	b	1744 <safelist_iterate_clients+0x54>
    17a0:	mov	sp, fp
    17a4:	pop	{fp, pc}
    17a8:	.word	0x00011a3c

000017ac <safelist_iterate_client>:
    17ac:	push	{fp, lr}
    17b0:	mov	fp, sp
    17b4:	sub	sp, sp, #48	; 0x30
    17b8:	ldr	r1, [pc, #204]	; 188c <safelist_iterate_client+0xe0>
    17bc:	ldr	r1, [pc, r1]
    17c0:	str	r0, [fp, #-4]
    17c4:	ldr	r0, [r1]
    17c8:	ldr	r1, [fp, #-4]
    17cc:	ldr	r1, [r1, #432]	; 0x1b0
    17d0:	ldr	r1, [r1, #428]	; 0x1ac
    17d4:	ldr	r2, [r1]
    17d8:	mov	r1, sp
    17dc:	bl	afc <rb_radixtree_foreach_start_from@plt>
    17e0:	ldr	r0, [pc, #168]	; 1890 <safelist_iterate_client+0xe4>
    17e4:	ldr	r0, [pc, r0]
    17e8:	ldr	r0, [r0]
    17ec:	mov	r1, sp
    17f0:	bl	bb0 <rb_radixtree_foreach_cur@plt>
    17f4:	str	r0, [fp, #-8]
    17f8:	movw	r1, #0
    17fc:	cmp	r0, r1
    1800:	beq	187c <safelist_iterate_client+0xd0>
    1804:	ldr	r0, [fp, #-4]
    1808:	ldr	r0, [r0, #36]	; 0x24
    180c:	bl	1898 <safelist_sendq_exceeded>
    1810:	tst	r0, #1
    1814:	beq	184c <safelist_iterate_client+0xa0>
    1818:	ldr	r0, [fp, #-4]
    181c:	ldr	r0, [r0, #432]	; 0x1b0
    1820:	ldr	r0, [r0, #428]	; 0x1ac
    1824:	ldr	r0, [r0]
    1828:	bl	18e8 <rb_free>
    182c:	ldr	r0, [fp, #-8]
    1830:	ldr	r0, [r0, #236]	; 0xec
    1834:	bl	1930 <rb_strdup>
    1838:	ldr	lr, [fp, #-4]
    183c:	ldr	lr, [lr, #432]	; 0x1b0
    1840:	ldr	lr, [lr, #428]	; 0x1ac
    1844:	str	r0, [lr]
    1848:	b	1884 <safelist_iterate_client+0xd8>
    184c:	ldr	r0, [fp, #-4]
    1850:	ldr	r1, [fp, #-8]
    1854:	ldr	r2, [fp, #-4]
    1858:	ldr	r2, [r2, #432]	; 0x1b0
    185c:	ldr	r2, [r2, #428]	; 0x1ac
    1860:	bl	19a0 <safelist_one_channel>
    1864:	ldr	r0, [pc, #40]	; 1894 <safelist_iterate_client+0xe8>
    1868:	ldr	r0, [pc, r0]
    186c:	ldr	r0, [r0]
    1870:	mov	r1, sp
    1874:	bl	b14 <rb_radixtree_foreach_next@plt>
    1878:	b	17e0 <safelist_iterate_client+0x34>
    187c:	ldr	r0, [fp, #-4]
    1880:	bl	1b98 <safelist_client_release>
    1884:	mov	sp, fp
    1888:	pop	{fp, pc}
    188c:	.word	0x000118d0
    1890:	.word	0x000118a8
    1894:	.word	0x00011824

00001898 <safelist_sendq_exceeded>:
    1898:	push	{fp, lr}
    189c:	mov	fp, sp
    18a0:	sub	sp, sp, #8
    18a4:	str	r0, [sp, #4]
    18a8:	ldr	r0, [sp, #4]
    18ac:	ldr	r0, [r0, #432]	; 0x1b0
    18b0:	ldr	r0, [r0, #64]	; 0x40
    18b4:	ldr	r1, [sp, #4]
    18b8:	str	r0, [sp]
    18bc:	mov	r0, r1
    18c0:	bl	b74 <get_sendq@plt>
    18c4:	movw	r1, #2
    18c8:	sdiv	r0, r0, r1
    18cc:	ldr	r1, [sp]
    18d0:	cmp	r1, r0
    18d4:	movw	r0, #0
    18d8:	movgt	r0, #1
    18dc:	and	r0, r0, #1
    18e0:	mov	sp, fp
    18e4:	pop	{fp, pc}

000018e8 <rb_free>:
    18e8:	push	{fp, lr}
    18ec:	mov	fp, sp
    18f0:	sub	sp, sp, #8
    18f4:	str	r0, [sp, #4]
    18f8:	ldr	r0, [sp, #4]
    18fc:	movw	r1, #0
    1900:	cmp	r0, r1
    1904:	movw	r0, #0
    1908:	movne	r0, #1
    190c:	mvn	r1, #0
    1910:	eor	r0, r0, r1
    1914:	eor	r0, r0, r1
    1918:	tst	r0, #1
    191c:	beq	1928 <rb_free+0x40>
    1920:	ldr	r0, [sp, #4]
    1924:	bl	af0 <free@plt>
    1928:	mov	sp, fp
    192c:	pop	{fp, pc}

00001930 <rb_strdup>:
    1930:	push	{fp, lr}
    1934:	mov	fp, sp
    1938:	sub	sp, sp, #16
    193c:	str	r0, [fp, #-4]
    1940:	ldr	r0, [fp, #-4]
    1944:	bl	b8c <strlen@plt>
    1948:	add	r0, r0, #1
    194c:	bl	b50 <malloc@plt>
    1950:	str	r0, [sp, #8]
    1954:	ldr	r0, [sp, #8]
    1958:	movw	lr, #0
    195c:	cmp	r0, lr
    1960:	movw	r0, #0
    1964:	moveq	r0, #1
    1968:	mvn	lr, #0
    196c:	eor	r0, r0, lr
    1970:	eor	r0, r0, lr
    1974:	tst	r0, #1
    1978:	beq	1980 <rb_strdup+0x50>
    197c:	bl	b08 <rb_outofmemory@plt>
    1980:	ldr	r0, [sp, #8]
    1984:	ldr	r1, [fp, #-4]
    1988:	bl	b38 <strcpy@plt>
    198c:	ldr	r1, [sp, #8]
    1990:	str	r0, [sp, #4]
    1994:	mov	r0, r1
    1998:	mov	sp, fp
    199c:	pop	{fp, pc}

000019a0 <safelist_one_channel>:
    19a0:	push	{fp, lr}
    19a4:	mov	fp, sp
    19a8:	sub	sp, sp, #24
    19ac:	str	r0, [fp, #-4]
    19b0:	str	r1, [fp, #-8]
    19b4:	str	r2, [sp, #12]
    19b8:	ldr	r0, [fp, #-8]
    19bc:	movw	r1, #0
    19c0:	cmp	r0, r1
    19c4:	movw	r0, #1
    19c8:	str	r0, [sp, #4]
    19cc:	beq	1a60 <safelist_one_channel+0xc0>
    19d0:	ldr	r0, [fp, #-8]
    19d4:	ldr	r0, [r0, #12]
    19d8:	and	r0, r0, #2
    19dc:	cmp	r0, #0
    19e0:	movw	r0, #1
    19e4:	str	r0, [sp, #4]
    19e8:	beq	1a60 <safelist_one_channel+0xc0>
    19ec:	ldr	r0, [fp, #-4]
    19f0:	movw	r1, #0
    19f4:	cmp	r0, r1
    19f8:	movw	r0, #0
    19fc:	str	r0, [sp]
    1a00:	beq	1a40 <safelist_one_channel+0xa0>
    1a04:	ldr	r0, [fp, #-4]
    1a08:	ldr	r0, [r0, #24]
    1a0c:	movw	r1, #0
    1a10:	cmp	r0, r1
    1a14:	movw	r0, #0
    1a18:	str	r0, [sp]
    1a1c:	beq	1a40 <safelist_one_channel+0xa0>
    1a20:	ldr	r0, [fp, #-8]
    1a24:	ldr	r1, [fp, #-4]
    1a28:	bl	b44 <find_channel_membership@plt>
    1a2c:	movw	r1, #0
    1a30:	cmp	r0, r1
    1a34:	movw	r0, #0
    1a38:	movne	r0, #1
    1a3c:	str	r0, [sp]
    1a40:	ldr	r0, [sp]
    1a44:	tst	r0, #1
    1a48:	movw	r0, #1
    1a4c:	moveq	r0, #0
    1a50:	cmp	r0, #0
    1a54:	movw	r0, #0
    1a58:	movne	r0, #1
    1a5c:	str	r0, [sp, #4]
    1a60:	ldr	r0, [sp, #4]
    1a64:	and	r0, r0, #1
    1a68:	str	r0, [sp, #8]
    1a6c:	ldr	r0, [sp, #8]
    1a70:	cmp	r0, #0
    1a74:	bne	1a8c <safelist_one_channel+0xec>
    1a78:	ldr	r0, [sp, #12]
    1a7c:	ldr	r0, [r0, #28]
    1a80:	cmp	r0, #0
    1a84:	bne	1a8c <safelist_one_channel+0xec>
    1a88:	b	1b90 <safelist_one_channel+0x1f0>
    1a8c:	ldr	r0, [fp, #-8]
    1a90:	ldr	r0, [r0, #132]	; 0x84
    1a94:	ldr	r1, [sp, #12]
    1a98:	ldr	r1, [r1, #4]
    1a9c:	cmp	r0, r1
    1aa0:	bcc	1abc <safelist_one_channel+0x11c>
    1aa4:	ldr	r0, [fp, #-8]
    1aa8:	ldr	r0, [r0, #132]	; 0x84
    1aac:	ldr	r1, [sp, #12]
    1ab0:	ldr	r1, [r1, #8]
    1ab4:	cmp	r0, r1
    1ab8:	bls	1ac0 <safelist_one_channel+0x120>
    1abc:	b	1b90 <safelist_one_channel+0x1f0>
    1ac0:	ldr	r0, [sp, #12]
    1ac4:	ldr	r0, [r0, #20]
    1ac8:	cmp	r0, #0
    1acc:	beq	1aec <safelist_one_channel+0x14c>
    1ad0:	ldr	r0, [fp, #-8]
    1ad4:	ldr	r0, [r0, #116]	; 0x74
    1ad8:	ldr	r1, [sp, #12]
    1adc:	ldr	r1, [r1, #20]
    1ae0:	cmp	r0, r1
    1ae4:	bge	1aec <safelist_one_channel+0x14c>
    1ae8:	b	1b90 <safelist_one_channel+0x1f0>
    1aec:	ldr	r0, [sp, #12]
    1af0:	ldr	r0, [r0, #24]
    1af4:	cmp	r0, #0
    1af8:	beq	1b28 <safelist_one_channel+0x188>
    1afc:	ldr	r0, [fp, #-8]
    1b00:	ldr	r0, [r0, #116]	; 0x74
    1b04:	ldr	r1, [sp, #12]
    1b08:	ldr	r1, [r1, #24]
    1b0c:	cmp	r0, r1
    1b10:	bgt	1b24 <safelist_one_channel+0x184>
    1b14:	ldr	r0, [fp, #-8]
    1b18:	ldr	r0, [r0, #116]	; 0x74
    1b1c:	cmp	r0, #0
    1b20:	bne	1b28 <safelist_one_channel+0x188>
    1b24:	b	1b90 <safelist_one_channel+0x1f0>
    1b28:	ldr	r0, [sp, #12]
    1b2c:	ldr	r0, [r0, #12]
    1b30:	cmp	r0, #0
    1b34:	beq	1b54 <safelist_one_channel+0x1b4>
    1b38:	ldr	r0, [fp, #-8]
    1b3c:	ldr	r0, [r0, #232]	; 0xe8
    1b40:	ldr	r1, [sp, #12]
    1b44:	ldr	r1, [r1, #12]
    1b48:	cmp	r0, r1
    1b4c:	bge	1b54 <safelist_one_channel+0x1b4>
    1b50:	b	1b90 <safelist_one_channel+0x1f0>
    1b54:	ldr	r0, [sp, #12]
    1b58:	ldr	r0, [r0, #16]
    1b5c:	cmp	r0, #0
    1b60:	beq	1b80 <safelist_one_channel+0x1e0>
    1b64:	ldr	r0, [fp, #-8]
    1b68:	ldr	r0, [r0, #232]	; 0xe8
    1b6c:	ldr	r1, [sp, #12]
    1b70:	ldr	r1, [r1, #16]
    1b74:	cmp	r0, r1
    1b78:	ble	1b80 <safelist_one_channel+0x1e0>
    1b7c:	b	1b90 <safelist_one_channel+0x1f0>
    1b80:	ldr	r0, [fp, #-4]
    1b84:	ldr	r1, [fp, #-8]
    1b88:	ldr	r2, [sp, #8]
    1b8c:	bl	1c54 <list_one_channel>
    1b90:	mov	sp, fp
    1b94:	pop	{fp, pc}

00001b98 <safelist_client_release>:
    1b98:	push	{fp, lr}
    1b9c:	mov	fp, sp
    1ba0:	sub	sp, sp, #8
    1ba4:	str	r0, [sp, #4]
    1ba8:	ldr	r0, [sp, #4]
    1bac:	ldrb	r0, [r0, #65]	; 0x41
    1bb0:	tst	r0, #32
    1bb4:	beq	1bcc <safelist_client_release+0x34>
    1bb8:	b	1bbc <safelist_client_release+0x24>
    1bbc:	ldr	r0, [sp, #4]
    1bc0:	ldrh	r0, [r0, #80]	; 0x50
    1bc4:	cmp	r0, #64	; 0x40
    1bc8:	beq	1bd0 <safelist_client_release+0x38>
    1bcc:	b	1c40 <safelist_client_release+0xa8>
    1bd0:	ldr	r0, [pc, #120]	; 1c50 <safelist_client_release+0xb8>
    1bd4:	add	r1, pc, r0
    1bd8:	ldr	r0, [sp, #4]
    1bdc:	bl	202c <rb_dlinkFindDestroy>
    1be0:	ldr	r1, [sp, #4]
    1be4:	ldr	r1, [r1, #432]	; 0x1b0
    1be8:	ldr	r1, [r1, #428]	; 0x1ac
    1bec:	ldr	r1, [r1]
    1bf0:	str	r0, [sp]
    1bf4:	mov	r0, r1
    1bf8:	bl	18e8 <rb_free>
    1bfc:	ldr	r0, [sp, #4]
    1c00:	ldr	r0, [r0, #432]	; 0x1b0
    1c04:	ldr	r0, [r0, #428]	; 0x1ac
    1c08:	bl	18e8 <rb_free>
    1c0c:	ldr	r0, [pc, #52]	; 1c48 <safelist_client_release+0xb0>
    1c10:	add	r1, pc, r0
    1c14:	ldr	r0, [pc, #48]	; 1c4c <safelist_client_release+0xb4>
    1c18:	ldr	r0, [pc, r0]
    1c1c:	add	r2, r0, #88	; 0x58
    1c20:	ldr	r0, [sp, #4]
    1c24:	ldr	r0, [r0, #432]	; 0x1b0
    1c28:	movw	lr, #0
    1c2c:	str	lr, [r0, #428]	; 0x1ac
    1c30:	ldr	r0, [sp, #4]
    1c34:	ldr	lr, [sp, #4]
    1c38:	add	r3, lr, #88	; 0x58
    1c3c:	bl	ad8 <sendto_one@plt>
    1c40:	mov	sp, fp
    1c44:	pop	{fp, pc}
    1c48:	.word	0x00000b8c
    1c4c:	.word	0x00011484
    1c50:	.word	0x00011568

00001c54 <list_one_channel>:
    1c54:	push	{r4, r5, r6, sl, fp, lr}
    1c58:	add	fp, sp, #16
    1c5c:	sub	sp, sp, #432	; 0x1b0
    1c60:	str	r0, [fp, #-20]	; 0xffffffec
    1c64:	str	r1, [fp, #-24]	; 0xffffffe8
    1c68:	str	r2, [fp, #-28]	; 0xffffffe4
    1c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c70:	ldr	r0, [r0, #108]	; 0x6c
    1c74:	movw	r1, #0
    1c78:	cmp	r0, r1
    1c7c:	beq	1c9c <list_one_channel+0x48>
    1c80:	add	r0, sp, #29
    1c84:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1c88:	ldr	r1, [r1, #108]	; 0x6c
    1c8c:	movw	r2, #391	; 0x187
    1c90:	bl	be0 <rb_strlcpy@plt>
    1c94:	str	r0, [sp, #24]
    1c98:	b	1ca4 <list_one_channel+0x50>
    1c9c:	movw	r0, #0
    1ca0:	strb	r0, [sp, #29]
    1ca4:	add	r0, sp, #29
    1ca8:	bl	1d48 <strip_colour>
    1cac:	ldr	lr, [pc, #132]	; 1d38 <list_one_channel+0xe4>
    1cb0:	add	r1, pc, lr
    1cb4:	ldr	lr, [pc, #128]	; 1d3c <list_one_channel+0xe8>
    1cb8:	ldr	lr, [pc, lr]
    1cbc:	add	r2, lr, #88	; 0x58
    1cc0:	add	lr, sp, #29
    1cc4:	ldr	r3, [pc, #116]	; 1d40 <list_one_channel+0xec>
    1cc8:	add	r3, pc, r3
    1ccc:	ldr	ip, [pc, #112]	; 1d44 <list_one_channel+0xf0>
    1cd0:	add	ip, pc, ip
    1cd4:	ldr	r4, [fp, #-20]	; 0xffffffec
    1cd8:	ldr	r5, [fp, #-20]	; 0xffffffec
    1cdc:	add	r5, r5, #88	; 0x58
    1ce0:	ldr	r6, [fp, #-28]	; 0xffffffe4
    1ce4:	cmp	r6, #0
    1ce8:	movw	r6, #0
    1cec:	movne	r6, #1
    1cf0:	tst	r6, #1
    1cf4:	movne	ip, r3
    1cf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cfc:	ldr	r3, [r3, #236]	; 0xec
    1d00:	ldr	r6, [fp, #-24]	; 0xffffffe8
    1d04:	ldr	r6, [r6, #132]	; 0x84
    1d08:	str	r0, [sp, #20]
    1d0c:	mov	r0, r4
    1d10:	str	r3, [sp, #16]
    1d14:	mov	r3, r5
    1d18:	str	ip, [sp]
    1d1c:	ldr	ip, [sp, #16]
    1d20:	str	ip, [sp, #4]
    1d24:	str	r6, [sp, #8]
    1d28:	str	lr, [sp, #12]
    1d2c:	bl	ad8 <sendto_one@plt>
    1d30:	sub	sp, fp, #16
    1d34:	pop	{r4, r5, r6, sl, fp, pc}
    1d38:	.word	0x00000ad2
    1d3c:	.word	0x000113e4
    1d40:	.word	0x00000ad3
    1d44:	.word	0x00000aca

00001d48 <strip_colour>:
    1d48:	sub	sp, sp, #56	; 0x38
    1d4c:	str	r0, [sp, #52]	; 0x34
    1d50:	ldr	r0, [sp, #52]	; 0x34
    1d54:	str	r0, [sp, #48]	; 0x30
    1d58:	ldr	r0, [sp, #52]	; 0x34
    1d5c:	str	r0, [sp, #44]	; 0x2c
    1d60:	movw	r0, #0
    1d64:	str	r0, [sp, #40]	; 0x28
    1d68:	ldr	r0, [sp, #48]	; 0x30
    1d6c:	movw	r1, #0
    1d70:	cmp	r0, r1
    1d74:	movw	r0, #0
    1d78:	str	r0, [sp, #36]	; 0x24
    1d7c:	beq	1d98 <strip_colour+0x50>
    1d80:	ldr	r0, [sp, #48]	; 0x30
    1d84:	ldrb	r0, [r0]
    1d88:	cmp	r0, #0
    1d8c:	movw	r0, #0
    1d90:	movne	r0, #1
    1d94:	str	r0, [sp, #36]	; 0x24
    1d98:	ldr	r0, [sp, #36]	; 0x24
    1d9c:	tst	r0, #1
    1da0:	beq	1fd8 <strip_colour+0x290>
    1da4:	ldr	r0, [sp, #48]	; 0x30
    1da8:	ldrb	r0, [r0]
    1dac:	mov	r1, r0
    1db0:	cmp	r0, #2
    1db4:	str	r1, [sp, #32]
    1db8:	beq	1f84 <strip_colour+0x23c>
    1dbc:	b	1dc0 <strip_colour+0x78>
    1dc0:	ldr	r0, [sp, #32]
    1dc4:	cmp	r0, #3
    1dc8:	beq	1e58 <strip_colour+0x110>
    1dcc:	b	1dd0 <strip_colour+0x88>
    1dd0:	ldr	r0, [sp, #32]
    1dd4:	cmp	r0, #4
    1dd8:	beq	1f84 <strip_colour+0x23c>
    1ddc:	b	1de0 <strip_colour+0x98>
    1de0:	ldr	r0, [sp, #32]
    1de4:	sub	r1, r0, #6
    1de8:	cmp	r1, #2
    1dec:	bcc	1f84 <strip_colour+0x23c>
    1df0:	b	1df4 <strip_colour+0xac>
    1df4:	ldr	r0, [sp, #32]
    1df8:	cmp	r0, #15
    1dfc:	beq	1f84 <strip_colour+0x23c>
    1e00:	b	1e04 <strip_colour+0xbc>
    1e04:	ldr	r0, [sp, #32]
    1e08:	sub	r1, r0, #22
    1e0c:	cmp	r1, #2
    1e10:	bcc	1f84 <strip_colour+0x23c>
    1e14:	b	1e18 <strip_colour+0xd0>
    1e18:	ldr	r0, [sp, #32]
    1e1c:	cmp	r0, #27
    1e20:	beq	1f84 <strip_colour+0x23c>
    1e24:	b	1e28 <strip_colour+0xe0>
    1e28:	ldr	r0, [sp, #32]
    1e2c:	cmp	r0, #29
    1e30:	beq	1f84 <strip_colour+0x23c>
    1e34:	b	1e38 <strip_colour+0xf0>
    1e38:	ldr	r0, [sp, #32]
    1e3c:	cmp	r0, #31
    1e40:	beq	1f84 <strip_colour+0x23c>
    1e44:	b	1e48 <strip_colour+0x100>
    1e48:	ldr	r0, [sp, #32]
    1e4c:	cmp	r0, #32
    1e50:	beq	1f88 <strip_colour+0x240>
    1e54:	b	1fa4 <strip_colour+0x25c>
    1e58:	ldr	r0, [pc, #428]	; 200c <strip_colour+0x2c4>
    1e5c:	ldr	r0, [pc, r0]
    1e60:	ldr	r1, [sp, #48]	; 0x30
    1e64:	ldrb	r1, [r1, #1]
    1e68:	mov	r2, r1
    1e6c:	ldr	r3, [pc, #424]	; 201c <strip_colour+0x2d4>
    1e70:	ldr	r3, [pc, r3]
    1e74:	add	r1, r3, r1, lsl #2
    1e78:	ldr	r1, [r1]
    1e7c:	and	r1, r1, #16
    1e80:	cmp	r1, #0
    1e84:	str	r0, [sp, #28]
    1e88:	str	r2, [sp, #24]
    1e8c:	beq	1f80 <strip_colour+0x238>
    1e90:	ldr	r0, [pc, #376]	; 2010 <strip_colour+0x2c8>
    1e94:	ldr	r0, [pc, r0]
    1e98:	ldr	r1, [sp, #48]	; 0x30
    1e9c:	add	r1, r1, #1
    1ea0:	str	r1, [sp, #48]	; 0x30
    1ea4:	ldr	r1, [sp, #48]	; 0x30
    1ea8:	ldrb	r1, [r1, #1]
    1eac:	mov	r2, r1
    1eb0:	ldr	r3, [pc, #360]	; 2020 <strip_colour+0x2d8>
    1eb4:	ldr	r3, [pc, r3]
    1eb8:	add	r1, r3, r1, lsl #2
    1ebc:	ldr	r1, [r1]
    1ec0:	and	r1, r1, #16
    1ec4:	cmp	r1, #0
    1ec8:	str	r0, [sp, #20]
    1ecc:	str	r2, [sp, #16]
    1ed0:	beq	1ee0 <strip_colour+0x198>
    1ed4:	ldr	r0, [sp, #48]	; 0x30
    1ed8:	add	r0, r0, #1
    1edc:	str	r0, [sp, #48]	; 0x30
    1ee0:	ldr	r0, [sp, #48]	; 0x30
    1ee4:	ldrb	r0, [r0, #1]
    1ee8:	cmp	r0, #44	; 0x2c
    1eec:	bne	1f7c <strip_colour+0x234>
    1ef0:	ldr	r0, [pc, #284]	; 2014 <strip_colour+0x2cc>
    1ef4:	ldr	r0, [pc, r0]
    1ef8:	ldr	r1, [sp, #48]	; 0x30
    1efc:	ldrb	r1, [r1, #2]
    1f00:	mov	r2, r1
    1f04:	ldr	r3, [pc, #280]	; 2024 <strip_colour+0x2dc>
    1f08:	ldr	r3, [pc, r3]
    1f0c:	add	r1, r3, r1, lsl #2
    1f10:	ldr	r1, [r1]
    1f14:	and	r1, r1, #16
    1f18:	cmp	r1, #0
    1f1c:	str	r0, [sp, #12]
    1f20:	str	r2, [sp, #8]
    1f24:	beq	1f7c <strip_colour+0x234>
    1f28:	ldr	r0, [pc, #232]	; 2018 <strip_colour+0x2d0>
    1f2c:	ldr	r0, [pc, r0]
    1f30:	ldr	r1, [sp, #48]	; 0x30
    1f34:	add	r1, r1, #2
    1f38:	str	r1, [sp, #48]	; 0x30
    1f3c:	ldr	r1, [sp, #48]	; 0x30
    1f40:	ldrb	r1, [r1, #1]
    1f44:	mov	r2, r1
    1f48:	ldr	r3, [pc, #216]	; 2028 <strip_colour+0x2e0>
    1f4c:	ldr	r3, [pc, r3]
    1f50:	add	r1, r3, r1, lsl #2
    1f54:	ldr	r1, [r1]
    1f58:	and	r1, r1, #16
    1f5c:	cmp	r1, #0
    1f60:	str	r0, [sp, #4]
    1f64:	str	r2, [sp]
    1f68:	beq	1f78 <strip_colour+0x230>
    1f6c:	ldr	r0, [sp, #48]	; 0x30
    1f70:	add	r0, r0, #1
    1f74:	str	r0, [sp, #48]	; 0x30
    1f78:	b	1f7c <strip_colour+0x234>
    1f7c:	b	1f80 <strip_colour+0x238>
    1f80:	b	1fc4 <strip_colour+0x27c>
    1f84:	b	1fc4 <strip_colour+0x27c>
    1f88:	ldr	r0, [sp, #48]	; 0x30
    1f8c:	ldrb	r0, [r0]
    1f90:	ldr	r1, [sp, #44]	; 0x2c
    1f94:	add	r2, r1, #1
    1f98:	str	r2, [sp, #44]	; 0x2c
    1f9c:	strb	r0, [r1]
    1fa0:	b	1fc4 <strip_colour+0x27c>
    1fa4:	ldr	r0, [sp, #48]	; 0x30
    1fa8:	ldrb	r0, [r0]
    1fac:	ldr	r1, [sp, #44]	; 0x2c
    1fb0:	add	r2, r1, #1
    1fb4:	str	r2, [sp, #44]	; 0x2c
    1fb8:	strb	r0, [r1]
    1fbc:	ldr	r0, [sp, #44]	; 0x2c
    1fc0:	str	r0, [sp, #40]	; 0x28
    1fc4:	b	1fc8 <strip_colour+0x280>
    1fc8:	ldr	r0, [sp, #48]	; 0x30
    1fcc:	add	r0, r0, #1
    1fd0:	str	r0, [sp, #48]	; 0x30
    1fd4:	b	1d68 <strip_colour+0x20>
    1fd8:	ldr	r0, [sp, #44]	; 0x2c
    1fdc:	movw	r1, #0
    1fe0:	strb	r1, [r0]
    1fe4:	ldr	r0, [sp, #40]	; 0x28
    1fe8:	movw	r1, #0
    1fec:	cmp	r0, r1
    1ff0:	beq	2000 <strip_colour+0x2b8>
    1ff4:	ldr	r0, [sp, #40]	; 0x28
    1ff8:	movw	r1, #0
    1ffc:	strb	r1, [r0]
    2000:	ldr	r0, [sp, #52]	; 0x34
    2004:	add	sp, sp, #56	; 0x38
    2008:	bx	lr
    200c:	.word	0x0001122c
    2010:	.word	0x000111f4
    2014:	.word	0x00011194
    2018:	.word	0x0001115c
    201c:	.word	0x00011218
    2020:	.word	0x000111d4
    2024:	.word	0x00011180
    2028:	.word	0x0001113c

0000202c <rb_dlinkFindDestroy>:
    202c:	push	{fp, lr}
    2030:	mov	fp, sp
    2034:	sub	sp, sp, #16
    2038:	str	r0, [sp, #8]
    203c:	str	r1, [sp, #4]
    2040:	ldr	r0, [sp, #4]
    2044:	movw	r1, #0
    2048:	cmp	r0, r1
    204c:	beq	2054 <rb_dlinkFindDestroy+0x28>
    2050:	b	2074 <rb_dlinkFindDestroy+0x48>
    2054:	ldr	r0, [pc, #148]	; 20f0 <rb_dlinkFindDestroy+0xc4>
    2058:	add	r0, pc, r0
    205c:	ldr	r1, [pc, #144]	; 20f4 <rb_dlinkFindDestroy+0xc8>
    2060:	add	r1, pc, r1
    2064:	ldr	r2, [pc, #140]	; 20f8 <rb_dlinkFindDestroy+0xcc>
    2068:	add	r3, pc, r2
    206c:	movw	r2, #287	; 0x11f
    2070:	bl	bf8 <__assert_fail@plt>
    2074:	ldr	r0, [sp, #8]
    2078:	movw	r1, #0
    207c:	cmp	r0, r1
    2080:	beq	2088 <rb_dlinkFindDestroy+0x5c>
    2084:	b	20a8 <rb_dlinkFindDestroy+0x7c>
    2088:	ldr	r0, [pc, #108]	; 20fc <rb_dlinkFindDestroy+0xd0>
    208c:	add	r0, pc, r0
    2090:	ldr	r1, [pc, #104]	; 2100 <rb_dlinkFindDestroy+0xd4>
    2094:	add	r1, pc, r1
    2098:	ldr	r2, [pc, #100]	; 2104 <rb_dlinkFindDestroy+0xd8>
    209c:	add	r3, pc, r2
    20a0:	movw	r2, #288	; 0x120
    20a4:	bl	bf8 <__assert_fail@plt>
    20a8:	ldr	r0, [sp, #8]
    20ac:	ldr	r1, [sp, #4]
    20b0:	bl	2108 <rb_dlinkFindDelete>
    20b4:	str	r0, [sp]
    20b8:	ldr	r0, [sp]
    20bc:	movw	r1, #0
    20c0:	cmp	r0, r1
    20c4:	beq	20dc <rb_dlinkFindDestroy+0xb0>
    20c8:	ldr	r0, [sp]
    20cc:	bl	b2c <rb_free_rb_dlink_node@plt>
    20d0:	movw	r0, #1
    20d4:	str	r0, [fp, #-4]
    20d8:	b	20e4 <rb_dlinkFindDestroy+0xb8>
    20dc:	movw	r0, #0
    20e0:	str	r0, [fp, #-4]
    20e4:	ldr	r0, [fp, #-4]
    20e8:	mov	sp, fp
    20ec:	pop	{fp, pc}
    20f0:	.word	0x0000075d
    20f4:	.word	0x00000762
    20f8:	.word	0x00000776
    20fc:	.word	0x00000783
    2100:	.word	0x0000072e
    2104:	.word	0x00000742

00002108 <rb_dlinkFindDelete>:
    2108:	push	{fp, lr}
    210c:	mov	fp, sp
    2110:	sub	sp, sp, #16
    2114:	str	r0, [sp, #8]
    2118:	str	r1, [sp, #4]
    211c:	ldr	r0, [sp, #4]
    2120:	movw	r1, #0
    2124:	cmp	r0, r1
    2128:	beq	2130 <rb_dlinkFindDelete+0x28>
    212c:	b	2150 <rb_dlinkFindDelete+0x48>
    2130:	ldr	r0, [pc, #336]	; 2288 <rb_dlinkFindDelete+0x180>
    2134:	add	r0, pc, r0
    2138:	ldr	r1, [pc, #332]	; 228c <rb_dlinkFindDelete+0x184>
    213c:	add	r1, pc, r1
    2140:	ldr	r2, [pc, #328]	; 2290 <rb_dlinkFindDelete+0x188>
    2144:	add	r3, pc, r2
    2148:	movw	r2, #258	; 0x102
    214c:	bl	bf8 <__assert_fail@plt>
    2150:	ldr	r0, [sp, #8]
    2154:	movw	r1, #0
    2158:	cmp	r0, r1
    215c:	beq	2164 <rb_dlinkFindDelete+0x5c>
    2160:	b	2184 <rb_dlinkFindDelete+0x7c>
    2164:	ldr	r0, [pc, #296]	; 2294 <rb_dlinkFindDelete+0x18c>
    2168:	add	r0, pc, r0
    216c:	ldr	r1, [pc, #292]	; 2298 <rb_dlinkFindDelete+0x190>
    2170:	add	r1, pc, r1
    2174:	ldr	r2, [pc, #288]	; 229c <rb_dlinkFindDelete+0x194>
    2178:	add	r3, pc, r2
    217c:	movw	r2, #259	; 0x103
    2180:	bl	bf8 <__assert_fail@plt>
    2184:	ldr	r0, [sp, #4]
    2188:	ldr	r0, [r0]
    218c:	str	r0, [sp]
    2190:	ldr	r0, [sp]
    2194:	movw	r1, #0
    2198:	cmp	r0, r1
    219c:	beq	2274 <rb_dlinkFindDelete+0x16c>
    21a0:	ldr	r0, [sp]
    21a4:	ldr	r0, [r0]
    21a8:	ldr	r1, [sp, #8]
    21ac:	cmp	r0, r1
    21b0:	beq	21b8 <rb_dlinkFindDelete+0xb0>
    21b4:	b	2264 <rb_dlinkFindDelete+0x15c>
    21b8:	ldr	r0, [sp]
    21bc:	ldr	r0, [r0, #8]
    21c0:	movw	r1, #0
    21c4:	cmp	r0, r1
    21c8:	beq	21e4 <rb_dlinkFindDelete+0xdc>
    21cc:	ldr	r0, [sp]
    21d0:	ldr	r0, [r0, #4]
    21d4:	ldr	r1, [sp]
    21d8:	ldr	r1, [r1, #8]
    21dc:	str	r0, [r1, #4]
    21e0:	b	21f4 <rb_dlinkFindDelete+0xec>
    21e4:	ldr	r0, [sp]
    21e8:	ldr	r0, [r0, #4]
    21ec:	ldr	r1, [sp, #4]
    21f0:	str	r0, [r1, #4]
    21f4:	ldr	r0, [sp]
    21f8:	ldr	r0, [r0, #4]
    21fc:	movw	r1, #0
    2200:	cmp	r0, r1
    2204:	beq	2220 <rb_dlinkFindDelete+0x118>
    2208:	ldr	r0, [sp]
    220c:	ldr	r0, [r0, #8]
    2210:	ldr	r1, [sp]
    2214:	ldr	r1, [r1, #4]
    2218:	str	r0, [r1, #8]
    221c:	b	2230 <rb_dlinkFindDelete+0x128>
    2220:	ldr	r0, [sp]
    2224:	ldr	r0, [r0, #8]
    2228:	ldr	r1, [sp, #4]
    222c:	str	r0, [r1]
    2230:	ldr	r0, [sp]
    2234:	movw	r1, #0
    2238:	str	r1, [r0, #4]
    223c:	ldr	r0, [sp]
    2240:	str	r1, [r0, #8]
    2244:	ldr	r0, [sp, #4]
    2248:	ldr	r1, [r0, #8]
    224c:	mvn	r2, #0
    2250:	add	r1, r1, r2
    2254:	str	r1, [r0, #8]
    2258:	ldr	r0, [sp]
    225c:	str	r0, [fp, #-4]
    2260:	b	227c <rb_dlinkFindDelete+0x174>
    2264:	ldr	r0, [sp]
    2268:	ldr	r0, [r0, #8]
    226c:	str	r0, [sp]
    2270:	b	2190 <rb_dlinkFindDelete+0x88>
    2274:	movw	r0, #0
    2278:	str	r0, [fp, #-4]
    227c:	ldr	r0, [fp, #-4]
    2280:	mov	sp, fp
    2284:	pop	{fp, pc}
    2288:	.word	0x00000681
    228c:	.word	0x00000686
    2290:	.word	0x000006d8
    2294:	.word	0x000006a7
    2298:	.word	0x00000652
    229c:	.word	0x000006a4

000022a0 <safelist_channel_named>:
    22a0:	push	{fp, lr}
    22a4:	mov	fp, sp
    22a8:	sub	sp, sp, #40	; 0x28
    22ac:	ldr	r3, [pc, #532]	; 24c8 <safelist_channel_named+0x228>
    22b0:	add	r3, pc, r3
    22b4:	ldr	ip, [pc, #528]	; 24cc <safelist_channel_named+0x22c>
    22b8:	ldr	ip, [pc, ip]
    22bc:	add	ip, ip, #88	; 0x58
    22c0:	str	r0, [fp, #-4]
    22c4:	str	r1, [fp, #-8]
    22c8:	str	r2, [fp, #-12]
    22cc:	ldr	r0, [fp, #-4]
    22d0:	ldr	r1, [fp, #-4]
    22d4:	add	r1, r1, #88	; 0x58
    22d8:	str	r1, [sp, #12]
    22dc:	mov	r1, r3
    22e0:	mov	r2, ip
    22e4:	ldr	r3, [sp, #12]
    22e8:	bl	ad8 <sendto_one@plt>
    22ec:	ldr	r0, [fp, #-8]
    22f0:	movw	r1, #44	; 0x2c
    22f4:	bl	b98 <strchr@plt>
    22f8:	str	r0, [sp, #20]
    22fc:	movw	r1, #0
    2300:	cmp	r0, r1
    2304:	beq	2314 <safelist_channel_named+0x74>
    2308:	ldr	r0, [sp, #20]
    230c:	movw	r1, #0
    2310:	strb	r1, [r0]
    2314:	ldr	r0, [fp, #-8]
    2318:	ldrb	r0, [r0]
    231c:	cmp	r0, #0
    2320:	bne	2364 <safelist_channel_named+0xc4>
    2324:	ldr	r0, [pc, #448]	; 24ec <safelist_channel_named+0x24c>
    2328:	add	r2, pc, r0
    232c:	ldr	r0, [fp, #-4]
    2330:	ldr	r3, [fp, #-8]
    2334:	movw	r1, #401	; 0x191
    2338:	bl	b80 <sendto_one_numeric@plt>
    233c:	ldr	r0, [pc, #416]	; 24e4 <safelist_channel_named+0x244>
    2340:	add	r1, pc, r0
    2344:	ldr	r0, [pc, #412]	; 24e8 <safelist_channel_named+0x248>
    2348:	ldr	r0, [pc, r0]
    234c:	add	r2, r0, #88	; 0x58
    2350:	ldr	r0, [fp, #-4]
    2354:	ldr	r3, [fp, #-4]
    2358:	add	r3, r3, #88	; 0x58
    235c:	bl	ad8 <sendto_one@plt>
    2360:	b	24c0 <safelist_channel_named+0x220>
    2364:	ldr	r0, [fp, #-8]
    2368:	bl	b20 <find_channel@plt>
    236c:	str	r0, [fp, #-16]
    2370:	ldr	r0, [fp, #-16]
    2374:	movw	lr, #0
    2378:	cmp	r0, lr
    237c:	bne	23c0 <safelist_channel_named+0x120>
    2380:	ldr	r0, [pc, #344]	; 24e0 <safelist_channel_named+0x240>
    2384:	add	r2, pc, r0
    2388:	ldr	r0, [fp, #-4]
    238c:	ldr	r3, [fp, #-8]
    2390:	movw	r1, #401	; 0x191
    2394:	bl	b80 <sendto_one_numeric@plt>
    2398:	ldr	r0, [pc, #312]	; 24d8 <safelist_channel_named+0x238>
    239c:	add	r1, pc, r0
    23a0:	ldr	r0, [pc, #308]	; 24dc <safelist_channel_named+0x23c>
    23a4:	ldr	r0, [pc, r0]
    23a8:	add	r2, r0, #88	; 0x58
    23ac:	ldr	r0, [fp, #-4]
    23b0:	ldr	r3, [fp, #-4]
    23b4:	add	r3, r3, #88	; 0x58
    23b8:	bl	ad8 <sendto_one@plt>
    23bc:	b	24c0 <safelist_channel_named+0x220>
    23c0:	ldr	r0, [fp, #-16]
    23c4:	movw	r1, #0
    23c8:	cmp	r0, r1
    23cc:	movw	r0, #1
    23d0:	str	r0, [sp, #8]
    23d4:	beq	2468 <safelist_channel_named+0x1c8>
    23d8:	ldr	r0, [fp, #-16]
    23dc:	ldr	r0, [r0, #12]
    23e0:	and	r0, r0, #2
    23e4:	cmp	r0, #0
    23e8:	movw	r0, #1
    23ec:	str	r0, [sp, #8]
    23f0:	beq	2468 <safelist_channel_named+0x1c8>
    23f4:	ldr	r0, [fp, #-4]
    23f8:	movw	r1, #0
    23fc:	cmp	r0, r1
    2400:	movw	r0, #0
    2404:	str	r0, [sp, #4]
    2408:	beq	2448 <safelist_channel_named+0x1a8>
    240c:	ldr	r0, [fp, #-4]
    2410:	ldr	r0, [r0, #24]
    2414:	movw	r1, #0
    2418:	cmp	r0, r1
    241c:	movw	r0, #0
    2420:	str	r0, [sp, #4]
    2424:	beq	2448 <safelist_channel_named+0x1a8>
    2428:	ldr	r0, [fp, #-16]
    242c:	ldr	r1, [fp, #-4]
    2430:	bl	b44 <find_channel_membership@plt>
    2434:	movw	r1, #0
    2438:	cmp	r0, r1
    243c:	movw	r0, #0
    2440:	movne	r0, #1
    2444:	str	r0, [sp, #4]
    2448:	ldr	r0, [sp, #4]
    244c:	tst	r0, #1
    2450:	movw	r0, #1
    2454:	moveq	r0, #0
    2458:	cmp	r0, #0
    245c:	movw	r0, #0
    2460:	movne	r0, #1
    2464:	str	r0, [sp, #8]
    2468:	ldr	r0, [sp, #8]
    246c:	and	r0, r0, #1
    2470:	str	r0, [sp, #16]
    2474:	ldr	r0, [sp, #16]
    2478:	cmp	r0, #0
    247c:	bne	248c <safelist_channel_named+0x1ec>
    2480:	ldr	r0, [fp, #-12]
    2484:	cmp	r0, #0
    2488:	beq	249c <safelist_channel_named+0x1fc>
    248c:	ldr	r0, [fp, #-4]
    2490:	ldr	r1, [fp, #-16]
    2494:	ldr	r2, [sp, #16]
    2498:	bl	1c54 <list_one_channel>
    249c:	ldr	r0, [pc, #44]	; 24d0 <safelist_channel_named+0x230>
    24a0:	add	r1, pc, r0
    24a4:	ldr	r0, [pc, #40]	; 24d4 <safelist_channel_named+0x234>
    24a8:	ldr	r0, [pc, r0]
    24ac:	add	r2, r0, #88	; 0x58
    24b0:	ldr	r0, [fp, #-4]
    24b4:	ldr	r3, [fp, #-4]
    24b8:	add	r3, r3, #88	; 0x58
    24bc:	bl	ad8 <sendto_one@plt>
    24c0:	mov	sp, fp
    24c4:	pop	{fp, pc}
    24c8:	.word	0x0000062a
    24cc:	.word	0x00010de4
    24d0:	.word	0x000002fc
    24d4:	.word	0x00010bf4
    24d8:	.word	0x00000400
    24dc:	.word	0x00010cf8
    24e0:	.word	0x00000576
    24e4:	.word	0x0000045c
    24e8:	.word	0x00010d54
    24ec:	.word	0x000005d2

000024f0 <rb_malloc>:
    24f0:	push	{fp, lr}
    24f4:	mov	fp, sp
    24f8:	sub	sp, sp, #8
    24fc:	str	r0, [sp, #4]
    2500:	ldr	r1, [sp, #4]
    2504:	movw	r0, #1
    2508:	bl	a9c <calloc@plt>
    250c:	str	r0, [sp]
    2510:	ldr	r0, [sp]
    2514:	movw	r1, #0
    2518:	cmp	r0, r1
    251c:	movw	r0, #0
    2520:	moveq	r0, #1
    2524:	mvn	r1, #0
    2528:	eor	r0, r0, r1
    252c:	eor	r0, r0, r1
    2530:	tst	r0, #1
    2534:	beq	253c <rb_malloc+0x4c>
    2538:	bl	b08 <rb_outofmemory@plt>
    253c:	ldr	r0, [sp]
    2540:	mov	sp, fp
    2544:	pop	{fp, pc}

00002548 <safelist_client_instantiate>:
    2548:	push	{fp, lr}
    254c:	mov	fp, sp
    2550:	sub	sp, sp, #24
    2554:	ldr	r2, [pc, #128]	; 25dc <safelist_client_instantiate+0x94>
    2558:	add	r2, pc, r2
    255c:	ldr	r3, [pc, #124]	; 25e0 <safelist_client_instantiate+0x98>
    2560:	ldr	r3, [pc, r3]
    2564:	add	r3, r3, #88	; 0x58
    2568:	str	r0, [fp, #-4]
    256c:	str	r1, [fp, #-8]
    2570:	ldr	r0, [fp, #-8]
    2574:	ldr	r1, [fp, #-4]
    2578:	ldr	r1, [r1, #432]	; 0x1b0
    257c:	str	r0, [r1, #428]	; 0x1ac
    2580:	ldr	r0, [fp, #-4]
    2584:	ldr	r1, [fp, #-4]
    2588:	add	r1, r1, #88	; 0x58
    258c:	str	r1, [sp, #12]
    2590:	mov	r1, r2
    2594:	mov	r2, r3
    2598:	ldr	r3, [sp, #12]
    259c:	bl	ad8 <sendto_one@plt>
    25a0:	ldr	r0, [fp, #-4]
    25a4:	str	r0, [sp, #8]
    25a8:	bl	b68 <rb_make_rb_dlink_node@plt>
    25ac:	ldr	r1, [pc, #36]	; 25d8 <safelist_client_instantiate+0x90>
    25b0:	add	r2, pc, r1
    25b4:	ldr	r1, [sp, #8]
    25b8:	str	r0, [sp, #4]
    25bc:	mov	r0, r1
    25c0:	ldr	r1, [sp, #4]
    25c4:	bl	25e4 <rb_dlinkAdd>
    25c8:	ldr	r0, [fp, #-4]
    25cc:	bl	17ac <safelist_iterate_client>
    25d0:	mov	sp, fp
    25d4:	pop	{fp, pc}
    25d8:	.word	0x00010b8c
    25dc:	.word	0x00000382
    25e0:	.word	0x00010b3c

000025e4 <rb_dlinkAdd>:
    25e4:	push	{fp, lr}
    25e8:	mov	fp, sp
    25ec:	sub	sp, sp, #16
    25f0:	str	r0, [fp, #-4]
    25f4:	str	r1, [sp, #8]
    25f8:	str	r2, [sp, #4]
    25fc:	ldr	r0, [fp, #-4]
    2600:	movw	r1, #0
    2604:	cmp	r0, r1
    2608:	beq	2610 <rb_dlinkAdd+0x2c>
    260c:	b	2630 <rb_dlinkAdd+0x4c>
    2610:	ldr	r0, [pc, #276]	; 272c <rb_dlinkAdd+0x148>
    2614:	add	r0, pc, r0
    2618:	ldr	r1, [pc, #272]	; 2730 <rb_dlinkAdd+0x14c>
    261c:	add	r1, pc, r1
    2620:	ldr	r2, [pc, #268]	; 2734 <rb_dlinkAdd+0x150>
    2624:	add	r3, pc, r2
    2628:	movw	r2, #143	; 0x8f
    262c:	bl	bf8 <__assert_fail@plt>
    2630:	ldr	r0, [sp, #8]
    2634:	movw	r1, #0
    2638:	cmp	r0, r1
    263c:	beq	2644 <rb_dlinkAdd+0x60>
    2640:	b	2664 <rb_dlinkAdd+0x80>
    2644:	ldr	r0, [pc, #236]	; 2738 <rb_dlinkAdd+0x154>
    2648:	add	r0, pc, r0
    264c:	ldr	r1, [pc, #232]	; 273c <rb_dlinkAdd+0x158>
    2650:	add	r1, pc, r1
    2654:	ldr	r2, [pc, #228]	; 2740 <rb_dlinkAdd+0x15c>
    2658:	add	r3, pc, r2
    265c:	movw	r2, #144	; 0x90
    2660:	bl	bf8 <__assert_fail@plt>
    2664:	ldr	r0, [sp, #4]
    2668:	movw	r1, #0
    266c:	cmp	r0, r1
    2670:	beq	2678 <rb_dlinkAdd+0x94>
    2674:	b	2698 <rb_dlinkAdd+0xb4>
    2678:	ldr	r0, [pc, #196]	; 2744 <rb_dlinkAdd+0x160>
    267c:	add	r0, pc, r0
    2680:	ldr	r1, [pc, #192]	; 2748 <rb_dlinkAdd+0x164>
    2684:	add	r1, pc, r1
    2688:	ldr	r2, [pc, #188]	; 274c <rb_dlinkAdd+0x168>
    268c:	add	r3, pc, r2
    2690:	movw	r2, #145	; 0x91
    2694:	bl	bf8 <__assert_fail@plt>
    2698:	ldr	r0, [fp, #-4]
    269c:	ldr	r1, [sp, #8]
    26a0:	str	r0, [r1]
    26a4:	ldr	r0, [sp, #8]
    26a8:	movw	r1, #0
    26ac:	str	r1, [r0, #4]
    26b0:	ldr	r0, [sp, #4]
    26b4:	ldr	r0, [r0]
    26b8:	ldr	r2, [sp, #8]
    26bc:	str	r0, [r2, #8]
    26c0:	ldr	r0, [sp, #4]
    26c4:	ldr	r0, [r0]
    26c8:	cmp	r0, r1
    26cc:	beq	26e4 <rb_dlinkAdd+0x100>
    26d0:	ldr	r0, [sp, #8]
    26d4:	ldr	r1, [sp, #4]
    26d8:	ldr	r1, [r1]
    26dc:	str	r0, [r1, #4]
    26e0:	b	2708 <rb_dlinkAdd+0x124>
    26e4:	ldr	r0, [sp, #4]
    26e8:	ldr	r0, [r0, #4]
    26ec:	movw	r1, #0
    26f0:	cmp	r0, r1
    26f4:	bne	2704 <rb_dlinkAdd+0x120>
    26f8:	ldr	r0, [sp, #8]
    26fc:	ldr	r1, [sp, #4]
    2700:	str	r0, [r1, #4]
    2704:	b	2708 <rb_dlinkAdd+0x124>
    2708:	ldr	r0, [sp, #8]
    270c:	ldr	r1, [sp, #4]
    2710:	str	r0, [r1]
    2714:	ldr	r0, [sp, #4]
    2718:	ldr	r1, [r0, #8]
    271c:	add	r1, r1, #1
    2720:	str	r1, [r0, #8]
    2724:	mov	sp, fp
    2728:	pop	{fp, pc}
    272c:	.word	0x000001fb
    2730:	.word	0x000001a6
    2734:	.word	0x000002ef
    2738:	.word	0x00000306
    273c:	.word	0x00000172
    2740:	.word	0x000002bb
    2744:	.word	0x00000139
    2748:	.word	0x0000013e
    274c:	.word	0x00000287

Disassembly of section .fini:

00002750 <_fini>:
    2750:	push	{r3, lr}
    2754:	pop	{r3, pc}
