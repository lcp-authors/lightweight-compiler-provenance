
../repos/tbeu-matio-3dd266d/test/test_snprintf:     file format elf32-littlearm


Disassembly of section .init:

00010424 <.init>:
   10424:	push	{r3, lr}
   10428:	bl	10904 <abort@plt+0x454>
   1042c:	pop	{r3, pc}

Disassembly of section .plt:

00010430 <strcmp@plt-0x14>:
   10430:	push	{lr}		; (str lr, [sp, #-4]!)
   10434:	ldr	lr, [pc, #4]	; 10440 <strcmp@plt-0x4>
   10438:	add	lr, pc, lr
   1043c:	ldr	pc, [lr, #8]!
   10440:	andeq	r0, r1, r0, asr #23

00010444 <strcmp@plt>:
   10444:	add	ip, pc, #0, 12
   10448:	add	ip, ip, #16, 20	; 0x10000
   1044c:	ldr	pc, [ip, #3008]!	; 0xbc0

00010450 <printf@plt>:
   10450:	add	ip, pc, #0, 12
   10454:	add	ip, ip, #16, 20	; 0x10000
   10458:	ldr	pc, [ip, #3000]!	; 0xbb8

0001045c <memcpy@plt>:
   1045c:	add	ip, pc, #0, 12
   10460:	add	ip, ip, #16, 20	; 0x10000
   10464:	ldr	pc, [ip, #2992]!	; 0xbb0

00010468 <pow@plt>:
   10468:	add	ip, pc, #0, 12
   1046c:	add	ip, ip, #16, 20	; 0x10000
   10470:	ldr	pc, [ip, #2984]!	; 0xba8

00010474 <puts@plt>:
   10474:	add	ip, pc, #0, 12
   10478:	add	ip, ip, #16, 20	; 0x10000
   1047c:	ldr	pc, [ip, #2976]!	; 0xba0

00010480 <__libc_start_main@plt>:
   10480:	add	ip, pc, #0, 12
   10484:	add	ip, ip, #16, 20	; 0x10000
   10488:	ldr	pc, [ip, #2968]!	; 0xb98

0001048c <__gmon_start__@plt>:
   1048c:	add	ip, pc, #0, 12
   10490:	add	ip, ip, #16, 20	; 0x10000
   10494:	ldr	pc, [ip, #2960]!	; 0xb90

00010498 <snprintf@plt>:
   10498:	add	ip, pc, #0, 12
   1049c:	add	ip, ip, #16, 20	; 0x10000
   104a0:	ldr	pc, [ip, #2952]!	; 0xb88

000104a4 <sprintf@plt>:
   104a4:	add	ip, pc, #0, 12
   104a8:	add	ip, ip, #16, 20	; 0x10000
   104ac:	ldr	pc, [ip, #2944]!	; 0xb80

000104b0 <abort@plt>:
   104b0:	add	ip, pc, #0, 12
   104b4:	add	ip, ip, #16, 20	; 0x10000
   104b8:	ldr	pc, [ip, #2936]!	; 0xb78

Disassembly of section .text:

000104c0 <.text>:
   104c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   104c4:	vpush	{d8-d10}
   104c8:	ldr	r4, [pc, #984]	; 108a8 <abort@plt+0x3f8>
   104cc:	vldr	d9, [pc, #956]	; 10890 <abort@plt+0x3e0>
   104d0:	mov	r5, #0
   104d4:	ldm	r4!, {r0, r1, r2, r3}
   104d8:	sub	sp, sp, #2384	; 0x950
   104dc:	sub	sp, sp, #4
   104e0:	add	ip, sp, #160	; 0xa0
   104e4:	add	r8, sp, #160	; 0xa0
   104e8:	stmia	ip!, {r0, r1, r2, r3}
   104ec:	ldm	r4!, {r0, r1, r2, r3}
   104f0:	stmia	ip!, {r0, r1, r2, r3}
   104f4:	ldm	r4!, {r0, r1, r2, r3}
   104f8:	stmia	ip!, {r0, r1, r2, r3}
   104fc:	ldm	r4, {r0, r1, r2, r3}
   10500:	stm	ip, {r0, r1, r2, r3}
   10504:	add	r1, r4, #16
   10508:	mov	r2, #112	; 0x70
   1050c:	add	r0, sp, #224	; 0xe0
   10510:	bl	1045c <memcpy@plt>
   10514:	add	lr, r4, #128	; 0x80
   10518:	add	ip, sp, #72	; 0x48
   1051c:	ldm	lr!, {r0, r1, r2, r3}
   10520:	stmia	ip!, {r0, r1, r2, r3}
   10524:	ldm	lr!, {r0, r1, r2, r3}
   10528:	stmia	ip!, {r0, r1, r2, r3}
   1052c:	ldm	lr, {r0, r1, r2}
   10530:	add	lr, r4, #172	; 0xac
   10534:	stm	ip, {r0, r1, r2}
   10538:	add	ip, sp, #48	; 0x30
   1053c:	ldm	lr!, {r0, r1, r2, r3}
   10540:	stmia	ip!, {r0, r1, r2, r3}
   10544:	ldm	lr, {r0, r1}
   10548:	add	lr, r4, #196	; 0xc4
   1054c:	add	r4, r4, #240	; 0xf0
   10550:	stm	ip, {r0, r1}
   10554:	ldm	lr!, {r0, r1, r2, r3}
   10558:	add	ip, sp, #116	; 0x74
   1055c:	stmia	ip!, {r0, r1, r2, r3}
   10560:	ldm	lr!, {r0, r1, r2, r3}
   10564:	stmia	ip!, {r0, r1, r2, r3}
   10568:	ldm	lr, {r0, r1, r2}
   1056c:	stm	ip, {r0, r1, r2}
   10570:	add	ip, sp, #28
   10574:	ldm	r4!, {r0, r1, r2, r3}
   10578:	stmia	ip!, {r0, r1, r2, r3}
   1057c:	ldr	r3, [r4]
   10580:	ldr	r0, [pc, #804]	; 108ac <abort@plt+0x3fc>
   10584:	str	r3, [ip]
   10588:	bl	10474 <puts@plt>
   1058c:	add	r3, sp, #72	; 0x48
   10590:	str	r3, [sp, #12]
   10594:	mov	r4, r5
   10598:	add	r3, sp, #116	; 0x74
   1059c:	str	r3, [sp, #16]
   105a0:	add	r3, sp, #28
   105a4:	str	r3, [sp, #20]
   105a8:	ldr	r6, [r8], #4
   105ac:	cmp	r6, #0
   105b0:	bne	10690 <abort@plt+0x1e0>
   105b4:	ldr	r7, [sp, #12]
   105b8:	ldr	fp, [pc, #752]	; 108b0 <abort@plt+0x400>
   105bc:	ldr	r6, [r7], #4
   105c0:	cmp	r6, #0
   105c4:	bne	1073c <abort@plt+0x28c>
   105c8:	ldr	r7, [sp, #16]
   105cc:	ldr	fp, [pc, #732]	; 108b0 <abort@plt+0x400>
   105d0:	ldr	r6, [r7], #4
   105d4:	cmp	r6, #0
   105d8:	beq	107f0 <abort@plt+0x340>
   105dc:	ldr	r3, [sp, #20]
   105e0:	sub	r3, r3, r5, lsl #2
   105e4:	str	r3, [sp, #12]
   105e8:	b	107dc <abort@plt+0x32c>
   105ec:	mov	r1, #0
   105f0:	mov	r2, r6
   105f4:	mov	r0, r1
   105f8:	vstr	d8, [sp]
   105fc:	bl	10498 <snprintf@plt>
   10600:	mov	r2, r6
   10604:	mov	r1, #1024	; 0x400
   10608:	vstr	d8, [sp]
   1060c:	mov	r9, r0
   10610:	add	r0, sp, #336	; 0x150
   10614:	bl	10498 <snprintf@plt>
   10618:	vmov	r2, r3, d8
   1061c:	mov	r1, r6
   10620:	mov	sl, r0
   10624:	add	r0, sp, #1360	; 0x550
   10628:	bl	104a4 <sprintf@plt>
   1062c:	add	r1, sp, #1360	; 0x550
   10630:	add	r0, sp, #336	; 0x150
   10634:	bl	10444 <strcmp@plt>
   10638:	cmp	r0, #0
   1063c:	beq	10658 <abort@plt+0x1a8>
   10640:	add	r3, sp, #1360	; 0x550
   10644:	add	r2, sp, #336	; 0x150
   10648:	mov	r1, r6
   1064c:	ldr	r0, [pc, #604]	; 108b0 <abort@plt+0x400>
   10650:	bl	10450 <printf@plt>
   10654:	add	r4, r4, #1
   10658:	cmp	r9, sl
   1065c:	beq	10678 <abort@plt+0x1c8>
   10660:	mov	r3, r6
   10664:	mov	r2, sl
   10668:	mov	r1, r9
   1066c:	ldr	r0, [pc, #576]	; 108b4 <abort@plt+0x404>
   10670:	bl	10450 <printf@plt>
   10674:	add	r4, r4, #1
   10678:	add	r5, r5, #1
   1067c:	vldmia	r7!, {d8}
   10680:	vcmp.f64	d8, d9
   10684:	vmrs	APSR_nzcv, fpscr
   10688:	bne	105ec <abort@plt+0x13c>
   1068c:	b	105a8 <abort@plt+0xf8>
   10690:	add	r7, sp, #224	; 0xe0
   10694:	b	1067c <abort@plt+0x1cc>
   10698:	mov	r1, #0
   1069c:	mov	r3, r8
   106a0:	mov	r2, r6
   106a4:	mov	r0, r1
   106a8:	bl	10498 <snprintf@plt>
   106ac:	mov	r3, r8
   106b0:	mov	r2, r6
   106b4:	mov	r1, #1024	; 0x400
   106b8:	mov	r9, r0
   106bc:	add	r0, sp, #336	; 0x150
   106c0:	bl	10498 <snprintf@plt>
   106c4:	mov	r2, r8
   106c8:	mov	r1, r6
   106cc:	mov	sl, r0
   106d0:	add	r0, sp, #1360	; 0x550
   106d4:	bl	104a4 <sprintf@plt>
   106d8:	add	r1, sp, #1360	; 0x550
   106dc:	add	r0, sp, #336	; 0x150
   106e0:	bl	10444 <strcmp@plt>
   106e4:	cmp	r0, #0
   106e8:	beq	10704 <abort@plt+0x254>
   106ec:	add	r3, sp, #1360	; 0x550
   106f0:	add	r2, sp, #336	; 0x150
   106f4:	mov	r1, r6
   106f8:	mov	r0, fp
   106fc:	bl	10450 <printf@plt>
   10700:	add	r4, r4, #1
   10704:	cmp	r9, sl
   10708:	beq	10724 <abort@plt+0x274>
   1070c:	mov	r3, r6
   10710:	mov	r2, sl
   10714:	mov	r1, r9
   10718:	ldr	r0, [pc, #404]	; 108b4 <abort@plt+0x404>
   1071c:	bl	10450 <printf@plt>
   10720:	add	r4, r4, #1
   10724:	add	r5, r5, #1
   10728:	ldr	r3, [sp, #12]
   1072c:	ldr	r8, [r3, r5, lsl #2]
   10730:	cmp	r8, #0
   10734:	bne	10698 <abort@plt+0x1e8>
   10738:	b	105bc <abort@plt+0x10c>
   1073c:	add	r3, sp, #48	; 0x30
   10740:	sub	r3, r3, r5, lsl #2
   10744:	str	r3, [sp, #12]
   10748:	b	10728 <abort@plt+0x278>
   1074c:	mov	r1, #0
   10750:	mov	r3, r8
   10754:	mov	r2, r6
   10758:	mov	r0, r1
   1075c:	bl	10498 <snprintf@plt>
   10760:	mov	r3, r8
   10764:	mov	r2, r6
   10768:	mov	r1, #1024	; 0x400
   1076c:	mov	r9, r0
   10770:	add	r0, sp, #336	; 0x150
   10774:	bl	10498 <snprintf@plt>
   10778:	mov	r2, r8
   1077c:	mov	r1, r6
   10780:	mov	sl, r0
   10784:	add	r0, sp, #1360	; 0x550
   10788:	bl	104a4 <sprintf@plt>
   1078c:	add	r1, sp, #1360	; 0x550
   10790:	add	r0, sp, #336	; 0x150
   10794:	bl	10444 <strcmp@plt>
   10798:	cmp	r0, #0
   1079c:	beq	107b8 <abort@plt+0x308>
   107a0:	add	r3, sp, #1360	; 0x550
   107a4:	add	r2, sp, #336	; 0x150
   107a8:	mov	r1, r6
   107ac:	mov	r0, fp
   107b0:	bl	10450 <printf@plt>
   107b4:	add	r4, r4, #1
   107b8:	cmp	r9, sl
   107bc:	beq	107d8 <abort@plt+0x328>
   107c0:	mov	r3, r6
   107c4:	mov	r2, sl
   107c8:	mov	r1, r9
   107cc:	ldr	r0, [pc, #224]	; 108b4 <abort@plt+0x404>
   107d0:	bl	10450 <printf@plt>
   107d4:	add	r4, r4, #1
   107d8:	add	r5, r5, #1
   107dc:	ldr	r3, [sp, #12]
   107e0:	ldr	r8, [r3, r5, lsl #2]
   107e4:	cmp	r8, #0
   107e8:	bne	1074c <abort@plt+0x29c>
   107ec:	b	105d0 <abort@plt+0x120>
   107f0:	mov	r1, r4
   107f4:	mov	r2, r5
   107f8:	ldr	r0, [pc, #184]	; 108b8 <abort@plt+0x408>
   107fc:	bl	10450 <printf@plt>
   10800:	ldr	r0, [pc, #180]	; 108bc <abort@plt+0x40c>
   10804:	bl	10474 <puts@plt>
   10808:	vldr	d10, [pc, #136]	; 10898 <abort@plt+0x3e8>
   1080c:	vldr	d9, [pc, #140]	; 108a0 <abort@plt+0x3f0>
   10810:	ldr	r4, [pc, #168]	; 108c0 <abort@plt+0x410>
   10814:	vmov	s15, r6
   10818:	vmov.f64	d0, d10
   1081c:	vcvt.f64.s32	d1, s15
   10820:	bl	10468 <pow@plt>
   10824:	mov	r2, r4
   10828:	mov	r1, #1024	; 0x400
   1082c:	add	r0, sp, #336	; 0x150
   10830:	vmul.f64	d8, d0, d9
   10834:	vstr	d8, [sp]
   10838:	bl	10498 <snprintf@plt>
   1083c:	vmov	r2, r3, d8
   10840:	mov	r1, r4
   10844:	add	r0, sp, #1360	; 0x550
   10848:	bl	104a4 <sprintf@plt>
   1084c:	add	r1, sp, #1360	; 0x550
   10850:	add	r0, sp, #336	; 0x150
   10854:	bl	10444 <strcmp@plt>
   10858:	cmp	r0, #0
   1085c:	beq	10880 <abort@plt+0x3d0>
   10860:	sub	r1, r6, #1
   10864:	ldr	r0, [pc, #88]	; 108c4 <abort@plt+0x414>
   10868:	bl	10450 <printf@plt>
   1086c:	mov	r0, #0
   10870:	add	sp, sp, #2384	; 0x950
   10874:	add	sp, sp, #4
   10878:	vpop	{d8-d10}
   1087c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10880:	add	r6, r6, #1
   10884:	cmp	r6, #100	; 0x64
   10888:	bne	10814 <abort@plt+0x364>
   1088c:	b	1086c <abort@plt+0x3bc>
	...
   1089c:	eormi	r0, r4, r0
   108a0:	smlsldcc	pc, r6, pc, r6	; <UNPREDICTABLE>
   108a4:	svccc	0x00bf9add
   108a8:	andeq	r0, r1, r8, ror #20
   108ac:	muleq	r1, ip, fp
   108b0:	ldrdeq	r0, [r1], -r4
   108b4:	andeq	r0, r1, r9, lsl ip
   108b8:	andeq	r0, r1, r7, lsr ip
   108bc:	andeq	r0, r1, r3, asr ip
   108c0:	andeq	r0, r1, r5, ror ip
   108c4:	andeq	r0, r1, fp, ror ip
   108c8:	mov	fp, #0
   108cc:	mov	lr, #0
   108d0:	pop	{r1}		; (ldr r1, [sp], #4)
   108d4:	mov	r2, sp
   108d8:	push	{r2}		; (str r2, [sp, #-4]!)
   108dc:	push	{r0}		; (str r0, [sp, #-4]!)
   108e0:	ldr	ip, [pc, #16]	; 108f8 <abort@plt+0x448>
   108e4:	push	{ip}		; (str ip, [sp, #-4]!)
   108e8:	ldr	r0, [pc, #12]	; 108fc <abort@plt+0x44c>
   108ec:	ldr	r3, [pc, #12]	; 10900 <abort@plt+0x450>
   108f0:	bl	10480 <__libc_start_main@plt>
   108f4:	bl	104b0 <abort@plt>
   108f8:	andeq	r0, r1, r0, asr sl
   108fc:	andeq	r0, r1, r0, asr #9
   10900:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10904:	ldr	r3, [pc, #20]	; 10920 <abort@plt+0x470>
   10908:	ldr	r2, [pc, #20]	; 10924 <abort@plt+0x474>
   1090c:	add	r3, pc, r3
   10910:	ldr	r2, [r3, r2]
   10914:	cmp	r2, #0
   10918:	bxeq	lr
   1091c:	b	1048c <__gmon_start__@plt>
   10920:	andeq	r0, r1, ip, ror #13
   10924:	andeq	r0, r0, r4, lsr r0
   10928:	ldr	r3, [pc, #28]	; 1094c <abort@plt+0x49c>
   1092c:	ldr	r0, [pc, #28]	; 10950 <abort@plt+0x4a0>
   10930:	sub	r3, r3, r0
   10934:	cmp	r3, #6
   10938:	bxls	lr
   1093c:	ldr	r3, [pc, #16]	; 10954 <abort@plt+0x4a4>
   10940:	cmp	r3, #0
   10944:	bxeq	lr
   10948:	bx	r3
   1094c:	andeq	r1, r2, r3, asr #32
   10950:	andeq	r1, r2, r0, asr #32
   10954:	andeq	r0, r0, r0
   10958:	ldr	r1, [pc, #36]	; 10984 <abort@plt+0x4d4>
   1095c:	ldr	r0, [pc, #36]	; 10988 <abort@plt+0x4d8>
   10960:	sub	r1, r1, r0
   10964:	asr	r1, r1, #2
   10968:	add	r1, r1, r1, lsr #31
   1096c:	asrs	r1, r1, #1
   10970:	bxeq	lr
   10974:	ldr	r3, [pc, #16]	; 1098c <abort@plt+0x4dc>
   10978:	cmp	r3, #0
   1097c:	bxeq	lr
   10980:	bx	r3
   10984:	andeq	r1, r2, r0, asr #32
   10988:	andeq	r1, r2, r0, asr #32
   1098c:	andeq	r0, r0, r0
   10990:	push	{r4, lr}
   10994:	ldr	r4, [pc, #24]	; 109b4 <abort@plt+0x504>
   10998:	ldrb	r3, [r4]
   1099c:	cmp	r3, #0
   109a0:	popne	{r4, pc}
   109a4:	bl	10928 <abort@plt+0x478>
   109a8:	mov	r3, #1
   109ac:	strb	r3, [r4]
   109b0:	pop	{r4, pc}
   109b4:	andeq	r1, r2, r0, asr #32
   109b8:	ldr	r0, [pc, #40]	; 109e8 <abort@plt+0x538>
   109bc:	ldr	r3, [r0]
   109c0:	cmp	r3, #0
   109c4:	bne	109cc <abort@plt+0x51c>
   109c8:	b	10958 <abort@plt+0x4a8>
   109cc:	ldr	r3, [pc, #24]	; 109ec <abort@plt+0x53c>
   109d0:	cmp	r3, #0
   109d4:	beq	109c8 <abort@plt+0x518>
   109d8:	push	{r4, lr}
   109dc:	blx	r3
   109e0:	pop	{r4, lr}
   109e4:	b	10958 <abort@plt+0x4a8>
   109e8:	andeq	r0, r2, ip, lsl #30
   109ec:	andeq	r0, r0, r0
   109f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109f4:	mov	r7, r0
   109f8:	ldr	r6, [pc, #72]	; 10a48 <abort@plt+0x598>
   109fc:	ldr	r5, [pc, #72]	; 10a4c <abort@plt+0x59c>
   10a00:	add	r6, pc, r6
   10a04:	add	r5, pc, r5
   10a08:	sub	r6, r6, r5
   10a0c:	mov	r8, r1
   10a10:	mov	r9, r2
   10a14:	bl	10424 <strcmp@plt-0x20>
   10a18:	asrs	r6, r6, #2
   10a1c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a20:	mov	r4, #0
   10a24:	add	r4, r4, #1
   10a28:	ldr	r3, [r5], #4
   10a2c:	mov	r2, r9
   10a30:	mov	r1, r8
   10a34:	mov	r0, r7
   10a38:	blx	r3
   10a3c:	cmp	r6, r4
   10a40:	bne	10a24 <abort@plt+0x574>
   10a44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a48:	andeq	r0, r1, r0, lsl #10
   10a4c:	strdeq	r0, [r1], -r8
   10a50:	bx	lr

Disassembly of section .fini:

00010a54 <.fini>:
   10a54:	push	{r3, lr}
   10a58:	pop	{r3, pc}
